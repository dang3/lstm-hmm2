push
call
ret
ret
push
movsl
xchg
lods
loope
jecxz
sbb
in
test
xor
push
mov
int3
stos
cli
cmp
sub
fldl
xor
dec
inc
loopne
push
adc
xchg
pop
jle
fimuls
pop
sbb
sbb
cmp
pusha
xor
jne
push
or
in
shll
mov
adc
xor
push
mov
dec
outsl
push
or
lods
inc
int
lds
mov
ret
movsl
outsb
inc
pop
fdivrl
jg
inc
mov
cltd
int3
mov
mov
cmp
or
shrl
cmp
jge
xlat
nop
mov
xor
or
cmpsb
jae
mov
xlat
nop
fnsave
adc
pop
inc
inc
icebp
mov
sub
cmp
cmp
jmp
movl
scas
pop
lret
enter
jle
enter
cmp
push
cld
push
or
xchg
stos
push
test
ljmp
rclb
push
and
sbb
scas
or
xor
pop
lret
pop
sub
pop
sub
jle
enter
in
pushf
shr
test
icebp
jl
ja
in
daa
inc
bound
push
xchg
out
mov
inc
inc
or
cltd
pop
int3
cmpb
push
das
xor
in
mov
lcall
aaa
test
adc
cmp
mov
dec
push
popf
xchg
loop
inc
and
fcmovnb
out
scas
sbb
xchg
rcll
xchg
sbb
mov
psubw
mov
jle
push
xchg
or
inc
aad
sti
or
popa
in
testl
popf
jns
jl
lds
stc
data16
push
mov
ljmp
pop
in
ds
jg
aas
adc
or
imul
push
cs
inc
cmp
push
mov
sub
push
cmp
pop
in
sub
push
pop
and
ret
xchg
or
rcrb
cmp
sbb
outsb
adc
out
cmp
xchg
mov
fisubl
call
xchg
sbb
test
cli
adc
sub
jle
scas
xchg
pushf
push
lcall
push
loopne,pn
mov
jge
mov
mov
pop
and
in
out
sbb
popf
or
dec
aad
jecxz
inc
mov
mov
or
adc
jl
inc
sar
xor
sub
loop
jg
cmp
xchg
iret
jp
mov
push
fs
movsl
xor
test
jnp
inc
das
je
jl
xor
nop
sub
sub
or
xor
lock
inc
nop
jnp
fnstenv
outsb
das
fwait
in
cmp
rolb
aam
rcrl
daa
arpl
movsl
cltd
push
push
mov
or
sub
inc
testl
shlb
ds
adc
or
inc
stc
dec
pop
pushw
sbbb
stos
add
pop
mov
cmp
insb
test
pop
sbb
push
and
push
xor
out
mov
adc
cld
lds
rolb
mov
inc
outsl
cmp
mov
mov
icebp
add
inc
sbb
jl
ret
inc
xchg
ficoms
dec
mov
insl
mov
aaa
sub
xor
jns
fsubl
jl
mov
lods
xchg
lods
jg
and
mov
and
sbb
fidivs
xchg
fucomi
cwtl
lret
add
jecxz
and
stos
add
pop
push
dec
fwait
add
sub
pop
imul
cmp
push
fwait
ljmp
ror
popw
xor
push
aad
mov
movsb
hlt
fldcw
sub
push
add
cmpsl
mov
fisubl
jg
xor
gs
pop
nop
test
pop
dec
cmc
and
mov
xor
push
idivb
mov
repz
pop
mov
dec
push
je
cmp
xchg
aam
jb
add
cltd
mov
sbb
mov
cs
jl
orb
in
mov
mov
pop
ret
jo
sbb
fists
fucomp
sub
stos
inc
push
andb
mov
fwait
lods
sbb
pop
xchg
stos
mov
addb
jl
dec
mov
popl
dec
ret
out
push
aad
aam
xor
in
out
push
mov
dec
add
jnp
mov
adc
shll
shrb
jne
test
pop
jg
cmc
xchg
popa
test
push
daa
adc
cmp
dec
jno
mov
xlat
jge
std
rcll
xorl
push
hlt
test
scas
dec
mov
cmc
std
iret
stos
xor
bound
or
fimull
add
fcomi
pop
les
popf
gs
call
pop
lahf
mov
add
sub
xor
xchg
sub
ja
or
cs
pusha
xor
adc
mov
cs
add
xchg
push
jmp
xchg
ffree
call
cwtl
add
in
call
add
pop
mov
pop
lret
lret
jmp
andl
cmc
jmp
inc
dec
les
mov
and
sti
dec
rcl
in
mov
inc
push
xchg
lcall
sbb
scas
arpl
add
cmp
call
add
and
stos
scas
aas
inc
mov
mov
add
shlb
adc
std
das
mov
jae
bound
pop
pop
or
inc
cmp
repnz
jne
dec
outsb
sbb
stc
mov
and
fsts
add
add
add
shll
cltd
mov
inc
sti
sbb
incb
inc
jmp
sub
ret
popa
adc
idivl
and
add
add
mov
fisttps
lds
mov
jno
xchg
push
test
nop
sarl
mov
lods
scas
fisubl
lock
mov
or
and
mov
add
test
or
in
xor
xchg
push
movsl
mov
jge
lock
dec
fmull
xchg
aad
sbb
mov
call
adc
sub
scas
movsb
imul
in
leave
cli
js
lcall
inc
aad
scas
mov
xchg
out
mov
aaa
xchg
testl
push
xchg
lcall
jmp
sub
in
out
lcall
add
inc
push
out
mov
pop
dec
out
pop
add
lret
dec
cwtl
mov
push
daa
push
xchg
gs
sub
cs
add
jmp
inc
lret
leave
test
push
int3
push
push
test
in
push
inc
cmpsb
pusha
mov
vmread
add
pop
mov
std
dec
pop
iret
adc
mov
jo
rolb
jo
jg
aam
jl
mov
mov
repnz
jbe
xor
xchg
dec
jge
xor
inc
sbb
cmp
pop
std
mov
adc
adc
enter
add
adc
push
xchg
imul
stos
je
sahf
push
sar
fildll
clc
jmp
insb
fwait
in
add
mov
decl
lods
or
add
cltd
lret
jmp
movsb
imul
subb
dec
xchg
or
cmp
xor
adc
test
cmp
push
inc
or
shl
test
xchg
lret
mov
rcl
fdiv
and
dec
std
sub
sbb
adc
sarl
jle
pop
pop
xor
or
cmp
and
cmp
les
inc
adc
adc
test
mov
cmp
push
mov
aam
mov
pop
mov
daa
jg
popa
leave
add
sbb
jmp
push
mov
or
in
jge
dec
les
mov
jge
and
xchg
cmp
inc
pminsw
mov
or
inc
xchg
xor
mov
xor
shr
das
lcall
jmp
push
stos
out
arpl
adc
inc
sti
dec
cmp
dec
arpl
mov
push
incb
vpsllq
pop
push
enter
imul
sarb
xor
test
arpl
fiaddl
and
xor
xchg
mov
fildl
clc
mov
scas
testb
int
add
arpl
fistpll
stos
hlt
aam
mov
push
inc
sbb
add
or
mov
pop
out
dec
and
xlat
sbb
xor
sti
imul
es
dec
scas
jge
mov
rol
mov
in
sub
adcl
cs
imul
or
test
xor
arpl
and
cmp
lahf
imul
iret
mov
fmull
xor
lock
fs
pop
mov
cmp
inc
adc
pop
cmp
cld
mov
jns
push
push
cmp
iret
jno
test
jo
sbb
cmp
aas
add
cmp
aam
sbb
lret
leave
pop
xchg
fwait
dec
rcrb
xor
outsl
gs
mov
sbb
or
mov
xor
mov
cmp
pop
push
mov
icebp
dec
xchg
add
dec
lret
push
bound
popa
add
sbb
fsubl
in
bound
xor
call
ret
sar
rorl
xchg
out
sub
aad
imul
aaa
fbstp
bound
jmp
inc
dec
ja
add
jle
adc
fcmovu
adc
or
pop
outsb
rolb
jmp
call
lcall
imul
test
sub
dec
or
cwtl
xchg
inc
inc
ja
aaa
test
cmp
scas
mov
mov
cmp
pop
pop
or
shr
add
push
xchg
and
mov
aam
repnz
in
mov
xor
inc
xor
jo
loop
ds
in
xchg
push
data16
dec
aaa
shrl
repz
xchg
scas
xchg
jge
out
leave
filds
ss
fnstenv
dec
shr
and
xchg
mov
xor
xchg
movsl
out
xchg
mov
mov
sar
popa
pop
jge
mov
sahf
lods
test
shlb
push
repnz
ret
notb
sbb
out
add
inc
jne
out
icebp
xlat
push
xor
data16
sbbl
sbb
mov
insl
cltd
add
xchg
fwait
mov
mov
sub
mov
pop
fucomip
lock
sbb
bswap
xlat
lods
pop
in
or
cltd
adc
imul
pop
or
xchg
je
cmp
mov
fs
push
or
fmuls
aam
fmuls
incl
repnz
mov
mov
mov
dec
cmpsb
in
push
js
pop
add
aas
mov
mov
aad
imul
or
out
sbb
add
pushf
aaa
pop
dec
mov
lret
jle
popa
jbe
inc
sub
mov
jl
jge
ss
xor
insb
cmp
cmpsb
cmp
jo
add
sub
mov
or
and
adcb
fdivl
into
hlt
mov
icebp
cmpb
inc
loop
leave
and
loope
shlb
lret
dec
outsb
jae
popa
addl
sub
inc
ja
push
insb
enter
in
in
shrb
insl
push
jp
test
lret
sub
outsb
shll
pop
out
sahf
adc
stc
xor
cmp
cltd
lret
mov
dec
jle
mov
ficomps
js
loope
or
inc
xor
and
daa
jge
cmp
jnp
js
loop
add
pop
mov
sbb
cli
adc
jb
cwtl
cmpsb
adc
sbb
jb
jle
push
call
in
pop
push
cmp
shrl
testl
stos
paddsb
fisubrs
jns
movsl
mov
adc
lds
xchg
and
aad
hlt
push
cmpsl
sub
xchg
add
and
sub
push
xlat
js
inc
adc
aas
fadd
add
rorb
push
adc
insl
lret
ret
or
ret
movsl
dec
scas
and
mov
or
in
push
mov
inc
and
pushf
mov
jno
and
and
sub
or
jno
push
push
xor
push
into
flds
jno
test
sbb
pop
ss
jbe
hlt
mov
loop
repz
add
je
popa
adcl
ficoml
dec
in
mov
or
xchg
ret
test
inc
movsl
and
inc
jl
scas
add
xor
iret
hlt
notl
ja
jo
sbb
data16
jae
cwtl
or
push
xlat
loope
inc
sbb
cltd
fwait
out
insb
test
push
xor
sub
notb
push
xchg
add
sub
gs
jmp
es
dec
out
je
movsl
pop
cmp
ret
cmp
mov
loopne
inc
out
jbe
mov
in
pop
add
popf
push
pusha
sub
cmc
pop
push
jg
mov
clc
sub
sahf
jnp
arpl
aas
shlb
test
mov
or
push
cmp
cmpsb
adc
xchg
cwtl
pushf
fst
mov
xor
xor
pop
lods
ljmp
outsb
cmp
sahf
sbb
fsubrs
iret
cltd
pushf
mov
imul
and
sti
mov
movsl
movsb
xor
gs
aad
outsw
divb
lret
adc
shrl
jle
pop
fwait
push
test
ljmp
jno
pusha
popf
push
enter
push
add
stos
bnd
daa
fs
push
fcomip
sub
jmp
jge
arpl
dec
out
lods
addl
jmp
roll
sub
push
cmp
out
into
sbbl
mov
mov
cwtl
lods
fcoms
cli
addb
dec
and
and
cmp
testl
cmpsl
sahf
cli
push
das
mov
lahf
or
pop
sbb
sub
ret
sbb
sub
or
and
dec
sbb
fsubrs
clc
into
movsl
jmp
mov
and
jmp
fisubs
lret
dec
cmpsl
lahf
adc
insl
mov
cmpsb
dec
sub
js
aam
sbb
pop
fcomip
data16
xlat
dec
xor
jg
in
inc
ret
add
mov
aas
out
cwtl
js
iret
jmp
in
notb
mov
nop
es
rcrl
ret
jl
xchg
iret
sbb
xchg
cmpsb
mov
dec
outsl
std
cltd
add
cltd
mov
mov
mov
sub
rcll
ss
and
lret
pop
push
xchg
outsl
data16
mov
enter
xchg
shl
mov
scas
fcomps
inc
xchg
push
int3
in
outsw
sbb
sbb
mov
ret
xchg
or
mov
lret
cmp
jns
leave
sbb
cmpb
cmp
dec
loope
mov
out
fcomip
mov
or
test
sbb
mov
mov
aas
daa
sub
sub
mov
sarl
into
out
xchg
cmp
popf
lock
aaa
cli
pop
fstpt
cmpsb
jno
insl
mov
addr16
rcl
ja,pn
or
mov
aad
mov
test
inc
and
fcmovu
xor
fcompl
mov
stos
jo
mov
frstor
add
push
dec
dec
push
in
mull
and
inc
fstps
dec
or
push
jl
fsubrl
push
mov
inc
repnz
lret
pop
or
push
test
push
aad
je
fdivrl
or
imul
shl
jmp
sub
add
std
sub
andb
cmpsl
cli
popa
cwtl
dec
jecxz
gs
sub
mov
ja
sbb
loop
insb
cmp
cltd
pusha
add
das
push
push
or
cmpsl
mov
in
xchg
jg
out
int
mov
adc
pop
pop
and
bound
dec
out
hlt
jl
push
stos
jo
in
inc
stos
lock
in
sub
xor
push
push
jne
jmp
xlat
fsts
jae
stos
loopne
leave
pop
mov
iret
arpl
xorb
push
in
out
test
push
cli
lret
outsb
mov
jp
arpl
mov
or
push
inc
pop
loope
fadd
mov
dec
adc
sub
fwait
add
dec
inc
daa
loope
aam
sub
in
mov
icebp
cld
xchg
fisubrl
dec
adc
push
mov
fmull
out
push
sub
jns
jge
dec
out
in
dec
insb
adc
cli
or
lahf
js
mov
les
stos
icebp
out
cmp
sbb
xor
mov
idivl
push
mov
or
popf
scas
int3
repz
sbb
jns
ds
inc
and
ss
nop
jecxz
jmp
xchg
test
jno
cld
sub
scas
enter
cmp
fldl
adc
cmp
mov
jo
pop
ficoml
lods
icebp
xor
test
popf
inc
pop
movsl
sub
mov
cs
or
ret
cmp
rcll
je
fdiv
mov
xchg
aaa
daa
push
cld
out
inc
mov
xchg
add
and
ja
shll
fwait
test
sbb
push
icebp
xchg
popf
sar
or
cmp
hlt
pop
stos
push
sahf
xor
outsl
lret
lea
cld
jae
incb
lea
popf
jecxz
sub
xchg
adc
leave
xorl
inc
dec
push
rcl
inc
sbb
jl
xor
inc
fidivrs
cmp
scas
fcmove
fucomp
add
and
fldenv
sbbb
loopne
insl
jb
ljmp
dec
ja
xor
mov
dec
adc
sbb
push
das
jno
mov
lods
cmc
out
dec
pushf
mov
jnp
push
inc
repz
clc
fsubrs
or
sbb
cwtl
push
lahf
nop
dec
hlt
in
xor
outsl
ds
mov
repnz
or
xor
jmp
js
ljmp
mov
push
or
out
aad
pop
push
add
cmp
xchg
inc
jge
cwtl
pop
dec
fldl
int
pop
fsub
ljmp
test
rcr
js
hlt
sub
xor
fidivrs
arpl
mov
sub
clc
jbe
insl
dec
stc
addl
pop
shll
leave
test
xor
adc
and
dec
inc
mov
iret
loopne
popa
or
dec
mov
pusha
in
add
jb
lea
ljmp
pop
test
cmp
outsl
dec
js
dec
insb
lret
xor
das
movsl
push
push
rcrb
and
and
inc
sbb
pop
or
mov
hlt
mov
add
mov
push
jg
hlt
dec
xor
push
sbb
pushf
dec
or
test
pop
pushf
pop
and
in
mov
mov
dec
adc
divb
jge
jmp
sub
and
lods
stc
repnz
pop
fwait
je
test
add
roll
adc
mov
subl
pop
xchg
out
and
je
mov
pop
pop
and
mov
add
pop
popl
cld
add
xchg
lret
sbb
push
adc
pop
inc
cmpsb
add
jmp
mov
test
dec
cmp
xchg
in
inc
sbb
push
add
insl
clc
cmp
xchg
cvtdq2ps
mov
mov
imul
aad
cld
dec
fisubl
adc
mov
push
xlat
mov
es
fimull
sahf
je
inc
fwait
mov
ds
sar
sbb
xchg
add
and
adc
subb
ds
mov
lods
mov
adc
push
lock
jne
frstor
movl
pop
movsl
shr
dec
xor
xchg
outsl
rcll
outsb
lea
dec
shrb
faddl
hlt
cmp
test
test
pusha
and
cmp
add
mov
xor
outsb
cwtl
and
addr16
outsl
nop
sbb
adc
xchg
cmpsl
push
out
xor
loopne
shll
inc
popa
aas
aad
add
mov
popf
rorl
scas
sbb
push
fisttpll
inc
push
mov
dec
lret
lret
test
or
addr16
sarb
std
mov
das
mov
or
inc
icebp
clc
insb
stos
test
sbb
xchg
es
xchg
sub
push
sub
outsb
lods
add
ret
or
and
test
adc
inc
arpl
add
lods
out
sub
das
iret
cmovnp
andl
lods
or
mov
add
pop
jecxz
ja
fwait
inc
aam
sbb
pop
into
jle
movsl
lds
adc
add
pop
and
xchg
shrl
frstor
inc
cmpsl
mov
rorl
dec
sub
repz
inc
mov
sbb
aam
fiaddl
inc
outsb
test
dec
adc
enter
ljmp
fimuls
add
icebp
sbb
fdiv
adc
mov
loop
jnp
dec
pop
icebp
add
stos
xchg
fucomip
mov
fistpl
inc
xor
mov
cmpsl
jnp
sub
lea
adc
mov
inc
lock
mov
fwait
sub
or
sbb
push
repz
testl
nop
test
outsl
xor
pop
lock
fimull
cmpsb
xor
rorl
sbb
les
push
push
ja
adc
mov
fnstenv
rcl
jno
or
loope
and
sub
sub
sub
fmull
jmp
dec
pop
fcomps
mov
fstl
insb
cmp
mov
xchg
mov
scas
lods
pop
mov
jecxz
pop
cs
loop
icebp
jbe
fcompl
jne
lret
sub
push
mov
mov
fldcw
std
mov
fnstcw
jp
ja
xchg
ret
mov
adc
lock
dec
mov
inc
lods
mov
js
jo
lds
mov
add
adc
xor
push
into
pop
daa
add
add
or
add
je
enter
xor
pop
fidivs
scas
sub
xchg
jp
xchg
jne
cltd
lods
xchg
xchg
dec
inc
dec
call
lret
test
sbbb
inc
ljmp
ret
gs
mov
outsb
cli
ss
cmp
cmp
inc
pop
mov
ret
rcrb
insl
pop
inc
xchg
subb
jecxz
testb
mov
fbstp
fldl
jnp
lods
test
mov
cmpsb
or
xor
xorl
xor
repnz
or
cli
add
ss
iret
dec
iret
shll
pop
mov
roll
mov
mov
add
jae
push
mov
add
inc
adc
cmp
pop
mov
jg
loope
mov
push
cmp
jnp
cld
jmp
xor
xchg
imul
add
pop
jg
and
adc
pop
jne
daa
dec
jl
push
mov
aad
repnz
and
xchg
aas
mov
mov
cwtl
and
adc
enter
out
mov
dec
in
outsb
sub
int3
outsb
idiv
orb
lods
inc
or
in
xor
popf
mov
jae
and
fidivs
and
xlat
mov
repz
inc
js
inc
xor
add
imul
std
or
add
repz
push
outsb
mov
ja
jnp
mov
xchg
in
pop
pop
fadds
add
ljmp
mov
xchg
pop
push
mov
lcall
jne
jmp
jnp
inc
scas
push
negl
mov
jmp
push
insl
fdivs
mov
faddp
xlat
lret
adc
aad
pop
ret
adc
sbb
cld
icebp
nop
jo
ret
pop
and
mov
push
xchg
fcoml
test
loope
cmc
mov
cmp
add
fisttps
cmpsl
mov
int
mov
mov
mov
add
mov
jnp
and
or
adc
sub
ja
push
lds
sub
fistpl
cs
jge
mov
fwait
cmp
test
push
incb
into
pop
cltd
xchg
loope
push
test
or
mov
ds
add
lods
and
pop
mov
in
lock
fucomi
into
in
cli
mov
insl
add
mov
pushl
pushf
sub
mov
xchg
mov
fstps
sbb
adc
inc
mov
cmc
out
loopne
adc
dec
fnstenv
push
leave
les
xchg
inc
mov
shl
xchg
push
and
adc
bound
mov
or
lods
mov
sbb
add
dec
jg
out
sbb
add
and
jno
mov
rcl
push
loop
add
ret
jmp
or
mov
inc
and
jmp
add
mov
lret
mov
pop
lods
adc
les
popl
add
mov
dec
fldl
hlt
negb
aam
into
cmp
fstps
mov
dec
push
ss
or
fistl
sbb
shll
adc
dec
sbb
stc
adc
sub
das
sub
in
loope
push
adc
fldt
push
mov
data16
in
xorl
les
rorl
inc
scas
shll
fists
clc
xchg
mov
repz
and
mov
ss
fistl
cld
mov
neg
and
add
int
sbb
sysret
scas
nop
stos
add
jnp
mov
sbb
jecxz
dec
pop
push
and
mov
ss
mov
or
mov
test
mov
sbb
pop
or
pop
push
sbb
lock
ss
sbb
outsb
ret
sub
xchg
sbb
cmp
sbb
ja
mov
mov
push
leave
lods
test
mov
mov
cwtl
loope
inc
cltd
cmp
stos
testb
shr
mov
and
addr16
les
sahf
test
dec
dec
adc
movsl
sti
xchg
sbb
fildll
test
jae
fcmovbe
pop
outsb
cmp
or
jecxz
push
jne
fs
aad
push
pop
repz
ret
fmull
ja
lcall
mov
or
out
dec
mov
cmp
mov
scas
and
pop
inc
jecxz
pop
cmp
inc
push
and
or
cmp
clc
testl
or
and
hlt
or
sub
cmpsb
jo
add
or
in
xchg
xorl
and
ret
cltd
insl
stos
and
pop
shlb
cmpsb
scas
mov
lock
xchg
orb
push
pop
jmp
imul
cli
andb
push
int3
movsl
lock
inc
adc
cmp
mov
lock
xor
test
jne
aad
ss
mov
or
jecxz
dec
add
sbb
mov
mov
sarl
and
inc
std
fidivrl
pop
into
mov
dec
jno
jno
jg
and
lods
lds
mov
fdivl
cltd
mov
pop
jne
adc
cs
test
rcr
rclb
ret
call
pop
dec
in
mov
into
sarb
movsb
fdivl
fcom
xchg
ret
xchg
das
add
dec
stos
cwtl
out
lret
mov
inc
loopne
xchg
cmp
addr16
fadd
cmp
push
std
xor
add
bound
jg
ss
gs
mov
ret
addr16
jbe
mov
pushf
mov
shlb
mov
nop
test
pop
lds
cmpsl
mov
adc
in
xchg
cmp
adc
xor
lcall
icebp
add
fldt
and
push
ss
fmulp
fwait
and
mov
and
arpl
icebp
push
out
and
pop
cvtps2pd
in
test
rorl
mov
fs
pop
notl
sar
ss
mul
cld
subb
cmp
add
lods
bound
fistps
loop
xchg
call
js
sbb
cs
fldl
iret
mov
negb
inc
inc
push
pop
jmp
addr16
push
jmp
or
je
mov
pop
jnp
mov
push
mov
daa
or
ss
xchg
in
jne
aam
fwait
and
ljmp
add
and
int3
je
mov
and
jmp
inc
push
sbb
fprem
pop
push
xor
xchg
pop
incl
mov
fimuls
fwait
inc
cmp
or
pusha
scas
cmp
or
sbb
push
jb
pop
sbb
cmp
pop
inc
pusha
icebp
mov
nop
add
rep
cmp
cltd
rorb
dec
jl
das
and
movsb
jl
pop
test
mov
fwait
in
decb
nop
sub
sahf
and
cmp
dec
xlat
mov
lcall
lods
mov
jecxz
xor
lahf
stc
lret
push
outsb
cmp
std
pushf
pop
xlat
sbbb
mov
xor
es
call
insl
orl
out
insb
or
xor
iret
fcomps
out
into
mov
rcl
sub
push
lods
sbb
sbb
in
push
outsb
inc
or
xchg
sub
mov
mov
cmp
iret
stos
jp
ljmp
movsb
divl
xchg
mov
mov
sbb
int
fs
ljmp
add
sub
test
call
stos
addr16
out
mov
mov
add
adc
pusha
lcall
add
pop
dec
es
loopne
sbb
dec
cmp
xor
std
nop
and
mov
jg
lret
xchg
pop
std
int
push
mov
gs
and
xlat
cmp
rorb
add
jns
test
mov
fsubrs
pop
pusha
test
cmp
and
fists
shr
lret
push
xchg
pop
notb
fistpll
fs
aam
mov
test
shrb
mov
pop
les
pop
cmc
add
xor
decb
cli
movsb
add
sub
arpl
idiv
aaa
mov
shll
cld
fdivs
jns
xor
xor
pop
pop
movl
sub
popf
pop
rorb
ljmp
jmp
imul
jg
dec
jmp
mov
clc
hlt
ss
sub
outsb
push
daa
cli
mov
dec
jns
add
push
and
xor
insb
popf
pop
popf
adc
enter
das
in
cltd
add
loope
adc
sti
sahf
cs
jo
cli
gs
push
xor
sub
fildl
jnp
lret
cld
push
xchg
sbb
lock
lods
jl
add
jp
fs
int3
gs
jg
push
jnp
jno
pop
lcall
inc
xchg
in
inc
jmp
mov
js
les
xor
sbb
inc
add
push
out
fiadds
pushf
test
adc
stc
aad
jae
mov
mov
test
loop
sub
jp
bound
fwait
xor
mov
into
mov
cmp
sub
daa
bound
push
mov
xchg
and
icebp
jle
stos
adc
add
pop
sub
adc
jnp
ja
clc
pop
ja
repz
pop
cmp
cltd
pop
into
movsl
or
jp
rcll
fisubrs
test
insb
test
mov
and
ljmp
mov
stos
enter
mov
sbb
aad
fldl
xchg
lods
push
pusha
data16
movsb
push
mov
std
sbbb
into
sub
mov
pop
test
jge
or
ljmp
inc
lods
jne
sbb
repnz
outsb
add
sti
cmp
adc
ljmp
push
xchg
mov
sub
pop
pop
cmp
cld
adc
pop
pop
add
jb
lea
clc
dec
sub
inc
pop
mov
mov
aaa
repnz
pushf
sbb
push
lahf
dec
mov
add
loopne
rolb
mov
popf
xor
cwtl
push
out
icebp
jne
mov
and
sbb
loopne
xlat
xlat
xchg
pop
mov
pop
cld
sbb
cwtl
lock
lods
ds
inc
pop
mov
iret
xlat
addr16
jmp
jmp
jecxz
xor
loope
idivl
inc
movl
dec
sahf
imul
push
jae
lea
lea
sti
jp
sahf
jle
xor
xchg
out
test
ljmp
cmp
in
lret
mov
xor
pop
jecxz
dec
stc
mov
push
int3
jns
iret
dec
call
dec
add
les
in
nop
faddl
mov
dec
iret
rcr
fs
mov
adc
mov
mov
imul
sbb
fs
sub
and
add
push
cmpsl
in
push
rcll
mov
cmc
jb
cmp
sub
sub
or
or
fwait
dec
add
pop
pop
xchg
pop
add
out
int
mov
movsl
fbstp
dec
sbb
pop
test
aam
add
dec
mov
roll
mov
jecxz
and
cmp
inc
cmpsb
adc
test
sbb
fstps
push
arpl
jnp
xchg
push
mov
xor
mov
fstpl
adc
sub
mov
sbb
mov
and
push
enter
mov
mov
lahf
inc
add
outsb
daa
add
xorl
test
and
rcrb
shll
mov
jns
jbe
or
cmpsl
movsb
in
pop
ret
cmpsb
add
sub
insl
add
mov
stos
xchg
mov
cmpsl
enter
movsb
mov
sbb
add
mov
stc
add
in
sub
js
inc
popf
jnp
fisubrs
adc
mov
jnp
loopne
bound
xchg
out
jge
adc
mov
lea
sbb
push
lea
mov
push
add
movsl
clc
xchg
ret
sbbb
add
daa
xchg
inc
lret
mov
arpl
and
jp
repnz
fnstcw
jp
lahf
rolb
adc
push
dec
adc
movsl
dec
ja
stos
popf
pop
cwtl
inc
sbb
fidivrl
daa
int
dec
js
or
into
inc
push
leave
cltd
mov
rcrb
and
inc
data16
stos
out
mov
and
dec
mov
or
mov
inc
rcrb
xchg
into
shl
lods
xchg
xchg
mov
push
jecxz,pn
rol
push
mov
add
jb
inc
out
push
cs
dec
sub
pop
fimuls
jo
in
jge
roll
jnp
lods
dec
xor
cli
sbbl
nop
popa
es
xacquire
xor
lods
cltd
je
dec
imul
mov
or
pop
mov
xchg
das
cltd
stc
cmp
or
cltd
sub
clc
repnz
and
mov
mov
mov
adc
in
jg
adc
dec
dec
aad
sub
int
outsb
mov
dec
dec
mov
jo
cmpsb
out
sarl
inc
fcompl
jmp
add
mov
insb
lods
bound
icebp
in
aam
ret
mov
sub
clc
insb
mov
jmp
insb
mov
sub
subb
cmpsb
dec
mov
cmp
push
aaa
cmp
mov
push
inc
xor
pop
sbb
ficompl
xor
fstps
lret
sbb
sbb
das
movsb
pushl
inc
inc
cmc
and
add
cld
incl
add
cli
push
out
inc
push
subl
dec
xlat
mov
mov
inc
adcb
mov
shlb
adc
shrd
dec
xlat
icebp
or
push
mov
inc
mov
aam
jne
dec
cmp
mov
rcr
repnz
cwtl
test
ret
scas
hlt
mov
setge
outsb
sbb
int3
out
cli
cmp
inc
sub
inc
adc
cmp
inc
fmul
mov
dec
aam
imul
cltd
sbb
stc
test
sbb
call
sarb
jge
addr16
addr16
fstl
call
loope
mov
and
cmp
js
cmp
rclb
mov
dec
fcom
or
mov
imulb
add
mov
push
inc
mov
stos
dec
xor
xchg
inc
cmpb
jbe
pop
mov
stos
js
mov
mov
inc
iret
rorl
fwait
test
xchg
test
dec
mov
push
outsl
ret
inc
or
in
push
and
add
pop
mov
push
jo
pop
movsb
jp
sti
lcall
mov
and
or
mov
hlt
cmp
mov
mov
lret
adc
iret
sti
jp
rep
or
and
aaa
sti
mov
add
xchg
subb
sar
pop
cwtl
jae
add
mov
sub
cltd
or
fdivp
popa
mov
mov
dec
call
dec
pop
adc
jecxz
push
pop
arpl
xor
pop
cli
or
mov
je
dec
movsb
mov
lcall
data16
rcll
xor
ja
pop
pusha
icebp
cmp
sub
push
ret
pop
mov
lods
sahf
mov
sub
mov
stc
or
and
xchg
dec
cwtl
sarl
xchg
and
insl
lret
push
hlt
pop
inc
mov
jl
cwtl
jle
test
out
dec
inc
jb
cmpl
adc
lret
out
jmp
imul
xor
dec
mov
ret
adc
pop
mov
ljmp
wbinvd
mov
loope
add
js
jae
stos
aaa
lahf
sub
lahf
movsb
das
xor
lock
sbb
mov
mov
push
adc
adc
cltd
or
and
jae
push
push
movlps
sub
faddl
push
mov
repz
fistps
dec
pop
adc
cltd
lock
popf
fsts
icebp
xor
or
mov
push
cwtl
arpl
outsb
mov
mov
add
data16
push
dec
inc
push
push
out
dec
rol
xchg
jle
inc
adc
jl
mov
adc
and
leave
xchg
xor
push
pushf
add
push
dec
push
dec
add
add
es
mov
jecxz
lock
add
lea
mov
shlb
add
lock
push
pop
and
xor
leave
lods
int3
addr16
mov
push
inc
cmp
idivb
mov
test
js
push
roll
aaa
popa
mov
std
push
sti
sbb
into
dec
lret
push
mov
add
int
xchg
xor
js
sub
insl
adc
inc
cmp
cs
dec
outsb
and
mov
dec
xor
int
cmp
adc
jge
daa
and
sbb
fcomps
call
je
dec
inc
jb
test
aad
rcrb
andl
jbe
bound
or
jb
mov
ret
inc
adcl
push
and
sub
repnz
mov
dec
andb
into
inc
push
lods
icebp
popa
add
scas
push
jge
inc
movb
push
cmpsl
pop
mov
cmpsb
or
push
and
aam
inc
cmp
mov
hlt
and
inc
pushf
sub
xchg
pushf
sahf
stc
mov
int3
scas
and
fldt
imul
xor
ljmp
mov
dec
push
fmul
mov
es
rcr
sahf
fwait
push
sbb
in
mov
outsl
js
ss
repnz
xchg
xlat
test
mov
and
mov
scas
and
movsb
out
stos
sbb
repnz
jp
in
in
lahf
inc
xchg
in
aam
roll
call
dec
push
dec
out
push
xchg
jecxz
call
mov
xor
enter
testb
mov
dec
aaa
jb
in
in
sbb
and
loopne
or
loope
xchg
mov
dec
pushf
jbe
xor
and
cwtl
xchg
fsub
or
inc
inc
jle
sbb
push
stos
xor
fcmovnbe
jb
insb
ds
jmp
xchg
pop
and
movsl
push
fwait
out
arpl
out
pop
add
in
mov
push
fs
lret
sub
mov
xchg
add
or
fs
gs
fcmovbe
outsl
popf
lret
bound
stos
cmp
cs
test
push
movl
jl
push
add
jle
inc
stc
lcall
fidivrl
mov
int
xchg
adc
jae
in
mov
inc
mov
das
repz
sahf
mov
repnz
loope
xor
xor
cmp
mov
jge
mov
dec
ljmp
into
rol
mov
ss
insb
outsl
mov
xchg
mov
arpl
lock
popf
loop
mov
ds
pop
nop
int3
fwait
mov
lods
aad
std
add
lock
inc
and
cwtl
jp
sub
in
insl
int
int3
fs
sub
sub
or
sbb
cmc
xor
mov
inc
lock
mov
dec
lods
cmp
mov
stos
sbb
inc
cltd
je
loope
or
jo
jp
mov
sub
mov
lahf
and
add
xor
dec
push
cmpsl
jbe
mov
data16
xchg
je
icebp
dec
repz
mov
push
jns
pushf
or
xchg
repnz
push
aam
cmp
mov
stos
jge
sub
rolb
add
lcall
sub
es
ljmp
sti
insb
rolb
hlt
or
jl
mov
lahf
jnp
mov
lock
or
sbb
fwait
int
out
das
jb
cmpsb
ss
jecxz
sub
daa
filds
aad
mov
loope
mov
rol
cltd
aas
je,pt
jmp
mov
shlb
add
jle
mov
cs
mov
aas
subl
mov
adcb
cmc
sti
add
stc
out
dec
pop
dec
xchg
and
sub
mov
cmp
pop
mov
xor
xchg
sbb
jg
sbb
or
dec
sahf
in
out
inc
fsts
mov
into
cmp
sbb
outsl
mov
shrl
std
xor
in
lret
sarl
es
xchg
mov
cmp
out
outsb
shl
lods
movsb
and
insl
sbb
lods
fstl
dec
in
shlb
adcb
movups
cmpsl
js
icebp
pop
mov
ret
iret
push
push
addr16
pop
sub
dec
dec
or
js
push
fxam
push
push
out
pop
pop
repz
inc
movsl
arpl
pop
add
sbb
sub
aaa
test
and
dec
jp
jge
mov
lcall
dec
adc
adc
aad
jne
aad
fdiv
xor
imul
adc
dec
or
xlat
mov
jo
mov
pop
mov
push
xchg
mov
ja
xor
mov
jge
sub
ret
ret
xchg
cmp
sub
sub
lea
mov
mov
or
iret
jmp
ds
jo
mov
sbb
jmp
ja
mov
divl
adc
lahf
sbb
dec
cld
dec
lds
push
jg
push
jns
ret
lods
lret
out
mov
dec
es
jb
les
iret
sub
leave
fwait
cmc
jae
subb
dec
cmpsb
xchg
sub
xor
xor
inc
jmp
add
cld
sbb
mov
mov
mov
lret
dec
sbb
js
into
push
test
jg
jae
scas
aad
add
pop
or
pop
sub
xchg
icebp
out
mov
and
int3
test
and
lcall
xchg
xchg
or
fiadds
mov
push
inc
mov
mov
mov
ljmp
sbb
les
aas
inc
add
or
pop
xor
mov
sub
addr16
mov
lock
mov
testb
push
je
xchg
ds
aas
adc
jmp
call
add
jno
cmc
push
scas
push
leave
inc
jg
push
sbb
xchg
sbb
cmp
fstl
jl
out
sub
pop
pop
ja
cltd
jae
mov
mov
popa
push
add
add
xor
jno
jge
push
inc
out
push
pop
sub
dec
mov
movsb
insb
fs
jo
add
mov
dec
pop
mov
adc
xor
pop
add
mov
cltd
xor
jno
pop
call
mov
daa
xchg
adc
push
xchg
jne
mov
lret
std
cwtl
add
loop
mov
sbb
sarb
adc
ja
jle
and
stos
nop
jbe
jae
lret
sahf
addr16
aas
pop
stc
daa
imul
nop
inc
jg
and
sub
and
je
push
adc
sbb
insl
leave
lret
push
loopne
sbb
xlat
push
icebp
cmp
inc
call
int
ss
xchg
push
sbb
rorl
xchg
stos
inc
and
jge
rorb
mov
pop
stc
push
mov
or
cmp
adc
dec
out
sbbb
push
or
pop
iret
mov
incl
mov
jae
jmp
cli
or
imulb
out
jge
xchg
jns
ds
ss
rorl
pop
or
shlb
xchg
pop
dec
push
test
jbe
jmp
xor
test
cmp
jne
sbb
lcall
movsl
insl
in
data16
xor
nop
dec
jmp
sbb
mov
lods
loop
mov
fistl
pop
sbb
sbb
test
mov
int
les
repnz
xor
lret
sub
int3
jnp
mulb
xor
aam
push
inc
pop
mov
divl
pop
int3
pop
adc
daa
jmp
cmpl
popf
mov
mov
or
dec
js
dec
mov
fwait
lahf
xor
jg
in
jg,pn
aad
icebp
lahf
popf
aad
dec
or
inc
mov
add
and
dec
mov
sti
out
sbb
test
in
test
pop
adc
xor
insl
and
movsb
push
add
out
fdivl
sub
js
fadds
and
inc
inc
gs
mov
push
mov
xor
roll
xor
scas
arpl
push
pop
dec
ds
mov
cmp
cld
adcb
insb
jae
daa
jae
inc
hlt
jp
cmp
cwtl
ds
xchg
and
fistl
insb
fsubrp
divb
push
lret
adc
adc
mov
xor
cs
addr16
sbb
xor
pop
addr16
ds
ret
shrl
fisubs
dec
sbb
bound
and
and
xor
mov
add
mov
popfw
loopne
sub
aas
sbb
xchg
sub
push
ret
rcrl
mov
adc
or
out
clc
add
xchg
or
push
xchg
pop
ljmp
sub
sti
xchg
dec
push
jge
mov
fidivl
or
mov
cmp
das
stos
aad
xlat
lods
les
dec
jno
stos
mov
jae
nop
pop
pop
gs
mov
sbb
dec
in
jg
movsl
rcrl
mov
cmpsl
bnd
stos
sbb
mov
fdivp
mov
repz
cs
adc
xor
mov
mov
stos
sub
jnp
or
pop
fdivrl
mov
ds
adc
aaa
jb
les
add
jge
xlat
cli
shlb
jmp
pop
arpl
imul
mov
dec
push
mov
das
fstpl
leave
lods
test
lret
dec
lret
jnp
xchg
dec
xor
xchg
int3
dec
mov
pop
repnz
aas
shll
pop
std
gs
mov
icebp
sbb
jns
lahf
pop
aas
scas
pop
mov
cmpsl
xchg
lods
dec
cmpsl
loope
xor
jecxz
add
mov
sub
or
pop
sbb
pop
les
ss
push
adc
shrl
int3
lds
push
daa
ss
out
dec
jecxz
inc
loopne
or
into
sub
test
adc
lret
push
das
pushf
mull
mov
jge
jo
adc
lahf
dec
inc
in
xchg
xchg
icebp
lds
enter
loop
mov
cmpsb
out
lds
gs
xor
dec
xchg
test
jecxz
sarl
jno
dec
push
pusha
inc
mov
adc
in
rclb
inc
jmp
dec
rolb
aam
jae
nop
pop
jge
mov
sbbl
add
repz
push
stos
mov
mov
imul
lds
shl
mov
mov
hlt
cmpsb
aam
jecxz
jne
int3
pop
push
in
shrl
aas
sbb
and
imul
out
mov
and
push
sahf
sbb
mov
call
sarb
push
and
xchg
xor
pcmpeqw
xor
ljmp
add
sbb
xchg
inc
mov
dec
stos
push
pop
mov
add
out
into
pop
xchg
sub
mov
fistpll
popa
cmp
push
cmp
into
pushf
xor
and
js
lds
mov
xchg
sbb
and
daa
mov
xchg
jne
push
mov
mov
mov
push
pusha
leave
sbb
std
xor
mov
jns
in
mov
es
outsl
lea
in
xchg
aad
dec
cmp
sub
xor
lgs
dec
sbb
jle
stos
daa
movsl
in
das
idiv
lahf
arpl
jae
adc
into
push
jo
and
iret
cmp
dec
jl
pop
sbb
dec
jnp
add
inc
mov
and
mov
adc
jg
out
dec
ret
mov
xor
sbb
inc
outsb
push
out
insl
lods
mov
sub
sahf
out
hlt
mov
cmp
xchg
xchg
cmc
outsl
xchg
or
shll
pop
arpl
nop
add
jmp
sbb
dec
mov
dec
inc
fildll
sub
aam
and
gs
sti
mov
cmp
mov
dec
push
push
push
addr16
push
es
dec
cmp
mov
add
shlb
push
jnp
push
adc
pop
xchg
inc
adc
dec
sbb
pop
dec
xchg
scas
xchg
or
subl
jmp
push
es
inc
stos
cwtl
xchg
push
in
outsb
push
mov
mov
jae
das
adc
aam
pop
mov
add
mov
rclb
mov
jnp
fidivrl
test
stos
ffree
adc
ja
inc
sbb
call
pop
or
movhps
or
lds
sarb
ficompl
fldt
movsb
out
cli
and
shll
pop
ret
mov
xor
ret
dec
in
aaa
imul
loope
idiv
sbb
out
sti
movsl
loop
adc
mov
sbb
cs
sar
cmp
jbe
dec
mov
push
push
mov
adcl
push
cmp
and
push
cmp
sbb
dec
int3
scas
add
mov
jge
nop
rclb
adc
cltd
pop
fistl
paddq
mov
inc
sahf
lods
push
xchg
mov
mov
jl
rolb
pop
ljmp
mov
in
xor
in
mov
movsl
cmp
cmpsl
addr16
pop
rcl
and
sbb
cmp
int3
mov
inc
inc
mov
loop
mov
xor
adc
mov
lock
push
cmpsb
repnz
ret
test
pop
rclb
cs
js
pop
cmpsl
adc
fcmovnbe
mov
mov
sub
or
pop
push
cmp
mov
rcll
mov
xchg
xor
xchg
in
mov
pop
dec
hlt
sti
clc
into
inc
into
mov
cmp
mov
xor
sbb
leave
cmp
add
popa
xchg
add
movb
and
cmpsl
push
add
or
or
and
xchg
mov
push
dec
mov
add
push
inc
int3
imul
ficoml
loop
dec
fnstenv
stc
dec
jo
xchg
jb
icebp
ret
sbb
mov
icebp
mov
xchg
cmc
movsl
jge
and
dec
insb
clc
jno
andl
or
jle
sbb
sbb
lahf
std
imul
es
inc
adc
and
mov
ret
push
mov
ljmp
or
jle
and
xor
out
mov
mov
ficompl
mov
lods
lods
push
mov
cmpsb
mov
pusha
xor
sbb
cmp
fiadds
js
icebp
mov
in
enter
push
std
je
sub
aad
fisubrs
scas
sbb
leave
jno
test
ss
add
mov
call
mov
js
call
mov
testl
inc
popa
xor
in
dec
stos
cmp
or
movsl
shrb
nop
xchg
or
ljmp
xor
pop
adc
cwtl
pushf
cmp
push
lret
dec
xlat
movsb
insb
scas
aad
inc
jmp
cld
sbb
test
fcomps
jmp
mov
jl
outsb
fnstcw
lock
rolb
test
std
es
bnd
xchg
push
aas
loop
xor
rcrb
jmp
clc
xchg
or
inc
and
mov
bnd
push
rorb
outsb
xor
or
cmp
and
add
push
btr
inc
shll
sbb
jle
mov
shr
pushl
int3
orb
je
mov
add
cmpsb
mov
out
sbb
pop
sbb
icebp
ljmp
repz
aad
xor
insl
ss
je
and
bound
cld
xchg
cmp
mov
shlb
add
imul
push
jg
xlat
and
aam
mov
jge
pop
in
shlb
mov
cli
call
add
aas
mov
fs
pop
xor
rorb
movsb
sbb
jns
dec
cmpsl
mov
repnz
daa
jb
js
lock
shlb
xchg
aas
mov
pushf
jne
out
scas
mov
lods
jbe
popa
addr16
jo
cmp
paddb
test
stos
addr16
iret
and
negl
or
mov
divb
enter
pop
sub
clc
mov
mov
or
xor
cli
jo
aas
or
ljmp
xor
push
clc
mov
ret
inc
xchg
jns
inc
add
ds
in
sub
lahf
xchg
pushf
roll
sub
out
in
jp
out
jecxz
add
mov
negl
push
fistps
ret
scas
cmc
sub
mov
sti
in
dec
sbb
cmp
jp
outsb
push
enter
add
mov
jle
inc
std
dec
pop
ficoms
and
mov
fs
jecxz
int
andb
xor
fisttps
scas
push
mov
outsl
xchg
xor
xchg
int3
in
xor
inc
shll
mov
pop
js
outsb
jg
cmp
jo
cmc
dec
dec
ret
and
lock
dec
lea
mov
push
and
cs
fadds
or
mov
adcl
pop
mov
push
jle
decb
aad
in
jle
xchg
push
bound
test
cld
push
pusha
int
fdivrs
fldl
cmpb
mov
mov
jo
imul
rcr
add
imul
xchg
pop
faddp
sbb
and
daa
rorl
mov
stos
sub
fcoml
mov
clc
inc
out
and
arpl
in
xor
cmp
jmp
jno
sahf
mov
sbb
loop
xchg
inc
pop
je
cld
enter
mov
in
or
push
jp
sbb
lds
aas
ror
dec
pop
inc
scas
cmp
or
clc
bound
dec
into
pop
cmp
inc
int
dec
lea
inc
aam
xchg
insb
inc
fs
ljmp
push
outsb
in
shlb
cmpb
jge
cmp
push
and
xchg
iret
dec
or
jb
cmp
xchg
test
sbb
lods
mov
icebp
adc
sti
push
or
mov
ljmp
into
shll
add
adc
fsubs
inc
int3
int
cli
cmc
push
pop
test
mov
lret
mov
lret
scas
cld
icebp
je
add
mov
shr
or
lret
add
incb
cmp
insl
add
jp
pusha
pop
pop
test
lahf
jmp
mov
scas
mov
shl
ljmp
jmp
push
add
sti
shll
test
adc
sub
jmp
mov
push
je
hlt
shll
xor
ljmp
sub
mov
push
push
or
test
mov
add
mov
cmp
jns
xchg
push
mov
movsb
adc
je
lods
sbb
lahf
sub
repnz
and
cmc
aas
fidivrl
xchg
dec
mov
jle
repz
inc
jmp
test
push
rcll
xchg
fldpi
jb
pop
mov
cmc
jnp
pop
add
psubw
sub
incb
hlt
jo
push
ja
dec
adc
inc
mov
and
fidivrl
outsl
sub
mov
lods
sub
inc
adc
cmpsl
shr
mov
and
repnz
loop
jo
shl
and
arpl
testl
or
in
dec
cmp
iret
fcomp
in
inc
push
outsl
cld
in
pop
sar
sbb
adcb
inc
cwtl
mov
test
addb
adc
or
sahf
push
lock
mov
mov
fcmovu
fwait
leave
fbstp
lahf
mov
pushf
fcmovnu
mov
sub
hlt
stos
hlt
jbe
add
mov
mov
shrb
mov
sub
mov
aas
xchg
dec
sahf
ds
and
mov
lock
xor
popf
push
mov
adc
rclb
ja
pushf
dec
pop
jle
shll
ret
cli
sbb
inc
mov
fcmovb
pop
mov
fs
ja
data16
cmp
lods
int
xor
sub
xchg
rorl
imul
mov
mov
fisubs
stc
movsl
test
and
mov
mov
inc
test
sbb
inc
xchg
mov
cmp
inc
pusha
insb
pop
les
pop
xor
sub
xchg
pop
dec
mov
cmpsb
hlt
or
sbb
push
clc
out
push
pop
out
push
lods
dec
pusha
aas
xchg
sub
stos
pusha
push
or
or
and
add
and
addl
fldlg2
or
inc
mov
cltd
sarl
mov
ss
dec
push
push
test
add
add
into
jle
pop
fs
decb
push
fidivl
inc
cmp
outsl
sbb
jle
push
rorl
shlb
jmp
mov
ds
out
mov
push
add
sub
pop
dec
lock
nop
jg
and
mov
daa
jl
push
jno
pop
mov
insb
xor
test
jnp
int3
or
cli
js
out
push
sub
in
cltd
mov
repnz
sbb
aas
out
lock
scas
jmp
cmp
sub
jb
pop
inc
rol
xor
stc
push
lock
js
xchg
jo
loop
mov
pop
loop
and
outsb
sahf
inc
add
push
lock
out
cmp
xchg
lea
sbb
fldcw
mov
xchg
rcrb
add
test
push
fpatan
lahf
jge
in
pop
mov
dec
adc
sub
dec
mov
jmp
imul
jae
or
mov
cmp
loopne
cmp
jne
pop
testl
inc
or
inc
inc
shll
cmp
and
push
test
cwtl
test
cmp
lods
sbb
enter
or
push
lock
mov
ja
out
imul
dec
push
mov
sar
adc
xchg
out
jnp
cli
jo
dec
iret
push
inc
movsl
jecxz
aas
rolb
cld
cmp
xchg
sub
jno
sbb
jb
adc
je
xchg
gs
adc
aam
push
out
xlat
sahf
test
push
lret
dec
stos
imul
in
mov
daa
pop
mov
mov
inc
adc
pop
lock
xorb
inc
jae
xor
xchg
push
mov
sub
sahf
lret
dec
lcall
add
test
push
sbb
mov
cmc
ss
dec
adc
adc
jmp
popf
add
cli
mov
add
sbb
imul
aas
call
sti
sbb
in
mov
cmp
jo
repnz
iret
es
ret
and
lods
roll
inc
loop
ljmp
or
int3
jb
shl
adc
test
sar
inc
sub
into
inc
and
sub
lcall
inc
jmp
push
mov
out
sub
test
repnz
ljmp
clc
push
stos
jne
aas
rorb
out
mov
lret
mov
fistpll
pop
or
loopne
add
idivl
xchg
and
movsl
outsl
mov
faddp
mov
addr16
mov
add
andl
test
in
mov
jle
cld
loop
fldenv
add
aaa
in
pusha
mov
mov
in
push
adcb
ss
fldenv
and
xor
xchg
jae
mov
xor
pop
mov
movsb
ds
xchg
xchg
mov
inc
stos
sub
decb
inc
cmpsb
ret
dec
xchg
sub
lret
add
repz
mov
or
int3
jae
add
bound
fistpll
mov
bound
jmp
stc
inc
imul
push
test
cmp
pop
or
test
xor
popa
xorl
movsl
fwait
cmp
lock
cmp
add
mov
mov
addr16
lods
xchg
pop
dec
cs
stc
in
imul
pop
scas
pop
jb
push
cmpsl
cs
push
ret
ss
in
leave
cmpsb
inc
fwait
dec
adc
and
pop
add
adc
les
sbb
outsl
iret
cmc
mov
xor
stc
pop
dec
inc
pop
mov
psadbw
cwtl
pushl
enter
pop
xor
xorb
out
pop
mov
mov
xchg
pop
mov
sbb
sahf
rol
dec
les
popf
jno
fsubp
rolb
jg
int
push
sbb
mov
cld
sub
jecxz
imul
dec
cmpsb
stos
jmp
xor
or
mov
pop
dec
out
pop
push
rorl
fsubr
clc
jae
cmpsb
cli
pop
jmp
repz
mov
stos
pop
cwtl
xor
es
add
push
insb
and
in
sahf
push
loopne
or
pop
aam
mov
push
xchg
add
inc
add
pop
and
fcmovnbe
ret
inc
xchg
data16
jns
mov
mov
fs
xchg
div
xchg
cmp
ljmp
mov
dec
xchg
gs
mov
fldt
and
outsl
or
sbb
aad
data16
leave
inc
mov
pop
lahf
xlat
fisttpl
test
stos
jecxz
call
cltd
adc
or
cmp
sub
lods
jb
sub
push
js
nop
mov
mov
js
xchg
cmp
dec
aad
xor
popa
xchg
and
mov
rclb
jl
sub
xor
mov
push
mulb
fisubl
call
dec
jns
and
mov
sub
insl
xchg
cli
daa
jns
cmp
xor
sbb
insb
lds
scas
nop
shl
aaa
xor
ja
mov
popl
outsl
jns
insl
mov
pop
mov
mov
hlt
push
cmp
and
or
push
add
mov
popf
lahf
mov
ret
xchg
stc
sub
dec
mov
insl
jb
dec
mov
jle
jne
mov
xchg
xchg
insl
dec
cmp
popa
pusha
aam
or
dec
jb
outsb
pop
ja
push
xchg
dec
fcmovu
daa
xor
sahf
iret
cli
stc
lcall
pop
fists
cmp
mov
stos
mov
fldl
es
add
ret
or
dec
mov
jnp
xor
jne
jle
mov
xchg
cld
bound
dec
inc
cmp
add
mov
stc
and
xor
lret
and
test
shrb
or
and
dec
fimull
or
pop
mov
nop
call
mov
push
fwait
ds
adc
jns
loop
xlat
leave
xchg
lret
ret
push
mov
fisubl
mov
fisttps
pusha
pushf
mov
out
and
mov
push
mov
cli
fwait
dec
test
mov
pop
and
mov
rol
gs
cltd
loope
cltd
xor
arpl
es
adc
adc
mov
jns
jb
insb
mov
mov
adc
xor
push
bound
and
add
add
pop
push
lock
mov
fcompl
clts
imul
mov
mov
cltd
sahf
adc
inc
js
xorb
mov
int
lahf
sbb
fsubl
outsl
dec
pop
jo
fidivs
fistl
xor
pop
cmp
lcall
repnz
call
fld
int
xchg
xor
dec
or
ret
push
xor
fcmovnbe
sbb
xor
insl
mov
in
xor
out
outsl
fisttpll
mov
sub
adc
sarb
mov
mov
xchg
loopne
orl
pusha
mov
shlb
fsubrl
mov
add
aam
pop
aam
lods
mov
cli
mov
test
testb
scas
sub
push
mov
into
lea
cmpsb
aad
xchg
add
sbb
cmpsl
cmp
and
sbb
mov
mov
pop
xlat
inc
leave
rcrb
sub
xchg
mov
and
out
add
mov
xor
test
mov
into
sub
stc
xor
dec
jmp
push
enter
jg
fwait
test
mov
inc
push
cmpsb
popa
mov
sub
in
jmp
notl
adc
scas
inc
xlat
aam
es
fidivs
lods
hlt
push
xchg
lret
movsl
xchg
push
xor
ds
xchg
int3
dec
ss
pusha
xor
cmc
aas
push
push
jp
and
lds
das
int
cmpsb
dec
inc
cmp
ljmp
pop
dec
mov
cmp
enter
pushf
pop
dec
mov
add
mov
mov
xor
mov
std
aaa
adc
pushf
ja
pop
push
lret
inc
pop
xchg
jno
mov
mov
in
inc
jmp
sbb
xor
or
fcmovnb
push
rorl
clc
imulb
mov
and
add
sahf
sbb
xor
jnp
add
push
aam
xor
mov
es
dec
xchg
cmp
and
mov
aam
xor
or
popf
pop
bound
xor
inc
xchg
pop
in
jecxz
pushf
xorb
lods
push
sbb
xchg
mov
xchg
shlb
rcll
lcall
sub
xchg
lahf
insb
test
repz
inc
jl
arpl
sub
fcmovne
stos
inc
mov
icebp
mov
call
sub
jne
into
pop
jo
arpl
cld
dec
inc
pop
xor
lret
xor
aaa
or
sbb
xchg
adc
pop
dec
pop
pop
jl
in
loope
lods
int3
aad
jp
mov
jne
or
mov
scas
and
or
and
xchg
mov
mov
insb
cmp
jo
jne
xchg
into
repnz
mov
dec
fwait
lods
and
or
enter
sbb
sub
mov
pop
repnz
nop
arpl
and
push
lret
adc
pop
ds
addr16
sti
sarl
or
js
ret
rcll
push
adc
lret
push
xchg
push
dec
movsb
push
jb
mov
xchg
ds
repnz
cmp
jno
push
cltd
aas
mov
mov
sub
ds
or
lods
lahf
lcall
je
dec
pushf
stc
int3
or
sahf
test
xchg
nop
xor
lods
stos
out
idivb
test
addr16
and
jmp
fwait
lods
cld
jbe
stc
dec
pushf
stc
mov
inc
loop
fists
jno
sbb
cwtl
push
push
rcll
ss
push
sbb
inc
sahf
cs
sti
cmp
sbb
outsb
fistpl
repnz
push
repz
lcall
jg
adcb
push
or
fs
fs
in
repnz
xor
ret
cld
inc
insb
xor
ret
xchg
repz
out
push
pop
push
cmpsl
imul
rcll
xchg
add
jmp
lea
test
out
inc
xor
dec
in
aas
adc
mov
cmpsb
pop
sub
jno
adc
jae
xchg
loopne
adc
dec
cmc
adcl
lock
outsb
mov
adc
jp
push
andl
rorl
aam
jb
pushf
xchg
adc
cli
test
and
cltd
aam
cmpsl
insb
test
cld
push
xor
int3
cwtl
lret
cmp
xor
aaa
jns
insb
pop
jecxz
pop
pushf
pop
xchg
add
outsl
stos
daa
das
mov
and
jecxz
repz
sahf
cmp
push
adc
add
repz
dec
inc
lods
mov
bound
pop
aaa
je
fdivrl
nop
mov
jne
xchg
cmc
or
in
xchg
out
inc
cld
xor
mov
xor
or
in
jns
cmp
pushf
xor
and
ja
icebp
sbb
xchg
push
shlb
xchg
outsb
adc
sbb
xchg
inc
dec
mov
loope
xchg
mov
lahf
push
lods
sub
addl
or
inc
mov
sbb
hlt
ja
int3
push
nop
movsl
mov
pop
imul
sti
ss
popa
mov
rorl
repz
aaa
add
jo
fwait
inc
and
incb
das
jecxz
inc
daa
jno
fcoms
and
jmp
cld
lods
cli
bound
mov
lock
scas
xor
xor
xor
loope
or
adc
jl
xchg
and
out
es
mov
ret
movsb
inc
or
jo
adc
push
js
mov
subb
and
sbb
xor
and
cmp
loope
lds
in
jo
or
je
lcall
xchg
int3
inc
in
fisubl
xchg
mov
das
mov
jns
sbb
cmp
and
mov
cmp
mov
fisttpll
leave
dec
and
int3
mov
mov
mov
fists
xchg
push
add
pop
aad
jno
inc
rcll
mov
and
out
xchg
insb
jo
xchg
mov
cltd
mov
xchg
push
cmc
jmp
shr
push
inc
nop
pop
hlt
adc
pop
mov
adcl
out
out
test
or
adc
jnp
int
sub
cmp
ljmp
shl
pop
lret
pop
addl
popa
sbb
lock
add
xchg
aas
cmp
insb
das
add
adc
adc
xor
push
mov
sahf
js
mov
and
out
jns
aam
mov
mov
xchg
pop
mov
mov
aaa
jmp
mov
cmp
cwtl
pop
pop
mov
pop
roll
mov
inc
xchg
jb
add
pop
add
and
jb
popf
mov
mov
ljmp
push
mov
jns
jg
rorb
mov
icebp
xor
xchg
mulb
loop
xchg
sbb
sti
in
push
cmp
xchg
pop
mov
mov
jmp
add
aaa
out
lea
outsl
sub
mov
mov
insb
cld
pusha
xchg
jg
mov
outsb
repz
cmp
idivl
mov
xor
push
repnz
xchg
xchg
xor
mov
insl
les
mov
mov
mov
imul
daa
xor
or
cmpsb
repz
cld
roll
jmp
shl
pusha
dec
mov
sub
push
xchg
out
dec
sub
scas
pop
in
int
xchg
pusha
addl
jl
xchg
inc
pusha
xchg
sbb
scas
mov
mov
enter
cmp
and
ds
lret
jp
fsubrs
popf
xchg
xor
mov
pop
push
sbb
jae
dec
push
je
mov
outsb
pushf
orb
add
jnp
fiadds
xlat
aam
push
add
adc
jg
pop
inc
xchg
cmp
cmc
push
in
xlat
xchg
push
aam
repz
lcall
jbe
xchg
scas
daa
inc
xchg
adc
xchg
insl
movsb
push
outsb
and
mov
jae
add
or
loope
rolb
or
sbb
mov
mov
mov
xor
cmpsl
lret
sbb
es
mov
orb
in
neg
dec
in
aad
mov
lds
cmp
mov
cmp
cli
inc
xchg
mov
jle
jle
js
and
testb
addr16
loope
aam
inc
push
fcomps
ficoms
xchg
sbb
inc
xchg
mov
sbb
pop
or
insb
jge
sar
adc
mov
add
in
mov
nop
jmp
lods
pushf
shrl
pop
xchg
pop
cli
loopne
gs
mov
cld
dec
andb
arpl
addr16
mov
cmp
es
push
pop
sub
mov
jl
dec
int
mov
stos
xchg
push
fwait
addr16
sub
shrb
xchg
mov
jb
dec
daa
sbb
pop
icebp
fdivrs
pushf
popfw
xchg
jmp
lea
sub
adc
arpl
scas
jo
ljmp
adc
in
pop
inc
aad
ljmp
jb
cmc
fs
push
add
jnp
stc
cmc
out
std
into
aaa
int
leave
les
pop
adc
icebp
out
dec
hlt
xchg
test
or
mov
sti
mov
xchg
mov
xor
rcrl
or
fistps
sahf
add
cltd
cwtl
sarl
lret
inc
pextrw
mov
cmp
in
cmp
lea
xchg
pop
js
push
jmp
mov
xchg
stos
cmp
cmc
fs
enter
repz
cmc
das
mov
mov
xchg
jmp
dec
or
pop
loopne
adc
mov
dec
cmp
xchg
pop
xor
and
cmpsl
jae
into
xchg
fisttps
and
mov
andl
cwtl
cmpsl
orb
or
jo
push
push
cwtl
icebp
mov
mov
pop
in
xor
daa
or
sahf
iret
xor
enter
push
pshufw
cmp
xor
mov
jns
ss
mov
loope
out
mov
push
and
cmc
movsb
mov
jge
sub
sub
stos
data16
cmp
inc
mov
testl
cld
inc
dec
pop
insl
ret
insb
ret
sti
mov
pop
stos
cld
or
inc
sub
adc
push
ljmp
inc
outsl
mov
mov
insb
sbb
jo
pop
xchg
fcoms
fisttpll
push
les
or
shl
mov
pushf
fnsave
bound
pop
rorb
les
jge
arpl
adc
pop
pop
push
das
mov
cmp
jo
stos
shll
inc
fwait
or
and
push
test
and
push
cmp
xchg
push
dec
sub
ret
jo
lods
roll
mov
icebp
push
sub
fucomp
lea
ret
push
xchg
sbb
daa
pushf
jno
lock
adc
xor
mul
lcall
mov
data16
mov
jle
mov
push
nop
lods
into
lcall
les
adc
fildl
jbe
ret
cmp
popf
dec
in
mov
sub
and
pop
sub
xchg
and
neg
cwtl
dec
aas
xchg
sti
hlt
ss
mov
jecxz
dec
in
insb
icebp
mov
cmp
xor
pop
mov
mov
cmc
std
insl
xlat
jle
xchg
movsb
loop
adc
pop
xchg
cmp
push
fcoms
pusha
cmc
int3
and
cli
sub
mov
adc
dec
xchg
inc
cmp
mov
sub
mov
loope
mov
pop
xchg
fstps
pop
addr16
cmp
cld
clc
mov
lods
test
sarl
mov
int3
pop
push
inc
ret
movsb
inc
mov
enter
pop
cltd
push
out
pop
xlat
dec
fstpt
pusha
mov
sub
enter
fildl
mov
jmp
mov
insb
inc
shrl
divb
aas
lods
ret
or
pushf
int
mov
cmp
pop
int
xlat
pop
test
outsl
jg
hlt
cmp
push
scas
js
out
lret
movb
inc
lods
and
rol
sub
js
add
add
add
lret
mov
aaa
fbstp
js
add
lock
mov
test
sbb
sbb
or
xor
jecxz
and
insb
push
stos
out
sti
sbb
movsl
mov
inc
xor
push
mov
xchg
outsb
sub
clc
cmp
add
xchg
dec
lds
inc
mov
and
inc
pop
cli
sti
dec
mov
jmp
imul
int3
or
sti
ds
mov
mov
faddp
sub
add
xor
cli
sbb
insb
movsb
jl
lret
in
nop
adc
sti
mov
out
mov
add
out
mov
scas
lret
lock
jo
or
inc
dec
arpl
ja
mov
icebp
sahf
orl
shlb
mov
lahf
mov
sbb
xor
or
sbb
pop
lods
movsl
mov
js
frndint
jae
aad
push
sti
nop
jmp
sbb
dec
fidivrs
pop
outsb
data16
lods
out
xor
imul
or
pop
shrl
aas
inc
repnz
inc
cmc
bound
dec
inc
dec
ret
sub
xchg
stc
leave
call
cs
adc
aam
xchg
mov
gs
or
cmpsb
fsubl
test
es
and
mov
inc
mov
ljmp
sbb
scas
dec
sbb
push
mov
xor
pop
fmulp
rcl
aas
dec
scas
add
push
or
lods
cli
mov
fadds
clc
cld
outsb
inc
mov
shlb
pop
fimull
out
jl
in
pushf
jnp
sub
push
sub
jae
hlt
add
sbb
imul
iret
mov
ret
hlt
lahf
cmp
jae
adc
add
sbb
jp
cmpsl
imul
mov
mov
cmc
or
test
cmpsb
ds
lcall
cld
cmp
cmp
mov
loopne
add
lcall
dec
push
mov
and
push
jle
mov
test
jp
out
and
insl
jp
rol
pop
lds
filds
jb
mov
stos
push
pop
cli
mov
pop
inc
pop
movsb
xlat
in
push
shrb
mov
mov
out
jnp
es
sub
jno
loopne
pop
mov
icebp
and
outsb
xchg
test
xchg
push
dec
lods
int3
adc
insb
fstpt
xor
dec
sbb
ficoml
sti
pop
lods
add
sub
pop
mov
pop
cmp
ret
pop
lahf
les
mov
inc
jmp
aad
imul
stc
cmp
xor
jmp
mov
sti
sub
test
adc
cmc
daa
adc
xor
mov
jne
rep
xchg
testl
inc
cmp
call
xchg
inc
daa
dec
cmp
in
mov
int
and
dec
decb
pop
pop
xor
addr16
imul
shrb
fwait
clc
imul
or
shll
sub
sub
dec
xchg
xchg
inc
mov
add
int3
cmp
repz
mov
fldcw
fsubl
ljmp
push
add
bound
repz
std
mov
lock
icebp
fldcw
stc
mov
push
xor
shl
mov
inc
lar
insb
ret
leave
mov
jns
adc
xlat
pop
sbb
dec
mov
pop
jbe
incb
mov
mov
pop
cs
push
xchg
push
inc
and
dec
inc
push
mov
fbstp
push
adc
mov
notb
into
mov
scas
mov
scas
adc
dec
hlt
aam
fcompl
imul
add
cs
data16
enter
movl
es
bound
jb
cli
sysexit
fisttpll
stc
jge
mov
clc
xchg
mov
outsb
sti
leave
testb
fwait
lahf
mov
jne
cmp
jmp
xchg
xor
pop
mov
repnz
xchg
inc
cli
push
dec
lret
popf
lds
adc
mov
and
cmc
cmp
into
or
aas
sub
arpl
adc
loop
in
in
rorl
push
xchg
lods
push
jmp
mov
clc
imul
fstpt
add
sbb
sahf
sbb
aas
dec
dec
cmc
cmp
or
fldenv
push
mov
popf
add
lock
in
mov
pop
inc
mov
and
pop
xorl
sbb
dec
jae
in
push
sbb
inc
push
mulb
jl
lods
je
outsb
dec
out
popf
movsl
shll
cmpsl
loop
sti
daa
ja
in
outsb
fsts
decl
in
gs
or
cld
and
add
dec
testl
xchg
jb
inc
rcrb
rcr
test
int
std
cmp
cld
ja
cwtl
dec
in
in
cmp
imul
std
and
fcomp
jge
mov
cli
leave
fsubs
cld
pop
cmp
int
movsb
or
mull
xor
outsb
fcompl
fildll
push
ljmp
dec
jb
pop
into
mov
cld
sti
cmp
ja
mov
in
mov
fistpll
outsb
aas
test
push
lret
mov
fyl2xp1
mov
stc
pop
push
sahf
fcmovu
dec
push
dec
addr16
mov
xor
lahf
push
leave
cmpsb
outsb
mov
mov
aas
adc
scas
stc
pop
push
insl
mov
or
js
popa
adc
ret
in
test
push
and
and
jb
mov
mov
mov
push
lods
dec
mov
movsw
jmp
sbb
mov
ss
mov
add
xchg
jle
into
push
pop
pushl
add
add
mov
iret
lock
add
rorb
daa
pop
xchg
clc
mov
cs
cmpsb
jl
cs
mov
mov
repnz
roll
push
xor
add
jl
push
popf
popa
popf
xchg
cmpsl
das
das
adc
mov
lds
inc
add
and
cmpsb
mov
mov
cmp
dec
dec
leave
bound
jb
pop
repnz
into
xor
xorb
push
inc
sbb
sub
jmp
pop
call
cld
add
rcll
call
adc
add
jae
push
lret
fcompl
stos
and
pop
mov
sarl
or
movsb
push
scas
clc
cmp
int
dec
aas
xchg
decb
lahf
notl
inc
or
xor
outsl
in
test
les
sahf
rorl
pop
movsb
out
dec
in
mov
adc
mov
mov
ds
xchg
movsb
cltd
repnz
push
and
mov
xchg
adc
aaa
jo
outsb
push
mov
addr16
lods
call
add
pusha
imul
loop
fcmovb
shlb
mov
sets
adc
and
cmpsb
push
lods
mov
push
movsb
aaa
sbb
xlat
push
cmp
ret
imul
mov
mov
dec
insb
pop
push
scas
and
lock
lds
dec
popf
js
out
mov
outsl
sub
sub
test
cmp
mov
loop
pop
mov
sti
divb
mov
mov
aaa
imull
mov
adc
dec
pop
and
mov
mov
lret
repnz
and
ficomps
fwait
jb
cltd
adc
loop
movsb
jmp
mov
jne
sub
shll
je
je
xor
mov
popa
jns
cmpsl
xor
mov
inc
cs
pop
call
roll
dec
cld
inc
cmpsl
out
push
sbb
cld
mov
lods
outsl
add
dec
lods
test
sbb
movb
pop
fdivrs
insl
push
dec
xlat
cmp
jecxz
pop
mov
and
cmc
fcompl
pop
ret
dec
lods
addr16
pushf
xchg
mov
xchg
outsb
ja
lret
in
cmpl
popf
pop
mov
mov
mov
fimuls
adc
cmp
gs
divb
inc
mov
adc
cwtl
cmp
ds
pop
mov
test
cmp
lods
xchg
out
int3
lret
arpl
fisubl
inc
mov
mov
aaa
mov
add
sahf
aam
fwait
pop
jb
fwait
and
inc
jg
out
fcmovu
dec
in
sub
mov
pop
dec
push
or
add
sbbl
xorl
sub
scas
mov
fwait
mov
dec
lret
filds
subl
lock
dec
movsl
sbb
mov
mov
and
in
mov
ficomps
out
xor
xchg
jle
sbb
jne
xor
xchg
adc
mov
xor
or
adc
int3
cmc
ret
and
mov
mov
sbb
mov
xor
insb
pop
xor
leave
bound
jae
in
stos
mov
add
push
call
mov
xor
xchg
arpl
jbe
aam
sub
sub
sbb
mov
push
and
or
pushf
or
repz
inc
sbb
call
push
data16
fadds
add
mov
pop
lret
cmpsl
cli
lods
std
shll
sbb
jae
sysexit
xor
adc
lret
ficoms
mov
pop
out
testl
jg
mov
mov
cld
xorl
jl
shr
scas
into
push
jp
mov
aad
ror
mov
mov
mov
inc
negb
push
add
in
jae
inc
xor
lds
lahf
and
add
xchg
cltd
push
xor
cmpsb
fwait
rclb
testl
add
loope
sub
insb
pop
iret
xchg
pop
push
mov
ja
xor
jbe
push
in
aad
popf
sbb
adc
push
out
in
into
pop
pusha
add
outsb
inc
mov
push
repnz
push
sbb
jle
or
push
jae
cmp
pop
fnsave
or
sub
adc
mov
jmp
dec
xchg
das
dec
push
xor
mov
ja
faddl
jbe
js
rclb
ljmp
cmp
dec
xor
icebp
das
fidivrs
inc
loop
cwtl
arpl
adc
in
int
imulb
adc
aam
ret
xchg
xchg
clc
in
fildl
inc
push
imul
or
dec
dec
cmp
or
push
mov
sub
mov
test
xlat
xchg
movsb
int
popf
dec
dec
es
testb
push
lds
in
lods
push
test
fidivs
test
in
mov
aad
in
and
std
push
push
stc
gs
push
sub
and
inc
and
aam
sbb
insl
sub
ss
sbb
mov
fadd
jne
jmp
xor
inc
jns
incb
xlat
imul
and
add
mov
fs
dec
push
add
cmp
fs
dec
jae
or
pop
adc
sub
and
push
jbe
push
add
ljmp
dec
test
negl
jnp
scas
xor
adc
mov
sar
jnp
and
sbb
out
xor
mov
popa
mull
push
push
push
lods
iret
push
in
pop
and
or
and
inc
push
inc
lds
aaa
pushl
out
pop
into
push
mov
mov
or
dec
adc
test
enter
lret
jecxz
shll
adc
cltd
sub
sbb
dec
jle
xor
call
push
xorb
mov
sub
imul
outsb
outsb
rcrl
testl
dec
in
inc
jle
jecxz
es
adc
mov
lods
jecxz,pt
insl
faddl
addb
ds
pop
pop
std
jl
xchg
mov
push
mov
popa
dec
sbb
adc
mov
push
mov
jnp
fidivl
dec
nop
sti
cli
xlat
incb
test
and
xor
jge
jp
push
je
mov
fwait
and
or
das
mov
lret
out
into
xor
and
adcb
imull
push
icebp
mov
shlb
sbb
xchg
mov
leave
mov
adc
nop
and
push
out
xor
xorl
push
ljmp
mov
dec
shrb
pop
lea
imul
cmp
sbb
fsubrl
inc
inc
leave
or
jle
in
mov
adc
jmp
jno
cmp
shlb
cld
xlat
pushf
decb
cli
jmp
xchg
push
dec
xor
pop
aas
push
lahf
or
push
std
arpl
push
imul
mov
jecxz
in
pop
cmpsb
nop
ret
test
call
jmp
int
test
lods
push
pop
cmp
adc
outsl
cmp
rclb
mov
push
jge
dec
cmp
sub
imul
sbbl
in
jle
mov
jae
dec
test
call
add
cmp
mov
in
nop
in
arpl
jge
in
fnop
jle
cmpsl
je
cmpsl
fchs
shrb
mov
aaa
das
mov
sbb
and
insl
adc
and
xor
arpl
sbb
push
and
and
in
into
or
pushf
addb
push
push
cs
inc
mov
dec
lret
cli
and
push
jg
popf
push
adc
sub
cmp
test
cld
test
rcll
and
pusha
ret
lcall
test
sbb
daa
popf
sub
dec
or
setbe
mov
jns
dec
repnz
push
cwtl
xchg
faddl
push
js
stos
mov
fcom
push
mov
mov
movsb
aad
outsb
jg
xor
sbb
mov
ds
mov
clc
pop
jno
mov
sbbb
push
or
jb
inc
flds
sahf
jp
dec
lret
std
mov
dec
push
jmp
icebp
sti
push
in
ds
test
and
jle
xchg
pop
cmp
and
dec
jo
dec
adc
loop
sbb
movsb
inc
or
mov
cmp
mov
into
adc
push
fprem
jae
daa
mov
inc
push
pop
mov
lea
cli
dec
add
add
dec
mov
ds
sbb
nop
out
jb
int3
gs
scas
fistpll
push
ret
stos
in
js
int3
adc
sbb
and
push
jge
pop
stc
cmc
rorl
js
fdivl
xor
add
cld
insb
popf
lret
mov
faddl
xor
cli
mov
mov
bound
imul
repnz
gs
mov
data16
xor
dec
inc
mov
aas
xchg
and
sbb
jo
mov
push
in
scas
pop
les
cwtl
cmpsl
ret
xchg
cmp
daa
sub
mov
mov
outsl
nop
jnp
xchg
sbb
sbb
or
mov
arpl
sbb
xor
sbb
repnz
mov
lret
sbb
pop
push
or
imulb
out
xor
jle
cmp
adc
inc
lds
inc
sub
insb
jns
push
push
outsb
mov
mov
in
das
std
out
and
aad
xchg
mov
mov
repz
xchg
test
ss
xchg
jns
push
mov
scas
stos
insl
mov
repnz
fwait
xor
aaa
rcll
jno
pop
fwait
mov
mov
and
scas
shll
mov
loope
aaa
jae,pt
sbb
push
outsl
dec
and
xchg
std
test
pop
xor
dec
and
dec
nop
shl
jecxz
pop
cs
mov
mov
out
adc
aaa
pop
jns
sbb
mov
xor
movsl
sarb
cmpsb
loope
in
or
out
std
mov
jle
mov
sbb
sti
mov
xlat
push
cmp
data16
jo
stos
and
int3
testl
or
sbb
stos
sub
dec
daa
dec
lret
test
jno
push
mov
adc
pusha
adc
xor
jp
mov
pop
push
stos
or
inc
xchg
sbb
call
jg
imul
leave
or
sahf
leave
cld
outsl
and
fdivr
fisttps
adcl
imul
mov
nop
out
cld
movsb
ja
mov
test
mov
lret
out
xchg
clc
add
shrb
in
jo
mov
mov
sbb
repnz
mov
pop
popf
mov
xchg
sbbb
fldcw
sbb
jae
rolb
ljmp
mov
and
sbb
dec
pop
jle
pushf
std
xor
xor
movsl
sub
inc
dec
out
ljmp
int3
jl
push
pop
ret
jmp
xor
orl
mov
push
xchg
ss
fnstenv
dec
or
add
pusha
lea
jae
je
mov
sbb
addr16
call
inc
cmp
divl
sub
xlat
icebp
or
fwait
jle
movsb
mov
int3
push
sahf
out
imul
subb
and
inc
movsl
stc
inc
sbb
movsl
jmp
jns
jge
loop
pop
daa
stc
xor
imul
xchg
enter
push
das
loope
or
push
in
mov
out
add
pop
cld
scas
int
cmpsl
adc
push
inc
hlt
js
int
sbb
cmp
enter
xchg
and
cmp
incl
mov
ss
push
mov
sti
int
stos
repz
pusha
outsb
lds
lea
mov
test
lods
cmp
xchg
in
cmp
leave
push
negl
cld
popf
mov
push
jg
fstl
jo
xor
jo
inc
push
mov
mov
xor
jle
repz
xor
pop
jg,pn
sarb
inc
xchg
call
out
add
stos
jne
xorb
pop
mov
je
add
cmp
xchg
nop
sbb
jnp
aam
sub
push
push
ljmp
shl
shl
aaa
outsb
or
sbb
inc
cmp
xchg
sahf
out
xlat
push
xor
pusha
test
gs
mov
repnz
cmp
jp
fwait
imul
fwait
cmp
xchg
cmp
or
in
add
xor
adc
lea
pop
adc
sub
jmp
test
mov
daa
mov
add
out
outsb
test
stos
mov
lds
arpl
adc
dec
push
jns
test
jg
popa
imul
sub
arpl
jb
and
adc
js
ror
xchg
stc
insb
cltd
or
ret
je
push
xchg
fcomps
xchg
sub
adcb
cld
sbb
mov
scas
push
fwait
xor
inc
scas
aaa
jae
pop
cmp
add
xor
shl
enter
fwait
enter
repz
out
scas
and
and
rcrl
lods
cmpsb
push
jl
push
icebp
sbb
push
sarb
popf
jbe
cmp
popl
mov
mov
jo
mov
adc
add
movsb
in
jmp
ds
pop
push
push
stc
inc
push
mov
popf
xchg
iret
mov
lret
adc
push
das
pusha
in
add
pusha
mov
jns
gs
adc
bound
xchg
sbb
or
jmp
aam
fs
out
adc
mov
or
adc
movsl
insl
xchg
jmp
ds
pop
xor
lea
xor
bound
lea
addr16
data16
pop
sbb
add
in
lret
fs
dec
cs
pop
mov
mov
add
or
mov
cmp
push
rcrb
or
shll
and
push
inc
xor
lods
pop
pop
cmpl
in
push
inc
or
mov
clc
dec
divl
mov
lds
jno
ljmp
mov
pop
adcb
int
mov
iret
xchg
je
sti
pop
fsubrl
jns
lret
popa
pop
cltd
fdivr
adc
popa
adc
cmp
mov
das
push
outsl
les
jnp
test
inc
sbb
data16
jbe
out
in
dec
mov
sbb
mov
aam
int3
adc
jp
gs
jl
insb
lcall
add
sub
pop
ret
call
lret
jbe
cmp
bound
rcl
jnp
cmp
je
pop
jmp
out
movsb
cld
add
into
xor
push
into
jno
jg
ljmp
sbb
lahf
insb
adc
mov
cmp
mov
cwtl
iret
lods
repnz
add
push
sbbb
outsb
cmp
js
cwtl
add
loop
dec
sub
das
xor
mov
xchg
adc
xor
fcoms
subl
sub
push
jmp
jg
sub
xchg
xor
add
jl
pop
jmp
popa
sub
ret
nop
inc
jno
rcll
xorl
pop
dec
fisttpl
jp
mov
pop
fwait
sub
adc
sbb
pop
jnp
jge
aam
push
or
pushf
jo
scas
inc
call
or
pop
movsb
jno
outsb
push
add
adc
push
stc
xchg
bound
mov
xor
jl
xor
mov
stos
cmp
push
mov
pusha
adc
push
jb
imul
push
xchg
jge
push
mov
stos
stos
jno
push
rcr
gs
repnz
ss
mov
cmc
insb
mov
cmp
shrl
ljmp
orb
pop
les
jl
mov
pop
mov
push
push
out
or
mov
stos
incl
or
test
addr16
pop
out
xchg
out
decl
cmp
and
dec
or
cld
cltd
pushf
jno
and
std
fbld
into
and
push
mov
lods
mov
cmp
push
aas
iret
jae
mov
arpl
mov
rcrl
and
dec
push
popa
and
sbb
mov
dec
fnstsw
add
add
lahf
pusha
sbb
xor
mov
dec
xchg
bound
ljmp
dec
sbb
cld
mov
sbb
aam
jmp
mov
cmp
sub
fldt
dec
pop
lret
and
adc
adcl
dec
inc
sub
jo
lds
sub
sbb
sub
popf
movd
lock
pop
das
jg
mov
cmc
lret
in
lret
xor
in
dec
aas
pop
rorl
rolb
out
pusha
xorl
xor
test
lret
insb
out
sbb
outsl
mov
jmp
subb
insl
pop
daa
sti
pop
jp
mov
arpl
fcoml
scas
shll
push
push
std
xlat
sbb
lret
and
xchg
jp
mov
dec
inc
jne
es
aam
sub
out
cli
mov
cmp
ffree
aas
inc
fists
add
lcall
loope
out
add
mov
push
mov
xor
cltd
daa
jae
std
jbe
jne
test
cmp
ret
out
scas
gs
mov
mov
lcall
es
mov
and
adc
pop
push
aad
push
insb
xor
cmp
xchg
pop
scas
mov
add
lret
add
pop
xchg
mov
pop
in
jmp
call
xchg
sti
dec
add
dec
nop
and
cs
js
pop
lret
movsb
xor
dec
gs
nop
movsl
xchg
pop
push
int3
jb
lds
mov
out
ljmp
jge
mov
enter
out
outsb
negb
int
in
mov
and
scas
xchg
rolb
push
xor
fidivl
add
out
and
xchg
cld
scas
hlt
mov
jne
mov
loope
int
jmp
fists
seta
adc
ret
add
into
cmpsl
add
cmp
lock
add
push
imul
les
pop
and
cmp
bnd
jmp
fcoms
xor
daa
inc
out
and
aas
push
jnp
mov
xchg
sti
mov
arpl
test
cmp
xchg
jo
or
mov
in
repnz
inc
in
int
mov
lds
ss
add
ss
popa
pop
mov
pop
jecxz
imul
sbb
push
sub
dec
adc
pop
es
jmp
fbld
loop
pop
cmp
std
mov
dec
testl
mov
pushf
loope
adc
xor
popa
xor
xchg
jb
mov
mov
mov
cmc
ret
pop
call
xor
add
adc
rcrb
or
cmpsl
fs
scas
aad
sbb
in
aam
int3
adc
jbe
sarb
push
and
pop
xchg
jbe
cmp
cmp
adc
daa
and
add
stos
push
cwtl
mov
cld
and
jmp
mov
xor
fwait
stos
iret
clc
icebp
jne
shr
outsb
pop
int3
push
je
in
daa
push
lods
popa
or
adc
or
fwait
sbb
xchg
and
insl
adc
jecxz
outsl
mov
sub
cltd
adc
daa
xor
jo
sarl
push
subl
pop
sbb
lahf
mov
or
add
dec
lret
fs
sub
mov
ret
ret
dec
sub
es
stos
adc
int3
arpl
jp
int
push
fdivrs
cltd
mov
inc
mov
scas
into
mov
pop
mov
push
bound
dec
inc
das
mov
mov
or
jae
or
mov
xor
idivl
mov
lahf
outsb
aas
fisubrl
or
es
push
lahf
cmp
testl
andl
xchg
dec
ds
popa
test
or
sbb
cmpsl
xor
xchg
and
out
inc
push
cltd
xchg
jp
addr16
aaa
ds
mov
addl
sub
lds
shll
add
push
adc
cmp
pop
andl
mov
and
add
and
jne
call
or
xchg
lahf
cmp
popa
xchg
jno
aad
leave
adc
adc
inc
cmpsl
idivl
inc
das
stos
mov
xchg
in
xchg
add
mov
out
popa
push
sub
loope
mov
push
rcll
xchg
test
jb
jp
cmp
xchg
ja
or
leave
adc
xchg
pop
push
xchg
and
cld
add
mov
mov
push
dec
pop
inc
inc
orl
loope
jl
js
adc
loop
loope
divb
and
sbb
rcrb
imull
mov
inc
mov
pop
cmp
dec
add
and
imul
imul
daa
pop
aam
mov
push
fistps
mov
testl
cmp
cltd
nop
sbb
push
mov
dec
aad
aad
call
inc
mov
sbb
cltd
add
int
outsl
adc
fstpl
mov
cmp
xor
mov
fdivr
insl
imul
add
movsl
aaa
xor
loop
xchg
js
lret
outsb
mov
mov
mov
in
mov
pop
or
dec
rolb
mov
rclb
mov
xchg
cmc
inc
xor
insb
or
add
test
test
fisttpll
cmp
popf
into
sbb
mov
and
lret
shlb
xchg
loopne
std
cmp
pop
adc
mov
popf
mov
test
lahf
out
sub
shrl
jbe
jmp
lret
cmp
push
push
jo
xor
outsl
aaa
adc
mov
dec
mov
dec
pop
add
je
cmp
sbb
cmp
add
pop
dec
inc
out
fnstcw
or
mov
rcl
mov
cmp
xor
xchg
pop
loope
int3
adc
decb
xor
ja
testl
xor
loope
enter
mov
mov
rcll
outsl
mov
jb
sti
int
cmc
pmullw
out
incl
daa
mov
push
or
xchg
add
fwait
filds
fdivl
js
sbb
sar
scas
mov
mov
dec
mov
adc
iret
sub
jno
or
fs
cmp
icebp
xchg
mov
sub
add
mov
cmpl
into
scas
cmp
sahf
bound
ja
cmp
mov
ficompl
xchg
mov
jnp
pop
and
movsb
rorl
mov
fwait
rcr
mov
pop
jo
jnp
add
mov
dec
sbb
push
or
loopne
jmp
mov
jle
pop
leave
sub
fcoms
xchg
add
xchg
test
outsb
mov
jecxz
xor
fnsetpm(287
movsl
adc
sbb
test
scas
pop
xchg
mov
lock
flds
je
adc
bound
mov
inc
mov
arpl
mov
jnp
push
xlat
xchg
ret
ds
bound
popf
js
push
movsl
pop
pop
mov
sbb
and
lock
ja
ret
jg
pop
pop
insl
xchg
shll
test
add
ret
pop
xchg
push
or
insl
jle
add
push
adc
int
adc
mov
lret
cmp
or
cmp
ja
stos
cmp
pop
dec
pop
xchg
sbb
inc
outsb
int3
int
pop
or
sub
movl
pop
ds
dec
mov
jg
pop
mov
mov
adc
mov
fisttpll
ss
ss
mov
insb
pop
xchg
cmc
aas
stos
mov
xchg
mov
mov
or
push
aas
cltd
fistps
add
push
into
sbb
lret
cli
mov
and
push
fs
outsb
jmp
and
stos
and
loope
je
fwait
in
les
out
add
and
pop
mov
out
sar
lods
sub
sbb
jp
mov
xor
mov
ret
mov
push
sbb
add
popa
pop
mov
adc
jecxz
je
xorb
xorl
pop
pop
repz
pop
mov
loopw
in
push
ret
pusha
mov
cmp
xlat
jle
into
mov
inc
adc
cs
test
xchg
or
adc
fmul
int3
and
stos
shll
push
pop
or
imul
pop
ret
add
int3
sub
cmp
pop
mov
mov
fadd
insl
mov
inc
xor
jo
inc
sarl
in
xchg
fxch
pop
jne
or
sbbl
push
loop
add
pop
add
cmp
xor
lahf
fdivs
call
pushf
mov
iret
pop
jnp
mov
cmp
inc
pop
aad
hlt
push
mov
cmc
lret
or
mov
fsubs
pop
out
push
pop
mov
adc
mov
cli
mov
ret
cmp
mov
inc
sbb
sub
cs
scas
lret
lcall
xchg
out
pop
or
xchg
loop
in
iret
loope
push
ja
je
jecxz
shr
icebp
lock
lea
push
lea
dec
sbb
mov
je
mov
adc
or
sub
push
icebp
sbb
es
mov
stc
or
sub
stos
mov
ret
lahf
inc
in
cmpsl
ljmp
or
sbb
rcrl
push
stc
xchg
pop
jnp
into
push
stos
shrl
mov
scas
lret
out
ja
jb
push
test
les
adc
cmp
das
sbb
cmp
cmpps
adc
xchg
addr16
repz
add
jne
xchg
scas
je
mov
test
mov
jb
mov
dec
int
inc
jmp
pop
xchg
jmp
and
js
aaa
ljmp
push
scas
pop
mov
cwtl
cmp
movsb
aam
mov
pop
inc
sbb
pop
lods
xor
inc
xchg
mov
sbb
cmpsb
push
sbb
xor
mov
sub
adcl
outsb
repz
into
push
int
push
repz
and
sbb
cmpsb
inc
in
mov
mov
rcll
and
ljmp
push
jnp
xchg
sahf
push
clc
push
outsl
adc
mov
jecxz
mov
and
add
sub
inc
lea
push
out
test
lret
adc
add
lea
or
xor
adc
mov
das
push
push
ljmp
push
scas
push
jge
dec
scas
cmp
aas
mov
sarl
ds
dec
fnstcw
mov
cmc
pop
push
cmpsl
ss
push
mov
jge
daa
push
adc
or
or
cmp
and
cmp
popa
pop
mov
out
scas
sub
test
mov
test
je
ret
scas
adc
hlt
xor
lods
in
jae
sti
cltd
nop
fs
int3
sbb
push
jp
adc
lea
push
enter
lahf
mov
out
adc
mov
je
stos
adc
cmp
jbe
in
lret
xchg
mov
push
aad
pop
arpl
mov
insl
outsb
int3
sub
push
xchg
out
jl
outsl
pop
mov
popa
mov
mov
dec
out
or
leave
ds
js
sahf
adc
jp
or
xchg
cltd
stos
lcall
mov
in
enter
pop
pop
les
jo
andl
negb
cmp
cmp
movsl
jo
into
or
ud1
das
cli
inc
sbb
mov
jbe
ds
loop
iret
xchg
cmpb
pop
cmpsl
pop
fistl
inc
mov
clc
addl
jno
mov
push
repnz
scas
mov
lret
push
ret
aad
mov
mov
mov
push
dec
or
mov
pusha
jne
push
or
push
ljmp
out
dec
cmp
cmp
add
mov
adc
dec
das
dec
jp
and
nop
ss
or
mov
movsl
stc
push
inc
jg
xor
xchg
add
clc
loope
lods
inc
cmp
cmp
add
mov
adc
inc
pop
rclb
jbe
cmpsb
or
inc
push
pop
aam
lods
pop
movsb
shll
add
int
adc
mov
sub
popa
shlb
inc
fidivrl
aam
inc
pushf
cmp
mov
push
jbe
push
test
in
add
icebp
pushf
jle
gs
loope
push
arpl
xchg
in
push
rep
sbb
push
in
jnp
jecxz
pop
sub
or
sub
push
test
scas
pop
dec
fistl
adc
aad
inc
les
orb
clc
dec
repz
pop
roll
dec
jo
ja
or
dec
mov
rorb
test
sbb
jge
xor
mov
in
mov
xchg
and
cmp
divl
sub
jmp
mov
mov
cmp
add
shr
sub
lret
sub
pop
and
or
mov
sub
fwait
nop
ret
xchg
clc
sub
dec
mov
add
mov
and
fsubrl
pop
ljmp
fimull
push
arpl
fdivl
jl,pn
movsl
jle
xor
mov
xchg
out
push
or
mov
adc
cmpsl
mov
ret
cmp
out
std
andl
fcoms
in
mov
vhaddpd
mov
insl
mov
pop
add
in
cmpsl
int3
mov
mov
ret
xor
pushf
dec
enter
or
mov
mov
jae
shll
popf
cmpsl
adc
add
or
jmp
pop
and
xchg
sub
hlt
xchg
dec
cmp
ds
scas
cmp
dec
mov
mov
insl
sbb
push
pop
cmp
mov
out
lock
xor
mov
faddl
adc
push
ss
sbb
and
stos
mov
mov
cmp
inc
shl
push
xchg
mov
inc
xchg
xorb
fs
xchg
movsl
clc
out
repz
aas
add
cld
test
cli
clc
push
jp
jg
sahf
add
jae
push
jo
push
ret
lcall
cmpsb
and
les
inc
test
imul
test
pop
fdivrl
mov
les
addb
cmpsl
aam
dec
sbb
scas
lods
pop
pop
adc
jnp
xchg
imul
pop
popf
cmpsb
nop
popf
xorb
adc
cmpsl
inc
mov
xor
pop
mov
pop
xchg
fnstenv
aad
jno
aas
scas
pushf
jo
sub
loop
jecxz
loop
out
aam
push
mov
ret
mov
pop
or
inc
cli
push
xchg
adc
shr
sti
in
lahf
pusha
stos
dec
sti
dec
inc
xor
dec
sub
out
fwait
adc
test
dec
jp
cmp
mov
in
adc
push
and
xor
and
jge
data16
mov
dec
ret
mov
push
inc
xor
or
dec
push
xor
dec
bound
scas
lahf
lock
push
ja
outsl
mov
jcxz
into
or
ret
xorb
lds
fistpll
inc
test
push
dec
ror
jns
rcr
inc
jae
push
test
cmp
add
or
jmp
sti
sub
add
jle
mov
lret
stos
or
popf
movsl
sub
je
sti
push
lds
mov
rol
data16
stc
adc
insb
xchg
aaa
rcl
insb
push
pop
ret
ret
xchg
shlb
sbb
jecxz
js,pt
test
mov
push
xchg
lahf
es
mov
push
loopne
mov
scas
cmp
ljmp
mov
dec
push
in
jb
mov
lods
inc
aaa
pushf
mov
insb
jmp
mov
je
pop
or
xor
sbb
outsb
loope
push
cli
int
lea
or
aas
mov
aaa
fcoml
lcall
lahf
lcall
dec
int
ds
jl
lea
cmp
jne
loope
in
fnstenv
xor
out
push
mov
inc
stos
xchg
shll
outsb
mov
cmpsb
sub
or
pop
fadds
push
pop
loope
mov
lea
sbb
push
jl
xor
mov
lea
ljmp
ret
xorl
fiaddl
or
jmp
test
ljmp
pusha
lods
test
imul
jnp
sub
cmc
push
movsl
add
clc
loopne
push
cli
sbb
jp
es
jp
inc
pop
cmp
js
lea
data16
addr16
jle
xchg
mov
cmp
sar
lahf
sub
aam
inc
addr16
xlat
inc
mov
repz
sub
rcl
push
push
int
dec
push
repz
cld
mov
or
dec
rcll
sub
xchg
aaa
mov
xor
or
xor
mov
cld
mov
rcrb
std
mov
or
dec
and
aad
cmp
arpl
adc
mov
test
push
fcomps
and
neg
cwtl
jb
and
ljmp
jl
imul
mov
fs
in
mov
jns
mov
jge
stos
sbb
jge
nop
es
adc
sbb
sub
mov
bound
cwtl
mov
mov
mov
add
inc
add
shl
std
hlt
inc
lock
or
xchg
xchg
or
movsl
xor
pusha
aas
and
jo
out
clc
dec
hlt
jl
mov
ja
sbb
xor
movsb
push
jecxz
es
sub
pop
dec
mov
sub
sbb
adc
jg
ret
cli
stos
xchg
push
loopne
cmpsb
mov
into
repnz
and
add
testl
add
or
lods
nop
shl
push
push
cmpsb
outsl
fiaddl
lret
push
cmp
ret
or
insl
sbb
sbb
pop
or
pop
scas
push
dec
xor
ret
inc
and
mov
loopne
adc
stos
jg
pop
cmp
mov
adc
xchg
adc
inc
xchg
aas
mov
lods
pusha
or
adc
jmp
ja
ret
pop
psadbw
arpl
and
mov
movb
iret
out
cmpsl
push
push
out
addr16
jmp
daa
cmp
push
dec
cs
push
mov
xchg
jno
mov
mov
out
mov
popa
xorb
add
inc
mov
lcall
mov
inc
mov
stc
sbb
xchg
hlt
dec
movsl
lods
xlat
test
inc
scas
jecxz
aas
pop
jno
nop
jmp
mov
xor
ffree
jne
mull
sub
jb
dec
dec
adc
jne
pop
lds
cmp
in
push
or
clc
xchg
pop
add
cwtl
sub
loope
push
inc
pushf
xor
aad
shrb
adc
push
adc
test
sbb
sar
repz
sbb
in
rcll
scas
lds
incl
cmp
and
mov
fiaddl
sub
push
dec
adc
mov
arpl
add
sahf
out
sub
popa
add
push
xchg
idivl
push
add
dec
cmp
sbb
mov
mov
xor
xchg
fstl
inc
int3
in
insb
cld
movsl
not
cmc
xor
jno
fdivrs
jbe
jnp
push
lods
cmp
xor
sub
jp
pslld
mov
or
xchg
pop
push
mov
push
adc
testb
testb
and
mov
ret
iret
mov
jae
jp
jge
and
xorb
int
push
inc
test
xor
in
shlb
jnp
cwtl
pop
xchg
or
fprem
xchg
shrl
cmp
jne
cmpsl
sbb
dec
cmc
in
fwait
xchg
cmp
jg
imul
xchg
push
aam
and
xchg
ja
clc
jbe
inc
sbb
testl
xchg
xor
xchg
cmpsl
xor
cmpsl
hlt
out
inc
lds
mov
or
push
sub
das
scas
pusha
push
insb
xchg
shll
lds
jmp
out
movsb
fisttpl
icebp
dec
pop
sbb
clc
int3
mov
mov
into
lods
fisubrl
movsl
push
xor
in
aad
jne
popf
stos
int3
add
sti
lea
push
jne
or
cmpsl
inc
aam
mov
adc
jl
out
add
imul
scas
mov
cmp
int3
lea
dec
push
insb
jae
dec
add
push
imul
hlt
mov
lods
dec
fstps
push
arpl
in
call
cmp
and
ss
aad
sub
sub
sbb
adc
mov
pop
xlat
cmp
js
sbb
xchg
popl
push
popa
xchg
pop
pop
jg
stos
inc
in
or
xchg
or
mov
xchg
sbb
lea
inc
adc
sbb
pop
cmp
bound
test
xchg
inc
inc
push
mov
popa
cmpb
or
fsubl
jp
icebp
and
aas
aam
cmp
dec
inc
popf
mov
and
adc
or
in
pop
xchg
int3
push
add
mul
ss
cmp
and
mov
and
faddl
fdivrs
dec
fsub
pop
incb
mov
sub
fstpl
inc
jne
ret
push
outsl
mov
push
cmp
cmp
mov
fcoms
sub
and
mov
add
int3
pop
fcoml
cli
adc
add
scas
jmp
xchg
jge
sti
dec
movsl
popf
dec
lods
adc
inc
aad
out
dec
popa
addr16
shrb
lahf
frstor
mov
aaa
insb
dec
dec
or
das
mov
mov
cs
fdivrl
out
shrb
dec
cmp
lcall
pop
push
mov
or
sub
sub
fisubl
jle
es
jp
sbb
in
push
xor
adc
shrb
xor
clc
arpl
sub
jbe
xchg
sbb
call
pushl
jmp
imull
pop
xlat
fmuls
mov
pop
and
cs
out
mov
sbb
movsl
pop
jge
jecxz
jge
incl
mov
out
push
jmp
pop
insl
sub
insl
mov
out
lods
jns
int
cwtl
incl
imul
ret
test
ja
xchg
mov
mov
je
out
movsb
movsl
pop
push
xchg
sub
and
cmp
jne
adc
divl
xor
and
out
fldcw
push
lock
lret
mov
es
stc
jae
pop
scas
scas
shll
dec
outsl
adc
imul
mov
fs
dec
in
iret
sbb
jmp
sbbb
push
adc
mov
xor
or
addr16
sbb
sbb
jle
imul
xchg
push
adc
je
rcll
ds
sub
fdivr
and
lods
hlt
pop
mov
sbb
mov
mov
jge
lock
insl
dec
orl
in
jae
xchg
jmp
or
cmp
xchg
adc
ljmp
add
lahf
jp
inc
mov
and
xchg
mov
test
mov
scas
add
pop
outsl
cltd
clc
adcl
sbb
cs
mov
push
arpl
ret
mov
lds
ljmp
out
push
movsl
and
mov
mov
ss
mov
mov
dec
testl
mov
or
scas
ja
cmp
push
stc
pushf
mov
sub
jnp
ret
and
add
out
daa
cld
ljmp
mov
sbb
loop
push
hlt
mov
subl
sbb
push
mov
pop
dec
int3
or
push
push
int3
aad
mov
mov
xchg
scas
setl
or
pop
decb
adc
imul
pop
jnp
repnz
popf
cmp
push
dec
es
or
cs
cmp
mov
dec
je
or
and
push
ret
cwtl
sti
adc
mov
js
jbe
cli
inc
cmc
ficoms
mov
sbb
sub
adcl
scas
and
mov
jp
mov
stc
mov
mov
xor
aaa
adc
xchg
fs
push
nop
mov
pop
sub
movsl
xchg
xor
les
insl
daa
cmp
dec
jge
orb
out
ja
aaa
cmp
cmp
loope
dec
scas
xchg
int
imul
push
sub
insb
dec
data16
adcl
adc
add
fidivrl
sbb
sbb
stos
inc
and
lods
lcall
daa
das
mov
cmp
jmp
fadd
fildl
xchg
mov
clc
sbb
int
fcmovnu
pop
or
daa
or
insb
xchg
push
add
repz
test
sbb
mov
lods
stos
inc
mov
adc
dec
in
cmp
inc
je
loope
aas
mov
or
inc
movsb
js
arpl
test
inc
cmp
cmpsl
shll
cli
daa
test
in
lcall
add
das
aam
and
push
es
inc
jno
jns
dec
jb
inc
mov
movsb
pop
divl
or
gs
inc
push
std
pop
cmc
push
push
lahf
sbb
sahf
adc
ja
and
fsts
pop
test
or
xor
pop
xchg
push
pop
or
mov
out
adc
fwait
push
cmp
andl
ss
push
mov
dec
mov
push
fdivrp
movb
ja
aam
lods
loopne
mov
scas
cmp
iret
add
sti
arpl
lret
xor
imul
lods
loopne
rorb
cmpsb
gs
dec
imul
xlat
pop
lods
in
push
pop
pushf
adc
sbb
mov
dec
mov
hlt
mov
jno
push
pop
xor
pusha
push
inc
popa
dec
cld
ljmp
out
xor
push
jno
aaa
dec
push
aad
aas
pop
sbbl
rcl
arpl
sub
mov
mov
scas
and
stos
mov
data16
flds
dec
iret
repz
roll
push
dec
lock
loope
jl
push
cmp
push
ficoms
lret
dec
add
mov
or
pop
daa
fnstcw
jb
icebp
push
mov
jp,pn
arpl
int3
push
add
jg
adc
add
add
pop
outsb
jmp
xchg
and
inc
sbb
ret
jbe
adc
or
mov
lcall
cmpsb
shrb
mov
movsl
int
xorb
xlat
icebp
lahf
ret
addr16
fldl
scas
mov
adc
fwait
add
and
movsl
jae
and
daa
rclb
ret
dec
popl
lret
inc
dec
push
into
jno
inc
and
fdivs
sbb
lods
cmp
pop
inc
clc
movsb
clc
inc
add
mov
and
xchg
rcr
and
mov
cmp
push
sbb
or
jmp
and
inc
cld
pop
jnp
sub
xcrypt-ecb
cmpsl
jne
rclb
fstpt
orl
push
jae
push
sub
sub
add
iret
test
xchg
inc
dec
ret
es
or
and
pusha
mov
cmp
in
adc
out
mov
adc
and
inc
xchg
shll
pushw
subl
roll
inc
or
and
cmp
popf
decl
ds
jmp
clc
stos
mov
or
dec
test
iret
sub
fnstcw
push
cmpsl
data16
mov
mov
mov
outsl
inc
out
cmp
into
insb
ss
sbb
add
leave
sub
mov
dec
pop
fmul
shl
sub
rolb
arpl
sub
xor
push
dec
scas
cli
ret
in
sub
cmp
jmp
enter
pop
add
aam
sbb
adc
test
mov
xchg
push
jo
std
lods
dec
sub
repz
xchg
nop
sub
adc
jl
jnp
pop
repz
outsb
jne
out
outsl
pusha
inc
aas
mov
xchg
cmp
std
add
dec
sub
sti
sbb
loopne
testl
stc
xlat
test
and
lds
test
repz
fldl
xchg
mov
xchg
and
mov
rcl
pop
iret
sbb
inc
jecxz
js
mov
mov
ja
es
int3
lret
mov
add
pop
lods
lret
inc
dec
negb
sbb
test
imul
adc
pusha
pop
out
outsl
adc
rcrb
xchg
testb
fdivrl
fnstsw
or
cmpsb
add
xchg
dec
imul
enter
jo
data16
sbb
stos
and
xlat
push
adc
std
int3
pop
xchg
xchg
and
leave
adc
adc
jae
pusha
shrb
xlat
pop
lahf
ljmp
shlb
sbb
fsubrp
repz
and
jp
bound
sub
testb
cmp
aas
add
mov
push
lods
lods
pop
add
pop
loopne
pop
mov
std
adc
mov
and
arpl
insb
mov
les
movsl
mov
sbb
push
js
in
xchg
jge
out
outsb
aaa
and
mov
mov
outsb
imul
lea
mov
adc
ds
popa
add
out
cmp
pop
push
push
mov
lods
sbb
jo
xchg
dec
ljmp
cmp
enter
jmp
js
cmpsl
lret
xor
stos
mov
mov
jne
std
cwtl
mov
push
iret
sub
xor
xor
lods
dec
sub
jl
movsb
mov
lds
adc
pop
int3
js
dec
sbb
adc
inc
mov
cmc
pop
clc
daa
xchg
aam
je
dec
repnz
add
jge
lods
imull
dec
cltd
jmp
push
xchg
rclb
stos
outsl
lea
push
fiadds
in
cmpb
addr16
push
mov
fsubs
or
fisttpll
inc
mov
dec
pop
insl
js
xchg
scas
in
sub
call
aaa
icebp
or
ret
jbe
repz
xchg
lds
pop
daa
mov
jmp
xor
leave
jp
add
xchg
fnstsw
ljmp
adc
std
test
adc
and
mov
xor
cwtl
out
arpl
jo
jae
pusha
pop
lcall
inc
xchg
mov
mov
test
adc
test
cwtl
jmp
mov
cld
pop
push
faddl
or
in
mull
xchg
pop
mov
leave
jo
in
xor
sahf
adc
shlb
and
into
cs
adc
pop
pop
fildl
or
pushf
mov
mov
cld
add
inc
jl
jl
xor
test
inc
push
pop
out
adc
mov
ss
sub
jl
dec
outsb
sbb
in
inc
scas
out
mov
mov
push
adc
xor
iret
and
dec
mov
sbb
ds
test
jae
clc
rolb
popa
fldenv
add
mov
lods
int3
cmp
pop
rorb
xchg
outsb
mov
ljmp
daa
xchg
sete
adc
xor
push
ss
imul
add
mov
imull
cwtl
insl
xor
repnz
xlat
add
in
push
xchg
inc
cs
fsubr
push
cs
fnstsw
cltd
test
cld
inc
hlt
jmp
jno
dec
in
cmpsl
dec
adc
sbb
xchg
sbb
into
clc
sub
sbb
fs
arpl
jae
pop
jo
orl
pop
cs
pusha
dec
or
jmp
and
ret
movl
xor
or
mov
arpl
repz
jmp
out
add
mov
xchg
lahf
or
fdiv
cli
sub
fs
sbb
fisttpl
pop
push
jne
test
adc
test
sbb
cwtl
push
inc
xorl
stos
shrl
xchg
sbb
cli
and
test
stos
jle
mov
ljmp
push
lods
mov
and
pop
scas
add
ret
and
xor
mov
add
mov
push
fstl
xchg
mov
scas
or
xor
pop
mov
cmp
fcmovnu
es
dec
js
out
imul
dec
sbb
mov
pop
push
jnp
arpl
adc
iret
iret
add
push
mov
arpl
movsl
pop
jle
mov
jl
aas
add
add
inc
jne
test
and
fmul
jnp
inc
sbb
fwait
jno
out
in
or
ds
push
sub
inc
jg
add
pushf
test
inc
mov
outsb
fdivrl
xor
adc
push
push
cs
pusha
and
cmpsl
jbe
pop
xchg
movsb
and
test
fldl2e
test
test
pop
pop
add
lock
popa
xor
pop
js
jo
mov
sbbb
sub
dec
sub
loopne
mov
ja
call
loopne
pop
xchg
addr16
ss
push
cmc
subb
xlat
enter
inc
add
adc
jo
mov
popf
das
arpl
ljmp
mov
fadds
push
negb
roll
lret
loopne
dec
icebp
and
xchg
xchg
jecxz
out
int3
shlb
sbb
mov
andb
out
dec
mov
fisubrs
cmc
iret
and
int
pop
ss
aaa
sbb
jl
int
rcrb
push
testl
call
lahf
dec
test
or
dec
nop
cmp
ja
jg
dec
movsl
push
mov
cmp
sub
imul
out
mov
push
mulb
inc
add
test
lea
push
fstpl
mov
repz
mov
mov
cmp
gs
mov
xor
jno
and
repnz
sbb
clc
mov
jl
jle
adc
shl
xor
jns
push
clc
aas
mov
xor
lock
cmp
divl
idivb
or
adc
mov
sbb
jno
nop
out
sti
dec
jge
lret
mov
test
push
mov
subb
dec
add
cwtl
test
scas
loop
hlt
es
lahf
loopne
mov
enter
aas
add
sahf
jnp
sbb
pushf
bound
jp
lret
cmpsl
insb
shrb
enter
pusha
pop
xchg
dec
or
movsb
push
adc
or
mov
pop
sub
and
xchg
jmp
pop
lret
jge
dec
sbb
fcomps
sbb
inc
adc
or
xor
or
and
dec
fnstsw
push
xchg
roll
insl
xchg
cwtl
mov
idivl
into
pusha
adc
rcrl
sbb
arpl
cmc
push
fstps
mov
inc
xchg
ja
mov
test
push
and
or
sub
aaa
or
fbld
pop
add
push
mov
xor
ss
push
cltd
sahf
xchg
sahf
je
cmpsl
xchg
adc
jg
xchg
add
subl
cs
iret
mov
pop
mov
sbb
sub
fmuls
fisubs
xor
sbb
in
xchg
cmpxchg
push
ja
xor
scas
sarb
or
xlat
adc
xlat
dec
mov
inc
in
sbb
xchg
arpl
ss
call
cmp
clc
sbb
mov
cmp
repnz
mov
call
pop
inc
into
cs
xchg
cmp
loopne
lds
xchg
adc
jo
lods
and
fsts
cmc
sbb
jle
cmp
adc
mov
out
js
das
cmp
mov
cmp
pop
cmp
repnz
push
mov
pop
or
subl
insb
dec
shl
insb
out
jmp
fs
movsb
xchg
dec
pop
es
adc
pop
inc
lds
push
ret
push
pusha
jl
mov
jbe
repz
adc
mov
sarb
mov
adc
xchg
jg
lds
lret
jmp
adc
or
inc
push
pop
pop
push
push
gs
mov
add
xchg
push
push
in
daa
out
sbb
adc
scas
jmp
inc
loope
dec
fimull
sub
add
cltd
mov
clc
arpl
sub
jmp
add
jle
stos
mov
jge
inc
enter
lods
push
in
into
in
pushf
or
int3
pop
dec
mov
pop
and
ret
or
nop
push
mov
loopne
ja
mov
xchg
fmuls
mov
loope
iret
inc
cmp
shlb
loope
pop
mov
sub
in
out
xor
push
sbb
push
push
popf
cli
mov
cwtl
lea
fistl
push
xchg
dec
sub
xor
adc
mov
iret
test
dec
xchg
js
mov
adc
adc
nop
mov
cmpsl
loopne
jno
xchg
inc
inc
cmpsb
dec
add
push
sub
xchg
int
mov
mov
sbb
sbb
ret
in
ja
mov
dec
cmp
scas
fwait
mov
scas
repz
jo
adc
in
cld
je
or
fstpt
xchg
push
add
out
repnz
jp
lea
fldenv
push
adc
dec
adc
dec
mov
inc
inc
add
pop
xor
ja
dec
push
sti
mov
mov
add
inc
push
jbe
mov
lods
xor
insl
fwait
enter
mov
arpl
xor
push
or
outsb
dec
and
push
shlb
xchg
into
lock
jo
fmuls
dec
sbbl
lea
into
adc
call
icebp
nop
jno
xor
jmp
xchg
adc
insl
xor
jg
in
scas
ja
mov
imul
mov
lcall
pusha
adc
addr16
int3
jmp
jecxz
enter
and
add
jmp
repz
xor
in
mov
jmp
pop
ret
jecxz
cmpsb
leave
shl
div
test
xor
inc
sbb
mov
and
fmuls
adc
cmp
bound
leave
clc
fbld
movsb
mulb
shll
addb
negl
push
shr
jge
loop
xchg
pusha
ffree
cmp
xchg
push
aas
fwait
into
jmp
lds
add
inc
adc
dec
into
lds
int3
or
in
mov
mov
scas
pop
out
clc
adc
bound
xor
mov
lods
leave
push
testl
mov
push
sub
mov
loopne
mov
mov
add
mov
or
adc
adc
addl
fs
sbb
cmpsb
xchg
push
or
lret
lock
mov
lcall
inc
mov
mov
mov
xor
dec
pusha
ret
cmp
dec
sub
cs
stos
repz
imul
xor
stos
inc
sub
mov
jl
int3
or
out
push
cwtl
ds
and
mov
insl
inc
xchg
mov
and
pop
fstps
fsts
jp
lods
or
dec
test
sub
repnz
push
inc
jno
rcrb
cltd
cld
dec
dec
dec
xchg
pushf
pusha
jecxz,pn
xor
cmc
pop
sub
pop
xchg
xchg
add
repz
es
dec
pop
fsubrs
xchg
push
push
and
icebp
outsb
aad
push
enter
pop
add
and
push
push
cmpsl
insl
or
les
jg
adc
pusha
adc
add
mov
and
push
jge
cmp
lds
scas
mov
popa
or
cmp
outsb
or
ds
test
jle
mov
push
inc
dec
rcrl
maskmovq
mull
addb
push
insb
xchg
mov
sub
test
fiadds
adc
int
mov
xchg
xor
add
and
bound
push
push
int
and
cmp
push
and
mov
cld
ljmp
dec
xchg
gs
mov
test
divb
iret
out
or
iret
pop
jo
popa
pop
stc
jmp
fldt
test
sub
pop
ret
or
imul
je
int3
jo
imul
rol
mov
mov
sub
xchg
or
sarl
xchg
xor
das
xchg
popa
dec
add
imul
mov
lea
lds
fucom
mov
cmp
enter
push
inc
jnp
icebp
sub
icebp
jnp
xchg
pop
insl
mov
lock
out
xor
insl
not
pop
lock
popa
adc
cmp
ja
lds
es
fwait
addb
movl
mov
cmp
jge
js
dec
ret
outsl
movsl
shll
push
push
push
sbb
in
sbb
xchg
sbb
mov
in
pop
sbb
ss
push
or
nop
mov
pop
dec
ret
xor
jae
push
xchg
js
push
mov
adc
and
inc
xor
push
dec
jmp
clc
pop
adc
pop
lret
andps
xchg
lea
aad
cltd
mov
scas
sub
cmp
xlat
jnp
mov
addr16
imul
xor
icebp
xor
pop
dec
xchg
mov
icebp
stos
dec
into
sbb
add
lcall
jp
in
jl
mov
ret
mov
lds
mov
popa
dec
hlt
cmpsl
and
je
and
das
cld
adc
icebp
jnp
jecxz
lds
pop
popa
xor
jo
int
in
lds
inc
jge
mov
adc
fnstcw
and
enter
iret
imul
lret
mov
mov
mov
mov
mov
and
aad
cltd
rolb
stc
cmpsl
and
push
pop
stos
fcompl
clc
xor
xchg
popa
out
gs
cmp
jns
xor
or
aad
ljmp
or
add
pop
mov
mov
rclb
in
push
out
adc
lock
add
push
dec
lret
cmpsl
pop
addr16
jb
mov
xlat
fs
test
sub
test
dec
sub
jmp
mov
xchg
jmp
mov
int3
jl
xchg
jge
mov
sub
lods
xchg
mov
mov
pop
xor
stc
lret
in
dec
lods
cmp
adc
pop
in
cltd
xor
jb
arpl
xchg
mov
shll
mov
mov
inc
push
int
xor
lock
addr16
sub
sar
hlt
adc
mov
ret
and
fadd
outsl
js
fldcw
mov
push
mov
test
insb
movsl
out
mov
and
cs
cwtl
push
test
nop
xor
sbb
in
sbb
xchg
jo
push
push
sub
cmp
mov
negb
loopne
inc
mov
mov
sbb
xchg
call
out
sub
push
loop
inc
push
add
cmp
stos
adc
in
push
jbe
xor
popf
test
icebp
ja
pop
push
pop
es
cwtl
rcr
xchg
lock
and
xorb
mov
mov
dec
pop
mov
adc
xor
scas
fsubrp
lods
test
jns
test
mov
pop
mov
add
sub
rcrb
and
mov
out
das
sub
fcomip
les
cmp
shrl
push
add
add
inc
adc
aas
into
or
or
popa
arpl
idivb
insl
push
sub
push
add
test
mov
inc
sbb
sahf
or
data16
xchg
dec
lea
cmp
xlat
xor
bnd
inc
sahf
xor
mov
int3
xor
in
add
add
sub
mov
lods
notb
mov
mov
mov
push
bound
ds
dec
das
jge
pop
test
outsb
mov
imul
jnp
out
xlat
lods
lret
insl
out
stos
add
outsl
pop
push
mov
clc
jo
inc
bound
aam
sbb
sub
add
cwtl
inc
inc
into
repnz
stos
inc
dec
sbb
jecxz
imul
jne
sbb
jmp
pop
idivl
sbb
ds
jo
and
and
or
andl
push
mov
inc
jno
jge
and
vmread
out
add
mov
test
xchg
adcl
cmp
ss
add
push
push
pop
cs
daa
test
pop
jcxz
js
ret
je
adc
xchg
pop
sti
adc
or
jmp
push
mov
jne
pushf
jl
jnp
fists
cli
int
mov
inc
pop
aad
sahf
jne
das
cmp
nop
mov
sub
xor
xor
jno
cltd
daa
xchg
ror
cmp
xor
inc
xor
repz
ffreep
jle
into
ljmp
enter
or
test
int
das
cmp
sub
push
and
mov
lods
fucomp
xchg
pop
das
xchg
lret
jo
adc
or
daa
push
call
pop
imul
popf
es
jne
popf
pop
stos
loopne
and
cmc
xor
leave
xchg
clc
push
adc
lret
cwtl
xchg
imul
mov
in
stos
jle
jecxz
les
sbb
mov
mov
sahf
movsl
sahf
cmp
cmpsb
cmpsl
outsb
jmp
inc
jne
mov
inc
push
dec
insb
andb
sbb
mov
aas
icebp
pop
mov
mov
stc
or
neg
cmp
nop
mov
dec
jno
iret
and
rclb
int
and
lods
pop
xorl
call
push
or
in
shlb
pushf
lcall
xchg
inc
push
icebp
mov
xor
or
xchg
js
sub
insl
in
jb
pop
jecxz
std
fs
rcrl
dec
sbb
or
addl
xchg
or
sub
setl
inc
and
or
gs
je
add
cmp
call
inc
sub
mov
inc
ljmp
faddl
xor
xchg
out
cmc
xchg
cwtl
leave
mov
test
ficoml
mov
and
add
cmc
mov
mov
leave
in
aas
dec
inc
cmp
sub
lret
push
not
add
insb
inc
or
lcall
fcoml
jae
test
xor
lock
mov
pop
stos
movsb
test
mov
inc
push
lret
mov
fsub
bound
mov
repz
shll
cmp
iret
aad
mov
dec
fldcw
lods
fdivr
xor
fwait
and
push
jae
mov
sub
cwtl
xor
xchg
sbb
cmpsl
incl
dec
xchg
fbld
jo
xor
std
sbb
cmp
pop
adc
xor
orb
fdivrl
pop
pop
arpl
sub
rcl
push
ret
ja
out
sbb
adc
scas
mov
leave
bound
jnp
add
mov
aaa
fstp
xor
mov
lods
cmpsb
xor
jnp
sub
mov
sahf
imul
pop
push
popf
fnsave
cmp
push
jns
dec
dec
mov
imul
test
mov
fcoml
mov
lods
aad
pusha
jae
push
xor
push
push
movsb
loopne
fdivrp
fwait
push
xchg
hlt
sahf
mov
pop
dec
fildl
xchg
movsl
out
push
push
xor
test
incl
inc
xchg
je
sub
and
xchg
add
addr16
push
pushl
jb,pt
lds
inc
mov
out
cmp
inc
push
je
insb
xor
mov
sbb
mov
dec
das
inc
sahf
mov
dec
adc
subps
inc
xchg
jp
std
mov
lcall
cwtl
fisttpl
and
mov
fwait
cmp
sti
rcr
sub
rcrl
push
popl
scas
repnz
in
or
add
pop
mov
jg
xor
and
gs
cwtl
imul
xor
pop
dec
repz
enter
xor
pop
jmp
xchg
pop
bts
adc
lods
or
es
inc
mov
jmp
std
aas
mov
dec
cmp
add
shrb
mov
xchg
mov
loope
mov
aam
out
stc
inc
sub
mov
mov
mov
shll
add
jle
mov
adc
jae
jne
inc
andps
inc
xlat
addr16
sbb
cmp
jmp
pop
adc
adcl
adc
dec
ret
jmp
push
ljmp
mov
out
and
mulb
sub
mov
mov
inc
fsubl
movsl
pop
or
scas
addr16
into
xchg
fsubrl
mov
and
lahf
ljmp
sbb
aam
icebp
das
in
arpl
imul
mov
add
fcmovnu
fisubrl
pop
mov
sbb
sub
inc
jp
ljmp
xchg
test
cmp
movsw
add
mov
cli
lods
into
jno
push
and
jmp
jge
mov
call
xchg
pop
popf
cmp
addr16
push
adc
xor
lret
xchg
add
push
sbb
shlb
inc
test
scas
jge
jmp
dec
imulb
orl
ja
les
mov
mov
mov
push
sub
mov
xchg
jle
lds
mov
jle
xor
mov
pop
mov
loop
shlb
dec
inc
or
ret
hlt
ja
orl
mov
cmp
pop
push
jnp
adc
jo
mov
rclb
inc
or
jge
cmp
or
addr16
pop
je
sete
lahf
fmul
ret
inc
mov
sbb
mov
xlat
mov
aas
pop
in
pushf
lds
cmpsb
mov
mov
adc
sub
xchg
xor
cmp
mov
ret
sbb
and
mov
add
jp
pop
scas
or
in
xlat
sbb
jae
psadbw
push
mov
or
testb
movl
mov
and
mov
adc
and
fs
mov
outsl
cmp
data16
xchg
int
popf
cmc
orb
cld
sahf
lret
xlat
jbe
and
stc
lcall
lcall
pop
cmp
ss
ret
xor
sub
fisttpll
js
sahf
push
ret
stc
xor
aas
add
dec
jns
dec
or
adc
iret
aam
push
mov
add
inc
faddl
dec
out
xor
sbbl
shlb
lret
repnz
cld
aam
into
inc
loop
push
inc
mov
cmp
push
mov
sub
movsl
out
test
cmp
jmp
or
shll
mov
lods
xor
xchg
mov
test
sub
jg
mov
or
out
mov
push
and
pop
cmc
aad
int
jo
cli
mov
jmp
daa
insb
mov
mov
data16
add
mulb
push
sbbl
mov
mov
mov
inc
inc
xchg
aas
movsl
mov
push
sbb
addr16
pusha
divl
loopne
cmp
incl
pop
cld
xchg
xchg
ljmp
test
adc
fs
mov
xchg
mov
xor
inc
adc
adc
xor
fmull
enter
mov
xchg
or
addb
push
xchg
dec
lds
add
scas
mov
cmpb
outsb
out
scas
cmp
test
jp
fsubl
data16
outsb
mov
int
mov
add
icebp
in
add
loopne
fisttpl
cld
popa
daa
sbb
lahf
jne
cmp
addr16
sbb
out
xchg
test
push
xchg
mov
sahf
push
test
cmpsl
pusha
ss
xor
xchg
jbe
addr16
mulps
addb
fisttpl
xchg
popf
or
sbb
inc
pop
or
ljmp
or
scas
icebp
enter
dec
push
aas
and
imul
aam
in
sbb
fyl2xp1
scas
xor
loopne
mov
cwtl
cmp
sti
rorb
cmpsl
repz
or
clc
jp
xor
cmpsb
test
dec
int3
xchg
addr16
add
scas
aam
stc
icebp
cmp
pop
jl
add
xchg
mov
sbb
imul
pop
lcall
push
aam
sub
xlat
movsb
mov
jbe
pop
xchg
enter
or
orl
pop
mov
divb
xlat
sbb
repnz
inc
push
cmp
push
sti
add
scas
repz
test
and
jo
pop
jle
xchg
sbb
and
fucomip
mov
lahf
dec
out
pop
pop
xchg
enter
into
mov
and
scas
shrl
mov
daa
data16
sbb
js
je
stos
adc
ret
fldt
clc
lret
mov
jle
pushf
shlb
stos
add
cwtl
mov
push
test
dec
or
dec
mov
sbb
rcll
inc
sub
pushf
add
test
pusha
jae
or
dec
and
xor
xorl
out
ljmp
orl
daa
mov
mov
or
fxch
outsb
inc
aam
mov
stc
adc
mov
mov
or
push
cmp
nop
fdiv
sub
xchg
lret
jl
push
jg
jo
adc
cltd
pop
and
mov
loopne
std
out
insl
negb
cmp
in
sbb
arpl
pop
xor
inc
les
xor
addl
push
inc
shlb
mov
mov
cmp
addr16
pop
sarl
pop
hlt
ficomps
jg
dec
adc
jl
jg
loopne
leave
mov
test
fs
repnz
or
rclb
xor
mov
mov
imul
jmp
inc
shl
js
and
pop
loopne
cltd
popf
sti
adc
xchg
fcomp
and
loopne
adc
fs
std
adc
or
jecxz
jno
aaa
sbb
jns
sbb
adc
lcall
sbb
into
push
adc
leave
int3
dec
jmp
in
adc
arpl
movsl
ret
scas
inc
mov
in
daa
test
mov
xor
rcl
pusha
fcomps
push
out
mov
aam
mov
fdiv
sbb
cmp
ljmp
jg
mov
jb
in
mov
ljmp
sbb
jp
dec
mov
mov
xor
popa
cli
imul
mov
jmp
rorl
add
stos
clc
popf
imul
dec
jmp
and
popf
push
leave
lcall
sahf
sahf
fnsave
cs
dec
inc
inc
jne
pop
subl
stos
int3
sub
mov
jns
je
adc
and
fs
xor
shr
leave
out
ja
gs
nop
sbb
jl
push
out
es
xor
xor
nop
mov
sub
std
inc
jge
sub
shlb
incl
cmp
mov
shl
xor
push
cmpl
mov
shll
mov
push
fpatan
movsb
lea
jg
inc
test
je
fdivp
xchg
mov
icebp
je
xor
dec
jge
mov
xor
adc
jg
sarl
ds
lret
add
xchg
pop
rcll
call
pop
push
inc
fbstp
je
inc
enter
cmp
movsl
adc
pop
shlb
or
mov
mov
mov
mov
roll
loopne
dec
adc
aad
sub
jmp
ret
cmpsl
fldt
mov
sti
pop
stos
shl
daa
aaa
jne
pop
xor
dec
adc
mov
mov
bound
insb
add
cmpsb
subb
add
insl
add
sar
out
push
cmpsl
or
lock
mov
adc
inc
scas
sbb
push
insb
and
mov
aad
int
loop
jno
jp
lds
cmp
and
das
test
jl
movsl
out
ds
adc
nop
insl
gs
subb
mov
outsb
sub
push
push
cmp
icebp
mov
loopne
inc
sti
scas
in
rclb
dec
ds
cmp
cmp
adc
in
pop
clc
xor
cmp
sti
fsub
test
rcr
push
lret
pop
adc
push
push
jae
lods
out
and
inc
sub
divl
and
jne
or
outsl
icebp
or
jmp
and
pushf
xchg
call
push
lock
jge
xchg
shlb
int3
adc
and
insb
push
jge
xorb
insb
or
inc
outsb
inc
jne
addl
scas
dec
sub
rolb
outsl
or
sti
push
cwtl
icebp
mov
sub
cmp
jns
and
subl
lcall
inc
adc
cmp
imul
arpl
lods
or
pop
cs
shrl
aaa
mov
mov
popa
pop
rorl
xlat
lahf
movsb
fmulp
out
cmpb
sti
and
mov
pop
jo
jle
add
call
or
pop
clc
scas
ror
mov
in
enter
testl
jg
push
aas
pusha
pop
jae
out
out
dec
push
xchg
int
imul
mov
pop
cld
hlt
or
jmp
jns
lcall
subl
out
push
movsl
and
and
dec
loop
jno
push
rorb
fldl
fbld
in
aas
fcoml
lret
shl
adc
lods
ret
mov
push
cwtl
test
sub
sub
clc
jmp
cmpsb
cmpsb
xchg
or
lds
dec
movsl
xor
test
or
in
inc
inc
mov
std
shrl
fiadds
out
sbb
aad
fdivs
jg
inc
mov
mov
nop
shlb
nop
arpl
std
adc
js
adc
js
mov
pop
lds
dec
pop
push
adc
add
jl
add
int
fcoml
push
jns
inc
in
insb
mov
mov
jmp
or
mov
sahf
aad
or
sbb
pop
inc
lahf
adc
xchg
scas
and
mov
mov
fwait
out
push
lock
fstl
cmp
push
rorl
in
pusha
or
dec
call
mov
adc
dec
inc
cld
xor
or
shrb
pop
stos
lods
in
adc
mov
cmp
xor
jle
push
testl
stc
pop
gs
xor
cmp
inc
jmp
je
hlt
cmp
add
mov
stc
dec
in
jo
ljmp
pop
sub
stc
xorl
das
sub
sbb
xor
loope
loop
inc
add
add
mov
jns
test
add
push
fdivr
xlat
push
inc
cmc
cs
and
out
cltd
daa
jb
cmpsl
and
fidivrl
mov
dec
jne
jb
ret
out
xlat
ja
scas
pop
test
sbb
and
inc
xor
jne
in
popf
loope
mov
sti
insb
mov
adc
adc
cmpsl
cli
cmp
mov
pop
push
adc
mov
out
pop
stc
test
mov
mov
xor
fwait
rcrl
xor
jle
xchg
cmpsl
test
std
in
xor
popa
ret
movsl
aad
or
fdivr
or
lods
jmp
lahf
cmp
xor
mov
or
or
lods
jl
sahf
or
pop
sub
jp
rcr
scas
shl
sbb
and
les
out
loop
pop
jmp
loope
or
adc
mov
pop
push
xchg
push
add
out
dec
mov
loope
jmp
pop
jae
xchg
push
push
les
push
lcall
addb
cmp
call
mov
pop
movsl
and
imul
add
mov
insl
push
inc
jmp
or
popf
das
xor
out
mov
scas
shlb
popf
stc
pop
icebp
push
ficoml
sbb
xor
enter
push
xchg
mov
popf
and
jbe
xor
inc
sub
or
stc
mov
mov
or
sub
dec
sub
mov
xchg
cmp
mov
sub
sub
sbb
mov
cli
xchg
test
cltd
sti
pop
jp
inc
stc
addl
jne
pop
jge
pop
mov
pop
fs
out
sbb
lods
xchg
xor
and
pop
stc
add
repz
pusha
mov
sbb
pop
push
mov
dec
cli
add
cmp
lods
out
add
nop
xchg
adc
xchg
shrl
mov
lods
das
push
subl
jg
sarl
sub
insl
mov
pop
pmaddwd
xchg
cs
cld
push
mov
cli
pushf
mov
and
inc
movsw
les
or
iret
arpl
scas
mov
in
orl
sahf
inc
mov
movsl
jge
xchg
popa
pop
adc
imul
and
mov
daa
pop
sbb
pop
les
lods
mov
cmc
dec
sahf
insl
lock
js
pop
aam
jle
xlat
inc
dec
mov
cltd
fisubs
and
add
insl
fnstenv
jecxz
cwtl
rcrl
fucomip
sbb
mov
pusha
gs
sub
lock
mov
cltd
xchg
mov
fbstp
pop
mov
cmp
xchg
lock
popf
repnz
sub
pushf
lret
mov
adc
jno
dec
mov
pop
pop
imul
mov
nop
cmp
adc
fwait
xchg
xchg
xor
ret
orl
and
insl
push
mov
xchg
push
or
cltd
daa
xchg
iret
cmp
in
in
pop
sub
dec
xchg
xor
out
cltd
push
xor
out
repnz
jecxz
ja
xorb
xor
pop
rcrb
call
add
insl
mull
cmp
loope
cmc
adc
dec
mov
add
push
xchg
mov
jne
sub
cmp
push
mov
int3
mov
fsubs
push
arpl
mov
mov
mov
scas
leave
inc
jbe
pop
cmp
movsl
mov
pop
push
dec
sub
shr
out
inc
js
imul
ret
sub
cmpsb
sahf
xchg
sub
mov
xor
fsubrs
les
sti
xor
aaa
mov
push
xchg
mov
movsb
dec
inc
ds
jns
movsb
lds
dec
cltd
nop
or
dec
add
lods
in
pushl
adc
mov
xchg
and
push
clc
jne
test
out
and
pop
mov
mov
add
mov
inc
jo
jno
mov
aam
rcrb
pop
lret
mov
cmp
mov
es
int3
mov
sti
jae
ja
cmp
or
notl
lock
inc
xchg
cmpsl
xchg
jb
dec
outsl
out
xor
test
jp
dec
ret
pop
mov
xor
into
mov
xorb
mov
push
stc
in
mov
bound
sti
dec
fstl
push
mov
mov
xchg
cmp
lds
xchg
scas
imul
sbbl
mov
sti
std
sbb
or
hlt
in
xchg
adc
adc
lahf
hlt
bnd
scas
into
int
jp
aam
xchg
mov
push
jnp
jns
mov
cs
and
cli
rcl
fxch
sub
xchg
out
data16
and
into
loope
mov
mov
or
cltd
pop
mov
adc
add
push
icebp
or
sub
jae
loop
int
mov
or
pop
mov
and
jmp
subb
dec
xchg
jnp
mov
xchg
int
imul
pop
sbb
or
ss
into
scas
inc
cld
mov
lret
jg
push
push
test
icebp
xchg
and
cld
xor
or
push
mov
std
xlat
mov
adc
mov
xor
in
andb
push
enter
lds
push
sub
addl
cmp
sti
push
and
cld
js
and
adcl
xor
imul
fiadds
pop
loope
and
sub
add
adc
lcall
xor
mov
jne
pop
sub
into
lea
cltd
xor
popf
icebp
addb
cmpsb
mov
sbb
adc
jo
xlat
js
or
mov
das
scas
sbb
ss
pop
adc
fstl
or
mov
pop
mov
movsl
lds
push
out
rorb
jns
into
pop
into
push
scas
rorb
inc
ja
inc
push
popa
dec
scas
or
jl
jne
cld
push
in
rcll
fcmovnu
fs
loopne
cmp
and
clc
test
sub
loopne
das
repz
sub
sahf
aam
sbb
test
sub
into
fistps
sbb
jge
push
add
and
pushf
frstor
xlat
add
or
mov
arpl
cmp
stos
arpl
cltd
es
lock
repz
scas
stc
inc
movsb
repnz
movsb
push
in
push
jb
cli
or
sbb
fimull
jae
inc
push
jl
cmpsb
push
sti
nop
xor
stos
inc
cld
rcrb
and
stos
jl
les
jo
xchg
jp
jg
fstp
mov
or
int
mov
pop
push
pop
call
lock
and
pop
xchg
lcall
xchg
test
gs
add
ficoms
scas
imul
dec
in
ret
dec
in
fnstcw
push
std
cmp
fndisi(8087
ds
mov
cmpsl
sub
orl
aas
ficomps
inc
out
data16
xchg
sbb
xor
or
addr16
pop
loop
jge
jmp
cmp
mov
imul
mov
nop
cmpsl
push
xchg
jg
and
cmc
jge
mov
dec
xchg
sar
jp
pushf
pop
loop
mov
lahf
nop
mov
out
pop
ss
iret
icebp
in
aad
loopne
hlt
xor
adc
or
mov
mov
push
dec
dec
loopne
push
ja
inc
or
cli
movsl
mov
jno
pop
sti
bound
arpl
test
push
ljmp
lahf
mov
ljmp
daa
sub
ja
and
or
sbb
jle
sbb
pop
sub
adc
imul
and
jmp
xor
insl
rorl
mov
mov
jge
movsl
nop
mov
lahf
sar
scas
cld
loop
pop
outsl
add
divb
inc
and
dec
sti
push
pop
sub
lds
mov
data16
testl
test
dec
mov
insb
mov
call
mov
sbb
fcmovbe
fldenv
mov
dec
fs
rcll
cmp
cmpl
cmc
inc
fstpl
in
fwait
mov
scas
cmc
push
jle
sbb
inc
ret
fildl
jmp
mov
inc
xchg
lahf
cld
sbb
xor
movsl
lcall
cltd
outsl
aaa
cli
mov
pop
lahf
test
dec
test
out
fs
int3
or
push
add
adc
icebp
imul
cmp
aas
dec
add
insl
push
jl
inc
cmpsl
and
stos
cmp
loop
xchg
pushf
int
inc
in
scas
aas
fisttpl
jo
mov
mov
shrb
lds
ficoml
xchg
cltd
sbb
xchg
stos
scas
add
fbstp
pop
mov
jbe
xor
hlt
lds
sti
jb
or
enter
jge
in
fsub
repnz
loop
jg
push
mov
jmp
adc
imul
lret
iret
adc
pop
jmp
rcrl
hlt
or
into
lods
in
or
in
mov
lcall
sub
push
aaa
jge
cmp
mov
shlb
pop
mov
dec
lahf
in
out
scas
les
and
mov
icebp
stos
xorl
shl
stos
insl
addr16
pop
mov
pusha
repz
in
cmp
xor
mov
mov
mov
insl
inc
daa
movsl
inc
sub
add
sub
push
jmp
pop
faddp
popa
shll
in
je
insb
add
mov
and
adc
fs
iret
mov
lea
mov
gs
jo
cmc
push
cmp
mov
jne
push
or
lea
xchg
and
cmp
push
fildll
mov
sahf
sbb
mov
adc
sti
aas
call
pop
xchg
sbb
lcall
in
or
and
faddl
and
push
movsl
aad
sbb
stc
sti
and
insb
rcrb
dec
faddl
mov
adc
mov
cmp
enter
icebp
inc
jo
jl
lret
fists
add
test
cmc
enter
jp
sbb
xchg
stos
test
mov
push
or
int3
xorl
pop
mov
jecxz
int
mov
test
xchg
xchg
cmp
out
mov
cli
imul
and
je
into
jb
mov
add
jb
xchg
rcrb
or
xchg
nop
and
push
cmc
pop
push
test
jnp
mov
jge
sti
push
cltd
sar
dec
pop
mov
shll
cmpsb
out
sti
push
mov
adcl
arpl
mov
movsb
call
cltd
xchg
pop
rcr
popa
sbb
jo
or
adc
push
cmpsl
gs
aad
push
mov
pop
rorb
xor
nop
test
fsubrs
rol
or
std
pop
mov
jnp
add
cmp
mov
cmp
cmpsl
adc
xchg
pop
and
jecxz
popf
pop
mov
push
pusha
or
mov
sbb
mov
inc
jl
add
adc
pop
jbe
and
mov
mov
scas
sti
sbb
mov
shll
mov
or
repz
imul
movsb
cmpsl
cmpsl
data16
sbb
imul
pop
insl
xchg
and
jae
loopne
mov
rclb
loop
sbb
ret
mov
stc
mov
xor
test
insb
loop
sub
ret
out
jle
repnz
shll
repz
mov
sti
test
pop
push
jp
sbb
fisubl
sbb
mov
mov
mov
sub
call
or
inc
add
aaa
xchg
icebp
clc
add
in
xor
int
push
inc
push
rcr
pop
test
hlt
dec
and
in
mov
mov
jae
cli
mov
jns
inc
sti
sub
cmp
cld
mov
xchg
gs
ud0
add
xchg
sub
dec
pop
mov
mov
lds
mov
jl
cld
sbbb
mov
mov
push
daa
insb
mov
sub
out
sahf
mov
push
repnz
mov
cmpsb
xchg
ror
cmp
sub
xchg
lcall
add
mov
push
adc
sub
dec
jnp
xchg
dec
sub
scas
mov
dec
stc
in
adc
scas
mov
cli
adc
push
xor
movsl
and
cmp
in
xlat
sbb
xchg
adc
loope
push
daa
jl
sti
xchg
out
arpl
add
outsl
xor
call
push
lahf
jbe
add
sbb
aas
popf
js
nop
in
in
xor
pop
xor
and
insl
pop
pop
test
rclb
mov
xchg
xlat
loope
addl
call
and
outsb
mov
loope
xchg
in
dec
xchg
xchg
mov
inc
add
xchg
leave
or
xchg
push
cmpsl
mov
sub
fsubs
mov
cmp
lret
jecxz
or
sbb
sub
scas
push
mov
jecxz
jp
shl
rclb
and
cmc
imul
adc
jecxz
mov
push
lods
fwait
test
aad
rolb
lods
mov
and
arpl
mov
mov
sub
inc
imul
mov
mov
clc
cmpsl
fcmovnb
xor
stos
pop
mov
xor
mov
or
xor
bound
pop
mov
dec
jp
dec
lds
xor
cmp
gs
aad
jo
mov
xor
arpl
cmp
pop
ja
cwtl
aad
std
popf
std
cmp
movl
pop
nop
in
xchg
xchg
hlt
insl
and
push
mov
inc
cmp
lret
into
out
adc
fdivs
ss
lds
cld
add
outsl
xchg
fsubr
dec
xchg
in
repnz
dec
adc
xor
and
jnp
dec
cmp
test
shrb
mov
mov
outsb
xor
lods
push
aad
sbbb
and
testl
pop
ret
push
cs
cmp
ja
mov
sbb
aas
inc
test
sbb
stos
mov
test
repnz
incl
loop
jns
subb
cmp
jecxz
dec
test
pop
pop
imul
mov
aaa
dec
mov
push
stc
call
out
lahf
mov
push
movd
ss
push
jno
fchs
icebp
arpl
nop
addr16
push
mov
mov
jb
xlat
ss
repnz
dec
sbb
cli
dec
sahf
ja
mov
adc
lods
mov
int3
mov
jb
jo
imul
xlat
sub
cmp
dec
mov
inc
jno
ds
scas
dec
cmpb
lods
xor
sahf
nop
mov
loop
imul
in
sbbl
les
es
icebp
cmpsb
xor
ss
loope
jmp
mov
or
dec
rcrl
call
inc
cli
rorb
and
popf
inc
xlat
push
pop
push
cmpsl
movsl
repz
fsubrp
shl
cmp
xchg
jle
in
jbe
out
nop
or
push
sbb
and
jbe
xor
pop
popf
ficomps
lock
std
inc
fisttps
sub
pusha
add
dec
arpl
pop
push
insl
or
inc
jae
ret
dec
nop
insl
dec
out
and
cmp
pusha
pop
aas
test
mov
js
mov
push
push
and
mov
add
pop
mov
testl
jb
stc
icebp
xlat
lods
mov
call
mov
xorb
push
push
or
mov
and
jg
cwtl
dec
adc
out
sub
cld
mov
pop
cs
sub
jo
jl
jp
sti
loope
sbbb
fisubrs
aam
in
mov
push
jno
out
pop
repnz
mov
xor
or
xchg
adc
ret
lret
adc
sub
sub
jno
sub
push
dec
shll
idivb
mov
xchg
and
sub
pop
popf
fldcw
jl
mov
insb
hlt
es
std
add
cmpsl
add
jae
bound
test
cmp
sub
xor
cmp
pop
cmpsb
in
cmpsb
pop
mov
out
pop
dec
iret
loope
sub
inc
push
negl
adc
call
jo
jmp
push
mov
xchg
test
notl
cwtl
pop
xlat
xlat
fmull
jne
arpl
or
or
call
add
imull
mov
mov
stos
mov
jmp
push
add
cmp
aaa
in
sub
dec
fyl2x
mov
push
xchg
pop
negb
add
cmpl
cld
push
std
pop
scas
cltd
xchg
mov
or
mov
insl
into
or
rorb
cmp
insl
int3
mov
fiadds
cmp
imul
pop
inc
add
mov
jbe
mov
sti
xor
inc
cmpsl
mov
and
popa
int
nop
out
inc
movsb
cmpsl
ljmp
outsl
ss
mov
cwtl
mov
stos
push
xchg
push
mov
outsb
jecxz
dec
outsl
inc
mov
mov
ret
daa
push
in
stos
cmp
ficomps
cwtl
rcr
dec
clc
sub
aad
add
cld
or
and
mov
cs
rcrl
in
in
jno
mov
jp
sbb
inc
xchg
xlat
sbb
test
pushf
cmp
mov
popa
xchg
sarl
jp
js
fstl
or
mov
xor
data16
movsb
add
and
adc
pushf
pop
iret
dec
movsl
push
mov
lret
mov
dec
inc
jmp
mov
xchg
in
cs
jb
or
cli
movsl
push
test
and
sbb
mov
pop
mov
std
sub
sbb
out
in
push
xchg
or
or
fwait
mov
push
xchg
mov
loope
sub
mov
leave
in
sti
jp
popf
sub
testl
sbb
stos
sub
pop
sub
daa
inc
xchg
test
scas
mov
inc
push
mov
jle
imul
sti
lahf
sbb
js
fimull
imul
rcrl
cmp
adc
icebp
frstor
lea
hlt
add
inc
jl
in
insl
jb
ficoms
mov
xor
lcall
lcall
mov
insl
dec
rcrb
lret
xor
addr16
jnp
push
xor
fadds
cmp
push
jecxz
inc
mov
xlat
xor
shl
mov
dec
leave
lret
adc
sub
pusha
js
leave
pop
fcomi
out
and
adc
jb
inc
rclb
lret
adcb
jo
cmp
insl
repnz
inc
sub
call
xor
rorb
or
mov
fildll
addr16
imul
lea
mov
out
add
out
jp
imul
dec
mov
aad
xor
mov
mov
mov
jb
xor
xor
popf
int
jg
neg
xchg
sub
les
xor
xchg
xchg
popa
inc
inc
ds
sbb
cs
in
bound
aam
ja
fwait
aas
pop
sbb
jb
cs
jb
or
movsl
pop
jmp
jno
and
mov
stos
and
ret
les
outsb
jae
es
enter
shll
imul
imul
jmp
fdivl
rorb
cwtl
or
pushf
mov
sahf
push
jp
adc
xchg
xor
jecxz
daa
cmp
xlat
iret
xchg
mov
mov
mov
mov
imul
dec
sti
movsb
loopne
xchg
sub
dec
or
insb
dec
and
xor
ja
sub
movntps
fimuls
enter
jmp
push
das
addr16
cmp
jbe
aad
ret
mull
dec
repz
dec
pop
xor
lcall
jns
inc
push
push
int
cmpsl
jnp
sbb
adc
dec
sbb
sbb
inc
jne
notb
fadds
in
sub
xchg
lcall
add
mov
int
add
xchg
pop
aad
pop
fsubs
push
test
arpl
out
xor
mov
test
imul
aas
gs
aaa
fbstp
jmp
or
push
mov
fs
or
sahf
shr
and
add
pavgw
mov
sub
and
push
mov
imul
scas
jg
dec
inc
lods
jo
or
adc
out
adc
push
xlat
cmpsb
jg
add
fldenv
add
fcoml
xchg
jmp
std
cmp
lock
or
das
lods
es
loop
mov
insl
jmp
aas
negb
mov
aaa
cmp
shl
mov
aam
sti
sub
dec
cltd
mov
movsl
sbb
xor
inc
dec
push
insl
pop
pushf
adc
ja
mov
dec
das
lods
leave
jnp
inc
icebp
cmp
xchg
lret
push
xor
dec
ds
cld
push
cltd
pop
mov
inc
jge
pop
mov
dec
and
gs
lds
pop
vpsubsw
cwtl
test
lahf
push
sti
inc
rolb
ret
insl
test
out
xor
mov
movsb
test
mov
into
aaa
shr
stos
xor
jp
cmp
aaa
mov
sbb
push
and
mov
cmp
aam
mov
inc
push
cld
xchg
cmp
into
add
push
jns
jns
pop
stos
lods
jne
mov
cmp
cltd
jp
scas
pop
mov
adc
push
mov
fbstp
xchg
daa
jmp
sub
pushf
fisubrs
cmpsl
shr
arpl
adcb
repnz
fwait
push
pop
pop
rcl
adc
jp
iret
mov
adc
loopne
mov
out
pop
or
push
enter
loope
jae
mov
mov
insl
push
pop
mov
or
mov
pop
ljmp
xlat
test
xchg
repnz
or
imul
sbb
icebp
adc
sbb
int
sbb
mov
jbe
or
inc
mov
add
aas
adc
xchg
inc
sti
jno
pop
push
adc
mov
pop
inc
dec
cwtl
enter
adc
pop
adcb
test
mov
add
cs
pop
or
mov
loope
sbb
cmp
dec
or
fwait
jmp
int3
add
dec
pop
into
imull
rcrl
aaa
adc
add
or
dec
aas
filds
sub
js
xor
push
repnz
cli
xchg
cwtl
pop
jecxz
aas
bound
adc
cwtl
cmc
and
aas
push
inc
mov
dec
add
cmp
pushf
mov
inc
ret
ret
andl
mov
jge
rcrl
xchg
cltd
fldt
or
and
ja
jne
mov
in
popa
fisubrs
mov
pop
lret
daa
icebp
sub
dec
jmp
sarl
lock
repnz
mov
scas
loope
adc
push
cmpsl
pop
idivb
fidivl
fisttpl
mov
comiss
ret
sbb
xchg
inc
sbb
out
pop
cmp
movsb
mov
or
add
mov
cs
fwait
dec
push
cmp
jge
and
cmpsl
ret
xorl
jns
add
fisubrs
jg
pop
mov
pop
call
mov
popf
add
dec
xor
lock
mov
and
aaa
jb
pop
movsb
movsl
hlt
lret
fdivr
pop
mov
pop
jmp
in
mov
mov
inc
jae
inc
inc
xchg
jno
push
ret
rol
mov
test
iret
cmp
outsb
mov
jae
cmc
dec
or
push
xchg
mov
xor
or
daa
lods
loope
insl
aas
les
in
mov
jmp
cmp
or
fdivr
sub
push
inc
shlb
jmp
jp
sub
movsl
mov
or
xor
sbb
jp
sbb
out
bound
idivl
bound
push
fistl
jl
pushf
xor
and
xchg
in
sub
clc
sbb
stc
and
push
rcrl
pop
push
xchg
call
jg
mov
test
lret
jb
frstor
dec
xor
andl
pop
dec
xor
add
mov
cmpsl
xchg
ss
rcrl
mov
cmp
rcrb
mov
pusha
std
or
test
ret
in
adc
jp
movsb
dec
pop
fwait
pop
cwtl
jp
pop
lahf
push
fistpll
inc
add
mov
loopne
decl
jge
mov
fwait
push
xor
es
cmp
adc
in
aam
movl
in
dec
arpl
mov
jbe
ss
mov
inc
fisubs
shlb
std
cmpsb
hlt
out
sub
ret
xchg
insl
test
push
stc
pushf
pop
cmp
mov
xor
fildl
dec
cwtl
add
inc
lcall
in
xchg
fwait
mov
mov
loope
in
add
xor
rorb
pop
and
dec
pop
fistpl
stc
shll
mov
xlat
xchg
cmp
insl
mov
outsl
xchg
and
xchg
scas
es
mov
call
push
shlb
icebp
push
mov
icebp
loope
push
sbbb
arpl
and
in
imulb
push
stc
scas
and
inc
push
int3
pushf
jg
xchg
test
xor
xchg
jno
fnstenv
cltd
push
js
insl
js
mov
test
into
or
or
mov
cmp
fdivrl
mov
add
xchg
test
xor
mov
fildll
scas
sarb
or
popa
fidivrs
decl
mov
and
xchg
pop
push
bound
cli
push
fidivs
fwait
sub
imul
lods
rcr
sbb
jmp
sub
and
imul
mov
pop
fnsave
insb
rorl
out
add
lds
ret
xlat
xchg
fsts
sti
loop
fstpl
xchg
adc
dec
test
jnp
out
jno
in
out
mov
aad
ds
pop
loopnew
fcmovnbe
mov
or
testl
or
loop
jae
jmp
in
add
mov
mov
sub
mov
ljmp
pushl
int3
adc
inc
imul
enter
dec
mov
or
pop
cmpsb
inc
mov
and
pushf
xchg
sbb
subl
push
cld
adc
clc
and
adc
mov
addr16
int3
inc
cmp
scas
sarl
or
es
jae
cmp
dec
push
cmp
jae
sub
lods
repnz
ret
aam
lea
jl
int3
inc
in
lods
dec
and
imul
popf
test
addl
mov
cli
cmp
mov
sub
push
xchg
cmpsb
mov
int3
mov
mov
nop
adc
out
stos
and
sti
test
int3
shrb
insb
xchg
inc
lahf
sbb
push
xchg
lcall
insl
jg
or
mov
dec
and
jne
popa
jg
or
sbb
xor
cltd
ret
call
jge
cwtl
jle
scas
stos
mov
mov
js
inc
movsl
or
shll
pop
sbb
mov
pushf
dec
hlt
das
push
js
cmp
js
and
in
leave
and
popf
icebp
adc
pop
jno
xchg
adc
push
adc
clc
jo
in
es
jl
inc
je
aad
movsb
push
lea
jmp
loope
cmp
in
imul
mov
das
mov
imul
dec
sbb
pusha
fsubrl
orl
repnz
cwtl
push
fwait
push
mov
scas
daa
pop
fwait
in
loope
adc
clc
cmc
xor
cmp
daa
loop
adc
fdivrl
pop
sbb
fidivl
and
mov
inc
aas
xchg
sti
sti
fildl
pop
mov
je
popf
iret
push
frstor
push
push
bound
test
addb
xor
push
dec
mov
inc
fisttpl
and
lcall
mov
repz
xor
push
jns
push
insl
outsb
jge
out
add
push
push
insl
lods
xor
es
std
fisubrl
ret
movsl
jo
out
push
lcall
imul
lea
test
mov
out
leave
insb
pusha
mov
push
int3
scas
popa
cmp
xchg
xchg
and
icebp
repz
inc
xor
in
or
cmc
ret
jno
or
cmpsb
xchg
pop
add
leave
inc
incl
orl
stc
int
cmp
mov
push
or
push
dec
cmpsb
push
mov
mov
imul
aas
icebp
in
enter
outsb
shll
cmp
incl
pop
int3
push
fisubrs
into
adc
pop
insb
push
add
popf
dec
ja
cld
popf
ss
enter
push
js
mov
out
or
push
shl
push
in
push
bound
lret
outsb
scas
arpl
sub
loop
add
fwait
xor
xchg
and
dec
shlb
cmp
dec
lcall
scas
jne
stc
jl
sbb
push
rorl
mov
mov
sti
xor
pop
in
mul
xchg
addl
sbb
jg
cltd
push
repnz
sbb
cmpsl
fmuls
cmpsb
stos
sar
loop
adc
fs
xchg
mov
mov
jns
repz
mov
inc
rcrl
push
std
cs
std
in
das
pop
sbb
fld
push
cmp
int3
sarb
pop
cld
jo
adc
cmp
jge
mov
jp
int
add
out
pusha
das
and
cld
cmp
jp
cmp
nop
push
outsl
dec
inc
sbb
sub
mov
arpl
sub
fstpl
gs
push
lods
jbe
push
mov
mov
fimull
bound
fistpl
mov
or
and
popf
xchg
test
mov
loope
jns
sbb
mov
cs
int3
call
fwait
pop
imul
in
cmp
js
xchg
lret
fwait
mov
insl
add
cs
lret
and
push
out
aaa
faddl
xor
lret
ret
xor
es
cmp
cmpsl
pop
and
fs
cmp
testl
sub
je
add
in
xor
les
lock
adc
ja
xlat
aas
cmp
popf
mov
push
std
orl
cmpsb
cwtl
dec
ljmp
pop
xchg
lods
sub
adc
pop
das
inc
xchg
outsl
int
cmp
add
das
jmp
inc
and
mov
icebp
mov
cmp
fisubs
cmc
pop
xrelease
mov
jg
popf
dec
aam
xor
push
dec
lcall
mov
cmp
test
add
imul
in
push
dec
adc
or
pop
mov
leave
lods
test
dec
pop
mov
aas
sub
adc
out
push
mov
xchg
sub
ljmp
cmp
cld
hlt
mov
loope
xor
pop
movsl
mov
sub
xchg
adc
pop
cld
mov
ficompl
xchg
jmp
mov
addr16
out
inc
pop
in
xor
into
adc
aam
pop
xor
xchg
pop
mov
les
repnz
add
add
mov
jne
rclb
leave
mov
cmp
mov
and
xor
push
clc
pop
push
ds
jbe
and
pop
mov
jge
xchg
pop
add
jmp
fiadds
cmpsl
test
xor
out
andl
fucom
loope
test
jbe
stos
mov
mov
decl
pop
pop
mov
std
mov
daa
mov
neg
cmpsb
jmp
lock
test
ss
mov
sub
repz
mov
push
ds
xor
lock
mov
add
scas
mov
mov
in
add
adcb
jl
lahf
aam
test
xchg
test
lret
cmpb
cmpsb
pop
inc
inc
push
push
imull
scas
mov
or
ja
out
jne
outsl
je
in
dec
push
push
leave
inc
cltd
add
test
popa
xor
in
jno
jge
cmpsb
and
mov
rcr
fidivrs
mov
cmpl
mul
sub
jns
mov
inc
or
ror
lock
scas
dec
dec
or
push
int
inc
sub
cmp
mov
in
daa
sbb
int3
push
cli
xor
sub
push
lret
movsb
lods
pop
das
lods
movb
pop
addr16
mov
pop
or
mov
mov
outsb
push
and
mov
jge
mov
dec
jl
les
lds
and
adc
xchg
xor
and
dec
sbbl
popf
sub
sbbb
push
push
icebp
loopne
icebp
xor
out
pop
mov
cltd
das
push
pop
xchg
and
mov
ja
out
jnp
outsl
xlat
push
ljmp
mov
cmp
sahf
arpl
mov
out
adc
jmp
imul
dec
xor
lret
fldl
mov
lock
mov
xlat
inc
cmp
aad
in
leave
mov
fidivrs
int3
pop
pop
outsl
mov
jge
rcl
int
lods
sbb
test
sub
cmp
outsb
outsb
iret
inc
dec
sarb
fwait
add
add
xchg
jo
sub
loopne
xor
into
sbb
adc
and
shrb
dec
out
fsubrs
xchg
adc
and
shll
cmp
cwtl
js
cmpsb
hlt
stc
test
sub
movsl
jmp
lahf
xchg
xor
imul
ret
sub
and
and
setl
icebp
push
adc
pop
popa
cmp
cwtl
xchg
js
fisubrl
inc
pop
and
fstps
in
clc
jae,pn
mov
jbe
xlat
xchg
fwait
push
pop
pop
sahf
addr16
or
and
bound
mov
cmp
ljmp
or
je
inc
and
into
mov
push
in
cmp
lods
cmp
and
shll
cmc
mov
shll
popa
js
add
cld
rep
fisttps
mov
mov
inc
mov
mov
inc
les
sbbb
sbb
jmp
insb
pop
shrb
cwtl
in
out
cli
aaa
mov
sbb
sbb
and
data16
sub
ret
inc
es
leave
lret
ss
bound
rcrb
xor
push
mov
add
adc
lds
sbb
jmp
movl
mov
out
pop
enter
mov
aas
or
loop
lcall
leave
aam
call
scas
jb
pop
xorl
scas
add
xchg
mov
push
ja
lcall
mov
sbb
inc
mov
dec
mov
dec
stos
fcmovnbe
mov
mov
loopne
mov
movsb
mov
test
push
ret
mov
test
jp
adc
or
adc
cmp
adc
nop
popf
fdivrs
sub
mov
push
leave
mov
jmp
fcmovu
rcrb
dec
dec
sub
push
cmp
xor
adc
sub
inc
fistl
lods
push
pop
stos
shr
das
rcrb
xchg
cmp
je
ret
jno
mov
mov
fwait
mov
fs
mov
popa
outsb
xchg
pop
jp
xchg
mov
bound
xchg
xor
repnz
fcmove
jl
inc
lret
test
cmpsb
push
pop
xchg
or
sub
cld
shl
orl
push
push
scas
xchg
lock
jno
dec
ds
inc
clc
mull
sbb
imul
movsl
clc
fsubrs
scas
out
add
sub
mov
fnsave
clc
xchg
push
stos
mov
cltd
xchg
add
add
sbb
or
cltd
jecxz
xchg
test
mov
imul
jmp
cmpsb
push
mov
stos
mov
pop
ret
fnstsw
push
mov
push
out
xor
or
sub
subl
idivb
inc
test
out
dec
fidivs
cmpsb
push
fiadds
lret
incl
jmp
and
dec
imul
imull
mov
loop
push
loope
xor
test
mov
cmp
cwtl
dec
xlat
sti
jo
dec
out
mov
mov
stos
cmp
loopne
adc
sub
shr
outsl
xor
or
mov
popf
cmpsb
cwtl
mov
push
jle
out
or
or
sbb
cs
fcmovbe
rclb
scas
jg
mov
pop
test
sbb
cltd
fcoml
xchg
lds
pop
stc
jae
jmp
cmpb
jae
sub
push
ljmp
xchg
xor
in
pop
and
pusha
mov
push
sub
push
push
push
out
movsl
or
ja
xorl
mov
mov
push
test
imul
xor
ret
lock
pusha
or
insl
sub
cmpsl
xor
mov
out
stos
mov
mov
mov
dec
pand
subl
hlt
push
dec
das
pop
pop
mov
les
xchg
adc
repz
mov
pop
outsl
sbb
xorl
dec
stos
dec
loope
push
jmp
and
iret
das
xor
lret
cmp
jmp
cmc
cwtl
rorb
pop
enter
and
out
call
xlat
cltd
movsb
inc
add
inc
dec
popf
pusha
push
idivb
outsb
jo
je
aam
jne
das
mov
push
jecxz
jl
mov
clc
push
cmpsl
push
and
jle
lret
mov
push
add
test
lds
push
enter
imul
insl
int
scas
outsb
cmp
popaw
jle
out
jp
test
pop
fisubs
xor
and
inc
add
outsb
adc
jl
pop
nop
mov
into
xchg
jae
outsb
xor
sub
js
inc
cltd
pop
icebp
imul
stc
mov
xchg
test
xor
mov
or
sbb
xor
pop
adc
iret
cmp
testb
pop
mov
mov
or
dec
iret
cmpsl
pop
cmp
iret
ljmp
jmp
es
loope
push
test
aam
xchg
add
pop
xchg
lods
pop
aad
sbb
mov
mov
mov
xchg
lods
mov
mov
jl
push
adc
xor
mov
or
out
or
stc
mov
lahf
inc
xchg
inc
xor
sbb
insb
mov
popa
push
popa
adc
jnp
xlat
fmull
xlat
dec
xchg
push
cli
mov
cmc
xchg
push
cwtl
imul
negb
cmp
lahf
sbbl
clc
pop
inc
shrb
out
mov
or
lods
push
rcr
lods
and
js
mov
xor
in
outsl
dec
pop
mov
cmp
hlt
fs
test
cs
jo
sub
int3
scas
faddp
cwtl
aam
dec
jl
loopne
or
clc
or
cmp
sub
push
xor
or
insb
aam
xchg
jno
jo
in
mov
int
in
test
loopne
sbb
lcall
out
inc
enter
mov
divb
sti
in
mov
adc
cli
es
fwait
pop
mov
mov
loope
and
or
push
lahf
cmc
mov
out
cmc
mov
loope
scas
fst
push
test
sub
out
imul
mov
inc
out
icebp
mov
mov
test
popa
faddp
jp
push
jbe
pop
cwtl
andl
push
jns
nop
mov
sbb
insl
je
pop
mov
jb
jl
mov
daa
stos
add
push
dec
push
pushf
rorl
mov
out
push
push
cmc
cmp
hlt
mov
add
xor
jmp
cli
leave
sbb
scas
push
or
int
scas
add
jle
data16
mov
icebp
fisttpll
adc
imul
mov
out
shrl
inc
cmp
xchg
jne
minps
add
add
ds
outsb
push
fsts
sub
scas
in
jb
ljmp
jnp
or
mov
pushf
rcll
xor
aad
shll
xor
mov
jne
insl
xchg
invd
dec
in
adcl
mov
ret
aaa
inc
mov
mov
mov
ds
lret
mov
je
std
daa
loop
daa
or
fwait
pop
xchg
andb
shlb
mull
in
flds
std
popf
sbb
std
fadd
jge
push
jno
loope
push
loop
in
aas
sbb
movl
pop
mov
sbb
aad
add
xor
or
dec
sahf
int
jle
rclb
and
ja
mov
sub
dec
push
sbb
ljmp
xchg
sub
add
int
stos
push
in
push
inc
rcl
mov
cli
mov
rorl
data16
out
cmpsl
aaa
fistpll
and
and
inc
push
and
test
dec
nop
jne
bswap
push
xor
aaa
in
aaa
jbe
stos
out
cli
lock
scas
inc
or
fsubrl
add
cwtl
cmp
adc
push
out
jo
shll
jp
dec
inc
cmp
mov
mov
cmp
mov
push
sbb
sbb
movsb
fidivs
push
scas
push
or
fs
pop
sbb
pop
stos
mov
and
cmpsb
ss
fstpt
lock
pavgw
push
inc
int
orb
sti
mov
cmpl
inc
adc
jb
cmp
push
cmp
sbb
push
push
add
cli
ret
mov
jb
out
and
cmpsl
add
jecxz
push
mov
pop
fstps
shrb
dec
jb
jle
aaa
pop
sahf
add
out
scas
xchg
add
lea
push
mov
jno
scas
and
lahf
add
das
sti
cmp
fistpl
fsts
pop
xor
nop
mov
pop
jle
cltd
jmp
jle
fidivs
and
sti
cmp
sbb
xor
out
sbb
inc
dec
mov
inc
mov
inc
std
and
sub
dec
out
lcall
das
clc
pop
sub
les
stos
adc
fsubl
jg
sbb
xchg
push
aam
cmp
xchg
push
rorb
out
or
loope
jp
pop
fisttpl
std
mov
xchg
cmp
adc
jae
lret
jns
aas
ds
into
sbb
push
jo
cmpsl
loop
cmpsl
adc
sbb
mov
into
mov
ds
add
push
fdivrl
inc
adc
stos
js,pt
pusha
mov
pusha
loope
popa
clc
and
or
push
int
movsb
mov
or
lret
sub
pop
add
cli
mov
std
xor
aad
add
hlt
pop
fdivp
ja
push
fistpll
shlb
lods
adc
movsb
sbb
loopne
aad
in
push
jmp
pop
xchg
cmp
lahf
incl
xchg
adc
in
cmp
sbb
sbbb
dec
ret
xor
inc
in
das
jae
and
jnp
xor
jp
shl
movsb
add
cmpsl
je
mov
std
dec
dec
cmp
dec
std
movsl
cmpb
jmp
xchg
mov
in
push
mov
jge
and
dec
arpl
pusha
gs
mov
into
mov
sti
cmp
jle
mov
sbb
daa
ljmp
cmpsl
pop
sbb
pop
sub
mov
jecxz
rol
sub
jecxz
adc
push
lret
jnp
pop
test
xchg
sbb
dec
popa
js
mov
les
insl
lods
scas
mov
adc
int
inc
sbb
push
daa
adc
or
sub
rcrl
ljmp
inc
mov
xor
jne
fcomi
in
sbb
mov
test
movsb
cmp
pop
insl
out
mov
pop
and
sarb
sbb
jge
sarb
cmp
imul
cmp
dec
fcomps
mov
adc
cmpsb
loope
jbe
out
xlat
lock
aaa
inc
push
sub
jg
cmc
mov
mov
mov
test
addl
pop
sbbb
jae
sub
pop
icebp
fucom
loopne
mov
pop
or
clc
cmp
cmp
xchg
mov
mov
test
push
mov
cltd
pop
movb
ret
mov
dec
mov
adc
stos
es
push
dec
shlb
pop
xchg
inc
and
xchg
leave
arpl
sbb
popw
mov
fdivp
jge
and
xchg
ret
jmp
aaa
out
add
lret
xor
pusha
aad
or
mov
push
out
xor
sbb
xor
or
mov
test
sbb
mov
xor
cmc
adc
lods
xchg
sbbl
out
data16
aaa
sub
std
jg
int3
push
mov
ret
dec
xchg
or
xchg
mov
or
adc
pop
push
push
std
daa
push
dec
mov
inc
sub
lret
mov
jb
idivl
loope
shl
fists
insb
cs
sub
jnp
pop
jno
das
arpl
or
test
mov
jp
sub
mov
fwait
push
dec
xor
aas
fcmovnu
test
mov
or
xchg
cli
push
cld
fcoms
pop
cmp
aam
mov
mov
insl
mov
fnstenv
add
out
sub
pop
dec
push
in
cwtl
mov
addr16
stos
aas
sub
push
in
imul
loopne
testb
sub
adc
jno
push
int
repz
out
xchg
shrl
es
pushf
dec
mov
mov
loop
aad
faddl
lods
lds
pop
insb
repz
scas
jp
adcl
jae
je
sbbb
icebp
pop
outsb
dec
jle
rorl
bound
int3
add
xchg
lods
ljmp
jp
push
cltd
mov
bnd
sbb
in
and
dec
jp
ljmp
ljmp
or
pop
mov
sarl
jb
inc
mov
cs
bound
aas
lock
fdivrp
jmp
andb
loope
pop
inc
ljmp
mov
cmpsl
in
mov
rolb
fdivr
inc
mov
and
mov
fimull
insb
xor
mov
push
fstpl
insl
mov
imul
aas
pop
cmp
dec
fld
test
adc
sbb
stos
popa
mov
sub
shrb
jbe
jbe
inc
and
xchg
push
test
jbe
sub
arpl
pusha
aam
loope
xchg
cmpsl
loop
clc
dec
fidivrs
push
lahf
mov
fcoml
mov
push
push
fldl
es
sub
pop
and
jmp
mov
lcall
dec
addr16
adc
and
aad
jg
xor
push
push
xor
adc
xor
je
adcl
pop
fists
ja
test
bound
dec
mov
sub
xor
imul
pop
dec
jbe
lret
outsb
xorl
je
sbb
fwait
push
push
xchg
lcall
dec
pop
xor
shll
cwtl
push
sub
cmc
jno
sub
cld
sub
cmpsb
mov
insl
push
mov
lea
or
dec
mov
jbe
repz
or
out
mov
pop
arpl
add
mov
aad
inc
jp
jp
testb
push
ja
loop
cld
fsub
subb
arpl
mov
mov
roll
mov
fmul
jecxz
sar
mov
add
mov
divl
cmp
xor
out
sahf
hlt
mov
mov
loop
mov
dec
pop
scas
jnp
into
stos
adcb
jle
adc
and
sub
sbb
test
ret
andl
fnstcw
or
jg
push
les
xchg
and
adc
gs
xchg
in
mov
in
add
roll
packsswb
sub
mov
pop
out
rolb
mov
cmpsb
sbb
out
loop
mov
push
sbb
jb
mov
push
enter
mov
pop
push
mov
jae
jmp
xor
mov
inc
fcmove
pop
cs
out
rol
mov
lods
imul
add
mov
rclb
ret
pop
push
xchg
jne
jle
pop
dec
xchg
mov
mov
in
xchg
dec
mov
mov
dec
mov
loopne
mov
enter
test
pushf
push
push
in
add
and
lret
ds
sbb
out
mov
js
xchg
xchg
xchg
mov
inc
or
push
out
sub
mov
mov
mov
loopne
bound
push
cmp
es
jb
pop
cmp
shr
jle
mov
sub
jecxz
xchg
push
xchg
pop
push
insl
jle
mov
repz
mov
and
sub
xlat
mov
hlt
scas
mov
xchg
xchg
xlat
adc
and
pop
jecxz
push
sbbb
cmc
addr16
mov
mov
imul
add
push
adc
xor
inc
jbe
jae
jbe
add
inc
push
jmp
pop
xchg
addr16
lea
loope
mov
xstore-rng
cmpsl
test
and
xor
rorb
or
ja
or
mov
enter
jb
cmp
cli
add
lahf
int3
test
mov
pop
mov
je
lods
daa
sbb
or
loopne
daa
les
hlt
int
cmp
inc
adc
push
sbb
cmp
lret
jae
out
sub
xor
jmp
xchg
push
pop
jmp
xchg
decl
fcmovne
and
pop
sbb
stos
pushf
jae
sub
xorl
negb
data16
aam
enter
repz
ljmp
mov
sbb
mov
ret
mov
lock
inc
fnsave
adc
cwtl
sub
and
sub
ljmp
and
shlb
or
or
mov
in
cli
aam
rorl
setp
rcl
cli
mov
ljmp
movsl
lods
add
jl
and
daa
jle
sbbl
sbb
push
pop
jnp
adc
sub
mov
lds
outsl
or
cld
insl
lods
mov
push
or
divl
jg
xor
sti
push
mov
bound
out
inc
cld
inc
fsubs
incb
jo
daa
fisttps
mov
stos
cmpsb
mov
jbe
jo
mov
push
ret
xchg
or
xchg
or
push
lea
je
xchg
mov
push
mov
mov
iret
or
and
cmp
fs
xchg
repnz
inc
or
xor
mov
sbbl
loop
ja
sar
jbe
pop
push
mul
jb
pop
add
subl
jl
iret
adc
roll
mov
rcl
test
jnp
jns
add
jp
int
das
les
push
xor
leave
add
push
sub
jge
fwait
sbbb
push
ss
das
fcmovnbe
cs
dec
outsl
mov
je
xlat
out
or
xchg
les
xchg
push
mov
adc
iret
test
cwtl
push
pop
jecxz
test
rcrb
in
inc
aad
out
push
dec
jo
push
fstps
decb
mov
sbb
imul
lods
fnstenv
out
jl
es
out
xchg
cmp
jo
push
sbb
mov
fimuls
sbb
or
xchg
cmp
js
loope
and
nop
divb
jmp
repz
jmp
mov
icebp
movsl
ret
stc
mov
and
pop
pop
pop
or
test
popf
mov
out
or
fimull
inc
stos
add
rclb
in
lods
push
cs
ja
mov
add
push
jmp
sbb
sub
imull
ret
mov
loop
jecxz
movsl
std
insb
mov
aam
add
push
mov
int3
or
into
add
filds
mov
jbe
aad
jae
pop
sub
test
xor
icebp
push
in
clc
xor
inc
push
add
rcrb
sbb
xchg
inc
shrb
mov
jnp
add
gs
mov
jp
sub
jb
pop
mov
sbb
xchg
loopne
and
jo
fldlg2
xor
push
inc
xchg
cmp
jecxz
push
push
mov
outsl
push
mov
cmp
inc
push
xor
imul
test
ljmp
mov
or
je
shlb
inc
lcall
jns
aas
sbbb
nop
insl
sti
pushf
dec
dec
out
imul
xor
push
repnz
xor
cmp
sub
fstpt
sub
lahf
in
jecxz
enter
inc
xor
sbb
sbb
jno
sahf
fimuls
mov
and
xor
test
mov
test
pop
ja
xor
mov
imul
push
or
and
cmp
out
dec
cmp
fnsave
mov
mov
mov
fistps
sub
pusha
adc
pop
ss
adc
out
mov
and
adc
mov
mov
xchg
into
cmp
popa
mov
int
jmp
arpl
adc
mov
aam
stos
rclb
notb
adc
dec
mov
stos
rcrl
arpl
jno
sar
pop
divb
pop
and
pusha
in
pusha
xor
cltd
and
xchg
std
push
jle
mov
jge
shl
inc
fwait
jg
shlb
ss
shr
and
inc
dec
mov
mov
sub
rcrl
out
sub
pusha
add
mov
mov
icebp
or
pop
dec
sub
or
cmp
sbb
aam
jb
js
jecxz
sbb
in
jmp
mov
and
bound
jno
sub
adc
std
ljmp
out
mov
aad
adc
cmp
xchg
pop
fcompl
lahf
pop
inc
sbb
sub
mov
fstpt
sbb
inc
add
sarl
mov
pop
dec
inc
cmp
mov
inc
or
outsl
inc
push
mov
pop
in
mov
bound
cmc
cmp
push
scas
jb
sarl
pop
push
or
imul
popa
mov
test
cs
or
addr16
adc
pop
cmpsl
lods
je
mov
sti
and
xor
add
nop
adc
es
add
in
dec
cmp
dec
jge
sarl
push
mov
movsl
cwtl
test
inc
arpl
sar
pushf
scas
pop
pop
pop
andl
pop
sarl
into
into
sub
dec
xor
mov
sub
rolb
sub
out
daa
std
jnp
mov
jno
loop
mov
call
sbb
cmpsb
push
cli
jne
scas
inc
pop
xor
and
mov
jne
mov
mov
sahf
in
pop
push
xor
dec
sbb
sbb
popf
stc
mov
xor
test
dec
outsl
jg
popf
xchg
idivb
xchg
mul
ja
fnstenv
sub
mov
mov
lea
xor
jmp
nop
ljmp
ljmp
aas
mov
push
fidivl
mov
in
inc
push
cmp
mov
int3
rcl
pop
xor
xchg
adc
jns
pop
adc
data16
jo
imull
xor
sub
test
push
push
cld
lahf
lock
dec
jmp
inc
inc
jbe
ljmp
xchg
or
push
loop
jno
test
fisttpl
ret
scas
fnstenv
inc
mov
adc
adc
sub
cmp
xor
jo
das
leave
pop
ja
xlat
cmp
pushf
int3
aaa
sub
loopne
pop
add
das
mov
sbb
sbb
in
les
sbb
setg
mov
xchg
loope
imul
inc
fistps
ja
xchg
mov
or
push
dec
fistpll
jnp
adc
shrb
aam
adc
sbb
add
movsb
or
arpl
mov
mov
scas
mov
enter
adc
popl
cmpsb
push
mov
jp
sbb
shl
sbb
in
daa
mov
dec
vmovaps
xor
repz
pop
inc
enter
xchg
mov
ds
jb
mov
push
test
push
sbb
dec
xor
fbld
test
mov
and
int
xchg
add
in
sar
fnsave
stos
inc
mov
outsl
nop
mov
inc
fildll
and
push
repnz
sub
fldenv
cltd
sub
stc
xor
andl
push
scas
xorl
cmp
mov
out
push
mov
cs
cltd
imull
cmp
push
cmp
mov
or
jae
lock
xabort
and
push
mov
jno
xchg
aam
out
pop
push
pushf
pusha
rcr
add
lock
addr16
adc
inc
in
mov
out
jbe
xor
dec
sahf
inc
mov
pop
andb
jb
inc
push
xor
insl
loope
push
pop
cmp
or
dec
mov
enter
or
mov
aad
pop
dec
shlb
aam
cmp
stos
lcall
icebp
inc
scas
sbb
adc
xor
popf
push
push
das
sub
out
movsb
mov
push
std
call
or
cld
adcb
lock
inc
mov
pop
add
jno
ja
inc
or
push
ret
movsb
int
int
mov
mov
mov
outsb
enter
ljmp
jl
xchg
jecxz
inc
mov
les
pusha
jb
lahf
mulb
or
adc
hlt
lret
iret
add
lods
sbbl
push
ja
ljmp
push
aaa
push
xchg
mov
test
or
sbb
cmp
into
lcall
pop
in
sub
jg
pop
jnp
aas
add
xor
jnp
test
pop
add
lea
pop
add
and
push
aaa
jnp
movsl
cmp
and
cmp
xor
leave
sbb
jno
mov
jne
call
mov
faddl
dec
je
cwtl
int
push
mov
lahf
daa
sbb
mov
int
adc
sub
imul
lahf
mov
xchg
mov
mov
mov
lea
ror
or
dec
mov
pop
lods
ja
mov
sbb
ss
pop
outsb
sbb
add
or
cmpsb
mov
ss
jle
cmp
or
sub
dec
xchg
or
sbb
in
pop
es
sbb
stc
cltd
andl
add
push
sahf
adc
inc
inc
cmp
mov
mov
mov
pop
add
lret
mov
jne
idivl
bnd
rclb
ja
push
add
fistpll
xchg
imul
pop
js,pn
xor
popf
cltd
repnz
mov
jae
or
mov
xor
test
pop
lahf
push
je
pushf
mov
scas
loopnew
sarl
xchg
adc
mov
lock
sbb
xchg
cli
test
add
into
fimull
cwtl
cmpsl
xor
xchg
scas
call
cmp
mov
mov
push
pop
mov
out
push
imull
mov
je
xchg
imul
iret
jbe
inc
scas
mov
popf
cmp
push
mov
mov
cwtl
shl
cmp
xchg
add
push
shll
sub
and
icebp
cmp
call
maxps
dec
pop
pop
int
cmpsl
add
add
mov
jmp
lds
mov
mov
pop
pop
imul
ret
test
out
pop
in
rcrb
xor
push
mov
inc
lret
push
push
ret
in
dec
insb
inc
xor
fisttpll
popa
fwait
std
add
cmp
inc
xor
inc
pop
test
jp
mov
adc
mov
xchg
push
pop
sub
or
mov
movsb
push
add
and
cld
push
sub
xor
mov
sarl
cmpb
jmp
punpckldq
iret
add
xor
rcrb
jg
mov
aam
outsb
mov
mov
cld
mov
mov
xchg
aas
pop
mov
mov
stc
xor
push
bound
xchg
mov
ret
push
mov
popa
es
xor
pop
shl
or
stc
xor
ret
push
push
out
mov
pop
mov
shll
aam
dec
stc
cmpsl
mov
adc
add
lea
sbb
xchg
scas
adc
jae
cs
ret
mov
mov
mov
int3
xchg
cmp
push
lods
mov
xchg
pop
xchg
int3
pop
inc
fists
jl
xor
cmp
sub
jg
inc
jae
xor
jb
xchg
mov
call
and
inc
repnz
ds
test
lods
xor
inc
fsub
inc
xchg
ljmp
or
and
jge
and
mov
xor
fmuls
jns
add
inc
cmp
sub
mov
insb
ret
mov
ret
out
psrld
lods
pop
push
idivb
test
xchg
push
xchg
sub
movsl
push
lock
mov
int
cmpsl
ss
fiadds
leave
test
rorb
or
pop
fwait
jbe
and
fidivl
loopne
fnstenv
mov
mov
mov
cmp
popf
dec
jge
or
xchg
pop
ret
push
xchg
loopne
jne
or
mov
sub
cmp
jmp
add
roll
dec
into
in
std
cwtl
mov
sbb
sarb
mov
cmc
cmp
cli
rcr
push
fbstp
daa
pop
xor
xlat
sub
aas
stc
cmc
filds
rcr
out
mov
test
inc
xchg
xchg
packsswb
dec
je
loopne
jle
fs
rcrb
xchg
mov
add
imul
cltd
or
inc
sbb
flds
mov
jae
adc
jg
inc
rolb
in
mov
sti
cld
push
outsb
or
in
loopne
lock
insb
call
outsl
push
xchg
xchg
imul
stos
cli
pop
gs
int3
arpl
xchg
fsubrl
xor
xor
stos
into
xor
insb
mov
sbb
adc
add
and
cli
lahf
fs
sbb
xchg
scas
sub
dec
jo
shrb
arpl
inc
loope
cmc
imul
sarb
push
int3
add
pop
sar
sbb
lods
cmp
ljmp
inc
adc
mov
xor
adc
add
jecxz
mov
movsbl
mov
cmp
out
jno
jge
lock
pop
mov
mov
mov
ss
mov
pop
pop
mov
fs
jae
rcrb
dec
jge
xchg
push
dec
jg
arpl
cmp
cltd
mov
adc
sbb
mov
insl
inc
mov
mov
pushf
rcr
sbb
lods
test
rcr
mov
scas
cli
mov
dec
mov
setg
cmpsb
fisttps
xchg
loope
fcmovu
out
xor
inc
fsubrl
mov
mov
and
jp
adc
movsb
fildll
stos
jl
xchg
cmpsl
test
mov
nop
push
adc
add
test
clc
mov
clc
push
pushf
inc
stos
lcall
cmp
xchg
push
jns
outsl
xlat
into
fadds
adc
cltd
pop
add
mov
sahf
push
arpl
movsb
not
dec
pop
lret
out
sub
jl
lods
dec
stc
mov
or
mov
jp
or
jl
xchg
push
jo
repnz
adc
daa
enter
sarb
mov
pop
inc
or
clc
pop
xchg
mov
sub
inc
push
fisubl
mov
ret
loop
push
mov
xchg
mov
pusha
fmul
stos
xchg
jns
iret
xchg
pop
imul
and
je
inc
mov
dec
imulb
cld
pop
jge
push
or
xchg
cmp
arpl
fs
das
add
cmp
dec
cmp
iret
cmp
sbb
test
divl
sahf
jae
jge
push
add
imull
addr16
xchg
sub
das
movsb
push
int3
cmp
fldenv
lock
out
xor
shl
in
push
call
fdivl
fcom
in
or
adc
iret
xor
pop
dec
lds
push
jbe
jmp
shrl
shl
inc
aaa
sbb
sar
xchg
scas
imul
xor
xchg
insb
sbb
test
sub
pop
scas
rclb
cmp
repz
scas
arpl
add
pop
dec
or
jbe
dec
stos
jae
pop
push
stc
pop
cmp
jnp
pusha
inc
sub
or
inc
adc
pusha
add
sarl
cmpsl
shlb
repz
sub
cld
lcall
mov
aam
mov
outsb
in
push
dec
bound
dec
add
fwait
lea
out
dec
xor
pop
repz
and
mov
data16
dec
ja
fidivs
jo
jl
daa
pxor
das
mov
mov
das
aad
lods
out
fisttpll
mov
mov
xchg
push
pavgw
arpl
ret
mov
ss
fdivrs
fwait
outsb
popf
push
je
mov
xor
push
roll
mov
divb
loope
cwtl
jg
mov
mov
out
leave
and
mov
sub
lock
mov
push
or
add
dec
fists
test
gs
sub
loopne
sub
in
mov
xchg
pop
mov
imul
arpl
xchg
into
sbb
rorl
push
scas
inc
int
inc
nop
inc
jp
gs
daa
les
rcr
cwtl
ficoms
cmp
xor
mov
out
sub
jg
add
lods
addr16
dec
mov
negb
mov
cmc
mov
outsb
mov
sbb
cld
xor
test
xchg
jg
je
xor
loop
imul
sub
flds
jp
inc
rclb
loop
mov
daa
cmp
jne
int3
xor
xchg
jmp
ret
sbb
out
lcall
jp
jae
das
leave
inc
lcall
ljmp
sbb
jl
imul
icebp
add
xchg
test
pop
mov
jnp
xchg
insl
in
inc
ret
pop
jno
and
sub
sub
mov
repnz
push
dec
jle
lds
sbb
push
sbb
push
pop
sub
or
sahf
popa
push
inc
pop
jbe
jne
jp
stos
inc
insb
cmpsb
daa
outsb
bound
arpl
pop
lahf
mov
sarb
or
ds
rcpps
xlat
jge
das
xchg
push
jo
inc
xchg
mov
adc
add
xchg
jg
sbb
leave
movsb
and
aas
pop
push
pushf
shl
popa
pop
sbb
sbb
fldenv
popf
lock
pop
popa
lods
pushf
pusha
je
inc
loope
test
bound
pushf
out
push
daa
in
xchg
push
lock
dec
pop
test
pop
lods
push
hlt
pop
push
pusha
sbb
out
testb
cmp
sbb
adc
cmp
lret
nop
subl
xchg
adc
cltd
insb
cmp
lret
inc
je
mov
stos
ja
push
lock
in
stc
loop
cmpsl
outsl
filds
mul
mov
xchg
xchg
xchg
pop
scas
inc
ljmp
add
mov
sbb
jo
idivl
inc
test
imul
cmp
shlb
mov
sub
mov
in
pop
out
mov
into
dec
aas
add
stos
into
rclb
pusha
popf
loopne
shlb
and
xlat
call
cmpl
mov
mov
push
jp
je
nop
shlb
jp
dec
push
in
and
ljmp
add
mov
mov
cld
bound
pop
sub
xor
adc
xchg
sub
insl
pop
fwait
shrl
daa
fildl
lahf
lods
insb
fidivrl
cltd
pminsw
fimuls
sti
mov
pop
rcrl
jns
jb
data16
lock
jle
ds
add
das
shrb
push
xor
insl
sbb
mov
adc
cmp
out
mov
xchg
cmc
loopne
jecxz
test
pop
jns
lret
mov
ret
mov
sbb
ficomps
mov
enter
dec
jge
ficoms
rclb
lret
mov
cmp
test
lcall
cwtl
add
xor
cmc
sub
cmp
sub
clc
hlt
mov
and
cmp
std
jmp
insl
cmp
jmp
adc
sbb
inc
jae
int3
adc
fmull
xchg
xchg
add
rorl
in
push
in
and
jmp
cmp
incl
fnstsw
adc
shll
icebp
mov
lcall
insb
dec
lea
repz
sub
insl
fsubl
pop
push
push
add
cmp
and
jnp
test
mov
push
mov
mov
mov
ds
cmp
cld
pop
pushf
fdivs
xchg
sbb
hlt
fcoml
cli
ds
sub
test
cli
or
fidivrl
popa
mov
push
jge
cmp
jmp
mov
jl
out
lahf
arpl
add
mov
sub
sub
mov
rcr
sbb
rcrl
and
xchg
loop
and
or
dec
daa
inc
insb
push
enter
loop
mov
mov
sbb
in
sub
mov
push
pop
sahf
xchg
out
xchg
lods
orl
orl
adc
sbb
shrb
arpl
adc
add
out
ret
dec
xchg
pop
repz
xor
leave
jle
push
arpl
mov
outsb
push
shrb
dec
cmp
adc
cli
ja
sub
decl
pusha
xor
xor
aad
outsb
repz
mov
push
push
xchg
add
push
test
adc
out
push
inc
jp
dec
or
push
imul
dec
scas
sbb
cmp
ret
out
int
xchg
ret
neg
pop
add
mov
cmp
arpl
stos
jnp
jbe
lds
imul
lcall
sub
dec
mov
push
pop
test
push
jbe
cltd
and
loope
xchg
test
jno
sbb
mov
mov
xchg
adc
cmp
rorl
cmp
pop
pop
fildll
lods
inc
adc
cli
orl
lock
decb
out
mov
cmp
aam
inc
lret
aam
mov
aam
lfs
xchg
cmp
pop
jae
stos
pop
add
rcll
ret
sbb
xlat
xchg
add
in
fadds
adc
popa
incl
mov
push
repz
out
fldcw
nop
leave
and
adc
mov
loope
cmpsl
mov
dec
scas
daa
repz
sbb
data16
jbe
xor
xor
hlt
lret
jae
sahf
lret
sub
and
push
mov
sub
rol
jecxz
jge
rcrl
sub
cmpb
mov
pop
mov
xor
xchg
pop
push
fisttps
jl
std
movb
or
jno
scas
pop
sbb
cmpsl
inc
adc
addr16
popa
dec
pop
sub
icebp
insl
xor
xor
add
addr16
mov
fmuls
mov
aaa
sbb
xor
repnz
outsb
xor
mov
xor
dec
sarb
jg
cmp
dec
adc
adcw
stos
pop
mov
and
mov
xlat
cmpsb
stos
push
jle
push
test
mov
mov
or
daa
push
lss
adcb
xor
int
adc
test
loope
xchg
fiaddl
int3
mov
mov
adc
rolw
mov
dec
fcoms
out
or
jbe
out
sbb
xchg
xchg
in
jns
das
rorl
xchg
lret
outsl
lret
mov
sahf
cltd
cmp
mov
xchg
push
sbb
cli
xchg
fcoms
ret
pop
push
cmp
aas
cltd
repnz
es
mov
or
ja
pop
jl
cltd
subb
sub
fdiv
cmpsl
in
inc
pop
jne
push
push
repz
mov
xchg
inc
into
ljmp
cmp
xchg
xchg
cs
imul
stos
loope
js
ja
push
mov
mov
rcll
push
xchg
and
push
dec
jg
jecxz
fstpt
mov
jmp
out
or
fsubrs
lods
mov
sub
mov
stos
jnp
pushf
add
lahf
pop
jbe
leave
xor
ja
pop
cmp
decl
les
and
scas
pop
in
inc
jb
mov
add
sbb
loope
cmp
ret
movsb
or
shl
sbb
fstps
xchg
mov
out
test
dec
sub
xchg
sbb
cmp
mov
sti
imul
jbe
mov
or
cmp
jae
inc
push
outsb
push
sub
pop
mov
lock
pop
aad
xor
mov
mov
or
bound
dec
dec
jo
call
lds
xlat
test
ds
xchg
loopne
lea
dec
mov
andl
sub
sbb
rcrb
outsl
jl
cmc
adc
fists
xchg
cmp
push
xor
inc
fs
das
jbe
and
movsb
sbb
lea
insb
pop
rcrl
out
decb
pop
add
xor
sbb
ds
fstpt
rcl
loope
sbb
cmp
movq
or
sti
xor
adcl
inc
jae
add
xchg
rol
mov
xlat
mov
adc
and
pop
xchg
sub
loopne
cmp
iret
aad
dec
call
fidivrs
sarl
out
insl
push
rorl
lret
icebp
sbb
cmp
sbb
shrl
push
in
inc
cmpsl
es
inc
mov
dec
jecxz
mov
js
and
in
pop
lcall
pop
mov
mov
jp
dec
sub
daa
sarb
mov
cltd
nop
sbb
popf
cli
stc
mov
scas
rcrl
pop
adc
mov
sbb
jo
xchg
cmp
inc
jae
xlat
test
xchg
shr
repnz
or
add
pushf
insb
scas
xor
sti
pop
push
in
mov
xor
mov
call
cmp
cld
notb
pop
push
cmp
adc
or
std
hlt
imul
jnp
xor
xor
dec
push
adc
fiadds
enter
push
cmpb
test
arpl
and
ljmp
mov
ret
adc
fbld
ret
xor
lock
movsl
repz
rclb
xchg
idivl
dec
rcr
in
insb
fists
loope
jb
imul
push
push
xchg
sub
cmc
decb
cmp
cmp
pop
add
adc
mov
mov
mov
shll
cmc
in
lcall
mov
jmp
adc
ljmp
xchg
push
adc
ss
jg
ljmp
xchg
push
jo
push
mov
in
xor
movsl
stc
cmc
jns
cmp
jge
outsb
cwtl
mov
xor
pop
int
into
arpl
lea
aas
sub
lret
insb
add
in
movsb
int
adc
in
sub
dec
xchg
fldt
stos
enter
mov
lahf
lds
andb
jl
fistl
in
and
xchg
cwtl
adc
fimull
enter
jl
adc
shll
and
xor
adc
ds
and
mov
jl
imul
out
lret
cmpsb
and
mov
dec
aas
push
sbb
xor
dec
adc
jle
sub
in
adcb
add
imul
jecxz
and
int3
jp
imul
xor
cld
lea
pop
fldt
jno
call
test
xchg
push
sub
lods
addr16
cli
mov
pop
lods
aas
mov
lahf
and
outsl
cmpsl
and
fcoml
repnz
pop
mov
cmp
gs
pop
aad
ret
in
mov
pop
inc
push
jnp
int3
pop
nop
pop
repz
movsl
ds
icebp
or
mov
test
out
jmp
bound
fsubrs
in
inc
mov
pop
fisttps
inc
xchg
and
and
dec
inc
pop
into
and
xchg
test
pop
jl
pop
test
push
push
push
ds
cwtl
ret
mov
mov
adc
repz
stos
movsl
clc
push
inc
lret
jo
test
test
sub
bound
sahf
push
mov
je
iret
outsl
mov
mov
pop
std
mov
add
pop
adc
jecxz
cmp
add
mov
mov
sbb
movsl
imul
push
enter
push
xor
adc
hlt
cmpsb
or
movsl
and
shrl
ljmp
leavew
fldenv
dec
xchg
adc
mov
mov
mov
imul
lcall
pop
xchg
jg
sbb
add
pop
mov
call
mov
mov
mov
stos
jns
pop
fildl
mov
jbe
push
das
and
dec
in
xor
push
ret
jo
dec
je
dec
jmp
xchg
add
stos
sub
je
mov
adc
inc
adc
ret
arpl
call
cmpsb
cltd
movsb
rcl
mov
lods
dec
push
cmpsb
aas
inc
and
jns
push
xchg
shll
ss
cld
xor
in
mov
mov
out
cs
fdivrs
jg
pop
push
or
leave
xchg
xor
sbb
insb
or
cmpb
inc
sbb
into
clc
stos
xchg
popa
inc
outsb
nop
sbb
add
xor
adc
jge
xor
je
dec
rclb
sub
stos
call
mov
adc
test
addb
clc
enter
test
icebp
out
pop
or
jbe
xor
push
add
aaa
xor
mov
test
xchg
mov
lret
leave
shrb
xchg
fcom
sbb
ljmp
icebp
jo
jne
push
mov
inc
mov
ficoml
pop
inc
pop
fwait
sahf
cmp
sbb
stos
xchg
orl
ficoms
cmpsb
jmp
sbb
std
xor
enterw
sub
push
and
xchg
fisttpl
fcoml
lods
dec
int3
std
sub
mov
sahf
xor
push
xor
jae
dec
outsl
adc
shrb
popf
inc
adc
xchg
jbe
xor
cmpsl
cmp
xchg
and
lahf
lods
loop
int
add
inc
fldenv
cwtl
sbb
rcr
push
mov
std
cmp
iret
sbb
stos
and
gs
and
cmp
jecxz
shll
xor
xchg
in
js
adcl
out
or
mov
pusha
xchg
popf
xchg
mov
addr16
test
xchg
mov
mov
pop
ds
or
cmp
lahf
into
stc
rcrb
dec
rcll
out
iret
insl
loopne
jle
push
or
xor
es
popf
mov
push
lods
cmp
jg
idivb
insb
outsb
aam
xchg
inc
iret
lret
fnstenv
lods
push
sub
inc
out
pop
out
push
or
addr16
sub
icebp
lret
sbb
test
loope
rorl
xchg
out
jns
out
stc
icebp
mov
jmp
dec
out
jl
fisttps
push
xorb
push
push
mov
insb
js
xchg
and
jb
cmpsb
jge
adc
jp
xorb
rcrl
dec
repnz
daa
mov
in
push
aas
push
sbb
adc
cmp
in
repnz
or
pop
mov
push
insl
add
insl
inc
pop
pop
dec
cmp
scas
inc
xchg
or
jnp
dec
xchg
in
sub
fdivl
add
sbbb
insb
bound
out
rclb
push
mov
mov
xchg
sahf
test
lcall
in
imul
or
dec
nop
mov
or
mov
or
dec
push
lahf
push
movsb
into
cwtl
test
testb
iret
out
movsb
aam
sub
cltd
out
mov
fwait
pushf
rcrl
inc
rorb
dec
rcr
mov
and
mov
out
test
les
cmp
and
fdivrp
stos
and
repnz
add
push
adc
dec
jnp
sub
lea
jg
lock
in
xchg
bound
aas
mov
aaa
sbb
leave
fstpt
mov
xor
push
jl
addr16
loopne
js
fidivs
lods
sub
mov
mov
arpl
jns
inc
int3
cmp
loope
mov
lahf
lods
bound
les
mov
lret
int
outsb
and
andb
push
hlt
gs
push
mov
xchg
jno
pushf
add
jno
incb
jne
push
pop
lahf
jge
cmp
ss
cs
cmpsb
fs
lds
cmp
fsubrl
imul
cmp
ret
jbe
lea
into
or
mov
out
push
lahf
shlb
ss
mov
pop
dec
cmp
imul
jecxz
scas
aam
test
iret
cltd
push
cmp
mov
shrb
or
movsb
into
xchg
pop
jg
add
data16
jb
mov
dec
mov
cmp
xchg
andl
fstl
cmp
add
mov
movsb
ret
jnp
test
jno
dec
aam
xchg
sub
in
mov
dec
test
test
fwait
and
lret
outsl
fmuls
clc
adc
loop
jnp
and
jns
push
enter
or
stos
push
icebp
jne
iret
lahf
lret
push
jecxz
push
repz
fdivrs
mov
inc
adc
jp
xchg
dec
or
mov
mov
in
cmp
imul
xchg
mov
jnp
imul
leave
mov
xchg
int3
out
popf
push
cmpsb
or
dec
sahf
mov
cmp
gs
insb
imul
or
mov
jecxz
jne
add
sti
fistl
push
leave
clc
inc
jnp
into
fdivl
rolb
enter
or
cmpsb
out
sbb
test
push
mov
test
sbb
sbb
mov
lods
adcl
je
out
push
dec
mov
pop
int
xchg
enter
mov
gs
cmp
test
imulb
aam
aad
xchg
fisttpl
jl
test
aam
mov
xchg
jbe
out
inc
or
in
xor
cmp
ss
nop
pusha
inc
jbe
lret
lods
cli
lret
mov
xchg
pop
shlb
mov
push
popa
mov
dec
adc
jmp
xor
xchg
jnp
pop
lea
stos
stos
adc
pop
inc
loopne
insb
sbb
outsb
pusha
lret
notl
fwait
inc
shlb
stos
mov
xor
and
outsl
lcall
test
fucomip
scas
pop
arpl
xorb
movsl
sbb
lods
and
popa
sbb
jmp
mov
cmp
push
dec
loopne
orl
or
mul
or
sub
sbb
lock
enter
repnz
and
daa
and
xor
and
jbe
shll
mov
insb
xor
mov
dec
add
hlt
inc
push
out
mov
jb
dec
aas
aam
mov
xchg
lock
mov
add
mov
sbb
and
mov
dec
pop
ret
out
test
jge
sbb
inc
scas
aad
inc
popa
cmp
mov
or
cld
mov
pusha
aam
xor
leave
adc
out
xchg
test
nop
or
fistl
fadds
cs
int3
dec
pop
adc
xor
js,pt
xor
movsb
popf
out
and
shlb
and
aaa
cmp
pop
inc
rcll
adc
xor
add
sub
push
mov
fmuls
in
push
mov
adc
aas
dec
mov
repnz
aam
fistps
je
cs
test
dec
es
mov
pusha
mov
push
sbb
lds
cmpsb
mov
outsb
popa
in
xchg
addr16
test
or
das
negl
mov
mov
jns
mov
fwait
sbb
mov
data16
fs
cli
popf
add
ficoml
sti
insl
mov
push
les
in
mov
and
scas
bound
cmc
inc
or
das
jbe
push
ljmp
push
xor
mov
jl
mov
popf
iret
aad
sti
das
jns
xchg
fimull
sbb
sub
mov
and
lcall
std
icebp
xor
inc
hlt
push
mov
int3
xchg
mov
sti
aad
mov
sbb
repnz
in
inc
cmp
and
lds
xchg
sbb
adc
cli
inc
icebp
fbstp
pusha
and
fldt
sbb
int3
lret
out
das
nop
lods
sbb
xrelease
out
lds
test
mov
pop
fs
mov
movsb
push
fs
adc
add
lock
jb
in
int3
into
fistl
mov
xor
cmp
mov
and
aas
stos
lods
test
add
adc
std
repnz
int
movb
ss
add
dec
xorps
sti
es
jl
mov
xchg
mov
cld
mov
xchg
pop
cmp
repnz
insb
lret
in
insb
loopne
cmp
loopne
cmc
jae
cltd
sti
sbb
add
andl
movsl
test
push
arpl
frstor
and
rcrl
lods
addl
cmpsb
movsl
inc
js
rorb
andb
das
xchg
mov
movsb
aas
mov
imul
push
ss
jle
and
addb
mov
mov
shlb
shrb
cltd
fsts
in
rorl
popf
mov
arpl
add
sbb
fcomip
popf
sbb
ja
js
arpl
fisubrl
fsts
xchg
lds
bound
or
and
jbe
xor
in
sarl
rclb
or
testb
enter
jb
test
and
sbb
cmpsl
pop
fs
xor
cli
test
pusha
lahf
dec
dec
mov
mov
cmc
or
stos
cmc
iret
inc
sarb
aam
bound
mov
insb
rorb
push
sub
cmc
dec
adcb
lods
xchg
jb
sbb
mov
add
ret
xor
xchg
in
out
lret
xchg
ja
or
fstpt
mov
bswap
jg
ret
pop
imul
dec
sbb
or
mov
inc
push
mov
movsb
inc
mov
mov
or
mov
je
lahf
fs
cli
std
setle
adc
js
pop
jmp
into
xchg
and
mov
nop
icebp
xor
hlt
and
rorl
adc
in
outsl
inc
std
pusha
sbb
pop
mov
lahf
sub
pop
mov
icebp
fs
xchg
aaa
int
call
outsb
sub
lret
add
jmp
mov
ficoms
loope
stos
pop
imul
test
rcl
das
push
sub
jg
lret
adc
sbb
lock
sbb
push
push
mov
sub
in
sub
loopne
xchg
push
add
push
sbb
lods
ss
adc
xchg
inc
or
mov
jb
push
rclb
insl
fmul
lods
cltd
cmc
in
add
push
dec
xchg
jo
or
popf
cmp
std
fstps
xor
mov
pcmpeqw
inc
xor
xchg
fnstcw
xorb
inc
lods
sbb
loopne
inc
xchg
loop
int3
testl
in
inc
jae
cwtl
inc
mov
pop
sub
dec
icebp
and
lret
jle
sub
fisttps
push
ret
pop
sbb
orl
aaa
and
mov
ret
mov
push
jno
lock
int3
xor
sbb
mov
fwait
mov
xor
inc
arpl
imul
pop
sbb
xchg
aaa
jns
jne
cltd
fiaddl
out
movl
and
aam
pushf
stos
mov
cmp
xchg
add
pop
lret
xor
pop
mov
stos
sahf
push
pop
stc
pop
lea
and
out
lods
ljmp
sbb
mov
push
cs
loope
sub
pushf
mov
cmp
jbe
push
pop
cs
stos
pop
icebp
lock
xchg
shrl
sub
xor
les
rorb
pop
dec
in
sbb
dec
in
xor
cmp
aas
lods
mov
sbb
lret
fucomi
data16
xchg
sahf
push
pop
add
xor
in
sti
ret
or
enter
test
shrb
in
xchg
in
loopne
int3
loop
dec
lock
ja
test
aad
leave
add
or
pop
jno
dec
pop
mov
push
out
sbb
outsl
jecxz
iret
mov
pop
inc
int3
xor
xor
lahf
into
mov
or
xlat
mov
add
sub
mov
jg
dec
imul
push
out
mov
fwait
mov
and
xor
push
aas
jbe
repz
and
jge
adc
leave
ds
add
jo
or
sarl
or
lcall
xchg
fbld
sub
mov
xor
adc
jge
mov
test
out
cmp
in
ljmp
leave
scas
mov
cmp
addl
ja
punpcklbw
inc
iret
pushf
pop
and
add
xor
ror
adc
xchg
mov
sub
and
fidivl
cmp
jbe
sbb
lods
inc
shl
xor
sub
adc
icebp
cmp
out
mov
addr16
pop
pop
jp
out
cs
aam
incl
adc
fcompl
lret
mov
pop
loopne
inc
dec
pushf
mov
fsub
and
xlat
sub
push
or
sbb
aam
lret
push
dec
jne
stc
mov
in
xchg
jno
enter
dec
inc
adcl
ljmp
and
stc
mov
mov
aam
pusha
push
sbb
push
sub
mov
lahf
inc
je
shlb
fmuls
jno
dec
jl
sub
adc
mov
test
andb
test
repz
xchg
or
jmp
inc
jl
outsl
push
mov
mov
push
rcrb
jg
cmp
and
sub
icebp
jb
ja
or
jg
jmp
push
pop
int
aaa
xor
movsl
test
std
mov
or
mov
jmp
mov
ret
in
js
add
push
xchg
stos
nop
inc
fcom
pushf
fnstcw
dec
cmp
out
rcll
int3
loope
movsb
movsl
inc
pusha
sbb
push
adc
imul
jmp
das
ficompl
cmp
lret
inc
pushf
fcmovb
lds
loopne
movsb
insl
inc
adc
imul
sbb
arpl
push
inc
pop
daa
jo
pop
test
jl
pop
fnsave
push
xlat
pop
lock
cmp
in
ds
sub
out
cmp
repnz
push
add
mov
mov
mov
cmc
xchg
jp
or
sub
push
lcall
adc
mov
add
push
mov
ret
in
inc
mov
loop
jnp
std
inc
push
cli
mov
jg
loop
cs
push
inc
stc
jo
dec
push
mov
mov
push
mov
xor
js
lods
sbb
repz
out
add
xchg
leave
test
pop
push
lods
xor
sub
push
mov
cltd
rolb
in
lods
cwtl
inc
dec
and
shrl
sbb
jo
rorb
mov
pop
sbb
adc
and
xchg
inc
out
pushf
push
hlt
rorb
test
cld
aaa
lahf
inc
xchg
faddl
rol
lahf
nop
inc
mov
inc
add
stos
mov
push
roll
xor
fdivrp
jbe
and
ret
adc
or
aad
lock
fimuls
adcl
aad
sbb
lret
aas
sub
xor
cltd
je
and
js
sbb
add
inc
lock
sbb
xchg
bound
mov
rolb
out
mov
inc
ret
aad
scas
inc
mov
loop
aam
and
test
push
push
out
pop
fisubl
xor
dec
inc
xor
lcall
mov
pop
sub
data16
pop
int
push
fldt
mov
jge
xchg
imul
clc
adc
pop
push
sbb
or
push
bswap
movsb
add
push
push
pop
test
outsl
dec
adc
ror
lds
pushf
cltd
mov
arpl
jg
xchg
mov
xchg
shll
lods
mov
push
push
fbstp
cmp
dec
imul
jns
and
in
stc
sti
jb
pop
mov
scas
mov
cmpsb
mov
jg
cmp
push
mov
mov
xchg
cmp
into
aas
jns
push
fwait
xlat
aaa
mov
dec
sbb
pushl
push
push
adc
inc
test
sub
or
push
ror
je
or
push
sahf
lea
es
fdivrl
andb
out
movsl
mov
sbb
push
push
xchg
outsl
roll
mov
mov
mov
or
scas
mov
insl
and
jl
sti
cmp
dec
stos
xchg
cmp
add
or
push
and
sbb
jge
sub
inc
pushl
sbb
test
clc
pop
flds
push
dec
mov
out
arpl
jl
lods
sahf
fwait
int
sahf
add
push
xchg
rolb
push
lds
test
scas
xor
test
call
aam
pusha
pop
mov
dec
popf
mov
insb
test
cltd
xchg
adc
sbb
insl
outsl
fcoml
cmp
dec
ss
mov
xor
xor
sbb
mov
andl
sub
sbb
sti
push
and
ret
xchg
mov
fists
pop
or
sbb
daa
xchg
pop
test
int3
arpl
in
cmp
pusha
rorl
add
test
stos
ftst
jnp
iret
xor
movl
addl
shlb
inc
mov
fwait
push
jno
sub
int
mov
ljmp
aad
jg
in
lret
mov
lret
pop
out
ja
add
lret
clc
test
push
mov
clc
loop
xchg
sbb
mov
gs
fidivrs
inc
outsl
jo
dec
mov
stos
lcall
repnz
inc
in
push
mov
or
add
push
pop
imulb
xchg
dec
mov
jnp
rol
das
stc
inc
stc
lds
aam
iret
fadds
add
dec
idivb
outsb
rcrl
sbb
pop
stos
test
xor
cld
push
mov
repz
mov
movsb
test
mov
xor
aad
and
sbb
nop
xchg
inc
gs
cmp
pop
adc
rolb
and
dec
lds
add
pusha
and
js
stos
andl
cli
int
mul
iret
dec
xchg
mov
sbb
callw
out
push
negb
sahf
cwtl
pop
xchg
addr16
loopne
ret
insb
loope
xchg
pop
push
test
pop
icebp
inc
jb
shlb
nop
push
push
sti
insb
cld
andl
cltd
lods
sub
and
clc
int
fstpt
shll
sbb
jge
repnz
or
aad
push
push
cmpsb
aas
enter
inc
push
push
xchg
pop
mov
or
cmp
mov
in
xchg
lock
push
movsl
mov
addr16
idivb
es
cltd
lahf
popf
pop
jbe
dec
clc
mov
in
mov
and
pop
pop
sahf
movsb
stos
mov
dec
gs
mov
fs
ss
xchg
mov
decl
fldcw
jmp
pop
lock
push
outsl
das
fldenv
filds
mov
ficompl
pop
scas
inc
shl
fcom
pop
loope
ja
sahf
mov
pop
lret
dec
or
insb
lret
push
mov
dec
ret
adc
outsl
std
jg
fsin
rcll
mov
push
mov
mov
imul
repz
cmpsb
inc
into
inc
stos
push
out
mov
rclb
mov
cwtl
jg
mov
repnz
xlat
lds
in
cld
int3
les
je
aas
adc
sub
lock
xor
adc
mov
pop
ljmp
pop
adc
dec
jg
adc
pop
push
test
jne
xor
cmc
lret
push
xchg
or
push
dec
je
fiaddl
loopne
sub
sbb
push
popf
loop
iret
sub
lea
add
loope
icebp
or
jae
xor
lods
dec
sub
ficoml
mov
xchg
xchg
inc
out
pop
inc
cmpl
loop
jl
sbb
test
push
ret
rcrb
das
pop
xor
jp
fdivrs
mov
ret
push
push
je
cmp
push
test
popf
addr16
push
cmp
sbb
out
jbe
cmpsl
cltd
or
or
jmp
or
les
loop
loop
inc
mov
mov
xor
mov
push
repnz
mov
lock
aam
popaw
push
mov
inc
insl
movsb
and
lods
dec
fstpt
sub
mov
xchg
cmc
arpl
xor
sti
loopne
dec
sbb
sub
mov
pop
push
lret
xchg
cmpsb
ss
pop
popa
clc
icebp
sti
sub
add
pop
add
ss
add
cmpsl
cs
cmp
out
xchg
mov
mov
mov
ret
inc
inc
xchg
into
push
scas
sti
mov
xchg
jne
sbb
xor
mov
ret
cmp
fdivr
lock
push
jp
mov
insl
scas
fcoml
mov
mov
or
gs
push
out
pop
push
shrb
outsl
pop
aas
cmp
adc
mov
test
dec
lret
cmp
outsl
fs
mov
fisttpll
cmp
push
fidivrl
dec
fcmovne
dec
cmpl
mov
sub
movsl
int
mov
xchg
mov
jle
rorl
jl
or
sbb
fwait
nop
sbbl
sub
mov
sbb
and
lods
rcrb
dec
xor
pop
fstpt
lods
adc
pop
jecxz
icebp
clc
mov
mov
cmp
inc
pop
adc
mov
lock
pop
adc
adc
sbb
pop
dec
pusha
jl
outsb
xchg
fbld
fiaddl
sbb
jb
cli
loope
inc
push
cwtl
je
add
cmp
in
or
aaa
inc
mov
push
mov
neg
stos
sub
dec
jge
idivl
lret
inc
pop
xchg
repz
out
movsl
aas
cmpsl
adc
xor
pop
shll
inc
fmull
movsl
add
xor
test
jl
sub
shlb
pop
std
sahf
fmulp
xchg
lret
push
sbb
adc
push
into
push
pop
je
mov
mov
mov
aas
call
mov
inc
jno
inc
in
mull
pop
mulb
jmp
xorb
add
push
dec
cld
sbb
dec
leave
mov
popf
mov
adc
iret
pop
lahf
mov
mov
outsl
or
mov
mov
xor
lods
in
xor
lock
cmp
inc
fnstenv
pop
iret
movsb
jl
nop
cmp
pop
les
xchg
inc
cmpl
lea
and
fiaddl
push
mov
and
ljmp
popf
movsb
cmp
stos
push
test
out
mov
cli
int
lea
dec
pushl
aas
push
mov
outsl
int3
ja
dec
ds
insl
pop
inc
lds
inc
insw
cmp
mov
jp
add
xorb
cwtl
les
filds
pop
cld
xor
rcrb
lcall
push
int
pusha
mov
hlt
fmull
jbe
and
push
inc
push
sarb
sub
adc
aas
aaa
ds
or
xchg
cltd
xor
test
fs
rcll
dec
subb
in
adc
int
cmpsl
and
sub
inc
in
shl
jp
fld
outsb
cs
bound
push
iret
xchg
popf
xlat
dec
and
lret
out
mov
push
adc
xlat
movsb
mov
scas
push
je
rcrb
sti
scas
cmp
jle
xor
mov
inc
aas
in
cmp
xor
adc
mov
pop
jge
or
aas
or
mov
inc
fcomps
xchg
idivb
fadd
add
add
jns
inc
mov
adc
adc
mov
jae
imul
imul
icebp
mov
adc
ds
repnz
jnp
lcall
pop
leave
jnp
insl
das
cltd
pop
mov
cmc
jae
mov
push
insl
cmc
push
bound
xor
xchg
fistps
repz
lock
mov
xchg
bound
sysret
pop
lock
or
or
and
jmp
mov
jmp
scas
xchg
mov
inc
out
sahf
in
push
fldcw
dec
cmpb
lret
or
mov
pop
push
xchg
and
inc
mov
add
jno
mov
mov
test
lahf
jb
sahf
jmp
fcoms
aad
inc
sbb
cli
adc
imul
mov
pop
notl
jl
int3
cli
cli
mov
or
pop
xlat
lcall
xchg
mov
mov
cmp
jp
out
and
adc
mov
push
stos
dec
jl
cmp
pop
pusha
mov
sbb
sbb
and
or
pop
mov
fwait
pop
dec
add
pop
fistl
aam
jmp
cmp
or
push
mov
gs
sbb
xchg
xchg
movsl
jecxz
fisubl
xchg
dec
dec
aaa
sub
jge
mov
mov
pusha
rcrb
add
incb
imul
xchg
pop
cmp
fistpl
pusha
jle
or
decb
in
mov
cmp
enter
inc
mov
adc
in
jl
sub
lret
adc
loop
mov
cmpsl
sub
sahf
sub
cmp
push
mov
dec
out
mov
pop
xor
push
mov
jl
add
inc
cmpsl
sbb
repz
cmc
jnp
mov
dec
sarl
xor
dec
inc
and
ljmp
cmp
pop
add
out
test
xor
push
out
and
cmc
pop
call
xor
rolb
push
jno
push
or
in
rorb
sarl
or
jne
lahf
mov
jmp
lret
mov
cmp
ja
cmc
aas
rcrl
sbb
and
imul
arpl
mov
and
addr16
ret
fidivrl
mov
xchg
sbb
sbb
sub
add
icebp
adc
sub
push
out
addl
incb
xchg
lret
std
jmp
sar
fs
pop
inc
notl
lret
test
xchg
in
pop
les
or
lret
push
neg
sbb
xlat
adc
jge
es
pop
imul
rorb
xchg
sbb
or
les
dec
xor
push
arpl
outsl
inc
inc
mov
mov
aas
aad
push
inc
aas
mov
aaa
cmp
pop
rcrl
sahf
jmp
bound
jge
dec
adc
jmp
push
xor
adc
nop
js
jne
mov
shll
repnz
shlb
adc
and
mov
mov
fistps
sbb
popf
or
xchg
jp
push
ret
or
jnp
data16
sub
repnz
xlat
fcoml
out
lea
popa
mov
cs
enter
testb
outsb
dec
push
rclb
xor
add
ficompl
jnp
lock
jno
jmp
imul
test
mov
adc
xchg
outsb
mov
adc
test
dec
or
hlt
mov
repnz
sub
mov
sbb
add
cwtl
shll
rorb
mov
inc
xor
push
xchg
addr16
sub
cmp
xchg
or
mov
divb
in
ss
pop
outsl
test
xchg
inc
lret
out
pop
mov
insl
dec
movsl
jae
inc
in
testl
ja
jae
push
pop
movsl
lcall
xchg
lods
cmp
movsl
or
cmpsl
jle
fisttpll
aas
sahf
mov
fdivrl
dec
sahf
xchg
in
popa
jle
push
xor
xor
popf
inc
out
bound
push
xor
sub
rorb
or
lods
pop
pop
sbb
inc
sub
push
push
jnp
mov
icebp
sub
sti
jo
lods
mov
push
bound
lcall
xchg
ljmp
mov
nop
push
test
pop
xchg
dec
shlb
call
push
or
loope
aaa
pop
in
cmp
mov
xlat
xor
jp
pushf
pop
and
pop
repz
jecxz
not
dec
jbe
dec
xchg
gs
data16
jle
xchg
adc
jg
fdiv
xchg
cmp
mov
push
mov
add
push
fcomi
mov
pop
lds
mov
stos
popa
cli
push
into
flds
pop
mov
lret
mov
add
mov
mov
fwait
ds
lock
fbstp
mov
xor
ret
mov
jg
mov
push
jno
and
mov
loopne
daa
out
cli
jp
jl
jb
xor
adc
jl
jmp
in
pop
iret
das
xchg
add
dec
xchg
mov
and
mov
jmp
jecxz
dec
push
inc
sbb
jo
std
add
lds
adc
lods
jle
mov
lret
xchg
stos
push
xchg
cltd
push
mov
out
sub
jb
mov
aad
sub
and
push
mov
mov
sbb
or
loope
jae
inc
xor
inc
xor
sub
sbb
adc
mov
fdivrs
setl
mov
ljmp
fsubrs
fidivs
sbb
in
stos
test
inc
gs
push
shll
fisttps
adc
dec
outsb
and
jmp
sbb
mov
jecxz
push
pop
sbb
imul
xor
inc
mov
notb
out
push
aas
xchg
in
jno
push
mov
fsubr
push
insl
sub
mov
mov
inc
add
stos
or
imul
mov
les
jnp
dec
xorl
jmp
mov
jbe
shl
dec
int3
scas
popw
out
or
push
test
ja
rcll
jl
je
sbb
pop
sbb
cmp
fnstenv
push
dec
push
popa
icebp
mov
sahf
jno
mov
incb
icebp
sti
cmp
fisubrs
pushf
fnstenv
mov
outsb
adc
mov
loopne
cmp
hlt
aam
lods
dec
push
or
pop
popa
xor
cwtl
jmp
jecxz
cmp
lods
push
outsb
daa
divb
imul
lds
xor
xchg
aad
or
subl
jae
sub
cmp
jae
cmp
test
push
mov
sbb
loop
lahf
lods
ljmp
mov
fwait
loopne
inc
in
loop
push
cmp
mov
lret
adc
xor
lods
stc
jo
add
mov
stos
cld
push
popa
loope
call
fwait
clc
js
loop
jmp
ljmp
jg
in
mov
xchg
mov
sbb
xorl
repnz
or
push
shll
jmp
shll
sbb
std
leave
das
inc
iret
xchg
imul
or
dec
movsb
or
out
cmpsl
mov
cs
mov
mov
pusha
adc
stc
shlb
dec
mov
add
lret
xor
dec
push
test
cmp
add
insb
int3
add
pop
roll
lret
mov
pusha
pop
jecxz
mov
lahf
adc
out
repnz
cmpsl
je
in
pop
loope
enter
xchg
inc
push
xor
sbb
mov
mov
jnp
es
gs
push
ret
xchg
je
sti
or
pushf
mov
mov
lods
jl
mov
sub
shlb
popf
dec
mov
xor
fisubrs
test
scas
adc
pop
jns
aam
pop
xchg
adc
test
adc
push
jne
xor
adc
test
and
fdivrp
lcall
push
cmpsb
mov
imul
cld
and
nop
mov
outsl
xchg
out
dec
mov
pop
clc
mov
sub
int
inc
dec
lahf
mov
xor
push
stos
lret
out
jg
enter
cmpsb
push
xchg
loopne
repz
jp
push
subb
ficomps
call
jecxz
adc
dec
stc
dec
loop
jo
add
es
mov
sub
gs
outsb
cmp
ret
sbb
test
cmpsb
sub
imul
out
sar
xor
mov
inc
loope
jnp
push
or
push
movsl
es
cmpl
cltd
mov
mov
stos
in
bound
adc
and
test
push
mov
xchg
inc
sub
add
imul
insl
inc
lahf
jo
repz
dec
push
mov
lcall
int
imul
es
cmp
ret
cs
and
sub
cmp
das
mov
stos
cmp
xchg
push
sbb
sbb
mov
cmp
andb
push
fstpl
sub
shlb
pop
cld
mov
adc
loop
icebp
cmp
stos
rcr
mov
jo
in
in
fnsave
in
test
shr
xor
or
popf
mov
jbe
ds
shrl
loopne
scas
sub
jecxz
faddl
or
iret
push
popa
inc
mov
or
mul
sub
add
xchg
mov
idivl
ja
outsb
mov
sahf
out
adc
xchg
popa
mov
stc
adc
inc
push
adc
insl
push
out
cmp
ret
xor
shrl
fisttpll
popf
mov
adc
jp
rsqrtps
jmp
out
and
sti
fisttps
jb
in
fwait
pusha
movsb
lcall
dec
movsl
popa
sahf
fdiv
insl
mov
cmp
imulb
sub
dec
aad
movsl
mov
pop
xchg
insb
lret
pop
mov
fmul
mov
fstl
add
pop
adc
leave
andb
cmp
fimuls
int3
mov
cmp
xor
cmp
sbb
sbb
icebp
cmp
fisttpll
adc
cmp
ret
mov
aas
jno
lock
fcoml
adc
daa
dec
sub
xlat
sahf
or
insl
or
jns
int
fwait
and
addr16
xchg
ljmp
nop
jno
pop
shll
pop
es
cmp
int3
add
fstpt
sbb
pop
fisubs
jecxz
fistl
repnz
jmp
or
xor
adc
pop
sti
addb
mov
jp
dec
insl
sub
popa
mov
add
cmpsb
test
lret
mov
xchg
shll
lcall
fstpt
cmp
push
dec
jo
sub
inc
sbb
enter
dec
xor
mov
xchg
inc
jg
daa
fidivl
jbe
mov
push
mov
or
jp
shrb
push
pop
sbb
lret
mov
mov
cmp
add
mov
lds
sub
cmpsl
xchg
call
xchg
sbb
mov
pop
fisttpll
or
gs
pop
or
dec
jge
iret
gs
fnstenv
insl
aas
xchg
sbb
fiadds
inc
lret
sbb
es
and
subl
pop
pop
pop
or
test
mov
testb
pop
fists
mov
mov
xlat
xchg
xchg
push
insb
jo
iret
xlat
sbb
outsl
loope
sahf
mov
ja
xor
popa
sbb
and
in
stc
jb
sbb
jns
mov
inc
mov
mov
out
cmp
ficoml
popf
ds
jp
rclb
mov
popf
mov
cltd
sbb
movsl
jnp
mov
or
es
or
fstp
mov
jmp
loope
dec
cmpsb
xor
ds
es
mov
js
in
scas
pop
roll
fs
xlat
or
insl
loop
xor
sarb
out
lds
push
gs
jle
cltd
and
arpl
xor
cmp
pop
cmp
sub
pop
je
cmc
or
adc
xchg
push
jl
testl
or
and
rol
les
cmp
insl
movsb
add
jecxz
pmovmskb
or
ja
les
sub
gs
add
mov
lock
ror
and
outsl
inc
lock
xor
push
outsl
mov
pop
movsl
inc
pop
test
shrl
je
repz
cmpb
cwtl
xlat
pop
mov
or
out
cmpsl
movsb
stc
bound
jo
add
mov
or
lret
xchg
cwtl
ds
or
addr16
cmc
push
popa
insl
test
jne
nop
out
jmp
movsl
pop
push
adc
out
jne
lcall
mov
mov
shll
dec
push
nop
enter
sub
pop
push
mov
xor
cwtl
mov
push
inc
mov
push
rcll
in
sub
movsb
call
adc
leave
mov
or
js
fadds
mov
or
push
sbbb
xchg
inc
add
into
repz
ljmp
adcl
jae
push
arpl
inc
in
test
int3
mov
xchg
push
sbb
fimull
xor
push
inc
xor
cmp
mov
aaa
pushf
test
cwtl
js
lret
das
into
movsb
push
setns
sbb
dec
pop
add
mov
sbb
cld
aad
jg
mov
in
test
pop
pop
jge
out
ficoms
test
test
or
pop
repnz
test
lods
rclb
repnz
or
jmp
jo,pt
pop
std
xchg
mov
popa
test
incl
push
fsubrs
or
cltd
pop
nop
fwait
andl
jmp
jmp
jno
fistl
cld
aad
dec
inc
or
mov
or
lock
jns
aad
leave
adc
xchg
sbb
add
int3
jle
decl
xchg
aaa
mov
ja
xor
mov
loop
lods
push
lahf
lcall
lcallw
cwtl
mov
fsub
fstps
lods
orb
in
xor
mov
or
xchg
push
xchg
xchg
push
mulb
cmp
test
insl
psubb
xor
cmp
jbe
ds
lods
jg
mov
inc
jno
mov
repnz
dec
clc
fdivl
ja
shr
xchg
and
mov
xchg
stos
jl
adc
daa
or
inc
and
ss
xor
mov
sahf
push
in
jnp
movsl
adc
lock
inc
xlat
cmp
imul
movsl
adc
mov
test
out
subl
dec
sub
test
fmuls
hlt
mov
fisttpl
pusha
xchg
mov
pop
cmp
shl
stc
cmpsl
lods
fmul
mov
fimuls
stc
cs
cld
shlb
lds
jecxz
inc
cmp
out
iret
add
into
and
fstpl
mov
add
sub
sub
cmpsb
icebp
pop
add
or
fdivrs
sub
jge
push
mov
mov
stc
pop
and
test
xchg
shl
or
nop
xchg
mov
loope
sar
movsl
inc
and
std
out
inc
shlb
cmp
test
cltd
xchg
sub
cltd
fwait
in
lds
fiadds
push
pop
int3
xchg
bound
out
push
std
push
dec
mov
daa
repnz
incb
cs
dec
cmp
inc
stos
lret
imul
test
loop
fdiv
add
jl
inc
addl
test
or
jmp
lods
xor
popa
aaa
jb
sub
jno
gs
sbb
inc
jmp
xchg
scas
jo
mov
push
mov
pop
rorl
test
out
adc
movsb
das
mov
dec
icebp
gs
jle
and
shl
dec
mov
ljmp
push
jge
sarb
jge
scas
inc
addl
or
jns
rcrl
jmp
pusha
push
in
sbb
jl
mov
add
repz
jle
mov
cmp
cmc
dec
jl
mov
mov
nop
ds
mov
je
pop
jmp
es
int
adc
dec
sti
mov
pop
sub
mov
add
js
xorb
mov
mov
lcall
outsl
adc
test
mov
xchg
movsb
sahf
push
pop
out
pop
fmuls
orl
fldenv
push
leave
push
insl
xchg
gs
jecxz
lret
dec
inc
mov
sbb
mov
push
dec
ficompl
repnz
mov
insl
pop
scas
iret
push
xchg
dec
adc
or
fsubrp
leave
sub
mov
mov
xlat
dec
dec
je
mov
int3
int
addr16
js
outsb
addr16
js
pushf
push
sbbl
mov
or
xor
shl
fcmovbe
xchg
sub
popf
mov
sub
mov
pop
bound
lahf
out
sub
repnz
mov
inc
mov
push
fs
cmc
cltd
push
fisubl
test
in
clc
adc
jge
mov
mov
push
ret
clc
repz
test
addr16
movsl
jns
stos
leave
lret
repz
setbe
cmpsl
gs
jp
jecxz
int3
push
dec
movsl
mov
adc
gs
sub
scas
adc
repnz
mov
sarl
aam
stos
out
jae
mov
mov
in
shl
fadds
xchg
stos
or
js
and
cltd
and
popf
push
cmpsb
sti
xor
mov
andl
ret
jecxz
mov
pusha
lret
xorl
add
in
xchg
jmp
push
in
lods
pusha
xor
adc
cmc
add
xor
and
cmpsl
call
jo
lods
adc
push
cwtl
outsl
jnp
push
xchg
mov
adc
sub
cvtps2pd
outsl
push
inc
or
push
loopne
loope
sahf
cmp
out
cmc
lret
movsl
repz
mov
dec
xchg
mov
test
inc
sarl
lahf
dec
daa
movsl
hlt
mov
or
lods
xchg
clc
sbb
lret
cmpsb
or
sbb
lret
insl
jle
adc
adc
lahf
dec
pop
mov
add
mov
inc
pop
idivl
subb
xchg
into
dec
insl
mov
stos
xchg
add
ficompl
xchg
fldt
ret
inc
insl
mov
mov
loope
ds
fisttps
leave
mov
aas
rolb
dec
adc
fwait
test
ficomps
pop
pop
cmpsb
addr16
fwait
jbe
ror
aas
add
mov
movsb
lods
nop
cltd
inc
test
xor
rorb
adc
push
push
inc
loop
repnz
lret
xchg
push
push
lock
jg
cmp
loopne
dec
jae
xlat
pop
sarl
enter
loop
push
or
aam
mov
sub
ret
mov
addr16
inc
sbb
out
scas
nop
ljmp
mov
jnp
add
jne
xchg
jg
clc
icebp
cmp
adc
xchg
push
sbb
addr16
gs
clc
mov
jnp
adc
mov
xchg
inc
inc
push
sub
sub
inc
mov
jp
repnz
sbb
pop
fnstcw
in
data16
jecxz
notb
bnd
ja
sbb
iret
aas
mov
pop
cld
mov
ret
sarl
leave
shrb
dec
jecxz
mov
shrb
sub
inc
ja
sbb
fwait
jae
jae
mov
cmpsl
cmp
aad
inc
sbb
adcb
jae
jb
pushf
repnz
cmp
mov
icebp
pop
xorb
sub
test
test
call
sub
test
sub
inc
enter
xor
fwait
out
es
pop
sbb
pop
aaa
ss
mov
and
daa
cltd
aam
mov
fstl
cmp
rcr
mov
es
test
lock
loop
push
movsb
imul
jg
std
test
es
add
lds
add
jg
jle
aam
cmp
jno
pop
arpl
stos
cmp
push
idivb
ret
icebp
loopne
movsl
cmp
fsubrl
cs
push
dec
pop
cmpsl
xor
js
jg
cmp
test
popl
mov
inc
inc
push
dec
xchg
jns
sbb
fidivl
jne
xor
in
mov
xor
jecxz
push
xchg
and
lods
inc
inc
mov
loope
out
pop
push
mov
stos
out
cmpsl
popf
or
js
push
jo
lcall
call
push
or
cmp
mov
inc
std
pop
pop
inc
mov
mov
jle
in
cltd
cmp
int3
pop
cmp
inc
dec
inc
jno
xor
mov
loop
pop
jg
xchg
rorl
call
lret
sbbl
inc
jg
mov
fs
js
push
test
and
jb
out
outsl
das
int3
data16
lock
loop
pop
insl
movsl
adc
jne
add
icebp
mov
and
outsb
arpl
pusha
cmpsl
pop
and
sub
pop
sub
adc
in
inc
lods
ret
add
ret
fistpl
xchg
fists
sub
inc
std
mov
mov
out
jns
dec
je
mov
mov
repz
aam
jne
das
cmpsb
fcmovu
sarb
push
cld
mul
adc
adc
aam
out
movsl
lahf
in
mov
mov
sbb
jnp
xor
ds
fdivrs
cmp
pop
les
mov
loopne
daa
sub
pop
fldcw
inc
stos
jno
fidivs
pop
je
push
or
jo
mov
pop
push
mov
data16
inc
enter
sarl
dec
gs
lock
add
js
dec
dec
hlt
fxam
in
mov
mov
jp
dec
ljmp
mov
insl
dec
jle
sub
inc
out
cmp
fistps
mov
stos
test
shl
mov
jne
jecxz
pop
sbb
je
out
cli
jo
and
fidivrl
xchg
outsl
out
in
cltd
fs
loop
loop
cmp
pop
lret
fwait
in
mov
aam
lods
mov
inc
xor
sbb
pop
fsub
fs
xchg
shll
popa
push
add
psubusw
adc
pop
ljmpw
mov
mov
lahf
insb
mov
cmp
outsb
daa
loopne
pop
hlt
inc
xchg
inc
mov
xchg
mov
adc
lret
stos
imul
fmuls
cli
inc
stos
add
lcall
icebp
insb
xchg
xchg
xor
insl
jecxz
inc
mov
push
shlb
das
xchg
jp
movsl
dec
sbb
or
loope
in
fildll
cmp
es
and
cltd
or
repnz
mov
leave
jmp
les
adc
insl
ljmp
fstps
loope
mov
nop
test
adc
cmp
cmp
in
stos
subl
jbe
jo
inc
dec
and
pop
lret
or
out
inc
outsl
decl
aam
fildl
adc
mov
jmp
subb
and
push
xor
sarl
jo
addb
test
addr16
jg
das
mov
mov
cmp
popf
gs
stos
ja
movsl
push
adc
aaa
popa
movsl
mov
mov
mov
dec
loope
sbb
aam
push
jbe
mov
jge
nop
or
mov
dec
int
pop
ja
mov
mov
sub
shrl
xlat
imul
push
add
push
scas
jo
jb
imul
arpl
rcrl
jl
xlat
xor
cmp
sub
jl
js
lahf
and
test
pop
sub
ret
pop
outsl
mov
adc
ret
adcl
loope
in
nop
xchg
jno
sbbb
or
jns
jns
dec
mov
out
cmp
gs
adcl
mov
gs
lods
or
outsb
add
pop
push
scas
dec
shlb
nop
es
test
in
imul
fnsave
dec
jl
pop
sbb
cmp
lods
dec
pop
jp
pushf
test
jae
pop
jge
mov
test
adc
fistpll
icebp
fwait
add
mov
sbb
jnp
and
popa
push
lods
mov
or
in
aaa
push
stc
dec
mov
daa
fwait
or
out
mov
in
xlat
sub
mov
push
adc
jns
jle
mov
mulb
adc
adc
insb
rol
jno
call
xchg
mov
pop
outsb
mov
adc
push
stos
or
mov
jp
pop
xchg
mov
ds
imul
loop
sub
sahf
pop
jne
or
mov
cmc
rclb
add
jbe
inc
mov
jnp
jnp
pop
cli
nop
adc
scas
jmp
adc
cmpsb
icebp
ret
rcll
xchg
xor
adc
xlat
or
test
cwtl
fldcw
das
push
icebp
sbb
cs
insb
xor
ds
pop
sahf
movsb
mov
sub
push
stos
xchg
cmpsl
and
mov
jnp
test
lret
ds
lea
pop
fnop
fwait
movsl
out
dec
sub
clc
mov
fistpl
lods
imul
add
and
xchg
popf
inc
mov
dec
jmp
andl
lea
mov
xchg
das
jo
mov
les
xorl
std
out
xchg
inc
loopne
fwait
shl
jge
addr16
ret
or
cmp
dec
cmp
mov
mov
das
add
push
lods
testb
push
inc
repnz
pushl
jno
repnz
push
and
std
imul
mov
mov
pushf
cwtl
mov
inc
or
pop
fstpl
icebp
nop
mov
out
pusha
jo
mov
daa
and
fsub
xchg
js
jo
mov
xor
mov
cwtl
repnz
bound
rcr
clc
aad
into
icebp
call
outsb
push
mov
cmpsl
std
xor
and
fidivs
rcrb
out
loopne
call
xchg
xchg
or
xchg
adc
cmp
into
sub
sbb
aaa
dec
add
dec
lcall
dec
stc
pop
push
std
sub
fisubs
ror
and
cmp
adc
cmp
or
sbb
adc
jne
cmc
and
mov
outsb
out
xchg
in
into
push
or
aaa
push
jp
mov
push
frstor
xor
iret
jle
data16
jle
movsb
inc
addr16
cmp
movsb
lret
into
in
sbb
sbb
movsl
fistps
add
add
adc
jns
lds
jl
cs
lahf
ror
pushf
test
les
lock
dec
jl
out
mov
xor
push
cwtl
cmp
orb
push
mov
xchg
ficompl
dec
mov
inc
xor
std
ljmp
in
sub
scas
push
lea
push
int3
sbbl
mov
push
inc
in
inc
xor
loop
mov
add
lods
es
cmp
scas
daa
in
sbb
cmpsb
repnz
sbb
inc
nop
pop
jns
dec
cmpsl
rclb
or
cltd
or
pop
mov
sbb
lds
inc
mov
inc
outsl
push
into
inc
adc
mov
xor
jbe
xor
push
pop
test
insl
mov
in
add
or
adc
test
push
or
xchg
push
dec
mov
inc
jae
repnz
cmc
push
inc
sub
xor
jae
inc
cs
loopne
pushf
push
stos
pusha
lods
pop
pop
je
xor
lcall
mov
sbbb
dec
in
jp
dec
insb
pushl
inc
xor
xor
in
push
xor
cmp
into
ss
jp
mov
neg
test
xchg
incb
insl
xchg
sti
ret
mov
fcoml
lods
jg
cmp
push
movl
jp
xchg
add
out
loopne
daa
and
div
or
push
mov
cmp
pop
daa
ja
fxch
and
idivl
cld
js
sbb
out
mov
loopne
outsb
xor
sub
push
movsb
cmpsl
dec
cld
dec
xor
sub
sub
mov
inc
testb
xor
cmpsb
mov
or
dec
and
mov
loope
mov
aaa
shrb
pusha
mov
sub
inc
pop
cwtl
inc
add
pop
repnz
cmp
hlt
jbe
out
scas
xchg
push
cltd
xchg
les
sub
arpl
pop
sahf
mov
testl
sbb
in
in
nop
clc
cmp
repnz
mov
and
outsl
js
pop
dec
xchg
nop
aaa
loopne
iret
jmp
add
xlat
mov
pop
js
mov
or
imul
aam
mov
dec
mov
jo
in
pop
jb
out
pop
jns
into
inc
sbb
dec
adc
in
rclb
mov
lahf
push
xor
jbe
es
push
sbb
lea
decb
js
stos
shrb
inc
lret
dec
mov
jp
pop
cmp
fucomp
int
jl
icebp
arpl
cld
sbb
push
incl
cmp
mov
notb
scas
add
cltd
hlt
cmp
sub
into
lret
cmpsl
mov
cltd
outsb
xchg
je
sub
and
jne
movsl
mov
pusha
jp
adc
cs
jg
aaa
xor
data16
jge
and
push
or
rcrb
das
fdivrl
stos
loop
pop
mov
ds
adc
or
fs
ds
jbe
jb
adc
lea
push
les
xorl
sub
dec
sarb
mov
dec
dec
shrl
je
insb
hlt
out
ja
mov
sahf
jne
pop
lds
imul
mov
ja
js
sbb
sbb
mov
dec
add
push
nop
sbb
inc
ret
pop
loop
mov
in
jns
push
sub
mov
push
loop
sub
roll
dec
repz
mov
pop
scas
pop
imul
mov
add
pop
lods
sarl
sbbl
test
gs
leave
push
jns
xchg
into
in
jb
sub
pop
arpl
enter
mov
popa
fadd
out
data16
test
inc
and
xchg
into
cld
pop
pushf
cli
bound
addr16
dec
adc
in
push
dec
aaa
lret
out
xlat
mov
mov
xchg
sahf
daa
loop
gs
mov
pop
cmp
jg
xchg
das
mov
call
mov
pop
and
movsb
lea
jecxz
push
hlt
pop
pusha
leave
mov
mov
dec
mov
shll
and
rolb
mov
push
js
pop
shl
inc
lahf
xchg
lds
add
push
mov
fs
ret
xor
adc
mov
cmpsl
mov
test
jbe
imul
mov
pop
push
push
xchg
dec
jne
je
bound
inc
je
leave
hlt
mov
ljmp
xchg
pop
jnp
nop
mov
in
mov
inc
lea
clc
or
pop
xor
aaa
xor
ret
nop
or
ljmp
flds
mov
scas
sub
outsl
aad
enter
das
loope
std
jb
jb
jne
and
leave
aam
dec
sbb
ljmp
jmp
inc
bound
jecxz
jecxz
cmpsl
call
or
xor
cmp
lods
add
adc
mov
or
mov
jae
jecxz
stos
imul
mov
mov
push
mov
test
outsl
jne
dec
pop
or
sbb
cwtl
mov
jl
divl
ss
nop
jnp
inc
in
inc
adc
jnp
fimuls
mov
pop
fstps
loopne
cmp
lcall
sbb
ret
jno
scas
jnp
cli
fmull
hlt
xchg
push
mov
sub
ds
loop
mov
xor
or
cli
lods
lods
pop
test
data16
cmp
lods
sahf
mov
sbbb
fisubrs
movsl
leave
pop
dec
cli
test
das
call
fisttps
cmpsb
xor
xchg
and
add
jl
jae
add
inc
jns
and
addr16
adc
xchg
adc
in
icebp
pop
or
xchg
ret
cs
hlt
adc
push
fidivs
xchg
cmp
xchg
popa
insb
stc
jp
jg
lock
pop
xor
lcall
xchg
repz
leave
rcr
iret
loope
fisubrl
cmpsb
dec
movsb
clc
push
lock
call
into
es
rcrl
push
adc
sub
aam
das
mov
dec
imul
scas
aad
subb
jge
add
adc
dec
jno
sub
mov
std
sbb
jmp
in
fsubs
rol
jb
sub
add
push
add
xchg
inc
in
popa
xchg
js
or
mov
and
jg
pop
jmp
es
cmp
jecxz
push
imul
mov
lret
xchg
int3
dec
cmp
or
or
outsb
dec
mov
mov
out
out
gs
xchg
jge
pop
popa
loopne
iret
sarl
aam
ja
mov
sub
subl
sub
sbb
sahf
xor
jge
xchg
std
mov
sbb
ror
int
pushf
add
cmp
xor
cvtps2pd
add
pop
and
push
dec
lcall
jnp
arpl
mov
ljmp
scas
sbb
lret
inc
movsb
push
cmpb
das
ja
adc
dec
out
and
mov
in
js
rolb
xchg
cmp
pop
push
or
mov
fstps
test
dec
lret
mov
cmp
jo
lret
idivl
dec
stos
adc
divl
adc
push
dec
insb
nop
lahf
lahf
or
cmp
mov
pop
rorl
xor
imul
popa
push
inc
xor
pop
lds
push
out
adc
daa
lds
pop
cltd
push
sub
inc
aad
fwait
sbbl
push
insl
test
insl
out
shrb
andl
sbb
mov
pop
cmp
fidivl
dec
inc
cmc
push
popf
pop
cmpsl
mov
nop
xchg
shlb
push
iret
mov
into
mov
rol
adc
xchg
mov
pop
leave
push
push
dec
xchg
adc
push
leave
add
jge
sub
rolb
lods
or
or
add
sub
push
aad
stc
out
mov
push
jno
addb
shlb
dec
cs
add
mov
cld
cmp
or
xor
mov
repz
jbe
dec
mov
aas
pop
stc
or
sysret
cmp
scas
mov
dec
sbb
mov
popf
push
push
test
pop
push
or
mov
orl
mov
lea
lcall
fstps
cmp
leave
adc
gs
pop
popa
push
inc
cltd
and
stc
orl
shl
or
adc
dec
or
out
cmp
pop
rorb
das
pop
loopne
divl
sub
lcall
imul
inc
inc
inc
or
adc
inc
push
clc
popa
pop
jmp
mov
mull
pop
and
repnz
lea
aad
add
ljmp
rcrl
fsubs
mov
iret
push
mov
mov
mov
lret
adc
lock
push
loope
adc
cld
jle
pop
jns
sarl
loopne
mov
stos
cmp
jmp
loopne
enter
incl
test
fincstp
rcll
inc
xchg
jb
clc
xor
out
mov
fstpt
mov
test
aad
mov
xlat
cmc
inc
and
add
jo
xchg
ss
jg
add
jmp
xor
jnp
repnz
jbe
iret
es
cmp
test
bound
sti
or
sbb
inc
xchg
xor
out
mov
xchg
idivb
add
jne
out
or
mov
cmpsb
adc
mov
sbb
ss
ljmp
push
push
cmp
xchg
sbb
mov
roll
inc
bound
xlat
mov
fisttpll
daa
xchg
xor
jmp
mov
pop
inc
jl
fcoms
cltd
rcrb
push
cmp
dec
cld
in
push
or
popa
rcrl
cmc
enter
adc
inc
push
cmpsl
inc
pusha
pop
aad
dec
std
data16
pushf
cmp
stos
add
mov
mov
pop
shl
mov
jb
sub
daa
out
xlat
mov
sbb
iret
adc
pop
sbb
pop
or
adc
ja
in
adc
out
sub
pop
sub
les
stos
mov
mov
xor
jmp
lods
jp
cmp
pushf
jo
add
pop
lods
push
outsl
push
fbld
xchg
dec
xor
inc
mov
lcall
pop
inc
lea
adc
mov
popl
call
ret
jno
insb
aas
int
cmp
pop
push
cmp
ficomps
sbb
out
pusha
inc
xor
add
adc
stos
jmp
xor
mov
mov
jbe
outsb
insl
out
test
mov
mov
pop
mov
push
pop
mov
iret
pop
fwait
outsl
or
mov
dec
pop
push
fmul
sub
jp
aas
daa
lds
shl
xor
and
xchg
repnz
jns
pop
jo
sbb
fucom
push
cld
mov
inc
sti
pop
test
aam
or
or
mov
jb
js
loop
out
and
test
ss
push
pop
in
push
push
dec
sub
out
adcb
stos
adc
mov
dec
mov
xchg
and
inc
in
and
adc
and
shl
test
sub
sbb
mov
xchg
cmc
xchg
pop
loopne
cmp
lods
pop
mov
je
lods
and
fnsave
push
cmpsl
jbe
dec
jp
cwtl
adc
test
sbb
js
cltd
fistl
or
fpatan
repz
in
rclb
xor
sbb
aam
or
xor
fwait
pop
fisttpl
loop
in
dec
jecxz
insb
fwait
lret
sub
add
inc
lock
or
sub
xchg
cli
dec
into
aaa
icebp
push
popa
or
jbe
loope
pusha
or
mov
adc
divl
testl
mov
dec
and
mov
pop
jne
pop
cmpsb
pop
push
xor
cmpb
inc
test
iret
imul
add
leave
fildll
inc
adc
sub
popf
sbb
inc
xor
cmp
push
mov
inc
dec
dec
adc
ljmp
insl
push
jmp
sub
push
iret
mov
mov
lds
mov
cmp
movsl
sahf
and
push
ror
or
ret
repnz
bound
push
inc
imul
stc
pop
mov
das
inc
cli
jle
aad
and
rorl
mov
push
invd
push
in
jnp
pop
scas
cltd
push
dec
inc
add
loopne
stc
pusha
sub
and
xchg
pop
lods
inc
lcall
add
xlat
and
popf
andl
jno
xor
lcall
inc
fcmovnu
push
cmp
repnz
scas
add
add
push
js
cltd
or
sti
pop
popf
pushf
dec
stos
sti
jmp
ror
popa
loope
xor
aas
adc
pop
rcrl
mov
rolb
in
enter
adc
lods
in
mov
fcmovbe
mov
cmpsb
out
cmp
xor
les
push
fdivrs
xor
movsl
mov
dec
fisubs
xchg
out
jle
addr16
mov
inc
xchg
or
dec
ss
lds
adc
push
fwait
loopne
cmp
lret
mov
jg
mov
fsubl
xor
lea
test
mov
push
dec
scas
subb
adc
lea
and
mov
daa
inc
mov
jp
sbb
pop
mov
clc
sub
test
fdivl
ja
jbe
jmp
or
inc
call
jg
loop
dec
stc
inc
push
pusha
sahf
call
testl
arpl
or
jge
fwait
or
or
mov
testl
or
test
xchg
cld
loopne
jmp
or
test
inc
dec
sub
addb
cmp
icebp
mov
and
in
pop
push
pop
sbb
xchg
jg
mov
add
ljmp
xchg
loope,pt
sbb
pop
sub
add
sub
mov
jo
mov
repz
pop
mov
or
aaa
out
and
iret
popf
pop
sbbl
aaa
lret
jmp
push
lret
fcoms
and
orb
push
cwtl
std
jo
enter
inc
mov
rcrl
testb
fsubrs
mov
lcall
adc
imulb
mov
shl
xor
mov
sbbb
mov
and
xor
roll
cmpsb
xchg
popf
arpl
or
cmpsb
or
daa
bound
stos
rclb
fidivl
movsb
push
pop
fnstenv
aam
stos
mulb
push
jl
popa
xchg
push
mov
icebp
fbld
mov
clc
inc
push
jle
je
push
adc
jbe
xchg
orb
sbb
mov
mov
jb
push
xchg
stos
mov
inc
idivb
inc
cltd
mov
lret
out
jbe
sbb
cmp
sub
sub
movsl
lea
and
and
and
test
dec
fdivrs
dec
insb
xlat
sub
push
cmp
inc
imul
outsb
jns
pop
clc
sbb
das
repnz
inc
push
testb
idivl
jbe
push
adc
in
sub
mov
and
push
push
mov
cmp
xorb
fs
inc
xchg
enter
mov
shl
xchg
push
cmp
mov
fld
mov
or
out
dec
xchg
je
in
test
add
adc
and
push
movsb
orl
out
repz
mov
mov
dec
stc
movsl
and
mov
out
enter
pop
in
sbb
mov
jno
xchg
imul
and
dec
mov
lds
andl
add
test
dec
push
pop
mov
inc
mov
or
mov
outsb
pop
repz
pop
sbb
gs
xor
insl
xor
mov
and
fmuls
mov
dec
push
inc
dec
outsl
jp
xor
inc
and
test
mov
mov
faddl
stos
in
imul
push
inc
pop
in
push
add
jo
mov
loop
mov
sbb
mov
pop
add
nop
pop
jno
fcomi
cltd
pop
cmp
ss
fisttpl
sarb
sub
and
push
push
mov
in
jg
sub
jae
mov
aad
repz
adc
sbb
shlb
adc
mov
fimull
lods
mov
shll
dec
push
push
rcll
push
cld
aam
int
mov
xor
daa
sbb
cmp
cltd
aaa
cmpl
lods
in
inc
stos
test
and
pop
cli
in
out
idivl
mov
jecxz
in
sbb
inc
rclb
add
jp
repnz
sub
dec
mov
arpl
es
out
sahf
aam
rorb
xchg
cmpsb
loop
add
outsl
mov
pop
jns
inc
cmp
pop
cmp
sub
dec
test
add
mov
test
inc
sub
sbb
es
jl
mov
sbb
adc
mov
push
lret
rorl
cmp
xchg
mov
lds
push
jns
push
mov
mov
or
dec
push
push
dec
dec
sbbl
dec
cmpb
mov
movsb
push
and
push
mov
mov
jge
icebp
call
insb
jns
stos
js
adc
shlb
or
movsb
lods
mov
int
cld
loop
add
mov
sti
mov
mov
inc
xchg
or
push
dec
xchg
dec
shlb
imul
jecxz
lock
xlat
mov
dec
test
cs
lods
lret
stos
mov
jmp
ljmp
and
in
fidivl
insb
xchg
pop
sahf
push
xor
callw
push
xor
scas
push
divl
and
mov
add
cli
sbb
fnstsw
or
add
arpl
outsl
test
addb
cmpsb
lret
loop
push
xor
push
push
or
pusha
rorl
push
movsl
in
jle
in
cmpsl
cmp
mov
pop
jb
jle
or
aas
mov
cmp
hlt
ss
in
xor
jl
rcl
lea
ffree
je
cmp
xchg
scas
cltd
repz
inc
xchg
ret
mov
and
and
xchg
test
adc
mov
shll
push
stc
subl
movsl
mov
sub
mov
ja
xor
notb
sub
jmp
cmp
and
dec
cmpsb
popf
bound
pop
push
enter
mov
into
sbb
ja
mov
cmp
cmp
idivb
movsb
aad
add
pop
orb
in
cmpsl
sub
mov
lret
shlb
test
fsubr
pop
jnp
mov
mov
fisubl
jbe
je
sbb
imul
in
mov
repz
rcrl
sbb
lods
decb
xorb
xchg
je
mov
cmp
outsb
pop
xchg
cld
mov
hlt
mov
xor
es
leave
inc
scas
arpl
sbb
jmp
cmp
cmpsb
mov
or
pop
outsb
stos
incb
xchg
and
sbb
repnz
add
mov
outsb
incl
sub
ret
mov
and
fimull
pop
shrl
out
pusha
stos
or
mov
and
cmp
push
bound
pfmax
mov
pop
jl
sbb
xor
ret
sbb
mov
enter
inc
sbb
mulb
aas
std
out
cmp
xor
fcomp
insl
fildll
jns
dec
aam
mov
lods
or
out
and
pop
fwait
sub
stc
mov
fldt
shrl
movsb
adc
out
sbb
push
xor
je
stos
xor
outsb
loop
and
shr
dec
sub
sbb
jb
xorps
sbb
ret
or
mov
jl
subb
movsl
movsl
insb
in
test
mov
xorb
in
adc
push
push
inc
mov
cmp
mov
jmp
and
ret
mov
mov
out
add
xchg
fwait
push
jg
pop
pop
cmp
lds
std
negl
sti
push
and
mov
cs
and
pop
lcall
adc
pop
scas
and
cmp
cwtl
xchg
aam
jne
scas
sub
cmpsl
push
jl
call
mov
ss
fcoms
push
mov
add
call
in
add
in
jmp
sbb
push
adc
aad
repnz
ja
and
jae
notb
sbb
cmp
loop
in
fldenv
xchg
sbb
xor
cmp
push
sub
adc
popa
mull
xchg
push
bound
loop
lea
inc
in
inc
movsb
fistps
or
sub
arpl
pop
rolb
sub
sbb
mov
add
ja
test
pushf
xor
sub
cmp
push
push
pop
nop
inc
test
xchg
sbb
outsb
cld
xlat
mov
call
mov
lds
inc
arpl
rol
mov
adc
fdivrp
neg
xor
insb
mov
mov
push
scas
push
mov
addl
or
shrl
pop
mov
pop
addr16
and
cmpsl
push
sub
das
xchg
sub
cmc
push
fildll
movsl
sbb
push
sbb
stos
cmp
fdivp
aad
test
test
mov
cmp
push
mov
sti
pop
jecxz
cmp
push
insb
fldl
cld
icebp
hlt
mov
cltd
scas
lret
and
dec
test
xchg
imul
ds
sbb
sbb
mov
nop
pop
sub
mov
sub
cmp
das
popa
adc
sbb
add
xchg
jle
insb
movb
xchg
cltd
sbb
xchg
fdivrs
pop
ficompl
jmp
cmpl
das
mov
or
lds
repz
das
add
out
sbb
imul
lea
aam
push
xchg
ret
pop
loopne
xor
dec
xchg
cwtl
inc
mov
das
push
dec
jecxz
mov
or
iret
dec
mov
inc
and
push
mov
jle
push
mov
pop
pop
fiadds
mov
mov
and
inc
add
pop
imul
push
pop
mov
icebp
pop
popa
or
xor
mov
cmp
inc
lahf
xor
cmp
dec
movsb
jge
inc
pop
adc
ds
cli
pop
mov
fisttpl
sbbl
xchg
mov
or
xchg
shr
jecxz
inc
xor
testb
leave
lods
cmp
sub
jns
inc
dec
and
pop
outsl
dec
push
and
and
test
ja
jmp
call
repnz
push
data16
jbe
jmp
in
aaa
scas
test
xlat
setnp
push
pop
negl
stos
jns
or
lret
in
jmp
shl
hlt
rorl
fucompp
popa
xor
sbb
sub
stos
or
or
adc
pop
je
std
movzbl
aaa
push
xor
divb
mov
push
mov
out
and
jl
and
xchg
sub
or
push
repnz
dec
push
push
test
jnp
fstl
sub
pop
mov
stos
xchg
fcmovu
or
sub
fimull
or
aad
cmp
lret
and
push
inc
push
jb
lahf
pop
push
movsl
jb
lock
and
scas
push
outsl
inc
iret
jge
cmp
lods
push
insl
cmpsl
xor
lods
shr
mov
clc
cmpb
popf
jp
lea
push
outsb
rcr
jnp
push
rcrb
sub
xor
pop
pop
mov
sub
clc
sahf
sbb
xchg
jge
jnp
repz
pop
fs
pushf
xor
je
dec
iret
pushf
in
mov
add
lods
mov
out
cwtl
fwait
xor
mov
es
push
aas
xor
cmp
jecxz
or
push
mov
lock
in
adc
enter
push
pusha
sub
mov
or
mov
xor
mov
mov
xor
sbb
mov
mov
aaa
or
inc
xchg
jge
inc
cwtl
and
jecxz
jae
mov
hlt
and
in
mov
repnz
push
pop
ret
insb
shr
xchg
nopl
pop
push
loop
mov
lock
fists
and
cmpsb
bound
sub
loop
xchg
mov
cwtl
pop
je
outsl
xchg
sahf
iret
inc
xor
data16
outsb
jge
int
leave
mov
xlat
scas
pop
mov
in
dec
xchg
xor
ret
mov
sti
or
stc
shrb
cs
pop
aam
int3
xor
das
insb
daa
rcll
jg
dec
or
or
dec
bound
ret
or
mov
mov
mov
lock
aas
jmp
xlat
enter
popf
insb
cmp
jns
push
js
xchg
mov
lock
int
sub
fsubl
add
inc
and
xchg
xchg
ss
out
in
sbbl
icebp
sbb
fsubrp
jb
add
add
rcl
les
test
mov
adc
push
loop
mov
jle
ds
cmp
jne
adc
adc
xchg
icebp
je
popf
xchg
mov
push
data16
xchg
repz
cmpsb
test
jns
lret
adc
jmp
pusha
jbe
add
addb
popf
or
xchg
inc
rcl
xor
icebp
sbb
or
sub
pop
out
mov
mov
xlat
lcall
lcall
mov
jmp
outsl
fnsave
cld
fisubrl
add
bnd
test
jbe
jl
push
leave
adc
inc
pop
repz
daa
mov
sbb
testb
dec
add
testl
lret
lcall
jmp
add
pusha
xchg
testb
mov
imull
inc
ljmp
cmp
lds
mov
dec
push
sti
dec
fs
lea
and
clc
xchg
out
and
and
inc
in
jns
fwait
adc
js
cmp
stos
xor
dec
xchg
cs
stos
or
das
mov
xor
dec
dec
xchg
outsb
sub
dec
xchg
lret
mov
mov
inc
add
cld
repnz
pushf
cmp
push
shr
and
xor
or
jmp
push
orl
add
in
fs
dec
int
xor
dec
int
mov
lds
sbb
insb
mov
push
and
adc
sbb
jne
jg
jmp
push
in
add
jmp
movsb
jns
dec
std
cld
jle
xorl
int3
es
addr16
in
jge
je
xor
decl
outsb
pop
jno
or
sub
outsl
jg
pop
dec
mov
in
cmpsl
fdivs
sbb
aam
out
or
xchg
sbb
test
lds
dec
push
int
jnp
xchg
xchg
or
and
cmpsb
or
cmp
dec
enter
test
cli
in
mov
ljmp
jmp
jns
jp
les
std
xchg
or
in
jnp
sti
adc
sbb
push
mov
mov
nop
cs
repz
and
das
mov
xor
ljmp
mov
xchg
or
cmp
icebp
bound
movsb
lret
fcom
bswap
repz
das
mov
das
mov
push
lret
cld
daa
xchg
sub
sub
scas
jge
push
cmc
mov
sbb
sub
dec
lods
cmp
inc
or
aas
test
lret
add
rol
dec
jae
mov
mov
jne
mov
xor
and
imul
mov
mov
jno
stos
les
icebp
in
loop
pop
in
xor
sahf
push
or
rcll
adc
or
in
ret
lock
out
xlat
popl
inc
jmp
mov
fwait
xor
xorl
scas
pop
cmpsl
fists
repz
sub
add
pop
push
ss
push
xchg
lods
test
jp
movsb
popf
testl
stos
sbb
sbb
mov
mov
std
sbb
sbb
cmp
and
loop
aam
clc
mov
mov
xchg
push
inc
insb
mov
int
mov
lods
das
roll
ret
lods
fcomps
negl
ret
popf
icebp
imull
std
inc
out
inc
xor
ljmp
test
ret
js
les
in
stos
imul
xchg
jp
jne
scas
ss
imul
adc
out
push
nop
daa
pushf
and
adc
lods
xchg
rcll
pop
sub
iret
ljmp
filds
xchg
icebp
outsb
dec
addl
sub
les
outsl
dec
adc
inc
gs
std
in
mov
sti
aam
add
cmp
cmp
std
and
xchg
shll
push
dec
pop
push
hlt
inc
pop
cmp
sbb
loope
mov
jp
es
add
cmp
sub
adc
xor
xchg
lock
sub
and
ret
lock
shlb
xchg
jno
cmp
divb
and
icebp
sub
and
sahf
cmpsl
sub
mov
sub
shlb
push
sarl
and
mov
je
adc
mov
int
loop
outsl
sub
aas
mov
movsb
mov
or
insb
push
jne
fwait
fstps
test
test
test
ret
xor
js
xor
and
insl
enter
and
push
jnp
mov
inc
fcoml
mov
out
pop
arpl
hlt
xor
cltd
lock
adc
add
xchg
push
or
int
scas
xchg
je
sbb
pushf
test
scas
sub
std
pop
imul
jmp
aaa
dec
inc
xchg
xchg
enter
and
popa
pop
push
xor
xabort
test
aad
repz
cmp
in
and
jne
movsb
popa
shrl
jmp
add
mov
pop
or
jmp
mov
arpl
movsl
push
loop
cmp
int3
xchg
pop
dec
loopne
or
outsb
jmp
push
cmp
scas
mov
lahf
xchg
test
mov
mov
lcall
aaa
sbb
sub
adc
std
pop
xchg
addr16
xor
cmp
stos
fstpl
fwait
int
xor
mov
cmp
push
test
sbb
sbb
sti
jmp
mov
out
add
lret
aam
mov
arpl
cmpsb
mov
push
push
push
pop
rclb
inc
and
jnp
aad
adc
dec
lds
bnd
sub
ljmp
adc
mov
shrl
xchg
dec
jo
cmc
pusha
fs
pop
add
xchg
and
loop
mov
sbb
dec
jae
test
pop
cmpsb
fisttpl
sbb
lods
es
aad
adc
aas
stos
imul
cmpb
rclb
nop
out
lcall
arpl
fnstcw
fnsave
inc
mov
shrl
and
fidivrs
sub
dec
sub
add
mull
ret
inc
or
js
xor
xchg
jl
push
inc
jecxz
inc
imul
xchg
mov
adc
jmp
pushf
sbb
iret
pushf
hlt
inc
in
stos
mov
or
add
loope
sbb
cmp
cld
hlt
xlat
in
aas
test
and
mov
pusha
and
fldln2
mov
mov
popa
push
pushf
test
mov
push
lods
pop
xchg
ds
lcall
mov
lcall
and
mul
push
adc
dec
sub
cmp
stos
hlt
sub
fnstsw
lret
xchg
test
ja
cmpsb
fldl
push
aad
mov
and
fidivs
push
es
xchg
xlat
mov
ret
stos
dec
cmp
sbbl
rol
dec
mov
pop
ds
pop
stos
sbb
dec
loope
inc
push
adc
clc
cmp
sub
push
ret
enter
icebp
jmp
mov
adc
addr16
fdivrl
jbe
rcll
mov
sub
imul
or
out
mov
je
data16
dec
xchg
cmp
cltd
sarl
adc
jecxz
push
cmp
sbb
stos
addr16
jno
cmp
mov
cwtl
cmpsb
adc
addl
xor
sti
xor
jp
fdivs
data16
pop
mov
and
push
in
ret
int3
pop
lret
lock
rcrb
cmp
cmc
mov
jns
mov
loope
push
mov
push
popa
out
jno
pop
movsl
pop
lds
sbb
jne
xor
inc
call
cmpl
shlb
sub
lds
popf
ret
push
add
push
and
pop
cmp
test
popl
dec
inc
lods
jp
pop
jbe
jns
mov
xor
out
mov
sub
stos
cmp
inc
push
pop
mov
es
gs
aad
clc
dec
sbb
mov
push
xchg
sub
mov
adc
lret
ja
jmp
in
sub
xchg
into
mov
and
aas
and
inc
adc
xlat
repz
push
dec
mov
ret
int
xchg
push
call
adc
mov
cmc
pushf
outsl
das
adc
xor
or
je
mov
lods
pop
into
adc
leave
add
insb
mov
lods
jl
std
jp
aam
push
jmp
jne
mov
fcompl
inc
xchg
js
flds
xchg
inc
je
pusha
mov
add
test
sbb
out
loopne
fimuls
daa
dec
mov
out
in
insl
or
daa
in
xchg
lret
mov
outsb
sbb
jbe
mov
mov
into
cld
sbb
or
jne
push
and
gs
stc
out
fimuls
ljmp
add
cmpsl
mov
mov
push
pop
gs
dec
out
rorb
push
imul
pop
xchg
jmp
mov
mov
out
pop
xchg
pop
inc
cmc
mov
test
into
stos
mov
adc
enter
out
or
pop
stos
fs
mov
leave
cmpb
popf
scas
pop
jle
jp
mov
js
mov
and
out
subb
jb
add
enter
cld
or
or
push
in
mov
fld
inc
outsl
push
iret
into
lahf
cmp
rcrl
pushf
arpl
add
mov
lret
mov
push
add
shrb
icebp
cmc
test
movsb
cwtl
sbb
in
xor
jnp
nop
cmp
push
out
dec
xchg
adc
adc
insl
and
lret
int
jg
inc
pop
daa
push
cmp
xchg
xlat
int
scas
movsb
jp
fdiv
sub
pop
add
ss
mov
jbe
add
lods
cs
jle
sbb
xchg
sub
scas
ficoms
fs
fsubr
inc
mov
sub
hlt
sub
popf
mov
lcall
xlat
mov
sub
lahf
dec
cmpsb
daa
sbb
outsb
iret
mov
jae
lock
pop
loope
xorl
xchg
or
xlat
in
sub
jecxz
cld
stc
fnstsw
repz
andb
cmc
fldl
jle
ljmp
test
pop
scas
push
pop
out
aas
cmp
jmp
out
pop
dec
xor
dec
mov
fiaddl
push
sbb
mov
dec
cld
daa
mov
cld
xchg
inc
xor
jbe
dec
push
outsl
mov
call
sub
sarb
jne
mov
jbe
scas
adc
int
jecxz
dec
mov
pop
out
push
jecxz
daa
mov
or
lock
jg
add
ret
cmc
push
int3
ficoms
or
jo
lea
mov
mov
inc
jge
lods
mov
xlat
mov
test
or
int3
lds
das
jnp
xor
sub
jns
push
cwtl
inc
mov
je
test
mov
pop
jnp
jne
jg
enter
pop
add
sbb
adc
inc
dec
xor
mov
jno
clc
std
push
mov
jl
pop
lret
movsl
mov
sbb
add
push
inc
sbb
aam
cmpsb
fsub
fsubrl
lcall
cmp
aad
add
out
daa
inc
fcompl
push
data16
cmp
pusha
stos
lret
in
mov
aas
xchg
ss
and
jns
and
cmc
hlt
fs
pop
or
cli
or
mov
pusha
dec
imul
dec
xchg
nop
sub
divb
pop
jle
test
mov
pop
push
loop
stos
das
dec
mov
xchg
add
fstl
lahf
mov
scas
push
push
dec
outsb
jo
int3
js
es
adc
add
jbe
pop
test
jbe
mov
jnp
jns
jne
cld
fisubs
cmpsl
and
stos
ja
mov
stos
insb
lahf
aaa
mov
mov
mov
stc
xchg
push
jno
call
pop
xchg
mov
sbbl
add
popa
lods
lds
inc
pushf
shrb
sbb
sbb
mov
adc
xor
out
xlat
mov
mov
pop
dec
sbb
movb
xchg
clc
repnz
cltd
or
daa
inc
adc
and
test
das
mov
ja
std
dec
jb
lock
xor
jne
mov
mov
cmp
sub
inc
sbb
sub
test
jg
dec
mov
roll
push
test
mov
dec
rorl
push
mov
mov
push
sub
add
lcall
sub
dec
pop
adc
xor
push
and
xor
sub
mov
push
fiadds
add
xchg
cli
cmpsl
add
enter
arpl
xchg
push
pop
sbb
fimuls
int
in
jbe
mov
mov
sti
mov
add
fnstcw
and
and
insl
dec
mov
mov
mov
testb
out
inc
fnsave
pushf
iret
icebp
fdivr
popa
rcll
adc
xor
or
sbb
xlat
insb
int
cli
push
sbb
jae
dec
mov
in
test
ret
imul
add
out
mov
jge
mov
and
out
subl
aas
mov
mov
jge
sub
or
and
popf
test
xor
gs
nop
and
push
inc
push
mov
lods
jmp
movsl
mov
ficomps
ljmp
xchg
ficoml
loope
mov
inc
xor
fldt
add
insl
adc
mov
gs
xor
into
lds
test
sahf
adc
sahf
and
and
jbe
sbb
fwait
inc
inc
rol
dec
sbb
jge
not
jae
shll
push
jle
dec
inc
push
or
sub
pop
xor
insl
push
or
fwait
cwtl
out
pusha
test
imul
mov
inc
ret
jno
sbb
sbb
mov
or
loope
or
scas
ret
jbe
sbb
lahf
rorl
fidivl
and
mov
pop
push
or
or
aaa
lcall
dec
push
push
mov
addr16
icebp
loopne
xchg
es
cmp
sbb
mov
pop
loope
mov
dec
rcrb
aam
inc
scas
fildl
ret
popa
or
pop
shlb
inc
push
xor
dec
mov
inc
mov
and
xchg
movsb
call
sub
movsb
add
pop
enter
sbb
scas
in
fisubl
mov
pop
pop
mov
popa
cmp
inc
cmp
and
stc
in
pop
sub
dec
push
jb
xor
scas
lcall
cmp
xchg
push
inc
fstp
popf
int
icebp
lahf
pop
add
rcrb
aas
pop
xor
into
mov
mov
jmp
jo
jnp
clc
lcall
sahf
push
repnz
inc
aad
lock
rcll
cmp
lods
and
nop
lahf
jg
xchg
sbb
and
lret
enter
test
push
inc
and
sbb
jns
push
push
in
mov
jno
and
mov
stos
je
dec
jb
es
fs
notl
int3
lahf
sbb
xor
xor
inc
push
fstpl
fildl
aaa
pop
pop
lds
test
and
ja
insb
addl
pop
or
add
pop
jp
cmp
inc
jp
cmc
xchg
gs
ret
stc
jecxz
stc
cltd
fwait
int3
rorb
lods
sub
push
jnp
xchg
sbb
pop
sti
xor
dec
inc
mov
adc
jmp
inc
sarl
fistps
sar
cld
ljmp
movb
inc
push
mov
pop
fmul
fs
mov
jmp
scas
inc
and
and
push
cmpsl
loopne
push
test
xor
stos
mov
xor
add
dec
xchg
ljmp
jae
push
sahf
es
mov
mov
mov
xor
jmp
mov
lock
ja
cmp
jno
inc
jae
data16
mov
cmp
mov
lods
adc
push
jbe
mov
adc
je
icebp
add
adc
xorl
xchg
xor
xchg
es
out
out
ficoms
fldenv
mov
outsb
sub
sbb
ja
pop
xchg
xor
mov
and
movb
jnp
stc
scas
dec
jl
lret
arpl
add
sbb
sub
add
dec
aaa
xor
xchg
std
insb
sbb
cmp
stc
and
pop
popl
mov
insb
xor
push
inc
dec
cltd
daa
shl
scas
or
sti
lds
sti
pop
out
mov
jno
test
fsubrs
lea
mov
andb
std
xor
enter
jle
in
fs
test
stos
push
clc
dec
orb
mov
out
lea
out
pop
push
adc
add
cmpsb
or
push
xchg
and
cmc
std
mov
push
fldcw
sub
mov
or
sbb
enter
xor
dec
es
loop
je
rorb
pop
and
lahf
cmpsl
cmpsb
push
push
add
mov
sub
inc
js
or
and
les
sbb
fsub
adc
sbb
add
fprem1
rorl
lods
push
sub
xchg
mov
add
ja
adc
out
in
stos
fidivs
pop
dec
mov
cld
sub
dec
xor
insb
imulb
fiadds
mov
popa
mov
dec
mov
jecxz
jecxz
sub
std
xchg
inc
gs
pop
jae
or
mov
inc
repz
mov
sbb
xchg
gs
mov
sbb
lahf
push
xchg
fsubs
adc
imul
pop
test
sub
jns
push
and
nop
jno
xchg
push
fdivl
mov
jg
int3
in
pop
sbb
mov
aas
jmp
sti
xchg
push
dec
or
in
pop
xor
mov
repz
or
inc
jne
push
in
fld
sub
out
jp
dec
push
aad
adc
cmp
mov
loope
mov
push
pusha
mov
int
inc
stc
aaa
repnz
test
pop
mov
ja
fnstenv
dec
nop
sbb
ja
add
or
testl
pop
lret
fstl
data16
sub
push
sub
fists
stc
jno
push
test
stos
xor
xchg
mov
ret
adc
es
jp
pusha
popa
adc
test
sbb
shrl
arpl
mov
nop
pop
or
xor
fsubrl
dec
push
jp
pop
cltd
in
inc
mov
cwtl
xchg
adc
imul
mov
push
xor
daa
and
xor
push
xchg
sbb
fildll
out
pop
xor
mov
sub
push
out
dec
cmc
out
repz
in
in
imul
sahf
loopne
cwtl
repnz
xchg
fnsave
mov
fs
lcall
stos
inc
ja
in
sarl
in
jge
mov
pop
stos
imul
and
pop
adc
xlat
jns
repnz
push
dec
jl
add
fisubrs
lods
loope
pop
loopne
ret
popf
cmpsl
cli
mov
outsl
mov
sbb
in
pop
sub
dec
cs
jle
mov
test
les
pop
sbb
adc
insl
pop
mov
pop
xorl
push
and
fs
shrb
pop
jl
pop
cmp
ds
scas
push
cmc
cmpsb
cmp
roll
pop
mov
sub
push
out
push
push
insb
dec
repz
mov
dec
lods
inc
iret
xor
pop
cld
mov
or
sbb
and
dec
sbb
es
leave
mov
mov
lret
xchg
fildl
call
dec
xchg
adc
pusha
dec
xchg
test
cltd
add
cmp
out
or
ljmp
add
mov
and
rcrl
sub
pushf
mov
mov
push
xchg
movl
iret
sub
mov
js
inc
cs
cmc
add
mov
and
imul
test
cld
sbb
das
mov
dec
or
xchg
mov
jb
loopne
outsl
imul
and
iret
cmpsb
mov
aam
xchg
and
sbb
dec
shl
mov
lds
scas
adc
push
inc
and
xchg
insb
je
xor
xchg
xchg
xor
push
cmp
lds
data16
out
lds
out
aas
popa
cmp
stc
mov
mov
sub
push
sub
shlb
clc
pop
das
shlb
insb
lods
insb
rolb
fdivl
and
cmc
dec
and
push
insl
iret
mov
mov
mov
into
movups
out
cmc
pop
ja
je
cli
lahf
jecxz
xchg
repz
inc
lea
mov
imul
add
push
lcall
xor
fadd
mov
leave
dec
sub
movsl
sahf
push
in
std
repnz
insb
push
rcr
js
push
pop
es
mov
insl
inc
sbb
add
insb
fmuls
ljmp
mov
iret
xchg
cltd
push
jno,pt
rcl
imul
fcmovbe
loopne
jecxz
pop
fadds
addr16
bound
icebp
orl
mov
outsb
ja
adc
cmp
int3
pop
jo
push
addb
shlb
icebp
repz
and
xchg
jnp
iret
mov
cltd
dec
mov
xchg
in
stos
bound
jns
sahf
or
cltd
inc
aad
pusha
xchg
outsb
push
xchg
jmp
cmp
adcb
test
lods
push
push
add
pop
fldl
sub
sub
jae
xor
cld
arpl
test
cmpl
inc
ret
std
jne
push
aaa
jo
xor
pop
in
dec
fsubrl
int3
call
inc
or
add
das
stc
ljmp
test
push
inc
pop
cmpsb
movsb
data16
ljmp
pop
dec
inc
popf
inc
int
fwait
popa
dec
enter
dec
fcmovnbe
cmp
jne
adc
in
les
xor
shlb
cmpsl
xchg
jl
inc
dec
fsub
xchg
lahf
jae
daa
addr16
aam
rorl
nop
or
xor
jge
adc
in
cwtl
insb
add
test
bound
cli
icebp
cmp
sbb
into
add
mov
dec
or
cmpsb
and
outsl
loopne
jmp
rcll
imul
adc
jae
aaa
cmp
cltd
imul
fsubrl
aaa
mov
cmp
push
mov
xor
popf
fsubl
clc
jno
test
sbb
fldcw
sub
icebp
shrb
test
or
clc
cli
push
add
mov
pop
or
stos
es
and
cmp
mov
xchg
pop
and
arpl
ja
adc
les
divl
mov
sub
or
lcall
mov
jp
fnstsw
clc
push
aam
repz
aad
std
mov
mov
push
dec
mov
std
sub
sub
jl
mov
stos
dec
les
dec
pop
inc
int3
or
mov
xchg
jnp
ja
jl
mov
pop
jle
xchg
les
aad
mov
in
popa
pop
pop
pop
mov
cwtl
push
dec
mov
aas
ja
jbe
scas
push
mov
push
inc
orl
xor
pop
xchg
lds
inc
cld
ja
jmp
adc
pusha
sub
pop
fisubrs
insl
es
push
add
arpl
in
pop
loop
out
add
in
das
adcb
lods
mov
add
andl
pop
fists
pusha
bound
fcomp
sbb
xchg
adc
pop
sbb
shlb
and
or
gs
pop
lods
sbb
test
jg
push
xchg
lock
jne
fimull
jno
cmp
hlt
cmp
mov
xor
adc
pop
sar
stos
push
push
test
push
and
mov
xchg
arpl
cli
mov
imulb
incl
clc
bound
aad
ljmp
mov
cli
cmp
mov
clc
jp
fs
sub
adc
ja
cltd
scas
gs
sbb
xorb
xchg
lcall
ss
scas
cmpsl
dec
sub
clc
pop
shlb
lods
mov
sbbb
mov
fadd
inc
sbb
jmp
outsb
jle
sbb
add
jne
add
popf
cltd
dec
jg
jnp
call
pop
lods
lds
dec
jne
mov
das
pop
xchg
ja
iret
cmpsl
fcompl
outsb
repnz
dec
jnp
lods
loopne
mov
mov
pop
sub
stos
bound
xchg
or
lret
ret
mov
jo
in
cmp
out
out
stc
scas
fidivs
lret
mov
lock
lea
sarb
mov
outsb
mov
xchg
xchg
jns
mov
scas
inc
arpl
xor
mov
arpl
xchg
lea
lods
pop
ud1
mov
iret
stos
out
xlat
mov
clc
mov
mov
jo
aam
mov
push
clc
pop
xor
aad
aas
add
push
cmp
and
cmpsl
adc
neg
je
jnp
pop
push
int
cmp
dec
mov
pop
cmp
js
ret
cmpsl
ljmp
imul
add
loop
sbb
gs
adc
jns
dec
push
inc
sarb
cmp
je
jae
xor
mov
daa
push
dec
pop
int
movsb
cmpsl
jae
stc
push
popl
iret
sub
stos
adc
movsb
cmc
out
call
sub
int
stc
dec
lock
xchg
push
dec
mov
inc
rorl
test
pop
mov
dec
aad
test
cmp
pop
insl
fs
pop
xchg
mov
outsb
push
pushf
lret
cmp
enter
cmpsl
rcrb
jae
mov
mov
imulb
les
nop
xchg
hlt
xchg
lods
ds
jb
cmp
mov
pushf
out
call
setb
sbb
ret
sti
cmp
addb
addl
lods
cmp
adc
push
ja
rorl
sub
sub
insl
lahf
add
andnps
test
stos
nop
push
adc
push
inc
dec
stc
lods
test
mov
pop
and
adc
shlb
mov
sbb
jle
insb
push
frstor
fidivl
xchg
rcll
test
pop
sti
push
outsb
jae
jg
sub
jecxz
arpl
js
ss
sbb
dec
mov
mov
xchg
jns
sbb
mov
pop
ljmp
mov
cwtl
inc
mov
fst
clc
push
inc
mov
mov
jge
pop
aam
imul
jecxz
add
out
pop
mov
dec
les
mov
adc
scas
push
fnsave
lahf
and
sub
push
mov
enter
xchg
ja
clc
div
bound
lret
xchg
shll
push
test
aaa
test
mov
add
xor
jge
or
out
out
push
or
mov
test
push
inc
sbb
pop
cltd
cmp
loopne
std
push
dec
lret
cli
push
hlt
out
mov
addr16
leave
inc
or
pop
mov
sub
adc
jge
js
mov
adcl
jo
aas
loop
insb
shl
and
loope
or
fstl
mov
xchg
cmpl
jno
nop
push
sbb
lcall
and
jae
xchg
push
shll
sbb
aas
cmc
xchg
push
rcll
insb
xlat
mov
mov
sbb
push
jno
lahf
jmp
adc
outsl
pop
add
in
arpl
rcl
in
lods
xor
xor
and
jnp
mov
repz
movsl
loop
or
cmp
aad
or
xchg
mov
ret
sbb
imul
cltd
fdivrs
movsb
lds
mov
je
xchg
lds
inc
xchg
add
mov
inc
add
sbb
xchg
push
dec
stc
aad
sbb
add
inc
pusha
fistps
dec
cmpsb
xor
mov
aas
fsubrs
repnz
outsb
mov
xor
call
call
and
add
mov
xchg
repz
sahf
mov
inc
pushf
add
fisttpl
cwtl
jb
fs
arpl
addr16
outsl
pop
pop
sub
les
add
adc
iret
hlt
push
pop
adc
rcll
pop
xor
mov
out
sarb
int3
jo
cmp
std
pushf
add
jo
scas
loopne
and
jne
test
push
cmp
cmp
aas
icebp
and
push
aas
pop
insl
lea
ljmp
mov
popa
xchg
push
sti
jb
gs
sbb
repz
jo
rcll
jno
data16
pop
outsb
xor
push
into
pop
loop
rcrl
nop
adc
in
out
jge
movl
pushf
mov
pop
sti
inc
mov
jne
or
mov
daa
pop
jbe
cmp
cwtl
add
nop
mov
fmull
popl
jg
idivb
add
jb
stc
pop
rcrl
sub
stos
in
outsl
push
pop
lods
mov
popa
popa
push
cs
loop
and
xor
push
loop
fwait
xor
ret
arpl
sub
inc
fucomip
es
test
jmp
mov
in
or
imul
mov
test
pop
inc
fwait
ljmp
cli
xor
iret
shl
fdivrl
and
inc
xor
and
cs
js
ja
notl
cmp
dec
jg
ficoml
xchg
sub
or
inc
ret
push
aad
jg
push
push
fcmovbe
jno
xlat
inc
jl
aas
ljmp
push
roll
ret
sbb
mov
das
dec
fstl
xchg
dec
or
sbb
jle
cwtl
clc
pop
fiadds
roll
and
popa
mov
pop
insl
mov
xor
adc
push
mov
cmpl
and
pop
scas
int3
inc
mov
lds
sbb
cmpl
or
fwait
in
jb
sbb
js
and
fbld
mov
xchg
inc
xchg
xor
xor
fmulp
ja
dec
cmc
nop
jg
or
mov
iret
xor
dec
push
jge
dec
push
iret
inc
mov
stos
fistl
adc
imul
jo
push
inc
or
mov
ret
add
mov
sbb
nop
mov
dec
enter
neg
ret
rorl
jge
or
adc
out
rolb
xchg
insb
push
test
mov
jns
mov
dec
lock
mov
call
dec
jmp
sub
or
scas
out
hlt
jle
fadds
mov
mov
inc
push
mov
cltd
jecxz
mov
push
icebp
das
xchg
repz
xor
inc
mov
xchg
mov
lahf
jg
mov
data16
push
jno
fnsave
jb
and
clc
std
sbb
insl
outsl
xor
out
imul
jo
and
jb
cmp
movsb
mov
ret
test
xor
xor
enter
mov
xchg
add
mov
lcall
mov
into
inc
mov
ret
mov
arpl
fwait
jmp
and
push
mov
popf
pushf
jb
xchg
push
add
sub
sub
lods
sbb
test
cmp
fdivl
mov
lds
adc
cltd
sub
loope
icebp
test
and
aad
cltd
mov
push
jnp,pn
dec
push
fisubrl
sti
loopne
xor
int
lret
out
inc
dec
add
lds
adc
push
mov
stc
jne
xor
pop
in
lods
add
cmpl
cli
push
push
sbb
pushf
decl
arpl
int3
mov
mov
cli
pusha
xchg
adc
xchg
adc
in
and
sbb
loope
xchg
sbb
loopne
rol
unpcklps
je
sbb
jp
mov
movsl
gs
inc
adc
icebp
rcll
inc
cmp
mov
cmp
push
fildll
dec
in
xchg
loopne
fidivrs
xchg
push
pop
add
inc
cmc
in
loopne
arpl
xor
xor
mov
xchg
xchg
push
in
iret
mov
cmpsl
fistl
fmul
lea
ds
rorb
negb
addr16
out
std
cmp
pop
cmp
ja
add
enter
js
sub
mov
push
test
or
rcrl
inc
xor
lret
cli
or
cmp
imul
out
pop
dec
stc
add
ljmp
and
adc
das
xor
push
dec
fsubs
ss
je
xorl
pusha
fbstp
jne
out
js
dec
decb
and
mov
xor
push
mul
mov
jp
jns
pop
out
into
inc
mov
cs
stos
sbbl
in
pusha
ret
and
or
adc
repz
hlt
cmpl
sbb
rorl
push
ret
rcrl
pop
cmpsl
ret
dec
cli
ret
cmp
aam
sub
sub
sbb
lret
fcom
xor
xor
repz
ljmp
cmp
adc
mov
lock
stos
movzwl
jp
loope
mov
in
jge
adc
dec
sti
push
jmp
imul
push
inc
cmpl
testb
mov
mov
mov
clc
push
rcrb
cld
aad
js
jmp
popf
mov
mov
pop
push
jns
inc
lods
jo
jmp
xchg
or
sahf
jp
mov
pop
dec
and
sub
lea
mov
shl
pop
push
sbb
jo
lea
xor
xor
mov
icebp
pop
and
mov
jns
mov
xchg
ljmp
and
or
mov
pop
loopne
imul
mov
daa
jae
sub
outsl
xor
push
cmp
clc
int3
pop
cld
xor
mov
xlat
xor
xchg
imul
lods
pop
add
cmc
test
and
xor
fs
scas
sub
sub
jmp
in
mov
lods
shlb
sub
scas
in
repz
scas
js
sbb
sub
aaa
je
mov
sti
adc
pop
test
js
sub
add
xchg
hlt
adc
jmp
loope
or
or
mov
jno
mov
and
out
aaa
mov
fs
mov
push
sub
sti
jg
cli
or
jnp
jnp
adc
aas
jbe
lock
stos
dec
int3
xlat
outsb
xchg
push
cli
add
xchg
aaa
cmp
dec
cwtl
pop
fdivl
jmp
in
and
cli
inc
jle
mov
shlb
mov
sbb
lock
mov
insb
pushf
repnz
xchg
and
mov
enter
jns
push
adcl
inc
test
xchg
push
loop
mov
adcl
jecxz
mulb
or
push
adc
and
aad
pusha
xor
add
repnz
mov
cmc
xlat
sbb
mov
inc
dec
adc
hlt
xor
jecxz
jg
and
xchg
gs
cmp
xchg
iret
callw
mov
push
or
or
js
jnp
and
fbld
xchg
and
push
hlt
sub
lds
sbb
jmp
loopne
xor
mov
sub
stos
push
or
mov
mov
test
aaa
mov
movsl
sbb
std
rol
clc
jecxz
dec
xor
xor
cli
cmpsl
jb
sub
mov
pop
sbb
ret
repnz
mov
sbb
pusha
aam
push
lods
xchg
mov
in
and
and
outsl
pop
pop
mov
push
es
ret
mov
test
pop
mov
sbb
lcall
mov
movsb
mov
in
das
cmp
add
pop
cmp
cmc
xchg
or
pop
mov
pop
sub
out
adc
lret
sahf
sub
outsl
dec
cmp
sarb
xor
mov
jnp
mov
movsb
and
outsl
in
pop
push
test
insb
bound
mov
divb
inc
jno
mov
push
and
lcall
scas
out
add
pop
shrb
testb
aas
js
jl
insl
dec
add
inc
adc
jmp
push
add
adc
out
mov
mov
cmp
sub
dec
mov
dec
pop
or
inc
outsl
cmpl
adc
cmp
push
push
mov
adc
adc
inc
shrb
adc
push
das
sub
in
cmp
rorl
jg
movsl
shr
imul
mov
cmp
sbb
fisubrs
add
daa
ret
shll
dec
adc
repz
or
inc
jo
xor
xlat
adc
push
loopne
notl
popa
mov
pop
movsb
jle
or
xorl
in
jb
xchg
ljmp
xor
outsl
jp
repz
cmp
loopne
je
adcl
ret
sub
push
addr16
and
fidivrs
dec
lods
notl
jo
dec
adc
dec
lahf
sbbl
mov
icebp
jbe
dec
out
sub
bnd
cmp
jo
inc
aam
dec
mov
sbb
in
xchg
fs
fs
mov
vmovaps
fwait
lahf
sub
inc
cmp
xchg
jae
aad
cmp
push
add
mov
push
inc
push
in
jne
sbb
or
mov
or
mov
lret
mov
sbb
push
dec
mov
pop
pop
mov
sub
jno
loopne
ret
sbb
jnp
or
inc
lods
iret
push
test
sub
add
in
cmp
jnp
mov
aad
data16
mov
cmp
adc
adc
push
sbb
xchg
mov
add
push
adc
incb
pop
mov
sbb
loopnew
std
cmp
pop
mov
sub
cli
add
sbb
jne
in
mov
sbb
push
lds
adc
mov
andb
jo
fsubl
mov
jae
jnp
sub
adc
fscale
mov
inc
mov
into
ret
shrb
cmpsl
negb
insl
lods
nop
cld
lahf
mov
push
arpl
in
adc
pop
add
adcb
loop
cmp
mov
stos
or
jmp
mov
loope
ficoml
mov
cmp
testb
fwait
pop
lcall
adc
push
pop
pop
lods
imul
or
std
lods
insb
jp
and
std
leave
or
push
sti
xor
dec
in
dec
adc
sbbb
fcos
xchg
mov
jns
push
cmp
das
push
jp,pn
xlat
mov
jl
leave
insl
pop
jno
js
jecxz
add
js
xchg
push
hlt
pop
orb
pop
loop
xchg
adc
int3
gs
and
dec
lret
test
mov
jns
cmpsb
cltd
mov
outsl
pop
insb
add
in
rcrl
jmp
in
mov
jl
fisubs
shrb
add
pusha
dec
push
xchg
cmp
in
cmp
jle
add
adc
fistpl
push
into
mov
jle
aas
add
pop
jp
cli
and
or
shll
out
je
inc
and
push
ja
lret
enter
ret
cmc
cmp
adc
cs
mov
mov
cmp
dec
stos
repnz
aas
lods
ficoml
pop
mov
pop
mov
fs
jbe
pop
pop
xchg
pop
hlt
out
outsl
dec
ja
sbb
cmc
test
mov
push
push
adc
sarl
mov
sahf
mov
sar
fwait
dec
lret
jo
mov
push
or
and
jo
dec
js
iret
rol
fisttpl
cmp
push
sbb
mov
mov
ret
jl
insl
pop
push
enterw
pop
mov
xchg
aam
adc
mov
testl
dec
out
clc
outsb
jno
xchg
lea
in
sub
jb
xor
hlt
loopne
xchg
push
mov
ds
inc
addr16
icebp
mov
inc
dec
popa
pop
cwtl
xor
or
adc
imul
push
cli
push
dec
stos
in
jmp
cli
fidivl
sub
adc
xchg
int
mov
mov
test
dec
ljmp
pushl
hlt
dec
xor
push
mov
out
jge
mov
jle
dec
mov
cli
loope
pop
mov
stc
fisttpl
test
add
test
lods
mov
xor
mov
mov
or
hlt
mov
xor
test
popa
mov
mov
fsubrs
xor
pop
pop
mov
xor
jp
xchg
lcall
pop
mov
and
xor
lock
loope
sub
mov
test
cmpsb
push
mov
jge
adc
jnp
out
xchg
idiv
fmuls
ror
xor
aaa
or
xor
ret
fs
sarl
pop
sub
cmp
mov
sub
jle
pop
pushf
std
pop
fwait
cmpsb
mov
mov
xchg
and
ss
mov
inc
cmp
shl
je
jmp
jmp
lds
and
aam
cmp
mov
xor
sarb
lds
sbb
mov
out
mov
enter
iret
or
popf
add
sub
adc
cmp
imul
jne
lods
test
das
loop
into
movsb
rcrl
and
mov
mov
inc
mov
paddsb
lods
cmp
ja
inc
jg
sti
scas
pop
ret
loopne
pushf
sub
into
repnz
dec
inc
mov
sbb
dec
imul
addb
jl
stos
mov
xor
jo
aad
push
xchg
mov
and
jl
dec
lds
mov
shr
pop
sarb
jne
mov
mov
xlat
testl
jp
clc
popa
in
test
loopne
lods
mov
adc
xchg
pop
or
sahf
jne
movsl
pop
jl
aam
mov
pop
push
jecxz
pop
dec
repz
jae
hlt
stos
pop
movsb
call
dec
adc
cmp
adc
mov
loop
ds
mov
xchg
dec
fstpl
outsl
mov
and
xchg
shrb
jae
ja
pop
pop
inc
jl
fbstp
repnz
push
mov
rorb
xor
loopne
or
add
es
xchg
pop
sti
pop
mov
loope
divb
mov
mov
repnz
cwtl
movsl
mov
ds
ret
test
mov
add
je
cwtl
out
pop
jns
pop
enter
cmp
mov
jnp
cmp
iret
dec
push
cmpsl
scas
and
adc
push
mov
push
std
or
jbe
test
movsl
cs
inc
call
leave
jge
mov
push
add
daa
xor
add
fcmovu
jecxz
adc
cltd
imul
testb
aaa
adc
jmp
and
add
push
sahf
push
sti
ds
adc
adc
sbb
adc
mov
movl
mov
add
or
mov
cltd
add
out
jmp
mov
in
push
mov
dec
add
push
ljmp
pop
jbe
mov
testb
cmc
mov
in
fsubs
ret
adc
call
xor
cmp
adc
jg
lods
rcr
sub
ja
in
aad
mov
js
outsl
jb
pop
xor
fstpl
push
mov
sub
cwtl
out
aad
incb
cmp
sub
mov
xchg
sub
mov
cmp
mov
imul
adc
push
xchg
dec
sbb
dec
aam
cli
ret
xchg
shrl
jp
sbbl
mov
fdivs
pop
mov
ret
lret
jp
cld
pusha
adc
test
dec
pop
cs
fcmovnb
pop
or
pop
mov
mulb
popf
das
mov
mov
and
jl
sub
and
jl
fiadds
mov
pop
loope
sbbl
stos
xchg
ljmp
add
mov
sbb
add
xchg
push
and
ds
mov
and
lret
adc
dec
push
cld
xchg
lock
test
or
mov
sbbl
leave
shl
mov
imul
mov
and
xor
dec
adc
arpl
jecxz
push
lret
ret
jp
addb
cld
lods
push
mov
das
lret
nop
idivb
in
and
fsubrs
or
lret
add
cmp
xor
ljmp
neg
cmp
jge
call
cs
repnz
mov
stc
pop
mov
movsl
cmp
imul
sub
mov
push
sbb
into
add
stos
mov
and
hlt
negl
inc
push
cmp
das
out
mov
nop
mov
loopne
rep
loope
push
jl
in
cltd
cmp
lock
push
addr16
add
mov
mov
popa
fldl
out
adc
test
gs
das
int
xlat
int3
sbb
pop
std
dec
inc
popf
mov
sub
std
inc
push
movsb
sub
adc
xchg
pop
push
push
cmc
test
inc
or
aad
je
inc
and
jg
mov
mov
ds
scas
dec
lea
cmp
adc
stc
lods
stos
outsb
int
ret
xchg
gs
xchg
daa
rcrl
imul
es
mov
xchg
or
dec
scas
gs
xlat
lods
aam
movsb
xlat
or
inc
xchg
mov
mov
fcoms
outsl
jg
pusha
inc
mov
mov
adc
mov
mov
mov
jg
in
hlt
jecxz
insb
pop
int
jg
mov
push
cmp
fisttpl
pushf
hlt
xchg
imul
dec
outsl
es
shrl
sti
xchg
out
fbstp
xor
aad
fs
ret
sbb
outsb
daa
mov
dec
sahf
data16
and
ret
dec
lahf
outsb
mov
dec
mull
sbb
int3
pop
xor
cmp
xchg
push
lcall
out
aaa
es
xlat
jg
and
jb
aad
dec
xchg
cld
addr16
mov
ret
lds
sbb
ret
mov
pop
xchg
inc
aas
push
sbb
daa
lret
and
add
and
jmp
mov
popl
sub
sub
dec
sahf
dec
popf
xlat
repnz
insb
cs
jnp
inc
push
test
sahf
and
ret
dec
xchg
mul
adc
aad
ljmp
lea
nop
and
int
pop
mov
shlb
repz
incl
mov
not
cmc
add
mov
ficoms
add
out
insl
jecxz
orb
sbb
enter
sub
pop
imul
xchg
scas
fisttpll
mov
xor
fcmovne
into
rdtsc
ret
stos
adc
lods
mov
pop
scas
jp
adc
mov
insl
movsw
test
cmp
out
bts
cmpb
mov
inc
mov
xchg
loope
lods
cwtl
sub
or
scas
pusha
ljmp
jecxz
jno
xor
mov
jb
sbb
in
sub
cwtl
call
cmp
das
jl
ljmp
sub
xchg
cld
mov
orb
inc
mov
pop
arpl
xor
mov
incb
xchg
pop
fisubs
and
or
stos
enter
jbe
jo
sub
sbb
lret
dec
test
fildl
or
push
mov
jno
pop
int3
jecxz
push
aad
pcmpeqb
fcmovnbe
cmp
and
jp
and
mov
xor
repnz
xorb
add
xchg
pushf
cwtl
sarl
push
ds
fimull
and
sub
pusha
and
imul
imul
fisubl
imul
sbb
inc
test
push
pusha
fildl
shrl
cmp
out
push
lret
mov
repz
xchg
sub
jae
xor
mov
xor
jg
inc
push
out
insb
mov
xor
or
and
ja
call
pop
out
insb
xchg
outsb
push
pop
lods
mov
xor
adc
test
fidivrs
aaa
mov
pop
push
jne
decl
popf
movsb
mov
loope
jo
les
mov
das
sbb
outsl
cmp
fwait
insl
dec
or
out
xchg
cltd
xchg
pop
out
popf
sti
push
test
dec
sbb
or
cmp
mov
fwait
les
cmp
jb
mov
fistps
xchg
lret
mov
sbb
adc
mov
inc
mov
add
loope
repnz
movsb
out
jg
shlb
or
rclb
sarb
push
fstp
loopne
fisttps
stos
iret
mov
aaa
std
lret
sahf
mov
out
cmpsl
sub
mov
xchg
mov
aam
or
fisttpl
push
fistps
mov
inc
fstpl
push
shrl
mov
mov
inc
pushf
fwait
inc
jmp
xchg
daa
bound
int
imul
add
dec
cwtl
pop
loopne
lock
fldenv
push
and
fisttpll
jbe
dec
insb
lods
cmp
xlat
add
mov
add
cwtl
pop
adc
jp
sbb
cmc
outsb
into
mov
popa
dec
orb
mov
push
inc
pop
xchg
or
mov
mov
sub
lret
cmp
cwtl
sub
sahf
in
xchg
stc
int
adc
push
fidivs
scas
push
push
push
sbb
push
and
mov
mov
outsl
in
mov
call
lds
and
xchg
mov
push
push
test
aaa
sbb
xchg
cmp
inc
in
faddp
xchg
add
and
xor
push
popf
scas
and
inc
mov
cmpsl
pop
adc
cmova
fwait
js
fwait
sbb
mov
dec
fsts
rorl
nop
or
ret
in
push
cmp
imul
out
incb
pop
lcall
or
sbb
andb
jns
mov
mov
xor
dec
sbb
cmpsb
popf
jo
or
movsb
mov
fimuls
movsb
fs
lret
adc
testb
shll
inc
je
and
push
mov
push
lds
mov
jae
out
jnp
mov
call
add
or
imul
xor
xchg
addl
cwtl
loope
cmpl
fwait
jne
and
addl
les
jb
movsl
in
into
dec
scas
lcall
sub
sub
xor
mov
jmp
loop
mov
iret
adc
and
sbb
js
add
cmp
testb
mov
mov
rorl
sub
setae
outsb
insb
mov
xor
test
push
dec
inc
mull
je
push
rorb
lret
or
mov
mov
in
add
sbb
inc
clc
nop
leave
dec
cmp
inc
push
ds
pop
out
sahf
ret
cmpsb
rclb
dec
and
and
or
inc
mov
fwait
push
test
xchg
mov
pop
pop
jle
jb
imul
and
pop
sbb
and
lock
adc
rolb
xor
or
xchg
cmp
outsl
xchg
call
out
sub
dec
pop
data16
daa
mov
test
pop
adc
fldl
adc
decb
xor
or
mov
lahf
shr
mov
push
in
notl
dec
push
lcall
adc
testb
aaa
or
outsb
sub
jp
shlb
and
les
fnsetpm(287
in
xchg
push
xchg
sbb
push
xor
fimuls
enter
loop
in
cmpxchg
cmp
in
jo
xor
arpl
mov
inc
gs
dec
in
push
arpl
test
pop
mov
fldl
imul
lods
mov
adc
stc
lea
xchg
push
vpmaddwd
or
sub
aas
aas
cld
les
cmp
push
lods
sbb
cld
cmpsb
inc
xor
mov
mov
inc
or
xchg
sbb
ja
outsl
in
cmpb
mov
or
int3
inc
xor
cs
ja
or
into
fcomps
in
inc
and
les
adc
sub
mov
pop
xor
and
jb
jno
sub
push
scas
add
aad
push
add
ja
clc
or
push
hlt
shl
sub
lock
fldl
add
cmp
mov
test
loopne
inc
and
mov
dec
outsb
sbb
inc
jl
adc
cmp
xchg
pop
xchg
ss
or
cmp
add
xchg
pop
adc
shr
ds
vphaddubd
or
ror
std
mov
jns
xchg
lret
aaa
sarl
sbb
sub
cmp
lret
xchg
test
mov
loop
lock
fwait
mov
push
imul
jb
addr16
bound
dec
add
lea
xor
pop
leave
imul
sar
pop
xchg
les
cmpsb
push
popa
pushf
push
xor
mov
ss
test
into
jo
outsb
mov
xchg
fcmovnb
stc
test
lsl
scas
adc
mov
inc
popa
fsts
push
insl
scas
jmp
sub
mov
cli
es
stc
add
adc
xlat
call
jbe
xchg
mov
xlat
sbb
jmp
in
add
test
xor
pop
lcall
repz
inc
jne
ss
sub
push
pushf
stos
and
out
sbb
addr16
or
push
sub
cmp
into
cmc
clc
shlb
or
and
push
add
incl
mov
mov
adc
ljmp
push
les
std
xor
jle
mov
dec
fsubs
iret
stc
jne
cmp
aam
shll
sbb
jle
loope
loopne
xchg
inc
arpl
cwtl
and
enter
mov
or
add
inc
jle
fsubp
cmp
cmpsl
adc
cmpsl
in
jno
xchg
dec
call
sub
xor
jb
xor
iret
jmp
jecxz
xor
js
into
xlat
cltd
sti
push
pop
popa
out
aas
pop
cmc
imul
out
inc
adc
mov
adc
in
mov
out
sub
add
sub
pop
xchg
movsb
clc
xor
loope
jne
fidivl
lret
jge
inc
data16
ja
add
jle
adc
aad
ss
insl
rorb
and
xchg
pop
lods
push
das
jp
out
movsb
mov
sub
xor
xchg
inc
cmp
lret
testb
cmp
cld
lcall
add
push
jns
add
dec
stos
dec
arpl
in
sar
fsubrs
cmpl
out
mov
bound
xorb
mov
add
ficoml
xchg
ds
cmp
jae
ss
and
sbb
sub
push
add
fsub
add
and
dec
lret
out
ss
lods
push
push
mov
vpunpckhwd
loopne
jno
sbb
popf
mov
xchg
cmp
and
dec
and
sub
scas
nop
jle
jecxz
inc
mov
dec
bswap
jo
or
rorb
push
popf
pushf
cmc
test
xchg
out
lea
sbb
push
aas
adc
test
hlt
dec
mov
repnz
pushl
or
cmp
ljmp
lahf
sbb
imul
out
dec
outsl
jge
movsb
sub
cmpb
lahf
push
aad
jnp
daa
mov
dec
mov
sbb
adc
mov
jns
jnp
inc
cmpsl
dec
push
mov
pusha
push
hlt
out
dec
push
bound
inc
mov
adc
pusha
sbb
and
rcl
push
xor
or
xlat
popa
mov
rolb
adc
stos
dec
xor
and
jmp
pop
jae
imul
push
mov
aaa
xor
dec
movsl
das
in
arpl
repz
pushf
jns
dec
sbb
loopne
and
xlat
ja
mov
aad
xor
int
dec
clc
xchg
add
inc
sub
bound
inc
jb
add
mov
adc
jmp
ljmp
dec
jb
test
repnz
fwait
ds
push
popa
dec
adcl
xor
mov
pop
movsb
jmp
cmp
push
adc
fs
mov
mov
pop
cltd
sarl
lods
cmp
add
dec
jmp
pop
mov
dec
jecxz
test
addb
push
push
fisubl
jmp
xchg
cmp
inc
call
jmp
iret
lds
cmpsb
jns
sub
ja
mov
mov
ss
out
mov
jge
mov
inc
setg
loopne
mov
or
ljmp
popa
data16
adc
test
mov
jne
cli
das
mov
adc
xor
jl
cmp
clc
inc
adc
cwtl
ds
pop
ret
cmp
push
test
out
test
pop
cmp
lock
sub
cmp
in
popa
sub
call
jne
das
in
push
mov
pop
pop
add
cs
adc
and
stc
cmpsl
adc
les
xchg
or
inc
sbb
xchg
or
fldenv
and
ljmp
ds
insl
mov
clc
and
cmp
rcrb
fs
pop
movaps
add
mov
inc
and
je
lcall
dec
aaa
in
xchg
idivl
jmp
movsb
insl
pop
cmpsl
dec
xor
test
add
dec
in
cld
dec
insb
scas
lcall
push
fwait
in
in
xchg
adc
aam
or
pop
lcall
xchg
jnp
push
mov
sub
mov
fildl
fnstenv
movsl
push
decl
ror
out
xor
lret
clc
jl
add
xor
imul
and
ss
cmp
inc
int
in
outsb
lods
leave
push
fisttps
fs
aas
xchg
jle
sarb
jge
add
scas
pop
sub
mov
mov
sbb
pop
sbb
dec
icebp
cs
xor
cld
ret
xor
cs
cli
xchg
sub
push
sub
or
fidivrl
xchg
pop
cmc
lock
std
jbe
int3
data16
enter
out
rolb
testl
andl
cmp
and
xchg
je
cld
out
ret
dec
xchg
jl
pop
push
jo
ja
std
or
aaa
mov
xchg
xor
xor
pop
stc
cli
pop
adc
jge,pn
in
leave
xlat
pushf
xchg
xor
pop
movsb
jbe
test
movsl
add
call
inc
adc
rcl
pusha
dec
test
mov
cmpsl
inc
sahf
cmc
cmpsl
aaa
and
loop
sub
inc
movsb
pop
inc
in
xchg
pop
js
fdivl
orb
and
cld
int
sbb
lahf
icebp
jp
aad
cs
popa
xor
cmp
push
enter
inc
dec
cli
mov
mov
dec
mov
aad
fcmove
repz
push
adc
orb
mov
cmpsl
stos
jecxz
popf
inc
rcl
dec
pop
insl
mov
dec
add
mov
scas
and
push
insl
rolb
das
pop
dec
vcvttsd2si
pusha
jnp
adc
or
fadds
xchg
inc
push
sbb
push
mov
lret
lock
jl
push
cmp
insb
andb
fisttpl
movsb
adc
xchg
xchg
cmc
ds
mov
fbstp
mov
add
sti
loopne
add
orb
jmp
es
fcmovnu
or
insl
cmpsl
mov
repnz
sub
mov
fdivr
mov
jne
dec
adc
push
adc
andl
pop
out
loope
imul
ret
loopne
into
mov
inc
or
lcall
xor
adc
mov
cli
and
shl
pop
repnz
ret
mov
lahf
pop
mov
shl
outsb
iret
jge
or
pop
loopne
mov
orb
or
jg
mov
xchg
es
fs
mov
jmp
incl
test
or
pop
sahf
adc
xchg
loop
cmpsb
mov
pop
push
imul
cmc
hlt
xor
add
xchg
jnp
out
mul
scas
sbb
cmc
shlb
rcll
ficoms
test
mov
sarl
inc
aas
fwait
or
out
mov
aad
movsb
pop
mov
imul
push
icebp
mov
scas
cmc
scas
std
push
jge,pt
out
adc
or
push
aas
lods
rclb
pop
adc
in
lods
mov
and
int
fcoms
push
pop
sbb
xorb
lcall
iret
popl
fnstcw
gs
lret
sbbl
push
xchg
pop
inc
sbb
cwtl
outsb
std
push
dec
inc
mov
shlb
jne
xchg
scas
mov
clc
into
cld
mov
lcall
cwtl
or
outsl
mov
fistpl
popf
jae
popa
xchg
loope
test
sysenter
les
add
out
mov
lds
inc
nop
mov
ficompl
jns
xor
pop
seta
arpl
sbb
mov
lret
js
push
xor
ret
xor
cmp
adc
test
in
pusha
in
std
aaa
inc
jmp
cs
and
fs
jb
pop
imul
outsl
arpl
add
inc
nop
mov
hlt
inc
aas
adc
movsl
sub
adc
push
xchg
inc
insb
sbb
loopne
dec
int3
push
xchg
add
loope
or
subb
push
xchg
push
or
add
add
insl
lcall
or
leave
mov
pop
jl
ss
ss
lcall
outsb
mov
es
xchg
mov
js
xchg
dec
subl
sub
aaa
push
xchg
rep
push
mov
cmp
movsl
xor
in
movsl
es
inc
fstpt
movl
data16
mov
cmp
dec
hlt
adc
mov
imul
js
arpl
repnz
sahf
mov
fsubl
inc
pop
ret
mov
popf
test
add
xor
pop
in
daa
mov
sbb
daa
into
xchg
std
inc
sarl
cmp
cmpsb
pop
add
mov
mov
cmp
fisubs
or
xlat
iret
sub
imul
mov
ljmpw
repz
push
cmp
add
repnz
insl
pop
clc
push
les
and
mov
cmp
xor
xor
and
sub
mov
pop
mov
pop
fisubrl
btr
rorb
push
out
fcmovnb
xchg
addr16
push
xor
jo
into
cmp
and
gs
or
adc
cwtl
inc
push
clc
add
mov
popf
cltd
mov
and
in
test
jmp
divps
xchg
outsl
mov
lds
or
xor
call
popf
mov
pop
mov
stos
hlt
lret
jns
inc
imul
jne
mov
add
fists
add
repnz
scas
popa
pushf
jnp
xchg
mov
insb
lret
addr16
ret
out
jge
rolb
or
mov
stos
daa
and
testb
sub
add
addl
mov
sub
lea
mov
jp
daa
cwtl
jne
add
dec
sub
sahf
lret
movsw
lret
mov
in
or
mov
mov
inc
hlt
sub
fdivs
add
jp
mov
or
xchg
lock
adc
nop
ffreep
out
jg
je
xor
and
iret
movsl
push
or
je
out
pop
es
mov
fnstcw
xor
push
rcrl
andl
xchg
mov
push
xlat
push
testb
mov
int3
push
sub
inc
dec
sub
out
fsubrs
push
push
lret
call
fistl
in
scas
dec
mov
cmc
pop
sbb
in
insl
shll
scas
fincstp
orl
pushf
xchg
int3
jns
sub
mov
and
fwait
sbb
jns
outsb
mov
clc
fwait
lock
mov
ds
lahf
iret
push
pop
dec
pop
roll
imul
or
dec
pop
ljmp
lds
pop
xchg
sbb
inc
or
fisubrs
repnz
jp
cmp
push
sub
push
jmp
aas
sbb
scas
mov
pop
mulb
and
test
fisubrl
dec
sub
push
add
cld
loope
sub
cmpb
jne
ja
sbb
dec
outsb
subl
adc
cmpsb
int
cli
ret
lock
inc
inc
xchg
mov
lcall
xchg
ud1
mov
test
cmp
push
fdivrl
ss
xchg
pop
pop
xor
aas
jecxz
xchg
dec
dec
ds
mov
aas
mov
xor
mov
sub
cmp
addl
xchg
cmp
sub
movsl
mov
aaa
push
das
dec
dec
insl
out
mov
lds
jecxz
mov
xorl
outsl
dec
cltd
sbb
sbb
fcoms
negb
inc
sahf
mov
aaa
push
divl
out
inc
xchg
lds
mov
or
or
jmp
stos
test
sbb
sub
jnp
mov
cmp
adc
jne
add
mov
scas
jo
mov
jge
mull
dec
xor
scas
pop
vpcmpd
mov
xor
pop
adc
mov
aaa
jb
xor
enter
into
nop
leave
js
xor
sar
fwait
call
push
fadd
negl
int
sub
call
mov
fldt
mov
inc
sbbb
out
hlt
call
fiaddl
pop
scas
in
inc
pop
dec
test
cltd
dec
clc
jnp
sub
xor
push
insb
dec
push
add
pusha
jge
stos
outsl
xor
out
call
cmc
jbe
rcl
and
xchg
lret
in
int3
aad
outsb
xor
fwait
push
push
sbb
add
xor
ljmp
jno
mov
push
pop
cmpl
cltd
jno
pop
mul
out
cmp
add
out
dec
push
add
sbb
mov
xorb
out
aad
jae
mov
mov
jp
dec
stc
push
in
pop
addl
out
xchg
mov
stc
ror
push
adc
insl
add
not
push
repnz
add
xchg
and
adc
repz
xor
cmp
mov
loope
mov
mov
pop
cmp
rol
imul
adc
fwait
xor
lret
add
push
cwtl
daa
xor
iret
fisubs
std
cmp
pop
pop
inc
decl
jno
fwait
dec
cmpsb
jg
sarb
je
leave
adc
mov
pop
out
repz
xor
mov
jo
push
xchg
js
xor
push
imul
std
hlt
mov
mov
cmp
imulb
mov
fs
mov
je
jmp
xchg
cld
lds
iret
fsts
out
sub
into
pop
jg
push
and
cmpsb
xor
cmp
popa
roll
cmp
jnp
or
aas
cmpsl
dec
scas
add
popa
imulb
xchg
enter
ja
pop
dec
mov
push
insl
mov
mov
sbb
pop
bound
and
push
mov
mov
dec
fstpl
sahf
adc
push
jmp
rorl
inc
jbe
jge
or
sbb
divl
sub
in
jno
fiaddl
shlb
sub
jnp
mov
lret
out
jl
fidivrs
pushf
stos
jns
icebp
push
push
dec
xchg
mov
jbe
fstpl
jns
or
mov
popf
imul
adc
dec
inc
aad
mov
repz
pop
or
hlt
mov
imul
or
test
fs
leave
push
out
inc
call
mov
rorl
std
sbb
icebp
and
sbb
adc
sub
add
cmp
cwtl
inc
dec
insb
mov
and
lods
gs
mov
push
idivl
jae
enter
aad
pop
imul
sub
jle
pop
jg
popf
mov
inc
pusha
cmp
lret
xchg
test
divb
jmp
popf
into
inc
out
pop
xchg
test
pop
xor
rclb
daa
inc
xchg
xchg
insl
mov
jmp
cmp
sbb
jp
xchg
pop
jp
mov
cwtl
sbb
fld1
add
fs
xlat
dec
push
into
mov
fwait
das
fnstcw
or
xchg
add
pop
fdivrl
inc
mov
stos
or
test
mov
loop
push
aad
jb
push
in
or
scas
mov
out
outsl
push
xchg
mov
cmp
loope
adc
lret
aad
cmpsb
and
inc
fsub
adc
jb,pt
and
test
and
scas
aam
mov
stos
xor
sub
push
cmc
adc
inc
lcall
push
dec
cmp
hlt
dec
jecxz
adc
push
cmc
cmpsl
cmpsl
xchg
packsswb
cld
xchg
clc
or
pop
pop
sbb
leave
lds
push
pop
outsl
pop
pop
add
in
xchg
and
dec
bound
fsubrp
clc
mov
imul
mov
ljmp
or
in
mov
push
stc
mov
cmc
bound
push
inc
jb
mov
out
jns
pop
data16
push
lea
sub
addr16
inc
inc
flds
popf
push
pop
fimuls
xor
jl
shrb
fistl
rclb
mov
lock
push
adc
cmp
pop
push
jne
mov
dec
cli
push
mov
mov
inc
into
jb
daa
add
pop
jecxz
jle
dec
ret
or
add
faddl
in
outsb
cwtl
outsb
mov
cs
inc
dec
scas
push
jmp
xor
mov
jbe
add
dec
sarb
dec
mov
je
sub
xchg
mov
aas
rcll
xlat
pushf
jb
out
test
test
mov
addl
mov
scas
iret
mov
lods
ret
movsl
call
adc
pop
lcall
je
adc
adc
popa
sarb
popf
shl
fdivs
lcall
aaa
in
aas
and
sub
cs
and
nop
jb
cs
shll
repnz
jp
sbb
pop
daa
lods
fldcw
out
fcoml
loop
adc
call
arpl
in
jns
jl
outsl
movsl
cmp
ljmp
dec
dec
push
jle
testl
and
rorb
cmpsb
inc
dec
loope
inc
clc
add
ds
push
push
pop
xchg
xlat
jl
loop
insl
sub
hlt
cmp
cld
inc
jp
sahf
ret
or
rcll
nop
testb
sbb
fldt
cli
sbb
jge
mov
gs
jmp
sbb
loope
adc
xor
jecxz
and
pop
inc
mov
lods
push
lods
sarl
iret
rcll
aaa
in
sbb
test
lahf
xchg
insb
xchg
pop
xchg
mov
repnz
and
mov
cltd
pop
or
or
push
int3
test
das
into
notl
lods
insb
sub
push
xor
daa
or
loopne
mov
pushf
fmull
lods
ljmp
push
setp
sbb
inc
add
sub
stc
jns
pop
inc
cmp
jne
int3
xchg
lcall
cmp
dec
testb
lods
outsb
sbb
adc
fcomi
push
popf
adc
aas
ljmp
call
pusha
call
cmp
inc
call
mov
fsubs
jl
rorb
ja
repz
pushf
jl
inc
push
or
xchg
shlb
sub
std
mov
imul
arpl
int
mov
fsubl
mov
mov
xor
push
stos
mov
adc
or
stc
mov
test
dec
orb
stos
movsb
lahf
lret
mov
or
icebp
cmpsb
les
adc
cmpsb
icebp
or
xchg
jecxz
add
subl
and
mov
arpl
pop
fs
sbb
dec
fs
jbe
arpl
and
in
mov
bound
mov
jge
push
movsl
cmp
stos
lock
out
in
popa
mov
and
mov
outsl
lcall
in
fwait
xchg
jae
cmp
mov
push
dec
push
outsl
pop
shlb
xor
jp
or
movb
cld
lahf
imul
cld
sub
lret
sbb
xlat
jp
mov
and
fwait
pusha
cmp
popf
xchg
fdiv
jle
test
push
and
jmp
jno
add
xchg
mov
xor
notl
inc
aas
pushf
mov
movsl
in
push
in
ficompl
sub
ljmp
sub
shrl
add
inc
xor
inc
dec
stos
dec
adc
xchg
pop
push
sbb
push
out
mov
setb
loope
leave
mov
xchg
add
sahf
sti
mov
dec
sub
popa
fstpl
xchg
and
mov
mov
pop
outsl
and
std
orl
inc
xchg
mov
jns
sbb
xor
xchg
sti
and
int3
mov
movsb
cmpb
lahf
ss
jne
xor
in
repz
and
mov
and
in
mov
xor
dec
adcb
in
scas
test
icebp
incb
aam
pop
mov
xchg
and
fdivp
xlat
in
push
inc
rol
add
fidivs
hlt
pop
push
jns
sub
push
dec
add
daa
scas
mov
dec
cs
into
cmp
rcrb
xor
mov
cmp
mov
pop
jl
nop
fsubl
in
sbb
xor
pop
shll
mov
je
rorb
push
xchg
sti
aaa
or
mov
sbb
loope
pop
push
pop
sbb
out
pop
nop
shrb
outsb
or
xor
and
jo
pop
movsb
mov
xor
aam
popf
bound
dec
out
lahf
sub
mov
addr16
add
sub
loopne
inc
rcll
js
mov
push
iret
adc
es
xor
or
mov
xor
mov
int
jp
fcmovnb
icebp
ficomps
xor
mov
or
push
and
and
xchg
push
fcompl
and
sub
jle
or
mov
xor
add
fcomps
pop
mov
cmpsb
push
dec
addr16
or
int
out
mov
orl
rcr
out
test
iret
dec
mov
xchg
mov
aaa
test
push
sbb
roll
fcmovnu
outsb
in
loop
imull
sub
push
sub
scas
mov
adcl
xchg
xchg
xor
adc
add
sarl
push
and
inc
mov
js
inc
xchg
pop
cmp
stos
hlt
js
mov
mov
cmp
fnsave
add
push
or
push
and
xchg
jecxz
xchg
xor
icebp
in
stos
in
inc
mov
jns
mov
xchg
or
inc
mov
lods
cmp
pusha
aas
cmp
ljmp
pop
adc
sub
out
mov
xlat
lods
cmp
mov
lds
dec
mov
js
pop
ja
aas
mov
inc
pushf
orl
xor
pop
sub
cmpsl
jmp
pop
int
rorb
push
gs
inc
mov
bound
xor
inc
add
mov
bound
sub
or
push
ficoml
ret
pop
lds
push
push
xlat
push
std
mov
mov
xchg
pop
inc
sbb
and
test
test
dec
jmp
or
pop
rcr
mov
test
cltd
or
jae
lds
or
and
nop
movsb
lock
and
notb
mov
icebp
dec
int3
pop
adc
test
cwtl
xchg
sub
add
or
out
mov
mov
push
stos
dec
mov
test
mov
rorl
cs
fstpt
mov
xor
sbb
movsb
iret
in
and
cmc
or
mov
pop
dec
fcoms
inc
scas
inc
mov
in
adc
mov
loope
notl
jmp
jecxz
loope
mov
repz
pop
xchg
int
jne
subb
cmpb
sbb
push
dec
sub
enter
stos
icebp
inc
je
jns
or
popf
jae
and
psrad
xchg
int
adcb
arpl
sarl
add
xor
xchg
rorl
fwait
sbb
outsb
adc
push
out
jnp
lahf
bound
dec
shrb
mov
insb
add
cmp
and
xchg
mov
shll
cmp
lock
lahf
push
popf
xchg
shlb
lret
int
mov
popf
jle
push
pop
jbe
mov
xchg
inc
xchg
pop
in
lods
ret
hlt
ret
inc
sbb
test
fs
call
mov
or
xchg
fisttpl
push
leave
push
outsl
aas
cmp
aam
mov
xor
ret
fnstenv
xchg
xchg
or
push
mov
xorl
mov
add
mov
xlat
sub
cmp
sbb
cmp
dec
fdivrs
jns
cs
jg
mov
addl
call
cmp
mov
lods
popf
dec
mov
xor
dec
sbb
and
loop
jle
mov
sbbb
je
mov
mov
cli
mov
or
and
xor
fcmove
pop
sbb
inc
adc
insl
xchg
repz
cmpsl
stc
pop
insl
pop
test
imul
les
adc
pop
mov
dec
loop
scas
jb
mov
sub
ss
and
or
push
mov
add
div
xchg
push
jp
xor
je
out
xor
cmp
jg,pt
or
mov
adc
push
gs
lret
xchg
divb
pop
fcmovnb
or
insl
mov
mov
pop
shrl
xor
push
jo
and
mov
xor
add
sahf
rclb
sbb
xchg
call
lds
dec
cli
jmp
lret
out
out
fsts
inc
ljmp
das
insb
jmp
pop
repnz
cld
mov
push
fld1
scas
outsb
sub
sub
test
pop
andl
mov
xchg
inc
mov
mov
dec
jns
lods
push
cmp
or
inc
xor
pop
clc
mov
in
enter
es
sub
clc
daa
stos
ret
lret
fcompl
sbb
imul
imul
xchg
cmp
pusha
out
paddsw
inc
stc
rcl
xchg
sub
inc
mov
mov
shr
and
hlt
cld
xor
lret
sbb
push
insl
or
fnstenv
adc
dec
in
ss
ljmp
loopne
js
ret
lods
dec
insb
adc
jmp
andb
xor
lret
jle
jns
jno
xchg
mov
popf
inc
adc
daa
pop
js
and
mov
or
movsb
inc
add
inc
cmp
aas
mov
loopne
cmp
repz
subb
mov
call
pop
dec
outsl
inc
add
cmp
mov
cmp
mov
and
xor
scas
fcoml
dec
add
out
xor
pop
push
daa
rolb
and
pop
sub
repnz
mov
test
xor
aaa
enter
aam
hlt
lock
jge
push
rorl
xchg
cmp
dec
push
mov
push
inc
dec
or
inc
add
sbb
stos
in
dec
mov
push
adc
mov
imul
dec
pusha
add
pop
add
mov
pop
insl
xchg
sub
shll
negl
lahf
xchg
cli
xlat
shlb
cs
shl
cmpb
pop
pop
cmp
popf
push
test
xchg
mov
cmp
test
fwait
mov
test
inc
jp
sub
xchg
push
cwtl
cltd
sub
repnz
imul
or
xchg
and
xor
and
int3
or
les
inc
cmp
mov
lret
mov
dec
and
or
push
sbb
aad
jns
repz
sub
popa
in
jge
int3
sahf
out
loop
lods
imul
add
mov
push
or
dec
pushf
repz
scas
cmpsb
inc
lret
sbb
mov
stos
dec
inc
mov
add
and
inc
pop
testb
daa
cs
mov
aaa
push
sub
in
loope
js
scas
pop
shl
xor
pop
add
jge
xchg
daa
add
fsubrs
inc
ss
cwtl
ds
jno
leave
pop
xchg
pavgb
in
or
sub
imul
ja
cli
pop
and
jl
andb
out
and
dec
add
dec
stc
xchg
mov
dec
sbb
jbe
mov
sub
pop
or
adc
test
sub
cmp
lret
ret
arpl
pop
and
pop
sub
inc
mov
enter
fs
sti
mov
sbbb
jns
mov
loopne
mov
mov
pinsrw
xorb
pop
adc
xchg
cmp
call
mov
int
mov
out
pop
add
xor
in
adc
xor
in
jne
test
adc
and
dec
arpl
xchg
and
pop
sub
call
fs
push
cmp
clc
pop
adcb
mov
in
push
outsl
outsb
cmp
mov
sub
push
cmpsl
les
push
pop
in
dec
jo
inc
rcrb
adc
insb
sbb
mov
and
or
mov
fadds
imul
jg
decb
popa
jg
repnz
lds
adc
adc
xchg
ret
cmp
pop
xchg
or
add
aad
cmp
inc
movsb
add
xchg
xlat
add
enter
sub
xchg
mov
or
push
aaa
mov
cwtl
std
jno
mov
jl
enter
fstp
divb
ret
push
cs
lods
cmp
jno
xor
mov
mov
les
jmp
jmp
loope
mov
or
aaa
cld
mov
fcoms
aaa
inc
jns
ja
xchg
inc
mov
into
ficoml
xchg
jnp
fs
cmpsb
sub
mov
lods
and
push
push
jmp
inc
xor
fs
cld
imul
pop
mov
xlat
xchg
shrl
fstpl
fwait
es
cs
das
sbb
inc
test
push
push
jl,pn
and
adc
jns
movsl
sub
and
fcom
pop
mov
pop
add
adc
jns
addr16
pop
addr16
ljmp
jge
fs
int3
fnclex
mov
fsubs
cwtl
jmp
pop
std
inc
jp
lahf
cmp
andl
out
pop
repnz
xor
mov
xchg
std
mov
mov
dec
fcmove
lods
push
fidivl
scas
push
adc
mov
inc
push
lret
sub
stos
jl
insb
sbb
imul
mov
or
jns
jle
out
cmp
scas
push
sub
add
sub
popf
push
jae
mov
dec
stc
add
hlt
into
call
ret
mov
pusha
in
mov
sarl
xor
dec
sbb
cwtl
pushw
mov
scas
cmp
push
sub
add
pop
cmp
lcall
out
out
xchg
inc
dec
inc
push
inc
int
mov
outsb
into
jns
in
ret
xchg
xchg
adc
xchg
rcrb
testl
xchg
jnp
sub
insb
test
xchg
pop
test
out
pop
fdivrs
out
xchg
int
outsl
out
movsb
pop
repnz
pop
shll
xor
in
aaa
or
pop
push
mov
testb
enter
pop
enter
mov
insl
pop
mov
in
rolb
aaa
addr16
pop
repz
jb
stc
mov
mov
mov
sbb
inc
scas
lods
mov
insl
andps
mov
sbb
xchg
push
or
and
inc
dec
out
scas
mov
sbb
divb
out
inc
notl
or
adc
gs
es
cmp
pusha
in
iret
pop
pop
inc
sbbl
mov
lods
mov
out
add
jecxz
jnp
rolb
cmpb
cltd
fldcw
aam
adc
bound
xor
lods
mov
pop
fbld
xchg
repnz
arpl
add
imul
push
push
add
jo
cmp
push
or
jns
jae
mov
inc
dec
cmp
adc
in
xor
dec
mov
xor
fldenv
mov
mov
xchg
mov
gs
dec
inc
or
push
in
mov
cmp
push
data16
int3
jne
ret
in
sbb
mov
xchg
iret
add
test
pop
jno
mov
out
lcall
jge
popa
stos
pop
cld
push
xchg
jp,pn
jp
add
repnz
add
in
jb
mov
pop
sub
jge
jne
test
sbb
push
cmpsb
mov
sbb
jp
add
dec
jae
or
int3
scas
lret
xor
jl
in
test
pop
mov
add
fwait
jb
insb
dec
stos
mov
mov
cs
and
je
mov
mov
mov
adc
repz
adc
xchg
sub
sub
call
or
inc
sub
aam
jae
imul
outsl
cli
addr16
cmp
xchg
stos
clc
stc
jne
adc
dec
in
sahf
adc
xlat
mov
lock
aas
test
inc
stc
pop
sar
and
mov
dec
cli
mov
sbb
daa
lret
mov
push
push
rclb
mov
inc
xchg
adc
or
push
ret
inc
loopne
fldl
rcrb
loop
jb
sub
or
sbb
js,pt
je
pop
jo
mov
lcall
cmp
lret
ficoms
jle
pop
inc
outsb
pusha
imulb
jb
popa
jecxz
mov
call
fisubrs
cmp
icebp
inc
jge
popa
rcrl
mov
xlat
xchg
xchg
es
jnp
outsl
inc
jae
lcall
mov
inc
jnp
mov
jb
hlt
mov
les
jecxz
pushf
fistps
mov
xor
mull
jbe
pop
pop
shrb
jne
xchg
in
adc
push
int
iret
dec
repnz
out
mov
loopne
loop
ds
call
add
aam
in
fisubs
fmul
or
dec
std
mov
xor
mov
jne
xchg
je
adc
std
pop
sahf
dec
push
or
mov
mov
fmuls
xchg
lds
psubb
inc
jns
or
ret
xchg
cmp
hlt
aam
pop
mov
aaa
jp
insl
enter
outsl
pop
test
fiaddl
mov
les
dec
popf
xchg
mov
outsb
push
imul
pusha
iret
and
xlat
pop
push
mov
movsb
cld
sar
loop
test
mov
gs
jl
lea
sub
outsl
sub
out
aam
dec
insb
mov
add
lret
cmc
and
sub
scas
jo
rcrl
add
adc
pandn
pop
jb
add
lds
int3
cmp
out
push
ret
mov
or
or
ficomps
scas
test
or
dec
add
add
pop
lret
mov
add
xchg
daa
adc
fidivrs
outsl
jl
or
sbb
jle
mov
call
xchg
out
insl
stc
adc
xorb
add
sub
xor
sahf
aas
mov
add
mov
je
sbb
adc
jp
fidivrs
sub
sub
mov
imull
mov
lea
cs
aam
in
cmp
and
out
xor
or
lcall
out
adc
pushl
dec
or
sti
add
enter
sub
pop
add
sub
mov
lret
imul
sub
mov
ret
add
int3
mov
add
test
mov
out
fisttpll
pop
cld
fcmovbe
loope
sti
int3
add
adc
xchg
in
jg
gs
adc
test
push
xlat
fiaddl
xchg
jb
cmp
std
notb
adc
movsl
cltd
inc
shll
bsr
cld
insl
push
nop
or
daa
andb
mov
sbb
pop
pop
or
out
mov
sbb
lods
repnz
push
lret
mov
adc
icebp
pop
adc
and
std
std
push
outsb
jge
cltd
dec
je
or
dec
mov
or
fnstsw
mov
jecxz
aas
in
ljmp
dec
xor
add
dec
mov
jl
pop
and
cmp
mov
pop
in
cmc
hlt
pop
in
cmp
lahf
cmp
dec
sti
lret
repnz
idivb
ja
add
sub
jp
fdivrl
fldl
dec
loopne
lods
repz
inc
popf
leave
add
dec
pusha
mov
sbb
push
loope
sub
lret
int
sub
into
xchg
push
xchg
xchg
cmpsb
pop
mov
mov
xchg
sahf
nop
xchg
lock
mov
leave
mov
mov
stos
jae
in
aad
push
stc
mov
pop
shll
sub
sub
or
pusha
repnz
and
inc
cld
test
mov
sub
push
mov
push
fisubs
xor
aad
jo
sahf
sbb
in
push
dec
imul
out
dec
cltd
addr16
loope
mov
in
mov
mov
call
sahf
add
rolb
add
je
sub
fisubl
cmpsb
fstpt
cmpl
aam
int3
in
xchg
cmpsb
sahf
nop
mov
push
push
and
sub
lahf
cld
cmp
pop
stos
mov
adc
xor
rol
cmpl
mov
lds
loop
pop
sbb
gs
xchg
mov
sub
jb
mov
cmpsl
fiaddl
test
negl
lds
mov
or
popf
jle
jbe
aad
jmp
adc
add
in
dec
out
mov
add
sub
sbb
push
dec
jae
xchg
jae
insl
mov
xor
add
andl
pop
mov
call
adc
lods
inc
xchg
test
mov
int
xchg
jle
sub
xchg
enter
sarl
sbb
xlat
lea
and
cmpsb
iret
push
adc
addr16
xor
or
rolb
test
outsl
xchg
push
sbb
push
loopne
and
xor
jb
dec
sbb
add
push
cmp
stos
ss
and
adc
add
leave
andb
xor
xchg
in
les
xchg
dec
jbe
testl
pop
movsb
mov
in
cmp
cmc
cmp
ja
and
or
add
or
scas
adcl
outsb
inc
inc
add
lcall
pop
bound
add
shr
mov
out
pop
lret
xlat
pop
sub
xchg
popf
ja
add
outsl
mov
or
push
fsub
sub
xchg
sub
dec
in
mov
shlb
mov
adc
rorb
addr16
mov
or
sub
push
lds
sbb
ficoml
repz
dec
push
sub
cmp
enter
add
jae
in
outsb
xor
jnp
push
fisubs
scas
push
ror
outsl
xchg
or
push
stc
pop
roll
mov
test
repnz
sub
int3
add
loop
inc
imul
in
xor
mov
add
mov
imul
out
es
mov
aad
jae
mov
or
cwtl
movsl
in
sbb
mov
cmpsl
sahf
cmpsb
and
incb
xchg
mov
fs
aam
and
sub
adcl
jbe
mov
outsb
in
mov
aaa
clc
dec
decb
xchg
pushf
pop
mov
sbb
jae
jae
negb
jp
cmc
inc
and
mov
sub
or
jmp
or
lret
xchg
push
stos
push
jns
xchg
adc
incl
lds
aad
rorb
cmpsb
ret
inc
sub
cmpsb
cmp
mov
push
hlt
xchg
xchg
add
lahf
cmp
adc
mov
xchg
sbb
jo
outsb
fldt
pop
fs
dec
das
mov
dec
fwait
or
iret
aas
xor
repz
mov
loop
fmul
arpl
or
es
mov
jge
inc
mov
mov
cmpsb
into
cwtl
add
mov
or
cmp
sbb
sub
push
pop
and
out
jne
pop
push
sti
dec
shl
xor
push
imul
inc
call
out
add
pop
push
adc
sub
sti
xchg
js
je
rcrb
mov
inc
pop
pop
imul
cs
jmp
pop
cld
fs
push
lret
add
adc
mov
repz
jmp
pop
adc
fldenv
cmp
jle
xchg
leave
shr
xor
aaa
mov
jns
aaa
mov
sub
jmp
pop
mov
subb
dec
sti
dec
adc
int
subl
movsl
lods
ret
jg
rcrl
jp
add
std
rcll
jl
into
push
outsb
sub
jae
mov
rclb
mov
mov
or
dec
int3
mov
sbb
aas
xchg
imul
or
or
cmp
test
imul
jmp
das
push
lods
adc
jecxz
mov
dec
mov
iret
inc
lds
xor
in
cwtl
jg
xchg
lods
popf
mov
int3
sbb
aaa
push
push
test
clc
sub
sub
sbb
sbb
jo
xchg
rolb
mov
jb
out
jmp
xchg
insl
push
ss
push
push
jbe
add
xor
xchg
sbb
pop
mov
mov
add
and
cmc
test
sub
popf
scas
je
ficomps
push
fildll
xchg
adc
adcb
sarb
cmp
rolb
popa
outsb
mov
sub
jae
scas
cwtl
decb
xchg
addr16
rcll
movsb
xchg
sbb
test
sub
inc
pop
xchg
sbb
repz
aas
cwtl
iret
cld
add
pusha
jns
mov
fwait
ja
pop
adc
loop
adc
dec
cwtl
dec
or
cwtl
fld
add
sub
or
lods
add
lods
subl
shll
add
xor
mov
ljmp
stc
push
stc
dec
pop
xlat
mov
mov
ljmp
aaa
xchg
push
lcall
mov
aad
imul
inc
orb
jne
add
and
push
popf
fistpll
or
js
shll
fdivp
movsl
jg
shlb
mov
mov
xchg
pop
jne
dec
jp
shl
pop
shl
orl
sub
aas
cmpl
hlt
shll
lock
out
jge
adc
subb
mov
xchg
pop
mov
cmp
jmp
pop
push
cmc
lret
dec
jp
movsb
int
adc
repnz
jge
iret
sbb
movsb
out
cmp
dec
pop
jmp
ljmp
jg
nop
cs
inc
mov
sti
fcmovb
call
ficomps
push
mov
xor
lods
xor
xor
dec
stos
and
hlt
add
jns
jbe
dec
in
dec
sub
lods
shr
sub
push
outsb
cmp
lret
pop
sahf
add
cltd
sbb
in
icebp
adc
pop
cltd
out
mov
mov
mov
adc
arpl
cmp
push
xor
and
adc
mov
scas
iret
push
je
push
jp
inc
push
inc
lea
hlt
fs
aaa
inc
pop
arpl
incb
data16
sbb
jo
rclb
add
std
clc
neg
sbb
rcrb
and
fmul
inc
dec
mov
aad
xchg
add
pop
lds
out
sub
adc
popf
cmp
pop
pop
sti
add
jo
pop
aas
inc
push
dec
test
sahf
adc
je
ljmp
jmp
lock
jnp
jmp
cmp
fisubs
mov
out
push
mov
mov
push
xchg
das
jmp
cmpsl
dec
cmp
xor
jae
mov
mov
jg
outsl
testb
push
push
mov
sbb
addr16
add
test
inc
jle
push
xor
pop
aaa
jo
orb
pushf
hlt
fcoms
divl
inc
sbb
or
outsb
jge,pn
mov
or
mov
fs
popa
call
xor
mov
jns
pop
xlat
or
push
cs
jge
lret
jle
and
clc
jmp
mov
jmp
cli
testb
lret
jns
push
fadds
cmp
add
les
scas
daa
fcomp
test
jp
daa
lcall
daa
adc
xlat
test
es
test
or
lds
stos
pop
and
dec
mov
cmc
cmp
std
pop
cs
xor
lret
mov
or
sub
mov
hlt
cli
dec
cld
sti
shlb
cmc
daa
es
es
addr16
fs
jns
pop
andb
fsts
nop
mov
lret
cmp
ljmp
stc
roll
pop
jle
sarl
jne
mov
cmc
and
xchg
in
cmpsb
shl
lods
mov
pusha
imul
or
imul
jg
jns
jb
cs
fldt
sbb
mov
mov
jmp
mov
rcrl
push
roll
ja
gs
mov
push
lret
pop
fisubrs
ds
sub
stos
out
sub
ret
mov
pop
push
mov
in
dec
inc
jecxz
in
xchg
mov
stos
mov
pop
inc
dec
out
xchg
mov
xadd
js
dec
jbe
cld
inc
cmp
xor
dec
sti
cmp
push
add
push
mov
dec
add
out
imul
fxam
popf
pop
inc
or
lret
jmp
inc
aam
pop
push
lea
xor
mov
push
and
pusha
or
insb
lcall
push
mov
pop
xchg
push
cwtl
subl
stos
inc
push
mov
scas
sahf
ret
sub
int3
cmp
pop
lock
xchg
mov
jbe
lcall
and
jbe
cs
ja
push
loop
push
mov
sub
mov
xor
xor
cmpsl
nop
arpl
imulb
mov
je
xor
and
xlat
cli
pushf
fstl
mov
test
stos
add
std
sub
mov
mov
push
xchg
pop
repnz
lahf
push
jbe
jl
sub
popa
adc
cli
mov
shrb
xchg
nop
rorb
dec
jb
test
add
cmp
ret
icebp
lret
cmp
adc
addr16
rclb
jl
xchg
or
fistpl
xchg
push
mov
popf
or
or
or
inc
sbbb
jp
inc
ljmp
pop
adc
inc
mov
sbb
cmpb
mov
cmp
out
add
or
loopne
dec
push
aas
addb
test
popa
sti
rcll
push
loop
push
xor
gs
stos
psubd
jb
jmp
insb
push
mov
xchg
push
push
mov
icebp
rol
xchg
clc
or
fisubrs
jae
repz
call
rcrl
ja
fiaddl
out
movsb
out
mov
ljmp
and
repz
enter
sub
lock
movsb
or
push
jmp
inc
mov
dec
addb
out
jmp
pop
adc
sub
negl
or
mov
pop
pop
jb
hlt
push
adcl
sbb
push
xor
push
mov
mov
and
movsl
les
imul
xchg
std
cld
std
mov
adc
adc
cs
shll
sbb
or
test
adc
jmp
leave
add
call
mov
jl
xchg
adc
sub
pop
cli
stos
rcl
xor
cmc
mov
test
xchg
lahf
pop
sub
cmc
fstpl
or
rcll
mov
adc
dec
push
test
dec
in
int3
jb
outsb
cmp
push
les
or
lret
xor
add
rorb
jmp
or
insl
xor
into
lcall
loope
fimull
mov
sub
pop
sub
lods
enter
cli
cld
mov
popfw
lahf
push
arpl
mov
stos
lret
push
imul
push
ljmp
add
mov
adc
mov
mov
xchg
push
in
or
or
inc
lock
sbb
mov
pop
mov
inc
inc
jae
xchg
and
xor
ds
imul
rcrl
or
or
xchg
adc
pop
push
mov
inc
movsb
ret
insl
cld
es
push
es
add
xor
sub
rorl
push
cmp
dec
orb
mov
xor
out
enter
push
call
jmp
pop
mov
movsb
xor
and
cld
mov
mov
popf
cmpsl
into
lods
adc
insb
xchg
pop
aad
fldt
iret
fadds
cwtl
rorb
ja
testw
or
sahf
push
mov
pop
pop
movsb
popf
sub
xorl
lcall
subb
mov
pop
or
xchg
pop
ret
lds
jo
jl
lret
loopne
out
insl
bound
inc
popf
gs
addr16
js
enter
pop
dec
cmp
fpatan
xor
loope
cld
gs
repnz
cmp
ljmp
or
hlt
jne
clc
scas
inc
and
mov
mov
jl
dec
rcrl
or
repz
loop
aam
dec
mov
cld
dec
push
pop
sub
mov
fdivl
sarl
repnz
inc
int
or
mov
je
and
fimuls
xchg
jge
pop
add
inc
ja
andl
aam
out
or
cmp
in
nop
push
sbb
fstpl
popa
adc
jl
es
shlb
call
and
mov
arpl
stc
sbb
adcl
iret
inc
clc
cmp
loop
les
shl
or
xlat
jne
int
mov
ja
and
insl
lcall
dec
push
int
mov
sbb
iret
xchg
lods
imul
dec
cmpsl
popa
in
push
ret
vsqrtpd
adc
in
pop
test
lret
arpl
ror
lods
ja
ret
repnz
in
xor
mov
sbb
cmpsl
fildl
lods
mov
outsl
adc
frstor
add
pop
loopne
pop
int
aam
push
fistps
rorl
mov
or
sub
leave
and
icebp
into
idivb
sub
or
fsubp
std
lds
testb
xchg
mov
mov
adc
push
mull
jp
mov
mov
xor
pop
mov
add
push
mov
pop
lahf
mov
aam
jecxz
mov
scas
xchg
lahf
pop
lea
imul
and
roll
daa
bound
or
sbb
mov
jl
cmp
push
or
and
bound
insl
lock
fwait
imul
push
jmp
pop
arpl
push
adc
and
je
test
sub
mov
dec
add
sub
jp
int
in
cmpl
subb
addl
pop
mov
loopne
test
inc
pop
push
xchg
xchg
cmpsl
dec
mov
mov
add
and
enter
dec
in
dec
ljmp
mov
stc
mov
sbb
je
pop
cmc
jae
adc
stc
push
pop
mov
jne
or
inc
lods
aam
fstps
int
pop
rcrb
and
aaa
enter
push
ds
sub
insl
push
dec
inc
test
pusha
mov
adc
mov
sub
push
push
lret
out
add
mov
mov
aad
inc
push
pop
inc
gs
adcb
sahf
popl
popf
xor
push
mov
aaa
rcrb
push
xchg
decb
jae
jmp
mov
stc
mov
loop
adc
rclb
xor
fs
push
fcmovnu
nop
xchg
add
in
jl
jmp
xchg
lock
inc
mov
adc
ret
insb
cltd
sbb
jp
lods
lods
in
jl
cmc
lahf
jl
xchg
es
leave
testb
cmp
dec
mov
mov
push
loope
pop
test
call
sub
sbb
xor
and
nop
dec
mov
and
sti
add
inc
and
pop
fs
cwtl
int3
ljmp
arpl
lahf
loope
xor
fwait
ret
mov
pop
mov
inc
xor
jp
decb
xor
mov
dec
jnp
out
jno
bound
push
adc
fcoml
xor
ds
xchg
jo
mov
pop
xchg
jmp
pop
sbb
shlb
and
mov
repz
adc
rolb
cld
scas
mov
adcl
push
es
jbe
mov
lea
xchg
int3
mov
jle
or
fidivs
daa
fs
mov
cwtl
and
outsb
aas
test
xchg
inc
pop
jl
fwait
add
push
jno
incb
sahf
sahf
push
mov
push
mov
inc
cltd
cmp
sub
mov
xlat
mov
xlat
lods
es
jo
ficoml
dec
pop
sub
fucomp
mov
movsl
int
fs
push
xor
stos
add
popa
stos
popf
mov
add
sbb
insl
ret
mov
ja
enter
sbb
ljmp
lcall
mov
movntps
cmpsb
add
sbb
mov
sbb
adc
lds
mov
mov
mov
popf
adc
add
leave
clc
adc
pushf
sbb
adc
ss
inc
enter
xlat
mov
mov
fsubrp
xchg
mov
outsl
ror
insl
inc
mov
or
add
lds
push
js
bound
jmp
mov
pop
sahf
pop
mov
movsb
loop
push
add
cmpsb
jne
rorb
ror
xchg
mov
push
xchg
and
outsb
fisubl
mov
xor
js
lock
addr16
adc
xchg
jg
bound
and
lcall
push
aaa
cmp
push
inc
or
sbbb
in
aaa
and
mov
cld
cs
xor
sbb
jns
aas
sub
inc
insl
pop
loopne
aaa
adcl
cmp
jae
int
sbb
sub
adcb
xor
imul
sbb
inc
adc
mov
push
enter
test
notb
pop
sbb
aam
daa
pop
or
xor
xor
cmp
dec
popa
sub
pop
pop
out
cmp
inc
sbb
xor
push
xor
jmp
and
xchg
inc
ss
add
push
mov
icebp
cmp
sahf
das
lods
push
mov
rolb
xchg
out
outsb
push
pop
testl
push
cmovg
fld1
push
icebp
mov
setb
mov
pop
cmpb
fnsave
mov
ja
and
mov
mov
mov
mov
mov
pop
cmp
test
stos
cmp
push
fdivrs
inc
repnz
push
stc
cmp
enter
and
jp
lea
add
fnsave
cwtl
call
sbb
arpl
fs
iret
shlb
pop
cmp
mov
push
in
daa
fisttps
jle
cmp
jl
push
outsl
js
inc
adc
pop
ds
push
insb
repnz
addr16
lods
xchg
jo
sbb
fcomps
lea
mov
jbe
shlb
sub
pop
shlb
je
icebp
pop
ss
not
pop
inc
sbb
dec
xchg
mov
aaa
aam
or
or
inc
das
bound
sarl
jecxz
stc
cmp
mov
stos
sbb
in
inc
adc
xor
xor
fmul
dec
iret
push
xor
out
test
testl
xor
imul
push
dec
stos
xor
mov
pop
xchg
popa
fisubs
and
fdivrl
mov
call
jecxz
mov
push
sub
imul
pop
fabs
sbb
pushf
sarl
and
mov
sbb
in
pop
inc
jb
fdivrp
push
sar
sbb
pop
or
or
aas
or
jle
daa
sub
add
dec
mov
cmp
adc
stc
hlt
ror
adc
pushf
pop
cmp
out
cvttps2pi
mov
cmp
pop
pop
sbb
jo
jle
xchg
daa
inc
test
pop
pop
cwtl
lret
add
rcr
in
and
pop
call
mov
adc
lea
mov
into
inc
adc
fdivl
lock
adc
sub
push
repnz
adcb
iret
aam
scas
pop
add
add
cwtl
or
in
arpl
test
and
test
loopne
sub
pop
test
in
or
add
jno
ds
inc
cwtl
les
sbb
test
pop
scas
stc
sub
mov
and
popl
cmpsl
lahf
xor
push
sub
mov
fsubs
mov
and
jo
ret
mov
sahf
ljmp
sub
cli
adcb
sahf
pop
imul
pop
xor
xchg
sti
add
push
add
inc
push
aad
and
lods
sahf
in
sbb
cmc
mov
cmp
mov
or
or
imul
lahf
sbb
mov
mov
arpl
jb
leave
push
aas
in
nop
pusha
leave
push
or
je
icebp
cmp
cltd
pop
mov
inc
cld
dec
pop
notl
jmp
push
jb
push
dec
sbbl
cmp
rclb
or
out
dec
lcall
je
orl
fidivl
xchg
ljmp
ja
mov
out
or
push
and
lret
clc
mov
cwtl
loope
pop
stos
mov
cmpsl
dec
add
dec
in
pop
incl
push
mov
jbe
icebp
imul
xchg
addr16
mov
pop
jmp
inc
stos
inc
push
fnstcw
push
insl
sbb
mov
outsb
jmp
test
lret
cmpsb
pop
xor
pusha
dec
add
test
andl
mov
mov
cs
dec
push
cld
idivb
sub
out
mov
adcl
scas
in
sub
lods
mov
repnz
push
pushf
loope
stc
or
xor
sub
lock
push
mov
and
ss
fsubr
cmpsl
push
daa
mov
loop
loop
test
lret
xor
lea
pop
lds
xchg
test
outsl
fcoms
sub
int
mov
push
and
pop
jno
fcmovnb
and
insb
sbb
clc
insl
jo
cwtl
push
pop
or
jae
ret
or
mov
xchg
xchg
dec
xchg
stos
cwtl
cmp
push
fsubrl
jge
and
call
dec
inc
insb
push
mov
and
rcll
bound
xchg
sub
cmp
dec
sub
lods
ljmp
cld
dec
dec
xchg
mov
mov
inc
stos
mov
ljmp
fwait
icebp
out
flds
call
cmp
cmpsb
outsb
xor
jle
shll
imul
lret
lods
push
dec
xor
adc
stc
jns
aaa
fs
xchg
jl
add
adc
jb
dec
leave
sub
mov
in
mov
mov
int3
push
dec
xchg
data16
fmull
lock
mov
lret
jecxz
or
and
enter
push
pushf
pop
push
cld
pop
adc
icebp
cmp
shlb
scas
or
les
jge
or
orl
scas
vandnps
out
adc
xor
jae
repz
jbe
mov
pop
scas
in
nop
push
jb
pop
shrl
adc
popa
push
mov
inc
outsl
push
in
sbb
sub
cltd
xor
dec
jnp
push
test
ljmp
pop
test
xchg
mov
mov
push
jl
fwait
pop
xor
xor
das
sbb
fsubrs
lods
cs
push
lock
cmp
inc
cmp
movsl
push
push
jbe
lret
mov
lcall
leave
pop
inc
mov
pop
dec
mov
cli
std
in
jae
ficompl
scas
fwait
mov
aam
pop
subl
in
add
cmp
lcall
mov
jmp
ficoml
lds
lcall
fstps
lret
mov
and
test
nop
loope
and
shlb
shrl
push
fucom
das
inc
add
fs
or
push
fidivl
dec
mov
movsb
into
mov
loopne
test
inc
xor
aas
and
ret
lea
setle
aam
pop
shlb
jno
xchg
je
loopne
es
mov
cmp
mov
and
xchg
mov
jo
push
dec
jg
jp
gs
or
repz
mov
sbbb
pop
mov
mov
xchg
int3
dec
leave
popa
test
adc
sub
xchg
aam
repz
nop
fldenv
xor
and
and
sbb
cwtl
xchg
int
sbb
aad
imul
pop
push
pop
out
xor
sub
pop
jno
out
push
jle
ss
mov
jne
mov
push
dec
and
popa
ss
mov
iret
rcr
or
mov
scas
scas
cbtw
xchg
imul
pusha
sub
stos
or
subb
pop
fwait
scas
test
arpl
pop
sbb
adc
add
orb
test
repz
imul
aas
inc
push
jno
or
xchg
inc
or
jle
hlt
shrl
pop
inc
decl
scas
in
popa
gs
lahf
les
data16
adc
adc
stc
adc
mov
jno
push
icebp
fwait
sub
sahf
mov
cmp
cltd
inc
addr16
add
adc
test
cmpb
sub
sub
mov
pop
sub
inc
lods
and
daa
pushf
xchg
xor
dec
stos
shld
mov
or
int
ljmp
xchg
jnp
jne
mov
dec
data16
sub
clc
out
mov
push
cld
sub
dec
add
fadds
aam
mov
mov
push
pop
cmp
pop
mov
dec
or
mov
test
out
lea
std
cmp
sub
lods
adc
ljmp
fsubrl
popa
out
jae
adc
jp
leave
pop
fcmovb
mov
je
popa
fs
scas
xchg
jmp
xchg
or
mov
pop
or
xor
test
mov
or
in
fcmovbe
lret
push
cs
and
popa
push
pushf
pusha
call
mov
cmpsl
loopne
inc
testb
fmull
mov
repz
xor
scas
pop
and
out
xchg
ret
aas
inc
push
lods
fs
shrl
pop
xchg
push
mov
dec
mov
int
jbe
pop
inc
lock
mov
pop
test
mov
add
jno
jnp
sbb
js
aad
adc
test
mov
or
sub
mov
add
mov
dec
xchg
nop
ljmp
mov
sbb
repz
imul
sbb
sahf
das
cmp
call
add
add
enter
std
frstor
rcrb
xchg
sbb
repz
sti
or
cmp
inc
and
inc
sub
int3
pop
add
jge
sbb
mov
loopne
inc
insl
jg
xchg
lcall
push
pop
loopne
add
mov
lds
adc
add
inc
pushf
outsb
sub
loope
stos
shl
mov
pop
push
push
loope
rorl
loope
lods
into
and
cld
dec
shr
jge
cmpsb
jl
pop
xlat
cwtl
lods
sbb
push
pop
pop
push
jo
ljmp
mov
sub
jbe
mov
add
out
inc
cmp
lret
loopne
lea
push
fcoms
test
lock
push
jbe
mov
mov
clc
add
movsb
jns
and
xchg
inc
jbe
ret
and
scas
and
push
mov
or
addr16
pop
sub
aad
repnz
aad
xchg
inc
pop
pop
pop
pop
push
inc
ljmp
adc
dec
push
jle
ljmp
xchg
hlt
cmpsb
imul
aaa
or
test
pop
imul
loopne
push
pop
imul
adc
mov
adc
fmulp
mov
sbb
mov
jle,pt
stos
mov
rcrb
dec
cs
mov
das
negl
addr16
sbb
aad
in
mov
nop
adc
cltd
ret
out
sti
shll
mov
dec
sub
fiaddl
push
aad
cmpl
pop
or
je
es
mov
imul
rorl
mov
and
sbb
mov
adc
aas
and
dec
outsl
daa
ljmp
bound
dec
cmp
test
dec
rcr
jmp
lods
mov
jge
lock
lds
pop
fiaddl
in
and
xchg
jge
std
dec
cld
or
cli
pusha
dec
mov
dec
mov
mov
and
mov
cli
loop
aam
in
int
ja
pushf
jecxz
sahf
ret
arpl
push
inc
or
xor
push
mov
loopne
or
cmp
lods
loope
dec
hlt
mov
and
add
stc
dec
mov
push
out
sbb
jg
test
in
call
jg
mov
cmpsb
adc
push
mov
mov
cld
mov
push
sub
shl
mov
cld
orb
and
dec
lcall
cmp
sarl
jmp
dec
push
shll
imul
lahf
es
inc
mov
mov
jle
mov
inc
pop
ss
mov
bound
stos
dec
sbb
pop
adc
sub
mov
mov
fmull
xchg
xlat
nop
add
imul
sbb
xchg
or
shlb
xchg
js
nop
and
ret
pop
sahf
xor
aam
mov
lahf
jbe
ficompl
sbb
sti
ret
movsb
fs
jae
cmpsl
nop
orl
fildll
dec
movsb
shl
enter
mov
sub
adc
mov
cmc
repnz
add
xchg
jle
test
or
and
out
into
xlat
lahf
test
or
mov
fistl
adc
call
xlat
fcoms
xchg
shlb
pop
mov
add
mov
lods
pop
gs
movsb
mov
clc
enter
dec
mov
fs
ss
add
pop
xchg
mov
lret
mov
rcr
inc
je
jl
enter
outsb
inc
scas
adc
lahf
subl
and
arpl
inc
mov
jg
sub
retw
jno
push
aad
out
sub
dec
push
lock
inc
xor
cltd
int
jbe
mov
mov
sub
test
and
sbb
rol
mov
sbb
push
ss
mov
push
mov
iret
rcrl
push
out
popf
mov
scas
push
stos
sub
addr16
mov
fadd
pop
out
andl
xchg
iret
inc
xor
xlat
push
in
pop
orb
shr
ret
jb
loopne
jb
icebp
fisubrs
in
mov
lds
inc
outsl
mov
fwait
in
ss
pop
bound
push
pop
pop
and
cmc
std
and
xchg
popa
xor
jo
push
leave
xor
xchg
jae
in
or
inc
dec
cmp
inc
mov
mov
das
outsb
je
sub
pop
mulb
pop
jmp
xor
and
nop
mov
dec
mov
or
pop
dec
icebp
leave
leave
xchg
mov
mov
or
xor
lea
scas
inc
inc
xor
mov
mov
mov
inc
je
xchg
test
push
stc
fdivr
scas
dec
iret
lods
sarl
cmpsl
xchg
sbb
cmc
inc
arpl
xchg
fnsave
xchg
repnz
out
aad
inc
js
jmp
pop
ds
jle
je
mov
ficompl
jo,pt
mov
and
xchg
sub
mov
add
jl
xlat
or
inc
in
jbe
out
icebp
hlt
and
out
jb
ret
push
ret
pushf
lock
dec
jno
testl
cmp
jl
subb
daa
xor
cmc
push
lea
movsl
push
or
push
or
es
push
sbb
jae
mov
sahf
test
cld
cmpsb
sarb
pop
aaa
enter
xor
inc
push
fdivrp
and
inc
mov
push
xor
sbb
roll
popf
mov
or
dec
push
jge
mov
dec
push
mov
jmp
ret
xor
insb
outsb
dec
repnz
jecxz
xor
lock
or
push
cwtl
pop
cmp
xor
sti
andl
repnz
scas
sub
inc
cmp
shlb
dec
or
and
pop
push
lds
icebp
imul
mov
add
leave
sub
pop
cmp
xchg
icebp
int
sar
add
repnz
int
pop
lods
add
xchg
and
lcall
stos
out
pop
cmpsl
les
mov
pop
incb
jb
cld
ret
pop
mov
cmp
fdivr
adc
lea
repnz
sub
cmp
in
mov
imull
add
std
icebp
das
and
mov
shrl
and
mov
sub
pop
data16
sahf
mov
and
pop
xchg
xor
mov
or
repz
lea
das
dec
lcall
fs
fsubl
push
sub
push
das
mov
pop
or
arpl
pop
orl
mov
push
xchg
in
sbb
hlt
and
xchg
xchg
pop
adc
add
cmp
loop
frstor
push
lcall
mov
cli
or
cmp
pop
stos
and
xor
cmp
aad
pusha
mov
mov
xorl
arpl
sbb
shll
mov
push
inc
adc
inc
jl
aam
das
fidivrl
sub
insl
or
cld
sbb
inc
cli
jmp
fcmovb
insb
push
leave
repz
jae
stc
sbbb
fxch
adcl
hlt
mov
add
jbe
pop
ljmp
clc
lock
xor
add
cmpsb
les
sub
or
lret
adc
div
jl
jecxz
sub
rcrw
clc
data16
les
daa
pop
jo
das
adc
fistpl
loope
dec
std
sub
dec
xchg
subb
nop
daa
pop
add
push
hlt
cmp
pop
outsl
inc
inc
sbb
mov
das
fsub
imul
push
popa
stos
cmpsb
sbb
ljmp
testl
dec
dec
cmc
sarl
imul
xchg
nop
xor
xchg
cmc
aaa
add
pushf
das
hlt
fdiv
rol
cld
imul
xchg
lret
mov
out
arpl
repz
cmpsb
mov
es
pushf
push
js
cld
pop
repnz
mov
shlb
lds
je
loop
out
iret
mov
jmp
and
pop
bound
add
fs
in
outsb
or
push
jb
in
push
pop
ret
roll
cmp
ret
dec
insl
mov
in
imul
cmc
sbb
xlat
hlt
std
jecxz
lea
scas
jo
das
popa
xor
loope
out
in
in
sbb
test
sub
dec
shll
repnz
dec
dec
cmp
adc
or
jp
push
fcmovnbe
sbb
push
xchg
mov
sti
dec
mov
data16
mov
scas
fnclex
mov
in
dec
leave
sbb
fimull
test
incb
mov
inc
push
push
cmpsb
lds
mov
sarl
add
hlt
je
mul
in
sub
cmpl
test
test
ret
adc
lcall
and
jl
mov
jae
fidivl
int3
jl
dec
fstps
dec
sbb
loopne
inc
movsb
xchg
add
push
outsb
xor
xchg
and
repz
xchg
pop
and
shl
xchg
xor
cltd
leave
add
mov
movsb
lret
fidivrs
arpl
xor
sbb
jns
jno
sub
lahf
fsubrl
jb
mov
inc
test
arpl
xchg
mov
jns
jnp
adc
adc
push
ljmp
xlat
jb
cmp
cmc
iret
inc
sub
nop
in
push
inc
iret
and
test
pushf
jp
adc
ss
xchg
jle
call
dec
cmpsb
pop
aam
cli
loope
mov
mov
fistpll
out
movsb
in
adc
adc
add
mov
popf
add
mov
xor
add
clc
scas
and
sub
jle
adcb
pop
testl
in
mov
aas
jbe
jno
imul
into
mov
mov
mov
mov
ja
mov
xchg
xchg
add
xor
sub
pushl
add
push
xchg
cmp
sbb
pusha
leave
in
or
nop
addr16
ficoms
jge
pusha
mov
sbb
cmp
pop
jne
cmc
ljmp
das
idivl
ficoms
loop
mov
negb
sti
pop
xchg
dec
jne
ret
dec
adc
mov
jns
fisttps
push
mov
loop
inc
and
movsb
dec
out
xor
loope
dec
rcrb
es
imul
add
insb
insl
adc
jp
jl
xchg
mov
mov
ret
scas
lret
jne
rcrl
pop
or
mov
popa
mov
push
int3
dec
or
insb
or
incb
js
inc
sbb
dec
outsb
sbb
fildl
mov
push
jb
mov
dec
lahf
push
leave
sahf
sbb
pop
into
mov
imul
sbb
xchg
ret
outsb
jno,pt
sub
and
pop
test
cltd
test
sub
mov
and
adc
fnstsw
mov
xlat
jne
and
dec
jnp
push
outsl
fisubrs
or
dec
andb
push
push
movups
sti
out
fwait
out
and
add
mov
cld
or
cltd
inc
or
xor
mov
dec
pop
je
cwtl
and
test
jb
popf
cltd
das
and
and
pop
scas
lds
add
ss
and
addr16
xor
cwtl
adcb
adc
sbb
adc
push
cwtl
bound
dec
adc
test
cmc
subl
and
sbb
and
pop
stos
mov
je
jg
pop
jmp
jge
sbb
fldcw
cltd
add
pop
mov
rcrb
enter
mov
ret
push
inc
jne
mov
adc
xlat
lods
fidivrl
imul
pop
push
or
test
xor
sar
fidivrl
das
sbb
xor
int
mov
lret
xchg
dec
xchg
xchg
and
or
xchg
icebp
inc
pushf
fistpll
jbe
rcrb
out
pop
mov
push
cmp
shrl
or
mov
xchg
or
mov
in
and
xlat
cmc
dec
mov
ret
dec
daa
push
mov
xchg
mov
stos
iret
fsub
ret
dec
test
jnp
mov
leave
dec
xor
xchg
xchg
in
mov
cmp
dec
loope
ja
notl
cmp
movsl
arpl
lods
mov
ss
xlat
cmc
enter
sub
fbstp
paddd
or
push
xor
jbe
push
push
scas
iret
fwait
imull
inc
jle
nop
movsl
stos
xor
add
aas
rcll
mov
xlat
push
cmpsl
scas
popa
mov
arpl
adc
inc
jb
mov
sbbl
in
test
mov
cmp
fs
add
push
sbb
and
xchg
das
jmp
shufps
mov
or
fs
dec
fcompl
addr16
pop
test
mul
fidivrs
sahf
enter
inc
or
dec
xchg
cmp
adc
inc
fsubrl
jecxz
xchg
idivl
sub
call
arpl
enter
pop
push
dec
repz
xor
ret
sub
pop
in
fisttpll
add
mul
mov
imul
sti
inc
xchg
sar
cmp
mov
sub
sarl
imul
test
xchg
add
dec
mov
and
or
mov
stc
xchg
stos
xchg
push
movsl
lcall
loope
sub
sub
xchg
adc
leave
loopne
daa
pop
daa
fcmovnb
mov
push
xchg
adc
movzbl
in
xlat
outsb
jl
jl
lret
push
jns
stos
stc
orl
jbe
out
fdivr
push
sarb
lret
pop
mov
jg
or
jnp
inc
pusha
jb
cmpsl
decb
and
adcb
imul
push
mov
push
lock
sbb
or
test
fiadds
inc
xor
call
in
ret
mov
mov
mov
pusha
sbb
jp
bound
je
scas
sarl
pop
xchg
push
dec
dec
shl
stc
mov
js
das
sahf
sub
dec
cwtl
or
sub
or
fldt
dec
and
cs
cltd
ret
sti
sbb
je
dec
imul
adc
add
pop
and
xor
clc
insl
mov
mulb
push
mov
out
cld
push
xchg
jecxz
in
xor
enter
andl
enter
xor
test
rorb
mov
scas
adc
sbbl
jge
inc
imul
mov
and
mov
andl
jne
pop
cmp
mov
or
adc
jbe
inc
jg
or
pop
jg
cmpl
fmuls
push
push
cmpsb
aas
add
pushf
adc
sub
cmp
sub
stc
mov
cs
in
cmc
and
lds
mov
jnp
into
int3
sahf
insb
add
dec
jns
push
push
inc
dec
mov
add
ss
scas
inc
or
leave
lods
fldl
lods
pop
loop
jmp
into
add
push
mov
cltd
test
nop
test
icebp
leave
push
adc
test
imul
sub
push
xor
orb
dec
test
not
cmc
pop
add
push
sbb
in
mov
clc
stos
mov
daa
mov
mov
cli
sbb
out
jns
adc
mov
imul
lock
into
or
mov
xorb
popa
scas
neg
std
inc
or
insl
pop
xor
mov
lods
pusha
cmp
int
faddp
mov
push
cmpsl
jg
and
push
in
hlt
jle
inc
lcall
or
cli
pop
push
cmpsb
xchg
push
inc
cmp
inc
sbb
mov
insl
xlat
inc
rcll
pop
roll
adc
xchg
xor
icebp
inc
iret
dec
out
repz
add
aad
cmp
mov
mov
int
mov
sbb
shl
cmp
push
lds
add
sarl
sbbb
xor
sub
fwait
push
xor
adc
aad
mov
dec
xor
insb
dec
icebp
mov
mov
sbb
sub
popf
push
pop
into
clc
outsb
push
jns
add
add
pusha
push
mov
pushf
push
push
sub
imul
dec
push
lea
popf
cmc
push
hlt
fcomi
data16
ret
and
xchg
push
lcall
mov
xchg
cmpsb
add
fnsave
cli
cmpsl
push
pop
xorl
roll
into
xchg
pop
mov
push
test
in
xor
push
jb
and
pop
add
stos
stos
shlb
push
inc
dec
in
pushf
mov
jmp
dec
shlb
jmpw
push
xchg
sbb
fnstcw
daa
outsl
fdiv
fbstp
add
fstl
roll
sahf
data16
mov
outsb
xor
mov
enter
jno
xor
out
pop
je
dec
sahf
jp
sub
add
xchg
es
dec
jnp
xchg
mov
push
dec
rcr
mov
xchg
addr16
movsl
and
jmp
dec
bnd
fs
xor
loop
sbbb
fiaddl
push
mov
and
rorb
or
mov
push
cmp
mov
adc
shll
jp
cli
lahf
xchg
dec
mov
mov
mov
inc
daa
movsb
adc
roll
and
lds
pop
fstpt
xchg
mov
pop
mov
mov
pop
ljmp
test
push
cld
xchg
fmull
jle
pop
mov
jnp
mov
dec
xor
cmp
sub
mov
mov
xor
mov
or
data16
mov
adc
fmuls
enter
xor
out
aas
push
loopne
xchg
xchg
jmp
push
bnd
jecxz
into
pop
xchg
dec
jbe
jnp
xchg
scas
daa
int
out
hlt
jbe
iret
adc
push
rol
fdivrl
lcall
sub
movsb
pop
or
out
mov
cwtl
push
jecxz
mov
push
les
test
adc
xor
scas
jmp
adc
subl
clc
bound
pop
mov
mov
jecxz
add
or
xchg
aas
movsl
xor
test
xor
icebp
shll
lds
ret
stc
int
lods
out
psubd
mov
ret
mov
and
lods
mov
mov
push
push
xchg
mov
sbb
fsubr
test
cmc
add
in
or
dec
push
subl
ljmp
push
daa
mov
dec
ja
hlt
loop
sbb
inc
xor
jnp
fsubr
mov
into
jae
dec
push
mov
cwtl
fcoml
ja
add
mov
mov
lahf
scas
insl
fwait
inc
cmc
insl
jmp
int
hlt
fcoms
enter
and
addr16
push
sbb
jmp
sub
pop
test
cmp
pop
sahf
xor
and
pushf
cwtl
jg
xchg
or
adc
add
lret
sub
insl
dec
out
dec
lret
xchg
loopne
and
lret
cmp
sahf
pop
xchg
or
cli
int3
push
add
dec
lret
clc
adc
repnz
lods
fcmovu
pop
pushf
int
xlat
ja
loopne
ret
fnstcw
sbb
cmp
mov
ret
cld
subl
std
push
in
mov
dec
aas
cwtl
ret
sti
test
icebp
std
jno
lret
out
bnd
repz
push
call
addb
add
aad
dec
fnstenv
cwtl
das
inc
dec
mov
dec
fistl
out
mov
sub
adc
data16
xlat
or
mov
and
rolb
fstpl
into
pop
and
jecxz
jb
or
inc
mov
xchg
popa
cltd
test
xchg
xlat
in
push
cwtl
loop
pop
lret
jns
int
and
imulb
fldt
jecxz
push
in
iret
iret
xchg
les
ds
roll
inc
mov
enter
ljmp
scas
jmp
ficoml
fwait
mov
hlt
and
sub
push
cld
pusha
sbb
adc
push
imul
push
add
mov
arpl
fnstsw
jg
popl
or
bound
pop
cmp
cld
movsb
xor
push
lret
test
lods
pop
je
loope
or
mov
or
xchg
xchg
test
lcall
xlat
lea
inc
rcrb
pop
pop
ret
fwait
hlt
sub
pushf
stos
out
lret
mov
cwtl
xlat
in
lahf
pusha
xor
shl
call
pop
data16
and
pop
sbb
js
jbe
lret
mov
popa
xor
inc
push
aaa
ret
jge
rcll
cmp
aad
pop
enter
cmp
das
inc
add
xor
sbb
inc
and
loope
sarl
outsl
xlat
sub
int
imul
push
aas
cltd
gs
push
ja
cs
leave
shlb
cmp
fstpl
or
xchg
imul
inc
test
jo
jecxz
shrb
xor
cmp
rcrl
xor
sub
outsb
or
pop
or
pop
cmp
add
addl
idivb
add
inc
mov
icebp
sub
decl
push
push
mov
les
int
stos
in
loop
or
dec
push
inc
or
repnz
push
cli
ret
push
sub
or
lds
cmc
adc
rcll
aas
cld
std
inc
movsl
pop
mov
loopne
xchg
mov
add
sub
mov
or
int3
adc
in
outsb
mov
sbb
xchg
push
jecxz
ret
jo
mov
rcll
ss
pop
fdivs
sub
or
cmp
dec
dec
decb
inc
push
jae
fldl
pop
gs
adc
sbb
and
ret
sbb
xchg
xchg
push
lcall
mov
sub
js
jno
inc
orl
push
in
pop
dec
jmp
add
cmpsb
rol
push
sub
lahf
pop
ds
mov
mov
fsubrl
and
and
and
mov
popf
add
das
in
inc
rcl
inc
dec
fadd
in
cmp
mov
mov
test
aad
xchg
cwtl
insl
mov
pop
iret
inc
gs
push
add
lds
push
mov
jb
cmpsb
mov
pop
aam
mov
test
mov
outsl
lods
pop
jno
mov
push
pop
mov
hlt
mov
int3
sub
loopne
andl
cmpsb
and
sbb
daa
pcmpeqb
js
cmc
data16
push
xor
jle
or
xchg
cwtl
sbb
mov
jnp
sarl
mov
in
fistpll
mov
pushf
jno
xlat
daa
out
fsubs
divb
fisttpl
call
pop
sbb
or
je
imul
sbb
add
pop
dec
ds
mov
shrl
cli
mov
add
jb
sub
push
xor
js
popa
shlb
shll
pop
cmp
test
add
ret
xor
add
popf
cmp
mov
sub
xchg
inc
mov
leave
inc
nop
dec
mov
loop
mov
xchg
gs
xorb
jp
aas
sbb
or
sub
xchg
jl
mov
jbe
or
aaa
test
adc
jmp
and
mov
and
mov
int3
fs
imulb
sbb
hlt
iret
mov
stos
push
and
addr16
outsl
adc
pop
jge
sarl
jmp
fsubrp
in
mov
cmpsb
mov
aas
lods
lods
or
xor
cmpsl
jbe
lods
pop
mov
xor
push
mov
push
into
sbbl
es
js
or
call
sahf
inc
lods
xchg
and
and
roll
cld
daa
fwait
add
mov
loop
push
test
mov
push
cs
pop
scas
stos
push
or
cwtl
mov
sub
inc
aam
insb
or
pop
les
add
and
lock
mov
subb
les
notl
pop
xor
insb
sbb
jg
pop
lds
sub
and
sub
xchg
pushf
dec
aad
ja
enter
jecxz
mov
xor
or
xchg
mov
rcrb
add
jp
adc
or
jne
fs
and
es
in
xchg
mov
cmp
mov
and
arpl
loope
push
mov
and
mov
lahf
rclb
sub
imul
mov
leave
aas
sub
mov
pop
or
jno
adc
jnp
sahf
lea
test
ficomps
pop
mov
in
lret
sahf
movsb
mov
push
out
shll
syscall
ret
cmp
test
lds
icebp
out
mov
inc
fiaddl
hlt
pop
lret
movsb
or
cli
aas
mov
push
lcall
xor
ss
dec
sub
pop
roll
data16
test
cmpsb
je
leave
leave
sti
inc
or
xor
adc
xchg
or
rolb
lods
cmpsb
ror
addr16
in
lods
jo
into
jae
sub
loopne
xchg
xor
fnsave
call
hlt
sub
xorb
add
aas
movsl
jbe
push
les
fwait
sub
inc
fwait
mov
mov
clc
push
std
dec
jne
mov
cs
or
push
popa
shlb
fdiv
jp
xchg
add
cmp
testl
cmp
daa
test
sbb
jnp
xchg
jle
insl
mov
imulb
cld
fs
loopne
cld
stc
stos
outsb
xor
pop
xor
sub
inc
cld
movsl
add
xor
clc
imul
imul
lahf
shll
mov
push
enter
pop
cmp
xchg
add
call
test
xchg
rcll
xchg
es
ss
cld
jg
sub
scas
cld
sbb
cmp
rcrb
adc
jne
fistps
pop
add
inc
jmp
movsb
xor
jecxz
mov
ret
out
std
push
inc
pop
adc
push
xor
sahf
and
fadd
add
lret
push
and
lahf
rcll
enter
insb
inc
cs
js
repz
sub
mov
fmuls
adcb
xor
xor
add
add
in
mov
cld
ret
jmp
ret
cltd
push
adc
imul
popa
xor
repz
ret
push
dec
or
sarb
mov
sbb
mov
push
sub
push
je
mov
roll
int3
xchg
pop
push
jnp
cmp
test
loop
iret
aaa
cwtl
cli
mov
pop
mov
fstl
subw
push
lods
xchg
mov
cmpl
push
pop
mov
popa
and
stos
mov
je
pop
ljmp
shll
mov
iret
pop
or
or
fldenv
bound
cmp
jb
ds
jp
jge
mov
jecxz
cmp
inc
push
xchg
or
hlt
jmp
rcrl
sub
call
jecxz
sub
cs
std
mov
fisubrs
dec
fiadds
xchg
mov
and
je
scas
pusha
scas
ficomps
in
add
add
jle
cmp
lcall
shlb
inc
push
mov
scas
je
or
xor
lods
push
cs
jae
js
insb
scas
lea
cmp
xor
and
adc
jae
movsl
lods
clc
out
cmp
pop
push
or
icebp
inc
ljmp
lock
xor
mov
mov
mov
push
cmp
hlt
jle
pop
inc
loopne
sub
sub
sbb
pop
dec
lret
dec
xlat
inc
push
in
push
xor
jg
rcrl
test
xchg
data16
in
pop
shrl
pop
rcrb
add
ds
add
jl
pop
adc
rol
adc
push
inc
mov
loope
mov
fs
js
sbb
xlat
jl
adc
jbe
xchg
adc
fsqrt
add
cmpsl
push
sbb
outsl
push
ja
mov
jle
sti
movl
xlat
sbb
pop
inc
mov
fcompl
cmp
pusha
ror
mov
popa
adc
and
push
iret
push
mov
pop
adcl
pop
shrl
xchg
pop
sahf
in
das
repnz
int
mov
adc
pop
lods
push
divb
out
xchg
add
push
mov
push
loope
sti
dec
mov
pop
mov
jle
xor
repnz
pushf
inc
sbb
test
ljmp
cltd
adc
cmp
adc
int
xorl
in
jns
and
and
lret
sahf
fwait
push
cmp
lcall
and
fcomi
testl
push
scas
scas
mov
jle
cmp
sbbb
add
subl
shlb
inc
in
mov
dec
ficoml
frstor
movsb
mov
fstpl
xchg
fcmove
inc
mov
add
in
aad
add
jae
out
cmpsb
iret
iret
mov
aas
ja
pop
into
rcrl
shlb
mov
xchg
pop
clc
imul
sbb
sub
sarl
outsb
sahf
push
dec
test
inc
xor
cmpsl
jnp
pop
into
test
enter
mov
push
loope
test
out
inc
shll
pushf
sbb
pop
je
data16
jmp
lods
xchg
jge
mov
iret
addr16
mov
xchg
mov
add
icebp
xor
jbe
mov
mov
ss
mov
fisttps
push
imul
and
mov
outsl
mov
ss
adc
popa
rcr
aam
push
or
sub
test
and
ret
test
push
jg
xchg
ret
mov
or
addr16
inc
sbb
add
cmp
scas
xchg
sar
push
xchg
call
xchg
test
fisubrl
cmp
mov
dec
outsl
inc
push
xchg
fdivp
inc
fmul
ret
lods
divb
sbb
lods
ja
push
add
mulb
jg
dec
gs
cmp
xchg
js
sar
add
mov
xlat
je
push
push
jle
not
mov
clc
jo
pop
out
clc
addr16
cmpl
inc
sub
sbbl
add
stos
or
jnp
and
add
int3
sahf
pop
or
jno
pop
lods
lahf
inc
hlt
movsb
mov
push
idivl
lods
fs
mov
dec
dec
int3
ret
sub
nop
cmp
mov
or
lea
mov
rcrb
xchg
ja
sub
mov
mov
and
fldcw
jno
in
ja
cmp
mov
out
mov
add
nop
fimuls
mov
pop
or
cmp
xorb
lods
xor
xor
shl
loop
mov
dec
sti
jbe
mov
cmp
push
push
inc
jl
dec
ficoml
mov
or
in
out
adc
cmp
push
addl
pop
fwait
les
popf
mov
xchg
loop
daa
adc
jle
push
xchg
cmp
shlb
pop
pop
cmp
mov
mov
cmp
lahf
je
cs
mov
lahf
fidivl
aam
jmp
fwait
pop
mov
into
dec
add
sbb
adc
jl
lds
ss
mov
or
jg
sarl
mov
cwtl
daa
adcl
out
in
bound
dec
je
fisttps
jae
into
fisttpll
test
push
pop
pop
pop
lods
loopne
popa
push
fnstcw
bound
test
or
test
cltd
mov
or
fimull
fisttpll
inc
xor
das
fisttps
call
fiaddl
lods
mov
inc
cmp
jno
lret
mov
or
data16
cld
jnp
test
aas
in
pop
or
in
sub
lods
adc
adc
xor
push
data16
or
xlat
popa
orb
test
mov
flds
bound
sti
nop
into
es
xchg
push
dec
movsl
adc
sub
icebp
add
and
nop
movsb
cmc
outsb
pop
mulb
mov
orl
into
jecxz
sub
aam
pop
fldcw
or
addr16
lods
xchg
fbstp
mov
aas
jg
add
xlat
aaa
sub
mov
xchg
call
mov
scas
rcr
bound
in
mov
and
mov
adc
mov
xor
in
xchg
push
mov
fcmove
rcrl
outsb
scas
push
loop
fcomps
jmp
das
push
cmc
inc
cmp
mov
out
xor
sub
mov
xchg
js
mov
clc
out
and
mov
out
and
adc
pushf
es
out
add
mov
push
cwtl
in
roll
cmc
mov
lods
fstpl
jns
and
jns
jp
fimuls
divb
pop
rorl
das
loop
loope
hlt
in
movsl
iret
shll
fnsave
in
outsl
pushf
repnz
xchg
add
cmp
cltd
cmp
rcrl
adc
sub
js
fstpl
js
mov
jg
idiv
mov
mov
mov
push
dec
in
loopne
cmp
push
jle
dec
in
iret
adc
cmp
adc
dec
inc
pop
dec
and
cli
repnz
mov
sbb
pop
aaa
dec
ret
pop
mov
sbb
xchg
push
fsub
sbb
dec
mov
in
or
add
repz
sub
cmp
xorb
aam
sbb
xor
push
mov
inc
cmp
mov
insl
in
arpl
push
decl
aaa
sbb
lret
mov
add
cmp
rorb
ret
das
repz
cltd
push
inc
fnstenv
sti
les
cli
push
sahf
stc
lods
sti
cmp
fs
enter
or
daa
lea
and
movsb
and
mov
pop
jne
aaa
push
fldl
gs
sbb
push
int3
xchg
fnsave
xchg
rep
sbb
lcall
lahf
leave
movsb
out
jg
div
jg
or
stos
pop
into
fcmovb
sub
rcr
adc
cmpsb
sub
xchg
mov
imul
inc
jb
bnd
pop
scas
scas
out
mov
xchg
arpl
jb
out
xor
dec
cmpsl
es
fxtract
in
bnd
iret
in
mov
icebp
imul
test
or
push
fwait
pop
adc
leave
inc
neg
aam
push
adc
inc
out
fidivrs
mov
push
in
sahf
iret
xor
movb
fistpll
adc
and
popa
enter
cmp
loopne
cmpsl
les
pop
outsb
insl
arpl
in
test
pusha
test
pop
in
mov
mov
pop
jno
adc
jle
sub
out
ja
pop
ja
jo
xor
sti
aaa
cmpsl
clc
push
mov
push
loope
mov
mov
divl
fcmovnbe
push
cs
jmp
leave
outsb
mov
jmp
xchg
icebp
lcall
roll
and
or
and
xor
jmp
fwait
push
push
rol
cli
and
pop
adc
jecxz
xchg
fldenv
xchg
in
push
sbb
pop
adc
push
push
adc
xchg
xchg
xor
push
push
push
fstpl
pushf
mov
test
daa
jae
sbb
cmp
push
int
fs
mov
dec
pop
and
jno
inc
jno
iret
je
push
adc
mov
push
sub
movsb
cmp
ret
mov
into
mov
jno
mov
xor
les
push
jle
xor
movsb
add
dec
jmp
hlt
aas
xchg
jbe
and
pop
and
roll
or
repnz
add
in
add
mov
shrb
cmpsb
cmp
adc
lahf
rorb
mov
push
sbb
sub
popa
repnz
shlb
adc
xchg
mov
mov
cli
mov
popf
mov
push
outsl
dec
stos
stc
inc
fistl
hlt
xchg
xor
loopne
mov
mov
ss
push
mov
mov
pop
push
call
sub
lods
pop
sbb
mov
lock
cmp
push
mov
adcb
cmp
cmp
addl
imul
inc
cmp
imul
jns
lret
cmp
iret
xor
lret
inc
ret
dec
repz
jecxz
in
inc
gs
lret
jmp
jmp
lods
mov
imull
sub
sarb
pop
rorb
adc
rclb
out
in
xchg
xchg
je
ljmp
imul
or
js
mov
or
push
mov
imul
mov
and
or
clc
iret
adc
pop
test
gs
push
or
in
hlt
pop
jb
jle
stc
je
push
sub
cmpsl
ja
cli
cmp
push
adc
xor
out
shll
in
inc
gs
aad
bound
arpl
mov
aaa
jp
adc
adc
inc
scas
lret
push
cwtl
cmp
test
aaa
call
sarl
mov
push
xchg
leave
dec
xor
jmp
test
leave
int3
pop
ss
adc
test
pop
shll
popa
push
stos
mov
cmpl
xlat
pop
push
loop
dec
addr16
enter
rclb
add
int
stos
mov
jnp
divl
movsb
jp
jmp
addr16
rcll
icebp
sahf
mov
out
add
mov
sub
add
lea
and
ja
dec
sahf
dec
cmp
add
out
in
test
mov
xor
mov
mov
ds
daa
mov
jbe
jp
push
call
dec
fistpl
popf
scas
outsl
in
mov
test
jne
sub
dec
addr16
mov
and
cmp
decb
inc
cmpsl
sub
cmp
cmp
pop
das
jae
sbb
mov
jb
in
in
out
cwtd
psubd
call
jne
cli
or
mov
dec
pop
lahf
inc
stc
pop
sub
addr16
jns
jne
mov
and
push
sub
in
ja
inc
pop
inc
mov
sub
pushf
movsl
cmp
and
in
sub
push
sti
aas
mov
jecxz
ss
inc
shll
fsubr
lods
iret
std
negl
int
xor
sahf
mov
push
jmp
pop
jle
inc
shlb
mov
into
gs
fs
inc
and
xchg
repnz
int
iret
sbb
pushf
jmp
fs
dec
dec
cwtl
or
popa
sub
insl
movsl
push
xchg
cmp
add
jne
int3
sbb
aam
inc
cmp
sbb
mov
adc
pop
in
pusha
cli
cmp
leave
pushf
je
arpl
call
test
outsb
test
sub
cmp
cmp
das
xchg
mov
dec
adc
xor
pop
mov
add
adc
cld
mov
dec
or
jecxz
push
pop
sub
fst
push
mov
jecxz
dec
sbb
arpl
clc
data16
dec
std
ss
fnstsw
cmp
or
subl
das
addr16
add
notb
push
mov
dec
in
mov
out
jg
mov
ds
sbb
lods
cltd
rcl
sub
pop
push
aaa
dec
mov
and
adc
jp
aad
jo
sbb
mov
dec
scas
int
cmp
or
sub
ret
ffree
lea
fstpt
arpl
or
mov
in
cs
fwait
cmpsl
jns
push
int3
fsub
push
aaa
jmp
stc
ds
in
scas
es
add
mov
mov
and
rcl
xchg
sbb
and
call
mov
repnz
push
pop
or
jno
pusha
jle
lcall
sub
js
sbb
mov
jns
mull
dec
xchg
xchg
push
lea
mov
sub
pop
gs
daa
lahf
jmp
inc
test
sbb
cmp
add
pusha
stos
stc
insb
and
idiv
ja,pn
mov
es
mov
mov
jp
or
mov
inc
std
into
repz
out
aaa
ret
andb
repnz
insl
sub
bound
int3
nop
jecxz
sbb
dec
imul
inc
fstp
pop
add
insb
xchg
dec
insl
aas
daa
mov
rolb
pop
pop
xor
fldl
arpl
lret
test
pop
add
inc
test
cli
xchg
adc
xor
xchg
pushf
scas
dec
sbb
dec
fadd
jp
inc
sbb
sbb
ljmp
pop
cltd
fisubrs
stos
xchg
push
pop
repz
inc
mov
addl
in
pop
fisubl
sub
movswl
push
cmc
push
inc
push
rcr
lcall
fdivrs
pop
aaa
ss
mov
fs
in
xchg
mov
lret
adc
fxtract
jns
scas
add
popf
int3
push
mov
fs
ss
inc
cmp
gs
sub
hlt
loop
and
dec
leave
xchg
cmp
fisttpll
xor
xchg
mov
jo
arpl
and
inc
out
mov
int3
popa
test
inc
clc
adc
mov
jecxz
icebp
add
dec
cli
jo
ss
divl
je
jg
shlb
mov
push
daa
xor
push
sbb
xor
jmp
ss
fstpl
mov
push
ret
add
scas
mov
push
mov
sbb
das
dec
add
sbb
mov
insl
cltd
inc
test
cs
mov
lcall
xor
sub
or
inc
push
lds
inc
jl
dec
fs
dec
js
lds
ja
outsb
arpl
mov
or
xchg
jg
adc
inc
ds
sbb
movsl
mov
mov
imul
repz
jl
std
out
mov
inc
insb
stos
dec
mov
xor
ja
mov
xor
inc
xor
in
loop
int3
and
lods
ret
lret
insl
mov
pop
push
xchg
fldl
inc
or
or
je
arpl
push
fdivrs
adc
out
sub
lds
scas
mov
add
mov
je
cwtl
dec
sbb
adc
repz
in
mov
pop
movsl
fwait
lcall
dec
jg
xchg
sub
push
cs
insb
cli
adc
sbb
xchg
dec
icebp
imul
add
push
outsb
and
aaa
sub
outsl
push
inc
mov
mov
stos
js
shlb
mov
adc
pcmpeqd
mov
lods
jne
aam
mov
push
push
sub
xchg
iret
add
and
dec
scas
jg
dec
mov
pop
inc
into
mov
sbb
mov
mov
cld
inc
into
mov
aam
pusha
jp
loopne
jl
or
jne
mov
in
cmc
add
imul
sub
adc
push
push
scas
xor
push
mov
pop
adc
fwait
ljmp
lret
cs
pusha
idivb
sub
lods
cmpl
bnd
mov
enter
lea
ds
xor
fwait
out
mov
jne
in
inc
sahf
sbb
jo
pop
lret
push
lods
lds
loope
sti
icebp
or
negl
pop
dec
and
jg
inc
sbbb
sbb
push
rorl
inc
leave
imul
pop
xor
imul
cmp
ja
cmp
or
popa
xchg
repz
insl
jge
inc
repz
cmpsl
test
fsubl
mov
cmpb
push
xor
cli
in
cmp
das
cmp
xchg
sbb
mov
mov
mov
mov
arpl
or
call
jno
add
leave
dec
negl
dec
jbe
dec
sahf
repnz
jno
cltd
adc
mov
call
mov
inc
das
fists
dec
push
cmp
or
test
fcom
mov
xorl
pop
fdiv
mov
sub
ja
jno
cmp
pop
sub
popa
adc
or
mov
push
shll
pop
repnz
adc
sub
push
pop
sbb
cmpl
icebp
in
jecxz
repnz
pop
movb
lcall
fstpl
shll
pusha
jp
out
inc
adc
sbb
push
adc
jns
mull
mov
sub
adc
cs
cwtl
fstps
lret
xor
mov
inc
sub
rol
dec
xchg
adc
sbb
push
fisttps
mov
mov
push
inc
rcrb
mov
sbb
adcl
mov
js
fimull
mov
add
pop
cwtl
xchg
outsb
cmpsl
clc
sub
lods
adc
lea
and
jno
inc
clc
push
mov
xchg
inc
cmp
cmp
and
test
jne
insb
adc
bound
shr
repz
or
add
and
mov
push
clc
xchg
popf
or
scas
mov
mov
out
and
jmp
cmc
aas
pop
and
shrl
testl
loop
adc
insl
jo
fmuls
lods
out
pop
lret
push
das
and
testb
sti
sti
mov
mov
lods
xchg
fwait
pop
lds
dec
jno
insl
mov
mov
xor
aas
pop
dec
jg
jns
push
mov
loope
enter
sti
push
inc
or
or
pop
test
pop
cmpb
push
fnstsw
push
lahf
lcall
cwtl
lods
xlat
jg
xchg
or
imul
add
mov
add
out
push
clc
or
scas
inc
dec
rolb
loopne
shrl
adc
cmc
mov
sbb
mov
and
fcoml
cltd
jne
jns
pop
jnp
pop
jmp
mov
cld
jnp
pop
xor
pop
aas
inc
push
rorl
outsl
pand
cmc
cltd
test
aas
pop
push
aad
fistpll
aam
sub
pop
xchg
adc
cmp
or
js
in
sahf
dec
aad
sub
imul
ss
xchg
xchg
pop
mov
or
sub
mov
add
movsl
icebp
cmc
test
insb
jl
lods
mov
push
sbb
mov
pop
cmp
mov
cmpsl
xchg
sbb
in
push
push
mov
lods
or
rorb
orl
sbb
sbb
insl
outsb
fcmovne
mov
xor
int
push
into
push
ds
add
repnz
sbb
cmc
mov
stos
xor
pop
pop
orl
fiadds
and
dec
in
std
mov
sub
sub
xor
cs
adc
in
mull
leave
rcl
and
and
push
jae
mov
sub
and
insl
adc
cmpsl
je
lea
loop
xorb
pusha
test
add
fmuls
leave
mov
fdivrp
xchg
ja
mov
movsb
loop
cmp
scas
out
pop
gs
ds
mov
in
push
cli
dec
push
or
lahf
addr16
push
dec
imul
cwtl
mov
dec
pop
push
or
ljmp
pop
xchg
insl
sub
pop
xchg
les
push
ret
pop
and
sub
xchg
and
in
mov
test
push
dec
cli
das
jmp
sbb
subl
imul
cmp
push
daa
cmp
push
into
mov
xor
inc
popf
gs
test
jp
clc
dec
inc
scas
les
fs
aad
jns
scas
or
icebp
sbb
mov
les
ds
scas
push
arpl
pop
fistl
lods
popf
inc
movsb
inc
push
jmp
lcall
xor
adc
addr16
jae
stos
push
movsl
sbbl
repnz
jb
adc
ss
aad
mov
pusha
mov
cwtl
lds
sub
lods
fisubrs
push
xchg
ja
fs
or
imul
and
addl
ret
and
in
mov
mov
sub
inc
and
in
jl,pn
pop
inc
jp
or
adc
aaa
mov
mov
jbe
shlb
and
pop
das
loope
cmc
int
mov
out
jg
jnp
sbb
mov
and
in
sub
cs
push
mov
inc
or
sub
sbb
fcoms
fisubrs
xchg
cltd
out
xorl
les
mov
and
mov
jmp
jns
and
fnstenv
or
xchg
cltd
jg
dec
xchg
fsubrl
push
imul
cmp
inc
push
xchg
xor
imul
clc
iret
shrl
jge
cmp
cmpsb
clc
mov
pop
insl
jno
lds
gs
inc
rcrb
mov
xchg
cmp
test
push
xchg
enter
imul
fadd
or
xor
xor
jae
scas
jmp
or
shlb
xor
or
adcb
xor
sbb
dec
imul
push
mov
ss
and
stos
daa
scas
lret
cmpsl
push
stc
adc
std
xchg
xor
mov
test
pop
das
repz
fists
xor
pop
jo
pavgb
inc
add
xchg
jb,pn
cmpsl
test
mov
sbb
les
xorps
incl
std
movsl
push
lods
inc
push
into
or
jno
andb
dec
sub
xor
cmp
inc
and
hlt
inc
cmp
test
adc
fsts
cmp
in
push
mov
scas
inc
inc
and
ljmp
data16
sbb
jno
and
loop
mov
fadd
xchg
aam
pop
repz
sub
fnop
cmp
shl
push
scas
repz
and
out
pusha
sahf
sti
aas
cmp
lds
arpl
sarb
xor
sbb
mov
jno
imul
xor
inc
xchg
lret
sbb
xor
mov
push
lcall
rcr
daa
test
xlat
sbb
inc
jle
daa
xchg
js
popf
push
hlt
sbb
jl
cmp
xchg
movsb
sbb
inc
popa
mov
pop
fcmovnb
add
mov
imul
inc
mov
jmp
addb
mov
dec
fiaddl
imul
jecxz
std
and
out
in
mov
cmp
push
xchg
movaps
adc
jecxz
daa
popf
ret
jl
outsb
mov
movsb
xchg
ret
incb
lds
push
out
mov
pop
in
xchg
test
cld
repz
pop
xchg
cli
inc
mov
dec
sbb
insl
sbb
sbb
or
push
into
aaa
loopne
std
adc
xchg
xor
pop
push
or
pop
hlt
lock
inc
bound
in
ljmp
pop
pand
jmp
mov
jmp
mov
and
mov
push
xor
ret
ss
outsb
push
loopne
je
mov
push
shll
mov
ret
jno
jge
cmp
out
enter
cltd
cld
push
jns
dec
adc
mov
in
mov
rcr
fs
stos
ds
notl
pop
jmp
stos
mov
enter
fs
push
jbe
jp
adc
bswap
cmpsb
jecxz
lock
xorl
jecxz
sub
mov
lock
es
sbb
std
sbb
flds
adc
mov
test
xor
stos
mov
data16
lea
adc
pop
test
dec
or
aad
clc
inc
mov
pop
sahf
in
jg
pop
insb
lods
insl
xchg
fwait
int
and
push
arpl
daa
push
iret
push
incb
dec
dec
sub
int
or
pop
fs
sub
inc
pop
dec
and
cli
sbb
xorb
xchg
or
stos
arpl
mov
arpl
stos
push
fisubrl
cmp
loop,pn
test
dec
pop
fistps
pushf
fadds
sub
push
adc
aad
inc
pusha
dec
xchg
pop
int
inc
jns
lahf
negb
dec
je
lea
pop
or
adc
jle
jg
sub
mov
les
push
sub
loopne
xchg
or
cmc
push
mov
xchg
out
shrb
xor
daa
cmpsb
push
sbb
jecxz
ror
xor
xchg
pushl
icebp
sbb
mov
push
popf
in
mov
adc
jl
addl
and
cmpsl
xchg
lods
mov
mov
into
clc
jl
mov
dec
xor
mov
into
scas
sub
in
xchg
dec
insl
pop
jl
test
dec
out
sti
rorb
rcr
sbb
pop
pop
fwait
test
lods
test
inc
push
iret
push
add
mov
adc
adc
cltd
cmp
lret
sub
popa
dec
jmp
sub
mov
mov
out
divl
xor
outsb
lods
sbb
dec
sub
mov
cmp
xor
jmp
outsl
inc
fidivrl
call
loope
aas
insb
call
test
push
jae
loope
insl
orb
sub
mov
lcall
mov
sub
stos
cs
ja
loop
out
in
ss
sbb
lds
sub
je
or
test
pushf
ficoms
int
push
jae
mov
lods
leave
imulb
jge
cmp
shll
enter
out
cltd
push
mov
xchg
lret
inc
in
test
jne
ret
push
sti
push
sub
and
repnz
out
mov
and
pop
xchg
leave
fdivs
xor
pop
dec
xor
adc
cmp
xor
jl
negl
jb
mov
mov
fstpl
stos
pop
clc
sub
mov
leave
scas
mov
push
aad
jnp
mov
jbe
adc
movsb
clc
arpl
scas
aaa
sti
stos
lods
jle
js
mov
movsl
into
cmp
sbb
inc
insb
or
call
lods
pop
dec
stos
pop
cmp
push
cmp
fsubs
push
inc
pop
mov
ret
aas
add
in
adc
cmp
fwait
or
popa
adc
dec
popa
and
adc
dec
mov
out
adc
notl
jp
sub
sahf
push
jo
hlt
shl
rorb
sbb
push
mov
push
inc
dec
iret
mov
xor
mov
cli
movl
ljmp
push
xor
jbe
sbb
cmp
jecxz
dec
or
and
lcall
cltd
iret
sbbl
adc
test
stc
scas
cli
lds
adc
ret
jo
stc
mov
bound
fwait
jmp
int
icebp
xchg
movsb
jno
pusha
outsl
out
xor
mov
not
mov
ljmp
in
mov
mov
rcr
ss
pop
inc
fiadds
out
ficoml
addr16
jle
jp
pop
popf
or
sbb
dec
push
js
mov
pusha
ret
insb
leave
pusha
jo
pusha
inc
lods
insb
jae
jmp
out
or
push
call
cmp
mov
pushf
iret
cld
xchg
adc
pop
inc
cmpsb
push
js
loop
or
xor
add
mov
pop
pop
lahf
mov
repnz
enter
frstor
cmp
push
mov
fcomps
mov
mov
lods
in
inc
xchg
pushf
or
sbb
repz
pop
jae
jp
jp
push
jne
xchg
push
and
or
and
mov
or
sub
push
rol
fstpt
hlt
mov
xchg
andl
sbb
pop
and
fsubrl
notl
or
adc
push
sbb
fimull
or
jmp
mov
stos
outsl
and
sahf
or
ljmp
mov
xchg
inc
test
andl
sub
ficoml
jmp
cmp
xor
fwait
jns
imul
mov
lods
mov
icebp
ja,pt
and
add
rol
xor
inc
popf
dec
pop
pop
push
lar
out
das
jg
sahf
imul
clc
mov
cmpsl
or
into
mov
and
lods
dec
lds
xchg
cltd
inc
xchg
jle
jne
inc
out
jbe
sahf
enter
or
or
mov
sbb
push
push
push
inc
cwtl
mov
bound
stos
insl
sti
nop
iret
and
sbb
dec
sbb
mov
rolb
push
xchg
fsts
out
sub
in
movsb
fcomps
pop
dec
test
push
add
sbb
dec
mov
mov
dec
pop
lcall
or
mov
movsl
aaa
aam
cmc
pop
push
div
cwtl
lods
push
jae
cmc
jnp
xor
cld
cmc
lds
loopne
repnz
loop
or
enter
cmp
in
fs
push
mov
mov
ss
scas
ret
cmc
jae
cmpsl
cmp
jg
mov
mov
in
sub
test
int
mov
add
push
fucomi
and
movsl
mov
mov
inc
aaa
push
outsl
xchg
lds
or
push
dec
mov
ljmp
xlat
pop
lret
fisttpl
inc
or
xor
adc
push
mov
or
add
fsub
sahf
or
mov
xchg
and
lods
or
cmp
inc
add
cmp
add
lods
xchg
dec
ret
test
jecxz
bound
pop
dec
xor
adc
flds
cmp
insl
ficompl
enter
pop
dec
push
mov
rorb
in
leave
std
pop
lods
jecxz
sub
mov
ffree
jb
and
aaa
mul
and
sub
aad
sahf
push
mov
mov
xchg
pop
jp
jbe
sbb
lret
dec
nop
aas
cmp
jmp
cld
jp
lods
jno
push
sub
shlb
or
cmp
mov
push
push
rcr
adc
notl
sbb
push
and
pushf
das
xchg
sbb
daa
fildl
dec
inc
inc
add
data16
xchg
mov
mov
outsb
jno
in
fucomi
and
push
out
rclb
mov
shll
and
fcomps
fisttpll
lcall
and
adcl
cmp
loopne
xor
and
fsubr
pop
dec
pop
dec
pop
cld
daa
cmpb
insl
and
push
cltd
loopne
xor
add
push
mov
lea
xchg
cltd
pusha
cmc
jne
fisubrl
movsl
int3
mov
bound
pusha
loop
or
aas
popa
pop
or
push
fwait
ss
pushf
push
sub
jbe
inc
push
dec
add
stos
push
mov
add
push
lea
fisubrs
jb
fsubs
adc
pop
movsl
je
imul
in
int
sti
lods
push
xchg
mov
lcall
fs
and
bound
loop
insb
inc
pop
stos
xor
outsl
cmp
add
stos
inc
rcrl
lds
pop
mov
daa
cld
jle
gs
clc
lds
outsb
rorl
in
mov
movsl
sarb
inc
out
outsb
fisttpl
sbb
andl
es
mov
adc
mov
in
test
xor
push
pop
pushf
es
push
cmp
daa
shrl
and
lret
lcall
mov
mov
xor
dec
xchg
ret
mov
xor
gs
bound
mov
sub
cmp
loopne
addl
pop
incb
push
dec
or
loopne
mov
jns
jg
jg
xchg
std
roll
icebp
push
js
cmp
popf
insl
inc
xor
insb
outsl
ficoms
mov
outsb
aad
inc
dec
xchg
push
push
and
sub
sarb
jae
pop
jb
add
cmp
add
and
gs
out
loopew
xchg
xchg
shrl
lahf
fmulp
aaa
jnp
bound
and
cmpsl
icebp
cmpl
and
mov
lcall
sub
call
imul
jmp
sub
inc
out
xchg
and
clc
mov
sar
mov
adc
and
or
mov
mov
dec
je
outsb
sub
pop
or
stos
test
jbe
orl
repnz
xlat
push
cmp
dec
jno
push
pop
pop
loope
into
shl
sub
adc
add
adc
cbtw
stc
es
pop
and
dec
cwtl
inc
inc
inc
hlt
stos
rcrb
test
sbb
jmp
jnp
adc
fcoml
addr16
popf
push
enter
lret
xchg
rorl
repnz
cmp
dec
enter
mov
xchg
psrld
inc
aam
inc
enter
out
adc
stos
ja
cwtl
stc
pop
insl
test
daa
push
daa
rolb
js
in
shll
push
jns
and
or
test
mov
mov
pusha
inc
cmp
int
ret
xor
xchg
sar
mov
ljmp
pushf
mov
push
faddl
js
inc
pop
popa
test
psubusw
ljmp
lods
pop
adc
out
repnz
mov
push
or
dec
xchg
pop
xchg
test
cltd
xor
pop
dec
dec
das
and
lcall
push
mov
adc
sbb
daa
scas
cwtl
hlt
add
ljmp
enter
lods
push
add
test
mov
stc
out
jo
sbb
test
jp
lea
loop
out
jne
push
inc
adc
ds
inc
pop
and
fcoml
push
lahf
scas
and
mov
aad
shll
test
pop
and
add
out
insb
sub
pop
aas
call
out
mov
orl
xor
jae
and
cltd
xchg
sbb
aam
push
in
jo
clts
sbb
dec
xchg
pop
cmp
test
dec
les
adc
push
into
xorl
andb
jo
in
lods
and
pop
mov
data16
aaa
cwtl
cwtl
dec
subl
dec
jno
adc
ret
xchg
insl
in
dec
xorb
jp
xor
call
and
loope
or
movsl
stos
cmp
in
adcl
mov
jg
mov
push
and
xlat
out
call
fidivrl
test
fmull
mov
outsb
pop
mov
movsl
sbb
imul
mov
fdivrs
repnz
fisubs
std
sti
pusha
cmpsl
lock
xchg
mov
adc
mov
popf
fidivs
scas
add
imul
jmp
repnz
int
or
pop
gs
sbbl
outsl
pop
cmp
outsl
sub
mov
sub
dec
push
scas
push
cld
or
int3
imul
cmpsl
lahf
xor
imul
cltd
out
dec
dec
sbb
popa
cwtl
jle
push
sub
inc
pop
add
ds
es
addb
scas
and
lock
icebp
cmp
in
cltd
psrlw
xor
mov
stc
jnp
dec
xor
xor
xchg
mov
shll
dec
ljmp
mov
lods
cmpsl
enter
dec
jbe
mov
outsb
filds
mov
stos
dec
daa
mov
mov
jmp
cli
inc
inc
jo
pop
mov
test
mov
outsl
mov
sbb
inc
add
inc
jae
daa
cmp
cmp
inc
or
ljmp
and
push
jmp
add
int3
and
icebp
fisttps
aas
mov
cmp
rcrl
and
hlt
sbb
adc
add
lret
movsb
pop
xor
insl
aad
xchg
pop
lds
add
jp
andnps
add
mov
sbb
in
icebp
xlat
in
mov
pop
or
dec
daa
add
add
pop
imul
sbb
aad
and
in
inc
andb
dec
jbe
pop
add
push
xchg
scas
cmp
outsb
mov
loopne
mov
or
or
fcoml
mov
test
nop
xlat
ljmp
push
jnp
das
in
mov
jb
sbb
jle
dec
adc
fbld
arpl
dec
mov
pop
jno
pop
xor
adc
lods
shl
es
cmp
xchg
leave
pop
out
out
dec
xor
test
in
popa
sub
stos
mov
je
inc
pop
adc
jb
cmc
lcall
push
fisubrl
cltd
pop
out
or
xchg
adc
enter
pop
cmp
test
mov
sahf
jl
repz
test
add
fisubs
orl
cld
das
inc
movsb
mov
adc
idiv
xlat
mov
pop
dec
pop
jl
inc
outsb
xchg
xchg
pushf
lods
mov
fldcw
mov
mov
or
movsl
xor
mov
mov
sub
lods
arpl
aad
pusha
mov
repnz
sbb
dec
inc
dec
int3
cmc
push
pop
loop
ljmp
jl
popa
jno
imul
push
push
and
lds
lahf
fbstp
mov
sbb
mov
outsb
notb
aam
xchg
lods
rorl
sub
mov
add
testb
inc
add
iret
xor
sbb
scas
push
ret
mov
xor
sbb
push
and
int
test
mov
pop
loop
inc
aam
dec
adc
pusha
xorl
mov
dec
fidivrl
add
stos
and
cmpsl
mov
dec
pusha
mov
call
mov
mov
jl
out
je
lods
pop
mov
push
jb
enter
xchg
fsubl
in
push
movsb
push
mov
cmp
inc
lret
and
add
adc
and
mov
and
push
call
ret
sbb
mov
stos
fwait
mov
jecxz
dec
sarb
push
lret
pop
xlat
fisttpl
inc
add
in
out
sti
leave
ss
in
icebp
xchg
popf
inc
mov
add
mov
ljmp
adc
mov
cmc
adc
int
pop
jo
mov
adc
cmpsb
fiaddl
cmpb
and
mov
dec
cmp
rcll
dec
sbb
xchg
add
jg
dec
ret
pop
mov
scas
xchg
or
aas
push
fcoms
pop
dec
mov
lcall
fldz
push
fwait
sbb
pop
leave
in
mov
call
xor
stos
jecxz
jns
jns
xchg
push
cmp
bound
pop
daa
filds
add
cmpsb
jmp
adc
add
xor
or
add
sub
sbb
inc
cwtl
push
mov
push
inc
adc
fnstsw
push
stc
cmp
mov
and
movsb
cmp
mov
xor
xchg
scas
jns
in
js
ja
loope
pop
aas
adc
dec
jns
mov
mov
pop
and
hlt
add
add
cmpsl
std
xchg
fwait
inc
mov
out
jae
fwait
js
push
dec
mov
dec
mov
loopne
insb
and
rcll
mov
pop
mov
fnstenv
insl
pop
addr16
adc
ss
xchg
bound
divb
mov
gs
ljmp
movsb
mov
xor
dec
push
cltd
cld
cltd
pop
add
pop
jb
loope
mov
ja
mov
in
scas
lcall
lahf
pop
add
cmpsl
mov
xchg
inc
cmp
xor
jne
or
push
mov
int
dec
cmpsl
sbb
imul
cld
xchg
cmp
xchg
loopne
inc
movsl
dec
insb
ret
inc
fldcw
add
aam
hlt
enter
lcall
fadd
sub
push
arpl
cmp
push
add
xor
xor
std
shrl
lahf
cmpsl
rol
pop
and
inc
pop
add
in
xchg
mov
cwtl
lret
in
sub
xor
mov
mov
dec
adc
mov
lret
out
mov
jle
lds
cmp
ret
fcmovnu
outsl
mov
pop
inc
popf
js
out
mov
xchg
mov
cmp
xor
xchg
push
in
fidivl
push
mov
xchg
test
ljmp
mov
in
jg
loope
ds
out
rcrl
sti
and
idivb
rcr
cmp
sti
push
sbb
aad
loopne
mov
hlt
mov
jmp
adc
and
inc
adc
arpl
pop
push
or
sbb
mov
movsb
xchg
fsts
push
xor
or
xor
clc
into
rol
sbb
inc
popf
pop
pop
add
das
cli
scas
jo
jl
cli
aas
jmp
arpl
jge
xchg
scas
rolb
or
cli
mov
fdivrl
dec
mov
cmp
or
push
xor
dec
cmp
test
jp
sub
fs
lock
xchg
stos
jae
add
xor
pop
mov
mov
aad
push
mov
rol
sarl
test
inc
or
mov
ljmp
cmp
pop
insb
sub
sub
xor
xchg
pop
mov
cmp
add
mov
pop
pushf
aaa
jnp
mov
xor
mov
mov
mov
push
cmp
add
sti
cmc
mov
sbb
adc
pop
jle
out
fcmovu
push
lods
sub
mov
sbb
mov
push
xchg
in
outsb
movsb
push
mov
mov
or
xor
push
cmp
fldt
ret
inc
mulb
inc
push
aam
pop
test
inc
push
cmp
and
cmp
jl
inc
int3
rorb
mov
pushf
mov
les
call
stc
or
fwait
sbb
in
fisttpll
sarl
stos
jbe
testl
inc
ds
mov
stos
je
ret
clc
mov
int3
stc
jecxz
in
stos
dec
inc
mov
and
outsb
cmpl
mov
mov
arpl
jnp
cmp
inc
mov
add
je
xchg
jmp
xor
inc
outsl
ret
repz
lods
cld
add
cli
mov
bound
adc
into
ret
repz
jno
fldenv
adc
cld
das
sbb
nop
lcall
insb
sub
mov
ss
fwait
stos
pop
dec
dec
push
stos
popa
adc
and
dec
and
aam
std
xor
xor
jp
xor
sbb
push
enter
cltd
jmpw
mov
test
lret
mov
jne
sti
and
out
cld
adc
pop
mov
fcoml
mov
gs
jmp
xchg
dec
inc
or
cmp
xchg
sbb
mov
pop
loope
sahf
sarl
or
inc
int
push
sbb
pop
mov
jnp
lock
jb
jp
shr
cmp
int
cmp
sub
pop
and
and
outsb
jmp
int3
sub
pop
mov
xor
test
lret
mov
roll
aad
test
xchg
aaa
out
xor
adc
ja
jbe
cmp
pop
jnp
jecxz
add
js
pusha
test
mov
push
ret
fbstp
dec
sub
fsubl
sub
dec
mov
push
jne
add
ss
mov
jle
dec
in
xchg
mov
pop
and
popf
jae
cld
jg
cltd
rcrb
rclb
call
rcll
xorb
add
pop
add
outsl
in
pop
jg
sub
push
jbe
movsl
sbb
into
movsb
adc
lods
adc
pop
mov
jmp
lock
leave
jb
outsl
push
sahf
out
adc
pop
test
jno,pn
dec
push
cltd
xchg
movb
sti
add
sar
insl
push
in
adc
jns
mov
mov
in
mov
repnz
mov
std
or
sbb
rorb
repz
in
or
or
rcll
into
push
pop
into
std
xchg
pop
ja
mov
sub
sub
out
andl
jge
or
adc
mov
adc
push
pop
fs
mov
rorl
xchg
xorb
outsb
jp
inc
cmc
jns
sbb
nop
out
push
push
aad
cmp
arpl
fiadds
repz
sbb
xchg
lret
sbb
push
std
or
cmpsl
gs
jnp
mov
or
mov
lcall
ds
sub
jb
adcl
fmull
pop
addr16
or
sub
imul
lcall
shll
lds
aam
xchg
mov
mov
jno
js
push
xor
jne
cmp
cli
mov
imul
es
or
or
and
repnz
and
scas
mov
cmpsb
lock
stc
das
cmp
dec
push
insl
outsl
push
and
in
cmpb
and
and
add
rep
mov
cmp
das
out
fstpl
cmpsl
call
dec
mov
jle
ljmp
mov
push
sub
push
mov
ja
iret
fimull
clc
decl
pushl
fistpll
jns
xchg
rorb
cmpsb
xor
lods
je
pushw
arpl
fsubs
shlb
fnstsw
pushf
call
push
mov
in
mov
ss
sub
lret
xor
int
xor
jg
jo
shll
add
popw
mov
mov
jne
xlat
in
mov
cmpsl
bound
or
jns
iret
sar
ficoml
or
int3
mov
test
rclb
leave
jecxz
in
ret
fwait
adc
xlat
test
lcall
sahf
orl
fidivrs
jno
pop
hlt
je
mov
insl
mov
out
mov
loope
push
cmp
sub
addr16
push
test
mov
mov
xchg
jecxz
xchg
out
add
std
xor
push
pop
sahf
repz
out
sar
iret
adc
add
loop
nop
roll
int
insl
or
stos
stos
xchg
loope
push
rolb
mov
sbb
lea
mov
xchg
cmp
pop
push
int
fnstsw
or
fsubs
leave
fsubp
test
mov
push
int3
inc
push
mov
mov
movsb
and
push
pop
mov
jle
test
lcall
les
ljmp
ja
out
lods
in
inc
shll
pop
rcrl
and
push
xchg
mov
fs
and
xlat
dec
xchg
xchg
cmp
scas
outsb
pop
mov
add
pop
sarl
aaa
jmp
add
in
and
jns
insl
cmc
daa
cli
leave
cmp
sub
inc
sub
mov
lret
lret
pusha
stos
mov
jbe
sub
mov
lds
js
lods
lods
pop
jmp
jl
gs
je
mov
sub
mov
int
or
xor
test
inc
scas
mov
popa
rcrb
roll
dec
std
.byte
sbb
cmp
sahf
movsb
add
xchg
cmp
lahf
sbb
cwtl
sbb
lds
push
xchg
insl
xchg
adc
jmp
mov
xor
cmp
movsl
fs
mov
dec
sub
pop
gs
jne
adc
imul
and
xchg
insl
xor
cld
adc
imul
divl
ret
sbb
je
mov
xchg
jo
sarb
mov
jne
loopne
outsl
and
inc
push
repnz
adc
bound
scas
addr16
xlat
je
ljmp
and
test
lahf
lcall
decb
mov
rcl
loopne
sbb
cld
lea
mov
xchg
jecxz
push
push
pushaw
leave
jle
push
xchg
ret
pop
xchg
xchg
add
test
int
push
jmp
sub
leave
icebp
lcall
pcmpeqb
scas
cmp
jne
mov
inc
sub
add
lcall
lahf
stc
pushf
loope
ds
add
dec
inc
and
std
push
fs
jle
ds
icebp
xchg
aam
in
sbb
aad
sbb
jecxz
xor
scas
leave
cli
add
jno
out
pop
push
xor
push
adc
mov
and
pop
lods
test
in
ficoml
into
mov
int
fsts
in
pop
push
inc
mov
mov
aaa
loope
or
and
jae
and
int3
dec
sub
adc
push
shrl
fists
sbb
sbb
test
and
jbe
xor
sub
cmpsl
sub
not
popf
stos
push
cmp
enter
sahf
notl
into
or
or
pop
pop
pop
xchg
or
mov
sub
imul
or
or
imul
xor
or
out
push
jl
adc
pop
dec
mov
packsswb
stos
push
outsb
sbb
and
cmp
icebp
lods
in
jbe
fcmovnb
test
sub
cmpsb
sbb
sahf
xchg
dec
dec
fsubs
loop
sub
fstl
loope
movsb
enter
cltd
and
scas
add
inc
ja
pop
rorb
sub
negl
imul
and
pop
outsb
loope
int
cmpsb
int
fmulp
std
fcmovnbe
add
testb
inc
mov
sbbl
mov
sbb
aad
or
scas
in
cwtl
in
shlb
cs
popa
sub
push
movsb
arpl
jnp
std
mov
mov
pop
push
cmpsb
out
test
lds
aam
cwtl
mov
pop
sbb
cwtl
adc
cmpsl
jp
cmpsb
aas
jg
outsl
dec
enter
adc
cmpsb
pop
dec
xchg
jg
jge
jne,pn
in
addb
outsl
cmpsb
mov
popf
andb
ljmp
mov
pushf
sbb
out
xchg
inc
dec
fwait
add
mov
mov
push
pop
jno
popa
into
insb
jno
test
imul
inc
sbb
cwtl
mov
scas
fadds
ret
push
iret
outsl
pop
rcrl
es
xchg
out
inc
or
xor
loope
mov
stos
mov
fldenv
jecxz
rcr
dec
or
xor
ret
and
push
jne
cld
mov
testl
pusha
dec
or
fcmovb
lcall
mov
xor
mov
call
xchg
sbb
mov
loope
sub
adc
xlat
fcomps
subb
fistl
movsl
push
mov
dec
inc
notb
xchg
lods
jbe
jmp
and
in
sbb
pop
test
test
mov
xchg
or
in
movsb
movsb
mov
ds
xlat
pusha
scas
lret
scas
pop
stc
loopne
pop
push
lock
push
dec
jnp
stc
or
xchg
pusha
loop
lahf
mov
into
inc
inc
sub
add
sub
cmp
mov
inc
cmp
mov
cs
sub
stos
push
repz
push
mov
aam
call
lcall
hlt
hlt
dec
insb
js
inc
divl
add
mov
push
xor
rclb
sub
cmp
or
out
dec
and
adc
inc
icebp
mov
xchg
push
stos
inc
mulb
movsl
imul
ja
sbb
out
into
jnp
cmp
test
sbb
mov
cld
lods
sub
ss
xchg
lods
sbb
mov
pop
inc
mov
movsl
jnp
and
xchg
adc
outsb
test
adcb
pop
sub
pop
lds
jbe
add
mov
call
push
mov
mov
testl
pop
in
ds
pushf
out
jo
inc
stc
xor
pop
xor
pop
nop
add
xor
out
pushf
mov
jbe
mov
mov
into
ret
and
insl
rcr
push
mov
mov
sti
sub
xor
adc
xor
sub
inc
push
cmp
xchg
push
sbb
sub
orb
xchg
xor
push
mov
and
fsub
xchg
jnp
mov
jge
dec
cwtl
push
sub
js
pop
cltd
mov
nop
sbb
pop
pop
mov
pop
dec
movsl
movsb
add
rol
iret
les
lods
fsubrl
mov
std
inc
mov
and
ds
ret
ja
out
or
lcall
adc
hlt
test
fidivrl
xor
push
or
dec
push
ja
push
outsl
cmpsl
outsb
std
stos
sbb
out
xor
cmpsb
inc
pop
andl
cltd
ss
aam
ss
inc
jl
mov
adc
push
nop
add
roll
loope
dec
and
sub
mov
rclb
test
rorb
aaa
ret
and
stos
int
mov
push
mov
add
xchg
pop
push
jb
mov
aam
faddp
push
rcrb
inc
orl
pusha
js
mov
or
fldt
outsl
cmpsl
sbb
es
and
cmp
xchg
imul
pop
adc
dec
add
mov
lds
sarb
test
insb
fcoms
xor
enter
dec
pop
push
dec
jp
test
push
cmpb
push
icebp
sbb
imul
addr16
push
add
aad
int
sahf
dec
movb
xor
scas
or
push
aad
dec
test
mov
push
or
pop
mov
push
pop
aaa
inc
pop
stos
or
and
sub
idivb
mov
dec
push
popf
mov
loopne
inc
dec
cmc
andl
cs
out
ds
movsb
je
dec
repz
addr16
cwtl
xor
jl
and
sub
or
mov
xchg
add
ljmp
fmull
lret
ljmp
jle
jmp
push
fldcw
mov
jge
cmp
mov
mov
movsb
loopne
aas
and
fisubrs
test
pop
or
cltd
and
fxch
mov
xchg
and
repz
pop
jno
lds
mov
xchg
dec
scas
push
inc
pop
shll
pop
cmp
xor
faddl
cmpsl
sbb
rcl
dec
clc
or
js
sti
insb
push
.byte
.byte
ja
.byte
sbb
cmp
sbb
jg
aas
jecxz
and
add
mov
jbe
stc
sub
fcmovne
push
mov
jb
push
or
mov
mov
outsb
adc
test
xor
push
pop
imul
pop
loop
push
jnp
or
xor
test
mov
aaa
push
stos
ljmp
iret
pop
push
lea
ss
andl
xchg
movsb
aam
ss
cmpsl
sub
shrl
sti
addr16
aaa
test
xor
popa
mov
mov
mov
cmp
mov
mov
adc
mov
jmp
xchg
outsb
sub
lods
jmp
icebp
rolb
jge
jmp
pusha
xchg
iret
mov
fcmovb
push
or
ret
push
sbb
cmpsl
pop
lods
js
xor
imul
and
fmulp
aam
notb
fnsave
repnz
pop
repz
ja
adc
stc
push
int3
mov
push
xchg
add
cmp
stos
movsl
mov
notb
xor
mov
scas
fs
and
imul
sub
or
data16
pushf
inc
mov
scas
dec
dec
jp
stos
outsl
and
clc
cmp
xchg
jnp
xchg
fld1
fimull
fimuls
mov
lods
inc
or
dec
imul
mov
ficoml
dec
add
adc
cmp
popa
mov
adc
adc
jnp
inc
js
and
jg
mov
xchg
stc
xor
mov
xchg
rcrb
shlb
xchg
sub
stc
pop
mov
push
mov
sbb
iret
xor
out
sbb
jecxz
mov
ljmp
ret
dec
mov
ret
sbb
jno
inc
mov
add
push
je
rcrb
rcrb
mov
sbbb
xchg
bound
xchg
mov
xchg
arpl
jo
test
jno
mov
jmp
adc
and
inc
mov
lea
inc
cmp
dec
mov
nop
mov
int3
and
lea
xchg
das
xor
xchg
pop
aam
push
test
mov
dec
lds
lahf
je
leave
lds
out
or
push
xor
jmp
mov
mov
test
jae
sbb
addr16
rorb
pop
pop
xlat
add
cmpsb
add
fnstsw
xor
adc
mov
mov
test
and
lods
sbb
jg
push
imul
ja
insl
xor
xchg
and
sub
add
adc
mov
adc
inc
ret
dec
pusha
negl
mov
lods
mov
jbe
enter
and
and
jbe
mov
add
mov
clc
mov
xchg
pop
inc
xchg
adc
fdivs
nop
mov
mov
jne
negl
scas
mov
pop
push
clc
ja
aas
cmp
lock
add
sub
clc
mov
lahf
push
cmp
nop
inc
mov
jge
mov
out
or
push
mov
repz
inc
push
enter
push
push
scas
aam
gs
xchg
pop
jns
cmpb
out
bound
out
mov
xchg
push
fs
repz
push
sti
mov
mov
out
enter
mov
push
call
adc
in
xchg
repnz
dec
sahf
xor
mov
fisubl
rcrl
fisttpl
inc
sbb
push
sub
adc
cmp
addr16
xor
sahf
jg
dec
jb
xor
test
testb
pusha
xchg
jo
jle
inc
mov
cmp
push
mov
push
sbb
push
push
xchg
rorl
ret
and
cs
adc
in
jne
xor
jno
das
xor
xor
adc
addr16
mov
out
xor
mov
add
in
leave
adc
dec
and
adc
pop
sti
les
or
dec
cmp
xchg
lods
sahf
push
fdiv
or
cmp
inc
rol
push
test
arpl
xor
push
rol
adc
les
mov
sub
nop
outsb
mov
jns
push
cs
or
jns
bswap
mov
je
add
push
inc
jg
fsubrl
and
and
test
add
sub
xor
cli
inc
or
adc
das
and
inc
or
movsb
pop
popf
popf
jle,pt
scas
xor
pop
push
arpl
xor
mov
xor
mov
dec
mov
push
dec
popa
call
shlw
sbb
dec
in
sbbb
hlt
sbb
lock
ret
cmp
aad
lcall
jg
ss
mov
pop
fbstp
jbe
inc
jge
testl
shlb
popa
mov
sub
leave
mov
ficompl
pop
rclb
jl
add
push
cmpb
imul
shl
xchg
mov
sbb
adc
add
daa
shll
rcll
mov
insl
scas
fimull
bound
out
pop
lds
insl
add
fisubs
sarb
outsb
out
popf
out
mov
add
mov
insb
xor
dec
push
jmp
mov
iret
mov
movsl
test
add
mov
sbb
lds
inc
pop
ret
mov
ss
paddusw
sub
add
lods
popa
ds
ret
dec
into
xchg
mov
pop
stos
nop
pop
decl
jb
jmp
and
xchg
cmp
mov
pop
xor
mov
movsb
repz
insb
lds
jbe
cmp
jae
ljmp
cld
jecxz
add
xchg
pop
ss
mov
mov
jne
lds
fnsave
xor
mov
jge
stos
sub
pop
sbb
mov
into
ret
mov
add
lret
push
pop
call
mov
data16
push
dec
notb
repz
out
sbb
into
sbb
mov
stc
cmp
add
lret
lret
xchg
les
vmovaps
xlat
lea
xor
add
popa
lock
jle
xor
jle
insl
jns
gs
mov
sub
ds
jl
lret
mov
jecxz
cld
fistpl
loopne
out
or
test
hlt
xor
adc
or
cmp
pop
cmpl
sbb
stc
jmp
iret
jp
inc
cmp
mov
xchg
pop
mov
mov
loop
sbb
test
sbb
xchg
subb
popa
stc
ja
ljmp
cltd
inc
in
add
lcall
dec
inc
sbb
and
jo
aas
jmp
jne
xchg
cwtl
and
adc
bound
shr
fsts
adc
in
fistpl
mov
repz
and
and
sbb
xchg
jle
nop
cmpxchg
loope
jp
or
lret
nop
ret
in
xor
call
rcrl
xor
and
xlat
stc
inc
adc
test
rorb
mov
test
sbb
lods
xchg
lds
addr16
arpl
sbb
xor
iret
mov
cld
inc
xor
cs
and
mov
fs
mov
dec
scas
addb
js
lock
and
push
pop
push
xchg
jae
cld
cli
or
xor
jne
out
adcl
cld
aad
xchg
dec
inc
add
push
dec
dec
nopl
mov
test
and
sbb
js
dec
inc
adc
add
call
loope
xchg
pop
sub
mov
mov
int3
jnp
mov
cmp
fnsave
add
fdivl
sti
mov
pop
int3
jmp
push
mov
mov
in
arpl
or
xor
fwait
stos
je
das
pop
pop
loop
xchg
inc
jg
mov
push
push
and
dec
out
sahf
mov
push
pop
cmpb
pop
and
jns
inc
addl
rcll
fidivrs
sbb
mulb
icebp
fdivr
jae
cmpsl
fdivp
adc
cmpsl
pop
int
dec
adc
inc
sub
loop
dec
cwtl
mov
mov
in
lret
repz
addr16
movsb
rcr
add
fcompl
jb
mov
faddp
push
mov
mov
mov
xchg
ret
xchg
lcall
dec
and
pusha
inc
aad
das
add
cmpsb
scas
lods
in
negb
jb
repz
stos
test
or
pop
inc
mov
pop
pop
in
mov
inc
fwait
push
imul
or
pop
ficoml
inc
jl
xchg
scas
adc
mov
clc
arpl
andl
push
fcompl
fbstp
mov
xlat
fcoml
push
inc
icebp
daa
pushf
add
lds
or
mov
test
dec
out
cmp
jns
sbb
loopne
scas
xor
or
and
dec
xor
adc
jg
cs
sub
les
xchg
insl
jno
mov
addl
sbb
mov
loopnew
mov
dec
aaa
in
fmuls
xchg
pop
and
jge
mov
mov
out
nop
inc
imul
mov
jno
into
pop
xor
sbbl
lret
lds
push
adc
xchg
cmovae
jge
push
cmp
xor
dec
and
ret
cmpsb
inc
sbb
sub
or
out
mov
cs
emms
inc
lods
mov
mov
loop
or
push
mov
dec
dec
enter
inc
imul
pop
insl
and
sbb
outsb
xchg
movsl
into
jmp
mov
push
aad
and
lods
xchg
dec
dec
push
cs
aad
sbb
clc
jae
out
addr16
or
mov
push
loope
add
jp
out
sbb
adc
out
test
xchg
cltd
cld
adc
mov
pop
adcb
imul
sbbb
jp
jns
add
sub
inc
cmp
in
arpl
xchg
lret
jg
push
or
cltd
idivl
jl
pop
xor
add
clc
fstpt
jo
sub
negl
mov
adc
aas
cmpl
les
les
adc
push
shrd
scas
pop
adc
fs
mov
mov
jne
and
cs
add
add
loope
adc
arpl
outsb
fxch
push
lock
lea
aam
into
outsb
and
push
aas
or
mov
fsubs
.byte
ds
.byte
.byte
sub
add
adc
mov
add
inc
mov
mov
inc
loop
cmpsb
xchg
sub
std
mov
xchg
inc
sub
test
pop
sti
std
scas
shlb
dec
mov
pop
sarl
out
insl
xor
leave
in
bound
cld
inc
or
loop
cmc
add
jmp
mov
in
xchg
jo
jnp
pop
dec
arpl
stos
popw
or
int
lret
mov
inc
bound
cmpsb
sub
and
cmp
inc
add
int3
or
and
jmp
mov
sbb
sub
xor
inc
push
mov
push
mov
cmp
inc
ljmp
out
lahf
push
cmpsl
popa
mov
pop
inc
or
pop
pop
pop
push
adc
mov
add
lock
push
enter
hlt
ljmp
imul
sbb
gs
in
mov
inc
lds
ljmp
mov
adc
lds
test
mov
xorl
arpl
lcall
into
dec
push
mov
lock
int3
inc
fcompl
add
es
sub
or
cmc
push
mov
jg
jmp
jge
push
lret
dec
add
cmp
lds
jbe
mov
jecxz
mov
mov
test
stos
mov
sub
mov
stos
imul
lods
mov
pop
cmp
push
xor
or
es
push
inc
in
xchg
pop
cltd
into
test
outsb
movsl
loope
daa
lods
dec
pop
ficoml
test
adcl
jns
or
sbb
pop
data16
pop
sbb
decl
aaa
jge
int
inc
das
jmp
movsb
outsb
cmp
push
adc
aas
sbb
and
jbe
mov
arpl
jae
lahf
scas
into
cmp
sbb
lcall
and
loopne
testb
pusha
test
scas
sti
cmp
ja
and
jmp
iret
in
xchg
sbb
push
leave
stos
mov
outsl
movsb
call
dec
sub
aad
inc
mov
decb
aaa
dec
jle
dec
adc
xor
lcall
xor
add
lea
out
xlat
or
inc
fwait
and
insb
mov
jnp
jb
imul
cmp
pop
pop
je
fchs
negl
mov
pop
out
sahf
and
sbbb
lahf
fs
xchg
adc
mov
icebp
add
cmpsl
and
cmpsl
test
inc
loop
cmp
addr16
mov
bound
out
sbbb
xchg
adc
jae
shll
sub
into
dec
fldt
or
sahf
clc
into
mov
fcomps
xchg
outsb
clc
pop
clc
sub
fidivrs
cmp
gs
lock
cmp
inc
mov
icebp
outsb
and
sarl
cwtl
lret
test
lock
dec
mov
sub
mov
lds
adc
btc
clc
xchg
and
mov
stc
push
pop
into
fnstenv
adc
repz
mov
bound
jne
and
insl
cmp
or
test
pop
shl
cs
push
adcb
filds
pop
adc
addr16
mov
mov
cmp
std
cmp
mov
mov
mov
pop
inc
repnz
or
cli
out
enter
dec
cld
pop
aad
xlat
rcll
push
jg
int3
mov
mov
sbb
pop
clc
stc
std
xor
fmuls
popa
and
int3
mov
xchg
notb
add
mov
jo
cmp
and
adc
mov
dec
pop
and
test
adc
shl
ret
pop
add
jns
and
jge
in
push
cwtl
mov
insb
popa
pop
sbb
and
add
xor
add
push
loope
push
pop
inc
in
idivb
ljmp
jae
imul
aaa
xchg
xor
xchg
repz
shll
shlb
fsts
lock
popf
outsl
push
inc
mov
dec
mov
iret
xor
notb
push
leave
insl
aam
fisubrl
adc
std
stc
adc
dec
in
mov
iret
movsl
cmc
fcoms
lock
lock
aam
mov
dec
cmc
add
sub
xor
test
dec
pop
or
enter
cli
xor
mov
sub
jecxz
inc
out
mov
pop
gs
jle
xor
sub
fst
sub
jno
popa
push
js
icebp
scas
js
sub
xchg
movsb
pop
sbb
inc
ja
cltd
mov
std
push
ret
inc
fdivrl
ja
sbb
pop
insb
leave
das
test
scas
sti
fisttpll
daa
mov
mov
jmp
enter
jg
add
cmp
sti
jb
adc
add
mov
mov
adc
fldl
fcoml
pop
sub
gs
out
loopne
xor
test
mov
clc
jno
mov
xchg
fimull
jae
aaa
ret
xor
xchg
jbe
adc
pop
test
test
inc
pop
inc
aas
lea
and
int3
inc
and
jns
outsl
lds
cs
mov
int3
mov
push
dec
daa
mov
ret
inc
or
jne
mov
inc
fsts
jl
cmp
icebp
lret
xchg
out
push
xor
xchg
add
sub
repz
xchg
or
in
cli
hlt
add
adc
jae
add
scas
lods
jae
mov
sub
push
ds
daa
mov
mov
mov
jne
mov
sub
and
sub
inc
inc
mov
in
ret
adc
jns
into
jge
push
clc
mov
xchg
add
sub
jmp
ds
das
fsubr
in
mov
ljmp
push
mov
pop
sbb
popf
in
mov
mov
cmp
cld
xchg
add
aad
incl
fwait
push
mov
rcr
je
ja,pt
loop
cmp
inc
dec
hlt
movsl
ret
shlb
pusha
push
jecxz
nop
shlb
push
popa
mov
rcl
enter
lods
jmp
and
xchg
pop
sbb
jg
ret
xchg
jp
cmp
mov
cmp
mov
leave
jns
int3
and
and
dec
sub
mov
add
out
fsubr
popf
xor
mov
push
cmp
push
mov
div
inc
pop
lea
loop
into
data16
mov
es
sbb
fdiv
outsl
push
in
sub
mov
mov
sbb
add
loop
xchg
daa
in
mov
mov
sub
rcll
std
mov
mov
and
xlat
test
fimull
je
mov
cwtl
jne
xchg
pop
shll
jno
out
comiss
sahf
out
mov
out
sub
adc
push
sub
repnz
out
dec
scas
add
aad
das
adc
or
roll
testb
push
adc
pop
dec
lock
subb
daa
fstps
jg
pop
adc
out
insl
sbb
mov
rclb
stos
in
mov
call
dec
pop
sti
aam
icebp
jnp
xchg
dec
test
mov
movsl
mov
enter
call
ja
rcr
inc
pop
es
repz
ljmp
out
out
dec
push
loopne
imul
imull
shl
arpl
outsb
dec
add
outsl
mov
mov
lock
push
sub
imul
movsl
rorb
sbb
daa
adc
or
or
lret
js
pop
or
cmp
roll
test
pushf
push
bound
inc
or
pop
roll
cmp
div
leave
mov
or
mov
jns
hlt
testl
loopne
fs
mov
xor
add
sti
aaa
test
cmp
in
cmp
adc
es
inc
nop
cmp
loope
movsl
add
nop
inc
addr16
sbb
popf
jns
loop
jecxz
jecxz
dec
inc
adcl
aad
sub
out
add
and
test
call
test
outsl
outsb
pop
mov
xor
mov
es
lods
mov
pop
mov
stos
xor
adc
xchg
out
hlt
and
fnstsw
dec
shll
pop
xorb
rclb
mov
xchg
imul
add
mov
call
mov
neg
push
std
repnz
ja
push
and
out
adc
mov
jns
ret
ljmp
fcompl
in
mov
xchg
lea
ret
mov
and
pop
in
ret
test
shll
stos
aaa
imul
inc
daa
mov
dec
pop
loop
push
pop
pop
xlat
push
loop
divb
push
rcrb
cmpl
sahf
inc
stc
sbb
jo
jne
test
loope
jo
andl
mov
je
testl
mov
mov
ss
in
gs
in
scas
lcall
pop
pop
add
or
xor
and
cmp
mov
pop
push
hlt
out
bound
inc
mov
in
jp
fimuls
rcrb
or
mov
jne
inc
jne
int
pop
hlt
les
add
popa
adc
js
xchg
cmp
into
aad
rol
inc
mov
mov
enter
mov
mov
mov
in
pop
and
rcrb
gs
cmpsb
xorb
dec
mov
mov
addr16
sbb
or
aas
xchg
icebp
mov
or
fsubrs
ret
lea
push
negl
out
sbb
pop
sar
sti
cmp
test
sbb
cmpb
dec
fcmovbe
push
or
stos
inc
movsl
data16
or
mov
in
and
fildl
std
add
dec
or
inc
inc
sub
call
dec
out
sub
xchg
push
cmp
addr16
arpl
pop
mov
or
xor
mov
mov
sub
pusha
rclb
or
sbb
and
sbb
inc
mov
cmpsb
insb
inc
dec
add
insl
mov
sub
inc
or
pop
repnz
add
lahf
test
dec
lock
out
insl
fstpl
repnz
bsf
pusha
mov
outsl
fcmovnb
dec
loop
cwtl
jae
aad
out
push
loope
cmp
imul
sbb
sub
inc
test
add
and
pop
pop
sub
dec
lcall
lock
mov
push
stos
mov
sarl
add
popf
fcoms
jecxz
loop
push
fwait
gs
js
pusha
cmp
add
movsl
push
call
mov
xor
mov
mov
sarl
cld
dec
jl
sahf
lods
nop
psubsw
pop
mov
mov
push
cmpsl
shrb
jecxz
nop
xlat
jle
xchg
sti
arpl
paddusw
sub
mov
push
mov
sub
inc
mov
and
add
mov
movsl
push
test
adc
dec
inc
iret
cmp
inc
insb
cmp
cmpsl
sub
out
lods
ret
and
mov
gs
cmp
cld
jne
xor
push
adc
dec
mov
sbb
inc
loop
repnz
int
inc
ret
add
xor
ret
in
inc
cmpsl
cmp
pusha
jo
imul
xchg
and
jb
sbb
adc
xor
mov
testb
lea
fnstcw
or
jp
mov
test
scas
pop
mov
lcall
cli
inc
and
xor
lea
mov
lret
xchg
mov
xchg
mov
int
sbb
or
les
sbb
push
iret
mov
stc
add
into
repnz
sub
orl
pushf
aam
enter
jecxz
xlat
rcrb
scas
xchg
jge
push
arpl
rorl
aad
push
xchg
jbe
pop
and
rdmsr
leave
sbb
push
pop
mov
mov
dec
cwtl
aad
sub
cmc
push
sbb
jg
sbb
mov
sub
dec
dec
es
rclb
shlb
and
mov
nop
push
hlt
inc
mov
ljmp
popa
xor
lret
dec
lea
pop
fst
dec
aas
or
les
adc
stos
jmp
aad
cmpb
xor
push
sbb
out
repnz
xchg
icebp
add
loop
xchg
fwait
lahf
in
popf
sbb
stos
mov
dec
adc
mov
push
mov
pop
aad
int
mov
leave
sbb
xor
push
stos
aaa
mov
jbe
lret
push
js
sub
and
push
add
ss
cmp
xchg
pop
std
aaa
hlt
xchg
inc
jbe
in
cmc
dec
and
cmp
adcl
and
mov
out
loopne
lcall
inc
and
xor
das
aas
dec
or
add
repnz
out
xor
mov
add
xchg
ss
mov
or
mov
repz
leave
sub
cwtl
add
imul
in
sti
lahf
jg
xor
aad
mov
cmpb
and
inc
notl
repnz
xchg
cmp
jne
outsb
adc
push
inc
lcall
jle
push
mov
lods
jnp
xor
xor
adc
push
and
cltd
mov
daa
cld
addr16
loopne
fs
pop
sbb
adc
nop
aas
lahf
pop
or
fisubl
pop
sahf
loope
push
pop
cld
xorl
add
push
mov
stos
xchg
jp
mov
test
lods
rorb
ret
mov
lcall
pusha
adc
imul
or
xchg
jne
cmp
insb
pop
mov
mov
jne
or
inc
mov
shll
jne
aad
push
imul
or
call
movsl
shll
mov
fdivrl
lods
stc
cmp
fiadds
push
outsb
mov
ds
mov
jo
sub
popa
out
push
fldenv
sbb
popa
ja
inc
aam
roll
dec
outsl
icebp
hlt
sub
loopne
popf
into
dec
mov
sbb
rorb
in
daa
jmp
cmc
mov
or
jge
cld
int
mov
inc
repz
mov
jbe
insl
stos
cmc
or
int3
test
cmpsb
inc
test
sbb
lods
rclb
in
in
cmp
gs
pop
psrld
or
clc
movsb
sub
xor
pusha
ret
rep
fcmovnu
add
je
je
dec
mov
repz
insl
sti
sub
test
xor
push
jp
inc
pop
les
sub
jns
push
and
in
lcall
clc
mov
jg
addr16
fldl
andl
jge
imul
add
sbb
adc
int
jae
and
push
pop
xor
ret
push
fiadds
popa
fisubl
mov
mov
pusha
daa
pop
sub
addl
fldenv
shll
jmp
xchg
xlat
jg
ret
and
adc
xchg
push
push
rcr
popf
xor
notb
push
inc
mov
inc
scas
icebp
out
clc
cmp
mov
mov
inc
rcll
add
sbb
out
xor
jecxz
ret
jno
cmp
mov
sti
push
stos
jmp
popf
mov
or
push
cmpb
jo
add
ret
int
fsubs
mov
cmp
mov
jle
dec
roll
jmp
adc
cmpsl
popf
mov
lcall
test
test
jl
lea
pushf
and
add
sbb
mov
jnp
jo
into
xor
fnstsw
fistps
xchg
jno
and
imul
test
stc
movsb
int
test
cli
mov
loopne
sbbb
pop
xor
ficoml
dec
gs
push
add
ds
mov
push
add
pop
mov
gs
sub
and
add
push
push
cmpsl
or
sub
fcoml
jg
mov
push
xor
jg
xchg
mov
test
add
mov
cmc
lock
shr
arpl
sub
cmp
insl
or
lret
jecxz
or
test
fs
inc
jge
sub
aam
jle
es
xor
dec
lea
pushf
sub
xor
sbb
out
lcall
pushf
roll
mov
jbe
insl
mov
loop
lret
adc
jg
sbb
jne
sbb
sbb
loopne
lock
push
pop
sub
aam
add
inc
fcompl
stos
ss
xor
stc
push
or
out
shl
arpl
shrb
xor
fnstcw
cltd
mov
and
arpl
aam
push
mov
lea
out
mov
aaa
sbb
pop
sbb
cmp
pop
fsub
pop
lods
ljmp
lods
in
xor
nopl
add
jl
test
ret
cmp
jb
lcall
or
cmpsl
mov
and
sbb
cmpsl
lret
mov
inc
in
rcll
das
scas
sbbb
das
push
dec
dec
add
mov
sbb
lods
xor
les
xchg
adc
jno
inc
fstpt
movq
mov
iret
int
lds
cmp
sub
inc
sub
push
push
iret
mov
imul
and
das
mov
hlt
in
push
inc
dec
push
adc
lock
mov
cltd
jmp
mov
leave
imull
inc
xrelease
push
and
cmpsb
dec
or
sub
fiadds
in
cmp
mov
mov
or
iret
cmp
xor
or
pop
test
je
add
pop
int3
pop
and
jns
xchg
sub
shrl
jp
cmpsb
movsb
aaa
addr16
fdiv
and
out
cmc
clc
jns
cli
scas
in
cmc
inc
mov
fnstcw
cmp
adc
nop
pop
xchg
push
cmp
push
clc
mov
nop
ret
xlat
cmpl
xchg
test
mov
mov
fcmovnb
xor
inc
lods
call
pop
add
adc
loopne
inc
xchg
dec
mov
rclb
or
out
cmpsl
xlat
outsl
std
sub
imul
movsl
imulb
frstor
mov
test
sbb
pop
insb
ljmp
dec
adc
and
stc
in
mov
test
insb
repnz
bound
loop
or
je
sub
add
faddl
movb
inc
addl
daa
mov
mov
ficomps
ljmp
nop
jo
pop
out
insb
mov
mov
ss
std
jns
addr16
sar
or
push
lock
mov
sbb
into
fistpll
sbb
push
in
aad
adcb
mov
pop
outsl
jae
inc
xchg
xchg
push
sahf
dec
dec
push
pop
in
std
cmp
pop
adcl
pop
cwtl
pand
movsl
sub
call
pop
mov
pop
fistl
fistpll
or
shlb
daa
scas
add
pop
and
xor
dec
and
bound
bound
shl
xor
inc
ljmp
add
pop
sti
cmp
mov
push
fs
pushf
sub
jne
mov
or
pand
mov
adc
or
leave
loope
xchg
rcr
hlt
lods
out
push
lock
jne
and
inc
mov
xchg
xor
mov
jmp
adc
arpl
jbe
fcmovne
icebp
ret
sub
pop
mov
shrb
add
sbb
cmpsl
jns
cld
dec
xchg
sbb
call
out
jns
xor
sbbb
movsb
jne
test
pop
jo
jb
sbb
inc
call
lds
incb
inc
in
scas
jns
xchg
out
adc
ljmp
and
je
sbb
fimull
fistl
xlat
jp
sbb
das
cltd
scas
pop
inc
pop
stos
sub
shl
out
inc
fiadds
int
cmpsl
mov
loope
or
flds
or
stos
pop
push
xchg
lcall
push
cmpsl
adc
lcall
pop
xor
or
cmp
ret
mov
mov
jno
sub
testb
shl
js
sub
mov
shrb
lock
and
fldt
icebp
bound
das
push
push
daa
or
imul
push
xchg
jns
xchg
sbbb
xchg
out
je
popf
mov
popf
xchg
stos
imul
push
jmp
bound
push
dec
or
negb
inc
push
stc
mov
mov
jl
nop
out
mov
out
adc
in
xchg
or
mov
mov
daa
scas
pop
dec
xor
jnp
call
cmc
lock
repnz
dec
push
mov
mov
push
and
jge
lcall
loopne
sub
insb
out
in
in
mov
cmp
xchg
lret
shl
lret
cmp
jecxz
pop
inc
mov
repnz
mov
jecxz
les
out
stos
inc
xchg
xor
mov
sbb
sub
cmpsl
pop
sbb
adc
inc
push
or
and
inc
push
cs
push
push
push
xchg
add
outsl
mov
cli
shrb
sti
fsubs
and
dec
inc
loopne
cmp
mov
mov
push
enter
outsl
xchg
inc
jb
jb
xor
cmp
xchg
test
scas
aad
push
sbb
imul
cmp
aas
ja
xchg
mov
push
scas
sbb
aaa
jno
into
in
jnp
out
fsubrp
push
addb
dec
add
mov
jge
dec
movsl
dec
call
insb
or
mov
clc
jmp
xor
loop
inc
pop
sub
mov
adc
aad
pop
inc
mov
incb
mov
jl
or
scas
rol
pop
mov
pusha
adc
arpl
jmp
mov
popf
out
push
mov
mov
outsl
je
cmp
or
test
in
test
mov
add
movsb
scas
lds
add
rolb
add
and
push
cmp
call
out
fldl
imul
lcall
add
mov
mov
mov
testl
push
test
push
jecxz
xor
mov
sbb
add
cmpsb
ds
and
push
inc
int3
das
test
das
cmp
stc
push
sbb
negb
imul
mov
xchg
scas
lea
pushf
mov
into
xlat
shll
adc
scas
adc
mov
add
xor
outsl
mov
or
cmp
movsb
and
arpl
mov
sbb
xor
pop
ja
and
push
mov
jne
div
jge
xor
jbe
or
cmp
dec
pop
sarl
add
movsl
sbb
xor
push
mov
jg
les
out
stc
add
ljmp
lods
adc
cld
cmpsl
xor
inc
push
jecxz
dec
mov
hlt
ss
mov
cmp
nop
and
mov
loop
out
mov
pop
cmp
or
jecxz
inc
adc
cmp
les
cmpsb
or
andps
and
cwtl
xorl
mov
inc
jg
cmp
pop
mov
mov
adc
imul
negl
add
sub
cli
xchg
lock
adc
rolb
mov
xlat
fisubrs
jo
jb
loop
mov
scas
popf
mov
mov
dec
mov
lret
insl
jg
and
enter
loopne
movsb
ja
push
sti
adc
ret
lahf
xor
pop
sahf
imul
cmpsl
sub
in
inc
sbb
inc
pop
mov
jge
rcl
xchg
jo
popa
out
lods
sbb
jg
adc
roll
mov
in
mov
jmp
fs
pop
mov
nop
mov
xor
jp
xchg
push
mov
push
lret
imull
xchg
jns
jg
scas
lds
mov
scas
and
push
sbb
mov
cmpsl
mov
lea
lea
adc
scas
lcall
and
mov
inc
repz
fldenv
icebp
mov
push
negb
dec
lea
daa
mov
xchg
cmp
jo
cmpsl
and
fimuls
cmp
mov
adc
ss
or
xchg
loop
shll
pop
shrb
scas
imul
sbb
imul
pusha
out
push
aam
sub
bound
inc
or
int3
xlat
shrl
cmpsl
dec
loop
cli
mov
mov
inc
pop
fcomip
decb
push
sub
add
jne
sbbl
ficomps
adc
push
lock
lock
shll
insl
add
push
stos
in
inc
lcall
std
das
loop
pusha
ss
jle
sbb
xor
fcoms
ficomps
std
aam
add
aaa
cltd
movb
or
in
cmp
sub
fs
adc
push
nop
shlb
mov
mov
cmpb
dec
aaa
test
push
sub
pushf
inc
stos
fs
pop
fdivl
or
xchg
jp
lods
nop
sbb
push
test
popa
sbb
stos
inc
jne
push
int3
insl
push
in
sbb
xchg
dec
in
xor
outsl
into
cld
dec
fidivrs
xchg
adc
fcoms
sub
dec
icebp
or
adc
ljmp
mov
outsb
fdivs
and
mov
repz
popf
daa
shr
add
les
enter
xor
xor
insb
arpl
int3
lcall
ja
das
fwait
mov
adc
rcrl
loopne
data16
push
inc
popf
out
repz
mov
test
cmp
arpl
inc
mov
into
push
mov
js
sahf
dec
popl
lret
je
jmp
or
mov
inc
xchg
aaa
jl
xchg
test
xlat
adcb
pop
cmp
out
hlt
insb
adcb
test
xor
jb
sbb
pop
adc
sub
jns
push
mov
aad
dec
add
sbb
and
dec
nop
jb
and
dec
jne
inc
mov
adc
pop
xor
in
xchg
pop
inc
jnp
and
or
pop
cmp
pop
adcb
icebp
addr16
and
mov
fisubs
iret
pushf
dec
jle
jb
or
push
push
lret
cwtl
or
aaa
xor
cmc
repz
repnz
add
idiv
add
or
pop
dec
and
arpl
dec
or
test
aam
mov
fisttps
sub
push
les
daa
leave
in
and
movb
push
push
adc
sbb
fimull
dec
pushf
jno
inc
gs
and
ja
outsl
mov
shl
jmp
aas
and
jmp
frstor
fcoms
pop
mov
cld
add
or
daa
jnp
stos
lret
mov
cmovnp
mov
sub
or
jae
mov
pusha
lahf
stos
mov
test
ret
lcall
in
cmc
mov
addr16
ds
lods
popf
stos
mov
je
jnp
add
out
cmp
outsl
rol
dec
fiadds
dec
inc
jle
les
pop
out
mov
jp
pop
dec
inc
xchg
popf
movsb
mov
or
sub
and
std
mov
dec
stos
dec
cli
mov
call
dec
lcall
adc
push
das
je
jge
sbb
out
pusha
rolb
push
leave
jo
sbb
shll
mov
jbe
pop
and
pop
mov
adc
xchg
jae
popf
fs
xchg
insl
ja
aas
xchg
divb
mov
push
aas
fsubs
fisttpl
jno
push
jp
dec
push
shlb
push
cmp
test
push
jmp
popa
testb
roll
mov
push
pop
or
mov
sub
mov
mov
imul
addb
or
mov
cmp
push
mov
insl
xchg
lahf
lds
fwait
stos
mov
mov
pop
xlat
xlat
push
test
int3
jns
mov
sbb
adc
dec
data16
mov
out
jmp
frstor
clc
loopne
pop
enter
cmpsb
dec
in
jmp
jmp
int3
inc
cwtl
cmp
or
lcall
jo
sbb
rcll
ja
mov
nop
jae
push
cmp
and
sbb
stc
mov
mov
adc
out
mov
js
int3
inc
mov
adc
js
push
lods
nop
adc
leave
lock
fdivr
sbb
jbe
pop
gs
inc
adc
je
roll
jg
loop
sub
sub
andb
mov
mov
iret
xchg
js
mov
mov
lock
stc
out
xorb
pop
enter
adc
ss
scas
jle
rclb
into
mov
inc
mov
dec
out
pop
filds
mov
dec
xor
and
fldt
xchg
sbb
pop
dec
pusha
es
lahf
pop
push
out
xchg
ja
divb
push
lods
add
xchg
push
sbb
aad
mov
dec
jl
mov
push
in
addb
pop
sub
fsts
leave
loop
cld
xor
jecxz
xor
jae
push
adc
pop
dec
push
sbb
mov
xchg
xchg
adc
iret
push
aaa
sub
inc
lea
or
jne
sbb
jecxz
adc
add
pop
pop
mov
fistpl
inc
je
xchg
sub
hlt
shlb
mov
into
push
rep
add
sub
push
out
dec
fldl
out
mov
push
lret
adc
and
and
sub
mov
mov
test
mov
andb
mov
mov
mov
mull
stc
push
movb
shr
rep
ljmp
hlt
pop
leave
in
and
mov
repz
push
repnz
jle
test
cli
mov
mov
outsb
and
iret
xlat
out
add
push
push
xchg
lock
cmpxchg
sub
outsb
lea
mov
rcrl
bound
or
es
mov
inc
adc
mov
adc
or
cli
xorl
inc
mov
addr16
inc
das
in
adc
pop
repnz
ds
or
or
fmul
scas
jo
xchg
jp
jp
jnp
aad
movsl
mov
xchg
pop
out
jnp
jbe
xor
mov
adc
fwait
mov
addr16
push
test
sbb
sahf
loop
jg
adc
push
imul
xchg
ret
pop
mov
jl
mov
mov
mov
leave
test
push
push
inc
push
int
dec
and
pop
shl
mov
push
roll
adc
out
push
in
jp
add
out
gs
pop
call
in
mov
inc
mov
pop
inc
fnstenv
cmpb
inc
insl
jne
inc
in
out
mov
dec
fnstcw
cmp
mov
xchg
adc
inc
pushf
dec
sti
fisttpll
jecxz
iret
popl
sbb
lahf
adc
xchg
or
.byte
.byte
.byte
add
add
adc
lock
and
mov
sbb
sub
pop
icebp
mov
cmp
mov
loop
mov
jb
stos
insl
mov
cmp
enter
jp
sub
adc
fwait
adc
pop
mov
jge
inc
in
lret
in
scas
mov
lahf
lock
jecxz
inc
flds
popf
aad
xchg
rorb
mov
int
and
add
xor
mov
decb
fadd
cmp
pop
mov
and
cmp
mov
dec
add
test
push
dec
add
es
fwait
rorl
in
sub
out
inc
in
andb
stos
les
and
outsl
cmp
jp
repz
jae
inc
mov
push
mov
arpl
rcl
mov
or
sbb
sub
cmp
and
adc
xor
inc
fwait
or
adc
pop
mov
out
push
mov
jp
int
aaa
aas
mov
and
and
ds
cs
mov
out
mov
mov
jecxz
nop
xor
fwait
dec
xchg
adc
cltd
fsubl
repz
mov
into
jp
inc
push
adc
sub
adc
andl
sahf
xor
sahf
mov
clc
inc
push
mov
shlb
jnp
lret
icebp
das
xor
sbb
push
popf
adc
lods
bnd
jo
enter
sbb
pushf
or
mov
xor
mov
clc
mov
jbe
ret
lods
pop
jb
in
push
push
mov
push
xchg
pop
sbb
cld
cmpsb
es
cmc
insb
push
mov
or
test
xchg
push
cmpb
lahf
lret
popa
les
lcall
insb
jp
out
pusha
push
jmp
lock
cmp
fldt
jge
push
daa
xor
add
xor
nop
ret
movsl
xor
mov
movsl
mov
xchg
cmp
out
aaa
repz
mov
cmp
pushf
jo
and
jae
repz
cmc
in
lret
outsl
mov
cmpsl
pushf
aas
stos
cmp
dec
fcoml
daa
cmp
frstor
dec
nop
mov
ret
or
push
jnp
mov
pop
je
xor
pop
and
cmp
sub
adc
mov
shrl
push
outsb
cli
sub
sbb
cmp
jno
in
out
movq
pop
test
cltd
jnp
aam
lcall
xor
stos
icebp
dec
lret
dec
mov
out
mov
adc
pop
outsb
jle
sarb
xchg
add
out
inc
inc
cwtl
fsubr
imul
call
adc
loop
in
or
loop
push
sbb
test
or
sub
pop
test
fstps
sub
jns
outsb
inc
adc
std
out
jne
aaa
fsts
cmp
push
scas
xor
outsl
fs
das
jmp
je
inc
das
pop
fldenv
xchg
das
inc
lds
sarl
mov
jge
pushf
xchg
addb
dec
and
sbb
pop
sub
jbe
xchg
adc
jne
mov
movsl
cltd
push
gs
pop
mov
ret
mov
mov
and
outsb
mov
sub
inc
and
je
mov
inc
push
loope
shll
bound
or
sbb
in
ret
insb
push
xchg
sub
jno
notb
into
mov
addr16
mov
mov
xchg
cltd
and
das
or
mov
sbb
repnz
mov
clc
pop
or
and
mov
mov
cmp
rcl
jbe
adc
cmpsl
iret
inc
shl
out
cmp
fwait
jp
fildl
mov
mov
jns
call
gs
jp
cmp
push
mov
fidivs
outsl
mov
arpl
jg
movsl
testb
cmpsl
sbbb
and
add
sbb
adc
add
popa
jno
insb
jecxz
mov
aas
pushf
je
outsl
iret
push
mov
xchg
mov
add
jae
push
jno
out
notb
or
jnp
movsl
and
stc
arpl
in
cmp
mov
adcl
fadds
sti
ret
ds
mov
aaa
imul
jns
and
arpl
icebp
push
pop
fidivrl
ljmp
stc
out
jl
mulb
ds
sub
push
ret
popa
aas
xor
mov
out
adc
notl
mov
inc
cmpsb
add
adc
and
mov
xor
inc
gs
gs
imul
dec
insb
sub
es
jmp
push
imul
jmp
pop
add
lahf
add
lods
subl
xor
dec
mov
pushf
arpl
pop
inc
test
jns
insl
std
loop
push
jl
or
mov
jbe
and
mov
test
sbb
mov
adc
test
pop
sub
daa
out
adc
out
insl
xchg
mov
gs
in
push
test
adc
loopne
fnstcw
rcrb
mov
testb
test
loope
adc
mov
dec
ja
test
sub
fstpt
xchg
push
sbb
and
pop
add
test
sbb
shrb
jle
pop
rorl
push
mov
cmp
imul
dec
push
inc
mov
or
stc
adc
jg
xor
lods
sub
jnp
rcll
cmp
pop
in
les
subb
xchg
lock
out
and
inc
lret
leave
movsl
mov
xchg
pop
xchg
push
cld
xchg
outsl
aam
jmp
jle
stos
ljmp
xlat
push
mov
out
pop
iret
fs
loopne
loopne
and
ljmp
lods
dec
int3
lret
stc
jnp
add
jp
adc
or
arpl
xlat
mov
shl
iret
lds
adc
push
rol
pop
js
leave
add
insl
out
stos
xor
insl
add
pusha
fidivs
leave
and
or
or
mov
or
in
outsb
inc
cmp
shl
fstps
sub
sti
lcall
in
xor
mov
in
loop
sub
mov
xor
push
or
and
inc
push
mov
in
scas
push
mov
int3
xchg
jo
cmp
andl
std
lcall
push
and
mov
dec
pop
mov
xchg
mov
dec
test
inc
std
testl
cvtps2pd
cmc
vucomisd
ljmp
cmc
loope
repnz
cmpsl
cmp
jnp
enter
les
leave
mov
int3
xchg
mov
mov
enter
stos
std
pop
pop
lea
push
repz
shlb
aaa
inc
and
mov
mov
sub
ds
mov
out
out
call
testb
ss
pop
mov
cltd
lahf
adc
or
scas
movsl
cmc
sbb
insb
xlat
dec
mov
int3
lea
sub
fstpl
ljmp
cmpsb
sbb
push
int
jp
and
ja
push
mov
icebp
or
mov
cmc
lea
mov
das
test
inc
loopne
addr16
jle
test
fwait
lods
dec
xchg
rcr
sbb
dec
scas
cmpsb
pusha
mov
or
xor
jnp
orl
cmp
ficompl
cmp
pushf
pop
testl
scas
sub
push
or
fildll
adc
dec
fs
sub
stc
test
negl
pop
or
cmp
stos
jg
jne
push
pop
hlt
sub
adc
sbb
std
lcall
push
cli
in
cmp
insl
movzbl
popf
lahf
sub
sti
pop
int
mov
add
sbb
xor
xchg
xchg
mov
sub
adc
mov
pop
incb
adc
mov
mov
mov
test
jmp
les
add
adc
fildll
les
das
mov
js
or
sub
movsl
inc
xor
push
push
pusha
repnz
add
and
in
bound
in
xchg
das
dec
push
ljmp
jl
mov
cmp
stc
leave
lahf
sbb
pop
das
fisubrs
mov
push
mov
lret
mov
fsubrl
mov
lret
inc
test
fists
mov
pop
xchg
les
stos
test
subb
mov
lret
xor
mov
push
scas
gs
jecxz
ja
mov
jns
faddl
mov
jb
popa
pop
int3
xchg
mov
mov
stos
lea
shlb
push
jae
jbe
lahf
gs
dec
add
mov
dec
outsb
cmp
cmc
sahf
xchg
ja
adc
dec
push
add
mov
in
es
aas
or
mov
and
and
cmpsb
mov
adc
fcoml
sbb
test
cld
in
into
mov
orb
xlat
call
add
mov
sbb
cmp
xchg
pop
mov
mov
cmp
cmpsl
orb
pop
sub
sahf
mov
add
bound
push
rorb
jecxz
xchg
cld
and
cmp
jae
shll
ljmp
arpl
pop
clc
lea
adc
pushf
dec
aas
add
lahf
test
loop
mov
in
jne
cld
sub
push
or
xchg
dec
mov
rcr
repz
xchg
mov
push
sub
push
mov
call
mov
fs
xchg
call
jle
out
push
or
sahf
add
movsl
mov
xchg
push
stc
lods
cmp
mov
test
mov
call
push
or
dec
aam
pop
ds
xor
mov
sbb
daa
mov
push
out
sar
je
pushl
fmul
test
cmp
xchg
shrb
sub
outsb
mov
or
insl
movsl
push
shrb
das
jmp
es
bound
loop
arpl
cmc
ds
xchg
mov
js
pop
pop
sbbl
lret
and
lret
scas
dec
and
or
ret
xor
add
test
in
jbe
add
inc
lds
xor
jp
ret
cmpsl
xor
roll
cmp
add
push
cwtl
out
sub
mov
jo
js
xor
mov
mov
aaa
jo
add
sti
sbb
cli
push
xchg
cmpsb
mov
sar
sub
loopne
cmpsb
or
xchg
shrl
pushf
leave
shll
push
lods
testl
xor
adc
nop
xor
cmpsb
cltd
xor
push
sti
loopne
stc
push
or
pop
test
lahf
les
inc
pop
fstpl
inc
mov
aad
xor
lret
inc
inc
rcll
xor
aad
loope
xor
push
into
cmp
mov
test
adc
xchg
or
mov
ret
push
mov
dec
jp
adc
fwait
push
mov
cmp
xor
mov
dec
scas
shlb
adc
add
xchg
inc
pusha
je
fsubs
push
lds
mov
dec
js
mov
imul
das
stos
cmp
inc
mov
jg
in
loopne
imul
add
sahf
sub
mov
add
mov
or
sti
xchg
mov
or
mov
xchg
icebp
sbbl
jp
xor
sub
mov
fmul
adc
mov
outsb
push
das
imul
xor
jmp
test
xchg
or
insb
lock
pusha
mov
mov
sbb
and
aaa
xor
sub
imul
inc
sub
sbb
pop
xchg
out
mov
ret
pop
out
push
outsb
sti
ds
add
and
fldenv
add
movsl
inc
sub
dec
or
xchg
iret
dec
into
out
imul
int
insb
shll
mov
test
push
jmp
test
lods
cmp
js
xchg
daa
rorb
cmp
stos
and
in
dec
leave
sub
or
cmp
dec
inc
ret
inc
dec
sarl
sbb
mov
mov
push
mov
in
out
dec
in
mov
mov
sbb
fmull
stc
mov
mov
mov
jecxz
jg
xor
addr16
inc
flds
push
daa
subb
push
mov
cmp
test
xchg
in
adc
lcall
sbb
sub
call
fldcw
inc
fldl
xchg
mov
mov
mov
lods
add
and
push
pop
filds
fs
lods
or
inc
cld
rclb
xchg
ret
arpl
in
sub
shrl
fnstenv
inc
outsl
pop
sub
adc
popa
pop
cld
mov
fcomp
cmp
jle
jb
and
mov
loop
mov
mov
jnp
pushf
out
stos
push
dec
jnp
ds
pop
push
cmp
into
or
inc
sub
lret
rclb
mov
mov
stc
pop
jmp
inc
rorl
into
push
push
jl
dec
sbb
pusha
sbb
mov
jge
sbb
sbb
jl
sahf
xor
scas
cmp
or
dec
nop
cmp
jecxz
sbb
dec
sbb
stos
pop
lods
mov
add
jne
or
cmp
mov
xchg
test
xchg
and
roll
cltd
add
fsubrs
mov
add
push
mov
xchg
shl
std
stos
inc
xor
add
adc
shrl
add
mov
test
lahf
sub
sahf
sahf
out
pop
sahf
push
popa
and
shll
push
cmp
sub
insb
fs
mov
sub
mov
shrb
mov
inc
push
into
dec
test
inc
jmp
xor
cmp
add
lds
mov
xchg
aaa
icebp
ljmp
inc
sbb
jb
in
sahf
imul
leave
movswl
jno
dec
and
xchg
fistps
xchg
je
lods
sub
push
fnclex
rol
rcrb
sbb
fistpl
rcr
mov
shrl
cmc
xor
pop
insb
pop
xor
inc
mov
insl
push
xchg
cmc
and
inc
call
mov
push
lock
into
test
cli
xor
pop
adc
fcoms
out
rorb
loopne
dec
insb
out
cmp
gs
pop
xchg
iret
roll
lahf
cmpsb
mov
lea
cmp
jnp
jmp
mov
xor
loopne
cs
mov
adc
fiaddl
jle
data16
or
aaa
fisubl
mov
rcr
lods
jno
bound
sbb
mov
and
jmp
xchg
in
lods
cmovl
and
jp
xchg
subl
jmp
cmpl
movsw
out
push
mov
int
daa
adc
inc
xor
popf
or
or
mov
ss
mov
popa
mov
lret
mov
sti
shl
mov
push
mov
loop
xchg
xchg
mull
cmp
jge
pop
punpckhbw
inc
xchg
or
notl
xor
lock
lea
sub
xor
shr
add
sbb
rcrl
fs
mov
pop
xchg
lahf
xchg
push
lcall
or
int
mov
push
lcall
in
jl
mov
jp
incl
in
inc
rcl
rorb
int3
icebp
jg
das
pop
sub
and
dec
in
scas
mov
sub
outsl
cmpsb
or
add
repz
xchg
cmc
add
xchg
lahf
pop
insb
sahf
inc
dec
bound
jno
nop
add
cmp
cmovae
sub
daa
cmp
outsl
fstpl
popf
leave
cltd
rolb
inc
loope
jno
rolb
xlat
lret
mov
xor
xchg
jb
mov
sub
push
mov
mov
add
lret
gs
inc
cmp
faddp
sbb
sub
xor
insl
fsubl
pop
nop
xor
pop
iret
dec
mov
divb
loope
lock
aad
xor
cmp
stc
scas
stos
mov
nop
xchg
jl
mov
sbbl
daa
mov
aam
jp
sbb
dec
enter
adc
addb
lods
sub
insb
add
roll
lods
sub
adc
and
stc
mov
cmp
push
mov
xchg
out
loope
push
jno
ret
popa
call
aad
ret
cmp
cmp
inc
mov
mov
js
and
ja
jo
loope
pop
test
pop
mov
jbe
shlb
pop
sub
testb
cld
int3
test
sub
mov
mov
movsl
inc
inc
bound
pop
mov
sbb
mov
adc
pop
inc
nop
jge
aas
mov
mov
clc
mov
xor
movsb
mov
push
lahf
sbb
outsl
dec
cmpsb
call
popf
add
adc
mov
repnz
or
dec
dec
inc
imul
divb
sbbb
inc
push
es
outsb
movsb
add
adc
sbb
dec
inc
xchg
inc
or
mov
cmp
stos
jb
shll
loop
jbe
pop
popf
xchg
and
dec
rcl
adc
or
xor
pop
movsb
dec
mov
pop
fadd
aaa
popa
xor
sub
or
out
ljmp
push
ss
mov
rorb
sahf
xchg
lea
rolb
pop
jmp
loop
bound
inc
aam
cmpsb
pop
fstps
pushl
fcoms
aas
xchg
cmp
sbb
cmpsl
call
mov
inc
aas
cmpsl
lods
cmpsb
fld
adc
outsb
sbb
ljmp
jno
add
adc
lods
sbb
push
cli
add
les
std
es
dec
inc
ds
icebp
mov
inc
mov
cmp
es
sub
push
inc
push
jmp
push
sub
js
test
sbb
ss
test
or
sarl
out
rcrb
movsb
xchg
cmp
dec
inc
mov
pop
mov
lods
in
and
pop
lock
sub
pop
lds
jmp
pop
or
ss
fstps
jb
ljmp
test
dec
xor
push
inc
pop
insl
data16
mov
jle
imul
decl
sahf
loopne
dec
leave
out
push
movb
inc
cmp
push
icebp
push
mov
imul
and
xor
aaa
push
cmp
mov
pushl
fcmovnbe
imul
pop
inc
fmul
jg
ret
lret
scas
and
push
push
push
outsl
rol
jb
add
decl
push
hlt
out
or
jno
push
insl
test
je
lods
sbb
cmp
push
mov
pop
fs
sub
pop
or
push
mov
xchg
in
add
mov
pop
jns
add
in
sbb
fwait
stos
jnp
arpl
outsl
fstps
and
jae
lcall
sbb
in
add
loop
pusha
sub
mov
mov
mov
rcl
cmc
icebp
push
or
mov
inc
xchg
shlb
mov
cltd
cmp
bound
adc
in
repz
scas
pop
mov
jnp
lret
xor
add
hlt
sub
arpl
mov
jnp
add
push
xchg
dec
mov
xchg
pop
push
push
push
mov
stos
jg
lods
cmpsb
daa
push
sbb
jns
enter
mov
test
mov
popf
jle
int
cmpsl
push
sub
bound
or
and
jo
xor
pushf
fisubl
dec
lods
ret
or
mov
push
subl
dec
aam
add
into
mov
pop
jo
sti
cli
mov
or
push
xor
int3
sbb
fwait
pop
scas
jns
movsl
es
mov
out
iret
push
in
push
push
int
fisttpl
test
je
repnz
leave
popa
xchg
dec
leave
les
movsb
adc
gs
rclb
sbb
inc
adc
leave
inc
push
jo
xor
in
mov
jo
scas
lahf
push
push
pop
shlb
cli
subb
xor
or
mov
mov
push
mov
and
es
push
stos
je
jge
insl
sbb
and
add
add
test
xchg
mov
mov
push
or
or
jge
daa
jg
cmp
fstps
push
pushf
pusha
fs
xchg
daa
cmp
pop
test
imul
repz
mov
mov
cmc
push
pop
mov
sbb
sbb
fstps
ljmp
or
divl
clc
jb
pushf
icebp
fisttps
mov
in
mov
rorl
xlat
sarb
mov
mov
lds
jno
and
gs
call
jp
mov
rcll
pop
sbb
ret
test
into
cmp
stc
cmp
mov
adc
lret
stos
add
mov
push
adc
adc
sub
jmp
std
dec
out
cli
or
add
leave
andb
popa
mov
and
push
dec
outsb
xchg
int
jns
or
xchg
xchg
and
in
inc
icebp
fimull
jae
stos
sbb
and
lock
dec
enter
pop
icebp
out
sub
rorb
push
lods
scas
adc
jb
test
jne
lods
lods
imul
mov
stos
repz
pop
and
pop
andb
jecxz
sub
loope
mov
xchg
mov
cmp
stos
pop
out
or
mov
jne
cwtl
mov
and
push
out
dec
fimuls
and
shlb
add
js,pt
int3
xchg
andl
push
fcmovb
aas
or
das
stc
cmpsl
and
sub
fadd
rcr
shl
xor
stos
loopne
mul
pop
lahf
or
rcr
aas
test
inc
cmp
lret
mov
aam
loope
jns
outsb
lret
sub
sub
scas
hlt
cs
and
xchg
mov
shll
movsb
or
mov
push
push
or
loop
gs
ljmp
xor
jmp
push
adc
pushf
clc
insb
mov
addr16
xor
js
sub
pop
cmpsl
insl
push
std
add
es
loopne
push
and
sub
inc
xchg
xor
js
test
inc
iret
or
xor
dec
lcall
inc
cmp
and
adcl
sbb
or
imul
bound
call
mov
leave
jne
rcr
sub
sbb
fs
mov
lea
and
pop
fwait
sbb
fwait
rcl
add
out
xlat
lods
sub
in
in
cmp
sbb
add
jno
adc
mov
pop
call
jae
addr16
sub
inc
jnp,pn
js
cmp
shll
jge
orl
subb
sub
test
or
inc
mov
cli
adc
testb
and
xchg
in
xchg
mov
cmpsb
mov
and
mov
loop
pop
adc
mov
cwtl
decb
inc
int
subl
mov
fmul
pop
jne
xchg
std
sub
stos
sbb
stos
ret
test
cmp
xchg
ret
pop
fsubs
sbb
and
jnp
cltd
mov
and
push
xor
cmp
orl
pop
and
jns
add
inc
data16
jp
xlat
and
jle
clc
cmp
mov
orb
dec
cltd
fnsave
loope
dec
sahf
jno
cltd
mov
shll
and
ret
jbe
mov
pusha
xchg
loope
stos
or
lahf
test
push
dec
gs
aaa
jecxz
jns
or
xchg
jl
pop
pusha
and
lods
inc
movntps
addr16
imul
mov
pop
ljmp
or
xor
push
insb
push
gs
cmpsl
ss
mov
mov
in
inc
adc
inc
out
sub
xchg
jbe
push
mov
mov
test
or
out
aam
out
ret
inc
cwtl
lods
add
fwait
cmp
inc
in
inc
cmp
std
les
cmp
sbb
out
dec
ss
pop
data16
enter
adc
arpl
loope
iret
and
mov
sub
cmp
or
jb
ja
pop
test
and
les
repz
je
jb
pop
aaa
loopne
mov
sub
out
fbld
push
fsubl
cmpsl
test
outsb
jb
nop
pop
cmp
xlat
pop
jmp
pop
xor
pop
les
shlb
mov
jle
sbb
xor
jge
push
pop
jl
icebp
shr
and
pop
xor
fwait
jge
pop
or
ret
cwtl
cld
out
mov
push
xor
rolb
pushf
dec
cmp
xor
decb
lcall
mov
enter
orb
mov
push
jb
mov
xchg
mov
test
cltd
mov
cmc
incb
dec
std
and
jo
bnd
mov
mov
repnz
bound
les
pop
loopne
incb
or
mov
lcall
das
dec
sbb
jmp
lahf
sti
std
cwtl
fcoms
add
fwait
imul
push
xchg
sbb
ret
jo
pop
jne
bnd
stc
pop
nop
shl
jnp
adc
repz
cli
pop
pushf
fstps
loopne
sahf
or
aas
std
stc
in
mov
jb
mov
pavgw
mov
sbb
cli
cmp
insl
pop
cli
adc
outsl
enter
or
jle
or
push
lods
cmp
adc
loop
int3
popa
fisubrs
or
int3
scas
push
sarl
insl
and
sub
mov
push
mov
xor
xchg
sub
aas
lret
cmp
out
arpl
xor
xchg
sub
rorb
out
out
pop
inc
popa
ss
dec
dec
das
test
in
nop
xchg
stc
jl
insl
adcl
sahf
insl
frstor
or
inc
in
scas
jne
mov
nop
cmp
add
xchg
loopne
xor
xchg
int3
add
out
inc
sub
push
outsl
movsb
sbb
aad
mov
adc
lea
xchg
xchg
xchg
and
stos
hlt
pop
push
movsb
and
push
daa
mov
cmp
xchg
push
lods
inc
sti
sub
xchg
push
inc
fs
or
jo
jno
insl
xchg
or
mov
mov
fidivrl
jge
adc
and
push
xchg
mov
xchg
push
nop
mov
icebp
and
repz
mov
in
mov
out
sbb
int3
push
xchg
fadd
adc
sarl
jae
stos
addr16
dec
daa
neg
sub
xchg
rclb
sbb
jo
ja
xchg
sarb
sub
sub
xor
cmp
dec
jle
jmp
pushf
enter
pop
out
mov
es
shll
fdivs
push
mov
fdivr
pop
mov
gs
enter
dec
cwtl
pop
jb
sbb
lahf
mov
xchg
xor
sbb
daa
lods
out
xchg
gs
ret
fisubl
js
cmpsl
xor
adc
psrlq
lahf
adc
sub
call
ret
rcll
arpl
outsl
test
adc
jmp
cmp
not
cltd
imul
mov
movsl
push
je
push
lods
mov
jns
test
repz
cmp
push
or
ja
xchg
jecxz
xchg
jecxz
mov
pop
push
dec
je
pop
lcall
xchg
jo
out
es
loope
lods
or
adc
sub
xor
push
fs
push
push
jmp
es
cld
xchg
sbbb
dec
outsl
das
adc
stos
jp
sub
sub
mov
cmp
andl
mov
jno
and
mov
lods
lcall
cltd
stos
push
std
cs
xor
and
jle
ja
cmpsl
in
out
sub
movb
fsubl
arpl
sbb
test
mov
push
jl
cs
jns
mov
enter
dec
xchg
mov
lret
icebp
push
aaa
bound
jae
mov
inc
std
outsl
stc
repz
adc
add
and
inc
and
xchg
imull
mov
sbb
mov
dec
dec
das
adc
xor
xor
fwait
mov
pop
sti
popa
pop
pop
rcrl
push
mov
mov
cmp
jbe
sub
fstps
pushf
in
testl
repnz
lods
mov
stos
add
nop
fisubrs
push
mov
mov
stos
sbb
jne
enter
aam
les
fsub
inc
cmpsb
sub
xor
sub
hlt
fcmovnbe
loop
lcall
scas
push
enter
xor
push
jmp
jmp
or
aam
jmp
mov
imul
rorl
sub
pop
popa
es
test
add
mov
xor
pop
sbb
notb
sbb
sub
movl
sbb
mov
cmpsl
lret
dec
fsubr
xchg
es
dec
push
cmp
cwtl
jge
aaa
mov
mov
and
int
pop
addb
ljmp
sub
xchg
xor
mov
enter
dec
jo
add
jae
iret
bnd
in
fwait
icebp
lcall
fcoml
push
cmpb
and
sbb
mov
fistps
outsl
loop
lret
xchg
bound
in
subb
outsl
and
std
mov
loope
dec
in
aaa
xor
sub
negl
ja
fiaddl
push
std
mov
or
orl
sarl
sbb
push
cmpsb
aaa
jbe
fabs
sbb
insb
add
pop
jmp
subl
repnz
das
and
cmp
mov
cltd
ljmp
pop
cwtl
add
out
push
data16
push
sub
popf
inc
xor
pop
popa
inc
lds
xchg
gs
lods
je
sahf
aaa
lahf
daa
andb
fcmovb
mov
ret
sbb
inc
jns
jmp
insb
xchg
scas
aaa
wbinvd
outsb
fistps
mov
pop
sub
or
lods
fbld
pushw
aas
and
cld
mov
sbb
adc
push
aam
mov
xor
popa
gs
inc
inc
mov
mov
clc
cmp
sbb
mov
mov
push
outsl
daa
sbb
lock
push
in
push
test
xchg
aas
push
inc
pop
imull
cmp
js
push
inc
sub
sbb
das
adc
push
push
cmp
insb
xchg
cmp
and
mov
or
in
mov
popa
data16
movsb
je
fwait
inc
jb
mov
add
cmpsb
add
mov
push
rcr
fnstcw
lods
out
bound
cltd
fwait
and
fdivrs
sti
cltd
cmpsl
xor
sub
lods
push
mov
xchg
dec
push
mov
icebp
ret
mov
lods
es
icebp
cmp
aam
mov
mov
test
and
imulb
mov
test
xchg
scas
pop
mov
xchg
xchg
inc
dec
push
jo
push
repz
push
and
or
pusha
js
addl
jae
cmp
stos
imul
push
movsl
pop
stos
cmp
sub
inc
adc
fcmovnu
mov
mov
sti
xchg
xor
lock
xchg
dec
insb
sbb
scas
or
cltd
pushf
sar
cmpb
xor
jno
lods
daa
shl
jge
inc
xor
lods
and
push
mov
or
lock
gs
cmpsl
mov
jle
jp
or
mov
out
pop
ret
xor
sub
ret
inc
sti
xor
dec
xor
lock
inc
loope
mov
xlat
leave
pop
out
xor
ret
je
inc
jns
pusha
imul
mov
xchg
xor
adc
jg
sti
mov
jecxz
bound
add
mov
pusha
les
test
in
jno
inc
fidivl
daa
pop
push
push
mov
dec
jg
cmp
lret
mov
jmp
test
xchg
dec
push
dec
push
sub
xchg
js
cmpsl
push
mov
call
sbb
xor
fucomi
clc
xchg
cld
mov
xor
fisttpl
out
pop
bound
xor
lret
out
mov
js
insb
push
jg
mov
cmpsl
inc
cmc
pop
mov
sbb
jb
cmp
adc
notb
hlt
test
push
popf
fcomps
xchg
aam
inc
xchg
xchg
cltd
incl
out
popa
dec
dec
stos
jbe
ret
dec
shll
sbb
bound
add
inc
stc
lods
in
les
int3
cli
pmulhw
sahf
mov
popa
mov
pop
or
jge
fnstenv
mov
cli
cltd
jg
jae
mov
lds
inc
xchg
mov
movsb
roll
out
test
fdivs
xchg
inc
pop
adc
xor
mov
clc
imul
loope
mov
cmp
mov
push
mov
mov
xchg
xor
lods
mov
inc
jae
mov
xchg
jmp
adc
push
inc
adc
cmp
imul
mov
stos
cmpsb
insl
sub
xor
mov
mov
sbb
out
popf
std
adc
stos
rcrl
sub
or
loopne
cmp
aam
out
jo
clc
out
arpl
test
fnstsw
imul
and
cli
test
push
jge
call
daa
sbb
xchg
imul
jle
adc
test
push
jle
or
adc
jb
lahf
shrb
jle
pop
xchg
mov
out
push
cmc
loope
sbb
xlat
mov
jmp
fdivr
jmp
call
jo
xchg
adc
data16
insb
js
filds
in
cmpsl
cmpsl
jns
out
dec
and
pushf
cmp
enter
imul
ja
xchg
add
add
or
in
ret
jmp
or
scas
rcll
fucomi
xchg
es
jmp
sarb
jge
notb
mov
sti
cmc
jbe
frstor
in
sub
mov
cld
stos
mov
cmp
decl
sub
ds
xchg
xor
add
dec
dec
or
int
stc
adc
sub
lods
xchg
dec
popa
and
jbe
fcmovnb
mov
push
fs
dec
das
adc
mov
xor
fiadds
loope
jae
jbe
out
adc
add
mov
outsb
jb
mov
push
dec
jbe
mov
pusha
xchg
addl
fsts
mull
push
fidivl
and
sub
sub
sbb
push
daa
fsts
mov
inc
cli
and
les
subb
cld
fs
pop
cmpsb
inc
lods
test
dec
scas
mov
call
enter
inc
adc
mov
lea
lahf
mov
or
sub
push
fs
ja
mov
mov
mov
dec
daa
mov
scas
in
addr16
lods
inc
cld
outsl
lock
adc
cmp
insb
jo
jns
subl
mov
and
pop
add
xor
adc
clc
in
dec
mov
rcl
and
out
cmp
dec
add
ja
pop
jno
inc
testl
fsubrl
mov
adc
out
mov
adc
cli
sbb
jne
js
jns
cs
lret
pop
cli
sub
dec
push
out
jb
insb
mov
push
push
mov
cmp
aas
shl
repnz
dec
mov
adc
xor
repz
test
icebp
push
jns
nop
clc
call
and
js
test
push
mov
add
sbbb
push
cltd
call
mov
push
xchg
call
test
imull
xor
cmpsb
or
imul
mov
leave
mov
push
jl
out
pop
xchg
and
int
jno
ret
cs
pop
stos
lock
loope
sbb
das
adc
sub
xor
jo
lret
sub
mov
push
in
mov
xchg
inc
push
rorb
push
adc
push
xchg
cwtl
add
test
mov
or
outsl
jbe
cwtl
jecxz
jg
test
xor
sub
imul
pop
int
jmp
callw
add
pop
push
sti
rorl
mul
add
mov
rcl
mov
addb
fcmove
arpl
shlb
adc
lods
imul
mov
cmp
dec
cmpsl
int
mov
rclb
cwtl
ret
rolb
sbb
call
shl
popa
xchg
rsm
sub
jecxz
mov
mov
push
lock
adc
inc
pusha
sbb
nop
mov
rcr
push
popf
jl
push
xchg
clc
adc
jg
in
test
inc
jbe
or
jle
std
xor
jo
sbb
sti
jle
ret
fnstenv
inc
fstps
mov
and
xorb
push
adc
neg
push
and
jmp
push
mov
xchg
popa
adc
sub
mov
aas
mov
lea
test
int3
mov
cwtl
mov
in
mov
mov
aam
jnp
mov
cs
sub
sub
repnz
jge
fnstsw
adc
xchg
popf
lcall
mov
xchg
lea
xor
lret
divl
mov
fisttps
inc
adc
cltd
out
cs
pop
pop
adc
popa
jo
adc
xchg
icebp
mov
sub
mov
leave
jge
mov
ljmp
ljmp
push
out
inc
xor
mov
pop
insb
pop
pushf
pusha
mov
xchg
cmc
pop
mov
inc
sub
mov
jb
imul
lahf
pop
cs
enter
xchg
pop
xchg
xor
mov
and
insl
les
xchg
pop
popf
push
push
pop
xor
in
leave
stc
leave
xor
and
cwtl
hlt
pop
movsb
loope
xchg
and
jo
mov
popl
mov
pop
dec
mov
cmp
and
cli
bound
mov
xor
sbb
outsl
jge
cmp
test
loope
mov
fadds
mov
sbb
daa
push
sbb
rclb
jp
cmp
jb,pn
pop
push
push
lock
stc
mov
andb
ljmp
lret
pop
dec
xor
lds
fnstsw
inc
andb
inc
ss
sub
jp
les
stos
dec
sets
cmc
cmc
jb
jl
addr16
int
bound
ljmp
sbb
jl
pop
lods
adc
add
cli
xchg
or
add
insl
data16
imul
sbb
jecxz
jmp
mov
imul
inc
or
insb
cmp
and
filds
lret
stc
inc
cmp
or
cmp
xchg
inc
bnd
dec
inc
pop
inc
push
leave
mov
pushf
in
dec
xor
pop
mov
ja
jg
push
xchg
jnp
mov
or
insb
lcall
in
and
shrl
iret
adc
movsb
mov
mov
jae
add
mov
cmp
aam
int
sub
xchg
mov
sahf
leave
movsl
cmpsl
jo
push
clc
es
sbb
push
shrl
stos
in
aam
jg
int
cmp
pop
frstor
sbb
test
adc
xor
adc
jne
rclb
fsubl
psubsb
mov
rcr
in
mov
or
mov
fwait
push
in
lcall
nop
mov
xorl
mov
adcl
mov
xchg
sub
cltd
mov
daa
mov
es
pushf
add
stos
mov
xchg
jb
mov
popa
lcall
outsb
jno
aas
shll
inc
mov
call
popf
push
inc
daa
shl
xlat
outsb
and
xlat
add
mov
cmpsl
roll
rcrb
scas
mov
andl
cmpsl
xor
loopne
pop
add
test
dec
mov
jmp
in
lret
cmpsb
jg
xchg
pop
stos
xor
xchg
add
gs
sti
xchg
addr16
in
jns
insb
cli
fists
and
lcall
cs
jne
adc
push
and
mov
xchg
fisubrs
push
lcall
mov
insl
gs
cmp
push
pop
mov
and
mov
test
cmpsb
shl
sub
repnz
cli
adc
fs
fldl
pop
cmp
mov
mov
adc
mov
xrelease
push
jo
and
cmpb
sbb
jns
push
outsl
and
lock
mov
fucomp
cmpsb
sub
mov
ja
xchg
jecxz
mov
or
cmp
int
test
cli
pushf
mov
fidivl
orb
cmc
or
dec
jb
cmp
fcoml
xor
sbb
pop
push
push
popa
mov
sarb
test
insb
add
rclb
xchg
in
cmp
ss
or
and
mov
sub
xlat
je
ds
lahf
stos
aaa
xor
xor
std
test
lock
mov
mov
xchg
xlat
leave
fcompl
jmp
std
call
scas
sub
jno
cmpsb
xchg
je
pop
cwtl
scas
mov
sub
cmp
out
jnp
iret
xchg
cld
fldenv
xor
or
ja
pop
rol
pop
pop
scas
icebp
xchg
pushf
pop
dec
push
pop
add
orl
outsb
xchg
sbb
int
mov
in
test
addr16
popa
sbb
sub
and
mov
imul
mov
jl
mov
mov
mov
ret
call
sbb
and
es
dec
imul
rcrb
data16
and
or
mov
and
pusha
lds
jns
sbb
inc
pop
add
sbb
mov
inc
jo
jae
mov
cwtl
pop
iret
push
fistpll
xor
sbb
sbb
jns
cmp
jmp
das
popa
cltd
cli
in
adc
aas
psubusb
ret
mov
xlat
js
sub
sbb
pop
or
repnz
xorb
adc
inc
inc
sbb
sub
out
jl
and
mov
sbb
sti
fnsave
or
mov
mov
mov
or
add
or
fcompl
jns
push
mov
iret
mov
cltd
out
cwtl
aaa
dec
xchg
test
je
jle
sub
add
mov
inc
test
dec
mov
in
sub
add
movsb
add
insb
ret
xchg
sbb
xchg
stos
mov
cltd
cmp
add
mov
xor
sbb
lods
adc
pop
or
sub
add
dec
xchg
sub
aad
es
je
lock
out
ds
sarl
xchg
aam
cmpsl
add
push
movsl
jle
sub
fsubrl
adc
fstps
clc
mov
pushl
in
pop
flds
add
add
fcoml
lcall
mov
push
bound
mov
jg
ja
out
sbbb
xchg
pop
icebp
push
pop
adc
xor
mov
cmpsl
pop
les
sbb
ja
ret
scas
das
fsubrs
ss
lock
lcall
jp
adc
mov
sahf
ds
loop
xor
into
or
pop
rorl
xor
push
insl
mov
xor
cmc
test
and
cld
outsb
mov
repz
daa
orb
enter
insb
mov
inc
or
xchg
jg
lods
mov
sbb
xchg
sahf
mov
cmp
lcall
and
mov
ja
inc
out
dec
adc
adcb
mov
add
xlat
stc
into
leave
fmul
int3
or
jle
dec
sub
mov
js
xor
shlb
stos
sub
adc
pop
cmp
push
pop
out
jl
daa
xchg
cmp
pop
adc
lret
xchg
xor
mov
dec
mov
dec
xor
and
arpl
int3
mov
xlat
lods
cmp
xor
pop
dec
call
lret
loopne
push
inc
stos
das
in
mov
mov
rcll
push
pop
lcall
xor
ret
jno
sub
cmpsb
cltd
and
cs
shr
int3
mov
int
pusha
lds
mov
push
call
sarb
leave
cld
add
jp
jle
test
or
jp
loop
jbe
aaa
xor
shll
pop
push
jl
mov
and
sti
jo
add
stos
pop
pop
mov
jecxz
push
jns
push
fisubrl
fnsave
pop
inc
imul
add
shrl
test
mov
adc
xchg
cmp
and
xchg
ficoms
and
je
ljmp
cmpsb
test
adc
cmp
jecxz
mov
mov
mov
xor
and
add
enter
or
es
xor
push
pop
lods
jl
jo
arpl
xchg
dec
sub
adc
aad
popa
lock
dec
or
adcb
jno
negb
pushf
push
pop
loopne
inc
incb
int
stc
xchg
mov
mov
cmp
jecxz
sbb
sbb
lahf
xor
jmp
pop
loop
ficoml
mov
aaa
mov
test
mov
dec
clc
out
cmp
out
jno
pop
daa
jecxz
adc
scas
dec
mov
or
mov
jl
sub
into
scas
scas
xlat
lahf
push
out
fcomp
repnz
and
push
push
adcl
push
cs
mov
sub
mov
es
jae
js
stc
loope
fwait
es
out
test
mov
sub
pop
jns
add
inc
js
jne
inc
adc
mov
shld
pop
mov
jle
out
ds
inc
sbb
in
mov
repnz
and
and
out
je
dec
test
pop
rcr
repnz
add
push
mov
inc
xorl
inc
push
xor
jle
loopne
xchg
in
push
lahf
dec
inc
hlt
in
jle
mov
push
and
mov
jnp
mov
orb
inc
into
test
sub
and
xlat
imulb
or
or
jbe
ss
mov
adc
movsl
sahf
jle
nop
dec
test
sbb
cmp
leave
int
hlt
shrb
cmp
push
mov
xchg
mov
test
mov
cwtl
flds
out
shlb
in
pop
xor
add
mov
pop
mov
jecxz
jno
cli
sahf
in
sahf
adc
insb
sbb
mov
and
ds
jle
add
arpl
and
mov
sbb
fiadds
movsb
mov
fnstsw
dec
xor
add
mov
test
scas
inc
test
lods
insl
fs
mov
add
pop
or
int
or
jmp
xchg
in
in
push
cmp
pop
sub
pop
cs
add
pushf
mov
mov
jae
adc
push
jg
mov
or
jp
addr16
test
dec
fwait
pop
mov
dec
js
sub
fstps
push
mov
imul
sub
mov
xchg
jge
andb
lahf
sahf
pop
into
dec
inc
hlt
cmp
inc
popl
je
jle
test
inc
jno
paddd
jb,pt
pusha
idiv
test
mov
aam
pop
ficoms
sbb
sti
mov
sub
lock
push
xor
aas
or
jmp
add
cmp
push
adc
test
fimuls
or
inc
lahf
clc
cmpsb
cli
xchg
imul
sub
adc
stos
sub
loope
movsb
or
mov
bound
into
aas
sbb
out
lret
cli
mov
inc
lock
aad
cmpsb
clc
add
xchg
out
mov
loop
test
loopne
leave
stos
cmp
push
dec
jae
mov
lea
shlb
outsb
jmp
sub
loop
mov
mov
inc
in
xlat
pusha
pop
mov
and
mov
xor
js
push
cwtl
or
daa
dec
mov
gs
in
lods
jb
pop
gs
push
dec
mov
push
sbb
mov
jbe
fst
repnz
dec
and
lods
push
cld
or
sbb
adc
mov
xorb
or
dec
cmpsb
xor
icebp
pop
or
hlt
addr16
shrl
ljmp
inc
movsb
rcl
pop
es
xor
nop
cmpsl
mov
lcall
add
es
movsl
cmp
lret
addr16
jmp
fsubs
dec
outsb
jl
in
dec
mov
xchg
jmp
mov
push
push
xchg
lods
add
mov
mov
out
jnp
pop
jge
or
sbbl
jge
sbb
adc
out
cmpsl
loopne
push
inc
adc
pop
inc
mov
xchg
mov
repnz
xchg
jmp
cmp
lcall
ja
scas
dec
cmp
or
xlat
xor
fidivs
fucomip
imul
adc
push
jle
sub
loop
sbb
xor
outsb
push
mov
adc
push
out
rcrb
aas
dec
cmc
pushf
fcoms
icebp
pushf
pop
adc
dec
jle
jne
cwtl
push
ljmp
xchg
outsb
and
and
icebp
aas
adc
stos
imul
cmp
mov
cwtl
mov
leave
cmp
out
mov
lahf
sahf
pop
sub
adcb
lcall
icebp
mov
adc
daa
bound
nop
push
data16
sbb
icebp
int
imul
jg
dec
test
sub
push
mov
push
dec
stos
pushf
jle
je
jno
xor
mov
push
jne
and
icebp
andb
xchg
adc
sahf
test
dec
repnz
jecxz
in
push
jo
inc
push
fiadds
or
cmp
cmp
lahf
add
pop
pop
or
push
sbb
add
js
mov
imul
mov
jl
mov
fs
fstpl
adc
fstpt
pop
cwtl
outsl
aam
movsl
inc
scas
cld
test
imul
in
pop
mov
dec
nop
mov
dec
ljmp
popa
jmp
push
iret
jg
pop
jae
and
jne
pop
insb
xor
bnd
jbe
gs
lea
shl
jns
mov
in
aaa
jo
xlat
pop
scas
push
sbb
adcb
jns
or
sub
mov
repz
movsl
call
push
xor
push
imul
out
sti
or
or
stos
push
mov
jae
inc
.byte
add
add
mov
pop
aaa
add
add
add
add
add
add
xor
add
js
add
lock
orb
add
add
addb
add
mov
pop
aaa
add
add
add
pop
add
add
add
add
jo
add
mov
add
mov
add
add
add
add
add
addb
add
call
add
add
add
add
add
add
add
xor
add
sbb
add
xor
add
dec
add
cmp
add
pusha
add
cmp
add
js
add
nop
add
cmp
add
test
add
rolb
cmp
add
fadds
add
lock
cmp
add
or
add
and
add
mov
pop
aaa
add
add
add
add
loopne
add
out
add
add
mov
pop
aaa
add
add
add
pop
add
jg
add
add
addb
cmp
add
cwtl
add
cmp
add
mov
add
enter
jg
add
add
cmp
add
clc
add
addb
add
mov
pop
aaa
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
pop
aaa
add
add
add
add
or
add
add
add
add
mov
pop
aaa
add
add
add
add
or
add
add
add
add
mov
pop
aaa
add
add
add
add
or
add
add
add
add
mov
pop
aaa
add
add
add
add
add
add
addb
add
add
mov
pop
aaa
add
add
add
add
add
add
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
pop
aaa
add
add
add
add
add
add
adc
add
mov
pop
aaa
add
add
add
add
add
add
and
add
mov
pop
aaa
add
add
add
add
add
add
xor
add
mov
pop
aaa
add
add
add
add
add
add
inc
add
add
mov
pop
aaa
add
add
add
add
add
add
push
add
add
mov
pop
aaa
add
add
add
add
add
add
pusha
add
add
mov
pop
aaa
add
add
add
add
or
add
add
add
add
mov
pop
aaa
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
pop
aaa
add
add
add
add
or
add
add
push
add
add
cmp
push
add
add
jo
push
add
add
movsb
imul
add
push
add
add
or
push
add
add
inc
insl
push
add
add
je
push
add
add
fsubrl
add
add
sub
push
add
add
add
add
add
jb
add
add
lock
add
add
add
js
add
add
jl
add
add
add
jg
add
add
clc
addl
add
addb
xchg
add
add
push
add
add
add
push
add
add
add
add
add
add
add
call
add
add
lea
add
add
or
push
add
add
and
add
xor
push
add
add
dec
nop
push
add
add
pop
nop
push
add
add
jo
push
add
add
test
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
sbb
mov
add
fldenv
ds
cs
mov
jmp
or
scas
and
nop
mov
out
fcompl
mov
leave
cld
and
loope
or
jnp
mov
popf
dec
out
pushf
cmp
ljmp
mov
popf
out
outsb
aam
cmp
adc
jmp
jp
inc
ljmp
jmp
mov
in
mov
sub
cmp
dec
mov
inc
jnp
popw
pop
in
xchg
jp
cld
lds
jecxz
push
xor
int3
out
push
or
jns
mov
mov
outsl
xor
mov
xchg
shll
testl
addl
sbb
das
push
inc
mov
in
hlt
add
repz
adc
cwtl
mov
sub
out
jp
mov
out
and
and
add
push
jne
adc
and
inc
mov
fwait
sub
sbb
and
add
fdivs
xchg
out
sub
ss
fcmovb
inc
ljmp
ljmp
add
dec
jl
fildl
xchg
inc
hlt
scas
in
es
inc
cmc
mov
mov
sub
out
jo
xchg
shl
pop
adc
and
cmpsb
mov
push
dec
pusha
and
mov
xor
mov
pusha
sbb
push
or
jne
add
pop
addr16
rcrb
cmp
repnz
and
mull
add
lock
mov
or
gs
pop
cmp
push
cmp
das
mov
repnz
mov
aas
scas
inc
mov
xchg
movsb
dec
pop
lahf
push
jge
add
gs
mov
mov
aas
jns
idiv
ss
cmp
pop
xchg
ror
mull
out
popa
xorl
dec
subl
push
outsb
rolb
pop
out
daa
mov
jnp
inc
mov
and
inc
mov
movsb
je
fiadds
sub
fcom
and
sub
daa
shlb
xchg
dec
sar
add
into
mov
pop
dec
jmp
or
ret
addr16
loopne
jae
frstor
sbb
test
pop
or
sbbl
ljmp
or
jnp
in
in
int3
leave
mov
cmp
jmp
lds
xor
push
add
stos
cmpl
sar
jne
dec
es
pop
int3
push
outsl
push
mov
xor
mov
and
xchg
call
out
cmpsb
int3
jmp
rcll
std
and
jecxz
sub
and
cmpsl
xchg
mov
cmp
popa
repz
or
aaa
pop
out
mov
mov
inc
push
int3
jl
sub
lock
insb
add
in
cmpsb
jbe
push
fs
cmpl
sahf
inc
push
lods
sbb
adc
shr
cld
notl
das
inc
and
push
outsl
mov
movsl
int3
xchg
andl
icebp
int
stos
leave
jno
popa
add
and
es
xor
aas
add
mov
add
aaa
js
jb
lret
push
sub
lea
dec
pop
idivb
dec
imul
push
std
fildll
outsb
fadds
mov
xchg
dec
jne
aaa
push
push
and
or
mov
mov
fdivrs
lret
sahf
adc
mov
in
adc
adc
jl
jne
and
js
sbb
or
test
leave
cmp
push
les
outsl
xor
pop
stos
mov
dec
pop
or
sti
cmp
subl
aam
jo
or
dec
test
xor
xor
mov
fdivr
sbb
xchg
hlt
jns
leave
push
ret
fsubs
out
dec
test
push
lahf
aaa
cmpsb
mov
pop
lcall
bound
add
pop
sar
xor
mov
add
push
push
xchg
mov
sub
sub
stc
fistpl
adc
fdivs
jae
or
sbb
adc
and
lods
orl
fisubs
mov
sub
mov
xor
push
inc
push
xchg
pop
jmp
dec
adc
mov
cmp
das
cmp
push
subb
movsb
insl
sbb
jo
sbb
daa
mov
xchg
lahf
scas
addr16
xchg
mov
or
shlb
dec
out
jl
test
in
repnz
cmc
add
pop
loopne
jo
es
shr
out
leave
pusha
fmull
dec
or
int
mov
jge
test
add
cltd
jmp
ficoms
cmp
test
mov
mov
out
add
push
enter
jmp
mov
hlt
je
scas
testb
mov
shl
jecxz
mov
cmpsl
mov
xor
and
les
cmc
sbb
dec
jl
fcmovnb
add
scas
enter
mov
sbb
daa
mov
bound
or
adc
out
leave
sahf
inc
lret
ret
dec
dec
mov
sbb
mov
adc
xor
das
dec
dec
mov
adcl
test
or
arpl
pop
ja
inc
test
fdiv
addr16
dec
out
add
sub
shrl
mov
imul
sbb
xor
mov
pushf
push
push
jno
rclb
mov
add
sub
push
and
or
sbb
stc
shlb
scas
bound
adc
in
xor
add
out
clc
iret
xor
xchg
shrl
lods
nop
xchg
mulb
and
push
xor
shrb
cmpsl
mov
mov
dec
mov
stc
or
movsl
stos
nopl
scas
mov
sub
sti
jle
or
iret
dec
mov
ret
cmp
ja
cmp
fsin
leave
and
sub
sbb
shrb
shrl
mov
das
out
xor
icebp
mov
pop
xor
push
and
mov
mov
inc
mov
jns
inc
sahf
push
cmpsl
sti
sarb
rolb
xor
and
lods
cmpsl
or
push
xor
mov
popf
rcrl
cld
mov
pop
jg
lods
sub
sub
add
push
mov
or
push
imul
mov
push
xchg
in
xor
xchg
std
ret
push
lahf
xor
ret
fnstenv
jecxz
pushl
fmull
repnz
adc
lock
pop
inc
inc
loopne
dec
mov
ret
in
pushf
fmull
ret
jns
cmp
pop
push
and
enter
mov
int
sub
pop
movsl
pop
psrld
enter
daa
and
or
jg
jne
pop
nop
cmc
aam
mov
stos
dec
aam
out
mov
mov
cwtl
iret
outsl
scas
push
lds
push
out
add
fidivl
pop
jl
sub
fnstenv
imul
jmp
mov
shr
mov
fcompp
sbb
xchg
ret
cltd
or
ljmp
test
mov
icebp
dec
push
jne
in
mov
jo
ljmp
dec
mov
or
mov
pushf
sahf
pop
xchg
ret
push
pop
and
lahf
pop
pusha
or
jge
pusha
jno
add
xor
leave
out
pushf
movsb
mov
cmc
push
mov
insb
adc
in
popa
gs
outsl
cmpsl
rorl
cmp
pop
loopne
gs
mov
xor
movsl
out
test
dec
cld
sbb
pop
mov
xchg
std
dec
push
es
inc
and
xlat
sbb
loope
inc
clc
mov
repnz
cs
fstpl
rorl
add
arpl
jnp
inc
jne
test
addb
popf
loopne
fisubrs
stos
ja
mov
popf
or
scas
adc
sahf
out
js
sub
adc
xchg
cltd
dec
sub
mov
add
nop
stos
fildll
mov
sub
mov
lret
push
scas
dec
jb
inc
jb
and
leave
mov
xor
daa
ficompl
sub
movsb
bound
xor
sub
repz
int
in
pop
add
mov
push
sahf
push
stos
sti
ljmp
dec
adc
repnz
jmp
dec
hlt
out
pop
dec
inc
inc
out
sub
sbb
xchg
rcrb
lods
out
into
jmp
cld
iret
pop
out
add
lret
sbb
fldt
out
xchg
mov
enter
cmpsb
jmp
push
mov
in
or
sbb
daa
mov
fdivrl
mov
lods
sub
sub
aaa
push
cmp
fldcw
pop
loope
jae
loopne
std
cmpsb
adc
test
adc
fwait
scas
fnstcw
fucomi
or
push
divb
imulb
xor
xchg
fdivl
in
hlt
inc
scas
cmp
and
hlt
mov
and
cmp
xchg
sbb
xchg
movsl
add
test
xor
or
pop
inc
test
call
adc
sbb
cmp
jp
add
pop
sahf
mov
sub
pusha
xchg
inc
dec
popf
nop
orb
leave
cld
data16
dec
sub
mov
jb
cmp
jb
mov
jno
inc
and
bound
fmull
or
jno
in
xchg
or
cltd
dec
xlat
and
mov
movsl
addr16
int3
add
mov
cwtl
out
pop
inc
lret
insl
fisttps
sbb
mov
mov
aaa
push
mov
adc
pusha
inc
daa
mov
jno
cld
xlat
xchg
fdiv
loope
iret
out
mov
mov
lret
mov
xlat
sbb
gs
push
sahf
mov
test
mov
ret
or
xchg
mov
xchg
add
aam
adc
dec
pop
mov
jmp
cld
add
dec
dec
jnp
fdivr
mov
stc
mov
shl
rcrb
add
pop
pop
js
sbb
and
jle
xor
xchg
popf
cmc
adc
jb
xchg
mov
cs
push
pop
push
xchg
push
icebp
lea
jbe
dec
lock
mov
les
into
sti
mov
hlt
out
es
mov
pop
cltd
scas
and
fnsave
jmp
xor
push
xor
loop
ds
cmc
bnd
ljmp
xchg
pusha
aaa
ficomps
add
cltd
scas
movsl
subb
pop
push
test
ss
test
ja
push
lds
addr16
mov
pop
push
sub
pop
cmp
jne
xchg
dec
jnp
ljmp
fidivrl
shrl
add
popf
scas
and
stos
jge
adcb
enter
mov
xchg
sti
cmp
mov
and
repnz
xchg
call
loopne
rclb
int3
mov
fidivrl
xchg
mov
repz
lock
jmp
push
fwait
dec
xchg
test
movsl
scas
add
and
mov
add
mov
jmp
inc
jle
dec
jg
mov
in
je
push
test
movsl
lret
xchg
shll
icebp
sti
shrl
push
imul
inc
pop
test
xchg
adc
jp
aam
pop
ret
push
clc
adcl
loopne
pop
cld
mov
pop
iret
jnp
loop
adc
sbb
mov
xor
xor
and
dec
sbb
aas
rcrb
or
ja
cmpsl
in
push
jl
or
leave
inc
jecxz
jnp
or
mov
xchg
cmpsl
repnz
dec
orl
xchg
pop
jl
adc
stc
xor
inc
call
jmp
xchg
sbb
ja
fs
xor
jno
lods
xchg
sahf
in
cs
enter
aaa
add
or
dec
int3
cmp
mov
mov
sti
repnz
nop
rcr
add
fimuls
arpl
xchg
movsl
pop
adc
sbb
dec
cmp
and
mov
sbb
add
inc
jp
and
add
cmp
out
testl
pop
or
jge
jp
test
fcmovnu
cld
lods
cltd
pushf
xchg
adc
sti
imul
sti
je
jecxz
and
pop
dec
int
sub
jb
sbb
in
outsb
and
adc
bswap
ret
ds
out
bound
push
xor
icebp
cld
decb
enter
clc
int
repnz
fldl
stc
push
in
pushf
or
sub
movsb
push
and
inc
fcmovne
push
dec
ljmp
sbb
icebp
sbb
cmp
xchg
aad
mov
std
.byte
cwtl
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
push
sbb
pop
call
mov
mov
test
xor
imul
or
movb
fstps
jmp
adc
in
add
push
dec
dec
outsl
jl
add
movzwl
push
mov
pop
mov
pushl
xor
pop
mov
add
jns
mov
sub
mov
sub
mov
push
mov
popl
and
sub
push
push
mov
pop
pop
sub
jne
jmp
xchg
pop
add
and
sub
xchg
lahf
mov
cli
mov
out
push
movsb
mov
repnz
out
inc
popl
sub
inc
add
sub
adc
inc
mov
jg
jno
cmp
aas
ret
ljmp
mov
rcll
or
mov
pop
shrb
mov
cmp
pop
shlb
ret
dec
and
addr16
lods
sub
mov
pop
rolb
mov
pushf
aaa
pop
shlb
fisttpl
xor
arpl
jne
xchg
sub
add
inc
mov
hlt
mov
loop
lods
dec
add
fdivrs
cmp
xchg
fadd
lods
lods
mov
shr
loope
cmp
out
loop
mov
es
fwait
dec
jb
movl
ficoms
cld
or
leave
cs
push
push
mov
pop
sarb
and
xchg
in
std
imull
enter
lds
js
shlb
lds
imul
inc
imul
or
outsb
push
gs
push
mov
out
ds
lods
ljmp
and
dec
shlb
dec
mov
and
mov
into
lods
popa
jp
mov
rol
lods
cltd
hlt
inc
adc
xchg
push
jo
pushf
and
inc
cld
pop
push
movsl
xchg
loope
pop
pop
loope
les
push
shr
pop
mov
or
xor
jno
xor
inc
push
mov
loopne
sbb
lea
mov
push
sahf
scas
popa
rol
mov
popa
stos
mov
popa
shll
jbe
ret
ret
mov
push
mov
jg
jl
adc
dec
pop
daa
fisubl
fimuls
inc
mov
sbb
sbb
loop
stc
repnz
dec
xchg
das
mov
leave
adc
out
and
fisubrs
dec
push
jb
cmp
sub
mov
aam
and
or
cmp
fisubrs
sbb
out
inc
pop
and
fiadds
ljmp
shl
movsl
xchg
sub
in
fnstenv
dec
fistps
jo
dec
mov
fldl2t
push
fwait
mov
inc
mov
shl
aas
mov
inc
push
mov
movsl
jb
insb
jg
sbb
sub
fiaddl
mov
cmpsl
cli
mov
shr
cltd
pop
mov
fisubrs
xchg
push
dec
xchg
outsb
inc
fst
lcall
mov
adc
sub
pop
jne
and
sahf
gs
xor
sub
adc
lahf
lds
ret
cmp
xchg
sub
imul
int3
out
fsubp
mov
pusha
and
pop
inc
clc
sti
movsl
jmp
test
jbe
enter
enter
adc
push
dec
test
xor
int3
je
xor
jmp
jp
fcomps
xor
ds
test
inc
push
push
jle
xor
test
mov
or
loop
clc
dec
test
inc
inc
xor
test
mov
arpl
dec
test
sub
int3
and
mov
sub
cld
push
movb
sub
lahf
and
rcll
cld
ljmp
dec
test
cmp
sbb
sti
sarl
jmp
push
es
es
xchg
cld
sub
vcvtsi2ssl
cld
pop
decb
sub
sti
pop
pop
xor
je
dec
test
movsl
aad
clc
sub
iret
es
test
jp
insl
clc
sbb
fisubrs
test
inc
out
dec
test
les
pop
dec
test
mov
dec
int3
je
dec
test
mov
ret
pop
dec
test
stc
dec
test
mov
dec
test
mov
xlat
sahf
cld
sub
lds
sahf
movsb
sahf
cld
sub
fisttps
int
std
sub
mov
sbb
jne
dec
test
movsl
xor
add
mov
xchg
dec
and
notb
sub
es
mov
sub
inc
xchg
push
jne
dec
test
jp
and
cmpsb
push
sahf
mov
int3
cli
movsl
int
std
sub
mov
sbb
inc
loop
cmpsb
push
xchg
std
loope
adc
sbb
test
push
jne
dec
test
mov
inc
xchg
cld
sub
sti
les
cli
jno
jecxz
push
cwtl
out
loop
leave
test
les
das
scas
mov
test
sub
cld
sub
cld
sub
pop
cmpsb
movsb
and
test
dec
test
ret
lret
cmp
scas
xchg
cmpsb
lahf
xchg
dec
pop
dec
pusha
pop
outsl
lods
fs
imul
cmp
scas
xchg
int3
pop
cld
sub
xchg
dec
pop
dec
pusha
pop
outsl
dec
ljmp
ret
scas
cmp
fwait
shl
pop
lret
inc
in
pop
inc
imul
cmp
scas
xchg
roll
bound
mulb
gs
dec
test
sbb
shl
pop
lret
inc
in
pop
inc
imul
cmp
scas
xchg
mov
lods
jae
dec
test
sbb
shl
pop
lret
inc
in
pop
or
in
cmp
scas
xchg
mov
inc
sub
pop
mov
dec
jle
clts
bound
dec
test
sub
daa
and
fwait
ret
scas
inc
sbb
shl
pop
lret
inc
in
cmp
cld
int
call
sub
fildl
push
insb
push
pop
mov
mov
adc
in
jecxz
sbb
dec
lret
jmp
mov
into
pop
push
mov
les
cmpsb
mov
jecxz
inc
mov
xor
sub
mov
mov
sub
cld
movsl
or
push
orb
pop
dec
test
sbb
cld
sub
loop
jo
push
shlb
sahf
cld
sub
push
test
dec
adc
cld
sub
or
sbb
lods
sahf
cld
sub
mov
sub
data16
dec
push
repz
cmpsl
fcmovnu
sub
int
dec
test
movsl
add
sti
in
je
dec
mov
add
cmp
jge
dec
cmpsb
arpl
cltd
insb
std
gs
sahf
sub
dec
cmp
dec
sahf
lds
dec
inc
test
inc
andl
fcmovnu
sbb
leave
jge
or
mov
into
add
inc
inc
iret
mov
pop
cltd
jp
cli
sub
push
adc
mov
test
sub
cld
sub
cld
sub
cld
sub
cld
sub
cld
sub
cld
in
test
dec
test
push
test
sub
cld
sub
dec
sbb
nop
dec
mov
dec
mov
sub
nop
cld
sub
cld
sub
cld
sub
cld
sub
cld
outsl
clc
or
mov
insl
gs
xchg
sbb
test
std
cmp
dec
dec
lds
jb
and
cmp
push
dec
mov
cltd
sub
loope
call
add
dec
dec
xor
adc
lock
ljmp
aam
push
jns
inc
ja
insl
add
adc
dec
sub
imul
sbb
stos
out
ljmp
add
adc
and
mov
popa
movsb
rol
inc
or
sbb
jmp
sbb
mov
fistpl
xor
or
rclb
into
mov
mov
mov
fistpll
dec
and
add
adc
or
imul
add
or
mov
cmp
fs
inc
push
pop
mov
push
gs
push
mov
or
fwait
lea
pusha
push
cli
xlat
lds
pslld
dec
test
clc
mov
orb
push
adc
rcll
cwtl
push
in
lods
mov
sahf
dec
and
stos
sti
sbb
dec
add
mov
int3
mov
std
inc
fmuls
xchg
add
les
sub
adc
cwtl
fstps
xchg
loopne
pop
pushf
stos
push
sbb
sub
mov
mov
cmp
jno
mov
mov
lret
rolb
pop
inc
jno
mov
cmp
pop
test
icebp
push
mov
sub
cs
mov
cld
testb
push
popa
pop
jbe
in
mov
xchg
cltd
scas
cs
fimull
test
jl
aas
xor
cs
dec
arpl
and
iret
pop
add
movsl
mov
push
mov
hlt
std
sahf
sub
call
dec
js
pop
test
sub
cld
inc
mov
nop
mov
mov
mov
addl
mov
pop
inc
cmpb
inc
fidivl
push
cs
cmpsb
shlb
dec
test
cli
test
jl
push
mov
imul
std
or
sub
inc
aam
xchg
add
in
mov
and
xchg
lcall
cmp
cmp
sub
ret
in
mov
test
sbb
lds
addr16
mov
sarl
jb
xchg
xchg
dec
sbb
cmp
xchg
sbb
sarb
xchg
fninit
movsl
iret
push
mov
arpl
les
inc
std
rolb
pop
cld
sbb
jnp
adc
push
ja
sarb
dec
loope
mov
incb
jmp
add
mov
add
add
or
add
add
add
adc
lock
add
add
add
lods
push
add
lods
push
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
lods
push
add
stos
push
add
push
add
lods
push
add
push
add
lods
push
add
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
lods
push
add
scas
push
add
lods
push
add
scas
push
add
lods
push
add
push
add
lods
push
add
push
add
gs
jne
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
gs
xor
fs
insb
add
gs
xor
fs
insb
add
imul
insb
add
jb
imul
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
gs
insb
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
push
add
add
add
push
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
add
scas
push
add
add
add
scas
push
add
add
add
scas
push
add
add
add
scas
push
add
add
add
scas
push
add
add
add
add
jae
jb
gs
je
imul
gs
jne
jb
push
popa
insb
jne
inc
js
add
add
je
gs
outsl
popa
jb
push
jns
add
add
gs
je
push
imul
inc
add
add
jb
popa
insb
imul
arpl
add
jb
jne
jb
push
popa
insb
jne
inc
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
pop
push
jb
arpl
outsl
jne
gs
jbe
outsb
je
add
push
push
js
arpl
gs
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
add
add
cmp
add
add
dec
sub
mulb
gs
ja
into
es
adc
bound
arpl
subb
xor
inc
xchg
out
xor
push
sbb
fcmovb
mov
xchg
loopne
pop
xor
xor
jecxz
push
outsb
cli
insl
rcrl
lahf
hlt
lret
mov
xchg
cmovp
int3
lcall
push
mov
push
sub
pop
sbb
orl
icebp
xchg
mov
pop
xor
push
ja
sub
std
jge
mov
cli
out
pop
sbb
xchg
xchg
xchg
cs
adc
lea
test
or
sub
xor
aas
xlat
js
imul
lret
mov
in
mov
jne
insb
add
xor
fisubrl
add
push
mov
leave
dec
cld
cld
cli
cli
cmp
sahf
add
icebp
pop
jp
inc
cli
popa
sub
jg
xor
xor
cmpb
sarb
mov
pop
mov
jnp
pop
int3
mov
aas
out
idivl
ss
mov
pop
cld
mov
mov
jp
ror
leave
jge
nop
fwait
xor
push
sbb
rolb
call
and
lahf
and
in
sbb
jg
cmpsl
fwait
or
bound
sbb
pop
sbb
mov
inc
sbb
out
fstps
and
js
add
and
inc
call
cltd
into
fadd
push
imul
jp
mov
hlt
or
xor
add
push
dec
orb
std
das
popa
fadd
xlat
mov
xor
pop
aas
xchg
ds
xchg
fcoms
dec
into
cmp
imul
sub
out
sbb
movsl
mov
lods
rclb
inc
push
stos
push
xchg
cmpsb
xchg
aaa
jne
repz
adcl
fisttps
xlat
adc
ret
sbb
movl
sbbl
call
int3
push
test
xchg
nop
adc
pop
xchg
xchg
inc
lods
push
sub
loop
xchg
jno
mov
xchg
pop
aas
imul
popf
push
dec
leave
cwtl
cs
lods
inc
sub
lret
inc
push
and
pop
subb
inc
dec
popa
inc
dec
sbb
nop
enter
in
xchg
lret
std
testb
cltd
addr16
lret
push
scas
adc
loopne
dec
repz
push
clc
into
clc
push
stos
jge
iret
loop
jle
aam
jae
popa
pusha
shlb
push
cld
cmp
out
into
lock
add
sbb
xchg
push
mov
push
hlt
cmp
lret
mov
xchg
cli
sbb
imul
cld
and
adc
cmp
imul
cmp
sbb
mov
aam
stos
ret
negb
jns
dec
scas
add
dec
outsb
xchg
mov
sbb
xor
leave
sbb
enter
aad
pop
inc
and
test
inc
or
jbe
jle
das
test
inc
cmc
mov
pop
mov
sbb
pop
jno
sub
push
pop
xlat
js
cmpsb
mov
pop
mull
ds
ds
notb
insl
inc
daa
jb
aad
mov
popa
push
mov
fsubr
jne
insb
aad
jmp
test
or
push
popf
mov
adc
repnz
loopne
xchg
push
inc
push
clc
mov
sbb
loope
inc
aad
mov
mov
daa
test
popa
dec
xchg
cltd
inc
orl
stos
ss
or
lea
push
mov
incb
sub
mov
push
mov
jae
insb
jl
cmpsb
push
lret
inc
repz
xor
pop
iret
xchg
dec
mov
push
out
in
leave
xor
hlt
into
fnstenv
inc
test
jns
fucomp
and
or
shrl
jmp
mov
inc
inc
pusha
and
inc
mov
cltd
inc
sub
cmc
push
outsb
jp
add
fbld
mov
xor
xchg
ljmp
cmp
lcall
adc
inc
ret
or
les
sub
fcmovb
xchg
clc
inc
add
and
stos
mov
dec
das
shrb
lods
ficoml
cwtl
das
lds
sbb
aad
loop
jecxz
in
cmp
xchg
repz
and
xchg
xor
or
andl
lcall
mov
out
mov
out
push
in
fsubr
ret
imul
lcall
stos
dec
mov
push
add
lret
mov
jae
repz
leave
out
imul
aaa
mov
and
sbb
bound
mov
mov
mov
xor
sbb
daa
clc
lret
and
pop
lcall
sarb
adc
inc
fcomps
mov
repz
xor
arpl
rclb
fisubrl
fwait
jns
cmp
fstps
cmpsb
xor
outsb
push
xchg
mov
int
lds
popa
aad
loop
jnp
imul
xchg
mov
mulb
xlat
adc
inc
fdivl
inc
push
lcall
mov
fnsave
insb
inc
dec
jp
cmp
xor
icebp
outsb
mov
jns
outsb
das
xchg
xor
das
sbbl
lods
out
nop
mov
lret
daa
pushf
push
fildll
inc
ret
popf
mov
cmpsl
fldpi
fimull
push
les
xor
mov
fwait
jns
mov
rclb
jge
push
nop
dec
cld
andb
sbb
xchg
pop
push
outsl
scas
in
imul
out
popf
dec
push
pop
mov
orb
cmp
scas
clc
mov
cmc
xor
lahf
test
fwait
inc
filds
jo
inc
sahf
mov
jmp
xor
fmull
mov
xor
insl
in
out
icebp
mov
inc
int3
jns,pn
push
sarl
add
xor
xchg
mov
scas
outsb
mov
in
movsb
pop
frstor
push
xor
xor
or
notb
jne
pop
adc
sbb
or
or
push
add
nop
or
iret
lds
js
sti
and
xchg
shll
inc
ja
faddl
loopne
ret
pusha
mov
lea
popa
inc
mov
pop
hlt
jns
sbb
icebp
sbb
xchg
cmp
and
dec
mov
jmp
scas
aam
aam
jae
push
jmp
push
cmc
sbb
xor
mov
enter
fcomps
sahf
lea
jbe
adc
ret
ss
dec
sbb
xlat
addr16
in
rorb
filds
stos
mov
testb
loope
daa
aaa
jmp
mov
mov
push
mov
xchg
shufps
outsl
insl
sub
mov
push
test
inc
jp
dec
sub
test
pop
add
bound
jl
pop
lods
sub
inc
mov
dec
out
sti
jb
insl
hlt
add
popf
jns
andl
cmp
mov
push
mov
movsb
and
addr16
loopne
out
cmp
jb
inc
not
adc
std
cwtl
aaa
sarb
xchg
ud2
js
jg
xchg
ds
decb
in
sti
inc
scas
flds
adc
not
cld
xchg
cmpsb
or
lret
scas
fistpl
push
aam
mov
cmp
rorl
adc
ret
mov
mov
aaa
les
cwtl
rolb
xor
sbb
push
insb
mov
sbb
push
jmp
mov
adc
rorb
sub
pop
repnz
pop
ss
sbb
push
inc
push
adc
outsl
or
pop
jo
inc
lahf
aas
jg
and
out
sete
stc
xlat
mulb
mov
pop
mov
add
sbb
add
loop
loopne
mov
fisttpl
imul
fbld
daa
fisubs
or
jp
stc
lods
jg
test
jg
lods
push
dec
jle
in
jmp
pop
test
sub
into
and
sub
and
test
movsb
jbe
jo
sbb
sub
rclb
add
push
in
mov
pop
mov
mov
arpl
dec
or
jl
mov
clc
add
lret
rolb
cmpsl
pusha
sub
cmp
imul
inc
mov
jb
sub
xchg
jge
in
inc
data16
scas
inc
addr16
push
mov
leave
lret
mov
lods
fs
dec
fwait
test
pop
sbb
iret
pop
vandpd
in
out
movsl
mov
test
push
jbe
scas
mov
pop
mov
xchg
cmp
js
int
lods
pop
sbb
out
and
sub
push
add
fdivrs
mov
sub
pop
sub
test
cld
mulb
lock
inc
add
push
or
lret
out
adc
and
cs
stos
mov
sbb
dec
clc
js
pop
ja
sub
repnz
push
out
mov
aad
adc
roll
xor
pop
rorb
cli
iret
xchg
in
or
xorl
or
pop
ficomps
leave
jb
mov
sbb
xor
or
xchg
roll
inc
sahf
and
cs
adc
filds
dec
xchg
cwtl
sbb
pop
add
pop
pop
add
jnp
mov
xchg
jo
lock
lahf
dec
std
popa
sbb
mov
rcr
pop
sbb
repz
mov
cmc
or
dec
cwtl
cmpsb
loopne
outsb
add
mov
xor
pop
les
fisttpll
pop
xchg
dec
jne
lahf
mov
out
test
sbb
mov
xchg
xchg
shlb
mov
pop
add
ja
test
and
jl
ret
adc
mov
pop
fwait
scas
shll
jmp
pop
dec
ljmp
daa
mov
pop
adcl
add
mov
lods
fbld
mov
lea
add
adc
pushf
mov
push
jo
mov
push
xchg
xchg
movsl
int
gs
fnstcw
rorl
mov
xorb
sub
adc
dec
jmp
push
mov
lcall
enter
pop
xor
cmpsb
scas
repnz
and
loop
movsb
and
lcall
or
and
mov
test
jbe
popf
push
arpl
push
rcrl
sar
sarl
push
loop
mov
lahf
xchg
mov
cmc
push
pop
pop
cmp
or
inc
mov
ret
cld
testb
or
lea
mov
cmp
lods
adc
ss
sahf
inc
mov
add
pop
cs
nop
sub
in
or
je
xor
jbe
scas
mov
das
enter
mov
and
test
leave
sbb
dec
add
push
sahf
or
dec
iret
adcl
mov
xlat
xor
and
ds
pop
into
fists
jmp
jle
inc
push
xchg
rcl
sub
xor
pop
push
adc
push
stc
jo
sti
mov
adc
out
in
mov
push
hlt
pop
clc
lds
xor
fs
insb
pop
mov
jnp
and
mov
xor
gs
inc
in
rcll
add
xlat
add
test
aam
cmp
or
negl
movsl
cmp
mov
inc
pop
xchg
mov
test
jo
in
nop
movsb
jne
je
mov
pop
mov
push
adc
cs
pop
sub
out
out
and
adc
fidivrs
imull
out
dec
xor
lock
daa
out
sti
dec
push
shll
arpl
std
cmpsl
mov
inc
adc
sbb
ja
daa
insb
mov
cmc
mov
xor
or
lret
mov
bound
mov
jecxz
xor
mov
loopne
lret
xchg
inc
rcrl
int
xor
pushw
pop
jmp
mov
fsubr
cmpsl
mov
lret
and
scas
mov
mov
adc
inc
ds
jmp
jmp
mov
movsl
mov
mov
jle
insb
sub
mov
sbb
int
add
cmpsl
or
push
sbb
and
xor
test
and
xor
in
ficomps
inc
push
jbe
das
loopne
and
in
push
int
sbb
xchg
in
scas
xor
int
mov
pusha
jne
mov
mov
mov
in
mov
das
adc
adc
or
pusha
mov
xor
sub
inc
add
cmp
mov
icebp
scas
stos
xchg
cmpsb
and
xchg
stc
ja
sub
test
out
dec
stos
jecxz
imul
cmp
inc
or
xchg
repnz
lock
sub
idivb
mov
fnstenv
dec
mov
adc
cwtl
mov
xlat
xchg
lret
xchg
fidivrl
ret
xor
lea
fcomip
mov
arpl
icebp
or
add
nop
aad
fstps
mov
nop
or
popf
sub
cli
aas
push
flds
repz
aas
inc
sbb
inc
lahf
das
pop
fadd
rcrl
jno
jmp
out
pop
sub
je
fistpll
shll
mov
gs
jp
arpl
sub
xor
and
mov
xchg
push
jb
je
mov
add
push
daa
cmp
mov
shll
int
adc
dec
aam
fwait
ds
scas
fisubrl
adc
and
sub
loopne
sbb
mov
cmpsl
stos
out
xchg
repz
xchg
push
es
cmp
rorb
pop
and
js
mov
divl
xchg
gs
add
lods
cmp
test
and
addr16
int
and
stc
xor
adc
jmp
xchg
xor
dec
into
mov
jp
add
mov
or
push
inc
push
sbb
pop
inc
push
xchg
mov
lahf
push
inc
movsb
sarl
aaa
cmp
test
vpavgw
xchg
add
adc
mov
addr16
fimuls
sarl
push
cltd
cmp
cltd
es
cli
fwait
mov
pop
pop
fisttpll
mov
add
sahf
fstpl
testb
inc
jb
insb
push
aam
adc
xchg
adc
stc
inc
fxch
jg
iret
xchg
and
mov
mov
xor
idiv
push
cmpsb
cmp
add
arpl
fcos
mov
mov
hlt
jbe
movsb
jnp
clc
add
or
sub
xchg
pop
addl
mov
xchg
mov
inc
je
push
je
arpl
xor
cmpb
inc
scas
test
stos
sub
jo
gs
outsl
out
inc
mov
cmp
pop
int3
insl
addr16
fcomip
out
nop
dec
lods
fwait
scas
sub
loopne
lahf
aad
xchg
fmuls
sub
mov
popa
jb
mov
lds
scas
aas
push
orb
xor
inc
stc
mov
xchg
and
out
jne
pop
inc
je
addr16
in
sbb
in
into
sbb
xor
push
arpl
add
adc
les
push
mov
add
xchg
xor
iret
sahf
je
idivl
adc
dec
test
bound
xchg
pop
test
jecxz
push
cmp
pop
dec
out
daa
jb
push
mov
mov
add
rcrl
lret
ret
adc
dec
xor
xchg
lahf
jb
jle
in
jnp
mov
xchg
xchg
jmp
xor
popa
test
loop
xchg
in
or
clc
dec
mov
fdivl
lds
mov
je
mov
hlt
pop
cmp
dec
pop
loopne
imul
test
xor
cmp
adc
and
inc
fwait
add
dec
es
ror
mov
fwait
jle
loopne
jae
arpl
push
inc
int
sub
sub
mov
xchg
mov
jns
out
jae
popw
or
mov
in
shl
sbb
test
jl
jo
sub
or
in
jp
cmp
inc
jnp
add
inc
stc
mov
test
arpl
mov
jb,pt
xchg
scas
pusha
pop
leave
fstl
jl
or
fiadds
xchg
cmp
ss
mov
mov
out
outsl
movsl
push
mov
cmp
imul
stos
mov
lds
into
fmull
dec
lock
fsubl
xchg
fwait
outsb
cmpsb
popa
into
rcll
repnz
aam
int
stos
mov
adc
gs
add
sub
pop
or
sbb
mov
mov
adc
insl
sbb
fcomp
xchg
aaa
sub
int
in
xor
xchg
dec
lock
mov
jbe
adc
mov
add
lret
pop
cmp
push
insb
sub
add
cmp
mov
jno
repnz
xchg
mov
scas
jg
aaa
mov
pop
jns
dec
mov
mov
cwtl
mov
test
jb
stos
mov
and
mov
mov
mov
call
pop
lods
or
lret
repnz
ljmp
insb
mov
sahf
pop
jge
icebp
xchg
repz
push
rorl
jns
pop
sub
jmp
das
pop
ret
cmp
pop
orb
enter
loop
pop
mov
add
leave
jp
test
mov
or
and
int
rorl
pop
push
jecxz
dec
scas
sarl
mov
mov
outsb
xchg
xchg
cs
sub
cmpsl
xlat
hlt
orb
shrb
fimuls
aas
jne
mov
and
lret
sbb
cli
jl
iret
rorb
jl
sarb
neg
insb
cmpsb
adc
push
jo
dec
sub
int
adc
pop
mov
pushf
clc
push
call
pop
out
sub
xor
jo
lret
cmp
push
out
sbb
mov
scas
inc
jo
push
xchg
out
push
jbe
mov
inc
and
scas
cs
adc
vpcmov
mov
pusha
setl
mov
ret
lret
push
js
push
mov
xchg
xchg
mov
adc
dec
push
pushf
cmp
sbb
popa
or
add
or
iret
gs
andb
je
pop
mov
insb
out
das
jl
sub
iret
std
lcall
mov
pop
sbb
push
or
rol
call
mov
xor
and
rclb
add
push
fs
fdiv
ret
ret
lods
or
stos
shl
movsb
jae
jne
mov
jbe
scas
inc
sub
mov
subl
cmp
pop
mov
mov
loope
nop
fldz
or
jge
pop
inc
lcall
out
mov
loopne
jg
pop
sti
lods
loop
lea
sbbl
orb
adc
dec
sti
pop
shrl
xor
cld
adc
mov
xor
clc
fisubs
inc
mov
xorl
pop
jecxz
mov
pop
js
sti
movsl
enter
jp
xor
sub
lret
or
movsb
or
mov
push
pop
iret
add
cmp
outsl
adc
xor
ficoml
ds
dec
mov
pop
and
sarb
mov
inc
stos
and
cmp
pop
xor
sub
mov
inc
imul
stos
mov
aaa
leave
push
es
pop
cmp
pop
push
xlat
lret
or
out
test
and
jmp
inc
out
notl
lods
pusha
sarl
push
xor
aas
jns
cmp
call
and
pop
mov
daa
cmp
int3
inc
xchg
sahf
or
dec
je
push
dec
cwtl
daa
jnp
imul
in
cmp
adc
vcvttps2dq
lock
push
or
mov
pop
js
mov
sbb
mov
jo
sbbb
inc
lcall
mov
xor
pop
cltd
push
out
pop
and
in
mov
addr16
les
cmp
or
jnp
and
mov
rorb
aas
mov
or
adc
add
popa
filds
jg
ds
dec
sarl
and
dec
cmp
enter
loopne
push
mov
cmpsb
cs
pusha
push
aas
mov
insl
in
mov
dec
and
mov
sbb
popf
fimuls
lds
mov
cmp
push
jl
rcl
adc
cli
adc
loope
mov
xor
mov
jecxz
fadds
xchg
imul
jnp
dec
mov
stos
inc
stos
jle
jo
inc
xlat
push
pop
add
enter
nop
jnp
mov
push
jmp
pop
jne
sarl
ss
jnp
jg
mov
fsubrl
sbb
mov
dec
add
stos
xchg
xchg
scas
mov
int3
outsl
jl
orb
fistps
ja
notl
and
dec
imul
or
jo
jbe
add
icebp
jbe
movsl
movsb
or
xchg
pop
mov
rorl
pop
mov
xor
mov
jbe
lock
pusha
and
inc
fcomp
ljmp
sbb
ss
mov
mov
xor
lea
les
push
sub
add
xchg
in
mov
ss
xchg
mov
add
jns
dec
lahf
push
push
mov
jle
mov
gs
cwtl
sahf
and
cmp
test
stc
add
in
jnp
cmp
cli
inc
or
push
add
sahf
inc
mov
ljmp
sub
dec
sahf
xor
xor
icebp
ds
inc
or
movq
sub
into
pop
mov
scas
sub
push
es
das
xchg
imul
dec
xchg
mov
sbb
in
and
insb
lcall
inc
mov
jge
lock
sub
pushf
dec
cli
cmp
shll
xor
loop
mov
pusha
jmp
popa
test
pop
cmp
dec
test
or
cwtl
std
inc
add
push
xor
clc
pop
mov
sub
and
adc
or
lds
sbb
les
jbe
mov
pusha
push
dec
lret
insb
mov
jnp
sahf
int
popa
popf
test
dec
negl
int
repnz
cmp
fstpt
jnp
push
mov
jno
pop
add
mov
cmp
lods
popf
lds
jl
test
cmp
mov
and
xchg
arpl
jecxz
jns
fnsave
inc
lret
mov
mov
in
push
add
xor
movsl
hlt
add
or
ret
sub
jle
jb
aam
icebp
mov
pop
adc
cmpsb
pop
add
js
sbb
push
test
lret
add
inc
mov
mov
add
push
filds
push
jb
inc
xchg
adcl
cmpsl
ret
mov
sbb
push
jb
xor
mov
mov
insb
lea
popa
data16
stc
pushl
or
loope
nop
push
iret
imul
outsb
jnp
pop
les
cltd
ret
mov
push
push
jno
mov
pushf
and
or
sub
lea
adcb
and
cmpsl
mov
jns
xchg
inc
adc
mov
dec
pusha
popa
mov
enter
push
mov
dec
sub
imul
xor
shll
stos
lret
mov
inc
pop
out
push
test
iret
xor
enter
std
pop
inc
push
je
xchg
icebp
push
mov
fs
push
shll
push
cmp
add
lods
fsubrs
loopne
fimull
push
cmpsl
xchg
aad
push
into
add
mov
or
sbb
mov
ss
adc
shl
out
mov
stos
nop
push
jecxz
and
fwait
sbb
xor
fadds
repz
les
leave
jle
testl
xchg
mov
jmp
minps
inc
enter
cmp
sbb
outsb
nop
lret
mov
push
cmp
test
in
jbe
lods
div
dec
jecxz
iret
jmp
or
lahf
push
jae
js
je
xchg
inc
in
mov
pop
or
jns
fnsave
int
shll
push
fwait
mov
inc
fcmovnu
dec
das
sbb
decb
push
push
xchg
cmc
stos
adc
jg
cmp
je
dec
push
test
inc
push
dec
xor
lods
jl
cltd
mov
push
arpl
jle
repnz
dec
pusha
jle
ret
aas
mov
movsb
ds
int
jo
jp
bound
push
cmp
inc
test
mov
mov
sub
je
and
pusha
int3
push
mov
push
flds
lahf
out
sub
inc
cli
rclb
cmpsb
inc
mov
pop
shl
or
or
inc
adc
adc
dec
gs
xor
push
inc
adc
bound
leave
popa
xor
sbbl
xchg
nop
add
cmp
sbb
paddsw
mov
jmp
repz
xchg
int
iret
mov
sub
call
in
pushf
das
or
test
enter
test
sarb
and
int
ljmp
sbb
jcxz
sar
push
cmp
fwait
sub
popf
aad
in
mov
inc
cmp
mov
sbb
or
stos
loopne
jp
sbb
dec
cmpsl
xchg
imul
repnz
inc
sbb
sub
dec
jle
movsb
or
scas
sub
fsubrs
fwait
rolb
mov
push
sub
cmp
stos
sbb
and
xor
sub
shlb
xchg
adc
jae
cs
or
mov
mov
xor
cmpsl
je
pop
mov
cltd
movsl
add
sbb
es
wrmsr
lret
out
mov
lods
and
sub
ret
lods
add
pusha
sbb
repz
push
in
or
add
mov
sbb
stos
xchg
enter
dec
imul
jo
dec
mov
push
dec
sti
xchg
bound
mov
pop
jns
fidivrl
jmp
xorb
jp
push
xchg
jmp
ficompl
movsb
leave
outsb
rclb
mov
fisttpll
xor
pushl
popf
cmp
lea
inc
mov
xor
jae
xor
adc
leave
adc
mov
sub
sbb
cmp
cmp
lahf
add
or
js
mov
stos
lahf
psubq
jbe
jae
stos
test
sbb
js
icebp
cmp
insl
stos
push
iret
cwtl
lods
shlb
inc
xor
mov
mov
add
xchg
inc
lea
push
pop
cmc
jne
std
inc
out
movsl
mov
adc
and
out
movsb
or
into
and
aas
fimuls
and
out
pop
pop
addb
pop
and
cs
jnp
sbb
pop
xor
je
stc
fwait
xchg
sub
add
leave
dec
xchg
test
inc
and
stos
lods
loopne
sub
pcmpgtw
ljmp
mov
jmp
add
jo
mov
popa
into
lds
jge
xor
aam
lret
jns
in
aad
adc
jmp
clc
cmpsb
xchg
out
std
ja
push
mov
or
xchg
daa
inc
int3
xchg
stos
or
fadd
xor
xchg
in
rcl
fcompl
fimull
ljmp
out
sbb
andl
int3
push
jno
mov
mov
mov
lds
pop
dec
mov
fsts
push
mov
jne
sub
pop
out
in
push
cmp
aas
push
pop
cmpsl
js
mov
or
leave
lds
lods
or
int3
mov
adc
push
orb
fsts
xchg
repnz
sbb
inc
pushf
fwait
and
xchg
cmp
push
push
int3
imul
add
int3
add
lahf
xchg
xor
insb
mov
aas
sbb
imul
add
scas
mov
adc
ftst
pop
xchg
pop
sbb
fwait
mov
pop
ljmp
out
orl
mov
mov
push
out
cmp
lea
pop
in
inc
test
fcoml
daa
aam
and
pop
and
and
push
mov
mov
push
jge
add
mov
test
aam
add
popa
daa
cmp
add
pop
adc
sub
inc
lods
cmp
das
push
leave
jl
loopne
lcall
jecxz
inc
push
into
sub
xchg
shll
jnp
sbb
out
pop
iret
jmp
mov
cmp
ret
roll
hlt
mov
clc
mov
or
cmp
pop
and
fnstsw
lods
lds
jmp
aad
xor
pop
mul
pop
pop
dec
sub
call
lods
test
in
in
scas
iret
xchg
fistpll
inc
ds
mov
lret
pop
push
test
push
dec
pop
in
dec
shlb
fwait
je
icebp
dec
sbb
mov
loopne
push
rorl
cmpsl
test
pop
ret
inc
sbb
pop
jo
mov
push
bound
mov
sti
test
aaa
ret
rcll
stc
add
inc
cmp
mov
jnp
insb
movsl
push
sub
test
xor
mov
mov
popf
or
imulb
adc
std
inc
in
mov
enter
hlt
sub
je
test
jno
xchg
xchg
xor
insl
sub
ret
movsl
xorl
mov
lock
dec
ret
ljmp
gs
dec
call
fisttpll
mov
cmp
adc
lret
outsl
mov
inc
and
and
mov
pop
popa
test
cmp
cld
shl
dec
ficompl
adc
lret
mov
jle
adc
in
or
push
pop
or
loopne
sbb
pop
pop
cwtl
xor
or
cs
and
cmp
inc
hlt
lahf
xchg
jne
adc
les
push
iret
sbb
mov
jmp
repz
loopne
sti
pushf
jae
add
out
adc
pop
cmovle
data16
fnstcw
test
lds
shlb
jb
push
dec
cmc
js
stc
repnz
frstor
call
fwait
sub
dec
pop
sub
inc
push
outsl
cld
sbb
insb
xchg
jne
pop
jp
ds
mov
mov
loopne
loop
adc
sub
inc
out
push
clc
das
jno
mov
mov
jo
lret
pop
call
out
enter
cld
lret
xlat
push
cmp
xor
out
testl
jmp
leave
cmp
xor
dec
sub
mov
out
cmp
and
cmp
add
sub
clc
insb
xor
or
mov
add
push
fs
or
popaw
mov
scas
jne
mov
aas
jns
call
addb
jb
add
inc
dec
dec
jne
outsb
loope
adc
mov
dec
testl
xchg
outsb
xchg
mov
ss
sbb
add
ja
xor
shll
out
cwtl
sahf
inc
imul
dec
ss
push
push
fistpll
push
sub
nop
and
or
ja
hlt
and
sbb
add
lret
insb
pop
cmp
cmpsl
cmp
xor
push
arpl
xor
leave
arpl
mov
pop
xchg
adc
cmp
jmp
sub
cmpb
jp
inc
std
push
insb
lahf
test
mov
scas
mov
shlb
inc
xlat
int
dec
andb
inc
mov
push
or
loope
cmp
lcall
stc
cmc
sub
aaa
and
sub
lahf
stc
mov
test
jmp
jne
arpl
jne
add
fdivs
ljmp
aam
mov
jne
ss
sbb
inc
lock
inc
out
xor
jp
adc
mov
lds
sbb
fwait
mov
jb
mov
cmovp
bound
cmpsb
xor
sbb
xor
jg
fidivrs
xlat
add
ja
in
push
push
stc
cmc
addr16
inc
test
addl
insl
and
into
enter
push
adc
pop
loope
push
jb
cmc
rol
sub
popf
inc
dec
adc
inc
mov
pop
lods
sbb
icebp
cmp
iret
or
jg
loop
ret
push
pop
pop
adc
out
iret
jno
add
mov
adc
das
cmpb
decl
push
cs
mov
add
push
sbb
sub
jge
or
aam
push
outsl
test
xor
mov
lds
inc
dec
mov
mov
mov
xchg
fcmove
lcall
jae
add
subb
pop
push
jmp
sub
fs
sub
sub
adcl
add
jbe
or
ljmp
out
pop
cmp
cmp
and
push
lahf
xor
cltd
fidivl
mov
lret
jecxz
in
cmp
mov
in
fistpl
pop
push
shlb
adc
loope
jg
outsl
int
mov
push
cmpsb
pop
jnp
xchg
pop
jns
gs
inc
inc
inc
ficompl
mov
cmp
test
cltd
mov
cmp
xchg
jbe
rclb
cmpsb
adc
xchg
shl
mov
lods
fstps
dec
test
js
mov
popa
lcall
stos
test
push
ss
out
sbb
ret
mov
and
dec
adc
and
xchg
das
pop
mov
iret
ss
adc
adc
imul
push
movsb
xor
jo
jl
leave
mov
xor
push
dec
or
nop
adc
test
js
mov
mov
jg
sbb
ret
leave
sub
sbbb
jmp
into
aad
mov
jl
arpl
fldenv
xlat
add
push
jge
je
rcrl
ret
ret
addr16
ret
mov
cwtl
outsl
xor
push
sbb
cwtl
shrb
fs
push
push
adc
mov
sub
cli
test
mov
dec
movsb
sbb
repnz
dec
or
testl
pop
sbb
out
pop
test
setne
sub
mov
stos
sbb
cmp
aam
loope
jmp
sbb
jge
jne
rcrl
cmp
jne
dec
lret
mov
cmp
mov
or
int
fists
cmp
pop
push
ret
bound
sub
leave
popa
test
xorb
and
adc
add
bound
and
int
push
and
in
dec
cwtl
cltd
orb
inc
push
adc
out
aas
jo
inc
xor
leave
imul
mov
call
cmp
ficoms
push
jl
stos
imul
lds
je
lret
out
in
outsb
shll
sbb
icebp
pop
dec
jne
in
and
pusha
data16
andl
outsl
inc
popf
nop
lcall
push
mov
imull
pop
icebp
jg
push
inc
or
in
je
pop
mov
out
lock
addl
pop
into
sbb
dec
xchg
cmp
mov
sub
adc
and
fcmovnbe
mov
sub
pop
xor
cmpsl
test
adc
sbb
push
and
fists
das
inc
add
inc
push
xor
bound
xor
je
xor
add
ds
lock
imull
dec
mov
sahf
xor
mov
jge
pop
push
sbb
flds
jns
imul
je
xchg
in
jb
rol
pop
pushf
rclb
enter
mov
aam
push
mov
ss
dec
icebp
int
push
sbb
xor
rorb
cmpsl
lock
inc
ss
cwtl
sbb
or
or
lods
xor
aam
repnz
cmp
xchg
xchg
in
inc
call
call
testl
rclb
movsl
fs
pop
inc
outsb
stos
call
inc
adc
outsl
adc
sub
cmp
mov
and
shll
insb
mov
mov
scas
inc
push
arpl
xchg
mov
test
movsb
lret
cmp
das
ret
gs
es
push
pop
ret
and
out
sahf
imul
lock
sbb
pop
mov
add
popf
lods
xchg
jl
popa
fisttpll
mov
add
sbb
sahf
push
push
lahf
xchg
cmp
pop
test
dec
jbe
inc
pop
jmp
subb
sahf
cmp
daa
pop
je
lock
or
leave
lret
push
jbe
mov
pop
inc
cmp
ret
mov
pop
xchg
cmp
add
mov
mov
loopne
inc
mov
or
mov
jnp
pop
cli
shrb
add
pop
pop
in
sub
ja
inc
xor
inc
xchg
hlt
nop
cmp
aad
cmc
sub
inc
repz
fsubrp
icebp
loope
mov
inc
cmp
add
or
add
pop
int
repz
or
mov
cmpsl
loope
mov
adc
and
or
add
int3
nop
sahf
iret
in
mov
js
icebp
adc
icebp
clc
in
and
and
cltd
mov
es
sub
out
es
out
mov
or
mov
imul
bound
and
sub
fcoml
out
mov
sub
pop
pop
pop
call
and
push
in
fisubrs
jg
pop
stos
jne
mov
sub
pop
pushf
rcr
inc
stos
gs
xchg
adc
or
and
leave
jge
sbb
add
adc
fdivrl
xor
je
mov
sarl
and
bound
lret
mov
mov
enter
jl
inc
leave
mov
test
add
sti
ret
shlb
pop
stos
or
mov
adc
out
sbb
ja
push
pop
shlb
loop
and
dec
adc
mov
cmp
sub
es
jne
jb
ss
cmp
ja
cmpb
xchg
stos
sub
mov
leave
mov
mov
shrl
negb
mov
repnz
popa
dec
mov
inc
lods
in
mov
loop
push
or
lahf
popf
insl
clc
pop
adc
or
incb
lahf
enter
addl
inc
fisubs
inc
sub
xchg
push
lock
subl
mov
ja
subl
cmp
or
jns
mov
sub
jbe
sub
add
inc
ss
dec
pop
mov
cmpsb
or
scas
or
cwtl
aam
insl
push
ret
inc
jle
lods
ret
adc
negb
xchg
xchg
cs
mov
cwtl
push
popf
xor
icebp
idivl
xlat
pop
jns
jbe
push
idiv
cmp
cmpsb
mov
mov
mov
in
jb
adc
cmp
mov
inc
add
fs
xchg
dec
xchg
daa
jecxz
jmp
mov
jno
stos
xchg
pop
pop
cmp
repz
jnp
mov
xchg
call
je
adc
dec
outsl
loope
clc
inc
and
jp
or
aaa
jnp
lret
repnz
and
jnp
xchg
fwait
sbb
mov
lock
mov
in
repnz
push
xor
and
mov
mov
dec
adc
sbb
insb
jp
xchg
adc
pop
or
pusha
out
inc
mov
ss
pop
scas
add
and
shr
out
test
orl
inc
loopne
aad
pop
push
and
ja
test
ret
sarb
adc
add
mov
jbe
sar
xchg
repnz
nop
lea
adcl
test
lahf
jns
loop
sbb
xor
xor
ljmp
pop
test
mov
push
pop
mov
push
cmpsl
mov
cmp
mov
mov
movsb
idivb
add
in
cltd
push
fsts
sbb
inc
out
mov
mov
inc
sub
or
dec
or
notb
sub
out
mov
lret
pop
test
inc
xchg
mov
jno
jl
testb
xchg
aad
stos
mov
in
add
popf
test
out
cmp
leave
adc
out
pushf
mov
cmc
pop
push
or
jno
dec
dec
push
or
das
and
out
test
test
sbb
mov
out
cld
mov
add
scas
xchg
shrd
inc
lods
lock
cmp
cmp
in
jp
imul
out
enter
pop
leave
add
xchg
movl
add
test
ss
adc
mov
cwtl
stos
inc
pop
cli
mov
fimuls
adc
jecxz
fstpl
mov
lret
mov
sbb
mov
push
xor
jo
inc
loope
sub
jmp
pop
add
cld
jmp
incb
ret
cmp
fdivl
xlat
lods
jnp
push
popl
inc
in
mov
ja
push
leave
div
mov
and
test
mov
int3
pop
mov
imul
insb
xchg
mov
xchg
sbb
mov
call
inc
ficoms
dec
ror
sbb
jg
inc
and
ss
test
xchg
pop
sbb
std
jl
pushf
push
mov
insl
dec
enter
or
xor
scas
xor
jnp
sub
test
movsl
mov
insb
movsb
inc
insl
mov
cmp
lahf
test
fstpt
stos
pop
fiadds
mov
mov
popf
sub
ja
cltd
jne
jg
scas
mov
js
push
int
stos
ds
jge
rorl
mov
repnz
cltd
pop
mov
pop
add
icebp
and
enter
dec
aad
fs
jmp
pop
or
leave
push
jmp
and
mov
add
cmp
or
test
inc
test
adc
dec
out
mov
scas
into
push
call
adc
sbb
pop
stc
inc
mov
cmc
pusha
add
outsb
icebp
mov
aas
nop
sbb
out
push
mov
pushf
mov
push
mov
mov
push
iret
mov
ljmp
fisubl
pop
jo,pt
data16
pop
dec
movsl
cmpsl
push
stc
or
jg,pn
push
ret
data16
jno
xchg
in
loope
mov
mov
dec
test
add
mov
lods
jmp
add
xchg
add
mov
mov
mov
fiadds
adc
add
sub
aam
jns
std
xor
lds
gs
cmpsb
cltd
std
pop
mov
xchg
andl
es
sbb
lea
mov
test
xorl
pop
fsincos
and
pop
mov
fstpt
leave
dec
sub
mov
xchg
enter
xchg
fbld
fs
jbe
cld
es
cmp
lahf
fadds
inc
mov
rolb
cmc
pop
cmp
aas
rcll
jne
fwait
pop
gs
mov
add
mov
sbb
cltd
mov
jbe
xchg
inc
or
adc
rolb
rcll
or
or
sbb
adc
adc
xor
imul
cmp
xchg
cwtl
mov
mov
inc
jbe
aas
mov
ljmp
jnp
cmp
mov
cltd
lahf
enter
rorl
inc
cmp
movsl
lock
bnd
out
mov
cs
mov
inc
inc
int3
jle
and
repz
leave
fisubrs
decb
lret
pop
xlat
push
adc
push
dec
fsts
cld
xchg
add
outsl
into
es
enter
mov
sub
addr16
add
inc
out
inc
outsl
sub
or
add
mov
cmp
sub
add
loope
xchg
mov
add
lds
pop
inc
cmp
popa
mov
sbb
lods
or
push
mov
push
cmp
sbb
lret
jmp
mov
std
cmp
fstpt
add
ret
cmpsl
aam
lods
cmp
subb
mov
dec
test
leave
outsl
fcmovne
and
rorl
jg
out
inc
insl
stc
xchg
fwait
mov
xchg
xchg
dec
mov
mov
pop
mov
in
cmpsl
pusha
mov
call
add
insb
inc
add
icebp
mov
or
xlat
es
cmp
lds
in
inc
test
lret
cli
mov
adc
mov
movsb
call
ret
xor
pop
test
rcr
mov
inc
mov
cmc
push
mov
rcll
movsb
adc
stos
xchg
imul
xor
ret
daa
cmc
adc
xchg
pop
icebp
or
pop
test
inc
lods
jp
dec
or
fisttps
inc
dec
mov
jo
inc
ds
pop
aas
push
mov
movsl
push
call
mov
xchg
inc
jbe
out
imul
jne
sub
les
pop
mov
dec
mov
xchg
adc
pop
pop
aaa
adc
pushf
or
mov
mulb
cmpsb
lcall
xchg
xor
dec
test
cmp
sub
pop
mov
imul
push
and
sbb
test
arpl
or
jo
les
dec
outsl
lea
or
or
std
inc
iret
pop
mov
jno
rorl
add
cmpsb
inc
jg
repnz
adc
and
mov
nop
loopne
divb
nop
fistl
mov
jmp
adc
out
popf
enter
push
hlt
pop
xor
inc
std
mov
xchg
imull
mov
cltd
mov
mov
xor
stc
cmc
cmp
js
jmp
sub
cmp
dec
loop
sbb
pop
xor
mov
loopne
dec
xchg
out
adc
push
or
shlb
aaa
push
out
cltd
pop
or
xchg
sub
mov
adc
xchg
cmp
inc
xor
inc
mov
jp
or
pop
add
rcll
inc
sti
add
pop
test
or
fsubl
mov
xlat
mov
xchg
cmp
loopne
pop
mov
add
arpl
mov
cld
mov
out
mov
lcall
bound
jecxz
jle
mov
imul
lahf
and
add
lahf
jp
stos
loopne
xchg
sub
out
cmp
jb
imul
bound
arpl
mov
and
lods
jne
mov
xor
shrl
loope,pt
icebp
enter
scas
aam
lcall
rorl
ficoml
push
mov
out
aaa
xlat
rcrb
mov
movsb
push
sub
shl
xor
push
cs
repz
and
les
out
addl
setae
sub
into
add
aam
dec
lods
add
fsub
mov
scas
fs
adc
xor
shl
or
cli
cmovne
fidivrs
dec
pop
repnz
sahf
jae
out
mov
jae
xchg
jl
dec
dec
negl
jns
int3
rolb
data16
sub
arpl
mov
test
mov
cmc
loopne
movsb
cwtl
push
cwtl
mov
pop
push
pop
and
fs
std
xchg
fimuls
lods
popa
je
and
xor
lret
sti
stos
sub
ljmp
cwtl
push
and
pusha
stos
imul
xchg
mov
or
jne
dec
and
and
outsb
aam
lea
pop
add
sub
test
test
scas
aas
mov
pop
ja
loop
and
fdivrl
cmpsl
mov
out
das
movsl
xchg
mov
xchg
insb
repz
imul
or
aam
dec
mov
mov
jnp
ret
xor
faddl
int3
ficoms
cmpsl
jge
or
sahf
andl
cmpsl
fimuls
das
push
orb
push
inc
int3
data16
lret
xorb
js
inc
lcall
adc
adc
and
pop
jmp
sub
mov
sbb
cmp
push
and
test
sbb
or
clc
ret
xor
test
add
cmpsl
sub
cmp
in
jno
cmc
dec
cmp
divb
jmp
ljmp
scas
in
sbb
jae
aad
dec
aam
and
ja
push
inc
mov
sbb
pop
sahf
test
pavgb
lds
cmc
hlt
push
dec
and
lods
lret
ja
cmp
push
cmp
sbb
bound
dec
popa
imul
cli
inc
repnz
addr16
sub
and
mov
std
cmc
and
mov
inc
inc
pop
or
xor
jp
out
xor
jb
jle
cmpsb
push
push
push
mov
cld
fs
xchg
and
push
lret
scas
rcrl
out
dec
or
and
inc
adc
clc
fmul
lret
jmp
sub
push
jo
repnz
xchg
cmpsb
pop
sbb
push
mov
rclb
mov
sbb
outsl
cmpb
loope
lcall
dec
adc
cmp
mov
sbb
cmpxchg
mov
int3
call
adc
out
pop
ret
negl
or
stos
test
flds
ds
xor
jmp
adc
testb
leave
pop
inc
icebp
inc
push
cmc
mov
dec
sub
scas
out
ljmp
jl
or
inc
adc
in
sub
jl
inc
icebp
lock
xchg
icebp
jbe
aaa
cmp
jno
push
mov
add
es
fimuls
lretw
outsl
stos
cmp
push
into
fwait
mov
mov
mov
cmpl
jns
push
xchg
sbb
mov
clc
scas
cmc
ret
stos
popf
icebp
xchg
mov
push
iret
push
and
adc
pop
and
inc
out
sbb
sub
adc
push
test
sub
jmp
fisubl
sub
mov
mov
mov
negl
iret
jnp
je
dec
adc
xchg
imul
arpl
sbb
in
mov
lret
lea
sahf
sub
cmp
lret
xorb
jb
or
fs
leave
sub
movsb
xchg
add
test
stos
jo
sub
mov
xor
xor
rcrb
shrb
je
and
outsb
or
mov
jge
dec
mov
shl
add
mov
movsl
mov
cmp
fidivrs
scas
add
ljmp
pop
xchg
lahf
pop
pop
mov
inc
push
lret
pop
loope
sub
rcrb
mov
adc
jge
gs
adc
notl
jnp
lock
push
fidivs
xchg
xchg
pop
pop
rorb
stos
in
fs
adc
cmc
jb
int
outsb
ds
mov
jl
pop
xchg
adc
add
je
in
sbb
in
mov
jl
sbb
jle
ljmp
push
ret
pusha
iret
cmpsb
jnp
test
mov
jle
lds
xchg
mov
lret
outsl
stos
ret
rolb
fmuls
in
pusha
ficompl
push
loope
pop
not
mov
adc
mov
pop
mov
es
shl
xchg
aad
cmp
inc
or
push
xor
and
mov
mov
pushf
adc
adc
sbb
cmp
cmp
add
inc
negb
out
arpl
dec
jae
adc
lahf
subl
jns
push
adc
mov
push
fisubrs
or
add
fisubs
xchg
adc
pop
and
lcall
out
jmp
xlat
push
in
adc
insl
push
mov
nop
adc
jl
arpl
adc
in
in
or
ja
mov
mov
mov
mov
psubb
mov
jle
and
call
and
popa
fmul
push
je
loopne
xchg
je
mov
pop
mov
sub
test
push
sbb
jle
mov
imulb
mov
sub
jmp
pop
push
out
xor
inc
push
cmp
or
jle
popa
loopne
lock
in
into
cmp
mov
rolb
xor
mov
enter
aad
shll
and
cwtl
mov
cltd
cmpsb
inc
repnz
into
cmpsb
fistpll
jecxz
in
cmp
mov
icebp
add
jp
rolb
adc
dec
push
fs
lret
mov
imul
and
mov
xor
adc
xor
xor
dec
lods
cmp
xchg
jge
movd
sub
int
sub
or
pop
ljmp
or
mov
add
dec
pop
test
mov
mov
mov
and
cmpsl
mov
mov
int
pop
in
lret
xchg
jl
into
icebp
fisttpl
xor
sar
rolb
in
stos
jnp
cld
jno
sbb
xor
xorb
mov
imul
es
sti
imul
rorb
mov
jmp
push
push
fists
pop
bound
les
sbb
mov
test
insb
ss
push
push
fs
inc
sub
cli
int
loope
in
leave
mov
incw
xlat
pop
es
push
push
cs
push
lds
ds
cmp
and
mov
inc
cmp
and
mov
fcompl
adc
cmpsl
add
cmpsl
rol
or
xor
jnp
cmp
mov
pushf
xor
and
push
cltd
fxch
lret
imul
sbb
aad
jbe
mov
or
cmp
inc
lods
push
cmp
dec
and
lret
in
mov
mov
jo
fcmovnb
xor
in
push
mov
je
outsl
add
xor
lret
adc
xchg
iret
push
mul
lea
pop
gs
inc
imul
jae
sub
adc
jge
in
out
aam
addr16
xchg
jecxz,pt
push
scas
xchg
sub
cltd
fnstsw
out
dec
mov
pop
cld
xchg
test
mov
sub
pop
cmp
cld
sti
arpl
pop
push
insl
sbb
bound
jbe
jae
xor
in
adc
daa
inc
js
mov
mov
int3
mov
das
jge
lahf
adc
scas
xchg
addl
jl
lret
inc
hlt
shlb
sub
cmp
subl
sub
jg
lds
pushf
fcmovnu
cli
or
fadd
pop
adc
shll
pop
imull
sbb
outsb
in
popf
pop
dec
adc
jne
jl
enter
push
mov
in
push
or
daa
xor
pop
in
imul
sarl
jne
dec
adc
push
ds
scas
imul
mov
imul
cmp
cmp
push
xchg
fs
cmpsb
push
sahf
adc
sub
push
dec
loope
add
lock
mov
xchg
mov
lcall
lock
ds
jl
aas
push
cmpsb
out
in
rcrl
fists
movsb
adc
cld
inc
jle
bound
cs
lahf
or
arpl
fildl
jg
or
dec
subb
sbb
sub
rolb
adc
in
inc
inc
pushw
loop
adc
fdiv
shlb
adc
cltd
js
push
add
cmp
push
divb
pop
cmp
addr16
mov
imul
es
mov
test
and
lock
aaa
and
jl
adc
push
mov
push
xor
jle
xlat
and
sbb
push
mov
leave
leave
shll
loopne
and
out
mov
inc
fcmovnu
gs
insl
pop
test
pop
push
jnp
testl
in
imul
scas
lods
push
js
sub
js
sub
rclb
cmp
mov
fisttpll
xchg
ret
loope
xchg
int3
repnz
pop
inc
dec
mov
xor
aad
jbe
subb
nop
mov
dec
sbb
test
out
pop
stc
mov
xor
pop
and
popa
es
or
jo
sbb
adc
jp
pop
cmp
call
jno
push
imul
push
mov
dec
fcompl
es
rorl
add
push
dec
inc
mov
popf
push
cmp
xchg
mov
xchg
rorl
orb
push
xor
aas
jecxz
sti
pusha
adc
mov
jns
pop
inc
clc
jo
push
shl
mov
xchg
loope
scas
jl
loopne
add
push
and
or
ret
jns
mov
fsubr
shlb
pop
sub
rolb
xchg
call
jb
pushf
jo
pop
mov
stos
fisttpl
jecxz
or
dec
mov
or
aam
mov
lods
notb
nop
out
mov
pop
pop
mov
jg
es
into
jbe
daa
xor
pop
dec
std
sub
cmp
test
out
outsb
mov
das
cwtl
testb
pop
fwait
outsl
in
sub
dec
mov
je
ja
dec
fs
push
adc
xor
xlat
mov
push
subb
data16
sbb
popa
shl
daa
and
ret
mov
in
aaa
icebp
xor
test
aaa
ret
divb
pop
fdivrs
int3
jmp
dec
and
inc
dec
cmpsb
movsb
pop
sbbb
in
loopne
mov
mull
inc
xor
movsb
cmp
inc
ret
push
or
or
sbb
mov
xor
push
sahf
mov
dec
and
je
mov
fwait
push
mov
cmp
xlat
ficoms
repnz
stc
dec
scas
cmp
adc
inc
mov
je
das
test
xchg
jge
pushf
cli
pop
test
pop
fsts
xor
roll
add
pop
into
sarb
inc
iret
mov
or
push
inc
insl
mov
and
push
jl
cwtl
dec
pusha
cmp
jnp
push
jns
or
lahf
incl
fisttps
movsb
ljmp
mov
adc
sbb
inc
inc
repnz
scas
arpl
sbb
repz
cltd
push
jp
sub
fwait
xchg
lret
cmp
fcmovnbe
in
xchg
add
push
mov
fistps
push
pop
sahf
test
or
ret
mov
add
jno
push
xchg
cmpsl
out
inc
loopne
js
test
sub
mov
out
push
cmp
mov
icebp
fisttpl
jge
int3
xchg
or
fisubl
jmp
cmpsb
shlb
leave
test
retw
lret
jge
pop
or
arpl
mov
fst
xor
dec
jle
icebp
pop
cli
out
pusha
fucom
movl
aas
xchg
adc
push
test
lret
out
mov
icebp
repnz
je
in
lcall
dec
or
int3
clc
ret
mov
cmc
and
mov
mov
add
popa
js
ficoml
sub
sbb
out
mov
push
popa
xchg
insb
pop
xchg
leave
push
scas
pop
rcr
cmpsb
arpl
jne
stos
flds
and
push
fimull
ss
jae
sbb
addr16
xchg
outsl
fsubrs
jge
inc
mov
fdivrs
lahf
movsl
push
cmp
push
mov
sub
cld
rorl
jno
xchg
stc
xor
fdivrs
into
scas
mov
jns
mov
fs
cltd
test
or
sbb
lahf
rcrb
or
jmp
fldt
cmp
faddl
in
imul
lret
in
dec
gs
in
push
pop
lds
sbb
stos
pop
add
push
cmpsb
push
pop
add
mov
leave
clc
sub
mov
div
and
sub
push
and
jmp
das
jae
aaa
lods
hlt
or
insb
mov
or
push
insb
call
push
addr16
and
fisubrs
push
xor
add
ljmp
lds
jbe
mov
out
jle
outsl
mov
test
pop
in
jge
and
mov
dec
dec
xchg
data16
lock
push
sti
jne
ficoml
or
aad
lret
arpl
add
xor
cli
in
cmp
sti
mov
dec
adc
syscall
mov
push
mov
inc
inc
inc
xchg
insb
aad
push
fdivs
les
js
push
insl
fidivs
jle
pslld
cmp
inc
les
add
loope
sbb
popf
imul
sub
cs
imul
inc
xor
stos
dec
in
pop
icebp
xchg
pusha
shlb
pop
mov
out
xchg
ss
sub
xor
mov
frstor
pop
xchg
movsl
bound
mov
ljmp
push
jo
and
mov
cmp
push
out
push
lahf
pop
cwtl
lock
movsb
cs
dec
les
stos
adc
xor
mov
jp
insb
test
jo
sahf
or
mov
hlt
ja
add
loop
or
mov
fcmovnb
push
test
int3
dec
pop
mov
fwait
icebp
aam
add
push
addr16
xchg
enter
das
sub
or
dec
cmp
sub
push
movsl
adc
push
out
pushf
or
add
mov
push
mov
mov
dec
cmp
dec
cmp
sub
aad
imul
repnz
enter
rorb
sahf
test
enter
jmp
in
adcl
mov
out
push
and
inc
lcall
cmc
lahf
pop
adc
int
dec
jecxz
arpl
lret
sub
sbb
ss
push
popa
dec
fsubs
cmpsl
mov
mov
dec
pop
shlb
addr16
push
push
clc
out
repnz
push
insb
and
xor
ds
rcrb
shll
dec
sti
sbb
add
cmp
jae
pop
lcall
push
js
pop
push
inc
pop
push
push
inc
pop
push
fwait
sbb
sbb
repnz
xchg
mov
cmp
dec
cmpsl
fcompl
push
scas
shlb
mov
fwait
sbb
push
lods
arpl
sbb
add
adc
push
fstl
add
arpl
mov
jbe
xchg
and
mov
jle
sbb
lahf
add
fwait
mov
fs
test
xchg
pop
cmp
pusha
push
xor
push
xor
jge
les
sbb
mov
push
das
test
add
xor
mov
pop
insl
imul
iret
les
adc
push
mov
fists
and
sti
out
fisubs
inc
lea
ror
jbe
cmpsl
out
mov
fcmove
aam
shlb
movsl
adc
cmp
jns
pushl
gs
xchg
sbb
loope
in
push
sarl
test
mov
push
outsb
mov
loopne
inc
jp
jbe
cli
pop
ljmp
insb
stos
inc
fisttpll
xchg
int
sub
out
aaa
scas
or
mov
ret
jbe
fsubrl
push
rcr
in
aas
lds
out
adc
fwait
insl
pop
adc
std
in
movsl
stc
loopne
movsb
jmp
xchg
fwait
popf
push
pop
lods
loope
cmp
jo
cwtl
mov
xchg
push
out
mov
icebp
cmp
fistpl
dec
mov
mov
test
mov
faddp
dec
pop
out
mov
fsubrs
sub
lret
test
popf
rolb
jae
insl
adc
mov
mov
jecxz
ds
ret
dec
dec
pushf
or
fdivrs
adcl
dec
addr16
mov
stos
call
xchg
or
inc
mov
push
cmpsb
imul
mov
push
outsb
cmp
stos
mov
xor
imul
movaps
fstp
push
cmp
iret
dec
lret
gs
test
aas
fld
iret
test
loopne
adc
lods
rcl
mov
xchg
nop
xchg
push
jge
cli
xchg
scas
pop
xchg
mov
or
lea
adc
pop
nop
fisttpll
icebp
cli
jl
lods
cmpsl
sub
jecxz
cmpsb
adc
fwait
jns
xchg
xchg
jns
sub
divl
into
mov
enter
cmp
leave
pop
jmp
xor
cli
leave
inc
fdivrp
cmpsl
fucomp
jne
cwtl
mov
lock
iret
popl
jnp
ja
adc
sub
mov
cmp
stos
gs
leave
mov
fidivrl
cmp
xchg
sbb
xchg
in
imul
add
mov
xchg
in
adc
or
daa
xrelease
pop
sbb
or
mov
sub
psllw
cmpsb
in
and
ret
dec
repz
iret
fists
scas
insl
adc
cmp
jnp
inc
push
fistl
popa
in
fs
cltd
xor
sbb
add
cwtl
mov
daa
cmp
jl
jns
mov
lods
stc
out
xor
pop
dec
xchg
repz
jb
out
mov
imulb
lcall
mov
jle
xchg
ss
mov
and
dec
into
push
fidivrs
push
sub
push
jp
ljmp
adc
cmpsl
adc
jno
sbb
fwait
push
lcall
inc
adc
cwtl
fadds
stos
nop
addl
lret
xor
imul
in
ja
js
pop
mov
orb
mov
ret
push
push
pop
lahf
xor
cmp
and
fisubs
xchg
push
push
and
sbb
imul
mov
mov
sbb
mov
cmp
cmp
icebp
sub
adc
mov
bound
xor
inc
add
jne
push
and
test
xor
jae
test
mov
fsubrs
pcmpeqb
test
jg
add
and
subb
inc
out
out
add
mov
aas
mov
cmpsl
sub
mov
xor
data16
sub
rcl
inc
or
mov
gs
leave
cmp
in
mov
dec
fildl
or
inc
gs
dec
mov
subl
xchg
testb
xlat
call
jns
xor
mov
sbb
xor
cld
mov
push
popa
fstps
jo
jle
xlat
pop
or
jg
in
pushf
jnp
add
push
mov
jl
fisubrl
divl
lock
jns
cmp
in
pop
push
aam
dec
test
adc
in
sub
pop
mov
idiv
out
lds
dec
jo
fmul
adc
aad
lret
and
add
test
stos
inc
mov
jbe
mov
and
pop
pusha
shll
mov
push
xorl
rcrb
jmp
cmp
lods
aad
cwtl
es
cli
clc
mov
mov
push
nop
out
shlb
cmp
inc
cmc
insl
xchg
mov
add
jle
sub
es
mov
jo
adc
add
pop
jo
and
insl
pushf
pop
repz
inc
push
stos
pop
in
cmpsb
dec
lods
jle
mov
lds
addr16
inc
sub
cltd
bound
rcll
aam
mov
aaa
pop
push
add
iret
movsb
push
out
mov
aaa
adc
arpl
pop
imul
mov
jno
shlb
mov
jne
lock
stc
lret
xor
jg
fcom
pop
adc
push
jl
pop
and
sub
je
inc
and
sub
loopne
hlt
pop
mov
add
bnd
addr16
dec
mov
rclb
lahf
sbb
xor
dec
mov
mov
cmpsl
ret
mov
adc
cmpsb
cltd
movsl
fldt
add
xbegin
pop
aad
inc
or
mov
imul
push
inc
add
popf
enter
cmp
sub
rcrl
add
inc
cmp
sub
push
js
lret
sub
or
sahf
and
loop
pop
dec
or
add
mov
lcall
xchg
adc
stos
mov
in
adc
xlat
jmp
daa
dec
xor
mov
shll
xchg
stos
add
cmpsb
sbb
xchg
mov
dec
clc
mov
fsubs
mov
dec
test
loopne
adc
xchg
rcrl
fsubp
mov
pop
inc
scas
or
sti
sub
xor
in
in
mov
push
subl
dec
lock
mov
add
sbb
or
stc
mov
pushl
shrl
mov
cmp
out
es
mov
outsl
loopne
mov
xchg
out
aas
push
dec
xchg
push
add
fwait
dec
in
nop
inc
ljmp
shr
and
call
les
push
enter
push
in
mov
rclb
test
nop
movsb
les
out
or
sahf
jecxz
or
jns
push
jg
outsb
pushf
movsl
in
popa
mov
cs
cmp
test
mov
or
xchg
cmp
mov
cli
das
aam
mov
int
xor
shll
data16
or
daa
and
nop
pop
out
xor
add
or
or
jo
push
testl
sbb
loope
mov
ret
xor
pop
dec
xchg
aam
cmc
filds
sbb
stos
inc
dec
fwait
out
dec
pop
adc
xor
mov
or
out
cld
xchg
inc
jle
adc
cmc
fmull
jbe
and
fstps
jl
popa
push
jl
jb
pop
mov
push
xor
push
cmpsl
lcall
dec
and
cmpsl
cli
cmp
adc
cmp
push
mov
fisttpl
pop
pop
xchg
sub
int3
out
aaa
sbb
aam
fnstenv
inc
filds
jg
jge
adc
iret
inc
or
pop
repz
jns
inc
add
mov
fstpt
lret
mov
push
imul
sub
jae
cmp
inc
mov
scas
jbe
and
ja
test
aam
cmp
mov
movsl
out
icebp
insb
sbb
add
pop
and
imul
mov
or
mov
sub
sub
gs
jp
xlat
lods
xchg
inc
test
cmp
and
std
in
and
icebp
insl
dec
cmpps
clc
out
or
adc
jge
push
dec
sbbl
and
xor
aaa
insl
push
inc
adc
mov
jle
sbb
popf
sbb
xor
das
test
xorl
idivb
imul
mov
lret
test
mov
loope
dec
mov
out
sbb
adc
jb
je
int
dec
jne
inc
or
push
jmp
inc
inc
sub
enter
add
in
pop
inc
incb
fmuls
sbb
fdivrl
cltd
inc
fistpl
xor
test
in
sbb
xchg
inc
ljmp
lea
jne
enter
pop
sub
cmp
hlt
sbb
not
aas
adc
jb
fst
xor
mul
nop
adc
pop
nop
add
inc
in
sub
add
aaa
cmp
add
aas
or
jns
loope
xor
push
lret
movsl
orb
test
mov
das
mov
add
sbb
mov
push
push
mov
sub
pop
loope
xchg
inc
lods
incl
lahf
xchg
mov
inc
lcall
fstl
push
and
setnp
xchg
loop
mov
and
cmpsl
ss
leave
ljmp
insb
gs
add
in
mov
lcall
mov
fstps
mov
mov
push
mov
sbb
sub
or
aaa
insl
test
ljmp
daa
lcall
sbbb
insl
mov
cs
add
push
push
dec
fcomp
lret
pop
jae
imul
rorb
cltd
sub
and
xor
dec
repz
mov
adc
mov
xlat
int3
xor
ret
inc
pusha
nop
push
pushf
jne
mov
ds
cli
lea
lock
inc
pop
loop
loop
sahf
pushf
mov
arpl
mov
push
adc
cmpsb
push
adc
cmc
call
dec
xor
add
and
xchg
idivl
dec
pushf
insl
inc
ret
mov
dec
mov
cmpsl
or
js
mov
push
sub
inc
jecxz
or
clc
fisubl
fistl
push
repz
push
push
cmc
pop
mov
arpl
out
sbb
shlb
xor
rcr
aaa
adc
mov
fdivr
das
jge
aas
hlt
push
inc
int3
push
mov
cmc
dec
pusha
fimuls
or
ficompl
dec
iret
mov
dec
add
loop
arpl
jge
inc
dec
mov
or
sbb
cwtl
inc
push
jp
jge
dec
clc
ja
imul
xchg
jp
ss
les
pop
jge
xchg
adc
in
arpl
cmc
pop
js
pop
dec
imul
jg
mov
das
pop
cmp
inc
and
push
or
or
and
or
jns
nop
xor
or
or
cmpsb
testb
sbb
hlt
icebp
daa
outsb
cmp
cmp
mov
or
movsl
jmp
in
popf
pop
scas
mulb
adc
push
cmp
mov
sarl
fwait
or
lods
xchg
and
xor
dec
je
dec
sub
cmpb
sub
cmp
call
xor
mov
add
popf
dec
mov
mov
je
jne
xor
xchg
xor
in
mov
in
in
mov
sbb
push
mov
stc
mov
testb
stos
lods
movsb
xor
jb
decl
sarl
jecxz
push
add
adc
lahf
pop
cmpsb
push
sub
ror
cmpsb
mov
leave
dec
or
xor
and
cmp
insl
adc
adc
or
mov
mov
xlat
pop
and
aas
mov
add
scas
stos
out
push
lret
push
sbb
lods
and
gs
lods
movl
es
imul
stc
loopne
inc
mov
out
sub
fwait
pop
mov
mov
pop
or
push
jno
adc
ret
lahf
orb
inc
mov
pop
mov
popa
jle
xor
repnz
inc
mov
cmpsb
jmp
pop
sbb
cltd
sbb
inc
push
cmp
sub
dec
negb
jne
jns
add
ja
dec
pop
xchg
js
pop
pop
js
ss
int
pop
and
adc
xor
mov
out
inc
in
mov
mov
adc
shll
rorb
call
inc
adc
in
imulb
cmp
inc
loop
stc
jbe
mov
push
mov
imul
add
inc
outsl
into
xor
dec
and
push
in
in
fcoms
jl
xor
mov
cmc
xor
clc
mov
dec
shll
jae
cwtl
shrl
outsl
rcrl
ss
lds
out
mov
data16
cmp
andl
inc
xor
adc
xchg
jo
scas
fstpt
mov
ss
or
pop
ja
arpl
mov
mov
mov
add
cli
inc
mov
jns
stc
jl
pop
dec
mov
subb
rcl
jo
es
mov
jp
adc
dec
jle,pt
aam
mov
popa
gs
lcall
jne
aas
imul
cmp
and
cmp
out
mov
dec
sub
mov
add
xchg
xchg
or
dec
movsl
push
mov
psubq
mov
or
bound
add
lods
mov
fidivs
inc
rcll
pshufw
in
in
mov
aam
push
push
push
and
sub
faddl
or
sub
outsb
jo
mov
push
mov
and
xor
out
xchg
imul
ss
andb
sub
xor
das
inc
add
vpmaxub
mov
pop
jbe
insb
add
mov
das
test
lds
and
popf
mov
pop
and
addl
dec
add
test
leavew
mov
movsl
sub
int
popa
loop
and
pop
jb
test
or
lret
and
mov
sbb
addb
adc
push
ljmp
orl
jmp
popl
inc
mov
outsb
cmpl
push
adc
dec
insb
popf
jnp
aam
imul
mov
cmp
stos
hlt
in
lds
out
imul
xchg
mov
xor
cmp
gs
hlt
and
jbe
movsb
cmc
hlt
mov
rcr
in
insl
dec
in
mov
dec
adc
aaa
xor
fst
mov
ret
xchg
outsb
mov
stos
xor
loopne
pop
mov
jle
mov
into
popf
xor
push
sahf
xchg
xor
inc
inc
inc
pop
lods
dec
cmp
lds
xchg
js
or
mulb
stc
pop
aad
outsl
inc
xor
mov
sub
call
sbb
sbb
inc
fcmovb
jl
scas
jmp
pop
repnz
loop
and
xor
fldl
outsl
popf
mov
loopne
push
stc
mov
cli
mov
sub
js
mov
xchg
jl
in
xor
add
adc
mov
icebp
mov
or
jbe
mov
jae
jne
fsubrl
lods
ret
scas
sahf
shll
arpl
xchg
imull
push
fadds
das
push
clc
mov
fdivrl
or
and
mov
bound
addr16
inc
jecxz
lods
std
mov
into
pop
inc
int3
shll
hlt
inc
lods
data16
repz
jmp
push
shl
pop
orl
xlat
roll
sbb
and
leave
push
ja
js
enter
mov
dec
xchg
pop
xor
stos
adc
std
mov
aaa
sub
test
loope
cmp
pop
cld
andb
mov
adc
loopne
jbe
ret
repz
or
popl
or
cltd
into
in
sahf
jl
mov
lods
lods
es
pop
xchg
cmp
mov
test
nop
and
fsubl
dec
das
repz
fiadds
mov
ret
out
dec
rol
xorl
mov
lahf
mov
push
pop
add
push
imul
jb
aaa
jle
xchg
jecxz
dec
pop
addl
in
xchg
push
imul
fnstcw
shll
arpl
repnz
xchg
enter
fdivs
push
daa
cli
mov
sbb
jne
mov
xchg
lods
push
adc
add
and
adc
addr16
mov
mov
loope
fmull
scas
mov
inc
stc
pop
push
out
sub
out
movsb
dec
hlt
push
fidivl
mov
xor
add
loop
xchg
mov
into
inc
popa
repnz
in
xorb
push
rcl
inc
lods
nop
addr16
and
xchg
pop
stc
mov
lock
out
pushf
inc
cwtl
test
lcall
pop
or
test
add
mov
int3
add
fldl
jno
iret
rolb
cltd
int3
add
sti
mov
cmp
add
std
sub
fcomi
push
cmp
outsl
mov
xor
sub
or
add
inc
add
jle
rclb
sbb
add
jmp
pop
jge
stos
and
cmp
xchg
xchg
sub
push
mov
or
sub
mov
sti
mov
cmp
enter
dec
mov
pop
nop
mov
cli
mov
mov
scas
mov
jmp
xchg
adc
sub
push
lods
mov
test
ret
jne
xchg
repnz
mov
sahf
inc
push
push
mov
mov
and
sarb
clc
cmp
cmp
jbe
test
cli
out
popf
lock
lods
ret
insb
subl
rclb
dec
aaa
subb
out
orb
mov
sub
push
and
mov
popa
in
test
in
je
pusha
in
sub
xchg
test
fs
repnz
and
xchg
loopne
sahf
mov
mov
pusha
scas
cmp
adc
jnp
xchg
into
and
inc
flds
pop
mov
jmp
cmpsb
in
mov
pop
mov
enter
mov
push
xchg
sub
icebp
mov
jo
lahf
inc
xchg
fisttpl
icebp
and
test
and
sbb
in
pop
jecxz
loopne
jne
dec
movsl
adc
and
adc
sbb
ja
call
std
dec
mov
push
imul
lret
dec
dec
sbb
ja
jl
mov
sbb
jecxz
cli
pop
xor
cmc
jl
mov
sbb
inc
lds
xlat
xchg
stc
rorl
mov
outsl
add
push
dec
pop
lcall
inc
ret
mov
xor
mov
scas
enter
nop
jmp
jg
add
jmp
mov
imul
lcall
mov
dec
add
lock
cmp
xchg
adc
mov
stos
cltd
aam
cmp
or
sub
sbb
sbb
cmpb
add
test
jp
mov
sub
bound
es
sbb
stc
bound
adc
or
cmc
aaa
in
xor
inc
ds
cmc
dec
push
daa
sbb
lahf
push
xor
mov
rcll
aas
shlb
pop
out
subl
xchg
xor
repnz
adc
clc
leave
mov
jb
arpl
std
push
sub
aad
ss
jbe
xchg
pop
lods
pop
or
sbb
out
dec
mov
sub
inc
fbld
ss
stc
or
xchg
mov
adc
clc
xor
push
lret
cmp
call
xchg
std
loope
fistpll
push
push
mov
and
xlat
mov
es
xor
mov
sub
add
dec
jmp
inc
je
pop
std
ds
sub
cmp
icebp
push
sbb
push
mov
loopne
push
mov
movsb
pop
aas
cmp
int
cmc
cmp
dec
jl
out
es
sub
test
sar
mov
xor
or
and
cltd
pop
mov
and
pop
repz
mov
xchg
notb
jnp
das
dec
popf
mov
pop
pmaxsw
in
packsswb
ljmp
jge
fisttps
push
lahf
in
sub
cs
pop
mov
in
xor
cmpsb
mov
dec
out
js
outsl
stos
scas
sahf
or
jo
or
enter
cmc
rcrb
popa
out
jle
repnz
jecxz
jbe
jle
sub
mov
addr16
jns
stos
lahf
adc
cli
movsb
pop
xor
test
mov
fsubr
xchg
stc
xchg
cmp
xchg
mov
shll
insb
stc
lock
mov
leave
fistpl
hlt
pushf
loope
fistpll
inc
mov
mov
lods
subb
in
cmp
imulb
jle
cwtl
add
les
daa
mov
xchg
pop
mov
jmp
iret
daa
jge
push
mov
or
gs
push
mov
jnp
out
jge
outsl
mov
mov
int3
in
enter
xchg
jmp
jae
pop
or
adc
es
jmp
insb
mov
cli
mov
leave
xor
xchg
mov
xor
in
repz
dec
fucomip
insl
pop
cld
mov
cwtl
cmp
dec
sbbl
mov
mov
repnz
repnz
int3
xlat
sub
mov
jle
cld
dec
jb
xor
dec
movsb
cmpsb
fnsave
jb
repz
fsubl
jno
loope
xchg
rcrl
pusha
addr16
test
pop
mov
adcb
pop
push
lea
mov
aaa
dec
in
out
test
sub
pop
mov
ss
pop
pop
int3
and
mov
pop
shr
pop
mov
frstor
inc
lcall
cmpsb
add
nop
inc
and
imul
pcmpgtw
sbb
ss
add
pop
je
sub
xchg
mov
cmp
sub
bound
call
inc
arpl
adc
lahf
fwait
mov
push
xchg
sub
shrl
idivb
sub
aad
leavew
test
pop
pushf
rcrb
clc
adc
insl
xor
nop
add
mov
inc
movsb
jnp
test
daa
test
sbb
in
cmpsb
pushf
iret
push
pop
dec
fucomi
rclb
out
in
add
btc
pop
push
adc
mov
ret
out
sbb
pop
pop
push
lret
xchg
in
dec
rclb
shlb
jae
jno
xor
jb
fstl
in
pop
mov
and
mov
addr16
add
sbb
xchg
stos
push
add
mov
outsl
jle
addr16
push
fbld
cmp
sbb
test
mov
mov
cwtl
andl
std
sti
lret
xor
shrb
mov
mov
das
pop
mov
and
and
sti
or
push
add
mov
xor
pop
gs
in
std
add
dec
dec
rcll
and
xor
and
in
and
sub
cld
add
not
cmpsb
cmp
bound
filds
mov
cwtl
gs
aaa
cmp
jp
pop
sub
dec
movsl
adc
mov
shlb
xor
shll
int
mov
push
mov
or
out
push
movsb
adc
sub
mov
xor
sbb
sub
add
and
das
ret
hlt
inc
pusha
inc
pop
mov
push
xor
test
ret
rol
jge
mov
and
lods
mov
dec
jl
mov
mov
mov
add
sub
ja
mov
adc
pop
sbb
cmp
insl
scas
pop
mov
or
adc
adc
shlb
inc
push
mov
or
cmp
sti
adc
mov
and
push
hlt
xchg
mov
leave
sbb
out
cld
into
sbb
and
cmpsb
in
js
ret
mov
out
mov
cmc
pop
mov
push
aam
jo
jne
cli
lds
rcll
xchg
xchg
mov
mov
in
pop
jne
scas
negb
or
pop
push
ret
sbb
dec
jbe
inc
out
imul
add
sbb
xchg
orl
xor
outsb
mov
notl
mov
inc
push
imul
cmp
jecxz
pop
cmpxchg
lock
sbb
insl
push
mov
popa
pop
movsb
insb
popa
xchg
jae
js
xchg
std
xorb
or
in
dec
add
add
addr16
pop
fs
jnp
adc
adc
mov
adc
das
fidivs
sarb
aad
call
lods
data16
xchg
adc
mov
repz
imul
push
mov
push
cmp
inc
hlt
leave
mov
stos
jmp
xor
dec
mov
das
pop
sarl
repz
sbb
dec
or
lock
call
and
jno
rorl
sub
mov
push
sahf
mov
flds
pop
push
jl
fsubl
outsl
add
sbb
sub
xor
adc
mov
mov
imul
cmp
or
lea
adc
inc
mov
out
dec
lods
xor
xor
push
jbe
add
xor
xlat
std
ja
push
cld
xchg
xchg
add
pop
sbb
lds
stos
aas
fmull
sbbb
ja
cmp
and
fimuls
mov
dec
aas
orl
xchg
fiaddl
sub
push
cmp
insl
clc
adc
ret
dec
lods
enter
arpl
dec
mov
push
lret
adc
es
push
mov
jo
andb
cli
mov
cmpsb
in
repnz
adc
ss
xor
jmp
or
popl
ss
movsl
in
cs
aas
mov
roll
clc
lea
imul
lea
xor
in
pop
dec
scas
das
stc
xlat
push
lods
push
in
enter
dec
insl
add
push
into
inc
mov
das
std
cmpsl
or
fistl
mov
and
divl
xor
clc
inc
mov
lods
add
test
les
adc
fstpt
push
mov
inc
xor
mov
push
adc
daa
and
test
lods
sahf
sbb
inc
dec
shll
fs
aaa
mov
push
adc
inc
rol
or
xchg
or
pop
mov
add
pop
xor
pop
cmp
in
jp
push
or
lahf
sub
pop
lock
vpsllw
add
sub
mov
pop
jp
orl
push
test
mov
adc
aaa
push
sarb
mov
insl
sbb
fstpl
jo
ja
idiv
jns
test
int
xor
dec
pop
icebp
mov
cwtl
fldenv
dec
lret
add
nop
subb
int3
je
jne
dec
lods
ret
stos
xchg
lea
add
mull
xlat
arpl
popa
lds
test
cwtl
push
push
cltd
ljmp
shrb
pop
and
ret
jg
outsb
sub
ljmp
je
in
adc
xchg
xchg
movsb
inc
test
ljmp
cmpsb
adc
fsubl
and
or
jle
loop
ljmp
jbe
and
outsl
cmp
push
test
inc
cmp
mov
jb
add
mov
sub
push
int3
and
mov
ficomps
mov
cmpsb
jecxz
and
add
inc
das
jp
imul
adc
stos
mov
iret
rorl
sub
push
bound
inc
cwtl
dec
call
lods
xchg
imul
cmpsl
popf
push
mov
enter
cmpsl
xor
pop
ljmp
repnz
mov
gs
dec
cmp
dec
inc
cli
movsl
or
imul
popf
out
pushf
mov
cltd
mov
push
ss
mov
jmp
adc
aas
add
lds
int3
sti
mov
jmp
iret
sub
mov
mov
rcrl
lahf
neg
call
stc
jp
inc
insl
rep
push
push
or
add
jle
add
mov
subl
adc
cmpsb
or
or
and
or
dec
xor
push
and
lret
in
lcall
out
mov
loopne
mov
dec
mov
pop
and
adc
lock
jnp
pusha
pop
jae
mov
sahf
out
and
pop
pop
sub
mov
xor
dec
inc
and
add
icebp
and
mov
in
mov
xchg
lock
mov
jge
clc
fstl
pop
adc
scas
cmp
test
popa
push
loop
lret
dec
aad
js
adc
std
ja
ljmp
xchg
dec
xchg
fwait
mov
xor
and
mov
mov
insl
in
lret
ljmp
movb
mov
mov
xchg
test
loop
add
cmp
mov
das
insb
std
adc
je
pop
sub
jmp
shr
sbb
push
xchg
push
bound
aam
jle
ret
std
addl
adc
xchg
mov
xor
daa
mov
push
dec
mov
xor
xor
test
test
cld
mov
mov
std
test
rclb
or
push
mov
pop
and
rclb
sbb
jle
repz
inc
fiadds
xlat
lds
outsl
cld
or
cmp
popf
jmp
je
xchg
scas
push
mov
inc
fistpll
mov
iret
arpl
sub
pop
cmc
test
sub
mov
add
dec
lahf
lods
push
add
xorb
dec
repnz
outsl
imul
outsb
jg
mov
xchg
mov
sub
lods
data16
add
fnstcw
push
cs
fists
cs
pop
les
mov
gs
jp
aam
xchg
enter
sub
lcall
mov
xchg
sub
jg
cmp
sbb
mov
sbb
out
pop
jl
mov
sti
pushf
mov
adc
or
ja
adc
mov
lcall
sub
outsb
fisttpl
mov
jb
sub
jge
pushf
in
mov
mov
loopne
in
adc
mov
sub
fs
imulb
test
call
dec
cmp
xchg
xchg
push
add
movl
xchg
jmp
pop
mov
xor
cltd
xor
ljmp
push
ds
adc
inc
cmpsl
xlat
xor
icebp
lret
lock
pop
mov
mov
js
and
pop
xor
shlb
pushf
arpl
and
cmpsl
mov
sbb
dec
je
in
xchg
mull
push
ss
cltd
push
pop
and
mov
mov
je
xchg
nop
xor
lds
mov
adc
sbb
fs
pop
inc
rcl
sbb
mov
outsb
test
or
adc
or
mov
xchg
arpl
es
std
xor
aam
cmpl
andb
test
cmp
test
insl
cmc
mov
cwtl
jecxz
imul
imul
mov
test
adcb
test
out
jp
mov
mov
mov
mov
xor
scas
jns
jp
xlat
sbb
ljmp
mov
sub
test
pop
push
cmp
iret
stos
mov
ljmp
xchg
ret
mov
adc
sbb
cwtl
sub
fisttps
cmp
frstor
ss
pop
xor
sub
mov
loopne
loope
adcb
mov
int
lcall
pop
mov
lret
push
pop
mov
push
pop
jae
jl
ss
cli
jns
push
dec
and
daa
pop
xor
sbb
xor
fdivrs
int
cmp
ljmp
test
mov
sbb
and
lahf
mov
je
js
jle
sub
inc
loop
pop
movsl
mov
xor
push
xchg
dec
mov
je
cmpsb
sbb
cmp
xchg
cmpsl
push
insb
inc
cmp
dec
mov
lea
cmp
dec
push
ret
jecxz
cmp
and
cmp
shl
inc
lahf
jp
call
lcall
and
sahf
sub
test
inc
dec
test
je
stos
dec
faddl
push
decl
stos
jle
shlb
cmp
or
pop
add
scas
dec
add
mov
in
xor
pop
iret
xchg
mov
push
lods
jnp
jo
bound
rcrl
adc
mov
add
xchg
les
pop
push
jge
jl
ja
xor
dec
add
sbb
lret
cmp
or
sub
dec
dec
mov
sbb
cmpsb
sub
into
lret
scas
sahf
repnz
int
xchg
or
add
sub
das
int
fimull
jnp
mov
push
loop
push
mov
mov
movsl
sub
pop
iret
mov
jl
cwtl
andl
int
movsb
or
dec
xchg
pop
mov
mov
pop
jmp
push
movsb
mov
test
pop
sbb
jmp
mov
lcall
jl
enter
jg
adc
sahf
mov
inc
mov
cli
inc
lret
xor
xchg
push
jns
ds
push
repz
mov
out
nop
nop
movsb
mov
and
out
jle
adc
and
aad
pusha
in
jl
jle
xor
push
sbb
inc
adc
movsl
cld
mov
insl
cmc
fmuls
fisttpll
xchg
cmp
sub
sahf
into
mov
push
cmp
push
jge
divb
mov
test
imul
mov
push
lods
fsubs
jp
leavew
cmpb
xor
add
cmp
mov
in
cmpsl
cltd
sbb
push
xchg
dec
rcrb
out
sbb
mov
adc
popf
mov
mov
fsubrs
cld
addr16
mov
xlat
push
or
inc
xchg
mov
or
movsl
push
call
test
cld
int3
xor
push
jns
loope
rorl
xor
dec
popf
repnz
sahf
jge
pop
cmc
cwtl
mov
es
push
stos
adc
xchg
inc
sub
ja
xor
mov
fs
sub
fisubrs
push
pushf
and
imul
incb
ljmp
xchg
loopne
stos
jle
sub
dec
bound
xor
lock
sti
pop
cld
scas
add
mov
xchg
add
xchg
test
push
stos
sub
cmp
inc
cmp
ss
stos
fmulp
movsb
ffreep
adc
shl
jl
xchg
loopne
push
mov
dec
cmc
sub
out
gs
aam
add
mov
mov
sub
pop
cmp
ja
pop
dec
decl
mov
loopne
adc
test
in
mull
jnp
xchg
mov
dec
push
enter
inc
cltd
inc
testb
nop
imul
out
js
inc
int3
jmp
test
call
cld
rclb
aam
or
clc
dec
xor
mov
dec
orl
cwtl
mov
js
add
out
and
xor
xchg
roll
call
cmp
or
ficoms
fs
inc
scas
xor
xchg
and
adc
enter
push
mov
fwait
jnp
pop
pop
insb
je
movsl
push
pop
push
lcall
jbe
jnp
xchg
cmc
enter
mov
movsl
repz
lock
xlat
xchg
fstps
dec
mov
dec
sbb
shl
js
outsl
pop
pop
cmp
add
inc
mov
adc
mov
fisttpl
pop
inc
pushl
fsubl
outsb
push
daa
mov
cmovb
cmpsb
lahf
call
and
push
fwait
mov
cmpsb
pop
popa
pushf
mov
cli
mov
lcall
xchg
shl
mulb
shl
sub
push
push
pop
adc
lods
xor
lods
inc
mov
call
ds
mov
dec
adc
xchg
out
sbb
aaa
scas
lahf
fists
imul
ret
popf
push
push
cmp
add
fsubrl
int
test
xchg
cmpsl
outsb
insl
and
fsubs
fsubs
pop
in
sbb
or
setle
and
pop
lods
lock
sti
mov
jg
mov
shl
pusha
pop
scas
out
nop
xchg
neg
push
hlt
popa
add
data16
push
lcall
ds
sbb
cmp
call
dec
xchg
mov
imul
add
or
jecxz
xor
clc
adc
push
std
test
jge
xor
sub
test
dec
or
mov
mov
and
dec
int3
int
and
lret
aaa
hlt
fadds
pop
hlt
xor
arpl
mov
sub
pop
jg
sub
sub
dec
push
dec
mov
not
shld
repz
pusha
sbb
es
dec
scas
cwtl
cmpsl
sbb
add
loop
iret
rolb
cli
lret
insb
popl
or
out
incl
orl
xlat
jge
xchg
movsb
sbb
adc
fldpi
xorb
cmp
rorl
lahf
lods
add
aad
popf
pop
stc
cs
lahf
jp
sbb
or
mov
sbb
sbb
imul
push
dec
sbb
push
sbb
inc
cmpsl
mov
ret
inc
pop
sbb
nop
jge
test
xchg
cltd
je
loop
jns
adc
sbb
mov
aaa
sbb
and
cli
ret
mov
fdivr
inc
pop
nop
into
setl
fisubl
mov
out
lahf
mov
loope
jo
pop
insb
stos
sub
clc
jne
jmp
add
inc
ficomps
pop
lock
ds
mov
lret
movntps
adc
xchg
std
rolb
sahf
mov
mov
and
inc
jbe
loop
aam
pop
inc
fisubl
sbb
xchg
adc
mov
shll
mov
inc
sub
loop
lea
call
in
dec
mov
dec
xchg
fsubl
stos
pop
out
ss
inc
repz
aad
mov
in
mov
cmp
popa
cmpsb
ds
add
pop
xor
mov
ret
insb
cmp
lock
shr
mov
xor
adc
xchg
cltd
ljmp
dec
inc
jne
xchg
movsl
aad
jne
test
push
or
sbb
inc
shr
add
mov
push
dec
pop
negl
push
movl
imul
repz
scas
scas
out
mov
pop
push
bound
scas
cmp
int3
dec
testl
loopne
mov
inc
add
mov
inc
repz
imul
mov
pop
les
int
daa
cmp
mov
loope
xchg
push
mul
pop
clc
pop
cmp
and
push
pop
xlat
cmp
pop
jae
push
push
loopne
andl
lcall
add
jbe
andl
add
xchg
test
mov
adc
clc
jge
sub
mov
subl
pop
pop
outsl
inc
pop
rorl
or
jae
push
push
inc
inc
je
movsl
data16
mov
lret
mov
inc
mov
movb
jns
cmp
in
fwait
mov
push
push
jl
aam
dec
aad
jo
inc
adc
xor
enter
mov
jmp
mov
andl
lds
rol
sub
sarb
mov
cmp
mov
lods
xlat
cld
adc
mov
std
pop
and
or
adc
push
mov
loope
dec
mov
cmpsb
inc
sub
shll
sub
push
pusha
mov
mov
sub
sub
jle
cmp
cld
aam
mov
inc
mov
ss
testl
and
in
cmpsl
xchg
pop
push
pop
leave
cmpsb
jnp
mov
xchg
xchg
iret
xchg
pop
mov
or
stos
pop
bound
loope
adc
xchg
mov
stos
cmp
push
cmc
xor
rol
test
inc
mov
jne
pop
cmpsl
cmp
or
push
stc
sbb
and
cli
mov
jl
push
sahf
test
sub
test
pusha
xchg
ret
pop
cltd
sub
mov
or
push
push
lret
jge
push
hlt
or
movsl
cmp
std
jnp
add
inc
inc
out
lods
jmpw
cli
arpl
xor
mov
cmp
dec
push
mov
pop
xchg
mov
stc
loopne
ja
add
pop
push
jnp
cwtl
lret
mov
mov
mov
and
rorl
movsl
jmp
insb
das
fiadds
and
or
push
in
inc
loopne
loopne
test
mov
push
and
pop
sbb
inc
outsb
jae
aas
cmpsb
sbb
cwtl
decb
aaa
fldcw
fcompl
mul
iret
loope
lods
outsb
inc
popa
out
call
push
and
fdiv
jl
cmpsb
daa
inc
pop
shll
fldenv
pop
cmp
inc
iret
lcall
dec
jne
hlt
out
rolb
sahf
jnp
rolb
enter
mov
aaa
push
pop
cmp
pushf
sbb
pop
dec
mov
xchg
jno
mov
jge
and
add
dec
pusha
hlt
sub
loop
and
lock
icebp
test
test
push
push
shlb
ret
mov
test
sub
jmp
pslld
arpl
mov
ja
cmpsb
mov
xchg
push
jne
movsl
or
add
mov
mov
add
aam
jo
sbb
pop
es
push
hlt
mov
int3
jae
adc
pop
scas
and
mov
push
ret
jne
movsb
out
inc
rorl
sub
out
ljmp
cltd
pop
mov
jno
incl
pushf
pop
cmp
push
lcall
xchg
mov
and
pop
sub
pop
push
xor
or
fcomp
xchg
jle
pop
inc
lahf
push
das
xchg
mul
lds
adc
xor
cmp
ja
sub
inc
xchg
push
mov
int3
stos
pop
fistpl
hlt
scas
sbb
fmull
jb
fistpl
push
push
lcall
fs
dec
and
xchg
std
jne
jae
dec
clc
and
mov
jmp
push
and
push
and
aam
cltd
ror
sbb
hlt
mov
out
sub
push
inc
hlt
push
fcmovu
lcall
rcrb
push
aas
jae
jle
sarl
mov
xchg
add
sub
or
push
sub
pusha
mov
and
dec
ret
sub
inc
cmpsb
sbb
push
push
pushf
pop
addb
jle
fdivl
rcrb
mov
or
add
add
les
jg
mov
push
ret
and
pushl
mov
mov
push
shlb
mov
scas
xor
int
xor
add
pop
shrb
dec
sar
mov
jnp
xchg
movsl
lock
imul
cmp
ret
repz
lcall
xor
pop
inc
dec
xchg
lods
das
sbb
push
sub
cs
adc
push
dec
and
aad
sahf
sbb
push
add
into
xchg
nop
lods
pop
and
push
sbb
fdivl
inc
popf
fildll
cs
or
push
inc
lods
insb
call
int3
ret
cli
mov
cmpsl
lods
lar
imul
fs
movsb
jae
sbb
add
in
lods
adc
in
scas
xchg
push
lods
adc
inc
sub
mov
push
push
sub
ja
pushf
aas
cmp
mov
add
pop
sub
call
or
aam
dec
sub
or
xchg
add
cmp
mov
ja
mov
iret
fbld
cmc
imul
les
enter
xchg
mov
push
cmpsl
outsl
enter
sub
fildll
fwait
pop
adc
lret
rclw
insl
ss
mov
jns
pop
sbb
xchg
adc
xor
xor
mov
nop
lods
call
pop
out
lcall
pop
outsl
mulb
pop
mov
sub
test
dec
scas
cmp
jb
test
ljmp
push
std
mov
pop
ds
mov
dec
lcall
gs
int3
outsl
adc
mov
hlt
adc
mov
rcll
imull
icebp
bound
dec
xor
adc
add
lahf
mov
push
rol
push
jl
repz
call
test
add
jnp
mov
out
popf
xlat
mov
inc
shr
stos
jb
dec
push
out
ficompl
imul
test
mov
aaa
mov
sbb
and
sub
add
pop
push
push
pop
or
jmp
daa
stos
pop
repnz
dec
cmc
les
out
loop
ds
xorb
rol
cltd
shr
bound
xor
sbb
xor
or
pop
push
imul
sbb
jmp
or
pop
idivl
leave
adc
int3
dec
js
cmpsb
das
dec
jge
adc
mov
icebp
mov
hlt
jnp
and
adc
in
fbld
out
inc
and
outsl
xchg
and
or
xchg
out
add
dec
jp
sti
xlat
ror
mov
lods
gs
arpl
mov
cmp
inc
jp
mov
repnz
push
aam
mov
sbb
cs
pop
call
lcall
mov
popf
and
cmp
fsubl
leave
stos
xor
mov
or
xchg
aaa
mov
ss
arpl
fdivrl
push
mov
imul
mov
cwtl
jmp
and
insl
mov
or
shrl
jl
js
lds
in
push
lods
dec
jp
xor
mov
or
lods
aas
sbb
lods
push
mov
iret
in
jbe
test
xlat
rcrb
dec
xchg
clc
mov
neg
jge
cmp
into
setnp
jb
fst
add
iret
push
sbb
andb
addr16
push
bound
sub
int3
incl
xor
xchg
ffree
es
push
dec
cmc
out
adc
mov
pop
sar
fs
push
pop
push
insb
pop
ret
add
subl
mov
test
xchg
out
cs
mov
lea
mov
outsb
outsl
inc
cmp
mov
pushf
cld
xor
push
xor
add
cmpsl
jo
rcll
cmpsl
je
mov
sarb
ret
ret
mov
sub
ret
mov
push
inc
out
push
mov
dec
sbb
fistps
dec
cmp
loope
enter
in
jns
push
mov
icebp
push
dec
mov
xchg
dec
mov
sbb
push
xlat
or
sti
int
mov
addb
scas
negl
arpl
jb
popa
lahf
xor
mov
cmp
mov
xchg
push
minps
sbbb
xchg
sbb
jnp
sub
jmp
xor
dec
fs
sbb
and
mov
push
push
xchg
sub
or
and
pop
test
mov
sarl
nop
push
aam
sahf
mov
in
int
add
outsb
cmp
pop
cmpsl
out
push
leave
outsl
ret
dec
das
xchg
cwtl
or
movsl
or
dec
xchg
jb
cmp
or
lock
push
push
jbe
xlat
mov
dec
jmp
xchg
mov
xchg
mov
push
jp
mov
adc
pop
pop
inc
jbe
insl
and
je
mov
xor
sbb
jg
dec
or
popf
cmpl
popa
pop
xor
icebp
jb
lcall
mov
cmc
shlb
test
or
pop
jbe
sbb
pop
mov
push
mov
iret
xchg
sti
movsl
lahf
sbb
mov
sbb
mov
mov
mov
dec
inc
inc
mov
cmp
sbb
icebp
fldcw
pop
daa
movsb
fisttps
aas
cmp
fcoms
push
cmpsb
mov
pop
aam
in
and
insl
rcrl
stos
imul
jge
aad
ret
pusha
mov
sbb
shrb
jl
xchg
std
je
or
inc
pop
dec
xchg
adc
out
mov
dec
xor
xchg
jmp
testb
pop
pop
xchg
inc
push
lcall
xchg
xor
cmp
loope
leave
sbb
stc
es
jmp
mov
out
and
or
leave
jno
or
fldl
orb
dec
std
js
sub
and
mov
or
add
and
xchg
mov
sbb
adc
testl
fidivl
movsl
imul
push
cmp
jle
sbb
add
jbe
mov
xor
das
lret
test
fs
dec
mov
mov
addr16
scas
dec
dec
jno
mov
cs
mov
cmp
jmp
mov
sub
pop
shl
ret
cs
mov
scas
push
imul
and
mov
adc
incl
dec
pop
pushf
jae
mov
fstpt
jae
pushf
xchg
jmp
mov
push
and
adc
out
pop
mov
add
and
fstl
out
mov
sbb
push
lret
test
mov
cmp
mov
lret
enter
sub
popf
popf
jmp
jecxz
xorl
sub
pop
arpl
bound
bound
xlat
out
sbb
nop
sub
lds
pop
hlt
fdivrp
and
fstpl
es
mov
hlt
int
dec
push
and
add
jo
xorb
bound
inc
aad
or
sar
push
mov
dec
pop
xor
mov
je
pop
xor
lock
sub
mov
mov
and
xchg
inc
outsb
roll
icebp
addr16
sub
push
cmp
sub
sbb
xchg
enter
xchg
loopne
or
push
imul
repnz
cmp
notl
in
add
repz
ja
loop
xor
cmp
enter
or
imul
pusha
cmp
loopne
dec
mov
xlat
xchg
testl
mov
fsubr
adc
pop
enter
mov
cmpsl
sbb
sub
xor
lock
jg
aam
scas
dec
mov
dec
cmp
push
or
xlat
out
lcall
test
sub
xor
xor
pop
push
jb
fdivl
add
ret
sar
xchg
sahf
movsl
sub
dec
jnp
or
subl
in
push
cmpsl
add
es
loopne
out
lock
jmp
dec
mov
xchg
adc
leave
xor
ljmp
xor
fstpt
adc
jmp
mov
es
icebp
fsubs
inc
les
push
cmp
jge
into
cmpsb
rcrb
call
mov
adc
fadds
pop
fwait
test
call
jmp
lahf
pop
mov
push
cld
cmp
dec
or
inc
mov
add
mov
std
arpl
add
cmp
lret
cld
dec
movb
mov
mov
imul
ret
pop
mov
xlat
in
testb
jmp
dec
sbb
roll
mov
into
pop
data16
jle
and
out
pop
jno
ljmp
iret
adc
imul
push
push
mov
push
aad
movsl
xor
jo
lcall
imul
inc
enter
jp
mov
repnz
data16
lock
xchg
shll
mov
bound
loopne
mov
jb
jno
mov
mov
sub
lret
ljmp
imul
dec
xor
repz
loop
cmp
rcr
jl
inc
sub
mov
test
rcrl
jle
mov
cmpsb
xchg
mov
fwait
dec
and
leave
ljmp
pusha
and
mov
cmc
subl
add
loop
push
cmp
cmpsl
scas
push
sbb
adc
out
fistps
std
out
and
push
stos
lock
mov
fdivs
rorl
jns
xchg
dec
or
std
xchg
daa
add
repz
inc
popa
push
aas
cmpsb
out
add
icebp
mov
jbe
pop
roll
and
ljmp
mov
cmp
inc
lahf
rcrb
jmp
pushf
push
inc
adc
cld
xor
cli
mov
xchg
imul
push
lahf
xor
jmp
and
sub
pop
imull
movsl
sbbb
cltd
aaa
lret
outsl
xlat
pop
cwtl
sub
ret
xchg
xor
ret
mov
xchg
shlb
lods
jg
nop
jl
dec
mov
lds
jb
sbbl
int
dec
insl
imul
bound
sbb
lcall
pop
mov
lret
imul
rorb
and
in
push
iret
std
xor
imul
jle
jle
pushf
xchg
dec
aas
pop
lcall
out
jns
pop
int3
les
addr16
fnstcw
mov
adc
inc
in
mov
adc
xor
jo
ret
pop
mov
pop
xor
inc
cmp
and
lahf
jo
cmp
das
lea
pop
sbbl
pop
dec
int3
lock
insl
daa
inc
clc
push
lods
jnp
mov
adc
mov
xchg
or
int
bound
dec
loopne
mov
ror
xchg
lret
push
frstor
cli
add
adc
push
and
and
xor
daa
int
xchg
fucomi
inc
test
mov
jge
dec
jns
inc
aam
aad
dec
mov
push
sbb
cli
adcb
mov
dec
sahf
fiadds
mov
cmc
sbb
mov
insl
aam
popa
pop
adc
fnsave
test
aad
add
dec
ds
test
mov
daa
jns
and
xchg
pop
lea
subl
mov
lods
movsb
inc
dec
je
dec
pop
cmpb
test
inc
xchg
mov
subb
test
dec
cmp
loope
into
add
cmc
pop
mov
cmpsb
adc
sub
int3
mov
pop
jo
lret
movb
test
insl
test
jns
adc
test
mov
dec
filds
test
jp
add
int
jae
dec
or
sbbb
enter
test
in
loope
or
movsl
fistpll
push
out
aad
outsb
jb
xor
xchg
mov
fistpll
add
aaa
dec
mov
inc
jb
into
push
or
lahf
sbb
stos
sbb
enter
fwait
movsb
xchg
je
loopne
shll
pop
jns
push
push
int3
mov
loop
dec
cmpsl
inc
inc
xchg
into
inc
sahf
mov
mov
fistpl
cs
add
lcall
sub
ljmp
xor
sbb
cmp
fmuls
jmp
popl
in
mov
in
xchg
pop
movsl
aam
mov
es
ljmp
and
or
js
adc
jecxz
stos
std
rol
mov
jns
inc
stos
pop
lock
cmp
mov
jne
fistps
mov
cmp
sahf
xchg
mov
out
jae
pop
inc
dec
mov
jle
xor
xor
add
cmp
add
repnz
xchg
xor
cs
jg
cwtl
roll
push
movsl
add
xlat
jmp
ret
mov
lods
in
or
mov
das
push
out
add
ret
push
int3
push
mov
and
and
out
dec
jne
out
jb
jb
mov
stos
push
add
cmp
sbb
fistps
ss
insb
add
xor
pop
jo
dec
mov
push
cmpsb
adc
fldenv
mov
in
xchg
jp,pn
push
inc
mov
xchg
daa
ljmp
adc
cmpsl
ficoml
movsb
inc
mov
mov
push
and
mov
mov
mov
dec
or
push
pop
inc
jg
xorb
addr16
cmp
cmp
int
pop
imul
fisubrl
cmp
repnz
xor
push
ds
bound
je
cmp
mov
mov
or
or
je
into
cmpsl
ret
or
xchg
out
icebp
shr
inc
out
fwait
add
mov
push
int
xchg
testl
mov
pop
sub
dec
xor
mov
sbb
fwait
imulb
scas
shl
lods
lods
repz
pop
in
or
shlb
lahf
xor
cmpl
xchg
int3
pop
incb
adcl
nop
jno
pop
add
insb
mov
sahf
xor
mov
dec
mov
and
and
xorl
cmp
xlat
push
cmp
push
jnp
addr16
lock
xchg
shrl
out
or
or
jb
inc
insl
or
and
arpl
in
push
mov
insl
mov
les
push
add
cwtl
push
or
jmp
cmp
push
sbb
inc
cmp
lods
int3
sub
or
sub
sub
jne
jnp
mov
mov
or
ss
imul
push
cmpsb
dec
push
xchg
in
iret
cmp
je
xchg
les
sub
jb
negl
dec
adc
mov
pop
sub
repz
adc
sbb
mov
fldcw
inc
cmpsl
jno
push
pushf
data16
xchg
mov
xor
jno
sti
lcall
repz
scas
pop
sub
cwtl
mov
repz
jns
jp
mov
shl
aas
nop
pop
add
cltd
mov
pop
pop
inc
adc
outsb
sbb
jo
lods
pushf
add
adc
icebp
nop
fnstsw
xor
mov
jmp
lods
fstpt
mov
enter
andl
xchg
loop
dec
mov
pop
cmp
popa
stos
jnp
outsl
fildll
or
sbb
nop
mov
lock
gs
add
xchg
shl
cs
add
in
add
aaa
ljmp
cmpsl
push
jae
cs
test
mov
shlb
or
xrelease
out
pop
add
nopl
lea
xchg
pushw
test
dec
daa
inc
inc
mov
dec
popa
gs
xchg
div
adc
xchg
mov
adc
or
pusha
les
mov
push
int
mov
lahf
lret
cli
sub
or
jl
das
pop
jl
stos
add
jmp
es
dec
adcb
ljmp
out
xchg
mov
push
fidivl
jno
in
addr16
ficoml
push
xchg
push
add
mov
sub
jnp
sub
dec
pop
sbb
or
out
rclb
pop
scas
outsb
mov
adc
test
inc
jl
push
push
jbe
jns
mov
mov
daa
or
repnz
outsl
pop
jns
clc
and
dec
jl
xor
adc
arpl
mov
ss
mov
pop
cmp
sbb
jmp
dec
pop
jnp
mov
mov
repnz
out
and
roll
shlb
in
xchg
push
sbb
imul
out
add
int3
xor
adc
repz
insl
test
test
call
cmp
mov
in
aam
scas
addb
sbb
jmp
fsubrs
insl
jl
fnstenv
in
sub
pop
outsb
jb
mov
in
std
mov
cmpb
sbb
fdivl
shr
push
mov
mov
scas
lock
cmc
cmpsl
lods
xlat
cmpsl
out
out
std
mov
cmpsb
fucom
xchg
dec
cmpb
call
or
mov
xchg
adc
popa
inc
xor
mov
mov
xorl
cs
push
or
push
data16
pop
aas
mov
cmovns
xor
lret
mov
or
icebp
xchg
daa
add
cmp
dec
and
add
and
jo
pop
mov
pusha
ds
fsubs
test
pop
push
ret
notl
into
in
repnz
fmul
arpl
movsb
rcr
push
cmc
das
or
jle
xchg
scas
repz
sahf
mov
sub
mov
ret
or
cmp
dec
cmpsb
and
or
push
mov
dec
aam
sub
mov
das
daa
test
insb
rorl
testl
std
movsb
ret
out
xchg
cmpsb
push
ret
xchg
mov
dec
lock
or
pushf
mov
popf
jne
jnp
stc
popa
int3
dec
dec
or
jge
or
in
xor
jg
xchg
cmp
loope
mov
inc
fnstcw
dec
pop
adc
lods
mov
jp
pop
das
lcall
and
fnstcw
mov
xor
inc
push
cmp
jo
out
mov
nop
dec
xchg
icebp
out
xchg
std
sarl
scas
inc
xlat
andl
fs
in
movsb
push
dec
mov
fwait
or
push
fsubs
cmp
insb
jmp
xchg
jns,pt
or
push
inc
xchg
andl
shrl
pop
xchg
std
jbe
or
jb
push
data16
cmp
dec
inc
pop
push
sbb
fists
fisttpll
push
fdivrl
mov
shl
cmovl
cmp
sbb
cmp
xchg
push
enter
or
cltd
fwait
pop
xchg
dec
pop
sbb
or
push
sub
pushf
dec
mov
push
stc
and
jmp
rorl
dec
popf
mov
mov
loopne
xchg
shrl
mov
jp
jecxz
mov
scas
xor
sub
inc
inc
ficompl
sbb
inc
sarb
xchg
adc
push
and
mov
xchg
sub
mov
mov
jge
or
and
and
aam
test
add
fbstp
xchg
mov
jmp
cs
test
mov
out
mov
lds
imul
pop
pop
add
sbb
pop
jo
sub
xor
lds
gs
stos
sahf
pop
xchg
mov
sbb
mov
int3
adc
cmovbe
cmp
xor
sub
inc
mov
pop
and
cmp
sub
dec
push
mov
and
insl
push
dec
scas
mov
inc
cs
pop
test
sarl
test
int
nop
cli
movsl
mov
adc
inc
add
test
enter
out
test
stos
mov
jecxz
or
jle
xchg
mov
fs
adcb
or
adc
popl
loope
roll
sbb
xchg
out
inc
dec
ret
je
pop
pop
das
cmp
xchg
gs
mov
cmp
pop
ret
insl
xlat
in
jl
dec
lahf
bound
rolb
dec
lds
and
pop
mov
add
sub
loop
jns
sub
inc
mov
lret
mov
clc
es
xchg
xchg
cmp
pop
andl
mov
in
or
aad
imul
dec
orl
in
sbb
lcall
cwtl
repz
ret
push
fwait
out
das
push
push
xchg
xchg
mov
mov
mov
stos
sbb
sbb
iret
sbb
fiadds
adc
in
ret
out
mov
push
mov
hlt
ss
cmp
lcall
int
add
jp
xchg
mov
lods
xchg
mov
call
fisttps
imul
adc
dec
or
gs
mov
movl
dec
jmp
push
mov
or
cwtl
mov
pop
sub
iret
imul
fimull
dec
test
test
adc
sub
popf
leave
fisubrs
xor
movsl
addr16
bnd
sbb
jle
dec
sbb
popf
or
cwtl
mov
je
fiaddl
fs
mov
and
xchg
repnz
data16
mov
popf
arpl
ljmp
test
pop
inc
testb
and
icebp
mov
mov
ret
sysret
cmpsb
inc
shl
pop
push
int3
fnstenv
aaa
jl
mov
mov
jle
cli
aaa
cmp
lcall
dec
pop
push
push
es
pop
fldcw
jnp
add
daa
mov
fdiv
sbb
insl
xchg
mov
stos
stc
adc
mov
push
das
pusha
adc
lods
inc
sbb
cmp
ret
sub
sbb
jbe
xchg
jne
push
jnp
adc
sub
cltd
push
cmp
mov
fsubrl
out
dec
cmpsl
outsb
mov
pop
es
bound
jae
mov
icebp
mov
and
aam
xchg
jge
sbb
and
test
and
and
enter
lcall
push
and
pushf
sub
mov
jnp
mov
inc
enter
fidivrs
inc
test
mov
mov
js
mov
push
and
mov
inc
xchg
js
mov
xchg
stos
mov
outsl
call
sbb
cmp
pop
fucom
xchg
or
mov
stos
fidivl
scas
mov
dec
bound
cmp
add
mov
add
inc
jb
aaa
loopne
inc
rclb
xchg
mov
pop
jmp
push
imul
test
sub
pop
js
les
movsb
lcall
outsl
push
jmp
mov
jg
sub
fcom
jbe
mov
gs
mov
insl
xchg
outsb
xchg
sub
shlb
das
movsb
dec
jns
repnz
or
xor
lods
adc
xor
mov
cs
add
pop
xor
jo
in
cltd
adc
adc
mov
insb
mov
sbb
mov
fdivs
mov
sbb
or
lods
pushf
sahf
cmp
hlt
sub
repz
adc
mov
or
mov
cmp
lock
push
inc
fdivl
std
mov
mov
pop
pushf
cmp
dec
or
mov
adc
cmp
int3
es
fsubs
xchg
popa
fwait
leave
and
fistl
mov
push
popf
sub
dec
mov
addr16
filds
pop
xchg
adc
lock
pop
imul
call
out
xchg
sub
mov
in
jo
adc
stos
sahf
imul
lock
js
in
stos
icebp
outsb
out
das
xor
leave
or
pusha
xor
js
xor
out
iret
add
mov
rol
repz
jge
jmp
mov
xchg
mov
sti
and
mov
sub
push
sub
aas
adc
in
mull
and
dec
mov
lds
popf
shll
addr16
into
mov
cmp
pop
das
sbb
mov
stos
jle
jo
js
rclb
adc
cmc
push
cwtl
adc
xchg
mov
iret
mov
scas
pop
or
xchg
loop
pop
lock
push
iret
popf
test
dec
popa
addr16
jmp
add
lahf
pop
jmp
fsub
adc
sti
add
add
nop
jnp
movsb
sbb
gs
fimuls
and
or
mov
mov
add
jae
ficoml
xor
je
dec
cmp
inc
insb
add
xchg
pop
pop
stc
lods
mov
adc
jno
mov
sbb
mov
fsts
sti
daa
cmpsl
push
lahf
mov
mov
lea
in
popf
xchg
cwtl
inc
inc
int3
push
gs
add
call
js,pt
inc
stc
sti
add
bound
lret
lret
out
cmc
inc
xorl
cmpl
lret
roll
mov
cli
cmp
add
pop
adc
fwait
xchg
lahf
sub
cli
pusha
mov
fs
iret
je
mov
je
mov
out
cmp
inc
xchg
fnstenv
into
leave
mov
out
rcr
push
mov
leave
rolb
push
push
add
push
in
shll
out
in
fdivrl
adc
aad
push
xor
outsl
test
jp
add
cmpsb
or
int3
test
movsb
aaa
cli
hlt
xchg
mov
iret
push
stc
call
mov
jne
cmpsb
dec
and
das
call
and
jmp
test
lcall
push
clc
and
mov
in
scas
mov
xchg
daa
je
ror
test
lods
sbb
int3
xor
adc
sbb
aas
jbe
or
pop
push
flds
aaa
out
mov
or
mov
sti
test
jbe
add
push
mov
std
aam
cld
sbb
shr
repnz
out
dec
enter
xchg
jp
div
and
jecxz
or
subl
pop
pop
test
iret
ret
jmp
testl
fwait
or
lods
cmp
and
stos
jns
lea
fnstsw
add
mov
ss
stc
xchg
jl
or
out
mov
sahf
test
icebp
xchg
sub
loopne
add
aaa
add
cld
dec
dec
mov
filds
adc
in
pop
arpl
adc
pop
pop
or
pop
mov
dec
call
mov
cli
cmp
mov
scas
push
insl
je
lock
in
fs
mov
inc
dec
dec
cmpsb
mov
xor
mov
sbb
xor
or
and
loopne
mov
add
sub
pop
int3
push
movsl
push
cmp
or
add
loope
data16
or
pusha
cmc
insl
mov
inc
lret
sbb
les
xchg
testl
sbb
xchg
and
ds
enter
or
add
das
mov
insb
sbb
mov
cmp
in
dec
sub
insb
cmp
sbb
rclb
push
push
std
cmp
stos
mov
xchg
dec
lret
add
dec
or
xchg
fadd
dec
lret
push
lods
xchg
clc
adc
xchg
pop
push
pop
dec
dec
lret
mov
addr16
inc
in
push
out
dec
mov
pushf
dec
xchg
in
pushf
shrl
inc
xor
cmpsl
in
mov
cli
mov
decl
ret
aaa
mov
cmpsb
jbe
shr
sub
cltd
push
xchg
jl
or
fisubs
dec
mov
scas
dec
in
sub
icebp
call
imul
adc
pop
sub
xor
jge
sar
loop
testl
cmp
lea
aad
insb
lock
mov
pop
push
bound
sbb
movsl
fstpl
push
lcall
and
sbb
cmpsl
stos
outsb
inc
icebp
addr16
or
ja
push
jbe
push
in
movsb
call
scas
sahf
cmp
into
xchg
loopne
or
test
out
push
or
cli
call
lods
adc
push
out
jg
rcl
mov
lea
into
scas
rorl
mov
cmp
rcrl
cmpsl
sti
movsb
inc
lret
or
lea
adc
sub
or
push
add
jmp
cmp
cmp
mov
cmp
push
rorb
mov
mov
fmul
cmp
cmpsl
ss
push
jne
shrl
rorl
push
aam
int3
pop
inc
hlt
cmp
xor
push
jo
or
cmpl
fmuls
push
mov
into
or
jmp
adc
insb
fiaddl
xchg
mov
inc
jae
and
loop
xchg
lahf
cmp
movsl
xchg
jge
adc
fmuls
inc
xchg
mov
lods
test
push
jmp
and
out
mov
xchg
pusha
sbb
inc
int
mov
mov
dec
sbb
cmp
xchg
cmp
xor
xlat
lahf
std
les
sub
clc
into
shl
inc
out
pop
push
in
inc
adc
leave
push
pusha
rclb
jo
mov
adc
test
add
call
push
fwait
or
pushl
mov
int
cmpsl
or
mov
and
fistpll
cmc
sbb
cld
mov
call
mov
paddusb
pop
shlb
sbb
xchg
popf
cld
cmp
adc
roll
add
pop
repnz
mov
and
mov
xchg
je
mov
dec
mov
sbb
lock
jl
inc
dec
inc
ja
popf
aam
shlb
mov
lcall
std
xchg
icebp
xchg
data16
xchg
mov
xchg
stos
inc
ror
mov
out
dec
lret
sub
fldl2t
aam
test
aas
mov
mov
mov
cmp
adc
adc
or
adc
stos
inc
jns
ret
push
mov
out
mov
xchg
scas
jmp
movsb
cmp
adc
repnz
jae
pop
mov
adc
or
mov
xchg
xchg
insl
push
mov
mov
xchg
testl
les
xchg
test
jp
mov
cmc
pop
push
xor
cmp
mov
cmp
inc
mov
xlat
lock
dec
insl
cmp
sbb
fcmovb
idiv
dec
mov
or
pushf
and
hlt
pop
jno
mov
mov
push
inc
inc
js
inc
dec
mov
orb
xor
in
fistpl
adc
jl
mov
push
sbb
xor
into
jno
gs
pop
adc
sub
fstps
cmp
roll
xor
icebp
add
test
adc
pop
fisubs
inc
das
adc
jp
lcall
cmp
in
add
cmp
sbb
dec
jecxz
add
loopne
cmc
sub
inc
mov
inc
addr16
jge
stos
push
dec
xchg
and
add
cmpsb
sub
push
sbb
push
and
mov
push
mov
cmp
jae
adc
dec
in
mov
stos
mov
sub
sti
leave
in
inc
xor
xchg
cmp
test
sbb
jle
inc
pusha
sti
ss
and
jecxz
in
cmpsb
and
push
mov
arpl
jmp
cmpsb
std
lods
sbb
aad
andl
mov
sbb
adc
add
cs
dec
in
or
pop
sub
sub
rorb
dec
sub
adc
nop
lahf
hlt
mov
inc
leave
mov
movsl
addps
es
bound
xchg
fadds
fisttpll
mov
aaa
dec
insl
inc
notb
mov
jo
sub
inc
cmp
enter
and
and
nop
push
loope
andl
dec
push
mov
test
scas
mov
sarl
ret
pop
dec
lret
je
pop
jne
scas
jle
pop
ret
popa
adc
mov
cmp
push
fimull
jo
int3
mov
and
imul
jmp
mov
ror
leave
or
imul
lret
cmp
hlt
push
xor
xor
xchg
and
xor
fwait
lret
mov
push
ljmp
fbld
fs
xor
cmp
lcall
mov
jbe
sub
aam
pop
inc
pop
repnz
push
mov
sub
pop
test
mov
lcall
ret
add
test
testl
add
ret
add
repz
mov
in
mov
and
je
mov
hlt
stos
pop
cmp
rolb
dec
push
fildl
pop
shll
rclb
outsb
iret
xchg
cltd
inc
cmp
sahf
jo
leave
out
addl
jbe
mov
loop,pt
repnz
fstps
cmpl
int3
or
jns
lahf
xor
mov
or
sbb
xchg
aaa
pop
mov
aad
inc
mov
xchg
inc
xchg
decl
or
add
jecxz
ss
popf
ss
lea
adc
cmpsb
ficompl
out
mov
es
aaa
cli
mov
xchg
xchg
int3
movsl
push
xchg
scas
jb
push
pop
insl
fdivrl
loop
mov
mov
push
ret
lret
aad
adc
test
cmc
mov
stos
pop
pop
hlt
loopne
and
dec
in
rol
jg
fdivrl
test
into
dec
jmp
dec
les
divb
jmp
aam
xchg
mov
idivb
lods
cmc
out
xchg
mov
cmp
jns
jne
sahf
xor
cli
mov
das
push
pop
fstpt
scas
aam
lret
pop
jbe
lea
push
pop
leave
mov
insb
mov
xchg
adc
sub
jmp
nop
jo
rcl
into
jmp
orb
shrl
xor
aas
aas
std
inc
xchg
cld
jbe
cmp
cmp
lock
mov
cmpsb
mov
arpl
sub
int3
lds
mov
sub
push
out
xchg
and
xchg
jmp
or
pusha
or
jle
cmp
ror
or
push
mov
xchg
dec
stos
cmp
sub
test
xlat
push
cmp
mov
dec
jne
arpl
into
cmp
popa
jle
in
add
ljmp
lods
adc
scas
mov
inc
pop
test
inc
popa
sar
mov
sbb
pop
push
mov
stos
ljmp
mov
sbb
jnp
sysenter
iret
and
adc
loopne
inc
push
test
mov
push
mov
outsl
xchg
jo
cltd
push
out
and
sub
cmpsb
dec
sub
pop
push
inc
xorb
ja
mov
js
sbb
mov
popa
rcrb
shr
or
lret
xchg
insb
jne
and
mov
sahf
fs
test
xchg
out
push
scas
xor
lds
or
mov
stos
mov
cs
xor
pop
rorl
aas
outsb
jnp
inc
and
lea
loop
jbe
push
repz
stc
dec
std
in
mov
imul
fcmovu
push
test
fcoml
or
pop
addl
enter
mov
mov
push
loopne
xchg
pop
or
and
std
pushf
outsb
adc
pop
bt
inc
pushl
xchg
cltd
cmovle
add
adc
fbstp
cwtl
inc
mov
cmp
dec
movsl
sub
daa
in
xchg
sub
mov
inc
pop
sbb
xchg
push
sbb
mov
shll
jo
add
sub
push
mov
dec
cmp
mov
or
clc
fistps
ss
scas
sbb
pop
rcr
adc
aad
add
pushaw
fnstsw
add
je
pushf
dec
pop
fnstenv
sub
xor
pop
jl
fisttpll
adc
out
in
mov
xorb
out
dec
lock
orl
mov
sbb
imul
lods
sarb
shll
test
push
stc
push
cwtl
sbb
dec
in
inc
mov
leave
fs
shlb
mov
push
jg
xor
in
std
xor
xchg
jbe
xor
sbb
mov
sub
and
das
or
test
repnz
xchg
dec
jo
ss
mov
fisubrs
je
sbb
inc
cwtl
sarb
inc
movsl
filds
mov
and
orl
int
aad
into
pop
insl
mov
jle
sbb
bound
jl
xchg
dec
push
mov
cmp
std
cmp
fcmove
test
bound
mov
addb
mov
arpl
outsb
sbbb
pop
jno
adc
fwait
cmpsb
mov
aad
push
clc
push
data16
or
jmp
call
popa
shll
test
xor
popf
bound
in
push
adc
shll
jp
push
fwait
mov
push
push
in
lcall
test
daa
cmp
call
inc
lock
mov
mov
imull
push
lahf
mov
out
and
jo
xor
loope
cmp
mov
repz
es
jb
dec
adc
hlt
push
stos
rcl
rclb
cmp
jle
addr16
lock
gs
jle
or
ds
hlt
jle
xor
stos
out
xor
mov
jae
mov
adc
shlb
sub
xchg
scas
or
fldcw
fstl
xor
push
inc
xor
xor
bound
inc
xchg
ds
outsl
ret
cmp
sbbl
mov
clc
cs
jae
lock
sub
or
cmpsl
fs
inc
into
bound
mov
push
cmp
sbb
popf
and
xor
pop
push
sbb
lret
test
int
dec
push
lods
mov
in
mulb
popa
ljmp
mov
pop
subl
movsb
jne
lods
mov
into
cmpsb
and
xchg
mov
loopne
adc
lret
mov
push
adc
xchg
imul
cmp
push
mul
gs
push
add
jno
pusha
xor
scas
hlt
cmp
xchg
xchg
int3
jno
jnp
inc
inc
xchg
pop
push
jo
sbb
push
les
popa
mov
jg
sub
aaa
pop
or
mov
call
dec
data16
cwtl
add
mov
xchg
inc
jne
rorb
pop
jb
loopne
dec
aam
fwait
in
mov
addr16
loop
sbb
pop
icebp
push
adc
js
mov
and
adc
or
ljmp
mov
inc
psubw
xor
jle
mov
fstl
sbb
or
jmp
push
and
mov
int
fs
jmp
shlb
xchg
movsb
jno
adc
mov
sbb
jb
cs
jmp
loope
enter
dec
adc
sub
push
test
mov
leave
mov
pop
cmp
decb
sbb
xor
dec
decl
ljmp
push
in
inc
pop
fs
push
add
cmp
jnp
sub
popa
jne
repz
in
fdivs
inc
fisttpl
movsl
pop
cmp
xchg
mov
icebp
xchg
imul
jne
mov
daa
and
mov
jmp
lods
inc
out
mov
sub
cmpsl
bound
xor
jmp
xor
aaa
cs
jmp
xchg
movsl
fs
mov
inc
outsl
add
das
or
jmp
xlat
ja
fucomi
push
push
idiv
iret
out
ja
xor
xchg
nop
out
mov
popa
xchg
loop
pop
mov
pop
lds
fcomp
inc
popf
sbb
loopne
inc
pop
mov
mov
sub
inc
xor
sbb
adc
stos
pop
adc
rol
jb
mov
xchg
push
sub
out
pushf
inc
adc
sbb
or
loope
add
or
mov
sub
outsb
cmpsl
shll
cs
lock
add
add
outsl
lahf
mov
lcall
and
rcll
fidivl
xchg
cmp
pop
test
jb
aas
aam
add
mov
or
icebp
or
notb
cmpsb
mov
pop
repz
cmp
pusha
lcall
outsb
fadd
shl
xor
mov
mov
mov
cmp
cs
pop
inc
cmpl
sbb
ja
sbb
out
dec
xchg
cmp
jecxz
pop
ret
nop
mov
and
xchg
push
outsl
test
sbb
call
push
mov
mov
ds
push
out
jge
inc
bound
aas
jmp
hlt
mov
mov
cmp
scas
mov
or
in
aaa
cs
ljmp
xchg
int3
jg
or
xor
mov
sbbb
enter
lahf
je
lds
xor
and
lock
push
inc
push
stos
mov
aaa
imul
xchg
add
test
xlat
ret
clc
mov
or
sbb
fildll
dec
xchg
push
int
mov
adc
push
icebp
mov
jg
mov
ds
aaa
pop
mov
sub
cltd
mov
and
gs
and
inc
call
popf
mov
ror
pop
incb
pop
pop
sbb
pop
pop
test
outsb
inc
xor
mov
push
add
fisttps
mov
jmp
push
xor
push
dec
cs
push
push
pushf
add
scas
jge
adc
xchg
add
fdiv
push
sub
insb
pop
push
int3
pop
lahf
scas
lcall
shlb
and
scas
mov
mov
cmpsl
fs
imul
mov
es
pop
sbb
pop
sbb
jecxz
pop
dec
mov
or
sbb
push
loope
mov
cs
jmp
adc
pusha
nop
in
dec
lcall
repz
test
stos
jae
lea
popf
sub
fstp
scas
cmp
jne
pop
dec
adc
dec
daa
adc
sub
cmpsb
xor
sub
out
mov
insb
xchg
jo
adc
adc
cld
pop
cmp
adc
div
jb
loopne
rcrl
and
std
js
jmp
fs
jmp
add
mov
cmp
fs
jno
movsl
mov
out
mov
lea
dec
aad
add
repnz
mov
push
push
addw
mov
mov
add
jo
jne
mov
mov
xlat
mov
cmp
or
scas
mov
hlt
inc
cs
or
sbb
subb
notb
inc
adc
xchg
and
sub
cmpsb
adc
mov
cmp
pop
loope
fwait
inc
fcomps
lods
push
jmp
push
sub
imulb
insb
cltd
mov
xor
loopne
xor
adc
lock
popf
into
push
sahf
add
pop
inc
mov
adc
push
xchg
jne
shl
xchg
cwtl
les
mov
pop
arpl
sbb
popf
stos
in
push
xor
sub
sub
repnz
or
sub
inc
xchg
test
loope
pusha
inc
movsb
dec
call
andb
or
xor
stos
test
or
xchg
scas
mov
mov
xchg
imul
jne
mov
fcmovbe
push
pop
and
shl
mov
fldenv
dec
rorl
leave
les
scas
imul
imul
adc
dec
movsb
sub
clc
sub
jae
lret
inc
sub
mov
pop
fimuls
cwtl
sub
xchg
shll
jmp
lret
scas
jb
jp
dec
jle
pusha
xor
add
or
inc
jns
cltd
dec
je
sub
inc
push
shlb
pop
sbb
jecxz
scas
and
and
lret
sub
cmp
fwait
loope
loope
arpl
movsb
sahf
mov
xlat
push
enter
fldcw
mov
stos
aam
daa
inc
and
sub
xchg
outsb
hlt
mov
inc
and
sbb
sub
mov
sbb
stos
add
sbb
movb
ret
mov
jg
lret
into
enter
inc
mov
fcoml
sub
push
or
gs
pop
xor
pop
and
les
cltd
movb
in
inc
sub
xchg
call
jp
inc
loopne
fdivr
loop
mov
adc
shll
sbb
stos
es
ds
fimuls
out
dec
mov
ret
mov
out
aaa
cmp
lods
xchg
pop
mov
cmc
addr16
push
mov
sbb
cmpsb
pop
cs
inc
inc
cld
sbb
pop
dec
sub
sub
out
add
mov
jmp
js
inc
icebp
dec
or
addb
loope
loope
dec
dec
and
in
mov
frstor
mov
dec
inc
or
test
aas
xorb
lcall
fdivrl
ret
and
enterw
dec
out
push
or
adc
fwait
push
pcmpeqw
xchg
or
cmp
adc
dec
mul
add
test
adc
hlt
or
push
roll
shlb
lock
pop
loopne
test
sub
icebp
scas
repnz
repnz
gs
xchg
and
es
es
and
sbb
in
adc
cmp
pop
dec
jns
out
test
sti
andb
lea
push
pop
jmp
cli
dec
pop
add
mov
mov
jo
adc
dec
or
insl
leave
and
inc
inc
sub
or
push
lahf
xchg
imul
jb
cld
addr16
lods
sub
repz
xchg
add
iret
pop
cltd
xor
roll
rcrl
stos
bnd
push
sub
loopne
mov
push
aad
fisubl
pop
in
mov
jp
aas
lea
ds
pop
shrb
adc
jbe
mov
jae
xor
inc
inc
mov
jmp
jge
mov
aaa
jb
push
icebp
insb
lret
ret
ja
or
scas
inc
inc
pop
jo
in
xor
ja
lods
jno
pop
or
outsl
lcall
mov
ja
loop
add
push
loopne
xchg
push
enter
or
fldenv
sbbb
cmpsl
es
hlt
lret
gs
adc
lahf
loope
scas
cmp
gs
test
pop
addl
adcl
add
loop
cmp
imul
mov
mov
adc
int3
je
xchg
divb
mov
mov
inc
jmp
movsb
and
or
fwait
out
sbb
xor
xchg
ret
in
movsb
adc
adc
mov
cmp
jg
je
mov
mov
cmp
and
push
mov
and
xchg
xchg
insb
nop
or
mov
fwait
mov
adc
xor
and
push
ja
out
cmp
leave
aam
jo
imul
stos
jnp
out
clc
pop
mov
inc
jl
inc
mov
sahf
test
aam
and
subl
loop
inc
mov
xchg
cmpb
cmpsb
ret
push
outsl
push
sbb
lods
mov
pop
negl
pop
daa
sbb
and
inc
ret
ja
push
test
scas
xchg
jmp
inc
mov
sub
jle
xlat
negb
scas
dec
in
xor
cs
xchg
mov
sbb
and
loop
movsl
lds
xchg
bound
inc
push
adc
out
aad
pop
in
int
stos
xchg
in
push
hlt
dec
push
pop
bound
jne
add
mov
push
mov
inc
mov
out
imul
xchg
add
or
lahf
mov
xlat
outsl
out
jp
dec
sbb
cmp
sbb
mov
dec
or
xor
and
xchg
lock
sub
movsb
repnz
fcompl
cs
pushf
clc
sub
mov
in
mov
mov
lret
fadds
mov
call
shlb
popf
into
jo
js
or
xor
jb
jge
jmp
insl
push
mov
aaa
addl
jo
sub
out
jbe
xchg
cwtl
outsl
sub
negl
mov
xchg
test
loop
jle
bound
jle
ljmp
xlat
sbb
loop
adc
scas
mov
and
pop
fsubl
sbb
push
scas
lahf
sbb
mov
int
cmpsl
stos
leave
repz
lcall
imul
xchg
fmuls
inc
jecxz
lock
sbb
out
inc
fldl
mov
fisubrs
mov
pushf
pop
cmp
dec
test
insb
xchg
jne
xchg
pop
mov
add
mov
adc
dec
iret
pop
mov
and
idivb
mov
std
mov
lds
xor
pushf
dec
roll
out
jnp
jbe
xchg
icebp
cltd
mov
and
sub
dec
hlt
push
inc
shlb
jnp
sbb
dec
fbstp
scas
inc
xchg
orl
lcall
inc
sarl
or
leave
sub
push
arpl
cmp
rcll
mov
ljmp
dec
inc
cmc
push
or
and
je
mov
sahf
mov
jno
jmp
jle
iret
jno
movsb
outsl
mov
mov
pop
xchg
dec
sub
popf
nop
dec
pop
inc
mov
jmp
mov
mov
repnz
aad
jmp
pusha
je
cmc
out
mov
xchg
xchg
aam
mov
push
sub
cli
aaa
fs
jo
ficomps
lods
mov
jo
push
movsb
pop
rclb
pusha
dec
xchg
ret
popf
dec
pop
in
adc
cmp
shll
adc
sub
loopne
or
pop
repz
pop
imul
hlt
inc
pop
popa
sbb
mov
sub
test
jecxz
mov
movsl
cmp
mov
ret
test
jne
mov
ss
lcall
push
mov
sub
clc
mov
push
outsl
mov
cs
ljmp
jns,pn
xor
pop
test
sbb
adc
push
dec
movsb
adc
leave
adc
sbb
in
es
sub
fcoms
shll
push
in
aam
in
push
data16
int
inc
sbb
das
jle
and
dec
sbb
movsl
aas
xchg
test
or
add
icebp
mov
sti
stos
cmp
std
xlat
in
mov
movsb
jl
jb
cld
and
cmp
aam
pop
sbb
or
rcrb
add
dec
pop
stc
adcb
or
jno
sub
adcl
ret
int
lods
add
sub
push
dec
add
pop
and
add
pop
mov
jo
out
adc
aad
xchg
dec
ljmp
lahf
push
outsl
push
xchg
and
or
sbb
or
lea
call
dec
pop
mov
xor
sub
xchg
adc
xor
mov
xor
andl
xchg
cwtl
mov
cmp
push
dec
stos
mov
push
mov
inc
loop
dec
test
lahf
push
and
mov
ja
push
movsl
and
enter
xor
fcmovbe
int3
fsubrs
cmp
mov
bound
inc
dec
adc
inc
adc
lahf
xor
stos
mov
roll
xor
sub
sbb
push
aam
loopne
cs
hlt
pop
ds
push
sub
push
dec
leave
mov
adc
and
sbb
xor
out
push
movsl
jae
std
aad
je
pop
arpl
lods
out
shlb
sbb
ljmp
jmp
pop
add
xchg
mov
push
add
pushf
push
int3
pop
fisttps
sarb
jmp
push
push
mov
mov
outsl
push
add
popf
imul
add
inc
sbb
imul
mov
jns
shlb
ror
mov
repnz
pop
mov
adc
psubd
pushf
xor
add
cmp
cmp
jl
adcl
or
out
mov
and
fs
iret
mov
xchg
push
pop
inc
mov
mov
sub
xchg
imul
insb
and
aam
ficoms
flds
leave
cld
fcmovu
adc
and
fwait
cmp
loope
aad
sub
test
jae
and
jo
sti
xchg
jp
xchg
ror
push
pop
or
or
int
cmpsb
pop
outsl
push
mov
repnz
loop
mov
cmpsl
sarb
lods
push
lds
pop
rcll
mov
inc
imul
imul
dec
pop
out
pop
cmpsl
pop
rcr
push
add
scas
popf
adc
pop
inc
mov
xor
inc
jb
out
jmp
outsb
ljmp
addl
out
in
dec
mov
daa
mov
push
jp
stos
jnp
mov
mov
lods
andb
sub
dec
push
mov
dec
and
and
mov
push
in
jmp
nop
sub
push
andl
mov
xor
pusha
out
jecxz
shlb
cmp
adc
int
push
cltd
push
cmp
and
dec
scas
mov
scas
stc
pop
out
lret
jmp
in
ds
jp
xchg
mov
std
dec
pop
ret
rcrb
popf
inc
dec
fnstenv
out
mov
loopne
es
das
xor
inc
mov
sahf
cmp
xchg
enter
or
aam
add
test
push
and
push
outsb
xorl
leave
mov
leave
mov
loope
fisubs
das
mov
dec
or
xor
shr
sti
mov
stc
imul
mov
mov
repnz
sbb
push
mov
xor
jp
xor
cmpb
push
sub
loopne
mov
into
jmp
and
and
or
sarb
dec
mov
mov
into
jns
sub
std
lock
loopne
test
insl
mov
repz
mov
daa
bound
sub
mov
push
sub
jae
ficompl
and
adc
push
mov
sub
add
int
aaa
in
scas
cld
jns
inc
stos
arpl
mov
push
mov
add
dec
add
jmp
nop
add
sbb
mov
and
jg
adc
push
sub
je
lock
mov
xor
xchg
sahf
mov
mov
into
push
out
sub
sbb
push
push
lods
push
imul
out
cmpsl
xchg
xor
insb
adc
mov
imul
inc
push
push
dec
sub
test
mov
ss
inc
out
movsl
orl
movsl
xchg
lcall
test
xor
mov
ss
bound
stc
xchg
cmpl
popf
sub
shr
cmpsl
xlat
cs
fildl
insl
adc
inc
and
insb
jecxz
ja
and
iret
rolb
xchg
mov
popf
pop
jnp
out
mov
popf
in
sub
fsubrs
jae
adc
adcb
or
sbb
and
cmp
inc
pop
sbb
mov
test
xchg
ret
sahf
and
or
mov
mov
mov
jmp
repz
lcall
dec
pop
xor
mov
xor
sub
adc
repnz
pushf
test
and
push
adc
test
mov
maxps
push
adc
ret
psubusw
jno
iret
xchg
test
or
add
imul
outsb
adc
dec
lret
xor
scas
notb
mov
lret
push
pushf
mov
mov
fmul
repnz
jl
and
outsl
push
mov
push
out
dec
daa
test
and
sub
mul
mov
cmp
jae
xchg
jecxz
dec
xchg
mov
divb
icebp
clc
inc
inc
mov
loopne
mov
aas
dec
fisubl
xchg
in
inc
shl
addr16
aam
dec
or
and
xchg
adc
mov
xchg
popa
out
out
cwtl
rclb
ja
dec
jns
push
pop
cmpsb
inc
add
pop
es
cs
lods
stos
add
lret
add
fwait
mov
lcall
int3
test
lret
pop
ret
push
sbb
movsl
or
daa
xchg
pop
std
daa
mov
pop
or
je
cwtl
add
or
inc
mov
push
inc
mov
insb
inc
pop
lds
pusha
sub
jmp
mov
mov
lods
xlat
loop
int3
notl
je
lods
les
fstps
arpl
fstps
bound
mov
insb
sub
mov
jno
add
xlat
push
xor
jne
rclb
mov
xchg
adc
repz
lret
add
test
adc
mov
jo
sbb
sbb
fucomi
mov
inc
inc
mov
es
cmp
add
pop
adc
sub
pushf
lods
mov
cmpsl
adc
or
push
xor
fcmovnu
aad
data16
cmp
mov
add
mov
pusha
imul
scas
mov
pop
fmuls
test
icebp
mov
jl
inc
jmp
push
outsb
sbb
lock
andl
sbb
sub
xchg
mov
fnstsw
inc
dec
inc
test
sbb
call
stos
inc
cmp
dec
gs
hlt
or
xor
clc
js
or
inc
lahf
leave
cmp
test
into
dec
jmp
and
mov
push
je
imul
add
sti
push
outsl
mov
aam
call
sub
inc
dec
pop
loop
jno
sbb
fistpl
inc
add
pop
add
pusha
push
sbb
push
mov
push
mov
in
repz
pop
fcoml
mov
je
inc
jbe
adc
dec
test
add
repz
or
loope
cmp
lods
or
shld
or
out
dec
scas
outsl
scas
add
add
mov
inc
aas
stc
add
in
add
or
mov
mov
mov
push
xchg
add
push
adc
xlat
jns
faddl
js
aas
sbb
pop
clc
jecxz
pop
rol
inc
sbbb
xor
fstp
cmc
pop
mov
cmp
jp
lds
add
ret
out
cs
sub
shr
jmp
add
xchg
xchg
pop
pop
roll
jb
aad
jb
inc
rolb
sbb
insb
jno
lcall
cmp
jae
and
inc
cmp
jae
xor
ljmp
in
sub
mov
leave
jg
call
out
jae
cmp
push
mov
orl
loope
sti
inc
rcll
jnp
or
jge
pop
push
jae
or
push
or
out
fstpt
leave
imul
lcall
xchg
mov
mov
shlb
mov
mov
in
push
into
push
lds
leave
jb
movsb
mov
adc
and
sti
aad
test
lea
add
mov
into
cmpsb
pop
cmp
inc
hlt
ret
or
pop
aas
scas
ret
scas
or
push
jae
in
adc
loopne
xchg
sub
add
xchg
cmc
xchg
movsl
addl
xor
add
cmp
les
lret
in
aad
inc
xchg
sbb
rcr
xchg
pop
testb
jle
xchg
sub
and
and
int
pop
mov
rcl
orl
ficompl
jp
mov
push
xchg
lea
mov
mov
setnp
sbb
call
push
push
lcall
aaa
outsb
loope
aaa
and
pop
es
addr16
jo
dec
rcll
xchg
or
sbb
inc
leave
jbe
loop
rorl
or
ljmp
mov
aad
enter
xchg
fucomip
iret
pop
adc
push
cmp
sub
and
mov
les
fs
arpl
sbb
in
fwait
pushf
out
jo,pn
xchg
aam
movsl
sbb
mov
insb
mov
jg
inc
mov
decl
lret
or
movsb
lds
add
xchg
out
jns
insl
pop
sbb
jne
stos
mov
arpl
lds
sti
xchg
sub
lcall
fwait
lret
call
sar
jo
loope
hlt
test
push
pop
jbe
xchg
call
cmpsl
push
dec
cmp
stos
int3
mov
in
push
adc
fsubr
clc
or
ficoml
es
cmpl
sbb
mov
sbb
push
insl
repz
cmp
mov
xor
sbbb
inc
inc
jb
imul
dec
add
xchg
sbb
sahf
inc
push
fs
movsb
jno
and
mov
fisubrl
or
iret
jbe
je
or
pop
cmpsb
xchg
add
xor
lahf
adc
push
pop
xchg
push
xchg
ds
in
adcb
sbb
mov
lret
xor
xor
mov
in
mov
pop
ljmp
fnstsw
jecxz
scas
inc
fistl
adc
sub
xlat
lods
mov
xchg
inc
xor
and
jno
scas
out
cmpsb
mov
jle
pushf
inc
call
ret
add
xchg
insb
cmpsl
out
jge
ja
pop
ds
ss
sbb
add
pop
test
lock
cmp
mov
mov
rcrl
cmp
out
cmp
sbb
mov
or
out
and
cwtl
jge
scas
dec
or
push
adc
int
cmc
rorl
data16
or
mov
and
loope
out
and
xlat
cmp
or
rcrl
sahf
loopne
outsl
inc
mov
pusha
outsb
cmp
clc
loop
inc
xchg
adc
mov
push
xchg
dec
and
orl
out
fcoms
jecxz
pop
imul
sub
mov
subl
push
jb
fwait
pop
fs
sub
dec
jae
xchg
pusha
pop
and
pop
ljmp
je
mov
jne
push
lret
cltd
adc
jp
jns
test
mov
sar
lea
sti
xchg
mov
shl
push
push
xchg
push
cli
cmp
cmp
ret
out
pop
and
add
push
cmpsb
stc
inc
push
push
insl
jecxz
call
sbb
sub
jle
std
push
pop
popa
mov
daa
shl
xchg
cmpb
jge
pop
stc
mov
ret
je
popf
aas
inc
je
iret
sub
and
push
or
mov
aam
sbb
inc
movsl
sar
push
or
adc
int
ja
js
fwait
leave
and
test
jae
mov
push
rcr
insb
scas
jb
pop
bound
divl
push
jg
pop
inc
and
ss
xor
mov
mov
cmpl
lcall
aaa
out
push
or
dec
dec
stos
dec
js
or
push
movsb
ret
mov
push
clc
xor
clc
das
daa
jle,pn
adc
push
push
pop
aaa
inc
out
push
inc
pop
push
test
stos
sti
lret
pop
xor
into
test
xor
std
sub
push
dec
aaa
jb
ss
xchg
jo
shl
cltd
enter
xchg
mov
lock
inc
pop
jo
jecxz
andb
js
paddsb
add
lock
jo
mov
frstor
dec
inc
lret
jns
jae
fisttpl
inc
and
jae
sub
pusha
sbb
xchg
mov
jmp
inc
jb
mov
clc
scas
push
movsb
dec
lods
das
jle
les
jae
hlt
daa
jg
xor
daa
pop
pop
cmp
jno
shlb
jo
inc
cmp
mov
mov
adc
pop
and
lds
jno
repnz
push
jge
sbb
jnp
imul
mov
mov
decb
jmp
xchg
sub
js
clc
inc
lahf
pop
jle
push
pop
rcrb
les
shlb
and
call
rcrl
out
pop
push
mov
mov
negb
js
xor
cmp
out
push
xor
fs
imul
test
inc
mov
cmc
sbb
xlat
mov
push
int3
pop
xor
xchg
ds
pop
out
aam
dec
push
ss
sub
cmc
or
out
xor
xor
lods
ret
jecxz
sarl
push
sbb
or
outsl
mov
lea
xor
pop
pusha
lock
sub
sub
incl
fildll
cltd
sub
popa
shlb
fldl
mov
or
cs
hlt
scas
jecxz
out
jge
push
inc
pop
outsl
divb
fistl
gs
push
lods
xchg
xor
mov
loopne
inc
mov
xor
sbb
sti
sub
xor
das
bnd
jle
pop
ret
adcb
fsubs
sbb
call
shrl
mov
adc
push
lods
add
cmp
cld
inc
shlb
cmp
out
cltd
out
rorb
ret
test
inc
jo
dec
mov
mov
dec
mov
push
cmp
jp
iret
popa
sub
mov
out
sbb
fcompl
ljmp
adc
xchg
inc
xlat
inc
pop
lods
mov
xor
mov
mov
out
or
addr16
xchg
pushw
fs
push
test
mov
cmp
in
mov
or
inc
xlat
cs
and
idivb
gs
icebp
sbb
sbb
mov
lret
dec
pusha
ret
shrb
lods
xor
sahf
leave
out
mov
and
mov
sbb
outsl
pop
int
mov
loop
inc
push
out
lahf
pop
scas
arpl
jb
xor
out
repz
jno
mov
scas
push
push
xor
shrb
shll
sbb
push
andl
arpl
cltd
mov
leave
cs
xlat
aam
mov
xlat
rorl
xadd
jbe
xchg
addr16
pop
inc
or
insl
sbb
in
leave
imul
fldenv
jecxz
xchg
add
push
js
sub
imul
mov
dec
sbb
jne
sbb
cwtl
cmpsb
add
xlat
mov
loope
sti
sub
mov
sbb
push
jle
loope
mov
add
lret
mov
pop
test
stos
pop
xor
mov
mov
pop
mov
push
push
fnsave
gs
ret
add
inc
and
and
push
rcrl
roll
pop
fnstenv
cmp
je
mov
push
jne
faddl
outsl
jg
mov
out
cld
push
mov
jne
add
jp
clc
push
and
outsb
push
lcall
out
iret
out
in
sbb
add
xor
mov
mov
cmp
xchg
sbb
cmc
leave
imul
lods
out
inc
enter
cmpsb
push
je
fmull
sti
or
mov
lods
push
jmp
cld
mov
shll
mov
mov
dec
pop
int3
das
xor
or
and
cmp
out
or
pop
lret
xor
or
lock
lods
popa
ret
imul
jg
mov
cld
repz
sbb
dec
roll
lret
jae
mov
int
cs
inc
fidivrs
cmp
sub
inc
or
jne
andb
lret
mov
adc
cltd
icebp
push
arpl
int
shrb
les
adc
fsubrl
or
mov
inc
test
cmp
int
or
lcall
ljmp
pusha
aam
pop
sbb
int3
daa
pop
stc
mov
pop
fistpl
dec
add
popf
aam
shrb
or
ljmp
pop
and
pop
push
shrb
popa
lea
xor
addr16
popf
sbb
jle
orl
mov
arpl
xchg
xorl
jmp
imul
xchg
pop
lahf
inc
inc
test
fistps
cmpsl
shlb
shlb
fists
es
leave
xchg
stos
aas
jle
mov
arpl
cmp
pop
sbb
notb
xchg
ljmp
jno
imul
pop
sub
ss
movsl
push
cltd
or
mov
jle
out
push
fidivrl
das
sar
sarb
hlt
mov
cmp
add
xchg
mov
mov
les
sub
sbb
xor
stos
pop
or
push
das
subl
cltd
int3
adc
add
mov
jle
out
ljmp
movsl
shlb
or
push
pop
xchg
fbstp
sub
push
push
ret
or
dec
or
bswap
dec
ficomps
push
iret
test
arpl
mov
xchg
xlat
sbb
stc
cmp
out
mov
lret
jp
test
dec
mov
pusha
xlat
in
push
imul
in
ret
cmpsb
cmp
es
sub
pop
cwtl
cmp
lahf
jmp
fisubs
je
int
inc
adc
pop
inc
mov
in
and
fcoms
mov
add
cmp
dec
mov
maskmovq
pop
setp
xor
push
push
jnp
and
xchg
clc
addb
mov
add
jb
cli
inc
pop
pop
pusha
cli
sbb
pop
sbb
sub
mov
add
sbb
inc
fsubp
adc
iret
or
out
xchg
add
xor
daa
mov
or
rolb
cwtl
repnz
mov
xchg
mov
int
movzbl
or
and
cmp
nop
mov
mov
and
aas
jg
mov
and
inc
jp
sbb
xorl
jno
cs
fwait
inc
aam
mov
leave
out
jl
inc
inc
push
or
inc
call
lcall
repz
int3
inc
pop
adc
sub
sbb
sub
adc
mov
filds
and
sub
push
cmc
xchg
mov
int3
and
ret
cmp
mov
xchg
sbbl
xchg
jns
aas
jo
xor
cmp
inc
or
dec
daa
loope
or
sbb
clc
stos
xchg
cmp
sub
or
sti
jp
dec
movsl
jl
pop
cmp
xchg
cmp
ret
xor
movsl
cmc
push
mov
mov
mov
and
fcomps
in
pop
cmp
jg
lret
rcl
xchg
fnstsw
ret
cld
pop
iret
jo
xlat
dec
lret
loope
ds
inc
fucomp
int
lods
mov
pop
mov
xchg
pop
mov
jno
daa
into
add
aas
imul
xchg
call
mov
popf
mov
lea
push
cld
pop
jbe
inc
mov
imull
pop
repnz
jbe
int
cmp
mov
daa
pop
rcl
insb
shll
mov
mov
sahf
mov
cmc
lret
add
es
sub
nop
mov
sub
or
adc
jo
lcall
insl
push
sbb
jecxz
loopne
xchg
icebp
dec
lcall
jg
jns
mov
xchg
mov
sti
adc
adc
outsl
sub
test
sti
mov
xor
dec
mov
loop
sub
mov
js
insl
jmp
jo
and
add
sti
cwtl
out
sti
pop
cltd
outsl
ret
movsb
jg
fnstenv
sub
adc
xchg
cmp
ljmp
icebp
dec
adc
adc
inc
sti
mov
jmp
jbe
mov
imull
decb
orl
std
cwtl
loop
push
lret
jl
jecxz
cmp
int
sti
lret
xchg
mov
decl
adc
add
add
push
sahf
outsb
rcl
jns
sub
dec
xor
xchg
and
and
ret
fcoml
push
xor
sbb
sub
push
mov
pushf
dec
stos
nop
mov
sahf
jl
pop
mov
xor
mov
push
js
and
repnz
add
pushf
test
ljmp
or
sahf
ret
outsb
inc
aas
xlat
dec
iret
popa
std
pop
xchg
add
fwait
push
aaa
cmpsb
push
les
dec
sahf
cmc
daa
cmp
jbe
cli
dec
leave
jbe
push
mov
hlt
jmp
jp
adc
push
jno
aam
add
jae
loopne
xchg
mov
pop
cmpsl
outsl
pop
inc
mov
pop
repz
rorb
mov
test
int
ss
dec
push
mov
mov
xchg
call
adc
cmp
lds
inc
js
fcmovne
andl
cmpsl
lea
pusha
pop
cmp
sbb
pop
jbe
sbb
outsb
stos
inc
imul
mov
mov
adc
adc
dec
add
test
sub
cmp
sbb
inc
dec
sub
test
pop
mov
push
jae
arpl
sub
pop
outsb
ret
push
pop
aaa
push
inc
int
add
xor
aam
cmc
das
cmp
testl
cmpsl
cmp
adc
pop
addr16
stos
loop
iret
adc
dec
stos
fptan
pop
cmpsb
xchg
repnz
fstps
pop
push
test
xor
pusha
mov
sbb
cli
sbb
cmpsl
sbb
movsl
pop
incb
xchg
push
pop
add
or
orl
cld
xchg
dec
push
loopne
pop
inc
out
jnp
push
dec
lret
add
imul
shlb
and
sbbb
sub
and
mov
or
inc
pop
imul
sti
jne
fucom
neg
scas
sbb
dec
hlt
inc
jo
xor
sbb
add
repz
xor
dec
stc
test
pop
inc
loopne
rcrb
push
pushf
lcall
xor
jae
stos
xor
cmc
or
fld
dec
orl
add
sbb
shl
fmulp
dec
push
sahf
dec
and
fistps
adc
push
mov
pop
push
scas
xchg
out
mul
loopne
pop
inc
pop
dec
test
shlb
addb
push
hlt
adc
adc
mov
and
sbb
dec
jns
add
mov
sbb
dec
hlt
nop
push
xor
jno
repz
adc
pop
dec
aam
push
fnstsw
pop
das
xor
xchg
sub
add
add
adc
outsb
sbb
fdivs
lea
xchg
gs
add
aaa
mov
std
jns
jo
mov
push
cmc
mov
push
jno
mov
ret
std
xchg
xor
mov
js
mov
sub
cmp
sub
ret
divb
scas
sbb
jo
pop
mov
ud2
xchg
and
lcall
xchg
addb
jns
inc
add
xor
test
sbb
xchg
xorl
std
sub
div
cmp
xchg
mov
push
pop
icebp
jg
in
dec
les
mov
std
or
fidivrs
fnstenv
dec
pop
outsl
out
rolb
xor
or
loope
cmp
cmp
or
cmp
push
cmp
add
mov
leave
cmp
push
inc
mov
add
xor
mov
cli
addb
lcall
jo
mov
ja
jae
scas
movsb
push
jne
shlb
pop
fdivrl
push
sbb
test
nop
pop
add
push
mov
xor
dec
popa
test
test
lds
out
sub
das
stc
mov
imul
lock
les
mov
sub
imul
xor
ret
mov
adc
jne
xlat
jle
in
out
nop
dec
aaa
and
mov
add
test
xchg
sub
jno
int3
adc
icebp
push
jne
add
dec
pop
iret
cltd
push
xchg
aas
jb
xchg
loopne
fildll
ds
push
ficoms
in
sti
sub
adc
xor
insb
push
add
pop
stos
cmpsl
push
ret
sub
sbb
ret
arpl
pop
jo
add
dec
jge
loopne
je
cmp
sbb
inc
dec
xchg
push
push
in
aas
jge
xor
jae
inc
scas
jne
dec
mov
fidivl
ret
add
and
add
sahf
add
or
xor
mov
es
outsl
sbb
ds
rorb
int
xchg
jl
add
fwait
test
in
lods
cmp
loope
jecxz
sbb
movsl
push
stc
out
mov
icebp
inc
rdpmc
xor
jns
cld
imul
sti
jns
scas
mov
push
and
in
out
js
sub
sub
sub
ds
add
fmull
adc
push
xor
out
ficomps
scas
pop
jae
mov
or
imul
movsb
sub
sub
pop
sub
rcl
adc
sbb
and
jno
test
iret
jmp
mov
mov
xchg
out
sub
jae
test
mov
xchg
mov
fnstcw
jbe
push
mov
cmp
insl
fsubrl
das
pushl
mov
adc
out
test
sub
and
mov
mov
jne
push
mull
rorl
cld
movsl
fwait
push
pop
add
mov
cmpsl
aas
cltd
mov
ret
jo
and
lahf
movsl
out
sbb
cs
addr16
add
pusha
push
sbb
subb
mov
inc
mov
lret
rorb
std
mov
aad
addr16
adc
repz
enter
imul
je
ret
pop
jne
mov
popa
or
or
push
in
push
ds
clc
push
iret
lcall
nop
inc
dec
insb
adc
hlt
test
mov
mov
arpl
xchg
cmpsl
mov
add
pop
mov
adc
jbe
outsb
xchg
mov
mov
mov
and
push
fwait
into
mov
rclb
aas
outsb
sbb
daa
arpl
lahf
int3
fbld
lret
int
or
push
into
and
loop
jne
in
lahf
push
jl
mov
fnstsw
les
add
nop
orb
lds
js
scas
mov
fistpl
in
mov
nop
push
cmp
dec
push
jb
mov
lret
add
imul
add
daa
jno
cmp
fdivrl
mov
cld
cmp
divl
ja
and
inc
repnz
mov
inc
lods
imul
push
jno
leave
push
roll
jno
popa
scas
xlat
sub
xor
add
sbb
xchg
aad
mov
xchg
cltd
lcall
cmp
insb
out
jge
or
pop
imul
cmp
jne
add
mov
push
fistpll
push
sbb
or
std
jbe
sbb
cmp
je
or
cwtl
adc
rcll
repz
mov
pop
and
xlat
in
fs
data16
lret
or
scas
sub
push
adc
stos
ss
js
idivb
ja
jmp
lret
jp
mov
scas
jge
jp
jp
lods
subb
lret
fadd
lret
adc
shlb
mov
in
mov
pop
xor
push
or
int3
mov
pop
push
xor
push
xor
scas
push
add
ljmp
push
subb
cmc
cs
stos
mov
sbb
pop
sub
lahf
and
inc
lds
and
negl
shrl
and
xchg
inc
pusha
add
lcall
push
comiss
in
into
testl
sub
daa
inc
mov
dec
xlat
xchg
dec
dec
mov
or
add
movsl
jns
movsb
push
sbb
xchg
cmp
not
cmp
fistl
daa
into
sbb
sar
lods
push
daa
addr16
test
xchg
pop
adc
mov
jl
pop
pop
cmp
cwtl
outsl
mov
adcl
jmp
dec
xchg
or
cmp
cwtl
xor
stos
pushf
xor
fwait
inc
fisubs
popf
or
das
cld
mov
inc
xor
add
cmpsb
mov
adc
out
inc
or
mov
test
inc
orb
int
ss
out
fwait
add
sbb
mov
add
fdivrs
repnz
insb
push
xor
mov
dec
test
xor
push
push
test
cmp
sub
das
sbb
mov
rcrb
mov
jns
xchg
inc
cmp
mov
stos
mov
stos
cmp
and
jmp
aas
fstpt
test
mov
stc
repnz
into
xlat
push
fstpl
mov
push
jl
sub
lcall
xor
mov
xchg
xchg
xlat
pop
sub
popf
mov
fdivrl
and
pushf
jp
bound
in
test
cmc
out
xlat
aaa
cmpsl
pop
adcl
adc
aam
loope
and
popf
call
fs
jmp
inc
cli
add
xor
cmp
imull
pand
cmpb
pop
insl
and
push
adc
push
ficoml
and
xlat
sahf
mov
mov
notl
cmp
subl
lret
lods
xlat
pop
cmpsb
stc
mov
pop
cmp
cmp
jle
push
push
adc
out
sub
out
or
outsl
mov
or
inc
cmp
push
test
and
cld
push
xor
jp
loope
xchg
or
pop
sub
ficomps
ljmp
stos
mov
dec
push
mov
movsl
shll
roll
pop
fmuls
sub
push
cmp
mov
es
mov
cld
nop
push
jge
loope
fcmovb
mov
mov
inc
les
rolb
fiaddl
xorb
mov
popa
pop
add
jns
dec
test
ds
imul
mov
pop
das
mov
ja
mov
add
xchg
inc
cmp
sahf
stos
push
mov
int
mov
fwait
mov
fwait
rcrb
cwtl
jns
xor
addr16
push
outsb
in
xor
out
jl
fisubs
or
repz
push
sub
rcll
sub
add
push
es
xlat
js
dec
or
fstl
adc
push
add
push
dec
lea
lds
push
jmp
enter
aas
inc
mov
cmp
call
xchg
adc
push
pop
sub
lods
fcomi
rorl
outsl
das
jge
adc
addb
je
jp
iret
inc
cmpsl
sub
mov
lds
xor
icebp
stc
add
test
inc
mov
mov
jle
and
imul
pop
or
jno
pop
int3
adc
lods
add
adcl
jmp
fucomi
sbb
inc
push
xor
and
sub
mov
shll
add
adc
cltd
dec
xor
loopne
inc
dec
jo
lods
addb
lds
fildl
lahf
adc
jp
add
and
fdivrl
xchg
and
fldcw
loop
aad
and
cmpsb
jo
xor
lahf
jge
lds
adc
push
fidivl
xchg
fbld
adc
shrb
jmp
stc
jo
mov
ljmp
lret
scas
fisubl
or
rclb
mov
lret
or
pop
mov
xchg
pop
insl
xchg
stc
jmp
das
sbb
outsl
adc
std
es
add
imul
cwtl
xchg
jnp
pop
pop
add
stc
dec
push
push
or
sub
push
movsb
adc
inc
add
in
mov
stos
mov
cmp
lahf
ror
fnstenv
pop
mov
push
push
lahf
repz
mov
decb
iret
pop
dec
cmp
and
jmp
hlt
int
mov
fsubs
dec
mov
and
pop
ret
add
mov
mov
repnz
and
cmp
pushf
mov
mov
xor
test
in
jecxz
xchg
icebp
lret
push
and
inc
orb
daa
pop
pop
loopne
sti
stos
inc
push
icebp
pop
xor
pop
adc
pop
mov
xchg
ss
xor
call
cltd
push
pop
mov
xchg
or
in
lds
xchg
lret
jo
sub
loopne
jnp
sbb
cmc
out
mov
dec
xchg
or
andl
add
inc
in
clc
icebp
pop
bound
mov
mov
pushf
jle
mov
mov
aad
mov
enter
push
sar
ss
insb
push
fwait
and
mov
cmc
adc
in
pop
mov
test
scas
data16
pop
cbtw
sarb
mov
add
inc
xor
call
xchg
fnsave
push
in
xor
inc
cmp
fwait
jg
ss
mov
into
push
mov
adc
and
inc
sub
je
and
pushf
stos
outsl
inc
sbb
nop
out
dec
lret
mov
pop
aas
loope
push
bts
outsl
into
add
xor
push
jno
insb
add
rorb
sbb
xor
insb
mov
jecxz
testl
mov
mov
lock
adc
sahf
push
xor
push
movsl
divl
cmp
cmc
pushf
dec
les
sti
mov
or
cmp
cli
mov
fwait
mov
jmp
and
xor
sub
add
test
inc
inc
mov
and
and
cmc
cs
lret
xchg
loopne
xchg
xor
sahf
adc
jne
paddsw
xchg
adc
in
dec
daa
outsb
push
adc
push
imul
daa
add
cmp
imul
scas
sub
mov
pushf
and
sbb
pop
sbb
mov
call
and
add
xchg
jnp
mov
and
add
iret
mov
pop
xchg
data16
jno
mov
xchg
lds
movb
jmp
pop
dec
loope
hlt
pushf
fucomip
imul
aam
sub
pop
inc
jg
popf
aam
out
push
fwait
sub
clc
pop
into
ret
mov
mov
jg
enter
sbb
in
fucomip
movsl
adc
mov
pushf
pop
push
adc
xchg
aam
xchg
fdivrs
jmp
dec
inc
movsl
dec
movl
data16
rcll
pop
push
sbbl
xchg
jmp
aam
cmpsb
leave
xchg
sub
jl
sub
andb
push
popl
dec
loop
scas
inc
loop
nop
xchg
jmp
movsb
nop
insl
sub
call
mov
push
int
xor
repz
sarl
dec
stos
sub
leave
cmp
outsl
imull
push
dec
add
jmp
fisubs
decb
add
jae
sub
add
std
inc
nop
push
xor
loopne
jecxz
lret
cmp
fdivp
pop
sarl
inc
cs
dec
sub
mull
dec
dec
lcall
push
daa
xor
lods
call
inc
mov
aam
xor
in
push
mov
outsl
xor
push
sahf
mov
and
xorb
das
cmp
sub
lret
inc
dec
xchg
inc
mov
into
out
jge
out
int
aad
inc
out
and
fcompl
xchg
sub
mov
push
imul
fs
roll
lock
or
lods
mov
sbb
adc
cmp
insl
sub
out
dec
and
push
je
adc
out
fimull
push
rorb
call
movsb
mov
sub
jo
xchg
push
rcll
shll
adc
add
imul
cmp
push
jl
or
jb
jmp
in
or
pusha
add
lock
gs
sub
rcll
xor
add
add
cld
in
fneni(8087
mov
gs
pop
push
pop
movsb
or
sub
push
mov
or
cmp
pop
xor
jge
push
mov
test
dec
sahf
mov
mov
sbb
stos
jl
lahf
push
movsb
lret
ja
dec
jb
fimull
xor
sub
fmuls
jp
or
jne
fstps
enter
movlps
sub
out
jmp
lock
dec
adc
xchg
repnz
insl
mov
inc
xlat
lcall
xchg
inc
add
ds
outsl
sahf
clc
xchg
js
lods
mov
sub
jl
ja
inc
push
cmp
cmp
lock
loopne
imul
push
test
test
pop
push
repnz
cwtl
aam
inc
cli
dec
and
cmp
cmp
and
loope
mov
loopne
inc
xchg
adc
lea
cmc
sub
adc
sub
jns
out
pop
and
xlat
ret
push
pusha
dec
test
cmp
movsl
nop
pop
sub
addl
mov
ficomps
shrl
dec
data16
jl
mov
inc
fldenv
mov
mov
dec
cs
cli
mov
mov
pop
je
xor
jg
pop
mov
push
jb
lea
subb
mov
mov
xchg
push
inc
xchg
ret
cmpsb
xlat
out
stc
pop
and
pushf
sub
jmp
rcll
xor
lods
jp
push
pusha
lea
pop
push
stc
add
mov
inc
adc
gs
cmpsl
mov
add
out
push
scas
inc
adc
lea
out
fwait
add
dec
cld
aaa
in
push
cmp
dec
jnp
aad
push
inc
ret
xchg
int3
sbb
adc
push
xchg
jg
mov
insb
lcall
or
lcall
fnstsw
stos
outsb
pop
lret
aaa
call
jae
test
dec
or
pop
cwtl
or
daa
outsl
leave
stc
mov
imul
inc
xor
mov
mov
add
in
repz
aam
and
rcl
enter
mov
out
mov
div
scas
rol
loope
push
pop
imul
stos
or
scas
mov
cmp
fdivrp
mov
sbbb
xchg
mov
xor
inc
xor
addr16
xchg
sub
pop
sub
sbb
fs
clc
adc
adc
dec
push
testb
cmp
cwtl
mov
icebp
js
inc
mov
push
or
rol
les
mov
sub
lret
cmp
data16
adcb
icebp
cwtl
sbb
cmp
lcall
sbb
jo
xchg
cmp
xor
push
lcall
leave
cmp
mov
outsb
in
jl
jb
aaa
push
xor
mov
add
repnz
popf
dec
jno
enter
mov
stos
aam
mov
mov
fnsave
fcomp
xchg
ds
push
outsl
js
cld
sbb
mov
fs
repz
test
clc
ficompl
test
xchg
and
stos
fadds
out
cmp
enter
sahf
test
inc
inc
mov
or
icebp
iret
call
xchg
pop
aam
mov
push
sahf
lods
mov
outsl
pop
push
xor
stc
pop
lods
mov
fdivrs
adc
outsl
and
dec
mov
or
loopne
sbb
or
aad
fstpt
in
xor
std
pushf
out
into
jp
jmp
cwtl
leave
adcb
andb
aad
mov
mov
lcall
or
xor
enter
ljmp
xor
adc
pop
mov
dec
cmp
gs
cs
out
adc
movsl
inc
jg
push
cmpsb
aam
jbe
cmpsl
jg
stos
ds
loop
pop
pushw
inc
scas
sub
mov
dec
loop
outsb
in
lret
mov
cmpsl
out
jns
rorb
sti
out
fisubl
daa
das
aas
cmp
popa
mov
or
adc
xor
nop
inc
push
je
or
loopne
dec
int
into
cmc
movsl
mov
pop
popf
jl
push
lods
push
cmp
aaa
cmp
add
or
mov
push
mov
jl
lods
inc
cli
mov
cmpsl
std
add
pop
push
int
sbb
std
inc
fsubrs
sbb
js
data16
add
arpl
iret
xor
push
fistpl
sub
inc
push
or
aam
gs
sub
sub
sbb
cmp
pusha
das
sti
sub
fldcw
popa
movsb
xchg
psubusw
xor
xor
mov
mov
jo
mov
aam
xorl
add
hlt
adc
sbb
popf
push
mov
or
int
loop
lea
xchg
lods
pmaxub
pop
add
sbb
push
push
adc
add
push
cmp
adc
xorb
arpl
add
sub
and
add
add
mov
pop
mov
movsl
xchg
es
leave
rcrb
sub
ja
dec
jg
xchg
jbe
cmp
aaa
addb
adc
insb
daa
imul
jne
or
jmp
pop
stc
or
sbb
pop
in
xchg
cmp
shrl
push
jecxz
xchg
and
push
arpl
sub
fld
push
mov
lea
fistl
rcr
sbb
xchg
outsb
adc
dec
jge
fcomip
adc
push
mov
call
imul
jbe
sbb
std
dec
mov
bound
inc
pushl
dec
int3
xor
mov
rol
mov
and
and
adc
fs
push
push
mov
mov
fnstcw
mov
add
mov
push
mov
fisttps
cmpsl
inc
aad
fs
mov
inc
sbb
ljmp
cs
imul
cwtl
xor
ss
call
cmp
inc
xchg
aas
int
sbb
add
xor
jne
test
cmpsb
xchg
mov
mov
fcmovb
adcl
add
jb
cmp
cmp
pop
fxch
sub
mov
xchg
xchg
mov
and
sub
fwait
adc
ss
mov
cltd
ret
test
jge
imul
pop
mov
pop
hlt
sub
test
xor
mov
xchg
insl
cld
lods
repz
cmpsl
pop
mov
mull
dec
and
xor
out
and
stos
mov
jg
std
pop
in
mov
or
push
inc
pop
andl
push
sti
inc
mov
push
outsb
adc
mov
jle
xor
stc
jmp
dec
lcall
adc
rclb
mov
aam
xlat
sub
jae
test
mov
pop
xlat
sub
fucomi
xchg
push
push
xchg
adc
nopl
mov
test
aam
mov
push
push
idiv
mov
test
push
lahf
or
jns
fwait
insb
push
jb
push
sti
pushf
ret
loop
or
das
cs
cmp
adc
addb
shlb
adc
sub
das
xchg
cmpsl
xorb
mov
out
sarb
iret
dec
mov
ret
sbb
add
or
in
push
or
inc
lea
pop
lea
loope
ffree
ret
fs
fcoml
shl
lods
xchg
cltd
in
aad
cmpl
push
testb
sbb
inc
lret
pop
lcall
xor
repnz
dec
or
push
xchg
mov
lock
cmovs
mov
imul
mull
pop
jge
lock
add
std
dec
dec
stos
or
aas
out
sub
xchg
sbb
stc
jo
es
cmp
mov
incl
outsl
xor
mov
lods
xor
popl
popa
mov
in
adc
mov
xor
jo
jl
test
fcomps
pop
loopne
out
mov
stc
sub
cmc
xchg
mov
cld
mov
mov
bound
push
inc
pop
inc
jp
scas
inc
lahf
insl
xchg
or
shll
std
dec
js
sbb
pop
fcmovu
sbb
push
hlt
mov
lcall
jns
mov
scas
in
pushf
push
xchg
loopne
loop
dec
pop
adc
jbe
roll
xorl
shrb
inc
adc
adcb
adc
test
push
int
cmp
adc
mov
sahf
adc
add
push
push
ret
cltd
out
popf
das
mov
insb
lods
or
inc
mov
inc
outsb
cmc
pusha
sub
jge
add
dec
cli
jnp
stos
and
cli
cmp
stc
mov
jb
repnz
push
xor
lea
mov
lods
je
push
mov
jne
inc
int
jno
idivb
out
mov
cmp
mov
adc
dec
sbb
adc
mov
prefetch
mulb
addr16
popa
data16
clc
data16
pop
ds
repnz
jp
and
les
push
push
push
jecxz
sti
mov
mov
out
dec
test
in
daa
mulb
mov
stos
les
add
push
fucom
into
jo
mov
inc
test
lock
sarb
pop
mov
xchg
sbb
movsl
adc
fcmovb
jb
aad
push
loope
push
fisttpll
fcmovnb
add
jns
jg
xor
jecxz
mov
ret
adc
icebp
and
ljmp
in
add
adc
and
call
in
adc
setnp
inc
or
mov
mov
mov
xor
pop
adc
jl
jb
mov
jg
stc
xor
pop
clc
sbb
push
push
sub
push
insb
mov
or
arpl
xor
adc
xchg
xchg
test
lods
dec
xor
js
ret
shl
mov
mov
mov
jle
jne
mov
ret
cwtl
movsb
pop
movhps
je
mov
add
jbe
insl
lret
mov
push
cli
cmp
or
jae
push
test
jmp
insb
in
xchg
xchg
lock
adc
push
lret
mov
and
cmp
jecxz
dec
loope
stos
incb
xchg
mov
mov
dec
stc
out
adcb
cld
and
mov
pop
lcall
enter
jg
lea
orb
lahf
dec
insl
inc
push
das
je
cltd
mov
inc
pop
adc
add
jmp
int
decl
jl
inc
or
leave
shr
sbbb
lahf
sbb
push
adc
jns
mov
test
add
adc
fistpl
jo
sti
jno
aas
leave
hlt
xchg
add
push
xlat
es
pop
adc
stos
inc
add
daa
jo
lock
aas
mov
imull
dec
push
lea
xor
xor
ss
push
aam
shl
in
xchg
jno
adc
pop
push
fcmovu
add
sub
adc
jecxz
testb
pop
lret
add
clc
aam
xchg
mov
ret
movsl
jne
and
inc
jp
gs
fldt
jmp
pop
pop
aas
mov
enter
mov
gs
dec
insl
out
lret
mov
mov
push
aas
push
lea
in
pop
mov
pop
or
sub
ja
dec
insb
cs
xchg
sbb
mov
stos
pop
insb
xor
sub
xlat
adcb
in
imul
roll
lock
int
nop
stos
movsb
jne
int3
lret
cld
lret
out
lcall
push
outsl
sbb
inc
roll
inc
mov
ret
out
imul
inc
out
andb
psllw
mov
int3
push
push
clc
ss
lcall
mov
sub
xchg
mov
ficomps
sub
push
push
in
outsl
mov
jb
or
movsb
pop
mov
outsb
pop
out
scas
popa
daa
bound
fwait
dec
mov
dec
call
or
repnz
or
mov
push
icebp
push
gs
arpl
dec
jecxz
sub
jle
jmp
dec
insl
mov
daa
clc
dec
mov
inc
sub
pop
xor
jbe
mov
pushf
pusha
pop
mov
xchg
sub
add
scas
rol
push
adc
or
daa
and
sbb
movsl
pop
sbb
outsl
push
pop
push
pop
daa
subb
push
fistpl
xchg
xor
sbb
dec
mov
dec
les
and
mov
inc
cmpsl
sub
repnz
sub
inc
decl
shlb
jae
lods
es
jp
cmpsb
cld
inc
movsb
add
adc
out
pop
enter
add
mov
das
lcall
adc
xchg
xchg
mov
xlat
idivl
xchg
test
jp
fiaddl
cmpsl
aaa
cmpsl
dec
mov
sbb
jnp
les
ret
dec
mov
lds
push
cld
xchg
adc
sahf
mov
outsb
push
and
sbb
scas
push
dec
in
add
repz
es
adc
inc
hlt
xchg
mov
xor
push
push
js
and
xor
mov
or
jnp
notl
bound
xchg
je
les
cmp
outsl
mov
sbb
push
xchg
cld
jge
mov
push
cs
or
test
outsb
lahf
sahf
xchg
out
mov
fcmovnb
outsb
jbe
sti
fstpl
pop
in
fisttps
fldcw
popa
cmpsb
imul
push
pop
xchg
loop
ljmp
sar
jne
mov
aaa
mov
sbb
in
mov
lret
jbe
fists
and
push
lds
and
mov
mov
adc
das
addr16
sbb
or
and
call
stos
lea
fcmovnbe
jne
addr16
mov
repz
inc
insl
xor
and
add
inc
lret
lahf
add
mov
and
xor
lock
lret
pop
fldcw
mov
mov
popa
test
nop
cli
sub
cli
xchg
rclb
xchg
call
inc
sbb
add
fiadds
mov
sub
pop
repnz
mov
scas
mov
add
sub
subb
push
daa
mov
push
bound
repz
repnz
movsb
sbb
mov
idivb
hlt
std
and
js
jl
mov
shrb
repnz
ret
mov
cmp
add
mov
repnz
mov
jo
pop
cs
lea
rolb
movb
aas
jmp
int
jge
mov
imul
mov
jns
les
out
push
push
lds
xor
das
xchg
pop
lret
shlb
adc
lock
in
and
mov
push
add
pop
jge
fldcw
fwait
inc
pop
mov
cmp
adc
xor
enter
or
out
and
imul
sub
mov
call
cmpsb
push
popa
add
in
mov
sbb
dec
fs
nop
cld
jle
adc
jmp
sub
push
lret
sub
pop
pop
cs
mov
mov
stos
sarl
adc
int3
cld
pop
out
nop
xchg
adc
mov
sub
js
jp
adc
jb
test
test
jmp
jmp
notl
test
mov
fadds
lock
outsb
cs
sahf
fcom
pusha
fwait
addr16
and
cmc
pop
mov
and
jp
in
add
int3
sbb
test
mov
mov
sbb
lret
sub
cmp
pop
mov
imul
push
into
adc
cmp
scas
cltd
or
and
cmpl
lea
lods
xlat
mov
jo
aad
hlt
in
ret
out
dec
insl
mov
popa
pop
testl
sub
into
lahf
outsl
aad
dec
mov
sbb
aas
lahf
inc
out
aad
inc
shlb
push
popa
cs
lods
xchg
hlt
daa
popf
ja
ljmp
cmp
lods
sub
xchg
mov
add
xlat
sub
push
jno
sub
testl
pop
xchg
nop
addr16
or
outsl
push
ficoml
in
popf
mov
xor
mov
test
nop
loopne
ss
inc
out
inc
nop
int3
loop
psubusb
push
xchg
fs
xchg
dec
out
outsl
mov
outsl
ss
push
mov
mov
sub
and
mov
test
inc
rcr
out
pop
pop
jns
jno
cwtl
hlt
jge
test
data16
mov
call
jae
in
iret
sbb
adc
mov
jecxz
lds
fidivrs
shll
and
cmpb
cmpsb
xchg
test
lock
sbb
cltd
xchg
gs
test
push
cmpsl
adc
or
mov
mov
sbb
push
sub
enter
or
add
inc
mov
xchg
mov
and
and
jo
sbb
cmp
add
addb
add
setp
les
cmp
mov
hlt
mov
cmp
test
cmc
hlt
and
out
sub
mov
mov
adc
jl
lock
enter
sbb
or
sbb
stos
in
call
inc
dec
xor
test
mov
jg
xor
mov
lahf
pop
adc
xchg
lret
xlat
cli
shl
rcrb
mov
sub
jge
lahf
sar
movsb
je
test
mov
insl
adc
mov
and
ret
push
es
dec
adc
xor
add
jl
mov
mov
in
xor
fdivrl
sti
movsl
xor
mov
dec
dec
pop
es
mov
or
dec
push
sbb
pop
ljmp
ja
fwait
mov
or
pop
dec
dec
lahf
add
loop
cmc
das
iret
shlb
push
mov
jge
xor
mov
adc
mov
sbb
cmpsl
dec
incl
fwait
jbe
cmp
xor
mov
aaa
or
cmp
add
push
pop
ja
cmp
mov
fsubrs
mov
pusha
lcall
push
cld
call
fdivrs
int
mov
loopne
test
add
mov
mov
push
int
dec
gs
std
movsl
std
ret
enter
or
loope
mov
or
inc
roll
sub
lock
pop
pop
jbe
nop
inc
lcall
push
mov
mov
sarl
sub
call
inc
fstl
xor
xor
fs
jns
bnd
jbe
flds
mov
xchg
fnsave
incb
sbb
daa
add
push
bound
scas
stos
notb
sub
ret
xchg
xchg
iret
lods
adc
fs
adc
pminsw
mov
mov
or
jecxz
ret
cwtl
fwait
or
sbb
mov
popa
and
clc
dec
cmpsb
pop
popf
jo
jbe
adc
out
or
dec
xchg
pushf
movsb
outsb
ja
les
lea
ds
call
sbb
push
or
loope
rorb
add
stos
stos
int
loopne
inc
pop
and
je
clc
pusha
mov
pop
cmc
into
jl
ss
mov
xor
rcr
icebp
pop
pusha
cmp
jmp
repnz
mov
subl
jne
and
xor
movsb
and
hlt
popl
and
shll
mov
inc
and
pop
imul
jnp
sbb
dec
movsb
ret
sub
inc
inc
loope
rclb
lods
cli
push
popf
out
imul
pop
xlat
jae
test
subb
or
stos
mov
mov
add
sbb
loop
pop
orl
daa
inc
lock
push
pop
mov
imul
mov
divb
mov
jecxz
insl
sbb
in
sbb
or
cltd
xor
movsl
ds
jo
ss
jge
mov
das
stos
jo
and
cltd
add
jnp
xor
xchg
lods
repnz
inc
adc
arpl
sbb
gs
pop
out
cmpsb
mov
int3
xchg
dec
cmp
xchg
loop
mov
push
arpl
outsl
ror
cld
js
jno
cltd
push
loopne
les
mov
sub
shrb
pop
pop
jge
mov
leave
dec
sub
add
dec
cmp
and
cmp
pop
mov
pop
mov
cmp
inc
or
and
into
add
push
sub
orb
jae
jo
sub
fdivr
ljmp
jb
add
cmpsl
sub
dec
cltd
cwtl
and
test
stos
sti
push
ret
sahf
movl
cmp
pop
popf
mov
cmp
xor
movsl
std
in
add
cmp
xor
lret
mov
out
outsb
pop
adc
mov
sub
mov
rcrb
jle
lahf
aad
or
adc
dec
mov
add
or
xchg
ss
xor
add
push
jmp
adc
sbb
clc
enter
jmp
adc
insb
hlt
jb
das
mov
inc
jl
jbe
inc
mov
add
pop
mov
cmp
rcr
sbb
push
js
lcall
mov
mov
xchg
loopne
cmc
fmull
flds
scas
mov
repz
mov
push
xchg
les
push
or
fisubl
int
cld
adc
in
jge
ja
adc
inc
test
dec
mov
mov
mov
or
das
leave
sub
cltd
and
fldl
jmp
add
fs
es
push
cltd
out
push
sbb
lcall
ds
jmp
leave
xor
clc
lds
shll
dec
cmpsl
das
sbb
jbe
sub
dec
xor
sub
js
rolb
cli
push
sahf
scas
jmp
mov
sub
mov
test
test
pop
test
add
and
or
xchg
mov
lcall
adc
xor
imul
adc
add
xlat
in
sbbb
aad
loopne
jnp
mov
out
out
xchg
jne
fsubrs
fistps
or
repz
clc
pop
or
lods
fstpt
in
ret
and
test
jg
sbb
sub
xchg
lock
sahf
sub
pop
repz
aaa
mov
inc
fsubrl
addr16
outsl
mov
sahf
dec
data16
scas
adcb
mov
push
lds
or
rorl
xchg
ja
cltd
dec
jne
inc
leave
mov
jb
pop
daa
dec
mov
scas
cmp
pop
test
dec
push
mov
mov
pop
stc
xchg
mov
dec
jecxz
mov
inc
jle
cwtl
insb
and
aaa
out
js
xchg
les
movsl
lahf
loop
out
jecxz
cltd
mov
and
addr16
fisttpll
sbb
sbb
cld
jae
stc
inc
imul
adc
mov
pop
sti
adc
rcrb
push
jo
and
out
clc
xchg
scas
test
adc
mov
inc
and
cmp
mov
sbb
pusha
inc
leave
xchg
std
lods
sbb
sbb
mov
jmp
mov
movsl
xor
es
mov
jae
dec
pop
cmpsl
jg
je
loope
nop
dec
sbb
js
mov
fs
and
subl
cmp
push
lds
mov
or
mov
cmpsl
mov
lea
movsb
ret
ljmp
in
lods
loope
je
add
mov
sti
shll
lahf
push
nop
fmulp
lahf
xor
cs
inc
pop
add
rol
jbe
scas
xlat
pop
push
mov
xchg
add
push
mov
es
xchg
pop
jo
push
popa
push
pop
pop
jnp
arpl
out
xchg
sub
rolb
fistpll
leave
aam
filds
jae
push
arpl
adc
and
es
xor
xchg
sub
mov
cmpsb
je
outsl
sbb
loopne
jne
mov
lods
sbb
lcall
sbb
and
push
sbb
mov
or
add
pop
cmp
scas
adc
jmp
mov
xor
imul
pop
inc
cmpsl
mov
insb
dec
scas
xchg
or
dec
inc
mov
dec
cmpsb
add
sub
shr
es
jge
pop
iret
lds
push
mov
push
sbb
mov
xor
push
imull
cmpsb
aad
aad
mov
loop
loop
cmp
fisttpll
mov
mov
xor
insl
scas
shl
cmp
sub
cmpsl
ja
popf
popf
das
leave
test
xchg
cmp
and
dec
inc
mov
lods
jl
adc
aas
addr16
inc
sbb
jno
fs
or
rcr
mov
fnsave
loop
cwtl
mov
adc
lods
mov
test
sahf
lahf
sbb
sbb
pop
lahf
sbb
mov
dec
mov
aam
out
xchg
mov
add
xor
xor
dec
pop
adc
dec
outsl
jg
and
jecxz
repnz
ds
pushf
jp
jge
push
jnp
lock
and
bnd
inc
mov
cltd
repnz
in
mov
cs
push
mov
jl
into
xor
jecxz
mov
mov
jns
test
notl
jmp
insl
cltd
lods
lret
leave
lea
cmp
push
test
sbb
xchg
rorl
xchg
push
and
fdivrs
or
sbb
icebp
ret
int
sti
test
sbb
add
add
addr16
std
test
dec
or
sti
loopne
loopne
pop
dec
xor
fs
clc
cmp
fstps
rcrb
dec
push
add
mov
sub
or
aad
fdivp
pop
xchg
adc
pop
mov
add
pop
in
jle
js
push
aas
jns
xchg
dec
loope
fdivrp
adc
ds
arpl
insl
cmc
bound
sub
add
jge
push
lret
push
ret
cs
mov
lds
lds
mov
fisubrl
and
repnz
call
add
jp
test
mov
inc
in
cmp
add
lock
inc
xchg
mov
popf
gs
xor
adc
std
shrl
adc
lcall
push
or
mov
test
dec
ljmp
push
cwtl
arpl
loop
add
push
mov
cs
jae
jp
dec
ljmp
loope
pop
jae
notl
adc
cmc
sub
pop
lock
jmp
push
mov
fs
in
xlat
adc
clc
rorb
push
test
push
testb
in
scas
ret
xor
adc
negl
jmp
orb
je
clc
addb
int
cmp
ss
loopne
xor
mov
lret
insl
cmp
lds
sbb
push
int3
imul
xchg
push
dec
and
negl
aas
mov
insl
add
mov
push
dec
ja
aas
out
or
jp
jne
mov
lcall
paddusb
or
fistl
mov
inc
inc
loopne
into
rcrb
cmp
jl
dec
xchg
out
ret
add
call
imul
dec
mov
jo
cltd
popa
push
fmull
sahf
add
pop
negb
aad
movsl
and
jae
pop
pusha
add
out
lahf
stc
inc
lock
adc
push
or
iret
ja
inc
cmp
and
loopne
inc
adc
add
test
rorl
jl
into
cmc
lret
or
inc
cs
mov
shr
icebp
cmp
test
dec
test
in
mov
sub
xchg
ficomps
lods
mov
fdivp
or
movsl
dec
into
test
std
push
pop
push
and
insl
xlat
lret
imulb
cmp
aad
push
cld
std
jmp
clc
inc
testb
icebp
mov
mov
enter
or
lds
push
xor
call
lret
cs
fmuls
into
inc
inc
and
lret
mov
mov
fadds
ret
mov
loopne
sbb
cmc
je
pop
pop
jbe
cmp
cli
mov
pmaddwd
addr16
cmc
ds
shlb
lret
push
je
sbb
jbe
cmp
and
fs
test
outsb
or
mov
or
xor
sub
clc
shlb
lods
imul
rcrl
xor
ret
mov
in
or
push
xor
add
push
jecxz
dec
add
inc
data16
in
pushf
dec
js
leave
xor
sbb
sub
arpl
dec
pop
jnp
push
into
pusha
jae
sub
sahf
loope
push
inc
and
sbb
out
scas
outsb
sub
xor
sarl
in
arpl
lods
adc
jno
stc
or
inc
jno
or
adc
cmp
push
jb
sub
sub
pop
dec
test
jle
sub
dec
sbb
fwait
ja
cmp
lods
sarb
jl
and
pop
add
test
push
push
inc
fdivrs
jmp
mov
push
shl
sub
inc
test
outsl
int3
push
test
and
sbb
and
or
dec
cmp
push
icebp
loope
mov
push
push
pop
popa
lret
lods
sarb
das
scas
shl
and
xor
int3
pop
gs
xlat
xor
in
xor
fisubs
cmpsb
xchg
sbb
jmp
in
adc
lahf
fmull
mov
stc
mov
jno
int
rcrl
cmp
mov
or
xor
sahf
sbb
cld
ret
adc
rcll
dec
clc
sub
ds
mov
in
and
icebp
loopne
dec
clc
mov
add
pop
xor
jecxz
dec
jno
and
lods
jg
std
rcrb
push
inc
inc
test
fidivl
add
jecxz
mov
rcll
mov
add
aaa
pop
test
jno
xchg
add
std
sub
jg
stc
xchg
mov
outsl
in
mov
dec
sahf
mov
cwtl
sti
mov
ret
pop
mov
lea
fwait
add
iret
stos
shr
pop
dec
loopne
in
adc
mov
inc
pop
mov
popf
cli
sub
movsl
mov
ficoms
sub
or
int
and
xor
mov
ja
mov
arpl
in
aas
sbbb
mov
mov
adc
stc
sub
fldcw
pop
scas
xchg
mov
mov
dec
lret
adc
xchg
jnp
xlat
cli
mov
aas
add
or
add
jb
dec
aam
jnp
sub
orb
into
cli
jmp
xor
ljmp
stc
cwtl
jge
push
lret
repnz
jle
nop
addr16
pop
dec
xchg
bound
andb
icebp
xchg
push
outsl
lea
xorl
xchg
es
cltd
xor
insb
dec
push
and
mov
and
mov
das
mov
sbb
add
and
shrl
rorb
xor
xor
push
js
push
pop
int
sub
ficompl
push
sbb
push
sbb
call
enter
sub
clc
inc
jae
and
ret
jmp
enter
out
xchg
xchg
aaa
lret
adc
or
mov
jo
das
mov
call
lea
mull
cmp
mov
jle
sbb
mov
xor
sbb
inc
pop
test
cmp
dec
dec
daa
xor
cmpl
mov
movsb
add
lcall
or
sti
mov
scas
jo
out
and
add
fwait
push
mov
mov
jg
bound
hlt
mov
dec
dec
aas
push
ss
mov
cmp
mov
xchg
fbstp
cmp
ds
xor
cmpb
dec
rcrl
sub
ss
sub
mov
adc
lahf
mov
movsb
es
xchg
xor
inc
cmp
jle
and
test
mov
insb
mov
inc
bound
loopne
push
mov
fistpl
in
xchg
pop
std
hlt
insl
fwait
andl
popf
sbb
fisttpl
into
dec
or
push
jmp
adc
xor
popf
jle
push
xchg
mov
out
dec
jp
mov
dec
scas
mov
mov
mov
lret
pusha
push
mov
ja
inc
scas
lds
jg
outsb
mov
dec
daa
out
pop
dec
xchg
std
sbbb
shlb
add
aaa
mov
mov
cmp
jbe
or
ljmp
inc
call
mov
int3
add
sub
scas
mov
mov
test
rcl
in
loop
push
xchg
fadds
mov
ffree
xlat
sub
into
pusha
popf
sub
mov
aam
adc
add
mov
cmp
call
movsl
popf
inc
sbb
jbe
cmpsl
mov
mov
das
and
in
pop
mov
mov
mov
and
shrl
stc
movsb
add
lret
call
add
jb
mov
addr16
mov
iret
rorl
fistpll
fmuls
fdivrs
or
inc
push
push
roll
repnz
inc
dec
js
cmpl
xor
sub
cli
rcrb
bound
inc
or
loopne
aad
sub
divb
lds
sub
push
mov
jnp
outsl
and
and
mov
imul
mov
dec
out
mov
das
adc
mov
loope
es
mov
test
inc
jb
mov
je
cmp
cs
lds
dec
std
mov
in
cmp
adc
or
dec
inc
pop
push
ds
inc
xor
push
sub
sub
fimull
cmpsb
lds
adc
xor
fidivrl
jge
fdivp
rcl
test
sbb
adc
arpl
jnp
jo
gs
adc
pop
addr16
xor
testb
push
jmp
in
dec
dec
insl
les
and
xor
adc
cmp
out
mov
out
inc
fcmovbe
std
mov
add
jl
int
push
push
in
ret
push
add
jo
push
scas
shlb
mov
lahf
into
repnz
mov
dec
dec
test
mov
sbb
stc
jo
xchg
mov
adc
aaa
cli
sbb
inc
stos
pop
mov
out
lds
or
das
es
imul
mov
ja
lock
aaa
mov
leave
or
ljmp
dec
dec
stos
dec
insl
cmp
mov
sub
xchg
enter
adc
into
cli
into
unpcklps
jg
cltd
fwait
xor
sbb
sbb
cltd
fwait
bound
jmp
rcrb
into
mov
xor
ja
mov
ljmp
jp
icebp
sub
and
and
test
mov
aas
cmp
cli
mov
hlt
sbb
imul
mov
icebp
sub
xchg
loopne
push
aas
xchg
dec
cli
pop
mov
fidivrs
sbb
shll
mov
xchg
cli
ret
cmpsl
leave
pop
aaa
bswap
ss
cmp
sbb
push
pop
loope
ja
push
adc
xchg
xor
mov
add
js
sub
or
jge
adc
cmpsb
mov
jmp
loopne
shlb
push
sub
jns
add
out
dec
aam
xchg
sub
inc
stos
mov
sub
sub
scas
lock
movsl
divl
int
rcrl
xchg
xchg
push
jl
cmp
inc
int
pusha
and
mov
jno,pn
inc
pushf
and
es
inc
lret
icebp
pop
inc
mov
xchg
mov
popa
fwait
xor
jge
inc
wrmsr
ja
or
sub
and
jmp
jp
jecxz
icebp
imul
insb
mov
loopne
pop
sbb
je
and
inc
mov
or
cmc
jle
mov
jg
jne
pop
xor
mov
aam
vxorps
sub
push
cmp
push
call
and
daa
jg
lods
sbb
mov
cmpsb
dec
cli
movsw
repz
xchg
in
fadds
xchg
or
sub
cmp
add
adc
inc
gs
jecxz
into
mov
idiv
push
mov
je
and
outsb
push
cmp
movsl
sahf
aas
xor
ret
int3
out
or
pop
ret
scas
push
aam
push
or
repz
cltd
adc
lret
mov
cmp
ror
mov
fwait
xchg
push
mov
xchg
pop
xor
aad
mov
adc
inc
add
sbb
or
scas
adc
adc
lcall
pop
xchg
mov
fsts
repnz
jl
mov
xor
fidivl
gs
xchg
repz
lret
cmp
in
out
jle
jecxz
push
int
xchg
sub
mov
loopne
cs
xor
in
int3
ja
fcmovnb
popa
mov
push
xchg
push
arpl
cmp
lret
lea
push
jge
pop
loop
jl
pop
xor
out
out
mov
fdivrs
fs
xor
adc
ret
flds
stos
addr16
jmp
cmpsl
lret
lret
cld
pop
push
es
fidivrs
clc
scas
pop
nop
lods
push
jae
into
ret
lcall
repnz
addb
mov
test
xor
lahf
adc
hlt
push
inc
xor
outsl
mov
fucomi
push
push
pop
fwait
jmp
aaa
dec
cs
out
sbb
sub
add
and
sub
mov
pop
xchg
xchg
ljmp
jno
dec
or
push
and
push
pop
jg
into
bound
fldcw
add
rclb
jne
adc
adc
pusha
lods
mov
pusha
test
rorb
popf
fwait
add
stc
rcrl
mov
nop
add
rclb
cmp
sub
sbbb
pop
pop
out
mov
popf
sub
adc
lock
lods
dec
xchg
fistps
sti
mov
cmc
or
shll
addr16
sarb
pusha
xchg
xchg
cltd
jno
arpl
jg
imul
pop
add
mov
in
xor
inc
pop
add
fistl
mov
sub
lret
dec
and
out
lret
mov
std
xor
cmpl
popl
out
loopne
nopl
add
add
dec
xchg
inc
adc
imul
sti
pop
cmp
test
je
scas
xor
add
ret
insb
fwait
push
sub
loop
push
pop
jp
mov
or
mov
mov
pop
lds
loope
and
cmp
push
fidivl
cmp
pushf
jl
sub
xchg
inc
popf
addr16
adc
insl
sbb
rdtsc
inc
or
sbb
jnp
xchg
stos
mov
and
scas
sub
outsl
shrl
inc
ret
mov
dec
and
arpl
movq
mov
pop
xor
push
out
in
popa
mov
mov
cmp
fstpl
cmp
and
sub
mov
cmpsl
je
mov
insb
movsl
mov
inc
arpl
and
mov
xchg
push
sbb
outsb
test
lahf
jo
cs
and
xor
or
pop
xchg
into
sub
or
cli
xor
jo
mov
lretw
scas
jg
cli
sbb
lahf
jb
mov
lcall
rcrb
xchg
mov
push
jns
js
mov
pop
addr16
jg
in
xor
jge
jg
sbb
jae
scas
dec
lds
loopne
jnp
popf
jecxz
popf
in
pop
jecxz
enter
gs
push
cmp
mov
movsb
push
in
outsl
add
xlat
iret
aaa
xchg
mov
js
xor
add
scas
loop
push
cmp
lret
add
repz
loopne
ret
sbbb
lahf
pop
leave
inc
jnp
data16
xor
pop
or
lret
inc
or
scas
dec
xor
inc
adc
dec
daa
jo
lods
dec
mov
add
fs
inc
jmp
std
push
sub
mov
xchg
js
xor
sbb
and
mov
out
loope
sbb
outsl
dec
push
adc
pushf
lret
aad
cmp
shrl
xor
call
std
scas
push
dec
xor
xor
dec
fcomp
or
dec
mov
push
popf
lret
adc
push
imul
and
push
and
pop
pop
mov
insb
inc
loope
push
adc
add
push
push
in
fidivs
cltd
test
fstps
lahf
jae
pop
mov
fucomip
mov
adc
fmull
cmc
adc
mov
movsb
ret
ja
rcrl
push
in
cwtl
sbb
mov
dec
insb
or
lret
aaa
sub
pop
or
jo
mov
jecxz
das
cwtl
sbb
outsl
cmp
loope
dec
into
or
ja
sub
mov
shlb
mov
lock
push
insl
jne
and
sarl
pop
xor
aaa
test
mov
movl
push
mov
nop
dec
lret
sub
movsb
jecxz
mov
imul
cmp
xor
adc
jbe
push
int
inc
inc
xor
dec
or
jecxz
mov
mov
dec
fucomi
mov
jns
jbe
add
insb
loop
mov
stc
dec
fbld
add
addr16
sbb
inc
inc
fsub
dec
jnp
sti
jge
stos
mov
repz
lret
xchg
stos
out
clc
shll
push
and
mov
mov
pop
movsl
test
enter
fisttps
and
push
pusha
mov
jecxz
rcrb
xchg
outsb
ds
fiaddl
cli
or
gs
movsl
sbb
out
jns
inc
jnp
adc
pop
cmpsl
out
or
dec
stos
ret
adc
dec
loop
jae
aad
inc
sbb
mov
sti
es
xchg
or
call
jmp
or
jecxz,pt
cwtl
sbb
lcall
add
sub
jmp
in
xchg
das
loop
fst
call
es
in
mov
mov
sbb
adc
js
idivl
sbb
mov
mov
and
js
loopne
enter
out
sub
mov
add
mov
ret
popl
adc
popa
insb
loop
movsl
sbb
adc
loop
imul
and
ret
sbb
out
sub
inc
pop
and
testb
lods
sbb
popf
add
std
in
test
decl
push
mov
fildll
jmp
xor
or
leave
in
call
stc
fstl
test
pop
jg
fidivrl
mov
into
xchg
movsb
sbb
dec
sbb
dec
mov
bound
or
pusha
pop
push
ljmp
lahf
inc
push
mov
sbb
fdivs
dec
xor
sub
cwtl
add
mov
mov
jg
mov
pop
lds
sub
push
aad
testb
sub
insb
dec
fs
iret
add
sbb
lea
rcrb
cmp
aad
jle
mov
fmul
lcall
pop
mov
sbbl
push
lahf
std
clc
leave
cwtl
adcl
fs
push
movsb
lods
mov
xchg
jae
neg
add
movsb
inc
imul
in
pop
rorb
or
mov
mov
cmpsl
ret
imul
test
cmpsl
mov
mov
std
enter
xchg
stos
add
jl
jbe
pushf
and
add
loopne
or
inc
push
rcrb
fimuls
and
sbb
out
xlat
addr16
xchg
sahf
inc
ret
and
xchg
cmp
xchg
pop
rorb
test
mov
daa
and
mov
xor
pop
test
pop
lea
mov
adcl
adc
mov
add
cmp
test
jecxz
inc
cmp
dec
sub
sbb
loopne
xchg
dec
xchg
jns
inc
leave
xlat
fbstp
out
push
into
pop
xor
das
jmp
dec
lock
xchg
inc
popa
jae
jns
mov
sbb
pop
lret
fs
or
shld
cmp
and
lea
sarb
sub
ss
jae
shr
incl
fwait
lds
and
movsl
pop
mov
push
lcall
and
jae
jmp
and
fdivl
cmpsl
mov
js
jo
aam
imul
ret
mov
sub
xorl
outsl
enter
lods
rclb
mov
int
adc
leave
xor
fsubrl
sub
movsl
mov
sbb
cs
fucom
and
push
sahf
ds
xchg
pushf
inc
xor
add
shll
adc
sti
nop
xor
dec
test
outsb
imulb
push
out
testb
jmp
sbb
sub
mov
int3
xor
dec
push
repnz
push
int3
and
push
cmp
divw
pushf
sub
cltd
mov
cmp
into
mov
push
push
int3
lahf
aam
mov
in
imul
mov
stc
or
daa
stc
mov
inc
mov
sub
and
pop
mov
shlb
add
ljmp
jmp
fistpll
call
xchg
inc
std
lcall
cmp
dec
mov
outsb
jle
aas
stos
mov
stc
pop
inc
adc
jle
jnp
and
icebp
inc
and
jne
sub
xor
aaa
bound
sub
xlat
fnstcw
arpl
sub
ss
ds
jo
xchg
sbb
jp
inc
and
fnstenv
push
addr16
sub
xor
stos
dec
outsb
test
sti
iret
nop
mov
leave
lahf
dec
popf
and
data16
cmp
mov
jge
sub
xchg
lcall
and
les
mov
arpl
iret
movsb
add
fldcw
push
pop
push
add
mov
in
and
push
and
insl
pop
dec
or
dec
xor
mov
add
mov
mov
sbb
jnp
cmp
sbb
mov
mov
pop
jb
and
add
mov
sbb
jge
xor
and
test
in
xor
ret
ljmp
or
cmpsb
ss
icebp
ret
adc
push
and
sub
icebp
inc
rcll
cli
adc
and
pusha
mov
dec
push
scas
inc
bound
sub
jbe
push
jmp
xchg
repnz
aaa
jge
les
pop
adc
nop
add
popl
mov
xor
push
das
insb
cmpsl
sbb
cld
popf
stc
xchg
mov
insb
jg
lea
mov
xor
rcrb
in
or
pop
movsl
jl
ret
test
ret
cmc
int3
dec
pop
or
mov
repz
sbb
bound
jnp
xor
push
sbb
int
pop
sub
inc
jmp
dec
and
cmpsb
cmp
repz
push
inc
mov
sbb
sbb
addr16
insb
mov
pop
cmc
stos
ds
iret
movsb
js
ljmp
div
and
shlb
jne
popa
call
sbb
fldt
aaa
nop
sub
mov
mov
ret
call
filds
mov
pop
movsl
pop
mov
lods
notb
jmp
shlb
dec
sbbl
mov
bound
mov
dec
loop
andl
jbe
jo
mov
dec
push
out
int3
repz
xor
stc
int
mov
push
sbb
lret
mov
cmp
mov
push
aam
sbb
xor
mov
scas
sub
ret
mov
push
addb
cmp
and
cmc
dec
push
test
pop
adc
adc
pop
pop
call
ljmp
pushf
ds
push
lds
sbb
add
bound
out
adc
inc
leave
adc
ds
add
js
inc
jle
pop
arpl
sbb
mov
xchg
push
lds
or
pop
call
int3
xchg
mov
cmp
arpl
ljmp
and
add
adc
xchg
push
sbb
jg
leave
jae
pop
and
push
repz
mov
mov
push
out
mov
stc
aad
jle
in
stos
pop
je
out
mov
xlat
sbb
int
sub
push
jl
cmp
lock
xor
xchg
and
mov
imul
inc
xchg
add
js
popf
fs
stos
hlt
test
popa
pop
push
sub
mov
push
mov
mov
pop
lcall
xchg
outsb
mov
push
jge
int
cmp
cld
inc
mov
scas
push
and
movsl
xchg
mov
xlat
and
mov
int
fwait
aam
mov
jg
popa
push
iret
jne
seto
rol
divb
mov
popf
sbb
test
push
pop
daa
xchg
das
sahf
cmpsl
jns
stc
push
insl
mov
and
jae
insb
inc
div
loopne
jp
pop
flds
sbb
adc
rcll
xor
jge
pop
aas
adc
addr16
sbb
xor
shr
jbe
adc
fidivrs
ds
or
iret
fwait
shrl
xor
mov
push
push
roll
and
xchg
xlat
jo
das
rcl
adc
adc
das
xchg
xchg
pop
cli
jns
lds
add
rorb
outsl
mov
and
mov
push
inc
cmp
cwtl
xor
and
roll
xlat
sbb
inc
push
pop
or
faddl
enter
loopne
or
push
inc
mov
outsb
xor
scas
sti
popf
mov
arpl
dec
fwait
inc
pop
mov
xchg
divl
and
inc
jmp
xchg
jl
cmp
dec
das
and
xchg
idiv
and
push
imul
fnsave
xor
jns
loope
jne
in
mov
adc
mov
adc
das
xor
lods
add
rclb
frstor
pop
inc
in
jb
call
gs
cli
inc
nop
adc
jmp
ficomps
dec
daa
push
mov
aas
xor
mov
lret
push
mov
outsl
fistpl
aas
loope
ja
xlat
mov
xchg
mov
xchg
imul
aas
inc
fdivs
fcmovne
int3
adc
mov
aad
mov
jle
push
out
lock
sbb
out
mov
cmp
mov
fdivrl
push
cs
in
cs
lods
dec
or
fs
popa
outsb
ds
pop
sub
add
or
or
or
mov
xor
push
in
mov
std
inc
push
push
repnz
dec
mov
imul
loope
xor
inc
xchg
jmp
cmp
orb
adc
repnz
jns
in
dec
inc
imul
lods
loope
fidivrs
cmp
hlt
nop
daa
lret
stc
push
shrl
mov
xor
mov
pop
mov
hlt
sbb
lahf
inc
sbb
push
test
inc
mov
pop
sbb
mov
les
xor
jb
cmp
xchg
jnp
arpl
pop
sub
stc
fisttpl
cmc
mov
std
aas
jo
xchg
fistpll
ret
add
push
jae
inc
and
inc
adc
cmp
punpckldq
mov
stos
lahf
in
iret
cmp
sub
xchg
mov
stos
pushf
pop
fbld
nop
or
inc
daa
mov
inc
lods
or
int
lret
xchg
rcrb
xchg
push
cmp
cmc
icebp
cmp
cmova
cmc
and
imul
hlt
les
scas
jmp
roll
out
arpl
repnz
dec
jno
sbbl
in
cmc
dec
mov
test
sar
or
adc
fimuls
lods
lret
rcll
pop
es
xchg
cmp
dec
shlb
movsb
or
or
dec
inc
mov
jne
dec
lret
cmp
popa
add
mov
imul
xchg
adc
adc
sbb
inc
into
out
rclb
xor
xor
mov
mov
and
notb
les
fdivl
xchg
int3
pop
pop
sub
adc
ljmp
loopne
xor
test
rol
mov
jp
add
ret
cmp
xor
mov
inc
nop
mov
repz
mov
aam
movsb
dec
mov
andl
stos
loopne
jne
es
loopne
xorl
cli
sub
xchg
mov
cld
repnz
and
mov
sysret
shll
mov
cmp
and
lret
and
xor
les
xor
sbb
and
cmp
add
or
vmovdqa
pop
lcall
add
sbb
cmpsl
insl
shll
jne
cmp
xor
into
jp
fxch
lret
mov
sbb
fwait
lret
xor
push
jno
out
inc
push
adc
fbstp
aad
add
adc
dec
and
imul
inc
inc
cmpsl
or
ljmp
daa
imul
push
dec
xchg
cmp
nop
mov
or
cmp
push
sti
inc
push
dec
adc
and
add
outsl
or
cltd
xlat
dec
cli
leave
push
cmpsl
or
cld
int3
mov
mov
imul
movsb
mov
stos
icebp
fldl
pop
push
add
fisttpl
jbe
dec
psllw
mov
jmp
sub
das
jbe
jp
cmpsl
cmp
sub
orl
pusha
lods
repz
popf
xchg
ss
xchg
daa
cmp
mov
push
cmc
or
in
aad
sbb
sbb
mov
xor
push
and
scas
ret
dec
adc
mov
rcll
arpl
cmpsb
mov
or
mov
mov
adc
jmp
inc
aad
ret
out
imul
test
in
adcl
faddp
or
sti
insl
and
pop
xchg
cmpsl
xor
and
outsl
popf
pop
mov
dec
push
xchg
cmpsl
out
test
jbe
out
ss
cli
cmpsb
int3
pop
int
repnz
popa
cmpsb
and
mov
push
mov
and
call
adc
mov
mov
test
xlat
cs
jns
jmp
push
lret
call
jg
push
loop
notl
aaa
ds
xor
adc
push
and
and
out
out
mov
pop
mov
mov
sbb
inc
jbe
loopne
add
rolb
pop
inc
push
rcrl
fistpl
and
cmovnp
adc
adc
xor
adc
jne
mov
bnd
mov
cmpsb
les
outsb
mov
and
in
pop
cltd
pop
iret
sub
mov
inc
sub
ss
jne
add
and
jmp
scas
aad
xlat
test
pushf
aam
aam
mov
dec
add
imull
in
test
adc
mov
xor
ja
sbbl
mov
je
fs
std
sti
repnz
or
mov
or
in
inc
subb
and
stc
in
jae
sub
dec
cmpsl
out
xchg
sbb
scas
lods
shrl
sti
out
inc
loop
dec
insl
xchg
fsubrp
xor
sti
in
fwait
shrl
mov
push
mov
cmp
ljmp
xchg
xor
mov
std
js
ret
mov
out
bound
rcrl
daa
dec
inc
std
js
lcall
mov
sub
data16
mov
sub
and
mov
in
pushf
aam
js
vrsqrtss
inc
fs
lahf
pop
loope
faddp
stc
xchg
mov
popf
pusha
inc
lcall
lcall
fmull
std
mov
adc
push
and
shl
fwait
int
sub
push
jbe
aas
aad
mov
fnstsw
push
gs
jle
pop
jnp
cmp
out
packuswb
mov
lods
adc
xor
scas
xchg
mov
xlat
mov
pop
and
jp
pop
push
fisubrs
sti
inc
rcrl
sbb
xchg
in
pusha
in
xchg
adcl
mov
arpl
xlat
shrl
jp
mov
test
loopne
lea
fimuls
clc
sahf
sbb
cwtl
add
out
adc
std
mov
sub
sub
ds
inc
mov
jae
push
roll
sahf
aad
fsubr
popf
out
lret
inc
subb
das
xchg
sbb
mov
clc
mov
jmp
add
fwait
push
addr16
scas
push
in
push
daa
repz
dec
fidivrs
inc
mov
or
mov
xor
xor
xchg
xor
in
mov
movsl
cmp
dec
and
mov
mov
jle
out
out
push
rcrl
sub
inc
dec
cld
ret
insb
jo
test
push
cmc
arpl
cmp
sbb
cltd
imul
mov
push
xor
aam
es
dec
cmpsb
negl
int
mov
adc
sbb
imul
out
and
std
fidivs
push
xor
imul
sti
test
fisttpll
popf
sbb
xor
iret
add
test
and
in
xchg
push
sti
ret
or
sub
lret
lods
ret
int
fmull
fwait
or
push
movsl
shll
icebp
stos
cmpsb
lahf
loop
ja
sub
push
out
adc
mov
aas
fdivr
jl
repnz
cmp
push
jne
push
add
js
sub
imul
xlat
jo
cmp
std
fwait
inc
lods
push
sub
mov
inc
jg
inc
jbe
cmp
cltd
movsl
lods
data16
imul
adc
loope
test
shll
js
stos
fadds
push
sub
xchg
lods
test
out
lcall
cli
pop
adc
mov
lea
repz
movb
mov
xor
sub
mov
aaa
push
shrb
int3
sub
fdivrl
push
cmp
sub
fcmovne
rcr
sub
pushl
repnz
notb
cmpsb
add
out
xor
mov
loopne
xchg
leave
push
pop
or
enter
xor
inc
cmp
push
and
push
push
mov
jne
cmpsl
xor
insb
mov
pop
inc
xlat
jne
movsl
lds
pop
xor
and
sub
inc
and
xchg
add
xchg
insb
sbb
xchg
mov
fsubrs
inc
push
xlat
testl
adc
cld
loop
pop
ja
lahf
mov
xchg
mov
inc
and
sub
jmp
lods
cmp
rcll
push
and
push
dec
mov
push
inc
jb
nop
push
ds
mov
fwait
mov
inc
cmc
dec
leave
fs
lcall
clc
ret
int3
test
jae
mov
movsl
daa
and
icebp
add
and
rol
dec
mov
rorl
and
mov
gs
pop
js
lahf
sbb
mov
push
sbb
out
test
jne
add
fwait
test
cmp
lods
fsubrs
sub
imul
cwtl
and
push
fwait
loope
pop
cld
and
dec
jbe
repnz
inc
aas
je
push
mov
adc
fs
int
insl
in
adc
clc
xlat
sub
in
mov
add
cmp
out
out
test
test
stc
fldl
out
adc
and
inc
shrl
cmp
push
xlat
pop
add
xor
aas
movsb
popf
push
ficompl
dec
xchg
addl
xor
out
outsb
pusha
adc
adc
cmp
inc
je
mov
hlt
cs
xchg
ja
aaa
push
call
fidivrl
stos
push
inc
pop
cmp
xchg
sarl
sbb
push
jg
mov
popa
mov
and
or
fidivrl
into
mov
or
das
mov
inc
test
test
in
out
lods
xor
sub
or
pop
add
cmp
movsb
mov
push
mov
add
repz
or
dec
add
popa
lret
sub
test
gs
jmp
and
sbb
testb
or
mov
lods
rcrb
sub
and
ja
iret
lret
es
lods
sbb
jg
lea
add
jp
inc
in
pop
mov
mov
pop
push
fs
sbb
shrb
outsl
sub
cwtl
je
popl
into
sub
movb
pop
insb
ret
lret
popa
dec
dec
pusha
inc
mov
ja
jmp
daa
push
in
mov
mov
jmp
jg
and
or
add
aaa
nop
jne
in
cld
out
sub
fisttpll
dec
in
or
gs
add
popl
mov
insl
xor
xchg
test
rcll
ds
testb
out
xor
fs
aaa
and
sbb
repz
sarl
aad
sub
in
mov
dec
test
out
adc
je
dec
popf
pop
clc
repz
cmp
jg
andl
outsl
xchg
dec
lods
inc
subb
adc
test
push
pop
test
mov
icebp
fchs
xchg
movsb
int
jmp
adc
icebp
xchg
mov
fcmovb
push
xchg
idivl
adc
cmp
mov
scas
test
mov
sti
add
or
js
in
icebp
inc
rcrl
filds
jge
cmp
aaa
repz
jno
inc
jne
fisttpl
pop
mov
pop
std
fists
cltd
sub
jmp
pusha
mov
jne
insb
cwtl
in
or
xchg
leave
out
sub
enter
mov
loop
dec
dec
push
pop
popa
lods
xlat
roll
push
in
adc
push
popa
aam
fdiv
and
test
cmp
cmp
adc
sub
add
arpl
dec
xchg
pop
prefetchw
or
fisttpl
mov
mov
mov
sahf
fcmove
and
pop
add
inc
mov
jl
idivb
call
ds
inc
ret
mov
pop
aad
or
jecxz
jnp
andl
std
fists
lcall
push
inc
sub
jo
int
leave
hlt
lea
inc
aas
rcrl
inc
and
test
imul
scas
pop
cmp
popf
fsubrp
or
pop
enter
lcall
push
imul
data16
xchg
mov
and
jbe
pop
xor
lds
cmp
inc
out
stos
jne
pop
xor
push
and
clc
or
sub
pushl
dec
mov
jb
xchg
scas
enter
lods
loope
sbb
ret
mov
mov
cwtl
pop
pusha
addl
adc
test
rol
fidivrs
call
push
pop
cmp
inc
fmul
js
out
into
movb
pop
pusha
and
sti
mov
add
mov
jno
mov
add
push
clc
mov
add
cs
adc
inc
inc
jo
xor
mov
pop
push
xlat
lock
sub
repnz
andl
cmc
dec
mov
int3
xchg
or
fwait
imul
push
es
jne
fistpll
cmp
test
ret
push
push
push
sub
or
dec
in
fiadds
and
push
aaa
outsl
jno
dec
popf
sarl
je,pn
fcmove
addr16
icebp
movsl
out
pop
dec
push
xor
cs
adc
scas
jecxz
cmp
je
fwait
dec
jb
push
sbb
cwtl
nop
test
sub
cmpsb
test
sub
adc
movb
inc
es
jb,pn
inc
or
dec
cs
xor
jns
sbb
shl
adc
das
or
xchg
outsb
out
fstps
arpl
xor
test
mov
hlt
test
cmpsl
push
in
mov
popf
xchg
or
mulb
pop
xchg
cmpsl
jp
aam
lds
mov
bound
aam
aam
dec
mov
clc
mov
andb
push
aas
xor
pop
mov
test
mov
das
pop
addb
dec
adc
jl
ror
cmpsl
popf
mov
cmpsb
in
fbld
dec
sub
int3
cmpsb
hlt
mov
pop
mov
ret
dec
subl
cmp
ds
mov
cmp
jmp
sbb
hlt
outsl
inc
lret
ret
jecxz
inc
xchg
das
repnz
fisttpl
fwait
jae
fisubrs
mov
insl
jp
sarl
cmp
int
xchg
pop
aaa
in
imulb
lahf
cmp
mov
inc
jp
sbb
aad
cmp
or
data16
jbe
push
bound
js
rorb
mull
rolb
test
cmpsb
jge
fsubrl
and
stc
add
push
mov
dec
pop
mov
das
mov
and
cwtl
pop
pop
xchg
pop
sub
out
push
inc
nop
test
repnz
mov
mov
out
sub
pusha
repnz
pushf
jne
int
fildll
ja
int
xor
push
and
ljmp
cmpsl
add
xchg
fcmovnu
mov
rcrl
adc
cld
xor
push
xchg
xor
adc
sub
jne
ljmp
xor
in
cmp
in
pushf
inc
bnd
in
and
inc
notb
mov
mov
mov
stos
js
enter
xchg
dec
xchg
out
sub
dec
clc
xchg
js
lods
fiaddl
sahf
mov
sbb
nop
xchg
jns
das
aaa
arpl
shl
push
add
sbb
gs
stos
pop
mov
movsb
jg
bound
test
dec
xchg
mov
xchg
mov
and
sbb
push
push
add
sub
jecxz
call
adcl
shl
adc
in
arpl
jge
arpl
loope
pop
adc
push
fcoml
scas
jmp
and
adc
ss
ja
cmp
push
dec
fnsave
add
pop
sub
cs
into
ret
popf
cmp
mov
cld
fidivl
in
push
push
lahf
and
jb
pop
inc
and
or
mov
mov
push
lods
in
sub
iret
and
cmp
ss
test
dec
or
fmulp
xor
dec
lret
cmp
push
xor
sub
add
imul
icebp
dec
mov
lcall
xchg
test
or
rolb
xor
fdivrs
jmp
imul
scas
push
mov
xchg
sub
xor
iret
xor
add
adc
fsubrs
pop
js
psllw
popf
jnp
cmp
push
loop
out
pop
dec
scas
outsb
aaa
pusha
sub
cmp
bound
mov
outsl
gs
inc
pop
icebp
jnp
cmpl
adc
insl
or
jb
jp
inc
lret
jbe
sbb
pusha
test
es
mov
lds
adc
sub
cmc
in
or
mov
ja
shll
jo
mov
jge
pop
xor
sub
js
int3
push
pop
jecxz
sbb
add
pop
in
daa
pop
xor
mov
fdivrl
adc
cmpsb
mov
popa
fnsave
push
int
fisttpl
clc
jno
mov
or
push
ds
and
scas
test
pop
decl
fwait
cld
sub
cmc
jp
scas
adc
mov
les
fs
jns
test
xor
jg
fistpll
push
jp
mov
mov
xchg
in
mov
aas
mov
and
andl
int3
insl
fbld
xchg
adc
inc
test
insl
xor
inc
clc
mov
dec
or
ja
loopne
sahf
into
test
rolb
fdivrs
cmp
cmp
xchg
or
jmp
fs
cmp
cmp
jne
jns
sbb
jno
cltd
bnd
popa
sub
test
iret
and
call
mov
mov
repz
xorl
inc
dec
stos
pop
pop
mov
push
and
ficomps
push
pop
inc
in
addb
pop
int3
push
movsb
pop
sbb
lods
push
push
cmc
sub
pop
out
loopne
popa
jecxz
cmpsb
movsb
mov
lds
ja
leave
cli
dec
arpl
mov
sarl
shr
push
leave
sub
xor
dec
xor
ficompl
mov
es
push
push
in
pop
lret
push
mov
cmp
adc
ror
fiadds
mov
jge
movsb
push
mov
bound
or
fcoml
pop
aad
mov
pop
cmp
in
movsb
dec
and
aas
sbbl
loopne
sub
jae
push
out
jb
xchg
xor
dec
xchg
out
jge
rolb
jg
in
push
xchg
stc
adc
aaa
lods
in
out
aaa
aas
jmp
and
cmp
and
add
xchg
or
xchg
xlat
hlt
in
mov
cmp
push
repnz
xor
iret
jno
jae
iret
or
mov
gs
mov
xor
add
dec
and
jno
or
movsb
pushf
mov
inc
in
aaa
mov
shll
adc
lret
mov
sub
or
jns
jo
and
popf
jge
adc
ja
fxch
sbb
push
jne
xchg
jbe
adc
push
repnz
lods
add
xor
inc
inc
clc
arpl
das
pop
sbb
add
jb
pop
fwait
xor
sbb
sub
les
and
inc
jecxz
enter
bound
lret
hlt
cmp
aas
pop
sahf
mov
jp
jmp
xor
mov
add
inc
jge
outsb
jge
loopne
rcrl
xchg
push
sbb
inc
sahf
adc
jecxz
out
nop
mov
repnz
fwait
xor
stc
push
jl
into
push
push
inc
shl
shlb
add
roll
iret
sbb
into
scas
cmp
lea
mov
sbb
stos
add
jnp
mov
add
imul
or
loopne
sbb
xor
addr16
lods
in
xor
cmp
jns
jbe
and
lock
jbe
testl
movsl
out
popa
imul
and
inc
dec
and
fiaddl
cld
out
xorl
adc
xchg
popf
xchg
mov
dec
imul
daa
mov
pushf
push
pop
mov
stos
aad
sbb
and
inc
adc
jns
sub
sbbl
leave
inc
add
and
fsubrs
pusha
ret
mov
cs
leave
cwtl
mov
shrb
or
dec
pusha
dec
sbb
or
stc
add
loopne
je
push
xor
push
mov
dec
stc
pop
push
adc
je
pop
imul
inc
add
add
push
es
dec
push
cmpsb
jbe
stc
jbe
insb
sub
mov
cmc
scas
je
ds
mov
dec
mov
mov
in
out
add
mov
mov
fmuls
in
ret
cmpsb
call
das
add
stc
and
jne
xor
aam
jle
fsubrl
sbb
xchg
add
movsl
mov
push
hlt
mov
jge
xchg
jle
outsl
mov
popf
fiadds
shl
pop
add
jmp
repnz
enter
and
fisubl
repnz
pop
pop
sbb
mov
lods
or
lcall
lods
cld
cmpsb
cmp
movsb
mov
cwtl
leave
imul
repz
adc
ja
fldl2t
loopne
push
lret
scas
xchg
pop
sub
add
rorl
xlat
sub
cmp
imul
lods
push
dec
notl
inc
jae
push
in
adc
out
pop
dec
jmp
sub
and
or
out
inc
das
jnp
popa
jmp
negb
mov
jmp
daa
insl
xorb
cs
pop
test
mov
xchg
aas
jbe
das
scas
ds
sub
fs
adc
adc
sbb
inc
adc
pushf
rorb
mov
outsl
insb
jle
adc
lret
sub
mov
pop
hlt
jle
mov
push
fsubs
mov
mov
pop
add
adc
out
in
dec
movsb
push
aaa
sbb
xchg
fdivl
mov
adc
push
sub
gs
cmpsb
scas
cmpsl
cmp
xchg
int3
stos
mov
movsb
fstpl
mov
ss
jle
xchg
ljmp
sete
or
mov
adc
in
cmp
sti
xor
and
dec
jecxz
jle
iret
and
add
daa
jge
lock
push
scas
mov
ss
lcall
rolb
shlb
stos
mov
push
sbb
mov
inc
idivl
ljmp
sti
out
gs
lock
dec
cmova
xchg
mov
ret
push
and
sbb
xchg
cmc
inc
xlat
inc
push
adc
lea
xchg
daa
scas
or
addb
cmpsb
das
loope
cmp
std
int
imul
push
repnz
sbb
push
cmp
push
mov
mov
pop
push
push
insl
sub
adc
push
jb
or
jge
xchg
addr16
sub
ds
xchg
and
sbb
adc
xlat
insl
jne
xchg
inc
sbb
mov
pushf
adc
out
inc
inc
xor
jo
pop
pop
sbb
push
js
push
pop
sti
and
or
dec
push
jne
shl
clc
ficoml
sbb
jo
ret
push
mov
repz
in
int
int3
mov
test
cmpsb
int
mov
lods
popa
dec
push
xchg
test
pop
pop
test
in
imul
imul
imul
aaa
js
push
test
inc
iret
xor
aaa
pop
jb
push
inc
aas
sub
cmp
push
sbb
and
ffree
ret
xor
push
pop
fildl
inc
pop
iret
test
loopne
fs
mov
cmp
outsb
negb
inc
xchg
cmpsb
jae
add
xchg
mov
gs
or
pushf
xchg
dec
add
mov
in
fsubl
xor
test
pop
fistpll
cmp
mov
ja
dec
fistps
pop
sti
xor
adcl
sbb
push
fwait
mov
fdivp
xor
dec
loopne
popf
mov
jns
shll
push
add
scas
test
or
push
mov
lea
inc
mov
lret
stc
jbe
ja
hlt
dec
xchg
aam
add
pop
and
mov
stc
xor
movsl
arpl
mov
inc
dec
insl
adc
push
insl
jo
push
daa
xchg
dec
out
add
mov
push
std
adc
jmp
in
mov
push
daa
or
mov
pop
pop
lds
mov
xor
sbb
dec
add
mov
loop
cwtl
data16
mov
aas
and
cmpb
or
js
pusha
mov
push
shrb
push
cmp
repnz
sti
cld
jne
lret
roll
mov
idivb
sbb
jge
in
enter
adc
mov
pop
jne
test
or
in
ja
sarb
add
jno
mov
push
jecxz
sti
xchg
xor
inc
mov
jne
lds
sbb
and
and
stc
add
push
outsl
test
lds
sbb
pop
dec
sbb
dec
jbe
dec
mov
faddl
jae
pop
push
xchg
sub
xor
popf
rcrb
sub
sbb
push
jl
or
mov
xor
push
movl
dec
out
addr16
push
pop
xchg
leave
xchg
jnp
js
and
adc
dec
stos
cltd
pop
jmp
notl
sbb
js
push
addr16
loop
ds
ljmp
add
sbb
pop
cmpsb
adc
mov
rorl
pop
cs
jecxz
jo
addl
mov
mov
dec
cmp
push
and
clc
fistpll
jno
add
xchg
sbb
jmp
aam
sbb
pop
aas
sahf
pop
and
jne
bound
inc
mov
in
pop
mov
sub
pushf
jns
sbbb
and
jbe
mov
mov
mov
cld
push
bound
mov
lods
aam
test
mov
mov
pop
iret
punpckhdq
or
push
jae
jb
jnp
subb
test
jle
sahf
out
movsb
int3
adc
xchg
adc
stos
xchg
iret
fists
jmp
jo
aaa
and
es
in
jle
arpl
in
inc
mov
ret
imul
or
xchg
adc
test
sbb
or
jo
lods
or
mov
inc
jp
sbb
and
inc
mov
ret
or
dec
jge
lret
movsl
xchg
jmp
inc
rorb
adc
in
mov
gs
fcoms
roll
add
sub
pushf
sub
sub
mov
push
testl
dec
dec
outsb
ficoml
outsl
fdivrs
cli
sbb
mov
fwait
lea
fmull
sbb
jg
sbb
mov
ja
sarl
ret
pushf
popa
cld
dec
cs
stos
xor
xchg
adc
iret
dec
cmpsb
lea
rcr
adc
fisttps
or
and
ret
add
dec
pop
sub
cwtl
fs
lcall
pop
sub
add
adc
aaa
push
fldl
insb
mov
cmpsl
push
imul
inc
push
out
xor
in
push
bound
inc
xchg
insl
adc
mov
outsl
push
scas
es
mov
jl
repnz
test
inc
cwtl
dec
sub
ret
popf
add
jnp
sub
jae
push
or
lods
pop
mov
sbb
pop
sbb
lret
jne
sub
sarb
scas
rcl
dec
rclb
jg
scas
enter
les
pop
enter
and
aad
jmp
jns
arpl
clc
push
sub
shl
dec
cmpsb
sub
nop
int3
push
xchg
iret
loope
xchg
mov
test
and
dec
insl
fisubs
data16
hlt
shrb
neg
xchg
cmpsl
pop
insb
dec
dec
call
add
xor
shlb
jle
pop
xor
mov
mov
and
pop
cmp
ja
out
cs
mov
cld
push
lcall
mov
mov
mov
inc
sahf
leave
and
jl
cmp
mov
shlb
pop
adc
sbb
push
inc
in
mov
aas
mov
test
shrl
js
rol
test
mov
or
cli
xchg
aam
sbbl
jnp
push
xor
mov
loopne
addr16
add
rorb
rcrl
mov
loope
sbb
ja
shll
pushf
and
dec
add
ficompl
mov
and
mov
push
inc
insl
mov
push
repnz
int3
inc
popl
repz
ret
mov
test
or
adcl
ljmp
stos
xchg
and
cmpsb
inc
divl
or
aaa
and
test
push
cmp
jp
lds
adc
pop
jns
lea
fs
fstpt
es
mov
cli
jecxz
nop
lock
inc
adc
mov
inc
cs
jl
orl
xor
insl
cli
rolb
jae
cld
mov
inc
out
les
cmp
sub
pop
push
in
pushf
lea
or
data16
pop
jl
out
inc
fldl
cmp
xchg
inc
xchg
push
or
mov
dec
sti
mov
notb
popf
and
fwait
repz
dec
jmp
mov
movsb
repnz
fnstenv
or
mov
and
push
lds
cltd
imul
dec
lret
sbb
repz
adc
xor
adc
pop
and
imul
jo
sub
push
xchg
scas
jmp
lock
mov
and
jecxz
cmc
push
ret
ljmp
dec
scas
bound
aad
push
lahf
insl
sarb
rcrl
ss
pop
sti
jne
mov
xchg
scas
movsl
xchg
sub
repz
movsb
inc
push
js
fwait
cs
lds
ljmp
xchg
in
aad
adc
cmc
fcmovne
xor
pop
dec
mov
push
xchg
popf
or
sarb
jno
cmp
repz
mov
push
into
cmpsl
out
sbb
xchg
scas
rclb
add
dec
es
push
push
fcom
cli
movsb
add
jge
add
arpl
adc
in
xchg
ficompl
lods
push
xor
lea
push
adc
insb
dec
cmpb
inc
sub
scas
ret
pop
mov
push
adc
adcb
mov
jae
std
ror
inc
push
push
jno
pop
enter
and
idiv
cmp
inc
sbb
sub
fimuls
mov
dec
and
cld
rol
xchg
call
cmp
add
push
loope
mov
mov
repnz
xor
mov
cwtl
test
lock
ljmp
ss
inc
mov
and
xchg
lcall
or
lea
inc
cmc
pop
pop
adc
cwtl
out
fisttps
xor
mov
push
pusha
cmp
mov
push
dec
js
in
cmp
xchg
mov
xchg
je
push
aad
inc
fcmove
sahf
and
ds
ljmp
int
js
add
stos
mov
enter
movsb
ja
test
adc
cli
mov
shlb
add
push
ffree
test
mov
and
fidivl
xchg
push
rcr
mov
fidivrl
lods
fwait
shrl
out
cmp
test
mov
lods
ja
fildl
jmp
mov
and
into
fnstcw
mov
out
push
mov
mov
dec
test
pop
and
and
mov
adc
mov
cmp
xchg
xchg
jmp
inc
js
scas
jne
push
push
mov
push
jno
jns
inc
sub
orb
mov
imul
and
mov
push
push
aad
cmp
fnstsw
inc
jns
push
fnstsw
pop
pop
cli
push
sbb
repz
cmpsl
jecxz
pop
jne
cmp
imul
mov
cmp
sub
sub
cwtl
cmp
int
add
in
popf
sarl
xchg
jb
or
fimuls
data16
adc
or
and
add
push
cmp
stos
addl
push
jnp
pop
js
in
cld
xchg
jmp
flds
ss
jo
jp
aad
pop
test
leave
lcall
scas
outsb
stos
mov
pop
add
ja
call
test
sbb
aas
sub
lahf
testl
push
cmp
loopne
mov
pop
pusha
push
mov
push
stc
jmp
insb
lods
adc
lods
dec
add
fs
decb
add
inc
add
out
and
cmp
inc
sbb
fwait
call
mov
mov
jecxz
jg
das
jle
add
test
mov
loope
icebp
adcb
lds
adc
xchg
inc
stos
mov
jg
movsl
adc
andl
lods
sahf
vxorps
cwtl
and
add
adc
stos
jo
mov
xor
inc
je
subb
sub
inc
addr16
and
les
xor
dec
ljmp
xchg
ret
call
test
cmp
xorb
imul
mov
popa
jae
lahf
lahf
mov
xchg
fs
sub
inc
aaa
out
dec
imul
lods
jg
push
sub
lea
pusha
cwtl
cmp
lahf
cmpsb
xor
jecxz
pop
lds
aas
and
add
fmul
movsb
or
pop
xor
scas
insb
imul
lret
dec
xor
int3
ljmp
jbe
fnstenv
jns
pusha
xor
negl
xor
adc
jnp
mov
data16
cltd
lds
fxch
or
sub
pop
inc
cltd
lahf
jg
outsb
push
sub
mov
cs
adc
test
data16
inc
mov
adc
shll
cmc
rorl
pop
loope
lods
nop
ljmp
xlat
lds
mov
fildl
or
movl
mov
std
jp
dec
mov
push
adc
addb
fcmovbe
stos
scas
lods
jb
scas
mov
adc
or
lret
push
into
mov
xchg
imul
movl
xchg
je
js
dec
inc
divl
jbe
jne
scas
mov
push
mov
mov
out
xchg
sub
fs
jecxz
repnz
dec
cltd
pushf
shll
inc
addr16
std
repz
rclb
imul
dec
mov
aaa
sub
dec
jg
cmp
and
ss
popa
pop
lcall
mov
fistpl
into
loopne
addr16
lret
mov
sbb
mov
fbld
ja
int3
and
cld
fisubl
mov
cli
dec
decl
int3
add
xchg
cmp
popa
rcrl
hlt
adc
and
sbb
sbb
std
cli
push
lret
out
mov
ja
inc
in
mov
and
or
push
mov
cltd
stos
rcll
stos
jle
mov
mov
enter
scas
pop
sub
aas
fadd
xchg
sahf
ret
push
sub
pushf
adc
mov
lock
clc
inc
or
dec
ret
inc
popf
movsl
int3
jno,pt
mov
cmp
push
jne
xor
cwtl
mov
call
dec
mov
imul
aam
out
cmpl
adc
ficomps
addr16
std
xchg
into
nop
js
inc
fucomi
ljmp
loope
in
inc
out
cmpsl
xor
or
jl
jns
repz
cmc
jb
dec
jle
mov
mov
jb
mov
and
imul
push
shll
inc
mov
fisttpll
mov
in
in
sahf
icebp
mov
fwait
push
push
stos
mov
xor
cwtl
lret
dec
xor
inc
fnsave
xchg
pushf
mov
int
or
leave
fisubrl
adc
xor
jmp
movsl
rcll
out
dec
or
mov
mov
fcoml
dec
adc
dec
clc
xchg
jg
sti
lock
push
dec
mov
scas
leave
pop
mov
and
xor
aaa
or
gs
xchg
add
mov
pop
pop
add
inc
loopne
into
in
stos
loope
adc
push
sbb
stos
test
adc
and
shr
jo
and
pusha
es
add
out
scas
outsl
xor
insl
les
sbb
es
adc
jbe
aad
cmp
push
out
cmp
subb
mov
fisttpll
orl
mov
movsl
adc
xchg
push
sbb
rolb
add
pop
adc
std
pop
call
jle
aad
cld
adc
lea
lods
test
jne
ret
sub
fwait
jbe
out
xchg
cmp
adc
sub
xchg
xor
lcall
pusha
shll
imul
pop
repz
mov
xlat
xlat
pushf
mov
fdivr
test
addr16
push
fwait
roll
xchg
cmp
test
cmp
push
xor
xchg
mov
inc
dec
pop
mov
sbb
jmp
and
push
stos
cmpsl
xor
jg
out
or
mov
stc
jae
xchg
xor
mov
popa
sbbb
sub
inc
lds
cs
cmp
out
aam
cmp
push
sub
hlt
jp
mov
mull
lcall
movsl
stc
inc
push
test
arpl
inc
add
push
xchg
hlt
loopne
adcl
shll
int
cmc
iret
lahf
add
mov
rolb
pushf
popf
sbb
ss
inc
push
out
add
dec
movsb
test
xor
es
pop
push
shl
cmpl
outsb
popf
enter
or
adc
out
jbe
sti
sbb
rolb
xor
jg
fldt
push
test
jne
popf
mov
test
pop
loopne
sbb
pop
adcl
add
loope
repnz
test
mov
jmp
js
in
push
dec
inc
xor
rcll
adc
pop
fld
dec
jle
jne
jp
lret
aad
into
inc
faddl
lret
push
mov
dec
push
push
sbbl
xchg
std
or
mov
nop
cmovb
cs
add
xor
aaa
cltd
xor
iret
xchg
xchg
jno
decl
jg
int3
xchg
push
pop
ret
addl
push
pop
dec
xchg
pop
andl
subb
dec
or
pop
sbb
or
sub
jb
mov
insb
inc
addr16
and
cs
jl
aad
adc
lods
arpl
dec
xchg
fcmovb
mov
stos
scas
push
test
mov
mov
cld
loopne
cmp
mov
stos
adc
aam
sbb
sar
or
pop
sub
add
mov
sub
adc
jb
dec
sub
add
sbb
call
push
leave
outsb
in
pop
cmp
fcompl
xlat
pop
fsubs
cmp
add
xor
addl
jns
cmp
sahf
outsb
mov
popf
xchg
jnp
mov
hlt
jmp
jb
sbb
hlt
sbb
dec
dec
insb
enter
cmpsb
shrl
inc
in
call
and
mov
xchg
into
pop
jge
fimuls
pop
jl
insb
outsb
pop
sub
sahf
push
fisttpl
or
pop
pop
or
mov
jmp
int
jl
into
inc
sarb
push
pop
iret
push
outsl
and
push
insb
es
pop
les
sti
into
cmp
out
xor
pusha
push
adc
sbb
xlat
xchg
adc
jmp
mov
scas
jl
lcall
out
mov
cli
or
mov
fs
push
ret
popa
jb
mov
xor
int3
sahf
subl
push
andl
sbb
and
push
xchg
sbb
out
movsl
incb
inc
je
add
fsubrl
mov
outsb
movsb
jo
loopne
and
mov
pop
cmc
jmp
xor
leave
ret
mov
mov
or
sbb
call
or
pop
std
sub
dec
stos
inc
fldcw
les
xor
das
mov
ret
call
cmp
std
sti
push
leave
cmp
and
sbb
xchg
outsb
cmp
pop
fsub
dec
and
push
loopne
adc
jb
shrl
sti
push
push
aaa
std
and
fwait
mov
stc
lods
lcall
and
sbb
mov
out
cmp
icebp
test
shrb
ljmp
aas
addr16
push
sbb
les
add
test
movsb
sub
xchg
mov
aas
or
mov
rcr
xchg
and
push
mov
aad
add
sub
bound
inc
data16
aas
test
aad
loopne
fucomi
out
mov
adc
orl
xchg
jne
and
testb
icebp
lahf
mov
or
and
scas
pop
mov
mov
or
push
add
dec
fadds
jecxz
test
orb
cmp
cmp
inc
pop
bound
icebp
lock
xchg
mov
sti
push
jne
sbb
in
mov
scas
inc
push
sbb
mov
lock
imul
movsb
ljmp
xchg
repnz
int3
mov
inc
rclb
pop
jp
pop
bound
ljmp
int
outsb
add
and
sbb
lret
repnz
mov
jo
je
dec
and
rolb
pusha
mov
fistpl
popa
sub
mov
lock
orb
cli
loopne
mov
rcrb
mov
pop
jb
iret
cld
mov
jecxz
in
xor
divl
je
xchg
cltd
shll
andl
or
or
leave
add
jp
mov
mov
das
pop
mov
enter
cmpb
hlt
pop
mov
push
xchg
mov
push
cwtl
cmp
mov
mov
push
in
pop
xor
cmp
xchg
adc
gs
pop
sub
cmpsb
push
push
icebp
mov
cld
mov
pop
dec
sbb
ss
mov
out
movsl
and
in
loope
cltd
pop
jg
ret
stc
out
test
ljmp
jnp
dec
rorb
push
and
imul
pop
aas
test
rcrl
push
cmp
lods
rcrb
ss
xchg
imul
dec
in
scas
lcall
pushf
and
dec
inc
push
xor
bnd
sbb
les
cmp
push
jbe
adc
jl
mov
notb
dec
ret
popa
test
inc
inc
orl
xor
jg
out
aaa
mov
inc
and
lods
iret
aad
stc
pop
jb
out
inc
bnd
stos
idiv
pop
out
sarl
jg
iret
and
orl
ds
push
enter
push
movsb
push
je
flds
pop
loop
fnstsw
clc
leave
aad
jno
aam
jg
xor
jnp
pop
test
cmp
xor
or
roll
pop
jno
mov
mov
aad
lret
adc
cmpsl
xor
retw
daa
rorb
mov
js
xchg
fwait
xchg
push
into
cmp
xchg
push
flds
sub
cmc
mov
pop
jle
push
mov
sbb
cmp
fdivrl
cld
jnp
jecxz
sub
js
pop
pop
add
jbe
mov
mov
lret
push
xchg
push
lods
fdivrl
pop
xor
or
xor
xor
pop
int3
pushf
sbb
jg
dec
inc
dec
xchg
inc
mov
xchg
sbb
in
mov
mov
jne
xchg
jle
loopne
arpl
bound
lret
push
mov
fwait
rcrl
je
jae
sub
les
mov
inc
mov
mov
and
or
push
setb
jle
andb
xchg
mov
mov
adc
jmp
inc
add
fisubrs
bound
arpl
lds
jle
cmp
lea
or
into
mov
adc
clc
pop
pop
mov
lcall
iret
test
inc
ja
and
fiaddl
in
leave
rorl
add
jnp
stos
adc
shl
push
repnz
test
adc
fnstenv
mov
fs
nop
mov
adc
mov
je
push
mov
xor
pop
sbb
cmp
cmp
pushf
icebp
sbb
dec
sbb
dec
in
sub
dec
rolb
sub
inc
cmpsb
push
inc
jno
ret
jne
mov
das
lret
outsb
jg
ss
add
add
lret
psubsb
mov
add
out
stc
cld
enter
and
dec
outsl
mov
jge
or
jecxz
scas
jmp
add
push
cmp
jno
mov
test
inc
cmc
jns
xor
fs
aad
adc
push
lcall
xor
jp
lock
pushf
into
xchg
and
fadds
mov
and
add
cmc
xor
ds
sub
jb
shll
pusha
jl
test
xchg
jp
mov
push
lods
int3
inc
jmp
insl
push
aas
out
in
mov
jecxz
je
in
fwait
scas
push
mov
jecxz
clc
adc
jne
adc
mov
push
ret
je
js
adcb
out
cmp
adc
push
das
fadds
lahf
xchg
xchg
or
and
xor
pushf
out
jp
rol
lods
pop
fwait
jne
enter
pop
inc
xor
lock
decb
xchg
add
pusha
inc
push
cmp
mov
sub
xchg
pop
ffreep
add
flds
or
cmp
xchg
sub
lods
outsl
jmp
add
sbb
xchg
movsb
es
test
xlat
iret
xor
sbb
shll
in
cmp
cld
movups
scas
mov
and
sbb
cs
bound
fninit
sub
aam
sub
mov
xlat
sti
ret
nop
popf
pop
sbb
loop
lock
cmc
scas
pop
aas
mov
lods
lcall
add
cmc
clc
jp
and
jl
mov
adc
pop
jb
push
push
or
jecxz
outsb
ficoms
pop
scas
jp
ss
xor
cmp
sub
rcr
leave
push
jbe
push
dec
sbb
jne
pop
insb
pusha
inc
add
and
cmc
shl
call
ror
ljmp
in
das
ds
and
shlb
jle
stos
cwtl
lods
pushf
scas
sbb
or
jne
es
loope
rolb
dec
fmuls
push
shl
push
stc
xor
jl
dec
mov
mov
cmp
mov
mov
mov
movsl
loope
xor
jmp
or
addr16
pushf
enter
adc
xchg
movsl
lods
jno
loop
dec
jno
inc
jns
cmpsb
sbb
cmp
mov
mov
lret
sahf
enter
enter
cmp
insb
inc
pop
fdivrl
mov
sub
fimull
call
cmp
movsb
push
push
xchg
xor
adc
or
mov
adc
or
inc
popa
pusha
dec
sbbb
mov
adc
loope
dec
mov
sub
adc
cwtl
xor
mov
mov
aad
cmpsl
dec
ss
das
movsb
add
mov
pop
test
adcl
dec
pop
roll
scas
std
movsb
jne
repnz
pop
xor
in
xor
dec
pop
push
dec
push
inc
add
ljmpw
pop
add
outsl
lcall
gs
test
movsl
das
out
mov
mov
mov
pop
push
xor
cmc
mov
mov
std
pop
add
lods
xor
inc
adc
js
xchg
xor
push
xlat
in
xor
subl
imul
mov
fs
mov
sbb
push
jb
pop
fcmovu
mov
mov
inc
fldcw
orl
nop
cwtl
or
adc
mov
jle
inc
in
repz
hlt
adc
mov
cmc
shrb
push
xlat
and
in
insb
jecxz
push
aaa
or
ja
push
arpl
jmp
sbb
push
pop
mov
fdivs
aam
sbb
shl
mov
sbbl
repz
push
xor
or
add
sub
test
lret
ja
repz
adc
adc
cld
push
and
add
fldt
mull
adc
aam
js
addb
cmp
adc
mov
and
cltd
fs
xchg
and
xchg
es
mov
fcmovnu
xorb
je
sub
loope
add
xchg
mov
jg
pusha
sub
lea
fildll
jno
push
jns
incl
inc
and
aad
or
aad
jcxz
pop
scas
push
mov
dec
mov
hlt
je
mov
xchg
pop
filds
hlt
mov
sub
or
cmp
enter
je
xchg
sub
mov
int3
mov
xchg
push
push
lret
xor
dec
push
int
sbb
push
push
shrb
outsl
mov
sbb
and
adc
adc
addl
dec
push
jb
das
sbb
dec
scas
dec
and
inc
cmpsb
sti
sbb
sub
ja
int
scas
push
pop
pusha
sahf
add
pop
ret
mov
push
inc
insb
ja
out
xchg
mov
mov
jl
inc
pop
sub
push
out
xchg
setg
mov
fidivrl
bswap
mov
cmc
inc
mov
xor
stos
fxch
fdivrl
repnz
push
sub
jo
aam
push
sahf
mov
fst
daa
jl
es
cli
mov
js
and
add
xchg
xchg
mov
imul
faddl
outsl
ja
sbb
lods
inc
adc
mov
ds
ffreep
subl
rclb
hlt
int
test
rol
test
fildl
mov
sub
jp
jg
loop
aaa
sub
mov
push
addl
fsubs
dec
mov
test
data16
adc
arpl
fisttpll
mov
pop
js
mov
enter
jb
mov
call
test
mov
jge
fldl2e
dec
repz
hlt
cmp
roll
rcr
or
std
xor
aam
rcl
mov
outsl
mov
push
add
pop
test
ljmp
movsb
notl
iret
cli
imul
xchg
xor
mov
xchg
push
inc
movsl
fmuls
add
lret
add
push
shll
in
push
dec
in
hlt
and
mov
inc
popf
rcll
out
jnp
notl
ds
stos
js
jmp
sbb
fsubrl
mov
dec
xchg
aam
push
arpl
and
ret
add
leave
lahf
xor
xchg
dec
je
push
and
add
mov
imul
cmp
or
xchg
push
add
shl
push
mov
sub
outsb
lcall
pop
into
aaa
dec
fcmovnbe
pop
std
lret
push
lods
enter
mov
push
mov
enter
dec
jge
sub
dec
hlt
mov
call
roll
pushf
scas
imul
repz
jecxz
icebp
pop
roll
adc
insl
push
testb
test
dec
and
data16
mov
mov
and
inc
fidivrl
mov
pop
shrl
gs
shlb
test
jmp
sbb
ss
mov
test
int3
jle
pushf
push
daa
mov
repnz
dec
inc
insb
sbb
push
sub
inc
and
pop
jns
bound
mov
std
add
in
mov
out
std
cwtl
leave
ret
cld
aas
repz
bound
mov
test
inc
mov
sbb
aam
testb
sysret
or
pop
div
pushf
addl
enter
xchg
shlb
movsb
xchg
mov
sbb
sub
out
mov
lret
bound
leave
push
sub
lds
movsl
xor
das
push
lret
insb
pmulhw
lret
cmp
xor
in
xor
iret
add
icebp
mov
rol
mov
popa
data16
mov
jp
std
sbb
aaa
dec
mov
inc
call
mov
mov
xor
sbb
cmp
sbb
push
sbb
xor
and
sub
ret
cld
aam
sbb
add
sub
xchg
sub
sub
enter
and
ret
ljmp
push
mov
neg
adc
mov
movsb
mov
lret
cmp
ja
sbb
mov
jmp
sub
ret
xor
dec
addr16
ljmp
out
inc
mov
imul
xor
cltd
add
inc
xchg
das
or
out
pop
call
popf
xchg
dec
loopne
sbb
lret
pop
jmp
stc
xchg
rcrb
movsl
pusha
jp
loop
sbb
mov
push
jne
nop
cld
imul
in
sub
jo
fidivs
cld
or
call
mov
das
mov
push
jo
inc
mov
add
mov
mov
fldenv
pop
pop
dec
mov
scas
mov
push
cmpb
shrb
insl
inc
mov
xor
jno
int
mov
mov
idivb
arpl
dec
pop
push
daa
sahf
lret
dec
enter
sahf
dec
in
ljmp
cmp
aaa
clc
cli
fisubrs
xor
ror
cmpsl
add
cmp
mov
push
sub
or
lods
sti
jmp
jae,pt
add
or
aam
loope
inc
mov
push
mov
cs
mov
mov
aad
xchg
call
mov
xor
fadds
push
out
add
pop
lret
mov
dec
movsb
pop
movsb
sahf
adc
and
icebp
adc
iret
loop
mov
nop
js
and
sub
insl
dec
outsl
or
jmp
adc
rorb
cli
mov
cmp
mov
add
pop
and
addr16
xor
dec
call
mov
jae
mov
es
lds
icebp
lea
data16
mov
pop
add
popa
cld
loopne
mov
idivl
testb
arpl
loopne
pop
jnp
je
dec
movsl
lret
imul
jp
out
sbb
jae
mov
stos
xchg
in
shl
cmp
sub
addl
outsl
arpl
stos
xor
xchg
int3
mov
push
cmp
out
pop
sti
adc
test
js
inc
shl
cli
xchg
inc
enter
jbe
add
pop
xorb
jg
add
pop
mov
int
lods
negl
pushf
mov
fnsave
jno
sub
xchg
push
pop
mov
jae
mov
clc
bound
loope
mov
into
push
rol
pop
and
pop
sub
jbe
pop
int3
out
dec
mov
mov
call
mov
stos
mov
fdiv
dec
pop
push
clc
test
jns
ret
cli
sub
test
adc
test
addr16
xchg
push
adc
outsl
es
cld
in
lahf
pop
and
lcall
and
jb
push
push
sub
stos
sti
aam
lahf
mov
xchg
lods
pushw
cld
arpl
lods
aaa
dec
xor
inc
lret
fs
dec
fidivrs
out
lcall
stos
push
test
stos
jns
mov
xchg
sbb
mov
mov
pushf
out
lret
sub
fcompl
adc
pop
rcll
cmp
arpl
cmpsl
cs
mov
in
xchg
sarb
pop
pop
pop
jecxz
stos
scas
in
mov
xchg
out
mov
data16
xchg
js
jecxz
fsubs
adc
or
in
repz
push
push
test
adc
dec
xchg
inc
ljmp
jbe
fdivrs
outsl
lods
dec
iret
cltd
sub
mov
arpl
jp
cmpsl
cltd
mov
lcall
xchg
cmpsl
mov
nop
xchg
sub
xor
or
add
in
aam
jg
sub
push
movsl
mov
pop
inc
daa
dec
inc
push
cmp
add
adc
adc
mov
sbb
out
sbb
xchg
sbb
notb
or
and
or
jl
lock
xchg
call
push
xchg
mov
pop
push
in
faddl
ret
sbb
push
inc
push
jb
xor
add
pop
inc
xor
cmp
jl
push
lret
fwait
lahf
xchg
xor
add
clc
cmp
push
jge
imul
inc
dec
hlt
mov
shl
add
pop
inc
test
aam
or
inc
dec
lahf
ret
fisubrl
push
push
push
jae
das
addb
fsubs
inc
inc
push
movups
shrl
fldcw
ljmp
jns
fcompl
mov
push
insl
je
mov
mov
lcall
or
mov
nop
or
add
ss
jecxz
mov
mov
sarb
inc
xor
jg
inc
jmp
lds
push
insl
rcr
mov
sbb
xlat
sbb
sti
into
arpl
or
push
gs
addr16
iret
pop
das
rorb
stos
push
imul
and
jge,pn
sbb
lock
addr16
out
adc
insl
and
pop
jecxz
dec
push
add
sbbb
mov
mov
in
in
add
mov
mov
and
lea
and
movsb
jnp
or
mov
subl
je
rcrl
push
mov
adc
jno
out
ror
xchg
jo
sar
or
iret
and
pop
subl
out
je
mov
add
pusha
jns
sub
push
sub
xor
loope
cmpsb
xchg
sub
adc
mov
lret
call
jg
ds
sub
mov
rcll
inc
add
xor
addr16
cmpsb
sti
cmp
and
jno
mov
jbe
lods
mov
pop
cld
loopne
mov
jns
add
js
jl
insb
adc
out
dec
mov
xchg
pop
cwtl
push
jnp
les
adc
int3
dec
or
aas
sbb
jge
scas
fimull
inc
mov
call
lea
data16
outsb
in
inc
inc
lock
lahf
pop
ret
aam
lret
or
dec
popf
fucomip
addr16
sub
pop
lock
or
popf
scas
out
stc
and
sahf
jge
aaa
push
pusha
sbb
loope
enter
pop
or
cs
push
int3
adc
outsb
movsb
pop
pop
dec
rorl
leave
adc
test
out
mov
test
movl
jbe
push
add
enter
sbb
push
and
pop
push
repz
aaa
in
lret
pusha
pop
repz
jne
dec
lea
mov
add
mov
jle
test
xchg
fidivs
inc
push
mov
inc
sbb
sub
ret
mov
pop
adc
sahf
push
sub
ljmp
mov
jle
and
js
fsubrs
inc
loope
sbbb
jns
in
add
ds
iret
add
mov
test
lcall
add
jns
sahf
adc
mov
cmpsb
imulb
fwait
orb
add
push
jecxz
dec
stos
idivl
je
add
lock
add
mov
add
movsl
ret
dec
xchg
xor
push
iret
push
fdivl
jbe
arpl
xor
adc
pop
mov
jp
in
cmp
lods
test
lret
in
cmp
pop
mov
add
fidivrl
rcrl
jmp
push
inc
push
push
cli
or
xchg
mov
pop
push
add
movsb
xor
push
dec
push
movsl
call
dec
mov
icebp
int
pop
add
pop
dec
cmp
decb
int
sbb
xchg
int
loope
test
xchg
jno
jns
clc
and
pop
pop
ja
xchg
xchg
sbb
leave
loop
ret
jbe
sbbl
icebp
jae
push
nop
mov
int3
std
shlb
loope
dec
lods
dec
or
stos
les
push
decl
add
addr16
jp
sbb
mov
fs
rorl
fsubs
and
xchg
pop
test
in
sbb
roll
xchg
incb
jbe
and
je
xlat
mov
mov
jmp
jp
fnstenv
std
xchg
fcoml
xor
jnp
adc
add
outsl
push
xor
lahf
xchg
cmp
loopne
xor
nop
push
pop
imul
mov
mov
or
dec
subb
leave
push
icebp
out
and
data16
mov
jo
rcrl
mov
test
adc
lods
pop
subl
jo
cmp
aaa
fs
fs
int3
loope
xchg
mov
gs
pop
lods
inc
cmc
jae
dec
mov
loop
adc
mov
sub
ret
dec
add
xchg
push
aam
sbb
ds
pop
mov
pop
push
add
popf
scas
xchg
add
hlt
shlb
pop
mov
ficompl
test
mov
jmp
lret
imul
sub
sbb
enter
arpl
dec
adc
mov
xorl
orl
nop
xor
or
lock
aaa
sbb
vmwrite
sbb
or
xchg
ja
arpl
cld
hlt
sbbb
imul
and
or
std
mov
pusha
mov
out
cs
sti
xchg
push
dec
inc
xor
stos
scas
or
xor
mov
push
dec
add
inc
subb
hlt
icebp
test
mov
inc
es
aaa
aaa
xchg
jg
icebp
in
int
imul
sbb
stos
imul
pushf
mov
divb
dec
sbb
outsb
dec
mov
and
xchg
lret
popf
imul
outsb
data16
test
stos
sbb
cmpsl
mov
push
bound
ret
fucomp
in
in
aaa
add
push
fnstenv
or
and
push
push
stos
pop
push
std
lods
dec
mov
add
das
insb
xchg
pop
fidivrl
je
out
pusha
pop
pop
int3
mov
mov
das
push
repz
sub
jl
add
insb
add
push
mov
repnz
sub
pop
lock
cs
cmc
xor
mov
jg
call
cmp
scas
mov
call
std
nop
arpl
pop
ds
inc
xor
gs
add
mov
int3
mov
add
adc
sbb
mov
sbb
push
stos
loope
sub
cmp
iret
cmpsb
testl
es
or
mov
mov
mov
das
mov
add
mov
sub
mov
es
jp
mov
cs
test
nop
xor
adc
enter
idivb
adc
mov
shrb
jmp
addb
mov
xchg
rorl
inc
rolb
mov
dec
cmp
jbe
loope
mov
push
push
outsb
xchg
mov
loop
jg
inc
pushw
jb
push
je
sahf
inc
aaa
and
in
lret
das
jae
les
xchg
push
call
sbb
mov
pop
test
loopne
cwtl
xchg
xchg
loopne
push
jmp
sub
pop
mov
mov
dec
cwtl
arpl
adc
xor
addl
cmp
and
dec
mov
mov
xor
add
shl
jmp
push
repz
and
and
ja
insl
inc
std
cs
push
pop
js
fsubrs
sti
sahf
sahf
adc
and
pop
mov
das
fstl
leave
or
aad
push
ss
cmp
jmp
jmp
dec
iret
xor
pop
xorb
and
lock
push
adc
add
pop
or
push
jno
or
adc
mov
xor
mov
sbb
nop
jbe
inc
xchg
mov
adc
pop
mov
popa
jo
shlb
pop
add
bound
loopne
push
sub
adc
jge
sbb
stos
repnz
push
sub
call
jns
lock
sub
sti
xor
ds
jbe
xchg
enter
dec
jl
icebp
fwait
popa
xchg
shll
or
mov
xorl
lods
push
jbe
lret
xchg
data16
stos
inc
call
and
inc
bound
leave
shll
xor
or
int
pop
clc
movsl
mov
xchg
ds
loopne
sub
mov
repz
loopne
mov
popf
adc
mov
pusha
les
int
lods
sbb
jb
bound
cmpsb
push
lods
and
nop
out
fucomip
jne
inc
cwtl
int
and
hlt
dec
movsl
push
sub
dec
or
dec
cmp
cli
xchg
mov
adc
daa
pop
mov
push
data16
fldl
or
inc
dec
mov
cltd
call
orb
lock
dec
das
mov
mov
xchg
pop
xor
mov
iret
add
pop
or
ret
jo
mov
test
lret
inc
lock
push
out
xchg
add
mov
cmp
aad
std
cli
mov
mov
dec
mov
pop
add
clc
add
cmc
push
dec
xor
popf
pop
shll
mov
fwait
or
lea
adc
inc
mov
cli
lods
movsl
sbb
xchg
lods
aas
fidivrl
imul
stos
sub
xor
test
jns
sbb
es
xor
pop
xor
sbb
cwtl
jb
out
mov
dec
cmpsl
cld
stos
mov
fldenv
jp
rol
mov
pusha
stos
sub
mov
xorl
rorl
clc
stos
js
stc
int3
push
pusha
ljmp
faddl
insl
jmp
jae
sub
std
jp
dec
cld
cmp
add
mov
push
loop
insl
xor
cmp
push
movsb
and
inc
mov
shll
adc
addr16
pop
and
sub
add
test
fwait
mov
push
mov
cmp
nop
push
sub
pop
sti
cmpsb
pop
inc
dec
mov
aam
push
aad
mov
ljmp
lea
mov
clc
adc
push
sahf
jp
fbld
xchg
inc
mov
jmp
xor
ja
mov
jl
cmp
adc
inc
push
dec
inc
jmp
popa
popf
out
pop
jb
out
mov
pop
stos
pop
mov
addr16
outsb
in
nop
mov
popa
dec
dec
xorb
fistps
mov
fsubrp
scas
ret
and
sbb
mov
lret
cmp
int
ror
push
dec
push
mov
pop
les
push
test
push
stos
aam
mov
mov
dec
jne
sub
mov
mov
pop
push
xchg
push
into
jno
sbb
ds
mov
shrb
push
mov
push
and
push
loope
div
in
add
mov
out
add
cli
outsl
test
push
cwtl
jmp
sub
das
push
pop
data16
ds
repnz
sbb
or
idiv
mov
or
mov
aas
in
push
stc
mov
xchg
imulb
cli
pop
mov
fcmovnb
cmp
and
insl
xchg
popf
cmpsb
call
aam
lea
sbb
in
dec
mov
jmp
xchg
jae
mov
notl
clc
dec
lds
daa
jns
cmpsl
int3
call
mov
imul
cmp
les
xor
outsl
ljmp
mov
dec
mov
mov
mov
push
cmp
decl
inc
lahf
push
add
mov
inc
test
push
dec
add
les
add
sbb
sub
mov
adc
addl
lret
lahf
jno
sub
mov
inc
xchg
in
inc
aas
lahf
or
addr16
ret
and
scas
sub
jp
push
call
dec
dec
inc
rcrl
jae
out
xor
mov
test
sub
aam
xlat
xor
fwait
inc
imul
xchg
sub
mov
and
in
rcrl
sub
cmc
imul
stc
pop
dec
scas
enter
aam
or
push
fldcw
test
mov
cmp
mov
inc
sub
sbb
mov
dec
sbb
cs
aad
fildl
imul
adc
out
mov
dec
and
mov
sub
fstpt
cmpsb
mov
hlt
fcomps
pop
mov
iret
rorl
push
lods
or
xchg
cmp
jmp
shll
xor
dec
inc
add
lahf
nop
cmp
or
push
jno
adc
cmc
or
hlt
cmp
enter
dec
or
sbb
js
inc
out
cld
loope
nop
mov
dec
adc
jge
jae
mov
sbb
or
fdivs
mov
and
sahf
loope
push
jb
in
sbb
inc
insl
push
popa
test
cmp
sbb
jno
cli
jmp
mov
inc
xchg
loope
sub
xchg
fisubs
mov
outsl
mov
hlt
jae
xor
pop
xchg
xchg
add
les
mov
rcrb
pop
call
sbb
sub
imul
mov
jmp
xor
dec
mov
push
sbb
neg
loop
xchg
xchg
cmp
or
pop
mov
add
adc
mov
repnz
clc
adc
xchg
cmp
xchg
daa
clc
or
mov
mov
arpl
stc
pop
out
dec
fwait
dec
cmp
xor
mov
lret
mov
jb
outsb
rolb
and
add
insb
inc
xchg
jae
mov
and
sbb
sub
add
adc
movsl
idivl
fst
jl
xchg
stos
pop
in
adc
test
andps
nop
arpl
imull
rcrl
pusha
in
out
mov
in
iret
jg
loop
lock
lahf
aaa
stos
mov
xchg
pushf
or
mov
popa
adc
popf
imul
mov
pop
push
xor
sbb
gs
filds
fdivl
scas
mov
scas
enter
cli
cs
jno
dec
je
push
or
mov
mov
xchg
pop
test
cmp
push
ret
mov
and
pop
subb
cltd
cmp
outsl
into
push
pop
das
mov
or
fistpll
lods
arpl
jmp
or
sub
dec
fcoml
mov
push
sahf
js
sub
shrl
xor
hlt
rolb
test
mov
add
and
es
outsl
push
fcom
mov
lods
add
test
js
daa
dec
scas
mov
mov
cmc
aad
lods
inc
push
leave
inc
fldcw
es
add
add
js
mov
loope
jle
ds
ja
cld
jmp
lcall
loop
xchg
jnp
movsl
pop
jmp
mov
lods
mov
and
mov
inc
add
pop
pop
test
add
push
jnp
nop
pop
clc
adc
lods
clc
mov
adc
mov
and
mov
sub
fstpl
push
hlt
cmp
jl
mov
sbb
push
push
lods
dec
inc
inc
data16
push
push
xor
js
pop
xor
push
sbb
or
xchg
jb
push
jl
sbb
lret
mov
mov
mov
lahf
and
stc
testl
jae
xor
mov
call
jae
les
in
insb
movl
in
cmp
cld
decb
and
adc
cltd
adc
clc
insl
out
fmull
cli
mov
cmp
cmpsb
je
insl
addr16
jno
or
jp
std
mov
aaa
xchg
test
scas
fisubrl
or
out
mov
jp
cmp
pop
adc
mov
add
jo
inc
xchg
jmp
jle
iret
je
and
mov
in
mov
pop
inc
imul
out
push
mov
push
mov
xchg
mov
xor
xchg
stos
push
outsb
and
fcmovnb
mov
inc
pop
loopne
and
xor
loop
add
mov
mov
jae
into
arpl
push
and
push
push
pop
int3
dec
xchg
cmpsb
aad
sti
imul
and
subl
fadds
gs
jno
dec
xchg
hlt
push
lds
imul
jo
test
call
imul
xor
jge
aas
sbb
cmp
lods
daa
sbb
xor
arpl
sub
int3
add
push
ja
mov
nop
aaa
mov
xchg
push
jno
js
decb
outsl
repnz
out
mov
cmpsb
pop
arpl
je
jbe
xor
lret
repz
shll
xchg
hlt
in
test
adc
cmp
fbstp
movsb
sub
je
cmp
popa
jb
adcl
xchg
dec
lea
icebp
ss
adc
aam
cmc
xchg
mov
les
fstpl
sahf
ja
repz
adc
data16
xor
push
lock
adc
sub
inc
fwait
adc
jge
xchg
and
lock
repz
stos
mov
lret
and
loop
inc
or
pop
push
xor
mov
icebp
fmulp
fcmovne
mov
jle
out
xor
pop
mov
push
add
stos
sub
fiaddl
call
add
pop
cmp
fwait
mov
xor
mov
mov
ja
cmp
jl
inc
adc
cmp
loope
jno
mov
add
xchg
push
inc
add
pop
adc
cmp
shll
mov
push
outsl
sub
or
mov
sarl
jp
pop
adc
inc
mov
mov
jg
pop
or
sbb
js
adc
sub
jl
sbb
and
push
push
icebp
inc
sarb
decb
adc
shrl
orl
cmp
push
jns
nop
js
pop
mov
jp
and
orl
and
add
sbb
lahf
dec
jecxz
adc
cmpsl
out
jle
in
sbb
ja
leave
jmp
dec
popf
rcrb
jns
rolb
retw
test
mov
lret
test
or
dec
scas
nop
enter
in
nop
add
inc
xor
mov
mov
jg
cli
aas
out
push
mov
and
push
cld
push
popf
into
push
mov
std
pop
loope
negl
pushl
lret
sub
pushf
negl
scas
rcr
mov
jge
mov
pop
and
shl
dec
pop
leave
pop
jmp
mov
fimuls
ret
movsl
push
pop
dec
push
imul
xchg
inc
imul
cmp
or
push
insb
aad
test
sbb
jl
xchg
data16
mov
jns
jne
pop
jns
pop
adc
add
mov
push
pop
xchg
dec
pop
pop
mov
bnd
test
sahf
push
loope
inc
dec
scas
ss
sbb
gs
shlb
cwtl
mov
xchg
jno
stc
inc
dec
xchg
mov
jae
test
nop
push
sbb
in
mov
push
out
or
sbb
xor
cwtl
jg
push
sbb
aaa
subl
mov
fcomp
mov
mov
negl
and
ret
jnp
int3
xchg
stos
int
add
pushf
jp
ljmp
sbb
pop
push
mov
rcrl
inc
or
pop
dec
jno
adc
and
and
push
jg
mov
pushf
mov
pop
das
scas
cltd
mov
add
arpl
push
adc
arpl
fmull
pop
sub
daa
pop
enter
mov
inc
jbe
adc
add
add
jne
ljmp
ss
fmull
insb
dec
ret
icebp
test
outsb
mov
pop
out
lods
mov
jp
add
push
fisttpll
push
mov
dec
push
in
push
je
pop
cmpsl
xor
mov
pop
xor
ficoms
stos
add
xlat
cmp
xchg
add
jecxz
rclb
mov
pop
sub
add
test
xor
inc
xchg
xor
sti
ficoml
xchg
ljmp
es
and
fsubr
mov
sbb
out
repz
stos
hlt
jno
inc
inc
push
pop
outsl
fmuls
or
pop
test
dec
stos
jnp
dec
and
or
shl
inc
mov
add
stc
cmp
mov
std
xchg
mov
push
aad
shrl
jmp
sub
gs
jecxz
insb
aam
push
mov
pop
mov
push
mov
mov
in
jae
mov
imul
adcb
jb
lea
sbbl
in
add
xchg
jbe
pop
cmp
std
dec
xor
mov
pop
sub
fadds
leave
in
jle
pop
mov
inc
jo
nop
mov
xorb
lds
lods
inc
in
mov
leave
loop
rcrb
ret
arpl
loope
jo
ljmp
pop
fsts
out
popa
push
push
out
jmp
xor
sbb
pop
jbe
int
leave
dec
lods
pop
xor
cmpsb
fcoml
jle
cmp
rcrb
mov
ret
cltd
bound
pop
mov
jnp
jbe
push
das
int
mov
lret
jp
out
or
insl
bound
icebp
inc
ret
popf
inc
int3
sbb
dec
or
mov
aad
xchg
xchg
push
push
fs
lcall
adc
mov
lret
adc
cmpsb
mov
int3
or
mov
push
jb
lret
xchg
dec
xor
jp
aad
shlb
movsb
jp
out
leave
sbb
cmpsb
cltd
adc
ss
aad
sbb
xor
mov
mov
out
adc
cmp
jno
fmuls
mov
sti
jns
cmp
and
mov
lret
and
lea
movsb
push
cmp
das
ret
push
inc
or
fsts
or
mov
push
into
add
into
mov
cmp
mov
xor
mov
sti
pop
sbb
mov
mov
push
mov
imul
cmp
hlt
lret
push
xchg
mov
pop
movsb
mov
into
xchg
mov
mov
loopne
xor
add
pusha
mov
mov
shrb
pushf
push
shr
sub
mov
iret
movsb
push
mov
sub
loope
inc
or
push
sbb
xchg
frstor
sbbl
jecxz
and
lahf
adc
and
out
xchg
xchg
test
xchg
test
add
pushf
loope
jg
inc
add
call
sub
data16
test
or
sti
in
mov
adc
pop
gs
cmpb
xchg
lods
xor
dec
leave
aas
scas
pop
lds
push
mov
xchg
cmp
mov
enter
test
xor
test
jmp
in
enter
out
pop
push
shrl
pushf
mov
es
dec
push
sbb
jp
dec
jmp
scas
and
xchg
outsb
pavgb
cmp
pusha
int
cmp
or
repz
sub
dec
push
pusha
push
pop
scas
mov
mov
push
mov
ret
addr16
cmpsb
inc
hlt
lret
mov
xchg
sbb
fsubp
and
jns
test
add
test
push
sbb
outsb
xchg
adc
enter
mov
aas
in
xor
xchg
gs
insb
dec
pop
dec
xchg
gs
inc
movsb
xchg
fiadds
mov
es
aad
icebp
cmp
cmpsb
sub
scas
add
sub
cltd
jecxz
cmp
pop
jae
pushf
jg
aad
addb
ret
scas
and
pop
mov
xchg
repz
add
scas
int3
xchg
lds
int
icebp
rorl
hlt
repnz
mov
xchg
lea
pop
and
jnp
insl
mov
shll
mov
test
cmp
xchg
cmc
out
cmc
xor
dec
es
aad
ja
xchg
stos
cld
mov
imul
std
mulb
mov
mov
into
daa
int
push
mov
sbb
inc
pop
xor
cmpsb
jle
pushl
add
aam
pop
jg
pushf
push
aaa
popa
daa
shll
push
dec
sbb
call
out
xor
lds
or
cmp
int3
sbb
jb
data16
lds
push
sub
test
adc
pop
mov
nop
clc
sub
sub
add
push
psraw
icebp
fcomps
lods
leave
pop
into
insl
inc
lret
ret
repnz
dec
dec
add
notb
inc
inc
data16
pop
lahf
loope
into
push
push
mov
pop
mov
leave
test
ret
sbb
pop
and
cmp
mov
dec
xchg
addr16
xchg
in
mov
arpl
xchg
cmc
jecxz
or
sbb
imul
pop
xchg
sbbb
ret
gs
jmp
adc
push
int3
dec
outsb
idivl
inc
insl
jo
and
stc
mov
mov
lods
mov
sub
fiadds
jmp
popf
cmc
ret
int3
mov
movsb
and
dec
pushl
mov
daa
jbe
cmp
sbb
arpl
mov
scas
aas
jb
push
jl
mov
inc
push
cmp
jmp
iret
mov
neg
cwtl
aas
pop
sbb
mov
clc
cltd
xchg
push
inc
js
call
outsb
es
aam
cmpb
dec
mov
sub
sti
jle
pusha
shrd
shll
mov
adcl
xchg
pop
pushf
or
shl
js
push
sbb
push
icebp
xor
mov
adc
call
loopne
imul
push
adc
jae
adc
or
xor
or
jo
lcall
ffree
xchg
ficompl
xchg
loope
ljmp
xchg
jge
or
mov
pop
shr
movsl
xor
outsl
pop
xchg
push
push
or
call
idiv
js
push
popf
jg
adc
dec
cld
or
sti
imul
popf
inc
dec
push
repz
roll
jne
adc
call
lcall
das
ljmp
mov
clc
ffreep
mov
scas
fbstp
dec
add
xchg
scas
xor
mov
jmp
xor
daa
sbb
push
push
mov
stc
push
pop
dec
das
add
into
jmp
jmp
xor
sahf
mov
cmc
mov
sahf
loope
addb
pop
pop
push
popf
inc
sub
imul
jle
sbbb
and
lods
mov
sbb
mov
and
mov
push
rcrl
cmpsl
dec
fmull
arpl
push
lcall
cmpsb
jg
and
jmp
ret
cwtl
std
out
or
dec
add
int3
sbb
inc
xor
or
sub
jp
mov
mov
ret
sub
js
sub
mov
je
in
sub
sbb
mov
dec
cmp
movsl
adc
mov
lea
lret
loopne
xlat
jne
aas
movsl
add
fstl
idivl
cmp
arpl
dec
push
fs
inc
xchg
cmp
xchg
loop
xchg
add
add
cmc
stos
push
mov
xchg
cmp
mov
filds
cmp
in
out
sub
mov
and
cld
lds
shlb
mov
inc
bound
out
jmp
int3
js
pop
fistps
and
dec
sbb
in
push
xchg
shlb
pop
jne
jmp
inc
loopne
or
push
xor
sbb
pop
mov
lods
ljmp
sti
mov
dec
pop
int3
fisubrs
push
mov
inc
ja
ds
icebp
test
xchg
xchg
stos
lret
xor
cmp
int
sti
rolb
and
inc
mov
add
jbe
xor
push
xchg
stos
lock
inc
sub
and
std
dec
cs
mov
dec
jle
outsl
loope
shll
mov
pop
addr16
lods
test
push
idivb
cmp
inc
xor
add
cmpsb
test
movsb
dec
cltd
xchg
je
mov
lea
mov
or
xchg
lods
mov
and
repz
inc
sti
adc
aad
jbe
xor
mov
ss
mov
rcll
mov
xchg
lods
movsb
ret
stos
cmpsb
insb
and
cmp
cs
push
loope
xchg
movsb
test
pop
inc
sub
lea
sub
cltd
ljmp
popf
in
xchg
ret
xor
pop
mov
sahf
xchg
xor
cmp
pushf
dec
xor
data16
adc
inc
sub
and
sti
dec
out
xchg
jne
out
sub
push
add
pop
cmp
push
fimuls
iret
mov
xor
mov
xchg
mov
xchg
cmp
gs
in
mov
xchg
imul
sub
pop
mov
lock
or
scas
sbb
adc
mov
cmp
mov
call
arpl
mov
jno
shrl
jmp
dec
popf
movsl
ficompl
fs
sbb
lea
fidivrl
or
dec
decl
push
dec
test
mov
popa
aad
test
cmpsl
lods
out
pop
gs
repnz
leave
aam
leave
push
lock
arpl
mov
mov
loopne
add
iret
inc
or
pop
fwait
addr16
jae
mov
xchg
fs
addb
sbbl
gs
cmpsl
mov
arpl
jge
fs
xorb
aaa
pop
fiaddl
dec
pop
jns
fs
mov
sub
jae
mov
faddl
push
cld
data16
out
mov
mov
lcall
cmp
fiaddl
out
jae
repnz
adc
add
notb
xor
mov
or
outsb
dec
or
daa
fistl
inc
add
mov
test
scas
shrl
rcll
imul
inc
dec
nop
push
inc
je
jne
pop
mov
push
mov
cmp
push
mov
icebp
and
test
pop
sbb
dec
pop
push
mov
aad
stc
loop
jno
test
pop
cs
cmpsb
add
in
mov
adc
ret
cmc
dec
xor
inc
loop
mov
pop
test
test
fistpl
sbbl
repnz
das
in
outsl
jb
cmp
inc
xor
cmp
scas
movl
je
lods
mov
mov
xor
mov
push
cli
jnp
jnp
adc
sub
mov
jo
mov
xor
aas
cld
jae
insb
or
fcompl
insl
mov
mov
mov
jecxz
mov
adc
add
stc
jne
insl
lret
rcrb
cmp
out
or
add
pop
jle
call
xor
cmp
data16
xchg
mov
flds
mov
test
roll
sub
pop
mov
xchg
jb
cmp
es
shlb
pop
mov
int3
push
cmpb
in
pop
insb
inc
mov
pop
xor
insb
xlat
xchg
enter
faddl
lret
fs
sbbb
push
sbb
or
add
repnz
push
aam
mov
shll
clc
dec
lods
mov
inc
dec
les
out
fcmovnu
aaa
sbb
arpl
lea
push
or
sub
fdivrp
insb
jo
or
jle
lret
push
popf
out
jnp
adc
adcb
aaa
pop
testl
fnstenv
jo
insb
xlat
cmp
xor
sbb
dec
leave
mov
and
add
pop
push
stos
ss
xor
nop
pop
fildl
test
mov
rolb
push
xor
xchg
xchg
mov
push
iret
aaa
and
scas
push
std
fstpt
fadds
inc
cld
push
mov
fwait
jmp
daa
xchg
or
add
sbb
sbb
add
push
shr
push
cmp
in
add
pcmpeqd
push
sbb
int
mov
and
inc
mov
xchg
xor
int3
push
cmp
shr
jg
mov
mov
scas
xor
or
add
and
cs
and
ss
inc
add
lea
mov
xchg
pusha
mov
mov
jae
and
pop
jecxz
lods
test
lods
adcb
xorb
mov
ret
test
mov
pop
mov
ljmp
xlat
ljmp
aas
add
jae
test
ljmp
stos
movsb
sub
dec
push
sbb
jae
std
xchg
cs
ljmp
push
loop
mov
aaa
pushf
es
fists
xlat
rcrb
or
divb
pop
imul
or
cmp
out
mov
fnstsw
sbb
or
leave
jmp
mov
sub
loop
sarl
mov
mov
push
xor
jo
mov
rcrl
loope
add
clc
xchg
mov
mov
inc
les
mov
add
jp
inc
mov
rclb
jle
jmp
and
adc
imul
xor
mov
push
xchg
rol
into
push
mov
daa
mov
xchg
orb
xchg
mov
inc
fstl
ret
mov
xchg
inc
push
cs
adc
xor
push
dec
insb
shrl
nop
mov
push
cmp
adc
outsb
inc
inc
mov
stos
push
mov
add
pop
or
add
in
test
sbb
popf
cmp
shll
popf
adc
inc
add
xorl
xchg
popa
and
les
push
imul
xor
ja
lcall
ret
call
popa
pop
out
xlat
jae
mov
popf
lcall
inc
test
xchg
and
inc
stos
or
pushf
arpl
dec
sub
and
les
mov
dec
sub
mov
hlt
and
ds
sbb
cmpsb
push
add
add
cs
arpl
xchg
and
sub
cmp
cmpsb
insl
xor
mov
roll
mov
add
xchg
fstpl
mov
mov
andl
pop
mov
out
jl
loope
and
lock
xor
sub
and
out
ljmp
imul
dec
mov
ret
cli
mov
out
cltd
imul
mov
add
fcomip
cmp
jno
orb
push
shlb
xor
xor
out
cmp
sahf
ljmp
adc
insb
testb
dec
jb
adc
mov
fistps
lods
mov
jg
rclb
adc
testl
pop
cmc
rcr
jecxz
push
mov
ret
aas
xor
sub
fdivrp
sub
mov
cli
mov
mov
push
stc
test
out
in
push
mov
add
insl
mov
out
mov
sub
jl
ficoml
fdivrl
ss
repnz
mov
add
iret
add
mov
mov
shll
jno
mov
out
jmp
lods
pop
pop
or
ficoms
les
inc
jl
ljmp
lods
loop
xor
push
les
push
fxch
imul
cmp
mov
push
imul
in
in
lods
stos
hlt
movsb
push
lahf
sar
clc
mov
fisubrl
mov
popf
cmp
and
lock
popa
rcl
adc
sub
cmp
sub
xchg
or
pushf
mov
lahf
les
in
mov
popf
in
nop
cmp
pop
mov
adc
sub
int
pop
dec
data16
sub
jb
lock
stos
jl
xchg
pop
or
pop
in
push
cmp
mov
push
mov
fmuls
jnp
push
pop
sub
or
and
scas
sbb
jge
inc
push
stos
cmp
or
mov
psrld
iret
scas
cmp
adc
mov
mov
push
push
pop
cmpsl
mov
mov
iret
jg
lods
lret
fwait
or
jp
mov
out
lret
jbe
push
dec
jnp
or
dec
inc
mov
es
mov
lcall
jg
movsl
shr
jbe
les
sbb
imul
add
orl
xor
add
repnz
int3
in
aaa
and
pop
sbb
test
mov
pop
push
lahf
xchg
imul
imul
mov
ret
and
in
push
in
cwtl
adc
add
fiaddl
push
movsl
dec
out
ret
cmpl
scas
pop
or
shll
xor
push
lea
lea
stos
ret
or
push
rep
sub
aaa
push
cmp
mov
dec
or
xchg
inc
insl
rcrl
aam
mov
push
mov
jge
or
jg
jo
lcall
jle
or
jb
sub
std
or
ljmp
mov
scas
mov
mov
or
mov
mov
lds
mov
pop
inc
or
insl
lock
mov
je
and
das
pop
mov
je
insb
lods
fdivrp
frstor
popf
jnp
mov
mov
sbb
pop
ret
sbb
rcrl
or
push
mov
inc
add
in
bound
mov
inc
jnp
stos
pushf
pusha
aaa
iret
mov
and
or
or
cmp
jb
mov
xlat
rcll
sub
jb
dec
lock
lret
pop
test
fscale
and
lret
cmp
pusha
cld
add
in
iret
pop
add
mov
pop
add
loopne,pt
lds
jo
aaa
xor
mov
aam
shll
fdiv
mov
scas
or
fstl
iret
cmpsb
aam
mov
xor
and
jno
adc
mov
mov
fstpl
int3
fisubrl
xchg
jmp
pop
out
cld
adc
std
cwtl
lret
aaa
inc
xor
adc
cmp
push
aas
sbb
lock
xor
cmp
dec
or
add
shll
or
inc
and
pop
mov
aas
lds
mov
ror
loop
push
bound
imul
fs
xchg
xchg
add
imull
pop
mov
xchg
add
gs
fwait
out
jb
jp
outsb
and
dec
dec
jns
sbb
add
add
mov
lods
stc
in
jmp
jne
outsb
in
cmp
ret
rcr
daa
or
mov
and
repz
lret
das
icebp
arpl
push
out
xchg
mov
ss
lret
daa
xlat
ljmp
iret
mov
mov
mov
push
dec
scas
add
lds
cmpsl
xchg
sub
mov
sub
jle
mov
xchg
cmp
stos
push
imul
cli
nop
stos
push
jne
push
mov
mov
and
fmuls
dec
das
jno
loop
int3
es
add
xchg
adc
decl
fdivs
dec
sbb
icebp
pop
dec
js
jae
cmp
sub
int
or
aam
mov
out
or
cld
sub
in
das
fwait
xor
imul
push
loopne
push
sub
or
dec
ret
pop
or
jmp
inc
fstenv
out
push
enter
cmpsb
daa
and
movsb
sub
popa
stos
lds
mov
enter
and
mov
mov
xor
add
gs
repz
loope
mov
mov
sarb
lds
add
in
mov
adc
and
repz
scas
mov
jl
bsf
xchg
out
mov
dec
sbb
mov
inc
je
rcrl
iret
inc
call
push
adc
mov
std
jno
ret
pop
sub
aas
pop
cmc
cmp
in
int3
inc
cwtl
roll
inc
fidivrs
mov
fsubp
jne
mov
pop
in
dec
fnstsw
aas
xchg
int3
cwtl
es
mov
pop
out
mov
sub
and
inc
cld
je
jns
pop
shrl
mov
scas
es
mov
mov
mov
pop
pop
cltd
int
lret
push
cltd
stos
aas
fidivrl
cmp
daa
faddp
inc
lods
das
rorb
mov
movsb
addr16
sbb
add
mov
aaa
mov
push
test
cmp
rcrl
push
sbb
cmp
mov
ss
push
cmpsl
insb
or
paddd
mov
out
sbb
inc
and
xchg
add
pop
rcrl
cli
mov
pop
fnstcw
lds
pop
dec
ds
mov
xor
xor
inc
call
jmp
xchg
and
inc
aaa
scas
dec
out
icebp
push
xchg
hlt
sahf
subl
mov
gs
mov
mov
mov
aaa
and
daa
pop
pushaw
jnp
mov
mov
or
adc
cmp
cmc
xlat
sbbb
enter
sbbb
stos
mov
cmp
sbb
shlb
push
cmc
in
fildll
lods
clc
pop
adc
and
lods
lods
fs
jl
mov
aaa
stc
hlt
out
jmp
sub
push
mov
scas
xchg
sbb
adc
cmp
clc
aam
cld
or
lcall
leave
push
dec
and
xor
cmpsb
and
adc
lock
mov
adc
adc
or
es
psubb
hlt
outsl
clc
in
icebp
sub
out
repz
je
inc
std
mov
mov
mov
mov
xchg
pop
cmp
add
enter
leave
lock
movsb
lret
inc
push
movsl
jne
icebp
dec
dec
in
push
mov
mov
insl
inc
leave
jecxz
loop
repnz
push
bswap
or
test
push
into
fdivrs
cmovnp
fisubrs
dec
inc
popl
or
push
jb
push
lahf
mov
mov
pusha
mov
in
insb
test
adc
push
es
or
aas
in
cmpsw
cmp
dec
pusha
adc
push
dec
cmp
js
stos
psrad
xor
test
or
ljmp
mov
hlt
dec
test
mov
dec
or
mov
stc
pop
xor
sbb
xchg
add
faddp
pop
xchg
or
sbb
ljmp
mov
test
rcr
dec
xchg
shl
fnstsw
pop
xor
notb
pop
xchg
and
imul
push
ja
cmp
ljmp
add
mov
inc
xor
aaa
dec
sub
or
xchg
icebp
xor
hlt
cwtl
int
fsubl
mov
popl
into
dec
sbb
inc
outsl
aad
arpl
jg
insl
arpl
lcall
shlb
or
data16
inc
lods
cmp
sub
jns
scas
aad
mov
aad
mov
mov
call
sub
fcmovbe
popf
mov
mov
ss
sbb
xor
das
pop
jecxz
iret
inc
mov
cltd
cmp
out
cli
adc
lret
fwait
in
pusha
outsl
pop
jnp
pop
in
sbb
pop
pop
or
ret
and
xor
dec
adc
pop
stc
shlb
or
pop
test
lret
inc
std
lods
pop
out
test
xchg
mov
xchg
int
roll
xchg
or
push
add
xor
sub
mov
mov
and
jno
inc
test
sbb
lahf
xor
mov
xor
xor
shrb
sarb
movsb
cmp
sbb
mov
dec
std
imul
inc
rclb
imul
inc
xchg
lock
xchg
xchg
xor
push
or
mov
lds
and
test
fildll
rcll
popa
push
mov
outsb
push
jmp
dec
out
or
int3
mov
in
push
xor
xchg
mov
ror
cld
enter
push
nop
ss
scas
mov
mov
or
insl
inc
cmpsb
ds
xor
int3
mov
ja
sbb
loopne
add
fidivl
lods
mov
sbb
push
xchg
sub
mov
rorb
mov
movsl
pop
xor
mov
pop
jae
je
xor
fildl
adc
push
ja
fiadds
insl
mov
jno
stc
fs
lahf
push
mov
mov
jmp
cld
arpl
or
jno
in
mull
adc
mov
rcrb
int3
js
arpl
jb
insb
pop
xor
dec
insb
daa
push
daa
pop
jo
rorb
sahf
pushf
pop
sbb
mov
enter
sub
mov
aas
jp
lret
mov
push
lods
or
jecxz
xchg
jge
mov
out
pop
push
in
in
divl
mov
xor
stos
sbb
insl
and
pop
cs
ret
mov
test
movsb
lret
push
push
pusha
push
xorb
test
inc
inc
jecxz
mov
pop
sub
xchg
fld
xor
repz
push
lock
jae
push
mov
frstor
mov
mov
mov
xchg
imul
xor
outsb
out
mov
push
mov
sub
jae
or
or
jmp
mov
in
ficoml
int
sub
sbb
xchg
inc
cmp
dec
hlt
add
pop
sti
cmp
xor
mov
leave
add
pop
mov
sbb
pop
aad
mov
inc
outsb
ret
jbe
in
push
out
hlt
sub
scas
inc
xor
fdivrs
movsl
fs
adc
inc
sub
pop
dec
jecxz
cli
mov
andb
testl
imul
lock
and
mov
sti
push
lret
push
out
sub
std
push
je
out
arpl
push
fwait
adc
fnstenv
and
outsb
mov
mov
pop
mov
gs
inc
or
out
aad
shufps
arpl
leave
adc
divb
lahf
cmp
dec
pushf
cmc
mov
xchg
inc
sbb
add
pop
jge
mov
decb
movsl
popa
jb
daa
push
jns
cmpsl
jno
js
xchg
repz
add
test
bndldx
dec
add
sarb
sti
jp
xchg
adc
mov
popf
sub
cwtl
data16
lea
sarb
xlat
lret
pop
fildll
call
push
and
ucomiss
and
inc
xchg
lods
sbb
xor
int3
incb
int
xlat
int
je
clc
ljmp
push
xchg
sub
mov
outsb
adc
test
or
push
push
add
ds
hlt
xchg
fsubrs
add
outsb
and
repnz
test
mov
fiaddl
leave
in
mov
int3
jb
jp
cmp
xor
jno
bound
mov
rorb
and
subl
dec
imul
adc
push
pop
mov
call
add
test
movsl
insl
and
ja
dec
mov
repnz
cmp
loope
loop
pop
repz
xchg
fwait
jns
popa
ss
stos
in
mov
cmpsb
clc
adc
push
mov
mov
mov
aas
ss
mov
mov
mov
outsl
mov
stc
inc
jecxz
sbb
insb
add
aaa
sbb
pop
xchg
out
xchg
cld
aad
mov
popl
sbb
add
sar
out
or
lret
dec
push
std
es
std
inc
xchg
push
test
out
xchg
push
push
xchg
xlat
lcall
fdivr
pop
jg
imul
jle
in
fs
xor
cmpb
mov
push
cld
out
ret
or
add
bound
addr16
mov
xlat
imul
mov
sti
mov
loopne
rolb
sub
stc
xor
push
mov
fldenv
decb
add
ss
in
xor
arpl
dec
pop
mov
xchg
ljmp
cmpsb
loope
jne
fdivl
movb
stos
sub
insb
into
and
rcrw
cmpl
ss
cmp
icebp
outsl
insl
mov
fbstp
stos
iret
and
xchg
clc
nop
stc
dec
movsl
out
cmpsb
jne
test
sub
clc
and
mov
loope
xchg
fwait
inc
xchg
pop
sbb
daa
test
push
roll
out
push
ss
fmul
jns
sub
push
cwtl
jle
jge
xchg
push
mov
push
shrl
sub
or
mov
mov
push
cmpsb
callw
mov
adc
xchg
fmulp
adc
stos
jae
or
int3
mov
jno
pop
mov
ss
sti
mov
or
pop
in
out
sbb
icebp
int
mov
movsl
or
mov
rcr
daa
lds
bound
adc
aam
sbb
xchg
dec
fs
ds
mov
lock
dec
jecxz
push
fsubs
sbb
pop
push
dec
jmp
xchg
sbb
icebp
in
sbb
sub
mov
icebp
sbb
out
jecxz
shll
scas
mov
pusha
mov
rol
test
into
ficoml
jbe
subb
inc
nop
push
pop
fwait
mov
sub
push
in
jne
out
mov
mov
mov
mov
popf
daa
scas
outsl
in
sub
fistl
xchg
arpl
hlt
aam
or
mov
mov
and
add
push
mov
test
repnz
push
jge
add
in
jbe
hlt
in
dec
xlat
loope
js
je
nop
pop
leave
lock
push
xchg
jnp
stos
push
shl
test
jne
push
adc
cmp
push
fcmove
aad
out
cmp
cmp
ss
and
test
pop
mov
adc
cmp
xchg
int3
and
mov
lcall
pop
lds
rcrl
cmp
mov
popa
arpl
lahf
mov
xchg
insl
pop
sqrtps
mov
xor
mov
xor
sub
jmp
and
dec
out
sub
xchg
xor
shrl
and
mov
cld
xchg
repz
gs
lods
mov
test
loopne
jl
cltd
jo
andl
ljmp
lahf
lahf
mov
imul
fildll
les
inc
push
sub
push
iret
or
pop
nop
aaa
adc
sub
out
mov
fnstsw
pop
mov
pop
lcall
lods
daa
xchg
scas
idivb
cmp
push
mov
xchg
mov
movsb
pop
xchg
push
xlat
stos
cmp
mov
push
jmp
add
mov
mov
stc
popl
pop
repz
adcb
pop
jl
push
push
cmp
mov
push
mov
jnp
sbbb
mov
popf
xor
aaa
jmp
lcall
scas
or
mov
cmp
and
adc
into
dec
fistpll
out
cmpsl
jmp
xchg
mov
and
push
cli
jp
insb
cwtl
inc
test
mov
fldcw
cmp
cmp
pop
cwtl
push
sub
pop
imul
call
cmp
test
loope
pop
or
jno
adc
xchg
psubq
fidivrs
xchg
jl
add
in
mov
inc
mov
jnp
push
and
mov
inc
mov
popl
mov
adc
or
cmp
dec
jecxz
repnz
lahf
test
xor
in
jne
out
clc
mov
lcall
jbe
shrl
fdivrl
xor
sub
fistpll
notb
sahf
mov
out
orl
inc
fwait
add
jae
add
lcall
call
inc
movsb
sub
sub
out
jmp
aaa
test
pop
mov
out
pusha
dec
lock
pop
aad
pop
fstps
sahf
sahf
addr16
fdiv
loop
pop
and
ret
and
push
add
shr
aas
mov
dec
int
and
dec
pop
xchg
and
ficoml
inc
xor
imul
jbe
add
or
loop
sarl
pop
icebp
roll
stos
cmpl
leave
dec
dec
fldt
outsb
add
xchg
xchg
xor
jmp
test
pop
or
mov
mov
outsb
scas
test
adc
shrb
cli
arpl
mov
push
inc
out
dec
mov
hlt
inc
xchg
lds
jnp
in
inc
popa
inc
add
enter
out
sbb
xchg
cltd
in
xor
movsl
mov
or
inc
int
lret
lods
das
cltd
leave
aam
dec
movsb
mov
test
mov
pushf
int
pop
sbb
cmpsl
rorb
into
mov
and
jae
mov
ss
pop
repz
cli
xor
mov
mov
out
mov
out
inc
mov
lods
push
xchg
jnp
mov
repnz
sub
jns
dec
popl
push
popf
mov
dec
add
push
fcmovb
sbb
jb
rcrl
mov
or
scas
loope
dec
mov
stos
cs
inc
lods
iret
add
hlt
xchg
push
roll
je
xlat
xchg
test
ret
dec
jp
sub
fmull
and
mov
shrb
mov
cmp
dec
jle
dec
xchg
xchg
arpl
mov
mov
sub
xchg
adc
push
icebp
sub
or
xchg
mov
cmpsl
into
inc
aam
sub
fists
jo
mov
or
jnp
arpl
dec
shll
xorl
adc
mov
in
add
enter
mov
dec
cmp
cmc
mov
jl
outsb
mov
mov
mov
aas
jl
cld
sbbb
mov
hlt
adc
movsb
pusha
bnd
lods
aaa
xor
xchg
mov
out
nop
cmp
das
rcrb
sub
sbb
cmc
sub
mov
sub
fsubp
aad
fmuls
push
mov
ret
xchg
jae
mov
cmp
nop
aad
push
aas
daa
clc
das
ret
mov
movsl
inc
test
xchg
push
lcall
add
scas
or
fidivrl
lcall
pop
jo
adc
push
popf
ljmp
push
cmpsl
fcoms
push
int
cmp
jp
or
ret
inc
lret
sub
xor
push
out
dec
mov
jne
clc
jae
repz
jl
mov
pop
fdivrl
mov
lret
insb
push
sarl
loopne
sub
and
push
rcrl
jmp
sbbb
jge
xchg
daa
test
scas
cmpsb
dec
js
out
mov
mov
jno
cwtl
fistl
xchg
addl
out
popa
push
dec
aaa
xlat
push
sub
insb
test
or
and
ret
iret
inc
imul
push
std
inc
or
mov
fs
mov
sub
dec
pop
nop
adc
test
mov
dec
aam
lods
mov
inc
arpl
rcll
jge
ret
sub
pop
dec
call
and
sbb
sbb
lea
ljmp
sahf
lret
sbbb
xchg
mov
lods
sub
into
int
pop
out
cmp
test
dec
ret
aam
sahf
lea
pop
jns
jne
and
fldenv
repnz
cmp
enter
mov
adc
xor
pop
int3
imul
sub
push
aam
nop
xchg
xchg
xor
push
in
dec
xchg
in
stos
repnz
aam
pop
cmp
and
loope
push
mov
sarb
in
inc
in
in
lock
bound
scas
push
mov
ficomps
xchg
call
repnz
add
imul
cmpsl
adc
or
lds
in
push
lods
pusha
cli
shlb
jmp
cmpsl
sbb
xor
jbe
mov
mov
adc
xchg
aaa
cmp
rcrl
les
sbbl
dec
pop
test
lret
dec
ja
orb
pop
pop
mov
inc
mov
test
pop
stos
leave
test
adc
loopne
bound
test
cli
jae
mov
sbb
jge
out
daa
jl
data16
into
sub
hlt
sbb
dec
pop
or
es
mov
inc
push
jle
arpl
push
sbb
test
or
idivl
sbb
outsl
pop
stos
adc
lea
lret
cltd
in
shlb
pop
and
ja
mov
push
int
xor
mov
dec
fdiv
jo
and
repz
xchg
add
inc
mov
arpl
sbb
xchg
cmc
insl
fcmove
jp
scas
sbb
nop
sub
xchg
lods
mov
inc
enter
stos
ja
sbb
dec
scas
std
shlb
sahf
pop
cli
repz
rorb
mov
stc
es
pop
dec
ret
xchg
sub
xchg
test
out
and
lods
fs
js
in
jb
repz
lods
push
call
jp
inc
aad
mov
inc
jbe
repz
cmp
jnp
or
outsl
orl
jo
sub
icebp
push
call
ljmp
orl
pop
cmp
add
jo
cltd
in
mov
sbb
call
jl
xchg
add
sub
push
mov
inc
xlat
pusha
cmpl
push
add
adc
bound
lods
cs
push
mov
sbb
and
enter
ljmp
test
daa
jb
nop
ret
sbb
ficoms
rcrb
lahf
addb
cmp
sbb
adc
rcr
pushl
pop
scas
add
imul
jo
loop
call
mov
xor
jno
add
mov
cs
xchg
fwait
loope
push
cltd
cltd
inc
mov
xchg
cmc
mov
xor
cwtl
pop
cmp
pushf
dec
pop
sub
adc
lahf
stc
inc
and
fldenv
cmp
dec
mov
adc
cltd
jbe
push
fscale
les
inc
cwtl
add
inc
inc
xchg
insl
inc
xchg
loopne
xchg
jmp
cmpsb
push
test
mov
lock
pushf
xchg
lret
mov
stos
mov
mov
xchg
add
add
mov
mov
jle
sub
jecxz
js
es
ret
adc
sub
fsts
fldl
cmpsl
pop
fdivrs
movsl
pop
ret
out
dec
outsb
lock
pusha
je
cmp
pusha
test
test
pop
add
pushf
mov
dec
loop
add
jno
xchg
pop
loopne
arpl
sbb
orl
dec
lret
dec
push
adc
in
fildll
enter
insb
jge
push
inc
lds
dec
dec
pop
mov
mov
xor
rorb
or
cmp
fcmovne
xchg
sbb
jge
xchg
push
cs
fdivrl
pop
push
fildl
dec
xchg
stos
or
lods
ficompl
xchg
mov
int
ljmp
rorb
insl
dec
cs
rorl
faddl
inc
mov
cltd
sub
ja
mov
and
cmp
lods
mov
push
adc
mov
push
push
orb
mov
aam
xchg
pop
incb
scas
mov
aad
cmp
jge
icebp
ffree
cmp
xchg
cld
mov
lcall
mov
dec
sbb
into
bound
pop
scas
push
aam
mov
mov
pop
lods
push
sbb
push
out
push
popl
dec
insl
sbb
mov
jp
or
scas
adc
mov
adc
ljmp
clc
mov
mov
aam
add
ds
outsb
int
xor
ret
push
js
sub
sub
mov
in
subb
cmpxchg
xor
mov
inc
outsb
and
add
push
lock
pusha
xlat
pop
mov
decl
adc
jle
cltd
adcb
les
test
aam
test
mov
sarl
push
into
mov
xchg
imulb
or
or
mov
sub
enter
mov
add
loope
arpl
pop
icebp
repz
push
imul
adc
movsl
stc
or
clc
loope
scas
outsl
pusha
xor
pop
jg
sub
mov
cltd
jno
outsl
xchg
pop
pop
jle
inc
aas
cmp
ret
xchg
mov
jge
outsb
adc
inc
out
loopne
mov
adc
in
std
repnz
push
fidivrs
adc
add
mov
loop
test
mov
push
and
add
add
fwait
push
fisubrl
pop
fs
pop
mov
ret
outsl
rcrb
stos
dec
or
out
iret
stc
dec
mov
mov
inc
sti
lea
push
out
ss
cmp
add
push
sbb
jns
int
ror
and
or
subb
out
icebp
clc
push
addl
adc
test
jp
add
mov
dec
xchg
jge
test
sbb
pop
mov
xlat
cwtl
cwtl
leave
pusha
add
sub
push
nop
pop
jl
in
cmp
pop
jne
mov
adc
dec
aam
loop
or
mov
sub
ret
add
pop
arpl
pop
inc
lcall
idivb
cmpsb
call
push
dec
hlt
jo
add
add
stos
mov
sub
push
lods
test
dec
std
sub
mov
mov
test
scas
data16
mov
pop
lods
scas
jge
push
scas
jo
pop
xor
mov
cli
lea
popf
or
jae
enter
test
xor
xor
je
mov
inc
xchg
mov
nop
sub
cli
mov
idivl
sbb
push
ljmp
jo
lret
sbb
fwait
shrb
idivb
scas
xchg
cmp
xorb
adc
fisubrs
out
add
sbb
sbb
stc
ja
push
pop
pop
rorl
xor
add
sub
pop
and
mov
inc
dec
inc
sub
movsl
lods
xchg
cmpsl
rep
add
dec
or
pop
lea
sub
pop
inc
and
ljmp
inc
and
inc
cmp
sub
stos
jg
add
sub
mov
nop
mov
or
inc
mov
xor
in
lcall
sbb
lea
or
add
and
fsubrs
dec
inc
xor
xchg
push
aad
lret
push
ds
fcompl
lods
push
pop
xchg
or
int
cltd
in
dec
addl
rcll
outsb
jne
mov
ljmp
pop
sbb
xchg
stos
push
jp
pop
imul
loope
cli
mov
and
aam
test
jp
or
in
mov
sub
mov
das
inc
hlt
ret
sti
pop
push
push
imul
push
mov
in
mov
pop
repz
pusha
ja
fiadds
cmp
and
aad
mov
movsb
repz
lret
or
add
stc
fisubs
sbbb
dec
lea
test
push
sbb
dec
cwtl
dec
jg
mov
add
push
lds
xor
sub
jnp
dec
andl
stos
outsb
fnstcw
adc
aam
addb
aad
gs
test
pop
adc
ret
pop
jmp
into
loope
push
negl
sbb
xor
pop
mov
pusha
sahf
mov
adc
or
mov
pop
andb
stc
sub
jo
cmp
sub
xor
pop
scas
xchg
xchg
sahf
pop
std
inc
xchg
arpl
cmp
mov
push
add
pop
dec
jmp
fisttps
cmp
or
ret
out
dec
mov
add
xor
insl
jp
push
repz
pop
lahf
inc
fisttps
dec
lcall
cltd
mov
sti
mov
cmp
pushf
mov
cmp
pushf
pop
mov
xlat
and
sub
mov
xor
mov
dec
out
mov
in
or
dec
imul
cld
mov
xor
fiadds
or
rolb
sbb
imul
lods
mov
arpl
jl
adc
fdivrs
adc
andb
cmp
mov
ds
loope
ljmp
rcr
lcall
xor
adc
mov
nop
adc
sbb
inc
sbb
mov
cli
or
bound
and
dec
push
dec
mov
or
dec
inc
fstpt
subl
push
cld
popf
out
aas
sub
mov
cmp
cmp
into
adc
or
mov
sub
or
dec
lods
dec
lock
pop
mov
pop
icebp
fstps
sub
jnp
addr16
sub
lahf
or
xchg
imul
pushf
dec
ret
loope
std
imul
ds
scas
pop
jbe,pt
cmp
xorl
nop
iret
imul
mov
and
imul
cli
loope
push
pop
and
dec
push
inc
mov
fnstsw
fmuls
sarb
mov
popa
sarl
pop
or
jbe
pop
pop
fwait
jge
scas
int3
jo
leave
je
push
xor
cmc
adc
push
addr16
loopne
imul
imul
adc
mov
fbstp
mov
lret
sub
push
and
mov
cmpsb
push
xchg
test
shrb
cmp
mov
cmp
xor
mov
leave
lods
or
stos
sbb
fisubrl
imul
jmp
mov
adc
in
cmp
aad
push
outsl
sbb
sti
dec
mov
pop
push
sahf
out
pop
or
add
sub
or
dec
imul
pop
cmpsl
outsl
mov
in
inc
push
mov
mov
or
jg
xchg
push
adc
inc
mov
xchg
mov
push
cmpsl
add
push
in
jmp
jb
popf
pushf
jae
or
pusha
div
mov
mov
jge
xor
jno
or
push
or
fimull
add
rolb
fisubrs
stc
pop
cld
movsb
xchg
test
mov
leave
or
rol
dec
mov
in
mov
outsb
lods
stos
or
popf
dec
xor
mov
mov
jg
add
push
dec
mov
aad
jns
jo
jg
in
daa
cmp
mov
sbb
cmovbe
in
rol
mov
nop
test
divl
pop
movsb
in
mov
mov
mov
ds
lret
jno
movsl
sub
dec
das
lods
stos
into
push
fnstsw
jns
adc
stos
jns
mov
cmpsb
lahf
push
sbb
pop
inc
lock
xlat
xlat
lret
fs
stc
xchg
push
fs
push
movsl
lods
in
loope
ret
repz
outsl
mov
jmp
dec
mov
stos
aad
outsl
cld
lret
cmpsl
sub
adc
les
fcompl
xchg
jne
cmp
mov
inc
push
bound
and
sbb
imul
jno
jp
mov
adc
adc
enter
or
cli
sti
adc
pop
jo
mov
clc
daa
mov
mov
shlb
adc
rolb
decl
iret
lock
cltd
test
jecxz
test
cmc
pushf
test
and
mov
into
mov
pop
and
jno
and
push
cld
adc
loope
xchg
cltd
lahf
dec
dec
cmp
and
mov
jle
shrl
fidivrl
frstor
mov
jle
sar
cli
in
cmp
sbbb
jne
and
add
push
xor
out
mov
pop
ret
bound
shlb
pop
xchg
xor
inc
loope
testl
loop
mov
jp
std
subb
data16
mov
jno
aad
sub
sub
jg
aam
mov
lcall
bound
jbe
ds
into
xchg
and
inc
aaa
fwait
mov
xor
stos
xchg
neg
out
out
xorb
push
fidivs
daa
cmp
xchg
shlb
in
jbe
mov
aam
cltd
pop
push
mov
xchg
sub
xchg
pop
xchg
test
pop
jecxz
and
push
nop
test
int
int3
jbe
cmpsl
dec
dec
daa
out
push
inc
into
mov
xlat
xchg
popf
loopne
jle
jge
pop
out
add
pop
xor
jo
out
loope
xchg
das
push
cmpsl
push
push
sbb
push
add
xchg
jo
mov
inc
stc
pop
jnp
pushf
stc
out
push
mov
scas
js
dec
fbld
fildl
add
mov
push
in
adc
adc
adc
stc
lea
and
jl
jae
push
fstps
push
sbb
inc
aas
shlb
gs
in
or
loop
rcrb
jns
cmpsb
adc
add
mov
mov
jae
cmpsb
sbb
xorl
cwtl
mov
jo
or
push
inc
lods
es
jge
dec
fnsave
mov
inc
mov
mov
loopne
test
pop
leave
and
xor
pop
sbbb
sub
gs
loopne
cmp
or
pop
mov
push
pop
dec
leave
lea
cld
push
push
sub
aaa
or
sub
enter
dec
xchg
push
inc
dec
jns
addr16
xchg
orl
sub
movsl
mov
inc
jne
gs
out
arpl
sbb
pop
lret
jecxz
fiaddl
sub
mov
lret
cltd
cmp
out
dec
repnz
out
adc
sbb
push
push
enter
mov
stos
shrl
arpl
das
in
mov
fistl
mov
stos
and
push
ss
dec
add
jecxz
imul
cld
mov
mov
clc
dec
fs
popa
fiaddl
popl
jae
inc
test
inc
movsl
jo
jae
call
xchg
xchg
pop
push
dec
repnz
push
sbb
push
inc
mov
scas
lahf
mov
mov
imul
jno
mov
mov
ds
outsl
test
xchg
dec
sahf
xchg
add
jmp
jecxz
ficoml
test
jp
cltd
jmp
lds
mov
std
movsl
cmp
push
add
aad
dec
js
inc
in
aaa
push
xor
xchg
test
scas
mov
hlt
pop
push
cmp
xorl
sahf
jecxz
push
sarl
sarb
bound
nop
dec
movb
adc
lods
adc
call
addr16
mov
fcompl
test
mov
fsubp
mov
jmp
push
mov
inc
aaa
jmp
xor
loop
pop
or
test
stc
push
jl
cld
xlat
mov
loope
pop
js
dec
or
frstor
sub
dec
lods
inc
or
aam
lods
sbb
or
jle
mov
icebp
inc
or
xor
rclb
rcrb
push
sub
in
call
sbb
pop
mov
insb
data16
pusha
cli
cmp
push
mov
das
mov
jb
push
scas
mov
inc
xor
pushf
ss
and
sub
adc
mov
loope
inc
sarb
push
idivl
cmc
mov
mov
mov
ss
fnstsw
or
int
sti
xchg
outsl
lcall
outsl
scas
je
stos
rorl
test
xorb
pop
adc
pop
aaa
pop
cmc
xchg
xchg
out
js
dec
lock
sbb
jb
adc
xchg
adc
pop
dec
push
icebp
jns
mov
pop
push
dec
fisttpl
in
mov
mov
xor
popa
rorb
mov
repz
xchg
stc
test
push
lret
pop
dec
mov
and
push
mov
sub
ret
repnz
shll
mov
mov
lret
or
sub
or
mov
dec
cmpsl
int
repnz
sbb
push
xor
xor
test
xor
xchg
or
jge
in
loopne
mov
dec
mov
inc
and
push
jo
pop
pop
cmp
push
out
stc
and
int
add
lock
loopne
push
mov
lahf
or
popa
div
pop
in
mov
js
fildl
mov
pusha
or
icebp
in
out
xor
inc
insb
push
lret
scas
lret
or
jecxz
test
sub
rol
addr16
test
mov
push
jecxz
add
andl
inc
cli
or
add
movsl
aas
das
jne
xor
mov
cmp
mov
xchg
gs
pop
jle
cld
cli
mov
test
in
clc
adc
cmp
rcll
dec
and
je
and
dec
stos
add
lahf
mov
fs
mov
andl
jb
xor
push
popa
test
loop
sbb
fldcw
notl
jmp
loopne
cld
lea
cmpsb
sbb
out
aaa
arpl
dec
sub
ret
xorl
or
sbb
es
cmpb
pushf
mov
pushf
jl
fsts
stc
into
movsl
mov
or
scas
fstpl
jnp
loope
push
shlb
jns
xor
sub
jge
scas
sub
add
jmp
ficompl
fnstsw
add
shrl
mov
pop
imul
xchg
mov
data16
iret
in
int3
mov
not
xor
mov
int3
movsb
sti
int3
ss
adc
lods
int3
sbb
inc
fnstsw
fisttpl
jb
aas
and
stc
pushf
repnz
and
dec
popa
push
jle
adc
pop
jmp
xor
inc
pop
je
add
dec
stos
subb
jg
xchg
inc
mov
inc
jae
bswap
cmpb
mov
cmc
cltd
inc
lods
or
jns
aam
fs
pop
ds
mov
aas
cmp
sub
xlat
mov
push
dec
dec
dec
cli
testb
hlt
mov
gs
push
mov
ret
or
xor
and
cmp
subb
push
push
push
xchg
xor
lret
bswap
lahf
cmc
rcrl
push
pop
pop
jle
stc
mov
je
sub
imul
sti
adc
lret
mov
dec
das
ret
enter
xor
mov
sbb
pop
add
push
or
or
rorl
out
mov
out
adc
popa
cli
push
mov
std
popf
enter
bound
cli
cmc
sbb
leave
adc
mov
ret
imul
fimuls
push
dec
int3
sbbl
pop
fs
dec
lock
push
lds
xor
cmp
dec
adcb
cli
clc
jle
mov
inc
mov
push
sar
cmp
push
dec
mov
mov
sbb
cmc
jns
cmpsb
dec
push
ja
mov
fisttpl
pop
or
cmp
push
rcrl
add
xchg
leave
je
cmp
fwait
push
ljmp
popa
pop
dec
xor
xchg
in
mov
addr16
dec
xor
xor
aas
push
in
fistpl
icebp
mov
lahf
stos
sub
and
test
add
xor
jne
in
imul
inc
sbb
cmpsl
aaa
icebp
int
fldcw
clc
sub
dec
sub
dec
adc
adc
xchg
test
es
in
mov
ja
arpl
lock
ret
jbe
mov
jmp
mov
std
mov
incb
mov
fwait
jo
mov
iret
pop
std
inc
pop
arpl
add
dec
dec
divb
sub
adc
cmpsb
cmp
in
add
xchg
clc
out
sbb
popf
xor
cmpsb
out
cmc
inc
mov
mov
cmp
ljmp
push
adc
add
pop
scas
mov
push
xor
movb
out
ja
pop
aas
movsb
jo
dec
sub
clc
pusha
sbb
std
lahf
push
movsl
cltd
xor
daa
adc
lods
mov
and
cwtl
and
lret
stc
and
and
int
jns
push
iret
inc
divl
loop
insb
pop
mov
push
fistl
pop
mov
mov
in
cltd
pop
xlat
enter
bound
jecxz
sbb
jb
sub
repnz
push
adc
push
pop
pop
lea
mov
sahf
jo
mov
add
cmpsb
sbb
lcall
xor
xchg
out
leave
imul
xor
movsl
xchg
scas
pop
aaa
mov
sti
outsb
jns
aas
fs
push
out
and
testl
push
test
cmc
adc
aaa
sbb
or
cmp
mov
sbb
mov
adc
dec
jecxz
adc
pop
es
mov
les
and
jl
jo
push
add
sbb
mov
dec
cmp
test
scas
push
push
lret
push
xchg
outsl
pop
pop
jb
or
xchg
or
push
xor
int3
test
or
and
adc
sarb
pop
sub
lock
out
int3
ret
adc
xchg
jmp
xor
cli
in
dec
sti
jbe
leave
add
mov
cmp
rclb
mov
adc
adc
frstor
mov
lcall
out
call
xor
lea
in
fidivrs
mov
xchg
enter
jmp
je
mov
leave
cmp
ds
or
std
ret
hlt
insb
pop
lret
add
push
sahf
jnp
or
jl
xchg
push
jecxz
rcl
fwait
adc
jbe
imul
dec
aam
xchg
fldl
sub
insl
jp
cmc
loop
and
out
aad
mov
or
push
pushf
xchg
xchg
jecxz
mov
out
jmp
jae
mov
sub
and
gs
adc
push
adc
test
arpl
sub
imul
pop
xchg
or
inc
cmp
loop
ret
pop
and
lret
xor
inc
cs
push
out
loope
and
lret
mov
in
test
adc
insb
xchg
jo
mov
shrb
sbb
cmpsb
adcl
outsb
mov
cltd
sbb
jnp
int3
ds
cmp
addr16
jp
sti
stos
mov
pop
sbb
in
jl
mov
rclb
sti
dec
lods
lds
shlb
mov
pop
rolb
clts
ds
movsb
pop
ja
mov
lods
mov
scas
add
xchg
add
lahf
addr16
sbb
push
or
fidivs
or
pop
pop
icebp
sub
xlat
pop
xchg
sub
out
jp
mov
data16
and
cmp
push
and
mov
inc
iret
jge
sub
test
lds
adc
mov
or
fwait
adc
xchg
push
rcll
fdivrp
iret
cmc
fs
xor
mov
dec
inc
sub
int
hlt
sub
cmpl
ja
in
in
es
dec
idivl
stos
inc
push
dec
rorb
jmp
mov
cmp
out
adc
and
xor
sti
sub
shlb
pop
fnstcw
mov
insb
inc
mov
jnp
jno
adc
cltd
test
xor
jge
inc
mov
mov
add
daa
je
flds
int
pop
jbe
push
xor
mov
jecxz
test
test
test
mov
adc
movsb
pop
jne
in
xlat
daa
xor
sbb
mov
mov
loop
lahf
inc
adc
lret
sbbl
sub
sahf
dec
nop
sbb
cmp
sub
sbb
push
dec
fwait
jno
aad
and
pop
aam
sahf
and
fmul
mov
cmp
mov
gs
popa
movups
jmp
jbe
ja
ror
xchg
adc
jb
nop
push
subl
and
pop
inc
or
xchg
dec
pop
mov
sub
and
inc
or
or
test
jnp
sbb
dec
adc
mov
jp
xor
dec
mov
dec
push
push
and
pop
sbb
ss
rep
jnp
iret
and
call
inc
jl
ja
pop
mov
imul
sbb
adc
fisubrl
and
add
dec
ss
pop
jp
inc
jae
push
sbb
adc
fprem
int
and
std
lods
pushf
mov
movsb
movsl
insl
mov
xchg
push
add
into
mov
sbb
push
stc
int
or
mov
sub
clc
insl
fprem1
push
outsl
shlb
mov
call
shrl
arpl
mov
mov
or
out
sbb
sbb
jle
lret
and
fldt
sub
out
aam
gs
or
dec
inc
mov
and
jge
jle
xor
pop
jmp
inc
push
pop
and
loope
jp
mov
and
stos
insl
sub
mov
add
aad
cmpl
mov
stos
dec
call
sub
pusha
xchg
leave
add
sar
adc
mov
xor
loop
xchg
lds
movsl
adc
addr16
imul
cmp
jg
mov
popa
pop
movsl
fiadds
xor
stos
pop
sbb
js
lret
orl
add
inc
shrl
je
arpl
sub
jb
out
loop
dec
sub
lret
in
xor
jo
mov
into
add
push
jno
lds
jmp
repnz
dec
imul
mov
in
es
jge
sub
stos
fwait
jle
jae
jmp
ret
adc
rcr
xor
push
clc
mov
or
test
push
test
sarb
push
mov
xchg
test
test
mov
dec
ret
and
mov
xchg
or
call
xchg
outsl
pushf
sbb
imul
mov
mov
jecxz
adc
push
xchg
pop
repz
xchg
fists
or
jl,pn
js
xchg
bound
fcom
pop
xlat
fstpt
adcb
fstl
int
and
fsts
test
fs
sbb
add
jle
push
push
sbb
jno
xor
js
mov
xor
adc
int3
imul
mov
enter
lods
repnz
lods
daa
in
xchg
lods
popa
pop
loope
into
xchg
out
fimuls
cmpsl
dec
ret
out
in
push
sti
lcall
jmp
pop
push
aas
and
sbb
jp
test
aaa
sbb
sahf
push
and
xchg
dec
cwtl
and
jns
add
fnstsw
mov
xor
enter
cmc
cmp
mov
push
call
lret
mov
mov
pop
lds
outsb
cmp
push
mov
mov
aam
push
mov
mov
lods
push
fldt
bound
pop
test
insl
dec
push
out
sbb
std
xor
fs
pushf
dec
inc
or
xlat
vucomisd
aam
das
mov
outsl
mov
in
aad
dec
lcall
xor
iret
addr16
les
and
dec
push
repnz
add
pop
cltd
jl
popf
icebp
push
mov
popf
pop
inc
xchg
dec
xor
stos
adc
and
repz
ret
adc
iret
push
inc
pop
test
int3
orl
rolb
inc
int
pop
add
xchg
xor
mov
insb
call
push
psrlw
fchs
push
aas
and
lods
xlat
mov
sahf
sub
pop
mov
mov
jae
or
dec
fwait
pushf
ss
pop
xchg
out
inc
loopne
mov
add
cwtl
or
dec
push
sbb
jle
aam
mov
dec
inc
mov
jp
dec
orl
call
rorb
inc
push
jp
scas
rolb
push
cmp
jne
addr16
mov
mov
movsl
gs
xchg
sti
imul
ljmp
scas
and
stos
js
adc
push
xchg
inc
push
cmc
adc
cld
mov
mov
insb
sbb
inc
pop
ja
mov
inc
pushf
clc
inc
xchg
mov
and
outsl
ret
sub
aaa
cmpsb
jne
inc
enter
jbe
popa
cmpsb
xchg
out
sbb
mov
jl
jle
push
aam
push
fstl
jne
pop
scas
jmp
out
pop
add
inc
jg
bound
shll
pushf
loop
add
aas
inc
daa
xor
adc
mov
cld
cld
mov
pop
dec
clc
fldl
test
xchg
or
aad
fcmovbe
adc
pop
aad
adc
fmul
js
icebp
mov
loope
adc
dec
in
out
dec
test
adc
sahf
sub
mov
push
cmp
adc
xor
xor
sbb
aad
lods
icebp
lcall
mov
dec
mov
xor
or
sti
jae
ret
cwtl
sbb
or
nop
jae
add
xor
in
sbb
xor
fstpt
icebp
out
outsb
mov
dec
fcom
jo
enter
dec
js
aam
mov
repnz
repz
subb
sbb
imul
pcmpeqd
jae
jg
pop
cmp
clc
stos
cmp
icebp
cli
jne
fdivr
push
aaa
cmp
repnz
neg
mov
test
divl
push
xchg
lahf
fs
lahf
faddl
xchg
ficomps
scas
add
aam
outsl
sbb
pop
mov
jl
or
movsb
dec
aas
faddp
dec
add
add
out
jle
mov
mov
cmp
mov
pop
cmpsb
xchg
or
inc
jmp
or
clc
imul
das
pusha
fisubrs
loope
cmp
and
push
push
inc
pop
jge
fwait
cmp
in
into
data16
xor
push
jae
dec
test
mov
sarl
cmpsl
jno
loop
jno
mov
and
cmp
cld
xchg
into
ficompl
notl
in
mov
mov
ss
jnp
insb
sbbl
gs
andl
fistpl
mov
enter
arpl
push
outsl
and
cltd
jo
mov
push
arpl
ds
mov
xchg
out
mov
bound
mov
sbb
andl
jp
xchg
sbb
mov
cmp
push
cmp
jmp
mov
jl
lahf
stos
pop
sbb
orb
push
xor
mov
ss
sahf
push
or
add
shrl
xchg
out
das
push
lock
rcrl
pusha
outsl
popa
loope
xchg
mov
mov
mov
sub
out
ret
fstpt
mov
dec
daa
lret
gs
bound
push
shll
sbb
int
adc
aaa
aaa
inc
ds
mov
in
xor
push
fwait
scas
outsl
ficoml
es
cmpsl
in
sbb
jecxz
sbb
std
or
nop
xor
pop
cmpl
push
loope
dec
dec
stos
push
mov
cwtl
inc
sub
push
lcall
push
lcall
mov
je
xchg
inc
test
mov
mov
sub
adcl
inc
add
iret
adc
movsl
xchg
jae
jg
sbb
pop
adc
add
pop
jle
test
and
jbe
int
fldenv
jne
jae
sub
dec
push
mov
addr16
xchg
movsl
repnz
ljmp
xchg
fistps
mov
sbb
leave
add
gs
lret
sti
je
mov
imul
push
lret
ljmp
int
pop
mov
xor
cmp
int3
sahf
gs
jno
sahf
mov
adc
les
push
mov
lahf
push
xor
mov
jno
xor
fidivs
and
mov
lods
out
mov
mov
xchg
inc
mov
or
fimuls
inc
jnp
inc
xlat
mov
xchg
jbe
fcoms
testb
mov
sbb
cmp
xchg
leave
fmulp
fisttpll
push
pop
mov
push
inc
lock
dec
popf
pop
mov
xorl
mov
iret
pop
jnp
inc
xchg
add
lret
or
inc
jns
es
and
outsl
mov
test
jbe
xor
gs
cli
mov
pop
fstpl
cli
push
inc
cmpsl
jnp
dec
xor
push
cmp
sbb
shrl
movsb
adc
jb
inc
fdivl
mov
jp
pop
scas
xchg
cmp
or
add
out
mov
loop
out
mov
dec
stos
push
fcmovne
inc
stos
pop
xor
mov
xchg
cmpsl
fnstcw
jmp
in
sbb
xchg
mov
mov
push
xchg
iret
inc
call
aaa
cmp
cld
or
inc
push
hlt
shll
cmpsl
xor
xor
das
imul
pop
fisubrl
sub
jnp
mov
mov
aas
out
fcoml
fidivrs
mov
cmp
lcall
push
decl
xor
imul
jnp
xchg
ja
scas
cmp
ret
push
outsl
stos
dec
push
sbb
movsb
push
mov
mov
sub
sub
pop
dec
lods
call
adc
mov
adc
add
cmp
sub
inc
enter
and
popf
icebp
sub
arpl
push
sbb
sbb
dec
into
xchg
popf
inc
mov
and
frstor
sub
mov
jne
call
lcall
sbb
adc
pop
fildl
hlt
pop
dec
sub
inc
mov
shlb
js
dec
imul
xor
sbb
mov
notb
push
aad
xchg
fdiv
xchg
std
mov
into
loop
les
aad
cmp
sti
mov
cwtl
mov
lret
ret
xchg
sbb
pop
shl
imul
jbe,pn
in
sahf
jae
jae
dec
test
jg
push
inc
inc
adc
pushf
in
push
outsb
lods
push
dec
mov
xchg
mov
ja
or
fwait
jae
das
jle,pn
rolb
negb
or
sti
lds
dec
jl
mov
and
popa
movsl
cmp
mov
lret
lea
cmp
jo
xchg
add
dec
test
push
dec
jecxz
icebp
lods
ret
fsub
in
inc
test
dec
lods
mov
or
test
pusha
movsl
stc
lret
pop
mov
mov
fwait
inc
stos
fs
jbe
add
negb
and
mov
and
xor
jb
add
stc
jmp
ret
mov
mov
mov
xor
inc
dec
into
add
adc
lcall
push
jb
loop
mov
inc
cmc
stos
adc
lret
xor
sti
iret
icebp
mov
aas
insb
sub
xor
stos
fidivs
lcall
outsb
in
in
bound
sub
xchg
sarb
or
xlat
mov
and
add
xor
out
add
mull
pop
and
lds
cmp
in
inc
jp
outsl
jo
hlt
jne
fnsave
jg
jl
pop
push
mov
ljmp
out
test
inc
jno
inc
mov
lods
mov
push
scas
jo
pop
add
in
ret
pop
jmp
pop
cmpl
pop
jmp
sbb
add
stos
jmp
cmp
push
or
dec
xchg
sbb
call
lds
out
fsubrl
lahf
jno
outsl
scas
or
jp
icebp
or
or
leave
and
fisubrs
dec
movsl
cmp
xchg
or
push
mov
pop
xchg
ret
mov
mov
pop
push
mov
mov
lds
jle
push
loope
data16
adc
sub
push
mov
and
cmp
add
shr
sub
je
cmp
arpl
mov
icebp
sti
inc
push
js
dec
loopne
mov
pop
leave
cli
rol
stos
inc
mov
inc
mov
inc
add
xchg
repnz
push
shll
jle
popf
push
out
xchg
cmp
adc
push
fs
pop
mov
pusha
lock
sar
aad
mov
loope
es
fisubrl
mov
adc
xor
xor
mov
and
push
cmpsb
dec
sbb
mov
cmpb
pop
outsb
imul
pop
cwtl
out
insl
call
cmp
push
mov
mov
nop
gs
mov
mov
or
scas
dec
call
ss
out
pop
int3
subl
sbb
push
or
add
sbb
inc
pop
dec
cmp
hlt
pushf
push
jne
daa
push
das
loop
mov
test
sbb
enter
pop
adc
push
notl
es
sarl
lods
xor
fwait
pop
xor
mov
jle
or
pusha
emms
dec
push
xor
scas
cmp
pop
pop
and
push
call
and
jmp
xchg
into
mov
mov
js
fstps
testl
xor
xchg
leave
and
cmp
mov
mov
cmp
ret
jecxz
ja
int
push
fisubl
push
xor
mov
push
imul
out
dec
call
mov
pop
pusha
movsl
pop
in
inc
xchg
cmovbe
push
stc
outsb
mov
sbb
ja
pop
mov
shl
shll
gs
mov
lods
cmpsb
mov
out
lods
insl
mov
cmpb
loope
jge
inc
dec
shrb
pop
fcmovbe
mov
stos
outsl
out
or
ret
sbbl
rcrb
movsb
jge
or
push
push
enter
inc
add
mov
leave
pop
popa
cmp
gs
scas
mov
lock
dec
lods
pop
jge
mov
out
lahf
pop
test
add
lock
rcrb
jno
test
stos
arpl
jns
cs
mov
movsl
cmp
lcall
inc
mov
lock
movsb
adc
adc
xor
je
stc
push
cmp
jae
sub
jbe
push
xchg
addb
stos
movsl
aaa
sahf
sub
jae
or
inc
shll
push
mov
std
dec
call
add
popaw
imul
push
aas
imul
dec
mov
bound
or
out
push
sub
dec
repnz
jbe
cld
fwait
push
out
roll
jae
jno
ret
xor
pop
popl
and
and
ret
dec
mov
outsl
aas
fldl
call
push
push
test
and
or
xor
push
adc
les
js
in
ja
cli
inc
push
sub
lock
addr16
push
ljmp
mov
mull
or
loop
cmpsl
call
sbb
xor
fs
push
or
xchg
mov
sbb
push
xchg
push
adc
mov
jnp
stos
adc
add
js
inc
dec
add
push
dec
mov
mov
cmp
adc
leave
fwait
adc
dec
xchg
jecxz
pop
xor
pusha
lods
fiadds
sub
cmp
xchg
pop
idiv
imul
mov
xchg
cmc
scas
adc
adc
adc
jmp
jle
jbe
jg
sub
in
insl
dec
leave
or
repnz
test
or
cmp
dec
pop
mov
jle
daa
jo
je
push
int
ds
jo
test
sbb
lds
mov
mov
jns
xor
ficoml
pop
cli
and
and
add
insb
insl
jg
std
loop
xor
push
loopne
enter
cld
mov
add
mov
adc
mov
lahf
pop
mov
push
lret
sub
js
outsb
adc
add
jns
test
adc
loopne
push
jle
leave
loopne
aad
cmp
xchg
leave
leave
xchg
pop
pop
mov
and
mov
cmpsl
andl
jne
lea
std
lds
stos
test
fstl
fsubrl
outsl
test
jae
ja
xchg
es
cmp
cmp
mov
not
je
cmp
adc
bound
push
insl
and
ja
push
inc
jns
mov
call
mov
mov
inc
cld
push
mov
icebp
fs
loope
and
jle
pusha
mov
or
mov
jle
cs
jp
aaa
out
pop
mov
mov
lods
inc
dec
mov
and
pop
mov
stc
xlat
dec
push
sub
jo
out
mov
push
push
jb
ret
xchg
out
pop
repnz
clc
jp
bound
push
push
cmpsb
ret
std
lods
ficomps
dec
scas
adc
inc
cwtl
out
notl
push
inc
adc
mov
mov
jbe
cmpsl
and
jle
ficomps
lods
mov
pop
andl
xchg
mov
dec
dec
sub
lock
jbe
bound
cmp
std
imul
or
add
call
bound
jge
inc
int3
add
pop
clc
and
shr
subb
repnz
xchg
cmp
cmp
push
jle
jns
sbb
or
ret
jns
loope
sbb
loopne
aaa
xchg
test
pop
fs
repnz
out
xchg
fstpl
std
add
push
push
jg
pop
push
lret
lock
in
rclb
outsl
repz
pop
push
in
jb
add
pop
push
test
lret
rcrl
rclb
lcall
clc
dec
popa
out
inc
dec
out
push
xchg
push
out
dec
mov
adc
or
enter
mov
jno
jb
pushl
push
dec
clc
enter
sub
xchg
les
mov
push
pop
xor
sarl
jno
xor
test
push
cmpsb
inc
mov
push
pop
pop
xchg
pop
push
pop
dec
push
imul
iret
add
pop
and
fbld
xchg
or
shlb
pop
cli
cwtl
out
sub
jle
mov
std
fcmovbe
sub
jae
add
mov
aaa
mov
nop
jmp
jmp
push
xchg
das
push
add
inc
push
iretw
addr16
mov
pop
mov
dec
push
mov
sbb
xor
add
jbe
push
xor
lahf
xchg
andl
cmp
mov
outsb
imul
cmpsb
aam
push
push
cmp
mov
fstps
add
cs
jne
negl
pop
or
insb
xchg
lods
mov
mov
dec
xor
jmp
push
sbb
pop
pusha
adcl
push
and
fisubl
shlb
push
icebp
jne
mov
xchg
push
test
add
shlb
bound
or
stos
sbb
in
mov
sbbb
stos
test
cmpb
cmp
cmp
push
xor
mov
inc
ja
sbb
leave
push
mov
pop
gs
in
pushf
push
clc
out
mov
dec
jmp
dec
push
scas
push
sbb
add
imul
arpl
jp
addr16
aam
mov
aas
cmp
ss
add
pop
gs
or
push
mov
pushf
dec
cld
mov
xchg
loop
xchg
lahf
test
cmp
rcrl
in
repnz
add
push
les
xchg
popa
mov
xor
add
mov
mov
sbb
bound
cmpsb
and
mov
sub
mov
popa
movsb
or
mov
cmpsb
adc
lods
aas
sub
xchg
scas
sub
sbb
mov
movsl
test
or
pop
test
stc
mov
fdiv
insb
fldt
loopne
mov
lea
mov
xor
and
fs
dec
out
insb
sbb
add
fldt
and
loop
daa
inc
sub
inc
sub
pop
adc
in
test
xor
fstpl
bound
push
jmp
jecxz
test
cltd
scas
lret
outsb
jp
cmp
bswap
fwait
popf
cmpsl
stos
and
in
fcompl
stos
jmp
push
fcomps
js
popa
xor
les
out
pop
clc
dec
push
jge
mov
mov
push
dec
out
iret
pop
adc
mov
test
add
pop
cmpsb
sbb
xchg
and
scas
idivb
pusha
add
in
repnz
dec
adc
inc
rcrl
mov
dec
roll
sub
dec
add
inc
mov
mov
jl
scas
adc
repz
push
adc
mov
fimuls
xchg
push
movsl
cli
push
sub
pop
jnp
sbb
nop
sarl
jno
lea
jbe
pop
mov
imul
dec
xchg
mov
arpl
mov
inc
fsub
pusha
leave
repz
jns
out
inc
arpl
xor
repnz
neg
mov
or
push
add
sub
enter
jno
js
int3
xchg
add
imul
aaa
xchg
jp
xor
aas
test
mov
jg
mov
repz
dec
sub
lock
xor
data16
addl
inc
fstpt
or
ret
sahf
mov
pushf
es
fs
dec
sbb
mov
mov
popf
das
dec
lcall
aad
je
into
jnp
lock
pop
cmp
lahf
pop
scas
addl
xchg
mov
cld
inc
movsb
inc
clc
cmpsb
or
fisubs
mov
in
jecxz
sbb
jg
xor
popa
jae
pop
movsl
jo
adc
and
mov
jecxz
adc
adc
rcrl
mov
sbb
xchg
push
movsb
cmp
cmp
aas
xchg
inc
aaa
aam
rolb
pmaddwd
xor
dec
add
push
out
orb
fstpt
iret
and
das
xor
gs
push
jae
pause
dec
mov
lahf
inc
dec
pushf
cmp
cmpsl
notl
pop
ss
dec
jl
cmpsb
add
mov
push
mov
pop
outsb
mov
inc
rcll
sbbl
push
leave
mov
inc
mov
or
mov
dec
popa
cmpsb
icebp
inc
loop
call
push
in
cmp
rcr
push
cwtl
imul
sub
inc
movsb
ss
push
adc
ret
add
ret
add
inc
xchg
fsubrl
movsl
cld
je
inc
push
mov
mov
pop
imulb
rorb
andl
pop
push
fidivrl
jge
push
test
jecxz
movsb
shl
push
mov
sbb
push
sbb
filds
in
mov
insb
sub
leave
ret
stos
cmpsb
test
ja
inc
xor
repnz
cmpsl
jb
push
cmp
int3
mov
stos
jns
fistps
ret
rclb
jb
or
mov
sub
inc
add
lsl
arpl
je
push
xor
cmp
insl
sahf
jl
jne
subb
xlat
push
test
cwtl
outsl
out
fwait
xchg
hlt
jg
je
or
mov
shll
mov
in
por
leave
and
rcll
lcall
xchg
addr16
adc
fwait
mov
mov
push
aam
jle
pop
xor
mov
dec
clc
pop
push
sbb
insb
inc
ds
mov
mov
jb
inc
fs
mov
ds
ret
mov
push
shlb
stos
sbb
fistpl
dec
pushf
test
add
jg
jg
repnz
rcl
mov
imul
push
loop
inc
sbb
xchg
xchg
mov
mov
cmp
and
lods
adc
xchg
mov
xchg
or
test
fimuls
in
out
inc
call
rcrb
xchg
adcl
cli
stos
int3
xor
sbb
pushf
inc
inc
jmp
pop
cmp
adc
stos
add
mulb
mov
into
xrelease
dec
mov
jbe
mov
mov
xor
push
shrb
in
fucom
ja
jecxz
push
clc
adc
cli
jge
hlt
hlt
stc
in
je
out
mov
mov
imul
loope
popa
add
xchg
int3
fnstsw
jne
das
sub
jbe
add
mov
cmp
or
jp
inc
leave
xchg
jle
xchg
push
cmp
mov
js
add
out
sbb
ja
sbb
cwtl
inc
cmp
mov
lahf
add
loop
div
sub
push
fdivl
sub
xor
sbb
pop
out
mov
adc
enter
cmc
xchg
int
push
mov
fiadds
movsb
lods
adc
pop
je
jae
sarl
popf
xchg
sub
fstps
jbe
inc
or
into
cld
int
or
xchg
ret
sahf
inc
das
outsb
sbb
fldt
scas
test
xchg
imul
pop
pop
ret
inc
pop
mov
xor
in
xchg
loopne
add
test
bound
mov
test
jb
jle
stos
scas
dec
ja
in
repz
and
xor
mov
xorl
enter
adc
movsb
pop
add
add
imul
lret
inc
adc
scas
mov
fucom
or
test
pop
cmpsl
cmp
stc
cli
dec
sub
enter
xlat
fsubl
in
pusha
or
lods
or
cmc
aad
fsts
test
sbb
in
in
and
pop
aam
ja
sti
out
pop
inc
add
dec
iret
out
or
xor
pop
xor
xor
rcr
scas
sbb
xor
movl
fcmovnu
addr16
in
ret
movsl
fdivrl
sbb
jecxz
in
pop
out
push
cmp
jb
fs
and
aam
sub
lods
das
dec
mov
push
call
jno
mul
mov
mov
out
in
into
inc
jbe
xor
cwtl
sub
fcoms
sub
fcomps
mov
push
push
push
push
out
push
cmc
insb
movsl
iret
mov
inc
jo
sbb
add
mov
jb
pop
xor
sub
mov
hlt
cmc
xchg
aaa
adc
mov
and
pusha
popl
dec
test
jbe
inc
inc
pop
sub
popf
jb
pop
jle
mov
shl
mov
sub
sub
xor
lahf
test
adc
lods
add
inc
into
rolb
daa
add
sbb
js
mov
sbb
add
test
repz
pop
cmc
popa
or
jecxz
cmp
push
add
mov
push
inc
movl
xchg
into
enter
xor
mov
inc
out
aad
cmp
push
jae
push
or
mov
js
lods
cli
inc
xchg
test
mov
push
nop
sbb
stos
test
push
insb
jne
push
inc
push
pop
mov
push
lds
inc
xchg
cmp
sub
aam
sbb
or
sti
leave
dec
call
mov
int
push
add
shll
dec
mov
dec
xor
cmp
daa
and
lods
mov
or
and
push
and
cmc
ljmp
sbb
movsb
push
xlat
cs
fsts
in
mov
mov
insb
lods
cmp
in
stos
js
xchg
outsb
ljmp
outsl
lods
and
fdivrs
rcr
jnp
push
sub
dec
sub
and
js
sub
inc
pop
mov
rolb
imul
dec
mov
fs
mov
scas
loope
lds
jae
sahf
rcll
inc
rcrl
xchg
cld
push
ret
rclb
lret
inc
ljmp
adc
fldt
clc
jbe
xor
jp
mov
movsb
cmp
add
cmpsl
les
pop
push
mov
mov
fwait
aaa
into
out
rclb
push
mov
daa
mov
lods
outsl
lds
cmp
addr16
push
adc
jp
int
and
jno
ss
pop
call
mov
mov
mov
jg
mov
cltd
insl
mov
loope
iret
push
scas
xchg
push
aam
inc
adc
or
outsb
inc
fdivs
xlat
mov
enter
mov
adc
xor
dec
inc
mov
jge
add
std
inc
cmp
mov
negl
cmp
cld
popa
push
pop
popf
lret
xlat
jae
mov
or
pusha
xor
or
lret
sub
bound
sub
cmp
add
sbb
loope
outsb
jns
addl
jle
push
fsubl
pusha
cltd
push
lods
push
fldln2
int
or
sub
fsubs
xor
or
inc
mov
faddl
pop
stc
jno
daa
mov
fiaddl
scas
mov
js
pop
xchg
dec
push
idivb
xchg
std
or
push
sbb
pop
fsub
push
aad
xlat
adc
popf
or
jmp
or
outsb
and
cmp
add
pop
xchg
jbe
sbb
cmpsl
in
mov
leave
cmp
sbb
scas
pop
pop
dec
out
xor
iret
cmpsl
iret
fadd
imul
pusha
js
xchg
out
xchg
pop
iret
sbb
jecxz
fwait
stos
dec
xor
inc
cmp
pop
loope
mov
popf
adc
jbe
mov
into
sub
add
and
sub
mov
add
aad
pop
xchg
repnz
xchg
addl
dec
add
sbb
push
in
mov
or
inc
mov
ror
inc
lock
jno
sarb
mov
imul
jg
cmc
add
inc
fwait
fdivs
add
test
or
dec
mov
iret
cmp
sub
lock
jge
popf
dec
scas
mov
movsb
inc
and
xchg
adc
jb
les
fs
xor
push
push
push
fstl
movsb
mov
ja
and
subl
dec
dec
lcall
xchg
inc
push
in
in
pavgw
cmovs
fadds
outsb
mov
pop
daa
fdivs
jge
imul
mov
add
adc
add
clc
popa
and
aam
jnp
adc
jl
push
jmp
mov
scas
sbb
dec
or
push
mov
and
jo
fcomp
sub
xor
xor
testb
lock
sub
ficompl
add
xlat
aam
mov
dec
inc
adc
inc
mov
lcall
mov
mov
fcomps
xchg
fidivs
insl
mov
fucom
ret
mov
adc
jmp
jb
into
div
mov
fadds
sbb
mov
lock
bound
scas
sahf
cwtl
pop
xor
pop
sahf
imul
sti
sbb
std
shlb
dec
add
inc
jmp
js
lods
scas
pop
out
and
inc
xchg
dec
fnstsw
into
or
adc
test
das
push
pop
test
je
jns
sub
mov
subps
push
xor
mov
inc
popf
sbb
shlb
scas
dec
les
or
push
jnp
jle
jl
addr16
lock
xchg
xchg
into
jmp
decb
fmull
cmpsl
mull
test
ret
jp
add
xchg
shrl
or
fsub
mov
out
xlat
adc
ja
sub
jl
adc
push
xchg
push
pop
out
loopne
imul
sbb
add
sub
mov
ds
fnsave
adc
lret
shll
xchg
scas
mov
in
push
aam
inc
in
movsl
push
mov
nop
shll
frstor
jno
lahf
xor
xor
cmpsb
fiaddl
clc
jno
or
loope
or
insb
xchg
xchg
jnp
xchg
sub
adc
pop
adc
jae
roll
pop
iret
outsb
xchg
sbb
inc
femms
jae
jo
call
push
mov
repnz
xor
pop
test
leave
out
leave
xor
call
mov
aam
imul
cs
addl
xchg
subl
scas
dec
xchg
sub
mov
mov
jmp
jo
sbb
xor
call
fisubl
outsb
pop
or
mov
xchg
xchg
imul
xchg
fisubl
ds
outsl
xchg
push
inc
popf
mov
shll
divb
push
jb
dec
iret
rcrb
mov
cld
xchg
mov
mov
mov
push
out
shrb
mov
mov
cmp
xorl
or
add
popa
adc
pop
popf
and
rcrl
clc
pop
stc
pop
scas
aaa
xchg
das
jne
lods
mov
jb
mov
shlb
sbb
sbb
lock
repnz
cmovl
sbb
negl
xor
andb
mov
addr16
push
out
add
xchg
rcll
mov
sub
lcall
or
enter
sub
xor
inc
push
xor
pop
rol
mov
lods
aas
in
adcl
xor
repnz
filds
or
jbe
dec
adc
fildll
push
add
inc
jns
jns
ds
jg
ljmp
xor
mov
neg
sub
push
adc
ja
imul
mov
adc
inc
shrl
and
mov
pop
lock
aad
jmp
movsl
xchg
or
pop
lock
in
mov
out
inc
mov
inc
push
jp
mov
lahf
pop
xor
bound
xchg
fmuls
cld
xchg
lea
hlt
pusha
js
movsb
inc
fldl
enter
add
aaa
lds
mov
xchg
push
jnp
js
gs
sbbb
scas
dec
cmp
pop
aam
inc
pop
push
mov
repnz
adc
jnp
rolb
out
stc
push
cmp
sub
ds
sbb
cmpsb
mov
pop
push
sbb
push
xchg
lahf
adc
dec
dec
push
jo
lret
add
sti
fbstp
pop
rorl
pop
enter
pop
jns
mov
push
sub
cli
push
aaa
xlat
repnz
sbb
jg
ljmp
cld
jmp
sbb
push
pop
push
add
mov
rcll
aaa
mov
icebp
jno
fcoms
and
lods
es
xor
mov
scas
icebp
pop
mov
xor
leave
dec
push
ret
xor
mov
inc
jno
pop
faddl
test
fwait
lea
mov
or
adc
sub
dec
jp
pop
cmp
std
jb
and
es
and
mov
mov
mov
adc
cvtdq2ps
lods
lods
inc
add
ret
stos
fsubr
outsb
les
lahf
mov
movsb
fidivl
inc
push
jp
das
xchg
add
aad
lret
pop
cltd
clc
outsb
mov
sar
xor
lods
cli
sub
mov
test
mov
out
pop
std
lock
pop
mov
mov
addl
lods
popa
insb
in
dec
mov
addl
lahf
enter
add
lock
lods
xor
imul
testb
or
outsl
ret
outsb
ss
xor
pop
push
mov
gs
mov
or
loope
jae
push
cmp
imul
adc
loope
mov
pop
in
lock
dec
scas
movsl
jg
sbbb
in
pusha
and
sarl
int3
cld
shll
add
nop
mov
shl
fisubrl
ljmp
scas
jmp
and
cli
imul
pop
rolb
mov
gs
aam
push
ss
shrb
xchg
xchg
sbb
divl
lahf
inc
push
imul
jno
iret
and
sbb
mov
aam
fcomip
and
jno
cmp
xchg
jmp
push
push
das
pop
jno
out
ljmp
cld
cmpsb
clc
movsl
mov
movsl
inc
in
mov
and
fsub
cmp
push
mov
push
std
mov
or
adc
add
icebp
int3
shl
xor
lods
in
and
test
lea
imul
mov
clc
xor
jae
movsb
into
fdivrs
mov
aad
sbb
sbb
mov
sbb
add
call
jmp
sub
xor
arpl
mov
sbb
jge
lods
and
pop
pop
pusha
pop
mov
mov
sti
add
movb
lods
test
imul
xor
in
adc
add
aam
jae
in
and
mov
nop
sbb
fdivs
push
adc
movsl
jl
jmp
sbb
dec
cmp
sbb
mov
in
cmc
movb
push
jle
daa
xchg
inc
sub
add
jnp
iret
loope
mov
test
je
ja
or
rcll
ss
mov
lret
jno
enter
ffreep
popa
negb
push
and
jl
out
or
fcomip
sti
neg
and
pop
push
es
xchg
cmp
out
sbb
icebp
push
rcrb
fsubrs
pop
jmp
pop
icebp
int
mov
stos
pop
or
aas
jne
adc
push
xor
or
je
pop
adc
insl
aas
js
sbb
aam
shll
add
cmp
int3
aad
mov
cmp
push
jbe
data16
addl
xchg
mov
inc
fisttpl
outsb
shll
test
jmp
sub
cld
dec
std
or
xor
lretw
mov
xlat
jo
cmp
and
sahf
sbb
mov
cmpsb
jns
cmp
push
clc
aaa
mov
pop
jne
in
push
adc
inc
push
movsl
inc
movsb
ljmp
enter
pop
jmp
addr16
sub
inc
xchg
je
pop
shlb
sarb
xchg
fadd
imul
fbstp
mov
pop
test
pop
sub
mov
fisubrs
dec
push
sbb
cmp
sub
jo
push
xchg
or
and
push
notrack
sarb
popa
mov
pop
in
int3
sub
test
out
in
sub
int3
mov
xchg
mov
mov
dec
and
pop
test
sub
sbb
nop
test
add
jg
enter
hlt
mov
xlat
and
scas
mov
ds
fidivrl
sub
adcb
rcrl
lods
add
pmulhuw
jg
jmp
jne
mov
mov
sbb
cmp
fstl
faddl
and
add
in
cmp
mov
jbe
ror
addr16
mov
out
cwtl
mov
push
cmp
cmc
mov
fadds
mov
jmp
xor
js
mov
jge
mov
adc
mov
fcoml
mov
das
gs
fmull
jmp
push
cmpsl
push
inc
add
rcrb
lock
adc
push
and
cli
jno
sub
and
in
icebp
in
jae
lcall
cmp
ret
pop
cli
out
xchg
lcall
mov
ljmp
sbb
and
clc
inc
xor
add
mov
mov
imul
mov
out
pop
mov
movsb
jl
jae
cwtl
leave
popa
out
repz
je
sti
push
xchg
mov
pop
push
cmp
mov
stos
sbb
shrb
dec
add
push
sti
int3
addr16
jne
jge
inc
push
lcall
dec
incb
loopne
test
cmp
or
push
and
pop
cmc
call
out
add
adc
push
mov
mov
icebp
scas
loopne
push
push
bts
test
mov
fidivs
addl
repnz
jmp
mov
push
and
pop
into
sub
cli
jbe
lods
or
jns
and
jnp
jo
pop
lock
addr16
push
mov
imul
and
adc
pop
push
push
cwtl
roll
xchg
jl
or
xchg
jo
fnsave
clc
push
rcll
sbb
daa
scas
xor
shll
jb
cs
in
push
and
iret
clc
cwtl
push
andl
push
inc
add
loop
mov
adc
loopne
jae
popa
jmp
repz
sub
sbb
out
repnz
lcall
cmpl
sbb
pusha
popf
fisttpll
mov
pop
push
xlat
jle
enter
stc
and
mov
cmp
pop
jge
adc
fwait
jae
orl
mov
fnstenv
sbbl
mov
shll
add
sub
outsb
inc
push
adc
sub
inc
push
imul
aad
push
mov
int
push
jnp
sbb
inc
or
jg
iret
scas
scas
or
cmp
ret
xlat
dec
jbe
push
pcmpgtb
jns
push
shlb
jecxz
ret
add
inc
jo
insb
jb
ljmp
push
repnz
mov
push
jne
inc
add
dec
stc
lcall
lock
and
xchg
fidivrs
cmp
out
xchg
push
and
pushf
sbb
inc
adc
xchg
out
sub
ljmp
dec
dec
aam
and
hlt
xlat
cli
pop
loop
jl
enter
mov
in
mov
jno
push
testl
and
popf
mov
roll
movsl
addr16
outsl
mov
bound
enter
imul
mov
and
push
loop
aad
mov
pop
in
cmp
jne
pop
inc
fistl
rorl
xchg
add
add
testl
mov
sbb
pop
hlt
jb
push
cltd
pop
mov
cmp
cmp
xchg
ljmp
lea
sbb
pop
push
movsb
mov
lds
cmp
lcall
nop
addr16
add
int3
inc
iret
sahf
ds
adcl
loope
mov
pop
push
imul
sbb
mov
js
mov
xchg
leave
mov
jecxz
lea
cmp
mov
add
sbbl
out
xchg
ds
mov
nop
movsl
dec
mov
popf
in
xchg
add
jmp
cmpsl
leave
ss
xchg
inc
je
jp
mov
and
sub
les
leave
sbb
or
inc
aad
pop
or
pop
pop
test
std
cmpsl
data16
ljmp
ror
mov
dec
sub
mov
mov
dec
mov
lahf
jo
shll
pop
sub
fsubs
mov
mov
out
sahf
jb
lea
popa
jg
ficomps
imul
stc
and
xorl
or
push
enter
mov
lret
xor
or
es
inc
loop
int
xchg
or
xchg
push
add
int3
push
jnp
cltd
mov
mov
xor
cwtl
xor
sub
inc
xor
and
aaa
adc
pop
ret
mov
push
gs
jle
and
push
std
es
clc
mov
lret
bound
faddl
pop
jmp
mov
in
pop
xor
ds
pop
test
inc
sbb
push
inc
adc
pop
sbb
mov
insb
hlt
filds
popf
and
mov
js
nop
pop
in
imul
pop
sbb
outsb
or
ja
xor
mov
ret
dec
fldcw
cmp
shll
in
aam
xlat
xor
std
fwait
insl
or
and
cmp
insl
xchg
lcall
clc
decl
clc
jb
mov
repnz
sub
add
sub
dec
notb
aad
mov
decb
adc
test
dec
dec
insl
inc
movsl
pop
xor
stos
cmpsb
repnz
addr16
jmp
pop
out
pop
in
imul
mov
mov
and
mov
lret
in
sub
icebp
insb
mov
jl
xchg
repnz
ficomps
pop
test
jno
and
lea
pusha
pop
arpl
rclb
icebp
push
pop
sub
cmp
mov
aaa
lahf
add
in
loop
xor
lea
push
negl
dec
jo
mov
pushf
xchg
pop
jae
pop
cmp
out
inc
cmp
dec
insb
pop
test
sub
dec
div
xor
and
pop
nop
or
js
add
rcrl
pop
daa
mov
aas
mov
stos
scas
mov
mov
xchg
add
sbb
je
cwtl
sbb
and
or
inc
imul
dec
lcall
aam
push
fistl
repz
lret
jbe
aad
pop
mov
fld
out
jns
jbe
lea
sub
stc
movsl
add
jecxz
rorb
into
ret
xchg
or
dec
insb
push
stos
mov
shl
pop
push
clc
xor
cli
insl
mov
andb
call
addr16
sub
leave
add
push
mov
xchg
sub
icebp
scas
bnd
xchg
into
hlt
cmp
stc
dec
and
movsl
xor
lea
mov
aaa
gs
bnd
xor
cmpsl
sbb
iret
shr
psrad
arpl
pop
sahf
mov
cli
nop
mov
in
imul
jae
loopne
daa
ljmp
pop
ret
ljmp
mov
stos
mov
xrelease
ret
fdivrl
lock
mov
sub
sbb
call
mov
sahf
popf
filds
scas
dec
add
fcomps
push
inc
and
sub
rol
pop
or
cmpsl
push
push
test
xchg
sbb
ret
jo
xchg
add
subl
sub
cmpsl
out
mov
rorb
or
lock
roll
mov
sbb
and
or
lds
push
aad
xchg
fcompl
pop
jmp
scas
daa
cmpsb
jge
repnz
loopne
in
daa
jne
cmpsl
dec
fstpl
pop
sub
xor
rorb
in
inc
pusha
popf
imul
and
cmpsl
outsb
add
int3
push
and
mov
add
mov
addr16
or
jl
les
mov
into
jnp
push
xor
dec
cmc
sub
mov
pop
daa
cmp
add
stos
mov
xchg
mov
jl
pop
push
cld
jae
or
scas
ds
jp
dec
das
inc
bt
or
test
xchg
std
push
xchg
stos
jno
push
xchg
inc
gs
xor
jl
movsb
pop
adc
sti
mov
pushf
sbb
imul
stos
adc
shrb
pop
xlat
mov
arpl
in
and
ficomps
mov
jmp
pop
sbb
xchg
mov
inc
xor
es
adc
fdivr
sbb
or
fmuls
out
xchg
xchg
jns
stos
adc
arpl
pop
mov
add
lods
aad
jge
cwtl
mov
pop
out
pop
mov
xor
or
jge
outsb
sub
mov
iret
jns
test
lahf
mov
mov
cli
or
xor
xchg
pop
jl
scas
mov
repz
xorb
jmp
xor
push
jnp
inc
repnz
ljmp
lahf
sub
pop
out
jmp
push
fs
jp
sahf
adc
sarb
out
stos
lret
sub
push
inc
pop
lock
jbe
dec
jbe
ja
scas
cwtl
test
movsb
aas
mov
sub
ret
pop
test
sbb
out
jl
arpl
pop
pop
push
loope
cmpb
mov
jbe
pop
adc
in
pop
and
fnstcw
ret
mov
divl
cmp
cmp
xor
lods
dec
ss
and
mov
repz
int
pop
mov
adcl
insl
adcl
out
push
and
push
insl
lds
fcomps
cmp
inc
and
xor
outsl
xchg
repnz
and
scas
shlb
loope
cmpsb
xchg
in
xchg
stc
pop
popa
loopne
popa
faddl
pop
inc
xorl
adc
lret
mov
sbb
mov
scas
and
or
loop
jle
shlb
pop
or
jns
mov
inc
or
jmp
pop
push
jecxz
and
sti
std
pop
idiv
adcl
ret
ds
leave
testb
or
out
push
movsb
pop
sbb
cmp
or
scas
aaa
inc
movsl
xchg
add
mov
cmp
xchg
jecxz
je
jge
xchg
and
imul
mov
mov
idivb
roll
jle
sbb
or
arpl
clc
xor
fiadds
dec
stos
sbb
popa
lcall
xchg
test
bound
call
es
cltd
scas
jbe
mulb
add
mov
add
sub
out
push
fwait
sbb
xor
test
jg
push
test
and
and
lea
sbb
mov
pop
ss
in
scas
sbb
push
sbb
add
push
ja
negb
out
leave
icebp
pop
lock
mov
dec
subb
fistps
pop
call
and
jne
in
popa
or
shlb
sti
mov
mov
cmp
lret
out
pushf
mov
sahf
movsl
orl
lcall
test
insl
pop
in
clc
push
lea
ja
gs
sub
cmc
lret
xchg
aam
xchg
ret
xor
fisubrs
aad
mov
iret
cmp
add
dec
shll
dec
adc
push
xor
cmp
out
add
cs
test
je
test
hlt
pop
mov
add
xor
mov
and
in
lahf
jge
filds
adc
flds
jecxz
xchg
push
out
jnp
push
mov
js
mov
jns
out
dec
stc
dec
xchg
cltd
dec
aad
push
dec
mov
jle
shl
push
jecxz
and
or
and
stc
aas
sti
cmp
mov
cld
dec
xor
mov
push
jmp
lods
push
shll
cs
mov
pop
pop
je
push
sub
cmp
mov
lcall
scas
int3
xor
setge
add
inc
mov
cmp
pop
testb
sbb
push
xchg
cmp
js
add
into
hlt
or
cwtl
push
ds
aas
add
push
jae
fcmovnu
sub
test
sub
inc
or
mov
or
imul
or
shll
jmp
pop
pop
js
sti
loopne
cmp
xchg
and
and
and
rcll
adc
mov
jecxz
repnz
and
mov
jle
mov
daa
sub
fcoml
fisubl
lahf
dec
jno
idivb
xchg
push
loop
and
sar
mov
xor
pop
mov
xchg
rorb
mov
jno
decl
lods
push
xchg
mov
inc
xchg
in
pop
cmp
pop
cmp
push
add
call
jns
jb
stos
hlt
sub
in
test
lea
test
jns
inc
mov
adc
ret
mov
adc
out
jnp
repz
mov
sbb
fs
loop
jns
inc
ret
stos
push
push
aad
pop
aad
inc
cmp
pop
movsb
dec
mov
mov
dec
shlb
mov
sbb
fs
pop
and
cmp
and
xor
mov
jnp
dec
xchg
stc
xchg
fs
paddw
repnz
adc
jg
rol
bound
cltd
pusha
xchg
jg
test
mov
mov
cmp
fidivs
mov
notb
mov
stos
adc
mov
or
daa
movb
mov
adc
fmuls
cmc
sub
xchg
xlat
pop
inc
in
shl
and
mov
movsl
mov
adc
cmc
jno
ret
aaa
adc
cmc
add
sub
stos
xor
inc
inc
mov
push
add
mull
rorb
rorb
add
mov
lahf
das
imul
inc
mov
and
rcll
out
push
and
mov
int
dec
xor
orb
mov
xchg
lock
inc
repnz
orl
iret
ljmp
sub
mov
imul
mov
lret
cs
call
dec
ret
sbb
push
xor
xchg
push
cmp
jns
xchg
xchg
dec
in
sbb
mov
call
inc
cmpsl
std
cmpps
mov
sarl
stos
bound
pop
mov
and
testl
pop
mov
cmp
jmp
in
adc
xchg
and
jecxz
add
aaa
xor
aas
clc
or
dec
mov
push
test
mov
scas
xor
add
sub
or
or
inc
les
sub
andl
add
lcall
jle
imul
push
mov
mov
push
clc
stos
mov
mov
cli
idivb
jne
sub
adc
mov
sub
push
jo
cmp
sbb
mov
lret
leave
xor
or
jp
stos
sub
icebp
mov
xor
lret
loopne
out
test
push
aam
push
cmp
add
or
lds
mov
popa
test
mov
imul
cmp
cmp
test
and
test
aaa
xor
popa
iret
dec
aad
push
test
mov
popa
xor
jmp
pop
xor
pop
xchg
inc
xchg
mov
call
movsb
adc
cmp
sahf
jp
gs
inc
aaa
scas
jbe
out
add
sub
test
mov
cmp
test
mov
in
ror
adc
jae
scas
pop
and
or
sub
push
dec
mov
xor
outsb
ss
sbb
mov
xor
repnz
mov
subl
cmp
adc
jmp
cltd
shll
test
pop
cltd
sbbl
sub
sbb
lcall
lahf
jge
daa
jle
push
shll
fisubs
dec
jns
insb
xchg
inc
cmp
push
fiadds
sbb
in
bound
lcall
scas
mov
int3
mov
outsw
mov
xchg
arpl
out
leave
sbb
mov
dec
fstpt
ljmp
inc
mov
xchg
shlb
jl
push
call
pop
dec
outsb
ret
mov
xchg
jge
sbb
and
ret
cmp
mov
es
pop
fwait
add
mov
add
sbb
inc
mov
jno
leave
stc
call
sbb
push
pop
xor
divb
mov
inc
stos
add
xchg
bound
sar
outsl
daa
xor
fstps
shl
rorl
jecxz
adc
mov
jb
jecxz
pop
repnz
cld
hlt
mov
inc
push
in
xor
push
adc
addr16
mov
xchg
int3
dec
cmp
cmp
lret
mov
pop
out
adc
in
and
icebp
sbb
xchg
sarb
jb
aaa
dec
sbb
mov
or
daa
loop
mov
insl
push
addr16
sbb
cmp
pushw
xor
xlat
xchg
pop
mov
popf
push
adc
sbb
xor
ja
imul
stos
jne
mov
add
dec
fdivs
hlt
repnz
addr16
ss
sbb
les
push
push
out
ficoms
sbb
add
mov
decl
pand
popa
push
xchg
test
aad
or
inc
mov
or
in
sub
mov
jb
push
push
mov
incl
ljmp
ljmp
in
inc
and
clc
cmp
ret
popf
daa
sar
sahf
and
xchg
cmc
inc
ljmp
imul
pop
mov
stos
mov
outsb
jne
cmp
cwtl
popf
mov
push
dec
inc
aad
cmp
sahf
sbb
xchg
pop
cltd
mov
dec
dec
outsb
xchg
or
push
mov
out
ret
jne
out
or
jns
push
pop
cli
inc
cmc
mov
pop
or
imul
sbb
pusha
jmp
mov
movsl
push
sbb
mov
mov
dec
mov
loope
cmpsl
or
jae
icebp
adc
mov
ret
jno
adc
or
cld
inc
push
jmp
leave
or
adc
or
pop
jp
jp
push
dec
std
sub
xchg
ret
cmpsb
push
xor
cmpsl
or
ret
cmp
jns
jbe
in
lds
mov
ljmp
test
insl
cmp
push
aaa
pop
cwtl
sbb
shll
pusha
xlat
std
dec
inc
jl
push
daa
sub
pop
call
addl
jge
insl
sbb
sub
mov
fstps
push
inc
stos
lock
cmpl
sahf
fbstp
and
sub
mov
sbb
and
lds
sbb
adc
sbb
iret
or
addr16
addl
push
mov
ljmp
add
lds
sub
pop
imul
sbb
dec
sub
push
sbb
orl
ficoml
lock
outsb
xchg
cmp
testl
pop
jne
mov
pop
and
loop
push
stos
dec
imul
in
sbb
xor
xchg
xor
inc
jg
mov
and
mov
mov
sbb
push
mov
push
cmp
mov
in
xor
repz
mov
jp
popa
adc
or
mov
ret
stos
fstl
pop
std
movsl
cli
icebp
inc
sarl
sub
ror
inc
sahf
sbb
xchg
loop
inc
pop
scas
dec
xchg
jns
addr16
mov
mov
sahf
xchg
jno
in
jp
cmp
cmp
sub
out
cmp
loop
sbb
pusha
inc
jno
mov
fdivrs
push
out
fs
aaa
lds
enter
dec
add
fistl
mov
mov
lock
adc
cmp
out
push
jo
mov
jp
lcall
inc
in
jg
lds
shlb
xor
jg
imul
mov
mulb
cmp
mov
push
das
sub
fidivrs
ret
inc
xor
cld
in
daa
inc
ficomps
add
inc
jns
xchg
inc
add
insb
cmpsb
sarb
inc
ds
outsb
inc
jmp
xchg
add
outsb
imul
push
jp
push
sbb
test
rolb
xchg
mov
sbb
es
push
or
push
push
bound
pop
add
add
dec
scas
xor
aad
xlat
nop
ja
lret
inc
xor
scas
add
xchg
adc
xchg
xlat
pushf
psubusw
or
popf
fsub
push
andb
lock
jae
cmpsl
div
loopne
adc
pop
out
movsb
nop
add
xor
sub
idivl
popa
xor
sbb
aaa
arpl
fdivs
mov
lds
dec
lea
arpl
cmp
popf
jo
lock
sbb
rclb
cmp
push
stos
xor
ret
sahf
mov
pop
dec
xor
dec
lods
pop
aaa
xchg
xchg
add
jecxz
jl
lods
pop
mov
fwait
push
ffree
ret
adc
adc
shlb
scas
mov
daa
stos
loope
mov
or
stc
outsb
hlt
cli
aad
adc
inc
mov
sub
add
sbb
rcll
sbbb
xchg
push
xor
add
in
add
pop
out
imul
nop
je
cmpsl
faddl
rorb
daa
or
outsl
fwait
adc
mov
lret
cmpsl
inc
pop
mul
mov
out
sbb
and
xchg
ds
jge
pop
call
mov
mov
mov
dec
bound
xchg
mov
adc
pop
sub
stos
pop
mov
pop
xchg
outsl
movsb
pop
fidivrs
int
push
mov
es
into
loop
inc
pop
cmpsb
sub
adc
inc
xchg
aaa
cmp
push
pop
insb
lods
dec
sub
mov
xchg
dec
mul
ret
xchg
xor
cltd
psubsw
sbbb
bound
repnz
cli
adc
daa
adc
pop
scas
pop
fimuls
repnz
aam
andb
sub
add
lahf
int3
xchg
jnp
popf
sbbb
and
jecxz
imul
sbb
add
int3
cmp
stos
and
cmpsl
pop
int
jl
xchg
in
mov
pusha
bound
cltd
cmc
inc
sti
stos
fcmovnb
mov
cwtl
or
mov
cmp
mov
fwait
popf
lcall
es
insl
cld
pop
xor
aam
mov
paddw
mov
aad
movb
pop
rcll
pop
mov
xchg
jmp
fmuls
stos
rcll
loopne
lea
scas
jle
xorl
xchg
jbe
cld
mov
lret
out
jae
pop
faddl
cmp
insl
push
fcmovnbe
xchg
jo
inc
cmc
cmc
js
in
repz
adc
push
dec
and
icebp
stc
roll
test
sbb
pusha
jne
cld
jge
lds
inc
ret
dec
adc
xchg
mov
cltd
dec
xor
divb
ss
loopne
lock
push
cs
cmpsb
int
lret
pop
cmpsb
push
mov
push
pop
ja
sahf
fwait
or
adcl
xor
or
scas
pop
xchg
ds
stc
test
out
xor
mov
cmc
clc
push
mov
orb
dec
sub
ljmp
add
rcrl
sahf
rorb
fidivrl
out
mov
daa
in
and
scas
pop
cmp
push
mov
enter
int3
test
ljmp
aam
push
sbb
jecxz
ljmp
mov
bound
inc
xor
cmp
push
jae
sti
rorb
mov
adc
loope
mov
mov
dec
out
lcall
jmp
mov
push
pop
sahf
cmp
cli
leave
ret
or
dec
loope
add
pop
int3
xor
dec
sarl
pop
repz
pop
pushf
ret
push
sub
jle
sahf
xchg
outsb
js
dec
inc
into
or
lds
adc
jl
jle
stos
pop
pop
loop
mov
xor
sbb
pusha
js
test
aas
call
sarl
popa
pop
mov
or
xchg
pand
xchg
inc
pop
mov
add
ljmp
xor
or
and
sub
icebp
cltd
dec
test
dec
cs
xchg
sahf
adc
lahf
fnstsw
push
or
or
inc
pop
sub
out
cmpsb
in
mov
subl
push
add
jge
jbe
aad
lret
shrl
insb
push
out
enter
lcall
jp
sti
mov
fcmovb
imul
jge
jbe
in
mov
push
in
xor
xchg
adc
lock
inc
jno
or
xchg
bound
push
les
loope
outsl
test
lods
aad
or
mov
js
popa
flds
inc
push
xor
rcll
xor
add
adc
cmc
sub
iret
sub
arpl
pop
fsubrs
inc
out
outsl
out
in
push
das
imul
mov
jbe
out
xchg
xor
scas
inc
dec
cltd
pop
ss
xor
pushf
or
add
mov
stos
enter
cld
jns
sahf
mov
outsl
aad
rolb
inc
pop
jne
loopne
mov
mov
jl
inc
jbe
sub
outsb
inc
mov
ds
add
sti
push
aam
xchg
mov
aam
cmpsb
cwtl
scas
sbb
push
xor
fnstcw
hlt
sub
mov
push
int
fldt
sub
aaa
mov
push
pop
aad
lds
push
mov
inc
dec
mov
loop
cmp
pop
push
aaa
lahf
mov
mov
cmp
pop
fwait
cmpsb
adc
orl
jnp
inc
cli
sbbl
dec
add
mov
test
es
cmpsl
mov
imul
popa
lret
sbb
cs
mov
dec
lods
push
xor
push
jl
xchg
les
outsl
repz
xor
mov
mov
test
jp
lcall
mov
arpl
rcrl
hlt
loop
das
add
ret
lea
dec
leave
add
cmp
push
pop
cltd
mov
sbb
pop
dec
xchg
hlt
jge
daa
lds
out
inc
int3
jbe
in
jo
xor
sub
inc
adc
icebp
movsl
jp
dec
movsb
out
dec
pop
dec
fidivrl
cmp
mov
aaa
mov
addr16
add
adc
inc
lods
mov
jl
inc
pop
sbb
inc
repz
mov
cmpsb
mov
pop
adc
fistps
mov
clc
and
enter
pop
sub
inc
rcll
pusha
adc
cmp
in
dec
test
addb
add
inc
ret
push
es
jmp
inc
ljmp
pop
cmp
xlat
bound
pop
mov
inc
xlat
imul
jnp
pop
cmp
or
test
mov
push
mov
or
dec
mov
imul
cmpsl
cmpl
js
mov
test
orb
mov
out
xchg
test
inc
orb
inc
sub
pop
movsl
add
dec
pop
sub
push
popa
cmc
in
pop
lret
xchg
test
dec
popa
xchg
sbb
lods
mov
gs
pusha
cs
mov
lret
scas
clc
nop
or
add
jge
push
rcll
xchg
sub
sbb
xchg
xor
or
stos
mov
daa
mov
sbb
mov
mov
iret
arpl
xchg
enter
ficomps
adc
cmp
xor
add
outsb
push
adc
jae
inc
inc
xchg
sub
in
xchg
icebp
mov
mov
loope
sub
push
lahf
daa
fs
push
sub
gs
push
pop
mov
std
or
pop
inc
into
jp
lods
call
ret
jae
sbb
mov
and
adc
aam
jge
pop
faddl
cwtl
pop
mov
popa
loopne
movsl
pop
ret
addb
rolb
je
das
add
mov
adc
sbb
mov
and
rdmsr
add
insl
or
or
adc
pop
xor
icebp
hlt
mov
mov
ss
adc
fldl
ficoms
insb
xor
aam
jb
in
js
mov
out
data16
out
popa
test
shld
sarb
test
pop
and
fbstp
ret
jmp
das
cmp
push
out
push
or
pop
ror
pop
add
or
repz
inc
scas
inc
pop
and
jo
add
push
mov
in
lea
jmp
lds
adc
cmpsb
dec
pop
push
lcall
imul
mov
and
fistl
imul
jmp
fisttpll
je
push
or
sbb
les
std
push
jl
shlb
or
push
lcall
xlat
pop
pop
sub
lods
mov
test
add
xor
mov
ret
dec
movsl
daa
xchg
fistps
leave
dec
xor
das
adc
hlt
sub
jp
fnsave
cs
data16
or
jbe
xchg
nop
sub
adc
cmp
xchg
push
lcall
xchg
pop
pushf
xor
js
mov
jg
repz
pop
sbb
pop
test
mov
cmp
mov
out
pusha
pusha
jo
push
ret
hlt
push
push
mov
shrl
mov
xlat
jns
sub
jle
push
push
sub
jecxz
adc
xchg
or
aam
or
jmp
and
push
or
xor
mov
sahf
inc
push
cwtl
imul
mov
xchg
xchg
mov
adc
adc
inc
or
and
and
dec
pop
jle
gs
mov
sub
jecxz
mov
or
das
xchg
mov
icebp
cli
ljmp
adc
pop
xchg
aam
and
pop
rorb
sbb
sub
pop
adc
cmp
in
mov
jge
mov
dec
popa
dec
jmp
dec
pop
outsl
outsl
push
dec
mov
cmp
in
inc
mov
jo
mov
aas
jg
push
inc
pushf
jae
fisubs
sub
mov
add
cmp
dec
lods
stos
stc
out
pop
lret
mov
stos
enter
fisubrl
mov
daa
xchg
jnp
dec
fsubrs
sti
lea
push
lahf
hlt
in
loop
jo
adc
sub
ret
sbb
lds
popa
pop
movsl
imul
sti
call
push
push
out
test
mov
lea
notb
ljmp
ficoml
add
clc
pop
push
fcoms
ret
add
cmpl
add
pop
stos
jae
stc
outsb
pop
mov
dec
pop
scas
jns
lahf
repz
adc
shrb
dec
and
sbb
xor
mov
sarb
pop
or
or
cs
jmp
lock
inc
or
cmp
gs
outsl
mov
sbb
mov
sub
dec
fisubrs
xchg
sbb
leave
mov
outsb
or
sub
jge
mov
xor
inc
scas
lock
inc
cmp
dec
cltd
inc
mov
test
inc
in
fs
adc
outsb
das
ljmp
es
add
negb
sti
push
mov
cmpl
fistpll
and
xchg
insl
leave
inc
xchg
addr16
xchg
push
movsl
jbe
ret
xchg
mov
cmpl
call
mull
cmp
pusha
shr
lahf
sub
pop
outsb
xor
ss
in
fmulp
in
cmp
mov
jns
push
xchg
add
in
into
std
sti
dec
pop
roll
rcrl
icebp
nop
pushf
xorb
fucomip
inc
in
fmuls
push
outsl
xchg
mov
aas
andl
test
inc
hlt
inc
mov
inc
mov
ljmp
jbe
ret
insl
loope
cmp
pop
cmpl
shrl
daa
rcll
lock
xor
xor
push
add
jge
ljmp
jp
sbb
mov
lods
fs
sbb
mov
push
inc
in
das
lea
jecxz
mov
xchg
stos
fdecstp
push
out
popa
fwait
add
inc
and
add
test
in
sub
fwait
ret
gs
ret
or
int3
ljmp
fimuls
jp
xlat
mov
cmc
or
fiaddl
insb
and
outsb
sub
pushl
add
iret
addb
in
jp
ret
xchg
mov
pushf
or
mov
adc
lret
pop
cli
add
jle
mov
and
cmpsl
xor
clc
test
xchg
pop
cmp
clc
push
in
xchg
cli
xor
cld
test
and
mov
mov
jmp
add
and
popf
addl
xchg
lds
adc
or
pop
movsb
pop
mov
sbb
fbstp
cmp
mov
lds
popf
add
cltd
mov
es
popa
mov
or
or
shrl
test
daa
xor
lods
adc
xor
push
pop
addr16
dec
enter
sbb
scas
int3
adc
jecxz
mov
int3
adc
and
inc
sbb
clc
out
out
jecxz
mov
xlat
mov
mov
mov
adc
jl
inc
lock
dec
ljmp
adc
pushf
xchg
sub
mov
jmp
adc
sti
jno
iret
push
sbb
dec
push
mov
adcb
mov
adc
mov
shlb
mov
push
add
mov
fucom
pop
xchg
mov
lods
ds
cmpsb
adc
lods
adc
in
and
cltd
and
int
lods
movsb
fisubrl
aaa
jp
repnz
and
idivb
popf
cltd
adc
or
les
jp
add
addl
mov
stc
stos
dec
and
out
inc
les
daa
xchg
cmp
into
out
jnp
pop
jle
push
daa
sub
inc
roll
jmp
test
push
out
cmp
scas
cld
outsb
les
pusha
inc
inc
cld
mov
push
pop
mov
sub
cwtl
divl
adc
orl
ljmp
popf
push
sub
hlt
add
mov
sbb
lret
dec
dec
pop
rclb
arpl
jle
lahf
ss
fmuls
jg
scas
dec
rclb
mov
js
push
push
ds
xchg
imul
push
jmp
sbb
imul
push
adc
mov
pop
inc
pop
xor
sti
cwtl
dec
jl
sub
filds
cmp
jno
inc
or
cli
adc
ret
xchg
lock
aam
add
call
ljmp
inc
xchg
push
out
leave
cmp
mov
inc
stc
lock
fs
addr16
xchg
add
pop
jo
popl
mov
push
mov
lods
lcall
fistpll
adc
pop
loopne
aaa
adc
repnz
mov
inc
jmp
push
dec
sub
ficompl
cmp
insl
hlt
jecxz
loopne
fisttpl
push
dec
sub
xchg
add
mov
jge
jo
mov
jle
out
push
or
testl
daa
test
inc
jge
call
js
mov
inc
scas
nop
cltd
xchg
fmull
xchg
addr16
popf
movsb
enter
mov
dec
pop
popa
pop
mov
lea
cli
daa
adcl
mov
gs
mov
adc
andb
adc
jle
mov
xchg
cs
aad
cmc
sti
bound
sub
cmp
or
jg
mov
and
and
push
mov
dec
hlt
mov
je
mov
addr16
fidivrs
scas
sub
push
test
mov
bound
mov
std
pop
adc
adc
data16
pop
cmpsb
jo
mov
movsb
adc
mov
popa
jno
jp
or
jmp
imul
xor
ss
pop
test
ficomps
inc
add
fldl
add
mov
xor
rolb
outsb
mul
jne
fisubrs
mov
and
fsubl
repnz
shll
dec
pushf
mov
movsb
jp
cld
aam
imul
add
pop
sbb
pushf
xor
imul
push
shll
adc
adc
inc
shlb
push
push
jmp
sbbl
lcall
mov
aas
mov
scas
lret
mov
adc
inc
sub
adc
lods
xchg
xchg
dec
push
xchg
lods
movsb
rcrl
lret
in
sub
rolb
out
lahf
cs
sti
xchg
mov
xor
aaa
sbb
aaa
out
movsb
jg
jmp
notb
bound
in
mov
push
inc
cs
sub
shrl
gs
fwait
test
mov
sbb
stos
mov
popf
sbb
mov
jg
loop
imul
addr16
xacquire
mov
cmp
xor
pop
call
stos
add
or
repnz
loop
jnp
xor
fdiv
adcl
jo
or
fsubrp
or
out
add
stos
ja
fists
ret
mov
jle
sbb
cmpsb
lods
dec
sbb
es
sub
sub
pop
fmuls
pusha
jns
xchg
fistpl
adc
and
add
fimull
mul
adcb
cmp
mov
push
loope
mov
cmp
ds
mov
push
popa
mov
jp
xor
insb
in
dec
out
out
mov
lret
popa
and
mov
and
sbb
pop
jnp
aam
cli
push
out
cmpsl
jns
in
dec
add
stc
jnp
fs
cmp
pusha
fwait
and
les
les
sti
dec
add
clc
cmp
adc
xor
std
mov
ja
sub
dec
mov
mov
icebp
or
sbb
jns
scas
inc
outsb
adc
sub
push
mov
lret
shrb
cs
lahf
jge
xor
lea
pop
outsl
lods
push
adc
push
call
lock
call
pop
mov
test
imull
mov
push
add
jno
push
dec
xor
outsl
cmpsb
mov
pop
jmp
xchg
repz
jno
xor
lahf
push
call
adc
repz
inc
ljmp
sbb
jmp
shlb
into
cmpsb
jecxz
fs
mov
jl
inc
pop
or
add
data16
sub
or
pop
lock
inc
pushf
mov
cmc
inc
ret
and
adcb
or
icebp
inc
mov
sbb
aad
mov
jns
aam
les
xchg
or
cmp
and
inc
jge
filds
outsb
fninit
sub
xor
xchg
push
les
cmpb
xlat
int
popf
or
mov
xchg
enter
push
inc
or
mulb
sbb
hlt
jl
push
mov
push
in
mov
sub
mov
addl
ljmp
sub
iret
mov
mov
int3
push
call
dec
repz
jl
push
inc
fidivs
bound
ret
test
aas
stos
cli
mov
lods
fstl
adc
mov
mov
cmp
or
mov
cwtl
cmp
jno
sbb
test
ret
or
test
inc
dec
repnz
mov
cmc
add
retw
mov
sbb
push
pop
sbb
sbb
and
xchg
fstps
mov
xchg
out
cmp
mov
add
ret
or
or
xchg
mov
mov
jno
sbb
push
sub
enter
sub
fcoms
daa
not
bnd
ficoms
stc
fsubrl
jl
inc
mov
addr16
cmp
test
add
sbb
jae
fldt
dec
ds
xchg
ret
sahf
sbb
inc
xor
mov
jmp
in
dec
ljmp
cmpl
loope
mov
mov
leave
lcall
andb
out
sti
xchg
js
in
out
les
sub
cmpsl
mov
loopne
jmp
xor
les
popf
mov
mov
ss
aas
add
jae
testl
test
or
fsubs
xor
sub
mov
push
into
jnp
movsl
mov
insl
mov
mov
lcall
mov
jo
inc
into
mov
xchg
ljmp
xchg
xchg
jle
xchg
adc
cs
inc
lcall
xchg
xor
adcl
or
jbe
mov
imul
jecxz
repz
inc
sbb
icebp
push
xchg
add
xchg
aam
je
ret
adc
movsb
jecxz
fsubrs
mov
cld
lret
sub
repnz
movsl
xor
fcoml
cltd
adc
data16
sub
jge
das
and
adcl
mov
in
mov
mov
sbb
inc
mov
or
enter
mov
push
adc
mov
adc
add
leave
jns
dec
inc
dec
imul
and
orl
mov
cmp
aad
shlb
mov
repz
push
subb
pop
mov
ret
ret
test
sub
and
and
jmp
cmp
enter
push
dec
cld
in
mov
cwtl
addr16
cmp
or
xorl
call
test
shll
loopne
dec
loop
xchg
lods
mov
aas
lods
mov
aas
sub
adc
xor
dec
aas
movsb
icebp
mov
jp
jno
jge
adc
das
ljmp
push
out
adc
add
mov
flds
outsl
xchg
divl
lock
sub
hlt
mov
dec
add
sub
int3
out
repz
ret
into
push
lahf
jle
out
enter
inc
les
sti
test
int
aas
dec
fsubs
xor
adc
add
cmp
sub
cli
rorb
mov
pop
jbe
mov
sar
mov
add
iret
mov
xchg
mov
mov
ljmp
outsb
in
enter
jecxz
or
sbb
inc
call
push
mov
inc
adc
mov
in
sub
scas
adc
mov
roll
les
or
push
ret
test
mov
je
mov
mov
lea
bound
das
scas
idivl
push
cli
push
mov
loopne
lahf
add
or
aad
addr16
ja
repz
xchg
jmp
mov
fwait
in
and
das
jle
inc
add
movl
lods
jbe
inc
jns
das
sahf
add
dec
mov
mov
ja
sbb
lcall
xor
cwtl
cmp
xlat
sti
pop
jno
cltd
jg
fsubr
lret
mov
fcomps
jmp
or
in
mov
mov
fwait
aas
out
ja
sarl
repnz
imul
call
and
test
inc
jo
pop
and
psllw
fidivs
in
cld
fwait
jp
and
inc
stos
adc
lds
xchg
jmp
push
and
scas
mov
or
xchg
scas
pushf
dec
clc
js
pop
fcmovne
dec
lea
mov
add
mov
sbb
orl
out
pop
cmp
movsb
xchg
adc
push
inc
pop
push
std
sub
shlb
or
cmp
mov
nop
int3
in
inc
lret
jg
mov
xlat
mov
shrb
cli
stos
loopne
bound
xchg
mov
mov
inc
fsubrs
push
push
int3
loop
lret
xor
int3
pop
enter
mov
pop
data16
out
push
loope
ds
add
loop
pop
std
jl
cmp
push
aaa
jle
inc
xor
mov
dec
lock
pop
lods
xor
xchg
add
mov
mov
xchg
push
adc
iret
mov
call
aas
lods
or
jmp
push
sub
cmp
lock
aas
add
dec
inc
clc
push
jecxz
xchg
sbb
rcll
repnz
sbb
push
ret
inc
lcall
shrl
dec
sbb
dec
loop
dec
sbb
adc
pop
ret
les
dec
xor
ds
arpl
leave
into
lret
mov
add
lods
xorl
stos
mov
xor
cmc
clc
cmp
cmc
scas
loope
dec
push
mov
jb
inc
mov
pop
xorb
loop
pop
or
inc
mov
loope
push
movsl
pop
xor
cltd
mov
fistl
das
lcall
mov
xchg
xchg
outsb
jecxz
ja
push
ss
sub
jecxz
ret
inc
dec
mov
lahf
xor
call
or
aam
xor
xchg
stos
rorb
pusha
mov
xchg
pop
jl
push
mov
sub
std
sub
mov
lret
dec
enter
mov
fs
icebp
cmp
insb
push
mov
pop
or
mov
xchg
jns
in
push
fcmovnb
push
dec
mov
in
pop
or
push
in
js
ljmp
cmp
ss
mov
imul
in
dec
xor
mov
xchg
cli
mov
jge
inc
ja
in
mov
loopne
out
loop
in
xchg
subl
jle
push
push
lods
sbb
or
push
push
scas
inc
stc
mov
sbb
cwtl
lret
mov
mov
je
movsb
std
push
std
loope
aaa
xchg
js
add
push
jl
and
mov
inc
xor
cmp
testl
rclb
and
ljmp
sbb
mov
adc
andb
mov
int
imul
icebp
push
jbe
push
inc
jp
pop
data16
aaa
xor
sbb
cmp
dec
adc
pop
in
call
ret
in
cmpsl
test
sub
cmp
ds
mov
xchg
ret
outsl
xor
jmp
and
jae
mov
sbb
aam
jecxz
dec
mov
ss
daa
ljmp
xor
imul
cmpl
aam
iret
cmp
stc
test
and
push
push
pop
mov
mov
xor
mov
out
mov
subb
xlat
mov
insb
xchg
adc
ret
int3
incb
mov
fst
mov
xor
cltd
in
cltd
dec
cmp
mov
ffree
loope
lret
lock
lahf
call
mov
ret
xchg
test
mov
movsl
add
inc
and
dec
mov
sub
mov
mov
sub
cltd
or
insb
push
jp
test
icebp
inc
sub
adc
pusha
cli
jno
mov
jle
in
fsubs
dec
mov
dec
sahf
pop
mov
sbb
pop
fbld
adc
lods
idivl
aam
or
xchg
cmp
ja
add
or
test
cmp
repz
rclb
xor
test
xor
jge
stc
sub
test
lcall
mov
aaa
enter
outsb
cmpsb
dec
adc
repz
ret
stos
jp
shrb
mov
test
cwtl
into
movswl
pand
lods
in
sbb
das
inc
pop
xor
addl
cmpxchg
push
push
lods
xchg
sub
jge
or
int3
sub
adc
loopne
cmp
push
sbb
js
jb
dec
or
daa
pop
xor
mov
push
daa
mov
push
icebp
cli
mov
daa
mov
jne
mov
xor
leave
and
mov
jnp
fdivl
popf
inc
int
mov
mov
in
pop
addb
add
pop
imul
popf
or
mov
mov
hlt
xor
jbe
ret
sbb
ljmp
cmpsl
mov
popf
xchg
sbb
push
insb
fbstp
pushf
fucomp
inc
aaa
sahf
cli
inc
in
scas
daa
stos
pop
sub
lea
add
xor
out
dec
in
inc
or
lret
add
jb
into
add
jecxz
push
jb
loopne
rorl
test
mov
mov
mov
sbb
mov
and
movsb
inc
icebp
ds
jne
inc
cmp
sti
and
insb
mov
and
xchg
xchg
aad
out
jg
sub
notl
mov
aas
cmpb
add
test
arpl
scas
mov
fidivrs
test
and
js
adc
mov
pop
lret
mov
mov
sarb
fsubrs
enter
push
scas
xchg
mov
fiadds
test
jbe
popa
setle
adc
cmp
int3
and
xor
icebp
jmp
das
enter
pop
mov
fbld
aad
inc
rcrl
test
imul
shrb
mov
loope
xchg
xchg
sub
inc
or
pop
scas
xchg
sub
add
push
ss
cs
daa
inc
cs
xor
pop
test
add
out
decb
test
aaa
adc
scas
xchg
nop
in
pop
push
jo
or
aaa
push
in
cli
scas
fwait
sbb
sahf
out
out
push
int3
insb
push
push
pop
or
jmp
popa
xchg
push
ljmp
xchg
ds
dec
ret
push
gs
or
sbb
dec
ret
xlat
int
pop
pop
mov
fbstp
mov
and
test
mov
pop
int
lea
loop
lret
lods
addl
inc
leave
xorb
in
cmp
mov
cwtl
or
lock
lds
push
jmp
sbb
cmp
xlat
jo
lock
jmp
shl
sub
insb
xchg
das
pop
dec
mov
test
push
xor
jnp
addr16
orps
cli
sti
clc
xchg
repnz
andl
adcb
xor
or
repnz
mov
mov
pop
mov
lcall
repz
mov
pop
test
xchg
add
test
imul
int3
cld
push
fsts
jge
pop
pop
jecxz
movsl
and
lahf
jbe
sbb
jns
inc
rcrb
jne
adc
sbb
das
pop
bound
add
shrl
js
push
dec
xor
dec
fsubrl
cmpsl
ret
push
push
jmp
push
into
lret
lds
xchg
or
xchg
aam
lahf
lret
lea
inc
xchg
lahf
xchg
xchg
dec
or
pop
xor
fwait
add
adc
mov
push
nop
mov
fs
loop
jle
pop
mov
outsl
push
sub
movsb
lds
aad
pop
call
push
pop
mov
rclb
inc
pop
int3
cmp
or
fidivl
dec
cltd
push
mov
js
adc
mov
faddl
popa
jo
mov
cmc
sbbb
xor
xchg
xchg
xor
and
arpl
movsl
jno
int3
jl
sub
sub
sbb
jmp
cmp
jg
cmc
es
lea
mov
stc
add
inc
movsl
fiadds
dec
jbe
sub
fnstsw
xchg
test
scas
stos
mov
inc
lds
movsl
repz
scas
out
or
mov
cmp
shrl
aas
dec
aad
fisttps
mov
push
enter
ror
into
cld
jne
stc
push
sub
jae
xor
sbb
add
xlat
lret
push
test
sysret
out
test
add
aam
or
mov
out
stos
jp
mov
insb
inc
ds
cmp
mov
scas
mov
pop
xor
outsl
iret
push
js
inc
aam
pop
lods
pushf
hlt
dec
xor
mov
mov
mov
jle
jge
out
xchg
out
xchg
seto
fwait
jge
and
and
cld
mov
lcall
shlb
out
adc
pop
mov
cmpsb
lods
and
cltd
out
lea
cmp
jecxz
adc
loopne
push
jmp
fidivrl
fldenv
dec
inc
sbb
stc
jecxz
fdivs
daa
lock
mov
push
xlat
dec
roll
push
push
in
lods
sbbl
pop
jg
push
insb
push
xchg
pop
push
mov
inc
sbb
lret
fcom
nop
lods
out
loopne
notl
clc
jae
jns
xor
aad
adc
psubd
xchg
inc
push
mov
push
sbb
inc
popf
and
sbb
or
dec
hlt
pop
movsb
sub
adc
mov
in
mov
cmp
or
sub
repnz
movsl
xchg
int
icebp
outsb
out
mov
das
and
scas
lcall
mov
push
jae
data16
lret
jo
jb
repz
push
dec
xchg
aad
insb
push
jnp
sarl
daa
mov
popl
xchg
pop
push
mov
add
sbb
adc
xor
dec
mov
lcall
xor
and
mov
sub
lahf
lods
lahf
jmp
rolb
fldl
gs
sub
ljmp
xor
out
push
test
aad
test
mov
dec
cmp
in
scas
movsl
es
aam
inc
mov
sbb
mov
mov
enter
cltd
and
cmp
addr16
xchg
hlt
int3
sbb
stos
adc
out
imul
jmp
inc
dec
das
xchg
test
push
movsl
hlt
stos
test
sbb
xlat
imul
jns
push
fs
aam
fptan
movsb
sub
call
sahf
out
test
sbb
pop
inc
pop
rcrl
or
out
incl
mov
xlat
xlat
addr16
sbbb
mov
aad
or
fmull
icebp
push
orb
add
mov
clc
push
mov
dec
add
dec
inc
sub
pop
stc
dec
lret
jae
inc
shrb
fs
in
incb
sub
ds
xchg
jo
int
add
dec
cmp
fsts
sub
stos
cs
out
mov
repz
or
aad
sti
sub
inc
xchg
fwait
testb
xchg
mov
addr16
push
fistl
es
dec
in
and
xchg
mov
lock
xorb
xchg
jbe
imull
ja
adc
add
lock
stos
xchg
cmp
xchg
cmp
dec
xchg
xor
pusha
cmpsb
cmp
loop
ret
lret
cmp
insb
jbe
xor
sbb
mov
test
push
cmp
sbb
insl
cmc
test
stos
outsb
dec
movsl
cmp
outsl
pop
jecxz
popf
das
xor
and
xchg
lret
imul
js
gs
mov
aam
fstp
test
testb
popa
movsb
popf
test
adc
call
into
xchg
or
adc
and
nop
cltd
or
in
or
popf
mov
cmp
add
sub
clc
rclb
sbb
cmc
dec
push
test
pop
popl
test
or
lahf
icebp
dec
loop
lcall
imul
cmp
icebp
cmp
imul
sahf
in
popa
mov
pushf
xor
stos
rclb
add
dec
fisttpl
iret
mov
js
loop
scas
sahf
scas
lcall
and
arpl
add
icebp
jno
inc
mov
cmp
or
jle
and
jle
sub
cmp
cmpsb
cltd
pushf
mov
aaa
xchg
outsb
fcom
outsb
sbb
push
fldenv
mov
mov
pop
daa
lds
inc
inc
dec
cld
push
test
xchg
in
addr16
pop
out
mov
sbbb
lock
scas
mov
iret
adc
cmp
hlt
sub
in
add
xor
stc
int
ret
roll
shl
stos
pop
mov
pusha
push
xor
mov
mov
push
add
mov
add
and
lcall
xor
push
push
and
sub
lret
daa
loope
ficompl
lods
dec
pop
cwtl
lods
iret
push
xchg
jae
push
jae
dec
clc
and
push
adc
push
test
stc
lret
ret
xchg
dec
ss
int3
mov
mov
test
sbb
mov
es
fucomp
cmpb
or
enter
jp
aaa
pop
insl
sub
inc
loope
cltd
je
bound
lock
jp
dec
sbb
xor
adc
shrl
adc
cltd
in
js
mov
cld
jle
adc
fbstp
gs
inc
add
inc
xchg
stos
sbb
stc
loopw
add
mov
inc
mov
mov
cs
dec
adc
cmc
cltd
jmp
ret
mov
xor
sahf
push
fdivrl
inc
ds
adc
daa
pop
out
fbstp
loop
mov
ret
mov
je
jo
mov
fwait
jle
mov
cli
xor
pop
cmpl
je
and
cmp
scas
cmp
ret
mov
scas
lahf
repz
div
test
mov
push
bt
and
pop
jb
pop
ljmp
jg
push
adc
fsubs
adc
push
outsl
xchg
fldcw
or
out
jb
nop
aad
add
inc
dec
popa
sbb
fidivrs
add
push
or
imul
fucomi
pop
ret
pop
push
sar
into
push
test
jne
dec
mov
arpl
sbb
sbb
cmp
mov
dec
pop
hlt
cmp
cwtl
sahf
and
hlt
pop
mov
in
das
sub
popf
lea
push
dec
push
daa
cmp
xor
push
ss
jo
push
lret
pusha
xor
sub
cmc
or
push
pushf
xchg
inc
jae
imul
mul
jmp
lea
inc
inc
xor
adc
inc
hlt
out
xor
inc
dec
mov
dec
insb
sub
gs
ret
dec
push
das
mov
mov
dec
dec
loopnew
clc
sbb
mov
xor
and
addb
adc
vpminsw
push
push
mov
mov
pop
adc
rolb
add
repz
inc
mov
cltd
fmuls
jb
in
rorb
cmpsb
push
mov
in
fidivrl
pmulhw
sub
sub
test
sahf
mov
popf
je
in
cmpsb
lahf
mov
sti
sub
mov
push
mov
pop
insb
das
sub
push
test
pushf
int3
mov
sbb
repnz
inc
push
nop
mov
imul
lods
sarl
push
fs
ret
xchg
mov
aaa
hlt
dec
decb
and
pushf
or
sbb
js
clc
add
cltd
and
daa
inc
imull
mov
in
test
and
mull
in
add
push
cli
adc
pop
and
xchg
fwait
xchg
das
aas
push
sub
push
mov
out
jecxz
ret
xchg
lahf
or
sbb
popf
sbb
inc
and
pop
mov
jl
mov
aaa
outsb
jb
pop
dec
pop
rclb
imul
pop
movsb
inc
fisttps
test
push
cmc
subb
pop
mov
add
add
cmp
pop
xor
movsl
and
sub
push
push
inc
in
gs
adc
xor
fisubrl
test
ss
push
and
xchg
sbb
orl
cmp
xor
mov
fmuls
fisubl
mov
int
das
sub
je
cmp
mov
cmpsl
jo
xchg
out
lds
and
ljmp
aam
add
push
ljmp
lods
mov
jno
cmp
out
inc
jg
out
sbb
sbb
int3
mov
lret
lret
aaa
les
sbb
or
mov
mov
jge
into
loop
xchg
xchg
ret
sub
rcrb
fistpl
jae,pn
cs
sub
leave
loope
push
mov
mov
xchg
add
ret
mov
pop
adc
pop
add
loope
repnz
hlt
aad
stos
lret
loop
jb
loope
into
int
cmp
sub
out
mov
loopne
dec
insl
je
jle
pop
ds
xor
jno
or
fs
push
dec
inc
pop
or
test
out
jp
mov
incb
fcompl
shll
push
adc
mov
enter
mov
hlt
in
shl
jne
rcrb
fldt
adcb
push
mov
fdivrl
fbld
hlt
ret
mov
pop
les
push
jle
or
cmp
pusha
adc
loop
cs
stos
cmp
mov
popa
cmp
jge
adc
adc
bound
gs
mov
fwait
ret
hlt
mov
nop
sub
sti
sbb
jle
sbb
outsl
mov
mov
scas
add
mov
mov
xor
xchg
fimull
in
movsb
xorb
addr16
mov
xchg
mov
xorl
scas
mov
xchg
jp
jl
inc
sub
pop
mov
xchg
cmp
lahf
adcl
shr
clc
dec
ljmp
aas
cwtl
stc
jnp
push
aaa
cmp
mov
imul
call
dec
cld
adc
push
jle
adcb
mov
adc
sub
lcall
stc
daa
cwtl
imulb
mov
mov
inc
repnz
jmp
jl
mov
out
or
mov
mov
outsb
pop
and
pop
mov
das
inc
icebp
or
xor
cmp
rcrb
insb
outsb
gs
or
pop
lods
and
fisubl
enter
sub
and
cmpsl
pop
pushf
dec
gs
and
mov
mov
lcall
and
cmp
cli
jae
jo
test
aas
adc
stos
push
outsb
jle
cli
sub
in
aas
mov
sbb
mov
dec
imul
inc
fbld
in
pop
adc
cmp
dec
jmp
lds
push
fwait
in
or
jns
pusha
and
inc
jl
adc
xchg
enter
mov
mov
jl
stos
pop
loop
repz
push
ds
mov
cmp
jb
mov
loopne
jg
pop
out
inc
fcmovbe
xlat
stc
dec
jbe
inc
movsb
sub
scas
loope
aam
or
int
jne
hlt
negl
repnz
inc
in
or
xchg
inc
in
movsl
dec
pop
cmp
cld
dec
aas
push
pop
add
in
pop
jg
ret
mov
sub
sbb
sub
imul
arpl
daa
ja
push
test
repz
or
mov
jno
push
add
sub
jl
pop
pusha
mov
in
sub
movsb
and
xchg
jmp
adc
stos
mov
stc
dec
jbe
sti
ljmp
mov
jmp
lods
cmp
jnp
sbb
repnz
out
sub
loop
push
fs
add
subl
mov
push
divl
xchg
and
jmp
imul
cwtl
xchg
cld
pop
cmpsb
and
subl
or
les
inc
pop
inc
ja
aam
sbb
orl
not
iret
add
fists
popa
fdivr
loopne
jp
jle
pop
xchg
cmp
stos
daa
mov
leave
adc
inc
lods
mov
fnstenv
ret
push
daa
lods
adc
addb
les
pop
lods
push
inc
in
lret
lcall
jp
es
push
mov
fwait
outsl
dec
xor
dec
movsl
inc
push
xchg
cli
lock
nop
mov
mov
stos
jl
cld
imul
xchg
push
fildll
inc
adc
aad
mulb
cltd
and
sub
jl
mov
add
out
jno
repnz
loope
bound
mov
mov
mov
ja
push
fcomi
mov
mov
outsl
cmc
adc
sub
add
in
das
dec
dec
and
add
idivb
enter
shlb
jb
xor
psllw
pop
nop
dec
outsl
ds
mov
clc
adc
mov
test
cs
sbb
stos
inc
xchg
dec
xchg
andl
inc
clc
arpl
and
movsl
orl
lahf
pop
incl
adc
fdivrl
adc
push
rolb
xchg
daa
pop
repnz
shrb
loopne
mov
les
cmp
xchg
pop
ss
int
xor
jmp
push
imul
jl
mov
push
mov
mov
inc
shll
and
push
jnp
sub
inc
sti
add
sub
cmp
icebp
stc
or
cmpsb
cmp
in
lods
jmp
and
outsl
cmp
adc
jns
adc
pop
mov
mov
inc
flds
out
cmp
loopne
fcmovnbe
mov
iret
jg
insl
mov
rcrb
je
push
push
jno
mov
xor
fcoml
stos
flds
or
sbb
aam
or
fiaddl
jecxz
or
int3
mov
jo
mov
int3
fdivr
std
mov
push
lea
xchg
packsswb
loopne
lock
cmpl
ficomps
adc
lds
pop
mov
gs
inc
sahf
xlat
lret
test
mov
sbb
sbb
jne
or
mov
pop
loopne
leave
or
out
sub
leave
cmp
push
mov
stc
lea
adc
movsb
cmp
xor
subb
sahf
testb
dec
arpl
or
xchg
sbb
lods
ret
stos
inc
mov
jb
xor
lret
add
outsb
stc
jmp
dec
or
sub
push
mov
add
inc
add
sbbb
fistps
in
cmp
mov
out
fnstenv
pop
rclb
mov
or
jb
or
inc
xchg
lahf
cmpsb
nop
jbe
adc
cmp
mov
sbbl
adc
add
stos
mov
jle
addr16
cmc
pusha
loope
xor
or
std
push
push
adc
insb
push
sub
int
stos
sbb
inc
loope
pop
jbe
push
push
jle
pop
idivl
and
clc
fsubrl
inc
push
push
mov
in
sbb
sub
pop
es
xchg
das
bnd
cmp
add
push
jecxz
sbb
mov
pop
fsubrl
push
movsl
fcoms
movsb
mov
inc
push
imul
daa
push
jns
insb
popl
xchg
and
lock
int3
pop
in
dec
fdivrl
xlat
pusha
sbb
sbb
in
push
sbb
jae
xchg
sbb
mov
inc
mov
adc
dec
shr
pop
xor
or
adc
dec
rorl
sti
iret
dec
imul
or
or
and
loopne
lcall
xchg
popf
jecxz
into
inc
leave
mov
cmp
jo
enter
xchg
sub
fmull
js
jp
and
push
negl
leave
jns
jl
cmp
inc
push
lds
or
add
fidivrl
aam
mov
outsb
test
subl
sbbl
into
jbe
stc
imul
test
lock
pop
push
pop
and
xor
dec
lret
fimull
sbbb
int
sarb
mov
inc
leave
int3
daa
jle
cld
addr16
fs
mov
and
xchg
sub
ss
mov
fidivl
inc
or
fisubrs
enter
jbe
fwait
cltd
pop
sbb
fs
imul
iret
pusha
test
push
pop
loop
int3
or
test
outsl
lods
pop
movsl
dec
out
out
ret
adc
or
xor
call
mov
out
xor
xor
cmp
mov
test
xchg
les
push
add
fiaddl
pop
iret
sub
ret
dec
dec
push
or
loop
int
mov
inc
jp
pop
xlat
jbe
fsub
pop
jbe
dec
adc
es
mov
add
xchg
pop
mov
shlb
movsl
xchg
mov
aam
je
lret
in
mov
insl
inc
mov
shll
push
std
int
iret
xchg
mov
repnz
or
lahf
jmp
inc
xor
aaa
repz
imul
test
adc
adc
and
and
inc
inc
add
int
sahf
mov
fwait
aaa
add
sti
pop
jo
jl
add
lcall
mov
pmulhuw
lcall
pop
inc
add
jmp
aas
inc
fildl
add
fsubrs
cltd
repz
ret
mov
inc
add
dec
jp
cmc
dec
jbe
cmp
adc
fwait
loope
and
xchg
xchg
mov
cmp
jae
leave
repnz
mov
mov
dec
sbb
stos
or
arpl
xor
shl
stos
dec
lret
push
adc
inc
popf
inc
hlt
xor
add
sub
xlat
ss
lods
scas
inc
lahf
mov
dec
leave
mul
push
fbstp
cmp
push
jecxz
in
lahf
inc
arpl
adc
inc
in
or
xstore-rng
cmpsl
subb
xchg
cmpsb
fsubrs
lahf
jnp
subb
out
lea
out
mov
imul
cli
sbb
aaa
loopne,pt
rorb
adc
xchg
xor
aaa
jl
add
je
or
inc
insb
sbb
xchg
or
repz
cmp
xor
sahf
push
into
lea
xchg
push
je
repz
sub
xor
add
mov
imul
cmp
mov
dec
jp
out
xchg
sub
jnp
hlt
jne
bound
fmul
mov
aas
sti
or
out
or
leave
sti
xor
jnp
sahf
inc
xchg
inc
scas
inc
lret
mov
pusha
adc
jecxz
sub
cmp
int3
push
cmp
cwtl
mov
rorb
add
dec
shlb
sub
stc
roll
adc
lret
mov
mov
mov
jns
stos
cmp
mov
int3
clc
adc
sbb
lds
fstl
stos
jp
xor
dec
dec
dec
jl
add
ret
lods
popa
lds
lock
mov
add
add
cli
sbb
cltd
adc
ret
push
jl
mov
das
sub
js
ret
mov
jp
loopne
fdivr
add
cwtl
inc
out
jne
in
inc
out
xlat
ds
mov
jno
popa
inc
mov
push
jle
push
lea
repnz
jae
imul
enter
rorb
lcall
jl
jae
hlt
movsl
add
pop
fwait
or
fists
stos
loope
lret
inc
lcall
xchg
mov
or
push
jbe
sub
push
imul
mov
push
dec
mov
js
xchg
inc
or
xchg
sbb
cmp
sti
push
fiaddl
jmp
out
aad
std
in
in
add
mov
and
cmpsb
xchg
jns
xor
or
xor
xchg
xor
cmp
inc
enter
xor
mov
out
jne
fisttpl
push
push
mov
out
push
inc
pusha
pop
push
cli
fistpll
push
cmpsl
cs
mov
dec
pop
cmpsl
lret
into
js
test
repz
push
ljmp
aaa
jmp
out
leave
inc
fiadds
xor
pop
add
mov
add
xlat
idivl
dec
pusha
out
push
adc
and
inc
sub
mov
lods
cs
ds
mov
idivl
dec
dec
imul
xor
sub
arpl
push
push
vmread
insl
sbb
inc
js
adc
mov
cltd
jbe
add
inc
adc
hlt
mov
inc
jne
mov
sub
push
and
mov
xor
leave
sub
sbb
loop
aas
movsb
inc
out
in
mov
adc
xchg
movsl
mov
cmpsl
jle
hlt
fiaddl
sub
mov
arpl
lret
cmp
adc
mov
cmp
cmpb
xchg
shlb
fistl
lcall
out
sub
es
cmpsl
jg
push
pop
data16
pop
mov
jmp
and
test
out
or
dec
popa
clc
aaa
jmp
cwtl
dec
leave
adc
leave
sbb
mov
testb
pop
movsb
sub
dec
add
or
in
fadd
cmpsl
adc
rorb
pop
roll
adc
jo
scas
scas
add
js
push
jle
in
mov
daa
mov
push
inc
mov
repz
test
sbbl
jno
jbe
mov
js
add
outsl
pop
or
push
mov
mov
jge
push
imul
push
ret
sti
and
push
mov
cmp
pop
add
add
sar
or
pop
add
push
mov
and
lahf
loope
cmp
cmp
int3
pushf
pop
cmpsb
fistpll
and
inc
inc
push
jae
jge
shrb
mov
es
jecxz
std
lods
xlat
mov
xor
arpl
mov
lahf
mov
addb
movsb
inc
xchg
pop
mov
or
addr16
sub
mov
lds
xchg
out
aaa
stos
out
gs
shr
add
inc
mov
sub
xlat
mov
clc
cmp
mov
and
and
inc
sub
push
cmp
pop
and
cli
lahf
xor
sub
xchg
mov
je
mov
or
stc
daa
jmp
ljmp
movsl
ljmp
push
in
mov
icebp
outsl
pushf
cmp
adc
test
or
cmpb
push
add
sbb
and
fidivl
js
push
repnz
data16
icebp
cmpsb
jno
and
ret
gs
lret
outsb
out
mov
mov
aad
daa
or
pop
lcall
dec
cmpsb
fistl
add
ja
icebp
hlt
mov
adc
cltd
out
out
das
dec
in
xor
fnstcw
popa
sti
add
adc
sub
fstp
js
sbb
mov
ret
cmp
push
jns
cmp
add
xchg
popa
and
cmpsb
imul
xorl
xchg
pop
aas
jle
xchg
inc
cmc
jb
test
mov
pop
out
movsb
cmp
mov
pop
jl
outsl
dec
gs
test
ret
mov
and
inc
sbb
enter
clc
in
xor
fdivrp
mov
pop
lahf
mov
mov
xchg
xchg
jae
pushf
test
ss
imul
or
inc
call
xor
xor
mov
and
pop
movsb
xchg
or
or
mov
pop
bound
push
push
xor
fiaddl
ret
int
insl
negl
lret
scas
test
add
pusha
sub
xlat
bound
lret
aas
call
icebp
ljmp
int
incl
gs
movsl
jecxz
adc
scas
or
or
jecxz
inc
aaa
mov
push
daa
and
cmp
icebp
xchg
jecxz
dec
lods
lods
test
mov
sbb
push
jns,pn
pop
ficompl
ljmp
cwtl
sahf
ljmp
fstpt
in
sub
push
pop
cmp
orb
inc
adc
mov
je
cmp
push
pop
rcrb
scas
rorb
movsl
in
jmp
push
lret
repz
fs
shl
ret
jb
dec
pop
ljmp
xor
cmp
leave
mov
push
cmpsl
jnp
sbb
lods
sarb
daa
rclb
test
test
jge
mov
sbb
cmp
or
fidivs
xchg
imul
shrb
xchg
mov
mov
and
xchg
in
es
mov
faddl
mov
push
mov
out
data16
test
sbb
fistps
insb
test
cmc
outsb
scas
rcrb
dec
dec
or
push
xlat
ret
scas
daa
bound
aaa
movl
int
stc
in
sbb
sub
inc
xchg
cmc
sbb
pop
mov
and
sbb
test
sbb
and
popa
inc
push
mov
outsl
push
aas
test
xchg
aas
push
int3
and
jmp
lods
addr16
push
stos
movsb
mov
in
movl
data16
push
mov
cmp
push
cwtl
mov
shlb
xor
inc
dec
cwtl
sbb
cli
cmpsl
bound
adc
jge
int3
test
and
dec
inc
mov
or
xor
aaa
lods
mov
outsl
cmp
pop
push
out
mov
bound
adc
inc
xor
or
sbb
xchg
dec
xor
andl
sbbl
jle
adc
push
iret
cs
mov
ret
out
mov
dec
push
mov
xlat
imul
and
aam
add
dec
push
cmp
jl
or
les
pushf
clc
cmp
arpl
shll
add
adc
pop
push
in
mull
das
scas
push
push
vpaddsb
inc
push
mov
push
mov
cwtl
icebp
out
movsl
sbb
mov
mul
cmp
aad
push
mov
lods
loop
xlat
in
sub
ret
aas
out
ds
push
push
mov
out
lock
rcrl
push
push
rorb
and
aas
adc
leave
subl
lds
std
stos
jb
in
cmpsl
pusha
nop
std
xchg
popa
jno
or
fistl
nop
das
dec
mov
rcrl
in
loop
dec
int
mov
xor
aam
dec
and
cmp
aam
cmp
test
mov
xor
mov
inc
fsubrl
lcall
aad
ret
sahf
cld
and
pop
rcrb
xchg
mov
or
sbb
and
add
jo
mov
xchg
jne
popf
mov
dec
jge
repnz
or
dec
popa
pop
mov
sub
cmpsb
cmp
mov
or
aaa
xchg
sub
enter
inc
push
sarb
movsl
test
cmc
js
addr16
sarl
cwtl
inc
xlat
push
cmpsb
jae
inc
fwait
jl
push
mov
popf
movsb
in
xchg
cmp
ja
push
cmp
adc
mov
dec
sti
inc
cmpsb
movsb
mull
push
stos
jmp
inc
xchg
lret
sbb
inc
insl
xor
daa
shrb
hlt
int3
out
or
shlb
lret
xor
add
ljmp
adc
fiadds
dec
jle
jg
adc
test
mov
xchg
mov
dec
sbb
inc
ja
xchg
or
enter
daa
mov
mov
test
pop
pop
imul
mov
ja
insb
pusha
cmp
push
mov
sub
inc
xchg
adcl
aam
mov
mov
int3
push
pushf
adc
aam
sti
pushf
ss
sbb
out
int
cmp
int3
mov
rcll
inc
add
fcomp
cmpb
adc
mov
sub
adc
mov
mov
xchg
call
out
and
push
push
loope
lock
das
out
push
cmp
inc
fsubs
std
fdivrl
in
push
xchg
jno
repz
popa
loopne
out
in
ljmp
shrb
lods
mov
xchg
bound
out
cmpsb
loop
aaa
dec
rolb
inc
sub
jg
mov
sub
dec
xorb
mov
xor
pop
out
xor
shll
jb
inc
sbb
jg
call
adc
sub
ja
jo
outsb
sub
mov
cmp
sbb
push
fildl
push
clc
mov
mov
mov
dec
adcl
clc
jae
add
and
sbb
out
std
mov
out
pusha
scas
add
jne
jecxz
leave
sti
jp
mov
mov
mov
and
ror
add
dec
push
lds
lret
jge
mov
push
xchg
jge
pusha
mov
pop
fmull
mov
in
inc
ret
jae
push
std
iret
mov
add
aad
cltd
fwait
mov
mov
clc
aad
subb
ja
stos
push
jge
mov
popf
jmp
jo
and
daa
fistps
inc
add
bound
cld
and
push
cltd
pop
mov
and
lock
enter
adc
call
mov
add
push
icebp
popa
fbld
jg,pt
or
incb
or
div
jle
sbb
outsl
test
adc
fmuls
scas
cmp
pushf
inc
cmp
stos
jo
popa
xor
mov
inc
xchg
dec
or
ret
pushf
fstpl
push
push
mov
inc
ljmp
push
imul
sub
jecxz
push
insb
or
stc
xchg
xchg
fmuls
mov
les
pusha
movups
cli
inc
pop
xlat
jecxz
jmp
cmc
dec
jno
fcoml
adc
insb
movsl
sub
aam
leave
push
xchg
dec
mov
dec
sub
cld
movb
in
aad
inc
fs
jae
and
push
jp
scas
xor
bound
iret
inc
mov
mov
cmpsb
inc
sub
dec
add
sub
mov
add
cli
mov
jg
push
sub
or
mov
outsl
stc
repnz
add
loope
push
pop
ret
jno
push
or
aas
xchg
sbb
jmp
or
adc
xchg
insb
fcmovbe
ss
mov
fidivrs
xor
lcall
cmp
test
xor
cmp
negb
sbb
push
loop
adc
sbb
inc
sti
and
pusha
jo
lahf
rorl
repz
cmp
and
mov
shll
dec
stos
ficoms
cli
mov
cmp
dec
jecxz
push
add
lret
pop
cmc
in
popa
ficomps
div
lcall
testb
fildll
dec
cld
sarb
test
jne
inc
pop
xlat
gs
fsubr
push
fstpl
mov
or
and
dec
inc
jecxz
scas
dec
mov
mov
mov
xor
dec
jle
mov
xchg
xchg
lds
les
jo
mov
std
cli
fwait
and
in
testl
cld
sarl
mov
scas
les
je
sti
andb
cmp
setno
adc
xor
mov
and
add
inc
cmp
pop
xchg
out
dec
popa
dec
or
sub
and
sub
hlt
inc
sub
xor
pop
lret
std
insb
movsl
aas
or
int
ljmp
outsl
mov
jne
fcompl
mov
sbb
xor
cmpsl
pop
ss
push
ret
sub
adc
movl
adc
jnp
call
sub
dec
lods
rcrl
add
jmp
jge
push
cltd
ljmp
rcrb
int3
dec
das
jae
scas
pop
mov
ss
dec
jmp
insl
pop
lret
lahf
sbb
cmc
ss
subl
addr16
jne
out
or
jbe
clc
or
xorb
hlt
in
xchg
sahf
xor
cmp
outsl
cli
mov
imul
les
cmp
cmpsb
mov
sub
adc
scas
jg
fstp
int3
mov
leave
ds
or
js
inc
and
imul
jecxz
push
xor
jp
adc
ss
pushf
insl
stos
mov
jo
jmp
push
sub
icebp
clc
mov
enter
sqrtps
test
xor
insl
clc
imul
mov
icebp
and
xchg
push
daa
sbb
jg
cmp
sbb
cmp
ret
ret
decl
lods
add
stos
fldcw
cmp
pop
adc
sub
bound
test
xchg
test
or
sbbl
add
fsubrl
adc
mov
sbb
testl
add
adc
adc
cmp
daa
adc
adc
adcb
popf
je
insl
or
lds
daa
jp
negl
movsl
lea
fdivs
repz
ret
shrb
pushf
cmpsl
insl
iret
outsb
inc
dec
sysexit
or
inc
xchg
lret
xor
outsl
ds
jne
into
les
aam
and
sub
es
aaa
aam
mov
cltd
les
add
gs
into
xchg
push
dec
fwait
inc
ret
jge
jb
xchg
dec
mov
movsb
imul
jmp
fld
xchg
inc
movd
mov
or
leave
and
jnp
icebp
clc
shll
or
fstps
push
dec
inc
lea
sub
sub
xchg
push
mov
pop
jnp
outsb
test
push
movsl
pop
xor
dec
movsb
fidivrl
imul
dec
dec
data16
push
pop
sub
mov
mov
in
shll
dec
arpl
xchg
cmp
bound
xor
sbb
inc
dec
or
outsb
in
jge
repz
push
cmpb
xchg
inc
fldt
outsl
lods
aad
dec
hlt
call
stos
jmp
lcall
mov
mov
outsl
inc
inc
add
jge
or
adc
les
jns
inc
cmp
test
loop
jg
ljmp
lea
adc
push
push
bound
sbb
jbe
xchg
adc
frstor
adc
in
cmpsl
xchg
lods
lret
sub
cmp
jb
dec
inc
out
cmp
movsb
daa
in
or
push
add
outsb
adc
jl
jbe
mov
and
inc
or
inc
call
or
push
mov
jecxz
push
jecxz
push
jle
inc
pushf
rcr
sub
or
ret
out
jp
pop
mov
insb
or
mov
and
ja
mov
call
les
and
cs
cli
movsb
clc
mov
in
mov
fdivrs
pop
inc
dec
lcall
pop
push
arpl
lea
imul
add
push
lcall
ret
mov
lret
fstpl
mov
aam
push
xchg
jg
xor
push
mov
ja
lea
hlt
jge
call
out
scas
pop
data16
fs
and
mov
inc
jns
push
and
aam
push
scas
les
push
jno
or
dec
inc
popa
sub
adc
inc
orl
xor
loopne
addr16
nop
fdivrl
and
daa
fwait
xchg
aaa
mov
jnp
inc
sarb
mov
and
cmp
mov
fmulp
xor
hlt
lcall
scas
pushf
outsl
fstl
push
push
pop
call
imul
mov
adc
dec
clc
clc
lret
std
xor
push
push
rcrl
in
sahf
lret
push
adc
nop
jle
subl
pop
push
dec
push
mov
sbb
enter
stos
nop
adc
inc
fs
sub
popf
xchg
or
and
repnz
and
enter
loop
jb
cmc
frstor
lods
shr
pop
mov
ficomps
xor
jecxz
push
shlb
ljmp
out
mov
cld
add
mov
sub
mov
xor
sub
je
xchg
dec
ret
mov
mov
mov
test
jecxz
call
icebp
jl
xchg
aaa
xchg
data16
xchg
outsl
dec
mov
add
subb
in
dec
jle
and
xrelease
push
imul
ret
insl
insb
dec
fcomp
aaa
inc
jge
loope
in
adc
fs
pop
mov
or
push
push
inc
fwait
ret
push
lea
push
mov
xchg
mov
jb
and
mov
mov
push
dec
or
mov
cmpsl
roll
mov
std
arpl
cltd
daa
lcall
loope
sbb
inc
js
inc
pusha
inc
inc
aam
loopne
jns
adc
ret
xor
mov
movsl
cmp
pop
jb
loope
push
out
pop
sbb
gs
fwait
mov
sbb
aaa
jecxz
mov
pop
mov
std
mov
add
nop
test
dec
mov
add
in
sub
dec
mov
int3
xchg
jmp
cmp
or
xchg
jl
scas
mov
inc
jns
mov
out
jge
fsubs
lock
xor
cmc
iret
mov
and
lds
addr16
dec
repnz
or
les
iret
inc
sahf
inc
or
push
pusha
inc
shll
aaa
jp
jg
xchg
mov
pushf
inc
jo
cmc
out
mov
adc
cltd
add
xchg
push
std
cmp
js
xchg
pop
mov
bound
sbb
mov
std
enter
dec
insb
mov
adc
es
fldt
push
fmuls
loop
sbb
ffree
cmp
ds
cltd
stos
xchg
ds
dec
push
mov
or
cmpsl
xor
scas
mov
xor
sub
rclb
pop
out
jp
in
lds
stos
push
xor
push
lahf
fwait
adc
mov
inc
push
aaa
lods
mov
jns
pushf
xchg
mov
xor
add
dec
mov
or
mov
dec
lea
mov
cmp
cmpsb
jg
sbb
and
cmp
adc
fsub
push
pop
rorl
push
les
xor
cltd
pop
je
das
lret
and
ljmp
mov
ss
xchg
into
mov
mov
cmp
cmpsl
outsl
mov
push
shl
jbe
loope
sar
pop
cmpsl
mov
push
mov
aas
cmp
test
outsl
jmp
icebp
outsb
cmp
pop
xor
idivb
inc
xor
inc
insb
nop
adc
inc
jecxz
mov
sahf
es
pop
cmpsl
mov
jge
inc
cwtl
dec
movsb
pop
mov
insl
pop
aas
xor
fistpl
fisubrs
mov
in
mov
cwtl
and
stos
inc
sbbb
mov
mov
aam
pop
sub
daa
ds
inc
lcall
or
adc
fimuls
dec
xlat
jmp
cmpsl
clc
mov
mov
in
adc
mov
inc
mov
ds
das
sbb
dec
jns
push
sbb
and
mov
cmpsl
scas
mov
push
and
movsl
pop
cmp
fiaddl
pop
clc
mov
sbb
lret
pop
xor
sarl
lock
mov
cmp
mov
or
lahf
jb
in
inc
push
pop
scas
outsl
fidivs
jp
std
pop
sbb
or
popf
jl
cmp
xchg
ja
push
push
cli
pop
outsl
dec
sarb
fsub
lock
push
pop
add
push
dec
mov
lods
stos
sbb
daa
lods
jns
loop
push
rcll
fmuls
cmp
into
fwait
addr16
fdiv
ds
cmc
xor
insb
inc
aad
test
ret
add
mov
adc
add
pop
icebp
std
inc
jnp
adc
xchg
enter
pop
jne
stos
pushaw
mov
push
mov
ss
sub
cli
mov
pusha
xchg
pusha
sti
inc
push
push
cmp
out
dec
push
jecxz
or
pop
out
mov
sbb
pop
test
fwait
aam
lods
mov
fdivs
arpl
cmp
push
mov
and
cli
and
clc
pop
adc
inc
daa
stc
loope
lods
xchg
in
dec
inc
cli
inc
outsl
jecxz
fists
and
pop
push
push
aaa
adc
mov
bound
push
push
inc
or
cld
lret
ljmp
ljmp
gs
popa
fs
jo
xchg
xchg
jecxz
iret
stc
or
outsl
bound
xchg
dec
test
add
lret
rolb
ja
sahf
xchg
aad
enter
in
add
push
mov
fsubl
push
shll
fnstsw
adc
jno
test
xchg
cmc
sbb
int
mov
pop
sbb
adc
mov
jmp
pop
jl
and
fs
cwtl
pop
pop
jno
mov
sti
adc
addr16
addl
xlat
bound
pop
mov
xchg
jle
xchg
dec
mov
int3
lret
sbb
scas
sub
inc
adc
jo
pusha
push
jbe
addr16
pop
out
jae
andb
arpl
stc
fdivr
xchg
xadd
lods
pusha
test
sbb
test
push
jae
out
and
sbb
aaa
scas
lcall
in
loope
jno
ljmp
mov
dec
mov
add
cmpsb
and
fmul
push
in
loopne
out
mov
inc
dec
lcall
or
ja
push
repz
or
lods
fs
lahf
test
mov
and
jae
scas
jns
xor
sahf
pushf
out
jmp
fldt
jae
stc
lds
stos
sub
xchg
inc
ja
adc
lods
cli
pop
sub
push
lahf
out
adc
es
and
dec
stc
cmpb
jge
scas
cmpsb
jae
cs
add
lods
mov
aam
pop
jns
adc
mov
out
mov
out
mov
dec
fyl2xp1
daa
pop
notb
test
cli
pop
int3
ret
adc
fdivrp
mov
into
sbb
cwtl
fimull
into
pop
and
add
loopne
dec
loopne
mov
lahf
ljmp
xorb
pop
add
adc
cmpsb
aam
imul
daa
inc
dec
nop
lock
fcompl
loope
pop
pop
scas
lods
divl
jp
cmp
lods
mov
hlt
in
pop
mov
sub
pop
xor
testl
in
xor
mov
pop
sbb
pop
sub
pop
imul
test
cli
repnz
clc
or
push
mov
int3
jb
mov
ret
and
addb
flds
push
divb
xor
pop
sti
dec
test
xchg
xchg
sahf
out
fildl
xchg
stos
and
cmp
imul
sbb
push
rcr
test
ss
pop
adc
mov
pop
jo
sbb
adc
pop
pop
mov
nop
push
fistps
stos
cltd
xlat
sub
pop
ljmp
sbb
add
in
arpl
lods
pop
outsl
popa
insb
dec
insl
dec
pop
icebp
pop
fbld
je
cmp
inc
mov
stos
mov
jo
pop
mov
roll
dec
lods
cli
sub
mulb
fwait
iret
mov
lods
push
sub
dec
mov
movsl
lea
in
adc
mov
negb
add
stos
cmpsl
into
mov
mov
test
push
out
dec
push
fildll
push
lds
pop
gs
cmpsb
sbb
pop
xchg
or
mov
int3
push
lahf
xchg
add
lahf
shrb
push
jmp
mov
sbb
mov
ret
jb
add
jne
push
pop
add
xchg
pusha
sub
or
arpl
clc
cwtl
inc
or
ljmp
arpl
inc
out
pop
sub
sub
in
pop
add
mov
xchg
or
xchg
and
pop
pop
out
daa
inc
dec
ja
sub
xor
jle
jno
mov
pop
fwait
inc
xchg
out
sbb
test
pushf
lahf
int
out
loop
lds
ljmp
cmp
gs
xorl
repz
aad
pop
mov
and
cmp
or
jmp
xchg
insl
xorb
xchg
dec
fwait
cli
push
cmp
cmpl
les
stos
enterw
push
push
outsb
fcmovb
fisttpl
jp
loopne
gs
cld
ja
outsl
outsb
das
iret
cmp
jae
in
test
lcall
insl
dec
add
mov
hlt
out
push
lods
push
test
nop
add
jecxz
sub
iret
imul
sub
filds
jle
fsubrs
add
ficoms
xchg
jmp
jns
or
rcll
cmp
and
push
arpl
daa
imul
test
lret
inc
jbe
call
in
jne
inc
xor
sbb
lcall
scas
pop
pop
inc
popa
pop
stos
or
or
ss
aam
fwait
cmp
outsl
outsb
cmp
pop
sbb
add
add
loopne
out
je
in
and
jbe
dec
mov
lock
xchg
pop
jecxz
ja
adc
icebp
arpl
nopl
cwtl
std
inc
sarl
sbb
pop
cmp
stc
xchg
pop
movsl
les
sbb
pushf
shlb
hlt
cmp
std
cltd
jnp
mov
int
adc
xor
popl
lock
repz
xchg
shrl
lcall
adc
fwait
mov
je
imul
lock
lret
inc
lods
xlat
jge
mov
and
jl
sbb
fcompl
repz
rolb
ds
in
xchg
lods
xor
add
in
sub
rolb
push
shlb
mov
test
pop
xor
repnz
aad
sub
sar
push
and
inc
mov
mov
popf
add
popf
mov
push
add
bound
dec
packuswb
jo
adc
ds
data16
faddl
rolb
lcall
mov
lods
xchg
xor
inc
cmpsl
add
sti
mov
int
ret
xor
das
mov
call
pop
sbb
jb
cld
inc
lcall
scas
jecxz
pop
out
mov
pop
xchg
test
inc
or
jg
dec
popa
arpl
pmuludq
push
ret
inc
push
rolb
jne
add
cld
fsubp
lods
pusha
movsl
nop
pop
push
cmp
add
dec
push
bound
loop
lds
mov
or
mov
aam
ss
ss
repz
in
sar
jno
adc
sub
jg
and
mov
dec
ret
pop
nop
mov
sub
mov
movsl
sub
inc
mov
sbb
ss
pop
icebp
dec
scas
push
jne
movb
lret
lret
pop
inc
in
mov
jmp
pop
xchg
repz
push
add
adc
ja
jnp
movsb
rcl
sbb
inc
or
lret
outsb
jbe
fdivr
sub
inc
push
cmp
sub
xchg
adc
push
test
and
dec
int
dec
sub
es
pop
jno
ds
rcrb
clc
ret
xchg
push
add
call
int
sbb
pop
scas
bound
ss
rcl
inc
mov
pop
in
stos
xorb
and
enter
leave
sbb
mov
cs
enter
stos
div
sbb
mov
frstor
fnstsw
cmc
test
jo
cmp
mov
out
mov
ret
test
in
xchg
jb
lods
and
and
mov
add
pop
jle
imul
adc
and
sbb
cld
data16
pop
insl
xchg
adc
push
jns
xchg
and
bound
cmp
add
mov
jl
in
add
ss
add
and
push
jno
sti
mov
and
jns
mov
push
sbb
inc
in
xchg
lock
push
shll
adc
push
lret
inc
iret
push
rcr
mov
inc
test
insb
imul
mov
fsts
ljmp
dec
lea
xor
sub
inc
jp
jno
push
out
pop
push
rorb
popf
sub
clc
cmp
imul
arpl
mov
sub
add
jns
lock
andb
xchg
ja
cmp
adc
sub
pop
nop
adcb
iret
sti
sbb
sbb
sbb
pop
clc
push
inc
outsb
sub
jg
push
inc
clc
mov
decl
mov
jl
and
and
sarl
out
inc
push
and
push
fsubr
repz
leave
add
mov
sbb
xor
into
push
lahf
jl
xor
les
xchg
or
fistpll
mov
or
jg
xchg
addb
mov
das
push
gs
rolb
fwait
pushf
inc
hlt
pop
call
adc
add
enter
leave
pop
jp
xchg
out
xchg
scas
pop
sbb
cs
inc
or
psubq
sbb
fnsave
pop
pop
push
test
mov
cmpsb
mov
push
mov
shrl
ffreep
imul
les
mov
loop
dec
dec
or
mov
lahf
pop
fcomps
push
stc
sbb
adc
cmp
xor
mov
mov
ljmp
rorl
loopne
adc
inc
jmp
sbb
xor
mov
test
adc
jbe
repz
sub
jb
and
es
shl
jg
or
cmp
or
or
imul
sbb
adc
push
xlat
jg
and
sbb
mov
cmpsl
push
xchg
cmpsl
sub
jle
cmp
adc
repz
push
dec
mov
test
ret
jnp
in
andb
xchg
mov
dec
cmp
cmp
adc
lods
data16
mov
fs
mov
stos
subb
pop
add
sbb
xchg
cmp
inc
lcall
adc
mov
test
scas
sti
dec
clc
cld
inc
lea
fidivrl
xor
fnstsw
jb
lret
aad
inc
call
xor
pop
xor
daa
roll
jmp
jg
xchg
out
int3
outsb
or
jg
ficoml
lds
pushaw
push
stc
adc
scas
push
stos
les
ds
pop
lea
test
cli
pushf
or
mov
add
and
jbe
pusha
xchg
xor
call
jae
pop
sbb
push
cmp
jg
mov
push
fcompl
jb
into
cmp
into
clc
ljmp
or
inc
fdivrs
mov
call
lret
jge
sbb
lods
xchg
adc
mov
pop
xchg
pop
jle
rcr
in
and
adc
shrb
mov
push
mov
jge
lods
jnp
in
nop
jmp
pop
fcomps
scas
cmp
sbb
jb
xorb
dec
movsb
bound
cwtl
push
cmp
mov
mov
sub
sti
push
shll
push
add
inc
adc
cmp
add
xor
inc
fisttps
shrb
lret
movsb
mov
inc
push
pop
mov
shl
movsl
cltd
out
sahf
data16
out
mov
les
shll
lcall
subb
xor
outsl
or
cltd
mov
mov
mov
pusha
xchg
pop
cmc
ret
mov
adc
out
in
imul
test
dec
fmuls
fs
jecxz
mov
ja
dec
test
popa
fcoms
adc
pop
incl
arpl
outsb
xchg
aad
mov
add
sbb
xchg
imul
cs
add
sti
jmp
std
insb
out
decb
insb
mov
js
add
dec
push
pushf
mov
xor
fidivrs
stc
mov
push
push
push
dec
pop
adc
shr
cli
std
jmp
leave
inc
pop
in
inc
jo
xlat
pop
sbb
test
sub
mov
sti
fwait
and
cmp
inc
mov
outsl
ja
xchg
iret
adc
mov
insl
movsb
fucomi
adc
and
dec
push
push
orl
and
inc
rorl
mov
sbb
ret
mov
flds
es
cs
cmpb
sbb
rcll
jne
pop
sbb
mov
das
popa
lcall
les
inc
movsb
cmp
push
mov
fsubrl
mov
mov
icebp
mov
call
clc
add
imul
push
dec
sbb
rolb
sbb
mov
mov
or
int3
mov
push
add
add
add
addl
rolb
sahf
pop
lret
dec
mov
jno
dec
sbb
inc
push
test
push
or
repnz
or
inc
inc
push
mov
xchg
adc
jp
push
mov
jae
inc
xchg
dec
loope
jbe
aam
cmp
push
lcall
dec
in
rorb
mul
xchg
jbe
insb
pop
pop
xchg
stc
sahf
xchg
leave
inc
popa
mov
je
xchg
pop
sbb
cmp
arpl
popf
sahf
mov
pop
ljmp
xor
pushf
fildl
pop
int
inc
repz
andl
push
std
xchg
push
lret
bound
adc
arpl
scas
lods
dec
mov
enter
fnstenv
mov
and
dec
mov
jmp
add
into
aam
in
jmp
mov
xor
xchg
fisttps
dec
xchg
mov
pop
bound
pop
insl
into
pop
rcll
shll
adc
push
xchg
ljmp
jle
enter
inc
add
mov
and
loopne
sbb
cmp
add
out
mov
pop
jge
push
pop
test
arpl
pop
add
aad
es
xchg
fstpt
insb
sbb
outsb
subb
and
int
bound
and
push
mov
outsl
pop
xchg
cmp
and
ror
cmpb
mov
and
out
sub
dec
jae
mov
test
inc
sbb
add
das
xorb
dec
mov
daa
movsl
cli
xlat
jne
push
push
xor
push
loop
jns
pop
repz
dec
movb
sbb
mov
sbb
jnp
mov
or
xchg
sbb
test
fbld
jnp
fwait
jae
xor
fidivrl
test
outsb
ret
sarb
das
lds
fsts
add
mov
pop
cltd
inc
enter
rsqrtps
add
movsb
lret
lahf
dec
pushf
dec
xlat
cltd
jl
les
adc
pop
sub
dec
sbb
ret
jns
aas
sti
xor
int
push
shl
pusha
sub
push
mov
aad
or
dec
sbb
lret
test
cmp
mov
repnz
in
mov
or
negl
sbb
pop
mov
add
fsts
inc
push
or
pop
push
fdivr
int3
add
push
ljmp
adc
xchg
outsb
add
es
sub
or
je
mov
mov
push
add
inc
orl
jo
imul
add
ficoml
add
dec
jle
sbb
adc
aas
test
data16
mov
vrsqrtss
cmp
aaa
inc
arpl
insb
sub
dec
xlat
jns
mov
push
insb
icebp
loop
jmp
inc
xlat
cmp
lret
jle
not
inc
cmp
and
into
in
ret
adc
test
ss
or
fadds
pop
jno
es
jp
movsl
repnz
out
or
in
arpl
ffree
push
jne
scas
incb
call
push
insl
mov
repnz
lock
pushf
xor
fistl
add
sbb
mov
add
scas
push
mov
jae
call
xlat
ja
mov
inc
in
dec
movsb
hlt
fidivrs
bound
push
sbb
add
xor
xor
inc
fstps
test
adc
and
test
inc
mov
xor
jecxz
sbbb
cltd
xchg
and
sub
cmpsl
cmp
dec
je
cmp
std
adc
mov
inc
inc
pop
xor
mov
jno
int
imul
jmp
int3
pop
xor
mov
add
sbb
pop
push
arpl
imul
fcomps
push
pop
dec
mov
pusha
push
adc
mul
mov
jl
js
pop
in
jne
push
in
sarb
ss
mov
pop
ds
jae
sub
jmp
xchg
fxch
popa
push
xchg
mov
lock
mov
xchg
mov
movsb
xchg
hlt
leave
push
scas
out
nop
hlt
clc
or
stos
jl
and
sub
fdivrp
mov
aas
push
inc
lods
shlb
mov
rolb
inc
call
sub
sbb
xchg
sbb
dec
or
int3
pop
movsb
cmp
repnz
arpl
cmpsb
xchg
leave
lds
call
cmpsb
roll
inc
repnz
inc
jge
dec
xlat
sahf
or
std
out
cmp
xchg
ss
mov
ja
inc
mov
mov
xor
jnp
mov
fcoml
jmp
inc
push
pusha
loopne
popf
sahf
jae
fwait
add
pop
xchg
xchg
cltd
mov
add
mov
mov
sbb
jno
lea
loop
fmul
ljmp
outsl
push
sbb
ljmp
adc
fldenv
xchg
mov
call
rclb
sti
lcall
push
jge
xchg
mov
loop
inc
stos
out
adc
cmp
adc
mov
xchg
js
call
mov
and
dec
add
cld
pop
cld
sbb
sbb
push
add
jae
insl
push
jp
jp
fisubl
and
testb
popa
ss
test
insl
movsb
mov
in
adc
repnz
outsb
add
ss
add
mov
pop
push
mov
xchg
loopne
ja
or
mov
cmpsl
add
icebp
in
push
cli
ds
pop
sbb
scas
push
mov
lea
movsb
xor
sahf
mov
ljmp
lea
xchg
pop
xchg
xchg
in
cmp
jecxz
ret
sbb
cmp
xor
jmp
aaa
adc
nop
in
push
aaa
sbb
pop
sbb
push
shlb
and
sub
movsl
sbb
sub
inc
imul
push
xor
leave
mov
cmp
xchg
sub
or
test
push
inc
orb
cli
add
pop
nop
adc
int3
imul
xchg
dec
out
je
loop
popa
xchg
jecxz
sub
and
or
and
cmp
add
mov
or
push
cmp
sbb
addr16
add
repz
xchg
into
testb
pop
shlb
scas
mov
or
insl
mov
jno
and
in
sarl
mov
out
das
in
sbb
jg
xchg
add
lods
jno
sbb
dec
add
sub
and
popf
mov
loope
mov
aam
mov
cwtl
add
push
mov
xchg
fwait
sbb
stos
test
sbb
add
sub
addl
push
or
loop
notb
pop
das
cmc
das
jg
or
adc
pop
jg
sahf
in
les
xchg
das
pop
xlat
pusha
xor
rcr
dec
or
aad
je
aas
cmp
sbb
les
and
sbb
and
inc
or
and
movsb
mov
dec
mov
lea
push
stos
xor
fidivrl
ss
mov
sub
push
cmp
add
fisttpl
mov
jmp
stos
and
adc
push
dec
sbb
xorl
dec
ljmp
fsubl
rcl
int3
fnsave
mov
xor
call
fcmovnb
das
xor
push
dec
outsb
in
or
dec
pusha
push
adc
jb
jo
movl
pusha
cwtl
test
xor
and
xchg
flds
out
in
inc
mov
sub
mov
add
sbb
nop
repz
xor
hlt
out
test
ret
mov
gs
add
add
jle
inc
mov
jp
add
push
lea
sub
pop
daa
sub
inc
jb
test
flds
in
and
cmp
mov
sti
xor
push
aam
rclb
xlat
daa
in
xchg
pop
mov
psadbw
xor
dec
shl
pop
push
adc
xchg
imul
adc
loope
pop
sub
fcomps
inc
adc
cmp
sbbl
pushf
add
dec
je
mov
mov
cmp
sub
outsb
insl
pop
sbb
cwtl
pop
pop
pop
xlat
mov
insl
in
add
push
push
in
pop
sbb
xchg
push
sub
xor
fnstsw
push
mov
insb
pushf
aaa
shr
push
clc
sbb
pushl
and
mov
iret
imul
enter
mov
or
cmp
call
jb
adc
loopne
mov
nop
mov
xor
bound
fisubl
sbb
fidivrl
iret
sbb
jp
sub
inc
pop
jns
jl
fadd
cmp
addr16
xor
sub
je
push
test
rep
jno
insl
out
inc
xchg
lds
ljmp
addl
lahf
out
fsubrs
dec
aam
dec
inc
lret
adc
mov
mov
imul
mov
inc
or
xchg
push
lea
mov
loopne
adc
dec
push
sub
lret
fucomip
adc
inc
or
test
cmc
xor
pop
xchg
pop
aad
xchg
cmp
jmp
aam
in
or
cmpsl
push
pop
add
and
lea
jg
push
pusha
jb
and
lock
cmc
js
pop
int3
pop
adc
mov
or
mov
fisttpll
iret
cmp
or
enter
and
test
out
or
add
insl
nop
sbb
out
pop
xchg
xor
hlt
outsl
scas
int3
ret
mov
negl
outsb
pop
ja
cmpsl
push
push
cmpsl
aaa
mov
fdivl
fdivrp
into
xchg
andl
mov
ret
fistl
test
aas
add
mov
movsl
xrelease
sahf
push
or
sub
pop
or
push
push
adc
mov
inc
in
push
aas
fidivrs
jnp
pop
xchg
lcall
iret
jl
repz
lret
das
dec
movsl
fs
cmpsl
imul
cwtl
stos
int
dec
dec
nop
or
jge
inc
mov
sub
adc
test
je
popl
mov
xchg
aas
mov
xchg
out
repz
jp
jns
dec
scas
insb
shl
xchg
stc
fsubp
cmp
lahf
cld
sub
imul
ljmp
sub
dec
push
inc
scas
imul
inc
addb
xchg
add
cmp
cmp
adc
xor
cmpsl
sbb
cmp
ror
sub
xor
sub
jno
movsl
mov
rcpps
sbb
jnp
lock
pushf
lahf
ja
into
cmp
pop
insl
imul
mov
das
mov
data16
int
scas
dec
stc
cmpsb
ret
push
adc
mov
mov
xor
xchg
jge
fsubl
xchg
and
add
sub
pop
outsl
test
jns
rorl
dec
lods
inc
je
js
mov
out
mov
push
insl
call
push
xchg
imul
popa
mov
jno
lods
xor
inc
fsubrs
ds
dec
imul
dec
ljmp
in
push
popf
jg
insl
ja
mov
and
mov
out
mov
pop
lds
sbb
mov
inc
data16
pop
inc
pop
jg
xchg
xor
jg
lods
lock
jb
ret
mov
push
xor
scas
out
mov
call
shrb
xor
out
repnz
int3
repnz
push
fwait
push
dec
xchg
lret
test
fistpl
mov
xchg
sub
xchg
lods
add
out
shrb
hlt
loopne
inc
add
and
xor
push
jo
imul
sbb
imul
shrb
xor
push
inc
jp
add
mov
push
push
popf
pop
rolb
fldenv
sbb
xor
xor
and
aaa
adc
jge
mov
imul
insb
stos
xchg
push
movsl
cmp
jmp
jbe
push
jge
orb
mov
pushf
ss
pop
xchg
std
cld
inc
inc
in
inc
pop
aad
mov
movsl
or
dec
and
jb
and
and
or
nopl
in
shll
xchg
cld
jnp
and
cli
hlt
int3
mov
scas
pop
dec
movb
mov
test
mov
fisubl
pushf
sub
js
push
xor
lea
lods
add
dec
or
add
add
into
jg
fadds
and
and
lahf
pop
js
fildl
lcall
dec
cmp
mov
iret
aad
sub
sbb
adc
mov
mov
push
push
scas
inc
jb
shrl
sbb
ss
xor
push
arpl
mov
or
hlt
lea
in
cmpsb
notl
jae
ss
bound
orl
mov
sub
pop
cmpsl
add
push
sub
stc
xchg
stos
add
fcmovnb
xorb
in
xlat
sub
test
repnz
mov
jmp
and
push
pop
into
adc
mov
or
enter
lea
mov
inc
cmpsl
pop
sub
std
pop
test
adc
mov
movsb
jnp
cmpsl
jmp
mov
lds
sub
sbb
sbb
jecxz
cmpsl
xchg
xchg
jle
push
xor
jp
ucomiss
xchg
es
ret
pop
mov
fmul
xchg
nop
pop
addr16
sub
movsl
inc
add
dec
fisttps
mov
mov
popa
addr16
ljmp
xor
jecxz
add
xor
fninit
jl
add
icebp
and
add
push
add
pop
stos
inc
mov
stos
jp
mov
xor
xchg
pop
fnstcw
pop
test
xchg
and
cmp
jg
in
xchg
fxch
out
jne
xor
pop
shl
push
add
imul
mov
into
clc
stc
cli
fnclex
add
lret
test
xchg
pop
test
push
ficoms
lahf
jo
push
testl
xchg
aas
xchg
pushf
jmp
xlat
xor
clc
and
push
or
data16
sbb
mov
xchg
mov
and
push
push
mov
mov
imul
pop
lods
cmp
or
in
das
cltd
dec
pop
and
negb
cld
dec
or
inc
xor
mov
inc
in
or
test
sbb
add
jo
jg
in
xchg
xchg
jnp
mulb
arpl
fcoml
test
adc
es
outsl
inc
pop
push
scas
inc
sahf
xchg
push
pop
stos
rcl
sbb
mov
or
jns
xchg
dec
push
pop
fildll
sub
pop
dec
jne
add
lds
addl
mov
leave
adc
mov
jnp
jp
or
mov
andb
je
push
sub
add
jecxz
and
sti
mov
push
mov
mov
aad
pop
movl
stos
jle
cltd
cmp
test
imulb
or
mov
sub
outsl
lcall
push
xor
pop
sbb
push
lods
mov
xorb
pop
and
sub
jp
jbe
add
jmp
inc
je
jno
push
test
mov
adc
sbb
daa
stos
cmpb
add
cmp
cmp
std
xchg
cmp
cmpsb
and
inc
jg
xchg
nop
scas
jnp
testl
lea
push
push
dec
mov
fistps
push
mov
jnp
popf
lret
pop
arpl
mov
out
call
in
scas
inc
push
xchg
jne
adc
sahf
fwait
jmp
aaa
mov
dec
movsb
xor
mov
mov
add
rcrb
es
xchg
mov
cmpsl
jo
cmp
into
sub
jmp
les
jns
and
mov
int
mov
jmp
pusha
jo
test
push
ljmp
ror
lods
bound
dec
nop
jmp
jae
or
jp
mov
dec
sbb
movsb
mov
sub
in
loope
adc
dec
fsubr
lret
hlt
and
adc
outsl
cmp
fnstsw
addr16
add
pusha
jne
das
add
and
push
test
add
pop
xchg
add
cmpsl
xchg
sar
or
mov
inc
sub
movsl
xor
xchg
jecxz
bound
fcom
jmp
or
std
jl
mov
fsubs
ss
mov
sarl
inc
insl
shrb
add
add
lret
sub
jae
pop
jp
add
into
xlat
mov
fildl
xchg
lods
sub
xor
iret
imul
push
sbb
sbb
or
in
imul
std
push
adc
jg
push
mov
mov
lret
mov
mov
jge
imul
mov
or
int
lret
out
shlb
jo
iret
gs
mov
outsl
jge
ljmp
add
sub
or
inc
push
push
cmpsb
mov
xchg
scas
cli
movsb
mov
testl
arpl
sub
and
mov
push
mov
lret
insb
repz
les
outsb
mov
push
jbe
das
aas
adc
jns
adc
adc
xacquire
mov
mov
dec
jmp
xor
int3
jb
xchg
arpl
mov
scas
pushf
add
adc
clc
push
mov
mov
add
cmp
inc
fisubs
pop
and
cmpl
and
and
mov
mov
xchg
xor
scas
mov
daa
and
mov
into
cwtl
inc
mov
jp
stos
int3
andl
and
jle
pusha
jl
stc
push
sbb
mov
xor
xchg
les
mov
out
push
jae
and
xchg
or
in
mov
mov
mov
mov
or
fidivrl
leave
imul
push
xor
and
pusha
pop
push
push
movsb
stos
jmp
fnstenv
ror
or
jl
stos
lea
into
flds
push
mov
or
fsubrp
hlt
mov
pop
or
dec
pop
pusha
xchg
pop
mov
loopne
enter
mov
mov
cmp
jge
mov
push
daa
decb
mov
jl
mov
mov
dec
add
ret
repnz
and
sbb
fldcw
stos
lahf
sub
repz
pop
cld
dec
dec
mov
inc
push
addl
xor
cmp
fidivrl
jg
shrl
add
push
decl
jg
adc
rolb
test
dec
lahf
cmp
xlat
add
sbb
out
and
lret
push
lods
inc
inc
cmp
shlb
pop
mov
sbb
jecxz
das
pop
add
aas
sbb
xor
inc
idivl
sub
sbb
fsubrl
outsl
clc
popa
jle
pop
bound
xor
jg
lods
pop
xchg
cltd
xor
in
dec
push
mov
xor
inc
xor
cmp
pop
test
xchg
sbbl
dec
mov
xor
bound
and
dec
xchg
gs
push
inc
jno
mov
jnp
fcmove
inc
mov
lea
pop
push
inc
inc
pop
cmpsb
pop
aad
and
mov
flds
jno
enter
jp
mov
outsl
mov
lahf
adc
lcall
fbstp
jecxz
add
pop
pushf
orb
jns
idivb
aaa
pop
xchg
out
ss
or
and
mov
fmull
out
lret
loop
xchg
dec
and
imul
mov
mov
jb
je
bound
push
iret
add
cmp
and
pop
push
sbb
outsl
rcrl
leave
mov
xchg
and
sbb
ss
lods
jbe
in
in
scas
push
repnz
xorl
call
outsl
push
ret
in
into
ret
mov
mov
inc
insl
mov
lods
outsb
sbb
imul
or
mov
pushf
sbb
popa
out
jb
outsl
fwait
or
xor
and
pop
inc
mov
adc
dec
filds
roll
mov
pushf
insl
xor
cmp
repz
aam
and
sbbb
and
popf
rclb
push
sti
into
cmp
mov
stos
test
sbb
xchg
cmpsb
inc
subb
pop
cmp
inc
jo
loopne
mov
dec
jle
sub
test
adc
cltd
stos
inc
movsb
inc
movsl
lret
or
mov
mov
or
or
adc
or
outsl
or
shlb
xor
xor
push
adc
out
push
jmp
push
mov
pop
sub
shll
shll
mov
inc
test
pusha
cmc
fisubs
dec
mov
add
movsbl
jecxz
mov
adc
mov
xor
out
enter
in
loope
out
negb
pop
xchg
in
jb
icebp
sub
fadd
not
sub
pop
mov
xchg
sbb
mov
repnz
dec
scas
cmp
sbb
pop
daa
ja
sbb
xorl
test
adc
or
aas
inc
sbb
mul
loop
out
mov
in
les
in
pop
push
out
or
xor
repz
inc
scas
xchg
push
add
pop
push
mov
shll
sub
push
mov
cli
das
fstpl
push
dec
movsl
xchg
in
lret
cmp
push
scas
dec
inc
mov
or
sbb
in
jbe
xchg
lcall
cmp
and
test
les
xchg
mov
movsb
pop
mov
pop
daa
rcll
sahf
mov
and
inc
dec
sub
inc
imul
cmp
dec
popf
and
enter
push
sub
xchg
pop
mov
js
sarl
inc
add
dec
add
outsl
addb
popf
aam
xchg
xor
jae
movsb
dec
jbe
popf
add
sbb
pop
in
mov
lea
scas
repz
pop
sub
dec
and
or
jle
xor
inc
fs
jo
sbb
out
xchg
inc
in
pop
mov
xorb
mov
scas
mov
or
stos
movsl
lock
lods
push
popa
push
jb
push
xlat
pop
xor
xor
jle
roll
push
xchg
pop
enter
movsb
mov
int
movsb
or
jns
ficompl
sub
sub
pushf
test
mov
sbb
mov
sbb
jmp
xchg
les
sbb
imul
mov
in
or
insl
adc
fcmovnu
mov
fisttps
sbb
push
ret
insl
adc
adc
push
adc
movsb
cli
dec
mov
fmuls
jecxz
mov
add
pop
loop
xchg
aas
mov
fxch
lea
enter
test
inc
pop
xchg
adc
sahf
imull
lahf
or
xor
das
adc
xchg
pop
mov
push
jae
rorl
xchg
icebp
les
ss
clc
rclb
and
add
dec
cltd
mov
inc
dec
test
add
les
adc
mov
or
xor
adc
push
jle
movsb
or
shl
xor
rol
lods
push
cmpsb
pop
jecxz
sbb
jb
cmp
inc
call
test
cmpsl
jne
cmp
inc
xchg
add
pop
mov
mov
and
mov
pop
pop
dec
addr16
sub
bswap
xor
rclb
int3
cltd
mov
jmp
stos
jo
test
and
xor
pop
in
adcb
xor
sub
adc
stc
clc
mov
xlat
jl
sbb
adc
and
mov
inc
into
es
jb
jb
or
xor
add
rorl
rcll
inc
lods
sub
test
mov
int3
dec
jae
pop
std
test
sbbl
into
xchg
xchg
pusha
push
fbstp
xlat
fiadds
jbe
sar
push
mov
dec
test
test
popf
and
das
test
outsb
insb
cmp
mov
pop
cmp
jmp
mov
cld
ror
ss
pop
shlb
inc
arpl
sub
out
sub
add
jnp
in
sarl
adc
jnp
pop
jb
inc
mov
aas
ficomps
fisttpl
test
and
cmpsb
adc
push
pop
and
xchg
push
sti
ret
cld
jle
inc
daa
push
sbb
lods
loope
and
add
popa
arpl
add
or
sbb
or
ficoms
push
or
std
dec
aas
pop
shl
repz
jp
icebp
loop
sti
hlt
push
repnz
or
mov
aam
aas
pop
inc
jecxz
push
fisubs
or
test
fmulp
mov
mov
out
scas
push
daa
enter
jmp
jg
mov
rclb
loop
or
stc
sub
aad
sahf
addr16
pop
rep
iret
jmp
arpl
xor
push
nop
fdivrs
icebp
pop
adc
scas
aas
mov
push
stc
and
push
bound
int
push
fisubrl
in
pop
cmpsl
jge
jae
sbb
lods
mov
push
pop
push
fstpl
sbb
xchg
movsl
jns
push
sbb
and
jne
adc
mov
gs
out
imul
in
das
xchg
sbb
and
jns
sahf
cmpsl
dec
inc
sbb
jno
jb
loopne
sub
jno
push
ljmp
mov
pop
aas
inc
sbb
or
scas
aad
loope
and
fdivr
jecxz
or
icebp
cmp
es
pop
xor
ja
sub
cmpsb
stos
nop
xor
fcompl
cmpsl
test
or
mov
outsb
mov
arpl
mov
pop
adc
mov
pop
lea
test
shrl
add
inc
repz
cmp
popa
pop
sbb
daa
repnz
int3
aaa
mov
popa
sbb
mov
out
fucomip
mov
pop
inc
mov
scas
jle
ret
out
sti
add
int3
mov
push
insl
iret
pop
mov
cs
xchg
pushf
mov
push
fidivl
hlt
pop
mov
daa
mov
and
mov
xchg
sahf
or
lds
int
loope
in
dec
out
pop
cmc
lret
cmp
daa
cmp
dec
jmp
cld
ja
adc
sub
inc
jns
pop
push
mov
ja
and
pop
xor
imul
out
out
cmpsb
inc
cmpsl
cwtl
imul
fnstenv
inc
aad
dec
scas
int
sbb
mov
fmul
dec
xor
push
fs
and
outsl
mov
pop
in
inc
dec
push
mov
sbb
pop
outsl
sub
pop
ja
mov
or
pop
push
or
mov
jp
lods
mov
or
daa
pop
adc
mov
mov
mov
das
jno
jge
xor
inc
fs
xchg
and
enter
adc
imul
fidivrs
xchg
cmp
fdivs
lock
fwait
push
lret
mov
cmp
arpl
xchg
inc
mov
fnstsw
ret
pop
idivl
aas
and
stos
call
aas
mov
sbb
scas
jne
pop
inc
push
xchg
insb
outsb
jg
lods
imul
fidivl
ficomps
or
lret
test
or
into
or
xchg
pop
or
push
xor
imul
mov
mov
es
add
push
int3
cmc
ljmp
jmp
sub
out
or
ret
pop
jp
mov
mov
add
mul
or
jg
stos
mov
push
xor
xchg
fisttpl
mov
or
mov
ret
popf
outsb
xchg
clc
jge
outsb
or
xchg
or
repz
mov
pusha
daa
mov
jnp
testb
add
or
movsl
jnp
mov
inc
lcall
fs
adc
stc
adc
pop
loope
mov
inc
cmpsl
out
mov
subb
sub
mov
dec
faddl
punpckldq
push
mov
out
insb
lods
addb
jno
jg
mov
push
bound
pop
mov
lret
cld
std
test
add
sbb
sub
xchg
mov
lock
sbb
xchg
inc
fldln2
pop
lods
rcr
push
dec
pop
js
push
cmc
fnstsw
jo
sub
leave
sub
or
sub
dec
cwtl
jne
cmp
add
xchg
jo
es
insb
jle
lcall
movsl
xchg
cmp
dec
mov
mov
out
lods
jmp
dec
adc
inc
ds
and
shld
add
inc
shrb
mov
dec
imul
adc
out
das
rolb
js
pop
jo
mov
flds
js
mov
pop
outsb
in
ds
pop
int3
push
cmp
rcll
lds
adc
daa
dec
sub
in
pushf
mov
out
add
xchg
pop
loopne
das
addr16
ret
sti
mov
push
cmp
pop
pop
scas
je
loopne
shlb
test
and
or
lods
dec
xor
sub
mov
or
sbb
and
cmp
aam
dec
loopne
mov
movsl
rorl
es
call
ljmp
jo
inc
popa
ret
mov
push
sbb
mov
jnp
test
xor
mov
push
icebp
xchg
ficompl
in
xchg
in
imul
ja
xchg
call
scas
jmp
sbbl
mov
inc
daa
insb
lcall
testb
jecxz
loop
mov
rcl
loop
and
and
nop
sarb
xchg
outsl
arpl
das
sbb
sbb
pop
cs
aas
fstl
push
mov
cmc
pop
sub
dec
test
dec
lahf
incl
stos
dec
lret
sub
xor
lds
fadds
rcrl
jbe
xchg
mov
mov
std
jnp
in
cmpsl
or
bound
dec
jb
add
sub
mov
sbb
into
repz
jp
les
mov
xchg
lret
jo
and
sub
sub
xor
insb
decb
mov
sbb
adc
or
idiv
mov
movsl
jecxz
xchg
leave
hlt
mov
pusha
jo
sub
ljmp
xlat
sub
es
cmp
shrl
mov
push
xchg
lret
loopne
push
inc
test
lods
xor
lret
mov
xchg
add
adc
lea
sbb
mov
fucompp
test
fsubl
pause
mov
les
stc
add
int3
dec
aaa
mov
daa
pop
push
xchg
pop
iret
fmuls
mov
adc
arpl
ss
push
scas
pop
push
cmpsl
notb
and
sbb
jnp
es
leave
mov
jecxz
mov
scas
xlat
mov
es
lret
insl
clc
and
jns
sbb
inc
movsb
enter
add
or
or
sti
push
adc
clc
push
out
mov
adc
je
mov
movsb
repz
jmp
mov
and
cld
or
scas
sub
adc
fdivr
mov
pop
out
jl
pop
in
xor
in
pop
pop
xlat
imul
push
in
and
int
mov
jle
jbe
inc
cmp
jmp
push
cmpsl
push
adc
stos
lock
jge
pop
and
jge
adc
push
sub
outsb
sbb
test
or
sarb
es
in
cltd
lret
dec
lods
subl
mov
mov
xchg
and
lahf
subl
pop
jns
sub
inc
iret
lock
cli
jl
mov
in
inc
fwait
cmp
scas
lods
aaa
mov
nop
xor
ja
mov
shlb
lock
xor
sub
inc
add
mull
call
jns
lcall
sbb
inc
lock
fsub
xchg
cmp
imul
fidivs
and
loopne
scas
sub
dec
fsubs
jmp
mov
xor
outsl
scas
stos
add
addl
lret
add
stc
ds
jmp
stos
lods
xchg
mov
jne
in
dec
sub
cld
inc
insb
and
js
xor
push
fucomp
add
mov
popa
stc
mov
fldcw
cld
inc
sub
xchg
cltd
jle
shlb
ds
ret
mov
out
xchg
gs
push
and
xchg
ja
cmc
pop
les
movsl
mov
jle
sub
shrl
fadds
addr16
scas
sbb
sti
out
sub
and
or
out
pop
rorl
outsb
push
xchg
jo
cs
adc
push
or
xor
aas
and
lds
ljmp
cmp
jae,pn
push
std
cmc
int3
adc
jo
shrl
jnp
cmp
and
test
and
aam
push
popa
push
xchg
jno
mov
push
or
pop
outsl
scas
sbb
inc
outsb
or
add
or
imul
pop
nop
xchg
inc
ret
out
push
mov
jbe,pt
cmc
pop
xor
mov
aas
inc
xchg
mov
cld
jbe
addr16
mov
adc
dec
push
xchg
xchg
addr16
mov
jne
out
xor
mov
cmp
inc
mov
aas
lret
jo
dec
or
adc
es
mov
jae
or
pop
jbe
xor
or
gs
and
xchg
scas
xchg
jl
fs
dec
cmp
or
and
add
fdiv
sahf
mov
pusha
ds
cmpsb
movsl
rorb
dec
in
cld
out
xor
pop
add
push
stos
ficompl
inc
inc
les
pusha
cmpps
leave
filds
push
hlt
f2xm1
xor
and
jl
xor
arpl
mov
dec
sub
jns
fs
popf
mov
fdivl
mov
scas
ljmp
mov
cmp
cmc
and
enter
jb
jle
cmpsl
jns
mov
js
stc
arpl
repnz
dec
mov
test
mov
in
shrl
lods
insl
lods
orb
xchg
lods
sub
test
xor
sub
xchg
stmxcsr
or
xchg
push
adc
pop
dec
dec
cmp
push
xchg
dec
mov
pop
lods
ljmp
movl
mov
push
cwtl
rcll
fsubp
jmp
pop
test
clc
cwtl
shll
push
xchg
push
imul
inc
cltd
mov
xor
fistpll
loope
mov
aam
mov
or
mov
imul
sti
xchg
xchg
fsubrp
pop
lods
push
pop
loope
outsl
shll
mov
loopne
ficoml
stos
xor
or
fstps
push
imul
cmp
xchg
mov
mov
adc
addl
pop
add
add
and
rolb
je
mov
js
ss
leave
cmp
push
push
inc
test
movsb
outsl
dec
jno
je
leave
ljmp
jle
or
out
push
mov
sbb
dec
es
mov
mov
mov
dec
xchg
cwtl
inc
mov
in
sahf
add
or
push
hlt
pop
pop
repz
cli
sbb
idivb
adc
stc
nop
jno,pn
fcoml
xor
mov
jo
jmp
cltd
std
mov
stc
jge
enter
das
sbb
cwtl
shll
rorl
xor
hlt
adc
pop
scas
mov
jmp
sbb
pop
adc
push
mov
fcompl
or
or
mov
pop
xchg
filds
daa
sbb
mov
or
adc
jmp
and
lret
rcl
out
xchg
clc
pextrw
xor
cmpsl
ja
jns
inc
pop
dec
ret
or
sahf
or
pop
aas
sub
sbb
cmpsl
outsb
lret
andb
pop
scas
add
pop
pop
push
fsts
push
sbb
xor
fdiv
mov
cwtl
xor
clc
lcall
and
cmpsl
pop
out
jne
loopne
jg
add
aaa
shl
mov
cmp
int
sti
mov
add
out
in
lods
ret
or
loope
lds
sbb
nop
stc
push
lea
pop
mov
das
xor
inc
sbb
cmpsl
xchg
mov
incb
jmp
dec
cmp
xorb
xchg
add
add
leave
cmp
jb
jle
jnp
push
xorl
daa
sub
xchg
enter
fdivs
mov
into
ds
fildll
repnz
shrb
jp
push
loop
cltd
or
rcrb
inc
pop
sub
cwtl
adc
int
je
daa
stos
movsb
or
inc
das
pop
test
lea
add
pop
pop
jb
mov
dec
mov
mov
in
pop
imul
sub
inc
lret
fadds
push
out
sbbl
add
sub
push
int3
mov
and
mov
addr16
and
imul
call
add
mov
mov
push
ret
jne
lret
xor
or
xchg
enter
inc
les
dec
push
in
cmc
sub
jp
inc
push
pop
ds
repnz
mov
sub
inc
cltd
push
mov
mov
fisttpl
mov
or
mov
dec
je
pop
cmc
xchg
jecxz
jne,pn
and
sti
pop
sub
push
cmpb
pop
je
cmp
movb
xchg
mov
or
cmp
ret
push
loop
loopne
test
int3
dec
sub
je
mov
test
into
imul
hlt
insb
dec
and
inc
icebp
adc
sub
and
jnp
pop
xchg
fwait
test
mov
jno
leave
mov
sub
sub
test
add
jl
mov
lea
mov
dec
mov
les
adc
push
in
dec
mov
divl
cmp
pop
dec
xchg
insl
fmull
pop
aas
shl
mov
insb
popa
add
fs
and
xchg
mov
dec
or
stos
xchg
roll
jns
lahf
loop
pop
or
cmp
and
ds
sub
or
cmpb
in
idivl
popf
or
pop
mov
and
push
jno
pop
loopne
mov
dec
pop
fucomi
pop
xor
pop
xchg
insl
and
mov
iret
mov
les
cmp
aad
fdivrl
and
inc
push
jb
push
into
dec
aam
outsl
jns
cltd
adc
rol
and
sbb
js
mov
mov
repnz
mov
add
lcall
adc
and
inc
mov
mov
popa
cmp
lods
stc
push
or
data16
popa
rolb
cmp
pushf
dec
and
lret
sub
inc
and
mov
add
and
sbb
push
cmp
and
push
icebp
jo
jl
push
mov
data16
addr16
mov
adc
mov
ret
aaa
sbb
xor
mov
pop
pop
imul
xchg
xlat
scas
xor
sbb
cmp
pushf
pop
mov
dec
cmpb
and
and
jmp
and
push
lret
sub
xlat
push
sahf
int
push
mov
push
out
sub
int
push
or
dec
enter
or
adcb
ljmp
cmp
hlt
rcrb
stc
push
in
mov
aad
cmp
mov
rcrb
enter
insb
nop
and
push
or
and
lock
cli
adc
inc
jle
stos
ret
cs
inc
aas
mov
or
je
sbb
cmp
pop
cltd
mov
subb
cmpsl
aas
mov
lock
in
cltd
lret
mov
mov
jns
les
aad
ror
push
imul
orb
idivl
into
push
mov
sub
jae
mov
das
push
repz
mov
orl
jne
push
into
mov
sub
jp
jp
mov
jmp
in
cmp
rep
push
mov
add
pop
xchg
insl
mov
ss
cmp
pop
into
inc
iret
ss
push
loope
jne
fildll
daa
push
mov
sbb
int
fisubrs
fstpt
jecxz
push
in
rorb
adcb
mov
push
sarb
jno
xlat
cmp
xorb
xor
inc
mov
jmp
aad
add
inc
and
bound
mov
xchg
jmp
int
aad
cmpsb
rorb
inc
into
addr16
into
loop
mov
loope
cmp
mov
dec
imulb
out
notl
adc
dec
clc
jmp
fwait
mov
sub
aas
inc
jmp
mov
and
xchg
popf
cmp
negb
push
mov
inc
icebp
cmp
cmp
das
movsl
mov
sbb
imulb
int
ret
fmuls
hlt
inc
inc
stos
gs
in
dec
push
into
sbb
subl
inc
jecxz
sub
fs
fs
xchg
push
jne
cmp
test
jo
jae
mov
mov
fldl
push
insl
popa
shll
cmp
add
loope
add
add
add
add
mov
mov
addr16
inc
in
in
enter
mov
cmp
push
xchg
xchg
movaps
inc
adc
ret
cltd
test
mov
sarl
or
xor
jo
in
push
mov
out
xlat
and
xor
fsin
icebp
cmp
cmp
call
inc
inc
inc
clc
in
sub
arpl
xor
pusha
jmp
mull
cwtl
addb
je
pop
jl
cmp
mov
int3
inc
mov
mov
mov
outsl
mov
imul
pushf
popf
out
inc
clc
xchg
mov
je
mov
mov
movl
gs
lods
inc
adc
mov
dec
iret
xchg
jns
inc
push
jl
cmp
inc
clc
adc
push
outsb
out
iret
inc
aam
sbb
pop
adc
es
dec
hlt
dec
lods
lcall
fmull
pop
xchg
push
leave
add
pop
jg
js
fimuls
xor
int
push
xchg
pop
into
rclb
inc
mov
jp
in
mov
fs
or
inc
mov
iret
inc
pop
in
push
aaa
mov
pop
xor
pushf
into
movsb
ja
fs
fnstsw
cs
xchg
and
xchg
int
mov
mov
cmpsb
das
cmp
jecxz
or
rol
inc
into
cmc
cmp
rolb
jp,pt
xchg
dec
mov
out
pop
jb
int
xchg
jp
fwait
push
jp
xor
ds
dec
adc
lcall
das
or
mov
xor
mov
and
push
es
loope
jne
cmc
nop
std
pop
jno
push
cmp
notl
or
or
jp
add
stos
fcomps
notb
mov
ds
mov
cmp
stc
jl
inc
xor
imul
dec
xor
pop
or
inc
push
pop
pushf
fldl
and
push
flds
push
add
jmp
jbe
movsl
mov
add
sub
cs
pusha
call
mov
out
mov
push
or
pop
inc
loope
cmpsb
in
faddl
ret
lcall
xchg
jb
decb
inc
pushf
rclb
pop
push
jbe
pop
mull
xor
xchg
push
cs
mov
repnz
mov
pop
fcoml
pop
dec
sahf
add
lock
int
scas
sbb
out
mov
sbb
aam
cmpsb
push
add
repz
mov
pop
pop
cmc
add
bound
les
mov
or
dec
cmp
mov
mov
pusha
sbb
test
les
ds
int3
mov
out
aaa
jno
dec
mov
lods
xorl
push
in
or
out
fsubrs
fdivl
cmp
stos
loopne
dec
ds
mov
aas
sub
inc
mov
mov
xchg
mov
jno
cmp
dec
mov
lea
mov
and
mov
or
push
xchg
push
shrb
stc
or
xor
loopne
aam
cmp
bound
adc
pop
sub
and
mov
outsb
lahf
inc
inc
out
sub
fsts
cs
add
stc
inc
sbb
fisttpl
mov
aad
pop
xchg
or
dec
cmp
lahf
mov
stos
sub
mov
movsl
ljmp
inc
mov
pushf
xor
cmpsl
int3
pusha
movb
dec
sahf
and
mov
and
pop
into
mov
scas
leave
outsl
lods
insl
fimull
sub
pop
int
lock
push
xor
in
cmp
and
or
les
cltd
enter
stos
out
mov
mov
lods
jg
gs
xchg
fsubl
scas
movsb
out
cld
popf
std
push
jb
iret
outsl
cmc
cmp
aam
call
or
ret
mov
pop
mov
aad
inc
mov
int
dec
ss
push
sbb
push
rcll
shl
push
dec
scas
jbe
add
jmp
test
imul
xchg
jp
aad
test
roll
or
fmull
imul
in
stos
repnz
sub
andb
aad
sub
inc
or
sbb
loopne
andb
popf
add
or
gs
lods
push
clc
gs
sub
cmpsl
cmp
stos
and
xchg
jp
push
clc
hlt
mov
pop
addr16
nop
mov
mov
into
cmp
cli
notb
xchg
sti
adc
cmp
loop
sbb
xchg
mov
int
ja
adc
push
mov
or
xchg
repnz
adc
into
sbb
rcl
lahf
arpl
lock
lds
and
lods
or
jmp
daa
inc
test
aam
cmpb
in
xchg
in
mov
lods
cmp
or
and
std
xor
sub
fdivp
arpl
adc
mov
test
push
and
sbb
loop
cmp
imull
push
add
inc
repnz
stos
sub
jne
scas
fistpl
push
fisubrs
mov
ficompl
pop
mov
pop
cmpsb
outsl
adcb
loopne
dec
lock
mov
mov
out
sahf
loope
push
int3
push
add
test
lcall
cld
or
frstor
fcompl
pushl
jmp
movsb
je
cmpsb
and
repz
repz
pop
ficoms
cmp
adc
data16
adc
cli
cmp
inc
sub
mov
in
jae
fldt
or
mov
notb
data16
jbe
popa
popa
repnz
pop
mov
sti
sbb
push
xor
sbbb
xchg
xor
je
cmp
iret
popf
mov
cmp
jl
cmp
cwtl
xlat
shl
mov
mov
jmp
xchg
mov
xor
dec
add
mov
push
mov
cmpsl
lret
cmp
cmp
adc
inc
jo
adc
jb
dec
push
lcall
add
mov
dec
pop
aad
daa
stos
push
xchg
jno
add
iret
pop
or
outsb
xor
movsb
mov
adc
scas
movntq
imul
das
jle
jmp
mov
and
stos
sub
xor
bound
out
aaa
in
adc
sub
and
getsec
inc
xor
mov
sub
mov
sub
pop
inc
or
daa
mov
sub
mov
sbb
roll
sbb
xchg
bound
xor
testb
arpl
jg
sub
outsb
shrl
cmc
ret
sbb
mov
or
loope
sub
pushf
testl
pop
pop
pop
pop
jg
or
mov
xchg
std
pusha
outsl
cmpsl
hlt
aad
push
adc
jle
lahf
pop
push
jo
push
sbb
dec
cmpl
mov
pop
sbb
push
jge
adc
mov
mov
mov
or
push
or
xor
pop
push
mov
lods
popf
mov
popf
ret
xchg
lcall
xchg
ret
cmp
ljmp
or
mov
cmp
pop
pop
bound
push
std
imul
mov
xor
call
inc
sbb
dec
pop
fisubrl
mov
and
jb
fdivl
cwtl
jle
inc
jg
ret
orl
jnp
subb
cmpl
cmp
xor
or
aaa
xchg
scas
imul
mov
xor
add
mov
jbe
test
in
xor
aam
enter
jge
repnz
test
and
jl
stos
and
inc
cltd
xlat
xor
mov
dec
mov
outsb
pop
mov
outsb
mov
inc
repnz
xor
and
mov
push
test
lods
xchg
mov
imul
add
or
or
sbb
loope
stc
xor
jo
push
jecxz
xchg
sbb
ret
pop
stos
bound
mov
in
dec
nop
cmpsb
xchg
les
inc
xor
popf
lock
int
lock
mov
call
lret
adc
sub
insb
dec
jb
mov
jecxz
sub
gs
insb
cmpsb
pop
adc
gs
fstpt
jmp
std
fildll
ljmp
fadds
jg
cmp
test
jnp
mov
dec
and
inc
mov
mov
or
sarb
fnsave
or
insb
popf
add
fwait
inc
fwait
test
cmp
mov
subb
shll
fs
ds
sbb
push
mov
mov
cmp
push
and
icebp
mov
jmp
or
or
pop
mov
sub
mov
fsubs
shr
out
pop
stc
or
daa
cmp
fwait
aas
cli
add
insb
icebp
xor
or
pop
push
daa
or
insb
jnp
icebp
cmp
fdivl
pusha
mov
test
pop
inc
mov
movsl
mulb
cli
test
stc
fdivl
sub
in
sbb
mov
out
repz
iret
jl
fwait
mov
fcmovnu
mov
movsl
divl
outsl
in
cli
ret
jg
cmpsb
pop
or
nop
fwait
imul
in
scas
in
aam
mov
sbb
sahf
mov
mov
add
jmp
mov
cmpsb
inc
or
jp
cltd
nop
rcl
pop
and
cld
gs
in
adc
push
in
ljmp
adc
pushw
mov
sbb
inc
insb
data16
mov
or
int3
lahf
mov
outsb
fwait
push
enter
cmc
fisttpll
push
int
inc
add
mov
js
cs
nop
sbb
mov
jae
leave
pop
or
lret
dec
test
pop
inc
xchg
push
in
add
in
faddl
ljmp
mov
adc
test
ret
dec
cs
xchg
jge
dec
adc
dec
mov
cli
insb
cs
adc
pop
std
ja
jb
mov
enter
push
mov
in
sub
mov
cltd
adc
add
cmp
rolb
sahf
dec
lods
inc
mov
jo
lret
sub
add
xor
loop
inc
arpl
gs
mov
sub
lcall
es
sbb
sub
pop
mov
fmuls
jmp
xchg
inc
pop
iret
jne
nop
in
inc
mov
pop
out
sbb
xchg
dec
pop
inc
addb
stc
push
out
jnp
rclb
shl
or
pop
mov
scas
jo
mov
push
sbb
sbb
xchg
lods
mov
adc
retw
popf
divl
or
adc
cli
cld
iret
jge
and
fnsave
and
sarb
mov
push
inc
xor
lock
push
mov
and
scas
scas
das
add
push
pop
mov
in
inc
mov
xchg
jmp
xchg
push
mov
ds
insl
in
jnp
mov
stos
test
jno
test
rclb
mov
lock
jmp
iret
idivl
xor
js
out
je
jne
add
pusha
mov
xlat
repnz
pop
leave
jg
lods
ficoms
cmpsb
insl
jmp
aaa
in
cmp
sbb
xlat
xchg
xchg
cwtl
mov
lea
aaa
fnsave
fmuls
pop
or
mov
aas
mov
call
in
mov
leave
sbb
xchg
addl
fsts
add
sub
xor
stc
daa
pop
mov
jmp
loopne
mov
stos
adc
inc
fiadds
int
jbe
or
inc
cmc
dec
sbb
je
jo
dec
mov
inc
xchg
sbb
nop
lods
int3
rorl
mov
add
jmp
rorl
pop
mov
in
and
push
lock
lods
mov
jmp
fwait
push
mov
repz
sub
call
dec
lods
xchg
orl
add
call
jnp
ljmp
imul
test
mov
popf
push
mov
call
das
pop
cmp
push
adc
dec
nop
jne
sbb
popf
fstl
mov
fsubl
mov
out
xor
push
mov
mov
movsl
insl
jns
cwtl
jl
dec
js
xor
push
add
and
test
aad
or
sub
adc
inc
and
fidivrs
or
rorb
ljmp
mov
popa
adc
les
xchg
adc
mov
mov
mov
xchg
xchg
fidivrl
inc
popa
xchg
xchg
fildl
mov
xchg
add
stc
clts
and
adc
dec
sbb
out
rorb
lods
jne
fwait
or
mov
fwait
mov
iret
jae
adc
or
xor
hlt
mov
cmp
jge
dec
aam
sub
loope
imul
push
mov
jl
pop
imul
test
lock
sbb
in
xchg
mov
bound
pop
xchg
imul
jecxz
cmp
pop
cli
cmp
or
cmpsl
outsb
aaa
and
or
lret
push
gs
xchg
nop
jmp
cmp
cli
pushf
test
fwait
mov
mov
stc
subl
inc
push
mov
fs
sub
data16
shrl
filds
mov
neg
sti
jne
push
pop
and
pop
sub
notb
jae
cmc
popf
imul
cs
les
vmwrite
cmp
repz
and
pop
xchg
outsb
jnp
aam
ja
je
in
xchg
push
hlt
enter
mov
pusha
rcrl
sahf
bound
mov
inc
lds
movsl
sbb
loopne
or
sbb
ret
ficoms
pop
or
popf
pop
jnp
in
jecxz
add
dec
out
xchg
pop
insl
xchg
lahf
outsb
fs
mov
xor
mov
mov
fwait
cltd
lcall
popf
mov
push
stos
xchg
pop
insb
xor
pop
sbb
lock
loope
mov
testb
cmpsb
and
mov
es
mov
jne
push
les
fldl
sub
ljmp
sub
jbe
xchg
cmp
mov
iret
pop
sbb
jnp
cmp
insb
lock
push
bound
pop
popf
push
push
ds
mov
insl
mov
xchg
loop
out
push
iret
xchg
dec
pop
fs
cmc
or
lcall
loopne
cld
or
stos
adc
fadds
xor
pop
and
jg
add
jle
jb
inc
push
dec
sub
mov
push
mov
or
xor
jl
adc
aaa
dec
jge
xchg
inc
push
iret
loope
lock
js
pop
pcmpeqd
mov
test
rcl
vpinsrw
jo
push
dec
add
adc
leave
push
unpcklps
and
inc
cld
fisttps
cmp
push
addr16
sahf
jo
cmp
cltd
fcoml
mov
pusha
repnz
sbb
pusha
data16
push
inc
rcll
ss
shll
xchg
lock
cmp
scas
les
xchg
out
sub
xchg
xchg
xchg
cmp
cmpsl
js
push
out
lcall
adc
xor
test
sub
mov
xlat
in
sti
add
lahf
in
jb
mov
shrl
jmp
sbb
scas
out
fwait
sbb
shll
push
dec
pushl
in
mov
test
imul
call
pop
cmp
adc
pop
cmpb
xorb
bound
xchg
daa
shll
mov
mov
cmpsl
pop
push
ss
lcall
and
outsb
scas
push
lds
inc
add
sub
sbb
into
ret
sbb
sub
pusha
jmp
push
lret
cli
sbb
nop
jp
jg
dec
xchg
pop
xchg
rcrl
stos
cltd
sub
out
mov
pop
adc
scas
mov
testl
cmp
mov
adc
in
xchg
jmp
fidivrl
dec
sbb
sub
jno
sbb
fisubl
jl
mov
sarl
leave
lahf
sbb
push
mov
movsb
add
jbe
vpmacsww
loop
data16
in
dec
cmovne
fmull
out
push
inc
mov
and
test
daa
mov
dec
mov
enter
xchg
fwait
and
jmp
hlt
xor
jg
jmp
push
lods
push
les
dec
stc
jae
cmpb
sbb
cs
int
clc
stos
jnp
mov
lahf
xlat
pop
xor
mov
dec
enter
loope
das
ret
or
add
ljmp
mov
scas
xor
mov
cmp
xorl
cmp
sbb
test
cmp
jle
js
pop
les
pop
data16
xchg
xchg
iret
push
add
mov
and
jnp
lock
cld
adcl
mov
inc
sub
jmp
lods
aam
daa
in
test
arpl
jge
pop
fxch
or
icebp
andl
movsl
dec
cmc
loop
inc
mov
ret
jmp
rcrb
mov
mov
sbb
mov
int
gs
cmp
cli
daa
and
push
stc
test
data16
push
je
sti
jmp
sub
mov
test
push
call
call
sbb
mov
xor
into
lahf
insb
jmp
in
jbe
push
cmpb
adc
cwtl
mov
es
sbb
mov
pop
movsb
xor
daa
xchg
arpl
and
fildl
gs
xchg
clc
movsb
insb
sub
add
xchg
adc
mov
xor
enter
pop
dec
mov
xchg
push
push
and
pushf
shll
dec
jge
xorb
push
cmp
sub
or
in
xchg
inc
shrb
dec
sbb
push
imul
inc
insb
mov
out
mov
dec
push
mov
sub
and
fisubl
inc
push
push
sub
sti
mov
out
shrb
pop
adc
loop
gs
sbb
adc
adc
xchg
jl
movsl
pushf
xchg
dec
mov
sbb
nop
in
jbe
daa
push
test
fwait
pop
icebp
cld
pop
push
test
in
into
icebp
int
aaa
xchg
mov
rcrb
dec
test
ret
pop
lock
push
xchg
call
mov
in
adc
aaa
test
jmp
in
mov
add
dec
in
dec
je
adc
test
adc
or
rcr
mov
mov
xchg
push
jno
sbb
sahf
cmp
bound
movsb
and
mov
jle
lahf
leave
mov
sbbl
into
test
mov
push
cwtl
mov
jnp
out
mov
xchg
lods
xchg
mov
jmp
sub
adcb
cmp
outsb
dec
mov
cs
pop
mov
or
inc
hlt
sbb
mov
push
es
jo
jae
roll
cli
nop
frndint
fldt
stos
lds
sub
push
scas
pop
adc
ss
fstpt
rcrb
push
testl
or
imul
lahf
push
jle
ljmp
fidivrs
call
leave
aad
scas
test
or
mov
push
mov
mov
inc
movsl
sub
dec
loop
loop
sbb
push
xor
cmpsl
cs
push
das
sub
and
insl
movsl
bound
repnz
sti
inc
out
mov
mov
lcall
pop
es
cwtl
push
cmp
cli
push
adc
out
pop
sbb
notl
jmp
and
sbb
outsl
les
std
leave
push
xchg
ud0
push
xchg
add
ret
loop
outsb
adc
sbb
loopne
mov
das
scas
or
or
mov
jmp
mov
cltd
push
dec
sti
inc
fld
scas
lods
and
cmp
mov
dec
in
lret
mov
push
cmp
dec
mov
adc
xchg
mov
inc
addr16
scas
push
jp
add
shl
insb
xor
sub
popl
push
cmp
sub
data16
jne
jg
scas
and
push
int
mov
mov
jg
outsb
push
xchg
add
fisubrl
fs
outsl
ss
xchg
cmpsb
pop
es
or
pushl
sbbb
xchg
insl
xchg
add
aam
rclb
in
pop
inc
push
jge
push
ja
in
inc
lcall
xchg
loopne
adc
incb
sbb
insb
sbb
stos
push
sub
ljmp
sarl
pushf
or
sahf
adc
sub
fdivrs
jmp
jb
push
bound
push
xchg
stc
bound
pushf
inc
sub
and
loopne
int3
sub
repnz
jl
into
addb
xchg
mov
jnp
dec
jecxz
fdivr
push
mov
pop
inc
lods
sbb
dec
pop
pop
arpl
fcomi
pop
nop
or
in
outsb
clc
jae
pushf
jecxz
sub
xchg
fisttpll
subb
sti
mov
xchg
cmpsl
mov
and
daa
mov
jg
mov
es
dec
jle
push
loope
adc
jl
daa
fbld
adc
xor
pop
sti
aad
inc
dec
loop
push
cld
dec
or
push
fwait
push
push
xchg
and
daa
push
scas
insl
sahf
jecxz
cmp
scas
dec
xchg
sub
or
out
xchg
dec
adc
push
or
ret
add
in
mov
dec
inc
jo
in
call
cmp
add
into
add
jecxz
pop
and
xor
and
mov
pop
mov
mov
or
out
sub
jge
add
adc
sub
dec
fnsave
add
push
push
cmp
mov
pop
push
cmpsl
enter
movsb
sti
cmp
outsl
movsl
and
jno
push
js
pop
mov
bound
insb
jbe
pop
pop
loop
daa
inc
xlat
mov
lock
sub
divl
push
fsubl
aam
loope
jb
and
test
movsl
cmc
pop
or
inc
lds
mov
jge
cmp
pop
mov
fisubrs
cltd
lahf
std
mov
aaa
scas
sbbb
xor
addr16
jp
push
popa
mov
movsl
lret
pop
mov
add
pop
xor
or
clc
imul
sub
xchg
lods
or
outsb
pop
movsl
xchg
in
add
das
loopne
subl
fwait
enter
in
repnz
ja
add
xor
jle
pushf
sahf
dec
push
push
mov
mov
mov
test
das
cmc
sub
mov
std
jb
and
jo
mov
insl
fwait
into
test
movsb
ja
lds
arpl
ret
jg
lret
sbb
pop
dec
lret
ss
pop
in
xlat
ja
nop
push
mov
and
sub
aaa
xchg
outsb
test
mov
push
mov
fs
in
push
popf
xlat
mov
pop
nop
rorb
notb
and
shlb
push
xor
pop
cltd
add
pop
mov
cwtl
ss
cmp
arpl
test
rorl
jg
sbb
mov
add
sbb
aaa
mov
jbe
stos
es
mov
jnp
mov
loope
outsl
push
xchg
cld
mov
push
push
dec
cmpsb
jnp
fs
sbb
xor
and
mov
movsb
shlb
mov
es
inc
xchg
mov
addr16
out
push
bound
dec
ja
test
movb
jecxz
cmp
lods
cmp
fs
sahf
jmp
sbb
dec
add
mov
ss
jmp
out
clc
sub
lock
fmul
rclb
xor
xor
jge
mov
adc
push
jnp,pt
icebp
push
jae
rcrl
scas
xorl
push
and
mov
fidivl
ljmp
loopne
cli
and
push
test
mov
gs
xor
or
adc
cmpsl
dec
int
in
pop
pop
nop
sarl
lret
push
mov
testl
mov
ja
fmuls
lock
notb
inc
dec
jnp
mov
xor
jns
xorl
lods
push
mov
jp
sub
leave
lds
mov
dec
pop
ljmp
pop
push
outsb
ds
mov
and
jle
push
idivl
rep
sarl
in
loopne
pop
mov
jmp
out
stos
jecxz
fs
inc
pause
adc
sbb
pop
push
mov
mov
jne
xchg
aam
imul
sub
test
fdivs
nop
fldt
lock
sub
dec
jecxz
lock
imul
push
xlat
jecxz
xor
jge
add
hlt
sbb
mov
das
sub
jbe
adc
test
mov
dec
mov
incl
mov
pop
pop
xor
xor
cmp
into
mov
lcall
pop
mov
rcr
aas
dec
or
push
shrl
xor
xor
mov
shl
push
testb
push
xchg
lcall
sbb
xor
fcoms
insl
cmp
dec
inc
lahf
push
jle
xlat
or
cmpsb
sbb
sarb
pop
jnp
ss
rorb
lahf
imul
mov
movsl
xchg
shll
xchg
pop
mov
ror
movb
mov
std
jg
mov
stos
jbe
mov
hlt
xor
and
pop
xor
ja
push
scas
out
inc
insl
cmc
adc
iret
and
aam
dec
idiv
and
rcr
mulb
inc
and
adc
push
cmpsl
movsl
xor
push
or
fdivrs
push
add
js
fstpl
sbb
cli
mov
fs
mov
in
outsb
aam
or
loope
stos
out
dec
dec
sbb
test
mov
xor
mov
lret
es
cmpsb
inc
stos
adc
xchg
cmpb
subl
int
push
movl
vorps
shlb
pop
jae
push
xor
mov
inc
shl
lods
movsl
add
add
mov
fwait
out
shll
lret
adc
mov
inc
mov
jl
scas
test
or
sarl
mov
inc
das
jb
cmp
lret
iret
addb
mov
imul
movsl
xor
mov
call
or
sub
sub
pop
sbb
mov
mov
dec
inc
dec
bound
pusha
jmp
lret
adc
arpl
scas
roll
xor
mov
jle
cld
xchg
push
lea
rcll
cltd
fbstp
loopne
xor
fs
inc
aad
call
push
nop
pop
rclb
gs
jle
fists
aam
nop
sub
icebp
leave
lods
push
pusha
sub
and
adc
cmp
adc
and
call
jbe
cld
cmpsl
bound
sbb
testl
aam
lcall
push
clc
hlt
or
fcompl
cmp
test
lods
lahf
jp
clc
inc
int3
repnz
ffreep
cmpsb
jecxz
jo
leave
sub
and
pusha
mov
sub
aad
stc
shr
into
inc
aad
test
adc
bound
xor
aam
push
dec
push
xchg
test
mov
out
dec
xchg
in
je
mov
pop
dec
jle
xchg
jo
push
cltd
fstps
mov
pop
aad
inc
lds
or
xchg
cmc
pop
mov
pop
and
sbb
popa
mov
mov
mov
push
rep
xchg
cmp
cwtl
jmp
cmp
cmpsl
bound
xor
xchg
loopne
sbbb
pop
and
scas
mov
icebp
fistpll
fldcw
xchg
divb
xor
adc
int3
cld
rclb
aas
icebp
pop
mov
mov
push
push
pop
lcall
lock
fimull
inc
test
movsl
mov
insl
dec
adc
pop
leave
sbb
jb
faddl
add
inc
fs
es
mull
sbb
mov
push
sti
movsb
push
js
cmp
filds
pop
aad
jb
icebp
jno
lods
sbb
xchg
pop
inc
push
insl
out
xlat
mov
loop
lods
cmpsl
push
int
cs
in
or
sub
or
loope
aas
mov
data16
ss
outsb
sub
ds
sbbb
imull
jb,pt
mov
mov
push
scas
or
mov
stc
dec
lds
dec
mov
jecxz
mov
jns
pop
aad
dec
add
es
mov
jb
std
cld
and
xor
push
std
ret
out
fisubs
shlb
pop
add
xor
insl
dec
sbb
push
lods
mov
fcoml
and
hlt
scas
cwtl
ds
iret
cmc
outsl
fistl
pop
call
push
adcb
sub
mov
pop
in
int
cltd
pop
stos
sbb
outsl
dec
ds
ds
and
pop
cmpsb
idivb
jne
ljmp
filds
faddl
dec
dec
imul
mov
jl
sbb
xchg
inc
inc
rorb
add
push
or
push
mov
mov
stc
jbe
mov
and
jb
shlb
clc
imulb
push
lahf
jg
adc
shll
pop
insl
sub
xchg
fsubr
out
cmc
push
inc
scas
mov
mov
cmp
jns
sbb
xor
pop
cmc
xor
in
aaa
popf
bound
jge
push
xorl
dec
imul
and
jbe
out
sbb
ficompl
xchg
iret
xlat
ss
xchg
ret
mov
into
scas
int3
push
and
jb
or
or
push
addr16
mov
mov
das
push
xor
pop
adc
and
fmull
ret
adc
cmp
jo
xor
out
mov
sub
scas
popf
in
and
adc
xlat
xor
mov
loopne
add
repz
test
mov
jg
sahf
adc
sbbb
inc
pop
inc
ss
mov
call
test
and
loopew
cltd
in
xchg
or
dec
xchg
add
inc
outsl
push
mov
sub
mov
push
mov
test
roll
push
add
xor
or
lcall
outsl
sub
movl
xor
inc
test
mov
stos
push
or
inc
enter
outsl
adc
pop
subb
mov
pop
call
dec
add
mov
mov
sub
vandnps
sbb
inc
notrack
adc
jne
push
jo
sti
push
and
aaa
mov
push
sti
pop
mov
test
jl
clc
jp
jecxz
inc
lods
cmpsl
and
rcrl
test
or
xor
mov
jp
cpuid
mov
mulb
mov
mov
jp
sbb
xorb
add
sarl
loop
out
lcall
push
sahf
mov
dec
idiv
orl
ljmp
out
jge
int3
inc
push
push
xchg
in
xchg
fldcw
inc
jne
xchg
daa
scas
test
outsl
sahf
inc
orl
out
xor
pushf
dec
or
inc
shl
cmp
xor
dec
inc
call
pop
and
clc
sahf
pop
jge
sub
test
test
pop
mov
cs
ja
repz
les
push
push
push
sub
push
stos
es
xor
jmp
insb
aas
xor
mov
push
adc
pushl
jno
imull
xor
and
cwtl
mov
push
loopne
mov
mov
mov
popa
mov
cld
into
testb
sub
add
push
flds
lods
cs
mov
push
push
cmp
repnz
shlb
push
and
jg
hlt
mov
lea
pop
ret
fcoml
mov
adc
test
push
mov
cmp
xor
cli
lods
rolb
inc
inc
testb
mov
xor
dec
stc
pop
int3
mov
dec
cld
xchg
lea
lea
sarb
or
les
push
push
cltd
push
imul
push
mov
test
popa
xor
xchg
popf
dec
jmp
mov
sbb
call
dec
imul
fimull
popa
lret
adc
mov
fsincos
jp
addr16
push
iret
xchg
mov
inc
inc
loope
insb
mov
in
sub
jp
pop
notl
add
jns
xchg
xor
pminsw
push
sbb
adc
cmc
mov
scas
and
insb
pop
ret
xchg
push
mov
fistpl
and
jo
cmp
pop
fninit
mov
mov
leave
les
push
testb
xchg
ret
insl
pushf
das
dec
insl
stos
adc
push
test
aam
stos
andl
stc
jb
mov
jmp
adc
xchg
xor
or
jne
dec
testl
inc
pop
mov
adc
mov
scas
jecxz
stos
cmp
mov
mov
je
jae
and
sti
mov
sub
dec
int3
adc
stc
mov
out
cs
ss
out
or
cmp
pop
sahf
add
adc
rolb
scas
sarl
push
jne
jns
push
cmp
add
lds
mov
insl
xchg
pop
cli
sub
add
mov
mov
movsl
call
test
add
aam
dec
iret
in
mov
outsl
enter
addr16
mov
int3
dec
loopne
aam
cmp
xchg
nop
xchg
notb
add
pushf
push
and
jnp
clc
jle
sti
jge
inc
scas
into
pop
test
fistpl
push
sbb
fwait
jno
hlt
adc
rcrb
int
jg
stc
fstpt
in
mov
cli
push
sub
cld
mov
inc
daa
into
mov
inc
mov
and
dec
sbb
into
adc
popf
pop
aad
call
push
cmp
push
jo
je
jnp
push
sub
imul
mov
rcrb
pop
ss
sub
sub
jae
imul
arpl
dec
dec
pop
popa
je
int
ret
test
push
xchg
xchg
push
rcll
dec
jno
fildll
mov
xchg
sti
movsl
lcall
push
cmp
cmp
cmp
fsubr
repnz
mov
cli
push
pop
cmp
xchg
mov
addr16
pop
mov
jo
sub
je
cmp
mov
xchg
adc
dec
adc
ret
fdivp
xchg
int3
cmp
push
xor
gs
dec
xchg
lods
mov
in
cltd
pop
mov
dec
adc
sub
subb
es
popf
loopne
dec
cli
popa
lods
ljmp
push
jne
or
les
cmp
xor
clc
jmp
push
xor
mov
jge
cwtl
pop
sub
or
pusha
rorl
faddp
ret
adc
inc
jmp
and
pushf
xchg
adc
push
fidivrl
add
pushf
xchg
testb
sbb
nop
push
jecxz
or
ljmp
mov
push
shlb
sub
pop
cmp
stos
add
das
xorl
cli
and
mov
clc
sbb
mov
jg
xor
fwait
ja
push
add
sbb
pop
rcrb
mov
or
jge
ds
ja
leave
shll
and
dec
fucomi
push
fildl
in
cmp
mov
pop
lods
mov
aaa
test
xor
fistps
jne
fs
pop
bound
push
xor
inc
jnp
sti
out
add
mov
insb
out
pop
lret
fptan
xor
jo
sub
inc
cld
push
inc
test
push
or
or
inc
add
add
test
mov
cmp
dec
mov
int3
mov
push
arpl
adc
pop
int
xor
cwtl
test
ja
adc
dec
imul
in
xor
xor
ja
mov
shlb
rorb
mov
shr
lahf
shrl
enter
fxch
pop
sbb
and
daa
xchg
fisubrl
mov
mov
insb
test
test
xchg
repz
mov
push
icebp
dec
and
jl
aam
and
inc
repnz
xor
lea
iret
jo
add
and
mov
loop
insl
sbb
pop
mov
pop
stos
xor
ds
ret
sbbl
inc
daa
gs
pop
lods
xchg
ds
inc
mov
in
pop
mov
mov
dec
jp
adc
xchg
dec
test
cwtl
dec
or
in
pusha
dec
or
jne
jle
insb
cltd
mov
inc
xchg
inc
mov
adc
jno
xchg
xor
imul
loop
ficomps
add
std
push
pop
or
adc
pop
sub
pusha
jecxz
cmp
xchg
cli
pop
jne
push
data16
ja
jno
push
sarb
daa
daa
xor
mov
mov
add
adc
hlt
in
jno
cmp
cltd
push
push
in
lods
push
push
push
sar
and
fs
das
sub
clc
ljmp
dec
mov
push
test
out
mov
xchg
daa
inc
repz
push
repz
or
popa
jl
adc
adcl
clc
rolb
cmp
test
addb
les
fsubl
outsl
imul
gs
cmpsl
push
jne
jge
call
testb
mov
sub
rorl
insb
out
add
repz
sbb
mov
pop
pusha
or
mov
dec
clc
cmovns
jns
xchg
lret
mov
jnp
in
ret
movsb
in
inc
mov
inc
xor
push
or
ja
pusha
sbb
je
pop
fisttpl
ret
sbb
pushf
push
inc
cmp
mov
fisttpl
in
xor
sub
decl
mov
sbb
mov
cmp
add
add
push
lds
mov
cmp
sbb
xchg
cmp
es
and
pop
and
test
cmpsl
cmpsl
mov
dec
lret
inc
cmpsb
incl
call
sub
add
adc
and
mov
ret
movsb
jge
mov
mov
mov
xchg
pushf
into
int3
add
scas
mov
xor
jl
xor
jg
sub
xor
mov
test
mov
xchg
or
loopne
lret
xchg
push
cs
push
xchg
or
shlb
jb
dec
scas
push
mov
xor
outsb
jb
into
add
jns
adc
fmuls
jge
dec
xchg
lahf
incb
inc
out
sub
clc
movsb
ds
mov
daa
and
jecxz
and
jmp
pop
mov
out
jbe
mov
sub
pop
cs
lret
lock
sub
and
testl
stc
shlb
xchg
inc
xchg
xchg
andb
mov
xchg
mov
xor
sbb
add
mov
sbb
fs
ret
push
jne
insl
fwait
push
xor
mov
pop
xchg
or
out
adc
sti
out
and
or
mov
jle
mov
xchg
mov
push
insb
fsub
loopne
xchg
std
sub
mov
or
inc
cwtl
movsl
aad
adc
mov
jmp
ret
lea
pop
pop
fstl
jl
mov
sub
cwtl
cmpl
mov
cltd
mov
pop
test
cmp
push
insl
xchg
mov
push
mov
lods
cs
cmp
add
das
sub
fs
fs
pusha
xor
adc
pop
aas
fcmovu
xor
jae
sahf
repnz
mov
push
push
subb
ret
inc
mov
add
jl
jb
push
add
or
clc
mov
mov
pop
daa
fldcw
pop
enter
mov
mov
or
inc
pop
pop
lock
mov
mov
adc
and
inc
mov
cmp
sbb
popl
sbb
es
stc
outsb
cld
imul
rclb
imul
xlat
jae
sub
pusha
out
jnp
das
push
int3
loopne
imul
add
lods
and
xor
or
cmp
adc
jecxz
cmc
jmp
jno
push
jbe
imul
nop
orb
repz
sbb
xchg
inc
push
decb
sbb
stos
cltd
mov
inc
mov
test
dec
and
push
cmp
test
inc
xchg
ret
adc
mov
mov
inc
ret
test
out
sbb
adc
mov
push
jo
es
sar
and
jle
xlat
aad
sar
pop
stos
xchg
sub
fistl
inc
xor
incl
repz
imul
flds
xor
mov
bswap
adc
xchg
cmp
int3
pop
add
jo
jge
mov
lods
outsl
push
sub
xchg
clc
lods
jg
insb
pushf
rcrb
and
in
loop
add
sbb
adc
xchg
sbb
pop
ficoml
int
addl
jp
arpl
mov
lds
push
xor
jg
jecxz
lods
push
mov
sub
loop
stos
xor
mov
mov
add
jmp
fistps
sub
mov
add
cld
jp
inc
pop
popf
pop
into
scas
mov
in
pop
int3
sub
cltd
nop
stos
mov
adc
add
jo
bound
dec
mov
fldl
dec
pop
jno
adc
mov
mov
sbb
ds
and
popa
scas
sbb
lock
cmpsl
mov
fsubrs
lahf
repnz
push
mov
ffreep
mov
adc
mov
nop
das
sub
imul
popa
repnz
lret
mov
orl
adc
mov
fistl
adc
stos
adc
mov
mov
mov
fwait
imul
mov
jecxz
adc
jp
xchg
dec
pop
xor
inc
mov
xchg
or
lret
ret
dec
pop
push
cmc
loop
mov
test
testl
test
push
clc
loop
inc
sub
sbb
loop
push
and
jae
test
pushf
int3
jb
loopne
pop
insb
mov
pop
cmp
rcrb
aaa
and
decl
xchg
stc
clc
out
jns
insl
gs
sub
int
and
stc
aad
mov
xchg
add
hlt
pop
sub
xlat
lahf
mov
adc
xchg
pop
jo
fnstsw
push
mov
pushf
pop
addr16
sbb
outsl
or
iret
push
idivl
push
dec
push
dec
stos
and
and
lret
daa
fildll
push
loopne
adc
imul
arpl
movsl
inc
js
sti
imulb
orl
fistpll
stc
cltd
jns
push
cmp
ljmp
or
add
mov
fnstsw
outsl
rcrb
xchg
push
in
fistpl
dec
mov
call
mov
loopne
inc
jo
add
or
movl
setne
addr16
pop
leave
push
pop
insl
out
pop
lds
mov
jnp
leave
cmp
out
aad
shlb
es
pop
imul
rcll
xchg
pop
movsl
insl
cmc
push
sub
das
pop
pop
jp
loope
jo
jb
fadd
sub
inc
dec
xchg
sub
das
jae
xchg
inc
mov
push
hlt
rorl
movsl
cmp
enter
out
add
shl
sahf
jmp
dec
xchg
aaa
arpl
sahf
sub
jo
lahf
add
push
test
jb
jbe
xchg
push
add
fnstsw
pop
push
cmp
rcl
mov
dec
fldl
adc
fisubrl
loop
aam
aad
ret
mov
and
cld
xor
lods
push
ds
js
pop
jb
xor
mov
dec
movsl
nop
xlat
inc
cli
xchg
gs
dec
ja
sbb
push
jne
data16
fwait
loope
fwait
movsl
test
leave
mov
jo
mov
inc
mov
outsl
and
sub
sub
cmp
xor
xchg
fs
sub
and
imul
cmp
xor
fldt
xor
mov
pop
stc
dec
dec
test
negb
sbb
cmpsl
stc
xor
push
testl
inc
out
mov
jle
das
adc
or
push
sub
xchg
inc
fidivrl
mov
jl
sub
xchg
push
lcall
das
bound
hlt
mov
jo
inc
mov
in
movsb
aas
adc
mov
leave
push
push
inc
test
cmp
aad
jmp
jl
cli
xor
add
adc
rorb
pop
mov
dec
cmp
popa
xor
les
jns
lea
adc
sbb
jns
jle
lods
cmpsb
pop
mov
cmp
add
xor
jo
mov
jnp
loope
cli
adc
mov
fs
ljmp
cmc
js
xchg
mov
push
fs
ret
outsb
outsw
imul
mov
loope
sahf
mov
aam
stc
out
sub
fistpll
mov
cs
addl
int3
lahf
ss
adc
adc
xchg
fbld
cmpsb
and
into
mov
jle
jae
xchg
pop
in
addr16
imul
hlt
insl
mov
fldt
ror
pop
mov
push
pop
call
icebp
stos
cli
out
out
ficoml
cltd
sub
adc
dec
jno
pusha
xor
pop
dec
xchg
sbb
nop
mov
test
or
aad
add
repz
mov
bound
xchg
pusha
sbb
xchg
push
and
not
xchg
adc
or
fildll
and
lcall
bound
nop
sahf
or
jns
xor
in
add
test
mov
addr16
inc
jmp
mov
xchg
lock
xchg
push
aaa
icebp
shrb
dec
sub
outsl
int
jmp
fs
popf
xchg
sbb
aam
jne
xor
sub
pop
outsb
icebp
jl
les
daa
enter
sbb
inc
out
repz
sahf
pop
adc
rolb
imul
pop
cli
sti
lea
add
daa
aas
imul
lret
mov
or
jno
mov
xchg
popl
dec
ret
arpl
dec
fabs
push
sub
je
jnp
mov
js
and
push
ljmp
xchg
push
movsb
sbb
fs
das
loop
push
pusha
test
arpl
sub
mov
stos
std
outsb
clc
or
push
cs
jbe
pop
adc
mov
shll
mov
push
movsb
or
sub
lods
stos
xor
outsl
cmpsl
test
mov
loopne
pop
loop
fwait
pop
inc
in
add
scas
mov
pop
loopw
or
sub
jo
mov
cmpsl
fcompl
lahf
add
mov
xor
mov
lret
sub
sarb
repz
call
push
mov
mov
arpl
test
pop
xor
xor
xchg
inc
sbb
xlat
imul
rcr
in
sbb
xor
xchg
jmp
jno
mov
cmp
mov
xchg
not
or
inc
pop
addr16
lret
fs
in
mov
adc
xchg
push
nop
pop
test
ret
xorb
ljmp
mov
xor
jecxz
push
in
movsl
xchg
add
dec
pusha
lea
xor
subl
fidivrs
pop
aaa
ret
add
int
das
pop
inc
lock
pop
bound
popl
aam
xor
add
pop
icebp
shlb
add
je
push
jo,pt
jae
rol
int3
repnz
mov
xor
out
sbb
outsb
mov
push
lock
mov
push
inc
adc
lcall
sub
xchg
inc
ljmp
push
pop
enter
es
add
movsl
cs
mov
les
cwtl
test
mov
jae
fidivl
outsl
add
xor
int
rcr
push
mov
push
cli
mov
lret
cli
or
add
pop
stos
sub
into
js
or
sub
insl
inc
jecxz
pop
pop
cmp
outsb
jnp
pop
sub
rolb
rclb
andb
xchg
mov
mov
filds
repnz
outsl
jg
mov
cmp
int
lret
stos
sub
and
xchg
int3
push
in
popf
loopne
dec
jbe
enter
les
or
xchg
and
jb
mov
cmp
mov
ds
dec
les
sahf
cmp
cmc
adc
imul
pushf
rorb
aas
mov
in
and
enter
or
mov
or
pop
data16
push
inc
jae
push
xchg
nop
push
push
std
and
lds
fsubrs
pop
cmp
bound
rcrl
jl
cld
or
mov
xchg
imul
out
outsb
imul
xchg
dec
popf
ret
cmp
leave
inc
xchg
dec
push
xlat
in
in
jg
movsl
lods
pop
lcall
fdivr
jmp
lock
inc
adc
scas
imul
es
xchg
push
sbb
jg
int
cmp
add
lcall
fwait
xor
xor
pop
scas
sub
andb
xchg
imull
lcall
fisubrs
test
push
mov
cmp
cltd
arpl
push
dec
sbb
inc
pushf
ljmp
xor
cld
bound
in
pop
cmpl
and
mov
stc
test
inc
cmp
or
xor
mov
pop
arpl
mov
orl
mov
push
lcall
sub
cwtl
jmp
lock
jbe
inc
or
popl
nop
pop
dec
test
int3
dec
movsb
fcmovbe
push
dec
test
adc
push
lods
xor
aam
cmp
mov
mov
pop
xorb
dec
push
jae
sub
xlat
mov
push
mov
dec
xor
mov
mov
adc
gs
add
les
sub
aam
push
in
or
adc
inc
pop
jge
jp
mov
shlb
and
mov
iret
push
lcall
imul
xchg
cmpsl
push
icebp
rcll
lcall
or
xor
or
lret
mov
jmp
ljmp
push
shrl
stos
nop
cltd
cld
arpl
mov
std
add
call
mov
dec
icebp
mov
cmp
mov
xchg
push
add
out
cmp
les
sbb
push
xor
aad
nop
in
lods
int
sbb
int
sub
hlt
inc
repz
sbb
pusha
rclb
jecxz
jg
sbb
mov
rorb
dec
cld
popf
movsl
js
pop
jae
push
sbb
pop
clc
mov
xchg
and
int3
ljmp
rcrl
sbb
ficomps
cmp
xchg
xlat
loopne
pop
jbe
in
sbb
mov
or
pusha
cmp
test
sbb
pushfw
cmp
dec
mov
es
pop
adc
je
int
cmp
mov
std
or
je
xlat
pop
sbb
mov
mov
push
adc
inc
add
cmp
inc
adc
dec
lods
xchg
clc
into
xchg
inc
loopne
test
push
leave
mov
mov
pop
dec
test
mov
cmc
scas
sbb
lahf
or
sbb
cmp
movsl
mov
sub
pop
pop
repnz
push
sarl
mov
dec
mov
outsl
cmp
push
sti
add
int3
sub
lea
cmp
inc
push
shlb
cmp
fwait
shlb
jle
push
adc
in
loopne
in
leave
xchg
sub
push
pusha
pop
adc
imul
repnz
lea
and
xor
sbb
cmp
xor
stos
push
pop
xchg
subb
mov
outsl
in
xlat
mov
mov
pop
movsl
outsl
mov
xchg
mov
or
cli
push
orb
sbb
divl
adc
fimull
nop
push
cmc
idivb
nop
mov
add
dec
sti
and
dec
mov
cmp
push
fsubl
xchg
or
ret
cwtl
jbe
aam
out
cmp
ficomps
mov
or
or
insb
xorl
cmp
jo
loopne
cmpsb
and
xchg
js
mull
int
and
mov
jp
scas
fldcw
mov
jmp
inc
adcb
adc
pop
fcoml
xchg
push
push
dec
hlt
mov
dec
add
dec
sbb
push
cmpsb
leave
out
pop
jg
or
jg
jle
jg
pop
xor
pop
fidivrl
jne
pop
pop
adc
into
inc
stos
mov
cltd
dec
add
jecxz
push
add
fisubl
dec
or
subb
sbb
movsl
adc
dec
leave
loopne
stos
inc
loop
call
popf
fs
in
stos
adc
add
insb
into
cmp
pop
repz
sbb
mov
in
popa
test
fisubrs
push
out
add
scas
aaa
std
jno
ret
and
cmc
les
mov
push
xor
fldcw
outsl
idivl
mov
jle
adc
and
imul
cmp
ss
jge
arpl
and
mov
out
inc
outsb
cltd
cltd
lea
dec
adc
adc
push
mov
xchg
cmp
cmpsl
jp
and
push
mov
fistl
cmp
lds
movsl
push
adc
cmp
sbb
mov
fcom
leave
dec
scas
or
loopne
cwtl
jmp
push
cmp
inc
push
insl
dec
scas
or
mov
mov
sti
popa
test
ds
jle
pop
scas
xor
les
xorb
push
and
cli
mov
dec
popf
fnsave
lods
std
jp
mov
xchg
and
in
mov
sub
jns
test
inc
cmp
or
insb
pusha
daa
test
popf
mov
mov
loop
jns
mov
mov
and
push
rcrl
sbb
es
inc
cld
adc
ret
imul
jmp
dec
pop
adc
mov
add
mov
jbe
pusha
cmc
daa
push
or
arpl
sahf
fsts
jecxz
cmp
add
inc
mov
movsl
int3
and
adc
outsb
aas
data16
mov
cmp
sub
fistpll
push
adcl
and
xchg
scas
mov
xor
dec
pop
clc
stc
test
inc
adc
add
cmp
push
sahf
dec
les
outsb
inc
lods
pop
and
sub
xchg
dec
in
pop
push
mov
bound
cs
mov
mov
adc
cmp
icebp
outsb
sub
fisttps
push
mov
jbe
mov
sbb
lods
ficoml
sbb
ljmp
fs
pop
inc
out
fcom
push
out
or
or
out
pop
loop
push
lret
lods
aam
insb
xchg
inc
out
cmpsb
push
cmp
int
sbb
push
int3
and
adc
push
pop
filds
push
loopne
jb
lods
mov
daa
out
scas
je
cmc
popw
or
pop
daa
dec
testl
inc
cwtl
jb
lock
add
push
xchg
add
xchg
out
sub
sub
cwtl
lcall
adc
adc
faddl
cld
and
daa
sti
or
pop
sub
sbb
pusha
xor
jne
xchg
pop
leave
inc
lods
and
inc
mov
push
add
lret
adc
xorl
xchg
ja
in
sbb
subl
dec
sbb
or
inc
sub
outsb
lahf
jle
cmpsl
jbe
jb
xlat
add
push
mov
or
cmpsl
push
mov
xor
xchg
sub
ret
inc
mov
daa
dec
hlt
inc
sarl
add
and
push
shrd
push
dec
xor
jb
cltd
push
xor
or
xchg
jne
push
fwait
enter
faddl
mov
xor
xchg
in
pop
pushf
lock
mov
cmpsl
hlt
mull
cld
les
ds
inc
inc
stos
imul
jmp
jge
push
sub
out
dec
fwait
mov
es
xchg
add
mov
cmc
sbb
in
adc
mov
xchg
dec
lock
lahf
sahf
gs
adcb
enter
out
sahf
add
jb
and
sbb
rorb
imul
rorl
pop
cmpl
outsl
cltd
popa
in
ja
test
mov
ret
fs
push
fcmovnu
push
popa
and
add
leave
outsb
xchg
sbb
dec
mov
push
inc
test
cmp
movsb
mov
jge
xchg
popf
sti
pop
push
out
push
pop
les
or
and
lods
mov
push
push
iret
fnsave
adc
cli
inc
lret
test
mov
xlat
idivb
cmp
xchg
in
mov
dec
cmp
xor
bnd
fnsave
daa
mov
fsubrl
test
stos
cmp
and
pop
cmpsb
jmp
pop
xchg
dec
popa
sti
stos
pop
call
sbb
mov
aad
scas
hlt
pop
int3
adc
lods
andb
mov
push
outsb
cmpl
stc
mov
jb
ja
fcmovnbe
mov
sbb
lods
ljmp
aas
adc
out
push
movsl
pop
push
sub
cmp
rclb
icebp
mov
aas
clc
push
cmc
call
leave
or
lea
mov
scas
jp
xor
jne
dec
fwait
mov
outsb
add
or
adc
jp
jge
xchg
or
mov
jb
cmp
mov
sub
std
push
inc
in
push
add
jbe
es
stc
and
aam
mov
aas
hlt
adcl
lcall
push
std
dec
out
sbb
jb
add
hlt
repz
dec
push
cwtl
dec
lock
add
or
int
fcompl
push
fists
es
mov
or
stos
mov
out
mov
int
sti
mov
mov
clc
stos
dec
jb
xchg
ret
mov
sub
jg
sbb
lret
cmp
mov
adc
sbb
xchg
dec
outsb
sub
cmovo
cld
or
or
and
pop
sub
push
cltd
imul
xchg
mulb
icebp
aam
jge
test
in
scas
xchg
movsl
cwtl
push
add
subb
sti
dec
jp
push
pop
pop
cmp
mov
mov
test
dec
or
jb
jmp
mov
lret
add
adc
out
push
ret
rclb
push
push
iret
in
fisubs
ja
push
and
mov
lods
loope
outsl
clc
push
outsb
mov
aaa
les
lret
push
add
xor
mov
and
pop
sbb
xlat
inc
test
xchg
test
inc
test
push
pop
jne
out
add
addr16
push
stc
and
jge
cmp
xchg
out
test
arpl
sahf
push
aas
popa
fisubs
in
cli
xor
in
imul
leave
adc
ja
dec
das
inc
ds
in
fisttps
ret
xchg
lret
push
jle
ljmp
fdivl
test
push
jmp
cmp
xor
in
in
sub
into
fwait
rclb
mov
ljmp
sbb
aaa
vmread
popf
cmpsb
test
xchg
push
mov
mov
dec
mov
dec
jo
out
incl
sbb
out
outsb
mov
rcl
aas
sti
adc
adc
sub
push
pusha
add
push
dec
mov
rorb
test
cli
insl
pop
xchg
push
cmpsb
arpl
add
ja
mov
sarb
dec
inc
pop
sbb
add
aam
icebp
xor
push
in
xchg
enter
sbbb
lret
pop
int3
mov
repnz
xor
pop
ret
fnstcw
add
push
push
fwait
cltd
icebp
mov
gs
call
sbb
pop
out
mov
inc
sbb
push
cmp
pop
rcll
xchg
mov
imul
dec
outsb
pop
push
adc
push
push
aad
dec
pop
or
cmp
outsl
orb
dec
xchg
mov
sbb
cmovbe
dec
mov
mov
sahf
shrb
mov
push
jge
daa
add
mov
adc
jecxz
aaa
dec
push
sub
mov
inc
mov
ds
xchg
aas
in
fdivrl
push
scas
das
incl
pusha
fmuls
dec
mov
loope
sbb
inc
add
repz
sub
arpl
sbb
pminub
push
ds
mov
in
lcall
je
or
test
loope
inc
mov
pop
fisttps
es
mov
stos
test
sbb
add
or
mov
mov
inc
jb
mov
movsb
mov
das
xor
pushf
mov
shlb
sbb
cmp
mov
das
adc
sti
divb
gs
pop
sub
cmpsb
push
jge
and
mov
add
ja
push
pop
ret
cmpsb
jge
sbb
lret
repz
test
push
jb
dec
gs
mov
sbb
mov
inc
mov
mov
xchg
ds
vaddsubps
cmpsb
ret
inc
sti
xlat
pop
arpl
mov
in
aas
ret
xlat
jae
or
add
dec
ljmp
jle
addr16
cmp
call
data16
ss
lcall
cs
add
add
inc
sbb
sub
in
scas
addr16
mov
or
push
push
xchg
inc
pop
int
mov
cli
sub
mov
test
jle
and
sbb
stos
dec
mov
xchg
and
inc
cmc
add
ds
inc
jns
in
cmp
repz
int
or
rcrl
mov
lock
cld
lds
dec
mov
dec
sbb
dec
loope
dec
pop
dec
mov
pushf
movsl
or
push
popf
scas
bound
mov
daa
cli
lods
movsb
test
xor
arpl
loope
sub
adc
imul
sahf
push
sbb
push
dec
rorl
xchg
cmp
lea
pop
cmp
in
or
aam
testl
and
push
cmp
call
mulb
loop
lods
xor
int3
fwait
or
xchg
sub
mov
mov
mov
jg
mov
jge
sbb
and
xor
and
xor
out
shl
jmp
lret
add
loope
mov
add
mov
outsb
sub
jne
sub
add
daa
test
xchg
push
fsubs
addr16
mov
mov
stos
clc
outsl
aas
in
add
imul
pop
repnz
push
popf
push
add
insb
inc
in
icebp
out
lock
shr
sub
xchg
sub
xchg
out
pop
fldl
test
mov
jmp
insb
sbb
loope
fcmove
lahf
clc
fcomps
inc
lret
int
bound
jmp
fcomps
test
cld
sahf
cwtl
sbb
movsl
and
mov
ds
jle
loopne
loopne
xor
scas
shr
rcrl
scas
pushf
sub
or
gs
inc
cltd
fmull
push
hlt
mov
mov
push
movsb
fstpt
push
pop
lahf
jle
mov
pushf
cmovb
mov
jne
jo
out
jns
pop
adc
add
pop
dec
shrb
mov
insl
or
jnp
cmp
push
imul
pop
cmp
dec
fmulp
mov
adc
in
mov
sub
or
xor
mov
leave
scas
jbe
rcl
es
mov
adc
xchg
add
cmp
popa
pop
clc
add
cmp
mov
inc
mov
movsl
in
or
sarb
fdivrs
cmp
jg
shll
shrl
push
mov
jnp
scas
push
outsl
leave
or
pop
popf
or
mov
mov
sarb
lcall
das
sbb
stos
add
cwtl
xor
int
cmp
jne
inc
es
mov
inc
dec
imul
push
repnz
mov
mov
jecxz
shlb
jae
push
popa
nop
outsl
imul
xor
mov
fidivs
pop
xchg
and
es
insl
mov
add
and
adc
pop
adc
push
inc
fidivrs
lret
repz
lods
icebp
aam
xchg
pop
push
rorl
inc
dec
pop
testb
aad
jb
xor
cmp
test
sub
push
jns
faddl
mov
mov
arpl
jp
stc
loope
or
arpl
stos
inc
mov
and
fsubrs
mov
jl
pushf
std
dec
mov
out
es
insl
dec
mov
int
arpl
mov
test
xor
jo
test
inc
xor
cmp
cwtl
mov
push
or
sub
add
lods
sub
scas
pop
popa
fisubl
ljmp
xor
in
sbb
in
lea
pusha
rorl
inc
mov
dec
jb
lods
inc
push
jb
outsl
cmpsb
test
xor
movsb
mov
outsb
push
insl
adc
mov
push
je
sbb
mov
sarl
lds
pop
jnp
movsb
ljmp
vmwrite
xchg
popl
pop
in
lret
mov
mov
fs
sub
ss
inc
pop
loopne
push
int3
ss
lcall
pusha
fs
out
and
aaa
loopne
andl
cmp
insl
mov
sub
nop
enter
dec
cmp
fldt
and
out
sbb
je
jl
fildl
je
pop
clc
cmpsl
push
insb
jl
sub
fs
retw
call
or
mov
arpl
stos
sbbl
out
sub
mov
sub
fcmovbe
lds
pop
cwtl
jl
cmp
xchg
xorl
outsb
xchg
call
xchg
scas
pop
jnp
and
insl
inc
cmc
sbb
jno
push
cmp
inc
adc
je
pop
int
jnp
aam
dec
push
jge
shl
xor
lea
fsubrl
jno
mov
cmc
inc
xchg
mov
pop
mov
icebp
fstps
pusha
aad
push
mov
adc
cmp
xchg
push
stos
cmpsb
test
push
cmc
adc
jmp
addr16
outsb
popf
divb
mov
js
xchg
cs
fwait
ds
mov
mov
xchg
jo
cmc
add
cmp
inc
dec
add
mov
decl
mov
jo
fstpl
ds
or
inc
add
fcmove
addr16
adc
cmp
xchg
dec
sbb
sub
cwtl
sbbl
aaa
testl
out
cmpsb
and
add
enter
push
lahf
nop
pushf
xorl
inc
sbb
push
xor
jmp
ljmp
cmp
pop
out
xchg
lods
test
xor
and
xor
je
xor
gs
xchg
or
test
or
xor
test
movsl
or
xor
push
stc
or
stc
mov
movsl
hlt
xchg
sbb
inc
mov
dec
cmc
dec
outsl
loopne
cli
xor
inc
shlb
insb
jno
lcall
adc
mov
sub
inc
xchg
cmpsl
int
xchg
imul
inc
fcomps
shr
testb
jb
push
add
push
cld
pop
and
dec
out
jmp
das
pop
sahf
cld
mov
cmp
mov
mov
ja
stos
fimuls
rcrb
jno
cmp
jmp
ficompl
test
inc
test
aas
xor
adc
inc
mov
mov
and
jae
mov
sub
movl
mov
pop
or
pop
dec
je
pop
adc
and
lahf
loop
sbb
dec
je
cmp
pop
sub
pop
push
sbb
fisubl
scas
fistl
add
xor
jo
inc
testb
jp
jns
popa
imul
mov
enter
jp
lea
bound
lock
sbb
jns
push
popf
jecxz
je
hlt
xchg
ds
jb
lods
negb
ljmp
or
sub
sbb
dec
xchg
outsb
dec
push
adc
test
clc
int3
das
shlb
lock
pushf
jge
and
fnsave
fs
mov
sbb
ret
and
ds
filds
iret
adc
or
and
and
mov
mov
push
sbb
rorl
test
cmp
shrl
sbb
inc
push
pop
push
inc
or
mov
mov
jg
hlt
lea
cmc
xor
fdivrs
je
push
aaa
xlat
or
sbb
movhlps
cmp
arpl
dec
lret
xchg
stos
push
and
in
push
daa
jge
icebp
test
arpl
mov
pop
vmovaps
add
mov
fst
rcr
ds
std
scas
mov
out
cmp
int3
in
dec
aam
popf
dec
sub
imul
jo
sahf
or
jle
adc
sbb
mov
inc
rol
pushf
pop
pop
push
push
inc
xchg
pop
dec
ds
out
cld
ja
fs
xor
mov
push
push
insl
mov
jbe
pop
xchg
push
inc
aaa
mov
inc
xchg
add
rcrl
sahf
outsb
push
add
inc
repz
call
aam
sbb
push
push
jge
adc
dec
clc
pop
pop
fists
mov
pop
lret
std
bound
and
add
inc
xchg
int
mov
les
arpl
pop
jnp
fmuls
cld
les
fcoml
inc
in
arpl
ss
pushf
mov
movsl
out
cmp
test
sbb
mov
push
fisubrl
xchg
outsb
or
int3
rclb
lods
mov
jmp
pop
xlat
mov
mov
adc
movsl
push
jmp
sbb
iret
push
cmp
push
lea
std
cmp
loop
add
mov
sti
in
imul
shrb
jmp
stos
ds
adc
xchg
addr16
mov
mov
data16
call
pop
aam
call
sub
fbld
out
jp
in
push
add
mov
push
ret
mov
jecxz
andl
add
add
pop
fwait
loopne
jns
push
jnp
dec
cmp
aad
sub
xor
loope
or
or
fcoml
mov
xchg
loopne
test
dec
add
test
mov
push
dec
fdivp
scas
enter
lcall
out
movsb
push
sbb
stc
rcrl
push
lods
xrelease
mov
aaa
shll
je
std
pop
lods
xor
imul
call
mov
adc
and
in
push
enter
sbb
inc
inc
lahf
xor
lea
lahf
mov
mov
psrld
jae
fidivs
lcall
or
shlb
in
sub
mov
inc
mov
cmpsb
mov
sbb
push
add
ret
sbb
movsl
fs
in
in
es
sarl
filds
push
xor
shrl
icebp
daa
notb
xchg
inc
add
in
fistps
cmpsb
inc
xchg
add
cld
sbb
fistpll
incb
addr16
sbb
xlat
jno
xlat
or
ljmp
leave
fistpll
adc
daa
inc
out
addr16
ja
std
push
add
fnstenv
and
shr
dec
cmp
pop
in
add
hlt
stos
jmp
fmul
movl
pop
iret
pop
lds
push
repnz
mov
push
sbb
aas
subb
loope
pop
jns
jecxz
sbb
cmp
push
in
test
rolb
mov
inc
jecxz
jb
rol
add
mov
fcmovbe
adc
mov
push
fsubl
jo
lahf
pop
mov
xlat
add
inc
ret
sbbb
lds
mov
sub
xorw
pop
fistpll
mov
sar
shrb
jge
jo
mov
outsl
movsb
mov
push
adc
mov
mov
repz
push
outsl
sbb
mulb
daa
aam
cmpsb
pop
or
out
lock
and
adc
cwtl
dec
andb
lcall
lahf
inc
and
pop
pop
push
dec
inc
mov
into
dec
and
xchg
and
mov
inc
cld
push
jo
mov
cltd
adc
mov
stos
cmp
and
fwait
arpl
call
fs
xlat
adc
jns
mov
push
xchg
add
cmp
shr
shlb
or
fcoml
xor
cwtl
clc
cltd
and
mov
sbb
mov
sti
ljmp
mov
xchg
xlat
mov
cmp
lahf
clc
sbb
cmp
mov
and
push
test
sbb
jno
xchg
or
inc
mov
addr16
xor
mov
cld
jns
js
repz
sbbl
cwtl
insl
pop
push
loope
add
xor
pop
jnp
dec
int3
jb
pop
sbb
test
jnp
mov
cmp
inc
outsb
cmpsl
xor
sbb
jmp
out
rcll
jle
std
fisubl
jl
sub
mov
sbb
in
ja
lods
mov
adc
je
inc
out
mov
fcmovnb
sub
negl
int
inc
and
jae
out
lahf
xor
mov
dec
xor
sub
mov
fstl
sbb
into
add
mov
lcall
aaa
mov
rcll
jmp
xlat
sbb
or
push
pusha
lret
js
sti
hlt
dec
inc
mov
aaa
add
cmp
push
xchg
mov
pop
xor
cwtl
xor
sti
std
fdivl
fwait
rclb
ror
adc
xor
movsl
sti
jns
nop
lds
jle
jno
inc
aas
push
inc
clc
ja
shl
jmp
add
jb
cli
mov
pushf
cmp
out
testb
sub
outsb
xchg
mov
ljmp
push
mov
test
loope
insl
and
xor
push
adc
arpl
dec
stos
xchg
aam
addr16
push
adc
cmc
or
and
xchg
and
and
inc
fs
sub
lods
dec
pop
lret
jecxz
mov
out
imull
sbb
pop
cltd
mov
fsubrs
enter
in
sbb
pushf
xchg
adc
dec
aam
std
pop
jbe
imul
jbe
out
mov
insl
test
lret
inc
cmp
mov
orl
xchg
popf
push
cmc
inc
jne
add
xchg
mov
nop
lcall
int
not
add
lock
jbe
mov
fucomip
mov
jno
cltd
popa
pop
lods
insb
or
popf
ret
lret
daa
sub
sarb
jb
sub
xor
pop
jbe
fdivs
lret
test
xor
mov
test
mov
mov
xchg
mov
push
adc
int3
xor
in
xchg
stos
jbe
lahf
shl
and
sub
addl
mov
nop
jl
cmp
test
jb
jne
fstl
rolb
cmp
add
mov
lods
cld
jmp
push
test
es
jmp
push
sub
add
ja
pushw
lahf
cmp
inc
out
nop
cmp
xor
inc
pop
push
dec
and
dec
or
jge
pop
ffree
stos
popf
inc
sub
mov
fdiv
pop
jmp
pop
imul
cli
out
mov
sub
xchg
scas
dec
outsb
xor
ret
xor
in
cli
push
sbb
dec
movlps
cmp
mov
imul
add
dec
sub
daa
or
and
loopne
test
addps
clc
je
outsl
jns
fcoms
test
std
rcrb
add
dec
inc
mov
inc
hlt
outsl
pop
xor
idivb
addr16
add
lods
in
lahf
in
loop
into
cmp
jnp
cwtl
xchg
dec
adc
jg
jmp
sub
add
mov
sbbl
int3
pop
add
adc
add
insl
in
jge
and
mov
push
lock
mov
cmc
out
mov
movsl
inc
lock
and
call
pop
adc
cmp
fstpl
xchg
dec
gs
dec
jbe
in
loop
xchg
jecxz
inc
enter
daa
dec
sbb
jmp
arpl
inc
test
std
in
inc
add
in
pop
pop
jno
inc
ss
push
mov
out
mov
cmc
push
xor
icebp
leave
cwtl
jo
mov
iret
sub
pop
sub
push
push
cwtl
and
ret
rorb
scas
ret
gs
imul
andl
dec
ficomps
ss
mov
mov
sbb
movsb
in
or
or
sbb
adc
hlt
and
adc
or
fildl
stc
inc
cmpsl
imul
mov
mov
pop
and
rorb
adc
aaa
stc
imul
shlb
sub
stos
push
mov
adc
fwait
pop
inc
push
out
push
push
dec
pop
jb
out
push
cs
xor
jle
insl
mov
or
jae
pop
mov
xchg
jp
adc
ret
lret
int
sub
cli
bsf
addr16
cli
out
ret
add
scas
xchg
stos
xchg
ret
test
push
mov
jge
xchg
add
sbb
xchg
push
push
and
clc
in
sub
mov
insb
mov
std
mov
popf
ljmp
mov
or
inc
mul
lea
jbe
and
dec
sbb
lret
adc
adc
inc
addr16
insb
dec
sahf
fimull
dec
sarl
jmp
repnz
mov
outsb
in
xchg
add
mov
call
mov
fldcw
js
repz
adc
test
test
push
inc
lods
and
cmpsl
sbb
push
outsb
sbb
dec
cs
mov
pop
ljmp
popf
inc
jle
pusha
mov
lcall
mov
push
or
outsl
mov
das
cmp
lret
repz
inc
cmp
xchg
orl
shrb
sub
cmc
lret
xor
sub
repz
arpl
std
push
enter
popl
pop
daa
mov
add
mov
cmp
test
movsb
push
sub
add
fistps
or
stos
icebp
fidivrl
je
js
jo
add
xor
stc
cmp
jmp
cmp
sbb
adc
sub
xor
add
push
mov
aam
mov
test
fadds
push
cltd
icebp
or
sarl
adc
leave
jns
inc
xchg
pop
push
sbb
mov
sti
xorb
fisubs
xchg
mov
sbb
dec
out
lret
jmp
add
cmpsl
nop
cmp
sti
push
out
fbstp
aam
dec
shl
dec
popf
inc
inc
pusha
mov
lea
mov
xor
es
and
testb
pop
bound
enter
xor
pop
adc
enter
outsb
imul
rorl
arpl
xchg
pop
xchg
pusha
mov
andb
pcmpgtw
aaa
lret
inc
pop
mov
mov
and
lret
imull
daa
cmp
push
clc
pop
mov
repz
push
paddusb
sti
rep
inc
fdivrs
or
ret
mov
movsl
out
xor
sti
es
scas
lahf
ret
mov
mov
scas
arpl
in
dec
ljmp
mov
lds
xchg
add
xchg
adc
pop
test
push
movl
into
mov
mov
jnp
call
xchg
scas
xchg
mov
mov
repnz
fisubrl
mov
divb
push
sti
jno
pop
adc
sbb
lret
xchg
inc
pop
jbe
test
fstpl
mov
xor
loopne
jae
mov
je
dec
cwtl
and
or
add
adc
sub
and
cmpsl
pop
push
and
rcr
add
push
cmp
mov
xchg
adc
jge
repnz
test
gs
call
push
pop
in
fdivs
cli
lds
or
xor
sub
sub
out
jae
sbb
adc
loopne
scas
jecxz
mov
adc
add
cld
arpl
inc
gs
daa
xor
imul
fnstsw
cmpsb
dec
mov
dec
mov
cmpsl
in
inc
stos
cmp
xor
movsb
sub
cmpsl
pop
cwtl
xchg
cmpsb
negb
imul
nop
dec
movsb
mov
xchg
sub
push
push
push
and
lret
test
es
sub
adc
mov
ret
aad
fisubrs
jmp
pop
pushl
push
adc
stc
or
xchg
mov
xor
inc
test
shrb
mov
push
test
mov
imul
sub
in
adc
jle
dec
out
fwait
push
add
push
rep
out
popf
stc
or
cmp
aad
jl
stc
add
in
call
aaa
sbb
enter
nop
sub
xchg
call
dec
nop
jg
sbb
incb
in
xor
out
lahf
sub
pop
sbb
and
pop
jb
dec
subb
movsb
jae
iret
mov
push
or
inc
push
add
jl
in
cmc
push
add
lods
das
jle
imul
dec
insb
ds
xlat
into
fmull
jecxz
xchg
cmpsb
sbb
xor
adc
adc
mov
test
ret
xor
lcall
pushf
sbb
inc
test
hlt
arpl
lret
call
pushf
gs
cld
and
test
loop
xchg
cmp
and
pop
repnz
adc
mov
jb
into
int
in
loopne
into
fildl
jecxz
loopne
xchg
jno
or
imul
ficompl
add
xlat
outsb
or
push
in
cmp
xchg
imul
jge
push
push
jnp
or
cmc
in
lret
in
lods
pop
mov
aam
aaa
stc
push
je
dec
lods
adc
pushw
mulb
jb
adcl
lock
flds
fadds
aaa
mov
punpckhbw
pop
and
jle
mov
fsts
xor
or
xlat
or
jbe
dec
mov
aad
fistps
or
in
out
add
repnz
ss
xor
and
or
lahf
rorb
je
sbbb
js
nop
test
cmpsl
test
fcmovne
sahf
jne
in
sub
jl
adc
arpl
ss
fcmovbe
andl
mov
xlat
jns
or
jmp
push
je
dec
and
push
mov
push
lcall
add
pop
pushf
pop
jg
js
cmpb
and
add
pop
ror
stc
aaa
js
fcmovb
fnstcw
pop
jmp
insb
dec
fwait
and
xchg
pushf
inc
outsl
orl
cli
std
xchg
xchg
in
sub
push
sbb
mov
xchg
loop,pt
enter
inc
out
shl
jnp
fs
out
js
jne
cmpsl
insb
imul
into
call
cwtl
xor
popf
jo
bound
mov
lcall
fld1
sub
and
mov
xchg
jnp
fcoms
dec
cmpsb
hlt
in
std
test
movsl
into
push
mov
and
pop
pop
jb
sub
pushl
int3
xor
cmpsl
jle
mov
sahf
pop
pop
sbb
dec
push
or
js
out
imul
shr
cli
xchg
cmp
in
lahf
inc
or
or
xchg
out
mov
jno
loope
inc
jo
dec
jg
sub
xchg
jecxz
or
push
out
sub
shlb
xchg
jecxz
and
mov
sarl
push
jmp
dec
xlat
add
sti
jne
mov
nop
std
xor
fmuls
ret
adc
jmp
aad
jg
imulb
push
mov
dec
push
push
loopne
sbb
adc
adc
icebp
mov
and
mov
out
push
mov
jecxz
lahf
stos
ja
inc
fsubp
sub
dec
add
out
out
nop
stc
shr
fsubr
int
mov
xchg
es
arpl
lds
call
shll
or
fmuls
fldlg2
scas
xchg
cmp
mov
mov
das
pop
jnp
sbb
jmp
out
test
lret
subl
test
push
mov
sbb
test
cmpl
loopne
aad
or
stc
mov
pop
add
inc
sbb
loope
sub
jo
push
les
dec
clc
jne
aas
cmp
andb
pushf
mov
sbb
call
cmc
push
sbb
enter
arpl
and
add
push
in
mull
sub
jmp
lds
cmp
stos
fbld
adc
test
mov
enter
cmc
lock
and
roll
frstor
divl
mov
cltd
shll
arpl
sub
xor
test
cmp
repz
cmpsl
or
mov
push
cmp
push
inc
inc
sbbl
mov
sbb
mov
das
mov
jp
push
sti
ljmp
jg
dec
or
mov
in
push
out
das
sub
mov
repnz
outsb
and
jne
cmp
push
mov
or
xor
fiadds
vcvtsi2ssl
and
mov
sbb
mov
push
pop
dec
pop
pop
mov
xchg
push
pop
mov
sub
jbe
mov
pop
mov
lret
cmp
inc
arpl
aaa
mov
popw
cs
ror
sub
sbb
add
loop
adc
movsl
cmp
mov
push
dec
js
jo
jecxz
inc
fiadds
pop
and
fisubl
cltd
add
pushw
or
loopne
andl
inc
push
or
xor
test
cmp
cmpsl
fsubl
dec
fdivr
push
in
xchg
add
cmp
dec
testb
fistpl
mov
pushf
imul
andb
aas
rcll
insb
sbb
or
arpl
jnp
inc
mov
shl
pop
mov
pop
or
fistpl
cltd
jle
andb
jl
clc
aaa
ljmp
pushl
xchg
push
repz
hlt
fdiv
decb
mov
sub
data16
mov
adc
stos
sbb
push
mov
dec
xchg
pop
mov
lahf
insb
aaa
cli
add
mov
dec
lea
sub
test
xchg
lcall
in
ret
add
adc
add
push
and
mov
sub
ds
jnp
sub
lea
mov
add
or
in
lcall
sub
sbbb
into
std
dec
add
xchg
cmp
es
inc
push
adc
fcomps
in
dec
clc
jge
adc
test
movsb
ja
popa
loop
xchg
cwtl
jne
push
mov
mov
insb
pop
lret
or
out
add
test
lock
mov
inc
andb
daa
xchg
movsb
mov
mov
or
pop
aad
scas
pop
addl
pop
jmp
jl
popf
push
xlat
rcr
scas
xchg
cld
mov
icebp
and
scas
rcll
mov
nop
mov
cli
out
pusha
lret
out
pop
in
int
mov
sbb
movsb
pop
xlat
sbb
xor
mov
inc
in
sbb
test
int3
mov
in
inc
in
adc
lock
mov
cld
pop
sbb
lret
xor
inc
jae
orl
sbb
cmp
mov
imul
xchg
cmp
bound
fwait
cltd
ljmp
inc
fidivs
cmc
outsb
inc
in
push
mov
and
aam
stos
inc
jge
mov
or
pushf
test
lods
data16
or
jo
mov
ja
es
testl
fistl
imul
in
lods
pop
cmp
outsl
lods
out
test
imul
sbb
mov
add
adc
jecxz
mov
out
fmuls
push
add
adc
test
add
jg
dec
adc
pop
inc
fildl
mov
orl
fidivl
cmp
xchg
ja
iret
xchg
leave
inc
or
popa
jno
cmp
roll
mov
lea
mov
mov
pop
mov
and
jnp
adc
push
rolb
and
clc
cld
and
rol
push
cmpsb
jl
mov
dec
push
in
jnp
and
inc
stos
call
sub
xor
or
adc
loope
cmpsb
cltd
lahf
call
popa
xchg
pop
xor
add
pusha
and
decl
ror
mov
sub
imul
add
rclb
pop
dec
leave
mov
aam
cmc
jb
into
mov
mov
mov
push
in
sbb
mov
out
inc
insl
nop
xchg
sbb
mov
fwait
and
mov
orb
or
test
cmpsl
pop
ja
or
jle
xor
pop
out
and
gs
mov
cmp
sbb
xlat
jno
ds
jle
xor
adc
orb
pop
xchg
sub
dec
sti
fsin
xor
xlat
sub
imul
adc
mulb
add
add
push
mov
pop
je
mov
sub
std
xor
mov
mov
lret
or
xor
imul
add
ljmp
push
jae
lods
test
frstor
and
push
bound
inc
jl
add
jo
add
inc
data16
mov
fmulp
and
pushf
push
js
mov
and
mov
les
add
aad
xchg
shrl
add
sbb
sub
fistpll
jg
cltd
and
xchg
inc
into
outsb
push
inc
sub
dec
popa
insb
jecxz
pop
dec
cwtl
push
mov
cltd
ja
shr
cmp
clc
test
cmp
lahf
in
ss
jns
and
arpl
sbb
ss
out
cmp
imul
push
int3
movsl
shll
call
repz
fimuls
outsb
mov
sti
lock
enter
aaa
xchg
adc
mov
xchg
ret
fisubrs
insb
and
xchg
cmp
nop
aaa
mov
cmp
sbb
ficoml
test
adcl
mov
jbe
out
in
aam
add
jbe
dec
pop
or
mov
jb
test
popl
shr
push
outsb
pusha
popf
rorb
xor
xlat
inc
outsl
dec
jbe
mov
les
sbb
or
lods
jnp
ss
popf
mov
insl
pop
fildll
ss
out
mov
int3
dec
lret
xchg
aaa
das
ss
inc
pop
lods
sub
fistps
mov
add
mov
shlb
mov
xorl
sahf
xchg
lea
push
inc
pushf
pop
int3
add
repz
inc
ss
orb
dec
push
faddl
in
push
xor
mov
cmc
mov
insl
push
mull
int
add
xor
lock
stos
stos
lahf
ss
sbb
shlb
dec
sahf
sarl
xchg
or
jbe
push
sub
adc
outsb
dec
xchg
nop
adc
rcrl
add
mov
and
push
cmp
int3
clc
rorl
mov
popa
or
and
jecxz
and
push
fdivrs
hlt
scas
ja
pop
scas
nop
pop
insl
das
js
ss
cmp
fcomip
cmpsb
pop
pushf
fisttpll
or
cld
mov
daa
nop
inc
shlb
adc
add
cmp
jle
jns
xchg
mov
jae
sbbb
arpl
push
sbb
test
int3
addr16
push
sbb
xlat
scas
insb
adc
cmp
xchg
add
or
inc
mov
leave
and
dec
mov
imul
imul
dec
jae
inc
cmp
or
and
rcll
ficompl
sar
test
scas
sub
icebp
jl
mov
lahf
add
push
sahf
cmp
mov
stos
outsb
leave
mov
pusha
loope
ss
out
sbb
sbb
int3
in
adc
cmc
jecxz
mov
cli
in
bound
mov
jle
push
push
leave
loop
mov
mov
dec
out
xor
in
popf
cld
mov
in
xchg
cmpsl
addr16
pop
jmp
addr16
or
ret
jne
xchg
xchg
mov
inc
out
sbb
push
pop
and
ret
test
repnz
pusha
mov
mov
sub
xchg
add
clc
or
mov
mov
lahf
cmp
psrlq
ljmp
mov
jnp
jle
cmpsb
jno
mov
mov
xchg
xlat
sbb
sbb
stc
popf
jns
dec
cli
inc
mov
repnz
adc
dec
outsb
lret
int3
test
imul
push
decb
cmp
and
cwtl
cli
or
sbb
negl
cs
pusha
adc
call
cwtl
cld
xchg
cltd
mov
sahf
movsb
icebp
sbb
and
outsb
fisubrs
add
cli
sahf
in
mov
pop
xlat
cmp
push
cli
xchg
outsb
sbb
lret
aam
imul
mov
into
push
and
call
fistps
decl
jbe
pop
movsl
repnz
jmp
mov
out
lock
or
scas
xchg
repnz
lods
sarl
outsb
push
jp
or
mov
jno
mov
pop
lret
pop
ret
cmp
push
mov
popa
xchg
mov
movsl
outsb
add
test
sbb
mov
xchg
dec
jg
mov
and
mov
jle
out
clc
out
sbbl
mov
pop
cmp
inc
mov
idivl
fnsave
sbb
clc
int
mov
adc
aad
jno
xor
sarb
mov
or
inc
outsl
mov
mov
je
test
push
mov
cmp
xchg
xchg
into
dec
add
inc
xor
sbbb
test
xchg
stc
lds
dec
repnz
jnp
rcrb
loop
test
cmpsb
mov
pop
push
ret
xor
imul
jnp
mov
test
movsb
pop
cmpsl
ljmp
sbb
stos
ja
flds
andl
je
scas
push
cmp
xchg
rcl
adc
dec
mov
pop
pushl
pop
inc
int
movsl
fisubrs
push
insl
mov
jne
test
and
leave
and
pushf
pextrw
bound
adc
pop
cltd
cli
les
mov
stos
xor
fdivr
arpl
lcall
mov
adc
jl
aad
shrb
sbb
push
xchg
xlat
add
out
cmpsb
insl
fildll
lods
xor
inc
loop
inc
sbb
xor
insl
sbb
loopne
sbb
movsl
enter
mov
mov
push
sub
orb
jns
les
add
add
cmc
test
jge
bound
fidivrs
ficompl
dec
xchg
xor
stc
mov
add
mov
cld
jmp
push
cmp
sti
mov
loope
adc
iret
xor
nop
pop
mov
mov
jp
lock
push
xchg
and
adc
or
mov
sub
cmp
lods
out
inc
add
pop
repz
pop
mov
out
jecxz
adc
pop
lds
inc
fisubrs
mov
es
fwait
lret
fwait
cld
fadd
sub
lds
adc
and
nop
ds
and
xor
mov
inc
fldenv
loope
stc
jns
push
push
sti
lret
pop
test
lea
test
adc
stos
lea
clc
mov
and
call
add
mov
pop
mov
jnp
xor
add
and
lods
or
adc
stos
mov
inc
sub
stos
inc
loopne
xchg
xor
pop
mov
add
inc
jbe
mov
xchg
leave
jg
pop
sub
lret
jnp
adc
mov
dec
cli
enter
jle
xchg
fwait
push
jno
push
xchg
push
lcall
pop
hlt
es
xchg
add
adc
cmp
cmpsl
pop
add
cmp
jno
sbb
inc
stc
fisttpl
xchg
pop
les
sub
in
adc
mov
imul
mov
xchg
push
insl
jb
popa
hlt
jmp
dec
or
sbb
fimuls
push
mov
rcr
fcomps
lods
sub
ficompl
cmp
ss
jg
adc
rolb
mov
jae
mov
pop
in
inc
in
sub
dec
loopne
dec
lahf
scas
or
inc
int
pop
negb
leave
lods
push
adc
imul
fs
jmp
mov
ficompl
out
ficomps
pop
pop
xchg
inc
and
mov
inc
lods
jge
adc
xor
push
lods
popf
or
addb
scas
in
cltd
inc
mov
add
repz
popf
sbb
lods
jns
mov
clc
xchg
sbb
jae
inc
addb
clc
hlt
inc
mov
pop
fs
scas
jl
sub
pusha
inc
mov
and
fistpll
lods
lea
pop
sar
mov
fucomip
jns
xor
add
mov
adc
xor
out
pop
aad
or
inc
add
or
add
js
or
stc
pop
mov
cltd
push
sub
fcmovnbe
sbb
xchg
add
ds
dec
fisttpll
cmp
xchg
pop
imulb
xchg
fdivrp
mov
adc
xchg
iret
scas
imul
shrl
xor
popf
in
test
jnp
and
jl
fisttpl
mov
test
push
lds
lods
nop
rorl
xchg
testl
dec
push
outsb
outsl
sub
std
loopne
adc
scas
insb
jmp
xor
and
fstps
sti
jae
adc
popf
sub
shrb
cmpsb
sub
jo
add
adc
push
adc
push
add
pop
cld
rolb
mov
and
sahf
fildll
add
popa
loopne
sti
adc
fstps
out
stos
lods
out
adc
inc
popf
adc
mov
sbb
xor
mov
out
sahf
jo
loopne
ljmp
pop
sbb
add
jp
leave
push
cld
jl
or
or
push
dec
push
mov
dec
inc
add
in
rolb
out
lret
sub
movsl
xor
adcl
mov
push
xchg
xorb
xchg
mov
adc
das
fildll
sti
ficoml
xchg
lcall
int
lea
enter
movsb
sbb
test
or
dec
insb
repnz
out
inc
pop
enter
mov
dec
add
out
insl
xchg
cwtl
sbb
xchg
and
add
xor
xchg
pop
push
aad
or
jae
or
xor
mul
ds
or
adc
mov
loope
push
pop
and
and
dec
icebp
mov
add
mov
insl
data16
jecxz
test
shlb
cwtd
adc
push
cmp
loop
orb
mov
add
shr
loopne
andl
hlt
and
adc
mov
subb
movsl
or
adc
lret
adc
testl
test
mov
jmp
movsl
es
xor
xor
mov
inc
xchg
shlb
jle
cli
add
and
mov
leave
lods
test
mov
rcr
and
leave
sbb
and
jecxz
adc
mov
mov
or
add
cwtl
sbb
repz
pop
push
fldcw
lds
std
popf
pusha
mov
aad
pop
fwait
testl
mov
cmc
xor
enter
int3
adc
and
lea
add
shll
cmp
in
imulb
inc
sbb
dec
out
xor
das
ja
addr16
into
cli
sbb
out
not
add
enter
mov
mov
add
add
dec
lock
roll
es
and
pop
imul
cmp
push
vmovshdup
loopne
ds
jmp
lret
jne
fwait
cmp
sbbb
adc
mov
scas
repz
add
xlat
inc
fisubs
dec
adc
imull
insl
cs
pop
xor
cmc
fsubr
addl
sbb
pop
push
ds
rorl
cmp
orl
and
or
in
or
pusha
sub
cmpsb
lods
mov
loope
cmpsl
push
sahf
sub
fsubr
xchg
clc
stos
cmp
mov
sbb
adc
jns
fsubrl
ja
int3
lods
xchg
cld
add
int
loopne
sbbl
mov
add
cmp
pop
add
inc
push
xchg
dec
mov
out
adc
pop
cmp
es
mov
inc
mov
testb
lods
mov
jno
rolb
mov
mov
xchg
inc
adc
fidivl
jp
je
xor
pop
icebp
sub
fptan
xchg
mov
out
pop
push
mov
adcb
mov
lahf
or
add
addr16
push
es
mov
and
dec
sti
sbb
sub
add
enter
lret
inc
hlt
aad
sbb
inc
cs
dec
adc
sti
xchg
sub
or
dec
je
push
nop
xchg
pop
sub
adcb
dec
roll
mov
dec
popa
bound
lods
mov
fmull
repz
andb
cltd
mov
lret
aad
push
shll
and
insb
cmpsb
mov
out
inc
loopne
inc
xchg
pushf
aad
roll
ds
rolb
call
int
out
notl
clc
mov
mov
test
aaa
ror
enter
xchg
xchg
mov
mov
cmp
mov
test
out
or
pop
mov
xchg
in
jbe
cmp
cltd
pop
data16
mov
aad
icebp
call
cmp
repz
and
or
mov
fdivr
push
and
int3
aaa
stos
add
out
xchg
sub
into
pop
sub
loope
cli
sbb
dec
fmul
add
outsb
dec
and
and
in
mov
sbb
inc
lock
lret
je
daa
aaa
inc
mov
cltd
punpckldq
adc
xchg
and
mov
xchg
mov
jmp
mov
nop
sub
mov
cli
mov
adc
or
cli
push
mov
xor
lods
sti
inc
arpl
mov
outsb
rorb
popf
push
movsl
into
cmp
or
lods
arpl
leave
inc
sub
repz
mov
rcll
jb
outsb
addb
dec
jns
call
sub
rorb
hlt
push
push
testl
xor
sbb
insb
and
pop
out
mov
cmc
push
scas
cmpsb
popf
jb
nop
jbe
outsl
cmpsb
sub
shl
push
lahf
orb
lock
sbb
xchg
sub
outsb
dec
xorl
hlt
ja
adc
or
push
add
in
int
mov
ja
rorb
out
dec
gs
shlb
or
ss
out
adc
outsb
cltd
pop
pop
jbe
dec
test
pop
inc
into
nop
cmc
mov
mov
outsl
outsb
adc
leave
scas
push
aad
movsb
movsl
int3
sar
push
add
xorl
clc
cli
adc
mov
inc
jns
lret
out
mov
aaa
popa
jg
and
push
into
mov
or
aam
in
daa
js
xchg
dec
popf
push
pop
dec
mov
lahf
js
test
sti
dec
fadds
or
adc
xor
loope
adc
incl
pop
mov
pop
lods
pop
jns
or
call
call
jp
call
mov
dec
loop
sub
fidivrl
cmp
and
mov
and
repnz
int3
scas
lock
sbb
sti
mov
jnp
ss
mov
inc
mov
xchg
outsl
add
inc
popf
mov
imul
iret
adc
adc
inc
push
jmp
mov
dec
movsb
cli
lea
and
sbb
stos
int3
rorl
push
test
jmp
mov
ljmp
lret
daa
mov
hlt
pop
push
lcall
stos
gs
xchg
push
and
sub
mov
int3
adc
int3
cli
mov
push
sti
jmp
xchg
cld
test
ja
lock
mov
fists
inc
pushf
ret
or
mov
cmp
or
rol
push
test
mov
and
decb
add
es
pop
jecxz
xchg
xchg
stos
pop
xchg
push
push
add
leave
xlat
shlb
mov
cmp
lock
inc
fldl
and
aad
aas
or
sub
arpl
sub
sbb
sbb
popf
push
adc
sarl
lds
shll
mov
sbb
cmp
lret
inc
jg
xchg
pop
mov
fdivl
pop
sarl
mov
xlat
and
movsb
inc
data16
pop
mov
mov
jp
mov
cmp
sbb
inc
xchg
dec
mov
outsl
fcomip
pop
clc
mov
sti
push
xchg
push
shlb
mov
in
xchg
pop
cltd
pop
xchg
lret
punpckldq
aad
inc
push
fldenv
add
iret
sbb
sahf
mov
mov
sub
pop
adc
fwait
mov
clc
inc
popf
test
fdivs
cmp
dec
and
mov
in
shlb
shl
push
cs
lret
cmp
stos
loope
xchg
icebp
lahf
jge
sbb
mov
out
sbbl
ret
pop
out
adc
push
or
dec
inc
push
popa
je
dec
cli
and
jno
push
sbb
mov
push
or
fdivr
les
and
mov
ror
inc
iret
ud1
fisttps
popf
lea
bound
cmpsb
popa
and
jns
roll
ret
test
xchg
sub
std
in
cmp
sub
cmc
dec
sbb
cmpsb
jmp
mov
adc
fbstp
cmc
pop
or
or
jmp
fnstenv
leave
mov
push
js
fbstp
fisubrl
add
cmp
loopne
jmp
inc
mov
call
sub
adc
mov
xchg
fimull
cld
push
mov
aad
test
test
enter
xchg
ljmp
gs
jmp
dec
jne
fsubl
out
in
mov
out
cwtl
sub
dec
out
cwtl
out
sarb
inc
push
mov
repz
lods
daa
jmp
adc
inc
sahf
hlt
mov
sbb
aaa
pop
add
xchg
push
push
lea
push
inc
dec
aas
shrb
aad
lcall
out
xchg
pop
int
xor
call
pop
push
and
push
dec
and
sbb
sub
sbb
clc
and
shlb
pop
add
mov
pop
ljmp
test
test
cmpsb
aas
cmpsl
das
out
rcll
jnp
es
shlb
repnz
loope
test
jle
movsb
pop
or
or
mov
subb
std
dec
ds
xchg
daa
or
pop
xlat
cmc
outsl
imulb
push
movsl
xor
and
cmc
hlt
lea
lahf
or
fiadds
lcall
test
and
pop
jge
cwtl
add
or
test
out
ljmp
push
mov
add
jne
lcall
xor
gs
xchg
sub
xor
jge
in
aas
inc
popf
xchg
gs
fcompl
shlb
insl
scas
in
pop
inc
imul
test
sbb
push
cmp
jle
sahf
sub
fcomps
cmp
fisubrs
ss
xor
sarl
xchg
mov
pop
or
xchg
js
cmpb
into
xchg
jno
incl
inc
outsl
and
push
lahf
cli
js
mov
iret
out
or
inc
repz
push
movsb
arpl
sub
sbb
mov
aam
jno
sbbb
lahf
out
dec
ja
inc
int3
pextrw
cmp
jmp
fimull
popf
xchg
mov
inc
daa
sbb
shll
jp
push
jmp
stos
push
sbb
scas
je
lcall
mov
sarb
into
bound
rcrb
inc
cmp
loop
jnp
jae
dec
das
xor
jnp
cmp
xchg
xchg
movsb
mov
mov
sbb
and
clc
into
loop
cs
sub
out
pop
movsb
repz
jno
scas
decl
sub
push
xor
loope
sub
push
hlt
out
fcmovnb
cmp
fs
adc
sub
lods
push
mov
jge
jae
push
push
mov
cmc
xor
je
call
fnstsw
dec
ret
testl
adc
mov
sub
cld
ds
sbb
dec
psubb
std
dec
xor
mov
pop
jp
in
push
int
aad
les
mov
sti
sti
aaa
inc
ss
loop
fcomi
aas
xor
leave
mov
out
pop
ss
sub
cmc
inc
je
scas
sub
inc
cmp
aaa
xchg
push
ret
xchg
or
cld
sub
mov
jmp
cli
xchg
loop
ja
mov
mov
mov
cmc
popa
out
adc
rcrb
add
add
push
dec
jl
jb
addr16
cmp
mov
mov
pop
fistl
dec
pop
push
xchg
cld
ret
cvtpd2dq
jne
data16
ds
pop
xchg
ret
inc
push
xchg
mov
adc
cmp
mov
and
pop
or
dec
add
cltd
xor
dec
dec
cmpsl
ds
xchg
addr16
rclb
xor
xor
sbb
int3
lea
lcall
js
loopne
push
adc
push
xchg
fstl
or
outsl
repz
adc
out
mov
les
sbb
pop
pop
out
outsb
or
ss
inc
jecxz
adc
pop
std
fst
aas
cmp
lahf
push
dec
jl
adc
cld
in
and
sbb
xchg
test
mov
jle
cmp
test
aas
mov
push
mov
push
sbb
inc
mov
aas
xchg
xchg
cmp
and
inc
jb
out
mov
pusha
xchg
mov
loopne
jge
push
or
stos
or
ja
test
mov
mov
xlat
sets
mov
xor
dec
xor
sbb
sti
inc
mov
in
filds
mov
xchg
ror
lret
in
adc
mov
pop
xchg
jo
xlat
sti
push
mov
xchg
out
mov
pop
in
push
aas
in
iret
xchg
js
mov
fstl
in
push
dec
pop
icebp
sbb
mov
mov
mov
push
ds
and
dec
repz
push
fisubl
outsl
xchg
outsl
ret
jle
mov
push
dec
nop
jns
lock
imul
test
out
addl
or
push
inc
push
sbb
adc
insb
sbb
sbbl
add
in
xor
mov
sub
xor
mov
out
push
aas
jbe
rcr
dec
call
aas
xor
or
adc
iret
mov
pop
movb
test
push
orl
xchg
or
test
and
movsb
shrl
xor
adc
mov
xchg
pop
sahf
popf
and
movsl
mov
cmp
jno,pn
lock
inc
es
push
movsl
arpl
dec
sbb
or
inc
dec
int
and
psrad
insl
jp
or
fsubs
repz
mov
adc
sub
lods
push
and
sub
outsl
xchg
mov
jmp
or
hlt
mov
dec
or
xchg
rcrb
mov
data16
mov
mov
push
.byte
.byte
