xor
inc
ret
push
push
call
xor
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
call
cmp
jne
push
call
pop
call
push
push
call
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
add
mov
cmp
jge
push
call
pop
push
push
call
call
mov
mov
pushl
pushl
pushl
call
add
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
call
ret
jmp
jmp
cmpl
jne
jmp
push
push
pushl
call
add
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
jmp
push
push
call
pop
pop
ret
xor
ret
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
mov
lea
push
mov
call
add
mov
mov
addl
ret
jmp
jmp
add
ret
ret
xchg
xor
xchg
ret
push
addl
pop
ret
add
popl
push
mov
push
pop
push
xchg
add
push
pop
xchg
xor
xchg
xchg
xor
xchg
mov
pushl
ret
jmp
ret
ret
push
push
push
push
push
push
push
push
push
push
push
push
call
add
pop
pop
pop
pop
pop
pop
pop
ret
push
pop
ret
mov
ret
push
popl
ret
push
pop
push
pop
push
pop
mul
xchg
xchg
xchg
xchg
xchg
xchg
push
pop
push
addl
pop
ret
push
pop
ret
push
pop
ret
push
addl
pop
ret
pop
push
xchg
ret
add
push
mov
push
push
push
xor
push
mov
xchg
mov
call
push
push
call
call
push
push
call
push
push
push
call
call
push
call
push
push
push
call
call
pop
pushl
xchg
push
push
call
push
push
push
call
push
push
push
push
call
push
push
push
call
push
push
push
push
call
push
cmp
jae
ret
pop
call
push
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
pop
ret
nop
cmpl
jle
cmpl
jge
movl
jmp
mov
or
mov
mov
mov
add
call
xor
mov
xor
mov
ret
mov
push
push
push
add
mov
lea
movsl
movsl
mov
call
lea
mov
mov
call
mov
test
jne
xor
jmp
mov
cmp
jae
call
sub
add
mov
add
mov
add
cmp
jae
call
add
mov
add
cmp
jne
sub
mov
call
subl
mov
mov
mov
mov
mov
add
pop
pop
pop
ret
lea
push
add
mov
mov
lea
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
ret
nop
push
push
add
mov
mov
into
mov
jnp
add
lods
pop
clc
sahf
data16
add
lds
add
roll
insb
mov
add
negb
add
movsb
jbe
jmp
jg
inc
pop
clc
adc
ficompl
enter
mov
sub
outsb
sub
insl
aam
push
or
jmp
fwait
jbe
mov
cwtl
sub
mov
xor
fiaddl
or
fisttpll
mov
leave
sahf
fwait
arpl
insl
xor
cmpsl
shlb
adc
push
push
aad
push
mov
stos
pushf
fwait
rorl
sbb
and
fdivrs
dec
add
mov
sub
xor
push
lock
rcl
xchg
ds
jae
pusha
rolb
cmp
adc
cmp
pop
movsb
sub
add
cmpsl
push
and
jnp
int3
dec
icebp
jle
rolb
mov
mov
jmp
ret
push
push
cld
repnz
loop
xchg
sub
fsts
nop
fs
push
icebp
mov
out
dec
popf
cli
xchg
mov
cmpsl
sbb
and
sbb
lret
and
fcompl
dec
fidivs
jb
lahf
out
or
jo
or
mov
mov
inc
rol
mov
testl
leave
mov
push
loopne
push
xor
cmp
xchg
lcall
ja
sahf
xchg
push
sbb
das
loope
adc
dec
fwait
sub
repnz
insb
fcmovu
xor
dec
cmp
push
inc
fdivr
pop
aam
fdivl
add
stc
lcall
push
mov
mov
pop
rcll
ret
leave
jo
jb
mov
out
sbb
aam
pop
lret
fwait
mov
lock
inc
jae
test
pop
dec
cmp
out
inc
xchg
imul
and
push
sub
dec
sub
bnd
or
imul
cmc
push
cmp
sub
lock
xchg
inc
mov
pop
stos
xchg
mov
imulb
inc
orb
mov
push
fdivs
cmpsl
scas
dec
leave
mov
cld
int3
orl
sahf
mov
ds
idivl
sbb
mov
std
test
negb
scas
lods
loopw
cmpsb
dec
arpl
and
cmpsl
je
inc
add
repnz
pop
clc
cmp
push
xor
shrl
mov
xchg
xor
rcr
cmpsl
sbb
fdivrl
sub
xchg
mov
out
out
stos
imul
xor
lcall
cmpsl
fisttpll
cs
push
lea
fmull
sub
cwtl
inc
jl
leave
addr16
mov
ret
and
dec
lahf
add
xchg
mov
mov
incb
imul
pop
fstps
pop
ret
test
mov
push
out
push
into
add
mov
sbb
lret
xor
add
fimuls
cmp
lock
scas
mov
std
push
add
lods
adc
outsb
sti
inc
hlt
pop
sti
mov
cld
jecxz
mov
outsb
popf
xchg
std
mov
mov
enter
int3
subl
sbb
scas
push
push
cwtl
mov
push
xchg
sahf
sbbl
fisubs
rcl
outsl
mov
insb
push
dec
mov
add
pop
addr16
lods
in
fistpl
jge
inc
gs
lods
sub
shll
inc
dec
sahf
and
mov
icebp
test
loop
js
pop
mov
stos
outsl
inc
add
push
cli
stos
mov
cmp
cli
mov
inc
mov
dec
add
sub
push
jl
xchg
das
scas
push
mov
cmp
sbb
loope
and
hlt
add
xchg
out
cmpl
js
and
inc
and
outsl
test
ds
add
aad
cmp
nop
mov
movsl
or
mov
inc
jg
rclb
mov
gs
lcall
out
jg
in
popa
call
adc
and
pusha
call
xchg
int3
dec
mov
sub
fucomip
push
subb
test
adc
gs
xchg
jnp
scas
add
or
sbb
sub
cmpsb
add
adc
fistpl
pop
mov
sbb
sub
xor
mov
pop
cmp
push
adc
int3
inc
xor
add
idiv
test
jo
ja
fcoms
sbb
loopne
je
mov
or
push
adc
vpmullw
rcl
leave
and
movsl
add
xchg
jne
xor
call
pusha
adc
add
add
xchg
in
dec
push
sbbl
fcompl
jnp
jmp
lret
div
lds
mov
js
dec
lock
sub
aad
clc
daa
adc
in
pusha
xchg
jae
dec
xor
rcll
jo
das
into
and
out
mov
lcall
cmpsb
push
sub
ret
hlt
pop
daa
arpl
add
or
dec
xchg
and
scas
cmp
push
add
cmp
lods
cmp
jns
repnz
stos
hlt
in
xor
jo
mov
test
in
test
jns
lods
jbe
mov
inc
ret
fcmovne
cmc
sbb
push
dec
cmp
imul
and
inc
push
mov
mov
dec
dec
push
dec
cmp
pop
mov
push
lahf
mov
xlat
jns
cmpsb
fs
xor
xchg
movsb
or
sub
push
insb
cltd
jb
inc
test
std
fbld
add
xor
add
sbb
js
xchg
jg
sarl
repnz
testb
sarl
ret
xor
jge
repz
shll
jo
xchg
mov
mov
out
clc
fsubl
lds
pusha
scas
push
and
sub
sarl
jo
ss
xchg
jl
push
into
imulb
adc
outsb
jb
scas
int3
gs
dec
aas
sbb
add
mov
and
testl
in
cmpsl
dec
fsts
psubsb
cmpsb
orl
mov
sub
sti
mov
ret
stc
cmp
in
fisubrl
std
xchg
sbb
mov
mov
movsl
les
and
pop
ret
mov
scas
mov
subb
stos
jns
lcall
clc
push
daa
xor
pop
into
mov
mov
lock
xchg
test
orb
pop
mov
adc
rcrl
mov
adc
int
mov
gs
xchg
cmp
jbe
sbb
mov
and
cli
in
inc
jae
adc
mov
lret
jg
test
negb
ret
dec
add
aad
xchg
push
dec
rcrb
push
cld
or
je
movsb
scas
lds
add
je
pop
add
fwait
xor
dec
cmpsl
pop
mov
sub
hlt
push
xor
cmp
push
xor
add
lods
adc
js
shrl
cltd
nop
das
mov
xlat
push
push
decb
cmpsl
sbb
push
je
or
bound
imul
sub
push
and
pop
cmp
xchg
out
jb
enter
xor
fidivl
dec
jb
dec
lock
jl
xor
xlat
lcall
das
adc
bnd
in
cmp
leave
mov
and
pop
fwait
jnp
lea
aam
lds
cltd
sbb
mov
loop
mov
arpl
js
add
jmp
jnp
mull
xchg
clc
xor
jmp
mov
sub
sbb
fcomps
push
xor
arpl
imul
rcrb
movsl
push
outsl
jbe
and
imul
leave
sub
dec
cmovo
pop
mov
pop
fcmovnu
xlat
inc
dec
adc
adc
sbb
lret
aad
push
fnstcw
fstps
jb
lret
repnz
cwtl
xchg
or
lods
das
cmpsl
dec
pop
dec
mov
add
cmp
jecxz
lds
test
mov
daa
sbb
cs
das
xchg
fneni(8087
loope
pop
mov
lea
or
int3
imul
lods
xchg
insb
dec
sub
test
sbb
xor
pusha
movhps
sub
sub
xchg
mov
leave
pop
stc
push
xor
cmpsb
call
cli
fistl
dec
pop
mov
xor
adc
das
jge
xchg
mov
xorl
xor
sbb
pop
inc
bnd
jecxz
adc
lea
mov
push
sbb
idiv
mov
jo
sahf
xchg
rorl
pop
sahf
push
fsubr
xchg
push
mov
sahf
mov
nop
cmpsl
jnp
aaa
inc
jns
lret
mov
test
mov
fwait
inc
mov
clc
repz
mov
mov
fisubrs
ret
loopne
push
adc
shr
adc
sbbb
xor
inc
or
inc
sub
ret
xchg
loope
mov
mov
pop
and
xchg
lds
and
lds
and
jecxz
cmp
lahf
pop
inc
dec
mov
cld
lcall
jl
cmp
add
aad
inc
mov
jmp
mov
or
mov
ret
fadds
ret
aad
ret
hlt
pushf
add
aaa
cmpsb
in
fmuls
iret
sub
sub
jecxz
or
sahf
jbe
or
std
out
sub
pushf
pop
dec
sbb
mov
mov
or
aaa
sub
jecxz
fs
into
icebp
fildl
iret
imul
loop
mov
test
sbb
adc
jb
adc
nop
pop
faddp
xchg
jbe
loopne
push
jge
aas
sub
sub
imul
xchg
inc
mov
xchg
int3
pop
jl
arpl
in
jbe
mov
dec
add
sub
ljmp
iret
in
ret
pop
and
call
jmp
lcall
lods
mov
dec
nop
adc
inc
xlat
jbe
in
pop
call
ret
outsb
mov
push
push
scas
dec
inc
xor
lret
pushf
push
sbb
mov
push
add
pop
icebp
sahf
xchg
mov
mov
pop
add
lods
fidivs
and
adc
pusha
in
cwtl
int
jbe
pop
ret
nop
sub
fdivrl
movsb
lods
dec
jne
stos
add
mov
outsb
lea
mov
xchg
jp
mov
rcll
sbb
cmp
jnp
push
dec
dec
push
in
popa
mov
and
push
add
mov
jmp
fs
dec
pop
imul
dec
mov
xor
push
mov
cmc
sbb
orl
iret
jb
dec
cmpb
shl
push
decb
insl
mov
dec
add
mov
push
cli
shlb
jno
add
pop
dec
mov
mov
and
push
movsl
daa
jge
stc
out
mov
cmp
jns
add
fs
mov
data16
and
lret
adc
mov
imul
push
lahf
arpl
xchg
sub
pop
fisttps
xchg
sbb
inc
push
scas
movsl
sbb
jnp
xor
popf
jb
sbb
scas
xor
aad
lds
std
pop
aad
lret
xchg
pop
jp
xchg
mov
pop
rol
gs
push
out
es
ss
or
jo
out
pop
xchg
and
loopne
or
bound
dec
into
sbb
dec
sbb
adc
aaa
into
mov
xchg
fbld
mov
cltd
nop
arpl
ret
lret
out
imul
xchg
hlt
lahf
push
or
xchg
les
popf
std
es
mov
jno
push
jp
ss
out
ficoms
loop
ret
xlat
int
mov
add
repnz
fildl
inc
mov
mov
adc
adc
ljmp
js
xor
cwtl
add
out
shl
clc
fucom
pop
jo
out
sahf
cmpsb
call
mov
lods
adc
xor
je
mov
int3
mov
ds
xchg
daa
pop
insl
xchg
jne
test
pop
jb
leave
fsubl
inc
addl
or
mov
shlb
lods
inc
push
mov
imul
xchg
and
fisubl
inc
in
mov
jns
jp
mov
mov
lds
jne
ljmp
pop
pop
mov
loopne
inc
das
jecxz
popf
inc
lret
mov
in
cwtl
cli
bt
popf
jg
sarb
stos
test
ds
insl
lods
push
push
mov
inc
push
out
inc
imul
xchg
cmpsb
jne
mov
jmp
sbb
dec
adc
dec
push
xchg
pop
mov
sar
xchg
adc
push
dec
call
arpl
sbb
ret
xchg
nop
mov
xchg
test
jle
mov
adc
dec
repnz
mov
sub
inc
pop
jge
cmpsl
sbb
in
sub
jno
mov
sbb
pop
nop
andl
or
aad
sbb
cmpsb
popa
ror
ljmp
and
push
into
cmovs
push
push
jl
dec
jmp
or
leave
dec
int
add
mov
stos
test
jne
lods
inc
add
pop
mov
mov
mov
fnsetpm(287
fmull
push
mov
push
stos
push
xchg
aaa
daa
push
sbb
cs
enter
sub
js
leave
mov
pusha
int
int
mov
mov
mov
or
and
mov
mov
push
adc
pushf
test
iret
out
frstor
mov
lock
xchg
data16
movsb
pop
inc
cmp
out
or
mov
fdiv
rdtsc
and
push
pop
stc
mov
hlt
leave
push
fstpt
icebp
jge
lcall
jmp
xchg
or
cmc
pop
test
add
loope
push
fistpll
aam
sub
test
pop
cmpsl
cmp
fstps
inc
add
dec
call
cmp
insb
test
add
xlat
sahf
stos
xor
jg
addr16
mov
movsb
mov
pop
sub
and
sub
push
pop
ds
push
ret
mov
xlat
out
jnp
jne
mov
popa
in
adc
push
les
or
rorb
cli
mov
je
sub
test
jl
cmpsb
icebp
xor
flds
mov
movsb
cmp
adc
std
cld
add
inc
pop
mov
cmp
push
ds
ja
xchg
test
loopne
test
movsb
insb
or
xchg
xor
fsqrt
aaa
outsl
cmp
jecxz
lea
icebp
sub
xor
cmpsl
mov
jo
ret
dec
push
in
xor
pop
cmpsl
ficoms
mov
cwtl
out
cltd
mov
push
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
and
loopne
cmp
mov
into
les
jmp
into
mov
testb
mov
lods
shrl
or
inc
lock
cmp
ljmp
pop
xor
jno
scas
icebp
lahf
shrb
inc
mov
sbb
mov
ds
das
mov
jecxz
mov
std
aas
push
push
ds
int
repnz
inc
xor
rorb
lret
je
mov
stos
pop
push
divb
pop
das
in
add
xor
mov
enter
push
popf
jle
cmpsl
imul
xor
repz
enter
ficoml
jo
pop
jnp
testl
push
stc
int
stos
add
icebp
add
and
testb
scas
push
jne
lcall
cmp
sahf
inc
xor
int
and
mov
jne
aad
push
aad
push
or
xchg
in
inc
xor
adc
lahf
sahf
xchg
push
mov
and
arpl
sub
inc
in
in
jle
sub
fnstenv
ljmp
outsb
dec
or
and
push
inc
ds
jo
cmc
mov
loop
xchg
testb
sub
lret
mov
sub
cmp
or
dec
cmp
fcompl
inc
push
mov
xchg
ds
mov
inc
and
add
cmpsb
call
fsubrp
out
icebp
insl
xor
xchg
fcmovnbe
inc
xor
or
movsl
mov
dec
sti
add
mov
jns
mov
jle
pushf
test
mov
xchg
add
das
outsb
mov
into
mov
or
lea
cld
and
ss
test
test
inc
sub
nop
cli
xchg
loopne
in
pop
sub
pop
pusha
xchg
lock
pop
dec
fwait
or
je
icebp
shlb
mov
outsb
push
out
xor
pop
add
out
push
repnz
pop
pop
mov
imul
movsb
into
inc
and
add
mov
mov
add
data16
jnp
hlt
ret
xor
icebp
into
mov
mov
bndstx
stc
cmp
flds
inc
dec
popf
repnz
mov
cmp
aas
shld
mov
sbb
mov
les
cld
sti
xor
lret
stos
push
cltd
dec
jle
mov
push
cmc
push
dec
add
cmp
xchg
hlt
imul
mov
loope
cmpsl
icebp
outsl
shrl
enter
stos
push
ret
mov
mov
dec
push
mov
dec
orl
arpl
dec
mov
mov
sbb
push
filds
dec
lea
fcmovu
sub
dec
cmpl
cli
fidivrl
test
add
aad
cmp
jp
lea
nop
je
enter
loope
adc
pop
adc
push
cltd
stos
pop
dec
insb
xchg
sti
mov
sarb
mov
fs
sub
mov
dec
mov
repnz
xlat
mov
ficoms
jne
in
pop
int3
std
popf
adc
adc
mov
mov
mov
sub
stc
or
xor
mov
cmp
lret
lcall
cmp
pop
aas
fstl
add
sbb
insb
pop
cmc
mov
mov
xchg
es
push
ficoml
clc
popa
out
sub
cmp
test
data16
hlt
mov
sub
push
and
popf
push
sbb
jno
jmp
fwait
and
adc
dec
xchg
fadds
mov
stos
inc
mov
lahf
inc
int3
out
cmc
pop
ret
xchg
inc
stos
dec
inc
mov
add
das
pop
aas
push
dec
xor
inc
inc
int3
push
push
dec
ss
inc
xor
loopne
inc
and
and
mov
pop
cmpsb
xor
jp
into
mulb
xor
jb
jle
cli
jns
xor
dec
add
mov
pop
xor
mov
sbb
repz
pop
cwtl
push
hlt
and
addr16
jl
adc
jo
cmp
mov
and
inc
push
cmp
dec
cmp
pop
stc
rolb
in
outsl
dec
cmp
add
ret
lcall
adc
inc
push
push
and
movsl
dec
push
test
shll
sbb
mov
xchg
fistpl
xor
xchg
inc
jl
hlt
test
cli
sahf
push
pop
sbb
popa
mov
xor
xor
fcoms
call
jecxz
fwait
inc
sarl
sbb
dec
outsb
jno
dec
lea
aam
ss
cmp
dec
mov
int
popl
mov
je
lahf
fstl
pop
iret
sahf
les
mov
xchg
jge
out
fimuls
or
adc
int3
cmp
or
xchg
mov
push
ffreep
pop
lret
adc
ss
std
jbe
sub
fs
xchg
xchg
lds
cld
xor
ljmp
sub
and
cmp
fsubr
mov
loopne
jecxz
jo
jnp
pushf
adc
aam
pop
negb
add
rcrl
popf
mov
leave
pop
sbb
push
mov
bound
push
sbb
lods
lcall
adc
ss
lret
cld
push
pop
mov
add
pop
mov
inc
cmp
jl
mov
push
out
jbe
inc
pop
ja
out
or
and
mov
std
movsl
sub
fldl
loope
aam
out
and
outsl
inc
cmp
jbe
ss
sbb
loope
in
jno
sub
je
mov
push
out
lds
out
and
xchg
test
repnz
xor
sahf
ret
push
ds
outsl
scas
push
jg
xchg
pop
xchg
imul
and
or
cmc
fs
mov
stos
jne
outsl
add
loopne
mov
mov
dec
xor
jmp
xorl
xchg
sub
mov
xor
pop
xor
sub
ret
mov
mov
rorb
test
lock
xchg
mov
sub
test
repz
pusha
mov
pop
out
ss
outsl
sub
and
and
fnsave
lds
iret
dec
call
dec
repz
push
mov
outsl
mov
sarb
mov
nop
out
jmp
in
lods
outsl
add
repz
fisubrl
dec
adc
dec
xchg
inc
jmp
insl
cmp
adc
test
xlat
or
pusha
cltd
jnp
pop
pop
lock
xchg
cmp
mov
rorl
jge
lcall
jp
std
into
xchg
addl
adc
push
cld
inc
add
lcall
jmp
sbb
ja
and
push
jmp
enter
or
popa
mov
mov
aam
push
sub
jo
jmp
imul
jns
cmp
inc
push
aas
dec
xorb
xorb
and
outsb
mulb
mov
xchg
mov
dec
and
fs
out
push
cmp
push
add
out
adcl
fld
fldenv
out
mov
insb
daa
jnp
popa
dec
cmpsl
jo
int
shll
pminub
xor
and
ljmp
gs
xchg
sbb
add
sbb
dec
jg
daa
pop
or
inc
sub
mov
sbb
rolb
ficoms
lods
iret
in
icebp
rcrb
push
insb
pop
mov
pop
sub
hlt
jg
lock
sbb
push
shl
insl
enter
out
ja
lods
loop
mov
xchg
repnz
fists
loopne
or
loopw
ljmp
int
or
pop
popa
and
sub
dec
in
dec
cltd
std
push
lret
and
jae
fisubrl
xor
sub
push
xor
dec
imulb
sbb
pop
and
test
sbb
pop
mov
loope
repz
icebp
aas
xor
cmp
negb
adc
daa
jmp
pusha
sbb
sub
mov
jns
aad
incb
das
repz
pop
aad
les
mov
mov
sarl
rorl
push
xor
xchg
mov
lea
sub
loopne
push
sbb
emms
pop
sbb
xor
aad
nop
jl
sbb
add
sti
jne
inc
mov
shlb
adc
out
jae
out
cltd
push
mov
adc
mov
sub
cmp
rolb
test
jmp
insl
adc
lret
std
xchg
inc
mov
clc
call
negl
sub
xchg
je
fcomi
mov
mov
push
adc
rcrb
cltd
push
xchg
mov
and
test
push
fcmovbe
mov
mov
push
jne
sti
in
mov
cs
out
rcrb
and
mov
mov
inc
sub
and
aas
icebp
in
jecxz
inc
or
stc
fildl
mov
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
popf
mov
enter
mov
mov
cmp
add
adc
std
pushf
mov
lds
lret
popa
mov
xor
push
in
pop
inc
arpl
sub
fwait
clc
fcmovb
mov
pop
repz
sbb
sub
out
push
lcall
mov
cmp
fmuls
roll
cwtl
adc
pop
lea
mov
js
leave
mov
fsubl
mov
std
clc
xchg
jp
pop
popl
mov
fldt
lahf
in
xchg
inc
repnz
ljmpw
or
mov
pop
inc
pushl
mov
xchg
mov
aad
push
test
mov
push
aas
jle
xchg
cli
out
add
mov
dec
pop
push
mov
movsl
repnz
push
test
cltd
or
or
lcall
notb
aam
lret
data16
cmpsl
test
cmp
mov
loopne
je
rcr
leave
cmp
jle
nop
ds
movsb
xor
fwait
xchg
or
push
adc
lds
stc
jmp
mov
jno
inc
push
mov
shlb
mov
pusha
scas
ficompl
stos
sahf
pop
movsl
or
inc
mov
pop
cmpsb
in
jge
je
lret
push
dec
scas
mov
add
fisttpl
mov
outsb
sbb
faddp
mov
or
inc
mov
into
sub
cld
cmp
pop
std
xor
cli
mov
test
and
pop
add
das
imul
push
and
je
push
ret
and
xor
rcll
cwtl
loop
xor
dec
movsl
jg
push
cmc
daa
dec
fs
flds
and
sub
push
imul
inc
xchg
stos
dec
test
pop
bound
gs
add
sbb
jns
jno
loope
leave
dec
and
outsb
add
dec
mov
push
push
cwtl
jmp
nop
inc
mov
lea
jns
fists
or
xor
adc
mov
mov
pop
adc
negl
push
out
mov
sahf
into
pop
push
adc
push
lret
and
inc
mov
imul
sub
test
test
fisubrl
or
mov
sarb
inc
je
sbb
xor
out
push
aaa
sahf
xchg
pop
sbb
mov
lret
lcall
inc
push
insb
enter
inc
ret
adc
mov
xor
add
movntps
sti
sub
push
jnp
mov
mov
or
fdivrs
std
mov
push
and
stos
int3
jg
lea
test
test
mov
popa
adc
mov
inc
push
sbb
imul
xchg
mov
out
cmovns
push
sub
test
fwait
iret
sbb
cmc
inc
dec
xchg
movsb
pop
in
dec
mov
aam
push
inc
js
pop
gs
lea
scas
in
lretw
inc
loop
or
pop
adcl
mov
lcall
mov
in
xchg
dec
scas
test
mov
or
push
and
or
or
add
lock
push
in
pop
cmp
ds
pusha
mov
mov
aam
push
or
adc
xchg
sub
inc
xor
subb
push
mov
daa
xor
dec
adc
mov
add
fsubrs
stos
add
inc
aas
sbb
movsb
mov
outsb
repz
das
inc
daa
mov
fldcw
jge
sti
cmp
add
cmp
cmpsl
sbb
push
je
pop
loope
push
pusha
sbb
out
mov
lods
sbb
inc
mov
loopne
lret
mov
out
mov
stos
inc
adc
addr16
pop
adc
mov
push
push
add
dec
aad
push
mov
push
or
fs
or
testb
mov
add
lea
lahf
fwait
dec
sub
daa
lahf
adc
mov
sbb
fdiv
cltd
add
inc
fs
lret
sub
push
or
imul
dec
loop
inc
cwtl
jmp
fnstcw
cmpsl
bound
sub
out
lea
mov
sahf
mov
jg
out
std
pop
in
and
cs
cmc
sub
mov
xor
cmp
mov
add
lea
aas
into
daa
xchg
stos
ret
fsts
out
xchg
cs
jg
jo
sub
add
int
sbb
aaa
test
flds
pusha
xchg
and
shr
xchg
imul
inc
xchg
sbb
mov
mov
test
je
jo
sub
andl
fisttps
add
xor
jne
ret
add
lahf
add
icebp
add
shrl
ret
aam
ja
pushf
in
bswap
jl
mov
and
or
das
mov
addr16
hlt
adc
xchg
mov
loope
mov
scas
ja
cmc
loopne
lret
mov
mulb
int3
stos
cli
js
lret
stc
mov
arpl
addr16
call
sbb
insb
sbb
wrmsr
jmp
inc
ss
ss
cmp
cmpsb
jp
mov
fsts
push
hlt
xchg
loope
mov
push
dec
sub
lds
test
jne
aam
fbld
push
mov
push
ljmp
jg
sub
mov
or
sarb
push
jb
and
mov
xchg
outsb
pop
pop
push
ljmp
mov
fidivs
cmc
loopne
or
sbb
jg
xchg
xor
ds
outsb
mov
fwait
mov
add
push
jae
movsl
lods
mov
pop
xchg
std
mov
xor
mov
imul
mov
jnp
popf
pusha
arpl
push
lods
pusha
out
jae
out
je
jp
push
xchg
add
inc
xor
and
out
lret
std
mov
cwtl
out
imul
cmp
aam
scas
addb
add
sbb
sbb
lcall
rolb
loope
dec
mov
and
cmp
andb
pop
pop
cmp
jp
and
jns
bound
xchg
inc
hlt
or
and
dec
addr16
cmp
push
or
movsl
mov
or
or
cli
outsb
jle
sub
cmp
hlt
lods
popf
push
push
cmpb
cmp
jge
loop
cltd
bound
inc
or
sti
iret
rcll
jne
jno
xor
xchg
stc
je
cmp
loopne
adc
cmc
leave
pop
test
dec
sahf
sbb
les
push
repnz
jmp
xlat
sub
mov
mov
sbb
sub
push
popf
jo
sub
cmp
test
adc
jo
movsl
jp
jbe
jl
cltd
cmp
xlat
pop
push
insb
or
add
dec
cmp
enter
rolb
xchg
aam
and
fnstsw
mov
subb
or
add
xorb
pop
jle
nop
mov
mov
jp
loopne
jbe
mov
and
mov
mov
call
cld
out
or
outsb
xchg
add
pop
mov
pusha
imul
sbb
in
bound
cmc
mov
push
dec
jo
cmp
mov
pop
or
xor
jmp
addl
or
mov
lods
ds
cmp
xchg
sarl
add
arpl
movsl
xlat
sub
nop
div
call
orb
js
pop
es
pop
xchg
cs
mov
out
lock
adc
cmp
movsl
jp
rep
adc
pop
adc
and
inc
mov
repnz
cmp
mov
jge
pushf
ja
stc
pop
hlt
adc
or
out
cmp
ret
js
and
fildll
sbbl
sub
or
outsl
mov
insb
pop
push
pop
nop
mov
add
or
sub
mov
mov
sub
push
mov
out
sbb
in
pop
ficoms
arpl
ljmp
arpl
mov
je
xchg
sbb
lock
subb
xor
xor
add
fstpl
loop
popf
dec
cmp
rcll
dec
iret
push
sub
sbb
arpl
shlb
mov
pop
or
and
cmpsb
into
fs
jae
mov
push
xchg
xchg
mov
xchg
dec
sbb
or
adc
test
dec
dec
pushf
dec
xchg
mov
pop
xchg
out
pop
pop
xchg
mov
or
inc
test
aaa
stc
jp
pop
insl
daa
stos
push
shll
outsb
iret
addb
movsb
add
mov
int
clc
cmp
fsubl
dec
sub
out
or
addr16
lds
sti
fcoml
sbb
rcrb
jae
and
mov
mov
mov
int3
xchg
addl
pop
sbb
mov
outsl
cmp
adc
arpl
aaa
push
imul
sbb
and
xor
mov
xor
popa
xor
ljmp
mov
push
nop
movsl
imul
xchg
setle
fsubl
mov
int3
sub
jecxz
xor
jg
aaa
inc
push
je
movsl
add
push
loop
cmp
mov
int
dec
sub
jp
out
jnp
push
jb
sub
xchg
push
loopne
imul
jo
nop
iret
fwait
loope
add
cmp
lds
inc
orb
inc
jge
adc
stos
jnp
pop
andl
mov
inc
inc
es
loope
sbb
sub
arpl
sub
idiv
leave
sbbb
pop
push
or
add
bound
fucomi
into
adc
out
xchg
loopne
jmp
mov
sub
mov
pop
mov
int
jl
cmovg
shlb
push
xlat
pop
outsl
mov
ljmp
or
ror
call
push
loopne
aas
jo
xchg
and
sbb
pop
es
dec
insl
lds
fs
pushf
popa
push
mov
fwait
stc
inc
lret
dec
aam
bound
lock
pop
mov
jge
dec
push
scas
rcrb
int
test
iret
lcall
jae
push
and
jge
sub
ret
aam
inc
aam
or
pop
enter
notb
cmp
adc
movsl
jbe
aas
bound
adc
movsb
out
ljmp
lahf
call
cmc
sub
movsl
mov
shlb
in
xor
out
push
popf
in
pop
es
not
push
mov
aaa
insb
mov
add
bnd
ret
push
sub
lahf
je
mov
inc
bound
sbb
push
inc
adc
pop
outsb
cmp
in
outsb
div
lcall
mov
mov
and
scas
lcall
mov
sbb
outsb
mov
test
pop
lods
inc
xchg
push
or
loopne
adc
push
ljmp
test
dec
push
sbb
dec
fwait
cmp
cmp
adc
js
pop
push
xchg
jmp
add
jecxz
and
mov
adc
xor
mov
dec
xchg
out
push
in
mov
ret
mov
mov
and
fbld
pusha
dec
div
in
cmp
inc
stos
pop
daa
push
mov
scas
pushw
dec
fidivs
pop
andb
jp
cmp
testl
arpl
scas
scas
cltd
fdiv
js
aas
xor
loop
xlat
mov
mov
mov
stc
push
xor
cmp
dec
pop
sbb
arpl
outsl
xchg
mov
mov
mov
dec
iret
in
in
inc
arpl
push
dec
adc
inc
jecxz
shl
cmp
lcall
push
mov
mov
les
outsb
jae
rdtsc
stc
popa
sub
int
jo
dec
stos
sahf
repz
jo
outsb
push
mov
in
sbb
mov
adc
aas
jno
sbb
je
out
popa
out
cmp
add
sub
dec
mov
mov
mov
icebp
add
xchg
out
sbb
cld
data16
fwait
sbb
mov
insb
scas
mov
mov
and
aas
mov
mov
jns
inc
pop
not
pop
mov
orb
imull
mov
pop
mov
sbb
inc
xor
mov
mov
mov
sbb
insl
sbb
mov
sub
les
mov
adc
fildl
mov
mov
push
cwtl
je
aaa
and
jne
repnz
and
or
inc
loope
loopne
dec
jmp
fdivl
in
cmp
push
mov
scas
dec
jecxz
and
jbe
lahf
mov
jmp
outsb
xchg
dec
mov
inc
sub
loop
mov
mov
rep
std
push
xor
cmpsl
inc
stc
inc
icebp
ror
and
jmp
jmp
in
ret
je
cli
sub
fmuls
nop
add
xchg
and
fwait
loopne
popa
mov
jb
jge
add
movsb
lret
sti
jl
fimuls
cmpsb
and
push
aam
sbb
xlat
andb
out
mov
xor
ret
cmp
fwait
mov
and
fistps
pushf
xchg
aaa
push
xor
inc
jb
mov
insl
mov
xchg
inc
mov
mov
jmp
std
ret
fucomi
mov
jecxz
and
and
js
iret
loopne
outsb
and
fs
adc
lock
add
mov
js
and
xchg
nop
pop
in
addl
mov
mov
sub
push
sub
mull
add
outsl
xor
adc
jne
cmp
test
sbb
mov
fldln2
dec
std
ss
cmp
rorb
das
lret
xor
fdivs
sbb
dec
dec
cli
mov
cmp
add
ret
imul
cld
outsl
add
mov
mov
push
push
push
lret
and
mov
loop
cltd
xchg
push
clc
jns
sbb
jo
xor
fidivs
pop
sub
push
cmpsl
sub
inc
or
leave
cmp
and
dec
cmp
sbb
xor
icebp
into
daa
out
jae
cmpsb
mov
fnsaves
popl
adc
pusha
mov
cltd
mov
cmpsb
lock
stos
out
cmc
cltd
inc
mov
mov
add
cmp
mov
stc
ret
dec
outsl
sub
lds
ret
mov
add
or
enter
mov
loope
fdivs
dec
test
rcr
daa
sub
fbld
fs
dec
xlat
dec
repz
out
or
mov
cmp
xchg
rorl
push
push
cmp
std
mov
scas
stc
or
push
bound
push
aaa
inc
sub
lea
lea
mov
test
movsl
shlb
mov
and
or
mov
and
add
xchg
adc
loope
mov
mov
jg
mov
into
push
idivb
aaa
addr16
movsl
add
jp
lds
dec
xchg
jle
rcll
or
pop
inc
in
repz
hlt
xchg
repz
sbb
push
xor
test
mov
xchg
sbb
or
inc
pusha
sahf
sbb
cmpsl
das
xor
pop
push
inc
ret
cli
add
popl
mov
or
push
push
xor
xor
push
std
jp
mov
data16
mov
push
mov
cmp
add
add
mov
inc
mov
outsl
in
mov
mov
add
stos
mov
xchg
out
pop
lcall
dec
mov
subb
cld
push
cltd
shll
jmp
xor
icebp
pusha
daa
cmc
cld
enter
and
iret
dec
aam
and
pop
std
or
test
pop
js
icebp
jg
ja
in
jno
xlat
in
adc
mov
cwtl
add
jae
in
add
inc
pop
jg
mov
push
pop
xor
ljmp
stc
inc
mov
push
repnz
cli
scas
cmp
mov
into
inc
iret
sahf
gs
mov
jl
pop
pop
inc
sbb
popa
and
pusha
and
rclb
loop
leave
in
jecxz
dec
testl
bound
pop
enter
addr16
js
push
out
faddl
fwait
lods
pusha
test
iret
mov
addr16
inc
test
fbstp
mov
cmp
push
repz
cwtl
cltd
movsl
insl
arpl
mov
xlat
sbb
cmpsl
mov
sbb
hlt
jg
add
lcall
sti
adc
mov
xor
pusha
jo
push
jge
pop
aaa
insl
loopne
jns
cmp
and
ss
sbb
adc
push
sbb
mov
lcall
cli
mov
outsl
xlat
xor
mov
das
jge
xchg
jmp
jb
loopne
fadds
pop
cld
outsb
inc
cmp
pusha
mov
push
sub
sub
jl
xchg
scas
or
popa
adcb
js
je
enter
ljmp
fdivrl
mov
mov
ljmp
shlb
adc
xor
jne
aaa
out
jns
jge
scas
fidivs
iret
sub
add
stc
mov
mov
inc
or
std
mov
mul
ficoms
rolb
cli
xchg
pop
push
push
sub
push
xchg
mov
inc
insl
push
lods
cmp
fsubl
sub
xor
ds
xchg
das
mov
adc
push
or
enter
dec
fwait
lcall
orb
push
and
jns
mov
test
arpl
jbe
enter
lahf
mul
mov
int3
cmpsl
dec
push
sarl
adc
xorb
lods
xchg
test
cltd
lds
lret
fists
jp
out
gs
push
lods
mov
pop
imul
lcall
test
test
and
in
xchg
adc
push
xor
cs
lahf
stc
pop
pop
inc
mov
and
cmpsl
int
adc
jb
xchg
add
jns
jg
sub
jp
mov
add
lahf
inc
jl
mov
inc
mov
shll
loop
pop
jge
xchg
mov
or
inc
mov
jle
lret
pop
sub
aad
mov
mov
das
dec
sub
shlb
sub
out
or
inc
jbe
dec
cmpsb
and
dec
pop
sub
xchg
mov
je
data16
clc
and
pop
dec
dec
or
fadds
es
adc
sbbl
negl
clc
xor
push
jnp
cmovnp
jmp
pop
call
je
popa
dec
xor
inc
cmpsb
ret
jne
insl
js
js
mov
sub
test
dec
loopne
in
pushf
push
inc
jp
adc
aas
iret
fldt
jle
imul
sub
inc
shrb
sub
push
imulb
jb
sahf
cmp
insl
inc
pop
movsb
shl
int3
add
in
imul
mov
push
fiadds
inc
jae
cmp
xor
adc
jg
xor
das
ficoms
cmp
sub
loopne
push
imull
mov
jb
jg
daa
outsb
mov
xor
adc
and
cmpsl
pop
xorl
roll
pop
popa
js
hlt
adc
jae
sbb
iret
pop
mov
inc
or
xchg
pushf
test
xor
add
je
outsl
mov
sahf
clc
loop
stos
jns
stos
inc
push
or
sbb
push
lret
test
flds
sub
scas
popa
push
inc
in
std
jno
test
push
stc
push
psllq
and
pop
xchg
cmp
nop
movl
push
mov
ffreep
jo
mov
cmp
push
pop
rol
movsl
popf
sbb
jg
sub
insb
ds
inc
push
push
xchg
js
lahf
mov
ja
dec
or
mov
pop
addl
push
jge
jmp
pop
sbb
mov
out
adc
pop
imul
add
mov
out
ds
ret
movsb
inc
or
xchg
mov
lods
push
xchg
pop
ret
push
gs
pop
mov
dec
incb
push
push
les
cmp
sub
mov
aas
inc
repnz
stc
xor
gs
loopne
in
push
fsubrs
and
mov
xchg
xor
jns
push
sbb
lret
mov
mov
loopne
push
lret
lahf
pop
dec
or
sahf
cltd
xchg
mov
sub
gs
jnp
faddl
adc
jecxz
push
fidivs
out
add
cmp
or
pop
or
dec
outsl
mov
pop
xchg
mov
xchg
sub
adc
sbb
jecxz
repnz
shrb
jl
test
mov
jne
dec
std
xchg
rcll
pop
adc
test
fwait
les
idivb
testb
enter
or
scas
rcrb
sub
dec
mov
push
push
in
xchg
pop
das
dec
popf
inc
ret
xchg
adc
addr16
jle
rdpmc
adc
pop
jg
loop
xchg
in
ja
loop
sub
cmp
addr16
pop
cmc
inc
stos
aas
out
iret
push
sbbb
rcll
mov
mov
pop
fists
jo
inc
stos
int
pop
add
in
shlb
add
lds
fwait
lea
into
or
leave
mov
bound
jno
mov
and
xchg
dec
dec
call
movsb
test
sarb
adc
ljmp
cmp
add
icebp
push
inc
clc
sbb
xchg
adc
sbb
adc
mov
xlat
insb
popa
lods
pop
xchg
cli
add
iret
pop
inc
in
ret
or
xchg
popa
jns
mov
inc
mov
mov
aas
inc
ret
xor
mov
mov
int
in
mov
sbb
pop
mov
jo
iret
mov
outsl
jns
inc
cmp
lret
or
lods
fistps
sbb
dec
stos
cmp
addr16
icebp
pushaw
in
lds
aas
xor
rolb
out
test
push
hlt
mov
xor
pop
movsl
sbb
jg
sahf
inc
or
sub
xchg
jbe
sbb
aad
cmp
and
sbb
inc
jns
cli
sbb
cmp
adc
or
jmp
and
mov
push
movsb
es
lds
mov
jp
insl
pusha
add
ret
mov
outsb
xchg
xor
push
jns
jp
xor
inc
lods
das
mov
test
or
dec
clc
sub
insb
out
cmp
scas
lds
fdivl
fsubs
sahf
stos
pop
cmc
pop
adc
push
lds
ds
xchg
jne
cltd
or
sbb
pop
aam
xor
sbb
mov
jecxz
xor
sti
adc
lods
repnz
dec
push
pop
cvtps2pi
je
adc
test
lahf
int3
dec
adc
movsl
mov
adc
sbb
arpl
inc
and
shrb
add
jbe
sbb
mull
data16
sbb
mov
xchg
sbbl
bound
mov
repz
shll
jb
push
loop
push
and
icebp
jle
cmp
push
mov
sub
sub
add
in
cmp
movsl
pop
or
outsb
inc
cmp
jmp
xchg
lcall
imul
inc
arpl
jns
dec
lods
jg
jo
adc
imul
in
and
je
pop
fimull
arpl
add
orl
in
aad
mov
repz
arpl
or
mov
dec
cwtl
mov
adc
push
repnz
jmp
popa
fs
push
iret
arpl
push
pusha
xrelease
cmp
and
or
mov
shl
cmp
sbb
cltd
xchg
rol
mov
pop
pop
xchg
mov
stos
ja
jle
repnz
imul
pusha
je
xchg
mov
push
xor
xchg
cmp
repnz
stos
lcall
xchg
mov
mov
sbb
loope
clc
mov
mov
lock
shll
test
mov
test
fcmovbe
push
out
xchg
pop
lret
add
inc
add
xchg
es
jl
lret
pop
mov
lahf
and
xchg
mov
adc
or
ljmp
loopne
push
pusha
les
and
or
jmp
sbb
negb
cs
xor
push
adc
cs
inc
xchg
jge
std
and
push
dec
xchg
jne
cmp
adc
xchg
mov
cmc
xchg
push
lds
jle
or
push
std
xchg
andl
fidivrs
jl
out
push
fsubrs
adc
hlt
into
sahf
test
or
push
ficoms
mov
es
sbb
and
repz
out
fstpt
sub
xor
imul
pop
sbb
fildll
jecxz,pt
push
xor
and
rclb
add
jns
pop
add
icebp
aam
cmp
add
mov
movsl
shl
sbbl
jnp
pop
pop
mov
ljmp
xchg
imul
push
mov
cltd
scas
repnz
movsb
lret
lret
lret
sub
insl
xor
mov
in
cs
es
jl
mov
and
mov
out
mov
add
pop
test
imul
out
pop
fimull
pop
addl
push
mov
sbb
ja
andl
aad
dec
mov
adc
sbb
loope
les
xor
jne
pushf
sub
test
or
test
add
notl
jns
pop
xchg
into
insl
int3
jmp
ret
xor
adc
jns
jge
inc
push
sub
add
dec
imul
test
jns
in
mov
or
or
and
leave
dec
pop
cmpsb
jg
mov
mov
test
dec
enter
pop
inc
sub
das
jecxz
cmpsl
mov
adc
lahf
fwait
jge
mov
and
das
stos
fs
jno
inc
cld
mov
fcmovb
lock
les
pop
adc
dec
mov
shrb
push
divl
dec
vminss
cmp
dec
xor
pop
pop
and
rol
divb
loop
cmpsl
jmp
jo
or
cmpsl
jns
bound
push
add
xchg
lods
lahf
mov
add
xchg
cld
clc
aam
xor
dec
push
cmp
insl
mov
jg
dec
data16
jnp
fsubrs
push
mov
sbb
mov
adc
subl
ja
cli
push
data16
pop
pop
dec
loope
stos
aaa
lcall
in
xchg
iret
outsb
xchg
push
cmp
dec
and
push
fsubl
xor
bound
xor
pop
out
scas
push
in
mov
sbb
jecxz
cmp
sbb
jl
insl
inc
pop
ja
push
push
leave
cmp
int3
xchg
testl
pop
cmpsl
pop
cwtl
roll
sub
test
jbe
lods
dec
pop
es
mov
arpl
cmp
push
cmp
bnd
sbb
sub
xlat
mov
push
and
jl
xor
jnp
test
shrb
xchg
sahf
mov
mov
lds
inc
add
sub
das
dec
pushl
in
pop
mov
cmpl
flds
js
mov
inc
cmp
push
leave
pop
cmc
clc
cwtl
lock
scas
clc
lds
test
or
ja
jae
xor
daa
sub
fistps
call
test
repz
sti
fucom
jmp
xor
ja
inc
loopne
orl
or
mov
stc
or
cmp
add
xchg
push
loop
int
cmpsl
pop
cltd
jo
ret
push
es
jae
pop
xor
in
fnstenv
push
pop
xor
cmpsl
inc
mov
jge
xchg
pop
add
lcall
into
adc
adc
xchg
test
xchg
stc
pop
pop
jmp
fs
jge
out
dec
leave
popa
popa
jbe
cmp
adc
fdiv
shll
lock
subb
sti
clc
sbb
lret
push
push
cmp
xor
adc
hlt
shlb
jnp
dec
fdivr
addr16
js
mov
mov
sub
lds
pop
and
fcmovnu
dec
fdivrp
mov
test
js
jns
push
mov
dec
addr16
push
rolb
and
insb
orl
mov
clc
and
add
push
push
inc
add
dec
push
loopne
rol
xlat
pop
mov
lahf
mov
ljmp
in
sub
popf
pop
cwtl
and
imul
xchg
push
pop
mov
jb
out
cld
dec
pop
aas
out
out
push
jecxz
mov
xor
aas
ja
add
push
xchg
int3
push
push
pop
xchg
mov
sub
int
pop
adc
ljmp
cs
jae
stc
or
in
in
test
push
or
inc
mov
jp
pop
sti
movsl
xor
xchg
dec
xor
and
aaa
fcomps
sub
mov
xor
jo
pop
daa
cli
jecxz,pn
js
mov
jge
imul
lret
jns,pn
movsb
repz
out
fstpt
in
cmp
test
stc
leave
jno
leave
cmp
inc
sti
sbb
roll
adc
sbb
adc
js
ffree
das
push
test
hlt
stc
lret
sbb
jmp
movsb
aam
out
pop
mov
es
in
cld
out
aam
call
push
arpl
or
pop
movsl
movsl
rcrl
dec
pop
das
fs
xchg
and
outsb
sub
cltd
xchg
sbb
or
dec
shrb
mov
in
jp
insl
fistpll
push
in
shrl
test
test
jmp
or
lcall
jae
dec
sbb
in
jecxz
mov
lret
clc
mov
cmp
paddusw
int
cmp
bnd
and
repz
inc
testb
or
imul
push
xchg
pop
jecxz
lock
lods
fnstcw
pushf
lods
add
mov
popl
data16
or
dec
jecxz
shrl
scas
sub
in
lret
fiaddl
mov
dec
scas
les
pop
pop
jo
xchg
movsb
or
mov
cli
test
sahf
int
cli
push
xchg
aad
mov
add
loopne
xchg
lods
or
ja
lds
jecxz
ljmp
jnp
push
xor
orb
mov
cld
int
leave
pop
into
lds
xorl
push
pushl
imul
je
cs
dec
or
or
pop
inc
or
testb
push
cmp
ds
add
insb
push
sbb
xchg
pop
not
jbe
das
and
int3
mov
imul
jl
stc
loopne
arpl
dec
dec
or
sti
iret
inc
xlat
mov
push
inc
fs
addr16
call
push
cltd
mov
sbb
mov
sahf
cmpsb
inc
xor
add
inc
mov
xchg
ret
iret
add
ja
pop
add
and
sbb
xchg
movb
pop
icebp
pop
addr16
jecxz
pop
mov
inc
mov
adc
popf
mov
bound
xchg
push
int3
or
xchg
inc
ds
idivb
and
or
cltd
xchg
std
sbb
pop
sub
and
repz
mov
nop
sti
xchg
cmp
dec
mov
out
mov
sbb
aaa
ljmp
cwtl
push
sub
push
ss
daa
mov
mov
pop
mov
stos
filds
subb
sub
test
popf
lods
xchg
jmp
jno
and
test
mov
push
cwtl
sbb
cmpsl
jmp
xchg
adc
repnz
xor
lret
dec
je
mov
push
dec
jmp
cmp
inc
and
repnz
adc
test
sub
jle
dec
adc
ret
fidivl
dec
pop
cli
mov
mov
add
fwait
adc
push
sub
imul
add
dec
sub
enter
fcmovb
sub
ss
mov
imul
scas
scas
mov
insl
pop
aaa
add
cmpsl
mov
add
jmp
and
mov
jo
stc
mov
cmp
orb
into
or
sbb
rcrb
jle
pop
inc
into
cmp
test
mov
fwait
mov
pop
add
das
xlat
scas
sbb
xlat
jno
and
mov
xchg
nop
pop
jae
mov
add
jmp
cld
jp
or
push
and
mov
xor
repnz
sub
sbb
inc
mov
pushf
mov
fimull
loop
jne
and
aam
push
adc
loop
jle
out
add
ljmp
sti
xchg
lret
sub
dec
sub
xchg
fimull
mov
in
fst
inc
decb
insl
lcall
xor
jg
cs
mov
in
dec
dec
adc
outsb
jne
loopne
js
ds
fwait
mov
pop
out
jl
dec
movsb
mov
xor
aam
cld
dec
add
xor
and
shl
lds
sub
xchg
jge
dec
call
jne
mov
pop
mov
aam
fcmovnu
insb
cmp
pop
pop
push
clc
pop
in
in
jns
xor
sbb
mov
lods
mov
xchg
mov
jp
icebp
cli
daa
les
fidivs
imull
push
fbstp
hlt
fs
ljmp
notl
mov
push
mov
mov
pop
repnz
jae
pop
out
push
and
dec
xor
sbb
test
and
jle
cmp
mov
ret
std
pop
xchg
out
cltd
mov
aam
jmp
lock
fsubrp
ljmp
sub
enter
sub
and
inc
sbb
iret
ds
dec
rorb
sub
into
jbe
mov
test
mov
cld
xor
jbe
jle
or
in
repnz
mov
sub
push
and
imul
fistps
aad
shrb
mov
jp
pop
out
cld
jge
lds
lea
sub
adc
cld
mov
jo
shr
pop
cwtl
sets
lret
push
push
push
sbb
sub
scas
xor
add
divb
ret
xchg
loopne
mov
ljmp
mov
notb
and
and
dec
jecxz
ss
shlb
inc
mov
sub
in
sub
push
sub
shl
mov
xor
xchg
aad
mov
sbb
pop
push
pop
sti
adc
jp
xor
imul
test
inc
outsb
inc
int3
cmc
adc
jp
sbb
into
xchg
jb
mov
inc
xchg
test
mov
lds
and
pusha
sub
inc
orl
jmp
and
fimuls
sti
imul
sti
cmp
addl
adc
adcb
sbb
add
mov
sarl
es
mov
or
mov
or
or
jl
xchg
or
ljmp
rclb
setl
xchg
cmp
lret
push
xor
js
es
jnp
ds
xchg
dec
rolb
fwait
pop
inc
inc
imul
push
dec
xor
cmc
mov
js
pop
test
sbb
mov
fcos
leave
fistl
inc
mov
sbb
add
idivl
jae
inc
mov
jbe
dec
sbb
cmp
jl
gs
add
mov
jbe
fbld
gs
pop
testl
fst
pause
mov
adc
fsts
jg
xor
dec
mov
cld
addr16
add
jno
cmp
orl
sti
mov
cmpsl
out
cmp
stos
pop
sbb
adc
out
ficompl
ficompl
jno
mov
jmp
rcr
out
adc
in
push
test
sti
stos
or
add
add
test
popa
inc
imul
mov
jge
cmc
lea
add
sub
aaa
push
mov
dec
rcl
fildl
ss
into
sub
pushf
lret
pusha
inc
and
stc
jmp
cmp
jmp
data16
loopne
lds
add
jmp
dec
and
bound
sub
leave
xchg
je
inc
adc
mov
dec
pushf
add
cld
adc
or
test
dec
lret
mov
push
ds
push
shlb
cli
fwait
add
lret
adcl
mov
iret
xchg
jae
loopne
add
sub
test
pop
jno
and
icebp
xor
xor
inc
test
popf
ret
dec
jle
es
enter
lret
cwtl
mov
sub
xchg
jg
mov
xor
sbb
fs
enter
lret
mov
adc
xor
or
sahf
sarb
mov
and
push
mov
ret
sub
dec
push
lods
cld
cmovb
leave
nop
les
dec
jae
dec
dec
dec
jp
dec
je
pop
daa
cmp
dec
imull
push
jmp
push
ss
or
pop
cmc
cmp
loope
mov
out
add
in
scas
adc
imul
pop
ja
pop
or
pop
les
cwtl
jp
out
dec
jmp
xor
jns
cs
shl
ffree
push
push
push
loop
xor
jge
inc
rcr
cmpsb
outsl
dec
adc
arpl
push
outsb
jmp
ret
push
roll
xchg
dec
sbb
fcmovnbe
js
lret
jle
daa
jbe
aam
fdivrs
dec
icebp
shl
xor
pusha
inc
sarl
adcb
dec
mov
mov
jp
lahf
lods
mov
pop
ljmp
aam
pop
sub
mov
and
add
xchg
fisubrs
jnp
ret
inc
fcomps
and
mov
pop
or
cmp
xlat
inc
aam
fsubs
das
cmp
popf
in
push
subl
fidivrl
and
out
mov
add
std
fwait
mov
inc
sbb
stos
pop
stos
inc
cmpsl
add
lcall
mov
inc
inc
test
pop
pop
loop
decb
adc
xor
sti
jae
xchg
shl
lock
inc
rorb
popf
aad
xlat
inc
add
stos
xor
mov
push
jns
push
jbe
jmp
out
push
push
or
lock
push
int3
inc
push
mov
mov
jle
mov
add
outsl
in
out
mov
push
addb
cmc
mov
pop
cmp
xor
push
gs
xchg
mov
pusha
mov
xchg
push
jmp
test
cmpsb
mov
inc
cmpsb
jno
pop
mov
adc
xor
sahf
xchg
pop
or
data16
in
sub
add
movsl
ds
cmpsl
dec
fcoms
add
add
dec
enter
dec
sbb
pop
daa
mov
adc
sahf
xor
dec
jno
loopne
loopne
adc
pop
lret
push
mov
mov
pop
xor
inc
lret
subl
sub
pushf
push
movd
rolb
xor
out
js
push
out
dec
repnz
addl
push
out
dec
xlat
mov
dec
mov
add
jo
sub
cmp
test
out
int
aaa
or
mov
shlb
xor
adc
out
std
out
adc
push
lret
scas
out
aad
sub
movl
popa
and
add
add
mov
in
and
pop
lahf
je
mov
rol
icebp
int
sbb
sub
repnz
ds
xorl
sbb
mov
xor
rol
imul
lret
test
and
add
mov
push
aam
repz
push
push
repnz
fistpl
les
test
cmpsb
xchg
pop
cmpsb
pushf
aaa
adcb
ja
fidivrl
mov
jne
push
push
xchg
add
xchg
xchg
mov
popl
mov
mov
inc
ret
mov
repnz
xor
sbb
stos
push
jb
and
ror
sbb
sub
imul
lods
insl
addr16
aad
mov
sbb
out
inc
es
clc
outsb
adc
and
cwtl
mov
xchg
jae
mov
inc
mov
push
mov
mov
in
divb
in
lock
xor
repz
xchg
pop
jne
fs
cmpsl
das
ss
leave
out
cmp
cmc
shrb
xchg
out
push
test
icebp
mov
mov
sub
pop
mul
stos
testl
pop
cmp
filds
sbb
ret
packsswb
and
out
imul
aad
pop
pop
clc
mov
push
cltd
or
adc
js
test
lods
ret
xor
pop
mov
cmpsb
dec
lahf
int
sbb
dec
mov
iret
jp
imul
aam
movsl
and
aad
xor
repz
jmp
test
add
push
adc
icebp
lret
enter
aam
mov
mov
inc
push
cmp
aas
int
cs
push
ss
daa
jne
imul
and
cwtl
cmp
pop
incb
inc
and
xchg
mov
push
inc
pop
push
xchg
push
dec
gs
push
movsl
dec
adc
dec
pop
fildl
lahf
std
jg
or
inc
sub
lret
or
xchg
ljmp
inc
test
add
jno
lahf
adc
cmpsl
test
cwtl
enter
fnstenv
pop
pop
fcomip
mov
out
dec
out
adc
cmp
cld
pop
daa
test
cli
xchg
cs
dec
outsb
ret
sbb
push
push
cli
add
icebp
loope
xor
iret
outsl
xorb
ror
mov
rorl
or
sbb
cmpsl
cmp
mov
scas
push
jmp
lcall
fadds
or
ljmp
mov
les
push
push
shlb
movsl
add
mov
add
test
mov
push
sub
mov
mov
outsb
insb
or
hlt
leave
hlt
pop
jnp
pop
aam
xor
sti
add
inc
out
fiadds
loop
sbb
mov
rclb
xchg
int3
repz
or
es
and
mov
jo
cmpsl
sbbl
and
adc
jge
push
and
mov
popf
cwtl
xchg
xchg
dec
pop
push
sbb
test
repz
mov
mul
mov
imul
orb
push
addr16
and
mov
sub
adc
pcmpeqd
xor
nop
sub
add
inc
mov
pop
loop
in
sbb
in
adcl
rorb
xor
es
ret
aaa
dec
sti
sub
inc
lahf
lock
sarb
jmp
or
jle
stc
cmp
mul
cmp
jns
pop
pop
pop
in
pop
pop
rorb
scas
jae
cld
jecxz
imul
sub
arpl
add
into
call
loope
shll
xlat
mov
sub
mov
daa
and
addr16
cltd
shrl
mov
sbb
aad
or
das
popf
inc
xor
movsb
mov
mov
mov
dec
mov
pop
rcrl
xorl
mov
lcall
ja
fadd
inc
inc
sbb
les
lret
ja
or
sub
sub
cmpsl
xor
outsl
fcomps
inc
cmp
addr16
shrb
push
add
loope
into
add
nop
gs
insl
lods
je
pop
leave
pop
or
lret
scas
and
inc
sub
repz
loopne
pop
mov
enter
and
stos
std
imul
lock
xchg
addps
xchg
mov
add
mov
push
cmp
jb
out
push
fildll
adc
add
repnz
movsl
inc
or
mov
xor
test
cmp
mull
xor
sub
xor
sub
dec
leave
sub
sub
pusha
in
pusha
sbb
push
push
mov
in
push
push
push
xor
mov
jne
and
xor
mov
sbb
inc
popf
inc
fcomps
push
scas
loope
jne
mov
aam
pop
cmp
push
sub
shll
sbbb
push
add
xor
mov
cld
int3
cmp
cmp
add
loope
jae
push
mov
loop
hlt
lea
addr16
dec
les
pop
mov
sub
sbb
inc
inc
pushf
repz
popf
mov
jl
cltd
pop
rorb
movsl
sub
stos
cld
pop
movsb
inc
cmp
jmp
test
shrl
shll
dec
pop
mov
and
push
sbb
je
inc
mov
mov
into
pop
fistpl
adc
cmp
push
cld
lea
jb
add
xor
ror
daa
lret
dec
lock
mov
data16
subl
out
gs
fs
adc
mov
loop
sub
repz
sbb
or
insl
dec
out
js
xchg
mov
or
add
popf
popa
or
mov
dec
cwtl
pop
in
xor
xorl
ljmp
int3
jno
or
cmp
dec
inc
cltd
into
rclb
fidivrs
in
push
out
stos
pop
sbb
adc
rclb
sub
and
lcall
stos
and
and
sbb
cltd
cmp
lds
orb
jne
fwait
outsl
jo
adc
adc
ja
lds
sub
add
push
imul
xor
mov
movsl
test
jg
mov
or
adc
mov
insb
inc
xchg
jg
pusha
xor
xor
mov
inc
imul
add
test
xadd
pop
sub
subl
xor
xchg
sub
jbe
jno
addr16
scas
aam
movsb
es
lods
aaa
mov
leave
call
sub
xchg
xchg
ss
out
mov
mov
or
pop
add
inc
ljmp
jp
add
fistps
add
dec
dec
pop
jno
shlb
mov
gs
in
mov
mov
dec
or
push
sub
sbb
dec
jg
in
xchg
inc
push
out
sub
push
and
mov
or
dec
cmp
movsl
xor
jae
dec
nop
xor
cmp
jne
add
les
xchg
inc
xor
sbb
stos
cmp
movsb
cmp
aam
mov
loopne
mov
aam
or
pushf
ret
popf
hlt
dec
mov
and
in
enter
mov
or
jle
stos
in
testl
fdivr
shlb
xchg
xchg
push
test
push
notb
mov
popf
jae
mov
enter
ss
mov
pusha
mov
push
rcr
xor
in
and
aad
adc
xor
and
addl
or
loopne
mov
or
pop
dec
jg
aad
xor
popf
jns
imul
sbb
cmpsb
scas
in
push
sti
mull
mov
inc
push
sbb
add
push
push
imul
xchg
sub
in
arpl
cmp
cmp
mov
xor
lds
or
mov
js
shrb
sbb
mov
andb
dec
stos
dec
cwtl
ds
data16
ds
add
fldenv
fdivl
addr16
daa
xor
nop
push
andl
bound
push
fsts
and
test
xchg
push
bound
add
jle
call
sub
rclb
adc
testb
dec
pop
insl
enter
lea
cmp
pop
cltd
sbb
jl
movl
in
imul
sbb
pusha
outsb
fs
pop
in
hlt
movsl
sar
adc
mov
clc
push
mov
repnz
mov
mov
add
rep
lds
jmp
inc
xchg
sbb
cmp
in
lcall
leave
ret
repz
or
jmp
out
jmp
pop
ja
push
imul
mov
jne
and
xor
pop
call
xor
clc
jle
lods
xchg
cwtl
jno
stc
lods
sub
adc
int
mov
pop
sub
or
inc
ret
sub
mov
pusha
test
jmp
fisttpl
scas
dec
cmp
out
cmpsb
hlt
jge
int3
pop
out
js
mov
cmp
test
cmp
int
mov
cli
add
jo
ds
sarb
pop
in
mov
adc
xor
pop
or
jbe
dec
hlt
push
jecxz
sbb
xchg
negb
arpl
jne
adc
sti
je
push
sbb
repz
and
jl
inc
add
stos
inc
pop
cmp
sub
out
cmp
stos
sbb
ja
sub
adc
out
arpl
lret
loop
pop
out
cmpsl
outsb
test
mov
pop
mov
loope
mov
xchg
push
pop
and
dec
sub
scas
cmp
pop
in
mov
es
jp
adc
out
pop
adc
repz
lods
pop
sahf
fs
push
out
cmpsl
ret
scas
aas
addr16
lea
mov
scas
mov
and
lods
sti
mov
mov
sbb
mov
inc
jp
pop
in
sbb
adc
xchg
fcmovne
cmp
push
sar
dec
cmpsl
shr
out
clc
ret
inc
je
inc
ret
popf
lea
pusha
xchg
dec
jnp
push
mov
cmc
inc
hlt
repnz
hlt
sbb
jle
pop
mov
adc
cld
gs
sbb
add
arpl
xor
clc
idivb
xchg
or
lahf
mov
fcomp
mov
mov
inc
ds
mov
lret
mov
mov
ja
std
iret
xchg
mov
outsl
iret
es
mov
add
iret
xor
scas
mov
jmp
dec
push
clc
mul
add
decb
dec
out
mov
jp
inc
jbe
sub
fistl
sub
out
add
in
ss
push
pop
push
xchg
lcall
jo
in
jecxz
pop
adc
aaa
test
jle
jl
adc
add
add
call
and
lret
sub
push
fiadds
mov
cmpsb
sahf
inc
and
es
mov
inc
out
stos
jae
mov
mov
mov
lret
or
dec
pop
dec
std
inc
lahf
mov
aam
das
add
or
inc
lods
leave
stos
or
xchg
sub
mov
pusha
fstpt
stos
dec
mov
sbb
inc
lods
jne
jo
cmp
inc
push
xor
adc
clc
jg
in
lea
xor
lock
test
jb
mov
and
inc
adc
inc
loop
rcl
aam
repz
or
fs
lock
bound
push
cwtl
pop
sbb
inc
cltd
mov
fnstenv
fistpl
ret
jno
or
dec
dec
sub
and
add
and
cmp
sub
stos
sub
pop
in
rcr
adc
push
mov
push
cmc
sahf
push
arpl
int3
imul
cmc
cmpsl
test
xlat
inc
xchg
mov
and
in
sub
out
jne
imul
mov
xor
test
jg
sub
test
out
outsb
into
es
xchg
push
pop
add
das
push
mov
jnp
push
jp
mov
pop
cs
push
mov
in
scas
test
mov
inc
xor
add
mov
hlt
sub
dec
repz
testl
dec
jle
jle
mov
imul
shlb
enter
sahf
xor
shlb
nop
xor
xor
and
cmp
xor
push
sarl
mov
add
sahf
xor
xchg
cmc
or
pop
xor
loope
jle
aaa
fcompl
sub
pshufw
and
xor
negb
in
cld
jno
xchg
idiv
pop
aad
mov
jge
ljmp
mov
aaa
adc
push
mov
fsubs
ret
xchg
ljmp
loop
gs
lds
mov
test
or
test
cmp
sbb
pop
or
out
mov
addb
pop
pop
mov
mov
fs
rcr
add
sbb
repz
lods
mov
test
sahf
mov
xor
fildll
push
add
sub
aam
rcll
in
loop
and
test
mov
fs
ss
nop
call
add
inc
jo
mov
inc
sbb
dec
mov
pop
adc
int3
iret
shll
stc
and
pop
test
inc
add
jnp
mov
shl
xchg
into
push
femms
insb
mov
xchg
das
cmpsb
inc
imul
adc
sbb
or
lret
sbb
xor
add
xchg
mov
add
pop
scas
mov
idivb
cltd
add
and
xchg
icebp
mov
loope
loop
or
test
sbb
fstps
cmp
xchg
xor
fstl
mov
ret
decl
adc
pop
add
push
pop
jae
dec
mov
dec
hlt
lock
dec
mov
add
mov
dec
xchg
stos
inc
bnd
push
cmp
loope
pop
addl
sbb
cmc
cmp
mov
lahf
shrl
mov
call
lods
out
lea
mov
imul
push
push
fs
arpl
or
movsb
in
lds
call
fdivrl
dec
jge
leave
das
imul
adcb
sbb
jle
fisubrl
xor
mov
sub
popf
sbbl
or
sub
iret
cltd
mov
mov
xchg
inc
push
insl
mov
dec
mov
outsb
bound
aam
mov
xor
cmp
rol
jae
daa
in
mov
cs
xchg
mov
xor
xchg
jnp
mov
cwtl
adc
into
pop
negb
js
push
test
adc
shlb
movb
lds
repz
inc
pushf
mov
shlb
pop
inc
enter
jo
stos
jo
and
fildl
sti
mov
pop
bound
push
and
fcompl
xchg
mov
repnz
cmp
std
test
sbb
fisttpl
and
out
jg
fsubl
xor
lret
sbb
dec
jp
int3
aaa
lds
inc
adcl
jno
loop
addr16
push
adc
lock
dec
xchg
sbb
dec
jp
adc
adc
call
cld
or
mov
daa
inc
in
loope
or
add
cs
mov
dec
dec
shll
inc
fdivrs
cmp
xchg
dec
push
mov
jb
inc
repz
test
lahf
imul
cmp
pushf
cmp
leave
repz
cmp
sub
les
fdivs
push
cltd
incb
cwtl
mov
ret
mov
jmp
imul
push
movsb
mov
int3
dec
arpl
ficomps
mov
loopne
add
adc
call
dec
dec
mov
fisubl
jge
int3
les
mov
xchg
mov
dec
or
ja
jp
call
jmp
mov
cwtl
cmpsl
std
and
sub
adc
js
cld
ret
add
jno
fsubrl
in
out
es
loope
in
push
xor
push
push
mov
js
rolb
xor
popf
fidivs
dec
or
clc
jo
div
shll
and
into
test
mov
cs
add
jge
inc
into
movsl
xorl
dec
loope
cs
stc
lcall
inc
shl
inc
push
push
sbb
mov
cmp
adc
repnz
lods
or
sub
and
sub
cld
mov
inc
mov
dec
pop
and
shll
or
xchg
das
xchg
and
sub
out
xor
dec
xchg
xor
iret
cmp
dec
push
hlt
ljmp
jl,pn
sbbl
mov
push
arpl
mov
mov
repz
dec
push
mov
in
xchg
mov
pop
int3
pop
mov
test
inc
sahf
ss
pop
mov
lcall
inc
adc
mov
loope
das
xchg
cmpsl
movswl
mov
loope
and
push
loopne
loopne
ret
xchg
lock
test
mov
mov
fistl
pop
pop
pop
nop
cmpsb
xchg
jmp
pop
xlat
xchg
sbb
loope
cmp
lods
insl
mov
mov
enter
jae
jno
inc
mov
sbb
rorb
push
out
dec
mov
aas
shll
push
stc
aad
hlt
jmp
aaa
arpl
inc
arpl
adc
in
cmp
out
loop
jg
jp
aad
fisttps
lret
sub
push
aam
mov
or
jne
push
nop
sub
cmp
popa
add
sbb
pop
push
cmp
mov
aas
bound
pop
xchg
add
icebp
cmpsl
and
inc
and
mov
lea
lret
test
cmp
mov
and
inc
cmp
fucomip
addr16
imul
cmp
sub
ret
outsb
pushf
pop
add
nop
iret
jp
sbb
rorb
sub
cltd
arpl
fs
xchg
lods
sbb
mov
cmpxchg
jecxz
imul
dec
mov
arpl
fs
add
shlb
adc
inc
push
aas
sub
sbb
xlat
movsbl
loopne
mov
hlt
add
mov
sub
fstl
mov
cmp
add
add
fistpl
dec
inc
pop
jb
rclb
cld
iret
push
mov
jae
jp
or
jne
xor
fmull
in
dec
mov
add
imul
shlb
std
sbb
jmp
and
into
xchg
push
lahf
xchg
dec
jo,pn
mov
pop
aas
adc
pop
adc
adc
inc
ss
shl
insb
arpl
push
sti
ja
cmp
adc
ja
cmp
pop
scas
or
jns
dec
shll
data16
dec
pop
addr16
mov
jae
xchg
int3
ja
sar
jne
or
mov
and
das
pslld
enter
das
shlb
dec
lret
jb
insb
lcall
cmp
cwtl
xor
js
fs
fstpt
in
cltd
cmp
xchg
mov
inc
dec
je
jno
or
pop
std
lods
loopne
mov
jnp
xchg
dec
inc
icebp
sti
das
cmp
daa
imul
push
xchg
mov
cmp
and
xchg
mov
jge
pop
cmpsb
shld
icebp
pop
inc
mov
lret
test
add
xlat
pop
jo
imul
mov
xor
ds
es
rolb
dec
sub
add
fstps
mov
or
and
xor
scas
push
inc
adc
xchg
daa
sub
sub
xor
rcrl
pop
or
rorb
popa
jmp
arpl
xor
adc
xchg
add
xchg
xchg
adc
test
mul
es
fbld
outsb
clc
sub
xorb
or
aad
icebp
mov
push
lods
mov
pop
fmul
loope
sbb
jbe
xor
movsb
into
rorb
shlb
ret
dec
test
jmp
mov
lret
lea
sahf
mov
movsb
mov
cmp
fs
rclb
mov
ret
mov
jae
xor
test
pusha
test
test
jnp
sbb
add
mov
gs
cmpsb
mov
mov
in
mov
cli
std
push
cld
pop
sti
mov
pusha
stc
ficoms
push
jmp
mov
fisubs
pop
daa
cmp
pop
mov
int
mov
sub
popf
inc
andb
push
and
sbb
cmc
jg
xchg
pop
xchg
push
ret
jl
cmp
lods
pop
inc
push
test
sub
adc
movsb
cmp
sbb
jle
sbb
shll
mov
inc
fs
arpl
inc
pop
mov
inc
movsb
outsl
sbb
mov
sbb
push
int
xchg
inc
push
xor
pop
jg
jnp
je
xlat
iret
mov
movsl
lcall
jbe
in
in
std
pushf
rorl
mov
push
aad
int
clc
adcl
and
or
leave
subb
mov
out
add
test
popf
pusha
xchg
and
iret
cmpl
rcr
loop
lods
and
test
mov
out
jmp
mov
mov
into
mov
inc
pop
cltd
sub
out
pop
mov
mov
sbb
lahf
push
int3
fisttps
stos
test
cli
jmp
out
mov
dec
and
mov
push
jne
jle
adc
and
cltd
push
das
xchg
inc
pop
inc
sub
inc
push
lcall
push
outsb
push
mov
sbb
push
sub
cli
sub
mov
stos
push
and
inc
enter
mov
repz
test
dec
xchg
sbb
push
shr
adc
fxch
xchg
enter
mov
cmp
and
fs
rorb
sub
mov
test
imul
push
fsubs
jmp
push
push
std
int
push
loopne
rolb
orb
insl
clc
push
lret
inc
lret
mov
cli
mov
test
lods
fists
pop
adc
ret
sub
pop
cmp
test
xchg
inc
xor
ja
test
push
andl
dec
dec
sbb
jb
mov
and
loop
pusha
imul
lahf
sub
or
and
pop
push
fidivrs
xchg
not
or
xor
ret
rcrb
loop
ja
fwait
pop
mov
scas
loope
jne
and
mov
or
in
stc
pop
cmpsb
lcall
lret
sbb
or
mov
insl
cwtl
clc
push
stc
lret
jmp
cmp
push
sti
push
mov
negl
lds
dec
call
mov
movl
fistps
fwait
cmpsl
idiv
cltd
loopne
pushf
dec
inc
int3
stc
out
mov
inc
xor
xor
ret
push
and
jg
adc
or
vsubpd
jno
mov
dec
lds
icebp
shll
push
cmpsb
xchg
hlt
dec
out
push
inc
mov
xor
cmpsb
xchg
out
cmp
fcmovnb
in
ret
sbb
cmpsb
or
sbb
lahf
or
and
cmp
push
scas
add
testl
decl
shrb
gs
sbb
mov
dec
cs
pop
fcomps
popa
test
lret
push
sub
xor
enter
int
jge
and
push
loop
pop
jecxz
pop
inc
cmc
inc
call
out
les
or
insl
push
ja
push
shl
sub
shll
adcb
jbe
xchg
sti
pop
and
add
scas
jl
inc
imul
push
es
stc
mov
inc
cmp
shll
lret
adc
push
pop
pusha
and
jbe
sbb
addr16
mov
dec
orl
loopne
ds
fs
pop
mov
mov
cs
pop
push
int
popf
push
xchg
push
inc
arpl
ds
ja
cwtl
test
insb
in
test
sbb
popf
inc
jno
jnp
iret
jne
mov
pop
repz
ret
xor
mov
pop
call
jns
push
sbbb
add
stos
imul
mov
dec
push
mov
inc
pop
mov
dec
cmpsb
aad
jae
inc
iret
movsl
inc
enter
inc
mov
add
adc
xchg
mov
sbb
xchg
and
movsl
js
xor
cmp
subb
push
cli
jmp
scas
or
push
jmp
xor
test
sarb
pop
mulps
push
dec
insl
dec
inc
cmp
or
imul
xchg
xchg
stc
dec
or
push
lret
mov
jbe
xor
ljmp
gs
sti
ljmp
popf
leave
sub
mov
cmp
icebp
ret
mov
pop
inc
and
fdivl
mov
pop
imul
stc
mov
stos
sbb
xchg
jle
rcll
push
loope
outsb
push
lock
addr16
push
stos
push
jae
js
pop
mov
das
dec
cmc
inc
out
ja
sub
fidivrl
dec
out
lcall
aad
and
pushf
add
mov
push
jl
sbb
imul
ret
and
mov
sbb
mov
push
cmpsl
sub
mov
subb
fidivs
je
ds
inc
fcmovne
loopne
xchg
dec
sub
jg
into
or
mov
pop
mov
xchg
insl
sbb
aaa
add
shll
test
mov
mov
test
outsb
jp
mov
daa
mov
mov
lea
mov
js
mov
inc
cmpsb
dec
xchg
and
inc
push
imul
pop
pop
or
push
mov
cwtl
xchg
stos
fistpl
lds
mov
and
fwait
and
pusha
and
out
std
fwait
sbb
loopne
mov
movsb
xchg
mov
enter
bound
push
jp
dec
movb
lret
out
and
popa
sub
dec
fisttps
adc
mov
ss
je
hlt
xchg
or
jmp
add
das
leave
in
adc
sbb
mov
cmp
lahf
iret
or
lock
mov
scas
push
add
std
adc
or
cmp
mov
cli
imul
mov
sub
mov
sbb
out
or
adc
or
pop
iret
jmp
loopne
pop
repnz
push
dec
adc
les
dec
xchg
stos
rol
stos
in
pop
push
lea
push
mov
jmp
jns
jmp
ud1
aas
push
mov
mov
sar
push
sub
pop
jl
negl
inc
jnp
inc
sti
cmp
js
adc
sahf
js
pop
or
daa
testl
xor
xor
adc
iret
fwait
or
mov
shlb
pop
cltd
pusha
fisubrl
fcompl
dec
cli
cmp
repz
and
imul
and
icebp
mov
aaa
daa
mov
hlt
xor
xchg
cmp
sbb
repz
mov
mov
jg
jg
clc
adc
pusha
lods
loope
movsb
sbbb
pop
jno
into
orl
mov
and
or
std
jmp
xor
and
sub
in
outsb
push
iret
push
loope
xor
xlat
ret
push
fists
push
ljmp
out
sbb
pop
mov
es
fcmovnu
in
mulb
inc
leave
pop
mov
lahf
mov
add
lcall
adc
scas
xor
and
bound
sbb
and
shr
jnp
jle
cmpsl
movsl
outsl
sub
mov
pop
adc
lret
fistpll
pop
cmp
hlt
xchg
xor
or
sbb
jno
xor
xchg
cmp
bound
xchg
cmc
out
fnsave
aas
jl
in
mov
xor
mov
xor
adc
lock
pop
shll
mov
or
adc
in
cmp
sub
push
push
cmp
jle
insb
scas
and
bound
jbe
sub
daa
jbe
test
inc
adc
mov
and
cmp
scas
lods
jo
lret
adc
pop
sbb
and
pop
repz
jne
gs
dec
test
cmp
insb
xchg
das
pop
jmp
int
call
lahf
and
push
inc
lea
sbb
inc
jecxz
add
dec
inc
adc
std
mov
mull
jb
test
push
xchg
fisttps
xchg
int3
imul
sub
sbb
je,pn
incb
jb
ffreep
dec
push
lret
dec
pop
adc
repz
jmp
loopne
fldenv
fcmovnbe
ljmp
xor
aam
adc
jmp
iret
inc
loop
leave
pop
inc
xor
gs
inc
push
js
cmpsl
fdiv
mov
sbb
test
xchg
sbb
rcll
movsl
push
and
dec
stos
cmp
jo
ds
pop
mov
pop
imull
daa
je
lcall
mov
push
lret
sbb
and
jmp
jo
ljmp
dec
cmpl
loope
aad
mov
sbb
sbb
mov
out
nop
scas
lea
push
scas
cli
mov
xchg
push
push
ljmp
dec
dec
pop
sbb
jge
sahf
repnz
loopne
pop
jl
xorl
inc
lock
xor
jae
cmp
pusha
and
and
and
mov
jmp
or
xchg
rcl
adc
pusha
test
xor
lahf
xlat
dec
addr16
rol
into
mov
out
aam
cmpsl
xchg
cmp
pop
mov
cmp
stc
stc
xchg
add
scas
mov
cs
jecxz
push
in
pop
test
mov
pop
lods
sti
jle
inc
ss
int3
adc
incl
sbb
lret
aaa
push
test
mov
lcall
lods
mov
adc
xor
das
fdivrs
cmp
or
push
mov
test
fildll
cmp
xchg
cmp
cwtl
lods
ja
dec
xchg
idivl
js
pop
add
ret
pop
xlat
cmp
sti
sbbl
push
pushf
cmp
pop
pop
adc
pop
jo
insl
push
fxch
in
jno
pop
lds
jnp
mov
xorl
insl
movsb
adc
in
add
xor
imul
xlat
negl
xor
mov
loopne
int
rorl
dec
repz
xchg
cs
es
nop
adc
inc
add
rcl
insb
push
xchg
pop
fiadds
cli
add
pop
sar
into
sub
clc
jmp
gs
jle
push
xchg
mov
mov
cmp
cwtl
test
jl
ss
dec
in
or
dec
lcall
inc
aam
cltd
mov
jecxz
ja
inc
push
jne
inc
test
xchg
out
out
xchg
lock
add
cs
cmp
testl
test
mov
dec
into
cmp
out
mov
negl
cld
mov
push
add
repnz
jp
add
xchg
dec
cmpsl
aas
jbe
pop
iret
scas
xor
shll
out
pop
and
lret
test
test
xchg
orb
andb
jae
es
xchg
xchg
xchg
mov
or
incl
out
rcrl
sbbb
ljmp
add
jb
mov
and
mov
jno
mov
jnp
dec
xor
adc
push
jno
es
and
xchg
hlt
lahf
mov
sbb
jp
lea
push
sbb
sbb
mov
push
fildll
mov
pop
lods
push
push
and
sbb
daa
addr16
jbe
pop
aam
lret
repnz
aas
and
std
and
inc
adc
jne
inc
js
cmp
fcoml
jmp
mov
mov
push
push
loopne
or
mov
loop
jge
inc
sbb
jecxz
pop
ds
jmp
cmpb
mov
scas
test
inc
nop
imul
push
lret
inc
add
rcr
push
add
jle
or
cli
add
adc
lret
jp
ljmp
xchg
fsubp
scas
mov
lret
and
outsb
in
rorl
repnz
pop
mov
addr16
repnz
pop
push
fwait
je
stos
mov
push
jo
aam
jnp
mov
cmp
loop
jle
das
add
gs
rorl
sbb
sti
ds
daa
fwait
divb
pop
insl
lds
divl
mov
in
add
pop
xchg
stos
jo
push
outsb
mov
sbb
cmpsb
aas
or
mov
adc
mov
jae
cmp
mov
loop
xchg
mov
push
or
inc
xor
push
pop
fisubs
adc
enter
push
out
in
hlt
pop
shlb
int3
movsb
lcall
icebp
stos
inc
inc
shll
arpl
in
in
add
pop
adc
pop
rorl
mov
pushf
mov
xchg
sub
stos
popa
inc
dec
dec
and
lea
jp
cmpsb
lret
sbb
cmc
xchg
xor
mov
dec
add
loopw
mov
jp
xchg
mov
fsub
pop
jnp
fiadds
push
insb
ud2
sub
jns
ljmp
add
push
adc
movsl
cltd
push
mov
in
dec
jmp
imul
test
movsl
ss
mov
rep
rcl
push
push
mov
ja
mov
inc
rorb
adc
test
dec
mov
xchg
cld
xor
aad
sbb
jmp
aaa
mov
cli
mov
dec
sub
movsl
xchg
out
add
imul
add
mov
rclb
fwait
xchg
loope
adc
outsb
xor
sbb
lcall
stc
dec
arpl
push
add
inc
jbe
xchg
sarb
lods
clc
and
push
aam
push
insl
xchg
xchg
and
add
pop
dec
jno
cmp
mov
lods
inc
idiv
pop
pop
fcoms
aam
pop
scas
jl
mov
cmp
imul
add
shlb
or
add
loopne
push
aad
popf
out
and
pop
mov
mov
in
and
cwtl
mov
divb
cmp
jbe
xchg
pop
mov
loop
add
or
add
stos
push
add
or
pop
inc
sbb
je
mov
add
roll
pop
js
sbb
lock
mov
addl
xchg
test
push
jno
pop
xor
inc
push
mov
out
call
or
fstpt
sbb
jnp
hlt
notl
jge
push
sub
outsb
je
loopne
push
mov
push
arpl
ficomps
les
push
rorl
daa
or
adc
mov
push
shll
aaa
mov
add
xchg
mov
mov
popa
ret
ss
or
subl
roll
push
mov
dec
and
push
mov
fwait
sbb
adc
jnp
fisubrl
add
mov
gs
mov
push
mov
in
cmp
rcr
mov
bound
arpl
mov
cld
pop
sbb
sahf
mov
adc
dec
aam
push
ja
jbe
sar
push
mov
pop
ds
xor
push
or
mov
dec
mov
add
test
mov
xor
aam
subl
inc
loopne
add
data16
ss
lret
xor
and
inc
sbb
push
fbld
sbb
out
fsubl
mov
mov
mov
mov
cmp
push
sub
subb
popf
adc
adc
cmp
rclb
sub
popf
xchg
insl
push
mov
add
push
movsl
ljmp
mov
pop
sbb
xor
mov
cmp
or
mov
inc
fstps
cltd
cmp
mov
mov
xchg
jge
js
in
test
repz
cmp
inc
mov
cs
lahf
das
inc
mov
dec
popw
outsl
mov
mov
cmp
pop
push
sub
xchg
push
xor
rolb
sarl
mov
sti
mov
fcomps
nop
lea
leave
nop
dec
push
int3
shll
sbb
movsl
xlat
sbb
jg
cs
adc
jns
cmc
popa
xor
add
cmp
add
jle
xor
scas
imul
repnz
into
sbb
dec
arpl
outsl
es
div
cmp
jle
loopew
cmp
out
xor
data16
sahf
and
js
cli
jmp
mov
lret
mov
int
mov
jne
sub
mov
dec
std
push
mov
subl
mov
daa
inc
or
push
mov
shrb
pusha
or
clc
out
das
push
enter
push
xchg
scas
jne
cmp
sbb
imulb
sti
mov
rorl
cmp
adc
mov
inc
sbb
call
aaa
rorb
aaa
rcrl
xchg
lock
lods
push
outsb
push
stos
jmp
mov
sub
pop
fldt
sbb
lahf
clc
cli
in
xchg
fs
jnp
pop
mov
addr16
xor
xchg
enter
mov
mov
mov
lods
mov
push
outsb
xor
cmpsl
aad
inc
add
pop
aas
jb
inc
sbb
xor
movsb
int3
cmp
pop
in
fdivs
or
shl
fidivrl
loop
sub
add
ret
mov
test
scas
mov
inc
lods
dec
sub
aaa
jge
mov
out
sub
adc
cmpsl
sub
adc
aam
mov
pop
inc
push
xchg
push
xorb
mov
xchg
out
cwtl
add
inc
daa
daa
sbb
mov
mov
mov
imul
ret
lds
pushf
mov
adc
out
inc
xchg
outsb
inc
pop
imul
daa
pop
mov
repnz
scas
jnp
iret
sti
dec
stos
dec
xor
bound
adc
mov
cmpsl
push
ficomps
and
inc
and
push
jl
insl
mov
loop
out
shll
lds
loopne
adc
out
sbb
add
mov
test
mov
sbb
push
inc
push
ss
cld
hlt
pushl
imul
pop
movsb
movsl
jecxz
mov
cmp
add
sub
loopne
mov
iret
dec
in
jg
arpl
add
das
xchg
shl
das
pop
std
add
dec
outsb
mov
inc
push
lahf
cwtl
sarb
sub
sahf
repz
cmp
test
cld
add
jp
xor
sarb
adc
push
cmp
inc
rorl
mov
test
pop
sbb
dec
push
insb
cld
loop
pop
mov
sbb
lcall
into
xchg
jne,pn
je
push
sbb
lret
xor
sar
and
movsl
xchg
stc
sbb
adc
mov
add
movsb
enter
fwait
jno
dec
mov
mov
decl
dec
push
push
ficomps
and
jne
inc
inc
insl
in
and
ret
xor
testb
adc
in
mov
scas
cmc
jne
mov
fwait
inc
mov
mov
inc
movsb
inc
in
inc
les
es
int3
add
loope
shll
cmpsb
out
fs
sar
dec
mov
daa
scas
jnp
jnp
jae
xchg
outsb
inc
daa
xlat
mov
xchg
cld
ss
cmp
insb
filds
icebp
push
stos
mov
scas
jmp
push
lret
mov
in
push
cmpsb
and
inc
inc
xchg
mov
lods
xor
ljmp
test
or
mov
stos
aaa
pop
push
das
fsubs
hlt
adc
mov
pop
lods
add
adc
push
fwait
insl
les
call
pushf
mov
mov
inc
lea
sub
or
aaa
aam
xchg
mov
insl
ds
sub
jl
adc
mul
rorl
ds
and
out
add
adc
push
push
push
jl
mov
imull
xor
mov
xor
jbe
jp
nop
movsl
shrb
dec
adc
inc
in
mov
imul
xchg
es
popa
out
clc
dec
aad
scas
mov
mov
loope
cmp
stc
divb
das
lds
sbb
add
pushf
mov
mov
and
dec
pusha
pop
scas
lcall
leave
icebp
adc
adc
stc
jno
hlt
mov
imulb
ret
sub
iret
inc
je
sbb
jmp
cmp
imul
dec
pop
test
xlat
dec
les
mov
adc
and
adc
loope
mov
fildll
sarb
repz
int
xor
outsb
dec
push
in
popa
cs
dec
das
mov
pop
xchg
add
mov
pop
mov
sub
mov
mov
jae
add
clc
shll
movsl
pop
inc
aad
cli
pop
enter
push
data16
fsubrl
into
dec
and
mov
cmp
mov
push
jmp
adcl
mov
and
mov
les
mov
dec
and
dec
imul
outsl
push
dec
mov
push
sahf
and
arpl
cmpsl
cld
add
push
and
aas
inc
jl
js
cmp
push
test
cwtl
bound
repnz
out
iret
js
or
test
inc
iret
imull
lods
mov
test
fdiv
ja
cli
and
mov
lods
out
jns
mov
mov
adc
or
dec
es
xchg
mov
xor
jle
or
jg
pop
or
ss
ret
and
addr16
fstps
repz
push
sbb
nop
loope
fwait
das
add
lock
sbb
mov
arpl
mov
orl
sub
jecxz
movsl
sub
add
adc
mov
pop
jg
shrl
stos
dec
pop
loope
mov
cmp
add
jl
loopne
loopne
mov
ljmp
mov
xor
outsb
popf
sbb
dec
dec
adc
mov
fwait
movsl
fimull
xchg
cwtl
repnz
aas
fldl
push
fs
iret
notl
push
jno
jae
stc
push
ret
sbb
cltd
dec
out
mov
or
shll
popf
and
inc
call
pop
rolb
out
ret
jo
testb
pop
aad
mov
leave
sub
jno
dec
xor
in
pop
inc
add
cltd
ss
mov
cmp
in
jo
pop
stos
ret
and
orl
and
mov
add
xrelease
fs
xor
pop
inc
cmp
mov
pop
inc
sub
stc
xor
sub
lds
out
mov
cmpl
sbb
inc
dec
into
mov
es
jg
sub
popf
out
xchg
stc
addl
shll
mov
jae
push
test
sbb
shll
add
fldenv
push
xchg
loope
mov
std
imul
xchg
push
outsl
dec
loopne
sub
push
add
aam
shr
xor
inc
arpl
roll
push
jle
dec
mov
addr16
cmp
enter
dec
test
add
or
and
dec
mov
jecxz
sub
inc
fisubl
or
xor
mov
addl
out
nop
xor
cmp
jne
jle
and
stos
outsb
ss
cmpsl
dec
xorl
mov
mov
dec
mov
std
jne
loopne
jge
loope
jmp
popl
repz
cli
mov
mov
loop
pushf
push
ret
call
sbb
nop
xchg
mov
iret
out
outsl
lret
push
xchg
ds
push
sub
ds
lret
mov
fsts
dec
xor
lods
ja
shrl
arpl
lock
or
inc
sub
fidivl
xchg
aaa
icebp
mov
js
adc
aas
add
push
sub
inc
and
insl
inc
add
or
nop
mov
fucomi
push
jnp
out
push
iret
cmp
addl
rcll
dec
mov
js
mov
inc
pushf
cmpsl
daa
clc
stos
lcall
pop
adc
adc
sbbl
jmp
adc
cmp
push
movsb
xor
int3
out
in
inc
int3
push
cmc
mov
mov
push
xor
add
jp
imul
fdivl
or
jmp
mov
cwtl
into
sbb
lea
mov
push
hlt
fsubl
imul
push
xor
xchg
jmp
mov
dec
dec
sbb
cmp
jl
mov
mov
outsb
je
xchg
or
mov
sbb
gs
xor
xchg
dec
cmp
outsl
xor
push
notb
mov
stos
decl
pop
push
sarb
xor
mov
popa
sub
test
jge
iret
fists
mov
lret
push
pop
adc
repz
pop
fsub
xor
jmp
insl
in
mov
dec
lods
mov
lock
sbb
leave
jge
mov
fcoml
cmp
test
xchg
orb
xchg
icebp
pop
add
xorb
push
fs
aad
push
popa
push
aaa
jecxz
inc
sub
test
lods
imul
adc
lds
lahf
add
lds
sti
fisubl
hlt
fidivrl
xchg
mov
sbb
cmp
stos
and
stos
or
pop
sub
out
outsl
icebp
loop
int
mov
adc
mov
popa
push
adc
gs
ja
enter
mov
jae
mov
xlat
rcl
scas
and
mov
imul
sbb
pop
inc
es
lods
jno
ffreep
pop
pushf
push
mov
jl
dec
pop
test
dec
mov
push
scas
int
sbb
rcrl
sub
ds
adc
dec
inc
loopne
push
enter
lret
jnp
pushf
jecxz
les
cwtl
sarl
stos
dec
bound
or
clc
mov
cmp
cmp
in
mov
fcoml
mov
repnz
mov
add
pushf
sbb
mov
icebp
jle
mov
repnz
inc
adc
xchg
jnp
add
test
cwtl
mov
add
hlt
je
ss
dec
cmpsb
xor
or
mulb
push
sahf
mov
mov
lds
xchg
cmpsb
mov
xor
into
inc
cmpsb
push
sbb
lods
add
cmovb
mov
andl
add
sbb
push
cmpsb
in
rorl
ljmp
xchg
xchg
sbb
sub
push
aam
cmp
lods
lds
int3
cmp
add
es
dec
or
inc
xchg
mov
sbbb
sahf
inc
jge
icebp
loope
int
cmp
xchg
ja
fnsave
add
mov
insl
cmp
test
rol
xchg
jmp
jmp
adc
xchg
sbb
add
repnz
mov
xor
inc
mov
mov
xor
sbb
and
pop
sbb
pop
scas
out
push
mov
push
scas
sbb
shlb
sub
cmp
pop
inc
pop
aam
jne
inc
xchg
iret
push
mov
popa
ss
dec
cmp
test
loop
mov
pusha
xchg
and
dec
and
cmp
mov
fidivs
lahf
adc
mov
or
ss
cmc
ss
int3
sbb
push
sub
rorb
lds
mulb
xchg
stos
inc
push
pop
loope
imul
pop
stos
or
cvtps2pi
jae
lods
scas
shl
pushf
dec
roll
or
jecxz
sub
mov
mov
ret
rcl
lret
mull
dec
popf
pop
loope
dec
cltd
inc
mov
xor
mov
out
sbb
ret
jns
mov
arpl
and
sahf
outsl
pop
je
insl
test
mov
add
cmpsl
lods
jo
in
push
bound
enter
mov
and
inc
jl
shll
cmpsb
add
xor
movsl
xor
fsubl
pop
add
adc
add
and
push
fldenv
mov
or
jnp
sub
mov
rolb
js
cwtl
lret
mov
test
sarb
sti
mov
leave
mov
pusha
adc
pop
lods
dec
test
leave
sbb
jns
xor
mov
jge
xchg
xor
loopne
rorb
jmp
sub
dec
inc
lods
fsubl
lret
sub
xor
xchg
push
movsl
mov
sub
push
jnp
or
movsb
jmp
mov
icebp
or
push
insl
add
adc
mov
xchg
dec
xchg
mov
repnz
iret
or
lcall
ret
xor
sti
or
cmp
mov
jns
or
popf
stc
push
mov
cmpsb
aas
jecxz
jle
mov
mov
jb
jg
nop
fsubs
movsb
and
loopne
cmpl
subb
sub
sbb
fs
addb
outsl
cltd
xchg
lods
mov
loopne
mov
pushf
test
in
xor
sbb
pusha
shlb
call
lods
xor
popf
lods
mov
mov
data16
nop
mov
jns
mov
int
das
xchg
xchg
cmp
cltd
jbe
in
xchg
imul
fstps
js
mov
push
lock
daa
fcoml
std
dec
cmc
or
or
jno
and
or
cmp
std
cmp
push
addr16
std
arpl
push
pop
xchg
insl
imul
lods
sbb
adc
lds
data16
pop
xor
mov
je
mov
mov
rclb
fistps
loope
outsl
fadds
fisubs
cmc
cmpsl
sub
fiadds
fwait
push
loopne
repnz
rcr
pop
repnz
jne
push
or
or
mov
ret
dec
jne
xor
leave
and
or
pop
mov
aam
cmp
cmp
clc
outsl
add
xor
rclb
ret
out
or
enter
mov
mov
pop
cmp
pop
adc
sar
sub
xor
mov
and
stos
ret
ror
outsb
jno
add
cmc
insl
adc
push
lret
imull
mov
mov
lds
mov
or
mov
fs
sub
jno
dec
rcrl
lods
lret
fxch
setle
xor
push
mov
sub
dec
dec
pop
xor
cwtl
jge
xor
lock
int
push
jno
movsl
xchg
gs
repnz
sub
out
repz
adc
push
mov
dec
repnz
adc
lods
xor
or
outsl
push
rcr
outsb
mov
faddl
or
ljmp
pop
loop
push
test
xor
xor
faddl
push
in
or
adc
mov
adc
jo
outsb
repz
and
imul
lock
xchg
int3
mov
mov
cmpsl
xchg
mov
mov
dec
sub
das
mov
mov
xor
dec
aad
cli
or
pusha
cmc
sbb
push
int3
pusha
enter
jmp
sub
std
pusha
rcrl
adcb
adc
das
sbb
jmp
inc
sub
jl
sub
sbb
flds
popf
cld
or
insb
fldt
pop
shl
cmp
jg
push
mov
inc
mov
pop
adc
test
stc
sub
and
shl
mov
sbb
ret
icebp
inc
es
das
andb
enter
add
sbb
xor
insb
test
daa
out
cmp
pop
xor
mov
repz
and
out
fstps
sub
loopne
cltd
inc
xchg
and
ret
in
aam
scas
mov
fmull
outsb
sbb
inc
sub
mov
sar
jae
insl
negl
out
push
inc
test
cli
cmp
jecxz
insl
push
rcrb
aaa
mov
pop
adc
int3
stc
fstl
out
fxam
sub
mov
lea
jbe
xchg
jbe
cwtl
data16
mov
lret
pop
daa
jl
popa
cs
rorb
cmp
loope
sar
aaa
push
cmp
out
fisubrs
cmpsl
jp
pop
cmp
and
dec
jbe
push
jb
stos
jge
fiadds
jle
sbb
mov
cmc
jb
out
push
out
lods
push
lea
or
jne
jns
pop
xlat
mov
add
ja
mov
lods
loopne
imul
rcrl
popa
push
cs
out
push
js
sub
scas
adc
xchg
test
mov
andl
mov
jle
dec
sbb
and
shrb
data16
pop
mov
negl
jb,pt
cmp
push
or
mov
int
adc
out
lret
ret
rol
push
ret
loope
lods
jl
xor
mov
loop
daa
cmp
jae
rcrl
push
arpl
mov
xchg
retw
push
push
mov
rclb
call
cli
adc
in
cmpb
mov
test
call
daa
jbe
mov
lods
pushl
insb
stos
xor
inc
xchg
jae
xor
loope
lahf
mov
test
sub
xor
mov
aas
mov
dec
mov
adc
pop
adc
push
gs
adc
jmp
inc
push
inc
out
add
ds
cmp
or
add
dec
mov
ret
daa
push
jno
imul
scas
xchg
dec
mov
cltd
pop
leave
fwait
or
out
imul
mov
jnp
clc
push
loopne
bnd
and
and
out
loope
sbb
cwtl
pop
mov
addr16
push
movsl
and
jge
cltd
cmc
adc
nop
or
das
xor
shr
push
sbb
shrb
jge
pop
repz
push
cld
pop
xor
mov
cmp
lcall
test
cmp
sbb
pop
paddusw
jmp
sbb
dec
aad
ds
push
ja
cs
jl
push
das
mov
fstpl
icebp
adc
pop
or
mov
aaa
mov
sti
mov
cmpsb
push
aaa
fcmovne
sbb
push
insb
stos
push
sbbl
push
outsl
mov
mov
loop
test
cmpsb
fdivl
push
sbb
loopne
fmull
dec
cmp
xor
cmc
mov
xchg
das
push
jnp
inc
lds
sbb
or
jmp
push
clc
mov
mov
pop
enter
popl
arpl
lret
fadd
lods
or
idivb
jmp
adcl
div
mov
out
dec
movsb
xchg
mov
int
jge
adcl
data16
fidivl
fwait
lcall
ja
mov
icebp
les
jmp
jp
nop
sahf
fdivp
fsts
mov
or
dec
jmp
xor
pop
mov
mov
mov
nop
iret
repz
cmp
mov
push
loop
lock
sub
cltd
inc
mov
dec
fsubrl
loopne
mov
in
sbb
data16
inc
inc
mov
mov
pop
fwait
or
mov
and
bound
nop
icebp
add
mov
xor
jns
and
sub
jmp
sbb
test
xchg
pop
fadd
test
push
mulb
cmc
pop
ss
mov
jmp
das
int3
loopne
orb
in
mov
es
xor
cmc
mov
ret
fwait
jmp
xchg
fildll
mov
iret
inc
jns
adc
imul
fisttpll
stos
adc
and
insl
popa
dec
test
jecxz
jl
or
stc
and
xchg
aaa
push
fwait
test
mulb
mov
out
lods
xor
fmuls
add
es
xchg
ret
mov
pop
stos
or
mov
or
jl
sub
fildll
rclb
cmp
hlt
jg
idivb
daa
xchg
xchg
mull
leave
cmpl
jae
fs
cmp
sarb
fldcw
mov
insl
shll
mov
lods
ret
loop
jl
xchg
outsl
sar
roll
or
cmp
add
in
addl
xchg
jle
clc
test
xor
or
mov
mov
sbb
sbb
rorb
or
xor
sbb
insl
xor
pop
int
push
jge
adc
or
sub
xchg
pop
test
movsb
add
dec
xor
cmp
adc
out
andb
rolb
push
pop
sub
cmp
push
out
ss
das
mulb
bnd
gs
cmpsb
mov
sub
mov
sbb
add
into
cmp
sub
imul
add
xlat
mov
xchg
iret
lea
cli
fdivl
push
enter
xor
sbb
shrb
out
sbb
pop
push
cmpl
ret
insl
push
jle
xchg
ss
mov
fs
jge
sarl
rorl
stos
js
jno
mov
dec
or
jg
mov
sar
sub
inc
sbb
inc
jne
mov
and
fwait
adc
das
std
stos
sub
lods
popa
or
jecxz
das
ljmp
std
leave
fildl
ljmp
push
or
lds
lods
mov
sub
jle
rcll
adc
out
jecxz
xchg
lahf
inc
adcb
sub
and
mov
roll
cmp
jge
pop
test
pushf
inc
cld
dec
bound
add
xchg
dec
push
inc
mov
cmp
mov
out
mov
sub
sbb
jge
pop
ror
mov
test
sbb
lods
cmp
pop
mov
push
sub
jp
daa
fistpll
cmpsl
ror
in
inc
test
adc
and
inc
cmpsl
lret
mov
lahf
or
xchg
xchg
test
inc
fcmovne
mov
test
mov
frstor
stos
loope
cwtl
fadds
fistps
mov
inc
cmp
gs
leave
adc
adc
push
bound
lcall
xor
cs
fsubl
cwtl
arpl
xlat
lock
je
push
xor
bswap
and
pop
iret
xor
xchg
xor
les
inc
and
add
repnz
jmp
jo
pop
jb
les
testb
jns
loope
xchg
push
xchg
aad
xchg
decb
cwtl
nop
rclb
mov
mov
push
mov
adc
sbb
adc
mov
mov
lret
add
mov
jno
or
inc
jno
xlat
cmpsb
js
jae
cmpsb
orb
movsb
call
or
inc
mov
das
out
mov
jp
cld
rorl
add
and
mov
sbb
into
in
xchg
jo
jne
xor
in
scas
idivb
fucomp
and
sbb
mov
push
das
sarl
addr16
dec
aaa
es
scas
lahf
gs
adc
mov
push
or
mov
push
jp
push
push
mov
or
cmc
pushf
jp
sub
es
out
arpl
push
imul
hlt
push
outsb
ficompl
mulb
and
xchg
cwtl
insb
inc
cli
cmp
lret
into
xor
bound
sbb
je
dec
add
hlt
mov
adc
dec
cmp
cmpsl
int3
shlb
sub
or
sbb
adc
popf
xor
xchg
add
xchg
pushf
dec
pop
insb
sbb
mov
call
int
dec
inc
sub
fisubs
movsb
mov
xlat
inc
and
dec
pushf
cmp
xor
jbe
add
sbb
pop
dec
xchg
lar
movsb
insb
aaa
cltd
leave
mov
add
and
mov
mov
push
sub
cli
cmpsl
rclb
xor
sub
mov
inc
pop
pop
ret
sub
jle
mov
mov
pop
sbb
aaa
adc
push
mov
or
xchg
dec
dec
iret
inc
cmp
mov
out
pop
cltd
inc
cmpl
mov
jge
repnz
arpl
outsb
jns
sub
mov
sub
xor
xchg
sub
adc
jb
jp
jmp
xchg
sub
mov
mov
movsb
push
mov
and
das
mov
sub
push
repnz
cmc
es
jae
push
out
pop
pop
jo
and
test
std
sti
push
fadds
jl
test
adc
pop
cmp
das
mov
mov
addl
mov
inc
mov
das
lret
es
or
dec
je
mov
or
test
lret
cmp
or
pop
enter
xor
mov
cli
lahf
nop
xchg
mov
ret
push
adc
out
cmp
jno
pop
jb
mov
xchg
mov
and
xchg
push
push
stos
or
and
mov
loopew
or
push
jecxz
ret
ljmp
jmp
outsl
test
stos
or
je
stc
lcall
inc
das
clc
jnp
lods
lock
push
test
ret
insl
xchg
cli
and
imul
ljmp
sub
shrb
inc
pusha
jg
add
aam
sbb
xchg
sbb
aad
out
hlt
pusha
push
imul
mov
pop
xor
icebp
lret
lahf
cmc
jnp
or
mov
push
fmul
xchg
mov
and
push
xchg
mov
mov
daa
arpl
in
push
jmp
mov
add
adc
je
ja
mov
in
imul
sub
xorb
subb
mov
xchg
pop
pusha
jmp
adc
cmpsl
dec
in
mov
add
fiadds
lds
int
fistl
andl
jno
inc
insl
sub
in
push
ljmp
push
mov
jno
lea
dec
push
cmp
pop
arpl
loope
mov
dec
push
inc
jb
out
push
push
imul
dec
jl
xor
js
push
int
lcall
add
ficoms
xor
push
rcr
xor
add
cmc
add
leave
bound
loopne
and
push
int
insl
and
xchg
jne
push
in
int3
fsubr
aad
or
adc
xchg
add
lock
lret
push
std
nop
dec
inc
mov
nop
data16
test
push
dec
rclb
dec
fcomps
lret
in
pop
dec
sahf
mov
xor
xchg
xor
loopne
xchg
sbb
adc
jbe
cmc
cmpsb
or
push
sarl
jmp
fs
add
sbb
mov
pop
add
je
jl
push
xchg
enter
movsl
push
push
dec
test
lods
pop
or
ss
mov
mov
out
push
push
scas
adc
add
test
int3
adc
push
jae
into
add
cmp
cmp
dec
cmp
dec
sbb
or
xchg
lea
xor
sub
inc
icebp
rolb
mov
xchg
dec
scas
lahf
mov
adc
lds
dec
jl
repz
in
test
std
loopne
mov
nop
xor
push
adcb
idivb
clc
xor
ss
sbb
jae
lods
lret
clc
imul
dec
lahf
xlat
notb
jp
lds
out
lds
pop
fmuls
mov
dec
leave
lods
and
movsl
ret
mov
jmp
aas
jb
scas
addb
es
mov
push
movsl
pop
pop
daa
sbb
jl
pop
cmp
inc
xor
aas
test
jae
dec
or
fisubrs
stos
inc
das
dec
inc
pcmpgtb
mov
adcb
mov
lods
xor
sbb
popa
add
push
sahf
ficompl
mov
add
rorb
add
fisttps
jl
xchg
and
sub
mov
xchg
lret
out
sbb
push
insb
pop
loopne
sbb
sbb
into
cmpsl
jae
adc
fs
nop
stos
sbb
out
pop
xchg
jecxz
ret
ds
rcl
lahf
je
adc
mov
adcb
cmp
pusha
dec
rcrb
in
jae
rorl
subl
test
cmp
repnz
xor
in
xor
sti
pop
sbb
jbe
xor
incb
add
cli
mov
push
insl
pop
sub
in
inc
imulb
adc
mov
fisubrl
adc
iret
aad
inc
gs
push
js
push
cs
xchg
push
inc
mov
cmp
fsubp
jo
lods
lods
pusha
mov
adc
popf
push
add
lahf
mov
les
and
cmp
lock
scas
lahf
or
dec
popf
mov
pop
adcb
xor
sub
pop
lret
imulb
dec
das
mov
sbb
sub
test
orb
push
mov
add
xor
or
jnp
rolb
fxch
pop
inc
lahf
icebp
fdivs
stos
je
nop
lds
dec
and
xchg
ret
pop
dec
adc
in
mov
push
jae
push
jge
testl
pop
pop
push
iret
mov
fistpl
les
popl
mov
pushf
cmp
lods
lods
xor
nop
push
inc
cmc
lods
out
xchg
dec
dec
in
jne
flds
xchg
int3
sub
xchg
cmp
pusha
adc
push
sub
mov
cmp
arpl
iret
test
test
je
jle
jmp
stos
dec
call
orl
cs
ss
or
das
sbbl
inc
fisubrs
pop
xchg
and
sti
mov
hlt
sbb
adc
xchg
ljmp
fldl
stos
ja
xchg
dec
incb
or
insb
cltd
lock
sbb
lcall
outsb
cli
into
and
push
into
cmp
out
mov
hlt
jp
pop
cmp
sbb
jae
jb
cli
jmp
and
dec
lock
inc
adc
jno
fstl
inc
or
add
inc
pop
data16
stc
inc
in
insb
jl
je
scas
mov
pop
and
icebp
add
jl
jns
leave
dec
dec
lods
push
push
jle
sahf
jge
fisttps
lahf
xor
mov
xchg
inc
xchg
dec
mov
mov
sti
ret
imul
test
cmpl
mov
and
pop
sbbl
xchg
mov
xchg
aam
mov
fwait
lds
sbb
adc
lret
lds
ret
test
stos
rclb
call
out
ficompl
sbbb
inc
cmc
jne
or
sub
subl
roll
xor
jo
lret
push
adc
insl
test
int3
leave
mov
cld
mov
insb
sbb
lcall
shr
adc
imul
sub
lret
mov
mov
cmp
cmp
stos
loope
rol
and
es
xchg
imull
inc
xor
int3
out
lcall
divl
clc
addb
into
xchg
lods
mov
mov
ljmp
lods
shl
pop
movsl
popf
pop
mov
pushw
jle
insb
add
cmp
mov
stos
lea
cmp
mov
and
ja
cli
mov
lea
fldt
sbb
int
jmp
mov
push
mov
pop
dec
popa
rclb
pop
mov
inc
sbb
leave
push
push
pop
cmp
push
loope
mov
add
mov
lcall
ret
and
add
xchg
xor
xchg
scas
in
adc
imul
ret
and
pop
ficoms
jno
in
mov
xchg
or
dec
dec
jo
fbstp
add
xorl
insb
dec
xor
add
iret
jns
dec
outsb
and
pmullw
stos
jmp
and
movsb
xchg
adc
cs
add
jo
adc
shrb
ret
pushw
dec
add
mov
jno
hlt
xor
xchg
jae
hlt
nop
push
fmuls
dec
inc
or
or
pop
lds
cwtl
lcall
push
divb
add
inc
jae
jp
pop
xor
push
int
stos
pop
fcomip
cmp
or
fistpl
push
or
mov
pop
mov
xor
dec
pop
or
ret
outsb
rcrl
shl
cmpsl
stos
popa
mov
int
sub
mov
aam
xchg
in
cwtl
std
aad
lock
je
sbb
std
test
or
fidivrs
ret
mov
adc
cmp
xor
pop
sbb
out
aas
lcall
adc
dec
jb
cs
cli
aad
mov
jmp
xchg
les
stos
iret
scas
push
arpl
aad
punpcklwd
ret
test
decl
arpl
test
adc
xlat
fs
and
jnp
movl
rcrb
add
and
ja
rcll
shr
cltd
sbb
jg
or
add
adc
iretw
in
pop
lret
repz
jle
jns
jmp
lds
addr16
xor
mov
lahf
scas
fistl
inc
cmp
daa
inc
les
scas
outsb
std
cmc
pop
jge
fisttpll
and
clc
cmp
out
stc
loop
and
int
xchg
in
xor
mov
aam
in
add
sub
inc
testl
xchg
pop
push
or
popf
add
jle
xchg
inc
xchg
jne
dec
imul
inc
xchg
movsb
push
push
leave
push
push
hlt
lods
xlat
push
push
aas
jbe
xor
lods
pop
fsubl
push
adc
jmp
or
dec
jbe
icebp
jb
stc
scas
jbe
and
jecxz
or
std
jle
cmc
push
ljmp
das
push
or
cmp
mov
fsubl
xor
fs
les
sub
repz
sbbb
inc
enter
add
mov
cs
xchg
jp
push
mov
sub
push
es
push
xor
add
xor
or
idiv
cmp
pushf
mov
iret
std
je
test
push
inc
and
scas
jle
pop
cld
or
sub
xchg
and
ljmp
stc
aaa
add
xchg
jnp
sbb
pop
fcom
pop
or
shll
fimuls
in
pop
ret
movsl
sub
les
sbb
stc
sub
sbb
push
and
test
push
in
cmp
sbb
test
fdivrs
lret
cmpb
adc
gs
push
or
loope
stc
adc
fsubrs
inc
jne
fsubrl
fstpt
out
fwait
mov
xchg
xchg
mov
das
xchg
and
cmp
ret
ret
insl
sub
outsb
add
outsl
fst
repz
test
mov
adc
fimuls
sub
dec
outsl
jl
sub
lock
dec
int3
iret
shrl
imul
fcomps
mov
mov
inc
popa
push
sbb
push
fadd
out
loopne
pop
mov
sbb
addr16
fcomps
and
std
sbb
jge
cltd
mov
adc
lret
sbb
push
addr16
cltd
cmp
fsubl
add
push
pop
jbe
mov
pop
aad
xor
ret
mov
ss
dec
fwait
in
pop
hlt
mov
xorl
in
mov
fwait
dec
xchg
iret
sbb
mov
inc
hlt
popf
out
test
xchg
in
xor
es
lock
cld
jge,pt
test
push
subb
test
rcll
add
push
lahf
out
cmp
repnz
xchg
pop
hlt
pop
sub
stos
lret
dec
or
addb
das
push
mov
data16
insb
sbb
mov
xor
inc
fcoms
jae
jl
dec
sub
sbb
aam
push
adc
xor
fwait
in
xchg
mov
jp
arpl
mov
push
loopne
movb
fsubl
out
ja
in
push
push
sub
adc
add
scas
fucomi
ret
popa
data16
sub
or
mov
aas
dec
clc
xchg
aad
fdivrs
gs
repnz
pop
mov
ds
test
cs
test
or
push
into
mov
fisttps
stos
mov
mov
into
and
inc
outsl
xchg
xchg
test
push
decl
fnstsw
push
cltd
out
mov
sub
test
stos
les
mov
fucom
gs
je
bound
and
out
mov
xchg
js
pop
and
cwtl
mov
popf
ret
aad
adc
mov
add
cmp
dec
xor
sbb
xchg
lods
out
xor
fdivrp
cmp
ficompl
inc
xchg
je
push
popa
adc
or
das
fimuls
add
idiv
lahf
dec
jns
movsl
inc
mov
add
je
add
repnz
cmpb
jp
pop
test
aas
pop
dec
cmp
cmp
sar
xchg
dec
sbb
push
sti
not
sub
jbe
push
pop
cmpsb
xchg
sarb
das
mov
dec
push
xor
shrb
and
mov
xor
xorb
mov
in
sahf
mov
dec
shlb
add
dec
dec
aas
mov
fs
je
xlat
cmp
repnz
out
inc
xchg
jae
out
inc
aaa
int3
rorl
jne
mov
cmp
push
add
mov
sbb
jnp
into
clc
jnp
decb
sub
push
lahf
fs
cwtl
sub
jecxz
push
dec
mov
clc
mov
cmc
loope
mov
lock
iret
into
adc
add
pop
lds
outsl
lds
shlb
cmpsl
pop
lods
addr16
sub
push
push
daa
push
mov
pushf
cmp
push
cs
scas
push
jno
es
popa
cmp
add
pop
push
inc
jns
mov
ror
dec
lds
ljmp
jbe,pn
imul
icebp
and
dec
lods
pop
cmp
inc
mov
cmpsl
xor
push
addb
ja
pop
add
push
dec
mov
pop
test
add
xor
jns
les
add
xor
data16
or
and
insl
lock
mov
pop
mov
pop
add
mov
fisubl
add
inc
jne
mov
cld
jl
cmp
fnsave
cmp
lahf
mov
scas
jle
sbb
std
cmp
bound
pop
lcall
push
lds
rcll
sub
push
cmp
xchg
std
dec
mov
xcrypt-cfb
cmpsl
popa
add
in
inc
aad
add
xchg
push
jecxz
jmp
dec
adc
cmp
cli
xorl
fnsave
movsb
popf
mov
push
and
mov
xchg
push
inc
mov
push
rcrb
insb
pop
mov
hlt
jns
jmp
pop
test
test
mov
jg
bound
loopne
cltd
addr16
cltd
push
lea
dec
ss
mov
sbb
jae
loop
stos
inc
shlb
in
add
into
pop
push
push
adc
aas
lahf
outsl
insb
fsts
or
rorb
out
jb
loop
sbbb
pushf
push
sub
push
sub
test
std
mov
jo
testb
movsb
popa
add
inc
imul
mov
mov
negb
sub
ds
jnp
mov
loope
mov
lcall
jbe
adc
outsl
ds
rclb
std
sbb
in
push
push
mov
mov
cmp
push
popa
into
cmp
out
jnp
xchg
iret
adc
dec
mov
and
mov
inc
mov
js
rolb
std
dec
mov
dec
dec
adc
cmp
pop
or
cmp
mov
push
lret
or
or
mov
int
stos
lret
scas
stos
cmp
sub
push
jnp
mov
xor
shlb
pop
std
adc
scas
out
push
fdivl
scas
sub
jnp
add
test
movsl
cmpb
xor
push
jge
repz
mov
repnz
and
repz
push
adc
mov
cltd
sbb
push
movsb
pop
jmp
aam
sbb
pop
outsl
outsb
rolb
push
mov
jg
fistl
jmp
outsl
mov
sbb
lret
xor
ds
sub
pop
rorb
movq
outsl
add
pushf
int3
inc
movb
jne
push
dec
stos
or
jle
mov
sub
xchg
mov
cmp
xchg
or
int3
push
mov
es
cmp
or
pushf
adc
cltd
cltd
mov
out
pop
pop
dec
xchg
jo
arpl
rorb
mov
orb
cmc
sbb
jae
cmpsl
pop
cs
mov
mov
ret
aad
push
push
fistpll
jmp
xor
push
jo
or
sub
inc
push
lret
out
sbb
push
push
cmp
mov
push
scas
ja
cmpsb
add
sub
cmp
mov
cmpl
call
mov
fcomps
sbb
add
in
push
stc
aaa
iret
andl
xchg
dec
test
out
cmp
cmp
mov
popf
xlat
jl
out
push
jno
mov
pop
and
or
shll
dec
adc
pushf
push
xchg
iret
es
shrl
lods
pop
cmp
mov
jp
inc
pop
roll
and
sti
push
sbb
and
std
pusha
mov
mov
cmp
sbb
enter
int
xlat
fwait
lret
push
aaa
add
ret
je
dec
push
add
cmp
adc
xchg
outsl
inc
movsb
and
push
add
mov
rcrb
cmpsb
xchg
imul
pop
pushf
push
cmp
test
faddl
or
movsl
add
int
push
insl
in
push
scas
push
inc
inc
and
jo
sarl
ret
call
je
mov
mov
je
mov
cmp
call
mov
stos
rcrl
mov
pop
ret
mov
into
ljmp
pop
lcall
jae
ss
and
add
push
insl
pop
ds
out
mov
cmp
das
mov
mov
xor
outsb
xor
out
in
xchg
enter
in
dec
enter
sub
test
sub
fcmovne
pop
loope
sbb
push
sahf
push
inc
dec
movsl
aad
xchg
shlb
jmp
jae
and
jbe
mov
sbb
frstor
add
mov
mov
mov
popa
inc
mov
test
jmp
push
inc
pop
xchg
cmp
adcb
mov
xchg
push
xor
and
ret
cltd
mov
loope
scas
inc
repnz
fsts
sub
mov
aam
out
cmpsl
scas
dec
subl
push
sub
dec
stos
test
daa
mov
mull
cmc
les
das
xor
cmp
xor
arpl
add
xor
ror
test
daa
arpl
cmc
cmp
pop
imul
pop
mov
addr16
ret
testl
test
sub
mov
xchg
sub
xchg
add
iret
into
leave
hlt
cld
cmp
ret
cmp
roll
test
cmpsl
sbb
lods
in
sbb
adc
in
dec
testb
xchg
ret
jmp
ret
xchg
cltd
push
popf
jnp
push
jge
je
je
pop
pop
ret
lret
mov
or
and
lret
imul
xor
pop
push
gs
lret
into
out
mov
mov
arpl
stc
adc
fistps
dec
movsb
pop
repz
and
aad
pop
inc
into
jle
jne
jns
inc
mov
jns
add
ja
cmp
mov
pusha
push
dec
cmpsl
outsl
shll
neg
xchg
loop
sub
cld
and
lods
test
ficoms
pop
pop
hlt
xchg
popl
aad
lds
out
xor
scas
xor
jmp
jb
and
push
pop
mov
lods
cmp
cmp
mov
addr16
rcl
sahf
ret
or
sbb
lret
fistl
das
and
js
and
test
mov
push
das
out
popa
and
je
outsb
add
adc
pop
sub
hlt
ficoms
adc
adcb
imul
movsb
jne
xchg
xor
mov
leave
jae
mov
fsincos
add
repz
mov
mov
mov
std
mov
mov
adc
ljmp
lds
loop
fucomip
mov
cmp
jno
int3
lock
not
out
leave
push
insl
lds
push
call
lret
push
mov
fiadds
jle
ja
add
call
pop
sub
cmp
mov
in
inc
sub
scas
ficomps
stos
lret
or
mov
mov
or
addr16
lock
push
cmpsb
push
fsubrl
inc
xchg
cmpsb
dec
dec
push
mov
sarb
adcb
mov
mov
testl
jno
sbb
jmp
popa
and
loope
xor
xor
decl
sti
xor
mov
ret
leave
into
add
mov
and
sub
sbb
rcrb
rorl
sbb
and
aad
and
ja
scas
rcll
fxch
lret
mov
lds
dec
sbb
rclb
movsl
xor
data16
adc
push
xchg
ret
stos
or
fbld
scas
repz
push
les
packsswb
shrl
xchg
imul
push
arpl
cmp
sbb
adc
sarb
out
sbb
hlt
stos
sub
inc
or
sbb
idiv
imul
sbb
mov
shrl
jb
sahf
jnp
push
pop
cmc
jne
out
mov
jae
add
adc
lahf
add
es
adc
mov
and
cmpsl
stos
mov
jno
enter
push
int3
adc
cmp
fcoml
scas
jge
addr16
lcall
fstps
orl
jnp
dec
nop
mov
call
adc
mov
ret
sarb
lods
addr16
ds
outsb
adc
insl
ret
out
xor
or
stc
mov
movsb
push
jg
mov
sub
mov
test
jp
mov
pop
dec
add
aas
fwait
inc
fmul
push
mov
push
push
in
enter
pop
adc
inc
lahf
adc
jmp
movsl
xchg
jno
fstpl
mov
popa
lock
jl
or
and
and
and
jmp
outsl
cmp
sti
fsub
outsb
xor
jmp
adc
js
and
mov
mov
mov
shll
pusha
cmp
push
xchg
sub
ja
jecxz
xchg
cmp
fimull
and
dec
jno
push
cmpsl
mov
mulb
decb
push
jge
inc
loope
popa
add
imul
cltd
neg
cmpsb
add
lcall
lahf
cli
mov
cmp
adc
nop
daa
outsb
xor
xchg
mov
popa
pop
scas
loop
mov
loope
add
sahf
push
out
orl
outsl
push
mulps
imul
push
adc
outsb
out
lcall
lret
mov
mov
and
push
mov
push
mov
insl
fadd
ds
mov
icebp
push
sub
and
add
adc
dec
push
add
dec
inc
mov
test
jecxz
pop
xor
out
add
adc
pop
hlt
sbb
repz
push
inc
inc
stos
and
xchg
fdivs
fldl
mov
cmp
push
fwait
mov
leave
cmp
xorb
addr16
jno
pop
in
or
xor
mov
or
ljmp
cltd
lahf
dec
cli
or
sbb
or
lods
mov
cmpsl
mov
rcrl
inc
mov
mov
jns
leave
andb
fwait
jnp
mov
push
call
push
int3
add
push
xor
xlat
and
mov
lods
iret
or
dec
inc
lock
and
data16
fcompl
outsb
fiadds
or
pop
or
inc
out
dec
or
idivl
dec
adc
mov
adc
daa
pop
sub
pop
lcall
fildll
sbbb
push
xchg
dec
pop
gs
add
inc
rcrb
sub
adc
sbb
out
in
imul
jns
xor
imul
or
mov
movsl
mov
pop
mov
add
test
popf
mov
adc
fdivrp
jl
int3
jns
cmpl
popf
mov
pop
fistpl
jae
fs
insb
xchg
cmp
in
mov
jle
dec
add
ljmp
adc
psrlq
xchg
push
out
pop
out
popl
pop
pop
xchg
add
scas
mov
jo
inc
mov
mov
out
cmp
mov
decb
or
mov
and
fs
mov
adc
fwait
lcall
inc
sub
sub
inc
pop
pop
xchg
clc
aas
lock
icebp
or
mov
inc
mov
popa
mov
in
jns
call
push
and
lods
insl
cmp
xchg
lock
add
xor
push
mov
sarl
movsl
mov
lret
xchg
or
mov
mov
push
jge
sub
in
sahf
inc
mov
cmpb
ljmp
aas
lods
bnd
fwait
cmp
xor
aaa
lds
out
shrd
xor
stc
dec
and
stos
cmp
push
idivb
xor
sahf
mov
fisttps
sub
xchg
movsb
cmp
mov
dec
test
dec
jnp
xchg
mov
inc
pushf
aam
xor
cli
xchg
lods
mov
hlt
andb
pop
pop
or
sub
test
or
xchg
or
in
push
fstps
sub
decl
and
cmp
pop
xor
popf
add
dec
or
xor
add
or
aam
add
inc
fisttpl
dec
push
jmp
stos
daa
adc
xor
pop
adc
jbe
ja
fcoms
gs
fisttpl
or
push
xchg
sbb
sahf
clc
imul
or
inc
repnz
divl
call
cmp
loope
jl
pop
xchg
test
or
lds
and
daa
xor
pushf
push
iret
mov
popa
inc
decl
mov
sbb
mov
cmp
jne
orl
ljmp
inc
xor
xchg
shl
and
leave
stc
mov
pop
outsb
int3
loopne
add
das
cmp
leave
clc
lds
adc
mov
pop
pop
in
sub
call
popa
lahf
sub
leave
aaa
inc
pop
mov
jmp
sbb
iret
adc
rol
sbb
mov
arpl
test
sub
xchg
inc
cmp
xor
mov
fprem
lock
mov
add
gs
push
sub
iret
sbb
adc
ret
cmp
pop
loop
bound
inc
cmpsb
loopne
cmp
incl
mov
movsb
insb
push
or
dec
cmp
movsl
xor
push
mov
push
or
lds
and
push
mov
fnsave
inc
lret
xchg
outsl
or
ljmp
daa
out
stos
fabs
push
mov
das
ja
xlat
xlat
mov
std
sahf
cmp
add
lcall
and
xor
int
sub
data16
pop
out
sub
inc
mov
mov
shl
lods
movsl
add
and
sub
xchg
ret
push
fdivl
push
and
cmp
jp
push
cwtl
xor
sbb
repnz
dec
inc
scas
aad
push
inc
xchg
pop
jne
into
std
test
int
es
mov
add
das
xor
and
scas
aas
test
js
jo
insb
mov
hlt
jnp
cmp
push
mov
inc
jbe
movzwl
sub
or
push
repz
xchg
imul
test
es
xlat
add
ror
test
xor
inc
sbb
sbb
incl
repz
aad
fsubs
cmc
dec
push
mov
sub
icebp
imul
mov
dec
cltd
mov
movsl
iret
ss
fistl
and
fisttpl
int
dec
mov
xchg
adcb
xor
lock
sub
push
dec
cmpl
push
mov
ljmp
ja
movsb
in
adc
xchg
testb
jno
dec
push
inc
js
xor
push
pop
mov
add
mov
pop
pop
dec
dec
lods
mov
mov
sbb
int
lock
shll
adc
fidivrs
loope
sub
stc
in
fwait
dec
push
ret
push
add
or
add
pop
cltd
lock
push
jbe
imul
pusha
inc
dec
or
xor
cli
aaa
ds
mov
xchg
xor
or
mov
cmp
pop
and
sub
loopne
nop
sti
call
dec
jg
jne
movsb
cwtl
sbb
lock
xadd
jle
incl
test
sahf
movb
mov
cltd
shlb
inc
repnz
jb
dec
cmpsl
mov
dec
jle
imulb
out
mov
es
push
and
mov
sub
inc
adc
mov
mov
movsl
aas
mov
pop
or
lahf
pop
fwait
jmp
cmp
xor
pushf
and
jnp
std
ret
mov
cwtl
add
notl
mov
xor
or
mov
mov
or
shl
adc
xchg
xchg
inc
dec
mov
enter
add
jne
bound
mov
cmp
jecxz
adc
mov
or
jp
mov
ret
inc
inc
test
out
aam
enter
jne
mov
sub
sub
ficoml
and
mov
add
adc
mov
mov
mov
jnp
mov
jmp
imul
or
push
cwtl
mov
out
xchg
cmp
faddl
mov
pop
mov
add
sarl
pop
jmp
push
repnz
mov
mov
iret
movl
mov
inc
xchg
sub
push
jge
jp
clc
stos
mov
sti
sahf
sbb
push
pushf
sub
cmpsb
and
push
int
push
in
jnp
fsub
xchg
ffree
lea
sub
jmp
lret
or
data16
rclb
cltd
cwtl
ja
mov
cwtl
mov
sub
dec
inc
inc
add
cli
arpl
in
scas
std
imul
push
cmp
fstp
ss
pop
mov
rcrb
xor
iret
test
mov
cltd
repz
jbe
sub
add
adc
aad
sbb
push
inc
push
or
loope
loop
cmp
jb
cmp
xchg
mov
sahf
inc
push
pop
subb
add
inc
mov
inc
sarl
mov
xor
stc
ffreep
imul
cli
call
lock
aam
stos
add
insb
pop
cmpsl
jae
jns
xlat
xchg
repnz
pop
adc
xchg
pop
out
fists
push
ljmp
mov
push
fucomi
iret
jl
test
iret
fwait
pusha
lods
test
sahf
stc
sbbl
arpl
inc
jg
mov
pop
stos
cmp
jb
ds
imul
movsb
gs
aas
sub
test
in
lds
in
xchg
mov
jnp
scas
push
movsl
mov
mov
mov
arpl
inc
mov
pop
push
and
mov
mov
adc
and
mov
test
insl
sahf
rolb
in
cmp
push
mull
pushf
pop
in
scas
popa
mov
inc
push
jg
xchg
data16
iret
xor
enter
loope
jno
lods
setge
mov
push
popf
inc
cli
xchg
xor
sub
inc
cmpsl
fldcw
mov
jb
inc
jg
xor
imul
lods
sahf
loop
iret
or
add
loope
lods
xchg
mov
xchg
stc
inc
and
imull
pop
jecxz
mov
nop
les
aaa
jbe
out
mov
mov
dec
lods
xor
add
das
jle
and
lret
pop
push
push
out
adc
addb
jge
jae
xor
outsb
fwait
inc
lcall
or
add
pop
push
xor
dec
popf
lods
mov
and
stos
fdivrs
or
pavgw
lea
mov
or
mov
sar
pop
mov
orb
lea
mov
xor
jmp
jno
dec
add
ljmp
rcrl
arpl
jp
in
cmp
cli
inc
out
mov
popf
out
enter
xchg
js
ja
sarl
nop
lcall
fwait
in
pusha
stos
xchg
xor
cmp
cmpsl
jge
pop
sbb
fldt
scas
pop
push
mov
cmp
setns
sbb
aaa
ret
stc
aad
fwait
dec
in
dec
adc
arpl
pop
gs
dec
test
mov
aas
mov
cmpsb
sub
fcomp
add
je
cmp
add
jg
add
mov
int
sti
stos
frstor
jmp
mov
add
push
jb
mov
push
and
xchg
cmc
ror
clc
fildll
and
pop
in
cmp
jge
shrl
jecxz
js
xchg
dec
dec
cmp
adc
fnsave
mov
jae
or
add
cs
test
mov
fstl
aad
ficomps
cmp
and
dec
jecxz
mov
sub
lock
ja
xchg
test
mov
pop
icebp
stc
enter
push
repz
dec
cmc
xchg
pop
pop
mov
pop
mov
fisttpll
push
fadd
adc
mov
sarb
pop
lcall
add
jmp
outsl
mov
xchg
mov
mov
repnz
mov
cmpsl
or
mull
xchg
cwtl
sub
ret
jecxz
loopne
pop
mov
mov
mov
stos
mov
mov
pop
cmpsb
les
inc
push
jb
roll
jnp
js
lret
adc
out
push
out
jae
fmull
sbb
sub
adc
xchg
jge
sub
mov
add
cltd
jp
imul
jecxz
lret
movsb
nop
pop
jbe
add
aam
sub
mov
leave
daa
repz
dec
pusha
and
sahf
popa
xor
sub
in
arpl
add
sub
add
xor
push
xor
addl
daa
bound
adc
pop
jbe
shl
lea
daa
js
xor
mov
jg
aas
mov
push
cs
mov
add
or
pop
loop
mov
push
adc
rorl
hlt
inc
fsubrl
popf
jb
or
add
dec
outsb
or
aaa
adcl
jbe
mov
pop
or
or
mov
and
into
mov
cmp
scas
mulb
cmp
cmpsb
dec
shll
push
and
sbb
cmp
ret
add
out
data16
xchg
repnz
mov
push
outsl
xchg
xchg
je
push
mov
ss
ficoms
pop
fdivrl
imul
cmp
add
xlat
mov
imul
fidivrs
pop
xchg
add
lock
mov
lds
fists
lock
cmp
cmp
movb
jecxz
rol
repz
fnstcw
pop
cmp
ret
mov
mov
cmp
add
add
scas
bound
movsb
and
mov
les
mov
dec
pop
scas
xor
dec
sub
mov
push
dec
les
or
cmp
jmp
scas
xchg
adc
inc
and
loopne
in
push
es
dec
movsb
and
jg,pt
mov
sbb
fs
inc
inc
mov
or
adc
adc
out
dec
ss
jo
xor
repnz
xlat
mov
test
ds
adc
fldl
jp
scas
sub
cltd
jp
leave
sub
mov
ret
aaa
jno
mov
out
cmc
out
adc
adc
and
lock
push
mov
in
cmp
jecxz
inc
lods
xor
mov
fldt
push
jg
and
sarl
lds
pop
rclb
fiadds
dec
mov
jnp
adc
rorb
mov
sar
mov
mov
adcl
rcll
mov
cmp
inc
mov
psubb
or
cltd
push
adc
dec
push
stc
shl
sub
jg
xchg
rcl
or
cmp
ficoms
push
hlt
pushf
repz
mov
imulb
rolb
cmpsb
adc
movsb
sub
xchg
cld
nop
push
arpl
sub
aas
mov
popf
out
xor
dec
imul
stos
sub
es
ror
dec
xchg
mov
sbb
adc
scas
xlat
add
out
mov
ja
sbb
xor
call
or
mov
jne
mov
or
outsl
dec
pop
add
jg
pushf
iret
sub
test
cmp
jae
ret
mov
inc
xchg
jae
loop
lret
imul
xchg
call
in
dec
shrb
adc
mov
icebp
jne
mov
mov
push
push
fistl
or
pop
iret
mov
dec
ret
shr
das
cmp
ss
push
mov
mov
push
mov
movsl
sub
dec
inc
dec
inc
es
jns
xchg
aad
ret
xor
xchg
gs
in
loope
xchg
xchg
cld
push
xchg
sarl
js
outsl
jae
dec
pop
subb
scas
fs
ljmp
dec
cmp
sub
stos
lods
hlt
or
dec
jno
and
and
in
ljmp
popa
outsl
inc
scas
pushf
jne
xchg
pop
ficomps
mov
adc
jl
sarl
cld
add
and
xchg
pop
nop
out
sub
dec
mov
jo
and
inc
or
and
cwtl
ret
hlt
push
adc
xorb
iret
inc
mov
xor
mov
jmp
push
xchg
stc
xchg
es
fildl
cltd
inc
mov
add
pop
push
leave
adc
cltd
xchg
idivl
outsb
jmp
test
mov
data16
push
push
call
pop
je
cs
xor
adc
sar
shlb
mov
mov
insl
pop
cld
leave
je
movsl
jo
add
outsb
cmp
les
je
fucomp
add
ret
outsb
fwait
loopne
in
fwait
mov
xchg
jge
filds
ss
sahf
add
push
adc
lods
subb
pop
stos
aaa
mov
and
and
sub
imul
dec
push
or
or
test
pop
aas
pop
fnstsw
int
cvtps2pd
divb
fs
and
lcall
loop
xor
mov
inc
and
jp
ret
into
sti
cmp
movsl
mov
push
call
pop
mov
fbstp
mov
xor
push
nop
inc
inc
loop
pusha
rcll
pop
add
mov
dec
sbb
dec
sbb
cmp
mov
lea
shll
xchg
cmp
jmp
dec
fwait
data16
cmp
pop
mov
push
out
mov
arpl
xor
push
imul
add
pop
mov
inc
andb
cmpsb
dec
push
rolb
ss
push
jae
scas
iret
stc
mov
sbb
ds
lock
rorb
push
sbb
add
and
flds
cmp
dec
or
cli
jg
add
or
xchg
mov
ret
std
cmpsl
inc
xor
lret
outsb
xchg
adc
mov
call
stos
sar
cmp
or
mov
mov
push
push
iret
pop
mov
adc
notl
addr16
pop
mov
int
xchg
adcl
or
mov
repnz
push
sub
cwtl
sub
ficoml
mov
fisubl
jecxz
fucomp
add
repnz
stc
sub
cmp
incb
loopne
or
push
or
pop
addb
mov
fmul
jb
sub
push
mul
mov
cs
dec
push
xchg
pop
add
cmp
push
dec
std
push
sub
and
cmpb
push
ja
inc
xor
pop
and
mov
mov
pop
cwtl
sbb
lret
ja
icebp
cltd
in
jg
ret
jge
es
pop
pop
scas
pop
movd
sub
mov
lock
cltd
arpl
push
xor
and
stc
es
loope
mov
pop
adc
xchg
inc
xchg
dec
fisubrl
es
stos
or
push
mov
sbb
mov
mov
cwtd
jg
pusha
sub
mov
jae
dec
jne
jbe
and
inc
sarb
mov
bound
hlt
mov
lock
cld
mov
in
inc
cmpb
sbb
xor
enter
fldt
add
cmpsb
push
jmp
adc
cmp
aas
mov
jo
lret
cmpsl
mov
push
mov
dec
adc
cwtl
out
popa
lods
jmp
mov
xchg
mov
and
add
add
notb
jecxz
rorw
jb
add
pop
jle
movsl
aas
icebp
add
bound
or
push
in
sbb
pop
movsl
lods
sbb
aam
and
imul
inc
inc
jg
sub
cwtl
or
dec
xchg
sub
std
push
cmp
dec
scas
imul
cmovg
mov
pop
and
and
push
fmuls
jo
dec
push
out
pusha
in
subb
dec
xor
std
jae
cmpsb
es
mov
pop
cwtl
push
xor
inc
int
pop
sbb
std
cmp
test
pop
push
push
and
sbb
bound
ret
imul
adc
fnstcw
ljmp
cmpsb
imul
dec
sub
sbb
push
loop
test
orb
pop
cli
or
or
or
rolb
js
and
daa
lock
ljmp
shrb
cmp
xchg
test
adc
test
icebp
stc
adc
sbb
xor
pop
adc
jmp
pop
sub
dec
aas
adc
sub
test
push
negl
outsl
or
jb
xlat
push
subb
push
mov
or
jge
push
or
popf
addb
cs
adc
mov
into
sbb
stc
icebp
insb
outsb
sbb
in
popf
js
mov
sub
push
jl
xor
bound
inc
xchg
push
scas
xor
out
leave
mov
push
gs
xchg
les
sub
mov
sti
nop
add
lods
jno
loope
shll
sub
js
lock
test
gs
pop
push
movl
push
adcb
cli
sbb
add
cmp
mov
inc
pop
lret
pushf
fdivs
xchg
das
out
cmp
aaa
and
ret
jno
mov
scas
leave
imul
scas
fs
jge
cmp
xchg
xlat
repnz
aaa
pop
cmp
dec
inc
jg
and
shll
mov
ja
mov
push
clc
pushl
mov
stos
inc
mov
dec
add
mov
xchg
pop
and
jecxz
cmp
xlat
push
inc
sahf
push
dec
xlat
jmp
lods
cmp
inc
dec
dec
xchg
inc
mov
loopne
mov
sbb
or
push
push
movsl
stc
pushf
jge
addr16
stos
lock
xchg
sub
inc
mov
rcrb
std
push
sub
jge
mov
imul
sarb
push
xchg
xchg
mov
xchg
repz
mov
aad
dec
mov
bound
in
loop
dec
dec
jb
xlat
pushf
mov
xor
flds
in
jl
jmp
pop
arpl
aas
pop
adc
push
scas
loop
in
push
aad
and
int3
ret
hlt
inc
pushf
push
shrb
mov
mov
loope
adc
and
popf
jge
push
stc
push
sbb
xchg
inc
rcr
ret
push
mov
rorb
mov
push
push
jbe
nop
add
rorb
dec
and
jns
mov
xchg
ss
pop
add
into
rorl
jns
mov
mov
or
cmp
pop
jo
push
pop
mov
xor
stc
dec
and
subl
fsubrl
adc
lcall
movsb
add
push
jecxz
xchg
cmp
imul
aam
inc
scas
jg
cmp
aas
fidivs
mov
sbb
or
dec
adc
mulb
lahf
inc
ret
sbb
das
adc
mov
pop
ret
enter
inc
div
lcall
mov
inc
sbb
loope
xchg
mov
xor
xor
pushl
imulb
adc
mov
ja
jae
fistps
adc
add
and
xlat
ljmp
sbb
jnp
daa
lock
sahf
vpaddd
sbb
add
xchg
loopne
testb
inc
out
adcl
dec
enter
mov
push
js
in
je
gs
push
sbb
iret
cmp
sub
sbbl
jmp
jns
mov
adc
dec
int3
fs
rcl
jb
and
imul
stc
ja
aaa
cld
jno
bound
sbb
das
cmp
imul
rcrb
mov
test
cld
lahf
jnp
pop
stos
mov
rcrl
xlat
sbb
in
arpl
aad
or
cmp
sarb
sub
sahf
and
push
xchg
and
inc
cmp
sbb
rorl
add
push
dec
mov
data16
sbb
and
imul
mov
jns
add
cltd
mov
bound
mov
pop
cmp
lods
inc
movsb
sub
inc
mov
pop
cmp
loop,pt
mov
loope,pt
shlb
or
cmp
jnp
aaa
add
add
outsl
sbb
jg
xchg
jge
lret
and
in
aas
inc
cwtl
imul
cmpsb
inc
imul
test
push
sbb
xchg
das
cltd
ret
lahf
mov
lret
and
imul
test
or
mov
mov
insl
sub
aam
cmp
sbb
mov
loope
sub
or
stos
pop
jge
movb
jp
inc
ret
outsl
cmc
mov
push
push
xor
call
and
mov
dec
cld
inc
filds
ds
in
inc
stc
cmp
mov
adc
add
dec
jle
sbb
outsl
add
or
add
push
lods
adc
fstl
fwait
jo
add
test
sub
fs
loope
je
neg
pop
ss
mov
jno
xor
push
adc
ret
mov
jae
and
or
dec
pop
and
out
fwait
inc
mov
std
dec
mov
pop
fbld
sbb
pop
shlb
daa
xor
outsl
es
sbb
xchg
les
jo
aas
pop
or
sbb
pop
mov
push
dec
imul
sub
push
aad
cmp
xor
pusha
add
fldcw
inc
fisttpll
aam
cli
and
je
jns
into
xor
push
dec
in
push
or
lcall
hlt
fmuls
fmuls
sbb
out
add
cmp
cmp
lock
test
lret
cli
or
repz
popa
and
mov
push
mov
cmp
mov
or
scas
or
add
mov
scas
pop
or
inc
mov
ror
mov
sbb
ss
fnstcw
dec
fndisi(8087
gs
mov
mov
xchg
sub
out
lret
or
lds
xchg
into
adc
lock
movsl
cmp
jbe
ja
out
pop
and
push
sub
les
lcall
fnstenv
mov
mov
mov
adc
stos
mov
movsb
and
push
loope
adc
mov
data16
add
data16
mov
les
fwait
int
mov
cmp
sbb
movsl
ds
insb
call
test
cld
cmpsb
xchg
cmp
movsl
xor
inc
shll
cld
cltd
out
fbstp
pop
mov
dec
xorl
in
rcl
aas
jne
fs
addr16
shll
into
lret
pop
test
sarl
ret
push
movsb
loop
and
sbb
cmpsl
dec
sbb
sbb
inc
and
in
mov
jnp
cmp
dec
scas
loop
xorb
ret
xchg
filds
sub
roll
out
repnz
mov
sub
push
xor
jmp
cmpsb
lahf
addb
dec
jl
mov
sub
repz
pop
jmp
mov
das
das
lahf
out
movsb
mov
push
adc
fcmovnb
pop
in
cmpl
cmpsb
fwait
mov
push
lcall
xchg
fistpl
mov
scas
or
rcr
dec
out
mov
cmp
push
pop
aaa
add
xor
cmp
mov
out
outsb
outsl
push
adc
push
stos
mov
push
test
div
mov
inc
test
out
call
shlb
and
pop
scas
fwait
cmpsb
mov
jns
adc
in
fimull
push
in
int3
adc
add
or
mov
cmpsl
sti
in
fbstp
hlt
imul
and
dec
inc
aam
pushl
jnp
xchg
iret
fwait
inc
sub
ret
fldt
lods
sbb
inc
push
loopne
into
mul
jne
add
mov
xchg
mov
jno
nop
and
lcall
sub
jns
sub
loope
dec
fs
jne
js
xor
adc
push
cltd
jb
lea
bound
sub
inc
xor
mov
push
mov
cld
popf
js
dec
jge
leave
jl
outsl
xchg
and
jecxz
data16
and
inc
sub
pop
sahf
push
ds
mov
jecxz
add
clc
fwait
push
pushf
mov
jmp
jle
pop
sub
xchg
cmp
imul
cmp
or
fdiv
adcb
jp
mov
bound
inc
mov
mov
mov
adc
loope
outsl
push
dec
adc
leave
sub
adc
fdiv
xchg
daa
std
push
xchg
mov
jecxz
in
int
sbb
in
jp
cmpsl
pop
mov
es
xor
rolb
loopne
icebp
test
std
cwtl
imul
pusha
mov
data16
jae
lret
mov
dec
loop
ja
inc
das
iret
clc
lcall
sbb
test
popa
into
push
dec
add
insb
adc
sub
add
int3
pushf
and
out
add
pop
cli
sbb
add
out
jnp
mov
dec
jne
push
lcall
daa
js
fists
adc
and
popf
jp
xchg
and
mov
adc
jp
hlt
aaa
andb
sahf
cmp
subl
pop
jl
sarl
push
ret
ret
mov
lahf
jl
and
xchg
imul
ret
sbb
mov
and
aad
addr16
shrl
ja
adc
cmp
clc
insb
je
enter
inc
shlb
adc
jmp
sub
sbb
or
inc
negl
loop
xchg
lods
adc
loop
insl
mov
sbbb
jbe
data16
mov
dec
lods
xor
mov
rep
add
inc
push
cld
addr16
cmc
xor
fs
incl
inc
daa
imul
adc
mov
xor
jge
imul
cli
sti
lcall
jo
stc
addr16
pop
cmc
push
fs
dec
xchg
lds
dec
sub
andl
es
jb
stos
xchg
jle
dec
fisubl
pop
add
stc
jno
xor
push
rol
repnz
pop
aam
fmull
call
fwait
sub
push
imul
movsl
jae
adc
jmp
lock
sub
xor
dec
sti
cltd
in
clc
insl
adc
out
pushf
push
or
add
sub
add
fdivrp
mov
pop
xor
test
add
or
pop
fmuls
jae
xorb
mov
loop
fdivl
push
pop
sti
xor
xchg
xor
add
decl
push
xchg
test
dec
aas
pop
push
add
aaa
mov
and
mov
js
mov
jmp
js,pn
fdivs
das
fistpll
push
xor
cvtps2pd
mov
inc
js
fwait
cmpsb
cmp
dec
push
mov
repnz
ss
fsubp
pop
inc
and
push
mov
and
fwait
mov
or
rcll
mov
ss
add
cmpsl
pop
mov
int3
in
mov
mov
int
sbb
hlt
push
jp
data16
adc
stos
insl
dec
cmp
and
lds
xchg
adc
insb
scas
into
fs
push
leave
mov
sbb
in
rorb
mov
xor
sub
mov
xlat
or
stos
mov
dec
int
ljmp
ficomps
xchg
movsl
loopne
jb
fmull
daa
stos
mov
into
cmp
mov
or
jne
les
pusha
jle
sub
mov
jecxz
in
lcall
repnz
jb
push
lret
arpl
push
jecxz
ficoms
test
add
mov
adc
sub
jge
int3
mov
push
aam
and
call
mov
mov
aad
lods
in
shl
hlt
push
rorb
or
lret
shrb
sti
sub
popf
in
hlt
jb
sbb
iret
addl
adc
push
push
adc
lods
mov
inc
cs
gs
cmp
lahf
cmpsb
or
mov
cmpsl
aad
imul
adc
stc
icebp
add
mov
xlat
push
push
or
lods
jae
sub
and
enter
mov
pop
inc
lahf
cs
dec
sar
dec
jp
andb
mov
pushf
xchg
mov
repnz
pop
jle
pushf
mov
outsb
mov
jae
mov
add
dec
fwait
mov
repnz
push
jmp
push
sub
add
xlat
push
out
out
or
add
lods
ja
test
cmpsl
jge
data16
aad
testb
pop
jbe
lahf
les
mov
dec
pushl
xlat
pop
inc
lods
push
arpl
jecxz
adc
xchg
pop
in
push
sub
andb
adc
jbe
sarl
filds
sahf
cmpl
adc
fsts
adc
or
fldcw
fadd
push
inc
jl
pop
cmp
jb
aas
cld
frstor
lock
add
loope
and
xor
repz
arpl
in
ss
or
mov
sbb
addr16
pop
mov
and
xchg
int3
outsl
adc
or
and
in
mov
sbb
adc
mov
flds
into
push
pop
dec
mov
int3
neg
push
ret
mov
jns
out
leave
out
dec
push
movsb
js
sbb
test
sub
das
dec
dec
pop
cmp
addr16
outsb
add
mov
call
inc
pop
mov
sbb
add
daa
mov
cli
gs
shll
std
mov
adc
cmp
push
stc
jecxz
incl
mov
xor
mov
inc
in
push
bnd
scas
mov
test
imul
sbb
inc
sub
data16
sub
jns
mov
es
sub
dec
sub
lods
sbb
negb
ss
inc
rcrl
push
sub
sbb
int3
gs
sub
inc
sub
popf
mov
and
fmull
lcall
pop
outsb
jbe
popa
fdivrs
cmpsl
and
and
dec
xchg
jp
cwtl
lahf
fwait
sbb
push
adc
mov
jnp
fdivs
cld
mov
mov
pop
js
cmp
xchg
rcl
movsb
iret
cwtl
mov
in
jnp
int
jnp
ja
pop
sub
push
testb
rorb
addr16
iret
sbb
pusha
pop
xor
pushf
cmpb
mov
or
mov
loope
popa
and
movntps
dec
xchg
and
jno
pop
shlb
aaa
and
push
icebp
lds
lea
mov
inc
pop
add
and
cmp
lcall
mov
push
jle
inc
fsubrl
push
out
imul
and
imul
inc
outsb
jl
pop
icebp
fcom
stc
jns
inc
mov
dec
popa
aaa
int3
push
jmp
pop
cmpsl
push
push
dec
mov
adc
xchg
sub
jae
sbb
cmpl
arpl
scas
adc
test
cwtl
pop
dec
xchg
stc
es
or
cwtl
xor
mov
and
xchg
pop
xor
in
clc
and
sti
cmp
pop
xor
jbe
jo
pop
xchg
sub
fdivrp
aaa
mov
imul
pop
mov
inc
sub
lock
fdiv
inc
add
popf
insl
xchg
mov
fstl
icebp
lock
cmp
inc
adc
fisubl
pop
push
ret
rolb
enter
pop
je
sbb
pop
mov
add
push
dec
jnp
pop
jno
or
add
mov
mov
cs
dec
pop
cmpsb
out
shl
adc
add
mov
inc
call
and
fxch
jne
push
push
insl
xchg
clc
push
or
lods
adc
xchg
jno
push
les
jo
add
push
lcall
orb
xor
push
outsb
jp
lds
jge
mov
mov
fbld
movl
daa
xor
dec
jmp
mov
mov
lcall
xchg
add
jg
in
xchg
xchg
repz
or
add
mov
popa
xchg
push
gs
loopne
and
aaa
mov
mov
imul
mov
xchg
aas
data16
sahf
ret
lea
outsl
lahf
jp
sbb
negb
xchg
sbb
pop
pop
sbb
loop
int3
aas
xlat
xor
xor
inc
inc
repnz
add
adc
lahf
xchg
mov
pop
aad
dec
cmp
rcll
shl
popa
pop
dec
aad
or
ljmp
call
xchg
and
std
dec
sub
mov
or
inc
xor
shr
shlb
fisubs
fadd
fstpt
loopne
mov
add
dec
lcall
movsl
jmp
pusha
aas
insl
jmp
lea
cli
popf
inc
aad
pushf
push
repz
sbb
jge
mov
pop
jns
popa
lods
jae
pop
cwtl
inc
dec
das
bound
es
inc
cld
mov
adc
push
popa
movsb
jae
add
movsb
jecxz
sbb
pusha
adc
xor
jae
sbbl
fidivs
lret
mov
lret
and
push
jno
insb
xchg
mov
jle
ds
jp
xor
xchg
and
mov
xchg
xchg
push
sahf
sbb
xor
in
fwait
xchg
out
out
fwait
out
rorb
in
mov
push
ret
add
fisubl
sbbb
lock
bswap
leave
pop
add
push
ljmp
test
sub
sub
mov
adc
loope
mov
cmpsb
sbb
stos
xor
imul
stos
adc
jl
fld1
iret
es
xor
xor
adc
iret
push
out
mov
pop
push
inc
mov
fdivl
push
xor
or
mov
icebp
or
jo
sub
fmuls
aad
cwtl
push
enter
jl
mov
leave
sub
adc
xchg
add
pop
xchg
fists
mov
or
mov
fmul
das
push
jo
xor
dec
xor
sbbb
movsb
out
in
shl
pop
mov
pop
jb
inc
xchg
mov
in
shrb
push
pop
filds
xchg
mov
je
ret
movsl
xchg
inc
mov
fs
jb
xchg
and
fimull
cmp
dec
sar
aaa
mov
jge
adc
or
dec
pop
iret
outsl
and
scas
fstl
jecxz
fisubl
mov
lcall
cmp
sbb
gs
test
daa
sbbl
sbb
xchg
and
leave
test
sti
shlb
mov
add
pop
lock
xlat
xchg
in
stos
xchg
jp
cmp
jno
lock
int
fcom
ror
mov
jno
lret
shl
stos
lret
inc
jmp
inc
and
fistpl
lcall
fwait
mov
cmp
movsb
dec
cwtl
sbbb
ljmp
dec
or
out
addr16
ja
stos
xchg
sti
pop
notl
cld
cmp
data16
fwait
adc
xchg
cmc
fidivl
add
scas
mov
or
outsb
lahf
push
or
inc
jp
fs
mov
jg
stos
inc
std
mov
jnp
push
shl
inc
mov
imul
int3
xor
xchg
cmpsb
divl
sub
aam
inc
das
enter
nop
movhlps
out
dec
mov
push
pop
bound
mov
movsl
jns
cli
int
dec
jbe
push
xor
pusha
inc
std
sbb
in
aad
push
sti
mov
push
jne
xchg
repnz
shll
xor
arpl
ljmp
adc
adc
fmull
clc
jle
pop
inc
aas
pop
stc
xorl
push
ss
inc
or
loope
lret
or
mov
dec
nop
fsubr
or
mov
jge
and
mov
xchg
cmp
flds
push
fstl
rclb
add
int
cmc
inc
ds
mov
fisttps
sbb
jo
mov
fcoms
in
arpl
xor
loop
mov
inc
cltd
inc
enter
stos
mov
jle
aas
sub
outsb
xor
out
add
or
test
bound
or
push
loopne
in
jle
xor
loopne
and
das
jns
les
sub
pop
cwtl
push
xchg
jns
xor
sti
push
and
imul
aaa
mov
jnp
shlb
jne
xorl
pop
sbb
cltd
jb
pop
fcoms
mov
incb
adc
dec
pop
push
mov
inc
pop
lods
pop
test
jp
into
lods
xor
mov
adc
push
push
rclb
pop
js
mov
mov
and
mov
mov
push
push
xchg
lea
xchg
sub
shl
mov
xor
daa
out
push
faddp
mov
lock
and
mov
pushl
stos
push
inc
sti
aad
jo
jno
sbb
adc
xchg
sarl
aaa
dec
sub
pop
sahf
pop
into
gs
cmp
add
and
jno
mov
xor
mov
push
loope
aas
sub
jle
sbb
scas
aad
out
mov
pusha
and
call
cmp
sub
mov
and
mov
sub
mov
aas
mov
ja
mov
fildl
imul
adc
cli
pop
pop
nop
mov
hlt
add
lea
inc
cld
sbbl
jmp
mov
ficoml
push
popa
xchg
movsb
insb
xchg
daa
or
movsl
or
shl
ljmp
add
ret
fs
jne
cmpsb
xchg
daa
sub
jp
jmp
or
mov
sbb
jle
lods
xchg
ljmp
pop
scas
mov
push
enter
scas
mov
cmc
loope
ja
cmp
faddl
inc
test
bound
rorl
stos
xor
movsl
cmp
lcall
popa
jo
bound
aas
mov
mov
insl
or
jae
out
and
fucom
nop
xor
sub
xor
push
scas
cltd
lods
les
mov
aas
fs
cmp
insb
sbb
movsl
pop
inc
sub
adc
lret
call
stc
sbb
mov
mov
jl
cld
cmp
fldcw
scas
ja
insb
and
sbb
sbbl
cmp
out
mov
mov
sbb
mov
inc
stos
out
push
xchg
enter
sti
cmp
jge
aam
sub
and
popa
es
and
imulb
outsb
add
mov
scas
mov
loope
mov
mov
je
adc
test
fs
and
insl
pop
movsl
outsl
dec
mov
xchg
pop
push
mov
jmp
imul
mov
in
cmp
xchg
rcll
fisubrl
dec
lret
icebp
push
adc
cmp
leave
pop
adc
cmc
nop
mov
cs
cmp
xor
push
push
add
fxch
xlat
out
iret
enter
inc
inc
mov
fdivrl
into
dec
outsb
stc
gs
cmpsb
cld
inc
sub
push
lcall
push
cmpsb
sbb
scas
jnp
jo
mov
mov
cmc
je
sbb
and
mov
iret
js
sub
push
push
cmp
fisubrl
mov
inc
fs
add
fldl
mov
bound
jb
lds
je
adc
pop
cli
stos
lods
inc
loope
cmp
int
push
mov
test
popf
loope
loopne
fldenv
sbb
mov
insl
movsb
hlt
pusha
sbbl
lock
test
data16
mov
test
dec
imul
adc
inc
sbb
cmp
or
push
sbb
cmpsl
cltd
fucom
lods
arpl
push
mov
cmp
outsl
addr16
into
cmp
mov
sti
inc
hlt
repz
mov
out
pop
lcall
jb
and
nop
xor
lret
mov
add
ja
pcmpgtb
adc
fcoml
or
add
and
fs
pop
aaa
or
orl
fstl
push
sub
mov
fimull
xchg
jo
adc
js
inc
outsl
lea
imulb
pop
mov
lret
addl
pop
jle,pn
stos
in
sub
lods
in
adc
sub
sbb
repz
aas
cltd
cmp
or
insb
push
push
push
inc
cld
push
pop
in
sbb
popa
fldenv
push
mov
cwtl
mov
dec
cmp
mov
cmp
dec
push
nop
shll
lret
enter
and
int
pusha
cs
mov
into
add
sub
and
movsl
jno
aaa
cmp
adc
daa
sub
mov
pop
and
lock
dec
mov
push
stos
pop
mov
out
data16
mov
push
in
xor
stos
or
lret
cmpsl
sbb
ljmp
sub
jne
fs
mov
inc
jle
sarl
rcr
addr16
stos
push
call
lahf
mov
or
sub
adcb
std
cmp
lods
call
cmpsl
test
pop
jg
pop
xchg
xorl
lds
push
xchg
push
sahf
inc
into
cmp
mov
push
sahf
jbe
sub
mov
xor
test
fidivrl
mov
mov
out
jg
movsl
ja
jb
and
mov
cli
sbb
sub
push
es
or
xlat
fistps
lcall
adc
push
in
adc
lods
cmpsl
sbb
jnp
jge
js
mov
ret
pop
sub
pop
bound
aas
inc
hlt
lret
xchg
mov
cmp
dec
push
cltd
fistpll
and
int3
mov
fwait
aam
cmp
lock
roll
scas
pop
adc
jge
test
fdivs
test
cmp
stc
pop
adc
and
mov
and
mov
mov
jge
add
cmp
aad
cld
adc
push
mov
negb
mov
fnstcw
lds
fstp
rolb
adc
arpl
es
push
incb
and
mov
lret
sti
dec
outsb
xor
xor
pop
aad
or
dec
fdivrl
mov
xchg
jp
add
cwtl
jl
lahf
adc
mov
mov
cmp
inc
mov
loopne
mov
lods
pop
push
sub
xchg
test
or
sbb
mov
xchg
aaa
and
mov
std
mov
test
pop
jmp
fstpt
pop
or
xchg
out
mov
sahf
mov
add
sbb
orb
dec
mov
nop
jmp
cltd
scas
das
nop
arpl
pop
sbbl
neg
and
xor
ror
mov
aad
lret
jno
das
sub
adc
popf
xchg
mov
sti
xlat
jb
push
enter
lcall
into
and
sub
int
lret
aam
push
cltd
pushl
cs
scas
cwtl
dec
adc
xchg
icebp
or
and
and
jne
sbb
cmp
lea
push
xchg
jmp
out
sbb
jl
arpl
sub
test
les
jne
out
pop
scas
repnz
xor
mov
push
aad
in
rorl
push
mov
sub
popa
mov
pop
push
loop
inc
lahf
pop
mov
inc
push
push
test
paddd
push
push
in
mov
addr16
mov
adc
je
jbe
jo
dec
outsb
andl
xor
sbb
dec
nop
pop
jne
inc
sete
popf
xor
push
idivl
add
mov
std
orb
pop
jns
cltd
adc
jl
sub
out
push
fldenv
inc
sti
xchg
fsubrs
xor
pop
xchg
test
xchg
cltd
mov
adc
jg
jp
jnp
out
out
jmp
mov
mov
pop
cmpsl
cld
ret
jns
stos
mov
std
dec
out
scas
mov
mov
call
dec
jbe
clc
sub
je
aaa
ds
loope
pop
movsl
sub
sbb
mov
fisttps
aaa
lods
and
jmp
add
xchg
jb
out
ret
rolb
sbb
out
mov
mov
mov
xor
sahf
add
lods
adc
jbe
xchg
or
unpckhps
ret
es
imul
cli
mov
jo
das
mov
xchg
andl
ss
dec
add
sub
cmc
arpl
jecxz
pause
dec
inc
xchg
lcall
out
inc
add
xchg
inc
adc
mov
xor
mov
and
inc
sbbl
dec
push
lcall
fwait
dec
or
dec
lock
insb
and
mov
inc
dec
cltd
stos
jae
lahf
mov
push
nop
xchg
sub
add
fsubrs
xor
pop
cwtl
xchg
push
ss
lcall
daa
adc
pop
inc
in
jge
push
sub
xor
loope
pop
mov
pop
mov
cmp
iret
xchg
mov
jnp
adc
daa
pop
xor
call
ret
pop
push
dec
in
xchg
jp
int
or
pop
mov
push
mov
sti
xor
ss
add
pop
enter
shlb
aaa
nop
call
mov
out
cmpsb
insl
orl
and
inc
mov
adc
nop
fisubrs
test
mov
xor
mov
sub
cmp
mov
inc
es
mov
sbb
or
push
enter
add
push
enter
add
push
mov
and
inc
cmp
jo
mov
je
test
lds
cltd
xlat
out
loopne
mov
test
and
pop
sbb
movsb
repnz
sub
js
movsb
repnz
sub
js
es
add
lds
stc
mov
in
outsl
xor
jnp
pop
jecxz
and
cmpb
mov
and
cmp
pop
testb
jo
sahf
inc
xchg
pause
jmp
cmp
pushl
add
and
into
iret
clc
pop
sub
xchg
mov
dec
or
loop
int3
in
insb
loop
out
mov
insb
lock
mov
das
xor
cld
cmp
popa
xchg
rcll
mov
popa
es
dec
lock
xchg
cmp
push
in
mov
push
push
pop
outsl
inc
fptan
fwait
mov
shll
int
jge
mov
leave
xchg
xor
fmull
fwait
and
pop
pop
data16
aam
sbb
push
dec
or
jge
mov
mov
orl
cmp
mov
loopne
inc
sbb
jno
dec
notb
pop
dec
and
js
jb
jb
fcomp
push
arpl
sub
inc
xchg
adc
mov
pusha
sti
cli
jmp
add
cmp
adc
cmpsb
jecxz
ja
addl
jmp
adc
and
jecxz
push
add
sub
in
in
xchg
cwtl
xchg
mov
cld
add
push
dec
adcb
out
mov
mov
push
fsubr
mov
push
adc
pop
mov
cltd
in
sbb
lret
and
mov
inc
stos
push
ss
inc
icebp
xchg
sub
insl
call
dec
lret
pop
adc
lds
pop
jmp
pop
jl
cmpsl
nop
fsubl
sar
dec
jecxz
push
cmp
pop
repz
stc
mov
xor
mov
xchg
sahf
cltd
add
mov
mov
or
add
mov
scas
sbb
push
push
mov
ret
sub
xchg
add
mov
out
jmp
inc
nop
enter
sub
stos
add
out
mov
mov
jg
mov
or
mov
mov
jmp
cmp
in
pop
mov
test
xor
in
rcll
cld
gs
nop
hlt
or
mov
rorb
mov
test
cmp
imul
cs
pop
ret
in
push
jmp
mov
in
sbb
add
cmc
in
sbb
jp
mov
js
xchg
sbb
call
ret
and
pop
gs
inc
cld
and
test
xchg
lea
hlt
call
cwtl
in
sbb
xchg
aas
popf
dec
ret
adc
jmp
sub
or
and
addl
push
incl
lea
cmpsb
insl
roll
loopne
mov
mov
mov
fwait
lods
aad
push
mov
fwait
sub
push
mov
ds
popa
xor
sbb
xchg
inc
ror
cmp
ret
pop
mov
mov
dec
and
xor
mov
cld
jl
shrl
ret
loop
dec
ss
jle
aas
xor
sub
shrb
out
xor
pop
ret
call
lea
icebp
aad
sbb
je
dec
test
xor
mov
xchg
bnd
xchg
lods
cmp
icebp
cld
mov
jno
incb
xchg
xor
and
out
inc
enter
push
mov
pop
add
push
xor
cmc
and
lret
mov
lods
dec
data16
and
js
jge
test
sub
hlt
gs
outsb
jb
outsl
int3
sub
or
mov
outsl
lods
xchg
nop
pop
xlat
data16
in
gs
call
in
push
fsts
lahf
xor
fs
cmp
cli
dec
push
sub
stc
addr16
jb
jb
lea
mov
loope
add
shl
loopne
xchg
sbb
dec
sbb
push
sub
sub
jns
fwait
gs
mov
pop
imul
and
sbb
out
pop
lahf
packsswb
xor
aad
inc
lods
push
flds
rorb
lret
arpl
fdivs
cmp
add
mov
dec
xorl
pop
fdivrl
pop
insb
dec
mov
xchg
push
pop
xor
adc
jb
mov
leave
pop
xchg
es
orl
jnp
and
jbe
jno
and
push
jle
jp
jno
adc
push
popf
mov
pushf
xchg
fucomp
ret
lcall
mov
outsl
lods
lret
inc
cmp
mov
and
jb
test
or
fiadds
dec
lea
fstl
and
sub
adc
scas
pop
mov
inc
insb
add
add
addl
into
cmpl
pop
pop
movl
dec
xor
pop
pop
pop
adc
outsb
mov
mov
jae
sub
cltd
sbb
mov
pop
inc
aad
vunpckhps
sub
jbe
in
push
movsb
icebp
jnp
imul
dec
cmpsl
cmp
sbb
pop
adc
aad
lock
or
imul
lret
addl
xchg
adc
shrb
bound
cmp
pop
cmp
sub
popf
and
fisttpl
aam
jge
xor
jo
imul
mov
rcr
sub
gs
xor
icebp
je
adc
sti
lahf
jmp
adc
pop
or
push
push
das
popf
pop
fdivrs
imul
add
mov
push
cmc
fstps
sbb
addl
push
mov
pop
dec
ficomps
ja
adc
jb
or
push
mov
jbe
jne
aam
mov
imul
divb
int
sti
popa
repnz
or
das
xor
push
xchg
dec
pop
push
cld
dec
fcomi
lea
sbb
outsl
lcall
aaa
bound
xorl
stos
sub
dec
sub
cmp
push
fwait
or
cli
dec
mov
add
pop
mov
dec
and
out
mov
push
daa
int3
loop
inc
mov
test
ret
cmp
fcmovbe
mulb
lds
xor
and
xlat
mov
mov
fildll
push
inc
std
inc
fisubl
ljmp
add
xor
out
repz
loop
xsha256
cmpsb
adc
fldl
ljmp
arpl
xchg
pushl
mov
sbb
push
mov
arpl
xchg
pop
ds
pop
in
stos
adc
xchg
rol
lret
test
push
addps
daa
mov
push
push
sub
fnsave
add
xchg
cld
rcrb
and
push
aaa
mov
pop
fwait
adc
sysexit
sbb
int
dec
jne
mov
add
jmp
dec
cmp
js
es
jle
rolb
or
mov
mov
cmpsb
bound
inc
xlat
mov
ljmp
enter
es
arpl
adc
enter
push
int3
adc
pop
fisttpl
pop
jb
jo
fimull
fdivrp
aas
inc
inc
cmpsl
jge
out
mov
out
mov
add
callw
ja
mov
ljmp
pop
xlat
or
aaa
sub
adc
shlb
orl
jmp
fldcw
cmp
mov
es
scas
loopne
fiadds
pushl
daa
addr16
adc
fnstenv
enter
rcl
subl
lea
pusha
mov
mov
xchg
call
mov
cmc
mov
stos
arpl
push
xor
insl
jnp
jmp
scas
fcoml
je
popa
scas
mov
push
or
dec
pop
out
dec
inc
xlat
ror
in
inc
adc
add
xor
sbb
mov
push
push
or
ss
out
adc
push
push
decb
adc
outsb
imul
shr
aaa
daa
inc
fistps
mov
xchg
mov
xorl
mov
xor
arpl
pop
arpl
mov
mov
les
push
inc
sbb
lods
jb
pop
adc
jmp
push
xor
out
jo
or
stos
test
pop
das
push
imul
adc
jmp
mov
and
mov
xchg
fs
pop
out
sbb
mov
sub
je
jge
jno
xchg
pushf
mov
sub
cmp
fs
adc
adc
aaa
xor
push
int
mov
add
pop
pop
popa
sbb
imul
xchg
outsb
andb
or
pop
mov
push
mov
dec
cld
test
insl
test
nop
and
lahf
test
repnz
inc
jns
les
push
add
outsl
and
pop
jbe
mov
in
lcall
ljmp
sub
sbb
dec
xchg
icebp
psubusw
mov
mov
fsubrl
push
cwtl
dec
push
mov
insl
jle
test
mov
shrl
arpl
pushf
sub
cmp
cmpsl
lcall
cmp
sahf
adc
sbb
ret
test
data16
pop
cli
movsb
fsub
aad
push
and
aaa
in
pop
cmp
loop
and
adc
out
cmp
dec
cs
adc
sarb
xchg
adc
xor
adc
xchg
rorl
adc
xorl
or
xor
or
adc
mov
cmp
pop
les
ret
push
roll
nop
mov
sub
js
jge
out
inc
jl
mov
sarb
orb
cmpsl
push
jmp
test
test
cmp
mov
mov
adc
call
jnp
pop
aaa
testl
cmpsb
add
rcrl
xchg
fcoms
sbb
es
adc
fcomip
pop
dec
sub
fsts
push
ja
scas
mov
popa
inc
lahf
scas
inc
divb
mov
xor
andb
jbe
les
pop
pop
ds
sbb
stos
mov
push
sub
ljmp
leave
fnstenv
aad
cmp
div
lods
push
xorl
jp
scas
or
mov
pushf
xchg
jl
mov
aas
dec
mov
xchg
test
sub
movsb
mov
ret
mov
mov
popa
sbb
xchg
dec
ds
push
mov
jp
dec
mov
xlat
cld
adc
lret
push
and
pop
add
dec
xchg
mov
xorb
popa
imul
or
and
or
xchg
stos
subl
push
cld
lods
add
aaa
mov
fidivs
mov
rolb
adc
mov
ret
fiaddl
adc
push
and
and
mov
cmp
je
xor
pop
jb
mov
mov
ficoms
pusha
push
pop
js
xchg
in
jge
or
push
push
pop
dec
mov
push
jp
fsts
sti
aad
sbb
sub
mov
cmc
mov
jae
out
cmc
xchg
add
adc
out
pusha
clc
fimull
mov
lret
test
mov
inc
loop
mov
inc
pop
adc
ret
icebp
adc
in
mov
out
or
mov
mov
push
cwtl
or
loope
push
movsl
or
or
enter
push
jp
fadds
sub
jb
push
mov
sub
pushf
push
or
add
jl
roll
icebp
icebp
in
enter
inc
and
stc
pop
sti
xor
ljmp
lcall
jae
push
sub
loopne
out
ret
xorl
inc
hlt
imul
hlt
xchg
sub
mov
pop
mov
or
push
adc
das
push
mov
les
cmpsb
xor
pop
imul
divl
or
shlb
cld
ja
test
repnz
jg
jmp
adc
fistl
pop
mov
inc
sbbl
mov
ds
shl
lea
mov
or
aam
inc
in
mov
fldt
mov
sbb
xor
aaa
sub
pop
dec
repz
jp
or
sbb
mov
push
jmp
popf
lds
negl
sahf
fucomip
adc
call
sub
cwtl
mov
stc
and
lea
js
xchg
loop
dec
dec
jmp
jae
cmc
cld
movb
scas
cld
loop
iret
dec
pop
stos
adc
icebp
ret
xor
ret
mov
inc
inc
push
xor
sti
jl
or
arpl
lds
aas
jae
lretw
inc
test
notl
xchg
sahf
mov
fmuls
rol
mov
aaa
pop
mov
mov
push
push
jns
push
add
hlt
shufps
out
popa
stos
shlb
mov
lahf
movsl
add
dec
or
mov
jb
jle
dec
or
dec
mov
aad
shl
imull
lret
hlt
pop
pop
push
mov
xchg
or
sarb
lds
push
add
adc
sbb
cltd
mov
gs
test
nop
lcall
les
test
lret
adc
push
ja
pop
out
mov
dec
xchg
and
push
push
ljmp
shll
sbb
pusha
pop
cmp
lea
jle
nop
mov
movsb
push
mov
mov
jmp
cmp
mov
scas
cmp
addr16
dec
mov
fistpll
and
hlt
in
stos
mov
pop
notb
pop
enter
fiaddl
in
mov
fnstcw
cmpsl
add
jnp
mov
cmp
repz
in
dec
mov
cli
cmp
add
xchg
mov
cmp
movsl
adc
repnz
insl
jmp
or
push
fcoms
dec
clc
mov
mov
pop
pop
in
outsl
push
cwtl
scas
xchg
lret
xchg
sub
scas
mov
xlat
or
dec
dec
and
cmp
mov
scas
mov
mov
cmc
sub
push
ds
sbb
xor
mov
ljmp
add
sub
adc
stos
sahf
cmpsl
pop
stc
xchg
mov
push
sbb
or
int
bound
mov
xchg
push
loop
jmp
popa
mov
mov
or
inc
js
arpl
xchg
fdivr
mov
insl
sub
pop
cmp
jbe
imul
aad
xor
hlt
gs
pop
outsb
inc
xchg
test
lcall
add
mov
pop
mov
sub
pop
xlat
push
pop
inc
popf
sub
sbb
push
push
nop
dec
mov
dec
pop
push
lret
xorl
in
les
stos
mov
add
xchg
pop
mov
aam
push
sarl
xor
add
popa
das
jne,pt
movsl
xchg
xchg
sub
jne
test
stc
aaa
adc
adc
outsl
sbb
dec
mov
fidivrs
pop
loope
adc
jns
es
dec
cmp
fldt
out
add
xchg
ja
sbb
push
in
fists
adc
sti
add
cmpsb
lds
adc
push
lea
fwait
mov
adc
push
bound
mov
adc
mull
add
jmp
bound
xchg
sbb
cmpb
imul
ret
push
test
aaa
sbb
sub
insl
cmpsl
dec
push
push
test
sbb
lds
or
xchg
div
sahf
decl
cld
test
orl
push
lods
aas
mov
imul
jg
fisttpll
inc
jbe
leave
sahf
mov
dec
cmp
inc
sbb
mov
lret
sbb
or
movsl
cmpsb
cli
jo
and
out
pop
cmp
dec
mov
push
test
enter
mov
out
jbe
lret
mov
inc
jnp
push
dec
xor
mov
test
pushf
test
mov
idivb
pop
mov
cltd
cmp
add
push
sub
xor
sbb
cld
inc
pop
leave
das
mov
pop
or
rol
jg
rorl
xchg
cmpsb
or
xchg
subl
aaa
push
jle
mov
dec
pushf
dec
mov
jbe
xor
dec
in
daa
sub
in
mov
jl
lock
adc
xchg
lods
shl
push
cmp
ss
sbb
aas
std
adc
jg
xor
lods
jl
mov
fisubrs
fs
enter
test
mov
ret
sbb
inc
sub
adc
pop
mov
and
lea
sbb
lahf
loope
xchg
pushf
sbb
call
push
jb
cld
xor
jne
push
mov
xor
sub
incb
sbb
xchg
or
test
jbe
mov
or
fcoms
rcll
sub
cmpsb
das
sbb
or
push
mov
mov
mov
lahf
insl
mov
cmp
aam
push
lds
adc
mov
stos
mov
inc
or
and
xchg
ja
mov
shl
clc
and
pop
pavgw
cmp
sub
xlat
adc
mov
clc
jno
lods
cmp
xor
inc
mov
iret
xchg
in
out
fcompl
icebp
imul
test
or
scas
jnp,pt
inc
sub
mov
xor
dec
icebp
cmpsb
frstor
vmread
inc
insb
or
stc
inc
popf
rol
or
ja
inc
dec
gs
mov
ficomps
cmp
fs
mov
mov
repnz
and
push
inc
xor
push
mov
xor
mov
movsl
xor
inc
les
inc
pop
lds
push
movsb
lods
and
xchg
imul
movsl
in
push
fstp
and
sub
or
cmp
shrb
mov
jo
mov
bound
adc
push
scas
jae
push
jmp
cmpsl
inc
xchg
in
dec
lods
jp
inc
jmp
das
sub
lret
popa
mov
jmp
loop
fidivs
dec
jge
xor
cmpsl
rcl
pusha
mov
pop
jecxz
loopne
mov
jmp
cmp
rclb
lea
pop
jo
out
cs
lods
sbb
rcrb
adc
xchg
xchg
xchg
into
mov
sub
xor
lock
test
add
inc
pop
fnsave
ret
xor
adc
mov
ds
cli
cmpsb
loop
sbb
or
inc
jae
pop
sbb
push
mov
movsb
lds
adc
mov
mov
lahf
shl
push
jo
xchg
and
push
mov
shlb
scas
imul
or
inc
ljmp
rol
mov
push
js
pop
popa
add
jg
adc
outsb
mov
or
push
bound
inc
jge
cmp
xor
lcall
addr16
test
xor
or
dec
les
mov
loope
pop
sbb
test
mov
loopne
pusha
cwtl
and
dec
cwtl
mov
and
cs
add
push
jmp
add
adc
data16
aad
std
fcompl
pop
hlt
jb
popa
pop
lods
lds
adc
add
aas
jo
shrb
js
jnp
and
sbb
andb
call
inc
jge
adcl
or
sbb
mov
cmpl
inc
syscall
gs
mov
sub
call
imul
cwtl
notl
loopne
lret
push
pop
pop
rorl
stc
pop
pop
arpl
stc
mov
xor
cli
dec
test
aas
push
dec
jnp
mov
xor
push
inc
and
sub
out
pop
sub
pop
or
mov
nop
xchg
add
iret
xchg
inc
pop
mov
jno
fsubrl
lock
jnp
pop
jb
xor
je
ficomps
orb
pop
xor
adc
xchg
cvttps2pi
push
sub
inc
lds
sti
inc
hlt
mov
gs
arpl
leave
add
push
mov
in
movsl
dec
or
je
scas
adc
jno
xchg
mov
cmovnp
dec
aam
mov
xchg
test
ja
adc
jmp
xchg
sbb
push
into
arpl
jbe
add
in
jb
call
jb
rcrl
out
not
loopne
and
push
and
dec
jecxz
sub
inc
mov
mov
orl
pop
stc
add
sbb
jle
aas
les
or
negl
dec
vunpcklpd
cmp
test
sub
mov
sbb
dec
bound
pop
mov
push
out
push
das
sbb
aas
rorl
cmp
mov
cmp
cs
call
xor
mov
cmp
mov
inc
je
cltd
jbe
xchg
in
cwtl
inc
js
pop
jbe
fists
mov
les
test
out
fwait
xchg
sbbl
push
inc
cld
enter
subb
adc
nop
mov
std
jne
addr16
push
xchg
int
mov
cs
adc
movsl
cmp
testb
lock
ficompl
cmp
mov
fst
xchg
mov
or
lret
subb
xor
enter
push
cmp
mov
lods
lret
int
lcall
xor
pop
and
push
sub
fimuls
xchg
lret
lds
mov
aam
cmpsl
gs
das
ja
mov
lret
mov
fs
sbb
das
mov
add
pop
push
imul
jmp
sbb
and
xor
lods
mov
lahf
lret
in
je
push
lock
adc
xchg
xchg
dec
mov
xlat
jb
adc
lock
enter
mov
in
push
sahf
enter
les
sbb
fs
pop
push
xchg
push
rorl
xor
repnz
dec
out
push
fisttps
pop
aad
jmp
inc
cld
je
add
repnz
adc
and
lahf
sar
xor
bound
mov
outsb
inc
lret
dec
or
pop
fildll
pushf
add
xor
ds
adc
xor
sbb
add
imul
push
je
outsl
pop
inc
rorl
popf
sbb
testb
std
sbb
and
out
pop
mov
and
add
fbstp
aad
mov
adc
pusha
daa
adc
or
and
mov
inc
jl
leave
sub
into
jmp
lds
cmpsb
sub
sahf
insl
jl
mov
ja
bound
mov
cld
pop
jmp
add
add
jl
adc
sahf
int3
shr
push
adc
loopne
adcl
xchg
sub
loop
sbb
dec
ljmp
in
pushf
xchg
repnz
mov
mov
mov
push
in
cli
stos
mov
sub
mov
dec
xor
cmp
xor
outsb
push
pop
pushf
add
adc
sti
cwtl
xchg
cmc
out
jbe
push
or
adc
insb
and
out
mov
imul
icebp
and
std
notl
pusha
bound
push
and
or
pop
push
or
pop
adc
push
jo
ja
or
in
dec
popf
std
mov
in
stc
je
mov
or
in
popa
dec
mov
mov
inc
aad
add
ljmp
add
mov
fdivrs
int
lods
les
stos
fcompl
mov
ljmp
sar
cmc
jl
fisubrl
orb
jb
xlat
cmpb
sti
cmc
rolb
loop
pop
sarb
fdiv
jl
fsubrl
mov
pop
into
pop
and
repz
test
cmp
imul
sbb
jecxz
out
cmpl
sub
test
push
movsl
pushf
lret
sub
mov
movsl
enter
test
mov
jno
pop
mov
and
push
add
aad
daa
pop
insl
pop
imul
arpl
das
mov
nop
inc
push
xlat
jbe
aam
mov
inc
je
or
mov
dec
sti
dec
push
mov
add
je
or
cltd
jb
pop
movb
xchg
lret
mov
loop
fisubrl
call
sub
sbb
dec
xor
dec
std
inc
push
mov
call
jl
fildll
push
addps
push
test
mov
jns
imul
add
mov
sub
pop
sub
push
clc
lea
xchg
xor
adc
sbb
outsl
pop
sahf
insb
cmpsb
jns
mov
mov
add
mov
mov
add
aad
dec
test
shlb
outsl
cltd
stos
imul
int3
jle
into
jne
fbld
addr16
jmp
push
lcall
mov
arpl
push
leave
jmp
push
push
cltd
inc
dec
mov
adc
outsl
jns
out
mov
push
cmp
scas
push
pop
out
fisubs
or
cli
cmp
sar
xlat
std
jae
xchg
xorl
and
mov
mov
adc
inc
pop
pop
xor
ss
inc
mov
mov
dec
nop
add
cmpsl
ja
addr16
mov
xchg
je
and
cwtl
daa
xor
mov
aaa
xor
shrl
sbb
mov
mov
mov
add
jle
negb
inc
cmovae
adcb
xchg
mov
mov
xchg
insl
push
add
add
pop
mov
test
or
inc
jle
in
mov
or
jae
cltd
mov
stc
out
gs
jno
pop
out
test
jnp
outsl
push
jge
aas
jnp
xor
sahf
and
xor
ret
pop
test
std
out
in
add
dec
mov
xor
adc
shrl
jmp
xchg
sub
sub
mov
sub
add
icebp
add
push
fxch
sbb
pop
jnp
test
jae
or
std
cld
sbb
cmpl
ret
or
and
loop
mov
or
jecxz
jns
pop
test
xchg
push
jp
jne
mov
icebp
inc
mov
sbb
mov
in
push
sbb
xchg
sbb
xlat
mov
lcall
cld
imul
adc
mov
push
std
jno
and
ljmp
repz
sub
stos
pop
in
sbb
mov
mov
sahf
movl
add
sbb
and
std
ja
jnp
mov
fmull
adc
test
es
mov
dec
inc
jmp
xor
sti
push
loop
test
lahf
scas
mov
ja
addr16
movsl
aam
pop
sbb
das
dec
pop
dec
mov
iret
push
outsb
dec
push
sahf
push
insb
movsl
out
and
mov
pop
lods
pop
and
mov
mov
xchg
aam
add
test
ss
sar
jns
scas
adc
add
jns
rorb
imul
cli
jge
mov
bound
cmp
fwait
sbb
pop
dec
jl
pusha
xlat
adc
pop
mov
loop
sub
notl
sub
test
adc
out
dec
pop
rcrb
popf
and
sbb
mov
sbb
out
sbb
fldenv
pop
add
push
stc
xchg
mov
cmp
and
out
call
scas
fcmove
leave
cmpsl
fstp
bndldx
negl
pushf
jmp
stos
mov
sub
fsubrl
push
lcall
jge
mov
mov
in
sar
mov
ret
les
fimull
cmp
icebp
cmpsb
pop
ja
popf
or
out
lock
sbb
in
cmp
test
cmp
jne
loop
arpl
cmc
mov
inc
sub
xchg
lods
sarl
and
gs
shlb
dec
cld
lds
cmc
dec
mov
pop
xchg
sti
lahf
movsl
jmp
xchg
sub
jg
push
sbb
mov
pop
dec
cmpsl
ret
adc
fwait
cmp
cmp
sbb
stos
cs
fldl
imul
sahf
push
and
mov
das
dec
daa
inc
insb
clc
addr16
ja
xchg
int3
or
lcall
fmuls
push
or
mov
sub
inc
pop
hlt
jo
test
push
iret
or
test
ja
mov
cli
adc
xchg
adc
arpl
inc
and
repnz
inc
or
int
adc
mov
jb
and
cmp
pop
test
cmp
mov
sbb
int
rcl
cmp
mov
dec
mov
push
mov
mov
xor
inc
jb
iret
jle
xchg
data16
jl
push
mov
lds
popf
rolb
cmp
dec
sub
rorb
xadd
subb
addr16
jle
mov
cmp
out
outsb
cld
xchg
movsl
leave
cmpsl
aas
xchg
loop
push
jb
pop
out
mov
jle
mov
rclb
orb
lret
sbb
loop
shll
push
xor
push
fldcw
aam
xorl
inc
sbb
inc
mov
outsl
pop
aam
addl
inc
mov
iret
cmpsb
adc
popf
jmp
je
stos
aas
bound
sub
aad
lret
pop
pop
push
lahf
mov
ret
pop
fdivs
test
in
mov
inc
cli
xchg
cmp
push
insb
mov
mov
addr16
mov
dec
sti
lock
leave
mov
lea
jp
popa
mov
push
mov
mov
mov
adc
inc
adc
cmpsl
es
pop
je
shrb
arpl
cmp
xchg
add
fiadds
push
mov
sub
sbb
mov
outsb
fstl
repnz
xchg
out
addr16
sahf
leave
test
push
push
push
push
outsb
popf
cmp
inc
ret
dec
inc
insl
repnz
test
insl
lahf
inc
iret
lock
fwait
mov
xorb
jle
dec
mov
outsb
rcll
or
iretw
aaa
add
inc
mov
xchg
push
mov
call
aas
cmp
ja
lods
shl
adc
push
cmpsl
cmp
pop
pop
das
scas
adc
push
and
dec
push
jnp
mov
rorl
mov
roll
test
adc
xchg
dec
adc
mov
push
insb
push
aad
aas
sbb
cmc
adc
flds
add
fimull
test
psrlw
and
into
movsl
dec
cmp
test
sbb
jmp
int3
ret
popa
fs
aad
js
aam
aam
sbb
mov
cld
out
test
sbb
mov
stos
daa
lock
mov
mov
test
push
adc
sub
sub
dec
cld
lods
sbb
sbb
mov
push
pop
inc
scas
inc
sbbb
clc
adc
cli
dec
mov
mov
dec
mov
xchg
dec
rorb
push
sbb
mov
inc
mov
cmc
popa
pop
popl
cmp
fidivrs
xchg
xor
push
add
call
pop
mov
or
cld
lods
xchg
cmp
shlb
fwait
call
sbb
ret
ljmp
mov
cld
cmp
dec
sbb
in
aad
mov
aam
jecxz
mov
add
push
int
repnz
popa
inc
cmpsl
push
fidivl
cmpsl
shl
and
ja
mov
shrl
lods
cltd
dec
loopne
add
dec
es
xor
xchg
iret
xchg
mov
scas
sub
and
push
sbb
fildl
adc
jle
gs
sub
adc
jmp
sti
inc
arpl
or
push
add
inc
push
xor
fdivrl
cmpsb
mov
pop
les
xor
xchg
cmp
and
inc
jne
out
add
dec
mov
out
cli
iret
sahf
into
sub
pop
mov
negb
push
cmp
imul
bound
and
cli
fldt
or
cmpsb
sbbl
rcll
hlt
cmp
pusha
in
mov
dec
mov
mov
jnp
xchg
stc
ds
jle
mov
sub
mov
and
dec
test
jl
pop
jbe
mov
lahf
lods
in
sbb
and
imul
aad
les
xchg
scas
mov
adc
int
sub
jl
stc
divl
icebp
mov
imul
push
jbe
out
jne
mov
sub
push
jle
repz
ret
jns
enter
es
or
mov
out
jge
sbb
mov
push
rcrl
ss
mov
dec
pop
and
clc
pop
mov
mov
adc
daa
dec
fnsave
xchg
jno
icebp
ja
test
bound
cmp
popa
daa
mov
dec
int
pop
outsb
ja
fdivrl
cmp
pop
jo
les
pop
ja
adc
int3
scas
or
push
stos
push
ja
cwtl
das
fimuls
fsubr
aaa
lcall
lret
rolb
adc
push
xchg
sub
leave
mov
ret
dec
or
add
scas
add
sbb
cmp
push
shll
mov
in
mov
xor
xchg
mov
xchg
sub
or
sub
aam
lret
add
clc
jb
pop
inc
daa
mov
in
in
lcall
and
gs
xchg
in
outsl
movsb
dec
lcall
sub
pushf
fldenv
ret
iret
sbb
incb
adc
js
ficompl
mov
cmp
cld
enter
add
aas
jb
cmpsl
add
ds
pop
jne
sbb
bound
push
rolb
lds
scas
shlb
mov
push
push
jb
and
cmp
das
sub
and
cwtl
push
sub
pop
fwait
xchg
aas
or
fistl
pop
pusha
addb
cmp
cwtl
rcl
push
jo
mov
and
out
mov
adcb
and
pop
int
jge
es
fnstenv
mov
es
jne
loop
push
xchg
mov
cmc
cs
test
cmp
pop
inc
outsb
pushf
push
std
fildl
adc
clc
sar
es
lds
test
outsl
daa
xchg
and
xor
xor
add
sbb
cli
and
mov
xor
dec
xchg
xchg
shlb
das
sti
jns
fnstsw
mov
insb
push
sti
imul
cli
dec
sti
addb
xor
xchg
sbb
int
xchg
push
fadds
out
xchg
rorl
popa
push
cli
xor
and
arpl
lret
orb
lock
push
push
imul
pop
movsb
ret
push
daa
push
das
jp
popa
xor
xchg
rcr
movsl
dec
push
test
and
xchg
adc
sub
out
je
xchg
mov
sbbb
mov
sbb
sbb
mov
adc
cld
iret
cmp
dec
mov
mov
clc
pop
fisttpl
and
mov
push
adc
dec
inc
jns
push
sbb
xor
push
aam
pushl
xchg
push
popf
mov
testl
mov
bound
scas
adc
push
insl
jp
xchg
xor
jmp
push
mov
mov
cmc
pop
fcmovb
ret
adc
dec
popf
jae
mov
dec
push
aas
cmp
xchg
pcmpeqw
pop
push
push
xchg
mov
decl
mov
into
lods
cmp
pop
sbb
hlt
push
mov
in
faddp
cltd
bound
leave
sub
adc
movsb
xchg
jns
push
mov
test
test
xlat
rcr
adc
adc
scas
dec
xor
lcall
cli
mov
int3
xlat
sub
rclb
xchg
dec
pop
std
xchg
cmp
jp
out
das
mov
lahf
loope
push
je
push
pop
out
jb
mov
lea
loop
jmp
dec
rcll
fsubs
stc
rcrb
jle
aaa
rorl
out
lods
xchg
cmp
or
cmpsl
scas
jg
pop
mov
mov
lds
xchg
lock
xor
test
jmp
mov
cltd
jnp
and
fmuls
sbb
and
orb
sub
xchg
sbb
xchg
jo
inc
jl
sbb
loopne
cmpsl
loope
xchg
dec
mov
and
sub
adc
loopne
test
push
inc
mov
sbb
icebp
add
subl
clc
icebp
adc
loop
movsl
and
pop
test
rcrb
or
loope
fs
inc
cmpsl
mov
or
in
in
jl
int3
bnd
add
sbb
cmp
push
adc
push
push
dec
push
ret
pusha
sub
lgs
js
or
mov
and
ret
sbb
cmp
xchg
repnz
pop
outsb
movsl
movsb
sub
dec
in
das
adc
into
or
outsb
sub
inc
iret
dec
lret
xor
or
xor
call
cmp
popa
insl
ljmp
clc
andl
fcom
addr16
lahf
inc
push
shl
iret
mov
scas
lods
imul
mul
mov
mov
movb
jp
aam
mov
mov
mov
stos
add
scas
stc
inc
pushl
dec
sbb
pushf
stc
rcll
push
adc
pop
out
xchg
cmpb
and
aad
lods
fucompp
mov
and
leave
movl
dec
outsl
hlt
inc
arpl
mov
cmpsl
lea
cmpsl
sub
cwtl
stos
int3
mov
rcll
pop
mov
cmpb
repz
cmpsl
jecxz
out
adc
xor
fsubs
bound
mov
inc
aaa
in
aam
jecxz
adc
jnp
mov
sbb
cld
xor
jecxz
cltd
mov
setbe
push
add
cmp
xchg
js
sub
sbb
cmp
jne
aaa
push
loop
loope
and
aaa
imul
sub
sbb
add
lahf
icebp
jnp
sahf
cmp
js
xor
shl
adc
cmp
ss
popf
ja
sahf
aam
jae
adc
fwait
imul
stc
xchg
mov
inc
push
out
and
cmc
or
lds
arpl
sbb
das
xor
dec
stos
pop
test
push
mov
mov
lcall
add
das
or
mov
sbb
call
add
pop
adc
test
popf
fdivrs
inc
cwtl
cs
adc
inc
cli
xchg
cmp
inc
cmp
mov
outsl
leave
push
mov
mov
jp
push
mov
push
loop
mov
stos
or
pop
sub
inc
stos
dec
cmp
gs
cmp
enter
cmp
fisubrl
mov
movsl
and
adc
add
push
xchg
leave
loopne
mov
pop
cwtl
orb
fs
dec
and
sbb
out
arpl
sub
xchg
jmp
mov
mov
cmp
mov
dec
xor
adc
xor
lds
cld
xor
add
jle
idivl
das
cmpsb
sub
in
lods
mov
push
cmpsl
movsl
jecxz
jecxz
jns
ror
cmp
jp
mov
xchg
cmp
popf
shl
addr16
lods
ljmp
push
gs
das
je
mov
adc
cli
out
mov
mov
aaa
outsl
movsl
andb
repz
out
mov
push
pop
cmp
mov
lea
xor
xor
push
pop
mov
aaa
xchg
test
pop
lea
inc
xor
std
sahf
jmp
negl
jns
and
loop
and
mov
lods
popf
sub
and
mov
mov
test
leave
xchg
mov
imul
sar
aaa
push
inc
popf
add
push
push
insl
add
mov
cmpl
push
push
popf
adc
adc
mov
sub
inc
mov
jmp
inc
inc
mov
mov
out
lea
pop
jb
jae
sbb
icebp
pop
fwait
add
in
push
push
inc
ja
sbbb
daa
popf
mov
imul
repnz
fcompl
loopne
ss
xorl
lock
mov
jp
jno
shlb
ds
jp
call
mov
orb
loop
dec
or
jbe
lcall
or
repz
les
mov
jmp
fcmovbe
jno
xor
push
mov
jge
add
add
out
xor
int3
cmpsl
jne
pop
mov
in
sbbb
es
cmp
dec
ret
out
mov
dec
cwtl
or
frstor
xchg
ljmp
rcrl
stc
dec
fs
adc
dec
or
cltd
aaa
pop
shlb
stc
clc
pushf
push
inc
psubsb
dec
push
std
les
cli
je
stc
inc
add
jle
mov
je
popa
xchg
push
mov
mov
add
fnstenv
imul
stos
pop
cs
push
xchg
scas
mov
push
hlt
dec
in
and
ljmp
adc
popa
mov
test
lret
xchg
sbb
imul
pop
lock
adc
outsb
das
pop
mov
cmp
cmp
jo
stos
push
andb
jg
icebp
mov
aas
adc
push
add
pop
xchg
push
out
mov
lock
movsb
mov
cmpsb
lahf
pop
popa
add
outsl
jecxz
into
cmp
lcall
push
cli
jmp
mov
lods
add
push
push
aaa
adc
mulb
push
mov
movsb
fadds
stos
push
outsl
mov
stos
xchg
cmpsl
xlat
pop
inc
arpl
jle
out
hlt
mov
xchg
adcl
mov
mov
push
cmp
iret
fucomip
push
daa
or
push
bound
push
loope
test
stos
and
mov
cmp
pop
mov
aam
loopne
cmp
gs
push
sahf
ss
or
aad
add
push
xor
lods
and
xor
aaa
popa
inc
xlat
xor
stos
xchg
mov
shll
mov
ficompl
add
icebp
sub
push
stos
pop
stos
test
xlat
aam
imul
out
arpl
mov
mov
mov
movsl
xchg
mov
push
pusha
inc
in
addr16
cmp
rorb
int
popf
cmp
sub
adc
pop
inc
test
or
in
cmp
sub
mov
sub
jl
or
sbbl
jno
fwait
aad
inc
add
mov
cs
xor
jns
cmpsl
push
xor
mov
jns
pushf
xor
sub
and
jge
mov
ss
scas
mov
lret
pop
addr16
in
fs
in
push
mulb
cmc
push
xlat
das
sbb
scas
insb
push
mov
add
sbb
es
pushf
jmp
call
push
loope
fmull
sarb
shlb
mov
mov
jp
pop
js
aam
lods
sbb
sbb
les
sarl
popa
aaa
cwtl
lods
push
dec
add
or
and
cwtl
or
push
sti
leave
enter
test
scas
ret
jle
pop
aas
dec
adc
cld
out
push
pop
clc
cmp
les
inc
or
pavgb
xchg
ljmp
sub
pop
mov
out
lahf
test
bnd
in
cwtl
bound
jnp
mov
sub
fistps
mov
aaa
fisubrs
xor
push
lcall
cs
adc
sbb
inc
and
movsl
mov
insl
jle
rorb
lds
jb
fldt
ret
int3
iret
sete
dec
movsb
aaa
inc
rorb
push
in
sar
shrl
xchg
push
out
xchg
mov
into
imulb
std
aam
stos
pop
loope
mov
push
sbb
loope
fcoms
es
xchg
sbbl
popa
lods
loope
aaa
movsl
jecxz
push
cs
mov
xchg
and
movsl
jno
fcoml
popf
fimull
xlat
mov
push
cmp
les
stos
imul
pop
mov
repz
ja
adc
addr16
int3
in
loop
xchg
out
int3
adc
test
adc
test
sti
mov
mov
leave
fistps
sub
adc
or
mov
cli
pop
and
leave
jae
mov
mov
call
sbb
orb
sahf
sbb
mov
xchg
out
cmp
aas
xchg
pop
and
popf
dec
movsb
cld
or
mov
mov
cmp
adc
in
xor
ficompl
dec
xchg
hlt
jo
xor
mov
inc
lret
cmpsb
pop
in
adc
push
shrb
xchg
cmpsb
pop
lods
imul
int
nop
xlat
pop
ret
cmp
lea
ss
dec
pusha
cmc
negb
and
ss
mov
push
cltd
mov
push
fs
push
fcoml
or
in
insl
aam
mov
stc
mov
cmpsl
popf
out
add
mov
cmpsl
ja
inc
fiadds
fidivrl
lcall
fabs
lods
pushf
cwtl
ja
xchg
orl
mov
dec
pop
adc
movsl
cmp
jo
sbb
shlb
sub
push
mov
add
sub
or
imul
inc
shrb
xor
mov
stc
push
enter
daa
insb
dec
cli
outsl
sub
fbstp
pop
subl
push
mov
dec
vucomiss
xor
add
jecxz
sbb
aam
hlt
jg
mov
xchg
imul
sbb
mov
aam
aaa
in
enter
mov
mov
and
lret
testb
outsl
xchg
pusha
sbbb
mov
push
sbb
mov
das
addr16
cmp
mov
push
mov
in
insl
shrl
jecxz
or
jl
aam
xor
nop
incl
mov
push
in
ss
pop
pop
fscale
mov
rol
inc
insl
add
in
ss
ljmp
push
pushf
xchg
sahf
dec
js
push
outsl
js
and
jns
cmp
ss
in
in
jae
push
and
or
sbb
sub
in
cmp
xchg
insb
mov
out
mov
dec
gs
mov
enter
fidivrs
fistps
in
adc
xlat
mov
xlat
or
sbb
cmp
mov
xchg
push
xchg
out
insb
mov
fstl
adc
aaa
roll
xor
add
addb
cmpb
mov
dec
les
jmp
xor
jl
mov
daa
mov
inc
xchg
pop
sbb
mov
jg
fistpl
cmpsl
inc
mov
out
push
fs
sub
push
pop
jbe
jle
mov
in
mov
popa
dec
add
in
push
mov
mov
insb
dec
or
pushf
cld
cld
xlat
sub
or
std
aam
sub
dec
stos
push
mov
cli
push
sub
push
mov
jg
inc
jne
popf
ds
fcompl
lds
std
or
push
sbb
cltd
stos
push
addr16
sbb
insb
mov
fnstenv
add
je
inc
sub
pop
addr16
scas
pop
push
mov
xor
sbb
scas
and
rcrl
in
insb
mov
push
loope
pop
aam
push
and
mov
xchg
cmp
mov
cmp
push
imul
xchg
push
ljmp
nop
mov
sbb
nop
mov
bound
adc
and
and
js
int
lods
adc
mov
add
jo
ljmp
data16
add
mov
mov
lcall
or
pop
lods
push
push
mov
mov
xchg
repz
mov
std
movsl
xchg
aas
movsl
pushf
xchg
stos
and
dec
lods
inc
or
ss
jge
and
loopne
xchg
lea
shll
lock
jp
mov
js
stc
inc
jnp
lock
loop
or
cltd
enter
std
mov
div
jae
mov
std
out
test
add
incl
adc
arpl
loopne
xchg
xchg
lock
inc
mov
mov
xchg
jmp
add
rcll
fadd
xchg
jmp
in
loop
push
or
stos
insb
sub
xchg
jp
dec
adc
ficompl
lcall
adc
cmpsb
pop
cmp
cmc
sub
sti
sbb
push
daa
add
aam
pop
fmull
addr16
adc
mov
add
xchg
push
fcomp
enter
shrl
sub
nop
stos
pop
cmp
sbb
lea
jne
sub
add
jmp
sahf
orb
dec
int
cmovbe
sub
add
and
xchg
push
cmp
push
fdivs
sbb
push
orl
jno
in
sbb
mov
ja
pop
xlat
imul
or
leave
out
test
jno
adc
or
sbb
movsl
xchg
sbb
movsl
jge
fdivrs
cmpsl
inc
cmp
push
and
xor
push
enter
inc
fldenv
mov
aam
jne
inc
mov
idiv
pop
jle
sub
icebp
mov
rcll
add
les
pop
cmpsl
ror
nop
lahf
orb
int3
leave
cmp
dec
jne
mov
or
in
add
cmp
jo
xor
sub
inc
repnz
loopne
cmp
sti
dec
cmp
ja
push
loop
dec
aam
add
dec
adc
call
stos
sbb
pop
sub
lahf
into
jno
loopne
mov
into
scas
stc
and
lock
dec
push
cmp
dec
fdivrs
movsb
or
and
shl
sub
insl
in
inc
cld
mov
lods
ret
inc
inc
ds
addr16
je
mov
add
pushf
mov
mov
mov
mov
jmp
mov
enter
adc
push
dec
lahf
int3
icebp
jo
jnp
lcall
push
mov
repnz
cwtl
mov
test
jp
mov
imul
rcll
loope
jbe
rol
mov
or
je
int
mov
or
test
test
mov
xor
pop
test
fbstp
dec
sahf
mov
aam
lods
pop
ja
lods
loopne
push
adc
mov
fisttpl
sbb
scas
addr16
sub
cmp
xchg
nop
jmp
les
loopne
adc
in
mov
cmc
jo
in
sub
add
mov
nop
ret
fsubr
es
mov
stos
push
pop
inc
push
jg
lds
dec
push
shlb
shrb
cltd
sub
sub
push
xor
sub
test
nop
push
mov
xor
jl
adc
test
fcmovb
cmp
mov
mov
cltd
movsb
not
xchg
add
mov
pop
stc
mov
adcb
aad
sub
mov
mov
inc
dec
ljmp
xor
push
imul
test
sbb
fisttpl
dec
test
mov
mov
fcmove
xchg
enter
orb
hlt
movsb
dec
mov
cwtl
add
nop
xor
imul
dec
inc
push
add
fcmovu
sub
or
jle
addl
sahf
push
sub
shrb
into
ja
rcrb
xlat
inc
rcl
cmpb
jmp
cltd
push
andb
jb
insl
dec
mov
insb
adc
fistps
pop
jne
push
mov
mov
sar
pop
mov
mov
jmp
sbb
jno
pop
sub
jle
dec
lods
pop
jnp
notl
jae
mov
fnsave
pop
inc
shlb
clc
push
imul
pop
imul
es
out
fdivs
mov
arpl
in
xchg
std
sbbl
xchg
ficompl
inc
xchg
stos
out
int3
int3
outsb
xor
adc
jmp
xchg
dec
outsl
gs
cs
out
sbb
loop
jecxz
inc
push
xchg
rcll
mov
cli
lcall
insb
aaa
daa
xorb
mov
icebp
nop
int3
mov
xor
js
or
cmp
pusha
sub
aaa
pusha
adc
sub
inc
fcomi
fbstp
add
popa
fidivrl
popa
inc
lock
repz
pop
cmpsl
incb
add
imul
xor
nop
mov
std
sub
push
pop
push
sbb
mov
dec
sbb
mov
adc
xchg
dec
inc
in
mov
xchg
xchg
loopne
gs
out
jo
dec
std
dec
notb
mov
inc
bound
imul
mov
inc
popa
inc
add
fadd
movsl
addr16
and
adc
xchg
loope
js
jmp
cld
popa
fnstenv
xchg
fsubrs
push
push
nop
sbb
sub
insl
and
jecxz
outsb
int3
clc
out
popl
push
push
and
mov
dec
xchg
and
cmp
and
les
push
dec
icebp
lock
push
pop
inc
sub
push
test
jge
dec
push
pop
mov
popf
xchg
mov
jle
pop
and
mov
inc
arpl
hlt
sub
testl
mov
je
cmp
js
xorl
negb
nop
int
sbb
lods
inc
xchg
out
push
cwtl
push
shr
les
jae
xor
scas
je
cs
push
sahf
xor
daa
pop
iret
push
dec
xchg
dec
adc
js
dec
insl
sbb
std
jbe
hlt
daa
in
add
out
mov
mov
arpl
mov
mov
cmp
mov
imul
cmp
fstpl
jb
add
mov
push
xchg
pusha
and
mov
loopne
pop
fldt
jae
sbb
test
pop
fsubrl
cmpsb
enter
js
and
jbe
loope
sbb
add
xchg
loope
push
adc
xchg
ljmp
xchg
adc
mov
jb
enter
cmp
out
inc
xchg
stos
xchg
fisubrs
cmpsl
outsb
testb
sub
push
sub
into
jle
test
pop
dec
push
xor
inc
and
aas
add
inc
test
cld
xchg
orl
push
movsl
xchg
or
push
dec
shl
push
loop
dec
and
jo
movsb
xlat
inc
cwtl
addr16
sahf
shrb
insb
ret
jno
sahf
xlat
adc
adc
out
imul
fists
jnp
mov
imul
fstl
insl
mov
cltd
add
aas
add
cmpsb
or
xor
pop
xchg
in
or
mov
cltd
xchg
outsl
repz
cmp
sub
ds
adc
lods
mov
fsubrs
ds
insl
lahf
add
jge
movsb
inc
push
paddusw
mov
and
mov
sarl
inc
aas
xor
mov
out
push
or
or
sub
lods
jg
adc
mov
out
adc
ss
adcl
scas
xchg
mov
scas
or
pop
mov
pop
lds
lods
lahf
cld
xchg
ret
sub
and
or
in
repz
mov
jg
in
sbb
or
mov
stc
ds
std
mov
mov
pusha
adc
es
fs
stos
inc
fdiv
push
mov
push
mov
bound
xchg
mov
cmp
sbb
aad
xchg
pop
stos
je
xor
shrl
je
jmp
je
add
or
ret
pop
jns
in
mov
mov
sub
or
sub
pop
or
xchg
push
jge
push
inc
js
fs
sbb
pusha
pop
int
cmp
rclb
jp
js
lahf
xor
sub
sbb
xchg
mov
sub
fcmovu
mov
pop
rorl
int3
mov
fisttps
or
in
xor
jb
xor
inc
lahf
cmp
mov
jmp
jbe
push
add
stc
into
not
push
xchg
add
cli
adc
orl
lods
push
mov
rcr
cli
stos
jns
pop
mov
and
inc
jo
add
mov
scas
imul
or
add
xlat
in
call
testl
insb
daa
sbb
cmp
xchg
outsl
push
mov
shrb
jmp
lods
int
icebp
jmp
ss
jns
jne
loope
mov
sub
mov
push
hlt
xlat
jnp
popw
imul
gs
cmpsb
sbb
push
out
mov
jno
xor
mov
ja
adc
pushf
push
inc
xchg
mov
ret
fs
xor
mov
sub
sbb
xor
sub
in
and
push
xor
loope
cmpsb
xchg
or
sbb
std
push
fcoml
mov
lret
adc
arpl
lcall
pop
fisttpll
ja
cmp
pcmpeqb
rorl
ror
push
sbb
addr16
and
sub
mov
clc
aam
push
std
and
pop
add
bound
mov
lds
sub
faddl
pop
rcl
outsb
fidivrl
clc
clc
js
icebp
add
push
mov
or
xchg
cmp
mov
aad
test
xor
das
shrl
inc
fistps
lods
addb
js
jno
cmp
pusha
cmc
add
xchg
cmp
add
sub
loopne
notb
jecxz
xchg
cmc
xchg
xor
stos
add
pusha
pop
js
loop
and
jmp
in
xchg
lea
clc
cmpsb
pop
xrelease
fisubs
movsb
lods
test
fcoml
inc
lahf
xorb
call
dec
inc
push
fstl
int
mov
push
mov
ss
in
inc
movsl
fwait
inc
push
push
scas
or
jno
ja
xor
adc
jo
sub
orl
lods
iret
sbb
adc
push
or
pop
icebp
sbb
xor
frstor
mov
je
fcos
push
sbb
popa
cmc
outsl
adc
hlt
inc
lds
mov
test
push
dec
loopne
aam
jmp
aas
lret
mov
iret
dec
lret
loope
rcl
sbb
gs
fstps
add
mov
test
test
inc
sub
sub
fwait
push
and
lods
call
xor
xchg
insl
add
iret
out
pop
xor
pop
adc
testb
scas
push
mov
fistl
mov
add
scas
fdivl
ret
icebp
vpaddusb
cmp
loop
stos
inc
cld
mov
dec
sarb
decb
ret
test
lods
iret
or
mov
push
das
rcrl
idiv
in
in
add
insb
and
adc
pop
xor
cs
push
lret
and
pop
in
out
adc
push
aad
or
inc
sub
aad
mov
mov
push
stc
shll
daa
xlat
push
ss
arpl
dec
cld
add
and
mov
inc
jb
test
mov
repnz
push
push
gs
test
add
add
pop
and
out
xchg
je
out
or
data16
jbe
xchg
xchg
out
and
ret
xor
jne
jb
outsb
push
shl
arpl
and
cmp
mov
push
push
lret
xchg
std
xchg
jl
in
ljmp
enter
xchg
cmpsl
mov
dec
adc
imul
xor
filds
in
push
pop
call
iret
sbb
out
xor
mov
inc
mov
fisttpll
sahf
repz
inc
lea
jmp
or
addr16
cmp
mov
mov
push
inc
mov
mov
out
adc
int
mov
or
ss
sbb
iret
and
push
jl
pop
inc
mov
xor
rcll
xor
sbb
mov
in
xor
nop
pop
dec
popa
aad
gs
and
push
daa
int
outsb
sti
inc
push
mov
mov
je
clc
inc
js
cmp
popf
cwtl
push
imul
test
out
out
dec
dec
lods
inc
popl
cmp
add
call
dec
mov
rolb
int3
je
xor
sbb
inc
arpl
sahf
repnz
loope
sbb
mov
mov
out
pop
fisubrl
cmpsb
adc
in
shlb
dec
push
cmp
and
sub
adc
pusha
lahf
jp
rolb
movsb
ljmp
in
push
sub
dec
jnp
scas
xchg
out
inc
mov
stc
mov
push
inc
insb
fwait
adc
jmp
fimuls
and
popf
out
mov
push
push
mov
dec
jo
pop
add
mov
js
jno
mov
push
dec
push
enter
sbb
xchg
hlt
cmp
pop
and
mov
das
cmp
fldenv
adc
negb
rcr
sub
int3
fisubl
lcall
lock
test
fs
int3
js
lret
mov
adc
hlt
fstp
nop
insl
xor
inc
dec
and
int3
jne
add
xchg
daa
insl
mov
sbb
sub
push
jbe
ja
js
push
js
outsb
mov
call
test
pop
add
and
dec
inc
or
adc
aaa
or
push
idivl
sub
jge
push
add
xchg
mov
icebp
sub
push
mov
lods
cmp
add
mov
cmpsl
mov
pop
loopne
xchg
pop
mov
xchg
jecxz
test
out
movsl
push
push
mov
sbb
shr
jbe
dec
imul
and
xlat
call
dec
out
loop
out
ret
int3
loop
sub
inc
pop
jg
or
adc
jl
data16
stc
call
loop
inc
jo
pop
ja
xor
aad
nop
xchg
ret
and
fcomi
inc
lods
or
push
mov
sub
lock
leave
lret
leave
dec
mov
sbb
andb
xchg
stc
out
lods
mov
sub
call
les
xchg
neg
push
sti
dec
aam
push
hlt
stc
sarl
sbb
in
cltd
out
sub
pop
out
shll
aad
add
push
push
pop
or
ret
jb
addr16
dec
mov
xor
shlb
and
inc
cmp
sub
ljmp
sbb
outsb
inc
aaa
push
adc
mov
sbb
ret
test
incl
aam
push
sahf
jle
cmp
lock
xor
xchg
sbb
inc
outsb
push
xor
sbb
mov
aad
lods
mov
int3
std
orb
or
push
mov
xchg
orb
and
mov
mov
cmp
pusha
insb
scas
ss
repz
movsl
in
mov
mov
cmp
sub
insl
and
pushf
sarl
imul
mov
aas
pop
push
loope
mov
add
adcb
sub
push
jmp
xchg
adc
lret
mull
fwait
add
ret
inc
pop
rolb
pop
cwtl
test
leave
xor
insb
jp
jbe
push
movsl
aas
ja,pn
in
arpl
xchg
mov
dec
cmp
cmp
mov
xlat
arpl
ja
fs
cmpsb
xchg
cmp
orl
out
add
and
das
xor
jmp
lcall
cmp
mov
mov
dec
push
cmp
nop
mov
cmp
inc
mov
xchg
popf
ljmp
pusha
lcall
and
popa
xor
adc
daa
aaa
nop
mov
movaps
push
pop
stos
lock
mov
mov
aam
sarl
daa
ret
stc
lds
int
sub
fld
push
icebp
divb
hlt
mov
call
push
mov
xchg
sbb
aam
mov
mov
out
xchg
shrl
sbb
add
push
jno
xchg
cmpsb
and
lret
fs
mov
fwait
inc
xchg
lcall
add
neg
add
lcall
int3
mov
pop
jmp
das
insl
cli
jp
mov
lahf
cmpsl
push
and
int3
xor
push
mov
outsl
sub
lret
enter
inc
stc
mov
inc
decl
push
es
js
sub
cltd
pop
dec
fsubrl
xchg
mov
sbb
jne
test
mov
dec
aas
pop
clc
aad
iret
xchg
mov
jle
xor
inc
jp
data16
sbb
pop
or
mov
in
inc
dec
pop
shl
hlt
in
dec
stc
insl
cmp
and
add
mov
cmp
imul
push
test
inc
ss
cmp
test
pop
dec
and
xor
fstps
dec
rol
xor
sbb
push
sbb
sti
add
cmp
fisubrl
mov
jnp
mov
sub
enter
rol
lahf
push
roll
rcll
sbb
stos
jne
lahf
rorb
cltd
dec
enter
inc
adc
sbb
popf
jns
addr16
shrl
mov
add
movsb
mov
xchg
sahf
xor
movsl
scas
mov
xchg
das
int
in
add
test
push
mov
out
lret
mov
push
xor
xchg
fsubrl
lods
ret
sbb
mov
mov
or
dec
mov
sub
mov
jnp
dec
cwtl
add
iret
orb
mov
aaa
es
in
scas
fldcw
jae
push
mov
mov
pop
mov
roll
jae
stos
push
pop
and
rcrb
mov
xor
push
inc
mov
enter
mov
std
mov
xor
adc
ss
shrb
and
jg
mov
lret
adc
dec
incl
int3
xor
inc
jne
test
mov
cmpsb
adc
lds
cltd
mov
lret
fdivl
lods
push
arpl
dec
xchg
push
subb
push
sub
mov
jle
and
loope
arpl
xchg
testb
jmp
cmp
test
pminub
mov
out
cld
pop
out
add
mov
aas
sbb
xchg
ljmp
addr16
adc
sbbl
movl
inc
dec
add
lock
jmp
xor
dec
mov
daa
dec
aam
scas
or
dec
mov
inc
std
std
add
lcall
xor
xchg
in
cmpsb
jne
fistpl
dec
push
sti
fcompl
std
cmp
insl
mov
jmp
mov
in
dec
adc
sub
and
inc
jo
movsl
jl
je
sub
roll
xor
cs
sti
shl
cmpsb
jbe
stos
push
leave
rcl
push
out
ljmp
daa
mul
mov
lea
out
xor
inc
idivl
call
adcb
fistpll
cli
and
iret
movsl
mov
sahf
ss
sbb
stc
mov
out
pop
or
into
jl
mov
movsb
lds
subb
fwait
jmp
push
fcmove
sbb
xchg
mov
std
xor
lret
icebp
lahf
mov
and
leave
mov
shlb
mov
push
mov
sbb
push
adc
pop
jmp
dec
lcall
cld
lods
movsl
cld
cmp
mov
mov
pop
push
fistpll
lods
pop
xor
mov
ftst
aam
xchg
loope
sub
pop
inc
fnsave
sahf
mov
in
sub
jb
lea
test
mov
sub
mov
xchg
mov
lea
out
rcrb
les
cmp
and
je
mov
and
sub
lock
cmp
push
ficomps
pop
mov
push
cmp
and
inc
out
xlat
pop
jmp
cltd
in
loope
mov
dec
add
or
in
outsl
sub
test
jne
mov
sbb
dec
sarb
mov
aad
mov
out
cmpsb
cli
add
adc
into
mov
pushf
mov
add
addl
fdivl
dec
mov
pop
cs
out
mov
adc
xchg
pushf
and
inc
inc
jne
inc
xor
iret
rcl
and
pop
arpl
and
rcll
nop
mov
add
or
sbb
repz
movsl
aam
pop
jmp
or
pop
jns
int3
mov
and
mov
stc
in
scas
test
mov
mov
push
cmc
ss
insl
es
pop
out
push
jmp
pop
mov
leave
adc
cld
cwtl
aad
cmpsb
out
add
mov
ja
icebp
dec
lods
pop
movsl
xor
sbb
orl
lods
mov
subl
pusha
jae
lahf
and
shll
xor
pushf
dec
aaa
xor
pushf
cmp
arpl
pop
je
xchg
sub
or
jb
lds
es
xchg
inc
int
test
hlt
mov
cmp
pop
loopne
xchg
inc
lcall
daa
shrb
mov
jns
repnz
and
xchg
mov
stos
scas
mov
add
lock
lock
mov
pusha
hlt
pop
push
rcll
dec
pop
mov
cmc
cmc
and
pop
fidivrl
das
sub
icebp
sahf
and
stc
sub
mov
insb
and
stc
insb
imul
pushf
push
mov
fstpl
ss
test
inc
mov
inc
inc
stc
xchg
sbb
iret
fisubl
cld
rcll
jbe
fldt
add
out
scas
in
pop
cld
jg
push
and
rolb
and
push
mov
xor
aam
add
sti
movsb
sub
push
punpckldq
out
sbb
aad
mov
add
ficoms
or
lret
adc
xchg
sub
xchg
clc
rep
or
es
int3
mov
jle
leave
lret
je
inc
jb
and
sub
mov
xchg
cmp
insb
fstp
test
jae
ficoml
jmp
and
in
jecxz
and
ficomps
sahf
movsl
xchg
cmc
aaa
dec
cmp
out
and
xor
and
sbb
fnstenv
mov
nop
sub
mov
dec
jg
scas
or
adc
mov
mov
cmpsl
loope
jp
dec
cmp
mov
mov
xor
or
mov
mov
ljmp
ja
jae
in
fwait
sub
cmp
in
inc
or
jbe
mov
adc
xor
dec
xlat
pop
nop
mov
mov
cmpsl
sti
push
daa
lret
jmp
insb
push
fldl
rorb
shlb
mov
mov
jge
or
jp
inc
insb
jecxz
inc
and
pop
inc
testl
push
mov
arpl
in
sti
aad
dec
inc
mov
or
repz
add
popa
mov
push
sbb
repnz
push
push
rorb
inc
jp
jmp
jl
adc
jbe
test
push
add
and
bnd
or
nop
stos
cltd
das
mov
enter
pop
push
jl
pop
push
or
fdiv
jo
out
jmp
pop
shlb
mov
adc
out
mov
mov
xor
leave
sbbl
fiadds
ret
pop
rcl
inc
daa
lds
mov
and
ret
repz
insl
in
test
fdivrp
imul
push
and
cwtl
les
jg
loop
notb
aaa
jo
jo
je
xchg
sbb
lahf
sub
xchg
ss
fwait
nop
js
xchg
aad
fadds
out
xchg
out
pop
mov
push
mov
inc
out
lcall
pusha
sti
out
cmpsl
insl
js
push
scas
shrb
xchg
cld
insl
popf
sbb
inc
sarl
push
movsb
cmp
push
jp
pusha
pop
or
jmp
lds
mov
or
or
shlb
lock
push
mov
in
jmp
stc
fistps
outsb
push
fstpl
mov
mov
inc
or
rcrl
xchg
ret
add
mov
arpl
ret
xchg
daa
or
adc
into
lahf
nopl
mov
dec
fwait
inc
inc
and
xchg
cmp
jge
mov
mov
sub
sbb
sahf
inc
popa
mov
and
insb
in
lret
or
jb
outsl
cs
xchg
jo
test
and
add
lea
mov
sub
into
adc
loopne
cmpsl
stc
add
daa
sub
xchg
push
mov
sbb
pusha
mov
push
mov
stos
lds
and
xor
mov
scas
mov
test
pop
jbe
sbb
subb
sbbb
add
fildll
add
jbe
mov
dec
jecxz
push
and
xchg
mov
loope
fdivrp
adc
int3
rcrl
or
rol
bnd
push
inc
insl
int
dec
and
scas
outsl
les
inc
jl
mov
mov
push
enter
mov
adc
mov
xchg
adcl
lods
jb
xchg
out
add
aam
mov
mov
push
int3
in
leave
addl
movsb
xchg
adc
stos
and
shl
and
stos
jmp
fidivrl
arpl
std
cmc
lea
std
test
push
repnz
fisttps
cmpsb
push
mov
pop
jle
fcomip
xchg
leave
sbb
xor
mov
imul
divb
push
cmp
dec
jecxz
rorb
call
aad
sub
xor
xchg
sbb
jne
mov
jle
fisubrl
sbb
add
and
aam
cmc
mov
cmp
mov
xchg
cmp
xchg
sbb
jb
repz
stc
adc
and
cmpsb
dec
or
sub
test
cmp
mov
xchg
ror
cmp
cmpsb
cltd
sub
inc
sub
inc
cli
xchg
and
and
andb
aas
or
pop
pusha
or
push
cmc
mov
mov
pop
neg
lcall
loop
jecxz
mov
fldenv
dec
std
int3
loop
push
cmp
dec
imul
mov
scas
dec
jbe
in
aad
into
addr16
lret
cli
sbbb
xchg
jle
sub
mov
testl
test
jle
dec
sbb
mov
cmp
mov
mov
xor
pop
jns
sub
xor
out
xor
cmp
insl
pop
xchg
jmp
int
or
lret
mov
add
adc
pop
ds
aas
lea
dec
or
shrb
xchg
scas
or
std
sub
pop
xchg
mov
mov
xchg
lret
mov
cwtl
dec
testb
cmp
cmp
push
mov
clc
stos
add
mov
fwait
imull
lret
xor
addb
repz
cltd
mov
out
pop
inc
push
js
jns
jbe
fstps
insl
inc
jo
jl
jp
or
push
mov
movsl
sti
inc
jnp
mov
mov
jae
movsb
inc
stos
pop
cmp
push
jb
shlb
ret
daa
call
cmp
sub
and
sub
xor
xchg
jbe
in
popf
cli
cmp
push
xchg
inc
xor
cmp
decl
xor
mov
and
mov
cli
lods
sub
add
adc
xor
cmc
cld
pop
mov
dec
ja
loope
dec
leave
mov
enter
sbb
loope
faddl
aas
les
sbb
pop
jmp
insb
push
scas
stos
xchg
fdivs
mov
mov
orb
sbbb
adc
out
mov
mov
pop
mov
pusha
movsl
scas
testb
fisubrl
in
hlt
add
outsb
push
mov
shrb
adc
inc
push
imul
add
shl
test
es
in
es
outsl
popa
call
pop
fcomip
pop
mov
sub
jecxz
push
rcrb
fs
out
xchg
les
inc
loop
loop
adc
mov
add
ljmp
insb
xchg
jns
cltd
outsb
xchg
push
jge
push
jl
gs
js
add
int
xchg
jl
dec
icebp
adc
sbb
lret
xor
gs
fs
fdivrl
jmp
adc
cmpsb
xor
cmp
fistpl
addr16
jp
or
mov
in
arpl
fcoms
and
inc
std
or
xor
cld
arpl
inc
xchg
loopne
bound
pop
add
idivl
aas
popa
inc
push
adc
or
or
in
lods
jmp
and
testb
pop
loop
repnz
inc
xor
insb
mov
add
and
cmp
mov
out
mov
ret
dec
mov
mov
fisttpl
sbb
mov
dec
add
mov
xor
ds
push
jbe
jge
sub
pusha
repnz
and
add
loop
xor
ja
outsl
dec
lret
lret
xchg
cltd
mov
sub
or
mov
into
dec
lds
rcr
push
data16
cmove
in
int
inc
dec
lret
or
lcall
and
test
pop
in
jae
jp
stos
jne
hlt
test
stos
addr16
and
push
cmc
mov
or
sarb
dec
adc
lea
cltd
jns
ljmp
mov
mov
out
mov
lcall
insl
xchg
jp
cwtl
inc
aad
insb
mov
lcall
mov
add
mov
and
fcmovbe
dec
sbb
mov
in
jbe
pop
jbe
iret
jo
adc
insb
cli
addb
mov
cli
and
inc
cmpsl
fsubrl
sub
and
or
pop
shlb
dec
imul
je
push
orl
or
xor
xchg
sti
add
cld
daa
and
xchg
push
das
fsubl
out
sti
and
stos
push
pop
sarl
xchg
pop
shll
fsub
and
dec
or
mov
icebp
clc
jnp
mov
insb
pop
outsb
mov
push
cmp
cld
cmpsb
cmpsb
imul
adc
and
cmp
imul
jno
add
lds
enter
mov
int
mov
lcall
xor
pusha
shl
fidivrl
fs
fwait
adcb
add
cmc
add
cmp
es
test
cmc
xor
aaa
test
sbb
fbstp
mov
pop
jge
ds
push
mov
and
mov
bnd
es
insl
into
pop
cmc
cltd
pop
pop
xchg
stos
cmp
and
jbe
out
bound
and
cld
jge
jo
xchg
jl
adc
inc
sbb
out
testb
inc
loopne
lret
fimuls
add
jg
clc
daa
or
inc
xchg
notb
sti
mov
jmp
fadds
lcall
pop
fstps
or
sarl
out
sbb
or
xor
jns
je
cmpsb
sbb
jno
mov
pop
mov
pop
or
mov
xchg
std
or
into
popl
cmp
and
aad
fisttpll
ret
inc
shl
lret
shll
icebp
das
mov
movlps
pop
jmp
shrb
push
aas
xchg
shll
add
dec
in
lea
jns
loop
push
sub
sti
push
mov
lock
inc
lods
or
mov
xchg
aas
mov
nop
js
outsl
rcr
and
jl
ret
xlat
mov
cmp
sbb
mov
sbb
sahf
mov
pop
xor
lds
and
jl
mov
faddp
sahf
mov
inc
add
and
push
and
arpl
push
and
fsubr
mov
lds
sbb
das
fidivrl
fstl
lret
fs
lock
push
mov
scas
mov
sbb
xchg
mov
xorb
decl
test
test
in
scas
clc
mov
fwait
sub
push
in
int3
sub
fidivrl
pushf
xchg
stos
in
inc
xor
lds
inc
jns
aad
jno
mov
mov
jl
fbstp
jne
loop
xchg
pushf
loope
movsb
sbb
int3
xlat
fdiv
daa
inc
lock
sbb
popa
cmpl
or
jge
pushf
and
and
mov
mov
repz
loope
push
rorb
int
and
js
xor
xchg
mov
add
negl
rcll
mov
inc
xchg
fcomp
cltd
adc
test
pop
pop
stos
jg
jno
mov
hlt
imul
sbb
addr16
xor
mov
add
push
xchg
out
sbb
mul
mov
iret
pop
cwtl
loopne
xchg
fstpl
inc
inc
sub
mov
lock
movsb
les
xchg
mov
jp
int
xchg
adc
in
loop
cmp
push
shlb
call
imul
nop
mov
nop
or
lcall
fwait
xchg
ljmp
push
fwait
scas
outsb
fisttpll
and
jl
psubd
dec
imul
in
sbb
add
mov
and
nop
sbb
or
popf
dec
ja
push
and
inc
sahf
repz
sbb
adc
pop
negb
dec
jbe
xorl
mov
imul
xchg
out
test
fldt
popf
ss
mov
adc
xlat
pop
lock
and
fs
pop
sbb
shr
push
movsb
popw
cs
mov
pop
mov
jle
mov
leave
pop
ja
mov
inc
mov
add
cmp
sbb
push
int3
sub
daa
test
es
mov
sub
js
adc
add
adc
jp
loop
scas
or
inc
lahf
or
or
cmp
mov
add
mov
int3
adc
and
mov
mov
mov
xlat
xchg
arpl
nop
push
mov
dec
fsubl
aaa
insb
fld
push
xor
es
imul
inc
stc
mov
xorb
sub
rol
into
fnstsw
ljmp
rcl
pop
add
xor
sub
lcall
test
stc
adc
es
stos
push
inc
jb
loopne
loop
mov
iret
jo
pop
jl
xor
shll
mov
das
lods
stc
inc
out
or
jbe
and
das
in
mov
mov
loopne
dec
inc
in
flds
popf
ret
pop
sar
push
xchg
mov
aas
dec
and
and
sbb
aaa
loope
cmp
add
dec
cmp
mov
addb
aas
outsb
jmp
mov
inc
mov
add
adc
xchg
movsb
mov
test
adc
mov
out
add
mov
xchg
xor
mov
xchg
pop
or
nop
hlt
xchg
mov
mov
repz
iret
imul
inc
std
mov
dec
or
incl
aam
adc
addb
or
jg
dec
mov
dec
ds
ljmp
sbb
push
sbb
cmp
jle
inc
cmp
xchg
cld
mov
mov
inc
mov
jae
cmp
push
dec
loop
mov
sbb
hlt
jbe
mov
dec
mov
dec
add
jnp
shl
int
jp
lahf
mov
loopne
jge
push
jb
pop
insl
mov
sahf
jge
push
xchg
mov
adc
rol
notb
lods
push
cmp
cmpxchg
xor
js
xchg
gs
mov
sub
jg
es
insl
push
and
aam
dec
push
push
push
push
js
adc
aad
ljmp
sub
sub
call
and
mov
stos
add
add
loope
insl
mov
loop
cmp
cli
mov
mov
add
xchg
cli
mov
mov
adc
xchg
pop
adc
fisubl
lock
pop
inc
push
int3
pushf
fdivrs
push
in
pusha
push
cld
sbb
stos
dec
shlb
jle
cmp
outsb
lock
outsb
jnp
mov
sbb
test
in
repz
in
mov
push
fmuls
sub
cmpsl
cmp
mov
xchg
xor
mov
push
pop
push
mov
lret
enter
xchg
mov
pushf
push
dec
mov
sub
push
fisubrl
push
xchg
cld
mov
sub
mov
and
scas
cmc
sub
insl
mov
fisubl
mov
sarl
js
shll
shrb
int
int3
outsb
mov
repz
xchg
xor
mov
in
ss
xchg
jns
out
mov
sbb
mov
dec
push
lds
std
into
mov
inc
sti
std
test
sub
xor
inc
mov
xor
dec
xchg
ds
jmp
cltd
lahf
pop
adc
movsl
sub
or
ficoml
xlat
shll
pop
mov
insb
pop
ja
ljmp
scas
sbb
push
pop
adc
clc
dec
mov
inc
shlb
stc
cmp
cmp
push
adc
ret
pushf
aaa
sub
call
fdivp
sub
dec
loope
fwait
adc
data16
and
jnp
jle
pop
cmpb
or
pop
mov
xchg
sbb
ret
out
mov
cmp
lret
les
hlt
pop
orb
sub
es
outsb
xor
dec
std
sub
lret
jge
scas
sbb
testl
sub
and
jg
mov
xor
dec
mov
lods
push
xchg
xor
sbb
cwtl
add
push
push
scas
cmp
jmp
aam
sub
ds
pop
test
nop
fistps
cmp
test
and
xchg
xorb
arpl
out
adc
in
sub
add
arpl
ja
jo
pop
and
fimull
push
xor
mov
shl
loop
aas
mov
insb
pop
cltd
mov
daa
test
push
imul
rolb
ror
fadds
mov
fldcw
loopne
push
loop
adc
popa
bound
adc
pushf
push
cmp
stos
outsb
mov
lret
pop
js
es
aas
pop
scas
test
stos
xorl
lods
cmpsl
xlat
xchg
inc
lods
dec
inc
xor
xchg
push
add
test
mov
lret
inc
xchg
out
jle
xor
push
in
outsb
xchg
inc
ret
test
je
sub
adc
mov
mov
mov
arpl
lahf
loopne
js
insb
cmpsl
push
xor
out
or
mov
jnp
aaa
out
pop
xchg
push
pop
inc
lcall
push
push
mov
sub
sub
sti
add
mov
sbb
pop
not
sbb
jnp
sbb
insl
jmp
scas
pop
test
push
cld
icebp
mov
test
mull
xchg
je
aas
xchg
cmp
sub
adcl
mov
stos
std
outsb
xlat
test
inc
mov
in
mov
pop
dec
data16
push
jmp
cmpsb
pusha
push
shlb
mov
xchg
aas
nop
mov
out
jo
stos
mov
lods
jp
adc
and
mov
inc
mov
clc
push
js
bnd
jbe
mov
xor
js
lret
mov
pop
stos
mov
out
or
stos
fisubrl
xor
int
insl
loope
and
fmull
ret
lcall
fcmovne
sub
fs
adc
arpl
outsb
adc
pop
xchg
loop
inc
imul
fadd
cld
ja
jmp
push
lahf
inc
popf
ljmp
and
xor
imul
out
es
cmp
fs
dec
rcll
mov
fisubrl
xor
lcall
dec
test
jo
fdivrl
mov
fs
fldcw
mov
adc
outsb
stos
sbb
outsb
pop
ret
inc
shlb
roll
stc
leave
xor
iret
mov
pushf
daa
test
ja
lahf
jb
lret
test
mov
xchg
jecxz
pusha
es
enter
cmp
or
das
and
fwait
mov
mov
or
lret
lock
cltd
mov
fiadds
data16
jb
mov
xchg
lock
dec
iret
sbb
mov
aad
pusha
inc
mov
cmp
mov
shr
add
xchg
dec
jae
dec
dec
or
and
jp
push
push
push
inc
add
and
sahf
loopne
push
sub
repnz
test
or
int3
stos
push
dec
pusha
mov
sub
and
cmpsl
mov
lahf
scas
ret
in
sub
inc
fs
jmp
ljmp
jl
xor
jle
adc
inc
leave
inc
xchg
scas
jnp
mov
ret
ljmp
fldt
gs
outsl
sbb
sbb
mov
test
clc
sti
lcall
enter
mov
push
and
movsb
jge
popf
xchg
popa
lret
jne
push
xor
mov
lods
pop
leave
scas
and
scas
xor
loop
mov
mov
or
mov
call
dec
adc
pop
in
mov
dec
xchg
mov
pusha
in
adc
into
cli
pop
mov
cmp
xchg
fwait
and
sbbl
nop
das
pop
mov
sbb
divl
shrl
sub
mov
push
mov
scas
pop
std
mov
inc
jae
push
inc
mov
mov
and
lret
je
enter
les
movsl
ret
or
adc
lahf
bound
popa
xor
and
mov
fcompl
cmpsl
and
sbb
sbb
mov
jp
push
mov
push
and
into
cli
fidivs
out
mov
cmp
js
sub
xchg
das
sbb
xlat
jp
dec
inc
shlb
xchg
nop
sbb
leave
mov
push
std
sti
push
sub
xor
xor
xor
dec
and
and
scas
imul
xor
push
push
dec
clc
inc
push
inc
sub
sti
imul
add
cmpsl
mov
aas
sub
addl
jg
mov
adc
stos
sub
std
fstl
jb
movsl
mov
and
fidivs
inc
sub
ja
xchg
test
movsb
insb
popf
and
scas
and
mov
jmp
sbb
cmpsl
and
test
xchg
or
bound
icebp
xorl
jmp
xchg
xchg
loop
xlat
arpl
gs
dec
sti
ljmp
cmpb
jbe
je
insb
fildll
jecxz
mov
fwait
daa
mov
or
popf
aas
test
dec
outsl
inc
cmpsb
fnsave
push
or
shll
push
inc
test
pusha
and
fsubp
push
int
and
dec
incb
lret
xorl
and
jl
mov
popf
sbb
ss
push
cmpl
add
pushw
mov
dec
daa
mov
das
jecxz
inc
or
imul
push
sti
scas
clc
mov
imul
dec
lea
mov
inc
push
dec
dec
xorb
inc
sbb
and
outsl
or
mov
jnp
push
add
sbb
stos
call
pop
gs
dec
mov
xor
scas
lea
les
dec
sahf
inc
fidivrs
pop
jp
adc
xchg
clc
repz
xor
jp
push
es
push
popl
dec
clc
shl
lahf
mov
les
push
leave
mov
or
ljmp
pop
jno
jno
add
pop
xchg
pusha
cmp
pop
jecxz
cmp
sar
lahf
pop
out
daa
mov
and
shrl
pop
add
fwait
lods
mov
xchg
inc
in
pop
enter
dec
xorb
pop
fs
and
pop
mov
dec
shrb
fnsave
outsb
rcr
jmp
insb
push
pop
mov
aam
ret
lcall
popf
mov
and
sbbl
icebp
push
icebp
and
fisubrs
icebp
leave
lcall
outsl
sbb
xor
fcoml
jg
test
push
jecxz
in
jle
inc
inc
jmp
leave
jle
dec
sbb
inc
inc
gs
outsb
cwtl
sarb
jmp
xchg
cmpsb
out
es
les
adc
lock
sar
ret
in
lea
stc
or
ss
fildll
push
dec
mov
stos
pop
cmp
movsl
test
mov
jl
hlt
pushf
lcall
and
lods
xchg
xor
mov
push
sbbl
xchg
insl
jbe
mov
out
in
ljmp
mov
sbb
fcos
imul
mov
jnp
cmp
xlat
pop
jl
outsl
dec
mov
icebp
arpl
add
xchg
jle
mov
inc
jnp
loope
mov
cmp
xchg
loopne
test
inc
and
out
js
inc
xor
test
mov
dec
gs
popa
ret
aam
cmp
dec
xor
stos
push
mov
xchg
jmp
sarb
add
stc
clc
xchg
push
push
push
hlt
fsts
mov
lods
push
cmp
rcrl
pop
dec
rcll
shrb
mov
mov
out
imul
mov
xchg
dec
shlb
mov
jecxz
addb
pop
pop
dec
adc
mov
jle
out
test
and
dec
inc
int
dec
adc
lock
sbb
push
pop
shlb
std
popa
mov
fs
out
das
lds
subl
xor
mov
fisubrl
jno
int3
sub
push
dec
mov
fidivl
pusha
call
mov
sub
lock
mov
pop
ljmp
shrb
and
fwait
rcll
pop
lods
dec
pop
ret
insl
das
pop
test
cmc
sbb
mov
fisttps
loope
into
jmp
repnz
xlat
mov
loopne
push
aam
aad
inc
fs
inc
sub
sub
scas
inc
or
test
add
or
cmp
push
xchg
mov
xor
outsb
cmp
stc
mov
push
aaa
sub
add
popa
shlb
sub
out
xchg
out
push
mov
lcall
xlat
adc
adcl
ja
dec
sbb
add
cltd
inc
mov
and
dec
or
jno
fdivr
jno
out
cmpsb
dec
pop
or
roll
add
push
jge
mov
mov
push
ss
dec
add
fcomp
mov
sahf
push
into
andl
or
fldt
mov
mov
xor
add
mov
xor
scas
cmp
call
mov
hlt
cmp
lahf
fstpl
js
frstor
lds
pushf
int
sbb
pop
mov
push
mov
or
jmp
test
in
adc
sbb
ret
xor
fiadds
sahf
cld
sub
push
call
sbb
mov
xor
scas
jmp
in
mov
add
lea
inc
movsb
pop
repnz
dec
stos
mov
sub
inc
adc
pop
mov
xchg
push
pop
das
mov
fimull
cmp
or
add
bound
js
adcl
roll
and
jo
in
stos
cld
lret
push
pshufw
jle
mov
dec
and
fmulp
outsb
pop
xchg
imul
push
loopne
andb
dec
xor
mov
pop
push
leave
mov
jne
xchg
dec
xor
out
lds
das
sub
fmull
ret
push
mov
cli
jmp
cmpsl
cli
lock
inc
aam
dec
loope
pop
xchg
lods
cmp
sbb
enter
mov
incl
mov
jp
inc
loope
inc
or
repz
scas
add
cmp
cli
cmp
jp
mov
leave
stos
sti
fstpl
data16
sbb
aaa
mov
mov
hlt
push
push
push
fwait
stc
idivb
inc
nop
aam
imul
loop
mov
dec
xchg
out
lods
pushf
mov
test
push
mov
sbb
movsl
inc
adc
lcall
dec
push
cmp
jecxz
sbb
aas
sysexit
jbe
jecxz
or
xchg
pop
sbb
inc
rclb
movsb
jp
lods
int
mov
repnz
dec
mov
addr16
divl
or
test
fcoms
lret
fs
pusha
and
jne
mov
cld
frstor
call
pop
inc
pop
enter
lret
leave
push
cs
mov
fmull
add
lea
or
lods
push
and
add
and
and
into
out
mov
cld
repz
and
stos
fldz
int3
pusha
mov
ror
add
out
xor
lods
mov
push
std
adc
add
dec
out
pop
inc
ja
or
mov
sub
daa
lds
repz
aad
addr16
in
loope
cmp
test
pop
aam
xor
outsb
js
fistl
sbb
add
repnz
fstps
mov
out
mov
cmpsl
pusha
push
insb
negb
lods
cmp
adc
lea
mov
add
out
and
push
mov
jns
lret
xor
lret
mov
ds
push
dec
jo
pop
xchg
push
in
pop
push
cmc
cmc
inc
test
in
stos
mov
shll
rcr
xor
popf
cmp
loopne
js
cmp
cli
lahf
pop
incl
in
shll
sbb
mov
and
sub
in
loop
sbb
adc
and
jno
jb
repnz
pop
mov
cmp
mov
stos
popa
or
sbb
ss
andb
ja
scas
mov
add
jne
sub
stos
and
sbb
mov
popf
mov
push
lcall
mov
mov
mov
shll
pop
imul
repnz
sub
dec
push
inc
test
inc
inc
pop
stos
hlt
idivl
aad
std
in
push
stc
stos
test
insl
addr16
hlt
jne
popf
xor
pop
and
sub
or
stc
sbb
iret
iret
into
sbb
xchg
stos
mov
ss
ss
xchg
pop
sub
stos
inc
jb
jp
xchg
adc
and
out
adc
hlt
and
inc
mov
mov
loop
adc
in
xchg
cs
xor
fwait
les
call
sbb
test
mov
sub
dec
popf
mov
mov
pop
inc
dec
clc
mov
insl
adc
cwtl
or
out
mov
les
jmp
push
sbb
das
push
push
shrl
mov
loope
xchg
xchg
inc
and
jmp
mov
xor
xchg
aad
mov
outsl
popa
mov
shlb
imul
dec
fcomi
sbb
jge
repz
dec
jmp
enter
loope
shlb
pop
xor
cmp
dec
rcl
mov
inc
or
mov
and
das
add
mov
mov
pop
cmc
xor
or
rorl
pop
cmpsl
sub
add
fimull
popl
push
stos
xchg
pop
call
pop
and
inc
rcrl
dec
fsubrl
mov
cmpl
test
push
insl
dec
popa
std
push
sbb
cmpsl
cld
scas
addb
scas
popf
pop
mov
inc
ljmp
cmp
pushf
jl
or
frstor
int3
xchg
sahf
lods
add
cmp
sbb
mov
pop
push
xlat
push
lret
clc
cmp
jge
jle
sbb
lret
xchg
xchg
rcll
cmpsl
adcb
in
dec
in
outsl
mov
jae
nop
mov
xchg
aad
inc
ret
push
xchg
sub
cmp
bswap
lods
push
or
lods
jl
sub
stos
mov
test
push
addb
iret
sbb
inc
mov
repz
inc
sbb
iret
inc
je
movaps
fistpll
out
pop
sub
or
add
addr16
xor
sbb
push
hlt
mov
stos
push
test
add
arpl
incl
push
or
mov
leave
loop
xor
jo
push
mov
je
jecxz
js
xlat
ds
mov
enter
mov
sub
mov
movsl
daa
sbb
jg
mov
push
and
lds
xor
pop
add
jp
push
push
movsb
push
sbb
jb
lahf
adc
into
adc
aam
out
dec
cld
and
sahf
shrb
arpl
ficoms
rclb
shrl
lock
cmp
je
decl
cmp
sub
ljmp
addr16
or
dec
mov
scas
sbb
data16
stos
arpl
xchg
pop
out
cmp
push
jp
scas
pop
icebp
loop
mov
jae
ss
cmp
inc
shr
out
lods
rol
fwait
test
out
dec
adc
sub
xchg
leave
push
sahf
pusha
das
mov
rorb
js
cs
fdivrs
push
sbb
fdivl
ljmp
cmp
xchg
xor
mov
in
sahf
push
movsb
jg
ret
mov
jge
mov
sbb
dec
das
mov
loop
jle
call
fldl
ret
xchg
sub
addr16
clc
aad
dec
and
jnp
xchg
lds
lret
adc
ret
xlat
sub
lret
lea
inc
andb
insb
lods
add
jecxz
xchg
les
or
mov
sub
push
fstl
addl
lds
neg
in
jmp
enter
push
or
insl
push
js
push
push
mov
dec
mov
clc
dec
enter
rolb
adc
scas
out
pop
jb
mov
sub
pop
adc
pop
aas
mov
mov
stos
rorl
pushl
lods
push
dec
and
fxam
jne
fdivrl
je
jns
mov
sbb
repnz
dec
iret
mov
psllq
fs
fidivrs
cmp
or
dec
mov
sti
and
mov
and
and
and
cmp
sti
push
sbb
cmpsw
jl,pn
and
push
dec
in
out
js
jb
outsl
gs
fistpl
in
jns
or
lock
dec
inc
int3
xor
dec
adcl
jo
shrl
movsb
repnz
mov
aaa
pop
mov
out
hlt
test
jle
inc
inc
fwait
push
cltd
add
or
cmp
or
lods
stos
jnp
add
xchg
cmpsb
mov
sub
jp
test
or
aam
dec
scas
dec
cmp
inc
cmpsl
mov
arpl
in
push
mulb
sub
inc
jb
adc
hlt
mov
fiadds
inc
mov
jne
pop
outsl
cmc
push
pusha
aaa
rorl
pop
cld
inc
aas
pop
and
xchg
pop
loope
movsl
jle
xchg
mov
insl
pop
adc
pop
push
push
pop
push
adc
fs
bound
push
stos
cltd
xchg
push
or
int3
test
jnp
loope
push
mov
loopne
stc
sub
rorl
cmp
sbb
inc
adc
shrb
mov
mov
mov
in
sub
shrl
mov
out
test
xor
clc
add
xchg
push
push
mov
sbb
lret
aam
mov
shll
jbe
mov
mov
inc
out
in
cmpsb
pop
out
ja
cwtl
js
int3
dec
shll
push
and
push
jbe
or
dec
xor
sbbb
mov
xor
and
and
or
bound
fiaddl
lds
cs
mov
push
cmp
ss
mov
mov
mull
addr16
sub
filds
and
xlat
fs
lds
lds
inc
xchg
sbb
ficoms
or
sbb
jmp
outsl
cmpl
push
stos
in
loop
adc
les
xor
inc
enter
push
popa
or
sahf
pushf
dec
adc
cmp
std
cmp
xchg
shlb
cli
push
movsb
inc
pop
mov
xchg
int
les
lock
scas
lret
out
adc
aam
mov
in
inc
jle
ds
push
xor
scas
sbb
stos
cmc
icebp
push
jle
bnd
fst
stos
cmp
cmp
subb
aad
shrb
xor
and
add
enter
nop
fs
in
dec
mull
gs
popa
adc
lock
sub
jb
xchg
in
out
mov
dec
jge
mov
dec
jge
scas
pop
dec
pop
outsb
in
scas
mov
shll
push
subl
mov
inc
xchg
pop
fldl
cmpsl
les
pop
cli
mov
je
inc
and
xor
shrl
stos
dec
xchg
stos
xchg
idivb
mov
adc
sub
or
add
mov
adc
nop
push
cmp
adc
shlb
ja
push
inc
mov
add
mov
mov
or
iret
pop
mov
adc
adc
stos
jl
cmp
outsl
xor
enter
xchg
ds
or
fmuls
mov
adc
in
fldl
loope
mov
xchg
and
sti
rclb
fstl
push
xchg
cmpsb
jp
cmp
add
imul
les
aas
push
lods
or
jmp
popa
pop
adc
imul
adc
inc
pop
pop
lret
push
repz
cld
pop
cmp
dec
cmp
pop
test
test
push
cli
jb
data16
lods
ficompl
pop
mov
lcall
push
add
insb
fisubl
iret
scas
lcall
cld
jmp
mov
cmp
xchg
sbb
sub
push
push
ljmp
jl
pop
lcall
pusha
arpl
in
mov
cmp
cmpsb
xor
mov
mov
pop
mov
mov
mov
mov
lahf
mov
sub
xchg
xor
jmp
sub
lds
cmp
adc
add
cmp
imul
add
xchg
add
fwait
andb
fs
xor
and
jae
mov
movsl
lahf
mov
ret
adc
sub
mov
jmp
imul
daa
imul
xchg
jne
into
dec
cmp
xor
dec
test
and
xchg
mov
icebp
adc
loop
pop
addr16
inc
cmp
sbb
testl
and
mov
andb
jmp
dec
ficompl
push
xchg
pop
into
sbb
mov
xor
leave
aad
ds
xchg
sub
mov
and
insb
pop
fs
mov
pop
cmpsl
lods
imul
jmp
inc
out
xor
lret
loope
jbe
popa
cli
push
mov
das
fildl
fnstsw
or
ficoms
lcall
jl
mov
out
pop
int3
movsb
call
xchg
mov
xor
mov
std
or
adc
leave
std
and
mov
mov
adc
dec
cmp
lcall
pop
data16
mov
daa
ja
mov
pop
jae
xchg
int3
xchg
test
lds
jmp
and
int3
add
out
mov
loop
test
mov
shll
loope
mov
shll
loope
mov
shll
loope
mov
shll
loope
mov
shll
loope
mov
shll
loope
mov
shll
loope
mov
shll
loope
mov
shll
out
notb
jl
mov
mov
mov
int3
negw
mov
mov
add
mov
adc
sub
sti
push
dec
mov
and
shlb
adc
insb
jb
cmp
push
aas
or
out
icebp
pop
je
push
pop
jmp
sub
push
stos
pop
adcl
jbe
ret
out
inc
mov
jbe
push
ret
fcom
add
std
decb
mov
nop
or
cmpsl
fiadds
pop
mov
push
pop
xchg
xchg
dec
inc
cs
pop
pop
in
pop
jae
or
ljmp
pop
and
ljmp
adc
pop
add
add
js
and
and
inc
stos
inc
sbb
lock
fstps
ja
pop
cmpb
inc
dec
cmp
lret
sbb
lret
test
jecxz
gs
mov
fsubrs
lods
adc
pushf
jno
push
pop
ds
inc
jmp
int3
cmp
nop
xchg
sarb
out
js
xorb
xorw
movsb
lcall
insb
stos
clc
xor
adc
lods
or
xor
imul
push
ljmp
sbb
xchg
imul
pop
adc
rolb
xchg
xor
test
jmp
add
fstps
in
adc
xor
scas
pop
lret
sti
cltd
jo
push
mov
mov
jae
rclb
and
mov
mov
add
mov
cmp
dec
hlt
cmp
repnz
lret
mov
sti
ds
mov
jle
inc
and
push
out
std
sbb
and
inc
and
adc
push
push
xchg
imul
add
xor
cli
lcall
out
jno
add
jnp
jl
popf
fists
cmp
sti
mov
inc
mov
xor
ja
testb
dec
inc
js
jmp
stos
call
stos
cmp
pop
xor
rolb
enter
dec
cmpsl
fsubr
mov
add
rorb
addr16
xchg
lret
sub
lret
adc
inc
mov
fdivs
mov
cmpsl
pop
adc
cmp
push
jno
int3
pop
ljmp
push
dec
sub
outsb
insl
xchg
adc
iret
pop
in
xchg
lock
pop
inc
ljmp
mov
cld
repz
jnp
dec
aad
clc
mov
testl
cmpsl
es
sbb
cmp
sbb
xchg
lahf
inc
iret
pop
sub
push
ficompl
mov
test
lods
xchg
xor
sahf
divb
and
jae
pop
imul
cmp
imul
ljmp
xor
div
and
jmp
loope
fldt
pop
das
sub
xchg
fsubr
sub
adc
rcll
das
in
adc
in
mov
jg
push
xor
cmp
sti
ja
jmp
das
mov
movsl
cmp
jnp
push
pop
xor
sub
lcall
add
pop
aas
inc
insb
adc
xchg
ss
mov
jg
cld
jno
test
xchg
pop
stc
sbb
pusha
push
adc
jo
testl
in
test
sbb
xchg
jnp
enter
cmp
testb
rorb
or
fisubl
rcll
sarb
outsl
loop
fildll
push
stc
push
mov
or
pop
popa
xchg
inc
stos
push
cli
dec
sub
pop
sub
inc
dec
fwait
push
jecxz
jne
sbb
ss
test
enter
add
bound
sahf
outsb
lods
test
aas
mov
inc
sbb
jle
pop
mov
or
test
ficomps
idivb
aas
out
adcl
sbb
jl
or
adc
jmp
sub
sub
mov
jno
push
in
mov
cmp
add
arpl
clc
cmp
mov
out
fildll
mov
inc
jnp
flds
and
cmp
jns
push
inc
mov
push
sbb
aad
mov
mov
jge
shll
or
loop
cmc
pop
xor
xchg
inc
mov
cmpsl
outsb
xchg
pop
pop
pop
xor
push
inc
negb
out
mov
cmp
jb
or
ret
flds
or
inc
loop
lret
lahf
mov
or
pop
aaa
ret
roll
bound
dec
and
in
mov
xor
sub
movsb
xchg
xchg
aaa
in
out
jnp
outsl
mov
mov
das
das
sahf
push
pop
dec
mov
mov
and
inc
in
gs
or
cmp
xchg
fdivrp
xchg
pop
insb
cmp
xor
sbbl
mov
ja
test
aas
xor
cmp
fistps
mov
cmp
insb
xchg
lret
fstl
stos
lcall
mov
fyl2x
cltd
or
sbb
pushf
xchg
out
adc
movsl
test
in
mov
sbb
xchg
inc
jb
sub
imul
add
sarl
test
xor
cmp
or
call
dec
push
xchg
lret
adc
jmp
cmp
ret
rcl
test
xor
mov
cmp
scas
cld
sub
aaa
sbb
fsubp
incb
in
and
fsubrp
inc
fs
loop
movl
imul
decl
xor
adc
mov
xchg
push
mov
cmp
in
into
jge
sbb
add
das
cmp
test
in
xchg
mov
push
loop
push
push
test
inc
add
out
lahf
ret
sub
xor
cmovo
shll
jne
insb
in
xchg
push
ja
aas
cmc
mov
shll
dec
xchg
sti
cmc
push
jne
jbe
subb
roll
hlt
sar
inc
xchg
cmpsl
sbb
jb
ljmp
addr16
sub
inc
pusha
inc
sub
insb
xor
daa
jne
mov
push
movsl
stc
repz
hlt
inc
incl
aad
xchg
fs
cbtw
pop
rcll
mov
mov
cmpsb
mov
dec
xchg
out
jg
lcall
clc
or
out
outsb
pop
cmp
enter
lret
jns
mov
push
pop
daa
or
lods
pop
push
mov
mov
fmull
jp
fistpll
scas
sbb
in
andb
dec
ds
pop
rorb
orl
pop
test
incb
and
mov
fstpt
adc
adc
mov
jo
stc
or
dec
stos
ret
add
in
dec
iret
fcomi
xlat
jle
add
sbb
outsb
shll
scas
mov
int
add
test
cmc
fcmovb
pop
cmp
addr16
lahf
imul
pusha
pop
inc
dec
ret
out
cmp
sbb
sbb
inc
inc
imul
push
je
mov
cmp
stos
xor
ds
jmp
push
cmp
pop
rorb
jb
xchg
mov
pop
inc
mov
mov
jecxz
push
in
mov
adc
movsl
fs
in
pusha
and
sub
pop
mov
movsb
pop
cwtl
mov
cmpsl
cmp
pop
and
ljmp
ds
pop
pop
rcll
int
mov
cmpsb
mov
fstl
cwtl
inc
mov
sahf
inc
sbb
xor
fsubrs
iret
popf
int
insb
or
adc
bound
adc
sti
sbb
jae
fistps
fidivrs
idivl
mov
or
add
xchg
dec
jp
lods
cld
pop
in
out
push
xor
popf
bound
mov
data16
popa
push
xlat
imul
sbb
gs
or
lret
pop
push
fidivrs
jnp
sarl
push
dec
fiaddl
fs
mov
fwait
call
test
pop
add
add
cmc
xor
pop
sub
xlat
xchg
insb
and
gs
cwtl
cwtl
clc
pop
cwtl
push
mov
fidivrl
pop
cmp
test
push
inc
jo
lock
adc
xchg
nop
outsl
and
xor
shll
pop
adc
or
inc
fcmovnu
dec
repnz
sahf
fwait
data16
pop
mov
sarb
cs
pop
pop
lcall
sbb
jmp
xor
pop
subb
sub
fsubr
pop
je
sub
rcrl
sbb
push
dec
dec
sub
les
and
lahf
push
sub
fidivl
and
or
xor
pop
repnz
in
sub
xchg
jle
inc
push
test
outsl
ret
in
dec
sbb
movsl
dec
scas
sub
scas
int
inc
mov
sbb
or
xchg
cmp
cltd
push
mov
adc
test
int
call
ja
cmp
push
xchg
push
idivl
daa
jecxz
mov
ljmp
ljmp
sub
fadds
jb
push
sbb
sub
es
test
cs
les
mov
fcoms
ja
popf
dec
push
pusha
or
mov
inc
insl
jae
in
xlat
rorl
pop
sbb
or
fistpll
movsl
or
inc
mov
adc
cs
ficomps
jg
pop
xlat
inc
inc
xchg
push
daa
pop
push
adcl
xchg
dec
add
xorb
dec
daa
adc
and
icebp
movsb
cmp
inc
push
or
cwtl
mov
ss
mov
sbb
scas
mov
aad
xchg
cmp
sub
dec
dec
hlt
or
call
cmp
xchg
fiaddl
pusha
ja
out
xchg
lret
lods
xrelease
pop
inc
dec
idivb
mov
mov
je
aad
and
push
cmp
dec
xchg
fistpl
scas
mov
call
outsl
jbe
arpl
loopne
cmp
testl
cmp
sbb
jge
lea
dec
mov
sbb
dec
or
pusha
mov
push
mov
and
leave
sbb
retw
sarl
dec
or
cld
ret
lahf
in
mov
lea
pop
pop
dec
and
dec
repnz
sub
outsl
inc
push
leave
inc
mov
test
sub
aaa
fiadds
jg
inc
mov
sarl
adc
mov
sbb
and
and
repz
fs
mov
popf
repz
xlat
push
dec
sbb
cmp
jbe
jmp
addr16
rolb
and
mov
xor
jmp
xchg
leave
add
ret
inc
pop
lret
lahf
mov
mov
push
sbb
sbb
push
out
repnz
sbb
xor
shlb
dec
rorb
jo
rcrl
aad
cmpsl
jb
test
inc
pop
or
pop
xchg
adc
leave
out
fwait
sub
dec
das
inc
cmp
scas
arpl
jecxz
icebp
pop
fistl
cmp
ljmp
and
out
or
mov
xlat
lock
gs
ja
in
fnstcw
xor
and
add
jb
sub
fisttpll
or
ds
testb
addl
jnp
inc
seta
sub
pop
lret
out
pop
setae
aaa
mov
insl
les
add
aaa
or
sbb
lds
add
mov
dec
cld
lea
push
arpl
lret
rorb
pop
adc
xchg
pop
inc
mov
out
testl
dec
pop
adc
xorl
aad
fistl
push
call
cmp
pop
xchg
addr16
xchg
adcl
pushf
cmp
add
adc
and
in
jo
test
jne
mov
mov
cmp
and
adc
popf
dec
inc
dec
outsl
fisttps
cmp
pop
xchg
jge
mov
enter
std
loopne
inc
inc
inc
mov
lret
lcall
mov
test
pop
aam
push
cmp
test
dec
dec
flds
push
xchg
data16
popf
or
pop
sub
in
xor
addb
faddl
add
sbb
iret
xchg
pop
lret
popa
addr16
cmp
jns
test
cmp
xor
lcall
ljmp
mov
hlt
mov
je
mov
lods
adc
push
nop
adc
aas
lcall
test
cmpsl
mov
rorl
sub
ds
jl
and
test
xchg
sub
cmpsb
pop
test
mull
cwtl
ret
es
cli
mov
xchg
es
xchg
gs
inc
add
xchg
std
pop
pop
jb
insl
cmpsb
popa
push
test
dec
adc
sbb
rolb
xchg
sub
test
in
sar
mov
mov
outsb
fidivrs
cmp
add
and
xchg
cmp
jp
cs
adc
or
jnp
fwait
push
adc
xchg
mul
popf
out
dec
jg
ss
cmp
and
repnz
sbbl
jmp
mov
out
lcall
and
dec
adc
pop
iret
pop
push
adc
push
or
divl
add
fnsave
mov
push
outsl
aas
inc
add
jp,pn
out
jb
addr16
or
insl
dec
rclb
imul
pop
inc
mov
mov
or
pop
jmp
mov
out
mov
stc
cmp
dec
shll
mov
xchg
lds
cmp
mov
jne
clc
test
dec
pop
rolb
sahf
in
outsb
out
int3
sbb
out
lret
fidivrs
outsb
cmp
push
pushf
sub
xchg
mov
outsb
lret
ret
jnp
and
adc
int
adc
mov
push
sbb
mov
xchg
hlt
sub
pushf
ret
lock
cmp
std
and
jno
call
xchg
out
xchg
outsb
cmpb
sahf
dec
xchg
dec
jmp
test
push
inc
clc
pop
negl
fisttpll
jb
jecxz
stos
outsl
push
jb
add
shrl
out
mov
push
aaa
and
push
dec
and
les
movsl
or
mov
popl
mov
mov
mov
add
cmp
mov
enter
stc
cmp
shll
shrb
mov
push
adc
out
dec
sub
or
or
inc
ds
std
insl
mov
pop
mov
adc
mov
jge
cmp
shlb
sbb
std
push
push
fnsave
ficoml
mov
mov
pop
mov
mov
or
and
pop
repz
dec
fsubrl
popa
lds
xchg
push
inc
xor
xchg
es
pop
shrb
fists
imul
jb
les
pop
dec
mov
les
mov
rorb
xor
pusha
xchg
out
cs
jbe
inc
add
sbb
pop
xchg
add
fmul
insb
dec
ss
arpl
dec
mov
iret
out
es
mov
aaa
in
pop
stos
das
xor
movsb
add
inc
dec
popf
es
push
fwait
mov
cmpsb
push
push
dec
adc
push
sti
cs
xchg
fstps
outsb
sbb
xor
dec
push
insl
pop
lcall
xor
les
pop
lcall
scas
lret
adc
xchg
daa
pop
insb
stos
adc
jae
loope
sub
test
in
cltd
cmp
test
movsb
add
cmp
adc
adc
sbb
mov
jle
mov
lock
push
sub
sbb
sbbl
icebp
pop
rep
pusha
jg
xchg
das
and
cmpsb
cli
sbb
jle
cmp
imul
add
ss
push
xor
shll
stos
mov
sbb
cli
cmp
dec
sub
xor
je
das
adc
fistl
mov
scas
addr16
into
cmpsl
push
fidivrl
orb
inc
mov
movsw
jno
adc
pop
mov
test
mov
add
adc
mov
out
jmp
call
adc
mov
outsl
cmp
cmp
jmp
pop
mov
daa
xchg
cwtl
mov
jne
xchg
sbb
mov
enter
adc
in
stos
aas
stos
into
ljmp
dec
and
inc
sbb
xchg
jbe
sbb
das
inc
sub
imul
sbb
ds
mov
xchg
xchg
xor
fdivrs
rorb
repnz
xor
test
ds
nop
leave
mov
pop
lods
push
dec
xchg
iret
push
setp
mov
xchg
lea
inc
sbb
gs
les
or
push
jl
insb
fcoml
xlat
test
add
add
fst
xchg
icebp
push
cmp
pop
inc
mov
cmp
inc
or
fsubrp
shrb
sub
in
imul
lock
int
sub
mov
adcb
jecxz
jo
rol
fwait
inc
add
push
das
test
adc
idivl
jns
jns
push
insb
scas
iret
jmp
mov
out
mov
xchg
inc
cwtl
sbbb
cld
sahf
stos
mov
mov
cmpsl
jae
and
push
fs
addr16
xchg
mov
vpmulhw
mov
mov
test
inc
mov
cmpsb
cmpsb
jle
mov
and
mov
inc
fwait
adc
cli
mov
mov
pop
push
sti
test
daa
in
push
ljmp
aam
faddl
fiaddl
pop
mov
inc
in
sbb
cmpb
xchg
sbb
mov
cltd
sbb
or
mov
out
cmp
jge
test
jp
adc
or
clc
jecxz
sub
mov
push
data16
jnp
dec
add
ds
adc
outsl
adc
mov
xor
addr16
cmpsl
in
out
adc
adc
xor
inc
sahf
fdivr
adc
and
and
mov
jo
sub
sti
mov
pop
outsb
inc
loope
ja
adc
adc
push
shrb
push
jl
push
sbb
nopl
test
test
out
or
pop
mov
xchg
fsts
bound
dec
pop
stos
out
sbb
insb
cwtl
in
adc
movsb
out
mov
popw
andl
mov
arpl
sbb
jae
or
and
out
addr16
mov
sar
addr16
inc
fisubrs
or
test
dec
xchg
ficomps
add
int3
sub
jns
mov
add
mov
sarl
or
push
cmp
cmp
dec
mov
jp
jle
jmp
add
mov
add
lods
insl
mov
mov
scas
mov
jmp
jl
push
leave
int3
sub
dec
mov
lods
aaa
outsb
adc
dec
pop
dec
pop
or
test
mov
pop
inc
insb
and
cmpsl
cli
adc
jno
and
dec
mov
and
sbb
sub
jg
adc
xlat
incb
in
fstpt
or
fdivr
shl
adc
sahf
inc
ss
xor
and
lcall
dec
call
and
mov
scas
aam
out
mov
stc
mov
dec
inc
in
out
out
daa
mov
lds
cltd
scas
push
arpl
dec
xchg
enter
das
adc
mov
imul
shll
xor
push
mov
scas
inc
xor
ljmp
jbe
add
test
mov
clc
mov
notl
xchg
cmp
mov
push
pop
xchg
aas
pusha
shrb
or
or
push
rcrb
sub
lret
pop
int
push
bound
and
mov
and
mov
js
mov
int
lahf
jb
sub
add
xor
push
mov
sub
push
inc
scas
dec
push
ljmp
pop
call
jnp
xlat
sub
add
pop
push
and
mov
pop
xlat
adc
fs
push
dec
push
clc
mov
int
gs
pop
mov
es
xor
data16
add
mov
js
dec
and
cmpsl
test
dec
cmp
dec
add
sub
pop
push
push
rolb
mov
pop
and
mov
jecxz
dec
pop
xchg
jmp
in
adc
push
adc
aaa
orb
stc
pushf
lahf
and
xchg
push
leave
jnp
out
pop
out
pop
and
les
mov
inc
ret
add
pop
dec
stos
mov
fsubrl
mov
push
ret
cmc
shlb
pop
icebp
jl
aam
ss
or
mov
jg
mov
pop
stos
lea
aas
je
addr16
sub
pop
popf
add
or
ret
adc
aam
insb
fidivl
push
mov
or
mov
rcr
sub
xchg
xchg
hlt
adc
add
fwait
ss
inc
clc
loope
adc
jge
cmp
negb
jmp
dec
mov
sar
jle
loopne
ret
imul
mov
insb
or
mov
lods
int3
add
loop
outsl
inc
in
xchg
dec
and
punpckhdq
jecxz
in
pop
sub
fisubl
in
pop
out
xchg
add
sti
outsl
mov
xor
xchg
or
scas
mov
adc
fdivr
iret
test
inc
mov
pop
ds
filds
fstpl
cmp
cmpb
sub
adc
stos
lcall
clc
mov
inc
xchg
add
adc
sub
jge
jb
lahf
aas
mov
je
and
das
cmp
xor
repnz
movsl
icebp
cmp
outsb
push
dec
loope
rcrb
jne
loop
mov
mov
int
in
xchg
xchg
ficoms
adc
or
scas
xor
ja
clc
fnstenv
add
ss
mov
iret
lret
fsubrp
pop
push
sub
pop
mov
mov
cmpb
mov
sbb
cmp
lret
add
push
out
pop
push
scas
fmuls
hlt
test
and
ret
xchg
jbe
dec
insl
lcall
aad
inc
shrl
jae
sbb
pop
or
inc
cmc
cs
add
in
sbb
lods
out
sbb
cwtl
mov
inc
test
xchg
testb
aaa
sti
mov
fwait
test
xchg
dec
arpl
movsl
mov
xchg
out
test
sahf
sbb
push
sar
push
inc
sbb
adc
xchg
push
adc
int3
inc
pop
std
sbb
jg
imul
pop
aas
dec
mov
push
jnp
pop
rcrb
sbb
fwait
mov
push
ds
jmp
pusha
jg
cli
push
cmc
in
jmp
das
or
fsubr
fsubrl
xchg
addps
imul
sub
mov
jne
aam
or
loop
mov
jo
out
stc
adc
jae
xchg
test
push
add
jo
jg
sbb
ja
in
mov
cmp
inc
fimull
lds
jge
jp
shlb
movl
sbb
adc
mov
addl
xchg
sti
lea
ja
scas
loop
mov
cwtl
add
clc
test
sahf
lret
cmpl
sub
clc
push
xchg
ljmp
sarb
filds
cmc
adc
cmp
push
out
out
popa
imul
imul
pop
shl
rcrl
pop
ret
rcrl
mov
ret
enter
dec
xchg
cmp
test
mov
pop
scas
push
movd
lods
fimull
test
add
js
push
or
jae
int
mov
sbb
mov
sub
cmc
pop
mov
cmc
pop
mov
lds
imul
sub
mov
jp
jmp
jnp
pop
aam
roll
sbb
imul
lea
cltd
jmp
ret
rcrb
shrb
pop
flds
insb
or
popf
add
movsb
adc
jp
movsl
dec
xorl
cmc
fimull
iret
adc
sti
push
movsb
mov
cld
cmpsl
dec
jecxz
xor
lds
xchg
sahf
xchg
std
jp
sbb
mov
jl
xchg
inc
int3
jbe
inc
fstl
jl
and
cmp
and
test
jmp
push
loop
pop
jecxz
je
sbb
lea
movsl
mov
int3
out
or
cmp
es
into
in
or
sub
jge
push
mov
outsl
and
pushf
bnd
imul
mov
or
inc
cld
xchg
adc
outsb
cmp
mov
addr16
js
mov
cmpb
push
push
and
shll
dec
xchg
mov
inc
popf
xor
and
jge
cmpsl
or
ja
int
lahf
dec
xor
jle
cmp
push
scas
mov
and
leave
xchg
mov
xchg
adc
lods
jne
or
add
pop
push
and
add
ss
lret
mov
inc
call
and
in
cmp
sahf
or
into
je
xchg
dec
cmp
push
and
adc
into
xor
jmp
xlat
push
ret
ss
and
cwtl
pusha
pop
adc
insb
mov
gs
pusha
inc
mov
ret
movsl
dec
out
mov
outsl
mov
and
hlt
std
pop
mov
mov
inc
inc
insl
lret
lcall
push
movsl
inc
cli
xlat
lcall
adc
push
cwtl
dec
call
push
inc
mov
cmpsl
pushf
or
xchg
lock
sti
in
mov
stos
lds
cmp
xor
lcall
imul
mov
jecxz
and
hlt
repz
push
jnp
outsl
pop
cs
xchg
inc
stos
sbb
add
xlat
and
sub
push
outsl
xor
sub
ret
mov
or
daa
jo
shlb
imul
mov
push
push
xor
outsl
aas
push
in
aad
push
sti
mov
push
mov
xor
sahf
stos
aam
add
rorb
ffree
stos
mov
lea
push
outsl
rcrb
lret
mov
bound
adc
xlat
and
mov
sbb
cmpsl
mov
cmp
push
sbb
sub
int
mov
inc
pusha
mov
cmp
jmp
mov
sbb
cld
ficoml
loopne
jp
dec
inc
push
mov
imul
in
add
jbe
mov
jo
inc
pop
fstpl
inc
test
jno
movsl
sub
imul
mov
into
cmp
inc
repnz
sbb
adc
addb
fsubp
fcoms
and
sub
test
or
es
dec
xchg
rcrl
loope
enter
or
xchg
or
stos
and
fcom
or
pop
jae
push
jae
in
xchg
popa
inc
add
jg
fiadds
hlt
mov
sar
pop
insl
cli
ss
cmpsl
rcrl
pop
movl
sti
xor
adc
cs
sbb
lods
in
in
xchg
fsubrs
xchg
push
jecxz
std
add
mov
and
fwait
push
repnz
jno
fisubrl
dec
cli
jge
pop
adc
test
xor
inc
scas
mov
fstps
ror
sub
xor
sarl
fs
xchg
adcb
daa
daa
jne
lcall
ds
xchg
mov
cmp
ficomps
pop
andl
ss
fs
sub
stos
scas
pop
xchg
in
test
push
jl
dec
push
mov
es
cmp
mov
pop
sar
push
stc
loop
push
insl
aas
fabs
pop
addr16
inc
and
aam
inc
jge
jle
or
outsb
dec
outsb
mov
adcb
das
sbb
loop
mov
xchg
ret
imul
inc
push
lret
mov
jge
in
out
outsl
sti
adc
push
lret
sub
sbb
inc
jae
testb
and
icebp
dec
pushf
ret
xchg
ss
outsb
mov
xor
xchg
push
or
das
sub
fiaddl
jne
pop
rol
or
inc
stc
pop
icebp
jmp
xor
jle
push
xor
dec
sbbl
xor
cld
mov
out
jbe
fsubrl
cltd
push
clc
inc
xchg
mov
jecxz
cmpsl
sub
jmp
xchg
ret
lea
sub
aam
mov
pop
outsb
pop
cmp
xchg
pusha
sar
nop
and
pop
adcl
stc
decb
testb
call
cwtl
sub
mov
xor
jecxz
sbb
pop
sub
inc
or
mov
mov
and
push
cmpsb
or
out
xchg
cmp
in
hlt
shr
and
sbb
adc
test
lock
mov
loopne
fucomi
loop
sbb
add
jle
out
push
arpl
jmp
xchg
gs
scas
lcall
or
aas
pushf
test
pop
test
sbb
sub
dec
outsb
arpl
adc
jle
shlb
cld
outsb
jae
and
sahf
ljmp
enter
or
ficoms
in
stc
dec
subb
add
mov
and
xor
cbtw
sbb
mov
imul
cltd
popf
and
std
pusha
mov
hlt
std
xchg
xor
sbb
mov
or
inc
add
push
pop
call
loop
into
sbb
mov
sbb
je
arpl
lods
imul
fisttpl
inc
int3
or
pop
cmp
std
adc
dec
rorb
mov
dec
cmovo
push
add
xor
jecxz
pushf
xor
repz
mov
push
xchg
mov
cli
sbb
shrb
sbb
xchg
cltd
mov
sub
xchg
adc
loope
aam
mov
add
mov
xor
cmp
call
sahf
popl
mov
xchg
rcrb
pop
push
or
sbb
push
xchg
cmpsl
push
rorb
lret
insl
xchg
fistps
mov
movsb
inc
cld
pop
lret
or
xor
push
or
shlb
enter
outsl
add
ret
pop
inc
jno
test
and
fisubl
xlat
stos
es
inc
dec
pop
push
add
xor
jno
das
sbbb
dec
pop
insl
popf
inc
imul
push
arpl
lret
sub
mov
push
ss
mov
ljmp
pop
pop
enter
cmp
dec
mov
shrb
xchg
imul
pshufw
adc
rcll
sti
xor
mov
aad
jo
push
or
mov
test
sbb
add
or
xchg
add
aam
shl
adc
or
addl
push
inc
sub
lods
orl
push
jl
jmp
cwtl
add
je
leave
push
int
dec
fs
stc
roll
sub
xchg
fs
shll
pop
arpl
sbbb
push
xchg
imul
in
repnz
jb
mov
mov
and
ljmp
sub
rorl
pop
pop
jge
cmp
imul
mov
pop
mov
outsb
dec
clc
mov
adc
les
mov
mov
xchg
lock
cmpsl
mov
xor
cwtl
add
and
cltd
lret
in
ror
js
xchg
shll
cmp
cs
incb
xchg
mov
data16
dec
inc
mov
leave
and
lret
push
jb
inc
mov
adc
shl
mov
or
ret
loopne
cmc
inc
stos
out
es
adc
pop
cmp
aaa
mov
loopne
fnstenv
fwait
sbb
pop
inc
jmp
jl
jecxz
cmp
push
or
sahf
popf
cmp
cltd
mov
push
fwait
xchg
adcl
shrb
jmp
leave
xchg
sub
xorl
jne
sahf
test
mov
and
jo
ss
out
out
test
cli
fmuls
insb
cmp
sbb
xchg
dec
cld
aam
pop
movntps
int3
cli
ja
sbb
cmp
adc
or
call
xlat
mov
cltd
jbe
test
scas
mov
adc
sbb
sbb
clc
in
lods
pop
repnz
outsl
jle
popl
in
mov
pop
in
or
stc
inc
out
addl
repnz
js
sub
or
xchg
stos
dec
mov
imull
aad
lret
pop
sbb
sbb
cmp
and
clc
jg
adc
lea
or
fistpll
pop
or
xchg
xchg
cmpsb
loopne
repnz
bound
add
or
sbb
sti
pop
fsubrs
adc
inc
add
mov
mov
xor
jl
repz
xor
movb
lret
dec
fldenv
inc
mov
scas
mov
mov
ljmp
push
icebp
jbe
sub
sbb
jne
mov
test
jl
lock
dec
xchg
arpl
pop
or
push
push
inc
es
fs
rolb
rolb
test
sbb
pop
shll
mov
andl
std
pushf
aaa
push
add
inc
adc
xchg
push
and
imulb
cli
sahf
loopne
add
or
and
jmp
pop
mov
test
test
ja
jle
ss
sub
mov
pop
mov
or
jge
pop
push
adc
imul
sahf
adc
xchg
push
ret
rolb
cmpsl
or
sahf
fimuls
loope
div
pop
je
lcall
call
adc
pop
add
pop
and
push
dec
xchg
cli
stos
dec
add
mov
mov
dec
xchg
jo
rcll
std
xor
jmp
ficoms
jg
adc
dec
pushf
or
cmp
mov
or
lea
jnp
out
pop
lds
mov
in
stos
fcompl
fsub
cs
sahf
cmpsl
stc
int
pushf
push
jecxz
push
push
push
or
cmpsb
mov
aad
sub
jae
jg
pop
push
jle
pop
addr16
mov
adc
xor
imul
aas
cld
es
leave
and
push
pusha
sahf
xor
leave
js
fcmovnu
sub
xchg
fistpl
cwtl
aas
xchg
jl
cmc
mov
inc
pop
or
nop
hlt
leave
std
movntq
icebp
inc
xchg
mov
hlt
mov
cmp
imul
or
pmulhuw
mov
in
ljmp
push
lret
add
dec
cs
add
dec
pop
mov
or
decl
sub
mov
sbb
lods
push
stc
pop
leave
outsl
mov
in
push
mov
or
dec
out
sbb
mov
push
pop
pop
inc
pop
out
fwait
and
push
mov
scas
frstor
sbb
xor
mov
jbe
xor
mov
pop
push
leave
jle
imul
cmp
push
mov
sbb
xor
push
dec
xchg
adc
pusha
sbb
xor
xor
push
xor
orb
test
pop
std
out
pop
cli
pop
pushf
rcll
aas
andb
sbb
into
cmp
stos
test
hlt
sub
sbb
push
adc
stos
loopne
out
jnp
bound
mov
leave
and
icebp
roll
fwait
dec
mov
std
inc
fcomp
lock
fmuls
jns
out
rcr
dec
xor
push
pop
call
stos
pushf
ja
sbb
or
nop
scas
aaa
test
les
sbb
sbb
js
pop
movsl
cmp
daa
jno
scas
pop
addl
nop
movsb
or
aam
repz
sub
inc
test
fisttpll
and
out
andb
jae
mov
mov
cmp
mov
in
mov
sbb
xlat
lcall
icebp
pop
rorb
aaa
sub
das
xor
sbb
out
test
push
jg
xor
xchg
pop
gs
push
shr
cwtl
sub
add
jno
cli
into
dec
cmp
sub
xchg
test
sub
sbb
test
imul
pop
cmp
nop
leave
sbb
adc
push
je
pop
mov
mull
add
loope
pop
mov
bound
ds
mov
xorl
aas
dec
incl
pop
int3
pop
pusha
push
pop
in
ljmp
add
aaa
mov
lcall
jmp
sbb
mov
mull
push
xchg
out
sbb
fidivs
inc
sub
cs
outsl
inc
pop
and
fwait
and
add
roll
clc
mov
movb
mov
cmpsl
pop
inc
mull
shrb
xchg
gs
push
inc
push
mov
lret
or
js
addr16
imul
mov
jl
icebp
fucomi
inc
bound
dec
out
jg
xchg
mov
cmpsb
std
shr
imul
leave
mov
cwtl
add
lea
mov
xchg
xor
mov
sbb
loope
pop
jae
jbe
sub
mov
add
stc
sahf
dec
test
xor
sub
iret
adc
mov
out
in
sbb
sub
xorb
andb
sbb
ret
cld
push
mov
sub
or
imul
add
dec
jp
in
rolb
shr
xchg
sub
inc
in
fimull
js
rol
fwait
sbb
imul
fldenv
mov
xorb
cmp
mov
mov
clc
jl
ds
mov
scas
sti
cmp
out
push
xlat
dec
outsl
pop
sbb
test
outsb
clc
jae
cmp
cmp
inc
mov
jno
lret
and
pop
adc
test
mov
mov
xor
das
js
je
repz
aaa
testl
into
cli
lret
aaa
outsb
imul
push
mov
sub
std
lret
aam
and
mov
inc
aas
jg
sbb
or
lock
adc
shll
call
inc
mov
mov
shll
and
cmp
jecxz
push
fmuls
test
adc
pop
mov
cmp
push
pop
jge
icebp
mov
das
popa
dec
fsubl
aam
out
das
dec
add
mov
cmc
fcomi
mov
adcb
or
cltd
pushl
sbb
es
js
out
pushf
pushf
xchg
neg
imul
sbb
xchg
xor
iret
sbb
loopne
les
in
dec
std
dec
mov
xor
add
push
lahf
leave
dec
movsb
sbb
dec
mov
and
mov
andl
jo
mov
add
and
jae
cltd
outsb
dec
or
mov
movsl
ret
or
in
pop
orb
stc
les
lahf
das
and
mov
push
idivl
mov
test
stos
repnz
cltd
jge
cld
fildl
fwait
and
jp
jge
jo
mov
cmpsl
arpl
mov
push
xor
push
push
push
mov
clc
adc
aas
int3
jle
add
rcrl
sbb
lea
das
stos
idivl
bound
or
inc
test
xchg
add
pop
fsubrl
std
cmpsb
fsubrl
xor
pmaxsw
test
jle
jge
incb
and
mov
sbb
das
push
enter
jmp
xchg
xor
dec
pop
mov
je
push
cmp
sbb
push
rorl
and
movsl
mov
pop
int3
dec
jae
std
out
jg
push
xchg
into
sahf
dec
lret
pop
outsb
aad
or
sbb
testb
push
ret
aas
roll
push
add
add
mov
lcall
xor
cwtl
test
push
push
icebp
out
mov
and
mov
clc
outsb
cmp
fiaddl
in
xchg
mov
shrl
int
popa
lret
jbe
sub
inc
sbb
ss
xor
nop
xchg
push
inc
cmp
rcl
out
pop
cmpsl
addr16
fwait
push
sub
sarb
es
or
je
mov
bound
sbb
add
lret
xchg
and
pop
es
cmc
jne
pop
pop
ljmp
jle
mov
cmp
mov
stos
inc
movsb
mov
adc
mov
mov
in
and
mov
popf
test
push
arpl
add
xorl
movsl
push
inc
mov
pop
stos
dec
fcomp
aad
ret
fstpl
dec
icebp
aaa
mov
addl
sbb
aam
push
in
in
cmc
mov
aaa
mov
jg
and
xchg
mov
adc
dec
cmp
clc
shll
sub
imul
rcll
andb
xor
testb
enter
push
adc
pop
data16
stos
add
negl
repnz
and
outsb
adc
jno
filds
arpl
cld
cmp
push
inc
mov
inc
jns
dec
jae
pop
inc
sub
ss
inc
rolb
jne
arpl
jne
pop
scas
pop
mov
or
cwtl
add
test
shr
cld
push
mov
pop
xchg
in
in
fstpl
shll
jg
push
dec
insb
loopne
or
leave
xchg
in
ss
mov
in
repnz
mov
cmp
push
dec
sbb
sbb
inc
fldcw
lods
jecxz
dec
in
mov
xchg
sbb
mov
push
scas
call
cmpsl
xchg
sti
jae
lea
in
mov
mulb
loop
sub
mov
push
cmp
xchg
sahf
test
or
lahf
sahf
aas
testb
popf
or
xchg
lods
jae
pop
cltd
scas
in
and
cli
mov
xchg
push
xchg
bound
repnz
hlt
ss
movsb
pop
shrl
push
inc
scas
pop
or
or
sub
int3
dec
imul
lret
fwait
addb
add
push
sahf
jnp
cmpl
movsl
sub
jl
inc
mov
rorl
fwait
shrl
leave
in
subb
cmpsl
cmp
xchg
dec
sahf
dec
clc
jmp
push
scas
dec
adc
stc
ret
jo
mov
in
loopne
outsl
iret
movsb
push
jecxz
xor
or
stos
xor
and
mov
sbb
adc
loop
or
jmp
mov
xchg
mov
mov
std
lcall
fcmove
xchg
xchg
add
dec
add
and
enter
mov
mov
dec
ret
jno
mov
fs
sbb
mov
ret
xchg
cmp
mov
fisubl
shlb
xor
jb
movsl
xorl
mov
sbb
sub
xlat
aaa
ds
jnp
or
jmp
push
adc
lcall
in
push
aam
pop
jp
mov
fdivrs
sbb
hlt
movsb
mov
sbb
xchg
pop
mov
mov
jle
adc
add
cli
fdivrs
push
lods
popf
sub
repnz
int3
nop
or
xor
mov
mov
adc
ds
out
inc
lcall
movsb
pop
and
popl
jl
cld
in
mov
lret
sbb
jbe
aas
inc
dec
pushl
sbb
adc
stos
cmp
jl
mov
jg
loop
cwtl
sub
in
jecxz
lcall
cmp
mov
and
xchg
xchg
push
lock
fnsave
xor
hlt
imul
jne
cmpsl
cmp
scas
punpckldq
cmc
fisubrs
xchg
add
and
call
mov
ja
jge
inc
and
xchg
flds
lret
xor
lahf
sbb
xor
lock
or
mov
jae
mov
lret
push
or
inc
jb
sbb
push
out
cmp
shrb
loop
popa
inc
sbb
jmp
aaa
aad
jb
push
fwait
call
std
pop
ret
dec
push
mov
xor
cmc
add
inc
mov
inc
test
imull
std
out
jbe
cs
or
sbb
jns
mov
repz
xor
inc
jge
push
add
fildll
call
imul
inc
jae
repz
ljmp
or
xorb
push
jae
loope
js
mov
dec
dec
add
mov
xorl
mov
mov
mov
cli
xor
int3
pushf
mov
inc
gs
cmc
and
sbb
enter
jecxz
ljmp
push
cwtl
mov
mov
mov
mov
sub
ficompl
mov
mov
mov
cmp
nop
sbb
or
push
and
and
jg
inc
std
add
jge
lret
and
jae
xor
sub
arpl
and
mov
popf
jb
in
insb
mov
clc
inc
xor
or
pop
ret
jne
dec
out
add
adc
xor
mov
out
test
pop
das
aas
daa
test
push
fdivrl
daa
or
int
sbb
lret
add
leave
popf
addr16
cmp
out
scas
aas
aam
into
mov
scas
sbb
add
pop
jne
cmp
sbb
fiaddl
outsl
and
cmpsb
jns
adc
push
stos
adcb
mov
repz
jbe
leave
mov
add
lahf
mov
ds
or
scas
xor
outsb
shlb
orb
ja
loop,pt
inc
xchg
xchg
sti
or
int3
add
add
shl
push
outsl
aad
xchg
sub
adc
rorb
inc
repnz
mov
dec
push
mov
push
imul
fsub
sub
or
dec
and
xchg
xor
xor
cld
sub
sub
jne
dec
fdivs
inc
push
mov
test
stos
push
push
sbb
xchg
movsb
pusha
mov
aaa
xchg
shlb
and
in
hlt
and
lods
stos
cmp
into
mov
mov
cs
pop
sbb
push
or
mov
int3
mov
dec
jecxz
nop
pop
cmc
cmc
xchg
add
xor
int3
jp
xchg
inc
mov
inc
xchg
xlat
sub
fimuls
leave
inc
fstp
inc
aaa
pop
push
out
scas
ficoms
mov
test
aad
addl
mov
pop
in
adc
add
adc
jae
out
push
in
or
xor
test
je
repnz
xchg
mov
jbe
add
std
or
jnp
icebp
mov
faddl
loopne
xchg
inc
or
jbe
stos
in
cmpsb
or
lcall
int
pushf
out
or
std
jmp
push
out
enter
subb
pop
mov
jecxz
lret
inc
adc
decb
mov
mov
mov
and
sarl
in
test
daa
out
sti
subl
push
mov
sbb
repz
cmp
leave
push
call
xchg
hlt
mov
jmp
add
push
sub
add
lret
dec
fdiv
cltd
pop
sahf
insl
xlat
jg
pop
inc
adc
xchg
insl
mov
addb
mov
orb
dec
gs
in
xchg
scas
push
push
mov
popa
add
rcll
outsl
mov
jecxz
mov
or
adc
cltd
and
sub
cmp
fs
and
xchg
pop
xlat
stc
dec
aad
bound
je
insl
mov
jne
inc
mov
sub
inc
xor
js
and
dec
mov
push
adc
fs
jne
mov
cmp
lret
lods
push
jo
jne
adc
push
in
lods
pop
outsl
out
sub
mov
or
mov
pop
xor
xchg
into
repnz
add
pusha
pop
push
mov
into
nop
nop
or
xorb
ljmp
mov
lock
jns
xchg
cwtl
test
mov
sbb
aad
ljmp
mov
lret
sti
repz
je
fisttps
cmp
nop
pop
movsb
xor
and
into
fstps
cmp
imul
pop
clc
pop
add
push
outsb
aam
imulb
scas
sub
in
movsl
and
inc
mov
mov
aas
mov
xor
push
movsl
jmp
xor
ret
jge
or
fdivrp
ja
arpl
fcoml
pop
nop
dec
notb
jmp
push
inc
pop
and
dec
dec
mov
ja
fbld
test
movsl
bound
cmp
mov
andl
adc
js
das
push
and
xlat
add
lahf
lret
insl
js
xchg
dec
fmulp
cmp
jle
ljmp
and
xor
addl
pop
jne
shr
ja
mov
pop
lcall
xchg
fistpll
xlat
int
add
aad
xchg
out
and
movsb
jno
cli
pop
jb
fldl
jl
rcr
dec
rcrl
scas
sbb
mov
mov
cmp
fdivs
out
stos
xor
sub
cmp
movb
adc
sbb
or
dec
icebp
mov
popa
mov
sbb
cmp
test
jl
adcb
test
sahf
add
mov
push
jmp
inc
jae
mov
inc
test
mov
mov
rclb
stos
lcall
mov
lods
sub
push
lret
daa
out
xor
and
data16
xchg
pop
rorl
test
lret
push
sub
shlb
xor
test
imul
sub
cwtl
fwait
popa
adcl
js
shlb
call
loope
adc
out
jg
movsb
jb
in
fsubrs
repnz
add
lock
push
lcall
xchg
pop
pop
fcompl
cmp
es
clc
xchg
cmc
test
adc
pop
ficoms
inc
imul
enter
push
movsl
xchg
push
jnp
mov
mov
mov
and
lds
adc
pop
testb
push
add
addr16
movsb
test
movsb
jmp
pop
test
cmp
fmuls
out
shr
mov
in
mov
sub
pop
mov
push
ljmp
xchg
xchg
ss
inc
mov
xlat
paddsw
add
xchg
sbb
xor
int
fiaddl
lock
cld
in
inc
push
jle
or
nop
xchg
orb
shll
shlb
push
mov
fsubr
xor
push
aas
add
mov
mov
ss
push
or
pop
jae
sub
pop
mov
fcoms
sbb
push
sbb
cltd
dec
mov
int3
scas
movsl
jno
int3
pop
xchg
mov
repz
mov
jnp
lds
pop
and
shrl
cmp
mov
nop
pushf
repnz
push
inc
mov
insb
popf
mov
outsl
cs
cmpsl
popf
test
jbe
push
lret
lahf
and
scas
inc
pop
jecxz
fldt
inc
or
push
das
in
mov
in
lret
rcl
jl
mov
dec
mov
les
pop
cmp
cmp
cmp
xor
outsl
jne
subb
mov
adc
and
sbb
scas
adc
mov
jl
cld
sbb
cmpsb
jae
ds
jno
test
pop
jmp
pop
mov
lahf
and
into
xchg
and
sahf
and
add
mov
pop
mov
aam
dec
xchg
cmc
mov
movsl
fstl
out
inc
or
fiaddl
adc
in
and
jl
push
insl
and
xchg
daa
inc
dec
add
adc
mov
fnstsw
and
inc
push
jg
xor
jne
daa
cmc
or
cwtl
sbb
jo
sti
out
ret
push
lcall
repnz
cmp
fwait
push
mov
scas
idiv
test
sbb
dec
xor
shr
pushf
mov
push
lock
push
cmp
mov
jg
in
pop
lcallw
ds
pop
call
push
dec
popf
ret
pop
out
or
mov
fiaddl
fwait
stc
xchg
inc
sub
imul
arpl
sbb
jae
cmc
mov
mov
imul
xchg
inc
pop
cltd
imul
call
mov
shrb
mov
sub
fidivs
jne
jp
call
dec
push
sub
sbb
fisttps
sbb
imul
stc
scas
push
or
add
jg
or
cmpsb
push
cld
das
nop
outsl
imul
dec
jb
jne
mov
insb
add
xor
and
ret
dec
nop
jp
stc
int
add
inc
xlat
enter
mov
and
in
cmpsl
push
pop
pop
ss
std
mov
decb
les
pop
xchg
fcomps
mov
add
sub
xchg
mov
stos
ljmp
rcl
in
mov
out
mulb
xchg
sub
addl
pop
adc
mov
pushf
cmp
mov
in
cmp
mov
daa
and
imul
gs
int
dec
jmp
cmpsl
xchg
mov
enter
and
cli
cmpsl
add
pop
js
fnstcw
lret
push
xchg
inc
fcoml
bound
outsb
mov
repnz
add
xor
lret
jbe
xchg
or
lea
enter
push
cmpsb
fsts
lods
sub
int3
jno
lock
outsl
xchg
pop
cmp
add
popf
jno
repz
push
inc
dec
in
sbb
stc
stos
pop
insl
and
push
dec
ret
push
aaa
xor
jne
xchg
or
pop
lea
aaa
lret
imul
sub
out
cltd
mov
in
sbb
xchg
cld
adc
clc
movsb
outsb
dec
scas
jnp
xor
push
aaa
out
mov
in
pop
rcrl
xor
inc
fwait
sbb
adc
mov
cmc
ror
cmc
jle
dec
aam
test
pushf
jno
orb
loopne
mov
lret
ret
mov
add
inc
cld
fcomip
add
pop
pop
lds
shlb
or
jns
pop
xchg
loope
cmpsb
mov
or
pop
lea
addr16
inc
test
int
loop
ljmp
add
bound
push
push
mov
in
adc
sbb
in
les
adc
mov
jae
cmc
outsb
mov
cli
cli
ret
xor
dec
jbe
out
pop
movsl
pop
jp
rep
lahf
cmp
jb
fbstp
lahf
mov
mov
cltd
scas
add
les
dec
cltd
lcall
in
movsb
or
mov
fildl
cmp
jmp
stos
gs
div
int
mull
xor
pop
sbb
loop
sbb
mov
cli
orl
test
int
inc
xor
dec
sbbl
inc
loop
and
mov
add
fdivl
mov
add
cmp
ljmp
fsubr
push
das
pop
sahf
add
cs
xor
sub
sbb
mov
push
arpl
sbb
mov
or
enter
ljmp
subb
push
push
pop
fwait
mov
pop
and
push
movsb
lret
test
dec
sarl
sbb
mov
mov
repnz
push
fxtract
fdivr
mov
adc
in
in
nop
fs
rcl
loop
and
xchg
sub
es
mov
adc
das
jne
int
and
mov
pop
into
in
mov
dec
add
sub
and
ja
cld
mov
pop
clc
pushf
cwtl
push
outsl
ret
xor
push
lea
jle,pt
fdivs
gs
sbb
mov
lret
and
sub
out
inc
dec
imul
pop
test
push
insb
mov
mov
int
es
data16
xor
addl
jno
std
incl
les
stos
into
add
das
pop
add
or
or
les
mov
aaa
jp
and
sbb
push
popa
movb
ja
aas
xorl
jnp
lock
jmp
scas
ljmp
add
mov
rorb
fcompl
movsl
or
lock
sub
jns
jl
xchg
aaa
shll
mov
jbe
jl
or
or
fs
mov
inc
daa
add
jnp
imull
cmc
jle
js
push
pusha
pop
mov
mov
insl
ja
inc
popf
jmp
ss
subl
mov
lret
pop
bextr
ljmp
movsl
pop
and
dec
adc
out
mov
in
pop
shrl
js
inc
mov
fisttpl
fildl
cli
jns
daa
shr
sti
lcall
loopne
repz
loopne
inc
lret
mov
push
cld
cmp
dec
mov
aas
sbbb
fldenv
push
subb
rorb
fldl
loopne
outsb
pop
mov
jae
mov
out
jnp
add
mov
pusha
mov
or
push
ds
or
stos
cwtl
idivb
ss
fldl
jnp
stos
xor
add
sbb
mov
cmp
push
and
es
push
push
aam
int3
push
daa
mov
push
sub
or
lcallw
jno
cmp
inc
add
shlb
mov
jp
push
iret
pusha
fwait
jbe
mov
out
ljmp
inc
jle
jmp
and
jmp
jo
cld
imulb
mov
scas
and
test
and
jno
mov
out
sbb
sub
xchg
sbb
jp
addr16
sub
jecxz
into
mov
xorl
mov
fstpl
rcll
scas
loop
jp
insb
add
pop
sbb
aas
sub
ds
in
jo
scas
cli
adc
sbb
mov
test
lods
lods
cmp
push
outsb
and
inc
mov
add
ret
pop
movsb
scas
cmp
jno
mov
pop
adc
pop
adc
outsb
push
ss
dec
jp
lret
js
pop
gs
inc
pushf
pop
cmp
inc
sbb
xorb
xchg
push
pop
mov
and
adc
mov
dec
adc
jne
jmp
xchg
pop
push
jp
insb
mov
sub
jo
xchg
pop
sbb
inc
push
or
popa
mov
js
pop
lcall
repz
mov
gs
jae
xor
mov
sub
divb
sbb
int
adc
and
mov
sbb
xchg
not
inc
cltd
and
mov
mov
sub
cmp
push
out
mov
dec
mov
mov
add
out
jecxz
es
loope
pushf
aas
es
jae
loope
fldcw
mov
add
movsb
pusha
xchg
mov
movsb
sbb
shl
mov
adc
ds
or
fistpl
rol
mov
push
xchg
mov
loop
movsl
add
adc
cs
jno
and
mov
push
dec
and
lods
or
mov
flds
dec
adc
popf
sbb
cli
cwtl
sub
mov
loope
sub
adc
add
add
nop
pop
mov
xor
test
loopne
imul
mov
mov
sub
inc
mov
out
add
or
dec
daa
cmp
xchg
rcr
pop
aad
jp
daa
sahf
mov
ds
jp
ret
mov
test
repz
fdivrl
jb
add
test
out
notb
out
mov
cltd
jg
push
test
lret
add
xor
inc
jb
loope
dec
test
dec
push
xchg
push
add
jo
cmc
icebp
adc
lret
movb
orb
add
cltd
cli
pop
pop
and
je
push
lods
inc
aam
push
add
pop
mov
push
or
insl
ficomps
jne
or
stc
sub
shrb
adc
orl
cld
and
push
pop
xchg
imul
sub
out
sbb
and
stos
cmpb
push
arpl
sub
cmpsl
in
pop
jg
mov
mov
mov
movsl
in
or
stos
test
pop
jmp
stos
adc
push
repz
push
mov
dec
cmc
fldl
inc
xor
or
andl
dec
mov
stc
stos
in
inc
cmc
push
jns
mov
xor
push
push
insb
dec
adc
push
add
dec
paddb
mov
lods
push
pop
mov
stos
dec
and
push
and
cmpsb
movsl
jbe
jle
std
ljmp
push
pop
pushf
imul
pop
ss
jns
adc
add
dec
repnz
and
mov
mov
outsl
aas
adc
lahf
loope
xlat
and
mov
sub
data16
xchg
or
test
stc
xchg
hlt
add
and
sub
aaa
mov
mov
and
rcrl
in
fistl
mov
ficoml
fldenv
xor
mov
jns
mov
push
pop
pop
inc
outsb
subb
sub
js
mov
test
icebp
mov
mov
test
push
xor
jnp
and
add
mov
in
fcomps
add
je
inc
gs
cmpsl
sbb
fmuls
dec
pop
dec
repnz
push
mov
rclb
daa
push
idivl
call
sahf
shlb
imul
or
xchg
mov
inc
adc
sti
sub
dec
mov
out
ds
mov
pop
int3
popf
push
popa
add
je
cmpsl
or
push
inc
lahf
and
jbe
mov
pushf
mov
mov
sti
sub
fcoms
ljmp
movsb
lcall
test
inc
xor
or
pusha
lds
pop
test
test
stos
je
inc
mov
subb
adc
cld
mov
jae
jo
das
dec
jle
adc
stos
bound
inc
mov
stos
push
inc
fcompl
push
rcrl
mov
jp
xchg
sub
cmp
or
jcxz
jge
inc
rcrl
lock
dec
leave
inc
jns
ljmp
inc
dec
or
sub
adc
push
fidivl
inc
adc
mov
add
xchg
xchg
cmp
adc
jno
fs
cmp
cmp
xor
push
push
scas
add
jno
out
add
js
dec
leave
popa
add
data16
inc
pop
adc
xchg
gs
repnz
xchg
pop
in
cmp
dec
cltd
fs
and
enter
bound
adc
xor
sbb
jg
pushf
cld
push
pop
aaa
xchg
cmp
push
in
push
sbbl
inc
js
inc
inc
inc
pusha
jp
dec
mov
xlat
xor
jg
int3
cwtl
pushf
fucomp
xchg
cmp
neg
stos
xor
and
adc
jno
add
mov
mov
or
lcall
adc
in
mov
push
icebp
negb
movsl
lds
cmp
sbb
xchg
cmp
or
sahf
xor
clc
and
dec
dec
clc
or
test
clc
aaa
mov
insl
xchg
xchg
push
pop
out
jno
mov
stc
rolb
mov
xchg
dec
push
aam
js
jle
je
gs
jnp
aaa
pushf
ret
jp
je
out
inc
out
les
cwtl
push
pop
xchg
rcl
insl
lods
js
push
dec
push
add
pusha
sbb
sahf
mov
jg
nop
test
pushf
jnp
mov
sbb
mov
xlat
sub
pop
hlt
popf
jle
shll
xchg
ljmp
push
call
addb
mov
jl
out
mov
testb
mov
mov
ds
and
subb
fbstp
loopne
cs
lret
sbb
xchg
sbb
jmp
aam
sahf
and
insl
xchg
pop
loope
pop
jecxz
test
adc
rcr
lock
insb
movsl
cltd
iret
out
mov
ds
xor
lods
inc
pusha
mov
pop
xor
cld
dec
add
imul
dec
scas
or
pop
jae
fucomi
xchg
loop
xor
and
cmp
mov
sub
scas
add
mov
insl
mov
out
jo
frstor
aad
mov
sub
adc
adc
jge
fcoms
add
add
ret
cmpsl
sub
dec
dec
lret
sarb
ds
jmp
cmp
xchg
lret
jge
and
add
movsb
mov
std
lcall
loopne
out
adc
xchg
inc
movsl
and
lret
mov
inc
add
sbb
and
test
xchg
add
fildll
rorl
jae
sub
sub
sbb
test
int3
cltd
mov
lcall
xchg
bound
sbbb
sti
sarl
push
stos
pushf
adc
dec
outsl
xchg
scas
daa
push
push
pop
imul
jp
inc
int
das
mov
inc
faddl
fdivrp
add
test
adc
aaa
pop
xor
lret
pop
inc
into
test
jbe
mov
or
inc
out
inc
scas
lea
hlt
outsb
sti
xchg
sbb
or
and
gs
dec
lret
mov
daa
sti
loop
cmp
jg
out
or
mov
xchg
out
inc
stos
pop
cld
cmp
cmp
cltd
repz
xor
jecxz
push
xchg
dec
call
xor
cmp
push
cmpl
mov
mov
sbb
xor
out
sbb
std
push
or
sbb
jmp
jmp
stos
add
push
imulb
jg
sti
xor
mov
ficompl
cmp
stos
lea
loop
cmp
dec
sub
iret
rorb
int3
in
jns
xchg
xchg
les
inc
inc
pop
push
pop
popf
sub
xchg
into
iret
and
fadd
movsl
cmpsl
and
out
mov
sahf
sbb
ja
das
sub
das
lcall
cmp
enter
push
sub
mov
pop
dec
shrb
icebp
mov
gs
jo
jb
xchg
das
xchg
sub
test
add
gs
mov
add
push
js
outsl
xchg
mov
nop
shlb
mov
cs
ja,pn
aad
adc
mov
fimull
jb
jo
fnsave
outsb
rcl
or
xchg
xor
bnd
sub
mov
mov
addr16
dec
sbb
cwtl
inc
xlat
sbb
mov
pop
aam
shlb
sub
add
cmp
cmp
mov
orb
cmp
iret
or
je
jo
mov
mov
loope
add
xchg
inc
cmpsb
es
loop
add
sbb
out
mov
jp
push
lods
sub
xor
dec
mov
fnstenv
xor
movsl
push
lods
lods
insb
xchg
xchg
and
inc
lcall
test
inc
pop
xchg
pop
fs
fdivl
es
jbe
pop
push
mov
sub
enter
fistpll
pop
daa
mov
mov
stc
divl
scas
fmuls
fsubrs
lock
clc
std
data16
mov
cli
fldt
adc
lock
ret
cmpsb
mov
mov
xchg
sub
cltd
fstpt
xchg
and
mov
mov
mov
pop
mov
inc
js
dec
adc
dec
movsl
dec
int3
mov
sub
dec
pop
push
dec
ret
fs
dec
cmp
int
pop
in
pop
in
pop
xor
and
shl
shll
push
and
negl
ljmp
stos
or
fcomi
insl
test
sub
mov
cmp
xchg
hlt
or
gs
pop
push
int3
fimull
mov
aaa
ret
push
mov
jp
clc
lahf
sub
clc
pop
cmc
js
stos
cmp
dec
sbb
aas
mov
addr16
xor
jno
test
or
adc
shlb
dec
jmp
sbb
xchg
mov
jp
mov
in
mov
rorl
add
push
pop
cmpsl
loopne
aaa
push
mov
push
fs
incb
inc
pop
pop
fidivrl
pop
inc
testb
mov
push
stc
movsl
pop
testl
scas
cmp
movsb
lret
in
cmc
jne
fbld
jns
xchg
pop
xchg
in
in
and
mov
cmp
pop
mov
mov
jb
inc
movb
pop
fs
add
ljmp
out
outsb
enter
sub
movsb
adc
addb
and
adc
pop
sbb
addr16
imul
nop
shl
mov
adcb
das
pop
or
mov
std
xchg
push
cmc
fildll
cmp
add
pop
insl
cmpsb
dec
mov
xchg
or
lret
or
push
test
xor
dec
dec
insl
pop
int3
xchg
mov
scas
inc
mov
and
mov
sub
fdivrp
movb
decl
jo
cmpsb
sbb
lret
fimull
nop
inc
in
inc
push
lods
jns
lock
insl
pop
dec
out
add
mov
or
add
lret
js
loopne
sti
imul
pop
mov
jbe
test
sahf
mov
fs
fisttps
xchg
das
clc
mov
jns
mov
xchg
hlt
cmc
pop
std
lret
inc
aam
imul
sbb
popf
stos
out
jg
lret
movsl
in
cmp
jmp
cmp
adc
rolb
cmp
popf
jns
lret
ror
aas
xchg
icebp
jl
xor
add
dec
push
popf
rorl
int3
push
sbb
lods
push
out
repz
ret
dec
cmp
fsubs
mov
cmp
xchg
pop
pop
dec
lods
pop
xchg
xorl
adc
test
cmp
pop
mov
loop
fwait
jnp
xchg
aaa
inc
test
mov
push
loop
add
out
ss
cmpsb
fidivrs
repnz
sbb
ret
or
add
mov
jmp
imul
xchg
and
or
dec
add
dec
push
fbstp
inc
clc
push
jl
xor
push
dec
dec
cs
push
sti
lods
lret
mov
insl
sbb
inc
inc
push
pop
icebp
mov
mov
cmpsl
fbld
mov
and
fstps
pop
sbb
popf
lahf
jl
test
pop
movl
inc
push
divb
nop
out
pop
mov
dec
xchg
test
xchg
data16
idivb
int
int3
scas
adc
sbb
cmpsb
mov
icebp
or
xor
subl
sbb
bound
xor
pop
out
inc
mov
fildll
stc
add
xor
mov
lods
push
int
sub
mov
icebp
adc
mov
out
mov
pop
les
push
push
iret
inc
sub
ret
ret
call
and
mov
ja
pushf
psrlq
jno
bound
mov
es
int
and
jecxz
jb
jge
sub
mov
pop
dec
out
ljmp
shr
xlat
daa
pusha
outsl
jle
insb
je
inc
shlb
mov
mov
out
shrl
daa
jne
adc
cmpsb
inc
jge
vmulsd
cmpsl
mov
mov
mov
das
adc
movsb
lds
test
lcall
xchg
mov
ret
cmp
call
sub
outsl
daa
mov
out
shrb
push
jecxz
lcall
mov
daa
push
jge
pop
mov
mov
stc
xorb
adc
xor
xchg
int3
fwait
push
jmp
scas
sbb
xchg
adc
mov
pop
sti
sahf
xchg
sub
add
ret
add
loopne
jmp
shr
dec
push
jb
dec
and
int
inc
mov
pop
fmuls
test
scas
mov
and
jmp
gs
popf
sbb
nop
pop
mov
sahf
pop
push
stc
jbe
jo
es
pop
pop
fwait
sbb
test
out
cmpsl
jge
jae
xor
xchg
push
pop
push
push
mov
leave
mov
and
fcom
xchg
lea
in
lods
mov
cmpsl
gs
jbe
divb
sahf
test
js
lret
sub
fisubl
push
fdivs
mov
or
dec
pusha
les
dec
in
add
add
jecxz
xchg
mov
jmp
mov
into
pushf
shl
sbb
pop
push
cmp
mov
je
js
dec
jp
addr16
je
push
mov
in
shl
inc
pop
lds
dec
jne
aam
notb
lock
xlat
aad
push
xor
or
divb
jne
or
sbb
shll
arpl
and
jae
push
add
sub
jg
jne
ss
neg
xchg
mov
je
jle
push
xlat
sahf
shrb
js
outsl
push
sub
les
cld
jnp
mov
lods
mov
xchg
push
mov
dec
cltd
pushf
rol
ffree
in
dec
stc
aam
mov
push
or
xor
popl
pop
and
loop
mov
ficomps
mov
cmp
jmp
push
pop
lock
out
in
and
mov
adc
loopne
test
push
mov
loop
mov
inc
push
or
aas
aad
movb
cmc
mov
jp
add
push
push
jnp
inc
cmpsl
mov
adc
imul
mov
movsl
xchg
cs
push
inc
ret
incl
fisttpl
cmc
add
push
jl
testl
xor
sub
fisubrs
ljmp
push
pusha
insl
cmpb
mov
stos
sub
out
mov
in
aaa
add
add
jnp
xchg
mov
aas
test
mov
cwtl
test
sub
stos
push
jg
and
addr16
xchg
adc
rorb
push
test
cmp
repnz
rorl
cmp
gs
inc
aam
adc
pop
stc
jne
inc
mov
lea
xchg
smsw
mov
adc
lods
or
pop
aaa
cwtl
sub
pop
or
into
or
lret
test
mov
xchg
fs
in
add
pop
cmp
arpl
jge
dec
jmp
pop
mov
ds
mov
dec
push
jno
push
out
std
in
xchg
movsl
popa
inc
ret
pop
cmp
nop
cmp
xchg
or
cmp
sub
cwtl
mov
sarl
fmuls
cmp
push
lret
popa
sbbl
pop
std
outsl
sti
dec
xchg
aaa
or
push
and
xor
mov
mov
xchg
loop
sbb
scas
cmp
out
loopw
popa
cmp
dec
fsubrl
jge
xor
fs
jne
xlat
pop
inc
ss
jg
jbe
pushf
push
add
xor
fstpl
push
out
add
lds
rcr
imulb
pop
or
fsts
mov
add
add
dec
pop
jl
aam
imul
imul
xor
cwtl
xor
push
imul
outsb
mov
call
dec
enter
add
jmp
clc
pop
pop
jne
orl
repnz
xchg
xchg
ret
sbb
test
cmp
cmp
dec
std
add
subl
xlat
adc
push
iret
mov
pop
movb
inc
push
andnps
bound
sbb
or
sub
out
cmp
push
out
lock
out
movsb
push
jle
xchg
lcall
or
jl
xchg
cltd
int
xchg
lcall
cmp
fldcw
shrl
jecxz
movsb
sub
mov
mov
xchg
dec
pop
mov
divl
dec
dec
fdivs
xchg
dec
jl
dec
push
lret
xchg
push
hlt
sbb
jae
stos
mulb
jl
idiv
imul
das
loope
inc
dec
les
clc
icebp
adc
pop
push
pop
ljmp
jns
sub
data16
rclb
sti
inc
popa
cli
sbb
test
addr16
cs
or
jl
xchg
push
rcll
call
insb
sbb
cmp
repnz
inc
jmp
fcompl
cmp
dec
add
shld
and
pop
movsl
dec
popa
loope
ficoml
pop
jae
push
or
shrl
adc
daa
push
xchg
gs
cmpsl
add
sbb
lea
cmpsl
xor
push
test
test
clc
loopne
stc
dec
clc
insb
cmp
and
pop
lar
mov
leave
in
mov
cs
cmp
aaa
mov
out
sub
mov
outsb
push
fstl
mov
mov
push
fdivr
mov
mov
cmp
pop
sbb
rcll
data16
or
push
stos
lret
mov
rcl
hlt
mov
pusha
loopne
cmp
xlat
xor
pop
aas
dec
push
push
aad
loope
sub
cwtl
cwtl
add
popa
popa
push
push
mov
fcomip
loopne
and
or
mov
movl
std
dec
loopne
fs
and
cmp
jge
cs
jae
mov
lret
push
mov
fwait
push
xor
out
imull
push
int
pop
adc
lock
aas
rcrb
mov
dec
loope
mov
call
lret
in
sbb
cwtd
cmp
cmc
or
inc
push
add
mov
jg
and
cmp
insl
and
fwait
cwtl
rolb
dec
mov
and
adc
popf
mov
jle
or
sub
jo
inc
adc
adc
dec
or
leave
mov
call
mov
adc
pop
mov
addl
loopne
inc
scas
jecxz
mov
fildl
sub
dec
mov
es
lcall
nop
or
les
cmp
in
xchg
lret
imul
ja
loope
adc
cmc
decb
inc
rolb
int
cwtl
je
sahf
xor
ss
pop
mov
push
fwait
imul
int
test
arpl
imul
fdivs
pop
adc
movsl
leave
test
outsl
lea
jg
xor
jp
fnstsw
outsl
mov
dec
push
into
stc
out
and
call
adc
fbstp
or
imul
mov
rcrb
in
test
jmp
shrl
lahf
dec
shl
dec
pop
in
mov
lahf
cmp
fiaddl
add
ja
cli
and
ss
cmpsl
dec
mov
scas
jg
sbb
mov
test
dec
daa
rcll
pop
and
and
cmpsl
mov
mov
add
or
or
xor
lret
aad
in
inc
mov
sahf
xor
mov
xchg
mov
inc
sahf
mov
cli
sbb
or
out
test
loopw
xor
in
lahf
jge
outsl
aas
cltd
xor
inc
pop
imul
dec
lret
mull
adc
ja
repz
in
jp
into
lret
xchg
add
into
push
insb
jl
pop
and
mov
mov
loope
push
inc
or
out
cmpsl
sub
cwtl
cld
mov
or
sbb
js
xchg
and
dec
ja
insl
dec
adc
insl
sub
outsb
cli
mov
push
push
fstl
pop
mov
vminsd
shrl
imul
andb
das
out
shrl
add
lods
add
add
mov
out
and
and
outsb
je
jg
mov
cmp
daa
add
and
inc
stc
pop
mov
inc
mov
loopne
in
sbb
mov
adc
jg
mov
or
imul
cmp
cmp
pop
xchg
ljmp
dec
xor
inc
mulb
add
mov
mov
jl
int
fdivs
int3
inc
dec
pop
inc
jnp
cmp
pop
jno
aam
jns
cmova
cmp
popa
or
adc
or
jns
add
mov
pop
cmpsb
and
inc
imul
jmp
xchg
xlat
pop
pop
and
adc
pop
mov
push
idiv
ds
jo
push
leave
xor
pop
cwtl
jecxz
adc
push
push
add
inc
push
mov
push
adc
pop
mov
imul
stos
test
test
push
jmp
ja
dec
adc
jns
adc
sub
or
pop
fsubl
cmpsl
lods
add
stos
pop
cmp
sub
fcompl
fistl
in
test
mov
inc
test
es
dec
pop
pop
loopne,pt
fldt
mov
adc
and
loopne
add
or
insb
add
or
jp
outsl
cmp
and
xchg
sub
mov
mov
inc
lahf
stc
out
xor
jb
push
inc
in
jge
movsb
pop
lret
xchg
mov
jns
neg
call
mull
ja
int3
mov
lds
ljmp
jns
mov
push
icebp
fsubrp
add
or
add
jg,pt
jb
push
sub
movb
mull
int3
dec
shrl
popf
cwtl
jnp
mov
std
mov
testb
cltd
add
or
mov
es
mov
scas
push
sub
cmpb
fists
popf
out
rolb
xchg
push
sub
mov
std
or
mov
add
movsl
lret
add
stos
push
and
test
sbb
cld
pop
shrl
out
jl
pop
pop
fidivrs
in
jp
mov
fldenv
add
int
sub
rorb
scas
test
or
sbb
sub
lea
adc
sub
ds
pushf
into
push
lahf
insb
or
mov
int
push
mov
dec
les
sub
in
fisubrs
loop
add
mov
inc
sbb
rcl
int
jecxz
cmpsb
push
add
stos
jns
pop
jbe
and
mov
adc
mov
enter
popl
or
or
cltd
lret
shl
push
out
mov
fs
pop
and
pop
mov
imul
sbb
sbb
rcrb
ret
ret
mov
xchg
adc
int3
xlat
xor
jl
mov
gs
aas
cmp
lods
adc
xor
in
sub
mov
inc
scas
fadds
lods
subb
lahf
jns
in
sub
nop
and
icebp
loopne
mov
insl
pop
loop
cmpl
out
int3
push
test
outsb
lock
mov
shrl
in
lret
test
inc
loope
fcmovnu
fcmovu
aaa
inc
pop
mov
mov
mov
push
xchg
dec
rcr
testb
je
cmp
outsl
cwtl
popf
sub
xchg
push
dec
mov
scas
push
mov
xor
push
sub
ds
out
xor
bswap
fwait
xchg
jl
enter
arpl
sti
int
filds
js
mov
addr16
push
test
nop
and
dec
cltd
mov
popa
xlat
jmp
bound
fsubr
inc
adc
stos
je
lods
inc
dec
jno
push
loope
add
dec
jmp
scas
add
fdiv
mov
dec
and
test
fisubl
add
mov
inc
fadds
jae
push
dec
shlb
loope
and
push
leave
mov
ret
or
stos
mov
mov
aam
fisubl
xchg
test
xchg
jmp
sbb
push
xchg
xor
pushf
sarl
adc
cli
int
shrl
inc
jmp
mov
shll
mov
cwtl
sbb
push
xchg
loopne
fistl
ja
ret
sub
inc
jecxz
stos
lret
jns
ret
aaa
push
inc
mov
scas
rcrb
sti
loop
sarb
xor
in
xor
je
cmp
cmp
mov
leave
subb
and
jo
sbb
mov
out
call
jae
dec
push
sub
add
movsb
jne
push
dec
jne
mov
dec
out
dec
cmpsb
xchg
movsl
mov
sub
mov
out
out
lods
aaa
cmp
mov
lods
scas
jp
and
int
jno
or
outsl
mov
adc
mov
lods
push
cli
adc
jge
cmp
arpl
xor
dec
inc
cltd
inc
sahf
add
mov
outsl
mov
in
inc
push
imul
mov
cltd
in
or
addr16
mov
pop
dec
popa
scas
jmp
xorl
jno
push
rorl
cmp
and
sub
and
xchg
outsb
pop
sbb
loope
and
jbe
adc
in
sub
inc
pop
jg
mov
scas
inc
xor
test
mov
js
and
in
fisubs
xor
daa
jae
cmp
movsb
xchg
pop
adc
pop
mov
std
push
mov
add
mov
rclb
mov
cmp
test
mov
xor
mov
fcmovne
mov
popa
add
jmp
arpl
mov
xorl
pop
outsl
pop
mov
loopne
cmp
and
cmpl
xor
cmp
aaa
outsl
and
jo
inc
mov
iret
fists
adc
add
cltd
inc
cmp
mov
ljmp
or
mov
or
sub
in
mov
add
out
and
cmp
inc
mov
ret
sti
sar
mov
adc
lods
popa
adc
xchg
in
sbb
adc
and
sahf
cmp
shlb
shrb
inc
mov
sbb
sub
mov
xlat
mov
pushaw
movsb
mov
fnstenv
rolb
fisttpl
inc
dec
ss
adc
popa
mov
or
mov
andl
dec
or
push
jl
les
sbb
repnz
popa
jp
adc
cmc
out
out
push
cmp
dec
adcl
push
jo
fldpi
dec
push
jae
sub
cs
sahf
or
mov
scas
or
xor
cmpsb
daa
into
in
mov
fisttpl
pop
test
xchg
rcrb
shlb
movsb
add
mov
je
stos
jge
sbbl
push
daa
push
ja
sbb
cmp
xchg
std
dec
out
sub
push
cmp
test
sbb
icebp
je
out
mov
push
das
xchg
push
ds
jae
sbb
js
jp
mov
xor
clc
pop
int
mov
lret
repz
ds
aam
mov
mov
mov
cs
popf
out
daa
gs
push
xchg
xor
in
popf
test
jb
cmp
sub
sbb
in
fstl
and
dec
mov
adc
pushf
out
xchg
mov
push
in
ja
ret
test
sbb
sarb
adc
cmc
lahf
mov
push
lret
sub
je
mov
movb
inc
lods
in
add
out
sub
ficoms
jp
adc
or
push
add
ljmp
sub
xlat
xor
rol
arpl
dec
out
add
imul
jmp
push
jg
xchg
loop
pop
and
icebp
xchg
fidivrs
xor
jmp
int
xchg
mov
loopne
mov
pushf
adc
mov
js
scas
add
add
adc
clc
sub
into
out
sbbl
push
in
or
pop
mov
xor
mov
repz
add
cmp
xor
jne
jae
loop
mov
xchg
pop
int3
jns
jp
mov
jmp
stos
divl
add
xor
adc
ret
xchg
dec
xor
inc
dec
scas
jmp
out
leave
out
push
mov
mov
inc
addr16
ss
loopne
cmpb
pop
scas
jecxz
push
pop
fsubrs
mov
mov
inc
stc
nop
dec
dec
jmp
gs
idivl
or
jle
out
dec
pop
adc
jo
inc
or
inc
or
dec
adc
aam
cs
cmc
pop
xchg
sub
rorb
or
int3
lea
lds
sbb
push
stc
data16
push
mov
and
orl
adc
movsb
jae
xor
scas
adc
mov
xor
or
push
std
jg
sbb
div
xchg
add
sarb
subl
push
ja
pop
pop
dec
jle
jns
lods
pop
popa
mov
push
sbb
aaa
fiaddl
cs
cld
or
mov
push
ret
sub
cmp
inc
imul
nop
imul
fcomip
mov
mov
dec
je
inc
in
dec
sahf
add
or
cmp
jge
ljmp
cmp
push
jle
cli
push
cmp
inc
les
xor
std
mov
cmp
xor
test
out
add
clc
pop
jecxz
jecxz
lret
ljmp
imul
push
or
sti
mov
cwtl
bound
push
and
push
sbb
call
rcrl
mov
sti
insl
add
jl
cltd
imul
int3
lret
dec
lcall
lods
scas
jecxz
mov
push
dec
pusha
mov
not
test
dec
das
scas
cmp
mov
push
xor
mov
pop
mov
or
push
inc
push
arpl
into
xlat
test
je
loopne
scas
iret
sti
and
cli
test
mov
lret
lret
mov
int3
xor
sub
enter
ds
jno
mov
sub
add
outsb
pop
push
mov
dec
mov
in
add
xchg
lahf
mov
dec
mov
mov
aad
xor
cmpsb
stc
inc
sahf
jge
loope
sahf
mov
popa
jmp
lds
lds
icebp
mov
xchg
ret
test
mov
cmc
rcr
mov
push
cmp
ss
daa
or
mov
rorb
arpl
scas
xchg
mov
cmp
leave
arpl
fdiv
push
cmp
or
push
out
inc
shrb
dec
bound
cmp
outsl
cmp
das
inc
je
mov
incl
lcall
dec
imul
es
push
mov
mov
shll
ret
jge
push
pinsrw
cmp
mov
mov
mov
jbe
and
dec
int3
dec
pushf
cld
in
dec
dec
pop
jae
dec
pop
lret
dec
and
xor
push
lea
push
aaa
pop
cwtl
cmp
andb
daa
jg
mov
and
jecxz
ljmp
or
mov
xchg
shll
mov
pop
inc
adc
push
and
xchg
cmp
ljmp
mov
rclb
in
add
test
das
pusha
andb
cmp
inc
sub
out
fcoms
jae
sbb
std
mov
mov
cmp
je
insb
inc
jb
pop
mov
je
xchg
aam
nop
leave
pop
inc
cltd
sbb
adc
pop
add
mov
and
inc
cmpl
insb
ds
inc
inc
cmp
pop
std
adc
pop
cwtl
dec
mov
or
mov
sub
jmp
xchg
or
xchg
mov
dec
cmpsb
xchg
jg
push
in
mov
aad
sub
add
mov
into
mov
adc
out
sbb
mov
and
loopne
jb
dec
cmp
insb
rcrl
pop
aaa
sub
or
pop
data16
lods
and
out
dec
cmc
mov
int
pop
ja
ja
or
jns
push
add
push
out
cwtl
outsb
pop
lock
mov
pop
and
mov
xlat
or
imul
sti
fistl
movsl
std
dec
push
cmp
in
lar
inc
insl
jb
dec
stc
shr
cld
in
clc
movsl
sub
sbb
inc
dec
cs
xor
dec
pop
jo
mov
shlb
imul
jae
add
orl
mov
sar
cmp
fistps
movsl
xor
sti
push
dec
adc
subb
es
test
jle
mov
push
das
aad
and
jns
ret
nop
sub
mov
daa
xorb
cmp
xor
pop
repz
imul
pop
cmp
sbb
adc
mov
jmp
jno
mov
aaa
mov
add
lods
aam
xor
mov
stos
jno
xor
cmp
cs
xor
popf
mov
xchg
jmp
insb
lock
add
daa
mov
ret
sti
ret
mov
lds
mov
lods
mov
inc
stc
imul
pop
daa
inc
mov
add
pop
adc
push
int3
jl
cltd
and
fmull
mov
imul
std
out
pop
cmpsb
jnp
and
jno
jg
hlt
xchg
sbb
or
cmpsb
ja
int3
es
sbb
lods
sub
mov
filds
xchg
leave
mov
pop
lock
sbb
ret
jl
fidivl
sti
insb
mov
mov
push
pop
xchg
fldenv
cmp
xchg
push
jmp
cmp
loope,pn
sbb
cli
clc
xor
pop
shrl
add
mov
imul
jae
xchg
sbb
jmp
pop
scas
arpl
into
sub
push
jmp
cmp
jmp
pop
xchg
xchg
frstor
push
jo
xchg
aas
or
shlb
imul
or
enter
popf
push
in
mov
xchg
loopne
pop
sti
jb
mov
rcll
xchg
psubd
jne
mov
frstor
mov
sbb
ret
sti
inc
cmc
cwtl
adc
arpl
dec
in
mov
jge
inc
clc
xchg
outsl
fdivr
sbb
mov
adc
out
lds
pop
mov
es
pop
aaa
adc
aas
pop
mov
jno
incb
out
jmp
stc
mov
sub
mov
mov
mov
pop
fldcw
jae
cmp
xchg
jo
pushf
mov
sahf
jge
mov
push
inc
shlb
jno
mov
aad
enter
clc
mov
pop
inc
outsb
movsb
ret
lods
push
push
rorl
mov
insb
jns
inc
jo
inc
scas
mov
test
orl
or
mov
adc
cmpsb
cld
adc
mov
push
fld
shlb
outsl
fldl
jp
stos
into
xchg
pop
cld
mov
shll
mov
and
sub
addr16
call
xor
sahf
aad
jmp
ja
or
add
add
add
add
add
ficoms
mov
sub
out
and
insb
jno
pop
sahf
cmpsl
ficoms
mov
ficoms
mov
scas
cmpsb
mov
add
ficoms
mov
ficoms
mov
ficoms
mov
mov
inc
mov
xchg
cli
out
add
cli
out
add
cli
out
add
cli
out
add
cli
out
add
cli
out
add
in
je
pop
cmp
add
pusha
add
add
cmp
add
pop
add
aam
add
adc
pop
sbb
add
cmp
sub
add
add
push
add
add
add
jmp
add
add
add
add
nop
cmc
add
add
add
add
add
add
sti
les
add
jnp
xchg
push
adc
inc
add
rolb
add
push
add
add
add
les
add
mov
add
out
push
aad
sub
add
rolb
add
or
add
add
add
mov
add
mov
mov
stc
inc
add
push
add
add
sbb
add
add
add
mov
add
sbb
add
adc
sub
add
add
iret
inc
push
inc
add
push
add
add
lock
add
sbb
add
leave
add
mov
mov
mov
lcall
pop
inc
add
push
add
add
in
add
add
add
pop
add
pop
aam
cmc
add
add
pop
sarb
rcl
mov
lcall
mov
sbb
shl
mov
xor
add
rcl
push
in
mov
dec
sbb
mov
push
push
or
inc
sar
pop
out
cs
stc
dec
pop
inc
arpl
jns
fucomi
mov
cltd
or
fsubs
dec
push
aam
idivb
leave
into
ficompl
fsubrs
aaa
cmpsl
pop
xchg
loop
jmp
das
dec
or
xchg
mov
push
mov
mov
push
shrb
movsb
mov
xchg
movsl
incb
xchg
aas
cmp
push
rolb
sub
ret
loopne
jg
and
popf
add
inc
lods
test
adc
pop
push
xor
cs
push
sub
lcall
mov
lods
jno
addb
mov
ljmp
imul
in
scas
cmp
outsl
adc
push
cmpsl
xchg
push
faddl
sbb
sub
xor
pop
jo
pop
pop
shll
push
mov
ljmp
int3
fbld
dec
cmpsl
divl
repnz
es
data16
ja
add
dec
mov
add
adc
and
and
inc
daa
or
in
cwtl
leave
pop
xchg
aaa
enter
jnp
pop
std
and
out
jns
stc
mov
lock
pusha
test
pop
test
push
and
sub
dec
dec
insl
sub
pop
test
in
inc
push
and
cmp
adc
je
popa
movsb
xchg
mov
pop
faddl
movsb
cmp
inc
sub
or
sti
ret
mov
or
mov
sub
addl
fstpl
ja
lds
test
jo
in
addl
inc
mov
stos
mov
test
cltd
push
or
xchg
cmpsb
loope
cmp
jne
icebp
cmp
push
andl
jbe
int
repnz
pop
pusha
cmp
inc
test
pop
inc
popa
mov
cmp
pushf
adcl
jno
dec
inc
sub
mov
inc
stc
cmp
sbb
dec
orb
test
mov
mov
jns
test
ret
rcll
xchg
mov
dec
mov
mov
cmp
or
mov
scas
arpl
push
aaa
test
enter
jno
fbld
sub
ss
sbb
or
std
and
enter
ffree
lret
pop
shll
shll
in
mov
hlt
lret
mov
sub
adcb
cmpsb
mov
fsubrs
pop
dec
stos
outsb
push
aaa
xchg
cmp
subb
xchg
pusha
cld
jbe
push
pushf
xchg
cmp
mov
jmp
mov
rol
push
shlb
mov
loop
xchg
fildll
out
jno
dec
mov
int3
pop
hlt
mov
testl
pop
xor
subl
or
jbe
into
faddl
xchg
jg
sub
dec
jno
fs
mov
popa
push
push
gs
xor
xchg
mov
dec
popf
and
xlat
movsb
notb
xchg
pusha
imul
pop
insl
pmuludq
add
addr16
hlt
imul
jns
adc
int
sar
divl
cmp
sub
leave
fmuls
icebp
push
or
jl
pop
jp
inc
out
aaa
cmp
pop
loop
jmp
and
cmp
and
adc
mov
mov
call
push
test
shl
int3
fidivs
pop
cmpsb
and
cmpsb
rcrb
pop
jle
dec
xor
addr16
stos
fdivrl
mov
clc
mov
sbb
mov
xor
inc
test
xchg
ret
sahf
popa
rolb
lahf
push
stc
sub
divl
pop
add
jle
add
push
xchg
mov
mov
mov
xchg
lahf
dec
jnp
jecxz
aaa
xlat
xor
mov
and
andl
movsb
lods
stc
lcall
xchg
xchg
mov
sub
xor
mov
out
xchg
rcll
pusha
adc
fnsave
sahf
pop
movsl
mov
pop
pop
mov
into
std
in
mov
fcompl
push
adc
pop
fimull
rorb
icebp
hlt
addl
add
mov
jmp
addr16
xchg
jp
cmp
adc
fisubs
add
or
push
jbe
xor
out
cmpsb
cli
cmp
stos
adc
inc
in
repz
mov
test
aas
daa
pushf
inc
es
mov
pop
je
fwait
test
mov
push
mov
pop
dec
fwait
push
inc
fstpt
idivb
xchg
aad
ret
loop
pop
stc
int3
pop
outsl
inc
divl
fsts
sub
pop
push
xor
dec
add
adc
orb
fwait
mov
adc
sub
insb
add
movsb
fsubrs
sbb
sbb
stos
adcb
jne
jle
dec
mov
dec
mov
into
xchg
or
jb
and
fistpll
mov
pop
rcr
outsb
mov
stc
repnz
test
pop
scas
xor
sbb
push
jecxz
stos
fiadds
jbe
rorl
inc
or
pop
mov
repnz
cs
aad
mov
enter
lods
inc
push
cld
hlt
pop
daa
sbbb
xchg
jp,pt
and
mov
dec
mov
lods
aam
sahf
in
sub
test
fldl
lret
das
js
xchg
not
pop
xchg
mov
sbb
js
push
cmp
mov
sub
mov
lds
or
push
adc
mov
jle
mov
jge
push
lods
outsl
std
popa
pop
imul
testl
xor
shlb
sub
dec
fwait
sub
add
mov
xchg
cs
dec
pop
mov
popa
adc
lret
adc
dec
inc
xchg
pop
stos
daa
mov
insl
insb
and
adc
daa
pop
xlat
rorl
mov
mov
mov
test
lea
inc
mov
iret
insl
dec
jo
mov
xchg
sar
in
out
negl
inc
lahf
jmp
dec
push
and
loopne
jmp
ret
mov
in
stos
imul
cmp
inc
lahf
pushf
mov
fcmovb
xchg
jmp
lock
mov
cmp
and
cli
xor
mull
in
insl
sub
daa
mov
mov
repnz
imul
int
idivl
pop
loopne
ja
mov
push
pop
out
xor
mov
fmull
cli
das
fxtract
fs
sahf
stc
inc
mov
push
pop
cmp
xor
ret
in
das
sub
dec
mov
cmp
sub
test
in
ss
mov
inc
jecxz
sbb
ficoms
xor
shl
movsb
xchg
ljmp
cmpsb
cmp
mov
and
and
jmp
je
scas
jl
jo
adc
mov
pop
cmp
in
int3
stc
jp
fimull
push
roll
xchg
inc
jl
sbb
cmpsb
sub
in
jle
bound
jno
test
adc
or
and
dec
mov
loop
ret
dec
ret
mov
imul
sarb
cmp
and
nop
xchg
dec
repnz
add
xchg
psraw
and
cmp
je
dec
cld
jmp
xchg
xor
mov
addr16
incb
lahf
mov
adc
push
sbb
nop
pop
sub
jo
roll
mov
pop
icebp
fcoms
xor
push
cwtl
or
cmp
loop
mov
xor
loop
jns
sub
fcos
xchg
mov
push
call
mov
mov
mov
out
dec
jno
lret
xchg
dec
push
loopne
push
into
sarl
scas
lods
cld
stc
mov
nop
pop
push
mov
repz
stos
repz
xor
cli
sub
into
xor
lods
sti
mov
insb
jae
cmp
cmp
popf
bound
cmp
push
pop
or
nop
ss
roll
dec
dec
movsl
out
data16
xor
fisubrs
dec
out
push
sahf
les
jae
int3
out
add
mov
adc
scas
outsb
sbb
movsl
jae
pop
mov
pop
cld
sbb
pop
pop
push
leave
lret
sbb
pop
pusha
pop
add
cmp
cli
push
mov
and
inc
pop
jge
jno
fucom
insb
push
dec
sub
pushf
das
pushf
push
pop
mov
pop
or
xchg
rol
mov
or
xchg
fwait
push
cmpsb
mov
fwait
stos
leave
jmp
jbe
aam
rorl
addb
imul
je
add
or
fstpt
pop
daa
fwait
sub
mov
icebp
aam
dec
cmpb
inc
cmp
pop
mov
dec
gs
adc
inc
test
mov
cli
cld
insb
sar
mov
cld
pop
cmpsb
rcrl
pusha
test
int3
std
xchg
jnp
inc
stos
movsl
pop
inc
xor
mov
pop
mov
mov
iret
stc
dec
xchg
ss
jle
adc
int
repnz
pop
jb
mov
sar
xor
adc
dec
enter
movsb
mov
sub
add
data16
mov
mov
jmp
pop
push
add
jne
cmp
jbe
mov
stos
hlt
sub
gs
je
mov
or
loope
xchg
test
inc
in
mov
mov
sub
cld
movsb
insb
mov
push
stc
xchg
in
push
dec
fcmovne
pop
decb
and
orl
outsb
adc
imul
pop
pop
adc
bnd
inc
jnp
test
outsb
and
call
and
jg
lcall
mov
rcrb
scas
xchg
push
rcl
xchg
push
flds
pop
test
cli
out
faddp
xchg
test
sbb
sub
imul
push
sub
movsb
xor
cmp
pop
in
iret
xchg
jbe
dec
push
or
mov
xlat
push
or
mov
test
add
mov
xchg
bound
into
mov
fldenv
add
lods
pop
lods
icebp
mov
test
xchg
xchg
cmpsb
arpl
fs
xorl
movb
les
and
rorb
cmpsl
add
test
or
cmpsl
inc
movsb
repz
ss
in
in
xchg
sbb
pop
sbb
push
adc
out
or
das
dec
lods
movsb
cli
dec
and
scas
pusha
sub
ror
xchg
imul
scas
pop
xor
imul
add
jmp
mov
push
dec
push
outsl
and
andb
rcl
pushf
adc
icebp
xorl
fcompl
mov
inc
and
loop
push
sub
test
xlat
loopne
int
cwtl
push
cmp
test
mov
lods
jns
adc
jl
dec
ss
dec
cli
sub
testb
push
push
inc
fwait
adc
gs
sbb
jmp
mov
arpl
ja
push
pushf
repnz
mov
add
adc
xchg
pop
pop
test
aas
mov
std
sub
jbe
push
mov
xchg
loop
iret
rclb
dec
mov
out
mov
je
sbb
in
dec
scas
push
fstl
cli
dec
sbb
sbb
stos
add
jmp
aas
rcrl
fmuls
out
jmp
mov
daa
mov
pusha
and
out
lods
sub
mov
aaa
mov
cltd
jno
int3
xchg
mov
sbb
push
sbb
add
insl
mov
ret
inc
mov
div
cmp
mov
sub
hlt
hlt
and
shrl
jno
adc
jno
loopne
jns
out
iret
mov
add
add
mov
movsl
jnp
arpl
imull
adc
add
test
adc
and
out
enter
loop
mov
ljmp
popf
orl
add
cmp
inc
fisubrl
gs
cs
cmp
or
jle
rorl
outsl
addb
dec
jge
arpl
movsb
ja
and
jmp
push
xchg
loope
inc
mov
xor
sub
pop
loop
aaa
push
dec
inc
je
stos
mull
push
loop
cmp
ljmp
shll
xchg
push
repnz
jmp
nopl
inc
lods
mov
mov
inc
subl
or
xchg
sahf
mov
and
clc
and
jae
sbbl
stos
xchg
scas
mov
cmpsb
or
mov
outsl
hlt
enter
mov
lods
mov
cmp
mov
cmp
icebp
aad
inc
push
addb
in
mov
mov
mov
lds
mov
aaa
jl
xchg
xor
mov
push
and
call
cmp
popf
bound
lahf
mov
mov
pop
out
cwtl
aaa
inc
pop
adc
lods
mov
mov
cmp
push
insl
bound
pop
xlat
pop
mov
outsb
xor
xor
mov
dec
fiaddl
or
js
pop
call
addl
in
xchg
mov
mov
das
mov
jecxz
icebp
or
in
aaa
ret
sbb
test
push
leave
push
das
lods
push
jmp
gs
in
in
lods
xchg
mov
andl
xchg
enter
rcll
or
mov
add
inc
mov
sbb
sub
mov
lret
cs
mov
inc
push
dec
mov
sbb
and
or
scas
fidivl
fidivs
ret
xchg
jno
sub
scas
xchg
fisubl
jge
cltd
add
test
pop
jle
cld
test
hlt
push
push
lahf
mov
inc
add
xor
pop
pop
gs
or
sbb
sbb
outsl
les
jmp
shlb
decb
stc
fucomip
push
lahf
aas
xchg
insl
stos
jg
and
movsb
loope
sub
mov
and
subb
data16
xlat
mov
repz
dec
callw
loopne
mov
cmpsl
xchg
sub
lcall
sub
cltd
jmp
xor
or
add
or
mov
sbb
pop
fsubrp
xor
push
and
cld
dec
jno
filds
xor
lods
icebp
sbb
ljmp
daa
es
mov
aas
adc
inc
inc
cli
xchg
cmp
mov
imul
jo
push
jmp
mov
loop
pop
add
inc
push
mov
nop
mov
aad
cwtl
sub
inc
sub
addl
sub
mov
mov
inc
lcall
shrb
pop
push
cmp
add
add
dec
ret
jg
and
dec
xor
lods
mov
mov
in
jg
nop
pop
dec
rclb
sti
inc
mov
and
and
nop
hlt
aam
shl
arpl
or
dec
shl
test
cmp
fldcw
sbb
ja
inc
fisttps
pushf
fidivrl
cmp
jecxz
loopne
rclb
jp
mov
jp
test
daa
adc
fwait
push
jge
push
gs
rolb
pop
mov
clc
shl
and
adc
jmp
lock
aam
jnp
test
std
js
push
push
sub
mov
mov
mov
dec
daa
add
cmp
arpl
sub
or
addl
add
push
sub
inc
pushf
dec
or
mov
adc
dec
out
xchg
shll
insb
or
subl
push
in
lcall
pop
or
and
insb
mov
add
and
mov
ds
outsb
cli
test
sub
ja
imull
mov
data16
out
movsl
dec
shll
int
jmp
int
push
loop
lret
lods
imul
jnp
cmp
push
lods
xchg
dec
std
lods
push
mov
lcall
mov
mov
inc
sub
inc
icebp
btc
push
dec
ret
mov
andb
jp
pop
sbb
aaa
jecxz
clc
mov
sub
cmp
ds
popa
test
inc
pushf
inc
out
xlat
inc
mov
jle
aad
mov
xchg
cmp
and
repz
push
xor
arpl
cmp
loop
fiaddl
out
cmp
jns
mov
mov
dec
dec
or
and
lcall
insb
jecxz
ljmp
cli
pextrw
xor
aas
dec
xchg
or
xchg
push
pop
fimuls
loopne
jbe
sahf
inc
movsb
negb
bound
fucomip
jae
push
loop
cmpsb
xchg
call
pop
icebp
sub
sbb
xchg
push
cmp
scas
in
lock
aas
outsl
cmp
and
hlt
mov
xor
jle
push
cmp
mov
cli
dec
pop
adc
mov
xchg
xor
rclb
lock
dec
aas
aam
out
mov
push
push
push
mov
and
push
inc
mov
xor
popf
lock
outsb
test
or
xor
jmp
dec
rcll
test
inc
add
jge
aaa
add
inc
adc
test
leave
fisubs
sub
lods
pop
out
mov
cwtl
push
mov
clc
mov
push
cld
outsl
xchg
jae
jmp
lods
aad
jnp
in
xor
outsb
mov
test
ss
test
mov
sub
xchg
cld
add
decb
ds
mov
mov
mov
mov
fwait
shlb
popa
adc
jmp
das
push
jmp
test
fwait
mov
and
mov
repnz
movsl
add
cmp
and
imul
js
xchg
cmc
es
es
add
xchg
mov
inc
std
stos
cmp
pop
or
mov
push
sbb
mov
stc
loopne
sbb
iret
cmp
hlt
xchg
add
rorb
loop
lods
decb
imul
inc
add
sbb
jbe
xlat
mov
mov
mov
mov
icebp
inc
iret
jge
daa
jns
inc
or
mov
jb
jecxz
add
and
add
dec
dec
push
popf
add
lret
or
fwait
aam
push
sub
adc
dec
fwait
cmpsl
inc
pushf
movsl
mov
cmp
sbb
and
mov
push
inc
adc
mov
jmp
repz
insb
xor
sub
incb
pop
inc
cmpsl
mov
adc
dec
icebp
lret
mov
jle
fwait
movsl
test
ret
and
xor
mov
jnp
repnz
pusha
mov
pop
divb
dec
lock
fists
push
ret
dec
lret
sub
bound
rcrb
xor
push
popa
mov
aas
pop
repnz
test
scas
out
lahf
pop
pop
mov
fldl
jnp
push
adc
or
push
xchg
into
mov
mov
pop
mov
ret
mov
arpl
movsl
fimull
test
cmpsb
cmp
test
mov
xchg
jg
mov
aas
les
addr16
mov
je
xor
scas
mov
mov
daa
push
pop
bswap
jmp
ret
cli
or
vprotb
lret
sahf
sbb
xor
repnz
mov
dec
xchg
and
cmp
cld
loopne
pusha
fidivl
xchg
ficomps
jae
cmc
imull
mov
fs
mov
jmp
js
movsl
je
xchg
xor
push
dec
adcb
dec
jbe
imul
cmp
push
dec
in
test
mov
sub
mov
mov
mov
xchg
repz
fwait
xchg
scas
das
icebp
dec
rcll
test
pop
movsl
jbe
cmpsb
je
push
or
mov
pop
fmull
ljmp
ror
enter
mov
test
or
sbb
stos
mov
mov
test
xchg
xor
idivl
aad
je
and
loope
jecxz
fstl
xor
call
ret
mov
lea
movsl
sub
iret
jns
loope
and
call
push
scas
scas
mov
push
add
sahf
push
ret
adc
fidivl
dec
cmp
jo
into
inc
outsb
pop
mov
fldt
ret
scas
mov
aas
inc
rcrl
stos
cmp
dec
sbb
imul
fdivrp
push
fnsave
dec
inc
jno
jnp
add
cmp
cltd
in
add
mov
frstor
insb
movsb
cmc
cs
lahf
rcr
xor
add
cltd
sub
popf
repnz
xchg
std
movsl
cli
mov
iret
mov
jle
icebp
rclb
fisubl
lods
lret
xchg
loop
push
lahf
outsb
in
fstpt
mov
loop
ds
jne
inc
dec
lds
push
repz
pushl
ljmp
test
pop
in
fdiv
fists
shlb
or
into
fdivrs
repnz
mov
pop
jne
scas
mov
mov
mov
ss
gs
or
scas
sti
mov
loop
out
mov
cs
xchg
mov
add
aaa
cmpb
ljmp
add
inc
sbb
lock
mov
mov
cmp
sbb
imul
cmp
sbb
pop
scas
fwait
xchg
or
in
pop
mov
cmp
xchg
push
addr16
adc
in
mov
fadds
stc
mov
mov
fs
dec
jmp
or
push
and
sub
mov
inc
shrw
imul
sbb
jmp
sbb
xchg
jbe
xchg
fildll
and
movsb
jmp
hlt
mov
jo
imulb
mov
push
sbb
int3
icebp
xor
imul
mov
sbb
dec
decb
lock
mov
adc
add
ret
sub
hlt
cmc
pusha
and
data16
mov
mov
mov
adcb
stos
test
ds
popa
xchg
imul
lcall
mov
enter
ret
adc
aad
jne
xchg
fmuls
xchg
hlt
test
fnstenv
xchg
mov
sbb
nop
pop
insl
insl
lea
mov
out
outsb
and
mov
ret
jo
inc
lods
mov
and
add
xchg
push
add
imul
inc
imul
loope
push
and
fwait
pop
mov
aaa
xchg
inc
iret
inc
jo
insl
popa
js
lahf
mov
xor
mov
test
movsb
sbb
xchg
pop
lahf
rorl
fisubs
test
enter
fdivrs
outsl
push
jg
xor
aaa
cwtl
push
sub
jle
adc
xor
call
lcall
stc
xor
inc
xor
push
imul
xor
xor
sarl
mov
cmp
push
mov
movsl
mov
add
push
push
imulb
dec
ljmp
ficomps
jecxz
cli
hlt
pop
jo
adc
sub
out
mov
add
js
push
push
or
ret
scas
clc
xchg
popa
or
sbb
sbb
icebp
xchg
je
pop
fdivl
cwtl
xor
fwait
pop
dec
int
sar
xchg
pop
adc
push
fstl
lods
mov
xlat
daa
aaa
in
ret
les
fwait
cmpsl
movsl
aam
mov
sub
cltd
mov
mov
dec
and
aad
bound
xor
dec
jne
dec
mov
insl
dec
mov
das
push
xchg
in
pop
xchg
aaa
jl
mov
adc
push
inc
sub
leave
mov
popf
dec
stc
and
sub
jne
test
xor
add
hlt
inc
pop
and
pushf
inc
nop
dec
imul
mov
jle
mov
xchg
es
jb
push
stc
shrb
add
stos
jo
push
sbb
and
mov
pop
enter
mov
shrl
add
loop
incb
bound
xchg
fsubrs
jle
subb
and
add
jge
lahf
dec
lret
sbb
outsb
or
fsts
sarb
dec
add
mov
jns
or
adc
dec
rorb
xor
test
xlat
sbb
das
jnp
pxor
mov
stos
fisttpl
push
mov
aad
sbb
ljmp
cltd
sbb
lods
bswap
lock
loope
imul
arpl
cmp
aas
xchg
outsl
jl
or
out
icebp
mov
push
orb
inc
jl
xchg
shrl
imul
xor
aam
ljmp
scas
cltd
add
xor
push
addr16
popf
enter
das
cld
mov
xor
loope
and
push
sub
repz
mov
or
push
mov
cmp
clc
into
add
fcoml
fld
jne
fcomps
insl
insl
jge
mov
inc
mov
jmp
cld
sbb
jo
add
sti
ficoml
adc
into
mov
hlt
testb
and
test
scas
mov
addr16
cmp
inc
pop
lahf
lods
dec
cmp
inc
dec
gs
repnz
outsb
mov
mov
sysexit
hlt
test
add
lods
in
test
iret
push
dec
iret
cmpsl
or
mov
jge
mov
outsl
and
hlt
scas
xchg
or
xchg
lret
xchg
mov
iret
popf
add
mov
cmp
jnp
sub
popf
inc
jmp
xchg
push
std
mov
xor
adc
popf
outsl
adc
push
inc
pop
and
into
cmp
dec
push
test
test
out
addr16
xchg
sub
xchg
and
sbb
jae
shll
cli
inc
push
cltd
jge
sbb
addr16
cli
mov
inc
in
dec
cmpsb
xor
push
sahf
ret
pop
rcll
cli
jge
pop
testl
and
mov
xlat
and
test
or
sub
lret
pop
lock
jmp
fwait
int
test
cld
sub
mov
sbb
insl
push
dec
mov
fwait
lcall
les
push
add
dec
cld
sbb
mov
push
add
push
jnp
xor
out
cmc
dec
and
movsl
cltd
fsts
push
pop
add
mov
call
fldl
or
pop
sub
imul
or
adc
xchg
pop
mov
movsl
cltd
adc
pop
fmuls
push
ret
or
leave
dec
loopne
jge
daa
mov
loope
fcmovne
pminub
rcrl
pop
or
jb
test
inc
adc
xor
add
mov
jnp
or
mov
hlt
inc
scas
mov
jp
xchg
jle
push
xor
ud1
mov
cltd
push
out
pop
aas
dec
movsl
push
aad
ret
mov
and
cmp
cmp
daa
sbb
pcmpeqb
mov
hlt
pop
cmp
movsb
push
out
push
mov
sarl
dec
add
mov
sahf
push
pop
cmp
ss
ss
ds
shlb
and
xchg
fs
xor
scas
inc
inc
push
or
sub
push
dec
push
push
stos
mov
dec
lret
or
icebp
xchg
test
add
sub
sub
push
jge
jmp
xchg
imul
ljmp
in
call
filds
mov
pop
iret
imul
xchg
dec
mov
cmpsb
push
sub
dec
lahf
ret
aam
ficoml
cmp
ljmp
cltd
paddd
fisttpl
cmp
mov
cmp
jl
int
adcb
cmp
jb
cwtl
sub
sub
xor
jmp
sbb
cmpsb
mov
mov
jle
mov
sub
jb
dec
xor
aad
ret
out
mov
daa
pushf
insb
popf
cmp
or
out
fistps
xchg
push
pop
cmp
pop
mov
or
xor
mov
inc
mov
add
je
adc
rcrb
stc
mov
push
dec
push
jne
push
sbb
int3
rol
dec
jecxz
and
fwait
mov
dec
add
xchg
push
jo
sub
movsl
or
or
mov
cwtl
inc
mov
pushf
cld
int3
imul
jg
mov
cmc
loopne
mov
inc
cli
dec
pop
cmp
divl
jbe
mov
scas
in
push
xchg
push
outsb
inc
repnz
cmp
movsb
out
shll
es
inc
xchg
inc
pop
sbb
or
sbbb
mov
iret
pop
mov
or
mov
out
add
xchg
fcompl
mov
mov
pop
mov
sti
loop
in
mov
hlt
fistpll
ret
jge
mov
xor
dec
cwtl
push
mov
in
or
jne
or
aaa
scas
scas
int
push
mov
sub
and
push
jns
mov
push
loop
and
pop
out
xchg
xor
arpl
loope
fnstcw
mov
insl
in
dec
lret
aas
pusha
je
mov
insl
jae
add
cmp
lods
test
sub
bound
mov
cmp
jg
add
dec
int
mov
mov
mov
dec
insb
rol
pop
pop
fs
repnz
mov
pop
adc
push
rolb
dec
pop
inc
or
push
popf
shl
iret
hlt
or
jle
mov
push
daa
inc
pusha
mov
cli
xorb
push
lods
lcall
dec
sahf
push
or
jge
mov
dec
icebp
loop
dec
pop
leave
mov
loope
lods
push
sub
xchg
xchg
jecxz
mov
xchg
clc
mov
pushf
in
dec
jae
cli
out
pop
mov
adc
inc
sbb
fwait
mov
movsb
add
movsb
imul
xchg
scas
push
push
mov
push
jge
mov
mov
lods
int3
lahf
es
adc
ss
sub
ret
push
out
dec
es
dec
clc
dec
cli
add
sub
mov
pushl
inc
fisttpll
outsb
mov
scas
jg
jae
in
dec
shrb
invd
add
xchg
es
sahf
jo
pusha
jbe
pushf
lods
push
xor
cltd
adc
cmpsl
mov
out
inc
xor
push
ja
dec
fstp
dec
stos
jbe
xchg
cmc
dec
xchg
mov
push
jl
icebp
pop
ss
and
imul
test
jecxz
ficoml
aaa
out
mov
je
jg
sub
push
icebp
pop
call
dec
fcoms
xchg
jg
jecxz
fdivrs
or
in
dec
loopne
xchg
mov
mov
fsub
dec
cwtl
ss
cs
repz
push
rcl
fs
sub
fwait
sub
jns
xor
pop
push
stc
xchg
jmp
push
xor
pop
stos
sbb
sub
in
push
sub
dec
and
pop
mov
inc
bound
mov
fcomi
sbb
nopl
out
mov
ret
cld
jle
outsl
jno
or
sub
mov
jbe
sub
pusha
xor
cmc
sar
sub
pop
jb
add
dec
movsl
pop
stc
sbb
inc
das
stos
jae
pop
adc
mov
hlt
out
sbb
repnz
inc
out
std
dec
fisttpl
mov
jnp
mov
push
je
xor
adc
lods
push
or
call
adc
pusha
cmp
add
add
push
xor
jmp
adc
rolb
clc
fsub
icebp
insb
add
mov
pop
jb
add
push
jne
loope
mov
jmp
fnstsw
xchg
or
lods
sub
scas
mov
insb
enter
inc
data16
mov
lret
popl
mov
ficoms
add
jnp
cmp
or
adc
jbe
mov
lret
jmp
std
pop
cmpsb
stc
jmp
sbb
into
jecxz
xor
test
push
imul
fchs
jmp
lea
repz
fs
aas
es
sub
mov
loope
push
cli
xor
icebp
jbe
inc
cmp
ret
mov
call
sub
add
cwtl
mov
scas
jl
rorb
in
adc
cli
fnsave
mov
inc
cltd
movsl
pop
fiadds
ror
testl
mov
rolb
jae
pusha
popl
fs
or
int3
sahf
bnd
dec
dec
fisubrl
jae
call
xchg
loope
sub
cld
push
adc
out
outsl
cli
cmp
push
daa
das
mov
push
dec
rorl
cld
sub
mov
insl
or
and
scas
pop
inc
add
gs
nop
decb
xor
mov
ret
cmp
pusha
scas
dec
fmul
dec
cmp
push
xchg
shrl
adc
mov
call
xchg
ja
scas
sbb
scas
repz
jno
out
xchg
and
jmp
sahf
rclb
in
movsb
and
scas
into
jo
or
aad
insl
cmp
jnp
icebp
std
jg
mov
imul
cmp
pop
jle
cmp
fsts
jg
add
lahf
lcall
xchg
lret
imul
jmp
les
movsb
add
add
add
outsb
fstl
out
pop
icebp
fs
push
scas
mov
xchg
jno
jno
jb
out
jno
jl
inc
push
ret
cs
cmc
push
ljmp
sbb
movsl
pop
pop
mov
insl
pop
and
lea
pop
out
jg
aam
xchg
jle
xchg
sbb
add
test
insb
adc
xor
adc
mov
bnd
mov
mov
add
cld
cmp
daa
mov
mov
shll
xor
adc
test
push
insl
pop
in
in
add
and
xchg
pushf
fdivrs
mov
and
xchg
repnz
cld
or
jg
mov
dec
pop
jbe
imulb
push
sub
in
mov
sub
xor
test
pand
dec
mov
mov
sbb
movsl
sti
int3
adc
xchg
aas
fidivs
dec
shll
outsl
adc
push
cs
fsub
dec
imul
mov
inc
mov
xor
and
fsubrl
gs
dec
fcompl
sub
and
jbe
incb
push
mov
push
mov
lds
sbb
xchg
mov
out
lods
testb
cmpsl
xor
lock
xlat
nop
sbb
lock
lods
lahf
and
sahf
and
jp
test
add
jo
sub
testb
push
fisttpll
gs
in
cmp
clc
jp
fcmovne
cmpb
xor
jmp
in
out
jmp
insb
insb
pop
mov
std
mov
nop
jne
mov
stc
les
scas
mov
mov
xchg
push
stos
dec
cmp
jo
adc
cmp
arpl
pop
mov
jbe
jbe
xor
cmp
push
cmp
cmp
push
bswap
or
sub
fwait
or
and
popa
test
add
jo
repz
or
or
dec
loop
jnp
lret
repz
rcrl
sbb
mov
and
mov
mov
sbb
mov
inc
mov
pop
loop
cmp
xchg
inc
call
push
clc
jnp
push
add
and
stc
pop
mov
lods
adc
cmp
xchg
lahf
add
ret
mov
sub
es
aad
push
mov
mov
lea
cld
cmp
pop
insb
inc
inc
mov
lret
dec
adc
sahf
inc
mov
pop
jg
out
xchg
xchg
mov
scas
cmp
cwtl
pop
cmpsb
and
mov
xchg
add
hlt
or
xor
dec
sub
adc
fwait
aaa
cld
mov
popf
imul
jmp
sbb
out
shlb
imul
jb
fiadds
rorb
pushf
xor
scas
loope
mov
fcmovu
mov
and
add
incl
pop
ficomps
sub
mov
mov
cmpb
ret
aaa
push
add
jle
xchg
scas
cmpsb
mov
cmp
inc
out
and
std
jl
dec
xchg
cmpsb
addr16
repz
scas
imul
mov
add
fsts
pop
loopne
popa
dec
add
dec
push
sub
dec
mov
shll
and
mov
js
sbb
addr16
rcrb
loop,pt
sub
fiadds
and
adc
push
adc
xchg
ja
jnp
sahf
shll
inc
leave
aad
lds
rcl
jnp
xor
mov
cmc
inc
xor
inc
cmc
lret
mov
cld
jbe
out
mov
aaa
data16
inc
mov
cmpsl
inc
mov
test
dec
fstp
repnz
dec
testb
xchg
sbb
dec
xchg
jne
repnz
imul
fisttps
cwtl
lea
fs
cmp
xchg
gs
xchg
out
xor
adc
stos
xor
daa
cs
and
mov
adcb
mov
fcmovnb
loop
and
in
xlat
sbb
sub
and
cmp
roll
jae
jns
sahf
or
daa
pop
lods
and
dec
dec
lods
je
insl
jne
cmp
fisubrs
push
shl
cld
adc
mov
cmp
jg
stos
jl
into
jnp
imul
stos
xor
and
outsl
shll
mov
sarl
xor
jae
push
out
and
bound
push
mov
push
adc
sub
adc
xorb
xor
in
jno
adc
pop
mov
mov
and
push
inc
adc
stos
cld
out
ljmp
notl
cwtl
jno
nop
mov
cmpb
push
out
dec
cli
lret
or
jmp
stos
les
adcl
mov
adc
jg
push
popl
test
pop
es
imul
push
jmp
clc
dec
mov
mov
punpckhbw
fidivs
push
mov
incl
out
data16
fs
jle
or
xlat
and
les
xchg
mov
loop
fbld
or
sub
daa
into
sti
je
ror
cmc
inc
inc
rolb
xchg
mov
and
loopne
int3
xchg
jmp
imul
fcmovne
pop
mov
push
fbld
or
mov
jbe
adc
mov
pusha
cli
or
inc
adcb
sub
xchg
lret
out
or
in
lret
inc
mov
fisubs
push
inc
jmp
sub
sub
das
add
or
es
adc
testl
rclb
xchg
adc
push
test
loopne
mov
imul
out
sub
js
mov
xor
or
lret
push
jmp
rcll
inc
mov
jne
inc
push
mov
push
orb
push
or
sbb
scas
imull
js
sbb
sarl
test
lcall
push
ljmp
sti
sub
xlat
jcxz
bound
cmp
das
hlt
push
pop
hlt
push
int3
sbb
dec
or
xor
push
ds
and
push
das
test
xor
push
sub
adc
mov
adcb
aad
out
push
add
shlb
out
mov
fwait
jb
lds
fldt
push
pop
clc
push
cli
inc
jbe
loopne
mov
add
or
push
inc
negl
imul
gs
lahf
xchg
popa
lahf
pop
addb
out
jo
stos
xchg
cld
js
pop
dec
test
push
and
xchg
mov
lahf
sbb
cmpsl
insl
sbb
xchg
sub
dec
jl
fcomps
cmc
pop
test
test
mov
mov
dec
sub
sbb
cmp
ss
pushf
les
sahf
jg
bound
sbb
pop
cmc
pop
xor
mov
adc
lds
shr
stos
cmpsl
push
sub
pop
inc
push
fneni(8087
inc
jbe
pushf
jno
jmp
push
pushf
clc
inc
incb
hlt
sarl
mov
and
mov
stc
testb
adc
mov
ljmp
pop
xchg
add
pushf
aad
mov
xchg
pusha
dec
repz
mov
out
sbb
les
jns
and
push
sub
jl
pop
xchg
rol
dec
pushf
mov
int
fisubl
ds
in
mov
jnp
les
les
xchg
sub
mov
xorb
mov
stos
imul
dec
pop
cmp
pop
or
adc
sbb
lret
sbb
inc
ret
lods
stos
sub
jno
cs
push
rcll
jl
pop
js
push
push
jne
mov
testb
sbb
xchg
mov
nop
xorl
xchg
sub
aad
mov
dec
xor
incb
inc
rclb
or
adc
repz
or
mov
pop
loop
mov
xor
inc
mov
fsubs
cmp
jecxz
jmp
cmc
adc
hlt
scas
xor
cmc
mov
leave
lea
callw
mov
outsb
or
out
xor
loope
jo,pn
or
sti
test
test
aam
jnp
dec
int
lods
inc
xchg
jge
fistps
popa
inc
sub
mov
into
or
imul
push
inc
jae
rolb
dec
imul
inc
in
and
inc
jecxz
push
add
fidivrs
or
stos
incb
notb
push
stc
sbb
sub
imul
js
mov
inc
es
out
clc
mov
sub
daa
test
dec
jo
push
xor
test
cmp
adc
int
xchg
test
arpl
fnstenv
sbb
jg
mov
jae
sub
fsubrl
pop
repz
popa
ljmp
outsb
adcl
gs
jno
cmp
dec
test
cltd
xor
cmc
or
inc
push
pop
jl
cmp
jns
stos
mov
jecxz
sbb
lret
loope
test
and
jl
add
mov
push
sahf
scas
je
push
inc
jg
lret
cmp
inc
jns
dec
xchg
sahf
out
cld
mov
bound
xchg
push
push
xchg
or
stos
rclb
bound
out
lock
ret
adcb
pop
cmp
and
hlt
or
cmp
clc
mov
dec
out
test
mov
je
inc
imul
xor
and
test
mov
int
mov
outsl
or
add
into
into
mov
lret
rorb
loope
rcll
xor
pop
jp
test
lahf
push
jo
fs
daa
cmp
je
pusha
cli
loopne
fxam
xor
sbb
sbb
stc
pop
js
test
pushf
fadd
data16
push
jecxz
repnz
cli
in
push
pushf
mov
cmp
jp
repnz
sbb
push
jns
inc
rcr
sub
lret
dec
daa
sub
int3
mov
xchg
dec
lods
dec
sarb
push
rcl
out
stos
pop
movsl
sbb
jbe
pop
push
push
mov
add
mov
xor
pop
fldt
pop
popa
cmc
xchg
clc
mov
shrl
pop
notb
xlat
cmp
ret
aas
iret
xchg
inc
sbb
pushf
jae
cmpsl
insb
cmpsb
or
push
add
push
mov
add
icebp
adc
jl
dec
dec
ljmp
rcl
jno
call
pusha
cmc
dec
pop
sbbb
scas
nop
cmp
lds
pushf
movsb
ret
mov
addr16
sub
fldlg2
sbb
mov
mov
nop
into
das
rol
pushf
daa
sub
cmp
mov
std
jmp
add
jo
loope
mov
roll
sbb
adc
push
mov
mov
mov
fs
xor
mov
bound
push
enter
lock
lahf
ret
add
inc
jo
dec
jns
shlb
aad
test
repnz
roll
ljmp
incl
nop
inc
in
iret
gs
daa
inc
xchg
addl
scas
cwtl
inc
test
cmp
ret
or
fcoms
adc
sbb
and
push
pop
dec
sub
adc
shll
and
lock
and
mov
adc
mov
insb
idivl
out
mov
xchg
xchg
inc
sbb
enter
insb
stc
sbb
cmp
xchg
and
mov
iret
dec
pop
dec
jge
nop
cs
pop
cwtl
call
insb
inc
xchg
adc
fisubrl
aad
mov
pop
in
insl
push
fisttpl
and
xlat
ljmp
hlt
bound
les
cs
mov
cmpsb
js
out
aaa
cmpsb
std
lods
jae
xchg
sbb
push
inc
sahf
popa
shrl
arpl
sub
xchg
std
data16
or
inc
lret
xchg
mov
out
sbb
add
aaa
push
xchg
jle
sahf
mov
and
jbe
xchg
cmp
mov
cmp
mov
mov
mov
cmp
xlat
cmovne
hlt
pop
xor
dec
push
cmp
leave
cmpsl
ret
icebp
imul
cmp
adc
lcall
jb
pop
jne
inc
movsl
ret
test
stc
pop
in
lea
push
lahf
mov
movsl
and
daa
je
jmp
in
out
in
pop
sbb
xor
stos
jle
jge
insb
fcoml
sub
dec
add
outsb
loope
dec
push
and
jmp
adc
es
sbb
and
and
mov
jb
or
sti
mov
ret
inc
popa
mov
mov
cmp
xor
fists
pop
test
mov
notb
xchg
pop
mov
mov
mov
movsl
adc
lret
xor
pop
fidivrs
inc
daa
repz
ds
push
movsl
mov
dec
fstl
mov
test
frndint
arpl
add
iret
cs
xchg
and
faddl
mov
adc
xchg
ret
add
lds
sub
dec
inc
push
pop
and
cwtl
jle
mov
push
cmp
inc
cltd
mov
sbb
popf
int
pushf
ljmp
mov
in
inc
and
fistps
les
call
js
and
xchg
aad
add
sbb
adc
sub
jne
and
push
data16
sbb
pop
movb
pushf
add
xor
shrl
mov
push
dec
mov
shll
out
and
dec
push
jmp
and
and
stos
mov
clc
loopne
mov
imul
inc
inc
pushf
push
addl
aad
xor
and
inc
mov
fcomps
adc
jnp
pop
pop
outsl
aas
aad
push
mov
push
dec
dec
jnp
loope
arpl
out
add
cmp
imul
cmp
and
dec
pop
mov
jae
push
je
out
jg
subb
jne
fdivs
jle
bound
mov
stc
xor
mulb
inc
daa
arpl
mov
xchg
aas
cmp
dec
pop
iret
adc
mov
lods
push
jg
loope
int
jno
lock
ret
sbb
js
filds
sbb
pop
mov
shrl
dec
jnp
xor
xor
cs
daa
les
sub
cltd
push
or
stos
jg
movsb
insl
xor
sbb
lods
popf
xor
cmp
mov
lea
pop
xor
popa
jle
mov
add
aad
es
xchg
mov
dec
loopne
mov
push
xor
pop
icebp
adc
xchg
inc
cmp
fs
adc
addb
sti
xor
cwtl
pop
scas
sbbl
imul
pop
inc
cmp
xor
insb
pop
jmp
addr16
mov
fs
pop
sbb
lds
mov
stos
mov
mov
dec
sub
loop
xor
xchg
mov
fiaddl
mov
jo
push
adc
add
cmp
jmp
sub
push
decb
icebp
testb
jg
xchg
cli
sub
test
test
xchg
xchg
xor
inc
jno
jp
ret
xchg
sub
bound
andl
cmpl
call
sub
mov
xchg
push
lahf
ffreep
aam
aas
dec
loop
pop
jmp
xchg
scas
jge
adc
not
rcl
fsts
repz
add
ror
loopne
cmc
in
faddp
adc
mov
lock
push
and
sub
pop
jnp
gs
xor
push
adc
mov
std
dec
jle
adc
imul
fsubr
clc
lods
push
xchg
push
inc
out
xor
in
adc
inc
mov
pop
mov
movsb
adc
lock
add
pop
jb
inc
sbb
adc
jo
les
aad
cmp
mov
mov
sarl
loop
sarl
lock
add
insl
inc
fildl
push
test
jno
adc
nop
or
or
mov
test
xchg
pop
mov
add
cli
sti
pop
cmp
jae
xchg
and
ss
cmp
xchg
subl
cwtl
mov
mov
jp
inc
or
les
pop
pop
pop
xlat
imul
incb
insb
mov
inc
dec
rcrl
dec
adc
sub
and
cmpsl
xor
sub
jmp
cmpsl
dec
orl
filds
mov
std
mov
addr16
insb
insb
mov
push
pop
push
aas
xchg
or
shlb
fistps
ret
mov
jb
pop
dec
cs
cmp
rorl
push
rorl
mov
daa
xchg
in
xor
cld
inc
xchg
pop
or
jle
mov
cmp
sub
mov
loope
and
in
orb
push
adc
cld
xchg
test
arpl
push
out
push
cli
ret
iret
mov
push
push
sub
or
arpl
outsl
adc
cmpsb
inc
in
fs
mov
pop
xor
outsb
addb
xchg
in
push
push
sbbl
jge
and
in
pushf
test
or
push
jns
fstpt
and
aaa
lret
aad
pop
nop
lds
imull
lret
adc
fstl
push
push
rcrb
repnz
std
fdivl
xchg
or
mov
imul
xor
je
stos
cld
jbe
in
scas
jb
add
or
cltd
inc
pop
popf
rcrb
popa
lret
mov
mov
xchg
fnstsw
dec
cmp
popa
pop
into
nop
xchg
pop
sbb
sub
xor
mov
jns
in
xchg
lret
push
sub
mov
adc
ret
jne
pop
loop
xchg
adcl
pop
jbe
mov
cmc
scas
mov
test
test
jmp
cmp
mov
mov
lahf
xor
inc
addr16
sub
test
inc
pop
mov
inc
in
hlt
jne
mov
dec
sbb
dec
int
cmp
inc
cmp
jg
push
ja
leave
imull
ret
xor
mov
mov
xor
js
push
cmp
flds
mov
mul
repz
xchg
push
jo
inc
or
icebp
ja
cmp
xchg
fistpll
gs
adc
shll
and
push
test
fcmovb
jae
pop
lcall
fistps
adc
insb
popf
js
xchg
fbstp
jl
ficoml
jge
je
lods
inc
ret
imul
xchg
dec
dec
test
dec
andb
daa
sbb
sub
mov
test
xor
add
pop
xchg
jl
xchg
lods
dec
mov
mov
sub
sbb
lahf
mov
in
or
scas
movsb
sub
pop
dec
int
mov
jns
ds
ljmp
xlat
mov
mov
jne
jle
pop
jl
xchg
cmc
movsl
shll
std
dec
mov
mov
test
rolb
ret
mov
cld
ret
std
enter
jb
in
push
inc
push
aam
push
inc
fs
fcoml
dec
cmpsl
lods
movsl
fwait
insb
gs
test
xor
dec
cmc
dec
imul
addr16
pop
cmp
adc
sub
cltd
cmp
xor
bound
out
insl
sahf
or
fsubr
in
outsl
enter
cmp
pop
inc
mov
hlt
adc
scas
pop
sbb
jo
and
icebp
pop
lcall
cmp
pop
fnstcw
iret
sub
push
mov
adc
lods
inc
das
rorb
xor
cltd
or
je
repz
arpl
rcr
inc
jl
mov
movsb
bound
cmp
or
add
outsb
add
testl
gs
xchg
insl
cmpsl
repnz
imul
add
mov
repnz
add
sub
popa
pop
lret
cld
and
push
jae
dec
cmp
xlat
pop
stc
imul
mov
mov
cltd
cs
push
ds
dec
or
repnz
scas
jp
inc
mov
push
loop
call
jo
mov
mov
dec
sbbb
cmp
cmp
pop
sub
in
pop
sahf
ja
pusha
lods
pusha
shrl
sahf
sbb
and
sar
xchg
into
xchg
sub
sub
es
adc
out
test
out
nop
cmp
add
stc
in
jne
mov
mov
jecxz
fsubrs
shl
std
cs
in
into
lock
neg
dec
sub
sbb
push
push
outsl
sbb
lahf
repz
rorb
and
mov
leave
dec
lods
dec
lahf
adc
push
jge
cmpsl
neg
clc
adc
leave
in
mov
mov
sbb
call
fldt
pushf
es
mov
repnz
xlat
jge
push
adc
jbe
push
push
mov
js
out
jbe
jb
jns
mov
xorl
push
bound
clc
fbstp
jb
inc
xchg
adc
jle
jnp
pop
mov
sbb
push
fcomps
movsl
outsl
mov
jbe
out
cmp
jmp
repz
shufps
push
ficomps
cmp
jge
pop
or
nop
sbb
jl
test
adc
shlb
ja
fstps
add
aas
mov
jge
out
je
mov
mov
lret
and
or
mov
sbb
je
pop
xor
fidivl
mov
mov
push
jge
dec
or
scas
mov
pop
shl
inc
cltd
pusha
mov
outsl
or
adc
aad
ss
lds
ficoml
mov
aaa
lret
adc
test
jnp
and
mov
roll
cmp
sbb
mov
jb
mov
jnp
das
xlat
adc
push
addr16
in
rcl
mov
fcomps
xchg
inc
xor
add
and
adc
xlat
enter
insb
cmp
fnsave
mov
repnz
subb
mov
xchg
push
adc
in
cltd
jo
mov
inc
hlt
xchg
imul
popf
push
faddl
and
push
or
add
mov
int3
mov
push
int
pop
cmpsl
mov
das
outsb
or
sub
cmpb
aaa
es
out
or
test
es
mov
clc
inc
lods
ficoms
push
sub
hlt
inc
fnstcw
adc
movsl
mov
lcall
ja
imul
ja
icebp
xor
jle
and
shrb
fs
movsb
rclb
add
cmpsb
pop
roll
push
sub
pop
repz
cmpsb
sbb
ret
sub
mov
xchg
out
scas
stos
outsl
push
mov
push
sbb
lret
ja
js
fdivrl
xor
inc
cmp
enter
xor
push
sub
jmp
fiaddl
fs
mov
xor
iret
mov
or
fnstsw
aas
sbb
ficomps
insl
jae
es
test
xchg
jmp
popa
dec
pop
cmp
xchg
and
dec
cmp
push
mov
aam
mov
rcrl
jb
push
icebp
loope
jle
cmp
cmp
cmp
xor
cmp
out
sti
sti
in
sbb
pushf
std
jbe
addr16
out
dec
sti
mov
lods
adc
nop
jne
mov
and
aas
pop
pop
push
add
or
int
inc
ss
inc
lret
add
inc
add
mov
les
dec
push
dec
scas
cli
inc
lds
dec
dec
or
mov
and
mov
jo
int
rcrl
fwait
iret
clc
push
fs
arpl
fidivl
mov
mov
stos
push
pop
or
or
add
leave
pop
cmpb
shlb
mov
in
aaa
aad
mov
test
lock
pop
mov
mov
xchg
mov
pop
pop
add
lahf
fsin
js
test
jns
mov
shl
aas
adcb
xchg
xchg
data16
lahf
outsb
jae
mov
popa
jp
or
shll
test
ja
mov
cmp
clc
rorl
sti
pop
xchg
push
test
ss
roll
jle
mov
dec
test
lahf
inc
pop
ss
ss
and
leave
pusha
mov
lds
sbbb
sti
push
xchg
jbe
inc
or
jns
flds
rcr
nop
push
mov
adc
stos
jmp
add
mov
aad
mov
mov
lods
stos
pop
test
xchg
xchg
pop
pop
pop
lock
jne
lret
pusha
xchg
jmp
leave
imul
lret
cltd
sahf
pop
iret
jae
incl
jmp
faddl
inc
subl
fsubrs
push
and
in
call
and
cmp
xchg
rcrl
loopne
adc
adc
lock
repz
xchg
add
es
arpl
out
adc
dec
push
movsb
repnz
xor
and
jp
or
mov
cmp
xchg
or
idiv
cmp
push
scas
clc
rorl
inc
movsb
shl
movsb
and
adc
mov
sub
shrb
fucomp
pop
dec
out
pushf
xchg
lahf
out
xchg
loopne
lret
stos
mov
cwtl
cs
mov
mov
push
jns
inc
dec
ret
std
jo
outsl
xor
jp
movsl
jnp
inc
repnz
movsb
rcrl
pop
nop
mov
test
insl
sti
push
and
sbb
adc
jbe
add
lock
adc
sub
xchg
mov
mov
repz
bound
jl
add
push
dec
enter
ja
andl
icebp
out
and
mov
add
jge
jb
pop
jg
gs
cli
or
xchg
aaa
cld
mov
inc
xchg
loope
inc
insb
cmp
mov
mov
loopne
movsb
jl
adc
mov
aas
cmp
jno
xor
cs
iret
inc
lret
pop
sub
sbb
xor
fisttps
xor
out
test
and
scas
cmc
xor
iret
mov
lods
lea
push
sbbl
fimull
out
add
add
cmp
mov
mov
outsl
mov
lahf
cmp
outsb
subb
aaa
xor
add
int3
adc
inc
push
popf
push
in
fdivrl
and
or
outsl
add
pusha
add
push
and
dec
cmp
shrb
add
daa
xchg
pop
cmp
adc
jge
lret
jmp
jae
pop
xor
clc
add
xchg
std
push
xor
cwtl
and
push
jo
hlt
les
ljmp
cmp
out
lcall
rol
fidivrl
xchg
xchg
outsb
fldcw
cmp
jne
outsb
ret
add
outsb
jne
jle
stc
aad
mov
xchg
dec
cli
cld
hlt
lds
enter
popa
jns
test
negb
js
sub
dec
das
xchg
sbbb
dec
xchg
xchg
add
addr16
lock
bound
xchg
mov
mov
dec
cmp
out
sub
out
loopne
out
sub
roll
pop
mov
mov
lahf
icebp
popa
lods
dec
aaa
cmp
neg
lahf
aaa
mov
fmuls
xchg
arpl
mov
push
lret
in
popf
lods
xor
icebp
or
popf
test
je
dec
and
int
push
mov
and
mov
pop
and
outsb
mov
add
sub
mov
fists
push
popf
out
out
jge
imul
and
dec
rorb
mov
out
cmp
sub
outsb
mov
cmp
leave
push
or
pop
jge
insb
outsl
mov
movsl
adc
mov
mov
stos
ja
xor
scas
dec
stos
xor
outsb
rcrb
pop
sub
inc
jl
sbb
and
cld
fidivrl
iret
pop
xor
mov
add
sub
into
rclb
jo
add
lahf
pop
popf
mov
push
orl
and
mov
or
popa
sar
mov
adc
mov
jmp
sub
xchg
or
inc
sbb
push
pop
shl
pop
in
and
out
out
xor
mov
xchg
ret
sub
mov
scas
and
subb
mov
mov
leave
mov
ret
pop
jns
mov
xchg
add
repz
xorb
fists
and
fildl
dec
add
push
mov
stos
lods
addr16
lods
dec
mov
push
movsl
xchg
mov
iret
adc
data16
ss
in
or
outsl
mov
cmp
lods
mov
and
ljmp
push
stc
inc
jns
ljmp
les
imul
inc
jg
lcall
imul
out
in
add
xchg
icebp
pusha
push
and
movsl
mov
mov
icebp
sub
jp
xchg
jle
outsl
mov
imul
fisubl
mov
scas
jne
jo
lret
in
mov
pop
xor
xchg
push
mov
insb
ljmp
mov
int3
jno
xchg
sbb
inc
push
add
xlat
leave
hlt
jb
cmp
and
lea
cmp
mov
or
imul
test
mov
and
mov
sbb
daa
push
out
xor
push
add
push
adc
aas
jae
jmp
dec
pcmpgtd
pop
mov
lock
xor
mov
push
add
push
mov
lret
inc
int3
jp
pushf
lcall
lahf
or
pop
dec
mov
cmp
mov
cmpl
stc
cmp
out
dec
fcmovbe
ret
bound
cs
sub
xorl
xor
and
ret
test
clc
repnz
add
scas
movsb
jmp
push
push
scas
cmp
and
mov
movsb
push
cmp
int3
dec
mov
push
sbb
adc
cld
ss
sbb
push
rorb
jb
jecxz
out
je
jns
das
in
cltd
and
rorl
lods
stos
scas
sbb
fmuls
add
jb
push
popf
and
sub
mov
dec
into
or
and
and
cmp
dec
andl
int
xchg
in
jecxz
push
mov
mov
mov
cmp
cmp
int
and
dec
movsb
in
push
enter
in
xchg
adcb
pop
push
jp
cwtl
add
push
inc
and
roll
stos
stc
inc
pop
lahf
shrb
cmp
inc
shll
loopne
sub
pop
jb
mov
mov
pop
jecxz
rorb
data16
test
mov
popa
xor
mov
add
mov
cs
xchg
scas
mov
push
repz
fwait
dec
test
stos
pop
int3
dec
fcomps
mov
push
push
jo
mov
pop
cs
in
mov
es
in
loop
mov
inc
push
jmp
test
out
or
xor
xor
js
and
ja
or
cmc
push
outsl
and
loopne
add
jl
cmp
pushf
mov
dec
sub
xchg
push
mov
inc
adc
lods
xor
dec
imul
addl
inc
sub
mov
and
aaa
fnstenv
push
cmpsl
adc
imul
jp
and
jno
fwait
imul
outsl
or
mov
xchg
inc
sbb
fstps
mov
push
pop
test
lods
imul
test
lods
jne
adc
mull
adc
rol
repnz
mov
daa
add
jecxz
xor
sahf
xor
sbb
outsl
fisubrl
xchg
or
mov
mov
out
cmp
pop
dec
mov
fwait
mov
hlt
sbbb
add
stos
pop
vmovdqu
add
maskmovq
negl
out
sub
jge
lret
mov
cs
pusha
add
cmp
jb
push
mov
imul
and
sub
mov
fbstp
data16
dec
push
sub
test
divb
adc
and
inc
cmp
ficompl
insb
outsb
push
xchg
pusha
mov
mov
add
dec
jmp
sbb
popa
push
xchg
add
xchg
pop
je
std
mov
lds
push
jns
stos
shl
stc
mulb
cs
jmp
sbb
cmp
inc
mov
push
lods
mov
mov
push
cs
out
add
xchg
xchg
mov
nop
sub
jl
lcall
les
popa
jo
sbb
add
jl
dec
push
lret
inc
imul
repnz
mov
mov
xchg
cmovge
cmpsb
xor
xorl
mov
sub
sub
leave
shrb
shll
loope
scas
daa
xor
jno
lock
or
fistl
jno
orl
push
mov
mov
pop
xor
hlt
ds
jmp
sti
jbe
gs
scas
lds
mov
cld
loope
out
pop
shll
ljmp
js
mov
ljmp
cmpsl
push
jo
arpl
jnp
sub
xchg
jne
inc
sub
mov
lea
out
aaa
shlb
enter
mov
cmp
icebp
std
jae
mov
pop
test
scas
jp
mov
int
lock
decb
out
adc
push
icebp
loope
pop
lods
sbb
pop
loopne
dec
aad
out
sub
movsb
pop
adc
mov
lea
pop
cmpsl
stos
mov
jno
xor
adc
test
shlb
mov
ret
repnz
sub
pop
int3
loop
pop
pop
into
xor
int3
iret
mov
sbbb
sti
mov
and
sbb
dec
shll
mov
fwait
push
arpl
lds
stos
mov
fdivs
je
pop
xchg
mov
aas
push
or
mov
xchg
sbb
outsb
roll
push
in
mov
mov
or
sub
ljmp
xor
jns
into
mov
dec
bound
mov
cli
jo
scas
xchg
je
insl
mov
pusha
adc
loop
mull
jb
ljmp
data16
cwtl
test
sbb
mov
inc
mov
bound
mov
sahf
cld
inc
inc
out
andl
push
std
xor
and
pop
jle
or
pop
cld
lret
xchg
dec
aas
das
and
pop
jnp
lods
pushf
scas
pop
sti
inc
sub
push
insl
insb
and
idivb
or
lock
xchg
xchg
popa
in
adc
std
imul
addb
mov
shrb
cmp
std
sbb
add
lea
mov
xor
jp
stos
adc
mov
lds
jnp
mov
cltd
ficoml
test
mov
or
dec
xchg
xor
jecxz
cmp
sti
inc
movsl
or
push
sbb
lahf
and
xchg
mov
sbb
repnz
orb
mov
and
loopne
imul
mov
jl
out
mov
lock
pop
jbe
xor
sbb
xchg
push
test
stos
icebp
stos
std
xchg
dec
rorl
mov
adc
cli
aam
mov
mov
mov
mov
cs
shrl
gs
push
imul
insl
push
cmp
ret
sbb
sub
cmp
icebp
imul
lds
icebp
push
pop
mov
insl
or
pop
aaa
not
sbb
es
test
cmp
cmp
jle
loope
stos
imull
lds
lods
insb
mov
push
cmp
jb
dec
pop
mov
mov
jno
out
push
jmp
mov
and
xchg
mov
push
pop
iret
add
cwtl
fdivrs
idivl
scas
add
or
mov
sbb
scas
gs
inc
pop
mov
jge
dec
in
or
pop
xlat
into
fiadds
adc
ss
sub
mov
cmp
hlt
repz
stos
pop
out
movsl
pop
add
jno
in
movsl
mov
xchg
sbb
addr16
xor
xchg
add
cmpsl
clc
or
lds
loope
fimull
mov
mov
enter
aaa
push
jne
out
ds
push
push
pop
pushw
push
cmp
int
xor
and
mov
test
imul
dec
pop
push
fsubrp
mov
insb
and
imul
mov
mov
inc
mov
shlb
mov
pushf
ja
mov
and
cmc
push
cmp
into
rolb
or
cmp
fidivl
loopne
sub
xchg
pop
fs
add
pop
call
sub
add
popa
xchg
lret
mov
pop
mov
sub
and
je
xchg
mov
add
xchg
loop
jne
stc
mov
js
xor
inc
xor
jg
push
push
aam
loopne
xchg
shl
aas
sbb
stos
pop
jg
jl
mov
pop
or
adcb
je
rcrl
sub
sbb
adc
lahf
adc
mov
inc
and
in
inc
xlat
ret
inc
or
gs
notl
or
jb
inc
test
jecxz
mov
mov
mov
xor
mov
mov
fisttpll
movsl
cmp
fisubs
pop
cs
xchg
subb
cld
push
jle
pop
sbb
iret
or
xor
push
pop
jp
adc
lcall
fistps
mov
sub
xchg
mov
mov
ret
es
std
inc
xchg
decb
dec
andl
push
sub
sbb
add
mov
push
push
add
scas
xchg
cmpsl
mov
sahf
jne
add
mov
dec
add
mov
pusha
addb
mov
cmpl
cmpsl
cld
jge
stos
cmp
sbb
jp
jb
das
cmp
lods
sbb
and
pushf
sub
loope
iret
jae
jp
and
gs
fs
mov
xor
in
fsubs
pop
outsl
xor
or
into
or
and
xchg
or
sti
sbb
in
out
push
pop
scas
inc
jp
test
adc
mov
inc
mov
pusha
mov
fcmovbe
xor
inc
push
mov
jne
mov
inc
mov
jge
xchg
jnp
mov
lods
inc
sub
in
mov
jne
fnstenv
push
rcr
jmp
popf
jmp
xchg
push
leave
popf
loope
repz
and
gs
negb
stc
pop
jge
dec
jb
loopne
dec
roll
sbb
sbb
cmova
push
jl
mov
add
adc
xchg
push
xchg
in
dec
cmpsl
mov
aas
jl
lret
xchg
inc
pop
inc
mov
jb
in
cmp
pop
fnstcw
jb
jge
mov
rcl
sub
ljmp
cmp
mov
push
xchg
jg
scas
xor
lahf
adc
repnz
ds
ljmp
mov
xor
into
test
imul
rcrb
jecxz
mov
jecxz
dec
jecxz
mov
enter
mov
js
jbe
or
cli
mov
cmpsl
les
stc
and
shl
and
je
movsl
sbb
nop
or
into
and
subl
leave
cmp
push
jl
das
mov
and
cmp
fidivrs
xor
mov
mov
lods
imull
loope
sahf
out
int
int3
xor
dec
and
ret
lahf
lret
push
pop
stos
int
dec
lods
inc
data16
adc
rorb
push
mov
outsb
repz
ds
mov
testb
cltd
jns,pt
mov
sahf
cmpsb
xchg
pop
inc
decb
cmp
push
or
pop
mov
test
outsb
inc
inc
aad
loop
dec
andb
arpl
xor
ds
ja
lahf
loopne
cmp
lret
lds
xor
pop
es
xor
xchg
inc
push
and
inc
inc
add
fimuls
jp
test
jge
xor
sub
insb
lock
rcrl
pop
ss
add
xor
mov
xchg
test
cmp
dec
inc
dec
out
iret
pop
mov
orb
or
into
enter
mov
sbb
fwait
add
aad
and
mov
and
dec
xor
cmp
jmp
ds
dec
mov
lods
xor
jle
stos
dec
addl
clc
das
mov
loop
jns
mov
or
in
cmp
dec
aam
testl
mov
mov
push
and
inc
xchg
in
push
repz
xor
xchg
int3
idivl
nop
mov
xchg
xlat
popf
or
je
cmp
test
shlb
jl
jno
xchg
push
psubd
push
shrb
hlt
inc
mov
sub
cs
mov
jg
imull
push
cmpsl
lret
push
push
int3
push
jnp
push
sbb
in
shll
stos
sbb
mov
jl
or
jp
or
sahf
adc
dec
xchg
lock
ss
cpuid
out
push
and
mov
mov
cmp
add
push
scas
stos
jecxz
xchg
push
scas
imull
es
addr16
es
dec
or
loope
xor
decb
std
fstpt
and
xchg
lods
xchg
push
leave
mov
pop
mov
inc
cs
add
addr16
mov
push
push
scas
repz
pop
mov
or
es
out
out
mov
lock
jmp
push
pop
inc
test
loope
stos
mov
and
faddl
fistpll
pop
add
push
adc
scas
jmp
mov
daa
jmp
std
std
addr16
das
push
mov
popf
popa
enter
aaa
bt
hlt
test
sub
push
xchg
lret
adc
ja
ja
stos
mov
popa
pop
rorl
dec
mov
pop
push
push
in
cmp
dec
loop
js
mov
pop
daa
fidivrs
dec
icebp
cmp
das
jns
aas
fmuls
xchg
pushf
cvttps2pi
ret
push
cmp
testl
les
push
sub
xor
in
cmp
mov
mov
adc
sarl
mov
add
out
pop
rorl
mov
fcmovnu
push
push
mov
inc
sbb
sbb
divb
mov
xchg
lds
filds
mov
inc
mov
adc
ljmp
cmp
outsb
jo
dec
mov
pop
lcall
mov
xor
inc
xorb
jge
mov
negl
sub
out
sub
mov
scas
pop
jg
inc
jmp
inc
mov
dec
jbe
cmp
fwait
adc
fisttpl
popf
push
in
shl
lock
xchg
loopne
jecxz
or
fmul
cs
sbbl
cmc
xor
int3
push
sub
xchg
add
dec
shr
out
shll
stc
data16
adcb
int3
xchg
mov
jae
sbb
mov
sbb
or
addl
dec
mov
ja
mov
dec
cmp
pop
aad
test
add
pusha
inc
fwait
mov
jno
sbb
stc
incl
flds
stos
push
fildll
xlat
and
mov
push
xchg
imull
call
imul
gs
dec
gs
leave
test
and
rclb
scas
je
adc
inc
pop
pop
test
aas
jbe
lds
cmp
xor
jno
sbb
out
fstpt
push
mov
mov
xlat
mov
mull
jmp
pop
test
xlat
mov
jl
jo
push
xchg
test
or
aad
loop
idiv
mov
xchg
cltd
cmp
test
rcr
testb
add
inc
xchg
cmp
mov
inc
add
test
cmpsb
dec
clc
popa
xchg
jnp
mov
les
jnp
jne
mov
xchg
std
lock
push
adc
pop
jne
jge
or
xchg
fnstcw
mov
mul
or
std
and
lods
mov
sub
std
dec
mov
xchg
mov
loop
imul
aad
jp
pop
hlt
int
jle
call
mov
adc
xor
jg
push
cs
push
push
cmp
test
cli
stos
jge
dec
add
pop
cli
sbb
mov
pop
xlat
std
out
shlb
add
testl
outsl
aad
lcall
push
aad
sub
adc
test
xchg
test
loope
ret
and
ds
or
call
or
pop
lds
pushf
sbb
js
pop
mov
pop
ret
test
mov
fidivrs
in
popa
imul
dec
fistps
xchg
pop
lcall
inc
push
lret
mov
xor
out
mov
shr
mov
imul
mov
mov
and
mov
dec
mov
sbbl
hlt
arpl
xor
icebp
fidivrs
xchg
clc
dec
in
jmp
jmp
outsb
inc
js
lahf
test
in
je
iret
sbb
push
sarb
rcrl
dec
call
leave
insb
add
shlb
out
scas
jb,pn
jnp
loopne
lcall
mov
in
cltd
xchg
mov
cmc
mov
add
orb
pop
js
test
inc
neg
inc
inc
inc
pcmpgtw
jge,pn
stos
mov
mov
test
fcoml
or
adc
mov
cltd
in
jb
jg
loop
xchg
lds
pop
inc
jno
xlat
std
mov
mov
popf
fsubl
push
pop
mov
push
dec
gs
pop
je
xor
out
pushf
test
and
movsl
clc
int
cmp
or
jo
dec
push
sub
inc
cmp
mov
hlt
push
and
call
sbb
repnz
add
int
cmp
js
stc
xchg
rcrl
out
mov
push
push
sub
push
jae
add
cwtl
bound
loop
xchg
cmp
unpckhps
ljmp
pop
sbb
mov
pop
fucomi
adc
push
ljmp
pop
imul
push
jle
pop
mov
pusha
in
bound
stos
xchg
arpl
in
ret
aam
ds
add
mov
push
xor
fisubs
decb
movsb
ljmp
fwait
or
xchg
xchg
xor
push
loope
and
movsb
cmp
cld
and
popf
mov
jp
cmp
mov
cmpsb
lret
aaa
or
jmp
sub
dec
push
sbb
aas
jl
aas
fdivs
or
shlb
es
xlat
adc
mov
cmp
mov
out
xchg
dec
je
sub
inc
cmp
xor
add
sahf
pop
popa
cmp
stos
sti
addr16
mov
scas
jle
mov
inc
ret
xchg
lret
or
testl
or
pop
jg
mov
xor
add
enter
aas
lock
add
xlat
sbbb
adc
rclb
sti
xlat
jne
mov
xlat
or
in
jmp
xchg
xor
push
xor
ret
xchg
mov
or
mov
mov
imul
or
cmp
mov
and
repnz
jae
sub
popa
dec
jecxz
add
clc
pop
addr16
mov
aam
mov
cmp
mov
insl
fisubrs
out
cmp
jge
ret
dec
xlat
pusha
ret
stos
aaa
sbb
dec
adc
or
loope
ret
sti
out
addb
push
push
movb
jne
stos
shrb
mov
data16
mov
jbe
push
mov
inc
xchg
push
cmp
jmp
lods
insb
sti
stos
ljmp
sbb
hlt
rcrb
mov
sub
rcr
sub
ret
jnp
int3
jge
inc
call
xchg
push
aas
jge
ljmp
je
lret
movb
dec
cld
sbb
lds
mov
in
push
sbb
pop
or
lret
pushf
jo
arpl
into
inc
or
lock
jp
lds
pop
lea
cmp
sar
in
dec
jno
icebp
ret
out
jge
cltd
sub
mov
popa
sbb
fcmovnbe
lods
push
gs
dec
pop
xchg
movsl
jp
mov
lret
dec
pop
gs
mov
pop
adc
into
in
mov
xchg
call
fdivrl
jae
inc
pusha
pop
outsl
jae
push
cs
insl
fisubs
and
repz
dec
cs
push
aas
leave
das
fs
adc
dec
mov
sbb
dec
insl
popf
test
int
imul
out
push
and
sbb
mov
sbb
sub
ret
rorl
fwait
testb
pop
loope
mov
xor
mov
mov
dec
pusha
mov
inc
loop
jne
jp
inc
mov
push
mov
mov
cltd
data16
test
sbb
fidivl
mov
sti
xchg
add
sbb
pop
out
clc
mov
scas
or
iret
mov
jns
mov
loopne
or
jp
or
mov
fsubs
sub
cmp
jo
sub
int
jmp
fwait
xor
int3
mov
mov
rorb
inc
fwait
sahf
test
stos
outsb
mov
adc
push
mov
mov
nop
sub
addl
lret
push
push
pop
bound
adc
push
push
jmp
bound
xchg
loopne
mov
add
jno
gs
testb
arpl
pop
ftst
push
or
inc
inc
add
inc
in
or
inc
imul
mov
ficoms
gs
xlat
inc
pusha
cmp
push
jge
jl
subb
pop
mov
inc
adc
lds
in
xor
gs
sahf
lcall
and
mov
sub
mov
cmpsl
out
cwtl
or
scas
add
repnz
mov
scas
xchg
sbb
jno
pop
andb
xlat
rcll
mov
mov
adc
test
or
cwtl
repz
mov
pop
add
pushf
push
add
cs
jg
cmc
mov
bound
inc
sahf
xor
mov
mov
rorb
sbb
jb
pusha
gs
or
add
pop
lret
out
pop
icebp
jge
adc
pop
jns
ret
or
cwtl
or
pop
mov
mov
xor
dec
loopne
jns
adc
jbe
sub
sbb
fisttpll
popa
dec
xchg
pop
testb
aad
pop
mov
fisubs
or
cmc
xchg
dec
mov
call
inc
mov
sub
popa
mov
les
andb
loop
jns
and
bound
lea
ljmp
pop
dec
fisttps
jnp
cmp
add
jo
push
push
adc
adc
add
int3
or
cs
mov
imul
and
pop
or
jg
sub
push
int
and
dec
ljmp
aas
add
dec
outsb
sbb
sbb
jl
fnstenv
subl
jl
pop
mov
in
js
out
stc
in
mov
or
xchg
arpl
pop
jno
cmpsl
adc
fcoml
mov
xor
in
push
adc
dec
xchg
sbb
dec
test
push
fsubs
xlat
adc
loopne
notl
jecxz
push
jae
xlat
dec
xchg
xchg
scas
add
jl
fstpt
and
mov
push
or
ret
stc
push
mov
stos
int
ret
rclb
pop
cmpsb
stos
aas
xchg
es
in
out
jnp
xor
rcrb
mov
mov
jl
stos
ja
hlt
jnp
dec
sub
subb
pcmpgtd
decb
xor
out
inc
mov
dec
addr16
aaa
mov
mov
insl
xchg
mov
imul
clc
or
xchg
rcrb
lret
cs
mov
mov
hlt
dec
pusha
pop
movl
push
out
and
shlb
add
inc
lods
rcrb
xchg
cmp
lret
or
nop
cmpb
push
call
in
xchg
incb
es
mov
xchg
add
jo
push
cli
and
sbb
jmp
xor
push
adc
mov
mov
stc
mov
ljmp
sub
popf
sub
aam
jle
cmp
pop
cmpsb
sbb
mov
dec
jno
or
add
shll
cmpb
jne
sahf
pop
xchg
daa
out
test
or
sub
orb
sbb
and
xchg
mov
xchg
out
lret
cmp
adc
int
push
scas
iret
andb
sub
inc
push
adc
xor
sti
nop
sub
les
dec
cs
pop
stos
mov
lret
and
inc
mov
fsts
jmp
orb
push
cli
and
inc
jne
fisubs
or
push
stc
gs
aaa
adc
test
push
or
ss
sub
shrb
scas
dec
push
add
and
cs
in
aaa
fimull
lret
enter
xorb
sbb
dec
pop
in
negl
mov
mov
lea
xor
in
mov
stc
push
orl
data16
dec
jle
xor
imul
cltd
cmp
stc
arpl
sar
leave
pop
lods
or
sub
movsb
jge
xchg
ficoml
push
aad
repnz
arpl
cmp
bound
mov
sbb
adc
enter
mov
mov
add
cs
in
or
cmp
popf
push
xchg
dec
xlat
sbb
aaa
sarl
lock
cltd
idiv
and
ja
adc
cli
dec
dec
pop
jle
sub
sub
xor
ja
mov
sbb
leave
cli
pop
mov
dec
sti
in
stos
aas
repz
out
pop
dec
lock
ljmp
inc
das
ljmp
jae
out
jmp
enter
mov
dec
jp
ja
into
or
flds
ja
pop
shlb
sti
mov
adc
push
or
mov
mov
sub
cmp
test
test
insb
lock
adc
ret
jbe
mov
adc
je
pop
sbb
aad
xchg
aaa
pop
lret
mov
mov
and
fldt
aaa
pop
cmp
nop
cmp
xchg
push
insb
fdivrl
pop
or
out
xlat
cltd
xchg
ss
pop
fstps
ret
rcl
ljmp
jg
insl
and
cmpsl
shrl
sbb
or
aam
popl
pop
ret
lcall
icebp
scas
bound
mov
mov
mov
and
add
xor
jnp
mov
cmpsl
sub
jge
or
pop
outsl
sub
adc
sbb
mov
push
xor
into
cltd
push
xchg
call
bound
jno
and
divb
inc
jns
jne
jns
cmp
push
mov
mov
mov
dec
push
pop
push
adc
jno
push
sub
sbb
fwait
movsb
mov
lods
xchg
in
fidivl
cs
js
aad
pop
fcmove
inc
icebp
test
in
push
jns
leave
jbe
adc
mov
shl
insb
vmwrite
sahf
repnz
push
sti
leave
dec
xor
pop
cmpsb
rcl
cmp
sbb
sub
push
dec
lods
ss
mov
jge
bound
pop
cmpsb
subl
push
pop
sbb
adc
pop
shr
leave
push
and
pop
push
in
sub
outsl
cmpb
mov
push
mov
roll
pop
repnz
push
addl
outsl
aad
lock
andl
or
and
movsl
xchg
popa
std
add
ss
or
mov
cli
lds
mov
push
xlat
icebp
jb
ljmp
subl
into
lret
hlt
jno
sub
mov
test
clc
lock
add
xchg
nop
jp
test
inc
in
pop
popa
ljmp
ja
pop
xchg
fisttps
push
push
fcmovnb
sbb
ret
add
sahf
mov
sbb
les
pop
es
shll
or
add
mov
cmp
es
dec
pop
xchg
pop
xchg
or
inc
das
mov
sahf
xchg
pusha
enter
in
rcl
sub
ret
jno
xor
adc
ja,pn
es
loop
cmpsb
inc
or
fdivrl
mov
or
lahf
loope
mov
mov
ret
xchg
fwait
popa
bound
loope
sub
mov
push
in
in
fcoms
mov
sarl
xchg
pushf
cmpsb
int3
pop
ss
daa
cli
scas
fs
pushf
inc
aad
cld
sub
push
mov
add
and
sub
cmc
fldcw
dec
ja
jae
xor
mov
dec
shlb
dec
clc
pop
mov
jo
in
lahf
jmp
std
std
lret
sub
fs
ret
fnstcw
inc
lock
clc
ret
mov
push
xor
pop
sbb
shl
nop
push
aas
sub
pop
xor
movsl
xchg
cwtl
add
and
inc
cmp
icebp
jbe
sarb
xor
pushf
and
arpl
pusha
cld
adc
clc
cli
cmp
mov
mov
push
mov
push
add
inc
add
adc
les
lods
scas
sub
push
xor
pop
xchg
xorb
and
inc
push
pop
mov
movsl
cmp
cmp
lret
sub
lea
sbb
ret
enter
xchg
cs
xor
mov
shufps
push
or
mov
xchg
xor
mov
xor
movsl
bound
add
stc
push
lods
and
xor
cltd
dec
or
test
mov
sub
jbe
mov
int
cltd
mov
test
inc
hlt
sbb
mov
xchg
sarl
fwait
in
call
mov
jo
ss
sahf
js
mov
push
xor
mov
jae
iret
push
lret
int
stos
xor
xchg
adc
mov
cmp
jecxz
insl
and
movsl
adc
lret
shl
mov
fwait
xchg
repz
jnp
mov
mov
pushf
inc
adc
or
hlt
add
int
cltd
js
jcxz
or
lcall
mov
jae
xor
cmp
movsl
and
enter
push
or
jmp
sbb
cmp
imul
inc
cmpsb
int3
cmp
inc
add
enter
aas
lahf
fimull
cmpsb
mov
js
jp
sbb
shrl
les
lret
pop
sbb
enter
mov
fdivrp
mov
addb
mov
loope
sbb
xchg
and
push
pop
cmp
xor
imul
pop
sbb
mov
fisubrl
mov
loope
adc
fdivrl
cmc
loope
clc
inc
ja
sti
mov
loopne
or
or
push
jnp
add
addr16
lods
jb
frstor
cmp
stc
aaa
fldenv
adc
out
fistps
mov
ret
sbb
inc
mov
sbbb
cmp
ljmp
pop
inc
push
pop
sub
add
pop
js
aas
pop
adc
inc
mov
fiadds
dec
shl
mov
aas
loope
nop
cli
lcall
mov
jp
mov
sahf
mov
cmc
push
daa
cwtl
inc
adc
imul
or
das
mov
mov
fwait
pop
sub
loop
push
push
jle
imul
xchg
mov
pop
shrb
mov
imul
xor
sbb
inc
outsl
movsb
aaa
jne
into
xchg
out
pminsw
and
adc
sbbb
inc
xchg
leave
iret
fldenv
test
or
nop
ss
push
imul
ficompl
ss
and
push
sarb
sub
mov
sbb
push
sub
sbb
popf
insb
stos
and
into
cs
push
adc
out
sub
sub
pop
je
or
cltd
mov
sub
jns
and
push
mov
sub
push
in
ja
sahf
xchg
stos
dec
xor
xchg
insb
mov
inc
push
rolb
hlt
xor
xor
cmp
pushl
mov
flds
xlat
hlt
lret
not
xor
xchg
cs
idivb
mov
stos
inc
mov
sub
cmp
cmp
inc
mov
adcb
cmp
das
push
push
imul
ja
cmp
es
cmp
mov
cmpsb
outsl
mov
mov
dec
outsb
mov
add
fiadds
enter
mov
std
pushf
xor
adc
imul
stc
aad
inc
leave
xchg
jecxz
xchg
mov
sub
sub
nop
sarl
push
mov
cmpl
int
add
mov
pop
xor
call
stc
and
inc
fsubrs
pop
or
icebp
je
xchg
jl
jnp
leave
icebp
ds
pshufw
jecxz
push
sbb
xchg
addr16
or
ret
add
push
xor
sbb
lcall
cld
jo
mov
mov
data16
or
insb
inc
mov
cmp
mov
xchg
sub
adc
xchg
push
test
nop
sbb
daa
and
mov
jnp
inc
pmuludq
dec
pop
push
xchg
int
outsl
sbb
add
imul
es
and
push
pop
loope
push
gs
stc
dec
les
mov
sbb
mov
lahf
call
push
push
imul
adc
lahf
dec
not
add
das
add
xor
pop
jae
test
push
adc
aaa
pushf
inc
mov
mov
aaa
sbb
xor
xchg
mov
gs
push
or
mov
dec
mov
pop
outsl
cli
adc
lahf
add
cld
shlb
out
xchg
int
fsubrl
insb
iret
cmp
add
lock
mov
fidivs
pop
subl
je
xor
sub
pop
push
lret
sbb
mov
fwait
push
iret
mov
ffreep
and
jo
push
jg
or
add
sbb
out
and
pop
adc
jmp
ds
sbb
pop
mov
mov
mov
mov
in
int
icebp
mov
mov
lock
sub
outsb
sti
hlt
ret
out
loope
xchg
sub
and
fldt
fucom
jge
repz
ss
out
jo
jae
stos
mov
sub
pop
pop
arpl
pop
icebp
or
fdivs
cli
out
xchg
clc
mov
mov
push
mov
and
dec
jne
sub
imul
rorb
dec
xor
mov
filds
push
lret
out
sub
fstps
mov
loop
test
push
or
cltd
mov
lret
and
dec
lods
xor
mov
mov
pushf
push
sbb
fwait
mov
push
xchg
jno
icebp
sub
dec
cmpsl
sbbb
lds
dec
mov
out
push
push
orb
into
adc
fwait
jne
dec
imul
xor
in
or
adc
and
aaa
rcll
xor
mov
aaa
xor
xchg
sti
test
push
push
mov
inc
aas
int3
addr16
mov
push
mov
jne
pop
pop
std
movl
dec
cmpl
mov
jbe
ret
pop
cmp
lret
pop
in
cmp
cmp
pop
push
movb
lea
add
push
rclb
adc
pusha
inc
sub
lret
pop
or
leave
push
fs
adc
lods
sub
mov
popf
idivb
shlb
subb
imul
cltd
les
bound
insl
popa
lods
les
pop
push
into
insl
fisttps
imul
adc
dec
pusha
sbb
adc
and
shll
add
test
xchg
icebp
repnz
hlt
push
mov
dec
sahf
test
call
cmp
aaa
aas
pop
xor
lods
push
aaa
gs
leave
push
sub
lret
add
or
and
jmp
mov
scas
fstpt
jb
mov
dec
mov
sbb
daa
in
int3
add
subl
jbe
jge
sbb
in
dec
mov
xlat
scas
sbb
sub
lods
mov
shlb
mov
jo
xor
outsb
pushf
movsb
adc
sbb
gs
movsb
pop
sbb
push
mov
ret
push
shr
push
shrb
push
movsl
add
jmp
push
lahf
xchg
lds
enter
sbb
dec
push
add
inc
mov
jmp
and
call
jmp
daa
push
cltd
arpl
xorl
pop
pop
push
sbb
mov
adc
jp
mov
pop
push
sahf
popf
mov
xchg
jmp
leave
mov
mov
jg
hlt
cmpsl
sbb
rcl
jl
pop
ffreep
mov
xor
cmp
cmpsb
int3
in
mov
mov
inc
pop
pushf
mov
xchg
jl
or
imul
loopne
in
jb
jmp
push
ret
clc
movb
sub
arpl
rcll
ds
fistpll
pushf
shlb
data16
inc
mov
pop
push
sbb
hlt
bound
pushf
mov
lcall
xchg
pop
shlb
pop
fdivrs
sub
cmp
add
push
outsb
sbb
je
xor
or
int
jbe
aas
pop
sbb
cmp
xor
fld
add
fisubs
les
pop
xchg
adc
pop
push
or
scas
adc
cmp
call
outsb
sub
stos
add
pop
pop
push
jge
jle
xchg
and
xor
bound
mov
xor
ret
lret
pop
xchg
sarl
sbb
ja
std
daa
xor
mov
lahf
into
imul
jns
jae
adc
lret
pop
lea
push
test
xchg
repz
popa
fsts
push
mov
fsubr
mov
or
push
sbb
inc
jno
xor
cmc
dec
mov
es
xchg
mov
dec
ja
test
dec
mov
dec
and
adc
push
ret
adc
inc
sbb
shll
push
test
rcr
test
and
add
adc
fbld
mov
icebp
mov
test
mov
loope
xor
sub
shr
ds
fstps
dec
andl
lret
movl
rcl
add
out
cwtl
push
cli
jae
gs
adc
cmp
icebp
movb
addr16
cmpsl
cld
test
lods
mov
shll
sub
pop
daa
inc
pusha
and
in
add
inc
nop
push
cmp
mov
mov
not
push
fwait
lock
mov
out
out
aam
int3
pmulhuw
les
jg
sbb
xchg
clc
push
dec
int3
dec
jbe
inc
and
out
imul
jp
out
andb
in
add
xlat
dec
inc
cmc
xchg
je
andl
cs
pop
inc
xchg
fcmovbe
sub
xchg
or
push
out
out
cmp
into
popf
add
push
inc
mov
int3
jno
pop
mov
iret
hlt
insl
and
lock
or
in
pop
es
mov
or
mov
movsl
xchg
xor
inc
mov
aad
push
push
or
mov
push
outsl
pusha
outsb
mov
aam
dec
andl
mov
mov
jno
sbb
pushf
xchg
stos
bound
insb
stos
call
scas
aad
test
loopne
mov
sbb
inc
push
imul
ljmp
jbe
lock
pop
push
popf
cs
daa
mov
lret
jbe
add
pop
mov
add
aaa
div
in
sub
ss
jns
in
cmpsb
jl
sub
adc
push
fldenv
ja
xchg
jne
xchg
mov
data16
adc
mov
mov
enter
mov
sbb
xchg
sarl
popa
fcmovb
jle
sbb
pop
xchg
outsl
cmp
jae
push
cmp
adc
mov
push
out
dec
ret
pop
out
orb
leave
fnsave
push
test
leave
xchg
cmp
xor
cmpsb
xchg
and
mov
xchg
sbb
xacquire
and
scas
xchg
cli
sbb
addr16
pusha
add
mov
and
frstor
mov
pop
push
insb
and
dec
and
fdivs
jg
outsl
xchg
pusha
cmpsb
lods
loopne
int3
and
imul
xor
dec
dec
xchg
fmuls
pop
stos
push
sbb
cli
cmp
faddl
dec
fistpll
push
out
movsb
fs
pop
loope
cltd
mov
idivl
mov
rol
sub
jl
aas
xchg
cli
idiv
scas
push
sub
lods
sti
sbb
push
xchg
cmovns
jmp
mov
out
or
les
inc
jl
sub
inc
int
add
adc
push
popa
insl
jmp
fwait
in
xor
je
sbb
pop
xchg
jge
or
mov
mov
cmp
push
leave
imul
les
repz
push
and
and
insb
dec
popf
loopne
add
fwait
clc
xchg
jae
outsl
dec
inc
cmpsb
or
adc
jno
or
add
mov
mov
mov
aam
cmp
repnz
out
jg
jbe
aaa
cmp
sbb
xorl
adc
test
icebp
cmp
out
ds
lock
push
inc
test
das
jns
subb
push
sbb
xor
xchg
inc
mov
fldenv
xchg
sbb
add
mov
sahf
adc
dec
ret
jae
mov
or
cmp
jle
into
xor
adc
in
jge
ret
sub
mov
lods
iret
mov
lret
imul
adc
sbb
jnp
inc
mov
ljmp
mov
or
movl
mov
sub
fcomp
and
lret
sbb
out
jg
into
push
and
lods
insl
add
dec
out
jno,pt
inc
lahf
ljmp
mov
and
stc
movsb
imul
sub
and
pop
cmp
add
adc
sbb
aaa
ja
mov
mov
or
mov
add
fidivrs
jbe
jns
rcrb
neg
scas
ficoms
cmpsl
inc
xchg
out
loope
fildll
and
orb
or
pop
insl
sub
mov
lock
popf
pusha
mov
ljmp
call
and
mov
adc
add
out
mov
pop
arpl
sbb
popa
fnsave
dec
scas
iret
int3
addr16
lds
adc
cmpsb
cld
adc
push
xchg
mov
icebp
outsl
fwait
sti
cmp
or
loope
pop
xor
cld
xchg
and
les
pushf
icebp
stos
sub
lret
leave
mov
xchg
clc
mov
loopne
pop
leave
repz
mov
sub
test
inc
out
orb
testl
repz
lods
sbb
lock
fldt
push
inc
rcll
pop
dec
je
enter
daa
xchg
outsb
ds
xchg
push
bound
fwait
outsb
pop
or
lods
clc
shll
adc
cmp
fs
bound
sbb
pop
dec
jbe
sub
mov
imul
shlb
test
arpl
rcr
fs
mov
aad
xchg
lcall
push
dec
add
sbb
or
loop
test
rcrl
and
mov
loopne
sbb
mov
jbe
lods
mov
insb
add
pop
adc
sub
aad
sbbb
ja
push
cmc
mov
sbb
pop
aam
dec
cmp
xchg
cmovs
cld
push
adc
pop
inc
test
sub
pop
jb
sub
mov
dec
call
push
push
mov
mov
sbb
jno
fsubrp
out
stos
fisubl
rolb
ficompl
aas
dec
and
xlat
xor
leave
pop
fisubl
adc
in
nop
mov
adc
add
pop
sub
insl
sub
pop
es
mov
push
adc
lahf
sbb
push
out
lret
out
ror
cmp
orl
jb
jnp
loop
jae
jmp
pop
jb
int
sub
mov
xor
call
inc
xchg
shl
inc
inc
icebp
loopne
loopne
je
xchg
sub
or
pop
andb
jmp
and
xchg
push
cmp
call
fists
cli
mov
stos
xor
jge
in
push
inc
or
jns
outsl
jb
and
ljmp
and
fisubl
inc
out
lahf
xor
in
cmp
hlt
mov
fmulp
jne
pop
push
stos
in
outsb
xchg
mov
nop
jns
jne
das
add
loop
push
pop
fisttpl
rcrl
cmc
dec
jbe
mov
and
mov
inc
mov
cmp
mov
in
gs
cld
and
cmp
add
iret
jg
cmp
push
sub
popf
idivb
ds
cmpl
std
pop
arpl
ds
inc
add
xchg
pop
adc
push
in
fimull
hlt
mov
lock
cmp
cwtl
sub
icebp
clc
outsl
sub
fdiv
pop
outsl
mov
inc
fcompl
mov
or
imul
ss
ret
pop
push
mov
xor
push
jg
jp
rorb
add
pop
lds
rcr
sub
out
push
inc
cwtl
in
int
stos
mov
cmpsl
inc
mov
add
sahf
loop
int
inc
clc
repnz
mov
adc
out
dec
push
jmp
xor
outsl
adc
xor
aas
test
jbe
ljmp
int3
into
imul
loop
pop
mov
adc
sbb
mov
je
dec
inc
mov
or
mov
ljmp
jge
iret
mov
cmp
pop
cld
ds
xchg
loop
jo
shl
dec
pop
pusha
jp
sbbl
dec
and
outsb
mov
add
fbld
adc
fs
in
fst
jmp
gs
or
sub
mov
rcr
inc
lcall
sbb
out
sub
xchg
and
push
jle
xor
xchg
xor
adc
imul
push
into
adc
fs
ret
divb
jne
rclb
iret
arpl
cmpb
int3
push
test
pusha
shrl
jnp
or
jmp
hlt
push
mov
add
jl
sub
imul
mov
or
sbb
repnz
cmpsb
and
imul
or
push
adc
cmc
push
faddl
pop
pop
je
addr16
leave
mov
scas
jo
jbe
lret
jbe
mov
mov
add
cwtl
jg
cld
add
out
jbe
xor
sbb
xchg
xchg
inc
mov
pop
inc
jbe
outsl
in
mov
and
ss
pop
xor
imul
cmp
iret
sbb
or
in
out
div
jp
ret
loope
adc
cmc
or
xchg
mov
dec
inc
fisubl
pop
loop
std
sub
imull
les
orl
pushf
outsb
pop
mov
mov
cli
xor
lods
xchg
mov
mov
sbb
mov
fmull
mulb
pop
mov
ret
xchg
outsb
add
adc
lret
sbb
leave
xchg
push
rclb
or
mov
pop
jo
fisttpl
sbb
mov
mov
fbstp
rol
push
jle
xchg
ljmp
adc
xor
roll
jae
iret
sub
pop
or
mov
xchg
or
outsl
rcrl
xor
or
cmc
sub
inc
fcmove
sbb
fnstsw
mov
xchg
dec
in
jmp
jmp
mov
push
xchg
cmp
xorl
mov
repz
or
pop
xor
cld
push
aam
ljmp
sti
aam
pop
out
aas
movsl
sub
and
cmpsb
adc
mov
mov
push
adc
push
mov
arpl
repz
fnstcw
sub
xor
fcoml
es
xor
jae
mov
xorl
and
dec
mov
lods
jbe
and
dec
fisubs
ret
ljmp
sbb
mov
nop
out
cld
adc
xorb
jg
mov
pop
cli
mov
out
cmpsl
and
scas
or
jae
sarb
call
and
add
repz
lds
push
nop
mov
pop
les
and
hlt
or
lahf
stos
push
or
jae
es
mov
je
cmp
mov
jno
fwait
cs
sub
pop
lret
andb
sub
std
push
repz
mov
dec
push
sub
and
or
jl
and
repnz
xchg
daa
test
adc
push
dec
lret
call
mov
add
out
sarl
outsb
dec
out
test
jecxz
dec
xlat
out
les
xor
shll
fmuls
adc
mov
push
inc
push
or
gs
js
push
and
cmp
pop
jp
dec
in
nop
dec
mov
jmp
cmc
fcmovb
inc
xchg
sti
mov
sbb
addr16
and
rcrb
sbb
push
push
inc
fstp
lods
pop
xchg
xlat
mov
sub
mov
xchg
cmp
insb
xchg
pushf
adc
mov
add
addr16
add
or
xchg
jmp
xchg
cmp
sahf
inc
and
and
xchg
mov
aad
add
int3
ja
das
xchg
adc
sub
mov
fidivl
xchg
fcomp
enter
jb
inc
jge
adc
sub
lds
jbe
loopne
out
sahf
ss
pop
mov
jmp
inc
pop
pop
or
cmpsb
xchg
lret
pop
bound
mul
cld
sbb
int3
insb
jmp
jle
push
xor
and
mov
adc
or
int3
mov
lret
push
add
adc
jbe
idivb
cltd
jecxz
sbb
cmp
fwait
test
out
inc
xchg
dec
stc
and
lret
add
adc
mov
dec
mov
or
push
jge
cli
fbstp
adc
gs
ds
xchg
test
xor
jns
jp
div
mov
add
ret
jbe
jnp
xchg
cmpl
and
lret
jbe
jecxz
loope
mov
es
lret
int
cmpsl
cmp
lea
push
cmc
movsl
adc
push
scas
fidivl
pusha
out
push
outsl
cld
scas
add
sub
stos
mov
out
sub
mov
dec
negb
sbb
imul
mov
pop
push
ret
movsl
iret
sub
adc
jb
fnstsw
add
mov
shrl
sub
pop
vaddsd
jl
fwait
push
out
or
mov
dec
sbb
jae
bound
push
aaa
add
movsl
outsb
pop
aaa
sbb
jl
ss
mov
sbb
nop
cmp
insb
addl
lea
inc
lea
pop
lcall
aaa
or
mov
out
ret
inc
inc
insb
mov
and
mov
bound
add
lds
ret
push
xchg
adc
dec
shlb
pop
xor
jnp
mov
inc
frstor
js
daa
in
push
out
fsubrs
les
pop
or
inc
and
xchg
dec
loopne
ds
xlat
or
mov
or
inc
jne
inc
and
ss
sahf
stos
xorl
sbb
je
mov
or
add
fldl
in
inc
rcrl
cwtl
jecxz
dec
xor
dec
idiv
cltd
sub
jns
push
test
inc
jae
adc
std
nop
jo
and
in
push
test
xchg
jnp
add
cmp
sbb
and
in
icebp
xchg
out
enter
es
push
mov
arpl
add
in
xlat
nop
xchg
dec
mov
mov
pop
pop
pop
outsb
cmp
inc
mov
sub
sub
jnp
sub
pop
je
mul
xor
mov
xor
add
and
sbb
test
mov
dec
dec
push
lahf
sahf
pop
push
stos
imul
and
jl
mov
es
sbb
aam
add
ds
push
fidivrl
mov
mov
dec
sti
jge
pop
stos
mov
jo
je
jns
mov
dec
or
and
sub
scas
push
mov
sbb
mov
jbe
imul
push
mull
cld
in
jns
fmuls
pop
pop
mov
adc
push
outsl
jp
shlb
mov
jge
addl
ret
stos
pusha
gs
push
daa
sbb
adc
jne
jns
sbb
scas
inc
fwait
pop
dec
cmpsl
jp
xchg
mov
outsb
es
inc
or
sbb
ficoml
sbb
mov
cmp
mov
jmp
xchg
and
cli
shr
jge
sub
repnz
sbb
inc
adc
repz
push
add
pop
pop
push
fisttpll
adc
mov
sub
js
cwtl
or
loopne
daa
add
stos
push
dec
pop
insl
stc
xchg
jbe
clc
sbb
push
pushf
xchg
sbb
pop
aam
in
jns
jns
pop
sub
cmp
mov
scas
cmp
mov
jle
xor
jecxz
popa
pop
bound
aad
ficomps
clc
loope
mov
xchg
frstor
pop
xor
cmc
dec
or
xor
sbb
out
push
shl
xor
or
pop
scas
pop
test
movsl
cld
lock
mov
pop
movsl
add
pusha
mov
dec
xchg
sub
out
pushf
jno
mov
dec
push
push
push
pop
pop
es
and
je
add
sbbl
test
mov
push
or
mov
mov
sbbb
xchg
aad
idivb
icebp
and
mov
loope
enter
popa
cltd
lock
sar
stos
rorl
arpl
push
xchg
add
mov
xchg
jp
lret
mov
dec
cltd
pop
iret
sbb
fcompl
rep
push
push
inc
sbb
mov
dec
cmc
and
ja
ret
lods
push
jne
ss
lret
enter
mov
add
movl
repz
xchg
enter
and
xor
push
inc
pushf
insl
ret
bound
pop
mov
add
xor
cmp
sub
bound
fs
mov
or
sbb
clc
pop
or
jb
jo
testb
test
std
test
sahf
loopne
outsb
jns
testl
dec
sbb
mov
jg
push
sub
js
and
push
ret
jg
int3
push
push
mov
inc
dec
stc
stos
xchg
mov
fsub
jmp
jle
pop
xor
out
sub
xchg
fwait
in
rcll
icebp
adc
pushf
and
fidivs
push
out
xlat
sub
sbb
push
lea
or
into
shlb
ds
xchg
pop
jl
fistps
fs
and
inc
push
cli
push
shll
std
cs
repnz
xchg
ss
bound
lea
cmp
pusha
and
and
mov
xchg
dec
add
fs
jp
add
xchg
loopne
lret
ret
xchg
jg
mov
sbbl
dec
loop
mov
movsb
lret
leave
loop
dec
add
outsb
push
mov
mov
xchg
sub
jge
in
jle
adc
xor
nop
xchg
and
sti
insl
leave
cmp
mov
testl
arpl
push
sub
cmp
adc
cltd
sub
ja
fldt
push
fadds
dec
inc
aaa
and
mov
call
repnz
in
xchg
mov
xchg
mov
mov
and
popf
pop
or
inc
ss
adc
jae
lcall
add
pop
and
sbb
hlt
sbb
fwait
int
sbb
cltd
push
and
cmp
lret
ljmp
jmp
cs
inc
ljmp
xchg
dec
mov
shl
mov
into
or
jecxz
mov
fs
cld
leave
xchg
mov
pop
inc
ret
mov
mov
andl
test
fwait
cli
mov
adc
scas
mov
data16
add
pop
inc
dec
fldenv
sbb
out
sti
mov
aas
bound
fsubl
hlt
pop
out
pop
inc
shl
rolb
ds
add
arpl
decl
repnz
push
adc
bound
mov
sub
jae
mov
add
fs
push
stos
jle
out
or
pop
sub
lret
lock
pop
or
dec
adcb
icebp
fisttpll
cs
cmp
cmp
inc
icebp
aaa
jno
jle
rcrb
inc
add
ljmp
mov
shrl
test
pop
daa
bound
dec
jns
outsb
add
or
jbe
inc
into
jns
pop
out
nop
leave
lods
xor
push
pop
nop
call
jns
push
ret
ss
and
popf
jmp
inc
dec
loopne
popa
push
rorl
sahf
mov
mov
mov
addr16
pop
test
dec
aad
inc
js
sub
in
mov
lret
push
lret
out
call
incl
bound
aam
jmp
ja
fld
xchg
std
mov
xchg
adc
cltd
fs
mov
xor
push
js
mov
bound
cmp
jae
pop
adc
das
cmpsb
std
lock
lock
push
adc
push
scas
arpl
push
lret
push
in
leave
push
xchg
fnstcw
sbb
jmp
adc
arpl
scas
pop
cmpsb
out
lret
pop
mov
sub
and
add
notl
jb,pn
mov
dec
insb
sub
sub
add
nop
add
dec
pushf
testb
std
and
sbb
mov
ds
cmp
sbb
xor
xchg
xor
arpl
mov
push
sub
inc
add
adc
adc
fistps
xchg
icebp
xchg
ja
es
in
lock
dec
fiadds
leave
dec
inc
mov
sbb
mov
insb
add
stos
popf
push
xor
iret
xor
xchg
dec
push
adc
ret
stc
rolw
push
mov
sbb
pop
and
bound
jmp
subb
mov
adc
gs
js
cli
cs
out
cmp
adcb
push
add
imull
movsl
lods
mov
mov
inc
in
mov
js
cmp
int
fwait
sub
add
divb
sbb
cmp
shl
xor
cmp
pop
mov
push
popf
nop
xor
adc
je
mov
xchg
inc
loope
sarb
mov
ds
ss
xchg
sub
jns
dec
pop
pop
mov
out
loope
jbe
fdivrl
fildl
push
sbb
push
push
mov
arpl
out
mov
dec
push
cmc
fs
pop
or
popa
inc
in
adc
in
or
les
pop
push
aam
inc
pop
pop
add
adc
jns
add
dec
adc
in
and
ds
cmpb
sahf
in
lods
aam
outsl
xchg
aam
repz
lcall
mov
fildl
arpl
xchg
cmova
stc
dec
in
push
xlat
inc
inc
push
jae
popf
in
js
movsl
out
shrl
call
out
push
cmp
out
jnp
insb
outsb
mov
sub
das
imul
push
call
loopne
cmp
insb
cld
dec
sub
or
cmp
outsb
cmpsl
pop
pusha
pop
cmpsl
pop
ss
jbe
jo
out
mul
push
rol
or
js
xor
adcl
idivl
insl
pop
push
gs
pop
push
mov
push
sub
sahf
push
push
or
jle
lock
pop
jmp
insl
mov
sub
dec
dec
fiadds
lods
push
xchg
mov
lret
dec
xchg
push
in
add
cmp
gs
jmp
mov
mov
mov
icebp
mov
sbb
dec
sub
add
push
loop
push
outsl
insl
inc
adc
lods
scas
add
pop
lods
or
rcll
notl
jbe
sub
stos
sub
mov
xchg
push
fs
mov
shlb
pop
adc
and
dec
ds
dec
sub
ret
mov
dec
and
ss
push
or
fiaddl
xchg
sub
mov
mov
jmp
sbb
movsb
loopne
mov
int3
int
aas
inc
inc
pusha
shlb
push
mov
mov
sub
ljmp
andb
test
dec
out
cmp
mov
xor
mov
rorb
pop
jge
mov
sub
xchg
out
or
stos
mov
xor
outsb
cmpsl
jae
mov
push
fdiv
fs
xchg
les
mov
or
jo
mov
push
cmpsl
xor
mov
ret
mov
inc
in
pop
in
mov
int
adc
fists
cmpl
cmpsb
nop
sbb
jl
cmp
shll
inc
push
jae
cmc
scas
jae
dec
pop
or
sbb
adc
jl
popf
ljmp
add
dec
jno
imul
mov
adc
ss
insb
ds
inc
mov
inc
mov
cmp
int3
in
mov
pusha
and
sub
lea
jbe
lahf
jecxz
out
stos
aam
std
loopne
adc
push
inc
push
call
jb
test
outsl
lock
and
cmpb
scas
imul
jo
xchg
or
rcrl
fs
add
xor
push
std
dec
dec
inc
mov
into
out
mov
xor
jo
cmp
dec
enter
mov
inc
dec
jge
into
pop
pop
sbb
out
les
or
imull
mov
popf
aam
out
add
pop
add
push
bound
pop
xor
mov
leave
sbb
pop
stc
scas
cltd
test
or
clc
lds
lock
push
cmpsl
ja
mov
mov
int
mov
les
mov
ljmp
arpl
dec
push
and
sbb
and
or
shll
fs
jnp
sarb
in
dec
and
imul
jb
sbb
insl
and
fst
dec
push
imul
insb
lret
inc
pushl
push
and
arpl
and
fldl
es
mov
cmp
pop
scas
pop
pop
inc
ss
mov
testl
int
push
int
dec
scas
or
loop
jb
pop
and
loope
or
jae
inc
pushl
mov
lock
mov
pop
jl
dec
pop
call
flds
cmp
cltd
mov
pop
lods
jle
addr16
cld
movsl
orl
and
mov
fldcw
outsb
ss
push
fwait
in
aam
into
cmpsl
repnz
jo
jecxz
test
xor
faddp
sub
push
inc
dec
pusha
dec
fisttpl
mov
mov
add
mov
ss
inc
aam
fbstp
mov
and
push
rorl
out
insb
call
mov
cwtl
sti
leave
outsl
jl
cwtl
mov
cld
sub
mov
cmp
jle
xor
in
jg
repz
sbb
rorb
inc
les
push
test
jae
mov
jnp
iret
xlat
test
mov
std
mov
das
ficoms
jnp
fs
imul
cmp
call
out
fldl
test
mov
push
lret
and
fldl2e
mov
out
mov
pop
lods
popa
xchg
dec
enter
daa
xor
xchg
mov
mov
sbb
push
pop
dec
and
add
pop
or
sbb
mov
xchg
addr16
or
mov
dec
inc
insb
dec
mov
mov
jecxz
imul
push
fldenv
sbb
pusha
pushf
sub
leave
loopne
xchg
mov
push
dec
lods
pushf
stos
ret
ret
sub
mov
or
push
ljmp
add
in
push
mov
push
addr16
sub
popf
aaa
xchg
pushf
or
mov
adc
repz
ffreep
ret
outsb
add
sub
adcb
loopne
cmp
repz
xlat
push
jo
and
cmp
xchg
xor
cmp
mov
inc
jmp
fstp
out
pop
movb
mov
pop
jo
cmpsb
pop
mov
adc
mov
xchg
rcll
mov
xor
push
hlt
mov
test
fstps
and
in
test
test
add
jae
jge
jo
out
sub
into
inc
insl
or
aaa
mov
and
ficoml
sbb
adc
jg
cld
jno
and
sub
daa
popa
jb
jno
cmp
fidivl
in
mull
inc
add
enter
dec
sbb
push
lahf
push
clc
clc
xchg
mov
fsubrs
mov
cltd
jmp
mov
xchg
inc
xchg
mov
addr16
outsl
scas
lds
test
inc
data16
or
sbb
ficompl
pmulhw
fidivrl
add
sub
movsl
lods
dec
shl
mov
je
jmp
and
and
shrl
pop
outsb
cli
sub
xlat
loope
fucompp
sub
popa
mov
mov
in
xor
add
fcoms
lds
pusha
xor
out
xchg
gs
xor
or
xor
shl
lahf
mov
sub
bound
xchg
frstor
jo
sti
and
lds
je
push
jo
outsl
xchg
clc
dec
popf
inc
lods
inc
mov
call
mov
shlb
sub
les
mov
arpl
fstl
push
aad
adc
test
in
push
jl
xor
jge
jg
sub
das
adc
rorl
test
lods
and
xchg
aad
pop
xor
test
shll
psraw
dec
dec
mov
adc
jg
pop
in
subl
push
push
scas
or
icebp
cmp
or
cmp
jg
adc
icebp
mov
push
jns
adc
cmp
pop
gs
mov
loopne
pushf
icebp
xchg
pop
cmp
mull
jmp
inc
outsl
xchg
ss
and
pop
adcl
bound
jnp
rol
xchg
pushf
lds
dec
out
mov
jbe
faddl
push
fstpl
jo
xor
xor
cmpsb
fs
das
call
jmp
jmp
daa
cld
aaa
filds
imul
jb
and
in
je
dec
or
sub
test
xchg
adc
mov
mov
pop
das
rcrl
push
fldl
pop
out
aaa
jbe
add
xchg
sbb
lds
inc
sbb
aas
hlt
cmpl
mov
mov
sub
std
test
xchg
mov
jnp
xchg
enter
pop
mov
call
inc
mov
cmp
jp
pop
add
out
cli
mov
mov
iret
mov
sbb
cmc
idiv
inc
rclb
in
pop
pop
mov
addr16
xor
loope
mov
sarb
inc
xchg
nop
ljmp
xchg
ret
mov
in
aad
repz
push
psubsb
jnp
or
fsubp
inc
neg
mov
push
movsb
testl
jne
loop
or
int3
nop
outsb
push
loope
push
fwait
or
insl
mov
aam
data16
repz
jae
pushl
xchg
decb
std
sbb
notl
inc
jb
push
stc
inc
xor
lods
rorb
inc
cmp
lret
pop
inc
jnp
insl
into
mov
repz
sub
out
or
in
adc
jb
sti
nop
mov
adc
lcall
cmp
inc
mul
pop
lea
inc
in
mov
xor
outsb
push
sarb
sbb
push
test
push
jns
xchg
pop
imul
xchg
cmc
sahf
iret
xor
sub
dec
inc
and
sub
mov
and
mov
movb
cmovb
pop
iret
lods
xchg
mov
push
add
nop
aaa
pop
adc
outsb
int
popa
arpl
jle
call
and
dec
jbe
lods
insl
dec
rol
jb
in
xchg
int
pop
shrb
out
sti
adc
call
lahf
imul
mov
lods
nop
dec
jge
xchg
mov
clc
sub
shl
xchg
rorb
xchg
push
mov
mov
sub
jecxz
icebp
popf
test
sbbb
imul
push
into
mov
call
stc
jecxz
insb
push
push
push
inc
mov
or
pop
push
ljmp
xchg
pop
lret
xlat
enter
pushf
mov
fisubrl
stos
mov
inc
and
outsb
lea
arpl
hlt
or
or
in
jg
lcall
addr16
xchg
push
cmp
jo
mov
cmp
dec
fwait
or
push
test
sbb
ror
fists
mov
add
mov
daa
out
pushf
stos
and
popa
fisubrs
test
xchg
push
out
jl
cmp
dec
scas
push
pop
push
test
cmp
jns
loopne
mov
dec
scas
ds
sub
es
pop
mov
hlt
icebp
sub
into
jbe
mov
clc
test
xor
imul
xchg
or
js
pop
call
inc
addr16
scas
pushf
and
xor
mov
mov
aaa
btc
add
xchg
jo
test
sbb
add
cmp
je
sti
pop
loop
pop
and
sbb
jmp
lret
lret
xor
push
sbb
dec
in
bound
arpl
mov
aaa
dec
and
aam
push
cmpl
adc
push
and
lea
add
jle
mov
stos
add
sti
inc
inc
push
mov
addr16
xchg
jnp
xchg
test
shr
in
shlb
sbb
cmp
jl
sarb
fwait
add
xchg
insl
sbb
jne,pn
ljmp
and
mov
xor
lea
push
hlt
sbb
push
pusha
repz
push
aas
mov
mov
adc
add
sarl
and
jb
jo
ds
and
mov
in
jb
enter
mov
cld
and
mov
movsl
inc
and
sbb
push
test
jno
lret
loope
push
dec
lods
clc
adc
inc
sbb
jmp
insb
loope
leave
jnp
out
iret
idivb
out
scas
and
fdivr
iret
or
jb
sbb
xchg
hlt
jge
fcmovb
shrl
mov
cmc
fsubl
test
and
lahf
data16
push
int
mov
pop
clc
sub
cmpsb
lock
jae
icebp
adc
mov
cmp
mov
arpl
pop
test
cld
rcpps
and
testl
mov
data16
adc
add
sahf
out
pop
mov
mov
add
cmpsb
jnp
mov
jbe
jmp
adc
or
out
cmpsl
nop
dec
int3
inc
inc
cmp
outsl
mov
outsb
cli
mov
ljmp
ljmp
repnz
imul
imul
jo
adc
fldenv
out
xor
jle
movsl
pop
call
sar
dec
jne
mov
incl
push
jle
pop
push
flds
push
inc
mov
cmpsl
mov
scas
add
xchg
sbb
pop
pop
mov
push
push
in
mov
cli
add
sub
stos
out
popa
rclb
or
movsb
je
mov
push
sbb
fstpt
out
shll
icebp
mov
cwtl
sahf
sub
pop
gs
inc
or
xchg
and
je
addl
jge
gs
ss
bound
aam
mov
jbe
cmpsl
dec
insb
pop
pop
sbb
adcl
aam
or
mov
loop
pop
mov
mov
stos
mov
jae
je
and
mov
sbb
cmp
out
rclb
jg
mov
mov
adc
xchg
out
jg
mov
mov
ret
rcrb
and
and
fs
jb
imul
int3
xor
jbe
lcall
xchg
cmp
or
sar
cli
fcoms
adc
cmp
or
popa
push
dec
out
mov
push
adc
pop
xor
inc
iret
aas
in
invd
mov
scas
sbb
cltd
xchg
push
mov
jne
aam
or
and
sub
xor
push
ss
push
cmp
mov
cs
cmp
mov
dec
jo
cmp
aas
push
jnp
divb
imul
cmpsb
adc
repnz
dec
imul
mov
in
push
xor
mov
out
ja
jmp
andb
jmp
cmpsl
xchg
pop
and
fldt
mov
adc
jns
aam
rorb
jp
lock
idivb
xchg
out
dec
dec
adc
cmp
dec
mov
addr16
out
fisubs
xor
fdivrl
inc
mov
cmpsb
in
out
sub
sub
gs
outsb
pop
sbb
cld
add
and
push
outsb
mov
xchg
push
push
add
jnp
adc
cwtl
xor
repnz
xor
xchg
scas
shll
xor
negb
in
push
ja
xor
xchg
std
add
fidivl
lods
ljmp
in
and
xchg
cmp
mov
xchg
or
dec
xor
xor
pushf
roll
into
outsb
jl
inc
pop
mov
sub
cmpsl
mov
sbb
jecxz
andl
mov
xchg
int
lret
add
jl
fwait
stc
cli
push
cmp
mov
lock
cmpsb
mov
sub
lods
pop
fiadds
addb
movsb
adc
sbb
fsub
aad
ds
dec
push
sbb
mov
out
je
xor
add
sbb
mov
aas
and
xchg
mov
mov
pop
pop
mov
add
push
mov
dec
out
jg
sbb
or
or
xor
jmp
lcall
hlt
shll
imul
adc
iret
mov
call
mov
fstl
pop
sbb
idivb
lret
inc
aad
jbe
cmc
idivl
loope
xorb
scas
sbb
test
jp
jge
jnp
aam
hlt
mov
dec
test
cltd
sbb
mov
ljmp
adc
vprotq
icebp
addr16
shrl
push
xchg
cld
bound
stc
lret
dec
lods
es
lcall
add
add
dec
pop
ror
lret
fnstenv
or
sahf
pop
pushf
sbb
adc
imul
lret
dec
fcom
pushf
sub
xchg
stc
sbb
and
cli
push
sbb
mov
sbb
insb
fldl
mov
pop
jns
add
stos
das
inc
out
pop
jg
add
pop
push
push
shl
fbstp
sbb
inc
mov
adc
sbb
insb
enter
inc
pop
lret
fbstp
cmpsb
xor
jle
sub
inc
je
push
push
adc
inc
xor
adc
lret
jbe
dec
pop
cmpsl
cmc
loop
push
dec
sbb
jmp
or
les
mov
sub
sbb
or
dec
cmp
sub
and
ljmp
lds
push
fsubrl
popa
xlat
cmp
and
mov
sbb
push
lret
jmp
jmp
scas
nop
sub
sub
adc
cltd
sub
cmp
movsb
xchg
mov
ds
testl
xor
dec
insb
int3
ror
pop
dec
mov
out
dec
dec
out
mov
adc
lret
mov
jle
jg
enter
pop
xchg
push
sub
aas
mov
ljmp
and
cli
sub
mov
lock
pusha
jnp
fnstenv
sbb
in
push
dec
mov
idiv
stos
loopne
cmp
push
pushf
adc
pop
pop
mov
loop
dec
jl
lds
ret
lock
push
cmc
jne
imul
scas
mov
pop
push
cmpsl
push
popf
fs
sbb
mov
addr16
sbb
inc
std
pusha
dec
negl
cmp
ss
loope
ss
lcall
pop
ret
es
in
aaa
push
rcll
es
push
push
add
fldenv
mov
pop
shrb
jae
fldt
pop
sub
outsb
sbb
fidivrs
clc
addr16
loope
xchg
hlt
pop
mov
or
adc
out
xchg
inc
cmp
in
jecxz
cld
cmp
in
mov
insl
sub
push
into
xchg
in
sarb
outsl
jle
cld
stos
mov
lods
aad
pop
jl
ret
cmp
adc
das
mov
mov
dec
xchg
xchg
jae
das
sbb
outsl
insl
push
jp
mov
fsubp
adc
xor
mov
loopne
inc
int3
add
sub
sub
or
xchg
add
jg
out
faddl
mov
xor
or
popf
sbb
fsubl
dec
cltd
sbb
lock
ret
xchg
mov
sbb
jo
xor
cld
jb
jmp
andl
mov
mov
fmul
rorl
repnz
add
nop
mov
in
dec
aas
cmp
cs
pushf
test
lods
pop
pop
jmp
cmc
cli
dec
divl
cmc
std
jbe
dec
inc
dec
into
mov
adc
push
inc
stos
lds
push
jmp
jecxz
inc
or
lock
push
cmc
and
inc
cmpsl
lret
les
dec
add
arpl
imul
leave
imulb
push
rsqrtps
movsb
dec
in
mul
mov
mov
jle
jns
lcall
pop
cmp
mov
push
adc
pop
cmpsl
adc
sbb
test
mov
xchg
ret
dec
fistl
mov
aad
xchg
cs
and
in
inc
push
pop
sbb
adc
test
addr16
fcmove
filds
pop
dec
sub
outsl
mov
and
popa
cmc
pop
ret
stc
js
sti
jge
shrl
lcall
lds
mov
js
pop
xchg
lcall
test
inc
aaa
xchg
push
jbe
add
adc
adc
pop
mov
push
mov
aad
mov
or
fiadds
mov
dec
adc
inc
iret
cmpsb
das
dec
and
or
jno
ljmp
push
stos
push
cmp
stc
aam
js
movsb
adc
xor
sub
xchg
lods
dec
sbb
cmc
les
adc
pop
inc
fcoml
mov
por
or
and
ss
pop
dec
int
xchg
and
sbb
adc
movsb
lea
insl
mov
jae
ljmp
mov
xchg
cmpsl
inc
push
in
sbb
jbe
in
fimuls
xor
cmp
sbb
ds
sub
sub
sub
and
outsb
push
pop
pop
jle
enter
adc
pop
push
scas
test
xchg
cmp
xchg
pop
and
lock
push
jb
dec
mov
ja
iret
out
dec
scas
push
cmpsl
mov
add
mov
int3
loope
inc
test
lcall
lds
popf
jecxz
add
xor
clc
aad
inc
out
add
adc
xchg
ss
and
in
pop
jl
push
inc
cltd
mov
pop
fsubr
iret
adc
cmp
int3
ret
cmp
test
pusha
fdiv
addr16
loope
cmpl
push
pop
stos
adc
cwtl
xor
insl
scas
inc
outsl
daa
sub
imul
pusha
out
stc
mov
insb
pop
std
mov
push
push
icebp
notb
lods
loop
pop
inc
sar
adc
fmuls
repnz
adc
mov
cmc
adcb
and
popf
pop
adc
repnz
fwait
rolb
clc
sahf
int3
jns
ret
mov
shlb
and
ficompl
das
push
pusha
inc
cwtl
jne
or
and
aaa
pushf
insl
push
lods
mov
push
mov
xchg
lcall
sub
jmp
addr16
popf
inc
es
fcomp
cmp
int
xlat
cmp
mov
push
or
lcall
add
sub
sbb
or
scas
movsl
or
dec
pop
xor
lods
xor
mov
mov
bound
mov
sub
jo
ljmp
jmp
mov
inc
adc
testb
mov
cmpsl
dec
cli
xor
loop
js
jge
pop
sbb
mov
test
pop
pushl
jge
sbb
out
movsb
push
popf
push
xor
sbb
mov
test
dec
daa
sub
icebp
stos
mov
pop
clc
cmp
and
mull
ds
cmp
lods
bound
stos
inc
push
add
xchg
mov
add
aaa
ja
mov
outsl
sti
adc
in
lahf
and
jnp
lret
in
sub
and
and
pop
ss
out
jns
inc
lret
xchg
lret
lds
dec
lods
xor
pop
int3
pop
test
lahf
and
mov
loope
jecxz
incb
hlt
addr16
xor
or
sbb
mov
jp
sbb
je
xlat
add
aam
ja
in
mov
in
xchg
mov
adcl
enter
ds
sbb
mov
not
push
mov
add
aaa
in
pop
pop
aas
shl
fsubrs
lds
pop
arpl
ret
dec
mov
fisubs
jge
mov
jo
ja
lea
popf
subb
cmp
test
aas
cld
subb
aaa
jg
sbb
jns
and
push
push
call
push
stos
cmpsl
test
int
das
push
xorb
pop
cmp
ret
sbb
xchg
add
out
incl
loope
ret
jbe
scas
xor
cmp
mov
mov
pop
inc
adc
mov
and
out
sub
sub
push
sub
sub
js
add
mov
sub
sub
pop
cwtl
mov
es
fsubs
mov
lods
mov
mov
or
sub
mov
inc
jecxz
jmp
andb
bound
ss
push
jne
stos
jnp
lahf
adc
mov
in
mov
ss
pop
xor
adc
push
mov
xor
fs
shl
popf
mov
ficoms
lret
push
mov
sbbb
out
xchg
pop
adc
adc
data16
add
push
rcl
cmp
and
jns
ja
test
sbb
pop
int
mov
xchg
push
fwait
jle
inc
pop
sub
push
rcrl
test
in
or
je
fwait
pop
add
int
jle
and
and
and
mov
pusha
rcrl
adc
xor
icebp
out
cli
mov
iret
or
iret
lods
jmp
mull
pop
rcrl
push
dec
fs
mov
sub
mov
adc
aam
jmp
mov
dec
shll
shrl
inc
jno
mov
leave
xor
out
xchg
sbb
inc
mov
sahf
test
popa
sarl
jmp
mov
inc
repnz
loopne
icebp
cli
xor
jno
enter
dec
inc
cmp
stos
xchg
cld
mov
add
sub
dec
pop
mov
sub
push
mov
fcomi
ljmp
cmp
cmc
dec
adc
test
test
pusha
adc
mov
loope
jge
les
inc
inc
or
ss
cmp
jl
sub
into
ret
loopne
ds
jnp
jne
xchg
imul
out
add
and
mov
jmp
jle
test
sub
sbb
popf
xchg
cs
xchg
arpl
out
leave
call
in
xor
mov
test
mov
orb
pop
sub
aad
add
and
ds
jo
addr16
frstor
gs
mov
lcall
out
ss
xchg
push
lea
mov
insl
es
out
out
xlat
sub
mov
ss
sbb
inc
int
or
dec
add
cmp
mov
xlat
sub
mov
mov
out
cmpsl
jecxz
push
cmp
loope
add
fidivrl
pop
mov
cmpsl
leave
xchg
xchg
test
cmpsl
test
cs
shrl
aas
jne
mov
lods
cmp
dec
xchg
push
aad
sbb
inc
in
mov
iret
xlat
aam
stos
stos
mov
or
lods
scas
and
push
fldenv
leave
adc
push
lahf
movl
xlat
outsl
pop
in
or
push
lret
lret
test
mov
inc
pop
lods
add
test
inc
add
imul
repz
iret
iret
gs
xor
in
cmp
dec
dec
xchg
loopne
call
fwait
or
and
enter
ja
xor
cmp
ljmp
or
imul
sbb
leave
jb
sbb
or
cs
fisttpl
add
xchg
push
dec
and
sbb
adc
pop
imul
bnd
lods
cli
mov
adcb
mov
xchg
sbb
mov
cmp
push
sbb
ror
icebp
les
inc
or
and
mov
aam
stos
loop
sub
insl
add
lret
negb
je
lahf
xchg
in
and
xchg
pop
setb
xor
sub
mov
or
fnstsw
or
lock
jp
ja
pop
push
ss
mov
push
out
loope
popa
inc
mov
mov
add
adc
push
inc
rorb
fsubs
pop
cwtl
cmc
pusha
mov
movsb
jae
inc
out
inc
mov
js
test
cwtl
shll
inc
mov
lret
xlat
cmp
dec
pushf
sbb
jmp
sub
outsb
test
add
fld
daa
fnsave
pop
or
insl
xchg
in
adc
das
adc
out
mov
mov
in
push
fmul
sbb
enter
mov
sbb
cltd
lods
sub
mov
jl
mov
cmp
pop
and
push
push
jae
rorb
inc
inc
std
in
jge
xor
fs
adc
pop
cmp
mov
ss
jge
xchg
insl
lods
sub
jmp
es
xchg
lcall
lcall
je
cltd
lcall
punpckldq
cmp
mull
es
pushf
out
adc
icebp
fidivrs
pop
dec
mov
mov
gs
jo
mov
xor
adc
push
int
mov
loopne
sub
sub
lea
inc
push
in
dec
mov
mov
gs
pop
and
sahf
cmp
xor
xchg
repnz
push
mov
adc
and
mov
pop
inc
repnz
pop
jae
ficompl
sbbb
jne
and
es
xor
das
fidivl
mov
jge
pop
sbb
push
negl
mov
mov
mov
pop
push
stc
and
sub
mov
push
jno
ljmp
in
outsb
daa
insl
dec
sbb
push
popf
pop
pop
xchg
pop
insb
lock
mov
out
push
outsb
push
cltd
xchg
adc
cmp
cltd
push
in
int
lods
mov
xor
subb
adcl
or
test
mov
scas
pop
push
outsl
fsubr
cli
dec
mov
and
in
into
repz
aam
adc
sbb
sub
popf
scas
mov
call
pop
xchg
sub
insl
rolb
inc
jecxz
test
inc
mov
inc
sub
add
rep
pop
lea
cmp
stos
push
movsl
push
jg
push
fisubl
popa
call
push
ds
mov
pop
pop
movsb
cmp
mov
and
mov
adc
out
sbb
mov
das
dec
test
mov
scas
jnp
subl
mov
ja
jae
out
add
out
xor
lret
test
xor
js
add
xchg
xor
cmpsl
and
xor
and
outsb
and
push
add
jne
clc
arpl
push
pop
sar
out
mov
fcompl
add
cli
shl
mov
add
jg
and
or
sbb
adc
adc
xchg
push
jbe
mov
es
roll
lahf
cmp
div
push
mov
ljmp
pop
sbb
adc
dec
notl
mov
dec
test
pusha
in
mov
mov
sub
sarl
dec
or
pop
lds
xchg
and
jnp
fs
insb
xlat
loopne
fmuls
aam
loopne
mov
insb
sub
addb
aas
add
movsb
inc
mov
fstl
mov
enter
xor
loopne
push
insb
lret
push
dec
mov
data16
imulb
push
and
pop
mov
adc
fcmovne
jno
cmp
jne
cli
or
sahf
roll
mov
mov
sti
xor
inc
insb
xor
jb
pop
mov
fmuls
mov
lret
movb
outsb
dec
jnp
pop
cmp
outsb
push
xor
xor
and
int
andb
or
mov
sub
pop
test
xor
sbb
loopne
pop
push
mov
and
jle
xchg
sub
addr16
adc
cmpsl
je
lahf
lret
test
mov
stos
or
adc
rcl
popa
into
call
inc
pop
hlt
orl
sub
movsb
mov
iret
ja
dec
dec
cltd
and
aam
addr16
loopne
push
jne
cld
std
ficomps
scas
add
sbb
lret
into
in
lret
das
lcall
clc
and
iret
xor
jp
mov
outsl
lcall
sbb
and
dec
mov
pop
int
cmp
lock
sub
mov
jno
sub
add
dec
movsl
lods
pop
outsl
ret
lods
pop
mov
mov
inc
enter
repnz
out
mov
pop
mull
sahf
xchg
or
outsl
mull
xor
icebp
data16
inc
and
mov
pusha
push
jne
push
leave
adc
push
mov
lahf
inc
shr
inc
jl
fs
push
push
rolb
fs
fistl
pusha
dec
enter
add
sub
sbb
fstps
inc
sbb
adc
pop
mov
and
or
adc
orl
mov
in
or
dec
ficoms
das
add
enter
ret
mov
pop
daa
fistps
sub
imul
jne
mov
lahf
daa
lret
movsl
xor
jg
cmpsb
js
fistl
add
in
dec
pop
out
ss
xchg
shll
or
xor
mov
mov
movsl
shlb
out
out
jns
shl
add
test
stos
shlb
lods
ljmp
xchg
testl
insb
sarl
mov
adc
xor
outsb
stos
push
arpl
xchg
mov
jl
lock
test
jle
dec
negl
fs
mov
push
in
pop
dec
push
rcrb
or
xchg
adc
lret
rcll
inc
repnz
in
daa
andl
or
pop
int3
fistpll
push
leave
inc
mov
push
scas
mov
dec
inc
scas
sbb
jnp
xchg
sar
iret
movsb
mov
in
cmpsb
inc
push
fbstp
adc
adc
repnz
jle
mov
cmp
insb
mov
aaa
jle
shrb
outsb
xchg
push
mov
xchg
repz
sub
dec
inc
sub
push
cld
nop
jo
outsl
mov
pop
sti
sbb
inc
out
xchg
cmpsl
ret
push
das
sub
arpl
sub
out
xor
enter
mov
lods
pop
loop
add
rclb
push
xorb
inc
insb
push
dec
jo
mov
rcll
imul
sub
and
fidivrl
je
into
push
push
adc
pop
mov
jle
jae
mov
pop
pop
scas
push
cmp
push
sbb
add
loop
mov
cmp
mov
imul
sub
lods
testb
push
ret
ljmp
fisttpl
pop
inc
xchg
fwait
jp
pop
cmp
xchg
pushf
adc
popa
pop
xchg
jnp
iret
lea
jg
or
mov
xchg
mov
adc
add
xor
repz
loopne
into
insl
lcall
test
mov
mov
sbb
inc
cmpsl
push
fsubr
pop
mov
mov
fmuls
add
cs
icebp
pop
repz
rcll
in
sub
mov
mov
lret
xchg
hlt
cmpsl
mov
dec
xor
or
rcr
aas
jae
fadds
adc
pop
sub
aas
aas
push
mov
jmp
test
mov
sbb
jo
xchg
cmpsb
insl
inc
push
insb
cmp
lea
mov
aam
add
mov
inc
mov
mov
mov
or
cs
push
pop
sub
notb
loope
adc
roll
jne
loopne
clc
adc
mov
rcrl
push
inc
mov
add
ljmp
data16
out
push
fucomi
or
push
adc
mov
mov
mov
mov
and
daa
mov
jb
jbe
sbb
mov
out
xor
jmp
dec
pusha
pop
lret
pushf
and
mov
and
pusha
nop
xor
mov
loope
lods
aaa
and
add
sbb
insl
cmp
shr
xchg
jno
pop
adc
jmp
insb
loope
jb
popf
sbb
iret
imul
or
notb
xor
jne
push
mov
cmp
stos
or
sub
ss
xchg
fistpll
push
daa
add
jmp
push
cwtl
sarb
jae
lods
or
cs
dec
lret
mov
sbb
sbb
into
xchg
xlat
cmp
mov
push
nop
mov
jo
es
adc
loop
movb
mov
pushf
bound
mov
loope
push
cmp
test
add
cmp
pop
push
dec
and
push
push
loop
sbb
fbld
out
iret
sub
into
neg
stc
push
sbbb
sbb
pushf
adc
cmp
clc
inc
fstps
insl
lret
sbb
fildl
pop
subl
pop
xchg
inc
jmp
mov
or
mov
in
add
jmp
cmc
in
fwait
inc
sub
roll
jo
xchg
jns
ljmp
xchg
stos
push
cs
mov
dec
inc
adc
mov
lret
mov
fwait
xchg
movsb
mov
jbe
sub
movsl
sub
inc
outsl
dec
adc
mov
cs
je
dec
mov
or
xchg
sbb
pop
out
pusha
pop
dec
fsts
popa
and
mov
jbe
ret
push
ret
lahf
cmc
dec
inc
inc
mov
pop
enter
sub
int
push
dec
bound
repz
add
push
out
outsb
and
and
sbb
popa
fldenv
and
jg
xchg
jmp
add
cmp
ffree
or
popa
test
fldt
in
push
sarl
xor
adcb
mov
cmp
aam
or
jmp
test
or
movsl
inc
out
inc
and
inc
and
pop
jo
mov
test
dec
mov
inc
fisttpll
jo
out
das
arpl
add
rcl
test
xchg
popf
lock
cmp
outsb
xor
pusha
pop
in
ds
filds
scas
cmpsb
insb
inc
adc
aad
xchg
shll
cmp
into
xchg
test
jecxz
pop
ret
pusha
mov
dec
xor
mov
sarb
jbe
test
dec
cld
call
ja
cli
mov
insl
sbb
jge
shl
xchg
ds
out
mov
pop
mov
dec
pop
ret
out
mov
jecxz
push
out
dec
add
dec
inc
sahf
dec
jmp
adc
jecxz
jmp
and
imul
ljmp
xor
mov
enter
stc
fldl
testb
jo
xor
jecxz
outsl
jns
mov
scas
fcoms
sbb
in
add
insl
mov
out
inc
mov
inc
inc
jb
mov
movsl
adc
push
inc
fwait
inc
jnp
jb
or
rcrl
out
mov
fadd
pop
in
hlt
jg
sub
sub
mov
and
fs
pop
popf
lcall
push
loope
and
fidivrl
or
pop
insb
mov
ljmp
sub
and
inc
icebp
out
jae
and
jno
hlt
jge
nop
jo
insl
sub
mov
jmp
bound
pop
and
scas
mov
pop
mov
int3
test
fucompp
mov
leave
xchg
les
jbe,pn
jnp
ljmp
je
hlt
adc
movsl
xor
mov
xor
jo
push
sahf
test
addr16
push
aaa
stos
fwait
imul
cmp
mov
fisubrl
xor
hlt
xchg
clc
testl
pop
cmp
pop
adc
sti
inc
movsb
dec
mov
subb
dec
fistps
push
inc
sbb
xor
movsl
fwait
pop
sahf
sti
jle
mov
clc
pop
mov
int3
jp
inc
or
sub
jmp
sbb
xchg
mov
pop
cmp
ss
cmp
movsl
jecxz
cmp
ret
lds
push
daa
jecxz
ja
mov
pop
aas
ljmp
add
sahf
pop
cmpsl
and
adc
loop
addr16
dec
cltd
push
push
cmp
pop
mov
popa
bswap
popf
cmp
xchg
loop
mov
rolb
xchg
das
icebp
mov
arpl
mov
sbb
iret
and
pop
and
mov
or
lods
icebp
jb
xchg
ret
in
xor
es
mov
inc
shl
xor
je
orl
and
push
aaa
jg
sbbl
hlt
jl
repz
nop
mov
inc
pop
js
xor
inc
or
cli
xchg
mov
mov
jge
add
js
movsl
sub
std
mov
xor
icebp
ja
scas
or
xchg
popf
inc
cs
mov
or
or
and
jno
push
fidivrl
xor
lock
test
in
mov
stos
fmul
jno
inc
fs
or
test
dec
mov
and
sbb
fsubl
sti
lahf
mov
dec
or
test
adc
arpl
push
clc
iret
int
xchg
mov
pop
adc
sbb
les
aaa
orb
pop
mov
push
pop
incb
push
outsl
cmpb
lods
movsb
dec
pop
pop
call
adc
xor
sbb
push
in
iret
inc
pusha
cmp
and
stos
or
roll
les
sub
pop
cmpl
clc
lods
mov
xor
fwait
out
add
dec
cmc
int
xchg
jl
mov
push
dec
adcl
add
mov
add
test
add
mov
mov
mov
cmp
pop
xor
pop
into
ret
enter
popf
push
dec
mov
jo
mov
sbb
cmp
bnd
jecxz
pop
inc
push
aam
test
cmp
std
pop
clc
sbb
mov
aas
notl
sub
ss
cwtl
cs
sub
sub
fisttpll
jne
sbb
xchg
ret
out
ret
jmp
adc
push
sbb
test
sub
add
adc
ret
inc
or
roll
cmp
fdiv
fisttpll
lret
movsl
lea
mov
sub
adc
cmp
add
jno
jb
repnz
fildl
or
mov
mov
fcmovnbe
xchg
add
sbb
mov
cmpsb
sbb
pop
test
lods
jne
xchg
push
mov
xor
fistps
adc
imul
sbb
and
imul
inc
lahf
rcll
fwait
gs
sub
arpl
mov
jl
ss
lods
or
into
loopne
sbb
andl
jmp
or
popa
cvtps2pd
xchg
rclb
inc
repnz
out
sbb
aaa
lcall
movl
loope
rcrl
aas
out
pop
in
pop
pop
sbb
jns
adcl
xchg
ljmp
adc
gs
dec
shll
push
jge
hlt
and
xchg
jae
outsb
scas
xchg
hlt
fimuls
in
cmpsl
int
insb
mov
mov
xor
pop
mov
out
in
xchg
mov
mov
daa
daa
jno
sub
fimuls
ja
fimull
inc
push
xchg
mov
mov
lds
aaa
jg
test
push
int
cmp
scas
test
imul
and
xlat
ljmp
dec
push
sub
fs
das
jnp
push
mov
insb
cwtl
adc
mov
mov
repnz
lcall
loope
mov
push
hlt
out
xor
inc
movsb
arpl
dec
and
rolb
addr16
xchg
cmp
xchg
loope
ja
jmp
add
out
dec
lods
mov
insb
sbb
jp
jmp
jbe,pn
pop
xor
movsb
mov
nop
add
push
cmp
dec
std
pop
jecxz
xchg
inc
fisubs
icebp
sti
vpmaddwd
pushf
cltd
mov
sti
addr16
lahf
push
call
xchg
out
sub
mov
ljmp
or
add
jge
test
mov
sub
pop
jne
in
daa
inc
pop
lret
inc
jl
pop
inc
pop
or
loopne
fisubrs
out
cmp
xor
aas
xchg
sbb
loopne
stos
pop
cmpsb
xor
cmp
lret
ljmp
out
and
pop
ljmp
push
std
add
sub
repnz
in
fists
loopne
into
jge
les
xchg
xchg
sahf
iret
ret
cwtl
lods
addl
push
jns
fistpll
fiaddl
push
pop
and
sub
lret
xor
push
insb
fs
into
inc
push
mov
adc
int
ret
xchg
pop
dec
pop
js
cmc
rcl
push
mov
or
add
xchg
sbb
aad
pop
pop
lock
mov
jae
mov
into
popa
fisubrl
mov
jle
sbb
cmp
lock
les
clc
mov
repnz
jo
call
adc
ds
imul
cli
sti
sbb
fistl
ljmp
and
sahf
adc
mov
cmp
xlat
pusha
or
fwait
ljmp
sub
fldenv
pop
lcall
mov
sahf
mov
jmp
pop
inc
je
fldt
sub
addr16
ljmp
xchg
loop
xchg
mov
jne
lods
sub
pop
xor
sahf
push
sub
stos
sbb
push
dec
test
out
orb
xlat
repnz
sub
mov
push
cmp
pushf
pop
mov
fptan
stos
xor
enter
ror
xchg
out
out
fisubl
shll
inc
jbe
ds
testl
out
adc
lods
mov
fnsave
mov
push
scas
sub
lods
das
lods
scas
insb
outsl
dec
or
push
lahf
jle
xor
jne
push
pop
dec
push
xor
inc
mov
imulb
pop
nop
arpl
xchg
xchg
test
xchg
jbe
mov
xlat
add
jecxz
mov
pop
push
lahf
mov
aas
jge
lea
movsl
sub
dec
xchg
dec
int
stos
fisubl
xor
sbb
std
jecxz
cmp
pop
jl
jne
int
aas
loope
lcall
aaa
jb
pop
shl
sbb
js
daa
mov
pop
sahf
jle
cmp
cwtl
faddl
mov
jmp
mull
push
lret
pop
mov
add
xchg
inc
aam
mov
scas
cs
mov
stos
xchg
lock
dec
push
lea
adc
lea
push
mov
shrl
loop
mov
jo
icebp
scas
lcall
loope
xor
jae
sbb
loopne
cltd
mov
lret
mov
cli
add
adc
ficompl
imul
push
leave
out
pop
mov
cmp
lahf
and
pusha
les
ds
or
in
and
add
mov
dec
repnz
movsb
add
and
mov
das
imul
movsl
jbe
fisubrl
push
and
jmp
jmp
cwtl
aam
cmp
bound
out
inc
inc
fwait
mov
rclb
aad
fsts
inc
sbb
not
pushf
out
movsb
rcrb
loop
adc
rcll
mov
pop
add
jno
mov
xchg
icebp
cltd
cmp
push
iret
popa
nop
fbstp
and
pop
mov
pop
aas
jmp
jo
dec
push
xchg
fisttpl
roll
stc
fcomps
cmovns
dec
pop
mov
adc
xchg
dec
pop
roll
push
mov
and
cltd
addr16
shll
fistpl
mov
push
jl
adc
inc
add
mov
mov
cmpsb
and
and
mov
inc
adc
xor
out
btc
and
jnp
cmp
cmpb
jne
dec
scas
cmp
fcoms
cltd
nop
stc
xorl
and
or
je
test
xchg
js
inc
push
sub
pop
jl
das
dec
pop
xor
cs
clc
mov
jp
loope
mov
sbb
scas
xchg
js
adc
inc
ds
lcall
idivl
scas
push
cmpl
inc
xchg
adc
in
in
sar
aaa
fwait
pop
mov
xor
cltd
aaa
inc
out
ret
push
inc
ljmp
or
cmp
call
insl
pop
cmp
lret
lea
sti
je
jmp
sub
pop
cli
call
xor
rorl
mov
dec
mov
int
jge
cmp
cli
loop
fcompl
xchg
nop
xchg
inc
sbbb
sub
aam
mull
mov
mov
xor
ficoms
mov
inc
xchg
mov
inc
into
add
adc
fnstsw
imul
inc
pop
push
sbb
mov
push
popa
inc
pop
sbbl
fsub
les
push
and
in
nop
and
orl
sbb
dec
xor
mov
pop
pop
flds
dec
push
jne
inc
rcrl
jecxz
or
pop
and
out
loopne
xor
jae
shrl
mov
rdpmc
stc
scas
adc
pusha
push
ja
adc
loope
shl
sub
add
rcr
xchg
jae
stc
negl
insl
xlat
mov
sbb
data16
ja
pop
add
adc
pop
sarb
sahf
test
mov
xchg
push
mov
pop
or
add
adc
hlt
add
and
data16
xlat
js
jno
into
lods
push
cmp
rorb
aaa
loope
jb
mov
mov
and
in
sti
push
ja
mov
rcl
out
fstpl
mov
ljmp
aam
xchg
jge
mov
sub
fiaddl
lea
pushf
pop
ret
or
push
shl
arpl
cs
sub
cld
inc
cwtl
scas
popw
jl
cld
fwait
lods
cmp
scas
out
test
cmp
iret
or
xlat
jle
jmp
mov
xor
cmp
roll
fsts
in
bswap
xchg
ja
xchg
ljmp
outsb
call
xchg
jle
jo
jns
aas
mov
push
aad
cmp
jbe
fadd
imul
sbb
aad
mov
mov
ficomps
mov
jmp
mov
sub
cli
outsl
test
lods
mov
test
adc
shll
jno
pop
push
mov
mov
psllw
scas
pop
insb
insl
aas
jns
dec
int
in
mov
xchg
cmc
pop
in
xor
dec
stos
and
loopne
dec
dec
mov
scas
stos
addl
push
pop
in
push
xchg
adc
add
xchg
xor
push
std
push
add
insb
repz
add
negb
or
mov
add
rcl
xor
jg
dec
imul
xlat
cmp
adc
pop
and
jns
mov
push
fiaddl
mov
pop
sahf
add
xchg
sbb
xor
mov
divl
push
aad
push
add
add
pop
sub
sub
insb
add
imul
dec
pop
push
scas
xor
enter
push
inc
cmp
mov
or
shll
daa
enter
call
rclb
aad
and
dec
mov
jbe
jne
pop
pop
push
xlat
les
sbb
mov
rcrb
insb
ret
inc
insb
sub
jge
mov
mov
mov
js
imul
add
mov
mov
or
inc
dec
mov
add
aam
lahf
adc
ret
dec
cmp
ficompl
sub
in
push
in
daa
or
sub
ljmp
arpl
xchg
xchg
sbb
push
lret
add
sbb
inc
mov
jns
adc
icebp
or
jb
dec
push
cld
aad
fbstp
lea
cmpsb
push
idiv
ret
mov
push
int
cmp
jmp
iret
lods
add
jno
jns
jmp
xorl
mov
push
jae
add
shl
sub
pop
jg
outsb
in
lcall
ljmp
push
scas
cltd
test
xchg
lods
jp
pop
dec
push
and
mov
adc
adc
cli
into
jo
movsb
adc
pop
jge
repnz
lahf
addb
dec
into
sbb
mov
out
and
xor
mov
mov
and
sub
out
popa
dec
mov
out
mov
std
xor
shlb
mov
pop
jmp
or
adc
fmuls
push
imul
aad
leave
popf
sbb
adc
std
mov
and
lea
inc
mov
jne
mov
push
gs
jo
pop
rorb
and
mov
cld
pop
mov
jl
es
mov
xchg
cmpsl
leave
repnz
fnstenv
fcomps
mov
pop
jmp
cltd
jmp
ljmp
jns
rorb
sbb
jmp
push
enter
mov
and
jg
sub
mov
dec
push
mov
clc
lods
add
pop
out
dec
sbb
mov
sub
iret
dec
cmp
xchg
cli
scas
ret
lret
test
lcall
sub
push
xchg
ss
sbb
sbb
icebp
ret
jns
mov
ret
fildll
push
cmc
push
push
data16
jnp
sbbb
in
mov
xlat
clc
loop
jbe
mov
in
and
in
mov
inc
insb
xor
mov
imul
inc
cmpsb
push
cmpsb
cli
lods
cmp
xchg
pop
iret
sahf
sbb
into
dec
jg
mov
pop
dec
jge
popf
popa
aam
test
fsts
mov
sub
add
test
aas
cmp
enter
jle
cwtl
int3
lods
shlb
movsb
leave
hlt
das
xchg
stos
adc
mov
in
lea
loop
xchg
insl
pop
aad
push
push
add
popf
add
pop
adc
cltd
subb
mov
inc
dec
cmpsb
adc
or
iret
pop
dec
lods
push
out
dec
filds
mov
sub
dec
mov
stos
push
je
xor
xchg
js
add
xor
cmp
dec
outsb
mov
enter
cmpsl
mov
insb
pop
jns
into
aad
popa
int
ds
cwtl
inc
jne
push
aaa
mov
inc
movsb
add
xchg
lock
aaa
xchg
sbb
mov
mov
mov
jae
ss
jno
sub
rcrl
pop
sarl
sbb
mov
jl
xchg
push
fs
inc
push
mov
out
fs
push
inc
xchg
scas
pop
ljmp
xchg
jg
leave
sti
dec
popf
loop
dec
incl
cli
pusha
adc
pop
or
popf
lcall
inc
rcrl
adc
sub
outsb
sbb
sti
out
cmpl
add
bound
gs
dec
mov
outsb
adc
icebp
xchg
and
mov
adc
dec
aam
shl
sub
or
jbe
push
mov
sahf
dec
popl
popf
jecxz
jno
icebp
cmpsb
lock
jge,pn
cs
pop
mov
pusha
lods
cmp
enter
in
jl
test
or
out
out
inc
loope
loope
xchg
or
adc
xchg
pop
mulb
loop
add
pop
pop
pop
icebp
fdivrs
and
out
loope
inc
lret
xchg
and
cli
shl
lea
xor
pop
adc
xchg
add
adc
call
adc
imul
inc
jo
outsl
sbb
loope
pop
lds
in
aas
sbb
xor
mov
test
add
or
cmp
lret
lock
push
int
lods
and
push
call
nop
add
lcall
pop
call
xor
subb
es
adc
push
mov
mov
inc
out
arpl
movsl
add
xor
adc
fcompl
add
adc
aam
std
hlt
adc
add
add
daa
sahf
add
in
xchg
faddl
adc
push
jo
xchg
fstps
adc
or
bound
test
and
cmp
add
test
ljmp
lret
popw
adc
cltd
repnz
mov
lret
inc
fcomps
lea
es
mov
addr16
icebp
mov
clc
inc
fnstcw
sbb
adc
jb
xchg
jle
mov
insb
push
jns
aaa
jno
insb
mov
jne
dec
xchg
mov
loope
cs
stos
je
popa
xlat
lds
into
icebp
scas
mov
pop
insl
lahf
lea
cmp
fdiv
xor
js
mov
aam
dec
jmp
cmp
pop
mov
add
jno
mov
xchg
or
es
mov
xchg
and
ds
ficomps
mov
ja
fdivl
pop
shll
repz
enter
sbb
fidivs
mov
and
xor
push
xor
sbb
jb
out
pop
mov
sub
sti
iret
xchg
iret
je
jnp
cmp
jbe
rclb
imul
or
lret
pop
ja
aas
inc
push
in
push
cmc
mov
ret
inc
stos
pop
hlt
xchg
ljmp
lcall
imul
fmull
mov
sbb
mov
rolb
and
rcll
rcr
sbbl
add
mov
insb
aam
sub
and
lahf
xor
push
push
inc
rcrl
or
xchg
cmc
push
out
cmp
push
inc
rcr
mov
mov
mov
pop
mov
shlb
aad
push
bound
jmp
xchg
push
sbb
jno
jne
loopne
aaa
sbb
jae
xchg
sbbb
movsb
testl
stos
fs
cmpsb
cmp
imul
push
add
push
xorl
fidivl
outsb
and
adc
fwait
cmpsb
jo
push
push
ror
insl
cmpsl
mov
dec
add
xchg
xor
sub
sub
je
in
aad
imul
scas
jns
stos
in
pop
arpl
imul
inc
imul
enter
addr16
push
cld
adc
pop
jae
addb
inc
mov
jl
push
pusha
pop
cmp
mov
or
push
pop
idivl
pusha
sarl
jno
out
xor
and
test
xchg
jmp
ja
sbb
subb
push
clc
insl
xchg
gs
ret
inc
xor
cmp
rorl
aam
xlat
in
mov
xchg
roll
or
cltd
sbb
ljmp
cmpsl
shrl
test
shr
dec
fcmove
cli
call
imul
xchg
push
mov
sbb
sub
xor
arpl
addr16
and
loop
adc
out
mov
bound
in
or
dec
loopne
add
xchg
lret
jecxz
stos
stos
mov
dec
out
mov
insl
xchg
popa
ljmp
push
stos
sahf
push
sub
jmp
stc
jg
jge
leave
mull
xchg
add
and
cmp
cs
cmpsb
mov
daa
push
leave
shr
dec
test
adc
enter
loopne
dec
xrelease
inc
adc
shrl
fcoml
loop
cs
inc
adc
or
into
fstps
xchg
inc
jno
je
out
mov
movaps
add
int3
mov
sub
xchg
scas
xchg
lods
xchg
into
add
push
scas
inc
jmp
lea
xchg
popw
lods
dec
hlt
iret
xchg
iret
mov
fidivrl
sub
loope
add
pop
mov
dec
popa
arpl
out
push
addr16
addr16
xchg
loop
cltd
sub
sbb
push
pushf
xor
xor
std
dec
jle
sub
out
jns
aad
insb
sbb
mov
cld
lds
push
lds
gs
adc
adc
or
push
testb
mov
mov
mov
inc
pop
inc
pop
jo
jg
pusha
outsl
cmp
neg
fcomps
pop
movsl
xchg
mov
push
xchg
fisttpl
lock
add
push
pop
push
fstpt
roll
lock
mov
lcall
or
enter
stos
in
arpl
mov
cmp
mov
out
cmp
sbb
sbb
cmp
insb
outsl
ret
jecxz
scas
mov
push
and
popl
dec
xchg
into
pop
dec
cmc
xchg
sbb
and
or
pop
popf
in
fistpll
and
sbb
gs
loope
jecxz
clc
lods
inc
push
icebp
call
out
das
and
mov
mov
lock
push
adc
xor
cmpb
pop
outsb
notb
inc
and
fstps
imul
inc
jl
xor
xchg
shlb
xchg
std
dec
jmp
dec
pop
mov
mov
rorb
mov
cmp
pusha
xor
jnp
mov
push
adc
out
add
cli
fisubrl
cmp
mov
xchg
fadd
dec
dec
mov
and
mov
cmp
cmpl
movsb
sub
cmpsb
rcr
fnstcw
inc
dec
roll
iret
and
xchg
mov
xor
test
aaa
jmp
loopne
cmp
sbb
jno
mov
call
jge
jbe
cmpsb
int3
sbb
jne
pop
pop
frstor
je
imul
mov
xchg
into
pop
dec
sub
test
repnz
stc
xchg
jo
inc
pop
loop
sti
adc
jge
jno
int3
mov
adc
mov
pop
insl
or
mov
inc
xchg
out
inc
mov
inc
xlat
mov
xor
jae
pop
ja
mov
sbb
adc
and
das
mov
inc
rorl
fildl
shlb
jo
xchg
dec
int
stc
xchg
lahf
xor
ret
mov
into
xchg
movsl
and
sub
sahf
mov
lret
lods
ljmp
pop
imul
inc
outsl
xorb
lret
mov
cmp
decl
or
mov
aas
mov
fcomp
dec
cmp
push
repnz
outsl
int3
add
sub
ss
xchg
test
pusha
add
mov
jg
out
pop
clc
xchg
add
push
adc
sub
push
push
ljmp
rcr
xchg
push
enter
shrb
out
jg
daa
jnp
int
or
xchg
or
sub
lahf
lret
xchg
cmp
lds
mov
xchg
stos
scas
push
inc
cs
jmp
movsl
fwait
mov
testb
outsl
test
add
mov
jo
dec
cmp
lret
cmp
pop
dec
jne
fbld
pop
jno
adc
aas
rol
adc
incb
push
adc
es
and
push
lret
inc
push
dec
or
cli
adc
je
mov
mov
fs
and
sbb
mov
jle
dec
addr16
repz
sub
popf
mov
rorl
les
in
xor
mov
cwtl
xor
decb
jne
fldt
pop
shrl
ffree
xchg
mov
sarl
ja
xor
fidivrl
ljmp
adc
xchg
imul
jmp
into
dec
testl
lea
test
or
push
lods
outsl
or
stos
jmp
jmp
int
stos
addl
cld
out
lret
push
inc
adc
push
sbb
mov
sub
add
mov
pop
sub
pop
pop
xor
sbb
popa
mov
in
scas
inc
dec
test
idivl
dec
adc
sbb
addr16
sti
or
xchg
movsb
stos
push
loope
or
insl
or
cld
jb
jo
push
ret
lods
fcomps
cld
cld
ret
cwtl
cmpsl
mov
inc
or
xchg
mov
fsubl
mov
xchg
call
inc
daa
xchg
mov
fimull
ljmp
xor
enter
shlb
repz
and
cmp
lods
pusha
add
xchg
gs
xchg
lods
mov
jbe
dec
or
mov
lods
cmp
pop
or
imull
jae
int3
push
add
mov
dec
fstpt
stos
push
rorl
cltd
sbb
pop
sub
sbb
loope
stos
xchg
jle
add
js
xchg
iret
cld
daa
lret
xor
fwait
mov
ret
loopne
cmp
cmp
mov
int3
stc
pop
cmpsl
gs
jmp
mov
mov
pop
cld
lea
leave
stos
dec
cld
aas
out
fists
adc
jae
lcall
mov
mov
hlt
cmpsb
test
cmpsl
adc
lods
gs
fmul
dec
mov
mov
jb
or
pop
jl
call
int3
pop
add
add
pop
mov
xlat
das
inc
mov
insb
adc
cmp
mov
ds
aam
ds
or
icebp
jo
repnz
jae
aas
push
mov
clc
jnp
cmc
mov
scas
fidivl
sub
add
inc
shl
dec
clc
ret
jne
pop
add
jp
js
mov
mov
out
jecxz
sbb
mov
xchg
jle
aad
lea
ret
sub
inc
mov
test
mov
cmpl
sbb
xor
popa
mov
mov
call
cwtl
std
fistps
lods
repz
push
mov
jge
out
stc
fbld
xchg
cli
rolb
ljmp
jg
pop
in
pop
push
outsl
loopne
xlat
cltd
ret
xchg
stc
dec
xor
inc
jge
push
jmp
jge
xor
lcall
mov
int
test
in
repz
pop
push
sbb
aas
pop
cmp
adc
rorb
dec
mov
scas
push
sub
stc
imul
mov
shrb
bound
fbstp
ret
shufps
cmp
aaa
sub
iret
sti
out
pop
fimull
pop
cmp
xor
mov
jb
adc
inc
push
and
xor
cmp
sub
add
dec
pusha
mov
fcomps
adc
pop
test
loope
inc
and
fcoml
fcoml
mov
pushf
ret
nop
cmpsb
ljmp
clc
mov
mov
adc
sub
xor
movsl
push
inc
mov
fs
mov
imull
pop
cmp
push
jge
sub
xor
movsl
jge
in
ltr
jnp
ror
adc
xchg
mov
aad
cwtl
mov
imul
and
jnp
scas
enter
mov
rcll
aam
xchg
int3
rcrb
inc
mov
mov
push
cmpsb
dec
jg
cmp
fdivs
pop
je
fistl
xor
in
in
xor
fcompl
fcoml
pop
push
mov
jge
imul
cltd
sbb
shr
notl
rorb
imul
and
mov
stos
fbld
push
inc
dec
bnd
push
mov
pop
mov
inc
cs
xchg
sbb
xor
xchg
roll
jle
or
mov
jmp
bound
jns
imul
mov
mov
mov
mov
inc
in
xor
ret
mov
push
xor
fldenv
and
sahf
int
mov
add
and
div
cmp
fwait
mov
dec
into
cwtl
adcl
xchg
add
rorl
nop
cmp
xchg
iret
sub
pop
adc
idivb
add
push
xchg
and
stc
arpl
push
cmp
add
jo
pop
push
ja
dec
jbe
fdivr
rcrl
pop
je
cli
sarb
dec
in
xor
ss
int3
push
sub
sub
mov
jb
xor
arpl
leave
js
mov
sub
cld
mov
das
pop
inc
rorl
shlb
mov
mov
push
insb
fisttps
mov
cmpsb
jns
xchg
cmp
test
mov
scas
xor
js
stos
sbb
mov
jp
push
mov
push
movsb
rsm
jmp
ret
or
or
scas
or
and
test
mov
call
mov
pop
jg
jb
lahf
lock
aam
mov
rcll
mov
in
inc
jp
addr16
push
pop
clc
push
fistps
pushf
sti
mov
mov
jg
sub
mov
and
imul
out
fs
lea
das
and
lcall
cmp
mov
xor
sbb
xor
ljmp
pop
aad
jns
sbb
cmpsb
mov
decl
and
out
lret
imul
add
pop
lret
pop
cli
fs
test
hlt
jecxz
jmp
xor
dec
add
imul
out
sub
sarl
lret
mov
shr
mov
xor
inc
jae
lret
cld
mov
out
jmp
aaa
xor
mov
out
jnp
pop
bound
mov
les
pop
xlat
push
xchg
lods
jbe
xor
dec
jne
lcall
lret
mov
push
sbb
dec
adc
cli
mov
into
jb
mov
sub
cmp
std
mov
jb
test
enter
ret
sub
add
jae
inc
and
arpl
pop
call
pop
daa
mov
les
lock
data16
push
inc
push
push
icebp
and
jns
ljmp
cmpsb
sub
jecxz,pt
xor
and
sbb
je
ljmp
in
test
xor
xchg
push
inc
or
push
mov
fs
mov
push
add
aaa
std
push
jg
int3
adc
shll
shr
nop
mov
out
scas
pop
fiadds
rorl
xchg
xchg
lret
xlat
xlat
inc
pop
dec
out
add
mov
cmpsb
loopne
gs
je
popa
jle
aaa
xchg
movsl
lea
sub
and
sub
mov
xchg
sarb
test
sbb
cmp
xchg
xlat
mov
cltd
shrb
mov
in
pop
push
cmp
mov
call
mov
inc
xchg
push
fdivrs
out
imul
xor
add
and
mov
push
es
jge
stos
pop
jmp
add
mov
xchg
mov
mov
les
lret
or
jb
out
jns
popf
or
push
pop
jp
ret
push
mov
push
es
iret
icebp
add
add
repz
popa
scas
scas
in
ja
daa
push
inc
outsl
xorl
xchg
ja
fisttpll
into
sarl
inc
mov
and
xor
ja
ret
jecxz
mov
push
jno
or
mov
push
xlat
jb
pop
pop
fisubrs
data16
paddw
out
std
repz
loop
ljmp
fs
roll
dec
sub
imul
clc
in
pop
ljmp
mov
sti
daa
clc
mov
jmp
jge
rcr
aad
sbb
mov
pop
sarb
scas
sub
pop
jmp
lcall
stos
mov
sub
xchg
fadds
sub
bound
repz
dec
inc
jne
sbb
addr16
mov
mov
and
hlt
jmp
sub
dec
cmp
mov
jge
pop
aam
popa
sub
push
xor
push
cltd
adc
fldenv
inc
xchg
dec
mov
dec
xor
mov
leave
xchg
iret
aas
fwait
mov
out
arpl
mov
and
adc
mov
loope
mov
mov
je
inc
or
movsb
loopne
jbe
out
std
je
pusha
cli
lret
cmpsl
fwait
movsl
imulb
ljmp
add
and
das
adc
sbb
movsl
add
popa
sahf
push
ffreep
push
sbbl
add
dec
sbb
jmp
push
loop
mov
mov
les
jb
inc
aam
adc
scas
inc
lock
cmp
mov
pop
mov
cmp
mov
lahf
ficoms
loop
ss
rolb
sub
movl
or
outsb
lods
push
dec
sbb
stos
data16
and
xchg
rcl
cmp
xchg
aam
lcall
cmp
pop
sub
jne
repnz
push
test
jo
addr16
rorl
repnz
in
ljmp
pop
inc
mov
mov
pop
adc
aas
aad
sbb
int
cltd
aaa
sbb
lret
scas
or
xchg
js
and
pop
push
jg
popf
dec
sbb
pusha
mov
xchg
xor
aaa
jae
jb
add
aam
sub
xchg
test
scas
imul
cmpsb
insb
pop
push
mov
out
mov
pop
outsl
sbb
jb
sbbl
rcr
bound
adc
movsl
shl
sbb
aas
sar
hlt
roll
call
and
sub
pop
in
push
inc
arpl
stos
stos
addl
rcrb
pop
into
mov
test
sbb
loopne
dec
out
in
jmp
fistl
andl
and
cmpsl
cli
push
test
pop
fdivrl
xchg
mov
imul
fistps
jecxz
daa
xchg
pop
sahf
dec
pop
sahf
test
mov
nop
xlat
sbb
into
pop
ja
test
ds
decb
pop
les
mov
sub
mov
int
mov
fistpll
iret
lds
xor
dec
sarl
push
push
adc
movsb
cwtl
lock
stos
sti
xor
subl
mov
pop
mov
loopne
or
nop
pop
adc
in
lret
mov
scas
pop
aaa
adc
jns
push
test
int3
mov
sbb
push
pop
xchg
xchg
pop
pop
dec
jmp
sarb
push
into
in
icebp
mov
cmp
loope
pop
fs
fimuls
aad
ja
pop
push
push
inc
lods
sbb
das
adc
out
icebp
stc
popa
les
fwait
mov
outsb
adc
dec
in
adc
cmp
push
cmp
jb
rcr
je
xchg
mov
inc
xchg
popf
adc
sbb
dec
aas
mov
pop
sahf
adcl
stos
mov
xor
notb
bound
scas
sub
sarl
push
div
jge
inc
dec
xchg
je
bnd
mov
mov
push
jle
dec
rorl
xor
xor
jo
into
lods
mov
pop
movsl
or
sub
cwtl
xchg
jge
cltd
pop
into
pop
and
push
mov
jno
test
dec
mov
cmpsl
cmp
insl
fisubrs
aad
jl
push
out
mov
ret
dec
pop
adc
cli
mov
repnz
xor
stos
cmp
pop
adc
lods
lret
mov
dec
mov
or
lea
or
mov
lret
mov
cmp
lcall
pop
dec
sub
xchg
repnz
scas
inc
movsb
mov
mov
mov
xlat
inc
lahf
aad
adc
jns
mov
xor
xchg
sarl
subb
adc
sub
hlt
ja
pop
shlb
sub
lods
js
testb
mov
in
pop
jo
mov
xchg
repnz
loopne
dec
cmp
ds
nop
ficompl
icebp
or
jmp
cld
pop
push
push
cmp
dec
pop
incl
cltd
mov
lods
loop
in
int3
mov
sete
addr16
fs
dec
loope
mov
jb
cmp
sbb
pop
dec
adc
jns
dec
or
jecxz
mov
lret
mov
dec
pop
test
and
pop
push
mov
in
cwtl
call
xchg
cwtl
xor
or
stos
pop
mov
or
or
into
xor
ret
lods
mov
fsubr
xchg
cmp
pop
loope
lock
adc
add
and
scas
and
inc
mov
and
mov
aaa
cwtl
mov
mov
add
fmuls
outsb
jge
fistps
addr16
sub
pushf
push
mov
cmp
mov
ljmp
or
iret
repnz
pop
je
and
mov
and
xlat
add
imul
add
mov
ret
out
aas
cmc
xor
xchg
or
fsubr
jl
sub
movsl
dec
jmp
les
mov
inc
es
jae
inc
loopne
lock
cmp
pop
xchg
out
xchg
and
pusha
inc
addr16
das
lea
push
pushf
pcmpgtw
adc
xchg
sub
inc
out
adc
sbb
cs
ret
scas
jb
or
xchg
inc
cli
jne
sti
sbb
mov
cmp
cwtl
xchg
orl
repnz
cmp
xchg
adc
aaa
fstpt
sbb
out
xorb
dec
pop
bound
sub
add
insb
bound
repnz
dec
pushf
mov
fsub
sub
push
lods
hlt
in
inc
pop
sub
cmc
rol
xchg
ljmp
jmp
movsb
pushf
daa
cmc
test
lds
jl
push
cmp
or
ss
test
gs
add
out
mov
popa
cmp
in
mov
xorps
daa
cli
stos
insb
test
cmpl
ss
in
les
mov
and
dec
testl
adc
or
pop
test
and
cmp
hlt
cmp
dec
shlb
bound
outsb
sbb
pushf
fnstsw
mov
or
repz
out
fldt
dec
pushf
daa
les
dec
jo
loopne
add
sbb
mov
fisubrs
jmp
jns
test
cs
rorb
and
dec
mov
jae
ljmp
aaa
xchg
popa
test
scas
pop
aam
mov
pop
jnp
and
fs
jae
pop
push
fcmovu
cs
mov
insl
lahf
pop
pop
shlb
jae
mov
fsubrs
lcall
in
or
cmp
in
push
lahf
sbb
jmp
mov
or
sbb
popa
add
inc
outsb
push
mov
sahf
inc
jge
cmp
cmp
sub
pop
cmp
mov
push
dec
nop
mov
sbbb
aad
imul
cmp
std
outsb
pop
ljmp
add
mov
and
stc
shrl
xchg
je
cmp
push
and
and
clc
mov
test
sahf
ret
mov
test
test
sub
sub
int3
jl
jnp
int
fsubrp
inc
jle
inc
sbb
pop
jmp
imul
jnp
movsb
mov
xchg
jne
dec
sub
xchg
jge
sbb
popl
fldt
or
les
push
sar
cmp
rcrl
hlt
xchg
jecxz
fstl
push
aaa
pop
cltd
add
sbb
outsb
dec
xchg
mov
and
xchg
xor
movsl
cmp
jno
insb
pop
mov
pop
xchg
js
mov
adc
lods
cmp
mov
jbe
sbb
or
stc
inc
scas
or
mov
cltd
lods
ss
cmp
mull
jle
cmp
inc
mov
adcl
inc
push
xchg
mov
cwtl
push
or
dec
cltd
lds
sub
push
dec
jp
jl
out
push
hlt
cmp
adc
mov
shll
jg
push
jno
aaa
daa
dec
ret
loop
mov
dec
xor
cmp
test
pop
aaa
jne
pop
scas
sbb
sbb
nop
ret
jbe
mov
sbb
mov
iret
shlb
xchg
das
push
mov
mov
push
dec
adc
sub
test
gs
and
loopne
xchg
sub
adc
popa
sbb
add
xchg
out
data16
push
push
ffree
scas
push
inc
test
fwait
lods
out
pop
and
pop
into
xlat
mov
mov
mov
sar
pop
in
xchg
inc
leave
test
in
jno
sahf
pop
leave
jne
stos
test
lea
push
inc
out
clc
xchg
inc
mov
in
notl
ljmp
scas
inc
incl
and
int3
insl
jl
bound
ja
leave
test
jecxz
clc
hlt
jmp
je
sub
push
mov
lahf
les
mov
xlat
test
mov
scas
and
push
and
and
pop
mov
cli
fistpl
jae
roll
andb
add
jg
and
xor
insb
dec
mov
repnz
imul
sti
mul
xchg
lahf
mov
lods
push
loop
scas
in
movsb
mov
leave
outsb
scas
aad
xchg
out
dec
sbb
sbb
popf
scas
push
adc
popf
mov
ret
sbb
ret
pusha
out
gs
pop
and
outsl
cld
sarb
mov
or
pushf
xor
inc
push
or
je
stos
xchg
push
ret
dec
lea
stc
cli
insl
sbb
es
jp
and
pop
pop
xchg
add
inc
cmp
mov
lds
cmc
add
fs
test
out
and
pushf
adc
nop
ret
jmp
out
pop
mov
jmp
jo
mov
inc
inc
dec
jecxz
in
pusha
frstor
int3
mov
mov
adc
sbb
dec
inc
loop
push
jae
lock
xchg
mov
rcrl
push
cwtl
repz
xor
fmuls
rclb
jnp
scas
mov
cltd
and
pop
orl
push
rcl
out
inc
fnsave
cli
ss
push
lods
pushf
push
push
rcrb
mov
push
in
mov
test
and
xchg
inc
cwtl
add
lahf
pop
dec
imull
outsl
subps
mov
enter
mov
xchg
and
xchg
aam
or
movsb
and
adc
dec
push
pop
dec
mov
shrb
je
xchg
ds
cmp
leave
pushf
aad
mov
sar
pop
mov
pop
jno
imul
xchg
scas
std
pop
call
movsl
push
inc
mov
imulb
cwtl
shrl
cmp
add
pop
jne
mov
mov
cmc
les
or
ret
popa
lea
inc
push
or
fstl
jp
fisttpll
and
mov
mov
inc
rclb
sub
mov
cli
fbld
inc
mov
inc
addr16
fldl
mov
and
setae
or
pop
std
inc
xchg
fwait
cmp
and
mov
inc
push
mov
loopne
mov
test
pusha
push
in
pop
ljmp
fmull
test
or
int3
mov
push
out
push
mov
jb
addr16
inc
inc
fcmovb
in
sbb
mov
mov
inc
dec
daa
pop
mov
lret
lcall
sub
imul
pop
inc
push
jb
lea
mov
push
inc
fcmovnu
xchg
aas
or
cmp
int
mov
and
cwtl
in
loope
popa
lret
lcall
push
add
jg
enter
lret
popa
pop
push
icebp
cmpsl
loop
add
add
mov
add
xor
lret
loope
sub
test
push
test
lock
loopne
sbb
inc
xor
das
dec
sahf
repnz
leave
scas
pop
dec
sarb
jbe
inc
inc
dec
sub
fiaddl
cmp
and
out
push
fiaddl
outsl
mov
xor
pop
rcll
pop
out
es
pop
mov
jge
scas
sub
jno
mov
pop
lds
dec
add
lods
pop
pushf
stos
out
adcl
cmpsb
out
add
inc
int3
neg
xchg
add
lods
fldenv
iret
push
imul
jle
xlat
shll
lahf
xchg
rcrl
mov
imul
in
mov
insl
mov
inc
fcmovnbe
int
mov
xchg
pop
jo
bound
mov
xchg
or
enter
mov
loopne
out
xchg
insl
test
dec
sbb
dec
aas
jl
fcmovnb
loope
push
mov
aad
fwait
and
xchg
or
pop
dec
pop
mov
jnp
jmp
mov
rolb
les
lcall
cltd
popa
cmp
or
push
push
xchg
jle
lea
inc
loop
cmc
add
jno
cmpl
fidivs
xchg
mov
cld
mov
mov
in
lods
loopne
xor
pop
push
cmp
xor
sub
aas
movsb
cs
out
sbb
arpl
xorl
std
filds
mov
or
push
insl
pop
adc
orb
lock
push
sbb
lcall
imul
adc
mov
adc
pop
gs
inc
shlb
into
lods
mov
jmp
mov
fsubrl
lcall
and
int
out
or
xchg
fs
jmp
sub
iret
adc
pop
repnz
into
jae
leave
cmp
or
test
bound
xchg
loope
adc
inc
or
psrad
insl
fs
sahf
movsb
push
sub
push
daa
mov
inc
add
jl
mov
cmp
arpl
daa
mov
fistl
xchg
les
iret
loope
cmp
sahf
add
push
xchg
ja
icebp
cmp
and
mov
mov
ret
clc
dec
cmp
mov
addr16
or
out
scas
mov
std
push
and
rcrl
fs
cmc
movsb
or
stos
push
jb
into
or
push
cmp
jle
and
mov
jle
outsb
test
jmp
enter
and
cs
in
shrl
sbb
cmp
test
insb
fmul
fwait
pop
inc
outsb
sub
or
icebp
scas
xlat
or
in
or
loop
cmp
sbb
jp
add
bnd
scas
test
sahf
pushf
and
mov
nop
ss
or
mov
sub
inc
pushf
xchg
ljmp
filds
pop
mov
clc
fs
stos
ret
push
js
decb
adc
cmp
jecxz
mov
icebp
stos
ds
lods
pop
sub
fsubp
mov
mov
sahf
dec
push
jmp
cmc
inc
pop
jno
or
fdecstp
xlat
sub
push
and
cs
ja
mov
imul
mov
test
dec
and
cmp
cld
movsl
aad
ss
cltd
pop
push
rcll
mov
and
and
cmp
lock
sub
cmp
and
adc
jle
fdivs
jno
les
cli
data16
je
inc
sbb
push
push
std
inc
stos
pop
bound
leave
mov
clc
sahf
hlt
inc
push
enter
repz
rcrl
addr16
mov
pop
push
loope
inc
pop
out
ret
push
cmp
out
fimull
movsb
repz
jge
adc
adc
test
fs
fsubr
adc
cli
mov
repz
cmp
lahf
lods
into
mov
pop
ret
inc
xchg
test
jmp
lock
pop
imul
push
push
sub
jmp
aaa
shll
sbb
call
movsl
mov
and
mov
sub
add
xchg
push
sub
int3
jno
jno
inc
stos
and
and
lods
or
add
push
pushf
fsub
call
jp
in
xchg
and
addr16
sbb
rcll
or
pop
and
jmp
mov
out
inc
lods
cs
adc
loop
or
xor
mov
xchg
pop
mov
sbb
dec
push
xchg
les
adc
and
mov
mov
xor
push
xor
in
jge
sarb
or
sti
jge
dec
popa
xor
xchg
cmp
ret
shll
xor
loop
fdivrs
and
outsl
add
cltd
fwait
scas
add
xor
mov
or
dec
cmpsb
xor
dec
xor
ficoml
add
push
cmp
or
add
push
adcl
jmp
jns
inc
cmc
cmp
jno
aaa
xchg
xchg
push
sti
sbb
jp
mov
push
jl
jp
aas
std
subl
adc
xor
in
pop
mov
sub
lock
xor
jae
cltd
pop
sub
rcrb
test
pop
xlat
iret
lds
pop
mov
xor
inc
dec
loope
sub
aas
jno
push
sbb
cmp
cmp
stos
jae
xchg
push
int
lea
push
mov
push
cmp
and
sub
add
jbe
fcoms
jle
jno
cli
xchg
insb
dec
and
jno
jge
dec
stos
xlat
sub
mov
and
add
and
scas
xchg
mov
jmp
aas
imul
aaa
xor
dec
in
pusha
lods
insb
rclb
sub
lea
ljmp
mov
in
xchg
and
sub
hlt
mov
loop
call
xor
push
xchg
loopne
xchg
mov
pop
cmp
mov
out
dec
mov
mov
or
mov
rclb
popa
je
mov
sbb
fisttps
loope
pop
sub
push
das
push
mov
sti
outsl
loopne
aas
imul
mov
sub
imul
bound
ror
mov
adc
cmc
push
pop
push
rcr
in
pop
push
xchg
sbbl
push
adc
cmp
jno
or
inc
lahf
ja
subb
push
gs
adc
cli
adcl
inc
jmpw
and
pxor
test
shrl
sarl
jb
inc
clc
mov
push
loop
fnsave
mov
popa
and
cld
cmp
xchg
jmp
stc
pop
scas
mov
lds
in
mov
xlat
mov
je
test
rclb
pop
adc
fisubrs
ss
mov
dec
sbb
fiadds
jmp
test
shrb
test
push
jnp
mov
rorl
aad
xchg
xchg
cs
loope
jl
jne
es
popf
lret
iret
lret
or
sbb
and
mov
into
dec
pop
jg
mov
dec
daa
pushl
test
add
test
or
and
mov
fstpt
xor
mov
jl
mov
lahf
mov
pop
push
insl
mov
gs
rcrl
leave
jg
iret
aas
inc
xchg
stos
xbegin
or
dec
aam
dec
jg
push
mov
add
je
fidivl
or
dec
jb
imull
sub
lahf
sbb
adc
or
daa
fadds
or
sub
inc
inc
cli
jle
mov
xorb
popa
ret
mov
mov
add
adc
dec
adc
enter
movsl
pop
add
jle
inc
pop
cmp
into
stc
iret
pop
pop
jecxz
mov
dec
in
aas
sbb
inc
inc
out
daa
outsl
ljmp
cmp
pop
xor
lcall
mov
scas
cmpsl
ret
fcomip
loopne
pop
sbb
fidivrs
movl
scas
mov
adc
pop
in
add
mov
inc
cmp
enter
xor
or
inc
jno
sahf
icebp
inc
push
lcall
jp
clc
adc
hlt
std
add
mov
ja
fdivs
rcll
push
ss
mov
cwtl
add
lods
mov
mov
xchg
frstpm(287
push
pop
das
cmp
sahf
and
inc
xchg
adc
fnstsw
sbb
enter
xchg
mov
in
sbb
pop
pop
add
and
clc
ljmp
dec
mov
movsb
std
inc
jnp
pusha
mov
repnz
out
mov
jge
cltd
sarl
or
popf
pop
sub
imulb
lods
mov
gs
or
out
jns
xor
sbb
inc
fisttps
adc
fbld
aam
push
mov
inc
jmp
hlt
xlat
jl
xchg
sub
addr16
decl
or
loopne
mov
cmp
fisttpll
fldenv
movsl
dec
dec
mov
mov
pop
push
inc
xor
nop
xor
and
scas
inc
fisttps
daa
jp
mov
jb
loopne
js
loopne
jp
lret
jmp
pop
mov
xor
xchg
jge
sub
ret
rcrl
stos
dec
stos
mov
dec
xor
fistpll
popf
fmul
ds
mov
in
mov
adc
insl
dec
pop
mov
adcl
xchg
lock
cmp
push
cwtl
jne
ss
ret
std
call
jae
out
inc
inc
fiadds
arpl
jae
and
mov
out
pop
dec
mov
jmp
fdivs
icebp
lcall
into
and
sbb
cmp
mov
xchg
add
fcompl
add
mov
add
mov
subl
fiadds
das
fisubs
xor
xchg
mov
xor
sub
inc
fmull
int
std
fwait
cmpsb
jl
adc
es
in
jecxz
xlat
divl
mov
push
push
mov
sar
nop
into
call
fsts
out
mov
xorl
push
jb
call
imulb
inc
mov
fs
jp
sub
shr
xorb
ud1
std
leave
dec
leave
jnp
cmp
test
or
lods
aas
xchg
inc
or
cmp
fnstenv
movsl
dec
and
test
and
xchg
jne
ficoms
ljmp
inc
mov
cli
icebp
mov
pop
jecxz
push
mov
add
stc
or
sub
lret
push
mov
fcmove
imull
out
xlat
adc
xchg
adc
test
adc
lmsw
inc
push
inc
jl
pop
cld
gs
jp
fisttps
sbb
xor
in
add
mov
pushf
sub
and
push
mov
test
enter
mov
out
loope
jl
or
mov
lds
adc
lret
icebp
in
push
cmc
into
and
xchg
add
add
lock
jecxz
pop
xor
repz
sti
jnp
inc
repnz
daa
mov
fldl
pushl
push
jnp
cmp
mov
fyl2xp1
push
popf
shrl
mov
sbb
adc
mov
xlat
mov
cmp
aam
sbb
mov
fisubrl
fdiv
test
fwait
xchg
lcall
pop
pop
push
xchg
int3
sub
lret
push
xchg
js
out
pusha
mov
push
xchg
mov
fdivrs
std
aas
aaa
dec
push
mov
loop
icebp
sti
icebp
or
jo
add
loop
cmp
lea
test
fwait
repnz
xor
mov
push
mov
jl
add
sub
cmp
push
sbb
lock
xor
sbb
push
popf
jmp
xchg
scas
pop
push
repnz
in
outsl
sub
out
mov
mov
imul
decl
shr
sbb
add
mov
popa
sub
mov
mov
adc
pop
rcrl
pusha
stos
outsl
leave
shlb
mov
stc
jecxz
dec
sub
dec
or
pushf
adc
stos
rcl
mov
out
push
sar
mov
xchg
inc
jmp
pop
mov
std
add
mov
xlat
icebp
and
mov
pop
mov
mov
repnz
outsl
push
mov
add
call
jmp
fisttps
pushf
xchg
push
test
mov
insb
mov
lret
dec
or
jb
outsb
jp
pop
sub
out
test
mov
movsl
sbb
xor
jbe
lret
cmp
jg
pop
call
lcall
fsubrs
inc
popa
mov
sbb
in
dec
pop
out
mov
in
inc
call
sbbl
add
loope
mov
adc
repnz
test
addr16
out
add
xchg
in
pop
mov
jns
aas
clc
mov
xor
insl
xchg
sub
inc
fstpl
dec
dec
dec
mov
inc
jnp
insl
leave
mov
adc
xchg
jg
mov
pop
push
fcomi
xor
jbe
sahf
sub
jo
dec
inc
xchg
out
mov
mov
pop
and
mov
scas
mov
dec
std
jno
popa
shl
aaa
xchg
mov
mov
inc
mov
movsl
jo
rorb
push
sub
jb
mov
jmp
movsl
mov
sbb
jno,pt
pop
das
shlb
adc
dec
ficoml
insb
cmp
xor
popf
jg
mov
lret
pop
and
out
inc
es
lret
sub
sti
add
xlat
sbb
ljmp
cmp
mov
pop
lahf
sbbb
daa
push
leave
add
seta
data16
movsb
pop
dec
loop
dec
les
xchg
sarl
jne
inc
bound
xor
adc
add
test
cmp
psubw
cwtl
jmp
add
fisttpll
test
cmp
popa
xlat
movsl
mov
xchg
test
jle
jmp
xchg
es
fisttps
loop
cmp
push
mov
mov
insb
pop
push
subb
out
cli
aad
cmp
orb
sbb
sub
mov
imul
adc
insb
push
jecxz
dec
jnp
in
pop
shll
aad
stos
je
iret
aaa
mov
cmp
popf
out
cmp
jp
pop
push
pcmpgtb
test
jmp
xor
push
outsb
cmp
addr16
and
and
test
xchg
pop
mov
cmp
repz
aas
rcrb
sarl
xchg
stos
pop
insb
fiaddl
or
shlb
cmp
mov
pop
adc
test
clc
out
cmp
fnstsw
pop
mov
in
sub
fcmovb
in
bound
and
or
sub
divb
fsubrp
bound
xor
or
call
xchg
add
test
mov
xchg
sub
xchg
jp
enter
push
shlb
or
lahf
shlb
mov
push
jecxz
pop
push
stos
mov
daa
ljmp
dec
and
jne
adc
idivl
popf
inc
push
leave
xchg
cmp
sbb
jp
rorl
mov
mov
sub
sub
sub
push
mov
mov
push
mov
out
jmp
pop
dec
insl
stc
cltd
and
fcompl
sub
imul
sbb
in
pop
es
push
ret
sub
fildll
xor
push
dec
cmpsb
jl
push
xchg
in
std
in
cwtl
je
or
in
faddl
dec
and
ficomps
repz
xor
xchg
fimuls
sti
add
ret
xor
sti
adc
ja
fisubs
stc
sub
outsl
cmc
pop
fstps
cmpsb
xchg
out
dec
leave
bound
lock
loopne
cwtl
loope
imul
xchg
into
daa
dec
mov
jge
mov
je
iret
and
dec
stos
rorl
jmp
das
mov
mov
into
shlb
or
mov
xchg
xchg
sbb
nop
aas
fimuls
pop
or
sub
ljmp
cs
push
rorb
pop
dec
sbb
and
pop
mov
shll
mov
loopne
push
jp
outsl
frstor
jg
mov
xor
pop
mov
dec
pop
sub
rcr
out
dec
leave
int3
adc
mov
or
mov
and
mov
xor
jb
xchg
lahf
popa
pop
or
jecxz
les
jno
int3
add
aam
xor
jmp
push
pop
dec
xor
sbb
into
pop
jg
jne
dec
stc
jne
xchg
pop
jecxz
es
mov
stc
les
or
jle
lret
mov
aas
push
imul
cltd
lahf
decb
cmp
jno
scas
mov
movsb
negb
das
pop
fimull
and
pop
jmp
cmp
sub
adc
test
push
insb
call
fbld
out
fisubl
or
popa
icebp
je
mov
xchg
lods
xor
mov
inc
iret
sbb
xchg
push
mov
mov
outsb
jo
subb
insl
pop
in
push
jmp
cmp
sbb
in
lds
aam
outsl
mov
roll
sub
aad
sbb
addr16
or
inc
jmp
stc
mov
adc
jmp
add
inc
xchg
push
sti
lret
adc
lea
cltd
loopne
xor
ret
cs
pop
push
std
lcall
xor
or
mov
cs
push
out
scas
adc
dec
hlt
cmp
pushf
add
push
add
movsb
arpl
popa
jmp
sbb
sbb
jnp
add
repz
cmp
cmpsb
mov
jmp
and
mov
test
jmp
add
jecxz
mov
lds
xchg
repnz
fmul
divl
pop
jnp
xchg
lods
xchg
ret
xor
mov
into
out
lods
sbb
gs
jp
movsl
push
xor
push
push
xchg
sub
fwait
jne
stos
cwtl
in
enter
mov
orl
inc
or
or
mov
ja
mov
imul
dec
lds
lcall
bswap
xor
in
fistpll
pop
xor
pop
rcrb
mov
nop
shll
adc
sarb
outsb
dec
add
push
and
out
sbb
call
int3
dec
ret
outsb
sub
and
ret
flds
sub
mov
adc
idiv
or
orps
jg
adc
jecxz
push
xor
jp
dec
adc
mov
rolb
ja
sbb
ds
leave
dec
dec
std
xlat
mov
std
mov
pop
or
les
lret
out
pushw
ss
jae
xor
jo
into
and
push
xor
add
loop
idivl
push
imul
inc
adc
mov
cmpsl
test
sti
mov
int3
sub
stos
scas
and
mov
iret
out
pop
dec
cs
stc
push
out
mov
fwait
stc
mov
daa
inc
xchg
add
fstpt
int
movsl
inc
push
iret
mov
arpl
sbb
or
lret
jl
mov
ret
jl
pop
inc
frstpm(287
cmc
mov
pop
fisubs
cmp
jecxz
mov
sbbb
jns
in
cmp
inc
lret
adc
popa
call
mov
xchg
cmp
pop
rclb
arpl
jnp
push
int
push
add
enter
jge
stos
js
cmp
xor
insb
xchg
pushf
in
jne
cmpl
cld
pop
popf
pop
cs
imul
adcl
push
fdivrs
pop
dec
je
addr16
push
push
pop
in
out
xchg
repz
adc
push
push
inc
jle
sarb
adc
mov
in
or
mov
stos
mov
daa
mov
add
sbb
int3
add
incb
test
lds
sub
jp
in
xchg
pop
mov
ds
inc
cmc
mov
fs
icebp
aam
rclb
jns
out
xor
das
stos
test
popf
in
stos
jbe
fsubp
call
aam
sbb
cmp
jecxz
clc
rcl
popa
mov
popa
bound
mov
out
jnp
mov
sub
adc
stos
push
inc
jo
mov
je
add
jns
imul
insl
push
jbe
test
push
mov
jnp
mov
inc
or
or
jbe
fwait
add
es
aad
fnstsw
loope
or
xchg
test
cmc
mov
jle
bound
dec
lcall
cmpsl
add
mov
stos
xchg
inc
call
sub
loope
mov
add
or
imul
xchg
fs
mov
aaa
xchg
sahf
out
and
scas
test
shrl
and
mov
mov
loope
fistps
roll
shlb
idivl
arpl
mov
mov
dec
cmp
jg
add
and
add
inc
fcomip
int
xchg
mov
repz
aad
fnsave
cld
push
add
out
cs
cwtl
fs
cmp
pop
mov
inc
test
mov
scas
movsl
arpl
xor
outsb
mov
push
push
testb
xor
xchg
mov
xor
jp
iret
xor
cs
pop
jb
dec
mov
add
cmpsb
out
cli
sub
pop
adc
pop
gs
lods
shl
mov
sub
jecxz
out
adc
push
mov
mov
inc
ds
stos
lods
sbb
ficompl
cmp
shlb
xchg
out
xchg
jbe
dec
and
ret
and
lret
lods
es
xchg
setbe
sub
mov
push
pop
das
leave
rorl
lahf
mov
or
jo
pop
add
dec
add
cmpsl
addb
adc
cmp
jmp
push
dec
push
push
xchg
cmp
xor
cwtl
aas
fists
or
incb
shlb
pop
adc
popa
scas
mov
add
and
out
lahf
xchg
jo
xchg
aam
and
mov
mov
rcll
and
call
and
aam
in
mulb
xchg
pop
cmp
insb
and
pop
inc
cmp
sbb
push
shlb
mov
scas
test
mov
loop
push
sahf
mov
adc
cmp
pop
mov
sbb
inc
sbb
and
sahf
pop
imul
mov
or
icebp
mov
pop
hlt
dec
or
mov
shll
imul
popf
into
mov
shll
mov
mov
or
rcll
stc
repnz
out
push
mov
push
int
push
mov
int3
xchg
loope
or
cmp
push
jne
aad
ljmp
fs
mov
xor
adc
shlb
loope
loop
aaa
mov
ljmp
pop
dec
add
hlt
xchg
cmp
sbb
popa
aad
or
push
ret
cmc
int
cld
aas
jg
mov
cli
cmp
popa
out
push
push
int3
in
jbe
test
dec
pop
or
das
std
mov
lock
pop
and
adc
ficoml
mov
rorl
cmp
and
fdivrl
mov
ret
movsl
int
sbb
jo
and
pop
cmp
pop
enter
xchg
sub
mov
cs
xor
cli
push
repnz
add
cld
cmpsl
lcall
lcall
jae
test
sub
mov
popf
movsl
jp
das
jmp
and
push
in
mov
sub
lock
call
jmp
push
je
subl
jns
pop
fmuls
xchg
or
andl
or
les
mov
addl
push
jno
mov
cmp
inc
cld
aam
jl
insb
test
push
int3
adc
adc
mov
repz
sbb
inc
insb
mov
inc
sub
and
xchg
inc
pop
filds
jae
shrb
inc
inc
mov
imul
mov
jbe
sarl
addr16
cld
mov
mov
addr16
dec
mov
lahf
xchg
addr16
sahf
inc
lcall
fdivl
daa
add
decb
mov
and
add
pushw
cmp
das
xchg
sub
gs
scas
out
adc
test
cmc
cli
aam
or
in
aaa
mov
aam
jecxz
cltd
mov
mov
adc
push
or
lahf
loopne
in
or
mov
sub
testb
mov
jg
xchg
stc
jg
cmp
sub
cs
aam
jg
loopne
lea
xchg
xchg
jnp
mov
mov
ret
in
mov
orb
fidivrs
mov
add
xchg
lods
int
xchg
mov
test
dec
mov
lret
push
loopne
xor
shlb
in
mov
adc
cs
mov
jnp
mov
pop
adc
jbe
sbb
jns
ds
mov
add
test
dec
inc
and
aad
dec
mov
pop
bound
lret
jns
push
sbbb
faddl
jle
cli
push
xchg
pop
jns
sub
cmc
and
jns
shlb
mov
inc
inc
xor
push
mov
mov
jae
ret
int3
addr16
cmp
pop
scas
xor
jp
popf
fldl
rcll
shll
add
or
in
jl
sub
testb
jp
subb
fidivrl
cmp
ljmp
mov
xchg
mov
andl
popf
pop
xchg
xchg
dec
lahf
jmp
dec
loopne
sbb
and
andl
bnd
mov
xor
xchg
cmp
js
add
popa
xchg
jae
inc
push
out
mov
mov
ret
hlt
pop
lods
and
cmp
sub
cwtl
jmp
out
xor
ss
lods
dec
int
dec
frstor
repz
add
mov
mov
xor
and
cmp
jg
xor
and
mov
lds
loopne
inc
insb
data16
arpl
or
pop
outsb
cmc
and
loop
xchg
int3
loop
stos
mov
sub
jmp
sbb
fisubs
jbe
pop
adc
adc
sti
xchg
or
mov
lcall
fs
sahf
aam
push
sahf
sti
mov
mov
sub
inc
xor
jns
mov
xchg
cli
jbe
dec
xchg
lret
sub
mov
sub
iret
inc
dec
jbe
sbb
sti
icebp
mov
shlb
lret
jecxz
je
pusha
add
xor
fcoml
test
jns
jmp
dec
cli
aam
jo
sub
or
int3
mov
mov
addr16
jecxz
loop
orb
push
movsb
mov
faddp
sub
mov
rcrl
je
movsb
das
cmc
dec
mov
mov
and
sbb
out
sub
fcmovu
call
sbb
out
mov
mov
and
inc
gs
rolb
inc
or
pop
insb
dec
inc
mov
mov
jmp
sub
and
lods
mov
sub
lods
pop
dec
mov
push
in
repnz
and
sti
lods
fcmovbe
sub
outsb
cld
xchg
push
paddd
fstl
hlt
and
jns
mov
lcall
les
add
inc
mov
and
adc
pushf
stos
lock
faddl
push
ret
rcrl
cwtl
xlat
or
ljmp
add
adc
push
jno
pop
inc
push
cld
adc
jl
push
pop
jp
cmp
fs
aam
jnp
or
jbe
and
movsb
mov
dec
js
xchg
mov
hlt
aaa
dec
dec
cld
pop
ja
faddp
fidivl
stos
mov
out
mov
mov
sub
sbb
repz
xor
outsb
nop
inc
mov
ds
add
mov
push
or
sbb
loopne
out
movsb
aaa
mov
xchg
in
lock
or
mov
xor
sub
and
jnp
enter
iret
lret
movsb
mov
xor
and
mov
jae
cli
stos
clc
xor
cmpsb
xchg
lds
rcrl
dec
xor
cmc
adc
sbb
xchg
add
in
aad
jp
xchg
aad
daa
pop
data16
stc
xor
mov
dec
vmovdqu
js
das
pop
xchg
add
lret
adc
addb
dec
xor
daa
xorb
pusha
subl
push
xlat
sbb
add
sub
mov
mov
clc
inc
negl
and
insl
mov
shlb
inc
aad
jnp
inc
sahf
sbbl
lret
push
sbb
insb
test
or
imul
ret
cmpsl
cltd
test
ret
sbb
sub
rcl
push
addr16
test
jno
dec
rcr
pop
inc
push
add
and
jns
inc
add
cmpsb
inc
orb
add
int3
fistpl
inc
leave
shll
hlt
repnz
pop
dec
iret
cmc
out
pop
pop
scas
dec
lods
aam
iret
scas
jle
sbb
into
jnp
add
add
out
lret
loope
mov
push
cmpb
sbb
or
scas
pop
push
mov
adc
sbb
fsubrs
xor
in
das
add
test
mov
add
add
lcall
dec
fucompp
call
sub
movsb
mov
ret
imul
ret
sub
cmpsl
xor
sub
es
ljmp
mov
mov
insb
pmullw
push
mov
xchg
in
not
orl
sahf
imul
jns
je
lahf
push
shl
fpatan
adc
push
je
je
js
std
adc
stos
ffreep
push
jl
iret
or
cmp
xchg
mov
push
cmp
ljmp
sub
xchg
repnz
cmpsl
xor
popf
adc
out
sbb
in
pushf
xor
xchg
cmp
lcall
imul
inc
gs
js
lea
mov
ja
imul
adc
sbb
xchg
stc
sub
sbb
adc
xchg
sbb
fbstp
adc
loope
out
in
outsl
jne
das
cs
pop
or
outsb
out
aaa
adc
or
andl
inc
lds
leave
test
pop
imul
pop
jbe
add
rep
mov
dec
pop
popa
sbb
sub
aam
sbb
inc
subb
mov
mov
movsb
test
dec
or
cmpl
imul
mov
stc
je
push
idivl
pop
daa
nop
inc
aam
sub
xchg
push
pop
mov
cli
in
pop
add
hlt
mov
and
mov
jl
inc
fimull
imul
cmp
xor
rcll
lea
dec
cmp
adc
int
cli
lds
fstpl
pop
addl
sbb
pop
pop
pop
mov
dec
jg
mov
dec
dec
adc
aad
imul
pop
lods
pop
mov
fs
cmp
leave
scas
xchg
sub
xchg
add
adc
push
cmp
cli
mov
xor
sbb
dec
inc
insl
sub
jmp
and
or
sbb
lret
in
test
fcomps
sti
fwait
jge
cmp
jmp
xor
sarl
out
jnp
adc
jp
dec
sub
idivb
das
sahf
test
scas
mov
sub
imul
push
cmp
cmp
sub
cs
cli
sbb
ds
jmp
mov
lret
mov
loop
or
leave
std
repnz
lods
adcl
pop
xor
int3
fisubs
jmp
mov
push
mov
arpl
ret
sbb
xor
rcll
and
popf
add
mov
sub
cmp
fildll
test
sahf
push
pop
call
in
mov
aam
sbb
lock
or
adc
sub
sbb
pushf
mov
or
scas
shlb
cmp
sub
lcall
mov
sub
or
sub
pop
push
lahf
dec
std
cmp
pop
mov
sub
xor
ja
jecxz
ja
sbb
ljmp
xchg
in
fbstp
popa
into
divb
test
clc
cwtl
mov
lcall
leave
pop
push
add
mov
jnp
and
addr16
mov
cmp
pop
imul
cmpsl
dec
or
add
sub
movsl
push
pop
xlat
test
inc
mov
repz
fnstsw
add
and
push
test
add
in
rol
dec
and
mov
ss
or
inc
mov
dec
push
push
dec
inc
pop
fildl
lret
stos
lea
dec
sti
xor
or
lds
lods
xor
and
sbb
lock
pop
data16
and
into
in
lcall
cli
popf
push
push
xor
sbb
pop
out
ficoms
test
xor
mov
dec
idivl
dec
fwait
gs
xor
inc
out
repnz
mov
int3
jmp
mov
popf
jnp
movsl
sbb
jb
pop
inc
out
scas
out
cwtl
aad
push
insb
into
adc
push
mov
mov
jle
jns
or
icebp
adc
sub
stc
dec
cmc
bound
lock
xchg
jmp
sbb
dec
pusha
jne
inc
adcb
lret
repz
sbb
popa
bound
mov
and
sbb
fiadds
xchg
clc
cltd
lcall
loop
leave
mov
sub
bound
mov
out
inc
fs
lret
xchg
out
mov
add
sahf
inc
out
aad
test
cmp
sub
cvtdq2ps
testl
inc
push
sar
inc
sahf
push
dec
bound
or
jg
mov
punpckhdq
jae
out
bound
in
loopne
adc
das
inc
orb
lahf
cwtl
sub
mov
mov
mov
jecxz
scas
lea
mov
or
outsb
xor
imul
ret
lea
lds
mov
mov
cwtl
dec
ja
aam
mov
mov
mov
inc
push
imull
pop
scas
icebp
leave
repnz
jns
inc
pop
sbb
sbb
xchg
mov
cmp
sub
out
mulb
lret
out
cmpsl
pushf
bound
repz
mov
adc
lods
fs
pop
or
cmp
cmp
mov
fwait
int3
sarl
pop
fmuls
push
outsl
imul
insl
out
inc
iret
push
push
sti
adc
stos
cwtl
sbbb
dec
filds
int
stc
ja
xchg
pusha
pushf
mov
leave
or
into
adc
scas
add
pop
and
push
push
out
inc
lods
popf
sarb
sarl
pop
iret
cmpsb
inc
xor
fiaddl
fwait
dec
iret
sahf
mov
bound
aaa
mov
inc
int3
cmc
or
ja
cmp
mov
mov
inc
imulb
xlat
in
xchg
xor
cld
xchg
sub
cli
inc
push
cmp
cmp
mov
add
ss
dec
push
out
dec
ljmp
mov
cmp
mov
cltd
add
pop
jl
xchg
xor
in
in
xchg
movsb
mov
xorb
mov
pop
aas
add
flds
sahf
push
in
push
and
scas
fisttpl
mov
pop
sub
cmp
and
jecxz
cmc
cmc
inc
lods
mov
xchg
mov
inc
enter
mov
mov
add
jmp
sarl
push
mov
jge
cmp
inc
push
mov
xor
mov
mov
out
push
inc
fldl
jge
push
add
rcll
cmp
ja
lret
imul
roll
xchg
movzbl
lods
movsb
mov
aam
sbb
sti
xchg
xchg
test
cmpsb
or
adc
int
fimull
clc
and
pop
push
pop
fs
adc
add
jns
inc
cmp
pop
jle
sbb
mov
inc
inc
dec
mov
movsl
stc
pusha
stos
sti
adc
mov
sbb
and
test
xor
mov
adc
push
and
ljmp
rorb
sahf
fcoms
aaa
dec
pop
mov
push
leave
add
in
or
jmp
in
daa
ljmp
cmp
lock
inc
xor
shlb
push
jle
xor
cwtl
enter
fdivs
mov
xor
fwait
rcrl
aad
jg
mov
lret
std
nop
sub
pushf
sbb
sub
jmp
fsts
ret
lock
mov
sbb
es
fistl
repnz
das
mov
dec
mov
out
repz
cmp
cmc
roll
mov
int
gs
jo
xchg
cmp
and
push
mov
ss
pushf
xchg
lret
mov
inc
inc
int3
repz
adc
outsl
dec
and
test
jecxz
popf
mov
and
push
repz
jmp
lods
cmp
repnz
sbbb
imul
mov
test
mov
mov
test
jb
pop
mov
mov
pop
test
sbb
lcall
inc
repz
fs
inc
lret
cmpb
xchg
mov
push
fwait
inc
xchg
push
gs
dec
inc
cmpb
push
cld
lds
stc
rcrb
mov
sarb
mov
mov
js
data16
pop
pop
cwtl
ret
push
mov
push
sbb
int
xchg
mov
push
or
or
lret
cld
mov
in
aad
pop
sub
lods
jo
cmpsl
xchg
inc
rcl
pushf
adc
test
addb
lret
rcl
mov
jno
ret
imul
jae
pop
jno
or
neg
or
enter
pop
nop
ljmp
fst
data16
lock
imul
push
mov
js
mov
call
pop
cmp
cmp
mov
rcrl
cmp
push
ss
sub
fisubrs
fsubrl
adc
lahf
mov
add
outsl
int
jge
out
dec
adc
and
jle
jge
adc
fldenv
push
jo
test
mov
and
sbb
ret
push
sbb
xchg
dec
sub
xor
rcrl
fwait
jo
jns
pop
daa
mov
dec
inc
arpl
ljmp
test
and
jmp
push
test
xchg
dec
jp
out
dec
popl
sarb
jno
cmpsb
push
mov
iret
mov
pop
dec
cld
arpl
cmp
lock
lret
clc
mov
pop
hlt
cmp
in
movl
mov
sub
inc
push
jae
dec
pop
fsubr
lahf
in
orl
push
int3
lods
orl
decb
cmpsb
dec
or
or
sub
imul
and
cmp
lods
movsb
mov
jecxz
dec
movsl
cmp
mov
xor
arpl
es
push
lret
sub
xor
outsl
pushf
in
in
cmp
push
in
dec
jae
jbe
std
push
jmp
sbb
push
stc
jge
cli
lcall
jle
stos
sub
int3
or
out
insb
fildl
lret
dec
sahf
incb
cmp
gs
inc
lods
cmp
mov
mov
popl
hlt
xchg
jne
mov
add
mull
pop
mov
fnsave
cmp
and
mov
fdivp
mov
fs
inc
pushf
gs
pusha
stc
sbb
sbb
lds
mov
gs
addb
stos
ret
lods
jmp
in
mov
scas
jbe
cld
pushf
mov
ljmp
cld
xor
jp
inc
orb
push
xor
leave
sbb
cmp
push
jg
mov
imul
sub
mov
out
push
cs
cmp
iret
or
sub
jmp
insb
cs
lret
jecxz
rorb
mov
mov
imul
and
sbb
cmpsl
pop
adc
adc
mov
sbb
stos
notb
mov
daa
sahf
lret
test
rcl
xchg
xlat
daa
pop
mov
sbb
jne
sahf
cltd
shrb
push
pop
outsl
gs
movsl
inc
cmp
lock
in
cli
adc
popf
push
clc
adc
aas
or
inc
mull
sub
jb
in
adc
or
aam
nop
loope
addr16
mov
cmpl
mov
push
xor
ret
popf
dec
mov
sbb
imul
push
fmuls
jp
call
and
fisubrs
jecxz
sahf
push
in
or
xor
scas
and
cmpsb
mov
inc
mov
data16
xlat
inc
mov
or
das
adc
cmp
adc
clc
aad
add
lods
lea
mov
dec
xchg
mov
xor
xchg
mov
or
into
cmpsl
out
inc
push
lcall
jg
jp
insl
hlt
sbbl
cmpl
aad
dec
and
add
outsl
sub
push
popa
push
xor
stos
lret
stos
and
rol
enter
pop
sbb
sbb
repz
sbb
xlat
fidivrs
add
xor
xor
iret
aaa
jnp
test
pop
ret
mov
test
loop
and
xor
dec
mov
add
adc
out
sub
cmc
xor
lods
into
xorl
popf
sub
popa
add
pop
mov
fwait
arpl
gs
lods
jg
into
and
push
lea
cwtl
call
sbb
sbb
jns
xor
loopne
xchg
mov
mov
xchg
fstl
push
les
push
mov
xchg
out
scas
cwtl
int
pop
and
and
shll
ret
leave
sub
mov
imul
mov
das
fs
push
or
sbb
adcl
push
lcall
stos
je
ficomps
fwait
out
mov
push
cltd
pop
dec
cwtl
xor
mov
dec
adc
lret
xor
ja
leave
pop
adc
mov
int3
dec
shrl
and
leave
jns
shrl
shrb
scas
push
xchg
aam
lcall
add
jecxz
xchg
stos
mov
sbb
daa
push
xor
loope
dec
fimull
aad
jg
cmpsb
dec
clc
les
xchg
sub
jmp
dec
sbb
xchg
mov
ret
mov
mov
lock
lret
cwtl
jns
iret
adc
dec
sahf
jl
fs
insl
or
xorl
xlat
pop
insl
or
adc
dec
jb,pt
notl
add
push
addr16
movsb
loopne
add
dec
aas
add
cwtl
test
xchg
arpl
adc
sub
push
dec
cltd
pushf
mov
in
flds
push
jge
jl
cmp
mov
sub
outsl
ficomps
cmp
lods
fmuls
scas
adc
mov
push
in
ja
xlat
int
ret
sti
jl
mov
push
cmp
sub
arpl
je
test
cs
lcall
pop
pusha
jecxz
xor
clc
imul
inc
push
xchg
mov
push
dec
ja
arpl
or
sarl
pusha
inc
cltd
jl
pop
adc
fsubrs
std
and
jp
in
dec
mov
mov
add
pop
fwait
ret
xor
rcrl
pop
imulb
pop
and
loop
sbb
mov
test
mov
pop
fdiv
fs
jmp
push
sub
pop
xor
and
aaa
push
add
in
add
inc
imul
andb
scas
or
jae
mov
dec
mov
adc
popf
push
add
movsb
ja
out
jmp
mov
or
sub
inc
inc
jecxz
hlt
adc
push
scas
das
sbb
cs
outsb
js
jle
add
sub
adc
rorb
out
sar
push
xchg
pop
dec
sub
mov
xor
or
popf
jb
xchg
ljmp
mov
cmp
and
adc
pop
jnp
sub
mov
addr16
fldl2e
adc
or
hlt
jb
pop
push
and
test
lods
sub
pop
mov
jae
pop
inc
add
in
in
mov
push
xchg
and
adc
mov
pop
aaa
adc
inc
jp
cmpsb
movsb
cmp
mov
dec
cmp
dec
sbb
andl
outsb
in
pop
sbb
pushf
lea
push
push
lods
mov
and
and
std
or
cmp
push
mov
aas
adc
add
mov
iret
in
xrelease
pop
enter
add
dec
pop
push
mov
test
int3
jp
sbb
imul
push
jb
icebp
popl
inc
call
popf
and
shl
sbb
clc
stos
cli
cmp
cmp
or
and
in
lret
data16
dec
test
inc
mov
int3
hlt
call
jbe
or
inc
or
mov
test
cli
cli
jmp
jb
repz
mov
jbe
push
sub
out
leave
and
leave
gs
cld
jmp
ja
lea
hlt
lods
js
lret
pop
mov
cmp
add
mov
sbb
sub
xchg
mov
add
mov
mov
stc
add
xchg
out
stos
or
mov
mov
add
aaa
add
add
inc
inc
mov
shll
in
mov
mov
push
pushf
dec
enter
inc
xor
sbb
popa
or
jle
xor
addl
mov
pop
jnp
cltd
cmp
and
test
shl
adc
dec
inc
pop
scas
hlt
jmp
add
sub
fiaddl
ret
or
mov
xor
push
pushl
and
je
mov
mov
movntq
sbb
imul
xchg
addl
adc
insb
sbb
push
pop
jbe
xchg
scas
fnstsw
in
pop
sub
loopne
in
push
push
cmp
cmp
stc
cmp
jmp
mov
fwait
hlt
and
ja
xchg
inc
scas
fadds
add
xor
sub
or
test
sub
xchg
and
and
clc
dec
lock
sbb
rorl
jbe
stos
scas
mov
repz
dec
inc
leave
jecxz
sub
push
sub
out
scas
push
in
cmpsb
pop
xchg
in
in
jb
popf
mov
sub
jb
mov
notb
enter
fisubl
repnz
adc
xlat
stos
in
add
pop
call
mov
mov
mov
sub
lods
xchg
add
mov
pop
lea
ljmp
mov
fwait
rolb
pop
cld
movsl
jo
out
shr
inc
mov
out
push
cmc
popl
push
xchg
jns
fwait
repnz
pop
inc
dec
test
sbb
sub
rorl
dec
cwtl
mov
hlt
bnd
test
inc
sahf
pop
inc
arpl
andl
in
mov
jle
push
lds
dec
loope
push
jmp
gs
es
xor
jecxz
jmp
inc
int3
scas
lcall
mov
add
jno
adc
xchg
sub
xchg
lret
dec
in
or
int3
out
jp
lahf
roll
stos
mov
add
aad
mov
xchg
pushf
scas
addr16
and
or
cs
ss
std
adc
sub
fnsave
add
sbb
mov
and
clc
jl
mov
jne
cwtl
arpl
mov
mov
bound
adc
sbb
enter
mov
jge
loope
cld
sbb
ret
int3
adc
add
or
cmp
sbb
lret
jb
pushf
lea
loop
or
and
lea
cmp
or
test
dec
arpl
add
outsl
jmp
je
cmp
cmp
sub
xchg
std
hlt
sub
push
out
xor
out
dec
imul
arpl
xor
push
ljmp
mov
push
popf
jnp
push
mov
jo
and
add
inc
jge
fcmovnbe
mov
pop
add
inc
sub
int
in
push
mov
sub
in
gs
fs
cmp
push
insl
pop
xorl
aas
ds
test
mov
xchg
jmp
xchg
aam
shlb
out
xchg
pop
mov
push
outsb
add
arpl
fwait
clc
inc
sub
sar
movsb
and
jle
push
insl
cmp
xchg
loop
arpl
or
mov
pop
std
push
mov
mov
jae
mov
sbb
scas
jp
pop
sub
xor
mov
sub
or
mov
jmp
cmp
pop
insb
inc
pushf
sahf
or
rclb
inc
mulb
ss
cmp
int
jmp
sbb
jecxz
pushf
fsubrs
test
pop
xor
orl
mov
lret
or
dec
cltd
fcoml
mov
inc
es
push
pop
sti
sub
call
pop
jno
lret
out
inc
xchg
adc
sbb
insl
jg
movsl
mov
pop
adc
sbbb
sbb
pop
cmp
pop
pop
jo
cmpsb
mov
dec
movsl
fists
or
lcall
imul
jo
test
adc
ss
mov
addr16
fprem
nop
insl
int3
mov
cs
and
mov
rcll
cmp
addb
mov
sub
sub
xor
xchg
pop
shl
lds
cmp
xchg
add
mov
das
lret
mov
add
in
xchg
dec
dec
leave
faddl
iret
adc
enter
inc
fucomip
or
mov
mov
mov
sub
cli
pushf
and
adc
sub
jnp
shll
push
sarl
inc
sub
clc
xor
xchg
fcmovne
add
loopne
pop
inc
push
bound
cmp
sbb
jae
push
and
push
lods
inc
push
xor
stos
sti
pop
enter
pop
push
sub
adc
mov
inc
push
fnsave
jne
js
lret
mov
xchg
int3
mov
sbb
lcall
ja
xlat
clc
inc
das
and
jecxz
ret
dec
xchg
std
dec
inc
adc
neg
das
nop
mov
int3
nop
aad
fwait
pop
mov
or
dec
mov
test
aas
dec
push
mov
or
inc
sbb
sub
fldenv
lcall
push
aas
sbb
repnz
pop
andb
xlat
or
jbe
jp
adc
vmovaps
and
iret
outsb
dec
inc
mov
xor
fistps
dec
jo
mov
outsb
outsl
ljmp
imul
scas
and
les
mov
pop
jb
out
dec
pop
xchg
in
ficoms
ss
add
lahf
les
and
jp
xlat
mov
movb
stc
aas
lret
les
in
jle
and
aas
dec
loopne
rclb
testl
adc
out
mov
pop
movsb
jl
mov
in
mov
jae
cmp
push
loope
jns
sbb
mov
pop
pop
and
sub
pop
inc
stc
xor
jbe
loopne
jge
cmp
sbb
arpl
pop
sub
hlt
shl
sbbb
jbe
mov
stc
sub
xor
sub
mov
jae
push
sar
push
jno
call
mov
or
int3
mov
fcomps
insb
pop
fwait
lret
push
sub
dec
xchg
jmp
daa
lahf
sub
sbb
inc
or
mov
loopne
cmp
repz
push
dec
rol
lods
ss
adc
adc
xor
inc
call
mov
and
iret
cmovb
in
repz
or
jle
int
scas
dec
and
inc
sbb
lds
jns
aaa
lahf
cs
or
sub
outsl
enter
ss
orb
fstl
push
aas
test
jmp
xor
cmpsb
jg
adc
lea
fisubs
pop
inc
fsubs
inc
pop
xchg
insb
fcmovnu
xchg
add
dec
mov
push
adcl
add
dec
fsubrl
data16
mov
clc
add
xchg
ret
xor
vpandn
mov
cmp
xchg
in
sarl
mov
test
xchg
in
aas
inc
pop
shll
cltd
mov
subl
dec
add
lret
scas
adc
adc
subl
mov
scas
pop
mov
inc
fs
adc
data16
and
xchg
sbb
dec
or
jecxz
insl
jbe
mov
jge
dec
inc
xchg
mull
sub
fnstsw
lcall
out
cmp
clc
pop
insl
aaa
xlat
sub
fmull
fisttpl
ja
sar
ret
loope
push
jns
sarl
int
cmp
daa
pop
shlb
and
jb
int
xchg
xor
outsb
mov
incl
in
pop
lahf
rol
jg
loopne
inc
adc
fidivrs
ds
lods
mov
rcrb
add
shlb
stos
inc
jge
lcall
out
mov
cs
dec
shlb
ljmp
fdivrs
in
cltd
push
inc
lret
cmp
dec
xlat
dec
and
mov
call
push
mov
mov
cmp
pop
fisttps
enter
je
dec
dec
xchg
push
rolb
das
dec
icebp
pop
aad
inc
lea
or
add
imul
jecxz
flds
dec
bswap
pushl
mov
pop
sar
shll
pop
fucom
sbb
mov
mov
cmp
mov
stos
popa
jle
lret
xor
lods
sahf
sbb
mov
out
pop
jae
hlt
cmp
test
int
jnp
pop
cwtl
clts
bnd
aad
push
outsb
jecxz
in
push
jg
arpl
rcrb
xchg
adc
scas
fwait
bnd
mov
decl
lea
loopne
jnp
adc
xchg
and
dec
or
cmpsl
sahf
sarb
xchg
shlb
inc
or
dec
idiv
cmc
and
int3
inc
cs
ret
adc
lods
xor
test
pop
inc
cmpsb
daa
jle
add
inc
mov
rcrb
push
jecxz
mov
add
push
mov
ljmp
xor
jp
dec
cmp
test
jne
add
andb
shll
fucomp
xchg
testb
mov
or
dec
mov
leave
sub
imul
and
cs
outsl
ja
add
je
mov
lret
adc
mov
or
pop
leave
push
outsl
rcrb
shlb
push
repz
cs
mov
shll
adc
fnstenv
mov
xchg
mov
sub
daa
push
xchg
sbb
mov
push
pop
add
es
push
lret
inc
icebp
pusha
mov
sti
test
and
test
dec
je
movsl
cmp
arpl
and
cmp
lock
push
inc
jb
loop
add
or
es
or
ja
jne
outsl
jg
sbb
out
filds
mov
inc
jo
fwait
and
pusha
cli
mov
mov
std
cmp
dec
pop
pop
cmp
adc
insl
rcr
mov
stc
or
jb
mov
les
pop
fdivrl
add
std
mov
push
es
jbe
push
iret
pop
or
jecxz
cmp
adcb
xor
clc
xchg
cmpsb
xchg
lret
mov
xchg
nop
dec
adc
cli
hlt
jl
add
divb
decl
fsts
pop
shl
nop
xchg
mov
jmp
push
xchg
stos
test
sbb
or
mov
repz
or
insl
aad
and
gs
addl
stos
addr16
addr16
push
xchg
ljmp
dec
lahf
xchg
into
push
push
scas
pop
cmp
or
loop
jmp
rcrl
ficompl
inc
or
sarb
mov
fstps
pop
adc
jbe
lcall
jbe
xlat
loope
lds
dec
cmp
push
cmc
push
jbe
mov
inc
aaa
rorl
fdivrp
lods
xchg
aad
pop
repnz
je
addb
jo
add
sub
iret
fcomps
xchg
mov
inc
ds
std
lea
scas
ljmp
int
test
dec
test
inc
sbb
hlt
push
mov
scas
enter
ret
repz
sbb
lods
test
mov
inc
pop
shlb
cli
jne
mov
out
arpl
arpl
outsb
pop
cmp
cmpsl
or
mov
mov
sbb
cmp
xorl
daa
dec
jmp
pushf
fstpl
and
movsl
mov
adc
and
add
movsl
add
adc
cmc
inc
repz
lods
daa
dec
arpl
jae
pop
fdivs
mov
call
rcr
sahf
lods
ljmp
xor
sub
subb
pop
rorl
mov
dec
aaa
dec
sub
push
pushf
fnstenv
int3
pop
out
fwait
stos
jo
sub
xchg
nop
add
gs
pop
fbld
movsl
loop
movb
popa
push
cs
test
int
sbb
dec
jo
mov
jo
adc
int3
mov
xor
rcrl
movsl
rorl
aaa
push
mov
jo
xrelease
fs
and
sbb
or
test
mov
cmp
mov
stc
cltd
dec
je
adc
out
mov
dec
cmp
cltd
les
pushf
mov
jl
and
pop
push
dec
dec
sahf
ss
aad
push
xor
and
sub
sub
fsubrp
test
lds
out
loop
mov
in
add
jbe
cmp
push
test
sbb
scas
sarl
push
es
inc
push
mov
cmp
lcall
push
xchg
jbe
pop
cwtl
adc
mov
dec
mov
mov
mov
inc
dec
add
push
loope
lahf
xlat
idivl
test
out
push
or
cmp
arpl
pop
pop
popa
out
mov
outsb
in
mov
in
aam
or
inc
leave
mov
clc
out
push
mov
lcall
outsb
xlat
mov
les
inc
mov
int
in
mov
pop
ja
fistpll
jbe
imul
sbb
popa
or
jmp
pop
stos
leave
call
fsubl
adc
mov
mov
jmp
pop
sub
incl
loop
iret
clc
icebp
test
mov
jne
mov
lods
int3
or
sub
lock
add
sti
lock
mov
inc
fcmovnu
cmp
lds
imul
ljmp
bound
outsl
in
push
xor
add
fcomp
in
pop
cltd
adc
jecxz
inc
mov
inc
lds
ret
stc
mov
mov
popa
fdivl
popl
jo
dec
add
mov
xor
sub
pop
mov
icebp
push
rorb
imull
push
bound
loop
dec
scas
jmp
dec
xchg
jp
or
jecxz
stos
add
jg
cwtl
sbb
rclb
adc
sub
xor
inc
rep
mov
sbb
dec
push
lahf
test
and
xchg
mov
int
or
mov
ret
xchg
jns
sub
sub
jns
xor
mov
xchg
dec
add
xor
lret
sub
jle
ja
scas
xchg
insb
and
cmpsb
jo
lahf
andl
loopne
inc
ja
add
sub
cmpsb
icebp
pushf
repz
lret
enter
ss
push
inc
and
inc
inc
dec
adc
addr16
stc
je
repz
mov
and
sbb
aas
jle
adc
dec
cmp
sbb
hlt
and
lahf
jmp
sbb
in
pop
cmc
outsb
mov
jle
aam
sbb
mov
ja
imul
mov
add
mov
add
push
push
adc
and
hlt
cwtl
roll
push
push
xchg
arpl
movb
mov
jl
imul
pop
mov
sti
add
mov
dec
sbb
mov
mov
test
push
pop
je
pop
popa
pop
test
lods
adc
mull
pop
mov
js
sbb
stos
sbb
mov
xor
and
bound
and
mov
pop
push
push
fisubl
aaa
or
pop
mov
add
outsb
jle
aam
mov
mov
jns
xor
into
insl
sbb
cmpsl
push
jne
jl
mov
in
insb
int3
cmp
ret
jae
test
jg
dec
xchg
jns
mov
lret
push
sbb
cltd
cltd
adcb
out
inc
leave
into
sbb
bnd
and
call
xor
data16
inc
in
sbb
je
aad
jp
nop
push
fs
fidivs
fstps
fwait
pop
clc
scas
cmp
imul
fs
sbb
lea
gs
movsl
aaa
repz
adc
xchg
mov
sbb
cmp
imul
pusha
outsb
js
clc
test
sub
lcall
mov
inc
mov
lea
pop
xchg
cli
jno
xchg
rcrl
push
jae
cmp
aas
test
inc
shlb
movsb
mov
orl
insb
mov
fimull
sbb
dec
mov
or
jno
ds
inc
lock
imul
inc
cld
pop
outsl
inc
or
popf
xchg
sbb
out
xchg
mov
scas
sbb
fdivs
sbb
inc
fidivs
call
dec
and
xchg
mov
xchg
leave
outsl
xor
xor
cli
inc
subb
fstpt
nop
sub
pop
fmull
hlt
cs
push
test
add
out
rcl
dec
jmp
lock
mov
and
push
aad
mov
pop
dec
ja
inc
pop
add
pop
or
pop
push
cmp
or
movsb
test
setle
das
in
out
test
aas
push
jmp
cmp
xchg
aas
mov
cmp
jne
cmp
and
mov
fsincos
lahf
mov
mull
dec
fnstsw
cmc
push
jns
inc
lret
push
xchg
aad
jle
sub
inc
xchg
fsubs
jns
fistpl
test
aas
stos
inc
mov
or
adc
aas
or
fs
es
or
pop
cmp
es
xchg
repnz
insb
add
scas
call
inc
jo
jle
sbb
jnp
lods
daa
push
inc
ss
sbb
xchg
pop
rolb
mov
xchg
daa
xor
fs
sub
lods
pop
loop
hlt
jmp
xchg
mov
daa
sub
xchg
mov
mov
lods
cmp
mov
or
mov
loop
jge
insb
mov
xlat
jl
lcall
sbb
pop
loope
sbb
jge
push
jae
sub
push
mov
xor
leave
andb
cmp
pop
mov
repz
xor
fwait
push
std
icebp
push
or
stos
shl
mov
test
out
cld
jns
inc
shlb
jl
jns
push
fcoml
jecxz
mov
jno
mov
mov
loop
cmpsl
fsubrl
sbb
or
arpl
scas
sub
and
push
mov
in
mov
inc
sbb
mov
pop
cmp
cmpsb
mov
lock
test
push
cld
out
mov
hlt
imul
cld
push
mov
in
scas
sub
or
lock
push
add
jb
jns
movsl
push
mov
mov
stos
es
ret
adc
jns
mov
movsl
outsb
in
pop
mov
xchg
scas
testb
inc
and
dec
imul
dec
lods
xor
cmpb
jmp
xchg
sub
mov
movsb
daa
mov
addr16
vpminub
int
and
cmp
loope
sbb
es
outsb
mov
loop
dec
mov
mov
or
jl
push
in
iret
mov
movups
call
pushf
jae
cmpsb
fldt
mov
out
mov
addr16
cmc
cli
mov
sti
dec
and
jae
xor
mov
out
add
das
jmp
sub
ljmp
adc
sub
xor
pusha
out
mov
lods
popa
push
sub
cmp
add
mov
arpl
test
and
loopne
data16
pusha
add
fwait
clc
inc
xchg
mov
fmull
push
lea
pushw
and
movsb
sbb
mov
call
and
test
decl
adc
pop
mov
stos
clc
cmpsl
push
and
lahf
pusha
lods
insb
imul
sub
dec
lods
aam
adc
into
ljmp
dec
aam
int
js
dec
pop
inc
movsl
push
mov
lea
mov
out
rcll
push
jge
inc
add
push
sahf
mov
pop
dec
xorl
pop
mov
cmp
pop
lds
loop
xchg
scas
push
mov
xchg
push
inc
pop
test
jo
in
push
fisttps
loopne
jmp
lret
push
jp
arpl
or
inc
arpl
movsl
jp
jle
lret
mov
dec
sbb
pop
fcomip
ss
cmpb
loop
in
mov
cli
cmp
cmpsl
or
scas
int3
xor
inc
pop
pop
xor
or
and
mov
lea
jne
or
sarl
sub
pop
xor
test
push
test
cld
les
pusha
push
jb
ds
mov
mov
ja
mov
das
and
std
lret
in
mov
outsl
ret
mov
mov
loopne
jns
leave
dec
xchg
add
mov
outsb
les
fcomip
dec
adcl
lock
mov
shl
mov
cmp
push
sbb
push
scas
je
mov
addr16
fwait
jnp
loope
jp
fs
mov
loop
cwtl
icebp
mov
fmuls
ret
sub
leave
pushf
pop
testl
pop
mov
mov
pop
in
stos
adc
push
notl
sti
stos
push
cwtl
cmp
mov
outsl
js
xchg
pop
aad
inc
push
fwait
imull
imul
enter
sub
mov
stos
mov
rcrl
fdivrl
inc
sbbl
pop
fcoml
icebp
inc
push
jns
fdivrp
lahf
sbb
subl
mov
xor
xor
push
dec
push
insb
lock
lahf
repz
pushf
mov
ret
rcr
push
mov
cmp
lods
outsl
aaa
push
and
inc
mov
add
push
cld
inc
push
lock
int
and
popa
lds
lahf
js
loop
arpl
push
cmp
mov
dec
jg
loop
ss
inc
push
push
scas
stos
sbb
pop
and
jp
xchg
inc
xchg
mov
leave
push
pop
pop
pop
xlat
pop
mov
sbb
das
iret
dec
push
add
and
aam
push
pop
push
push
out
xchg
pop
jne
sbb
lahf
and
fucomi
push
out
jmp
test
into
inc
pop
lret
sbb
adc
loop
xlat
mov
pop
aad
pop
rclb
ret
sub
enter
jo
sbb
mov
pop
adc
pop
jle
sub
adc
scas
jae
pop
enter
shrb
xchg
fstl
and
lret
aas
mov
cltd
adcb
cmp
fbstp
mov
xor
dec
xchg
or
sub
pushf
mov
arpl
into
movsl
add
fsubp
xor
fwait
notl
clc
pop
adc
sahf
sbb
lods
test
mov
mov
or
fmull
inc
es
pop
inc
loopne
mov
xchg
push
int3
jecxz
stos
ja
fldl2e
sub
jmp
call
xlat
lret
inc
and
cmp
push
iret
xor
adc
sbb
mov
mov
lahf
adc
dec
sbb
cmpsl
xchg
aas
daa
lods
sub
pop
sbb
xchg
jle
fdiv
mov
sub
cwtl
js
paddw
mov
arpl
mov
sub
inc
mov
and
stc
test
test
add
ljmp
repz
sub
jp
rcr
inc
or
xchg
mov
ret
sbb
push
mov
jae
pusha
inc
add
sub
jnp
repnz
into
dec
mov
mov
jg
xlat
push
int
out
sahf
mov
loope
fisubrs
push
sbb
inc
in
push
cmpsb
mov
jge
mov
ja
mov
roll
stc
ljmp
xor
movl
loopne
fisttpll
mov
movsb
inc
lods
mov
mov
out
xchg
xlat
fstps
daa
insb
es
pop
or
push
ss
xchg
out
jmp
mov
aas
cmpb
sbb
or
test
xchg
iret
arpl
and
andb
lock
dec
imul
jmp
ret
and
mov
cmp
dec
mov
mov
imul
mov
jo
push
inc
xor
mov
mov
stos
ss
repnz
nop
mov
shl
push
cltd
mov
stc
inc
cmp
pop
jb
pusha
ss
sbb
bound
out
jb
and
and
fcmove
xchg
imull
sub
adc
fucomi
in
inc
xor
xchg
jle
cs
les
xor
sub
scas
cld
cltd
xor
subb
imul
push
lods
ret
jp
cmp
out
icebp
mov
sub
and
sbb
sub
sub
dec
aas
fnstcw
add
sub
fsubrl
xor
pop
jge
lret
je
sub
xchg
loop
adc
cmp
dec
or
repnz
inc
inc
jb
mov
out
inc
test
xor
lea
adc
jo
push
pop
pop
call
mov
xchg
mov
inc
dec
or
push
sbb
cmp
clc
out
cmp
xor
js
std
jg
imul
jle
mov
lcall
jno
push
in
xlat
cmpsb
dec
mov
sub
push
fadds
mov
and
mov
std
dec
pushf
loopne
rol
orl
bound
aas
ds
iret
dec
xchg
mov
rolb
pop
std
jp
mov
icebp
xor
into
into
enter
aad
push
cld
pop
mov
fsub
fs
les
xchg
dec
dec
roll
xchg
mov
daa
jns
in
fwait
imulb
pop
mov
dec
pop
sub
add
push
int3
mov
popa
xchg
sub
sub
or
xchg
and
add
jle
adc
jns
mov
and
cmp
or
xchg
aam
aam
inc
ja
push
sub
xchg
mov
dec
add
adc
cmp
pop
add
fdivp
adc
sbb
rolb
cmp
or
xchg
xchg
inc
inc
adcb
shrb
sahf
cli
xorb
test
dec
fwait
popa
cld
sub
int
xor
movsb
mov
out
lahf
stos
insb
mov
mov
decl
jl
adc
push
xchg
xlat
or
bound
call
xor
cmpl
xchg
cmp
divps
scas
adc
jne
lret
sbb
xchg
das
push
mov
bound
push
xor
fwait
imull
pusha
or
push
add
in
inc
popa
adc
mov
mov
xor
call
pushw
cmp
pop
push
mov
lods
mov
xorl
scas
mov
xlat
leave
mov
mov
rol
and
and
dec
cmp
adc
push
adc
jae
bound
push
lcall
into
shrb
lret
lret
pop
xor
or
nop
push
loope
fisubl
xchg
mov
mov
jp
incb
inc
xchg
xchg
fstl
mov
es
cld
inc
xor
cmp
rcr
cld
fs
add
inc
ret
pop
mov
mov
lcall
lods
cmp
xor
data16
fists
dec
shlb
xlat
mov
mov
popf
dec
and
xchg
mov
pop
sbb
test
ftst
mov
cmp
mov
and
xchg
es
lods
shll
add
aad
or
inc
pop
pop
ljmp
inc
lret
mov
test
jp
aad
adc
out
repz
jl
xchg
mov
stos
ret
lret
cmp
imul
ret
mov
shrb
lock
out
lods
jg
aad
inc
or
jne
rorb
mov
ss
roll
dec
das
pusha
test
shr
jl
pop
insl
add
subb
push
pop
mov
cwtl
pop
mov
movsb
ficompl
jmp
sub
xchg
pop
lods
popa
dec
mov
jg
hlt
sbb
loopne
fcompl
test
sub
dec
cmpb
cli
xor
push
push
dec
and
frstor
repnz
int
pop
out
jle
fidivrl
mov
adc
and
jns
push
xchg
cmp
jle
jmp
push
sti
pop
fisubrl
and
pop
imul
fdivs
push
mov
cmpsl
pop
mov
rcll
push
mov
and
nop
or
cmc
xchg
and
das
stos
and
jecxz
in
push
movsl
dec
xchg
adc
dec
stos
data16
adc
aaa
jge
adc
jl
cmc
mov
xchg
outsb
in
jb
movsb
xor
xchg
mov
jnp
mov
mov
mov
fldl
jbe
aas
mov
mov
ss
lea
test
pop
ud0
mov
aaa
sbb
sbbl
fiaddl
or
xchg
imul
loop
popf
pop
movsb
sub
mov
fldenv
insl
fcomp
and
bound
xor
adc
push
xor
test
jo
add
insb
xorl
shl
sub
call
inc
mov
gs
mov
and
inc
pop
bound
insl
cmp
pop
sbbb
movsl
arpl
inc
cmp
push
ret
in
call
pop
push
jle
lcall
cli
xor
arpl
add
sub
mov
lods
push
mov
xlat
mov
fwait
xor
mov
aaa
loope
mov
pop
les
add
std
cmc
sub
adc
enter
add
ss
push
aad
fdivrl
mov
cmp
sbb
and
push
lahf
repz
int
aam
xchg
in
clc
jno
dec
mov
push
lret
mov
or
pusha
xor
mov
out
pop
insl
push
dec
xor
sbb
cmpsl
dec
inc
pop
mov
add
sub
mov
js
in
push
push
negl
hlt
sbb
and
push
in
scas
or
cwtl
popf
insb
gs
mov
inc
adcb
adc
repz
mov
les
pop
pop
sbb
stos
fcoms
cmpl
movsl
mov
iret
mov
clc
fs
cld
xchg
jns
div
xchg
and
je
pop
ljmp
jg
cmpsb
inc
out
add
ret
xor
mov
mov
ficomps
pop
inc
rorl
mov
or
jo
int3
or
mov
add
jg
or
notb
xorl
mov
dec
mov
adc
lea
push
jbe,pt
dec
iret
ljmp
jae
jle
xor
sub
adc
xchg
outsb
xor
and
xor
notb
sub
fcomps
inc
add
lret
shl
xor
push
popf
dec
sbb
cmp
xchg
aam
adc
mov
out
sarl
mov
jne
call
push
in
sbb
iretw
sbb
pop
inc
or
inc
aas
mov
ss
mov
add
lods
xchg
mov
or
mov
add
pop
stos
daa
xor
pop
dec
out
mov
dec
shrl
leave
cltd
dec
dec
arpl
xor
xrelease
dec
andb
and
and
jg
daa
fbld
call
and
lahf
sbb
cmpb
inc
pop
int
inc
sub
loopne
lea
mov
push
xchg
xor
lret
jmp
mov
out
in
fcompl
test
xchg
jb
dec
or
test
test
add
sbb
loopne
jmp
repnz
mov
cmpsl
fstpl
addr16
out
jmp
jg
ret
into
int3
std
add
mov
orl
push
push
xchg
pushf
testl
dec
imul
sub
js
sub
std
clc
dec
js
mov
fiaddl
arpl
cmp
sub
sbb
mov
cwtl
xor
mov
movsl
int
mov
pop
ds
ja
daa
and
cmp
test
add
and
xor
mov
cld
imul
add
stos
lret
lea
or
pop
mov
iret
sub
ja
sbb
jnp
data16
xor
data16
add
sub
sti
adc
and
addb
cli
mov
jp
and
popa
or
mov
jecxz
sbb
orb
add
xchg
add
sarb
cli
xlat
dec
addr16
add
jne
ret
or
fildll
jno
sbb
lds
or
dec
xchg
leave
adc
leave
mov
aaa
dec
das
test
jne
es
je
shlb
inc
mov
pop
pop
test
and
xor
push
pop
mov
int
xor
mov
sbb
leave
add
add
fadds
dec
js
fcoml
in
leave
repz
push
inc
pop
and
filds
outsl
outsb
pop
shlb
xlat
clc
mov
sbb
mov
dec
xor
rcr
adc
add
cmpsb
sbb
xchg
mov
int3
push
dec
in
mov
add
dec
push
sub
cmpsb
jp
aas
xchg
andb
mov
cmp
mov
ds
movsl
das
fwait
outsl
xchg
push
cmp
mov
xor
and
clc
add
ret
fcoml
xor
cmpsb
pop
ret
jle
ss
mov
sbb
xchg
sbb
xchg
icebp
ja
and
xor
cwtl
mov
inc
inc
roll
pusha
mov
inc
mov
in
rcrb
cli
lods
jmp
or
add
add
in
push
add
adc
sub
fwait
je
negl
and
addr16
fstpt
xor
ss
pop
jns
pop
xor
cmp
xor
or
or
sbb
sub
cmp
pusha
xor
shrl
cli
mov
aam
push
xchg
int3
cmc
push
mov
fdivrs
ds
pop
sub
add
xor
jo
inc
adc
enter
shr
dec
and
stos
call
and
jno
pop
mov
mov
sub
in
ror
in
dec
pop
dec
sub
stos
mov
mov
in
js
roll
dec
outsl
xor
adc
jle
int
addr16
xchg
sarb
fcmovu
into
adc
shrb
mov
mov
orb
vpavgw
bound
sahf
andl
popa
shlb
andb
and
jge
pop
sahf
enter
or
jbe
mov
call
jno
mov
in
pop
lea
lock
ficoms
mov
or
push
sbb
fstpl
adcb
and
fimuls
jg
mov
mov
adc
daa
dec
mov
mov
pop
scas
inc
dec
sti
xchg
mov
fidivl
xchg
xchg
sub
xor
jmp
out
jge
leave
inc
inc
fiaddl
addr16
or
dec
repz
sbb
push
push
mov
push
inc
mov
pop
push
into
add
data16
cmc
sub
adc
addr16
push
iret
enter
cli
sahf
int3
and
loopne
int
pop
nop
xchg
test
xchg
cmp
jl
add
std
in
inc
dec
stos
out
xchg
fldlg2
cld
and
pop
xor
cs
pop
mov
test
cmp
cmpb
sub
adc
or
push
mov
mov
cld
sbb
jnp
mov
and
xlat
fiaddl
push
mov
test
scas
mov
addb
cmp
pop
inc
xor
xchg
out
mov
fs
add
js
clc
fldcw
mov
mov
jnp
lahf
movl
xchg
test
push
mov
fisubrs
hlt
movsl
mov
inc
xchg
dec
cld
scas
fcompl
popl
sub
pop
jmp
mov
xchg
in
add
mov
dec
xor
push
xchg
lret
mov
rorb
or
mov
adc
in
mov
ja
xor
int3
sub
push
enter
icebp
inc
lock
mov
dec
sub
lods
jno
out
lret
icebp
hlt
lods
xchg
mov
mov
daa
sbb
fidivrl
and
xchg
mov
scas
add
ret
ljmp
nop
test
stos
xchg
imul
out
iret
mov
js
jge
cmpsl
jg
xlat
ja
dec
mov
test
xor
insl
loop
imul
mov
adc
test
inc
pop
sub
fdivs
xor
repz
adc
sbb
dec
push
repz
mov
push
rcrb
xlat
ljmp
xor
decl
aam
mov
cmpsl
mov
lock
mov
inc
pop
xchg
jns
fstl
inc
sub
rcrb
xchg
lahf
shrb
daa
push
adc
lds
cmp
lock
push
xor
mov
cmp
nop
dec
or
and
lods
lods
gs
scas
mov
dec
inc
ret
xchg
inc
mov
pop
inc
cltd
filds
cmp
das
jo
mov
loope
gs
subl
mov
imul
shll
lret
inc
push
mov
and
jnp
int
jns
add
jne
cmp
jnp
inc
repz
shll
out
mov
xchg
sbb
mov
mov
inc
inc
pop
mov
adc
js
out
out
cmc
push
xchg
sbb
mov
dec
insl
repz
jne
leave
pop
mov
loopne
cmpsl
test
dec
leave
repnz
push
mov
ss
in
shrb
leave
insb
cmp
lahf
jg
les
dec
push
shrb
add
cmc
ds
and
xchg
mov
and
stc
xchg
test
decl
sbb
xchg
popa
mov
xchg
mov
arpl
cmp
movsl
inc
mov
fisttps
shrl
jne
jp
push
fsubp
mov
enter
or
les
jns
shlb
rorl
icebp
cmp
ss
inc
pop
push
into
pop
jno
mov
push
ljmp
pop
mov
mov
mov
dec
xchg
dec
xchg
or
mov
fcomps
jbe
or
loopne
push
sbb
inc
fsubrp
loopne
jl
add
cld
es
mov
lods
jno
test
cmp
lahf
mov
dec
or
sub
shlb
stos
or
dec
mov
mov
mov
sub
call
int3
xchg
cld
mov
outsl
lea
adc
ror
inc
sub
sbb
cli
jge
cld
add
fs
mov
lock
int
out
and
add
rcll
nop
enter
or
sbb
push
jle
nop
jp
insl
mov
cs
imul
sbb
xor
pop
aaa
cmp
pop
sti
inc
mov
test
loope
mov
jns
hlt
add
mov
stos
lret
enter
imul
fimull
es
adc
nop
jno
sbb
and
mov
ret
jbe
cmpl
inc
loop
cmp
adcb
imul
xchg
pop
xlat
cmpsb
add
imul
mov
lock
lea
mov
cli
cmpsb
fstpt
sahf
mov
dec
mov
push
xchg
dec
xor
adc
cmp
enter
push
lcall
xor
sahf
jbe
hlt
cmpsl
popf
sysenter
lret
jge
pop
or
cmp
ret
iret
aam
mov
xor
shlb
lahf
xchg
dec
dec
dec
aam
mov
ret
jnp
jno
add
push
sti
enter
fimuls
enter
jecxz
ja
repnz
push
repz
mov
jecxz
sbb
and
js
sahf
test
out
lds
jns
popf
or
mov
xor
rcl
outsb
or
jge
mov
mov
push
negb
push
testl
fbstp
nop
fldcw
adc
jmp
inc
outsl
je
and
jmp
sub
push
nop
dec
dec
leave
out
lcall
lock
jecxz
daa
ss
xorl
and
or
jmp
mov
xchg
adc
shlb
ficomps
popw
test
xchg
lahf
adc
je
dec
xchg
add
push
lret
fadds
aaa
mov
pop
and
cmp
dec
mov
pop
adc
xchg
adc
sbb
jl
mov
out
xor
mov
sahf
ja
imul
sbb
pop
adc
mov
jecxz
nop
lret
adc
adc
pop
push
jl
repnz
dec
xchg
shrb
ret
dec
movsl
pop
mov
inc
add
push
mov
pusha
lea
sbb
mov
call
sbb
and
mov
jecxz
cmpsb
int
and
dec
pop
hlt
cmp
data16
sbb
fsubs
adc
testb
ljmp
xchg
jmp
cmp
mov
mov
in
ss
nop
and
inc
cmp
int3
pop
mov
xchg
mov
jmp
repnz
out
push
scas
sbb
imul
cmp
dec
jl
or
insb
and
or
inc
adc
lea
dec
stc
nop
daa
mov
and
ss
jns
hlt
cmp
and
rcrl
scas
and
sarl
std
pop
cwtl
faddp
scas
sbb
xchg
adc
cmpl
and
sbb
pop
push
push
pop
jl
in
shr
test
jbe
les
mov
adc
cmp
adc
mov
fs
dec
pop
ret
add
xchg
gs
inc
out
sbb
outsb
pop
pop
je
sbb
aaa
push
or
les
mov
mov
jnp
push
pop
mov
outsl
stos
cld
mov
cmp
cmp
arpl
sbb
push
leave
cmp
in
xor
and
mov
and
jb
and
and
aad
inc
nop
mov
js
aad
stos
adc
inc
ljmp
sahf
inc
cmp
mov
dec
dec
jns
mov
push
mov
int
inc
or
xorl
cli
rcrb
jp
shl
test
or
xchg
jbe
cs
cmp
sub
test
mov
pop
mov
cltd
push
stos
sbb
cli
movsl
rep
jle
xor
sub
cmp
leave
mov
jnp
jbe
lret
ret
jne
jnp
push
lahf
mov
shrb
in
push
and
cwtl
and
ret
int
scas
adc
popa
out
inc
in
pop
xchg
mov
mov
jmp
xchg
jge
ljmp
in
jb
shrl
sahf
movsl
ds
xchg
test
push
adc
inc
sbb
ret
les
lds
or
xchg
outsl
stc
das
inc
rcll
movsl
mov
mov
adc
hlt
test
outsl
leave
aad
roll
mov
movsb
lret
mov
inc
inc
insl
lret
inc
nop
push
push
jl
mov
lock
jns
pop
das
cmp
jne
fmull
push
mov
mov
in
add
push
push
int3
inc
in
arpl
jl
mov
loop
andb
xor
push
je
iret
push
int3
sub
in
fcomi
bound
mov
push
iret
sbb
and
popa
jno
jl
push
jecxz
pusha
dec
pop
cld
mov
sub
cmp
or
inc
jnp
jnp
or
or
add
xchg
int
loope
into
ja
mov
mov
outsb
fiaddl
and
mov
mov
mov
jecxz
mov
push
cmpsb
xor
mov
cmpsb
push
shl
out
ror
stos
jge
popl
pop
pusha
xchg
adc
mov
lds
adc
mov
sbb
or
adc
jmp
adc
push
lods
xor
pop
cli
es
mov
or
lahf
sbb
pushf
aad
idivl
adc
in
cmp
sub
ja
inc
aaa
or
sbb
out
cmp
out
mov
stos
and
add
jno
xchg
call
mov
push
add
ror
aad
jae
pop
dec
out
mov
addb
adcl
and
cmp
pushf
mov
ljmp
push
mov
xor
push
sbb
subl
jae
cli
xor
mov
es
movd
xor
pminub
ja
and
jb
rolb
ja
rcll
mov
nop
jecxz
mov
cmp
addb
in
cmp
inc
lods
pusha
pop
daa
add
loope
fsubrs
imul
push
sbb
xchg
mov
xchg
sti
ljmp
and
in
in
xchg
cmp
sbb
enter
dec
add
aad
aam
inc
lret
mov
sub
mov
lock
inc
aas
rclb
sub
and
subl
mov
outsl
mov
dec
into
sbb
stos
pushf
icebp
cwtl
jle
mov
out
insl
xchg
sub
mov
add
pop
pop
int3
cmp
ja
push
cmc
lret
aas
cmp
ds
aas
mov
adc
add
mov
cmpsl
rcll
and
mov
insl
and
cltd
scas
add
dec
mov
iret
inc
fwait
pop
push
add
aam
mov
stc
imul
xchg
mov
out
stos
nop
fcmovnb
mov
test
int3
in
mov
inc
mov
popa
xchg
pop
jo
icebp
dec
orl
inc
das
out
adc
add
lahf
xor
adc
push
mov
sub
sub
sbb
out
jns
jmp
movsl
pop
fwait
rclb
xchg
nop
jae
into
or
shlb
gs
in
shll
jmp
mov
dec
sub
push
std
sub
cld
lret
loop
adc
sbb
clc
daa
push
sbb
shrb
lds
pop
xchg
adcb
cld
jmp
xchg
frstor
lahf
xchg
lret
mov
adcb
gs
mov
or
cwtl
inc
rcll
mov
mov
xchg
loope
sbb
jae
lods
jbe
test
mov
fnstsw
cmp
cmp
int
sbb
adc
adc
or
out
testl
cwtl
gs
jne
movsl
add
adc
and
clc
or
add
out
dec
cmp
push
clc
cld
mov
jle
xchg
nop
inc
xor
push
lcall
addr16
mov
es
inc
int
iret
or
shll
imul
xor
les
adc
roll
sbb
add
das
in
cmp
add
shlb
dec
jmp
push
lret
andb
imul
and
inc
sbbb
cltd
cmp
popa
addr16
into
enter
call
lods
push
adc
fwait
sub
adc
xor
sbb
bound
jl
mov
stos
cwtl
enter
lods
mov
mov
in
outsl
lret
movsl
lods
out
pop
movb
lea
popf
cltd
loopne
scas
jle
adc
jb
test
pop
xchg
cld
cmp
xlat
stos
lods
inc
call
mov
pushf
sahf
pusha
xchg
fwait
sub
mov
scas
lods
lock
and
add
mov
mov
loopne
pop
mov
or
or
jns
sbb
jge
lods
mov
pop
les
fld
sbb
mov
mov
dec
or
ret
lret
pop
icebp
imul
pop
inc
ret
repz
lds
mov
mov
insb
xchg
jg
aad
ds
mov
les
ss
mov
fiaddl
test
das
cltd
das
sub
push
f2xm1
or
loope
pop
or
mov
pop
movsb
jae
mov
in
outsl
push
scas
mov
jg
stos
js
lahf
jb
out
fcmovbe
inc
mov
mov
imul
sbb
mov
cmc
std
add
xchg
adc
aam
stos
add
mov
mov
mov
sub
xor
cmp
std
clc
adc
xchg
sti
jne
jmp
test
dec
or
sub
xchg
shrl
pop
xchg
or
add
test
int
arpl
and
mov
fimuls
mov
sub
cmpb
lret
loope
add
or
sbbb
in
jp
clc
xchg
push
fwait
jo
jle
xchg
pop
jg
pushf
ficoms
out
push
int
sahf
mov
or
xchg
add
les
jnp
loopne
push
cvtps2pd
xchg
lcall
push
stos
mov
icebp
adc
cld
int
mov
cmc
aad
fs
stos
testl
test
imul
call
inc
in
cmpsb
fstpl
ror
push
repz
stos
inc
jb
xchg
das
and
loope
jle
add
scas
add
pop
cld
mov
xchg
jecxz
dec
sti
inc
addr16
xchg
enter
pop
rcl
cmp
push
push
mov
adc
in
push
test
fwait
add
xlat
insl
loop
cmp
push
lret
or
inc
dec
adc
movsl
mov
loop
in
jl
popa
inc
jle
sar
rorb
push
fnstsw
out
xor
inc
jmp
xchg
sbb
add
pop
sub
dec
sub
sbb
daa
std
je
in
jnp
cmp
jge
cmp
mov
jmp
mov
jp
push
sbb
dec
or
mov
aas
sbb
jbe
dec
cmp
add
adc
pushf
or
sub
mov
push
inc
scas
dec
mov
and
ja
push
mov
insb
iret
jmp
jae
stc
jl
mov
test
jbe
mov
test
test
inc
js,pn
idivb
outsl
pop
loop
cltd
test
popf
subl
push
pop
inc
dec
repnz
add
lahf
mov
adc
jns
aam
cmp
mov
mov
je
loope
push
in
xorl
mov
xchg
popf
push
and
sbb
std
xor
push
shrl
xchg
inc
pop
stc
je
outsb
into
lahf
xchg
add
outsl
imul
inc
mov
je
pop
jge
iret
lcall
lret
outsb
mov
sbb
pop
popa
push
mov
test
stos
xor
mov
movsl
fwait
xor
sub
fs
sti
and
orl
fldcw
mov
sbb
mov
cld
dec
loop
adc
ret
dec
inc
or
orl
ja
lods
jnp
in
out
mov
xor
pop
inc
test
sbb
mov
mov
add
into
repz
dec
and
jne
sahf
lea
dec
mov
push
imul
or
test
jge
or
cmp
add
xor
mov
pop
mov
sbb
mov
js
fs
mov
and
pop
or
mov
dec
lock
bound
adc
stos
sub
sub
dec
insl
nop
pop
jbe
mov
aas
aam
scas
xchg
leave
iret
mov
or
loope
lret
dec
sub
sbb
insb
dec
pop
cmp
jo
mov
imul
cmp
fwait
pop
cmpsb
test
lahf
push
ss
or
push
sub
mov
fidivrs
cmp
sbb
xchg
in
xlat
inc
push
sub
shll
shll
arpl
mov
xchg
insl
dec
daa
xchg
call
xchg
jbe
and
je
bound
rclb
dec
or
mov
rcl
icebp
insl
fiadds
ds
inc
out
fidivrs
icebp
out
roll
insb
bound
or
sub
mov
pushf
adc
in
rcll
mov
stc
lcall
push
popf
cwtl
fisubrl
daa
stos
cld
shl
sbb
lcall
adc
adc
cmp
addr16
cmp
lea
pop
stc
icebp
js
pop
pusha
mov
mov
pop
ss
xor
pop
xlat
les
dec
dec
push
jmp
jmp
out
das
sub
pop
xor
mov
rcrb
pop
or
les
or
fs
jle
aas
icebp
out
jno
pushf
psubq
xor
cld
sub
jae
mov
enter
jo
shl
decb
push
lret
and
add
or
sbbl
or
add
mov
pushf
mov
data16
ljmp
cmp
insl
pop
inc
aad
and
aam
push
adc
xor
cs
jl
xor
jge
xor
dec
cltd
bswap
fyl2x
mov
mov
jp
sbb
shll
and
sahf
fimull
lret
sbb
aas
jmp
push
out
popf
add
in
stc
cmpsl
push
adc
xchg
xor
cmp
push
xchg
sbb
push
push
das
xor
testl
add
adc
ret
add
cld
clc
inc
and
pusha
imul
and
cli
ljmp
xor
add
pusha
sub
cmp
push
cmp
repnz
mov
sub
fildll
add
lock
mov
pop
mov
nop
loopne
fidivrs
test
icebp
out
and
sub
jmp
test
sub
add
jbe
jmp
push
test
test
cmpsb
sti
scas
es
mov
stos
push
mov
ds
jge
das
xchg
call
das
pop
loopne
adc
xchg
lea
mov
cwtl
xor
popa
xchg
movsb
add
arpl
pop
sahf
xchg
and
or
arpl
pop
add
stos
nop
cmp
dec
dec
scas
add
sub
xlat
std
fsubrs
aam
in
daa
mov
shrb
repz
and
mov
push
mov
leave
sti
xchg
mov
mov
xor
mov
adc
outsl
pop
cmc
lret
jp
repnz
cmpl
or
shll
in
insw
mov
jae
or
fimull
int
std
insb
push
lcall
out
push
push
and
in
loope
sbb
pushf
loop
outsl
adc
lcall
fists
sub
call
mov
cmp
ret
stc
scas
pushf
and
addr16
mov
and
or
xchg
pop
sbb
int
mov
push
cmc
sub
cmpsl
cmp
jnp
popa
fistps
fcmovnbe
lods
and
movsl
inc
lods
fcomip
mov
sahf
or
adc
adc
ror
dec
cmp
add
fistpl
cmpsl
and
cli
sbb
leave
xchg
mov
lret
or
inc
mov
sbb
test
inc
outsl
orb
fildl
mov
outsl
push
push
cmp
rcrl
imul
pop
ss
sbb
test
addl
xor
scas
movsb
xchg
stos
mov
mov
call
push
jle
jle
xchg
jle
jp
pop
and
cli
aad
inc
scas
fs
inc
js
jnp
adc
cmpsl
dec
inc
cmp
adc
cmp
jae
test
push
push
mov
jo
scas
jbe
mov
cmp
lds
sub
push
scas
push
in
xor
leave
es
out
adc
outsl
mov
mov
sbb
jo
fldl
nop
adc
jl
jl
movsl
lods
jmp
pop
xchg
inc
es
aas
push
cmc
sbb
inc
mov
aaa
das
jno
outsb
adc
mov
mov
xchg
cmpsl
jg
pop
xlat
es
cmc
gs
mov
jnp
test
xchg
push
fdivrs
mov
nop
cmpsl
xchg
cmp
mov
ja
xchg
dec
pop
adc
sub
jle
sbb
ret
sbb
lahf
inc
ret
cmp
andb
pcmpeqd
cmp
ss
mov
nop
mov
mov
sbb
jae
cltd
adc
sbb
mov
lea
jl
ljmp
repnz
or
movsb
xor
mov
inc
mov
and
sti
sti
cmp
in
xor
es
jnp
movsb
lcall
cmpsl
scas
pusha
test
add
mov
add
ret
jle
stos
lods
jge
add
inc
repz
xchg
sahf
dec
out
outsl
int3
notl
iret
xlat
das
xchg
push
add
jmp
mov
rclb
loope
outsb
lea
cltd
bound
stc
pop
push
sti
testb
pushf
ljmp
mov
mov
or
cmp
mov
add
xor
mov
xor
dec
lea
and
add
dec
mov
stc
mov
dec
inc
fs
xchg
sbb
fnsave
notl
mov
jae
mov
mov
test
shr
and
ja
ret
inc
xor
cld
pop
repnz
xor
cltd
pop
out
pop
nop
xchg
vsubps
outsl
sub
in
out
cmp
imul
fistl
fcoml
inc
add
dec
xor
ret
loop
push
addr16
andl
xchg
ljmp
pop
pop
scas
sbb
cli
jae
ss
enter
dec
or
xchg
fcmovnbe
aad
enter
fisttps
pop
cmp
divl
push
roll
cmp
sbb
aaa
ficoml
sub
push
mov
insl
cmp
pop
arpl
dec
xlat
lahf
mov
dec
stos
inc
out
lahf
jle
int3
aaa
sub
lock
js
adc
dec
cltd
push
inc
scas
fsubrl
loope
xchg
and
xor
mov
jl
dec
cltd
dec
xor
or
orl
add
sub
push
mov
ret
pop
clc
pop
xchg
jecxz
fsubrs
add
outsl
cltd
jbe
idiv
rclb
mov
jp
xchg
mov
sub
push
call
xchg
push
lock
or
mov
cmp
jne
test
add
rcrl
pop
xor
jno
xchg
mov
rcl
sbb
lahf
push
pop
cltd
sbb
jne
mov
inc
mov
jne
out
mov
xchg
icebp
sub
arpl
mov
movsb
cwtl
outsb
push
test
arpl
cmpsb
mov
adc
sarb
push
shl
sarl
shl
fnsave
mov
mov
jmp
or
popa
adc
mov
and
data16
jno
cmp
fcmovnu
dec
jl
push
sbb
clc
ljmp
gs
mov
jb
pop
dec
cmp
lahf
aam
pop
fisubrl
and
push
insl
jb
pop
shl
out
push
stos
push
daa
in
mov
cmp
aam
imul
std
mov
dec
cmc
inc
int3
imul
leave
adc
xchg
cli
mov
jbe
push
sbb
push
push
push
xchg
lds
jnp
in
outsl
xchg
incl
pop
ret
sbb
or
sub
sahf
outsb
outsb
mov
cmpl
ficompl
movsb
in
stos
inc
mov
sub
aam
insl
fs
push
lods
push
mov
clc
dec
lret
sub
fsubl
out
xchg
and
stc
inc
outsl
gs
or
in
push
ljmp
mov
stc
sub
loope
lea
loope
lret
mov
add
dec
cmp
push
mov
mov
out
aaa
cmp
in
jle
ss
ficompl
jnp
xor
sbb
xorl
mov
mov
xor
lret
popf
mov
loope
in
push
xchg
mov
xor
stc
std
aaa
jecxz
movsl
out
cld
int
pop
es
in
nop
sbb
clc
jb
popf
jo
mov
jnp
push
mov
clc
xor
pop
divl
xchg
pop
push
les
jmp
fsub
es
out
lods
bnd
or
rorl
fmull
hlt
push
out
push
adc
jns
xor
ret
sahf
test
mov
xchg
and
clc
fnsave
in
mov
stos
out
pop
mov
scas
cmp
pop
pop
test
fcmovbe
loope
cld
cmp
test
cmp
adc
dec
mov
sub
mov
subb
mov
pop
lea
pop
bound
and
sbb
mov
sbb
ret
nop
cmp
in
push
jg
mov
cmp
cmc
pop
les
inc
test
sbb
das
push
call
mov
js
addl
xchg
stos
sub
jecxz
inc
mov
fcoms
call
call
out
add
addb
flds
jge
in
mov
adc
mov
loop
sub
mov
mov
int3
bound
call
jl
push
lock
repz
sub
cmpsb
mov
mov
scas
cmp
leave
cmp
lods
data16
mov
rcrl
push
mov
pop
mov
sub
pop
add
inc
lahf
push
movsb
cmp
std
mov
adc
mov
dec
shlb
nop
adc
pop
xchg
mov
repnz
jge
ljmp
test
icebp
aaa
loopne
sub
sbb
out
es
lret
jb
subb
sbb
pop
xor
push
movsb
adc
push
and
or
in
jmp
iret
std
je
mov
add
mov
nop
push
mov
out
mov
jb
push
mov
xchg
add
mov
clc
push
cmp
jnp
lahf
sub
std
mov
add
mov
lock
lret
jle
xchg
outsl
mov
mov
mov
sbb
mov
pop
or
jns
mov
pop
into
stc
jo
pop
sub
out
adc
cmp
cmp
out
mov
mov
scas
mov
xor
cmp
cmp
imul
jge
out
outsb
add
cld
test
jmp
outsb
lds
add
cmp
stc
lock
xor
pop
and
mov
popa
add
lahf
adc
adcl
js
insl
rcrl
out
sti
sbb
cmpsb
sar
nop
test
mov
test
icebp
movsl
int
mov
dec
out
gs
sarb
sarb
lods
lahf
and
test
xchg
or
xchg
inc
aaa
call
add
push
xlat
icebp
jl
or
cltd
mov
xlat
scas
cli
cltd
mov
in
pusha
aam
loope
std
pop
divl
popf
xor
add
xchg
push
adc
cltd
stos
sahf
in
bound
mov
inc
cmc
and
sbb
push
cmp
mov
mov
cmp
mov
pop
adc
cmp
shll
mov
push
cmpsl
repz
aad
jg
in
movl
jo
push
pop
or
ficomps
sbb
mov
cmp
xor
adc
scas
mov
add
sub
push
push
das
xchg
xor
xor
es
mov
test
xchg
or
jae
and
lods
mov
lea
into
jle
lret
mov
ja
jecxz
and
ret
and
xor
je
test
call
in
daa
or
pop
jmp
fiadds
or
int
inc
stos
push
mov
les
outsl
jae
aad
out
sbb
rcll
pop
push
inc
push
mov
jecxz
xchg
fcmovb
xor
sbb
ja
fldenv
sub
and
mov
cltd
mov
add
pushf
push
imul
dec
in
mov
dec
jns
test
mov
jno
call
push
sub
mov
lret
push
hlt
aas
pop
inc
push
mov
xlat
sbb
push
pushw
jmp
lahf
and
and
stc
or
pusha
cmp
mov
es
xchg
aas
sub
sbb
loopne
aaa
xor
sub
push
sub
push
lahf
mov
and
lret
testl
stos
int
into
es
aam
lea
lods
cli
push
loop
mov
adc
xor
int3
enter
inc
push
decl
push
cmp
mov
adc
pop
cs
out
stc
aam
add
mov
fbld
dec
fsts
mov
and
push
cmp
fwait
mov
mov
lods
cmp
xchg
popa
mov
xor
popf
lds
xorl
adc
lcall
lahf
xchg
pop
test
jecxz
xchg
cmp
or
xchg
out
xchg
cmp
sub
inc
mov
mov
mov
jmp
sub
sub
xor
push
pop
jp,pt
jne
xor
loop
push
mov
ss
popa
jns
jl
mov
outsl
push
jno
sub
dec
cli
das
mov
insl
sbb
push
push
aas
pop
jp
push
test
call
push
repnz
push
testl
mov
fcmovnb
push
mov
pop
ret
vandnps
jo
jp
fdivrs
mov
sti
jno
push
rclb
ss
pop
mov
mov
mov
mov
cmp
je
ja
mov
icebp
insl
cwtl
jb
pusha
mov
fs
outsl
and
in
fwait
stos
aad
and
add
clc
clc
call
add
fildll
leave
std
dec
add
jp
aad
xchg
xchg
jb
out
jnp
xchg
push
lcall
add
jns
clc
or
shrb
sbb
mov
pop
fisttps
dec
and
fsubrs
std
imul
movsl
cli
es
jl
cli
in
gs
shl
mov
mov
mov
inc
lahf
imul
pusha
inc
out
mov
mov
pop
pop
mov
jne
je
and
fistpll
mov
cmpb
inc
push
notl
sub
lret
mov
cmp
hlt
jbe
jno
insl
jnp
xor
mov
ss
bswap
inc
rcrb
dec
adc
loopne
notb
lret
icebp
sti
pop
jb
sbb
xor
imul
cli
pop
push
inc
inc
test
loop
dec
js
sub
or
int
jl
aam
pusha
aad
std
shrb
and
sub
outsl
cltd
lods
pop
call
repnz
hlt
cmp
adc
mov
notb
add
test
jns
adc
jl
lock
ljmp
sub
cmp
add
jne
sub
adc
pop
inc
add
outsl
popf
imul
arpl
xchg
and
jnp
adc
lods
or
es
inc
btr
push
xor
pop
or
sbb
fsubs
mov
lcall
jae
cmc
mov
sub
mov
add
adc
test
xchg
dec
xor
xchg
mov
repz
call
lret
mov
push
mov
dec
pop
incl
shlb
xchg
jge
ret
out
les
mov
je
inc
cmp
stos
loope
pushf
std
and
enter
mov
jmp
jp
mov
xchg
pop
push
mov
add
in
sti
mov
xor
fstpt
insb
in
or
xchg
imul
push
push
mov
inc
sub
icebp
out
ret
ljmp
ret
cmpsl
jae
jbe
cwtl
in
pop
push
ja
mov
dec
cmp
inc
pop
and
mov
outsb
jp
pop
outsl
pop
bound
cli
cmp
mov
mov
pop
popf
sub
jns
xor
cs
push
sbb
cs
orb
jnp
shll
mov
test
pusha
std
inc
pop
mov
in
cmp
cmp
jae
xchg
cmp
and
cs
test
shrl
push
or
lods
inc
pop
lcall
test
mov
lds
push
add
lods
lods
cs
outsb
stos
aaa
push
lahf
adcl
daa
pop
lea
xchg
test
leave
mov
jne
test
cmp
outsb
push
iret
pop
loopne
fldcw
gs
stos
lods
ja
jno
xchg
or
mull
push
push
test
or
nop
cmp
jl,pn
push
mov
xchg
push
sbb
mov
jg,pn
or
pop
mov
cmp
dec
ldmxcsr
lock
xorl
push
rorl
repz
jnp
pop
inc
add
jno
das
sbb
jbe
push
repnz
rcrb
or
sbb
arpl
cmpsb
dec
adc
add
stc
mov
jecxz
add
pop
sub
adc
in
outsl
sub
xlat
sub
push
inc
fsub
cld
popf
sbb
ss
mov
aam
ret
fisubrl
pop
clc
test
dec
sbbb
stos
xor
cwtl
mov
in
inc
push
xchg
adc
call
lods
out
dec
mov
js
xor
adc
mov
xchg
outsl
lea
xor
shr
sti
or
push
or
aas
dec
aam
dec
into
xchg
adc
hlt
jns
mov
adc
lcall
jno
jne
lock
xchg
je
sub
dec
frstor
out
mov
cmp
jp
andb
inc
cmp
adc
test
stos
dec
inc
sub
push
or
aam
pushf
push
dec
call
hlt
pop
inc
pop
mov
adc
daa
fsubrp
fnstcw
daa
iret
test
int
and
lods
outsb
cmp
hlt
nop
fnsave
adc
xchg
sbb
icebp
ds
leave
inc
mov
mov
mov
ljmp
jbe
sahf
sub
popf
dec
stc
add
jl
add
js
cmp
lret
jle
aaa
mov
pop
adc
jl
mov
jb
ds
jge
sub
or
pusha
lret
stos
les
cmp
popf
and
adc
push
push
cmp
sbb
test
stos
and
mov
inc
push
pop
dec
int3
mov
scas
pop
mov
cmpsl
jle
adc
jbe
cmpsl
adcb
pop
dec
aad
sbb
cld
pop
mov
pop
push
aam
cmpb
dec
enter
push
mov
xchg
mov
hlt
roll
add
out
pop
pop
pushf
aad
pop
jl
sbb
ljmp
bound
cmp
and
inc
xchg
xor
pop
ljmp
pop
sbb
cld
aam
pop
cli
int3
cmp
jno
pop
mov
test
jnp
pushf
jno
dec
subl
xor
sahf
cmp
inc
pop
xchg
outsb
fmull
into
fscale
mov
dec
cmc
or
cwtl
xor
mov
loope
mov
push
xor
jae
mov
inc
rclb
data16
fisubl
xchg
scas
jl
in
rcr
mov
cmp
cmpsl
fimull
into
call
jne
loop
sarl
adc
sub
pusha
inc
sbb
xchg
jg
dec
repz
mov
ljmp
mov
repnz
mov
xor
or
mov
adc
lods
shlb
dec
int
out
cltd
ret
xchg
sub
pop
out
add
outsb
pushf
loop
sbb
cld
ja
out
fisubrs
sar
mov
jnp
mov
scas
pop
add
jns
and
xchg
rol
adc
jl
xor
dec
fld1
ret
pop
sub
dec
repz
cmc
push
xor
mov
fdivs
icebp
scas
mov
add
xor
jb
and
cmp
loope
sbb
lock
aaa
fsubr
jae
sub
cmp
out
push
lret
xor
mov
or
pop
rcr
xchg
push
mov
lret
inc
sbb
cmpsb
test
dec
sahf
mov
mov
and
add
sub
adc
gs
mov
add
fsub
in
jp
sub
and
lea
mov
out
ljmp
adc
sti
or
repz
dec
in
iret
inc
or
inc
cs
or
fwait
xor
adc
sub
sahf
fwait
addr16
adc
cli
cmp
jne
dec
mov
mov
dec
out
mov
xchg
mov
push
mov
cltd
xchg
ficompl
adc
outsl
lret
leave
cmc
pop
dec
popa
push
xchg
out
mov
and
stos
pop
es
mov
mov
jno
pop
cmc
and
cmpsl
mov
and
test
aaa
mov
mov
xchg
or
xlat
xchg
jg
xor
mov
push
pop
out
lods
popa
je
mov
inc
mov
push
imul
push
cmp
sahf
cld
or
ret
mov
dec
pop
mov
repz
inc
in
js
faddl
std
sub
pop
lods
mov
outsl
xorb
das
aad
xchg
sub
pop
cltd
push
xlat
xor
int3
inc
call
mov
mov
pop
cmp
cmp
dec
lret
stos
sbb
cltd
push
jno
movsb
pop
je
add
cmp
fs
out
mov
push
pop
test
ret
push
pushf
outsb
mov
sarl
mov
inc
cmpsl
inc
adc
sub
mov
sbb
sub
push
mov
cli
xchg
mov
sbb
inc
fstpl
daa
inc
jne
imul
mov
aaa
shrl
xchg
mov
dec
xorb
pop
lods
outsl
insb
out
test
dec
call
adc
adc
fcom
push
push
aam
mov
sbb
fdivs
sub
js
andl
sbbl
inc
xor
and
inc
aam
pusha
mov
out
ficoms
push
inc
in
jge
dec
test
or
cmp
sub
lahf
dec
shlb
xchg
cmp
pop
lahf
cmpsl
xchg
mov
xor
inc
dec
adc
jmp
fstl
shrb
push
and
sbb
or
mov
dec
mov
aaa
out
cld
rep
dec
xchg
push
dec
push
outsl
mov
dec
les
cmpl
dec
cmp
shrb
xor
cmp
add
pop
sarb
sbb
sbb
push
rorl
cmp
jecxz
mov
pop
jge
xchg
call
mov
push
jo
aam
outsb
push
jmp
xlat
out
cmpsl
inc
cld
inc
cmp
adc
bound
push
rorl
stc
andb
inc
movsb
test
or
sbb
jno
pop
sbb
aaa
sbb
or
shll
pushf
cmp
or
mov
daa
out
fsts
imul
imul
in
cmp
mov
xchg
dec
pop
mov
call
sbb
push
js
call
dec
pop
push
mov
jnp
dec
ljmp
stc
es
popf
icebp
std
loop
test
insl
fs
jecxz
lret
andl
jns
fsts
lahf
add
xor
pop
test
jbe
in
jmp
xor
jnp
mov
xor
sub
aam
sti
inc
or
mov
add
aad
gs
pop
jp
xor
into
rorl
jmp
jnp
or
loope
sub
je
mov
inc
outsl
xor
jl
dec
ret
mov
es
adc
dec
adc
add
push
in
rcl
incl
stc
mov
sub
test
push
jns
jmp
dec
movsl
cmpl
xchg
jo
pushl
lret
in
push
mov
les
mov
inc
rcrl
test
sbb
movsb
das
sbb
pop
cmpsb
pop
loop
push
mov
mov
sarl
xor
loope
add
mul
mov
icebp
dec
push
mov
fstps
test
imul
aam
fs
xchg
push
fmulp
xchg
js
jnp
repnz
jmp
inc
inc
ficoms
sbb
jl
repnz
and
and
mov
fwait
jnp
mov
ffreep
or
in
popf
popf
hlt
sti
jb
cmovo
xchg
jecxz
jmp
inc
leave
testl
out
je
lock
jl
gs
sbb
adc
and
inc
xor
pop
dec
cmp
dec
insl
loop
push
push
fadds
cmc
sub
push
xchg
jnp
arpl
into
adc
icebp
outsb
andb
cmpsb
rclb
sbb
divl
bound
inc
stos
xchg
cwtl
aaa
popf
inc
cltd
jg
dec
inc
add
jne
lcall
in
mov
push
sarl
mov
daa
add
imul
ja
mov
mov
sbb
xchg
mull
psubw
lcall
adc
and
addr16
lock
and
or
es
out
into
xchg
jg
jmp
shll
loopne
movsb
leave
outsb
rcll
sub
cmp
jge
int
mov
ficomps
mov
jnp
rcl
adc
lahf
mov
mov
cltd
jecxz
ret
or
les
mov
cmp
push
fistpl
sbb
icebp
mov
ljmp
add
nop
xchg
mov
mov
scas
aas
add
sahf
stc
or
jbe
fcomps
and
or
fistps
xchg
pop
insb
add
ss
aas
call
push
push
in
pop
scas
sub
mov
push
rcll
add
inc
lret
xchg
test
lods
cmpsl
sbb
popf
fldcw
insl
xchg
or
into
fs
push
cmpsl
test
enter
xchg
and
int3
ljmp
sub
cmp
incl
mov
jecxz
ja
push
loop
rclb
das
inc
cmc
in
xor
js
leave
cmp
push
inc
mov
out
pop
sub
fs
and
pusha
xlat
movsl
mov
fstl
jnp
xor
cmp
ja
insl
dec
in
loop
ljmp
js
into
inc
mov
movsb
dec
add
out
push
fisubrs
pop
andb
xor
rclb
test
mov
push
and
loopne
movsb
pop
aas
rol
ret
xchg
repz
mov
mov
mov
adc
loopne
in
and
push
call
dec
dec
imull
cmp
mov
fdivs
std
dec
iret
test
int3
push
cwtl
push
jo
out
xor
out
jno
repnz
mov
add
subl
shrb
pop
dec
lret
ds
add
shlb
mov
inc
xchg
in
push
nop
enter
ljmp
xchg
jo
jg
xor
lock
lcall
adc
or
test
push
test
insb
mov
roll
fdivl
lods
mov
shlb
and
dec
or
stos
xchg
js
fs
dec
in
adc
shrl
and
mov
or
cmpsb
aaa
rcrl
xchg
add
ja
and
or
pushf
xchg
std
and
dec
stos
mov
movsb
mov
test
daa
dec
dec
ret
mov
test
lea
or
fisubl
popa
in
cmpsl
dec
andb
enter
daa
dec
in
sub
adc
or
adcl
add
mov
dec
or
mull
and
aaa
rcrb
pop
mov
mov
test
cmpsb
sbb
lcall
inc
sbb
cmp
mov
sub
js
int3
and
mov
out
mov
xor
lret
jg
adc
cmpsl
inc
jae
daa
testb
sbb
lds
andl
mov
pusha
in
adc
cmp
jns
cmpsb
fimuls
push
lea
icebp
shr
rorb
add
and
insl
xor
jmp
lock
mov
daa
imul
push
cli
loope
aam
or
rcrl
mov
ds
dec
jns
nop
sti
mov
in
sarb
mov
icebp
fdivl
mov
xor
fisubs
imul
push
in
mov
shrb
dec
mov
sbb
aad
push
mov
fldt
mov
pusha
mov
nop
popf
pop
stos
add
push
push
xchg
dec
adc
nop
dec
and
out
xor
or
dec
insb
test
imul
fldt
cmp
jnp
popf
sahf
mov
mov
mov
and
lcall
jl
inc
and
sbb
xor
mov
sub
aaa
inc
pop
sub
pop
mov
adc
push
xchg
or
cmp
pop
add
jmp
loopne
rolb
cmpsl
out
mov
pop
cmp
repnz
cltd
and
outsl
sbb
mov
dec
cld
es
mov
xorb
stc
jl
call
xor
enter
ss
scas
xor
sub
rcrb
sub
les
leave
dec
mov
cmp
std
add
es
int
int
clc
jg
mov
icebp
ss
lret
cld
pop
pop
jg
adc
into
jbe
addr16
inc
scas
adcl
mov
ds
clc
test
pop
mov
daa
cmp
shr
inc
test
fs
je
inc
insl
and
sub
xor
jg
push
fnstenv
scas
add
pop
ret
pop
dec
xchg
nop
ss
int
pop
dec
in
incb
jge
jmp
xor
fs
lcall
out
sti
dec
shll
dec
push
mov
sub
ret
rcll
aas
pop
fldenv
aaa
add
mov
das
loopne
add
lret
or
rcrl
pusha
push
sbb
movb
xor
push
push
xchg
xchg
int3
iret
js
xchg
mov
sub
insl
in
dec
hlt
es
fistpll
aam
pop
mov
dec
or
daa
cmpsl
adc
dec
push
fiadds
cltd
push
mov
mov
out
push
gs
hlt
xchg
out
movsb
lds
jno
lds
out
pop
mov
dec
mov
outsl
in
or
push
dec
cwtl
push
adc
or
ds
push
das
mov
test
add
sub
mov
jns
lret
into
lock
jnp
and
sbb
and
and
jns
lods
pushw
dec
std
into
cmpsb
xor
dec
dec
ljmp
das
outsb
push
test
lret
ljmp
mov
dec
fcomps
inc
popl
xchg
add
movsl
push
int3
lock
push
and
cmp
stos
loopne
xchg
stc
sub
sub
addr16
cmpsl
jns
rolb
cmpsb
outsl
scas
push
cmp
in
fs
cmpsb
or
inc
mov
xchg
push
mov
lods
fmul
xor
mov
pop
inc
cmp
mov
sub
cwtl
cmpsb
mov
sti
cmp
setg
pop
sbb
repz
push
pushf
push
xchg
daa
clc
sbb
in
mov
mov
bound
add
repz
mov
xchg
jnp
in
shll
data16
cmp
movsl
lcall
jmp
aad
dec
push
movsl
aad
div
adc
and
sub
add
mov
outsb
add
mov
les
daa
pop
jae
in
mov
cli
xor
dec
mov
sub
shl
xchg
es
out
aaa
jbe
jmp
mov
jno
dec
pop
or
shlb
sarl
xlat
xor
mov
xor
sbb
jl
push
fwait
xchg
cmp
hlt
test
fxam
inc
xor
cltd
sub
mov
out
cli
and
pop
pop
lcall
rorl
pop
cmpsl
sbbl
fidivrs
xchg
idivl
mov
cmc
lret
pop
add
test
mov
cmp
andl
aam
push
movsb
ds
jo
mov
mov
loope
and
rol
xchg
cltd
lretw
das
pop
inc
sub
out
or
adc
jp
jmp
sbb
in
js
out
je
jg
dec
in
pop
loopne
xchg
pop
cmp
int3
lds
leave
mov
mul
xor
mov
and
push
pop
push
in
mov
push
and
ret
imul
xor
mov
mov
adc
popa
sub
out
pop
lret
mov
cmp
cli
repnz
js
sbb
rolb
test
mov
mov
ja
mov
sub
cmp
aaa
jmp
jp
push
inc
cmp
push
or
push
pop
int
inc
lret
mov
adcb
inc
shrl
xor
xlat
pop
dec
inc
mov
or
adc
lcall
pop
daa
push
fsubl
xchg
jp
xor
outsl
sub
nop
mov
jo
xchg
sahf
aaa
das
std
pop
jbe
mov
and
fimull
jecxz
and
repnz
inc
cmp
aas
sahf
add
out
adc
push
xor
int3
add
mov
popa
push
xchg
or
mov
jg
push
jp
cmp
scas
cmp
xchg
push
mov
mov
mov
push
test
mov
pop
addr16
mov
add
fs
stos
xor
lahf
add
add
fidivl
add
dec
out
xor
js
cmp
fsubp
icebp
pop
dec
jl
pop
repnz
adc
ja
rclb
push
jb
and
lret
mov
cli
testl
push
lret
mov
stos
push
scas
addb
scas
cwtl
push
les
addr16
outsb
in
jle
mov
jbe
sub
pop
daa
loopne
mov
pop
stc
rolb
xor
sbb
out
adcl
pop
test
in
xchg
inc
das
loop
xchg
mov
shrb
in
push
ficoms
insl
mov
dec
repz
ljmp
xor
mov
rol
adc
xor
js
je
or
bound
xchg
mov
and
arpl
ret
stos
dec
mov
sysenter
comiss
fsub
xor
lahf
mov
mov
mov
test
add
sub
pop
lea
pop
pop
icebp
ret
inc
cwtl
xor
out
sub
inc
jnp
adc
xchg
sahf
ss
mov
jle
sub
mov
outsl
mov
mov
and
cmc
inc
imul
or
out
scas
int3
push
pop
repz
pop
xchg
and
jno
mov
push
inc
xor
ss
test
ljmp
adc
das
mov
lds
xchg
leave
sub
mov
add
shl
out
dec
fnstcw
cmpl
dec
cmpsl
jp
out
push
sub
lret
inc
sub
dec
out
push
fsubrl
scas
shrb
xchg
mov
jnp
insb
stos
repz
ja
lret
sbb
sbb
sbb
mov
ljmp
xlat
notb
test
mov
mov
sbb
mov
sbb
mov
mov
pop
lret
dec
sti
in
xchg
aad
jle
add
jne
psubw
or
xchg
mov
and
push
into
xchg
jo
mov
cmp
inc
mov
mov
dec
cmp
mov
jecxz
inc
xor
mov
adc
aam
fs
adc
cs
int
dec
nop
inc
xchg
dec
pop
xlat
scas
mov
ds
in
mov
jnp
orb
mov
in
mov
inc
or
mov
test
cmp
scas
mov
daa
insl
icebp
dec
mov
mov
dec
shr
int3
push
jne
dec
jge
ja
lret
out
mov
push
aaa
dec
sub
ret
pop
outsb
cmp
sbb
add
or
xor
std
fcomps
out
jb
mov
and
ss
mov
aaa
movsb
dec
inc
fildll
mov
mov
in
sbb
cmpsl
dec
sub
mov
aam
shrl
sti
inc
jnp
mov
and
and
adcb
mov
inc
adc
sbb
sub
cmp
mov
jp
sbb
outsl
testl
out
or
cmp
shrb
xor
fwait
inc
hlt
sti
lea
mov
pop
xor
sub
jl
rcr
push
dec
stos
inc
aam
arpl
outsb
imul
call
movl
sub
jl
outsb
je
pop
mov
fwait
add
push
dec
mov
inc
icebp
lret
hlt
jle
outsb
dec
pop
push
mov
sbb
push
insl
pop
std
xor
insb
mov
push
or
xchg
or
push
movsl
movl
cmc
fildl
pop
fisttpll
sub
testb
inc
mov
inc
inc
lcall
lret
imul
push
insb
or
jne
pushl
adc
sub
clc
jmp
lret
div
mov
xchg
addr16
ret
pushf
gs
xor
lcall
fwait
lock
popl
cmp
fdivrl
sub
mov
sub
mov
pop
pop
jmp
dec
arpl
inc
testb
lods
or
xor
xchg
xchg
mov
cmp
lret
and
ss
arpl
es
outsl
mov
and
ljmp
push
pop
mull
lcall
movsb
pop
dec
lahf
loopne
out
dec
sbb
gs
aas
icebp
mov
lods
sbb
adc
test
test
or
inc
popf
lret
and
mov
sbb
or
lods
adc
ss
jl
jmp
pop
mov
shrl
test
cmp
jg
mov
lods
push
scas
mov
mov
out
out
push
enter
outsb
movsb
int3
sti
pop
lahf
das
arpl
bnd
and
inc
popa
and
mov
mov
imul
sbb
xchg
iret
mov
loopne
shlb
testl
rcrb
mov
mov
sub
push
jne
sbb
scas
or
jge
cmc
push
mov
add
mov
lods
cmp
cld
xchg
and
sbb
jg
sbb
lret
cmp
lds
pushf
push
ja
shrl
sahf
stos
clc
add
lcall
adc
rol
outsb
mov
out
jge
das
rcrl
aam
je
sub
push
and
add
movsb
sbbl
je
rorb
inc
mov
push
jg
stos
je
push
ds
inc
jb
aaa
sub
push
adc
add
divl
test
cmpsl
stos
and
lret
add
adc
dec
aam
mov
test
inc
cmp
inc
mov
or
std
in
cmp
and
sub
push
cmpsl
pushf
sbb
aad
aas
dec
aam
push
cs
and
and
subb
xchg
cmp
inc
cmp
test
das
push
testb
lcall
mov
test
fdivs
inc
mov
mov
gs
scas
insb
insl
mov
pop
or
enter
inc
flds
bound
in
jecxz
test
ret
xchg
inc
call
test
ret
mov
jp
outsb
mov
test
pop
inc
cmp
call
cmp
in
andb
mov
jns
sbb
cmp
inc
repz
lods
sbb
fldcw
xchg
lods
sub
mov
sbb
jne
scas
lds
scas
fbld
stos
mov
xchg
addb
sub
sub
xor
into
mov
loop
pop
xor
lret
and
xchg
cld
mov
mov
std
imul
xor
test
orb
shll
roll
mov
dec
sbb
lock
inc
out
lret
movb
jmp
jge
jg
mov
cmpsb
jl
jge
or
mov
xor
push
push
out
or
roll
adc
xlat
decl
or
jge
cs
inc
roll
test
pusha
push
frstor
fsubrs
dec
mov
nop
sbb
ret
mov
lods
sub
pop
shlb
inc
jo
ret
es
or
push
jp
int3
and
notb
mov
cmp
ret
jno
sub
lret
sub
repz
adc
cli
call
mov
add
add
push
pop
bound
push
inc
sbb
dec
mov
sbbl
inc
pop
in
adc
mulb
mov
cmp
xor
push
in
fsubrl
sbb
add
call
push
add
cmp
sub
pop
pop
icebp
mov
mov
popa
pop
nop
ja
aaa
jb
call
pop
int
add
arpl
inc
daa
sub
mov
mov
jle
lcall
icebp
subl
xor
test
int3
xchg
push
cmpsb
inc
cli
pop
inc
cld
imul
jb
lods
dec
insb
movsl
inc
out
pop
inc
adc
inc
push
nop
test
xchg
jmp
and
pushf
sbb
outsb
outsl
mov
lcall
test
lret
lret
stos
int3
pop
push
mov
xchg
xchg
or
mov
jmp
daa
pop
enter
push
xchg
je
xchg
sbb
les
jnp
std
or
lahf
insl
push
mov
dec
ret
add
repz
ja
push
repz
orb
mov
outsb
insb
aaa
sahf
lahf
out
les
push
test
out
pop
cli
out
inc
add
inc
ds
jb
push
inc
push
loopne
or
sub
pop
mov
loop
mov
jge
loope
fistl
cltd
sahf
pop
pop
subb
jle
icebp
pop
sahf
and
movsl
add
lock
daa
loope
leave
notl
lea
adc
in
and
in
pop
add
xchg
sbb
insb
dec
jbe
subl
xchg
pushl
in
gs
das
rcrb
ds
call
add
mov
pop
push
cmp
and
jo
lcall
lods
pusha
jle
push
or
cmp
fdiv
push
sbb
and
les
inc
aas
adc
push
ss
sti
mov
shlb
scas
sub
mov
test
jno
cltd
scas
mov
dec
mov
rol
lods
sbb
fadd
dec
xchg
sti
mov
mov
or
sahf
mov
mov
mov
push
sbb
xchg
out
jnp
adc
out
iret
imull
add
cs
lods
rcrl
mov
rolb
movsb
sub
cs
daa
mov
test
cli
inc
mov
rcll
enter
mov
cmp
mov
pushf
mov
mov
mov
cmp
jns
cli
int3
xor
push
filds
jmp
mov
ljmp
repz
scas
aam
mov
popf
push
sahf
jmp
xlat
fiaddl
or
or
adc
scas
mov
add
repnz
jg
mov
pop
sbb
ds
enter
cmpsl
aad
and
adc
mov
push
mov
pop
dec
pop
insl
imul
shll
les
insb
pop
es
clc
int
inc
fldenv
and
mov
lea
mov
rclb
rcll
addb
sub
cmpsb
push
lock
mov
cmp
movsb
stc
imul
mov
jle
pop
xchg
push
out
ljmp
in
data16
cmp
push
pop
push
or
pop
les
cli
mov
push
ds
aas
shl
and
jp
add
cmp
mov
pop
jae
insb
lret
pop
push
inc
mov
jge
sub
test
inc
push
sub
pop
ret
xchg
inc
mov
inc
xor
add
in
and
jg
mov
cli
testl
jae
ret
andb
push
out
ds
jae
mov
cmpsb
cld
popa
lds
xchg
mov
sahf
nop
lcall
fistl
mov
jno
pusha
fidivrl
insl
push
sub
out
sub
pop
push
sbb
inc
jge
cwtl
dec
and
sub
add
imul
mov
mov
inc
rcl
inc
insb
xchg
je
dec
cmp
xchg
adc
inc
xchg
pop
xchg
movsb
hlt
js
inc
adc
dec
sti
repz
mov
or
popa
and
xchg
sbb
or
or
pop
les
fstpt
push
hlt
jb
or
mov
mov
bound
ja
inc
cmp
lahf
cmpsb
xchg
in
xor
lcall
ljmp
lcall
ss
nop
in
xor
add
cmpsb
xorb
daa
loopne
cwtl
int3
shl
loop
add
and
adc
push
hlt
js
fidivrs
xchg
mov
mov
repnz
jle
pop
push
aam
mov
shl
sti
pop
inc
ljmp
push
fs
mov
sbb
mov
scas
push
push
dec
insb
mov
repz
mov
dec
pop
rol
mov
sub
imul
sub
and
mov
ret
add
daa
test
stos
xchg
aad
fwait
adc
mov
in
sbb
mov
jo,pn
insl
pop
mov
dec
stc
sti
xor
mov
sahf
pop
mov
adcl
je
xorb
mov
and
aad
in
stos
lods
cmpsl
push
jle
lods
repz
push
movsl
shlb
into
data16
stc
out
cld
in
sarl
xor
popf
inc
or
add
mov
aaa
inc
test
inc
xchg
adc
jl
adc
and
aas
fwait
mov
mov
sbb
fs
mov
arpl
popa
outsb
jecxz
lods
sti
add
data16
shl
arpl
push
popl
xlat
xchg
pushf
gs
push
adc
sub
pop
xor
adc
inc
testb
insb
sbb
adc
inc
pop
rorl
nop
pop
stos
lods
rcrb
xor
aaa
lcall
push
addr16
out
push
insl
inc
xlat
and
mov
loop
xor
mulb
adc
inc
adc
mov
out
cltd
loope
dec
xor
mov
jbe
scas
or
xchg
lods
gs
enter
or
mov
imul
aas
xor
add
std
dec
ljmp
cmc
shl
shrb
push
inc
stc
scas
lret
mov
jg
cmp
mov
lods
cmp
lods
jge
mov
lahf
pop
pop
roll
sbb
fsts
sarb
fsubl
inc
repnz
test
test
fidivrs
push
jae
sub
inc
mov
outsb
dec
bound
stc
out
shrl
add
popf
ret
dec
xchg
in
mov
sti
fs
ds
sub
enter
xlat
test
lret
addr16
subb
adc
push
pop
pushf
nop
xlat
iret
push
pushf
test
cwtl
les
imul
cmc
add
into
enter
mov
divl
mov
rcrb
cmpsl
jg
std
pusha
mov
in
dec
das
fimuls
cmp
xor
xchg
dec
xlat
xor
aam
push
insl
jmp
arpl
mov
pusha
jp
pushl
sub
and
xchg
inc
pop
mov
xchg
dec
or
push
sti
scas
inc
dec
imul
jnp
cmpb
push
sub
movsb
mov
shlb
and
adc
loop
das
add
fwait
cmp
jmp
addr16
sub
or
cwtl
enter
ror
fsubrs
scas
xchg
sub
jge
and
cmp
loop
push
popf
and
cwtl
fidivl
les
sbb
pop
in
sti
dec
jmp
push
sub
addr16
js
push
fs
cmpsb
addl
pop
ror
mov
cmp
dec
popa
fcmovne
stos
fs
jb
inc
fisttpl
or
mov
cmp
mov
cmpsb
out
aaa
dec
add
push
add
push
inc
or
xchg
cld
adc
or
xor
sub
jbe
or
leave
dec
pop
cmp
clc
pop
cli
and
sahf
or
testl
xorl
hlt
gs
pop
and
sbb
inc
or
push
cmpsl
insl
lods
ja
inc
mov
fcomip
imul
push
jle
ljmp
cmp
add
xor
das
lds
pop
mov
xor
pop
fisttpll
cld
out
adc
sub
insb
cmpsl
pop
fldl
and
xorb
lret
add
out
ret
pusha
lahf
inc
dec
add
je
enter
iret
adc
xor
sbb
in
je
cwtl
inc
fcoml
and
stos
mov
or
js
add
push
test
push
xchg
dec
push
sahf
scas
sbb
sub
pop
aam
dec
xchg
xchg
nop
scas
sti
mov
cmp
mov
ds
push
insb
sub
sbb
aaa
addb
sbb
dec
cmp
inc
push
idivb
push
scas
in
cli
ficoml
mov
jg
jae
push
push
ret
add
out
dec
or
stc
xchg
lods
xor
cmpsl
cli
movsb
sbb
mov
stos
adc
std
pop
and
test
dec
and
ja
xchg
arpl
and
lcall
adc
loopne
stc
or
dec
hlt
add
adc
pop
inc
jg
add
cmp
fistl
pushf
adc
xchg
or
jl
je
adc
push
dec
subl
test
jno
sbb
adc
push
cwtl
and
stos
mov
dec
mov
xchg
dec
mov
inc
xor
leave
jecxz
jmp
xchg
leave
out
popf
lahf
mov
xchg
call
call
pop
pop
pop
stc
scas
out
iret
mov
mov
popf
out
std
daa
lcall
inc
xlat
mov
imul
dec
jno
test
enter
and
xchg
packsswb
lret
or
push
jo
cmpsb
or
xchg
bts
mov
imul
or
bound
pusha
mov
xchg
bound
mov
mov
iret
mov
mov
popa
jae
test
lock
adc
or
inc
xlat
xchg
imull
add
dec
fisubs
sub
scas
loop
jns
movsl
and
repz
sti
gs
push
lret
outsl
xchg
xor
inc
incl
or
and
jl
and
cltd
mov
imul
inc
jmp
out
fcoml
test
xor
aaa
push
jge
jl
jne
xchg
enter
mov
sbb
and
and
cld
int
call
push
sbb
sub
int
cwtl
out
mov
mov
mov
adc
add
cmp
sahf
cmp
dec
jle
adcb
sarb
mov
sub
push
xorl
sbb
jle
test
popf
pop
mov
fcompl
adc
jbe
sbb
fcomps
mov
sub
add
icebp
jns
clc
or
lret
ficompl
pop
cmpl
bound
das
xor
cmp
add
jp
mov
xor
mov
mov
int3
jnp
dec
jecxz
push
inc
xchg
sub
fdiv
aam
call
dec
imul
xchg
dec
pop
mov
dec
bound
xorl
cmp
push
rorl
pop
ret
cmc
inc
mov
aas
xlat
add
notl
mov
xlat
in
mov
jp
cmp
in
clc
ret
sub
mov
xor
and
push
rorl
dec
inc
pop
and
retw
mov
nop
fistpl
lock
pop
adc
out
repz
pushl
xchg
mov
mov
dec
xchg
repz
mov
add
mov
xchg
xchg
adc
loopne
mov
divb
repz
push
xchg
idivl
mov
cmpsl
mov
mov
pop
lret
adc
cmc
adc
fcomps
or
and
dec
or
jp
mov
mov
rcr
std
hlt
das
mov
pop
mov
mov
lahf
pop
subl
aad
les
mov
xchg
mov
push
pop
popa
xor
push
cmpsl
xchg
mov
cmp
dec
fimull
lret
loop
jbe
jne
cli
les
cmp
es
out
add
sub
mov
inc
ja
and
mov
sahf
std
mov
xchg
sbb
scas
int
cmpsb
andb
jp
or
pop
jns
inc
mov
imul
or
and
mov
arpl
push
sbb
add
jae
stc
mov
stos
testb
hlt
sub
cmp
cmp
enter
mov
xchg
lcall
push
mov
jmp
xor
adcb
xor
mov
rcrl
dec
adc
push
dec
call
aam
pop
push
cmp
add
xchg
sbb
inc
imulb
arpl
push
mov
pop
jecxz
loopne
pop
scas
les
xchg
stos
push
icebp
mov
xchg
addr16
cmp
dec
xor
aas
mov
add
xchg
inc
mov
sbb
mov
scas
mov
imul
mov
cmp
movsl
dec
lret
nop
jg
dec
test
nop
inc
sbb
xor
out
pop
lods
notl
sub
daa
cmp
notb
outsb
fisubs
lcall
adc
push
ficompl
lods
xchg
add
stos
jne
mov
sbb
lret
cltd
mov
jle
insb
jge
bound
jmp
cmpsl
push
push
pop
shll
and
pand
adc
add
adc
dec
ret
pop
or
push
movsl
dec
mov
xor
dec
mov
mov
jnp
or
inc
xchg
push
sub
mov
bound
xchg
xchg
in
inc
push
dec
push
mov
dec
or
bound
mov
lcall
fistl
jecxz
xor
xorb
pop
frstor
push
ret
xor
daa
loop
add
sbb
xchg
andl
sbb
movsb
lods
test
imul
ja
incl
das
shrl
lahf
lret
test
shll
mov
iret
stc
pop
jmp
dec
mov
clc
mov
inc
push
push
pop
sbb
addl
xchg
fwait
repnz
inc
sahf
in
dec
ret
cmpb
hlt
xlat
insl
jo
test
mov
and
cmp
cwtl
mov
sbb
in
cmc
test
and
sti
adc
movb
push
call
loop
divb
divb
enter
mov
fsubl
js
pop
pop
xchg
fmulp
cmp
bndldx
xor
repnz
out
push
xchg
movb
pop
outsb
in
xor
jecxz
mov
sub
push
mov
mov
das
and
push
lea
andl
fstl
hlt
adc
pop
xchg
mov
or
lret
push
aad
repnz
mov
subb
test
mov
fwait
mov
aaa
movsl
aas
xchg
pop
mov
loopne
pop
neg
out
repz
addr16
cmpsb
push
in
mov
add
sbb
dec
in
sti
shlb
xchg
cmp
dec
lret
imul
shlb
shrb
aaa
push
xor
imul
int3
dec
jb
add
rol
pop
push
idivl
push
mov
ds
daa
cmpsl
jno
into
jecxz
insb
je
mov
sbb
cmovno
das
inc
stos
inc
or
add
sarb
push
push
pop
ljmp
jnp
lcall
jl
lds
inc
dec
lds
dec
xchg
popa
cmpsb
jle
adc
dec
jo
or
or
fs
pop
pop
mov
jae
xchg
mov
sub
cmc
bound
ss
inc
in
xchg
mov
or
stc
sub
and
mov
cmp
mov
test
lods
xchg
imul
cmp
mov
push
jp
fisubl
inc
pop
or
xorl
add
daa
mov
dec
jo
pop
xchg
lret
push
int3
cmp
and
mov
int3
xchg
adc
sub
mov
hlt
fadds
ds
stos
add
scas
lret
fldl
add
push
add
pop
pop
stos
push
push
or
sub
adc
or
arpl
cmpsb
aad
adc
jle
pop
dec
sbb
pushf
mov
mov
or
sub
mov
das
or
cmp
jae
in
test
mov
sbb
and
inc
xchg
push
and
and
inc
mov
mov
or
mov
inc
scas
scas
scas
out
sbb
mov
cmp
adc
sbb
cmp
jmp
adc
fnsave
mov
ret
mov
mov
sub
iret
fisttpl
mov
inc
inc
fmull
xchg
imul
hlt
dec
mov
lret
xor
mov
adc
inc
mov
lock
mov
cwtl
jle
jp
adc
sub
xchg
imul
and
push
outsb
mov
inc
data16
repz
sub
sub
sbb
jae
pop
inc
xor
dec
xorb
inc
and
lock
mov
xchg
inc
dec
popa
jle
dec
in
add
mov
xor
mov
mov
out
xchg
lock
mov
clc
sub
adc
adc
jg
iret
stos
lds
push
cmpsl
aam
rorl
leave
cmp
lods
push
sub
jns
loope
cmpsb
lods
ficomps
cmp
jo
data16
adc
push
mov
mov
out
scas
call
pushl
dec
lret
lret
adc
and
or
cmpsl
out
pushf
cmp
dec
lea
cmp
xchg
xorl
out
jno
xchg
dec
lods
mov
arpl
int3
add
in
in
adc
push
arpl
insl
pop
push
xor
mov
scas
lcall
or
test
xchg
push
dec
imul
shlb
movsb
clc
or
test
cmpsb
fists
mov
mov
imulb
inc
and
and
lods
dec
int
mov
sbb
pop
pop
mov
or
test
nop
adc
arpl
mov
mov
testb
js
xor
dec
mov
mov
imul
fwait
push
cmp
push
adc
in
iret
inc
push
pop
jmp
inc
or
cmp
mov
cmpsl
das
mov
cmpb
pusha
adc
pop
ja
cld
movb
adc
aas
rcll
sbb
xchg
lods
jae
mull
xor
adc
sbb
in
imul
xchg
repnz
pop
pop
pop
lock
lods
mov
xchg
or
int
xor
add
adc
aad
xor
xchg
outsl
xor
jno
pop
jg
mov
and
add
lret
test
dec
xor
mov
clc
repnz
lahf
or
std
stos
fnstsw
aaa
xor
adc
pop
cmp
mov
fwait
vmptrld
inc
repz
popf
fwait
test
xchg
stos
js
lods
lods
or
gs
inc
pop
xor
push
jle
imul
xor
std
push
dec
or
dec
pop
mov
loop
xchg
adc
pop
gs
xlat
mov
leave
xchg
cld
in
mov
sub
in
into
sub
mov
jnp
mov
dec
add
into
arpl
and
jb
repz
mov
inc
std
jns
stos
xor
cmp
clc
xchg
and
je
dec
cvtps2pd
roll
adc
popa
jle
ret
mov
arpl
push
xor
mov
push
ret
mov
and
jge
push
jle
repz
inc
pop
push
cmp
out
or
mov
out
inc
jl
cmp
nop
adcl
cmp
bswap
and
add
jl
je
bound
test
int3
jns
push
push
imul
mov
test
lock
and
mov
test
sarl
aas
push
cld
out
xacquire
inc
push
pop
scas
cmp
cmc
lret
dec
push
js
xor
dec
xchg
cs
inc
test
mov
xchg
andb
cmp
and
ja
fidivrs
in
ret
aam
push
pop
mov
xchg
xchg
out
pushf
xchg
data16
dec
or
lods
and
inc
data16
imul
mov
or
push
cmp
je
push
je
dec
mov
push
fmuls
adc
ljmp
lret
lods
add
ja
dec
jecxz
in
pop
fadd
repnz
fnsave
mov
jg
lcall
jecxz
lcall
call
push
adc
icebp
sbb
into
repz
mov
jbe
dec
mov
mov
popf
sbb
or
outsb
imul
out
or
inc
inc
push
inc
scas
sub
out
cmp
out
mov
enter
mov
leave
xchg
jb
or
mov
shrb
loope
outsb
lods
jns
mov
and
inc
fucomip
sbb
lods
jmp
mov
inc
xorb
sti
insl
lret
ja
jl
dec
movsb
push
jl
mov
les
jle
call
mov
popf
mov
push
icebp
repz
js
sub
ficoml
cmp
mov
ja
inc
mov
shll
or
and
xorb
push
enter
in
and
gs
mov
dec
test
mov
pushf
or
xchg
xchg
sbb
popf
std
lcall
ljmp
fidivrl
and
jnp
sbb
pop
push
jle
or
push
ljmp
imul
mov
sarb
psubsb
fwait
sub
outsl
call
push
lahf
cmpsl
jp
test
cld
inc
loop
icebp
clc
fwait
xlat
xchg
ss
outsb
loopne
out
dec
pop
imul
mov
scas
xchg
ret
je
xchg
aad
iret
movsl
ficoms
xor
lds
insl
xchg
xchg
or
enter
mov
push
push
loope
push
lsl
imul
js
jno
std
pop
pop
mov
xchg
xchg
mov
jecxz
sbb
add
outsb
movsb
mov
add
das
cli
je
sahf
popa
test
pop
xchg
dec
inc
sub
sub
test
cld
call
push
dec
adc
andl
dec
cmc
repz
jns
add
jbe
lahf
loope
iret
push
repnz
xchg
and
add
push
mov
and
fnstsw
fdivs
repnz
ret
call
setg
jecxz
mov
aas
or
or
pop
mov
xor
jecxz
fnstenv
das
inc
dec
pop
xchg
or
lret
push
fisubl
dec
push
xor
nop
jmp
fs
sti
or
loope
enter
jae
aam
jne
aad
add
inc
jle
insl
xor
lahf
adc
jns
scas
stc
fs
push
xor
mov
sbb
push
push
stos
aam
sbb
sti
mov
lret
adc
pop
stos
bound
dec
add
mov
subb
xchg
ja
mov
xor
sub
jg
pop
push
outsl
nop
xor
add
std
mov
mov
aaa
addl
xor
ja
ret
adc
push
sbb
mov
daa
pushf
xchg
icebp
cld
repnz
icebp
insb
loop
mov
jno
jae
fdivl
sti
insl
ret
fimuls
fimull
int
mov
and
nop
ds
repnz
adc
jbe
fmulp
clc
adc
adc
jo
and
adcl
and
call
out
dec
das
clc
or
int
inc
lcall
je
dec
mov
pushf
hlt
xchg
js
ljmp
adc
loope
sub
and
xor
xchg
ljmp
xchg
mov
pop
cmp
push
xlat
fbld
test
adc
out
or
inc
daa
mov
xor
cltd
mov
test
sbb
jl
into
or
jge
adc
xor
int3
pop
es
adc
sbb
in
data16
incb
pop
and
pop
mov
xor
or
mov
cmp
mov
sub
sbb
dec
mov
daa
psubb
shrb
jmp
test
int3
inc
in
mov
mov
inc
adc
out
in
fldln2
es
jbe
addl
dec
lds
jg
lods
lahf
add
cmc
xor
nop
xchg
ljmp
adc
xor
into
pop
lahf
lcall
inc
pusha
jge
xor
stos
add
insl
test
jge
jbe
inc
lods
js
repz
sub
imulb
dec
sub
add
int3
inc
or
jnp
mov
mov
or
rclb
jb
lods
pop
sub
sarb
pmulhw
jl
pushf
repz
cmpsl
outsb
das
ds
aad
adc
daa
das
inc
pop
icebp
inc
lock
mov
movsl
dec
fldl
xor
push
xchg
add
adc
imul
jmp
inc
int
popa
idivl
imul
pop
add
mov
inc
out
out
jmp
pushf
lods
and
add
cltd
or
inc
fstpl
ljmp
mov
xor
inc
jecxz
sahf
int3
sub
popa
dec
mov
adc
adc
es
sti
lahf
mov
and
lret
add
fldcw
mov
push
push
lahf
xchg
das
mov
jb
jle
stc
push
sbb
mov
pop
inc
or
rcrb
add
aam
repz
sub
stos
jns
mov
shlb
jle
sub
insl
pop
add
aam
jmp
ret
nop
loope
out
and
jbe
shl
movsb
sub
fmuls
mov
cmp
lods
and
sti
mov
mov
pop
data16
gs
cmp
sti
mov
xlat
add
and
loop,pn
div
mov
sti
daa
ja
arpl
fimuls
push
xor
or
jno
pop
clc
xchg
jmp
stos
shl
push
filds
jo
cmpsb
roll
mov
cmpsb
data16
pop
dec
andb
dec
jbe
addb
stc
ffreep
int
jb
dec
cmp
sub
icebp
sbb
mov
push
or
and
sbb
xor
mov
dec
ret
jnp
pop
inc
aad
icebp
pusha
pop
jae
aaa
lods
pop
aad
sub
gs
push
in
push
lret
leave
movsb
xchg
arpl
mov
inc
push
aad
nop
leave
in
iret
sti
repnz
lods
addr16
pop
inc
mov
daa
adc
lahf
push
xor
rorl
mov
lods
lret
add
into
insl
aaa
mov
out
loopne
mov
push
pop
lcall
scas
pop
sub
inc
out
call
fmuls
gs
in
inc
aaa
xchg
pop
mov
mov
push
pop
xor
jge
loope
lock
frstor
sub
or
bound
mov
sbb
ret
call
aaa
cltd
shrb
lods
xlat
or
cmp
jl
or
jmp
push
mov
sub
jno
cmp
xor
pop
add
aaa
sub
call
ret
out
stos
fbstp
jnp
push
out
adc
popa
loope
out
sub
xlat
cwtl
sub
mov
ss
cld
mov
push
das
cmpsb
pusha
mov
out
jp
xor
pop
stos
aaa
test
and
leave
inc
push
push
shll
push
call
mov
into
lods
jge
mov
jl
daa
pop
aam
popa
pop
inc
sbb
test
dec
inc
das
mov
jl
out
and
test
sti
fdivrp
roll
mov
ja
and
or
inc
fisttpl
jl
add
imul
xchg
mov
clc
lcall
in
fs
lret
or
jno
dec
sbb
insl
aaa
testl
addl
mov
addr16
xchg
lcall
sti
int
jge
mov
ret
xor
popf
or
pop
jge
jae
jo
in
imul
test
stos
pop
sarl
inc
mov
insl
mov
jmp
nop
jle
in
cwtl
rcr
jns
fcoml
hlt
and
dec
jmp
push
jle
pusha
rorl
dec
sbb
push
sbb
loop
pop
xchg
xor
jae
leave
fidivs
xor
xchg
aaa
mov
insl
xchg
out
cli
sub
mov
pop
inc
adc
mov
push
testl
push
pushf
sub
jo
fwait
sbb
pushl
pop
mov
movsb
subl
jnp
inc
call
mov
lock
pop
dec
jge
mov
inc
dec
inc
mov
ret
push
stos
jmp
push
xchg
cmp
aaa
ficomps
adc
cli
js
add
xor
mov
shll
rcll
cld
les
cltd
mov
inc
lret
pop
lods
stc
pop
mov
rcrl
mov
sahf
pusha
and
pop
aaa
mov
in
mov
mov
add
mov
call
adc
sub
mov
and
xor
or
jle
pop
imul
lret
sbb
cmpl
jle
sub
andl
sbb
loope
xor
leave
xor
dec
dec
scas
sbb
je
into
test
jae
lods
nop
or
into
cmpl
add
and
and
xor
inc
sbb
pushf
dec
popl
cvtdq2ps
ja
ja
out
int3
add
add
push
and
pop
out
cltd
xor
push
dec
bswap
aam
dec
orb
inc
in
inc
sub
ret
inc
arpl
insb
xchg
or
imul
aam
push
push
sub
mov
jmp
mov
ret
pop
xchg
push
push
call
push
repnz
adc
mov
cwtl
pop
imul
inc
insb
arpl
mov
mov
jmp
xor
call
mov
sahf
fdivrs
out
or
stos
push
mov
inc
loopne
push
repz
add
dec
insb
in
lock
dec
jle
repz
xchg
xor
mov
ss
sbb
lock
cwtl
add
ljmp
cmp
outsl
cmovs
rcll
aad
or
pop
and
push
xor
and
jb
mov
addr16
xor
loope
adc
xchg
mov
dec
repz
mov
out
jg
gs
adc
jb
call
jmp
test
inc
or
jne
divb
sbb
std
cld
popa
xor
push
jns
lcall
and
xchg
cltd
lods
mov
popf
jg
cs
iret
vshufps
and
dec
dec
mov
adc
sbbb
adc
shlb
dec
call
sbb
mov
push
add
pop
imul
pop
sbb
mov
dec
cmp
rorl
fadd
in
cmp
mov
cmc
scas
nop
ljmp
sar
mov
adc
cs
inc
comiss
jle
cli
fdivrs
loopne
scas
mov
inc
mov
jmp
xchg
push
outsb
inc
out
add
dec
or
stos
inc
addl
nop
push
lcall
add
sub
mov
mov
lret
loope
pop
add
pop
mov
fdivrp
push
push
pop
mull
and
jge
ljmp
push
push
call
push
xor
inc
pop
dec
in
jnp
inc
lods
cmp
jmp
icebp
aam
mov
ja
imul
sub
fnstenv
mov
jo
mov
and
sahf
pop
lcall
pop
mov
mull
jmp
lahf
xchg
insb
push
sbb
imul
mov
into
in
jp
aam
stos
jmp
imul
xchg
sbb
cs
sar
test
xor
int
cmp
cmp
cmc
inc
sub
dec
cmp
stos
mov
xchg
xchg
fwait
mov
fcom
xchg
push
enter
push
dec
ds
int3
addr16
push
outsl
inc
add
sti
xorl
jmp
sub
or
cmpsl
pop
outsl
out
xor
pop
mov
jg
sub
push
data16
arpl
loop
in
les
cmp
sbb
pop
fs
stc
scas
popf
lret
leave
decb
test
test
fs
mov
push
fs
ret
dec
sbb
fs
enter
xchg
call
xchg
mov
push
pop
mov
shrb
cmp
clc
inc
mov
cmp
jl
xchg
push
mov
cmpb
inc
jbe
xchg
xorb
bound
decl
adc
fiaddl
add
in
mov
jmp
mov
aad
adc
jp
mov
cwtl
pusha
cmp
sahf
and
ja
cmp
mov
or
inc
push
jg
jl
adc
bound
and
push
aaa
inc
test
shll
mov
pop
jecxz
shll
les
jge
imulb
mov
push
add
adc
or
repnz
pop
in
push
cmp
cld
ret
outsl
fldl
int
xchg
mov
mov
pop
jecxz
mov
xchg
mov
mov
xor
or
or
out
mov
pushf
inc
mov
aam
adc
orl
mov
fwait
mov
add
sub
jno
xchg
dec
mov
dec
push
popf
inc
jo
jg
sti
pop
adc
pop
and
test
push
cli
sbb
sarb
icebp
and
xchg
icebp
mov
push
rorl
xor
xor
ret
sub
lds
pop
mov
or
insl
push
mov
mov
lcall
fisttps
popf
or
push
and
sahf
es
mov
cmp
pop
mov
sbb
xlat
adc
add
mov
pop
dec
push
add
imul
aam
icebp
push
add
dec
lock
mov
rolb
clc
in
dec
mov
in
cld
dec
in
xchg
icebp
loope
push
inc
or
xor
cmp
movsb
inc
mov
sub
jne
je
pop
push
dec
or
mov
in
push
sahf
stos
xor
addl
fnstsw
mov
bound
add
fwait
in
repz
jge
mov
lret
adcb
cmp
cmc
xchg
adc
add
fnstenv
insb
rclb
dec
mov
xchg
mov
cmp
xor
movsl
icebp
fnstsw
shrb
lahf
aaa
ret
pop
pop
jno
add
repz
mov
or
bound
mov
and
fs
rorl
xchg
nop
imul
push
cmp
xlat
pusha
add
test
cli
pop
lahf
xor
ja
movb
inc
jnp
inc
repnz
dec
or
mov
sbb
adc
jae
or
dec
or
mov
clc
push
dec
adc
ret
out
add
out
pop
mov
mov
movsl
rorb
shlb
aas
mov
fwait
andl
inc
call
fbld
sbb
daa
add
rorl
add
lea
repz
sbb
or
push
add
push
icebp
out
mov
or
sub
lock
mov
ret
pop
mov
das
mov
jg
mov
jl
xor
in
adc
in
pop
int3
jmp
dec
repnz
cmc
scas
mov
push
sbb
pusha
ja
rorl
jbe
mov
out
incl
add
std
adc
mov
pushf
pushw
jp
adc
pop
addr16
xchg
mov
mov
adc
and
notb
test
imul
lods
xor
insb
outsb
fdivs
cli
xchg
adc
adc
xor
jne
leave
scas
xor
xor
and
push
arpl
adc
nop
push
push
jae
xor
push
lahf
cwtl
mov
or
lret
in
push
ror
ret
out
lcall
fstl
add
arpl
icebp
lds
lea
lds
fldcw
push
xor
mov
inc
jecxz
mov
repnz
xchg
test
cltd
andl
jecxz
sub
mov
fidivs
pop
outsl
jg
inc
jp
movsl
sbb
dec
mov
push
fstl
inc
pop
aad
pop
fcoms
lret
int3
and
push
shlb
dec
sbbl
fistps
cmpsb
in
andl
or
data16
inc
xchg
jb
dec
push
sub
popf
lahf
ret
adc
push
aaa
cltd
sbb
fcos
or
out
test
shll
xchg
sbb
sbb
iret
adc
dec
cmpsl
mov
cmp
icebp
fisttpl
icebp
mov
bound
dec
ret
and
xchg
mov
movsb
dec
enter
andb
xor
cmp
xchg
sbb
aam
pop
mov
out
mov
lret
xor
data16
lahf
ja
shrb
or
sub
mov
iret
sub
and
jmp
cmp
adc
inc
in
or
xor
dec
in
jb
fincstp
lret
or
out
pop
cmc
or
rcrb
stos
scas
ret
in
and
popa
mov
imul
jbe
std
sahf
pushf
les
leave
test
dec
call
sbb
adc
pop
out
cmp
imul
fldenv
pusha
popa
lcall
push
cmpsl
jmp
rcl
sub
fdivp
inc
out
xchg
scas
lods
fsubrl
or
daa
fbstp
popf
mov
xchg
sub
xchg
pushw
shld
jne
scas
and
cltd
pusha
fwait
negl
push
rcrb
aad
cmpsb
xchg
fucom
cmp
dec
cmp
pop
movsb
aas
pop
xchg
imul
test
mov
jne
out
jno
pop
fnstenv
xchg
mov
pop
call
push
jmp
call
dec
lock
or
add
popa
shll
test
cli
out
mov
cltd
dec
pop
pop
or
pop
dec
adc
xchg
fs
push
inc
jge
add
xor
mov
cmpsl
je
mov
push
icebp
aad
jmp
aam
sar
push
in
dec
push
jp
mov
jl
jg
xchg
lock
outsl
roll
dec
in
aam
jmp
sahf
lcall
mov
cwtl
cltd
test
faddl
pop
xor
xchg
add
loopne
pop
inc
inc
outsl
movsl
fstl
lcall
sub
ljmp
xchg
outsb
adc
mov
rcrl
hlt
sar
dec
js
jl
pop
jge
das
inc
scas
or
scas
inc
in
ja
add
sbb
inc
inc
sbb
mov
xchg
jmp
ror
sbb
sbbb
lahf
roll
scas
das
imul
mov
xchg
xor
cmp
out
mov
ds
loop
sbb
push
xchg
mov
fsubrs
mov
in
aad
push
fmulp
and
cmp
adc
xchg
cmp
jnp
adc
mov
in
pop
jnp
cmp
push
cmp
stos
jae
sub
insl
xchg
or
or
cmp
data16
fwait
sbb
lret
repz
mov
jae
popa
inc
das
dec
sbb
xchg
addb
jae
push
xor
pop
xchg
jp
pushf
mov
lret
xchg
fwait
pop
jl
push
inc
shrb
test
lret
jo
daa
xor
or
ds
jnp
xlat
mov
cli
leave
mulb
push
xorb
shr
sbb
adc
push
adc
pop
dec
imul
scas
sub
xchg
adc
dec
ss
fcomip
roll
aad
and
fbld
aad
les
sbb
outsb
cltd
pop
dec
sarb
in
xor
mov
mov
add
or
pop
movsb
mov
sbb
lahf
decl
cmp
or
mov
or
adc
ret
xor
pop
and
xchg
xor
push
bound
pop
mov
xorl
nop
mov
push
jl
xadd
in
sub
xchg
or
sbb
adc
dec
push
rcr
and
push
shl
and
test
mov
mov
cld
cmc
out
in
or
sahf
jae
jg
sub
hlt
cmp
rcll
cmpsb
jg
loope
push
adc
data16
mov
or
cmp
mov
ret
push
or
fldcw
scas
adc
jp
or
dec
leave
push
jne
dec
arpl
mov
fmull
ss
fistl
lds
jno
and
into
mov
xchg
pop
push
cmp
xchg
adc
jo
sbb
rcll
or
test
gs
fs
notb
int
inc
sahf
mov
outsl
arpl
cmp
xor
fdivs
icebp
add
push
xchg
xor
pop
insb
ja
ret
xor
xchg
sub
push
push
outsl
push
sti
xor
cmpsl
and
push
std
lods
in
sub
jl
sbb
fisttpll
xchg
aas
add
xorl
repnz
mov
call
repz
sub
fcmovnb
lods
xor
outsb
dec
inc
notl
jb
pop
stc
mov
les
test
ds
mov
dec
sti
jne
pop
inc
xor
fwait
pusha
loop
mov
addl
xor
dec
sbb
ficomps
shl
cmpl
pop
test
rorb
psubd
mov
fadd
or
cmp
loope
call
cmpsl
outsl
in
inc
add
out
pop
jmp
inc
mov
sarb
mov
adc
xor
xor
movl
mov
and
iret
jge
pop
fildll
jp
dec
daa
stc
lds
inc
sti
out
jno
xor
fdivrl
xchg
movsl
in
cli
cmp
jb
mov
fwait
inc
bound
roll
xchg
add
xor
and
inc
addb
in
bound
inc
shll
incl
xchg
jecxz
test
dec
sahf
addr16
cmpsb
outsb
repnz
out
adc
push
dec
jl
dec
push
add
test
inc
test
stos
xlat
fldt
pop
dec
or
xchg
loop
call
mov
arpl
mov
negb
adc
push
fadd
cli
add
in
sbbl
or
mov
idivl
adc
cmpsl
jp
setg
imul
stos
add
mov
and
rorl
dec
insl
test
mov
repz
sub
mov
mov
mov
insb
insl
push
jb
xor
lock
dec
mov
and
cli
aaa
push
adc
add
mov
push
leave
add
or
js
cmp
in
sbb
and
repz
stc
insb
fldl
mov
lock
pop
pop
leave
stos
and
add
pusha
jg
mov
mov
mov
pop
pop
repnz
mov
or
in
or
sti
rcrb
stos
xlat
add
lret
stos
scas
imul
arpl
lock
in
stos
adc
push
mov
cmp
scas
test
sub
sbb
cmp
jo
lret
loop
cmp
add
int3
cs
nop
cld
or
mov
lret
testb
test
or
test
and
or
mov
sub
mov
mov
cmc
rorb
ret
and
dec
out
fildll
arpl
ret
shll
out
test
mov
addr16
add
inc
iret
test
xchg
inc
xor
leave
sub
int3
test
mov
xor
pop
fucomp
fidivrl
push
sbb
mov
push
cmp
and
icebp
loop
jg
cmp
jne
out
inc
or
xchg
imul
or
outsb
int3
ret
out
lds
xchg
je
hlt
mov
xor
ret
pop
push
popa
sub
idivb
xchg
fadds
mov
testb
pop
jg
and
add
lcall
adc
mov
rcrb
fwait
stos
pop
cli
in
les
div
sahf
bnd
cltd
bound
adc
sahf
mov
out
mov
pop
cmp
jl
push
nop
pop
push
pop
or
fildll
in
rcrb
push
jl
in
adc
inc
scas
or
push
dec
dec
loopne
push
pop
lea
ret
jmp
inc
pushl
mov
stos
fldl
mov
and
nop
inc
imul
pop
xchg
push
push
out
mov
sahf
aaa
sub
cmp
les
pop
mov
push
push
ljmp
jle
jge
inc
test
ds
mov
sbb
push
inc
ret
push
fisubs
call
loope
in
and
sub
in
mov
fcomip
inc
stos
mov
cwtl
push
jne
in
push
cmp
fsubl
vorps
dec
cmp
das
in
inc
aaa
jne
loopne
mov
call
mov
pop
cmp
push
pop
cmpsl
xchg
jl
mov
xor
aas
adc
inc
mov
inc
push
sbb
mov
cmp
outsb
ja
bound
inc
mov
cmc
shrb
mov
add
loop
shl
repz
cmp
push
and
or
popf
insl
sub
cld
cmpsl
and
sbb
movsl
loopne
push
imul
pop
fisttps
aad
xor
std
scas
icebp
and
sub
pop
test
inc
stc
and
out
inc
push
cwtl
mov
ss
and
or
out
aaa
mov
mov
mov
jns
decl
push
inc
fldpi
push
imul
push
lret
push
fdivr
aam
push
lds
jno
xchg
mov
into
mov
jp
in
jae
shll
ja
dec
repnz
pop
shl
mov
mov
imul
mov
fadds
xchg
pop
cmp
or
push
pop
fadds
jns
cmpsb
add
inc
jnp
mov
inc
pop
mov
fcomps
mov
outsl
xchg
scas
pop
cmp
nop
lds
mov
push
mov
insw
adcl
push
xchg
cmp
jp
sahf
jge
mov
mov
mov
lretw
mov
mov
cmp
xorb
xchg
outsb
xchg
icebp
fistpll
mov
daa
cmp
es
rcrb
sub
lds
arpl
push
add
sub
stc
jns
loope
or
push
xchg
jge
xor
push
inc
mov
cli
push
xor
mov
insb
xor
stc
jae
outsb
sub
in
mov
fwait
movsl
cmp
fdivl
push
push
into
fimuls
add
dec
adc
fnstcw
mov
movsb
sub
lods
adc
mov
pop
or
popf
cwtl
cmpb
xchg
dec
push
sub
lret
push
inc
add
pop
push
xchg
cmp
xorb
or
sub
ss
cmc
mov
and
les
lret
or
pop
sbb
adc
pop
out
lock
imul
mov
or
jno
push
xor
pop
lods
movsl
scas
loop
aaa
xor
scas
sub
mov
or
cmp
sbb
or
xchg
mov
adc
das
insl
clc
and
es
adc
sub
and
cli
mov
jbe
and
jno
dec
push
mov
repnz
xchg
repnz
enter
sub
loop
loopne
jecxz
pop
jp
and
aad
repz
rcrl
push
dec
into
or
es
inc
pop
mov
sbb
jns
aas
dec
jae
ss
sti
out
daa
in
and
jle
clc
jle
in
mov
pop
lahf
nop
mov
add
test
je
aaa
push
inc
sbb
nop
add
sbb
pop
add
jo
hlt
cmpsb
jne
cmc
inc
rorb
cmp
sbb
scas
mov
cvtps2pi
dec
cltd
rclb
xor
test
push
js
adc
mov
sub
mov
sbb
ja
in
and
test
hlt
out
push
jb
ss
xchg
cmp
popf
jae
cmp
or
push
sbb
idiv
decl
outsl
repnz
imul
test
push
idivb
out
lcall
and
mov
daa
ss
and
das
popf
sub
mov
repnz
sub
jo
fsts
fadds
xor
out
fdivr
jbe
fnstcw
sti
adc
leave
cmpsl
repz
jp
xorb
xorb
dec
mov
jmp
int
mov
jle
sub
mov
out
psubd
xor
lret
xor
inc
or
scas
xor
enter
inc
scas
imul
cltd
mov
pusha
dec
xor
xor
jg
push
arpl
pop
pusha
sahf
or
sbb
xchg
xor
je
jl
xor
jae
ss
xor
sub
mov
sub
cmpsl
int3
pop
in
xchg
jge
sub
mov
icebp
xchg
inc
sub
pop
aad
pop
add
and
notl
fildll
or
jle
sub
das
xor
push
fimuls
les
inc
out
popa
jmp
testl
ret
outsl
aas
leave
jns
cmc
faddp
push
dec
aaa
xorl
jmp
dec
shl
mulb
iret
ds
pop
dec
xchg
pushfw
insb
jg
or
lahf
popa
cmc
adc
movsb
sbb
inc
aas
xor
popa
push
pop
cmp
mov
repz
pop
adc
call
sti
jle
lcall
mov
in
cmp
pushl
xchg
lahf
aas
xchg
ljmp
loopne
mov
pop
shll
repnz
dec
int
divl
jns
pusha
xchg
in
jno
insb
jno
imul
adc
stos
loope
cmp
fcmovne
or
jbe
push
fnstcw
add
pop
andl
cmp
push
aas
xchg
pop
xchg
inc
push
icebp
jl
pop
loope
testb
xchg
mov
cmp
add
and
sbb
imul
fidivl
fidivl
mov
jp
jp
bound
loop
xor
fnsave
jle
je
push
jle
sbb
jge
pushf
sbb
sbb
fidivrl
mov
ljmp
sub
ss
out
mov
mov
in
movsb
insl
adc
inc
mov
pop
icebp
and
lock
mov
bound
lcall
int3
adcb
mov
inc
sahf
incl
and
mov
push
add
es
and
sub
arpl
pop
shrl
leave
insl
mov
and
sbb
loope
into
xor
mov
lcall
popa
aam
mov
icebp
cli
in
pusha
xor
fimuls
add
mov
or
mov
or
data16
mov
push
shrb
iret
mov
orb
inc
or
xlat
jmp
adc
call
enter
or
imul
or
jmp
arpl
aam
rcr
jns
mov
or
lcall
inc
mov
sub
lea
inc
rolb
into
jp
ja
push
ret
jo
pop
ja
jg
stos
imul
dec
pop
mov
adc
fnstenv
out
mov
sbb
into
mov
loop
inc
sub
repz
xchg
rol
cmp
mov
cmpsb
dec
jl
loope
sub
mov
jg
inc
pop
fdivr
mov
call
enter
cmp
cli
xor
sub
mov
and
aam
mov
xchg
dec
stc
push
push
mov
jecxz
sub
inc
aaa
xor
mov
xchg
paddd
add
insl
ror
fwait
aas
add
rorl
lahf
fnsave
test
push
cltd
sti
les
mov
fs
ja
enter
push
dec
push
mov
rorl
xor
mov
hlt
out
pop
loopne
xchg
jecxz
repz
pop
xor
and
lahf
sub
jle
insl
shll
sbb
nop
xchg
push
pusha
cli
push
stos
je
jl
repz
notb
xchg
ljmp
lods
aad
mov
stos
xchg
stos
int
cmpb
out
inc
mov
cmp
cmp
push
pushf
push
mov
xchg
call
fldl
mov
enter
xor
pop
jnp
insl
cmp
aam
arpl
enter
cmp
rcrl
sbb
push
shlb
jmp
adc
and
sti
test
or
sbb
sbb
mov
inc
mov
call
mov
hlt
lret
int3
sub
aam
test
add
lea
sub
shl
xchg
xchg
loop
xor
movsl
jl
xlat
aas
pop
imul
and
mov
mov
mov
cli
add
adcl
nop
fisubrs
xor
xchg
fisubs
rcrb
cmc
sub
jge
ret
xchg
std
cmc
andl
fmulp
jp
mov
sahf
outsb
add
cmp
mov
adc
push
repnz
push
pop
lahf
neg
cltd
fs
inc
dec
jo
pop
cld
push
mov
sub
in
loop
ja
movsb
int
sbb
je
mov
test
jne
pop
aas
xchg
add
inc
pushf
ja
pop
xor
sub
push
stc
push
jl
mov
lret
cmp
pop
inc
lcall
pop
lods
mov
sub
mov
mov
cld
or
jmp
test
in
pop
adc
and
dec
mov
incb
or
jnp
mov
clc
popa
or
cwtl
std
jns
add
push
mov
cld
pop
pop
push
lahf
in
lds
stos
mov
pop
out
mov
sbb
gs
cmpsl
mull
cmpsl
movsb
pop
pop
mov
in
sbb
lret
or
add
jecxz
enter
loope
imul
cmp
jle
pop
shlb
xchg
ret
cmp
and
add
sahf
push
sub
sbb
aaa
adc
out
cld
cmp
mov
dec
pop
adc
les
push
aas
add
mov
and
push
loop
cmp
xchg
pusha
test
sub
push
fidivrs
push
xor
fdiv
cmp
jp
out
xchg
lahf
cltd
push
stos
jae
xor
repnz
jo
pop
sar
enter
and
mov
adc
push
pop
pushf
mov
outsl
call
xchg
push
repnz
xchg
test
mov
jl
adcl
jnp
adc
mov
mov
xor
imul
in
sar
fs
mov
mov
jne
jge
call
std
adc
sbb
jle
adc
sar
movsl
push
push
shrl
adc
ret
ljmp
xchg
xchg
in
fidivrl
ret
add
test
orb
stc
fs
cmpw
shrl
xchg
add
push
imull
idivl
lods
xchg
sbb
scas
dec
and
add
jecxz
clc
mov
rclb
iret
test
cmp
adc
xchg
or
jae
popf
cmp
popf
jne
xchg
push
cltd
test
mov
adc
cs
and
xchg
cli
retw
sub
jno
mov
stos
idivl
push
inc
test
jge
sub
or
xor
push
subl
test
fisubrl
jns
movsl
dec
push
ja
sti
movsl
push
xor
testl
rclb
mov
jo
enter
test
xlat
xor
pop
mov
sbb
sahf
jp
call
add
adc
mov
push
stc
outsb
and
push
stos
jbe
cmp
sub
sbb
movsl
mov
inc
insb
int
lahf
xchg
negb
loopne
and
testb
testl
cmp
and
inc
ss
pusha
mov
sarl
pusha
cli
sub
aad
fwait
sub
add
push
cmp
dec
dec
hlt
rorl
sti
add
pop
mov
jl
daa
adc
lahf
adc
jle
clc
sbb
lret
js
fwait
repnz
jns
sub
fldt
enter
in
cmc
fsubl
jle
cli
insb
enter
incl
push
cmp
movsl
and
push
mov
movsb
pop
inc
repnz
out
in
inc
leave
sbb
aad
nop
addb
ret
xor
rcll
mov
adc
jge
stc
push
cli
mov
dec
push
and
fstpt
and
xchg
dec
inc
imul
int3
cld
sbb
daa
mov
cwtl
jmp
jmp
mov
jo
imul
in
or
pop
add
ffree
cwtl
push
icebp
lea
push
mov
or
pop
jge
ftst
mov
jb
mov
test
add
pop
lahf
mov
imul
dec
call
push
cmpsb
fildll
sbb
push
mov
mov
pop
dec
xchg
sbb
movsb
mov
inc
adc
outsl
jne
cmc
dec
test
jle
mov
push
in
fisttpll
xorl
pop
je
repnz
push
push
ja
jnp
inc
fsub
mov
loop
fwait
jle
jnp
jno
dec
cmp
fwait
xchg
mull
ljmp
in
out
xor
fdivs
cmp
mov
lahf
movsb
sbbb
jae
jle
or
dec
push
js
xlat
fwait
rol
mov
cwtl
pop
add
lods
movsl
pop
mov
out
loop
or
sahf
ja
dec
push
jmp
popa
popa
cmp
inc
mov
xchg
fcompl
push
mov
inc
out
mov
in
mov
arpl
pop
xchg
call
pop
repnz
sub
mov
in
inc
popf
fsubrs
adc
xlat
mov
push
nop
jp
jne
sbb
clc
xorl
sub
movsb
and
fsts
jge
idiv
push
cmp
out
mov
cli
adc
outsb
sbb
xchg
adc
lock
and
leave
jecxz
and
mov
sub
mov
insb
shl
cli
xchg
mov
push
arpl
push
mov
xchg
mov
push
xor
mov
roll
les
lret
sbb
test
or
push
inc
adc
pushl
push
cli
loopne
inc
sub
bound
xchg
mov
int3
inc
add
cmpl
inc
cmpsl
ret
addb
andl
pusha
mov
pop
mov
jg
jmp
insl
shlb
stc
mov
or
sar
lcall
push
movsl
pusha
cmp
cmp
fdivs
clc
es
nop
cmp
outsb
sbb
push
movsb
or
add
dec
ret
iret
pop
sbb
gs
add
addr16
fwait
cmpsl
int
fwait
inc
and
in
aaa
xor
sub
enter
outsb
das
cmp
aad
mov
mov
push
xchg
int
dec
popf
mov
popf
clc
repz
pop
cmpsl
cmp
xchg
and
in
or
add
rcrl
inc
jl
cmpsl
pop
pop
push
roll
aam
push
dec
sub
sarl
and
lds
arpl
shl
daa
cwtl
jns
inc
xchg
out
arpl
mov
xchg
jmp
shrl
jae
out
jmp
movsb
lds
les
pop
popa
lea
lea
pop
mov
jmp
fwait
sub
xor
push
inc
dec
push
xor
sbb
lods
lds
push
lods
xor
push
icebp
fists
or
in
or
clc
clc
sbb
xor
sysret
pop
pushf
cwtl
inc
jp
rcll
fdivrl
inc
push
inc
lret
test
pop
mov
pusha
loop
insb
lea
int3
ja
pop
mov
sti
xor
pushf
test
fmull
xchg
icebp
iret
inc
mov
add
inc
lea
pop
out
push
rolb
jg
sarb
adc
js
jnp
mov
cmp
insb
sub
and
jae
clc
or
lahf
push
and
xchg
nop
aam
jbe
imul
int3
iret
dec
sbb
cwtl
dec
cmp
mov
cmpsb
lods
mov
cmpsl
sahf
ret
fst
sub
xchg
add
and
push
dec
inc
jle
jno
mov
scas
push
xchg
add
xchg
pop
mov
jge
push
rcll
call
call
cld
cmp
xchg
adc
movsb
xchg
sbb
sub
ds
xchg
sub
rcrb
sub
adc
jne
test
ss
iret
fists
ljmp
jl
shll
push
gs
dec
repz
jbe,pt
outsl
or
cmpsb
push
xor
clc
jbe
xchg
loop
imul
pop
clc
pop
xor
arpl
gs
or
notb
sbb
inc
std
mov
sbb
imul
in
inc
sub
fnsave
lcall
sbb
or
jo
dec
loope
insl
outsb
or
push
sub
rcrl
repnz
jne
das
add
or
lea
adc
pushf
jae
hlt
not
clc
cmp
movsb
jnp
or
sbb
push
mov
pop
pop
or
dec
sub
scas
xor
sub
xor
mov
sbb
das
bound
sar
jp
xor
mov
xchg
push
scas
pop
rorl
sub
ret
pop
fidivrl
pusha
hlt
mov
dec
mov
mov
add
std
rolb
out
insl
or
mov
outsb
mov
idivb
shrl
cs
cmp
mull
les
popa
ret
push
lcall
nop
out
or
adc
mov
daa
xor
add
dec
dec
lea
adc
pop
cmpsb
addr16
cwtl
jb
test
push
gs
test
lret
sbb
push
sub
dec
rolb
fiaddl
pop
xchg
je
sub
mov
sub
aad
adc
cmpsl
test
cwtl
jb
outsb
in
fs
test
jmp
add
enter
popa
pop
or
ja
mov
loopne
adc
jge
out
mov
aam
add
mov
out
lea
push
mov
loopne
add
or
jmp
cmp
mov
lcall
icebp
jo
xchg
les
scas
mov
rep
mov
sub
movsb
les
ljmp
ljmp
gs
movsl
mov
icebp
sbb
cmc
or
sbb
scas
sub
push
shlb
xchg
mov
or
lods
pop
lret
mov
mov
ficoml
mov
mov
jg
sbb
ja
aaa
xchg
inc
arpl
test
gs
pop
andl
pop
rcrl
loope
inc
ret
int3
dec
xchg
adc
mov
bound
sbb
push
sbb
mov
inc
mov
cmp
inc
loope
jl
sbb
div
mov
sbb
or
inc
insb
aad
mov
mov
lahf
or
mov
jb
push
lret
and
jo
sub
jno
mov
mov
int3
lds
out
clc
push
ljmp
push
push
incb
jle
xor
lret
jb
lods
sbb
into
lret
mov
sbb
jmp
xor
adc
fsubr
stos
cs
sbb
jle
bound
sbb
ds
hlt
jge
hlt
outsl
mov
mov
and
lods
jp
xor
scas
stc
mov
mov
pop
js
dec
xor
enter
enter
dec
lods
call
xor
shlb
and
in
lock
jmp
nop
pop
dec
and
cs
sti
sub
mov
adc
cmp
aam
xchg
xor
faddl
sbb
adc
lods
aam
ljmp
daa
lock
cmpsb
inc
push
push
leave
out
cmpsl
mov
in
dec
fcmovnu
push
and
inc
mov
add
ljmp
inc
cmp
jge
adc
outsl
stos
xor
jmp
xchg
and
ror
sbb
xchg
pop
mov
and
mov
add
xchg
test
cmc
mov
jo
or
dec
loopne
inc
jmp
int
or
and
xchg
movsb
sub
adc
and
das
jmp
push
sbb
adc
lock
stos
lock
or
inc
lahf
inc
bound
push
mov
insl
and
ret
and
lret
sbb
fldenv
push
aad
stos
mov
jo
push
scas
sub
xor
sub
push
enter
mov
js
repnz
or
cmp
mov
xchg
ljmp
mov
test
daa
in
sbb
add
cli
lcall
scas
xchg
push
mov
lds
lret
cmp
test
mov
push
insb
push
sbb
call
and
dec
jae
jno
mov
adc
add
addr16
test
mov
sbb
jp
pop
sub
repz
daa
and
roll
in
jo
lret
cwtl
xchg
aaa
lods
les
fstps
and
sub
dec
pop
or
pop
add
push
adc
jge
clc
pusha
sub
push
and
fwait
xchg
xor
xor
adc
rcl
test
mov
mov
mov
in
fldenv
in
adc
scas
mov
inc
movsb
mov
stc
lock
mov
cli
ss
and
mov
aad
inc
insb
cmp
jmp
stos
out
pop
pop
push
sub
imulb
adc
mov
pop
sbb
xchg
mov
daa
pop
adc
roll
xchg
xor
cmp
mov
fldenv
sub
xor
add
shlb
push
outsb
or
xlat
sub
in
out
ss
mov
mov
mov
sbb
jle
push
test
or
pop
fidivs
pop
inc
or
ljmp
mov
dec
cmpsb
jne
sbbb
cs
pop
xor
jae
test
and
xchg
mov
xchg
add
imul
mov
xchg
dec
pushf
push
sbb
fwait
adc
xchg
mov
leave
in
and
xchg
cld
dec
rcrb
pop
popa
test
hlt
aaa
imul
mov
mov
cmp
nop
into
xlat
dec
je
mov
push
gs
xor
int
mov
das
sub
adc
mov
lcall
stos
mov
ljmp
adc
int
fldl
xchg
mov
push
dec
xchg
stos
mull
inc
cmpsl
mov
insl
rorb
pshufw
inc
xchg
test
push
add
jmp
xor
testl
jae
xor
inc
insl
bnd
dec
or
enter
addl
addb
adc
lds
fcmovu
xchg
aad
jae
sub
push
scas
cmp
jmp
shr
mov
addl
add
outsl
dec
repz
insb
nop
fildll
por
push
add
cmp
ds
mov
shll
push
sbb
scas
int3
dec
push
lock
inc
aad
sbb
pop
ljmp
jo
lds
lret
adc
push
movsb
push
scas
push
and
not
je
scas
add
add
pop
es
popa
dec
or
jns
cld
outsl
out
cmp
mov
or
jl
xchg
lahf
dec
jp
pop
or
xchg
and
xchg
mov
mov
lcall
push
aad
xchg
scas
insb
into
dec
lcall
and
and
pop
sub
mov
repnz
cmp
dec
fxch
mov
xchg
movsl
test
cli
adc
or
hlt
popa
xlat
loopne
pop
divl
data16
cmp
lret
dec
lret
ss
out
pop
scas
pop
jo
dec
dec
add
loopne
jns
cld
inc
jne
fdivs
jl
push
cmp
add
imull
adc
fstp
mov
cltd
mov
sti
xor
mov
jle
cld
sahf
or
mov
test
or
data16
stos
sahf
xor
dec
fstpl
push
cmp
inc
test
inc
nop
sarl
fwait
adc
mov
dec
jmp
ljmp
mov
mov
pop
lods
or
push
push
stc
or
in
repnz
mov
out
push
sbb
dec
call
push
fsubp
or
or
inc
push
jp
pop
and
stos
insl
lds
mov
xor
pop
add
jae
mov
rcrl
hlt
xlat
cmp
rcll
mov
cld
add
shlb
inc
pusha
inc
mov
xor
out
pop
mov
int
mov
into
jg
outsb
mov
leave
jns
dec
int3
mov
adc
cmpsl
and
icebp
fs
jne
fcmovu
add
dec
fisttpl
out
dec
and
outsl
bound
xchg
in
sbb
and
sbb
rorl
cmp
scas
sbb
movsb
dec
lds
or
xchg
rorb
pop
mov
mov
mov
cmpsl
ret
or
mov
dec
or
fstpt
andb
inc
ret
call
jne
inc
sbb
lds
jecxz
jnp
lret
aas
movsl
mov
adc
inc
mov
data16
mov
push
cmp
test
rcrb
push
adc
fmuls
in
mov
jnp
in
xchg
adc
rcll
aam
clc
or
and
cld
pop
or
mulb
fsts
out
xchg
adc
aad
mov
jmp
xchg
mov
mov
rorl
pusha
mov
pop
aas
mov
dec
sbb
js
sub
or
pop
xchg
iret
sub
inc
xchg
mov
sbb
lcall
xchg
cmp
dec
pusha
ret
fstl
shrl
dec
mov
lods
push
cwtl
imul
or
jle
stos
movsl
add
insl
movsl
ds
out
adc
pop
mov
inc
aad
sbb
nop
mov
stos
aam
xor
mov
roll
xlat
sbb
lret
in
insb
sti
mov
mov
jno
adc
dec
mov
jp
cmc
fs
pusha
jmp
mov
xor
out
data16
push
arpl
shll
aam
flds
pop
cmpsl
lea
cmp
sub
push
jl
pop
lock
imul
push
push
or
lea
imul
cmpsb
divl
mov
out
imul
xchg
ja
mov
push
imul
xchg
jne
add
adc
mov
mov
or
inc
sub
out
mov
mov
xchg
rcrb
roll
lds
cwtl
cwtl
dec
adc
push
and
or
mov
pop
xchg
in
pusha
movsb
dec
jb
into
xlat
es
sub
out
jp
loop
sbb
out
pop
test
xor
in
adc
add
outsl
mov
sbb
stc
mov
test
and
push
mov
mov
test
inc
push
jb
ret
je
psrlq
nop
add
cli
jecxz
dec
cmpsl
lods
mov
pop
pop
cli
es
inc
mov
xchg
lods
mov
jb
stos
lcall
mov
mov
sub
inc
aam
ss
cmpsl
out
scas
cld
cmp
add
dec
inc
pop
dec
push
or
jne
stos
lods
sahf
cmp
inc
add
sahf
add
push
ljmp
adc
rcl
cmp
inc
jecxz
aas
shlb
push
pop
push
mov
and
and
xchg
xor
cmc
mov
mov
lea
out
inc
aas
sbb
jmp
and
add
push
rcll
pop
xchg
fiadds
mov
cwtl
adc
add
in
in
ljmp
sbb
xor
xchg
cmp
in
pushf
mov
rorb
cli
imul
jae,pn
xchg
sub
js
arpl
dec
mov
ds
lock
inc
movsb
es
mov
push
out
xchg
imul
adc
mov
pop
adcl
and
cmp
add
pop
mov
into
sbb
ret
push
sub
insl
lods
rep
scas
lahf
stc
das
sub
test
xorl
test
jbe
iret
mov
xor
mov
nop
add
push
pushf
push
push
sub
jp
loope
jge
push
xchg
shrl
iret
fwait
stos
lret
fcmovbe
int
outsb
movsb
imulb
repz
scas
xchg
push
imul
pop
push
fdivs
gs
rcll
repz
jg
cltd
xchg
cmp
fsubl
and
push
jmp
mov
or
enter
jp
fnsave
cmp
cmp
mov
aas
push
xchg
sahf
pop
lock
sbb
push
repz
dec
push
test
cld
sbbl
in
sub
xchg
shll
popa
xor
xorl
jmp
xchg
pop
mov
dec
pop
xchg
jae
insb
mov
hlt
lods
jne
clc
cmp
ret
std
mov
xor
pop
lea
fwait
dec
and
cs
sub
adc
rolb
push
subl
mov
xor
lods
jp
rcrl
hlt
stc
mov
pop
jne
push
cli
adc
lods
sub
push
sbb
inc
test
aaa
cmp
in
ds
push
js
callw
mov
cmp
push
mov
sbb
hlt
push
xchg
cli
iret
sub
lods
xor
mov
jbe
dec
and
cmp
dec
mov
pop
je
andl
xor
inc
out
push
shlb
xchg
les
jb
push
repz
adc
andb
nop
jae
aam
stos
idivb
adc
fs
in
xchg
popf
mov
mov
cmp
push
push
and
arpl
imul
test
jmp
outsl
push
cmp
rorb
xlat
push
insl
cmp
inc
mov
cmp
cwtl
push
mov
mov
push
mov
in
pusha
arpl
push
mov
outsl
inc
cmc
push
in
and
and
mov
popa
push
sub
and
sahf
dec
or
adc
xchg
pop
insb
in
mov
jp
aad
inc
test
dec
sub
imulb
aaa
sub
xchg
add
pushf
pusha
in
xchg
xchg
adc
lcall
dec
shll
clc
lret
jl
call
int3
inc
cmpsb
movsl
pusha
mov
push
sbb
repz
rcl
push
and
mov
rcl
jg
mov
mov
sub
sub
leave
test
jmp
scas
cmp
pop
mov
sub
xor
pusha
xchg
out
dec
in
xchg
adc
int
fucom
sbbb
outsb
mov
insb
mul
scas
ljmp
adc
pusha
mov
xchg
push
pop
mov
iret
cmc
in
inc
pop
fwait
xchg
popf
rcpps
lahf
mov
mov
hlt
insb
cmp
std
dec
pop
add
daa
pop
outsb
pop
push
and
loop
adc
add
mov
ja
test
lods
pop
and
xchg
ljmp
dec
scas
cmp
cld
testl
sti
push
daa
pop
and
sub
inc
fcompl
mov
ret
push
in
in
in
inc
popf
mov
lock
sbb
test
pop
add
mov
dec
inc
inc
mov
xor
add
ljmp
push
and
lcall
sarl
outsb
in
jle
xchg
mov
sbb
ja
dec
imul
stos
scas
cwtl
data16
push
pusha
imul
fdivrs
pop
addl
inc
dec
xchg
adc
gs
je
xchg
sti
aad
mov
cs
push
and
mov
test
aad
repz
ret
inc
xor
cli
ds
jo
push
dec
lahf
js
cmc
scas
cld
bound
push
cmp
add
cli
or
adc
cltd
lock
add
push
addr16
and
and
mov
sar
jl
fwait
sub
sub
in
test
rcrb
adc
dec
push
mov
mov
pop
hlt
imul
lds
les
jge
pop
xor
out
push
ret
ret
push
cmp
dec
loop
data16
mov
jl
sub
out
subb
or
imul
sbb
mov
pop
push
cmpsb
adc
xchg
xor
pop
xor
pop
sbbl
dec
repnz
push
ja
orb
xor
adc
or
lcall
pushf
repz
xor
xorb
cmp
daa
sbb
cmp
sub
leave
stos
push
push
leave
addb
js
out
or
je
sub
or
fstl
cli
jecxz
repnz
mov
add
in
sbb
pop
mov
leave
or
push
add
sbb
push
hlt
lcall
and
popf
inc
inc
sbb
rorl
dec
adc
mov
jo
clc
sub
xchg
fs
bound
out
dec
pop
sbb
imul
das
jge
data16
incl
fstps
and
iret
push
iret
aas
lds
outsb
lds
incb
xchg
adc
mov
scas
mov
or
xchg
mov
pop
rcrb
or
inc
pop
push
lods
xchg
jge
aad
xor
lods
pusha
jb
das
out
aaa
vpmacswd
mov
push
test
pushf
test
inc
mov
adc
test
pushf
inc
ret
aaa
aam
jnp
nop
and
xchg
cmp
push
cmpsl
fcmovnbe
sbb
andl
adc
in
bound
jle
cli
mov
mov
jbe
maxps
xchg
gs
pop
jl
sahf
ret
div
jmp
daa
negb
inc
mov
leave
fs
adc
xchg
and
adc
f2xm1
xchg
and
or
lret
add
pop
inc
push
mov
push
in
push
or
mov
dec
notb
xchg
mov
push
iret
dec
and
jp
fwait
sbb
push
jns
popa
jno
scas
ret
fisubrl
mov
add
cmp
push
nop
add
adc
leave
call
stc
xor
lea
fs
sbb
out
xchg
lods
mov
arpl
stc
repz
aad
adc
xor
add
mov
clc
or
push
je,pn
mov
xor
xor
and
or
in
in
je
mov
push
jge
xor
test
iret
jae
mov
test
dec
out
pop
ss
xlat
js
or
lret
or
popa
mov
jo
cmp
stos
jmp
pop
adc
jae
fistl
shlb
cmp
pop
ljmp
mov
lcall
out
in
adc
divl
fldcw
mov
cmpsb
arpl
imul
xor
std
jno
sbb
in
cmc
mov
jge
cmc
in
arpl
fsubrp
mov
lret
outsl
jle
adc
mov
andw
add
jb
fldl
push
and
icebp
int3
hlt
and
xor
cmp
std
adc
shl
inc
fs
in
sti
nop
adc
cltd
dec
push
fwait
jb
cmp
mov
bound
test
roll
addl
inc
and
je
mov
js
mov
subl
es
cmova
out
sub
mov
xor
repnz
aad
or
adc
jmp
adc
jecxz
les
jl
jp
mov
mov
ss
xchg
js
xor
pop
mov
cmp
lret
test
cmp
lock
lods
adc
jle
sbb
jo
push
cli
loope
inc
inc
nop
or
pop
inc
push
and
sahf
sub
xor
scas
sbb
push
add
cmp
rcl
insl
sti
addr16
frstor
mov
mov
mov
cmp
pusha
outsw
test
repz
repnz
mov
mov
jae
jge
movsl
in
adc
jb
mov
xchg
cmc
or
lcall
push
mov
out
adc
jle
and
mov
jl
aas
mov
les
jmp
mov
jns
xchg
es
and
mov
in
mov
sub
inc
test
mov
loop
mov
sti
pop
lcall
xor
push
aam
inc
insl
fmuls
mov
mov
inc
cmp
aam
in
nop
sbb
in
sahf
les
xor
lahf
loope
mov
jno
and
xchg
adc
arpl
inc
das
out
push
xchg
push
dec
xchg
nop
push
inc
test
sbb
imul
mov
sub
xchg
push
mov
dec
mov
cmp
sbb
xchg
ret
xor
xchg
pop
mov
jo
sbb
sbb
loopne
mov
cwtl
cmpsb
cmp
fildll
push
xlat
insl
and
loopne
xor
hlt
aam
mov
sbb
cmp
sub
mov
stos
inc
test
mov
shlb
iret
ss
mov
push
adc
repz
add
add
jg
cmpsb
jmp
adc
mov
subb
push
push
pop
clc
in
mov
cmp
mov
mov
nop
mov
push
inc
mov
mov
sbb
jge
dec
adc
mov
ret
cmp
pop
xor
xchg
ret
sbb
cli
adc
mov
mov
int
lods
dec
stc
pop
outsb
mov
xor
shld
in
sar
arpl
popa
push
jge
aas
das
clc
out
push
stos
mov
popl
add
inc
test
rorb
push
shrl
es
scas
fsts
sahf
mov
dec
xchg
mov
call
lods
daa
into
adc
in
insl
xchg
push
push
insb
stos
movsl
cmp
adc
cmc
movsb
lret
jecxz
daa
pop
sahf
inc
movsl
adc
pop
fnsave
in
mov
dec
or
jns
inc
fildll
cmc
or
mov
jae
arpl
into
and
sbb
inc
mul
mov
pusha
jb
pop
test
rclb
adc
push
push
repnz
shl
jle
je
mov
loop
pop
cltd
test
je
sahf
jmp
push
sbb
in
dec
mov
imul
imulb
jl,pt
mov
mov
lcall
stc
pop
mov
pop
stos
sbb
add
mov
sbb
xor
scas
jge
lret
fwait
in
fcom
inc
js
nop
lds
es
stos
jo,pt
cmc
dec
test
sbb
ss
inc
cmpsl
dec
loop
xor
loopne
pop
mov
pcmpgtd
scas
adc
movsb
dec
pop
sub
shlb
int3
push
insb
insl
popf
and
sbb
xchg
cmp
imul
jb
mov
jge
inc
insl
sbb
pavgb
test
dec
lret
les
icebp
sbb
sbb
mull
imul
xchg
arpl
sub
daa
imul
pop
inc
xor
cmp
pop
test
dec
mov
and
gs
and
or
cmp
dec
adc
mov
lods
in
pop
xor
push
loope
sub
jle
stos
aad
rol
and
lea
adc
ss
add
loopne
aaa
jg
aas
mov
nop
mov
loopne
stos
gs
xorb
aaa
popw
sub
jns
push
or
jae
pop
mov
enter
inc
adc
and
insb
push
sbb
inc
rcll
push
jg
pushf
je
into
mov
mov
icebp
inc
cwtl
jle
cmc
adc
aam
mov
test
lahf
jmp
push
pop
aaa
cvttps2pi
pop
sbb
mov
jle
mov
sbb
mov
cmp
out
ret
call
add
ja
or
xlat
pop
aam
mov
sbb
or
jnp
jb
stos
sub
adc
repnz
jbe
into
movsb
or
jnp
adc
sub
adc
jne
int
movsb
notl
mov
sbb
mov
fcomps
repnz
mov
aad
leave
sbb
push
popf
ds
dec
or
int
lahf
mov
mov
insb
sub
fistpll
or
dec
dec
pop
lea
loope
push
sbb
xchg
xor
js
mov
sub
iret
push
sahf
jne
scas
jecxz
enter
cmp
xchg
popl
iret
mov
test
out
xchg
xor
pop
pop
stos
cld
sbb
testl
jno
dec
lcall
push
xor
dec
out
adc
jge
rolb
inc
std
mov
pop
xor
scas
xor
mov
adc
adc
out
mov
pop
sbb
xor
movsl
testl
sarb
ret
repz
movsb
shl
inc
rorb
mov
aaa
outsb
fidivs
pusha
shll
xor
pop
ficompl
sbb
mov
sbb
scas
stc
xor
adc
outsb
rol
loop
adc
femms
inc
enter
movsl
push
push
stc
mov
inc
or
lcall
fbld
jbe
and
into
push
jns
add
cmp
mov
divb
les
outsl
outsl
inc
rclb
dec
xor
daa
mov
sub
cmp
xor
pop
jp
ret
add
xchg
jp
cmpsb
sub
pop
loope
mov
cld
pop
fsubs
xchg
inc
divl
mov
jmp
dec
mov
mov
jo
mov
mov
arpl
lret
fwait
or
cmp
nop
fisubrl
and
jecxz
dec
ffree
test
push
push
test
pop
in
xor
sub
pop
mov
inc
jb
addr16
cmc
les
fimuls
sub
mov
adc
or
movsl
mov
xor
lahf
dec
push
movsl
in
mov
inc
shl
and
mov
cmpsb
call
xor
fsubrl
dec
ljmp
sbb
inc
add
inc
or
imul
or
or
sub
sbb
test
ja
xor
inc
sub
inc
movsl
cmp
outsl
cmp
cmpsl
cmp
nop
stos
sbb
inc
mov
xor
xor
fcmovbe
fwait
fs
add
cmp
mov
pop
dec
pop
ss
clc
repnz
js
inc
cmp
into
jg
imul
inc
jae
test
cmp
xchg
cmp
rorl
test
ja
fadds
xor
cmp
stos
imul
and
pop
cmpsb
ret
lods
cld
les
jmp
push
es
ret
test
rcrb
push
in
call
xor
push
pushf
jl
or
lret
xchg
ret
inc
add
mov
inc
pop
imul
jge
add
xchg
neg
jbe
cmp
sub
and
push
and
in
test
lahf
sbb
lahf
jb
stos
repnz
out
ljmp
icebp
adc
inc
xor
inc
cli
mov
and
out
and
js
stos
fcomip
pop
dec
repnz
aad
bound
dec
pop
cmp
cs
mov
sub
repz
adc
xchg
jp
je
inc
mov
lods
pushf
dec
dec
mov
popf
add
test
mov
adc
jge
daa
xor
sbb
popf
add
mov
pop
push
iret
loope
pusha
js
popa
inc
ror
push
mov
sub
xchg
test
je
ss
xor
cld
mov
addb
test
jo
ficoml
stos
gs
add
xor
out
mov
mov
or
int
xor
addr16
sub
push
je
cltd
adc
mov
adc
dec
fwait
add
dec
cmp
add
jb
fdivr
lret
lds
jns
xchg
dec
scas
and
inc
addr16
mov
inc
or
scas
movsl
pusha
jne
stos
decb
sub
fs
xchg
pop
cli
sub
es
and
xor
bound
sbbb
std
out
sub
fwait
in
jae
mov
xor
out
mov
call
push
std
pusha
lret
and
out
insb
sbb
xor
fcoml
sbb
imul
sbb
inc
cmpxchg
in
test
lds
add
test
xor
jne
fsubrl
mov
test
xorl
pop
rcll
mov
push
mov
je
adc
test
ss
sub
inc
cmp
les
or
inc
jae
add
call
fsubs
scas
push
nop
sarb
pop
xchg
es
xchg
test
push
jge
mov
es
fadd
sarb
pop
js
adc
push
das
xor
les
sti
inc
fucomp
jge
lds
mov
cmp
xor
arpl
lock
lahf
fsubrl
in
cwtl
mov
out
leave
xchg
ljmp
loope
mov
lahf
lahf
scas
pop
push
xor
xchg
scas
pop
fstpt
je
jnp
mov
sti
mov
jnp
push
in
adc
insb
mov
and
inc
loopne
jb
add
out
daa
fistpll
movsb
shll
mov
jl
data16
lea
and
out
inc
add
clc
xor
pop
jae
nop
push
jecxz
dec
sbb
push
xor
jmp
mov
xchg
out
dec
iret
jl
or
jne
dec
pusha
add
or
add
cltd
outsl
rclb
push
lret
enter
jae
cwtl
jecxz
pop
jecxz
xor
mov
jp
mov
xchg
inc
sub
pushf
pop
or
mov
xchg
addr16
push
push
or
or
daa
gs
adc
rcrb
pop
push
mov
cmp
push
mov
xchg
das
jns
loopne
scas
sarl
mov
notb
push
pushaw
lock
pop
push
in
cltd
add
inc
jno
dec
imul
fiaddl
and
sub
and
push
adc
clc
lret
pop
test
mov
popa
push
inc
pop
hlt
inc
push
lcall
and
jle
push
dec
adc
sar
sub
pop
dec
dec
jo
cmpsb
xchg
jbe
push
ret
xchg
pop
xchg
addr16
push
xchg
sbb
adc
test
sub
mov
and
jmp
sub
ljmp
xchg
fwait
add
and
aas
das
mov
mov
addr16
add
into
and
stos
roll
daa
jno
aas
test
dec
scas
mov
ret
cltd
adc
lret
mov
mov
iret
xchg
xor
and
in
sahf
cmp
lods
push
shll
or
mov
and
sbb
in
arpl
fs
cmc
add
add
jno
push
repz
mov
dec
fldt
xor
lods
push
out
les
xchg
pop
jne
out
cmp
pop
out
jne
ds
jne
fwait
cmp
cmp
push
push
add
xor
ds
and
jns
lea
pushl
gs
jo
adc
mov
sti
shrb
sbb
mov
in
mov
mov
imul
stos
pop
icebp
sub
call
pop
mov
aad
xor
push
sbb
or
rorb
sub
insb
scas
cltd
or
subb
jb
inc
pop
hlt
push
xchg
jle
sbb
xchg
and
pop
dec
add
pop
enter
and
es
pop
xor
pop
adc
push
ds
sahf
mov
test
or
aam
dec
inc
xchg
les
push
push
inc
and
mov
int
adc
jo
repz
js
iret
lcall
in
or
xor
popf
aad
xchg
add
pop
enter
inc
dec
outsl
mov
repz
shll
adc
std
push
xor
push
add
jne
push
mov
jb
jg
in
enter
mov
pop
push
sarl
dec
loop
dec
mov
xchg
inc
daa
jns
jmp
in
mov
fstps
pop
shll
inc
adc
stos
je
mov
mov
pop
xchg
adc
gs
in
aas
cmp
cltd
data16
out
stc
iret
je
mov
dec
or
add
loopne
mov
adc
inc
add
lahf
mov
inc
xchg
cmpb
ss
sbb
popa
inc
test
dec
lret
add
hlt
lret
cli
mov
cmp
call
das
je
mov
fisubs
mov
pop
mov
jae
xchg
xchg
out
dec
mov
call
sbb
xor
rcl
dec
xor
cltd
xchg
sub
and
test
notl
add
hlt
fdivrl
mov
sub
xor
mov
loop
xchg
ret
and
xor
sbb
inc
je
lcall
test
push
xor
mov
test
out
push
lods
repnz
sub
fisubrs
sti
imul
cmpsb
push
mov
stos
pop
enter
std
lods
gs
xchg
pop
adc
jmp
ljmp
loop
pop
xor
sub
xchg
scas
dec
add
mov
les
and
xchg
inc
fsubs
andb
dec
dec
cmp
mov
bound
out
lock
jns
andl
rcll
xchg
shr
cld
cmovl
adc
data16
fcmovnu
std
sbb
or
xor
aas
and
xchg
ror
mov
lods
jne
inc
adc
xor
push
xchg
adc
xchg
and
sti
out
lcall
sub
jb
sub
je
cwtl
jecxz
jbe
inc
jnp
daa
stc
sub
repz
sub
lods
std
mov
jo
and
and
or
dec
les
and
nop
lock
sbb
adc
inc
sub
scas
sub
xchg
inc
cltd
cmp
fs
daa
loop
mov
and
and
iret
sub
popf
mov
je
shl
add
lret
ljmp
gs
mov
scas
je
aas
jns
lcall
and
loope
test
clc
out
pop
ret
cmp
nop
aad
inc
in
fldt
mov
sub
or
outsb
pop
popf
lret
das
jp
jecxz
out
movsl
cwtl
pop
cmp
rcrb
jo
lret
lds
lret
jne
mov
in
xchg
sbb
adc
inc
mov
add
negl
out
test
inc
add
hlt
and
test
jae
xor
jmp
pushf
add
sub
pop
inc
fwait
decl
stos
lds
mov
gs
dec
pop
mov
pop
xchg
pop
inc
fnsave
mov
mov
out
fnsave
mov
mov
fnstsw
jno
jmp
aaa
shlb
cmp
mov
mov
mov
fstpl
mov
or
in
test
sbb
sbb
xchg
cld
dec
xchg
mov
inc
cmp
or
das
pop
and
shlb
clc
adc
loop
or
mov
into
loop
lahf
mov
into
imul
pop
inc
or
dec
push
insl
int3
xor
or
call
mov
das
ds
mov
pop
fs
xchg
test
fadd
mov
xchg
pushf
jp
in
mov
popf
in
xchg
push
ja
nop
insl
in
pop
les
xor
adc
repnz
mov
xor
xor
dec
cmp
les
ret
ja
imulb
jnp
jecxz
dec
lahf
pop
hlt
aas
shll
lahf
movsb
pop
push
jge
fisubrs
jge
jnp
das
sarb
pop
fldl
loop
cli
popa
mov
decl
sub
daa
inc
or
leave
push
mov
fs
dec
add
pop
out
mov
xchg
popa
leave
adc
jnp
lock
push
insl
sarb
and
or
insb
xchg
gs
xlat
mov
or
xchg
jle
push
mov
xchg
loopne
leave
mov
sub
sbb
xor
in
xchg
fld
cmc
jmp
cmp
in
add
add
or
jb
fwait
pop
stc
xchg
je
mov
loope
scas
lret
cmpsb
xchg
xchg
dec
arpl
repz
int
out
dec
and
arpl
or
ficomps
inc
mov
cmp
cmp
jno
pop
and
mov
fucom
mov
jno,pn
push
mov
int3
hlt
cmp
rclb
lcall
add
sub
clc
cmpsl
and
xchg
cmp
cmp
pop
dec
add
xor
inc
sbb
fiadds
xlat
inc
xor
into
fdivrs
outsl
mov
mov
cwtl
dec
iret
dec
inc
into
repnz
jb
or
mov
or
push
push
inc
fs
mov
cwtl
push
mov
pop
mov
mov
push
xor
jnp
cli
fisubs
cmpl
data16
daa
add
pushf
jns
pop
cmp
iret
inc
cwtl
fldt
vdivps
and
xlat
adc
cmp
xor
das
pop
adc
jmp
arpl
sub
jnp
test
in
call
ret
aaa
inc
ret
jge
shll
ss
roll
dec
dec
cmc
jb
mov
das
mov
push
jl
outsb
je
mov
ja
fbstp
imul
mov
mov
adc
out
sub
jb
cmp
dec
or
sbb
ret
jle
leave
jle
test
jg
hlt
ss
fs
lds
imul
push
or
std
sub
cld
sbb
cmc
sbb
add
and
inc
xchg
test
int
xorb
pop
jmp
dec
es
xor
fiaddl
push
aam
shrl
add
lea
dec
push
aad
xlat
push
mov
pusha
cmp
mov
push
arpl
je
pop
loope
dec
adc
xchg
sbb
aam
jns
scas
xlat
cmp
xchg
xchg
inc
or
mov
in
test
hlt
xor
adc
mov
cli
adc
push
jg
aam
out
pop
fs
xchg
jb
adc
inc
shlb
sub
ja
in
inc
out
jno
in
lret
cmp
in
adcl
pop
adc
fdivl
and
ret
testl
mov
jmp
dec
add
scas
and
data16
sub
pop
or
dec
mov
sbb
or
and
sbb
or
dec
rcr
ja
pop
int
sar
xchg
lods
push
jp
daa
inc
arpl
out
add
mov
les
dec
mov
fildl
mov
loopne
cwtl
clc
adc
sub
repz
dec
aas
fidivrs
pop
mov
imul
sub
bound
dec
or
popa
sub
pusha
clc
rep
sbb
call
ret
xchg
inc
std
jecxz
shrl
cmpsb
fwait
push
popf
cli
mov
mov
jns
mov
add
push
test
in
mov
divl
or
lcall
fwait
xor
loopne
in
scas
stos
mov
mov
aas
mov
leave
xor
mov
shlb
mov
divb
int3
out
jp
arpl
xchg
imul
add
sbbb
cmc
jb
add
outsb
test
pop
mov
jnp
rclb
mov
xchg
mov
mov
aas
iret
rorb
les
mov
pop
inc
mov
sarl
xchg
mov
add
fisttpll
xlat
inc
popf
mov
push
loope
xlat
xor
into
in
jmp
mov
sbb
cmp
dec
rcrl
dec
icebp
pop
sbb
push
dec
das
fs
out
movups
ret
or
inc
inc
xchg
push
jg
fptan
nop
sub
jno
pop
inc
push
push
pushf
cmp
out
mov
std
insb
push
or
jp
imul
das
rorl
rcrl
xchg
mov
jg
push
incl
pop
jmp
or
std
insb
pop
add
lret
xchg
add
lcall
add
or
es
inc
mov
outsl
lds
push
xchg
xor
cmp
pop
loope,pt
mov
dec
repnz
lahf
sub
or
in
repnz
out
cmpsb
daa
es
cli
imul
jo
mov
outsl
push
lret
sti
push
mov
clc
sub
pop
sub
mov
or
xchg
or
fcomps
arpl
jg
adc
sti
roll
outsl
movsb
subb
cmp
or
pop
dec
or
and
jns
rcrb
pop
mov
mov
aas
push
mov
addr16
mov
dec
push
mov
imul
sub
adc
nop
inc
xor
ret
inc
out
popa
pop
out
test
sbb
jl
sub
push
mov
imul
in
mov
loopne
sti
add
dec
fstpt
mov
jno
in
sub
sbb
mov
add
sbb
outsl
cmpsl
cmp
cli
push
push
bound
je
dec
sub
push
add
cltd
jae
xor
mov
add
and
jbe
mov
movsb
aam
mov
xorb
aas
xorl
dec
popa
lcall
mov
inc
push
inc
addb
or
push
not
stc
mov
pop
iret
mov
ret
xor
xor
cmp
cmp
mov
or
aad
int
popa
xor
sti
imul
loope
dec
sahf
sub
ss
jmp
je
in
mov
enter
xor
arpl
iret
jno
sbb
cmpsb
outsl
push
lock
jae
jnp
call
sbb
shlb
cmp
sbbb
out
push
scas
jg
test
cwtl
add
dec
test
push
clc
dec
scas
ja
push
js
xchg
in
in
dec
sbb
fsubs
xchg
sub
test
sub
dec
cli
lcall
cli
mov
pop
loopne
jnp
xor
push
repnz
cwtl
mov
cmp
jns
mov
or
jmp
test
inc
icebp
addr16
mov
and
dec
mov
roll
ljmp
dec
int
fcomps
xchg
pop
push
clc
or
stc
sub
pop
push
dec
pop
dec
lahf
and
sbb
fcompl
inc
push
imul
mov
insb
mov
or
pop
and
lret
sbb
sub
adc
stos
mov
sub
dec
imul
cltd
int3
mov
outsb
mov
jmp
push
jle
push
push
daa
push
dec
pop
ret
je
enter
and
xchg
clc
xchg
push
out
jo
out
std
repnz
dec
std
push
into
mov
jecxz
stos
sbb
mov
mov
std
lock
sub
xchg
int3
push
mov
or
icebp
mov
testb
div
dec
mov
mov
sub
fnsave
inc
outsb
inc
xor
add
adc
and
inc
int3
repnz
cwtl
xchg
mov
sbb
out
mov
mov
sbb
or
out
into
and
push
enter
lahf
js
adc
repnz
fs
mov
mov
push
push
xchg
out
movsl
adc
in
and
push
sub
and
sbbl
xchg
test
enter
xchg
inc
mov
push
xor
cmp
and
lahf
inc
or
mov
gs
xchg
lahf
mov
or
xchg
or
sbb
js
mov
loop
stos
lahf
dec
sub
push
dec
mov
lret
in
in
xor
pop
mov
and
loopne
negl
pop
mov
inc
lods
xchg
divl
adc
insl
test
shl
rcr
sti
test
sbbb
sbb
cmp
adc
dec
mov
rolb
sbb
or
lret
bound
push
push
jb
pusha
dec
sub
icebp
shrb
divl
inc
sarl
in
cmpsb
pushf
cmp
xor
lods
mov
jne
cwtl
data16
cld
xchg
and
mov
jmp
int
xor
popa
addr16
std
push
push
repz
pushf
test
pop
push
mov
es
push
fdivr
lods
dec
ret
mov
pop
cmp
dec
dec
xor
xchg
arpl
adc
mov
jns
push
stos
mov
mov
loope
mov
xchg
xor
arpl
jp
mov
adc
lds
ss
not
arpl
jae
rcrb
jle
sbb
cmpsl
pop
cmp
jbe
cmp
or
repz
nop
and
dec
lods
je
add
pusha
push
mov
add
std
lods
xor
pop
lret
divb
ret
lea
mov
push
sub
enter
jne
jle
mov
andb
rolb
or
lods
addr16
mov
jecxz
dec
push
pop
mov
int
icebp
test
xlat
mov
and
xor
imul
outsl
out
das
or
out
mov
pop
fidivrl
dec
stos
shll
add
mov
push
das
dec
or
stc
cmp
mov
and
xor
dec
leave
xor
lock
push
fbld
sub
fstpt
adc
mov
push
cli
or
pop
mov
add
sar
sbbb
push
inc
fisttps
push
dec
push
mov
sti
aad
sub
idiv
lcall
jmp
sub
out
jle
push
and
lock
mov
popf
mov
and
lds
js
adc
or
mov
pop
mov
push
push
mov
pop
rorl
or
popa
mov
fst
popa
xchg
sahf
ret
add
dec
andb
mov
or
or
mov
push
scas
pop
xchg
lret
mov
and
in
dec
ds
popa
stc
ret
lods
inc
dec
pop
pop
movsb
push
mov
mov
data16
insb
insl
push
xor
mov
jb
sbb
daa
push
jb
inc
push
and
pop
add
xchg
leave
adc
rclb
xchg
pop
imul
out
hlt
int3
cli
and
ss
pop
aas
notb
add
push
jecxz
dec
dec
adcl
std
cmp
sbb
stos
cmpsl
adc
cmp
fstps
ds
dec
std
outsb
lock
sub
testl
jns
arpl
faddl
std
or
adc
lret
imul
fldt
jecxz
dec
mov
int3
adc
hlt
and
xlat
ss
dec
ret
push
roll
add
push
pop
outsb
negb
int
ljmp
adc
cmp
xor
and
repz
adc
pop
and
xchg
ljmp
arpl
ds
add
arpl
mov
add
add
pop
stos
mov
int3
nop
jle
jmp
cmpb
js
daa
jmp
and
ret
add
stc
jecxz
jne
pop
lret
mov
mov
sbb
call
imul
lahf
push
stc
cltd
mov
sbb
icebp
outsl
sub
cmp
xor
mov
pusha
movsb
jno
pop
out
xchg
sbb
inc
stos
call
lods
xchg
mov
xor
pushf
in
add
push
mov
xchg
xor
lcall
push
and
pop
fwait
jmp
mov
inc
pop
bound
inc
pop
and
ja
xor
mov
fdivr
pop
ret
jp
add
pop
out
and
into
into
mov
sbb
push
or
inc
push
xlat
hlt
jge
jge
push
mov
pop
sbb
scas
ror
or
dec
movsl
test
js
cmpsb
hlt
push
push
xchg
ljmp
inc
orb
cmp
add
dec
pop
pop
mov
jno
je
cwtl
pop
pop
add
sbbb
or
imul
cmpsl
in
cmpl
fs
pop
adc
mov
or
in
mov
jne
add
mov
sub
push
enter
icebp
adc
int3
leave
or
sbb
loope
add
aad
sub
les
std
or
mov
jp
inc
pop
sbb
push
aad
leave
rcrb
fcoml
fwait
xchg
sub
inc
add
jno
and
ds
aam
int3
ret
fimull
or
jne
movsb
inc
adc
in
jae
repz
xlat
xor
sbb
hlt
loopne
dec
mov
jge
xchg
cltd
fidivrl
ret
jmp
insb
add
arpl
nop
in
inc
adc
js
cli
xor
xor
and
mov
fsubrl
ss
add
dec
xchg
push
out
popa
popf
imul
pusha
fcoml
aad
jne
mov
bound
xacquire
adc
mov
dec
andb
outsb
mov
lock
setae
pop
push
hlt
lods
and
sub
sbb
icebp
or
pop
out
int3
cmc
ljmp
lock
sbb
mov
repnz
orl
and
add
popa
add
or
or
in
adc
sub
rorl
inc
push
cmpsb
and
lods
sub
push
push
sbb
iret
aaa
imul
inc
jge
adc
inc
fwait
stc
test
add
daa
lcall
cmpsb
loop
cmp
in
sbb
cld
repz
push
xor
jne
inc
rcrb
pusha
push
out
mov
gs
add
inc
pop
repnz
nop
enter
jnp
loop
xor
sbb
pusha
and
dec
xor
xor
cwtl
stos
and
jnp
pop
add
fimuls
dec
add
inc
clc
stos
outsb
jo
xchg
or
mov
and
adc
insl
pushf
pusha
jae
xchg
popa
push
fs
in
jno
jns
xchg
add
icebp
jecxz
and
sub
cmc
lods
mov
sub
or
add
repz
dec
dec
add
pop
cmpsb
negb
mov
sti
leave
adc
adc
pop
mov
std
int3
or
add
cmp
cli
adc
outsb
push
movsb
test
mov
inc
das
mov
aad
jle
cli
pop
push
cmc
mov
jo
addl
popa
fcoml
pop
xor
fisubl
pop
adc
lods
rcrb
cmp
sbb
cs
pop
sub
cmp
popf
mov
pusha
sbb
adc
stos
das
adc
test
lds
dec
in
sti
out
xchg
mov
jle
dec
enter
and
xchg
jb
lret
inc
mov
jg
jecxz
sub
ja
adc
gs
jge
int
fmull
jp
dec
in
cltd
cmpsb
scas
and
mov
iret
mov
and
pop
or
lret
mov
dec
and
test
insb
or
popf
sbb
test
loopne
adc
shrb
push
dec
test
cmp
jmp
xchg
xchg
out
sbb
movsl
dec
aas
jp
cmp
daa
test
sub
leave
cmp
ss
popa
fs
popa
jl
dec
pop
mov
cmpsb
scas
daa
dec
scas
mov
mov
jae
ret
daa
cmp
int
mov
jae
adc
ror
add
lret
pusha
inc
mov
icebp
mov
sti
aas
xchg
out
addr16
xor
jge
inc
sub
pop
decl
mov
mov
or
xchg
mov
and
shrl
jg
and
or
stos
mov
shll
mov
and
xor
mov
sbb
sbb
xchg
inc
iret
jmp
leave
mov
jl
stos
xchg
sarb
flds
outsb
mov
notl
ret
je
dec
out
cmc
ret
in
ret
movsb
ficoml
incb
outsb
fstl
push
faddl
mov
outsl
mov
mov
mov
and
lods
movsl
adc
fbstp
in
mov
lods
and
adc
jp
stos
jl
fadds
dec
inc
cmp
daa
dec
js
out
mov
sahf
rorb
mov
imul
or
xchg
xlat
adc
fdivl
fists
mov
ds
stos
cltd
data16
sahf
loope
imul
icebp
pop
aam
int3
popf
fwait
jle
push
imul
rolb
scas
in
jne
and
clc
sarl
add
out
rclb
push
jne
adc
push
movl
stos
inc
jne
inc
out
arpl
mov
or
fmuls
lret
inc
jae
cs
mov
add
mov
lea
gs
repz
or
sub
icebp
int
inc
leave
mov
adc
jmp
scas
or
rcrl
and
mov
xchg
mov
dec
nop
out
mov
mov
rorl
mov
inc
pop
rorb
in
rcr
lret
adc
sub
push
and
mov
in
mov
adc
scas
in
cli
mov
out
or
mov
stos
push
subb
je
jmp
push
testl
in
repnz
fmul
sbb
jb
or
jp
fsub
dec
test
fadds
jge
cmc
mov
idivb
jae
addr16
sbb
test
mov
fs
ds
sarl
push
mov
mov
add
mov
ret
dec
fwait
and
repnz
push
and
xor
xchg
pop
loopne
out
pop
out
jb
nop
in
cmpb
shr
hlt
dec
cmp
pop
addr16
lock
jnp
xchg
pushl
jp
sbb
pusha
rclb
sub
iret
sahf
sbb
xchg
test
icebp
push
jmp
cmp
sub
daa
cmpb
mov
xchg
xor
insb
cwtl
test
shrl
iret
sub
fisttpll
xor
xchg
sub
ss
sub
adc
out
jl
loope
fs
mov
lret
sbb
enter
iret
adc
insb
jl
push
jecxz
inc
mov
loope
clts
or
mov
jmp
cmp
iret
add
dec
popa
xor
cmp
jle
fs
movsb
push
add
sub
js
sub
popa
mov
in
push
daa
fcoms
ds
or
mov
jge
in
mov
jmp
jns
add
fsubrs
sub
mov
stc
sbb
fmuls
push
cmp
push
xor
ljmp
orl
lret
mov
adc
hlt
bound
inc
daa
ljmp
pop
pushf
les
mov
add
rorl
es
pop
out
dec
rorb
ficoml
cmp
xor
dec
xchg
lret
dec
adc
fistpl
push
jbe
mov
pop
sub
and
hlt
ret
hlt
mov
push
or
aad
cld
std
adc
sbb
lret
xor
sbb
sti
sbb
xor
lahf
sbb
sahf
mov
cmp
jb
int3
or
inc
mov
xor
aam
loopne
cli
push
idivl
stos
std
ret
jb
ret
aas
push
idivl
das
bnd
cs
jno
lret
pop
sub
mov
jne
sbb
add
mov
inc
icebp
outsl
arpl
add
loop
scas
and
jecxz
daa
in
repnz
jo
out
jg
pop
adc
movsl
js
xchg
popf
pop
and
js
test
jl
ss
adc
xchg
jg
fwait
mov
sub
adc
jecxz
lret
fnsave
dec
jne
cld
push
jg
jb
and
aad
inc
cli
xchg
les
lods
pop
arpl
add
cmp
mov
push
mov
pushf
mov
scas
dec
shl
xchg
inc
bound
mov
xchg
dec
xor
aas
ror
sub
in
lcall
ds
push
mov
cltd
pop
ljmp
sub
daa
lret
or
xchg
xor
int
gs
insb
xor
mov
bound
pop
jmp
fwait
pop
jg
push
push
push
stos
mov
sbb
push
imul
pop
outsb
mov
aad
pop
pop
sub
mov
out
jnp
cmpsl
mov
pop
stos
jnp
cmp
pop
imul
mov
xchg
lcall
test
push
iret
out
fcmovb
lds
add
andb
cmp
lcall
andb
test
in
cltd
push
flds
mov
pop
adc
aam
dec
leave
nop
ss
mov
xchg
and
push
aad
and
add
pop
mov
dec
xor
pop
pop
sub
subb
xchg
sahf
jle
sti
cmp
mov
cmpsl
pushf
mov
rolb
test
cmp
hlt
mov
adc
ljmp
fstpt
push
pushf
mov
jecxz
stc
add
scas
aam
outsl
repnz
mov
or
add
pop
mov
sub
xchg
cmp
sub
lret
push
loope
es
fldenv
jnp
data16
pop
insl
mov
mov
incl
mov
mov
xor
mov
and
cmp
sub
mov
adc
adc
enter
mov
xchg
add
enter
adc
stos
ja
push
nop
pop
iret
xchg
rorl
mov
test
dec
push
arpl
sbb
xchg
sub
jbe
cltd
mov
sbb
into
adc
in
fisubrs
or
stos
lods
push
ficoml
repz
aad
add
in
inc
push
cmpsb
mov
jp
cld
push
mov
inc
push
rol
movsl
out
mov
adc
dec
pop
fs
xor
mov
dec
loopne,pn
mov
test
js
int
aaa
arpl
push
xor
sbbb
mov
lock
jp
xlat
or
out
insb
cwtl
push
aaa
mov
cli
pop
ret
arpl
xchg
mov
mov
sbb
jp
lock
pop
add
add
cld
mov
cmp
or
or
lcall
sbb
ljmp
outsb
pop
ss
sub
xchg
dec
jl
lcall
jp
loope
fdiv
xlat
mov
clc
cld
in
mov
and
rcl
push
jb
fldt
xchg
add
and
mov
sbb
outsb
jae,pt
mov
fimull
jmp
push
add
and
mov
pop
and
bound
pop
sbb
call
sub
repnz
in
mov
mov
cmpsb
or
js
lds
lret
aaa
clc
lahf
cmpsl
lret
cli
sbb
mov
int
xchg
dec
mov
push
aas
dec
test
rclb
jg
pop
int
xchg
jns
and
xor
mov
xor
fucomi
fisttpll
mov
dec
mov
lea
xlat
shr
adc
faddl
cli
jbe
xchg
mov
int
cwtl
arpl
fdivl
out
cmove
mov
mov
outsl
mov
shll
orl
cmp
jecxz
add
lock
push
aad
test
ja
mov
movsb
stc
xchg
jno
lock
fwait
inc
fld
out
pop
mov
dec
sub
mov
push
xchg
rolb
into
in
mov
stc
daa
addl
ret
push
pop
sbb
cmp
mov
inc
js
cmp
jp
jnp
bound
in
dec
jno
incl
fstps
dec
andl
pop
add
adc
ss
or
mov
movsl
cmp
insb
sub
rcrb
cld
outsb
xchg
aas
pop
aad
fwait
stos
rorl
ja
xchg
dec
cltd
scas
xchg
push
and
and
arpl
jae
shld
dec
in
pop
dec
mov
sbb
rcr
mov
adcb
inc
mov
push
out
mov
adc
mov
lcall
cmpsb
in
and
cli
ljmp
data16
data16
cmp
lahf
out
das
mov
rcll
pop
inc
repnz
jbe
cltd
jb
jne
sub
mov
inc
and
pop
inc
push
xchg
shrl
lods
in
dec
inc
sub
jo
push
mov
cmp
cmc
je
mov
in
or
jo
lods
dec
sbb
xchg
cmpsl
or
sub
sbb
stos
add
faddl
stc
cmp
cwtl
adc
adc
adc
mov
push
icebp
insl
or
sti
sub
adc
fcomp
mov
cltd
jecxz
mov
sbb
pop
or
mov
jbe
add
fdivrl
add
jecxz
push
lret
aad
cmpsl
mov
adc
sbb
sub
test
aad
in
push
test
mov
push
jnp
pushf
xor
daa
roll
mov
fcmovnbe
pop
inc
lea
and
and
cs
add
dec
ds
pop
mov
shlb
test
mov
pop
dec
scas
test
lods
leave
aam
inc
xchg
popf
or
inc
jmp
data16
pop
cli
sub
outsb
dec
mov
xchg
sahf
sub
in
lcall
push
fldcw
ljmp
iret
shlb
cmp
ret
inc
xor
scas
pusha
push
sub
mov
jmp
push
xor
sbb
jo
lahf
jl
pop
out
push
cs
loopne
insl
sbb
xchg
aaa
bound
bound
repnz
repz
outsl
mov
pop
xchg
xorb
cmp
mov
or
dec
mov
xor
push
stos
popf
pop
fldenv
mov
jno
pop
scas
inc
jns
jne
xor
dec
xchg
xor
daa
ret
imul
das
and
cmc
cmp
mov
scas
popa
lahf
dec
shl
sub
loop
lret
ret
sub
sub
addb
push
test
xchg
push
sub
loop
aaa
into
cmp
cmp
mov
mov
inc
inc
insl
js
sbb
int
sbb
push
jg
adc
insl
call
movsb
repz
fdivrp
mov
dec
jo
and
shl
and
xor
add
or
andb
cltd
mov
and
jno
adc
ds
lds
pop
jne
mov
inc
out
mov
adc
int3
mov
cmp
imul
push
stos
adc
outsb
cmpsl
xchg
dec
sub
lea
xchg
inc
cmpsl
ret
ret
aaa
sti
jl
dec
adc
jne
mov
push
loope
adc
gs
mov
push
pop
arpl
data16
sub
pop
cmpsl
out
add
xchg
divb
sbb
es
loopne
rorl
push
roll
jl
stos
mov
sbb
mov
decb
outsl
pop
adc
xchg
mov
aad
fisubl
sbb
or
nop
pop
insl
pop
cmpsb
les
lcall
inc
cmp
dec
adc
xor
scas
scas
aas
add
lods
xor
inc
incb
fadds
pop
cmp
inc
dec
pop
aad
icebp
cltd
pusha
lds
lods
jb
and
mov
arpl
lea
cmpsb
adc
push
jg
dec
dec
pop
rclb
hlt
andb
mov
and
and
cmp
test
jb
iret
fdiv
mov
hlt
call
xchg
xor
ds
or
sub
les
adc
pop
mov
xchg
mov
roll
lret
mov
push
pop
adc
and
aas
xchg
loopne
imulb
sub
lret
out
and
gs
test
lods
or
insb
je
stos
es
rorb
imul
pop
lods
add
and
cmp
mov
jno
mov
psubsb
dec
testb
mov
add
fcomps
lahf
jl
jbe
pop
lods
test
pop
cmp
jmp
and
pushf
popa
jmp
jns
ljmp
dec
push
fstpl
stc
mov
iret
jns
push
sub
iret
aam
rolb
pop
loope
sbb
push
stos
dec
adc
push
fnsave
pop
cmp
outsb
ret
xchg
dec
push
mov
loope
aaa
fmull
test
add
push
js
sub
fwait
push
mov
xor
or
fidivrs
mov
or
mov
xchg
scas
add
fnstsw
dec
pop
jno
out
and
mov
mov
test
jo
inc
test
ja
xorl
popa
push
shlb
sub
xlat
lahf
xchg
push
shrl
fwait
jl
xorl
mov
cmp
js
inc
das
sti
sbb
hlt
push
subb
mov
and
aam
ret
xchg
jl
int3
dec
adcl
sbb
mov
xchg
jg
sub
or
dec
mov
xlat
adc
inc
and
jns
pop
fcoms
fldcw
mov
sbb
push
shlb
imul
or
hlt
sbb
jns
push
lock
cmpsl
cmpsl
inc
int
iret
cmp
or
mov
cmp
cs
xor
cmpl
cmp
push
and
and
lods
mov
fldl
mov
cmp
repnz
or
iret
sbb
mov
xor
jecxz
adc
out
nop
mov
adc
std
and
lods
jns
sti
lahf
lret
gs
stos
sub
outsb
jb
lods
negb
pop
add
cmp
aad
into
mov
lds
xor
adc
push
lcall
bound
jb
sbbb
jae
pusha
sbb
cmp
adc
lcall
sub
fdivrl
add
test
lcall
jnp
sub
and
sub
push
xor
mov
rcl
add
lea
ud0
std
cmpsb
or
sbb
pop
lock
pop
push
dec
push
lds
loopne
ljmp
popf
pop
jne
cs
lret
push
mov
cmpsb
mov
rorb
ret
ss
jp
or
add
mov
and
xor
sahf
aaa
sub
sti
bound
les
scas
punpcklwd
jmp
xchg
pand
xchg
insb
push
scas
int3
dec
rolb
xor
hlt
lret
outsb
dec
mov
int
inc
gs
test
pop
or
out
cmpsl
pop
push
loop
adc
jns
adc
jge
xor
jecxz
jns
push
out
out
aad
mov
adc
mov
in
pop
push
mov
mov
jo
rcl
psrad
lock
or
icebp
iret
adc
add
or
mov
je
leave
aam
pop
imul
mov
stc
jge
fistps
leave
mov
push
out
outsl
pop
aas
sar
std
dec
pop
adc
or
ret
and
dec
std
bound
pop
std
cmp
sbb
and
test
loopne
push
iret
xor
notb
mov
and
outsl
fistpl
popf
int
push
adc
cmc
test
sbb
jmp
icebp
mov
ret
out
pop
lds
pop
fwait
shll
push
pop
inc
lods
mov
pusha
xchg
loope
sbb
fiaddl
sbb
xor
inc
cmp
pushl
ficoml
leave
mov
lods
mov
mov
or
xor
aad
cmp
cmp
icebp
les
fs
xlat
scas
pop
mov
mov
pusha
jp
out
or
pop
push
dec
lahf
lahf
cmc
movsl
adc
xor
xchg
jge
add
push
sahf
pop
sub
add
insl
scas
inc
fwait
lea
mov
inc
jg
or
outsb
rcrl
mov
dec
cwtl
xor
outsb
outsb
sub
addl
push
push
cmp
pop
and
fildll
lods
pop
add
sbb
mov
mov
jns
xchg
xchg
scas
rcrb
mov
or
call
ret
cmp
sbb
sbb
xchg
arpl
mov
mov
fs
into
push
mov
dec
jne
adc
mov
nop
test
mov
and
lret
loop
ljmp
xchg
pop
jl
aam
or
imulb
jl
fisttpl
rcll
and
dec
fs
rcr
adc
shr
fstps
loope
movsb
pop
mov
jmp
cmp
clc
adc
and
jl
scas
add
sbb
mov
sbb
cmp
fimull
cmp
dec
loope
mov
or
aaa
mov
adc
xor
into
int3
popf
pop
inc
jne
dec
scas
ret
out
popa
xchg
sub
jecxz
mov
dec
or
push
scas
xor
inc
dec
hlt
arpl
repz
xor
mov
xacquire
enter
jmp
mov
dec
mov
cmp
dec
popa
in
cmp
and
das
mov
mov
js
push
lea
enter
int
push
or
mov
pusha
fdecstp
mov
cs
fiadds
mov
inc
in
adc
pop
lahf
sbb
add
xchg
insb
jbe
jecxz
dec
sbb
in
cmpsl
xchg
mov
dec
stos
ds
jl
cmp
leave
lret
fwait
shrl
movsl
cld
fnstcw
push
dec
xor
push
jne
pop
jle
jecxz
pusha
bound
outsb
scas
js
mov
insb
aad
mov
movsl
xor
icebp
dec
and
mov
popa
push
lock
daa
mov
test
sub
push
add
push
mov
popa
dec
push
pop
adc
mov
lock
enter
mov
cltd
inc
mov
aad
dec
pop
inc
testb
push
je
add
push
notl
xor
pop
inc
add
shlb
xchg
dec
sbb
mov
and
lods
mov
test
in
stos
pop
jo
shll
das
roll
stc
mov
movsb
std
ret
loop
push
adcl
out
fisubrl
movsl
mov
mov
shll
jnp
sub
add
pop
movsb
out
adc
repnz
call
fldl
fistpll
push
adc
cmpl
and
mov
adc
xor
mov
out
push
bound
and
stos
cmp
movsb
add
daa
jp
iret
pop
mov
mov
cmp
and
add
aas
out
in
jecxz
das
mov
loope
cli
fwait
mov
mov
jmp
add
push
scas
ror
mov
sbb
call
jns
pop
mov
cmp
jbe
xchg
mov
push
lcall
mov
icebp
aam
sti
xchg
dec
dec
sub
push
inc
sar
mov
or
dec
sahf
lea
aam
pop
xchg
inc
sub
mov
ljmp
or
mov
jmp
cmp
add
adc
push
test
xor
call
jbe
ja
push
cs
pusha
decb
jecxz
xchg
in
sahf
sbb
fnstcw
mov
inc
xchg
mov
arpl
or
lret
lods
mov
ficoml
jecxz
or
sub
arpl
scas
dec
fimuls
and
lea
mov
dec
push
out
mov
or
add
rorl
or
das
in
in
das
lcall
test
int3
repz
xor
aam
in
push
pop
cltd
sbb
jg
call
lea
pop
push
push
inc
sti
xor
lahf
leave
and
sbb
insb
pop
or
push
xchg
scas
sub
xchg
out
cmp
cs
movsl
lock
test
gs
andl
jge
or
or
in
jmp
push
jno
jmp
movsl
pop
pop
ret
jae,pn
inc
push
testl
fcmove
pop
mov
popa
and
inc
enter
dec
test
pop
inc
jge
scas
mov
sub
pop
stos
mov
and
pop
lea
lcall
xchg
pop
mov
psrad
xchg
or
mov
xor
push
lret
enter
push
das
dec
scas
int3
inc
loope
mov
aam
lock
jns
jle
push
stos
das
or
fbstp
and
add
out
pusha
jnp
push
sbb
add
add
adc
jle
outsb
loope
int
rolb
xchg
cltd
cmc
sub
popf
lret
call
shl
outsb
cmp
pop
leave
mov
roll
loope
xorl
loopne
testb
or
mov
scas
mull
add
push
fbstp
in
dec
das
loopne
daa
or
mov
xchg
xchg
cmc
push
lret
adc
fwait
imul
push
mov
push
imul
das
sub
mov
repz
or
xor
jae
mov
mov
lods
and
lahf
jmp
pop
ja
call
hlt
in
mov
pop
push
lods
in
test
xor
push
aad
cmc
andl
mov
and
aam
imul
pushf
pop
leave
mov
mov
std
pushf
sar
stos
mov
lods
popa
push
jl
loopne
jecxz
loop
push
xor
mov
movsl
cmp
xorb
pushf
mov
arpl
test
jmp
loop
loopne
fisubl
fdivl
aaa
dec
pop
adc
movsb
insb
or
mov
fisttpl
dec
iret
mov
je
add
insl
outsb
cmpb
mov
cmp
sbb
and
icebp
shlb
mov
inc
lcall
mov
stos
std
dec
xor
je
loop
push
adc
push
andb
xor
loop
pop
and
inc
mov
adc
test
outsb
imul
fcompl
lahf
and
or
or
pop
jae
dec
fmuls
fistpll
ficomps
int3
mov
loop
cmpl
sub
mov
mov
sub
jp
add
arpl
mov
adc
jnp
or
enter
cmpsb
lods
pop
xchg
push
mov
mov
outsb
mov
addr16
xchg
scas
xor
inc
jo
sarb
mov
add
clc
lahf
xor
ret
daa
std
arpl
cltd
out
xor
mov
outsl
fisttpl
push
pop
dec
fidivrs
jmp
in
pop
ss
jns
pop
cltd
fcmovbe
mov
mov
xchg
push
loop
popw
lods
mov
cmp
lea
das
pop
ret
adc
pop
addr16
imul
inc
jecxz
rcl
imul
loopne
cmp
lods
dec
mov
mov
and
outsb
repz
cmp
dec
adc
cwtl
inc
sub
cmp
or
xchg
mov
mov
and
add
sub
inc
sti
out
and
loope
push
adc
sub
xchg
icebp
jl
ret
lods
imul
fdivl
mov
xchg
sbb
lods
aas
xchg
or
dec
jne
in
sub
xlat
imul
cmp
in
sbb
cmp
pop
push
xor
pop
sub
roll
es
jg
fmull
xor
repz
cmp
iret
fimull
pop
roll
das
rorb
lds
dec
into
push
or
shl
data16
fmul
inc
test
xor
fmulp
jnp
pop
loopne
data16
inc
add
sub
mov
xchg
orl
xor
psubw
mov
sarl
nop
sub
pop
mov
rcl
das
loop
adc
subl
fsubl
sbb
fcomps
or
sub
les
add
adc
data16
fstl
cmpsl
cli
ret
nop
mull
rol
in
sti
and
clc
hlt
sbb
loopne
shll
icebp
call
pushf
aad
int
into
or
sarl
repnz
adc
rclb
enter
lret
adc
std
shrl
pushf
arpl
in
mov
jmp
out
fwait
xchg
leave
inc
pop
push
pop
movsl
stc
dec
std
sub
jns
aad
sub
sti
mov
mov
pop
xchg
inc
jae
inc
sbb
insb
ret
mov
sbb
cli
cwtl
inc
arpl
das
or
lock
adc
scas
mov
xor
mov
in
shr
mov
xor
jae
xchg
mov
addr16
jae
xor
sbb
xchg
fiaddl
outsb
out
ja
dec
lock
mov
dec
pop
pop
sbb
cltd
pop
xchg
fcomi
push
daa
in
xor
movsb
inc
enter
ror
addb
cli
push
jbe
add
jae
leave
adc
dec
es
fldenv
mov
sub
repz
int
in
icebp
cmpsl
add
fsub
jns
test
sbb
xchg
xor
add
lds
dec
dec
jecxz
push
arpl
movzbl
xchg
imul
adc
sti
lea
xchg
adc
jmp
mov
cmp
xorb
mov
dec
out
test
push
aam
aam
xchg
adc
dec
or
push
pop
es
jne
popa
adc
lods
cmp
stc
mul
stos
lock
decb
pop
fisubrl
mov
test
rolb
fildll
sbb
push
int3
or
mov
lcall
and
or
push
add
mov
test
or
add
movsl
and
inc
je
and
adc
dec
aam
push
fistpll
push
adc
inc
jmp
daa
shll
pop
lret
or
scas
jne
scas
cmp
rol
xchg
shl
fs
jecxz
popa
rcrb
and
ljmp
subb
aad
and
xchg
scas
pop
ret
adc
fisttpl
sbb
jg
loop
les
cmp
es
xchg
sub
cmp
cmpsl
je
lock
stos
mov
dec
or
test
popf
mov
out
push
sub
out
sub
cs
dec
push
mov
loop
clc
cld
in
ljmp
mov
add
sub
mov
lock
test
decb
xchg
cli
out
cmp
cmp
or
inc
xchg
fwait
and
add
adc
jle
inc
leave
jl,pt
adc
sti
lock
mov
nop
jl
jne
divl
pop
test
jecxz
add
cltd
xchg
ss
xchg
movsb
aaa
rcl
pop
mov
cmp
adc
inc
pop
mov
dec
sahf
inc
shlb
and
xchg
lds
movsl
cmp
inc
pop
mov
or
dec
inc
fnop
popa
push
jns
lods
xlat
push
ficompl
arpl
sbb
mov
arpl
int3
incl
and
add
mov
jns
test
mov
leave
test
add
mov
aas
and
push
repnz
adc
decl
jle
in
sub
push
fstl
cmp
dec
pop
jo
or
xor
pop
pop
cltd
pusha
negl
sarl
xchg
xchg
push
ret
nop
cmc
es
dec
sub
int3
lock
dec
rol
sbbb
mov
popa
mov
add
lcall
in
ss
aad
pop
mov
ud0
andl
sub
mov
push
jecxz
in
mov
mov
dec
stc
cmc
lret
das
es
les
repz
jbe
popa
sahf
pop
addl
xchg
xchg
jle
test
out
jge
dec
lcall
bound
icebp
push
xchg
xchg
push
lea
xor
xchg
sub
testl
jno
cmc
sbb
and
scas
fcomps
fnstcw
shr
mov
lock
dec
int3
fadd
je
lds
push
shl
lea
fs
stc
dec
jno
ret
js
mov
xchg
arpl
or
gs
xchg
nop
fiaddl
aam
adc
mov
push
fbstp
sbb
jae
clc
mov
fistl
imul
mov
in
sub
adc
loop
test
adc
out
add
push
xchg
popa
fistps
xchg
clc
adcl
adc
scas
push
hlt
add
in
adc
repnz
pop
leave
out
jne
cwtl
hlt
mov
xor
cli
sti
and
xor
cmp
sbb
xchg
mov
and
dec
fs
pop
jecxz
xchg
lret
push
stos
aam
mov
fcoml
mov
std
add
cld
gs
fs
dec
or
jge
or
cs
jl
outsl
shlb
mov
push
jp
xor
fnstcw
sahf
cmp
rcr
jmp
ljmp
sbb
rcrl
pop
xor
adc
scas
inc
icebp
and
pop
push
cmp
push
sbb
or
adc
or
repz
adc
mov
shll
mov
xor
mov
cmp
int
pusha
sub
cmpsb
inc
sti
mov
daa
scas
push
and
fisubl
sbb
or
pop
add
or
sub
dec
adc
mov
mov
and
xor
out
insl
call
nop
add
js
mov
stos
cmc
lods
lods
push
pop
xorb
insl
xchg
add
jnp
mov
cld
mov
ds
addb
nop
push
mov
inc
jmp
outsl
ret
in
dec
shr
cmp
mov
push
les
bnd
aam
test
lret
xchg
jo
dec
xor
test
ret
or
mov
and
sub
nop
out
pop
mov
cmc
mov
jbe
lods
je
jnp
mov
int3
cmp
and
mov
sbb
sarb
stos
pop
cmp
mov
cmp
inc
pop
ds
pop
cmp
cs
ret
xchg
out
mov
dec
fidivs
aam
or
jg
lret
out
cmp
add
dec
int
scas
mov
in
ds
mov
push
push
pop
xor
xor
xlat
test
xchg
and
xchg
push
movsl
in
insl
fwait
subb
arpl
in
outsl
push
repz
pop
or
adc
mov
aad
adc
mov
clc
fmuls
mov
xor
push
iret
xchg
int3
sbb
sbb
mov
inc
inc
dec
jae
mov
mov
dec
leave
or
sti
out
out
popa
out
out
fcom
push
ja
mov
lret
add
movd
adc
sub
mov
popa
push
sbb
inc
lcall
inc
nop
pop
ds
mov
adc
cwtl
sbb
jnp
rorb
nop
xchg
sbb
icebp
sahf
mov
cmp
nop
cmp
jmp
inc
sub
bnd
in
pop
rclb
push
add
sbb
orb
dec
je
mov
nop
daa
out
or
shrl
xlat
sahf
jno
ret
cwtl
jmp
adc
lods
sub
jbe,pt
dec
inc
fwait
jg
ud0
pop
loope
and
push
psubusw
add
sub
imul
jp
inc
fists
popf
push
or
dec
add
inc
pop
pop
nop
jne
xor
pop
hlt
pop
sub
lret
int
push
ret
aas
sub
cmp
inc
inc
pop
inc
pop
xor
adc
es
mov
aaa
imul
aas
sbb
out
inc
mov
and
cmp
xor
repnz
adc
dec
mov
mov
sbb
jns
dec
xor
sbb
lret
sub
pusha
jecxz
jo
inc
mov
shrb
aaa
or
cld
cmp
adcb
in
add
insb
cltd
jno
sub
add
mov
sub
pop
ds
repnz
and
jo
xchg
push
mov
and
mov
in
lea
pop
hlt
sbb
and
into
jo
or
mov
out
sub
cmpsl
mov
in
push
movsb
in
jnp
cmpsl
xor
iret
lock
pop
push
pop
insb
je
daa
out
add
jns
out
or
imul
sbb
adc
mov
std
mov
sub
daa
sub
aad
daa
cmp
mov
mov
psrad
ror
mov
test
dec
add
or
fildl
loop
pop
lret
cmpsb
mov
sbb
and
mov
sub
popa
push
pop
pop
cmp
in
insb
imul
pop
jge
mov
sub
jmp
dec
arpl
shrb
push
add
fbld
sbb
mov
mov
ljmp
inc
inc
shlb
and
sub
sbb
outsb
jnp
inc
test
push
out
sub
out
jg
aas
out
inc
gs
lods
in
jne
push
sbbl
cmp
notl
mov
pusha
loop
out
xchg
outsb
lahf
push
sti
xchg
lea
ds
push
cli
cli
cmpsb
inc
call
push
std
jnp
pop
arpl
fcomi
mov
push
mov
mov
cwtl
ret
cmp
push
add
push
pop
sahf
loope
inc
jge
adc
ret
es
fwait
xor
xchg
push
cli
into
and
scas
push
xlat
and
pop
dec
loop
leave
roll
rcrb
mov
into
into
pop
lcall
out
add
and
push
push
mov
jmp
push
ss
lret
in
sbb
sbb
mov
negb
rorb
jmp
int
push
rorl
into
ret
mov
and
or
pushf
mov
popa
add
xor
ret
add
notb
les
movb
dec
sbb
cld
pusha
mov
sub
mov
jbe
je
add
lcall
push
movsl
adc
mov
xchg
test
mov
mov
stc
ja
cltd
adc
cltd
lods
and
push
lds
ss
xor
icebp
stos
push
and
cmp
push
mov
scas
loope
pop
test
idivb
int3
pop
xchg
stos
mov
mov
or
push
and
cmp
js
mov
mov
adc
xor
xchg
cmp
ret
add
add
pop
sbbb
cltd
mov
xor
cmc
add
int3
loop
jmp
jb
scas
push
add
ss
jle
cmp
pop
aad
lock
cmp
lret
pop
fdivrs
jp
pop
sahf
push
inc
dec
mov
in
pop
push
outsb
clc
mov
jmp
and
sbb
or
ficoml
inc
cmpsl
cmp
sbb
pop
mov
or
aam
or
lahf
add
cld
add
jns
dec
add
test
pop
cwtl
add
xchg
imul
jl
shr
imul
stc
sbb
or
iret
sbb
stos
and
cwtl
sub
dec
jne
aas
daa
icebp
mov
sarl
nop
mov
andl
imul
mov
jl
or
xor
shlb
jle
in
fbstp
cmpsl
xorb
jg
dec
fs
test
aam
cmp
in
xlat
mov
leave
or
mov
jbe
jmp
mov
and
aas
outsl
sub
mov
inc
addr16
ljmp
cmp
sbb
dec
enter
in
jmp
push
mov
inc
aaa
ror
cmp
cmp
mov
inc
outsb
cli
test
das
xlat
enter
pop
loopew
cmpsl
insb
mov
mov
or
aaa
mov
inc
cmp
dec
aas
les
push
in
inc
pop
aaa
fidivrs
sbb
inc
in
clc
xor
sbb
lea
fnstcw
outsb
lret
jae
lds
hlt
imul
mov
sub
cmp
outsl
inc
cltd
inc
movsb
push
xor
gs
mov
bnd
mov
call
xlat
iret
mov
daa
stc
sub
mov
push
push
jle
mov
mov
not
xor
iret
outsl
pand
bound
sbb
mov
mov
fistps
xor
repnz
lock
inc
sbb
mov
dec
jno
mov
pushw
addr16
and
sbb
lcall
cld
xchg
testl
adc
pop
xchg
dec
je
xadd
scas
push
dec
xor
lcall
pop
loope
xchg
shll
or
in
add
inc
or
outsb
fsubrp
cmp
or
adc
add
out
inc
rorl
fsub
pusha
and
aas
lds
or
xor
pop
jo
mov
bndstx
aad
xor
push
ss
mov
enter
sbb
movsl
jbe
lahf
dec
addr16
test
repnz
imul
pop
xchg
add
ja
or
out
pop
adc
sbb
push
cmp
aas
andb
std
mov
sbb
dec
fsubr
testl
out
divb
xchg
or
insl
or
popa
add
jmp
jp
xor
sub
lods
cmp
cmpsl
sbb
mov
mov
repz
loopne
jae
sar
pop
fisubs
lea
scas
movsl
lret
xor
ds
sbb
push
dec
repz
mov
xchg
mov
adc
rep
sbb
jmp
push
shll
clc
inc
out
mov
iret
mov
jle
mov
xor
jle
ret
sub
shrl
cltd
enter
sbb
out
mov
fs
and
aaa
adc
xchg
cwtl
jge
or
dec
add
sbb
xchg
das
xchg
mov
inc
in
shll
sub
and
push
and
jmp
test
xchg
adc
sub
push
rcll
cmc
test
shll
jne
push
xchg
adc
cltd
sbb
mov
push
or
push
and
sub
in
mov
push
pop
and
int
add
repnz
mov
mov
ds
shll
scas
mov
push
mov
sbb
xchg
push
mov
mov
sub
lret
scas
repnz
adc
fs
or
addr16
mov
push
and
sbb
or
test
ss
mov
cmp
stc
push
adc
add
mov
sbb
inc
hlt
pop
xchg
into
cld
shlb
or
repnz
sar
push
stos
lahf
dec
sahf
ljmp
call
das
push
dec
out
xchg
pop
pusha
insb
cmc
gs
out
popf
sti
and
pop
loope
lea
out
sub
outsl
or
or
dec
dec
scas
icebp
sbb
pop
insb
cmpsb
sbb
test
push
inc
icebp
inc
pop
movsb
mov
mov
xor
mov
jp
cltd
cmp
fdivp
adc
inc
push
mov
icebp
and
add
xor
add
lea
bswap
jno
xlat
aam
cmc
cmp
jg
mov
jo
repz
pop
int
xor
lods
ret
dec
push
add
inc
xabort
mov
or
into
lock
lcall
push
jecxz
int
leave
data16
lahf
clc
xchg
and
cmpsb
mov
add
sbb
add
xchg
out
repnz
sbb
jb
pop
adc
sub
pop
dec
imul
xlat
mov
filds
xchg
stos
mov
pop
push
test
int3
and
rorl
aad
adc
push
mov
imul
or
std
dec
mov
push
or
stc
mov
mov
mov
sti
or
sahf
xchg
inc
push
pushf
lds
push
hlt
add
pop
int3
push
add
and
dec
popa
dec
mov
sbb
fwait
enter
das
jne
mov
or
jp
shld
sub
jmp
push
mov
pop
push
movsb
cmp
jg
xchg
movsl
int3
loope
fmul
ss
cltd
push
xchg
add
mov
cmpsl
std
pop
imul
xor
in
and
mov
dec
mov
and
stos
inc
enter
test
jbe
ss
add
fdivrs
sbb
or
and
lahf
cmpsw
cmp
cwtl
rcrl
push
sarl
ret
cmp
dec
fwait
test
rcrl
adc
jno
jg
es
fbstp
lds
jnp
sbb
mov
and
mov
jo
int
mov
and
jno
and
iret
leave
push
aas
negl
dec
sub
test
lahf
in
sbb
mov
mov
and
xchg
pop
inc
mov
int
xchg
add
pop
push
mov
subb
mov
mov
adc
mov
roll
pop
ficomps
sbb
mov
inc
adc
mov
xor
aam
test
rcrb
testl
jle
cwtl
mov
mov
sbb
fwait
pop
mov
mov
cmc
add
sti
cs
mov
stc
and
scas
lock
and
push
dec
fildll
in
jle
lret
cmp
imul
loop
mov
icebp
ret
in
add
or
and
scas
ret
push
pop
dec
movb
pop
mov
cmp
ss
pop
ds
mov
ret
aam
push
xchg
push
fdivs
xor
xor
add
jecxz
iret
jle
mov
sub
inc
mov
cmp
pop
dec
dec
push
dec
inc
dec
dec
rol
sbb
xor
inc
jno
int
jae
ficoms
mov
ficoms
mov
je
in
mov
sbb
pop
les
dec
int3
jae
mov
out
add
cli
out
add
cli
out
add
cli
out
add
jae
jge
in
inc
loope
sbb
data16
mov
cmp
mov
xchg
cli
out
add
cli
out
add
cli
out
add
cli
out
add
cli
out
add
cli
out
add
cli
out
add
cli
out
add
cli
out
add
cli
out
add
cli
out
add
cli
out
add
cli
out
add
cli
out
add
cli
out
add
cli
out
add
cli
out
add
cli
out
add
cli
out
add
cli
out
add
cli
out
add
cli
out
add
cli
out
add
cli
out
add
cli
out
add
cli
out
add
cli
out
add
cli
out
add
cli
out
add
cli
out
add
cli
out
add
cli
out
add
addr16
sub
.byte
