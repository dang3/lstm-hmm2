daa
dec
mov
sti
cmp
dec
adc
sti
pop
cmp
push
mov
decb
sbb
push
pusha
adc
and
js
mov
xchg
pusha
std
dec
sahf
jo
faddl
in
push
rcll
comiss
push
push
lahf
push
mov
mov
fsubrp
add
or
dec
add
lods
xor
and
outsb
xor
lods
adc
in
scas
leave
stos
test
sahf
rol
gs
pusha
jbe
and
leave
xchg
dec
mov
and
outsl
push
xor
insl
movsb
cmp
xor
fwait
inc
fninit
cmpsb
insl
add
cltd
push
lcall
sbb
lock
and
push
rorb
and
lock
dec
pop
pop
xchg
sbb
clc
push
repz
sbb
dec
in
stc
cli
adc
insl
mov
jnp
je
cmp
mov
jbe
insl
cmp
and
pop
in
rcl
ds
iret
imul
pop
test
push
sub
xor
cwtl
xor
push
fmuls
pop
xor
cmp
cmpsb
js
push
and
pop
jo
icebp
fmull
xor
pop
mov
jecxz
sarl
scas
and
outsl
pop
popf
mov
dec
fiaddl
cmc
fbstp
push
cwtl
test
movsb
fistl
pop
es
or
xchg
mov
jp
lahf
imul
or
pop
out
int
dec
aaa
jno
push
adc
stc
push
mov
outsl
or
sub
fs
push
jno
push
mov
sub
scas
je
and
lock
fisubs
xor
mov
pusha
clc
pop
pop
or
mov
notl
sub
repz
pusha
in
cmp
adc
push
mov
jge
mov
and
dec
pop
test
test
loopne
push
test
enter
mov
push
mov
insl
dec
xor
pop
hlt
xor
or
mov
movsb
xor
flds
cld
cmp
test
mov
mov
gs
push
adc
mov
popf
mov
and
fstl
leave
add
lods
dec
or
cmp
aam
nop
xchg
out
cmp
pop
and
and
xchg
mov
dec
dec
lahf
push
es
mov
sbb
xchg
adc
ja
stos
movsl
mov
mov
jae
xchg
xor
fidivrs
aaa
dec
out
cwtl
dec
jge
push
push
push
clc
in
mov
mov
je
adc
add
mov
aad
xchg
fsubrs
les
push
mov
mov
fldcw
cmp
sub
cltd
cmpl
sahf
lods
mov
mov
faddl
and
mov
mov
outsl
out
mov
mov
push
sbb
cmc
push
daa
std
adc
out
negb
xor
jmp
mov
shr
aas
sbb
inc
inc
popf
cmpb
cmp
es
cmp
mov
aad
jnp
sbb
out
push
fcomp
or
jecxz
sub
mov
mov
mov
pusha
mov
das
xor
mov
mov
and
repnz
push
xor
push
aad
push
push
and
jmp
mov
call
jo
mov
jge
popa
je
xchg
addl
fisubs
stc
repnz
sub
push
cs
mov
jmp
add
push
shll
enter
sbb
jmp
and
test
sbb
hlt
xor
cs
testb
test
repz
insl
outsb
sub
pmulhw
fs
stc
loop
ror
dec
mov
mov
scas
aaa
add
nop
mov
pop
bound
jb
sub
lea
or
mov
dec
xor
imul
adc
push
jge
mov
ret
adc
bound
push
stos
mov
xor
bound
shrl
sahf
push
sbb
xchg
pushf
stc
scas
and
xchg
icebp
jae
add
cmp
mov
lret
inc
mov
jae
pop
xchg
sti
mov
je
add
in
pop
arpl
push
fsubl
add
mov
mov
int
and
movsl
or
mov
sti
cmc
sti
rcrl
mov
sub
sbb
xor
mov
out
jle
push
cwtl
mov
rolb
add
lret
lcall
pusha
shr
adc
add
orb
jl
mov
cmpsl
jo
into
jnp
xor
mov
add
cli
or
fistpl
xchg
push
ja
nop
dec
mov
sub
xor
test
adc
mov
lcall
in
lahf
inc
sbb
or
xor
pop
cmp
inc
mov
aam
bound
add
lret
lcall
lcall
or
xor
jmp
fildll
icebp
pop
jbe
add
int
mov
das
daa
sub
imul
pusha
movsb
xor
push
push
popf
call
mov
lods
dec
sbb
push
xor
fs
push
push
ret
outsl
repnz
mov
push
test
scas
scas
push
movsb
xor
das
xor
and
and
cltd
mov
faddl
cmpsl
sub
dec
jge
dec
sub
pop
pusha
jg
mov
sbb
stc
adc
addr16
pop
sbb
jne
lcall
es
mov
mov
out
mov
cwtl
pop
xor
loope
jo
mov
adc
pop
add
push
and
add
jecxz
and
xor
pop
and
fmuls
sub
shl
cmp
stc
and
bound
cmp
lods
daa
inc
cmp
lret
clc
sub
cmovno
in
sub
inc
test
jecxz
xchg
adc
in
dec
int
movsb
jb
enter
jo
mov
cli
aas
std
jo
jbe
hlt
mov
cmp
inc
fldenv
lcall
mov
ret
cmpsb
test
dec
sahf
lds
stc
jle
movsl
xchg
aam
xchg
or
fstps
push
and
pop
lods
cmpl
jno
lcall
push
sub
lock
mov
sahf
sub
push
mov
dec
mov
loope
push
xor
jnp
loope
inc
cwtl
dec
ret
xor
xchg
sbb
jecxz
out
xchg
insl
in
ret
mov
aad
repz
mov
xchg
int
jo
cmp
sub
cmp
ret
push
mov
jne
mov
addl
sub
jbe
pop
into
xor
sahf
push
mull
adc
jg
and
inc
sahf
cmp
add
pop
xchg
loop,pt
mov
cs
out
int
mov
rorl
dec
lock
lds
push
int3
lods
mov
sub
das
sub
mov
das
mov
ret
mov
pop
bound
mov
add
pop
sub
sahf
adc
dec
clc
mov
cmp
test
ffree
negl
adc
lock
and
sub
imul
call
and
outsb
jb
dec
mov
push
adc
cli
sub
lock
fsubr
push
icebp
mov
int
jb
aas
adc
sub
xchg
cmp
mov
inc
mov
push
fnstsw
addr16
loope
sbb
cmpsl
mov
lcall
cmpsb
sub
mov
in
xor
jl
xor
insl
mov
push
and
pop
outsl
inc
aad
pop
xchg
dec
mov
push
scas
xchg
and
or
scas
inc
xchg
lds
adc
ret
lcall
in
imul
xor
mov
fnsave
enter
mov
mov
scas
inc
imul
lods
lods
mov
xchg
or
fsincos
sub
mov
sub
adc
mov
lret
sbb
js
es
cmpsb
cmpsl
push
and
mov
lock
pusha
repnz
das
inc
das
loopne
scas
mov
call
aas
mov
in
inc
sbb
dec
lods
pop
jnp
xchg
in
cmp
ds
adc
fsubrs
add
repz
push
xchg
fistl
or
nop
xchg
jne
mov
or
or
sub
mov
inc
lret
inc
fldl
in
xchg
repz
jb
mov
ret
std
cltd
sbb
jns
test
xor
mov
xchg
pop
xor
fcomi
cmp
mov
pusha
xor
mov
andl
rcll
popf
imul
jmp
xor
jb
pushf
cmc
rcrb
pop
repnz
adc
popa
mov
or
decl
pop
mov
cwtl
and
mulb
add
mov
xor
lea
and
das
xor
jp
aaa
lcall
dec
iret
fdivrl
mov
mov
dec
cs
push
push
ss
mov
daa
mov
scas
xlat
fsubs
mov
xchg
xor
cmpsb
cltd
rcrl
mov
jg
push
in
push
mov
imul
xchg
push
pop
push
adc
aaa
leave
inc
aas
add
cmp
jecxz
test
rclb
popf
out
aas
cs
jl
and
ss
das
nop
mov
jbe
out
and
aam
cmp
jns
iret
outsb
sub
dec
add
mov
push
shlb
ljmp
xor
dec
lods
xor
inc
out
or
roll
mov
sahf
in
lea
sbb
mov
xor
lock
jo
jne
and
nop
inc
sub
es
sub
pop
das
out
aam
sub
cmp
ljmp
xor
xor
fbstp
push
jnp
lret
mov
mov
int3
sbb
push
mov
ja
pop
popa
inc
cwtl
pop
mov
sub
dec
cmc
xchg
pop
addr16
mov
push
pop
xor
mov
pop
push
push
add
sub
outsb
push
pop
jmp
dec
dec
sub
push
insb
int3
test
stos
xor
mov
pop
scas
push
jmp
es
sbb
loopne
fwait
ja
cmp
clc
insb
add
mov
mov
fnstcw
mov
scas
inc
das
popf
xor
ds
jge
stos
fdiv
ja
lea
dec
pop
pop
inc
ljmp
fistl
cli
sub
subb
fistpll
mov
stc
push
ljmp
pop
or
mov
push
mov
jmp
movq
in
mov
sahf
inc
in
mov
jmp
jl
or
push
aad
add
popa
repnz
and
fldl
xor
mov
imul
jo
or
daa
dec
jb
sub
in
dec
mov
mov
mov
sbb
mov
dec
lds
push
sbb
pop
arpl
adc
mov
lock
xchg
sbb
push
sub
shll
sarb
jle
or
bound
sub
xchg
mov
cmpsb
push
push
in
mov
pop
or
and
push
fbld
or
adc
mov
iret
dec
xor
pop
faddl
fcompl
xchg
std
inc
imul
rcll
scas
pop
pushf
push
popa
nop
loope
or
push
inc
sbb
aam
xchg
ret
xor
xor
mov
loopne
mov
inc
mov
fsubs
dec
aas
pop
jbe
stos
sbb
sbb
jns
daa
fs
imul
hlt
jmp
adc
clc
push
jge
lock
test
jne
xchg
push
pop
push
popa
sub
sub
daa
add
inc
sahf
pusha
xor
sbb
ljmp
cli
ret
stos
flds
xor
push
imul
insl
ss
jl
out
stc
mov
fdivs
fsubs
jnp
sbb
and
dec
sti
stc
lcall
daa
lea
scas
movsb
sbb
iret
leave
sbb
test
mov
lea
aad
arpl
jnp
mov
ljmp
xor
test
addr16
in
mov
pop
pop
and
fisubrl
mov
fldln2
inc
arpl
outsb
push
dec
lahf
push
dec
push
xchg
lock
scas
inc
xlat
iret
xlat
push
inc
aas
mov
divl
cmp
push
xchg
pop
push
pop
or
insl
xor
add
pop
jne
addb
mov
lret
es
ljmp
sahf
fsubl
mov
dec
jns
clc
dec
push
es
fcompl
push
adc
mov
scas
mov
fisubrs
lret
xor
or
xchg
mov
aam
xor
jne
lock
stc
loop
sub
sub
out
insb
mov
xor
xor
mov
jecxz
mov
in
jno
mov
sbb
mov
push
jnp
out
or
aam
repz
mov
add
test
jno
adc
pop
mov
daa
outsb
es
das
shl
xchg
hlt
xchg
add
ret
bound
lds
xlat
leave
xor
or
xor
popf
cmpsb
pop
xor
jnp
push
sub
cmp
movsb
pop
xchg
outsl
jge
daa
xchg
xor
push
test
pop
insl
fsubl
out
imul
enter
push
pop
adc
dec
rcrb
inc
xchg
jns
loope
ds
repz
cld
xchg
lret
adcl
pop
hlt
mov
dec
movsb
addb
stc
dec
pop
call
mov
shlb
mov
mov
cmp
cmpsb
mov
sbb
data16
xchg
into
cwtl
mov
cmpsb
push
pop
jge
mov
in
mov
mov
fs
data16
mov
and
lahf
push
jae
movsl
push
insb
ja
pop
jo
push
pop
xorb
mov
dec
sti
pop
stc
push
jp
daa
xchg
push
outsb
daa
loope
and
cmpsb
add
mov
ret
sbb
add
xor
arpl
or
std
mov
push
dec
xchg
adc
xchg
dec
movsl
aad
mul
mov
test
sahf
pop
cs
ljmp
jno
xchg
mov
add
aad
pop
pop
push
xor
xor
jge
sub
gs
lret
aad
or
mov
aaa
dec
mov
setg
adc
addl
sbb
icebp
mov
int
mov
and
std
push
dec
mov
xchg
xor
mov
cli
aam
or
test
jmp
push
pop
jmp
sub
lock
sbb
dec
icebp
testb
xor
add
sahf
adc
add
push
jg
int3
test
push
or
iret
or
dec
pusha
pushf
push
divb
mov
xlat
scas
add
sbb
dec
cmp
adc
dec
int3
adc
add
jne
stos
xor
cmp
add
adc
cli
arpl
sbb
pusha
movsl
dec
jle
loopne
sbb
dec
aam
outsb
cmp
push
lret
cmp
adcb
mov
add
jne
das
popf
jnp
testb
aad
cmp
pop
xor
pop
xchg
and
lods
arpl
jns
mov
jb
js
dec
aad
sbb
shlb
out
insl
inc
push
sbb
add
xor
inc
cltd
cmp
fiadds
mov
inc
fdivs
bound
push
cltd
inc
mov
jo
lcall
scas
lret
test
pushf
mov
ret
sarl
jecxz
mov
daa
adc
shr
je
pusha
xor
push
cwtl
dec
repz
js
push
xor
sub
in
and
shlb
insl
stos
pop
es
inc
and
inc
movsl
jbe
xchg
into
xor
fsubrs
daa
lret
jne
mov
jle
and
mov
sub
and
push
insb
mov
fcompl
movsb
aaa
and
add
scas
jbe
jno
mov
mov
loope
mov
cmp
outsl
arpl
jge
sbb
mov
jg
xchg
out
adc
cwtl
cmp
ficomps
mov
and
js
jge
xchg
mov
mov
mov
imul
sbb
shrl
dec
inc
jbe
nop
test
and
and
jecxz
xor
enter
xor
add
mov
in
dec
insl
jg
push
mov
xor
inc
imul
popa
dec
adc
or
adc
je
jge
jae
push
sub
imul
popf
divl
adc
cmc
pop
mov
xor
ret
sbb
xor
xchg
call
mov
popf
push
sahf
arpl
leave
add
inc
push
pop
std
shll
and
mov
fsubrs
and
popf
imull
jne
sub
mov
xor
arpl
enter
pop
dec
inc
gs
in
rcrb
xchg
pushf
inc
pop
mov
int
cmp
fnstenv
pop
mov
add
shl
nop
cmp
push
sbb
mov
jecxz
repnz
or
sbb
addr16
insb
xchg
gs
enter
loope
ss
jbe
jge
inc
repz
cmc
mov
sbb
std
or
bound
jns
push
mov
leave
mov
insl
xor
pop
insl
jbe
pop
ja
jge
push
xor
mov
jp
nop
js
daa
jle
xchg
mov
shlb
add
bound
cs
aad
loope
negl
movsl
repz
inc
xchg
sub
pop
mov
dec
insl
xchg
jnp
outsb
xchg
adc
cs
popa
dec
js
push
scas
xchg
mov
inc
mov
movb
mov
fdivl
ja
jg
jle
mull
cmc
gs
mov
xor
mov
pusha
repz
es
and
mov
pop
fcom
push
sti
cmp
xor
into
shrl
add
movsl
xorb
jb
lods
pop
pop
sahf
xor
insb
dec
outsl
xor
aas
in
pop
cmpsl
repz
sahf
adc
xor
pusha
jle
ljmp
fidivs
fisubs
xchg
loopne
pop
dec
movsb
pop
fs
sahf
test
daa
fcmovnu
inc
or
jae
dec
imul
mov
fwait
pop
test
and
cltd
adc
inc
fwait
push
lret
mov
dec
jb
mov
sub
sub
inc
dec
js
lds
jns
or
jp
xor
mov
mov
sbb
bound
rorb
inc
cmp
jle
imul
in
sbb
stos
mov
cmp
lock
rcrb
arpl
jge
sbb
pop
ja
shl
dec
pop
push
ljmp
hlt
cmp
popa
jecxz
imul
sub
inc
jecxz
arpl
mov
inc
pusha
adc
sti
out
xor
push
mov
mov
push
shll
jp
nop
aad
and
divl
push
xor
es
xor
decb
mov
mov
cwtl
xchg
sub
mov
ficoms
add
out
mov
push
dec
imul
pop
sbb
inc
push
jecxz
mov
xchg
xor
jl
sbb
arpl
sbb
jno
cs
pop
aaa
and
fs
xor
and
inc
adc
scas
iret
jg
cmp
pop
xlat
sub
dec
mov
psignb
fisubrs
cmp
cmp
mov
or
pop
stos
lea
out
sbb
jp
xchg
xor
cmp
push
cmp
int
jno
jl
inc
push
lahf
mov
xor
hlt
cs
lock
add
aas
int3
movsl
pushw
sub
mov
sahf
inc
loope
pusha
ss
jo
jbe
add
push
dec
lods
sbb
out
stc
add
and
lahf
xchg
ret
cmc
out
dec
xor
jo
push
lds
or
ds
cmp
push
xchg
in
shll
bound
dec
aaa
test
xor
mov
mov
inc
sbb
adc
jge
push
cwtl
loope
xor
xor
sub
fbld
push
mov
jae
repz
mov
lahf
repnz
loope
bound
data16
aam
in
sbb
arpl
adc
xchg
inc
sub
jb
push
sub
fwait
aad
stc
adc
push
sbb
push
pushf
sti
repnz
stos
cmp
push
cmp
jg
or
mov
or
cmpsl
pop
or
data16
cmp
sub
jge
inc
daa
cmp
int3
les
das
or
dec
ja
rcrb
out
enter
sbb
pusha
enter
jecxz
ret
or
mov
popf
in
cmp
or
js
add
repz
xor
movsl
popa
mov
add
js
in
jnp
lds
sbb
xor
imul
xor
stc
ds
cs
cmp
sub
inc
fimuls
lcall
pop
mov
mov
jl
xor
cmp
xchg
into
stos
and
xor
inc
mov
movsb
mov
iret
mov
int3
rcr
sahf
or
cmp
imul
adc
dec
lcall
xor
rcr
jns
in
or
adc
mov
sbb
jecxz
test
ss
xchg
pop
stos
dec
mov
fdivrl
ficoml
imul
and
cmp
jo
stos
mov
pop
mov
int
cmp
pop
fs
or
ficoml
fwait
cmc
jecxz
inc
sub
sbb
mov
fnstcw
and
push
lock
mov
jnp
pushf
cmp
rorl
and
mov
jmp
push
push
pop
mov
mov
xchg
cmpsl
js
fwait
out
cwtl
daa
sub
inc
ret
push
sahf
cmpsl
lcall
sub
lahf
pusha
jge
lret
daa
arpl
aaa
and
loopne
adc
into
cmp
mov
lret
into
push
sub
cmp
mov
pop
or
stos
inc
sbb
mov
mov
push
clc
int3
jo
xchg
lds
inc
xor
dec
popa
and
insl
je
sub
mov
push
in
sbb
fistps
data16
xor
shl
lahf
add
ss
jl
mov
adc
popa
testb
or
cmp
mov
pop
xlat
xor
int3
cmp
movsl
pop
mov
mov
add
sub
test
mov
push
inc
pop
in
jp
xor
mov
xchg
add
sarb
pop
and
loope
lds
sahf
shrb
dec
daa
lret
sub
mov
fildl
les
sbb
mov
in
fwait
mov
mov
or
and
push
inc
xchg
xor
leave
jg
sahf
and
push
test
or
inc
rcrb
push
mov
push
jmp
loope
imul
rol
mov
dec
daa
mov
xchg
loopne
cli
push
add
aam
pop
xlat
xor
fcomps
inc
mov
mov
int3
mov
fsubrs
out
inc
push
ljmp
jecxz
mov
iret
out
les
jnp
repnz
and
or
rol
bound
ljmp
mov
mov
lods
shll
pop
push
andb
xor
dec
add
dec
sub
aam
int
arpl
pop
rorb
out
popf
push
adc
and
cld
js
sbb
xchg
mov
xchg
sbb
imul
inc
jns
or
jbe
je
adc
mov
cltd
push
fists
mov
lods
repz
loopne
cmc
inc
mov
ss
lods
fwait
cmp
pop
adc
sbb
mov
adcb
push
aam
xchg
push
push
out
pop
jno
lret
lods
fs
lret
daa
lcall
out
xlat
shll
adc
mov
mov
aaa
inc
loopne
mov
lods
push
loope
mov
daa
dec
cmp
das
bound
xor
iret
mov
int3
cmp
sub
shlb
mov
xor
mov
sar
xor
push
scas
aad
in
pushf
mov
dec
mov
stos
adc
inc
xor
aad
xchg
inc
lods
mov
sbb
xor
inc
jl
test
adc
and
jl
inc
dec
daa
jae
dec
mov
inc
fidivs
xchg
or
push
ljmp
sub
sub
inc
xchg
jp
ds
and
stc
test
push
xchg
lds
imul
pop
adc
hlt
outsl
jnp
sbb
std
inc
lahf
jno
sub
pop
hlt
pop
adc
xchg
or
call
and
jmp
xlat
cltd
into
xor
mov
xor
jmp
xchg
add
cmp
pushf
daa
das
bound
jne,pn
sbb
ret
stos
test
sti
sar
fs
popa
adc
cmc
sub
pop
fmul
push
xchg
sub
xor
push
jg
push
push
sbb
sahf
xor
aaa
addr16
cmp
mov
daa
push
lods
shlb
mov
movsl
pop
rorl
movsl
out
xor
shl
dec
xor
pop
sub
xor
pop
sahf
add
xchg
adc
push
pop
pop
aam
aaa
add
mov
movsb
popa
xor
test
lock
push
cltd
inc
sbb
inc
dec
inc
fidivl
sub
ud2
mov
push
lret
sbb
and
dec
dec
sbb
inc
lahf
add
shl
sbb
mov
mov
sub
cwtl
and
pusha
lcall
outsb
sbb
jle
push
push
sbb
cs
icebp
cmp
fnstsw
fsubl
lock
dec
jno
rclb
mov
daa
mov
jo
push
mov
rcl
xlat
lods
mov
jae
fldt
and
lods
adc
add
insl
in
cmp
adc
mov
jl
and
dec
bound
adc
es
sarb
jbe
lock
fwait
xchg
or
push
out
mov
push
div
fistps
aaa
jnp
dec
and
hlt
add
mov
xchg
jle
xor
jle
lods
pop
flds
fwait
in
aas
addb
test
ret
das
enter
push
aad
ljmp
lcall
out
loopne
cmp
in
jno
test
xlat
push
xchg
sub
xchg
mov
cltd
jg
test
sti
add
push
mov
adc
add
jne
ss
lds
es
outsl
cmp
aas
mov
inc
lcall
cs
call
shlb
push
mov
scas
lret
inc
push
mov
xor
mov
xor
cmpsl
pop
xor
test
ret
and
jmp
popf
xor
mov
lea
xchg
inc
or
and
inc
sbb
adc
loopne
and
lahf
loope
mov
fdivs
mov
xor
and
bound
mov
add
clc
xor
jno
es
sbb
ljmp
jle
inc
inc
or
push
inc
inc
push
mov
ja
fisubrs
or
inc
pop
add
pop
mov
and
mov
inc
mov
inc
push
jnp
pop
gs
sbb
fs
popa
sbb
push
aaa
inc
mov
sub
xor
stos
inc
adc
xchg
sub
andl
xlat
add
push
std
or
inc
pop
cmp
cmp
imul
sub
mov
cmp
jbe
push
out
pop
xor
les
push
or
out
adcl
fcomps
pop
pop
mov
mov
cmp
sahf
es
pop
sub
dec
inc
imul
cwtl
ss
sbb
aas
pop
jl
fdiv
mov
insb
jl
out
xor
out
scas
fstpl
cltd
xchg
add
jne
addr16
arpl
addr16
mov
aas
sub
movsl
testb
ljmp
dec
data16
inc
daa
shrl
add
stc
sub
push
xchg
mov
adcb
cmp
mov
sbb
and
mov
mov
and
aaa
cmp
ljmp
and
data16
xor
add
mov
cltd
xor
mov
cmpsb
arpl
push
push
sbb
dec
add
popa
in
jae
fdivl
add
pop
ret
sahf
pop
mov
cmpsw
cmpl
lret
les
popf
in
mov
int3
cs
inc
lds
pop
push
cltd
ljmp
cmpsb
daa
cli
dec
jo
add
sub
mov
cmp
sub
push
shlb
out
inc
dec
lahf
test
sti
or
xchg
inc
jae
cmpl
dec
mov
lock
cs
dec
jae
pop
cmp
push
cs
adc
push
popa
pop
add
lods
push
mov
jl
mov
mov
aaa
cwtl
stc
movsb
add
pop
mov
mov
inc
lds
xor
sub
jg
cwtl
fdivl
lea
aas
es
sbb
xor
hlt
test
cli
cmpsl
xor
fstps
pop
fadd
sub
lahf
sub
push
sbb
rorb
fistl
mov
sub
sbb
es
xor
icebp
hlt
dec
adc
mov
ss
lods
cwtl
out
or
adc
clc
ffreep
rcrb
outsl
xchg
pop
xor
push
out
sti
jle
pop
mov
repnz
jnp
mov
in
shr
fldt
sub
mov
das
jge
pushf
popf
loopne
add
cmp
mov
popa
es
adc
and
pop
movsl
sbb
or
shll
cs
aad
or
movsl
je
out
shl
jno
sbb
inc
rcrb
adc
out
fwait
add
scas
icebp
push
push
sub
xor
cs
jbe
push
xor
jmp
pusha
inc
sbb
mov
fstpt
xchg
sub
movsb
xchg
push
sahf
adc
xor
xchg
add
jnp
popl
aam
or
sti
fsts
push
in
fcomps
pop
push
and
dec
cmpsb
adc
ja
mov
imul
xorb
jo
add
popa
sarb
popf
jbe
sub
inc
push
jnp
xor
fcompl
mov
xchg
aas
cmp
mov
xchg
addr16
mov
and
mov
inc
add
cmpsb
and
ds
sbb
sti
mov
ja
addr16
scas
scas
xor
jg
insl
pop
push
outsb
jae
pop
out
pop
scas
push
std
sub
lret
mov
or
or
aaa
mov
xor
mov
sbbl
inc
push
pop
or
lods
xchg
and
mov
pop
mov
xchg
cmp
mov
xor
push
mov
inc
mov
push
xchg
nop
stc
jl
cmpsl
mov
jbe
cltd
sub
mov
fwait
dec
or
scas
fwait
xor
lods
std
bound
and
pop
jl
mov
iret
or
mov
insb
mov
xchg
cmpsb
xchg
fistpl
inc
jne
movsl
cltd
mov
jae
cwtl
fnstsw
into
dec
sub
jo
xchg
xor
popa
cmp
ds
mov
xorb
mov
push
push
cmpsb
pop
fidivl
mov
inc
mov
mov
jge
popa
dec
adc
movsl
sbb
xchg
adc
jno
xlat
outsl
pop
sti
mov
jmp
repnz
pop
movsl
sub
jmp
add
pop
cmp
nop
push
insl
add
imul
or
je
and
clc
push
ss
sbb
add
xor
lea
movsl
cli
fcompl
xor
int3
mov
jecxz
repnz
aam
or
lea
mov
repz
dec
fcomps
xor
sbb
es
popa
std
dec
dec
dec
jl
adc
hlt
xor
adc
hlt
in
enter
cmpsb
lcall
enter
and
or
in
aaa
fadd
test
in
sbb
out
inc
in
mov
fsub
jle
sbb
cltd
mov
mov
ret
stos
mov
outsb
mov
scas
out
push
jle
push
mov
inc
fistpl
test
xor
sub
cmp
lret
push
sti
and
in
mov
cwtl
and
imul
push
das
cltd
sbb
gs
lock
push
aad
push
dec
test
mov
outsl
xor
mov
test
notl
inc
int3
add
data16
imul
xorl
imul
adc
push
mov
iret
das
mov
inc
mov
cmp
stos
adc
cmpsl
aas
cmp
out
jo
jne
jmp
and
rcrl
mov
add
nop
in
push
pop
inc
inc
std
push
xor
dec
fs
fwait
pop
pop
and
inc
das
mov
sbb
sub
ror
bound
dec
ds
test
mov
xor
lret
jl
xchg
test
scas
and
adc
mov
pusha
adc
xor
shrb
test
mov
fs
das
test
test
cmp
pusha
and
dec
mov
sub
jle
or
inc
ret
and
les
lods
mov
xchg
outsb
aas
pop
xchg
dec
add
sbb
jne
fidivs
push
cltd
jnp
mov
xorb
add
xor
es
in
dec
jno
xor
and
mov
push
ss
pop
mov
xor
adc
out
repz
xor
daa
xor
iret
es
fnstsw
lcall
in
out
stos
in
sbb
dec
out
in
out
cld
adc
test
xor
push
and
push
test
lcall
jg
pop
jge
pop
mov
addr16
out
loope
xor
and
mov
pop
movsl
test
mov
inc
add
shlb
cmp
sbb
out
cs
pop
cmpsl
or
scas
jl
jno
push
jns
ffreep
xor
hlt
cmp
test
lcall
mul
pop
in
jle
data16
ljmp
push
sub
iret
int3
adc
pop
sub
jo
daa
lock
shld
pop
test
inc
pop
adc
pop
cmpsl
das
jno
sbb
mov
xor
inc
xchg
jno
jecxz
js
jnp
lods
data16
mov
push
in
xchg
push
mov
add
call
sbb
xor
nopl
or
or
movsl
push
jb
cwtl
sti
out
jbe
fdivrp
movsl
sub
lods
cmpb
xor
adc
or
jo
sub
syscall
push
cs
push
add
add
mov
jecxz
mov
dec
or
stos
dec
out
jbe
popf
xor
dec
xchg
cmpsl
mov
lods
imul
mov
and
imul
fnsave
enter
mull
mov
xor
lea
stos
fbld
inc
andb
pop
jno
cmpsl
add
leave
mov
cmp
pop
test
sbb
sub
cli
and
pop
imul
adc
inc
dec
ljmp
pop
dec
mov
loope
aaa
pop
pop
movsl
xchg
pop
scas
aad
ficoms
pop
sbb
cmpsl
sti
mov
and
stos
jge
aad
imul
sub
cvtpi2ps
dec
icebp
es
popf
push
xchg
xchg
or
mov
and
dec
add
lret
mov
xor
push
pop
pop
xor
jl
loope
jmp
idiv
in
cmpsl
push
pop
idivb
xchg
mov
setp
and
add
jl
xor
pop
out
xchg
add
inc
cmp
jp
pop
mov
leave
jnp
lea
inc
and
xchg
sbb
lea
and
lret
dec
mov
mov
inc
mov
sbb
push
cmp
and
jo
mov
fnstcw
out
repz
dec
pop
es
in
data16
adc
or
and
in
mov
fucomp
pop
sbb
cltd
bound
cltd
cli
xor
add
bound
or
les
out
adc
lock
dec
leave
popf
adc
in
mov
xchg
emms
xor
jno
sbb
jge
daa
mov
fwait
lds
mov
pop
adc
or
jbe
test
jne
pop
loope
cltd
mov
das
in
mov
xchg
movsw
xor
pop
bound
jne
clc
xor
jge
mov
pop
mov
cwtl
push
mov
dec
dec
xchg
adc
stos
lods
fucomp
mov
and
push
negb
rcr
mov
or
add
fidivl
cmc
bound
or
das
or
cmp
lret
imul
test
imul
mov
aad
neg
es
xorb
mov
or
imul
dec
out
pop
arpl
js
insl
movsl
and
incl
popa
or
lahf
and
gs
add
dec
negl
sub
add
ret
imul
xchg
in
repz
xchg
leave
inc
popa
mov
push
and
and
insb
leave
push
js
js
ret
icebp
aaa
jge
sahf
inc
adc
imul
xor
test
call
aaa
shll
sub
sti
xor
xor
subl
shll
pop
stos
pop
gs
cwtl
inc
mov
negb
xchg
mov
sbb
push
or
mov
dec
jo
mov
xchg
pop
and
xor
push
jecxz
in
gs
rcrb
pop
sahf
addr16
and
lea
arpl
sbb
xchg
stos
pop
pop
push
pop
xchg
scas
es
xchg
addr16
mov
mov
sub
pop
xor
bound
test
cmpb
xchg
push
add
ds
sub
mov
xor
gs
cmpsl
sub
adc
push
lea
jne
out
fiadds
pop
push
push
imul
bound
fs
xor
push
ss
aaa
ret
inc
popa
xchg
jmp
gs
mov
adc
or
dec
arpl
out
imul
dec
rol
testl
daa
nop
gs
and
aad
cs
pop
sbb
xor
jne
pop
out
pop
sbb
out
scas
push
mov
sbb
insl
enter
push
std
lret
imul
aad
jg
xchg
test
into
cmpsb
xchg
andb
outsl
data16
jno
clc
popf
cmpsb
sbbb
test
dec
pop
jle
cmp
jnp
mov
nop
data16
pop
push
push
pop
xor
ret
leave
dec
cltd
mov
sub
cmp
sbb
mov
sbb
dec
loop
jne
movaps
ja
sbb
add
mov
jb
rcl
pop
xlat
jle
xchg
mov
pop
imul
mov
daa
lods
mov
fstpl
mov
jnp
enter
inc
jbe
mov
cmp
or
sti
shll
xor
pop
ja
adc
scas
xchg
loope
xchg
test
call
xor
push
negb
xchg
xchg
adc
jecxz
xor
leave
push
orb
shl
popa
push
dec
push
push
jb
syscall
cwtl
adc
jb
pop
pop
add
mov
and
xor
push
jbe
addr16
mov
ss
pop
ja
pop
pop
sarb
bound
jne
int
jb
jl
fiadds
xor
aaa
dec
cmp
icebp
loopne
sub
sbb
fldenv
lea
or
outsb
push
mov
or
gs
outsl
xchg
pop
into
leave
adc
es
mov
ret
fisttpll
stos
lock
pop
sub
mov
pushf
in
aas
pushf
and
in
test
inc
inc
mov
and
mov
in
data16
xchg
je
and
or
push
sub
mov
push
scas
lret
jmp
push
frstor
call
sbb
push
cmp
ficompl
mov
jnp
jbe
lcall
push
sbb
dec
scas
xor
cmpsl
jmp
dec
lods
or
mov
negb
push
arpl
cmp
neg
orl
sub
sbbb
lods
xor
add
pusha
outsl
pop
sub
adc
jbe
ret
push
stos
js
sarb
and
push
int
jnp
push
mov
lods
jp
outsl
lds
adc
mov
mov
push
addr16
jle
outsl
arpl
imul
xor
lret
outsl
dec
pop
lds
popl
jb
xor
cmpsb
mov
ss
pop
dec
test
fs
or
stos
xchg
ret
mull
lock
clc
adc
xor
fistl
cltd
dec
js
mov
sarb
xchg
push
add
dec
les
adc
mov
leave
rcr
popa
cmpsl
and
fwait
rorb
fwait
roll
fmull
icebp
outsb
dec
xchg
push
stc
jecxz
lods
pop
or
or
mov
setae
or
in
push
pop
pop
mov
movsb
mov
xor
lods
lea
rcrb
lret
mov
pop
or
inc
negl
aad
jb
mov
loop
xor
test
in
je
shll
cmpsl
mov
aad
cmpsb
sub
aam
cmpsl
mov
lret
xor
outsb
pop
xor
fcos
xor
stc
push
mov
cltd
repz
ja
out
int3
push
jg
pop
icebp
xor
sub
mov
data16
sahf
enterw
push
add
js
pop
xchg
inc
inc
dec
jne
jbe
lea
repnz
dec
xchg
or
xor
xor
mov
and
sub
imul
cmpsl
mov
jbe
pop
push
sub
subl
lods
cmpsb
push
movsl
or
in
fldt
insb
jp
push
sbb
push
sub
ds
push
jnp
nop
mov
jno
cmc
mov
mov
aaa
gs
push
pop
in
daa
pusha
and
lds
scas
dec
int3
add
cmp
movsb
idivl
test
pcmpeqd
aas
or
and
pop
xchg
xchg
mov
iret
xlat
mov
arpl
mov
jmp
jb
pop
ret
es
cmpsb
adc
sub
mov
adc
popf
aaa
xlat
icebp
mov
cs
mov
jg
mov
es
inc
sub
test
inc
rorb
es
xchg
inc
push
mov
dec
faddl
movl
inc
xor
arpl
mov
nop
hlt
adc
mov
xchg
js
daa
loop
cltd
dec
push
pop
insl
das
and
enter
mov
movb
sub
adc
add
lea
mov
stos
pop
cwtl
push
imul
cmp
jg
lods
mov
dec
mov
dec
int3
push
adc
mov
je
pop
xlat
pop
add
idivb
cmpsb
xchg
pushf
call
add
mov
sbb
cs
lahf
inc
pop
pop
adc
push
lea
or
mov
ret
test
ja
jb
call
fimull
xchg
in
movsl
adc
adcb
jg
mov
sahf
add
out
mov
inc
sub
pop
adc
mov
add
mov
loope
ficompl
cmp
sbb
scas
mov
jmp
inc
xlat
mov
popa
inc
sahf
mov
or
pop
mov
mov
push
add
push
push
push
inc
paddd
add
into
cmc
xor
mov
pusha
jp
cs
aaa
pop
lds
sti
ljmp
test
nop
add
shlb
mov
xor
cld
xor
cmc
or
sahf
dec
outsl
movsl
sbb
push
sbb
dec
pop
sti
add
popf
xor
lea
mov
in
gs
iret
jbe
loop
or
sbb
adc
jo
clc
add
shrl
dec
aad
subb
mov
push
mov
and
mov
mov
mov
xorb
pop
or
or
test
mov
bswap
test
repz
or
out
mov
pop
lcall
inc
mov
movsb
scas
stc
and
stc
add
cltd
push
das
inc
dec
imul
mov
add
cltd
jl
sbb
lds
cmpsl
flds
mov
mov
movsl
test
sbb
subb
scas
mov
fstpt
aad
dec
cmp
push
pop
cli
sub
xchg
pop
sti
fidivrl
test
mov
scas
push
scas
lock
pop
add
sbb
sub
cmp
roll
mov
popf
in
rorl
xchg
fucomp
sub
sbb
push
jne
adc
in
cmp
cwtl
fnsave
cmp
mov
pusha
icebp
jmp
dec
pop
or
jae
push
imul
sub
movsl
jne
cmp
js
in
daa
rol
cs
pushf
push
push
mov
imul
shrb
cmpsb
dec
and
mov
pop
lds
rcll
jne
push
aas
popa
and
scas
lret
and
mov
or
xchg
pop
clc
add
std
enter
es
xchg
push
pop
jg
cwtl
sub
insb
dec
xor
inc
lods
sbb
ficomps
popf
inc
loop
mov
sub
insl
insl
and
mov
pop
pop
imulb
xchg
cli
xchg
mov
in
out
shrl
mov
jmp
dec
jae
out
ret
fcmovb
push
push
test
mov
lcall
gs
xchg
lds
pop
and
xor
lock
cmp
pop
pop
mov
decl
lret
xchg
sub
sbb
aad
jge
jl
pop
dec
push
out
int
ret
push
xchg
mov
das
sub
xor
lock
xchg
scas
sub
fdivs
outsb
push
inc
inc
mov
dec
cmp
push
in
cmpsl
stc
push
mov
cs
mov
insl
or
cmp
stc
loope
inc
imul
mov
push
loope
cli
add
add
pop
in
dec
test
cmp
cmp
mov
adc
std
mov
push
loopne
out
in
sbb
dec
arpl
and
or
mov
scas
push
pusha
dec
jmp
sub
adc
sti
xor
adc
dec
inc
xorl
sub
insl
and
jae
dec
arpl
sbb
xlat
out
int
stc
xchg
or
jb
dec
push
daa
fdivr
int
xchg
jb
inc
xor
adc
push
vorps
push
mov
loop
rcll
cmpsb
jl
jae
cltd
test
lcall
cmpsb
in
repnz
xor
xchg
mov
fwait
cmp
mov
fdiv
xchg
xchg
stos
add
std
mov
aas
dec
nop
mov
out
pop
stos
scas
psubusw
xchg
cmc
mov
imul
in
jno
jge
sub
bound
push
in
shrb
repz
push
mov
pop
mov
int3
inc
icebp
pop
loopne
jo
test
loop
and
dec
fwait
int
repz
push
enter
cwtl
dec
xchg
or
dec
xlat
lods
mov
pop
lahf
or
bound
test
sbb
out
mov
lds
popf
and
imul
adc
xor
test
pop
pop
movsb
test
pop
dec
xchg
mov
or
movsb
xchg
or
fcomps
das
mov
lea
ss
or
mov
movsl
fstp
sub
xor
mul
mov
adc
mov
daa
mov
xor
imul
add
pop
mov
cmp
out
fiaddl
inc
jge
xchg
in
add
int
and
push
iret
incb
fdivl
aaa
fistpll
dec
outsb
sub
out
aam
shll
sub
dec
mov
dec
in
rclb
mov
sub
xor
jl
andb
stos
cwtl
lcall
xlat
int
lock
mov
sub
dec
repz
push
lds
mov
dec
repz
jae
xchg
and
pop
xchg
dec
popa
adc
cmp
push
dec
inc
sbbl
fisubrl
fmull
loope
sub
cmp
bound
cmp
in
add
add
pop
sub
lods
sbb
jnp
fsts
lods
lret
and
sub
jle
gs
fsubl
xchg
pop
outsb
loopne
inc
int
mov
cs
dec
add
cmpl
jne
fwait
mov
and
outsb
fldt
xchg
dec
mov
into
pop
fstps
push
mov
scas
lds
jg
rcll
insl
mov
shl
addr16
shrl
les
adc
lods
outsb
sbb
js
out
out
sub
mov
nopl
jg
mov
mov
out
es
in
cmpsb
ds
mov
sbb
aaa
repnz
inc
pop
adc
mov
fwait
aad
idivl
mov
cmp
sub
and
test
push
das
inc
test
and
sub
cld
fcoml
fwait
aaa
lahf
cs
in
enter
mov
adc
cmc
mov
sbb
xor
fsubrs
cltd
push
mov
cwtl
push
imul
cmpsl
mov
insb
sarl
daa
pop
pop
pop
arpl
cmpsl
jne
testl
sbb
xchg
mov
jne
aaa
stc
movsb
push
mov
ljmp
sub
pop
dec
inc
hlt
dec
int3
repnz
mov
lret
sbb
pop
movsl
and
test
mov
sbb
adc
push
cmp
ss
mov
push
fcoml
icebp
xchg
scas
cwtl
and
fisttps
push
cs
popf
cmpsb
fcmovnb
clc
ret
add
stc
cs
xor
jno
mov
and
cmpsl
icebp
sub
hlt
push
popa
ljmp
sti
sub
mov
mov
xor
jno
or
xor
stc
shll
icebp
pop
loop
das
cmpsb
loopne
lods
popa
push
cltd
pop
ja
pop
and
dec
inc
jmp
cmp
cmp
sti
push
icebp
xchg
and
jns
dec
sahf
pusha
insl
pop
sbb
inc
sub
sub
lcall
and
jae
cmp
rcll
add
push
stos
mov
push
movsl
pop
push
pop
sahf
cwtl
xchg
and
sub
jbe
nop
jmp
mov
cmp
lret
in
jno
sbb
sub
mov
mov
bound
loopne
popa
push
mov
pavgw
gs
adc
clc
xchg
nop
dec
in
add
lret
fnstcw
int
and
mov
xor
adc
inc
jg
mov
xor
loop
xor
lret
xchg
jbe
cmpl
adc
lds
lds
mov
leave
into
aad
pop
mov
mov
into
jmp
loop
clc
movsb
mov
scas
leave
mov
pop
mov
fidivl
lods
imul
cmpsl
mov
sysenter
xchg
jge
cld
aaa
adc
cmpsl
in
jns
loop
lea
sbb
push
out
sub
push
sub
jno
cli
es
outsl
lds
mov
lret
xor
stos
dec
mov
mov
mov
enter
loope
or
movsl
rol
mov
cmovle
lret
in
cmc
dec
push
pop
ret
mov
sub
jbe
clc
ret
sub
jno
push
xor
daa
inc
cmp
xlat
push
hlt
scas
pop
mov
jnp
popa
cmp
xchg
push
mov
outsb
fs
push
push
lcall
mov
xchg
cltd
cmpb
orl
xchg
loop
jb
or
push
mov
inc
popa
mov
lahf
movl
pop
and
aas
imul
xor
mov
pop
xchg
lds
pop
stc
cmp
cltd
xchg
fldt
cld
pusha
inc
mov
cmp
sbb
subl
cmp
inc
mov
cmp
pop
dec
adc
cmpl
mov
sub
testl
paddd
xor
xchg
and
inc
jno
inc
hlt
enter
xor
imul
pop
sti
dec
fistps
sbb
idivl
shlb
repnz
pop
ljmp
pop
mov
or
outsl
cwtl
dec
dec
and
and
test
cmp
in
fldcw
fdivl
adc
bound
es
jb
pushf
fwait
outsl
mov
dec
sbb
lret
das
out
pop
sbb
aam
dec
lret
jle
sbb
das
test
push
push
ja
pop
cmpsb
dec
pop
popa
ds
add
pop
pop
faddl
dec
mov
ds
jecxz
imul
in
daa
insb
mov
and
xchg
mov
jge
mov
pop
lods
lahf
and
fldcw
sbb
aad
lret
and
ss
cmpsl
jge
xlat
lods
or
pop
fidivs
push
pop
xchg
xor
adc
bound
loop
out
and
imul
in
inc
arpl
mov
pop
shll
jns
sti
pusha
jl
push
inc
ja
pop
data16
jno
bound
mov
jbe
nop
out
jno
lret
push
cwtl
inc
push
push
stos
sbb
into
sub
and
test
idivb
cmpsb
xor
cmpsb
jns
add
into
dec
gs
lahf
scas
sbb
mov
or
pop
shl
fbstp
jns
jno
jo
sub
dec
aad
lret
mov
fildl
rcrl
das
jbe
test
rol
lds
xchg
mov
push
nop
mov
cmpsb
pop
mov
mov
add
jecxz
jo
jo
sub
dec
stc
cmp
fidivl
stos
jns,pt
xchg
sarl
xchg
xchg
jne
nop
sub
in
hlt
fistpl
pop
fildll
scas
fs
nop
outsb
mov
in
mov
mov
pop
xchg
jecxz
jno
jo
sub
fidivl
lret
xchg
aad
mov
testb
push
xchg
jns
or
push
sbb
add
dec
int3
mov
and
aaa
push
and
aas
mov
jle
sbb
imull
lock
lahf
in
push
sbb
lret
sub
pop
jo
cmc
push
sub
lods
sahf
inc
cmpsb
adc
and
dec
pusha
dec
mov
or
ret
dec
pop
out
mov
outsb
push
mov
sbb
cld
adc
shl
pop
std
movsb
test
jne
hlt
bound
push
add
leave
add
or
inc
pop
cmc
push
add
fsubrl
dec
jno
and
data16
pop
repz
lods
pop
fdivr
ljmp
in
mov
inc
sub
cmp
pop
adc
pop
pusha
aad
hlt
mov
xor
pop
pop
mov
dec
sub
pop
push
xor
popa
aas
lods
or
inc
lods
cwtl
jo
aas
mov
imul
push
cmpsl
hlt
addr16
bound
dec
das
or
mov
and
or
push
adc
jne
add
cwtl
jle
pop
outsl
out
push
aad
pop
aas
cli
arpl
push
ss
mov
mov
test
ljmp
inc
jne
rorl
inc
sub
cmpsl
out
push
fstl
xchg
out
xchg
and
push
add
adc
pop
stc
jle
mov
dec
mov
mov
movsl
add
ja
add
andl
inc
pop
jge
lods
clc
xor
js
jns
outsl
adc
jns
pusha
leave
and
push
ds
ljmp
adc
sbb
mov
xchg
insl
pop
mov
sub
hlt
adc
adc
inc
cmp
cwtl
cmpsb
or
push
or
jecxz
jne
jecxz
sub
add
inc
sub
mov
mov
loopne
stos
push
sub
dec
or
mov
and
pop
hlt
test
mov
in
push
mov
nop
aad
xor
cmp
push
cmc
fildl
cmp
xchg
sbb
pop
dec
push
enter
or
adc
cli
outsl
lds
pop
out
aam
mov
and
sub
inc
sub
test
imul
sub
cmp
aad
push
fimuls
push
insl
mov
fnsave
ss
mov
test
js
adcb
dec
push
push
lock
negl
inc
xchg
xor
inc
movsl
inc
or
cmp
fistpll
shl
cmpsl
into
jno
lcall
or
in
push
pop
push
xchg
les
inc
jl
xor
je
xchg
add
imul
pop
lods
arpl
movsl
adc
pop
adc
icebp
jnp
fcomip
pop
and
test
insl
mov
cld
cmp
ss
imul
mov
popa
addr16
xor
xor
ds
pop
cltd
scas
mov
pop
in
ss
lods
adc
pop
mov
mov
fisubrl
jle
jne
sub
jb
or
inc
mov
stc
mov
xchg
arpl
int3
aad
mov
in
sarl
xchg
adc
popa
test
ja
push
cmp
add
mov
nop
cmp
xchg
dec
inc
and
pusha
das
and
and
dec
shrl
out
call
sbb
cwtl
add
xchg
xchg
arpl
js
scas
inc
sub
pcmpgtw
push
outsl
mov
xchg
js
push
lea
push
jne
pop
pop
jno
jge
adc
add
aaa
cwtl
sahf
jb
es
pop
inc
mov
push
sbbb
xor
mov
pop
push
test
cmpsb
xchg
enter
addr16
jnp
push
insl
mov
dec
mov
aad
cmp
aaa
dec
and
inc
out
sbb
cs
nop
rorb
lcall
xchg
shlb
clc
je
nop
adc
sbb
daa
inc
addr16
sbbb
cmp
shr
mov
nop
push
dec
pop
cs
jae
adc
or
mov
xchg
fucomi
cmpsb
pop
insb
in
cmp
das
into
adc
push
lret
pop
sub
les
xchg
aas
push
pop
xor
outsl
mov
jnp
mov
stc
clc
fimuls
and
mov
mov
lret
js
js
xchg
cmpsb
or
xlat
or
sub
orb
outsb
pop
jns
daa
dec
cltd
movsl
adc
js
or
adc
je
iret
sbb
arpl
ss
call
push
dec
xor
cmp
push
pop
xor
das
jnp
stos
mov
sbbb
jmp
push
jmp
fidivl
xor
xchg
xor
cmp
sbbl
fsubs
and
adc
mov
sbb
pop
mov
movsb
lods
scas
sbb
dec
or
int3
mov
enter
sbb
xchg
sbb
pusha
iret
add
dec
push
mov
or
imul
test
add
cld
jns
sub
and
jge
dec
lahf
shll
mov
loope
filds
in
imul
sub
sbb
subps
xor
out
cld
xchg
popf
push
mov
sbb
jle
mov
icebp
or
lret
das
adc
bound
rcrl
pop
cmp
data16
idivl
add
xor
pop
xchg
in
sub
fidivl
popa
icebp
test
fucom
sahf
stos
add
or
xor
int3
xor
movsl
sub
xor
pop
sbb
stc
inc
imul
jns
jne
imul
fnstsw
xchg
xor
sub
aas
pop
and
pop
adc
push
test
repnz
mov
repnz
das
int3
ja
lds
jo
mov
mov
dec
cwtl
mov
sbb
mov
cmpsb
scas
ret
and
pop
adc
xchg
mov
faddl
xor
lock
cmpb
bound
dec
cmpsb
je
je
inc
xor
lea
fisttpl
hlt
repz
pop
lahf
popa
xor
into
push
fisubrs
rcll
sub
test
sub
or
aaa
and
push
ds
push
mov
mov
gs
push
data16
cmpsl
pop
jo
dec
lock
pop
jns
pop
leave
pop
dec
sbb
out
bound
scas
adc
push
enter
in
loop
sbb
mov
push
lahf
and
jecxz
out
cmp
insl
outsl
sar
xor
xor
inc
push
dec
push
cmc
ret
adc
popf
dec
out
xor
mov
test
and
push
pusha
mov
mov
pop
dec
sub
mov
push
mov
mov
adc
outsl
loopne
pavgb
in
pop
outsl
pop
xchg
xchg
dec
bound
and
es
jge
icebp
cmpsl
push
xchg
sub
pop
mov
and
jg
add
orl
repnz
mov
inc
jmp
cmp
inc
out
fiaddl
stos
imul
jecxz
xor
jae
inc
ja
aam
adc
push
jb
imul
cmp
lds
xchg
jae
sbb
push
pop
add
aaa
mov
dec
inc
aam
and
pop
push
dec
xor
mov
push
inc
aam
sbb
pop
adc
xor
loop
cmc
jp
xchg
cmpb
push
dec
lcall
stc
lahf
cltd
outsb
push
out
add
std
lods
scas
mov
je
push
out
xchg
sarl
xchg
leave
js
sub
test
jge
fistpl
adc
movsl
xchg
sub
fs
ljmp
les
pop
mov
jb
in
mov
arpl
cld
xlat
mov
jnp
mov
xor
lcall
xor
lds
pop
pushf
push
mov
inc
jo
inc
pop
jmp
push
aas
sub
jl
push
xor
dec
fwait
sbbl
aad
mov
xor
jbe
in
sbb
dec
test
in
lcall
in
out
test
inc
popf
mov
hlt
cld
xlat
pop
jl
mov
xchg
popa
xchg
mov
inc
fldl
cld
hlt
xor
push
jo
mov
inc
dec
push
call
movsb
fisubl
jno
xor
outsl
sbb
out
mov
lea
rcr
xchg
mov
stc
mov
sbb
out
repz
lahf
scas
movsb
dec
rep
sti
out
fsts
pop
pop
loope
add
jns
and
cltd
adcb
sub
repnz
and
dec
jbe
subb
or
test
cltd
sbb
pop
loope
adcl
out
aam
mov
cmp
lds
dec
sub
lock
test
mov
cmc
jae
mov
leave
push
and
stos
pushf
and
and
fs
cmp
pop
and
jno
nop
cmc
pop
pop
or
push
inc
jnp
and
and
in
fwait
aaa
sahf
dec
insl
or
inc
outsl
mov
shll
cmpsl
add
addr16
xor
pop
popa
fs
mov
mov
inc
mov
push
xchg
out
sbb
jns
dec
or
imul
into
mov
jl
stc
jne
leave
rcll
sub
les
sub
or
xchg
mov
jne
lods
iret
mov
mov
lret
push
insl
cmc
mov
push
sub
imul
in
mov
mov
mov
pushf
jnp
push
inc
ja
testb
xor
sbbb
andl
jecxz
lahf
mov
sbb
sub
mov
cmp
xor
in
mov
push
mov
dec
dec
movsl
or
sub
add
lret
jg
sub
rclb
mov
dec
push
outsb
adc
jmp
bound
mov
test
loopne
mov
sbb
mov
xchg
int3
pop
ret
pop
pop
ret
xchg
mov
clc
cmp
add
jg
adc
decb
cld
cmpsl
insl
push
fsts
dec
adc
push
inc
orl
add
add
add
lds
in
shlb
sbb
push
push
mov
roll
mov
adc
push
add
xor
scas
test
dec
jecxz
sub
xchg
es
popa
mov
test
jbe
rcrl
sub
cmp
cmp
and
test
in
dec
fsubr
and
aas
inc
pop
jg
pop
dec
mov
sub
xchg
add
adc
fisubl
mov
jo
hlt
mov
addr16
inc
sar
ja
insl
xor
mov
orb
pop
test
fwait
jne
data16
cli
pop
mov
int3
roll
xor
test
xor
mov
sub
jle
and
mov
lea
jns
xchg
add
dec
sub
arpl
adc
lds
and
push
push
aas
add
jae
icebp
or
inc
dec
push
das
inc
lods
mov
jp
into
fisubrl
test
pop
and
ja
mov
popf
add
xor
scas
testl
das
xor
je
dec
testb
add
leave
in
mov
ret
cmp
iret
dec
pop
outsb
fmull
cmp
cmp
jae
aas
cmpsb
pop
shr
ret
push
orl
test
outsb
sub
clc
xchg
shl
das
sbb
or
fstl
add
lahf
notl
dec
sbb
popa
insb
cmp
ss
xchg
sub
dec
dec
add
cwtl
adc
xor
cmp
cli
and
mov
popa
int3
ljmp
aaa
inc
jecxz
xor
ja
sub
mov
sub
jne
cli
push
and
outsl
cmc
jnp
outsl
imul
mov
sub
mov
outsb
push
mov
cli
dec
fnstenv
rorb
dec
pushf
push
sub
jo
out
sti
repnz
pop
data16
xor
xchg
dec
sub
popf
jne
xchg
fcoms
cmp
cs
sub
scas
out
dec
xor
hlt
nop
push
outsb
addr16
or
push
test
rclb
pop
adc
popa
jmp
mov
jbe
push
lahf
jae
das
loop
xor
sub
xorb
mov
pop
popa
inc
outsl
cmc
scas
push
decb
subb
mov
rorb
stc
les
outsl
xor
test
test
scas
xchg
or
aaa
jno
int
pop
sti
int
das
cmp
cmp
inc
xchg
imul
test
sub
add
xor
clc
mov
or
gs
adc
mov
std
mov
mov
sbb
pusha
mov
mov
leave
cmp
cmp
mov
jno
fcmovnb
fsubrp
mov
jl
sarl
out
adcb
inc
jg
ja
jno
iret
mov
repnz
adc
orl
mov
popa
movzwl
data16
adc
sub
sub
lods
xchg
push
and
lods
lock
in
clc
xchg
sbb
adcb
lcall
and
movsb
push
adc
pop
scas
das
cmpsl
jnp
cmpsl
mov
ja
mov
fisttpl
scas
dec
and
divb
ficoml
xchg
jo
shll
or
aam
iret
sub
cmp
iret
xor
jge
insl
pop
or
int3
in
mov
inc
in
mov
out
clc
sub
mov
fsub
pusha
sbb
and
add
mov
xor
xchg
out
xorl
jmp
sbb
mov
jl
loopne
xchg
out
stos
sbb
fidivs
push
lret
add
mov
add
out
xor
imul
and
movsl
cmpsl
push
mov
imul
adc
mov
pop
add
outsl
or
push
aam
pusha
push
out
cli
xor
test
leave
sti
mov
mov
ficoml
dec
jns
mov
leave
fwait
pop
add
sbb
push
dec
sbb
ret
fisttpll
xor
aaa
sub
push
mov
mov
scas
ds
sti
mov
mov
inc
test
incb
dec
into
jno
arpl
fbld
xor
in
pop
add
into
xor
test
push
movl
mov
xchg
icebp
mov
cmp
fnsave
push
dec
xor
add
push
cli
shll
out
dec
xlat
jbe
imul
rcrl
cmp
xor
orl
add
sub
jmp
imulb
outsl
add
and
pop
test
sbb
cltd
cmp
jge
dec
shrl
daa
imul
aaa
inc
aam
mov
dec
frstor
bound
mov
push
mov
xchg
lock
addr16
cmpsl
inc
fcmovu
adc
filds
jge
imul
rolb
sti
mov
jnp
xchg
pop
xor
sub
mov
xchg
flds
hlt
pop
lea
dec
lea
xor
in
test
push
dec
jmp
sarb
and
add
cmp
mov
xchg
mov
popf
jl
hlt
les
pop
adc
mov
sub
sub
xchg
mov
int
aad
dec
inc
cmp
ljmp
mov
mov
jge
xchg
pop
push
pop
aaa
call
or
in
repnz
jp
xor
shlb
xor
push
mov
sub
mov
cltd
das
cltd
push
xlat
shlb
out
movsl
mov
dec
pop
popa
gs
roll
mov
sbbl
mov
ret
and
shll
cld
mov
jmp
jg
add
scas
and
fsubs
sub
mov
mulps
push
ficompl
test
hlt
inc
test
cmp
insb
inc
xor
fcompl
pusha
fs
lahf
shlb
addl
xchg
pop
outsl
cmc
dec
bnd
xor
mov
push
out
cwtl
add
inc
sub
mov
push
adcl
xor
and
or
push
gs
fs
add
inc
inc
push
bound
rcrb
jne
jb
pop
pop
dec
mov
push
jns
jnp
std
movsb
or
das
insl
fwait
mov
xor
int
push
in
push
lret
cmp
jp
mov
iret
mov
lea
mov
flds
sub
test
das
push
sbbb
mov
dec
adc
stc
and
imul
sahf
xor
or
lcall
leave
std
fistl
jge
ficompl
add
movsb
pop
jl
mov
ret
mov
xabort
lret
pop
dec
mov
cmp
adc
dec
rcll
out
mov
iret
pop
ljmp
xchg
jnp
xor
sbb
push
jmp
jle
popfw
pop
out
sbb
negb
aad
and
jge
push
loop
adc
xchg
repz
rclb
test
pop
jbe
ror
fnstcw
inc
cmp
aaa
pop
pop
push
xor
nop
mov
mov
xor
xor
addb
sbb
adc
push
cmp
rcrl
out
dec
lret
pop
aad
gs
mov
cmp
rorl
jnp
and
xor
lahf
dec
notl
pop
sbb
pop
mov
stc
pop
dec
mov
cmp
xor
jae
pop
movb
jl
int3
sbb
cmp
test
xchg
dec
jecxz
or
jnp
call
lock
adc
cmp
xor
test
mov
pop
xchg
or
das
mov
jl
rcr
and
adc
xor
test
mov
xlat
cmp
xchg
pop
mov
scas
mov
mov
rorb
dec
pop
dec
mov
cmp
insl
sub
iret
data16
inc
mov
mov
dec
xchg
xor
mov
adc
push
adc
loope
mov
loopne
pop
jp
shl
test
movsl
clc
dec
cld
in
or
lods
lea
mov
es
pop
in
xchg
rolb
in
sahf
add
sub
leave
or
push
xorb
loopne,pn
xchg
ret
inc
add
mov
fdiv
xchg
mov
adc
mov
and
xor
push
pop
aaa
xchg
aaa
in
mov
push
mov
ret
mov
out
push
ret
fwait
gs
in
outsl
mov
nop
pop
fbstp
xor
sub
nop
pop
fiadds
jno
adc
push
sbbl
fwait
rcr
mov
pop
movsl
mov
cltd
mov
dec
lods
test
xor
arpl
jne
push
sahf
cmp
aas
bound
in
insl
pop
and
push
pop
xor
push
xchg
movsl
and
mov
test
push
sbb
mov
jns
mov
and
sahf
cmp
sbb
push
sahf
shlb
mov
loop
dec
lds
xchg
lock
sbb
xor
leave
pop
sub
or
mov
mov
mov
js
mov
cwtl
fsubs
xchg
pop
adc
aad
inc
sub
or
inc
add
dec
jns
out
xor
aas
mov
and
cmp
mov
push
dec
insl
mov
sub
pop
mov
cltd
adc
cmp
rcrb
push
sti
sahf
add
test
mov
xor
icebp
jae
repz
sub
cmpl
not
sub
cltd
out
gs
sbb
pop
jmp
push
in
movb
push
insl
jbe
daa
leave
aaa
mov
add
mov
cli
jp
lahf
push
xor
add
outsl
fldenv
jecxz
mov
sub
xor
in
and
jo
mov
add
leave
mov
mov
scas
es
jns
shrb
pop
lea
ds
movl
mov
cmpsl
sbb
scas
popa
fcoms
enter
xchg
add
cld
push
loopne
scas
gs
or
and
adc
addr16
jp
pop
lods
pop
jge
loop
into
mov
pop
std
pushf
add
iret
jl
lds
lret
xchg
adc
xor
xor
xor
inc
mov
dec
sub
fldenv
sub
xchg
sbb
inc
cli
push
fidivrl
xor
push
dec
adc
test
into
mov
test
cmpsb
mov
push
add
pop
leave
loope
xchg
popl
push
cmc
mov
sti
pusha
xor
pop
dec
jp
xchg
xor
arpl
popa
adcb
xchg
movsb
push
inc
mov
xchg
nop
mov
sti
pop
je
mov
aaa
outsb
or
or
xor
push
leave
iret
data16
add
roll
mov
cmp
in
dec
cmpsl
sub
daa
jl
push
out
push
stos
fisttpl
and
aaa
push
cmpsb
gs
push
lahf
xor
pop
sub
mov
inc
push
and
testb
mov
mov
sti
in
dec
inc
sbb
cmpsl
xor
adc
insb
notb
add
outsl
xchg
call
or
pop
test
xchg
cmpsl
inc
int
jmp
adc
xor
roll
mov
push
push
lds
and
cmp
pop
xchg
lds
daa
aad
sub
inc
cmp
shl
fmulp
or
xor
pop
pop
and
pop
jecxz
xor
mov
push
xor
lcall
insb
and
mov
mov
jle
pop
in
shrl
xchg
ljmp
adc
ficomps
jp
adc
and
les
sbb
dec
xor
push
das
repnz
lods
mov
cmp
and
in
push
jbe
sbb
and
mov
pop
mov
xchg
cmp
push
imul
xchg
je
sub
sbb
fiaddl
mov
add
test
adc
xor
roll
call
test
sti
ja
int3
sub
pop
xchg
ret
xor
mov
in
sbb
add
inc
add
cmc
mov
data16
fstpt
xor
pop
in
and
scas
jge
push
stos
arpl
movsl
movsl
push
sbb
push
ret
pop
es
stos
stos
and
or
xor
dec
dec
sub
sbb
cmp
rclb
or
arpl
movsl
test
push
xchg
test
sbb
hlt
push
pop
jae
dec
jge
push
imul
arpl
push
bound
dec
mov
dec
xlat
jae
daa
scas
add
lahf
cmp
ja
mov
mov
and
or
dec
scas
mov
or
push
cltd
or
stos
dec
jp
lods
cmpsl
xor
imull
lcall
sti
mov
pop
sahf
popf
sbb
add
loope
mov
mul
test
leave
orb
and
inc
hlt
test
xchg
sbb
movsl
lods
jbe
hlt
movsb
lret
dec
lret
adcb
xchg
sbb
xor
sub
pop
mov
and
pop
pop
sarb
lods
stc
leave
cmp
cmc
popf
and
sbb
movsl
mov
pop
or
push
repz
dec
pop
addr16
ds
aad
pushl
and
bnd
addr16
pop
inc
clc
rol
cli
repz
push
push
popa
aas
sbb
mov
nop
ret
xchg
and
loopne
push
or
mov
pop
sub
movsb
push
pop
push
mov
repz
adc
push
leave
dec
div
and
jbe
movsl
xchg
cs
xchg
adc
data16
insl
add
mov
push
out
pop
xor
std
add
add
lods
mov
mov
push
mov
and
jnp
cltd
dec
sub
cwtl
xchg
mov
mov
shlb
mov
andb
cwtl
cmp
insb
dec
adc
pop
jns
xchg
push
adc
scas
ret
and
push
fldt
js
cltd
inc
iret
adc
leave
jo
cltd
add
cltd
jle
mov
cmp
iret
push
mov
je
addr16
gs
int
mov
pop
aaa
lods
xor
lea
jecxz
cmpsb
lods
ljmp
fidivs
push
andb
movsb
lods
lahf
or
mov
xchg
bound
cmpsb
adc
dec
fdivs
test
adc
or
inc
push
xlat
xor
gs
movsl
add
fs
add
pop
pop
sub
sub
bound
je
test
sbb
pop
frstor
repz
std
pop
mov
pop
add
dec
and
mov
sbb
test
clc
fwait
mov
iret
xor
shl
scas
roll
test
dec
mov
rolb
mov
push
xor
push
addb
and
shrb
movsl
popa
xchg
fcoml
mov
add
mov
or
inc
push
mov
lds
mov
xor
mov
xchg
cmpsl
rcll
insl
xchg
xor
and
rcr
roll
nop
mov
mov
push
pop
sbb
pop
cmp
aaa
xor
mov
xchg
pop
pop
test
aaa
jg
ds
xlat
cmpsb
mov
mov
dec
xlat
push
pop
aas
cs
cmp
adc
mov
shlb
outsl
shlb
rcll
cmc
daa
push
in
aaa
jge
in
jp
mov
outsb
and
testl
std
push
icebp
or
pop
pop
pop
cmp
add
mov
sbb
in
out
in
sub
and
arpl
movsl
ljmp
or
sub
pop
cmc
push
data16
int
aas
mov
fistpll
pop
jge
fidivs
push
mov
mov
push
xor
push
daa
mov
pop
cmpsl
and
adc
lods
clc
jl
or
int
lods
inc
jae
mov
inc
mov
jb
jl
ja
int
loop
leave
push
xchg
cmpsl
test
pop
pop
mov
jg
into
push
inc
xor
dec
ja
lret
jmp
add
mov
mov
jo
mov
xlat
enter
cs
les
mov
in
mov
insl
add
in
push
sub
jne
dec
or
push
cmp
pop
ffreep
xchg
xchg
ret
lret
add
cmp
xor
add
rol
out
mov
adc
sub
dec
xor
jns
xor
xchg
jle
popa
sbb
push
fimull
outsl
movsl
lea
lret
sub
sub
sahf
sbb
fsubs
xchg
call
in
lret
insl
xchg
lcall
jge
or
lahf
xchg
sub
pushf
hlt
sarb
jmp
aaa
fsubs
lods
add
or
jns
sub
arpl
test
pop
jnp
and
pusha
sbb
xor
push
cmp
fstpt
mov
mov
std
or
xchg
cmpsl
mov
cmp
adc
ret
ja
xlat
inc
push
jae
mov
xchg
pop
pop
xor
scas
inc
push
jno
sbb
xchg
lahf
add
mov
sub
cmp
xor
xchg
pop
scas
sbb
mov
push
bound
in
scas
shl
sbb
xchg
push
cmc
jae
xor
pop
rorl
dec
jo
xor
hlt
and
ljmp
imul
jg
push
inc
lock
in
popa
out
push
jb
xor
jnp
gs
mov
mov
in
adc
mov
pushf
xlat
push
xor
add
add
fwait
adc
ret
sub
test
sbb
jle
sti
sbb
shrb
add
adc
xor
ljmp
xchg
xor
mov
aad
popa
adc
sub
mov
lret
cmpsb
fdivl
cmc
lds
movsb
out
cltd
cmp
and
ror
dec
mov
mov
mov
mov
lods
push
dec
push
or
inc
sbb
icebp
or
bound
xchg
push
rcll
mov
fwait
add
or
pop
sarb
dec
jne
cmpsl
ja,pn
pop
pop
mov
dec
mov
xor
in
in
insl
ss
movsl
rol
xor
xor
push
jnp
push
mov
adcb
mov
mov
lods
cmp
enter
js
sbb
popf
pop
cwtl
fwait
pop
push
scas
ljmp
jge
pop
stos
inc
pop
or
xor
dec
pop
mov
push
dec
pop
xor
sbb
jl
es
mov
loope
pop
das
movsl
add
push
pop
push
aaa
xor
push
test
xor
pop
outsb
cmp
cli
nop
aaa
sahf
cwtl
xor
pop
insl
ficoms
xchg
scas
in
loop
pop
push
jge
shlb
loopne
cld
imul
and
pop
in
sbb
jbe
dec
nop
pop
and
pop
mov
jmp
movsl
jle
out
cld
jnp
mov
xor
lock
insb
data16
out
stos
insl
pop
xlat
jl
mov
jp
push
sub
movsb
in
mov
mov
adc
sahf
jl
insb
loope
mov
mov
adc
out
leave
mov
adc
adc
mov
sti
into
mov
xor
xor
mov
insl
jecxz
ds
sbb
sbb
or
lret
adc
test
hlt
jl
lahf
and
fwait
mov
jecxz
sbb
add
push
xor
mov
sub
repz
xlat
xor
rcrl
popa
mov
sbb
push
rcll
imul
sbb
popf
pop
aaa
xor
sarl
fs
gs
aaa
popaw
and
dec
mov
insl
push
mov
sbb
hlt
mov
sbb
in
std
xor
mov
stos
ljmp
mov
dec
inc
stos
sti
xchg
aaa
pop
xchg
fistl
xchg
pop
pop
insl
sbb
cli
xchg
bound
popa
std
lods
xchg
xor
sub
lods
repz
jg
shr
cwtl
xor
scas
lds
divl
out
xchg
cmp
imul
adc
add
pop
ss
inc
test
jg
rorl
add
pop
xchg
dec
paddsw
inc
icebp
nop
add
pop
add
neg
mov
dec
cmpsl
inc
add
sbb
bound
rclb
push
xchg
push
cmp
aaa
jmp
fs
jo
push
push
mov
pop
test
dec
addr16
add
pmaxsw
mov
push
ja
dec
xchg
lods
add
mov
daa
gs
nop
add
mov
push
nop
cmp
lret
inc
jle
shl
push
fidivrs
jle
push
imul
xor
mov
mov
and
push
mov
jg
sub
adc
test
push
mov
ds
add
sub
pop
xor
pop
inc
mov
rol
arpl
pop
inc
jmp
dec
add
hlt
sbb
cld
xor
add
scas
mov
mov
incb
pop
xor
fs
sbb
xor
add
inc
push
cmp
xchg
mov
movsb
push
mov
push
xor
enter
pusha
dec
inc
clc
mov
std
jb
sub
push
add
jl
lods
iret
mov
or
and
in
pop
add
shl
lds
dec
jbe
xchg
imul
pop
ds
mov
sbb
cmp
test
insl
mov
lcall
test
leave
fbstp
push
adc
sub
dec
mov
popf
push
mov
jecxz
cmp
int3
dec
jae
sbb
xchg
fstl
dec
movaps
sub
icebp
sarl
xorl
in
and
inc
sub
inc
sub
xchg
xor
jae
mov
and
push
pusha
lahf
push
outsl
adc
fwait
xchg
das
mov
mov
pop
insb
stos
mov
jne
sbb
xor
insb
dec
call
stos
js
adc
call
push
mov
jg
mov
repz
mov
cmp
xorl
repnz
daa
xchg
push
mov
aas
test
mov
sti
lcall
pop
outsl
push
in
test
int3
fidivrl
add
ret
pop
push
jnp
sbb
insb
mov
inc
imul
mov
sbb
test
jge
nop
jns
fwait
pop
xchg
popf
jmp
leave
sti
lcall
bound
pop
dec
js
jno
int3
dec
fistl
lret
lea
in
in
mov
and
pop
int3
xor
dec
mov
pushf
mov
pop
or
and
subb
xor
lea
mov
fdivrs
jnp
in
aas
adc
lahf
pop
loopne
sub
mulb
pop
dec
mov
inc
outsb
or
or
clc
adc
jp
jmp
arpl
sbb
xor
and
mov
inc
mov
push
ljmp
push
xor
and
add
int
clc
mov
icebp
fnstsw
xchg
xor
mov
sbb
mov
fisttpl
push
ficoml
inc
loop
incb
mov
lods
js
pop
mov
or
xchg
inc
push
mov
push
xchg
xchg
mov
imul
add
loope
jmp
sbb
aad
cld
fcmovnbe
add
pop
daa
ljmp
add
adc
pop
sub
push
push
push
inc
faddp
or
movsb
or
movsl
cld
add
loopne
or
jne
roll
lods
mov
push
sar
dec
sub
jne
scas
mov
xchg
xor
inc
pop
pushf
fwait
xor
sbb
xor
push
dec
cmpsb
add
cmp
mov
stos
scas
mov
aam
dec
ret
or
out
js
movd
dec
jae
fists
jle
cmc
mov
push
mov
xor
ds
sarl
jns
or
cwtl
xor
cmp
lret
jge
mov
push
inc
bound
std
mov
and
or
lea
xor
cmp
mov
add
xchg
int3
jp
sbb
cmp
lds
sbb
sub
cmpsl
jno
shrl
in
sub
sbb
or
mov
cwtl
jnp
enter
cli
mov
les
push
adc
es
jge
inc
outsb
je
fsubp
lods
mov
and
enter
out
stc
addb
jno,pt
jno
mov
mov
ret
and
ffree
mov
pop
fld
jbe
das
sbb
jle
jmp
dec
sahf
movsl
xorl
enter
and
jbe
stos
mov
mov
scas
gs
jl
xchg
mov
clc
icebp
aad
push
xor
mov
dec
xlat
pop
add
mov
insb
arpl
push
test
xchg
arpl
mov
push
sbb
negb
pop
stos
mov
shlb
negb
add
jb
jo
adc
scas
out
and
pop
stos
in
jno
mov
inc
xlat
test
pop
sbb
je
rorb
or
jmp
sbb
jae
add
das
adc
pop
icebp
jo
fidivrs
lret
xor
dec
mov
cmc
lret
fistl
fnstenv
adc
pop
xor
mov
daa
fstpl
roll
jge
test
icebp
icebp
popa
mov
and
mov
dec
inc
mov
bound
xor
pop
and
add
ljmp
fimull
xor
sbb
pop
lods
mov
dec
call
mov
stos
inc
cmpsl
xor
cmpsb
inc
adc
lods
dec
rcrl
push
dec
popa
stos
jno
gs
mov
mov
repz
mov
into
sub
fwait
loope
inc
pop
stos
mov
test
cmp
cmpb
mov
aam
push
pop
scas
inc
jnp
adcl
jae
lods
imul
sbb
jge
in
jnp
push
int
mov
pop
stos
and
mov
into
xchg
fwait
push
jmp
icebp
pop
push
sti
aas
popa
sub
sahf
adc
pop
mov
adc
enter
mov
dec
sbb
and
adc
dec
pop
mov
int
mov
andl
in
lods
ja
fs
dec
mov
mov
bound
push
jno
xor
cmpsl
das
cmp
xchg
data16
cld
and
out
mov
push
push
mov
fildl
ret
stos
inc
sbb
sbb
inc
xor
or
cmp
push
int
addr16
jbe
jge
cmp
stc
rol
xor
addl
inc
xchg
dec
pop
jo
lcall
and
repz
jmp
test
mov
and
out
add
xor
gs
out
lahf
js
mov
jae
jo
mov
push
rcrb
add
push
jmp
std
xor
xlat
push
mov
popf
or
test
dec
push
popa
ds
cltd
mov
cwtl
ds
fstpl
inc
fistps
movsl
pop
adc
pop
jbe
mov
xor
mov
sbb
adc
mov
jnp
out
inc
cmp
jl
and
test
mov
add
cmp
scas
mov
ljmp
sbb
mov
mov
sub
fmuls
mov
sahf
jno
cltd
adc
and
es
jl
lahf
cmp
icebp
mov
es
mov
sub
cmc
xorb
push
jg
sub
pop
imul
cmp
fwait
cmp
stc
sbbl
icebp
and
push
movsl
xor
mov
fbstp
mov
xor
sbb
out
sub
popf
fs
sub
scas
add
add
movsb
mov
sub
insl
mov
subb
xchg
jmp
push
movsb
shr
bound
pop
cli
por
dec
movsl
test
sub
pop
rolb
pusha
fwait
push
filds
cmp
test
sbb
xor
adc
inc
mov
outsl
push
mov
iret
jnp
push
stc
into
stc
jo
fdivs
jg
xor
fbstp
imul
jge
aad
call
push
push
daa
pop
pop
lods
fnstenv
xor
loopne
enter
add
sbb
jno
ret
adc
jne
xor
mov
push
pop
xchg
cmp
mov
jae
xor
and
jbe
leave
pop
data16
xor
pop
test
and
inc
mov
ljmp
push
addl
cmp
dec
insb
or
shl
shr
xchg
sbb
scas
jnp
jmp
mov
mov
cmpl
mov
cmp
dec
mov
dec
mov
mov
aaa
imul
cmp
adc
rcl
and
das
clc
out
push
dec
movsl
push
xchg
pop
jns
or
inc
pop
lea
inc
fwait
out
mov
sysenter
jbe
mov
fcmovnb
lds
cld
mov
xor
ret
popa
push
stos
ja
push
jmp
mov
mov
add
jmp
loope
cmp
ret
stc
std
xor
jbe
inc
imul
mov
int
xlat
push
inc
repz
add
push
sub
push
and
imul
jo
add
pop
xor
out
sub
mov
mov
sub
push
roll
inc
icebp
lcall
in
les
mov
es
pop
push
or
mov
fsubl
or
jne
and
jne
mov
adc
call
ljmp
popf
test
push
mov
data16
or
dec
mov
mov
inc
fdivr
pop
dec
cs
xchg
dec
cmpsl
dec
daa
pop
divl
clc
inc
daa
popa
in
adc
push
lods
sub
mov
mov
mov
movsl
push
mov
or
dec
sbb
addr16
xchg
xchg
pop
inc
pop
shrb
jle
repnz
mov
add
push
ja
call
ljmp
mov
gs
mov
push
pop
fimuls
or
sub
push
or
cwtl
xchg
dec
scas
cmp
filds
dec
cltd
sahf
into
push
leave
js
jmp
out
fidivl
aad
adc
adc
mov
in
lahf
inc
sub
pop
adcl
js
icebp
movntsd
or
clc
pop
pop
out
fisubrs
bound
mov
jne
in
lods
mov
sbb
gs
push
insl
das
fisubrs
pop
pop
mov
mov
xor
pop
pop
cmp
stos
adcl
sub
jno
jecxz
xor
jle
or
aam
or
cmp
sahf
fpatan
out
sbb
mov
xor
inc
sub
inc
cmp
cmp
daa
fdivs
xchg
movsl
pop
add
mov
and
and
fsubrp
lods
sbb
stc
outsl
jne
xchg
insl
xchg
xorl
xor
lcall
mov
fnstenv
or
inc
adc
mov
test
push
jns
das
shll
pop
lea
mov
mov
test
cmp
xchg
enter
add
cli
daa
ja
push
test
fldcw
imul
stos
xchg
ds
push
jno
push
in
adc
fstps
dec
div
lea
adc
pop
jg
pop
cmp
sti
enter
andl
mov
leave
mov
fs
adc
mov
aaa
mov
sub
lock
es
mov
and
movsl
stc
sbb
sub
sbb
enter
dec
daa
int3
pop
adc
xor
inc
in
mov
mov
and
pop
sbb
imul
iret
xchg
icebp
dec
sub
shll
pop
mov
jmp
movups
sarl
pusha
inc
cmp
pusha
sbb
test
cmp
pop
lods
mov
jg
imul
loopne
imul
adc
lods
pop
fdivp
ret
popa
cmp
mov
orb
add
and
xchg
xchg
enter
push
pop
pop
in
mov
cmp
xchg
movsb
stos
cmp
cmp
in
xchg
out
cmpsl
sub
add
sbb
leave
scas
pushf
or
push
mov
shll
mov
or
fidivs
xchg
gs
cmpb
rolb
test
icebp
push
icebp
mov
outsb
jae
ja
mov
test
push
pop
add
popf
loop
xor
jmp
xor
gs
xor
pop
out
and
jge
popa
mov
adc
cmp
mov
sub
call
out
jno
cmc
mov
ret
pop
lods
sbb
jmp
nop
mov
jne
ss
sbb
loop
fisttpll
xchg
xchg
pushf
xchg
xlat
or
cltd
pop
xchg
loopne
or
sub
or
dec
mov
sahf
shll
iret
in
lods
outsl
nop
test
out
imul
fdivl
pop
sbb
bound
adc
rcrl
push
jmp
fs
insb
cli
sub
cmp
jl
rcl
inc
mov
jae
push
cmp
cmp
mov
mov
xchg
jbe
ljmp
das
xchg
mov
xor
xor
sub
imul
jnp
mov
imul
cmpsb
sub
jge
enter
cmc
fnstenv
mov
xor
nop
test
add
cmp
xchg
sub
sbbb
sbb
insl
sbb
outsb
xor
int3
in
mov
hlt
inc
dec
jae
cwtl
or
sbb
xor
and
popa
ret
or
lcall
shll
sub
in
jge
lods
jb
push
mov
mov
push
xlat
stos
cmp
lock
sbb
out
or
add
imul
lea
outsl
shr
icebp
int3
dec
sarl
cmp
test
cmp
jns
dec
push
int
in
push
cmp
jg
push
shll
out
stos
cs
mov
addr16
sbb
lcall
sbb
sbb
pop
add
dec
jo
aad
or
sbb
jecxz
movaps
cmpsb
sbbb
inc
test
pop
push
gs
xchg
and
in
push
fst
into
jo
aad
cmp
sbb
jo
adc
clc
scas
pop
mov
adc
std
insl
mov
nop
cmpsl
add
push
mov
dec
hlt
pop
inc
out
sub
jmp
cmp
fsub
pop
arpl
push
sbb
cmp
es
add
lahf
push
mov
mov
add
je
pop
mov
mov
and
hlt
js
mov
adc
lret
adc
fistpll
jo
insl
imulb
sub
xchg
fistpl
push
lcall
fmull
testl
xlat
hlt
clc
or
cld
divl
lods
push
cs
icebp
sub
nop
icebp
mov
cmp
push
imul
popf
xchg
fwait
xchg
icebp
jmp
out
hlt
push
cmpsb
pop
ja
scas
xor
sbb
insb
xor
xchg
rcrl
mov
sbb
out
mov
push
cmp
sbb
in
push
xor
enter
popa
popa
out
sbb
pop
and
repz
dec
lahf
in
jp
sbb
and
sub
fldcw
and
hlt
pushf
pop
cmp
loopne
cmp
adc
movb
inc
icebp
pop
mov
xchg
push
in
push
ss
sti
pop
clc
lods
cmp
sbb
aam
push
popf
int
adc
aas
sahf
ds
inc
mov
push
dec
dec
xor
or
ja
test
jle
cltd
sbb
jne
xor
ds
jmp
pusha
pop
xchg
add
mov
jno
mov
popf
mov
inc
xchg
cwtl
or
xlat
pop
insb
fldl
rolb
loope
out
xor
xor
aad
add
pop
sub
call
push
cmp
inc
xor
hlt
or
sub
fadds
pop
lds
imul
pop
iret
repnz
or
pop
decl
push
nop
pop
movsb
push
xor
mov
xor
sarl
xor
and
push
rcrl
xchg
int3
sbbl
lcall
jle
pop
decb
pop
sub
cld
cmc
sub
hlt
je
mov
ret
xor
ds
pop
in
popa
adc
nop
pop
pusha
add
mov
sbb
incb
inc
addr16
add
cmpsl
shll
inc
add
xorl
sub
loope,pt
popa
push
in
mov
mov
mov
shr
neg
and
das
fwait
xchg
les
or
sbb
sub
lret
inc
lea
and
and
loop
out
sub
repz
add
jmp
pusha
cmp
cs
pop
xor
pop
mov
dec
xor
pusha
jae
add
push
push
jnp
test
add
adc
pusha
add
fisttpl
jns
pop
popa
std
and
out
pop
mull
mov
cld
outsb
mov
xchg
jp
mov
inc
jecxz
xor
movsb
nopl
jns
and
hlt
sub
push
and
enter
insb
int
jmp
cmpsl
add
pop
push
dec
sbb
movsl
ss
mov
fs
pop
call
mov
mov
leave
idivb
pop
scas
sti
mov
cmp
stos
jp
movsb
push
mov
jecxz
es
daa
nop
test
mov
inc
jb
fidivs
add
mov
xchg
incl
lcall
mov
push
xchg
pop
mov
leave
fidivrl
fstl
in
sbb
pop
pop
push
and
movsl
mov
sahf
jecxz
mov
xchg
jg
push
inc
push
mov
sub
imul
out
inc
hlt
ljmp
dec
mov
pop
frstor
or
into
rorl
rclb
push
orb
pop
call
inc
add
arpl
mov
mov
sbb
pop
lods
movsl
xor
add
jno
xchg
pusha
mov
sbb
and
dec
daa
cmp
das
inc
lret
jno
rcrl
insl
jbe
addr16
mov
pop
movsl
dec
mov
mov
pop
adc
pop
inc
cmc
sub
mov
cmp
mov
dec
add
test
or
outsl
xchg
adc
mov
rcrl
lods
call
add
insl
lea
aaa
shrb
movsl
adc
jmp
cltd
mov
add
lret
mov
add
outsb
lret
lcall
pushf
aad
push
testl
clc
mov
jno
jnp
jno
inc
mov
xchg
iret
lods
scas
pop
dec
icebp
xchg
add
mov
arpl
iret
pop
dec
xor
adc
mov
pop
mov
add
loope
ss
pusha
lret
xchg
xor
ficoms
mov
jne
dec
xor
sub
push
cmp
jns
push
xchg
jns
xor
mov
mov
ret
jno
mov
in
repnz
or
lods
hlt
push
add
call
jo
cld
lock
int3
cmp
lea
mov
and
dec
push
movsl
imul
mov
movsb
sub
add
mov
mov
or
out
push
scas
lret
leave
mov
cld
pusha
inc
push
pop
nop
mov
addl
repz
sbb
out
ret
xchg
test
mov
xchg
dec
imul
mov
pop
pop
loope
jl
into
push
xor
inc
mov
dec
movsl
rclb
int
lock
cmpsl
int3
lds
or
in
xor
dec
jge
dec
insb
sub
jb
cmp
pop
pop
push
xchg
test
sarl
inc
and
out
mov
outsb
sub
xchg
rcrb
into
ficoml
adc
fistpll
lock
pushf
cmpsb
xchg
sub
repnz
out
cmp
cmc
popa
jns
xchg
mov
std
sub
jbe
rolb
data16
shrl
js
sbb
cld
pusha
icebp
inc
push
inc
clc
push
pop
leave
pop
xchg
xchg
dec
jb
cmpb
ja
dec
adc
pop
sti
push
push
fnsave
or
lods
sahf
jns
in
mov
lret
xor
cmpsl
clc
dec
pop
mov
dec
push
aad
add
jp
jle
add
iret
mov
sbbb
scas
out
roll
cmp
pop
mov
and
nop
andb
mov
sarb
cmp
repnz
xor
clc
mov
sarl
cli
daa
jge
sub
loope
mov
pop
sub
add
mov
daa
adc
pop
mov
call
fcoml
mov
in
sub
add
pop
addr16
aas
xchg
pop
pop
lods
loopne
push
add
in
xlat
mov
and
dec
in
out
cmpsl
mov
out
test
pop
or
loop
sub
adc
sub
lods
scas
andb
mov
mov
lahf
mull
jge
rorb
mov
or
lea
leave
xlat
lds
out
jle
stos
add
xchg
cs
xor
rcll
lcall
lods
aad
sti
mov
and
lods
mov
inc
and
mov
cmp
xor
shll
sahf
mov
sbb
jo
daa
cmpsl
pop
leave
nop
shrl
cmp
test
cs
mov
jae
add
cmc
aas
mov
and
sahf
rorb
inc
test
mov
test
ja
push
lea
dec
push
iret
movsl
lea
jnp
jns
imul
aad
dec
add
lds
gs
inc
int
mov
jno
sbb
scas
xchg
jno
push
jb
push
xchg
out
mov
cmp
aas
test
mov
enter
mov
pop
push
jg
push
jmp
add
dec
scas
push
out
push
jns
daa
iret
ja
pop
xor
movl
fdivp
mov
pop
dec
out
aad
pushf
aas
cmp
fcoml
or
outsb
leave
inc
cltd
mov
enter
pop
lahf
mov
xor
ljmp
pop
lea
stos
xchg
jle
jmp
je
jno
dec
xor
and
push
push
inc
xchg
add
pushf
sub
pop
and
aas
adc
jl
in
es
in
push
xor
or
cmc
inc
inc
int3
push
fildll
add
mov
inc
cmp
pop
xor
sbb
test
outsl
gs
add
sub
sbb
jge
dec
gs
test
sub
ljmp
jnp
ret
dec
dec
mov
loopne
cmp
jecxz
mov
pop
cmpsb
cmpsl
jo
xchg
xchg
jg
sbb
adc
xchg
xor
shr
mov
outsl
mov
push
xor
frstor
sub
lods
mov
popa
jnp
insb
lret
add
or
add
dec
jae
pop
sti
sbb
sbb
xor
adc
out
es
mov
out
jb
test
sub
inc
sub
mov
testl
dec
mov
lods
xchg
adc
out
cli
cli
cmp
ficompl
add
xor
mov
int
push
mov
mov
rcr
jmp
je
xor
fidivrl
mov
inc
outsb
in
pop
jmp
outsl
fimull
push
push
adc
jmp
cmp
cmpsl
adc
push
fistl
mov
hlt
das
jb
inc
jb
mov
pusha
xor
push
mov
pop
jmp
dec
jbe
mov
pusha
aad
jp
shr
xchg
sbb
sti
getsec
and
imul
mulb
pop
or
push
cld
shl
lods
bound
stc
daa
mov
pop
lock
or
scas
jge
inc
fs
jns
fists
data16
out
add
shrl
stos
sbb
cmp
and
inc
bound
jecxz
pop
sub
pop
shlb
jno
rcl
adc
add
fwait
jge
dec
cmpsb
fwait
in
sub
lret
cmova
push
clc
fwait
push
data16
clc
xor
test
mov
cmpsb
xchg
pop
popa
rol
ljmp
in
pop
mov
mov
inc
xchg
lret
mov
loope
or
pop
sub
dec
mov
fwait
mov
mov
outsl
jns
dec
int3
repz
mov
std
sbb
out
pop
pop
out
sbb
inc
and
loopne
adc
jg
sahf
sub
lods
cmp
dec
mov
negb
int
mov
mov
pop
mov
mov
sub
fs
loope
int
adc
loop
xlat
push
adc
pop
push
mov
dec
mov
popa
push
push
inc
push
sbb
sbb
push
sarb
shrl
push
fidivl
in
rcr
into
dec
push
cmp
pop
out
mov
add
mov
mov
inc
int
mov
cmc
hlt
aaa
movsl
mov
or
mov
lcall
pop
jnp
movsl
icebp
sbb
les
movsl
xor
xchg
mov
lods
sbb
mov
xor
outsb
adc
xor
imul
jae
aad
add
push
enter
sarb
mov
in
arpl
mov
xlat
pusha
sbbl
imul
out
jno
xchg
imulb
xor
int
push
pop
shll
rorl
mov
xlat
fisttpl
in
pop
test
add
lahf
sbb
fldt
xchg
push
icebp
push
inc
jne
movsl
nop
idiv
push
cmp
addl
or
dec
popf
adc
in
popf
adc
insb
jge
jb
int
in
dec
xlat
jmp
fnsave
popf
adc
inc
shll
icebp
sbb
aas
ret
push
sbbl
sub
mov
rcll
sbb
popf
roll
adc
pusha
mov
popa
pusha
lahf
popfw
sarb
mov
dec
out
mov
xor
push
mov
jecxz
rcrl
add
lods
cmpsb
sub
icebp
pop
pop
mov
mov
jae
pushf
sbb
push
cmpsl
adc
mov
sti
inc
ret
add
xor
cld
jae
cmpsl
dec
cmpsl
push
mov
mov
adc
xor
shrl
add
aas
loopne
cs
inc
push
movsl
fld
inc
sub
sti
lahf
xor
popa
sub
sub
repz
adc
dec
pop
or
popf
or
push
icebp
xor
imul
shlb
test
mov
sti
add
inc
ljmp
adc
lds
pop
sub
mov
insl
jge
aaa
add
data16
cld
repz
xor
mov
sarb
fisttps
out
es
pop
xchg
out
lahf
pop
push
jo
add
inc
rorb
movsl
and
scas
popf
mov
xor
out
jo
xchg
mov
movsl
lcall
jbe
ds
sbb
stos
jno
jbe
or
clc
mov
and
pop
loopne
frstor
cmp
jg
dec
cmpsl
stos
jno
jno
push
jmp
xchg
rcrl
cmc
shlb
mov
push
stos
sub
pop
push
xor
pop
push
mov
jge
test
inc
sub
pop
mov
sbb
mov
sub
mov
shll
lea
mov
and
outsb
call
shr
sub
jl
idivb
repz
das
add
add
movsl
mov
sub
add
in
sub
push
adc
add
outsl
hlt
into
inc
movsb
sub
movl
pop
mov
movsb
xlat
push
push
xor
mov
xor
nop
loop
xchg
push
pop
dec
scas
jne
outsl
inc
and
vaddps
and
xlat
inc
jae
mov
jecxz
iret
daa
fdivs
pop
mov
aas
pop
loope
dec
test
int
push
lea
xchg
xor
pop
sbb
daa
data16
imul
scas
imul
loope
dec
mov
dec
fnstsw
das
dec
imul
sub
stos
pop
outsl
gs
sti
add
and
jo
fwait
clc
outsb
mov
arpl
xchg
inc
pop
sbb
or
dec
cmpsl
fmull
adc
lahf
pop
inc
mov
pop
cltd
cmc
leave
call
jno
jnp
or
cmp
inc
aaa
mov
fstpl
es
pop
xor
dec
lcall
pop
xchg
mov
and
dec
xor
gs
enter
pop
and
mov
call
xor
popa
stos
mov
adc
push
add
mov
mov
jle
repnz
jo
jo
insl
mov
cmc
sbb
mov
push
fsubs
xor
push
filds
cvtdq2ps
movsb
loope
jne
aam
jo
ds
hlt
or
push
sarl
xor
xchg
mov
pop
and
movsb
outsl
cmpsl
fwait
stos
lea
popa
push
std
dec
xor
jl
xor
shlb
outsb
sub
rcrb
icebp
std
sub
sbb
lods
rolb
pop
jg
cmp
fwait
mov
add
stos
nop
aaa
xor
sbb
ret
in
pop
lock
pop
sub
mov
js
cmpl
pop
aaa
stc
mov
test
adc
xchg
or
and
nop
inc
fsts
in
jge
mov
lock
mov
add
lcall
leave
jl
and
sbb
sub
sub
inc
push
push
sub
sti
rcr
ret
push
test
sub
jecxz
inc
insl
mov
inc
pop
mov
push
gs
mov
inc
sbb
cmp
inc
push
cltd
or
int
pop
bound
or
mov
inc
shll
cmp
sub
icebp
add
mov
int3
push
ss
pop
mov
push
sub
pop
mov
cmpsl
pop
mov
fwait
insb
jg
xchg
sbb
push
adc
push
std
loop
push
mov
enter
sub
out
dec
in
jno
or
ds
or
rclb
insl
insl
mov
inc
rorl
push
push
add
pop
mov
jl
lock
push
mov
push
mov
add
shrl
outsl
cmc
or
std
scas
pop
fists
cmp
cltd
stos
aad
inc
or
jp
adc
inc
minps
shlb
int
jge
lret
xor
pop
or
std
lods
aaa
rcrl
arpl
inc
sub
faddp
test
jno
mov
int
or
pop
mov
movsb
jmp
iret
dec
push
das
sbb
jl
lahf
sahf
aas
sti
pusha
fldenv
loop
nop
imul
mov
xor
inc
or
nop
fldenv
mov
leave
xchg
fstpl
sub
jecxz
rorb
inc
mov
ret
sub
adcl
jae
fwait
adc
inc
popa
push
es
cwtl
je
pop
dec
test
or
ffree
mov
call
lcall
dec
sbb
dec
sub
dec
lea
lret
cmp
mov
inc
outsl
push
mov
dec
pop
popf
dec
sbb
pop
pop
jae
lahf
cmp
mov
push
dec
sub
mov
adc
xchg
mov
dec
add
mov
cmp
cmpsl
pop
mov
pop
inc
shlb
insl
mov
sbb
mov
cmpl
sbb
repnz
mov
dec
jnp
loope
add
and
sti
pop
and
xor
test
xor
xchg
xor
xor
popf
cmp
mov
xor
cmp
gs
stos
push
xchg
and
addr16
pop
sub
cmp
mov
xor
sub
ljmp
xor
mov
insl
fs
add
or
pop
das
fistps
sti
repz
push
test
dec
pushf
mov
test
fisttpll
pop
mov
sbb
nop
pop
rorl
jg
aaa
ficomps
int3
rol
and
cltd
mov
in
insb
xor
inc
jg
je
aad
jl
fcmove
mov
mov
enter
leave
push
jp
seta
xchg
fdivs
gs
movsl
mov
adc
pop
xorl
xor
popa
xchg
mov
inc
lahf
jno
imul
out
movsb
jl
std
call
and
push
shr
sub
addl
mov
mov
loope
fsubl
push
lods
mov
sti
push
out
push
dec
jbe
and
inc
popa
fdivl
fmuls
or
push
cmp
pop
shll
and
xchg
addr16
js
and
inc
rorl
aaa
sub
jae
sub
hlt
push
jmp
jp
shlb
xor
scas
mov
arpl
rorb
mov
add
les
icebp
clc
cli
add
push
or
stc
nop
adc
aad
mov
arpl
xchg
in
rorl
cmp
and
outsl
push
cmpsl
and
inc
repz
mov
add
mov
test
mov
cmp
aam
cwtl
leave
stos
adc
push
aaa
and
adc
adc
cmp
inc
cmp
sub
pop
and
xor
mov
mov
pop
xchg
in
jl
fs
ja,pt
mov
add
jecxz
xor
sbb
hlt
popa
in
push
dec
or
jle
push
jno
test
mov
push
cs
pusha
sub
jl
xchg
add
dec
mov
push
bound
or
pop
sbb
xor
mov
xchg
xor
cmpsb
and
lea
mov
push
scas
inc
cmp
fisttps
push
cmpsb
fbstp
jle
loop
test
imul
mov
jo
pop
sub
or
inc
imul
sahf
mov
adcl
icebp
cmp
pop
mov
scas
lock
or
jecxz
mov
in
cmp
inc
sbb
int3
cwtl
fimuls
cltd
sub
dec
lea
nop
das
adc
pop
cmp
pushf
int
bound
inc
fdivrs
pop
lds
mov
fildll
cmpsl
pop
les
adc
adc
sub
inc
out
add
outsb
in
roll
out
stos
out
jecxz
xchg
pop
push
pop
mov
pop
jbe
repz
mov
pop
loopne
lret
add
fwait
sub
rclb
outsl
mov
jnp
mov
mov
mov
push
dec
pushf
sahf
pop
daa
mov
sub
das
jne
lahf
pop
les
mov
or
out
out
inc
xor
fcmovu
lcall
cwtl
and
add
adc
ja
jne
bound
aam
dec
xor
imul
fcmovb
push
add
lock
inc
adc
pop
sub
out
imul
andb
out
aad
sub
dec
loopne
adc
lahf
stos
aaa
xchg
sti
xor
push
out
jge
pop
clc
mov
pop
jmp
inc
cmpsb
inc
cli
aaa
int3
insl
lret
sub
and
fstpl
and
imul
icebp
push
dec
or
shl
pop
data16
mov
pushf
fninit
in
mov
adc
dec
sub
daa
pop
dec
push
test
aad
iret
or
movsb
jbe
mov
and
int
push
pop
xor
xchg
aad
sbb
mov
das
xchg
in
and
mov
jle
sti
repnz
out
dec
sbb
mov
mov
andl
xchg
sti
rcrl
or
pop
leave
jno
cmpsl
in
stos
roll
sahf
jnp
mov
mov
inc
imul
lds
clc
mov
push
mov
and
bound
adc
stos
rorb
es
test
xor
cmpsl
cmp
js
jge
movsl
lods
jb
sbbl
jl
xor
insl
mov
dec
es
stc
test
dec
push
pop
lock
fisubl
nop
jecxz
adc
jle
mov
jge,pn
rcrl
xor
cmp
xchg
ret
mov
out
rcrl
lods
bound
mov
mov
jbe
aad
mov
adc
int
sbbl
push
xor
lock
mov
loop
mov
push
mov
push
sub
rcll
sbb
ss
leave
rcr
call
movsl
xchg
pusha
les
mov
test
pop
iret
es
ficomps
stos
ljmp
mov
iret
sbb
popa
sub
and
std
mov
adc
sub
jle
cmpsb
outsl
xor
mov
pop
in
pop
cltd
adc
mov
gs
xor
mov
popa
and
js
dec
mov
dec
outsl
mov
push
lods
sub
jl
xchg
int3
mov
xchg
mov
xchg
leave
mov
jle,pt
lret
xor
pop
rcl
fstl
mov
movsl
dec
mov
movb
not
std
or
add
jl
out
mov
mov
mov
inc
outsl
js
mov
mov
sub
lret
adc
shlb
mov
fdivl
cmp
pop
lret
sbb
loope
xor
mov
add
mov
stc
dec
sub
lret
movsb
cmp
mov
mov
mov
inc
jo
dec
fcompl
push
mull
mov
subb
je
int3
or
mov
xor
mov
insb
stc
jl
cmp
data16
lods
sbb
pushf
push
fsubrs
fldt
add
and
movsb
fwait
and
push
mov
shlb
jle
mov
adc
ret
sub
cmp
xlat
das
popf
xor
inc
gs
test
cmpsl
pop
or
push
int3
leave
arpl
fsubl
cmpsl
xor
add
push
addr16
sub
and
jo
jge
sub
sbbb
push
fs
dec
mov
pushw
push
insb
cmp
sahf
mov
leave
xor
jns
xlat
hlt
popl
mov
scas
cwtl
dec
mov
loope
adc
das
shrl
xor
lock
rorl
cmpsl
adc
mov
jl
adc
dec
jno
addr16
xchg
frstor
lds
adc
repz
roll
mov
jb
pop
push
ljmp
in
jno
adc
xor
gs
scas
and
insb
push
xor
add
cmpl
jl
and
xchg
imul
roll
mov
cmc
shrl
jno
push
mov
mov
les
ret
dec
sti
xor
pushf
xchg
ljmp
sub
movsl
jg
out
loopne
pop
inc
outsl
mov
xchg
ds
mov
sbb
dec
xor
xchg
mov
mov
nop
jno
inc
push
mov
mov
cli
sbb
stos
scas
add
xor
call
popa
outsl
lds
out
int3
test
and
push
pop
jnp
pusha
cmpsl
subl
out
loopne
and
xor
cmp
jmp
fwait
jge
push
cltd
shrl
aam
outsb
inc
cltd
jmp
jecxz
inc
jns
mov
shll
dec
mov
rolb
rorb
xchg
iret
adc
fdivr
lods
pop
xor
popl
sub
in
sti
imul
into
xchg
pusha
xchg
xchg
mov
test
mov
mov
lret
add
sti
pop
pop
cmp
adc
ss
pop
lret
push
adc
xchg
inc
stc
sub
imul
xor
ror
ss
cmp
sub
nop
scas
imul
xchg
movsb
faddl
mov
fimuls
sub
loopne
aaa
push
test
jl
sub
inc
jae
mov
scas
imul
insb
sub
pop
movsl
jo
mov
cli
xlat
fsubrp
cmp
sub
jmp
mov
lahf
loope
call
int
sbb
popa
sub
fbld
inc
roll
mov
testb
dec
out
mov
xchg
addb
imul
aam
nop
movsl
add
xchg
xor
lock
fbld
inc
negl
pushf
add
jge
jb
or
movsl
ds
jo
xor
fistpl
enter
hlt
leave
imul
flds
fldenv
adc
sarl
jne
ret
test
cmp
adc
mov
push
cltd
push
xchg
dec
aaa
inc
cmp
pop
sbb
add
mov
xchg
pop
loope
fs
xchg
push
cmp
in
push
or
or
popa
jg
xchg
sbb
adc
mov
out
push
pop
mov
xor
stos
pop
xchg
xor
sub
mov
sub
pop
mov
xchg
pop
sbb
adc
pusha
xor
xor
sub
cltd
mov
pusha
mov
cs
notl
inc
imul
sub
jmp
inc
dec
push
mov
mov
in
cmp
lods
mov
sub
aas
mov
inc
sub
adc
inc
fistpl
mov
xor
xchg
loope
sahf
sub
fwait
movsl
push
popa
decl
imul
lea
xor
das
js
insb
test
jp
pop
mov
jmp
in
loop
xor
xchg
sti
ljmp
sbb
test
push
adc
jb
ja
pop
ljmp
repnz
pop
aad
pop
sbb
mov
movsl
aam
and
xor
mov
cwtl
jl
pop
cmp
adc
xor
aaa
push
lods
pop
push
jmp
ljmp
jle
ret
jno
mov
lods
xchg
jmp
lods
and
lret
cmp
and
push
outsl
and
mov
xchg
adc
pop
cmpsb
mov
sarb
xor
add
hlt
ds
mov
pop
add
insb
mov
sbb
ss
xorps
shll
mov
jns
jo
insl
popa
aas
lock
dec
and
cmp
cmc
pusha
mov
add
dec
std
mov
rolb
xchg
jnp
mov
rorb
inc
pop
push
mov
and
and
mov
xor
mov
adc
sub
pop
mov
jl
adc
mov
sti
dec
dec
mov
je
jae
das
movsl
imul
pop
push
mov
mov
xor
inc
je
jge
sbb
pop
stos
mov
lea
les
add
xor
mov
jne
out
popa
push
in
push
add
cmp
popa
mov
pop
fs
push
xor
mov
adc
pop
mov
enter
or
push
and
fwait
mov
lcall
xor
inc
cwtl
cmp
jge
xor
or
jae
pop
jecxz
mov
in
inc
cmpsl
ds
jne
pusha
pop
dec
adc
andb
add
add
and
daa
sar
xchg
movsl
pop
cltd
jae
subl
pop
stos
xchg
jnp
mov
or
mov
or
outsb
test
test
roll
or
cs
lock
into
add
lea
pop
ror
jns
sti
sub
mov
lds
arpl
cmp
inc
lahf
xor
or
mov
sbb
test
dec
pop
xor
in
add
jl
pop
cmp
scas
push
sbb
stos
dec
xchg
xor
rorb
addr16
mov
xchg
imul
popf
addr16
xor
das
adc
pop
or
repnz
xchg
mov
gs
dec
inc
sub
mov
imul
sahf
mov
and
adc
and
inc
pop
cltd
sub
add
and
xchg
fldt
lret
push
jno
push
das
jl
rorb
flds
pop
xorb
stc
mov
repz
mov
movsl
cmp
fmuls
test
cmc
iret
enter
xorb
rorl
imul
dec
decb
mov
fcompl
add
mov
adc
je
dec
jp
push
call
push
or
hlt
enterw
cli
pop
mov
xchg
mov
cmp
push
outsl
pop
pop
sarl
mov
mov
jl
or
enter
pop
stos
xor
popa
xchg
cmp
mov
mov
push
test
xchg
cmp
jle
fmull
dec
lods
jne
mov
int3
push
lret
jl
popf
adc
mov
rcll
mov
test
lcall
xor
cmc
pop
cmpsb
xchg
push
and
enter
lret
push
xor
adc
push
xorb
lcall
rorl
cmpl
fwait
and
out
and
test
mov
incl
push
mov
outsl
sub
adc
cmpsb
jae
bswap
cs
out
fstpt
pop
out
repnz
adc
in
cmp
in
sbb
jge
adc
adc
dec
jne
cltd
popf
mov
cmp
pop
push
mov
bound
lcall
shll
mov
push
daa
and
xchg
pop
jae
cmc
imul
or
cmp
int3
ja
lahf
test
jge
jecxz
lock
add
and
xchg
mov
std
cli
inc
rorl
sbb
popa
xor
and
std
add
add
pop
xchg
inc
mov
mov
adc
test
pop
xchg
clc
in
popf
mov
jbe
es
or
dec
out
sbb
cmp
mov
aas
cmp
add
ds
fndisi(8087
rol
push
in
xchg
ret
das
out
sub
scas
xor
cmp
mov
push
nop
mov
shl
mov
fcompl
or
mov
pop
sahf
jecxz
jno
scas
loop
dec
loop
shrl
int3
inc
loop
sub
addr16
pop
dec
in
out
movsb
mov
xor
add
dec
sahf
add
hlt
or
fwait
sbb
push
das
div
scas
dec
out
sub
ds
cld
sub
mov
pop
sahf
cmp
arpl
push
out
sbb
icebp
push
mov
lods
and
inc
inc
or
fisttps
bound
jmp
mov
out
push
xor
mov
push
mov
lret
jbe
jl
sbb
das
add
mov
call
es
mov
popa
inc
and
xchg
adc
pop
sarl
push
repz
add
push
sub
popf
popf
shrl
mov
fimuls
mov
aam
jge
movzwl
rorl
xor
cmp
les
icebp
cmp
mov
shl
adc
stos
xor
mov
xor
pop
adc
sbb
insb
insl
daa
out
sub
mov
push
stos
cmp
outsb
fstpt
shr
idivl
nop
sbbl
cs
mov
es
popa
xor
pop
scas
mov
pop
and
stc
or
pop
pop
xor
xchg
xchg
cs
aas
mov
and
inc
sub
sub
mov
sub
cs
shlb
push
hlt
pop
mov
fistpl
dec
mov
hlt
fnstsw
mov
inc
lahf
mov
aam
jne
aad
ljmp
pop
xor
mov
push
pop
das
cmpsl
and
sahf
xor
jae
test
fwait
imull
adc
inc
and
mov
mov
or
sub
jbe
pop
mov
mov
es
movsl
dec
cmp
dec
fstl
jmp
sti
mov
xchg
mov
popfw
dec
lods
gs
ficoms
jne
mov
cmp
mov
mov
clc
inc
sbb
push
in
inc
dec
lcall
addr16
shl
dec
imul
xchg
int3
push
xchg
xchg
xor
cmpl
test
jo
push
in
jecxz
movsb
lcall
and
and
lea
mov
arpl
cmp
mov
jne
and
and
jmp
loope
mov
jge
cmp
push
lea
icebp
mov
or
pop
je
imul
loop
ret
iret
sahf
pusha
out
pop
les
out
dec
add
dec
mov
mov
aad
icebp
inc
cmpsb
fdivrs
xor
mov
sti
xor
jl
or
mov
dec
inc
fldt
dec
mov
sbb
jno
fstl
mov
or
mov
cmp
or
mov
cmp
jg
enter
xchg
inc
cmp
loopne
outsb
arpl
pusha
sti
movsb
shrb
nop
adc
dec
mov
inc
cmp
mov
sti
fimuls
gs
jge
add
shrl
test
push
sub
nop
mov
mov
xchg
into
inc
ffree
push
shll
xchg
mov
xlat
jecxz
xchg
xlat
mov
pop
jbe
ret
jl
mov
mov
hlt
xlat
sbb
xchg
andl
xor
outsb
mov
mov
test
and
adc
xchg
das
xor
mov
pop
in
adc
add
pop
stos
sbbl
fs
sbb
cmp
push
decb
xor
lea
sub
cmpsb
loope
cs
adc
pop
add
inc
or
lret
xor
stos
sbb
sub
push
push
ss
fstpt
jge
call
cmp
pop
mov
data16
mov
push
and
dec
shll
in
and
mov
pop
out
xchg
pop
aas
cmp
int
test
movsb
loope
dec
cmp
stc
das
adc
int3
fwait
mov
addl
mov
mov
push
push
mov
pop
and
dec
lea
mov
mov
ret
test
jg
adc
xor
adc
aaa
divb
xor
mov
dec
sbb
xchg
sub
ficomps
js
fistpll
fcomps
lods
mov
imul
mov
insl
lods
pop
xor
jbe
repnz
pop
cmpsl
xchg
dec
fisubrs
jb
in
sahf
xor
inc
or
ret
outsl
ja
stos
je
das
fisttps
stc
shr
fs
stos
popf
stc
les
mov
inc
xchg
ret
xor
lods
inc
mov
mov
xor
cld
push
orps
shl
popf
mov
adc
repz
xchg
mov
cmp
sbb
movsl
punpcklbw
push
sub
dec
push
push
ja
insb
mov
sti
cmp
mov
mov
repnz
inc
push
xor
adc
xchg
addr16
sub
pop
imul
pop
xor
sub
sub
and
mov
cmp
inc
inc
enter
sbb
popa
xor
gs
cmpsl
push
test
add
loopne
and
notl
icebp
out
pop
mov
ja
or
add
movsl
mov
sub
push
push
orl
icebp
jns
movsb
mov
xchg
lea
push
push
mov
adc
movsl
jge
lock
es
push
movl
xchg
outsb
cmp
lods
negb
jmp
divl
sbb
jmp
add
aaa
jo
push
adcl
sbb
or
addr16
inc
in
bound
rcrl
dec
and
xor
mov
hlt
js
or
inc
in
xchg
mov
roll
push
ret
xchg
xor
jmp
mov
xor
jno
jl
push
pop
popa
iret
xor
pop
jg
scas
dec
ds
cmpsb
pop
jb
cld
arpl
xlat
add
adc
push
in
or
das
data16
lods
mov
mov
jnp
not
cs
add
mov
mov
sub
insl
cmp
pop
inc
cmp
pop
and
fldt
pop
lret
popa
pop
push
sub
and
imul
mov
insb
insb
sub
popa
je
ret
das
rcrl
cmp
js
dec
push
or
std
cmp
pop
mov
push
cmp
insb
fisubrl
sbb
cltd
jnp
fstps
mov
cmp
dec
into
fbstp
jg
scas
in
inc
push
cmp
xor
mov
xlat
in
mov
cs
pop
pop
push
ljmp
icebp
push
xchg
jl
cmpb
push
lret
jg
sub
jno
mov
jae
push
addl
decl
adc
jecxz
cmp
stos
icebp
cmp
mov
ja
and
aas
cli
repz
push
and
in
cld
lods
xchg
aam
adc
mov
das
xor
pusha
dec
into
adc
scas
ss
iret
stos
fisttps
cmp
xchg
faddl
fstpl
pop
push
insb
push
dec
or
dec
jmp
cmp
push
cmp
fwait
cmc
movsb
test
test
imul
rorb
cmpb
aaa
push
mov
inc
lods
pop
push
leave
ret
sub
inc
pop
dec
mov
into
xchg
mov
sub
mov
xor
sti
int3
mov
cs
xlat
pusha
aas
jecxz
sbb
dec
data16
imull
and
inc
sarl
push
iret
cmp
inc
mov
iret
in
imul
pop
pop
cmp
imul
shlb
pusha
add
popf
iret
xchg
adc
jge
lahf
pop
adc
sub
xor
push
imull
in
pop
fld
in
movb
jmp
imul
adc
ret
mov
adc
and
xlat
dec
test
push
ret
aaa
lods
inc
pop
mov
xor
sub
aam
shlb
push
mov
or
test
push
xlat
mull
gs
inc
push
cmc
insl
xchg
shlb
pop
push
xor
lret
mov
arpl
out
push
pop
sbb
xchg
jne
xor
pop
pop
stos
aam
cmc
mov
rcll
dec
mov
shrl
mov
dec
pop
rcrl
or
dec
pop
pop
or
cltd
or
loope
inc
xor
cmp
adc
mov
int
and
outsb
lahf
add
pop
frstor
sbb
out
jno
int
jno
mov
xor
shrl
jae
mov
pop
dec
pop
push
mov
pop
or
cmp
scas
cmp
xor
leave
lret
and
pop
pop
pushf
xchg
mov
fistl
lret
cmp
stc
adc
pop
shll
mov
or
sbb
pop
fs
or
cmc
jg
fcomps
mov
push
sub
fcmovnb
in
int
pop
loope
insw
movsl
lds
push
adcl
mov
js
addr16
jbe
test
cwtl
or
jl
das
fwait
jecxz
sti
mov
add
dec
inc
sti
push
adc
mov
icebp
sub
cs
dec
data16
enter
pop
mov
testl
xchg
fcoms
pop
stos
addr16
push
and
lret
bound
or
jo
xor
roll
lds
inc
mov
adc
cltd
lret
adc
stos
sbb
cld
jo
fucom
ret
push
add
sbb
addr16
push
xchg
sbb
push
sub
mov
push
xor
sbb
and
push
or
mov
adc
daa
mov
sub
inc
cld
pop
andl
fs
ficompl
jmp
negl
popf
mov
inc
inc
imul
sti
cmpsb
mov
pop
pop
push
aam
pop
inc
jno
jmp
mov
fidivs
cltd
mov
cmp
push
dec
movsb
xor
and
out
lcall
push
sbbl
icebp
inc
cmpsb
insl
pop
inc
sub
enter
ret
add
xchg
push
rcll
xor
adc
adc
cltd
pop
pop
adc
mov
test
pop
popa
cmp
pop
jle
outsl
jne
ret
out
orl
jl
push
lds
test
test
pop
mov
cmp
in
nop
punpcklwd
push
mov
pop
cli
fcoms
dec
jmp
push
xor
mov
mov
adc
push
adc
inc
jne
imul
icebp
sbb
sub
push
cltd
in
jge
or
rcrb
insl
scas
xchg
ret
mov
stc
inc
leave
mov
dec
imul
nop
xor
in
and
gs
or
mov
stos
sub
cmp
call
out
shll
sub
xor
repnz
inc
add
leave
and
cmc
enter
or
mov
cmp
imul
test
stos
and
repnz
xorl
xor
xchg
push
pop
lock
add
fmulp
mov
jns
hlt
pushf
xchg
dec
out
mov
or
les
repnz
cmp
movsl
xor
sub
sub
dec
inc
out
cmpsb
imul
adc
jne
cmc
fcoms
pop
add
mov
std
dec
adc
push
inc
add
je
ljmp
scas
mov
sub
cmp
lods
jg
movsl
in
test
mov
test
loop
cmpsb
cltd
pop
lea
orb
xor
addr16
push
notl
loope
das
inc
mov
das
das
xor
xor
add
dec
jnp
and
push
mov
cmpsl
xor
inc
aam
xor
bswap
arpl
iret
mov
cli
imul
in
pop
vpsubusb
adc
inc
iret
jbe
jg
cmp
shll
xchg
xchg
pop
mov
cmpsb
dec
ja
xor
cmp
leave
stos
les
stos
jbe
sub
pop
imul
inc
and
add
ret
mov
jle
stc
divb
jns
mov
lcall
in
arpl
mov
add
std
out
mov
pop
sbb
mov
push
inc
add
sbb
lret
es
add
mov
loope
mov
sbb
int3
test
inc
or
and
nop
in
inc
into
scas
pop
movsl
push
fstps
mov
std
das
sbb
dec
bound
scas
or
push
mov
insb
scas
ficoms
xor
sbb
jnp
inc
adc
push
add
jecxz
out
xor
and
pop
inc
popf
sub
sub
test
mov
cltd
xchg
push
inc
and
inc
add
xchg
arpl
pop
popf
dec
hlt
jl
lock
xchg
xorl
fildl
jmp
cs
lea
dec
pop
add
xchg
jg
cwtl
jb
nop
jbe
hlt
pusha
mov
cld
sbb
sahf
inc
shll
jl
dec
test
xor
adc
cmc
jmp
hlt
pushf
push
pop
imul
mov
xlat
inc
loop
pause
shll
nopl
insb
loopne
mov
and
ficompl
out
mov
push
mov
mov
jle
out
xchg
icebp
xor
xor
jb
pushf
sar
inc
test
dec
pop
xchg
stc
xchg
fs
add
mov
jl
inc
mov
mov
fistl
pusha
mov
shrl
dec
jbe
fsubrs
jmp
loop
pop
cli
jo
xor
outsl
inc
dec
xor
dec
gs
aas
mov
movsb
or
or
adc
rorl
imul
das
sub
add
push
test
jge
je
mov
leave
scas
cwtl
fs
add
adc
std
outsl
outsl
sbb
pop
push
mov
xchg
sarl
push
adc
jnp
lret
movsl
insb
sub
or
jae
inc
mov
imul
push
fisttpll
mov
adcb
fcoms
sub
mov
mov
add
pop
rcl
pop
mov
push
out
sbb
adc
es
sub
and
cmpsl
xchg
jg
mov
and
sbb
and
jg
fldt
jg
lret
mov
or
push
and
mov
into
or
cmc
popf
or
inc
mov
popa
or
repz
xorl
ss
cmpsb
ds
inc
mov
movsb
pop
push
push
cmpb
ja
daa
gs
pop
shl
mov
dec
fmull
push
mov
daa
pop
jge
lds
inc
into
stos
in
out
popa
je
mov
and
cmp
mov
inc
mov
dec
lods
lods
fnstenv
fidivl
es
mov
mov
xchg
xor
aas
pop
add
mov
daa
fdivrs
lahf
loop
test
unpcklps
popf
fldcw
fisttpll
pop
clc
movsb
sub
push
repz
push
fmull
mov
sbb
xor
shlb
addr16
sub
ficoml
adc
leave
fiadds
and
loopne
test
arpl
aad
sub
xor
fstl
dec
push
push
lahf
or
aas
mov
mul
outsl
mov
in
mov
mov
mov
or
mov
push
dec
loope
nopl
stos
popf
outsl
push
repnz
sub
sahf
mov
xchg
xor
pop
aam
or
mov
jecxz
aas
add
jns
push
enter
mov
xchg
pop
out
jle
xor
mov
aam
inc
repz
pop
aas
pop
sub
loope
mov
cmp
cld
in
scas
pop
call
dec
push
and
dec
addr16
testb
xor
dec
lret
mov
sbb
pop
jo
jge
xchg
shll
sub
addr16
popa
outsb
test
jne
es
xor
jbe
sbb
shrl
xchg
jge
jo
xor
cmp
push
cmpsl
or
jne
sub
mov
xchg
mov
in
mov
xlat
cmp
push
loop
inc
xchg
mov
fstpt
clc
lea
cmp
pop
popa
in
push
fadd
sub
pop
jle
sbb
sub
inc
mov
mov
jno
repz
sbb
push
xchg
push
cld
js
arpl
das
cli
imul
xor
sbb
dec
add
lea
sbb
jge
fmuls
jmp
jl
das
mov
orb
sbb
cltd
mov
pop
scas
test
push
jns
xlat
inc
rcll
add
sbb
or
sahf
pop
mov
mov
pop
jne
addl
add
fdiv
dec
subb
lret
sub
stos
insl
pop
jl
xorl
xchg
rorl
dec
data16
dec
jo
sbb
adc
inc
adc
inc
xorl
inc
mov
enter
dec
sahf
mov
in
sbb
sbb
mulb
push
lds
jb
cld
scas
popa
dec
lcall
repnz
lret
rorl
into
stos
and
push
push
mov
xor
popa
xlat
inc
mov
inc
mov
push
push
inc
jb
popl
ret
xchg
aam
mul
dec
jno
xor
push
pop
test
lcall
outsl
adc
dec
lret
test
jl
int
sarb
aam
adc
xchg
xor
mov
imul
inc
inc
addr16
outsl
mov
ret
dec
and
xchg
mov
push
lcall
dec
in
loope
push
or
ret
mov
rorl
shll
inc
jns
jge
aaa
aaa
mov
stos
cltd
sub
mov
cmc
jns
sbb
decl
jp
add
pop
sbb
pop
enter
fsubs
mov
popa
inc
dec
rorl
cmp
cmp
push
mov
test
popa
mov
test
add
mov
lahf
and
shl
sti
pop
jno
imul
in
xor
cmp
popa
mov
pop
pop
fs
jno
add
add
jo
in
xor
adc
push
dec
std
jbe
jno
xlat
lods
add
jns
scas
test
cmpsb
rcrb
jns
add
es
push
push
jnp
loopne
shlb
outsb
dec
mov
das
stc
mov
pusha
in
mov
iret
lock
push
loop
ljmp
data16
lcall
lds
add
lcall
daa
cmp
jmp
mov
shrb
cld
ljmp
inc
call
adc
xchg
and
and
adc
xor
aaa
xchg
or
stc
cmp
jae
gs
sub
lret
cmpsl
dec
add
ret
dec
mov
inc
hlt
sub
push
cmp
scas
sbb
rolb
hlt
xchg
cli
dec
inc
mov
in
aaa
outsl
mov
adc
lock
mov
xor
lods
add
add
mov
jae
dec
movsl
jns
faddl
xchg
sahf
cmp
jge
mov
iret
dec
in
dec
adc
fsubp
jp
mov
xor
fisubrs
xor
xor
mov
xorb
sbb
ds
jg
or
imul
lcall
test
into
bound
lahf
adc
in
cld
inc
cmc
xchg
ss
and
cmp
xor
arpl
ss
push
mov
push
cmp
xor
nop
xor
decb
jo
xchg
mov
inc
out
pop
sbb
gs
aam
add
jl
cwtl
bound
adc
sahf
and
ret
scas
inc
cmpsl
jg
add
rcll
mov
sbb
pop
sub
push
pushl
mov
movsl
stc
push
mov
sub
dec
bound
repz
xchg
sub
xor
lahf
sub
push
and
mov
xchg
pop
addr16
xor
jge
dec
xor
cmp
pop
pop
ss
adc
sbb
repnz
push
pop
push
popa
clc
stos
pop
dec
cmpsl
std
mov
dec
pop
out
add
scas
icebp
add
ljmp
imul
mov
inc
divl
addb
cmc
adc
nop
andl
dec
xor
enter
xor
movsb
xor
shrb
in
sbb
scas
push
ljmp
xor
jbe
sar
sub
sub
cmpb
int
out
push
dec
cltd
cmpb
cmp
inc
ss
xor
mov
cmp
stos
ss
les
mov
dec
test
sub
stos
aam
mov
int
xchg
ja
hlt
xor
sti
lods
fdivs
xor
inc
jmp
mov
or
loop
mov
sti
inc
add
fdivr
cmpb
dec
sbb
mov
stos
mov
or
pop
mov
dec
outsl
lret
sub
xchg
fs
jo
cli
pop
and
sub
xchg
mov
push
in
scas
sbb
dec
stos
or
xchg
xor
jmp
xchg
sbb
outsl
pop
push
lret
or
jmp
jl,pt
mov
pusha
sbb
js
ds
daa
add
cmp
cld
push
scas
data16
push
out
mov
adc
dec
lcall
xchg
cmp
and
mov
jbe
cmp
gs
or
insl
into
lret
rcrb
add
pop
mov
and
push
dec
jo
xor
push
mov
frstor
lds
or
mov
pop
jmp
push
test
cli
les
pop
and
pop
das
int
lods
mov
or
mov
add
mov
lds
and
push
cmp
fmuls
lret
outsb
bound
sbb
jne
movsb
pusha
andb
mov
dec
pushf
pop
js
mov
pop
pop
sahf
pop
int3
sahf
pop
iret
test
lcall
insl
inc
out
lods
lds
jl
mov
loopne
mov
push
adc
cltd
push
pop
dec
loopne
cmp
es
adc
ss
adc
or
nop
mov
cmp
sti
jo
mov
jmp
add
push
mov
inc
lcall
push
and
mov
sub
pop
bound
mov
mov
out
cs
jno
add
and
jge
inc
dec
push
fs
or
cmpsl
mov
clc
push
push
loop
sbb
add
imul
clc
and
push
out
in
lahf
popa
fstpl
sub
insl
mov
push
lock
push
sub
push
repz
ds
sbb
ficompl
vpabsq
je
shlb
or
jnp
cmp
fcmovnu
js
sbb
outsb
sub
jne
lods
int
paddusw
mov
adc
mov
int
shrl
push
int
push
loop
jle
adc
das
push
sbb
jge
int3
stc
mov
scas
or
push
insl
aam
inc
xchg
lods
xchg
lret
sbbl
push
fwait
lret
les
adcl
jno
movsb
sub
and
lds
mov
push
pop
mov
xchg
sub
or
xchg
arpl
xor
inc
lcall
lock
inc
pop
add
dec
cli
pop
mov
inc
xchg
cmpsb
call
sar
inc
out
jno
fiadds
inc
sub
stos
dec
jecxz
adc
push
jno
sbb
loop,pt
sub
pusha
outsl
mov
add
hlt
in
xchg
stos
xor
xor
dec
test
es
fisttps
sbb
push
out
gs
popa
insl
lahf
movsl
mov
sbb
sub
jmp
aad
sbb
fimuls
pop
cmp
mov
js
dec
mov
lret
aam
movsb
mov
mov
push
cwtl
mov
or
loop
xor
fs
les
sbb
push
insb
sub
jp
lods
arpl
add
out
addr16
pop
mov
xor
loop
lds
pusha
ja
stc
and
bound
cmp
test
push
mov
pop
xor
xlat
jns
fdivrs
or
mov
add
adc
push
xchg
ret
sbb
lods
sub
roll
shr
mov
cmpsl
xchg
ret
jecxz
popa
sub
cmp
mov
out
icebp
mov
jbe
dec
dec
cwtl
rorl
xchg
sbb
add
test
int3
hlt
add
test
sbb
lcall
jne
cmc
shlb
popf
bound
movsb
jmp
cmp
mov
mov
mov
sarb
xchg
mov
jno
push
xor
adc
xor
shll
scas
cmpsb
adc
stc
addr16
dec
push
arpl
pop
dec
dec
jl
and
sbb
mov
sbbb
mov
je
inc
jmp
shr
cmp
cld
dec
dec
subl
and
inc
push
adc
push
mov
sbb
dec
inc
lret
pop
in
aaa
jne
inc
lods
enter
fldt
leave
mov
lock
phsubd
mov
xchg
push
lahf
adc
push
mov
pop
bound
cmp
jmp
das
addr16
pop
xchg
inc
fimuls
adc
push
lret
aas
add
jo
and
insl
int3
fcmovne
movsl
adc
mov
pmuludq
int3
xor
int3
mov
insl
xchg
push
inc
cmpb
mov
fcmovnbe
sbb
mov
popa
lds
inc
sarl
rorb
aaa
dec
add
mov
pop
icebp
pop
mov
aad
mov
gs
adc
cmc
clc
xchg
push
je
mov
sti
jge
sub
data16
aaa
pop
xor
stos
icebp
into
ljmp
je
notb
pop
bound
addr16
shrb
inc
add
mov
das
adc
xor
mov
cmp
in
cmp
adc
lret
lds
div
shll
out
add
inc
std
popf
lock
scas
repz
mov
mov
and
fs
sub
add
adc
or
xchg
mov
mov
push
pop
shrl
fnstsw
fidivs
xchg
xchg
js
adc
je
push
mov
fidivl
dec
les
add
xchg
loop
push
mov
mov
mov
xchg
inc
lea
mov
xor
jne
pop
add
bound
jge
jl
imul
xor
push
push
cs
adc
daa
rcrl
dec
frstor
ret
mov
rorb
adc
aas
or
pop
in
dec
sbb
pop
leave
sub
lcall
fisttpl
test
aaa
xor
sbb
insb
cwtl
pop
push
imul
or
mov
mov
cmpsb
sbb
das
and
adc
sbb
lods
lret
add
lock
add
and
adc
pop
jb
mov
mov
loope
in
stc
push
sub
shr
mov
add
cmp
test
cmc
addr16
cmp
int
lods
stc
fildll
fistpl
fcomps
push
jmp
mov
aas
lods
and
jge
add
xchg
mov
mov
mov
mov
or
mov
aas
push
daa
int3
push
test
cwtl
jge
mov
loope
stos
fld
lcall
popa
mov
cmp
push
dec
sbb
ficompl
xor
mov
xorl
imul
and
or
mov
aaa
pop
inc
xor
pop
icebp
pop
jge
mov
out
mov
dec
mov
daa
push
pop
push
inc
mov
mov
jbe
mov
push
sub
fldcw
mov
ss
jmp
cltd
cli
lret
xlat
fnstenv
leave
pushf
xor
add
dec
ficompl
xor
sbb
mov
test
mov
addr16
daa
lahf
push
push
pop
push
ja
or
cmc
xor
sub
data16
movsb
xchg
fsubrs
sti
fmul
notl
mov
imul
shlb
nop
and
mov
lret
and
mov
dec
cmp
lds
mov
loopne
test
jg
cmp
pop
daa
sahf
xor
mov
outsb
jo
out
pop
lret
cwtl
mov
pop
imul
ret
ret
and
bound
xchg
mov
loope
sti
jecxz
int3
loop
insl
gs
cmc
mov
orb
jmp
jecxz
aad
ss
xor
cs
inc
push
xchg
push
loope
bound
js
xor
and
stc
pop
add
cs
sahf
out
les
repnz
and
aad
dec
sbbb
add
and
out
enter
ret
xchg
jl
mov
lcall
lcall
out
testl
cmpsl
je
shll
fldl2e
cmp
sub
add
pop
rcll
mov
xor
insl
jle
sub
xchg
sbb
dec
dec
gs
adc
clc
jnp
inc
mov
mov
arpl
nop
and
mov
int
popa
xor
jge
add
movsl
and
xor
mov
int
sub
mov
repz
and
insb
insl
jp
cmp
insl
scas
sbb
movsb
int3
pop
mov
sub
cmp
cmc
dec
into
pop
sub
sbb
adc
outsb
jno
inc
sarl
xchg
xchg
mov
in
mov
push
jbe
add
xlat
gs
xchg
mov
push
push
mov
test
lahf
mov
pop
and
cwtl
cs
movhps
cmc
popf
jne
xchg
add
filds
lcall
sbb
xchg
xchg
call
jb
mov
pop
dec
mov
mov
mov
mov
mov
add
stos
add
xchg
sub
push
scas
xchg
sub
out
scas
repz
frstor
xor
push
ljmp
das
cmp
pop
test
pop
cld
jns
xor
int
adc
icebp
add
cld
aaa
cmp
cmp
repz
inc
in
sbb
cmpsl
mov
jmp
fbstp
mov
out
or
ljmp
mov
loope,pn
cld
pushf
test
mov
clc
mov
es
jno
xor
cmc
xchg
lret
push
adc
int3
rorb
pop
pop
xor
dec
jecxz
or
cmp
nop
faddl
arpl
aaa
test
mov
push
dec
cmpsb
mov
dec
popf
sub
cmp
cmp
sbb
addr16
fbstp
pop
pop
outsl
push
lock
arpl
mov
sbb
negl
ficomps
pop
lds
arpl
xchg
xlat
sti
inc
cmc
movsl
lods
push
mov
loope
movsl
push
insb
mov
xchg
pushf
or
xor
aas
lret
adc
mov
shrl
lahf
mov
scas
sbb
push
call
into
cmp
mov
mov
movsl
add
xchg
shll
mov
addb
xchg
adc
mov
loope
pop
jecxz
add
scas
mov
cmp
fdiv
add
dec
or
enter
test
hlt
out
bound
out
roll
adc
insl
pop
push
pop
sub
xor
xchg
in
sub
dec
rolb
nop
lcall
cli
or
mov
incb
pushf
cmp
jmp
jae
and
sahf
sbb
aas
fwait
cld
std
xchg
outsl
xor
mov
xlat
fld
or
lret
lock
cmp
pop
imul
mov
das
aaa
lods
or
add
enter
mov
fdivl
or
push
jge
inc
sti
out
jbe
leave
aaa
add
je
inc
push
jno
xor
push
adc
shl
cmp
dec
movsb
in
xor
mulb
jno
call
fdivrs
mov
push
hlt
arpl
negb
xor
call
adc
pusha
cmc
and
call
out
imul
ja
adc
push
jp
lret
scas
jne
sub
pop
dec
sbb
push
xor
cmp
ret
sbb
jmp
xor
cltd
adc
test
arpl
or
xchg
ljmp
mov
out
push
loop
das
sbb
push
out
mov
push
rolb
inc
add
mov
mov
mov
xor
in
clc
mov
push
popf
aas
ss
xchg
dec
adc
mov
pop
out
cmp
mov
iret
repz
insb
stc
std
lret
mov
push
pop
sub
loope
mov
push
inc
and
push
jp
subb
fdivs
sbb
pusha
jbe
cmp
shrl
leave
mov
mov
mov
and
stos
lahf
push
negl
xchg
orb
bound
out
pusha
pop
in
mov
call
mov
sahf
pop
jg
test
std
sahf
jmp
in
and
lcall
sbb
test
jnp
mov
andb
dec
bound
inc
int3
mov
outsb
addb
test
or
outsb
cmc
mov
stos
push
jno
jge
arpl
sti
sbb
sub
stos
adc
inc
cmpsl
jl
inc
js
imul
or
push
mov
in
pop
xchg
das
cmp
fimuls
shll
jl
int
lcall
or
mov
and
out
int3
das
lret
rcrb
mov
out
mov
xlat
cmp
or
call
repnz
jnp
dec
ljmp
daa
mov
mov
js
cmp
std
sub
mov
orb
push
sbb
push
lret
sbb
push
ss
fwait
cwtl
jno
pop
lret
stos
pusha
mov
adc
inc
test
insl
cwtl
pop
push
add
push
push
pop
add
pop
ficoml
addr16
ror
dec
ret
jl
mov
push
mov
arpl
ret
adc
ficoms
push
cmpsb
fwait
sti
dec
loope
push
sub
cmp
fnstsw
add
pop
mull
cltd
cmp
cmc
mov
pop
mov
dec
inc
inc
popa
addr16
push
mov
inc
sub
sub
iret
test
push
fsubrl
push
mov
subl
out
dec
jbe
fistpll
mov
rcrb
sbb
mov
mov
adc
pop
stc
sub
in
mov
int
and
rolb
aas
pop
sbb
push
icebp
pop
add
cmp
daa
pop
mov
cwtl
out
dec
mov
sti
clc
jno
loop
inc
xchg
sahf
imul
movsl
push
in
xchg
mov
adc
jnp
pop
xchg
mov
or
fmuls
and
cwtl
cwtl
clc
xor
arpl
pcmpgtw
pop
call
enter
push
dec
sub
jno
pop
dec
sbb
popf
ficoms
fmull
clc
push
dec
shr
insl
cld
sbb
enter
rolb
dec
xor
aam
repnz
mov
pop
mov
lods
or
das
xchg
rclb
push
je
adc
addb
aad
jae
xor
xor
out
cmp
popa
xlat
push
jg
mov
or
imul
stos
pop
jge
xor
xor
dec
jmp
cmpb
inc
lahf
inc
call
sbb
dec
aas
mov
cmpsl
inc
xchg
fldenv
xchg
cmpb
cmp
jo
add
lock
je
mov
inc
mov
mov
in
ret
scas
in
sub
dec
movsb
push
xor
shlb
mov
sbbl
sbb
jno
jno
iret
sbb
xchg
push
jle
clc
negl
loopne
int3
out
and
push
inc
mov
fsubs
add
leave
call
adc
push
or
popa
pop
jnp
sbb
xor
mov
pop
jecxz
gs
sub
stos
jg
push
xchg
pop
push
gs
cwtl
in
mov
jne
or
sbb
pop
ds
fs
adc
ret
icebp
outsl
icebp
or
adcl
mov
inc
das
jne,pt
outsl
hlt
pop
xchg
inc
in
add
jno
push
ds
les
mov
mov
cmpsl
inc
shlb
dec
idivl
test
xor
xchg
pop
icebp
mov
loop
sti
xorb
push
bound
adc
inc
mov
leave
jo
mov
push
sub
push
std
ja
dec
cwtl
das
lret
add
ficomps
out
mov
hlt
pop
addr16
sbb
adc
stos
dec
jnp
sbb
mov
roll
mov
loopne
je
push
and
gs
sub
mov
bound
lahf
out
pop
add
sbb
lret
jl
leave
sbb
or
mov
lea
stc
mov
cwtl
aam
or
insl
cli
out
add
inc
push
rcrb
xor
lahf
ja
leave
xchg
pop
test
cmp
paddsb
mov
xchg
cmc
bswap
mov
ss
push
add
mov
loopne
sahf
or
mov
pop
test
xchg
and
sbb
xor
das
fisttps
cmp
jae
sub
mov
xchg
ficomps
push
scas
xchg
mov
mov
xor
dec
iret
cmp
out
adc
pop
jmp
push
mov
aad
lods
or
lahf
sti
cld
mov
pop
adc
mov
mov
and
mov
jo
adc
fs
cmp
xchg
pop
int
in
inc
cmpb
mov
test
push
xchg
or
loopne
sbb
push
xchg
clc
aaa
call
movsl
adc
xor
push
xchg
subl
fbld
imul
mov
les
adc
clc
and
mov
mov
pop
cwtl
mov
pop
cwtl
or
pop
mov
cmp
cmp
pop
dec
popa
xor
sbb
mov
bnd
dec
gs
adc
jae
movsl
bsr
and
sub
jle
hlt
int
mov
repnz
pop
and
rclb
popw
xchg
jae
lret
mov
push
sub
sti
add
cltd
push
daa
enter
cld
or
xchg
push
aas
inc
cmp
pop
fidivrl
jmp
mov
push
jne
and
fcomip
imul
nop
fisttps
xchg
push
mov
scas
mov
stos
pop
inc
pushw
jl
pusha
xchg
sub
out
xchg
sbb
lds
xchg
fstl
sbb
jl
negb
and
and
push
pop
mov
js
rcrl
cmp
sub
jle
or
add
pop
xlat
pusha
or
in
add
dec
enter
lods
ja
fbstp
jno
jle
add
in
jp
jge
shll
dec
jae
les
jno
ret
out
cmpsl
sub
aad
jo
rorb
xor
mov
adc
xchg
in
dec
jmp
enter
es
outsb
add
push
mov
cmp
nop
xchg
or
fistpl
sub
mov
add
dec
mov
dec
lock
mov
scas
push
push
pusha
mov
and
xchg
or
das
lea
mov
negb
dec
int3
pop
inc
orl
mov
das
inc
mov
sub
imul
add
xchg
sbb
dec
in
lret
sub
or
jno
in
in
addr16
fidivs
shll
iret
push
insb
ss
imul
aaa
xchg
int
leave
shl
sbb
inc
adc
mov
and
incb
adc
sbb
pop
aam
xchg
divl
out
into
jae
inc
inc
pusha
xor
lods
sbb
cld
call
adcl
lcall
add
add
mov
inc
aaa
sbb
push
sub
fstl
loope
pop
mov
rclb
pusha
scas
mov
sbb
push
xor
push
in
loope
inc
dec
es
push
xor
dec
test
imul
shrb
sarl
pop
in
mov
mov
sbb
mov
cs
arpl
inc
test
ja
push
mov
ja
mov
xorl
mov
mov
mov
adc
xchg
pop
xor
cmpsl
mov
repnz
and
aaa
nop
data16
cmpl
and
and
in
inc
inc
or
jne
pop
xor
jge
and
mov
push
aaa
lcall
xor
xor
pop
dec
in
xchg
or
enter
xor
subl
lret
stos
roll
clc
mov
cmc
xor
and
xchg
call
push
lret
mov
mov
cmp
fcoms
push
incl
mov
adc
mov
or
dec
outsb
sti
mov
std
xchg
pop
gs
cmc
pop
xor
in
or
xor
fsub
mov
lret
inc
sbb
icebp
out
repz
clc
sbb
sbbb
sbb
sbb
pop
inc
xor
push
jl
add
ja
mov
ror
pop
adc
bound
push
cmpsb
mov
or
cmp
cwtl
sahf
jb
jp
inc
ss
lds
je
jp
cmp
std
sub
xchg
and
mov
mov
adcb
push
and
add
jl
scas
add
mov
sub
data16
das
notb
mov
cmp
xchg
in
add
dec
or
sahf
fstcw
push
fcoms
sarb
lods
mov
push
inc
or
inc
daa
mov
dec
cmp
mov
into
mov
pop
sbb
in
filds
imulb
jbe
adc
mov
cmc
sbbl
int3
stos
mov
cwtl
les
leave
test
xchg
dec
mov
mov
xchg
mov
xchg
mov
daa
or
mov
ss
mov
adc
into
lcall
mov
mov
mov
mov
push
dec
inc
ss
repz
jl
stc
outsl
dec
popf
jno
data16
scas
arpl
xor
xorb
stos
jp
dec
jno
sbb
ficomps
aas
and
test
sbb
movsb
clc
cs
pop
cmc
ret
mov
mov
scas
inc
add
popa
dec
sbb
das
xor
add
inc
add
or
mov
cmp
add
push
or
sti
mov
stc
push
ds
in
cmc
mov
xchg
jne
jmp
shrb
clc
js
arpl
sbb
leave
mov
cwtl
jecxz
mov
fwait
and
xor
lcall
push
cwtl
cmp
and
xchg
cmc
fiaddl
cmpsb
je
scas
mov
fwait
pop
cmp
xchg
lea
int
cmpsl
mov
push
pusha
sub
in
mov
pushf
sbb
popa
sub
adc
aaa
test
push
push
mov
sbb
aad
lret
clc
arpl
iret
pushf
jmp
pop
imul
test
dec
xchg
nop
sub
and
loopne
mov
add
or
in
jle
cmp
add
inc
jp
inc
out
dec
fld
loope
cli
push
ja
mov
cld
sbb
jge
xchg
dec
xor
jne
ror
xor
popf
cltd
and
and
fstps
pop
mov
je
fistps
cmp
and
add
jbe
std
fcompl
pop
stc
mov
fs
sti
in
in
cmp
jle
pop
in
push
repz
cli
or
sub
rolb
int
add
mov
scas
jbe
cltd
cmp
xlat
dec
daa
add
jae
add
push
pop
pop
sub
fnsave
xchg
adc
cmpsl
mov
imul
sub
and
stos
mov
test
pop
iret
insl
inc
jge
adc
mov
add
pop
das
mov
mov
dec
pop
orl
mov
push
iret
mov
push
shlb
shll
xlat
add
mov
fsubr
push
out
and
cmpsl
popl
aam
mov
and
in
outsl
adc
leave
jecxz
rcll
out
mov
adc
pop
mov
jae
xor
cld
lods
pop
push
sbb
xor
cmpsl
pop
cmc
inc
aaa
loop
pop
movsl
jae
dec
sbb
bound
hlt
fwait
insl
mov
xor
xlat
xchg
xor
clc
sahf
mov
add
jg
smsw
push
mov
rorb
jge
mov
pop
mov
mov
fwait
mov
aad
push
cwtl
cmpsl
add
popa
dec
fists
lcall
loop
pop
mov
xchg
addr16
fcomi
sbb
test
iret
out
sbb
or
ljmp
mov
and
bound
xor
aaa
mov
call
sarb
imul
out
mov
mov
pop
inc
pop
pop
mov
xor
jmp
imul
push
mov
in
pushf
idiv
mov
push
cmc
sbb
cld
add
xor
mov
inc
fwait
insl
pop
xorl
dec
push
add
mov
mov
adc
into
push
mulb
pop
mov
cld
test
arpl
shlb
inc
sbb
sbb
int3
ret
add
mov
lcall
and
mov
pop
sbb
pop
aaa
mov
pop
daa
pop
in
sub
out
fsubl
fimuls
cmp
pop
inc
ret
jbe
in
sbb
mov
les
pop
push
mov
sti
lods
leave
and
push
pop
cmpl
gs
push
and
xor
popa
mov
imul
push
insl
sub
cld
lcall
aad
lahf
sub
and
jne
dec
lods
xlat
dec
sub
mov
sbb
test
rcll
mov
jbe
mov
je
push
idivl
fwait
scas
sarb
sub
stos
mov
mov
dec
mov
xor
out
aaa
and
insl
push
mov
lahf
cmpsb
mov
push
jmp
repz
sbb
mov
leave
std
cmpsl
mov
ss
sbbb
leave
inc
in
xor
mov
mov
insb
out
clc
cs
bound
lods
cmpsb
inc
outsl
movsb
bound
adc
out
xchg
jo
lcall
sub
inc
jnp
xchg
sbb
daa
inc
int
jnp
xor
pmullw
push
jge
mov
movsb
xchg
inc
jge
int
inc
xchg
jmp
jg
cs
mov
popa
and
andb
cmp
enter
aaa
or
inc
cmp
add
lahf
fs
gs
fnsave
adcb
sbb
mov
mov
cs
aas
push
inc
xchg
pop
add
es
out
mov
idivl
cmp
pop
jns
fdivrs
adc
in
jno
popf
mov
cmpsl
jmp
stos
xchg
inc
cmp
sub
jo
nop
inc
push
xor
mov
popf
adc
add
xor
aas
shll
cmp
mulb
mov
add
push
push
imul
adc
cmpl
pop
addl
jne
add
mov
subb
inc
bound
popa
ret
inc
mov
icebp
pop
mov
push
jg
fs
mov
aad
in
cmc
cmp
add
cmp
push
pop
ret
cs
add
sub
lret
jl
mov
stos
lock
cmc
xor
adc
je
imul
push
je
xor
mov
jno
inc
cmp
insb
cmp
push
xchg
insl
adc
dec
xor
sti
adc
loopne
cltd
movsl
mov
inc
lret
mov
shl
in
mov
and
jne
xchg
jno
frstor
popl
mov
xor
int3
sbb
addr16
and
and
mov
inc
xchg
shl
push
cmp
test
xchg
arpl
cmp
adc
cmp
adc
cli
jp
xchg
ja
scas
inc
and
dec
fwait
mov
movsl
in
pop
xor
enter
or
out
dec
das
mov
mov
movsl
or
sar
adcb
jo
and
lcall
adc
mov
mov
push
imul
loopne
das
ds
sti
dec
mov
clc
mov
aam
repnz
mov
lret
sbb
iret
cwtl
in
stos
cmp
les
push
push
sub
js
jg
jne
ja
sub
aas
mov
mov
repz
xor
arpl
sahf
jbe
sub
movl
subb
mov
sti
sbb
ret
into
mull
arpl
cltd
xor
adc
jmp
sub
adc
push
insb
push
loope
mov
dec
add
pop
push
xor
xchg
add
sub
sbb
cmp
testb
in
cli
pushf
add
outsl
je
dec
mov
lds
outsb
rorb
mov
insl
dec
dec
push
ficompl
gs
dec
push
or
add
push
insl
sbb
lock
mov
mov
imul
out
push
mull
mov
jmp
xor
cmpsl
inc
push
jne
shrb
sarl
lds
jae
imul
arpl
xor
dec
loopne
mov
cmp
cmp
or
sarl
jbe
inc
and
test
mov
jb
cmc
add
pop
and
pop
ret
mov
jne
push
xchg
mov
orl
push
cltd
iret
or
dec
int3
sbb
xor
lods
dec
into
loopne
mov
gs
pop
mov
movsl
andb
pop
mov
repz
prefetch
or
and
mov
das
mov
push
repnz
fisubl
lock
sbb
sub
jne
jg
jno
push
adc
dec
stc
sar
mov
cmp
sti
sub
mov
lahf
enter
push
mov
jl
lahf
sbb
jo
xlat
shrl
pop
inc
mov
js
in
push
push
push
inc
xor
int3
xchg
dec
mov
sbb
jne
popa
xchg
movsl
test
xor
nop
hlt
add
pop
jb
leave
mov
xchg
or
cwtl
inc
pop
icebp
adc
mov
push
insb
or
or
inc
and
adc
xor
addl
aam
out
fwait
sti
test
mov
lahf
jp
bound
xor
xchg
call
lea
dec
sbb
repnz
mov
call
jl
fsubl
rol
mov
scas
mov
bound
or
fucomi
popf
pop
add
test
loope
inc
les
push
xchg
fs
sbb
movb
and
sub
pop
sahf
cmp
push
pop
stos
stc
fmull
jbe
jge
push
orl
scas
inc
push
pop
pop
dec
mov
inc
bound
xchg
popf
sbb
push
adc
xchg
sbb
pop
cmc
lds
push
and
je
aad
mov
jge
push
mov
outsb
adc
push
icebp
jge
rcl
xchg
sarb
mov
push
sub
fsubs
out
dec
in
mov
dec
mov
dec
negb
rorb
cli
sbb
das
sbb
dec
push
or
lahf
out
and
inc
add
mov
add
or
pop
dec
and
orb
shlb
mov
cs
jnp
inc
stos
scas
sbb
xor
push
std
pop
loop
cmp
mov
pop
fdiv
dec
push
inc
mov
sbb
pop
mov
ja
mulb
arpl
pop
std
nop
dec
inc
adc
lods
cs
jl
dec
out
mov
ret
aas
arpl
shl
lret
xor
sbb
xor
inc
jno
stos
or
add
out
mov
cld
in
stc
jge
sti
clc
adc
xor
push
push
repnz
gs
dec
mov
xchg
xchg
cmpsb
stos
rolb
lods
push
negl
out
sub
sub
sbb
lods
addr16
sbb
jnp
addr16
mov
add
mov
fs
movsb
imul
jl
xchg
sbb
pop
hlt
jmp
and
aaa
lds
mov
lret
dec
out
push
jne
enter
mov
shll
sub
in
or
lods
popa
imull
into
jge
push
insb
xchg
es
mov
or
mov
mov
xchg
adc
jb
enter
test
js
dec
addr16
jo
out
paddusw
inc
nop
imul
pop
mov
mov
cld
cmp
xor
sub
pop
mov
enter
stos
cmpsb
repz
push
push
imul
lds
scas
jne
sub
and
mov
sbb
xchg
out
outsb
lds
cli
lahf
das
pop
test
push
fstps
cmpsb
cld
jl
mov
inc
out
add
push
or
pop
cmpsl
cmpsb
dec
jge
adc
daa
icebp
sahf
inc
sbb
sub
jp
mov
jl
add
mov
sbb
inc
ret
cmp
adc
sbb
mov
sbb
add
sub
movsb
sub
xlat
jg
mov
jge
int
inc
fnstenv
sbb
sub
xor
mov
test
out
scas
scas
adc
fcoms
enter
jge
cmpsb
in
mov
lret
je
test
cmp
imul
out
in
scas
movsb
ss
push
stc
fs
jne
fisubs
ffreep
repnz
jnp
sub
jo
add
xor
sbb
ds
xlat
rcll
aad
cmp
stos
cmp
sbb
dec
mov
jmp
ja
rclb
aad
js
shll
lcall
dec
aaa
fnsave
lods
lahf
sti
pushl
cmc
pop
into
iret
movsl
mov
out
sbb
rcrb
add
test
jge
sub
ret
jmp
cmpsb
cmp
and
data16
mov
fimull
stc
das
bound
sub
rorl
popf
vcvtpd2dqx
mov
inc
aad
shrb
sub
mov
push
mov
out
push
jp
rorl
jb
xor
add
popf
daa
hlt
mov
ljmp
jno
xor
sbb
outsb
mov
in
mov
sub
fbld
pop
inc
cmpsl
and
inc
add
mov
faddl
fildll
sub
loope
int
ja
aas
jnp
or
lret
aaa
adc
mov
dec
push
and
inc
adc
das
pop
or
sbb
inc
mov
iret
stc
lods
jne
mov
jnp
mov
adc
scas
mov
inc
in
jmp
enter
xor
mov
jns
or
push
add
shrb
cmp
lret
push
loope
adc
mov
sub
and
cld
sbb
out
or
add
dec
and
xor
jge
sub
repz
pop
fadd
pop
cmp
pop
subl
add
sub
sbb
pop
sbb
mov
mov
popa
ds
mov
cmpsb
pop
sti
shrb
test
xchg
je
cmp
pop
scas
jmp
popa
xchg
insl
fs
push
or
popf
sar
mov
daa
int3
shlb
fildl
insb
inc
pop
sbb
pop
add
or
mov
popa
insl
jl
lock
push
dec
mov
and
loopne
ds
mov
sbb
pop
push
cmp
aas
dec
lea
xor
add
gs
xchg
mov
cmp
clc
add
cmpsl
test
sti
adc
fs
jno
xchg
ljmp
push
jb
ret
icebp
pop
cmp
sub
adc
mov
lods
stos
push
das
les
inc
xor
and
adc
and
fs
pusha
test
daa
mov
int3
in
icebp
pop
pop
sti
out
adc
cmp
test
push
cmpsb
out
lods
add
inc
mov
and
sub
outsb
pop
sub
cltd
mov
xor
push
mov
xor
pop
xor
ffreep
das
inc
into
jecxz
jmp
shll
jle
dec
mov
sbb
push
lods
sub
fistpll
mov
pop
add
imul
gs
es
movsl
nop
xor
mov
xchg
push
push
test
jo
lds
icebp
inc
call
xchg
in
xor
das
adc
popa
mov
xorb
lea
pop
cwtl
mov
dec
fs
shrb
and
je
stos
aaa
push
adc
int3
insb
lret
cmp
pusha
pcmpgtd
fsubs
and
and
aas
mov
das
stos
mov
sbb
xchg
xchg
pop
dec
loop
xor
std
dec
push
mov
inc
pushf
xor
pop
call
sub
repnz
jno
out
inc
pop
and
and
fcomps
out
sub
js
pushf
xchg
cmpsb
mov
out
cmp
push
dec
lret
adc
mov
add
sbb
jl
cmp
cmp
push
push
lods
imul
jo
bound
popa
lds
enter
pmullw
or
mov
pop
mov
mov
cwtl
imul
enter
pop
xchg
fstps
xor
loopne
mov
fs
fcmove
jge
mov
fmull
push
dec
mov
jne
pop
push
dec
dec
in
push
in
cltd
push
mov
dec
sbb
xor
fcomip
inc
and
adc
rcrl
fwait
jle
jecxz
fmull
test
pop
add
add
inc
vpcmpeqb
out
sbb
sbb
mov
into
push
fsubs
push
scas
dec
aaa
lret
sub
sub
inc
sub
jmp
stc
pop
addl
sub
cmp
xlat
push
inc
mov
scas
mov
mov
test
jno
adc
lcall
mov
push
jo
fidivrs
rcrl
std
sub
mov
fstpl
sbb
sub
xor
pushf
sbb
jge
push
sub
add
lahf
test
in
mov
mov
pop
insl
lret
sub
cmp
jge
push
fidivrl
lcall
pushf
jnp
xchg
mov
inc
es
aam
in
mov
push
icebp
push
xchg
xor
popf
das
and
std
inc
jb
mov
loopne
pop
mov
out
lret
incb
add
leave
sub
je
mov
cmpsl
push
fistps
scas
std
push
sbb
es
ret
dec
shrl
subl
ljmp
xchg
jne
aas
jecxz
lds
jns
outsl
cld
std
mov
mov
dec
fbstp
inc
in
sbb
rcrb
out
dec
dec
sub
insb
xor
test
scas
mov
ja
insb
int
or
mov
stos
and
cmp
cmp
adc
and
pushf
lret
jecxz
push
fs
ljmp
pushf
pop
xchg
mov
gs
loopne
loope
ja
mov
pop
int
mov
out
push
stos
push
sub
xchg
add
mov
sbb
push
cmp
adc
cmpsl
rcrb
popa
xlat
mov
rclb
in
xor
fdivrl
and
xor
xor
loop
mov
and
mov
cld
xchg
call
clc
sub
mov
jne
and
mov
sub
sbb
pop
cmc
mulb
inc
cli
mov
and
enter
push
pminsw
in
out
and
sbb
out
add
into
push
jge
ret
mov
jno
imull
and
fcoml
inc
sub
xor
jns
out
dec
xchg
mov
dec
pushf
pop
iret
movsb
inc
dec
inc
cmpsb
insb
test
push
shrl
jg
outsb
popf
xchg
cmc
cmp
cmpsl
daa
lret
pusha
push
pop
push
aas
mulw
mov
and
push
daa
lcall
and
shl
jnp
adc
sbb
cltd
fnstcw
xor
cmp
clc
daa
push
inc
push
adc
push
xor
mov
push
pop
mov
inc
xrelease
orb
adc
sahf
fidivl
popf
push
mov
sub
pop
mov
lock
ret
enter
mov
pushl
test
sub
mov
rcrl
iretw
cmc
outsl
addr16
mov
adc
push
popa
popf
subl
sti
inc
sub
or
stc
cwtl
in
loope
xor
cmp
dec
jmp
fldl
mov
cld
fsubl
cmpsl
mov
fadds
push
enter
lea
and
out
in
or
push
lea
dec
out
mov
xchg
cmp
flds
xor
repnz
lods
notl
xor
pop
stc
cmpsb
mov
shrl
push
enter
sub
push
sbb
test
lock
mov
mov
lret
pop
mov
enter
ja
jmp
dec
fcmove
push
jae
mov
or
popa
imull
arpl
mov
mov
cmpsl
cmp
popa
cmp
popa
xchg
xchg
xor
movsl
cmp
pop
std
push
push
inc
in
les
xchg
in
andl
and
hlt
dec
sbb
lock
lret
aaa
dec
daa
mov
mov
ror
mov
or
xchg
dec
mov
cli
pop
push
inc
enter
pop
lcall
mov
aam
xor
mov
xor
outsl
push
sub
ss
mov
imul
sarl
lock
aas
cmc
pusha
add
jbe
int
outsl
sbb
xor
cwtl
test
stos
pop
ret
ja
gs
sbb
sub
cmp
mov
in
push
mov
sti
cmp
jne
in
xorb
mov
xchg
lds
in
or
mov
jne
mov
xor
inc
aad
pop
mov
fisubrs
push
mov
push
xchg
mov
cld
jns
cmp
loope
mov
lret
mov
mov
stos
push
inc
mov
test
add
sub
rcl
adc
adc
push
faddl
scas
cmp
stos
cwtl
dec
test
mov
xchg
lahf
int3
aas
pop
insl
stc
popl
call
rcl
push
rclb
rorl
xor
sbb
lock
call
push
cs
inc
adc
outsb
mov
cltd
cwtl
imulb
sbb
dec
mov
xor
pop
xor
shrl
imul
adc
mov
push
out
cmpsl
jo
cmpxchg
or
aaa
sub
inc
jbe
lods
sub
mov
dec
jo
std
leave
lcall
lcall
push
mov
xchg
add
sub
xor
enter
push
popf
adc
rol
sbb
test
xchg
into
lret
add
imul
cmp
xchg
cmp
movsb
stos
cltd
test
popa
arpl
gs
mov
jne
loop
pop
leave
pop
fnsave
push
sbb
cld
aas
jae
add
cmc
lret
sbb
add
cmp
ds
push
cmc
ss
pushf
add
lea
addr16
jo
xchg
or
xchg
lcall
in
push
das
add
mov
jbe
mov
mov
xchg
data16
mov
lgs
inc
das
push
lea
lret
leave
mov
dec
push
rorl
loope
cmp
sbb
push
dec
adc
push
sbb
sub
mov
fmuls
xchg
and
pop
fadds
jne
mov
rorl
popa
jb
cld
mov
enter
mov
pop
or
xchg
sti
mov
bound
out
out
adc
adc
inc
sbb
add
fdivr
decl
arpl
jno
sub
cwtl
jge
in
pop
jne
enter
addr16
fisttpl
jmp
jno
mov
in
xchg
je
xor
icebp
lods
mov
push
mov
inc
cli
fistl
icebp
inc
in
dec
mov
cmp
push
int3
aas
outsb
lock
dec
insb
xchg
sbb
or
movsl
jb
adc
mov
jno
pop
test
fs
in
js
jnp
sti
inc
int
push
add
mov
cmp
mov
popf
sub
cli
sub
jmp
adc
xchg
add
sub
addl
adc
mov
fdivrl
ret
xor
sbb
push
ficoml
push
sbb
dec
ret
shlb
cmovl
pop
rorb
or
nop
push
cmc
pop
mov
dec
out
icebp
cmpb
icebp
add
sub
rcr
mov
sti
out
sbb
xor
addr16
adc
into
mov
hlt
fidivrs
or
rcll
cli
sarl
ret
mov
sbb
adc
or
test
dec
inc
insb
sahf
fisubl
pusha
out
push
popa
jno
jb
outsl
fs
lret
and
insl
dec
xor
push
mov
adc
mov
loope
jns
adc
xor
and
insb
sub
cmpsl
std
int3
and
test
mov
jbe
sbb
jbe
add
xor
outsl
outsl
dec
or
imul
adcb
adc
or
and
pop
pop
push
pop
insb
jecxz
pop
and
imul
mov
jle
stc
scas
mov
fildll
andb
pop
inc
xor
fsts
cmpsl
add
xchg
pusha
stos
jno
cmp
test
mov
inc
stc
aas
std
or
push
addr16
ret
xor
lret
fiaddl
and
add
add
stos
repz
fs
push
adc
les
xor
mov
cld
mov
xchg
xor
scas
inc
jnp
repnz
shld
outsl
dec
xchg
cmp
jns
pop
sbb
in
test
rol
xchg
popa
sbb
mov
mov
ret
pushf
outsl
mov
hlt
scas
inc
jle
fdivrl
lea
sbb
mov
pusha
ror
adc
jmp
xor
mov
xchg
mov
leave
nop
or
push
cmp
daa
dec
sbb
mov
rcrl
int
dec
pusha
cs
insb
pop
hlt
lahf
xchg
ljmp
hlt
or
jne,pt
add
insl
cmpsb
mov
pop
pop
add
adc
mov
push
aas
in
in
call
fnstcw
pusha
imul
movd
cmp
xchg
add
or
xor
xorl
inc
sub
das
mov
arpl
fstps
push
add
insl
aas
imul
pushf
inc
imul
mov
xchg
imul
xor
hlt
sub
inc
out
popf
xchg
pop
test
mov
cwtl
out
mov
xor
pop
push
daa
mov
adcl
ficoml
insb
xchg
xor
dec
push
cwtl
push
jmp
inc
dec
xchg
xchg
add
cmp
pop
lods
mov
push
push
push
mov
jecxz
mov
adc
loop
fsubs
nop
data16
pop
mov
adc
mov
imul
inc
int3
xchg
popf
mov
sub
dec
xchg
mov
and
test
dec
or
dec
jecxz
imulb
adc
fucomi
mov
pop
jle
push
xorb
repz
adc
das
add
and
mov
aam
stc
jbe
mov
call
cmp
dec
stc
cmp
hlt
cmpsl
push
xchg
xor
push
pop
ljmp
stc
mov
fildl
sbbl
inc
shlb
lcall
xchg
ds
lret
fdivr
ds
shl
fcoms
dec
ds
cltd
or
ljmp
out
outsl
xchg
adc
jmp
xchg
imul
lret
mov
popa
movsl
shlb
jecxz
andl
pop
inc
xchg
andb
sahf
cmp
mov
dec
push
or
cmp
scas
mov
and
sahf
push
sub
xor
shll
add
out
sbb
fstpl
popa
popa
rdtsc
je
movsl
sub
push
push
insb
aad
pusha
cld
fistpl
jge
inc
fistps
out
jp
and
push
mov
and
pop
test
aaa
push
in
sbbl
pop
addr16
dec
xor
fdivs
push
ja
iret
je
push
sub
cmp
push
enter
sub
mov
or
push
sub
enter
inc
pop
xchg
xlat
xchg
in
icebp
sub
andb
jle
fmull
arpl
xorb
scas
and
xor
sbb
in
gs
xchg
sbb
ss
sbb
imul
push
adc
stc
and
xor
inc
xor
pop
imul
xor
add
mov
jp
mov
dec
cmp
mov
andl
lret
jo
sub
addr16
ror
sub
faddl
cltd
pop
push
mov
add
icebp
fadds
adc
add
cwtl
dec
mov
in
mov
mov
int3
or
popa
xor
mul
sbb
and
cli
xor
lods
inc
shl
shrl
scas
mov
inc
mov
push
xor
bound
xor
jmp
inc
ret
in
add
cmp
dec
mov
jl
sbb
outsl
dec
hlt
jnp
nop
cs
in
mov
stos
push
test
push
sbbb
inc
adc
sub
push
mov
pusha
sti
jnp
add
test
inc
das
jns
push
pushf
cmp
mov
mov
xor
aas
mov
cmp
into
dec
cmp
cmp
mov
arpl
stos
mov
fdivr
lret
push
xor
cs
sbb
lds
insb
scas
inc
dec
or
and
or
cmp
sub
cwtl
sub
mov
sbb
pop
repz
ret
mov
or
xor
rcrl
in
and
shl
adc
hlt
push
pusha
jecxz
dec
mov
xchg
mov
pop
lods
xorb
or
mov
rorl
sbb
adc
or
xchg
mov
dec
xchg
pop
cvtps2pd
fstpt
dec
push
gs
push
cmp
mov
xor
into
dec
mov
insl
addl
or
jb
loop
insb
xchg
xor
fnstenv
fs
leave
mov
mov
pop
sbb
dec
and
lds
rcl
xchg
mov
decl
mov
push
push
mov
test
adc
cmp
cs
mov
add
xor
call
inc
push
sub
das
inc
shll
pop
hlt
outsl
or
mov
or
ljmp
mov
dec
bound
ret
jne
mov
mov
sbb
lret
int3
jnp
inc
mov
xor
adc
sub
insb
outsl
mov
jns
sbb
fisubs
stc
fsubrp
in
xchg
xor
jnp
aam
leave
scas
cli
and
cli
es
test
mov
insl
mov
xor
mov
xchg
insl
fmull
cmp
iret
daa
mov
lock
xor
daa
or
iret
aaa
rcrl
xor
and
cld
add
fisubrs
cmp
cwtl
popa
je
adc
sbb
ljmp
cmp
test
pusha
pminub
cmp
mov
fsubp
imul
aaa
add
lahf
shll
sti
rolb
arpl
and
xor
mov
decb
daa
pop
jl
jae
mov
or
mov
xchg
popa
cmpsl
ljmp
cmpsb
mov
test
inc
lcall
out
or
arpl
outsl
xor
xchg
jecxz
or
loope
ret
cmpsb
push
notl
dec
imul
test
inc
xlat
pop
loop
push
stos
cmpsl
mov
lods
and
fdiv
in
fstl
popa
dec
iret
pop
dec
mull
hlt
cld
push
int3
pop
jmp
hlt
push
fs
lods
xor
sar
je
cmpsl
pusha
cmp
test
or
test
repz
sub
fcmovnb
xor
mov
push
push
pop
jp
xor
mov
jae
add
dec
add
mov
dec
sbb
insl
pop
xor
hlt
mov
push
pop
adc
out
fisubrl
jp
jg
cmc
into
fstpt
push
cmp
pop
cmp
pop
xor
cmp
mov
or
stos
out
adc
or
push
fsub
ret
aaa
cmc
lahf
mov
jge
ret
jo
xor
push
cmc
add
mov
imul
clc
dec
std
pop
cmp
dec
scas
mov
mov
push
xor
rorb
and
bound
mov
pop
jl
test
and
add
adc
mov
mov
mov
and
loope
cmp
aam
mov
leave
mov
adc
mov
xor
inc
mov
push
lock
or
jle
mov
cmp
pop
ja
adc
dec
dec
sub
leave
repz
sbb
sub
lret
into
loope
add
inc
sub
sub
out
xchg
out
in
mov
mov
or
push
dec
cmpsl
or
mov
sbb
fnstcw
cmpsb
push
sbb
daa
sahf
push
outsb
outsb
pop
bound
shlb
mov
dec
stos
pop
jns
xor
insb
arpl
pop
mov
mov
lods
mov
dec
pop
pop
mov
mov
fsubrl
mov
std
fs
push
pop
int
cmp
and
inc
mov
mov
mov
xor
sub
leave
shrl
sti
in
jnp
pop
sahf
in
sub
inc
fadds
ja
je
mov
mov
sub
push
sar
mov
or
outsl
rcrb
sahf
jae
push
in
jb
xor
mov
cmpsl
out
test
mov
mov
cmpsl
push
mov
xor
pop
pop
fcmovu
xchg
xor
sbb
addr16
add
mov
add
dec
lret
hlt
jo
aam
cs
pop
inc
dec
xlat
inc
adc
push
push
pop
gs
mov
sbb
clc
shlb
and
incl
rclb
lret
jp
pop
pop
test
roll
and
xchg
in
xchg
call
daa
test
mov
sbbl
mov
sub
lods
mov
fwait
divb
mov
cmc
out
jecxz
stc
jmp
jno
add
cmpsl
pop
inc
pop
adc
jno
sub
mov
xchg
daa
fists
and
cmp
or
repnz
dec
mov
dec
push
mov
dec
imul
mov
testl
add
jo
int3
add
insl
xor
pop
out
loop
cmc
pop
mov
mov
ja
nop
inc
movsl
xor
lahf
mov
cs
fildll
xchg
mov
aam
xchg
ret
outsb
mov
arpl
inc
fcom
xor
scas
mov
lret
test
cmp
jecxz
into
dec
lret
sbb
aaa
insl
pop
sbb
in
pop
cmp
add
xor
add
and
xor
and
and
adc
mov
sarl
jle
cmpsb
xor
and
lds
leave
xchg
inc
in
xor
inc
mov
aaa
cmovg
pop
out
mov
lea
xchg
dec
imul
aam
xchg
sbb
movsl
add
pop
nop
iret
mov
sub
inc
pop
mov
dec
aaa
jo
mov
push
fiadds
cmp
pop
xchg
aad
hlt
pop
mov
sti
cmp
add
pushf
jne
scas
mov
adc
mov
aas
xchg
xor
xchg
push
xchg
pop
lcall
in
nop
movsl
pop
push
cld
scas
mov
movsb
pop
pop
mov
dec
shl
enter
xchg
loopne
ss
xchg
jnp
jnp
out
aam
pop
loopne
xchg
pop
lods
loopne
lahf
xchg
pop
dec
cmc
cmp
xor
pop
pop
jg
out
jbe
fst
push
xor
or
pop
jmp
sbb
mov
fucomp
jne
fimull
adc
push
pop
push
pop
aaa
test
and
jmp
pop
jle
or
cmpsl
xor
fcom
push
or
fcoml
xchg
mov
pop
xor
pusha
or
inc
sub
stos
lock
iret
lret
insb
jb
inc
mov
sbb
jg
cmpsl
es
call
mov
nop
or
in
loopne
clc
push
sub
add
das
nop
daa
fcoml
mov
outsl
push
dec
imul
mov
sub
add
mov
mov
jl
mov
ffree
pop
mov
or
mov
pop
aas
mov
clc
test
and
pop
add
sub
jb
xor
loop
pop
test
adc
mov
dec
push
stc
leave
or
mov
push
in
lahf
mov
xchg
sbb
or
mov
movb
jae
add
sbb
jo
loopne
dec
mov
adc
loope
and
movlhps
pop
jnp
fwait
pop
dec
shl
mov
cli
cmp
repz
enter
dec
dec
xor
icebp
clc
mov
mov
fcoml
jnp
mov
in
fsubl
mov
push
hlt
enter
movsl
mov
xchg
cmpsl
add
mov
jecxz
xor
push
jge
jmp
cld
sbb
sbb
mov
stos
add
jmp
imul
and
sub
xchg
shl
ficoms
fs
in
add
add
aam
fs
push
push
popa
imul
xchg
jb
sbb
mov
or
popf
pop
sbb
ret
and
mov
and
sti
sbb
push
insl
cli
and
mov
push
pop
imul
insl
or
insl
dec
mov
test
arpl
cmp
inc
cmp
jl
mov
mov
fdivr
adc
inc
adc
xchg
arpl
mov
mov
ficompl
pushf
mov
les
and
cmp
pop
fs
xor
sbb
in
push
sbb
cli
sti
dec
movsb
mov
pusha
inc
push
dec
cwtl
pop
aad
mov
cmp
sbb
repnz
add
js
imul
mov
xor
fisubrs
std
xor
jne
jge
add
call
in
lcall
inc
push
mov
xchg
push
mov
pop
je
icebp
adc
fisubs
jne
out
mov
xor
cmp
push
cli
sub
aaa
into
sub
int
aam
fcomip
xchg
mov
into
sub
jnp
xor
push
dec
xchg
sub
xchg
and
jnp
push
mov
mov
or
mov
push
jno
mov
inc
outsb
xor
pop
or
andb
mov
mov
stos
mov
lret
mov
loopne
bound
add
test
xor
in
lock
imul
bnd
sub
xor
bound
gs
xor
mov
jne
rcll
adc
sbb
jb
fsubr
xor
subb
push
xchg
hlt
orl
pushf
insb
scas
or
and
mov
xor
and
iret
xchg
add
xchg
xor
mov
mov
dec
mov
call
subl
rcrb
lret
es
rorb
popf
les
jmp
in
test
mov
cli
hlt
ja
pop
and
roll
and
push
in
ss
and
jb
cmp
cmc
jns
test
add
dec
push
or
popf
and
int
int
pop
sbb
jg
adc
hlt
mov
fmuls
xchg
xchg
mov
loope
mov
mov
mov
sbb
mov
imul
jo
mov
icebp
pop
mov
cltd
add
cmc
addr16
lea
xchg
pusha
pop
leave
enter
sbb
std
ss
nop
push
cmc
mov
pop
insl
xchg
sahf
out
pop
mov
addr16
fldcw
sub
jbe
out
lods
mov
and
rol
sub
movsb
push
test
test
xor
xor
outsl
jecxz
hlt
stc
daa
enter
inc
cmp
fndisi(8087
push
shll
cmp
inc
pop
mov
xor
pop
mov
add
sbb
cld
outsb
add
mov
mov
add
outsb
adc
test
out
adc
andb
mov
dec
icebp
daa
xchg
xlat
int3
int3
adc
add
xchg
mov
bound
inc
jecxz
fwait
cwtl
dec
outsb
xor
imul
push
repz
or
push
pushf
imul
inc
icebp
es
dec
jmp
fisubrs
cmp
mov
jne
adc
jp
mov
jge
sub
jae
jne
or
jno
sbb
add
and
jo
test
and
pop
mov
push
pop
xchg
lcall
ds
and
mov
lret
sbb
movb
cmpsl
xor
pop
lea
and
jge
test
dec
mov
lret
fadds
ss
adc
test
sahf
add
sbb
adc
jl
pop
pop
dec
syscall
adc
ds
pop
add
lds
mov
jg
jmp
mov
mov
cmp
mov
ljmp
xor
xchg
add
sbb
int
sub
adc
das
add
jnp
pop
cwtl
aaa
int
arpl
faddp
add
push
mov
je
cmpsb
dec
popa
ret
pop
mov
das
pop
adc
xchg
ret
mov
bound
and
xor
mov
xlat
sub
pop
mov
pop
jb
pop
push
xor
mov
sbb
mov
xor
jne
dec
sbb
sbb
dec
xlat
lods
add
jg
adc
xlat
subb
cmp
lods
and
dec
inc
popa
cmpsb
sub
inc
lock
pop
mov
pop
iret
fnstsw
mov
mov
or
mov
icebp
jg
dec
or
xchg
nop
mov
mov
push
sub
and
jbe
mov
mov
or
scas
adcb
lret
sbb
pop
popa
int
and
stc
ror
jg
xor
mov
xchg
push
jle
stc
jmp
ljmp
sbbl
movsb
or
hlt
dec
and
mov
pop
lcall
xor
dec
cmpsb
fildl
add
push
sub
lds
or
daa
div
mov
repz
mov
inc
and
adc
sbb
icebp
mov
xchg
xor
hlt
dec
mov
fwait
or
fimuls
cmp
pop
cmc
daa
shrl
xor
sti
aaa
adc
stos
lods
daa
push
negl
test
mov
arpl
push
mov
push
inc
push
lea
sbb
adc
ret
stos
stos
arpl
xor
test
mov
pop
xor
aaa
outsb
imul
add
mov
xchg
xchg
loop
xchg
inc
xor
test
cwtl
inc
cmp
pushf
xchg
mov
xor
pop
adc
in
xor
lock
lock
imul
cmpsb
hlt
pop
cmp
aad
dec
mov
pop
cmpsb
jp
jge
jne
push
mov
or
inc
xchg
adc
cli
lahf
je
push
iret
daa
and
pop
scas
mov
mov
pusha
cltd
pop
das
xchg
and
pop
mov
insl
loopne
imul
nop
and
mov
mov
in
mov
xchg
clc
inc
pop
push
leave
jl
into
xor
loope
lea
mov
fcmovnu
push
inc
sti
xchg
push
push
pop
cmp
push
push
aaa
out
pop
lea
pop
mov
jne
sbb
sbbl
icebp
add
addb
pop
xor
push
shrl
push
add
pop
fisubrl
sub
js
ret
in
jns
scas
jge
adc
push
mov
or
daa
fdivl
dec
push
pusha
mov
mov
lret
addr16
cmpb
dec
movsb
or
mov
mov
push
fists
jo
xchg
imulb
xor
pop
jbe
hlt
out
fisttpl
mov
inc
sahf
jb
cmpsl
insb
ret
mov
sahf
pushl
cli
jae
or
add
popf
insb
jmp
das
fdivrs
add
push
nop
testb
repnz
call
stos
cmpsb
xchg
insb
and
mov
push
and
in
sbb
pop
shrb
aas
icebp
xchg
filds
adc
pop
adc
fwait
and
or
ja
into
int
das
in
add
negl
xchg
fsubl
add
jnp
sub
mov
nop
fcmovne
dec
push
jb
push
cmp
mov
and
cwtd
add
mov
lds
je
fisubs
aas
arpl
nop
and
sarb
sbb
iret
std
lds
out
fabs
lea
cmpl
data16
sti
sarb
insl
add
or
cmp
xor
pop
cmpsl
sbb
inc
push
sbb
push
dec
insl
aam
cli
gs
rorl
test
shlb
dec
mov
aad
jbe
xrelease
mov
loope
dec
push
daa
pop
add
and
ds
shrb
outsl
or
adc
fs
mov
jecxz
cwtl
repz
mov
jbe
add
insb
enter
add
outsb
insl
jo
pop
rorl
sbb
das
push
inc
mov
lret
pop
jo
test
pop
mov
insl
dec
sbb
fadds
xchg
outsl
mov
pushf
aas
push
mov
lods
test
stos
lea
mov
nop
addr16
mov
jno
pop
add
fstl
or
jbe
stc
push
mov
dec
lock
fwait
out
xchg
daa
pop
fcmovu
sub
sub
shlb
test
push
insl
mov
aaa
lods
and
mov
add
cmova
movsl
push
shl
rcr
in
jno
int3
cwtl
mov
add
pop
adcb
cmp
jge
add
xchg
outsl
scas
adc
faddp
inc
gs
jns
mov
xchg
inc
add
cmc
pop
add
dec
mov
jge
dec
xchg
mov
ret
jl
psubusb
popa
sbb
sbb
and
xor
or
jl
mov
mov
sbb
jnp
sub
aad
sub
outsl
dec
mov
cmpsl
cld
mov
mov
pop
jg
insb
popa
inc
dec
push
add
ret
dec
aam
add
mov
cmp
inc
xchg
push
xor
cmc
mov
test
or
je
mov
test
movsl
inc
xchg
mov
cwtl
xchg
xor
cmpsl
jae
sbb
xor
jl
cmc
xor
mov
sbb
jo
imul
mov
cwtl
adc
jmp
inc
add
or
add
xor
sbb
lea
aam
fstp
sbb
mov
push
arpl
ljmp
push
ds
arpl
xchg
pop
jbe
sub
jbe
lods
adc
ret
loope
fisubl
mov
xchg
ds
faddl
insl
imull
andb
or
test
sub
les
fsubs
lds
add
mov
gs
push
mov
cltd
insl
or
add
add
jmp
lods
jno
lret
jne
jb
cmpb
xor
aam
rorb
cli
inc
sub
int
outsl
out
aad
fdivr
cmc
movsl
fimuls
mov
stc
sbb
test
xor
or
push
jae
cli
in
add
mov
aad
pop
ret
loopne
jecxz
sti
data16
inc
dec
scas
and
and
popa
std
pop
ret
pop
lret
popa
xor
and
sbb
xor
fdivrs
mov
lret
and
sti
in
dec
popa
cmp
cwtl
cmp
addr16
mov
lea
mov
pop
inc
movsl
xor
cmp
sbb
cli
and
cmc
lock
pop
dec
pop
testl
sub
gs
enter
xchg
mov
sbb
dec
inc
inc
or
sbb
jl
lods
dec
inc
jo
or
cmpsl
push
jmp
insl
or
mov
push
mov
xchg
in
andl
lahf
outsl
cmc
popa
dec
and
xchg
stc
jl
and
jle
inc
iret
jle
and
movsb
fnstsw
movl
je
jp
stos
and
adc
es
fnstcw
gs
dec
pushf
jnp
aad
mov
jno
mov
mov
aam
sahf
ret
lret
jb
xor
mov
xor
and
cmc
bound
mov
inc
fstpl
gs
sbb
insb
clc
sbb
or
out
add
test
rcrb
fs
xchg
mov
inc
out
insb
pushf
xor
dec
sti
dec
pop
aam
test
pop
pushl
pusha
lahf
mov
out
leave
dec
in
xlat
xchg
pop
fcmovb
xchg
out
sub
in
dec
leave
xor
and
dec
pop
outsb
or
pop
mov
popa
popl
push
pop
xor
push
es
popa
dec
sbb
idiv
mov
pop
mov
add
mov
pop
in
fldt
pop
outsl
out
rorb
mov
or
pop
or
xchg
scas
aam
or
pusha
push
mov
add
gs
fsubs
or
xor
lretw
jo
rcl
jp
mov
cmp
pusha
data16
xor
pop
repz
xchg
push
inc
jle
lods
lods
jl
fistps
cs
and
cmp
enter
push
or
fwait
roll
enter
or
add
push
add
inc
mov
dec
iret
call
scas
xchg
mov
inc
push
lds
mov
loop
sub
pop
les
lahf
inc
adc
mov
int
cmpsb
sub
gs
pushf
sarb
icebp
pushf
test
sbb
clc
cmp
rcrb
dec
lods
jne
push
push
repz
sbb
mov
push
popa
faddp
mov
ja
xor
mov
pop
mov
mov
xchg
scas
and
push
lea
pop
imul
add
sub
dec
sbb
push
lret
xchg
stc
int
mov
push
je
or
or
dec
xor
es
cmp
in
xchg
sbb
ficomps
leave
xor
push
lret
and
iret
xchg
out
push
mov
xor
and
push
call
cmp
loop
int3
sub
loop
movsl
mov
lds
ficompl
insb
lea
pop
out
jnp
jl
or
mov
jmp
xor
dec
ja
ja
inc
dec
cmp
nop
sbb
sbb
jae
in
ficoml
fs
dec
adc
cmp
inc
pop
mov
loopne
mov
jmp
sbbb
stc
cmpsb
xchg
adc
in
or
push
cmp
popa
inc
pop
inc
sub
bound
orl
push
xor
inc
out
xor
adc
add
inc
xor
arpl
in
xor
inc
sbb
mov
outsl
out
adc
sahf
xor
int3
adc
push
sub
sbbb
popf
pop
sarl
je
andl
xchg
lahf
pop
pop
pop
test
sbb
test
xor
sbb
and
xor
in
mov
or
xor
arpl
fdivrl
xor
dec
mov
iret
pop
xorb
fimull
mov
dec
or
popa
les
divl
enter
out
and
insl
popf
mov
sbb
es
in
inc
cmpsb
mov
xor
fs
fwait
sub
sbb
mov
std
in
mov
fimull
jge
mov
pop
test
adc
aas
xchg
cmpsb
xchg
adc
xor
inc
push
fstpl
sub
hlt
repz
int3
inc
cmp
cs
lahf
xchg
das
add
dec
inc
xchg
push
loopne
or
inc
jns
clc
or
or
arpl
sub
adc
mov
cs
rclb
lods
cmp
jge
and
dec
xchg
icebp
idivb
xor
pop
and
xor
aad
pop
sahf
or
xchg
push
inc
fst
and
hlt
fwait
pop
inc
sub
das
cmp
jge
sahf
adc
xor
lds
mov
pop
roll
xor
cltd
jo
imul
push
add
cmp
pop
xor
es
mov
jmp
fs
lret
pop
push
pop
inc
arpl
dec
cmp
jge
pop
fs
sub
imul
or
divb
loopne
add
dec
dec
push
outsl
pop
aaa
pop
mov
mov
ficomps
mov
fs
loope
test
mov
rolb
cmp
out
mov
repz
ja
xor
jg
inc
cltd
std
push
addr16
push
cmp
outsb
aad
and
movsl
jmp
out
push
jnp
push
cs
push
mov
stos
dec
shlb
pop
rcll
and
pop
cmp
bound
cmpsb
pop
icebp
adc
xchg
adc
das
add
mov
push
mov
ret
faddl
cmpsl
dec
shll
call
hlt
cmp
push
rorl
or
pop
lret
test
xchg
mov
repz
cmp
adc
popf
add
fisttpl
pause
or
push
in
int3
arpl
dec
mov
outsl
push
xor
sub
add
sbb
push
lock
mov
adc
cmc
pop
fisubrl
pop
daa
pop
dec
inc
sbb
arpl
popa
ja
pop
int
xor
sbb
push
fs
pop
mov
adc
das
push
inc
push
test
ret
cmc
adc
lds
inc
movsb
xor
adc
sti
sub
sub
aaa
aas
push
jb
adc
pop
ficoms
mov
push
ficoml
mov
pusha
int3
push
mov
pusha
inc
mov
pusha
jge
out
aas
enter
or
xor
testb
adc
xor
add
inc
push
dec
sbb
mov
outsl
and
pop
inc
sbb
adc
or
push
pop
nop
es
in
push
pop
and
or
pop
dec
in
jno
jno
sub
push
cmp
add
cmp
adc
xchg
or
cmp
popf
jle
jno
andb
subb
sub
inc
cs
add
sub
pop
insb
in
jno
jno
sub
jno
data16
adc
icebp
in
mov
repz
xchg
out
das
sbb
notb
ss
enter
xchg
pop
pop
mov
scas
fs
nop
pusha
mov
in
dec
pop
pop
or
pop
popf
adc
jno
jno
sub
dec
xchg
cmp
daa
jl
mov
pop
xor
or
inc
mov
rorb
ja
pop
outsl
dec
je
mov
popa
addl
aam
dec
and
jg
inc
cld
pop
cwtl
cltd
or
adc
jne
bound
lea
iret
pop
jge
sti
je
jge
xor
pop
add
lea
and
mov
repnz
fstpt
mov
cmpsb
mov
pop
inc
lea
dec
stc
scas
dec
xor
push
or
inc
xor
insb
cmp
pop
xchg
je
and
fwait
cmpl
sub
leave
insl
ficomps
pop
xor
pop
scas
mov
rolb
fs
inc
cmp
fidivs
add
push
push
sub
sub
int
jb
cmp
xor
into
movsb
jmp
xlat
leave
movl
jmp
hlt
sbb
push
mov
push
push
push
cmp
jp
jb
xchg
popf
clc
mov
pop
push
clc
dec
popa
icebp
fucomi
dec
pop
or
or
pop
inc
pop
inc
js
enter
out
repnz
mov
jecxz
arpl
lret
scas
mov
lcall
int3
push
nop
push
jg
adc
stos
pop
sub
aam
mov
xchg
stos
inc
jns
shlb
cltd
rcl
ds
out
jo
xor
aam
dec
sub
das
mov
sbb
cmc
and
mov
les
adc
popf
shlb
add
loope
gs
inc
popa
mov
pop
icebp
call
pop
mov
push
bound
pop
jp
aad
aam
fistpl
push
ds
jno
sbb
popa
push
sub
adc
insb
test
and
xor
fisttpl
aad
pop
icebp
orb
int
push
cmpsb
aad
outsl
daa
or
repz
jne
sbb
test
in
mov
test
fcoml
int3
in
shrl
mov
mov
sbb
xor
xor
xchg
outsl
dec
dec
dec
jbe
sahf
mov
cmp
pop
jmp
out
addb
fstpl
test
icebp
mov
lret
pop
push
pop
lods
jno
push
lahf
xor
lcall
jmp
push
fstpt
andb
inc
sbb
movsl
stos
sub
popa
lcall
mov
push
and
or
gs
pop
fbstp
pop
das
jmp
aad
cli
cld
lods
xchg
pop
and
imul
cmp
sarb
jb
rcrb
and
cmp
xchg
aad
sahf
ret
bound
fwait
cmp
das
das
adc
icebp
sub
fisubl
cmp
push
mov
cmp
out
mov
shl
and
loopne
mov
mov
push
lods
pop
adc
sub
clc
sbb
pop
inc
sub
sbb
mov
mov
ja
mov
jae
inc
dec
inc
std
mov
cs
repz
cmc
inc
movsl
dec
and
stc
lds
aaa
test
sbb
or
xchg
lock
out
inc
push
cmp
xor
jp
scas
in
dec
add
pusha
std
dec
bound
add
int3
fdivrl
or
int3
mov
adc
and
in
adcl
data16
cltd
arpl
shlb
pop
add
mov
cmp
xor
pusha
cmp
push
insl
lds
dec
aam
movsl
push
xchg
loop
sub
push
mov
adc
pop
fbld
out
pop
ss
dec
ss
nop
stos
dec
orb
adc
adc
or
pop
test
push
xlat
mov
inc
pop
imul
sub
and
mov
bound
arpl
pop
cli
aad
and
push
mov
sbb
mov
lret
test
sub
outsb
dec
inc
add
xor
push
adc
pop
gs
sbb
pop
xor
test
mov
mov
nop
xor
and
pop
bound
cli
dec
icebp
xor
inc
cwtl
mov
dec
pop
or
dec
xlat
jge
sbb
push
scas
xor
pop
push
fistl
pop
outsl
sti
mov
cltd
sub
jge
push
xor
test
dec
lret
orl
inc
jno
pop
movsl
iret
clc
lods
add
into
insb
fsubr
sti
or
add
out
sbb
inc
and
iret
pusha
clc
push
std
cmpsb
jmp
call
rcrl
jl
add
add
xor
cmc
rep
cmp
cmp
scas
lret
js
in
or
xchg
sub
dec
adc
ds
imul
sbb
mov
outsl
xor
faddl
ret
add
test
xor
arpl
pop
pop
lock
sbb
xor
inc
movsl
cmc
xlat
push
and
mov
gs
cmp
adc
push
xchg
das
jge
xor
inc
cmp
js
push
incl
test
jb
lods
mov
xorb
mov
mov
in
or
sub
cmc
ss
xchg
xor
cmp
xchg
loop
rorb
imul
lret
aam
and
mov
mov
push
push
ja
out
adc
pop
addl
sub
insl
repz
stos
in
icebp
xor
pop
addr16
cmp
cmp
push
mov
hlt
xor
adc
xor
outsl
insb
fldl
les
scas
jecxz
in
xor
mov
xor
jecxz
push
daa
xchg
popa
adc
lods
or
in
enter
and
and
sub
cli
mov
jge
adc
push
scas
mov
jge,pn
jbe
push
in
add
into
rorb
inc
add
inc
dec
ljmp
loopne
pop
mov
dec
sbb
lcall
sbb
outsl
jo
sub
xchg
sub
lds
ljmp
sub
pminsw
push
mov
movsl
mov
movsl
or
mov
push
or
cwtl
call
cltd
add
mov
cmpsl
xchg
rorl
popf
add
sub
jae
std
je
bound
cli
pop
push
add
pop
xor
stos
sbb
dec
or
mov
fimuls
xor
adc
or
rcrb
pop
imul
sarl
mov
ss
sbb
add
loop
mov
jo
dec
sub
or
lock
and
jmp
or
push
push
or
mov
mov
dec
xor
xchg
xchg
mov
cmp
cmp
movsb
push
xchg
jp
push
jne
or
jnp
shrb
mov
and
push
sub
es
outsl
xchg
mov
insb
mov
push
mull
xorl
sbb
jns
fcmovu
dec
mov
pop
and
test
xor
imul
bound
cmp
push
or
add
inc
stos
cmp
add
roll
add
pop
sbb
mov
and
pop
add
mov
cmc
repnz
sbb
cmpb
popa
dec
add
rcrb
lods
and
psrld
scas
popf
jmp
sbb
pop
inc
or
mov
adc
lcall
push
mov
outsl
xchg
cmp
sub
push
enter
inc
inc
and
hlt
push
lds
sub
shrb
mov
sub
repnz
clc
scas
pop
cmp
add
inc
lcall
arpl
std
inc
lods
in
test
cmp
lret
xchg
or
divb
push
add
popf
inc
insl
cmc
xor
lods
cmp
mov
cmp
cmp
pop
lock
mov
sub
cmp
push
adc
mov
sar
call
fwait
and
les
inc
sub
xor
es
cmc
cmp
push
pop
xchg
xor
fcomi
inc
inc
inc
lods
icebp
mov
pop
aaa
lea
negl
cmpsb
jne
pop
mov
push
addr16
popa
lcall
push
imul
push
jno,pt
outsl
add
loope
adc
mov
mov
test
cmc
addb
gs
cmc
out
pop
popa
cmpsl
mov
cmp
mov
xchg
push
jge
pushf
pop
xor
mov
popf
xor
je
xor
xor
pop
sub
gs
pop
fstps
sub
mov
adc
repnz
mov
imul
mov
dec
xor
pop
xor
lahf
xor
dec
dec
cmpsl
stc
mov
fxch
or
jns
mov
or
sub
aam
cmp
xor
das
das
ljmp
mov
sub
sub
xchg
jle
sbb
hlt
lds
mov
mov
sbb
fucomi
fwait
adc
ds
sbb
cmp
popa
movsl
jl
inc
jnp
and
pop
shll
out
in
sub
mov
and
inc
adc
popa
pop
adc
xchg
mov
dec
outsl
and
ds
mov
jo
adc
js
dec
lahf
cmp
bound
shrl
lcall
mov
sub
add
dec
xlat
sbb
sbb
adc
xchg
adc
jbe
lea
pop
mov
jo
stos
out
dec
shll
push
fsubrl
mov
xchg
iret
in
mov
lret
jge
xor
jl
jns
repz
sub
add
std
inc
sbb
dec
xor
or
add
hlt
sub
pop
xlat
sub
or
pop
repz
dec
cmc
leave
out
xor
inc
dec
fisubl
addr16
mov
add
icebp
call
or
ljmp
sbb
pushf
out
sub
dec
fidivrs
jnp
shrl
std
jl
jo
mov
or
jo
sti
add
into
lock
adc
and
sti
sub
popa
mov
stos
xor
xchg
sbb
jp
push
shl
xor
fmul
pop
fs
pop
push
aaa
push
mov
push
add
shll
dec
ret
loope
into
movsb
dec
pop
pop
inc
fmul
jno
mov
jl
rcl
movsl
push
dec
gs
mov
outsb
rol
test
jmp
mov
xchg
movb
mov
hlt
xchg
jno
out
mov
mov
push
mov
xchg
fmuls
sub
mov
add
push
popa
repz
test
enter
mov
cld
nop
loope
push
cmp
xor
sti
sub
dec
repz
fimuls
popa
scas
push
in
push
pop
add
pop
push
sub
fsubl
scas
dec
add
mov
mov
jge
out
mov
xor
push
push
add
xchg
sbb
pop
int
inc
pop
lret
mov
cmpsl
pop
xchg
mov
enter
sbbl
cmpsb
ret
fbstp
popa
xchg
popa
lds
cmpl
mov
push
shlb
sahf
push
jp
dec
mov
inc
add
data16
mov
xor
add
fcmovnu
loope
dec
sbb
xchg
mov
dec
je
pop
xchg
sti
pop
je
inc
fisttps
xor
insb
dec
cmp
push
mov
pop
hlt
lret
adc
or
rcrb
sub
and
loope
xchg
jnp
dec
gs
inc
pop
jnp
or
push
jnp
xchg
adc
in
cmp
jg
pop
fidivl
leave
pop
dec
cmp
push
xor
adc
clc
cmp
inc
sbb
hlt
and
xlat
aam
xor
iret
xchg
and
in
push
es
or
outsl
pop
fists
nop
jae
rcll
ret
push
adc
jl
inc
xchg
mov
adc
add
sub
jmp
ja
mov
or
aaa
in
pop
mov
xchg
inc
in
in
cli
push
sti
jb
je
jecxz
pop
sbb
mov
xor
gs
add
add
movl
out
push
fcomip
cmp
adc
jns
sub
xchg
adc
movsb
clc
int3
xchg
dec
out
out
pop
adc
clc
pop
insl
ds
cli
inc
in
mov
je
mov
and
fdiv
inc
std
push
lea
inc
cli
outsb
adc
sub
in
push
and
sar
cmp
xor
mov
aaa
lds
add
sarl
or
test
push
in
jno
cmp
into
add
pushf
push
es
test
push
push
roll
stc
out
or
mov
sbb
faddl
mov
inc
mov
ja
cli
scas
aas
xchg
mov
mov
nop
fiaddl
sahf
xor
cmpsb
and
rol
dec
jg
mov
imul
or
jo
mov
and
pop
les
bound
imul
test
in
adc
popf
fstps
jo
jmp
mov
stos
pop
mov
sbb
xchg
out
adc
pop
popf
stos
lods
pop
sbb
and
adc
adc
data16
sbb
push
pop
mov
push
sbb
cmc
mov
imul
mov
stc
push
int3
sub
sub
jo
adcb
pop
add
clc
inc
mov
cltd
inc
or
inc
jle
addr16
bound
cmpl
lds
jne
pop
mov
mov
mov
xor
mov
fnstcw
sti
enter
insb
add
sbb
scas
jnp
pop
or
jae
scas
adc
and
mov
jle
cld
fcomps
mov
sahf
mov
mov
and
and
ret
xor
sbb
add
les
fsubrs
dec
das
int3
in
mov
sub
push
pusha
pop
pushf
call
das
push
test
mov
xchg
sub
mov
push
les
lcall
pop
insl
cmc
pop
jg
arpl
xchg
adc
into
das
xor
fcomps
add
mov
or
xchg
imul
and
aaa
enter
xor
aaa
mov
dec
pop
mov
xchg
fbstp
sub
ss
mov
jl
xchg
inc
lods
into
push
push
lcall
call
push
insl
in
push
push
mov
mov
and
inc
std
xchg
out
xor
push
cltd
popa
dec
in
cmpsl
xor
das
orb
xlat
jle
or
mov
aas
push
inc
mov
aam
dec
push
mov
pop
js
cmp
fcoms
stc
xor
xlat
push
jmp
cmp
lods
and
cltd
popf
pop
add
andb
jge
sbb
dec
sbb
jne
jge
push
push
rolb
sbb
daa
xor
sarb
pop
mov
lock
mov
mov
sub
subb
pop
outsb
sub
lea
push
or
gs
loope
leave
ror
aaa
adc
jle
inc
xchg
or
js
adc
scas
xchg
fwait
push
pop
cmp
xchg
dec
add
nop
stos
stc
sub
jecxz
xor
mov
cmp
out
cmp
sub
movsl
adc
pop
sbb
add
repnz
inc
mov
pop
push
pop
rol
cltd
xchg
pop
sbb
out
ja
xchg
jmp
cmp
add
out
jnp
add
mov
and
pop
lds
out
or
loopne
mov
push
cmp
xor
mov
dec
inc
outsl
and
cmp
stc
movsl
leave
or
adc
loope
jmp
dec
mov
sahf
cmp
shrl
xchg
xor
xchg
fadd
sbb
sbb
push
cmp
pop
insl
cld
insb
stos
inc
jmp
dec
xchg
cli
test
sub
out
push
xchg
and
inc
test
mov
push
lahf
xor
push
sub
scas
inc
jmp
jae
mov
sub
add
or
mov
push
or
rorl
out
stc
test
pslld
lret
adc
xor
ret
sub
gs
add
push
cwtl
aad
stos
cmp
mov
sub
xchg
xor
leave
push
popa
xchg
call
outsl
jbe
in
sub
iret
pop
sub
and
cmc
pop
cmp
mov
mov
adc
sbb
mov
pop
sbb
mov
add
mov
mov
xchg
std
pcmpgtw
addr16
dec
mov
jmp
add
sub
enter
jno
stos
jg
mov
pushf
mull
xor
stos
or
inc
or
mov
pop
cmp
push
lock
lods
lods
popa
rol
xchg
xor
mov
jle
int
mov
dec
pop
data16
mov
lock
int3
jmp
jae
rclb
andl
and
sub
in
xchg
xchg
aas
adc
dec
mov
icebp
push
adc
fidivrl
out
fsubrs
insb
outsl
cmpsl
das
loope
fwait
std
pop
popf
jecxz
dec
pop
lock
fstps
clc
in
mov
stos
ljmp
dec
or
mov
pop
mov
cmc
aaa
push
nop
or
dec
adc
pop
lahf
inc
pop
imul
shll
or
fdivl
cmp
or
xchg
xchg
cmpsl
xor
mov
je
sbb
scas
pop
jns
aas
leave
fcoms
push
add
add
or
jl
scas
lods
pop
mov
int3
ficoml
dec
loop
xor
xchg
sbb
test
push
mov
test
into
dec
mov
push
jo
mov
push
pop
mov
sub
je
xor
xchg
xchg
push
lock
jl
movsl
mov
mov
xor
inc
mov
mov
mov
cli
shlb
mov
xor
mulb
mov
mov
xor
pop
cs
sub
dec
out
jecxz
in
repz
test
les
decb
jl
xchg
add
test
jnp
inc
sti
mov
out
ret
xor
xor
lret
test
add
or
sbb
jmp
xor
mov
or
loopne
cmpsl
dec
mov
inc
mov
sarl
xchg
or
mov
xor
push
nop
xchg
icebp
cs
inc
popa
repz
mov
xorb
iret
not
arpl
movl
loope
fucomp
stos
addr16
mov
push
jno
mov
cwtl
mov
lcall
pop
mov
add
test
inc
cli
lcall
ja
mov
sub
add
inc
or
mov
mov
ffree
das
pop
lods
mov
push
pop
ror
nop
sar
insl
sbb
mov
cli
xchg
pop
daa
pop
inc
imul
jnp
jbe
push
pop
add
scas
sub
add
test
and
lea
ds
mov
ss
fildll
xor
inc
xlat
int3
repz
dec
daa
adc
jns
test
push
sub
mov
mov
jmp
xor
bound
test
jbe
push
and
add
bswap
sub
arpl
pop
xchg
adc
lods
sti
adc
jg
aaa
cmp
dec
jg
test
sub
jne
sti
lret
cmp
leave
out
aam
adc
or
push
mov
gs
and
in
movsb
outsl
pop
orb
dec
int3
sub
add
cmpl
jle
sbb
inc
jl
xchg
cmp
arpl
mov
int
add
dec
addr16
js
adc
cmp
sbb
call
test
sub
shlb
je
imul
mov
nop
push
lods
xor
mov
stos
pop
adc
push
rorb
adc
xor
cs
sub
jno
fiadds
jge
sarl
int
mov
icebp
xor
das
mov
and
jg
jae
int3
sbb
jge
adc
iret
xchg
fldl
jmp
imul
js
lock
lret
jo
push
in
add
cmp
inc
loope
sub
mov
popa
or
mov
mov
xor
jne
push
dec
in
add
xchg
test
clc
nop
xchg
leave
ret
or
cltd
dec
mov
test
out
xchg
gs
xchg
adc
xlat
int
icebp
cmpsb
cli
jno
stos
dec
xor
lods
fidivl
sar
jecxz
stos
lds
add
test
cmpsb
fxch
daa
fwait
cmp
test
jl
add
cmpsl
pop
icebp
aaa
jno
data16
dec
sahf
fwait
and
repz
xchg
movups
sti
outsl
sbb
aas
and
cmpsb
mov
mov
pop
es
ret
xchg
xchg
pusha
or
stos
mov
xorl
fnstcw
imul
jo
arpl
pop
inc
cmpl
cwtl
sti
push
pop
or
mov
mov
jp
pop
or
xor
mov
add
mov
sahf
test
bound
lret
push
or
and
loope
and
pop
jbe
mov
popa
pop
mov
cltd
mov
cwtl
sbb
xchg
mov
push
sbb
popf
negb
xorl
push
jne
xchg
sahf
push
or
pop
xchg
fnstcw
mov
push
or
mov
push
dec
xor
xor
cli
pop
push
rclb
xor
xchg
xor
xor
jne
std
inc
loope
inc
mov
in
pop
push
xor
pusha
pop
mov
repnz
shll
cmp
in
push
movsl
ret
fwait
push
sbb
mov
mov
push
aaa
fisubrs
pop
cltd
mov
lahf
adc
lcall
loop
xorb
fcoml
sbb
pop
push
into
cmc
adc
les
into
outsl
iret
dec
in
movsl
cmpsb
lock
pop
and
and
and
xchg
adc
pusha
pop
push
xchg
leave
jno
mov
gs
int
lock
jbe
out
push
mov
pop
cli
xor
sbb
inc
pop
sbb
push
inc
xor
xchg
cmpsb
arpl
cmc
pop
addr16
dec
movsb
inc
daa
pop
xor
xlat
loope
mov
jmp
xlat
pop
mov
xchg
adc
xor
adc
arpl
cmp
push
cs
inc
pop
pop
mov
xor
cmp
add
es
push
jp
int
sbb
mov
and
aad
sti
gs
data16
into
dec
mov
js
idivl
xor
sub
inc
fisttpll
sub
mov
je
xor
pop
outsl
dec
cmp
jb
sub
movsl
and
dec
je
scas
mov
mov
ljmp
test
mov
push
mov
push
xor
and
push
int
xchg
bound
inc
in
mov
jp
in
insb
push
ds
mov
and
inc
int3
pusha
imul
aas
in
sti
inc
inc
or
lock
fcmovbe
adc
jecxz
dec
fs
dec
and
dec
out
in
dec
sahf
mov
jb
sub
int
mov
sub
jmp
test
in
jmp
outsb
mov
jno
adc
addr16
nop
cwtl
jecxz
or
pop
inc
iret
or
cmpl
mov
pop
mov
shrl
repnz
push
or
cli
cmp
test
jns
sahf
mov
jne
mov
movsl
fnstcw
xchg
movsw
test
sbb
sarb
lahf
outsb
inc
lahf
aas
pushl
xorl
sub
fnstcw
mov
xor
aad
inc
divb
add
sahf
pop
push
xchg
mov
imul
divl
sub
ret
adc
cmp
mov
push
mov
dec
pop
mov
fidivl
pop
xor
jo
ljmp
xlat
adc
push
pop
jne
mov
pushf
adc
enter
xchg
cmc
mov
jge
movsl
inc
es
test
andb
les
pushf
push
mov
jne
mov
and
in
add
ja
or
arpl
fnsetpm(287
lea
movsl
jo
jg
rcr
mov
outsb
mov
lcall
dec
jp
jmp
pop
push
cmp
repnz
daa
out
or
sub
scas
or
movsl
dec
jae
in
std
mov
pop
cwtl
cmp
pop
insl
push
add
push
lahf
push
mov
addr16
adcl
inc
jb
lahf
sub
push
cmpsb
mov
inc
mov
cmpsb
stc
lret
mov
xor
sub
orl
rcl
sbb
fildl
fmuls
loope
fs
lds
aaa
mov
jb
add
cmp
push
push
add
dec
std
dec
push
cwtl
mov
jno
mov
xchg
sub
jb
cld
adc
sub
bound
adc
das
mov
das
mov
daa
adc
out
nop
mov
xlat
push
push
jne
xchg
add
inc
popa
ds
je
jns
cmp
jle
xor
dec
dec
mov
inc
mov
push
mov
xor
add
into
scas
and
or
and
jp
pop
pusha
daa
loop
sub
pop
sub
mov
jmp
clc
and
repz
and
in
loope
cmpb
mov
mov
mov
pop
adc
pop
dec
cmc
gs
cli
leave
push
sahf
xchg
jb
pop
pop
push
ret
mov
ljmp
ret
negl
jge
addr16
xchg
adc
popa
pop
aaa
sbb
mov
and
inc
insl
aaa
and
mov
hlt
adc
cs
neg
in
cmc
sub
call
imul
or
pop
sbb
gs
mov
popf
out
inc
mov
or
stos
mov
push
rclb
lcall
fdivrs
mov
repz
scas
cmp
repz
pop
mov
xor
xlat
dec
adc
popf
fsubs
pop
push
les
into
aas
mov
and
push
inc
xchg
adcl
popf
xor
sbb
dec
mov
sbb
pushf
cmc
cmc
rorl
and
push
pop
adc
cmpsl
jp
mov
and
lods
cmpsl
jp
shlb
xor
mov
fstl
icebp
aaa
aad
xchg
sub
pop
xor
adc
ljmp
lahf
pop
or
fcom
sbb
xchg
sti
mov
push
bound
adc
mov
push
nop
pusha
out
mov
lret
cmc
scas
dec
xchg
and
xor
ret
mov
cmp
pusha
push
sub
mov
push
adc
push
adc
mov
in
popa
lcall
dec
add
repz
popa
mov
push
test
cli
adc
and
loop
in
or
test
repz
test
adc
jnp
mov
in
lds
je
mov
cmp
scas
addr16
lret
sahf
cmp
inc
sub
subl
lock
pop
add
loopne
xor
jb
out
bound
adcl
ret
mov
sahf
adc
cmp
icebp
pusha
jno
add
ja
lock
xlat
and
ja
dec
sbb
adc
stos
jle
jno
fs
fistpl
mov
push
dec
jne
std
addl
aaa
xchg
sbb
test
cmp
jecxz
aad
adc
incl
out
ret
in
push
cmp
leave
mov
nop
cmp
xor
imul
popf
data16
cmpsb
dec
clc
sahf
sub
xchg
inc
mov
cmp
stos
icebp
mov
int
or
xlat
push
mov
popf
pusha
pop
dec
into
into
pop
mov
subb
cmp
aad
cmpsl
xchg
insl
pop
jge
dec
adc
xchg
lret
add
hlt
lock
sarb
jo
movl
iret
and
cmp
sbb
xchg
fdivrs
icebp
mov
sbb
int
sbb
in
insb
mov
mov
shlb
dec
push
mov
imul
inc
xor
aas
cmpsl
movsb
xor
pop
aaa
adc
in
imul
movsl
ret
bound
inc
lods
push
shll
lods
sub
test
mov
lods
sbb
cwtl
mov
dec
push
int
dec
sub
jno
mov
pop
xor
cmpsb
shll
int3
loopne
scas
or
sbb
ljmp
push
mov
mov
arpl
mov
sbb
sti
test
nop
push
mov
pop
loop
push
outsb
inc
je
iret
es
sub
shll
movsl
push
inc
mov
pop
mov
pop
ds
in
cli
fsubl
dec
xlat
rcrb
ss
lods
pop
inc
jne
xor
stos
fldt
into
mov
lods
mov
stc
push
int3
pop
pop
xchg
pop
adc
dec
sbb
add
xor
jmp
sub
push
arpl
mov
andb
inc
std
jl
ret
shl
movsb
xchg
xchg
imul
jecxz
push
stc
addr16
ds
popa
adc
stc
or
push
loop
int
add
inc
sarl
lea
pop
mov
mov
aad
mov
test
insb
rorb
adc
and
inc
insb
mov
mov
test
adc
out
out
pop
popa
jae
xlat
mov
popf
mov
loopne
cmc
mov
mov
icebp
add
add
push
sbb
mov
icebp
test
fs
adc
push
aas
jnp
jmp
mov
bound
flds
and
sub
sub
fs
jg
mov
mov
aam
adc
mov
pop
xor
dec
movsl
sub
inc
push
loopne
jo
dec
and
push
andl
mov
cmpsb
dec
jno
outsb
lock
inc
jno
iret
mov
movsb
daa
mov
mov
daa
mov
lock
bound
aas
mov
lret
imul
cmp
ja
popf
mov
mov
xor
mov
add
bound
test
xchg
mov
xchg
pop
xor
loope
je
inc
mov
pop
gs
or
popa
inc
notl
hlt
add
xchg
adc
xor
bnd
push
dec
popf
lret
arpl
pop
inc
popf
aas
xor
jp
dec
enter
loop
cmpsl
dec
fistps
enter
out
out
cmp
cmp
xchg
rcll
cld
fwait
push
dec
fistpl
pop
xchg
sub
lods
icebp
fistps
mov
ret
pop
enter
js
in
xor
pop
mov
lcall
xor
mov
mov
aas
mov
inc
push
sub
push
push
push
bound
or
das
hlt
ds
lock
test
sub
mov
scas
sti
sbb
sbb
imull
sbb
dec
xchg
push
add
rdmsr
mov
push
ds
xor
jle
filds
or
mov
push
adc
outsb
ss
sub
daa
in
or
inc
ds
js
mov
pop
arpl
fimull
push
mov
jb
mov
mov
xor
cmp
mov
inc
cld
mov
iret
ret
bound
cmpsl
jne
les
ficomps
push
mov
stc
cwtl
les
jg
fidivl
inc
lods
mov
test
loope
mov
and
call
inc
mov
sbb
out
mov
fmull
xor
pop
movsl
out
pop
cmc
sbb
sbb
pop
xor
outsl
popl
in
js
pop
mov
outsl
adc
sub
mov
pop
sub
push
jno
cltd
insl
mov
and
ret
add
xor
fldt
jl
lcall
sbb
xchg
push
mov
xchg
sub
add
aam
std
ss
jmp
xor
dec
add
mov
cmpsb
cmpsl
mov
out
jb
imull
vmovaps
xchg
out
cmp
sub
popf
stos
adcl
add
and
jae
sti
and
mov
jbe
in
sbb
xchg
popa
sarb
lcall
lods
mov
rorb
loopne
cmc
xchg
sahf
je
repz
push
pop
xchg
inc
and
xlat
lds
push
pop
shll
and
mull
or
mov
cmp
jl
jge
xchg
cmpsl
test
idivb
lret
jo
add
pop
fnsave
mov
cltd
push
clc
test
dec
xorl
cmp
add
or
clc
mov
cmp
xchg
adc
cmpsl
xor
popf
push
xor
adc
repnz
mov
pop
mov
sub
ret
inc
xchg
movsb
xor
inc
xor
mov
jns
mov
add
cmp
cmp
mov
imul
sbbb
mov
mov
outsl
inc
pusha
pop
push
aam
xchg
hlt
insb
push
lods
out
rcll
cmpl
or
push
jnp
adc
dec
sub
dec
cmp
ret
and
add
repnz
mov
dec
dec
mov
in
mov
and
push
lock
jne
xchg
pop
and
loope
xchg
or
imul
fwait
stos
and
mov
dec
cld
ljmp
jecxz
out
mov
fmull
cmc
nop
push
enter
das
cld
adc
push
jp
and
jns
lock
jb
outsl
test
mov
adc
inc
or
push
mov
in
xor
pop
test
js
idivl
lcall
sahf
inc
add
add
out
xor
mov
cltd
mov
xor
jl
sub
jmp
mov
lahf
stos
les
lods
imul
jns
imul
pop
sbb
or
adc
enter
jbe
sub
xchg
or
xchg
mov
dec
aad
inc
lds
mov
mov
fisttpll
popf
sub
xor
mov
and
rolb
jnp
aad
int
mov
cltd
std
jo
xor
mov
aad
out
mov
pop
lcall
mov
sub
ret
aad
inc
jno
lcall
add
sar
pop
fcmovbe
push
push
gs
mov
jne
push
popf
mov
rcll
popa
stc
clc
jecxz
mov
push
mov
jge
add
mov
je
in
rorl
arpl
jbe
cmpsl
lret
push
cltd
fdivl
pop
fs
pop
rcll
paddb
or
or
push
adc
dec
les
pop
inc
inc
xchg
lds
pop
jg
shll
ja
movsl
cs
mov
or
lret
lcall
jl
xchg
xchg
pop
jl
gs
addr16
scas
xor
fildll
sti
subl
mov
pop
stc
inc
jle
add
jecxz
cltd
pop
push
incl
add
fmull
shlb
sar
cmpsb
mov
je
mov
roll
mov
pop
inc
cmp
xor
jb
insl
mov
lcall
test
movsb
cvttps2pi
cmpb
aad
jle
or
adc
ja
xor
mov
sub
cmp
out
popf
add
and
inc
sub
dec
sbb
xchg
xor
iret
add
cli
out
test
pop
jae
sbb
push
adc
stos
pop
out
repnz
cmp
mov
xor
icebp
mov
aaa
scas
dec
pop
cli
push
cmpsb
fisubs
call
inc
pop
cli
popf
insb
mov
inc
push
xor
out
xchg
mov
inc
push
cmp
mov
shrl
ja
push
ljmp
jb
or
out
dec
push
adc
xchg
add
test
daa
js
xor
inc
jge
xchg
cltd
pop
popa
push
add
xlat
dec
push
clc
jmp
jge
push
jno
jmp
enter
shlb
je
fcomp
dec
shl
dec
jmp
fwait
jo
insl
insl
movsb
pusha
roll
lea
push
scas
jge
push
shlb
and
les
cld
add
mov
fs
aam
ficoml
sub
sbb
stos
out
fyl2xp1
clc
add
sahf
and
fimuls
cltd
es
xor
andl
test
xchg
imul
das
shrl
mov
jle
orl
jle
adc
xchg
fsubp
rol
rcrl
movsl
mov
roll
bswap
stos
movsl
lods
add
add
mov
add
and
xlat
cmp
jge
xchg
stos
pop
loop
insb
in
fists
jns
repz
sarl
enter
dec
mov
jl
xchg
in
cmp
inc
int3
sbb
push
roll
ror
mov
rclb
jb
fwait
jecxz
imul
inc
call
dec
ficoml
jp
push
ret
imul
je
in
pop
pop
fcompl
push
xchg
cs
add
gs
insb
repz
cld
xchg
call
adc
or
push
pushf
test
imul
stc
pop
xor
adc
jg
je
popa
imul
or
dec
sbb
jecxz
xor
das
jle
jmp
fildl
or
xchg
push
leave
push
cltd
fwait
pop
or
bound
xor
out
lea
mov
lds
xor
shlb
push
add
test
rcl
fcoml
rep
push
cmp
aam
aas
push
xchg
paddsw
inc
push
or
ret
pcmpgtd
test
bound
pushf
adc
sbb
out
xor
pop
scas
into
push
push
xchg
js
or
call
mov
iret
and
xchg
fsubrs
icebp
inc
mov
in
pop
imul
test
push
push
inc
test
in
sbb
outsb
pop
cld
sbb
ret
cld
cltd
dec
das
hlt
insl
cmp
push
sub
cmp
mov
fbstp
and
xor
adc
cli
sbb
idivb
dec
lock
fldenvs
out
sbb
pop
decb
insl
and
sub
pusha
inc
or
sub
popa
inc
lret
stc
mov
cmpsb
pop
xor
sbb
add
in
push
inc
sbb
scas
mov
adc
push
jle
es
idiv
xchg
bound
lock
imul
sarb
jae
fcmovb
ret
jge
icebp
out
mov
adc
cmpsl
cmp
push
mov
dec
nop
mov
sti
fildl
dec
fwait
adc
xchg
xchg
sub
mov
sbb
xchg
test
cmp
pop
push
aaa
xchg
pop
dec
aad
sbb
jb
pusha
jo
stos
sub
pop
mov
icebp
ja
mov
enter
out
rcrb
test
adc
inc
mov
mov
aad
adc
lret
jp
dec
xchg
jmp
or
paddq
pop
sahf
pop
icebp
shlb
jp
pop
daa
ljmp
mov
cmp
cli
sbb
xchg
out
movsl
out
inc
cmp
sbb
out
fiaddl
jp
fwait
add
cmp
push
ds
mov
jle
add
sub
adc
add
add
addr16
push
enter
leave
das
push
jle
inc
add
dec
xchg
lock
dec
jmp
pop
adc
test
dec
ret
xchg
loopne
mov
xchg
aad
repz
or
fsubr
mov
xor
mov
repz
jae
mov
rcrl
cs
fucomp
sub
aad
clc
jecxz
push
dec
push
scas
into
fldt
push
sbb
jmp
xor
adc
test
int3
add
jb
popa
gs
std
bound
xor
sbb
cmp
inc
clc
pushf
mov
add
sub
pop
cmpsl
pop
and
dec
add
nop
aaa
jmp
and
sti
jmp
fcoms
cmp
cli
xor
mov
adc
push
sbb
xor
jge
rcll
mov
scas
in
scas
sbb
scas
fldenv
jnp
lret
out
fbstp
in
xorb
sahf
and
add
lock
mov
aam
jns
xor
mov
mov
popf
mov
fld
gs
data16
repnz
test
inc
sahf
setns
ljmp
ljmp
pushf
mov
mov
fistpl
jge
pop
adc
mov
enter
ljmp
and
stc
xchg
dec
jb
dec
dec
inc
xorb
cld
lcall
adc
cmp
mov
push
in
lret
out
repnz
stos
scas
xchg
xchg
aaa
and
fisubl
pop
mov
dec
inc
stos
addr16
andl
dec
mov
fwait
push
imul
test
mov
jns
sbb
push
and
icebp
aas
pop
push
xor
aam
test
inc
mov
xlat
mov
cmp
cmpsl
pop
ret
sarl
dec
cwtl
mov
mov
cmc
pop
mov
jp
jmp
icebp
cmp
dec
aam
sub
adc
sub
cmp
lock
jg
sbb
dec
mov
loopne
scas
inc
push
jno
jl
mov
hlt
mov
pop
xor
push
mov
lea
pushf
push
xor
xor
mov
or
mov
dec
scas
push
sub
mov
add
add
int
rcl
aaa
pushf
pop
xor
pop
std
mov
lret
ret
arpl
ror
sub
sbb
push
or
in
int
out
jp
sbb
xchg
into
xor
and
fistl
dec
ret
jecxz
push
jns
xor
and
lock
xor
sub
mov
xchg
aad
pop
iret
xchg
mov
and
mov
fcompl
add
xor
adc
incl
dec
push
fwait
sub
pop
mov
out
call
mov
pop
pop
popa
mov
inc
mov
sarb
enter
imul
scas
lds
lret
sahf
mov
mov
test
pop
movsb
test
push
addr16
pop
xorl
mov
je
fstps
mov
xor
clc
push
xor
sub
pop
lock
iret
fcoml
add
mov
pop
scas
and
and
mov
in
out
out
add
xchg
pushf
shll
lea
sbb
pop
inc
sbb
pop
ljmp
and
fdivl
push
mov
xor
pop
pop
out
repnz
shlb
bound
add
mov
jl
mov
cmp
or
cmp
stos
mov
xor
pop
push
dec
xor
loope
cmp
adc
mov
xchg
das
pop
sti
pop
mov
mov
push
sbb
pushf
int
add
mov
fbld
sbb
pop
popa
in
leave
cli
mov
jns
adc
add
icebp
in
fildll
mov
and
popa
ss
ret
mov
jb
add
sbb
addb
cmp
out
cmp
mov
int3
mov
stos
sbb
fsts
xchg
inc
movsl
pop
in
mov
movsl
inc
cmp
leave
dec
mov
test
fsubl
cmp
mov
sbb
jbe
sub
sub
pop
pop
ficoms
popa
pop
dec
mov
sbb
ret
adc
xchg
jns
add
and
mov
pop
test
mov
push
dec
jg
mov
std
je
loope
xchg
inc
jmp
sar
xor
mov
insl
aad
sbb
outsl
mov
mov
mov
test
mov
into
lods
xlat
sti
mov
xor
mov
xchg
dec
pushf
mov
mov
bound
jo
dec
jge
clc
sahf
repnz
sahf
jmp
xor
nop
push
cmp
loop
xchg
gs
lahf
or
mov
sbb
call
lea
es
sbb
lcall
inc
xor
xlat
inc
mov
mov
mov
aas
cmp
push
fcomip
bound
inc
mov
push
xor
stc
lcall
pop
bound
jg
lea
movsb
sarb
ljmp
mov
adc
jnp
iret
xor
lret
out
mov
adc
aas
iret
add
lcall
jmp
push
stc
sti
push
and
pop
test
xorl
icebp
cmp
xchg
jae
add
sti
or
lret
mov
push
cmp
cmp
fldl
xor
xor
loop
popa
dec
lret
test
cwtl
dec
out
or
push
xchg
push
jmp
and
sub
jns
xchg
and
cwtl
cmpsb
hlt
xrelease
jno
jge
imul
xor
insb
shrb
xor
in
orl
cmpsl
filds
es
sbb
fildl
addr16
jl
stc
push
mov
xor
push
and
mov
xorl
cmp
mov
cs
addb
xchg
xchg
add
cmpsl
add
pop
in
lret
and
xchg
inc
push
add
movsl
pop
xchg
call
ror
lds
data16
and
and
mulb
rcrl
xchg
jnp
pop
lds
outsb
push
xor
sbb
xchg
enter
xchg
mov
das
cmp
into
repz
sbb
dec
pop
sbb
push
insl
jmp
fldenv
mov
out
hlt
fnstsw
xchg
in
mov
jp
mov
stos
addb
inc
les
outsb
addr16
cmp
sahf
xchg
mov
xchg
pop
dec
cli
pop
fcmove
lock
into
adc
dec
stc
mov
sahf
fidivl
pop
inc
or
cli
sbb
mov
adc
mov
nop
out
loopne
inc
aam
mov
sbb
mov
ja
xchg
adc
adc
pop
outsl
mov
or
rol
mov
mov
add
pusha
les
movsb
icebp
adc
mov
jmp
ud0
pop
push
arpl
push
dec
ffreep
sbb
inc
leave
leave
jecxz
popf
mov
push
pop
sub
cmp
add
sbb
movsl
test
cltd
xor
je
pop
mov
add
clc
mov
sti
arpl
aam
or
inc
dec
xchg
add
loopne
das
addr16
mov
sbb
mov
add
ret
mov
xchg
test
aam
xchg
inc
push
outsl
cmpsb
push
das
scas
and
pop
lcall
xor
fwait
jg
lret
andl
sbb
and
pop
mov
aad
dec
xchg
cs
cmp
cmpsl
add
shl
jno
cmp
mov
pop
outsl
mov
jle
fwait
sbb
lret
sti
push
mov
add
icebp
sarb
stos
ss
cmpsb
test
std
shl
mov
addr16
jmp
push
inc
mov
adc
pop
das
mov
sbb
inc
pop
and
stc
xor
and
xchg
sub
and
add
push
add
test
xlat
test
pushf
daa
adc
es
hlt
adc
push
pop
jmp
push
cmp
cmp
add
shll
sub
pop
out
mov
jne
lock
cmp
mov
push
fsubrs
negl
mov
cmpsl
nop
xchg
push
lods
sbb
js
jae
mov
cmp
xor
jne
int
lds
js
push
or
xchg
add
and
addr16
stos
clc
mov
sub
nop
sbb
loop
mov
icebp
xor
sarb
lock
repz
push
mov
adc
lds
fdivr
add
push
into
cmp
hlt
mov
call
push
fnstcw
xlat
push
and
xor
sbb
inc
mov
insl
mov
arpl
inc
pop
pop
out
mov
repz
test
fwait
jnp
in
clc
pop
adc
outsl
jge
test
add
insb
jo
jb
mov
jb
daa
adc
jae
sarl
sbb
xchg
fistpll
xchg
out
cmpsb
inc
icebp
sub
sub
jmp
jp
dec
dec
and
dec
ljmp
out
jo
and
rcr
jmp
push
out
jne
mov
jle
test
hlt
mov
rol
mov
adc
arpl
add
mov
out
lea
leave
cmp
hlt
add
arpl
std
or
mov
and
jmp
pop
cmp
xchg
add
cmp
filds
jp
mov
ret
fsubl
dec
ret
arpl
xchg
sarl
lea
insb
sub
leave
fstpt
popf
and
or
cmpsl
cmp
gs
mov
inc
orl
fcoms
pop
enter
mov
pop
or
cmp
cld
outsl
pop
jno
xchg
xor
dec
and
sub
cmp
cld
and
add
adc
xlat
xlat
stc
cmp
scas
or
pop
pop
jp
cmpsb
xor
pusha
loope
sbb
into
or
or
rorl
neg
or
and
cmp
outsl
adc
dec
mov
and
cld
stos
xor
arpl
int
sahf
outsb
jl
jl
jnp
push
ds
push
fsubs
xor
aad
into
xor
iret
or
lods
xor
mov
push
cld
lcall
pusha
xchg
sbb
aaa
hlt
push
dec
cs
enter
aaa
lods
nop
icebp
adc
pop
add
cmpsb
cltd
movsl
dec
xchg
repnz
push
outsb
dec
pop
jno
xor
test
xchg
fsubl
mov
cmpsb
mov
in
sar
jns
stos
daa
lds
adc
pop
sub
lcall
or
es
cmp
mov
shufps
fstl
push
test
dec
imul
push
jg
outsl
jmp
cmp
aad
insl
inc
enter
subb
clc
mov
ret
pop
cld
test
mov
in
lret
push
jmp
sbb
jl
hlt
xchg
push
xchg
shl
xor
ret
push
andb
mov
push
popa
vpsllw
popf
or
loop
xor
in
mov
js
push
xchg
mov
jle
adc
push
idiv
pop
popf
cmp
pop
pop
dec
dec
insb
sahf
mov
push
jmp
rclb
mov
xor
inc
adc
test
mov
mov
xchg
or
fs
sbbb
xchg
sti
int
aas
cmpsb
jl
inc
popf
adc
call
mov
sbb
dec
add
das
int
push
loopne
cmc
enter
adc
sbb
inc
cli
xchg
jnp
inc
jge
js
daa
adc
fs
mov
or
pop
jns
andb
lahf
test
dec
in
pusha
pop
cwtl
and
es
rcrl
xor
xor
push
add
int3
pop
jo
push
xor
cmp
icebp
and
xor
lea
mov
inc
lcall
sbb
fsubl
fsub
fidivrs
movaps
add
and
or
pop
adc
into
adc
mov
rorl
jo
sbb
ret
adc
jg
pushl
fmul
mov
mov
loopne
dec
popa
mov
daa
aad
insl
ja
mov
enter
pop
mov
ljmp
in
and
push
jae
les
push
and
sahf
stos
add
fstl
js
xor
pop
insl
xchg
lea
mov
cmpsb
jmp
ds
xchg
mov
cmp
rcrl
jo
lds
call
fldl
xor
loope
bound
pop
pusha
ja
inc
lret
sub
pop
out
adc
cld
mov
je
cmpsb
mov
les
xor
int
daa
out
lret
insl
and
arpl
fcmovb
xchg
and
andl
sar
and
dec
insl
dec
pop
xchg
push
aas
fstps
add
cs
xor
fiadds
pushw
cmp
std
call
dec
and
cs
jne
lret
cmp
fisttps
rcr
test
xchg
add
cs
roll
jl
popa
loope
js
push
je
popa
add
int3
into
inc
mov
push
cmp
stos
inc
in
sarb
pop
xor
rcrl
jmp
mov
push
gs
cmp
xchg
xchg
fsubl
ss
sbb
cmp
push
add
mov
mov
push
enter
mov
popf
inc
xorl
repz
loopne
xor
mov
mov
sbb
mov
mov
mov
xlat
stc
imul
xor
xor
adc
or
ficoms
orl
call
in
fnsave
add
xor
mov
shrl
xor
negb
pop
xchg
xor
jb
fwait
mov
ss
jb
dec
rcll
scas
pop
add
pop
dec
pop
fildll
aas
addr16
adc
push
jno
cli
mov
xchg
cwtl
inc
iret
leave
mov
push
push
mov
pop
int
insl
jne,pn
xchg
mov
stos
mov
cmpsb
jo
cmpsl
icebp
fdiv
xchg
fadds
clc
and
orb
in
dec
leave
cmp
pop
xor
push
lea
cmp
outsl
test
pushf
xor
or
inc
sti
bound
and
lock
in
addl
adcb
xor
and
jo
fisttps
mov
shll
stos
fisubrl
xor
rcrb
mov
push
lock
insl
jge
scas
xchg
xchg
cmp
jns
or
inc
and
mov
xor
outsl
jg
fs
xchg
popa
inc
lcall
loope
imul
into
icebp
stos
add
xchg
mov
imul
pop
xchg
jae
pop
push
sbb
xor
jle
cld
adc
cli
cmp
sub
das
mov
loope
dec
adc
enter
mov
push
pop
add
out
cmp
fs
xchg
incb
addr16
sbb
gs
mov
shlb
sarl
or
loopne
jnp
xchg
fsubl
cmp
pop
test
and
repnz
cli
sahf
adc
dec
dec
pop
sbb
cmpsb
pop
ficompl
inc
mov
xorb
out
cmp
dec
xor
ficomps
dec
dec
cmp
adc
cmpsb
movsl
pop
and
negb
sti
jp
shlb
das
cmc
fsubrs
inc
icebp
and
lahf
aaa
and
sbb
imul
loopne
inc
fcmovnbe
in
into
xor
lds
xchg
inc
and
cld
cmpsl
pop
xor
xor
mov
push
xchg
xor
push
and
pop
aad
es
pop
xor
mov
sub
jecxz
stc
aaa
shll
and
adc
push
pop
inc
aas
add
fwait
xlat
sub
mov
vmaxsd
cmpsb
inc
in
lods
in
pop
add
insb
stos
fisubrl
cmp
leave
push
stc
sar
sub
mov
jge
and
test
cltd
lods
lods
ljmp
imulb
pop
cmp
mov
adc
daa
mov
popf
cmp
lods
int
int
out
out
push
addb
dec
xor
gs
lds
mov
loope
loopw
adc
daa
aam
adc
push
adc
jmp
add
pop
xchg
jl
loopne
sbb
pop
xor
inc
std
cmc
push
jmp
jp
jg
ficoms
into
inc
ja
lds
cmp
push
mov
xor
pop
sub
insl
push
push
adc
dec
ss
push
pop
push
ss
ja
lret
movsb
jb
icebp
data16
jne
ss
in
pusha
dec
fstpl
stos
mov
aad
sbb
mov
in
sbb
push
gs
xor
test
imul
lahf
sti
das
loope
inc
fnstenv
lock
add
nop
cmpsl
xor
pop
imul
loope
repz
sbb
add
std
ficomps
test
adc
out
inc
mov
xor
dec
dec
mov
addr16
pop
sbbl
and
rorb
stos
push
pop
mov
adc
inc
outsb
push
push
je
cmp
pusha
das
das
fwait
into
stos
jno
in
imul
lret
movsl
sbb
jp
mov
mov
sbb
sbb
jns
gs
mov
ficoms
push
ret
jo
add
jge
in
loop
bound
xor
mov
add
fistl
jp
push
or
push
inc
fisttpl
jl
mov
add
jnp
ss
mov
cmp
fnclex
add
loop
imul
mov
icebp
mov
mov
in
movsl
pop
ret
sub
mov
mov
adcl
aaa
cmpsb
mov
xchg
aam
leave
nop
pop
fs
aam
sub
adc
ret
cmp
dec
jbe
adc
aaa
sarb
mov
xor
and
test
mov
push
mov
push
scas
bound
mov
aaa
aad
push
xor
shl
lret
sub
filds
js
lds
loop
add
mov
mov
fldcw
das
push
and
sahf
jae
add
lds
ljmp
shll
pop
dec
mov
mov
sahf
jns
adc
push
pop
andb
mov
sub
aad
pusha
lock
into
imul
outsl
xchg
arpl
xor
in
cltd
in
dec
fiaddl
dec
jb
es
mov
dec
daa
arpl
fnstcw
pushf
sbb
or
popf
pop
and
jmp
xchg
test
pop
loop
cmp
leave
adc
mov
and
mov
hlt
mov
je
rolb
mov
les
dec
or
aaa
mov
cmp
jno
push
jnp
test
std
mov
std
pop
out
sub
push
mov
xchg
pusha
inc
leave
ja
mov
dec
adc
data16
adc
mov
je
jb
mov
xchg
and
or
dec
pop
lds
xchg
mov
mov
adc
sub
mov
jge
cwtl
ss
movsl
andl
shll
sub
jns
pushf
stos
push
adc
das
sbb
test
fnstsw
sub
repz
cmp
loope
sbb
ljmp
jne
mov
leave
mov
sub
ja
sbb
cli
scas
xor
repz
shrb
add
cmp
hlt
into
push
lahf
arpl
je
mov
jmp
jae
or
add
imul
mov
jg
test
rcr
shlb
push
cmp
inc
into
xchg
bound
pushf
stos
lcall
push
ljmp
test
repnz
scas
pop
inc
aam
push
mov
pop
cs
fwait
out
adc
pop
cmp
add
out
movsl
imul
bound
cmp
sbb
icebp
lea
test
fstpt
xchg
in
test
push
add
and
push
dec
mov
dec
nop
popa
push
dec
mov
sar
je
insb
mov
mov
js
jmp
add
xor
pushf
dec
mov
cltd
lcall
mov
sbb
sbb
xor
stos
scas
repz
dec
cwtl
push
cmp
cmp
lods
cmc
daa
addr16
pop
xor
aad
xor
xor
inc
and
add
jmp
xlat
mov
lret
js
sar
and
fidivrs
shll
sbbl
aaa
adc
jo
push
cmp
roll
cmp
test
sbb
mov
lret
sub
mov
insb
push
cwtl
dec
mov
in
mov
adc
and
mov
outsb
enter
sbb
cmpsl
shll
daa
cmp
xlat
fs
fsub
movsl
jo
add
les
add
mov
ficoml
add
stc
and
mov
sub
xor
jle
add
sarl
aas
jmp
mov
and
jg
push
scas
es
xlat
jae
inc
out
fbstp
mov
adc
andb
adc
lock
mov
out
pop
mov
lret
in
es
test
pop
push
stos
fdivl
dec
gs
mov
out
and
stos
sbbl
icebp
adc
sbb
add
out
std
xor
inc
shlb
arpl
icebp
fildl
jmp
xchg
arpl
aaa
mov
insw
xchg
cld
aam
lods
pop
sbb
xchg
repz
xor
adc
xchg
test
mov
icebp
pop
cltd
mov
out
fdiv
in
mov
in
jge
pop
outsl
aam
ss
or
xlat
and
lret
outsl
adc
das
push
imul
imul
dec
daa
mov
fwait
mov
test
add
test
sub
dec
xorl
aam
or
cwtl
test
in
pushf
pop
jge
and
sub
pop
fiaddl
mov
dec
push
gs
push
mov
inc
lcall
mov
out
daa
adc
xor
xor
jg
fnsave
cmp
pop
loop
nop
sub
bound
xor
into
ret
inc
xchg
int
pop
or
nopl
or
xorl
mov
adc
adc
clc
lahf
jl
ljmp
or
or
mov
jge
fsubrl
add
xor
insb
sbb
ficompl
fcomps
mov
arpl
jge
cltd
push
mov
lret
mov
mov
mov
ss
xlat
pop
aad
lds
add
popf
pop
mov
dec
pushl
sub
gs
mov
xor
dec
rdpmc
mov
pop
adc
out
xor
aam
add
xor
int3
test
popa
scas
ss
xor
popf
or
pop
mov
cmp
xorl
add
testb
sub
lret
push
daa
xchg
xchg
iret
mov
add
or
sbbb
xchg
outsb
ljmp
bound
push
push
mov
pop
lock
lods
jo
and
and
std
push
fnsave
and
lret
cmp
mov
adc
dec
sahf
scas
dec
gs
es
loope
dec
mov
cltd
sbb
scas
dec
xorb
nop
ljmp
dec
inc
jle
nop
jp
or
and
sbb
xchg
jbe
sbb
sbb
mov
imul
push
push
jge
add
insl
ret
scas
das
xor
xor
pusha
aas
pop
fdivr
loop
stc
mov
imul
sbb
pop
or
jnp
ret
mov
rcrb
push
adc
pop
mov
test
loopne
dec
pop
js
pushf
cmp
dec
js
xor
ja
xor
sbb
popa
pop
or
mov
or
leave
daa
inc
or
mov
jp
call
outsl
stos
jns
cmp
daa
mov
movsl
sub
mov
cmp
lahf
negb
pop
mov
xchg
sbb
or
lcallw
xchg
movsl
xlat
and
or
ficoms
pop
dec
sti
mov
xlat
dec
aas
mov
jl
xor
addr16
push
mov
push
imul
test
push
rcll
sub
pop
add
aaa
xor
jge
lret
xchg
movsl
mov
or
cmp
outsl
aaa
cmp
rclb
lret
jecxz
pusha
scas
jp
jo
leave
dec
pop
enter
jne
lret
sbb
pushl
nop
or
cmpsl
icebp
xchg
fwait
push
add
iret
andl
mov
adc
mov
mov
sub
aas
mov
sarl
sbb
cmp
mov
gs
xchg
mov
mov
push
mov
mov
out
sti
les
stos
mov
push
cltd
movsb
imul
movsb
adc
clc
dec
xchg
mov
xor
iret
and
mov
loope
pxor
push
repz
mov
pop
cmp
jl
add
mov
mov
std
jnp
movsb
push
inc
xor
rcrb
and
movsb
pop
mov
push
jo
adc
fwait
insb
xor
xor
sub
cmp
jg
mov
subb
pop
dec
lods
inc
dec
push
mov
js
jge
xchg
jo
ja
popf
adc
int
jo
pop
repz
rcll
std
jae
stos
iret
xchg
sub
data16
rcr
mulb
xor
test
lds
mov
in
pop
push
or
notb
xor
xchg
lds
sarl
push
adc
imul
and
in
pop
adc
daa
icebp
adc
mov
jmp
or
stos
push
scas
sbb
add
fmuls
mov
push
cmc
cmpsb
int
push
fstl
daa
repnz
add
bound
lods
ds
jbe
mov
cmc
mov
scas
add
mov
xlat
cmpsl
jae
addr16
xor
adc
add
mov
push
cmp
and
test
jecxz
push
or
inc
xor
shrl
fmull
in
cmc
jno
aam
std
pop
inc
faddl
in
cli
push
or
jmp
pop
rorl
iret
xchg
sar
in
xor
pop
mov
jle
pop
movsl
shl
in
xorb
hlt
lcall
sbb
sub
xor
jp
xor
loope
pop
out
push
xchg
dec
jne
pop
imul
pop
jg
adc
lods
pop
loope
mov
int3
xlat
mov
movsb
stc
fmuls
jp
icebp
sub
into
in
push
loopne
lret
mov
xchg
adcl
mulb
sub
or
data16
and
mov
inc
pop
loopne
dec
adc
cli
dec
or
aaa
cltd
cmp
jae
je
jg
xor
push
lea
sub
shr
insl
jbe
add
andl
jne
outsb
xor
sub
inc
jle
fnstsw
push
popf
cld
add
pop
es
pop
insb
std
or
inc
loope
das
lret
in
jp
outsl
mov
repz
iret
dec
adc
jge
push
jne
cmp
call
pop
fwait
clc
data16
test
cmp
jnp
mov
mov
pop
mov
inc
push
xchg
enter
sti
mov
sub
mov
mov
adc
jle
enter
xchg
dec
std
std
neg
dec
push
scas
push
mov
dec
fwait
dec
jne
sbb
xor
push
shll
mov
xor
xor
addr16
sbb
adc
jbe
mov
cmpsb
imul
les
lea
test
add
jl
rclb
sbbl
adc
stos
or
mov
stos
lcall
fidivl
and
sub
ss
bound
xchg
pop
in
mov
jecxz
data16
xchg
sbb
out
xchg
xchg
push
insb
push
shlb
mov
sbb
cmp
lea
or
sahf
arpl
cs
pop
pushf
repz
pop
sub
jge
inc
std
out
mov
sbb
jae
in
fldt
sbb
sbb
inc
aas
or
adc
divb
sahf
xchg
mov
xor
scas
cmp
jp
mov
or
fidivrl
into
xchg
xor
pop
out
imul
lods
add
ljmp
inc
add
imul
adc
incl
dec
arpl
jecxz
stos
xchg
pop
scas
test
testl
cs
add
mov
push
sub
movsb
mov
in
mov
xchg
push
mov
jbe
xor
xorl
daa
loop
dec
push
inc
or
xor
pop
out
leave
outsb
cmc
out
add
inc
stos
aaa
mov
fldenv
mov
adc
xor
mov
add
and
jle
insl
push
lock
inc
mov
aam
arpl
and
clc
sbbb
add
inc
decb
rorb
scas
fcmovu
stos
fs
fstps
stos
ficomps
dec
cltd
jbe
sbb
add
cmp
push
push
sarb
sbb
imul
fdivs
and
cmp
ja
pop
or
pop
fistpll
enter
jnp
sarb
scas
xor
loope
lcall
ljmp
cmpsl
mov
stos
dec
hlt
sbb
repnz
popa
pop
xchg
push
int
testb
or
popa
stc
cmpsl
dec
mov
lock
cmp
das
mov
lahf
push
int
jp
adc
add
adcb
pop
insl
sub
mov
addr16
dec
es
and
out
loop
pop
push
jg
pop
sub
xor
jno
stos
inc
mov
pop
inc
xor
cs
out
and
push
push
cmp
add
mov
jge
outsb
fidivs
push
mov
loope
popa
dec
rcll
push
adc
jo
popa
dec
mov
fildl
xor
push
adc
cmpsl
dec
fnsave
dec
pop
dec
fildll
or
inc
sbb
aam
adc
mov
dec
icebp
cwtl
mov
orb
out
out
cmpsb
aaa
push
pop
mov
into
lock
add
and
shlb
mov
and
pushf
pop
and
pop
xchg
cmpsl
test
mov
push
mov
jae
sbb
or
shl
mov
mov
lahf
adc
and
arpl
mov
nop
add
jmp
stc
inc
ret
fdivs
add
lea
lea
into
daa
sbb
test
mov
xchg
mov
inc
sti
fdivs
add
gs
dec
icebp
pop
inc
adc
sub
pop
ss
ja
jne
xchg
adc
aam
ret
push
push
dec
xchg
sub
ljmp
mov
popa
inc
sub
lret
lods
cmpsb
mov
lea
int3
inc
push
sub
xchg
in
mov
push
ret
aaa
stc
push
cwtl
jmp
jne
sahf
cmpsl
loop
std
enter
movsl
aad
adc
push
inc
dec
outsl
dec
xor
pop
or
jmp
xchg
adc
sub
ja
outsl
ss
xchg
jbe
and
jecxz
pop
jno
adc
pop
stos
dec
xor
shlb
lret
fwait
xchg
ror
add
mov
sti
lcall
and
das
lock
ret
xor
shl
sysret
outsb
dec
xchg
imul
sub
and
movsl
xor
mov
mov
in
xchg
xor
xchg
xor
loopne
mov
jecxz
push
mov
pop
nop
xorl
gs
popf
or
movsl
inc
cmpsl
xor
and
addr16
movsl
popa
popf
push
jb
add
adc
xchg
pop
imul
shlb
pop
mov
fwait
in
popf
pop
lahf
dec
enter
je
add
jne
dec
mov
sti
arpl
int
popa
xor
dec
lret
pushf
ds
pop
xor
int
or
sti
pop
ss
leave
ds
js
ja
dec
pusha
pop
pop
jne
aas
out
fimuls
pop
repz
push
adc
pop
jno
test
test
dec
cmpsb
and
add
cmp
dec
pop
pop
add
jp
rcrb
or
xchg
popf
lret
jge
pusha
repnz
cwtl
shr
jecxz
in
jae
loopne
into
jg
inc
xor
jae
into
icebp
aaa
push
mov
aad
ret
outsl
mov
test
js
mov
testb
hlt
xchg
icebp
testb
sbb
test
repnz
sub
sbb
inc
popa
std
cmc
xchg
adc
push
and
fldcw
cmp
data16
lahf
les
dec
push
adcb
push
aad
pop
jmp
roll
mov
xor
fwait
add
movsb
fs
movsb
fs
in
xchg
cmpsl
add
icebp
pop
es
rcll
and
add
pop
outsb
cmp
add
inc
aas
add
dec
adc
ror
pop
lcall
stos
xchg
rcll
jae
mov
std
dec
xchg
inc
in
xor
xor
mov
aaa
jno
fisubrs
sbb
push
add
je
jecxz
sbb
cmpsl
cmp
pushf
and
test
movsl
fldt
adc
jns
js
nop
lret
cmp
clc
icebp
inc
in
push
dec
sub
dec
mov
mulb
enter
push
sbb
lretw
adc
cmpsb
insl
faddl
rcll
imul
out
icebp
add
int
out
jb
add
sub
ja
stos
mov
xchg
cmp
sbb
inc
jnp
adc
mov
rcll
push
mov
sub
jnp
jge
jp
aam
dec
pop
jmp
les
cmpsl
inc
inc
sub
dec
jno
je
outsb
or
prefetchw
fs
cmc
push
notl
xor
scas
mov
mov
mov
mov
enter
loope
loop
stos
mov
rorb
iret
in
stos
mov
add
in
pop
stos
jg
xchg
testb
pop
dec
or
ljmp
sub
mov
lret
or
shll
mov
or
inc
stos
and
in
pop
mov
pop
iret
add
inc
inc
cmpsl
xchg
mov
out
sbb
cs
adc
push
push
out
ja
push
xor
sbb
push
pop
sti
inc
dec
pushf
pop
sbb
div
add
icebp
outsl
je,pt
pusha
leave
out
insl
dec
ja
cld
jp
add
js
jp
icebp
js
adc
xchg
adc
std
xchg
into
pop
sub
bound
sub
jl
aad
or
test
cltd
mov
sbb
jo
push
stc
aam
int
jo
das
or
stos
pop
and
push
cmp
inc
push
inc
call
lock
movsb
lock
iret
pop
loop
xchg
mov
inc
sub
jns
push
mov
pop
mov
pop
mov
sbb
cltd
jae
std
repnz
sti
jno
pop
xchg
xchg
mov
lea
cltd
mov
lea
inc
test
gs
mov
mov
mov
inc
mov
mov
js
out
jns
pop
addl
aaa
sbb
push
lret
or
push
gs
xchg
push
bswap
jnp
insb
pop
sbb
push
dec
repnz
shll
push
lea
dec
dec
xlat
je
and
cmp
pop
outsl
mov
fs
mov
mov
sbb
call
xor
mov
cmp
call
out
add
lds
mov
cld
cld
rorb
xor
clc
cmpsl
mov
jns
add
cltd
scas
cwtl
sub
stc
mov
add
cld
cmp
or
inc
std
mov
push
not
arpl
xrstor
popa
cld
pop
cmc
mov
lea
mov
pushf
fstps
addr16
int
cmp
sub
xor
cld
mov
js
mov
and
popa
mov
popa
push
sub
enter
popf
js
loope
lret
xor
add
movsl
scas
adcl
mov
jmp
mov
xor
fistpll
jo
nop
mov
popf
add
xor
push
sub
jae
ja
sti
sub
les
loope
jns
es
sub
inc
mov
xor
push
push
or
sahf
dec
rcrb
fdivl
add
mov
mov
inc
dec
sub
mov
push
pushf
mov
cmc
imul
xchg
sahf
lret
push
fsts
xor
sahf
and
pop
and
push
sbb
jo
jle
cltd
mov
and
outsl
add
sub
sbb
mov
scas
dec
mov
testl
lods
mov
in
aaa
lods
xor
push
pop
loop
jbe
pop
pop
ss
sbbl
test
xchg
aad
gs
mov
mov
mov
divb
test
or
xchg
mov
popa
leave
ss
lods
fdivl
fadds
lods
mov
adc
mov
stc
sbb
fistl
sbb
xchg
push
push
adc
ljmp
out
test
adc
pop
push
or
jb
icebp
ret
sbb
cmpsb
or
sub
xor
add
pop
xchg
push
xor
cmpsb
fwait
sti
clc
out
daa
inc
xchg
pop
ret
sbb
stos
in
cmp
dec
push
sbb
arpl
mov
sub
mov
mov
pop
je
imul
movsb
add
ljmp
xchg
push
sub
in
mov
push
sbb
jmp
sbb
lahf
and
jmp
and
add
cmp
add
jmp
jg
stos
sbb
add
ret
mov
pop
cmp
push
xchg
cmp
jge
adc
mov
pop
cltd
jne
inc
fs
test
lahf
mov
inc
repz
pop
aad
dec
pop
sbb
shrl
imul
jno
jmp
insl
and
ss
jns
repz
sub
xchg
cmpsb
xchg
cli
jbe
xor
arpl
sub
cltd
sahf
xor
enter
pop
mov
add
cmp
sbb
cmp
in
lods
je
loope
scas
lret
test
cltd
mov
sbb
push
cmp
mov
pop
nop
cld
into
hlt
xor
mov
jbe
dec
dec
insl
xchg
sub
psraw
rep
dec
popa
jmp
inc
push
sbb
shrl
sti
mov
pop
pop
cmp
cmp
or
xchg
ljmp
xchg
movsl
or
call
sbb
pop
cmp
dec
pop
std
mov
ds
xor
das
shr
xchg
shlb
stc
cmp
clc
dec
adc
in
cli
test
loop
test
daa
lret
xchg
fdivl
pop
int3
popf
ljmp
icebp
loopne
das
sbb
xor
pop
loopne
inc
xchg
xor
jns
push
xchg
push
mov
loop
imul
add
outsl
insl
mov
fst
fnstcw
rclb
sub
cs
mov
aas
gs
mov
stc
adc
xor
mov
icebp
fbld
pop
xor
es
cmp
jne
jg
pop
in
push
lret
adc
ds
hlt
fcompl
xor
ljmp
jecxz
xor
pop
xchg
lds
push
jp
fs
out
add
sub
dec
mov
cli
inc
arpl
adc
in
nop
in
jmp
popf
in
xchg
jb
ror
mov
pop
mov
inc
enter
int
sub
and
inc
rolb
sub
adc
cmpsl
insb
adc
loope
cmp
imul
leave
mov
scas
cmp
mov
popf
adc
divl
xchg
jl
subl
cmpl
je
mov
sub
fldl
ret
aas
insb
pop
data16
and
cmpsb
or
test
data16
xlat
orl
adc
xor
adc
int3
push
cmpsl
sidtl
repz
mov
sbb
inc
push
fidivrl
dec
xor
add
loopne
cld
addr16
imul
rcr
push
das
pushf
clc
add
cli
pop
cmpsb
in
test
adc
sbb
in
sbb
leave
adc
and
mull
inc
push
hlt
mov
sub
movsl
out
ja
pop
or
das
scas
mov
ss
pop
cmp
andb
dec
xchg
clc
in
jecxz
popa
or
fcomip
in
insl
mov
and
sub
fiadds
scas
test
int
int3
jnp
push
test
cli
scas
mov
mov
pusha
sbb
or
dec
pop
arpl
stc
push
xchg
std
ds
hlt
stos
jns
xor
inc
repz
adc
xchg
in
jecxz
or
out
sub
xchg
adc
lods
and
lret
mov
sahf
pop
sbb
ret
out
jg
jae
push
pop
mov
loop
adc
mov
data16
mov
loop
fs
leave
int3
inc
daa
rcrb
cmp
sbb
jl
rcrl
mov
push
xchg
ror
fsubrs
mov
mov
mov
mov
inc
pusha
repnz
mov
jb
or
mov
lret
out
movsl
insb
mov
mov
mov
xchg
cmp
arpl
pop
js
push
add
daa
flds
sti
adc
insl
xor
in
add
jbe
sub
outsb
and
xchg
xor
es
roll
xchg
xor
add
jns
xchg
iret
xlat
jbe
mov
jl
adc
loop
daa
add
rcrl
aam
imul
add
ret
cli
sbb
shl
adcl
pop
cmp
rcll
add
int
lock
pop
sbb
adc
js
or
inc
mov
sbb
and
inc
in
scas
divb
gs
sub
jl
jl
int3
movsb
into
xor
xchg
aam
dec
sbb
dec
add
dec
lods
fwait
xor
and
dec
and
std
and
pop
out
push
sub
into
or
sbb
jb
mov
lcall
cs
mov
stos
sbb
push
sbb
into
mov
mov
mov
and
add
jl
loop
sub
adc
bound
clc
mov
popa
mov
popa
mov
sub
sub
mov
shl
sbb
and
stos
jl
pop
lcall
je
pop
dec
xor
dec
lods
mov
pop
adc
mov
mov
test
ret
andl
inc
or
cwtl
les
test
lret
mov
xchg
cmpsb
in
rcr
xlat
pushf
mov
out
sbb
push
mov
add
inc
mov
es
pop
jle
xchg
enter
jae
bound
test
popa
loopew
leave
iret
icebp
filds
cvtps2pd
outsl
lds
mov
scas
rcl
lock
mov
clc
dec
jo
jmp
or
jbe
xor
ja
pop
shl
adc
pop
scas
xadd
mov
push
inc
cli
dec
jnp
mov
mov
int3
push
dec
ret
clc
sub
cltd
fwait
or
and
inc
adc
scas
iret
fisttps
add
pop
int
or
fwait
scas
mov
pop
mov
cmpsl
fs
jns
mov
dec
pop
pop
jo
cmp
push
sub
lea
xor
dec
xor
mov
mov
and
test
aaa
dec
pop
cmp
and
add
rorb
xor
adc
sbb
jmp
cltd
push
insb
enter
nop
iret
sub
inc
cmp
jnp
cmp
add
xor
mov
or
mov
mov
xchg
push
push
inc
mov
popa
and
sbb
addr16
stc
out
std
je
adc
xchg
xchg
push
inc
add
imul
xor
cld
rorb
out
bswap
decl
cli
mov
imul
vpcmpeqw
sbb
lret
or
cmp
mov
data16
ss
arpl
mov
jecxz
dec
insl
ja
fisubs
xor
lea
repnz
mov
notl
cmpsl
jo
mov
jb
pop
in
iret
push
mov
and
xor
adc
sub
mov
leave
shrl
xor
adc
jecxz
sbb
mov
outsb
dec
adc
adc
daa
popa
imul
push
mov
subb
popa
out
mov
xor
sbb
scas
in
cwtl
icebp
clc
pop
int3
cmp
push
fmuls
ficoms
mov
es
sub
test
cmp
popa
dec
fwait
pop
jle
cld
mov
jl
aad
arpl
imul
xchg
pop
sti
dec
cmp
mov
xor
dec
out
sub
adc
pop
pop
dec
or
push
lock
lcall
out
loop
test
into
cli
lods
cld
jle
cmp
xchg
xchg
frndint
mov
test
pop
fwait
leave
xchg
ss
jno
cmp
std
cmp
jno
lea
push
sub
movsl
leave
inc
shl
pop
pop
push
incb
out
sbb
and
movsl
enter
jl
dec
or
and
pop
adc
movsb
pusha
and
inc
cld
test
or
loopne
movsl
and
fwait
cmp
sbb
mov
fsubrs
das
jmp
loop
inc
inc
add
xchg
sbb
clc
je
mov
aam
cmp
aaa
rol
mulb
test
pop
xchg
gs
in
dec
pop
dec
ret
mov
push
mov
jbe
cmp
dec
cmpsb
popf
mov
stos
mov
cmc
or
pushf
ss
jl
pop
mov
bound
fcomi
out
push
js
stc
sbbb
scas
jae
mov
inc
insl
enter
lea
or
idiv
push
gs
xor
dec
pop
inc
cmp
scas
xor
lret
lds
ret
enter
inc
pusha
mov
xchg
mov
xchg
outsl
xchg
inc
sub
push
mov
lcall
ss
dec
jnp
lcall
add
movsl
in
pusha
mov
push
cmp
lea
mov
std
aaa
xchg
and
pop
xchg
adc
out
xlat
das
cmpsl
jp
es
mov
imul
out
aas
pusha
jle
pushf
shll
xchg
and
lods
jno
sbb
inc
ficomps
ds
pushf
out
sub
scas
out
mov
xor
xor
lock
imul
jno
push
loop
dec
push
inc
dec
jb
sub
or
mov
or
scas
lods
faddl
imul
insl
mov
aas
mov
inc
sub
sub
sbb
cmp
cmp
pop
stos
xchg
out
sbb
js
lds
stos
mov
xor
cltd
imulb
lret
negl
out
push
mov
cs
and
add
mov
mov
inc
push
pop
cltd
dec
mov
mov
jg
xchg
adcb
ret
sub
lods
inc
lahf
icebp
sarl
xchg
mov
test
popa
enter
pusha
or
add
in
mov
out
mov
push
cmp
sbb
inc
pushf
and
fwait
jb
xchg
test
arpl
insb
cli
cmp
fmull
lods
xor
cmp
mov
adc
and
mov
fwait
loopne
sub
jne
push
mov
lret
dec
or
and
scas
xor
cmp
pop
daa
jge
add
decb
pushf
cmp
fwait
mov
pop
lods
aad
or
shrb
and
cmpsb
negl
and
fwait
xchg
sarb
jge
arpl
sbb
push
mov
push
add
and
popa
test
jns
adc
push
and
mov
pop
and
cli
pop
jge
fists
fistl
out
lret
aaa
mov
add
mov
mov
js
sbb
add
icebp
stos
xor
inc
movsb
pop
jns
cmp
lock
xor
ljmp
pop
xchg
push
stos
dec
mov
lret
mov
pop
ds
ss
dec
cmp
jl
or
in
push
into
daa
imul
add
stos
jae
xchg
imul
les
mov
sbb
xor
jge
add
mov
inc
lock
xor
lcall
lahf
adc
cmp
jne
mov
testb
mov
and
nop
sub
mov
ret
adc
lds
cmp
movsl
scas
gs
xchg
insl
push
lcall
xchg
scas
xchg
enter
sahf
inc
jecxz
pop
fiaddl
mov
xor
adc
popf
cld
rcr
sarl
lcall
pop
in
push
daa
and
push
push
dec
mov
js
hlt
lcall
adc
sahf
add
outsl
sub
xchg
sbb
fs
pop
mov
int3
cmpsb
sbb
sahf
lock
pushf
or
ljmp
inc
repz
fdivrp
push
mov
xor
sti
pusha
adc
fdivp
mov
popf
cmp
dec
and
cmp
lcall
lods
inc
jecxz
inc
push
push
sbb
sti
test
aam
sbb
aad
and
adc
sbb
jb
or
pop
icebp
int
inc
add
call
jno
decb
ja
inc
jbe
cli
pop
inc
testl
outsl
and
pop
mov
adc
push
add
stos
pop
pop
and
sahf
sub
icebp
mov
add
popa
cld
xchg
inc
into
cli
dec
inc
sub
dec
std
pusha
pop
adc
push
jl
cmc
xor
add
inc
sub
lock
and
push
ljmp
insl
and
ret
sbb
inc
dec
add
je
xor
adc
cmp
aam
imul
mov
dec
pop
inc
pop
add
data16
sti
or
inc
lods
dec
cmp
jbe
or
lock
test
or
mov
push
lds
or
push
mov
sub
push
sbb
fst
pushaw
inc
and
mov
sbb
sub
add
adc
pop
rcl
pop
cmp
mov
xchg
pop
in
cmp
fnstsw
xchg
inc
stc
add
setnp
mov
push
pop
and
arpl
xchg
push
stc
mov
icebp
dec
imul
xchg
add
or
cmpsl
lea
enter
pop
mov
stc
and
repz
stc
fwait
std
movsl
push
and
cld
add
pusha
mov
gs
cltd
sub
sbb
es
push
fstl
cld
mov
jmp
je
shrb
add
sbb
shlb
xor
xor
cmc
pop
xchg
mov
push
clc
adc
add
iret
dec
push
addr16
popf
mov
fildll
scas
push
dec
xor
jns
or
out
dec
adc
mov
insl
pop
rcrl
sub
out
or
xorb
in
in
rcr
mov
popa
imul
pop
mov
into
push
sbb
stos
iret
mov
popa
mov
cmpsb
faddl
pushf
lock
add
into
mov
vcvtdq2ps
xor
xor
adc
sbb
jmp
jmp
jg
in
lea
ficoml
mov
xor
popf
ret
fbld
je
pushf
inc
jno
jno
fwait
sbb
gs
pusha
ljmp
std
jl
and
sbb
jle
fdivl
jne
fists
movsb
mov
xchg
and
lcall
cld
jecxz
jae
push
in
std
xor
cltd
je
push
xlat
xor
jae
adc
mov
pushf
cmp
add
das
out
jnp
xor
xchg
pop
cmc
jl
pop
dec
jne
mov
push
cmp
dec
fistpl
or
dec
and
sub
sar
icebp
cmp
inc
xchg
adc
xorb
pop
dec
lret
sub
jo
jecxz
adc
cltd
fldcw
sti
pop
jle
loope
cmp
xchg
daa
mov
and
push
sbb
daa
mov
scas
fldt
xlat
mov
cs
cli
inc
loopne
pop
adc
sbb
int3
aam
cld
dec
mov
sbb
aas
into
mov
push
cmp
fistpl
cld
movsb
pop
adc
and
hlt
push
sbb
lea
in
pop
adc
lcall
mov
iret
inc
adc
sub
in
fiadds
es
dec
int
add
cltd
push
pcmpeqb
dec
sbb
pop
push
add
leave
xchg
popa
inc
dec
sbb
push
clc
stc
cmp
shll
jbe
sbb
fs
and
sahf
in
mov
xchg
outsl
jnp
adc
mov
hlt
daa
mov
arpl
add
fst
pop
xchg
stos
sbb
sub
es
lods
fbld
cmc
mov
fiadds
daa
adc
pop
jne
das
mov
mov
cmpsl
fwait
aaa
add
fildl
mov
add
cmp
sbb
packssdw
cmc
mov
dec
sbb
sysenter
les
inc
outsl
ja
rol
std
mov
jp
mov
sub
lods
fs
test
xchg
xor
repnz
filds
ret
jnp
dec
sbb
dec
fisubl
and
shlb
rcrl
lret
iret
cmpsb
scas
adc
imul
mov
sub
jmp
sbb
sub
xor
xchg
jp,pt
clc
test
popa
ret
mov
pop
push
xchg
and
dec
fdivrs
andl
movsl
mov
jne
frstor
push
push
outsb
les
cmp
shr
fwait
lds
mov
adc
push
call
movsl
dec
rolb
aad
shl
inc
inc
jae
test
mov
xorb
pop
xor
xor
loopne
cmp
movsl
int3
jnp
ret
jns
dec
pop
push
adc
jo
fidivrs
and
adc
not
inc
scas
xor
dec
sub
jne
imul
add
dec
sbb
sbb
pop
mov
add
shll
adcl
xchg
xor
rcl
jmp
shll
adc
push
out
push
jecxz
popa
mov
testl
mov
aam
test
xchg
pop
pop
mov
add
push
sbb
ficoml
sti
fisubrl
pop
and
ret
push
je
addl
xchg
add
mov
add
out
jge
push
xor
push
sarb
loop
mov
ss
mov
sbb
jb
sub
popf
mov
push
cwtl
gs
dec
pop
xor
pop
sub
lret
or
int3
mov
mov
xor
push
popa
popa
dec
sbb
jnp
xchg
movsl
ret
pop
push
frstor
adc
stc
cli
sarb
jno
aad
or
stos
subb
pusha
fstl
sub
push
sub
pop
sti
sub
mov
imul
add
xor
fildl
adc
test
pop
cwtl
fldt
in
adc
jbe
fptan
sahf
cmpb
sub
dec
pop
scas
cmp
mov
mov
dec
cltd
mov
jo
sbb
xchg
xchg
int3
and
pusha
aaa
push
scas
sbb
xlat
gs
mov
out
mov
iret
sbb
pop
scas
add
mov
mov
adc
inc
stos
in
pop
pusha
sbb
lods
inc
data16
dec
mov
inc
cld
jo
add
jl
fimull
stos
add
in
enter
pop
mov
sti
std
jge
dec
mov
jecxz
dec
inc
mov
out
push
sub
mov
or
sbb
dec
test
push
push
dec
pop
and
mov
push
xchg
in
add
test
pop
dec
int
inc
popa
sbbb
xchg
js
movsl
mov
lret
sbb
cmp
scas
xchg
xchg
ja
ret
xor
sbb
test
das
mov
inc
inc
pop
inc
mov
sti
push
mov
xchg
mov
mov
ficoms
mov
dec
jbe
lds
jg
dec
dec
xchg
push
mov
mov
fimuls
dec
mov
mov
cld
xor
xchg
or
or
rol
mov
aaa
std
add
shlb
sub
aam
xor
jle
sbb
cmpsb
aam
ss
mov
xchg
or
pusha
xor
orl
std
es
sbb
test
mov
pusha
xchg
aas
movl
dec
cmp
mov
mov
pop
dec
sahf
lock
adc
pop
jae
add
adc
out
test
popf
xorl
pop
daa
movsl
ljmp
jae
flds
xor
test
pusha
add
test
cmc
xlat
and
mov
fidivrl
mov
aas
push
scas
and
dec
insl
xchg
sub
mov
mov
lods
adc
jb
add
jle
mov
jmp
dec
dec
xor
jp
mov
gs
mov
fistl
jge
js
out
jge
push
lock
push
movb
sub
pop
jle
mov
adc
bound
std
popf
mov
mov
lea
mov
stc
add
mov
lods
add
lods
or
mov
mov
into
cmp
cmp
mov
or
mov
push
stos
inc
addr16
rcll
addr16
lock
rcrb
stos
adc
push
rorb
inc
mov
int
stos
arpl
scas
jecxz
and
or
stos
push
in
pop
int
pop
mov
outsb
sahf
movsl
imul
push
in
pop
sbb
xchg
pop
mov
push
in
inc
pop
push
fisttpl
das
bound
pop
cmpsl
mov
push
pop
out
mov
fwait
jg
jl
or
mov
mov
cltd
sub
adc
es
or
enter
pop
pop
movsl
stos
cmpsl
xor
push
add
aad
int3
push
pop
or
icebp
fiaddl
sub
push
mov
popf
xchg
xor
xchg
arpl
xor
sbbb
and
lods
mov
sbb
jne
pop
add
movsb
pop
out
loop
js
xor
push
arpl
outsb
mov
pop
dec
dec
push
imul
and
or
fcoml
dec
cmp
daa
mov
inc
jns
cwtl
insl
pop
bound
gs
inc
fsts
and
fnstsw
test
das
push
outsl
out
es
dec
insl
loope
aas
xchg
xor
add
mov
ljmp
pop
add
addr16
pop
adc
pop
orl
xchg
cmp
mov
push
push
imul
pusha
fstp
cs
push
xor
push
jo
aas
inc
jno
push
push
xchg
push
test
lret
jl
jb
je
cltd
pop
mov
fs
dec
jns
popl
outsb
shlb
mov
mov
daa
push
fcomps
pusha
mov
negl
mov
jp
and
imul
mov
adc
adc
add
xchg
jne
loop
mov
addr16
test
sbb
fldt
sbb
jbe
cmpsb
push
dec
and
and
jne
push
pop
dec
cmp
mov
sbb
test
dec
mov
push
push
int
push
stc
jl
mov
and
mov
repz
imul
or
mov
dec
jle
mov
jo
mov
loopne
sbbl
mov
adc
mov
jl
orl
lods
js
mov
sbb
loopne
fcompl
fisttps
mov
mov
mov
jg
aam
push
daa
scas
lods
ja
das
aam
shlb
inc
hlt
push
or
jl
fisubrl
rcrb
push
mov
mov
je
pop
in
loop
in
push
pusha
pop
leave
ja
cmp
xor
lret
xlat
pusha
roll
std
insb
cmpb
mov
std
loopne
shl
cli
call
mov
and
sub
mov
lret
imul
test
lea
sahf
mov
psubd
mov
mov
dec
and
dec
sbb
mov
inc
sub
insb
fucomip
in
mov
push
sub
frstor
mov
ret
push
pop
hlt
dec
or
inc
pop
lcall
fidivl
popf
pop
out
iret
and
cmp
cmc
mov
add
pop
andl
sbb
pusha
aad
cmp
sub
repz
mov
mov
inc
dec
mov
pop
lods
dec
sbb
addl
pop
cltd
mulb
repz
imul
or
sbb
dec
and
scas
adc
lret
cmp
lea
sahf
gs
mov
xchg
stc
fidivs
dec
adc
scas
out
push
adc
and
cltd
ss
lods
or
mov
mov
pop
lea
pop
xor
push
scas
sub
shr
mov
or
add
movsl
pushf
cmpsb
add
loopne
sbb
outsl
or
gs
into
sahf
sti
in
adc
or
cmp
lods
pop
inc
jge
xchg
cmp
cmp
adc
jne
jle
mov
gs
jo
or
aam
xor
rcrb
push
mov
push
adc
dec
leave
dec
mov
cmpsb
popa
xchg
lods
out
add
cmpsb
mov
xlat
adc
ja
cld
push
adc
arpl
popa
icebp
rcll
adc
sahf
mov
popa
sbb
mov
mov
leave
fisttpll
or
imul
jne
mov
sbb
hlt
popa
jbe
push
add
xor
fidivrs
hlt
loopne
aaa
arpl
jecxz
imul
lea
xor
xor
dec
ja
ror
push
mov
sahf
sbb
push
popa
aaa
mov
sbb
and
fistps
lret
lahf
xor
fxtract
out
js
sub
mov
xor
dec
xor
nop
orb
pop
push
insl
pop
mov
lds
and
stc
test
pop
stc
and
imul
fbld
movsl
add
cld
mov
es
lahf
xchg
test
push
leave
xor
sub
sar
and
dec
push
adc
lds
xchg
imul
fistps
cwtl
mov
dec
jns
aad
arpl
jecxz
sbb
into
movsl
outsl
addr16
fstpt
pop
mov
or
jg
fcoml
cmp
mov
lea
addl
add
out
test
push
subl
add
pop
fcmovnbe
mov
pop
mov
in
in
xor
addb
sti
push
adcl
cli
pop
adc
ss
xchg
jg
sbb
sbb
pop
xor
int3
cmpsl
pop
adc
pop
out
in
lret
pop
jmp
test
lods
and
lds
mov
or
test
push
mov
out
jle
jl
sbb
dec
xor
movsl
jnp
pop
adc
lret
ss
leave
pop
fsubr
std
hlt
icebp
add
sub
stos
jnp
push
aaa
dec
daa
pop
xchg
rorl
cltd
xchg
or
adc
dec
imul
pop
cli
sbb
push
out
and
xchg
add
out
or
and
popa
xor
and
arpl
jl
cwtl
pop
inc
test
adc
lock
clc
aas
inc
xlat
jnp
jmp
ret
in
leave
arpl
ret
push
shl
sbb
xorl
scas
repnz
lret
mov
lods
sbb
fistpl
jae
add
insb
movsl
test
leave
cmpsl
aas
push
jbe
clc
sbb
xor
mov
pop
std
cltd
sbb
or
xorl
inc
xchg
ja
jmp
ja
aad
inc
inc
mov
cmp
mov
js
ds
lahf
xor
cmpsb
push
jp
jo
movsl
dec
dec
add
and
test
jmp
insl
insb
int
jne
mov
pop
adc
ficoms
lods
movsl
mov
sub
jne
jns
sub
xchg
mov
mov
fs
xchg
push
divl
fnsetpm(287
dec
xor
pop
out
leave
dec
arpl
dec
adc
out
xchg
jne
sub
pop
dec
pop
rcrb
es
aad
xor
sarl
push
mov
sub
es
shll
mov
pusha
repnz
and
adc
push
mov
dec
fcmovnu
call
lds
jp
in
repz
int
xor
ficoms
fidivrl
lds
xchg
adc
push
pop
jp
mov
mov
mov
out
stos
inc
dec
inc
jp
jge
xor
sbb
fidivrs
rorb
add
xor
jno
xlat
call
int
mov
lds
in
add
mov
xchg
lret
xchg
cld
push
push
out
and
leave
fcompl
cmp
add
imul
cld
jmp
in
sbbl
pop
repz
daa
in
pop
xor
mov
cmpsb
inc
mov
arpl
popf
adc
ss
jecxz
mov
sti
jle
test
enter
xchg
stc
pop
sub
push
jnp
and
pop
fdivrs
jp
aad
mov
inc
in
movsb
lea
pop
dec
sub
cmp
push
push
rol
xchg
in
cmp
repnz
adc
sbb
inc
movsb
mov
insl
cltd
arpl
or
xor
jbe
sub
push
xor
sbb
aaa
out
lcall
ja
aas
in
int3
roll
xchg
mov
dec
fadd
cmpl
popa
bound
outsl
sub
sbb
mov
fldenv
inc
or
fdivrs
out
push
mov
lcall
clc
shlb
mov
fcomi
je
xor
jmp
xor
iret
jnp
sub
pusha
out
je
mov
int3
or
xchg
jns
adc
jecxz
xor
xchg
mov
inc
gs
push
iret
rcr
call
sbb
dec
in
jno
sbb
out
mov
sbb
sarb
loopne
cli
lcall
xor
cltd
icebp
je
adc
xchg
pop
sub
mov
jno
xchg
xchg
lret
fildl
in
dec
stos
cld
sbb
ret
push
inc
ret
mov
jp
pop
sahf
js
sub
test
mov
pop
mov
mov
es
jmp
push
out
and
adc
mov
subl
inc
xor
or
sbb
push
xchg
xor
fimuls
sub
mov
jno
add
inc
enter
or
mov
or
pop
xor
sub
in
sbb
pop
scas
inc
sub
dec
jle
ret
dec
adc
sub
push
icebp
push
outsb
sbb
pop
das
jge
fdivs
xorb
shrb
test
ds
data16
ret
dec
xor
and
mov
adc
iret
xor
hlt
test
fldenv
push
inc
pop
das
mov
in
insb
push
cwtl
mov
mov
repz
insl
xchg
add
arpl
jg
xchg
cmp
fidivrs
das
adc
nop
jae
sub
loope
add
add
pop
hlt
adc
cli
repz
xchg
and
gs
sbb
dec
push
pusha
enter
mov
int3
xor
test
into
xchg
cmp
push
xchg
lock
sub
call
fsubrl
movsb
cli
sahf
aam
jg
cmp
mov
loopne
xor
out
les
dec
cmp
int
dec
inc
popa
jno
add
es
xchg
jns
icebp
je
mov
push
push
sbb
xor
cmp
push
mov
jecxz
mov
lret
lea
push
add
mov
pop
nop
repnz
adc
xchg
leave
outsl
pop
int3
pop
jmp
xchg
sub
push
shlb
imul
divb
pop
add
stc
pop
jo
mov
mov
xchg
adc
mov
int
add
jecxz
inc
out
daa
jge
jne
enter
sbb
adc
pop
sbb
push
dec
out
lock
daa
push
popa
mov
push
fisubrl
notl
jnp
sbb
test
jmp
cmp
adc
pop
popf
clc
into
mov
lds
and
inc
in
rorb
test
inc
mov
dec
and
lea
add
popf
fists
adc
mov
test
ret
aaa
xchg
mov
imul
mov
mov
in
adc
into
and
push
sahf
pop
lret
sub
xor
int3
repnz
sub
add
mov
insl
mov
mov
loope
mov
fldt
jno
cmpl
pop
cs
pop
inc
cmp
xchg
jle
pusha
jmp
outsb
hlt
xchg
xchg
cmpsl
sub
pop
loop
mov
add
rcrl
pop
insb
xor
xchg
sarl
es
lret
insl
xor
mov
sbb
mov
and
fsubrl
in
sub
pop
es
push
clc
mov
cmp
or
pop
ljmp
jmp
mov
int
pop
mov
xor
cld
dec
jge
mov
fisubl
das
mov
dec
cltd
mov
xchg
imul
fadds
mov
imul
enter
call
lods
cmp
mov
cmpsb
mov
je
xlat
or
mov
mov
adc
mov
adc
insl
jecxz
loope
push
and
call
pop
dec
push
pushf
imul
mov
add
lret
ds
dec
call
pop
cwtl
lock
xchg
xlat
xlat
jbe
stos
xchg
imull
shrb
sbb
push
push
lea
imul
cli
mov
xor
push
enter
pop
and
sub
arpl
push
or
xchg
cmp
xor
jge
mov
pop
jno
jae
and
mov
in
cmc
pop
popa
xor
addr16
mov
adc
stos
xchg
rcll
push
push
push
ds
pop
loope
xor
jle
mov
lcall
bound
pop
inc
jmp
push
mov
loope
addr16
jmp
repz
pop
jno
adc
push
add
sbb
cmp
vpcmpgtw
loope
xor
pusha
sub
mov
jge
sub
push
xor
cmp
arpl
xor
inc
jge
sbb
movsl
or
inc
fildl
loope
jecxz
or
or
cwtl
add
mov
cli
pop
stos
test
popa
lret
inc
bound
stos
push
dec
cmc
pop
jp
repz
in
sahf
scas
cmc
fstps
test
and
mov
popa
lahf
xchg
jmp
and
sbb
andb
jle
jno
mov
sbb
outsb
dec
sbb
push
cwtl
mov
imul
enter
dec
xchg
or
adc
aam
dec
dec
dec
mov
les
xchg
adc
and
lods
aaa
and
xor
adc
decl
mov
adc
xor
cltd
sbb
adc
mov
mov
arpl
or
enter
mov
gs
push
cmp
push
popf
mov
shrb
push
into
data16
imul
push
test
jecxz
cmp
inc
or
push
cmp
jae
js
sub
idivb
mov
or
das
mov
adc
imul
jo
jmp
mov
faddl
push
mov
adc
push
mov
mov
test
jne
pop
cltd
push
inc
pop
jno
xchg
mulb
sbbl
gs
imul
sarb
inc
cmp
or
test
fstpt
pop
xchg
ljmp
sbbl
loope
and
mov
fcoml
icebp
into
dec
addr16
sbb
fldenv
mov
add
rcll
pop
xlat
xchg
mov
rol
mov
mov
xchg
sub
add
int3
lock
sub
arpl
movsl
mov
mov
jle
cmc
leave
scas
sti
aam
adc
xor
lock
xor
add
mov
mov
xchg
mov
mov
aad
daa
call
dec
sub
sar
dec
pop
fsubl
sti
mov
fwait
push
stos
push
inc
pop
xchg
insl
divl
jbe
pusha
push
pop
inc
jns
insl
jmp
loopne
mov
mov
aas
inc
and
sub
cmc
inc
fdiv
das
dec
pop
insl
test
xor
xor
cmp
dec
dec
mov
sbb
lods
cmp
xchg
adc
push
adc
adc
imul
enter
cmc
ret
inc
dec
push
mov
pop
xchg
cmpsb
aad
mov
jg
cmpsl
outsl
sbbb
lret
xor
out
out
jae
and
dec
sbb
mov
xlat
pusha
xor
movsl
adc
lock
push
mov
jle
dec
iret
mov
out
repz
sub
sbb
pop
mov
mov
xchg
xchg
addr16
mov
pop
cmpsl
pop
aas
xor
inc
sbb
popa
or
aaa
mov
cmp
push
xlat
dec
jo
or
imul
daa
mov
enter
xor
or
in
jp
repnz
add
fs
ret
sti
inc
mov
cmpsb
mov
roll
jno
cmpsb
in
mov
fnstcw
aaa
std
insb
subb
sbb
rcrb
or
icebp
pop
sbb
mov
pop
push
rorl
scas
xchg
loopne
inc
divl
hlt
dec
mov
xchg
shll
orl
decb
mov
testl
add
jb
xor
push
sahf
sub
loopne
dec
das
stc
sahf
shll
jo
mov
pop
push
cmpsb
push
pushf
sbb
rclb
testb
fucom
fadd
mov
mov
sub
fs
pop
dec
adc
and
mov
pop
and
push
insb
mov
push
mov
jecxz
fisubs
testb
push
int3
dec
push
outsb
in
add
lahf
shlb
fs
addr16
xor
dec
inc
sti
test
dec
es
pop
and
sub
mov
or
gs
pslld
daa
leave
lods
push
xor
dec
rorl
inc
out
push
data16
or
adc
pop
sbb
xchg
mov
sbb
sub
icebp
push
inc
lcall
jne
stos
and
mov
mov
push
push
and
push
psllq
mov
xchg
dec
adc
loopne
xchg
sbb
loope
pop
leave
mov
sbb
frstor
lds
mov
xor
les
sbb
inc
jle
jb
popa
or
inc
sub
dec
adcb
std
pop
or
fwait
and
fwait
pop
add
test
jo
pop
outsb
shlb
jae
movsl
imul
scas
or
sbb
jns
outsb
mov
ljmp
lret
xchg
pop
mov
xchg
fisttps
lahf
sub
add
pop
sarl
cmpsb
mov
popa
mov
loopne
push
cmp
ret
push
addr16
push
leave
pushf
inc
jl
jns
sbb
inc
aas
or
and
repnz
xor
sbb
adc
fcomps
hlt
popa
xchg
xchg
xor
arpl
dec
adc
or
addr16
icebp
cmc
aas
aam
sbb
loopne
jg
or
clc
and
xor
flds
add
mul
or
test
nop
outsl
adc
mov
addr16
imul
idiv
daa
xor
cmpsl
jno
sub
test
dec
bound
and
addb
add
sub
test
cmp
push
pop
or
lock
sbb
dec
frstor
inc
push
sbb
hlt
dec
or
enter
or
into
lds
mov
pop
pop
xchg
and
dec
movsb
jno
out
into
or
aaa
ds
adc
pop
lcall
stc
hlt
sub
pop
hlt
push
pop
pop
sbb
adc
aas
stc
jmp
xor
pushf
hlt
push
lret
hlt
xlat
or
mov
insl
lods
mov
xchg
subl
lea
xorl
pop
icebp
lcall
mov
je
push
and
repz
sub
jmp
leave
cmp
cmp
popf
sub
cmovnp
cmp
mov
iret
cwtl
ds
add
or
ja
je
outsb
popf
clc
loopne
inc
nop
xor
cmpb
pop
jne
lahf
insb
data16
fistps
packssdw
daa
mov
mov
shlb
mov
and
lret
mov
pop
aad
es
sub
xor
inc
adc
gs
bound
dec
and
into
addl
outsb
dec
rcr
adc
xor
mov
xor
inc
inc
cmpsb
xor
out
jle
jl
popa
scas
std
fs
mov
xchg
pop
outsl
adc
daa
loop
into
push
mov
and
iret
xchg
in
mov
xor
and
push
pop
mov
sub
xchg
nop
sub
aaa
fstl
pop
mov
add
mov
cwtl
mov
cmpsb
pop
aam
call
in
cld
cmpsb
mov
sub
jne
pop
push
lods
pushl
mov
flds
sbb
out
and
pop
insb
or
movsl
dec
dec
fmuls
ds
or
hlt
stos
adc
fdivrp
xchg
pop
and
pushw
add
subb
das
push
inc
sub
adc
inc
leave
sti
push
shl
inc
ret
in
or
dec
mov
xchg
push
ret
addr16
aaa
xchg
addl
xor
cmp
sbb
insl
inc
stos
adc
jno
inc
mov
dec
fstpt
clc
jo
loopne
dec
xor
cmpsl
ljmp
and
and
popl
dec
xchg
or
mov
mov
sbb
or
out
xchg
arpl
mov
push
mov
xor
sbb
mov
cmp
inc
rorb
in
sarl
movsb
mov
and
push
xor
push
xlat
add
mov
xor
mov
mov
outsb
ss
shlb
or
pop
push
jl
pop
push
pop
pop
sahf
pop
scas
movsl
pop
imul
ljmp
push
jecxz
or
bound
xchg
fisttpll
ja
cmp
push
jns
pop
es
mov
sub
sbb
pop
jno
push
jecxz
sahf
imul
mov
pusha
adc
cli
and
jb
fs
imul
jno
scas
add
push
jb
mov
cld
pause
sbb
jp
fwait
addl
dec
hlt
inc
cmp
mov
mov
inc
repz
in
or
push
jno
push
sub
inc
mov
sbb
and
paddusw
mov
or
add
in
aad
ficoml
sub
js
xor
insl
cli
and
sub
addb
mov
cmp
pushf
xchg
jae
bound
lcall
push
dec
int
mov
mov
jno
jbe
pop
sub
mov
and
or
into
xor
imul
mov
lahf
mov
aaa
pop
push
mov
jne
push
pop
inc
jnp
push
popa
and
pop
xlat
ljmp
xor
push
into
jne
bound
mov
lods
stos
sbb
xor
in
nop
mov
outsl
ret
in
cwtl
xlat
xor
pop
push
mov
nop
fisubrs
jecxz
cwtl
cmc
nop
ja
jno
les
cwtl
pop
in
dec
xor
and
jb
movsl
or
xchg
mov
addr16
add
aad
pop
push
xor
adc
std
das
xchg
scas
sub
xchg
mov
daa
sar
cltd
push
pushf
mov
xor
out
cmp
fistpl
pop
scas
pop
stc
into
pop
fisubrs
or
je
test
test
lahf
bound
imul
lods
movsb
pop
cmc
push
mov
mov
stc
lahf
push
loope
mov
mov
adc
mov
or
stos
pushf
xchg
mov
cmpsl
xchg
getsec
mov
enter
jge
cmpl
fs
sbb
jmp
lock
arpl
xor
movsl
pop
icebp
lcall
jle
mov
add
xor
jmp
xor
stc
xchg
imul
mov
inc
aas
mov
mov
test
pop
icebp
fldt
adc
cmp
xor
jb
dec
out
mov
adc
push
movsl
pop
mov
jle
arpl
push
inc
arpl
enter
xorl
rol
sahf
pmullw
ds
fcomps
rorl
sbb
adcb
lods
incl
jo
hlt
dec
cli
or
cmc
mov
repnz
inc
pop
cmpsb
push
cmp
mov
daa
mov
js
out
mov
dec
inc
jge
out
push
pop
xor
adc
leave
mov
and
jnp
sbb
push
dec
iret
push
jne
add
cld
sub
sbb
push
xchg
push
mov
and
xchg
xchg
es
sub
mov
xor
outsl
jae
rorl
and
xchg
add
outsb
fsubl
dec
inc
xor
mov
xorl
sbb
mov
popf
in
mov
inc
jae
data16
fcompp
inc
push
xor
jge
add
imul
out
cmpsl
dec
decb
dec
rcl
sub
xor
xor
test
cwtl
fsubs
repz
leave
mov
or
inc
xor
enter
xchg
das
xor
roll
sub
jl
xchg
addr16
into
fs
adc
xchg
rcrl
push
sub
and
mov
loopne
sub
or
jge
jns,pn
sub
imul
xor
jg
dec
dec
pop
sub
pop
mov
test
dec
pusha
sub
sub
aad
dec
fwait
or
aas
or
jo
xchg
mov
xor
nop
insb
and
mov
out
xor
inc
shrb
push
push
fs
sbb
outsl
xor
jae
sar
std
cmpsb
sti
or
lahf
xchg
adc
jae
add
xor
shll
lret
sub
jl
popa
push
xorl
sbb
jne
stc
mov
sub
and
movsl
adc
cmp
inc
or
out
sub
scas
sbb
and
cmp
add
jmp
or
sbb
push
aas
cmc
movsb
add
cs
xchg
cmpsb
xor
xchg
repnz
enter
sti
and
loop
xchg
arpl
adc
xchg
cmp
and
xor
inc
mov
cmp
pop
lock
xchg
jp
jns
sti
fdivr
and
cmc
pushf
dec
and
and
push
mov
jl
xor
rclb
cmc
or
xchg
cmc
movsb
pop
jbe
mov
mov
adc
or
pop
mov
or
mov
and
xor
xchg
jo
and
pusha
or
xchg
into
leave
add
jae
xlat
clc
mov
adc
and
adc
sub
cmp
in
cli
insb
push
repz
jge
call
sbb
jnp
loope
test
fcmovne
sti
add
pop
jno
scas
out
enter
es
std
adc
add
imul
aad
pop
pop
add
mov
mov
je
outsl
je
mov
xor
inc
sub
xchg
shrb
xor
mov
decb
lds
jb,pt
je
clc
movsb
shll
xchg
arpl
sbb
mov
das
daa
jmp
fisttpll
adc
fwait
rcrl
rcll
in
jns
cltd
imul
jl
cli
or
xchg
les
shll
jle
movsl
jp
push
sub
inc
je
pop
decb
xlat
mov
lods
jl
repz
lock
hlt
jmp
adc
pop
out
stos
jbe
pop
cmp
sbb
xor
lret
sub
push
xchg
jecxz
lret
sbb
pop
movsb
mov
jbe
pop
pop
jb
loope
mov
or
cmp
fcomi
out
xchg
lret
mov
pop
sub
cmp
fwait
arpl
sbb
jno
fs
push
stc
mov
mov
dec
pop
adc
ljmp
jne
scas
xor
xlat
or
inc
ja
mov
shll
inc
gs
or
push
add
mov
sub
mov
push
xchg
push
push
lds
cmc
jnp
insb
icebp
dec
pop
lods
add
jne
and
xchg
loopne
or
cmpsb
popl
in
lahf
outsb
je
push
cmp
adc
inc
cltd
pop
sbb
gs
xor
push
or
add
mov
popf
sahf
xor
lahf
mov
pop
xor
and
xor
adc
daa
pop
pop
fs
inc
iret
aad
out
int
xor
cmp
sub
cmp
cli
mov
dec
jo
pusha
cmc
das
jle
inc
test
pop
cmpsl
xchg
xchg
leave
lds
cmpsl
xor
xor
pop
mov
test
pop
mov
pop
jge
push
icebp
fldenv
lahf
add
xor
sub
xchg
lock
loopne
adc
sub
adc
dec
pop
mov
xchg
int
or
ficoml
enter
mov
subl
pop
mov
sub
aaa
jo
insl
fstl
mov
mov
add
mov
jo
jle
jo
fsubl
cld
xor
mov
cwtl
xchg
xor
mov
cmp
xchg
add
gs
pop
push
mov
mov
ret
imul
shll
mov
xchg
aaa
loope
gs
les
insb
mov
dec
ja
test
dec
add
adc
push
mov
mov
sub
sbb
sbb
lcall
fldcw
jge
dec
jge
test
repnz
pop
mov
pusha
adc
lods
addr16
ret
xchg
fstpt
sub
sbb
jnp
xchg
outsl
cs
loop
nop
stc
pop
sahf
cmp
pop
insl
inc
shl
xor
add
mov
mov
adc
sarb
jae
push
sti
jne
aad
push
xchg
and
into
popa
into
addr16
dec
je
or
insb
loop
inc
fistpl
testb
cmp
pop
stc
gs
mov
or
xchg
sbb
mov
scas
arpl
pusha
push
xorb
sarb
inc
push
flds
adc
add
insb
jb
add
ljmp
jno
sbb
adc
dec
daa
jmp
cmpsl
repnz
pop
loop
ds
mov
gs
jno
jb
jmp
pop
mov
std
and
out
jns
push
test
mov
dec
xor
push
and
xchg
test
lret
shlb
stc
addr16
dec
retw
xor
mov
jmp
gs
push
inc
aad
bound
xor
cmpsl
scas
xchg
movsb
cmc
imull
push
push
in
into
dec
ja
push
xorl
inc
cmpsb
cld
js
xor
pop
dec
mov
push
sbb
xchg
lea
xchg
mov
sub
mov
xor
js
lret
push
mov
daa
ljmp
movsb
aaa
xlat
repnz
adc
nop
jbe
mov
fistl
adc
or
mov
cmp
cld
mov
inc
ret
imul
mulb
mov
test
ret
mov
mov
sbb
enter
call
pop
fnstenv
inc
ret
pop
add
sbb
scas
movsl
test
pop
mov
cmp
int3
stos
icebp
add
jecxz
shll
test
xor
jle
push
addr16
sbb
stos
nop
xor
push
je
sbb
jmp
xor
sub
pop
or
jnp
shrb
pop
and
das
loope
adc
je
lret
jb
lock
mov
pop
mov
mov
stos
rorb
std
push
xchg
inc
call
popa
ret
ficoml
pop
mov
jmp
and
xchg
pop
lock
xor
xor
adc
pop
xor
adc
jae
sbb
push
push
mov
xor
ret
shl
mov
sbb
mov
fsubl
jp
insl
icebp
outsl
mov
ret
mov
insb
mov
xchg
or
cmp
aad
repz
insb
ds
ficoml
movsb
push
rcll
in
int
mov
ret
bound
pop
sub
pop
cmpsl
or
add
mov
fstps
pusha
jmp
pop
mov
orl
jnp
push
rcll
shlb
dec
add
push
xchg
in
insb
xchg
rcrl
popf
int
lods
mov
pop
xchg
lds
and
movsl
cli
pop
call
jecxz
and
pop
cmp
cmp
adc
addr16
push
std
lods
jno
pushf
mov
sbb
jle
repz
xor
inc
pop
jno
xor
jle
loope
daa
test
mov
jae
add
dec
subb
in
adc
push
cmc
dec
test
fs
test
inc
scas
jno
lret
mov
xchg
pop
inc
arpl
addr16
sub
inc
xlat
mov
xor
stc
loope
or
aad
jo
xchg
inc
dec
or
in
out
sahf
mov
pop
mov
xor
notl
inc
pusha
subl
inc
add
ret
sbb
push
lock
jne
std
inc
mov
movsl
pop
not
xchg
and
xlat
xor
negl
es
xchg
aaa
adc
leave
loopne
sub
pop
cmpl
pop
push
lds
add
jnp
shr
cmpsl
mov
nop
leave
mov
int3
stos
push
lret
push
ja
jg
xor
jmp
lock
pop
dec
dec
int
je
test
hlt
mov
sub
es
mov
std
mov
xchg
cmp
push
loopne
add
push
test
repz
jl
adc
je
dec
jmp
enter
jmp
adc
jnp
xchg
pop
adc
or
shr
enter
sti
cwtl
vmwrite
push
scas
xor
xchg
insl
outsb
or
movsl
sbb
or
pusha
push
pop
cmc
cwtl
mov
and
popf
pushf
and
add
scas
cmpsl
jp
jb
mov
insl
push
int3
or
pop
addl
cld
pop
pop
addl
or
sbb
ficompl
enter
dec
push
frstor
mov
pop
gs
imul
iret
push
jo
cmp
sbb
leave
aaa
mov
adc
aas
xor
pop
xor
jb
pop
sub
sbb
dec
adc
ljmp
mov
mov
push
fwait
adc
lret
add
jns
adc
stc
cmp
ret
ss
push
pushl
mov
pop
inc
mov
adc
mov
in
inc
xor
mov
push
ljmp
pop
bound
fildl
cli
jb
mov
mov
xor
scas
xor
jle
pushf
shll
ret
xchg
mov
inc
cmpsb
mov
or
lds
sub
and
sub
cmp
fs
add
pop
adc
and
inc
xchg
in
lret
leave
je
push
shll
aas
bnd
cmp
cmp
mov
mov
mov
scas
popf
fwait
cmp
movsb
jecxz
mov
cld
inc
scas
movsl
cmc
jne
mov
test
push
mov
enter
adc
sub
aaa
xor
mov
xor
dec
inc
movsl
adc
aad
testb
sarl
pop
xor
lods
push
mov
inc
xchg
add
int
mov
ss
repnz
xchg
adc
push
lcall
and
das
jno
inc
mov
pushf
fldt
push
dec
scas
sub
add
sbb
push
mov
cmp
mov
lahf
and
xchg
outsl
pop
sarl
sub
push
nop
lds
aad
adc
mov
insb
xor
pusha
inc
cmc
sbb
or
adc
test
mov
inc
pop
repnz
inc
add
push
ret
das
mov
pop
pop
stos
xchg
out
xchg
sbb
std
mov
div
mov
fcoml
xchg
sar
nop
push
jbe
scas
dec
rcl
xchg
mov
xorl
cld
cmp
or
inc
push
loop
and
push
mov
xor
fcoml
mov
hlt
outsb
in
clc
xchg
jl
loope
cmpsl
dec
ret
lods
mov
and
cltd
inc
adc
notl
cmp
test
cltd
stos
insb
push
inc
sub
adc
mov
aaa
lods
scas
rcl
cmp
mov
outsl
gs
and
add
mov
ret
xor
js
gs
pushf
mov
mov
push
add
pusha
inc
sub
mov
stos
dec
mov
add
aam
ljmp
mov
jge
mov
inc
and
int3
adc
ret
pushf
pushf
jl
aas
sar
movsl
adc
push
jg
push
xor
mov
fs
dec
and
mov
mov
or
cmpsb
dec
hlt
mov
scas
push
fcoml
in
mov
or
in
pop
sub
pushf
lret
lahf
sub
stos
dec
roll
adc
pop
in
cmpsb
adcb
in
fildl
jns
inc
mov
jno
push
arpl
fistpl
mov
push
imul
in
fstpt
popa
mov
jge
fstpl
icebp
call
xchg
xor
sub
mov
in
push
mov
es
mov
add
cld
mov
cltd
adc
mov
int3
inc
sbb
sub
fyl2xp1
rclb
mov
lods
and
push
scas
push
es
sub
les
mov
in
pop
test
aad
jle
cmp
xor
xchg
dec
out
and
push
mov
mov
and
and
jmp
int3
out
fs
jbe
adc
paddw
sbb
pop
mov
scas
pop
xchg
shlb
dec
dec
xor
enter
or
scas
jno
lret
push
aas
pushf
xor
shr
hlt
mov
or
inc
xorb
lods
mov
cmp
sub
fs
inc
pusha
sbb
fldenv
jle
ss
rolb
xor
shlb
movsl
scas
jno
pop
push
or
not
inc
sarl
fstps
pop
mov
and
loopne
jge
sbbl
adc
test
inc
pop
testl
popa
loope
lods
inc
imul
lea
loope
jp
or
sbb
fadds
cwtl
mov
cmpl
add
dec
or
bound
rcrl
rolb
ret
sbb
and
pusha
aaa
popa
or
in
and
xor
push
fidivl
out
ret
fmuls
jp
or
mov
or
shl
and
push
and
push
push
xor
shll
push
neg
inc
les
movl
mov
mov
imul
pop
imul
sbb
in
in
push
push
das
sub
repz
fadd
push
leave
dec
mov
and
fcmovnb
inc
pop
cwtl
rcrl
jge
lds
loopne
push
loopne
sbb
std
adc
popf
adc
stos
lahf
xor
cmpsb
mov
push
clc
dec
jle
add
and
roll
inc
icebp
pop
inc
cmp
cli
mov
push
nop
jnp,pn
sahf
sbb
pop
lds
push
xor
aad
cmpsl
imul
jp
andnps
sub
inc
mov
cmpb
cmc
ljmp
fs
ljmp
push
movsl
fs
xor
xchg
mov
and
nop
pushf
mov
test
and
xor
jne
jnp
lock
lret
cmp
pusha
sub
jg
mov
push
jecxz
repz
js
shlb
push
xchg
gs
sti
ret
cmp
or
ja
push
fdivrl
inc
popa
xchg
sub
leave
cmpsl
jno
mov
cmpl
fcoml
fisttps
ja
les
pushl
or
fwait
test
je
xchg
mov
mov
sbb
pop
jne
mov
fdivr
mov
fnstcw
inc
xor
push
jne
pop
mov
jae
cwtl
fidivs
mov
jae
les
icebp
mov
jmp
in
psraw
adc
imul
push
mov
jge
mov
or
mov
jecxz
xor
adc
inc
xchg
pop
pushf
mov
jnp
or
aas
xchg
in
or
fwait
lods
aam
jnp
and
scas
ret
je
dec
adc
je
in
dec
mov
pop
mov
jmp
mov
inc
pusha
add
dec
cwtl
fdivl
enter
pusha
jmp
jge
jecxz
fstpl
adc
lret
cmp
in
dec
xor
cs
rolb
pop
and
fmuls
test
and
pushf
test
dec
test
imul
inc
daa
or
inc
push
ret
cmpsl
sub
iret
fcomps
or
add
cmp
mov
mov
mov
pause
out
pop
push
push
add
mov
sub
repnz
push
push
cld
orb
mov
add
push
mov
mov
adc
addb
sahf
sbb
lds
adc
mov
sbbl
dec
jae
jg
ret
lahf
adc
lods
mov
ret
jns
sar
sub
lods
sub
mov
stos
push
enter
cmp
jge
stos
in
mov
insb
daa
or
push
dec
push
push
pop
pop
fnstenv
sub
pop
and
stos
xchg
test
xchg
inc
add
push
xor
lods
jp
sub
filds
push
test
xor
cmp
dec
call
and
loopne
ss
sub
arpl
xchg
sub
xchg
pop
xchg
fwait
add
subl
repnz
and
aad
aaa
stos
xchg
and
add
inc
fcomip
xchg
lods
das
and
push
movsl
adc
popf
sbb
arpl
push
lds
gs
or
xchg
je
jmp
inc
ljmp
imul
mov
shll
pusha
movsl
xor
jno
in
and
inc
inc
mov
pop
jmp
les
mov
add
push
adc
lret
and
or
in
or
loope
push
sub
or
movsb
push
aas
cltd
jg
adc
lret
sbb
and
nopl
cmp
jae
enter
pushf
add
nop
aas
imul
xchg
sub
adc
inc
jmp
dec
cwtl
mov
stos
aas
icebp
xor
adc
mov
iret
dec
push
pop
ljmp
outsl
mov
xchg
stos
sbb
arpl
popa
pop
mov
outsb
int
iret
fcoms
andl
pop
cmc
jo
jns
or
rcll
sub
pop
js
xchg
dec
mov
jbe
ret
cli
push
cld
dec
sbb
mov
mov
mov
pusha
ds
pop
lea
daa
dec
push
insl
push
test
rcrb
lock
push
sbb
xor
loop
jne
jbe
pop
mov
and
stc
nop
pop
subb
data16
inc
mov
test
bnd
xor
jbe
or
outsl
nop
stc
add
lret
mov
add
out
cmp
xchg
jb
and
lods
enter
mov
mov
movsl
xorb
dec
les
or
inc
mov
dec
xchg
or
mov
scas
imull
inc
pop
aaa
mov
jl
sbb
ror
adc
loope
add
aam
xor
fmull
repnz
push
push
int
inc
cmp
xchg
bound
mov
int
xor
leave
mov
int
dec
cmp
out
mov
jle
cld
pop
in
and
push
jl
push
lcall
cs
cmpsl
cmp
lea
pop
and
pop
test
lods
test
je
out
add
sarb
lret
inc
adc
pop
inc
rcr
xchg
push
loope
lods
inc
fldl
pop
or
data16
outsl
loop
cmp
arpl
scas
xor
cld
pop
and
lret
sub
adc
push
sbb
jecxz
xor
test
ror
and
fistl
in
cmpb
ret
clc
inc
das
or
jno
or
cmp
pop
mov
imul
pop
in
cmp
fimuls
lcall
fisttps
jmp
out
cmp
jno
lock
mov
insb
loopne
mov
in
ja
jle
es
and
add
cmpsl
hlt
imul
out
push
icebp
and
pushf
push
sbb
mov
adc
outsb
call
mov
arpl
out
lea
imul
enter
jmp
add
or
outsb
mov
pop
mov
push
iret
mov
dec
pop
lds
rcll
data16
mov
mov
scas
sub
sub
mov
sbb
ja
xchg
and
aad
nop
test
push
adc
insb
xor
aas
or
xchg
adc
rcr
push
pop
repnz
dec
dec
incb
and
dec
popa
push
pop
pop
add
sbb
or
lret
and
leave
out
ror
bound
or
jb
dec
rolb
jp
pop
shrb
adc
pop
adc
test
popa
mov
sbb
pop
mov
cltd
in
sti
lock
in
inc
jo
xor
movsl
xchg
xchg
adc
cmp
out
es
xlat
xor
stc
xchg
xor
add
movb
sbb
add
lret
popf
out
and
xchg
dec
ror
sub
push
pop
cwtl
ja
push
xor
pop
push
and
aas
pop
rcrb
lret
add
pop
jge
adc
mov
mov
adc
xor
ss
mov
adc
push
jg
ret
push
xchg
hlt
cwtl
push
or
jp
sub
es
jbe
lds
sub
and
jno
loope
mov
std
jp
mov
sub
enter
ja
push
or
movsl
pop
cmp
stc
cmp
jp
out
xlat
icebp
leave
sub
mov
call
pop
mov
pop
pop
mov
pop
cmp
mov
and
xor
fadds
and
adc
daa
ss
xchg
xor
imul
jne
icebp
push
outsl
xor
fdivrl
shr
loop
jle
xor
jmp
aad
xchg
adc
addr16
jbe
inc
fwait
cs
sbb
je
mov
xor
push
rolb
fwait
adc
jbe
pop
ret
xchg
pop
sbb
rcll
cmp
adc
sbb
pusha
jno
rcll
and
jo
adc
daa
mov
out
pop
cmc
mov
cmpsl
jmp
std
lea
jno
mov
or
cmp
in
sub
inc
xor
sub
or
enter
stc
int
inc
inc
cmp
push
xor
sti
xchg
mov
cmp
ljmp
jle
xchg
add
shrl
sar
pop
pop
or
les
pushf
adc
outsl
mov
pop
jge
xor
push
inc
popf
xlat
mov
mov
movsl
add
rolb
and
cmpsb
mov
sub
and
cmp
shl
mov
iret
daa
push
inc
pop
invd
push
push
jmp
xchg
and
sbb
rorb
xor
cmp
mov
icebp
cmpsl
fdivs
dec
pop
stc
mov
dec
lret
ja
test
mov
ret
pop
jle
adc
cli
pop
pop
dec
dec
pop
mov
insl
lods
sahf
out
mov
sbb
cld
push
and
mov
outsb
dec
inc
mov
pusha
adc
aad
jno
push
ret
movsl
jae
shlb
xchg
sbb
imul
mov
clc
push
out
paddd
and
std
cli
adc
dec
loopne
xchg
xorb
inc
mov
negl
or
dec
jb
push
arpl
mov
stos
xor
das
dec
mov
jmp
cmp
std
add
pop
out
push
xchg
out
ds
das
mov
dec
jmp
jnp
dec
test
add
mov
xchg
push
xchg
cmp
sbb
in
inc
loope
mov
sub
xor
dec
popa
ds
movsl
cmpsl
dec
sub
stos
subl
icebp
mov
push
test
std
mov
pop
push
gs
xor
mov
pushf
movsl
sti
sbb
roll
xor
xor
outsb
insl
inc
dec
inc
out
dec
sbb
test
xchg
pusha
xchg
sub
test
je
in
dec
sub
inc
jecxz
popf
pop
add
pusha
cli
jmp
and
sub
dec
jge
xchg
rorb
jp
pop
insl
cmp
add
sub
mov
sub
std
sbb
mov
xchg
xchg
loope
sub
mov
cwtl
dec
scas
push
xor
sub
pop
arpl
push
out
scas
lods
arpl
xor
xor
sub
or
and
int
popa
mov
leave
add
push
mov
push
sub
gs
fistps
sbb
pop
fs
push
or
xchg
popf
adc
rcrl
insl
mov
jb
xchg
repnz
jne
scas
mov
or
fistl
out
aas
test
jno
icebp
aaa
divl
loopne
stc
fwait
pop
mov
cmp
popa
sbb
lds
pop
movsl
aaa
and
or
xchg
jmp
xor
mov
xlat
jecxz
pop
jb
int
xchg
pop
add
sub
sbb
cs
pop
ss
mov
dec
xor
or
push
pop
sub
mulb
dec
and
rorl
rorl
mov
fs
jg
fisubrs
pusha
test
mov
jae
mov
stc
mov
popa
inc
test
xchg
pop
fwait
in
cmp
cmpsb
mov
lcall
cmp
pop
aaa
in
ret
cld
ds
mull
adcb
sub
pushl
cmp
mov
in
nop
lea
js
outsb
pop
int
jne
jo
jge
push
mov
das
shrl
mov
dec
adc
inc
mov
in
jae
stos
int3
outsl
jnp
mov
daa
dec
jo
push
cmpsl
or
jl
sbb
lods
in
ds
and
pushf
mov
icebp
push
je
addr16
cmp
xchg
aaa
push
out
dec
dec
xor
lret
imulb
popa
mov
inc
add
pop
adc
ja
arpl
jle
pop
jp
adc
ret
adc
cmpsb
inc
jo
sbb
into
xchg
mov
jg
sti
or
lcall
stos
lea
jnp
inc
push
sbb
outsl
pop
jl
gs
movsl
inc
inc
aas
arpl
adc
push
adc
test
cmp
punpckhbw
cmp
jp
jb
popf
jne
push
or
jns
xor
mov
xchg
jmp
sub
push
pop
rcl
dec
mov
cmp
cli
xorl
popf
mov
cmp
dec
popa
out
and
mov
pop
and
mov
pop
scas
das
pop
call
pop
mov
and
aam
sahf
fxch
jmp
or
dec
jnp
loope
ljmp
lret
xor
add
outsl
aam
repnz
test
aad
sbb
leave
mov
pop
lcall
xorl
clc
cld
cmp
push
gs
push
add
repnz
adc
cs
adc
aad
or
lahf
and
sub
inc
gs
lods
lods
jbe
push
mov
cmp
hlt
fsubl
sbb
xor
gs
ss
stos
rcl
jge
sbb
data16
inc
loope
inc
jle
imul
bound
sbb
xchg
pop
repz
dec
sub
hlt
fbld
add
jl
dec
imul
lcall
cmp
jnp
fucomi
pop
cltd
inc
push
and
push
cmpl
arpl
push
adc
cmp
fbstp
mov
cmp
mov
mov
jne
xor
jg
xchg
mov
xor
ret
cld
mov
sbb
mov
mov
daa
xchg
dec
or
cmpsb
sahf
sti
xchg
fisubs
ss
jns
dec
fistpl
in
scas
pop
enter
pop
mov
aas
pop
dec
outsl
fsubrs
in
mov
adc
frstor
add
fsubrs
adc
sbb
inc
pop
jle
dec
pusha
sti
mov
sbb
jnp
sbb
lock
sub
lcall
inc
push
adc
fcompl
pushf
jo
pop
cmpb
xchg
inc
push
and
std
xchg
push
out
scas
xor
push
mov
dec
fmul
pop
or
gs
aam
pushf
aad
sbb
lock
jo
sub
js
xchg
outsl
sub
mov
fs
adc
inc
pmullw
lcall
jno
jae
xchg
sbb
shll
scas
enter
das
ja
sbbl
or
xchg
cmp
out
inc
lds
dec
cli
lret
sbb
sbb
jl
cwtl
xchg
xorl
mov
jbe
add
adc
leave
test
rclb
in
scas
sub
aas
mov
lds
mov
lret
bound
aam
pop
xor
mov
mov
jl
mov
jns
dec
jge
dec
sub
push
lock
push
test
xchg
sub
xchg
cld
mov
aad
ret
xor
testl
pop
addr16
repz
mov
xchg
dec
mov
mov
inc
xchg
out
mov
enter
sar
lea
lods
jl
leave
shlb
sahf
sbb
pop
add
jle
mov
lods
stc
inc
aas
out
in
jb
xor
outsb
fnstsw
jecxz
inc
outsl
ss
lret
aad
mov
pop
repz
push
gs
push
leave
jecxz
mov
xlat
daa
inc
std
nop
bound
movsl
loope
inc
cld
aam
es
fnsave
mov
dec
or
push
pop
push
xorb
xchg
push
mov
jbe
push
std
movsb
sbb
cmovns
mov
add
popa
dec
out
aam
fdivrs
std
xchg
aam
or
shll
sti
adc
xchg
lret
mov
xchg
lahf
or
mov
pop
cmp
popa
pop
pushf
sbb
mov
iret
inc
adc
ja
adc
ja
sub
xor
inc
movsl
movsb
or
pop
subl
flds
mov
das
pop
mov
cwtl
mov
gs
rcll
sub
adc
pop
pop
gs
addb
push
insb
loope
and
bound
je
arpl
clc
dec
push
out
out
xchg
les
pop
sbb
push
mov
orl
rorb
xor
es
pop
insl
jge
cmp
and
adc
das
cli
adc
xorb
add
adc
lods
out
lds
loope
cmc
in
pop
popa
bound
xor
cwtl
cmp
add
lret
aaa
shl
inc
push
ds
xor
inc
test
sbb
fnstcw
inc
mov
or
dec
sar
mov
mov
std
push
inc
xor
jl
pop
mov
and
test
add
lret
ret
loop
cli
in
cmpsl
mov
add
int
jb
test
dec
js
out
int3
and
lock
or
pop
mov
outsb
iret
arpl
sbb
mov
pusha
cmpsb
mov
mov
hlt
out
addr16
add
mov
add
add
mov
shll
add
or
stos
mov
stos
sbb
loopne
call
mov
lret
xor
fs
mov
jne
mov
gs
scas
sub
orl
and
sbb
push
test
in
cmc
or
fdivrs
push
lods
mov
mov
mov
mov
pop
pop
fsub
stos
or
stos
hlt
push
and
xor
dec
andl
sahf
lcall
cli
fidivs
movsl
in
cmp
add
sbb
xchg
iret
cmp
mov
jo
aaa
xchg
lea
xor
add
fimull
jmp
scas
cmp
sbb
mov
fucomi
pop
push
push
or
jmp
mov
jne
add
or
mov
jge
jge
out
push
sbb
sub
out
xor
dec
pop
mov
icebp
repz
mov
xchg
jo
pushf
mov
repnz
ja
jge
mov
push
lahf
pushf
lods
mov
push
inc
xchg
push
cmp
pop
aad
es
loope
sbb
adcb
push
mov
mov
push
jnp
mov
adc
and
add
in
pop
cmp
in
push
xor
test
mov
inc
mov
xchg
ja
jb
nopl
cmp
into
cmp
dec
or
lods
add
add
cmpsl
add
outsl
dec
xor
das
insb
push
push
mov
inc
rolb
push
cli
or
jmp
sahf
fldenv
sbb
fldt
int3
pop
cwtl
cmp
test
popf
lcall
xor
jecxz
fisttpll
jmp
enter
mov
arpl
mov
inc
dec
mov
push
jecxz
pop
pop
lea
mov
or
dec
aaa
in
pop
push
addr16
or
or
loope
or
fists
scas
lret
jge
sti
add
rolb
pop
sub
and
jbe
jl
and
adc
hlt
and
pop
leave
add
add
call
xchg
cs
mov
andl
xlat
push
push
cmp
test
ret
imulb
into
push
in
ror
push
into
ud0
sarl
sbbl
xor
push
push
push
lret
xchg
xchg
dec
in
aad
stc
outsl
add
and
rcrl
sbbl
insl
pop
mov
loop
pop
imul
xchg
jae
and
adc
push
out
sub
cmp
lock
mov
clc
xorl
adc
cwtl
push
inc
cmp
dec
mov
mov
sbb
add
xchg
lret
xchg
roll
mov
clc
jnp
push
sbb
shl
xor
add
dec
push
inc
stos
jmp
mov
cmp
stos
pop
cmp
lock
popa
fucomp
rolb
scas
push
mov
mov
sub
rcrb
mov
cmp
sub
dec
outsb
gs
cli
hlt
test
mov
pop
popa
fistpl
into
lds
gs
hlt
xor
cmp
dec
xor
mov
lcall
lock
jg
jne
ret
inc
jno
adc
xor
sbb
push
outsl
arpl
add
pusha
int
loop
stos
inc
sahf
push
insl
push
cmpsb
mov
scas
xchg
pop
aam
divb
or
push
scas
scas
sbb
mov
and
lahf
es
jmp
addr16
mov
rorl
adc
sar
enter
jns
not
jecxz
cmp
popa
sar
lock
mov
lcall
pushf
movsb
xchg
call
jne
insb
mov
mov
xchg
scas
stc
mov
push
movsl
sub
das
push
xor
add
mov
sbb
mov
aad
cwtl
and
repz
mov
iret
movsb
mov
pop
fldl
shrl
jo
imul
dec
inc
cmp
push
push
lea
fadds
dec
xor
push
sub
mov
jmp
aaa
mov
je
sub
jge
xor
add
dec
aam
or
orl
adc
jbe
ret
mov
push
add
and
pop
mov
movsb
mov
pop
pop
rorb
add
or
mov
pop
cmp
rorb
fwait
jae
pextrw
mov
or
add
dec
xor
scas
rorl
cld
sahf
push
xchg
je
mov
pop
gs
mov
add
scas
add
movsl
push
daa
subb
es
ret
es
and
xor
test
das
arpl
sti
push
arpl
jnp
mov
dec
das
sbb
mov
outsl
data16
xor
insl
xchg
mov
icebp
fbstp
aas
mov
cmpsb
jb
xor
adc
mov
stc
or
inc
loope
out
xor
sarb
cmpsb
pop
dec
in
aam
dec
jmp
or
jl
jae
xchg
cmpsb
dec
push
insb
jle
scas
mov
pop
jbe
pop
dec
and
scas
lret
mov
jge
jno
fsubrl
lret
outsl
popa
dec
push
imul
jp
stos
and
sub
leave
pmaxsw
jg
sbbb
or
ret
jg
lahf
mov
movsl
mov
and
fadds
sbb
imulb
stc
scas
mov
pop
stc
negb
je
inc
jp
out
repnz
or
gs
or
dec
and
sub
lret
bound
cmp
xchg
jae
mov
lret
call
inc
adc
cmp
js
leave
sti
in
mov
rcl
ret
dec
movsl
aad
rorl
imul
pusha
sahf
das
fwait
inc
pop
jns
sbb
dec
mov
push
sub
popf
jmp
push
repnz
pop
jo
movsl
push
out
inc
jne
sbbl
hlt
loopne
pop
push
das
shl
enter
pop
push
in
mov
mov
add
push
mov
aaa
add
pop
mov
pop
ja
xor
std
adc
adc
jge
dec
sbb
jns
dec
inc
hlt
stos
adc
mov
insb
aad
xor
xor
dec
sbb
ret
jg
enter
and
adcl
adc
movl
lock
flds
pop
mov
lahf
lds
jp
cmc
pop
pushf
test
cmpsl
daa
andl
inc
add
and
mov
mov
dec
mov
je
jl
shrb
lcall
pop
mov
sbb
inc
leave
in
loop
repz
sti
testl
adcb
xchg
mov
test
ja
xor
in
jmp
sub
lret
fildll
inc
adc
int
xor
push
es
adc
outsl
push
add
mov
xchg
ja
cmpsl
rol
addl
inc
lds
mov
xchg
test
xchg
push
ljmp
jle
es
and
mov
pop
aas
ljmp
mov
jge
arpl
xchg
or
ret
mov
sbb
ljmp
leave
pop
ss
or
pop
scas
int
push
outsb
and
in
inc
or
inc
insb
xor
inc
xchg
push
jg
gs
mov
and
call
addl
int3
pop
mov
jp
arpl
jg
cmp
loope
inc
push
test
popa
arpl
hlt
inc
lcall
push
into
std
xchg
xor
sub
iret
sbb
lock
repz
add
push
inc
lods
fcom
lods
push
int3
mov
fwait
and
es
mov
cld
push
mov
mov
scas
test
pusha
imul
sub
sub
cmpsl
jae
mov
mov
sub
filds
icebp
arpl
out
lcall
inc
scas
mov
inc
inc
gs
dec
mov
add
mov
add
jo
aaa
les
add
pop
push
es
sub
cmpsl
sub
iret
and
lods
lods
mov
mov
xor
xchg
data16
xor
hlt
hlt
sub
bound
sub
cwtl
mov
ja
sarl
mov
jecxz
and
loopne
cli
in
bound
xchg
in
mov
lcall
test
aad
fstl
js
test
xor
jno
xor
push
or
cmpsb
and
lods
jbe
iret
and
sub
push
xchg
iret
pop
push
sbb
test
clc
aaa
xor
pop
mov
fsub
outsb
pop
stc
dec
mov
pop
ja
popa
pop
dec
shll
out
das
je,pt
movsl
push
xor
dec
jl
gs
push
pop
pop
dec
xlat
mov
arpl
pop
xor
test
cli
popa
mov
movsb
pop
fcoml
push
jnp
es
js
ret
mov
sub
push
mov
cmpsl
roll
mov
test
mov
push
stc
jg
fwait
push
fwait
daa
inc
sub
add
into
jle
popa
mov
repnz
jle
lea
or
add
mov
lret
pxor
pusha
data16
jns
jl
add
xchg
pushf
lcall
test
enter
lods
jge
scas
add
mov
jnp
dec
loopne
inc
js,pt
push
adc
sub
dec
sahf
sbb
cmp
daa
fwait
lods
push
ljmp
xor
jge
push
push
mov
js
jle
loopne
scas
xor
cmpsl
addr16
rcll
test
xor
fldt
jb
adc
pop
in
lods
popa
leave
sub
rcrb
or
jno
xor
cmp
mov
sbb
inc
inc
mov
sub
das
iret
push
pop
insl
xor
loopne
add
lahf
shlb
or
out
mov
cmpl
cmp
sub
xchg
in
bound
add
addb
cli
je
xor
out
pusha
scas
fstpt
xor
addr16
cld
push
xor
inc
cwtl
jmp
test
aam
sbb
sbb
inc
cmc
pop
mov
aad
mov
fldcw
popf
sub
sub
lret
fildl
xor
data16
leave
fisttpll
rcrb
adc
cmp
jle
gs
jl
pop
aam
sbb
int
cmp
jae
or
lret
lods
sbbl
add
lahf
repz
imull
stos
std
xor
jmp
lcall
cmp
ljmp
hlt
mov
testl
jnp
fadds
loop
and
adcl
popf
cmpsb
sbb
nop
jo
dec
notl
xor
dec
pop
mov
xor
mov
push
xchg
add
jl
outsb
add
or
add
jae
cmp
add
pusha
lods
pop
insl
push
adc
imul
in
mov
inc
popf
or
xor
mov
stos
aad
or
addr16
cmp
shlb
mov
pop
inc
xchg
ffreep
loopne
xchg
push
sti
fistps
dec
jmp
mov
cmp
mov
ffreep
xchg
xor
insb
shrb
mov
add
in
cltd
mov
xchg
fdivl
test
ret
jne
shlb
mov
in
jb
test
xchg
hlt
nop
push
pushl
push
dec
inc
and
test
popfw
outsb
inc
xchg
ja
cmp
adc
arpl
aaa
mov
cs
push
sub
push
stos
lds
aaa
mov
test
mov
testb
adc
push
popf
xor
add
or
pop
inc
mov
ljmp
mov
xchg
ret
popf
xchg
sbb
adc
fimull
or
pop
mov
test
leave
ret
test
xor
dec
mov
cmp
jecxz
sbb
xchg
dec
add
pop
pop
test
xchg
arpl
sub
pop
push
pop
xor
cmpsl
and
ss
add
mov
and
jle
cs
sbb
dec
loope
xor
pop
test
dec
adc
aaa
fs
fisubrl
aad
dec
pop
xor
mov
insb
mov
mov
dec
cmp
lahf
push
add
and
int3
mov
scas
rcll
sub
or
xor
je
int
mov
sti
dec
test
sbb
and
xchg
sub
push
outsl
insb
pop
xchg
pop
sti
inc
hlt
push
pop
mov
pushf
test
mov
inc
sub
test
or
fsubrl
out
inc
int
fdivrl
mov
loop
das
pop
push
mov
mov
cmpb
sub
gs
jo
ss
sub
xchg
mov
inc
pusha
pop
or
nop
test
xchg
push
or
setg
pop
pop
imul
jmp
sbb
loop
movsl
pop
sti
dec
sub
fisubrs
or
and
sub
or
imul
mov
xchg
jo
sbb
fiadds
add
mov
and
es
out
movsl
movsl
add
ror
insl
call
add
insl
xchg
ss
aaa
jne
leave
xchg
sar
inc
xchg
lds
xor
repz
push
addr16
cmc
jo
nop
ss
add
sbb
inc
and
xchg
and
and
mov
lock
test
cmp
gs
mov
shll
mov
jmp
mov
notb
jmp
ja
jb
mov
sbb
inc
or
add
and
ret
xchg
shll
push
sbb
pop
push
xor
or
xchg
add
popf
push
mov
cs
xor
loope
shl
fwait
add
into
mov
cltd
into
dec
lds
mov
fldenv
in
adc
mov
popa
jne
lods
and
or
add
cmpl
push
mov
mov
stos
mov
pop
push
mov
lahf
mov
add
adc
mov
inc
lds
pop
add
push
sub
arpl
adc
sbb
xchg
in
cwtl
gs
push
mov
loope
push
add
test
pop
sbb
cmpsb
popf
aaa
std
lock
cltd
push
pusha
sarb
sbb
popf
xor
lods
loope
sbb
test
or
sbb
test
out
and
push
mov
xor
int
pop
addr16
push
in
adc
mov
xor
addr16
inc
adc
inc
lahf
xor
push
fcos
adc
add
scas
cmpsl
xchg
sub
stos
mov
mov
and
test
mov
jo
jnp
sahf
das
ja
mov
fadds
js
data16
push
xor
fwait
cmpsl
ret
cmp
dec
xor
adc
clc
das
shrb
test
shlb
mov
cmpsl
xchg
movsb
in
dec
mov
leave
mov
push
gs
lods
xchg
stos
push
jge
xor
hlt
nop
hlt
rcrb
pcmpeqw
pushf
test
dec
mov
pop
cmpsl
pop
mov
notl
mov
shlb
mov
aaa
ds
dec
push
xchg
pop
inc
in
gs
or
add
adc
pop
inc
fisubrs
popa
sbb
dec
sbb
and
xor
aaa
cmp
pop
out
cmp
rorb
outsl
pop
fs
cmpsb
add
xchg
sub
and
sbb
sub
cld
jl
maxps
les
push
xchg
inc
in
jae
push
mov
dec
mov
stc
sbb
in
bound
je
sub
cmp
mov
inc
xchg
or
inc
inc
out
cmp
ret
fiaddl
dec
dec
adc
add
jnp
cltd
lret
orl
fwait
repz
enter
das
push
sub
pop
cltd
push
push
rorl
sbb
jae
lcall
and
mov
sbb
mov
or
test
sub
lea
mov
lds
aas
adc
pop
push
jno
add
movsl
add
push
pop
into
sub
xor
sbb
in
lods
push
or
mov
cmpsb
mov
mov
fucomi
dec
sbb
nop
mov
dec
movsb
jecxz
jg
fcmovbe
mov
shrl
cmp
xchg
cmp
pop
dec
pusha
lret
imul
gs
mov
sbb
loop
test
lret
imul
pop
test
xor
sub
mov
jno
lods
xor
out
hlt
xchg
idiv
xor
sub
ds
pop
popa
scas
out
adc
subl
fistl
dec
es
flds
push
shll
shll
ljmp
xor
lea
lret
mov
fwait
inc
repnz
adc
adcl
ja
push
ss
xor
je
je
sbb
iret
fs
movsl
xor
adc
mov
mov
test
lret
pop
lea
test
cmp
jg
sub
rcrb
fnstenv
arpl
jb
mov
push
pop
sbb
adc
sbb
test
pop
stos
sbb
inc
xchg
test
xor
scas
sub
add
clc
daa
cmp
cmc
mov
mov
adc
daa
stos
cmc
movsb
mov
decl
sub
inc
rol
pop
mov
or
rcrb
sti
sbb
jae
insb
filds
pop
and
loop
add
cmpsl
jo
pop
mov
fnstsw
movsl
sbb
pop
xchg
aam
mov
adc
pusha
test
push
add
addr16
ljmp
mov
pop
xor
sbb
es
test
out
out
fbstp
adc
sub
lock
pop
push
cmc
test
inc
repz
orb
cltd
sbb
xorb
or
mov
pushf
out
xchg
push
jae
dec
test
cmp
adc
sbb
movzwl
stos
scas
icebp
movsb
in
fisubs
jo
fsubrs
sbb
je
shll
insb
ja
xchg
insl
xchg
movsl
xor
pop
cli
adc
and
adc
add
adc
adc
and
cmp
arpl
jno
pop
sub
and
popf
pushaw
adc
dec
jne
pop
inc
addr16
push
lds
sbb
outsl
pusha
push
xchg
add
cmc
aaa
fstpl
xor
fisttpll
icebp
push
jne
cmp
out
or
push
sahf
or
lds
xchg
in
mov
es
mov
sahf
mov
std
jmp
aas
sub
mov
pop
inc
jno
subb
fwait
or
ret
jmp
mov
or
mov
and
cmpsl
or
mov
inc
add
mov
int3
icebp
loop
sub
mov
push
fnstenv
mov
xchg
flds
idivl
cmp
lcall
lret
mov
mov
sbb
or
std
fldl
xchg
and
or
cmp
push
mov
pop
sbb
popa
fs
test
pop
sbb
sbb
mov
outsb
adc
shrl
xchg
outsb
setp
mov
stos
enter
cmpsl
mov
mov
lahf
mov
lahf
rorl
lahf
in
mov
lahf
out
mov
lahf
jmp
mov
cmc
mov
mov
icebp
mov
lahf
repz
lahf
lret
mov
lahf
fimuls
out
into
jb
jo
popf
pushf
jbe
inc
mov
in
fsubl
push
imul
sub
and
xor
mov
leave
and
xor
push
test
and
leave
xor
icebp
xor
jecxz
fnstenv
or
xor
lea
add
mov
shlb
mov
mov
stos
insl
in
aas
inc
data16
lcall
sub
pop
test
add
mov
cmp
xorb
out
fs
xorb
jmp
cmpsb
push
mov
xor
cmp
arpl
xchg
daa
xor
stos
test
sub
insl
mov
cwtl
jle
cli
push
bound
outsb
pop
jg
movsl
imul
mov
sahf
mov
pop
jle
xor
cmp
out
out
mov
xor
dec
pop
lods
pop
std
jb
out
popa
mov
call
jmp
gs
xor
stos
or
aaa
mov
syscall
mov
sti
gs
inc
dec
sbb
mov
and
ret
jp
imul
pop
mov
adc
pop
jp
data16
inc
sbb
and
nop
arpl
cli
pop
cs
mov
push
push
mov
jno
jmp
inc
test
rolb
cmp
or
fiadds
les
test
jne
mov
dec
mov
ficomps
or
pop
insb
cmc
pushf
cmp
cmp
inc
lods
mov
out
addb
inc
xor
outsl
out
cmp
ljmp
mov
mov
or
lock
bound
cld
lds
imul
imul
mov
hlt
adc
pop
mov
xchg
inc
cmpsb
and
xor
adcl
pop
sahf
fadds
push
xor
sbb
and
push
adc
inc
movzwl
adc
sahf
in
scas
loopne
adc
cmp
and
nop
std
sbb
mov
cltd
sub
dec
xchg
in
xchg
adc
out
or
iret
enter
ja
test
mov
cltd
or
mov
leave
mov
fwait
jns
mov
in
and
dec
mov
bound
ret
cmc
sbb
jne
cli
mov
push
int
sbb
fnsave
dec
cs
arpl
out
stos
cmp
mov
pusha
rcll
mov
jmp
adc
xchg
sbb
scas
or
and
cmp
sub
and
out
mov
cmpsb
xchg
pop
cmp
xor
test
aam
sub
pop
shll
ret
inc
xchg
jmp
pop
shll
mov
mov
inc
lods
ss
mov
das
mov
add
xchg
pop
add
mov
and
mov
and
add
out
or
add
pusha
test
std
mov
xchg
sub
fcoms
in
out
into
mov
mov
mov
and
lret
pop
xchg
or
pop
nop
or
out
xchg
dec
sub
cmpsb
fwait
lock
cmc
out
insl
repz
faddl
icebp
jecxz
shl
sarl
pop
aam
dec
out
scas
test
repz
daa
sbb
roll
in
adc
jne
fsts
jmp
imul
cltd
shl
loopne
daa
sbb
cmp
ja
inc
mov
shld
outsl
or
adc
mov
into
das
xorl
jmp
jmp
add
adc
sub
out
nop
sahf
mov
pop
roll
pushf
cmpsb
movsl
mov
mov
inc
aam
cmp
cmpsb
jns
div
jb
sub
aas
inc
push
mov
pop
mov
sbb
ds
cmp
sbb
clc
jle
sbb
insl
or
jle
lcall
pop
mov
pusha
dec
adc
cli
push
fisubrs
pop
sbb
mov
cmpsb
sub
fwait
adc
adc
lds
add
add
inc
pop
jg
dec
dec
cmp
jg
movsb
cmpsb
out
loopne
lods
xorb
out
mov
xlat
lods
in
pushf
pop
push
shlb
and
shrl
movsl
lds
int3
mov
sub
fs
dec
adc
xor
lret
jb
scas
stos
andl
lds
scas
xor
int3
movsb
imul
repz
into
cld
fwait
imul
jl
mov
inc
or
dec
stc
addr16
mov
ret
rorb
lock
popf
add
shll
fs
adc
inc
sbb
fstps
or
or
xor
xchg
imul
mov
pop
lea
adc
jno
jae
repnz
iret
ljmp
test
sub
push
push
ret
mov
or
jecxz
lea
sti
jae
sar
lods
out
shlb
mov
mov
mov
sub
adc
pop
sub
loopne
mov
movsb
sub
mov
or
pushf
scas
sub
in
sub
aaa
ret
cmp
sbb
sti
push
push
mov
xor
stos
ss
sbb
inc
push
pop
mov
add
mov
pop
push
das
pop
ljmp
mov
pop
lds
or
aad
sbb
pop
shll
lcall
test
inc
out
sub
xor
cmp
and
xor
pop
or
pop
jns
adc
jmp
mov
mov
sbbb
pop
pop
push
mov
les
sarl
mov
adc
cs
mov
loop
jle
sub
xchg
jl
cmp
mov
xlat
jp
andb
xchg
xsave
je
mov
mov
ret
mov
or
and
inc
jne
hlt
mov
and
push
mov
adc
addr16
sbb
and
pop
mov
xor
fs
adc
out
mov
cs
add
adc
test
fildl
cmpsb
jecxz
sub
add
aaa
xor
repz
push
fisubs
into
nop
xchg
cmp
dec
xor
add
jl
or
mov
dec
or
and
stos
xor
jo
pop
testb
push
lds
jmp
adc
stos
add
mov
mov
mov
clc
push
inc
dec
xor
jne
je
xor
sub
or
push
sub
and
scas
cs
lods
jmp
inc
test
popa
xor
ret
push
sub
pop
pop
push
outsb
add
jno
push
cli
xor
pop
cmp
jne
jo
mov
lret
cmp
jb
stc
arpl
xor
aas
push
fmuls
adc
clc
arpl
pop
int3
pop
push
mov
cltd
xor
xchg
xor
data16
popaw
sub
clc
pop
pop
mov
dec
mov
and
or
push
jl
pop
je
push
cmp
into
shrb
scas
icebp
jo
dec
adc
jae
repz
and
or
sarl
pop
cld
mov
pop
testl
lods
in
cmp
mov
pop
xchg
xchg
sub
jns
lret
dec
outsb
or
xchg
fs
inc
mov
int
sbb
shl
push
hlt
stos
cmp
test
inc
jp
inc
xchg
add
mov
xchg
mov
inc
mov
mov
aas
cmpsb
cmc
fcomps
pop
lahf
push
hlt
enter
dec
clc
lret
test
mov
pop
aaa
sahf
and
pop
mov
dec
push
cmpsl
dec
enter
std
stos
cmp
jge
sbb
insl
xorb
sbb
ss
aaa
mov
xor
js
icebp
add
rcrw
adc
mov
shrb
enter
dec
cwtl
pop
lods
xor
pop
popf
and
and
xor
jo
nop
ret
xchg
cmp
add
mov
fstpl
lds
adc
popf
jnp
arpl
cmp
fidivrs
cmp
xor
inc
push
in
jns
sti
push
mov
loope
mov
out
adcl
lret
mov
movsb
pop
ret
in
call
cmp
data16
xor
dec
aam
mov
and
sbb
call
rclb
cs
adc
mov
call
fcomps
rolb
sbb
lds
add
cmp
or
xor
mov
cwtl
lods
pop
punpckhdq
lock
inc
inc
lret
aas
xor
nop
pop
popf
dec
xor
test
pop
faddp
mov
out
fdivrs
jno
jno
loopne
xor
pop
or
mov
jle
sahf
mov
repnz
js
pop
in
pushf
pop
daa
sbb
inc
ret
pop
es
jns
pop
mov
mov
pop
rcr
fs
dec
enter
sbb
adc
adc
cli
mov
rcrb
mov
jns
lmsw
push
rclb
cmp
mov
sbb
cmp
test
pop
pop
stos
sub
gs
aaa
pop
pop
pop
sub
cmp
les
das
push
xor
stos
and
repz
mov
test
add
mov
daa
push
icebp
mov
fcomi
dec
jl
inc
testl
lea
fistpll
or
push
and
ljmp
xchg
cmp
sbb
sbb
cli
dec
hlt
sbb
sub
nop
mov
cmpsl
cmpsl
aad
dec
pop
add
notb
pop
mov
in
test
sbb
sti
daa
inc
outsb
and
jg
xchg
jae
push
jle
pop
mov
xchg
cmp
loop
in
rolb
int
push
negb
std
mov
pop
in
loopne
addr16
mov
mov
push
dec
push
add
pop
push
sti
jmp
jecxz
test
mov
test
cmpsb
dec
sbb
es
xchg
push
gs
mov
push
enter
xor
xlat
das
lcall
sub
bound
popf
cmp
into
shlb
inc
push
rclb
subb
je
cltd
lret
jae
pop
xor
sub
test
adc
xorb
and
rclb
mov
clc
fstpt
inc
xchg
mov
mov
or
push
jbe
popf
add
dec
pop
adc
adc
dec
int
popa
xchg
fsts
or
mov
lret
pop
fistps
pop
orl
idivl
sbb
stos
adc
cmp
in
mov
xchg
jno
adcl
push
xor
xchg
pop
jl
ja
pop
sbb
and
das
lods
fidivs
test
cmp
iret
inc
inc
add
dec
jo
inc
or
in
sahf
xchg
das
xchg
jl
lods
dec
inc
fwait
nop
push
sti
int
pusha
icebp
mov
jb
pop
shlb
movsl
nop
stc
add
outsl
push
in
cmpsl
push
ficomps
rolb
lret
mov
jecxz
sti
pushf
pop
mov
call
data16
xchg
mov
sbbb
push
mov
lods
push
sbb
and
insb
push
das
push
lods
addr16
mov
push
jae
push
ss
lds
popf
adc
inc
cmp
aad
fimull
out
dec
lea
repnz
cmpsb
iret
mov
inc
les
shll
int
jecxz
xchg
or
mov
dec
enter
sbb
lds
ds
fsubp
cmp
pushl
rolb
xor
jae
cmpsl
fwait
push
call
jae
sti
mov
and
sbb
and
and
sub
inc
arpl
leave
push
push
jle
push
bswap
push
inc
adc
dec
jp
add
inc
enter
daa
mov
gs
push
fdivr
xor
mov
lds
xor
mov
and
popa
push
mov
outsl
inc
and
dec
pop
inc
sbb
add
rclb
inc
jl
insl
add
out
dec
movl
nop
jbe
sub
add
adc
mov
movsb
or
xlat
cmp
xchg
insl
xor
bound
lea
aam
les
push
or
push
shlb
shlb
pslld
repz
dec
pop
mull
cld
push
dec
test
mov
mov
in
and
push
cli
mov
aam
or
push
push
gs
addb
lcall
mov
int
lret
fmuls
fcoml
sbb
out
insb
xchg
mov
mull
adc
call
dec
pop
mov
xchg
lock
fsubl
sbb
push
xchg
xchg
mov
iret
dec
inc
inc
mov
or
insb
add
mov
push
out
int3
inc
mov
jge
inc
xchg
int3
mov
or
push
push
xor
jge
sbb
mov
rolb
jle
out
xchg
jnp
pop
sub
xor
mov
aam
cmpsl
out
jne
lret
xor
inc
pop
in
push
xlat
push
and
mov
mov
xor
das
ss
andb
jae
mov
xor
pop
jge
ret
xor
pop
orb
mov
push
test
fildll
mov
mov
sub
out
push
dec
add
sbb
and
loope
jmp
push
adc
imul
aam
sbb
mov
cmc
pop
xor
mov
insl
add
bound
jmp
jae
adc
lea
adcl
cli
sbbw
sub
fs
mov
loop
ret
mov
sbb
jnp
negl
add
into
mov
mov
adc
mov
mov
xchg
insl
and
mov
xor
shr
std
dec
add
dec
fcoms
dec
fimull
add
lahf
mov
pop
jns
cmp
inc
loope
pop
mov
cmp
mov
mov
lods
xor
mov
xor
enter
jle
pop
lds
mov
sarb
lods
adc
jle
dec
mov
mov
pop
popa
cmc
xor
sub
test
xchg
pop
aas
pop
xor
ljmp
dec
jo
es
mov
xor
add
dec
out
pop
cmp
add
xchg
cmp
push
sub
scas
cmpsl
fwait
mov
xchg
and
cmp
or
xor
cwtl
jg
sub
stos
test
mov
je
mov
fdivl
xlat
mov
sub
pushf
add
mov
xchg
push
das
subl
and
ja
mov
das
out
bound
shlb
push
sti
add
xor
xorb
add
fcomi
mov
ficoml
mov
mul
inc
psrlw
sub
mov
xor
push
mov
sub
jne
dec
stc
mov
outsl
enter
mov
sbb
jl
add
mov
mov
enter
mov
push
and
iret
sub
addl
push
dec
xor
mov
aam
dec
sub
or
cli
daa
mov
xlat
scas
pop
adc
xor
mov
fst
inc
les
rol
adcb
push
mov
addr16
repz
call
push
stc
or
jp
sbb
and
xchg
jge
push
push
sbb
ret
dec
pop
mov
gs
mov
gs
bound
repnz
mov
and
sub
lret
out
test
or
lret
jo
int3
xchg
cmpb
sar
aaa
push
cmp
and
fcoms
test
sub
inc
addl
test
call
mov
ss
inc
or
and
adcl
gs
sub
clc
out
dec
xor
xchg
or
sbb
push
xor
loope
mov
mov
in
xchg
and
pop
fwait
xchg
pop
ret
pop
ljmp
cmpsl
mov
sub
jecxz
mov
les
arpl
movsl
lahf
les
sbb
cmpsb
insb
lret
inc
sub
out
push
pop
fsubrl
or
lods
movsl
jae
mov
sahf
push
xchg
sub
mov
push
mov
and
or
xlat
repnz
cmp
addr16
pop
lods
push
dec
dec
into
xchg
ds
flds
xchg
adc
xor
push
out
inc
dec
sub
imul
out
arpl
cmpsb
xor
in
xchg
cmc
sbb
push
push
push
mov
or
popa
vcvtdq2pd
or
rolb
jne
pop
jecxz
fnstenv
sub
mov
ss
xlat
outsl
in
push
xchg
cmp
decl
lea
lcall
sub
subb
mov
ja
sti
in
enter
repz
xchg
cmp
mov
fstps
jo
ss
in
shl
inc
mov
test
sub
movlps
pop
lds
sbb
mov
xor
aaa
dec
jae
or
mov
daa
or
aas
cmovns
mov
jnp
lret
test
mov
aas
dec
data16
jae
adc
shlb
sbb
inc
fmul
and
sahf
and
ja
and
jge
push
mov
mov
andl
fwait
test
mov
push
pop
xorl
jnp
jo
aad
add
cwtl
cltd
add
ds
jae
cmp
sbb
repnz
add
and
adc
imul
xlat
mov
pop
pop
and
insb
mov
mov
jge
mov
jle
fdiv
inc
addr16
jl
xchg
test
xor
xlat
push
mov
hlt
mov
sbb
fwait
out
add
push
divb
push
cs
in
mov
inc
jae
adcb
bswap
fwait
push
ljmp
arpl
cmp
pop
sub
lret
gs
mov
out
jne
inc
push
xchg
mov
mov
loop
dec
arpl
and
mov
and
or
add
push
fsubrl
pushf
adc
cmpsb
and
mov
loop
nop
addr16
sbb
xchg
lock
cmp
mov
xor
push
mov
scas
scas
ret
push
dec
xchg
cmp
lods
lret
mov
call
into
push
scas
mov
cmp
or
xchg
pusha
mov
pushf
xor
movsb
fistps
cmp
pop
xor
mov
in
xchg
pop
cmp
fdivl
inc
fsubrp
dec
sbb
mov
shlb
outsb
dec
cld
pop
adc
and
xor
mov
jns
lret
orl
shr
pop
mov
jbe
test
or
data16
pusha
push
dec
mov
inc
xchg
dec
push
shlb
aam
push
inc
cltd
and
cmpsb
int3
adc
xchg
pop
xchg
sahf
mov
andl
push
jl
or
jbe
mov
dec
cmp
mov
arpl
adc
mov
dec
sbb
sbb
push
enter
xchg
cmpb
test
aas
pop
icebp
sarb
adc
dec
pop
cmpsl
sbb
sub
mov
push
or
adc
sbb
rcrl
xchg
lock
xor
xor
jae
pop
xor
gs
push
shl
xor
lock
push
push
lret
out
in
lret
add
sbb
jge
push
mov
js
fwait
cmp
xacquire
jae
add
sub
andl
fistpl
test
sub
adc
add
ret
mov
jno
mov
mov
push
int3
lods
out
rclb
inc
popa
xchg
ja
and
pop
push
rorb
mov
cmp
mov
adc
popa
jno
push
fwait
mov
mov
ret
rolb
xchg
mov
add
loope
and
test
subl
js
cmpsb
ja
inc
leave
jg
jmp
adc
hlt
mov
xchg
ficomps
std
cld
mov
adc
jecxz
xor
sbb
shl
cmp
mov
adc
push
lds
adc
and
push
aam
pop
mov
int
out
in
nop
adc
clc
xchg
orl
incl
adc
into
call
mov
inc
in
xchg
mov
jo
jge
aam
xchg
or
sub
loope
out
mov
jae
loopne
imul
cmp
movsb
mov
inc
movsl
push
dec
sbb
hlt
into
out
adc
and
mov
cmp
pop
loope
iret
dec
jbe
sbbb
pop
pop
adc
movsl
or
xor
faddl
fwait
iret
aas
shll
aas
mov
and
imul
mov
push
mov
sti
shl
les
xchg
lret
ja
mov
movsl
fstpt
mov
push
sarl
lods
mov
js
xorb
xchg
xchg
push
mov
xor
mov
and
mov
movsb
jg
push
push
pop
out
lea
out
inc
mov
out
jns
jae
rcrl
dec
pop
daa
std
fstpl
outsb
shll
cs
mov
add
rcll
pop
outsl
xor
data16
cmpsl
pop
lock
outsl
lret
mov
cli
mov
and
outsb
in
test
idivl
push
lock
mov
push
jne
jg
cmp
xor
mov
lret
or
outsb
mov
mov
and
jge
jb
lahf
pop
pushf
fs
adc
dec
xor
inc
mov
sub
daa
fcmovnbe
push
into
pop
add
nop
and
xorl
pop
xor
cmp
pop
imul
movsl
xor
out
shl
sahf
scas
rcl
mov
pop
popa
push
pop
pop
loope
and
dec
imul
add
xor
insl
adc
push
inc
pop
jp
daa
popa
add
aaa
sbb
mov
adc
jecxz
mov
loop
pop
mov
pusha
popa
inc
sbb
jae
sub
adc
xor
outsb
aad
xor
push
jle
pushf
jnp
mov
and
push
icebp
daa
roll
leave
mov
fmuls
sub
adc
push
mov
ja
sti
xorl
inc
mov
pop
sbb
and
jne
or
adc
jp
xchg
ss
mov
fnstcw
pcmpgtb
pop
popf
cmp
xlat
mov
inc
inc
int
mov
insl
mov
push
shrb
mov
inc
mov
inc
out
icebp
arpl
push
in
xchg
add
adc
sub
cmp
shrl
jne
lock
stos
fsincos
test
mov
shrl
cmp
int3
dec
push
add
cmpsb
jge
popl
mov
hlt
rolb
adc
push
xor
pop
imul
lods
repz
xor
jge
mov
movb
icebp
cmp
pop
dec
imul
in
sbb
xchg
adc
jge
daa
add
adc
mov
mov
mov
insb
lea
ss
sub
add
xchg
lahf
and
call
icebp
ss
and
sbbb
inc
popf
sub
add
xor
xor
int
jns
pop
data16
fs
push
xchg
std
nop
xchg
mov
out
mov
mov
out
xlat
add
lods
jmp
mov
scas
dec
popa
xor
mov
mov
popa
mov
xor
adc
xor
pop
add
sub
or
mov
and
mov
dec
mov
add
pop
sarb
pcmpgtw
or
jbe
sbb
loope
pop
orb
sub
test
jge
int3
adc
imul
add
dec
dec
in
or
adc
rol
rclb
lahf
sbb
inc
es
mov
xor
dec
push
repnz
roll
sahf
and
sub
inc
mov
jle
jp
or
lods
loope
add
test
and
mov
addr16
mov
cmc
ljmp
push
loope
subb
hlt
mov
inc
insl
mov
cmpsl
movsl
inc
dec
inc
insl
pop
shr
insb
cwtl
fs
pcmpgtb
ja
add
js
sub
movsb
mov
scas
sbb
add
cld
js
mov
js
dec
mov
aas
icebp
pop
sar
mov
mov
xor
repnz
fsubr
xchg
icebp
adc
and
int3
adcb
jge
outsb
xor
movsb
fidivrl
movsl
out
adc
mov
fadds
int3
les
xor
push
fldt
arpl
pop
sub
iret
and
loopne
popl
push
or
inc
mov
xchg
aas
fisubs
movsl
loop
rcll
lods
andb
out
hlt
hlt
pop
stos
int3
xor
int3
orb
cld
xchg
or
mov
add
jge
mov
inc
mov
daa
push
or
rcrb
sub
test
dec
aaa
xor
xchg
adc
test
add
or
pop
inc
dec
jae
mov
outsb
jnp
popa
fs
cmp
mov
bound
xchg
popa
lcall
in
mov
cmc
mov
xor
inc
cmpsl
icebp
jo
xor
shrl
add
out
popf
cmp
popf
jne
pop
add
mov
xabort
bound
jmp
rorb
ds
and
sbb
pop
xor
rorb
sub
stos
cmc
fnstsw
adc
push
lret
les
mov
xchg
out
mov
adc
stos
mov
adc
arpl
jg
sbb
call
push
xchg
notl
inc
xchg
fsubl
dec
imul
inc
fwait
and
stos
addr16
or
repnz
and
fbld
dec
dec
aas
sbb
imul
pop
movsl
xchg
dec
dec
fidivs
sub
add
ja
jb
cmc
push
xorl
pop
xchg
inc
jne
adc
cmp
add
pop
inc
mov
hlt
hlt
push
mull
push
xor
xchg
or
cwtl
fbstp
aaa
subl
jge
scas
call
fisttpl
es
lock
mov
cmp
nop
push
jns
dec
sbb
in
fwait
inc
xor
mov
push
jp
in
mov
mov
jge
adc
dec
cmpsb
mov
lods
fcmovu
mov
stos
nop
inc
inc
pop
fdivl
pop
pop
pusha
push
ret
daa
icebp
call
lret
jecxz
cli
jp
xchg
loope
leave
xchg
lds
mov
fs
mov
push
mov
adc
das
push
push
jno
je
push
icebp
lods
lds
fidivs
filds
movsb
lcall
pop
cmp
arpl
cmp
xor
in
xchg
dec
aam
stos
lods
pop
pop
push
add
in
ret
sahf
mov
fcompl
cmpsb
sbb
cmpsb
or
addb
insb
push
fists
dec
repz
dec
cli
sar
lahf
sbb
or
stos
dec
movsl
sbb
cmc
xchg
stos
cs
lret
loope
jge
mov
mov
fwait
push
sub
in
pop
popf
lods
test
shrl
cmpsb
imul
mov
add
and
mov
lods
mov
outsl
stos
xor
data16
jmp
mov
xchg
push
mov
clc
pop
mov
push
xor
stos
out
addr16
ljmp
nop
fdivl
popa
dec
sbb
in
inc
bound
cmp
mov
jnp
xchg
dec
test
scas
in
cmp
insl
dec
int3
pop
add
aad
hlt
hlt
scas
lods
adc
stos
sahf
fisubl
mov
inc
inc
jae
aad
xor
mov
shr
jnp
pushf
cmp
lret
int
das
aaa
mov
movsb
mov
or
aaa
adc
mov
imul
sbb
jo
mov
in
lahf
iret
mov
mov
add
pusha
add
xor
aad
mov
sbb
mov
push
sbb
xor
fistps
lea
or
sahf
xor
sbb
fnsetpm(287
add
mov
jne
xor
or
lea
pop
mov
jg
mov
or
add
mov
test
inc
mov
mov
mov
enter
das
outsb
sahf
pop
inc
jmp
jl
lret
roll
pop
adc
mov
lret
and
inc
or
mov
bnd
shlb
cmpsb
hlt
stos
test
mov
and
repnz
jo
jg
push
push
outsl
inc
xchg
stc
pop
pop
pop
sbb
ja
mov
push
shll
pop
inc
sbb
xor
sub
subl
jb
fs
hlt
mov
popf
ret
mov
stc
inc
icebp
movsl
cmpsb
xor
bound
subb
cmp
test
cld
loop
lahf
push
frstor
or
pop
push
xor
outsb
xlat
stos
mov
lock
sbb
movsl
sti
xor
pop
dec
pop
adc
and
test
jno
mov
jnp
int3
ss
mov
das
fcompl
xor
clc
fldt
jle
xor
pusha
vzeroall
pop
test
fistps
in
jno
push
jno
test
int
ror
aad
add
sub
pop
mov
ja
or
outsl
mov
outsb
inc
mov
mov
cli
mov
or
popf
enter
mov
push
mov
xchg
mov
and
fidivrs
xlat
dec
jns
sbb
outsl
xchg
xor
add
jecxz
popl
jne
mov
ja
inc
int3
xchg
inc
xchg
mov
add
stc
mov
std
test
movsb
sub
and
leave
xor
xorl
loop
pop
xchg
dec
insb
fmuls
jo
xchg
cmp
xchg
jecxz
add
or
xorl
xor
xor
and
xchg
mov
jecxz
push
rcr
add
xchg
test
rorb
pop
dec
test
xorl
jecxz
call
aam
pop
rolb
int3
aad
push
scas
or
cmpsl
pop
mov
xor
ljmp
dec
push
mov
popf
ja
mov
dec
rorb
bswap
aaa
cwtl
push
aaa
outsl
cmp
sub
pop
data16
jecxz
or
pop
lahf
hlt
xor
test
std
pop
inc
mov
enter
out
sub
lea
jb
mov
mov
cmp
mov
inc
lret
fdivl
and
pop
cwtl
testl
or
mov
mov
aad
and
jne
clc
daa
xor
cld
dec
popa
cmp
movsb
inc
add
stos
arpl
dec
xor
xchg
lret
or
stos
addr16
sub
sbb
nop
loop
gs
aas
inc
sub
into
cltd
push
push
adc
push
xchg
mov
cmp
shl
lahf
incb
sbb
or
gs
mov
and
shll
sub
push
loop
mov
dec
test
xor
jge
add
push
dec
lgdtl
orb
into
pop
sbb
testb
fildl
add
dec
shll
sbb
adc
in
xor
movsb
jb
shll
fsubp
daa
sbb
xchg
scas
mov
push
inc
gs
mov
cwtl
jno
xchg
or
lret
fcoml
mov
insl
xor
pop
push
sbb
inc
adc
or
jne
xor
loop
stos
sbb
dec
mov
sub
into
sub
incl
mov
aad
aad
push
les
push
dec
out
arpl
push
cmp
mov
sbb
lcall
xchg
shlb
sahf
shrb
inc
je
and
or
xor
test
testb
push
sub
push
sub
mov
mov
inc
lea
jno
xor
jnp
xor
scas
dec
shl
bound
lcall
loope
loopne
call
xlat
jl
or
push
push
cmpsl
xor
cmp
jo
or
arpl
cmc
icebp
out
aad
pop
or
sub
cs
fistpl
jl
jmp
leave
adc
add
cmc
in
inc
push
es
daa
fucomp
push
jb
aas
add
pushf
aad
lea
add
gs
cvtpi2ps
mov
les
pop
xor
dec
mov
popl
sti
and
test
arpl
mov
lahf
lcall
xor
cmp
stos
cmpsl
cmpb
gs
fldt
fmulp
mov
pop
cmpsb
adc
pop
jb
pop
pop
lea
daa
sub
cmp
lock
movsb
loope
pop
repz
push
addr16
fldenv
pop
lock
sub
movsl
gs
test
das
mov
popf
fs
clc
sbb
pop
add
out
cwtl
mov
add
sbb
stos
xor
add
add
cmp
jle
or
enter
sub
mov
dec
lahf
frstpm(287
add
stos
rclb
fs
or
xchg
jmp
jns
push
bound
hlt
push
inc
fsubrl
leave
cmpsl
fcoms
cmpsl
or
xchg
xchg
dec
xchg
imul
in
mov
lret
ljmp
fcoml
outsl
mov
mov
jmp
cwtl
sarl
dec
or
icebp
jns
addr16
jle
je
mov
inc
popf
add
push
adc
sbb
adc
scas
loop
sbb
ret
addr16
cli
push
push
mov
jl
inc
popa
add
test
sub
es
iret
iret
sub
and
out
das
and
ds
jno
movsl
repz
cmpsb
repz
imul
jae
das
aad
dec
pop
jle
and
inc
pop
ja
sub
outsb
cmp
sbbl
rorl
inc
pop
out
mov
push
pop
mov
mov
enter
jl
pop
pop
jne
xchg
mov
add
test
jmp
dec
mov
aas
loopne
adc
out
sar
rolb
mov
movsb
bound
cmpsb
loop
lahf
dec
jg
jge
in
push
loope
pop
int
sbb
push
in
inc
mov
jo
dec
xor
and
inc
dec
movl
inc
fwait
pop
enter
xchg
js
addr16
inc
jne
fstps
and
and
fbstp
insb
and
mov
jl
repnz
popf
popf
icebp
adc
fldl
mov
pop
xchg
sbb
les
pushl
mov
jl
inc
ljmp
or
mov
mov
clc
or
inc
lods
add
jb
gs
ret
into
stc
push
nop
push
cmp
xchg
xchg
lods
xor
pop
cmp
clc
sbb
dec
xor
add
and
mov
fnstsw
cltd
jle
jo
jno
lods
les
dec
lret
inc
or
push
xor
cmp
xchg
cmp
pop
and
dec
xor
nop
xor
ficoml
or
push
adc
xchg
test
out
ror
jo
mov
mov
and
pop
rcr
into
inc
mov
cmpsl
rcl
insl
sub
jbe
shll
mov
outsl
pop
jp
roll
push
data16
ror
imul
inc
fisttpll
pop
push
mov
sahf
insl
fistpll
sti
or
jno
add
cmp
out
jp
movsl
push
xor
jno
adc
scas
cmp
jle
adc
jo
loop
mov
cwtl
sbb
add
xchg
mov
add
jg
pop
clc
repnz
icebp
or
add
shrb
pop
lret
lea
cmp
test
mov
std
cmpsb
mov
push
and
js
sbb
insl
shrl
sub
adc
dec
mov
mov
dec
jno
stc
mov
test
fists
jae
mov
fs
movsl
dec
in
sub
fbld
pop
out
loope
scas
fldcw
out
gs
jno
add
lds
pop
jnp
sub
mov
mov
stc
push
icebp
add
mov
xlat
dec
test
movsb
or
clc
mov
sbb
adc
inc
inc
xor
cmpsl
dec
sbb
cwtl
hlt
push
repz
pop
xor
xor
pop
mov
decl
sbb
arpl
jge
pop
rcrl
or
test
bound
bound
adc
sub
and
fwait
xlat
fs
inc
jne
xchg
xchg
ret
sbbb
push
mov
out
les
out
sub
inc
nop
sbb
rcr
sub
daa
je
daa
cmpsl
fsubrs
sbb
repnz
cmp
shlb
add
testb
ficoml
xor
clc
mov
arpl
cmpsl
jns
inc
leave
adc
mov
or
sti
add
in
jae
cmp
in
mov
add
std
jb
cmp
jge
sti
inc
gs
push
test
bound
push
enter
in
inc
test
mov
shll
iret
addr16
lea
jmp
fucomp
and
shr
call
adc
jg
popa
fisubrs
sbb
imul
and
pushl
fcomip
int3
cwtl
stc
repnz
in
test
xlat
xchg
sbb
mov
xlat
xor
int
inc
lret
xor
xchg
out
pop
sub
je
ds
push
xchg
add
mov
jnp
outsb
ret
lcall
jae
sbb
aad
popf
fisubs
rorb
testb
or
push
xor
cmpsl
loope
mull
mov
inc
imul
addr16
lds
lcall
pop
dec
daa
stos
pop
aaa
xor
movsb
xlat
push
mov
mov
pop
sub
leave
ret
xor
aad
dec
mov
sti
addl
mov
push
rcrb
sbb
fildl
or
pop
inc
daa
test
push
outsl
or
mov
inc
dec
mov
and
adc
data16
repz
repnz
bswap
sub
adc
mov
push
sub
pop
aam
js
std
scas
nop
repnz
xor
rcr
repz
mov
add
push
cmpsl
cmp
adc
into
scas
adc
jne
ja
xchg
xor
jno
mov
data16
pop
das
outsb
leave
push
in
arpl
jp
lds
arpl
mov
push
and
ds
sbb
jae
outsl
push
xchg
push
fwait
sub
inc
or
movsb
or
adc
insb
ja
bound
clc
mov
fldl
adc
cmp
jle
lock
in
sub
mov
mov
add
xor
mov
jl
add
inc
jbe
push
in
mov
mov
and
jp
lea
mov
push
call
add
mov
dec
mov
push
rcrl
pop
or
dec
inc
pop
stos
loop,pn
fsubrl
sub
push
iret
push
pop
xor
mov
fdivp
cmp
fdivs
pop
sbb
cmp
pop
cltd
call
je
sub
dec
mov
jnp
push
ljmp
lret
xor
inc
cld
scas
sub
imul
push
add
jne
pop
dec
addr16
pop
imul
add
jl
or
adc
lds
jae
leave
test
mov
mov
jo
imul
in
sub
sti
sbb
jl
mov
ljmp
inc
stos
cmp
dec
in
es
xchg
enter
lods
mov
and
dec
push
xchg
fsubl
xchg
xor
movsl
cmpsb
cmp
sbb
jge
sub
daa
lds
mov
in
stc
jne
add
stos
mov
movsl
lcall
xchg
mov
jns
mov
data16
xchg
xor
cmp
loope
cld
xchg
sub
movsl
es
cmc
hlt
gs
jle
push
mov
dec
imul
xchg
jl,pn
mov
loop
jb
lret
lret
dec
jne
mov
mov
aaa
mov
jge
je
rorb
sbb
adc
push
mov
popa
jns
sub
movsl
lcall
sbb
cmp
in
outsb
cmp
mov
adc
arpl
fnstsw
cmpsl
ljmp
divb
jmp
arpl
jb
fisubl
inc
xchg
or
imul
mov
pop
leave
mov
push
mov
cmpsb
arpl
pop
fstps
push
add
nop
and
insb
xor
cmp
mov
mov
cli
pop
push
mov
xor
je
or
in
pop
inc
xchg
mov
clc
and
sub
xor
loop
outsb
in
pop
cwtl
jle
pop
int
dec
ljmp
jo
scas
xchg
mov
mov
nop
xlat
fistpl
inc
mov
cwtl
pop
pusha
sub
pop
test
jmp
xor
inc
push
shrl
and
xchg
xor
jge
cltd
xchg
shll
cmpsb
arpl
inc
jecxz
lods
inc
mov
fwait
aaa
testl
mov
mov
inc
cmp
arpl
popf
dec
in
push
mov
cmp
cmp
mov
cmpxchg8b
sbb
je
or
shll
lds
mov
arpl
mov
pop
lret
or
lds
mov
xor
dec
iret
loope
xor
dec
mov
or
sub
and
loop
aas
das
add
aas
xchg
out
lods
hlt
mov
and
fwait
add
mov
cmp
add
lock
sub
cwtl
stc
xchg
stc
xchg
inc
jne
insb
test
cmp
nop
mov
sbb
mov
or
out
test
mov
adc
or
scas
les
adc
pop
shl
push
push
dec
xchg
lods
cli
cmp
aad
mov
ss
push
int3
jnp
sub
mov
dec
cmp
cs
inc
cmp
jl
lds
loope
bound
jl
sub
pop
adc
pop
pop
xor
sbb
scas
sub
pop
or
xor
in
jge
push
popa
mov
and
popa
xor
xor
pop
bound
leave
jno
inc
push
orl
pop
pop
pushf
and
sarl
mov
add
test
adc
mov
mov
cwtl
push
jecxz
sub
or
cmp
out
xor
jo
fs
dec
sub
lcall
aas
fistpll
xchg
scas
cmpsb
arpl
sbb
cld
xor
push
das
adc
push
adc
inc
mov
sub
inc
mov
loope
rcl
ss
gs
push
neg
or
stos
mov
daa
insb
cmp
push
fistpll
lret
mov
and
outsb
push
mov
pusha
inc
sub
or
in
mov
push
adc
dec
sahf
iret
enter
xor
push
mov
movsl
dec
mov
mov
movsl
outsb
addr16
cld
jae
popa
pop
mov
out
addr16
xchg
add
rolb
mov
dec
mov
ja
jl
fnsave
push
xchg
sub
and
adc
xchg
inc
ret
pop
xlat
aad
fwait
xor
pop
jo
push
iret
cli
cmp
pop
enterw
jae
sbb
les
mov
lea
inc
aad
jl
ret
repz
jno
xor
xchg
mov
shll
lcall
jb
jo
test
jg
shl
mov
cltd
cwtl
ja
call
cmp
stos
ds
loope
cmovg
andb
insb
aaa
add
or
data16
sub
pop
push
scas
sahf
mov
dec
aam
dec
sub
jl
movsb
jl
hlt
dec
imul
jg
and
and
xor
mov
repnz
push
imull
inc
cmp
inc
scas
cmc
dec
sbb
in
into
jbe
and
outsb
xchg
stos
add
dec
sti
arpl
test
stc
xchg
mov
dec
mov
aas
lret
or
loop
push
in
cmpsb
fistl
imul
jmp
rcr
mov
pop
scas
add
enter
xchg
lahf
dec
imul
fcoms
je
pop
jnp
xchg
in
pop
fnstcw
and
adc
mov
mov
push
jno
repz
mov
push
dec
and
add
cmp
scas
adc
or
ficoml
cmp
lds
add
dec
pop
jmp
cmp
xchg
sub
icebp
lods
mov
sti
sbb
lds
push
mov
outsw
inc
in
inc
pop
jno
dec
jg
into
inc
out
push
ror
in
xchg
xor
xchg
xchg
and
jmp
stos
movsl
int3
xlat
in
jp
push
test
mov
sbb
or
test
dec
sbb
loope
adc
dec
sbb
add
pop
adc
movsb
xor
inc
rcl
outsl
loop
popf
pop
xchg
popf
rclb
pop
jb
jle
es
adc
jbe
clc
ja
jp
adc
stos
repnz
gs
pop
mov
pop
pop
dec
ja
push
mov
pop
dec
sbb
es
mov
out
es
fcomip
mov
or
dec
lods
addl
lock
sbb
xchg
adc
in
fbld
imul
lret
daa
mov
jo
out
sbb
cmpsl
push
inc
or
movsl
cmpsl
movl
cmp
xor
lcall
mov
in
inc
in
push
sar
mov
pop
mov
adc
adc
aaa
test
mov
pusha
jns
xchg
adc
mov
jp
cmp
xlat
sub
or
dec
rcrl
je
out
inc
push
add
arpl
pop
sub
dec
in
adc
cmpsl
jb
pop
inc
loopne
fadd
push
pusha
xchg
and
lock
push
ffree
ss
test
daa
mov
xchg
gs
jnp
outsl
loopne
xchg
out
cmpl
jmp
arpl
dec
inc
and
jne
arpl
pop
daa
lods
sub
insl
or
mov
imul
stc
es
out
repz
mov
fstpt
or
xchg
push
sbb
sub
sahf
push
cld
pushf
testb
out
or
mov
aam
mov
popl
add
xor
jb
dec
adc
dec
cmpsl
sub
cmp
ret
pop
dec
inc
xchg
sti
sub
mov
cmp
dec
movl
mov
ret
iret
lods
ja
gs
xor
ja
jge
pop
stos
nop
cmpsl
cmp
inc
and
aaa
in
cmc
std
das
daa
xor
cli
js
pop
insb
fcoms
scas
test
and
mov
adc
cmp
cmp
jns
inc
xor
test
mov
and
fwait
pushl
mov
and
ret
ljmp
mov
fnstsw
xor
sbbl
adc
fidivl
xchg
jnp
add
cmp
xorl
popa
push
adc
filds
xchg
out
in
loope
jmp
pop
adc
or
sub
push
mov
adc
push
aad
pop
ljmp
mov
pop
and
les
pop
xchg
mov
sbb
push
cmpsl
mov
popa
push
jle
call
xor
sub
mov
pop
xchg
sub
fwait
cmp
lods
xor
mov
roll
add
or
in
insl
mov
insb
adc
pop
jmp
leave
xor
movsl
enter
or
pop
and
daa
jbe
or
fsub
cld
pusha
pushf
testb
sub
jne
add
sbb
cmp
mov
jle
mov
push
jge
divl
imul
and
lock
lock
dec
inc
push
pop
popf
mov
jnp
mov
push
cmp
lret
mov
inc
mov
sbb
lods
hlt
test
subb
mov
sbb
mov
jl
inc
dec
je
stos
xor
dec
ljmp
sbb
xor
xchg
ret
loope
jecxz
lret
fdivp
dec
subb
jb
js
insl
inc
lea
pop
clc
inc
push
push
sub
mov
dec
dec
sub
ficoml
adc
jnp
jle
or
and
adc
andl
cmc
insb
pop
sub
sti
lods
rorb
pop
pop
in
ljmp
jbe
ljmp
jl
or
pop
or
add
xor
popa
xor
xor
push
xchg
xor
cmpsl
sub
lds
test
mov
cmp
inc
xchg
arpl
inc
mov
aam
dec
dec
jge
test
mov
push
sub
stc
pop
adcl
pop
jg
xor
es
pushf
add
pop
cmpsb
cmp
pusha
and
mov
icebp
fildl
xchg
jl
dec
shrl
arpl
pop
inc
roll
popf
cmp
mov
cld
test
pop
mov
cmpsb
pop
addr16
fldenv
imul
testl
iret
dec
in
stc
xchg
jno
mov
fbstp
mov
out
das
jbe
imul
pop
fisubrl
or
inc
vaddps
sti
lcall
sub
pop
cwtl
cli
jo
mov
mov
push
add
push
rcll
addr16
mov
popf
mov
pop
xor
or
outsb
sub
or
punpckldq
add
dec
in
loope
test
cwtl
leave
push
pop
scas
inc
xor
lret
dec
pushf
mov
fistpll
or
ret
pop
xchg
xchg
inc
fnstcw
xchg
xchg
cmc
xor
int3
rcl
dec
push
fldcw
shlb
adc
scas
psrld
pop
iret
dec
cmp
stos
fcmovnb
lahf
mov
push
add
popf
mov
push
sbb
filds
es
or
rorl
xor
mov
ds
out
sahf
repnz
push
in
jno
push
sub
mov
fimuls
inc
or
mov
sti
push
gs
mul
outsb
dec
cmpsb
add
jle
mov
xchg
ret
div
cltd
mov
rcrl
and
jno
jecxz
rol
movb
ds
rcrl
mov
mov
cmc
xor
das
arpl
mov
inc
loop
mov
mov
jne
into
std
adc
lret
scas
in
adc
cli
cmp
push
cmp
ljmp
pop
add
sub
mov
pushf
arpl
sub
shlb
xchg
push
and
mov
inc
aam
add
xchg
inc
inc
xor
or
push
mov
cmp
fstpl
call
sub
pushf
push
mov
mov
pop
in
pop
dec
mov
nop
xor
and
outsb
push
add
dec
xchg
mov
ljmp
adcl
add
scas
mov
roll
push
mov
decl
mov
xor
jg
sbb
fs
push
jno
nop
push
cmp
aaa
jns
cmp
add
mov
push
lods
mov
mov
or
pop
jbe
mov
jmpw
insl
mov
int
mov
cmp
dec
dec
xor
sbb
lds
aas
add
dec
ret
fwait
mov
mov
mov
xchg
subl
jb
mov
das
cwtl
lahf
inc
outsl
cmpsl
jnp
lea
cmp
sti
pop
cmpsb
hlt
xor
jl
inc
lods
aaa
fsub
or
cld
rclb
out
xor
pop
mull
mov
pop
mov
push
insl
cmpsl
sti
lods
je
test
bound
inc
lock
jb
scas
clc
mov
sub
or
je
or
mov
xchg
jae
add
push
lcall
inc
addb
rcrl
insl
mov
lea
pop
je
pop
xorb
pop
mov
add
inc
mov
jmp
or
cmp
pusha
xlat
or
in
mov
xor
sub
add
add
leave
or
fsubrp
test
push
add
mov
cmc
push
data16
xor
mov
and
fwait
in
leave
lods
add
test
rorb
jnp
lods
popf
or
fbld
test
adc
stc
xchg
imul
and
mov
fs
and
jl
and
xchg
mov
dec
insb
pusha
sub
xor
push
popa
inc
mov
pop
pop
jge
test
test
mov
pushf
dec
mov
pop
xor
adc
jp
lds
push
cs
jae
addr16
into
and
pop
gs
push
std
scas
in
sub
bound
test
push
lcall
pop
pop
push
and
sub
dec
mov
jl
out
dec
movsl
dec
lahf
shrb
out
repz
mov
call
aad
jmp
aad
pushf
in
sbb
dec
lea
mov
mov
loop
addr16
sahf
rorb
inc
xor
adc
mov
test
xchg
mov
sub
xor
xchg
test
insb
fs
subb
dec
sti
scas
pop
loope
sub
xchg
int
push
mov
xchg
lods
mov
cmpsl
add
pushf
dec
pop
mov
mov
ljmp
sub
add
push
xor
gs
pusha
mov
mov
call
mov
xorb
aas
in
pop
mov
adc
scas
das
jno
inc
pop
stos
jg
stos
and
push
cmp
insl
inc
dec
pop
mov
or
sbb
or
inc
and
in
pop
mov
addr16
sti
pop
mov
mov
hlt
mov
shlb
dec
sub
test
enter
repz
pop
je
mov
popf
movsb
jge
sub
int
pop
out
push
xor
insb
adc
test
shrb
xor
lcall
roll
xor
cs
adc
adc
xor
sub
negb
ret
hlt
jecxz
push
repz
jae
mov
cmpsl
fistps
mov
or
xor
call
xor
sbb
leave
mov
out
ljmp
popa
mov
sbb
xorl
jne
gs
adc
test
je
jp
pop
add
push
repz
in
cmpsb
pop
lcall
dec
dec
sbb
pop
jge
pop
out
outsb
repnz
outsl
cmp
push
lock
pop
pop
sysret
or
sti
gs
shll
inc
ss
mov
out
popa
mov
mov
outsl
inc
fldenv
popa
cs
incb
add
test
pop
insl
pop
jae
hlt
gs
in
outsl
mov
mov
push
enter
lock
cmpsl
xor
test
cli
andl
aaa
xchg
out
and
mov
insl
lods
sbb
xor
fildll
out
shll
or
mov
lods
leave
add
dec
sbb
adc
mov
hlt
sub
in
insb
pop
mov
sub
rorl
dec
cmpsl
jecxz
popa
imul
sbb
push
mov
insb
jle
aam
push
aad
dec
popf
and
jg
mov
stos
mov
cs
push
fstpt
pushl
test
adc
lahf
sub
sub
sub
mov
cmp
dec
adc
bound
xchg
mov
pop
lahf
in
stos
xlat
or
push
outsb
add
andl
adc
mov
xchg
xor
sbb
insl
push
mov
pop
sub
icebp
enter
or
pop
jae
push
push
shlb
jo
ljmp
mov
cmp
shl
stos
push
call
enter
scas
cmp
imul
pop
push
and
aaa
or
hlt
and
pop
and
mov
lods
push
mov
and
fiadds
fmull
cmp
shll
sbb
cmp
jle
in
cmp
cltd
jns
xor
insl
and
bound
dec
pop
jbe
shrl
scas
insl
scas
inc
popf
jno
sahf
push
jge
pop
or
add
jle
mov
ja
cmpsb
xchg
ficoml
adc
xor
push
push
arpl
adc
data16
outsl
push
insl
icebp
xor
roll
sub
mov
push
push
sbb
outsl
test
and
das
and
test
or
mov
das
pop
xchg
stc
loope
fsubrs
jl
loop
out
movsl
fs
or
dec
sahf
cmp
push
pop
les
and
andl
jae
xchg
push
loop
or
push
into
jecxz
repnz
sti
gs
xor
pop
icebp
sub
push
xchg
pop
daa
mov
jge
mov
mov
hlt
ljmp
push
scas
bound
push
mov
arpl
insl
xor
cmpsb
jns
je
inc
add
inc
xor
cmc
sub
mov
pop
ret
mov
fisttpll
leave
rorl
sub
push
fstl
push
rclb
xchg
or
add
das
push
inc
std
jp
repnz
cmpsl
mov
and
pop
dec
addb
mov
sbb
or
in
cwtl
pcmpgtb
add
into
data16
bound
aad
pop
test
jle
sbb
fmull
xlat
jl
ja
cmp
and
pop
popa
cmc
inc
jmp
push
sub
xchg
sub
pop
sahf
arpl
or
test
adc
and
sahf
add
lds
push
loope
xor
mov
lea
and
add
cmp
cs
xor
dec
insl
xchg
mov
pop
pop
mov
ss
jns
in
inc
enter
sub
mov
push
mov
bound
clc
adc
insb
movsl
iret
repz
sbb
jnp
or
jae
adc
out
hlt
jb
or
addr16
outsb
or
xchg
aad
mov
add
xchg
add
outsl
je
das
loope
enter
in
jp
pop
bnd
push
mov
jae
int
xor
xchg
cmc
lods
xor
mov
xor
orl
in
pop
pop
pop
dec
aas
in
jmp
sti
push
fwait
inc
mov
js
hlt
lea
hlt
popa
push
sbb
fcoml
cmc
inc
clc
dec
add
int
sahf
shl
xchg
push
mov
js
ljmp
push
idivb
cmpl
testb
mov
cwtl
dec
pop
sub
in
add
add
mov
lret
int3
xor
push
imul
mov
dec
fidivl
lds
inc
daa
stos
inc
xchg
sarb
shll
mov
pop
cmpb
imul
in
push
aad
ja
or
mov
hlt
sbb
cli
bound
adc
arpl
out
and
clc
lahf
cmp
in
jno
pop
ret
icebp
ja
mov
adc
int3
test
in
int3
das
out
inc
pop
jnp
jg
jno
xor
fdiv
cmpsb
adc
and
testb
cs
pop
fcomip
roll
pop
sti
aam
stos
mov
and
xor
out
and
ret
cld
add
testl
add
ficomps
xor
pop
aam
jmp
add
out
adc
cli
cmp
in
xor
bound
xchg
bound
add
dec
pop
inc
xorl
inc
sbb
sbb
es
js
dec
or
cmp
jl
adc
adc
fwait
mov
jecxz
sbb
xor
mov
xor
cmp
mov
lea
jo
cmp
mov
cmc
fwait
lods
pop
into
push
insl
mov
pop
gs
fcmovnu
jge
mov
call
dec
sub
pusha
rorl
into
dec
pop
dec
mov
pop
add
insl
dec
sub
xchg
int
xchg
adc
sub
cmp
out
pop
cld
add
out
jle
jle
popa
xor
cmp
jb
jle
popa
inc
cltd
or
dec
daa
fcmovb
popf
push
xchg
add
jne
fwait
mov
scas
out
inc
mov
stos
in
out
ljmp
sarb
mov
jle
popa
fdivrs
fstps
js
jmp
mov
je
pop
out
xor
pushf
nop
inc
jl
jge
add
cmp
fdivs
sahf
sar
fucom
pop
xchg
mov
fistl
xchg
outsb
insb
stos
aas
fildll
lcall
sbb
ret
mov
std
hlt
jbe
call
cmpsl
and
idiv
pushl
outsb
ret
data16
dec
shlb
jnp
insl
mov
insb
test
fwait
pop
dec
mov
dec
inc
mov
popa
xchg
pop
xor
sti
mov
dec
sbb
int3
pushf
dec
testl
lods
xor
out
fisttpl
lods
outsl
lock
xchg
ss
rorb
not
or
pop
or
mov
rclb
sub
div
inc
xor
bnd
cltd
xchg
push
out
sub
out
xor
or
out
call
mov
push
jmp
cli
jecxz
mov
jne
fiaddl
nop
sbb
mov
jo
xchg
pop
inc
pop
daa
or
lcall
mov
adc
xchg
or
cmpsb
dec
pop
inc
dec
lock
fwait
cmp
in
pop
xor
xlat
and
dec
or
jo
add
imul
mov
mov
push
add
xchg
fld
fidivl
add
mov
xchg
pop
mov
andb
dec
xor
jne
mov
xchg
mov
and
dec
push
cmc
or
mov
inc
pop
lods
out
push
test
nop
aaa
sbb
fistpll
ficoml
mov
xor
push
pop
gs
adc
pop
xchg
push
or
fsubrl
aaa
out
dec
gs
lea
mov
push
mov
stos
inc
insb
or
mov
mov
xchg
push
and
inc
xchg
dec
pop
sbb
mov
enter
inc
adcl
inc
sub
fstps
mov
jle
data16
or
push
push
xor
mov
iret
cmc
add
sbb
into
fiadds
cmpb
adc
xor
mov
fadds
sbb
jae
and
stos
mov
mov
movsl
push
ret
pop
cld
jmpw
mov
sub
icebp
xor
ret
and
or
dec
add
stc
aaa
sbb
inc
clc
xlat
repnz
xchg
mov
ljmp
xchg
mov
out
pop
xor
aam
xor
adc
jp
add
jmp
jae
cltd
loopne
insl
addr16
inc
cld
sub
sub
dec
or
movsl
push
fisttpll
pop
lds
aas
or
roll
and
jle
mov
insb
and
mov
icebp
clc
int3
xor
aas
mov
cmpsl
dec
loope
mov
xchg
popa
inc
pop
in
fnsave
scas
fdivl
sbb
in
aaa
push
xorl
push
insl
and
jmp
mov
jge
add
test
adc
jno
in
gs
push
pop
sub
and
and
lahf
out
aam
sub
dec
mov
mov
scas
shll
add
shl
add
int
les
movsl
xchg
mov
bound
inc
mov
xchg
push
fidivs
shrb
lock
mov
pusha
xchg
xchg
adc
lret
sahf
cmpb
adc
pop
cmp
push
sub
push
inc
mov
push
fcomps
mov
in
fdivp
int
add
mov
jl
xor
aaa
fdivrl
inc
out
and
fistpl
pop
imul
jle
push
mov
je
fwait
hlt
mov
cmpsb
xor
xchg
das
push
outsb
sbb
call
xchg
mov
test
inc
sub
pop
daa
into
xor
in
sbb
and
jge
push
insb
arpl
fcmovnu
mov
mov
pop
adc
xchg
idiv
jne
push
cmp
add
jmp
call
push
xchg
and
add
xchg
in
sbb
repnz
adcl
sub
or
cmpsl
iret
sbb
clc
mov
fwait
popf
pop
mov
push
pop
or
lcall
inc
sti
mov
sahf
mov
sub
xor
dec
pop
fiadds
int
aaa
dec
mov
fs
or
sbb
xchg
sub
fwait
testb
xor
lahf
dec
push
repz
faddl
mov
sahf
pop
inc
lcall
jb
clc
mov
std
lcall
cltd
daa
and
test
mov
mov
sbb
movsl
fistpl
cmc
inc
push
inc
push
cmp
dec
and
xor
cwtl
enter
mov
and
lods
mov
pop
xor
and
enter
scas
movsb
mov
mov
ja
in
outsl
sub
cmpsb
into
dec
test
xchg
dec
insb
rcrl
or
ret
inc
adc
inc
pop
xor
cli
push
cmpsb
mov
icebp
lret
pop
dec
adcl
cmpsl
rcll
in
push
es
mov
xor
inc
rcll
negb
jle
clc
stos
dec
dec
cwtl
pop
add
push
out
ss
add
jle
fcoms
xor
int
xchg
sub
aad
xchg
mov
sbb
orb
rol
hlt
push
push
jmp
dec
pop
movsb
xor
xchg
les
xchg
lret
subb
sbb
pusha
mov
test
mov
pop
stos
add
ds
popf
mov
xor
jl
popf
aam
loopne
dec
xchg
dec
fists
inc
xchg
xor
ror
loop
mov
repz
fwait
shlb
xchg
inc
out
inc
ret
sub
mov
cli
les
leave
xor
lret
fidivrl
int3
or
sbb
dec
and
dec
jmp
mov
mov
ja
cmp
pushf
mov
xchg
xor
pushf
jmp
jno
push
cmp
cmpsl
xor
mov
enter
std
cmp
in
mov
mov
testb
stc
push
insb
inc
fwait
mov
fwait
lret
and
pop
lret
and
cmp
pop
and
pop
lret
jb
jno
sarl
sahf
rorl
fcoml
add
and
leave
pop
lods
dec
mov
in
sub
shll
adc
xchg
imull
mov
jo,pn
add
shrl
pushf
mov
and
and
push
sbb
mov
fidivrs
xor
pop
push
jae
imul
out
fs
imul
cmpsl
icebp
push
sti
test
jmp
fidivs
shlb
add
test
ret
add
mov
pusha
inc
mov
mov
dec
cs
in
mov
movsl
mov
xchg
pop
mov
es
pop
stos
cmpsb
repnz
decl
jo
push
subb
in
jg
add
mov
mov
xor
inc
je
cmp
cld
je
pop
sti
mov
jbe
in
push
adc
xor
nop
xor
pusha
cwtl
aaa
push
pop
popf
or
mov
push
in
cmp
inc
push
push
xchg
movsb
cmp
in
mov
pop
mov
leave
std
or
cli
ss
in
add
outsl
xchg
xor
dec
out
adc
push
stos
movsl
aam
mov
pop
jbe
mov
xor
lahf
sbb
xor
test
and
fsubrs
orl
add
pop
or
jno
xor
lret
mov
jge
pop
jne
xacquire
hlt
je
adc
mov
dec
imul
in
pusha
outsb
test
push
mov
sbb
xchg
cmp
xchg
add
push
mov
jo
push
dec
adc
push
fs
dec
inc
jl
mull
fs
sub
popa
dec
pop
pop
adc
ds
es
adc
shlb
roll
pop
sbb
into
in
mov
add
or
lods
add
xor
push
and
sti
in
stos
xchg
xor
daa
mov
xlat
sbb
es
add
jno
dec
shlb
inc
jge
inc
cmp
bound
pusha
cmp
add
frstor
mov
pop
sbb
mov
cmc
pop
lret
sbb
hlt
jno
cmp
jge
mov
add
sbb
ljmp
cmp
aad
les
sbb
int
mov
cmp
shl
icebp
ret
dec
pushf
dec
xchg
and
int
inc
shll
sub
icebp
rolb
push
leave
mov
cmc
das
fcomip
cwtl
mov
xchg
push
insb
mov
xchg
sarb
pop
js
sbb
mov
push
lods
dec
fldt
xchg
sub
add
in
and
xchg
jbe
enter
addr16
or
dec
std
cmp
dec
dec
das
jge
adc
stc
and
lret
mov
jne
pcmpgtb
lock
cld
or
into
sahf
lcall
mov
insl
pop
fdivr
stos
in
inc
clc
js
push
iret
std
ss
and
jle
lock
xor
lcall
xchg
icebp
icebp
lea
ljmp
sub
inc
or
mov
mov
negb
popf
les
aam
cmpsl
decb
jno
sbb
insl
mov
jg
cmp
push
xor
and
inc
mov
int3
xchg
adc
xchg
lds
rorl
push
and
movsl
xor
dec
mov
nop
add
and
fistpl
and
das
movsb
in
test
pushf
sar
cmp
js
xor
fdivrl
js
lret
xor
leave
push
xchg
and
sub
xor
sub
mov
test
fmuls
push
inc
aaa
sarl
add
or
sub
aas
push
mov
pushf
xchg
aaa
cmp
mov
into
pop
out
sarb
mov
gs
imul
cwtl
cmp
xchg
jae
pop
data16
lds
xchg
and
fdivp
stos
push
stos
pop
xor
ss
js
shll
dec
xor
pop
or
cmp
xchg
rcrb
cmpsl
je
lods
mov
sbb
cmp
xor
scas
and
popa
inc
rcrl
inc
add
mov
and
popf
sbb
mov
jge
scas
sbb
mov
cmp
lcall
sub
loope
add
jbe
push
bound
xor
lods
jge
push
outsl
std
push
mov
pop
xchg
xor
test
out
mov
arpl
dec
ficoms
inc
inc
mov
sbb
and
inc
aaa
cmc
popa
nop
add
mov
cmp
test
std
add
xor
dec
add
insb
sub
int
cwtl
adc
add
xchg
sbb
xchg
xchg
xor
pop
shl
adc
mov
mov
sbb
out
arpl
inc
mov
aam
cmp
cltd
in
pop
jae
sbbl
or
add
punpcklwd
xor
mov
pop
or
daa
mov
ds
mov
sbb
cld
xor
cmp
sti
mov
cmpsl
les
adc
mov
xchg
dec
xchg
shl
fsubrp
jge
imul
dec
xor
push
jno
cli
mov
pop
sbb
daa
dec
out
cwtl
xor
popaw
cmp
sbbb
stc
adc
arpl
bound
mov
push
mov
pop
movsl
ficompl
data16
push
mov
es
aaa
cmp
pop
sub
test
mov
mov
int3
xchg
std
sbb
mov
jbe
mov
cmc
mov
or
sarb
inc
rorb
adc
mov
in
scas
cmp
repnz
adc
adc
imulb
clc
dec
push
adc
repz
push
mov
sbb
xchg
addr16
adc
rcrb
push
in
cmpsb
mov
lret
xorl
lret
mov
add
sbb
nop
ffree
jle
jb
xor
xor
ss
push
push
xor
xlat
or
push
inc
add
and
or
mov
xchg
fmul
inc
lods
jne
push
adc
dec
sub
inc
mov
jmp
xchg
lret
je
or
jo
lret
pop
inc
cmp
cmp
mov
add
jle
pop
adc
sahf
or
xchg
jecxz
mov
xchg
inc
mov
xchg
jns
mov
loopne
xor
xchg
mov
int
cmp
push
pop
test
xor
jle
sahf
push
cltd
and
sub
jge
fistpll
jbe
xchg
adc
out
xor
pop
jge
push
outsl
pop
gs
add
pop
repz
sub
mov
sbb
cwtl
pop
insb
jne
and
pusha
jo
push
and
data16
add
gs
cmpl
loopne
aas
shll
outsb
xchg
mov
jecxz
shll
sub
ljmp
popa
jnp,pn
out
subb
sbb
inc
nop
mov
mov
adc
add
lods
xlat
jmp
dec
ret
inc
inc
data16
daa
and
sub
push
and
and
xchg
jne
jl
dec
stos
rep
in
adc
rol
xchg
insl
hlt
mov
hlt
fidivrs
push
fcmovnu
inc
cli
pop
mov
mov
xchg
inc
xor
data16
sahf
add
bound
push
jge
push
or
xor
pop
leave
adc
lret
cld
cmp
scas
sbb
jg,pn
jb
fwait
xchg
insl
sti
xlat
and
addr16
cmpsb
cmp
enter
jge
dec
ret
xor
rcll
xor
dec
or
cli
push
dec
cwtl
cmpsl
pop
cmp
repnz
in
lods
mov
pop
adc
enter
jge
or
out
adc
ljmp
dec
xchg
fwait
lcall
cli
cwtl
and
fiaddl
xlat
mov
jns
es
jnp
mov
mov
sahf
xor
mov
sti
jle
jge
in
mov
mov
mov
rclb
out
or
les
inc
filds
lcall
add
pop
xchg
add
inc
jb
xchg
or
call
xor
adc
dec
cltd
scas
stos
gs
mov
js
and
es
sar
push
cltd
xor
xchg
les
adcl
cli
mov
movsb
cmp
les
shll
mov
iret
lods
push
xchg
in
les
jle
and
add
push
mov
incl
xchg
and
cltd
je
nop
add
mov
rcl
shlb
arpl
and
xor
imul
pop
out
addr16
xchg
pop
or
pop
imul
sbb
cmp
sub
mov
enter
daa
push
es
popf
xor
insl
mov
pop
std
push
int3
pop
lds
imul
inc
arpl
inc
dec
inc
loope
shll
adc
or
out
testb
mov
mov
inc
outsl
mov
pop
out
inc
pop
xchg
std
sarb
lds
das
sub
shlb
mov
fstps
daa
mov
adc
test
jno
mov
xor
pop
data16
xor
fstl
cmc
aaa
jns
popf
add
out
jb
fsubs
mov
loopne
sahf
xor
out
sub
sysret
xchg
iret
mov
xor
out
xor
movsl
lahf
adc
adc
jne
mov
lods
lods
testl
xor
sbb
sbb
mov
push
pop
push
sub
gs
add
fstps
fsubr
xor
rclb
inc
adc
repz
push
mov
sub
mov
loope
xchg
fnsave
or
push
icebp
in
int
enter
std
cmp
shrl
mov
ret
cli
jbe
subb
mov
data16
mov
mov
jo
pushf
enter
pop
xchg
mov
or
sbb
and
setl
xor
jmp
int3
lods
and
pop
fwait
pop
adc
sub
call
mov
repz
lret
jb
pop
add
add
jo
test
xor
mov
fiaddl
adc
jne
dec
and
daa
adc
xor
lock
shrl
popf
scas
sbb
imul
lods
push
test
pusha
pop
lds
or
add
pop
inc
mov
pop
inc
dec
jle
mov
dec
xchg
jne
cmpsl
or
aad
cmpsb
rclb
lret
fucomp
pop
imul
mov
cmc
imul
mov
mov
lahf
daa
fcomi
xlat
mov
mov
mov
pop
mov
inc
add
push
testl
in
push
push
out
imul
push
xor
jg
lret
lea
repz
pop
fs
or
push
sbb
dec
sub
mov
shrd
pusha
mov
addr16
push
push
and
or
push
out
sbb
mov
or
cld
cmpsl
loope
mov
movsl
rclb
stos
cs
pushf
daa
or
push
out
clc
pop
fs
cmp
push
shlb
push
in
subl
ds
aaa
popa
test
add
ds
daa
aam
sub
loop
cmp
sbb
sbb
aaa
lea
mov
mov
or
into
loope
gs
lahf
cmpsl
lret
and
inc
lds
cmp
push
add
fs
fldt
inc
inc
negb
lds
fsub
pop
adc
in
push
pop
in
flds
mov
jge
movsl
test
dec
sbb
pop
aad
push
sbb
mov
out
rcrl
adc
mov
mov
sbb
mov
jbe
mov
mov
or
lcall
mov
fs
lock
daa
insl
push
jg
xchg
enter
xchg
mov
or
sbb
inc
sub
mov
cwtl
outsb
xchg
mov
outsl
xchg
xchg
jle
fnsave
jle
or
pop
pop
cli
shl
xchg
aam
jl
xor
push
push
jb
cmp
rcrb
ja
mov
sub
das
popf
insb
inc
xchg
cli
xchg
les
stos
lahf
mov
movsb
int3
fwait
jb
xor
and
and
out
jle
cld
push
dec
pop
mov
iret
push
sub
xorl
jle
jg
out
dec
fnstsw
xchg
inc
jg
test
ds
fs
ja
in
or
xchg
xchg
imul
mov
jb
mov
sub
popa
aas
pop
xor
je
mov
cmc
xor
imul
jae
jmp
cmpsl
push
dec
xchg
icebp
mov
icebp
inc
add
bound
xchg
ss
push
call
jbe
aad
pop
callw
in
cmpsb
cld
add
inc
lds
ss
pop
int3
jl
daa
imul
and
xchg
outsb
xchg
sub
mov
pinsrw
lahf
cltd
pop
scas
nop
add
cltd
push
in
mov
mov
test
mov
jo,pt
dec
pop
fiaddl
clc
enter
sub
jmp
mov
mov
imul
shll
je
out
outsb
sbb
push
push
scas
inc
decb
adc
in
ss
xor
mov
dec
ficomps
test
mov
repnz
shll
sahf
fs
out
fistps
loop
pop
pop
ja
push
int
lock
cli
das
fisttps
dec
jecxz
addr16
jb
mov
mov
jno
mov
xor
cmp
pop
fcoms
jnp
push
shrb
popa
pop
inc
and
pop
incl
push
ss
push
pop
push
aad
add
lahf
push
out
pop
fwait
and
repz
dec
pusha
mov
mulb
jge
and
test
sti
loop
mov
ret
and
pop
mull
enter
pop
pop
filds
stos
and
adc
sti
lahf
xor
mov
stc
mov
adc
les
fdivrs
inc
test
pop
aas
jb
push
push
sub
insl
pop
inc
das
imul
cld
loopne
add
pop
scas
ret
in
sub
std
cli
test
mov
pushf
cmp
push
dec
jns
cli
aas
das
fsubs
int3
fbld
sbb
movsb
inc
test
cli
iret
dec
aad
insl
lea
movsl
in
shlb
repnz
fwait
push
mov
cmp
push
jne
inc
pop
ds
iret
sub
mov
add
jo
cltd
in
call
mov
xchg
fistps
lds
roll
popf
jp
add
push
movsb
lods
mov
cmpsb
xor
xchg
cs
sub
lcall
mov
add
and
xchg
inc
jne
xchg
mov
add
mov
testb
rcrb
pushf
add
cmpsl
push
mov
scas
dec
cmpl
cmc
fwait
je
cmp
scas
shll
fidivrs
xchg
cmp
movsl
repnz
add
add
pop
sbb
lcall
ds
mov
sub
or
jecxz
pop
jb
loop
cli
mov
xor
and
pop
ss
mov
jge
push
dec
add
in
push
aad
enter
push
repz
pop
pop
shrl
pop
repnz
pop
dec
fdivr
or
push
jp
xchg
cwtl
xchg
addr16
js
mov
mov
xor
out
xor
mov
clc
jno
mov
aad
int3
test
adc
lcall
loopne
mov
cwtl
cmpsl
ja
inc
sbb
mov
lret
lahf
pop
jle
out
xor
inc
inc
stos
sbb
push
and
in
leave
push
and
lods
in
and
cmp
add
dec
jo,pt
movsb
add
loopne
dec
sub
adc
lret
sub
fadds
inc
mov
add
into
push
je
cli
jbe
mov
movsl
or
icebp
dec
push
jnp
ljmp
sbb
mov
xchg
out
rol
or
and
call
sub
andb
mov
in
xor
mov
bound
cld
ljmp
mov
push
lock
cmpsl
inc
mov
imul
and
outsl
cmpsb
lods
fsubrs
mov
lock
add
in
fmuls
mov
cmp
imul
cmpsl
push
cld
pop
sbb
pop
stos
xchg
xor
jg
push
adc
mov
push
incl
imul
jle
test
cmc
je
fisubrs
and
mov
pop
xchg
das
mov
push
and
enter
pop
cmp
sub
mov
sbb
dec
cmpsl
sub
xlat
nop
and
mov
idivb
mov
idivl
ja
mov
push
das
js
jl
popa
push
mov
mov
xchg
fbld
stc
fsubl
cwtl
movsb
andl
fdivl
jae
xchg
lock
jl
adc
mov
sbb
insb
jg
push
inc
fwait
stos
and
cmp
rcrl
aaa
mov
leave
jnp
cltd
inc
cmp
xor
fdivrs
push
notb
lods
je
adc
mov
jno
sub
or
sbb
inc
pop
and
cmp
xchg
push
hlt
ss
inc
and
sub
add
push
inc
push
add
cmpsl
jns
in
enter
je
dec
lret
add
iret
fbld
movsb
shll
ja
mov
mov
mov
pop
movsl
mov
inc
pop
gs
bound
pop
push
stos
clc
mov
mov
pop
cmp
fidivs
int
dec
mov
sbb
lcall
rcr
es
adc
repz
enter
mov
dec
stc
loop
fyl2x
dec
repz
mov
in
ja
mov
and
jp
inc
pop
pop
rcr
data16
xor
mov
cli
adc
xchg
enter
mov
xorb
lock
mov
jl
or
mov
insb
xchg
test
out
sub
es
pop
lea
and
nop
movsl
xchg
pushf
cmp
rcll
mov
mov
leave
sbb
cmc
lcall
ret
lock
mov
inc
pop
out
cmpsl
movsb
add
push
dec
add
pop
loop
mov
jne
js
fbld
in
dec
aas
jo
push
push
out
cs
push
cmpsb
int3
int
xchg
aaa
push
enter
inc
jo
mov
lcall
cmpsl
mov
les
mov
lahf
mov
jo
adc
hlt
pop
push
jno
sbb
push
movsb
push
roll
sub
lods
rolb
and
or
jp
cld
sarb
je
frstor
jl
scas
adc
pop
daa
add
ds
cmp
dec
inc
lahf
fwait
popf
in
jne
jl
pop
mov
or
in
mov
lahf
jne
vpxor
or
push
mov
mov
add
pop
cmc
cmc
mov
das
je
test
push
stc
test
inc
mov
dec
xchg
push
cmpsl
mov
mov
stc
and
jnp
jmp
or
dec
jp
mov
and
sahf
or
imul
arpl
cmp
jb
add
jae
xorb
lret
addr16
popa
xor
cmp
lahf
cmpsb
into
and
aam
and
loopne
dec
scas
inc
sub
xchg
daa
jne
test
imul
jae
aas
mov
stos
jge
push
adc
shrl
cmp
or
std
nop
andb
mov
cwtl
push
test
sahf
or
imul
stc
outsb
jno
jns
mov
inc
mov
loope
pop
push
loope
jbe
mov
shl
jmp
ljmp
sub
sub
lds
jg
and
out
mov
dec
les
outsb
jns
adc
mov
imul
test
in
lds
inc
dec
inc
js
cld
mov
cld
jmp
cmp
jb
cmc
lds
movsl
push
stos
inc
sbb
fwait
fs
mov
les
inc
aas
orl
jne
jo
jmp
xor
fwait
hlt
dec
hlt
sbb
cmp
add
xchg
les
or
inc
test
mov
stos
sbb
cld
pop
push
enter
cmp
sbb
add
hlt
pop
pop
inc
inc
test
daa
sbb
arpl
pop
jmp
or
insb
test
and
sahf
test
add
shl
aas
xor
inc
enter
and
add
ss
add
ds
les
inc
pop
pop
adc
test
xor
int
popa
inc
mov
pop
int
mov
sarl
aam
xchg
repnz
xor
mov
out
xor
mov
std
sbb
imul
testb
scas
sar
xchg
mov
cld
adc
xchg
mov
mov
inc
and
push
push
and
xchg
dec
rcrl
imul
sar
or
xchg
jle
cmpl
jo
roll
pop
xor
jbe
aaa
push
push
add
or
push
add
jnp
lret
je
sub
adc
into
dec
cwtl
xchg
pop
mov
sbb
imul
inc
aaa
mov
jmp
push
push
mov
inc
dec
data16
cli
inc
mov
xor
jle
mov
push
pop
pushf
xor
lret
xor
bound
dec
xor
enter
jmp
subb
clc
mov
scas
jle
aaa
dec
xor
jl
pop
jno
imul
lret
push
mov
adc
adc
or
xor
in
mov
xor
bound
push
das
push
and
or
frstor
ljmp
xor
and
pushf
mov
and
cwtl
icebp
aas
addr16
or
and
stos
xor
outsl
sub
aad
or
pop
xor
int
xchg
in
inc
adc
data16
mov
mov
push
insb
inc
test
arpl
jl
push
lods
mov
repz
push
mov
inc
xor
mov
cmpsl
out
xlat
inc
push
fwait
ss
enter
mov
or
mov
dec
push
sub
add
movsl
push
orb
pop
xchg
addr16
push
repnz
pop
jl
fmull
lahf
roll
xchg
loopne
mov
ss
pop
pop
xchg
lcall
cmpsl
adcb
sahf
or
test
mov
mov
lret
daa
and
inc
mov
sbb
insb
mov
shrb
lods
arpl
sub
imul
scas
mov
pop
xlat
push
inc
fsubrl
cmc
sbb
mov
sub
cmpsl
clc
sbb
jbe
pop
or
dec
popf
imul
loopne
xchg
test
xlat
and
xlat
scas
cs
rolb
pop
adcb
push
movsl
mov
frstor
mov
xor
cwtl
jne
ds
cmp
in
dec
mov
xor
fwait
sub
popa
xor
inc
mov
sbb
and
sub
xchg
adc
and
aas
nop
inc
add
push
sub
subl
repnz
cltd
mov
jnp
mov
or
mov
subb
test
jns
mov
mov
sbb
dec
repz
popf
xor
popa
jmp
pop
movsl
add
pusha
push
pushf
inc
mov
cmp
rcrb
push
dec
stos
shlb
int
outsb
movhps
lock
cmp
pop
and
popf
int
fsubl
and
stc
or
xor
mov
xor
lds
sub
xor
sbb
movsl
lock
cli
pmulhuw
imul
bnd
in
int
and
popf
inc
xor
cld
xor
xor
dec
jb
inc
or
and
sub
dec
cmp
lahf
add
pop
pop
dec
pop
mov
jnp
popa
fwait
stos
jmp
pusha
xor
inc
mov
mov
xor
inc
mov
mov
pop
xchg
or
xor
es
lret
mov
popf
pop
sbb
or
in
jg
pushf
xor
fmuls
lock
test
xor
dec
icebp
push
fwait
adc
sarl
lahf
push
cmpsl
cmp
sarl
dec
sbb
daa
sub
fnstenv
fisubrl
cmp
xor
adc
lret
jl
int
mov
pushf
xchg
lods
divb
stc
lret
mov
mov
and
mov
pop
cmp
xor
imul
call
and
hlt
xor
cmc
pushf
and
aaa
jl
test
adc
enter
lods
sbb
dec
or
mov
hlt
and
popa
sub
popa
aam
psllq
push
jg
jmp
jge
xor
jge
sahf
pop
sbb
sti
and
jp
ret
out
outsb
or
push
mov
pop
shrl
mov
xchg
decl
pushf
fcoml
and
call
xlat
leave
fs
lcall
outsb
test
popa
add
fisttps
sbb
dec
lds
das
pushf
mov
gs
pop
xchg
pop
lea
cltd
xor
mov
aas
add
xor
mov
and
sub
fistpl
mov
outsb
sbb
push
lret
mov
xor
or
js
sti
inc
mov
bound
mov
push
jmp
inc
jbe
pop
shl
andb
push
mov
rorl
in
mov
test
loop
mull
cmp
pop
mov
dec
sbb
jae
repz
xor
xchg
clc
xor
sub
inc
data16
aaa
jne
imul
add
ljmp
fldt
xchg
dec
sbbb
pop
push
lds
mov
add
xlat
xchg
cmp
addr16
add
mov
mov
call
loop
adcl
push
pop
xchg
jb
std
cmp
cli
ljmp
jns
pop
in
cmp
push
jge
inc
arpl
jo
mov
jge
es
cmpsl
outsb
stos
dec
into
fwait
test
insl
sti
cltd
jge
inc
bnd
pop
cmpsl
arpl
fdivrl
js
movsb
popa
movsb
or
in
fucomi
adc
scas
cmc
mov
xchg
sar
rorb
out
aam
outsl
add
andl
xor
cmpsl
mov
pusha
inc
movsb
bound
jns
push
jle
add
mov
pop
repz
xor
ss
pop
stc
xchg
cmp
xor
orl
and
add
and
testl
mov
sbb
push
test
pop
push
xchg
dec
fildl
dec
shl
mov
cmpb
inc
sub
ret
addb
loopne
pop
adcb
jno
and
xor
bound
repz
jg
imul
subb
arpl
mov
cmp
xor
push
push
sbb
int
sub
mov
shufps
loope
xlat
test
lahf
mov
mov
pop
jo
adc
jne
notb
mov
add
and
xchg
loop
movsb
push
push
jl
jmp
movsl
ljmp
xchg
xor
leave
cmc
mov
fs
out
mov
xor
lcall
and
cmp
and
in
fnsave
xor
cmc
xor
adc
mov
and
push
dec
in
lret
jns
dec
mov
sbb
loopne
or
mov
pop
out
sbb
inc
cs
jae
cwtl
mov
add
fwait
lret
enter
or
mov
sbb
mov
icebp
pop
fnstcw
mov
pop
mov
dec
dec
pop
lret
daa
cmc
arpl
sub
push
dec
sub
enter
test
popf
sub
lret
push
stos
addr16
mov
mov
xor
xor
mov
push
repz
outsb
mull
xchg
xchg
in
arpl
inc
inc
dec
lds
dec
adc
fwait
gs
fs
and
fnstcw
and
or
xchg
sub
test
popa
mov
sub
mov
or
adc
scas
jl
fyl2xp1
jmp
dec
lcall
xor
mov
dec
cmp
out
shlb
cmpsl
arpl
lds
inc
push
fsts
adc
fwait
jae
pop
adc
sub
aas
adc
iret
and
in
dec
sub
lret
sub
xlat
cmp
test
test
lea
lcall
pop
popa
or
jge
movsl
xor
out
xor
add
call
xchg
inc
xchg
loopne
pop
outsb
push
test
out
test
loop
lret
cld
push
jae
ss
sub
pop
int
pop
pop
xchg
jle
mov
or
in
bound
cmp
jle
push
in
or
dec
pop
in
inc
dec
sbb
pushl
mov
or
popf
sub
mov
inc
cwtl
sbb
popa
mov
sti
rcll
pop
iret
outsl
ret
ds
push
stos
or
sarb
int
int
adc
lea
jle
add
or
add
movsl
mov
sbb
clc
cltd
sbb
mov
ret
fwait
xchg
dec
ret
iret
hlt
sbb
cmc
dec
adc
in
iret
jae
loopne
jl
pushf
lret
inc
mov
cltd
inc
xlat
xchg
es
xor
stc
push
stc
pop
mov
or
sahf
fs
insl
mov
inc
aad
out
xor
subl
or
push
shlb
xor
das
xor
mov
pushf
mov
or
or
clc
into
in
cltd
add
cmp
loop
das
push
add
push
pop
es
unpckhps
pop
test
movsl
and
fildll
push
add
push
jbe
jno
daa
popf
movsl
mov
mov
insl
jne
adcb
sbb
mov
popa
dec
movsbl
rcll
mulb
lods
lea
push
xor
jle
jmp
loop
adc
cmp
pop
imul
outsb
jb
movsl
add
xor
fmull
or
fisubrs
xchg
jl
loope
pop
jo
ffree
and
fstps
popa
push
lods
xor
stc
add
loopne
mov
in
pop
ret
cltd
inc
pusha
xor
dec
mov
push
pop
and
jge
andl
mulb
inc
mov
xor
mov
adc
pop
dec
outsb
fisttpl
cmp
mov
das
cltd
dec
or
test
insb
in
leave
jp
or
lds
xchg
es
dec
lods
and
idivl
popa
pop
pop
sbbl
jo
push
pop
and
lds
fistps
push
test
loop
sbb
dec
and
std
dec
int3
mov
in
dec
arpl
cmc
jmp
rcrl
sub
dec
roll
mov
orl
push
xchg
and
inc
loope
ret
add
dec
int3
clc
jmp
sbb
inc
insl
adc
push
sub
les
push
jl
fwait
or
idiv
cmp
mov
sbb
movsl
xor
movsb
xor
enter
or
mov
pop
loope
aam
dec
jne
cmpsb
andl
test
mov
pop
jle
shll
mov
push
mov
sbb
cmpsb
aad
out
mov
mov
stos
mov
mov
mov
cmp
test
add
out
pop
ficomps
add
dec
lds
mov
mov
fwait
repnz
push
mov
or
popa
or
lods
jae
rcl
leave
into
jmp
stc
insb
in
inc
pop
and
jno
test
mov
jmp
mov
xchg
mov
ret
xor
pusha
aas
xlat
cmp
incl
ja
xchg
adc
lods
sarl
mov
aas
fistps
push
lret
push
sbb
lahf
fidivrs
lahf
pop
push
pop
xor
push
jne
sub
leave
and
inc
add
inc
shll
add
pop
add
mov
mov
sbb
push
jmp
loopne
add
xchg
sub
dec
aad
inc
enter
jmp
pop
scas
xor
iret
cmp
scas
sbb
movsl
pop
ret
sahf
adc
ss
inc
dec
sbb
inc
jecxz
dec
fldt
out
lock
cmp
rol
mov
loop
xchg
out
or
jo
jo
and
dec
jmp
mov
mov
fcoms
adc
icebp
xchg
mov
out
clc
loop
scas
xchg
pop
cli
xor
lea
aas
sub
idivl
jno
ljmp
in
mov
pmulhuw
sbb
xchg
mov
jns
mov
call
fisttps
daa
cmp
out
lds
sbb
in
cmp
jb
sbb
or
pop
ret
mov
clc
add
sahf
sti
repnz
aas
lds
loopne
add
out
dec
cmp
popa
lret
lret
mov
dec
push
jmp
ret
int3
in
pusha
dec
adc
inc
mov
lret
lret
mov
mov
dec
and
push
pop
push
rorl
js
jge
fildl
xchg
lret
push
pusha
call
and
jae
jb
std
push
nop
add
add
push
xchg
cmp
inc
lea
xor
addb
sbb
data16
mov
daa
sbb
cli
mov
js
xchg
dec
popa
adc
outsb
and
mov
jecxz
in
cmpsl
ret
push
movsb
pop
push
mov
pop
cwtl
push
and
jno
push
inc
push
in
pop
jae
inc
fdivl
mov
mov
test
push
or
mov
outsl
mov
mov
sbb
mov
cmpsb
fwait
lds
aam
cmp
notl
and
lret
jbe
stc
sub
mov
cld
xor
push
or
mov
sahf
mov
cwtl
mov
stc
pop
push
xchg
sbb
out
jo
rcll
scas
sbb
push
lret
jns
enter
popf
adc
or
stos
sub
mov
mov
or
fs
mov
sti
pop
sub
sbbl
aas
mov
bound
inc
es
xor
mov
or
cmp
xor
mov
jae
nop
xor
or
inc
loope
push
pop
inc
sbb
in
repz
dec
imul
mov
mov
or
pop
gs
adc
int
bound
inc
out
mov
ss
mov
xchg
fcomps
enter
mov
hlt
jmp
cmp
mov
daa
dec
fistl
pop
mov
loope
xchg
rcrb
flds
mov
enter
mov
in
sahf
xchg
mov
xchg
xchg
pop
mov
sub
or
mov
or
push
mov
cwtl
dec
mov
outsl
xchg
dec
addr16
je
ror
ds
pop
out
sub
pop
cwtl
mov
inc
icebp
repnz
loopne
inc
push
xchg
fcomps
sbb
push
aad
aas
push
pushl
sahf
sti
sarb
aaa
push
insb
cmpsl
pop
cmp
mov
sbb
in
mov
dec
gs
mov
xor
jl
inc
insb
pop
mov
ss
into
adc
jnp
sbb
adc
popa
push
and
xchg
fmull
cmp
push
loope
xor
adc
jno
outsl
mov
out
in
sti
pop
aad
test
mov
mov
xchg
insl
mov
ret
jo
or
adc
movb
daa
ret
rorb
jb
and
aam
adc
cmpsb
lret
cwtl
sub
or
stos
lock
loope
loop
inc
xchg
mov
inc
inc
or
rcll
mov
inc
sbb
frstor
fnstenv
test
daa
iret
and
daa
pop
add
addr16
sub
jo
popa
push
cltd
bound
cmpxchg
fs
pop
xor
xchg
push
jge
push
xchg
xor
pop
sbb
dec
or
lret
mov
jge
shll
loopne
addr16
mov
pop
pop
xorb
inc
push
pop
call
dec
std
inc
loope
mov
daa
scas
pop
mov
jmp
pop
push
les
test
out
or
repz
mov
lock
sbb
not
pusha
repz
xor
out
add
jl
pop
shll
push
lret
lahf
push
and
sub
inc
out
mov
jo
sub
rcl
pop
gs
push
mov
movsl
outsb
negb
iret
es
xor
dec
pop
test
adc
xor
mov
xchg
test
imul
cltd
xor
pop
fcompl
adc
xchg
dec
pop
or
sti
pushf
fdivr
daa
pop
push
aad
push
inc
cwtl
or
ds
cmp
ret
leave
xlat
pushf
xor
cmpsl
mov
and
loope
rcrb
adc
movsb
dec
cmp
out
movsl
push
mov
shl
insb
data16
mov
cmp
push
cltd
cli
mov
push
out
sub
arpl
arpl
in
mov
andb
push
test
sub
xor
add
das
lods
or
mov
data16
inc
jle
pop
bound
inc
sbb
inc
arpl
leave
and
mov
dec
jne
shll
sahf
sub
data16
and
cmpsb
push
cltd
into
cltd
inc
dec
roll
pop
mov
popl
int
push
or
pcmpeqb
sub
mulb
inc
popa
sub
hlt
stos
cmp
mov
xor
imul
outsb
loope
cmp
and
jns
mov
add
scas
stos
xchg
loope
fnstenv
test
loop
add
pop
mov
out
pop
mov
popa
int
cmp
stos
add
mov
sbb
js
pop
dec
mov
jae
xor
div
pop
xor
stc
sub
push
out
fmulp
ficoms
mov
jge
pushf
pop
lret
hlt
pusha
popa
adc
cmp
cltd
je
les
movsl
test
popa
xchg
cwtl
and
popf
jle
pusha
push
test
jle
add
jge
fs
mov
cmp
lds
cmp
push
leave
je
and
iret
addr16
cmpsl
stos
lea
xchg
add
icebp
or
adc
push
bound
js
sub
arpl
mov
xchg
mov
ja
pop
fstps
mov
push
scas
fwait
cmpsl
cld
sahf
jmp
imul
sub
lret
push
dec
call
fsubrs
mov
inc
lahf
pop
bound
fcomps
loop,pn
inc
xchg
push
mov
shll
stos
and
add
push
xchg
bound
add
popf
sahf
fisttps
je
mov
add
fs
mov
mov
sbbb
or
in
jbe
ror
mov
fisubrs
out
push
dec
ss
sbb
subl
repz
pop
or
xor
add
jmp
cli
out
dec
and
sbb
dec
pop
pop
cmpsl
je
and
addr16
es
pop
mov
xor
loope
xchg
insl
ret
and
xchg
pop
daa
and
mov
sbb
movsl
rorl
pop
sub
xor
or
jae
pop
negb
mov
notb
call
call
add
fisttps
push
icebp
xchg
add
sbb
popa
sbbb
aam
or
testb
es
push
mov
xchg
lods
adc
jb
xor
sub
adc
loop
es
mov
xor
lahf
adc
and
es
adcl
mov
pop
pop
les
or
out
xlat
cmp
dec
outsl
adc
int3
inc
jle
push
dec
cmc
xchg
lea
inc
dec
and
sbb
push
mov
xor
aad
mov
jl
aaa
dec
inc
shrb
mov
cmpsl
sub
adc
push
cltd
sub
push
das
cmp
ja
mov
inc
stos
jb
sbb
stos
jnp
loop
cmp
sarb
scas
icebp
sbb
mov
pop
xchg
in
outsl
xchg
cmp
push
bound
sbb
jne
in
xor
sub
dec
push
pop
test
xorl
faddl
lret
sti
std
loop
hlt
nop
cmp
arpl
bound
lds
xchg
adc
mov
jge
in
outsl
test
adc
je
inc
add
adc
rcrb
pop
mov
add
das
mov
xchg
repz
add
fidivrs
mov
cltd
cs
pop
sub
sbb
pop
dec
dec
add
div
mov
pop
and
int
xchg
and
hlt
arpl
outsb
push
sub
or
cmpsl
push
aas
add
jle
ss
ss
mov
mov
jl
push
outsl
cmp
call
push
dec
cmp
xchg
shlb
popa
pop
sbb
roll
pop
imul
fmuls
xchg
nop
or
pop
lea
xchg
fwait
pop
jmp
xor
dec
add
cli
adc
aas
das
inc
push
cmpsb
dec
mov
fidivs
popa
mov
dec
aam
xor
fnsave
cmpsl
in
sbb
in
jbe
xorw
scas
in
xor
dec
jl
das
cmp
xchg
enter
lods
xor
rolb
lock
out
sbb
stos
outsl
mov
or
cmp
fs
in
cmp
push
pop
fnstsw
add
jg
xchg
outsl
push
push
test
push
lret
xor
sub
pop
and
repnz
adc
inc
hlt
xchg
inc
cmc
stc
sbb
add
in
add
inc
imul
lods
sub
lret
inc
scas
cmp
bnd
repnz
xchg
lods
rcll
scas
add
dec
shr
sub
stos
mov
sahf
xor
push
aas
je
add
xchg
push
dec
faddl
inc
xor
fwait
or
mov
jg
stc
hlt
es
pop
cmpsb
dec
xor
iret
stos
dec
fwait
in
dec
push
xor
and
lods
aaa
sbb
fs
rcrl
into
adc
shlb
xor
imul
mov
xchg
and
xchg
lret
popa
push
push
aaa
add
dec
mov
xchg
aaa
inc
mov
fadds
sbb
das
adc
mov
mov
lea
push
push
push
xchg
push
xor
fisubl
movaps
aam
pop
dec
rcrb
dec
mov
mov
imul
lea
xor
xor
fdiv
sti
sub
sbb
cmp
adc
repnz
cmpsb
mov
pusha
clc
pusha
xor
dec
inc
arpl
movsl
xchg
fldt
jge
xor
sbb
js
pop
push
xchg
cmp
mov
fsts
imul
push
jmp
and
mov
jge
pop
fcompl
cmp
mov
sbb
aaa
lahf
push
in
fstps
xor
dec
popf
cli
adc
push
cmp
jb,pt
inc
or
cmc
sbb
sbb
sub
dec
xchg
sub
movl
pusha
cmpl
pop
push
mov
js
ret
jbe
lret
out
sbb
and
pusha
rclb
aaa
movsl
xor
fbstp
icebp
and
mov
add
cmc
iret
pop
mov
mov
cld
mov
lret
push
sahf
pop
inc
ret
lods
addb
dec
mov
pop
scas
fnstsw
xor
or
aam
push
rol
mov
addl
cmpsl
mov
out
mov
mov
pop
filds
or
cwtl
jns
in
or
repnz
loope
mov
imul
xchg
cltd
jle
imul
ret
xchg
push
mov
bound
vhsubps
jne
adc
and
sub
stos
mov
cmp
outsb
xor
dec
movsb
mov
sub
popa
call
pop
filds
push
test
adc
adc
gs
fwait
sub
lods
cmpsl
push
mov
xchg
add
sub
cld
popf
sarb
loope
jo
dec
xchg
int3
xlat
push
lea
outsb
sbb
push
pusha
sbb
cmp
mov
stos
in
jno
sar
jg
pop
sbb
out
push
adc
add
mov
fs
out
pop
xchg
mov
jae
int3
sti
ret
push
mov
add
das
in
inc
mov
xorb
scas
and
mov
jno
xchg
cli
mov
sub
mov
sub
push
loope
lock
rorb
lods
hlt
inc
movsb
inc
addr16
movsl
and
icebp
sub
fs
jge
int
loope
jnp
and
xlat
jl
ss
or
xchg
movsb
aam
fwait
and
adc
addr16
std
fistpl
sbb
xor
mov
jg
fdivl
test
push
rcrb
clc
inc
int
sahf
sub
mov
cs
jle
pop
push
les
fwait
aaa
cmpsl
jno
repz
mov
pusha
dec
repz
and
into
mov
cltd
mov
and
and
dec
sbb
jns
xor
xchg
ret
lds
dec
sub
call
adcb
rol
or
mov
dec
sub
out
shlb
mov
into
mov
or
inc
xor
fldl
in
sbb
fstpl
fdivl
push
xchg
mov
jbe
mov
cmpsl
xor
in
dec
testl
in
dec
push
adc
addl
jne
pop
rorb
cli
hlt
shlb
data16
sub
jecxz
jo
out
movsl
lea
cmp
push
hlt
cmpsb
inc
dec
mov
sub
aas
lea
into
dec
pop
ja
jbe
jge
fs
cmpl
loope
bound
jg
cmp
outsb
mov
xchg
movsl
sarb
and
xchg
in
mov
pop
cmp
and
jecxz
imul
mov
hlt
sahf
insl
push
cmpsb
cltd
or
mov
xchg
ficomps
add
fdivl
incl
cmp
jnp
push
rcll
sbb
adc
in
mov
cmp
sti
out
cmpsb
pushf
in
cs
jg
push
cmp
mov
lods
nop
bnd
and
inc
fistps
dec
cmp
xchg
jae
cmpsb
div
jo
daa
cmp
out
add
lock
mov
pop
daa
cwtl
jmp
xchg
mov
std
push
in
inc
popf
or
push
test
les
xor
mov
xor
xor
mov
cmpsb
mov
test
sbb
fcoms
mov
add
ficompl
mov
ja
scas
pop
push
push
dec
inc
enter
lcall
cmp
or
imul
inc
mov
jns
cmpsl
std
fcmovnb
cmc
pop
inc
inc
call
sbb
das
sbb
cmp
cmp
push
mov
pushf
lds
shlb
repz
lgs
ss
lret
or
fadds
nop
push
dec
rcrb
or
mov
dec
cmp
add
sbb
mov
dec
movsl
xor
xchg
sahf
inc
or
or
push
mov
out
xchg
sub
mov
mov
xchg
pop
stc
lret
jb
mov
sbb
scas
aam
or
out
jl
jne
xor
dec
adc
pop
mov
push
enter
push
loop
in
scas
stc
xchg
or
mov
test
xor
mov
ret
insb
adc
and
push
popa
popa
push
daa
push
push
mov
int
mov
idivl
subb
pushf
pushf
lret
mov
outsb
je
cmp
push
cmp
push
movlps
fs
pop
rorb
in
test
sbb
pop
mov
into
cmp
addr16
sbb
or
sbb
jb
pop
outsl
or
into
jnp
decb
cs
mov
mov
adc
jmp
shrb
nop
notl
int
mov
sbb
pop
mov
push
push
ljmp
push
cmp
mov
sbb
popf
sub
das
orb
inc
call
xor
addb
or
rcrl
repnz
xchg
in
mov
mov
test
mov
adc
jg
mov
cmp
and
xlat
cmp
and
mov
mov
test
and
mov
mov
sub
cld
std
push
sub
cmp
sbb
push
xor
pop
jl
pop
add
jle
ja
pop
sbb
popf
and
bound
or
push
cmp
stc
and
test
or
xchg
pop
jne
cmp
insl
mov
or
sbb
mov
jl
ss
jnp
in
cmp
xor
int
call
sub
add
add
jmp
cmc
inc
jecxz
hlt
adc
icebp
lds
xor
lret
xor
mov
out
push
xrelease
dec
xchg
xor
ljmp
ret
pop
movsl
call
push
pushf
loope
int3
add
orl
xor
adc
test
add
mov
sbb
cmp
cmp
cmp
rol
dec
sahf
and
and
daa
dec
cmpsl
mov
mov
sbb
xor
sub
cmpsb
xor
inc
fimull
pop
xor
mov
jne
pop
jae
jnp
std
mov
push
mov
pusha
jbe
sbb
pop
mov
clc
in
mov
pop
stc
pop
cmp
mov
pop
pusha
dec
mov
or
add
sbb
addr16
adc
sub
add
xchg
push
mov
call
mov
rcll
psllw
stos
into
adcb
dec
push
mov
je
fwait
test
sbb
test
fildl
jb
cli
mov
mov
and
dec
ljmp
mov
cmc
lods
bound
xorl
pop
xchg
jno
jnp
adc
xor
push
arpl
bound
arpl
lret
cmp
call
mov
pop
rolb
or
pushf
add
int3
cltd
push
and
lahf
lock
test
dec
xchg
or
sub
cs
mov
fwait
inc
add
pop
mov
xor
ss
lods
ja
pop
mov
nop
in
xor
add
mov
clc
add
lea
shll
cmp
movsl
dec
cmpsl
pop
test
into
mov
inc
push
pop
scas
inc
xor
pop
mov
xor
call
scas
or
scas
cmc
hlt
outsb
sbb
insl
stc
mov
cs
sbb
push
mov
xor
and
adc
mull
bound
xor
hlt
dec
popa
lds
dec
std
mov
add
in
and
mov
pop
out
add
mov
sub
xor
xor
cmp
ss
loope
bound
and
adc
mov
mov
fstpt
daa
notl
jno
loop
dec
or
inc
mov
sbb
bnd
push
enter
movsl
mov
or
fdivrl
out
mov
add
mov
jmp
xchg
stc
pop
dec
sub
mov
stos
push
sti
and
ret
cs
mov
push
test
shll
xchg
stos
xchg
push
push
xor
cmp
insl
mov
adc
cmpsb
xchg
in
iret
shlb
pop
dec
imul
adc
xor
pop
xlat
pop
loop
xchg
xchg
pshufw
daa
inc
test
rclb
jg
cmc
push
popa
mov
stc
mov
in
push
mov
sub
stos
arpl
xor
iret
ds
arpl
mov
test
mov
in
inc
imul
cmpsb
adcb
je
ret
pop
mov
inc
sahf
mov
fwait
in
arpl
inc
lods
pusha
int3
rcrb
repz
xor
scas
repnz
clc
add
sbb
nop
out
outsb
xchg
push
inc
adc
insb
push
xchg
into
adc
lock
pop
sbb
jnp
pop
adc
dec
mov
test
xchg
dec
and
cmc
cmc
out
jno
repnz
sub
add
push
pop
shrb
pop
test
mov
mov
movsb
mov
movsl
rcrl
movsb
iret
cmpsl
ret
mov
pop
scas
sbb
jge
int
subl
lcall
cmpsb
mov
cmp
daa
jae
mov
sbb
movsl
fsubs
adc
mov
or
mov
cs
bts
add
mov
xor
es
xor
dec
lret
dec
and
outsl
mov
pusha
mov
adc
outsb
mov
inc
dec
jnp
je
jne
fwait
mov
adc
ja
addb
cli
or
mov
pushf
and
inc
mov
movsl
dec
xor
pop
out
xchg
out
xchg
or
push
and
mov
mov
adc
mov
jmp
in
lock
push
mov
dec
mov
movsb
mov
loopne
cmpsb
xor
sahf
cmp
jae
outsb
pop
xlat
imul
ret
in
hlt
lea
add
xlat
xchg
ja
dec
inc
push
js
cmpsl
adc
arpl
pop
mov
call
mov
xchg
push
gs
pop
dec
dec
pop
sbb
stos
xor
rclb
sub
pop
mov
loopne
je
mov
sbb
mov
mov
sub
orl
inc
mov
in
mov
insl
out
cwtl
repz
xchg
mov
cli
sub
repz
mov
pop
movsb
push
push
ret
push
mov
fldenv
pop
ss
jl
pop
lahf
or
xor
es
adc
out
sbb
mov
cmpsl
pop
movsl
push
inc
frstor
loopne
sub
adc
cltd
dec
push
and
sub
or
leave
dec
push
insl
or
pop
mov
les
addr16
pop
enter
shrl
in
jg
pop
es
and
push
cli
in
sbb
xchg
out
sub
in
out
mov
inc
sbb
jne
dec
aam
sub
mov
sbb
gs
xchg
jmp
sub
repz
and
and
es
sub
cmp
jg
ficomps
gs
dec
adc
sbb
popa
or
mov
cmp
mov
data16
jle,pn
test
mov
and
aad
hlt
cmp
jl
scas
push
or
xor
cmpsb
inc
mov
fcmovnb
out
js
jecxz
jae
inc
push
mov
pop
xor
xorl
adc
into
nop
sbb
pop
jno
xor
cltd
in
and
bound
cmp
les
fs
adc
cmpsb
push
rcll
icebp
push
sbb
mov
sar
out
sbb
jmp
daa
mov
cld
fisttpl
addr16
xor
mov
cmpsb
rorb
stos
add
in
inc
xor
sub
xor
nop
mov
jecxz
pop
int
sahf
loope
mov
xlat
xor
push
roll
mov
int3
js
mov
jns
pop
imul
inc
ss
jmp
push
fisubl
jne
xor
push
cli
xor
lock
cwtl
dec
xchg
loop
std
or
aaa
stos
das
dec
shl
mov
jge
test
pop
pushf
pop
movsl
std
sbb
fwait
mov
jne
and
cmc
sbb
jge
or
pusha
daa
xchg
xor
xchg
andb
pop
fdivs
aaa
and
pop
jge
mov
xor
or
push
adc
test
das
mov
sbb
mov
ds
sbb
stc
dec
ficoml
or
pop
icebp
sub
add
mov
mov
and
add
mov
jne
add
outsl
push
bound
push
xchg
fnsave
jg
shll
addb
loope
pop
xchg
pop
repz
fwait
cwtl
inc
mov
imul
outsb
gs
orl
mov
iret
cmc
sbb
xchg
sbb
movsl
mov
and
jnp
loope
rcr
das
or
jle
jo
repz
jnp
fdivs
mov
mov
outsl
fidivrs
or
inc
fcompl
and
sbb
jne
iret
fwait
jle
popa
sti
lcall
shrl
aaa
pop
cwtl
ja
addr16
dec
rcl
inc
lods
adc
mov
sub
jnp
in
adc
stc
xor
xor
mov
and
add
aam
mov
mov
xor
add
and
cmc
pop
out
outsl
ret
mov
dec
add
push
rorb
les
dec
cli
sub
mov
and
cmovs
xchg
xchg
test
xor
mov
xchg
push
dec
xor
jns
xor
xchg
imul
fadds
jbe
inc
divl
and
test
xchg
movsb
aas
jecxz
js
adc
in
xchg
xor
pusha
std
leave
imull
push
aad
mov
divl
mov
ret
dec
scas
pusha
out
adc
jae
popa
jmp
jb
and
mov
jle
mov
rolb
dec
xrelease
cmp
jo
sub
mov
aas
sub
lret
mov
cmpsl
loopne
jp
adc
cmpsb
adcb
lret
xchg
sub
push
adc
xchg
fmulp
clc
loopne
lret
pop
cmpsb
pop
and
lds
out
fwait
jae
dec
nop
out
pop
mov
adc
pop
mov
push
sbbb
push
inc
pop
mov
insb
dec
ret
mov
out
pop
xor
mov
ja
pop
imul
enter
push
lret
out
push
xor
xor
and
int3
popa
cmp
cmpsl
hlt
cltd
mov
jbe
mov
inc
data16
ficoms
aaa
ljmp
cltd
int3
cmp
dec
mov
daa
jbe
mov
pop
xor
mov
sub
pop
mov
pop
xchg
pop
cmp
sbb
daa
sub
rorb
daa
xor
pop
fstl
outsb
pop
sub
cltd
mov
lahf
xchg
cmp
int3
dec
outsb
pushf
fisubrl
add
scas
rclb
andb
inc
xchg
cld
push
rcll
pop
jp
xor
es
sbb
sahf
dec
inc
int
dec
cltd
test
push
dec
pop
cs
push
jge
adcl
adc
insb
inc
cltd
or
popa
sbb
sub
jle
xchg
mov
cmp
sbb
insb
add
ficompl
cmp
xchg
imul
xor
push
or
in
add
inc
jp
xor
sti
incl
loop
xor
in
jbe
push
bound
mov
sub
sbb
and
inc
nop
scas
mov
cmp
test
sub
jae
xor
add
sbb
ljmp
mulb
lcall
dec
leave
mov
pop
cmp
cmp
jl
mov
inc
or
push
outsl
sub
popf
mov
sub
cmp
iret
inc
sub
jge
mov
jo
loope
mov
sbb
sbb
pop
sbbb
call
gs
lahf
pushf
jae
sbb
fs
inc
pop
mov
push
outsl
sub
pop
je,pt
jge
repz
adc
sbb
fs
mov
xor
push
lds
int
loopne
inc
pop
pop
jl
ja
rclb
sub
mov
jbe
out
push
dec
sub
loope
fnop
out
push
rclb
arpl
adc
mov
shrb
mov
imul
inc
es
dec
xor
in
mov
data16
lods
mov
adc
aaa
imul
xor
dec
and
xor
inc
rorb
and
lret
xor
push
cmp
add
cmp
push
popfw
das
fwait
decl
xorb
mov
or
push
pop
lods
xor
pop
and
mov
mull
cs
cwtl
or
imul
xchg
imul
fstpl
dec
insl
shlb
cmpsb
imul
test
shll
pop
xor
fxch
jns
rorl
push
fbstp
xor
cld
sub
jl
pop
and
test
cmp
stos
arpl
outsb
mov
pop
ror
repnz
mov
and
mov
and
mov
jmp
jp
call
shlb
xchg
dec
mov
rcrb
iret
data16
sub
ja
xor
add
scas
or
push
test
mov
sbb
hlt
or
ss
inc
ret
cli
aam
xchg
addr16
dec
inc
lret
inc
add
add
repnz
and
ret
mov
arpl
cmp
push
and
fwait
roll
jbe
xchg
das
adc
fisubrs
fsubl
dec
inc
mov
sub
pop
xchg
movl
outsl
popa
mov
adc
es
xor
sub
test
or
cmp
push
push
shl
cmp
test
mov
arpl
sub
pop
int
cmpsl
loope
xchg
sbb
mov
idivl
cmp
enter
cmp
add
add
mov
ret
out
xorb
mov
adc
ljmp
dec
ret
ss
inc
lcall
icebp
add
pushf
jmp
std
or
and
inc
xor
lcall
push
sub
add
pop
mov
clc
cmp
dec
pavgb
addr16
adc
push
popf
pop
mov
stos
addr16
aad
mov
push
std
jno
adc
push
cmp
sub
sub
out
dec
mov
cmp
push
pop
cmp
xor
lea
adc
sbb
push
leave
jmp
fildl
xor
push
addb
andl
and
das
xchg
nop
lahf
mov
out
mov
pop
xor
cmp
es
or
leave
test
dec
outsl
sub
nop
xlat
enter
imulb
jb
inc
mov
cmpb
sti
aaa
mov
sub
ret
lret
pop
pop
add
cmp
mov
out
xchg
push
cmp
jmp
out
test
loop
mov
ss
rcll
ja
lods
sarb
sub
mov
ljmp
cmc
sbb
insb
add
xor
out
cmc
sub
cmc
mov
popa
fs
lret
adcl
repz
pop
int3
push
dec
mov
dec
xor
js
dec
or
xor
mov
pop
out
roll
out
push
jg
out
cmp
insb
dec
ljmp
adc
ret
cmp
dec
push
aas
jno
cmc
cmpsl
orl
pop
insl
ljmp
xor
aad
in
lret
in
aaa
pop
push
sarb
mov
xor
test
out
jl
lret
add
dec
inc
aaa
jl
fcoms
mov
loope
scas
cltd
mov
jbe
push
lret
sbb
mov
pop
dec
aas
dec
scas
ljmp
adc
dec
in
push
cmp
shll
lahf
ficompl
jp
aam
pop
cld
pop
ret
enter
or
mov
stc
call
test
xchg
mov
inc
mov
xlat
fcoms
or
ret
leave
jg
jno
jmp
imul
into
test
mov
adc
mov
in
out
cs
lss
mov
pop
subl
push
jnp
mov
loop
and
mov
mov
adc
stos
pusha
cmp
icebp
push
popa
xlat
push
fsubs
xor
pop
insl
mov
icebp
in
jmp
das
in
inc
cld
f2xm1
mov
fstl
add
pop
movsl
mov
and
mov
lods
add
in
jns
lea
add
adcl
push
xor
lds
std
test
sti
xchg
enter
mov
push
sub
adc
roll
pusha
inc
es
fldl
sarb
rolb
mov
sarb
jne
enter
dec
sub
bound
mov
xchg
rol
xchg
mov
xchg
xchg
inc
xorb
mulps
fyl2xp1
mov
mov
inc
rcll
fldcw
stc
jb
mov
pop
mov
inc
lds
mov
dec
mov
push
mov
shlb
sub
nop
js
andl
add
mov
push
jmp
mov
cmp
push
mov
or
sbb
xchg
in
cmp
inc
hlt
out
lret
mov
xor
jecxz
xor
inc
dec
imul
out
out
cs
cmp
js
lcall
mov
sub
adc
lret
popa
gs
inc
shll
add
sub
push
inc
das
mov
adc
insb
sub
add
pop
jmp
xchg
dec
outsl
inc
adcb
mov
gs
mov
repnz
pop
inc
pusha
or
pop
repz
cmp
xchg
dec
adc
pop
lds
jg
dec
icebp
es
sub
mov
lock
insl
ds
lret
dec
movsl
enter
xchg
mov
movsb
push
xchg
jge
nop
lods
popa
or
xor
gs
and
leave
clc
jbe
push
dec
test
icebp
orl
lock
jnp
xchg
imul
clc
mov
aas
popa
mov
ja
shrb
lock
lret
push
cmp
mov
aaa
push
mov
or
fldcw
adc
or
xchg
test
in
inc
test
and
sub
xor
mov
or
in
bound
sbb
into
icebp
cmpsl
xor
mov
rol
xor
adc
and
fstl
xchg
inc
mov
addl
bound
cltd
mov
cld
xlat
jnp
mov
push
lddqu
jg
je
mov
push
inc
iret
pop
test
pop
mov
inc
fucom
in
jno
pop
in
lods
daa
and
int
adc
in
pop
adc
addr16
xor
mov
mov
lahf
les
aaa
inc
xchg
xchg
je
mov
ret
fnstcw
pusha
cmp
and
mov
call
adc
repz
test
sbbb
cmp
mov
lret
mov
enter
mov
mov
add
sub
add
mov
xor
sti
jg
cmpsl
xor
cmpsl
in
dec
mov
std
inc
push
xor
xchg
add
sub
loope
pop
mov
imul
stc
xor
inc
inc
add
xor
jno
xor
mov
push
mov
push
push
xchg
and
xchg
mov
leave
insb
test
out
sbb
xor
xlat
movsl
jg
or
test
fcoms
test
mov
jno
mov
xchg
lods
stos
dec
adc
inc
cmpsl
leave
jns
dec
insb
scas
push
and
cli
sbb
ljmp
fcmovne
xchg
into
or
xchg
sub
leave
push
mov
xchg
jnp
adc
xor
sub
orb
jb
lock
lock
inc
arpl
loope
insb
pop
lock
pop
jg
sbb
aad
cltd
push
test
aam
push
das
adcb
xor
sbb
sub
pop
or
outsb
sbb
js
mov
mov
lods
pop
or
mov
dec
mov
mov
je
mov
mov
jno
xchg
push
je
and
xor
fists
push
mov
les
inc
sbb
fdivs
push
loope
push
es
pop
bound
dec
lods
jl
cld
mov
insb
adc
outsl
xchg
and
mov
addr16
test
in
add
or
outsl
xor
xchg
cmp
mov
push
sbb
add
mov
lea
sbbb
jp
add
pop
loop
xor
pop
test
sub
xchg
cmp
stos
mov
mov
cmp
xchg
or
cld
inc
mov
mov
xchg
mov
lret
popf
orb
stc
sbb
loope
pop
mov
mov
mov
out
xor
int
dec
int3
ret
pop
out
pop
and
mov
subb
mov
popa
sbb
pop
lret
push
pop
lea
outsb
scas
lods
xlat
adc
je
rcrl
lods
cmpsb
dec
sbb
lock
arpl
pop
daa
cmp
sub
retw
pop
scas
into
lds
adc
push
lahf
pop
inc
adc
sbb
sub
inc
dec
idivl
push
loop
push
subb
dec
pop
pop
popa
dec
or
mov
jmp
inc
pop
inc
fcomps
inc
test
test
mov
adc
stc
pusha
push
inc
mov
push
inc
daa
loopne
addr16
out
dec
inc
stc
jo
sub
jae
sub
orb
inc
sub
les
testb
aas
and
cmp
mov
push
mov
sbb
mov
xor
xor
pop
adc
in
ret
push
gs
cltd
pusha
movsb
mov
sub
lods
mov
push
lahf
divl
inc
push
sarb
test
sub
mov
mov
cmp
cli
stc
mov
xchg
or
push
mov
xchg
pushf
lods
cs
std
jo
loope
or
andl
and
pop
icebp
jecxz
xchg
sbb
lods
push
outsl
cmc
jo
dec
and
leave
xor
shl
aas
fnsave
loope
or
push
adc
adc
stos
push
mov
or
fiaddl
mov
mov
bound
dec
push
cmp
aaa
lret
jns
push
icebp
out
ret
out
repnz
jmp
rclb
ds
popa
or
xchg
rclb
fwait
aam
scas
pop
sahf
add
jns
dec
and
push
insb
aad
mov
cmp
xor
mov
fmuls
cs
cmp
sbb
xor
inc
mov
pop
pop
push
push
pop
mov
cltd
mov
icebp
pop
pushl
and
arpl
mov
and
xchg
sub
jo
enter
out
sub
jmp
pushl
jge
xchg
dec
lods
add
push
cmpsl
jns
aaa
popa
das
mov
pushf
addr16
lcall
pop
ss
fdivl
icebp
xor
xchg
testb
adc
popa
cmpsb
fisttpl
shrb
sbb
out
pop
jl
mov
ds
ret
test
pop
add
addr16
jns
icebp
sub
insb
mov
repnz
jg
or
sub
lea
stos
xorl
xchg
das
xchg
outsb
mov
sbb
xor
push
js
add
cmpsl
shl
pop
mov
jae
cmpsl
cli
mov
add
mov
jg
sbb
scas
cmp
push
mov
xor
add
inc
mov
sbb
push
pop
dec
mulb
in
jb
movsl
push
popa
aaa
nop
sahf
sbb
ret
xor
das
dec
shl
or
cwtl
adc
rolb
add
sti
inc
add
lods
sbb
aaa
scas
push
mov
sbb
cmpsb
std
sbb
test
pop
and
pop
sbb
arpl
inc
mov
popl
bound
push
sub
mov
pop
pop
xor
outsb
jmp
loop
rcrl
jae,pt
scas
jno
into
fsubrl
imul
cmc
mov
test
push
ficompl
mov
xchg
mov
mov
addr16
push
push
sbb
aaa
cmc
jnp
es
cmpsl
xchg
bnd
xchg
jo
push
pop
es
pop
add
mov
add
add
xor
xor
pusha
push
mov
xor
xchg
out
popl
lods
mov
cmpsl
push
mov
sub
and
sbb
test
outsl
sub
fwait
push
jno
add
sahf
das
sbb
xor
push
xor
dec
sti
fmull
xor
mov
insl
mov
stc
xor
cmp
xor
aas
lahf
push
rcrl
stos
mov
adc
iret
rcrb
xchg
lahf
push
les
divl
xchg
outsb
push
pop
sub
jge
xchg
divb
lods
popa
outsb
mov
xor
and
mov
push
fs
imul
cld
nop
ds
mov
sbb
sbb
pop
sbb
sbb
adc
pop
nop
pop
inc
adc
push
add
fimuls
pop
ret
imulb
sarl
repz
xchg
popa
imul
cmpsl
out
xlat
scas
movsb
cmp
push
cmp
repz
mov
inc
adc
test
mov
pop
jns
lret
in
repz
mov
test
xchg
jmp
sti
jecxz
stos
inc
out
jp
icebp
or
stos
pop
and
inc
cmp
mov
shlb
jmp
mov
iret
xor
lock
loop
add
pop
jb
sbb
fistpl
enter
pop
fstpl
sub
pop
push
lret
repz
mov
jge
xchg
movsl
sbbl
fisttpl
loopne
popa
mov
mov
push
mov
orl
popf
icebp
push
test
xchg
add
push
mov
aam
add
mov
adc
mov
arpl
cmp
push
aad
push
push
push
jnp
sbb
outsb
lds
push
outsl
push
mov
and
adc
pop
xorl
loope
cmp
int
jnp
les
xor
mov
xor
mov
sbb
cli
aad
lahf
cmp
das
mov
aas
pop
jnp
clc
or
int
pop
scas
cwtl
fnstenv
sbb
jo
inc
sti
xchg
push
inc
stos
into
dec
in
cmp
sbb
fnstsw
dec
fsubl
sbb
out
popf
mov
sti
fs
insb
sub
cmpsb
push
in
cmp
dec
sti
adc
jge
out
pop
stc
cwtl
and
jne
add
movsl
imul
sub
sbb
sbb
rcrb
jae
in
lea
mov
dec
xor
add
cmp
dec
jp
test
mov
sub
out
pop
repz
adc
or
test
xor
scas
jge
jl
add
adcl
ds
dec
mov
mov
pushf
dec
fs
cmp
das
inc
movsb
xor
add
push
mov
es
add
dec
fsubr
clc
stos
inc
rclb
jbe
sbb
popf
xor
xchg
faddp
mov
mov
clc
ds
mov
mov
add
stos
test
mov
cs
xchg
mov
out
jg
cld
sbb
inc
aam
jecxz
sub
enter
js
mov
or
push
out
scas
dec
cltd
mov
jmp
dec
negl
shrb
sbb
pop
push
cmp
dec
xchg
dec
pop
lcall
inc
xlat
sbb
and
psrlw
lds
cmp
hlt
stc
or
or
stos
loope
inc
jno
or
stos
icebp
stos
stc
and
arpl
int3
arpl
mov
test
outsb
dec
mov
pop
fisttps
inc
stos
sti
ja
pop
shll
repnz
xor
add
add
pop
loop
mov
pop
hlt
jnp
scas
dec
xor
mov
sbb
insl
fmuls
mov
and
cmp
push
xor
in
bnd
aaa
lock
push
lods
add
lcall
inc
adc
xchg
jge
push
xchg
jp
dec
mov
addb
arpl
xlat
jb
jnp
xchg
add
in
lcall
pop
dec
out
int3
das
enter
sbb
sub
mov
or
jge
sub
incb
fisubrl
sub
jecxz
mov
sysenter
or
inc
in
popf
mov
mov
cmp
jg
fs
pop
cmc
in
inc
enter
out
fstpl
stos
dec
sub
add
pop
pop
fwait
pop
sahf
cmc
sbb
xor
xchg
and
bound
xchg
je
cmp
mov
xlat
repnz
mov
xchg
pop
out
xor
daa
xor
jns
mulb
pop
push
subl
out
dec
sub
pushf
inc
cmpsl
sahf
mov
mov
xchg
push
fiadds
cli
dec
xor
dec
insl
fstpt
sub
xor
dec
loop
add
icebp
cmp
push
in
popf
add
fdivrl
sti
add
mov
mov
push
or
adc
add
das
xor
stc
in
jmp
nop
insb
adc
push
cli
or
sar
pop
push
cmp
adc
inc
dec
dec
lret
or
pop
popf
inc
pop
les
in
jge
das
sbb
xchg
add
mov
pop
pop
aas
fs
xor
fstpt
sub
mov
pop
mov
imul
fimuls
xchg
sahf
mov
pop
cmc
in
dec
xor
sub
xor
sbb
mov
adc
xchg
sbb
xor
push
mov
arpl
mov
inc
dec
pop
push
sub
outsb
xchg
cmp
sub
mov
mov
hlt
pop
js
dec
test
cmc
aaa
mov
les
fstps
addb
insl
clc
sbb
mov
jecxz
mov
addr16
addr16
inc
jmp
adc
stos
addr16
jb
leave
push
es
dec
xor
cmp
push
xor
xchg
xchg
jecxz
andb
stc
add
imul
in
fildl
aam
cmp
push
sbb
jno
rol
add
bound
lock
jne
cmp
inc
gs
test
repz
push
sbbb
push
jle
stc
push
sbbl
xchg
cmpsl
fldenv
rcrl
int3
sbb
dec
dec
outsl
cmp
mov
cmp
cmp
mov
jnp
test
jb
rcrl
xlat
cmp
test
pop
pop
ds
mov
imul
js
add
movsl
data16
and
scas
jmp
pop
aas
adc
mov
ret
sbb
orb
aam
fcmovb
inc
and
xchg
out
lret
fmuls
jb
sub
fiaddl
sbb
inc
pop
and
andb
xchg
decb
push
in
xor
adc
or
ds
outsb
test
or
repz
jbe
test
pop
arpl
fisttpll
and
arpl
and
cmp
pushl
mov
test
outsl
adc
clc
popf
and
or
xor
lds
add
pusha
stos
dec
pusha
hlt
rorl
pop
pusha
hlt
sti
out
cwtl
lcall
xchg
outsb
in
shrb
addr16
add
repnz
les
push
imul
lea
test
pushf
jno
movsb
cltd
gs
out
mulb
lock
mov
in
inc
xchg
xlat
sub
jecxz
imul
jecxz
xor
mov
or
push
stc
push
pop
and
sbb
addr16
sbbb
mov
andl
mov
lcall
push
bound
in
push
fdivrp
add
pop
xchg
das
add
in
jmp
ret
push
fwait
jge
rcr
mov
in
adc
sub
mov
notb
sbb
data16
fwait
lea
push
cmp
leave
mov
into
mov
sbbl
xchg
xlat
push
into
ljmp
jp
movsb
std
mov
fcompl
mov
dec
cmp
xor
add
sub
cs
mov
xlat
push
jg
icebp
and
cmpsl
push
sub
aam
sub
cmp
or
sbb
mov
mov
inc
sub
aad
pop
fistpl
dec
es
xor
inc
cmp
pop
insl
and
adc
mov
ljmp
cltd
cmp
mov
push
jae
loope
xchg
mov
insl
mov
mov
icebp
cmp
inc
cmpsl
sub
scas
jecxz
and
nop
hlt
dec
mov
pusha
movsb
xchg
or
mov
icebp
std
dec
xchg
pop
rolb
mov
fs
push
push
sar
mov
in
add
mov
push
mov
int3
ljmp
mov
add
mov
sbb
push
add
shrl
jne
xor
mov
decl
push
mov
lea
and
jae
lret
add
xchg
adc
and
aam
cltd
jmp
or
inc
mov
in
xchg
in
rol
in
leave
sub
scas
cmc
lahf
mov
js
sarb
xchg
jle
ret
mov
pop
xlat
jb
mov
aaa
xor
mov
das
aam
xor
dec
cs
mul
sub
movl
out
or
aaa
mov
ljmp
lcall
add
sub
add
mov
fninit
frstor
pusha
mov
push
dec
and
cmpb
call
pop
repz
lds
pop
mov
pop
xchg
cmp
xor
pop
xchg
jle
mov
dec
sbb
fisubrs
xchg
lret
out
inc
sub
mov
les
inc
or
xor
aaa
pushf
mov
outsl
loope
mov
jl
sub
out
inc
orl
es
js
pushf
pop
push
in
mov
add
dec
data16
movsl
push
mov
xor
jmp
lea
mov
cld
shll
movsl
inc
lds
mov
lcall
pop
std
push
inc
jns
daa
xchg
and
pop
mov
mov
out
out
xor
adc
fldt
aam
pop
xchg
xchg
mov
sbb
addb
ds
enter
nop
hlt
ljmp
xor
inc
mov
push
decl
jae
add
lock
pop
icebp
negb
ret
fstl
pop
jns
arpl
and
pop
int
sar
pop
pop
xor
ss
inc
ret
pusha
mov
stos
rcrb
out
and
adc
xor
inc
jne
dec
pusha
mov
dec
out
jo
cld
testb
mov
xchg
addl
mov
or
cltd
inc
mov
or
shll
insl
daa
xor
mov
jb
push
sub
in
jb
clc
std
dec
jo
pop
cld
jns
aad
push
daa
mov
pusha
lcall
sub
dec
cmp
xchg
xor
lods
lods
les
loope
das
sub
insb
jp
pop
cld
test
mov
mov
icebp
jb
or
add
imul
jne
pop
pop
mov
popa
adc
cwtl
lods
cwtl
inc
ret
outsl
push
mov
pop
mov
cli
sub
mov
inc
adc
test
sub
inc
sbb
je
bound
dec
jge
fimuls
ret
ret
mov
pop
sub
loopne
rcll
sbb
js
rorl
in
mov
popa
das
mov
push
pmullw
outsb
int3
adc
js
pop
and
loopne
inc
xor
cld
scas
lahf
movsb
push
loopne
mov
stc
jl
bound
sbb
leave
ficompl
test
add
test
rcrb
inc
out
mov
sub
pop
push
mov
mov
jne
cmp
bound
jge
cwtl
push
mov
dec
mov
push
pop
pop
cmp
cs
insb
faddl
movsl
xor
fistl
data16
pusha
addps
xchg
sti
xor
fsts
in
push
push
popf
cli
mov
xor
test
mov
cmp
in
mov
loop
es
dec
or
dec
or
int3
mov
ja
dec
jecxz
mov
cs
ret
sbb
cld
jae
sub
mov
pushf
fs
xchg
add
jl
push
sti
sbb
sbb
pop
jne
or
aam
jecxz
arpl
inc
add
mov
mov
push
pop
ljmp
jecxz
mov
fadds
jne
fwait
repnz
rcrl
in
insb
xor
adc
mov
std
mov
xor
dec
mov
dec
hlt
xchg
pop
or
sbb
inc
clc
dec
jo
xchg
jb
push
jge
mov
das
dec
in
out
sub
daa
scas
jle
mov
and
les
imul
jge
sbb
in
dec
fmuls
dec
aam
popa
xchg
mov
sub
stc
inc
sbb
pop
or
cmp
fstpt
cltd
push
outsb
adc
inc
and
jo
mov
push
push
mov
cld
movb
xor
adc
sbb
push
mov
sub
mov
sbbb
add
pop
sbb
ret
loopne
int3
vpunpckhdq
mov
sbb
inc
mov
push
adc
std
sub
es
mov
xchg
ret
jbe
out
adc
pusha
cltd
pop
dec
jmp
mov
arpl
add
xor
fimuls
or
mov
imul
add
lods
pop
xor
in
mov
shll
orb
mov
popa
pop
inc
mov
push
or
cltd
dec
lods
insl
mov
push
stc
lds
repz
sbb
or
in
lock
gs
aad
mov
dec
push
ja
jno
fwait
pop
add
cmp
mov
mov
xor
notl
or
test
out
pop
adc
dec
fbstp
xchg
mov
pushf
loope
push
clc
mov
push
and
cmp
icebp
pop
cmp
lods
aas
jns
and
xor
cmc
iret
cmp
mov
xchg
loopne
adc
loopne
addr16
xchg
xor
and
jbe
cltd
cmp
mov
mov
sbb
aad
cltd
jno
daa
pop
test
push
stos
mov
mov
adc
enter
xchg
pop
filds
jle
or
dec
cmpsl
sahf
and
add
fiaddl
pusha
sbb
test
mov
mov
jnp
lods
repnz
sub
mov
push
and
jae
test
xlat
jns
fistps
jl
lock
mov
or
and
aas
sbb
xor
cmp
movsb
fsts
adc
out
or
or
xchg
cmpsb
sbb
or
popa
inc
sahf
adc
repz
popf
aam
mov
mov
push
sbb
and
iret
pusha
pop
cmp
mov
in
mov
lods
cld
bound
icebp
loope
inc
mov
dec
push
inc
dec
out
imul
addr16
das
leave
pop
lea
fwait
les
mov
arpl
popf
xchg
add
aad
pop
sbb
jne
shll
and
movsl
xchg
rorl
pushf
xor
push
lock
mov
or
dec
ret
dec
outsb
inc
pop
sbb
ljmp
lea
mov
outsl
fldcw
xchg
add
pop
add
mov
mov
stos
mov
std
mov
xorl
imul
add
int
je
lds
dec
add
sarb
or
fildl
pop
lret
nop
pop
repz
into
mov
call
jp
push
mov
cmc
aaa
mov
iret
adc
testl
testl
inc
xor
xor
lret
in
fildl
dec
xor
mov
cmpsb
jb
aaa
jae
mov
and
adc
jp
addr16
sbb
mov
or
addr16
sbb
xchg
jns
fst
in
cmp
std
inc
jg
insl
add
sub
mov
sub
lock
fwait
mov
rolb
adc
jb
pop
int3
outsb
dec
lahf
movsl
stos
sub
xlat
xchg
mov
sbb
jnp
ret
jno
scas
jecxz
sbb
fistpll
rorb
xor
inc
fisubrl
push
int3
cmp
mov
sub
pop
loopne
movsl
cwtl
adc
add
mov
adc
cmc
push
cmpsb
imul
mov
test
pop
cmp
jecxz
or
popa
outsl
xor
repnz
and
lahf
sub
push
or
pop
fwait
and
ffreep
outsl
or
push
sbbb
mov
cwtl
mov
cwtl
aas
andl
adc
dec
lea
sbb
xlat
addb
sbb
dec
adc
adc
and
std
dec
pop
add
outsb
push
lret
mov
mov
or
inc
inc
loop
scas
cmp
adc
mov
das
sbb
gs
hlt
mov
aad
push
fistl
sarb
jmp
lcall
hlt
cmpsl
scas
adc
push
fdivl
data16
repnz
fsubs
out
mov
xchg
pushf
cmp
jle
or
xor
cmp
mov
decl
std
sbb
xor
lods
in
and
ds
mov
xor
bnd
mov
and
out
pop
adc
pop
push
mov
mull
leave
ret
rcrl
enter
hlt
out
lret
inc
add
test
bound
shlb
mov
sbb
mov
fwait
jmp
cli
cmp
aaa
popa
aaa
popa
push
int
in
in
dec
cmp
cmc
and
push
or
adc
cmp
mov
das
xchg
xchg
push
addr16
mov
xchg
daa
mov
mov
sub
lea
stc
dec
sub
add
jg
jecxz
push
mov
or
mov
adc
jae
jne
push
or
xor
xor
sbb
mov
test
lds
jne
fcom
add
or
sub
subb
or
out
rcl
jbe
dec
repz
in
mov
mov
orb
js
idivb
mov
cmpsb
dec
sti
xor
mov
push
icebp
xor
jae
fadds
pop
pop
push
pop
or
imul
jns
push
push
xlat
test
push
lret
sub
adc
lahf
push
sub
sub
mov
or
pop
and
sbb
lahf
rcr
pop
popf
fdivp
pop
inc
jno
mov
push
shrb
inc
lahf
repz
or
inc
and
sub
push
cld
sbb
xor
mov
push
pop
xlat
pop
push
xor
fs
pop
add
ja
dec
cs
jb
dec
repnz
or
iret
jmp
divl
in
and
or
sub
testl
out
xchg
lret
mov
or
ds
inc
sub
cwtl
sbb
pop
mov
movsl
lock
jns
mov
and
lock
jp
mov
aam
adc
cmp
outsl
sbb
mov
xor
ds
sti
insl
movsb
sub
cli
clc
pop
cmc
mov
sub
pop
outsb
mov
movsb
fcmovne
xor
ljmpw
pop
out
add
mov
add
rorb
imul
in
pop
mov
adc
jae
mov
push
bound
sub
pop
addr16
inc
and
hlt
cmp
enter
gs
adc
mov
repnz
mov
mov
addr16
mov
test
or
mov
aam
add
pop
inc
sbb
cmp
loopne
pop
fldt
inc
pop
push
jnp
and
add
or
sbb
mov
inc
cli
mov
movsl
or
push
pop
push
addr16
push
cmp
mov
incl
jnp
fidivl
hlt
mov
movsl
out
xor
insb
and
addb
je
lahf
ret
mov
sub
xchg
andl
ret
popf
mov
jae
xchg
xchg
daa
sub
push
cmc
push
fmuls
dec
jmp
push
adc
dec
push
rcrl
stos
inc
mov
cld
pop
cltd
sbb
adcl
cmp
inc
fcompl
pusha
pop
cmp
push
or
adc
dec
ja
rcrb
xor
mov
inc
repnz
or
gs
adc
lods
and
xor
lods
jns
xchg
jmp
push
or
pushf
inc
mov
cli
cmpl
pusha
or
sbb
xor
and
mov
mov
add
mov
push
movl
xchg
push
cmpsl
sbb
subl
nop
sub
icebp
lret
or
ljmp
ds
pop
mov
xchg
lret
add
cmpsb
hlt
mov
fldcw
arpl
inc
jno
outsb
or
cmp
push
sbb
jmp
cmp
xor
repnz
dec
sti
xchg
ss
mov
mov
cmp
mov
jg
adcl
cwtl
scas
pop
mov
aad
or
cli
test
aas
fistpll
pop
sbb
dec
sbb
inc
xor
pushf
popa
pop
popf
xor
clc
dec
fcomps
fidivl
xor
adc
pop
das
cmp
dec
pcmpgtw
adc
jno
fwait
repnz
test
pop
mov
imul
pop
jge
sbb
pop
mov
adc
lock
inc
or
popf
and
stos
mov
adc
push
es
fnsave
cld
adc
mov
jbe
cmp
fstpl
inc
mov
xor
cwtl
xchg
or
sub
cmp
mov
add
cltd
lea
sbb
imul
push
adc
popf
imul
jp
mov
or
push
and
push
leave
movsl
and
fcomp
arpl
mov
xchg
int3
cmpsb
movsl
or
cmpsb
in
fbstp
sbb
int
packssdw
test
push
xor
movsl
imul
mov
push
add
dec
push
and
cmp
mov
mov
jmp
sub
pop
add
cli
push
xor
dec
cmpsl
xor
cwtl
sbb
mov
cmc
mov
pop
mov
xchg
mov
outsb
aaa
pop
mov
xor
lods
dec
push
sbb
jns
mov
mulb
push
adc
imul
clc
jno
ficoml
cltd
jb
aaa
cmp
std
frstor
xor
test
in
pop
sbb
xor
jp
cmp
xchg
into
cmp
scas
jg
aad
xlat
icebp
pop
or
mov
mov
rorl
mov
mov
and
mov
pop
in
dec
pop
and
add
sub
daa
and
inc
adc
sub
jmp
adc
adcl
sbb
shr
or
pop
ret
out
inc
mov
sti
and
in
xor
adc
jle
xchg
and
adc
jno
in
adc
popa
xor
fldenv
mov
scas
aaa
jno
jge
push
push
mov
mov
sahf
std
and
gs
ss
insb
sahf
xor
dec
sbb
mov
addr16
xor
mov
pop
and
iret
mov
das
xor
mov
aaa
xchg
cs
in
gs
call
cmpsb
xor
mov
icebp
xchg
adc
in
insl
sbb
mov
sbb
pop
sbb
dec
xlat
push
addr16
mov
sub
xchg
jecxz
add
mov
imul
out
movsb
fs
sub
dec
dec
pop
sbb
jge
gs
dec
fs
mov
and
mov
jae
sbb
out
sbb
icebp
cmp
push
push
gs
xor
in
cmp
sbb
icebp
scas
mov
movsl
and
sbb
push
adc
movsb
cli
adc
lcall
and
or
lock
loope
jns
pop
sbb
sub
xchg
xor
adc
dec
and
sub
push
ljmp
cmpsb
push
inc
and
gs
pop
cli
cmp
inc
and
out
or
mov
test
jnp
xchg
mov
dec
pop
pushf
loop
sub
mov
rcrl
ret
frstor
inc
jne
cmpsl
xor
adc
daa
fs
xor
cld
cmpsb
das
jbe
cmpsl
push
insb
push
jns
and
sysret
push
jno
and
lahf
mov
xor
mov
add
inc
add
cwtl
cs
pop
mov
sbb
pop
popf
pop
sbb
jmp
inc
jmp
mov
xor
hlt
les
iret
popw
sbb
scas
sbb
arpl
repnz
gs
sahf
jmp
and
dec
adc
add
jb
rcl
scas
in
mov
inc
mov
and
pop
mov
add
pop
pop
mov
lahf
adc
mov
rcr
xchg
outsb
push
push
pop
orps
mov
add
mov
icebp
nop
arpl
in
sub
insb
ds
pushf
dec
or
pop
and
arpl
dec
jae
mov
lds
dec
hlt
ret
repz
mov
popf
mov
popf
push
mov
pushf
iret
mov
push
mov
iret
movsb
mov
int
mov
aam
les
mov
outsl
xchg
aam
scas
out
xchg
das
popf
dec
mov
and
movsl
cmpsb
sub
or
lea
aad
pop
xchg
adc
xor
push
or
shll
dec
mov
jne
add
sub
lds
ljmp
add
imul
lcall
and
mov
mov
cmpl
lds
stc
push
sub
test
pop
out
adc
cmp
and
inc
outsl
sbb
int
pop
mov
and
inc
in
incl
mov
xor
ret
inc
adc
xor
dec
lahf
inc
xor
push
cmp
aaa
mov
int3
adc
sub
fcmovu
jl
jp
gs
or
cmp
xchg
inc
icebp
sbbb
pop
inc
push
cmp
cmp
pop
and
dec
or
adcb
sub
adc
xchg
cld
dec
mov
ljmp
cli
xor
lret
inc
dec
jmp
dec
add
mov
lock
cltd
cltd
and
cwtl
and
clc
in
pop
add
fwait
jecxz
inc
test
arpl
inc
add
add
call
push
lcall
cmp
xor
mov
movsb
insl
cmpl
adc
inc
pop
inc
sub
jne
xor
and
xor
adc
push
sub
sub
push
push
mov
imul
xor
jecxz
cs
inc
jns
insb
adc
cli
xlat
jl
inc
mov
xor
add
scas
lret
test
fistl
aad
adc
in
add
mov
xchg
xchg
popf
adc
test
icebp
xchg
rorb
pop
std
sbb
or
mov
sub
sahf
xor
lock
dec
push
pusha
in
mov
add
cmp
cmp
repnz
push
add
sub
ds
mov
xor
and
jl
xor
icebp
push
fidivs
stc
pop
and
add
push
or
fnsave
mov
xor
cwtl
inc
inc
test
sbb
jg
push
jge
adc
test
push
sbbb
xorb
dec
push
jne
xchg
cmp
mov
jge
xor
mov
push
jne
add
es
jge
jmp
les
sti
test
loop
cld
jp
test
fs
pop
roll
add
cmp
inc
push
add
mov
pop
cmp
sbb
jge
lods
dec
icebp
or
popf
mov
jle
lods
int
and
inc
rcr
je
push
add
cmp
es
and
mov
jle
push
cmp
mov
dec
adc
xor
in
push
sub
pusha
pop
sbb
add
adc
gs
and
push
test
add
aas
daa
lods
sub
xchg
inc
lock
dec
lcall
sub
aaa
inc
loopne
sbb
scas
fstl
mov
mov
ficoml
mov
or
icebp
iret
push
and
idivl
or
sbb
add
push
sbb
adc
inc
cli
fisttps
stos
inc
loope
popa
aaa
in
dec
mov
daa
and
arpl
data16
clc
push
popf
stos
sbb
fs
or
dec
sub
out
pop
xchg
inc
inc
sub
leave
pop
add
or
push
adc
insl
jo
sub
xchg
pop
mov
aad
adc
pusha
pop
inc
or
into
leave
xor
fwait
sub
pop
inc
mov
jo
mov
in
xchg
xchg
arpl
push
or
aaa
or
out
std
pop
or
xor
push
sub
xchg
jne
lea
dec
add
and
push
or
repz
xlat
test
shl
jl
xchg
lock
es
inc
movups
gs
jp
push
bound
cltd
out
jp
repz
js
sub
xor
cmc
aaa
jne
mov
pop
adc
in
shlb
movsb
cmp
scas
mov
cmc
sbb
outsb
pop
inc
dec
xchg
mov
sbb
jo
cmpsw
push
add
out
inc
mov
cmp
push
adc
xchg
ret
mov
mov
outsl
ja
mov
ss
pop
add
daa
dec
push
or
jl
pop
aaa
push
push
xor
sarl
cmc
inc
pop
nop
negb
sub
test
pop
test
sub
xor
xor
mov
mov
sub
das
rcll
sub
adc
std
add
mov
mov
fs
scas
adc
mov
xor
cmp
testl
and
nop
jne
frstor
xchg
mov
and
pop
pop
das
repnz
mov
xchg
xchg
je
addr16
lret
lret
pop
hlt
pop
mov
out
mov
push
lods
or
mov
pop
repz
push
adc
daa
addr16
pop
insb
mov
imul
addr16
pop
jge
sti
or
pop
popf
push
pop
jno
addr16
icebp
sbb
jno
es
fwait
pop
xor
movsl
dec
fsubr
outsb
xchg
shll
fadd
mov
fst
loop
sahf
subl
dec
movb
aas
sbbb
test
stos
mov
outsb
pop
xchg
inc
aas
add
fs
add
dec
adc
push
scas
and
sub
adc
add
push
dec
add
pop
and
and
adc
push
imul
test
stc
pop
inc
xor
dec
cli
mov
loop
imul
fs
and
pop
negl
cmpsl
daa
pop
out
std
mov
or
sbb
sub
stc
xor
pop
subb
cmp
inc
scas
sbb
pop
mov
aas
pop
xchg
sti
mov
mov
sbb
pop
sub
inc
xor
mov
jmp
sbb
or
cmp
lahf
inc
xchg
movsl
xor
jle
das
ficompl
sti
jo
lcall
cmp
and
jp
test
out
lea
pop
jae
enter
dec
repz
pop
mov
bound
rcrb
clc
jl
lea
inc
push
clc
mov
sub
bswap
pop
cmp
adc
sbb
daa
sbb
popf
in
sub
jmp
or
fadds
sub
sbb
mov
lds
push
sbb
andl
pusha
cmp
dec
pop
leave
lods
or
lods
and
mov
lock
xor
and
divl
cmp
call
push
daa
test
push
xor
cmpsb
sub
adc
popa
fstpl
sbb
adc
add
pop
cmpsb
add
arpl
pushw
outsb
dec
sbb
mov
testl
mov
scas
das
outsb
mov
out
inc
cmp
pop
into
xor
pop
mov
mov
fld
hlt
pop
sbb
add
xchg
movsb
and
sub
cmovle
jae
cmp
movsl
aaa
stos
lcall
fs
lea
cmp
daa
rcrl
pop
popf
cmpsb
xor
and
sub
cmp
es
mov
addr16
push
sub
add
add
mov
push
or
adc
iret
xor
fwait
scas
mov
aaa
popf
scas
xchg
and
dec
rolb
mov
daa
adc
sti
cmp
repnz
shl
mov
loope
jae
loope
or
and
inc
mov
enter
repnz
test
mov
adc
js
dec
jge
out
fmul
add
jl
arpl
popf
jp
dec
jg
xor
in
hlt
test
arpl
dec
jno
adc
mov
sub
pop
sbb
dec
jbe
mov
pop
dec
adc
push
mov
push
ljmp
xor
xchg
call
cmpsb
leave
imul
sbb
mov
js
cld
cld
cmp
in
xchg
pop
jno
inc
push
lea
dec
repz
cmpsb
push
push
pusha
xchg
imul
in
stc
jae
dec
ret
enter
jae
xor
mov
aaa
add
bound
aad
and
xlat
mov
and
inc
aaa
fistl
sarb
pop
xor
or
sub
inc
cmpb
push
lea
sub
fdecstp
int3
fs
pop
mov
push
cs
xor
sub
inc
inc
inc
bound
gs
mov
hlt
xor
adcb
inc
lock
pop
mov
icebp
rol
jge
cmp
pushf
dec
rcrl
bound
loope
es
pop
ret
cmp
cli
push
xor
sbb
sub
or
pop
sub
jbe
push
rcrl
xlat
shll
add
pop
xor
das
lcall
pop
push
xor
dec
push
mov
jmp
or
ljmp
cmp
jle
push
push
push
jb
movsl
sbb
jmp
repz
xor
lcall
inc
sbb
cwtl
cmpsl
push
mov
imul
imul
xor
xor
inc
add
stc
nop
pop
jnp
movsl
roll
popa
lcall
addr16
jmp
sbb
push
lds
or
pop
lds
je
mov
insb
push
popa
out
xorl
adcb
lds
fsts
mov
xchg
cmpsb
jg
imul
add
popa
fwait
xchg
outsb
xor
jae
mov
out
mov
sbbb
leave
orl
mov
lods
mov
add
addb
hlt
add
sub
add
mov
ds
and
mov
xor
enter
repz
lcall
add
jae
push
in
test
xchg
or
xchg
jg
adc
xchg
out
cmpl
push
nop
mov
adc
add
mov
movsb
fsubl
pop
inc
jno
inc
push
mov
or
mov
jmp
mov
inc
cmp
jbe
mov
fcoms
inc
sbb
mov
movsl
adc
mov
adc
or
cwtl
pop
sbb
dec
push
xor
and
insl
cli
movsl
push
xchg
pop
and
mov
xor
push
dec
insl
pop
inc
pop
jecxz
xor
inc
or
daa
addr16
and
sbb
mov
pop
sbb
scas
orb
mov
les
int
jge
xchg
std
mov
xchg
xchg
xlat
decb
xchg
fdiv
mov
mov
xor
pminub
dec
loope
jae
cmp
add
out
outsl
sub
insb
or
shll
sub
xor
pushf
pop
icebp
sbbl
xchg
out
test
cld
test
cmpsl
arpl
pop
cmpsw
lret
sbb
push
mov
inc
add
mov
rorb
inc
and
pop
inc
adc
cmp
nop
jmp
add
inc
xor
iret
aam
mov
je
insl
or
icebp
jns
push
fwait
adc
push
mov
aad
sbb
sbb
les
rcl
negb
xchg
sahf
cmp
gs
pop
arpl
pop
pop
testl
xchg
mov
loop
pop
mov
mov
rcrl
je
popa
je
rorl
mov
test
ret
daa
fldt
cmpsl
in
jno
mov
in
dec
dec
cli
and
pop
out
add
mov
int
and
aad
lahf
mov
push
sbbl
mov
push
mov
sbb
stc
mov
push
insl
inc
xor
cli
inc
popa
xlat
fs
dec
std
mov
mov
jg
sbb
test
icebp
or
cmpsl
push
lcall
push
and
mov
pop
push
xor
inc
cmp
jmp
jno
pop
pop
in
fisubrl
sbbb
xor
insb
out
mov
jae
cmc
xchg
add
mov
ljmp
fdivs
int3
call
movsb
fdivp
rolb
mov
adc
fldl
outsl
mov
bound
cmpsl
imul
repz
and
sub
adc
data16
stos
xchg
cmc
fisubrs
lds
shl
push
bound
das
mov
cmp
js
jg
out
push
rcr
xchg
push
or
mov
jge
icebp
or
xchg
in
orb
out
les
dec
sbb
jmp
pop
dec
xor
scas
jns
mov
lret
jmp
xchg
jge
addr16
pop
xchg
and
xlat
cmp
and
xor
daa
lret
xchg
sbb
inc
xor
rcll
cmp
push
sub
and
std
mov
or
je
xchg
stos
fdivrs
add
push
push
mov
mov
pop
movsb
sub
and
xchg
addr16
scas
add
lret
out
aaa
sub
xor
dec
xor
dec
ss
jb
das
xor
mov
je
mov
push
lods
sbb
push
push
sub
jae
ds
sub
orb
adc
movsl
lcall
data16
jnp
jae
mov
cmp
lds
es
dec
lock
mov
inc
add
sahf
push
imul
stc
pop
imul
sbb
lahf
cmc
add
lret
pop
in
pop
pop
arpl
data16
inc
cmpsb
xchg
pop
inc
fadd
lds
test
lret
cmc
xor
inc
adc
jns
xor
sbb
xchg
cmp
inc
lcall
das
push
push
popf
mov
jge
es
test
pop
sbbb
jge
jo
inc
gs
and
outsl
sub
xor
sbb
cmp
in
pop
mov
scas
mov
xchg
scas
jns
lea
push
adc
movsb
aas
insl
push
test
mov
not
inc
inc
sub
rorl
xor
push
push
inc
pop
xchg
sbbb
mov
add
xor
scas
in
xor
and
mov
imul
inc
cmpsl
mov
lcall
adc
push
data16
pop
jp
cs
and
xchg
sbb
mov
imul
add
outsb
cmpb
test
inc
mov
mov
les
mov
mov
mov
cmp
sub
test
inc
xor
or
or
fildll
enter
leavew
xor
mov
jno
xchg
inc
cmp
sbb
jns
and
cmp
in
mov
sbb
cmp
and
pushl
loope
cmpsl
es
outsl
xchg
or
jbe
mov
jge
in
movsl
jns
jl
cmc
fcmovnu
add
or
mov
pop
iret
shrl
mov
mov
or
mov
inc
xor
out
pop
ja
movsb
movl
shl
push
fldenv
push
mov
sub
scas
cmpsb
sbb
jge
aam
rol
cmp
add
cli
push
add
adcl
adc
xor
sub
jno
popf
pop
popa
xchg
pop
imul
inc
push
cmp
inc
popa
cs
adc
imul
push
gs
cmpsb
fwait
pop
mov
cmpsl
cltd
sub
aas
mov
gs
shl
mul
lock
fwait
test
gs
dec
push
outsl
das
push
pop
cld
mov
cwtl
push
pop
xor
sub
lock
jge
and
xchg
mov
sahf
inc
sub
pop
sbb
ja
add
xor
daa
popa
cli
jge
mov
sar
bound
imul
inc
mov
stos
adc
iretw
movsl
push
sti
mov
dec
mov
iret
out
sub
rcr
loope
or
push
sahf
sarb
movl
pop
loop
imul
sbb
cmp
dec
fcoml
das
fdivl
stos
dec
hlt
repz
stos
sahf
jmp
bnd
outsl
arpl
aad
out
mov
dec
push
mov
enter
push
mov
xchg
dec
or
insl
aas
cs
incb
pop
stos
fstpt
xchg
adc
fsubr
shll
in
outsb
popf
inc
fists
add
xchg
lret
int
aas
cmp
daa
pop
sub
mov
outsl
out
outsl
xor
mov
add
fwait
dec
dec
out
in
andb
dec
es
push
insl
cmp
mov
dec
pop
cmp
xchg
lods
inc
jb
test
add
mov
pop
add
add
ss
jnp
std
and
pop
mov
cmpsl
pushf
sbbl
and
sub
in
aad
sbb
push
push
iret
daa
jmp
sahf
mov
xor
cmp
enter
popa
inc
xchg
dec
test
stc
jo
add
subl
xchg
rcrb
mov
ss
cmp
mov
out
mov
push
dec
scas
pop
fcoml
in
push
push
mov
fistl
inc
push
xchg
stos
xor
mov
enter
fwait
sub
dec
ljmp
fstpl
inc
in
ror
loope
mov
scas
jecxz
or
ljmp
lret
pop
mov
ss
call
inc
lcall
jmp
lods
sub
inc
cwtl
gs
jns
in
inc
push
xchg
in
fwait
xchg
shrl
pop
and
sbb
dec
jmp
jb
push
test
add
testb
inc
and
pop
inc
hlt
imul
xchg
or
ret
dec
inc
imul
popa
dec
fwait
pop
adc
jnp
xor
mov
cmp
loopne
xor
cmp
test
dec
mov
inc
xor
mov
pop
jle
orb
xchg
cmp
fistpll
mov
dec
inc
ja
mov
rcrb
pop
cli
adc
cmp
dec
xchg
adc
push
jle
popa
clc
pop
adc
xor
aaa
pop
jge
push
in
idivb
daa
dec
movzwl
xchg
test
xchg
push
cli
sbb
ret
es
lds
jne
adc
mov
test
ficoms
bnd
cmp
mov
sbb
enter
fstpt
mov
addb
sub
or
je
jb
scas
push
shl
push
sbb
fs
mov
mov
sbb
daa
mov
xchg
xor
in
ret
or
sbb
sbb
push
lret
sbb
jae
nop
push
outsb
pop
movsl
aaa
cmpl
rcrb
mov
mov
fwait
and
sbb
es
xor
shl
dec
xor
ja
jp
add
and
xor
lahf
push
add
inc
adc
adc
int3
pop
adc
jb
mov
scas
push
jle
adc
imul
orl
ds
out
lods
mov
jb
cmpsl
dec
ret
es
rclb
push
ret
sub
jl
dec
xor
das
mov
inc
rcrl
test
jecxz
arpl
pusha
push
lcall
xor
xchg
dec
addr16
xchg
test
push
mov
mov
mov
ret
add
and
aas
ss
mov
pop
sbb
cs
jne
jp
mov
pusha
inc
icebp
nop
xchg
lods
ficoml
mov
adc
shrl
stos
iret
pop
pop
mulb
xchg
ret
and
cmp
cmc
fisubs
sub
push
xor
push
cmpsl
test
pop
push
loope
sahf
fimuls
das
mov
icebp
add
xchg
mov
sub
push
xchg
mov
aaa
or
pop
cwtl
jnp
push
cmpsl
and
cmp
jmp
test
pop
cmc
lret
mov
mov
subl
lcall
daa
xor
and
and
add
in
mov
enter
sti
fistpl
gs
data16
ret
dec
mov
mov
sub
pop
xorb
scas
pushf
mov
notl
shr
push
daa
sub
xchg
cmp
mov
leave
addr16
xlat
lcall
mov
push
fstpt
xor
lods
dec
and
testb
push
xor
shll
out
loopne
inc
xor
aad
call
cld
push
in
adc
imull
sbb
pop
and
movsl
mov
daa
aad
add
test
call
lods
cmp
xor
pop
sub
rcrl
in
and
inc
xor
cmp
adcb
fdivrp
xlat
mov
pusha
fwait
cmp
dec
jae
test
popa
data16
add
or
test
mov
lret
inc
jo
lock
inc
adc
scas
insl
sub
mov
bound
and
lds
xor
dec
stos
sbb
fsubrs
add
test
xor
add
aad
lea
add
mov
adc
stos
jecxz
insl
testl
enter
pusha
cmpsl
push
es
or
xor
push
push
push
or
mov
aam
rep
jecxz
push
jle
sbb
pop
or
push
div
outsl
cmp
fsubl
add
and
inc
sbb
and
xor
fdivl
movsb
popf
mov
ja
or
mov
pop
mov
add
and
imul
movsb
out
or
sub
sbb
ds
push
icebp
mov
lods
cltd
jae
jl
in
xchg
xor
add
push
sub
les
mov
insb
mov
jmp
pop
pop
gs
aad
push
xchg
pop
in
movsl
fimull
scas
hlt
push
loope
sti
lods
daa
push
in
das
push
arpl
mov
jp
in
cmpsb
xchg
or
xor
fimuls
xor
mov
andb
cmp
aad
add
fcoms
mov
jge
cmp
pop
or
sbb
cmpsl
lock
adc
orb
cmp
xor
test
inc
addr16
jg
add
pop
mov
lret
leave
sti
addb
jb
dec
js
jle
call
fisubs
inc
js
mov
add
pop
les
jne
bound
les
add
sarl
xor
add
das
fsubrs
fisttpll
sub
fs
fsubrs
add
mov
dec
pop
xchg
mov
or
out
mov
dec
sbb
push
dec
in
bound
xchg
je
sbb
addl
movsb
movsb
data16
adc
cmp
mov
imul
sbb
adc
decl
mov
test
shrl
subl
stos
mov
jl
outsb
cwtl
fstl
gs
jno
pop
pop
pop
ss
jle
adc
nop
in
mov
mov
insb
stos
sub
xlat
pop
out
cmp
imul
aaa
mov
faddp
pop
rcll
movsl
jnp
mov
mov
mov
sbb
jne
push
mov
dec
xchg
jmp
mov
into
outsl
cmp
xor
loopne
ss
sbb
shlb
sub
xor
mov
push
sbb
cmp
sub
mov
out
cmp
in
ljmp
add
cmp
insb
cmc
pop
xchg
lahf
sbb
iret
inc
cmp
jl
mov
and
divb
aad
pop
iret
mov
hlt
pusha
push
aaa
inc
xor
xchg
push
cmpl
outsl
arpl
xor
xor
out
icebp
cmp
push
cmpsl
xor
in
push
mov
pop
xlat
pop
pop
sub
jl
cld
shl
jo
pop
or
pop
and
xchg
xor
rcrb
sar
cltd
pop
dec
das
leave
inc
fs
loope
shlb
xor
xlat
xchg
cmp
mov
negb
cmpsb
sbb
adc
les
mov
into
adc
add
arpl
mov
push
dec
mov
or
pop
stc
jno
xchg
jb
into
xrstor
aaa
test
lcall
test
jb
push
dec
adc
ss
mov
pop
pop
jmp
mov
fstl
fcmovnu
gs
add
mov
push
ss
jae
test
xchg
lds
adc
pop
mov
pop
in
mov
mov
push
adc
lret
pushf
nop
and
xor
or
push
push
mov
mov
mov
cmc
inc
lock
outsb
inc
fwait
in
lret
jnp
mov
in
int3
test
mov
mov
sti
test
test
cs
fcomi
sub
and
gs
add
ds
jne
scas
mov
imul
sbb
mov
xor
inc
push
sbb
cmp
in
repnz
movsl
test
and
cmp
mov
in
shl
or
fcmovne
push
inc
aas
mov
daa
push
dec
test
jecxz
push
bound
sbb
inc
mov
out
xor
adc
inc
push
jmp
adc
pop
fisubl
pushf
mov
mov
daa
xor
adc
lods
cmpsl
dec
lea
lret
cwtl
fisttpl
ret
xchg
xor
jnp
jge
pusha
or
gs
inc
jmp
and
fidivl
jge
xchg
aas
or
pop
and
xor
inc
sub
fwait
jmp
movsl
jmp
jnp
ds
jbe
mov
aas
jge
popa
jnp
lock
and
pop
movb
sti
sbb
shlb
and
adc
cli
dec
test
insl
mov
cmc
das
pop
sub
jbe
sbb
sub
or
xor
bound
mov
jmp
fildl
mov
enter
stc
mov
lahf
leave
sti
and
lcall
ljmp
cmp
or
mov
enter
mov
pop
xor
jecxz
xchg
lds
leave
in
sbb
jno
mov
sti
inc
xchg
inc
sahf
pop
push
addr16
xchg
jg
mov
push
mov
lods
iret
in
push
sbb
xchg
lret
jg
mov
aam
jmp
pop
sbb
sub
mov
scas
cmp
push
mov
les
mov
aas
mov
jne
mov
adc
test
pop
pop
jg
cmpsb
subb
pop
fbstp
lods
outsb
add
js
loopne
pop
addl
pop
add
jae
cmp
xchg
out
inc
xor
push
inc
mov
add
or
mov
es
outsl
mov
and
and
mov
sub
cmp
dec
pop
pop
ljmp
dec
dec
inc
ss
fdivrl
push
push
push
or
addr16
mov
mov
jb
jl
xchg
jmp
addr16
aas
mov
mov
cltd
data16
push
jecxz
mov
pop
mov
faddl
inc
not
dec
subl
sbb
cmc
mov
mov
loop
mov
in
mov
pop
and
test
pusha
jae
push
push
sbb
and
sbb
mov
cmovne
pop
push
and
dec
es
repz
pop
loopne
xor
gs
push
sub
sti
add
stos
lds
enter
sub
sahf
adcb
pop
mov
mov
lds
and
xor
push
jnp
rcr
jle
icebp
and
cmp
je
test
mov
testl
aad
mov
jge
outsl
xchg
dec
decl
lret
xchg
cmp
add
adc
xor
adc
rorb
add
data16
cmc
std
out
repz
fcoml
repnz
pop
mov
out
loop
sub
cwtl
ficoms
test
cmpsb
inc
dec
push
subb
into
pop
inc
jmp
dec
xchg
push
inc
das
jae
movsb
ret
jo
push
bound
int
mov
std
sbb
cmp
popa
inc
lcall
sbb
repz
jo
popf
cmp
in
shrb
in
loope
cmc
add
in
push
aad
jno
xchg
or
les
nop
push
test
pushf
mov
mov
mov
mov
cmp
dec
add
push
push
gs
and
fistpll
xor
call
add
lcall
pop
lock
popa
out
mov
dec
scas
xor
ss
mov
mov
in
mov
das
bound
lods
lods
mov
jnp
cld
enter
scas
out
enter
adc
repz
sub
and
xchg
cmp
jle
aas
and
cld
push
add
jns
arpl
jae
adc
cmp
jl
pop
pop
cs
sbb
fcomps
add
dec
cs
jae
rolb
ss
in
mov
popa
mov
or
cmp
push
out
test
mov
aaa
mov
push
or
sbb
outsl
test
ret
clc
push
jnp,pn
je
fwait
mov
pop
out
jg
ds
js
subb
dec
and
movsl
enter
jl
aad
add
pushf
loopne
inc
clc
xor
in
pop
es
mov
pop
mov
scas
xor
call
sbb
jno
jae
stc
sbb
push
push
xchg
dec
das
mov
mov
fisttpl
dec
mov
mov
xlat
imul
fucomp
insl
jmp
cmpsb
jecxz
and
inc
stc
pop
iret
mov
pop
fstl
cmp
sbb
xchg
insl
scas
int3
stos
and
stc
clc
jnp
cmp
enter
push
cmc
push
outsb
adc
mov
lea
add
and
lcall
scas
and
push
pop
mov
imul
mov
sub
inc
cmp
in
bound
fsubrl
out
call
mov
nop
nop
inc
push
adc
and
or
cmp
jge
mov
xchg
inc
sar
xchg
mov
cmp
repz
xor
and
and
ret
jnp
mov
push
mov
sbb
inc
jne
pop
mov
stc
sbb
gs
call
cmp
add
jb
das
inc
inc
fstpt
and
adc
scas
nop
jp
test
aaa
mov
loope
shrb
fs
pop
jae
jae
mov
push
mov
daa
inc
dec
inc
push
inc
lcall
xchg
xchg
dec
sbb
jmp
stos
and
jg
push
jae
addr16
or
pop
loope
ss
mov
in
lods
xchg
mov
gs
or
fsubs
dec
xor
sti
std
mov
lock
adc
cli
jmp
das
sti
sub
mov
add
leave
in
cmp
es
fwait
out
enter
lahf
iret
mov
sti
add
dec
dec
fs
inc
mov
repz
sub
xor
shlb
xor
lcall
rorl
push
lds
js
lods
shrb
xor
ret
cmc
in
add
jo
cmp
jo
adc
into
into
decl
loop
stc
ror
pop
and
ret
xor
test
sti
cmpsb
in
stos
jno
imul
test
out
ss
dec
bound
test
repnz
xor
rclb
pop
push
mov
testl
pop
sbb
insl
fistpl
dec
mov
add
aas
push
sub
lods
mov
mov
daa
leave
outsl
jge
sbb
cwtl
pop
pop
jg
scas
cmp
xchg
xor
addl
fmuls
in
cmc
pop
pop
aam
xor
inc
xchg
rclb
dec
cmp
pop
mov
push
das
ret
in
mov
lods
dec
cmp
mov
es
popa
sbb
xchg
cmp
stos
iret
adc
jo
arpl
inc
das
and
push
cmp
inc
fwait
mov
mov
mov
sbb
lret
jp
mov
jle
sub
lea
rcrb
push
and
int3
pusha
or
adc
ret
ss
filds
inc
lahf
cmp
in
ror
outsl
inc
sbb
xor
jl
cmp
psllw
push
add
xchg
mov
inc
out
sub
in
mov
loope
popa
add
sar
shll
into
mov
sub
leave
rcrb
scas
inc
mov
pop
mov
idivb
into
push
adcl
sub
pop
sbb
lcall
insb
pop
cmc
mov
mov
in
clc
mov
iret
roll
mov
jmp
andl
push
sub
inc
inc
call
in
pop
xchg
aas
xor
daa
inc
cmp
out
fwait
push
imul
mov
in
dec
dec
aad
adc
xor
into
add
pop
lcall
xor
dec
cmp
pop
scas
ss
push
dec
jp
xor
adc
xorl
orl
lods
aad
inc
add
mov
ret
bound
sub
es
push
pop
loope
mov
mov
add
mov
sub
pusha
inc
in
mov
add
shlb
insb
dec
pop
sbb
jp
inc
dec
ja
add
sub
and
dec
mov
mov
mov
test
sub
inc
jp
cmp
loop
push
gs
sar
dec
sub
aas
mov
push
test
push
lds
sbb
mov
mov
ret
aad
push
sbbl
mov
sarb
cs
push
jmp
and
outsb
xchg
mov
enter
mov
pop
dec
movsl
out
mov
cld
sub
adc
mov
cmp
cmp
jmp
xor
or
jne
dec
scas
cltd
lods
sub
push
cs
int3
inc
xor
dec
add
pushf
inc
pop
mov
cmp
jns
aad
and
arpl
jno,pn
in
daa
xchg
scas
cld
add
aad
jecxz
jno
int3
jbe
mov
sbb
mov
cmp
aaa
loopne
mov
inc
insb
insb
icebp
int
mov
test
pop
sub
test
mov
sbb
enter
jns
cmp
shl
and
mov
mov
lahf
lods
pop
pop
andl
and
mov
or
xor
push
jp
sarl
hlt
or
call
out
add
pop
mov
arpl
push
int3
add
pop
jmp
dec
movsl
fiadds
xor
imul
in
fiaddl
mov
mov
lds
pop
aad
mull
test
adc
jb
jbe
xchg
lret
sbb
xor
jo
sbb
popa
cmp
mov
jge
xor
xchg
push
sti
ds
gs
movsb
push
icebp
fwait
and
mov
mov
sbb
push
movsb
popa
inc
or
push
push
mov
test
xchg
cmp
sub
xchg
bound
mov
outsl
xor
int
insl
mov
int3
shrb
push
test
cltd
cmp
inc
push
ljmp
inc
cmpsl
push
scas
icebp
fs
cld
mov
push
gs
pop
out
ret
and
mov
push
xchg
inc
push
stos
mov
push
and
adc
dec
xor
cmp
jl
push
lret
mov
cwtl
shlb
loopne
mov
pop
arpl
or
aaa
les
ret
mov
sub
je
add
lock
lcall
call
in
sub
push
push
popa
push
roll
andb
sarl
push
sbb
mov
mov
jmp
mov
daa
mov
xlat
int3
scas
jo
fwait
dec
stos
leave
adc
and
pop
xor
jnp
jmp
dec
hlt
jecxz
dec
or
aad
fwait
in
add
int
xchg
lahf
xchg
cmp
lcall
pusha
mov
jns
pop
fistpl
and
inc
stos
inc
aas
aas
fcmovne
and
mov
imul
add
mov
hlt
cld
test
sub
pop
andl
xchg
fcmovne
mul
pop
mov
cmpsb
mov
mov
pop
call
mov
hlt
stos
cmp
adc
cltd
cmp
xlat
in
out
test
push
fs
or
cs
push
push
stos
mov
adc
inc
jecxz
jno
arpl
dec
ret
sub
jo
cmp
add
sbb
iret
mov
adc
mov
pop
and
adc
inc
push
jmp
push
dec
out
jge
orl
jno
inc
pop
or
mov
xchg
or
cmp
xor
xor
jo
ja
jo
popa
push
push
out
out
pop
push
cwtl
aas
inc
xor
js
xchg
cmp
mov
popf
mov
popa
adc
data16
xor
dec
cld
lret
test
or
fs
ss
and
lods
push
xor
fcom
push
jmp
jns
add
push
lret
mov
adc
and
dec
in
inc
pop
inc
movsb
clc
pop
adcl
cmp
sti
fs
dec
stc
add
push
mov
cmp
xchg
jno
or
pop
cmpsl
cmpsb
adc
repnz
adc
negl
lods
ficoml
into
iret
xchg
push
xor
aaa
aaa
insb
cmp
xchg
mov
push
inc
inc
inc
xchg
mov
les
leave
and
pop
cld
or
inc
inc
popa
push
mov
aas
aad
addr16
hlt
in
cmp
jg
icebp
fcompl
push
xchg
seto
ficomps
xor
nop
xor
cwtl
test
je
inc
imul
arpl
or
add
test
jae
and
shlb
lret
sahf
stos
cltd
or
cmpl
dec
cmp
or
add
ret
mov
addr16
xchg
in
fmul
mov
aam
mov
mov
addr16
movsb
add
fcmovnu
adc
pop
push
dec
lret
iret
mov
mov
xor
and
rcrl
dec
insl
movsl
lret
fstpl
imul
sahf
outsl
sub
push
out
push
outsb
mov
sbb
jl
lock
movsl
cwtl
int
aas
popf
mov
mov
mov
add
cltd
add
test
inc
shr
andl
int
sbb
jb
and
and
pop
push
sub
stc
lahf
push
lods
lret
dec
mov
sbb
and
mov
push
jne
mov
fcomps
stc
outsb
fistl
add
faddl
mov
push
sub
mov
adc
adc
ja
add
bnd
lret
rclb
push
testb
xchg
shlb
push
dec
fbstp
fwait
and
cltd
push
mov
jne
add
xchg
das
bound
dec
aad
test
daa
test
out
fidivrs
and
xor
mov
jne
shlb
cmp
arpl
sbb
xor
iret
lods
xor
lea
dec
shrl
adc
lods
cmp
push
and
fdivl
iret
inc
push
pop
add
dec
cmp
push
adc
aam
adc
imul
pop
cmp
pop
push
and
cmp
ljmp
jno
cld
outsl
cmpsl
pop
xorb
add
std
and
push
jb
popl
in
dec
cli
lock
not
fsts
push
test
mov
and
dec
pop
sti
and
inc
subl
lds
rorb
into
xor
fnclex
fwait
mov
push
bnd
and
sahf
es
sub
jmp
push
subb
ret
add
cmpsl
xor
test
roll
lahf
dec
iret
or
fiaddl
ds
rcr
popa
pusha
add
pop
mov
sarb
cmpsb
rcrl
and
add
les
push
xchg
repz
cmp
lds
ljmp
leave
insb
in
jno
or
mov
pop
dec
lret
mov
sub
adc
mov
stos
xchg
stos
mov
leave
or
out
outsl
cmc
xor
and
dec
pop
push
out
addr16
xchg
fnstenv
pop
xor
mov
xchg
sbbl
int3
std
pop
mov
lret
incl
pop
adc
lahf
cmp
lahf
inc
rcrl
shll
xchg
mov
nop
adc
push
mov
or
pop
in
pop
adc
jne
bound
mov
dec
fsubl
or
test
xor
fs
andb
pop
sbb
popa
add
in
dec
cmpsb
dec
jno
dec
rcr
and
enter
in
jbe
pop
rorb
dec
mov
xor
mov
fmull
and
jge
int
pop
push
pop
add
sub
xor
push
pop
push
xchg
adc
xor
jnp
fadd
mov
inc
nop
xlat
adc
push
xor
pop
sub
pop
dec
aaa
fcomps
mov
out
xlat
popl
jb
and
sti
daa
jmp
cmp
out
mov
sbb
mov
daa
xor
inc
inc
test
dec
rcrb
cli
idivb
jb
cmpsb
mov
ret
pop
addl
mov
xor
sub
dec
call
sub
mov
cwtl
scas
jno
dec
test
push
cli
pop
daa
ds
aaa
and
sahf
dec
xchg
fsubl
clc
and
xor
push
aaa
dec
bound
pop
lret
jno
inc
aad
stos
imul
lea
shl
adc
adc
jns
or
sbb
roll
mov
into
cs
xchg
lret
adc
xor
jne
imul
aas
lock
xchg
mov
push
mov
jp
aaa
imul
ss
and
and
push
xor
and
add
push
popl
in
jbe
std
adc
jmp
xorb
fcompl
imul
sub
jle
fisttpl
ret
jne
shlb
fdivr
fwait
pusha
and
movsl
adc
shr
cmc
rcll
pushf
sahf
dec
jno
movb
rcrl
cli
ja
push
push
or
mov
xor
hlt
sbb
inc
in
jecxz
jmp
sbb
mov
mov
adc
fwait
push
cli
insb
cmpsb
xor
inc
data16
lea
sbb
dec
cmp
mov
sub
clc
xor
mov
enter
dec
popa
mov
jno
adc
dec
xorl
pop
adc
stos
dec
xchg
mov
mov
pop
and
xor
or
sub
stos
and
pop
insl
bound
add
bound
sbb
add
xor
repz
aas
push
mov
bound
and
mov
outsb
mov
cmp
rolb
jne
xchg
cmp
scas
lods
sbb
pop
add
fnstsw
test
subb
sub
mov
aas
jmp
dec
dec
icebp
cmp
inc
daa
dec
lods
lret
adc
mov
jle
sub
outsb
iret
sbb
jecxz
repnz
cmc
cmpsl
sub
mulb
into
xor
jle
mov
mov
iret
jle
sbb
cmpsb
movsb
in
test
sahf
cltd
push
or
data16
out
fldenv
mov
xor
cltd
idivb
pushf
or
add
mov
mov
pop
in
es
shr
aas
dec
mov
sbb
hlt
cmp
insb
mov
xchg
loope
clc
sbb
aad
xor
sub
sbb
push
adc
mov
ret
lahf
pop
std
mov
mov
in
jecxz
push
pop
icebp
mov
popa
out
imul
cmpsb
roll
cmp
fcomps
sub
mov
mov
mov
test
insb
mov
cmpsl
jmp
xor
sarb
push
sbb
xchg
sub
sub
adc
sub
push
inc
inc
dec
xchg
jecxz
pop
adc
repz
cmp
daa
jns
and
outsl
mov
sub
stc
add
cmpsl
ror
pop
sbb
mov
or
loop
imul
sbb
pop
loop
xor
mov
addb
rol
pop
das
and
or
add
inc
pop
adc
jae
loop
pop
pop
mov
xlat
xchg
ljmp
jnp
loope
mov
cli
cld
lods
popa
jne
idivb
add
xor
mov
mov
mov
hlt
inc
dec
out
cmp
scas
leave
pop
mov
adc
and
imul
dec
pop
mov
das
sub
sub
idivl
scas
pop
shll
test
pop
insl
inc
push
mov
cmp
or
adc
scas
adc
inc
mov
pop
js
in
cmp
outsb
into
or
dec
fists
inc
lock
mov
in
push
cmpsl
inc
mov
jb
push
or
add
inc
subl
les
nop
or
or
pop
pop
lods
sbb
lods
cmpsl
rcrl
pop
mov
fcmovnbe
rdmsr
outsl
push
dec
cld
cmp
inc
cmc
jnp
inc
loop
cmp
fmul
or
add
cmp
push
xchg
iret
xor
cmp
jne
aad
push
jnp
icebp
xlat
xor
and
imul
ffreep
shll
mov
xor
stc
shrl
and
mov
sahf
cld
jg
cmp
aad
rcrb
imull
push
stos
mov
stos
sahf
jge
into
lret
nop
ret
adc
aam
fld
xor
ret
sub
in
inc
int3
cmp
cmp
dec
add
sahf
push
or
pop
xor
aad
xchg
jle
mov
adc
iret
add
and
jae
loope
sub
int3
test
mov
sub
lcall
or
mov
jmp
mov
push
shrl
or
xor
jno
xchg
shlb
loope
out
and
push
movsb
lods
xchg
add
out
and
inc
pop
test
dec
mov
pop
jo
cmp
insb
or
in
cmpsb
xchg
inc
js
sbb
cmpsb
test
enter
xlat
or
nop
and
lret
repnz
and
xchg
and
cltd
pop
lea
mov
adc
addr16
repnz
dec
add
popf
sbb
mov
and
sbb
rcrl
xor
aam
pop
xchg
adc
lods
scas
gs
shrl
insb
sbb
loopne
adc
pushf
xor
xlat
xlat
push
decb
mov
shlb
mov
adc
js
shr
lods
mov
xchg
push
imul
mov
mov
enter
xor
add
out
pop
fcoml
jno
jno
mov
icebp
stc
push
jp
cmp
lods
xlat
mov
mov
cmp
and
mov
mov
mov
ljmp
es
popa
inc
adc
in
xchg
lock
xor
jg
mov
push
mov
push
leave
inc
lea
shlb
sbb
out
fisttpll
lea
or
ja
lcall
lcall
fisttps
dec
std
inc
imul
je
pop
in
ret
pop
test
in
in
jb
pop
xchg
or
dec
pop
pop
push
popa
mov
mov
es
les
scas
jle
repnz
xor
add
idivl
pop
fs
xor
pop
or
into
dec
mov
lods
jle
dec
repz
cmp
push
lods
sub
jge
mov
aad
lods
mov
aas
lods
jmp
xorl
push
cli
fs
je
fsubl
cwtl
outsb
cmp
add
mov
xor
lds
jae
stos
leave
popf
and
adc
and
xor
xchg
dec
mov
clc
pop
mov
adc
popa
leave
sbb
xchg
adc
push
sbb
lods
imul
pop
xchg
loope
dec
fmuls
mov
fimuls
adc
sbb
xchg
addr16
mov
gs
pushf
xor
insb
mov
push
jp
jnp
mov
sbb
pop
xor
push
xor
icebp
jg
out
shr
xchg
fcoml
mov
call
adc
pusha
adc
aam
push
pop
push
and
stos
clc
lret
push
ret
jne
inc
mov
mov
xchg
popl
push
cmp
push
movsl
pushl
test
insb
inc
cmp
xchg
push
mov
les
jo
sbb
mov
cmp
dec
outsl
xchg
loop
mov
pop
bound
gs
cmp
ljmp
inc
std
fmul
jg
mov
mov
inc
mov
jno
xor
out
dec
imul
push
pop
sti
mov
dec
aaa
cmp
xor
subl
jge
test
arpl
lcall
daa
cmpsb
repnz
pop
jb
fidivrl
push
pop
dec
push
mov
inc
sub
out
and
pop
xor
addr16
push
add
cld
repnz
std
hlt
mov
fistpll
or
imul
lahf
jo
test
and
smsw
push
sti
pop
dec
sub
lahf
push
into
adc
pop
mov
mov
mov
jg
pushf
out
inc
scas
sub
enter
inc
or
cmp
add
push
ficomps
rol
xlat
aad
jb
in
push
push
int
shll
sub
push
and
hlt
add
in
sub
insl
lods
adc
scas
pop
cmp
lcall
push
cli
and
je
xchg
mov
mov
popa
pop
sbb
fwait
ja
aad
in
out
adc
daa
xchg
cmp
out
movsl
movsl
dec
add
not
mov
jbe
or
sbb
cld
inc
sub
outsb
in
push
ret
pop
aam
insb
push
mov
dec
pop
ret
fadds
outsl
stc
cmp
and
jp
jmp
in
and
push
cli
add
test
add
out
aaa
lret
pop
mov
xor
xchg
je
xchg
in
cmpsb
sub
cmp
push
lds
lretw
popa
xchg
and
arpl
enter
mov
pop
faddl
mov
pop
das
arpl
fildl
add
nop
ret
dec
push
in
inc
out
fisubs
pop
arpl
push
xor
mov
pop
std
data16
repz
add
lret
ret
sub
sbb
test
aaa
out
out
sbb
mov
out
lods
push
fldcw
iret
ds
imul
rcll
xchg
push
imul
orb
shrl
xor
cmp
pop
mov
xchg
fdivl
xor
lods
push
sbb
pop
cs
lods
cmpsl
sub
addr16
aaa
rcrb
xor
divl
jno
arpl
inc
in
push
cwtl
adc
xor
mov
mov
sub
in
xchg
pushf
pop
cmp
add
and
repnz
xchg
out
sbb
pop
push
sti
insb
dec
cmpsb
repz
aad
dec
enter
dec
and
cmpsl
mov
scas
mov
pop
out
pop
fnsave
adc
adc
lods
mov
in
ret
push
or
push
mov
cmpsb
mov
adc
cld
cld
aad
aam
mov
sbb
sub
rcr
cmpsb
mov
out
icebp
adc
mov
xor
mov
sub
stos
push
lods
mov
dec
pop
pop
loop
inc
stos
in
ss
mov
xor
sub
xor
cmp
cltd
ret
loope
rol
cmc
mov
adc
mov
dec
jecxz
imul
cmp
cmpsb
dec
dec
int
fcomip
mov
or
xor
loope
push
rcrl
push
push
lea
dec
jo
ds
out
add
xchg
push
pop
inc
cmp
pop
mov
imul
xchg
sub
and
mov
call
es
xor
cmpsb
fnstenv
mov
mov
and
jae
inc
or
and
xor
daa
pop
xor
and
sub
addr16
sahf
adc
add
xchg
mov
mov
lods
out
inc
and
fistl
mov
fstpt
fstpl
mov
cld
jmp
bound
mov
xorl
clc
and
mov
pop
dec
jno
cmpl
add
out
addr16
nop
and
inc
es
xchg
sarl
in
add
enter
fwait
or
je
mov
repnz
pop
lcall
sbb
push
mov
push
movsb
incl
and
adc
jg
outsl
sar
ret
stc
aaa
pop
sub
sub
mov
jl
pop
mov
xlat
insb
adc
and
xor
jno
mov
dec
out
pop
cli
nop
ret
shll
add
cwtl
mov
in
cmp
sub
test
sub
outsb
lret
ss
mov
fisttpl
sub
int
incl
jl
mov
pop
dec
nop
mov
enter
icebp
movsb
xor
fisubl
rorb
ljmp
sub
fildll
and
adc
in
addr16
outsl
inc
mov
call
js
in
stc
mov
adc
sti
push
mov
cmp
mov
xor
test
pop
xchg
jle
cld
mov
lods
pop
cmp
jno
cld
pushf
adc
push
mov
rcr
scas
push
cmpsl
and
fisubl
jecxz
and
push
cmp
pop
cmp
ret
iret
insl
mov
outsb
pop
stc
ret
adc
dec
inc
addr16
mov
push
enter
mov
xor
mov
pop
imul
mov
lahf
int3
das
aam
mov
add
aad
pop
push
into
xchg
mov
leave
shl
mov
and
cwtl
pop
sub
fwait
cs
lds
mov
push
push
xor
ljmp
inc
sub
and
enter
pop
aaa
jmp
mov
jb
add
push
sub
cwtl
fs
or
pop
jne
fucomi
add
mov
fdivl
popf
push
in
or
mov
jmp
sbbb
jp
add
sbb
add
nop
fwait
mov
popa
xchg
lods
sahf
sub
rcrl
xchg
ret
pop
xchg
notl
xor
jmp
in
frstor
mov
shrb
movsl
js
pop
clc
jb
insl
out
lea
mov
mov
movsl
xor
cmp
push
xor
sbb
popa
inc
pop
and
ret
pusha
popa
dec
mov
outsl
mov
popa
cmpsb
cmp
dec
insl
xchg
pop
cwtl
push
out
add
xor
lea
pusha
pop
add
imull
mov
loopne
aad
jo
sbb
shlb
les
sbb
and
pop
lcall
addr16
mov
mov
lret
jle
pusha
lahf
or
stos
notb
fwait
nop
enter
call
inc
push
cmp
enter
ret
hlt
test
inc
or
js
mov
xchg
mov
outsl
dec
loope
sub
repnz
bnd
in
outsl
icebp
scas
inc
dec
lock
inc
popa
in
scas
gs
cwtl
mov
add
inc
inc
daa
lret
leave
inc
in
jnp
jmp
jmp
pop
mov
fbstp
xor
mov
ljmp
xor
xchg
scas
mov
sub
test
push
int3
ss
xlat
jae
stos
mov
jl
sub
out
jge
les
sti
cmp
and
dec
or
inc
add
add
add
mov
incb
add
cmpsb
loope
push
stos
orb
jecxz
movsl
adc
xor
sub
aaa
push
sbb
loop
inc
push
jg
mov
data16
mov
enter
pusha
ret
fisubrs
and
push
aad
push
and
xchg
shl
dec
lret
jl
xchg
out
push
fistps
repnz
or
popa
rcr
dec
mov
jnp
xchg
adc
dec
xor
fwait
push
sub
inc
cmpsb
fwait
arpl
lcall
push
fmuls
sti
sbb
je
jae
adc
movsb
filds
decl
lcall
ss
mov
xchg
mov
daa
fisubrs
xor
leave
test
adc
ret
subb
ret
das
test
xor
loope
enter
notb
push
cmpsb
dec
mov
adc
dec
or
popf
mov
mov
pop
or
aam
dec
stc
leave
mov
not
xorb
test
cmpsb
pusha
shll
add
int3
xchg
cmp
outsb
aaa
push
adc
sub
das
push
mov
push
sub
xor
idivl
aas
sbb
jmp
les
nop
sub
jp
mov
loopne
inc
subb
dec
cmp
jns
fadds
stos
lock
and
and
jmp
imul
push
into
clc
push
gs
jnp
cmp
mov
cmp
jne
xchg
stos
addr16
adc
lea
jb
sbb
out
sti
hlt
andb
xchg
add
push
dec
sbb
dec
xor
imul
and
sbb
xchg
inc
mov
xchg
test
cwtl
cmc
bound
push
lret
nop
pushf
xchg
or
adc
push
in
xchg
jge
pop
shll
mov
sbb
cmp
push
cmp
dec
adc
faddl
mov
lcall
sahf
inc
loop
jle
test
xchg
in
incl
and
pop
lds
icebp
xor
push
xor
stos
and
xor
jo
mov
stc
mov
mov
pop
clc
xor
int
mov
lds
sub
pop
ret
or
xchg
pop
pop
adc
fidivs
rcrb
mov
fidivl
pop
push
lahf
sub
js
inc
jb
mull
xor
adc
or
pop
decl
sbb
repnz
sub
stc
aas
xor
xchg
imul
cld
call
es
test
cmp
scas
fs
mov
mov
adc
sub
cmpsl
dec
jmp
mov
je
es
scas
mov
cmp
scas
push
dec
jmp
repnz
push
adc
pop
popa
sub
cmp
sub
shll
xor
bound
adc
mov
dec
shll
stos
mull
mov
mov
add
mov
gs
pushl
fwait
aaa
and
mov
or
xchg
mov
dec
sub
inc
data16
loopne
mov
fistpll
orl
add
fdivrp
inc
xor
addb
popa
jmp
sbb
pop
dec
ja
out
xchg
hlt
push
pop
mov
push
dec
jnp
mov
stos
daa
xor
dec
ss
outsb
dec
out
sbb
inc
mov
pop
push
and
pop
pop
pop
jbe
daa
popa
icebp
idivl
cld
ja
adc
mov
inc
adc
jne
in
shll
or
out
das
outsl
lea
push
jbe
or
nop
push
mov
xor
loope
sbb
mov
jp
mov
jge
push
adcb
sbb
inc
ss
jmp
adc
adc
add
mov
and
xor
mov
mov
lahf
nop
ss
or
pushf
loope
ficompl
mov
and
adc
scas
sbb
lcall
andl
xchg
outsl
sbb
add
inc
or
add
xchg
nop
push
lahf
or
jb
imul
out
lcall
mov
stc
faddl
pop
imul
cwtl
cmp
pop
outsl
cmp
mov
pushf
outsb
nop
fisubrs
xchg
xchg
push
outsl
nop
or
add
sub
aas
jo
jmp
in
cmc
rol
xlat
mov
mov
fsubp
add
push
xchg
pop
nop
or
js
sbbl
std
dec
mov
sarl
scas
rol
lods
cmpsl
dec
popf
js
jle
mov
jmp
push
mov
daa
out
xor
sahf
mov
push
dec
aam
and
leave
out
xchg
push
push
dec
sbbb
aas
push
arpl
push
fcomi
and
mov
out
lods
insb
je
jg
inc
xlat
xorb
rorl
js
mov
mov
dec
sub
xchg
sbb
roll
fldt
xor
mov
mov
or
or
popf
xor
jge
push
adc
and
cmp
cmp
imul
push
jge
xchg
aad
add
sub
fs
add
push
dec
xchg
jmp
aad
out
imul
cmp
add
push
test
xor
rolb
data16
inc
rcrb
mov
int
mov
jge
pop
xchg
xchg
and
push
sbb
hlt
push
mov
sbb
jae
inc
sbb
in
movsl
lret
and
sub
fs
inc
insl
test
outsb
and
stos
add
test
sbb
shl
hlt
cltd
pop
fwait
and
insl
stc
mov
testb
sub
mov
sbb
fldt
or
sbb
sbb
sub
es
dec
das
jle
lds
jle
stc
xchg
popf
popl
pop
in
inc
sub
sbb
stos
mov
in
sbb
dec
and
mov
mov
add
push
sub
shrl
std
dec
mov
jo
bound
sti
outsl
mov
loope
test
xor
cmp
xchg
mov
jl
into
xor
adc
sub
xor
mov
lds
mov
loop
loopne
xor
out
jo
gs
mov
cmpsl
out
stos
andb
mov
jle
inc
pop
rolb
sub
int3
xor
jo
mov
cs
and
lds
popa
int
sti
xchg
sbb
shlb
mov
jnp
es
jnp
fisubs
mov
aaa
mov
imul
nop
ficomps
jno
add
jp
mov
mov
sub
outsl
or
inc
mov
icebp
les
ja
aam
popa
mov
outsl
enter
inc
ret
std
xor
mov
arpl
and
sar
test
mov
mov
push
jbe
dec
pop
lahf
cmpl
xchg
push
pop
cmp
push
jne
jle
push
adc
shll
xchg
xor
in
stos
sub
icebp
pop
or
rcll
stos
movsl
movsb
mov
jl
aad
data16
add
fsubrl
inc
push
mov
mov
int
iret
push
mov
mov
into
add
mov
fistpll
dec
rorl
pop
fisubrl
and
lcall
xchg
sbb
aam
pop
insb
jbe
cmp
xchg
pop
popa
adc
pop
leave
or
mov
ss
or
jno
imul
sbb
dec
push
out
addr16
pop
je
mov
sarl
mov
adc
mov
pop
sbb
lret
push
adc
das
push
sub
xor
mov
sets
mov
or
cmpsb
xchg
in
arpl
dec
jno
lret
mov
pop
repnz
mov
mov
pop
stc
lret
or
inc
cmp
hlt
sbb
push
jno
mov
cwtl
jecxz,pt
cltd
xchg
fdivs
pop
sarl
int3
push
mov
or
aas
shlb
inc
mov
in
arpl
add
ret
and
cmpsb
dec
in
jle
stc
mov
xlat
mov
pop
fsubrs
out
das
push
nop
pushf
jl
into
or
pushf
imul
addb
nop
push
inc
mov
xchg
lock
push
xchg
mov
pop
xchg
btc
jg
cmpsl
outsb
xor
fwait
jnp
movsb
xchg
inc
arpl
mov
jl
jg
xchg
test
repnz
stos
addr16
jbe
movsb
add
repnz
shl
in
cmp
jl
mov
pop
xchg
sbb
mov
xchg
mov
std
xor
pop
xor
stos
sbb
adc
rclb
xchg
and
aad
bound
iret
push
mov
cmpsb
ljmp
mov
negb
imul
or
pushf
rclb
pop
gs
jle
mov
mov
xlat
pop
aaa
dec
aaa
cmp
movb
jp
cmp
loopne
dec
cmpsl
dec
push
and
out
cltd
cmp
sub
push
pop
test
sub
adc
adc
shrl
popf
enter
mov
mov
mov
lahf
jge
mov
rcll
xchg
sbb
mov
les
imul
add
imulb
fsubrl
out
sub
mov
sbbl
inc
jge
shr
sarb
call
xor
push
icebp
lea
leave
sbb
loop
fcmovnu
pop
jl
mov
fdivl
popf
lret
bound
shll
and
push
mov
test
sbb
mov
js
inc
push
jne
sub
and
mov
sbb
lds
popa
mov
add
leave
mov
inc
mov
xor
mov
jl
sarb
xlat
mov
pop
xorb
dec
xchg
inc
imul
pop
aas
je
aad
pop
stos
sub
mov
cmp
push
ds
jmp
push
xchg
scas
push
and
mov
add
ret
mov
xchg
push
loope
sahf
test
das
out
pop
sbb
popa
cs
cwtl
push
cltd
mov
pop
and
pop
enter
fistpl
fcomi
xor
cmpsb
push
cmpsb
pop
cwtl
outsl
push
mov
mov
dec
xor
fdivl
mov
xor
mov
sub
mov
mov
ja
fnstcw
add
fldcw
outsl
std
pop
xor
sub
jno
pop
dec
pop
sub
inc
lds
dec
xchg
out
add
repnz
sarb
push
sti
jb
mov
sbb
les
frstor
mov
mov
mov
repnz
add
adc
test
adc
dec
mov
sbb
fwait
xor
pushf
lea
jns
sar
xor
mov
cmp
cmp
mov
test
sub
iret
cmp
push
and
lret
loope
bt
loope
jae
es
iret
jb
movsb
or
pop
ljmp
gs
jnp
int
sbb
int
adc
in
lret
or
mov
mov
inc
lods
movsb
shll
mov
loop
je
or
and
addl
jbe
aaa
push
fiadds
repz
out
mov
fisubrs
cmp
dec
shll
mov
lcall
je
dec
lret
xor
test
test
shlb
inc
adc
add
stos
inc
iret
out
pop
mov
nop
add
xor
leave
loopne
test
push
sbb
inc
mov
mov
xchg
mov
add
lock
pop
inc
push
mov
nop
cmp
mov
iret
faddl
bound
int
inc
xor
inc
mov
cmpsl
jo
fucom
cmp
stc
icebp
mov
and
or
xchg
and
rcll
jmp
or
or
sub
jno
mov
mov
pop
mov
ss
fiadds
fisubrl
std
scas
pusha
sbb
imul
movsl
and
repz
and
sbb
mov
jnp
dec
rorb
ja
and
loopne
dec
push
insb
pop
pop
xchg
mov
mov
repz
jno
and
repz
pop
mov
push
xor
cli
ret
jno
fdivrl
int3
aaa
into
das
xchg
mov
sub
fnstsw
les
jecxz
insb
test
notl
pop
ljmp
cld
push
in
cltd
cmpsb
es
ret
cltd
push
adc
xor
dec
push
or
sbb
test
hlt
in
insl
mov
data16
clc
bound
xrelease
lods
add
and
xchg
push
pushf
inc
adc
xchg
loope
in
push
shl
inc
hlt
xor
lcall
popa
jbe
cmpsl
push
xchg
fidivrs
icebp
insl
push
int
ljmp
ss
push
hlt
movsb
push
outsb
and
std
aad
cmp
push
lods
mov
fwait
xchg
xchg
push
gs
fwait
jmp
nop
adc
les
xorb
sub
bound
scas
mov
aaa
mov
cmp
lcall
xlat
rolb
ljmp
push
cmp
enter
es
movaps
mov
pop
and
orl
xor
jmp
scas
xchg
xor
subl
push
cmpsl
scas
outsl
and
xchg
sub
lock
jo
inc
or
adc
fwait
pop
mov
jl
fldcw
call
inc
adc
sub
adc
mov
mov
push
mov
add
mov
pop
lcall
mov
stc
xor
push
sub
xor
ja
dec
xor
xchg
sbb
popf
pop
pop
jmp
dec
popa
pushf
pop
xor
pop
inc
add
mov
dec
xor
mov
sbb
pop
insb
jo
fnsave
push
push
adc
inc
cmp
sahf
inc
cld
cli
or
mov
popf
adc
pop
pop
insb
push
xor
cmp
cmp
lods
lret
pop
in
stos
pop
imul
sbb
xchg
dec
mov
test
mov
pop
incl
push
stc
lahf
out
push
jl
cmp
jge
mov
add
cmp
dec
mov
push
jo
or
add
mov
cmp
mov
vsqrtsd
push
pop
add
dec
inc
mov
orb
sbb
xor
cmp
mov
sbb
adc
jno
fnstsw
pop
dec
cmpsl
xchg
int
push
cli
mov
clc
mov
sub
xchg
or
lea
mov
mov
fists
sub
mov
je
cmpsl
nop
pop
mov
dec
loop
test
lea
sbb
push
cmpsl
movsl
dec
xor
int
arpl
icebp
push
push
jge
xlat
mov
jns
loope
mov
repz
mov
and
daa
enter
data16
je
push
add
bound
push
test
xor
cltd
dec
hlt
jmp
pop
pop
insb
iret
mov
stos
daa
pop
push
cwtl
inc
or
sub
push
cwtl
jnp
push
jg
fs
test
mov
xlat
cmovge
jns
jecxz
add
nop
mov
cmp
das
pop
pop
pop
in
lret
in
ret
out
icebp
mov
mov
les
xor
outsl
movsb
imulb
daa
mov
pop
xchg
inc
lds
jne
fwait
xor
test
stos
inc
jp
or
inc
xchg
xor
scas
imul
call
es
adc
loopw
push
stos
loop
pop
stc
iret
movl
inc
and
jg
sub
sbb
xor
loopne
add
and
inc
inc
push
pop
ljmp
es
push
dec
or
leave
adc
or
insb
out
mov
mov
mov
cs
mov
sarb
gs
and
add
std
dec
add
hlt
inc
mov
sbb
xor
int3
lahf
xor
repz
mov
iret
lret
idivl
rorl
aad
or
roll
sbb
imul
test
insl
xchg
xchg
rcll
pop
push
xchg
stc
jne
inc
clc
sub
sti
mov
fcomip
lods
pop
adc
into
sahf
cli
shrb
push
bound
mov
movsb
ficomps
test
sbb
xor
inc
ret
inc
xor
bound
std
dec
push
sub
mov
cmpsl
add
xor
inc
out
mov
inc
hlt
call
dec
push
pusha
adc
addr16
ljmp
lcall
fsubl
pop
pop
cmp
mov
sub
pusha
cmc
or
int3
or
jo
mov
jns
inc
leave
cmpsb
pop
jecxz
mov
jb
iret
push
cmp
sti
hlt
popa
xor
loop
jb
sub
bound
popa
pop
ljmp
adc
mov
popa
push
scas
and
inc
inc
jne
shl
ja
addr16
push
lahf
dec
jmp
or
cld
add
popa
dec
mov
xor
call
mov
pop
cmc
jns
fsubp
xchg
jns
in
scas
cltd
decl
xor
addl
pop
push
rcll
and
stc
jno
std
daa
andl
mov
inc
fwait
jmp
push
xchg
js
nop
push
add
push
sti
xor
cmpsb
and
decb
aas
jns
in
xor
insb
mov
adc
jecxz
out
jge
ljmp
push
loope
jbe
pop
in
dec
or
test
icebp
xor
mov
jb
sbb
add
adc
hlt
popf
push
and
aad
sarb
mov
xchg
jne
and
jno
xor
sub
aam
xor
iret
jge
xor
hlt
out
fdivl
das
mov
gs
dec
pop
jge
xor
push
jmp
int3
iret
dec
insb
pusha
xor
cmpsb
push
movsb
dec
fildl
mov
dec
stos
cmp
xchg
and
sbb
mov
fldt
jecxz
pop
add
in
mov
in
jl
xchg
or
mov
add
mov
movsb
pop
adc
fisttpl
adc
adc
xchg
inc
sub
add
push
add
aas
xor
and
or
insb
fisubl
mov
cltd
cmpsl
mov
pop
test
jno
cmp
out
push
outsl
repz
jnp
daa
dec
and
insb
mov
mov
mov
mov
xor
inc
in
imul
cld
inc
pop
popa
fstl
xchg
pushf
mov
mov
loope
insl
xchg
pushf
das
add
std
inc
xchg
rcll
xor
cli
mov
xchg
sub
stos
cmp
jg
sbb
sub
pushf
xchg
lock
mov
cmp
movsb
movb
in
pop
mov
outsb
loope
gs
add
jo
pop
jno
sbb
mov
movsl
xor
mov
or
jb
xor
adc
cld
dec
mov
push
mov
xor
aad
sti
pop
jle
popf
sarl
jne
and
stos
lods
push
mov
aad
mov
mov
sub
rcll
dec
call
test
dec
pop
xor
xchg
mov
xor
inc
cmp
mov
std
mov
icebp
sub
jle
call
push
adc
push
sbb
jge
add
push
push
pusha
sub
ljmp
or
cmp
or
movsl
and
mov
pop
cmp
stos
dec
imul
nop
jns
push
cltd
pop
out
stc
adc
cltd
mov
lea
jne
mov
ss
aas
mov
inc
stos
jae
mov
stos
clc
cmp
lea
pop
push
push
stos
lret
scas
xchg
sar
add
push
lods
notl
bound
jle
sub
push
add
push
into
jnp
in
pop
stos
rcr
xchg
in
iret
mov
sub
mov
inc
jmp
inc
lcall
aas
jmp
and
mov
daa
dec
mov
movsb
adc
arpl
add
clc
lods
lret
add
xchg
sub
fcoms
jle
fidivrl
xchg
std
push
fcomp
mov
mov
xchg
xor
hlt
pop
mulb
test
mov
jp
lea
scas
mov
out
xchg
push
fst
mov
popa
mov
fiadds
xor
push
fiaddl
inc
pop
pop
rcl
das
inc
leave
add
aaa
mov
jnp
out
fwait
stos
dec
loope
loope
insb
sbb
test
repnz
insl
movsl
and
add
adc
stc
loope
mov
cli
fisubs
push
push
add
fldenv
cld
inc
dec
xor
adc
lea
adc
loop
push
push
fcoml
mov
ss
mov
cwtl
push
fisttpl
mov
and
sub
lahf
adc
int3
xchg
xchg
std
lock
fsubr
out
insb
das
mov
lcall
or
inc
sbb
pop
jge
sbbb
push
ret
pop
mov
aam
std
xchg
jbe
inc
sbb
hlt
sub
imul
xor
dec
jno
jns
pop
sub
fmul
call
pop
loopne
adc
sbb
cs
sub
ljmp
adc
mov
mov
push
mov
cmp
das
cmp
and
xchg
xlat
and
pop
ret
xor
mov
cmc
cwtl
cbtw
xor
dec
das
cmp
cmp
test
push
arpl
cli
notl
pop
inc
fimuls
imul
nop
jg
sbb
addl
shll
imul
es
sti
dec
pop
mov
ficoms
rcrl
out
inc
and
enter
test
fisubrs
add
jnp
sbb
mov
fsubl
rclb
sbb
push
adc
jp
xchg
xchg
testl
cmp
jns
stc
jo
and
push
mov
fsubl
dec
or
xchg
movsl
inc
incl
sub
cmpl
pop
outsl
push
sahf
and
call
jb
xchg
or
test
pushf
xor
mov
dec
cltd
outsb
nop
xor
push
call
jg
add
fsqrt
int
cmp
xor
sub
data16
jo
dec
adc
mov
or
mov
xchg
popa
sub
xor
xor
repnz
stos
jo
imul
cmpsl
fisubl
hlt
mov
movsb
pop
push
movsl
and
sbb
sub
icebp
bndldx
shll
and
dec
iret
fs
lret
test
inc
xchg
mov
mov
dec
cs
push
jo
aas
cli
sarl
popf
out
imull
cmp
xor
inc
pavgb
jge
pop
loop
mov
dec
enter
aaa
fdivrs
aaa
out
insl
fs
dec
cmpb
nop
clc
cmp
sbbl
xchg
add
inc
mov
loop
sub
xor
mov
dec
lock
fnstenv
imulb
insl
add
icebp
add
ss
ret
push
pop
push
rcr
xlat
mov
bound
enter
aam
and
sub
test
pop
mov
jl
and
pushf
out
repnz
push
or
cli
and
stc
jae
into
andl
xor
out
cmp
push
mov
jmp
aad
mov
xor
insb
pop
enter
pop
pop
cmpsb
mov
mov
xor
cmp
jne
rclb
sahf
and
jle
xchg
sbb
jnp
faddp
cmpsb
mov
xchg
cmp
icebp
mov
addr16
pop
in
minps
mov
popa
insl
or
mov
cmp
xchg
sub
mov
xor
dec
or
sbb
mov
mov
jbe
pop
xchg
mov
xchg
mov
sbb
ja
mov
and
cmp
mov
mov
stc
mov
fdivs
xchg
mov
mov
jb
lods
push
cmp
dec
int
lret
pop
dec
sbb
jo
xchg
sub
out
xor
jne
xlat
mov
inc
add
push
mov
dec
xor
fistl
rcrb
inc
mov
and
lds
pop
in
xor
shlb
leave
daa
inc
stos
sbb
add
inc
movsl
sbb
movaps
and
rcrb
cld
mov
leave
jb
xor
jno
call
adc
pop
push
cmp
cli
push
sub
pop
jb
sbb
pop
lahf
into
add
mov
push
sub
fs
add
popl
xor
lret
test
sbb
insb
dec
cltd
rcrb
lds
and
mov
jl
loopne
jne
aaa
adc
or
icebp
jns
int3
dec
jecxz
push
movsl
stos
adc
pop
sub
ss
arpl
dec
cmpsl
icebp
cs
push
icebp
hlt
lret
push
push
fcmovbe
jmp
push
mov
add
adc
fisttpll
push
idivb
sbb
xor
mov
cmc
enter
mov
aas
push
sbb
fcmovne
pop
xor
lea
or
mov
fdivl
xchg
pop
push
pop
pushf
mov
int3
jnp
inc
jl
mov
xchg
inc
sub
loope
inc
sbb
push
fisubrs
add
out
pop
das
cwtl
add
push
xor
sub
fldt
iret
lcall
and
or
clc
js
clc
pop
and
push
mov
cmp
stos
cmp
inc
int
jp
pushf
or
int3
mov
and
mov
ficomps
into
popf
mov
movsl
sti
inc
sub
mov
jp
xchg
or
call
fcmovnb
add
popa
jg
or
push
xor
add
mov
inc
or
sbb
in
sbb
sar
xor
pop
xchg
mov
adc
push
and
fmull
add
pop
jb
adc
xchg
sub
test
cmpsl
mov
cmp
push
leave
pop
subl
push
cmp
cmp
dec
xchg
cmpsb
mov
das
xor
pusha
pop
pop
xor
fsubl
xor
jbe
mov
lahf
pop
adc
fs
insl
out
cmc
pop
insl
jmp
dec
mov
mov
test
cmp
addr16
sti
jnp
mov
push
mov
in
test
push
leave
repz
pop
dec
or
push
aad
in
das
mov
or
mov
push
add
std
push
mov
xchg
cmp
pop
push
jl
frstor
std
push
xor
sbb
or
dec
cmp
outsb
cld
sbb
mov
arpl
jge
dec
repz
ds
add
mov
mov
inc
or
ffree
test
int
es
adc
out
idivl
fs
mov
mov
repnz
lret
mov
xlat
push
sub
jno
mov
pop
sub
or
sbb
mov
cmc
jno
push
mov
dec
iret
push
adc
ror
cli
cld
sbb
leave
es
call
jecxz
xchg
scas
push
xor
test
cmpsb
mov
push
and
sub
xor
push
enter
xor
ret
outsb
std
mov
pop
test
shl
test
push
imul
test
push
cmp
fincstp
cmp
das
cwtl
insb
push
sti
jnp
jne
pop
mov
push
enter
repz
jno
jl
dec
pushf
mov
mov
pop
out
iret
in
cltd
xchg
lods
xor
add
adc
sub
pop
fstl
data16
lret
fsts
push
data16
push
mov
arpl
inc
out
js
mov
push
out
loop
js
fdivs
scas
xor
cli
lods
mov
push
sub
dec
scas
and
das
addr16
sti
mov
pusha
and
out
inc
hlt
je
jle
adc
jmp
mov
mov
out
xchg
push
cwtl
pushl
jmp
push
xor
mov
or
and
outsb
arpl
sub
pop
ficoml
loop
cltd
xor
imul
test
and
movsb
sub
int3
xor
popa
loop
sub
daa
cmp
jnp
pop
les
and
stos
mov
mov
shrl
imul
lock
scas
ficompl
xor
jno
daa
clc
test
mov
sbb
adc
mov
jo
fimull
stos
push
mov
imul
inc
pop
mov
mov
je
pop
sub
call
in
jl
shll
xchg
xor
or
popf
push
inc
jp
xor
xor
push
jecxz
adc
nop
fcoml
xchg
iret
push
adc
xor
incl
mov
cmp
inc
fadds
and
mov
adc
pop
sub
pop
insb
lds
cmp
inc
jge
outsl
cltd
lock
pushf
das
bound
das
test
sarl
data16
ss
pop
adc
ret
cmp
movsl
add
fwait
xchg
nop
ss
inc
cmp
pop
in
std
testb
rorb
mov
into
pop
aam
int
lea
test
arpl
xlat
mov
cld
outsb
xlat
mov
mov
aaa
and
pop
fsubs
inc
xlat
xchg
mov
sti
call
cmp
shlb
push
shl
sub
imul
jne
cmp
aaa
out
enter
push
push
adcl
mov
lds
push
inc
add
stos
jbe
push
int
les
lea
xchg
add
pusha
push
divps
sbbl
pop
pop
popf
xor
sbb
lds
add
jle
mov
outsl
fisubrl
negl
sbb
je
sub
cmpsl
jae
dec
push
sbb
cltd
xchg
mov
sti
inc
inc
sub
mov
xlat
hlt
xor
mov
test
gs
fistps
in
sbb
or
iret
mov
arpl
daa
cmp
or
mov
lahf
xor
sub
fistl
pop
xlat
and
xor
fs
sbb
push
test
pushf
lahf
loopne
cwtl
xor
sbb
or
out
xchg
insl
leave
out
mov
xor
sahf
mov
pop
test
dec
mov
leave
pop
popf
popf
int
ss
mov
pop
jo
data16
add
mov
ljmp
xor
jmp
mov
cltd
ja
xchg
pop
and
fs
inc
xchg
mov
xor
and
sbb
int3
add
or
xor
hlt
and
sub
jo
adc
or
cmpsl
mov
push
imul
ss
cmp
lretw
xlat
scas
lret
mov
arpl
int
xor
dec
xor
sbb
sub
mov
pop
scas
sbb
inc
inc
cmp
nop
mov
popf
adc
pop
ret
adc
pop
sub
std
jle
xor
fstpl
scas
lods
cs
out
rcrb
and
jp
lret
inc
lock
add
inc
shrb
dec
cmp
jbe
lock
dec
mov
arpl
jno
movsb
and
pop
call
dec
mov
rol
into
add
jp
outsb
jp
rcll
pop
or
push
add
popl
not
lea
sbb
pop
mov
pop
sti
sub
mov
inc
lea
add
mov
and
or
addr16
lods
fcmovb
pop
and
cmp
xchg
std
in
cmpsl
fmull
bnd
shrb
int
fs
mov
lcall
push
loope
xchg
xchg
inc
int
loope
jg
jo
add
mov
mov
divb
or
or
lock
sub
shlb
xor
fisubl
xchg
mov
lods
lcall
pop
push
inc
jle
sbb
xor
jne
inc
gs
push
mov
xchg
enter
imul
les
and
and
jns
sub
cwtl
sub
and
lods
es
ss
mov
push
cltd
add
pop
repnz
fistps
call
and
jbe
repnz
jo
cmpsb
inc
mov
adc
jno
mov
and
aaa
inc
ss
jae
push
imul
or
or
in
mov
out
dec
aad
adc
insl
push
fisubs
sbb
jg
or
pushw
inc
add
leave
jo
and
inc
push
jno
leave
dec
sbb
mov
sub
imul
xor
pop
and
inc
scas
imulb
or
and
mov
bound
je
xchg
popa
shlb
das
in
sub
sbb
jnp
sbb
mov
cs
xor
mov
push
xor
and
arpl
lahf
xchg
sub
es
inc
pop
int
sub
jle
fldt
icebp
pop
gs
cmpl
out
insb
jb
sub
mov
dec
and
cmp
inc
xchg
shlb
and
pop
mov
mov
call
andb
ret
xor
fimuls
cmc
in
cltd
outsb
loop
push
pop
jge
mov
jge
push
scas
mov
push
aaa
lea
pop
mov
or
jl
in
scas
test
mov
inc
xor
sub
std
xchg
mov
xor
push
stos
fwait
sub
xor
test
cmp
inc
les
popa
xchg
jnp
or
cmp
in
dec
cli
insb
inc
inc
push
pop
shl
and
mov
jno
popf
pop
mov
pusha
data16
adc
xor
mov
xchg
popa
xchg
outsb
ss
push
sarl
sub
lahf
int3
loop
pop
inc
repz
lods
repz
mov
data16
or
dec
push
pop
jmp
movsb
rcr
xor
xlat
arpl
mov
test
cmpsb
shrl
pop
sub
cmpsl
lock
jns
mov
xor
rolb
mov
sub
xchg
ja
jb
pop
dec
lret
scas
inc
xor
inc
in
sub
push
in
add
inc
negl
jbe
sub
xor
xor
popf
mov
stos
pop
leave
fs
jno
nop
nop
dec
lcall
inc
pop
adc
mov
mov
mov
imul
sbb
popf
pop
nop
cli
pop
cmp
inc
mov
fadds
aas
pop
push
sbb
mov
vcomisd
mov
jno
out
lods
dec
sub
jp
jb
push
cmp
inc
loope
jg
jo
dec
shrl
pop
into
inc
cmpsl
add
out
mov
sub
mov
inc
and
hlt
jnp
sub
aas
divb
mov
data16
push
xor
jne
addr16
cmpsl
sahf
sub
mov
add
pop
xchg
fimull
mov
shlb
fidivrs
sahf
lock
pop
xlat
test
xlat
mov
pop
mov
add
push
movb
cmp
pop
and
ja
sub
adc
std
out
push
push
mov
mov
lret
ljmp
cmp
int
test
cmp
jl
sub
or
sbb
loop
mov
sbb
std
addr16
sub
mov
push
inc
andl
ljmp
jnp
or
jae
ret
mov
jbe
sbb
pop
in
loope
std
dec
or
cmpsl
push
push
pop
mov
inc
pop
aad
mov
das
push
mov
aam
cmc
fistpll
loope
imul
lods
mov
shrl
push
jnp
pusha
and
mov
negl
arpl
or
outsl
push
pop
jl
ds
fisubs
aas
pusha
outsb
dec
xchg
xor
inc
dec
fistl
lea
mov
fs
adc
cmpl
call
and
pop
repnz
add
cmp
xorl
cmp
adc
mov
mov
mov
insb
mov
test
pop
test
jecxz
sub
add
lcall
aam
push
xor
push
cmpl
aaa
repz
mov
sbb
mov
call
push
jne
xchg
pop
outsb
xchg
cli
cmc
repnz
push
xchg
dec
les
sbb
dec
minps
jl
fidivl
mov
in
jae
loope
fmul
cld
xchg
pop
inc
push
xchg
xchg
lahf
cwtl
jae
call
cmc
xor
push
jecxz
xorb
mov
arpl
push
xor
pop
aaa
xor
inc
mov
outsl
pop
push
scas
push
das
aad
push
push
fsubs
mov
leave
pop
aas
lahf
adc
push
jmp
fmuls
xchg
xchg
lea
int
leave
jbe
adc
insl
icebp
fimull
repz
mov
cmc
repz
outsb
sbb
lods
test
bound
outsb
add
outsb
fidivl
cmp
jbe
and
push
fldenv
lock
and
push
repz
dec
iret
hlt
lods
or
xchg
aam
adc
pop
pop
rorl
jne
fisttps
arpl
out
or
pop
mov
mov
lcall
es
loope
mov
negl
adc
cmp
mov
cwtl
jns
cmpsb
cmp
cmp
in
mov
stc
mov
or
cmp
aad
aaa
push
jl
rcrb
mov
cmp
ja
add
lcall
xor
cmpsb
lret
inc
outsl
mov
or
add
stos
sub
js
mov
mov
xor
mov
mov
adcl
popa
insl
out
outsl
xchg
xchg
into
test
dec
dec
fmuls
ret
mov
xchg
test
aaa
std
cmp
push
adc
test
push
xchg
push
sbb
pop
pop
in
aaa
push
orb
mov
dec
std
cmp
and
dec
sub
pop
shll
pop
jle
mov
dec
test
sub
xchg
sub
or
pop
inc
adc
popa
mov
and
xchg
pop
pop
enter
pushf
sbb
pushf
das
lcall
sbb
jb
cld
sbb
dec
xchg
inc
int3
or
adc
sub
sub
outsb
lret
sub
mov
divb
lods
out
pop
inc
ds
sti
or
sub
xlat
out
or
lret
dec
push
cmc
push
xchg
mov
aad
push
jle
xor
push
cltd
xchg
out
add
stos
call
add
cli
or
test
sub
add
aaa
cmp
popl
cmp
inc
rorb
ret
aas
ret
aaa
das
mov
sub
xchg
dec
fisttps
mov
pop
out
outsl
xchg
adcb
repnz
cmp
ficoml
push
sub
mov
push
mov
jb
xor
inc
lock
pop
jle
xor
arpl
pop
cmp
popa
rcrb
sahf
mov
adc
inc
jle
outsb
sbb
pusha
fwait
pop
dec
nop
rcrl
mov
mov
jns
jl
icebp
in
xchg
pop
adc
imulb
pushf
outsb
loope
xor
fistpll
lds
sti
jle
ss
xchg
dec
mov
pusha
mov
loope
cmpsl
gs
adc
imull
and
lods
test
add
flds
mov
mov
jmp
lods
leave
sbb
pop
fistpl
lods
mov
adcb
sarl
int
insl
add
enter
push
or
icebp
push
push
xor
ja
fcomps
movsl
cmp
mov
not
orb
xchg
pop
call
shl
dec
cmp
sub
xchg
aad
mov
lock
mov
sbb
imul
rcl
shl
sbb
mov
xor
adc
inc
xlat
js
addb
sub
insb
out
push
xor
add
xor
ss
out
out
cmpsl
mov
addl
adc
in
xor
clc
sbb
cmp
add
xor
mov
gs
lods
fcmovnu
sub
push
fistl
rcll
push
out
in
xor
subb
clc
pop
test
cmpsl
dec
sbb
cltd
mov
popa
mov
dec
jmp
rclb
divl
mov
fwait
testb
lret
adc
xor
int
mov
or
xor
mov
xchg
insb
arpl
cmp
orl
push
jns
xor
xchg
xchg
sub
out
adc
add
push
inc
mov
push
ret
mov
sar
pop
xor
jle
std
cmp
cmp
lods
sbbl
pop
adc
push
pop
xor
ja
fwait
pop
jo
ret
inc
cmp
lds
sahf
adc
lods
lods
jl
sahf
in
fisubl
dec
xchg
and
adc
inc
mov
nop
sti
xor
or
add
bound
movsl
dec
push
lock
mov
sub
inc
add
enter
int
xor
xor
cld
lea
out
add
insb
fcomip
jl
jb
lds
lds
push
jmp
addl
fbstp
out
fcoms
es
push
roll
std
aad
shlb
jmp
xchg
hlt
ss
pushf
jb
icebp
sub
outsb
inc
dec
fistpl
mov
cmpsl
sub
jecxz
or
ret
mov
mov
mov
sbb
push
int
in
lcall
dec
push
orl
hlt
jne
les
test
mov
ljmp
fwait
pushl
dec
or
mov
and
int3
inc
inc
dec
mov
pop
in
push
mov
push
test
dec
addr16
test
popa
gs
das
pop
popa
hlt
das
mov
mov
mov
mov
mov
sbb
sbb
pop
fistps
jno
pop
jo
int3
xor
or
fildl
insl
aad
pop
mov
lcall
cmp
int
or
adc
or
in
pop
pop
dec
mov
loope
cmpsl
push
gs
sbb
ss
leave
testb
mov
dec
mov
callw
xor
cld
and
mov
jecxz
jg
mov
aaa
adc
data16
pop
xor
fmulp
fmull
clc
aaa
cmp
mov
sbb
pop
add
loop
repnz
inc
or
sub
outsl
repnz
or
add
pop
push
mov
ret
push
dec
aas
fmull
and
pop
cmc
faddl
stos
cmp
dec
adc
rorb
rclb
add
add
pusha
or
sbb
sub
push
dec
movsb
pusha
ja
sub
movb
sbb
imul
add
push
popa
dec
adc
nop
repnz
xchg
pop
pop
or
and
mov
divl
aad
sub
rcll
push
and
pop
and
or
push
mov
stos
mov
pop
mov
or
sarl
xor
xchg
lds
pop
mov
or
mov
je
mov
xchg
xlat
mov
inc
pop
sbbl
fildl
lea
cmp
daa
push
jmp
or
int3
pop
ds
mov
aaa
adc
hlt
inc
dec
rcl
pusha
cmp
add
adc
push
icebp
shll
inc
pop
xor
incl
filds
scas
cmpsb
insb
mov
adc
inc
loope
stos
push
cmp
and
mov
call
jle
xor
aad
cltd
ds
in
push
sbb
sub
xchg
sub
lock
add
xchg
pop
nop
jb
xor
aad
dec
add
daa
and
cmp
cmp
xor
pop
inc
lahf
popa
aam
mov
cmp
add
fiaddl
stos
cmpsl
xor
icebp
cmpsb
and
iret
sub
outsl
dec
push
adc
sub
push
jo
pusha
pop
pop
mov
mov
flds
or
hlt
push
dec
scas
sti
pop
jne,pn
stos
ret
jne
add
mov
sarb
leave
lds
outsl
repnz
stc
lret
je
rcl
dec
and
clc
imul
mov
inc
xchg
mov
add
pop
xor
jg
jl
xor
cltd
xor
push
mov
nop
fdivr
xchg
fwait
mov
mov
sbb
sub
push
loopne
lcall
loope
popf
lds
xor
cmpsl
mov
fistpll
std
pop
movsl
ficoms
inc
mov
xchg
push
js
scas
mov
std
mov
mov
shll
inc
popa
sub
xor
enter
xor
imul
push
xor
lods
movsl
cmp
mov
dec
add
dec
fstpl
mov
xor
cltd
mov
xchg
rclb
popa
cmpsb
sbb
fbstp
sbb
mov
push
pop
sbb
ljmp
pop
lds
icebp
ret
in
sbb
dec
incl
in
lret
mov
xchg
xchg
mov
xor
push
pop
jecxz
mov
movsl
cs
jb
mov
sbb
mov
xchg
mov
daa
xchg
jge
cmpsl
jns
int3
loop
test
sbb
xor
mov
mov
popa
sub
sbb
pop
pusha
ret
inc
movsl
inc
xlat
push
mov
jecxz
and
jg
push
sub
ljmp
leavew
adc
pop
cmp
rolb
jge
in
push
popf
push
inc
lret
jge
aam
add
shlb
pop
mov
shlb
cli
lock
fiadds
pushf
xchg
pusha
inc
divl
jge
xor
mov
imul
lods
gs
or
add
xchg
push
push
jecxz
ret
imul
scas
in
in
pop
pop
loopne
movsl
hlt
dec
rcl
add
cli
and
push
test
pop
add
mov
adc
imul
xor
pop
jnp
jmp
pushf
jle
lods
dec
clc
xchg
dec
aad
lahf
mov
stc
aas
add
ljmp
jecxz
and
dec
sbb
cltd
loope
iret
add
mov
aas
dec
xchg
mov
in
add
xchg
ret
push
test
mov
cmp
push
adc
lods
insl
jmp
shlb
mov
sbb
push
out
mov
xlat
movsl
les
jb
mov
adc
jno
xchg
mov
sbb
inc
stc
sbb
adc
mov
inc
adc
lcall
int
arpl
xor
fiadds
popa
xlat
push
xchg
sbb
scas
jmp
pop
iret
mov
lcall
mov
mov
mov
dec
pop
xor
aam
pop
mov
add
jl
lret
xor
loope
xchg
mov
push
icebp
mov
packuswb
daa
ss
repnz
pop
repnz
jae
incl
pop
xchg
pop
bound
sbb
mov
andb
scas
push
gs
lea
dec
cmp
mov
sbb
inc
or
scas
out
mov
pop
add
movsb
pop
loop
mov
mov
aas
ret
outsb
cmpsb
adc
jl
test
roll
lock
popa
add
adcb
mull
addr16
adc
mov
fdiv
jnp
dec
pop
int3
mov
jge
fsubrl
inc
lock
mov
mov
lret
imul
popa
xor
xor
js
push
aas
xchg
outsl
mov
or
pop
lods
stc
in
pop
out
int
cmpsl
adc
push
pop
and
add
enter
insb
xor
xlat
mov
insb
sbb
adc
loop
mov
lods
in
hlt
js
mov
mov
or
mov
push
test
push
pause
je
fcomp
adc
xchg
add
pop
mov
pusha
mov
imul
add
xorb
fistpll
pop
and
inc
adc
test
inc
mov
cmp
push
push
gs
ret
mov
insb
jno
adc
pop
test
add
arpl
xor
push
mov
jle
pop
mov
cli
xchg
jno
movsl
enter
hlt
mov
test
xlat
adc
mov
mov
adc
mov
xchg
sahf
movb
mov
jno
mov
pop
jnp
mov
sub
jmp
aam
or
or
stc
xchg
xchg
sub
outsb
mov
in
xchg
sti
in
rol
push
ficompl
push
sub
mov
xlat
stc
sbb
push
mov
std
mov
sub
sub
xor
shlb
jns
cwtl
pop
jg
int
push
pop
mov
xor
push
inc
mov
xchg
or
mov
sti
fdivl
jp
fs
filds
in
negl
push
movsb
std
adc
cmp
in
icebp
adc
and
fnstsw
pop
jge
sub
xor
or
into
cli
insl
mov
loop
pop
xor
xor
xchg
pusha
xor
int3
mov
and
rcrl
sub
mov
jb
scas
xchg
jle
rcr
and
popf
dec
pop
pop
inc
nop
xor
jo
push
pop
push
cmp
mov
fdivrs
mov
dec
lcall
xchg
jne
mull
sbb
push
lret
cmpsl
hlt
ljmp
test
mov
push
or
pop
sub
stc
dec
add
icebp
xor
and
mov
jbe
or
sbb
test
in
test
and
and
push
xchg
inc
add
and
ss
stos
sub
iret
pop
pop
jecxz
xor
dec
iret
lods
test
jle
sahf
inc
repz
cs
pop
jns
outsl
test
jns
aam
cmp
jg
push
adc
test
and
mov
and
notb
shll
or
jnp
cltd
ret
movq
inc
sbb
mov
pop
mov
insl
fstl
jo
mov
cwtl
bound
sbb
mov
mov
imul
xor
aaa
fdivr
xlat
xchg
hlt
and
call
cld
mov
and
pop
imul
stos
fidivs
pop
in
fildl
fisubrs
pop
adc
ja
xchg
stos
xorb
fistl
push
pop
mov
jge
int
in
inc
repz
out
push
jmp
lds
icebp
add
inc
adc
xor
pop
or
fimuls
addl
call
mov
cmp
pop
orl
inc
std
dec
push
mov
in
xchg
in
xor
hlt
dec
adc
or
dec
popa
stc
and
mov
or
sbb
jbe
inc
mov
daa
push
sub
std
pop
push
popf
mov
mov
sbb
and
and
int3
xchg
hlt
cmpsb
dec
or
push
fisttps
sbb
jg
sub
jl
rcr
fisubrl
lea
imul
hlt
fs
sbb
dec
idivl
hlt
push
mov
icebp
cli
pop
hlt
repnz
push
es
push
dec
inc
insb
shll
movsl
das
and
push
inc
fisubrs
out
jnp
int3
or
mov
adc
pop
and
movntps
jg
sbbl
cmp
xchg
test
jmp
sbb
rclb
xchg
lds
cli
dec
cmp
push
cmp
mov
test
jp
xlat
jae
jns
ja
cmp
sbb
adc
jp
out
das
addr16
ss
ss
aas
popf
in
xor
and
pop
out
dec
insb
sbb
push
dec
jg
cmpsl
add
inc
xor
subb
push
popa
jecxz
cs
imul
ja
jo,pt
push
addl
xchg
jmp
loopne
add
stos
pop
in
int3
jmp
mov
cmc
adc
pop
mov
xor
adc
or
sub
rclb
mov
testl
jno
sbb
and
fcmovnu
cmc
adc
and
clc
mov
ret
add
loope
xchg
hlt
pop
and
adc
sbb
or
jmp
pop
and
lret
adc
jno
dec
cli
in
clc
cmp
mov
pushf
adc
push
and
aaa
scas
mov
movb
xor
clc
mov
test
or
scas
ss
cmp
dec
loope
jmp
mov
xchg
sbbb
lahf
mov
cwtl
mov
xor
push
das
push
jb
icebp
or
fdiv
sti
stos
test
sub
xor
adc
mov
sqrtps
push
dec
aam
and
movsl
cmp
shrb
push
out
xor
sahf
add
test
ds
push
or
mov
pop
cld
ror
xchg
sub
shlb
int3
jae
mov
push
jb
lret
mov
lret
decb
or
pusha
mov
inc
popf
scas
add
cmpsl
cmpsb
das
shrl
sbb
sub
mov
insl
bound
aad
inc
aam
sub
mov
popf
dec
outsl
push
out
pop
sbb
jo
lcall
icebp
out
arpl
pusha
push
bound
sub
sti
cmp
jno
pop
shrl
add
arpl
ds
sti
das
xor
dec
mov
stos
cmc
mov
pop
push
loop
daa
jnp
add
out
jb
fmulp
push
jne
xor
jg
stc
push
test
stos
sbb
cld
pop
fisubrl
xor
push
addl
push
xchg
icebp
sbb
xor
lock
or
inc
movsb
pop
fnstenv
js
xor
pop
xor
sti
int
sbb
xor
adc
lds
sbb
sub
xchg
jle
pushf
ds
and
bound
mov
inc
stos
imul
dec
andb
inc
xor
mov
outsb
rcrl
mov
sbb
inc
stc
out
adc
xor
sbb
lcall
dec
mov
inc
cmc
mov
lea
inc
push
ja
cmp
jns
push
test
add
sub
xor
ds
mov
daa
icebp
mov
enter
out
mov
add
and
je
pop
xor
insl
test
pop
push
fnstenv
and
mov
ljmp
sbb
and
inc
inc
ss
jb
mov
adc
es
inc
ja
xchg
jne
jo
jae
sahf
or
fisubs
jge
adc
mov
sti
testl
mov
push
jp
adc
adc
mov
test
negb
aaa
mov
adc
pop
pop
jns
inc
pop
iret
scas
pop
dec
inc
lds
jae
cmp
fidivrl
cmc
shlb
pop
sti
jg
fadds
add
cmpsb
insb
pop
cli
sub
push
insl
mov
in
push
fistl
and
and
add
sub
imul
sbb
mov
mov
popf
ss
mov
js
sbb
ss
in
daa
jmp
mov
push
adc
xchg
in
rorb
push
adcb
dec
add
popa
xor
jle
mov
outsl
call
cmpsb
push
xchg
test
mov
loop
pop
fmuls
pop
in
and
fcoml
push
stc
mov
sbb
push
faddl
cwtl
push
push
dec
push
bound
ss
and
adc
in
movsl
in
ss
or
repnz
cwtl
mov
jg
sbb
jns
sbb
fnstenv
xor
jno
into
push
rorl
clc
add
hlt
lock
sub
inc
dec
jne
loope
mov
dec
mov
jmp
popa
push
or
pop
push
dec
outsb
sub
mov
cmp
or
aam
mov
mov
pop
mov
and
jno
dec
or
rorl
pusha
mov
or
stos
sbb
mov
or
test
mov
jmp
roll
mov
jp
dec
mov
mov
popa
movsl
dec
ja,pn
roll
pop
jno
inc
xchg
inc
bound
les
push
aas
fwait
insl
and
aam
or
push
xor
mov
imul
loop
outsl
insb
jg
mov
or
icebp
aaa
clc
mov
lret
rcr
sbb
lods
xchg
mov
push
jne
pop
adc
sub
inc
fwait
iret
ja
fsubl
arpl
sbb
cmc
mov
xor
sub
inc
lds
daa
mov
fstpl
cmp
dec
xor
jae
scas
add
mov
jns
pop
mov
clc
ret
push
mov
stos
dec
or
or
xchg
mov
icebp
out
or
sbb
out
or
cmp
push
push
imul
repz
sti
adc
push
andl
in
lods
outsb
icebp
or
rcll
mov
mov
mov
cmp
cmc
outsl
dec
xorl
cmpsb
mov
or
data16
push
gs
les
sub
adc
pusha
arpl
and
popa
mov
aas
rorl
mov
mov
sbb
mov
pop
jge
movsl
lock
cmp
inc
loop
inc
mov
mov
rorb
push
adc
int
aaa
ret
insl
pop
std
inc
jge
jmp
pop
popa
push
sahf
filds
or
push
dec
out
dec
hlt
fcoml
mov
mov
mov
xchg
or
lret
clc
ret
mov
out
scas
xor
mov
fcoml
mov
cmpsb
dec
repz
mov
sbbl
pop
jle
and
sbb
xchg
sti
nop
aas
test
lock
fisttpll
into
mov
loopne
sub
pop
xor
adc
repz
jo
in
sti
or
push
loopne
hlt
xchg
mov
stc
push
sar
nop
in
je
clc
popf
daa
push
mov
pop
ret
movsb
ljmp
mov
aas
out
sbb
addl
ja
in
pop
jg
data16
mov
daa
xor
add
inc
xor
fstpl
dec
xor
daa
ljmp
idivb
imul
inc
nop
xorb
imul
aam
adc
adc
dec
movsb
mov
mov
dec
add
dec
movsb
adc
dec
imul
jmp
pop
in
xchg
jb
rcrl
cmp
inc
mov
fistl
cmpb
sub
mov
sub
mov
and
int3
mov
inc
adcl
lret
mov
pop
push
ds
jl
cs
lods
cmp
xchg
and
or
xchg
aas
adc
popa
outsl
inc
lock
jl
out
mov
inc
pop
mov
test
mov
ds
cld
cltd
pop
or
dec
or
xor
jge
xchg
nop
cmc
or
mov
adc
xor
push
mov
std
stos
call
int3
mov
call
faddl
add
flds
mov
aas
cwtl
xor
pop
sbb
mov
outsb
test
inc
xor
sbb
and
xor
enter
mov
push
and
dec
xchg
mov
mov
imulb
and
xor
sub
ss
inc
push
sahf
pop
rcr
sub
in
add
add
sarb
sbb
stos
mov
jl
addr16
jmp
inc
sub
or
xor
mov
popa
loop
mov
imul
push
je
mov
inc
and
cwtl
les
sub
sbb
jnp,pt
orl
push
and
sbb
mov
hlt
or
in
aad
fwait
sbb
imul
sub
js
iret
sub
xchg
xchg
mov
mov
push
icebp
or
xchg
movb
jle
add
aam
dec
or
es
adc
or
jbe
cmp
aad
int3
mov
sub
sbb
mov
add
lret
mov
cmp
lret
mov
jmp
popa
cmp
out
sub
popa
inc
repnz
or
pop
inc
daa
or
les
lods
insb
inc
std
andl
cmp
sahf
aad
pushf
mov
cmp
xchg
into
jp
xchg
dec
push
inc
push
dec
jo
lahf
stos
sbb
xor
enter
out
repnz
xchg
scas
sti
sbb
iret
xchg
hlt
stc
adc
scas
addr16
jl
cmp
insl
mov
in
cltd
cld
mov
jp
jg
sub
sub
into
cmp
dec
lahf
mov
mov
lods
js
mov
dec
scas
or
dec
call
jae
xor
mov
imull
movsb
pop
hlt
daa
adc
sbb
inc
and
scas
sbb
pushf
sbb
cmp
out
inc
out
mov
cld
shlb
lea
mov
popa
jne
or
test
loope
xchg
hlt
fmuls
sahf
out
movsb
cltd
jnp
out
fdivrs
xchg
xor
xchg
insb
jge
xor
cmp
jp
fisubs
add
mov
setge
loope
mov
jb
sbb
outsb
test
repz
and
mov
fbstp
shr
clc
lretw
cmp
xor
lds
mov
cmpsl
xchg
shrb
imul
mov
inc
popa
inc
add
das
insb
dec
in
mov
lcall
jnp
lea
add
les
mov
leave
or
and
adc
test
push
pop
inc
mov
into
or
andps
xor
iret
cltd
mov
ja
push
mov
pushf
pop
mull
xchg
test
dec
sub
jnp
mov
ds
push
cmpsl
mov
test
pop
mov
adc
push
jle
aaa
cmp
aaa
mov
lock
es
xchg
and
leave
dec
lret
scas
pop
test
add
mov
orb
pop
mov
xor
ret
pop
mov
stos
dec
fldpi
xchg
cmp
aaa
int3
and
leave
jmp
xor
jb
pop
addr16
idivb
add
lret
pop
loope
inc
repnz
nop
lret
sbb
xchg
push
xchg
test
xchg
test
ret
leave
enter
mov
dec
out
shll
sbb
jo
ret
sub
leave
mov
inc
pop
aam
insl
scas
fstps
in
nop
dec
sarl
andl
movsl
dec
out
and
popa
push
mov
in
mov
loopne
jno
inc
cmpl
int3
stc
sbb
cli
adc
in
pop
xor
push
jne
add
jns
movsb
push
jne
mov
jnp
rclb
jge
stos
lahf
adc
push
repnz
mov
inc
cmp
jne
shrl
mov
mov
lret
adc
aaa
repz
mov
flds
cli
aas
cmpsb
cmp
xor
lahf
dec
lret
cmp
xchg
push
mov
sbb
call
shll
aaa
repz
clc
insb
adc
push
in
mov
in
les
ficomps
or
jae
sub
aas
pop
or
test
ror
inc
icebp
mov
test
pop
dec
dec
imul
das
adc
aad
add
sub
mull
adc
adc
pop
fistl
std
test
xchg
fcmovnu
stos
or
mov
push
push
fsubp
dec
decl
out
ss
loope
fimuls
dec
mov
pusha
dec
pop
daa
sti
cmp
into
cmp
sahf
mov
roll
rcll
hlt
mov
and
mov
push
movb
lahf
mov
sbb
fsubs
arpl
jbe
lock
loop
mov
test
dec
cwtl
loope
test
adc
cmpsl
xchg
pop
mov
rcll
fistpll
mov
xchg
shl
insl
cltd
loop
call
jno
xchg
adc
and
das
sbb
das
ss
dec
popa
addr16
leave
pop
or
mov
mov
imul
int
xor
cmp
sbb
in
sbb
movsl
push
xor
cmp
loope
ljmp
push
push
inc
in
fs
sbb
mov
sbb
pop
mov
loope
jbe
mov
mov
lahf
clc
sbb
fs
add
xor
lock
pusha
cs
jo
lea
iret
testb
mov
pop
jno
sub
das
xchg
test
lock
gs
enter
jne
sub
aad
ret
aad
push
or
test
cli
je
popf
pop
cmp
test
adc
or
jmp
push
imul
add
fistps
xor
aas
dec
jne
dec
sar
jecxz
mov
dec
ja
jae
leave
out
shll
jns
in
xchg
cmp
js
push
dec
outsb
pop
pop
push
sub
mov
mov
imulb
jmp
scas
adc
mov
jg
ret
popf
jb
test
test
adc
pop
mov
gs
cmp
dec
add
inc
xor
mov
cld
lret
cmpb
rcll
popa
into
pushf
push
pusha
outsl
lcall
scas
mull
jo
cmp
xor
sbb
lock
test
push
and
push
test
mov
test
mov
mov
in
xor
popa
sub
mov
push
cmp
ljmp
dec
adc
sti
mov
jne
call
add
jbe
cmp
inc
push
out
or
jg
adc
pushf
sbb
pop
or
cs
clc
jge
sub
xor
hlt
push
insl
pop
leave
mov
fincstp
sub
mov
inc
aad
cmp
push
push
mov
daa
adc
pop
cs
sub
xchg
outsl
mov
repnz
mov
jbe
out
jb
aaa
cmpsl
xchg
loope
sbb
sbb
dec
repz
xor
aam
call
rorl
scas
cs
sti
and
cmp
cltd
mul
sub
decb
imul
icebp
mov
cmp
aaa
pop
movsl
mov
and
xor
pop
jno
sti
push
xor
mov
dec
mov
mov
sub
int3
pushl
fistps
ret
icebp
gs
lahf
icebp
push
xchg
loopne
int3
dec
mov
add
mov
cli
in
add
adc
mov
dec
sbb
lock
sbb
fadds
pop
mov
mov
pop
xor
xlat
lock
push
mov
hlt
popa
pmaxsw
pop
inc
out
ds
add
mov
outsb
sub
cmc
sbb
cmp
pminub
add
cmp
push
sbb
inc
leave
sbb
lahf
pop
push
fdivrs
out
sbb
ret
jo
adc
mov
mov
xchg
or
push
ss
lcall
aas
jne
and
adc
ds
mov
aad
pop
cmpsl
sahf
mov
mov
add
xchg
out
push
inc
push
jns
std
pop
pop
mov
repnz
sbb
inc
push
push
pop
mov
pop
cwtl
mov
dec
fidivrl
sbb
inc
sarl
sub
inc
mov
xchg
dec
and
mov
inc
ss
inc
dec
aad
inc
mov
adc
sbb
sub
adc
fdivl
mov
movsl
insl
inc
fstpt
sub
imul
mov
movsb
push
xchg
stos
cmp
mov
iret
nop
pop
arpl
push
pop
mov
cmp
push
cmpsb
ror
pop
mov
mov
ret
push
cld
divl
negb
inc
test
xchg
or
cmove
repz
sbb
xor
fs
adc
sub
int3
movsb
repnz
xor
mov
arpl
mov
pop
and
enter
mov
cwtl
popa
and
addl
cwtl
aad
adc
xor
push
mov
adc
ja
stos
push
repnz
cli
cmp
jecxz
and
imul
push
xor
aad
fnstenv
cmp
ja
mov
cmpsb
clc
sub
xor
xor
add
int3
xor
jnp
rorl
out
xchg
jnp
xor
in
loop
dec
push
inc
rcrl
pop
test
xor
push
mov
aad
test
stos
cmpsb
mov
mov
outsl
ret
inc
jno
pop
es
mov
push
bound
or
outsb
xorl
es
out
lcall
out
sbb
mov
pop
sbb
push
xor
shll
push
cmp
pop
adc
cld
dec
cmp
addb
xor
mov
lock
xor
xchg
add
add
int3
push
jne
or
jmp
lods
mov
loope
push
mov
xor
mov
out
pusha
adc
daa
mov
les
add
sbb
lds
mov
dec
cmp
jb
mov
aam
sub
ss
sub
dec
xchg
dec
insb
inc
inc
aas
mulb
push
jae
mov
loope
xchg
xorb
jnp
dec
hlt
inc
stos
jae
int3
sbb
xor
sbb
xor
mov
jmp
sarl
in
lret
mov
shrl
push
in
clc
je
inc
xchg
adc
jno
or
dec
mov
push
push
in
mov
outsl
xchg
pusha
inc
pop
ret
and
mov
cmp
adc
repz
jl
je
sahf
fmuls
lahf
fcomps
xchg
push
sub
mov
inc
lcall
int
pusha
aam
xchg
sbb
mov
pop
xor
mov
ret
inc
mov
and
gs
lcall
xchg
or
or
mov
bound
gs
mov
lcall
cli
mov
dec
mov
and
arpl
add
daa
imul
mov
arpl
pop
xor
mov
xor
adc
mov
pop
mov
outsb
icebp
jo
jnp
popa
loope,pn
int
mov
jp
push
test
stc
rolb
cmpsl
nop
jnp
je
or
fidivrl
hlt
out
cmp
mov
pop
lret
adc
aad
mov
popf
xlat
dec
pushl
mov
mov
icebp
sbb
mov
cld
das
sti
jge
adc
xor
punpckldq
jne
adc
sub
cmpsb
mov
loop
cs
cmp
outsb
lock
or
cmpsl
and
lret
in
cmp
mov
mov
mov
cwtl
scas
xchg
ljmp
sbb
ja
pop
ret
add
sti
lahf
insb
add
sbb
sub
sub
aaa
test
test
and
jae
aaa
out
xchg
xor
dec
imul
sbb
js
paddq
xchg
fldenv
pop
arpl
loop
js
mov
mov
jnp
pop
fildll
loopne
aad
mov
sbb
in
mov
fs
imul
xor
mov
dec
jg
lret
in
xchg
add
push
outsl
les
lds
icebp
in
sub
sub
js
jbe
sbb
cmp
mov
mov
in
add
fs
popa
jno
pop
hlt
movq
inc
cmp
clc
cli
ljmp
adc
mov
loopne
shrb
fnstsw
icebp
push
add
mov
pop
ud2
ficoms
sub
xchg
aaa
or
jg
in
shr
push
frstor
jecxz
rorl
push
mul
xchg
fwait
jne
mov
repnz
jo
mov
mov
dec
sbbl
xor
xor
cmp
push
xor
ds
dec
pop
dec
sub
cltd
decb
loop
pop
loope
cmpsb
cmp
pop
ret
std
andl
or
inc
pop
cmp
pop
fisubrs
fcomip
fnstsw
imul
add
popf
subb
and
adc
test
test
mov
mov
add
mov
mov
loopne
xchg
jnp
pop
xor
pop
mov
add
xlat
test
push
icebp
xchg
mov
mov
mov
pop
fdivrs
inc
sbb
jp
dec
or
hlt
lcall
dec
cld
mov
fcmovne
dec
push
icebp
mov
xor
pop
les
mov
sub
push
mov
xor
xor
in
mov
in
push
xor
jecxz
push
mov
mov
dec
xor
mov
int
insl
xchg
pop
dec
dec
xlat
lods
out
xlat
lock
fldcw
add
and
mov
mov
dec
lret
dec
insb
fiadds
xchg
scas
rcrb
pop
and
outsb
lods
andb
jle
sbbl
test
insb
shlb
repnz
push
jae
cwtl
xchg
push
sub
bound
popf
adc
pop
stos
cld
add
jae
lods
inc
or
xor
xchg
fdivrl
in
xor
mov
je
out
inc
stc
or
xchg
inc
push
pop
xchg
mov
out
xchg
jmp
rcrl
jle
and
negl
ds
pusha
pushf
xor
jl
ret
mov
xor
push
jl
or
inc
xor
mov
push
pop
int
and
sbb
push
movsl
jle
xchg
insl
and
xor
cmpsb
xchg
into
cmp
pop
cmp
cmp
out
test
jno
add
test
mov
push
pusha
jge
cmc
and
movsb
sbb
mov
sub
popaw
inc
imul
sbb
add
and
jmp
fbld
xor
jo
lret
pop
in
xor
mov
xor
sahf
cltd
push
mov
xlat
add
xor
sbb
pop
aas
iret
dec
xor
xchg
lods
and
fldcw
mov
pusha
movsl
or
stos
and
cmp
cmc
cld
stc
cld
scas
enter
pusha
xor
xor
enter
sub
push
es
cmc
mov
and
dec
insl
in
ja
out
pop
mov
xchg
mov
mov
out
push
stc
jo
push
push
mov
sti
dec
out
aas
adcb
mov
daa
and
sbbl
dec
xor
inc
decl
dec
inc
jmp
cs
jo
mov
push
or
ds
aas
insb
lea
mov
stc
cwtl
cmpsl
mov
adc
cmp
mov
in
jecxz
arpl
and
es
cmp
dec
movsb
call
and
out
and
cmp
jge
lea
repz
movsb
popa
iret
iret
mov
js
xor
insb
and
sti
pop
pop
push
fiaddl
pop
pop
mov
sbb
lods
mov
sbb
lret
pusha
insb
dec
bound
fistpll
push
gs
cld
ret
fsub
cld
pop
stos
fs
loope
adc
xchg
ja
jo,pt
mov
repnz
xchg
fdivrp
cli
pop
int
mov
nop
dec
scas
and
jbe
daa
test
popa
mov
push
jg
adc
ja
push
dec
push
mov
and
mov
and
mov
jecxz
in
and
jbe
or
sbb
dec
adc
jnp
dec
jge
pop
data16
fisubrs
sub
popa
inc
addb
xchg
mov
or
dec
ljmp
mull
push
ret
cmpb
xorl
int
loope
push
pop
lock
adc
in
pusha
fcmovnbe
aaa
jbe
or
int
testl
dec
imul
mov
add
adc
dec
add
cmpsb
or
aas
lds
xchg
orb
adc
bound
add
xor
cmp
add
in
out
aad
inc
push
inc
mov
jl
daa
aaa
push
adc
xor
insb
int
repz
pop
xchg
in
es
fnstcw
outsl
sbb
fwait
add
mov
jo
inc
add
add
mov
mov
add
dec
jnp
jge
imul
inc
cmpsl
and
mov
pop
lock
push
fcoms
cld
jecxz
dec
test
lcall
das
cs
and
negl
jno
or
pop
add
or
add
mov
push
gs
sbb
and
cmp
ss
push
aas
or
fistpll
nop
sbb
frstor
add
xchg
adcl
dec
sbb
gs
mov
leave
mov
xorl
xor
push
adc
inc
cld
mov
popa
lcall
mov
pop
jo
mov
sbb
ljmp
mov
out
pop
push
xor
jecxz
dec
insl
loope
bound
xchg
sbb
mov
jl
add
cmp
dec
pop
mov
cmp
mov
sahf
mov
sahf
popa
jns
xchg
insl
inc
jg
cmp
mov
out
lds
pop
fdivl
test
fisttpll
int
or
mov
dec
mov
add
jnp
push
outsb
sbb
fcompl
push
test
es
inc
rolb
push
int
shrl
aas
popa
push
pop
shr
icebp
fisttpll
cld
sbb
lret
in
ret
pop
das
stc
in
mov
pop
inc
jnp
mov
movsb
push
sub
pop
lods
repnz
and
dec
in
mov
hlt
int3
nop
jae
sbb
fs
cmpsl
fcomps
pushl
mov
testb
add
into
dec
test
xchg
cltd
mov
aaa
icebp
clc
lcall
sub
shrb
push
inc
xor
dec
mov
outsl
push
mov
push
push
bound
cmp
daa
jle
dec
inc
insb
das
push
call
and
xor
jle
sti
dec
add
dec
jo
cmpl
lock
xchg
pusha
mov
sbb
mov
adc
repnz
jmp
scas
movsb
js
mov
add
icebp
sbb
and
out
push
push
or
xor
fucomi
insb
mov
aaa
push
and
hlt
and
in
jg
jne
add
cmp
cmp
cs
mov
popa
sbb
imulb
or
leave
and
adc
and
jno
test
xor
mov
insl
mov
inc
add
adc
gs
pop
lods
sub
add
aam
repnz
inc
push
xchg
outsb
sbb
stos
cmpsl
inc
sahf
dec
aad
mov
inc
shl
cli
sub
lahf
sbb
mov
mov
es
sti
mov
adc
outsb
loop
sub
mov
cli
xchg
pop
lds
add
add
mov
mov
aad
fmull
shll
xchg
decb
pop
lret
nop
test
mov
cmpl
xchg
mov
push
addr16
into
sub
mov
mov
pop
loopne
out
mov
mov
js
test
aas
jmp
dec
and
pop
stc
loopne
mov
mov
sub
daa
and
hlt
in
pop
sbb
leave
inc
pop
inc
or
xchg
icebp
xor
xor
inc
and
and
dec
pop
jge
sub
dec
xor
xor
jno
clc
xor
cmp
mov
jb
cmpsl
pop
jg
xchg
inc
sarb
sti
inc
popf
leave
cli
mov
xchg
test
sti
cmp
mov
inc
sbb
jmp
fs
xor
sbb
cmc
aas
cmp
mov
cmp
or
pop
jmp
xor
jns
nop
xor
dec
xor
pop
mov
xor
cmp
leave
pop
frstor
add
addr16
xchg
icebp
sub
pusha
mov
push
sbb
bound
fistps
add
xor
mov
add
push
push
fisttpl
outsl
in
add
jle
sbb
dec
cmp
and
jno
adc
insl
add
loope
leave
cli
mov
xchg
test
sti
or
mov
inc
sbb
jmp
fs
xor
sbb
cmc
adc
or
xor
and
xor
jns
nop
aaa
mov
pop
fisubl
mov
sarb
xor
pop
frstor
add
addr16
xchg
icebp
sub
pusha
mov
push
sbb
outsb
add
pop
cmpsb
mov
pop
mov
adc
out
adc
push
push
outsl
in
add
jle
sbb
dec
cmp
and
jno
adc
insl
add
pop
leave
dec
mov
les
dec
pop
mov
pop
and
mov
adc
aas
shrl
andl
data16
mov
xor
mov
and
fstpt
nop
xor
add
pop
xchg
icebp
fisubl
outsl
pop
fstpt
jno
stc
xor
pop
aaa
es
xor
mov
stc
add
cld
insl
pop
test
sbb
sub
pusha
sti
push
hlt
rcll
jne
xlat
ficoml
rcrb
xor
and
pop
jnp
shl
push
stos
pop
mov
pop
pop
aad
lods
and
xor
pushl
dec
adc
arpl
iret
sbb
inc
into
push
icebp
push
movsb
ds
aaa
or
shl
rolb
mov
add
fwait
cmp
movsl
pop
xchg
xchg
sbb
xor
push
popf
pop
push
ljmp
adc
mov
mov
dec
outsl
sbb
push
inc
pop
xor
stos
dec
xlat
pop
sub
jnp
jno
adc
mov
scas
test
cli
fimuls
fsubrs
mov
adcl
push
in
mov
lods
pop
cmc
xlat
xchg
xor
test
sub
std
push
cmpsb
daa
pop
push
push
jl
pop
xor
movsl
repnz
pop
popa
sti
sti
xor
sub
shrl
inc
adc
jns
data16
movsb
dec
aaa
icebp
xor
fs
fwait
shrb
xor
sahf
adc
sarl
mov
xor
lds
mov
jne
in
vphaddbw
pop
xchg
or
imul
outsl
rorl
jo
add
push
jmp
ja
and
add
jo
add
mov
or
push
mov
icebp
movsb
pop
pop
cmp
dec
int
or
aaa
rcrb
push
mov
bound
add
cmp
jo
test
adc
clc
iret
imul
in
cmp
outsl
pop
adc
inc
or
jno
ds
nop
jae
inc
cmp
inc
pop
dec
clc
push
imul
and
sti
test
aas
sub
test
pop
movsl
or
jne
inc
pop
popa
jnp
cli
bound
adc
jl
mov
call
dec
mov
nop
aaa
and
dec
xchg
adc
cmp
pop
mov
scas
das
insl
sub
aam
dec
sbb
or
cmp
and
jno
jge
fdivs
jge
adc
or
mov
push
lock
aad
xor
gs
inc
pop
cmp
and
int
adc
pop
lds
adc
std
add
xchg
dec
dec
add
xchg
xor
mov
mov
jmp
jno
popl
pusha
xchg
xchg
out
mov
jle
jge
cmpsb
cmpl
mov
fwait
xchg
add
popa
std
inc
test
js
xor
ficomps
dec
fldl
sub
nop
jne
scas
sub
and
sub
lock
jo
dec
orb
in
sbb
and
out
scas
test
into
jb
jne
cmpb
xlat
mov
or
ja
cmc
insb
lret
cmp
pop
adc
popf
pop
int3
test
cmp
dec
pop
aas
adc
loopne
mov
sub
dec
sbb
int
xchg
sbb
in
ret
jb
jo
jmp
push
ret
add
mov
out
and
dec
xchg
bound
pop
sbb
sarl
sbb
leave
add
xor
add
mov
adc
or
aaa
mov
lcall
movsb
imul
leave
cld
dec
daa
sub
mov
push
ja
cmp
jmp
sub
xlat
cs
and
inc
xor
movsl
pop
lret
jp
movsl
movsw
sub
gs
pusha
jge
ficoms
in
dec
cld
xor
das
jge
push
sub
std
lret
xchg
negl
aam
xchg
imul
shrl
mov
subl
nop
andl
push
movsl
pushl
shr
sbb
loope
jle
adc
mov
xchg
pusha
ljmp
jbe
cmp
aam
fs
stos
in
sub
enter
mov
aas
cmpsl
xchg
bound
fwait
in
test
cli
pop
sub
insl
mov
pop
lods
rcrb
loop
test
jae
cmpsb
jbe
xlat
iret
repz
inc
xor
jo
ret
jns
xor
xorl
xor
fildl
roll
jnp
mov
cli
out
xor
clc
ret
jo
pop
aad
loop
stc
lds
dec
dec
sub
mov
mov
addr16
mov
mov
xchg
jb
out
pop
xor
sbb
add
cmp
jmp
repz
sbb
call
in
ja
ret
ss
push
mov
cmp
inc
pop
repnz
sbb
jne
pop
ljmp
negb
aad
ficompl
jl
adcb
ss
test
wbinvd
fisubrs
xchg
adc
loope
nop
jecxz
mov
mov
dec
pop
push
jecxz
aad
jb
cwtl
in
adc
fdivl
mov
imul
xchg
dec
das
popa
sub
ss
enter
xchg
sub
mov
sub
scas
fs
stc
pop
mov
in
push
pop
xor
popf
adc
sbb
sub
dec
stos
cmp
xor
fildll
rorb
sub
dec
jecxz
aam
je
add
pushf
push
mov
cltd
das
je
test
rol
pushf
rclb
push
pop
mov
jns
mov
movsb
insb
rorb
pop
imul
test
shll
in
push
xor
sbb
or
inc
in
pop
xchg
pop
ja
adc
push
mov
aad
inc
popf
fsts
xor
jo
mov
pop
sbb
dec
push
and
pusha
push
sbb
les
pop
jmp
lahf
push
call
and
in
addr16
xorb
jle
scas
mov
xchg
xchg
mov
dec
fs
repnz
or
arpl
sarl
das
jge
mov
in
stos
cmc
mov
xor
out
cmp
pop
jns
push
push
mov
sbb
mov
cmp
mov
stc
mov
mov
cli
sub
sub
rcrl
fsubrs
inc
sub
dec
stc
lea
popl
dec
or
cltd
inc
push
xlat
xor
mov
and
mov
aam
es
lret
jmp
aas
push
fucomip
lret
js
cmc
sbb
add
jmp
mov
insl
cwtl
xchg
pop
dec
jl
cwtl
ficompl
jno
adc
sub
fistps
mov
sbb
sbb
jmp
push
addr16
rorl
pop
xor
je
pop
mov
shlb
mov
popa
push
ja
xchg
jmp
mov
mov
imulb
mov
clc
fists
imul
lcall
mov
mov
pop
cmp
or
xor
ja
lods
sub
push
xchg
mov
negl
pop
jb
dec
daa
xor
cs
add
fsubrp
push
pusha
icebp
inc
inc
mov
and
cmc
sahf
and
sbb
inc
mov
gs
into
mov
out
movsb
popa
jb
scas
fnstenv
push
pop
push
imul
or
cmc
push
adc
inc
add
mov
mov
in
cltd
push
lret
xor
sarl
mov
cs
das
aad
rorb
clc
push
push
lods
mov
jb
stc
adc
fstpt
or
iret
jno
mov
sub
ror
xchg
jl
leave
addr16
aad
pop
push
dec
and
sub
mov
cli
inc
pushf
popf
lcall
repz
dec
leave
iret
flds
xor
adc
jns
inc
mov
jge
lahf
xor
adc
push
xor
inc
ja
hlt
pop
jmp
sbb
pop
push
mov
cmp
cmp
pop
lret
pop
pop
add
test
add
jo
add
push
scas
cmp
dec
out
sbb
and
shl
or
xor
cmp
scas
xor
dec
mov
fcomps
add
mov
daa
mov
pop
mov
arpl
outsl
and
pop
push
sub
and
xchg
or
and
xor
mov
rorb
repnz
leave
cmp
push
jae
pop
xor
outsb
out
sti
inc
push
lcall
or
inc
lret
cmc
jno
enter
mov
leave
pop
jnp
aaa
inc
inc
aad
xchg
xor
and
das
push
mov
xchg
rorb
mov
and
adcb
adc
frstpm(287
repz
mov
movsl
pop
mul
jno
roll
fs
add
ja
mov
lea
enter
sbb
xchg
or
adc
imull
rolb
push
mov
shl
jo
cmp
lret
sbb
jg
inc
roll
xchg
std
movsb
pop
pusha
mov
push
fiaddl
pop
ficomps
out
mov
jne
or
jg
inc
andps
pop
sub
pop
dec
sbb
es
aad
jmp
fs
sbb
pop
inc
jne
dec
cltd
popf
xor
imul
sbb
popa
sti
lods
and
mov
xor
lcall
jge
pop
jnp
adc
dec
push
fldenv
push
test
and
dec
bound
out
cmp
and
and
xorl
popf
mov
xchg
dec
dec
mov
insl
mov
das
stos
mov
notb
xor
test
lret
andb
repnz
gs
inc
and
in
mov
inc
pop
pop
pop
mov
test
shll
dec
push
push
mov
test
push
push
and
sbb
out
mov
mov
iret
lcall
xor
movsb
inc
sti
cmc
sti
adc
adc
out
lea
push
repnz
mov
add
jns
xor
xor
scas
push
add
pop
or
add
pop
lods
sbb
push
cmp
xchg
and
push
pop
adc
addr16
mov
pop
fisttpll
jg
out
add
stos
jp
xor
sbb
psubsw
outsb
pop
mov
lds
leave
inc
dec
push
icebp
push
xor
jo
les
dec
push
insl
sub
lds
pop
xchg
cwtl
loopne
cmp
jge
push
mov
bound
loopne
mov
cmp
sub
mov
push
lea
pop
xor
fdivr
in
or
imul
sub
fs
loope
or
jne
shrl
out
sub
or
xorl
and
test
lods
mov
movsb
js
outsb
jg
adc
sarl
jnp
mov
cmpsb
xchg
and
sti
dec
pusha
aas
orl
adc
xchg
jge
sbb
sub
int
pop
jl
loop
into
mov
pop
pop
sub
and
out
xchg
pushf
xlat
aad
and
sub
ror
xchg
jns
pop
xor
xchg
shl
xor
push
enter
hlt
push
xor
cltd
imul
stc
fdivrs
das
test
xchg
pop
mov
into
addr16
adc
sbb
push
adc
mov
xor
pusha
push
data16
imull
fs
push
inc
sub
stc
mov
push
icebp
mov
adc
cli
jo
mov
add
sub
setb
xchg
jecxz
sbb
cmc
cltd
jnp
insb
inc
aaa
and
sbb
rcrb
sbb
mov
jno
orps
cmpsb
adc
sbb
xchg
pop
sub
and
repz
loopne
popa
movsl
jl
mov
lcall
xor
cmovno
xor
in
call
jnp
repnz
cmpsl
and
cmpsb
inc
incb
pop
xor
sbb
mov
ficoms
add
mov
pop
decb
sti
add
jno
inc
pop
inc
jle
cmp
push
mov
mov
cmp
add
pop
lret
xchg
dec
lahf
xor
or
lret
dec
cmp
nop
cli
inc
mov
add
cmp
loopnew
xchg
add
mov
movsl
lea
or
sub
pop
and
bound
and
cwtl
out
mov
lcall
add
push
adc
bound
in
mov
enter
mov
test
jmp
adc
cmp
int
fisttpll
in
push
jbe
inc
inc
inc
scas
rclb
sbb
inc
pop
dec
aam
cmp
add
std
sbbl
rcrb
shl
jae
negb
int3
add
aad
add
sahf
daa
jmp
cmp
popa
xchg
xchg
sti
insl
add
jmp
mov
jno
jo
cmp
pop
cmp
das
scas
jmp
je
ljmp
test
int
sbb
jl
popa
in
int
shrb
xchg
fmuls
jo
ja
xor
xlat
int3
inc
movsl
push
mov
adc
shl
xchg
jb
cmp
mov
test
xor
and
fsubl
jae
xor
cmpsl
in
add
sbb
and
adc
cmpsb
gs
nop
mov
adc
shrl
fnstenv
rcrl
mov
fsubrs
mov
in
pop
xchg
sbb
out
pop
push
pop
pop
shlb
cmp
cltd
lahf
sub
pop
mov
push
sbb
test
xchg
insl
pop
ret
push
sub
jnp
out
arpl
jmp
mov
mov
popf
mov
xor
mov
mov
inc
shlb
mov
fdivrl
addr16
aad
loop
sub
std
adc
mov
pushf
cmpsb
enter
or
sub
jae
hlt
push
lret
and
fwait
push
int
loope
mov
mov
push
scas
movsl
movsb
rolb
pop
lcall
dec
fisttpl
arpl
popl
rcrl
mov
xor
icebp
lret
loope
adc
loopne
aaa
pushf
jle
mov
call
testl
mov
arpl
inc
push
iret
cmp
movsl
sbb
mov
jge
mov
outsb
jns
in
push
mov
add
mov
popf
lea
adc
test
jle
ljmp
ds
pop
pop
sub
pop
sarl
call
test
lret
out
xor
mov
cmp
std
xor
popa
out
enter
push
adc
popa
adc
jle
cmp
imul
add
mov
mov
ja
push
jle
repz
mov
inc
dec
arpl
arpl
rolb
add
out
ss
lret
push
fsub
les
lods
es
movsb
jge
scas
data16
cmp
inc
dec
nop
iret
xor
xchg
in
test
leave
mov
out
daa
sti
in
sub
jge
pushf
pop
das
rcl
mov
aad
aas
jge
cltd
sbb
push
test
mov
hlt
cmp
stc
data16
cmpsl
add
jb
jne
dec
ret
mov
dec
es
mov
ja
jnp
inc
mov
movsl
mov
dec
xor
xor
sbb
cmpsl
jo
sub
jge
push
hlt
sub
dec
xor
add
xor
pop
fsts
out
in
pop
and
xchg
dec
popa
pop
ja
pushf
push
push
cld
inc
push
das
js
inc
aad
mov
rcrb
jnp
xchg
and
movhps
sbb
popf
jl
add
fisubl
out
pop
xchg
add
add
sub
loopne
faddl
add
popa
enter
daa
or
loopne
pop
cmp
dec
imull
int
jno
mov
mov
ret
sub
jb
or
imul
clc
add
adc
jo
int
mov
push
inc
fmul
xchg
adc
xor
mov
nop
or
sbb
nop
add
inc
and
outsl
fdivrl
ds
aad
jo
imul
xor
out
lea
fisubrl
lea
mov
shrl
xor
push
pop
jecxz
mov
inc
mov
xor
or
sbb
jno
jl
or
add
pop
pop
gs
in
xor
in
sbb
xor
xor
pop
mov
shl
in
shl
sbb
mov
sbb
or
or
mov
fprem
push
ss
sub
in
repnz
imul
xor
inc
mov
add
jg
dec
lods
popl
xchg
pop
xor
push
popl
mov
divb
mov
cld
arpl
sbb
cmp
clc
jecxz
push
dec
jae
and
mov
mov
pop
ficoml
push
movsb
sarb
mov
cmp
icebp
push
lods
xchg
test
int3
xlat
adc
sahf
in
mov
cmp
in
cmc
repz
pop
icebp
lahf
rclb
pop
adc
decb
dec
add
xor
cld
shlb
scas
aaa
and
scas
cs
xchg
push
dec
cmp
out
mov
jae
ja
cmc
stos
loopne
negb
dec
lea
in
ds
xor
daa
mov
jb
xchg
mov
pop
sarb
xchg
jp
inc
inc
test
inc
sub
pusha
std
lods
sub
pop
xchg
nop
arpl
sbb
gs
xchg
pop
mov
mov
mov
insb
cs
cwtl
das
push
push
or
cmpsl
cmc
aam
mov
fcmovbe
shufps
push
mov
mov
dec
movsl
adc
dec
pop
pop
sub
jg
or
dec
pop
adc
fsts
std
adc
ss
xchg
dec
fsincos
cmpsb
jmp
pop
test
dec
daa
inc
pop
fwait
sub
pusha
sub
pop
lcall
mov
add
adc
sub
or
and
dec
into
pusha
movsb
sbbl
jle
cs
and
mov
pop
cmp
sbb
sub
cmp
lahf
adc
lock
or
adc
iret
jl
repnz
cli
pop
sti
cmp
xor
mov
jns
inc
or
lret
gs
and
mov
mov
push
sbb
cmp
andl
scas
pop
or
cld
jb
loope
add
mov
mov
bound
xor
or
outsl
fwait
iret
inc
cmc
lret
divb
mov
cmp
adc
aad
and
dec
push
xor
and
stos
mov
push
add
xor
ss
das
sub
xor
adc
or
dec
add
mov
or
rcrl
daa
fmull
out
cmp
jae
jo
arpl
mov
push
xor
adc
add
bound
popa
stos
and
push
rclb
dec
gs
ja
icebp
pop
popa
pusha
cmp
adc
add
push
popf
jne
sbb
cmp
jg
or
icebp
inc
sub
mov
sahf
cmp
pop
outsl
aaa
cltd
dec
flds
outsb
daa
das
dec
dec
mov
aad
scas
mov
popl
adc
test
fcoml
xchg
push
pop
addl
inc
xchg
push
aas
xor
cmpsl
and
push
jp
inc
cmp
push
mov
dec
sub
and
iret
mov
cmpsb
int3
ret
sbb
insl
hlt
xor
adc
dec
pop
pop
pop
mov
fxam
push
push
fldt
gs
pop
adc
cmc
hlt
cmpsl
ss
push
daa
add
sub
out
cmp
cmp
push
and
xchg
aas
and
aas
jbe
cmp
dec
pop
iret
lock
dec
arpl
scas
popa
aad
push
cmp
cmp
sub
icebp
pop
jnp
add
xor
shll
adc
gs
jno
mov
mov
inc
dec
cmc
push
xrelease
ds
jno
pop
cmp
fwait
cmp
aaa
xchg
jbe
mov
dec
push
popa
flds
jne
fcomps
enter
push
clc
jb
je
in
push
and
adc
add
mov
lds
in
xor
xchg
jnp
lahf
dec
imul
push
std
popa
and
cmp
jne
push
push
pop
popa
dec
scas
mov
outsb
xor
xchg
fstps
insl
jno
mov
push
push
stos
cmp
or
and
push
adc
movsl
rcll
pusha
fcmovnb
sub
lahf
xor
push
popa
add
pop
xchg
and
int
xchg
xor
stc
or
es
sub
cmpsb
js
scas
addr16
cltd
xchg
pextrw
and
jno
lds
push
in
in
fdivs
pusha
and
je
pop
popa
int
and
sub
arpl
sti
jno
sbb
sbb
lods
mov
mov
fs
arpl
dec
adc
negb
in
mov
fdiv
sub
hlt
sub
dec
imul
pop
push
iret
in
push
push
popf
fcoml
popf
mov
setno
adcl
inc
gs
push
pop
jmp
mov
packuswb
fimull
pop
pop
mov
mov
mov
sbb
cmpsl
lods
adc
mov
xor
adc
push
cmc
nop
not
push
add
jns
mov
pop
pop
outsl
adc
cmc
xor
addl
push
test
push
sub
and
addl
jge
adc
pop
int
lret
and
inc
xchg
je
cli
sub
jno
jno
in
push
fucomip
mov
in
cmc
icebp
lock
dec
icebp
mov
pop
xor
add
imul
frstor
xchg
imul
arpl
leave
adc
mov
pop
push
add
sub
test
pop
adc
xchg
adc
gs
roll
mov
sbb
inc
adc
lcall
in
pop
mull
push
add
xor
outsl
pop
imul
adc
outsb
fistl
cmp
inc
pop
pop
mov
lret
paddusb
popa
ret
pop
and
test
sbb
adc
jge
pop
icebp
xor
mov
ja
or
leave
cmc
mov
std
sbb
pop
mov
or
in
je
inc
mov
push
mov
addr16
xor
mov
ds
inc
mov
imull
xor
mov
popa
mov
xor
or
lret
data16
dec
pop
mov
push
sub
push
inc
pcmpgtb
icebp
dec
cli
aas
push
loop
imul
or
stc
dec
adc
cmpsl
stc
cmp
push
cmpsl
adc
xchg
xor
addr16
test
xor
inc
dec
sti
mov
insb
js
push
dec
sbb
pop
xchg
jmp
shlb
mov
sarl
cmp
popa
popf
and
xchg
cmp
sbb
xor
insb
sbb
mov
popa
sbb
or
inc
cmp
pusha
xor
dec
mov
push
push
add
sub
pop
rclb
jle
test
pop
in
and
inc
maxps
dec
push
pop
aas
mov
dec
mov
out
push
cli
inc
dec
sarl
mov
add
jno
and
pop
cmc
dec
arpl
scas
fisttpl
outsb
push
daa
pop
in
mov
pop
jmp
jb
iret
in
sbb
xlat
jno
push
sub
xchg
fwait
nop
jge
mov
sub
sbb
test
adc
push
and
xchg
mov
inc
jo
outsb
test
pop
outsb
out
xor
aaa
or
add
pusha
mov
test
gs
outsl
shl
fs
pusha
jbe
sbb
push
or
sub
add
lods
push
sub
push
cld
mull
outsl
mov
inc
xor
or
ds
in
cmp
xor
cmp
mov
dec
dec
cmp
pop
cmpsl
gs
adc
out
mov
inc
push
xor
shlb
popa
adc
lock
mov
and
jae
fildll
mov
or
icebp
addr16
or
adc
out
test
jle
clc
js
lret
pop
mov
loope
and
and
add
dec
sub
stc
push
mov
xor
adc
xchg
cmp
rcll
cli
mov
jae
add
shll
ss
add
fdivrs
xchg
rcll
pop
movsl
cmc
mov
loope
mov
bound
in
jae
mov
mov
adc
outsl
loop
sbb
movsl
fneni(8087
jb
sbb
lds
cmpsl
push
dec
jmp
push
inc
scas
xor
jno
push
aas
lea
loopne
in
iret
sbb
and
add
adc
mov
or
push
das
mov
sti
dec
xor
addb
pop
shll
leave
movsl
sti
movsl
shrl
push
jno
dec
arpl
addr16
inc
rorl
lret
push
cltd
aaa
xor
xchg
data16
add
dec
push
cli
jl
test
mov
gs
in
or
mov
shlb
mov
add
aaa
fstpt
enter
sub
stc
xor
les
movsb
pop
pop
cld
push
add
and
popa
sti
jecxz
test
xor
enter
ret
int3
loope
in
ret
shlb
adc
or
pop
xchg
icebp
adc
scas
test
mov
cmp
gs
dec
and
sub
out
pop
repz
and
outsl
test
leave
cltd
cli
pop
scas
adc
testb
xorl
or
push
inc
adc
in
lods
mov
arpl
xchg
insl
and
mov
sbb
mov
and
fldt
pop
jae
int
cmpsl
adc
sbb
jle
ret
xchg
mov
pop
cmp
sub
jmp
hlt
lds
xchg
into
sbbb
fsts
shr
mov
pop
jmp
fwait
aam
enter
mov
mov
or
repz
push
imul
mov
lods
pop
sub
lock
pusha
or
outsl
mov
jbe
mov
lahf
jb
adc
mov
sbb
test
cmp
jge
outsl
aaa
cmp
repz
pop
stc
mov
adc
add
sbb
rcl
jno
pop
pop
dec
pop
push
push
jne
dec
push
sub
push
sbb
adc
mov
xor
mov
mov
mov
cmp
xor
leave
xchg
pushf
or
mov
add
rcrl
push
int
in
push
jmp
addr16
pop
mov
imul
cmp
jo
in
jo
fdivrl
add
inc
mov
jno
push
aaa
stc
push
push
inc
int
jecxz
rcrl
add
lea
leave
mov
xor
bound
lret
fistpl
iret
fucomi
sub
pop
pop
sbb
mov
add
xor
int3
in
mov
in
fwait
adc
cmc
sub
jmp
and
xor
lds
cmp
push
dec
mov
dec
subl
xlat
imul
montmul
cmpsb
addl
lahf
icebp
pop
xchg
lahf
in
add
dec
jae
gs
ja
cmp
add
fs
movsl
adc
nop
jmp
adc
mov
fs
dec
push
outsb
and
lock
cmc
xor
sbb
pop
mov
lahf
mov
adc
gs
mov
lea
adc
xchg
jmp
adc
add
dec
repz
lcall
fstpl
push
inc
mov
popf
and
movsl
jno
cmpsl
ss
lahf
ss
stc
ret
ss
push
pop
sarb
xchg
add
xor
shl
xor
pushf
shl
sbb
loope
mov
inc
sbb
xor
shll
lret
xor
cmpsl
fwait
xor
xchg
mov
sbbb
cmpsb
jl
pushf
sub
rcl
test
push
inc
dec
xchg
in
lahf
movsl
inc
jo
test
cmp
popf
xchg
pop
xchg
sbb
inc
das
adc
iret
push
jae
pop
jmp
in
mov
dec
mov
sub
xchg
pushf
jae
out
cli
cmp
adc
les
ds
cmpb
out
jmp
cltd
cld
ja
sub
imul
cwtl
test
cltd
adc
mov
lcall
and
out
push
into
cmp
cmc
mov
mov
loopne
data16
push
jl
aaa
mov
mov
loope
cld
sub
and
lret
rcll
gs
fnsave
popl
ret
push
loop
aad
inc
addr16
inc
repz
imul
sarl
xor
pop
pop
cmp
repz
popa
jno
das
adcb
enter
pop
clc
dec
mov
inc
push
les
loopne
bound
ss
mov
xor
mov
repnz
stos
insb
sbb
nop
aaa
iret
push
mov
daa
push
cs
adc
adc
xor
aam
cld
movsb
jl
add
mov
inc
cmp
bound
cmp
movsb
pushl
aas
or
sub
clc
data16
sbb
push
sbb
repnz
pshufw
push
mov
repnz
cs
fcoms
orl
cld
xchg
iret
pop
ret
mov
or
test
hlt
cmpsl
mov
add
mov
sbb
inc
aad
int
cmpsb
inc
xchg
xor
push
cld
aad
push
cmpsb
and
pop
inc
sub
aas
mov
sbbb
pop
icebp
dec
pop
xchg
nop
sbb
sbb
mov
into
adc
mov
jne
adc
cli
out
dec
push
mov
std
push
popa
call
sarl
gs
subl
and
cmp
pop
mov
call
pusha
adc
add
lea
mov
xchg
adc
dec
inc
leave
jnp
sub
sub
imul
jmp
jbe
mov
fcompl
mov
push
cmpsl
inc
pop
outsb
dec
addr16
mov
cmp
call
into
add
fists
inc
faddl
insl
enter
pop
pop
inc
cmp
mov
shl
sar
xor
roll
repz
ljmp
mov
sub
cmp
mov
mov
rcll
cltd
xor
jno
jno
cmpl
mov
add
iret
fdivr
mov
and
or
or
xor
push
xor
js
std
xchg
mov
nop
adc
imul
xchg
mov
push
shll
xor
test
orl
pop
mov
push
cltd
lret
out
cmp
xorb
pop
dec
cmc
iret
std
mov
push
pop
lcall
out
or
cvtps2pd
sahf
js
negl
mov
push
out
or
xor
jno
jno
lods
popa
shl
fs
xchg
xchg
push
push
lds
rcl
mov
xchg
push
push
sbb
jo
fisttpll
jmp
je
or
xor
push
cmp
insl
xchg
cmp
inc
fsubl
cmp
mov
add
fbld
neg
jmp
std
jae
push
pop
js
stos
adc
sub
xchg
fildll
cmp
mov
sti
push
es
mov
imul
jl
inc
inc
loope
subb
and
lock
sbb
add
das
int
mov
cmp
loop
nop
stos
cli
cmpsb
outsl
sbb
out
cmpsb
jnp
xor
adc
or
daa
mov
jns
and
push
pop
call
mov
addl
fs
roll
push
scas
mov
test
movsl
adc
push
xor
fs
inc
add
lea
shrl
add
in
inc
fisubrl
stc
mov
mov
bound
mov
cmp
jle
mov
mov
rol
jns
lods
xchg
xor
lret
sub
push
jge
mov
mov
out
jno
xorl
ja
out
outsl
inc
dec
xlat
int
insb
clc
lret
mov
push
xor
mov
in
push
and
mov
fwait
dec
pop
movsl
mov
icebp
inc
aaa
repz
enter
gs
scas
shl
xor
mov
pop
jp
sub
lcall
outsl
int3
mov
sysret
xchg
jnp
fsubrl
adc
mov
cmpsl
rcr
sarw
sbb
stc
loope
push
lock
fisttpl
mov
mov
mov
lods
add
sub
in
movsl
inc
xchg
push
sub
xchg
daa
xor
mov
test
cmp
leave
test
jb
xchg
lds
andb
push
mov
leave
sahf
mov
ds
inc
inc
xchg
or
push
addb
xchg
push
jmp
adc
and
fisubs
mov
fbld
int
shlb
ret
and
push
pop
inc
sbb
je
inc
dec
dec
xor
icebp
test
or
adc
xchg
imul
mov
mov
or
ret
insl
lock
insb
lea
mov
pop
jno
add
and
dec
mov
or
aaa
xor
sbb
cmc
xor
and
pop
xor
arpl
scas
inc
sbb
jno
xor
and
adc
push
jecxz
outsl
ss
enter
inc
nop
cmpsl
repnz
ret
es
sbb
sub
xchg
mov
icebp
pop
popa
xchg
nop
and
dec
and
xchg
fcoml
push
daa
jno
gs
out
or
pop
cmp
adc
cmpsl
adc
in
add
nop
in
scas
shll
xchg
sbb
hlt
in
ss
pop
fldl
sti
jbe
mov
fsts
scas
jg
out
jb
dec
test
pop
sti
adc
mov
xchg
dec
fnstsw
cmp
pop
dec
mov
push
jp
cld
cwtl
jg
adc
lods
cmpsl
adc
rcrl
inc
dec
fsubs
movsl
push
lcall
cmc
sbbb
pop
fdivp
xor
adc
push
pop
mov
ret
and
and
pop
out
jnp
xlat
mov
cmp
mov
jl
push
xor
cmp
loop
fwait
sbb
mov
dec
jg
jg
into
push
insb
sahf
in
xchg
pop
rcrl
fmull
aas
pop
lcall
test
mov
mov
mov
jge
call
lret
mov
adc
mov
xor
sbb
repz
insb
dec
push
add
mov
cmp
jne
mov
into
stos
mov
dec
orl
pop
hlt
int
mov
pop
push
lds
jge,pt
icebp
mov
and
bound
sub
mov
and
add
nop
call
jl
lret
adc
mov
cmp
sbb
into
das
sbb
clc
sbb
xor
push
cmp
outsb
shl
jmp
mov
mov
push
andl
nop
jo
cmp
fistl
or
mov
pop
jne
cmp
icebp
lret
idivb
mov
loop
dec
fwait
mov
imul
jb
cmp
push
sub
test
test
xchg
push
test
cs
addl
popf
clc
push
stos
xor
inc
mov
push
mov
aad
movsb
xchg
out
mov
sub
inc
xor
addr16
ja
or
mov
std
cmp
jecxz
xor
push
inc
cmpsb
jbe
mov
in
notl
test
mov
pop
pop
icebp
mov
jg
into
adc
mov
adc
cmp
in
adc
push
adc
stc
fildll
lea
and
xlat
nop
shll
aaa
jecxz
cli
jmp
fldcw
mov
cmpsl
jmp
jl
inc
and
inc
loopne
dec
in
lods
imul
push
addl
jo
cmpl
cmp
xor
arpl
out
jne
pop
mov
frstor
ljmp
imul
sbb
or
stc
mov
pushf
xchg
imul
mov
stos
push
xorl
fnstcw
dec
int3
and
cmp
sahf
cltd
sbb
cmp
ss
mov
mov
mov
or
pop
stos
sub
sub
jge
cmpb
jae
shl
arpl
dec
clc
jnp
pop
sub
mov
movsl
sbb
adc
dec
js
pop
dec
and
cmp
xorb
pop
inc
pcmpgtb
int
test
pop
xchg
ret
pop
mov
jg
leave
adc
xor
mov
push
sub
add
outsl
lods
cmpsb
negb
jae
popa
or
insb
lds
lea
or
popa
int3
out
add
fiaddl
out
mull
cmp
jno
and
mov
inc
and
insl
rcll
jge
and
mov
cmp
fs
mov
cmpsb
jl
and
test
mov
and
cmp
faddl
ljmp
cwtl
jmp
jne
fsubrs
daa
lea
push
fldt
cmp
xchg
xchg
xor
xor
add
stc
sbb
mov
jecxz
cli
idiv
push
dec
jnp
ljmp
xchg
repnz
xor
int3
dec
mov
mov
ret
repnz
rcll
imul
jle
sub
shlb
jmp
jl
add
mov
mov
bnd
sar
mov
fsubs
test
mov
mull
or
jns
push
jmp
lea
shll
leave
repz
mov
or
xlat
cmpl
loope
xchg
adc
pop
pop
and
rorb
daa
nop
in
lock
daa
sbb
fwait
push
push
ret
sbb
adc
jl
and
dec
rcll
xor
cmp
jbe
ljmp
lods
mov
jnp
orl
ror
pop
repz
mov
fdivs
lahf
popf
mov
roll
int
push
xor
xor
in
std
xchg
in
mov
xchg
cmp
jmp
scas
int3
je
mov
nop
in
les
or
inc
xchg
mov
sbb
addr16
movsb
xor
dec
hlt
and
and
push
jecxz
push
into
add
cli
mov
out
cmp
push
icebp
and
push
cmpsl
xchg
scas
cmp
cwtl
mov
pop
mov
stc
cs
xchg
inc
ss
xchg
movsl
xlat
lods
int3
iret
push
addl
push
fldl
or
dec
lds
fstpl
ret
icebp
enter
cmpsb
adc
test
mov
decb
xor
jg
pop
mov
cmpb
sti
fadds
xchg
mov
xchg
ljmp
mov
or
cmp
rorl
cmp
push
adc
push
dec
fcomip
imul
adc
iret
test
movb
out
mov
je
pop
ja
inc
jne
out
ret
rorb
lock
cmpsl
xor
call
fistpl
inc
cmpsl
mov
jns
loope
shrb
fcmovne
sbb
in
push
mov
rorl
lret
hlt
jmp
mov
jmp
mov
pop
out
aad
or
in
xchg
cmc
jns
lea
mov
xchg
xor
cmp
repnz
test
divb
iret
jle
cld
and
fiaddl
add
mov
mov
inc
daa
push
movsl
and
push
mov
or
out
insl
mov
fwait
lcall
push
inc
pop
xchg
loopne
repz
arpl
loopne
xor
jmp
int
fwait
lahf
adc
inc
ss
dec
stc
sarl
cwtl
shrl
les
add
fcmovnu
sbb
ret
scas
pop
cmpb
xor
rcr
mov
pop
adc
cwtl
popa
in
int
mov
push
jnp
ljmp
mov
pop
inc
cld
adc
les
faddl
or
push
rcrl
mov
lds
mov
cmpsb
push
or
lcall
enter
jo
mov
and
mov
xchg
jecxz
outsb
rcl
cli
cmp
adc
data16
cwtl
add
sbb
sbb
xchg
subl
cmpsb
cmp
into
mov
push
test
jle
cwtl
dec
in
mov
jne
xor
mov
dec
fcomps
leave
jb
ret
xchg
scas
adc
ds
xlat
popf
divl
xchg
ret
mov
jns
fnsave
or
lea
in
pop
xor
fs
mov
scas
xor
leave
daa
int
pushf
aaa
xor
leave
outsl
shlb
pusha
adc
adc
ret
lds
pop
mov
inc
push
fwait
and
pop
popa
inc
test
adc
arpl
std
jo
fidivs
xchg
rorb
insb
pop
xorl
pop
enter
jge
add
dec
enter
aaa
out
xor
dec
fisttpll
mov
jb
data16
insb
sbb
cltd
shll
push
mov
clc
lcall
and
jbe
outsb
imul
jae
jmp
stos
cmp
sahf
ds
repnz
mov
stos
push
mov
mov
jae
xchg
cmpb
mov
fwait
xchg
rcrl
pushf
outsb
and
cmp
cmp
cmpsb
scas
arpl
jge
mov
sub
jl
jno
lds
xchg
sub
ficompl
pop
popa
in
or
cmp
mov
lret
adc
push
pusha
mov
dec
xchg
scas
add
cmp
fs
adc
mov
mov
xor
xchg
insl
jmp
mov
addr16
push
inc
repz
stos
cmp
cmp
or
cmp
mov
sub
mov
pop
push
fistl
and
push
fs
out
cmc
orl
ret
xchg
jno
gs
xor
stos
inc
pop
pop
std
pusha
mov
out
jmp
aaa
in
in
jns
jp
repz
mov
cli
popa
call
add
cmpb
push
xchg
and
pop
mov
xor
or
cld
aas
or
sbb
mov
xor
fcmovnu
lret
les
jnp
push
push
mov
push
pusha
test
jge
aaa
sbb
daa
mov
in
jne
xor
adcb
xchg
das
add
inc
inc
popl
add
mov
xchg
cwtl
btl
sbb
mov
xor
adc
xchg
rcrl
pop
cmp
stc
pop
and
orl
popf
mov
push
xor
sbb
adc
hlt
mov
xor
out
mov
ljmp
pop
mov
je
std
and
clc
cmp
mov
adc
lret
ret
leave
mov
mov
cli
popa
out
mov
fwait
pop
out
insl
mov
addl
pop
sbb
pop
lds
imul
mov
lods
aaa
jge
in
push
idivb
pop
fwait
mov
in
inc
inc
mov
fmuls
sub
sub
push
test
push
xchg
mov
pop
xchg
cmpsb
xchg
mov
leave
pop
pop
adcl
mov
mov
xor
dec
jne
dec
arpl
mov
inc
mov
rcrl
dec
xchg
pop
fwait
loope
lret
cmpsb
cmpsl
aaa
aaa
and
push
dec
inc
mov
xor
in
add
adcl
enter
les
scas
movsl
aad
sbb
add
xchg
or
clc
outsb
loope
pushf
xor
jae
repz
jl
or
adc
fwait
bnd
jno
popa
mov
cmp
stc
pop
or
arpl
push
popa
enter
push
xchg
mov
faddl
inc
daa
inc
jno
mov
mov
adc
inc
loop
cmp
jnp
loopne
sbb
mov
or
cmp
out
mov
cmc
out
mov
out
xchg
mov
jle
mov
jp
jmp
xchg
in
aas
fcomps
insb
nop
sbb
orl
xchg
fdivp
jno
dec
test
loope
popa
ljmp
das
and
sub
fidivrs
enter
pop
pop
test
jne
push
push
sub
xchg
or
int3
lds
jl
lods
add
pop
mov
cmp
jne
mov
flds
int
pushf
pop
test
mov
jl
mov
pop
add
idivl
stos
shrb
mov
add
ret
in
push
sub
xchg
out
or
mov
cmp
xchg
ljmp
mov
std
push
xchg
jle
inc
push
mov
add
add
mov
cmpsb
mov
or
test
ds
arpl
dec
in
push
jecxz
jg
test
in
pop
sub
aam
aaa
movsb
sbb
clc
loope
add
xchg
mov
in
jmp
test
aas
popf
mov
pop
lahf
mov
in
pop
pop
nop
into
mov
mov
mov
in
cltd
loopne
push
or
rcl
adc
xchg
stos
enter
popa
push
popf
mov
fiaddl
mov
mov
xor
and
aaa
mov
and
inc
stos
das
pop
addb
xchg
divl
adc
cmc
mov
xchg
mov
cmp
xchg
or
lret
iret
pop
xchg
ret
sub
pop
in
lods
or
mov
pop
repnz
xchg
out
arpl
xchg
jecxz
addr16
les
cs
jp
cltd
jg
sbb
loopne
inc
cs
inc
dec
mov
sbb
mov
mov
arpl
mov
fstp
fldln2
and
pop
sbb
aam
cmp
imul
cmp
mov
mov
xchg
lods
cmpsb
fwait
loopne
mov
insb
call
mov
mov
movsb
or
in
and
fwait
test
xchg
bound
pushf
push
fwait
xchg
mov
push
xchg
and
test
sub
iret
inc
sti
dec
call
ret
cmpsl
sub
xor
lcall
inc
lret
sub
idivl
rcl
daa
aam
dec
sub
dec
inc
jae
popf
cmpsb
enter
and
cmp
cmp
cmp
jb
add
test
push
fs
and
inc
adc
adc
faddp
pop
jnp
pop
mov
push
xchg
xor
cmp
push
lret
sbb
fs
lret
mov
lods
push
pop
fistl
ds
adc
push
adc
daa
insb
int
movsl
jg
mov
push
inc
mov
test
mov
xchg
andb
test
out
dec
jl
push
daa
sub
pop
je
outsb
adc
repz
adc
mov
or
es
cmp
xor
rolb
mov
mov
and
jmp
xchg
jl
roll
sub
jecxz
mov
int
stos
in
xor
inc
jne
andl
icebp
mov
fnstenv
xchg
mov
in
mov
bound
inc
jbe
cmp
cld
adc
nop
jns
ljmp
mov
jmp
sbb
out
or
or
bsr
bound
jno
cmpsb
sti
dec
dec
call
sbb
xchg
cmp
nop
lods
enter
sub
ja
mov
cmp
xchg
inc
cmpsb
negb
sub
fsubs
pop
call
mov
leave
xor
pop
sar
lods
jno
mov
lods
xchg
js
pop
adc
movsl
pop
inc
sub
sbb
in
nop
sti
cs
and
xor
mov
fdivl
test
lret
push
leave
aas
shlb
ror
fs
fsubl
gs
popf
loop
cmp
mov
leave
into
sbb
pop
filds
aad
andb
inc
int3
cwtl
test
jl
jo
push
stc
mov
add
gs
aas
fnstcw
subl
xor
movsl
or
ss
pusha
mov
shll
roll
xchg
mov
fidivl
jp
cmpsb
call
add
pop
int
mov
mov
pop
sahf
sbb
int3
popa
imul
xor
jp
xor
xchg
mov
jno
or
in
mov
ljmp
aad
add
jae
sub
or
popa
out
xchg
fistl
xor
mov
inc
jmp
xchg
aaa
jae
lds
dec
lret
lret
pop
and
outsl
fsubrs
out
aad
mov
push
sub
shll
rorb
xchg
push
fadds
dec
mov
popf
push
and
or
xchg
mov
dec
pop
icebp
jecxz
movsl
adc
pop
pop
xchg
mov
iret
xlat
popf
mov
leave
inc
popf
cvtps2pd
jb
lret
shlb
pop
xchg
push
sahf
pop
mov
leave
scas
and
daa
mov
imul
pop
lds
andl
xchg
adc
inc
jp
addr16
in
lds
sti
and
imul
or
or
repz
lahf
push
xchg
notb
inc
andb
xor
mov
fistpl
adc
fsubp
stc
jmp
dec
mov
std
push
or
mov
rcrl
fwait
push
push
mov
mov
push
pop
inc
sub
mov
mov
push
or
push
fidivl
mov
xor
mov
stc
dec
xchg
out
js
mov
arpl
insb
jge
lds
pop
sub
frstor
test
pop
daa
cltd
mov
xor
xor
mov
mov
mov
push
cmp
fs
jno
fcmovb
and
jle
mov
mov
mov
mov
ja
inc
xchg
data16
jg
mov
jmp
cmp
cltd
in
fcoms
roll
lahf
test
ja
inc
cmp
inc
lock
xor
and
divl
pop
repz
dec
ljmp
das
in
testb
mov
lds
xor
adc
jecxz
out
ss
lock
add
fincstp
ret
mov
shlb
push
xor
dec
insl
cmp
and
mov
les
pusha
movsl
lods
sub
dec
out
sti
push
popf
and
lock
out
adc
mov
sbb
mov
push
movsl
and
cli
sub
int3
pop
adc
in
inc
pop
sbb
push
leave
push
loopne
pop
mov
cli
sbb
das
ja
je
out
or
cld
push
inc
nop
jecxz
xlat
or
push
sub
sbb
push
movsl
xchg
dec
out
imul
ss
scas
fisubl
mov
sbb
int
jl
xor
movb
sahf
xchg
mov
mov
js
pop
shrl
vmread
lods
movsl
and
jge
shrl
into
dec
decb
lods
loopne
movsl
ret
out
and
int3
popa
push
and
cmp
decb
pop
lea
lods
sbb
aaa
daa
and
outsl
std
adc
jns
xor
pop
adc
mov
mov
es
mov
cmp
in
mov
or
ja
mov
inc
out
out
push
popf
or
test
sbb
pop
in
or
jge
std
js
dec
xor
cli
ja
push
sub
dec
mov
mov
enter
adc
shll
mov
xor
lods
cld
pop
mov
sti
jo
nop
xor
or
sarb
mov
sub
cmc
fmuls
mov
adc
xor
ljmp
mov
xor
sarb
fsubp
out
sti
outsb
xchg
call
mov
jp
pop
addr16
mov
movsb
enter
std
sahf
movsb
arpl
mov
or
xchg
jno
push
inc
popf
ret
add
das
imul
add
adc
bound
sahf
pop
cmp
mov
pop
push
nop
mov
sbb
push
dec
dec
popa
jae
add
addb
fsubrl
clc
enter
inc
scas
and
insl
mov
rcrb
xchg
pop
popf
andl
jb
mov
aas
flds
mov
cmc
jno
fcompl
je
add
iret
mov
sub
stos
mov
xor
mov
aad
mov
flds
insb
xor
aas
xor
push
fsubs
pop
fisubrs
insl
lock
mov
addr16
hlt
iret
subl
push
and
adc
and
jbe
and
dec
imul
divb
add
jno
xchg
pop
cwtl
mov
orl
packssdw
xchg
pusha
or
or
nop
sub
cmp
xor
jnp
ficoml
or
push
xchg
jmp
add
movsl
fdivs
incl
ret
and
in
sbb
mov
sub
ret
mov
xchg
fstps
or
arpl
mov
pop
push
xor
jb
and
and
push
sbb
cmpsl
sub
lock
cli
shll
inc
mov
xchg
xor
outsl
sub
and
fstpt
jno
test
xor
adc
sbb
dec
sbb
les
and
jae
fildl
mov
js
lea
push
mov
ds
jne
cltd
bound
xchg
add
xor
add
ja
and
imul
mov
jb
jbe
inc
add
stc
cmpsb
pop
xchg
pop
and
rorl
or
dec
inc
and
mov
jnp
jg
add
add
xchg
fdiv
mov
shrb
fstpt
push
pop
das
adc
and
xor
mov
clc
pusha
les
cmp
pop
movsl
es
movsb
data16
and
clc
xor
mov
jg
mov
nop
mov
outsb
fldl
xlat
push
xchg
cmpsb
mov
idivl
test
mov
cwtl
movl
jmp
pop
outsl
cmp
outsb
out
ljmp
fnsave
pop
pop
in
insl
jnp
xchg
and
jmp
sbb
sbb
lods
mov
pop
jo
popf
sbb
outsl
push
cmpsb
and
or
pusha
outsl
daa
insb
mov
adc
sub
jnp
enter
xlat
ss
je
jle
iret
shll
add
mov
mov
rclb
xor
fwait
mov
mov
repnz
bound
outsl
js,pt
push
inc
mov
imul
jp
xor
adc
popf
and
loopne
xor
add
test
inc
clc
fstpl
fmull
sbb
mov
dec
and
inc
mov
add
inc
fwait
or
add
outsb
cmpsb
dec
xor
jg
mov
dec
sub
ret
mov
and
mov
cmp
add
pop
mov
nop
pop
jecxz
or
pop
cmp
jl
mov
xchg
repz
xchg
leave
divl
dec
jae
es
and
or
push
test
incb
and
add
stc
repz
mov
sbb
icebp
cwtl
daa
jns
stos
sahf
or
int
shll
sub
xchg
pop
mov
je
fmull
pop
fdivl
pop
mov
and
pushf
cmpsb
adc
or
mov
dec
lods
mov
mov
stos
sub
or
inc
xchg
shll
mov
cli
add
cltd
xor
cmpsb
jl
loope
push
out
mov
xchg
call
popaw
and
insb
int
xchg
sbb
out
xlat
xor
cmpsb
adc
push
mov
sub
push
xor
insb
decb
fdivrs
or
xchg
cmp
pop
rcrb
xchg
mov
aas
testl
leave
arpl
lcall
inc
shrl
ror
and
pop
dec
movsb
nop
repnz
adc
cmp
sub
inc
cmp
xchg
cmpsl
sti
in
and
outsl
or
mov
sbbl
js
add
fs
pop
sbb
inc
mov
mov
mov
mov
xorl
cmp
lock
mov
fs
loop
push
cmc
sahf
push
add
pop
jg
in
mov
jnp
cld
in
into
mov
fcomps
sbb
test
add
xlat
inc
or
pop
sahf
rcrb
adc
out
jae
pop
fisttps
mov
mov
and
outsl
jns
imul
fs
popf
mov
inc
in
loope
jae
insb
xlat
inc
jns
jno
or
jle
call
repz
mov
jge
adc
adc
adc
mov
xchg
cmp
mov
mov
aad
cmp
jmp
add
inc
mov
pop
add
xor
loopne
nop
pop
fwait
sar
xchg
lock
hlt
js
insl
repz
or
cld
addr16
sbb
or
xor
jae
dec
sbb
aas
je
jge
adcl
dec
sbb
push
mov
inc
jp
les
inc
mov
pop
outsb
aaa
or
pop
aaa
insl
or
dec
mov
xlat
xor
lock
lahf
aas
mov
bound
or
sub
xor
inc
dec
adc
imul
sub
adc
sbb
sahf
leave
and
adc
pop
xchg
idiv
cmp
sahf
jae
cs
mov
imul
scas
xor
pushl
inc
xor
pop
test
or
add
mov
lcall
adc
call
pop
enter
fsubl
fdivs
dec
pop
xchg
jo
and
xchg
in
mov
popa
push
dec
jae
fsts
arpl
dec
decl
in
scas
push
push
cmpsb
test
lret
mov
aad
mov
pop
push
ret
cmp
add
dec
push
pop
mov
ljmp
adc
fcmovb
xchg
or
add
pop
ja
push
mov
mov
dec
scas
mov
movsl
inc
dec
leave
mov
dec
pop
sar
loop
xor
lret
cmp
sbb
add
and
cli
or
push
add
cmp
pop
outsb
daa
pop
test
add
inc
movsl
cmc
in
lret
and
test
stos
je
stos
cwtl
sahf
aaa
push
daa
dec
ret
adc
push
cmp
add
mov
xchg
ljmp
adc
sbb
std
aaa
repz
sub
popf
mov
dec
enter
out
mov
movsl
mov
movsl
jmp
outsb
cmp
insb
push
inc
sbb
pop
xor
fmuls
lods
ss
xor
and
sub
out
jl
pop
fldcw
cmpsl
fadds
add
je
cltd
mov
or
xor
mov
inc
mov
ret
leave
int3
mov
test
fcomi
sub
cmp
jle
mov
adc
imul
pusha
mov
repz
pop
adc
adc
xchg
stc
lret
or
fimuls
testl
int
aaa
shrb
push
gs
adc
rorl
jae
pop
pop
subl
pop
or
cmp
lods
sub
enter
mov
loopne
in
dec
sub
pop
repnz
mov
sti
jo
ret
imul
out
iret
std
aad
dec
gs
xchg
sub
imul
xor
dec
pop
or
leave
ja
jne
movsl
sub
push
loopne
inc
cmpb
dec
pop
jb
mov
imul
out
test
andl
push
cmp
in
xor
pop
test
aam
popa
pop
sub
dec
ja
push
nop
or
mov
jl
push
push
and
dec
xchg
push
jne
xorb
arpl
sbb
addr16
mov
xor
repz
and
sbb
mov
mov
rclb
push
gs
stos
sbb
pop
pop
stos
cmpsl
icebp
inc
popa
add
loope
cltd
sbb
adc
push
cli
lret
jl
push
inc
push
lds
imul
sub
jge
xor
mov
mov
movsl
cmc
lea
mov
inc
dec
sti
scas
jmp
push
inc
mov
cmp
add
fwait
push
rcr
std
call
xor
out
test
pop
dec
sub
shll
push
mov
xor
sbb
mov
mov
mov
shll
or
pop
fidivs
jno
jae
add
jnp
ljmp
dec
adc
fsubr
dec
sbb
and
jo
sbb
arpl
sub
fistpl
jge
iret
and
inc
xchg
xor
pop
js
pop
mov
pop
jl
add
popf
sub
cmpsb
pop
mov
cmp
or
mov
sbbb
push
inc
scas
stos
lret
dec
xlat
cmp
fcomp
cmc
insb
jmp
xchg
jne
lock
ret
imul
pop
mov
lock
jne
leave
loopne
insl
stc
addr16
xchg
sbb
xor
stos
mov
push
repz
data16
mov
leave
mov
in
test
sbb
adc
fisubl
cld
cmp
bndstx
fnstenv
mov
in
lcall
push
popa
shl
iret
push
shr
mov
hlt
push
push
icebp
les
inc
shll
xor
lret
cmp
adc
pop
sub
jge
sahf
sbb
dec
pusha
aas
enter
mov
pop
push
and
shll
outsl
mov
jnp
cmp
in
jne
rcll
jmp
subl
iret
push
mov
rorb
fs
pop
xor
gs
cmp
pop
bound
cmp
cltd
test
mov
gs
adc
adcl
shr
out
pop
adc
daa
mov
or
fcomip
pop
repnz
push
sbb
int
aas
cs
inc
pop
jno
inc
sbb
popf
xchg
inc
out
cmp
xor
aam
mov
in
xor
int
fists
add
adc
xchg
fstp
mov
push
sbb
rorl
stos
xchg
in
push
xor
lock
push
fwait
iret
and
flds
jg
dec
pop
push
scas
push
gs
xchg
mov
es
push
ret
movsl
push
adcl
sbb
fs
ss
mov
in
dec
mov
mov
cwtl
adc
adc
sub
xchg
icebp
push
sbb
enter
mov
shll
sub
insb
push
jno
idivl
hlt
pop
jg
and
cmp
sbb
mov
sbb
ja
xchg
add
dec
test
mov
daa
bound
out
sub
sbb
and
sarl
xor
in
hlt
pop
js
fwait
xor
aad
cmp
jne
jbe
outsl
cmp
mov
std
inc
pushf
add
dec
xchg
and
rcl
das
xchg
mov
or
pushf
cs
fdivr
xchg
fcoml
subl
adc
pop
add
gs
addr16
pop
fdivrs
icebp
das
pusha
push
inc
adc
push
mov
add
je
xor
cmp
fdivs
fwait
xacquire
lds
repz
out
pop
jo
push
jp
xchg
insb
aas
imul
jbe
rclb
loopne
mov
out
sbbb
dec
dec
or
add
stc
mov
in
xor
cmpsl
pop
ljmp
daa
call
jae
mov
xchg
xchg
stc
jmp
xchg
inc
data16
sarb
mov
jl
jnp
pop
sar
fisttps
cmpsl
aas
mov
mov
push
sub
sahf
push
subb
mov
gs
shlb
pop
jae
push
xchg
add
mov
lds
cmpsb
cmp
hlt
pop
cmp
mov
mov
sub
mov
adc
dec
out
xor
outsb
jg
jae
popa
cmp
icebp
pop
in
mov
mov
pop
ljmp
sub
dec
sti
cmp
fidivl
xchg
jnp,pt
xchg
shll
xchg
ja
xchg
sub
call
pop
scas
lds
std
push
sub
jge
or
cmp
or
dec
std
nop
pusha
sub
jg
jmp
insl
popa
clc
jg
cs
lock
imul
cmpsb
fldcw
jle
inc
mov
pop
inc
call
adc
stc
push
leave
mov
mov
sbb
out
test
adc
pop
gs
icebp
pop
aad
xor
scas
ds
pushf
mov
imul
mov
sub
and
shrb
dec
outsl
jb
xor
and
hlt
sub
int
xor
mov
inc
pop
out
pop
push
movsl
fwait
rclb
mov
mov
adc
add
dec
push
add
xlat
inc
pop
test
cwtl
loope
push
add
orl
shlb
hlt
xor
movsb
mov
dec
and
or
inc
in
stos
cmp
mov
xor
jb
push
push
icebp
andl
sti
jae
data16
mov
xor
fisubrs
bound
pop
test
popa
xor
xor
lds
fcomps
mov
bound
js
mov
dec
shrl
jns
rol
push
cmpsl
sub
pop
or
mov
es
stc
mov
add
pop
inc
aam
xor
xor
cmp
pop
repnz
xor
sbb
push
stos
dec
or
outsl
pop
jle
pop
add
inc
jo
inc
jne
jle
pop
sub
adc
mov
std
or
mov
add
inc
sub
cmp
push
jns
add
cmc
jl
cmp
out
rcll
pop
and
mov
xchg
and
loop
hlt
hlt
out
add
pusha
sbb
jo
sub
lea
mov
inc
cli
fcoms
xchg
loop
pop
adc
inc
mov
or
mov
xor
inc
sub
add
and
xchg
imul
fwait
imul
inc
xor
mov
test
popf
xlat
push
loope
aas
xchg
test
int3
jno
hlt
in
ret
call
punpcklwd
movsl
or
out
xor
pusha
cld
mov
lea
test
or
lods
mov
cmp
dec
xchg
mov
insb
sti
pop
repz
lods
cmp
or
xor
jl
sbb
ja
clc
add
les
jge
sbb
inc
mov
icebp
ror
dec
repz
shll
inc
adc
ja
pusha
pop
dec
mov
pusha
movsl
stc
or
push
push
mov
sbb
insb
xchg
mov
aaa
sub
mov
xor
int3
xlat
mov
mov
pop
sbbb
mov
jge
test
arpl
dec
dec
pop
test
fs
mov
push
add
mov
push
ja
stc
pop
es
aad
push
mov
sar
dec
icebp
mov
cli
repnz
icebp
xchg
lcall
inc
adc
mov
xor
mov
mov
jno
imull
sbbl
int3
adc
adc
mov
push
pop
adc
fldt
shrb
or
stos
pop
jl
cmp
adc
out
push
jae
push
add
shll
sbb
arpl
xor
sti
stos
mov
jp
lods
fistpl
xchg
fbld
pop
lea
mov
or
shll
int
mov
pop
xlat
outsb
mov
xor
push
push
aam
jnp
pop
mov
pop
daa
or
or
lahf
mov
repz
push
mov
add
jg
ss
aam
leave
idivb
or
or
jnp
sub
adc
test
xchg
inc
push
xlat
in
testl
or
loopne
scas
and
jno
jae
jl
shlb
lods
cmp
inc
adc
lret
inc
or
movsb
iret
jecxz
sub
push
ds
push
subb
dec
std
mov
xor
mov
inc
int3
dec
imul
popl
dec
stos
sbb
insb
imul
add
mov
xchg
fs
adc
pop
pop
repz
sub
sub
insb
adc
mov
insb
mov
movsl
scas
or
sbb
scas
jnp
clc
mov
mov
jo
add
ss
add
mov
push
xchg
stos
xor
mov
and
popa
leave
push
cmp
inc
cwtl
sub
add
jl
mov
sbb
push
xchg
jmp
iret
dec
or
inc
add
mov
mov
jge
mov
jno
xor
dec
lods
mov
adc
fsubrs
sub
test
pop
inc
lret
mov
lcall
dec
add
pop
imul
ljmp
fmul
pop
cmp
insl
std
call
les
fdivl
mov
xchg
fcmovbe
inc
std
xor
rcll
imul
dec
mov
out
mov
das
clc
inc
mov
lret
aaa
xlat
call
mov
js
loope
jl
outsb
push
fbld
lea
les
jb
mov
fwait
jmp
scas
clc
ret
mov
pop
scas
xchg
lods
stc
mov
addl
loopne
lahf
mov
pop
ljmp
stos
lds
lea
rolb
push
or
outsl
and
or
inc
mov
mov
test
add
sarb
jp
loop
sub
cmpsl
mov
xchg
or
jmp
dec
repnz
dec
and
jmp
das
cwtl
and
pusha
gs
push
insl
js
jb
loope
loop
fdivrl
sbb
mov
mov
leave
shrd
fxam
loopne
jp
loopne
pop
and
cmp
sti
out
es
lods
fstps
clc
and
shrl
stc
xor
movsb
xor
pop
orl
pop
in
jnp
pushl
adc
jmp
fisubs
push
lods
cli
xor
xchg
dec
int3
int
push
push
movsb
mov
outsl
notb
in
ret
lahf
pop
leave
leave
lahf
push
aad
cmc
jp
inc
and
mov
sbb
or
push
jle
pop
push
xchg
fildl
imul
adc
xchg
lods
cmc
scas
sbb
pop
call
jno
mov
sbb
jne
adc
test
xor
adc
inc
push
divl
daa
jl
fisttpll
sbb
rorb
dec
or
inc
sahf
sub
xchg
pusha
aaa
cmp
test
int
outsb
inc
mov
and
sub
add
jmp
xor
int
std
push
adc
leave
adc
mov
cmpsl
stc
or
mov
dec
scas
aam
sub
sub
outsb
and
mov
xchg
aam
pop
sbb
lret
push
mov
inc
das
scas
imul
adcb
adc
dec
sbb
push
pop
and
ret
lcall
pop
mov
mov
sbbb
jno
and
andl
mov
leave
mov
add
imul
dec
mov
std
inc
bound
xor
jg
in
jb
in
jb
or
jne
or
je
mov
rorl
leave
mov
outsl
and
push
lds
packsswb
out
loop
sub
or
xchg
mov
fldenv
mov
fs
jae
nop
xchg
es
push
push
arpl
jne
xchg
mov
fstps
icebp
sarb
xchg
jg
mov
dec
mov
pop
pop
movsl
jo
sbb
imul
repz
imul
mov
lock
push
pop
cmp
cmp
je
cltd
lea
das
xor
outsl
cmp
pusha
adc
xlat
shl
outsb
dec
sbb
mull
sub
scas
pushf
push
pop
mov
dec
loopne
push
fldcw
inc
pusha
lea
xor
push
stos
test
push
mov
fdivs
add
inc
add
in
push
mov
mov
movsb
cmp
push
push
jmp
mov
jae
fmul
das
xor
pop
jge
in
outsl
daa
push
dec
cmp
gs
mov
inc
mov
mov
repnz
cmpsl
xor
or
gs
enter
popa
cltd
fdivs
xlat
out
ljmp
popf
push
sbb
iret
dec
pop
adc
jae
jle
mov
lds
lods
or
jns
fildl
loope
add
jae
add
or
dec
xor
pop
dec
sub
mov
and
jl
and
out
in
and
icebp
sahf
pop
fwait
loopne
push
push
sub
pop
jnp
and
sbb
sbb
scas
or
sub
fcmovnbe
pop
enter
cli
jae
xchg
mov
leave
pop
pop
ja
jne
daa
fsts
and
xchg
rorl
xchg
test
in
rclb
aas
gs
int
les
sti
push
jge
insl
add
inc
cmpsl
pusha
xchg
fldcw
pusha
add
inc
fs
sbb
adc
add
jbe
lret
mov
sbb
adc
loopne
sbb
insb
imul
sbb
add
push
mov
cmpsl
icebp
and
loopne
pop
push
fsts
adc
sahf
nop
sub
push
lea
sbb
daa
ljmp
cmp
mov
inc
arpl
push
and
mov
fdivrl
in
sahf
push
pop
jnp
out
cmp
ret
add
enter
fldenv
repz
mov
shrb
decl
adc
lahf
outsl
clc
cmp
cli
adc
mov
jp
and
shll
and
dec
add
adc
and
xor
lahf
cmpsb
mov
cmp
adc
aas
loope
popa
test
xchg
mov
adc
movsb
xchg
add
je
insl
std
xor
es
and
add
sub
xchg
mov
sbb
dec
imul
cmp
or
cmp
xor
stos
add
sti
addr16
xor
out
ss
and
add
popf
fs
inc
mov
or
je
popa
jmp
imul
in
push
push
and
xorb
inc
mov
pop
adc
daa
jnp
nop
adc
test
test
jecxz
mov
jno
test
xorl
sbb
clc
xor
sbb
mov
ljmp
pop
and
shrb
cmpsb
push
pusha
stc
enter
dec
subb
clc
sbb
lods
stos
sbb
xor
cs
test
sbb
addb
mov
pop
call
aas
ds
mov
sbb
mov
and
cld
das
je
sti
adc
and
dec
daa
outsl
mov
sbb
push
xor
push
jae
ret
mov
adc
xchg
clc
sbb
inc
cs
insl
inc
sti
adc
or
jne
pop
lds
inc
adc
cs
sbb
jbe
pop
icebp
movsl
in
jae
das
mov
adc
and
mov
cmc
sti
and
es
xor
xor
sub
cmpsl
rcll
mov
cmp
mov
in
add
roll
jmp
xchg
xor
cs
movsb
mov
leave
mov
xchg
int3
cmp
pop
outsb
adc
xchg
lcall
scas
or
or
pop
fimuls
inc
test
xor
or
mov
adc
cmpb
sub
cvttps2pi
icebp
pop
cwtl
dec
xchg
push
sar
sub
sar
fisubrl
gs
imul
outsl
jno
mov
ljmp
jmp
jb
outsl
out
outsl
addb
mov
jmp
fdivrl
dec
inc
pop
or
inc
js
repnz
outsl
sub
stc
add
inc
cmp
push
imul
repnz
sbbb
xchg
subb
and
ss
jno
cwtl
sahf
xlat
mov
pop
sbb
pushf
shrl
xchg
test
mov
lock
test
mov
fcomps
xchg
imul
std
xchg
mov
movsb
cmp
les
lea
sub
add
adc
pop
pop
pop
ret
lds
xor
inc
in
xchg
dec
dec
lds
out
add
mov
cs
fsubl
mov
pusha
push
test
jbe
push
lds
mov
les
cmp
int3
andl
popf
or
stos
push
pop
push
rcrb
jbe
lods
lret
push
sahf
in
xchg
sahf
sahf
xor
jnp
shrl
loopne
and
pop
rcll
lods
sub
insl
or
and
add
sbb
cs
out
ljmp
fs
adc
push
mov
mov
jge
push
xchg
push
movsb
xor
xor
fldt
fsubl
lret
jne
ret
push
inc
dec
add
dec
jb
imul
mov
xor
pop
jle
rcll
daa
hlt
adc
fs
sub
push
mov
sbb
inc
ret
mov
adc
sahf
adc
jnp
cmp
mov
cmpsl
adc
add
xor
int3
aas
mov
add
inc
out
pop
loope
cmpsl
jmp
insb
mov
test
and
or
mov
mov
jge
jmp
mov
sub
icebp
mov
iret
add
std
cld
aaa
shl
dec
fisubrs
jecxz
sub
mov
repz
scas
xor
pusha
xor
cmp
push
cli
adc
outsb
popf
jp
test
mov
fmull
cwtl
xchg
test
fiadds
add
addr16
ja
out
movsb
mov
imul
sar
fwait
add
adc
xchg
iret
sub
dec
mov
ljmp
std
nop
in
xor
incb
int
sbb
or
ret
jl
mov
aad
insb
xor
pop
add
adcb
mov
repz
daa
cltd
popa
movsbl
ja
inc
mov
ja
ret
mov
adc
cmp
add
in
call
inc
push
push
dec
leave
or
les
loop
or
sub
pop
nop
push
sub
jne
mov
test
gs
push
adc
cmpsl
jbe
pop
adc
xor
cwtl
jge
sub
fildll
cmc
mov
xchg
xor
jmp
in
pop
mov
push
enter
dec
in
stos
xor
dec
sbbl
cltd
mov
imul
inc
fmull
testl
push
xchg
lea
sbb
mov
jp
xorl
pushf
add
scas
rcl
fisubrs
sbbb
jmp
mov
adcb
xchg
movsl
or
jecxz
or
in
lods
ficomps
ficomps
lock
add
xchg
jecxz
pop
aad
loopne
insl
inc
fwait
xchg
and
pop
push
xor
mov
mov
pop
aad
pop
sub
ss
fisubrs
jmp
adc
pop
sub
mov
outsl
and
cltd
pop
xchg
jmp
repz
mov
repnz
bound
xchg
mov
test
xor
and
lret
sbb
add
push
dec
pusha
stc
ret
popl
lds
mov
shll
leave
aaa
jp
mov
gs
lret
dec
andb
mov
shl
std
cs
enter
testl
adc
inc
ret
cmp
mov
aaa
ljmp
sbb
pop
insb
das
push
outsl
inc
sbb
lock
dec
mov
sbb
jnp
je
shlb
push
fwait
insb
out
mov
ja
push
insb
xchg
and
add
add
leave
enter
xor
inc
lea
push
out
inc
insl
jae
dec
push
xchg
imul
add
lea
ljmp
push
sahf
and
aad
add
mov
sbb
adc
icebp
popl
movsl
jns
adc
or
ss
inc
pop
aas
or
pop
adc
add
add
mov
lcall
nop
js
scas
inc
mov
clc
into
cmp
mov
pushf
mov
cli
mov
shl
jg
sbb
sub
bound
xchg
sbb
orb
ja
adc
cmp
dec
and
adc
and
pop
insb
cwtl
or
cli
test
hlt
fs
mov
lret
call
push
cmc
rorl
dec
add
inc
leave
mov
icebp
mov
cmp
xchg
fwait
imulb
fsubrp
test
mov
sbb
stos
inc
adc
nop
enter
jnp
dec
push
sub
enter
outsl
sets
rcr
shll
dec
test
cmp
data16
cmp
adc
xchg
sbb
and
mov
mov
push
leave
pop
mull
ret
adc
or
je
jge
adc
cmp
and
jo
push
lret
out
mov
jns
mov
movsl
xchg
popa
insb
inc
jns
mov
mov
enter
mov
adc
sahf
xor
das
xchg
push
pop
mov
sub
xchg
inc
mov
leave
aaa
xor
mov
inc
aad
jno
jmp
mov
nop
imul
and
cltd
mov
subl
stos
or
into
pop
lock
shrl
std
das
bound
and
popa
sub
inc
jo
cld
mov
out
add
add
fsubrl
sbb
xor
xlat
sbb
dec
arpl
test
xor
mov
fcomip
adc
cwtl
test
sbb
cmp
aam
movsl
and
ror
in
jno
mov
dec
data16
dec
push
ss
arpl
lea
mov
sar
gs
imul
inc
sbb
push
mov
rorl
rcll
pushf
sub
pop
fistpll
ljmp
bound
or
jbe
or
stos
dec
out
sbb
lahf
daa
and
xchg
das
movsb
xchg
push
repz
mov
pop
in
lods
mov
xchg
cmpsl
lahf
and
mov
jno
push
cli
cmp
or
aaa
fnstenv
leave
popa
cmp
xor
mov
add
pop
movzwl
mov
int
mov
aad
xor
imulb
rcrb
and
arpl
jo
cmpsb
push
mov
ret
jmp
or
inc
ss
scas
add
pop
imul
pop
fcomps
aaa
mov
scas
sbb
mov
pop
mov
ret
idivl
aas
into
mov
gs
mov
xchg
push
divl
push
inc
and
and
add
mov
test
gs
cmp
pop
dec
push
fs
adc
daa
fidivs
shll
push
insl
enter
pop
dec
sub
out
mov
xor
dec
bound
push
lcall
pop
pusha
sahf
mov
sti
dec
imul
aas
clc
dec
jae
sahf
xchg
jmp
fs
or
je
add
xor
test
scas
jmp
imul
add
cmpsb
adc
push
dec
es
cld
xor
jle
add
mov
ds
add
pop
cmpsb
mov
sti
lods
xor
leave
lret
push
test
add
mov
xchg
clc
push
sub
jl
xor
mov
dec
ret
sbb
imul
or
inc
mov
cmp
imul
jmp
int3
xchg
xor
popa
outsb
mov
jae
xor
daa
pusha
push
cli
pop
aaa
repnz
cltd
enter
ljmp
sarl
dec
clc
loop
lret
xchg
sub
sbb
mov
lret
jne
dec
pop
inc
ss
add
nop
testb
xorl
aaa
dec
xor
dec
mov
push
data16
andl
jmp
cmp
add
jge
mov
lahf
xor
jge
lahf
cli
aad
orl
test
fisttpll
or
scas
sub
cmpsl
sbb
inc
push
jno
or
cli
mov
test
jno
in
pop
adc
addr16
pusha
mov
mov
cmpsl
add
sub
dec
or
lock
les
xlat
fwait
test
cltd
je
mov
orl
jo
pcmpgtb
mov
mov
addr16
mov
and
shl
push
fidivrs
fimuls
data16
pop
aaa
fimull
mov
stc
mov
sub
or
in
test
push
jne
mov
xor
movsl
ficompl
add
or
test
ss
sub
roll
ret
cli
cwtl
mov
mov
mov
cmp
les
out
popa
mov
cmp
clc
mov
stc
mov
push
sbb
ds
sbb
insb
mov
xchg
xor
in
popa
imul
pop
add
cs
xchg
inc
orb
fcompl
addb
mov
push
pop
lods
mov
mov
jle
bound
push
push
mov
rcrl
xchg
xchg
aas
popf
push
das
pop
xor
enter
jg
mov
aad
lds
or
xor
inc
addr16
fwait
into
push
mov
bound
xchg
push
xor
int
push
inc
int3
lcall
push
into
adc
pop
adc
jo
jae
arpl
mov
loop
repz
int
xor
xor
sbb
test
pop
xchg
js
rorl
cmp
inc
ficoms
cmp
test
push
push
loope
test
dec
adc
cmpb
inc
in
enter
inc
mov
lcall
jno
xor
gs
mov
ja
mov
fwait
xchg
or
jmp
pop
jbe
cmpsb
out
mov
lret
ss
adcb
jmp
and
and
imul
adc
lods
mov
xchg
hlt
or
mov
cmpsb
jb
mov
call
ret
popf
pop
adc
std
jle
inc
cmp
fstpl
cmp
adc
imul
repnz
aam
aaa
xor
js
mov
cld
push
xchg
mov
ficoms
xchg
sub
adc
add
cmp
aaa
stos
imul
dec
stos
in
and
imul
inc
out
add
lret
repz
mov
nop
pop
mov
stc
mov
or
sub
or
icebp
stos
mov
les
add
jl
repnz
fcoms
xor
push
mov
sub
je
shlb
mov
int
push
in
popf
add
push
add
jp
outsb
and
add
scas
imul
cmpsl
xchg
notl
mov
add
cltd
clc
or
rorl
loope
cmp
adc
push
stc
jmp
mov
jno
push
pop
dec
jl
dec
push
sub
fwait
cmp
xor
fdivs
or
mov
clc
push
mov
mov
add
xor
mov
cmc
adc
dec
and
push
pop
rcr
lods
xor
outsl
pop
ja
pop
pop
sub
xor
and
add
rcrl
mov
pand
jl
bound
xchg
in
nop
xchg
cmpsb
push
adc
xchg
inc
adc
mov
mov
dec
or
cmp
mov
scas
pop
rcll
sbbb
mov
and
mov
test
adc
jmp
pop
add
inc
loop
xchg
arpl
fsubs
pop
add
mov
mov
sub
add
cmpsl
movsl
outsb
or
fwait
scas
rcr
adc
add
pop
push
jg
std
lods
xor
ficoms
in
cmpsb
xchg
mov
loop
pop
rorl
sub
sbb
xor
cld
notl
mov
sub
dec
dec
ror
cmp
cmp
loopne
jecxz
dec
out
outsb
pop
shrl
jno
mov
mov
loope
fidivrs
mov
rcrb
popa
xor
xchg
js
je,pt
shll
cmpsl
ljmp
sub
rcrb
jl
cli
add
mov
mov
adc
lds
lods
mov
add
mov
les
mov
add
add
cmp
ds
sub
jo
push
cs
jl
push
add
add
mov
push
pop
adc
push
and
out
dec
adc
or
pushf
fs
fsubrl
cmp
in
pop
dec
in
loopne
add
mov
push
xchg
fimuls
pop
adc
dec
xor
imul
mov
sub
hlt
sbb
jo
mov
imul
jle
fidivrs
ret
and
fcomps
pop
repnz
inc
dec
or
ds
out
sbb
dec
lea
xor
dec
mov
cmp
enter
push
jb
int3
pop
iret
or
out
dec
sbb
xchg
add
outsb
mov
ficompl
shll
add
pop
insb
leave
je
pop
js
jg
aad
pop
cmp
mov
ss
fstl
mov
outsb
dec
mov
push
mov
lods
scas
iret
sbb
repnz
sub
mov
and
mov
add
dec
or
inc
cld
mov
orb
sub
xlat
dec
movsl
adc
cmpsb
add
mov
into
outsb
lea
fimull
aas
and
mov
fisttps
loop
or
inc
inc
mov
jno
cmc
sahf
pextrw
pop
aad
pop
pop
repz
add
and
xchg
out
outsl
out
xor
pop
pop
sbb
adc
xchg
add
mov
sti
xor
rol
mov
mov
mov
scas
cmc
iret
fsts
mov
insl
pop
push
icebp
mov
inc
lds
call
shll
in
rcr
jae
pop
and
and
pop
mov
push
inc
mov
ds
sbb
push
movb
or
sub
pop
xor
data16
aaa
jb
lds
in
inc
jecxz
or
into
cmpsl
icebp
sbb
mov
ficoms
sub
shll
and
ljmp
lret
sub
xor
in
cld
dec
pop
int3
mov
pop
adc
lds
cmc
xor
shrl
push
iret
clc
in
mov
cli
in
daa
mov
sub
aam
push
aam
mov
xchg
scas
repnz
insb
faddl
adc
or
mov
imul
jle
inc
xor
xchg
or
xlat
mov
arpl
inc
xorb
inc
cmpsb
cmp
aas
aaa
inc
fs
lahf
mov
lods
xor
fcmove
push
xchg
arpl
enter
cmpsl
in
sub
mov
xchg
jne
xchg
inc
xor
mov
insl
lret
sahf
dec
leave
jmp
insl
sub
popf
add
fstcw
inc
xchg
mov
bound
add
sbb
or
add
xor
pop
jge
cmpl
rcl
adc
icebp
pop
jmp
jg
das
lods
sub
pop
std
mov
cltd
adc
dec
sahf
lcall
xchg
and
ret
inc
mov
lret
sbb
cmp
lods
mov
xchg
jl
lock
cwtl
hlt
jg
jne
mov
dec
cmp
pusha
jle
lahf
jns
stos
mov
sahf
fwait
or
sahf
inc
iret
and
pop
sub
outsl
inc
push
mov
pusha
stos
cmp
fs
rcl
cmc
neg
or
mov
sbb
mov
in
hlt
ficoms
cltd
mov
xchg
jmp
mov
jecxz
sub
lds
dec
cltd
or
out
clc
inc
fildl
mov
sub
pop
imul
rorl
popa
dec
lods
sti
mov
and
pop
mov
jns
inc
jne
mov
stc
aad
jns
jmp
push
loope
add
push
mov
adc
sbb
bound
es
mov
insl
or
fbld
sbb
sub
test
imul
xor
xchg
sub
cmpsb
add
cmp
popa
add
dec
mov
test
leave
je
les
sti
sbb
mov
les
in
leave
stc
out
sub
or
xorb
jne
jnp
lds
dec
and
in
add
mov
imul
gs
testl
push
mov
fs
iret
pop
jns
arpl
jl
pushf
rcrl
mov
loope
cmc
mov
arpl
mov
mov
cltd
push
scas
ss
jl
fcmove
imul
adc
dec
sbb
mov
mov
push
int
fcomps
sbb
scas
dec
inc
xor
fwait
scas
dec
push
dec
mov
mov
test
cmpsb
loop
icebp
lea
and
aam
lahf
fldl
ret
xchg
gs
repnz
jge
jne
sub
xchg
mov
imul
xor
adc
scas
xor
int3
in
popl
divl
mov
or
xlat
mov
mov
xchg
xchg
js
xchg
lods
xor
loope
sub
mov
mov
bound
add
leave
jg
or
js
adc
test
test
movl
push
add
inc
xchg
pop
es
xchg
push
out
sub
mov
push
icebp
add
xchg
add
shrb
pusha
sti
js
cld
mov
es
mov
test
repnz
clts
seta
mov
pop
fmull
or
adc
push
ljmp
fsub
mov
sub
cmpl
dec
outsl
push
shrb
movsb
lret
lods
cwtl
fidivs
stc
jge
jge
pop
shl
leave
outsl
xlat
mov
and
jl
mov
xor
cmc
mov
sbb
lods
pop
dec
sti
pusha
out
cwtl
loope
mov
dec
lret
in
cmp
sbb
jo
jbe
inc
lock
add
stos
popf
push
mov
sbb
stos
ja
and
or
aam
xchg
sbb
lret
test
addr16
fstpl
inc
jge
sbb
jp
popf
sar
cmp
and
mov
xor
mov
xor
jecxz
xor
scas
nop
xchg
and
aad
sub
out
cwtl
push
sbb
jnp
in
jge
enter
adc
jae
mov
insb
sbbb
jmp
sub
hlt
lds
jne
icebp
clc
mov
push
lahf
fsubs
xchg
or
fisubrs
jbe
mov
cmp
push
dec
pushfw
out
aaa
pusha
das
shlb
fwait
loopne
mov
pop
roll
ljmp
nop
out
xchg
imul
mov
cmp
insb
xor
movsb
mov
add
dec
xor
movsl
iret
ljmp
mov
outsl
fistpll
xchg
sahf
pop
aaa
xchg
daa
test
daa
ss
dec
lret
daa
and
cmpsl
int3
lds
pop
lea
push
lds
sbb
scas
arpl
inc
and
adc
ja
pop
sub
adcl
sub
fimuls
out
insl
lahf
add
ret
pop
mov
leave
loop
pop
imul
in
bound
es
mov
fistpl
lahf
sbb
mov
rorb
sbb
lea
aas
dec
es
or
mov
sub
or
add
fwait
out
hlt
mov
mov
push
xor
or
pop
lcall
aaa
push
cmpsb
inc
push
xchg
pusha
movsl
outsb
push
data16
dec
popa
or
movaps
cmp
popa
cmpsl
mov
in
nop
cmp
out
mov
ret
sub
and
ret
xchg
mov
sub
jecxz
fdiv
popf
inc
xor
add
jecxz
stc
xor
jecxz
repnz
lea
push
sub
mov
xor
sbb
stos
pop
in
pop
loope
lret
push
cmpsl
sub
and
lock
xlat
mov
or
xchg
repnz
popf
adc
pop
sub
je
sub
adc
xor
and
lock
sbb
jge
push
ds
dec
adc
xor
idivl
enter
push
in
daa
mov
adc
or
cltd
mov
add
cmpsl
sti
add
cli
push
fsts
dec
leave
mov
notl
pop
pushf
mov
mov
sti
leave
mov
hlt
push
pop
mov
rcrb
out
cmp
aas
sbb
cmp
jl
xor
cmp
scas
xor
loopne
fimull
js
loope
jae
aad
das
cmp
jge
jp
mov
addr16
add
repz
pop
jns
or
mov
out
fmuls
les
jecxz
jae
add
fcoml
inc
dec
xchg
into
xor
mov
pop
das
push
icebp
jge
jo
insb
jge
ljmp
out
inc
data16
loopne
popa
lock
or
xchg
sbb
movsl
mov
subl
aam
mov
mov
dec
jns
pop
insl
ret
sub
sbb
fistl
push
mov
mov
push
into
mov
cltd
fdivp
sbb
xor
jae
push
xor
mov
jns
imul
inc
cmc
add
aaa
scas
sahf
fs
lods
gs
xor
and
outsb
ret
jle
daa
inc
fwait
repnz
xchg
jl
call
sbb
mov
cmp
pop
enter
sbb
sti
mov
cmp
repnz
add
adc
pop
xor
in
cmp
bound
xor
clc
xor
imul
mov
mov
xor
mov
adc
sbb
subb
sbb
xchg
fcmovnbe
sahf
cmpsb
xor
xchg
mov
addr16
pop
test
imull
cwtl
daa
push
mov
rcrb
into
mov
movsl
lods
add
push
and
adc
pop
pushf
xchg
aaa
pop
inc
insb
push
fisubrl
inc
sbb
iret
ja
mov
xchg
push
stos
add
push
lods
sbb
cmpsb
sub
pop
aas
cmp
xor
adc
push
push
push
mov
add
push
pop
lods
test
dec
dec
sbb
mov
addr16
sbb
lea
and
faddp
stos
lcall
lock
std
mov
in
dec
fstpt
xchg
cmpsb
pop
aad
and
pop
in
xor
fs
popa
dec
jmp
pop
or
rclb
inc
lret
subb
imul
in
or
std
mov
cmp
hlt
sbb
mov
pop
ds
jg
sbb
dec
fs
jo
leave
sbb
or
mov
rcrl
cltd
add
push
popa
sahf
xchg
mov
xor
ficomps
loope
ficomps
pop
jecxz
or
xchg
fs
mov
neg
pop
cld
add
mov
scas
inc
mov
xchg
dec
mov
pop
push
inc
sbb
sti
dec
ljmp
fprem1
fwait
and
lret
cmp
jg
inc
lods
out
and
adc
sub
cmp
movsl
add
movsl
das
pop
jnp
cmp
mov
adc
pop
jnp
sbbb
xchg
mov
mov
mov
mov
pushf
jl
push
xor
jg
jle
lods
mov
pop
mov
or
jns
cwtl
push
aad
aad
bound
inc
pop
fs
and
lds
cmp
in
jne
or
cmp
or
sbb
loope
pop
dec
cmpsl
adc
dec
dec
xchg
bnd
xchg
pop
out
fs
lods
xor
xor
repz
jg
adc
adc
shll
xor
push
push
xor
xor
adc
movsl
inc
out
cli
loop
lds
push
inc
adc
sub
loopne
dec
sarb
mov
scas
rcrb
nop
cmpb
mov
test
into
ret
scas
in
xor
adc
fiaddl
pushf
int
int
aam
and
pop
out
adc
push
int
jmp
or
pcmpeqw
fwait
cld
imul
dec
popa
fdivrs
andb
mov
addr16
add
sti
or
fadds
sarl
out
xchg
mov
jae
mov
dec
xlat
pop
dec
dec
push
mov
pop
pop
icebp
cmp
xor
cmpsl
fmull
lahf
sub
mov
pop
subb
fsubs
or
pop
xor
ja
icebp
cli
loopne
pop
idivb
leave
lock
adc
sbb
jno
shll
movsb
sbbl
xor
lea
lods
cmp
jecxz
iret
push
lcall
leave
loopne
cmpsl
push
mov
mov
in
pop
out
icebp
repnz
aam
nop
mov
mov
xor
mov
cmp
and
repnz
push
bound
mov
xor
addb
and
idiv
push
popa
loope
push
cmp
adc
movsl
mov
jo
inc
and
pop
cmp
jno
imul
mov
inc
pop
les
cmp
sahf
cmp
test
lock
loope
popf
lahf
pop
mov
lods
nop
mov
nop
andl
or
sti
out
inc
jle
or
mov
sbb
inc
jge
mov
pop
in
mov
push
and
movsl
insb
shlb
das
mov
mov
jg
imul
dec
scas
and
loope
test
add
out
jb
pop
mov
push
gs
inc
jae
hlt
pushf
cmp
faddp
xchg
ss
or
sbb
mov
push
mov
gs
cmp
loopne
pextrw
sarl
inc
repnz
xor
xor
outsl
or
fwait
pop
cltd
loop
sub
jbe
jae
cld
xor
xor
jge
mov
imul
ret
cmp
ja
cmp
outsb
or
aas
jle
gs
rcll
decb
dec
mov
mov
dec
fcoml
mov
adc
inc
mov
les
sbb
out
inc
fisubrs
dec
aad
pop
jno
es
mov
inc
stc
ret
lea
jmp
cmp
mov
push
pusha
sti
sub
xchg
xor
mov
arpl
adcl
movsl
jge
and
pop
mov
sahf
daa
shlb
rcrb
mov
imul
sub
sbb
lock
repz
lret
jecxz
mov
sub
cmp
add
xchg
cmp
jns
pop
mov
pop
fs
push
xchg
popf
popa
pop
rcl
cmpsl
sbb
aaa
popa
and
jge
xor
mov
pop
sub
addr16
push
ja
fs
jle
aaa
mov
leave
add
mov
in
addr16
call
orl
mov
iret
pop
int3
inc
dec
jns
imul
je
xor
push
and
and
xor
aam
push
mov
pop
loopne
ficoml
ret
jae
pop
sbb
out
inc
icebp
fs
jge
cwtl
jb
enter
call
ss
mov
xchg
mov
mov
jle
jb
loopnew
sbb
cmpl
mov
push
popf
dec
xor
inc
js
lret
arpl
xor
or
mov
loopne
test
shl
movsb
inc
les
loopne
lea
outsb
sbb
add
or
lods
in
mov
mov
cmp
push
shr
in
mov
ljmp
mov
mov
push
pop
lods
pop
pop
pop
push
and
add
adc
sbb
cmp
and
scas
or
inc
xor
mov
pusha
push
bound
fcmovnu
xchg
insl
cmp
int3
es
pushl
bound
lret
jnp
imul
shrl
movsl
aad
pop
lods
mov
xor
repz
gs
daa
test
rcll
sti
int3
scas
push
in
arpl
int
pop
dec
push
jg
fptan
cld
sub
aad
fs
mov
in
mov
sub
sbbl
fdivl
hlt
div
add
mov
stc
xor
aam
ret
cmp
pop
xchg
ret
rclb
das
pop
icebp
xchg
or
mov
jne
or
rcrl
mov
or
fdivrp
adc
xor
xchg
dec
or
fs
mov
dec
mov
mov
mov
stc
mov
xchg
stos
xor
ds
push
xor
out
sar
lods
test
push
movsl
shlb
js
imul
in
jo
lock
repnz
aaa
stos
sub
jp
jo
inc
stc
xchg
pop
test
mov
sub
mov
mov
in
xcrypt-cbc
cmpsl
pop
mov
xor
mov
lret
imul
cmc
roll
pop
jns
mov
jecxz
or
jno
mov
fwait
lahf
sub
mov
pop
jge
push
mov
mov
imul
inc
das
mov
push
ds
mov
fcomps
ljmp
dec
fldcw
mov
subl
jp
pop
cmp
mov
mov
push
xor
or
lahf
lods
dec
or
stos
addr16
mov
jle
mov
mov
jae
pop
sbb
dec
jp
dec
xchg
xchg
push
sbb
outsl
dec
cltd
mov
xor
xchg
sbb
sbb
out
mov
je
xchg
test
test
xlat
mov
sub
aas
inc
lret
pop
mov
fcompl
dec
mov
sub
jg
dec
push
sahf
jae
mov
popa
mov
adc
mov
mov
inc
test
imul
imul
xlat
push
jno
in
add
in
movsl
cmp
jbe
arpl
sbb
and
sub
stc
add
mov
pop
sbb
xchg
jae
jne
inc
sti
fnsave
fsubrl
inc
sbb
ret
sub
lods
mov
add
ficoms
or
dec
insl
jl
jg
xor
inc
setnp
xchg
arpl
popa
xor
pop
jno
sub
jb
inc
popa
icebp
leave
outsl
aaa
int
sub
cwtl
or
xor
adc
sub
lods
into
stos
mov
pop
fs
add
pushf
out
inc
mov
cli
scas
leave
cli
or
negb
shll
dec
mov
es
and
hlt
pop
xchg
test
fisubs
lds
cli
loopne
cmc
mov
lock
add
js
mov
fdivr
lods
sahf
xchg
jns
jmpw
loop
pushf
cmp
test
test
mov
fucom
fcoms
inc
mov
dec
dec
jbe
xchg
loope
stos
in
iret
fmull
fwait
jge
mov
jb
dec
pop
test
out
cmp
scas
sub
xor
gs
mov
ret
cmpsl
outsb
stos
jae
xor
xor
jp
sub
and
iret
loope
les
js
xchg
xchg
xor
aaa
fldcw
fstpl
cmc
mov
xor
test
ret
add
adc
and
loope
sbb
sbb
jecxz
out
bound
notl
adc
ds
push
xchg
in
jnp
jno
ret
repnz
pop
ret
add
mov
add
cmc
es
shl
stc
bound
cltd
mov
xchg
popf
stos
sbb
fdivs
dec
mov
repnz
ja
call
fdivrs
cli
mov
sbb
and
sbbb
cmp
popa
aam
or
mov
xor
sub
lds
gs
mov
daa
push
cwtl
scas
inc
xor
ret
gs
adc
hlt
or
lods
int3
and
cld
adc
pop
push
lret
repz
and
xor
lds
cmp
xor
into
ret
adc
mov
mov
dec
jmp
xchg
xchg
mov
aam
dec
in
sub
xor
adc
fwait
xlat
sbb
addr16
int3
add
sub
cmp
mov
lods
mov
dec
movsl
insb
psubw
push
cmpsl
inc
mov
outsl
push
addb
lahf
shlb
jb
test
iret
lods
gs
ja
sti
add
idivb
cmp
xchg
mov
sub
popa
ret
pop
bound
loope
or
frstor
lahf
xor
jnp
inc
into
subb
pop
mov
movsl
xchg
jecxz
sbb
rcrl
fnstcw
xor
dec
in
push
jle
in
enter
test
pop
push
negb
or
clc
shrb
cmp
fsubrp
nop
add
and
and
cmpsb
movsb
loop
fbstp
push
xor
ja
adc
push
push
aad
mov
or
or
pop
test
mov
lret
mov
jne
icebp
mov
inc
pop
ja
mov
cwtl
stos
inc
insl
sahf
bound
adc
es
jp
push
clc
sub
shll
idivl
dec
test
pop
sbb
cmpsl
loopne
push
rcl
out
jle
in
in
jb
inc
push
popa
xor
xchg
sbb
xor
xor
jge
dec
setns
or
ss
pop
movsl
push
notb
daa
imul
mov
je
dec
mov
cmpsl
push
es
das
pop
push
dec
ret
add
mov
sub
push
jae
xor
mov
or
adc
cmp
lret
xor
int
pop
gs
es
mov
push
outsl
xor
xor
lds
xor
jbe
push
sbb
push
xor
jb
pop
mov
cmpsl
lret
notl
cld
adc
or
call
mov
les
jno
nop
js
jmp
mov
add
push
fldl
out
adc
or
sbb
jbe
test
movsl
test
xor
stos
push
fdivrs
loope
rcl
add
mov
sub
adc
sub
cmpsb
mov
loopne
and
inc
pop
aaa
ficompl
ret
fwait
xor
mov
sti
xor
fsubrs
add
adc
hlt
xchg
into
sahf
xchg
sub
insb
in
dec
adc
jnp
fidivrs
imul
dec
daa
outsl
icebp
push
cmp
stos
iret
xorl
dec
cmp
sub
xor
mov
cmp
shlb
and
inc
test
xor
dec
inc
mov
xchg
and
push
aaa
adc
fbld
push
arpl
mov
repnz
pop
and
jo
andb
dec
idiv
div
sti
jp
pop
or
push
pop
andb
in
movsl
cmp
xor
add
inc
pop
rcrl
lods
dec
mov
ret
rep
or
or
inc
mov
mov
cmpsl
fs
loop
rcrl
cmp
outsl
movsl
or
orl
adc
adc
mov
aas
sub
jne
lret
adc
dec
pop
sbb
pop
push
mov
stc
cmp
in
sub
pop
inc
xlat
rcrl
push
cmp
mov
stos
dec
mov
bound
xor
mov
incb
sbb
and
adc
cli
iret
push
add
lret
mov
ja
xchg
add
lds
popf
adc
mov
jg
loop
stos
mov
outsb
je
pop
jmp
mov
xor
and
movsb
push
ret
fsubl
push
xor
jo
dec
test
pop
cpuid
inc
ss
outsl
pop
das
dec
jnp
jmp
xlat
jmp
pusha
or
push
pusha
pop
xchg
shrl
xchg
imul
mov
cltd
daa
js
mov
out
into
xor
aaa
add
mov
mov
imul
mov
xor
out
lds
inc
sub
pusha
dec
push
xor
inc
dec
sbb
add
stc
lock
xor
push
xor
std
pop
out
xchg
jne
or
inc
mov
das
push
pop
xchg
pop
jno
fisttps
jb
sbb
test
pop
es
cmc
call
fld
mov
xchg
jge
icebp
xchg
iret
sub
cmovs
inc
enter
loope
call
jae
insl
jae
loope
sbb
sbb
and
mov
xor
mov
outsb
pop
popa
movsl
sar
fisubs
mov
popf
mov
popf
sahf
in
jmp
sbb
dec
gs
xchg
outsb
shll
fwait
nop
out
js
gs
push
sahf
adc
inc
addr16
stc
cmp
mov
shll
pop
pop
rcrb
or
outsl
or
push
mov
scas
jno
push
add
dec
pushf
xor
repnz
pop
cmpsl
fcoml
dec
shlb
icebp
lcall
jnp
das
repz
das
enter
inc
adcl
cmp
cmpl
xchg
leave
leave
mov
mov
les
push
test
sarb
cmc
adc
sbbl
push
lahf
movhps
repz
pop
lods
pusha
dec
mov
push
jecxz
icebp
test
mov
inc
and
inc
movsl
push
jmp
lahf
leave
scas
jecxz
inc
fdivl
adc
stos
dec
jmp
xchg
loope
loop
ds
pushf
stos
dec
insl
shll
clc
pop
out
faddl
mov
stos
jne
mov
pop
pop
icebp
stos
imul
cmc
loopne
push
in
jmp
jmp
lods
movsl
test
xlat
cltd
jp
mov
dec
lea
stc
or
dec
les
mov
int
imull
adc
sub
xor
mov
jg
push
stos
push
cltd
mov
xchg
dec
cmp
xor
mov
or
enter
lods
add
enter
and
adc
fcomi
stos
cmp
std
inc
cmpsl
add
lea
inc
push
mov
in
pop
pop
jge
icebp
jae
or
push
mov
or
cmovp
dec
int3
jmp
pop
sarl
iretw
shrl
jnp
imul
xchg
loop
ss
out
lcall
xor
mov
movsl
cmp
inc
addr16
pop
adc
inc
and
add
cmp
mov
loop
pop
shll
mov
movsl
and
cs
cltd
imul
insl
mov
push
sti
or
dec
enter
fildl
out
and
hlt
adc
pop
push
jl
sub
fs
aam
fbstp
mov
sub
xchg
jp
pop
mov
cli
das
popf
outsb
or
mov
xchg
pop
aaa
add
and
rorb
jae
sti
fwait
cs
add
je
arpl
test
fstpl
bound
push
jns
fstpt
jne
dec
ds
nop
sub
lahf
bound
push
repz
bound
mov
out
aaa
mov
pushf
cli
fdivs
adcl
cli
ficoml
cs
sbb
cmpsb
sub
arpl
rorl
sbb
shlb
mov
pop
xor
xor
jne
pop
imul
xchg
pop
icebp
mov
push
xlat
mov
mov
inc
cli
inc
sti
repnz
and
inc
sbb
mov
lock
pop
sub
outsb
xchg
int
jge
mov
add
jg
xchg
hlt
jne
aaa
push
and
mov
loopne
jns
xlat
jno
fnstenv
mov
aas
push
jl
test
and
scas
shlb
lret
es
pushf
movsl
and
ljmp
inc
or
rcrb
jno
add
cmp
in
jmp
and
rorb
test
sti
call
mov
and
cmp
scas
les
nop
mov
dec
jnp
push
mov
add
inc
icebp
adc
inc
cmp
and
mov
das
adc
lods
shrl
cmp
js
add
in
mov
push
out
rol
cmp
aam
lods
out
es
clc
add
and
adc
psadbw
icebp
scas
hlt
dec
push
jae
mov
sbb
add
fsubrp
dec
iret
mov
movsb
repnz
nop
mov
mov
je
mov
adc
je
adc
arpl
shr
adc
imul
mov
or
aam
lock
jmp
sub
das
icebp
dec
out
xchg
test
fimuls
cmpsl
sbb
lret
outsb
lahf
cmp
mov
cmp
mov
mov
je
lea
psubusb
mov
dec
insl
xor
cmp
jl
inc
es
fwait
int3
cs
add
xchg
ds
cli
enter
sbb
lret
pusha
jo
lret
jmp
insb
sbb
stc
jp
jge
fwait
cmpsl
and
mov
xchg
stc
mov
insl
push
and
ja
cmp
cmpsl
insb
sbb
das
ds
mov
loop
and
sub
push
add
mov
lock
sbb
pusha
out
ret
lea
jl
pop
pusha
pop
add
int
lret
and
pop
int
scas
mov
cmp
xchg
repnz
mov
out
inc
bnd
mov
outsl
sbb
hlt
shl
popf
pop
or
mov
icebp
and
stos
sub
adc
cmpsb
movsb
mov
aad
mov
inc
sarl
pop
sub
das
fiadds
pop
jge
ret
add
jae
mov
int
pop
gs
insb
xor
mov
inc
in
xor
jne
jnp
lahf
mov
imul
popa
xor
cmp
hlt
inc
lods
inc
pop
mov
and
addl
xor
mov
gs
mov
push
jge
loopne
xchg
pop
repz
and
push
pushf
iret
and
jo
jle
pop
mov
xor
sub
in
pop
cmp
fs
adc
std
dec
mov
lds
or
xchg
pop
cs
mov
xchg
xchg
hlt
lods
and
jnp
xor
and
repz
orb
jns
stos
jmp
lds
data16
jg
dec
add
mov
cmp
pop
xor
test
jne
out
mov
insb
enter
mov
addr16
imul
jge
gs
inc
mov
push
dec
xor
mov
sbb
iret
dec
out
or
in
sbb
fs
js
int3
mov
js
rcrb
lret
jno
int
scas
jg
dec
fistl
mov
mov
scas
imul
icebp
and
mov
mov
test
mov
xchg
dec
mov
popf
jo
inc
sti
inc
rorb
sbb
sbb
push
lahf
jns
data16
icebp
dec
adc
pop
shrl
mov
dec
out
sbb
shlb
and
jmp
pop
xchg
jno
lcall
mov
decl
pop
inc
lds
jl
or
push
and
gs
pop
xor
add
movsb
xor
test
sbb
jo
sbb
jb
mov
hlt
mov
xor
and
test
nop
inc
rcll
fcmovb
dec
xor
mov
mov
pop
cli
jge
dec
mov
and
inc
enter
inc
mov
mov
cs
adc
fstps
jbe
xlat
push
clc
ds
leave
sub
enter
jp
inc
add
in
aaa
aad
int
shl
or
in
aaa
jno
xchg
leave
addr16
test
xchg
sahf
and
loop
clc
mov
lods
iret
dec
lahf
fbstp
nop
das
cmp
push
push
push
jp
enter
cmpsl
jne
pop
mov
add
mov
es
cmpsl
fwait
sub
arpl
in
pop
sbb
gs
mov
mov
lock
dec
jnp
test
pop
xchg
mov
mov
add
jbe
mov
inc
iret
inc
push
jns
mov
arpl
lds
dec
mov
add
sbb
outsb
fidivs
loope
dec
fnstsw
xchg
jne
sbbb
jmp
and
fdivrl
in
pop
fdivl
repz
jno
pop
stos
mov
sahf
in
icebp
sbb
icebp
push
loopne
shll
inc
sub
pop
add
rol
adc
mov
fxch
aad
and
imul
xor
pop
inc
jp
mov
adc
lret
sbb
mov
mov
jo
mov
or
out
popa
adc
pop
sub
mov
es
xor
pop
add
subl
add
sarl
fisttps
inc
loope
sub
dec
rcll
cmpsb
incl
gs
daa
adc
mov
or
shll
daa
pop
nop
fcompl
jb
bound
imul
loop
pop
loope
xchg
test
inc
add
dec
pop
xor
int
addr16
into
sub
stc
pop
xorb
and
not
sbb
mov
mov
pop
ror
jno
loope
cmpsb
cmpsl
fisubrl
cmpsl
fcoml
outsl
cmc
push
iret
pop
cmp
ljmp
in
jle
iret
mov
jae
add
loope
cmp
call
je
lret
jl
je
push
fs
pop
dec
in
xchg
sub
fs
mov
fnsave
mov
pop
or
push
add
das
and
pop
mov
pop
in
dec
nop
and
adc
xor
hlt
pop
xor
mov
sub
sbb
imull
xor
mov
mov
and
shl
mov
adc
mov
cmp
jmp
push
sbb
mov
xorb
rcrb
clc
add
gs
data16
cmpsb
outsb
pop
mov
into
in
push
and
push
mov
ds
sbb
xchg
mov
fwait
add
testl
jmp
fstl
or
xchg
bound
loope
dec
jae
dec
das
jbe
add
iret
pop
mov
xchg
push
xor
jle
sub
push
pop
push
nop
xchg
inc
push
inc
mov
dec
inc
lcall
sbb
imul
adc
test
popa
jp
adc
addr16
gs
mov
mov
rcll
test
or
lds
or
sbb
sub
jecxz
mov
imul
lret
stc
add
push
push
add
xor
rorl
xchg
in
test
sbb
xchg
cmp
jo
aam
bound
pop
xor
outsl
mov
fiaddl
cs
pop
in
stos
or
dec
rcll
loope
mov
lahf
stc
rcrl
xor
test
test
scas
cmp
mov
push
push
dec
shrb
lret
sbb
and
jo
aas
adc
cld
jecxz
mov
mov
pop
pop
nop
xor
xchg
movsl
in
mov
pop
push
out
or
clc
mov
andl
cld
jmp
mov
lea
repnz
cltd
fwait
popl
je
out
jmp
dec
pop
xor
jno
pop
jmp
cmp
test
cmp
es
add
mov
mov
hlt
ret
cmc
iret
adc
pop
mov
or
into
cwtl
and
pop
andl
iret
adc
dec
lock
sti
mov
dec
movsl
test
push
xor
sbb
mov
add
movsb
and
xchg
add
pop
cmpsb
cmp
xchg
mov
jnp
mov
shll
fst
in
stos
sbb
add
int
lods
leave
cli
cmp
xchg
fwait
popf
adc
outsb
hlt
sub
repnz
xchg
dec
dec
push
test
stc
pop
lds
cmpsl
or
mov
fildll
xchg
cmp
cmc
push
add
dec
push
pop
repnz
test
adc
out
push
cmpsb
cmp
repz
jns
stos
jo
mov
into
add
aaa
or
pop
and
imul
xor
jnp
out
xor
leave
xchg
pusha
lods
add
imul
out
test
int
cmp
arpl
iret
sub
in
sub
jp
aad
es
pop
xorb
xor
push
mov
pusha
sbb
pop
int
or
mov
scas
rcrb
lods
cli
mov
or
mov
jno
jno
and
cwtl
pop
sub
pop
loopne
dec
xchg
fcoml
xchg
enter
arpl
lods
mov
in
mov
and
xchg
daa
mov
mov
mov
cmpsl
flds
outsl
out
ljmp
inc
packsswb
in
pop
lea
add
pusha
roll
in
gs
push
clc
jne
fs
push
push
popa
and
stos
pxor
lods
jp
lods
cmpsb
test
arpl
insl
andb
imull
lods
mov
and
xor
sbb
int3
and
push
mov
sbb
xor
sbb
xchg
sti
ljmp
jo
mov
pop
arpl
pop
fisttpll
loope
cmpsb
ss
aaa
jl
mov
movsl
sub
pop
out
mov
mov
or
ds
cmp
inc
jmp
sahf
cli
arpl
xor
jmp
pop
test
fldt
mov
dec
lcall
std
mov
adc
repnz
or
shrb
leave
imul
out
mov
jne
imul
insb
inc
mov
bound
das
gs
sub
and
int
mov
lds
test
mov
mov
pop
das
gs
fmulp
sahf
ljmp
and
cli
mov
stos
test
xor
jo
pop
mov
mov
add
iret
lcall
ljmp
movsl
decl
inc
mov
xor
pop
or
inc
or
mov
addb
mov
lahf
fcomip
stos
mov
call
and
push
dec
xor
rcrb
cmpsl
lret
adc
mov
dec
sbb
mov
xor
in
mov
movsl
clc
dec
mov
mov
add
push
aas
push
adc
xor
repnz
enter
cwtl
mov
xor
xor
stos
aad
xchg
sbb
pop
mov
lock
aaa
out
fmuls
or
cld
adc
mov
adc
repz
jnp
aaa
cmpsb
cmpsb
pop
pop
popa
inc
jecxz
iret
iret
mov
rorl
or
lret
mov
cltd
sub
mov
and
testl
or
add
test
lds
xchg
jl
mov
cld
cmp
inc
jmp
ror
filds
jle
adc
sub
or
mov
or
mov
imul
pop
in
out
int3
push
mov
dec
int
fldl
add
ds
inc
dec
inc
push
aad
iret
scas
jle
in
call
pop
out
mov
int
jmp
addr16
or
mov
dec
xor
mov
adc
aad
jnp
pop
add
out
ficoml
mov
fwait
sbb
call
inc
inc
cmp
jnp
inc
pop
decl
mov
mov
mov
mov
sub
add
inc
inc
mov
test
inc
cmp
mov
movsl
or
xchg
pop
cmp
mov
cmc
fiaddl
ja
les
inc
fwait
arpl
cs
ret
cmpsl
cmp
std
pop
aad
mov
icebp
int3
mov
adc
test
jb
lahf
inc
jno
xchg
sbb
xor
sti
out
and
lahf
xor
fidivl
int
loopne
mov
dec
bound
inc
sbb
pop
sub
xor
dec
mov
sub
cli
mov
mov
or
inc
sub
xor
or
fs
cmp
or
mov
add
and
jns
add
mov
dec
jmp
pop
and
inc
mov
sbb
sbb
dec
idivb
jno
fdivrl
ja
addb
std
jl
sub
sahf
mov
adc
sbb
dec
iret
popf
dec
mov
sub
sbb
xor
sub
push
add
icebp
out
and
dec
xorl
popf
pop
xor
push
dec
pop
popa
inc
and
pushf
shld
and
mov
or
mov
or
rolb
aas
pop
repnz
and
mov
jg
cmpsb
gs
inc
mov
mov
or
sbb
xchg
xchg
sbb
sbbl
push
stc
cmp
dec
adc
pop
cmc
xchg
push
cmp
mov
pop
ja
inc
add
mov
rorb
leave
push
mov
pop
sub
pop
mov
adc
popf
xchg
push
negl
inc
xchg
sub
adc
mov
lret
mov
test
push
std
adc
idiv
jo
push
adc
cmp
test
xor
xorb
mov
scas
adc
mov
incl
ss
fiadds
test
daa
cmp
add
sti
sub
sbb
jo
mov
pop
mov
jg
ljmp
sbb
xchg
jb
pusha
adc
xor
addr16
incb
mov
or
shlb
adc
mov
test
imul
add
lahf
pop
inc
inc
popf
imul
sti
mov
mov
push
movsl
setbe
add
xchg
aas
movsb
or
fs
outsb
mov
push
dec
imul
push
mov
push
mov
lahf
lahf
sub
cmp
test
std
ja
mov
mov
fcmovnb
pusha
imul
xor
inc
jno
call
inc
mov
mov
push
inc
test
test
mov
sarb
push
dec
xor
mov
dec
cmp
push
aam
adc
popa
fs
imul
mov
xchg
in
xor
data16
xchg
jno
loope
mov
hlt
notl
push
adc
adc
inc
in
dec
es
jae
push
clc
mov
imull
add
in
enter
xchg
mov
push
sbb
mov
inc
pop
mov
dec
mov
es
cmp
mov
adc
sub
incl
inc
movsb
cmc
ja
xchg
dec
imul
lahf
sub
inc
adc
cmpsl
cmpb
aam
fiaddl
popf
scas
and
daa
sbb
push
es
cmp
sub
pop
sub
pop
daa
mov
cli
or
xchg
cmpsl
pop
fisttps
dec
xchg
icebp
arpl
xor
clc
psadbw
inc
fistl
pop
push
mov
inc
out
cmp
mov
hlt
adc
pop
or
fsub
or
nop
aaa
add
cli
cmp
pushf
stc
ja
movsb
inc
shl
dec
xor
adc
cmp
pop
pop
dec
and
inc
pusha
push
xchg
fwait
inc
mov
cmp
hlt
pushl
jge
or
dec
arpl
mov
adc
addr16
notb
lcall
dec
repnz
je
adc
cmp
imul
mov
lret
insl
cmp
mov
mov
inc
dec
ffree
je
imul
xor
push
push
in
adc
dec
mov
out
pop
mov
stos
bts
hlt
or
decl
aas
pop
and
inc
jmp
in
xchg
pop
pop
inc
loopne
inc
inc
mov
imul
add
in
nop
mov
and
stc
and
fs
pop
xchg
pop
adc
xor
adc
xchg
fs
inc
into
std
ja
mov
sbb
addr16
mov
adc
inc
hlt
daa
push
stc
add
inc
lret
adc
leave
leave
mov
xchg
out
and
inc
sbb
mov
fsubrp
icebp
pop
and
sub
cli
xor
pusha
mov
bound
push
adc
pop
jo
dec
pusha
adc
in
bts
adc
push
pusha
mov
clc
pop
es
mov
and
jp
adc
divl
imul
push
inc
addr16
pushf
shll
fstl
push
cmp
enter
in
inc
cmc
lock
xchg
pop
adc
lods
scas
jecxz
push
daa
test
dec
fisttpll
gs
push
mov
xor
sbb
cmp
imul
dec
mov
clc
jno
sbb
sbb
lea
ret
xor
jne
cmp
test
inc
frstor
pop
xor
test
cmp
gs
mov
das
cmp
mov
adc
in
movsl
cmpsl
test
inc
rolb
and
aam
cmp
cmc
adc
shll
sub
adc
inc
dec
inc
insl
repz
mov
and
call
push
in
and
pushf
in
cli
jo
jl
push
inc
rolb
mov
adc
in
pop
es
loope
add
cmp
lods
lret
jnp
aaa
rcr
mov
sub
sahf
popa
mov
ja
push
in
in
inc
adc
adc
rolb
sbb
imul
jge
or
les
and
xor
aas
mov
inc
add
dec
xchg
xor
jae
mov
mov
pusha
push
push
xor
inc
mov
fildll
mov
sti
pop
xchg
and
push
gs
lods
dec
hlt
pusha
sbb
or
jns
push
xlat
mov
fs
inc
inc
sbb
outsl
xor
lahf
arpl
mov
dec
jno
inc
mov
cltd
push
stos
xchg
adc
mov
add
xchg
mov
dec
dec
lock
jo
in
lret
inc
sub
adc
add
push
popa
pop
fildll
cmp
push
addl
xchg
gs
inc
call
fildl
pop
adc
addr16
and
inc
sub
addl
jmp
pop
add
sti
loopne
inc
mov
test
hlt
sub
jl
xor
test
inc
mov
jp
int3
pop
test
inc
iret
gs
movsb
popf
adc
sbb
imul
or
push
repnz
loope
sti
or
loope
mov
in
add
xchg
movsl
push
push
ja
cld
cld
xor
mov
inc
xchg
fdiv
push
adc
mov
pop
outsl
jg
aam
pop
xchg
sbb
mov
jg
bound
sbb
push
inc
xchg
push
mov
xchg
push
in
hlt
push
dec
push
add
jl
std
push
sahf
adc
mov
mov
cld
sub
mov
popa
or
fstl
pop
js
enter
in
js
jae
jp
inc
das
jge
push
mov
add
mov
add
mov
jl
lret
and
xor
insb
bound
mov
dec
call
sbb
cmpl
pop
cwtl
adc
dec
cltd
push
notl
insl
inc
repz
adc
cmp
or
mulb
cmp
jnp
aas
lock
in
adc
lret
or
test
mov
cld
aaa
dec
mov
and
push
inc
inc
and
in
imul
and
and
std
lea
jle
or
movsb
dec
xchg
repnz
scas
sbb
dec
cmp
inc
sub
pop
loopne
mov
jno
lret
out
pop
sub
test
fmull
adc
and
inc
adc
adc
inc
xchg
aaa
lahf
hlt
jne
mov
aam
xchg
mov
mov
sub
sub
movsb
nop
mov
ret
xlat
sbb
movsl
inc
fidivl
inc
cli
push
dec
imul
enter
add
or
arpl
or
sbb
push
pop
loope
popf
pop
nop
dec
lcall
popa
adc
imul
push
adc
push
add
adc
push
fs
dec
mov
mov
xchg
insl
pop
xchg
xchg
sub
jno
insl
fidivrs
pop
sbb
ret
sbb
jmp
adc
jno
pop
add
dec
push
jle
add
or
inc
mov
pop
pop
dec
mov
insl
and
aad
jmp
pop
cmp
pop
hlt
dec
pop
je
cmpsl
adc
add
inc
pop
insb
push
jmp
push
popf
push
bnd
inc
xor
xor
add
into
cmp
arpl
or
add
icebp
jno
sti
imul
jmp
orl
add
sbb
lea
push
mov
or
jbe
sti
int3
pushl
dec
add
pop
inc
push
sub
pop
jmp
pop
dec
cmpsl
cmpsl
out
mov
sbb
insl
xor
add
jnp
push
es
or
add
sbb
sbb
mov
leave
js
pop
jo
pop
in
xchg
pop
and
add
adc
jnp
dec
adc
pop
inc
adcl
std
xor
or
icebp
cmc
sbb
nop
icebp
mov
std
mov
mov
mov
inc
mov
std
xchg
lret
mov
dec
push
adc
or
sahf
shll
and
sbb
pop
or
inc
mov
ret
pop
gs
push
orb
or
pop
push
jnp
pop
mov
outsb
inc
and
xchg
imul
pop
cmp
ds
std
sub
inc
mov
or
into
pop
adc
mov
movl
mov
in
movl
shrb
sarl
fistl
shlb
cmpsl
inc
movsb
or
push
sub
test
pop
push
daa
gs
es
fstpl
mov
pop
or
mov
cmp
inc
adc
xchg
rcrb
inc
stc
sti
mov
dec
std
sbb
xchg
sub
roll
mov
outsl
xchg
push
and
mov
jecxz
xchg
pop
adc
loope
fwait
imul
mov
rorb
outsl
data16
dec
mov
pop
arpl
or
nop
mov
test
push
imul
pushf
dec
movsl
rolb
jmp
jns
icebp
push
notb
ljmp
cmpsb
lock
dec
pop
mov
cld
shll
mov
ja
jae
lods
clc
sbb
and
frstor
pusha
pushf
dec
repz
and
adc
adc
or
xchg
push
sbb
dec
cli
jecxz
adc
pop
push
pusha
and
push
adc
lcall
sbb
dec
or
sbb
scas
or
imul
ss
pusha
jp
mov
mov
adc
mov
inc
insb
stos
push
rorl
inc
inc
sti
cld
adc
jmp
shll
clc
fs
imul
mov
push
cmp
aam
xchg
das
lds
clc
inc
jns
stos
and
pop
mov
add
sbb
outsl
cmp
dec
mov
imul
and
outsb
cld
cli
mov
push
jle
les
xor
xchg
adc
inc
imul
mov
adc
ljmp
dec
adc
sbb
inc
push
sbb
popf
jns
jno
mull
sbb
and
pop
and
inc
or
popa
cmp
ljmp
adc
jae
int
and
test
das
fst
out
mov
bound
xor
xchg
sti
jo
aaa
subl
inc
add
push
adc
out
faddl
adc
ljmp
sti
add
in
xlat
xchg
inc
xor
sbbl
nop
decl
or
or
and
add
mov
repnz
sbb
or
adc
dec
aaa
and
jp
pop
pusha
or
fnsave
adc
inc
adc
mov
icebp
lods
call
popf
push
inc
repnz
sahf
sub
pusha
adc
adc
sub
out
add
adc
or
daa
push
andb
subb
add
xchg
and
out
mov
mov
clc
mov
jno
adc
adc
incb
inc
mov
mov
js
mov
inc
mov
lea
shlb
stc
dec
push
cmc
or
hlt
sub
jbe
jge
sub
adc
sbb
jnp
xor
mov
inc
xor
adc
repnz
push
push
dec
mov
inc
cmpsl
mov
and
data16
or
jo
add
sbbb
in
xchg
data16
hlt
cmp
mov
fistps
and
subb
sbb
fistpl
movsl
out
ret
mov
fwait
and
stos
xchg
or
fldt
or
add
mov
lea
ret
mov
xor
pop
insb
mov
imul
mov
sbb
jge
fistps
jb
inc
cmc
subl
roll
inc
daa
or
icebp
mov
cmp
or
adc
lock
cmp
call
inc
sti
loop
jae
pop
je
pop
repnz
mov
inc
mov
pop
ud1
out
and
ret
mov
push
jns
leave
out
mov
loope
push
xchg
sar
arpl
rcrl
jecxz
inc
adc
add
pushf
ds
pop
sub
inc
dec
adc
cld
mov
or
roll
hlt
imul
add
jne
icebp
sti
loopne
mov
bound
repz
sbb
insl
and
and
jge
inc
adc
outsb
imul
gs
push
pop
xchg
data16
jno
jge
pop
adc
popa
enter
insb
lods
ficoml
rorb
mov
mov
xchg
mov
je
dec
cltd
and
imul
scas
inc
push
les
sbb
jno
add
rorl
adc
stc
pop
adc
frstor
fsubr
popw
dec
ds
aas
nop
sbb
je
les
sbb
aas
xchg
mov
fisubl
shll
add
cmp
fsubs
lahf
loope
shrb
sarl
movsb
dec
push
jns
lcall
andb
lods
iret
in
aaa
inc
inc
add
lea
pop
es
inc
sub
push
pop
dec
mov
mov
movsb
adc
dec
shll
sbb
pop
push
aaa
mov
enter
or
aaa
jno
inc
mov
cmp
mov
push
mov
push
or
cli
test
sub
cltd
xchg
les
push
aas
xor
pop
or
in
inc
pop
rcl
test
out
rcll
jle
cmp
dec
lea
and
inc
popa
jae
push
inc
cli
or
cltd
push
int3
sti
pop
jecxz
test
jo
sub
cmp
dec
sub
pusha
popa
add
daa
dec
adc
outsb
std
aas
divl
pop
push
push
popf
push
and
pop
stc
popa
repz
shll
shlb
inc
xor
jge
push
adc
cmc
js
mov
icebp
pop
pop
sub
inc
xlat
rcrl
sub
lock
sti
or
roll
loope
xchg
bound
cmp
imul
cltd
imul
mov
negb
adc
inc
push
push
xor
jge
bound
ss
repz
lock
cmp
jno
xor
dec
xchg
jecxz
push
pop
daa
dec
mov
sub
xlat
pop
pusha
bound
xor
pop
fwait
repz
dec
testl
pop
sub
add
adc
dec
cmp
clc
shl
dec
jo
pop
call
imul
daa
pop
mov
cmp
xlat
push
mov
or
pop
sbb
std
mov
add
sub
dec
xchg
sbb
popa
cmpsb
cmpsb
test
dec
stos
or
scas
in
mov
idivl
loope
push
data16
ljmp
ljmp
lods
push
xchg
xchg
lcall
in
adc
pop
inc
in
scas
lret
aas
push
movsl
mov
push
test
scas
repnz
testb
pop
ret
mov
outsl
and
mov
xor
sub
jae
out
or
sub
jns
push
sbb
mov
cmpsb
in
je
cmc
scas
shlb
call
stc
imull
adc
or
sarl
dec
push
or
test
pop
jmp
add
pop
test
sbb
addr16
mov
and
cmc
idivl
xor
popa
aas
nop
or
popa
xchg
cld
sar
enter
das
push
fdivs
cwtl
popa
imul
xorl
mov
sbbb
in
xor
jae
xor
push
frstor
pop
lods
scas
rep
xchg
in
dec
jns
jbe
jecxz
fdivrl
jae
cwtl
fdivrl
fdivrl
arpl
xchg
inc
hlt
aas
cmp
dec
adc
jmp
fists
fdivrs
dec
mov
popf
xor
add
and
insl
dec
sbb
js
push
xor
fldt
subl
push
cltd
push
in
cmp
xchg
stos
add
leave
sarb
std
adc
sbb
movsl
mov
ficoml
xlat
pop
call
cmpsl
es
pop
imul
test
fsubp
sbb
notl
test
pop
inc
rclb
test
mov
clc
push
fidivs
add
testl
or
aas
lock
adc
out
lret
cmp
fwait
mov
xchg
loop
test
xchg
scas
dec
mov
sbb
inc
sub
cmp
into
mov
addr16
pop
mov
push
cmp
jge
and
fwait
and
add
fcmovne
repz
sbb
movsl
cmp
outsl
cmpsl
sahf
pop
adc
pop
dec
mov
sub
repz
push
push
scas
add
aaa
cmp
sbb
mov
hlt
dec
daa
pop
jmp
bound
dec
jecxz
movsl
cmpsb
mul
adc
sahf
mov
inc
lret
mov
lea
hlt
cltd
sub
mov
jge
mov
enter
je
pop
stc
mov
inc
mov
mov
sbb
jno
shrb
mov
movb
mov
in
andb
mov
mov
xor
mov
pop
negl
lds
add
push
ret
and
and
push
fisttpl
dec
adc
pushw
add
inc
mov
and
jl
jecxz
outsl
add
xor
xchg
cmpsb
outsl
or
pushf
and
sbb
and
rclb
bswap
sarl
mov
dec
inc
sbb
xor
sub
cmpsb
dec
sbb
popa
xor
mov
mov
push
mov
sbb
sub
rorb
jne
mov
mov
shrb
xor
aaa
mov
test
dec
int3
dec
test
jle
jl
xlat
push
fmuls
lea
in
mov
mov
fcoms
and
jg
repnz
cmc
subb
cmovo
lds
push
pop
lock
in
mov
or
sub
inc
xchg
negl
or
xchg
pavgw
out
push
lea
dec
jne
mov
pop
push
xor
pop
aam
das
insb
inc
leave
add
sub
dec
call
push
xchg
popl
out
mov
add
xor
and
inc
mov
push
xchg
adc
or
shrl
inc
pop
push
sub
sbb
aaa
adc
fs
nop
xchg
popa
lds
xchg
inc
dec
xchg
jg
mov
aas
data16
scas
pop
lea
scas
mov
rclb
in
in
repnz
add
lret
jge
subl
test
pushf
call
aaa
and
shr
les
jae
push
mov
data16
inc
or
arpl
out
pop
in
out
cld
pop
jnp
stos
mov
xchg
dec
jge
out
aaa
sbb
lret
pop
inc
inc
clc
jnp
jp
loope
cmp
inc
push
xor
loop
adcl
in
pop
fnstsw
hlt
stos
sub
pop
je
mov
jae
cmp
inc
pop
dec
and
cmp
inc
and
ds
cmc
imul
fisubrl
mov
mov
insb
mov
push
xor
push
inc
lcallw
adc
push
sbb
xchg
test
sar
push
cmp
lahf
inc
fxch
mov
test
nop
into
cmc
lret
or
inc
rcl
fadds
pop
xchg
jbe
cmp
inc
enter
jns
xor
sbb
sbb
shlb
xor
pop
dec
dec
or
orb
insb
inc
es
js
gs
add
mov
cmp
enter
clc
and
cmp
enter
movsl
mov
mull
sarb
iret
mov
mov
mov
or
dec
push
sub
dec
pop
data16
push
lds
push
mov
mov
popl
pusha
xchg
push
mov
into
inc
fnstcw
mov
jbe
pop
sub
lods
mov
cmc
jne
and
mov
cltd
ret
xor
xchg
sbb
testb
adc
into
mov
lea
xchg
mov
lds
push
mov
test
hlt
xchg
xor
iret
daa
pop
arpl
inc
sbb
addb
test
ljmp
gs
adc
cmpsb
rolb
gs
rcrb
insb
add
lcall
std
inc
mov
lea
sbbl
sarb
dec
pushf
cmp
scas
pop
add
stc
xor
imul
lret
test
out
add
xor
pop
roll
jne
pop
adc
cmp
pop
outsb
sub
outsl
sti
loope
outsb
or
insl
mov
inc
pop
sub
inc
insl
imul
and
mov
ja
push
jne
pushf
jbe
pop
add
out
dec
pop
inc
push
lds
mov
or
int3
fs
nop
ljmp
or
ret
arpl
ret
outsb
frstor
lds
frstor
dec
jbe
sbb
enter
jnp
das
cmp
pop
sbb
cmpsb
xchg
lcall
xchg
xor
xor
hlt
imulb
dec
mov
lods
pusha
inc
bound
xor
pop
out
repz
mov
sub
mov
jno
test
stos
sbbb
mov
jle
sti
cmp
cwtl
mov
mov
or
lds
pop
leave
outsl
les
inc
mov
dec
insl
sbb
mov
sbb
inc
lods
push
scas
mov
repz
xchg
inc
sbb
add
mov
adc
dec
pop
and
aaa
jle
inc
aaa
mov
pop
push
cli
aaa
mov
mov
jle
ljmp
out
loop
pop
mov
out
les
xor
sbb
leave
jae
out
clc
fistps
out
mov
outsb
inc
pop
mov
icebp
iret
daa
filds
mov
cmp
lock
mov
lret
test
push
leave
push
int
lods
ja
scas
jnp
sub
and
add
or
cmp
jg
scas
cmpsl
inc
xchg
popf
cwtl
pop
xlat
xorl
cmp
add
popf
hlt
push
mov
dec
adc
or
icebp
cmc
xchg
xchg
cmp
call
and
mov
addl
and
push
and
xor
nop
dec
cmp
push
std
mov
sub
sbb
xchg
jno
jno
push
repnz
push
mov
repnz
or
pop
push
loope
push
mov
cmp
xchg
rorl
aad
mov
push
rorl
pusha
popa
cs
xor
jbe
dec
jnp
pmulhuw
stos
scas
daa
dec
cmp
shlb
adc
subl
mov
mov
repnz
xor
test
and
mov
rcrl
mov
pop
pop
pop
pop
in
mov
lods
negb
andl
dec
sbb
mov
jle
pop
mov
cmpsb
nop
dec
dec
inc
xchg
icebp
lods
leave
mov
movsb
mov
xlat
mov
rcrl
xor
cmp
pop
imul
sbb
sbb
adc
sbb
std
std
mov
in
push
lods
or
jbe
lock
popf
out
cmc
test
mov
sarl
into
jns
fprem1
dec
in
push
std
scas
cld
arpl
mov
fmul
inc
cld
insb
sub
mov
fsts
aas
xlat
cmc
fldt
aaa
vpdpbusd
inc
movsl
insb
cmp
movsl
cmpsb
lods
cmpb
mov
insl
xor
test
or
lahf
repnz
aam
iret
push
dec
mov
int
rcrb
idivl
insl
mov
pop
negl
xor
mov
cmpsb
add
out
je
inc
dec
pop
jle
jno
gs
stos
jle
xlat
xor
rorb
inc
pop
sub
adc
fisubl
cmp
fisubrs
mov
sub
loope
les
xor
das
adc
jno
inc
pop
dec
dec
mov
aad
pop
cmpsl
xor
testb
pusha
movsb
pop
lds
sti
fidivs
sub
shll
mov
sarl
mov
mov
adc
xchg
jg
in
pop
lret
icebp
adc
imul
pop
sbb
pop
lcall
push
xchg
push
xor
sbb
pop
jg
sahf
nop
mov
insl
orb
xchg
test
dec
add
mov
sub
xor
sahf
sub
outsb
lock
out
push
jns
in
mov
fcompl
leave
data16
stos
and
fnsave
imul
addr16
add
data16
fisubs
mov
jne
bound
xlat
and
xor
pop
xor
iret
test
add
sbb
adc
loop
or
sbb
xor
jecxz
int3
in
fstp
es
fdivrs
dec
test
sub
hlt
mov
int3
xchg
outsb
and
jo
cmpsb
inc
insb
xor
pop
mov
push
xchg
xchg
inc
xor
das
test
mov
xor
mov
imul
ljmp
inc
int
and
loopne
xchg
int3
cmp
sahf
mov
push
movsl
fs
imul
pop
ret
mov
je
loop
es
fdivs
adc
in
adc
fisttps
pop
xor
jae
adc
cmp
push
lods
sub
cmpsl
or
movsl
dec
loope
aas
popf
and
popa
int3
push
pop
jbe
jle,pt
and
fdivl
jae
call
xor
mov
sti
or
fsubrs
sbb
and
mov
popf
scas
shlb
aas
ret
xchg
jle
push
movsb
shlb
imul
mov
xor
cmp
push
push
ret
std
add
pop
push
jle
and
lea
inc
sbb
xor
push
lds
and
scas
mov
mov
or
sbb
popf
xlat
xor
movsb
nop
dec
sbb
movsl
dec
scas
aaa
push
push
bound
out
nop
stc
std
addr16
xorl
lea
inc
pop
shrb
or
pop
in
stos
fwait
js
test
add
push
cmpsl
imul
shrb
inc
sbb
add
mov
aam
imul
jno
stc
hlt
das
movsl
xor
lock
jl
out
mov
bound
adc
mov
call
adc
inc
and
aaa
test
dec
lods
sub
adc
mov
add
out
repz
mov
clc
xlat
mov
add
mov
cmc
xor
jmp
push
mov
dec
lods
inc
dec
adc
into
arpl
jns
cld
adc
sbb
les
mov
cld
or
pop
or
cmp
aaa
mov
xchg
jmp
pop
and
mov
dec
fcoml
fisubs
mov
insl
mov
mov
sbb
adc
mull
je
dec
xchg
cmp
push
xchg
and
popf
je
loope
pusha
orl
cmp
pop
aam
gs
loopne
mov
mov
dec
aaa
gs
mov
or
cltd
cld
mov
mov
add
sub
cmp
push
pcmpgtb
jbe
ja
loopne
mov
mov
sbb
fsub
scas
dec
negl
xor
mov
orb
ja
bound
or
sbb
pop
add
dec
xor
leave
jecxz
jp
and
aam
dec
in
in
pop
iret
cmp
pop
adc
cltd
pop
xor
js
nop
in
out
ss
mov
mov
pop
gs
pop
sbb
pop
pop
jne
fwait
movsl
arpl
jnp
and
or
sbb
into
pop
pop
icebp
push
pop
mov
ret
add
inc
inc
xchg
jle
pushf
xor
push
jecxz
sti
and
pop
jecxz
ja
mov
or
xlat
add
and
imul
jge
ljmp
dec
and
loopne
xchg
into
sar
sbb
mov
push
daa
pop
test
pop
ret
mov
sub
inc
lea
outsb
ret
popa
xorw
cld
jo
cmpl
clc
sbb
or
cmp
or
adc
movsl
cmpsb
scas
insb
mov
push
inc
add
and
mov
xor
jnp
cmp
gs
and
dec
imul
pop
dec
shlb
xor
dec
pop
fidivrs
mov
adc
mov
fnsave
fisttpl
gs
or
sbb
mov
fstps
or
das
jae
popa
or
mov
adc
sti
cwtl
xchg
dec
push
ret
pop
inc
pop
lret
mov
cmpsl
pop
pop
loope
jle
xchg
dec
jo
pop
pop
les
cmpsl
mov
movsl
loope
mov
and
rolb
addb
cltd
sub
or
add
dec
mov
pop
mov
arpl
je
loope
ja
dec
push
lea
push
jb
or
xor
pusha
cwtl
test
sbb
fadds
sbb
mov
je
sbb
fwait
dec
cli
mov
adc
lock
lret
mov
dec
arpl
xor
mov
popa
in
xor
inc
lret
scas
inc
dec
sbb
mov
xchg
inc
insl
test
pop
aaa
outsl
adc
pop
bound
sub
push
rolb
inc
out
mov
pop
xor
inc
and
fdivrs
xlat
in
pusha
pusha
bound
fistpl
ret
int
mov
push
jno
pop
push
jb
pop
imul
scas
cmp
js
out
mov
jno
jmp
inc
rcll
jp
adc
lret
testl
mov
sub
xor
dec
fldcw
xorl
cmc
fcomps
or
imul
mov
xchg
sub
cmp
in
and
shrb
je
or
sbb
cmpsl
dec
int
enter
xchg
stc
mov
into
jmp
insl
xchg
push
movsl
push
xchg
in
pop
movsl
sbb
jb
out
out
fldt
ret
push
add
mov
sarl
jl
pop
mov
jg
add
mov
inc
mov
push
mov
enter
inc
data16
jge
int3
cmp
fmuls
icebp
arpl
xchg
xor
cmpsl
mov
and
mov
pop
xchg
jb
sbb
shlb
bound
mov
out
jns
mov
or
push
aad
leave
das
mov
sbb
mov
xor
lret
or
ja
dec
or
cmp
iret
add
mov
hlt
mov
insl
sbb
xchg
xor
les
aad
cmpsl
jae
inc
lods
push
cs
xor
mov
call
sub
inc
in
loopne
mov
mov
xchg
add
loope
icebp
repz
cmpl
gs
xchg
xor
loope
sub
pushf
sub
inc
fidivrs
and
jl
fnstcw
push
repz
ficompl
push
gs
aaa
addb
mov
ret
lock
cmpsl
jbe
sub
jb
xor
leave
adc
test
add
loopne
xor
xlat
mov
pop
mov
shl
xchg
testb
pop
push
push
into
mov
imul
jb
andl
lds
pop
sbb
pop
inc
or
mov
dec
inc
ficoml
movsb
or
fidivrs
xchg
lcall
pop
lds
into
mov
pusha
fwait
lods
inc
sub
add
jl
loopne
jecxz
sahf
shl
mov
cli
pop
test
sbb
orb
mov
aas
test
inc
ror
xor
lea
or
loopne
in
push
and
js
movsl
mov
scas
pop
fstl
in
cmp
loope
jge
cld
jg
cmp
jo
xor
cmp
jl
push
pusha
pop
pop
mov
jg
shlb
pop
leave
mov
or
out
xchg
fstps
int3
pcmpgtw
inc
xchg
push
lods
jmp
and
cmp
adc
in
mov
xor
add
cmp
push
pusha
addr16
xor
fsubs
sbb
mov
pop
mov
xor
shll
sarl
jae
lock
jno
xor
xchg
mov
gs
mov
sbb
mov
sub
std
popa
mov
xchg
mov
dec
inc
pop
adc
ret
cld
xchg
inc
fstl
dec
aam
jne
xlat
dec
mov
add
or
pop
sub
ss
clc
nop
fwait
adc
stos
scas
lret
and
stos
cmp
jno
mov
sbb
ss
jae
jnp
aas
push
test
pop
mov
dec
ja
xor
jle
mov
cmp
push
shll
jo
cmp
pop
test
push
ds
in
mov
dec
out
ja
xor
loope
mov
pop
ret
xor
fwait
inc
popa
inc
mov
sbb
out
adcl
mul
scas
mov
into
je
and
js
cwtl
int3
pop
and
gs
xor
xchg
jae
and
cmpsb
popa
lcall
pop
jae
bnd
rcrl
insl
cs
dec
imul
mov
push
inc
push
jmp
mov
pop
outsb
and
push
push
into
in
das
mov
add
cmp
jg
enter
imul
movsb
cmp
jae
icebp
inc
mov
or
push
repnz
subb
cmp
aaa
inc
aam
insb
call
push
rcrb
hlt
pushf
cld
add
leave
stos
inc
std
divb
ss
push
cs
daa
sub
dec
inc
cs
fwait
aam
fistl
ds
sbb
add
jo
mov
push
sbb
or
shll
insl
leave
push
dec
outsl
sub
aam
mov
xor
mov
popf
mov
xlat
lods
out
mov
es
inc
dec
jl
lea
cli
pop
addr16
sub
inc
bound
xor
lock
lret
push
bound
mov
out
inc
jns
mov
fiadds
cmp
mov
sti
ror
mull
jne
int
fs
sar
clc
xchg
mov
stos
dec
mov
lds
out
push
rcrb
test
popa
aad
inc
mov
xchg
mov
pop
and
imul
in
repz
push
xchg
mov
ss
shlb
mov
dec
mov
dec
mov
inc
fdivs
inc
lret
sahf
jno
dec
jle
push
insl
pop
pop
mov
jle
iret
xor
inc
mov
xchg
and
imul
push
rorb
mov
xchg
cld
data16
stos
push
push
in
out
mov
lcall
inc
popf
scas
pop
push
rcrl
sbb
or
push
xor
push
sub
mov
mov
add
jne
jecxz
data16
mov
adc
loope
movsl
inc
xchg
pop
jb
leave
cmp
push
rcl
std
jl
repz
mov
pop
iret
fnstsw
rcll
lret
xor
cmpb
and
push
jno
pop
in
mov
mov
add
cld
inc
imulb
jle
jg
fisubs
pop
test
sbb
fwait
mov
sbb
or
or
loope
test
aam
repz
into
cmp
gs
jbe
lcall
inc
test
and
cmc
xor
ret
xchg
or
and
mov
xorb
jno
ja
push
in
mov
mov
mov
jb
shr
hlt
fdivrl
les
adc
mov
addr16
dec
inc
hlt
call
pop
fnstenv
mov
inc
xchg
fwait
das
arpl
jae
jb
add
jl
cmp
imul
jge
inc
or
icebp
je
cmp
std
xrelease
inc
lahf
push
jle
int3
cmp
nop
popf
ds
dec
and
sub
je
jne
pop
sub
lahf
loop
inc
jno
mov
popa
jbe
and
imul
ljmp
push
test
pop
mov
cltd
cmp
int
xor
xchg
int3
ja
data16
movsb
inc
test
dec
jle
iret
aad
and
int
test
lret
and
or
push
add
rcll
inc
push
pusha
mov
push
push
push
sbb
lret
lahf
test
push
add
xchg
mov
int3
aas
stos
es
mov
cmp
loopne
insb
inc
add
orb
mov
add
push
push
aaa
jg
mov
inc
lret
xor
dec
cmp
sahf
pop
stc
and
xchg
jbe
mov
gs
div
and
xorb
or
mov
mov
dec
or
cld
mov
mov
cmp
pop
sub
pushf
sbb
push
movsl
fisttpl
mov
cld
inc
in
ret
sbb
imul
inc
sub
jmp
sub
jecxz
and
push
fwait
pop
scas
mov
arpl
dec
sbb
mov
out
nop
shll
jb
push
mov
pop
mov
daa
pop
repnz
fbld
gs
sub
and
xor
inc
pop
and
ds
mov
push
push
imul
dec
inc
popf
mov
sub
fistpl
mov
decb
leave
testb
mov
in
lret
dec
inc
inc
cmp
cmp
stos
pop
jecxz
mov
decb
test
add
lret
js
repnz
cli
call
adc
sbb
stos
lock
jb
pop
pushf
inc
inc
cmpsb
or
das
cmpsl
jbe
lods
xchg
jb
mov
stos
pop
loop,pt
pop
incb
mov
mov
loopne
insb
mov
cltd
mov
push
push
dec
add
pop
pusha
cmp
push
rclb
jge
cmp
jno
adc
dec
repnz
stos
and
stc
in
lret
adc
cmp
and
inc
push
jecxz
push
repz
pop
fiaddl
nop
adc
out
test
idiv
les
inc
rolb
test
pop
bound
iret
sti
push
adc
dec
popa
mov
pop
and
xor
popa
add
lods
dec
adcb
xchg
repz
hlt
cmp
cmpsl
lfs
pop
add
mov
jmp
mov
mov
pop
pop
push
or
and
or
addl
xor
fwait
insb
push
std
inc
repnz
adc
incl
ds
pop
sub
arpl
dec
or
and
or
cmp
inc
mov
push
cld
js
test
xchg
xor
je
cli
adc
sub
les
sub
ja
inc
lcall
jl
cmpsb
inc
add
pop
imul
rolb
push
and
clc
xor
jne
cmpsl
fs
or
std
sbbb
icebp
mov
cmp
das
bound
das
loopne
outsb
and
lret
adc
pop
fs
push
inc
pusha
mov
stc
imul
icebp
cltd
clc
mov
mov
scas
pop
repnz
pop
cmpsb
test
movsl
lea
adc
jns
xor
insl
jns
xor
icebp
inc
cltd
and
pushf
mov
lods
arpl
push
or
jns
aam
mov
cwtl
push
cltd
repnz
popf
mov
loopne
and
sub
mov
inc
dec
pop
scas
and
or
xor
cmp
inc
sub
jge
arpl
lea
lret
lea
mov
aad
mov
lcall
ss
xor
add
dec
xorb
dec
addl
lea
aaa
pop
push
sbb
lret
loopne
dec
enter
dec
or
sbb
xor
inc
cmpsb
lods
mov
push
lret
or
push
rorl
jnp
mov
out
push
scas
adc
pop
movsb
pusha
inc
cmpsb
sub
xchg
push
mov
push
rclb
jl
bound
outsl
test
push
or
inc
mov
loopne
ljmp
mov
xchg
cmp
xor
push
lret
pop
mov
push
mov
add
stos
dec
gs
in
js
and
mov
push
enter
mov
jne
adc
push
dec
pop
pop
or
and
push
movsl
leave
jecxz
inc
pop
sbb
ljmp
cwtl
scas
std
inc
insl
ret
sbb
xlat
or
ss
push
adc
add
jg
dec
mov
push
shll
jb
lcall
stos
call
testl
xchg
xchg
xchg
pop
mov
jg
xor
std
hlt
lret
jl
cli
push
xchg
push
inc
push
push
gs
push
mov
iret
push
mov
inc
jecxz
xor
pop
addr16
cwtl
lods
stos
outsl
mov
fs
and
enter
adc
sub
test
or
stos
cs
mov
adc
leave
or
xor
or
mov
insb
sub
icebp
cmp
outsl
adc
push
je
dec
aaa
dec
xor
in
xchg
lea
sub
sbb
rol
fsubrs
outsb
xchg
jo
adc
and
lcall
xor
push
fimull
push
cmc
adc
sbb
dec
mov
push
fldcw
xor
pop
inc
jno
addr16
jmp
xchg
push
pop
fldl
cmp
pop
push
push
jnp
sahf
in
inc
mov
cmp
pcmpgtw
xor
adcl
cmpsl
inc
rorl
add
test
faddl
jle
scas
repz
lds
push
test
push
pop
push
xchg
push
or
cmp
outsl
sarl
test
or
adc
addr16
loope,pn
fdivs
push
sbb
loop
mov
sbb
jo
test
sub
pop
mov
loope
add
jne
sbb
movsb
mov
push
pop
test
pop
jle
xchg
ss
hlt
dec
enter
mov
sbbb
cmpsl
sub
mov
and
insb
dec
push
insb
sub
nop
fs
mov
pop
jbe
push
enter
rorb
in
jl
cmp
lea
cmp
test
cmovne
xlat
iret
cwtl
inc
cli
outsl
push
cmp
mov
and
xor
imul
mov
and
jmp
test
jl
lds
imulb
sbb
rcll
in
andb
add
or
mov
xor
sbb
aaa
cmp
pop
xlat
roll
call
sahf
lods
bound
gs
in
ds
and
push
mov
pop
or
test
fldt
iret
cmp
in
mov
inc
jge
in
sbb
sub
sbb
dec
outsb
je
imul
imul
pop
das
xchg
mov
sub
sub
xor
movsl
cmp
and
push
adc
xor
push
dec
sbb
jbe
fstp
pop
dec
test
repnz
rcl
jge
mov
mov
stc
dec
mov
fs
mov
imul
lret
xchg
xchg
mov
gs
ljmp
jae
xor
mov
out
or
lods
sahf
cmpsb
push
andl
pop
shll
mov
fldl
sbb
inc
lahf
fldcw
aas
add
and
test
or
xor
iret
pushf
movsl
sub
pop
xchg
dec
xchg
xor
sub
shll
jae
and
push
pop
scas
sub
cmpsb
cmp
add
add
in
jb
test
lahf
jmp
movsb
push
popf
enter
dec
adc
in
inc
sub
popf
adcl
pop
xor
ret
fmull
daa
jae
adc
daa
ss
mov
and
mov
adc
inc
mov
mov
daa
insl
push
mov
jne
sub
lods
sbb
add
mov
mov
aaa
stos
lea
pop
es
mov
cmp
lea
pop
mov
lock
sub
push
scas
fs
lods
pop
xor
xlat
arpl
out
pop
cmp
and
and
xor
adc
inc
push
push
cmpsl
dec
test
jge
push
push
adc
in
jmp
ja
jl
daa
pop
aaa
push
push
xchg
xor
shrb
pop
sbb
je
rorb
lods
and
pop
lods
pop
jge
pop
clc
mov
pop
push
add
gs
imul
and
xor
dec
ja
and
jb
das
fs
add
movsb
pop
popa
imul
xchg
jecxz
jp
sub
sbbl
lcall
or
adc
fwait
mov
cs
lret
lea
mov
cmp
jbe
dec
cmpl
in
mov
testb
inc
push
mov
xchg
jb
popa
mov
movsb
std
push
jge
testl
pop
bnd
xchg
shlb
xchg
pop
pop
jne
cmp
ss
aas
in
cmp
rcrb
shlb
dec
jne
push
cmp
xchg
jp
or
push
insb
sbb
mov
lahf
repnz
pop
rorl
xchg
jecxz
pop
aad
scas
inc
loop
sahf
dec
push
dec
pop
pop
xchg
sub
xor
or
sarb
add
push
inc
push
mov
lret
push
push
jne
xor
clc
and
shl
sti
fdivl
out
call
or
add
jp
dec
and
sbb
fmuls
rclb
sub
jecxz
lods
lds
push
xchg
jae
mov
dec
aam
mov
sbb
sbb
jbe
popf
and
mov
lret
xchg
lds
cltd
dec
xchg
imul
data16
push
ds
push
sar
movl
mov
mov
out
add
in
je
xor
dec
jno
sbb
add
push
sbb
cmp
fisttpl
and
outsb
dec
addr16
jmp
orl
push
mov
movsl
inc
stos
pop
sub
test
xor
mov
add
xchg
xor
test
lcall
dec
mov
mov
cmc
arpl
cs
sub
push
add
fucom
das
daa
sbb
repnz
test
stc
push
xlat
mov
es
hlt
push
repnz
mov
adc
xor
add
pusha
adc
je
pop
jmp
cmp
pusha
pop
icebp
add
mov
fbstp
mov
nop
mov
sub
adcl
loopne
and
repnz
mov
xchg
inc
mov
fistl
outsl
pop
cltd
data16
imulb
inc
aam
jl
clc
aam
sub
pop
pop
add
pop
cmp
aad
rcr
data16
imul
popl
outsb
fimull
mov
sub
xchg
mov
mov
adc
add
bound
addl
and
jb
cs
mov
bound
scas
dec
push
xor
and
dec
ret
dec
mov
pop
mov
call
add
addr16
push
pop
mov
out
hlt
insl
cmpsb
cmpsl
push
add
push
mov
fwait
mov
sub
in
ret
or
enter
lock
paddq
clc
cmp
outsl
test
and
xchg
add
xor
adc
mov
popa
in
pop
and
mov
dec
mov
pop
cwtl
imul
pop
or
lret
xor
xor
insb
adc
xchg
icebp
add
jns
out
xor
fcomps
and
and
sbb
fsubr
dec
adc
das
mov
dec
mov
xchg
daa
jbe
adc
clc
mov
daa
push
repz
out
call
incb
mov
icebp
xlat
sbb
in
in
pop
fninit
adc
and
dec
inc
mov
push
test
jecxz
jecxz
stos
sbb
outsb
jae
mov
or
mov
pusha
sbb
mov
and
adc
jnp
iret
test
add
xchg
repnz
in
insb
cmp
fwait
sbb
cmp
subl
dec
leave
sar
jb
lret
fmuls
movsl
cmpsb
adc
notb
insb
xchg
pop
pop
xchg
aaa
add
and
les
ret
inc
sbb
mov
mov
pop
jae
addb
xchg
shlb
dec
shll
dec
mov
push
mov
pop
push
jge
xor
dec
popa
cmp
jb
test
lret
push
push
mov
pop
push
popf
aad
jnp
nop
xchg
xor
lds
cmp
add
aam
leave
cmpsb
and
inc
lods
mov
test
jmp
cmc
mov
pop
add
stc
mov
cwtl
rcll
inc
ficomps
jae
pop
stc
dec
mov
mov
stos
sbb
mov
inc
imul
pusha
hlt
cwtl
loope
pop
mov
cmp
test
xor
orb
jno
fwait
and
imul
and
movsb
test
out
dec
sahf
out
sbb
gs
daa
outsb
dec
shr
mov
mov
pop
jge
xlat
ds
incb
out
push
fbld
lock
mov
mov
inc
push
xor
cld
jae
adc
or
in
mov
arpl
dec
movq
pop
movsl
dec
pop
ja
cmp
int
arpl
pop
or
lock
gs
push
pop
xchg
clc
sbb
inc
mov
lahf
inc
cmp
mov
add
xor
pop
xchg
into
xor
dec
in
repnz
lods
sub
xchg
dec
mov
push
adc
mov
xchg
add
mov
add
bound
jb
push
and
or
insb
out
xor
or
ja
add
scas
jo
out
fldcw
addr16
xor
arpl
push
push
mov
lret
fdivrp
pop
sbb
sbb
imul
and
push
dec
les
mov
mov
push
repz
mov
mov
lods
call
popa
pop
mov
das
pop
sbb
out
xchg
aaa
fiaddl
or
mov
cld
pop
inc
jge
stc
pushf
and
adc
mov
cmp
aas
xor
or
sti
fsubs
cltd
adc
jo
flds
popa
sahf
sti
notl
test
xchg
push
and
jo
inc
mov
lea
xor
test
xlat
dec
mov
jecxz
cmp
push
aaa
cwtl
cmp
out
outsb
xchg
mov
lcall
xchg
lds
dec
dec
stos
jmp
dec
jmp
inc
nop
jno
mov
or
sbb
popa
xor
imul
clc
movsb
shlb
dec
mov
push
lds
aad
add
pop
xchg
cmp
mov
cmp
jb
shlb
loope
mov
adc
insb
loopne
mov
addr16
call
jle
mov
js
mov
jb
inc
or
sbb
push
loop
notl
sub
fwait
nop
aaa
outsb
mov
arpl
xor
jecxz
fwait
xor
rolb
fcmovu
scas
je
aaa
out
sbb
nop
out
push
in
cmp
xor
sbb
inc
xor
mov
sbb
jno
lret
push
ds
add
push
int3
gs
repnz
or
bound
add
std
cmp
aam
das
sbb
jle
xchg
mov
aaa
sub
xor
xor
mov
jb
or
stc
loopne
dec
push
mov
lock
push
mov
daa
xchg
push
dec
xchg
push
fstl
xchg
lret
mov
add
fadds
mov
add
rorb
jle
out
inc
jo
pop
dec
fisubl
out
xchg
dec
inc
pop
mov
fucomi
aaa
in
mov
frstor
pop
or
inc
out
pop
jle
dec
into
cmp
clc
sbb
sbb
push
ficoms
xor
pop
mov
add
fcomps
mov
icebp
jne
and
das
fldl
and
mull
add
pop
cli
aas
nop
jo
pop
mov
out
mov
arpl
adc
or
in
mov
mov
fsts
sub
sbb
mov
xor
pop
jno
lods
inc
mov
aas
ficoms
div
sub
xchg
fs
xor
add
roll
cmp
jae
gs
xor
loop
ja
aad
pop
outsl
and
paddw
dec
jb
stos
enter
lock
les
lock
cmpsl
mov
daa
std
lea
popl
cld
adc
imul
cmp
popa
and
mov
push
cli
push
xor
mov
mov
ret
outsl
and
push
mov
push
mov
sahf
and
jmp
adc
mov
nop
pop
adc
pop
cmp
jge
mov
cld
sub
pop
dec
in
jmp
nop
cmpsl
ret
cmc
insb
out
pop
test
xchg
pop
mov
sbb
mov
addr16
sar
pop
pushf
sbbb
aad
push
lds
push
push
das
cs
xchg
sti
daa
xchg
sub
sub
daa
push
cmp
outsb
mov
xchg
adc
out
mov
outsb
addr16
ja
and
nopl
mov
xchg
pop
sub
ret
lea
mov
jecxz
insb
cmp
out
outsb
scas
icebp
push
dec
gs
xchg
shrb
cmpsb
lea
xchg
sub
mov
xor
xor
adc
mov
mov
push
pop
push
push
int
cmpsb
adc
stos
cmp
ret
mov
int
imul
ret
adc
loop
dec
shlb
ss
in
jmp
int
sub
sub
inc
xor
jae
gs
adc
sub
mov
inc
sbb
cmpsl
mov
int
push
enter
add
add
pop
xor
dec
ret
icebp
xor
mov
mov
mov
mov
imul
sub
xor
fs
or
pusha
cmp
mov
fs
mov
mov
push
fdivrl
xchg
sbb
mov
jle
xchg
mov
dec
pop
adc
push
or
mov
add
jb
push
stos
jmp
mov
inc
push
cld
jecxz
mov
movsl
aam
mov
mov
daa
lret
xlat
out
jecxz
test
jne
movsl
cmp
lret
jmp
mov
or
popa
out
push
xor
dec
inc
scas
or
movsb
scas
in
aas
mov
xor
push
cmpsl
adc
mov
cmc
jg
in
scas
push
and
das
and
shrl
ja
clc
jb
dec
or
shrl
imul
adc
inc
gs
mov
or
mov
popf
mov
jl
lret
jle
movsl
stc
fldcw
roll
push
cld
sarl
loop
sbb
mov
lahf
push
leave
ficomps
test
sub
xor
jo
sbb
test
xor
add
lcall
mov
xor
bound
sar
sbb
xchg
mov
jp
sub
jne,pt
lret
mov
int
je
mov
sbbl
int3
or
out
and
sub
int3
in
lods
mov
xchg
pop
xor
mov
push
movsl
outsl
les
ss
insb
add
xor
xor
add
pop
aam
sub
dec
jns
ret
ret
out
in
and
pop
mov
pop
xchg
sub
sbb
ja
cmp
aam
imul
xor
jo
mov
xchg
cltd
pusha
mov
xor
xor
mov
jbe
popa
mov
and
sub
aaa
mov
and
insb
xchg
inc
mov
inc
xorl
and
insl
mov
pop
imul
fwait
and
mov
inc
outsb
aaa
xor
xchg
mov
xor
cld
incl
mov
and
xchg
xchg
roll
jae
adc
stos
xor
adc
sbb
jae
push
icebp
xor
cltd
jno
push
repz
xchg
cltd
xor
push
popf
xchg
sbb
sbb
add
mov
cld
cmpb
push
xor
sub
xor
loopne,pt
mov
mov
xor
add
int3
lret
js
dec
mov
or
and
push
adc
sbb
ja
ja
dec
into
pusha
insb
or
jns
sti
rcr
popa
outsl
cmp
ss
sbbl
pushl
cmpsb
test
xor
jno
repnz
pop
cmpsl
mov
mov
loop
jl
pop
add
pop
mov
jge
cs
cmc
fistpll
scas
adc
loope
pop
jmp
fdivl
jo
sub
rorl
in
clc
insb
pop
pop
clc
jae
ljmp
mov
xchg
add
popf
loope
bound
add
syscall
push
mov
jae
hlt
mov
fistl
or
mov
mov
aad
dec
pusha
xlat
sub
jo
lcall
cltd
enter
mov
leave
addl
clc
movsb
arpl
push
push
scas
shr
nop
mov
popf
mov
mov
sti
sub
loop
dec
clc
or
cmp
sarb
rorl
push
mov
outsl
jecxz
hlt
daa
das
pop
and
ret
les
and
cli
jl
ret
mov
pop
imul
pushf
popa
fxch
roll
push
inc
leave
push
ds
cmp
jb
dec
mov
fsts
jnp
lahf
xor
ds
popf
mov
ja
fwait
mov
lods
and
xlat
loope
into
or
cmp
sub
cmp
sub
inc
jg
push
mov
out
adc
sbb
leave
pop
insl
pop
add
dec
dec
scas
pop
jl
fwait
push
fwait
cmpsb
daa
out
xor
sbb
dec
cld
and
mov
jne
rorb
testl
ja
fadds
outsl
loope
push
mov
aam
pop
xchg
out
pusha
jge
sub
lods
mov
sub
cmp
repz
xchg
jecxz
or
pushf
mov
into
jnp
xchg
jp
sti
xchg
inc
xor
cmpsl
xchg
push
or
mov
subl
xor
adc
sub
adc
aaa
std
test
jl
or
push
push
or
or
test
xor
mov
nop
push
pop
mov
adc
clc
sahf
xchg
fldl
xor
pop
push
or
cld
out
lcall
sbb
rolb
mov
dec
scas
cmc
sbb
icebp
test
clc
xor
out
arpl
testl
mov
or
bnd
cmpsb
cmpsb
ss
or
fisttpl
xor
mov
pop
pop
add
jne
popf
mov
out
in
dec
and
testl
fnstcw
inc
fistpll
pop
test
inc
and
jge
add
xchg
and
and
jb
cwtl
dec
add
dec
pop
dec
inc
aas
or
shl
xor
aas
outsl
xor
loopne
mov
inc
data16
dec
mov
ss
sub
int
mov
pop
sub
cpuid
xor
adc
add
or
pushf
xchg
adc
pusha
test
pop
mov
sysexit
test
mov
inc
pop
adc
mov
xlat
add
cs
mov
or
cvttps2pi
std
mov
pop
push
in
jno
jo
imul
xchg
cld
insl
leave
fbld
ja
pop
cld
insl
cltd
icebp
inc
jo
loopne
jo
daa
leave
ret
lfs
daa
cmpsl
push
jnp
mov
cwtl
xchg
sub
and
mov
xor
jns
fwait
xchg
sahf
jne
add
cli
push
mov
add
popf
mov
aaa
mov
arpl
outsb
rorb
cmp
dec
loope
cmp
clc
cmp
jmp
stc
cmp
push
popa
test
xchg
insl
pop
data16
mov
arpl
out
mov
xor
add
popl
add
sub
hlt
idiv
pop
mulb
push
adc
test
lock
dec
iret
fmull
aas
jbe
add
fs
pop
dec
sub
pop
inc
push
std
movsb
jns
lea
jle
mov
popa
sub
push
in
popa
aad
mov
hlt
scas
aad
push
dec
adc
imul
add
add
xor
stos
fidivs
mov
ret
pop
xchg
pop
lock
aaa
push
clc
out
ja
sbb
out
les
fs
pop
mov
and
gs
xchg
mov
push
mov
adc
mov
dec
push
inc
mov
arpl
pop
rolb
sub
mov
lods
mov
fistl
pushf
xor
es
arpl
pusha
xchg
je
or
mov
jecxz
mov
xchg
mov
fbstp
jp
mov
leave
je
gs
jp
in
sbb
test
cmpsb
fcmovb
hlt
mov
aad
mov
push
jle
mov
les
adc
movsl
dec
mov
jle
call
cmpsl
std
shrb
fsubrl
mov
cmp
fstl
cmp
daa
cmp
xor
imul
in
das
jne
or
push
cmpl
je
out
dec
and
leave
xchg
pop
pushf
xchg
sbb
dec
popf
shrb
pushl
cmpsl
mov
jbe
movsl
cmp
fcmovbe
ljmp
into
sbb
xor
adc
push
imul
mov
add
xor
fwait
scas
jno
pop
inc
xchg
loopne
push
movsl
adc
and
sub
adc
mov
aad
mov
in
test
mov
outsb
in
and
loop
mov
cwtl
out
mov
mov
sub
orb
stos
ja
mov
add
jmp
xor
outsl
inc
jmp
shll
pop
rolb
clc
xor
pop
mov
fistps
sbb
xor
ja
sbb
lock
loopne
add
mov
jmp
push
sub
mov
jo
mov
int
pop
aas
mov
fildl
xor
xlat
xchg
cli
repz
into
pushl
fcmovb
fsubr
nop
cmp
pop
mov
xor
testl
cmpsl
aad
loopne
pop
popa
popl
int3
shll
loop
inc
mov
test
mov
push
in
mov
jne
hlt
lock
add
fnstenv
cs
rcrl
pushf
mov
cmp
test
sbb
aas
inc
inc
push
out
loopne
out
lahf
xchg
sub
pushf
hlt
lret
cmp
leave
dec
adc
add
popa
inc
mov
pop
leave
shrl
dec
sub
inc
xchg
test
aaa
xor
pop
push
outsl
scas
mov
shrl
jmp
scas
ja
dec
sbb
imul
and
js
pop
repnz
aad
jcxz
rcll
js
or
scas
das
pop
or
mov
cli
sbb
add
mov
inc
pop
push
and
cltd
sbb
pop
test
pop
cmp
out
rclb
jmp
xlat
jne
adc
mov
mulb
ja
out
cmpsb
fcmovnbe
movsl
mov
pushf
lea
mov
xor
cli
jns
ror
pop
lods
add
addb
pop
mov
je
jnp
dec
sbb
into
adc
shlb
sbb
jns
sbb
pop
pop
push
out
and
cmp
mov
mov
test
or
or
out
mov
pop
pop
pop
mov
subl
jno
jno
sbb
rcrl
and
ret
and
ljmp
aas
add
insb
or
push
daa
pop
adc
jecxz,pt
rcr
rcrb
or
cs
jp
arpl
jmp
movsl
test
int3
mov
xlat
test
jge
mov
mov
aaa
mov
daa
imull
xor
sti
es
pop
cmpb
fwait
mov
sti
dec
sub
mov
mov
inc
sbb
mov
andl
jae
cmp
fildll
andw
insl
test
and
cwtl
cli
out
push
sarl
cmp
arpl
movsl
inc
add
imul
adc
push
aam
es
xchg
add
sbb
jp
sbb
pop
cwtl
sbb
stos
or
out
das
filds
mov
lea
ja
je
adc
lds
popa
stc
outsl
fs
mov
mov
mov
and
mov
lret
movsl
sub
sub
pop
and
sub
fdivrl
pushf
cmp
test
test
mov
arpl
in
or
sarb
test
ficoml
loope
inc
sbb
mov
idivl
popa
test
jns
fcmovnb
popa
pop
xchg
outsb
cmpsl
in
lret
xor
mov
cmpsl
inc
fcoms
cmp
jo
fwait
clc
or
xchg
pop
mov
insl
adc
jmp
sti
imul
rclb
xchg
test
xor
stc
xchg
aaa
mov
ror
cmp
cmovle
dec
mov
jmp
lcall
ja
dec
fsts
lea
add
mov
aad
mov
sbb
dec
jnp
das
ret
fdivrs
xchg
mov
xchg
push
popa
add
lret
adc
movsl
inc
mov
mov
sbb
push
adc
pop
in
inc
stos
lahf
and
and
pop
insl
lahf
adc
sar
xor
cmp
into
stc
inc
into
cs
sbb
outsb
stc
loop
insb
shlb
cmpsb
jnp
flds
pop
mov
sbbl
inc
int
lahf
sbb
lret
dec
sub
mov
repz
xor
mov
jno
arpl
and
daa
push
cltd
test
sbb
cld
jle
and
jp
or
mov
das
xchg
pushl
insl
mov
mov
xchg
adc
xchg
std
push
cmp
mov
stc
and
mov
inc
rolb
pop
xlat
cmpsb
or
and
adc
add
jmp
shl
imul
fidivrs
dec
fadds
pop
pop
mov
push
pop
pop
mov
pop
pusha
enter
movsl
xor
pop
mov
in
jl
fs
jle
jns
adc
mov
shll
lock
pop
jle
push
iret
adc
pop
xchg
cmpsb
jecxz
sub
test
push
scas
inc
fs
jns
sub
inc
stos
push
jge
push
mov
in
adc
push
push
cld
cld
scas
or
cmp
push
popa
sbb
adc
mov
into
sbb
pop
push
rolb
xlat
es
pop
fidivs
cli
daa
cltd
mov
insl
or
inc
mov
or
test
pop
shl
sub
sbb
sub
pop
iret
xor
cli
test
into
shlb
popl
outsb
mov
push
add
cmc
xchg
aas
cmpsl
loop
outsb
int3
mov
dec
dec
sub
call
xor
cli
movsb
test
pop
adc
hlt
xor
lods
pop
and
dec
inc
insl
xor
lret
lahf
adc
popa
mov
and
loopne
dec
sub
inc
fwait
push
jg
test
lods
sbb
das
add
outsl
add
jo
sbb
jecxz
fdivl
iret
and
mov
mov
push
adc
pop
or
aaa
out
cmp
bound
mov
push
sub
adc
jbe
gs
fs
test
arpl
movsl
pop
mov
mov
mov
pop
outsl
inc
dec
mov
call
push
xchg
cli
dec
mov
mov
movsl
cs
ror
aad
xor
popf
subl
cmc
and
cs
pop
push
jmp
lock
lahf
arpl
jb
es
leave
push
xor
ret
rclb
push
sub
pop
fldcw
loope
int
or
cmp
cli
in
sbb
imul
dec
movsl
and
enter
jmp
sbb
dec
sbb
movsl
ja
iret
stc
in
pop
adc
xchg
nop
repnz
push
lcall
in
pop
mov
lahf
pmuludq
mov
mov
out
stos
mov
aas
test
mov
push
mov
pop
shl
dec
lret
cmpsb
adc
out
or
xchg
dec
add
pusha
popf
inc
fwait
inc
dec
stos
icebp
insb
pushf
shrb
push
jmp
inc
iret
xorb
sbbb
cli
sub
cli
dec
bound
std
push
pop
les
jmp
xor
pop
test
nop
or
mov
into
jae
mov
dec
aas
in
ljmp
das
test
in
cltd
imulb
cmp
push
mov
dec
cmc
data16
mov
or
mov
xor
cs
cmc
cwtl
shlb
and
stos
iret
cmp
sbb
sub
push
pop
lcall
repz
movsl
pop
aaa
push
xchg
call
mov
fildll
xchg
adc
mov
fwait
mov
cmp
lods
cmp
movsb
mov
push
or
mov
out
fs
mov
add
dec
cmp
cmp
in
mov
jle
fsubrl
popf
aam
test
jle
dec
sbb
adc
xor
rclb
mov
add
cltd
pop
scas
rcrl
mov
imul
test
imul
cmp
mov
ja
mov
das
xor
jno
dec
or
fcmovnb
out
test
ret
pop
mov
jmp
mov
inc
jae
xor
dec
cmp
cmp
add
leave
push
cmpsb
mov
ja
xor
add
dec
mov
cs
gs
mov
push
fxam
lret
repnz
iret
mov
push
cld
push
xchg
push
insl
rcrb
mov
sahf
aaa
jae
lret
enter
aad
inc
stos
and
sub
adc
adc
xchg
cmp
out
pop
mov
dec
jns
push
pop
daa
adc
subb
add
insb
mov
sub
ret
xor
push
bound
push
ss
and
pop
test
push
clc
popf
jne
lret
and
and
xchg
inc
adc
out
sub
or
test
xor
fstpt
add
sti
into
mov
sub
push
sub
imul
sahf
test
dec
addl
cmp
movsb
add
je
inc
cmp
add
xor
xor
inc
mov
loop
inc
iret
dec
ds
xchg
inc
xor
movsl
fsubl
dec
push
imul
pop
push
dec
jl
push
and
pop
or
fsubrs
es
aaa
std
pop
frstor
xchg
dec
mov
cmp
add
data16
movsl
mov
xchg
in
shl
jae
inc
add
pop
jnp
out
test
sbb
sahf
aam
mov
jo
int3
test
es
shl
mov
and
int
leave
or
xor
sub
cmp
xor
popa
sti
mov
pop
adc
xor
mov
mov
mov
cmp
lret
lret
fmuls
mov
push
xor
sbb
dec
imul
mov
ja
cmp
push
push
movsl
sub
rcl
push
and
inc
inc
movsl
mov
xchg
jae
std
pop
rcr
dec
add
aaa
pop
aad
dec
adcl
mov
out
test
xor
aaa
jle
sti
fiaddl
inc
push
shl
imul
pop
hlt
push
xchg
push
in
nop
push
enter
push
mov
std
nop
pop
mov
push
push
test
lea
sbb
out
jle
xchg
xchg
push
shll
out
pop
xchg
pop
mov
ja
jmp
cld
add
in
pop
and
or
out
test
mov
insb
pop
or
daa
mov
sbb
jb
pop
out
xor
scas
jle
cs
fmul
push
imul
in
and
dec
lcall
fs
jno
adc
neg
data16
inc
inc
shll
adc
pop
push
outsw
inc
mov
jae
push
inc
rcll
and
mov
cmp
hlt
imul
add
push
add
inc
add
bound
jge
dec
insl
popf
jb
mov
frstor
sub
xor
enter
fs
dec
inc
mov
push
jmp
fistps
sbb
pop
mov
js
cmp
xorl
test
leave
ja
into
addr16
inc
out
les
mov
pop
fmulp
inc
movsl
inc
test
or
jecxz
arpl
sahf
int3
jg
and
cmp
and
adc
das
lods
aas
xchg
jle
outsl
inc
sahf
loop
xchg
out
add
repnz
dec
movl
test
call
call
xchg
aam
loope
cld
movsl
sub
pop
negb
xor
and
or
icebp
mov
scas
test
out
or
dec
jge
hlt
iret
mov
pop
lods
sarb
outsl
xorb
add
xchg
test
dec
insl
add
fs
aas
pop
add
imull
and
sub
pop
jmp
jg
out
shll
jb
inc
clc
je
and
jl
add
fsubs
addr16
aaa
push
mov
pop
xor
push
and
mov
movsl
iret
jl
test
jp
add
inc
mov
xor
mov
jmp
arpl
out
adc
push
loopne
jge
sbb
adc
fsubl
fwait
adc
cli
push
loop
push
push
push
pusha
mov
sbb
jo
lods
lods
mov
pushf
fnstenv
cs
je
fsub
inc
fidivs
sahf
lock
ds
enter
jmp
cmpsl
add
mov
dec
insl
mov
mov
mov
xlat
push
push
or
aam
and
pop
js
mov
nop
out
pop
js
mov
loopne
pop
xor
xor
mov
fwait
cwtl
jge
in
xor
sbb
adc
sub
data16
roll
cmp
mov
lret
or
cwtl
clc
xor
gs
ds
push
aad
inc
cmc
daa
cmpsl
das
mov
adc
push
loope
inc
pop
or
pop
sahf
mov
das
lret
sarl
movsl
loopne
inc
popa
push
xor
sti
jmp
mov
fwait
mov
inc
sbb
add
sbb
pop
mov
rcrb
mov
mov
repnz
cmpsl
sbb
sub
mov
fistps
cmp
sub
xor
movsb
daa
into
das
rorb
and
mov
int
js
xchg
popf
jg
popf
mov
aad
xor
xor
add
cltd
mov
imul
clc
jmp
push
filds
sbb
bound
fadds
xlat
pop
pop
and
lds
orb
pop
hlt
fisttpll
sub
pop
sub
std
inc
add
jmp
incb
scas
testb
or
push
xchg
or
sti
sbb
fstps
mov
inc
xor
mov
popl
xchg
movsl
out
push
test
daa
or
sbb
movsb
mov
ss
clc
xor
fwait
jo
sub
mov
xchg
es
push
and
xchg
sti
fldenv
insb
add
cwtl
mov
mov
js
fldt
test
add
sbb
arpl
testl
xchg
fistpll
imull
fisubs
push
aas
adc
cmp
sbb
cmpsb
xchg
leave
xor
lods
out
in
fnstcw
sub
push
mov
push
add
sahf
movsl
movsl
or
xor
out
out
xchg
pop
and
xchg
sbbb
jb
push
jle
test
mov
enter
or
adc
in
jmp
es
in
aaa
in
addr16
jecxz
imul
hlt
mov
dec
roll
les
enter
and
mov
pop
out
inc
cmpsb
sbb
int3
add
mov
testl
insl
xor
test
movsl
scas
mov
lods
jae
mov
in
imul
imul
and
cld
add
push
jmp
rol
je
jns
dec
mov
cmpl
aad
dec
push
sub
sbb
test
lods
mov
jle
jae
mov
pop
je
mov
das
dec
leave
jbe
mov
jo
mov
ret
jne
in
nop
je
popa
xchg
fs
test
or
addr16
xchg
or
pop
nop
shll
pop
or
inc
std
loope
flds
cmpsl
jnp
xor
fsubrl
out
pop
insl
cli
or
pusha
xchg
or
stos
push
aaa
push
xchg
xor
jae
loopne
mov
mov
pushf
imul
mov
pop
sbb
pop
adc
sub
pushf
mov
add
frstor
test
lcall
dec
or
int
test
mov
xlat
jmp
ficoms
in
mov
mov
shlb
pushf
cmpsb
push
mov
popf
or
sbb
scas
jo
push
or
es
cmp
inc
inc
ss
test
stos
xor
popf
lods
nop
mov
dec
cld
sti
mov
mov
je
in
pop
adc
icebp
pop
decl
clc
out
sbb
into
jmp
pop
xchg
push
loope
fsub
adc
inc
cwtl
scas
dec
ficoms
rcll
sub
out
ror
cmp
ss
icebp
cld
int3
outsl
xchg
jne
mov
pop
jp
jns
sub
push
cmpsb
dec
sbb
ss
fnsave
dec
imul
fwait
push
push
mov
lods
pop
xor
or
dec
int
aad
jecxz
and
xor
movsb
sbb
adc
cmpsb
or
repnz
and
sbb
dec
xlat
xchg
adc
fistl
pop
int3
mov
or
rcrl
cmpsl
fdivrs
lods
pop
and
pop
add
xor
mov
ljmp
les
add
or
pop
ret
hlt
mov
or
jo
scas
scas
daa
jo
pop
out
mov
xor
push
mov
das
push
addb
test
adc
imul
mov
xor
sub
cli
std
mov
getsec
std
dec
mov
shrb
pop
add
dec
aam
mov
ret
ljmp
add
cmp
fld
sbb
or
nop
outsb
jnp
xlat
cmpsl
cmc
in
or
aas
push
dec
or
dec
in
ljmp
ja
repnz
sar
xchg
pop
or
jb
and
cld
pop
add
fildll
push
scas
jno
andps
push
sti
inc
pop
mov
addr16
sbb
in
sbb
shrl
cli
adc
jp
add
sbb
sub
cmp
ljmp
and
negb
out
sub
add
dec
pop
dec
mov
arpl
mov
ficoml
jl
popa
bnd
xorb
sbb
fdivrl
mov
mov
jno
cmp
leave
xor
xchg
dec
enter
and
jns
loop
lods
mov
mov
mov
xlat
dec
test
sbb
fstp
in
push
insl
mov
jns
mov
xchg
rcll
push
nop
rolb
aaa
add
jns
cmp
pop
sub
dec
outsl
fldenv
jne
inc
popf
push
in
popf
nop
mov
xor
inc
sbb
mov
lret
movsl
andl
push
les
cmp
ss
repz
notb
lret
sub
sarb
mov
jl
loopne
adc
popa
shll
rcll
loopne
aaa
jb
dec
sub
cmp
inc
cwtl
add
lcall
mov
mov
scas
push
adc
jo
cmpsl
jbe
repnz
lret
dec
lret
shr
adc
and
jg
lods
arpl
or
bound
xchg
adc
es
push
mov
sti
adc
int3
aaa
iret
push
sub
xchg
jbe
xchg
push
pop
loopne
cmp
add
out
pop
push
push
stc
fdivl
or
jbe
mov
jbe
jae
pushf
fs
mov
pop
gs
add
loopne
aad
pushf
int3
mov
push
mov
dec
mov
mov
lods
cli
pusha
jl
out
mov
xchg
cmp
mov
xor
cli
mull
xchg
sbb
inc
inc
je
push
xor
lret
or
mov
ss
bound
stc
jne
mov
enter
insl
and
sti
push
stos
call
sub
and
je
mov
or
out
and
dec
testl
jmpw
dec
xchg
insb
add
xchg
jns
inc
xor
cld
pusha
fwait
push
sbb
aaa
adc
dec
cmpsb
out
jae
loop
inc
or
adc
add
data16
sti
jae
sbbl
pop
sub
arpl
std
movb
out
jb
loop
shlb
jg
xchg
cmpsb
mov
in
xchg
xor
bound
shrl
xor
sub
cmp
mov
daa
ss
int
bnd
hlt
cld
stc
scas
cmp
dec
or
mov
movsb
rclb
pop
push
or
add
jnp
xor
rcl
xlat
pop
pop
lea
dec
enter
shll
int3
notl
sti
fistl
inc
test
adc
lds
sub
sub
pop
popa
data16
sub
sbb
mov
mov
lods
or
cmpsl
clc
out
mov
pop
mov
cmp
arpl
push
cmp
fs
cmp
addr16
mov
mov
sti
fwait
and
pop
aaa
jge
dec
test
jmp
subl
pushf
fs
fidivl
fs
inc
and
pop
jecxz
sarb
inc
fiaddl
push
jl
sti
cs
loope
jae
add
xchg
xor
and
mov
push
mov
mov
sbb
push
dec
adc
xor
out
dec
mov
insb
cmp
mov
mov
add
mov
out
mov
mov
movsb
repnz
in
pusha
dec
add
vfrczsd
ret
mov
xchg
adc
cmp
dec
pop
push
sub
mov
and
and
sarb
lret
jg
lret
test
pop
and
dec
subb
repz
and
sarl
dec
cmp
sub
jge
je
rolb
mov
inc
ficoml
das
xchg
mov
out
addr16
mov
jle
cmpsl
das
in
cmp
sbb
mov
mov
jae
aas
xor
push
shr
js
adc
jno
incl
mov
out
mov
xchg
jle
data16
pushf
push
cs
cmpsb
pop
cwtl
push
jle
lahf
mov
push
subb
sbb
mov
out
xor
sti
hlt
fdivrl
hlt
and
adc
xchg
fistl
in
pop
inc
insb
push
push
pop
adc
mov
loopne
outsb
push
popf
mov
fldcw
jecxz
sahf
jge
leave
xchg
decb
xlat
mov
es
dec
ljmp
nop
sarb
rcrb
sbb
insb
push
xor
inc
and
popa
cld
mov
fdivr
xor
inc
pop
lret
jo
lahf
mov
sar
dec
dec
push
cmp
ja
mulb
scas
sbb
jbe
jns
pop
push
mov
pop
insb
sahf
rcll
sbb
cli
pop
paddb
addr16
arpl
xchg
leave
pop
add
mov
cwtl
cmpl
pop
xchg
bound
shll
lret
and
call
sarb
xor
loope
fs
repnz
lea
fs
into
fcompl
cmpsb
popf
dec
sbb
fidivs
jae
in
iret
pop
cmp
fwait
xchg
xor
arpl
mov
sub
sbbl
inc
jae
test
sahf
ljmp
gs
std
mov
cmpsb
sbb
lods
jl
test
test
push
mov
test
or
out
mov
xchg
enter
xor
pushf
stos
sbb
jg
pop
sub
mov
mov
lcall
mov
push
lret
jae
mov
fwait
sbb
inc
cwtl
fistpll
add
pop
shrl
mov
push
addb
movsw
dec
insb
pusha
xlat
cmovnp
sbb
mov
das
dec
sahf
in
xchg
fcmovnu
jnp
jle
lock
ret
out
adc
mov
jbe
inc
push
cwtl
scas
jp
push
fildl
fstl
sub
sti
clc
mov
xor
cmpsb
mov
jge
or
inc
push
or
addr16
addr16
pop
xchg
hlt
nop
inc
sbb
rolb
bnd
jo
sbb
cld
add
mov
and
xchg
test
stos
pushf
jae
imul
out
jne
jge
dec
jge
and
mov
mov
add
dec
xlat
dec
lds
xor
mov
push
bound
hlt
int3
mov
mov
cwtl
xor
sub
sub
pop
and
push
aad
and
sahf
shll
dec
dec
xor
jle
fcmovnb
enter
or
lods
push
shrd
cmpsl
cmp
inc
cmp
mov
jno
imul
mov
jae
and
adc
arpl
mov
mov
aad
rolb
dec
loopne
imul
mov
stos
cli
pop
cmc
and
nop
sub
mov
mov
andl
adc
add
pushl
xor
stc
sbb
xor
mov
cmp
xlat
in
fimuls
sub
jae
imul
dec
and
dec
scas
xlat
fimull
mov
push
aaa
les
popa
pop
mov
and
xor
repz
jecxz
mov
ds
int
dec
scas
cmpsb
push
mov
xorl
inc
inc
sbb
js
aad
jns
fs
lods
or
pop
pop
cltd
fs
sub
popf
push
adc
sbb
jb
add
out
pop
dec
in
mov
mov
gs
clc
lret
xor
mov
sub
orb
cmp
mov
mov
shlb
lds
rorl
jno
pop
je
fwait
mov
aaa
movsl
dec
adc
test
push
dec
mov
daa
mov
dec
outsl
pushf
jne
mov
jl
int3
clc
xor
mov
adc
mov
sbb
loop
jl
push
fists
dec
scas
fnsave
push
and
mov
inc
mov
mov
pop
nop
outsl
cmpsb
ljmp
imul
mov
mov
stos
sbb
fs
mov
fisttpll
bound
hlt
out
adc
pop
sbb
mov
add
inc
xlat
daa
sbb
sub
fwait
mov
pop
jno
add
push
jg
outsl
dec
xor
mov
subl
ja
clc
xchg
testl
mov
icebp
xchg
int3
cmp
or
jl
mov
out
mov
andl
sub
sub
xchg
jbe
xchg
ds
mov
repnz
lahf
add
adc
stc
mov
push
mov
adc
jno
in
cmp
mov
pop
stc
or
xor
shll
xchg
incb
sbb
hlt
jae
xor
stos
sbb
push
cmc
mov
sub
fstl
mov
outsb
xchg
popf
popa
arpl
or
add
out
outsl
fs
movsl
push
add
call
icebp
xor
incl
bound
lds
mov
ret
push
pop
sbb
negb
push
jo
pop
es
outsb
arpl
sbb
mov
adc
jne
and
and
inc
mov
and
cld
mov
mov
ds
mov
or
xor
adc
and
add
adc
mov
mov
mov
in
mov
xchg
xlat
or
jecxz
sbb
int3
mov
mov
jns
aas
rcl
lods
je
add
shlb
jae
mov
out
inc
cmp
xor
dec
push
mov
xor
adc
xchg
mov
gs
dec
xchg
pop
div
lock
mov
shrl
roll
push
int3
sbb
mov
fwait
stos
jns
out
lods
test
and
mov
inc
fsubrl
mov
inc
es
sbb
test
loope
popa
js
mov
ret
pop
mov
cwtl
std
fadds
scas
shll
pop
stc
je
pop
sub
adc
bound
cmc
xchg
and
add
add
pop
rorb
pop
inc
imul
fmul
scas
js
push
jb
lds
lcall
inc
fs
xchg
mov
call
fcmovnu
xchg
jnp
mov
lock
adc
sti
mov
xchg
pop
xorl
call
jnp
jns
push
out
xor
push
shl
push
mov
xorl
mov
mov
popf
in
jp
dec
xchg
gs
gs
dec
push
adc
or
cmp
cmpsb
cmp
mov
push
or
pop
jno
in
sbb
adc
int3
or
btr
and
loope
inc
sahf
xchg
mov
xchg
adc
lods
mov
mov
in
xchg
int3
dec
jnp
jb
fwait
mov
mov
repz
dec
lret
xchg
adc
dec
and
and
mov
or
int
fwait
sbb
jne
add
cmpsb
stos
cmp
fwait
lret
out
lret
es
loopne
int
push
adc
lahf
movl
sub
ljmp
int3
adc
out
adc
pop
jns
mov
dec
or
sbb
movsb
nop
pop
xor
fisubs
fadds
pop
jle
ljmp
xor
out
js
sti
jbe
aas
cmpsb
add
or
fwait
test
cmc
cmp
inc
rcl
dec
int
stos
push
and
inc
xchg
xor
mov
or
mov
push
cmp
adc
lea
jg
xor
iret
push
cmp
mov
outsb
jo
cmpsl
fidivl
loope
jno
xlat
xor
fbld
jp
not
mov
ja
inc
fnstcw
jb
sub
lret
popa
xor
into
cmp
loopne
xor
pop
stc
jns
adc
xchg
imul
or
stc
mov
mov
push
testl
sti
mov
xchg
add
sbb
ret
loop
gs
cmp
mov
ds
xor
xchg
lret
xchg
jge
inc
inc
mov
ror
bound
xor
jb
dec
inc
pop
push
daa
mov
js
lea
mov
xchg
jmp
mov
cmp
out
push
aad
pop
pop
jmp
cmp
aad
inc
sub
push
mov
test
pusha
cmp
mov
push
pushf
inc
adc
add
add
xchg
arpl
xor
jecxz
movsl
and
dec
cmp
jno
push
mov
pop
popa
xor
dec
add
cmc
sbb
pusha
xor
dec
add
and
xchg
cmp
jle
icebp
mov
fisttpll
int3
cmpsb
dec
sbb
fstl
jle
stos
test
push
aad
xchg
jnp
sub
cli
dec
scas
fists
jno
add
out
xchg
enter
je
fst
aas
mov
pop
mov
outsb
cli
fists
jbe
in
push
xor
mov
cmp
xchg
in
subl
insl
dec
push
imul
pop
adc
sbbb
stc
divb
mov
shl
cmp
mov
subl
cmpsl
mov
pop
pop
mov
mov
cmp
or
xchg
mov
outsl
or
add
add
mov
push
xchg
lods
jnp
pop
jg
pop
mov
push
jo
pop
xchg
outsl
xor
cs
enter
loopne
sub
cmp
testb
sub
fwait
mov
push
xor
pop
daa
xor
cmp
cltd
xor
xor
lahf
pushf
add
lds
aam
mov
push
jo
and
dec
xor
jg
je
xchg
or
mov
sub
inc
bound
xchg
daa
outsl
icebp
scas
sti
adc
pop
mov
dec
cmp
pop
les
cmc
mov
mov
xchg
rcll
and
int3
mov
cmc
mov
or
jnp
push
jbe
ljmp
mov
out
scas
mov
ljmp
push
jno
pop
ds
insl
mov
icebp
and
sbb
in
lahf
insl
push
jmp
movsl
sub
sbb
cmpsb
or
addr16
mov
insb
jmp
fcoml
or
js
daa
lret
sbb
das
dec
xchg
fidivrl
iret
cmp
aad
sbb
fstps
cmpsb
xor
arpl
lret
xor
push
addr16
xlat
mov
imul
aad
aad
pusha
mov
cmpsb
lret
cmp
imul
faddl
clc
jl
stos
fsubrs
and
sbb
xchg
push
mov
sbb
sahf
push
in
cmp
cs
fsubrs
orl
dec
push
bound
outsb
lea
iret
cs
mov
cli
movsb
aas
xchg
ljmp
xchg
adc
rclb
mov
pop
popa
mov
xchg
lds
push
mov
sti
pop
je
sbb
popa
lahf
fbstp
xchg
lret
xchg
add
ss
insb
rcr
lret
outsb
xchg
stc
jns
xlat
test
outsl
stos
iret
subb
jns
jmp
add
imul
dec
add
push
insb
in
cmp
in
aaa
gs
fadd
out
out
mov
add
pop
inc
ret
push
push
fwait
arpl
mov
imul
sbb
push
or
arpl
insl
xor
js
xchg
adc
add
mov
in
push
leave
sbb
xchg
cmc
sti
fs
mov
pop
add
mov
dec
shll
bound
stos
rorl
mov
cwtl
mov
lds
dec
push
mov
mov
xor
mov
mov
rcrl
and
sub
pop
xor
div
mov
addr16
jg
repnz
fdivrs
mov
xchg
movsl
imul
mov
jb
nop
popf
mov
add
je
jmp
jb
clc
jns
lcall
jl
stc
push
icebp
gs
mov
into
push
or
xchg
ret
mov
sbbb
push
pop
sbb
test
mov
jecxz
dec
mov
xor
mov
sub
daa
clc
in
test
cmp
in
iret
out
jns
or
stos
aad
mov
push
cmp
icebp
pusha
mov
jmp
fdiv
xchg
inc
popf
adc
lea
fwait
rcrl
lock
mov
mov
and
je
cs
sbb
mov
sub
orps
dec
dec
lcall
and
xchg
pop
xor
iret
add
inc
and
push
cli
adc
or
push
or
mov
frstor
stos
repnz
mov
and
sahf
sbb
xor
jge,pt
bound
xchg
idivl
gs
dec
shll
add
movsl
mov
orl
mov
jmp
xor
cli
stos
xor
add
daa
adc
nop
loopne
lret
shll
in
arpl
in
lea
loope
mov
xorl
mov
fwait
jl
inc
in
mov
sbb
rcll
sub
fadds
testl
nop
and
mov
popa
pop
xor
lock
push
pusha
adc
dec
shll
stc
ret
shlb
rcr
sub
flds
testl
jns
xchg
insb
jmp
insb
dec
enter
decb
jns
sbb
adc
sub
lock
pop
gs
pop
xor
lcall
mov
testb
cmp
in
dec
push
mov
rcll
add
pushf
movsl
lea
cwtl
dec
shll
stc
inc
xchg
mov
out
jecxz
sti
insb
rorl
jns
mov
inc
push
stc
sub
movsl
repz
cmp
xor
pop
add
in
dec
mov
adc
enter
jbe
xchg
cmpsl
sub
mov
gs
push
inc
xor
sub
dec
shll
cli
out
fnstsw
xor
pop
mov
insb
jmp
popf
aam
jbe
pop
jp
repz
rclb
jns
movsl
adc
mov
test
lret
jns
jmp
xor
in
ja
lods
repz
fnstsw
xor
shlb
xor
aas
jmp
jmp
insb
jns
test
push
stos
cmpsl
xor
fld
pop
pop
int
daa
jl
cmp
dec
in
push
and
popa
aad
icebp
inc
loopne
fadds
adc
cmc
adc
icebp
lock
lods
push
loope
fistpll
je
cmc
cli
cmpsb
cwtl
xchg
sub
mov
cltd
xchg
decb
xchg
xor
sbb
fsubp
xor
dec
enter
dec
lea
pop
sbb
cmp
xor
int
repz
jmp
movsl
gs
push
cmpsl
orl
jae
sub
lahf
fdivrl
je
sub
lea
lods
fistl
or
push
js
lea
push
ds
and
xlat
inc
ja
jne
insb
shll
mov
add
sub
stos
cs
sarl
mov
insb
mov
push
div
adc
xchg
add
in
jo
pop
add
jno
push
out
mov
nop
daa
or
xor
xchg
jle
mov
std
fcmovnu
push
in
pop
xor
es
jno
pop
inc
and
cmp
mov
std
fmul
or
jge
std
jne
dec
pop
push
pop
xor
pop
nop
push
addr16
mov
jecxz
xlat
icebp
in
jo
adc
aam
pusha
xchg
cltd
mov
mov
xchg
clc
dec
clc
stos
lods
dec
mov
inc
jbe
nop
aam
pminub
xchg
hlt
ja
sbbl
adc
push
pop
es
adc
or
add
data16
and
dec
jne
mov
ljmp
loopne
fistpl
jne
dec
xor
jne
mov
ja
jmp
mov
rcll
cmp
xor
repnz
mov
xchg
adc
push
push
cmp
mov
jp
add
or
dec
rol
xchg
mov
test
mov
dec
xor
call
aam
adc
or
mov
xchg
sub
push
sti
sbb
lahf
ljmp
outsl
fiadds
sbb
cld
enter
inc
ja
clc
nop
push
int3
es
test
push
cld
and
ds
jl
and
dec
sbb
xchg
jne
xchg
add
inc
xlat
cmpsl
inc
and
mov
dec
push
pop
push
dec
mov
shr
cmp
pop
insl
inc
xlat
xor
fmull
ret
rcr
subb
std
scas
movsl
push
xor
sbb
or
decl
cmc
nop
xor
ja
test
push
and
dec
lret
repnz
pushf
jnp
dec
insl
mov
mov
push
cld
inc
repnz
sub
repz
and
loop
pop
inc
lock
sub
xor
mov
inc
xchg
sub
pop
push
and
jne
mov
jmp
cmpsb
movsl
or
test
jl
in
xor
mov
pop
sbb
pop
out
addr16
lret
jge
in
hlt
loopne
and
or
fucomp
insb
mov
enter
xchg
fwait
xor
mov
push
int
je
push
xor
jge
cwtl
aam
xchg
mov
insl
addr16
add
jo
add
shll
mulb
dec
fnsave
das
push
aad
pop
mov
test
fimuls
sbb
jne,pn
jg
and
xor
repz
or
callw
mov
push
cmp
or
out
adc
adc
push
movsl
adc
lods
mov
jmp
jg
push
data16
adc
dec
sub
outsb
fnsave
shll
fbstp
adc
cmpsl
push
outsl
xchg
push
mov
dec
xchg
fcomps
leave
outsl
dec
ret
roll
jno
dec
sub
adc
pop
enter
xchg
lods
icebp
gs
mov
in
xor
cmp
jp
add
mov
fcmovnu
mov
push
or
xor
add
in
cmpsb
ja
inc
push
inc
out
jno
stos
add
mov
pop
imul
xor
movups
icebp
mov
movsl
lea
sbb
fs
pop
in
cmpsb
pop
imul
cli
sbb
jle
adc
imul
shl
cmp
fcoms
ja
adc
mov
xchg
lods
data16
shll
adc
test
rcr
mov
lahf
mov
mov
pop
mov
shl
pusha
inc
dec
mov
jmp
outsb
nop
push
xor
and
pop
out
movsb
xorl
movsl
out
movsl
cmpl
data16
mov
push
fsts
mov
mov
stos
xchg
loope
xchg
inc
gs
nop
xor
jae
pop
call
sti
xor
in
pop
aaa
vhaddpd
pop
jno
shrl
push
ret
push
ss
pop
out
sub
sub
call
scas
jo
test
cwtl
into
xchg
enter
hlt
dec
arpl
push
mov
pop
scas
sbb
cmp
test
jge
loope
cli
cmp
mov
add
mov
mov
push
lods
out
and
sti
mov
fwait
shl
aam
mov
dec
inc
mov
addr16
pop
pop
and
and
xchg
sbb
dec
repz
mov
adc
mov
pop
das
sub
cmpsb
adc
lods
mov
jns
inc
push
mov
arpl
and
jg
fists
shrl
fildl
xor
loopne
in
lds
pop
jg
dec
and
or
xor
dec
mov
jae
add
mov
adc
cwtl
pop
lahf
inc
dec
loopne
push
test
jnp
sub
jo
mov
in
std
aas
in
xor
mov
mov
jb,pt
aaa
pop
gs
xor
cs
lock
fstpt
add
stc
insl
pop
lea
pushf
out
rcr
add
xor
sti
jl
add
clc
bound
cmpsb
sbb
and
outsb
jnp
mov
std
movsb
inc
movsl
cmpl
mov
or
mov
ja
jne
xchg
lahf
sarb
mov
jmp
inc
and
loop
inc
pop
icebp
xor
mov
pop
mov
outsl
or
add
out
xchg
movsb
shlb
notb
sub
popf
jns
out
movsl
sub
adc
jns
push
lods
sbb
popf
fstpt
loope
or
xor
mov
dec
lret
rolb
leave
pop
popf
test
test
xchg
dec
stc
mov
cli
mov
in
jmp
dec
dec
inc
popf
adc
push
and
adc
leave
repnz
xchg
xor
cmc
adc
adc
sbb
fcomps
enter
out
mov
and
add
daa
push
inc
adc
pop
cmpsb
insb
and
pushf
aam
or
popa
sbb
les
mov
sub
and
subl
pop
or
mov
pop
mov
adc
scas
and
cmp
cmp
sub
gs
adc
mulb
push
cwtl
mov
adc
mov
cli
pop
jno
ret
ja
es
testl
xor
pop
and
enter
in
mov
ficoml
mov
lgs
xor
mov
mov
in
pusha
and
ss
and
xchg
nop
and
add
dec
ss
pop
cmpsb
outsb
int3
mov
add
call
inc
adc
pmuludq
sub
outsb
push
mov
sbb
mov
fisttpl
push
sbb
insl
popl
adc
mov
insl
cld
or
add
subb
cmpsl
ss
ljmp
lret
sub
mov
inc
stos
arpl
and
jg
xorb
xchg
push
pop
repz
lcall
insl
outsl
adc
sub
leave
mov
pop
mov
sti
jecxz
popa
call
or
pop
pop
lods
add
pusha
pop
in
cmp
add
xchg
sbb
mov
dec
add
push
mov
bound
sbb
cmc
shrl
aas
xchg
ret
test
test
xor
pop
xor
frstor
test
pop
pop
inc
xor
lcall
mov
test
and
add
xor
cmc
sub
mov
pusha
outsb
pop
fldl
xchg
mov
jnp
loopne
dec
cltd
lahf
fmull
and
xchg
xor
popa
adc
pop
xor
pop
gs
lods
out
rclb
xor
cmp
rcrl
mov
mov
add
and
jb
test
loop
jb
mov
call
jg
sbb
adc
sub
fnstenv
outsb
push
mov
icebp
ficoms
dec
sahf
cmp
mov
fstps
cmovne
ret
mov
int
scas
scas
mov
mov
xchg
pop
lods
jbe
fwait
cmpsl
xchg
sbb
jmp
insb
dec
enter
pusha
lea
sahf
mov
sub
dec
add
push
lods
cmp
movsb
jo
mov
mov
lds
push
aad
xor
jecxz
cmp
mov
scas
adc
mov
mov
packssdw
repz
cmp
jecxz
fildll
xor
jno
mov
pop
icebp
lods
add
loopne
sub
insb
jo
push
or
push
xor
adc
repz
jmp
fisttps
mov
cs
cmp
add
ret
jge
push
pop
call
mov
mov
add
xchg
xchg
fs
sub
outsl
sub
in
loope
mov
mov
push
sub
xchg
ss
push
sub
pop
mov
cmpsl
and
add
add
lret
dec
mov
fwait
lret
test
rcr
pop
iret
push
xchg
stos
stc
xor
iret
out
adc
cmp
int
push
test
nop
pop
inc
int
int
or
pop
stos
fdivs
cwtl
sub
fistpll
xor
or
fwait
pop
dec
jmp
push
mov
adc
add
adc
jle
aaa
fs
ja
popf
inc
sub
popa
jae
rorb
clc
fs
sub
pop
mov
add
js
pop
icebp
sub
mov
or
sub
dec
xchg
sub
xor
fdivrs
popf
lea
sub
xchg
sub
clc
fs
push
jg
outsl
or
out
dec
push
xor
dec
int
pop
dec
call
aad
mov
fnstsw
mov
inc
outsl
pop
push
lretw
cltd
repnz
enter
or
ret
popa
sbb
xchg
cmp
mov
cli
push
mov
dec
int
push
dec
call
mov
sbb
cmp
pop
mov
out
shlb
dec
rcll
inc
mov
inc
pop
add
add
ret
test
or
lret
xor
xor
sbb
or
cmpsb
testb
xor
sub
sbb
jp
insb
jmp
push
sbb
mov
fst
adc
or
sbb
jmp
sub
in
sbbb
fsubrs
add
inc
fisttps
mov
js
add
push
lods
xchg
mov
mov
add
mov
std
fwait
outsb
dec
jmp
adc
push
add
aad
jge
ret
mov
mov
inc
dec
mov
fwait
xor
stc
or
insl
pop
loope
imul
xchg
pushf
popf
outsb
imul
cmp
fidivrl
leavew
push
testl
cmpsb
fisttps
push
xchg
pushf
mov
addb
mov
aaa
nop
std
std
xor
cmp
fnstsw
xor
dec
xor
cmp
dec
setge
rcrb
adc
dec
cmp
fsubrs
flds
cwtl
sub
outsl
or
movsl
pop
in
aam
mov
jg
adc
negb
dec
rorl
ror
fsubrl
push
xchg
test
pop
mov
iret
jno
xor
add
cltd
jmp
arpl
aad
fcomip
sbb
lods
add
stc
lods
lahf
je
or
lods
sahf
mov
xorl
sbb
mov
sarl
mov
cli
push
or
push
insb
xchg
sti
aas
or
mul
insb
jle
enter
out
movsb
cmpl
sbb
add
movsl
and
sbb
adc
pop
stos
stos
daa
aaa
sub
filds
out
xchg
cmp
out
xchg
gs
jmp
nop
rcrl
push
out
xchg
pushf
inc
jne
inc
cmc
adc
repz
sbb
or
mov
pop
xor
mov
gs
sub
mov
int
mov
or
cli
les
xchg
xor
xchg
pop
mov
mov
xor
and
mov
mov
sub
adc
jae
dec
mov
popf
mov
data16
adc
testl
sbb
push
mov
push
mov
sub
and
pop
outsl
call
inc
test
fcoms
adc
nop
jns
xor
add
outsb
sti
sub
sti
inc
gs
sbb
xor
in
jne
out
outsl
adc
xor
lock
inc
imul
mov
or
pop
gs
xor
push
xor
cmp
cmc
push
jno
xor
loopne
mov
xorps
sbb
fnstcw
and
lea
or
mov
inc
mov
sub
mov
pusha
incl
mov
dec
das
jg,pn
nop
add
jns
pop
cmp
bound
inc
shlb
adc
lock
xchg
inc
jmp
and
sbb
lcall
sbb
lods
push
aas
dec
jle
mov
repz
test
shlb
sbb
push
mov
inc
push
xchg
daa
xchg
rcrl
xchg
int3
dec
lds
mov
fildll
mov
pop
fstps
and
xor
pop
lahf
call
jp
cmpsb
lods
and
pusha
sbb
sti
pop
mov
out
or
jle
push
mov
imul
xor
mov
pop
outsl
fcoml
pop
fsubs
sbb
mov
outsb
mov
or
pop
pop
icebp
push
lods
mov
pop
mov
pop
das
pop
mov
sbb
fdivl
push
cmp
std
dec
cmpsl
xchg
dec
push
jmp
fcoml
mov
movsl
cmpsl
sub
clc
popa
negl
enter
enter
add
jl
loopne
int
fldt
pop
mov
test
nop
sbbl
pushf
add
xchg
sbb
vpunpcklqdq
fstpt
in
mov
sbb
xchg
rcr
test
cmp
lods
add
adc
mov
roll
lahf
pop
xchg
sub
imul
xchg
push
dec
sbb
xor
dec
mov
jmp
in
sbb
out
mov
std
je
nop
push
or
loopne
jmp
fnstenv
repnz
mov
adc
push
lock
aad
cmpsl
bound
or
dec
xor
xor
lret
inc
imull
rcll
hlt
test
push
xlat
cli
mov
cli
data16
jno
or
pop
inc
add
push
es
out
adc
icebp
scas
call
and
and
or
inc
loope
add
mov
inc
dec
xlat
add
push
fwait
jge
mov
inc
inc
imul
mov
insl
pop
fwait
mov
cltd
call
or
jp
shrl
cltd
mov
cmc
lock
xlat
cmpsl
std
jns
int
lods
dec
xchg
sub
xor
insb
pop
pop
out
popa
jl
push
mov
mov
cmp
pop
mov
clc
fs
jg
outsl
cld
xchg
adc
out
jp
xor
cmp
sub
mov
popa
sub
out
outsl
std
jg
outsl
std
xchg
enter
pop
jl
xor
dec
int
pop
jp
push
sub
out
fildl
out
iret
dec
arpl
mov
mov
mov
or
cmpsl
push
or
test
cmp
movl
lret
mov
sub
fs
jle
mov
xchg
xchg
fs
fstps
loope
sub
gs
dec
push
orb
pop
enter
cld
insb
mov
loopne
sbb
jo
add
jp
inc
fsubl
push
and
icebp
mov
lds
mov
adc
mov
fwait
and
ja
mov
pop
leave
wbinvd
cmp
in
dec
adc
test
xor
push
xchg
push
vpunpckhbw
test
pushaw
test
xchg
push
nop
xchg
dec
dec
icebp
dec
leave
in
sub
decl
aad
cmpb
add
cmp
daa
shll
movhps
cltd
add
mov
mov
pop
test
aad
iret
mov
inc
scas
push
xchg
push
lds
xor
push
pop
popf
add
pop
sub
lcall
sbb
movsl
aas
dec
xor
in
xor
adc
pop
mov
mov
sbb
mov
inc
call
fs
dec
rorl
dec
ret
xor
push
mulb
mov
dec
sub
scas
xor
shll
bound
sbb
je
mov
sbbl
xchg
sub
scas
fcomps
mov
addr16
shrl
sub
cld
inc
and
jae
repz
fnstcw
je
or
inc
insb
pop
jo
sub
fsts
sub
mov
jecxz
sahf
and
cmp
andb
lock
mov
dec
jge
inc
leave
out
insl
js
push
addl
sbb
jo
scas
or
mov
call
add
stos
fdivrs
xor
inc
adc
outsb
lods
out
push
out
test
movsl
jp
fdiv
jl
dec
and
fwait
icebp
jp
adc
sbbl
push
sub
jns
in
push
dec
push
nop
pusha
cmp
mov
dec
xchg
cmp
pop
js
sbb
shlb
jmp
into
dec
cltd
xor
sub
add
call
iret
notl
sbb
pop
xchg
xchg
add
jns
or
xchg
mov
arpl
sub
cmpsl
ja
cmpb
inc
xor
out
pusha
pop
fisttps
xchg
inc
pop
dec
nop
jmp
sbb
xchg
fs
pop
arpl
stc
jo
cli
inc
adc
addr16
fimull
lahf
cmp
xchg
xchg
aad
sti
out
shr
andl
jl
sbb
cld
je
fisubrs
push
or
movsb
sbb
cld
das
cmp
lea
pop
adc
pusha
test
xchg
div
cmpb
repz
xchg
insb
mov
or
jecxz
mov
push
sub
outsl
pop
dec
mov
sbbl
cmp
hlt
add
outsl
idivl
add
adcl
fwait
add
inc
or
fldl2e
jecxz
mov
cli
je
enter
je
cmpsl
fidivl
xor
int
push
jne
cmpsl
jne
sub
dec
cld
sub
jge
and
repz
enter
stc
xchg
jbe
dec
xchg
loopne
push
in
inc
mov
mov
arpl
inc
pop
ja
xchg
orb
popa
and
inc
imul
or
stc
jbe
loope
loope
dec
xor
scas
pop
push
popa
scas
addb
pop
shrl
xor
shll
mov
pop
sbbl
jne
push
daa
les
data16
insb
sbb
aaa
rcll
pop
jl
dec
dec
adc
push
mov
popa
dec
mov
xor
pushl
pushf
xor
or
addb
jne
push
add
xchg
fildl
clc
or
xchg
out
je
pop
ja
mov
and
in
popa
and
jmp
inc
dec
cmp
in
sub
and
jbe
rol
xor
div
pushf
ret
lahf
mov
test
movq
jbe
and
xchg
jbe
fimuls
cmpsb
negb
or
fisttpll
imul
fnsave
fidivrs
je
je
std
cmp
xchg
mov
cmpsl
js
push
xor
lds
jg
jo
cmpsl
jle
and
sbb
outsl
add
out
jg
cltd
pop
xor
inc
xorl
sbb
jmp
sub
je
xor
jg
push
pop
sub
pop
cmpsl
jne
and
or
fimull
push
call
jmp
lds
sub
add
daa
popa
cmpsl
xchg
jg
xor
int
pop
sub
and
jae
rcrl
clc
fs
jg
je
stos
xor
or
xor
scas
and
aam
pop
adc
sbb
sbb
mov
pop
pusha
sbbl
dec
sbb
imul
and
xor
pop
sbb
mov
sbb
mov
sub
adc
call
sbb
mov
push
insl
icebp
inc
out
xchg
pop
xchg
mov
sub
icebp
cmp
jge
stc
out
dec
mov
xchg
jl
push
fs
mov
or
jmp
scas
in
int
pop
push
repz
mov
sti
pop
les
in
clc
fs
nop
iret
lret
mov
cmc
and
xchg
fstpl
xor
imul
pop
inc
xor
xchg
out
je
and
movsl
sbb
mov
popa
js
inc
fwait
out
popw
add
push
sbb
sbb
rcrl
sub
xchg
add
push
push
xchg
or
fisttpll
shl
dec
xlat
ds
sti
inc
fs
mov
add
mov
std
addr16
add
xor
dec
pop
ret
negb
mov
repnz
icebp
jne
sbb
imul
mov
iret
push
std
inc
and
push
mov
adc
mov
sbb
xlat
inc
sbb
push
add
add
push
pop
inc
repz
aad
xchg
inc
rcrb
stos
or
jg
outsl
icebp
xchg
icebp
jae
out
addr16
xor
jae
popf
push
callw
test
cmpsb
adc
jns
push
push
push
arpl
repnz
fsubr
mov
inc
rorl
add
data16
inc
add
gs
test
je
fwait
movsl
gs
add
ret
adc
gs
pop
arpl
xchg
xor
hlt
fcompl
addr16
sahf
jge
push
into
xchg
sbb
pushf
dec
fdivp
xor
and
adc
pop
adc
push
mov
shlb
adc
cwtl
out
data16
or
sbb
adc
mov
adc
lds
shll
lock
jg
stos
push
dec
shll
add
sbb
shl
mov
lods
jp
xor
fsubrs
fimull
fsubr
repz
mov
repz
mov
int3
jo
and
cmpsb
idivb
fisttpll
mov
dec
jae
fwait
icebp
jb
add
jo
mov
imul
sbb
push
inc
sub
mov
shll
call
jl
scas
cmp
inc
ja
ret
pop
xor
push
gs
lods
mov
iret
inc
shrb
inc
gs
mov
lahf
push
pop
or
loope
inc
jnp
dec
enter
push
xchg
iret
inc
add
inc
cmc
sbb
xor
jle
jecxz
pop
insl
mov
push
jns
icebp
adc
pop
mov
rorb
adc
pop
insb
dec
dec
enter
push
xchg
pushf
xchg
je
sub
mov
std
in
loope
aam
mov
daa
xor
fs
cmpsl
movsl
pop
or
bound
pop
pop
pop
repz
pop
vaddpd
movsl
jl
inc
in
mov
stc
sbb
sub
rcrb
insl
leave
push
inc
je
aad
test
sub
fnstenv
dec
rcll
sti
mov
mov
add
xor
dec
shrb
insl
pusha
movsl
dec
insl
pop
push
pop
adc
push
sbb
ret
adc
pop
in
js
arpl
pop
popa
sub
negb
fstl
jne
loope
imul
inc
fwait
pushf
inc
add
fxch
ds
popf
std
outsl
test
ss
aaa
jnp
jg
cmpsl
lea
fstpt
cmp
sub
lcall
lcall
sti
adc
aam
cmp
and
push
or
sbb
cmpsb
mul
clc
xor
inc
imul
addl
cmpsb
xorb
mov
and
int3
xchg
mov
mov
cmp
push
jmp
inc
sub
cmpsb
mov
mov
xchg
test
fwait
test
jno
aad
and
sbb
adc
push
sbb
sbb
loopne
dec
cmpsl
insb
pushf
push
jmp
pop
sbb
insl
leave
push
inc
jg
or
mov
dec
arpl
fsubrs
flds
adc
xor
ror
pop
push
lods
jbe
imul
outsl
inc
mov
mov
mov
les
jp
and
xor
pop
aas
cs
enter
jbe
xchg
cmpsl
sub
mov
sub
stc
adc
cltd
push
adc
lea
dec
sahf
fwait
leave
gs
push
inc
sub
xor
or
xchg
pushf
mov
xor
test
leave
push
inc
push
push
push
lods
push
pop
inc
lds
pop
je
cmc
adc
mull
into
pop
lds
hlt
lret
jp
mov
sub
inc
dec
scas
adc
cwtl
aad
test
sbb
adc
sbb
lret
lock
neg
mov
enter
pop
data16
sti
arpl
xor
xlat
punpckldq
dec
jmp
adc
testl
lret
fdivs
dec
shll
stc
push
imul
jmp
cli
cli
or
xor
pusha
fmul
addr16
pushf
push
jb
imul
cli
mov
pop
ret
gs
mov
ss
jb
dec
add
mov
lods
lret
add
out
sub
inc
dec
fwait
jnp
loopne
dec
cmpsl
ret
outsb
push
jmp
std
mov
xor
jp
leave
movsl
xor
sbb
data16
and
es
out
push
leavew
push
inc
mov
rcrl
xchg
nop
aad
dec
rcrb
fsubrs
fdivs
dec
shll
stc
xor
mov
push
dec
fwait
jp
in
add
sbb
decb
hlt
cmp
arpl
insl
pop
mov
dec
mov
xchg
testb
sub
mov
mov
popf
jmp
pop
imul
arpl
mov
es
loopne
cs
ret
sti
mov
add
mov
inc
mov
shr
mov
jno
xor
aad
pop
xor
adc
dec
add
push
inc
lret
add
gs
xor
adc
pop
sbb
repnz
sub
test
push
aaa
mov
loopne
jo
int
jbe
xor
pop
popf
add
and
cmp
ss
bound
mov
xchg
out
jo
xorl
cltd
lods
pusha
dec
in
jge
lcall
cmpsl
outsl
orb
out
xor
or
cli
adc
bound
test
mov
jg
xchg
ret
jmp
and
jno
adc
xchg
and
mov
fisubrs
or
adc
test
popa
out
insl
sub
fs
xor
mov
in
xchg
dec
addr16
pop
xchg
aas
add
mov
loope
jmp
jno
sub
push
cld
add
loope
mov
fwait
lods
dec
cltd
pop
popf
aas
jne
adc
popa
mov
pop
or
dec
test
sub
and
or
shrb
push
ror
push
mov
jne
inc
test
jno
inc
jne
and
push
cmp
sub
xchg
push
data16
fs
gs
outsl
fs
push
mov
vandnps
imul
outsl
or
xchg
cltd
mov
push
xor
int
push
mov
jne
inc
mov
inc
or
ds
sahf
cmpsl
shll
mov
xchg
aas
mov
sbb
cmc
fs
xor
out
push
xor
mov
fucomi
mov
push
xchg
jae
clc
dec
loopne
jg
add
popa
inc
push
insb
pop
pop
icebp
add
push
movsb
int
pop
mov
jne
inc
mov
inc
or
popa
inc
push
movsb
push
pop
icebp
cli
adc
mov
lahf
xchg
add
cmpsb
les
outsl
out
pusha
and
test
ss
addr16
test
inc
lahf
or
ds
sti
mov
repnz
pushf
inc
fcoms
fldcw
jnp
imul
cmp
call
sbb
or
adc
inc
mov
sti
cli
pop
les
sbb
mov
jg
outsl
gs
test
mov
sti
pop
les
sbb
dec
imul
sahf
push
xchg
dec
push
adc
and
ds
sti
adc
sbb
xchg
and
imul
push
outsb
std
pop
icebp
pushf
adc
mov
cli
std
ret
push
imul
cmp
loope
inc
loope
add
in
shlb
pop
dec
aas
ds
in
andl
mov
mov
cmp
xor
fbstp
popa
mov
mov
mov
add
mov
sbbb
xchg
std
or
jecxz
cmc
mov
movl
push
mov
gs
mov
ss
adc
xchg
insl
or
int3
fisttpl
xor
push
adc
ljmp
inc
repz
js
adc
add
int3
out
mov
adc
cmp
push
subb
mov
fsubr
xchg
nop
aaa
pop
arpl
std
or
sbb
cli
mov
mov
cmpsl
popa
add
xor
arpl
dec
fnstsw
aaa
xor
pop
pop
pop
mov
and
and
stc
cmp
ja
mov
ret
inc
addr16
push
cmp
push
pop
ss
mov
imul
int
push
pop
mov
lret
push
xchg
dec
adc
xor
dec
insl
popa
push
mov
jnp
popa
cmc
mov
sbb
xor
loopne
adc
loope
adc
movsl
repnz
cmc
ret
push
sbb
inc
push
sbb
inc
dec
maskmovq
divl
pop
rep
inc
add
xor
add
std
xor
stos
fs
imul
xor
jno
in
pop
xor
push
xchg
sub
cmp
jae
dec
stc
in
cmp
or
rorl
pop
sti
popf
stc
aas
pop
test
xor
xor
add
push
dec
frstor
and
cwtl
pop
cmp
lock
jno
cmp
lret
add
mov
in
push
adcb
inc
mov
and
add
pop
pop
gs
adc
cld
jle
sbb
dec
enter
xchg
dec
pop
pop
pusha
mov
fsts
rol
pop
mov
rcrl
int3
mov
sbb
leave
arpl
nop
or
add
or
mov
cmp
and
addr16
sub
cmpl
fistpl
jbe
pop
mov
lods
jo
cmc
sahf
add
push
stos
jae
js
lret
gs
out
sub
es
add
fidivl
sbb
outsl
mov
mov
insl
xchg
bound
fsts
lcall
jecxz
rolb
aas
data16
or
test
lock
xchg
pop
mov
sbb
push
sbb
jno
subb
sub
sub
cmpl
insl
add
stos
or
scas
pop
dec
pop
shrl
jnp
pop
repz
sub
outsl
sub
cmp
test
popl
popa
mov
cmpsl
fidivl
rcrl
addl
cmp
cli
xchg
adcl
pop
cmp
mov
into
adc
stos
push
xchg
mov
sub
std
scas
adc
xlat
xchg
adc
push
xor
inc
xor
jge
clc
jno
insb
or
pop
mov
mov
in
push
and
mov
out
cmpsb
sti
dec
mov
sarb
xchg
xchg
ret
repnz
clc
jbe
lret
mov
adc
lahf
nop
ret
mov
test
dec
cli
stc
push
movl
pop
push
cld
mov
adc
mov
imul
pop
xor
mov
adc
icebp
dec
jmp
aaa
xchg
pop
inc
push
xchg
xor
aad
test
cmp
adcb
adc
iret
ret
or
adc
pop
aaa
mov
or
or
pushf
mov
mov
ret
in
sub
mov
push
das
jle
mov
in
or
sub
jbe
push
sub
les
cmp
jbe
push
sub
test
aas
add
mov
xlat
add
pop
pop
cli
inc
adc
sahf
stc
push
pop
pop
test
test
movsl
mov
mov
pop
sub
xchg
mul
insl
xor
adc
xchg
xchg
mov
xor
push
fs
movsl
jmp
or
push
movsb
fnsave
push
stc
shll
push
movsb
fdivl
push
dec
and
addr16
xchg
insb
adc
mov
xor
mov
xchg
or
cmpsl
pop
mov
shlb
sbb
xor
pop
inc
dec
mov
adc
mov
repnz
mov
adc
inc
lret
mov
insb
mov
add
pop
mov
push
sub
leave
bound
stc
inc
pushf
sbb
jmp
cs
mov
add
jl
filds
jno
aaa
mov
dec
clc
aas
lods
leave
push
fstl
lock
xchg
push
mov
xor
fldcw
push
sbb
xchg
or
stos
sbb
fidivs
lods
hlt
testl
dec
mov
frstor
cmp
pushl
and
jne
xor
push
add
mulb
fidivrs
cmpsl
mov
mov
rclb
shrb
std
popa
jae
add
mov
inc
fsubr
jo
faddl
pop
pop
shlb
out
sub
stos
loop
jo
jnp
je
mov
dec
lret
cs
or
hlt
mov
sbb
data16
push
xor
mov
push
mov
leave
xchg
or
mov
das
testl
add
out
addb
mov
pop
ja
pop
adc
mov
mov
push
popf
mov
das
adc
jle
jmp
pop
arpl
repnz
ja
dec
xor
imul
mov
mov
add
in
repz
aam
aaa
pop
dec
inc
leave
mov
and
aad
add
pop
dec
mov
dec
pop
dec
leave
mov
push
xor
push
and
dec
push
imul
inc
dec
sub
cltd
xor
outsb
inc
xor
push
lock
icebp
mov
aam
dec
sar
xchg
jae
cvttps2pi
fstpl
in
in
ljmp
sbb
jmp
xor
mov
dec
sub
sbb
sahf
or
pop
aas
push
es
xchg
inc
repz
icebp
icebp
in
jecxz
rclb
aas
dec
dec
xor
lahf
xor
in
addb
popa
mov
test
in
pop
jb
outsl
mov
sti
cmp
pop
sti
cwtl
adc
sbbl
cwtl
imulb
rclb
inc
ss
insl
push
sahf
cmp
sbb
orl
sarb
xor
sub
ja
and
push
sub
cmpsl
pop
data16
testb
pop
adc
sbb
gs
movsb
dec
cwtl
jno
push
pop
inc
cmp
out
ss
enter
push
lret
cmp
movsl
enter
inc
inc
mov
jl
pop
sti
lods
test
lahf
jns
lret
push
xchg
add
and
mov
xchg
or
push
mov
and
cmp
mov
fwait
repnz
lock
push
nop
aas
test
outsb
lods
int3
xor
pop
sahf
aas
jle
lock
gs
shrb
into
pop
or
jnp
addr16
dec
push
xchg
fwait
jge
popf
hlt
add
dec
cmc
dec
adc
enter
lcall
lea
gs
mov
mov
xchg
call
mov
mov
push
mov
push
xor
aam
xchg
mov
pusha
stc
fnstsw
sub
fsubl
shll
es
push
jg
or
pop
sti
scas
xor
mov
xor
mov
mov
imul
iret
imul
cmpsb
subl
or
push
pop
mov
and
dec
and
jp
clc
or
mov
stc
mov
xchg
push
mov
jne
insl
mov
pop
push
xor
pop
ret
adc
and
dec
roll
pop
clc
add
cmp
out
mov
call
fisubl
cltd
cmp
adc
in
cmpsl
cmpsl
popa
jecxz
mov
inc
mov
leave
mov
int3
sub
test
xor
icebp
testl
mov
xor
dec
inc
jb
and
aad
adc
rcrb
sbb
xor
and
cwtl
das
cli
xchg
xor
mov
dec
push
push
sti
popa
push
dec
sub
icebp
sbb
cmp
hlt
filds
dec
lods
aas
daa
insl
fucomip
cld
pop
in
sbb
add
push
cmp
inc
and
jg
and
aas
cmpsb
testb
ffree
inc
jno
adc
add
mov
add
dec
in
dec
aaa
sbb
sub
sub
mov
sti
sub
cli
inc
sbb
and
jg
outsl
inc
out
xor
icebp
in
jo
inc
push
mov
fmuls
push
mov
cmp
fsubrl
inc
jne
jne
imul
mov
les
imul
sbb
outsb
ret
outsl
jne
ja
fidivs
adc
fsubrs
push
dec
pop
sbb
addr16
xchg
xor
ret
int
push
call
std
insb
mov
bound
icebp
popa
bound
inc
sub
pop
sub
xor
pop
test
hlt
adc
xchg
inc
sti
insb
fdivrp
mov
xor
jmp
lods
repz
fstl
push
fcoms
cmpsl
jne
bound
pop
push
pop
ret
push
xor
ret
int
mov
sahf
inc
sbb
test
fwait
add
and
mov
xor
int
pop
shlb
xchg
loope
mov
ret
pop
xor
or
ret
arpl
pop
rorb
sub
les
cmpsb
nop
adc
out
in
sbb
xor
aas
loop
jnp
frstor
sbb
bound
or
inc
inc
clc
fs
inc
jg
insb
dec
jg
add
push
aaa
pop
icebp
and
cmp
daa
mov
inc
xchg
sbb
xor
rolb
xchg
add
xor
mov
dec
jecxz
andl
dec
lods
cld
mov
adc
idiv
dec
fnstsw
jne
inc
inc
imul
push
jge
xor
daa
les
jb
adc
mulb
insl
in
dec
jmp
rcl
outsl
dec
add
cmp
push
jmp
dec
sbb
mov
popf
inc
pusha
add
dec
xchg
jmp
mov
int
pop
shl
xlat
jb
shrb
inc
jg
jo
lcall
dec
aaa
inc
fisubrs
inc
mov
mov
inc
xor
mov
testl
dec
imul
mov
int
push
popa
repz
and
shlb
mov
xchg
mov
sub
enter
xchg
dec
mul
sbbl
bound
sti
push
cmp
cli
or
sbb
ja
pop
out
lods
mov
mov
imul
sti
int3
shll
sbb
sub
addr16
jae
mov
sbb
int3
outsl
pop
xor
jb
and
cmpsb
neg
sub
jne
jmp
hlt
fs
push
rcrl
daa
mov
pop
sbb
loopne
and
inc
xchg
pop
mov
jne
lahf
dec
popa
int
hlt
frstor
addr16
pop
mov
out
stos
push
xor
xor
and
sbb
dec
lcall
and
dec
cmpsb
adc
cmpsl
adc
xorl
mov
subl
cmpsb
mulb
fldenv
push
cmpsl
adc
jp
cmp
push
cmpsb
aad
xchg
stc
inc
mov
sti
pop
les
sbb
push
sub
add
xor
dec
lods
dec
cmpsb
sbb
notb
shll
xor
mov
cmp
xchg
adcl
cmpsb
fbstp
xor
jg
and
adcl
xchg
jne
add
and
xor
das
das
imul
mov
dec
test
pop
add
xor
repz
ret
pop
sbbl
jne
push
sarb
inc
add
test
popf
push
movsb
cmpl
and
lods
and
sbb
in
add
popa
cwtl
sub
push
add
movsb
sbb
pop
sbb
mov
sti
sbb
xor
popa
inc
lds
fldl
push
xchg
pushf
cmp
inc
push
out
xlat
xchg
pop
test
cmpsb
rorb
xchg
jecxz
scas
dec
test
mov
xor
xor
daa
fwait
insb
mov
fdivrs
push
test
pop
mov
movsl
sbb
jb
jge
sbb
dec
sbb
loop
and
xor
das
jne
cltd
xor
lods
mov
mov
stos
pop
add
xor
pop
pop
ret
pop
sbbl
jne
sbb
dec
lcall
pusha
and
mov
cmpsb
neg
xor
xor
dec
xor
movsl
mov
ffreep
dec
shll
gs
ljmp
cmpsb
lds
mov
xchg
dec
pop
pop
or
sbb
inc
sbb
mov
cli
and
scas
xor
xchg
int3
xor
fldcw
jnp
xor
loop
xor
xchg
mov
mov
add
and
sarl
dec
enter
push
xchg
pushf
in
aam
cld
ret
mov
xor
xor
mov
inc
push
mov
fwait
sub
pop
add
add
pop
xor
dec
push
ret
push
sbbl
jne
sbb
dec
mov
pusha
and
or
cs
xor
fstl
xor
mov
pop
sub
pop
loopne
pop
inc
sbb
push
mov
sbb
add
lea
push
inc
out
filds
xor
arpl
inc
pcmpgtd
gs
test
inc
pusha
ret
push
dec
shll
or
sbb
lret
lock
imul
pop
loope
movsl
dec
mov
push
xor
daa
rcrb
gs
test
mov
shll
add
sbb
dec
ret
or
testl
xor
test
imul
mov
rcr
sub
fadds
push
sub
cmp
jae
add
sbb
or
rcll
test
std
enter
jbe
xchg
cmpsl
sub
iret
js
leave
push
inc
clc
add
inc
popf
or
xchg
xchg
sbb
inc
dec
push
iret
push
enter
inc
mov
data16
lret
outsb
nop
sbb
mov
pop
pop
push
sbb
data16
lea
cld
pop
mov
daa
test
pop
pop
dec
push
dec
rorl
jnp
xor
mov
into
jae
cmp
fnsave
test
mov
es
mov
mov
movsl
cmp
out
xlat
add
jno
pusha
push
movsl
adc
push
addl
sbb
mov
sahf
mov
shl
aas
fistps
add
lds
xor
xchg
pusha
pop
out
mov
clc
movl
shrl
add
adc
and
cmpl
sbb
or
sarb
cmp
push
in
mov
enter
push
xchg
pushf
cmp
sbb
shlb
jbe
jo
fs
sub
jge
mov
mov
ret
fldenv
addl
sbb
lahf
xor
and
sub
fsubrs
inc
andb
add
xor
lahf
xchg
fildl
dec
mov
inc
cmp
mov
sahf
and
cmpl
hlt
outsb
xchg
les
adc
stc
bound
xchg
faddl
les
pop
adc
mov
orl
jmp
push
lock
sbb
xchg
in
cmp
jae
sub
mov
jle
inc
rcr
ds
or
xchg
je
test
sbb
xchg
inc
repnz
sbb
leave
push
arpl
dec
mov
imul
mov
mov
add
aam
xor
iret
pop
jecxz
inc
xor
jecxz
push
imul
add
mov
dec
xchg
es
push
mov
shrb
sub
mov
add
imul
shrl
sbb
divb
inc
sub
add
adc
shll
in
je
xchg
and
mov
lcall
adc
or
pop
xchg
lret
mov
or
jg
mov
inc
stc
sbb
or
fdiv
xor
movsl
repnz
fs
fwait
pop
imul
test
rcr
xor
stos
push
add
cltd
xor
jmp
mov
cmp
mov
repz
mov
lock
insl
popa
and
fdivrs
hlt
or
mov
mov
cmpsl
test
lret
divb
or
or
xchg
xchg
xchg
or
pusha
int
sti
iret
mov
mov
pop
xchg
shrb
lahf
and
or
bound
les
push
lea
sti
or
fpatan
fmuls
jno
fs
add
dec
xor
movsb
jg
and
pop
test
lea
push
sbb
leave
dec
cmpsl
je
sbb
push
xor
sub
xor
xor
je
xor
jno
adc
pop
loopne
icebp
jp
arpl
inc
stc
fs
inc
cmpsl
andb
pop
mov
fwait
int3
pop
call
add
in
popa
or
std
fstps
leave
mov
xor
bound
insb
out
ret
dec
daa
shll
xchg
arpl
push
jg
mov
lods
xor
ljmp
ss
push
xor
ret
mov
mov
movsl
loop
adc
pop
scas
cmp
xor
and
hlt
shr
add
sbb
sarb
icebp
repz
gs
pop
dec
in
rcrl
out
push
pop
jno
popa
aad
rcrb
cmp
jno
test
xchg
fdivl
sti
scas
pop
xor
cmpsl
rclb
dec
add
ret
pusha
sbbl
add
repz
jne
inc
or
and
arpl
xor
adc
movsb
fs
in
arpl
and
je
pop
push
gs
cmpsb
xor
adc
inc
mov
xor
scas
xor
adc
dec
sub
xor
sti
out
gs
sbb
mov
dec
inc
mov
paddw
pop
dec
mov
mov
rorb
jno
add
inc
cmpsl
push
jne
lods
sub
xorl
xor
add
xor
sbb
stc
test
leave
push
imul
fsub
movsw
or
daa
cmc
fldenv
jo
pop
adc
jno
and
add
les
ret
sti
jg
add
fwait
dec
push
aad
jne
dec
add
mov
cmpsb
pop
jmp
dec
stos
push
xchg
cmp
add
add
gs
in
in
enter
ret
add
push
imul
inc
jge
xor
outsl
call
movsb
pusha
test
bound
lock
bound
pop
aad
xchg
les
arpl
sbb
mov
test
inc
xchg
xchg
pushf
inc
dec
pop
dec
shl
sub
push
aaa
push
inc
das
mov
push
sbb
or
int
jno
repz
leave
dec
xchg
xchg
mov
adc
add
sub
pop
mov
sbb
test
or
ja
dec
xor
jo
xor
fstpt
mov
imul
xorl
add
sarl
push
jb
cmp
or
insb
test
inc
mov
test
mov
xchg
or
in
fwait
sbb
stos
sub
jecxz
clc
jb
dec
das
outsb
stc
icebp
add
stc
adc
and
negb
jo
mov
cmpsl
xchg
sbb
adc
popa
adc
scas
loope
push
cld
mov
cmp
adc
xor
ss
or
cmc
test
ficomps
and
sbb
lret
jg
filds
hlt
mov
or
pop
sub
js
in
lock
mov
fstpl
push
pop
dec
xchg
inc
daa
leave
mov
mov
pop
test
pushf
pushl
movsl
mov
lea
jnp
fnstsw
ret
stos
stos
aam
xchg
mov
adc
push
xlat
pop
mov
jle
inc
mov
sbb
jecxz
outsb
xor
push
mov
mov
jmp
add
pop
pop
xchg
xor
test
cs
loope
loopne
in
or
stos
movsb
pop
shll
aad
fwait
push
rcll
pop
sub
fnsave
xchg
loop
or
xchg
aad
fwait
into
rclb
lods
les
pop
test
andl
mov
iret
dec
pop
fldt
out
test
sub
rorb
mov
push
fldcw
inc
sahf
cmp
bound
or
add
dec
loope
dec
stos
test
rol
xor
pushf
jae
iret
mov
mov
iret
outsb
sub
mov
mov
pop
or
mov
jmp
loope
fdivs
pop
xchg
inc
or
jle
dec
loope
jl
pop
xchg
movsl
imul
pushf
ss
mov
mov
mov
shlb
fistps
aaa
repnz
call
mov
jmp
fnop
aad
lret
ss
cli
iret
mov
mov
iret
outsb
jl
mov
inc
dec
popf
add
mov
inc
mov
pop
flds
push
lds
je
daa
sti
lret
pop
pop
mov
and
test
jns
xchg
iret
mov
pop
xor
mov
jnp
rcrb
lret
sarb
adc
arpl
gs
shl
add
and
push
sub
test
xor
pushf
ds
lods
pop
mov
adc
out
pop
fstpl
jbe
mov
or
xchg
push
and
jge
add
lret
jmp
imul
test
sbb
testl
xchg
cld
dec
xchg
fdivrl
loop
enter
test
jnp
js
inc
daa
repz
pushf
sti
iret
jb
imul
and
dec
inc
jo
es
loop
fisttpll
fildll
lods
gs
mov
in
adcl
repz
cmpsb
pop
jo
push
jmp
fnop
clc
xor
pushf
jae
leave
cli
iret
mov
iret
iret
lcall
fs
cmpsl
andl
push
mov
jle
xor
xor
and
or
lds
popf
xor
jle
hlt
xor
jecxz
mov
js
sar
xor
inc
fisubl
pop
mov
adc
cmp
jl
jo
outsb
xchg
mov
jle
inc
cli
iret
jne
inc
int3
mov
dec
jmp
mov
movsl
bound
js
dec
dec
mov
cs
dec
and
cmpb
aaa
push
repnz
xor
mov
mov
mov
xor
mov
sub
outsb
das
xor
sbb
movsb
push
push
popl
leave
push
push
jno
ret
pop
mov
push
mov
lcall
outsb
outsl
mov
movsb
pop
pop
shll
push
and
lahf
rcll
addl
mov
pop
out
sbb
cltd
xchg
iret
pop
mov
les
sahf
xor
gs
incl
in
andb
dec
call
leave
xor
ljmp
cmc
mov
jg
fnstenv
sbb
dec
mov
sbb
sbb
xor
in
and
shr
sub
popf
add
push
gs
andl
shrl
pop
mov
fnstcw
xchg
int3
fldl
pop
cmp
pop
sub
pop
aas
fidivl
sub
pushf
into
push
icebp
jle
xor
mov
aaa
cmpsl
fisttps
int
clc
xor
pop
cmp
xor
punpckhwd
jp
xchg
in
adc
int3
cmp
mov
cmp
lds
aad
dec
cli
fwait
fwait
adc
mov
les
scas
popf
in
out
pop
xor
dec
int
rcrl
test
mov
adc
pop
fs
aas
gs
mov
adc
push
fs
dec
shrl
add
mov
bound
sarl
sti
add
sub
fnstsw
dec
sbb
mov
xchg
mov
xorl
dec
xchg
into
hlt
jnp
add
jg
ljmp
leave
mov
xor
aam
cld
je
pop
xlat
das
pop
add
and
pusha
jae
imul
jl
cmpsl
sbb
jg
and
push
rcrl
sub
adc
jmp
and
adc
movsl
sub
dec
das
push
adc
adc
shll
mov
pop
xchg
aad
xor
aad
gs
dec
xor
mull
inc
and
ljmp
fwait
and
int
loope
popf
and
test
pop
loopew
clc
btc
insb
add
test
inc
inc
cltd
mov
xchg
sub
push
mov
mov
stc
adc
repz
jl
mov
roll
fstl
sbb
test
mov
addr16
push
mov
adc
dec
push
adc
xchg
fmull
sahf
insb
icebp
inc
mov
sbb
jae
pop
test
pop
inc
dec
ret
lcall
hlt
cmpsb
push
dec
testl
xor
sti
mov
xor
mov
pop
lods
and
les
mov
jno
add
adc
jmp
lahf
cmp
divl
subl
adc
add
or
push
data16
mov
sub
and
and
cltd
mov
sbb
inc
mov
mov
xor
add
roll
mov
inc
sub
popf
add
adc
and
jg
imul
mov
pushf
lea
sbb
mov
inc
sbb
cmp
push
lock
stc
orb
sti
cmpsl
cmpsl
sti
or
xor
pop
adc
pop
adc
add
xchg
mov
mov
push
scas
call
push
xor
fldenv
into
lahf
movsb
fisttpl
mov
add
mov
cmc
and
or
pop
xchg
mov
push
mov
cs
jne
lods
sub
aas
ror
scas
aam
xchg
sbb
jnp
in
rcl
arpl
add
push
pop
pop
mov
mov
cmpl
dec
int
dec
mov
js
clc
jecxz
push
jg
fld
xor
or
mov
pusha
sub
inc
mov
adc
scas
nop
jmp
outsb
sub
ret
stos
js
pop
leave
aam
or
mov
mov
outsl
push
xchg
fs
leave
cmp
das
test
iret
mov
sarb
roll
and
mov
xchg
push
aam
jl
shrl
insb
sub
dec
fstpt
fs
and
push
xor
cmp
mov
sub
insb
push
add
fisubs
xchg
mov
adc
push
jo
pop
fstpt
add
jae
test
gs
inc
sbb
in
mov
dec
push
push
xor
mov
lret
mov
lret
std
add
shll
test
imul
sbb
negb
xchg
inc
pop
ja
inc
aaa
dec
rorl
stc
rcrb
incb
sarb
pop
mov
jecxz
outsl
mov
xchg
aas
xchg
pop
dec
pop
mov
test
pop
das
pop
pushl
lea
adc
or
fs
cmp
jne
lock
pop
stos
pop
jb
cmp
jecxz
dec
test
mov
mov
push
push
adc
inc
add
xor
push
mov
mov
inc
ljmp
xor
cmp
mov
jmp
int3
sub
sub
or
das
fnstsw
pop
pop
xor
mov
and
decl
inc
rorl
inc
xchg
and
and
sub
mov
mov
pusha
xor
xor
gs
in
push
lock
cmp
and
or
dec
push
push
mov
adc
fnsave
sarl
mov
scas
scas
jne
sbb
and
or
fidivrl
test
inc
aas
sar
pop
xor
inc
mov
cmp
out
inc
pop
sbb
adc
test
in
cmp
dec
sub
imul
push
pop
shlb
xor
push
and
mov
xchg
mov
sub
mov
add
scas
fs
rcrl
pop
mov
pusha
dec
adc
xor
fs
xlat
ret
pop
mov
dec
xor
pop
inc
fnstcw
mov
arpl
xor
out
mov
syscall
dec
pop
movsb
pusha
insl
rcr
int
mov
repnz
aaa
daa
pop
inc
xor
inc
cmp
mov
repz
jno
pop
gs
jnp
jl
in
jo
lret
repz
pop
mov
test
pop
or
add
mov
xor
nop
mov
gs
insl
test
stos
mov
fstps
or
fs
adc
pop
push
xchg
fcmove
pop
cltd
mov
jge
ds
aaa
outsb
adc
movsl
sbb
push
cmpsb
xor
jmp
push
sbb
jb
je
iret
adc
sub
imul
lret
jle
out
dec
push
pop
stos
in
push
push
pop
test
aas
cmp
dec
stc
mov
popa
enter
and
sbb
mov
dec
mov
fdivr
xlat
add
and
pop
in
cmp
xchg
ja
lods
or
push
loop
bound
adc
test
or
jmp
inc
mov
out
push
addb
test
or
jo
gs
push
inc
popa
popf
xor
mov
mov
mov
cs
cwtl
mov
movsl
mov
xchg
loopne
xchg
jo
mov
lret
mov
sub
leave
neg
out
add
jl
mov
jno
xor
mov
adc
sub
fstp
lcall
dec
adc
lcall
inc
das
xor
mov
sub
insl
es
dec
loope
and
sub
push
or
mov
mov
loop
mov
xor
xchg
fsubrl
jmp
adc
or
sbbb
adc
mov
inc
shlb
sbb
stc
xchg
add
divb
push
pop
jne
pop
jae
pop
stos
add
push
mov
ret
mov
leave
test
push
jno
sbb
fisttpl
popa
imul
cmp
push
jp
cmpsl
std
mov
cwtl
je
dec
out
flds
test
aad
cmp
shl
mov
lock
lahf
push
push
cmp
dec
push
sub
or
sahf
jmp
lea
outsl
lock
sbb
pop
or
loopne
sbb
or
ja
adc
arpl
aas
sub
pop
fs
call
adc
out
stos
sbb
stos
jecxz
pop
enter
sub
mov
xor
fsubrp
mov
adc
adc
jae
rorl
iret
xor
fs
add
lea
cmp
adc
cmpsl
imul
jg
xor
pop
les
dec
sub
pop
fcomi
cmp
fnstcw
add
shrb
js
in
pushf
ret
test
add
pushf
enter
scas
adc
pop
inc
mov
cmc
jecxz
int
fwait
fs
popf
fs
or
pop
and
sub
xchg
sub
add
dec
mov
hlt
mov
xor
sub
dec
and
and
xor
and
scas
loope
cmpsl
ds
mov
xor
push
push
mov
and
call
xchg
push
ljmp
push
stc
jnp
test
rcll
push
cmp
fsubrp
or
pusha
das
cmp
push
pop
ja
arpl
and
pusha
mov
mov
pop
jo
popw
jae
ja
icebp
rclb
fwait
push
ds
push
mov
or
cmpsb
sbb
mov
mov
icebp
pop
cmp
and
and
cltd
jb
mov
xchg
cmp
dec
xor
mov
mov
out
enter
jns
xor
sbb
fwait
adc
roll
lds
mov
jno
movsl
cmc
scas
ret
lds
aad
add
jno
xor
mov
add
test
adc
xchg
pop
lcall
sbb
or
cmp
int
and
cmp
addr16
pop
adc
incl
imul
jae
add
cmc
mov
shll
adc
inc
mov
jne
add
sub
jae
dec
sbb
das
ss
push
mov
sahf
adc
mov
jns
lods
sti
push
xor
inc
mov
push
xor
int
fistpl
enter
cmc
imul
sbb
pop
lds
jns
movsl
jno
rcr
push
adc
pop
gs
mov
stc
and
xor
xlat
cmp
adc
daa
add
add
movsl
sub
enter
dec
push
adc
aam
inc
dec
lock
cmpsb
push
sbb
mov
sub
sti
pop
xor
cwtl
inc
or
shrb
arpl
sti
xchg
xor
movsl
xor
xchg
xor
dec
sti
fdivrs
push
adc
lea
sub
jns
pop
xor
mov
sub
xor
mov
in
mov
jg
mov
dec
mov
mov
out
cwtl
sahf
mov
ss
test
pop
ss
fs
dec
inc
xor
pop
mov
lods
rcrl
gs
pop
fnstenv
add
cmp
mov
sub
aam
das
loopew
mov
data16
jecxz
mov
out
ss
insb
sub
add
icebp
jmp
mov
arpl
mov
adc
addl
inc
pop
sarl
add
mov
xlat
xor
test
popa
es
sbb
jno
mov
cmp
inc
rcrl
gs
sbbb
xorl
es
mov
ds
add
lret
inc
pop
aas
xchg
cltd
push
cmp
pop
lds
ds
mov
popa
pop
popa
addr16
pop
mov
push
pop
dec
xor
sub
fcomp
mov
inc
cmpsb
or
pop
pop
lret
ret
pop
testl
cmpsb
cmpsb
pop
pop
mov
repz
aaa
lret
aaa
test
sub
push
in
xor
sarl
sbb
pushf
lock
push
xor
cmp
push
movsl
mov
push
subb
xor
sub
movsl
in
frstor
shlb
sbb
lds
loop
gs
sahf
test
jp
push
jle
cmpb
jno
sub
lret
mov
mov
xor
mov
shll
push
sub
xor
pushf
mov
aad
xor
icebp
call
jmp
fs
lahf
lea
xor
sub
fbld
and
or
sarl
xor
or
xchg
pop
mov
dec
inc
adc
bound
test
xchg
aam
js
inc
icebp
inc
inc
aas
jecxz
shll
mov
and
mov
dec
pop
mov
stc
sbb
cs
xor
ja
cmc
ret
pop
test
cmp
dec
hlt
pop
ljmp
repnz
mov
pushf
test
mov
add
sub
xor
sub
nop
mov
cwtl
lcall
leave
mov
add
push
and
jmp
aas
mov
and
xchg
insb
fisubs
mov
xchg
lahf
loope
mov
dec
or
fdivr
scas
idivb
xor
push
cltd
ljmp
xor
sub
fcoml
sbb
add
dec
outsb
inc
sub
dec
ds
inc
mov
test
mov
and
inc
pushf
stos
xchg
popf
sub
sbb
pop
adc
cltd
pop
mov
cmc
mov
movsb
lcall
mov
or
jmp
loop
repnz
stos
int
pop
sub
mov
test
jmp
cltd
lods
aam
pop
aaa
jle
sbb
adc
cwtl
addr16
pop
inc
adc
mov
rcll
outsl
repnz
icebp
rcll
dec
lahf
test
pop
out
arpl
inc
imul
xor
sarb
imul
shll
fidivs
inc
push
rcr
dec
call
xchg
mov
xchg
out
push
pop
add
add
dec
mov
inc
ss
fcoml
inc
std
mov
sbb
mov
mov
inc
pop
xchg
repz
xor
cmpsl
sahf
cmp
sub
arpl
jno
les
dec
xor
inc
rcll
es
stc
xor
mov
arpl
cmp
pop
xchg
cmc
sbb
xlat
mov
pop
les
movsl
fisubs
cmp
cld
push
jmp
dec
cmp
rcrl
inc
jge
pop
dec
jo
cmp
dec
pop
add
aaa
andl
and
dec
lahf
push
xor
dec
and
mov
sbb
and
jno
push
or
pusha
divl
cmpsb
cltd
addr16
mov
mov
cmp
pop
sbb
ds
add
pop
sub
nop
sub
ds
mov
mov
sbb
faddl
mov
stc
dec
jmp
mov
push
or
aaa
dec
xor
xchg
cmpsl
cmp
pop
push
fs
adc
cltd
pusha
movsl
inc
jp
adc
xor
xchg
mov
inc
cmp
cmp
loope
mov
mov
xchg
mov
pushf
icebp
sub
cmp
mov
pop
test
jmp
push
pop
stos
cs
inc
mov
and
ljmp
ds
add
imul
jecxz
pop
aad
and
movsl
pop
lds
mov
stos
addr16
mov
sbb
mov
sarl
pop
fmul
dec
pop
xor
lock
pop
aas
in
repnz
pop
out
lds
xchg
cmp
mov
cmp
pop
mov
ss
pop
cmp
in
pop
xchg
fs
fisttpll
popa
cmc
negb
push
pusha
xor
ret
out
test
mov
sbb
enter
cmc
fwait
in
es
int
jne
lods
ds
add
mov
icebp
pop
sub
lods
addr16
mov
sbb
dec
and
lds
sub
cli
loope
sub
xor
icebp
aaa
out
loopne
sbb
fisubrl
adc
push
jmp
and
decl
xchg
push
jno
movsl
or
cmc
cltd
fsubl
mov
pop
mov
sahf
std
mov
dec
mov
xor
jecxz
sub
jmp
jb
xchg
push
mov
and
popf
cmpsb
loope
mov
cmc
scas
repz
ret
and
xor
addl
adc
jno
and
test
add
add
dec
lock
push
jno
jge
push
mov
int3
aaa
outsl
sub
sti
fidivrl
jo
loope,pt
dec
sub
xchg
push
inc
jl
ret
pop
jle
mov
pop
pop
ds
add
inc
sub
mov
icebp
adc
cwtl
pop
pusha
adc
mov
mov
mov
jmp
ret
mov
and
nop
xor
push
shrl
mov
inc
sub
pushf
mov
add
sahf
cmc
hlt
and
add
sbb
add
cmp
fdivl
icebp
xor
mov
add
popf
stc
lcall
xor
push
jnp
or
mov
cs
jo
gs
inc
int3
lret
and
mov
or
mov
leave
adc
cmpsb
subb
clc
sbb
scas
fs
in
mov
jne
stc
and
insl
outsb
bound
xchg
popa
das
movsl
or
fs
adc
cmp
pusha
xlat
sbb
and
test
ja
rcll
test
push
popf
mov
pusha
inc
imul
cmc
add
pop
std
or
pop
stos
fildl
cmp
sbbl
mov
mov
lods
cli
sbb
cmp
es
dec
pop
push
je
add
ds
inc
shll
xchg
sbb
aaa
sub
xchg
outsl
xchg
movl
mov
mov
jo
seto
mov
pop
push
or
mov
pop
pop
in
jo
jno
sub
sbb
push
adc
adc
jno
sub
adc
in
jne
fldt
mov
das
dec
sub
out
xor
mov
popf
push
lods
stos
jb
mov
cmp
add
jo
jno
sub
fidivl
ja
call
xchg
lret
sub
push
enter
lahf
cmp
scas
fs
pop
scas
fcoml
add
pusha
mov
pop
add
adc
xor
pop
cmpsb
jecxz
jno
mov
pop
rcrl
scas
fwait
idivb
ss
mov
pusha
leave
imul
loopne
lods
pop
push
in
jno
mov
add
je
gs
mov
imulb
mov
pusha
or
scas
mov
in
mov
mov
jo
jno
pop
add
data16
sub
jge
mov
movsb
pushf
je
mov
push
mov
or
mov
jo
sub
lods
sahf
xor
sbb
sub
push
lahf
fs
outsl
pushf
jo
push
add
sub
negb
or
repnz
sub
inc
lahf
mov
loop
add
lret
call
sbb
sub
adc
or
add
dec
popf
call
xchg
or
cmp
dec
fcomps
or
aam
mov
roll
aam
fildll
in
popf
mov
ss
lahf
mov
popf
cwtl
and
push
out
jg
adc
push
or
sub
push
jbe
sahf
jns
ja
jne
aad
cltd
imul
pop
sub
sbb
xor
das
mov
xor
mov
sbb
scas
iret
mov
adc
aaa
add
fs
inc
push
test
fwait
inc
icebp
sub
pop
sub
loop
lea
cmp
sbb
or
aad
sub
test
pop
or
push
pop
xchg
fstps
pop
adc
adc
inc
add
addb
mov
inc
clc
or
or
add
sub
lcall
clc
pop
push
xchg
outsb
xchg
enter
push
arpl
xchg
sbb
pop
mov
and
outsl
shlb
pop
aaa
cmpsl
pop
sti
pop
mov
xor
jb
test
test
jg
cmpsl
out
dec
test
dec
fldt
mov
cwtl
stos
jo
xchg
shlb
dec
adc
add
sub
stc
loop
sub
sti
or
stos
or
dec
lret
rcr
je
or
cli
dec
mov
in
cmpb
dec
hlt
adc
js
into
sbb
data16
inc
jno,pn
sub
push
push
loope
xchg
jmp
push
or
outsl
dec
dec
std
add
std
mov
jp
adc
pop
xchg
mov
test
sbb
inc
jo
xor
dec
lods
mov
dec
movsl
xor
in
xor
iret
xchg
sub
inc
rcll
lahf
dec
int3
vcvtpd2psx
inc
jo
incb
mov
arpl
loopne
adc
jge
jbe
pop
sarb
andl
outsb
iret
mov
cmpl
xor
nop
lea
rcll
xor
nop
xorl
in
nop
mov
loope
insl
add
mov
dec
mov
icebp
xor
rclb
mov
mov
icebp
addl
aad
out
mov
inc
daa
mov
inc
adc
arpl
adcb
insb
popf
pop
push
jnp
fstl
loopne
cmc
xchg
into
mov
dec
inc
mov
mov
xor
and
pop
xor
pop
push
mov
subb
rcrl
push
xchg
jbe
push
mov
mov
mov
mov
mov
sbb
dec
mov
movsl
mov
mov
fnsave
faddl
adc
mov
sub
dec
addr16
pushf
mov
or
mov
pusha
insl
or
ret
fs
in
cmpl
xchg
jae
cmpsb
shll
push
xchg
in
insl
popf
sub
cmp
test
sti
sub
add
xchg
pop
xor
and
cmp
movsl
daa
dec
icebp
xlat
sub
popa
popf
and
adc
dec
inc
mov
sub
sbb
adc
pop
cmp
ljmp
add
out
pop
xor
dec
push
jmp
stos
pop
sbb
lcall
sbb
jle
lods
je
mov
fwait
pop
mov
and
push
mov
call
repnz
loopne
inc
imul
lds
adc
add
adcl
test
pop
fdivl
sub
shll
pop
cmp
cmp
mov
cmp
or
dec
xor
scas
sbb
es
jge
mov
mov
sub
add
stos
push
cmp
mov
jl
push
aad
sbb
pusha
sti
add
jno
or
int
mov
imul
mov
pop
clc
mov
adc
mov
dec
jo
push
mov
jge
dec
jno
mov
je
pop
ret
imul
nop
ljmp
jno
pop
push
cltd
xor
mov
test
out
jge
push
pop
pop
mov
inc
jmp
aam
cs
bound
fisttpll
dec
not
push
std
stos
mov
mov
mov
lods
insl
mov
sti
dec
push
add
push
or
mov
sub
adc
inc
cld
movsb
out
inc
and
pop
lahf
mov
mov
sbb
pop
inc
jne
mov
lods
out
sub
in
popa
adc
cmp
ds
add
pop
dec
fwait
xor
and
pop
mov
icebp
mov
push
in
jo
fninit
cmp
inc
cli
cltd
and
jle
add
push
jo
pushf
xor
mov
and
mov
pop
sbb
in
pop
icebp
fs
addr16
repz
lret
adc
popa
add
jno
dec
fdivl
icebp
jmp
lds
xor
imul
sbb
or
out
lea
in
pop
adc
lcall
jmp
andl
sbb
lods
add
jno
fcmovnu
stc
dec
mov
out
movsl
push
mov
popl
scas
and
sbb
mov
aaa
cmpsb
popa
adc
push
addr16
enter
hlt
ret
andb
adc
jno
outsl
in
pop
cmpsl
adc
xchg
pop
lea
scas
pop
mov
pushl
jno
outsl
add
mov
jmp
ds
add
test
lcall
shll
leave
scas
iret
arpl
fwait
cld
jecxz
xor
ss
hlt
mov
dec
adc
jno
outsl
in
pop
cmpsl
adc
lcall
movsl
sahf
pusha
push
sbb
cmp
and
loope
shll
test
cs
xor
cmp
mov
out
xor
hlt
daa
mov
inc
mov
stc
addr16
inc
push
jg
sbb
repz
fs
aad
pop
mov
push
push
sbb
and
testl
icebp
push
in
pop
scas
adc
sbbl
in
pop
aas
adc
cltd
pop
lea
test
imul
pop
mov
in
cwtl
cltd
xorl
inc
xchg
cmc
pop
sub
jb
int
and
fninit
stc
pop
roll
shl
pop
jno
arpl
jne
aas
xor
icebp
stos
jecxz
pop
adc
jl
test
xor
xor
pop
in
pop
dec
adc
int
pushf
mov
dec
js
test
add
stc
nop
sbb
add
ror
sub
adc
add
leave
inc
daa
mov
gs
mov
or
xchg
push
fistps
iret
add
dec
dec
push
xor
icebp
xchg
sbb
pextrw
ja
push
rcll
cltd
enter
cmc
cmpsl
in
es
lds
mov
pop
adc
sbb
mov
popl
xchg
xchg
cmpsb
dec
lcall
lods
mov
loope
cltd
int
shll
pop
xor
popa
js
cmpsb
in
addr16
sub
mov
adc
sbb
mov
out
das
adc
push
sub
sbb
enter
hlt
lret
fs
in
fsubl
icebp
push
in
pop
stos
adc
loope
cwtl
mov
xor
aaa
gs
outsl
std
and
fstps
jns,pt
mov
pop
sbbb
xchg
popa
pop
and
jno
scas
fildl
lock
jecxz
sub
shll
sbb
xor
scas
shlb
xor
sub
sti
cmp
cmc
ja
and
mov
add
shl
cmp
popa
pop
sbb
lods
addr16
cmc
push
mov
iret
testb
addr16
push
dec
sbb
adc
test
ljmp
enter
cmc
fwait
call
xchg
test
mov
add
and
or
in
cltd
jno
rcr
das
fsubl
insl
gs
mov
cmc
addr16
pop
mov
sub
sbb
enter
hlt
ret
test
mov
add
popf
pop
arpl
imul
pop
fldenv
mov
jns
cltd
stc
scas
shll
ficomps
gs
imul
dec
dec
xor
pop
adc
sbbb
in
xor
sbb
imul
xor
xchg
mov
repz
dec
lret
ss
gs
std
addr16
add
out
fstpl
shlb
ljmp
ds
jmp
std
dec
mov
xchg
movsl
cmp
addr16
push
mov
add
sbb
shll
add
inc
dec
mov
jecxz
pop
repz
mov
inc
pop
mov
icebp
push
in
pop
stos
adc
jns
lods
mov
xor
sbb
gs
outsl
stc
and
mov
add
hlt
cmp
inc
mov
sub
jmp
lds
popf
push
mov
cmp
mov
and
jg
aad
ss
pop
pushf
out
das
addr16
imul
xchg
ss
hlt
ret
andb
pop
addr16
outsl
sbb
add
xchg
xor
xchg
icebp
pop
in
pop
imul
sbb
pop
lds
mov
movsl
add
hlt
das
inc
es
xor
roll
jb
int
int
xlat
int3
mov
pop
pop
fdivl
outsl
xor
fwait
jecxz
pop
xchg
adc
mov
pop
addr16
push
mov
ss
mov
pop
cltd
push
outsl
sbb
and
testl
icebp
stos
jecxz
pop
jmp
loope
arpl
push
fwait
sbb
enter
hlt
iret
push
gs
outsl
xor
fwait
jecxz
pop
xchg
adc
sbbb
ror
aaa
gs
outsl
add
xchg
jns
jne
movsl
xor
pop
add
popf
stc
lcall
shll
aad
xor
xchg
rcrl
jns,pt
cltd
jno
fcmovnu
dec
iret
movsl
xchg
popa
gs
mov
popa
adc
outsl
addr16
push
push
sbb
test
les
jno
mov
mov
xor
mov
stc
xor
xchg
add
cmp
mov
push
popf
push
test
ss
dec
push
pop
das
pop
fcomps
bound
movsl
mov
xor
ljmp
andl
sub
or
inc
sbb
push
addl
insl
sub
ss
data16
mov
jno
bound
dec
popa
sbb
push
scas
jmp
and
mov
mov
in
ds
mov
mov
pop
lea
mov
insl
fldenv
mov
test
xor
mov
iret
add
lds
stos
pop
popf
mov
mov
pop
sahf
sub
dec
in
imul
mov
shlb
sahf
mov
adc
adc
mov
or
jmpw
sub
mov
movsl
inc
jae
mov
mov
sahf
mov
cmp
out
jae
ss
imul
mov
jge
sub
stos
rorb
jmp
and
repz
cltd
cli
pushf
push
push
pop
popf
push
stc
xchg
xchg
mov
filds
add
scas
lds
stos
cmp
sti
mov
dec
mov
ffreep
pop
and
dec
leave
test
xchg
lahf
add
lea
inc
test
jns
in
rcrb
adc
shrb
rorb
in
push
add
or
lods
xchg
xor
mov
daa
and
lret
out
adc
cmp
pop
insl
sbb
jle
fnstenv
xchg
loope
mov
fldl
es
push
adc
movsl
stos
js
sub
aad
inc
jp
push
or
cld
lahf
clc
mov
inc
cltd
xor
adc
mov
xchg
inc
mov
pop
fildl
das
cmp
dec
or
sub
inc
sbb
scas
sub
mov
cmpsb
stc
adc
aad
imul
cmova
dec
ret
xlat
pop
pop
adc
test
pop
mov
lcall
leave
pop
lret
dec
dec
fs
cli
mov
cmpsl
loope
fldl
fs
cmc
cltd
add
jle
aas
pop
lahf
pop
inc
loope
xchg
jmp
or
fidivrs
mov
scas
in
test
loope
mov
cwtl
ds
inc
test
fbld
insb
cli
adc
dec
xchg
sub
mov
addb
jmp
and
xchg
ljmp
rol
mov
insl
xor
pop
and
add
mov
in
add
pop
clc
addl
stos
jmp
push
xchg
push
insl
or
test
ficomps
fdivrs
leave
mov
pop
ret
ss
adc
adc
in
out
clc
movsl
roll
adc
xor
cwtl
adc
jmp
lret
negl
icebp
inc
adc
or
cmp
mov
movsl
imul
add
push
cmp
movsb
push
or
cmp
add
xor
aam
insb
pop
shlb
push
xor
xchg
std
iret
mov
or
dec
mov
popf
inc
out
jge
or
xor
or
xor
mov
imul
outsb
data16
das
cld
adc
fisubl
sbb
mov
push
lcall
int
and
adc
mov
jle
subb
pusha
fwait
or
les
xor
and
fcompl
dec
inc
xchg
xchg
mov
cld
lds
stos
adc
aas
xor
jmp
push
xchg
mov
push
dec
jbe
pop
test
and
inc
imul
mov
xor
rolb
and
mov
sub
adc
mov
jo
sbbl
mov
rorl
inc
cmp
insl
jb
outsb
test
inc
cmc
push
fdivrs
cmpsb
xor
cmp
xchg
enter
mov
dec
jo
rcrw
xor
cmp
aam
inc
scas
fidivrs
pop
and
jae
cmpsb
sub
add
sti
xorl
xor
xlat
test
arpl
dec
andl
inc
popa
decb
pushf
shrb
or
push
adc
or
lock
orl
popa
sbb
pop
xorb
mov
test
pop
cmp
or
or
sbb
push
dec
xchg
pop
loop
imul
fdivs
pop
and
push
add
or
mov
or
xchg
mov
loope
lock
divb
push
frstor
fisttpl
sub
or
pop
pop
mov
sbb
push
mov
or
push
lret
or
cwtl
adc
mov
xor
mov
mov
fcmovnbe
xlat
lret
in
movsb
or
cwtl
lret
nop
lret
test
adc
popf
sbb
cmp
je
nop
pop
test
imul
mov
test
mov
mov
iret
lahf
mov
mov
dec
push
outsl
push
pop
dec
aas
fsubl
pop
mov
dec
mov
mov
test
xchg
arpl
adc
adcl
mulps
dec
xchg
pop
xchg
dec
test
inc
cs
cmp
sub
cmp
mov
nop
out
repz
daa
test
or
push
lds
bound
call
push
aas
cmp
das
ds
jmp
js
inc
adc
mov
xchg
adc
hlt
jae
pop
adc
cmp
xchg
stos
ficoms
push
add
iret
push
xchg
push
mov
mov
or
arpl
dec
jg
mov
push
setp
sub
test
or
dec
icebp
cs
inc
pop
out
mov
pop
hlt
in
fcompp
shrb
cltd
xlat
jns
inc
mov
ljmp
push
xchg
mov
dec
xchg
lds
jg
inc
or
imul
inc
cltd
clc
mov
adc
push
cmc
rclb
mov
shl
mov
jecxz
ret
iret
scas
iret
cltd
fldenv
or
bound
js
cmp
pop
cltd
dec
divps
fs
scas
mov
add
pop
scas
inc
icebp
pop
fisttpl
pop
repz
add
jbe
cltd
lods
jo
mov
fidivl
sub
xlat
fwait
mov
leave
pushf
jp
inc
mov
stos
pop
adc
mov
add
push
out
push
loopne
lcall
or
cmp
nop
dec
fldt
adc
insl
jae
scas
pop
cli
les
lret
iret
pop
xchg
push
or
pop
dec
dec
add
push
cmpsl
xor
jmp
data16
lea
movsl
xchg
mov
pushf
add
or
jo
adc
mov
jno
mov
xor
pop
cmp
or
repz
lret
ret
iret
push
xchg
popa
and
dec
ret
dec
pop
stc
dec
mov
pop
out
std
pop
xlat
dec
fldt
add
adc
pushf
outsb
pop
sub
fidivl
outsb
sahf
cltd
aas
outsb
xchg
movsl
cmpsb
aaa
cmc
xor
ret
add
idiv
adc
mov
test
leave
leave
js
test
loop
xorb
inc
sbb
popf
fsubrl
inc
cmpsl
data16
popa
jo
xchg
sub
jecxz
inc
movl
push
movsb
arpl
ret
mov
std
inc
divb
in
xchg
out
ss
inc
div
ret
call
mov
fisttpll
arpl
push
dec
cmc
dec
rclb
adc
maxps
inc
cs
sub
and
lods
mov
cmp
lods
jo
movsb
mov
mov
cmp
lods
inc
mov
js
mov
mov
test
icebp
icebp
shlb
lock
mov
mov
adc
lret
push
pushf
sub
or
mov
out
lret
dec
repnz
lret
push
lret
scas
pop
arpl
popf
test
sbb
cmc
mov
pushf
lds
in
push
gs
dec
xor
mov
mov
gs
in
add
push
rcl
loopne
shl
loopne
shlb
xchg
in
jmp
cmc
mov
lahf
lds
push
arpl
pop
xor
pop
adc
dec
imul
jnp
inc
dec
dec
pop
push
dec
pop
pop
movsl
dec
sub
dec
cmp
dec
or
dec
sbb
dec
jmp
cmc
dec
sti
pop
lds
pop
aad
fldt
and
fstpt
lock
lcall
pop
lcall
movsl
cltd
sub
cltd
cmp
cltd
or
cltd
sbb
cltd
jmp
cmc
cltd
sti
insl
lds
fcmovnbe
icebp
pop
xchg
inc
imul
adc
in
aam
les
aam
les
rcll
icebp
add
xchg
jno
cmp
xchg
jmp
jmp
cmc
jmp
lret
mov
and
adc
adc
jno
mov
cli
fbld
rorb
loopne
rcr
loopne
shr
loopne
sarb
loopne
rcrb
loopne
sarb
cmpsb
rorb
roll
push
push
sarl
adc
test
flds
iret
sub
sub
sti
fsubs
iret
or
mov
fcmovu
iret
ljmp
iret
lret
dec
fwait
pop
xchg
pop
xchg
dec
jnp
cmpsl
rcrl
sbb
xor
adc
push
lret
push
lret
es
mov
xor
xchg
pop
jge
and
lea
repz
fisttpll
add
in
or
push
mov
push
mov
sbb
aas
fdivl
lods
dec
insb
mov
or
pushf
decl
fwait
add
and
cmp
ja
fbstp
mov
xchg
stos
loopne
sarb
cmpsb
rorb
inc
inc
subb
loopne
add
dec
loopne
rcrb
loopne
shrb
loopne
sar
fbld
rorb
loopne
rcr
loopne
shr
loopne
sarb
loopne
rcrb
loopne
sarb
cmpsb
fcmovbe
ret
adc
dec
mov
into
das
push
xchg
push
scas
sarl
jmp
into
mov
mov
cmp
lods
mov
dec
pop
rorl
scas
or
jge
imul
and
repnz
mov
xor
stos
xchg
test
test
ret
test
test
pop
pop
out
repnz
negb
cmp
push
lret
or
sub
sbb
cld
aad
lret
mov
or
mov
inc
ljmp
fucomi
std
mov
mov
int3
mov
cmp
jmp
aas
sti
jmp
insl
mov
imul
adc
add
and
aam
mov
in
rcl
fcmovu
in
jmp
lds
aaa
movsb
test
xor
mov
sub
jno
pop
jb
xchg
jae
jnp
push
jb
xchg
stos
jno
xchg
xorl
jnp
or
mov
xchg
jno
xchg
shll
fsubrs
push
inc
pop
cs
cmp
adc
cmp
lods
and
lods
sub
lods
lock
lods
or
lods
mov
xor
test
test
xlat
test
movsl
and
stos
xor
daa
jno
loope
js
test
das
mov
ds
mov
out
fildll
rolb
loopne
sarb
pop
fstpl
xchg
mov
pop
jne
inc
mov
xor
push
iret
cmp
dec
mov
mov
adc
cmp
lods
or
lods
rolb
mov
test
test
mov
test
cmp
mov
xchg
stos
cmp
push
stos
dec
xchg
stos
lahf
test
test
repz
stos
jmp
stc
test
mov
pop
pop
push
popf
cmp
dec
sbb
insb
gs
mov
dec
mov
mov
mov
xor
dec
sub
dec
stc
pop
ret
dec
rcrl
dec
leave
pop
rcrl
gs
sbb
popa
mov
adc
lock
sbb
aam
mov
fcom
enter
ror
fmul
mov
ror
enter
jo
nop
lret
test
adc
lret
mov
push
out
repnz
div
ret
jecxz
and
mov
inc
jb
xchg
push
jb
xchg
scas
jno
xchg
xchg
cltd
jge
ftst
iret
int3
iret
movsb
fldcw
into
xchg
mov
sub
fldl
aad
iret
sbb
or
and
add
sub
sbb
lock
iret
clc
fsubrs
iret
rcr
aam
mov
fchs
iret
enter
nop
inc
jno
cltd
xor
xchg
xor
lea
test
mov
arpl
dec
mov
push
ljmp
mov
aad
fst
nop
loopne
rcrl
pop
orl
inc
movsl
dec
adc
pop
repnz
push
ret
push
add
popf
dec
mov
popf
mov
cmp
repnz
pushf
ret
pushf
rorb
xchg
xor
fs
inc
sysenter
lcall
jb
xchg
inc
jb
xchg
xorl
jg
sbb
xchg
jno
xchg
out
in
add
jo
mov
mov
mov
dec
mov
mov
cmovp
stos
dec
cmp
dec
adc
pop
shll
lahf
push
jg
xor
mov
pop
stos
mov
test
std
push
inc
pop
movsb
das
push
mov
pop
ja
xor
pop
push
xchg
and
je
inc
clc
xor
test
mov
test
and
dec
pop
das
je
out
dec
adc
xor
mov
jo
fldenv
mov
and
lahf
rolb
fstpl
test
in
push
xchg
aad
xchg
loopne
rcrb
loopne
shrb
xor
pop
pop
or
lea
test
xchg
ja
mov
pop
roll
or
cmp
dec
cmpsb
mov
dec
bound
repnz
cltd
adc
mull
pop
cmpsb
sahf
push
mov
add
adc
push
adc
imul
sbb
sbb
scas
insb
mov
and
lcall
or
and
cmp
or
lcall
sbb
mov
loopne
add
shl
adc
sti
fimuls
jmp
pop
and
or
sbb
aam
mov
push
pushf
lods
fidivrl
jmp
xor
popf
push
movsb
sub
adc
xchg
xchg
aaa
mov
scas
loope
out
and
stc
xor
lret
sub
ret
inc
jmp
lods
rol
xor
jno
inc
pop
jmp
ret
das
pop
xchg
lret
rclb
dec
push
lret
push
or
jle
cmp
in
repnz
ljmp
lock
aas
mov
dec
mov
and
xchg
addr16
dec
rolb
std
xor
mov
adc
mov
int3
test
pop
repz
sub
cmc
dec
adc
imul
push
mov
lret
bound
test
mov
adc
adc
mov
cmp
adc
pop
out
andl
shrl
push
sbb
scas
mov
or
cltd
add
popf
mov
and
mov
int3
out
bnd
mov
lret
pop
sub
dec
cmp
ljmp
push
inc
cli
push
cs
aas
lock
xchg
adc
or
mov
in
outsl
lods
or
pop
js
and
dec
hlt
pop
lock
negb
dec
dec
aad
int
or
imul
mov
leave
mov
call
jo
cmp
jno
pop
lds
pop
dec
dec
pop
mov
pop
test
sub
aas
inc
pop
mov
pop
or
scas
data16
ret
xor
jnp
mov
aaa
mov
mov
popa
push
pop
mov
pop
addr16
fdivrl
cmp
or
rcll
pop
xor
mov
jnp
dec
nop
add
or
cmp
fisubl
mov
dec
cwtl
push
popa
cmpsl
dec
add
cmp
push
xchg
scas
pop
and
lods
in
test
xlat
inc
out
pop
adc
dec
divb
mov
fidivl
dec
movsl
bound
xor
inc
add
mov
or
xchg
dec
dec
push
push
push
popf
and
or
jl
mov
lds
insl
out
in
iret
movsb
aam
les
jno
jns
add
dec
imul
pop
mov
stc
les
aam
and
add
pushf
sub
pushf
sbb
lahf
mov
stos
mov
sbb
cmc
cld
test
ret
test
test
lret
xorl
js,pn
out
sti
mov
imul
dec
push
adc
sbb
pop
int
shll
lret
xchg
sti
add
pop
jns
cmpsb
aas
or
data16
sub
adc
repz
pop
enter
cmp
jae
adcl
pushf
rorl
xchg
cs
xchg
adc
insl
sahf
push
cwtl
cltd
add
or
xchg
sub
pop
jae
ja
outsb
xor
dec
pop
add
sbb
ljmp
and
cmp
and
popf
xchg
in
outsb
sbb
insb
jg
pop
fwait
pop
cmp
dec
clc
or
cmp
insb
pop
ja
jl
mov
imul
sub
cwtl
xor
popf
mov
add
mov
jmp
lods
inc
popf
outsb
in
push
sbb
insb
imul
pop
pop
inc
dec
dec
std
push
dec
pop
pop
mov
cmp
mov
mov
sbb
out
out
testb
pushf
ror
mov
loope
push
popf
pop
adc
cmp
sti
inc
sub
test
jo
pop
push
popf
mov
pop
je
inc
xor
inc
pushf
popa
or
xchg
add
add
fld
iret
call
cmp
lods
mov
leave
stos
xlat
or
pop
iret
jae
mov
pop
sub
fs
inc
rdtsc
mov
mov
ljmp
sti
add
dec
loope
in
dec
in
push
out
insl
shll
sub
loope
mov
push
cmp
xor
pop
jne
inc
add
cmp
pop
mov
sbb
rorl
push
fistps
and
xor
iret
inc
in
call
jecxz
pop
inc
mov
popf
test
int
pop
xchg
sti
leave
mov
mov
pop
mov
pop
pop
xchg
das
pop
xchg
inc
mov
xor
mov
dec
xchg
mov
imul
iret
movl
ret
inc
fidivl
test
repnz
xchg
mov
xor
dec
mov
xor
and
sbb
cmp
xchg
add
out
cli
adc
repz
and
call
test
cmp
dec
mov
and
ficomps
xlat
xor
out
shrb
pop
or
ret
sbb
xchg
mov
leave
mov
cld
mov
cmpsl
test
xor
out
add
xchg
imul
out
or
cmp
xlat
push
cwtl
sub
ja
push
or
mov
push
add
lcall
sub
repz
rcrb
xor
mov
aas
ds
out
fsubp
in
mov
jns
xor
xor
xor
pop
xchg
fs
mov
pop
dec
and
xchg
jns
cmp
mov
or
and
mov
sub
mov
sub
mov
jmp
outsb
bound
mov
sbb
das
mov
in
and
pop
jne
sub
lods
das
or
sbb
dec
sub
faddl
lods
mov
xorb
xchg
jno
xchg
fnsave
xchg
movl
inc
or
push
and
mov
lea
loope
outsl
hlt
push
or
lret
lods
lret
mov
xchg
mov
popf
out
pop
dec
not
xor
or
decl
popf
pop
out
imul
sub
sbb
mov
inc
aas
stos
in
jmp
cli
dec
mov
mov
bound
out
pop
cmp
cmp
popa
scas
dec
adc
mov
cwtl
mov
mov
test
inc
in
jle
jmp
xchg
cmc
jnp
repnz
jmp
ljmp
jns
mov
mov
jge
insl
mov
dec
cmp
pop
mov
fadd
faddl
outsb
fistpll
in
popa
dec
add
das
stc
xor
jno
sub
jns
repz
lea
pop
imul
dec
loopne
rclb
loopne
shrb
loopne
rcl
cmp
fnstcw
leave
xchg
divb
xchg
loopne
sarb
rolb
pushf
dec
jg
dec
xor
insl
out
fisubl
pop
hlt
add
lret
mov
mov
push
add
loope
lret
sbb
out
pop
leave
mov
lret
jae
and
pop
int
lret
mov
frstor
xchg
loope
out
pop
fistpl
int
popf
pop
inc
mov
pusha
or
push
imul
ljmp
cmc
shl
fimuls
loop
mov
test
enter
iret
inc
insl
addl
les
rcrl
stos
push
or
pop
cmpsb
sub
imul
sbb
testl
in
mov
in
mov
test
xor
xchg
mov
das
jbe
stos
pop
sub
pop
test
aad
test
mov
in
leave
xchg
jns
out
in
fisttps
mov
pop
jnp
mov
push
mov
cmc
cmp
mov
adc
fwait
and
mov
dec
sub
dec
inc
dec
stos
push
mov
jb
test
pop
dec
jno
xchg
push
inc
add
das
sbb
sub
xor
insl
ss
sbb
or
adc
mov
jecxz
cmp
ja
sahf
cmp
jg
roll
es
aad
nop
test
pop
mov
ja
jne
sbb
dec
add
mov
adc
mov
int
mov
push
xchg
imul
pusha
push
ljmp
or
ds
dec
mov
jg
inc
jns
test
xchg
rolb
push
jmp
and
xchg
sub
cmp
mov
sbb
das
xchg
jo
jmp
fldl
js
outsl
mov
jae
push
dec
imul
mov
test
test
out
jecxz
ret
incb
popf
jmp
mov
ret
lret
scas
fwait
sbb
scas
icebp
sbb
jno
jb
inc
iret
lcall
adc
mov
sbb
inc
jmp
xchg
pushf
in
xchg
push
push
adc
andl
lods
movsl
imul
mov
pop
mov
adc
adc
arpl
shll
or
xchg
xor
test
jne
xchg
or
xor
inc
or
jne
scas
sub
pop
fisttps
dec
imull
inc
jge
sub
sub
inc
and
les
push
lcall
xchg
call
bound
icebp
aam
cltd
leave
sahf
add
cwtl
and
dec
lea
mov
popf
jp
bnd
mov
int
int
fisttpll
fnstsw
or
push
insl
and
xor
pusha
in
mov
inc
daa
mov
mov
mov
mov
dec
stos
mov
inc
fwait
and
fdivrp
cmp
ja
in
inc
dec
cmpsb
cltd
aas
and
rcrl
push
inc
shrl
dec
icebp
pop
repz
add
sub
xchg
fildll
loope
lret
mov
loop
sub
sub
push
lea
cld
fwait
cld
mov
xor
xchg
dec
jns
shufps
fisttpl
add
adc
outsl
xchg
adc
jecxz
xor
push
xchg
jmp
paddw
push
mov
xchg
pop
jge
push
cmp
inc
jp
jge
fimull
xor
test
out
les
dec
jb
jno
mov
mov
mov
jmp
mov
cmc
mov
rclb
cmpsb
pop
mov
jns
xchg
or
out
icebp
add
inc
call
ja
lcall
lret
push
xor
sub
add
add
das
xchg
mov
xchg
xor
pop
add
xor
movl
push
jg
lds
mov
xchg
inc
jns
jecxz
daa
xchg
push
jecxz
xchg
mov
movsb
adc
and
shr
sbb
jnp
and
xchg
or
or
mov
enter
mov
movb
sbb
fstpl
sbb
mov
jnp
sbb
hlt
adc
stc
pusha
decl
out
loopne
pop
ljmp
lock
dec
pop
pop
shlb
sbb
or
setnp
pop
iret
sbb
rol
data16
test
mov
xchg
loop
add
and
and
jmp
adc
push
pop
inc
out
iret
aam
add
and
neg
cmp
pop
adc
js
mov
jbe
daa
and
hlt
or
movb
sbb
sbb
cwtl
adc
imul
xchg
xchg
pop
add
inc
and
jp
shrl
or
lret
sbb
rclb
repnz
scas
push
xor
mov
adc
xor
sbb
data16
xor
popa
js
pop
pop
and
mov
gs
xorl
pop
and
sub
jmp
lods
std
xchg
pop
or
inc
dec
jne
mov
jae
mov
negb
out
rol
movsb
xor
push
add
pop
jb
jp
xchg
cmp
enter
scas
mov
jo
insl
adc
inc
mov
mov
ret
xor
push
cmp
pushf
ret
xor
inc
test
inc
notb
mov
mov
arpl
loope
jmp
rcll
ss
call
int3
outsb
jns
mov
lret
pop
mov
enter
sbb
push
and
fsubl
std
push
xchg
cmp
shl
mov
xchg
fwait
cmp
mov
cli
xchg
xor
mov
fwait
mov
arpl
sub
sbb
aas
shlb
xchg
shl
mov
sbb
xor
xor
les
xor
int
cld
mov
mov
fs
shll
xor
inc
mov
lcall
push
popa
cmpsl
mov
pop
pushl
cmp
xchg
lahf
scas
jecxz
aaa
dec
aaa
jge
int
les
xchg
push
in
push
loopne
cmp
mov
or
jo
mov
pop
mov
xchg
insb
jb
xchg
inc
jb
xchg
cmp
imul
inc
or
pop
pop
test
mov
out
mov
ret
das
popf
repz
js
and
pusha
pop
out
repz
imul
mov
and
push
xchg
dec
jge
pop
movsl
dec
daa
dec
popf
jae
lret
xchg
or
xchg
lcall
mov
fidivl
jnp
add
lcall
sub
fwait
xor
cmp
inc
push
js
mov
stos
pop
xor
mov
loop
mov
xor
sbb
mull
ret
mov
hlt
shlb
adc
andb
dec
aaa
pop
lock
enter
mov
shrb
sbb
sarb
cmc
mov
push
and
nop
test
dec
adc
scas
add
dec
daa
adc
mov
sarl
mov
mull
ret
pop
mov
xchg
inc
mov
add
addl
ja
push
jbe
mov
loopne
pop
jmp
mov
fildl
sub
push
pop
push
cmp
in
jmp
in
lods
xor
pop
pop
inc
aas
into
in
mov
out
xor
and
cmpl
or
ret
dec
cmp
push
push
int
dec
xchg
add
cmp
xchg
lods
jmp
push
hlt
rcrb
lds
shrb
jno
sub
les
sub
dec
in
dec
jnp
inc
dec
push
dec
cmp
shrb
pop
imul
cmp
or
pushf
lret
or
pushf
ret
push
jmp
pop
dec
cmpsl
pop
insl
pop
vfrczpd
repz
push
pop
je
add
pushf
cli
in
inc
jne
mov
mov
aas
jns
jbe
stos
fildll
rorl
xchg
cmc
xor
mov
xchg
repz
shrb
test
adc
repnz
push
pop
popa
jmp
jne
mov
test
jl
pop
push
hlt
mov
and
push
test
dec
cmc
stos
mov
pop
les
addr16
test
repz
pop
dec
xchg
test
push
pop
adc
loope
xor
cltd
ljmp
out
loope
dec
inc
or
test
cld
fldt
add
in
mov
leave
rcrb
sbb
scas
sub
out
dec
mov
out
insl
push
jno
ret
add
inc
out
std
mov
roll
pop
jl
inc
add
dec
pop
or
fwait
test
scas
xor
mov
aas
xor
repnz
rolb
out
jno
jne
xchg
or
enter
movl
mov
mov
xor
popf
sbb
scas
xchg
shl
mov
add
hlt
xchg
cmpb
push
mov
out
rorl
jo
loopne
jg
aad
mov
ret
sub
out
stos
lcall
mov
mov
push
ljmp
adc
mov
pop
mov
dec
dec
xchg
out
jnp
jns
jecxz
orl
imul
lret
popa
shll
or
pusha
insb
adc
sub
fs
pop
pop
adc
int3
jmp
jl
test
push
xchg
xor
or
push
test
push
pop
stc
pop
sbb
sbb
xchg
push
mov
push
sub
and
pop
dec
mov
mov
push
cwtl
scas
scas
mov
pop
loope
lret
xchg
daa
push
push
pop
cli
stos
stos
stos
fistl
addr16
mov
fstpl
jo
push
leave
mov
push
mov
or
or
pop
jnp
js
lds
cmp
dec
cmp
pop
js
sub
cmp
jmp
mov
popaw
pop
mov
fcomp
push
arpl
xor
adc
loop
icebp
test
and
jl
inc
test
sbb
mov
adc
out
sarb
in
lret
xchg
jae
ljmp
rcll
inc
add
pop
rcll
inc
js
cmc
pop
jmp
addr16
aad
lcall
cmp
ljmp
leave
adcl
and
cmp
cmpsb
fldenv
fdivrs
xchg
rolb
pop
inc
and
push
push
std
pusha
add
push
mov
sub
cltd
ret
dec
xchg
push
pop
in
fcmovne
mov
ror
mov
pop
and
cmp
xorl
in
pop
cmc
jmp
fadds
lret
jno
mov
fs
mov
insl
out
lods
add
add
les
add
lock
pushf
shl
mov
out
leave
loope
xor
lret
xchg
call
xchg
insb
jns
iret
daa
dec
rclb
or
insl
sub
cmp
rcr
in
mov
popf
test
fcmove
enter
dec
mov
sbb
scas
cmc
jae
cmp
or
or
push
sbb
loope
test
call
ja
xchg
dec
outsl
xchg
pop
adc
dec
add
icebp
xor
sub
xchg
xchg
jbe
pop
lds
cmpsl
or
push
or
mov
push
xchg
pusha
inc
imul
push
inc
sti
jp
mov
dec
int
or
popf
gs
xor
inc
xchg
test
stos
push
or
jl
movsb
mov
mov
scas
clc
xchg
cmp
push
arpl
into
xor
hlt
pop
imulb
out
mov
cmp
arpl
stos
pusha
or
xchg
imul
cmp
mov
push
adcl
jmp
sti
std
or
lret
adc
loope
sbb
fisttpll
lret
lock
mov
lret
lret
out
movsb
jne
dec
leave
enter
adcl
js
lahf
into
lcall
aas
repz
jl
xor
test
sub
rcrb
push
test
imul
icebp
cli
mov
mov
mov
arpl
es
xor
movsl
mov
mov
int
pop
or
int
jecxz
imul
popf
mov
mov
ret
add
andl
dec
loopne
leave
test
inc
inc
xchg
out
insb
mov
jecxz
lds
or
mov
mov
es
repnz
into
push
dec
cmp
and
inc
cmc
mov
dec
rcrb
mov
fwait
mov
add
shlb
aad
sbb
pop
push
lds
pop
out
movsb
fstp
sub
mov
cmpsl
mov
test
or
std
aam
comiss
inc
out
pop
push
xchg
pop
pop
ja
xor
mov
cmp
sahf
push
inc
mov
push
enter
mov
je
adc
lahf
sar
stos
fisttpll
repz
popf
scas
xor
pop
das
test
ret
mov
je
inc
adcb
xchg
std
in
or
out
and
push
imulb
push
in
add
mov
add
into
push
dec
push
push
outsb
int
mov
rorl
inc
jne
stos
inc
dec
sub
ret
adcb
insb
negl
jnp
sub
sub
outsl
jmp
cmc
push
lods
popa
mov
sbb
jns
mov
imul
dec
lock
fiadds
sub
and
pop
adc
push
clc
pop
fwait
aas
pusha
repnz
lods
mov
and
inc
pop
out
jg
xor
fildll
jge
and
pop
pop
cltd
xchg
addr16
loope
jg,pt
dec
lret
pop
test
iret
add
ss
pop
shll
int3
mov
repz
stc
cmp
cmpsb
push
out
and
dec
hlt
mov
xor
movsl
push
dec
adc
mov
push
inc
sti
out
pop
in
xor
sahf
stos
adc
mov
jbe
add
pop
mov
cmp
inc
cwtl
cltd
pop
push
das
or
sub
lret
mov
inc
pop
orl
cli
mov
push
and
adc
aam
cwtl
call
jp
sbb
subl
idivb
je
pop
push
sahf
std
ret
imul
xlat
cli
push
xchg
dec
xlat
pop
lods
pop
loop
sahf
xchg
sub
dec
je
test
imul
in
cmp
icebp
clc
cmpsl
inc
pop
add
xchg
int
and
mov
add
push
addr16
aaa
sbb
cmpsl
fcoms
rcrb
icebp
and
js
mov
jno
call
cld
loope
pop
popf
sub
jmp
loop
pop
and
fwait
out
mov
cmc
pop
adc
jnp
xchg
gs
roll
ss
pop
pop
pop
aas
jne
pop
dec
lods
ret
gs
push
pop
or
inc
sbb
addl
xchg
xor
xor
mov
aaa
stos
addb
jl
sbb
lret
sub
jb
cmpsl
insb
and
aam
pop
push
leave
xor
arpl
xor
mov
push
mov
lcall
int3
inc
out
mov
lret
add
dec
add
adc
call
sbb
cld
dec
addr16
pop
or
jg
mov
push
out
lock
aad
pop
mov
pop
ds
test
scas
repz
cmp
xchg
inc
or
xchg
push
daa
jmp
push
adc
inc
pop
popf
mov
cmpsb
adc
je
fwait
xchg
jnp
lods
inc
sub
int3
xchg
test
inc
add
sbb
mulb
sub
std
out
fisubrl
push
dec
pop
lret
cmpsb
and
popf
js
repz
add
sbb
mov
repnz
pop
pop
pop
aad
mov
adcl
hlt
ljmp
aam
push
push
jge
and
adc
jne
pop
jmp
aas
mov
mov
xchg
add
and
cld
pop
mov
jp
loope
add
arpl
das
int
adc
aas
jo
loope
mov
jge
push
mov
xor
mov
iret
data16
sahf
lret
mov
imul
gs
adc
push
jns
pop
mov
or
cmp
js
xchg
inc
lds
inc
fstpl
adc
inc
mov
mov
je
push
fldl
int
mov
rep
mov
dec
dec
not
testl
aaa
lds
push
adc
movsb
div
ja
mov
jecxz
inc
sub
das
data16
mov
fimuls
fidivrs
inc
pushf
mov
jl
add
xbegin
cwtd
stos
sub
hlt
xchg
mov
xchg
mov
jl
movsl
pop
adc
ja
push
out
or
dec
inc
xlat
insb
cmp
dec
cmp
outsl
dec
cmpsb
xlat
cmp
stos
and
fsubs
push
imul
loopne
jno
fstp
in
add
xchg
rolb
jg
popa
fadds
inc
push
mov
sub
shrl
fbld
add
shlb
in
push
cwtl
xor
pop
decb
into
inc
mov
inc
xchg
pop
inc
lods
jg
mov
mov
imul
sub
cmp
movsb
push
cltd
xor
outsb
jb
js
lret
out
pop
testb
xlat
jmp
jmp
mov
imul
fcomip
loop
cmc
shlb
fisubs
vmaxsd
push
lret
jae
lcall
dec
or
fildl
fisubrl
cmp
sti
sarb
imul
push
mov
jg
sbb
orl
push
std
pop
pop
shlb
icebp
nop
fs
cmp
adc
lahf
lcall
ret
xchg
je
push
cwtl
inc
movlps
add
lcall
sar
dec
cmpsb
push
das
dec
xor
nop
pop
divps
leave
push
insl
movsl
cmpsl
add
movsl
cmpsb
cmpsl
or
ss
mov
mov
push
push
stc
pop
and
lret
lret
bound
xchg
pop
add
jbe
inc
xchg
xor
cmp
fwait
sti
mov
sbb
ret
lret
xchg
or
out
mov
sbb
jbe
outsl
sbb
sub
jo
add
shll
lahf
dec
mov
sarl
pop
fld
push
cwtl
out
xor
stos
mov
fidivrs
and
insb
roll
xchg
cmc
dec
mov
push
lods
data16
andl
popa
mov
jg
gs
push
cmp
imul
mov
xor
cmp
mov
jmp
xor
inc
mov
outsl
sbb
xrelease
mov
or
cmp
mov
mov
fwait
je
ja
loop
cmp
mov
sub
pop
push
push
orb
lds
dec
pop
daa
sbb
stos
popa
aad
std
pop
fcmovnb
jp
sti
mov
movsb
xor
xor
sub
jb
or
stos
and
ljmp
scas
out
mov
lahf
ds
subb
js
sbb
or
lock
lret
push
mov
push
ljmp
adc
mov
mov
or
or
cmp
fbstp
lea
das
out
jno
arpl
fstl
and
mov
mov
out
dec
repnz
jmp
jecxz
fdivrs
cmp
call
movsl
out
jecxz
push
jae
mov
or
out
jmp
jmp
cmp
jne
pushf
ljmp
loopne
fcompl
or
dec
push
sub
pop
mov
je
cmpsl
or
pop
adc
sub
fwait
mov
loope
aam
jo
fwait
pop
push
or
pop
mov
pop
pop
dec
xchg
push
or
xor
or
aad
mov
loop
pushf
call
dec
sbb
lea
imul
xor
xchg
push
push
xchg
or
sbb
cmp
jg
dec
mov
lahf
lea
or
pop
and
lret
pop
test
pop
fld
aas
rcr
mov
jecxz
cltd
mov
daa
decb
xchg
cmp
adc
iret
inc
xchg
cld
lret
jo
xchg
insb
stc
lods
and
inc
mov
xchg
sub
pop
sbb
pop
or
jne
lods
dec
pop
in
call
sbb
lock
imul
and
sbb
ret
or
pushf
addb
dec
jg
aas
cmpsb
fisttpll
mov
aaa
xor
ss
xchg
pop
cmpsl
ss
and
fld
scas
xchg
inc
sbb
mov
insb
mov
xlat
aad
mov
imul
dec
jbe
xchg
test
and
icebp
jle
sub
filds
dec
jle
sti
cld
enter
or
dec
mov
outsl
push
arpl
scas
or
bound
xchg
xor
mov
push
pusha
sub
push
pop
xchg
cmp
lods
fld
in
clc
fsubrs
pop
std
or
mov
inc
in
xor
push
or
cmpsl
xor
lods
adc
aas
jmp
or
js
inc
inc
xchg
dec
out
adc
xchg
or
in
out
rorb
mov
sti
leave
mov
fdivrs
inc
js
pop
dec
arpl
int3
popa
mov
or
push
out
cmp
insl
pushf
inc
push
fwait
lret
stos
mov
pop
inc
ret
add
inc
nop
daa
daa
sbb
xlat
mov
out
cmp
add
or
popf
cmp
js
lcall
icebp
cmp
xor
fildll
gs
jp
cmp
push
sti
cmpsl
loope
je
add
pop
inc
or
mov
into
cld
mov
loopne
aad
sbb
dec
fldcw
leave
stos
sbb
mov
xor
mov
dec
mov
push
fisubs
dec
xor
outsl
out
pop
es
jno
adc
push
sbb
or
sub
adc
out
sbb
push
jne
add
das
dec
fcoml
je
loopne
mov
jbe
mov
jge
dec
push
pop
popf
popa
pop
bound
roll
lock
jecxz
cmc
pop
mov
fs
popf
inc
out
adc
push
xchg
mov
push
and
pop
imul
jo
xchg
xor
cmp
pop
hlt
push
rcrl
into
cmpsb
or
or
xchg
mov
pop
xchg
dec
shll
jb
pop
imul
insb
dec
loopne
into
xor
movsl
dec
orb
inc
test
test
ret
sbb
and
push
dec
jge
insl
out
xchg
xchg
mov
packuswb
jmp
cmpsl
lret
add
jns
test
dec
mov
or
icebp
mov
cmpsb
daa
fsubl
lds
dec
pop
push
addr16
sbb
push
test
push
jg
and
mov
imul
cmpsb
jno
arpl
clc
and
arpl
adc
in
push
stos
push
mov
movsl
int3
movsl
bound
sti
cwtl
or
popf
stos
mov
sub
fs
daa
jecxz
push
rcl
pop
pop
jns
xchg
sub
inc
sbb
loope
xor
cmp
outsl
stos
pusha
xchg
sub
popf
pop
iret
lods
mov
test
sub
sar
sub
pop
call
out
fidivs
in
icebp
sub
mov
adc
cwtl
inc
pop
mov
mov
jns
je
adc
fldenv
outsl
sub
cmc
fwait
outsl
add
add
leave
popa
xor
jmp
cmp
daa
xor
cmp
push
lret
dec
dec
cld
nop
mov
lcall
ljmp
movsb
js
push
call
pop
addr16
aaa
loop
dec
dec
loope
push
sub
leave
out
xor
popa
lcall
js
mov
out
lods
shlb
inc
arpl
popa
mov
push
ffree
fcmovnb
dec
mov
push
mov
mov
pop
cwtl
mov
insb
add
into
inc
addl
inc
xchg
lods
cmp
bnd
xor
or
mov
and
cmp
je
mov
out
mov
add
push
arpl
push
outsb
mov
mov
jb
xchg
dec
sbb
pop
pop
in
call
pop
movsb
push
xchg
lock
sti
loope
cwtl
push
mov
into
fisubrs
mov
je
pop
imul
dec
stos
aad
add
pop
daa
or
int
xor
sbb
ficomps
call
jo
jns
movsl
or
push
js
mov
daa
lock
test
mov
mov
jno
fsubp
pop
mov
add
cmp
sub
inc
arpl
bound
pop
mov
ja
punpckldq
add
inc
sub
push
test
mov
scas
out
mov
in
mov
jmp
jae
dec
lcall
js
push
lds
out
mov
mov
pop
int3
pop
jmp
fdivl
jnp
mov
jb
mov
inc
pushf
push
push
xor
outsb
ret
xchg
cmp
aam
mov
cmp
adc
jae
jmp
mov
out
out
xor
mov
mov
mov
in
sbb
nop
imul
xchg
popa
popf
dec
shr
mov
xchg
xor
push
mov
pop
aaa
out
insb
push
sbb
jae
imul
dec
sbb
lret
mov
out
or
or
in
jae
push
pop
push
std
aad
push
out
mov
cmp
pop
cmp
iret
or
pop
jns
or
ret
out
pusha
les
pop
mov
iret
pop
mov
lock
in
test
stos
lds
push
mov
sbb
das
push
xchg
sub
or
mov
sub
xchg
add
dec
std
pop
pop
dec
pop
push
push
push
inc
and
or
fwait
out
out
pop
mov
sbb
mov
pushf
mov
mov
pushf
int
scas
pusha
or
xor
pop
cltd
dec
push
arpl
dec
xor
sbb
lahf
outsb
adc
push
dec
sub
mov
stos
in
fcmovnbe
sbb
pop
arpl
dec
gs
rcrl
jno
pop
shlb
cmc
aas
and
fadd
push
in
fcomps
xor
mov
stos
xchg
xchg
push
test
sub
adc
pop
push
sbb
jge
sbbl
sub
push
fs
into
scas
aam
or
fs
push
mov
push
mov
xor
xchg
cmpsl
jne
mull
imul
pxor
dec
lahf
lret
add
imul
stos
mov
sarl
xchg
push
push
out
test
sbb
sbb
cmp
idivb
inc
cmp
xchg
xchg
mov
ja
mov
jp
je
mov
push
insb
or
xchg
sarl
in
cmp
sti
divl
push
mov
xor
adc
bnd
fwait
or
pop
push
xchg
and
push
and
scas
stc
inc
push
iret
push
test
xor
das
dec
jnp
popf
add
push
fdivl
lahf
lcall
es
out
mov
sbb
in
insl
fstpl
leave
jp
push
mov
adc
ret
sub
dec
scas
fcmovb
out
enter
push
fstpt
xchg
sbb
push
inc
pop
push
add
jbe
xchg
fcompl
iret
xchg
insl
ffreep
roll
xor
jbe
jmp
and
fcomip
shlb
imul
test
pop
pop
cmpsb
push
add
test
push
cli
stos
mov
cltd
pop
jb
mov
mov
add
cltd
add
nop
dec
mov
fwait
or
js
fwait
push
jge
lods
mov
mov
jmp
pop
pop
dec
jbe
inc
xor
fsts
test
rcrb
pop
cmpl
or
jecxz
jo
mov
mov
out
loope
dec
dec
adc
aas
icebp
mov
cmp
push
bound
push
out
ret
jno
xchg
js,pt
sbb
mov
jns
sbb
sbb
push
cld
pop
and
aad
mov
hlt
sub
std
in
repz
daa
daa
imul
xor
cmpb
or
mov
pop
xor
std
enter
pop
jne
mov
mov
add
xor
sub
ret
adc
rcl
fadd
pop
call
pop
dec
in
inc
mov
push
into
es
push
sub
pop
popf
and
ja
repz
fucomp
mov
into
adc
sbb
push
bound
fs
movsl
push
sbb
inc
rorb
daa
ficoml
or
mov
sub
pop
sbb
subb
sbb
mov
mov
jno
and
or
stos
inc
pop
pushf
outsl
pop
push
cmp
ss
pop
push
push
into
ret
adc
cld
fcomp
or
and
or
sbb
leave
jp
insl
xor
add
test
push
xor
gs
test
fldl
dec
adc
mov
pop
icebp
daa
gs
cmc
orl
inc
lods
sbb
movsl
imul
cs
cmp
arpl
add
jne
or
int
xchg
dec
movsb
lock
jp
ret
movsb
xchg
inc
inc
dec
pushf
dec
icebp
jl
das
jno
ss
mov
xor
sub
lock
dec
push
and
daa
pop
mov
or
mov
ret
addr16
dec
cmp
add
push
pop
sbb
or
mov
mov
pusha
and
mov
pushf
int3
mov
mov
ds
fcoms
push
mov
cmp
push
jae
subb
add
adc
and
ficoml
out
mov
pop
xor
insb
mov
nop
pop
mov
mov
ret
mov
dec
push
addr16
sbb
pop
pop
hlt
insb
sbb
pop
push
ret
hlt
lds
shr
fwait
inc
sahf
add
jl
pop
sub
mov
mov
push
cmp
pop
xchg
fs
hlt
fisubs
dec
xchg
add
je
pop
xor
mov
shl
push
mov
scas
mov
in
loope
push
dec
repz
or
xchg
insl
xor
pop
xor
mov
inc
add
or
movsb
cwtl
scas
in
dec
rolb
ret
or
lea
dec
lretw
sub
outsl
addr16
xor
movsl
cmpsl
test
mov
push
xchg
imulb
add
jae
add
pop
sub
mov
adc
sbb
mov
movsl
cmpsb
das
xchg
mov
cmp
or
dec
pop
push
adc
push
add
xchg
adc
mov
iret
cwtl
sub
sub
xchg
or
add
inc
imul
cld
fisubrl
out
push
add
je
jnp
or
xchg
popa
push
xor
pop
inc
mov
mov
cmp
xor
jns
cmp
fimuls
xchg
addr16
aad
fstps
cmpsl
imul
test
into
add
ja
sbbb
lcall
imul
movsb
cli
dec
xor
aas
js
nop
xchg
push
and
pop
adc
cmp
imul
mov
fs
xor
icebp
andb
into
mov
jecxz
cmpsb
pop
add
push
mov
das
xor
pop
aam
jns
insl
lahf
arpl
jae
sbbl
jge
and
mov
adc
xchg
pusha
aam
inc
and
pop
add
dec
mov
lret
arpl
jmp
push
xchg
shrb
xchg
sbb
inc
sbb
inc
mov
pop
adc
rorl
fisubrl
or
add
ljmp
ss
sbb
imul
jne
incl
mov
jno
push
out
stos
jp
adc
lods
push
out
pushf
pop
jno
ret
pop
wrmsr
push
test
xchg
pop
jle
loop
cld
adc
cmp
aas
and
pop
lock
xchg
and
leave
popf
mov
popf
imul
lock
lock
ret
sbb
adc
inc
mov
or
stos
enter
fisttps
flds
pop
dec
lods
leave
jb
dec
js
push
push
cmp
int
dec
scas
insb
mov
jmpw
scas
cmp
jecxz
cmp
scas
out
adc
mov
xchg
push
movsl
lods
popf
out
test
push
jno
rcll
pop
int
loop
or
adc
mov
test
xchg
lret
imul
xor
push
ljmp
fcompl
mov
jp
pop
aad
xlat
lock
in
repnz
adc
aaa
pop
addr16
stc
aam
imul
xchg
repz
push
pop
cmc
in
adc
leave
or
pop
sahf
inc
mov
sub
adc
addr16
fwait
mov
test
add
push
hlt
fsubp
std
pop
daa
xor
and
jmp
push
and
pushf
mov
imul
imul
lods
inc
mov
xor
xor
flds
adc
xchg
aaa
ja,pn
aaa
fwait
add
notb
jae
test
cmp
mov
js
pop
std
ljmp
sub
pop
cwtl
fisubl
in
adc
nop
push
mov
jg
lock
es
or
and
mov
lea
jge
pop
cld
das
lds
pop
pop
mov
mov
shlb
pushw
adc
aaa
jl
mov
lcall
inc
mov
fadd
sub
push
jb
sarl
out
fsubrl
pushf
mov
add
push
dec
shr
mov
sub
xchg
mov
loopne
sub
sbb
mov
insb
rcll
testb
push
sarl
inc
dec
ja
sbb
xchg
dec
lds
jnp
adc
pusha
xchg
inc
add
ss
cmp
imul
jo
test
mov
adc
jge
repz
loope
inc
and
cwtl
cmp
inc
pop
jmp
jecxz
decl
dec
sub
jp
lods
push
sbb
mov
fnstsw
pushl
push
cmp
sub
sub
mov
lahf
xlat
mov
dec
aaa
sub
mov
rcll
fdivs
mov
rcrb
xor
mov
int3
inc
ret
cmp
mov
lds
jp
add
and
imul
shlb
mov
sbb
inc
sahf
push
aam
lahf
aas
mov
dec
pop
fisttpl
jae
lods
xchg
stos
pop
out
testb
xor
mov
repz
inc
or
int3
xchg
addb
insb
sahf
ror
push
adc
mov
adc
aas
xor
dec
cmpsb
incl
add
imul
pop
mov
or
jno
xorl
sub
adc
inc
gs
fldenv
iret
push
fstps
iret
fnstenv
lods
push
pop
pop
jge
pop
xchg
pop
xor
ret
lahf
flds
lret
xchg
lret
add
xor
fldenv
cmpsl
ja
cmp
ror
cli
stos
xchg
lods
out
es
rcr
fistpl
test
outsl
in
mov
push
xor
cmp
pushf
pop
ret
push
jo
loop
loope
jg
bound
outsl
push
rcr
fldenv
daa
lret
addr16
adc
movsl
mov
pop
outsb
test
sbb
jnp
sar
mov
mov
lods
aad
aas
mov
psubb
mov
shlb
scas
fisttps
das
fs
inc
mov
das
sbb
sarl
or
xchg
adc
rcrb
mov
movsb
jo
or
or
mov
push
push
ja
sbb
insl
mov
sbb
loopne
jno
roll
dec
dec
push
icebp
js
xor
int
leave
lods
mov
push
push
lock
lock
jp
add
pushf
cs
xchg
call
jo
movsb
push
sbb
dec
out
cmpsb
fnstsw
jne
push
xchg
pop
in
pop
testl
ret
add
dec
es
mov
es
sbb
iret
clc
fwait
xchg
sbb
ss
dec
sbb
pop
push
das
outsl
loop
mov
les
dec
sbb
xor
mov
mov
loop
fstpl
in
mov
and
decb
mov
loope
dec
xchg
int
aam
xor
pop
sbb
in
inc
or
inc
fstl
xor
clc
ret
or
popf
cmp
cmpsl
dec
sbbl
add
dec
loopne
rcrl
jns
xor
imul
fwait
cmp
xchg
push
aad
bndstx
push
data16
adc
das
and
setbe
mov
stos
lret
push
incb
and
pop
mov
loopne
mov
jnp
neg
test
ja
test
bound
je
subl
dec
int
lcall
mov
mov
xor
dec
add
xchg
xlat
adc
stc
sub
mov
dec
dec
sub
nop
imul
xchg
ljmp
jo
vprotw
add
les
jae
out
cmp
xlat
scas
mov
ja
pop
mov
sbb
sbb
mov
inc
stos
adc
and
jl
std
or
pop
dec
sub
pop
imul
popa
push
lock
mov
sar
mov
dec
ljmp
xor
lds
out
call
cmp
inc
int3
pop
pop
in
cwtl
ss
imul
xchg
int
or
fistl
sti
jnp
stc
arpl
and
push
cmpsl
lods
inc
add
shrb
lea
out
sub
and
and
cmpsl
mov
andb
inc
cli
cld
shlb
mov
add
notb
arpl
lock
les
dec
cmp
jl
lahf
dec
or
cmc
out
or
inc
sub
fistpl
and
std
popa
aas
popf
mov
pop
stc
test
addr16
xchg
cmpsl
mov
daa
or
pusha
mov
test
sbb
pop
push
lock
scas
imul
pop
iret
pxor
loopne
xor
add
and
or
cmpsl
arpl
inc
scas
aad
pop
int
push
lret
das
jle,pt
out
add
xor
arpl
outsb
or
mov
push
imul
nop
test
inc
adc
fwait
mov
xor
nop
mov
les
add
jmp
add
sub
lods
out
mov
sub
ficomps
pop
cmpsl
mov
out
mov
or
inc
rorl
xor
cmpsl
xchg
in
lock
jns
sub
gs
cmp
xchg
mov
orl
sti
jns
fs
orl
xor
push
jecxz
out
icebp
inc
mov
dec
xor
cs
push
dec
out
arpl
loopne
jle
push
cmpb
mov
mov
mov
push
pop
jge
pop
xchg
jecxz
mov
in
fcomps
inc
les
bound
cmp
pop
iret
xchg
fwait
sti
pusha
gs
mov
loop
mov
and
jbe
int
add
test
mov
ja
mov
aas
cmpsl
loope
jne
test
xor
es
inc
cmp
mov
push
in
lea
jecxz
xchg
jp
add
ret
repz
sahf
testb
xchg
cwtl
sarl
das
ret
shl
hlt
loopne
cmp
enter
sti
loopne
xor
sbb
vpshufd
and
out
mov
lcall
pushf
sbb
jle
dec
popa
clc
das
xchg
out
icebp
add
test
dec
notb
pop
ss
addl
loop
jb
loope
adc
and
sbb
add
das
inc
cmp
adc
pushf
inc
inc
xchg
jo
popf
cmp
xor
test
and
mov
xlat
ss
inc
and
sub
out
scas
ss
int
push
pop
xlat
loope
sbb
dec
loopew
loop
or
jbe
mov
lret
dec
lods
bound
push
xchg
fdivs
data16
popf
add
sbb
data16
push
cmp
out
dec
and
sub
int
dec
dec
jmp
call
imul
xchg
mov
dec
or
sub
js
and
std
push
cmp
filds
lock
daa
bound
daa
jge
sbb
ss
xchg
test
ficompl
push
inc
pop
mov
movsb
popf
out
cmp
in
fnstcw
pop
fwait
jmp
xchg
dec
push
fmuls
scas
stos
jae
hlt
ljmp
cmp
push
dec
int
xchg
jg
data16
cli
push
popa
cmp
xor
or
je
les
xor
cmc
aad
and
jno
mov
mov
int
mov
adc
loop
or
and
mov
aas
mov
xchg
sub
adc
xchg
nop
arpl
push
pop
ret
cld
jo
mov
dec
andl
bound
xor
pop
sahf
inc
iret
stos
cwtl
mov
lock
xor
cmp
and
cmc
ds
jbe
and
lds
dec
adc
sub
sahf
pop
pop
add
leave
push
xlat
imul
roll
xchg
cld
fbstp
pushf
mov
jne
in
mov
mov
ja
mov
adc
fldcw
pop
loope
adc
inc
sarb
xor
je
add
cwtl
mov
xor
cmc
in
lods
sub
out
jl
or
inc
sbb
jne
pop
out
add
push
loopne
pop
arpl
cmp
mov
dec
push
sar
mov
cwtl
setge
or
out
mov
dec
xchg
xchg
push
mov
push
xor
fsubs
jno
loopne
test
lret
mov
xor
sbb
repnz
mov
push
mov
lock
push
cmp
adc
push
mov
in
and
mov
lret
rcl
and
mov
pop
mov
fidivrl
add
mov
mov
pop
cmc
rcll
xchg
xlat
sbbl
fcmovb
into
mov
jge
inc
ja
jnp
gs
sbb
adc
mov
popf
lret
shll
int3
adc
lds
fistl
mov
imul
jbe
add
btr
adc
in
push
push
cmp
testl
lock
adc
jno
movsb
movsb
push
sbb
pop
jmp
fcomip
jg
cltd
sbb
rclb
imul
inc
or
push
in
jno
mov
mov
fidivl
das
adc
hlt
jo
xor
dec
mov
movsb
mov
pop
cli
xor
subb
lret
inc
xor
pop
cmp
jbe
cld
jnp
xor
daa
xor
mov
pop
jnp
fwait
hlt
mov
mov
xor
push
sub
subl
ret
and
adc
push
arpl
or
ret
rolb
cmc
push
add
dec
ret
jl
mov
and
mov
cmp
cmc
imul
pop
xlat
push
rol
js
mov
xor
or
mov
mov
mov
mov
pop
sbbl
add
jge
or
add
add
das
sbb
lods
mov
inc
mov
sbb
fcompp
lds
sub
fnstsw
insb
sub
cmpsb
scas
insl
lret
iret
adc
loope
cmp
addr16
lret
xchg
dec
mov
xlat
mov
dec
push
movsl
repnz
mov
test
xchg
add
adc
cld
jnp
sbb
push
aad
imul
pop
repnz
imul
jl
sbb
or
or
out
inc
outsl
ja
push
jnp,pn
mov
mov
mov
jo
sub
dec
jmp
int3
in
std
mov
orl
cld
xchg
dec
or
out
xor
aaa
jge
popf
stos
out
mov
shrb
icebp
sar
bound
inc
lea
cmovno
repnz
fmuls
dec
out
pop
cmp
and
lods
mov
cmpsl
mov
bound
push
mov
cmp
xor
sub
aaa
jae
add
loope
push
jo
sub
add
jne
push
xchg
push
divl
cmpsl
es
loopne
idivb
lds
dec
out
out
inc
cmp
and
pop
mov
mov
mov
add
pusha
xor
out
mov
push
cwtl
dec
jns
imul
loope
push
fwait
push
add
mov
aad
mov
lahf
sub
or
lret
dec
pop
inc
xor
imul
xchg
sbb
or
insb
fildl
adc
dec
sarb
stos
dec
cmpsb
fildl
sbb
sbb
dec
es
scas
jmp
rcrb
push
bound
mov
jecxz
repz
or
cwtl
popa
ss
pop
sbb
mov
rcl
pop
xor
je
push
cmc
cmp
lds
xchg
mov
fidivrl
dec
bound
pop
xor
clc
cltd
xlat
fmulp
or
xor
adc
xlat
jno
xchg
xor
mov
ljmp
xchg
pop
pop
mov
stc
jb
mov
mov
test
imulb
test
pop
aaa
pop
outsb
cmp
divb
sub
sbb
popa
inc
cwtl
out
aas
mov
xchg
scas
cmpsb
fmull
mov
mov
sbb
and
sbb
stos
lret
mov
fsubl
xor
lock
dec
enter
in
adc
pusha
sbb
jbe
add
pop
enter
mov
pushf
shl
jg
cs
out
push
sub
mov
adc
mov
push
loop
popa
orb
jne
mov
cmp
std
cmpsl
iret
mov
lds
and
ss
adc
lret
jo
mov
out
out
jmp
movsl
push
and
mov
pop
and
iret
lods
pop
pop
push
addr16
lret
mov
sub
mov
xchg
mov
enter
mov
inc
xchg
jnp
clc
pop
dec
shll
aad
cmp
negl
jp
add
cmp
dec
pop
or
loope
fimull
aad
xor
or
mov
scas
cli
lahf
daa
stos
roll
ficoms
jmp
cmp
pop
movsl
ja
dec
inc
mov
out
arpl
test
inc
lods
jp
sbb
jmp
push
mov
rcrl
adc
loopne
and
lahf
adc
leave
push
xor
test
arpl
cmp
in
add
mov
add
data16
dec
fwait
rorl
int
sbb
pop
fnstsw
mov
pop
and
lret
out
test
stos
xchg
pop
arpl
dec
push
add
xor
xor
icebp
pop
sbb
lods
mov
mov
jg
adc
mov
push
sub
xchg
mov
repz
mov
lret
add
sub
push
jb
xor
mov
sbb
fstp
xor
jmp
dec
fnstenv
icebp
rcrb
ja
jb
test
dec
xchg
xchg
mov
xor
xchg
ret
out
std
shrb
stc
out
repz
dec
jmp
add
popa
or
cmpsb
mov
and
sbb
lods
pop
leave
xchg
push
lret
addr16
dec
xor
pop
call
test
xor
mov
mov
aad
sti
sub
loope
imull
shl
outsl
inc
jb
xchg
or
loope
lock
jne
out
dec
dec
jg
test
push
test
xor
xor
lcall
add
popa
push
jle
add
lods
lds
pop
lahf
add
pop
jp
fldcw
gs
out
pop
mov
lret
mov
repnz
and
mov
fiaddl
test
sbb
fistpll
mov
mov
mov
xchg
xchg
inc
jmp
adc
dec
xchg
fcmovnu
xchg
sbb
out
stos
sub
aas
in
sahf
std
pushf
in
leave
xor
mov
popf
ret
fisttpll
pop
call
pop
int3
data16
js
xor
inc
pop
outsb
sub
fdivs
adc
out
xchg
jo
jmp
fs
mov
jg
rcrl
les
das
lret
std
and
sahf
sti
hlt
fwait
lret
add
pop
in
push
cmp
lea
inc
mov
sbbb
mov
pop
mov
imul
xor
addr16
mov
cmc
inc
cmpsl
jns
inc
mov
xor
outsl
xor
shll
jae
jle
ja
imul
push
lods
out
jl
das
pop
cwtl
mov
inc
scas
or
test
adc
adc
jg
push
fidivs
stos
xchg
inc
pop
sub
fcompl
sbb
pop
fwait
mov
loop
lret
cltd
xchg
and
xor
pop
xchg
fisubs
std
inc
fistps
pop
sbb
fistps
idivb
push
imul
iret
insl
xor
xchg
out
jp
inc
ja
adc
dec
or
dec
or
repz
cmp
jne
popa
pop
stos
sbb
lea
dec
cmp
es
lret
lock
mov
fildll
shlb
inc
or
cmp
sub
mov
mov
test
das
cmp
xor
mov
shl
mov
scas
add
sub
mov
shr
xor
movsb
xchg
pushf
aad
dec
fildll
inc
lods
mov
jns
dec
fists
xor
subl
xchg
shrl
fwait
xlat
sbb
fstpl
push
jg
arpl
outsb
cmp
in
fcomp
loopne
jb
mov
cmp
xor
sub
mov
pushf
push
mov
xchg
cmp
xchg
and
inc
mov
lods
push
imulb
in
inc
jo
dec
mov
clc
cs
aas
mov
or
cmpsb
sbb
xlat
add
adc
js
pushf
jnp
ds
mov
adc
fwait
out
sub
dec
outsb
dec
pop
lock
popf
cmc
adc
popa
adc
push
fisubrs
fcomip
aad
cmp
test
xor
mov
ficoms
jecxz
sub
sub
insl
dec
push
dec
fwait
jle
mov
sub
sub
cs
pop
sub
or
je
cmc
addr16
shlb
lcall
iret
mov
mov
pop
test
add
and
fists
pop
das
repz
cmp
pop
cwtl
sbb
xchg
xlat
xor
gs
idivl
addr16
cs
dec
cmc
in
mov
addr16
test
or
mov
mov
inc
enter
xchg
lea
pop
aaa
jno
pop
xchg
pop
push
cmp
js
jmp
into
fcomp
or
mov
xor
xor
mov
and
add
mov
imul
cltd
and
imul
add
cmc
cmp
xlat
outsb
lock
xlat
inc
not
in
cmp
inc
scas
sbb
cmpb
push
roll
dec
push
popf
mov
or
jns
enter
jmp
xor
jg
cmp
mov
rcrl
push
add
cmp
enter
fs
cld
fs
push
adc
mov
scas
and
add
xor
scas
sbb
dec
push
sbbl
cli
mov
lret
sbb
xchg
mov
pop
cmp
xor
sbb
jge
or
lret
and
ret
dec
mov
jge
mov
stos
popa
stos
aaa
push
js
xchg
pop
xor
adc
adc
les
mov
cwtl
sub
push
insl
pop
cmp
xor
test
xchg
pop
hlt
dec
enter
sub
fisttpll
lock
bswap
out
cwtl
outsl
xor
add
pop
enter
jns
pop
rorl
addr16
and
mov
rorl
mov
mov
xchg
dec
hlt
lock
add
mov
repnz
pop
jo
inc
inc
fwait
in
dec
jbe
push
add
test
xor
dec
sbb
jecxz
fstps
and
sbb
cld
mov
lds
lcall
cmp
pop
mov
xchg
or
jbe
repnz
jmp
daa
out
jl
cltd
inc
push
and
sbbb
aas
pop
aaa
test
jne
enter
mov
fistl
mov
dec
jns
cmp
xor
inc
in
push
and
mov
push
aas
dec
inc
flds
inc
xor
xlat
pop
pop
sub
es
int
mov
cmp
out
jo
sub
inc
mov
movsb
gs
ficoml
aad
mov
lahf
xor
or
mov
xor
lcall
mov
jns
imul
add
xor
mov
sti
pop
pop
xor
mov
or
inc
jbe
adc
mov
xchg
jae
movsl
xchg
test
and
sub
and
shr
rolb
adc
or
mov
out
rcrl
jae
and
cmp
fcompp
inc
pushf
leave
inc
push
xchg
pop
or
adc
dec
std
dec
roll
xchg
mov
pushf
mov
je
push
mov
or
mov
out
loope
das
push
mov
dec
mov
sbb
test
jle
push
mov
sbb
shrb
mov
mov
cmpsb
cmc
aaa
or
dec
cmc
addr16
out
or
das
popf
enter
jmp
mov
popa
jns
popf
jno
xor
mov
stc
test
rcrl
adc
jl
push
dec
icebp
ret
in
movsl
push
stos
shl
jno
xchg
es
cmp
out
cmp
xor
pushf
insl
fiaddl
mulb
push
mov
pusha
push
xorb
add
push
jg
mov
cmpsl
dec
jmp
mov
dec
or
call
aas
cmpsw
xchg
cltd
dec
push
xchg
rcrl
cmpsb
push
das
je
jmp
xor
test
fwait
mov
test
adc
mov
clc
sbb
ror
js
sbb
push
or
cwtl
dec
loope
addb
inc
mov
outsl
das
dec
xor
xchg
insl
dec
js
ret
jle
fistps
cmp
adc
mov
dec
mov
lea
xor
movsl
orb
cmp
sarl
mov
pop
mov
push
pop
fwait
cmp
xchg
xchg
scas
xchg
or
das
pop
mov
popf
aam
mov
and
push
pop
or
in
and
xor
arpl
dec
out
xchg
aad
inc
fistpll
add
mov
rcrb
outsl
cmc
or
sti
lret
or
and
arpl
lods
push
mov
lcall
daa
dec
test
popl
loope
repz
sbb
sbb
cld
or
sti
xchg
movsb
or
pop
imul
out
mov
or
adc
sub
push
or
add
out
lock
imul
outsl
pop
push
or
push
add
mov
sub
mov
xor
xchg
jnp
jmp
jg
popa
movsl
sub
sti
cmp
cmp
subl
aaa
inc
xchg
fbstp
arpl
inc
dec
pop
dec
movsb
or
test
mov
jmp
mov
sbb
dec
ss
insl
or
mov
sub
xchg
fbld
cmp
popa
pop
jnp
js
hlt
das
xchg
cmp
lds
mov
push
vpavgb
sbb
or
adc
cmp
push
in
sbb
lahf
les
in
adc
and
stos
jecxz
mov
push
in
insb
enter
pop
repz
aad
cld
pop
xor
jne
das
jge
mov
push
fcoms
add
mov
test
enter
ja
and
in
sbb
xchg
aaa
push
push
lds
test
mov
mov
dec
push
popa
scas
js
das
sbb
jae
fdiv
rorl
pushf
push
sbbb
mov
jecxz
movsb
bound
pop
das
or
lock
lods
int
js
cld
jmp
mov
sbb
jge
test
inc
inc
and
lret
or
pop
test
xlat
aad
iret
ficoms
lock
fiaddl
repz
cs
jno
mov
lret
or
pushf
sbbb
mov
dec
in
mov
cmc
mov
aaa
pop
aas
xchg
add
cmp
pop
into
sub
js
pop
sbb
pop
pop
imul
push
dec
jl
xchg
cli
insb
stos
ss
mov
test
scas
cltd
loopne
add
notb
mov
lea
test
push
xchg
push
fcomp
into
dec
xchg
mov
push
jecxz
pop
sub
dec
les
pop
int
scas
mov
imul
jns
aas
fcompl
std
push
sti
loopne
mov
in
xor
int3
scas
stos
xchg
pop
sbb
leave
cmp
xchg
jmp
lret
sbb
mov
and
inc
idiv
pusha
mov
pop
or
or
push
in
or
in
xlat
cmpsl
push
dec
pop
out
addl
out
addl
mov
xor
hlt
push
pop
data16
shll
fimull
dec
lods
and
xor
push
pop
sbb
pmaddwd
xor
xor
in
cltd
in
adc
daa
out
sub
pop
lcall
je
nop
add
push
or
mov
dec
into
pop
mov
imul
mov
fmul
repz
push
push
push
out
dec
nop
mov
pop
inc
scas
mov
loope
bound
or
outsb
iret
push
jae
addr16
mov
or
call
adcl
fstpl
repnz
xchg
add
xchg
rorl
aaa
mov
inc
pusha
inc
inc
cltd
daa
lcall
pop
jno
pop
pop
bound
shrl
mov
nop
das
mov
push
xlat
fwait
sub
xchg
inc
mov
and
jne
rcrb
pop
add
out
shlb
xchg
jl
cltd
repnz
outsl
dec
sbb
dec
push
repz
imul
push
adc
mov
push
inc
stos
shrl
ss
ror
sub
xchg
roll
addb
push
sbb
mov
adc
les
mov
ret
pop
xchg
imul
rcr
dec
jecxz
mov
pop
outsb
cmp
cmp
lock
outsb
das
dec
mov
stos
sub
add
lret
cs
xor
ljmp
mov
or
aam
loopne
rol
loopne
rcrb
out
inc
movsb
es
or
cmp
addr16
stc
fidivl
stos
pusha
sbb
mov
mov
mov
inc
xchg
or
rolb
pop
jns
fidivl
leave
xlat
lret
or
fdivrl
push
cmpsb
cld
pop
fldenv
push
sbb
in
xchg
in
loope
mov
or
out
add
loopne
enter
outsb
and
je
stos
pop
mov
pusha
shll
mov
dec
popa
imul
push
iret
add
jo
push
xor
jb
add
dec
jae
cmp
sub
cmp
mov
int
mov
pushf
and
cltd
and
inc
inc
pop
xchg
outsl
into
xorb
je
xor
push
pop
lea
in
ret
outsl
jne
popf
add
inc
xchg
push
jno
cltd
stos
or
rcrl
pop
mov
jg
imul
fisttps
xchg
mov
add
dec
sub
jp
cmp
test
es
cltd
mov
fildll
jns
in
rcll
out
jmp
mov
push
sbb
xor
add
or
or
push
ret
mov
sbb
or
rcl
mov
repnz
xor
mov
mov
lods
sbb
test
mov
adc
dec
popa
dec
cmpsb
out
stos
fistpll
popf
inc
adc
xchg
jns
adc
scas
inc
out
jo
dec
cmpsb
ret
sbb
add
in
add
int
xchg
fisttpll
mov
add
lods
lret
adc
jo
ret
pop
dec
xor
pop
cmp
jo
push
out
mov
cs
inc
xchg
aad
mov
insb
test
fwait
icebp
arpl
gs
popa
cmp
insb
push
adcb
sarb
iret
js
add
test
cmp
jl
in
jae
clc
std
ss
mov
std
mov
xchg
jb
cltd
das
out
les
sarl
stc
fwait
gs
inc
out
in
pusha
mov
fwait
xchg
aam
mov
lcall
cmp
aas
xor
out
sahf
mov
xchg
push
sub
aas
xor
sub
xchg
imul
inc
add
mov
in
ret
add
shll
sub
sub
xor
push
bound
mov
lods
pop
imul
jo
gs
lahf
int
push
push
xor
aam
les
loope
adc
ljmp
jnp
xchg
enter
stos
ja
cli
xor
mov
and
das
add
fnsave
out
int3
xchg
dec
cmpsb
add
dec
shrb
lahf
icebp
and
add
in
popf
jge
loope
lods
xchg
aas
cmp
jae
sub
sbb
imul
loopne
fdivrs
lret
jbe
adc
insb
out
mov
mov
sub
inc
cld
dec
outsb
into
add
sub
jp
mov
jmp
xchg
xchg
and
cld
push
mov
movsb
sbb
inc
or
cld
mov
insl
cmpsl
xchg
sub
sub
mov
getsec
jge
jmp
dec
in
pushf
aaa
xchg
ret
pop
dec
and
jp
or
add
sbb
pop
movsb
fdivr
xor
push
popf
aaa
lret
rclb
int
iret
mov
pop
js
mov
mov
jmp
cld
bound
pop
adc
mov
fwait
sub
scas
xorb
add
xor
mov
dec
bnd
cmp
xchg
int3
inc
dec
leave
adc
stc
rcrb
push
loope
xor
or
ds
aaa
sbb
orl
sbb
cmp
dec
arpl
xchg
ljmp
loop
ret
test
or
pop
push
inc
ficoms
push
movsb
jp
sbb
fisttpll
popf
daa
xlat
mov
lea
stos
int3
mov
add
jp
xchg
and
jnp
lds
cwtl
cs
and
dec
test
jl
fisttps
xchg
jno
loope
or
xchg
adc
xchg
jle
movsl
inc
mov
iret
mov
mov
xor
jecxz
xchg
ss
insb
or
cmp
test
xchg
loope
in
or
push
dec
mov
inc
xchg
jnp
out
jl
mov
mov
mov
or
adc
mov
mov
jns
xor
rorl
movsb
test
in
push
xchg
xchg
mov
dec
xlat
sub
insb
loope
add
cld
hlt
popa
shll
and
leave
jge
pop
jne
xor
data16
stc
xchg
fisubrl
push
dec
sub
cmp
mov
int
jnp
jmp
out
sti
fsubs
aaa
mov
or
inc
test
aad
stos
in
mov
test
hlt
aad
xchg
mov
arpl
lahf
test
mov
mov
movsb
cmpsb
jl
dec
shlb
orb
jle
pop
mov
out
cld
and
mov
stc
pop
adc
cmc
test
stos
push
fisubrs
cwtl
scas
lods
mov
addr16
pop
lods
xchg
scas
mov
insl
xchg
mov
inc
mov
scas
popa
lcall
dec
sub
push
pop
js
pop
hlt
aas
xlat
clc
xchg
ds
jmp
jns
les
sbb
lea
push
idivl
or
popa
sbb
push
shll
sbb
push
sbb
loop
pop
pop
dec
lods
and
stos
mov
fsub
jno
movsl
iret
data16
fstp
xchg
mov
nopl
dec
or
cmc
ja
pop
mov
push
idivl
lea
xor
scas
mov
aad
and
flds
test
inc
lcall
mov
es
inc
aad
jae
and
pop
cmp
pop
xor
int3
mov
cmp
out
cltd
mov
push
sbb
push
mov
pushf
pop
pop
cmp
cld
mov
adc
add
cwtl
lods
add
sahf
sub
xor
bound
int
sbbb
negl
mov
fwait
shll
mov
int
scas
rolb
mov
cs
inc
xchg
sbb
mov
lcall
inc
into
ret
aas
mov
iret
sub
cmp
xchg
jno
mov
pop
and
xor
and
out
xor
leave
lock
pop
enter
outsl
enter
dec
das
pop
mov
adc
lea
mov
in
xchg
divb
aas
clc
pop
mov
popa
lahf
xor
mov
lret
pop
gs
popa
scas
xor
sub
mov
push
out
adc
push
jl
fwait
mov
test
dec
adc
aam
xabort
mov
loopne
pop
jnp
add
jp
out
sub
dec
pop
test
add
mov
test
shrb
dec
mull
sub
ret
loope
add
pushf
xor
pop
or
loopne
inc
stos
sti
mov
faddp
sub
stos
inc
cmp
shlb
xchg
in
icebp
sbb
mov
and
push
pop
adc
outsl
hlt
jb
icebp
ja
iret
ss
xor
repnz
mov
je
push
mov
popf
divl
stc
mov
dec
sub
lret
fldl
mov
xchg
cli
jg
fwait
jmp
mov
leave
push
jno
shl
add
pop
addb
out
test
or
pop
addr16
cltd
xchg
rcrl
jge
jmp
loopne
mov
bound
sbb
cmp
stc
out
fimuls
or
xchg
push
add
dec
mov
sbb
int
xchg
xor
fdivrs
xchg
js
inc
mov
enter
fwait
or
adc
adc
mov
add
adc
dec
inc
mov
sti
in
inc
push
shlb
ret
sbb
mov
sbb
popa
push
outsb
enter
cld
mov
in
inc
lret
push
das
push
mov
nop
adc
out
inc
mov
xor
dec
push
sbb
aaa
xlat
sbb
xchg
repnz
scas
or
sbb
data16
cmc
call
ja
out
fsubr
and
pop
repnz
shl
mov
xor
sbb
fmulp
dec
cmp
adc
idivl
sbb
pop
dec
pop
test
test
sbb
add
test
hlt
mov
sub
ficompl
xor
push
test
push
stc
fsubs
add
adc
pop
add
rorb
adc
aad
or
call
mov
xor
add
sbb
out
jae
pop
sbb
iret
jno
xor
push
punpckhdq
test
adc
push
pop
rcrb
mov
cs
xor
xchg
insl
mulb
testl
pushf
ret
sbb
push
mov
mov
mov
pushw
gs
jg
push
daa
inc
jo
ja
fwait
aas
xchg
adc
jo
pop
lea
sbbb
sbb
xchg
aam
shrl
out
inc
ret
xor
cmc
notb
add
mov
imul
sbb
pop
scas
jp
or
mov
add
jecxz
addr16
adc
xchg
pop
enter
mov
sbb
inc
push
std
sbb
push
ja
repz
cmc
push
insb
in
test
jp
mov
loopne
ljmp
jo
popa
out
xor
pusha
push
jle
fsqrt
in
loop
daa
push
mov
psubsw
lahf
mov
imul
xlat
dec
test
out
mov
push
test
fnsave
test
and
inc
sub
xor
lea
lds
dec
int
dec
jl
dec
sbb
call
dec
push
stc
pushf
ret
ss
adc
stc
bound
mov
hlt
in
jl
push
mov
pop
cwtl
inc
xchg
jbe
inc
lock
icebp
pop
aaa
xor
and
shll
xor
adc
notb
mov
dec
add
les
adc
push
repnz
mov
bound
arpl
dec
add
add
mov
gs
xlat
pop
out
mov
xor
test
arpl
sbb
pushf
in
mov
dec
enter
sbb
cmc
shll
dec
push
cld
cmpb
mov
adc
adc
jne
push
sahf
jp
aad
lods
out
cmp
dec
cmp
gs
arpl
cltd
shl
dec
push
mov
lock
push
sarl
inc
add
add
xor
cmp
push
iret
xor
add
loopne
int
mov
or
ja
sti
ret
rcrl
sbb
jne
popa
cmc
xlat
lret
sub
mov
inc
fbstp
pop
out
insl
pop
enter
xor
sbb
xchg
std
lds
sub
gs
cmp
lds
sti
sarb
inc
cld
inc
cmp
add
inc
mov
addb
lea
aaa
cli
push
xchg
inc
push
pop
push
ds
aas
cmpsb
aaa
push
and
aad
loop
and
push
test
aad
sub
repnz
cmp
push
dec
mov
stos
test
mov
out
fdivr
ss
rorl
fdivr
sbb
push
popf
inc
call
add
pop
addr16
mov
pop
stos
and
jae
mov
insl
and
out
xor
fldl
loope
dec
dec
push
sbb
insb
mov
imul
aas
sbb
in
das
arpl
outsb
aad
mov
pop
loopne
enter
in
hlt
push
pushf
mov
pop
jno
test
dec
test
xor
je
cltd
push
mov
jne
push
enter
adc
in
movsb
cltd
test
and
jae
into
xor
test
pushf
ljmp
cmp
dec
mov
insl
insb
push
xchg
and
xor
cwtl
cmpsb
mov
ds
xchg
dec
jle
mov
xor
fsubl
dec
pop
fwait
popf
aaa
dec
ss
rcl
scas
in
loop
scas
mov
xor
xchg
pop
loope
js
wrmsr
loope
xchg
mov
jp
aas
mov
sbbl
es
inc
jo
lahf
fwait
js
fsubp
cli
or
mov
imul
mov
int
cmpsl
out
repnz
imul
mov
popf
add
rorb
mov
xchg
std
push
daa
push
jnp
lods
arpl
xchg
in
out
movsb
push
adc
loope
jbe
out
xor
cmc
loope
mov
add
sbb
les
icebp
sbb
fcoms
scas
fisttpl
push
mov
mov
loope
add
inc
rorl
dec
rorb
shl
fiaddl
adc
popa
loope
nop
arpl
aas
push
fbstp
push
hlt
out
mov
lock
pop
xchg
out
cld
andb
sbb
mov
pop
push
outsl
xchg
addr16
pop
or
fucomi
lret
frstor
ljmp
dec
inc
mov
mov
jmp
adc
mov
test
sti
aas
cmpsl
lahf
sbb
dec
loope
mov
mov
icebp
xchg
fisttps
loope
pop
sub
push
repz
lahf
pop
out
std
aad
mov
mov
pop
ja
lret
les
das
leave
mov
testl
test
mov
inc
std
shll
cltd
mov
and
dec
lcall
inc
sbb
push
iret
loopne
aam
inc
icebp
lahf
mov
das
fldenv
push
xor
sub
test
or
cmpsb
sbb
loope
mov
mov
sti
movsb
mov
lahf
iret
xchg
mov
xchg
adc
int3
stos
shl
jge
popf
lock
lea
js
imul
shll
and
cmpsb
cmp
push
add
mov
cld
mov
outsb
mov
pop
or
fidivrs
push
loop
add
hlt
sub
call
jb
cmc
call
dec
sub
add
sarl
mov
cmp
or
add
outsb
add
jb
sldt
add
add
pusha
or
je
call
pop
add
cmpb
jne
popa
jmp
fldt
cmp
add
pop
and
xor
mov
add
cmp
jne
movzwl
add
mov
add
cmp
je
sub
jmp
mov
mov
add
mov
add
jmp
mov
mov
push
push
call
call
pop
sub
mov
sub
mov
movb
popa
jmp
insb
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
and
jl
sub
mov
mov
inc
mov
inc
mov
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
mov
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
mov
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
mov
jmp
sub
mov
popa
ret
jmp
jmp
add
and
or
push
mov
loop
ret
rcll
push
push
fs
or
push
add
aaa
jl
add
xlat
stc
add
xor
or
ficomps
ja
and
sbb
and
xlat
push
fsubl
in
cmp
ud0
mov
rcl
cmpb
ds
dec
fwait
enter
jne
gs
jo
fs
push
stc
sti
jg
hlt
inc
iret
and
dec
js
movsb
scas
mov
in
sub
adc
pop
pop
inc
and
fnstsw
cmp
inc
pop
add
or
or
cmc
sbb
xor
je
or
call
and
inc
and
ds
call
lcall
or
inc
aad
loop
movsl
in
jge
push
mov
add
lods
out
add
sub
fcmovb
inc
fcoms
mov
sbbb
repnz
incl
ss
fsubl
inc
leave
ret
inc
add
dec
in
inc
lea
mov
or
test
inc
push
lea
mov
inc
mov
mov
sub
daa
inc
lea
orb
add
rcl
cld
movnti
dec
jne
mov
ret
inc
push
inc
dec
inc
inc
sub
inc
sub
popa
mov
test
cmp
inc
jb
add
push
sub
mov
jmp
or
ret
pop
test
jne
mov
push
call
rorl
rclb
fcoml
popw
cmpsb
dec
sbb
push
push
push
xor
add
sti
cmp
and
mov
dec
sbb
sbb
inc
pop
test
cmpsb
addr16
mov
orb
jnp
inc
mov
mov
je
mov
mov
xchg
mov
pusha
ret
sub
cmp
shl
rorl
rcrl
ljmp
rclb
ljmp
cmp
je
adc
add
adc
movb
fwait
ds
jns
aaa
mov
popf
mov
je
lret
push
call
movsl
mov
push
jmp
mov
cmp
je
test
out
lea
inc
add
dec
inc
mov
int
hlt
rolb
out
cmp
jne
xor
lret
add
pop
je
test
jge
cmp
add
out
and
rolb
cmp
mov
imull
repz
pop
test
je
ja
pusha
xor
ret
ss
int3
push
add
pop
mov
pop
fmul
arpl
arpl
adc
into
adc
adc
jmp
cmpb
je
ret
jb
add
jbe
add
or
adc
inc
inc
inc
cmpsb
pop
insl
subl
clc
int
mov
cmp
out
ss
or
movsb
sub
lea
jg
clc
dec
pop
insl
adc
test
push
hlt
adc
arpl
pop
cmp
loopne
ret
xor
fisttpl
xor
or
cmp
shr
jns
and
addr16
push
cmc
hlt
ret
or
adc
sbb
arpl
and
add
lock
fsubr
movb
mov
int
jbe
fldcw
orl
cmpb
mov
stos
cmp
xor
jo
rcll
mov
cmova
cli
mov
add
sub
jbe
add
or
loopne
std
pop
jae
es
pop
imul
pop
add
and
les
mov
add
pop
and
les
mulb
xlat
pop
ljmp
mov
fnstenv
clc
mov
orb
or
in
inc
mov
loopne
sub
jmp
iret
icebp
loopne
mov
jns
mov
mov
gs
aam
sbb
jb
and
inc
push
les
dec
and
push
gs
xor
cmpb
pop
add
adc
clc
cmp
inc
ret
jne,pt
cs
adc
push
dec
in
inc
nop
push
movsb
lods
add
cmp
or
mov
jne
xchg
adc
repz
adc
aaa
jo
in
or
mov
int
and
pop
xchg
lcallw
xorl
repnz
shlb
or
sub
bswap
nop
add
data16
add
xor
mov
or
xor
cmp
xchg
mov
aas
jmp
inc
movsb
push
adc
mov
les
mov
stos
stos
mov
adc
adc
test
push
aad
and
jge
push
mov
xchg
inc
mov
jb
mov
sbb
push
lret
sbb
jp
andl
adc
adc
dec
loopne
fimuls
nop
adc
pop
jo
in
cmp
addr16
out
pop
fiaddl
mov
mov
bound
xchg
jb
xor
pop
shll
jno
push
push
or
adc
pop
orb
es
xchg
sbb
cmp
dec
sub
push
pusha
popa
adc
pusha
call
in
mov
xlat
and
call
pop
jl
mov
xor
std
push
cmp
gs
add
mov
out
fs
push
push
lret
add
mov
push
push
ljmp
incb
or
loop
in
xchg
pop
adc
xor
mov
jns
add
lret
xor
add
inc
in
dec
xchg
imul
cmp
cmp
add
add
dec
fisttpl
or
adc
je
loop
pop
lods
sub
jb
dec
push
mov
inc
adc
lret
cmp
and
add
cmp
add
test
sti
cltd
jmp
and
sbb
sti
and
sub
push
jecxz
mov
fwait
add
pop
add
gs
adc
sub
mov
xchg
add
pop
fcmovnb
dec
and
int
rol
xor
mov
inc
ljmp
fs
outsb
lea
xor
jecxz
jo
jp
in
flds
cmp
out
mov
adc
add
cmp
ficomps
push
mov
rolb
negl
outsb
add
and
and
data16
rcrb
pop
dec
pop
push
and
push
add
jle
bswap
data16
imul
jl
add
pusha
or
sub
ljmp
mov
fsubrl
cmp
cwtl
cmp
push
jle
aam
sarb
std
push
pushf
sub
ds
add
add
fidivs
ficoml
cltd
sbb
in
das
push
lea
jecxz
add
add
lret
in
testl
out
test
ljmp
imul
xor
push
add
test
std
lds
jmp
sbb
cld
or
bound
arpl
sbb
dec
loop
sti
sub
inc
pop
and
hlt
xor
mov
inc
jae
call
xor
imul
fwait
loope
cmp
divb
pop
fsub
mov
or
push
inc
dec
andb
add
or
ljmp
and
xor
out
hlt
incl
sub
push
js
sbb
aas
or
jecxz
and
pushw
popa
lahf
mov
ud1
xchg
cmp
pop
imul
jge
cld
pop
mov
xchg
rcrb
or
loopne
clc
out
repnz
jae
jl
movsb
addb
xor
fmull
or
adc
or
xor
test
and
mov
sbb
add
aas
inc
pushf
pop
mov
dec
iret
jmp
int3
push
lea
push
nop
add
push
cld
pop
pop
add
pusha
pusha
add
rol
add
xor
or
push
lods
test
push
dec
mov
movsb
dec
fiaddl
dec
roll
in
mov
inc
mov
push
rolb
in
mov
mov
pop
loopne
inc
dec
lahf
inc
add
cwtl
scas
fxch
les
bswap
subb
clc
mov
popf
ret
inc
mov
mov
push
rol
imul
fiaddl
lret
dec
mov
inc
in
or
push
add
and
jns
xchg
in
jmp
mov
and
mov
mov
sahf
rolb
filds
and
mov
adc
int3
and
mov
push
adc
mov
jno
in
adcb
dec
ret
pushl
add
pushf
mov
xor
mov
or
xchg
faddl
pop
in
rolb
sarb
sbb
and
popw
add
in
cmc
addb
add
xor
jle
scas
ret
stc
or
cmp
test
pop
pusha
lcall
or
or
les
imul
lds
adc
inc
repnz
xchg
pop
outsb
cld
xor
sbb
ret
inc
pushf
jb
cli
call
mov
pop
and
xchg
jge
add
mov
mov
sbb
movaps
push
stos
rol
orb
sbb
jo
icebp
inc
mov
pop
movsb
mov
popa
xor
fdivrl
popa
pop
inc
xor
xor
adc
das
or
adc
and
mov
outsl
cld
xor
add
xchg
ds
fisubrl
test
cld
cmp
push
xchg
fsubrl
gs
cmp
cmp
mov
mov
shr
stc
add
push
xchg
popl
lcall
hlt
dec
add
cmpsb
dec
add
adc
testb
cwtl
repnz
imul
scas
rorb
movsl
adc
loop
mov
pop
add
rcrb
cld
clc
push
lahf
jmp
mov
mov
adc
xor
arpl
fdivs
jecxz
and
imul
adc
enter
inc
aam
add
mov
call
es
inc
fdiv
in
cmp
test
add
dec
add
xchg
sub
fldl
ret
push
pop
in
lea
and
xor
cmp
xor
adc
mov
xchg
pop
lods
or
scas
inc
out
iret
cmp
sub
pop
xchg
jb
ljmp
jno
adc
nop
dec
xchg
or
sbbb
inc
push
das
mov
movswl
mov
mov
adc
mov
inc
mov
sbb
lods
cwtl
pusha
in
fs
add
cmc
add
lcall
and
outsl
or
pop
lods
add
outsb
cmp
xchg
mov
loope
sbb
or
shlb
jne
adc
mov
imul
ljmp
sub
adc
add
dec
movsb
fcoms
popf
roll
in
add
inc
add
xchg
add
pop
sbb
jbe
add
jp
or
xchg
rolb
test
inc
sarl
cmp
rclb
add
enter
jle,pt
mov
inc
pop
xor
faddl
jle
pusha
sbbl
nop
push
push
aam
fsts
lcall
movsl
cmp
test
mov
loopne
add
movsb
sub
stos
rclb
sbb
faddl
push
mov
jmp
testb
les
add
inc
xchg
pop
bound
cmp
pusha
cmc
test
or
js
pusha
rorb
pop
movsb
adc
or
lds
xor
in
mov
add
loope
scas
pop
pop
xlat
lods
testb
in
inc
cmp
add
test
xor
dec
jmp
pop
sub
out
xor
mov
adc
add
sub
cmp
push
pop
pusha
fldt
inc
and
call
flds
push
xchg
pop
mov
aam
and
pop
pop
fidivrs
mov
jae
add
inc
mov
lcall
arpl
xchg
mov
mov
jmp
pusha
push
lea
add
loope
test
orb
pop
cmp
or
paddusb
xchg
aaa
xchg
loopne
clc
in
push
sbb
dec
ret
xchg
test
adcl
fs
repnz
fidivrl
addr16
scas
fnstcw
mov
call
and
insl
jb
jecxz
jle
adcb
inc
add
mov
mov
jp
xor
pop
jl
addb
mov
mov
xor
push
add
aas
pusha
add
push
in
push
inc
or
movsl
or
add
add
fistl
or
ficoms
sub
sbb
sbb
xchg
popa
out
xchg
inc
aas
sbb
cmc
cs
sahf
mov
negb
add
lods
inc
mov
call
sbb
push
push
cld
imul
sbb
iret
cld
push
xacquire
jecxz
es
adc
icebp
sub
inc
xlat
jg
addr16
sbbb
out
mov
pop
daa
xchg
out
in
xchg
insb
cmp
jne
push
out
inc
or
aad
xchg
or
repnz
mov
subb
push
mov
or
ret
add
nop
adc
ds
inc
sbb
in
in
cltd
xchg
xor
in
cmpb
push
out
bound
lock
jns
xor
fadd
dec
xor
popa
jmp
adc
and
stc
add
sub
pop
js
cmp
scas
or
inc
je
lahf
or
ss
cwtl
jle
roll
fimuls
icebp
jae
rolb
ja
jge
add
xorl
int
mov
std
mov
xlat
jle
mov
cs
push
jnp
sbb
das
add
cltd
sbb
jecxz
dec
cmc
push
enter
lcall
int
insl
adc
sbb
cmp
push
andb
rol
push
in
insb
cmp
push
xor
xchg
pop
push
lcall
gs
stos
fldl
out
push
mov
pop
xchg
inc
inc
sub
out
jl
test
mov
loop
cwtl
xor
ret
cmp
repnz
dec
and
rclb
sub
xor
xor
mov
or
ret
and
sbb
loope
adc
ret
dec
js
mov
mov
insl
fistl
in
or
pop
pop
mov
test
add
push
add
in
jno
pop
push
insl
adc
add
adc
fs
inc
call
push
ret
or
andl
push
adc
sub
mov
add
mov
inc
mov
fisttpl
or
cmp
jge
jg
dec
mov
popf
in
rcr
jne
js
dec
sub
push
inc
in
pusha
movsb
and
cld
push
mov
xchg
inc
mov
or
test
mov
les
scas
adc
jne
addr16
inc
or
cwtl
add
cmc
fldt
jle
dec
add
in
and
jns
push
jmp
ja
inc
jae
xchg
mov
bound
inc
clc
mov
and
inc
add
jnp
sub
jg
add
push
repz
xor
into
arpl
fdivl
addb
mov
aaa
jle
addb
jmp
jp
xor
pop
cmpsb
push
aas
mov
and
inc
cltd
xchg
in
cmp
jle
xchg
lret
pop
imul
cmp
out
cltd
stos
add
flds
jp
mov
cmp
scas
rolb
jmp
cmpsb
inc
jle
addl
jmp
xor
or
or
pop
inc
stos
jnp
mov
xlat
pxor
jb
jle
cld
inc
fiaddl
in
cmpsb
pop
push
ds
mov
inc
faddl
adc
lahf
lcall
jg
incb
in
push
rclb
je
push
pop
cmpsb
cld
mov
stos
nop
inc
mov
mov
test
ss
xchg
jg
mov
aam
jbe
xchg
add
aam
xor
pop
in
and
iret
add
jnp,pt
cld
push
call
inc
test
imul
add
mov
add
cmp
add
lds
inc
sahf
add
mov
xor
ja
dec
sub
loopne
dec
mov
cmp
pop
stos
or
xchg
add
inc
xchg
test
cmp
mov
push
cmpsl
in
lods
inc
pop
cmc
add
inc
and
outsl
add
rclb
aaa
ds
jecxz
push
cmp
xchg
xor
fidivl
inc
xchg
mov
aaa
jp
cmp
xchg
xchg
mov
sbb
ret
mov
ret
mov
xor
push
and
stos
push
add
push
mov
stc
aaa
movsb
mov
pop
jo
clc
arpl
vpmulhuw
stos
inc
or
cmp
mov
xchg
and
repz
jecxz
negb
lods
popl
jle
or
jp
sbb
xchg
add
jl
ss
stos
in
in
inc
shl
and
lcall
in
adc
pop
xor
rclb
add
nop
sahf
bt
in
cmp
sbb
fistps
out
add
push
fists
xchg
sbb
mov
imul
cmp
or
xchg
push
adcb
aad
shlb
sbb
in
mov
mov
pop
icebp
cwtl
push
sbb
mov
jmp
and
jg
jo
push
test
adc
xchg
push
mov
fstps
test
jnp
aaa
fwait
inc
pop
ja
xor
add
xor
xchg
add
push
stos
mov
pop
and
fisubrs
pop
stc
insl
imul
bound
pop
cli
inc
add
or
out
sbb
lods
out
ret
pusha
les
js
push
jae
out
mov
popa
inc
and
xchg
xor
orl
sub
lods
adc
and
add
sbb
cmpsb
ds
imul
dec
and
push
mov
ret
jecxz
and
iret
add
cld
push
adcb
jecxz
adc
add
push
jp
popf
out
or
rclb
push
loopne
jle
and
faddl
lahf
jo
push
fldcw
dec
add
adc
add
in
mov
or
pop
ret
call
lods
or
pop
sub
in
xchg
add
lods
js
push
jge
cwtl
push
ret
jecxz
cs
adc
pop
loopne
or
inc
call
and
jg
push
add
push
mov
es
jo
mull
or
inc
pushf
ljmp
sbb
fstp
sbb
jnp
fs
rcr
loope
or
add
imulb
pop
or
mov
rol
idiv
or
adc
adcb
mov
lods
pop
faddl
pop
jb
pop
ja
inc
mov
push
xor
add
imul
orl
sbb
sub
sub
daa
addb
cld
loopne
or
ss
jmp
adc
adc
push
cltd
pop
xchg
sarb
push
in
sbb
mov
and
dec
test
in
push
fdivl
cwtl
or
mov
or
repnz
mov
add
lret
lods
cmp
mov
pusha
in
lods
adc
push
jmp
enter
in
ss
call
out
rol
xchg
and
ljmp
add
add
push
lods
push
stos
test
push
mov
xor
lcall
add
repz
pop
pop
leave
mov
in
adc
lret
xchg
dec
or
test
sbb
mov
inc
sub
sbb
nop
jae
out
xor
jg
test
mov
mov
add
push
xchg
adcb
les
cwtl
sub
mov
sbb
jecxz
bound
sub
sbb
adc
or
push
pop
and
dec
fs
addb
fidivrs
je
in
dec
push
je
push
ja
jb
incb
mov
sarb
and
push
shlb
cmp
dec
cli
imul
or
adc
call
mov
adcl
push
lock
add
sbb
aad
sbb
mov
lret
adc
jecxz
xchg
in
daa
push
sbb
add
cmc
sub
pusha
adc
push
push
sbb
cmp
xchg
mov
inc
or
inc
add
test
sub
pop
push
and
add
adc
fstl
repz
mov
jmp
fsub
mov
arpl
xor
loope
sahf
pop
jbe
add
jne
daa
xchg
insl
or
jo
sbb
or
jecxz
cltd
jmp
call
mov
pusha
adc
adc
ret
sbb
mov
sbb
and
push
push
pop
pop
stos
pop
xor
xor
cmp
jmp
and
out
in
jmp
data16
inc
mov
push
sahf
rep
sub
cmp
clc
lods
xlat
add
dec
stos
dec
dec
sub
call
sub
popa
push
repz
subb
pop
test
sub
mov
scas
jns
sbb
xchg
push
mov
mov
stc
add
sbb
in
in
pusha
xchg
mov
sbb
shlb
pop
outsb
mov
sub
mov
inc
jo
test
roll
insl
les
fiadds
sbb
jp
mov
lret
push
push
add
ljmp
std
push
loop
test
popa
iret
add
adc
ret
roll
add
dec
cmp
rclb
cmp
addr16
push
loopne
lret
mov
repnz
pop
out
in
push
ret
or
pop
fdivrs
shlb
xor
sub
ja
mov
nop
inc
cmc
and
mov
dec
int3
pusha
adc
adc
sub
adc
mov
lods
sbb
dec
lock
cmpsl
add
shrl
cmc
ljmp
and
in
in
lods
xchg
lods
fmul
les
jecxz
in
inc
inc
pop
pop
cs
fisubl
clc
jnp
fmuls
xchg
and
std
or
adc
shlb
sub
sbb
icebp
testb
cmp
dec
mov
adc
aaa
js
or
adc
add
xor
pusha
dec
mov
dec
es
loopne
loope
cmp
pop
and
test
loopne
push
adc
pusha
jp
jnp
pusha
jmp
jge
xor
add
fidivl
in
cs
sub
pusha
or
pop
adc
ds
aas
dec
xchg
mov
in
jp
sbb
divl
testb
mov
in
loopne
mov
hlt
and
les
sbbl
test
push
das
sbb
test
repnz
loopne
push
mov
add
push
sub
pop
test
aam
sub
shrb
pop
or
ds
mov
ret
in
xchg
in
aaa
dec
popl
inc
mov
outsl
fs
or
movsb
or
js
nop
mov
call
dec
cmc
adcl
lahf
rclb
aas
cmp
jle
call
mov
dec
adc
testl
and
dec
xor
push
in
movsb
jl
sub
sbb
nop
mov
jnp
test
movsb
test
add
or
dec
push
sub
jo
xor
hlt
out
ret
pusha
bound
push
xor
mov
out
inc
push
jle
pusha
mov
pop
xor
cs
into
cwtl
mov
mov
inc
mov
test
push
xor
add
and
jnp
fsubrp
test
pushf
jmp
add
jmp
cs
imul
lret
push
jle
xchg
popa
or
ljmp
pusha
mov
mov
xchg
addr16
faddl
jge
loop
or
aad
add
push
mulb
rol
scas
pusha
pop
cmp
inc
pusha
jge
addl
sub
or
rorb
aam
test
add
mov
in
xchg
cmp
in
mov
add
out
movsb
or
sbb
sub
push
and
mov
mov
dec
cwtl
ret
pop
or
dec
out
pusha
push
daa
dec
mov
les
and
pop
cmpsb
push
pop
add
dec
push
scas
adc
mov
add
push
mov
push
dec
test
push
daa
dec
hlt
sbb
sbb
faddp
dec
rorl
push
rorb
lea
pop
or
aas
rep
and
mov
adc
pop
xorl
push
sub
adc
and
inc
stc
cli
decl
pop
jmp
mov
push
mov
pop
inc
dec
add
mov
outsb
xchg
imul
shrl
js
fs
add
lea
or
inc
pusha
xor
in
int
mov
repnz
pop
dec
cmp
cltd
and
jmp
push
test
push
and
mov
movsl
xor
push
xor
test
sahf
push
aas
cmp
fiaddl
pop
test
jmp
add
dec
dec
fdiv
jge
dec
das
dec
and
add
adc
sbb
pop
add
fcoml
adc
sarl
out
xor
sbb
push
xrelease
mov
push
popa
jmp
andb
daa
stc
jg
adc
mov
jp
dec
dec
dec
or
nopl
jbe
andb
xor
or
push
sub
or
mov
push
cmpb
pusha
and
and
in
jmp
jecxz
and
mov
xchg
test
add
inc
imul
repz
fcoms
in
adc
ljmp
adc
sbb
jecxz
inc
int3
subb
or
pop
dec
xor
adcb
pop
jg
jle
rolb
jge
add
and
pop
jg
xchg
mov
adc
and
mov
out
rcrb
and
push
add
mov
loope
fisubs
mov
in
add
push
adc
mov
lods
fdivrs
jns
pop
jmp
mov
inc
mov
loop
xor
mov
and
sbb
add
hlt
mov
inc
aad
xor
mov
sbb
adc
adc
aad
sbb
aas
ljmp
in
adc
out
aam
rolb
shl
jnp
mov
jo
add
sbb
mov
jecxz
sti
cmpsb
sub
jnp
je
mov
jmp
and
in
lret
nop
mov
jns
sahf
fs
inc
mov
pop
add
xchg
xor
stos
in
jl
vunpcklps
fdivrs
dec
jp
adc
cmp
xor
pop
xchg
sbb
dec
mov
xor
sub
or
lret
inc
pop
lock
add
arpl
cmp
and
mov
dec
das
cmp
call
push
pusha
mov
sbb
sbb
test
fsts
and
sbb
shll
out
pop
inc
jle
or
je
out
leave
mov
sbb
xchg
adc
dec
call
fcompl
xorb
xchg
in
pusha
repnz
iret
sub
sbb
add
jl
push
add
loop
mov
dec
fs
cmp
dec
lret
add
pop
call
and
jp
lcall
scas
ret
inc
jo
dec
ljmp
add
adc
enter
repnz
mov
add
mov
mov
loop
inc
imul
sbb
pop
sub
std
cmp
sbb
xor
push
fidivl
jo
push
dec
jle
mov
imul
mov
jg
aam
jmp
testb
push
sbb
xorb
sbb
add
mov
jne
mov
movsb
mov
add
fldl
dec
xlat
mov
test
cmp
insl
sub
push
ret
ret
jmp
add
sub
add
loopne
xchg
add
or
inc
pop
andb
bound
adc
sub
sbb
inc
sarb
jle
jmp
jmp
add
push
mov
in
sahf
lock
cmp
inc
jp
rcll
repz
popa
lods
clc
add
dec
and
add
jae
or
mov
cmpl
pop
add
inc
lret
icebp
call
orb
xchg
adc
lcall
dec
bound
lods
jo
mov
scas
rclb
xor
int
pop
add
dec
and
jb
xor
shlb
dec
xor
add
gs
dec
mov
and
inc
adc
dec
das
test
lods
cmp
in
popf
out
les
test
mov
es
or
cmp
xchg
loopne
ficoml
jp
sbb
pop
fildl
faddl
and
pop
sub
aam
in
inc
out
ficoms
inc
push
mov
loop
xor
mov
sub
jns
push
pop
inc
imul
pop
inc
push
add
jmp
or
clc
xor
jl
mov
mov
bound
dec
mov
mov
add
subl
pop
pop
xchg
mov
inc
or
fs
mov
and
push
rcrb
add
add
xchg
test
xor
add
popa
or
subl
cmp
loop
xor
mov
ss
sbbl
int
movsl
testl
lahf
push
and
rcrb
pop
dec
ret
pop
mov
mov
mov
inc
and
inc
jbe
je
iret
mov
mov
or
imul
bound
testb
ja
mov
clc
or
cli
add
shrb
lock
lock
clc
mov
and
stos
add
sbb
jecxz
pop
mov
sub
sbb
add
push
push
xor
arpl
inc
mov
stos
stc
mov
or
sahf
jecxz
xchg
cmpsl
mov
loopne
xchg
movsb
out
pop
ljmp
pop
sbb
sub
addb
rolb
jle
gs
test
mov
out
insl
inc
adc
repnz
add
xchg
jecxz
add
jae
fisttpl
xchg
outsb
or
or
je
push
out
sbb
inc
add
cmpl
rcll
inc
in
jns
xchg
push
and
add
jl
add
sbbl
add
push
mov
out
mov
jns
sbb
int
fdivs
sub
and
fs
cmc
subb
inc
test
pushf
sub
adc
and
xchg
outsb
pop
mov
sub
xchg
sbb
inc
push
jle
and
nop
rcl
cs
lods
add
lock
in
mov
xor
repnz
and
sbb
out
std
ret
repnz
and
push
lret
and
cmp
stc
add
rcrb
and
push
test
in
inc
add
sub
fcomps
jbe
cmp
fistps
out
movsl
dec
mov
pop
lea
bound
in
sbb
cmp
bound
mov
push
sbb
push
outsb
sbbb
int
dec
lret
repz
push
jno
das
pusha
and
js
stos
shll
nop
push
xor
jnp
and
xchg
inc
pop
test
xchg
rcrb
xchg
mov
lods
mov
lahf
add
mov
aas
adc
ljmp
adc
sub
lret
jno
fcoms
call
inc
sbb
out
lods
adc
pop
sbb
fwait
aam
call
js
mov
push
push
loop
mov
shrb
push
adc
sub
or
dec
nop
cmp
lods
or
stc
in
add
icebp
push
repz
add
cs
jmp
and
pop
and
mov
arpl
or
test
jmp
mov
sbb
inc
add
test
adc
cmp
inc
cmp
cmp
aam
andl
inc
pop
je
outsl
dec
push
sub
les
hlt
and
mov
inc
push
or
shlb
insl
dec
test
mov
add
dec
into
stos
arpl
add
mov
xor
inc
push
inc
aaa
xchg
add
psrlq
addr16
lret
jmp
inc
adc
test
int3
pop
loopne
xor
enter
push
jns
add
and
in
sbb
xchg
xor
adc
pop
je
sub
add
dec
repnz
add
inc
xchg
movl
nop
push
pop
or
insb
adc
cmpl
lock
adc
add
clc
cmp
dec
mov
and
push
fists
ret
insl
movsl
popf
rcrb
mov
lcall
xchg
out
dec
add
push
clc
xor
and
lock
out
jl
inc
push
and
movsl
pop
sub
out
scas
jns
les
xlat
shl
push
int
ret
enter
std
int3
imul
lock
call
out
scas
add
xchg
xchg
test
sbb
pop
mov
or
push
pop
xor
and
lret
add
add
adc
call
aad
sbb
push
pop
adc
lret
ss
divl
cmp
mov
dec
push
jl
xchg
mov
or
adc
jle
sbb
or
mov
adc
in
add
cmp
ficompl
push
cmp
sbb
push
jo
pop
fstl
push
fwait
mov
hlt
sub
sbb
test
pop
aaa
and
movsl
xchg
insb
adc
in
test
cwtl
mov
jle
dec
inc
add
int3
cld
xchg
movsl
lcall
inc
fidivrl
sbb
xor
push
dec
sub
enter
lock
hlt
adc
xchg
adc
nop
shl
cmp
xchg
daa
int3
cltd
mov
enter
ret
pop
adc
aaa
jmp
mov
adc
pop
sub
or
sbb
stos
sbb
mov
js
orb
gs
mov
mov
lock
adc
sub
and
sub
in
hlt
scas
sub
sbb
sbb
sbb
dec
jo
sbb
push
shll
insl
xor
push
xor
pushf
inc
ficompl
lds
adc
faddl
test
add
std
aad
xchg
push
inc
jge
mov
pusha
cmp
inc
bound
jg
dec
nop
mov
dec
or
pop
pop
lcall
shlb
sub
mov
mov
adc
mov
outsb
mov
ret
and
dec
mov
sbb
imul
xchg
or
sbb
mov
addr16
inc
add
push
cld
mov
inc
xchg
shrl
pusha
add
aad
inc
cmpsb
push
sbb
jo
sbb
jns
sbb
pop
out
jmp
push
mov
loop
data16
mov
dec
je
mov
sub
sbb
add
outsb
dec
and
mov
pop
add
into
pop
dec
and
dec
push
mov
inc
mov
cmc
adc
dec
out
inc
js
push
or
sub
cmp
jae
jno
pop
das
lods
ss
dec
pextrw
and
inc
fadds
loopne
pop
jb
rcrb
push
and
mov
call
sub
mov
add
pop
out
mov
cwtl
inc
mov
fsub
orb
and
sbb
inc
repnz
mov
push
cmp
adc
mov
fs
js
clc
fimuls
das
fdivs
pop
cli
mov
jecxz
and
daa
jg
loope
scas
mov
or
ret
mov
mov
add
scas
mov
sbb
aad
enclu
add
loope
pop
stc
mov
sbb
popf
mov
inc
mov
adc
test
add
mov
and
cmp
sbb
sub
or
repnz
add
push
push
cld
jbe
das
das
jl
push
cmp
xor
dec
rcl
pop
lret
dec
push
cld
xchg
inc
xor
sbb
mov
add
loopne
and
and
xchg
adc
js
pop
adc
repnz
xor
sbb
and
insl
repnz
js
int3
lods
xor
pop
repnz
gs
test
std
subb
push
add
sub
or
repz
push
xor
adc
cwtl
xor
mov
inc
push
data16
push
jmp
imul
sbb
sbb
pop
insl
into
jecxz
add
sub
mov
sub
imul
movsl
pop
addr16
push
call
rolb
mov
lock
xor
xchg
jl
cmpsl
mov
dec
psraw
jno
cmpsl
mov
mov
sbb
mov
inc
cmpsb
les
ret
pop
mov
test
out
js
add
inc
je
bnd
push
movsb
rcrb
jg
pushf
shlb
loope
fsubr
xchg
cltd
repnz
cmpsb
int3
andb
outsl
test
pushf
adc
lock
call
push
add
xor
or
test
rol
mov
xchg
ss
ficompl
inc
out
add
jne
adc
ret
and
fisubl
and
inc
mov
sbb
mov
pusha
cmpsl
pushf
mov
or
adc
lea
rcrb
cmpsb
aam
mov
notb
xor
jl
xlat
jb
cld
xor
call
jae
jle
push
in
in
push
mov
mov
push
pop
xchg
enter
push
scas
add
out
into
push
movsb
cmp
cmpsb
mov
sbb
loopne
in
and
adc
aad
mov
fucomip
das
dec
mov
pusha
mov
xchg
test
subb
mov
sub
inc
xor
or
dec
dec
xlat
cld
adc
and
nop
cmp
imul
lcall
ret
cmpsl
pop
in
out
idivb
lods
enter
lcall
adc
pop
jl
shl
shl
add
fidivs
add
pusha
adc
pop
cmp
in
repnz
in
popa
add
ds
sbb
stc
dec
nopl
ret
add
inc
mov
add
hlt
ret
fdivrp
lock
mov
repnz
xor
add
scas
in
xor
ret
pop
into
and
rol
out
out
cmp
push
filds
push
in
mov
aaa
bound
movsb
and
jne
je
add
enter
data16
icebp
and
scas
ds
ja
sbb
fnstsw
or
push
call
add
addr16
or
cmp
in
pusha
mov
adc
popa
gs
xchg
add
lret
imul
ficoms
icebp
cs
fucom
sub
jmp
xor
enterw
pop
lret
and
fisttpll
xor
xor
outsb
imul
mov
add
iret
mov
in
loop
add
pop
or
mov
popf
push
test
mov
inc
int
mov
cmp
pop
mov
fisubs
dec
ret
clc
je
mov
dec
ljmp
mov
loopne
xor
pop
add
mov
cmp
add
ds
sub
rol
xchg
add
sbb
in
sub
idiv
sbb
ficompl
rorb
pop
xor
jmp
pop
imul
sbb
and
pusha
sub
cmp
mov
pusha
rcr
les
stos
fcmovb
test
push
pusha
jnp
pop
add
lock
xchg
lret
popa
dec
or
adc
sbb
add
pop
mov
in
outsl
and
jnp
xor
fmuls
lds
outsb
inc
enter
les
pop
stos
jb
cmp
and
rcl
in
push
xchg
lods
cmpsl
xchg
or
lods
add
or
adc
mov
jnp
imul
imul
adc
pop
js
out
dec
call
daa
xchg
imul
loopne
loop
insb
mov
scas
add
out
jo
test
fldt
lods
stos
mov
fcoms
ror
xor
popa
sahf
in
scas
aaa
fs
lret
jmp
xchg
fmuls
movsb
repz
js
add
xor
aad
notb
shlb
or
sbb
in
add
push
dec
cmp
repz
les
hlt
adc
fcoms
push
out
lods
mov
and
pop
pop
push
xchg
and
pusha
popl
add
inc
push
cmpsl
xor
jns
pop
hlt
adc
sbb
nop
jp
inc
xchg
inc
loope
scas
or
pop
add
mov
ds
addl
jp
push
adc
add
aam
push
adc
into
shlb
addr16
jno
daa
orl
sub
pop
mov
insb
push
add
pushl
fwait
add
test
add
mov
jecxz
dec
rclb
mov
pop
mov
lret
dec
cmp
xchg
push
adc
loopne
or
popa
and
mov
inc
je
cmp
push
and
jb
and
and
pushf
pop
icebp
push
les
dec
xchg
loope
movsb
int3
xlat
mov
mov
out
push
addb
mov
push
shll
sbb
pop
pop
les
rorb
add
shlb
cwtl
adc
mov
test
mov
nop
add
pop
aam
filds
leave
cmp
insl
and
xchg
dec
pop
push
hlt
lock
mov
test
or
enter
rorl
and
xchg
out
les
adc
jae
push
and
daa
ficoms
ds
pop
out
add
ret
pop
inc
adc
cmpl
inc
sub
push
orb
inc
sbbl
mov
ret
test
in
push
into
rcrb
dec
sub
mov
dec
cmpsl
aas
les
mov
jno
add
mov
sub
in
pusha
mov
arpl
mov
nop
sbb
mov
dec
xchg
jp
sbb
movsl
pop
mov
jo
and
adc
cmpb
and
data16
je
sahf
dec
pop
inc
push
ds
test
insl
ret
mov
mov
inc
or
add
jae
pop
jg
mov
add
mov
imul
inc
int3
adc
stc
push
or
jl
fmull
sub
pop
add
and
and
push
jbe
inc
xor
mov
rcr
and
push
lock
xchg
xchg
adc
xchg
push
mov
in
je
mul
in
jle
adc
cmp
rol
and
jl
inc
rcl
add
push
mov
add
in
pop
addb
pop
sub
loopne
sub
shll
inc
in
adc
lock
daa
call
pop
sbb
push
clc
fidivrs
xchg
adc
sbb
lock
shl
jmp
ss
out
lcallw
and
push
je
add
mov
sbb
sbb
sbb
int3
dec
mov
adc
scas
call
adc
gs
pop
mov
sbb
xor
add
shlb
mov
in
xchg
in
add
inc
loopne,pt
loop
add
leave
jg
sub
xchg
pusha
xchg
inc
add
in
ss
or
nop
clc
sbbl
mov
insl
shlb
pop
xor
adc
mov
fiadds
mov
aam
addr16
mov
jmp
inc
inc
and
andb
les
movsb
add
jae
out
jae
mov
adc
shll
por
sbb
cmpb
and
jg
call
mov
mov
clc
push
je
push
adc
mov
adc
or
push
insb
popf
lds
dec
or
mov
mov
popf
jmp
dec
ljmp
push
push
dec
sbb
and
arpl
xchg
inc
lods
nop
lods
inc
add
add
repz
lock
outsl
mov
mov
mov
bound
cli
pusha
cmp
je
jg
nop
add
mov
dec
jbe
inc
jge
sbb
push
or
mov
dec
push
mov
pop
inc
push
dec
or
movsl
subb
leave
cmp
push
add
addl
out
inc
push
shll
push
xchg
movsb
cld
adc
mov
fiadds
in
cmpsb
das
mov
add
arpl
or
pop
add
add
xchg
pusha
test
les
xor
pop
mov
and
fnstenv
cmp
out
pop
inc
ds
cld
and
loopne
ds
stos
pop
std
mov
in
or
mov
in
jnp
cld
or
and
jl
mov
dec
fdivp
inc
mov
fs
js
or
adc
adc
sbb
push
stc
xchg
add
and
insl
sub
cmpsb
jmp
test
sbb
jmp
xchg
or
jns
add
dec
adc
mov
xchg
and
rorl
and
dec
imul
ss
in
sar
push
nop
add
ljmp
test
bsr
ds
xchg
add
lods
inc
pop
lret
icebp
mov
movd
add
mov
dec
ret
ljmp
and
ror
enter
jbe
ret
xchg
les
mov
cmp
dec
loopne
fs
mov
cmp
pop
sahf
jl
ss
aas
loopne
rorb
fiadds
popa
pop
push
or
mov
in
adc
test
and
sbb
je
or
adc
adc
mov
xchg
or
addr16
add
sahf
inc
mov
sub
mov
out
or
ds
mov
xor
mov
repnz
sbb
mov
xchg
bound
mov
insb
repnz
bound
cmp
mov
and
sbb
adc
ss
sbb
pop
shlb
call
add
sbb
xor
sbb
pop
xor
std
push
scas
sbb
adc
push
xchg
enter
mov
mov
mov
jecxz
daa
pop
ficoml
dec
popf
inc
clc
mov
and
inc
pop
jp
sbb
jecxz
jno
cmpsb
sbb
mov
loopne
lahf
jge
add
xchg
sub
shrb
or
les
xchg
gs
pop
jge
push
loopne
loope
sbbl
into
sbb
add
insl
mov
xor
xchg
fistps
icebp
adc
mov
xor
inc
lods
add
pushl
mov
add
rol
mov
imul
pop
mov
cmp
sbb
loopne
sbb
mov
mov
nop
and
notl
fwait
into
addb
or
sbb
sbb
and
xchg
test
rolb
jno
mov
or
mov
bound
sub
xlat
or
sbb
xor
or
loopne
pmuludq
and
jle
add
or
adc
pop
bound
xchg
flds
in
pop
add
dec
and
and
fisubs
xchg
and
and
fimuls
mov
jo
fistl
add
movsb
test
push
dec
rorb
arpl
in
and
and
jbe
adc
jno
sbb
mov
insl
orl
dec
cmp
fsubs
inc
push
pop
in
cwtl
or
adc
inc
sbb
leave
mov
sbb
call
rcrb
adc
cmc
push
or
outsl
rcrb
or
mov
add
sti
add
cmpsb
lods
xlat
test
inc
clc
aad
sub
push
sbb
mov
adc
mov
int3
sub
xchg
mov
xchg
aas
out
and
mov
arpl
xorb
sbb
test
scas
mov
xchg
mov
adc
xchg
adc
inc
sbb
inc
push
xchg
invd
dec
mov
adc
jge
push
mov
arpl
rclb
jmp
call
bound
lret
aaa
push
mov
shrl
xor
lcall
sbbl
and
jge
or
mov
gs
adc
xchg
add
cld
aam
add
adc
and
and
or
or
add
enter
or
shl
push
test
adc
test
cwtl
mov
sbb
adcb
test
xchg
pop
inc
js
test
mov
or
mov
aam
pop
mov
sub
or
into
stos
fsubs
aam
adc
es
add
adc
sbb
rorl
iret
jg
sub
adc
lock
loop
jo
stos
or
sbb
out
int3
add
jg
xchg
lds
fdivs
sbb
lcall
adc
or
xchg
xor
jge
aas
pop
dec
add
or
xchg
pop
add
insl
inc
push
mov
xor
lret
or
jae
gs
push
dec
xchg
rorl
xchg
imul
daa
adc
mov
ret
stos
es
mov
xor
clc
adc
imul
inc
sub
add
xor
dec
insb
pop
mov
adc
lods
push
dec
push
rcl
scas
add
mov
pop
cmpsb
adc
stos
inc
cld
add
pop
mov
rcrl
jns
rcrb
pop
pop
jl
add
scas
int
stos
push
mov
sbb
add
in
push
test
xlat
add
out
movsb
sar
add
les
xchg
cld
lret
out
mov
orb
xchg
jbe
push
repnz
pushf
mov
push
enter
add
mov
xorb
jle
push
adc
jmp
faddl
jb
add
ret
adcb
push
es
mov
cmpsb
push
js
jmp
inc
incl
xor
add
sbb
add
mov
psllq
insb
pop
adc
in
enter
cmp
shl
add
xchg
stos
mov
lretw
out
addb
ljmp
or
add
lahf
and
jle
lods
and
inc
js
test
andl
rcrb
or
enter
mov
mov
push
call
ljmp
dec
pop
call
arpl
mov
inc
xchg
jg
mov
jo
pop
add
jecxz
mov
adcb
cmpsb
fs
mov
sti
dec
jp
lock
jecxz
repnz
push
mov
xchg
push
fmuls
and
js
ret
jmp
int3
pop
subl
fldl
xchg
cmp
ds
adc
fcoml
add
stos
cmc
cwtl
jmp
test
adc
aam
sbb
movsb
and
mov
mov
in
movsl
insb
inc
pop
sbb
push
jmp
pusha
add
mov
pop
push
outsl
xchg
stos
jecxz
in
inc
mov
sub
leave
test
and
icebp
add
enter
jle
mov
inc
fcmovbe
cltd
movsb
popa
aam
pop
jg
call
fdivs
xchg
add
das
lahf
or
adc
push
cld
or
jle
xor
pop
sbb
out
push
and
test
nop
call
mov
mov
sbb
std
andl
xchg
sbb
push
mov
add
sbb
movb
scas
dec
fstps
push
jle
dec
push
cld
add
addl
pcmpgtd
cmc
xor
test
mov
pop
stos
dec
mov
jnp
cmpsb
pop
add
cli
add
int3
bound
jle
cmp
mov
dec
insl
push
lods
pushf
lock
sbb
lock
xchg
cmpsl
sti
add
or
push
aam
test
cmovs
and
push
repnz
loop
call
pop
jl
push
adc
xchg
scas
cmpb
data16
lea
pop
jns
test
dec
cmpsl
clc
ja
lahf
sbb
loop
std
push
lods
xor
sbb
lahf
leave
or
in
lods
jnp
ljmp
sbb
adc
in
std
mov
hlt
repnz
int3
sbb
mov
ret
into
scas
pusha
test
and
pusha
xchg
adc
shlb
jns
dec
or
adc
push
add
repnz
pop
push
andb
pushf
mov
les
xchg
mov
out
dec
xor
pop
inc
push
ja
push
mov
jmp
rolb
iret
repnz
bound
xchg
sahf
icebp
jmp
test
pop
xchg
js
ret
dec
lret
sbb
loopne
call
dec
lods
pushf
add
jmp
dec
scas
sbb
xchg
sti
mov
mov
mov
fisubrl
pop
orb
stos
dec
xchg
daa
push
fwait
and
inc
fsubrl
shlb
mov
push
ret
mov
or
mov
js
mul
adc
pop
push
js
sbb
nop
lahf
inc
inc
lock
in
sub
mov
lcall
js
pop
jp
jle
dec
adcb
enter
test
pushf
mov
pop
lds
jmp
aad
rcr
add
pop
pusha
call
test
jbe
test
xchg
in
inc
add
ret
cmp
cmpsl
loop
push
inc
inc
enter
cmp
int3
cwtl
cmp
addr16
push
adc
enter
icebp
loopne
shr
sub
jle
and
xchg
sbb
sahf
rorl
in
movsb
inc
or
aam
dec
sub
push
add
and
adc
pop
adc
out
movsb
test
mov
adc
adc
mov
popf
adc
sbb
nop
test
adc
ret
and
hlt
push
inc
sarb
jp
mov
lret
push
adc
enterw
jmp
adc
sbbb
add
mov
test
xchg
nop
movsb
pop
test
add
push
les
and
icebp
fs
push
test
ds
in
mov
cmpb
ficoml
in
mov
rclb
push
or
enter
push
jns
pop
pop
mov
es
pop
es
push
iret
or
mov
test
clc
aam
mov
push
cltd
push
sbb
jp
jb
mov
cmc
adc
adc
adc
push
inc
cld
repnz
adc
test
cmc
xchg
mov
ficoml
repz
gs
shlb
pop
push
out
sub
les
push
mov
fs
jle
mov
mov
pushf
aam
adc
outsb
or
shrl
add
adc
pop
or
out
fwait
jbe
cs
pusha
out
jb
pop
dec
inc
ret
mov
push
lods
sar
push
add
cmp
jl
test
out
mov
pop
push
ret
mov
mov
dec
shll
aam
mov
insl
dec
pusha
dec
test
or
adc
push
test
xor
cmp
xor
pusha
lods
dec
xor
lods
call
test
push
sub
adc
mov
or
iret
sbb
rcrb
shl
and
jp
fistpll
ret
addb
add
sub
jle
sub
hlt
sub
or
add
jmp
add
push
lock
add
mov
jecxz
enter
pop
test
and
stos
bound
mov
fisubrl
inc
adc
xchg
mov
and
out
movsl
pop
repnz
mov
add
jle
aam
and
lods
mov
cmpsl
inc
ds
push
outsl
adc
mov
xor
mov
jle
xchg
add
cmp
aaa
sbb
imul
push
leave
xchg
dec
sbb
in
add
in
mov
and
cld
inc
jmp
inc
lock
hlt
movb
push
push
lods
mov
faddp
aas
mov
pop
push
add
nop
pop
outsw
xor
movsb
xchg
fcoml
int3
mov
test
mull
pop
add
testb
in
dec
test
nop
push
sbb
data16
in
mov
mov
fbstp
addl
or
and
add
sub
fistpll
dec
inc
loopne
adc
fisubl
pop
mov
jnp
and
adc
bnd
cmp
add
sbb
xor
flds
sbb
and
mov
inc
fcomps
pop
out
addl
jp
mov
pop
pusha
popa
into
sahf
mov
jg
push
out
pop
add
in
repnz
jns
sbb
decl
add
xor
xor
mov
test
sbb
je
add
pop
test
push
mov
dec
js
adc
movsl
sbb
pop
lret
jmp
subb
clc
mov
add
and
xlat
and
push
inc
loopne
inc
add
test
pusha
dec
xor
fs
add
rcrl
js
add
stos
negb
add
leave
add
sbb
lods
aam
pop
mov
fs
outsl
stos
add
push
add
test
push
into
repnz
lock
cwtl
pop
add
push
inc
inc
dec
fsubr
iret
sbb
sub
pushl
int
call
stc
inc
lahf
cmp
push
js
daa
pop
idivl
adc
xorb
je
imul
add
mov
addb
ret
test
mov
pop
scas
add
rcrb
mov
add
inc
and
dec
in
ret
test
add
stos
pop
push
addr16
jnp
mov
les
inc
ljmp
cltd
lds
jo
test
inc
lods
mov
ja
sub
pop
leave
imul
movsb
jle
int3
cmc
cli
and
lahf
add
ret
jbe
add
test
add
mov
cmp
divl
xchg
rorl
jmp
sbb
hlt
or
fildll
pop
pslld
adc
add
dec
fcmovnbe
jnp
xchg
movsb
jmp
adc
popa
movsb
outsl
mov
pxor
mov
mov
jl
rorb
ljmp
loopne
iret
or
testb
enter
sub
jmp
ret
sub
dec
insl
call
les
adc
cmp
in
sbb
dec
cmp
imul
push
decb
int3
popf
ret
pop
jge
cmp
xlat
push
subl
add
pop
pop
pop
pushf
adc
clc
xchg
push
dec
jl
repnz
or
icebp
dec
popf
mov
sbb
outsl
adc
or
pop
add
jo
call
dec
ficoml
stos
arpl
test
dec
xchg
jl
adc
lods
repnz
dec
fmull
push
fimull
adc
int3
xchg
mov
fstpt
loope
call
jmp
push
scas
xchg
jo
js
add
push
movzbl
jle
das
add
cmp
add
leave
jle
arpl
dec
push
push
fimull
call
shrl
adc
xlat
add
fldt
mov
sbb
cmp
inc
lods
movsl
add
scas
repnz
addr16
pop
repz
jle
mov
rorb
jl
push
std
or
inc
repnz
add
imul
rclb
add
push
lret
pop
or
xchg
jl
ds
inc
xchg
lds
mov
rorb
inc
cmpsb
ret
popf
push
int
xchg
xor
jge
or
xchg
push
pop
pushf
loop
inc
jl
cld
adc
lret
adc
lock
andb
ljmp
push
shll
clc
or
push
and
or
mov
mov
test
call
dec
arpl
mov
nop
fdivrs
xor
mov
mov
clc
xor
lret
adc
fmuls
push
loopne
jle
adc
cld
leave
pop
fadds
mov
out
xor
xor
sbb
repnz
ret
mov
mov
adc
add
andl
adc
adc
or
icebp
adc
enter
jo
mov
add
icebp
imul
xor
mov
or
sub
add
mov
cwtl
movhps
ljmp
pop
ret
sbb
jmp
enter
xor
hlt
repz
add
loop
xor
sbb
in
pop
add
outsb
pop
adc
psubb
or
movb
je
fidivrs
in
mov
push
imul
popf
adc
jbe
adc
sti
test
inc
test
imul
fmull
lock
mov
loope
dec
mov
repnz
nop
and
xor
add
subb
ret
dec
das
sbbl
mov
adc
aad
loopne
jmp
xor
mov
movups
xor
dec
jo
push
rclb
mov
push
repnz
lahf
add
lods
add
sbb
insl
cli
fsubr
cwtl
pop
and
rorl
test
push
into
add
mov
push
adc
imul
idivb
sub
popa
pushf
in
or
lret
sbb
test
loopne
lds
mov
nop
enter
sub
addr16
sbb
sub
daa
stos
out
lcall
negb
cltd
stos
lret
pop
je
add
andl
dec
or
lods
inc
nop
stos
cld
lahf
add
mov
arpl
add
repnz
sub
cmpsl
test
wrmsr
dec
push
cmp
outsb
ret
mov
jb
psubsw
and
xchg
ljmp
pusha
lods
lock
shll
push
inc
lods
insb
and
xchg
aad
xor
fs
or
ljmp
dec
outsl
mov
adc
cmpsb
in
popl
fbstp
in
or
lea
cmc
mov
aaa
out
mov
add
mov
push
jle
cmpsl
add
scas
stos
add
push
stc
ljmp
pop
bound
mov
test
cmp
xchg
adc
and
in
sbb
jae
outsb
add
icebp
stos
mov
lods
aam
add
push
xchg
cmpsb
stos
hlt
add
enter
jecxz
fdivrs
xorb
and
pusha
add
jmp
pop
mov
je
sbb
cmpb
sbb
push
bound
mov
cmpsb
mov
addb
out
sbb
shlb
push
addr16
hlt
call
inc
dec
pop
mov
dec
adc
sub
daa
in
sbb
fmuls
mov
nop
rcl
mov
std
fdivp
and
bound
sbb
movsb
add
lcall
dec
sbb
sbb
jnp
mov
push
int
pop
sbb
jae
xor
test
mov
or
bound
and
jmp
push
dec
mov
sbb
push
cmpsb
adc
repnz
stos
add
hlt
in
jle
adc
sub
push
sub
lock
inc
adc
repnz
addr16
pusha
sti
inc
pop
dec
xchg
js
rol
js
loop
daa
inc
call
loope
mov
jne
inc
out
sub
cs
cmpsb
pop
push
inc
add
or
inc
lcall
jo
adc
xchg
rolb
xor
call
inc
adc
mov
jl
jae
push
mov
jg
test
aam
xor
lock
lret
in
add
fnstsw
add
or
movsb
nop
dec
andb
xchg
push
cmp
adc
repnz
xchg
mov
in
add
or
add
out
xor
mov
dec
in
xchg
jle
inc
ret
scas
stos
mov
and
jg
push
xchg
dec
movsl
add
and
int3
daa
push
js
xchg
mov
xchg
les
or
mov
mov
js
add
out
sbb
inc
rorb
adc
sbb
sbb
sub
cld
mulb
pop
fcmove
shr
enter
xor
pop
rclb
add
ljmp
sub
mov
sub
leave
lock
loopne
xchg
xchg
orb
inc
adc
cwtl
nop
stos
push
mov
call
int3
cwtl
aam
or
lcall
pop
popf
int
push
and
test
test
sahf
mov
fdivrs
push
addr16
mov
or
sbb
pop
adc
loopne
out
sbb
repnz
insb
push
lret
es
jp
je
and
ret
sub
or
jne
and
mov
imul
adc
pop
inc
hlt
xchg
fldl2t
or
lcall
sub
add
inc
xor
inc
fiadds
mov
vandps
or
int
push
ret
cmp
sub
xor
xchg
rclb
and
jne
mov
in
cmc
or
in
sbb
or
int3
stc
xchg
add
add
ret
out
rolb
je
fwait
movsb
mov
push
ret
xchg
add
sbb
pop
call
jo
sub
orb
fadds
in
jle
cmc
es
mov
mov
bound
inc
loope
std
mov
adc
stos
in
out
and
adc
mov
outsl
das
out
mov
inc
mov
add
out
ret
adc
sub
sub
sti
jle
mov
sub
andl
sbb
dec
jbe
inc
movl
mov
ljmp
push
pop
push
adc
movsb
pop
mov
lods
mov
jmp
add
push
jle
fisubrs
adc
addr16
and
cmp
xchg
out
fxch
push
rolb
pop
mov
test
orb
jmp
jns
jnp
mov
adc
ljmp
mov
stos
add
stc
cmp
shl
fdivrs
dec
test
shr
jecxz
lahf
sbb
adc
rorl
sbb
adc
pop
jae
pop
inc
xor
jmp
xchg
mov
add
xor
ret
ret
push
dec
stos
inc
in
outsl
repnz
sbb
sti
js
add
ret
dec
mov
sub
add
out
sbb
cmp
fptan
and
and
sbb
out
int3
cltd
movsl
cmp
pop
mov
cmp
adc
shr
out
inc
arpl
es
mov
add
push
lret
gs
or
js
movnti
cwtl
xor
xor
adc
jae
mov
js
pop
stos
mov
add
repnz
or
sub
mov
cld
xchg
push
push
xchg
adc
and
adc
in
or
pop
dec
enter
or
jae
data16
xor
add
sbb
mov
sbb
add
mov
cs
int3
jmp
jae
sbb
push
cwtl
aas
dec
mov
arpl
add
jae
push
loopne
arpl
inc
pop
or
mov
rcrl
test
in
add
mov
pop
es
mov
nop
loopne
ja
add
clc
lahf
sbb
inc
mov
add
xor
rol
dec
cmp
enter
inc
pop
and
mov
add
fs
out
cmp
cmp
mov
mov
push
mov
adc
dec
and
fadds
fsub
clc
ljmp
inc
xchg
push
add
cwtl
je
sbb
sub
push
or
in
mov
jle
mov
orb
ret
shll
sbb
inc
inc
roll
into
scas
nop
and
mov
dec
cmp
int3
push
hlt
add
pop
adc
inc
lods
adc
out
fwait
and
fmul
adc
or
and
popa
rolb
add
lret
cwtl
fs
dec
inc
fcoms
mov
mov
mov
sbb
push
add
lcall
dec
or
lods
movsl
cwtl
loopne
mov
cwtl
push
fwait
rol
push
cmp
xchg
add
mov
idivl
jl
dec
ljmp
jmp
mov
shlb
ljmp
nop
xor
push
and
or
mov
sbb
dec
push
stos
in
xor
inc
jb
add
or
mov
movsl
loop
out
ljmp
andps
jp
xchg
mov
push
adcl
and
pusha
rclb
nop
sub
je
lods
xchg
mov
jle
enter
inc
lret
imul
shlb
xor
aad
mov
mov
push
jge
xor
jg
and
out
pop
push
test
jo
repz
pop
adc
jg
or
repnz
test
shl
push
add
stos
call
add
add
jo
mov
insb
bound
out
mov
xor
repnz
shlb
lret
add
icebp
xor
lahf
fiaddl
sub
lock
sbb
cld
ljmp
push
mov
loop,pn
in
jecxz
mov
sub
jle
mov
cmp
dec
xor
pop
ret
mov
fisttpl
nop
lods
push
and
call
cs
jb
sbb
push
sarb
sbb
add
loope
pusha
adc
rorb
inc
jb
cmpps
in
inc
xchg
nop
pop
mov
jecxz
cwtl
movsb
in
mov
mov
iret
enter
enter
adc
mov
out
shll
in
pusha
rolb
dec
sub
pop
jle
repz
scas
pop
addb
push
add
lret
jo
cld
hlt
add
ret
fsts
shl
mov
lret
adc
mov
mov
and
call
cld
xchg
in
jp
int3
lahf
fildll
dec
hlt
adc
js
lock
mov
adc
push
jge
and
ficoms
xlat
loope
pop
insb
mov
fidivrl
cmpsl
or
repnz
repz
add
pop
pop
add
pop
and
add
jo
xor
call
xchg
addr16
adc
ds
pop
mov
mov
daa
add
push
mov
fwait
js
add
fidivrl
pop
pushf
mov
sbb
repz
lret
xlat
add
xchg
jae
mov
sub
bnd
xor
std
fcmovnbe
shl
jp
pop
inc
fidivl
inc
push
lods
repnz
repz
mov
cltd
dec
movsb
mov
sbb
faddl
xchg
leave
xlat
lret
lahf
add
adc
add
rorb
push
jo
add
mov
push
sub
aaa
scas
in
pop
sarl
fiadds
call
xchg
mov
ss
pop
sub
mov
enter
mov
mov
rcrb
jge
push
mov
adc
mov
add
cs
mov
pop
fadd
sbb
adc
out
ret
cmp
rcrb
jns
push
adc
ds
scas
or
sbb
repnz
inc
or
insl
jmp
rolb
icebp
test
mov
rorl
dec
and
or
cmc
das
adc
adc
jnp
subb
push
adc
and
mov
imul
adcl
ds
mov
mov
inc
jecxz
pop
pop
xor
mov
js
lods
add
jne
push
mov
xor
push
cmc
repnz
push
adc
into
out
inc
ljmp
pop
cwtl
push
and
xchg
leave
add
push
in
adc
sbb
add
enter
cmpsl
adc
js
inc
dec
adc
or
ror
fstpt
and
lret
xor
test
sbb
lds
mov
aad
sbb
and
fcmove
cltd
adc
sbb
add
rclb
fcmovu
in
adc
adc
sbb
shlb
push
into
or
inc
mov
xor
push
dec
les
inc
mov
xor
loopne
cmp
test
dec
or
sbb
adc
js
inc
pop
les
pop
imul
add
pop
xor
andb
and
adc
pop
rcll
cmpsb
cmp
and
xadd
and
in
flds
mov
adc
adc
mov
add
xor
sub
push
sub
pop
or
or
xchg
push
adc
cmc
add
iret
enter
jbe
cmp
dec
or
dec
lock
xchg
out
xor
into
add
repnz
mov
pop
push
or
and
xlat
xor
lods
or
insb
aaa
add
sbb
push
sti
sub
add
dec
cmp
js
call
ds
into
and
pop
adc
adc
pop
add
orl
mov
pop
inc
and
push
add
add
mov
inc
mov
cmpsb
lods
sbb
shll
cmp
xor
call
or
imul
jae
test
lods
loopne
std
inc
jl
cmp
push
fmuls
mov
loopne
mov
out
inc
repnz
cmc
je
xchg
hlt
xor
shrb
pop
and
test
adc
mov
out
sub
js
ror
pop
mov
or
sbb
icebp
push
dec
mov
mov
enter
xor
mov
fadds
ret
js
add
adc
add
jb
mov
arpl
sbb
and
pusha
add
add
add
inc
cmp
pop
cmp
inc
inc
xor
test
push
je
push
adc
push
xor
or
mov
imul
pop
fisttps
mov
or
inc
bound
cmp
fsts
mov
pushf
cmp
cmp
sub
les
mov
adc
ljmp
rolb
insl
sarl
add
push
jbe
shlb
aaa
in
lock
push
add
xlat
icebp
movl
push
adc
and
enter
add
add
loope
lret
adc
or
das
add
je
lock
cmp
cmpsb
jl
jle
mov
add
pop
cli
jp
int3
dec
ja
xor
pop
push
push
mov
jp
pop
sbb
sub
push
mov
pop
repnz
xor
in
push
jnp
in
jne
xlat
outsl
xor
mov
jecxz
stos
lahf
loopne
push
ljmp
sbbl
insb
pop
add
xor
pop
xchg
mov
xor
pop
cmp
ljmp
adc
inc
add
aaa
shll
adc
fisttps
sub
icebp
and
ljmp
aas
testl
leave
pop
push
hlt
pop
push
or
sbb
or
outsl
mov
in
cltd
imul
mov
movsl
push
push
dec
pop
cmp
mov
or
mov
imul
shll
lret
adc
pop
ljmp
xchg
pop
pop
ret
pop
sub
add
inc
clc
fstpt
orb
mov
jle
icebp
dec
lock
xchg
dec
mov
add
fmuls
or
xlat
ljmp
pop
push
and
and
push
loope
cmp
push
sbb
out
add
jbe
cmp
adc
std
pop
xor
pushl
and
push
jg
xor
add
and
jmp
js
sbb
inc
add
pop
sub
add
jle
inc
add
in
xor
jo
std
jno
add
lds
push
dec
daa
pop
add
inc
cs
xchg
adc
or
xchg
xor
fisttps
jmp
mov
fildl
adc
fucomip
lahf
pop
ret
push
pop
mov
cmp
call
loopne
pushw
jmp
adc
xchg
jp
pop
xchg
cmp
arpl
div
enter
rorb
cld
and
jmp
ja
jl
ds
sbb
negl
pop
stos
insb
ja
adcl
inc
neg
push
mov
or
dec
mov
adcb
clc
js
rclb
rol
ret
xor
mov
adc
mov
push
pop
jbe
mov
sub
jp
repz
cmp
jecxz
xchg
and
jmp
shl
inc
jns
jns
divl
sub
push
add
out
pop
and
xor
inc
xchg
out
inc
movsl
inc
addb
sub
les
or
jmp
cltd
mov
push
call
pop
sbb
push
dec
arpl
scas
adc
mov
fcompl
jns
dec
jb
push
jbe
push
mov
inc
and
pop
xchg
pop
push
int3
adc
push
pop
subl
push
adc
adc
mov
pushf
sub
push
pusha
push
mov
fcomip
xchg
push
push
xchg
lahf
xor
add
xchg
pop
push
xchg
out
mov
add
pop
push
jmp
sbb
and
push
xorl
mov
mov
xor
pushl
dec
jbe
add
and
jg
testb
pop
inc
mov
and
mov
sbb
lret
mov
sub
pop
add
test
add
jmp
mov
stos
stos
dec
rclb
pop
mov
adc
xor
and
fidivrl
add
xchg
dec
add
jmp
subb
add
data16
arpl
leave
push
rclb
adc
flds
in
dec
out
or
adc
lret
sbb
and
sahf
inc
testl
out
or
adc
adc
mov
ds
xchg
push
or
mov
jge
mov
push
mov
sub
ret
push
fs
and
pusha
pop
mov
popa
in
sub
jmp
add
push
pop
add
mov
movsl
outsl
xchg
mov
dec
lods
mov
or
dec
or
mov
xor
inc
mov
test
enter
and
pusha
adc
add
aad
inc
or
inc
das
push
add
pop
mov
pop
xor
out
mov
push
or
data16
jo
push
dec
aas
push
cwtl
and
stc
push
xor
jmp
mov
xor
flds
inc
mov
add
dec
xor
fcomps
add
jmp
aam
int
loopne
add
dec
dec
mov
sub
xchg
xchg
pushw
or
fldenv
add
clc
mov
adc
out
dec
mov
pop
jmp
xchg
xchg
push
sti
shlb
popa
arpl
jge
push
inc
inc
xor
pushf
ret
fs
add
enter
or
xor
andl
push
and
ret
sub
ds
cmp
or
or
fldenv
cmp
out
mov
push
pop
not
shl
add
cmp
or
cmp
sti
adc
vpor
or
psubusw
ja
or
mov
sub
inc
daa
or
add
or
pop
mov
inc
push
or
mov
jmp
add
push
add
inc
nop
insb
rcr
mov
sub
aaa
and
sub
inc
lahf
add
clc
pop
mulps
int
out
sbb
inc
andb
push
cmp
lcall
dec
popf
xor
mov
lret
sbb
lods
ret
addb
in
dec
push
cmp
sub
mov
stc
xchg
pop
rcll
inc
cmp
pop
pop
pop
sub
and
jle,pt
out
lods
mov
mov
or
push
insb
jg
jmp
pop
mov
out
jne
sbb
fdivrp
sbb
xchg
movsl
mov
xchg
call
xor
dec
dec
jne
mov
jo
add
neg
push
mov
adc
sar
insw
xor
pop
divl
xor
add
subps
adc
or
xlat
cmp
lret
adc
adc
imul
fldl
add
pop
pop
pop
push
divl
jl
mov
jg
mov
and
jmp
sub
and
xor
ret
jmp
test
add
pop
xor
xor
adcb
add
add
add
loope
sbb
adcl
dec
inc
inc
rorl
pop
repz
sub
mov
push
mov
stos
xchg
jne
xor
pop
pop
mov
mov
or
pop
daa
and
jbe
push
shr
push
outsl
inc
xchg
adc
sbb
xor
mov
add
or
enter
pop
je
and
mov
push
rcrb
add
add
and
out
nop
std
xor
and
mov
and
pop
push
add
mov
push
dec
icebp
ss
inc
outsb
popa
ja
xor
push
rol
push
or
loopew
pop
cwtl
pop
push
pop
push
inc
or
mov
pop
rorb
aaa
insl
jmp
push
mov
cmp
icebp
pop
cmp
aad
add
dec
adc
cmp
repz
jmp
or
adc
pop
cs
sbb
in
testl
mov
mov
and
jmp
test
sbb
xchg
sbb
sahf
fisubrs
movsb
inc
sarl
add
fcoml
shlb
pusha
push
push
movb
testl
add
or
shl
push
jmp
or
push
pop
loope
pusha
aas
and
inc
cmp
add
mov
sti
imul
dec
add
nop
and
jns
dec
fidivl
shl
xor
mov
insb
test
imul
jl
push
inc
or
cmc
fs
flds
pop
neg
loopne
push
push
es
pop
mov
sub
ret
test
int
sub
pop
push
mov
jmp
dec
shr
jno
or
push
push
push
jmp
xor
fistps
mov
ds
insl
inc
pop
jmp
dec
shr
sub
std
jp
or
sarb
adc
mov
popa
push
in
out
xor
and
adc
mov
adcb
jo
mov
sarl
or
xchg
lds
dec
enter
jmp
test
lret
add
bound
sti
js
pushf
sub
pop
jl
or
rolb
or
roll
shrb
lcall
pop
mov
dec
or
push
dec
cmp
incb
and
sbb
and
fld
push
fs
and
ret
fisubl
mov
and
lcall
or
aas
pop
push
lock
and
mov
or
fldl
mov
and
add
clc
add
sub
adc
imul
stos
imul
je
jecxz
inc
dec
dec
mov
xor
push
and
sbb
push
outsb
pop
in
and
loope
add
nop
lods
push
mov
jl
rol
ja
dec
jbe
rcrb
push
sbb
fs
lods
adc
add
sbb
fwait
and
xlat
pop
mov
xchg
xor
std
pop
adc
pop
sub
push
leave
ret
stos
and
and
bnd
xlat
lods
jo
push
or
pop
jmp
xor
lods
xlat
rolb
and
push
dec
mov
popa
mov
push
mov
in
sub
inc
mov
cli
or
pop
sbb
sub
jb
mov
dec
add
sti
pop
jmp
and
out
sub
inc
push
xchg
pop
sbb
xor
mov
ljmp
and
in
pop
xchg
inc
jp
dec
les
pop
inc
scas
popl
fldcw
sbb
popa
popf
ret
ret
cmp
shl
mov
add
dec
cmp
lcall
movb
pop
popf
jbe
push
notb
mov
push
repnz
mov
pop
mov
push
jmp
adc
push
jecxz
inc
cmp
icebp
jmp
mov
pushl
fistpl
inc
flds
pop
imul
popl
in
push
filds
inc
cs
push
daa
jmp
xorl
ret
stc
push
shl
adc
daa
pop
pop
repz
sub
lods
xor
fcoms
fsubl
mov
cmc
dec
int
loop
inc
cmp
adc
add
adc
or
cmpsb
mov
cwtl
arpl
mov
jmp
mov
mov
jns
xchg
icebp
in
push
stos
pop
dec
jmp
cmp
lret
pop
mov
push
add
mov
int3
inc
stos
icebp
push
cmc
data16
adc
int
gs
clc
imul
adc
sbb
ds
push
ja
xor
arpl
leave
dec
sub
or
mov
pop
and
dec
loopne
mov
sbb
cwtl
loopne
icebp
xchg
dec
outsb
imul
xchg
les
sbbb
sub
push
fidivrs
stos
jp
cltd
mov
fimull
in
out
xchg
xchg
add
push
nop
js
pop
or
xor
jnp
push
clc
rorb
pop
xor
mov
dec
or
roll
cmpsb
pop
pop
inc
loopne
lds
push
rorl
test
push
mov
mov
mov
pusha
pop
mov
decl
cmp
fisubrl
ljmp
or
xchg
movsl
mov
jmp
sahf
mov
enter
test
add
shrl
sbb
cmp
adc
shr
xchg
sbb
xor
adc
xchg
cmp
adc
mulb
ficoms
push
dec
shll
push
and
sub
add
arpl
xchg
imull
push
dec
cmp
cli
shll
ret
push
rorb
mov
lahf
filds
dec
cmp
cmp
dec
es
push
inc
xchg
adc
xchg
and
adc
cmp
inc
sub
pop
aaa
out
repnz
pop
adc
popa
pop
jae
pushf
ljmp
add
xor
mov
add
ret
and
les
mov
pop
pop
push
addl
mov
sti
push
or
mov
pop
cmpb
jb
incl
push
jne
ret
sub
in
pop
mov
sbb
jecxz
or
pop
dec
dec
xlat
ret
and
add
and
outsl
add
cli
and
pop
mov
add
lret
andb
testb
shl
push
mov
shl
mov
int3
pop
xor
sub
add
sub
jo
inc
adc
pop
add
clc
clc
pop
mov
sbb
inc
into
cmp
jg
or
mov
inc
pop
mov
jmp
mov
stos
andl
jmp
adc
mov
or
leave
mov
sub
mov
xor
pop
fcoml
pop
dec
add
cmp
xor
push
pop
mov
jmp
lock
push
mov
mov
mov
add
push
pop
roll
mov
xor
inc
or
aaa
or
sub
mov
adc
jnp
pop
test
pop
pop
inc
cli
sbb
inc
imul
adc
push
push
mov
leave
jae
nop
jle
sub
fdivl
pop
rcrl
iret
push
push
pop
insl
mov
fistpl
aam
xor
scas
andb
jmp
jmp
int3
xchg
jl
mov
mov
dec
mov
add
push
mov
divb
in
pop
xor
or
jmp
mov
es
shl
add
sbb
cmp
repnz
push
mov
lea
adc
or
lret
insb
cmpsb
dec
pusha
push
push
xchg
adc
xchg
or
pop
sub
lock
push
into
sub
fsts
add
and
aas
pop
imull
pop
jp
repz
or
mov
push
or
imul
push
dec
push
rorl
loopne
jmp
les
fsubl
sbb
iret
push
mov
xor
and
mov
push
sbb
mov
xor
icebp
jmp
push
mov
aam
roll
out
push
xlat
mov
ret
rclb
bound
jp
mov
jno
push
fsubl
aaa
pop
and
hlt
rol
cmp
sub
orl
adc
inc
idivb
or
add
negb
jl
je
cmp
loope
aad
pop
or
push
scas
inc
mov
xchg
cli
or
cmpsb
and
cmp
or
sbb
add
sbb
ret
push
xchg
inc
cmpsb
out
bound
inc
push
dec
jl
add
fcom
call
inc
push
inc
sub
and
lcall
inc
jbe
jns
jne
xor
das
ljmp
add
push
push
call
icebp
xchg
cwtl
outsb
int3
cmp
lea
sbb
je
jmp
rol
sbb
xor
sub
mov
jns
dec
adc
push
push
mov
adc
xchg
and
ljmp
in
inc
and
lea
xchg
pop
outsl
mov
jmp
and
sbbl
mov
mov
outsb
bound
and
mov
out
jg
add
not
jmp
call
fmuls
jbe
or
cld
fprem
xor
test
shr
push
pusha
xor
jbe
mov
sbb
sbbb
push
push
pushf
les
fcompl
xchg
cmp
adc
data16
int3
adc
enter
pop
pop
mov
adc
jl
push
cmp
and
adc
cmp
push
mov
xor
out
orb
faddl
jmp
sarb
stc
xchg
xchg
cltd
add
mov
cmp
dec
inc
jle
add
add
adc
push
pop
push
andb
divb
into
mov
xor
jmp
add
arpl
es
xchg
sub
pop
push
mov
mov
call
xchg
cmp
out
lock
add
xchg
stc
sub
out
lret
push
mov
push
cmpb
push
lcall
mov
add
dec
ret
pop
push
popa
add
lret
lods
xchg
cld
sub
ss
add
mov
cli
in
jbe
jmp
inc
addr16
dec
pop
xchg
jb
adc
cmp
or
aas
pop
lea
or
pusha
inc
pop
sti
add
pop
mov
add
fldl
fcoms
add
movsb
pop
mov
sub
aaa
sbb
test
pop
sub
jb
mov
add
jl
lret
mov
or
dec
pop
push
mov
push
je
sbb
xchg
jl
xor
push
mov
out
dec
xor
prefetch
cmpsb
jnp
add
sbb
dec
pop
adc
in
sub
jb
lds
fisubrs
push
inc
lods
orl
movsl
xchg
push
and
xor
fisttps
cmp
sbb
sbb
not
mov
jmp
push
jnp
iret
and
subb
ljmp
ja
and
sub
pop
insb
or
or
je
int3
or
jnp
add
xchg
insl
add
inc
insb
pop
pop
aaa
add
or
aaa
jmp
ficoms
cmc
pusha
dec
popa
pop
jg
mov
pop
jle
jo
push
daa
ss
mov
add
shr
jo
add
add
cmp
pop
xchg
inc
daa
push
xchg
pop
bound
vmload
cmpsb
sti
dec
push
dec
xchg
xchg
dec
fs
push
push
pop
jle
popa
jmp
ljmp
adc
sub
jecxz
sub
psubsw
or
test
and
mov
test
inc
out
push
sub
push
in
add
sub
push
mov
clc
movsl
call
and
cmp
and
test
stos
adc
das
pop
xchg
enter
mov
and
add
jae
sub
sbbb
adc
add
push
push
or
imul
push
add
cmp
rol
sti
push
pop
push
add
loop
mov
adc
ss
push
jge
cmpb
ret
push
aaa
sbb
out
xchg
les
and
pop
xor
or
push
mov
xchg
inc
int
adc
in
rolb
not
add
shll
push
flds
or
repz
les
mov
les
test
sbbb
sbb
xor
rol
inc
push
or
and
loopne
jne
pushf
loop
or
or
or
jmp
rorl
pop
sbb
pop
push
repz
mov
int
mov
sarl
jbe
sub
adc
sub
add
dec
hlt
mov
and
xor
pop
dec
pop
int3
xchg
data16
icebp
aas
ljmp
or
xchg
and
push
push
pop
mov
jge
cmp
test
shl
ljmp
idiv
dec
xor
mov
xchg
xor
daa
xor
push
add
add
aad
push
add
dec
add
jo
sbb
cmp
in
ja
sub
mov
add
hlt
lret
adc
insl
outsb
dec
shl
push
sub
push
sub
jb
popl
bnd
test
les
arpl
test
push
insl
xchg
rcl
jns
inc
xor
roll
xor
sbb
bound
aaa
and
pop
fmuls
ret
push
xor
or
jmp
add
mov
push
and
mov
pop
dec
xchg
shlb
pop
test
mov
pusha
mov
xchg
inc
mov
jae
dec
jp
imul
cmc
or
add
push
jp
add
dec
pop
popa
xchg
lret
js
push
jmp
pop
mov
pop
jnp
and
jg
mov
push
sbb
jmp
cmc
iret
mov
inc
outsb
add
dec
test
jge
pop
inc
testl
mov
adc
mov
jmp
xor
push
xor
shl
add
clc
jecxz
add
and
dec
pop
adc
push
lcall
or
jnp
jmp
in
jp
das
pop
xor
sub
jo
add
pop
add
sub
rcl
cmpsl
outsl
add
fcomp
xchg
add
or
addr16
rolb
das
out
add
pop
mov
or
int
pop
mov
xchg
mov
lds
out
pop
push
pushf
rcl
adcl
xor
lock
jo
pop
iret
inc
dec
or
outsl
and
xor
push
pop
mov
cltd
repnz
call
sub
push
pop
push
cld
adcl
xchg
xchg
loop
inc
mov
xchg
shlb
inc
jle
push
inc
or
mov
pop
pop
jae
or
shrb
enter
out
pop
jmp
jno
and
mov
test
loop
sbb
loope
inc
xor
push
pop
jno
jns
jl
subb
sub
iret
cmp
cmpb
out
sub
sub
push
or
lahf
xchg
rclb
jle
sub
cltd
add
or
add
andl
mov
clc
pop
outsl
sub
icebp
and
mov
xchg
not
mov
jo
scas
dec
adc
sub
mov
xor
push
add
adc
sbb
add
es
pop
sbb
mov
cmp
jecxz
add
jecxz
test
push
add
jnp
push
mov
dec
sub
es
add
ret
mov
addr16
xchg
adc
lahf
outsb
js
and
inc
je
add
push
push
and
icebp
loope
push
mov
lds
mov
shr
pusha
dec
lcall
cli
pop
or
ss
mov
ret
mov
dec
xor
dec
out
stos
and
jmp
adc
aad
sbb
sbb
jl
jp
inc
pop
pop
inc
sub
adc
add
dec
push
arpl
nop
add
sub
pop
fsubrl
xchg
test
push
mov
cmp
les
and
rorl
jmp
adc
jb
mov
mov
sbb
cmpsl
add
jg
gs
and
test
inc
mov
or
adc
loopne
push
aad
sub
xor
dec
xor
sti
insl
xchg
push
popa
sbb
iret
pop
cmpsb
or
inc
lods
push
xchg
loop
fwait
jnp
movsb
mov
xchg
cmpsl
sub
pushf
out
add
imul
in
jge
jmp
xchg
xor
sub
movsl
je
clc
fsubl
cmp
mov
pavgw
call
std
inc
or
sbbl
gs
call
dec
cmc
adc
mov
inc
pop
and
nop
cmp
mov
add
xor
loopne
sub
fists
push
mov
mov
out
mov
jl
rorb
or
cmc
pop
xor
add
cld
push
push
mov
out
stos
add
mov
mov
xor
inc
push
jmp
insl
sbb
xchg
ret
push
xchg
or
sbb
sarb
inc
loop
mov
mov
xor
mov
xor
jmp
add
sub
add
adc
xor
mov
inc
pop
lahf
test
test
or
cmp
sub
pop
jle
ret
pop
fwait
jg
or
and
push
dec
orb
sub
add
pop
addl
ret
sbb
sub
add
pop
mov
mov
cmp
hlt
inc
addl
adcb
jmp
or
lods
or
mov
xchg
movsb
sub
xchg
push
pop
into
jge
nop
not
jmp
cwtl
outsl
push
nop
mov
outsl
and
lods
mov
push
jno
stc
sub
rorb
or
dec
cltd
mov
mov
jp
or
test
insb
mov
pop
push
sub
mov
mov
mov
and
and
int
pop
jnp
sbb
push
cmc
push
xchg
mov
or
cmp
lahf
add
mov
adc
pop
neg
or
add
pop
push
not
pop
sbb
sub
adc
fcomps
test
sbb
repz
push
dec
leave
fcoms
mov
dec
adc
mov
sbb
push
aam
jae
xchg
push
push
or
mov
jle
cli
aaa
mov
mov
inc
or
mov
push
adc
inc
pusha
fwait
xchg
or
and
xchg
push
inc
xorl
mov
jo
loopne
mov
nop
cwtl
dec
mov
pop
push
mov
pop
sbb
pop
je
dec
lock
mov
in
cs
test
pop
daa
pop
add
fisubs
dec
push
popf
rorb
mov
inc
jb
loopne
lock
sahf
and
pop
mov
push
or
lods
pop
loope
test
add
dec
ror
shr
pop
not
add
jmp
cmp
in
test
ret
dec
leave
push
shl
dec
adc
mov
cmp
add
sti
jge
dec
mov
mov
ss
push
push
cld
outsl
dec
out
push
pop
adc
inc
ror
ljmp
add
and
or
inc
mov
subps
xor
mov
cld
pop
mov
jmp
mov
fisubs
es
mov
loopne
jl
cmpsb
fistps
xchg
jmp
in
sbb
popw
push
adc
int3
dec
or
add
pop
or
push
or
lret
xchg
imull
dec
push
xor
lret
pop
les
pop
popa
out
mov
or
sbbb
lret
icebp
push
add
xor
out
push
mov
js
into
pop
xchg
lods
clc
scas
lcall
or
leave
sub
subb
pop
push
movsl
out
xchg
pop
cwtl
sbbb
pop
pusha
sbb
mov
je
out
pop
push
sti
les
dec
neg
sbb
loopne
mov
pop
cmpb
or
dec
xchg
push
sbb
mov
mov
pop
xchg
push
cmc
cld
cld
pop
pop
mov
xor
scas
add
xchg
mov
push
sub
rolb
jp
divl
mov
iret
aas
pop
mov
and
xorb
cmp
cmpb
idivl
pop
xor
dec
push
shr
rol
push
outsl
add
push
incb
sub
add
mov
push
test
adc
or
xor
xor
push
outsl
adc
mov
ret
loope
push
popa
in
jbe
jg
loope
movsl
jno
sub
mov
adc
outsb
mov
jmp
bound
inc
cli
addr16
lcall
add
mov
and
xor
test
outsl
xchg
push
jno
shlb
add
xor
add
and
sub
inc
add
push
mov
dec
add
jmp
xor
es
in
shlb
push
pop
int
dec
filds
dec
add
cmp
mov
ret
inc
mov
jge
mov
cmp
fistps
in
dec
pushf
ds
pop
cli
mov
jmp
bswap
dec
shrb
int3
icebp
out
sbb
pop
adc
sub
cwtl
push
and
loopne
add
rclb
mov
sti
push
mov
lods
shl
xor
push
jmp
push
mov
or
or
pop
and
lret
fsubl
addr16
jne
dec
sbb
stos
pop
int3
stc
dec
faddl
or
ffreep
out
cmp
jno
arpl
xchg
add
sub
xor
cmc
popa
fldl
iret
lock
pop
testb
add
in
push
dec
mov
adc
rorb
arpl
pop
push
or
pop
pop
push
call
push
xchg
or
pop
mov
subb
xor
inc
adc
add
int3
push
sub
mov
adc
lret
or
pop
mov
mov
fdivs
cmp
ret
jae
mov
pop
pop
shlb
fs
addb
dec
push
jge
jmp
fmuls
mov
push
mov
xor
pop
pop
mov
add
jbe
daa
test
orb
imul
push
movsl
add
pop
push
decb
jle
out
cs
mov
mov
jne
pop
clc
pop
pop
xorb
sbb
xchg
or
pop
push
int3
shl
push
cmp
xchg
into
jp
sbb
add
push
adc
push
add
bswap
dec
movsl
cmpsl
xchg
dec
adc
je
dec
out
icebp
stos
iret
xor
mov
out
adc
jnp
js
ss
loope
add
pop
mov
lahf
sub
ror
jg
rep
or
jb
adc
xchg
and
sbb
subl
daa
xor
pop
or
or
mov
mov
xor
or
sbb
mov
mov
jmp
push
roll
pop
push
jmp
mov
repnz
mov
les
push
pop
shll
dec
mov
mov
and
jne
push
daa
mov
push
repz
and
sbb
jg
mov
push
cmp
adc
test
mov
popf
bound
cli
sub
xchg
sarl
addb
xchg
inc
loop
mov
push
jg
push
mov
pop
mov
cmp
adc
adc
fistps
push
lods
sub
lret
fwait
je
xor
inc
insl
les
jmp
mov
leave
xchg
and
cwtl
and
sti
pop
cmp
cwtl
pop
jge
mov
in
addr16
das
sub
push
sub
add
add
mov
nopl
jl
pop
and
std
push
int3
cltd
es
pop
inc
and
mov
dec
adc
hlt
cmp
sbb
enter
add
aam
inc
add
outsb
add
lds
into
aam
or
sub
lcall
cld
adc
push
add
lcall
jae
loop
jmp
incb
pop
mov
mov
fbld
add
xor
xor
sbb
sarl
cmp
cs
pusha
add
mov
add
push
sbb
jp
outsl
xchg
iret
add
aam
xor
cmp
adc
add
xchg
icebp
jmp
ret
imul
and
xor
shr
mov
pop
mov
sbb
fs
or
cld
xchg
subb
retw
insb
mov
xchg
lret
neg
mov
js
mov
pop
mov
test
jmp
xchg
sub
or
rcrb
add
mov
xchg
sub
divb
rol
pop
inc
inc
dec
mov
sbb
call
mov
xchg
mov
dec
mov
push
jmp
mov
mov
add
test
jbe
ret
pusha
mov
and
push
cmp
test
sub
flds
loopne
xor
inc
xor
imul
xchg
test
jno
jno
pop
scas
fwait
mov
mov
ds
mov
adc
jl
add
jmp
add
and
icebp
mov
mov
test
inc
xchg
lret
int3
mov
cmp
dec
out
sarl
pop
rcr
testl
pop
push
test
inc
in
mov
bound
dec
clc
mul
out
inc
xchg
mov
in
add
sbb
sbb
fs
cmpsl
add
jmp
cld
jne
push
test
insl
fsubl
daa
adc
stc
sub
out
je
add
add
shl
repz
pop
xchg
mov
lret
bound
add
add
out
jae
sbb
xlat
adc
loopne
jmp
sbb
nop
insb
jge
leave
cmpsb
mov
mov
pop
daa
aaa
inc
mov
cmc
pusha
ret
lahf
inc
fwait
addb
sbb
rorl
mov
subb
cld
arpl
pop
fs
push
add
shr
pushf
jo
or
pop
and
lods
adc
repnz
mov
lret
cmp
not
inc
imul
lds
push
jae
sahf
pushf
sbb
ljmp
xchg
inc
dec
out
lret
push
push
add
add
cmc
mov
mov
pop
inc
sbbb
sub
or
out
lds
xor
or
ret
mov
shr
dec
push
jmp
jmp
lock
mov
dec
xor
mov
lcall
gs
test
pop
sbb
addr16
jb
pop
gs
daa
or
sub
dec
push
pop
lcall
add
cmpsl
push
shr
inc
hlt
fcmovnb
stos
sbb
dec
mov
fwait
jbe
dec
iret
lahf
jne
mov
repz
sbb
xor
jle
pop
jmp
dec
ficoml
enter
pushf
iret
xlat
push
imul
push
sbb
cs
dec
mov
or
push
scas
jne
inc
add
and
or
pop
pop
cs
cmp
dec
imul
pushf
push
fistl
test
lds
stc
shlb
jns
cli
jo
inc
add
push
decb
call
sbb
xchg
jmp
mov
dec
repnz
mov
xor
ds
add
lods
jp
mov
and
push
push
add
mov
jge
xor
xor
adc
lcall
ret
or
orl
adc
lds
adc
and
addb
in
add
add
cmp
ds
xrelease
jecxz
jmp
pop
pop
pop
pop
inc
insl
loop
test
add
mov
and
sbbl
inc
je
cld
sti
out
pop
repnz
pop
dec
sub
cmp
cmpl
adc
and
push
les
sbbl
cmp
mov
das
pop
sub
xorb
adc
popa
push
fdivp
push
pop
pop
adc
xlat
shl
dec
incl
es
int3
jp
pop
add
daa
adc
mov
fidivrs
or
clc
add
dec
push
mov
jmp
inc
adcb
mov
xchg
xchg
push
out
les
lock
push
push
sub
adc
mov
mov
movsb
aaa
pop
mov
jnp
pop
mov
add
fsubl
stos
fsubrs
cltd
arpl
and
call
pop
dec
mov
add
cmp
add
outsb
arpl
in
pusha
xlat
jp
xlat
call
daa
jne
js
or
cmpsl
mov
loop
stos
adc
add
mov
cld
sub
cmp
xor
stos
pop
repz
or
test
and
add
pop
xor
push
fucomip
mov
or
jb
aaa
sti
adc
pop
or
pop
inc
out
js
or
xchg
inc
jg
mov
cmp
cmp
push
jle
and
add
mov
xchg
in
inc
decl
add
mov
mov
je
lds
sub
add
adc
mov
fucomip
add
lods
cld
inc
or
loope
pop
fs
imul
mov
mov
and
jns
dec
sub
mov
outsl
adc
loopne
pop
adc
outsb
mov
push
cmpsl
sbb
jbe
add
inc
andl
or
cmpl
repz
sub
fadds
shrb
jmp
inc
pop
push
push
push
sbb
add
enter
sub
sub
inc
je
dec
and
lods
ficomps
sub
lods
xchg
xchg
push
jmp
push
leave
push
push
mov
jnp
or
push
lret
lcall
leave
ret
xorl
jmp
loopne
int
add
pop
sub
std
sub
in
or
jno
mov
dec
cmp
inc
iret
adc
inc
test
inc
mov
push
dec
arpl
add
cli
aaa
out
lret
subb
inc
or
and
or
xor
adc
enter
mov
cld
sub
lahf
and
rorl
lahf
adc
shr
push
add
bnd
leave
dec
hlt
popa
aas
xchg
jmp
lock
dec
xchg
je
cmp
dec
subl
inc
clc
cmp
loop
sbb
lods
daa
daa
dec
inc
clc
cmp
or
test
jmp
xor
icebp
dec
ljmp
cs
out
pushf
pop
adc
pop
mov
dec
dec
negb
cmp
jno
push
js
js
pop
or
and
xor
xor
push
dec
mov
stc
call
scas
jno
cmp
sbb
and
pop
jmp
sbb
out
mov
rcrl
sti
add
scas
or
mov
lods
es
push
jne
int3
lock
mov
out
scas
adc
ret
and
add
jae
mov
movsl
test
adc
mov
mov
addr16
pop
and
xchg
int
xchg
les
andb
pop
dec
nop
test
sbb
dec
push
adc
mull
sbb
divl
or
scas
inc
js
testl
repz
frstor
jecxz
into
popa
jns
jmp
mov
or
xor
jmp
xchg
ror
jmp
add
aaa
ret
dec
shll
xchg
add
adc
js
cli
and
mov
aam
imul
xor
cs
sub
enter
mov
xchg
out
sarb
push
mov
pushf
mov
lock
hlt
insl
mov
pop
add
fisttpll
aad
dec
pop
pop
stc
add
push
lea
in
ret
testb
jmp
lods
and
mov
ja
in
fldl
jae
lea
cwtl
mov
into
iret
movsb
xchg
out
lods
push
xchg
adc
jo
dec
lock
push
add
mov
jno
mov
and
sarl
push
dec
sub
or
xor
ja
repz
pop
call
pop
jmp
gs
dec
bound
add
test
xor
and
pop
cmpsl
enter
les
add
addr16
aaa
and
or
add
je
rcr
inc
lock
jmp
inc
cs
sub
in
rcrl
add
sub
aad
aam
push
or
in
movsl
inc
sub
mov
sbbl
repnz
sahf
xor
outsb
sbb
das
mov
sbbl
arpl
icebp
ficoms
inc
call
add
and
inc
popa
xor
xchg
fs
test
sti
inc
and
aam
mov
add
in
in
adcl
sub
repnz
add
or
adc
dec
jle
es
dec
sbb
andb
or
mov
insb
add
add
lret
pop
push
xchg
popw
xor
sbb
sbb
sub
inc
add
pop
hlt
mov
repz
cs
push
fisubrl
or
xor
negl
fmuls
test
mov
lahf
test
ljmp
cmp
pop
add
xchg
sbb
add
pop
test
pop
sub
adc
pop
xor
add
daa
inc
jo
pushf
sub
adc
pop
sbb
clc
cld
cmpsb
rcrl
stos
js
ds
lea
cs
inc
imul
add
jmp
mov
inc
dec
outsb
dec
inc
int
and
adc
pop
dec
in
mov
mov
xchg
lds
pop
push
cmpsb
xor
pop
jmp
add
pop
mov
ret
add
or
mov
cmp
cli
push
xchg
jns
push
add
dec
xor
pusha
sub
xchg
in
fnsetpm(287
add
pcmpgtw
pop
ret
sbb
fcompl
mov
jmp
inc
std
pop
push
imul
jo
sub
xchg
repz
sbb
je
jb
mov
adcl
pop
imul
popa
xor
je
pusha
xor
ds
insb
daa
jb
sbb
xor
sub
jae
cs
fdivr
sbb
inc
les
fistps
lcall
aaa
add
cmpsl
flds
nop
sub
sti
and
adc
icebp
add
insb
xor
pop
cmp
xlat
jp
mov
push
pop
add
js
inc
push
jmp
mov
scas
and
insb
pop
jmp
lods
xchg
lock
push
push
push
jmp
rclb
jle
add
sub
inc
stos
mov
adc
jmp
mov
call
inc
or
dec
inc
daa
jmp
pop
lahf
lds
mov
in
addb
mov
push
or
pop
scas
mov
mov
jbe
xor
movsb
inc
sub
sub
and
lods
pop
mov
xchg
xchg
fisttpl
or
cmp
push
lods
test
ja
mov
sahf
inc
cs
mov
addb
jge
cmp
and
cmpsb
sbb
sbb
sub
lods
imul
int
or
jmp
inc
pop
add
int
decl
and
daa
inc
sub
and
jne
adc
cmp
dec
sbb
int
popf
jp
push
in
xchg
cmp
cmc
rcrb
dec
xchg
pop
mov
int
into
xor
fldl2t
lock
push
mov
and
insl
sub
cmp
push
shll
sub
jg
add
ja
pop
xchg
int3
decb
and
je
add
push
add
lods
or
imul
cmp
mov
pop
ljmp
cmp
sub
daa
in
jl
out
cmc
add
dec
adc
add
int
insb
insl
leave
push
dec
mov
adc
mov
sub
push
cmp
dec
push
jmp
push
fs
jmp
add
nop
js
pop
add
dec
mov
leave
fmull
dec
movsl
mov
pop
rcr
clc
jl
rcll
and
cwtl
lahf
cmp
xchg
in
dec
mov
clc
jae
js
adc
pop
sahf
jno
push
lret
nop
cmpsl
and
ja
dec
xchg
not
pusha
add
cmp
fistpll
push
repnz
and
xor
jmp
add
push
pop
inc
lods
pop
push
in
or
cmp
test
push
adc
add
fildll
dec
cld
mov
xchg
and
push
sub
and
xor
mov
out
xor
stos
add
int3
iret
mov
icebp
pop
cmpsb
and
inc
shl
or
jp
xor
scas
and
xchg
jl
push
jmp
stos
xorl
cmp
das
in
sbb
mov
insl
add
out
pop
in
call
movsb
lods
mov
into
add
mov
pop
shr
out
pop
push
mov
sub
addr16
lock
aam
jmp
xor
jmp
pusha
pop
xor
mov
sub
icebp
scas
imul
cmp
cmp
fwait
push
mov
add
ljmp
inc
pop
hlt
inc
jmp
push
push
cmp
jmp
sub
pop
dec
test
jmp
mov
aad
fsts
scas
add
addr16
mov
mov
push
cmpsl
js
ss
unpckhps
and
push
dec
push
dec
pop
scas
add
inc
push
jmp
jns
dec
add
adc
or
repz
push
popf
or
add
sub
add
mov
lock
stc
xchg
jns
add
leave
xor
pushf
add
mov
push
loop
push
shl
rcr
mov
mov
dec
sub
mov
adc
push
or
dec
mov
adc
or
cmc
xorb
push
inc
mov
xor
sarb
jnp
mov
jl
push
jg
outsl
and
dec
sti
movsl
imul
jmp
push
or
sub
push
adc
dec
dec
cmp
fsubrl
out
scas
dec
push
pop
nop
mov
pop
sub
imul
in
stos
cmp
adc
or
pop
mov
les
sub
adc
push
mov
shrb
dec
lods
add
lds
or
xchg
jo
shrl
cmpsl
sbb
xchg
aam
dec
ret
cmpsl
push
clc
test
lret
test
sub
mov
mov
aas
add
add
jae
roll
mov
mov
fisubs
adcb
rcl
jne
dec
xchg
fwait
or
mov
shlb
mov
add
add
arpl
xor
add
dec
into
nop
mov
jp
shrl
xchg
jb
dec
pop
inc
stos
add
adc
pop
pop
shl
mov
testb
into
pop
arpl
jne
push
ror
icebp
js
or
mov
jp
cwtl
dec
xchg
shll
cs
rolb
push
mov
shl
lock
icebp
into
cmpsb
xchg
jnp
or
pop
sbb
lods
negb
lcall
icebp
fs
xorb
xchg
pop
inc
add
push
addr16
sub
jg,pt
cmp
imul
or
inc
jno
inc
mov
jmp
in
shlb
dec
mov
shr
or
mov
mov
sub
mov
clc
mov
inc
sub
sub
das
dec
aaa
sahf
sbb
pop
add
inc
jmp
daa
test
mov
daa
sub
sbb
add
pop
add
jb
sub
jae
dec
push
cld
xchg
pop
in
call
dec
add
pop
test
scas
fldcw
mov
xchg
inc
add
xchg
jmp
mov
cs
mov
dec
loop
and
loopne
in
inc
push
and
loope
outsl
sub
and
aas
lret
jmp
add
xor
mov
jmp
push
or
jp
jl
mov
or
adc
jae
inc
and
or
jns
cmp
jge
and
jmp
dec
sub
push
cmc
fsubrs
mov
cmp
sbb
aas
enter
imul
push
xchg
addb
gs
mov
mov
fstpl
loop
jmp
add
sbb
and
mov
cmpsl
mov
or
jg
push
cmp
jmp
loopne
addb
loopne
push
xor
sub
or
sbb
enter
add
push
mov
gs
icebp
orl
pusha
in
add
fmull
mov
rcrb
jl
push
sub
out
daa
lock
mov
xor
ss
dec
push
and
sbb
lods
xlat
js
jno
xchg
ss
or
sub
add
clc
and
push
jl
les
dec
dec
hlt
clc
cmc
push
arpl
or
sbb
imul
sbb
push
call
fsubr
inc
mov
in
lock
or
add
pop
dec
push
push
mov
cmp
inc
aam
mov
sbb
lock
pop
cs
out
jg
dec
jp
out
xchg
inc
mov
insb
dec
jne
sbb
sar
pop
repz
jp
mov
loop
outsl
adc
mulb
add
add
mov
add
sub
adc
xor
mov
sub
setbe
and
rcrb
push
xchg
sti
xor
mov
sub
scas
or
jmp
sub
sub
shlb
sbbl
push
dec
aam
pop
cmc
inc
push
or
mov
and
cmp
jmp
mov
fisttps
jb
adc
lds
mov
or
jl
xor
mov
enter
jmp
and
xor
lahf
rclb
loopne
in
dec
or
and
pusha
push
push
mov
xlat
xchg
mov
mov
xchg
lock
mov
lahf
es
inc
pop
ds
jp
dec
xor
xor
sbb
stc
cmp
mov
inc
jae
not
lods
addl
mov
inc
sbb
sbb
in
add
jecxz
jmp
xor
popf
xor
dec
add
add
jb
je
in
fcoml
mov
and
stos
fadd
add
cmp
test
sub
and
daa
lds
sbb
loopne
mov
jns
fwait
or
jne
xchg
push
jmp
pop
mov
push
out
call
add
fiaddl
add
mov
jmp
addr16
bound
adc
add
cwtl
lahf
or
arpl
add
imul
jmp
dec
or
aam
sub
adc
add
and
push
mov
push
clc
fadds
sub
pusha
jnp,pt
clc
add
lock
add
test
push
or
pop
std
mov
lcall
sbb
add
sarb
push
adc
repnz
mov
test
mul
mov
mov
in
aaa
sbb
jnp
xor
fs
add
add
pop
push
adc
xchg
mov
inc
pop
push
cmp
loop
movl
out
xchg
arpl
in
xor
mov
dec
xor
enter
lods
loop
pop
cmp
jmp
or
outsb
scas
pop
out
jo
and
adc
or
mov
pop
cmp
or
punpckldq
clc
aaa
mov
sbb
inc
inc
pusha
or
push
stos
fistpl
or
cmp
int
xchg
mov
sarl
cmp
bound
int3
outsl
pop
hlt
dec
gs
adc
mov
add
pop
data16
fisubrl
jbe
addb
clc
dec
out
in
and
sarl
cltd
addr16
mov
aad
sbb
cmpsb
inc
push
das
xchg
mov
dec
repz
adc
notb
push
lods
dec
pop
rclb
test
stos
jmp
push
adc
xchg
test
add
nop
push
push
jecxz
sbb
jp
mov
stc
jae
hlt
stos
mov
dec
push
bound
dec
aam
and
jae
mov
sub
or
movsl
jle
les
shrl
arpl
push
push
push
ss
inc
not
out
push
add
mov
cld
cwtl
cltd
inc
ret
push
repnz
arpl
das
xor
nop
imul
repnz
add
aad
xor
cmpl
inc
xchg
sbb
shr
jbe
popf
push
add
dec
mov
enter
fsts
pop
ds
mov
not
nop
scas
ja
jge
xor
inc
xor
les
mov
inc
pushf
pop
test
or
add
dec
add
add
in
lods
bound
sub
daa
pop
leave
test
out
sti
out
cltd
leave
int3
inc
mov
add
sbb
push
and
pop
sbb
cs
out
inc
rorl
mov
adc
ss
test
ret
fnsave
jmp
mov
pop
xor
push
int3
jge
mov
outsb
gs
daa
dec
clc
outsb
lahf
adc
dec
int3
add
pop
addr16
and
pop
inc
pushf
neg
nop
outsb
dec
push
cmp
add
xchg
das
xchg
js
cmp
sub
jp
ficoml
inc
jecxz
in
imul
add
sub
mov
dec
data16
push
inc
lahf
sub
pop
push
mov
xor
xor
or
sub
pop
xchg
sar
ficompl
in
push
inc
ss
nop
popf
inc
aam
jne
mov
push
add
inc
sti
in
push
les
add
into
push
mov
push
xor
add
neg
jmp
nop
ljmp
jmp
sub
jne
xchg
jo
xor
lahf
pop
xor
push
inc
sbb
popa
mov
outsb
add
ss
pop
cmp
sti
sti
dec
or
cli
shl
cmp
push
mov
mov
or
lret
sbb
add
andb
les
xor
dec
dec
mov
mov
fcmovnb
jmp
mov
das
jbe
push
iret
push
dec
rol
add
js
lods
push
pop
jnp
push
jns
sbb
mov
pop
dec
je
sbb
out
sbb
cwtl
pop
fisubl
push
push
test
cmpsl
mov
call
cmp
sub
dec
mov
push
pop
or
test
jp
orb
xorl
loopne
shll
lcall
cmp
pop
dec
rcll
mov
or
add
lds
ljmp
push
push
or
arpl
sbb
leave
add
push
pop
jmp
pop
xor
fcoms
call
pop
push
int3
shlb
sbb
inc
sbb
mov
cmp
mov
pop
mov
adc
pop
mov
add
shlb
lret
mov
loopne
cmp
jo
js
mov
sub
dec
inc
adc
ficompl
dec
sub
xchg
fists
sbb
mov
dec
pop
and
dec
add
mov
jno
movsl
repz
out
push
pop
jnp
pusha
daa
push
sbb
rorb
add
pop
or
aam
and
fadds
pop
mov
pop
mov
xor
fsubl
bound
sub
or
lods
sbb
cld
sbb
jge
int3
test
test
push
mov
push
xchg
mov
cmp
sbb
and
aad
popf
jo
pop
mov
daa
xchg
push
sbbb
push
mov
dec
pop
test
test
push
insb
mov
pop
enter
filds
dec
jb
pusha
xchg
shl
into
mov
ret
pop
neg
xchg
cmpb
push
enter
fcoms
add
out
or
shrb
mov
ret
insb
mov
push
xchg
adc
ss
pop
int3
jo
and
cmp
and
adc
cltd
mov
or
or
mov
or
push
pop
js
out
adc
out
mov
es
xchg
loopne
sbb
fsts
add
add
jae
jmp
xchg
sub
jmp
aas
andb
cwtl
pop
lods
mov
rcl
mov
push
xor
sub
std
into
ss
xor
adc
out
or
cmp
das
in
mov
push
or
loop
add
sub
cs
xor
or
pop
pop
fs
lea
cmp
loop
or
cld
clc
add
cmpsl
gs
and
add
mov
mov
add
ficoml
dec
jo
pop
add
sbb
addb
mov
push
stos
or
cmp
push
jmp
add
add
call
pop
mov
in
pop
mov
stc
mov
dec
aad
dec
test
imul
or
test
sbb
nop
or
dec
adc
push
inc
add
ss
mov
or
dec
jo
fcoml
sti
mov
mov
pusha
cmp
in
adc
fs
sbb
sbb
stc
pop
pop
xchg
sub
inc
or
pop
test
cmp
xor
sbb
xor
rolb
and
jmp
lret
sarl
sub
jb
sbb
pop
shl
cli
es
push
pusha
or
mov
into
cmp
shl
ja
mov
push
mov
adc
mov
inc
jmp
dec
frstor
int
sbb
mov
jb
std
jmp
cwtl
cs
lcall
xor
xchg
popl
cmc
xchg
lahf
mov
cld
aas
push
dec
jl
into
adc
pop
ljmp
cmp
mov
stos
mov
push
cvtpi2ps
push
mov
mov
add
pshufw
les
or
aad
adcb
jmpw
and
inc
sbb
bound
lock
pusha
sbb
pop
xor
mov
mov
loope
pop
jp
stc
inc
adc
add
sbb
icebp
scas
dec
arpl
jle
add
call
ret
xor
lret
push
inc
lahf
cmc
xchg
stc
popf
jo
shlb
add
pop
in
push
fnsave
dec
push
faddl
sbb
fs
sbb
add
sub
and
jmp
push
cmp
lahf
mov
and
xor
sbb
or
add
mov
or
sub
ss
and
aam
add
ljmp
pop
mov
cli
ja
push
push
mov
jge
pop
inc
xchg
add
add
push
sub
adc
sbb
jle
jmp
repz
pop
push
icebp
xchg
jns
sarb
out
jns
mov
je
inc
stos
enter
ljmp
and
and
movlps
imul
orl
aas
mov
aad
rclb
or
adc
jns
push
outsl
or
sub
inc
mov
xchg
dec
fsubs
and
or
pop
pushf
shr
jo
pop
pop
das
cs
inc
movsl
pop
bound
shrb
add
add
ds
pop
aas
and
mov
pushf
cmp
dec
sbb
pop
mov
adc
sbb
xor
stos
shrl
rolb
xor
sbb
mov
xchg
adc
pop
mov
pop
shlb
jmp
insb
push
or
in
jle
add
mov
jmp
sub
pop
xchg
loope
inc
movsb
sbb
arpl
and
js
dec
shr
fidivrl
sub
daa
push
je
lds
mov
sub
pop
in
push
mov
ljmp
xchg
push
mov
adc
pop
outsl
pop
cmp
jecxz
enter
test
xchg
sbb
fucom
lods
sub
out
inc
dec
insb
mov
pop
push
leave
and
nop
xor
push
mov
xor
mov
jae
xorb
jmp
jno
mov
sub
and
adc
sbb
xor
ljmp
xchg
push
ret
js
nop
mov
movsl
sbb
mov
cmp
nopl
push
repz
push
jmp
mov
pop
push
jmp
mov
not
mov
jae
lock
cmpsl
fs
push
subb
mov
sub
mov
or
push
mov
and
push
or
sub
add
xor
mov
fimuls
pop
lds
jb
arpl
sbb
lret
loop
cwtl
sub
data16
push
push
and
lock
mov
movsl
xor
loope
push
push
xchg
xchg
in
mov
or
sub
lret
add
dec
pop
mov
dec
and
ret
jnp
enter
jb
cli
cmp
cmovs
or
or
bound
aas
dec
movsl
cli
lock
or
dec
idivl
leave
fstps
cld
or
insl
aad
pop
pop
jo
test
add
outsb
adc
push
hlt
pop
rcl
jmp
pop
and
in
xchg
test
sahf
push
pop
inc
insl
ret
or
sbb
lds
pop
fs
jbe
mov
jg
cwtl
pop
test
adc
mov
aad
push
pop
iret
push
add
xchg
mov
testl
push
dec
mov
sub
in
pop
and
fdivrl
pusha
mov
or
jo
dec
sub
mov
insb
movsb
or
cmp
and
and
push
sub
and
add
pop
inc
addb
jg
cmp
std
push
push
add
jmp
xor
in
mov
dec
clc
xor
push
push
pop
dec
arpl
xor
outsb
and
push
sbb
sub
mov
and
prefetch
dec
and
lods
test
push
aas
in
adc
ficoms
cmp
test
fiadds
jb
adc
js
sub
aas
lret
adc
icebp
inc
das
out
das
push
xor
sbbb
dec
push
outsl
push
add
repz
jl
ljmp
mov
dec
jmp
dec
pop
clc
cmp
jle
xlat
mov
push
mov
mov
rcrb
daa
mov
push
fnsave
mov
jns
in
cmp
push
lcall
dec
cs
test
dec
pop
divb
call
scas
adc
call
int
or
lahf
jnp
push
push
hlt
inc
xchg
rcrl
popa
mov
call
and
xchg
xlat
xorb
jno
add
sbb
ret
or
pop
pop
jo
fsubrl
push
pop
push
pusha
push
dec
popf
push
orb
icebp
xor
mov
dec
sub
adc
mov
xchg
adc
jg
or
in
sub
mov
ds
pop
add
stc
inc
pop
cmp
fiaddl
pop
or
loopne
mov
adc
xchg
std
lahf
movsl
imul
mov
sub
adc
pop
rcl
stos
iret
add
lock
jge
gs
pop
in
loop
bound
push
out
dec
xor
cmp
jle
jl
or
xor
adc
js
xchg
mov
sarb
inc
add
jmp
push
mov
fcmovbe
aam
pop
push
pusha
stos
dec
push
xor
add
sub
jmp
xor
inc
cli
xchg
cmp
or
insb
fwait
icebp
and
mov
addl
add
push
push
es
pop
shll
and
pop
in
pusha
sub
push
push
inc
mov
mov
jae
dec
faddp
faddl
fbld
sbb
pop
sarl
jmp
sub
jne
mov
push
js
aaa
xor
pop
jmp
les
jae
mov
jmp
out
cmpl
rol
rcrb
push
mov
add
xlat
daa
outsb
add
out
mov
push
or
out
clc
ret
add
loope
jmp
fwait
jecxz
sub
jns
fcos
add
loope
add
jl
mov
movnti
jo
push
jmp
inc
push
leave
or
test
add
ret
inc
cli
loope
icebp
hlt
jno
insb
and
ficompl
adc
call
dec
je
out
mov
repnz
jl
rcrb
push
xor
cmp
sub
pop
jmp
pusha
aam
dec
nop
loopne
xor
inc
pop
nop
mov
icebp
cmp
jae
lahf
sub
add
lock
adc
adc
mov
call
pop
lds
xchg
or
push
inc
arpl
mov
add
mov
pop
jge
shlb
sahf
adc
mov
shlb
fisttps
cmpsb
pushl
dec
mov
add
in
ja
ret
bound
add
scas
je
ret
mov
jp
and
jnp
jbe
add
push
lcall
les
dec
ja
pop
mov
inc
shll
mov
adc
sub
mov
inc
add
cmp
pop
add
stc
jl
push
imull
add
add
popf
adc
sub
inc
sub
add
cmpsb
pop
outsl
inc
push
add
fcoml
xchg
cmp
xor
jmp
addb
call
jae
dec
add
mov
mov
stos
loopne
inc
leave
mov
enter
push
pusha
mov
sub
fisttpll
jae
cwtl
rclb
sub
sbb
pop
push
mov
push
mov
das
pop
mov
xor
loopne
or
add
lods
insl
aaa
pop
xor
or
add
jmp
push
jb
and
xor
jae
push
pushf
icebp
sub
sub
pusha
jno
es
jle
push
lods
subb
mov
div
sar
negl
add
sub
xchg
xchg
xchg
push
stc
add
fucom
popa
int3
xchg
adc
cmp
inc
jmp
mov
add
xchg
in
dec
ljmp
xlat
cmpsl
fisubs
jmp
mov
push
bound
popf
and
arpl
mov
jno
jb
test
ror
sbb
mov
inc
add
pop
mov
xor
fcomps
rorl
test
into
pusha
dec
notl
mov
pop
mov
mov
dec
adc
imul
and
cltd
jno
add
or
add
in
loope
sub
pop
lret
dec
in
push
push
imulb
xchg
adc
cmp
jmp
sbb
push
pusha
mov
cmpb
sub
and
sub
xchg
in
shlb
dec
push
push
shr
repz
jecxz
dec
push
mov
dec
out
add
sti
ret
ljmp
std
xchg
lcall
clc
not
xor
rol
dec
aas
adc
test
or
dec
es
mov
decl
loope
int
das
xor
inc
shlb
jmp
call
mov
lods
cmpsl
jge
xor
repnz
lcall
xchg
add
dec
push
pop
pushf
shr
stc
cmp
loope
dec
add
shrl
pop
std
or
xchg
inc
or
pop
mov
xor
cwtl
mov
inc
in
leave
addb
xor
out
xchg
and
inc
pop
cmc
cli
nop
push
pop
xchg
popa
xorb
scas
or
mov
loop
inc
movsl
sub
sbb
sbb
add
inc
push
pop
jl
daa
in
pop
and
pop
dec
lds
dec
les
sub
cmpsl
fisubs
out
jmp
fstps
int3
pop
enter
sbb
xor
jmp
repz
xchg
test
mov
pop
mov
idivb
cmp
shr
inc
cli
aad
sarl
movsb
orb
sub
mov
add
in
arpl
xchg
lret
inc
fucomi
pop
mov
jp
mov
pop
push
cmc
mov
jns
xor
dec
jb
pusha
and
mov
movsb
dec
add
shrl
pop
filds
and
adc
fisubrl
dec
adc
roll
adc
hlt
jp
and
xchg
mov
pop
push
xor
jae
sub
ficoml
adc
push
pop
pop
push
pop
pop
int
roll
push
daa
jmp
mov
or
add
jmp
xorb
inc
adc
icebp
leave
sub
jns
inc
aad
sbb
push
push
std
daa
mov
pop
dec
add
ljmp
push
push
gs
les
pop
out
adc
in
les
roll
stc
ss
push
sbb
cs
adc
mov
and
xlat
into
push
add
jmp
jecxz
lea
dec
adc
aam
and
adcb
mov
mov
inc
add
adc
loopne,pn
sub
mov
sub
adc
push
test
mov
xor
andb
and
xor
mov
mov
lods
mov
cmc
icebp
inc
fidivs
lret
in
jae
or
insl
enter
int
addb
repz
divb
daa
or
mov
lds
push
rolb
adc
fsubrs
shr
arpl
or
insb
orb
dec
or
sub
mov
inc
sti
add
pop
pop
xchg
inc
fwait
sbb
shlb
push
push
imul
dec
out
sbbl
mov
sub
adc
push
pop
pop
jmp
xlat
xchg
and
loop
movsb
cltd
or
mov
push
sub
daa
nop
dec
or
lods
mov
sbb
pop
inc
js
jmp
sub
pop
adc
les
roll
pusha
push
jbe
inc
mov
push
and
xor
daa
rolb
sub
inc
clc
mov
xchg
push
mov
jnp
jo
or
leave
idivb
ds
in
fcoml
cmc
pop
push
enter
jge
ja
fld
das
jns
gs
add
fs
inc
push
sbb
shll
jbe
jmp
rcrl
fistpll
gs
subb
push
pop
cwtl
mov
mov
jp
inc
mov
push
jmp
cmpsl
jmp
das
cmp
mov
movsb
sub
out
leave
cld
dec
jns
bound
push
dec
call
sbb
mov
mov
out
xchg
aas
cmpsl
imul
popf
sti
mov
xchg
mov
xlat
dec
pop
mov
sub
fs
pop
push
hlt
ret
mov
out
gs
and
orl
addb
fwait
pop
dec
or
mov
lea
movsl
pop
rol
movsl
insb
out
add
lock
rcrb
xchg
xchg
push
out
push
xchg
cld
xchg
loope
cmp
sub
jmp
iret
stc
aas
sub
hlt
push
and
pop
or
gs
sbb
push
cmp
loopne
jmp
shl
loop
arpl
push
pop
mov
mov
add
out
sub
push
insb
mov
pop
mov
xchg
jmp
or
push
leave
cmc
sub
cmc
mov
cmpsl
xor
ljmp
mov
dec
call
repnz
ss
ljmp
imul
add
sbb
sub
jmp
cmpsl
pop
push
jp
subb
aaa
push
add
icebp
lret
rcll
cmp
push
jmp
cmp
and
inc
test
xchg
inc
pop
daa
adc
push
inc
ret
jnp
ljmp
add
mov
fwait
out
jg
scas
adc
inc
push
push
add
lcall
stos
push
mov
incb
ds
mov
xor
pop
mov
lcall
scas
dec
andl
xor
cmp
adc
je
pushf
add
sub
mov
shlb
jmp
ret
mov
das
push
sbb
jecxz
lret
mov
imul
js
in
xchg
rclb
jmp
in
xchg
insb
fldenv
jo
popa
negl
sub
pop
pop
sahf
mov
jmp
cmp
push
add
mov
xorb
fnstenv
lcall
movaps
data16
popf
insl
std
add
inc
mov
mov
fadds
and
dec
pop
hlt
add
sub
je
bnd
xor
dec
insl
in
dec
sbb
or
imul
call
jp
inc
cltd
lods
fnstcw
add
xchg
ss
inc
lret
add
test
out
es
fimuls
subb
inc
sti
or
xchg
pop
repz
jl
sub
adcb
mov
sub
frstor
fldenv
pop
mov
fisubrs
and
sbbb
andl
aam
jne
sub
and
test
add
add
fs
lds
cwtl
jae
in
xchg
adc
push
mov
popa
lcall
mov
stos
add
outsl
inc
xlat
xchg
or
icebp
pop
sub
das
ds
rorl
call
clc
pop
popf
out
insb
inc
es
mov
pop
and
push
ret
lods
roll
adc
repz
dec
mov
sbb
xorb
lret
dec
cltd
mov
jl
or
mov
movsl
or
and
xor
roll
mov
jmp
inc
adc
cmp
sbb
and
cmpl
inc
aad
in
out
mov
xchg
jnp
aas
cli
nop
inc
dec
ja
mov
stc
stos
dec
lods
cld
stc
je
pop
push
decl
adc
ficoms
sub
sub
or
push
insl
or
inc
jmp
fcmovne
cmpsl
fldcw
icebp
push
int3
sbb
scas
jne
setge
xor
push
imul
push
mov
aas
int
inc
pop
fwait
and
or
push
lcall
add
dec
cmpsb
and
cli
aad
add
jmp
mov
dec
cmp
push
rcrb
popa
cmc
inc
pop
jmp
inc
imul
mov
xchg
pop
lret
call
test
scas
cwtl
lcall
jg
push
subl
cmp
or
ja
aas
push
shlb
incb
cmp
xchg
shr
mov
sarb
call
pop
cmc
fldenv
cmpsl
xor
outsl
jno
inc
fistps
or
mov
mov
mov
stc
xchg
imul
add
xor
pop
mov
lock
popa
push
ret
ret
add
out
aad
cmp
jmp
pop
das
rorl
and
xor
pop
loopne
jbe
xchg
insb
pusha
aam
dec
push
and
daa
inc
inc
idivl
inc
pop
cmp
pop
or
sub
mov
fs
incl
leave
jns
lock
sub
push
dec
adc
lock
pushf
adc
adc
push
or
sub
sbb
push
mov
lock
mov
mov
adc
add
neg
xor
and
mov
call
push
mov
and
pop
jo
jl
dec
and
and
sub
jne
sub
jae
push
cmc
mov
sub
stos
in
sbb
or
out
push
gs
neg
mov
jl
push
dec
clc
mov
imul
xchg
pusha
enter
hlt
xor
adc
and
and
push
leave
jae
and
into
sarb
mov
xor
sub
sub
jbe
test
mov
pop
jge
pop
imul
pop
imul
movntps
mov
cmpb
sbb
jmp
ret
inc
adc
push
dec
fcompl
pop
and
sbb
push
mov
rclb
push
push
jmp
mov
insl
mov
inc
xchg
push
mov
ss
xor
mov
or
cwtl
outsl
pop
in
add
add
call
lods
out
cs
dec
jecxz
mov
jp
hlt
pushf
iret
inc
xchg
outsl
dec
ror
mov
push
sub
add
call
sbb
and
cmp
imul
pshufw
xchg
outsb
cmp
adc
xor
in
fs
cld
xor
in
mov
pushf
add
mov
or
mov
push
xchg
mov
sub
or
ss
aad
xlat
jnp
movsl
pop
mov
push
jmp
inc
push
inc
test
jle
jge
sub
xchg
lds
sti
push
mov
pop
inc
rcrl
cmp
addl
outsb
loope
stc
and
fimuls
mov
pcmpgtw
and
mov
mov
push
xchg
push
sub
inc
pop
jnp
add
mov
xchg
xor
stc
pop
mov
dec
pop
lock
mov
mov
and
imul
es
ds
push
add
xor
fcomp
add
mov
rolb
xor
stos
add
sub
pop
add
aad
ret
fists
cmp
jo
sub
fisttpll
push
or
loope
and
ss
or
lds
push
fwait
mov
add
jp
and
pusha
jnp
mov
jg
push
bound
and
in
rorb
and
mov
fistpll
push
mov
aas
cmp
pop
mov
dec
jecxz
add
cmp
inc
jmp
mov
sbb
sub
movsl
call
mov
add
data16
repnz
test
arpl
mov
pop
call
jge
ret
or
fs
shlb
or
dec
inc
dec
xor
adc
stos
sahf
xchg
sub
jmp
pop
je
movsl
je
movsb
jno
push
aam
mov
enter
enter
adc
pop
pop
test
sbb
or
xchg
not
cmc
and
repz
test
inc
mov
aas
test
stos
into
loope
mov
adc
imul
lods
ret
cmp
test
rorl
pop
sub
sub
xor
jno
cmp
push
cltd
call
ret
and
adc
jmp
inc
in
cmpsb
dec
ljmp
insl
push
sbb
lds
push
scas
gs
lret
pop
pop
test
pop
jl
add
xor
enter
mov
das
sarl
xor
cmp
sub
sbb
orl
jl
fcmovnb
adc
into
mov
xor
cmp
push
gs
in
popl
ret
push
dec
test
cltd
inc
dec
aad
dec
clc
push
sub
inc
cmpsb
sub
add
mov
adc
push
xor
pop
xorb
mov
loope
sub
cmpb
nop
or
fadd
mov
xchg
or
repz
aam
push
lods
inc
and
pop
inc
lods
sub
add
adc
rorl
orb
xor
xchg
push
std
sub
fdivs
dec
ja
mov
pop
add
rcl
push
push
fmul
add
leave
and
enter
cmp
adc
ret
xor
insl
and
xchg
cmpl
rorb
mov
ja
dec
int
dec
jnp
pop
ljmp
jbe
xorb
cwtl
add
bts
or
mov
fdivrs
pop
adc
jge
and
push
inc
adc
jge
cmp
pop
lcall
int3
xchg
inc
push
cmpsb
in
aam
repnz
fcoms
dec
inc
aas
and
pop
mov
push
jnp
and
push
inc
lds
fsubs
adcb
cmovb
daa
test
jp
cs
loope
pushf
out
xchg
clc
dec
mov
mov
xchg
and
icebp
xchg
scas
mov
push
cltd
or
and
pop
cmp
push
inc
push
mov
sbb
dec
jne
mov
gs
lds
movsl
orb
mov
dec
out
sub
add
pop
scas
pusha
movsl
or
negb
hlt
fidivrs
dec
dec
das
dec
mov
fdivrl
sahf
sub
xor
in
add
aaa
pop
pop
push
mov
and
jae
dec
mov
jmp
mov
das
push
testl
insb
stos
jno
and
sbb
push
jmp
xchg
adc
loopne
mov
dec
sarb
add
outsb
lret
out
push
dec
std
clc
xchg
and
mov
icebp
pushf
addr16
or
stos
push
add
jb
cld
js
pop
xor
jl
pop
in
adc
mov
pop
cltd
out
jo
cmp
jge
adc
xor
out
pop
imul
push
mov
addr16
jmp
inc
sbb
push
or
or
lcall
shrl
xor
cmpb
lods
inc
mov
lahf
in
add
stos
xchg
push
leave
pop
push
cmp
gs
lret
icebp
add
pop
add
outsl
jmp
pop
dec
shlb
push
add
loope
lds
xor
pop
add
pop
sub
cltd
les
out
and
lock
adc
mov
sub
cwtl
push
outsb
outsl
push
dec
and
mov
sbb
pop
push
mov
pop
or
adc
roll
jb
and
out
jmp
lods
in
jns
das
es
clc
cs
and
push
bound
mov
push
cs
jmp
movl
push
mov
pusha
pop
inc
or
mov
outsl
enter
add
outsb
sbb
push
pop
les
repnz
push
pop
fsubrp
sbb
or
test
xchg
xchg
in
rclb
pop
pop
sbb
lock
cmp
mov
pop
pop
cmp
jmp
xchg
push
out
dec
mov
pushf
dec
push
imul
sub
repnz
push
and
popl
push
dec
imul
cmc
xchg
pop
pop
mov
repnz
jae
xor
in
ss
lods
in
xor
ret
pop
lcall
add
rcr
stc
mov
test
pop
adc
add
or
pop
and
lret
popf
push
xchg
mov
scas
push
adc
push
popf
sbb
or
and
out
mov
jb
cmp
sub
push
pop
popf
add
addb
mov
inc
mov
shlb
add
xor
dec
fldl
push
jb
cmp
or
gs
mov
daa
xor
push
push
pop
hlt
lahf
js
mov
jecxz
or
mov
dec
in
jle
or
movsl
pop
cld
aaa
adc
xor
mov
mov
mov
jmp
repnz
test
dec
mov
push
cli
movsl
int3
jle
shlb
movsl
mov
add
mov
loopne
mov
xor
lock
addb
sar
lret
add
fwait
insb
sub
mov
or
enter
xchg
out
mov
xchg
cli
or
mov
inc
add
aaa
sub
rclb
imul
fs
xchg
pop
test
addl
dec
bound
js
mov
mov
ret
jns
jmp
loope
sbb
repz
adc
add
sbb
dec
inc
rcr
mov
inc
pop
mov
pop
stos
movsl
push
rcl
add
fists
test
mov
test
dec
xor
loopne
inc
test
inc
mov
push
and
inc
jmp
rcrb
jl
jmp
and
push
sub
neg
xchg
xor
nop
mov
daa
sbbb
testl
je
pop
sub
pop
push
arpl
add
pop
jmp
lds
ljmp
push
mov
push
movsl
cmp
mov
push
lret
mov
inc
push
call
xor
cmpsl
jne
clc
xchg
mov
or
lods
xchg
sub
sbb
in
pop
mov
rolb
movsb
xchg
int3
mov
jecxz
or
stos
jb
inc
add
sti
inc
shll
mov
inc
outsb
and
int
pop
push
scas
add
test
or
pop
jg
pop
insb
or
adc
sub
int
pand
and
mov
jo
xchg
sub
loop
push
jno
cmc
gs
movsl
sti
ja
mov
ja
imul
pusha
gs
mov
mov
dec
in
mov
push
lods
push
lock
imul
push
cli
ja
and
cli
inc
in
fstpl
push
push
pop
pop
int3
pop
adc
mov
add
jp
divl
adc
xchg
xorl
std
ljmp
lahf
loopne
xchg
adc
sbb
pop
ret
jo
shrb
outsb
xchg
das
pop
pop
push
jae
cmp
popf
mov
cmp
inc
mov
add
or
cmp
in
test
mov
pop
call
mov
jmp
in
mov
or
jae
aaa
jmp
repz
es
xchg
push
add
cmpsb
mov
sub
sub
jmp
test
adc
add
sub
ss
add
loopne
out
sbb
or
shrb
nop
inc
add
dec
jae
jmp
aad
int3
ja
push
shll
jmp
pop
jbe
popf
inc
sbb
add
je
lret
inc
ficoml
ljmp
lcall
dec
shl
sub
jne
icebp
mov
lods
ljmp
cmp
jl
push
ret
ret
pop
jae
and
mov
movsb
or
out
lea
add
sub
xchg
sub
fildl
aam
sub
pop
push
xchg
mov
mov
xor
mov
or
es
lods
cmp
pop
imul
sbb
jmp
sub
cld
lcall
rcll
imul
jmp
pop
pop
decb
daa
jg
adc
jne
sub
int3
or
aas
aad
das
lcall
rcll
mov
and
mov
mov
dec
or
int
in
mov
pop
xchg
cmp
pop
scas
iret
imul
mov
adc
pop
xor
mov
push
jnp
sub
push
leave
sub
mov
pop
mov
push
and
mov
outsl
adc
clc
stos
add
loope
push
cld
mov
iret
pop
fucomp
fs
mov
jnp
inc
adc
sub
add
cwtl
cmp
add
lret
std
sbb
xor
popf
fcoms
loopne
popf
cld
pop
nop
mov
adc
stos
loop
jne
mov
repz
pop
mov
mov
xchg
jmp
jecxz
jo
je
mov
pop
jnp
pop
push
jmp
add
add
jne
decl
js
std
xchg
sub
mov
jmp
repz
sbb
xchg
ficompl
popa
lahf
jmp
lret
es
subl
int3
pop
add
adc
rcl
loope
icebp
movsb
xor
into
jmp
adc
scas
js
pop
dec
test
push
add
andb
xor
adc
push
gs
stc
cmp
xchg
insb
aas
and
adcb
fs
jae
and
xor
jmp
gs
cmc
out
push
xor
add
jmp
std
or
add
dec
sub
pop
adc
mov
notl
cmpb
add
pop
push
mov
les
mov
push
xor
xchg
pop
mov
inc
push
das
filds
jle
inc
push
and
xlat
pop
pushf
pop
test
adc
and
add
add
add
dec
cmpsb
add
aaa
test
dec
neg
add
cmp
and
or
push
sub
outsl
push
aas
inc
mov
pop
pop
xor
lods
out
push
sub
and
adc
in
jmp
push
push
push
xorb
pop
and
push
lret
sub
or
fdiv
push
lock
jb
sub
sbb
push
popf
shrl
xchg
push
and
add
add
pop
scas
les
inc
adcb
dec
icebp
or
xchg
lds
or
and
push
sbb
push
scas
shrl
test
mov
dec
popa
and
daa
outsb
outsl
out
cs
fldcw
sbb
adc
push
adcb
pusha
add
adc
pop
and
mov
or
add
jmp
iret
add
xchg
gs
jne
xor
movsb
jb
mov
clc
xor
xor
int
test
xorb
push
vcmpsd
inc
hlt
pop
jb
pop
pop
jmp
dec
addl
ja
mov
popf
shl
push
in
jle
cltd
or
sub
sub
jns
pop
dec
jbe
arpl
add
mov
cmc
inc
cmp
cs
or
add
jo
push
jg
mov
cmp
push
daa
dec
js
mov
jno
gs
pop
ss
jae
or
out
push
push
les
pusha
add
cltd
push
cs
push
imul
movlps
movsb
insl
insl
popa
pop
call
imul
push
jecxz
mov
sbb
jne
les
xor
icebp
add
pop
adc
nop
inc
pop
pop
nop
pop
cmp
jae
ss
cmp
mov
xchg
mov
inc
lahf
lcall
mov
pop
mov
push
lds
dec
xor
outsl
push
icebp
mov
shlb
sub
or
out
mov
and
pop
sbb
out
sti
or
popa
jmp
and
adc
repz
push
ret
jne
mov
dec
or
rclb
and
jecxz,pn
sarb
ret
sub
mov
subb
mov
or
aam
add
mov
mov
orb
loop
add
movsl
add
pop
push
mov
add
gs
dec
xorb
xchg
fbstp
pop
sub
pop
lcall
sub
in
push
or
sbb
dec
mov
mov
pop
jne
stos
mov
inc
mov
cltd
adc
push
add
sub
jg
pusha
inc
cld
sub
and
push
shl
xor
pop
xor
inc
xor
cmc
push
pop
in
out
jno
sub
sbb
xor
aad
inc
sub
add
loope
out
jo
or
push
stos
mov
test
mov
jne
dec
and
inc
mov
popa
shr
sbb
jp
out
lods
ja
aaa
imulb
loope
inc
mov
stc
xlat
inc
or
push
jmp
dec
push
addl
rorb
add
shlb
mov
popf
mov
sahf
loopne
lds
pop
push
and
mov
stos
inc
cmpsl
pop
add
sbb
cwtl
mov
mov
push
out
shl
out
inc
fsubr
pop
mov
push
sub
xchg
jne
sub
cmpsb
and
adc
jl
add
mov
lcall
inc
aam
inc
inc
push
mov
pusha
jmp
xor
mov
jmp
push
push
addb
sub
jle
add
adc
or
sub
add
mov
mov
push
imul
cmp
sub
sbb
sub
push
push
pop
mov
inc
mov
jecxz
jmp
repnz
cs
stos
fiaddl
xchg
add
sbb
les
mov
adc
xchg
popf
sub
add
in
andb
dec
sbb
ficoms
pop
jns
sbb
xchg
hlt
sub
push
add
mov
cmpb
push
xlat
loope
gs
repz
call
lret
jmp
hlt
aaa
dec
insl
rorb
xchg
push
das
sbb
aas
sbbl
jg
adc
or
adc
dec
fdivs
dec
push
rcl
cmp
pop
repz
shl
pusha
ret
aas
push
xchg
xor
out
cld
sub
or
dec
pop
outsl
out
pop
fldl
es
adc
dec
mov
jecxz
adc
es
test
push
push
sub
adc
clc
add
mov
pop
pop
test
dec
push
pop
rcl
xchg
fists
push
dec
inc
dec
dec
mov
sub
ret
ret
cmp
push
movnti
or
andl
rcll
cmp
out
xchg
jno
lahf
aas
add
mov
cwtl
sahf
or
mov
adc
mov
out
push
or
pop
push
test
mov
pop
aas
dec
pop
or
and
sub
fstpl
adc
shl
add
pop
lcall
test
cmpl
iret
movsbl
in
movzbl
shrl
out
incl
mov
lock
mov
mov
in
or
pop
adc
ret
adc
push
mov
and
fs
pop
stos
push
xchg
xchg
jbe
loope
or
sbb
sarl
rorb
enter
jb
or
test
rorb
notl
add
mov
pop
out
adc
add
and
shl
pop
imul
movsl
push
fidivs
push
inc
mov
mov
sahf
insl
je
mov
ja
sbb
pop
and
xlat
and
dec
add
inc
sub
cmc
lea
divl
andl
sahf
push
adc
adc
cld
adc
out
pop
sub
in
jb
dec
push
cmp
or
adc
jno
call
push
hlt
push
movsb
testl
sbb
notl
inc
pop
repz
enter
or
push
adc
sahf
add
scas
pop
mov
fucomip
sti
pop
push
jne
aam
stc
mov
or
in
shl
sub
roll
movsl
adc
dec
and
pusha
mov
or
mov
push
pop
js
xorl
push
je
rcrb
add
mov
inc
mov
nop
xchg
clc
aas
and
mov
inc
and
or
aaa
fisttpl
pop
and
andb
push
add
mov
and
mov
jmp
and
push
mov
xor
and
jmp
loop
test
push
xor
pushf
push
jge
xlat
pop
pop
mov
cmp
jmp
shr
jb
adc
jl
dec
repnz
daa
dec
jmp
stos
bound
pop
lret
jmp
movsl
clc
fimull
push
lahf
add
mov
scas
pusha
outsl
fsubr
lods
pop
mov
sub
popf
push
add
pop
test
lods
aas
sbbl
std
lds
mov
mov
mov
or
adc
pusha
add
sub
pop
lods
shlb
test
xchg
pusha
clc
imul
xchg
jno
jmp
mov
jp
mov
idivl
or
stos
inc
sbb
cmp
dec
test
sub
push
fistpll
pop
xor
xor
push
dec
pop
bnd
cmp
ret
xor
cmpb
testl
pop
neg
orps
sub
add
pop
sub
sub
cld
scas
dec
mov
dec
hlt
es
push
inc
sbb
std
and
lahf
sti
fs
jns
ret
lret
inc
imul
fmull
pop
mov
addb
jecxz
lock
call
out
adc
mov
lock
or
push
sub
std
call
dec
pop
push
mov
daa
ljmp
test
test
hlt
pop
and
sbb
clc
lret
push
push
push
xor
adc
ret
inc
rorb
xor
sub
inc
jg
cmp
and
xor
lcall
rcl
les
sbb
sbb
cmc
adc
das
pop
arpl
imul
jge,pn
jle
fildll
in
and
out
inc
xor
popa
xor
or
cmp
ret
xchg
out
push
and
ss
or
mov
out
out
and
mov
cmpsl
jnp
mov
mov
xor
jmp
jge
push
push
push
and
rclb
mov
imul
xor
mov
dec
mov
ja
rcrb
or
gs
dec
dec
push
sub
inc
loop
push
pop
adc
sbb
and
test
pusha
leave
jnp
cmc
jnp
cmp
pop
jae
frstor
pop
sub
pop
sub
push
clc
push
mov
sub
mov
fwait
mov
pop
add
icebp
sub
jmp
pop
hlt
add
mov
outsl
pop
iret
mov
cmp
es
test
popl
sbb
and
push
subl
jae
lods
xchg
xor
ljmp
push
fiaddl
add
int3
push
pop
xor
je
push
test
or
push
cmp
cmpsl
das
push
ss
adc
mov
jp
push
loopne
leave
loop
jnp
fildll
je
mov
ret
insb
sub
mov
inc
add
mov
scas
fxch
inc
fimull
pop
or
ja
push
inc
inc
mov
lahf
shlb
fmuls
push
js
mov
sarl
fs
cmpsl
xor
xor
jle
mov
sub
mov
cmp
data16
scas
or
mov
adc
cmp
push
mov
mov
je
loopne
dec
sub
dec
push
sub
pop
ret
push
dec
out
or
stos
sub
cmp
daa
testb
mov
test
aad
aaa
jge
lds
insb
jbe
adc
or
pop
or
add
ret
push
int
ds
lock
sub
cmp
int
jge
cmp
out
adc
push
jmp
jb
out
imul
sbb
xchg
fistl
dec
dec
sub
sub
mov
data16
int3
xchg
in
adc
inc
leave
repnz
rorb
and
fmuls
pop
rorl
add
xchg
loope
pop
lds
je
pushf
pop
shrb
sbb
xchg
push
lahf
scas
adc
in
xlat
xchg
out
adc
xchg
mov
popa
sbb
dec
xchg
xchg
pop
push
xor
mov
and
jae
sub
push
aad
lods
and
or
pop
dec
cmpsb
or
ret
lds
pop
and
push
cli
cmp
sbbb
movsb
add
push
jecxz
sar
push
lret
inc
mov
add
xchg
mov
and
push
and
sbb
cmp
cmp
or
shl
add
xor
stc
rcrb
ljmp
es
xlat
sub
jne
cmp
popa
pop
pop
mov
push
fistpl
jecxz
add
test
add
and
mov
je
push
mov
mov
jae
sbb
cmp
lea
adc
aam
pop
das
or
int
and
cmp
pusha
jnp
adc
inc
mov
ja
js
adc
jmp
add
rorb
cmpsb
pop
pop
outsl
and
adc
clc
jg
lahf
jnp
ja
mov
ljmp
cmp
push
shlb
int3
cwtl
inc
cmp
out
daa
repnz
dec
xor
mov
sahf
sub
stos
mov
add
fwait
adc
push
std
add
sub
push
cmp
cmpsb
clc
in
out
mov
fstps
test
xor
stos
subb
mov
inc
xchg
lods
adc
pusha
mov
add
or
sub
dec
loopne
xor
shll
mov
dec
mov
outsb
and
cmp
psubw
pop
mov
mov
ret
adc
push
fwait
add
scas
jp
push
testl
lds
repz
lods
cmpsb
add
dec
std
ljmp
mov
shl
push
mov
and
int3
sarl
push
in
sqrtps
cli
repnz
sub
imulb
dec
cmpsb
aam
dec
xchg
xchg
loop
inc
push
out
in
mov
cmp
adc
pop
xor
imul
stos
xor
jmp
fsub
push
repnz
cmpsb
adc
jmp
and
sub
xchg
xor
sahf
inc
dec
mov
cmpl
sbb
or
rcrl
sub
xor
js
rolb
rorl
jmp
jo
imul
dec
push
pop
add
sbb
je
push
in
ret
pop
mov
dec
mulb
addr16
movsl
sub
int3
ret
mov
daa
mov
loop
fisttpll
push
sub
inc
repnz
and
fisubl
insl
fnstcw
loopne
hlt
pop
adc
lods
jmp
jmp
xchg
fisttpll
nop
nop
ret
sbb
das
cmpsb
mov
and
push
and
jo
test
push
js
pop
not
ja
jle
or
and
lcall
and
add
ds
fisttps
rorb
xchg
ja
lods
sub
loop
subl
adc
adc
daa
pop
fldln2
dec
push
xor
enter
iret
lahf
pop
mov
in
ja
icebp
push
cs
std
xor
add
arpl
imul
pusha
cmp
inc
orb
flds
add
jmp
push
jmp
mov
push
mov
sub
aad
add
roll
ja
lret
mov
pusha
movsl
jne
pop
das
test
lea
mov
push
pop
sub
sbb
pop
xchg
fmull
xchg
adc
and
adc
aaa
test
jmp
pop
loope
inc
jnp
mov
jns
add
pop
ljmp
in
aaa
fcompl
ret
and
jp
xchg
fidivrs
mov
mov
pop
add
jle
clc
sbb
call
cld
mov
popf
inc
pop
shrb
popf
cmp
ds
push
mov
dec
dec
imul
mov
mov
out
add
and
mov
neg
int3
add
sub
arpl
jg
push
mov
in
and
icebp
pop
test
imull
loop
test
popf
add
push
cltd
mov
inc
fwait
in
add
sub
bound
jmp
subl
adc
notl
mov
cmp
mov
jmp
into
adc
leave
pop
sub
add
fsubrs
imul
cmpsl
sbb
outsl
pop
inc
or
dec
sub
push
mov
add
push
push
add
pop
jle
sbb
mov
orb
mov
cs
push
jecxz
lahf
mov
lret
jge
sub
data16
jbe
aas
add
insl
mov
fs
in
pop
pop
xchg
les
add
mov
sub
push
inc
and
fistpll
cs
xchg
xor
add
mov
pop
test
mov
push
mov
mov
sbb
outsl
pop
xchg
xor
movb
mov
pop
push
scas
push
jecxz
mov
leave
mov
bnd
addb
jecxz
ds
flds
rcrb
cmp
js
das
jae
push
test
sbb
inc
sub
dec
push
int3
xchg
repnz
sbb
jbe
push
pusha
mov
xchg
push
out
sbb
jmp
add
mov
or
cwtl
mov
cli
push
dec
adcb
push
mov
dec
enter
add
and
ljmp
pop
repz
ss
loop
cmc
add
and
loop
xlat
outsb
repz
lods
popa
mov
jle
sbb
ja
sub
push
push
nop
jl
xor
jmp
or
or
test
mov
popa
inc
sub
arpl
mov
dec
xor
or
xor
and
pop
adc
adc
addr16
lock
into
add
cmc
sub
jecxz
jg
xchg
enter
loope
fistps
negb
dec
mov
int3
out
and
orb
stc
adc
popf
dec
dec
mov
inc
adc
fnstsw
push
inc
je
cmp
adc
cmc
push
jle
in
mov
int
mov
clc
or
js
push
faddp
sbb
sbb
adc
mov
aaa
jg
pusha
ret
enter
out
gs
adc
pop
push
testl
pop
mov
push
mov
xchg
push
push
jle
adc
mov
xchg
jo
mov
shr
jne
pop
cmp
imul
add
pop
std
xlat
add
jne
push
dec
mov
mov
sub
adc
push
mov
sub
pop
jp
xchg
add
sub
daa
loopne
sbb
outsb
pop
or
not
xlat
sbb
and
mov
or
mov
pop
adc
repz
add
out
stc
int
mov
inc
loopne
in
mov
pop
sbb
jmp
rcr
repnz
adc
push
jmp
push
ja
lea
ljmp
fiaddl
jmp
mov
mov
xchg
sbb
add
gs
jmp
adc
test
jmp
push
jmp
loop
cmp
or
ja
adc
add
jmp
cli
pop
xor
sub
nop
sbb
orb
and
fwait
add
mov
mov
xor
sub
roll
cld
mov
out
sub
pop
sbb
sbb
outsl
xchg
into
cmc
cs
mov
in
dec
or
xchg
test
inc
sub
lods
imul
jl
and
push
inc
dec
sub
test
fdivs
scas
adc
and
dec
pop
mov
repnz
or
fnsave
inc
cmc
inc
adc
loopne
or
sub
sub
loop
push
cli
sub
xchg
popa
xchg
sub
dec
jle
int3
dec
xlat
push
imul
sbb
test
in
xor
mov
push
mov
mov
jmp
lahf
inc
cmp
neg
add
pop
xchg
and
sub
push
xor
scas
add
and
jae
push
mov
xlat
in
mov
imulb
add
repz
inc
outsl
add
jmp
jo
lods
or
mov
jmp
pop
fiaddl
shlb
sahf
dec
shll
add
push
jmp
pop
clc
subb
dec
rorl
aas
add
enter
xchg
fisubs
xchg
or
jmp
jl
dec
adc
mov
push
ljmp
enter
out
imul
scas
inc
test
add
jp
pop
cwtl
dec
sahf
xchg
push
jp
movb
dec
sub
or
push
repz
pop
xchg
pop
loop
dec
scas
jbe
xchg
adc
and
xor
imul
or
mov
push
jmp
lcall
fiadds
inc
jb
jmp
push
mov
scas
jecxz
aad
push
jns
sub
movsl
xlat
nop
dec
push
test
mov
fs
dec
push
mov
lea
movsb
xchg
cld
xchg
ljmp
xor
je
or
sub
in
push
inc
pop
cmp
lods
sub
cmp
in
adc
jle
mov
lds
js
rorb
push
in
pop
movsl
xor
shl
or
jmp
popf
pop
notb
cmp
loop
mov
loop
test
cmpsb
cltd
xchg
test
pop
fdivs
mov
inc
adcl
xor
sub
mov
pop
lcall
loopne
xor
cmp
addl
adc
pusha
imull
jns
icebp
pop
dec
cld
push
jp
lret
movsb
add
jl
imul
lock
fdivs
dec
push
ffree
stos
mov
jns
mov
jge
mov
popf
dec
in
adc
and
dec
das
jne
jmp
cmc
cmp
xor
push
negl
sub
and
movsb
inc
sbb
iret
adc
stos
pop
xor
inc
xor
cmp
daa
jmp
dec
pop
adc
inc
out
daa
pop
bound
inc
inc
daa
adc
pop
push
addl
es
pop
sub
jne
mov
and
ret
mov
testl
and
or
rolb
roll
cltd
in
cmp
in
mov
cmp
sub
jecxz
adc
jl
xchg
xchg
sbbl
js
repz
movsb
sub
sub
dec
mulb
xor
xor
cmc
bound
lret
add
add
pop
ds
adc
or
jg
std
add
pop
cmp
cs
pop
jae
and
xor
scas
decb
lds
jnp
cmp
push
jp
fdivr
add
and
sub
push
push
inc
add
dec
add
loop
add
xchg
jo
pop
sub
data16
inc
cmp
fadds
xchg
mov
pop
xor
mov
push
xchg
movb
nop
dec
nop
and
and
sbb
hlt
xor
pop
shrb
bound
mov
fwait
xor
sbb
push
and
add
jmp
push
mov
mov
sbb
xchg
or
adc
fisttpl
mov
jmp
inc
adc
fisttpll
jmp
jl
movsl
add
test
call
push
sub
push
out
pop
inc
clc
inc
dec
mov
xorb
mov
dec
push
mov
xor
jno
sub
mov
jmp
xchg
js
pop
mov
sub
dec
nop
mov
or
dec
sbb
ficompl
jmp
aad
or
shll
xor
mov
sub
push
push
pusha
mov
add
out
out
pop
ret
sub
xor
movsb
stos
mov
xchg
or
int3
inc
lahf
roll
push
mov
push
xchg
aam
scas
cmp
push
mov
inc
mov
lret
dec
outsb
popf
push
cmp
orb
fld
inc
or
pop
pop
data16
daa
or
sti
mov
xchg
mov
nop
loope
xorb
out
orb
fsts
xchg
popa
add
lds
data16
pusha
inc
dec
nop
push
or
xchg
js,pn
or
adc
inc
into
jmp
scas
mov
ror
add
push
or
loopne
inc
push
push
jmp
repnz
rorl
lds
cmpsl
push
popa
jge
loopne
dec
in
adc
pop
imul
push
sub
push
push
enter
xchg
negl
and
je
cwtl
jl
jbe
add
inc
or
lock
dec
lahf
mov
push
mov
dec
rol
lock
push
lahf
stc
es
push
notb
jmp
test
sbb
comiss
xor
sar
fs
and
clc
cmpsb
adc
call
shlb
sbb
popl
and
inc
arpl
movsl
outsl
scas
out
shll
or
pop
mov
mov
cmpsl
incb
and
xorl
out
and
fisttps
add
repz
or
cmp
fnstenv
out
inc
fisubrs
stos
push
dec
cs
adc
ret
jl
inc
xor
shlb
fs
sub
mov
cmpb
pop
jg
in
out
dec
lds
mov
jmp
add
inc
sub
cld
rorb
push
pop
and
sub
icebp
or
dec
mov
inc
cli
push
push
xor
adc
lea
repz
xor
cmp
call
dec
incb
or
daa
and
add
out
mov
loope
xor
imul
jge
sub
rorl
loopne
lods
inc
das
mov
or
sub
pop
push
pusha
fwait
ret
or
ds
mov
fs
adc
mov
inc
into
repz
adcb
es
push
pop
jl
out
scas
bound
sbb
or
sbb
adc
lods
movsb
mov
mov
cs
push
xchg
jl
jns
out
gs
adc
pop
outsl
pop
jecxz
or
sub
fsubrp
daa
mov
or
aad
std
and
or
leave
or
lock
xor
jo
push
push
push
adc
and
add
leave
adc
add
push
mov
clc
cmc
cmp
dec
or
or
icebp
push
inc
test
mov
push
add
sbb
in
mov
and
out
out
lock
xchg
mov
adc
jo
imul
mov
shrb
jp
enter
fisttpll
jmp
add
in
dec
dec
adc
xchg
jmp
scas
pop
imul
cmpsl
cwtl
cmp
dec
std
mov
add
sub
stos
xchg
xchg
sbb
mov
inc
fisubrl
sub
adc
aad
pop
or
xor
jo
pop
scas
push
in
scas
fdivr
mov
push
jmp
int3
jbe
loope
xor
ljmp
sub
xchg
jmp
cmp
jmp
pop
pop
stos
pop
inc
or
ss
clc
adcl
xor
outsb
xor
bound
out
jmp
dec
add
into
aad
xchg
clc
adc
repz
mov
mov
sub
rcll
jae
sbb
mov
dec
out
xor
jbe
in
out
mov
pop
into
mov
mov
mov
mov
pop
mov
inc
push
fdivl
push
or
adc
mov
add
mov
in
pop
mov
addr16
pop
movb
pop
fcmovnb
bound
popl
cli
js
mov
adc
adc
dec
xchg
dec
sbb
repnz
push
adc
mov
in
and
dec
lock
cmp
or
bound
pop
push
inc
fs
mov
les
and
rcll
pop
mov
popa
cltd
xor
push
insb
pop
roll
enter
inc
ror
leave
aam
test
daa
or
inc
cs
lods
les
enter
push
push
mov
cld
inc
daa
push
in
or
cmp
das
popf
pop
dec
lods
dec
mov
ret
pop
pop
sti
gs
enter
pop
pop
cmpsb
ljmp
or
push
add
pop
repnz
hlt
and
push
imul
adc
mov
inc
in
rorb
sub
and
cmp
sub
dec
mov
adc
mov
lock
fwait
mov
mov
ds
xchg
addr16
pop
addr16
arpl
clc
in
stc
testl
cmc
jmp
call
aad
lods
adc
out
roll
test
les
and
pop
lods
jl
and
cmp
repz
mov
inc
xor
and
push
jbe
mov
lcall
push
loopne
test
cltd
mov
cmp
ds
lods
cwtl
lret
push
xor
mov
mov
loop
add
sti
jmp
shrb
adc
cmp
icebp
push
testl
xchg
cs
repz
add
inc
jae
push
push
out
push
pop
ds
test
lods
pop
bound
mov
inc
or
fsubr
gs
and
in
imul
popf
testl
pop
ja
rcrl
push
mov
xchg
cli
mov
pop
mov
push
push
mov
or
cmc
add
xorl
test
mov
cmp
cmp
jecxz
in
mov
rolb
insb
daa
xchg
cmp
push
out
or
pop
add
dec
pop
lahf
push
pop
loop
fdiv
js
cmp
push
pop
clc
shl
mov
pop
or
fmull
jge
adc
add
jnp
pop
dec
sbb
outsb
sub
dec
lret
push
in
iret
jnp
ss
or
pop
add
andb
dec
pop
push
mov
mov
or
mov
mov
xchg
xor
cmp
rcl
or
ds
push
add
dec
lods
test
or
push
in
push
mov
pop
pop
push
cmp
jo
orb
pop
inc
movsl
cmc
sub
icebp
xor
mov
addl
lods
xor
cmp
sti
and
pushf
mov
in
inc
xor
arpl
mov
add
pop
movhlps
dec
mulb
inc
ds
sbb
push
mov
loopne
dec
rclb
scas
sahf
mov
add
enter
push
popf
dec
negb
adc
pop
popa
push
pop
ljmp
add
xor
dec
js
popf
fisttpl
lret
pop
repnz
or
gs
jo
mov
test
cmpsb
jno
push
outsb
mov
xchg
test
add
sbbb
ds
cs
push
hlt
xchg
rorl
or
mov
push
mov
sub
rclb
ret
scas
fidivs
mov
inc
dec
out
lock
jge
sub
push
rclb
out
or
cmp
out
xchg
pop
lret
imul
dec
xchg
jl
pop
jge
shrl
push
repz
call
sub
xor
mov
mov
cmp
in
ljmp
ja
xchg
add
and
popa
imul
pop
jne
jecxz
dec
add
push
sub
push
cli
adc
shl
imul
punpckhdq
and
add
sbb
dec
inc
std
pop
and
xchg
mov
das
test
outsl
nop
fs
jbe
es
or
push
stc
aad
xorl
mov
ret
inc
jne
push
push
inc
sahf
rclb
test
dec
and
les
clc
out
add
jmp
mov
sub
xchg
or
imul
rcrb
jmp
pop
xchg
sub
testl
pop
adcl
lods
sub
shrl
xchg
cld
sbb
dec
dec
jmp
test
addb
rorl
mov
add
insl
mov
or
jbe
adc
or
cmp
adc
add
xor
ds
push
push
orb
nop
jmp
xor
pushf
in
xchg
mov
test
add
bound
push
mov
xlat
mov
add
xor
cmp
dec
es
test
inc
out
dec
das
push
ljmp
or
jae
pop
xchg
adc
cmp
adc
jp
les
cvtps2dq
call
cmp
fisttpl
dec
fnsave
xchg
rcrb
shll
jg
xchg
jmp
mul
push
test
mov
adc
divb
mov
lods
dec
in
icebp
int
stos
fsubrs
mov
add
outsl
inc
neg
test
push
add
movsb
or
xor
out
add
add
and
aad
dec
incl
shll
clc
test
es
int3
mov
jmp
push
int3
dec
or
rcrb
outsb
in
and
clc
dec
pop
lret
mov
sub
and
and
and
push
lret
add
es
test
int3
daa
daa
sbb
pop
nop
insb
and
dec
mov
mov
imul
or
push
or
xor
xor
clc
mov
xor
data16
clc
rorl
orl
add
dec
or
or
imull
test
or
sub
xor
insl
cmp
push
pop
pop
cmp
lods
shrl
fsub
lea
push
sbb
into
push
shl
out
shrl
jl
clc
or
dec
xchg
imull
or
enter
outsl
mov
rcll
adc
dec
push
jle
ret
and
push
pop
push
and
cmp
orl
in
jmp
or
add
jl
ret
jp
adc
insl
cmp
xchg
adc
mov
rol
mov
ja
gs
or
mov
push
sub
add
shr
adc
int
and
jmp
push
mov
das
inc
std
push
push
adc
repz
inc
add
dec
push
or
and
pop
push
ret
push
sahf
cmc
test
lds
js
add
cld
add
adc
dec
push
and
ljmp
roll
cld
push
jo
or
pop
pop
fildl
scas
fistpl
add
test
icebp
jle
push
pop
out
push
xlat
in
inc
shll
daa
pop
enter
xorb
pop
arpl
mov
pop
cwtl
repnz
es
fisttpl
nop
xor
cmp
ret
or
jbe
push
cmc
dec
out
sbb
inc
jo
in
pop
mov
and
jmp
add
ret
dec
sbb
inc
loope
sbb
mov
imul
xchg
and
pop
xor
add
ds
add
adc
aad
push
fucomi
ljmp
cwtl
stc
imul
pop
sahf
push
in
rcrl
aad
dec
xchg
add
xchg
push
subl
mov
insb
cmp
add
push
rcl
lods
jge
pop
jp
lock
pop
fnsave
add
mov
mov
jmp
add
cmp
jbe
cmpsl
push
xchg
cmp
dec
push
sbb
sbb
push
jg
cmp
and
or
je
xchg
add
in
filds
inc
sub
inc
jmp
insl
ds
jnp
daa
lods
movsl
adc
jne
shlb
dec
ss
push
hlt
sub
jle
fidivrl
cwtl
adc
or
test
or
pusha
pop
mov
fisttpll
dec
test
xchg
ficoms
and
cmp
pop
daa
pop
adc
or
leave
inc
pop
jne
push
mov
daa
or
neg
aad
mov
xchg
and
mov
test
mov
or
and
sbb
sub
movsl
push
daa
or
cmp
adc
push
cmp
mov
xchg
add
fmuls
lock
imul
inc
add
cmp
pop
sub
sbb
mov
pop
call
mov
sbbb
jne
rolb
jp
cmp
push
dec
rcr
out
je
scas
sub
popf
adc
sbb
nop
stos
cmpsb
sub
inc
xchg
pop
scas
lret
ss
inc
sub
das
movsl
and
mov
mov
jne
or
cmpb
decb
sarl
daa
mov
lcall
xor
jmp
sub
lahf
push
mov
jno
sub
and
push
push
jmp
shl
int3
xchg
loope
repz
mov
es
lahf
jle
andb
mov
cmp
in
ljmp
jo
out
jle
and
adc
js
pushf
sub
push
out
pop
clc
xchg
jle
fsubr
push
lcall
jb
les
pop
pop
push
push
push
js
loopne
mov
jmp
xor
dec
lods
repz
daa
fnstsw
adc
cmp
xchg
pop
lret
cmpl
rcll
in
add
testb
pusha
pop
push
jmp
iret
and
pop
imulb
cld
adc
sti
cmp
jmp
shll
gs
fcmovbe
mov
add
insl
push
addr16
std
sbb
sub
addb
pop
add
cmp
inc
pushf
pushf
scas
popf
and
in
adc
and
and
mov
roll
adc
sarl
ret
jp
aam
pop
mov
jecxz
push
mov
sub
cmpsl
lock
xor
lahf
loopne
push
insl
adc
adc
idivb
jb
mov
or
jge
mov
sbb
adc
xor
ret
add
scas
pop
out
test
add
jmp
sbb
loopne
mov
dec
mov
inc
mov
push
pusha
mov
mov
inc
stos
dec
mov
adc
push
aam
das
pop
fadd
insl
fisttps
mov
dec
lea
cmp
jecxz
mov
pop
pushf
rol
fwait
pop
and
and
fstps
push
or
jae
dec
sub
pop
pop
pop
xor
das
inc
fwait
icebp
adc
cmpsb
and
xchg
push
or
pop
sbb
out
aam
fnstcw
or
in
mov
jnp
ret
sub
sub
out
dec
pop
pop
cmp
dec
dec
sub
leave
mov
ret
stc
out
cmp
div
pop
push
loopne
ret
iret
pop
pop
lods
xchg
add
arpl
pop
loopne
lret
mov
repz
dec
add
ljmp
push
in
add
cld
sub
scas
pop
out
in
inc
das
loop
mov
mov
mov
pop
mov
movsb
xor
lret
xor
rcrl
adc
imul
inc
roll
aas
adc
jmp
aad
roll
cs
add
push
mov
mov
jge
pop
stos
jb
pop
dec
add
adc
or
call
repz
enter
scas
cmp
sbb
sbb
push
int
lahf
js
hlt
add
or
pop
xor
push
jno
jmp
fs
adc
test
mov
gs
adc
cmc
lahf
dec
test
stos
aaa
adc
inc
lods
mov
lret
ss
shll
add
pop
jle
add
aaa
push
add
fisubrs
bound
or
sbb
std
cmp
or
jge
pop
jecxz
adc
add
fistl
add
jl
xor
out
xchg
xor
dec
mov
std
xchg
add
mov
push
pop
cmpl
es
jae
daa
xlat
pop
bound
mov
shlb
and
mov
popa
adc
push
xchg
jmp
out
test
addr16
pusha
scas
or
movsl
push
stos
add
ljmp
ret
out
lret
or
jg
lret
jo
or
inc
push
imul
cmp
jl
or
adc
add
jmp
cmc
xchg
xor
es
push
cmpsl
loop
stos
pop
repz
sbb
mov
dec
sub
jbe
or
insl
push
xor
daa
sbb
das
push
leave
xorb
or
mov
jbe,pt
dec
add
sahf
ljmp
sub
fnstenv
cli
mov
stos
out
pop
gs
and
adc
fwait
sub
xchg
jge
mov
or
add
jb
and
inc
xor
mov
popf
call
xchg
bound
inc
aad
pop
mov
sbb
das
insb
or
adc
dec
jge
lds
dec
cmp
shlb
xor
cs
xchg
pop
add
add
lcall
sub
add
pop
inc
sub
fidivrs
pop
lods
mov
mov
dec
jmp
setb
cmpb
or
pusha
jle
rolb
inc
test
fucomip
push
enter
add
inc
and
into
pop
pusha
sub
jg
jo
sub
xchg
dec
flds
pop
lock
dec
das
jmp
dec
dec
and
sub
push
and
jb
dec
std
add
xor
ja
xor
push
ds
xor
loope
push
mov
daa
jmp
adc
push
outsb
loop
inc
or
pusha
push
pop
inc
jmp
dec
cmp
adc
jl
fidivrs
test
push
stc
push
xchg
push
and
rcll
or
add
pop
pop
xor
scas
cmp
inc
out
sub
and
movsb
push
sbb
jmp
mov
bound
aad
leave
popf
and
loopne
jb
mov
and
pusha
push
push
jmp
out
jl
xchg
shlb
or
test
and
sahf
pop
dec
mov
stos
push
in
insl
add
cs
pop
ja
xor
ret
jl
orb
mov
shrl
or
sub
jmp
push
inc
push
push
shlb
sub
xor
and
push
je
and
jmp
mul
cmp
dec
aas
jg
mov
sub
dec
fcoms
popa
scas
rclb
and
fisttps
or
or
fcoms
pop
sub
push
std
les
kmovw
inc
jne
mov
dec
push
push
ret
sub
call
cltd
sub
enter
dec
es
stos
mov
dec
push
test
dec
cltd
shl
or
bswap
jmp
dec
add
outsb
pop
add
jnp
test
xchg
sbb
xlat
sub
les
jl
or
shrl
add
add
mov
leave
or
loopne
dec
clc
pop
repnz
xor
sbb
in
sbb
mov
clc
jno
xchg
aam
scas
bound
sub
arpl
push
mov
cs
ss
sub
dec
insb
cld
push
rclb
dec
jmp
pushf
incl
mov
mov
jle
inc
push
rorl
mov
or
pop
push
add
ds
sbb
sub
outsl
mov
pusha
into
das
lahf
sbb
insl
and
mov
xchg
fadd
call
aad
fisttpll
icebp
xor
sub
ljmp
mov
bound
dec
mov
incl
mov
push
dec
mov
inc
test
or
sbb
jge
push
fsubl
in
jge
pop
and
repnz
sbb
dec
fsts
ss
ds
in
add
push
jmp
push
gs
xchg
pop
or
add
and
mov
out
mov
pop
mov
popa
add
adc
popa
sbb
ljmp
push
jp
cmp
push
lret
sub
xlat
test
and
shrb
push
adc
push
cs
mov
mov
inc
adc
push
std
shr
jp
push
push
jo
or
adc
pop
sbb
adc
xor
dec
popa
mov
pop
pop
jg
jne
int
jle
cmp
mov
lret
jl
inc
push
jmp
mov
adc
test
add
jbe
or
add
adc
pop
sub
mov
sub
sub
xor
fnsave
cltd
ret
mov
fisttps
test
jmp
and
adc
add
test
xchg
xor
cmp
test
push
cld
lods
or
pusha
mov
sub
or
test
pop
xchg
dec
mov
imul
inc
into
xchg
adc
mov
xchg
cwtl
fsubrs
mov
rcrl
shl
lret
push
jle
pop
xchg
lds
pop
divb
mov
or
xlat
pop
cwtl
test
loopne
lods
jb
ret
cmc
out
xchg
test
xchg
jbe
jo
jg
shl
push
dec
mov
dec
mov
das
pop
js
mov
ss
dec
enter
cmpsl
fimull
addb
push
push
adcb
xlat
xor
cmp
sbb
push
ljmp
add
das
test
jne
push
and
add
fldl2t
sub
add
xor
adc
mov
cltd
lret
mov
add
rorl
js
adc
jbe
sub
jmp
dec
ret
xchg
stos
sub
or
sub
outsl
jb
and
xor
dec
push
dec
jmp
stc
fxch
dec
daa
enter
push
insl
rcl
dec
mov
jnp
pop
in
movlps
cmp
test
test
pop
call
mov
jnp
push
pop
jmp
gs
dec
daa
mulb
add
xor
popf
jp
sub
xchg
gs
or
jmp
push
fwait
lock
int3
push
int3
dec
inc
inc
push
add
or
inc
cmp
faddl
inc
sub
pop
arpl
sbbb
mov
mov
lahf
shlb
not
push
mov
pop
jmp
mov
or
or
test
mov
pop
dec
push
push
notb
jmp
loop
pop
icebp
testl
inc
js
loope
mov
orl
add
cli
inc
sub
rorb
inc
es
cmp
sbb
inc
enterw
push
and
sbb
call
add
mov
add
bound
ret
add
adc
adc
cltd
adc
pop
fists
cmp
mov
popa
jns
arpl
mov
aam
mov
and
icebp
pop
sbb
adc
out
xor
insl
stos
movsb
xlat
push
inc
mov
xchg
ds
sub
shrb
inc
jg
or
inc
pop
iret
dec
pop
xchg
repnz
add
jno
xor
cmpsb
out
lea
push
jae
inc
imul
jmp
push
pop
addl
je
gs
fstl
add
jns
nop
dec
jle
mov
adcl
xor
pop
mov
and
inc
sub
cld
insb
pop
bswap
shlb
test
dec
cmp
push
pop
push
jno
add
ret
cmpb
sub
lret
idivl
push
int
push
inc
cmp
int
popa
mov
mov
loope
repz
cld
mov
jl
jp
repnz
ss
or
xchg
inc
and
rorb
ljmp
jb
mov
mov
mov
sub
push
sbb
add
adc
js
cld
inc
mov
cmp
into
push
ljmp
adc
arpl
popf
fisubs
adc
sbb
cmp
aaa
aam
test
add
xchg
push
add
inc
test
cmp
jmp
push
fisubrl
aad
out
adc
or
mov
jmp
cmp
into
leave
or
cmp
adc
pop
xor
or
xor
push
shrl
aaa
mov
cmp
cmp
fs
insb
mov
cmc
leave
int3
aas
int
cmp
adc
aas
mov
add
nop
or
dec
pop
add
vsqrtpd
clc
xor
or
jnp
mov
jmp
ds
jl
mov
and
pop
mov
daa
test
jo
pop
pop
repnz
cs
daa
jle
jns
jns
push
in
push
enter
imul
cmp
aad
lock
ss
in
imul
pop
loopne
adc
inc
xor
inc
popl
popf
and
out
lds
xchg
sub
stos
jne
int3
sbb
adc
pop
mov
mov
xchg
hlt
lret
xchg
mov
sub
aam
loope
rcrl
leave
fs
and
sub
xor
movsbl
inc
ds
inc
outsl
ror
pop
inc
stc
call
sbb
clc
or
push
inc
subl
pusha
in
daa
xlat
mov
push
push
sbb
push
xor
jmp
mov
add
push
loope
pop
mov
test
add
add
jns
sub
out
pop
dec
pop
test
pop
mov
aam
push
mov
sub
and
lds
xchg
shll
pop
dec
mov
sbb
fdivrs
sarb
inc
scas
pop
dec
sbbl
cmp
jno
loop
mov
jmp
loope
jnp
dec
dec
sbb
ficoms
enter
and
cmp
xchg
push
nop
jl
dec
insl
cmp
push
lods
rorl
add
sti
push
mov
mov
prefetch
inc
lret
ss
das
lods
or
and
and
das
push
movsl
inc
jp
pop
loope
stc
xchg
aaa
bound
out
xchg
cltd
add
xor
stc
inc
sbb
mov
xor
xchg
ljmp
rcrb
ret
mov
cli
popa
popa
push
jp
mov
cs
push
ljmp
xchg
pop
inc
icebp
and
fidivl
push
and
cli
lahf
mov
add
int
adc
insl
push
das
test
outsb
dec
sbb
cli
push
fiadds
fsqrt
add
inc
inc
pop
mov
mov
sub
mov
sub
shrl
scas
or
sub
mov
inc
mov
pop
or
pushf
test
pop
scas
xchg
mov
xchg
push
test
shll
ret
aam
sub
lahf
outsl
jp
sub
inc
inc
or
xor
sbb
jmp
js
hlt
add
push
push
js
inc
sub
adc
mov
lcall
loopne
das
test
movsb
add
mov
test
sbb
xchg
inc
mov
xchg
test
outsl
repz
jns
scas
push
adc
leave
roll
pusha
sbb
out
ss
lcall
fistl
push
mov
push
mov
call
daa
pop
xchg
out
adc
mov
mov
dec
sbb
les
out
mov
mov
test
rclb
loope
inc
xchg
ret
ja
das
or
in
push
push
pop
push
sub
mov
aaa
sar
je
cltd
stc
hlt
push
psrld
ljmp
sbb
ss
xchg
sbb
or
sub
adc
movsb
mov
push
das
mov
jmp
push
jbe
das
insb
pop
jns
xorl
cld
xchg
jmp
in
sbb
and
aas
fstpl
daa
jmp
push
scas
dec
jo
imul
adc
xlat
scas
pop
ljmp
lods
jmp
add
cli
pop
push
mov
mov
dec
add
add
push
and
pop
inc
clc
sub
lret
add
call
dec
jle
push
push
or
pushf
scas
push
or
arpl
mov
xor
push
sub
jmp
pop
mov
add
fcomps
imul
add
sbb
test
mov
push
fcoml
mov
in
clc
out
or
test
push
out
or
cmp
pusha
icebp
dec
lds
xchg
mov
shlb
cmp
clc
push
ljmp
mov
loope
xchg
data16
addr16
pop
test
add
in
pop
and
sbb
or
or
inc
in
repnz
imul
into
test
out
inc
mov
cmp
leave
xor
ret
mov
repnz
add
add
push
and
out
cwtl
and
push
mov
push
mov
rclb
sbb
popf
push
out
fimuls
inc
movsl
adc
cwtl
add
and
es
dec
add
inc
shr
push
cmp
xchg
and
mov
insb
mov
push
ja
adc
jg
fadds
pop
xchg
add
inc
adc
imul
sub
cli
popa
sbb
mov
dec
aam
sub
dec
adc
pop
pop
dec
cmp
imul
cli
arpl
cwtl
pop
pop
push
mov
cwtl
jno
lahf
sbb
cli
add
inc
and
ret
jmp
js
loopne
mov
push
stc
es
scas
dec
sub
and
pop
or
jmp
test
cld
mov
fsubr
cwtl
dec
or
out
jmp
xchg
adc
lahf
cmp
sbb
inc
mov
sub
add
or
xchg
inc
shrb
shll
ficompl
sub
dec
scas
adc
cmp
mov
lret
or
es
cmp
mov
mov
pop
mov
xor
adc
and
clc
add
and
add
ljmp
fistps
in
pusha
jmp
jle
mov
xchg
arpl
mov
xchg
push
or
fs
aad
rorl
adc
popa
enter
push
das
jmp
sub
lods
int
aas
and
bound
mov
and
xor
lret
add
add
das
cmc
fucom
stos
dec
das
xorl
mov
lret
or
mov
add
das
lods
mov
stos
ret
xlat
shll
xor
adc
es
push
ss
or
pop
push
push
mov
dec
dec
scas
jge
jp
dec
add
adc
push
sub
ss
clc
test
add
loope
mov
lret
stos
cmp
mov
cmp
inc
lcall
cmp
mov
xor
push
and
cli
xchg
mov
push
xchg
adc
lahf
sbb
push
mov
nop
inc
mov
lock
fwait
mov
neg
push
push
xchg
pop
sbb
lahf
push
lock
es
decb
dec
call
mov
or
push
fsts
xchg
and
mov
adc
mov
ja
out
daa
pop
pop
jl
jmp
stos
js
xchg
jnp
adcl
fs
pop
ja
jbe
sahf
insb
cmp
add
rolb
add
pop
pop
scas
outsb
call
xor
aam
cmpl
push
sub
dec
js
mov
fwait
mov
leave
jmp
popa
mov
outsb
jmp
jo
xchg
in
push
rcl
or
imul
negb
shr
jno
cmp
add
cmp
fsubrs
lock
stos
inc
add
mov
xchg
loope
in
idivb
add
mov
mov
dec
aad
inc
mov
lahf
inc
cmpb
test
outsl
es
loopne
lea
xor
adc
iret
add
pop
pop
inc
sbb
loope
mov
imul
into
in
mov
test
pop
dec
jecxz
test
test
out
loope
and
sarb
movsb
sbbb
jno
cmpsl
xlat
sbb
es
loopne
xchg
js
inc
mov
cld
imul
cmc
cmp
icebp
out
loope
imulb
mov
pop
add
out
sub
mov
faddl
lret
dec
test
push
inc
cltd
jg
cmpsb
add
jmp
sbb
das
cld
mov
and
out
hlt
push
shll
test
adc
jne
cmp
ja
addr16
decl
xchg
mov
scas
inc
icebp
add
divb
inc
call
or
dec
xchg
push
add
sub
pop
cmpsl
or
xor
sbb
out
out
cmp
adc
push
nopl
sbb
mov
rolb
test
out
adc
xchg
popf
insl
xchg
and
mov
xchg
pop
push
jnp
xchg
dec
jmp
jp
add
add
cli
pop
sub
inc
cs
lods
mov
and
or
mov
xchg
pop
dec
bound
mov
add
lahf
hlt
push
or
into
outsl
add
pusha
lret
jmp
adc
jne
in
ficoms
adc
push
cli
dec
cmp
mov
ds
es
mov
mov
sbb
sub
out
mov
add
and
mov
xor
jae
inc
adc
sub
test
jle
inc
push
add
pop
xor
clc
jmp
rolb
or
inc
test
xchg
mov
nop
mov
cli
mov
pop
cld
enter
add
bound
daa
movl
cmp
ja
mov
popa
movsl
pop
loop
pusha
mov
les
rep
call
loope
sub
dec
add
sti
jg
adc
out
sbb
into
mov
pop
adc
push
add
jecxz
add
mov
dec
ret
into
push
icebp
js
sbbb
sbb
iret
loopne
scas
add
in
jge
icebp
shlb
sub
sbb
or
jmp
or
and
daa
sub
dec
dec
push
rcll
jg
arpl
popf
cmpb
jae
add
push
xlat
fldcw
add
dec
adc
loope
cmp
jbe
mov
adc
sub
lock
cmp
jno
cmpsl
sbb
or
pop
mov
dec
testb
dec
pop
sbb
hlt
or
sahf
in
add
and
icebp
fildll
cmpsl
pop
xor
xlat
pop
cmp
cltd
int3
jg
mov
push
push
inc
pop
xor
dec
mov
inc
fildl
call
pusha
and
or
insl
xor
imul
sub
xchg
shl
addb
mov
xchg
push
jnp
movsl
push
clc
mov
push
xlat
xor
shrl
cmpsl
js
movsb
pop
xor
adc
call
stos
test
call
cmpsl
jmp
andb
push
jne
stos
pop
and
push
orb
int
in
sub
les
sub
sub
scas
jmp
imul
loope
or
inc
jle
or
adc
inc
add
ret
fldl
or
std
stos
imull
loop
xchg
adc
cmp
jmp
pop
lock
push
jl
sbb
scas
gs
out
fnstenv
aad
mov
test
mov
arpl
loopne
sub
xchg
and
or
pop
dec
push
insl
ljmp
adc
dec
mov
data16
aam
xchg
mov
mov
push
mov
loopne
xchg
xchg
cld
cmp
ljmp
inc
sub
xchg
pop
jae
add
mov
mov
outsb
pop
shll
arpl
addl
push
or
dec
out
rorl
jo
push
sbb
orl
enter
mov
mov
cli
shrb
mov
mov
pushf
scas
insl
adc
inc
inc
lock
xchg
fsubs
add
or
orl
add
sub
cld
inc
pop
push
add
dec
shlb
inc
xor
sbb
mov
pushf
shrl
cmc
lea
iret
fbld
pop
mov
movzwl
shrb
xor
mov
pop
clc
jge
jmp
jmp
xor
arpl
test
or
out
jle
pop
and
add
aad
clc
mov
jbe
popf
test
jne
jnp
push
ja
pop
subl
push
cltd
and
jl
orb
or
or
adc
jne
mov
pop
push
mov
imul
xlat
out
mov
add
inc
out
fisttpll
std
cmp
add
lahf
xchg
icebp
mov
cmp
xchg
not
or
fistps
lods
xchg
mov
sub
pop
mov
fcoms
or
enter
pop
imul
ljmp
les
push
dec
lret
aad
cwtl
dec
bound
out
sub
sbb
adc
das
xchg
mov
sub
sbb
dec
call
adc
leave
push
and
mov
or
sub
movb
add
push
mov
mov
cld
fisubs
sub
pop
push
cmc
sub
and
xchg
not
pop
or
std
daa
dec
pop
jl
sub
movsb
lret
add
pusha
inc
imul
adc
inc
das
sarb
mov
cli
test
jge
or
mov
push
sub
adc
dec
and
sbbb
std
mov
fmull
push
fnstcw
add
pop
xchg
sub
push
addr16
enter
dec
movsb
push
push
pusha
dec
xor
daa
mov
jb
or
inc
ds
lret
loope
push
jns
sub
pop
lret
aaa
lods
mov
push
ja
push
daa
inc
xorb
inc
xchg
mov
addb
or
add
shrl
lcall
mov
out
add
dec
inc
loopne
mov
add
add
mov
imul
or
mov
xchg
jno
test
lret
daa
js
lahf
jl
rep
or
cmp
adc
mov
push
sbb
ret
add
and
std
mov
pop
jg
fstpt
sbbb
fisubrl
clc
inc
inc
jb
iret
cmp
adc
and
sbb
aam
enter
xchg
test
subl
loopne
push
dec
in
dec
je
dec
ret
and
inc
test
gs
xchg
ret
add
lret
out
xchg
dec
test
xor
or
inc
mov
std
shr
int3
dec
ja
inc
mov
mov
out
andl
add
in
pop
sti
mov
ljmp
inc
lods
sarb
cmp
stos
push
stos
adc
push
jecxz
xor
sub
push
push
xchg
sbb
movb
lret
neg
push
leave
aad
icebp
mov
jae
add
sar
add
xchg
or
fstps
inc
jmp
sub
clc
xchg
mov
popf
cli
adc
daa
inc
pop
inc
xchg
mov
clc
jnp
arpl
inc
cmc
and
jne
imul
std
xor
mov
adc
sub
dec
mov
add
lret
pop
mov
cmpsb
cmp
das
test
jecxz
fmulp
mov
mov
mov
cmp
cmpb
ficompl
add
lods
and
push
pop
inc
or
adc
sub
cmp
mov
faddp
mov
mov
push
dec
loop
or
sub
add
out
dec
insl
and
add
mov
sub
or
push
jmp
rcrb
test
dec
jb
inc
cli
lds
add
pop
push
add
adc
sub
sbb
sbb
mov
pop
daa
or
mov
cwtl
dec
mov
lahf
mov
ret
and
or
fldt
dec
add
cmpb
shl
fisubrs
pushf
adc
sub
jecxz
or
lds
aas
notl
notb
and
mov
xor
or
xlat
xor
push
jno
out
mov
fsub
and
mov
in
sub
lods
dec
repnz
add
mov
dec
daa
mov
and
adc
dec
mov
ja
fisubrs
cmp
xchg
lock
sbb
pop
out
add
in
les
addl
or
pop
int
fwait
icebp
add
shrl
enter
shlb
mov
loope
neg
sub
insb
pop
incl
mov
cs
and
xchg
xor
ret
scas
ret
add
aad
pop
addr16
add
push
pop
push
and
lret
sub
xor
pop
add
mov
jnp
jmp
outsb
loopne
adc
or
sbb
xor
rorl
push
aam
jmp
sub
call
jmp
cld
stos
mov
jo
push
cwtl
test
inc
mov
mov
dec
insb
mov
adc
pop
pop
scas
and
fcompl
sub
sbbb
lds
mov
scas
pop
mov
je
rcll
inc
mov
xchg
push
or
xor
pop
push
movsl
mov
pop
xchg
rcl
jo
xchg
lock
sar
xor
aaa
sub
pop
push
je
add
sub
sbb
rclb
mov
adc
in
cwtl
mov
pusha
icebp
xor
jecxz
call
hlt
xor
das
mov
scas
jp
mov
inc
pop
out
popf
lret
inc
mov
and
les
int3
insb
ljmp
shrb
jmp
adc
and
fcomps
or
js
cmpl
cmp
push
jne
mov
scas
into
pop
dec
int
ficoms
sbb
xor
mov
sub
mov
push
mov
and
jmp
fmuls
dec
lea
and
mov
sbbb
cmp
or
bound
or
cmpsb
rcll
cmpb
call
adc
mov
setg
inc
adc
fwait
jl
das
pusha
sub
cmp
leave
jmp
mov
and
pop
jmp
stc
and
lret
add
es
push
test
lds
sbb
loopne
rcl
stos
subb
test
ret
dec
or
inc
cmpsb
adc
cld
xchg
add
dec
push
arpl
pop
dec
sahf
add
jmp
jae
arpl
sub
lret
loope
ds
cmp
call
aad
sub
mov
testb
je
push
lods
out
orb
shlb
cwtl
lea
imul
cmp
mov
jmp
enter
icebp
nop
lock
arpl
cld
inc
loopne
add
jp
and
cmp
cmpsb
sbb
push
mov
enter
xchg
jae
lds
or
dec
das
outsl
pop
jbe
daa
aad
and
bound
cmc
pop
mov
rclb
pop
popf
shlb
jle
adc
subb
ljmp
pop
jb
push
orl
pop
mov
stc
push
adc
fwait
icebp
andb
sub
icebp
add
scas
shr
hlt
and
fiaddl
insl
sub
in
es
push
add
push
daa
dec
xor
rolb
adc
outsl
push
mov
adc
adc
adc
jmp
repz
xor
add
sahf
push
or
jmp
jb
pop
sub
mov
mov
data16
add
push
fidivs
add
and
adcb
test
daa
mov
fstl
call
adc
or
mov
lods
jae
add
lock
pop
push
jle
xor
mov
or
dec
aam
jmp
jmp
jnp
cld
movb
pop
xchg
jg
icebp
cmc
push
pusha
and
cs
pop
jmp
and
mov
or
jmp
movsb
push
sub
sub
loopne
jne
dec
push
jmp
psubd
into
jmp
shr
add
mov
xor
and
or
push
adc
out
push
xor
gs
lds
inc
and
jmp
mov
dec
fadds
and
pop
mov
xor
pop
and
rolb
xor
and
push
adc
or
mov
push
testb
mov
ror
in
jmp
aam
into
xchg
jb
push
jmp
bound
adc
mov
ljmp
enter
subb
andl
adcb
js
movsb
inc
or
push
popa
jmp
not
shr
loopne
insl
mov
ficompl
js
add
or
or
pop
add
jno
push
pusha
test
xor
lods
out
pusha
inc
insb
mov
add
cmp
scas
sarl
jnp
test
xchg
rorb
and
inc
pop
insb
scas
dec
dec
add
subl
and
adc
mov
cmp
shl
and
xor
mov
xchg
xchg
ljmp
adc
mov
pop
add
add
movaps
adc
scas
sbb
jo
xchg
inc
outsb
cwtl
les
mov
ja
add
insb
mov
lea
mul
bound
sub
xchg
cld
shl
push
add
sub
push
push
subb
push
mov
orb
pop
sub
loopne
mov
xchg
sti
mov
pop
xchg
mov
xlat
cmpsl
jmp
push
addb
lock
push
not
incl
les
mov
stc
in
loopne
jmp
push
push
adc
js
push
jbe
push
icebp
jmp
pop
mov
cmp
sub
xor
push
dec
cmp
outsb
adc
add
in
test
mov
adc
push
test
dec
stos
inc
and
push
imul
or
lcall
dec
lret
jmp
out
pop
jo
push
inc
divl
icebp
aam
out
and
jmp
aaa
decb
js
in
or
sub
jge
xchg
pop
and
aam
push
mov
cmp
inc
out
orl
es
or
mov
lret
jmp
add
lcall
mov
push
divl
loop
cmp
mov
sarb
movsl
adc
les
dec
mov
pusha
das
pop
jne
lods
ret
inc
xlat
mov
adc
adc
clc
out
popf
push
jae
test
popa
data16
cmp
call
pop
and
cld
std
pop
mov
jmp
mov
sub
push
dec
push
or
sbb
push
clc
mov
push
jb
int3
inc
xor
lret
sti
mov
mov
xor
jne
add
sub
popa
fidivrs
add
into
inc
inc
jmp
ret
xor
and
jge
adc
adc
adc
cmp
rolb
stos
je
mov
sti
movsb
cli
in
in
cmp
mov
pop
sbb
add
sub
mov
sahf
movsb
imul
adc
fcmovnb
scas
cltd
adc
fs
mov
adc
lods
cld
rorl
pop
and
std
pop
cmp
shl
or
dec
mov
arpl
orl
rcr
jmp
inc
addr16
pop
ret
push
shll
inc
adc
or
add
inc
add
icebp
and
and
pop
push
push
push
outsl
pop
shl
pusha
hlt
sub
inc
cmpsb
repnz
pop
xor
shr
lds
out
jns
dec
cmpsl
jle
add
mov
adc
inc
xchg
mov
ljmp
stc
and
sbbb
stc
pop
lret
jecxz
nop
xchg
add
lds
pop
sbb
out
and
mov
or
push
or
aaa
testl
push
push
xchg
ret
lods
das
or
or
mov
into
imul
add
pop
cld
mov
xchg
add
and
jp
je
pop
dec
lods
pushl
scas
inc
jbe
popa
mov
addr16
push
out
daa
inc
imul
or
pushf
adc
adc
iret
and
jmp
pop
or
in
scas
mov
in
in
xchg
jns
arpl
ficompl
rorl
addb
cwtl
push
cltd
bound
push
out
call
xchg
mov
inc
clc
js
pop
into
pop
mov
cmp
pop
addb
and
add
stos
lock
lds
aas
add
ret
fsub
imul
xchg
jae
pop
inc
jle
dec
nop
or
adc
stos
and
std
jo
mov
inc
leave
popa
pop
jp
dec
aam
add
orb
bound
outsl
push
movsl
shlb
dec
outsl
fstpt
sbb
adc
les
xor
add
xchg
js
out
jmp
jmp
sbb
cmp
and
and
filds
mov
add
fsubrs
push
push
xchg
stc
loope
inc
ret
xor
dec
xchg
add
mov
fstl
xor
pop
push
repnz
mov
ds
pop
inc
jg
pop
xor
and
pop
sub
in
loopne
je
rcr
push
in
or
mov
mov
jbe
fstps
icebp
and
push
pop
mov
xor
out
ficoms
orb
inc
into
or
test
sub
cmpsl
add
push
sbb
mov
gs
lods
shl
xchg
sub
mov
loope
outsl
fcmovnu
jl
pop
inc
or
jmp
pop
inc
imul
lods
xor
mov
mov
dec
stos
sbb
xchg
test
stos
subb
sub
jo
jmp
test
jbe
xor
add
add
inc
insb
mov
push
mov
push
jmp
fidivrs
mov
pop
sbbl
movsl
fistps
dec
mov
adc
mov
loopne
dec
push
addb
or
xor
add
scas
push
add
jmp
fistl
dec
ljmp
adc
rorb
aaa
push
addr16
mov
andb
xor
xchg
mov
push
sbb
adc
adc
mov
cmpsb
addb
dec
add
add
jle
bound
push
outsl
loopne
add
fistps
add
xchg
cmpsb
decb
fstl
sbb
inc
or
in
das
mov
add
sbb
testl
pop
jmp
les
pop
scas
sbb
inc
adc
pop
call
pop
xor
shll
call
pop
jmp
mov
outsb
xor
je
pusha
pusha
pop
icebp
ret
stc
das
inc
pop
and
jge
lods
jae
jmp
push
cmp
imul
js
rcrl
rclb
mov
sub
push
testl
and
and
jae
mov
mov
xchg
pop
xchg
jecxz
outsb
sub
mov
repnz
ficoms
push
lods
add
sub
inc
mov
scas
inc
inc
mov
clc
arpl
push
cld
sbb
cli
subb
ja
scas
jle
mov
mov
ret
jg
pop
in
stos
movsb
mov
fwait
sbb
mov
mov
leave
adc
and
loopne
out
adc
mov
js
popf
sbb
das
mov
xchg
sbb
and
mov
not
push
rcrl
and
pop
and
negl
cli
pop
sbb
mov
mov
pop
push
orb
lds
cli
cmpsl
push
xchg
in
pop
pop
add
sbb
cltd
jp
out
repnz
pop
jmp
iret
dec
icebp
xor
stc
lret
fcoml
das
mov
add
add
test
ret
or
adc
xor
mov
sbb
jno
or
sbb
popa
or
sti
and
mov
out
xor
xorb
sbbb
addb
les
push
ja
xor
and
mov
popf
int3
and
sbb
or
xor
leave
sub
scas
add
add
sbb
ficompl
add
cltd
jp
sbb
pushf
or
in
sbb
cld
and
gs
rolb
sbb
ljmp
addb
mov
or
or
rorl
sub
icebp
adc
in
adc
xor
jb
add
adc
and
or
mov
fcomps
pop
adcl
hlt
jp
xor
push
push
jns
push
or
dec
les
popf
or
sbb
sbb
and
shll
and
test
or
in
pop
inc
sarl
fcomp
popl
into
or
or
or
or
dec
adc
mov
or
adc
or
add
push
addl
push
inc
negl
xchg
inc
clc
jno
scas
or
loopne
adc
jl
xchg
push
sbb
or
add
xchg
add
push
add
addl
jne
push
sub
add
inc
add
lods
push
bound
xor
add
mov
pop
mov
dec
xchg
mov
push
sbb
ljmp
fwait
mov
push
or
or
pop
sbb
dec
xlat
roll
test
cmpsb
nop
popa
or
icebp
mov
inc
or
jnp
and
push
inc
stos
pop
popf
add
jo
sub
xor
cmpsl
and
sbb
sbb
in
imul
xlat
mov
pusha
jecxz
inc
fs
sbb
mov
lock
mov
test
cs
pusha
pushf
cld
call
out
xor
mov
xor
adc
inc
sub
jne
jmp
mov
aaa
mov
add
dec
dec
or
jne
mov
push
fiadds
sbb
mov
lock
lea
dec
cmp
xchg
nop
aad
rol
or
incb
jmp
jnp
add
adc
pop
sub
incl
add
and
xor
pop
orl
lcall
cld
pop
dec
les
cmpsl
test
mov
scas
sub
push
jmp
sbb
rcrl
subb
mov
mov
pop
lcall
sti
mov
or
or
jle
rcrb
insl
and
jmp
inc
ret
mov
sub
test
or
inc
cmp
das
push
jge
ljmp
int
push
or
pop
jle
imul
or
push
jmp
inc
or
rorb
and
and
pop
icebp
subb
cmp
mov
popf
inc
inc
or
mov
add
xor
sbb
ja
cmp
add
fidivs
test
enter
pop
and
adc
jnp
add
mov
add
push
inc
inc
pop
cli
rcl
push
xorl
stc
imul
add
stos
mov
add
push
mov
lahf
ret
push
sbb
mov
sub
and
add
sub
pop
jnp
subb
movsb
out
mov
out
jne
lea
jne
push
jle
fisubl
push
les
addl
adcb
gs
fs
and
add
aaa
aad
fstps
add
push
mov
add
jle
sar
or
mov
xor
neg
add
push
cmp
lret
jg
pop
sbb
test
xchg
jae
jnp
dec
adc
or
adc
orb
pop
pop
pop
loope
push
adc
stc
nop
mov
push
cmp
dec
negb
adc
lret
cli
jl
push
inc
push
pop
dec
pop
and
xchg
mov
bound
xor
and
stc
adc
movsl
pop
jg
out
or
inc
cwtl
mov
push
inc
loopne
mov
imul
into
jmp
sahf
xchg
xadd
movsb
fs
adc
add
mov
cwtl
popf
mov
int3
push
daa
xrelease
push
and
xor
dec
sbb
movsl
dec
fsubl
in
rcrb
cli
fdivr
add
cmovae
xchg
adc
mov
jg
lods
mov
movsb
mov
xor
scas
subl
in
popa
jnp
lret
adc
jmp
push
push
mov
cmp
xor
pop
mov
mov
push
ljmp
aad
push
and
jmp
out
daa
je
or
adc
repz
jo
xlat
push
addl
jmp
outsb
repnz
mov
scas
orb
call
and
push
loopne
cmp
jge
dec
aaa
jnp
inc
mov
jne
or
mov
xlat
adc
pop
out
daa
jnp
fsubl
jl
mov
loopne
sbb
dec
pop
push
pop
jmp
addb
das
lcall
mov
dec
scas
repnz
loopne
lock
mov
add
out
fidivrs
push
sub
mov
sbb
inc
push
pop
mov
call
addr16
xor
pop
neg
and
jl
mov
out
inc
out
insl
pop
stos
mov
out
jno
inc
movsb
push
add
adc
outsb
mov
enter
push
mov
mov
mov
fisubl
push
test
mov
inc
jge
sarl
jg
es
mov
jnp
daa
xchg
jae
or
lahf
dec
movsl
loopne
push
add
cmp
vpcmpgtd
cld
dec
lock
ja
std
stos
fs
mov
push
pop
inc
sub
cmp
ss
out
aad
xchg
inc
and
dec
in
cmc
dec
pop
mov
add
orb
stos
adc
shrl
push
mov
jns
add
add
sbb
add
aad
xor
dec
les
outsb
mov
dec
or
push
jo
sbb
scas
mov
xor
enter
jnp
fld
js
adc
sbb
pop
frstor
xchg
push
xchg
pusha
xor
lds
mov
jge
push
sub
add
push
add
inc
dec
subl
dec
sbb
mov
sbb
subps
xor
lret
pop
es
sub
js
dec
dec
pop
cli
adc
push
pop
push
mov
ficomps
cmp
adc
loopne
pop
add
push
testb
dec
push
in
and
xor
add
not
push
push
pop
pop
xchg
lcall
inc
fiadds
adc
adc
add
push
sbb
jno
shr
xchg
xor
out
jo
jb
cld
out
and
sub
cld
inc
out
jecxz
mov
or
jmp
out
adc
and
adc
jecxz
je
sarl
ret
stos
or
cmp
pop
in
jmp
xlat
cmp
xorb
or
pusha
mov
adc
cmp
dec
aad
pop
popf
sub
jmp
testb
add
xor
jno
and
and
add
fcomps
xor
sbb
cmp
jecxz
jns
imul
sbb
cmc
mov
or
push
and
out
jecxz
subb
leave
pusha
adc
push
xorl
dec
cwtl
pop
or
pop
xor
add
cs
ficoms
out
sub
mov
dec
add
xor
lds
jo
popf
xor
cmpsl
in
gs
or
adc
push
or
pop
negl
inc
ss
sub
jmp
push
mov
sti
inc
add
aad
ret
das
cltd
or
je
jbe
cmp
pop
add
pop
pop
sub
jge
dec
xor
sub
daa
mov
test
cld
ljmp
das
dec
add
sti
push
or
adc
mov
cmp
lods
out
sub
dec
and
ror
dec
add
push
cmp
out
add
jo
les
shrb
je
push
mov
inc
push
loopne
pop
adc
adc
dec
jp
clc
adc
mov
inc
sub
loop
not
bound
and
test
jp
push
mov
add
addr16
int3
inc
adc
addr16
sahf
dec
inc
clc
stos
add
mov
mov
lcall
xor
mov
sub
or
subl
adc
lock
shll
mov
or
orb
popf
inc
cmp
test
xor
inc
les
in
xchg
mov
mov
test
mov
push
shlb
imull
and
push
jl,pt
out
or
out
clc
cmp
add
push
je
out
or
fbstp
in
sbb
rol
push
push
push
in
push
std
or
sub
imul
push
pushf
and
cltd
outsb
lcall
rclb
xchg
gs
insl
push
adc
popa
ret
sarl
mov
pop
mov
je
ja
rorl
enter
inc
imul
pushf
nop
adc
xchg
out
dec
fmuls
ret
adcb
filds
xor
pop
sbb
mov
cmp
pop
out
sbb
dec
sbb
push
es
insb
mov
nop
leave
xorl
imul
add
add
mov
ljmp
fmuls
or
arpl
in
add
push
sbb
call
stos
cmp
fadds
add
pmaddwd
cmc
sbb
push
out
addr16
xchg
jb
shrb
std
out
das
fcomi
pop
nop
shrb
xchg
jne
ficoms
adc
js
xor
rcrl
push
pop
je
pop
or
xchg
insb
adc
and
jmp
mov
adc
xchg
add
sbb
cs
push
aad
orb
insb
sub
addr16
lret
jo
das
mov
rcrl
fsts
movsl
dec
add
or
loop
jg
xor
call
or
lret
dec
cmpsb
xchg
dec
pop
ret
cld
mov
sbb
fisubrl
xchg
and
cli
push
lods
and
mov
imul
sub
or
pop
add
add
jmp
div
inc
push
mov
test
dec
sub
ljmp
je
aaa
pop
pusha
xor
cli
inc
hlt
pop
rcrb
sbb
sbb
jle
sbb
dec
popa
add
or
pop
daa
cs
adc
lahf
push
add
push
xor
or
loope
lret
xchg
xor
lods
jbe
cmp
adc
cmc
pop
mov
leave
xor
test
loopne
sub
addb
mov
sbbb
repnz
and
push
lods
xor
lret
sahf
pop
mov
push
ret
hlt
sub
sub
sbb
push
popa
sub
fucomi
ds
cmp
pusha
imul
push
add
sub
loope
push
mov
pusha
das
lods
loopne
push
std
scas
popa
and
xchg
sar
sahf
dec
mov
push
mov
not
inc
cli
cmp
incl
andb
dec
cmp
or
jp
mov
inc
mov
gs
add
jp
push
lods
mov
out
sub
cmp
loope
dec
pop
loopne
sub
pop
xchg
ret
push
push
cmpsl
jno
daa
out
jecxz
adc
daa
or
push
inc
cmpb
std
push
and
cmp
add
pop
add
mov
push
mov
push
repz
aam
jno
jp
sub
mov
push
jne
icebp
movsb
mov
jmp
jg
test
pop
ja
sub
jg
and
ljmp
or
cmp
sbb
inc
call
pop
rcrb
dec
mov
jmp
jecxz
xor
rolb
test
and
pop
testb
jge
mov
dec
aaa
les
xor
cmc
and
movsb
rcl
shl
nop
das
cmp
add
dec
jle
add
pop
sbb
imul
pop
sub
jmp
jl
loop
push
jg
jl
jbe
loopne
popa
push
adc
or
jl
xor
adc
daa
aam
sbb
xchg
in
or
sbb
or
adc
flds
xor
adc
jp
jnp
stc
out
loope
push
imul
or
lret
in
inc
pop
ja
inc
and
sbb
or
xor
mov
pop
push
mov
or
mov
out
dec
mov
sub
mov
jne
pop
pop
pop
adc
mov
mov
lret
stos
sub
stc
push
cld
fldt
jl
pop
or
cmp
adc
xor
jno
mov
mov
shll
jae
int3
and
xor
cmp
jmp
ljmp
arpl
out
mov
jo
add
call
dec
pop
inc
sub
shrb
pop
outsb
mov
xchg
mov
sub
push
pusha
mov
mov
or
in
shrb
xor
lds
arpl
jno
cmp
push
push
pusha
fs
sub
outsl
mov
and
dec
add
cmp
cld
push
stos
jecxz
lahf
lret
ret
jns
jnp
push
shrb
dec
data16
or
imul
repnz
jmp
inc
inc
ret
fidivrs
rcrb
or
mov
lods
cmp
fistpl
roll
push
sar
rclb
std
and
ret
or
xor
ljmp
ss
lret
push
xor
mov
mov
out
rolb
dec
lret
pop
or
mov
and
imul
and
cwtl
call
xchg
mov
mov
enter
movsb
jmp
dec
dec
into
das
lock
repz
sar
call
dec
aam
inc
and
push
jnp
inc
adc
dec
sub
outsl
add
jns
pop
add
gs
repz
and
les
in
pop
pop
ret
or
je
pop
flds
repnz
push
movsb
ret
in
mov
dec
cmp
adc
sbb
sti
ret
pop
addr16
jecxz
push
ljmp
cmp
pop
repnz
mov
outsl
add
push
stos
pusha
mov
jmp
add
xor
adc
push
pop
mov
xchg
ljmp
add
nop
mov
jecxz
popa
sub
jp
clc
jmp
adc
stos
xor
cs
sbb
or
pusha
dec
mov
mov
pop
pop
push
xor
hlt
sbb
add
testl
cs
call
push
push
add
mov
xchg
ljmp
mov
pop
nop
in
add
sbb
shrl
ds
jmp
lods
dec
add
jb
shll
ret
cmp
push
or
dec
test
sahf
fs
inc
mov
mov
daa
jg
in
nop
fcoml
cld
lds
pop
repnz
or
adc
push
out
out
fs
xor
and
mov
add
in
mov
or
and
sbb
out
jmp
shl
filds
mov
es
sahf
loope
jb
xor
les
sbb
xorb
fisubrl
popa
adc
outsl
jmp
pop
push
push
cmpsb
scas
push
mov
jmp
mov
mov
push
mov
push
cmc
add
and
jmp
outsb
ret
xchg
inc
push
push
push
or
sbb
shrb
inc
inc
push
stc
cmpsl
test
es
filds
or
push
lcall
sub
jns
pusha
mov
jbe
xchg
dec
push
sub
adc
ret
lods
pop
pop
and
lea
ret
pop
push
push
shrb
std
push
movsb
pop
push
test
sbb
pop
fs
mov
cwtl
inc
xchg
jg
or
sbb
inc
add
shll
push
or
xorb
pop
loopne
cld
stc
xchg
add
mov
push
pop
repz
loope
adc
dec
jb
sub
pop
inc
addr16
out
sti
add
ret
jl
cs
sub
pop
cmc
inc
int3
cltd
nop
sub
aas
dec
sub
jno
and
fcompl
in
push
mov
push
pop
xchg
add
push
es
cmpsl
sbb
xchg
adc
xchg
inc
jmp
imul
pop
dec
subl
imul
add
ret
push
shlb
jmp
jo
jnp
cmp
enter
pushw
xchg
jmp
pop
neg
xchg
inc
ja
or
shl
xchg
outsb
dec
sbb
jnp
testl
and
push
mov
js
xchg
push
sub
pop
lea
out
dec
cmp
bound
inc
jns
add
out
add
aaa
mov
mov
sub
js
pop
mov
inc
lahf
and
popf
andb
out
repz
or
test
loop
push
sbb
sti
addb
fidivrl
push
xorb
addb
ror
fisubrl
mov
push
add
outsl
roll
dec
adc
ljmp
or
pop
jp
add
imul
sbb
movsb
pop
mov
mov
les
push
mov
mov
lods
fisubs
leave
jmp
sbb
je
add
mov
rolb
stos
dec
sarb
insl
sbb
or
insl
pop
or
ljmp
jb
add
xchg
imul
les
inc
push
inc
pop
mov
or
addr16
cmpb
add
inc
inc
or
cmp
sub
pop
in
icebp
dec
sub
jae
call
fsubs
push
int
xchg
stos
lock
jge
fs
addr16
jo
insb
in
dec
jl
cmpsb
xchg
fsubr
xor
push
out
adc
cmc
lcall
sbb
mov
and
pop
jnp
ss
inc
adc
pop
cltd
js
inc
jo
and
adc
not
cwtl
push
ficoms
into
dec
or
jmp
jae
dec
lea
sbb
xchg
aad
pop
mov
or
ret
xor
mov
aas
xchg
cwtl
test
in
mov
pop
pop
sub
scas
push
pusha
je
sarb
outsb
mov
insl
pop
push
jl
lcall
sub
and
enter
pop
inc
jmp
stc
lods
popa
or
xor
dec
gs
lret
inc
pop
orb
subb
in
mull
fldenv
je
loope
mov
imul
shr
cmc
xchg
push
iret
fadds
xor
pop
pushf
mov
and
std
lahf
sub
daa
pop
sub
imul
push
push
sbb
cs
loope
pop
lret
roll
add
es
mov
outsl
pop
jg
mov
or
packssdw
xor
insb
sbb
inc
jmp
into
stc
dec
fsts
jle
xchg
cmp
int
divl
mov
push
add
mov
repz
jg
and
mov
pop
clc
xchg
add
xor
sub
mov
pop
jmp
mov
pusha
sub
or
std
dec
js
mov
sbb
scas
inc
push
jmp
fwait
movsl
mov
add
pop
mov
cmp
add
stos
subl
loope
mov
xchg
pop
sub
pop
lcall
xchg
adc
aas
popf
setg
xor
jno
out
mov
add
les
mov
add
cld
add
out
sub
lahf
int
mov
js
mov
push
jp
add
orl
xor
or
mov
inc
sarb
pop
cs
lret
fwait
sub
pop
inc
mov
xchg
ds
sub
jns
and
inc
sbb
sbb
push
adc
repnz
mov
idivb
pop
sub
or
and
push
mov
xor
dec
sti
or
mov
incb
cwtl
mov
les
inc
mov
repz
jne
push
push
mov
xchg
enter
mov
lods
or
leave
jg
inc
sahf
jns
dec
push
clc
mov
loop
mov
ret
xchg
add
enter
js
and
push
test
in
xchg
xchg
add
add
out
inc
repz
mov
mov
pusha
xor
jle
adc
sub
add
xchg
inc
jg
and
loopne
mov
or
mov
add
push
jmp
sbb
add
add
add
sub
push
cld
adc
xchg
ljmp
adc
subl
xor
aam
push
pop
cmpsl
ljmp
adcb
mov
aas
insl
stos
mov
push
or
pop
or
add
jnp
lods
shll
pop
lahf
cld
sub
sub
shll
jo
pushf
dec
jp
fwait
adc
movsb
or
xchg
pushl
orl
fcmovnbe
jbe
lods
frstor
jns
leave
pushf
adc
push
lock
mov
shr
testl
inc
out
xchg
pop
or
shlb
inc
aas
dec
cmp
jns
jo
and
add
adc
push
jmp
jae
push
xor
repz
mov
ficomps
or
mov
faddl
stc
stos
leave
pop
cld
dec
and
xchg
pop
test
jne
je
dec
mov
jmp
and
mov
popf
leave
roll
inc
iret
pop
scas
pusha
sbb
pop
xchg
jnp
pop
insb
xor
lahf
fistpl
test
scas
add
pop
pop
push
mov
rorb
es
aas
loope
incl
jae
adcb
inc
add
jmp
lret
ret
rcrb
stc
ljmp
fbld
std
push
mov
repnz
dec
repnz
xchg
sub
adcb
fldl
cwtl
fisttps
pop
sub
call
jne
nop
lock
cld
std
in
in
mov
dec
push
clc
or
invlpga
adc
lcall
xor
push
cld
testl
divb
out
xor
sub
leave
mov
sbb
jo
jne
iret
xchg
add
sti
mov
divl
sub
dec
fimuls
pop
mov
cmc
out
mov
sarb
mov
or
xchg
cmp
or
push
sub
fsubr
fidivs
push
pop
arpl
add
aad
lds
inc
push
mov
inc
jmp
adc
jmp
sbb
iret
popa
sub
sbb
lds
sub
sbbl
roll
push
dec
stos
mov
or
xor
int
repz
test
das
stc
mov
sarl
icebp
dec
push
sbb
imul
mov
ljmp
jle
incb
jno
pop
testb
cmpsb
jg
add
push
add
adcl
pop
mov
cmp
push
xor
lret
mov
or
clc
sub
sti
adc
or
les
or
in
adc
push
mov
xor
jmp
mov
jp
ret
push
lods
mov
adc
jnp
popl
add
pop
pop
inc
es
xor
adc
or
aas
dec
xor
mov
fldl
stc
mov
aas
in
addb
outsb
aam
mov
ljmp
rcl
pop
ljmp
jno
and
lret
mov
js,pn
sahf
dec
aaa
xor
dec
mov
dec
out
sbb
push
adc
test
jmp
jg
js
sub
pop
negl
mov
xor
lahf
out
lods
jle
dec
mov
inc
mov
mov
imul
add
andb
dec
pushf
push
or
push
das
shrb
sub
in
sbb
push
mov
add
push
sub
jg
push
fstl
sub
jl
scas
push
fwait
or
fstl
sub
hlt
jmp
clc
mov
lods
jle
jae
jp
mov
cmc
pop
add
arpl
add
inc
pusha
bound
cmp
add
mov
mov
mov
loopne
sbb
das
pop
push
and
pop
push
sub
push
shl
ljmp
scas
mov
dec
xchg
sbb
adc
or
mov
ss
dec
inc
pusha
push
push
std
pop
lcall
mov
pop
loop
shl
xchg
sub
jmp
add
sbb
hlt
rcrl
mov
fcmovu
lock
cwtl
adc
mov
in
pop
out
js
out
or
xlat
std
fisubrl
and
jb
mov
aas
lret
nop
mov
dec
outsl
movsb
sbb
push
mov
sbb
aas
fcmovu
adcb
dec
nop
or
jmp
test
scas
jno
inc
xor
add
fists
pusha
sahf
js
dec
imul
pop
pop
les
sarb
pop
dec
ret
push
inc
xor
sub
cmp
mov
push
mov
das
faddl
add
mov
dec
jo
push
adc
inc
aaa
rorb
jmp
fucomp
inc
std
xchg
in
sub
push
sub
xchg
dec
push
pop
and
mov
inc
loope
aad
shlb
push
dec
popa
dec
inc
sub
test
mov
iret
dec
add
xor
icebp
sti
adcl
sub
xor
adcl
add
jne
bound
dec
not
inc
mov
jl
or
icebp
add
movsb
daa
adc
into
jmp
pop
lds
xchg
out
fadd
cmc
iret
and
pop
mov
popa
inc
ret
insb
and
fildll
or
aas
jp
dec
mov
out
adc
jne
xchg
cmc
fsubl
nop
and
leave
jae
xchg
test
jmp
sub
ret
pop
scas
add
push
rcrl
mull
xor
jmp
add
pop
shr
iret
sbb
pusha
push
mov
or
in
clc
push
mov
xor
mov
xor
bound
xchg
push
jmp
cs
loop
int3
or
sub
push
jle
in
nop
push
xchg
fldz
rolb
pop
jecxz
dec
jmp
sub
or
or
cmc
out
xor
lods
into
pop
mov
and
cmp
int3
cmc
ljmp
and
arpl
mov
push
outsl
push
loope
mov
out
push
in
sti
sub
ret
shlb
add
insl
mov
mov
mov
pop
xor
pop
fimull
mov
xchg
inc
fwait
jnp
loop
sub
push
dec
cmp
add
sbb
pop
adc
aaa
add
cmp
push
jmp
push
cmp
rorb
add
xor
or
adc
fnstsw
sbb
jne
inc
repnz
xlat
mov
clc
adc
push
add
sbb
shll
dec
push
push
jmp
cmp
out
push
mov
ljmp
jg
pop
int3
cmc
xor
repz
mov
je
inc
xlat
in
sbb
test
mov
sbb
dec
in
jl
into
popa
loopne
and
fcoml
cli
dec
loopne
jnp
clc
xor
pop
push
dec
popf
enter
pop
clc
and
sbb
dec
sub
aad
inc
aam
add
pop
mov
inc
xchg
adc
jmp
stc
push
sub
loope
push
jbe
or
sub
sub
aam
jno
dec
xchg
sbb
rorb
test
add
xor
and
push
sub
and
push
dec
and
mov
pop
iret
fs
loopne
mov
sub
ljmp
lods
jb
pop
popa
push
inc
dec
or
jmp
push
or
sub
dec
out
imul
xchg
mov
fmull
andl
std
and
xchg
sub
fsubrl
jmp
pop
cld
sub
mov
clc
test
sti
cmp
add
rcrl
add
insb
ja
and
and
orb
clc
inc
xor
mov
mov
pop
jmp
fcoms
and
sti
orl
or
pop
scas
xor
xor
pop
or
pop
lcall
ret
inc
sbb
and
decl
sub
add
mov
rorb
add
pop
and
dec
imul
les
jmp
ret
xchg
std
gs
enter
mov
daa
sub
xlat
fs
dec
mov
fidivrl
or
js
inc
popf
fadd
shlb
pop
mov
imul
mov
inc
mov
cld
dec
push
sub
gs
push
or
jp
pop
xchg
bound
cmc
adc
xchg
les
pop
fdivr
mov
or
or
adc
adc
ret
add
or
pop
neg
dec
andb
push
jmp
xchg
in
cwtl
lods
outsb
mov
jmp
movsb
lods
sbb
inc
lret
pop
jmp
int3
mov
pop
imul
notl
jle
mov
mov
and
add
adc
dec
xlat
xlat
dec
imul
xchg
push
and
mov
and
or
sbb
push
ljmp
xor
gs
or
inc
rcrl
mov
les
enter
xor
lds
mov
mov
ret
mov
jg
insb
test
popl
in
lret
pop
je
cli
repnz
or
lahf
data16
pop
cmpb
jle
sub
and
bound
ficompl
pop
roll
sub
add
dec
xlat
adc
jmp
pop
push
push
or
push
jmp
pop
into
in
and
fcmovnbe
std
aam
push
push
loope
pop
add
add
icebp
jne
jbe
mov
pop
mov
stos
fsubl
aad
pushf
add
loopne
movsbl
pop
and
cmp
add
push
lods
adc
xchg
sub
sbb
sub
das
sbb
aas
or
push
dec
out
adc
cmpsl
add
out
push
int3
incl
sub
repz
push
mov
add
xor
std
xchg
std
pop
stc
in
mov
test
mov
fdivs
or
in
jbe
iret
xchg
ljmp
pop
pop
pop
adc
add
jle
adc
pusha
dec
in
add
aaa
jmp
test
xor
mov
add
out
dec
adc
loopne
add
testb
adc
cmpsl
cli
pop
sti
and
jnp
cmp
add
pusha
pop
addr16
xchg
clc
sub
pop
push
dec
int3
das
fisttpll
jo
pop
jge
test
jmp
pop
mov
sbb
cmp
jb
fiaddl
jns
or
jmp
jp
out
xchg
lock
add
and
dec
pusha
mov
imul
pop
lcall
jnp
add
bnd
repz
or
dec
and
bound
add
add
iret
adc
and
mov
cmp
cld
popa
xchg
rorb
pop
pop
out
jns
add
cmpsl
es
mov
adc
aas
in
shll
into
mov
dec
pop
mov
shll
mov
inc
and
mov
sbb
cli
cltd
repz
bound
div
sub
mov
dec
clc
xchg
popf
add
mov
je
ljmp
or
ss
sub
add
pop
jmp
push
add
pusha
jmp
fcoml
sbb
jns
mov
xor
outsb
and
in
mov
imul
sub
mov
cwtl
lret
pop
and
add
add
insl
xlat
xor
pop
pop
mov
mov
mov
push
push
adc
push
xchg
out
lods
mov
ret
sbb
sbb
dec
push
pop
shr
shl
les
sub
fs
std
nop
out
test
push
push
or
xor
cmpsb
cmp
jb
xchg
mov
fs
mov
aad
or
or
cmpb
sub
scas
insl
nop
popf
add
popa
notb
pop
repnz
inc
mov
jg
aas
add
in
add
out
or
std
ret
or
div
mov
cltd
or
jmp
mov
repz
adcl
mov
pop
jmp
xlat
ud2
iret
mov
rclb
xchg
and
mov
sbb
int3
add
mov
xlat
or
lret
shlb
sub
in
ja
jne
adc
andl
lds
sahf
mov
push
push
fnstenvs
mov
ja
mov
push
xchg
jo
xchg
fwait
and
push
and
std
jp
orl
sub
mov
outsb
add
xor
lret
and
shrb
push
test
jmp
pop
xchg
daa
sti
mov
and
mov
cmpsl
rcll
mov
push
jmp
mov
fs
les
cli
xorb
insl
add
in
adc
pop
jge
in
testb
xchg
leave
inc
sbb
ret
out
rsqrtps
js
cmc
push
mov
cmp
movsb
into
xor
mov
mov
dec
adc
dec
pusha
lcall
test
fisttps
dec
push
adc
add
mov
sub
fisubrl
les
sbb
pusha
cmp
mov
std
scas
test
mov
push
call
xor
add
push
cmp
loopne
push
imul
fwait
imul
aas
cmc
add
bound
dec
icebp
inc
test
dec
cld
in
orb
pop
lods
add
out
dec
push
push
mov
outsl
mov
sub
jmp
inc
hlt
and
lahf
jl
js
int3
lahf
fidivs
cmp
pop
fs
stos
daa
sub
popf
push
push
mov
sub
addr16
call
fistpl
ja
int
jnp
or
ret
push
lret
ret
push
nop
sbb
lds
dec
stos
cmc
lret
cmpsb
dec
push
inc
ds
adcb
cmc
cmp
pop
imul
loop
rcrl
mov
adc
addr16
mov
mov
shl
int3
jns
repz
cmpsb
add
fsubr
mov
pop
and
jbe
loop
pusha
int3
call
jmp
loop
inc
xchg
push
jmp
push
addr16
jnp
daa
mov
enter
mov
sarl
scas
pop
repz
or
jmp
xchg
xchg
pop
scas
mov
daa
jecxz
mov
or
sub
add
daa
xchg
shl
es
fildl
scas
cmp
xchg
sbb
mov
not
sar
jne
mov
adc
shrl
xor
and
loop
ret
adc
cltd
add
sub
sarl
cld
or
pop
mov
xorl
mov
jmp
adc
dec
xor
xchg
add
ljmp
adc
add
xor
out
mov
xlat
push
push
pop
mov
xor
aaa
das
adc
or
pop
adc
pop
ret
test
pop
shl
lock
jno
mov
jle
jno
sub
sub
xor
push
pop
sub
push
lds
fisttpl
push
aas
and
icebp
pop
cmc
cmp
adc
push
adc
cltd
or
adc
test
int3
xchg
pop
push
cwtl
adc
clc
incb
jo
mov
and
fucomi
xor
inc
sbb
dec
and
mov
or
pop
loop
adcb
ficomps
fstl
call
cmp
cli
addr16
xor
pop
push
jmp
push
dec
mov
adc
stc
repz
fs
ljmp
in
icebp
aas
hlt
and
pop
imul
das
inc
push
out
sbb
push
xchg
sbb
or
stc
cmpsl
insl
fcomip
jmp
inc
cs
push
sub
fidivs
cs
repz
aaa
ret
aas
and
jmp
pusha
mov
jle
mov
fs
sbb
mov
pop
neg
pop
add
pop
bnd
loopne
lods
and
jle
mov
push
scas
cwtl
jp
and
movsb
jp
add
fcmovbe
clc
lahf
push
sbb
adc
add
dec
cmpsb
jp
lock
pop
imul
inc
jmp
mov
and
jg
mov
sbb
mov
jae
test
sahf
adc
icebp
jmpw
loope
mov
lcall
mov
rolb
nop
push
sbb
inc
add
push
inc
push
mov
andb
xor
add
ja
push
pop
jb
fcoml
outsb
jmp
mov
or
icebp
jg
aad
xchg
out
cmc
inc
bound
mov
movsb
jmp
cmp
pop
je
add
dec
cmp
mov
mov
sub
add
sub
pop
es
and
mov
sub
push
or
jnp
iret
addl
dec
push
push
add
aaa
pop
push
xor
rclb
dec
shrl
shrb
in
or
int3
in
add
loopne
xchg
pusha
lahf
adcb
incl
pop
mov
repz
inc
inc
mov
call
push
and
push
rol
adc
mov
movsb
mov
es
rcrb
arpl
cltd
sub
push
rolb
dec
mov
push
sbb
sub
xor
das
or
mov
or
and
push
cs
daa
repnz
cmp
lahf
lret
decb
dec
imul
iret
cmp
popf
dec
subl
aad
loope
ret
pop
add
es
jbe
push
push
xor
pop
mov
mov
pop
dec
not
addb
in
mov
or
repz
out
fdivs
aas
dec
lds
mov
mov
fs
pop
dec
xor
in
jmp
mov
xor
jne
jg
sbb
lods
leave
inc
or
sub
fnstcw
or
jb
loop
dec
daa
sti
js
aad
leave
sbb
or
daa
shrb
push
out
addb
or
pop
fwait
sbb
pop
jno
add
neg
aam
cmp
or
fcoml
sbb
xor
push
jmp
fdivp
push
or
mov
pusha
dec
scas
inc
and
push
stos
ficoml
inc
cs
xor
mov
add
jno
out
cmp
adcb
and
sbb
push
dec
sbb
jle
dec
clc
into
dec
xchg
shrb
jle
dec
jbe
stc
and
or
mov
adc
popl
shll
cmp
ror
mov
jmp
push
cltd
addr16
ret
dec
sub
les
ss
cmp
add
lretw
sub
pop
incl
mov
fidivs
daa
inc
adc
rol
inc
enter
shlb
popf
lret
push
xor
adc
mov
movsb
add
inc
pop
lds
shl
decl
pop
push
pop
ror
xchg
aas
out
ret
sub
imul
xchg
pusha
outsl
cmp
into
dec
not
rclb
pop
in
shll
sbb
sub
push
loope
sub
and
fwait
sub
push
or
enter
mov
jmp
push
add
fiaddl
pop
jmp
xlat
out
or
xchg
ret
push
pop
mov
xor
lcall
in
and
push
cmpsl
fisubrs
add
xor
sub
cmp
andb
icebp
adc
push
cmp
jne
push
in
stc
jnp
sbb
js
stos
cmp
mov
fisubrl
mov
mov
movsl
mov
sub
mov
iret
sbb
push
xor
or
cltd
test
jecxz
insl
cmc
cmp
subb
lret
xchg
hlt
lea
notl
cmc
xchg
or
mov
mov
or
call
mov
ja
ret
sub
aad
cmp
inc
push
test
js
stos
add
pop
pop
xchg
xchg
and
xchg
add
xor
xchg
mov
ja
pop
mov
in
add
not
inc
sub
sbb
sub
and
adc
add
fcomip
andb
mov
push
jge
test
mov
loopne
std
or
sub
push
mov
jne
sbb
aas
or
inc
loop
xadd
cmp
jo
jmp
mov
add
add
idivl
or
xchg
xchg
popa
cld
lahf
loop
xorb
pop
jge
xor
sbb
stc
xchg
das
test
add
adc
lea
xor
push
popl
clc
sbb
add
addb
cli
mov
in
adc
repnz
adcb
ret
pop
rol
fwait
pop
mov
cmp
push
push
sub
sbb
cmp
or
add
push
dec
pop
mov
pop
or
add
xor
repnz
not
jb
pusha
ficoml
ljmp
cmpsb
sbb
push
pop
mov
out
push
ds
jb
adc
mov
jo
xchg
jle
inc
dec
and
popf
or
idivb
fcomps
push
dec
pop
clc
adc
shr
movl
jo
mov
sub
lock
pop
dec
or
test
pop
data16
sub
mov
rcrl
cltd
adc
or
ss
hlt
pop
sbb
add
xchg
jmp
pop
jg
imul
jmp
out
ret
jg
addl
inc
inc
or
xor
into
sub
fldl
add
popa
push
add
daa
xchg
jae
jb
mov
leave
jmp
insl
inc
push
add
std
dec
add
enter
add
cwtl
add
sub
mov
loopne
xchg
cmpsl
ret
push
lods
ds
pop
pop
js
adcl
int3
dec
sub
out
cmp
jmp
sub
sbb
add
jecxz
and
adc
dec
pop
fldt
inc
jmp
push
push
push
push
pop
jns
inc
repz
pop
adc
test
cwtl
mov
inc
or
pushf
lcall
xchg
lea
mov
std
shr
bound
adc
daa
add
lret
add
js
in
repz
movsl
push
mov
pop
push
in
imul
sbb
mov
jp
xor
push
adc
inc
xchg
add
mov
imul
push
xor
pusha
daa
repz
sbb
outsl
call
sub
push
das
lahf
cmpsl
lret
push
movsb
and
or
sbb
mov
jns
sub
lods
inc
in
mov
out
outsb
mov
clc
rcrl
pop
push
ficoms
fdivs
xor
rolb
lods
push
les
fisttps
push
scas
mov
add
popa
lret
pop
adc
add
xor
pop
pop
push
testl
mov
push
sub
gs
nop
enter
add
sti
xor
or
inc
fidivl
push
orl
cmp
pop
and
push
fsubr
mov
mov
fs
scas
dec
sbb
jp
or
sbb
popa
insl
sti
ret
mov
sub
push
inc
pop
mov
jle
add
in
jmp
bound
mov
adc
fidivl
jae
push
xchg
or
mov
fbld
loop
xlat
repz
in
add
movsl
inc
stc
aas
sbbb
sub
jg
iret
mov
add
xchg
push
adc
inc
inc
sub
insl
inc
gs
int
push
fidivrl
and
notl
pop
adc
inc
mov
xlat
xchg
cmpb
jae
xchg
jo
daa
xor
popfw
pop
mov
and
mov
fadds
adc
sub
cmpsl
mov
xchg
dec
pop
dec
and
loopne
testl
in
xor
clc
out
push
xor
mov
inc
or
pop
jns
pop
add
jl
inc
push
loopne
cld
jne
jmp
lahf
mov
cs
and
jmp
aaa
jp
lds
jmp
scas
cmp
aam
push
ficoms
fnstsw
sub
push
pop
sub
inc
test
sub
mov
dec
xor
lds
add
xor
mov
push
pushf
shl
cld
xchg
jnp
test
out
cwtl
out
or
pop
lahf
jmp
pop
mov
daa
pop
mov
and
mov
mov
and
sub
jecxz,pn
daa
add
jae
jno
or
jmp
mov
inc
or
mov
lret
push
add
stc
push
aas
lods
fnstcw
pop
sarb
xor
into
mov
jne
pop
movsb
mov
pop
fcomp
sahf
scas
je
vminpd
leave
dec
mov
inc
jle
sub
add
push
inc
sbb
int3
pop
daa
cmp
fistl
pop
cmp
or
daa
inc
mov
sti
dec
or
shr
mov
xor
sbb
push
xchg
pop
add
sub
sbb
pop
cmp
push
leave
push
pushl
imul
dec
sbb
ds
adc
imul
or
jns
jne
insb
dec
orl
mov
push
adc
shlb
subb
adc
pop
stos
adc
and
repnz
adcb
dec
pop
ret
dec
adcb
jmp
lcall
xor
push
js
mov
and
jbe
or
aad
xchg
and
repz
insb
movsl
aad
pop
inc
in
cmp
in
outsb
scas
dec
jno
bound
or
adc
outsl
fdivrs
push
add
adc
mov
mov
leave
sbb
or
cmpsl
inc
rclb
or
daa
push
movsb
push
jb
mov
inc
imulb
sbb
pop
jmp
mov
jg
sahf
outsl
jbe
sub
add
xchg
jmp
xchg
sar
popa
adc
inc
or
inc
xchg
or
out
pop
xchg
push
push
jmp
lret
imul
push
ret
inc
add
test
push
dec
sub
cmp
nop
les
cmp
cmp
jg
and
cmpsl
or
push
testl
sbb
loopne
and
popf
rolb
arpl
dec
mov
nop
and
push
jmp
add
in
int3
adc
pop
aaa
jmp
loopne
push
push
inc
or
mov
xor
sti
dec
inc
lods
inc
jmp
dec
push
dec
test
pop
test
pop
ret
push
rcrl
imul
jg
sub
mov
xor
cmp
int3
cli
fcomps
and
add
dec
stc
adc
jmp
mov
lods
push
push
add
roll
cmc
add
out
cli
std
push
pop
loopne
push
push
or
mov
cmc
dec
sub
movsb
push
sarl
pop
ret
js
js
jno
imul
ficoml
jne
inc
std
pop
xchg
xorb
in
imul
mull
jne
cmp
xlat
sbb
add
rcll
xor
inc
call
jmp
adc
iret
jp
movsl
rol
inc
jl
gs
loop
outsl
pop
add
sub
daa
adc
inc
jg
jno
rcrl
icebp
pop
rcll
cmpb
test
js
mov
xor
push
ficoms
xchg
scas
fld1
rcll
iret
cld
pop
adc
insb
sub
movsl
dec
pusha
lods
mov
loopne
dec
stos
lcall
rclb
xor
dec
cmpb
iret
ret
outsl
jmp
add
mov
hlt
rorb
adc
fildl
subl
inc
lcall
mov
test
repnz
push
dec
sahf
cmp
addb
cmp
fs
pop
cmp
jb
call
pop
insl
jl
aad
mov
sbb
sub
push
add
scas
jmp
sarb
add
decl
ffree
or
fs
xchg
sbb
sub
mov
cmp
pop
xchg
shl
add
push
outsb
push
subl
jo
add
fadds
mov
push
repnz
mov
in
lea
add
push
lret
aam
or
mov
into
dec
push
loope
cld
xor
jmp
int
pop
xor
mov
pop
add
push
push
cmp
sub
ja
push
jo
mov
add
sub
sbb
movups
aas
mov
pop
lds
jmp
stc
or
lmsw
jecxz
jle
jb
andl
push
jo
dec
inc
imul
idivl
lcall
loopne
jl
fsubs
push
push
imull
iret
lahf
pop
lods
xor
push
sti
and
jnp
or
mov
xor
xchg
sbb
jle
shl
xlat
in
adc
mov
imul
or
xchg
sub
adc
fadds
repnz
fwait
in
dec
leave
loopne
testb
jmp
add
fbstp
je
fdivl
inc
shll
ret
lret
sub
mov
ljmp
out
and
cmc
or
in
jne
cmc
mov
mov
dec
call
push
cmpsb
sbb
inc
xor
and
pop
add
xchg
inc
and
or
sub
adc
inc
mov
pop
fstl
jmp
mov
dec
ljmp
jae
out
stos
mov
pop
push
cmp
rclb
xor
hlt
sub
sti
xor
push
pop
pop
aad
rol
lcall
jmp
adc
cwtl
jp
sbb
inc
xor
cmp
leave
psllw
subl
inc
in
dec
sbb
mov
pop
add
ret
jns
aad
sbb
jmp
and
sbb
ret
dec
mov
fs
push
xchg
cmovae
fs
frstor
clc
sbb
mov
dec
and
sbb
dec
test
or
push
je
add
jl
aaa
xor
std
mov
inc
mov
cwtl
add
add
mov
xchg
in
cmp
or
bound
int3
push
into
in
xchg
outsb
fwait
dec
sbb
xor
out
rorb
sti
adc
loope
pop
out
subb
sub
jb
xchg
iret
not
and
in
fnstenv
add
dec
outsb
inc
cltd
movsb
out
xchg
cmp
xchg
mov
sub
mov
dec
orb
imul
pop
cmp
data16
bound
xor
inc
pop
inc
insl
push
scas
scas
xor
stos
cld
imul
push
xchg
mov
push
popa
cwtl
std
lea
jmp
lret
idivb
sub
jmp
add
push
mov
pushf
or
add
pop
dec
shr
adc
pop
add
fsts
mov
mov
dec
dec
out
inc
fs
inc
mov
xor
popa
add
mov
pop
sbb
inc
inc
fsub
xor
cld
sub
clc
sub
stos
iret
jnp
fdivrl
pop
jmp
push
push
inc
jmp
test
lds
les
in
insl
cmp
icebp
sbb
sahf
lret
sub
jne
xor
mov
cmp
xchg
lock
cwtl
push
ja
sbb
pop
and
cmc
out
jns
cwtl
mov
sar
adc
leave
add
pop
add
push
stos
sbb
fstps
jg
push
or
bound
cmp
sbb
loopne
andb
xchg
or
mov
stc
sub
daa
int3
insb
xchg
rclb
or
push
inc
adc
adc
jle
bound
outsl
lds
adc
cs
adc
push
cmp
fisttpll
sti
sbb
jns
out
xor
jmp
add
or
pop
lcall
cmpsl
mov
or
add
mov
sbb
jmp
inc
pop
shrl
mov
cld
cltd
sbb
into
sarb
xor
push
mov
inc
in
pop
test
or
or
add
mov
fucomp
xor
iret
mov
xor
pusha
xor
jo
mov
push
pop
and
add
jne
outsb
sbbl
xor
dec
jp
push
jge
dec
add
pusha
jle
jbe
xor
pop
or
movsl
add
dec
push
jmp
and
xchg
dec
test
ljmp
push
daa
cld
std
adc
adc
xchg
dec
rol
dec
add
cmp
aas
mov
cmc
sbb
add
daa
test
jae
sub
das
outsb
xor
or
in
push
pop
les
aam
add
out
dec
test
sbb
popa
sti
jmp
nop
push
cmp
ljmp
hlt
or
pop
jbe
in
mov
addr16
imul
xor
mov
jmp
pop
call
or
sub
icebp
cwtl
xchg
shrl
adcb
jecxz
call
adc
xchg
scas
jmp
dec
inc
cmp
fs
push
ss
sub
ljmp
clc
jge
cltd
stos
pop
iret
shrb
adc
mov
jne
cmp
testl
push
lcall
jle
jecxz
rcl
pop
das
xchg
sti
movsl
or
loop
sbb
push
pop
add
jp
cld
imul
push
mov
lods
cmpl
je
mov
jmp
mov
jo
inc
in
cmp
lcall
and
insb
cmp
mov
sub
inc
jno
test
sub
ja
or
iret
mov
dec
sub
sub
mov
jne
jmp
add
add
jmp
ljmp
dec
cmp
ljmp
or
pop
cli
fucomip
js
add
in
mov
and
and
clc
push
sub
adc
jmp
pop
out
ljmp
or
stc
and
dec
imul
addps
mov
data16
rcll
adc
lret
jo
add
aaa
leave
pop
fmuls
adc
inc
lret
icebp
inc
or
sub
jb
cs
mull
mov
cltd
pusha
clc
mov
popa
or
or
mov
es
lcall
sub
das
daa
lret
ja
mov
sub
call
sub
sub
sbb
mov
add
mov
jmp
dec
mov
xchg
lahf
mov
xchg
add
dec
stc
out
sub
push
cwtl
xor
shrb
dec
jmp
cmp
movsb
addr16
push
lock
xchg
sbbb
fldenv
dec
mov
xchg
fnsave
mov
lcall
fmulp
icebp
jge
push
and
push
inc
shll
adc
arpl
repnz
sub
sub
add
pop
mov
and
pop
out
sbb
in
sahf
es
xchg
inc
mov
fmull
mov
inc
fsts
enter
dec
fsubrs
jnp
in
xor
xor
push
push
das
add
movsb
sbb
icebp
into
add
lock
testl
inc
inc
iret
outsl
notb
pop
lock
jns
aad
fstp
and
call
flds
push
mov
sbb
ss
not
push
loope
cmpsl
or
add
cmp
jmp
add
inc
push
cld
js
es
xchg
add
jmp
fstpt
push
add
cld
lret
dec
and
fiaddl
test
in
in
mov
sbb
aam
jb
add
and
cmpsb
jmp
sub
pop
push
xor
cmpb
fisttpll
test
xor
mov
aam
test
mov
int
cmp
push
cld
and
jecxz
sarb
inc
sbb
cmp
pusha
pusha
jmp
loope
mov
and
adc
cmp
and
cmp
add
clc
sub
das
add
mov
notl
rorb
pop
sub
push
fidivl
sub
add
ds
out
pop
adc
inc
sbbl
jnp
xlat
test
addb
sbb
add
dec
sub
lret
or
add
jecxz
aas
adc
movb
jne
inc
shl
inc
int
add
jae
sbb
dec
lret
jmp
cmp
mov
out
cmpb
shll
push
rorb
jo
mov
lea
test
push
pop
push
mov
pop
add
cmp
push
or
dec
push
mov
xor
test
fiadds
pop
cltd
mov
rcll
pop
sub
pop
hlt
mov
push
and
jmp
xor
adc
test
adc
mov
jmp
fwait
dec
cld
xor
mov
rcrb
fstps
push
mov
push
dec
mov
loopne
ret
jp
adc
je
or
aam
cli
and
cmpb
fisubs
pop
push
insb
je
push
xchg
add
out
pop
pop
imul
or
fcomps
xor
pop
jae
lret
pop
dec
aas
or
popa
test
fidivrl
gs
jae
xchg
sbb
or
and
ficoml
sbb
pushf
dec
xchg
loope
aam
mov
xchg
dec
cmc
data16
imul
jnp
push
push
add
and
jmp
mov
fiadds
sbb
dec
popa
out
jge
cltd
jae
loop
testl
int
orb
aas
or
push
orl
push
adc
loop
xchg
stos
jno
jmp
mov
rcrb
inc
sub
add
sub
not
sub
add
sbb
cwtl
inc
pop
rclb
sbb
addb
jmp
loopne
mov
jp
inc
xchg
add
or
mov
in
jp
jbe
jns
cmc
or
sub
cmp
jnp
sbb
jmp
mov
sti
push
and
dec
lds
jmp
sahf
mov
enter
lret
stc
leave
push
push
push
pop
lods
mov
inc
push
sbb
outsb
cmc
sarb
pop
push
xor
fisttps
pop
imul
sbb
pop
fists
js
mov
test
push
int
cmp
or
ss
out
roll
fstps
testb
add
addb
insl
pop
leave
add
pop
and
push
push
cwtl
lea
aam
inc
sub
cmp
jg
sub
idivl
ret
lret
dec
ljmp
daa
cmp
gs
sarb
enter
std
mov
ljmp
dec
es
leave
mov
sub
and
lret
adc
cli
fbld
clc
pop
adc
daa
sub
insb
pop
mov
fcomip
add
jbe
inc
jne
js
insl
gs
movsb
test
loopne
dec
lahf
loop
ja
xchg
enter
jg
dec
in
inc
mov
push
movsb
adcl
sub
adc
pop
repnz
or
dec
adc
cmpsl
mov
and
add
inc
mov
stos
mov
adc
pop
pop
inc
adc
daa
or
loope
cmp
push
jmp
push
pushf
imul
xlat
xorb
add
push
jmp
mov
popf
stos
mov
movsl
sub
xchg
add
inc
dec
add
ljmp
daa
popl
or
xchg
push
popf
push
jmp
rorl
mov
xchg
pusha
mov
sub
cmp
adc
stos
je
inc
mov
push
or
aas
pop
lods
aas
es
fs
ljmp
dec
jmp
jge
imul
bsf
dec
shr
xchg
sbb
loop
popl
adc
jl
dec
in
outsl
adc
cld
inc
pop
ljmp
mov
mov
or
or
inc
xor
or
adc
dec
ljmp
pop
repz
pop
int
cmp
pop
test
xchg
loop
jp
mov
pop
push
push
mov
add
or
jns
xor
repz
add
jmp
lods
push
pop
cmp
cwtl
mov
mov
into
add
sub
fld
pop
mov
mov
xor
sbb
sub
out
lds
adc
sbb
mov
or
add
fwait
cmp
ds
pop
pop
pop
inc
leave
sti
cmp
rorl
ds
das
lea
js
in
ret
or
in
sbb
pop
lret
fdivl
add
lret
je
sbb
test
stos
pop
push
pop
notl
push
mov
jl
xchg
xorb
arpl
mov
inc
xchg
sub
xor
cli
push
cs
out
movsb
push
mov
inc
xchg
inc
cmp
xchg
jle
pop
aas
pusha
jg
adc
dec
sub
loopne
adc
or
sub
adc
arpl
push
incl
jb
sub
lahf
adc
inc
jne
jmp
dec
add
clc
rorb
test
push
pop
popa
mov
jb
inc
mov
lret
scas
pushf
bound
push
je
sarb
mov
dec
pop
dec
inc
int
adc
mov
push
test
lret
aad
and
dec
pop
fildl
pop
cmp
mul
jae
cmp
clc
leave
add
dec
inc
inc
aad
fmull
popf
jb
or
adc
add
loop
add
dec
pop
jg
mov
insl
mov
cmp
stc
hlt
mov
jns
sub
mov
adc
inc
inc
dec
std
lods
sub
xchg
nop
lahf
sub
pop
mov
orb
and
push
scas
in
loope
pop
push
jnp
xchg
les
ja
aas
std
fists
xor
inc
insl
jbe
mov
inc
mov
fs
pop
xor
adc
jge
xchg
stos
or
clc
mov
jg
movsl
push
lret
in
dec
mov
mov
jl
jnp
push
or
jge
and
inc
adc
outsl
mull
repz
adc
push
pop
sbb
jle
pop
and
loop
jl
inc
addr16
jnp
loope
mov
push
aad
outsb
rorb
in
cli
pushf
sub
outsb
mov
mov
xchg
sub
daa
pop
inc
fbld
add
dec
shll
fnsave
adc
pushf
adc
loope
int3
sbb
lock
rorl
xor
mov
repnz
sub
inc
vmovsd
adc
jmp
add
test
je
test
fmull
mov
dec
jbe
xor
jmp
jmp
mov
icebp
cmp
sub
pop
add
and
sti
jne
cld
hlt
cmpsl
icebp
adc
rcrl
push
in
ficoml
push
xchg
and
pop
filds
and
scas
and
cmpsb
sub
das
int3
loopne
nop
stos
push
mov
xchg
adc
add
insb
xor
push
popa
sub
movsb
jl
add
andb
push
or
jmp
ret
and
add
sub
push
pop
and
inc
aas
pop
xor
add
sub
sahf
cwtl
fnstcw
idivl
pusha
je
adc
jmp
fs
xchg
imull
pop
ja
pop
dec
movsb
ret
dec
add
fiaddl
ret
aam
outsb
mov
jmp
mov
add
push
mov
mov
mov
pop
dec
push
mov
sbb
or
test
inc
xor
xchg
mov
enter
push
hlt
dec
fcmovu
or
mov
push
cmp
jne
or
inc
pop
sub
jno
loopne
imulb
sbb
sub
fidivrs
mov
cmp
pop
inc
add
addl
inc
push
xlat
les
enter
or
xchg
cmc
xchg
jns
hlt
ret
lret
and
or
mov
adc
pop
leave
cmpsl
dec
iret
mov
notl
mov
out
cmc
cmpsb
mov
outsl
lods
lds
ljmp
mov
bound
push
push
loop
push
decb
mov
js
dec
incl
push
in
xchg
and
mov
jae
insl
cmp
jg
pop
cltd
pusha
sub
mov
or
jmp
shr
into
aam
cmp
std
xchg
mov
popl
ss
push
imull
sbb
push
enter
sbb
in
add
or
or
sub
cld
clc
repz
adc
stos
and
and
fs
push
sarb
sub
shrb
pop
lock
push
mov
pop
incl
imul
nop
mov
sbb
stos
xor
mov
int3
add
sub
in
outsb
push
mov
inc
or
adc
out
jo
and
pop
mov
push
mov
sub
mov
addr16
push
aam
mov
mov
add
dec
insl
mov
or
lock
in
incb
add
test
and
sbb
shlb
bound
js
in
or
out
in
mov
xor
sahf
push
sarb
pop
ja
fimuls
add
icebp
mov
hlt
popf
push
and
jns
into
outsb
aas
push
mov
adc
pop
hlt
das
inc
inc
addr16
pop
sbb
and
jne
aaa
add
addl
adc
pop
dec
cwtl
sub
popf
add
xor
pop
not
sbb
xchg
xor
or
mov
ljmp
dec
pop
cld
mov
xor
out
cs
sbb
mov
in
and
mov
push
mov
loop
sarb
pop
out
ret
xchg
ja
pop
lock
dec
nop
xchg
decb
jle
sub
fcmovb
xchg
sbb
jge
jmp
jg
lock
jmp
lahf
sub
jnp
sub
mov
sub
pop
inc
push
push
inc
loope
leave
pop
dec
repnz
pop
xor
jae
jo
sub
jnp
sbb
insb
sub
cmp
iret
xchg
pop
fwait
movsb
adc
repnz
xor
faddl
pushf
jne
jle
and
adc
insl
jbe
daa
lcall
mov
mov
add
mov
test
scas
mov
push
mov
test
clc
sbb
addr16
leave
add
lods
add
adc
xchg
xchg
cmpsb
add
call
lcallw
cmp
sub
jle
sub
xor
daa
ret
addb
jns
cmp
pop
add
dec
or
into
icebp
jp
iret
push
cwtl
rorl
inc
adc
jnp
sti
das
pop
xchg
jno
mov
test
in
clc
iret
mov
jmp
das
adc
and
sbb
mov
out
push
or
icebp
int3
shlb
mov
jae
mov
lcall
fs
int3
and
leave
or
icebp
addb
dec
mov
push
inc
xchg
mov
cli
pop
sub
pop
sbb
inc
add
ja
push
mov
cmp
xor
sub
pop
xchg
cmpsl
enter
cmp
subl
fsubrs
mov
subl
mov
test
in
add
gs
shr
jmp
mov
pop
testl
mov
fmuls
dec
int
inc
cmpsl
jae
out
or
push
ja
jg
xor
add
inc
icebp
scas
inc
out
or
mov
aas
push
negb
or
dec
and
mov
sbb
or
push
ja
gs
jle
imul
jmp
scas
cmp
inc
sub
inc
ret
lea
jge
mov
mov
xchg
dec
mov
push
mov
push
jle
dec
and
xchg
jl
imul
insb
sub
stos
pop
jne
cmovae
ss
add
adc
push
loop
or
pop
sbb
push
jmp
add
shl
pusha
rorb
and
add
aas
mov
xchg
aam
mov
xchg
stc
mov
outsb
cli
adc
push
add
sbb
xor
out
add
test
or
not
popa
test
add
shll
pop
inc
sbb
cs
aas
das
xlat
sub
add
pop
mov
int3
dec
cmp
fsubrs
jmp
pop
mov
xchg
mov
add
jmp
hlt
imul
add
jne
lds
mov
enter
not
mov
nop
mov
lock
sub
sub
add
mov
jmp
push
add
inc
inc
inc
pop
and
or
mov
pop
ds
sub
xor
pop
push
cli
int3
xchg
or
fisttpll
enter
jmp
iret
ret
dec
mov
pop
imul
or
out
pusha
shrl
ret
lret
shr
push
mov
rolb
movsb
jns
insb
push
dec
test
mov
push
adc
sbb
xor
loope
repz
repnz
dec
or
pop
inc
repz
jmp
sarl
or
xor
shl
call
cld
cmp
aas
divl
pop
imul
pop
daa
aad
mov
pusha
int
lret
xchg
ds
fs
dec
pop
pop
imul
inc
xchg
or
pop
mov
and
aaa
into
test
outsl
mov
jne
cmpsl
push
xor
cmp
push
fldenv
jo
xchg
inc
subl
lock
mov
push
mov
aam
in
push
lcall
sbbb
test
add
les
xlat
sbb
or
in
popf
sbbl
jno
pusha
es
jmp
push
mov
push
lds
insb
mov
icebp
out
fwait
outsl
pushf
imul
les
wrmsr
lret
movsb
scas
push
das
xor
and
pusha
sbb
jb
js
xchg
xor
mov
adc
pop
test
add
aas
adc
je
daa
mov
cmc
fistl
ret
push
xor
iret
mov
xchg
sub
popf
adc
popf
add
pusha
cmovb
push
push
notl
mov
inc
jmp
mov
cmp
rclb
mov
and
sub
leave
lret
xor
lcall
lods
popf
mov
cmp
jmp
sub
mov
stos
pop
xchg
jae
adc
xchg
adc
aas
push
jne
mov
faddl
or
std
pop
pop
jl
imull
mov
aad
hlt
lret
movsl
fwait
adc
add
int3
or
loopne
out
sbb
iret
push
sbb
imul
dec
filds
dec
xor
push
imul
pop
mov
jmp
lea
xchg
jno
clc
psllw
cwtl
push
push
mov
xor
add
lret
jmp
mov
cmpsb
aam
pop
jmp
xchg
dec
push
lods
cli
daa
xchg
out
fisubs
or
aam
sbb
out
xchg
pop
and
lods
lahf
push
xor
inc
ficoms
mov
xor
pop
xlat
pop
add
sub
dec
pop
mov
jle
test
add
scas
inc
dec
imul
and
mov
and
jmp
cmp
jb
dec
or
add
jae
lahf
push
inc
jbe
daa
lods
mov
ret
loop
or
xchg
dec
push
cmpl
enter
mov
sbb
dec
or
pop
add
add
and
push
jno
insl
mov
sub
jbe
fstl
jg
gs
rolb
add
into
fcmovnb
icebp
sbb
arpl
push
ss
neg
push
or
inc
jbe
pop
or
jmp
push
inc
pop
mov
inc
stos
sub
loopne
mov
cltd
adc
push
sub
sbb
mov
decl
es
aas
jp
inc
xor
shll
outsl
lods
jnp
out
adc
test
mov
xor
lock
cli
dec
outsb
movsb
push
jno
inc
and
and
pop
shrl
movups
and
sbb
in
or
adc
xor
imul
cmp
pop
push
inc
or
adcb
dec
push
insl
mov
jmp
pop
push
jbe
outsl
lret
push
and
or
cmp
pop
or
push
push
pop
xchg
add
dec
add
enter
jnp
repnz
sbb
pop
add
and
add
jge
or
dec
cltd
sbb
std
cmpsb
xchg
xchg
daa
cmp
xchg
push
push
push
jg
add
in
imul
add
icebp
or
std
xchg
jnp
and
test
loop
lret
and
push
daa
out
mov
dec
mov
popf
xor
inc
popa
imulb
mov
lock
leave
adcb
push
data16
xor
fdivl
test
sbb
adcb
test
lahf
sub
mov
inc
pop
adc
sub
adc
jo
shrl
push
push
mov
push
sub
mov
cmp
push
out
div
paddsb
nop
sub
mov
add
lret
adc
jecxz
dec
jg
sub
sbbb
push
out
cmp
sub
sbb
ret
push
pop
iret
xor
or
inc
push
sub
pop
pushf
loope
lods
cwtl
or
or
add
cmp
or
sbb
pop
ret
imul
pop
das
es
popa
pop
add
repz
cld
add
cmp
jge
bound
push
push
rolb
and
push
and
cmp
pop
inc
je
addl
repnz
jl
xor
pusha
pop
add
add
das
insl
jp
dec
add
xor
and
js
test
in
imul
dec
inc
push
pop
mov
or
pop
inc
shr
dec
pop
gs
xor
mov
and
fsubr
sbb
adc
add
dec
mov
outsl
and
push
insb
bound
xlat
addr16
mov
rorl
mov
adc
xor
cld
dec
inc
out
mov
mov
pop
add
xor
and
sbb
push
or
add
gs
lock
std
int3
cs
jae
jle
mov
cli
sub
and
jle
test
or
pusha
lret
jmp
loop
mov
mov
push
sarb
neg
add
mov
jle
jmp
sbb
sub
testb
cmp
bnd
push
mov
lds
or
push
add
push
andl
push
push
icebp
std
loope
jns
sub
repz
push
mov
add
pop
shrb
jmp
push
sbb
stos
jae
les
or
sub
adc
dec
hlt
ret
xchg
cs
jae
dec
jecxz
mov
repz
daa
jge
sub
push
xchg
sub
dec
or
sbb
pop
push
jnp
cmpsl
lcall
test
stos
pop
pop
cs
mov
xchg
or
jmp
lds
das
pop
fwait
dec
loopne
dec
inc
mov
and
loope
xor
shrl
cmpsl
std
xchg
out
mov
xor
push
add
sub
adc
jno,pn
xchg
mov
push
shrb
jns
push
push
push
and
xor
cmp
outsb
pusha
pushf
fbstp
pusha
jge
out
push
add
add
insb
add
jl
pop
shr
lock
xchg
fadds
bound
adc
dec
decl
jmp
or
mov
add
or
call
inc
jne
aad
push
cmp
shl
xor
xor
pop
mov
xchg
and
and
mov
pop
jge
out
leave
push
icebp
mov
pop
sub
or
push
mov
divl
in
rcrb
mov
push
xor
mov
push
jg
shlb
push
push
sbb
inc
dec
mov
enter
enter
fsubrl
jg
jg
sub
ljmp
xlat
test
push
jae
jmp
sub
mov
cwtl
xor
testb
push
push
mov
mov
sub
ljmp
rorl
mov
xor
xor
cltd
jb
pop
neg
or
mov
dec
nop
ss
or
adc
fnsave
lret
add
add
xchg
push
push
pop
adc
sbb
jg
pop
xchg
outsb
push
jmp
mov
cwtl
cld
inc
jl
or
add
das
dec
je
add
data16
test
xor
adc
movsl
push
push
or
cltd
sub
loop
jge
dec
jecxz
cltd
add
sub
push
hlt
roll
lret
dec
xor
or
ret
lcall
lds
popf
aam
cmp
sbb
add
out
dec
inc
adc
test
xchg
add
loop
std
adc
or
and
sub
andl
or
dec
lcall
mov
adc
ljmp
dec
fmuls
adc
cmp
fisubs
aad
mov
adc
jnp
or
dec
adc
enter
pushl
mov
jle
mov
and
je
jmp
into
xor
stos
and
fildl
mov
out
test
xchg
or
std
jle
sub
mov
mov
sti
sbb
call
sbbb
jmp
lock
add
dec
or
aam
jl
pop
dec
and
inc
add
mov
in
jmp
jge
mov
dec
sbb
stc
and
add
dec
sti
es
jg
lret
pop
pop
dec
testl
repnz
mull
push
add
inc
shl
adc
cltd
pmaxub
js
add
sbb
stos
pop
pop
les
hlt
inc
cmp
cmp
mov
fstl
push
push
pop
pop
and
fwait
andl
jae
imul
test
cmpsl
std
push
pop
clc
je
lods
sbb
adc
xor
adc
mov
aaa
loop
xor
dec
and
xchg
jne
jnp
push
sub
xchg
add
push
mov
leave
scas
je
pop
xchg
jle
jo
divl
adc
jbe
and
push
dec
add
mov
pop
sub
testl
sahf
sub
pop
push
mov
sti
sbbb
shl
or
or
popa
xor
push
notb
hlt
outsl
das
faddp
push
or
rcr
repz
inc
dec
daa
dec
inc
ds
insl
dec
xor
mov
mov
imul
popf
ja
icebp
inc
out
lock
and
mov
fsubrs
dec
adc
mov
or
cwtl
add
jge
pop
add
mov
fistpll
je
mov
or
dec
xor
and
popf
test
repnz
adc
cld
adc
pop
enter
loopne
bound
mov
sub
adc
scas
repnz
loope
fidivrl
test
jmp
mov
aad
das
push
mov
jnp
adc
cmp
arpl
xchg
loop
imul
jge
dec
inc
or
incb
lods
push
sbb
sti
push
mov
ja
in
push
stc
push
adcl
adc
and
mov
jns
fimuls
popf
mov
sub
xlat
outsb
sub
xor
inc
mov
outsb
xchg
test
adc
scas
mov
inc
sub
add
popa
lock
add
push
enter
dec
sbb
pop
push
hlt
in
inc
nop
outsl
stc
push
sub
addl
mov
pop
jae
dec
dec
xor
ja
aas
cs
adc
or
orl
dec
lahf
xor
xchg
pop
adc
mov
jne
sti
pop
sub
or
ljmp
insl
hlt
inc
sbb
data16
inc
popf
jl
jae
jmp
jl
sub
xor
decl
js
jge
xchg
das
pusha
imul
dec
pop
addb
ja
xor
stc
lods
adc
jae
add
xchg
jmp
pop
cld
mov
testl
mov
cmp
xchg
mov
test
pop
mov
mov
fildl
mov
or
mov
push
xchg
sbb
int
cld
insb
add
adc
ja
xor
dec
cli
cmp
cld
mov
es
xor
and
jo
or
outsb
in
jl
aam
sbb
or
adc
xchg
xor
or
int
inc
jb
cmp
mov
and
mov
mov
push
xchg
sahf
bound
pop
out
or
jmp
pop
pop
lds
add
mov
cmp
out
je
xchg
mov
and
sbb
fidivrl
loop
sbbb
sbb
fs
cwtl
std
add
jnp
xlat
dec
test
int
std
test
stos
js
pop
adc
sbb
push
adc
stos
sub
mov
xor
sub
gs
sbb
das
orps
inc
sub
inc
and
inc
test
pop
or
pop
mov
push
push
mov
ljmp
pop
das
int3
xor
loopne
push
pop
imul
dec
inc
add
adc
fidivs
rcl
dec
xlat
lcall
test
and
pop
inc
and
ljmp
push
inc
or
add
jo
lahf
push
test
add
pop
outsb
out
adc
insl
push
lret
pop
jb
ret
cmp
push
ret
dec
in
je
shrb
pop
add
call
scas
lods
dec
mov
sub
sarl
xchg
push
add
cmc
sarl
xor
jmp
dec
test
or
aas
sbb
aas
repz
add
pop
pop
dec
call
mov
loop
mov
test
insb
movsb
or
push
fadds
shr
ret
out
iret
sbb
dec
sub
sub
jp
jbe
or
or
cld
dec
mov
addr16
cmp
or
cltd
cli
jnp
inc
mov
dec
xor
xlat
rclb
lds
scas
mov
add
fsubp
adc
adc
not
lret
add
cmp
incl
push
dec
sahf
add
jg
std
les
lds
cmp
dec
add
js
jb
jmp
pop
push
gs
sub
cmpb
push
pushf
dec
xorl
mov
push
or
stc
decb
fisttpll
scas
ret
mov
call
aas
loope
faddl
adc
sbb
rcr
mov
and
sbb
lock
xor
bnd
test
lods
sarb
jns
add
in
xchg
and
repnz
xor
add
add
xor
adc
test
adc
loopne
sahf
jo
sub
adc
mov
outsb
pop
push
gs
add
jmp
js
add
enter
sarl
aas
xor
sub
gs
daa
jl
leave
ja
push
pusha
mov
cmpl
push
add
add
and
sqrtps
clc
pop
or
or
loopne
xor
pop
sub
adc
shll
xchg
mov
pop
mov
inc
pop
push
rolb
cmp
mov
inc
add
and
xchg
push
jmp
and
icebp
mov
xor
pushf
dec
cmp
inc
fists
cld
test
lea
xchg
stc
insl
xlat
or
orb
jge
aam
test
test
aaa
mov
imul
test
mov
rcrb
popa
push
mov
insb
pusha
and
dec
ret
test
xchg
push
fucomp
inc
aaa
pushf
scas
popf
data16
ret
into
xchg
sbb
outsb
aaa
cwtl
inc
or
mov
aaa
sub
das
add
test
out
std
mov
ret
lret
jmp
mov
flds
call
mov
fidivrs
dec
jmp
or
inc
pop
js
mov
aas
mov
shlb
or
and
xor
frstor
stos
dec
mov
int3
es
or
mov
mov
or
adc
enter
inc
orl
push
add
call
mov
and
xchg
roll
ret
pop
ljmp
fdivs
pusha
push
mov
cmp
mov
pop
xchg
adc
out
fucom
add
dec
and
dec
scas
pop
cmp
inc
xor
add
in
or
test
subb
fs
adc
sub
out
mov
add
mov
rcrl
hlt
fisubrl
or
dec
je
adc
test
jmp
mov
jp
jbe
ds
fwait
mov
stos
xor
push
rcrl
mov
pop
jmp
push
idivb
aam
cli
aam
flds
leave
mov
insl
xorb
lds
and
push
push
push
jle
and
adc
xor
loope
xor
call
mov
inc
scas
mov
out
xchg
cmp
mov
jmp
rcrb
and
xor
fsubrs
adc
mov
add
jbe
push
neg
push
test
aaa
push
dec
arpl
mov
lret
or
pusha
xchg
adc
or
jmp
ja
daa
popa
adc
out
shlb
mov
test
dec
sbbl
pushl
nop
loop
fstpt
sub
xchg
jmp
scas
or
mov
jl
add
js
in
xchg
add
cmc
jmp
or
scas
jns
push
fcomip
fistpl
pop
mov
mov
push
push
addr16
mov
cmpsb
adc
xor
sub
dec
mov
pop
push
adc
dec
or
push
pop
ljmp
shrb
ja
pop
mov
cld
sub
ret
stos
sbb
sub
repz
pop
mov
out
cmpsb
fadd
inc
adcb
rcrl
mov
insl
ret
jb
sbb
and
mov
fs
cwtl
push
push
decb
sub
and
lea
ljmp
add
movsl
stos
cld
jmp
jbe
daa
dec
pop
fcoms
and
dec
xor
ja
pusha
sub
data16
lods
mov
imul
sti
push
push
jmp
adc
sub
push
fs
out
pop
sub
orb
in
sbb
jg
dec
adc
orb
pop
insb
ret
icebp
mov
not
cmp
rol
mov
loope
and
sbb
aas
or
repnz
pop
scas
cmp
test
in
pop
mov
movsb
cs
jmp
or
cltd
shll
push
push
nop
jmp
pop
mov
jmp
pop
mov
jbe
cmp
pop
idivb
nop
adc
mov
xlat
jmp
loop
sub
jg
xor
adc
push
lahf
inc
pop
push
aam
push
mov
jp
int3
verr
cs
jmp
xchg
rep
decb
pop
cmp
aaa
mov
adc
call
jmp
fcompl
xor
xor
out
cmp
pop
mov
xchg
jne
mov
imul
popf
inc
mov
mov
pop
inc
xchg
pop
aas
in
lods
mov
and
adc
push
mov
sbb
cmpsb
pop
add
mov
mov
jnp
dec
jmp
sub
push
push
in
pop
and
adc
add
add
add
sub
sub
sbb
loop
lods
pop
shl
popa
in
pop
ss
and
add
add
cmpsb
push
adc
daa
add
cmpsl
ljmp
mov
icebp
xchg
es
mov
je
inc
push
add
das
clc
xor
xchg
dec
jne
cpuid
sub
subb
in
inc
les
nop
add
ljmp
test
out
mov
imul
dec
add
pmullw
xlat
shll
adc
push
lea
push
fildll
iret
testb
and
mov
je
jno
cmp
cwtl
mov
imul
jnp
cmp
inc
lret
adc
pusha
and
cmp
call
or
pop
and
xchg
xor
stos
movsl
mov
bound
stc
mov
cmp
fsubr
mov
cmp
adc
daa
sti
inc
fildll
nop
movsl
fistpll
enter
push
add
cmpsb
gs
push
push
mov
test
push
jl
cltd
jmp
pushf
jne
pop
add
repz
lods
jmp
sarb
scas
jo
cmp
and
imul
mov
cmp
outsb
test
pusha
fwait
inc
bound
xor
pop
push
jle
test
inc
fsub
imul
fidivrl
xchg
sub
lods
outsl
mov
pusha
push
and
test
movsb
jmp
mov
mov
mov
iret
repz
mov
pop
aaa
stc
mov
dec
sub
jle
or
mov
loopne
es
jo
add
repnz
andl
movsl
jno
xorl
mov
clc
push
pop
xor
mov
sahf
add
fs
shrl
enter
jb
push
xchg
lret
jae
or
call
in
inc
pop
mov
aas
int
or
pushf
cmp
insl
movsl
add
arpl
in
xor
cmc
jae
ret
pop
jg
out
sarb
cs
ljmp
lock
lgs
hlt
daa
xor
imul
and
sub
push
pop
sub
rorb
dec
dec
mov
add
hlt
adc
push
push
mov
sahf
cmp
dec
xor
mov
inc
push
lret
and
jae
cmp
je
inc
or
sbb
jmp
inc
das
push
inc
and
lcall
test
inc
mov
or
imul
loop
mul
push
xchg
lahf
inc
mov
add
imul
mov
out
leave
jmp
mov
push
pop
add
sbb
push
add
cwtl
sbbb
cmp
ds
into
pop
push
mov
jmp
mov
jmp
je
rcrb
xor
pop
sub
add
pop
jae
and
out
sub
sub
sub
jg
aaa
loope
xchg
mov
pop
push
mov
sub
pop
cmpb
mov
in
bnd
adc
loopne
sub
mov
sub
les
rclb
and
mov
and
out
hlt
mov
push
mov
push
sub
xor
mov
clc
or
lods
repnz
add
repz
adc
xor
jmp
fwait
loop
jns
nop
cmpsb
aam
add
inc
idiv
sahf
scas
fldl
pusha
jns
xor
enter
cmp
in
movsl
cmp
jge
clc
cmp
loope
pop
mov
push
lock
push
lods
pop
in
jbe
insb
cli
or
add
into
les
mov
test
pop
mov
push
sub
inc
mov
add
iret
cmc
adcl
stos
fnstsw
or
dec
stc
sub
in
leave
mov
sbb
pop
sti
add
hlt
sub
pop
jmp
jmp
pop
lods
xchg
jl
mov
in
mov
outsl
std
xchg
mov
enter
lds
cmp
shrl
xchg
adc
sbb
test
pop
pop
shr
int
cmpsl
dec
es
std
loopne
mov
adc
adc
push
sbb
lds
cmp
or
and
sub
mov
lahf
dec
insl
add
xchg
adc
push
stos
movsb
neg
adc
lods
sbb
lcall
addr16
scas
cld
sti
movsb
cmpb
or
mov
or
adc
rorb
push
add
xlat
xchg
pop
push
cmpsb
jne
lret
pop
add
and
or
pop
mul
lahf
push
outsl
add
xor
pop
sbb
mov
or
es
adc
or
xchg
pop
movsl
pusha
fucomp
insl
jge
insl
out
sub
dec
dec
inc
mov
push
ljmp
gs
dec
sti
xchg
or
jmp
pop
pop
pop
stos
inc
add
add
sub
cli
push
pushf
pop
sbb
sub
pushf
test
jmp
pop
rclb
dec
cmpsb
adc
xlat
pop
pop
out
mov
rcrb
cmp
adc
insb
sbb
dec
xchg
add
mov
pop
das
jnp
lcall
jns
cmp
push
lcall
push
push
pop
ljmp
loop
ror
int3
ljmp
jbe
sub
mulb
add
pushf
orl
lock
dec
jb
mov
mov
shll
aam
inc
jb
add
lahf
js
out
fs
mov
push
out
mov
loope
aad
xor
arpl
mov
daa
clc
mov
push
pusha
pop
mov
dec
jmp
add
out
or
pop
jmp
sub
orl
setl
sub
adc
sub
insl
ret
mov
adc
je
pop
jmp
pusha
adc
pop
es
mov
bound
inc
xchg
mov
icebp
int
jo
mov
cmova
pusha
jl
pop
mov
movsb
das
jne
dec
outsb
fsubl
xchg
mov
call
dec
inc
add
mov
cmp
cwtl
add
ss
pop
pop
nop
or
dec
pop
stos
insb
cmp
xor
out
dec
sbb
dec
push
stc
xor
in
adc
push
dec
push
hlt
cmp
lret
test
xchg
sti
push
or
divb
lret
leave
push
std
bnd
cmc
jae
add
adcb
pop
pop
pop
in
inc
pusha
push
jecxz
sbb
and
mov
jo
mov
lahf
pop
scas
nop
xor
adc
repz
pop
xchg
ss
add
out
gs
mov
adc
sti
pop
sub
xchg
lret
inc
lret
push
adc
test
test
call
jp
push
lret
pop
cli
addr16
insl
sub
push
bound
popf
add
cmp
mov
dec
or
push
cmp
js
dec
enter
inc
jno
push
pop
pop
add
add
xor
sub
and
pop
cmp
ret
adc
push
in
or
out
mov
dec
push
jb
cmpsl
mov
jne
mov
jno
cmp
cwtl
dec
nop
inc
cmp
adc
stos
add
cli
lods
ja
test
adc
xchg
rorl
push
dec
fdivl
or
fisubs
mov
pop
xor
les
mov
mov
mov
sub
xchg
fisttpll
pop
loope
jmp
stc
mov
xor
xchg
xor
sahf
sub
pop
mov
bound
and
jbe
push
outsl
sub
pop
js
sbb
jl
pop
and
push
cmp
mov
stc
dec
pop
repz
xchg
jmp
and
mov
nop
ret
push
push
mov
cmp
popa
pop
sbb
stos
push
scas
icebp
ds
ret
subl
adc
lcall
add
pop
jmp
les
jecxz
clc
dec
push
pusha
adcl
pop
jmp
push
lea
xor
adcw
fimull
aas
cltd
inc
mov
cli
daa
fnstenv
xchg
and
push
jnp
pop
ss
and
addb
std
rcrl
sub
sub
lea
roll
or
sbb
fadds
addr16
inc
add
loop
push
cmp
pop
shr
jmp
mov
rorl
add
push
mov
cmc
inc
lods
nop
mov
mov
flds
and
inc
clc
loopne
push
test
inc
sbb
cmp
push
and
add
mov
lret
ret
mov
add
cwtl
in
insl
mov
roll
inc
movsl
fsubl
add
xlat
outsl
inc
sbb
jo
addl
pop
dec
pop
jle
add
cmpsb
xchg
pop
or
mov
rcl
gs
dec
sbb
pop
or
int3
jge
addl
insb
inc
push
dec
push
scas
out
xor
dec
cmp
push
bnd
sub
dec
cli
aad
and
out
fwait
or
cmovbe
mov
pop
or
jo
fnstenv
je
push
sbb
and
xor
scas
mov
adc
stos
repz
jmp
lret
sub
pop
dec
fst
loopne
outsb
mov
sub
popf
cli
jl
push
adc
and
dec
jno
pop
dec
mov
sahf
xchg
and
push
jne
add
push
jecxz
data16
mov
ds
push
aad
inc
push
cld
adc
movl
pop
cmpsl
jle
pop
cltd
xchg
mov
and
imul
sbb
outsl
or
sbb
pop
xchg
pusha
out
adc
cmp
pop
cmp
pop
out
incb
and
mov
push
lret
or
lods
mov
lds
mov
movaps
push
jl
dec
scas
sub
aaa
das
adc
jmp
gs
and
mov
pop
lret
adc
dec
cwtl
and
mov
mov
add
xchg
adc
mov
adc
lds
mov
ret
sbb
ss
mov
dec
mov
adcb
jne
stos
inc
and
push
mov
gs
or
lock
mov
mov
gs
xor
daa
pop
je
cli
jns
adcb
jmp
pop
jge
pop
mov
pop
push
dec
adc
mov
jmp
lds
push
nop
mov
jmp
mov
pop
test
fs
push
mov
lahf
xchg
or
ret
pop
jecxz
test
bt
jle
out
jge
pop
jg
mov
adc
add
pop
fs
addr16
imull
jno
add
loopne
jmp
pop
xor
push
or
mov
int
in
andb
jnp
lret
lock
pop
ret
cmp
pop
rcrl
repz
or
lods
ds
sbb
pop
dec
sub
lret
sub
fldcw
pop
insb
inc
movb
shll
enter
and
aas
push
push
mov
repz
int3
mov
or
pop
mov
mov
mov
je
dec
cmpsb
jbe
cli
clc
sbb
push
or
fstpt
jle
pop
push
clc
mov
sbb
pop
inc
cwtl
sbb
add
rclb
int3
stc
push
subl
xor
xor
xor
clc
sbb
out
popa
adc
subb
jno
xchg
sbb
xchg
lods
out
popf
lret
pop
in
test
push
ja
or
jge
jp
lahf
int
add
jl
lret
mov
jo
jl
or
inc
cmp
xchg
jo
int3
cmpb
push
loopne
add
aaa
and
adc
cmpsb
idivb
jg
ret
call
mov
cmpsb
pop
test
dec
sub
sub
xor
mov
pop
sti
sbb
negl
pop
jmp
ljmp
pusha
sbb
aaa
scas
xor
jno
add
imul
lcall
add
adc
ljmp
cltd
push
aas
jbe
cld
push
xor
cmp
stos
sbbb
pop
bnd
add
pop
dec
lret
call
pop
pop
add
clc
js
add
xor
xchg
push
jmp
push
das
pop
jmp
xor
loope
jge
inc
iret
mov
aas
dec
test
sub
push
add
add
jae
and
stos
jmp
movsl
mov
rolb
notb
xchg
pop
and
iret
stc
and
xchg
pop
mov
mov
add
jne
push
or
imul
pop
not
lock
ljmp
cs
pop
mov
and
xor
jl
lahf
icebp
push
arpl
inc
mov
mov
push
pop
sub
mov
xchg
xor
jle
jmp
adc
adc
jg
mov
jmp
pop
mov
in
fadds
ds
sub
jecxz
add
insl
fwait
adc
aad
or
sub
lock
mov
outsb
push
push
popf
imul
xchg
and
cwtl
and
pop
adc
and
jno
ret
mov
or
xchg
adc
xchg
and
sti
sub
and
out
push
sbb
shrl
fsubl
add
sti
push
out
add
pop
inc
adc
add
xor
pop
lock
inc
push
and
loope
pop
pusha
std
mov
or
pop
jge
pop
sbb
jbe
daa
call
incl
xor
movsb
shlb
out
dec
or
pop
xor
adc
pop
mov
das
xchg
mov
jnp
jne
dec
adc
mov
test
int
repz
and
pop
inc
clc
aam
pop
and
and
inc
fs
fdivs
idiv
das
pop
jne
push
push
loope
out
dec
aad
into
lahf
jg
jmp
std
xor
pop
xor
ret
and
push
mov
cmp
loopne
mov
and
cwtl
out
call
cmp
rcll
pop
pop
push
cmp
lods
scas
rcr
lods
in
push
cli
push
int3
mov
icebp
jns
cmp
adc
xor
jmp
shr
jnp
and
sub
push
dec
add
ja
jo
idivl
aas
dec
add
sub
pop
add
movsl
and
add
dec
push
or
scas
rclb
push
sub
xchg
out
sbb
sub
push
int3
jo
mov
pop
pop
pusha
mov
xor
bound
inc
xor
repnz
adc
ficompl
mov
or
cld
in
adc
or
dec
bound
jmp
lds
jg
mov
inc
cmpsl
movsl
je
jno
xor
push
xchg
push
pushf
mov
repz
inc
push
fsubl
add
pop
in
test
and
pop
inc
adc
por
add
push
push
cld
sar
xlat
inc
or
das
test
aad
pop
lret
pop
pusha
fmull
xchg
dec
pusha
enter
ja
dec
push
dec
add
sarb
or
mov
sbb
and
mov
push
push
popf
ret
push
cmp
fdivl
or
and
pop
jmp
mov
pop
jno
fidivrs
mov
leave
inc
add
pop
sub
stos
or
jmp
jge
adc
inc
mov
gs
sbb
into
jle
add
mov
adc
pop
inc
jge
sar
sub
mov
push
mov
xor
xchg
pusha
mov
dec
sti
xor
ret
xchg
enter
sbb
dec
lret
xor
inc
daa
jp
push
and
and
leave
push
jb
pop
cmc
xchg
fimuls
or
adc
add
repz
das
push
adc
or
or
call
cmpsb
scas
imul
push
mov
xor
cmc
add
push
imul
mov
and
aas
negl
clc
inc
pop
and
jmp
sub
push
and
mov
or
inc
stos
xor
add
rorb
ficompl
mov
sti
imul
sbb
int3
push
cmp
push
ja
mov
push
and
das
stos
cmp
cld
jl
push
sbb
mov
pop
push
mov
bound
push
shll
rorl
sub
and
pop
push
xchg
aas
movsl
call
mov
cmpsb
mov
add
sbb
jmp
shlb
push
push
lods
mov
jmp
mov
rcll
enter
mov
add
mov
fisubrl
jae
mov
cs
xor
stos
mov
in
or
popa
inc
inc
aas
inc
jg
repnz
xchg
cmp
add
push
rcl
push
mov
push
rcrb
jmp
mov
push
testb
jne
or
enter
xlat
push
xchg
pop
lods
or
sub
imul
cmpsl
pop
loop
jno
jp
les
imul
clc
cmpb
shlb
add
pop
push
cmp
loop
push
or
cmpb
jne
outsl
rorb
rorb
pop
add
lea
or
push
mov
fisttpll
mov
jno
push
push
or
jns
xchg
sub
add
in
bound
imul
dec
pop
test
xor
call
scas
imul
gs
jmp
notb
pushf
add
int3
jg
mov
adc
xchg
inc
pop
pop
jnp
pop
or
clc
mov
push
and
ds
mov
cmp
insl
fnstenv
fwait
push
xchg
insb
pop
push
lock
jb
popf
adc
cmp
xor
insb
mov
ret
pop
jmp
out
lock
adc
imul
add
sahf
dec
mov
js
rol
push
push
das
inc
in
and
sbb
lret
loope
dec
push
loope
mov
shrb
movl
dec
sub
mov
das
fidivrl
push
pop
or
popa
dec
pop
roll
push
jg
or
shrl
out
jae
mov
loopne
xor
add
dec
inc
push
jmp
mov
lret
sub
pop
shl
dec
add
stc
divb
adc
dec
pop
mov
or
fiadds
or
out
sbb
jbe
push
das
je
mov
push
dec
sti
into
sub
xor
xor
xchg
dec
sub
cmp
sbb
cmp
icebp
pusha
push
rclb
fmuls
dec
insl
stc
popa
leave
push
fidivrs
add
or
pop
scas
inc
out
xchg
push
mov
jmp
sbb
sahf
fucomip
in
imull
dec
pop
xor
pusha
mov
arpl
xchg
pop
sahf
fbstp
jmp
push
adc
lahf
outsl
fsubrl
jp
es
les
mov
jae
mov
aaa
add
mov
or
pop
mov
pop
in
mov
shlb
jne
inc
imul
cmp
sarl
sub
add
mov
or
std
mov
in
pop
mov
fmuls
mov
ds
hlt
inc
adc
bound
movsb
cmpsl
mov
mov
xor
dec
out
cwtl
lea
add
cmp
je
jmp
adc
mov
out
daa
pop
push
jb
pop
mov
add
and
pop
and
lock
xchg
mov
add
jne
lcall
test
add
out
lea
lods
xor
or
push
popl
mov
sub
mov
mov
stos
mov
ret
jmp
std
cmp
inc
div
stos
adc
jmp
dec
push
jg
sub
and
hlt
pop
es
loope
inc
pop
pop
icebp
push
or
push
imul
std
mov
jle
cs
adc
or
or
pop
mov
pop
mov
sarb
inc
xchg
sbb
mov
cltd
lret
and
sub
inc
pop
xchg
pop
je
out
lret
fsubrs
pop
nop
xor
out
shr
and
sbb
mov
mov
mov
mov
inc
dec
pusha
adc
pushw
adc
xor
adc
ja
adc
jmp
mov
arpl
xorb
jl
add
adc
adc
or
stos
dec
arpl
adc
or
adc
pop
dec
adc
mov
mov
aaa
das
xchg
dec
mov
pop
js
xchg
pop
sbb
in
pop
pop
mov
std
sub
pop
push
push
push
and
les
psubusw
add
and
sub
push
add
cmp
imulb
mov
rorb
mov
xor
cmp
jp
mov
inc
and
pusha
nop
xor
xorb
ds
in
enter
xlat
shl
mov
cmc
jo
push
out
sub
mov
cltd
pop
mov
stc
push
stc
insl
cmp
fisubrl
pop
mov
cmc
or
mulb
loopne
sub
add
add
sbb
jmp
push
add
sub
xor
add
mov
shl
ret
clc
sarb
es
inc
out
jmp
dec
inc
or
push
jmp
xor
movsl
xor
divl
mulb
outsl
loop
inc
lret
fwait
jno
js
xlat
sbb
adc
push
in
dec
sahf
or
dec
sbb
lahf
rcll
iret
jns
adc
jne
mov
sahf
push
add
lods
inc
out
and
dec
jnp
sub
add
xor
cmp
insl
in
push
dec
jmp
addr16
inc
cmpsl
insb
stc
push
jge
mov
cmpsl
dec
ljmp
mov
inc
in
push
mov
shrb
pop
pop
mov
sub
loop
aam
repnz
test
mov
xor
mov
outsl
and
lock
jmp
bound
or
popa
xor
push
push
mov
mov
push
sub
out
aam
stos
orb
dec
mov
adc
adc
cmp
shll
or
mov
ds
xchg
xchg
mov
pop
mov
add
je
sub
sbb
cmp
push
mov
jge
add
ss
mov
cmp
ret
pop
notb
daa
out
das
fists
lea
mov
xchg
or
mov
int3
pop
or
lahf
sub
jno
shrl
or
adc
push
push
cs
pop
aad
rcrb
stos
jns
pusha
mov
adcb
das
mov
mov
push
js
lock
dec
pop
movups
pushl
lahf
jno
popa
jmp
aaa
aas
test
testb
inc
mov
jne
in
push
roll
ljmp
ds
pop
inc
pushf
mov
mov
sub
fstp
out
loopne
lahf
gs
mov
fisubrl
out
mov
jnp
mov
jbe
dec
sub
inc
jle
xlat
aad
sub
mov
out
mov
lods
cmp
or
cmp
fs
pop
xor
jo
inc
cwtl
adc
and
mov
aas
jb
or
dec
pop
lea
adc
sbb
or
sbbb
jmp
pop
pop
shrb
cmc
cltd
push
adc
adc
test
xor
dec
std
inc
popf
popf
pop
jae
andb
add
or
cmp
das
mov
push
or
adc
mov
jmp
pop
pop
mov
scas
ja
sti
ret
jnp
test
pavgw
shl
sub
lods
and
jmp
pop
xor
stos
rclb
xchg
dec
cmpsb
cwtl
jne
adc
daa
add
sub
mov
pop
sbbb
add
add
fwait
scas
push
cli
aam
call
xchg
dec
add
insl
pusha
pmuludq
or
xchg
imul
sbb
std
jecxz
sbb
fcom
sbb
out
sub
adc
movsl
pushl
pop
std
aas
pop
jo
inc
fs
sub
imul
push
jmp
mov
ja
xor
insl
pop
pop
daa
jbe
pop
or
adc
cmpsb
aas
mov
dec
lss
push
mov
push
jle
pop
xor
cmp
push
mov
push
pop
mov
inc
jae
jl
lea
add
sub
jmp
cltd
push
lods
aas
pop
mov
les
dec
mov
pop
push
cmp
dec
inc
or
mov
mov
out
add
mov
add
rcrb
pop
div
jge
mov
aaa
mov
cs
scas
rolb
test
add
pop
push
mov
jmp
jmp
cmc
pop
pop
inc
and
ret
jl
adc
ds
orb
rorb
int3
dec
push
jnp
stos
sub
movsl
jmp
icebp
push
dec
call
and
push
icebp
jge
mov
xor
sub
jno
jg
hlt
imul
cli
insl
jne
mov
pop
int
xchg
fs
jbe,pn
pusha
sub
jmp
roll
dec
stos
or
lret
mov
inc
out
repnz
faddl
cmpsb
push
call
jmp
jmp
adc
add
add
xor
adc
es
inc
loopne
rcl
push
jae
inc
rclb
jae
jg
push
inc
loop
adc
push
pop
or
mov
fnstsw
stos
roll
push
sbbb
and
pushf
jns
adc
mov
mov
xend
jmp
test
sub
dec
pusha
decl
sub
insb
xlat
adc
push
adc
into
loopne
jo
daa
jl
je
add
jb
es
dec
jns
mov
lock
rolb
adc
jo
mov
jle
lcall
aam
pop
movsl
inc
add
pushf
sbb
paddsb
mov
dec
fdivr
xor
push
sbb
mov
nop
mov
adc
push
out
jl
add
jmp
stos
in
stos
pop
adc
jmp
leave
sbb
das
or
sub
mov
mov
and
sbb
and
cmc
jl
adc
mov
test
xchg
jne
or
push
pop
gs
or
repz
push
loop
ss
dec
push
sub
dec
lods
adc
add
cmc
stc
push
dec
add
repz
popf
mov
cmpsl
xchg
dec
mov
push
inc
pop
cld
add
in
xor
mov
sbb
push
fs
jae
dec
jne
fmull
mov
imul
jmp
and
mov
inc
pop
sub
sub
ja
rclb
rclb
push
push
fs
and
ds
popa
cmpsl
add
sub
pusha
xlat
add
and
lock
in
xchg
pop
xchg
sub
dec
dec
pop
clc
lea
mov
mov
xor
mov
aas
movsb
jno,pt
fsubs
mov
xchg
ds
imul
mov
inc
cmc
pop
loope
pop
adcl
js
dec
add
cmp
les
push
scas
jo
int
jns
or
in
pop
dec
fcmovbe
jge
in
and
xor
add
push
jmp
inc
enter
fists
test
or
dec
sbb
add
stos
push
pop
cmp
cli
push
int3
scas
repnz
pop
mov
pop
inc
jl
inc
insb
sarb
icebp
push
sbb
pop
jecxz
mov
push
into
mov
popa
push
mov
cld
lret
ret
jmp
sti
add
fisttpll
arpl
pop
fiadds
mov
or
xor
mov
mov
cmpsl
je
cmp
pop
or
push
mov
std
cmp
clc
jle
or
iret
mov
adc
orl
and
inc
sub
fs
xor
out
or
and
pop
xorb
pop
add
dec
in
in
jg
fadds
pop
cmpxchg
pop
call
add
hlt
sub
fdivrl
add
add
outsb
or
fcoms
faddl
dec
dec
jl
xchg
add
or
pop
mov
jp
imul
or
inc
pop
and
repnz
sub
dec
das
push
or
call
or
xlat
xor
pop
dec
jbe
out
add
jmp
loopne
mov
bound
loop
adc
enter
push
pop
jo
ret
cmp
xor
popa
and
stos
adc
ja
add
add
arpl
rcrl
cmp
pusha
fdivr
push
mov
xchg
pop
mov
jp
in
int
leave
shrl
scas
inc
clc
sub
push
jbe
inc
hlt
mov
iret
push
insl
ror
nop
lret
dec
fstps
and
mov
mov
cltd
dec
xor
pusha
or
adc
cwtl
jo
lret
jbe
nop
xor
ret
cmp
add
sar
jno
mov
jne
movsl
sbb
adc
les
out
and
ret
shrl
push
or
push
cmp
int3
pushl
neg
sub
xorl
fiaddl
add
pop
pop
les
mov
orb
jae
mov
out
lock
adc
push
pop
add
xor
sub
xchg
repnz
dec
mov
js
push
jp
jno
je
sub
mov
or
fwait
imul
sti
in
fadds
jno
cmp
cli
orb
or
ds
fadds
and
jo
jmp
xor
jle
push
xor
jmp
test
mov
cmp
frstor
ljmp
dec
xor
dec
mov
icebp
push
sub
cmc
pop
les
out
adc
mov
or
add
das
push
xchg
ja
scas
mov
add
pop
xor
or
fdivrs
addr16
mov
outsl
cmpsb
cmp
sub
lcall
mov
call
jp
sub
jge
jbe
push
push
jge
sub
icebp
push
jnp
xchg
pop
push
mov
push
dec
mov
inc
jg
and
ljmp
je
xor
test
sub
inc
add
lret
jmp
call
clc
insb
add
loopne
jmp
or
xchg
flds
test
xchg
out
fcmovb
outsb
cmp
push
subl
jo
push
ja
inc
push
gs
jmp
inc
dec
push
push
pop
mov
scas
cmpsl
push
dec
in
test
jmp
sbb
cli
xor
pushw
roll
push
inc
mov
push
cmp
xor
pop
cli
test
movsl
and
inc
lea
pop
add
cmp
repz
push
inc
cmp
or
adc
jo,pt
or
or
sbbb
jl
xchg
mov
lahf
ret
mov
jnp
insl
push
mov
sub
insl
jmp
sahf
daa
mulb
pop
jmp
adc
mov
adc
adcl
insw
test
addr16
xchg
cld
and
std
pop
pop
pop
ljmp
sbb
jnp
mov
insl
repnz
stc
movswl
roll
ficoml
cmp
pop
mov
mov
cmp
in
inc
mov
push
pop
inc
fidivs
stc
xchg
lods
jmp
int
pop
add
mov
out
enter
imul
mov
repnz
ret
loopne
lds
push
pop
cmp
sub
pop
jl
dec
mov
les
push
or
aam
das
jecxz
inc
outsb
out
add
inc
in
sbb
fnstenv
iret
scas
adc
mov
lcall
xchg
leave
rcrb
push
test
daa
pop
jge
inc
pop
push
and
jae,pn
jge
inc
idivb
rolb
sarl
dec
loope
enter
pushl
popf
push
pop
mov
sbb
sub
add
xchg
hlt
push
push
jmp
adc
and
mov
cld
inc
daa
push
push
daa
pop
aas
inc
sbb
inc
xor
xchg
mov
aaa
loop
pop
sti
add
pop
sub
ret
pop
and
mov
sub
outsb
jo
lret
pop
add
or
and
add
and
jo
pusha
push
mov
jno
es
mov
outsl
add
pop
inc
push
xchg
ret
pop
and
dec
adc
dec
dec
pop
push
daa
inc
or
and
xor
inc
out
mov
data16
das
jne
pop
pop
jp
cmpb
jle
sbb
ja
mov
sub
repz
icebp
pop
das
test
lahf
push
mov
aad
repnz
stos
xor
outsl
gs
ss
inc
out
mov
sahf
cmc
clc
sbbl
sbb
pop
sbb
fsub
in
scas
pop
jle
push
mov
jg
cs
cld
out
fstl
pop
ror
sbb
hlt
gs
mov
or
push
addr16
out
sbb
mov
add
and
xlat
push
cmp
jmp
push
ds
hlt
or
jo
mov
out
ret
pop
popf
je
add
icebp
fcoml
add
ds
rcrl
inc
mov
mov
add
inc
mov
mov
pop
pop
out
cmp
dec
jbe
pop
push
out
ret
sbb
stos
sbb
add
arpl
xchg
jge,pt
xchg
mov
sbb
cmc
and
aad
dec
loope
push
add
loop
sbb
inc
sbb
shlb
aas
ljmp
enter
inc
adc
or
add
ja
test
add
pop
lea
dec
adc
popa
jmp
xlat
push
shll
leave
or
or
xor
lods
ds
inc
leave
ljmp
movsb
decb
jg
mov
adc
xchg
fdivrl
sbb
clc
ret
and
cmp
je
cs
pusha
ret
imul
inc
dec
jmp
sub
push
jmp
jmp
xor
push
adc
mov
xchg
sbb
sub
or
push
lock
xor
fs
jg
inc
mov
inc
mov
popf
divl
mov
mov
imul
and
inc
add
fwait
mov
xor
ficompl
rclb
fidivs
sbb
push
push
and
ds
pop
lods
or
ret
pop
mov
jnp
das
xchg
jb
inc
or
or
out
mov
and
clc
ja
out
sub
out
jb
jo
pop
jmp
sahf
or
das
and
aas
scas
mov
pop
enter
stos
sarb
push
push
jg
repnz
es
push
add
fildll
xlat
ret
mov
jp
add
lea
rcr
mov
pop
lret
sub
scas
adc
push
jge
xor
xchg
push
or
jne
pop
test
push
rcll
dec
leave
xchg
int
adc
shll
push
or
push
out
push
push
sbb
inc
dec
das
jbe
add
ret
and
and
hlt
add
add
call
pop
neg
or
int3
mov
dec
stos
mov
push
mov
add
shl
mov
cs
iret
and
pop
aaa
sub
pusha
aad
shlb
cwtl
insl
loope
mov
arpl
jne
mov
pop
mov
pusha
add
cmc
cli
inc
sub
std
sub
cmp
stos
cmpsl
outsb
xchg
mov
popa
or
inc
or
pop
mov
push
mov
inc
lea
or
in
daa
cld
xchg
mov
ja
iret
daa
es
fs
inc
addl
dec
not
shll
jmp
cli
push
test
pop
into
inc
aas
dec
jp
push
add
pop
xor
icebp
adc
stc
pushf
cmp
adc
add
jmp
sbb
in
repz
push
add
xor
push
icebp
test
jae
mov
dec
ljmp
or
mov
push
faddp
shl
fstpt
int3
jp
ja
ds
sub
dec
xor
push
es
not
add
cmp
mov
and
add
inc
push
mov
jno
cld
icebp
or
cmpb
testb
jno
push
into
mov
add
cmp
test
addl
mov
add
or
mov
jne
inc
je
inc
psrad
cmp
cmp
xchg
pop
push
mov
outsl
imul
xchg
out
mov
push
mov
cmp
mov
push
dec
scas
pusha
ljmp
cwtl
jo
imul
in
pop
adc
hlt
cmp
dec
xchg
cs
mov
cmc
sarb
or
adc
jbe
das
push
addr16
sbb
hlt
test
mov
movsb
notl
jbe
or
loope
jg
jns
notb
cmp
jmp
out
dec
sub
xor
inc
adc
adcb
sub
int3
xor
cwtl
pop
xchg
divb
and
rorb
dec
lret
out
push
lret
popf
pop
cmp
push
fsubl
inc
add
sarl
inc
cli
jbe
xchg
push
jmp
mov
dec
pop
dec
fidivrl
and
add
xor
and
flds
das
rolb
pop
mov
pop
dec
ret
iret
mov
scas
mov
aas
dec
gs
cmp
adc
add
mov
loopne
or
cmp
stos
les
out
push
push
fstps
fildl
pop
cltd
insl
adc
push
push
dec
add
or
pop
dec
mov
jmp
dec
or
sbb
add
sbb
push
pop
cltd
push
mov
aas
jmp
sbb
out
stos
push
push
adc
popa
add
jl
popa
jnp
lock
fimuls
neg
jmp
mov
push
push
fadds
push
pop
fwait
jnp
stos
mov
push
fdiv
xor
jo
fisubs
cmp
jg
iret
pop
sbb
pop
daa
jne
mov
lret
daa
pop
je
add
jmp
mov
jmp
and
add
cltd
cmp
pop
dec
je
jmp
notl
mov
dec
iret
mov
lea
rorb
dec
push
movsl
push
xchg
adc
fnstenv
cmpl
jl
neg
mov
lds
cmpsl
sub
push
in
push
jmp
sarl
aaa
cmp
movzbl
test
test
cmp
or
fisttpl
add
and
inc
add
xor
xor
adc
pop
xchg
cs
aaa
sub
push
add
sbb
sub
xor
rcll
shlb
out
addr16
imul
in
loop
inc
rcr
cmp
icebp
add
cmp
xor
jb
call
dec
imul
lahf
test
mov
daa
and
scas
or
mov
pusha
test
cmpb
xor
out
or
or
hlt
jmp
pushf
cmp
push
mov
cmc
pop
scas
adc
mov
lahf
in
pop
mov
data16
mov
pop
sub
test
push
adc
adc
xchg
sbb
pusha
repnz
gs
incl
xor
inc
cld
in
push
xlat
mov
mov
pop
adc
cld
jns
jo
in
xor
pop
outsl
lds
mov
inc
xchg
loopne
add
mov
jnp
xchg
rorb
inc
shl
mov
leave
add
lret
adc
or
jmp
sub
or
sub
scas
enter
test
lret
xchg
dec
xlat
jmp
arpl
push
fisubl
in
push
mov
jmp
xchg
out
or
add
insl
das
jp
cmp
sub
pop
jbe
push
xlat
ret
mov
push
push
xor
mov
les
xchg
andl
int3
repnz
push
stc
jmp
sub
or
adc
jmp
sub
insl
leave
add
push
adc
inc
out
and
push
mov
pushf
add
xor
test
sti
jns
mov
cmpsb
and
sbb
inc
push
in
and
cmpsl
dec
movsl
pop
jmp
cmp
jne
cmc
loop
jecxz
pushw
xchg
jbe
add
inc
push
loopne
push
jnp
adc
cltd
pop
jmp
lret
mov
add
jmp
jae
call
mov
add
inc
or
pop
ljmp
add
popa
out
leave
lds
andb
dec
insl
in
inc
lock
pop
cli
or
data16
sbb
add
push
rorb
sub
cmpb
mov
sbb
rcrl
jb
mov
std
sub
std
mov
pop
fldcw
xor
add
test
and
mov
les
jmp
repz
mov
or
cmpb
and
dec
loope
pop
movsb
xchg
sbb
je
push
mov
dec
not
cwtl
xor
pushw
ljmp
xchg
mov
push
add
inc
inc
stos
sub
rol
mov
in
out
fildl
pop
push
mov
pop
add
arpl
mov
fwait
mov
movl
mov
gs
pop
push
jnp
out
sub
mov
ljmp
loope
inc
xor
xchg
lret
pop
add
es
sub
jg
add
mov
xor
sbb
lds
in
and
mov
popf
jnp
xchg
les
scas
mov
xchg
mov
xor
shr
pusha
push
or
jmp
jmp
mov
es
push
lahf
lock
xchg
int
and
mov
les
loopne
push
add
push
cmp
and
and
out
jp
es
aas
test
in
or
ljmp
mov
jle
push
test
or
in
jae
push
incl
adc
add
ret
out
mov
xchg
push
push
xchg
leave
mov
popa
imul
hlt
subb
sbb
or
push
lods
jmp
rclb
shl
mov
testb
fwait
and
sub
push
loop
jle
lret
ja
inc
add
call
ss
xor
out
ljmp
loop
fldenv
mov
or
call
mov
ret
push
jecxz
sbbl
and
aaa
repz
add
xor
mov
lock
ficoml
cmpb
jge
pop
add
jmp
pop
add
loop
cmp
mov
add
push
les
adc
iret
adc
pop
rcll
dec
pop
mov
pop
sub
add
mov
test
lcall
pop
pop
xchg
pop
pop
mov
or
cmpsb
mov
leave
out
and
aaa
sbb
and
icebp
add
cmp
stos
insb
lahf
icebp
pop
inc
std
jg
push
enter
jp
sub
shlb
sbb
push
cmp
jne
loopne
push
mov
jb
adc
bound
stos
or
call
scas
mov
pop
repnz
adc
cs
out
and
xlat
mov
or
pop
or
subb
pop
inc
out
inc
push
rcrl
dec
scas
popf
addl
push
subps
in
add
add
jg
std
add
std
fs
dec
scas
mov
push
jmp
cs
ds
or
push
dec
mov
movsl
icebp
push
sahf
aad
shl
xor
fwait
xchg
add
push
subb
mov
iret
cwtl
mov
add
jbe
push
dec
sub
enter
pop
ljmp
mov
mov
fists
cmp
mov
inc
lods
inc
repz
scas
and
lahf
ret
aam
xchg
jo
add
lds
adc
mov
dec
jmp
imul
adc
mov
cltd
inc
nop
sbb
mov
or
push
push
mov
cmpsb
pop
rol
lret
call
mov
hlt
fidivs
pop
int3
or
jmp
mov
js
xchg
jns
enter
dec
out
ds
cmp
loope
imul
hlt
nop
into
inc
js
pusha
jae
jp
pusha
pop
cs
or
mov
add
mov
or
xor
pusha
pop
xor
jg
imul
stc
add
push
lahf
pop
ljmp
incb
pop
dec
pop
or
shl
cmp
add
sub
leave
pop
sub
mov
inc
mov
lahf
dec
push
jecxz
or
sub
dec
push
or
mov
dec
jmp
in
iret
pop
mov
jae
jmp
scas
fwait
inc
pop
xchg
subb
std
movsb
stos
mov
mov
xchg
push
add
or
sub
roll
push
sub
sub
cmp
xchg
movsb
mov
ret
sarb
add
or
sub
insl
xor
add
nop
mov
ret
pop
shlb
xchg
lock
into
pop
popf
pop
out
push
sbb
add
incb
imul
adc
push
sbb
pop
mov
mov
or
loop
scas
bound
pop
and
icebp
inc
cmp
push
cmp
aad
jns
pop
or
rorb
push
mov
mov
ds
sarb
outsl
adc
lock
mov
push
and
xchg
cwtl
dec
cmp
inc
dec
scas
sub
push
xchg
int
test
sarb
add
lret
dec
mov
mov
notl
mov
and
pop
scas
jge
or
out
gs
mov
sub
pop
xchg
sbb
pop
mov
push
pop
sbb
in
jp
je
lret
cli
sbb
push
jl
and
jns
scas
adc
shlb
pop
cmp
push
sti
or
push
or
add
cmp
gs
icebp
or
adc
push
orb
sbb
cli
insb
int
cs
push
xchg
fiaddl
rol
xor
aas
push
fwait
or
push
sbb
sub
lahf
mov
addl
std
rorb
xor
inc
lret
not
push
mov
into
push
mov
iret
pop
sbb
cmp
mull
lahf
loopne
or
or
mov
mov
sub
add
movaps
or
shl
pop
and
mov
clc
jnp
rorb
stos
popa
add
jbe
adc
das
in
das
mov
movq
mov
xchg
jmp
mov
in
in
jmp
mov
cmpsb
cmp
fisttpl
sti
adc
pop
popa
out
fs
mov
jnp
cmp
and
das
push
hlt
or
or
xchg
push
inc
add
jmp
icebp
imul
jg
fisttpll
sarb
es
dec
fildl
lcall
repnz
loope
pop
cmp
sub
gs
and
hlt
mov
sbb
push
je
pop
mov
das
mov
test
out
adc
mov
push
clc
inc
scas
mov
fs
loopne
sub
lods
dec
mov
mov
adc
inc
inc
cmpsl
nop
pop
sti
push
xchg
ja
dec
xchg
adc
sub
cltd
icebp
inc
divl
pop
bound
push
mov
xor
data16
and
aad
mov
mov
sub
pop
addr16
mov
loopne
cmp
push
dec
or
out
or
add
movsb
adc
repz
and
ret
lock
add
mov
test
arpl
or
out
nop
shlb
dec
add
or
add
pop
pop
mov
mov
push
rclb
subl
inc
and
dec
push
enter
push
mov
scas
ljmp
and
adc
cmp
call
and
lods
xor
mov
sti
in
in
mov
and
shl
stc
addl
or
jmp
stos
pop
aaa
imul
dec
inc
test
movsb
mov
xor
ret
jle
cmpsl
in
add
loop
push
pop
das
adc
fyl2x
pop
mov
sti
dec
mov
and
jge
or
push
sahf
xor
loop
popf
dec
push
popa
add
dec
sub
pop
dec
ljmp
push
dec
push
cmpsl
rcl
je
xchg
fwait
or
jecxz
rclb
mov
aas
icebp
addr16
xor
dec
adc
imul
sub
add
jmp
imul
push
divb
mov
insl
cwtl
daa
xor
push
scas
xchg
mov
mov
cwtl
jmp
sbb
incb
dec
pop
scas
mov
and
xlat
xchg
push
sahf
mov
jge
pop
or
pop
loop
dec
mov
sbb
movsl
hlt
mov
out
mov
pop
lcall
and
adc
push
xor
fwait
into
int3
pop
js
fcmovb
jo
nop
loop
cmp
mov
xchg
ljmp
test
fcomps
jmp
ss
mov
pop
clc
or
sub
cs
bound
std
jp
push
add
dec
jg
testb
jno
into
pusha
loope
insb
push
dec
ss
les
in
cmp
dec
sbb
cmp
pop
sti
mov
cs
dec
mov
rcll
movsb
inc
mov
push
stc
fmul
in
out
add
dec
mov
sub
add
mov
and
das
mov
fimull
or
mov
orl
ret
outsb
cmc
jnp
jecxz
insl
and
mov
das
das
fwait
jo
sbb
pop
sbb
jbe
insl
mov
inc
out
add
jmp
cmpsb
pop
bswap
xor
sti
and
dec
jae
inc
or
xor
lods
push
xchg
cltd
mov
pop
xor
ds
sub
or
insl
push
or
add
dec
push
dec
pop
mov
add
mov
push
push
pusha
add
sub
test
pop
push
daa
mov
xchg
aad
xchg
jg
dec
pop
roll
subb
dec
divl
jne
add
push
clc
ja
fmulp
repz
adc
call
push
sub
sub
loope
das
or
sub
and
mov
lret
and
inc
cs
cmc
xchg
push
stc
pop
lcall
or
out
fnstsw
addr16
sbb
loopne
jmp
adc
push
incl
adc
lcall
dec
push
mov
aam
les
lds
push
dec
jmp
repnz
and
mov
and
jmp
imul
daa
dec
fisttpll
mov
shr
outsl
fidivrl
pop
fisttpll
mov
jmp
mull
lods
out
push
jge
push
test
call
mov
xchg
mov
pop
test
pop
cli
mov
popl
pop
or
neg
rcr
dec
add
mov
or
and
jae
or
cs
mov
js
and
xchg
add
cltd
push
pusha
xchg
or
add
jb
add
push
jne
pusha
or
sbb
and
push
mov
sti
and
add
iret
adc
pop
mov
mov
pop
out
add
cld
fiadds
jb
sub
add
add
jg
jnp
rol
dec
and
sub
or
xlat
mov
clc
test
push
cmp
pop
mov
dec
and
and
dec
insl
jle
and
aam
in
jle
shr
sub
jne
sbb
push
jg
jns
cwtl
adc
and
pop
pop
loop
popf
idivl
cld
push
pop
mov
mov
dec
cmc
mov
xchg
mov
fs
add
stos
loope
jns
xchg
mov
lds
or
pop
xchg
rolb
push
mov
inc
pop
inc
neg
dec
pusha
or
push
adc
cmp
fs
add
test
inc
jmp
dec
push
leave
jne
add
cmp
ficoms
addr16
add
ljmp
add
in
call
std
push
test
sub
inc
aas
jo
mov
mov
arpl
pop
push
mov
xchg
push
mov
loopne
inc
cmp
pop
mov
adcb
dec
push
add
mov
push
inc
lahf
push
stos
add
gs
fsubr
sbb
pop
add
out
out
xlat
inc
ret
fstl
nop
adc
rorb
loop
jmp
int3
xor
aas
add
jl
nop
push
add
push
sub
scas
daa
mov
insl
sar
xchg
cmc
sbb
jp
sub
outsl
out
shll
sbb
idivb
js
pop
cmp
and
pop
outsb
ds
js
jmp
mov
ljmp
divb
rcrb
test
sub
fmuls
loope
fsubrl
jns
dec
jae
add
xchg
push
inc
xchg
pop
sbb
lock
cmp
adc
test
add
in
and
inc
jbe
pop
sbbb
lods
ljmp
pusha
out
das
push
roll
or
add
push
test
adc
mov
ss
dec
pop
xor
sbb
or
sub
sub
dec
aaa
js
inc
jmp
xor
jg
push
shl
cmc
xchg
inc
inc
add
jl
lock
mov
test
data16
cwtl
sbb
sbb
mov
adcb
push
int3
mov
or
pusha
ss
shr
jmp
or
add
mov
std
bnd
loope
addr16
in
test
iret
push
push
jmp
lods
insl
pop
jmp
repz
mov
xor
mov
lods
aam
or
fwait
cs
test
add
push
mov
shr
jmp
lcall
fdivl
popa
sarw
xchg
mov
mov
cs
xor
xor
fyl2x
or
int
into
nop
xor
out
mov
test
dec
pop
pop
mov
sub
sbb
xor
pop
adc
and
push
add
adc
mov
push
jp
inc
fbstp
sub
jmp
das
into
mov
adc
stos
in
push
mov
vpsllw
icebp
add
out
dec
mov
pop
loop
imul
cwtl
pop
xor
cwtl
ljmp
cmp
sub
stos
inc
std
pop
ja
xor
in
add
aaa
sub
or
or
sti
push
and
sbb
jb
ficoms
push
movsl
das
scas
or
dec
adc
rclb
xchg
push
in
fstps
push
subl
jg
mov
add
hlt
sub
arpl
lret
or
lods
iret
cmp
sti
cwtl
mov
inc
mov
cmpb
or
aas
das
jnp
lock
lret
into
out
std
dec
jne
push
dec
outsl
daa
mov
and
jmp
mov
mov
add
push
sub
das
daa
aas
cld
jg
pop
jmp
jl
jno
sbb
xor
out
mov
int
pop
pop
push
stos
push
aam
outsb
shrl
pusha
add
loopne
xchg
push
cmpsb
cmp
pop
push
ds
and
cmp
mov
dec
cld
inc
pushf
insl
push
push
mov
pusha
lret
dec
add
rolb
andb
negb
jecxz
sbb
hlt
jge
jmp
faddl
repz
test
icebp
add
or
jp
push
mov
sub
and
mov
lods
jecxz
dec
les
sub
adc
push
cmp
jmp
lods
sub
sub
xor
sarb
popf
pop
fiadds
icebp
das
inc
jbe
loop
imul
adc
jo
rcrb
dec
sub
sbbb
add
inc
shr
test
jmp
xchg
roll
out
fldl2t
add
pusha
pop
xchg
sbb
pop
pop
and
flds
mov
add
jmp
es
inc
into
push
pop
lret
stos
fsubr
xchg
roll
adc
movsb
push
push
jl
inc
imul
es
out
sbb
jmp
enter
fbld
mov
adc
pop
mov
dec
jl
div
jge
lods
and
pop
fadd
ja
xor
inc
mov
sub
scas
or
nop
xchg
lcall
push
fldcw
and
leave
out
test
inc
lock
loope
fcomp
jmp
or
push
sbb
or
xor
and
xchg
inc
hlt
test
in
jge
pop
sbb
shr
rorb
int
add
sub
add
jge
shrb
pop
stc
inc
adc
sub
or
pop
insb
add
orb
mov
cmp
push
add
ret
pop
cmp
and
sub
jb
ja
popf
inc
lea
rolb
pop
pop
insl
add
mov
outsl
sub
jmp
or
pop
rol
pop
xor
xchg
mov
mov
mov
pop
dec
mov
pop
or
xor
mov
sbb
mov
adcl
jg
movsl
pop
adc
cs
push
ja
mov
dec
std
adc
push
or
jmp
push
notb
adc
mov
add
and
popa
iret
int3
pop
dec
sub
add
mov
add
dec
divb
mov
push
or
adc
sbb
ds
push
popf
test
jmp
or
push
inc
pop
jmp
nop
cmp
gs
xchg
aas
movsb
lock
sub
mov
dec
push
into
fwait
xchg
decl
mov
pop
push
je
sbb
imul
inc
fdivrs
push
and
ds
in
out
sbb
push
or
jmp
push
adc
mov
inc
daa
enter
adcb
sbb
push
inc
or
pop
dec
arpl
aam
sbb
adc
xor
mov
xor
mov
lea
add
jl
fxch
and
cmp
ljmp
mov
jmp
fcomp
popf
pop
add
sub
add
push
push
adc
inc
pop
cltd
push
inc
mov
mov
ret
int3
pushf
mov
mov
daa
xchg
adc
shr
dec
je
push
and
pop
in
pop
incb
sbb
sbb
imul
pop
add
and
dec
orb
sbbb
cmc
dec
rcl
pop
js
mov
mov
jae
imul
sub
push
popf
loop
ss
aas
shlw
cmp
xorb
stc
adc
pop
sub
adc
dec
in
pop
loop
sub
jmp
pushf
rcr
jo
int
ja
mov
cmp
iret
cmc
and
mov
dec
and
sub
daa
push
or
add
adc
mov
mov
dec
repnz
les
lret
mov
inc
cmp
xchg
mov
shll
aam
call
test
jmp
lds
xchg
aaa
and
lahf
pop
ja
addb
mov
popf
call
xor
aad
sti
sahf
sub
push
mov
mov
and
pop
jg
xor
push
mov
outsb
imul
mov
scas
sub
subb
jne
push
outsb
movsl
mov
add
push
jae
in
shrl
inc
xchg
not
xor
add
stos
mov
and
adc
outsb
pop
test
adc
cmp
dec
nop
sbb
add
add
std
pop
ds
aas
jecxz
and
rorl
pusha
push
jmp
adc
test
jmp
mov
andb
pop
cld
xor
push
mov
sub
sahf
sub
loop
jno
adc
cmc
ret
jne
jmp
push
push
inc
xor
imul
mov
add
pop
fldenv
jmp
mov
mov
add
repz
add
les
dec
cmp
xchg
adc
push
xor
mov
mov
stos
and
pop
cmpsb
adc
pop
dec
mov
pop
mov
cmc
mov
repnz
add
push
mov
sub
and
cmp
testb
inc
jge
mov
and
jmp
jne
sti
test
pop
or
pop
fnstcw
mov
das
xlat
pop
or
jb
and
cs
push
mov
lds
jmp
in
out
ret
aad
cmp
les
mov
cmc
mov
addb
push
pop
cwtl
mov
mov
cmp
repnz
and
xor
sub
inc
sub
jne
popf
or
lods
push
or
and
addb
repz
jp
add
mov
sbb
es
repnz
xchg
scas
subl
pop
mov
jmp
mov
add
xor
int
xchg
mov
lahf
in
fisttps
inc
and
daa
nop
pop
pop
mov
xchg
pop
ds
sbbb
cs
outsb
inc
lods
je
push
sbb
ja
and
sub
out
add
jbe
push
out
insl
pusha
jmp
or
into
aas
std
das
or
loope
shlb
pop
pusha
cmp
inc
push
push
inc
adc
aad
adc
cmpsb
sbb
icebp
fdiv
daa
mov
pop
xchg
insb
push
je
or
hlt
adcl
pop
pop
pop
push
add
fcoms
push
out
pop
xor
pusha
ret
clc
push
xlat
and
rcrl
dec
push
hlt
andb
push
push
xchg
lcall
or
stc
or
push
xor
cmc
add
mov
xchg
cmp
xor
dec
xchg
sbb
data16
inc
mov
sbb
sub
mov
sub
addr16
inc
add
mov
pop
pop
mov
iret
pop
andl
outsb
adc
pop
cs
mov
and
push
and
lea
mov
cmp
fwait
mov
dec
push
das
sti
aam
scas
sub
push
dec
add
inc
and
push
pusha
or
lret
mov
cmpsb
pop
outsb
lcall
arpl
mov
push
add
mov
imul
inc
add
addb
pusha
arpl
jmp
cmp
test
pop
sub
dec
movsl
dec
sub
lods
or
mov
incb
popf
push
dec
pusha
ja
xor
dec
sbb
test
add
mov
push
pop
nop
sub
es
test
xor
incb
pop
ja
xchg
repz
pop
sub
pop
and
pop
rorl
xor
es
inc
xor
jge
lret
add
push
jmp
cld
jae
inc
inc
sub
repnz
push
xchg
sbb
sti
pop
jg
sbb
addr16
cmpsb
xor
push
pop
or
jb
iret
lock
inc
mov
mov
pop
pop
sub
dec
add
scas
adc
or
arpl
cmp
pusha
or
cmp
adc
insl
push
jmp
or
jl
sbb
pop
out
loop
les
clc
popf
leave
mov
lahf
pop
mov
mov
stc
dec
xchg
notl
push
pop
fsts
je
pop
pop
stos
add
cmp
sgdtl
loop
mov
and
lds
out
dec
jl
inc
jb
sbb
inc
sub
outsb
aam
scas
loope
cmpsl
or
mov
add
clc
jmp
outsb
lods
xor
push
xchg
push
jge
and
or
add
and
inc
add
pop
xor
subl
shl
push
js
adc
jb
jmp
mov
mov
icebp
out
pop
aam
push
inc
mov
pop
jmp
imul
cltd
out
mov
mov
xchg
mov
rclb
dec
xorb
mov
adc
das
xor
ljmp
inc
imul
inc
rcll
out
mov
add
mov
xor
fcomps
push
mov
mov
mov
push
pop
aad
das
scas
je
mov
sub
inc
jnp
and
cmp
push
mov
push
and
mov
push
jmp
add
pop
xor
pop
inc
hlt
cmp
xchg
frstor
mov
ja
sub
mov
out
daa
xchg
cwtl
sbb
fsubrl
sahf
cmp
pop
dec
inc
mov
jae
jns
shl
mov
inc
inc
inc
jl
movsl
loop
jp
or
or
test
dec
int3
mov
inc
bound
or
sbb
add
mov
mov
mov
aad
add
cmp
shrb
mov
xor
dec
fdivp
lds
xor
or
leave
inc
jle
dec
add
xchg
adc
xchg
and
lret
add
outsb
inc
lea
sub
push
jp
push
nop
mov
and
ficomps
test
push
xchg
add
sbb
pop
fucom
pop
out
jb
arpl
lods
push
out
mov
push
out
fnstcw
jbe
add
cmp
add
ja
mov
push
dec
pop
mov
and
dec
sub
push
pop
rolb
pop
push
enter
add
xor
inc
mov
pusha
sub
or
push
sti
sbb
sub
or
mov
lds
stos
jecxz
iret
mov
mov
xor
not
xor
popf
rorb
aaa
xorb
int
inc
std
or
jmp
push
pop
push
std
movsl
xchg
inc
or
cmpsl
daa
lret
pop
fstpl
and
mov
jmp
fmuls
mov
push
add
es
push
pop
jg
es
xchg
and
jp
out
mov
push
daa
push
faddl
lods
dec
push
cmp
xor
es
adc
add
mov
add
fiadds
xor
add
xchg
inc
ret
js
inc
inc
sub
repz
bound
push
repz
jmp
xchg
pop
mov
fadds
out
inc
xchg
xchg
dec
ds
push
sub
lea
mov
icebp
xor
mov
mov
inc
lds
mov
roll
repz
jb
dec
sub
add
insb
push
sbb
sbb
push
pusha
and
insl
jle
mov
inc
sti
mov
push
add
out
pusha
xor
stos
add
jmp
movsb
mov
inc
lock
sbb
jnp
sbb
jg
ds
std
shlb
fidivrl
mov
mov
add
sub
pop
shll
mov
neg
dec
in
jl
mull
pop
sub
xor
jbe
lods
pusha
cmp
sbb
addb
int
scas
loope
loop
pop
pslld
mov
add
pop
insb
or
cmp
cmp
cltd
push
inc
int
adc
shrl
jb
icebp
inc
dec
or
xor
shlb
add
add
testb
inc
loop
stos
xchg
int3
loopne
addr16
out
mov
and
sbb
in
cmpl
test
mov
xor
xchg
mov
mov
es
sbb
dec
out
test
pop
out
bound
rcl
shll
cmp
loopne
flds
shrl
push
xor
cmpsl
pop
and
cmp
bound
rcr
les
pusha
dec
lods
pop
test
pop
mov
stos
cmp
push
popf
mov
xlat
sahf
das
xor
adc
repz
in
cmp
adc
mov
jle
mov
push
rorb
cltd
adc
fs
fstps
in
lock
jl
sti
push
pop
incl
cmpsb
in
push
std
cmp
inc
adc
in
iret
sub
push
adc
jmp
adc
divl
jle
mov
loop
aam
mov
jl
les
sub
fdivrs
mov
negb
fstl
sub
mov
roll
add
pop
sub
jnp
xchg
addr16
push
out
mov
cmp
rclb
push
jmp
fsts
dec
or
or
adc
in
ret
neg
popa
jle
mov
pop
add
inc
mov
or
pop
or
jnp
das
add
bound
shll
test
add
into
jne
lods
sub
pop
ret
jmp
jns
das
mov
push
in
push
add
imul
jle
stc
add
jmp
pop
mov
push
jmp
push
inc
dec
jmp
fbld
int
mov
loopne
push
mov
insl
jnp
mov
push
jmp
and
and
cwtl
mov
sub
push
adcl
dec
push
cmp
xor
je
xor
inc
add
inc
iret
inc
sub
pop
pop
or
mov
add
outsl
cld
pop
pop
and
add
andb
subb
mov
ret
add
and
inc
dec
or
pop
addr16
or
mov
fidivrs
movsb
pop
cs
std
xor
jmp
push
xchg
orl
add
jecxz
or
and
xchg
xchg
cmp
push
xchg
cld
stos
mov
cmc
sub
rclb
stos
popf
fnsave
jns
stc
xchg
loop
mov
test
jge
cs
in
push
fsubr
xor
inc
and
mull
es
popl
pusha
push
adc
jne
aam
out
push
add
mov
push
ja
es
aaa
dec
loop
out
andb
jo
lods
cmp
ja
xchg
outsb
xchg
data16
xlat
cs
pop
dec
rcrb
out
jmp
lret
imul
and
mov
or
orb
push
nop
push
add
in
jp
ret
dec
adcl
pop
xlat
sbb
push
jae
jle
in
and
sub
fimuls
or
jmp
add
nop
add
xor
and
cs
out
sub
ds
cmpsb
pop
insb
xchg
sub
jb
rorl
adcb
cmc
rorb
jb
and
add
filds
stc
lock
adc
and
jl
inc
lcall
rdtsc
test
sub
cmpl
not
cli
clc
pop
jl
loope
jle
fsubs
pop
xor
pop
and
repnz
pop
pop
mov
xorl
add
mov
arpl
jno
add
and
lods
pusha
or
add
sub
sub
push
nop
fadds
les
pop
lahf
shrb
dec
and
imul
into
pop
testl
test
pop
ljmp
push
in
out
dec
fwait
call
insb
mov
and
sub
int
add
loop
lret
cmp
xor
sub
push
add
push
scas
test
jb
sub
movsb
inc
shr
inc
pop
and
mov
inc
sbb
push
cmpsb
or
push
jne
push
cltd
fxch
popf
sbb
jne
out
pop
push
clc
mov
or
pop
push
mov
and
das
icebp
xchg
out
xor
sbb
shll
jg
loope
lock
mov
mov
call
sti
inc
or
scas
int
imul
xchg
add
in
pop
lahf
sub
stos
call
pop
push
pop
sub
mov
pop
leave
mov
pop
mov
push
cmp
add
popa
ficomps
add
jge
xorl
push
pop
add
mov
rcrl
sub
cmc
jmp
xchg
outsb
dec
mov
adc
ret
dec
pop
jmp
pop
sbb
sub
mov
daa
and
pusha
insl
add
inc
or
inc
sub
adc
pop
loopne
add
mov
push
adc
test
xchg
push
jns
scas
adc
imulb
cwtl
rcrb
mov
cli
pop
int3
xor
leave
xchg
dec
mov
mov
cltd
push
mov
jg
pop
sbb
or
daa
andb
inc
fistps
push
arpl
dec
testl
pop
std
movb
lcall
add
xor
fwait
xorb
scas
add
test
adc
call
dec
push
cmp
push
hlt
lret
pop
repnz
cwtl
push
mov
scas
sbbb
cltd
fmuls
add
pop
add
movsb
mov
dec
add
sbbb
push
ja
pop
sbb
mov
dec
inc
roll
stc
cmpsl
and
xor
fs
stos
cmp
add
and
jmp
xchg
into
lahf
mov
push
fdivl
jge
inc
imul
push
in
push
insl
adcl
cld
adc
push
mov
jnp
in
xchg
pop
cli
je
movsl
mov
ret
pop
sub
pusha
imul
dec
pop
dec
mov
imul
ja
cmp
testb
mov
jmp
add
mov
sub
rorl
shll
cmp
mov
and
fdiv
cmp
xor
popa
jmp
jle
push
jmp
fsub
cmp
push
jae
add
jmp
andl
mov
add
jmp
in
inc
cmpsb
inc
xor
das
mov
lea
hlt
sub
cwtl
shll
test
out
jmp
mov
lahf
mov
in
stos
pop
clc
pop
mov
add
shl
xchg
jmp
lret
inc
jmp
push
add
push
gs
sub
or
pop
xor
add
cwtl
and
push
sub
add
adcl
xchg
cs
std
mov
daa
jge
les
pop
mov
mov
jbe
pop
mov
lcall
pop
dec
add
fistl
sti
clc
push
dec
popf
mov
daa
jne
cmp
push
mov
push
mov
rorl
std
push
add
pusha
enter
imul
mov
in
rolb
inc
adc
add
mov
sub
add
mov
mov
das
mov
cmpsl
jp
sahf
sbb
and
add
push
add
sub
lock
fdivrl
pop
add
shrl
and
push
adc
or
mov
inc
into
pop
jge
xchg
lods
jle
repz
pcmpgtw
es
xchg
clc
cld
add
xor
outsl
call
xor
iret
lret
test
adc
into
dec
mov
mov
push
sbb
dec
add
push
popa
hlt
and
inc
jnp
xchg
dec
jmp
and
adc
dec
pop
orb
xor
pop
mov
add
loop
mov
lods
cmp
arpl
cmp
adc
xor
lahf
dec
push
mov
adc
lds
add
cmpsl
insl
mov
adcb
andb
in
inc
xchg
inc
jle
xchg
pop
rcrb
push
push
mov
outsb
gs
lret
pinsrw
iret
mov
cld
push
out
adc
cmp
cwtl
inc
dec
jne
xor
mov
sti
jno
pop
das
dec
rcrl
lret
dec
pop
les
loope
sub
jl
jp
jmp
sub
arpl
mov
inc
inc
inc
sarl
push
xor
or
aas
fldl
hlt
or
subl
in
add
xor
aas
clc
stc
movsb
test
lods
nop
lock
adc
sar
add
dec
xor
cmp
dec
mov
jmp
aaa
es
hlt
lods
jae
lods
fnsave
and
jg
insb
jb
cmpl
clc
fldl
fs
sarl
xchg
ds
sub
dec
add
mov
xchg
arpl
add
sbb
insl
mov
push
push
cli
pop
popf
shlb
sbb
or
add
fcoml
add
pushf
data16
mov
sbb
jbe
dec
pusha
cmp
add
call
ss
add
dec
mov
add
xchg
mov
cmc
adcl
and
or
movsb
cmp
adc
or
xchg
movsb
sbb
sub
cmpsl
clc
dec
stos
icebp
jg
lods
sub
and
jnp
mov
ret
jp
inc
ret
push
jl
js
cmp
sahf
sub
or
add
adc
mov
lea
push
dec
xor
pusha
mov
cmp
add
lock
jno
popf
bound
xorl
jns
mov
in
iret
inc
fcompl
dec
mov
in
jmp
stos
add
jae
dec
push
push
mov
out
mov
push
push
mov
add
test
or
adc
in
xor
rol
lret
fiadds
pop
icebp
out
xor
inc
pusha
mull
mov
in
or
in
jge
xor
mov
cmpsb
mov
ss
dec
xchg
lds
ret
xchg
imul
lea
jp
orl
addr16
push
add
dec
ret
and
sub
sub
daa
js
jo
add
pop
gs
fsubrp
or
enter
cwtl
aad
dec
imul
xor
adc
mov
fsts
adc
or
nop
sbb
sub
add
rcrl
add
movsl
xor
or
jecxz
jmp
in
stos
js
jmp
xchg
neg
js
cmp
test
cmpsl
sub
xor
dec
insb
mov
ds
xor
movb
scas
lret
push
cmp
cld
jae
movmskps
in
mov
icebp
xor
inc
push
imul
add
repnz
jo
mov
cmpsb
in
mov
xchg
mov
std
ror
jecxz
adc
pop
pusha
pusha
sbb
xlat
jo
je
jb
stc
jl
push
mov
pop
inc
imul
mov
jbe
adc
jns
jmp
push
dec
or
or
test
rcrl
rep
add
jecxz
cs
rcrl
pop
mov
pop
push
in
cld
jp
cmp
or
jg
inc
ret
cld
mov
js
bswap
je
jl
iret
pop
aad
xor
push
add
jns
xor
xchg
xor
sub
js
and
fs
sub
repnz
test
pop
push
dec
push
ljmp
xor
xchg
jmp
and
xor
dec
int
adc
cs
aaa
les
mov
xlat
or
adc
ljmp
pusha
cmp
jle
xchg
sub
movsb
inc
adc
xor
pusha
inc
jp
pop
xor
mov
pop
dec
xor
sub
inc
lret
shll
adc
cld
pop
jmp
test
shl
push
or
testb
out
pop
sbb
jp
cmp
testb
mov
jmp
lds
mov
push
add
jl
stos
test
scas
lds
xchg
in
adc
mov
pop
jns
cs
mov
push
insb
jb
sti
cmc
mov
or
add
sbb
or
inc
outsl
xchg
add
lret
adc
rcrl
push
shrl
add
je
and
add
xor
stc
xchg
sti
mov
push
mov
mov
xchg
push
ljmp
sub
adc
in
mov
out
repnz
testl
cld
pop
dec
fldlg2
and
mov
pop
dec
cmc
outsl
pop
and
sbb
add
ja
cld
popa
mov
jo
popf
andb
insl
pop
roll
xor
mov
or
mov
mov
pop
je
lea
jmp
push
dec
push
pusha
xor
xor
push
jmp
add
imul
fimull
ss
divb
repz
jp
sbbb
pop
push
or
push
pop
and
jmp
enter
mov
test
push
cmp
test
jg
xchg
daa
push
xchg
cmp
outsl
jle
cmp
orb
repz
inc
jmp
and
xchg
mov
adc
outsl
adc
add
cli
inc
stc
jmp
push
stos
clc
push
in
pop
sbb
mov
and
add
sub
out
dec
fsubp
jl
push
adc
sub
cmp
xchg
and
mov
pop
xchg
push
fnstenv
cmp
ja
push
jmp
inc
dec
add
xchg
mov
mov
out
or
jp
dec
sbb
fs
repnz
dec
call
mov
and
leave
and
push
mov
imull
jmp
lret
push
iret
mov
shlb
push
cmp
add
cmp
add
pop
push
xor
testb
push
and
std
cld
lcall
lods
imul
jg
jns
inc
ds
and
push
scas
push
inc
movsl
sub
fistps
sub
aaa
add
shrl
popf
mov
std
movsl
push
mov
daa
clc
and
movsl
fistps
imul
cmp
mov
xor
dec
add
shll
jmp
cmp
cmp
and
jge
jae
nop
jp
scas
je
cmc
and
pop
das
js
pop
sub
popa
add
jbe
ljmp
pop
loope
pop
mov
outsl
sbbb
into
push
jnp
outsb
add
push
pop
gs
or
jp
adc
test
pop
add
subb
int
imul
or
push
add
js
mov
jp
add
test
lea
test
xchg
daa
push
icebp
rcrb
mov
adc
cmp
and
shr
shll
add
pop
cmp
push
push
sub
push
xchg
rcl
add
dec
sarb
insb
mov
test
sub
ljmp
adcb
xor
push
pminub
icebp
sbb
mov
jo
xchg
stos
insl
cld
xchg
scas
push
orb
insl
jmp
sub
pop
loopne
mov
dec
test
mov
or
shr
lods
popa
push
jb
cld
push
inc
mov
jle
incb
aaa
mov
pop
fs
sarl
or
lcall
fnstenv
add
xorl
clc
add
mov
int3
push
nop
jp
shl
jns
add
pop
neg
icebp
in
mov
in
imul
jp
xor
rorb
leave
std
aas
jb
hlt
xchg
cmp
and
push
pop
stc
adc
inc
out
push
push
sub
and
push
push
flds
and
adc
xchg
jb
or
mov
scas
inc
cmp
je
mov
jp
insl
cmp
testl
mov
arpl
rcrb
in
addr16
add
push
rsqrtps
pop
sub
dec
and
push
and
cli
mov
inc
xchg
jmp
lods
xor
lods
adc
cld
daa
hlt
scas
mov
test
jmp
jb
inc
pusha
xor
int
and
or
add
xchg
cld
push
or
xor
jnp
pop
fsts
mov
scas
pop
lds
add
or
bound
jl
les
pop
dec
cmp
xchg
push
cli
push
mov
push
dec
imul
push
fwait
mov
loopne
sbb
adc
inc
pop
add
repnz
nop
xor
xor
stos
push
test
notb
push
inc
out
lds
fimuls
popa
pop
push
mov
sti
nop
jmp
mov
mov
cld
das
insb
sub
pusha
cmp
cmpsb
xlat
cmpl
ja
dec
add
not
push
or
cmc
push
xor
add
xor
fldl2t
sbb
lret
shr
je
leave
mov
jne
in
je
or
xchg
pop
pop
out
outsl
xor
push
mov
add
add
xor
xchg
shll
out
xchg
shll
sub
adc
shll
cmpsl
cwtl
add
test
or
xchg
mov
xchg
movsb
and
push
shl
idivb
ljmp
pop
int3
repz
xchg
aad
scas
or
adc
movsb
mov
pop
or
cmp
pop
bound
cld
stc
jbe
jmp
jecxz
stc
jle
and
sbbb
xor
jmp
mov
fwait
ret
xchg
sub
sti
fwait
add
ret
mov
xor
ljmp
pusha
jne
call
out
std
loopne
int
sub
xor
sbb
push
pusha
ss
jbe
add
mov
popa
lahf
pop
dec
add
pop
cmp
jne
and
sub
xchg
add
lock
in
mov
sub
inc
dec
test
cmpsb
pop
pop
jmp
out
repnz
sub
nop
sub
push
inc
les
test
insl
xchg
and
or
xchg
sub
jmp
sarl
mov
push
mov
lahf
dec
or
add
sti
ss
sub
or
push
push
filds
mov
stos
adc
loopne
lds
ljmp
ror
push
in
repz
add
or
jmp
pop
and
repnz
das
fisttpll
addr16
pop
and
shr
mov
sub
pop
dec
stc
in
mov
pop
shl
or
jbe
sbb
fisubrl
addb
aaa
enter
and
mov
lea
lret
pop
sbb
push
jg
imul
jb
pop
ja
and
adc
sub
xor
cmp
xor
push
cs
cli
xchg
cli
pop
adc
adc
or
cmp
push
out
nop
lods
mov
xchg
or
stos
push
or
or
adc
pop
inc
mov
test
add
movsb
jmp
int3
pop
xchg
xor
or
add
pop
pop
mov
push
jmp
add
jp
pop
ljmp
outsl
inc
push
push
jmp
add
std
or
hlt
mov
shrl
push
sub
imul
and
add
push
and
jne
adcb
mov
das
xor
call
imul
push
leave
fstps
inc
adc
jmp
scas
mov
sub
repz
stos
push
stos
nop
fnstsw
pushf
mov
clc
push
xor
or
push
addl
xchg
add
pop
dec
aas
push
test
lock
aaa
or
pop
cmp
sub
and
lret
lahf
sub
or
dec
cld
or
mull
shrl
and
adc
repnz
and
cmp
sbb
ds
rorl
inc
jne
out
push
ret
pop
push
cmp
insl
lret
cs
jb
ret
add
adc
inc
in
add
adc
cli
inc
pop
popa
adc
add
inc
push
push
mov
popa
adc
or
mov
add
jo
dec
or
sbb
adc
sbb
icebp
test
out
xor
add
add
shlb
xlat
out
xor
lods
add
xchg
or
xchg
jmp
sbb
sbb
pop
nop
pop
mov
add
adc
jnp
mov
xchg
push
jo
push
push
xchg
int
loopne
pop
in
in
cs
mov
lds
mov
lock
push
movsb
mov
in
test
sarb
dec
sbb
inc
pop
sub
xor
add
xor
fcomps
cmp
jmp
xor
jmp
mov
xor
fs
outsb
xor
pop
xor
insb
push
out
enter
mov
outsb
mov
out
cmp
jb
jp
add
jmp
outsl
add
in
gs
push
mov
shl
das
mov
push
pop
inc
imul
pop
push
ret
repnz
out
mov
xchg
push
xchg
ja
push
movsl
lahf
lret
jns
shr
cli
cmpsl
pop
jge
adc
push
sbb
fcompl
jmp
xchg
in
loopne
nop
push
int3
inc
pop
push
mov
mov
mov
push
sbb
xor
jbe
inc
adc
pushf
or
repnz
cmc
insl
sub
or
out
or
jecxz
inc
sbb
xor
push
cmc
and
outsb
addr16
xchg
push
push
lret
addr16
shl
sti
daa
pop
std
fcomps
imul
lods
loope
aas
in
mov
xchg
adc
lcall
dec
sub
jp
mov
sub
pop
mul
sub
das
clc
mov
or
mov
hlt
push
pop
aaa
dec
or
outsb
inc
je
fs
icebp
mov
outsl
subb
adc
arpl
in
rol
pop
cmp
popf
jg
fcomip
jg
dec
fisubrs
bound
push
and
loope
cs
inc
stos
and
aas
dec
cld
xlat
xchg
push
repnz
pop
jbe
shl
cltd
jb
inc
push
enter
pop
insb
rcl
push
jnp
rorl
loope
jbe
adcb
outsl
aas
or
aaa
or
jbe
inc
cmpb
cmp
adc
and
enter
outsl
dec
cmc
cmp
push
repz
out
into
mov
mov
push
xchg
push
cltd
dec
push
mov
xor
push
xchg
push
xor
popl
jbe
rclb
adc
xchg
dec
push
cmp
or
xor
and
pop
jmp
adc
repz
insb
fstpl
jecxz
inc
ljmp
or
mov
std
popa
cmpsl
sti
mov
pop
movsb
in
incl
or
daa
pop
cwtl
ret
xchg
jecxz
out
lds
or
xchg
fdivr
or
outsl
mov
sub
push
inc
jmp
push
cs
push
jg
sti
adc
add
xor
subb
inc
icebp
inc
ret
push
jnp
out
dec
movsb
inc
cmpsb
fcoms
add
mov
add
sub
addb
dec
pop
jge
repz
repz
hlt
dec
mov
ret
mov
adcb
rorb
mov
push
daa
mov
neg
sbb
mov
loopne
mov
xor
pop
sbb
sub
add
push
aad
add
pop
shl
push
cwtl
mov
jno
in
addl
iret
cli
cmpsb
mov
or
aaa
add
incb
push
int3
divl
ljmp
daa
add
icebp
push
daa
inc
std
aas
add
pop
push
mov
push
mov
bextr
rcrl
pop
push
scas
jo
sub
ss
stos
and
adc
add
sbb
push
insl
insb
es
push
inc
pop
jae
test
or
pop
fbld
aad
arpl
mov
jmp
fwait
ja
sub
add
push
test
push
add
call
rorl
sub
or
cmc
jl
call
inc
inc
push
je
or
lret
popf
adc
cmpb
ljmp
push
lahf
loopne
stc
shl
add
push
mov
lahf
outsl
or
out
dec
fdivr
push
xor
sub
mov
repnz
pop
cmpsb
push
jmp
pop
push
sbb
jge
pop
not
leave
out
xor
popa
mov
jo
inc
popa
imul
cmp
pushf
pop
cmpb
fcomps
aam
pop
int3
jo
mov
sub
push
push
mov
mov
jne
add
iret
push
push
add
ja
push
cwtl
xor
jo
jno
push
rolb
scas
ficoml
pop
xchg
imul
and
mov
sub
cli
outsl
cli
ret
bound
sarb
inc
stos
jmp
aam
ds
mov
push
mov
pop
mov
mov
cmp
decb
ljmp
ret
adc
popa
cmp
cmpsl
testb
add
out
or
sbb
dec
xor
outsl
add
jno
mov
scas
push
jo
jns
dec
out
inc
lods
imul
icebp
dec
sub
bound
lret
mov
adc
movsl
sub
xchg
jo
les
popa
mov
push
and
cwtl
sbb
and
inc
or
push
outsl
jmp
mov
xor
insb
jecxz
addb
cwtl
or
push
dec
popf
inc
mov
pop
xchg
pop
or
sahf
add
outsl
addb
test
pop
cwtl
lret
sub
dec
pop
inc
and
cmpb
xchg
xchg
lds
in
rorl
cmp
sbb
adc
jge
push
inc
or
test
imull
daa
mov
test
lock
push
stos
roll
dec
add
scas
insb
les
bound
pop
or
cltd
subl
cmpsb
je
adc
mov
xor
clc
xchg
ret
inc
sbb
inc
or
sahf
adcb
sub
jo
test
dec
xchg
hlt
cmc
shr
repnz
add
xor
jae
lods
sub
xor
dec
and
xor
xor
jg
and
add
shlb
mov
stc
cld
jnp
pop
mov
jmp
roll
fcomp
outsb
ds
pop
call
popf
jne
jmp
ja
xchg
fsincos
dec
test
in
clc
jnp
mov
mov
mov
das
pop
add
out
sti
pop
push
je
into
pop
rorb
mov
jmp
push
fisttpll
imul
or
fimuls
mov
mov
fcomi
adc
cs
stos
imul
orb
sbb
ret
cwtl
rorb
lock
repz
das
push
lret
mov
push
push
neg
add
adc
pop
and
stc
ret
sbb
cmovg
fcomp
jbe
or
aam
sti
roll
mov
add
or
adc
int
ja
imul
pop
xlat
push
jle
add
push
in
mov
or
jle
jecxz
gs
mov
fldt
dec
fbld
pop
hlt
adc
adc
movsb
mov
cmp
push
inc
dec
jnp
mov
fadd
jmp
lds
jno
negl
add
lret
pop
mov
rorb
ljmp
lods
cmp
jg
xor
mov
in
or
das
loopne
aas
inc
jge
mov
pusha
in
cmpb
scas
pop
and
pusha
xchg
jp
add
repnz
mov
nop
jmp
pop
or
addr16
pop
inc
lods
dec
or
std
cmp
mov
mov
cli
jmp
arpl
fucomi
xchg
out
add
rclb
gs
mov
jmp
add
outsl
cmp
arpl
scas
cmc
int
cmp
push
testl
push
pusha
jle
or
or
out
jmp
lods
mov
mov
andb
ljmp
or
into
repz
mov
test
push
lods
lcall
pop
xor
inc
das
adc
jl
push
add
xor
pop
mov
ss
xchg
fstl
mov
add
push
xchg
push
push
push
xchg
pop
push
jp
xor
pop
jecxz
int3
xor
roll
add
out
sub
push
inc
scas
cmpsb
cwtl
and
bound
add
out
pop
dec
fdivrl
add
fnstsw
mov
add
faddl
pop
mov
xchg
inc
and
sbb
icebp
int
mov
and
imul
das
cmpsb
push
adc
cwtl
out
pop
jae
adc
adc
rclb
jecxz
push
add
cs
add
into
pop
shl
add
pushf
mov
xchg
cmc
cmpsl
and
push
mov
pop
sbb
das
mov
inc
addr16
push
xlat
lahf
xchg
inc
mov
hlt
xchg
xorb
pop
test
test
loop
stos
mov
add
data16
aad
sub
cld
sbbb
or
jmp
dec
fiadds
dec
cmpsb
mov
adc
or
daa
inc
lock
sub
inc
jmp
pop
jbe
pop
pop
bnd
into
fsts
scas
lret
fiaddl
jmp
dec
sub
xor
cmp
loope
int3
aad
xchg
jnp
xchg
push
repnz
pop
fbstp
adc
sub
sub
in
jge
mov
shl
xlat
lahf
fsubs
int
or
sub
sub
push
fcoml
push
cmp
js
xchg
repz
repz
xor
add
inc
dec
cmp
dec
inc
addl
stc
daa
sub
dec
or
adc
dec
sub
clc
mov
clc
xchg
add
push
cli
inc
pop
jge
ja
jmp
mov
push
inc
rolb
dec
hlt
inc
or
ficomps
stc
add
ja
sub
les
out
hlt
mov
push
mov
imul
cmp
imul
dec
jne
gs
push
xchg
jnp
jmp
push
in
dec
std
test
mov
scas
xchg
je
mov
add
or
notb
dec
dec
int3
inc
flds
sti
into
js
ljmp
adc
je
in
push
or
adc
or
pop
push
imul
daa
push
mov
push
leave
or
pop
push
dec
ljmp
mov
adc
pop
push
mov
popfw
jbe
cmc
pop
sarb
bound
add
outsb
sub
pop
inc
and
pop
je
ud2
xlat
out
jmp
jmp
and
push
cmp
xor
imul
sti
mov
in
and
lret
sbb
push
mov
push
call
bound
enter
pop
jmp
dec
aaa
sbb
or
xor
pop
xchg
loope
cmovne
mov
test
sbb
repnz
push
sar
jnp
pop
scas
mov
dec
test
lods
sub
adc
or
gs
test
and
mov
and
loopne
in
pop
mov
sub
add
ss
lea
pop
ret
test
lods
inc
mov
sti
push
arpl
addr16
loop
dec
xchg
test
insb
or
inc
movb
jmp
cwtl
mov
dec
sub
or
xorb
xor
mov
js
iret
movsb
icebp
inc
xor
mov
pusha
adc
add
lods
push
pop
jg
inc
or
add
loope
sub
mov
pop
mov
dec
shl
adc
jecxz
cwtl
lods
mov
cwtl
xchg
mov
stc
jae
add
pop
lret
xchg
dec
negl
sbb
cmp
and
andb
push
es
into
xor
add
mov
pop
pop
sub
push
imul
addr16
call
push
idivb
out
sub
aam
sbb
or
jmp
notb
pop
popf
add
sub
xor
push
mov
sbb
repnz
arpl
mov
shrb
sti
fstl
push
rcll
out
xchg
fsts
dec
cli
sbb
mov
sub
je
push
cmp
fisubrl
pop
mov
test
or
ficompl
adc
push
int3
lret
lods
dec
mov
dec
int3
outsl
inc
lcall
adc
mov
shlb
mov
sbb
out
shl
lds
mov
add
sti
push
fstps
icebp
sub
imul
dec
xor
cmp
aad
sar
in
das
cmpb
aam
jae
andb
aas
jmp
mov
inc
insl
xor
add
add
push
ret
jmp
pop
pop
pop
sbb
xchg
scas
fmul
xchg
loopne
pop
data16
inc
mov
lcall
sub
cwtl
pop
jmp
xor
ficomps
adc
pop
mov
push
not
dec
fdecstp
cmpb
data16
mov
pop
je
or
cmpsb
jo
add
inc
dec
outsl
add
adc
nop
hlt
lret
push
or
cld
push
sbb
lahf
es
dec
or
fldl
in
jl
dec
jl
in
add
push
test
push
mov
sbb
flds
jle
std
adc
dec
mov
add
bound
lods
lcall
mov
mov
test
scas
add
mov
jmp
mov
xchg
fimuls
sub
sbb
pop
inc
notb
cmp
fsubrp
xor
sub
clc
jno
std
std
pop
cmp
ja
hlt
inc
lock
pop
popf
jge
push
ret
push
mov
adc
out
jne
je
pop
inc
and
inc
adc
push
sbb
sub
mov
popf
xor
xor
jmp
in
icebp
or
movsl
jo
out
mov
inc
ds
sub
sahf
sbb
mov
loopne
xchg
int3
mov
mov
outsb
adc
push
mov
cmpsb
ss
push
sbb
xlat
repnz
fs
sbbl
imulb
fcmovnb
adc
outsb
dec
filds
pop
mov
and
test
xchg
ljmp
add
sub
mov
inc
dec
je
push
or
adc
sub
dec
jae
shr
or
dec
or
fs
inc
cmp
and
ljmp
adc
or
xor
mov
add
dec
dec
adc
ds
ret
fdivl
mov
or
xor
sbb
in
daa
and
cmc
outsb
dec
cli
cmpsl
mov
or
incl
sub
lock
rcr
jmp
shll
xchg
pop
lret
loop
adc
stos
mov
push
xor
popf
aam
inc
push
les
stc
jmp
sbb
scas
in
dec
cli
in
push
and
xor
dec
pop
jb
jp
jae
in
push
jmp
mov
shrb
push
push
add
pushf
inc
test
sub
add
add
fnstcw
sub
or
push
mov
cli
and
dec
mov
mov
jmp
pop
dec
pop
loop
dec
aam
adc
mov
test
out
jp
jnp
cli
mov
outsb
adc
shlb
mov
shll
lea
or
or
add
leave
xchg
clc
xor
or
cmp
jmp
cld
jmp
xor
jns
jge
jecxz
arpl
sbb
repz
xor
stos
inc
xchg
jmp
cmpsb
ds
push
subl
mov
imul
fwait
xor
sbb
jmp
jmp
imul
push
pop
lods
cmp
inc
xchg
push
rcrb
dec
ss
orb
movl
js
and
push
sti
mov
pop
loope
mov
ss
push
pop
sub
fdivs
aam
mov
out
or
push
push
mov
pop
popa
sub
jle
sbb
cmp
jb
add
inc
jnp
jbe
mov
outsb
mov
xor
adcl
xor
and
add
imul
les
xchg
xchg
cli
or
addr16
dec
shll
mov
test
and
sub
sbb
imul
movsl
sub
aam
add
sbb
arpl
nop
mov
fwait
jmp
inc
push
cld
sti
pop
push
les
cmpb
jg
cld
inc
pushf
adc
push
add
dec
and
out
jbe
ja
xchg
loopne
mov
pop
mov
sub
pop
mov
sub
loopne
ljmp
push
enter
repnz
push
jg
or
push
lds
leave
push
ret
push
jnp
daa
push
lret
test
scas
lods
xchg
in
in
cmpsl
les
inc
in
aas
and
shlb
out
js
and
test
fnsave
push
push
or
mov
in
jecxz
mov
mov
das
cwtl
loope
pop
push
or
jae
in
lds
push
xchg
mov
rorl
jns
stc
cmp
adc
insb
icebp
add
fnstenv
shlb
add
adc
sub
out
adcb
roll
jb
push
jmp
or
pusha
sbb
or
push
int3
and
add
mov
std
inc
inc
add
dec
sbb
mov
jp
push
adc
jp
mov
cmp
mov
push
pop
ja
or
in
int3
ja
cmc
pop
mul
sub
jae
pop
mov
stc
sub
push
mov
sub
jmp
add
mov
add
inc
or
stos
push
ret
sbb
imul
lahf
out
push
mov
mov
dec
cli
push
jnp
fmuls
adc
iret
out
popa
and
or
or
insl
sub
xor
pop
and
jne
add
xor
pop
mov
insl
add
sbb
les
loopne
mov
push
pop
dec
in
cmpsl
xchg
call
ds
sub
dec
dec
cmp
cwtl
inc
lahf
push
dec
cli
sub
mov
and
aas
jmp
mov
add
test
adc
lahf
das
out
lahf
jmp
xchg
xorb
sub
cmc
sub
push
dec
push
shlb
cmp
repz
push
bnd
cmp
daa
out
push
insb
movsl
sub
push
scas
push
pusha
mov
add
pop
std
mov
mov
cmp
jmp
pop
daa
push
popf
pop
pop
rclb
insb
stos
inc
ret
jecxz
mov
jo
mov
rorl
imul
or
ljmp
aas
ret
test
fs
scas
xchg
xchg
or
in
mov
adc
add
testb
and
jmp
dec
push
xor
jmp
xor
add
sub
inc
stc
shrl
nop
and
mov
inc
shl
orb
pop
hlt
mov
mov
xor
es
bound
fdiv
xchg
arpl
cld
in
dec
scas
aam
cli
cmp
inc
lahf
inc
cmc
pop
xchg
out
enter
pop
dec
push
lock
dec
sti
repz
jb
sub
xchg
adc
dec
sub
push
push
jge
or
pop
out
data16
fldenv
outsl
les
mov
mov
sbb
pop
jo
dec
jmp
pop
push
or
insb
sub
in
jmp
xor
sbb
bound
xchg
mull
jmp
adcb
push
mov
adc
popa
test
out
adc
call
sbb
push
clc
adc
in
mov
jmp
xchg
dec
add
push
jmp
sub
or
mov
pop
adc
jmp
mov
inc
xor
inc
push
sub
add
xor
push
dec
jmp
sub
pusha
jne
js
popf
add
out
das
cmc
dec
jp
adc
or
xor
inc
mov
stos
sahf
pop
and
mov
pop
push
daa
or
arpl
clc
xchg
mov
jp
dec
clc
loope
cmp
sub
xchg
mov
jns
jae
xchg
xchg
pop
clc
aas
mov
fcmovnbe
inc
pop
out
dec
inc
in
pusha
in
inc
xor
jns
xchg
scas
add
jmp
out
sub
sub
outsl
push
inc
cmp
test
pop
je
xchg
sub
aam
in
xchg
mov
into
and
sub
xor
cmp
adc
clc
bound
test
mov
push
push
leave
xchg
jp
imul
imul
dec
cltd
pop
xor
or
ja
loope
xor
jmp
repz
add
xor
fdivr
and
sahf
mov
aam
push
sub
pop
mov
inc
not
jne
stos
add
jnp
popa
push
or
and
sub
enter
pop
or
ljmp
push
add
repz
and
cmp
dec
pcmpgtd
repnz
sub
adc
mov
ret
aam
sub
xor
inc
mov
cmp
cltd
cld
addb
enter
xchg
out
push
pusha
or
xor
push
or
or
faddl
enter
mov
out
push
mov
daa
pop
insl
mov
push
cltd
inc
in
test
subb
out
sub
fsubrs
inc
je
jge
loopne
cld
add
das
iret
push
push
cli
mov
pop
pop
xchg
push
sbb
adc
cmpsl
push
add
adc
cvtpi2ps
in
adc
bound
and
or
daa
add
jmp
scas
aam
shr
popa
xorl
or
mov
ffreep
daa
loopne
mov
fidivs
xlat
and
popa
loopne
dec
sub
inc
ficomps
in
jmp
mov
ds
pop
shl
cmp
sbb
in
enter
ja
pop
repnz
in
std
adc
push
icebp
aad
or
xor
push
loop
fsubr
sub
popa
ds
xchg
movsl
test
scas
adc
add
push
imul
int
addr16
data16
jp
ffreep
aas
dec
repnz
icebp
adc
inc
mov
rolb
jle
dec
cmpsb
push
pop
mov
movsb
pusha
and
data16
mov
jne
pop
fs
dec
inc
daa
add
dec
mov
xchg
aam
push
add
sub
neg
xlat
dec
into
imul
nop
push
mov
mov
outsb
int3
out
gs
fidivrs
cmpsb
aaa
sub
dec
jg
lahf
jmp
inc
mov
xor
scas
fidivrs
cli
xor
jecxz
or
mul
push
add
ret
lea
dec
xchg
pop
lret
sbb
aad
xchg
jmp
jb
dec
pop
cmp
inc
push
shl
push
mov
pushl
insb
into
jbe
sub
lock
imul
or
cmp
iret
mov
in
lret
inc
or
mov
in
shlb
inc
xor
xchg
int
jno
mov
cmp
hlt
sub
pop
mov
lret
dec
sbb
ljmp
cs
or
add
fmuls
cmp
sbb
dec
sub
mov
push
jecxz
adc
cli
mov
repz
arpl
adc
pop
ret
bound
loope
jg
adcb
pop
dec
ljmp
scas
fcoms
push
adc
xchg
mov
jle
cmp
in
jecxz
aaa
cmp
push
add
or
dec
inc
in
out
cli
push
mov
stc
shlb
push
add
addb
insb
push
out
les
or
imull
jl
jb
repnz
jmp
or
dec
mov
mov
jmp
mov
add
lahf
clc
xor
das
mov
sub
insb
mov
mov
pop
loop
inc
roll
mov
mov
sub
pop
push
test
and
in
xchg
ljmp
icebp
add
movsb
inc
shrb
sub
adc
push
push
jne
jle
int3
hlt
push
cmp
fnstsw
scas
fld
mov
mov
shll
xor
push
or
push
rclb
xchg
flds
test
cmp
inc
test
aas
iret
jae
pop
loop
test
pop
pop
arpl
sub
mov
int
push
pop
cmp
mov
insb
or
or
inc
das
cs
jns
inc
xchg
aas
jmp
icebp
xchg
jmp
stos
inc
out
faddl
jmp
and
sbb
xchg
jo
out
cmpb
and
adcl
xor
and
je
and
adc
xlat
adc
fldl
mov
add
add
add
mov
inc
pop
adc
popa
int3
pop
mov
add
jnp
push
insb
or
popa
incb
sbb
outsl
mov
test
mov
inc
mov
sub
and
xor
ljmp
mov
add
or
test
sarl
movsb
sbb
or
icebp
test
data16
mov
add
lea
out
stc
and
add
xchg
add
adc
ret
mov
or
xlat
mov
hlt
sbb
add
sbb
and
and
and
bound
shlb
cltd
inc
shr
or
popa
sbb
add
add
mov
popa
mov
subl
xor
icebp
mov
adc
xor
and
add
add
or
cmpsb
call
in
inc
ja
inc
pop
push
inc
mov
or
out
add
pop
sbb
nop
xor
test
inc
in
pop
fs
xchg
add
fwait
add
jno
fstps
fs
or
xchg
xchg
or
or
sbb
stc
xor
leave
pusha
fsubrs
adcb
add
dec
add
clc
pop
and
push
xor
xchg
sbb
inc
pop
and
xchg
dec
jl
adc
inc
adc
add
roll
popf
insb
sbb
loope
inc
aaa
lock
insl
fistpll
pop
sbb
adc
ffreep
je
mov
daa
idivb
xchg
pop
dec
inc
lret
push
das
das
inc
in
pushf
out
int3
cmp
cmpl
mov
pop
fs
mov
dec
push
notl
jo
std
cmp
push
cmc
outsb
and
adc
pusha
xchg
push
push
sbb
cmp
adc
movsb
mov
adc
scas
jo
andb
pop
add
rcll
jbe
xor
lock
add
add
push
insl
add
lods
sti
add
enter
xorl
cmpsb
iret
inc
es
mov
daa
cmp
mov
push
pop
je
cwtl
insl
adc
sbb
jno
lds
push
rclb
fsubrs
push
jno
mov
lods
xlat
out
clc
mov
fistpl
inc
pop
call
jns
pusha
lds
scas
pop
adc
or
jnp
jmp
xchg
stc
or
jmp
mov
pusha
xor
mov
loop
or
mov
jmp
mov
and
push
add
jb
add
addr16
jecxz
mov
sbb
cmc
push
xchg
push
les
push
push
xchg
adc
adc
xchg
and
inc
ret
enter
call
ret
ud0
jl
sub
cmp
dec
fistpll
pushl
pop
lock
add
inc
push
jns
jmp
lret
add
lods
adc
orb
add
outsb
xor
jo
pop
push
hlt
gs
mov
lea
rdseed
inc
jo
out
push
out
add
add
enter
sub
and
pop
adc
loop
test
loope
cs
mov
mov
clc
cmc
pop
mov
cmp
iret
mov
and
and
jmp
or
dec
adc
mov
sub
add
mov
std
sub
setae
lods
jo
jecxz
jmp
dec
mov
stos
mov
paddw
rcrl
push
jmp
add
popa
pop
adc
hlt
xor
pop
xor
pop
inc
int3
data16
wbinvd
dec
jge
les
sub
and
and
mov
movsb
pop
add
subb
ret
sbb
add
loopne
and
sub
jns
or
cld
push
sub
xlat
add
push
pop
popf
loopne
fucomi
jg
mov
mov
adc
cmp
mov
inc
and
mov
or
std
xor
dec
stos
sub
push
sbb
pop
lods
mov
xchg
lret
mov
cmp
xor
pop
ja
clc
xchg
cs
adc
pop
push
arpl
jmp
cld
roll
lcall
pop
push
lret
scas
sbb
lret
sbb
sahf
adc
adc
jns
inc
mov
push
mov
repz
or
push
arpl
xchg
fstl
inc
jmp
sub
pop
mov
test
andl
stc
dec
lahf
cmpsb
jno
lret
pop
inc
add
xor
mov
pop
cltd
or
test
stos
inc
and
push
sbb
add
xor
pop
sub
je
sub
popl
jge
jg
mov
aad
ret
push
outsb
mov
lds
jne
in
dec
outsl
rolb
jge
xorb
mov
ret
or
sub
adc
sub
add
sbb
xorl
xor
adc
fbstp
and
push
pop
pushf
add
imul
out
pop
lea
push
mov
jb
pusha
setge
cli
outsl
or
dec
lret
pop
cmp
and
dec
sub
xchg
push
push
add
dec
dec
sbbl
es
xor
mov
jmp
popf
rolb
mov
or
pop
neg
aas
and
into
cltd
in
nop
outsb
sar
faddp
lock
popaw
pop
cmp
pop
scas
enter
dec
cld
iret
lret
cmpsb
faddl
scas
sub
std
mov
shl
mov
add
push
push
push
jmp
mov
mov
cmc
fistl
mov
add
inc
mov
adc
cmp
mov
mov
aaa
adc
cmp
rorb
pop
or
das
lock
adc
mov
call
jg
xchg
movsb
orl
scas
mov
mov
mov
pop
sub
xchg
inc
out
addb
cld
inc
fidivs
shrb
dec
mov
lret
pop
jmp
pop
xchg
jge
inc
push
jmp
rcrl
xchg
jno
push
ficomps
popa
stos
jns
xchg
or
pop
xchg
and
dec
jb
int
adc
push
sbb
loope
xchg
imul
lcall
stc
movsl
jns
pop
adc
adc
aad
arpl
ja
shrd
enter
loop
push
stos
mov
in
add
shr
jmp
cwtl
cmc
cli
sub
mov
push
popf
jg
scas
jecxz
mov
jl
inc
fwait
pop
mov
std
out
jmp
loope
pop
daa
xor
clc
sbb
or
cmp
lods
dec
dec
jnp
ret
mov
add
cmp
addl
dec
dec
sub
stos
jmp
xor
pop
orb
ja
icebp
in
into
jo
ret
icebp
cmp
negl
lods
lock
cltd
push
aam
cmc
cmp
shrb
add
adc
and
stc
or
cs
jo
jmp
enter
add
bound
pop
mov
ret
test
pop
jmp
sahf
jns
leave
jne
stos
pop
push
jmp
pop
add
and
repz
cld
cmc
cmpb
mov
adc
add
adc
ret
mov
and
pop
mov
xor
scas
mov
js
gs
sub
adc
cli
ret
push
jne
pop
xchg
adc
jnp
xchg
sbb
and
jp
add
xchg
inc
orb
dec
arpl
lock
dec
jmp
scas
jns
and
dec
dec
and
mov
or
mov
jae
lods
dec
xchg
in
ss
in
push
or
scas
adc
jmp
add
mov
or
push
inc
push
cmp
xor
push
xchg
cld
mov
fiadds
testb
ss
test
sub
test
in
cmp
ficompl
out
push
cltd
adc
sub
sub
and
addl
push
aas
dec
add
data16
sbb
hlt
repz
jae
add
cmp
and
mov
adc
imul
rolb
adc
sub
inc
fwait
test
add
ja
or
int
insl
xchg
pop
mov
test
xor
rol
adc
sub
pop
faddp
leave
or
jge
cs
cmpsb
sbb
sbb
pop
negb
pop
leave
pop
shrl
add
sbb
add
movsb
adc
sbb
jle
mov
pop
cmpsb
sbb
jmp
test
bnd
out
push
sub
dec
movsl
push
ljmp
leave
push
xor
add
rcll
push
pop
mov
dec
or
add
loop
pop
jmp
push
push
stos
leave
push
hlt
ljmp
pushf
pop
pop
adc
rol
sti
xor
dec
les
mov
dec
pop
mov
sub
daa
sub
or
hlt
xlat
inc
jbe
loop
add
push
movsl
icebp
icebp
cmp
and
insb
fildll
mov
popf
dec
pop
mov
xchg
pop
mov
ja
dec
pop
loop
jmp
mov
fs
testl
ds
or
add
loopne
push
jmp
mov
push
ja
sti
ret
pop
mov
push
xchg
movb
pop
imul
push
cltd
pop
nop
bound
ss
shrb
rclb
and
xor
imull
xchg
xchg
jns
bound
incl
mov
int
adc
inc
sub
or
insb
negb
rcll
js
pop
pop
mull
sub
add
mov
pop
sub
xor
icebp
push
punpckhbw
mov
or
push
mov
add
pop
pop
out
sbb
adc
stos
adc
jecxz
or
sbb
imul
outsl
cmp
stos
stc
mov
fstpl
mov
pop
pop
adc
pop
or
mov
dec
and
jge
sub
push
shlb
mov
lds
sti
shll
nop
mov
lock
mov
pop
cld
mov
mov
jl
pop
pop
dec
das
push
cwtl
mov
pusha
daa
lea
pop
jae
test
xchg
popa
ja
imul
mov
or
fldenv
outsl
imul
cld
push
pop
into
mov
push
pushf
mov
lods
xor
cmpb
mov
pop
jo
aad
add
dec
int
in
inc
cmp
cmp
and
push
mov
sbb
sar
loopne
nop
mov
cmp
ror
stos
fcmovb
shlb
jecxz
ds
push
sahf
and
and
cmp
cmp
add
adc
orb
adc
lods
enter
lcall
loope
test
sti
das
cld
int3
shrl
and
rcll
push
push
pop
inc
push
mov
das
sub
jmp
mov
andb
mov
jmp
push
imul
test
pop
in
sbb
outsl
push
decb
je
cmp
pop
push
or
bound
repz
adc
or
in
pop
or
andl
pop
inc
movb
jne
dec
mov
loopne
ds
sub
inc
test
xchg
fstl
and
in
sbb
and
jne
push
ret
loopne
std
jle
and
mov
rcrl
pop
cs
dec
inc
push
lea
test
sbb
push
add
or
or
sbb
movsb
clac
bound
or
mov
in
mov
nop
sub
push
stos
adc
dec
push
inc
adc
imulb
and
sub
dec
loopne
and
lds
add
sub
push
sub
ja
jnp
push
sbb
add
pop
cli
inc
sbbb
cmp
out
adc
jecxz
add
pop
xchg
sub
dec
or
xor
push
imul
int3
add
out
pusha
scas
mov
sub
ljmp
add
xchg
cmp
jecxz
mov
adc
outsl
loopne
das
mov
or
popf
cmp
sbbb
arpl
nop
test
sub
jl
nop
stos
pop
clc
push
pop
incb
pop
movsb
cmp
cli
push
sub
loop
push
adc
in
enter
cmp
jnp
notl
shll
push
xor
test
cli
mov
popa
push
xor
add
mov
std
imull
rcrl
pop
dec
add
push
pop
jge
sbb
or
or
movhps
pushf
and
pop
leave
or
jmp
dec
mov
mov
pusha
inc
add
xor
mov
xor
xor
dec
add
mov
and
in
jmp
adc
out
sti
xor
push
repnz
xor
pop
pop
shr
loopne
lahf
jb
dec
add
xor
test
je
inc
pop
adc
mov
mov
cmpsl
leave
pop
lea
repz
fdivl
push
test
fstpl
out
cmp
jnp
sbb
rorb
fsts
stos
mov
xchg
stos
push
push
pop
mov
lret
push
das
enter
mov
pushf
add
jle
lock
jecxz
xchg
mov
or
mov
lcall
inc
mov
rsm
shrb
mov
xor
xlat
jmp
jae
cmp
repz
out
aam
fmull
jecxz
pushl
cli
sub
leave
inc
sarl
lret
dec
mov
test
mov
lods
lret
xor
sub
imul
repnz
inc
repz
addb
and
fistl
cmpsb
pop
clc
addl
notb
jnp
sub
xchg
adc
sbbb
adc
mov
xor
mov
cmp
pop
jge
cmp
xlat
jae
mov
push
fsubs
xor
add
or
jle
jae
push
pop
faddl
out
insb
test
dec
inc
or
push
aad
cli
xor
les
popf
push
sti
sub
pop
or
dec
insb
push
std
gs
sti
push
lret
je
cld
jg
mov
mov
sahf
subl
mov
push
fwait
neg
xor
rclb
ja
jmp
pop
lret
subb
dec
lods
add
push
adc
fwait
or
jo
mov
jnp
sub
pop
add
push
hlt
pop
xor
jmp
loope
jmp
rclb
mov
xor
scas
pop
or
jae
and
mov
add
call
adc
inc
je
sub
adc
pop
xor
lea
les
add
push
outsl
mov
sbb
and
out
int3
push
xchg
cmp
ljmp
push
push
loope
lods
pop
xor
push
dec
shlb
jae,pn
push
sbb
add
jno
das
pop
pop
mov
mov
jmp
jo
popf
push
sbb
dec
rol
movsb
push
add
xchg
mov
cmc
sar
rorl
xchg
jmp
or
or
lock
add
rcll
testl
fadds
sbb
jmp
push
or
xor
fidivl
push
adc
pusha
dec
jle
out
or
mov
das
in
pushf
sar
jp
in
jb
roll
and
add
int
sbb
xor
mov
aad
stos
lock
mov
push
mov
add
add
aas
shlb
xchg
sub
loope
push
call
add
sbb
pop
sub
and
cmc
inc
and
scas
xor
outsl
add
mov
add
fiadds
repz
cmp
and
mov
popa
mov
xchg
sub
jae
sahf
sbb
adc
add
inc
call
cli
add
pop
mov
les
in
push
ja
inc
push
push
aad
stc
and
add
xchg
pop
stos
divb
push
fcmove
repnz
xor
ffreep
call
push
xchg
dec
mov
frstor
xchg
jne
push
mov
add
inc
jmp
and
jl
cmp
test
ja
out
rolb
mov
pop
test
dec
and
dec
call
popa
ss
and
dec
add
push
aas
sbb
das
lock
xor
fwait
sahf
mov
icebp
stc
retw
jo
mov
cwtl
test
repz
sbb
shll
dec
mov
or
ret
add
clc
adc
pop
sub
ret
inc
adc
scas
sbb
pop
movb
push
pop
vcvttps2dq
xchg
and
push
aas
and
adc
neg
pop
mov
mov
pusha
pop
push
push
xor
lea
mov
cmpsb
push
icebp
xchg
mov
push
push
add
xchg
dec
mov
sub
pop
fisttps
bound
je
enter
adc
imul
add
and
pop
sub
push
xor
mov
adc
or
mov
add
push
sbb
push
sbb
dec
mov
pop
repz
xchg
shrl
jno
push
and
loope,pn
fs
in
idivb
pop
push
dec
subl
xchg
cmc
xor
out
xchg
push
shr
push
mov
jle
fmull
dec
shl
or
push
sbb
andl
push
sbb
mov
loope
stc
ror
mov
mov
cltd
xchg
rcrl
xlat
xchg
cmpsb
mov
push
outsl
test
mov
lahf
lret
stc
repnz
scas
push
mov
push
and
adc
lcall
out
pop
neg
or
lds
add
ljmp
mov
out
cltd
sub
jp
adc
inc
push
scas
lret
fdivs
sbb
push
mov
xchg
push
sub
in
stc
cli
popa
in
dec
adc
aaa
lds
add
cli
cwtl
jb
xchg
call
push
push
and
shl
mov
dec
divb
sub
jmp
jno
mov
push
add
and
inc
push
push
cwtl
enter
push
sbb
cmp
mov
imull
fcomps
jmp
mov
jecxz
jg
push
sub
jp
sti
fcomps
sahf
xchg
add
testl
jg
mov
dec
push
adc
add
adc
and
sbb
jl
in
mov
pop
push
adc
es
aad
push
in
push
mov
sub
jmp
in
sbb
cmpl
icebp
cmp
and
aas
adc
or
lcall
addl
mov
inc
mov
rcrl
pop
ror
sbb
imul
lcall
mov
inc
inc
pop
cmp
stc
and
add
sub
cli
adc
add
adc
fs
shll
out
push
adc
sub
dec
adc
jmp
jae
cmp
vpacksswb
jle
mov
fstpt
adc
pop
aas
test
in
jnp
or
mov
fidivrl
int3
andb
rcll
into
pop
aaa
daa
dec
dec
cwtl
mov
cmpsb
popf
nop
es
popl
xor
inc
xor
add
pusha
lahf
xor
or
sarb
pop
push
sbb
unpcklps
cmp
movsl
shr
inc
dec
mov
and
gs
cmp
xchg
divl
sbb
mov
xchg
aad
sub
ljmp
outsl
andb
aam
push
in
repz
mov
pop
xchg
mov
sbb
mov
and
jo
jmp
fisttpll
test
pop
pop
push
mov
lods
xor
xchg
pop
mov
lods
add
mov
jns
cmpsb
test
sub
or
jmp
pop
ljmp
jg
or
jge
dec
adc
sti
dec
out
hlt
push
sbb
loope
or
mov
or
insl
mov
das
addb
push
push
ret
or
fnsetpm(287
or
jae
inc
jge
leave
lret
sbb
xchg
pop
mov
icebp
dec
mov
inc
xchg
stc
and
repnz
arpl
pop
add
outsl
cmc
in
pop
xchg
xor
add
lea
addl
jo
or
enter
in
loop
js
add
adc
inc
jbe
pusha
or
pop
jmp
push
push
inc
movsl
ret
jne
pusha
or
arpl
sbb
out
inc
mov
adc
outsb
and
sbb
adc
sub
mov
out
gs
dec
sti
loopne
push
mov
add
inc
xchg
push
xchg
adc
xor
jmp
je
and
xchg
jne
cmpsb
lret
jg
out
or
mov
in
lahf
push
ficomps
int
pop
inc
pop
jmp
test
test
jmp
mov
ret
sti
js
xor
xchg
pop
xlat
or
adc
mov
xchg
or
cli
push
arpl
jmp
xor
lret
jb
neg
shll
daa
or
push
mov
lock
jmp
cmpb
inc
sub
and
push
addb
shll
enter
data16
jbe
das
push
pop
jmp
sub
sub
jle
mov
sahf
mov
pop
imul
lock
pop
popf
jae
sbb
or
mov
out
sbb
jne
sbb
mov
and
inc
gs
shrl
test
add
dec
add
jmp
push
push
in
andb
bound
xor
dec
push
std
push
and
jmp
arpl
shlb
loope
std
sub
pop
aad
push
lods
pop
add
dec
add
mov
cs
sub
add
outsl
mov
aad
adc
lret
push
xchg
aad
std
arpl
dec
xchg
gs
add
test
fsubrs
imul
or
sarl
add
lods
inc
or
add
and
push
nop
cmp
loop
imul
sti
inc
sub
add
adc
push
dec
lahf
mov
clc
add
pushf
or
mov
clc
fs
cld
add
jecxz
repnz
sahf
sbb
mov
xchg
mov
dec
mov
mov
add
inc
in
cld
sub
push
push
mov
adc
aad
add
xor
xchg
jg
loopne
dec
lock
or
jmp
and
add
das
dec
xchg
adc
mov
add
es
orb
fldenv
push
shll
call
adc
and
jmp
or
mov
cmp
sub
xor
jb
cltd
inc
jo
popa
jo
jmp
rolb
cmpl
lock
mov
jmp
cwtl
cli
jmp
adc
xor
ret
pop
mov
inc
cmp
pop
std
dec
push
push
mov
push
in
add
mov
or
fwait
loope
aaa
sti
and
test
cmp
adc
cltd
push
out
stos
orb
in
mov
push
das
sub
gs
push
push
inc
es
int3
adc
stos
mov
enter
rclb
push
ret
or
stos
jp
mov
int
or
jg
aam
into
les
xchg
mov
add
add
pop
scas
sbbl
lret
push
mov
push
add
inc
or
sarb
inc
and
push
xor
add
cvtpi2ps
testl
out
and
dec
mov
mov
call
sbb
rclb
pop
in
test
dec
mov
fstpt
dec
notl
xchg
xor
adc
ret
jne
pop
mov
jl
or
out
sbb
xchg
es
sbb
or
insl
cmp
loope
jo
fadd
in
lods
adc
and
cmp
shr
arpl
inc
mov
pop
mov
push
push
xor
inc
dec
mov
ret
and
push
ficomps
mov
stos
cwtl
aad
cmpb
outsb
adc
loop
fwait
adc
ljmp
aaa
push
xor
pusha
shlb
sbb
cmp
pop
imul
imul
cmp
add
popf
mov
mov
and
cs
add
push
jnp
or
jmp
pop
rdtsc
aaa
mov
add
insb
push
adc
add
imul
cwtl
dec
enter
sub
das
or
pusha
scas
in
pop
aaa
xor
mov
andb
jmp
mov
pusha
pop
cltd
lock
sahf
mov
xchg
loopne
icebp
push
jb
pop
or
rcll
add
les
lret
or
pop
jnp
inc
mov
mov
inc
mov
fisttpll
xchg
sahf
ficoml
add
rcrb
dec
ljmp
push
pop
push
hlt
cmc
add
fisttps
ficompl
ja
mov
std
pusha
int
xor
aaa
or
and
dec
pop
mov
inc
leave
push
pop
push
and
jp
add
fnstenv
adc
xlat
add
cs
pop
std
cltd
and
mov
movsl
xchg
and
lds
and
dec
adcb
frstor
test
fbld
or
xchg
jo
xor
cmp
push
sub
mov
out
sub
cwtl
add
add
mov
aad
sahf
sub
jne
stos
hlt
jbe
lahf
loop
pop
jnp
jg
int3
xchg
and
addr16
stc
mov
push
ds
js
add
pop
sub
sub
cmp
outsb
sbb
push
pshufw
dec
loope
jp
or
std
mov
sub
pop
jmp
mov
jecxz
push
pop
mov
inc
loope
jne
loopne
sbb
xor
icebp
adc
or
jl
daa
inc
ljmp
and
lds
sbb
ljmp
pop
pop
jge
cwtl
test
mov
in
mov
subb
loope
add
cli
push
push
shl
xchg
jo
push
int3
cmp
push
pop
add
pop
pusha
test
xor
add
mov
and
xchg
xchg
add
push
ja
xor
add
cmp
jo
sub
pop
sar
mov
lret
sbb
insl
jnp
or
add
dec
sar
je
test
mov
adc
pop
imul
loop
mov
xor
sahf
mov
or
pop
retw
pop
int
mulb
popf
bound
xchg
add
pop
sub
and
pop
push
vaddpd
int3
dec
lahf
call
ret
xchg
inc
cwtl
cltd
das
xchg
aaa
add
lret
pmulhw
insb
mov
add
mov
xorb
mov
or
jae
les
pop
lods
loope
outsl
sub
cmpl
lods
fbld
call
fildl
pop
push
jg
lahf
pop
xchg
shlb
push
filds
bound
sbb
clc
hlt
fldl
jne
lret
mov
mov
pusha
cmp
js
xchg
jae
mov
std
into
clc
jg
sahf
cli
mov
add
sahf
mov
lock
incb
mov
or
out
ja
out
bswap
mov
int
dec
mov
xor
or
push
hlt
test
or
push
and
ljmp
sar
dec
call
sarl
lret
cmp
cli
cmp
in
push
addl
push
mov
repnz
cmp
lds
stos
ret
pop
repz
popf
inc
cmp
cmc
inc
decb
jb
pushl
jl
jl
mov
cmpl
arpl
or
push
adc
mov
jmp
std
cmp
lret
repz
ret
xchg
push
cld
sub
pop
add
dec
out
bound
pop
movsb
jp
and
mov
jl
push
cld
pop
mov
add
push
push
sbb
pusha
inc
jnp
sbbb
out
lock
adc
and
mov
daa
popa
or
aad
rep
jge
push
jge
pop
or
inc
sbbb
push
adc
push
pop
add
pop
and
ja
sbb
sti
inc
fstpt
pop
scas
sub
test
xchg
out
cmp
or
inc
movzbl
out
outsb
sub
sbb
inc
pop
xor
jnp
lcall
pusha
shl
mov
rcr
cwtl
mov
inc
ficomps
sub
and
sbbb
push
fdivrs
add
jmpw
xor
cmp
cmpsb
add
xlat
shr
mov
adcb
pop
mov
fdivrp
mov
pop
setb
cli
adcb
inc
jno
repnz
mov
pop
lret
cld
std
out
add
sub
adc
js
mov
sub
insl
pop
push
shll
xor
dec
pop
frstor
and
pop
jle
ss
loop
mov
fadds
jecxz
out
js
cli
sub
in
adc
stos
lods
pop
or
push
push
mov
and
jmp
icebp
add
enter
in
pop
in
or
jno
mov
loope
call
pop
mov
xor
inc
and
std
mov
dec
push
xor
sbb
fsts
inc
enter
shll
test
inc
or
push
add
add
test
xor
adc
mov
cltd
sbb
sub
testb
jmp
cmc
pop
lret
mov
lods
es
or
xlat
loopne
or
add
out
in
jbe
addb
loopne
repnz
jp
or
inc
inc
aas
aas
cmp
push
xor
jmp
int3
adc
cli
pop
push
mov
mov
inc
jmp
mov
je
xor
jns
ss
and
repnz
insb
test
das
enter
shl
jnp
repz
mov
and
lret
outsl
test
dec
pop
mov
mov
jmp
enter
pop
stos
sub
adc
adc
jp
or
jmp
inc
icebp
ret
ljmp
or
fcomps
push
xor
or
xchg
push
les
mov
adc
mov
add
dec
jmp
psllq
xchg
repnz
add
fs
add
addr16
xchg
mov
ds
mov
mov
jns
daa
stos
sub
cltd
sub
ds
rol
cli
cmp
sub
pop
fistpll
push
or
dec
jmp
bound
add
adc
das
pop
xlat
test
lret
inc
push
aad
push
mov
je
xchg
cmc
cmc
push
lock
ss
inc
jo
mov
add
inc
sub
in
movsb
out
mov
and
xor
xchg
sbbl
mov
pop
xor
xchg
or
in
divb
dec
shl
fidivs
ss
or
mov
test
adc
sbb
push
adc
mov
orb
ficoms
dec
sub
add
inc
lea
imull
rorb
js
add
cmc
out
fwait
adc
fwait
fs
nop
mov
push
out
hlt
stos
dec
cmpl
dec
cmpb
jmp
xor
pop
add
shlb
jecxz
and
icebp
push
xchg
jnp
inc
leave
adc
lock
add
or
mov
in
orb
jmp
push
mov
xchg
add
out
push
adc
push
adc
jl
push
push
jge
test
std
xchg
lret
pop
pushf
or
mov
jno
inc
mov
or
jmp
mov
sahf
pop
dec
lock
lds
in
mov
dec
dec
inc
adc
jo
jl
sbb
sub
mov
xor
pop
sub
push
int
pop
leave
push
lock
push
sahf
mov
jmp
jg
dec
bound
mov
adc
mov
cs
inc
das
xchg
pop
push
das
add
jecxz
jg
lea
add
pop
ljmp
or
lds
lock
add
push
push
adc
push
mov
cs
push
cs
mov
inc
imul
in
stos
inc
call
adc
add
mov
push
add
add
xor
movsl
xor
jnp
and
push
movsb
push
sbb
pusha
gs
inc
scas
into
and
and
inc
addb
push
mov
imul
adc
mov
std
les
inc
dec
adc
mov
arpl
movsb
or
adc
push
or
mov
test
sub
ds
js
ret
push
popa
jmp
cmp
pop
out
push
inc
push
pop
mov
push
jmp
sub
call
and
push
and
fldenv
jno
jns
bound
add
cwtl
cmc
ret
imul
dec
adc
xlat
movsl
lock
fildl
idivb
push
jno
into
fbld
stc
xchg
and
hlt
pop
or
insl
and
pop
mov
jmp
sub
add
jae
enter
sub
pop
adc
and
xchg
jmp
imull
or
or
add
pop
dec
xchg
adc
dec
mov
mov
cmpb
mov
leave
pusha
inc
adc
push
dec
pop
jg
pushf
push
push
daa
pop
hlt
mov
and
sub
lea
push
in
scas
stc
das
inc
jmp
out
or
rcrb
notb
push
push
cmp
adc
sbb
adc
push
jg
dec
cltd
adcb
sub
js
in
or
outsb
shrb
push
pop
loop
add
testl
call
das
pop
test
in
test
xchg
lods
jmp
stos
jp
dec
inc
adc
sub
dec
mov
test
rolb
or
sbb
push
push
jmp
jl
rclb
iret
addb
xchg
pop
cltd
or
fcmovbe
out
mov
shl
ljmp
add
adc
xor
push
adc
add
testl
add
push
leave
pop
sarl
cmpsl
out
cmp
jge
scas
push
xchg
mov
inc
sbbl
sti
ret
hlt
ja
sub
add
push
jle
in
ljmp
imul
rorl
push
addl
add
int
adc
pop
out
cmp
push
dec
ja
sti
pop
push
sarl
pop
inc
jb
dec
mov
hlt
mov
rcl
cmp
andl
pop
mov
mov
xor
in
es
divb
xlat
push
fimuls
jle
fsubs
sub
rolb
ret
xor
rcrl
and
pusha
or
pop
jnp
pop
sahf
ds
lahf
pop
adc
jp
cmp
inc
push
roll
xchg
adcb
or
in
mov
pop
pop
sbb
outsl
jmp
shlb
lea
adc
dec
or
xchg
push
in
daa
ja
cltd
push
mov
enter
cmpsl
pop
sub
lock
and
xor
fwait
jmp
lds
inc
or
cmp
inc
sbb
add
sti
add
scas
dec
int3
jl
out
inc
or
call
insb
outsb
nop
das
and
jnp
rorb
stos
push
ja
pop
sub
pop
in
mov
push
xlat
inc
jo
and
mov
dec
mov
cmp
inc
fimuls
pop
mov
js
push
aad
jo
out
js
scas
xchg
imul
cmc
cmp
push
push
repnz
dec
dec
xchg
dec
leave
inc
adc
je
add
or
outsl
sbb
cmp
xchg
xor
jecxz
cmp
call
cs
je
mov
pop
jmp
mov
ljmp
mov
lods
adc
cmc
add
cmpsl
imulb
popf
xor
jno
subb
dec
icebp
out
dec
outsb
mov
jnp
jge
enter
daa
inc
push
rcl
add
subb
cmpsb
ret
jne
mov
dec
jae
mov
cs
pusha
dec
push
loop
lods
mov
aad
testb
out
movsb
xchg
fdivr
mov
jmp
sub
pop
nop
mov
arpl
pop
inc
or
jmp
or
dec
adc
repnz
pop
adc
sub
pop
loop
and
lret
push
sahf
pop
sbb
dec
or
je
mov
dec
mov
pop
pop
jbe
bound
imul
jns
xchg
int3
mov
es
sub
arpl
push
jne
scas
mov
and
sub
dec
out
cli
jne
scas
mov
push
dec
jmp
cmp
lcall
push
jno
or
dec
add
sbb
sub
test
xor
inc
mov
das
in
aad
push
xchg
insb
add
xchg
sub
xor
lock
push
enter
inc
adc
sbb
into
shll
xor
add
mov
push
dec
cmpl
xlat
loop
pusha
out
nop
loope
mov
push
cld
fbstp
leave
add
pop
ret
iret
jne
stos
sub
jle
pop
xlat
hlt
out
jle
fwait
or
push
mov
and
daa
imul
in
mov
jb
ds
pop
and
dec
push
sub
xchg
aad
add
sbb
ret
inc
mov
pop
aam
daa
out
push
adc
pop
cmp
mov
xchg
jbe
add
ret
nop
sub
or
sub
jmp
add
cmc
icebp
loopne
push
dec
adc
add
sbbl
jo
cs
mov
adc
mov
gs
sbb
add
subb
movsl
add
pop
xor
mov
andl
jns
les
or
push
dec
xor
pop
mov
out
mov
fwait
xlat
out
fstps
pop
je
push
adcb
cmp
jne
insb
dec
rcll
jmp
popa
inc
adc
not
dec
loop
cmp
sbb
rolb
add
jmp
add
rcrb
push
aas
lahf
sbb
inc
push
push
and
lock
push
es
push
cmpsl
rorl
jbe
das
jb
and
jnp
lods
push
dec
repz
pop
mov
pushf
xchg
les
lock
pusha
in
push
add
mov
sbb
add
jo
dec
cmpsb
scas
pop
and
in
pop
cs
cmp
pop
inc
not
adc
pop
rorl
sub
dec
pop
jle
push
call
aad
sub
sbb
inc
inc
cs
dec
in
roll
xchg
pop
jbe
or
inc
out
pusha
pop
push
sub
xor
adc
outsl
aaa
jge
mov
jmp
jecxz
ljmp
push
into
cmc
cmp
xor
and
icebp
inc
xchg
testb
aas
adc
inc
jo
jmp
push
arpl
jl
insl
jmp
rcll
and
xchg
push
mov
clc
fucomip
int3
mov
sahf
xchg
idivl
arpl
cli
jmp
xor
and
push
mov
jl
push
jle
out
jmp
mov
and
push
arpl
in
fs
jbe
data16
push
jmp
rolb
outsb
bnd
cmovo
loopne
pop
lds
sub
xchg
outsl
push
inc
xor
pop
call
std
push
cs
scas
or
jno
dec
cltd
loop
jg
xchg
and
jnp
movsb
cs
mov
mov
sbb
inc
or
pop
or
pop
scas
repnz
movsb
mov
add
push
jno
or
mov
mov
pop
adc
add
sub
hlt
int3
fisubrs
lcall
pop
mov
pop
lahf
and
pop
clc
jecxz
push
test
clc
and
inc
add
inc
aas
ret
dec
pop
lret
dec
add
pop
mov
ret
sahf
mov
push
mov
push
mov
lret
push
add
pop
push
or
or
cli
ja
aaa
inc
outsb
push
jmp
mov
add
inc
clc
bound
subb
loope
adc
jb
je
dec
inc
mov
mov
jmp
pop
mov
pop
xor
jp
push
or
ret
inc
andl
add
adc
subb
push
jmp
jne
cmp
adc
or
jne
leave
test
rolb
mov
jp
push
fdivp
pushf
add
jno,pt
cli
mov
mov
mov
and
adc
jle
subb
nop
cmp
fcoms
lods
add
in
test
add
and
pop
neg
pcmpgtd
or
icebp
ret
xlat
inc
xchg
lds
pop
test
test
test
mov
or
test
test
xchg
out
mov
cmp
pop
jnp
rorl
hlt
inc
and
mov
adc
shl
sahf
push
popf
cs
dec
and
aas
lea
mov
cmc
push
int
xor
inc
and
mov
sbb
sahf
sbb
bound
repnz
inc
cmpsb
dec
pop
cmc
sbb
les
imul
mov
hlt
and
leave
pop
pop
cmp
arpl
hlt
adc
adc
imul
insl
bound
add
or
jb
je
xchg
add
sub
jne
cmp
hlt
std
movsb
cmpsb
push
sarl
mov
add
pop
loopne
fistl
pop
mov
stos
sbbb
pop
pop
add
xchg
jbe
xchg
pop
sub
add
test
pushf
shll
jmp
in
push
or
sub
mov
iret
pop
dec
jmp
mov
out
rcll
push
push
lods
in
stc
in
jne
push
pop
mov
xor
addr16
sub
fadds
inc
add
xor
imul
mov
loop
inc
add
xorb
fs
aaa
mov
sbb
adc
sub
fcoml
leave
mov
xchg
lahf
mov
xchg
ja
stos
mov
fcomps
in
lahf
nop
loope
jmp
jnp
sahf
cli
cmp
out
aas
std
daa
mov
inc
out
cltd
push
loope
and
ds
cmp
ss
das
push
outsl
leave
and
and
pop
rcrl
add
dec
addr16
push
rcll
mov
imul
sti
adc
fidivl
sti
mov
add
xchg
cmp
cwtl
sbb
cli
addr16
jno
daa
pop
inc
pop
arpl
imull
int3
lret
add
pusha
mov
jbe
jne
push
sarl
imul
or
adc
cmp
sub
jmp
dec
or
lret
call
mov
ljmp
xchg
das
or
out
cwtl
pop
ret
mov
cli
repnz
xchg
mov
adc
cmp
inc
dec
cmc
sub
cmp
jmp
mov
jmp
stc
xor
pop
std
stos
mov
xor
aad
pop
cli
fldenv
fisttpll
cmp
push
sbb
push
cmpb
mov
jo
cmp
jp
push
imulb
pop
cmc
push
or
or
push
test
jmp
mov
mov
push
in
ret
pusha
adc
xchg
insl
push
xchg
fistpl
push
cmpsb
and
mov
inc
mov
dec
inc
mov
or
jmp
push
loope
fisubrs
std
out
xchg
scas
pop
fwait
enter
push
in
cmpsb
jp
cmpsb
cmp
adc
inc
dec
imul
mov
xor
cmc
scas
lds
decl
popl
sbb
cld
push
ret
cmp
popf
rclb
adcl
daa
push
jmp
andl
enter
or
mov
jbe
std
pop
dec
mov
and
and
jp
push
inc
enter
jmp
xchg
cmp
lock
pop
push
sahf
pushf
int
or
inc
pop
mov
add
test
sbb
ja
pop
sahf
jecxz
lods
xlat
adc
dec
cmc
andl
ja
xchg
and
das
mov
inc
mov
push
xchg
pop
call
je
pushf
sbb
out
pop
je
ds
jecxz
xchg
adc
rcrl
mov
xchg
mov
ljmp
repz
pusha
call
idivl
push
ss
adc
mov
dec
cs
rorb
sbb
pop
stos
push
lods
stos
iret
jne
xor
sbb
pop
xor
push
mov
cld
pushf
mov
add
lds
shlb
movsb
add
xor
pop
xor
dec
sub
cmpsl
add
fcmovu
repnz
push
add
outsl
jmp
pop
push
pusha
subl
xor
mov
dec
xor
bound
push
enter
push
addr16
movsl
out
ljmp
fmuls
nop
call
add
out
add
fwait
sbb
lret
push
push
push
outsl
push
loope
jg
leavew
ret
dec
add
xor
xor
mov
sub
je
aas
loop
fmuls
pusha
add
shrb
or
popa
call
mov
fldt
or
push
push
push
outsb
pop
adcb
inc
lret
push
push
in
int
and
pop
shr
divb
dec
fcomi
or
add
divl
and
in
cmp
adc
add
cwtl
rcrb
xchg
xor
jmp
setg
dec
add
xor
not
jmp
sbb
pop
rcr
loope
jp
loop
jmp
or
test
push
das
stc
leave
cmp
loop
cmc
ss
nop
jl
xor
mov
dec
pop
jno
jmp
mov
inc
wbinvd
push
sarb
dec
int3
stos
push
push
jmp
push
repnz
jmp
jl
pusha
mov
or
push
pop
pop
add
jmp
or
add
push
pop
neg
mov
in
pop
mov
push
dec
fs
pusha
add
jne
int
adc
loope
fistpl
orb
popf
loop
and
pop
stos
push
push
je
push
cs
sarl
hlt
xor
fcomi
jne
lret
addr16
imul
insl
dec
push
add
nop
adc
dec
xchg
push
jmp
sahf
fsubrs
or
fs
pop
or
push
sarb
mov
stos
les
adc
mov
orb
pusha
pop
or
add
jge
dec
cmp
dec
stos
lret
cld
ret
add
scas
xchg
fsubrs
movsb
mov
add
not
mov
sahf
pushl
and
out
sub
ret
add
out
mov
mov
das
pop
jmp
mov
pusha
in
jp
add
shrb
or
xor
add
mov
jp
xlat
int
or
or
push
std
add
test
das
test
test
pop
jecxz
xor
jmp
jmp
imul
jmp
hlt
dec
es
jmp
mov
add
add
inc
jmp
cmp
out
scas
in
adc
push
lret
int3
fs
mov
mov
dec
popf
scas
inc
addb
in
or
sti
jg
pop
in
pop
xchg
and
test
add
cmp
sarl
xor
pop
std
test
jg
dec
mov
arpl
insb
or
ljmp
dec
jmp
and
incl
lcall
or
daa
pop
push
add
jmp
testb
mov
fsubrp
repnz
sub
mov
scas
xor
add
sub
dec
in
shll
push
mov
into
pop
mov
xchg
mov
out
jle
lret
mov
sbb
inc
cs
mov
mov
fimull
inc
test
iret
adc
loope
pop
jge
insb
sarl
xlat
xchg
mov
push
ret
int3
sub
sub
add
mov
mov
lret
imul
outsl
add
or
push
inc
xchg
scas
mov
jmp
rol
adc
nop
hlt
or
in
movsl
fstp
mov
dec
pop
inc
cmp
outsl
scas
sub
pop
adc
and
or
or
fstl
and
or
mov
outsb
movsb
mov
jmp
sarb
dec
cmp
sub
dec
mov
add
pop
mov
add
add
or
aas
add
push
or
pop
inc
fidivs
sahf
cmp
clc
loop
adc
pop
jge
aad
dec
in
cwtl
cmp
in
cmp
and
shll
push
pop
dec
jmp
imul
es
pop
sub
lock
add
dec
mov
pop
cld
mov
pop
xchg
in
xchg
ficomps
sub
mov
mov
cli
add
aaa
inc
adc
rcrl
adc
xor
mov
sub
or
mov
subl
je
sahf
sub
inc
or
mov
dec
outsb
mov
data16
icebp
pop
xchg
loope
pop
cmp
and
and
pop
push
mov
xchg
rolb
icebp
push
sahf
mov
cmc
fisubl
push
je
xor
ficomps
jmp
mov
dec
pop
jb
aaa
in
adc
fstpt
pop
xor
cld
jbe
push
inc
dec
lret
add
pop
push
xor
mov
xchg
jge
push
dec
cmpxchg
into
inc
mov
aas
dec
mov
sub
pusha
sub
cmp
pop
xchg
add
mov
sahf
jl
cmp
pop
hlt
sub
jno
push
inc
cmp
leave
adc
std
inc
sbb
push
addr16
shlb
and
jmp
jle
es
pop
shlb
in
in
addb
scas
daa
inc
adc
xor
xor
mov
push
jmp
or
notb
pop
jmp
mov
divl
dec
mov
inc
in
arpl
fldcw
jl
ror
lods
andb
xor
add
xor
pop
pop
push
add
shrl
imul
lds
pop
repnz
mov
mov
in
mov
inc
mov
subb
shrb
out
jo
or
adc
pop
pop
popf
cmp
add
dec
push
ss
idivl
adc
mov
pop
mov
fsubrs
ljmp
mov
ret
dec
mov
dec
or
movsb
out
jle
ret
and
or
imul
fdivs
jno
lods
cmc
mov
scas
cmp
add
mov
xchg
mov
and
in
mov
in
jae
movl
sbb
stc
fs
cmp
shrb
push
in
push
xchg
sbb
mov
sub
add
call
js
lahf
inc
pop
pop
dec
sub
enter
mov
shr
rcrl
add
mov
sub
jmp
in
gs
stos
or
or
inc
ds
inc
sbb
and
xchg
jns
rclb
scas
repnz
or
sbb
sub
rorl
jae
mov
and
jo
lret
fld
cwtl
movsb
fcomps
push
mov
dec
fwait
dec
loope
add
pop
xchg
xchg
fcmovbe
mov
push
enter
add
xor
testl
add
jle
add
adc
stos
mov
stos
inc
roll
add
call
jbe
stos
adc
scas
add
out
and
pop
xchg
xor
gs
add
xchg
inc
push
pop
adcl
or
pop
push
push
aam
mov
sbb
jge
dec
add
daa
add
sub
lea
out
push
daa
pusha
dec
sbb
jl
mov
dec
popa
push
xchg
jbe
dec
push
pop
or
dec
test
pop
test
fbld
push
std
ficompl
repz
int3
xor
cmp
jne
dec
rolb
mov
mov
cmp
scas
dec
les
mov
stos
inc
pop
mov
or
push
movsb
add
out
loopne
loop
and
mov
aas
int3
fiadds
add
and
arpl
rcll
pushf
mov
sub
xor
bound
stos
pop
or
nop
daa
push
jmp
cmc
cmp
sbb
push
jl
rcr
sub
and
xor
mov
pop
jnp
sub
push
mov
push
jne
mov
neg
js
or
daa
xor
sbb
fnstcw
sub
add
out
jmp
add
dec
cmp
pop
pop
jmp
jge
je
js
or
mov
faddl
js
push
adc
jmp
jmp
fldcw
dec
movsl
push
jl
adc
jmp
leave
pop
mov
inc
push
inc
jge
pop
cltd
bound
lods
dec
xchg
sbb
outsb
inc
sbb
inc
cld
add
jnp
popf
pop
les
sub
jmp
rcll
in
lock
ret
sbb
fistl
push
jmp
mov
cmp
inc
sub
ret
or
push
jmp
test
add
shrl
mov
pushf
push
add
out
inc
ja
xchg
aas
pop
loope
xor
pop
push
push
dec
mov
rcrb
cs
push
sbb
mov
sub
push
lahf
push
shlb
cmp
sub
jmp
cli
lods
lcall
repnz
dec
push
in
xor
mov
in
mov
mov
xorl
jge
push
push
enter
sub
and
mov
push
inc
sarb
test
shrd
aaa
adc
or
xor
cli
dec
rorl
out
xchg
mov
inc
mov
push
insb
adcb
shl
subb
pop
pop
rclb
adc
clc
pop
nop
enter
in
mov
jmp
mov
push
fs
frstor
jle
jl
test
sub
loopew
add
mov
xor
sub
fs
or
xor
hlt
adc
icebp
fsubrp
mov
sub
push
push
jno
jge
add
gs
daa
dec
cwtl
addr16
scas
and
lds
push
mov
pop
adc
push
jmp
jmp
dec
and
pushf
jb
and
cmp
add
aas
or
sub
inc
push
insb
fcoms
rolb
bound
and
inc
jo
or
and
push
or
xor
inc
incb
sti
sub
push
imulb
daa
jo
xor
test
jnp
aam
sub
fucomip
push
adc
or
std
loope
add
stc
rorl
clc
ja
pop
or
add
push
cmp
sbb
dec
mov
mov
andl
add
mov
pop
cli
push
sahf
pop
add
scas
mov
leave
cmp
ds
fbld
pop
inc
repz
or
pop
jae
adc
test
or
leave
inc
mov
adc
jle
or
sarl
jmp
push
mov
jmp
add
dec
or
push
sbbb
or
add
fsubr
sti
ret
jne
fiaddl
lret
daa
insb
and
sub
cli
int
mov
pop
inc
sbb
aam
nop
adc
cmp
fwait
inc
or
jbe
push
sub
addr16
pop
inc
enter
lods
andb
jmp
push
outsl
adc
jne
loop
pusha
push
push
jge
fidivl
cld
negl
jmp
out
icebp
jne
adc
daa
jmp
ja
mov
sub
fisubrs
dec
inc
mulb
xor
roll
push
jb
cli
jp
aam
pop
mov
outsb
sbb
adc
lret
or
sti
push
stc
dec
fs
mov
push
cmp
dec
lods
jbe
pop
call
bound
lret
jl
jle
push
push
pop
scas
push
push
stos
sub
xlat
in
jp
div
add
push
mov
sub
sub
sub
add
and
xor
mov
mov
dec
pop
push
sub
cmc
icebp
sbb
adc
stos
mov
cli
mov
pop
movsb
dec
and
scas
add
mov
mov
addl
ja
push
sub
add
fistl
imul
in
or
xchg
jno
fsubl
add
jmp
or
pop
pop
sbb
inc
cmpsl
inc
aaa
adc
dec
mov
mov
loopne
pop
dec
push
in
adc
pop
pop
test
mov
push
push
xchg
lods
das
loop
lds
es
sub
and
cmpsl
aas
sbb
pop
jle
add
mov
out
add
pop
cwtl
js
cmp
out
push
sbb
dec
loope
add
insb
sarb
add
xchg
leave
and
das
rorb
or
add
and
pusha
add
sub
fimull
xchg
js
sub
and
add
std
pop
ds
add
xor
jecxz
test
movsl
mov
push
jnp
xchg
pop
pop
lods
mov
add
nop
sarb
or
add
jne
fs
mov
dec
cs
add
jne
xchg
cmpsb
push
jmp
cmp
int3
or
push
jle
add
sahf
mov
xchg
sti
and
jl
enter
dec
sbb
adc
aad
aad
mov
popf
sbb
dec
sbb
and
and
dec
lcall
and
pop
dec
dec
movsb
cmp
mov
push
push
xchg
dec
xor
inc
sti
mov
xchg
mov
hlt
cmpsl
dec
fisttps
lret
filds
xor
clc
sbb
mov
sbb
mov
cmp
fiaddl
sub
das
and
enter
xchg
fnstcw
push
add
test
loop
pop
lret
dec
mov
rcl
xchg
sub
lods
push
loope
xor
mov
xor
cs
fbld
push
mov
lahf
xor
pop
push
rclb
jecxz
xchg
mov
movb
xor
xor
dec
sbb
adcb
dec
in
or
add
mov
jb
ds
push
sbb
dec
fdivrs
and
sar
ljmp
pop
sarb
repz
jno
outsl
lret
lods
jo
out
push
add
test
jmp
fadd
das
and
jp
roll
cli
lock
xchg
pop
mov
aaa
mov
std
xor
push
inc
test
pop
test
pop
loop
xor
push
and
mov
sub
pop
rorl
add
data16
cmp
mov
mov
dec
sarb
push
mov
xor
imul
ret
or
adc
add
pop
pop
push
icebp
mov
fistps
pop
gs
cli
pushf
mov
adc
add
sbb
daa
push
pop
lret
pop
dec
mov
icebp
repnz
or
jae
sahf
ret
push
scas
jno
jmp
ret
hlt
lcall
shll
dec
or
pop
ds
cltd
ret
pop
jge
cmc
in
lahf
inc
xchg
inc
jmp
dec
icebp
and
pop
loop
cmp
orl
fucompp
push
jge
pop
mov
pop
xchg
push
mov
mov
jmp
or
mov
fsubl
xor
ret
add
and
cli
xchg
xchg
testl
sbb
xchg
push
dec
loop
mov
jmp
push
push
cmp
pop
mov
jns
ja
je
test
cltd
mov
repz
add
stos
imul
mov
dec
xor
sti
add
mov
cs
loopne
adc
or
push
neg
jbe
test
pop
push
div
addb
cmp
das
and
jne
jne
mov
adc
outsb
or
mov
cmc
adc
or
or
cld
cltd
push
pop
inc
fldl
sbb
pop
push
fcom
or
stos
in
xor
jne
cmp
jle
hlt
jl
clts
int
and
mov
addl
clc
das
push
mov
loop
shll
add
repnz
sahf
dec
mov
sub
test
add
fcmovbe
push
stos
cmp
mov
icebp
inc
xor
in
sub
push
pop
mov
out
testb
into
in
fcmovnu
call
dec
test
xor
push
jnp
addr16
movsl
ficoms
xchg
adc
sub
add
pusha
or
mov
dec
out
lcall
sarl
pop
or
sub
movsb
mov
dec
sub
in
pop
mov
dec
sub
jmp
scas
lret
mov
mov
fsubs
or
and
mov
sbb
popa
sti
mov
aas
push
rol
add
adc
iret
push
mov
rcrb
mov
jmp
xor
imul
push
adc
pop
outsl
test
xchg
adc
push
sbbb
and
cmc
add
mov
mov
add
mov
scas
shll
negl
jp
sub
imul
fisubrs
orb
cld
xor
jmp
push
sub
jle
je
adc
or
nop
push
scas
fistl
inc
add
mov
jp
test
push
imul
repnz
add
xchg
sahf
leave
push
test
clc
std
adc
cli
lahf
xlat
or
dec
pop
mov
and
jo
repz
cmp
dec
add
or
or
orb
jl
jle
sarb
pushf
idiv
xor
jns
fistl
sub
dec
sti
xchg
fnstenv
jne
pop
xor
and
xchg
sub
dec
in
sub
fsts
scas
mov
sub
pop
cli
cmc
pop
cld
test
fsubs
in
add
xchg
in
sub
push
xor
stos
insb
in
sbb
add
jno
cmp
mov
lret
jmp
and
add
pop
test
dec
stc
pusha
test
xor
lock
add
and
adcl
cmpsl
je
or
out
xchg
dec
jo
pop
in
dec
stos
lret
loopne
jmp
or
pop
arpl
adc
push
xor
sarl
xchg
nop
jecxz
sub
dec
xlat
test
insb
xchg
call
popa
jge
es
jo
xor
pop
in
lret
or
mov
jne
das
aam
loopne
push
aas
mov
cmp
adc
mov
icebp
gs
mov
sub
push
mov
out
cmp
and
imull
je
dec
repnz
std
gs
mov
dec
fcmovnu
enter
pop
cmp
jbe
sahf
or
pop
icebp
inc
loop
mov
jg
outsl
sub
cmp
inc
jl
lock
dec
sub
int
outsb
fdivrs
inc
dec
jmp
loope
adc
inc
je
or
and
lahf
enter
cmpsb
jo
ds
lcall
jbe
push
fisubl
dec
and
cmc
or
mov
and
inc
xchg
mov
pop
pop
popf
pushf
pop
dec
pushf
addb
mov
sbb
into
adc
cmpsl
scas
lea
shl
sub
add
jmp
mov
mov
insb
xor
or
jb
pop
push
data16
sbb
sub
xchg
cld
mov
call
xor
dec
push
inc
and
pop
push
mov
or
fadd
mov
stos
test
jnp
inc
jecxz
adc
hlt
jmp
xchg
cmpl
call
add
mov
shl
add
repz
and
mov
or
cli
or
dec
pop
inc
test
add
hlt
xchg
xor
data16
sar
bound
sub
sbb
dec
and
test
fwait
or
mov
push
add
addb
es
adc
add
pop
inc
xor
aas
movsb
mov
cmp
mov
fcomps
jno
add
lahf
imul
jo
in
adc
sbb
sub
and
sti
js
sbb
adc
jne
pop
or
mov
pushf
sbb
adc
jne
pop
or
push
jmp
mov
xchg
push
or
push
out
pop
adc
mov
and
xchg
jl
push
aad
mov
lret
std
push
fsubrl
stc
inc
mov
rorl
sti
rcrb
jge
in
jmp
dec
test
aas
test
pop
mov
cs
push
lret
and
mov
cltd
dec
into
and
daa
mov
shr
outsb
es
rcr
mov
cmc
cltd
jbe
movsl
jo
add
or
mov
aad
push
push
push
and
jb
subl
add
inc
jnp
xchg
cld
lret
xor
rcr
xchg
inc
outsl
bound
jbe
mov
jp
rcrl
jmp
les
ret
aad
lock
fldl
and
push
or
jbe
cmp
dec
xchg
push
sbb
mov
xlat
mov
pop
sub
jmp
into
mov
adc
or
and
mov
or
das
mov
pop
shlb
jl
or
xchg
mov
ret
cld
pop
push
cmc
lcall
out
mov
dec
out
mov
scas
lret
push
dec
repnz
dec
movsl
popa
cwtl
push
sub
sub
std
js
dec
add
call
cltd
dec
lahf
test
inc
mov
pop
insb
cmp
mov
xlat
mov
sahf
addb
popa
lret
ret
xchg
fsubrp
jmp
mov
arpl
mov
mov
xchg
mov
jmp
pop
xor
test
fs
xor
inc
inc
pop
mov
push
mov
adc
push
inc
jg
je
sbb
mov
popf
inc
add
sub
jmp
jns
lds
int3
add
xchg
xor
inc
inc
push
repz
and
adc
cmpsl
pop
add
stc
push
dec
sti
add
sub
pop
cmp
dec
or
mov
leave
push
add
add
in
dec
inc
jae
sbb
or
ror
sub
xchg
or
imul
lret
lods
orb
leave
sahf
lcall
outsb
lret
cs
imul
pop
mov
dec
mov
cmc
jmp
movsb
cmpsb
movsb
push
add
inc
pop
jae
cmp
add
mov
faddl
push
pop
ret
inc
or
lds
or
xchg
add
sub
aas
dec
mov
mov
xchg
pop
rcrb
mov
push
add
pusha
or
or
or
push
sub
add
inc
js
imul
cmp
outsl
daa
popa
sub
xor
lods
movsb
je
jmp
test
xlat
pusha
lret
add
push
pop
roll
add
xor
cmc
inc
push
stc
adcl
daa
cmpsb
rolb
xor
mov
popa
sub
inc
pushf
out
pop
add
pusha
addr16
dec
mov
leave
divl
hlt
pop
sbb
std
scas
hlt
push
imul
inc
mov
mov
push
mov
ror
movsl
xlat
push
add
mov
loop
incb
out
daa
adcl
std
push
js
das
mov
or
mov
jo
xchg
out
xor
sbb
push
dec
pop
cmpl
dec
sub
cmpsb
pushf
sub
jp
testl
dec
push
xchg
push
add
pop
shl
sub
xor
pop
sub
push
jmp
push
inc
loopne
jmp
shrb
xchg
pop
inc
dec
jmp
add
outsb
mov
xchg
dec
stc
jnp
cmp
pop
pop
mov
lods
lret
out
jp
mov
icebp
inc
inc
mov
sbb
subb
add
mov
xor
jecxz
xchg
dec
js
inc
xchg
xor
add
mov
inc
mov
dec
add
jl
push
test
outsb
pop
or
cltd
fsubrl
ljmp
jb
sub
xor
mov
mov
pop
mov
sub
mov
stos
pop
adc
and
int3
mov
lahf
dec
frstor
cs
sbb
xor
stc
pusha
mov
jb
mov
and
push
dec
out
pop
scas
jge
mov
sbb
les
in
pop
mov
lahf
and
nop
jmp
jb
test
jmp
mov
movsb
les
sub
pop
push
inc
aaa
out
add
stos
imul
sub
cmp
and
lds
jmp
cwtl
or
pushl
jge
push
in
shlb
inc
or
push
fadd
popf
inc
fcomip
imul
mov
cmpsl
push
xor
dec
not
jl
push
popf
ljmp
pop
popa
adc
outsb
mov
jl
pop
sbb
push
mov
or
in
add
jge
cmpsl
lret
jl
pop
push
mov
dec
dec
pop
fadd
mov
mov
fucompp
aam
fstl
sub
sbb
push
push
out
or
adc
pop
dec
rcll
int
jo
aam
cmp
enter
add
mov
or
pop
nop
hlt
das
mov
lds
pop
leave
movsl
in
loopne
or
aas
test
and
test
xchg
or
jg,pt
pop
pop
xchg
icebp
mov
roll
fnstenv
push
cmp
jno
sbb
movsl
sbb
dec
cmp
popf
enter
adc
mov
add
xlat
jmp
les
push
insl
sbb
pop
pop
xchg
int3
adc
inc
shrb
js
mov
sub
pop
sub
mov
lea
and
shll
mov
lret
lds
mov
xchg
punpckhdq
push
lcall
out
stos
add
push
add
and
xor
mov
clc
push
adc
pushf
cmp
test
inc
xchg
pop
pop
xor
or
pop
dec
sahf
test
jne
add
dec
mov
mov
jo
adc
jmp
xchg
or
mov
fcmovb
js
pop
jb
add
bound
cmpsl
das
out
js
stos
pop
xchg
mov
cmp
faddl
sbb
popa
mov
push
js
into
mov
sbb
out
pop
pop
push
mov
aad
gs
cmc
pop
hlt
jp
pop
sub
or
mov
mov
cld
add
push
or
scas
rorb
mov
xor
rolb
jl
jge
dec
add
jmp
subb
insl
es
pop
insl
or
add
xchg
pop
icebp
dec
shl
je
ss
loope
cmp
jmp
jp
jae
add
mov
xor
jmp
lret
imul
inc
ret
jge
pop
lock
sub
scas
pop
mov
sub
mov
push
inc
dec
nop
push
aad
mov
dec
loopne
push
add
jmp
pop
sub
ret
pop
stc
fs
jmp
sub
fwait
pop
lods
inc
push
push
movsl
adcl
inc
mov
cmp
subl
adc
dec
add
fisubrs
dec
dec
cmp
lds
jp
popa
xor
int3
jmp
jne
cli
xchg
push
out
hlt
arpl
mov
add
jb
pop
add
xor
mov
jbe
sub
jmp
sub
repz
jmp
repnz
inc
imull
cmp
or
call
lahf
lock
popf
js
adc
pop
test
pop
jmp
fnsave
add
pop
xchg
sbb
push
cmp
jmp
out
push
add
or
sbb
fldl
iret
xacquire
or
jbe
mov
inc
push
fcomps
dec
jb
jb
cld
push
dec
sahf
sub
or
cmp
jmp
mov
popa
aas
lidtl
push
jmp
dec
or
or
xchg
mov
lds
adc
jne
sahf
push
add
mov
and
xchg
fidivrs
or
adcb
fstps
into
shr
loope
and
stos
xor
push
daa
mov
adc
add
jecxz
adc
jne
ja
jmp
jmp
inc
paddw
ret
sbb
or
lods
and
outsb
ja
jmp
dec
lcall
add
and
inc
and
sub
dec
xor
sub
stc
adc
daa
pop
push
clc
or
std
dec
or
jmp
add
push
push
mov
sbb
and
sub
inc
or
xchg
add
dec
xchg
dec
ficoml
bnd
xchg
pop
lock
ds
mov
neg
dec
adc
sub
pop
jl
push
jmp
or
inc
out
aaa
outsl
inc
sbb
cmp
jl
fstl
popa
jge
popf
cwtl
inc
outsl
pop
dec
dec
aas
push
add
jmp
mov
aaa
jno
fldt
cmp
add
jmp
neg
shl
inc
mov
rcl
cmp
out
pusha
lret
cmp
jmp
pop
mov
cld
shrl
push
lds
push
icebp
aas
lods
add
mov
inc
lods
jns
nop
add
out
and
jge
int3
dec
sar
dec
mov
popa
jo
add
add
xor
push
je,pn
adc
data16
jp
popf
shl
out
mov
push
add
xor
and
xchg
sahf
scas
test
mov
inc
xchg
dec
xchg
je
or
lret
fists
nop
sbb
gs
inc
cmp
adc
jb
loope
mov
adc
lods
xchg
mov
dec
sub
mov
push
push
dec
or
out
movsb
das
mov
jmp
pop
mov
adc
xchg
dec
add
cmp
fcmovnbe
addl
jmp
in
rorb
mov
sbb
push
dec
sub
xchg
and
inc
add
jns
xchg
pop
mov
sbb
flds
dec
jno
mov
adc
call
int
jnp
push
lods
push
add
in
rclb
enter
mov
adc
jl
cmp
sub
xchg
stos
pushf
aaa
orb
xor
jb
movsb
mov
es
in
lods
jnp
scas
pop
inc
add
sbb
add
adc
insl
push
call
push
mov
scas
fldcw
scas
shll
sbb
jl
jle
addb
mov
mov
inc
mov
cs
std
add
push
dec
mov
cmp
push
jb
cmp
lds
adc
roll
fwait
push
cmc
sbb
or
leave
add
xlat
push
fstl
std
int
sub
adc
popa
xor
mov
xor
mov
ret
imul
data16
xor
pop
cmpsl
cmpb
int3
addr16
dec
mov
addr16
scas
and
rcll
cmpsl
je
dec
fdivrs
iret
shl
into
sbb
daa
adc
movsl
lock
ss
jo
mov
stc
pop
add
and
shr
inc
jmp
shrl
cmp
aaa
insb
sarb
add
xchg
sbb
out
dec
add
or
arpl
dec
sbb
add
cmp
ja
add
sahf
les
movl
cmp
mov
jns
jbe
loope,pt
add
pop
jmp
xlat
sub
test
int
sub
sub
leave
mov
nop
fs
sti
add
pop
or
clc
xchg
xor
les
dec
sub
adc
or
dec
data16
jno
or
pop
stos
in
lret
scas
jmp
or
test
pop
push
jmp
incb
adc
scas
sub
pop
mov
repz
subb
fdivrs
call
fnstenv
cld
lock
rorb
aas
cmp
inc
sub
pop
sbb
pop
aad
jmp
jmp
or
pop
mov
jne
sti
mov
xor
sbb
out
mov
inc
sub
pop
or
imul
mov
popf
jecxz
dec
push
sbb
ret
and
cmp
inc
test
xor
pop
xor
mov
loop
ret
mov
inc
outsb
xor
js
xchg
sbb
std
orl
out
push
in
iret
mov
sub
dec
add
hlt
and
push
aaa
dec
or
or
outsl
push
pop
jmp
xchg
mov
jns
cwtl
les
dec
rcll
ja
lock
ss
jecxz
jns
ds
adc
push
pop
lock
sbb
stos
inc
pop
jmp
or
inc
jle
daa
aam
loope
mov
mov
sti
repnz
cmc
pop
xchg
push
mov
fdivrs
xor
xchg
dec
aas
aad
mov
cmc
adc
fists
add
cmovo
cmp
into
adc
cmp
shlb
popf
push
pop
ret
je
sub
scas
jbe
add
pushf
xchg
imul
popa
mov
aas
cwtl
mov
dec
mov
test
dec
mov
faddl
mov
dec
cs
cmp
push
xchg
push
incl
pop
add
push
pop
movsb
or
adc
fsubr
add
mov
mov
jmp
jl
add
push
jmp
and
cmpsb
push
into
pusha
and
aas
pop
mov
int
inc
scas
pop
push
pop
iret
or
inc
dec
rdmsr
add
or
lret
roll
test
lcall
lahf
in
lock
lea
sarb
test
scas
sub
adc
test
mov
in
cld
test
das
js
fdivrs
and
mov
dec
push
movsl
lcall
loope
jno
loope
pop
cld
cld
pop
pop
rcll
fidivrl
sbb
loop
orl
inc
xchg
gs
inc
push
ljmp
mov
pop
out
pusha
sbb
repz
movsb
sub
and
sahf
mov
daa
sub
sbb
out
push
notb
jmp
icebp
add
faddp
jnp
and
pop
push
mov
xchg
mov
mov
add
test
ljmp
add
call
mov
jmp
int
add
es
std
xchg
pushf
xchg
pop
mov
arpl
push
ret
sub
in
jl
xor
xchg
xchg
push
mov
es
mov
or
push
loop
push
and
add
ljmp
mov
imul
xlat
jmp
test
or
xor
push
push
jae
lret
sbb
call
ret
lock
or
out
lods
addr16
mov
xchg
xchg
bound
push
test
ja
cmpsb
mov
push
mov
inc
data16
ja
push
adc
aad
add
shl
add
outsb
adc
data16
lret
add
repnz
push
mov
xchg
mov
aam
movsl
movsb
push
mov
mov
inc
sub
out
adc
adc
push
sub
fcomps
cmp
xchg
and
or
fcos
mov
mov
cmp
xchg
sbb
jmp
js
lds
sub
mov
and
repz
mov
dec
push
add
out
cmp
cs
and
dec
pop
mov
testb
xchg
dec
jmp
dec
or
sub
push
inc
pop
mov
add
ficoms
xchg
out
popa
fucomi
xor
jmp
dec
rcrb
xchg
add
stos
mov
cld
jle
xchg
xor
dec
adc
pop
dec
lock
jmp
xchg
fdivrp
shlb
sbb
mov
pop
in
mov
jmp
push
push
scas
pop
jmp
add
pop
jmp
pop
fiadds
jl
jmp
inc
mov
jge
add
and
dec
pop
icebp
xor
cli
add
mov
push
dec
add
sbb
rclb
push
dec
dec
ret
fildll
loop
nop
dec
or
das
jg
adcb
xchg
mov
pop
push
mov
adc
insb
inc
dec
jne
mov
ret
fdivr
pop
fs
pop
and
jmp
add
pushf
jae
sbb
sahf
or
dec
sbb
jmp
push
add
aas
inc
jg
test
add
and
dec
add
loopne,pn
dec
push
addr16
push
mov
cmp
fisubl
add
scas
and
xchg
push
adc
in
dec
jle
xchg
inc
in
jle
stos
fs
mov
nop
add
mov
dec
adc
xchg
loopne
jmp
nop
cmc
jge
add
sbb
mov
outsl
push
mov
add
push
mov
push
enter
adc
mov
add
orl
jge
lods
push
cmp
and
push
sub
push
ret
cmp
jg
lcall
pop
and
sub
sub
rolb
pop
out
sub
rcr
cvtps2pd
repz
fisubs
push
sbb
or
leave
cmpb
sarb
shr
pop
add
sub
lahf
mov
cld
lret
sbb
hlt
inc
jb
hlt
popa
pop
stc
xchg
daa
dec
pop
inc
rcrb
jmp
pop
pop
add
ds
movsl
cmp
cs
mov
pop
es
dec
cs
insl
xchg
pop
cltd
cmpsl
test
dec
jle
clc
mov
dec
jne
jae
mov
jno
lret
inc
xchg
add
sbb
inc
bound
leave
add
fdivl
mov
xor
scas
icebp
orl
xor
in
xchg
adc
fstpl
loopne
sub
mov
mov
cld
inc
ret
andl
add
add
add
mov
fistpl
sub
mov
jge
mov
mov
in
cmpsb
in
test
pusha
out
cmp
inc
jmp
cmpsb
xor
aam
cmpsl
jbe
and
imul
test
dec
push
scas
add
inc
sbb
loopne
clc
pop
mov
add
lods
add
dec
sub
imul
push
or
test
repz
pop
mov
pop
mov
sub
xchg
cli
mov
enter
mov
mov
or
pop
cmp
or
dec
inc
add
add
addr16
mov
jae
mov
imul
loop
pop
fisubl
cmp
jg
or
dec
or
pop
xor
or
jnp
xchg
sbb
push
adc
push
adcl
icebp
jne
in
popa
cmpsl
repz
xchg
mov
jmp
mov
ret
xchg
inc
inc
lods
add
inc
pop
gs
mov
and
jecxz
xchg
pop
shr
test
pop
sbb
ljmp
pop
ret
xchg
dec
add
xor
stc
addr16
mov
aad
pop
stc
sbb
negl
mov
cld
int3
daa
jg
cmp
jmp
mov
jbe
add
jmp
cld
jle
xchg
orb
add
gs
xchg
out
js
dec
stc
pop
mov
jno
inc
mov
out
loop
mov
push
sahf
sub
lods
scas
add
cltd
pop
pop
and
sbb
notb
dec
push
sub
popa
flds
movsl
dec
fstl
aad
addl
mov
cmp
fs
xlat
repnz
mov
and
lods
aas
mov
pop
insb
cld
cmc
repnz
fst
mov
cmp
sub
push
inc
jb
dec
sti
add
mov
mov
psubsw
add
xor
pop
incb
into
push
mov
or
aas
jg
in
lods
pop
add
add
adc
pop
in
out
adc
mov
out
cltd
andb
stos
popf
lds
sub
int3
xchg
jbe
pop
mov
or
and
mov
inc
adc
rep
test
ret
mov
mov
mov
xor
or
pop
fsts
jmp
loop
xlat
add
dec
mov
loope
lea
roll
and
push
not
xlat
aad
push
jecxz
outsl
or
adc
jecxz
loope
push
xchg
push
pmulhw
sahf
out
mov
dec
and
jns
fwait
xchg
jb
cmp
jmp
pop
es
icebp
shr
testb
add
mov
pusha
jbe
pop
xchg
xlat
or
push
and
xchg
mov
inc
fisubl
lock
xor
or
pop
hlt
scas
pop
jecxz
mov
mov
add
pop
add
cld
nop
ja
add
add
out
mov
pop
push
fcmovb
or
inc
ret
mov
dec
mov
cs
pop
pop
add
daa
add
cwtl
xor
fstpt
jo
out
mov
inc
insl
fdivs
pop
jns
jge
sbb
lea
push
dec
jmp
pushaw
add
nop
pop
daa
sub
pusha
loopne
adc
jmp
sub
inc
or
or
sub
dec
xor
sub
pop
pushl
jbe
dec
push
gs
fidivrs
lahf
mov
mov
xchg
sbb
stos
sarl
imul
mov
in
xchg
inc
jb
mov
or
std
insb
fnstenv
mov
in
test
test
lea
leave
xor
enter
cmpb
sub
clc
jmp
inc
pop
jge
cmpb
jno
sub
jmp
push
and
xor
inc
loopne
popa
jecxz
pop
cmp
push
jo
inc
add
cmp
xchg
and
sub
xor
mov
pop
mov
push
outsl
push
mov
jnp
pushf
inc
js
jb,pn
adc
sub
bound
fbstp
jb
pusha
add
rorb
mov
popf
negb
push
fdivrs
je
push
incb
neg
dec
jmp
adc
sbb
pop
imul
inc
push
add
pop
add
pusha
stos
push
push
aaa
or
add
and
pop
jle
nop
dec
or
fsts
shl
inc
sub
adc
add
mov
sub
sub
add
and
outsl
lods
hlt
subb
pusha
jecxz
adc
mov
lcall
fdiv
dec
jno
aas
shl
outsl
mov
insb
add
adc
std
sub
test
mov
movsl
sti
aas
sbbb
sub
add
jnp
dec
xchg
adc
jl
lahf
pop
push
in
in
pop
fsubrl
mov
dec
inc
pop
mov
mov
loopne
xor
idiv
mov
add
decl
cmp
das
sub
imul
mov
dec
inc
das
aam
popa
std
out
inc
pop
pop
add
xor
addb
jo
xchg
loope
out
insb
sbb
mov
mov
xor
in
iret
push
jecxz
sub
cmc
into
hlt
sbb
lods
push
pop
sbb
in
push
or
aas
aad
push
mov
add
ljmp
jmp
mov
fsubrs
or
mov
push
jl
das
pop
xor
mov
inc
add
inc
loopne
push
mov
mov
sub
in
or
push
adc
pop
pushf
xchg
pop
call
cmp
fidivl
and
push
xchg
clc
mov
into
in
jns
dec
ja
inc
adc
pop
or
je
mov
lods
or
adc
jne
adc
jle
sarb
dec
inc
lds
pushf
pop
pop
loop
test
mov
pop
push
scas
test
mov
xor
testb
fcmove
fiaddl
pop
call
imul
clc
hlt
movsb
add
lret
jmp
adc
popf
sbb
insl
add
stos
jge
push
adc
jecxz
pusha
js
sub
insb
imul
orl
and
dec
or
sub
push
rorl
insb
mov
add
jb
add
test
pop
mov
lret
lret
xchg
mov
imul
out
adcb
sti
add
leave
jb
movsl
or
xchg
push
dec
sub
test
dec
add
or
dec
xchg
lea
or
mov
lds
loopne
jmp
ljmp
pop
mov
xchg
mov
and
iret
jg
inc
pop
sti
mov
sub
ficoms
out
add
or
xchg
push
call
dec
popf
pop
push
cwtl
xchg
xchg
repnz
push
mov
push
stc
fildll
pop
add
sub
nop
mov
cmp
iret
call
call
adcb
pusha
outsl
lods
sub
adc
mov
mov
inc
jge
scas
ja
loop
rcrl
negb
xor
push
mov
xchg
jle
pop
add
jbe
das
jns
cmp
or
dec
ljmp
mov
shl
adc
sub
jne
xchg
xchg
cmpl
rcll
pop
jmp
clc
and
adc
dec
mov
jb
out
lahf
adc
jge
dec
aaa
adc
repz
das
jmp
in
movsl
leave
ucomiss
push
jo
repnz
jb
scas
leave
pop
arpl
sbb
arpl
sub
sbb
cs
mov
mov
cs
jmp
stos
add
mov
lds
mov
insl
xor
je
je
call
cmp
scas
mov
loope
daa
add
lret
ja
mov
inc
in
aam
mov
test
sub
test
jo
or
add
pop
fisttps
dec
je
lea
or
push
lret
testb
xor
inc
or
or
jae
or
repnz
and
popf
jno
push
mov
push
scas
mov
xchg
adc
lods
xchg
sbb
mov
push
scas
mov
xchg
movsl
pop
dec
jp
jmp
pop
sbb
dec
cmp
adc
stc
mov
lods
jns
jo
aaa
stos
lea
add
lret
adc
lret
add
sub
adc
dec
loope
xchg
dec
sbb
dec
dec
mov
mov
pop
xchg
jmp
stos
and
push
sbb
sub
lods
jo
jbe
call
lahf
lret
daa
mov
mov
xchg
lock
sub
inc
mov
xlat
out
pushf
fbld
xchg
scas
cmpsl
mov
incl
popa
jne
jae
dec
fisttps
mov
mov
xchg
add
dec
jp
sbb
xor
scas
add
mov
sub
les
mov
push
mov
mov
mov
repz
sti
das
aam
fdiv
daa
imul
or
xor
popa
loope
cltd
pop
ret
jo
dec
pop
repnz
xchg
xchg
push
lea
pusha
pop
push
xchg
inc
pop
jae
add
or
sub
out
ret
movsl
dec
lret
int
ljmp
fwait
test
xchg
movsbl
inc
mov
rcrb
add
jbe
ret
add
divb
pop
aad
sbbb
sahf
adc
inc
call
fildl
or
imul
test
clc
pop
popf
stos
cmp
lcall
ret
cmp
lds
push
nop
dec
push
sub
icebp
push
pop
jmp
cwtl
dec
dec
sti
mov
xchg
cld
mov
ja
or
push
push
push
in
popf
lock
or
stos
push
push
fxtract
nop
jecxz
shrb
mov
xor
dec
cmc
insl
sub
pop
nop
and
mov
xchg
out
nop
pop
inc
das
lods
dec
cmp
pop
cmpsb
push
lock
fwait
ret
jle
lahf
add
sarb
jmp
shlb
push
cmpsb
and
icebp
popf
into
int3
sbb
aaa
lahf
addb
stc
loope
xchg
scas
test
js
loope
in
mov
jle
sahf
xchg
sbb
std
cmp
sarl
mov
sti
mov
xchg
and
push
push
jmp
sbb
pmaddwd
lds
aam
aad
cmp
push
fs
mov
mull
sbbb
xchg
rcr
lds
js
pop
adc
mov
mov
cmc
cmpb
xor
pop
adcb
xchg
push
mov
sub
int
leave
lock
js
and
scas
inc
pusha
pop
adc
es
push
loopne
jmp
cld
mov
mov
stos
lcall
adc
sti
xchg
lret
ret
scas
sub
add
mov
sub
xchg
push
dec
mov
sbb
adc
lds
mov
pop
lock
push
inc
in
pop
xchg
push
dec
dec
jo
sub
mov
lds
scas
jne
jb
push
push
clc
test
pop
xchg
xor
jg
hlt
subb
bswap
and
test
out
mov
dec
dec
mov
arpl
jns
data16
fidivrl
test
push
mov
xor
mov
sub
add
mov
mov
and
push
movsl
and
push
cmc
mov
cmp
jne
or
and
pop
push
lahf
jo
pop
push
pop
cli
adc
xchg
jmp
or
andb
int3
test
xchg
addr16
inc
arpl
and
fst
sbb
push
data16
inc
pop
push
sub
rolb
xchg
jp
mov
insl
push
pop
add
mov
loopne
jle
jo
sub
xor
push
test
leave
pop
out
xor
lds
les
icebp
in
ds
sub
inc
cwtl
or
cmpsb
push
dec
mov
fwait
mov
lea
push
imulb
jle
inc
inc
jmp
push
fmuls
xorl
and
stos
ret
fadd
rclb
jp
movsl
pop
cmp
xchg
stos
loope
xchg
adc
jmp
popl
mov
shrb
popa
shr
xor
data16
add
or
imul
aad
jmp
jecxz
lods
push
mov
lods
push
mov
ss
addl
arpl
and
push
insl
pop
mov
fldenv
xor
push
pop
in
sahf
xchg
sbb
out
add
dec
jmp
call
test
jg,pn
add
cmp
cmc
push
or
dec
xchg
mov
mov
jae
ja
pop
xor
push
addr16
xchg
arpl
neg
dec
and
mov
popa
mov
repnz
fidivl
jecxz
add
lock
mov
or
cmp
shlb
push
sbb
xchg
subb
and
call
xor
fistpll
ret
ja
loopne
jle
inc
jo
cs
and
mov
cltd
sbbb
cmc
push
dec
mov
lds
mov
and
fstl
add
rcr
jb
dec
xchg
test
pusha
xchg
pop
mov
clc
lahf
push
dec
popf
outsb
clc
shl
cmp
cmp
sarl
mov
dec
fwait
add
stos
xchg
pop
or
ror
pop
das
aam
pop
or
mov
add
outsb
adc
incb
orl
mov
orb
sub
xor
inc
mov
sbb
das
ljmp
inc
stos
aad
or
or
mov
or
or
jmp
sti
jbe
fldenv
push
hlt
pop
hlt
aaa
bound
xor
loopne
sbb
push
mov
pop
adc
sub
pop
adc
pop
add
xor
sub
es
sub
jmp
sbb
mov
cmp
lret
fdiv
add
sub
jecxz
ds
adc
or
add
fldenv
adc
ds
insl
lds
push
or
push
push
rcll
or
mov
shr
jmp
xor
pop
sahf
pusha
and
push
push
pop
jmp
out
jae
sbb
pop
adc
cmp
mov
jmp
test
pusha
xor
ljmp
shl
outsb
push
pop
and
aad
jmp
jb
fstpl
testb
mov
and
jb
mov
mov
jecxz
mov
shrb
mov
mov
shll
mov
idivl
scas
insl
add
xor
outsw
mov
jae
jae
pop
aad
leave
xor
dec
push
stos
sahf
test
sbb
or
cld
repz
ja
insb
xchg
xchg
and
ret
rorb
dec
les
xchg
gs
and
or
adc
push
push
daa
mov
sub
adc
and
mull
jp
std
and
lret
cli
jg
test
and
fimuls
test
mov
mov
jge
push
aaa
nop
pop
mov
sub
scas
and
loope
push
pop
in
mov
add
fucom
jge
dec
sub
fisttps
test
inc
scas
icebp
pusha
out
jge
push
rcrb
mov
repz
and
fmull
shrb
xchg
mov
push
inc
neg
int3
fbld
mov
mov
jp
fcoms
in
mov
shll
mov
sbb
add
jg
in
dec
sahf
es
sbb
cmp
dec
or
mov
test
popf
das
pop
jecxz
jmp
js
icebp
enter
sbb
pop
ret
jl
add
loopne
sbb
call
test
ja
push
daa
pop
fnstsw
roll
call
pusha
add
rorb
ljmp
push
push
pop
aad
xchg
mov
add
ret
cmp
mov
adc
ficoml
xorb
or
js
mov
ja
lds
ljmp
and
les
movsb
add
fistpll
scas
into
adc
push
push
sbb
jge
jne
mov
adc
and
mov
jno
mov
das
xor
adc
jmp
mov
push
xchg
fwait
or
cltd
adc
mov
sbb
neg
or
lock
imulb
popa
mov
and
clc
cmp
cwtl
aam
push
pop
sar
dec
scas
mov
dec
sbb
leave
ficomps
lcall
aad
mov
scas
add
jae
repnz
sbb
mov
test
or
test
loop
add
dec
add
dec
mov
jnp
or
pop
mov
cmc
mov
fldl2e
jecxz
subb
inc
lahf
inc
jmp
sahf
out
cmpb
aad
jge
fadds
pusha
mov
into
mov
push
adc
call
ja
cmp
loopne
sbb
int
lret
aaa
out
jg
jns
pop
add
shrb
jmp
mov
insb
mov
sarl
cmp
add
dec
push
scas
inc
dec
add
or
push
push
mov
in
push
loop
cmpsl
cmpb
bound
push
int
clc
insb
push
or
sub
lods
ret
lods
pop
add
fisttpll
shll
push
sub
ds
stos
sub
xchg
adc
fldln2
out
ja
arpl
push
jp
testl
or
jmp
xor
popa
insb
push
add
adc
pop
jp
enter
loope
xchg
cmp
test
inc
xor
dec
inc
lods
inc
cli
sub
jp
dec
es
xchg
ds
xor
ficompl
push
sbb
ss
stc
cmpsb
inc
cmp
pop
cmp
pushf
pop
aam
pop
adc
jno
jne
mov
sub
and
jo
sub
jp
add
or
inc
out
ror
aaa
or
or
shrb
bound
dec
mov
mov
jb
or
mov
shrb
push
xchg
dec
imul
pop
pop
inc
or
stc
mov
mov
cmp
cs
insl
mov
add
cltd
in
cmc
test
sbb
fmul
sti
mov
add
pop
mov
lods
aaa
or
ret
mov
push
mov
pop
and
out
test
dec
xchg
xor
movsl
call
mov
mov
mov
sub
jmp
and
xchg
popa
xor
in
inc
or
jns
push
push
adc
test
arpl
add
cmp
adc
es
inc
pop
pop
cmp
inc
and
add
adc
repz
mov
ret
add
sub
or
nop
aam
inc
das
loope
cmc
adc
and
pusha
add
sbb
cwtl
outsl
inc
push
mov
cli
or
shl
inc
into
xchg
and
push
sbbb
jns
fimull
jmp
mov
push
push
sub
push
mov
int3
push
mov
es
or
inc
loop
std
dec
jmp
and
sbb
add
sbb
aaa
mov
adc
incl
mov
mov
inc
fldl
adc
mov
jbe
or
nop
test
jmp
dec
aaa
jp
int
sub
or
sbb
add
movsl
pusha
pop
je
andl
xchg
push
test
push
rolb
add
push
mov
fs
dec
push
test
lock
roll
inc
sbb
add
lods
inc
call
mov
std
sti
xor
mov
ljmp
fisttps
adc
addr16
jbe
imul
in
decb
jmp
mov
mov
push
test
pop
jmp
fldln2
lock
adcb
in
std
jno
add
int3
subb
mov
adc
filds
jge
inc
add
mov
or
lahf
and
mov
sbb
call
cmp
out
pop
jmp
pop
or
add
mov
icebp
adc
add
fidivl
adc
push
adc
fisttpll
xor
sub
pop
or
jmp
shll
jmp
mov
mov
sub
jo
pop
jbe
rcrb
mov
cmp
mov
outsl
clc
push
out
mov
arpl
jp
add
mov
mov
mov
xor
out
and
insb
fsubp
and
push
fisubrs
fnstcw
and
push
mov
inc
xorb
ret
pop
and
nop
roll
add
shrb
cwtl
push
push
insb
call
fisttpl
mov
push
jns
inc
xchg
xchg
pop
pop
push
jmp
xchg
sbb
iret
inc
xor
adc
notl
push
pop
pop
jbe
ret
add
pop
stos
and
test
rorl
rclb
fildll
in
jmp
mov
and
jl
xchg
jmp
mov
cmpsl
out
sub
mov
pop
stos
hlt
fists
daa
cmp
repnz
ja
dec
lock
inc
lcall
jne
xlat
push
lods
rcrb
sbb
or
fnsave
add
les
jmp
jmp
enter
in
lds
mov
mov
lret
ret
jl
and
push
adc
ja
in
test
dec
in
add
sarb
lret
mov
push
add
sub
push
stos
addl
xchg
sti
les
stos
cmp
enter
dec
push
adc
mov
jbe
enter
add
jg
out
fsubl
fwait
add
and
cmp
and
cmc
mov
dec
or
cwtl
add
or
sub
imul
pop
sbb
addb
and
shr
push
cmp
xor
pop
push
pop
mov
xchg
jb
cwtl
add
lahf
adc
inc
adc
inc
pop
and
test
bound
mov
das
les
mov
inc
insl
xor
repnz
mov
cwtl
pusha
jp
or
mov
push
jmp
mov
outsl
stos
mov
jle
mov
in
jo
dec
pushf
data16
imul
ret
xlat
xchg
icebp
mov
and
jnp
je
aam
jl
in
pusha
mov
and
stos
inc
jmp
loopne
outsl
add
inc
jge
mov
lahf
sti
adc
notb
imul
test
jb
jle
movsl
adc
mov
adc
and
stos
mov
pushf
cld
ficoms
or
dec
and
incb
push
or
jmp
pop
mov
fwait
add
add
cli
dec
lcall
mov
outsl
jmp
xchg
mov
imul
xchg
push
ljmp
dec
loopne
icebp
pop
pop
stos
popa
jmp
jmp
pop
in
mov
cmp
sbb
push
inc
cmpb
fsubr
pop
sbb
dec
lock
mov
cmp
inc
jmp
pop
push
aad
fwait
ss
rcll
jg
and
fisttpl
and
pop
call
out
dec
push
mov
mov
pop
sti
jno
fdiv
movl
decl
int
movsb
lds
add
mov
push
movsb
dec
cli
mov
xchg
mov
adc
add
sub
fs
sub
movb
mov
cmpl
call
mov
loopne
out
jae
jae
notl
mov
pop
clc
je
and
xchg
sub
callw
mov
jmp
ljmp
jge
jmp
shll
ljmp
add
xor
sub
ror
inc
jp
cmp
jmp
loopne
sub
and
push
pop
aad
bound
int3
cltd
loop
jmp
mov
push
clc
dec
into
add
mov
inc
or
jl
stos
sbbl
popf
pop
lahf
stc
cmpb
adc
js
mov
push
jnp
fidivl
inc
mov
imul
or
mov
jbe
push
sub
pop
push
nop
pushf
and
repnz
shl
push
test
addl
rcll
cmp
in
or
and
pop
inc
icebp
adc
push
repz
push
loop
mov
push
repz
fdivr
loop
jbe
pop
mov
lahf
int3
cmp
add
xchg
hlt
inc
in
outsl
xchg
lds
fistpll
cli
lcall
mov
fiaddl
lahf
cli
cmpsb
dec
orl
pusha
fsts
and
sub
lds
cmovs
or
add
movsb
je
repz
push
pop
push
iret
repz
std
aaa
push
gs
add
nop
mov
jo
nop
inc
bound
jnp
pop
cmp
adc
scas
cs
and
push
inc
test
pop
pop
cmp
or
jmp
pop
push
lods
or
adc
ss
and
in
xor
inc
pop
jmp
pushf
int3
shl
inc
pop
inc
ljmp
add
add
push
push
call
movsl
or
lret
sub
push
jmp
mov
mov
ljmp
or
cmpsl
jp
push
repnz
sub
lock
pop
xlat
movsb
cmp
cmc
jo
mov
ret
dec
js
je
jmp
push
push
and
pop
xor
cmp
mov
out
icebp
in
jg
lret
or
lods
jecxz
adc
jmp
xchg
mov
xchg
fs
mov
arpl
cmp
loopne
add
xchg
dec
cli
inc
daa
pop
pop
add
sub
push
out
push
inc
and
push
and
dec
sub
add
mov
push
mov
loope
imul
in
bnd
push
sarb
cmp
in
or
adc
mov
jmp
jecxz
or
lret
or
arpl
cmp
test
cltd
les
les
push
xor
cmc
stos
xor
push
push
adc
addb
cmp
in
adc
add
mov
stc
test
push
ret
add
ljmp
stos
test
cmp
pop
mov
push
ljmp
jge
xchg
iret
sub
pop
push
call
pop
xor
sub
dec
jecxz
int
aam
pop
cwtl
dec
and
in
sbb
jmp
das
stc
cwtl
xchg
jle
and
test
inc
adc
cmp
aaa
ret
or
add
insl
clc
sub
push
jo
inc
xor
pop
or
push
xchg
push
push
jmp
pop
fs
out
and
jmp
add
cs
cmp
rorb
inc
sbb
nop
push
inc
ja
add
push
mov
dec
jnp
xchg
or
adc
push
out
xchg
js
add
push
mov
outsb
cmp
jl
jg
mov
shrl
in
inc
sub
dec
loope
sub
cmp
jae
subl
dec
decb
mov
rolb
insb
das
out
repz
pop
add
pop
fucomip
jecxz
or
fwait
pop
jmp
sbbb
test
in
fidivrl
add
or
add
or
sub
imul
and
shl
xorb
mov
push
cwtl
ljmp
add
inc
fs
xchg
movb
cmp
int3
cmp
mov
jne
and
out
fisubs
pop
jmp
sbb
shll
jmp
bound
int
push
or
call
dec
out
sub
out
adc
jmp
adc
lock
add
or
lock
xor
mov
ret
add
add
jmp
push
cltd
dec
mov
std
dec
jno
dec
pop
call
or
bnd
fucomp
repz
xor
jmp
out
dec
clc
and
je
pop
xorb
cmp
push
lcall
sub
add
or
jmp
imul
insb
je
pop
clc
fiaddl
shl
jmp
pop
fs
sub
jne,pt
jmp
push
inc
or
shll
adc
jmp
repz
das
cld
lcall
pop
mov
pop
dec
add
out
push
and
jbe
rol
pop
cmpsl
push
das
ja
add
inc
adc
add
push
mov
add
pop
les
mov
push
or
jbe
sbb
ja
fisttps
mov
stc
adc
push
mov
movsb
or
and
loop
adc
out
bound
push
js
sbb
add
jge
shr
pop
leave
dec
lahf
mov
xor
lods
adc
pop
stos
sub
push
call
dec
jne
xor
inc
jle
shll
int3
push
rclb
lods
push
movsb
scas
jo
jo
inc
rolb
mov
test
xchg
cmp
mov
out
leave
push
pop
sahf
cs
adc
test
jge
xor
test
shl
sbb
push
enter
jmp
cmp
mov
stc
cmpsb
fcmovu
xchg
push
add
mov
ja
mov
fucomp
andb
inc
in
movsl
push
sub
frstor
scas
das
pop
gs
push
invd
movsb
xchg
jbe
sbb
inc
mov
adc
pop
and
lret
popf
cmp
jmp
add
cmp
pop
cmc
das
xchg
mov
stos
adc
mov
fcom
mov
dec
adc
pop
mov
xlat
loop
gs
ds
stos
rcr
andl
lods
in
mov
push
push
push
imul
mov
not
test
aas
sub
sub
lock
or
ret
test
pop
mov
xchg
or
inc
pop
mov
mov
int3
add
pop
and
mov
shll
call
test
sub
jmp
or
addb
aad
cmp
rorb
jmp
add
adc
dec
xor
cs
mov
idiv
mov
pop
lock
add
mov
jnp
adcb
popf
jns
jmp
xchg
inc
aam
and
pop
xor
pop
ficomps
push
mov
add
cmpsl
mov
test
shl
adc
add
cmp
repz
and
adc
push
ror
adc
push
jnp
xchg
jge
dec
ja
adc
bound
movsb
or
add
insb
cmp
stos
inc
pop
addr16
cli
loope
push
cli
mov
sub
add
adc
popa
test
test
pop
cli
add
ret
dec
push
xor
std
xchg
loop
inc
call
fildl
inc
shl
xor
cld
lea
mov
mov
pop
mov
push
mov
add
inc
aad
jp
daa
aam
aaa
sbb
mov
or
add
push
inc
pop
xchg
aad
and
std
and
inc
ficoml
mov
std
cwtl
out
and
add
push
add
inc
add
sbbl
mov
xor
aaa
in
fsin
cmp
fs
pop
or
cmp
arpl
dec
ljmp
pop
add
push
lcall
std
mov
out
sub
pop
or
bound
jmp
fidivrl
adc
mov
mov
add
pop
orb
push
sti
pop
xchg
insb
mov
sbbb
lcall
cs
jge
leave
add
cmp
add
sub
pop
pop
pop
cmp
push
ret
push
xchg
loop
sub
enter
add
pop
jmp
addr16
mov
cli
add
ss
adc
xchg
jb
inc
shl
pop
sarb
push
rcr
jmp
cld
rorl
push
out
push
shr
mov
or
fs
cmp
lods
fldl
push
or
lock
push
fiadds
mov
pop
outsl
mov
in
lods
sub
pop
xlat
sub
inc
cmpl
mov
mov
lds
mov
mov
cmpsl
in
xor
imul
xchg
and
add
pop
push
cmp
jmp
push
shll
fbstp
or
mov
and
pop
sbbl
sbb
cmp
mov
jmp
mov
xchg
xchg
js
jbe
or
pop
subb
push
xor
test
jno
es
das
mov
mov
fwait
jl
cltd
add
dec
add
ffreep
enter
shr
jne
xor
xor
push
repz
pop
out
nop
ficompl
fimuls
mov
add
pop
fldcw
jae
lret
in
add
imul
jl
sbb
push
loop
add
mov
jmp
test
or
jnp
or
cmp
repz
push
pop
push
push
mov
adc
mov
shlb
sub
lock
push
cwtl
xor
jl
rcrb
inc
sbb
dec
mov
add
test
test
add
jmp
mov
cmc
pop
add
dec
mov
or
je
pusha
testl
or
jmp
xlat
adc
ret
mov
ss
scas
or
cmp
sub
repnz
orb
and
or
fsubl
or
fsubrl
ret
stos
iret
pop
sub
or
sub
dec
in
rcl
or
inc
addr16
jae
mov
push
cmpsl
cs
mov
stos
hlt
fwait
push
loope
cmp
xchg
mov
cltd
pop
push
mov
cld
movsb
rclb
scas
push
jns
jl
test
xchg
jne
pop
pop
push
adc
xchg
mov
and
adc
or
scas
pop
fnstsw
sbb
pop
sar
add
outsb
bound
popa
sub
addr16
divb
push
insb
dec
popf
xor
dec
ud0
imul
xchg
mov
xchg
jecxz
fists
jmp
inc
in
xorb
dec
fs
mov
cli
mov
cmovno
sub
sub
xor
cld
jp
pop
push
loop
jle
xor
pop
push
or
adc
lods
addr16
jo
sub
cltd
mov
iret
inc
add
push
aad
and
inc
jb
stos
pop
pop
push
les
call
test
mov
es
pop
scas
arpl
dec
adc
scas
int
in
and
das
cmp
idivb
xchg
imul
cmp
imul
out
dec
outsl
loope
pop
and
les
popf
add
aas
outsb
jmp
lret
and
dec
imul
jne
pusha
or
call
imul
ja
pop
cli
lahf
pop
cmp
push
fsubs
mov
test
fldenv
push
cmp
mov
push
xor
add
or
adc
mov
add
dec
push
push
pop
cmova
xor
push
inc
sub
sub
push
pop
bound
jno
inc
imul
js
push
inc
mov
mov
aad
cld
imul
call
clc
test
or
jmp
jnp
rorl
mov
leave
or
filds
add
loopne
add
sub
xchg
or
cvtps2pi
stc
aas
dec
mov
lods
pop
rolb
push
mov
xor
add
pop
lret
mov
jle
pop
aas
cmp
or
mov
jns
nop
push
push
inc
fisubrl
jbe
pusha
adc
das
stos
shr
push
push
out
cmp
pop
neg
mov
insl
inc
dec
sub
popf
arpl
pop
cs
iret
or
cs
dec
stos
lret
data16
nop
out
sub
jg
jmp
inc
xlat
ss
imulb
repz
popf
in
decl
insb
mov
fptan
lock
jbe
jnp
push
and
pop
out
inc
cltd
jmp
test
stos
push
loop
jl
or
jmp
mov
jbe
inc
mov
add
test
pop
jae
sub
sbb
aad
ds
adc
jo
sbb
jl
or
pusha
je
push
pop
ljmp
filds
cs
aas
fildl
fisubrl
jg
xor
cld
sub
jmp
cmpsl
push
scas
loopne
dec
repz
into
sbb
cs
lret
jmp
inc
mov
jbe
jg
pop
enter
pop
mov
or
sti
and
jbe
or
pop
incl
and
dec
or
mov
pop
dec
lcall
add
in
loopne
je
in
adc
add
stc
inc
jns
mov
aad
pushf
add
push
dec
add
adc
or
and
add
mov
std
add
xchg
mov
add
pop
pop
mov
adc
es
pop
imul
jl
push
xchg
mov
rcll
stos
nop
pusha
adc
mov
jmp
add
std
push
mov
js
inc
xor
ret
cmc
inc
int3
andl
mov
add
mov
sbb
pop
mov
das
push
dec
sbb
and
adc
mov
xchg
jmp
ljmp
ja
sub
loop
pusha
push
int
dec
lret
ljmp
in
pop
aad
imul
push
add
xchg
jo
out
add
sbb
and
addl
js
repnz
inc
add
test
jge
movsb
dec
pop
lret
add
push
test
out
adc
test
cwtl
mov
pop
mov
push
pop
imul
test
jp
mov
dec
lea
test
dec
jp
cltd
jo
decl
loope
cmp
xchg
imul
cmp
mov
movsl
ret
jge
xor
adcl
mov
insl
xchg
mov
test
jnp
add
scas
pop
lea
mov
add
in
add
fiadds
das
dec
pusha
repnz
ds
inc
add
fs
pop
jecxz
out
cmp
insb
js
inc
pop
jle
add
dec
push
movsl
fidivs
add
or
push
xchg
cld
xchg
jne
popa
add
jmp
mov
jg
add
loope
test
mov
add
sub
pop
mov
jno
mov
add
scas
lock
clts
jge
test
cld
les
insb
jbe
adc
sub
jecxz
call
insb
cmpsl
pop
iret
jo
push
test
stos
cmp
mov
add
jo
add
and
xchg
test
ffree
lret
loop
nop
xchg
add
lds
clc
icebp
push
add
xor
test
and
or
inc
dec
ja
add
inc
cmp
mov
sbb
cmp
push
mov
lret
int
push
pusha
add
cltd
and
push
add
sub
pop
in
adc
sub
pop
lea
sahf
mov
pop
adc
add
push
jb
mov
mov
pop
stos
leave
dec
lea
mov
aam
mov
add
ret
scas
dec
iret
push
fmul
xchg
in
nop
inc
sahf
inc
pusha
bound
cmp
cmp
js
jnp
add
adc
dec
popf
xor
cmp
add
cmc
shrl
pop
xor
add
push
ds
mov
or
aam
mov
scas
nop
rolb
push
inc
mov
push
ffree
adc
popf
adc
xchg
aaa
inc
xor
repnz
add
les
mov
mov
in
push
rcr
dec
and
out
and
pusha
jge
pop
pop
stos
mov
add
cmc
sbb
into
jno
addr16
movsl
scas
pop
cwtl
into
test
mov
pop
adcl
jbe
mov
mov
mov
cmp
jbe
lret
rorl
fwait
jecxz
add
adc
dec
ss
int
cmp
cld
push
add
mov
lret
stc
test
loop
nop
clc
cmp
cmp
cmp
add
mov
popl
mov
and
test
negb
insb
dec
nop
mov
dec
add
jmp
inc
pop
inc
xchg
lcall
xchg
add
add
out
es
jle
add
inc
inc
xchg
xchg
xor
daa
jns
add
push
dec
sub
push
cmp
xor
push
ljmp
sbbl
outsl
shlb
cmp
pop
adc
lret
faddl
out
inc
add
dec
jnp
inc
sarl
add
in
xor
add
lcall
add
mov
add
mov
addr16
nop
xchg
ret
xor
icebp
das
pop
add
aas
pushf
sub
rol
push
data16
mov
out
pop
add
aad
test
add
add
imul
add
jb
mov
push
fidivl
cmp
pop
sbb
push
dec
push
mov
loope
xchg
add
aaa
int3
jbe
lods
xchg
out
div
add
add
adc
es
sub
js
fcoml
add
and
mov
popa
add
repnz
popf
mov
adc
add
jecxz
mov
decb
and
repz
out
cmp
jge
jbe
nop
sub
push
into
pop
movsb
adc
les
loop
pop
lods
jbe
pop
and
fcoml
int
aam
push
bound
push
cmp
rolb
mov
movsl
jecxz
test
add
movsb
sarb
or
rclb
out
pop
dec
mov
pop
jno
sbb
js
adcb
scas
adc
jg
cmp
out
dec
adc
test
sub
inc
push
cli
fmull
pusha
add
push
mov
or
add
mov
call
ja
pop
testl
and
loope
add
daa
lods
mov
clc
add
push
add
push
shll
js
inc
pop
add
pop
push
cs
jo
stos
push
shll
pop
mov
imul
xchg
pop
inc
aaa
inc
sarb
add
sti
dec
repnz
push
in
sbbb
inc
push
xchg
add
lock
stc
addl
jb
loopne
pop
mov
inc
xor
cmp
mov
adcl
cmpsl
add
add
into
mov
add
dec
xchg
insb
mov
lds
sub
sarl
cmpsb
cmp
sti
sub
enter
ret
xchg
mov
push
jb
mov
stc
sub
sbb
mov
cmp
or
adc
mov
or
pop
adc
adcb
imul
flds
and
test
and
cmpl
arpl
mov
rolb
test
scas
inc
cmp
or
mov
sub
fs
js
movsl
call
outsl
add
push
jno
xor
scas
push
sbb
jmp
add
sub
loopne
incb
and
push
iret
dec
lahf
idivb
add
nop
test
aaa
add
sbb
adcl
fdivs
mov
mov
call
fstps
adc
or
mov
add
test
fistps
or
repnz
cmpsb
loop
dec
leave
pop
fcomps
adc
or
test
add
std
xorl
xor
cld
jg
movzwl
movsb
adc
add
push
jae
es
sub
or
inc
sbbb
xor
stc
ljmp
sti
cmp
add
xor
fwait
add
xchg
mov
nop
gs
fs
popa
xchg
adc
cmp
mov
cmp
sbbl
add
add
or
dec
fs
pop
pop
pusha
cwtl
adc
adc
sti
int
mov
fisubrl
hlt
pop
mov
movsb
out
testl
roll
add
cmp
push
add
add
mov
add
lcall
add
jge
xor
mov
jg
push
add
pushf
in
push
shlb
and
add
lahf
push
sub
xlat
jmp
int3
or
in
stos
mov
outsl
or
add
mov
jp
pushf
rcl
push
pop
pusha
cs
jmp
ss
daa
push
push
mov
add
sarl
add
std
seto
add
shrl
add
pop
outsl
ja
xchg
dec
xchg
loopne
lret
cmp
mov
mov
mov
cmp
es
sub
or
mov
loopne
push
rcr
pushf
jl
add
test
jns
cli
mov
xchg
add
jnp
jge
shrb
pop
fldt
mov
sbb
adc
pop
repz
mov
fxch
dec
shrb
repz
fsubl
pop
adc
push
cmc
adc
pop
and
add
negb
test
mov
into
adc
sar
jge
mov
jne
xor
popf
sbb
cltd
inc
adc
ret
mov
and
add
in
ss
sub
inc
cmp
pushf
mov
pop
repnz
leave
fwait
pop
cmp
fidivrl
jl
cwtl
or
cmc
sbb
inc
mov
iret
inc
hlt
paddd
loop
lods
sbb
imul
pushf
and
or
je
push
add
insb
jl
fsubrs
push
dec
push
out
add
jmp
sub
imul
pop
mov
add
sbb
add
pusha
or
popf
inc
mov
add
das
xor
cmp
out
dec
add
lcall
cmp
xchg
dec
in
add
or
add
mov
xor
fcmovb
in
imul
arpl
or
hlt
add
sub
addr16
sub
xchg
das
rcr
or
subb
inc
push
dec
inc
cwtl
and
add
shlb
arpl
jns
sbb
add
push
cmpsl
movl
addr16
xchg
aas
mov
pop
cli
push
test
inc
in
cmp
dec
icebp
push
es
into
add
or
cmp
cvtdq2ps
insl
adc
inc
out
mov
mov
and
pusha
sub
daa
xor
js
mov
or
xchg
jbe
inc
and
dec
add
decb
clc
shrb
cmpsb
cmp
cmp
push
ret
cmc
push
fisubs
add
cmp
adc
adc
repz
cmp
clc
in
mov
pusha
shl
dec
aam
mov
add
fcoms
xchg
lea
add
or
fincstp
cmp
dec
addr16
clc
roll
add
lods
rclb
gs
dec
add
and
lret
adc
pop
mov
inc
mov
shrb
call
subl
and
test
aad
js
cs
add
or
jl
ljmp
fsubrl
movb
or
sbbb
pop
push
sub
jg
xor
call
cmp
das
shlb
pop
adc
mov
xchg
mov
push
jbe
push
jo
mov
lret
jmp
lods
add
sub
inc
arpl
mov
int
xchg
adc
sbb
sbb
insb
fucomip
outsb
stos
sbb
lret
popa
orl
nop
add
cmc
sarb
sbb
mov
lock
mov
cmpsl
je
adc
imul
shl
add
sub
or
inc
pop
jne
add
or
test
adc
nop
sbb
out
subb
jns
mov
fbld
add
xchg
push
adc
stc
pop
jmp
push
add
xchg
out
add
std
imul
das
xchg
daa
inc
test
jle
sub
pop
fwait
out
out
repnz
jbe
icebp
xchg
xor
mov
daa
add
xor
add
rcrl
bound
xchg
or
loope
out
push
add
adc
pop
pusha
xchg
add
ret
sub
out
hlt
clc
jle
xchg
add
xor
out
movsb
cwtl
and
xorb
shl
pushl
add
lret
cmp
adc
add
pop
hlt
outsb
add
sbb
mov
ljmp
jns
xchg
mov
push
mov
mov
add
and
pop
cmp
sub
mov
aad
enter
cmp
fidivrs
data16
fs
stc
rolb
push
popf
popa
adc
or
pop
and
in
adcb
xor
mov
lock
sbbl
cwtl
loop
gs
cli
sahf
add
out
mov
rorl
scas
lret
mov
dec
inc
in
push
nop
js
out
rcrb
insl
add
mov
jbe
add
jl
test
mov
push
loopne
repz
shr
fsubrp
rorl
dec
sbb
into
add
incl
or
push
mov
pop
or
dec
test
add
sbb
jl
sbb
xor
popa
and
hlt
lods
cmp
mov
push
out
iret
js
add
push
andl
andb
in
fisttpll
shrb
and
adc
stos
shrl
xchg
xor
sbb
dec
xchg
cltd
ljmp
adc
lret
loope
jp
das
test
cmp
or
pop
pop
imull
xchg
add
inc
or
add
sub
cmp
add
fwait
test
and
and
rolb
int
adc
cli
cmp
into
inc
leave
fstps
mov
and
and
mov
fsubl
sbb
mov
fs
inc
add
adc
sub
and
pushf
push
cmp
and
adc
pusha
and
dec
pop
call
add
mov
add
cld
ret
mov
adc
bound
inc
cwtl
dec
jmp
loop
add
int
or
adc
ffree
add
mov
mov
cmp
loopne
jecxz
les
fs
loopne
loop
pop
cmp
jne
jmp
and
xlat
push
and
ss
rol
int
shlb
push
stc
lock
mov
call
dec
cmp
adc
xor
aam
push
syscall
mov
dec
mov
add
dec
push
test
sub
add
push
sbb
rorb
jnp
mov
fcmovb
pop
sbb
mov
iret
lock
mov
push
sbb
push
jbe
lret
cmp
addb
mov
cwtl
or
cmpsb
pop
ljmp
lret
cwtl
subl
add
sbb
mov
inc
mov
mov
test
or
call
or
icebp
stos
loopne
out
lock
xlat
dec
adc
add
jnp
out
adc
gs
dec
popa
int3
sub
adc
jae
shll
mov
sbb
dec
adc
icebp
and
mov
add
jmp
lret
push
cmp
pusha
mov
jae
cmp
shll
and
cli
stc
andb
jecxz
dec
lock
lret
mov
add
jmp
mov
mov
push
sarb
xchg
push
adc
sti
mov
push
sbb
dec
imulb
std
mov
add
push
push
add
push
cmpsl
sbb
sbb
jecxz
add
xchg
sub
xor
xor
dec
mov
pop
mov
push
push
loope
pop
stos
pop
dec
sbb
or
lods
xchg
pop
adc
dec
add
mov
inc
adc
xchg
add
push
js
push
shrb
inc
icebp
or
mov
testb
js
pop
cmpsb
dec
jecxz
mov
in
dec
lea
add
nop
add
test
aas
std
test
loop
push
lods
inc
les
sbb
addb
or
and
ljmp
sub
shll
pop
std
arpl
aam
xor
and
fstps
xor
dec
sbb
push
inc
inc
add
inc
cltd
pop
pop
mov
sub
les
sub
nop
inc
out
enter
and
arpl
jecxz
lock
int3
or
jle
fildll
mov
popa
mov
bound
call
out
cwtl
rolb
add
pusha
in
orb
repnz
es
or
inc
and
shlb
movsb
mov
pop
pusha
div
sub
rcrl
daa
pop
mov
mov
sbb
jmp
cmp
xchg
xor
dec
aam
pop
and
dec
adc
scas
push
orb
mov
cmp
bound
mov
cwtl
inc
jnp
nop
sub
fsubs
push
mov
loopne
push
cmp
and
arpl
pop
nop
and
mov
or
add
les
mov
loopne
pop
hlt
and
pop
inc
inc
frstor
flds
test
jl
sbb
and
or
orb
dec
cmc
inc
jl
and
sub
outsl
mov
mov
cwtl
sub
inc
mov
pop
call
in
inc
adc
mov
inc
stos
popa
push
out
adc
and
push
or
fdivrs
scas
xor
push
pop
in
sbb
and
dec
cli
add
or
inc
in
xlat
mov
inc
push
add
mov
cmp
inc
test
clc
push
data16
adc
pop
pop
push
xchg
enter
and
adc
lods
out
jae
xchg
cmp
adc
repnz
call
mov
inc
cmp
adc
cmp
loopne
add
shlb
sbb
sbb
add
jbe
js
ds
filds
xor
xchg
ret
adcl
loopne
xchg
add
mov
cmp
movsl
lret
nop
xor
cmp
xor
pop
cmp
push
mov
lds
cwtl
add
repnz
and
packsswb
repnz
les
loopne
xchg
mov
daa
adc
fsubs
xorb
add
dec
mov
movsl
mov
loop
popa
or
roll
push
pop
add
xor
test
in
sbb
cmp
push
rorb
push
pop
adcb
sub
subl
and
jnp
or
enter
pusha
cmpsb
inc
and
push
cmp
or
dec
xchg
inc
push
mov
jae
les
sarb
mov
nop
lret
sbb
sbb
jle
dec
iret
push
add
insb
inc
cmc
add
fistl
cwtl
or
lret
lock
push
jmp
adc
mov
cmp
inc
pause
xor
jns
pop
mov
xchg
pusha
aad
adc
shrl
xchg
jecxz
test
add
out
mov
repz
cltd
insl
into
cmp
out
jns
jnp
mov
add
mov
xor
add
out
loopne
or
and
add
pusha
lret
xchg
xchg
push
sbb
mov
leave
cmp
decb
xlat
push
pop
shl
ss
pusha
arpl
stc
adc
enter
inc
lods
pop
xor
out
cmp
lret
xor
adc
dec
sub
sub
jl
add
adc
nop
inc
dec
mov
movsb
lcall
xchg
popa
add
subl
les
leave
adc
xchg
inc
push
push
mov
add
adc
fldcw
inc
mov
test
mov
mov
insl
pop
push
mov
cs
aaa
add
and
repz
pusha
and
imul
outsb
aad
mov
xchg
cld
sbb
inc
mov
jbe
inc
cmp
cli
popa
enter
dec
pop
popf
rcrl
jnp
add
push
jge
gs
cmp
inc
rcrb
cmp
dec
call
aaa
inc
clc
sahf
jbe
js
adc
fldenv
mov
pop
xor
shlb
xchg
mov
push
popl
rol
cwtl
dec
push
mov
cld
pop
and
and
test
loopne
mov
push
dec
in
fisubl
and
mov
jae
or
or
or
or
mov
jl
mov
repz
sbb
cwtl
or
xchg
call
sbb
or
inc
mov
add
ja
xchg
add
lods
push
clc
nop
insb
xor
mov
cmp
fwait
jnp
add
adcb
add
test
sub
and
and
daa
inc
inc
sub
adc
cwtl
xlat
add
pusha
out
cmc
push
mov
xor
mov
inc
das
push
mov
xchg
sbb
sub
testb
inc
sub
mov
add
fdivrs
stos
xchg
mov
xchg
call
or
mov
sub
lds
fs
jne
fsubrl
loopne
xchg
push
ds
dec
and
bound
rclb
mov
je
ja
jbe
adc
rorb
es
aas
ss
out
mov
push
leave
pop
ud0
in
inc
enter
cmp
or
xchg
jecxz
adc
stos
enter
sub
ret
into
test
sbb
mov
cmp
mov
xor
or
inc
test
hlt
add
repz
xor
add
loopne
lock
add
mov
and
test
or
hlt
cmp
inc
add
ss
cmp
adc
cmp
jo
adc
xor
or
test
xchg
pop
add
inc
mov
aaa
jle
add
push
std
sub
insb
shrl
xchg
jmp
mov
add
outsl
fcmovnbe
push
ljmp
jb
push
adc
jno
test
aaa
adc
pop
and
add
xchg
push
pop
pop
test
or
mov
adc
adc
adc
in
addb
cltd
xor
and
push
std
pop
inc
dec
ljmp
sbbb
jns
or
int3
push
nop
mov
cmp
inc
hlt
mov
mov
lea
and
stos
mov
and
and
cltd
mov
jbe
mov
and
lret
add
jae
sahf
sub
cs
hlt
and
mov
das
in
cwtl
push
fisubrl
sub
xor
pushf
fwait
inc
mov
insb
clc
jle
pop
add
aam
push
sbb
gs
rclb
inc
xchg
ss
add
jbe
cmpsb
mov
daa
pop
xchg
call
fldl
mov
jp
mov
outsl
roll
out
xchg
ss
pop
imul
xchg
rolb
mov
jo
cld
add
xor
fimull
rolb
pop
xor
sub
fadds
add
inc
in
add
xchg
mov
push
enter
mov
int3
mov
mov
sbb
loopne
bound
sub
movsb
jb
inc
inc
fwait
cmc
xor
inc
or
psrlw
or
push
mov
pop
ret
add
ja
cmp
xor
fdivl
rcrb
and
sbb
xchg
mov
xlat
aas
push
sub
loopne
cmc
sbb
add
outsb
cmp
enter
or
and
inc
lret
addr16
add
push
scas
aas
dec
cli
pop
test
sub
call
push
xlat
add
addr16
xor
and
lock
je
arpl
in
mov
in
sbb
mov
xor
scas
cmp
add
and
push
divl
mov
or
lret
nop
clc
dec
mov
pop
mov
inc
repz
mov
mov
jecxz
pushf
mov
cmp
or
mov
mov
push
test
enter
cmp
or
aas
addb
mov
dec
add
sbb
orl
xor
mov
or
test
in
cmp
loop
push
mov
add
lcall
jmp
pusha
jno
test
mov
cmpsl
mulb
xor
push
inc
shll
and
outsl
test
add
inc
mov
mov
push
inc
cmp
xchg
add
push
xor
adc
inc
call
xor
nop
icebp
xchg
jbe
fcmovnu
pushf
push
arpl
inc
mov
testb
aaa
fisubl
xorb
sarl
add
je
mov
shlb
add
add
inc
cmp
daa
scas
dec
in
xor
dec
jle
outsl
mov
jno
popf
cmp
rorb
or
xchg
and
imul
movsl
sbb
add
pop
pop
out
cld
add
fdivrs
stos
adc
scas
punpcklbw
call
jbe
ja
add
jo
jae
loopne
movsl
les
movsb
push
sbb
inc
fxch
dec
xor
xchg
add
and
fs
rorl
mov
imul
aam
lsl
fwait
jns
jne
cmp
xchg
jbe
rcrb
push
add
int
in
nop
inc
push
sar
scas
arpl
cmp
cmp
mov
test
in
mov
and
je
lock
push
push
adc
mov
jmp
int
dec
mov
mov
add
cmp
inc
xchg
push
xrelease
xor
ja
loopne
lods
pusha
daa
sbb
lds
dec
mov
dec
into
jns
shll
cmp
push
jae
in
sub
and
outsl
mov
add
insb
gs
push
xchg
adc
push
dec
in
jmp
mov
loope
jbe
add
enter
xchg
dec
in
jle
lods
js
out
mov
sub
clc
xorl
pop
cli
mov
jnp
pop
lods
add
int3
js
inc
dec
adc
sub
jns
filds
lret
jnp
push
sti
add
fstpl
adc
shll
or
xchg
inc
add
pop
and
xchg
pop
ficoms
int
xlat
cmpsl
addr16
adc
rol
sub
mov
shrb
sahf
jmp
test
popf
xchg
sub
iret
add
inc
data16
and
cmp
push
pop
mov
pusha
bndldx
adc
leave
inc
add
loopne
add
xchg
stos
sub
jne
jns
jge
mov
pop
fstl
pusha
les
jne
add
je
mov
icebp
ficomps
or
mov
scas
sub
adc
adc
inc
or
fiaddl
lret
sbb
push
and
jp
insb
lods
pop
ss
or
jecxz
lea
mov
xchg
cltd
pop
fnstcw
add
cmp
push
add
aas
add
mov
iret
mov
js
shrb
mov
pop
add
cmpsl
mov
fimuls
or
addr16
sbbb
xor
add
xchg
gs
lock
jecxz
ret
and
js
add
sub
inc
sub
push
add
or
and
test
sub
adc
notl
ss
or
test
je
inc
add
popf
call
pop
push
in
mov
xor
addl
loope
pop
mov
cltd
pop
dec
ljmp
mov
cmpsb
test
pop
adcb
add
jp
aad
mov
push
int3
sbb
mov
stos
imul
mov
jle
push
mov
pop
mov
cmp
cmpsb
pop
sbb
mov
xchg
mov
push
sbb
decl
push
jno
dec
add
jg
aaa
pop
add
out
sbb
pop
mov
add
pop
inc
mov
js
cs
mov
test
das
ja
paddq
cld
shl
inc
xor
add
or
outsl
push
cmpsb
lods
out
inc
icebp
sbb
xor
or
add
insl
bound
jno
xor
inc
arpl
or
add
dec
or
cmp
xchg
add
mov
xor
jmp
outsl
dec
addb
push
add
push
in
mov
add
adc
out
add
aam
xchg
pop
sub
cltd
es
pop
dec
add
nop
mov
loope
test
add
sti
add
repnz
loopne
mov
add
dec
mov
add
dec
xchg
popf
xchg
and
adc
cmp
pop
xchg
add
push
add
sbb
aad
or
inc
cmp
mov
and
add
add
add
sub
hlt
mov
loope
pusha
add
imul
push
fwait
icebp
or
pop
loopne
add
mov
pushf
and
xchg
test
jnp
dec
es
ds
add
push
sbb
mov
in
mov
adcb
adc
lret
push
stos
stos
mov
add
fidivs
xchg
push
sub
icebp
data16
cwtl
mov
push
imul
push
cmpsl
add
pop
mov
add
mov
out
add
pop
add
push
aaa
sbb
loop
add
int3
shll
mov
and
sbb
imul
mov
cmp
add
cmp
push
sbb
scas
add
inc
xchg
add
adc
jp
add
mov
test
sub
mov
mov
or
jnp
sbb
push
mov
push
pop
sbb
dec
mov
loope
sbb
dec
addr16
or
pop
mov
xor
repz
cli
sahf
add
pop
pusha
rcl
cmp
and
icebp
pusha
sub
add
repz
fmuls
and
fwait
mul
lcall
or
xlat
inc
test
lock
add
sahf
lods
mov
jbe
movsb
xchg
cli
sbb
pop
sub
xor
or
cld
add
in
and
or
push
jne
inc
pop
cs
add
add
loopne
xor
add
jle
lods
fistpll
rolb
adc
popf
addb
loop
sahf
hlt
test
push
sbb
add
add
out
pop
mov
add
movsl
jge
push
imul
pop
add
or
data16
incl
js
lcall
xchg
shrb
dec
add
xchg
mov
cs
add
mov
sub
pop
mov
movswl
jne
jle
jge
sbb
rorl
cmp
dec
pop
out
movsb
lret
fwait
xchg
sub
jae
push
add
ss
in
add
dec
jo
lock
flds
or
and
pop
or
add
mov
shll
add
movsl
mov
mov
into
rolb
adc
or
dec
test
adcl
pushf
mov
or
jb
sahf
icebp
sbb
push
cmp
adc
hlt
push
xchg
imul
sbb
mov
inc
sbb
movsb
subb
push
cmp
pusha
add
pop
in
adc
sbb
ds
mov
pop
lahf
mov
stc
outsl
push
adc
xor
mov
rcll
fadds
lret
stos
xor
popa
add
addb
sub
sti
push
sbb
aad
and
jno
shr
xchg
pop
rorl
sarb
xor
mov
and
cwtl
out
mov
jecxz
pop
cmp
mov
pop
leave
fwait
add
sbb
dec
dec
pop
sbb
ss
loop
sub
sahf
mov
push
xor
sbb
add
insb
ss
mov
sub
insb
push
mov
push
sub
clc
xor
rolb
mov
mov
movsl
mov
mov
cmp
mov
mov
ja
mov
adc
aad
jo
lock
xchg
and
nop
cwtl
and
out
sbbl
int3
add
add
mov
xor
push
mov
das
sarb
sahf
fadds
mov
add
sbb
sar
add
insb
pushf
testb
or
hlt
out
pop
push
mov
xor
jbe
mov
cltd
rol
cmpsl
pusha
mov
mov
clc
push
sbb
jmp
movsl
push
stos
mov
stos
and
cmpsl
xor
cmpsb
add
push
mov
in
mov
or
fistl
jl
or
or
mov
mov
ds
cltd
add
jne
pop
call
adc
jg
mov
jg
jl
add
test
movsl
or
sub
push
dec
popf
pop
pop
add
pushl
fwait
les
pop
pop
mov
mov
test
ficomps
shll
dec
xchg
add
aad
mov
jne
movsb
incb
and
cmp
daa
add
cmp
rorb
dec
insl
roll
and
mov
aad
and
jp
cmp
in
les
adc
scas
lock
clc
leave
or
ret
push
jp
pop
jg
shll
rcll
push
cmp
int
sbb
addl
pop
push
in
sbb
into
pop
mov
aaa
add
adc
cmp
add
repz
mov
stos
jl
mov
in
or
aad
out
dec
mov
scas
cmc
test
push
jl
pop
xor
clc
pop
cwtl
repnz
and
or
or
popf
scas
push
inc
sbb
xchg
shll
stos
in
cmp
push
es
pushf
push
inc
sbb
mov
and
into
addl
sbb
out
in
or
aad
lea
aaa
in
cmovs
mov
dec
test
fcoms
aaa
adc
push
mov
adc
int
mov
xor
xchg
leave
jno
insl
sbb
push
outsl
mov
les
push
aam
lret
push
mov
fidivl
dec
cld
arpl
mov
clc
sub
xor
xchg
adc
fidivrs
rclb
lret
mov
dec
in
leave
dec
dec
cmp
loop
fs
orb
or
push
adc
pop
pushaw
lcall
dec
add
nop
and
inc
ror
js
js
or
mov
lods
out
rol
and
jle
jl
dec
inc
or
hlt
jnp
mov
movsl
xor
mov
jg
adc
or
xor
xchg
inc
je
fidivs
or
dec
adc
mov
jbe
call
xor
or
daa
dec
scas
loopne
jle
pop
lret
push
loopne
sbb
or
icebp
ds
jo
in
jb
pushf
shll
push
or
inc
push
ficomps
aaa
push
repnz
adc
or
sbb
adc
dec
adc
dec
inc
mov
adc
dec
dec
dec
xchg
inc
ds
add
xchg
sub
out
xor
icebp
mov
mov
or
cmc
fidivrl
daa
out
mov
jl
cmp
mov
leave
xor
jns
call
sbb
mov
inc
rolb
pop
scas
int3
rol
mov
add
pop
int
sbb
add
lods
repnz
cwtl
mov
jge
mov
sub
dec
cmp
push
test
xor
add
sub
aad
sbb
sti
lock
ljmp
lret
push
push
iret
xor
movsl
cmp
cmpsl
add
adc
ljmp
rcrb
test
stos
loop,pt
xchg
sub
sbb
fiaddl
pop
pop
sbb
push
ret
sub
fisubs
mov
jo
imul
sub
mov
xor
dec
and
pop
je
xor
cmp
lock
add
xor
push
orb
repnz
sbb
inc
and
or
and
add
pop
js
aaa
or
je
xor
inc
pop
aas
dec
push
add
or
andl
push
pushl
loope
incb
push
int3
out
or
jbe
lock
aaa
incl
dec
push
inc
dec
jmp
mov
push
inc
push
inc
je
ja
popa
xor
pop
inc
test
jbe
xor
and
push
fwait
sbbb
inc
and
aas
jne
in
movsb
fsubrp
and
and
xchg
mov
push
test
pushf
add
jno
push
add
popa
add
inc
bound
xor
cwtl
pushf
push
or
sub
add
sbb
lret
or
ficoms
outsl
sarb
int
add
shrb
sub
sar
pop
stos
stc
cltd
mov
sbb
fxch
push
mov
test
push
cmp
adc
sbb
and
roll
jecxz
cmp
and
sub
xor
test
ret
xchg
leave
outsb
adc
xchg
stos
popa
push
mov
adc
mov
xchg
add
lods
xor
adc
jecxz
mov
loopne
movsb
jge
pop
ds
enter
imul
add
rcl
gs
or
jnp
sub
adc
dec
xchg
test
fcmovnb
xchg
cmpsl
nop
dec
push
and
sub
mov
inc
or
cmc
sbb
sbb
jl
pusha
push
mov
call
pushf
add
test
mov
movsb
stos
lods
mov
fwait
je
mov
and
pop
pop
or
call
cltd
fsubl
les
mov
test
ret
test
mov
test
mov
int
lahf
test
and
xchg
aas
adc
and
adc
and
sub
mov
int
je
roll
xchg
and
inc
mov
lods
nop
sub
cld
fcomps
and
add
mov
outsb
push
js
dec
enter
fmuls
orb
lds
xchg
or
dec
stos
test
comiss
adc
es
fadds
jno
stos
lcall
xchg
lods
enter
fadds
test
dec
dec
shlb
mov
adc
fldenv
movsb
sahf
and
lahf
xchg
les
xor
jo
xor
pushf
jge
pop
adc
dec
imul
popa
stc
smsw
jmp
ljmp
push
and
pop
inc
and
jns
loop
add
inc
insl
pop
cmp
punpckhdq
repz
dec
and
cmp
inc
xor
punpckhbw
sbb
inc
dec
fistpll
add
xor
adcl
out
push
dec
cmp
cwtl
inc
dec
push
jb
sbb
mov
pop
and
out
call
pusha
push
sbb
jb
push
add
cmp
inc
push
je
add
inc
ds
cld
inc
outsl
add
adc
movntq
les
and
add
xchg
arpl
pop
loopne
xor
pop
daa
cmp
add
inc
setae
pop
mov
je
call
inc
repnz
daa
adc
adc
in
mov
movsl
xchg
out
cmc
push
and
inc
jb
push
out
cwtl
xor
stos
adc
je
push
in
and
xor
pop
cwtl
cmpsb
sbb
inc
sub
cmp
push
xor
test
cmp
xchg
dec
and
insb
cvtdq2ps
inc
test
pop
je
aas
loope
jmp
inc
add
xchg
xor
ret
pop
xor
inc
xor
push
push
jbe
andps
add
jno
and
or
inc
dec
add
inc
add
ret
inc
push
push
das
jb
pop
lcall
jae
jbe
cld
jne
xorl
sar
and
adc
mov
jbe
lods
pop
jnp
cmp
jb
and
insl
loopne
dec
cmp
sbb
fildl
xorl
ret
mov
pop
sbb
jns
add
addr16
lret
ja,pt
xor
cs
mov
pop
jno
iret
or
or
je
dec
push
mov
dec
jae
lock
push
inc
dec
incl
dec
push
jb
ffreep
inc
out
or
jnp
or
das
jp
add
xor
add
sub
add
das
dec
inc
or
jae
cwtl
pop
aas
dec
pusha
fdivl
jecxz
jno
sub
les
sbb
dec
push
or
in
int3
push
inc
mov
sbb
push
cmp
inc
xor
imul
aas
je
inc
dec
push
xchg
sub
cmp
mov
push
cmp
sub
int
call
ret
mov
pop
push
cmc
xor
xchg
xor
test
js
test
push
inc
inc
dec
cmp
sub
enter
and
and
inc
cli
push
inc
jnp
add
fs
jno
dec
xor
pop
ja
push
mov
loopne
lcall
in
or
fs
xchg
pop
add
shll
std
inc
jo
jo
outsl
adc
and
and
shr
push
out
addb
push
jbe
jns
cld
cmp
mov
insl
call
push
sbb
sbb
inc
and
daa
lock
ds
xor
jbe
shlb
fcompl
jge
push
hlt
insl
mov
mov
inc
ds
inc
push
mov
cmp
jge
rcrl
jne
and
sbb
adcb
and
inc
aas
pusha
cmp
xor
inc
jns
add
inc
mov
push
das
dec
enter
sahf
jbe
cld
mov
fldl
outsb
jns
repz
les
popa
shrb
inc
nop
sbb
fdivrl
xor
cmp
or
sbb
cmp
test
fdiv
rsm
les
or
testb
dec
jl
insb
xchg
fmuls
rol
push
mov
dec
pop
inc
inc
dec
add
sbb
popf
inc
and
fcomps
mov
jnp
lock
test
inc
daa
repz
add
xor
cmp
inc
pop
push
lock
sub
je
push
inc
jb
mov
dec
in
dec
cmp
hlt
movsl
xor
add
and
cmp
cmpsl
sbb
push
mov
sbb
push
xor
sub
loopne
js
jnp
pusha
add
pop
test
inc
add
ds
sti
jbe
and
add
aam
out
cmpsb
cmp
inc
xor
inc
sub
xchg
insl
repz
pop
cwtl
or
lea
shlb
mov
push
test
out
jo
call
pusha
jecxz
pop
sub
stos
jge
sbb
jo
xchg
daa
xchg
pop
sar
jnp
or
mov
call
and
add
je
rcr
sbb
ljmp
push
push
ja
mov
iret
add
xchg
cmpsb
mov
mov
in
push
in
pop
pop
or
lods
fabs
add
pop
fsubrl
sahf
add
dec
lahf
jno
movsb
pop
je
add
add
out
and
sbb
adc
sbb
push
sbb
lds
sub
roll
jae
jg
js
in
add
and
add
xchg
aam
mov
aam
in
add
push
pushfw
fucompp
dec
or
mov
add
roll
es
add
shr
push
jns
xchg
xchg
hlt
daa
bound
jnp
xchg
inc
nop
fs
sbb
lods
pop
icebp
pop
adc
test
sbb
fs
pusha
sbb
pop
add
sub
and
pop
adc
rcll
add
inc
xchg
lods
test
pop
fists
loopne
sbb
dec
inc
int3
outsb
sbb
ds
sub
and
push
test
hlt
test
xchg
test
add
add
bound
movsl
sbb
imul
xor
mov
and
adc
pop
push
stc
fstps
or
xchg
sbb
pop
nop
inc
dec
push
jge
test
jmp
add
sub
mov
in
inc
rcrb
pushw
jo
sub
popa
call
xchg
sbb
xor
mov
rolb
xchg
lock
lea
pop
sbbb
xchg
cltd
std
sbb
xchg
les
rcrb
rcrb
loopne
rcrl
cmp
ret
add
stos
mov
test
clc
push
imul
inc
fwait
cmp
xchg
rolb
fdivrs
mov
add
mov
andb
add
icebp
cmp
mov
push
xchg
mov
rol
movsl
jmp
pop
push
or
gs
or
jmp
iret
test
jmp
and
shrd
arpl
dec
jnp
xorb
adc
out
insb
addb
inc
imul
sbb
cmp
dec
xchg
aam
dec
sub
sbb
jl
and
jl
push
mov
adc
add
notl
movsl
lock
xor
mov
pop
sub
xchg
xor
push
dec
loopne
and
loopne
cld
pop
loop
inc
or
pushf
or
cltd
add
das
addl
sub
push
lret
int
shlb
pop
xor
adc
out
push
cwtl
pusha
add
in
jnp
cmp
mov
cmc
test
jne
movsl
lea
sbb
pop
enter
pushf
sub
pop
inc
push
stos
lret
popf
adc
fisttpll
lods
pop
ds
les
mov
cwtl
cmp
or
gs
popl
mov
sbb
xchg
outsb
push
pushf
jge
or
xor
cs
xor
lcall
dec
in
mov
mov
loopne
pop
pusha
lahf
out
push
mov
sarl
movsb
adc
mov
scas
pop
adc
add
adc
fdivl
mov
push
and
pop
push
into
sbb
dec
pop
aaa
roll
adcb
mov
mov
push
mov
lahf
and
fsts
jo
addb
fisubl
xchg
fsub
orb
mov
mov
dec
scas
add
ds
xor
mov
test
jmp
mov
sub
lock
fists
inc
mov
xchg
shrl
mov
mov
cmp
cltd
inc
mov
cs
adcb
add
adc
jp
xor
pushf
inc
adc
jnp
sub
mov
add
sbb
mov
aad
adc
cwtl
popa
xchg
lods
movsb
sar
sti
add
loopne
and
jno
dec
nop
and
xchg
shr
xchg
mov
and
xchg
mov
in
jno
out
shlb
dec
in
add
pop
mov
cmpsb
inc
dec
movsl
test
int3
js
sub
mov
sbb
xor
jge
stc
test
fcoml
mov
shlb
pop
aad
in
test
adc
dec
stc
sub
sbb
test
xchg
inc
push
pop
repnz
fadds
mov
adc
daa
dec
mov
or
mov
dec
pusha
cmp
or
jge
pop
push
int
cld
push
pop
add
cmp
pop
imul
mov
rorb
dec
mov
xorb
int3
push
adc
inc
cwtl
pusha
outsb
in
sub
dec
call
xchg
sbb
sub
jg
sbb
fs
ja
add
xchg
stc
enter
in
call
mov
push
mov
sbb
jmp
pop
mov
orb
scas
xor
pop
sub
dec
or
push
dec
and
pushf
mov
cmp
test
aaa
mov
mov
lcall
or
add
stos
out
xor
cwtl
sub
xor
inc
rorb
loopne
xchg
shlb
rorb
arpl
ss
insl
shrb
imul
pop
inc
imul
push
sub
incb
js
cltd
cmp
and
mov
ljmp
pushf
add
outsb
mov
push
xor
jge
loope
pusha
jnp
mov
xorl
add
out
xor
cmp
dec
mov
sbb
pop
xorb
bound
or
mov
jecxz
add
roll
push
push
hlt
roll
arpl
lahf
pop
xchg
mov
add
mov
mov
mov
imul
sbb
jae
adc
xchg
dec
sbb
xchg
sub
cwtl
cmp
call
fcomps
and
pop
repnz
xchg
scas
dec
aas
mov
test
cmpsl
es
imul
jecxz
xchg
sub
in
loope
xchg
xchg
js
mov
mov
fstl
enter
cmp
enter
sub
rclb
pop
dec
sbb
add
xor
inc
lods
sub
xor
and
add
inc
push
add
int
in
rclb
loop
xor
testl
fists
sub
ss
inc
cmp
test
in
das
or
dec
add
shl
xchg
pop
jae
orb
lret
clc
add
xorl
cmpsl
sarl
jbe
insb
ss
add
mov
sub
jmp
xchg
mov
push
or
fadds
dec
mov
enter
sub
ljmp
add
lret
mov
inc
cmc
arpl
adc
dec
mov
andb
dec
nop
add
icebp
jb
insb
sub
ds
push
add
adc
add
stmxcsr
add
xor
fcomi
dec
or
jb
es
add
jbe
frstor
and
add
add
test
rolb
xchg
shll
dec
jl
call
arpl
mov
je
js
add
std
test
sbb
popa
insl
add
stos
lahf
mov
sub
aas
pushf
push
shrb
push
orb
inc
dec
into
lods
push
mull
sysenter
imul
test
push
inc
enter
ret
and
add
and
xor
or
add
jp
jge
mov
inc
inc
jl
or
cmpb
std
invd
sahf
into
push
xlat
addb
and
enter
popa
or
pusha
insb
xor
sub
aas
clc
faddl
mov
js
lods
stos
fadds
inc
fwait
and
xorl
adcb
sub
jno
dec
scas
mov
cmp
xor
or
call
and
adc
test
jl
jo
xor
jle
fnstcw
jl
mov
pop
adc
mov
js
adc
xor
add
ret
fimuls
les
jne
pusha
mov
dec
mov
ljmp
and
mov
cmpsb
and
xor
add
hlt
inc
pop
mov
jl
cmp
dec
mov
push
int3
push
je
mov
clc
and
adc
jbe
jle
dec
outsl
call
mov
jl
mov
sub
xor
jae
jg
jnp
inc
jne
cmp
ja
push
loope
jge
insb
adc
pop
imul
inc
orb
test
mov
mov
call
add
lods
and
aam
inc
cmp
popa
jns
enter
inc
lds
jno
std
sbb
shlb
pusha
pop
js
cltd
fildl
mov
pushf
jmp
mov
mov
cmpsl
inc
rolb
sbbl
cltd
and
jl
push
lahf
jg
nop
or
push
or
mov
jno
sbb
add
test
out
jo
xor
add
push
lahf
in
lock
icebp
or
movsb
sub
add
add
out
iret
lret
mov
mov
lahf
push
stc
mov
add
xchg
dec
subb
mov
ljmp
in
aam
lock
mov
push
push
jno
les
mov
xchg
xchg
inc
xor
mov
add
daa
jne
mov
jmp
xchg
dec
adc
sub
leave
subl
adc
xor
inc
add
sub
out
add
call
add
and
cmp
mov
jae
add
daa
shrb
dec
enter
into
xchg
mov
std
add
loopne
fisubs
jns
adc
dec
sbb
and
jns
in
cs
test
mov
dec
and
xchg
js
out
es
xchg
mov
rcrl
jae
push
jno
ss
pop
or
movsb
jl
shl
dec
inc
insb
arpl
ret
jg
ljmp
jb
mov
loopne
sti
cmp
add
sub
pop
enter
ljmp
xor
rcrl
push
movsl
je
mov
xor
lret
dec
clc
sarb
push
pop
xchg
int3
call
imul
xchg
dec
test
mov
aas
test
loopne
shlb
scas
lcall
sub
mov
push
mov
ss
adc
fldenv
inc
cwtl
sbb
mov
inc
cs
lret
pop
or
xchg
imul
or
adc
faddl
xchg
mov
mov
add
leave
cwtl
cmpb
clc
and
cmp
bound
std
shrl
andl
test
mov
mov
lods
cmpsl
arpl
shl
cmp
push
xorb
fmuls
insb
adc
inc
and
push
insb
mov
sbbb
shlb
add
cwtl
mov
icebp
stos
or
mov
sub
aas
and
cwtl
xchg
sbb
or
in
sbb
adc
xchg
add
addl
fildll
fdivrs
or
jg
push
jo
jnp
loopne
in
adc
or
test
adc
add
lock
jo
mov
dec
xchg
xor
add
cwtl
sub
aam
push
and
cmp
inc
cmc
pusha
js
jns
stos
test
xor
mov
xor
jo
jne
jmp
sti
fsts
dec
cmp
loopne
dec
mov
pop
movsl
adc
mov
mov
les
pop
addr16
mov
xor
pushf
cmpsb
out
out
and
or
pop
xor
test
cmpsl
fstl
sbb
sbb
les
mov
ss
mov
push
jg
sbb
mov
aad
movsb
je
push
adc
sbb
and
sarb
inc
pop
and
add
add
sbb
pop
insl
xchg
clc
adcb
inc
xchg
push
xchg
sub
sbb
mov
mov
push
or
xchg
cmpsl
sbb
dec
xorb
jl
jle
dec
bound
sub
mov
or
jno
movsb
jae
cwtl
je
les
test
inc
mov
jle
cwtl
js
cs
or
pop
lahf
jp
leave
pop
mov
dec
mov
or
roll
cmp
int
mov
push
sub
push
sub
test
addb
sub
mov
sub
mov
mov
add
mov
pop
rcll
and
add
jo
inc
cltd
lock
dec
enter
add
inc
int3
hlt
stc
push
jns
push
xor
and
add
and
dec
sbb
stos
dec
jns,pt
and
test
xor
ja
enter
jg
xchg
inc
andb
mov
add
mov
sbb
test
loope
xor
jno
xor
pop
push
pop
xor
xor
repnz
enter
mov
inc
push
test
push
idivb
pmulhuw
pop
jo
mov
or
mov
das
in
hlt
sub
pop
sub
in
add
stc
movb
xor
movsb
cmpl
nop
and
cld
add
mov
cmp
mov
lock
inc
xorb
jo
dec
add
mov
mov
push
lret
mov
scas
inc
dec
dec
add
and
dec
sbbb
adc
cltd
or
jne
and
and
cwtl
mov
daa
daa
push
add
aaa
jno
movsb
enter
push
dec
ret
nop
inc
cwtl
and
jbe
add
out
dec
stc
bound
dec
push
pop
sub
jo
pushf
aam
inc
shrl
add
sub
add
idivl
inc
cmp
xor
out
jg
jmp
lock
rcrb
mov
cmpsl
mov
pushf
sbb
jp
and
ss
cmp
mov
push
popf
dec
adc
clc
aaa
cld
lahf
adc
add
nop
call
das
cld
and
cmp
testl
arpl
jb
adc
jecxz
fmul
mov
cltd
cmpsl
push
str
out
pushf
mov
data16
or
mov
test
mov
add
dec
fists
xchg
dec
scas
pop
cmp
and
seto
or
mov
lock
stos
inc
insl
and
push
data16
scas
and
test
ds
xor
push
pushf
push
mov
xor
sbbb
in
add
mov
add
hlt
data16
bound
mov
pop
push
stc
push
pusha
xor
xor
pusha
or
pop
or
lods
mov
pop
les
add
les
fs
dec
jns
push
rorl
hlt
sbb
pop
add
jp
add
test
les
inc
pusha
jb
daa
adc
shrb
jecxz
fldl2e
push
and
pop
mov
sbb
movsb
dec
cs
faddl
cmpsb
cmc
cmp
push
jbe
in
cmp
push
sbb
movsb
xchg
adc
jb
push
scas
mov
imul
mov
xor
xor
fdiv
jno
or
rclb
mov
add
sub
mov
xor
jl
jbe
add
sti
test
xor
imul
dec
mov
adc
or
hlt
or
cmp
in
xchg
or
mov
mov
add
outsl
or
or
mov
sub
mov
fisubrl
pushf
dec
popa
ljmp
cmp
jp
insl
mov
adc
inc
hlt
xchg
lret
mov
test
and
xchg
mov
jmp
je
inc
lea
xchg
iret
dec
filds
fsubrl
js
das
les
cmp
sbbl
push
int
sub
daa
mov
nop
xor
push
daa
sub
cmp
scas
sub
adc
mov
dec
pop
lcall
pop
jb
cmp
lock
jl
stos
mov
scas
and
or
sar
adc
cltd
mov
lods
xlat
push
lock
sbb
add
fisttpl
pop
daa
jno
mov
cmp
test
inc
movsl
es
out
push
pop
icebp
in
pop
push
jbe
cmp
lahf
sbb
xchg
jmp
and
and
sbb
fs
jecxz
lock
jbe
and
sub
popa
movsb
fcoms
lahf
pusha
lds
add
pop
aas
das
jg
cld
test
pushf
inc
inc
cmp
inc
fs
or
mov
nop
adc
dec
das
xchg
and
add
in
and
sub
lock
adc
aam
xchg
add
adc
add
scas
inc
adc
xor
jle
xchg
pusha
jecxz
rcrb
or
popa
cmc
test
and
aad
pop
scas
sub
jb
test
ja
fdivrl
mov
add
push
dec
lea
in
mov
into
add
pop
das
ds
stos
add
loop
andb
mov
dec
pop
shl
leave
mov
stos
ss
or
mov
cli
adc
add
xor
cmp
orb
ja
mov
push
pop
fs
orl
stos
inc
push
and
add
inc
rorb
mov
cs
inc
jmp
rolb
inc
mov
sbb
pop
lret
aam
cmp
outsl
icebp
xor
dec
jbe
pop
icebp
jp
lock
ds
test
jb
adc
gs
setl
add
in
inc
and
lahf
cmpsb
adc
inc
sub
mov
adc
sbb
dec
adcb
xchg
pop
add
test
sub
out
cwtl
sub
sahf
pop
jno
clc
popa
push
xor
cmp
lock
or
rorb
cmp
fs
fsubrs
and
xor
jge
sub
stos
push
clc
roll
nop
bound
adc
cmp
cmp
jbe
inc
and
ds
pushf
add
idivb
mov
pushf
and
in
cwtl
daa
xchg
sub
xor
push
lcall
rol
pop
inc
popa
adc
outsl
jl
add
iret
sub
pop
es
test
inc
xor
nop
and
ss
cmc
adc
pop
jo
call
cwtl
sbb
mov
add
cmp
and
imulb
cmp
aaa
adc
dec
push
dec
or
cwtl
push
inc
test
mov
mov
jns
or
movsb
hlt
pop
xchg
ds
and
sbb
in
pusha
inc
and
loopne
loop
es
and
iret
mov
test
fwait
jb
lods
xor
leave
cs
andl
jne
xorl
or
mov
iret
mov
das
and
add
inc
push
nop
cmp
cmp
and
inc
aaa
mov
pop
adc
sub
add
in
dec
cmp
push
mov
mov
in
iret
lret
js
inc
stos
jns
xor
ss
xor
add
hlt
ret
mov
pop
add
ja
lret
jb
psubw
out
pusha
inc
xor
inc
and
pop
jmp
lds
jp
mov
leave
gs
xor
outsb
aas
add
sub
loope
mov
incb
movl
push
call
jb
sub
nop
pop
andb
push
ret
jl
rorl
mov
pop
xchg
inc
or
test
add
aam
jmp
pop
adc
lcall
mov
into
insl
sbb
out
in
or
imul
sarb
js
test
dec
jne
adc
sbb
push
push
inc
mov
test
add
loopne
add
and
or
js
mov
leave
cmpsl
shll
lea
mov
sbb
rcrl
addb
ficomps
inc
mov
das
push
lret
mov
pusha
pop
outsb
sbb
ret
xchg
mov
movsl
pop
test
sbb
push
mov
push
xchg
mov
mov
or
or
addl
xchg
push
jmp
cli
out
mov
mov
pusha
sub
mov
test
mov
hlt
dec
adc
addr16
popa
lods
pop
ret
enter
inc
sbb
push
ret
mov
addr16
lret
out
mov
jns
or
mov
add
xorb
mov
gs
push
mov
movsb
push
mov
sub
mov
fcmovnbe
mov
xchg
add
repnz
mov
int
inc
push
popa
pop
ret
enter
inc
adc
or
scas
jmp
enter
push
jb
pop
fdiv
jns
sub
dec
mov
test
lds
and
add
repnz
lods
aad
mov
imul
lret
jmp
xchg
mov
push
in
je
cltd
mov
adcl
cmovl
and
inc
mov
inc
pop
call
or
shlb
sub
lods
pop
sahf
inc
inc
mov
dec
pop
push
mov
xchg
add
sbb
xlat
movsb
arpl
push
jns
adc
ret
je
aas
sub
cmpsb
jge
mov
add
cmc
fildll
call
mov
mov
mov
push
mov
pop
ret
adc
inc
push
ret
fmulp
pop
add
popf
sbb
loop
xor
adc
or
mov
hlt
adc
mov
xor
xor
hlt
jge
orb
mov
lret
and
adc
icebp
and
or
pusha
cwtl
mov
cmp
or
xor
mov
jne
jno
in
add
leave
push
adc
mov
gs
adc
adc
mov
dec
imul
jno
shr
mov
and
es
outsb
or
out
xor
xor
sub
mov
jecxz
ds
add
xchg
sub
lret
iret
enter
and
mov
adc
mov
dec
adc
xor
mov
in
sub
faddl
xchg
popl
pop
add
popa
cmp
orl
movsl
xor
popa
push
ret
and
inc
add
mov
nop
fwait
adc
pop
mov
repnz
pop
add
rolb
cmp
test
push
dec
cmp
adc
adc
mov
js
adc
or
push
scas
or
lock
inc
imul
add
cmp
cmp
xor
pop
pop
nop
cld
fmuls
push
adc
sub
ret
xchg
mov
mov
or
and
es
dec
mov
push
or
mov
icebp
das
xchg
addb
clc
jg
push
adc
dec
and
and
in
jge
xor
adc
cltd
in
outsl
xor
rcl
and
shrb
jecxz
ljmp
inc
scas
pop
pop
inc
sbb
insl
test
loope
rcr
xor
popf
fsts
gs
jmp
and
rclb
jbe
orl
shl
scas
aam
mov
call
inc
pop
dec
push
jnp
push
cli
rolb
das
mov
xlat
je
inc
sbb
pop
gs
add
and
fwait
mov
inc
mov
test
enter
sahf
rol
sub
jo
frstor
mov
add
cli
dec
pushf
pop
ret
mov
sub
inc
adc
adc
inc
jl
mov
add
popaw
in
shlb
mov
cwtl
xchg
xlat
loope
adc
inc
add
mov
decb
mov
nop
push
xor
dec
sbb
pop
pop
adc
xlat
xor
pop
enter
add
xchg
ret
mov
mov
inc
push
push
adc
adc
mov
shl
jp
cltd
xlat
add
sbb
inc
mov
jb
jno
pop
jmp
lret
inc
or
jge
les
cmpsb
mov
sub
shr
pop
mov
hlt
sti
and
movsb
sub
mov
imul
rolb
pop
fnstcw
repnz
sub
fidivrs
stos
or
sbb
int
gs
add
sub
xor
xchg
mov
jmp
mov
dec
sub
sub
sbb
and
sub
add
sbb
xchg
frndint
dec
mov
jmp
fcompl
push
sub
mov
jl
mov
inc
shrl
adc
pop
push
sbb
sub
stos
push
out
cmp
add
sub
insl
fmul
mov
cmp
adc
loop
add
xchg
pusha
xchg
adc
cld
imul
cs
inc
xchg
pop
sbbl
or
fadds
pusha
push
leave
adc
jp
add
scas
push
ja
or
test
mov
push
mov
jo
pusha
nop
ret
clc
popa
add
jne
gs
or
jp
jle
push
repz
loop
xor
add
pushf
xchg
dec
push
xchg
sub
xor
xor
dec
push
leave
mov
sub
dec
es
pop
movsl
mov
dec
sti
ds
stc
aam
call
stos
sub
or
dec
xchg
inc
into
sub
jno
sbb
push
arpl
sub
adc
adc
mov
push
pusha
pop
bound
fcoms
jno
xchg
repnz
xor
pop
push
inc
push
mov
sbb
fs
loop
repnz
xor
adc
aam
ret
daa
mov
mov
scas
iret
and
dec
andl
push
and
push
pusha
or
push
adc
pusha
cmp
adc
sbb
sbb
ja
mov
cmpsb
jbe
add
popf
dec
jne
inc
xchg
movsl
push
xchg
movl
ret
leave
pushf
dec
inc
mov
jmp
sub
icebp
cmp
sbb
call
test
scas
dec
scas
mov
push
cmpb
pop
pop
push
cmp
and
add
adc
rcrb
push
xchg
mov
nop
mov
add
sbb
pop
nop
repz
cmpxchg
jno
nop
jne
pop
push
das
push
jmp
push
xchg
xor
xchg
out
cmpsl
or
es
cltd
out
jno
sbb
out
jo
mov
push
leave
dec
push
xor
popf
jne
sbb
and
inc
sbb
jb
sbb
pop
add
mov
les
inc
xor
cmp
adc
mov
icebp
jns
data16
sub
add
arpl
cmp
pusha
sub
push
xchg
fstps
pop
popa
cmp
jns
xor
popa
adcb
xor
lcall
mov
pop
jns
mov
sub
adc
or
or
data16
cwtl
adc
mov
inc
push
add
in
mov
pop
adc
sahf
repz
push
sbb
xchg
mov
mov
and
and
cmp
adc
dec
add
jmp
xchg
popf
daa
pop
cmp
pop
mov
add
sbb
xor
imul
cmp
dec
push
push
adc
dec
mov
or
leave
mov
outsl
ja
cs
and
sub
jp
out
adc
cmp
shrb
cmpsl
mov
push
pusha
add
int
int3
addb
sub
jo
sub
mov
push
sub
cmp
call
xor
mov
push
sbb
fucomi
sbb
add
xor
je
dec
mov
test
jmp
in
jg
pop
sbb
push
bound
add
and
ret
adc
sbb
xor
inc
imul
sbb
dec
movd
test
or
add
in
fisubs
mov
sub
inc
pop
push
ds
out
mov
adc
and
sub
lods
sbb
and
xchg
lock
orb
es
testl
push
rcl
push
dec
sub
adc
shlb
inc
push
fldt
cltd
rcr
or
dec
push
push
vcvtdq2ps
or
mov
add
int3
bound
repnz
ret
sub
add
inc
add
xchg
xchg
pop
inc
insl
addb
mull
sub
or
or
insw
rol
in
push
xchg
push
std
sbb
lock
clc
aas
inc
cwtl
and
jae
pusha
inc
mov
jmpw
popa
loop
push
add
cmc
rclb
bound
push
and
mov
fdivr
ss
push
movsb
add
pop
movsb
or
sbb
sub
push
inc
loop
je
pop
lretw
sbb
shlb
add
sub
push
add
adc
sub
ffree
mov
push
rcll
rclb
icebp
test
shrl
dec
andb
imul
dec
mov
xchg
add
call
xor
icebp
sbbl
and
jmp
int
fcmovne
mov
out
loopne
cmc
cwtl
mov
stc
and
inc
lds
fs
in
mov
add
js
orb
add
sti
jo
test
daa
inc
in
in
pusha
mov
addr16
fldcw
mov
insl
aad
sub
stc
jl
in
adc
pusha
add
xchg
or
outsl
and
push
xchg
adc
rorb
andl
add
or
mov
or
push
call
in
mov
mov
nop
sbb
int3
addb
outsl
mov
push
out
lods
cli
push
dec
enter
mov
fwait
push
scas
imul
push
mov
sbb
daa
out
es
xor
jecxz
cwtl
test
mov
add
push
dec
add
or
xchg
jge
ljmp
push
jne
cmp
dec
push
push
xor
add
and
add
adc
and
push
enter
inc
das
out
jns
add
pop
jne
stos
cld
es
lretw
xchg
adc
or
sbbl
and
movb
add
xor
cltd
xchg
outsb
test
push
imulb
loopne
ret
fs
cmp
pop
mov
add
add
mov
jnp
jp
out
mov
pop
dec
mov
mov
inc
pop
or
cwtl
adc
adc
adc
or
cmp
inc
cwtl
jo
js
daa
mov
pop
sbb
scas
arpl
test
es
mov
xchg
sbb
pop
push
push
pop
lgdtl
jo
sbb
jg
sbb
pushf
xchg
cmpsb
mov
cmc
pop
dec
add
mov
push
popa
adc
adc
inc
cmp
test
hlt
cmp
addl
sub
xor
cmp
mov
push
jmp
movsl
fwait
sarl
popa
mov
mov
rcr
push
cld
sbb
scas
dec
fsubl
stos
mov
out
xchg
fstp
add
aad
pusha
jmp
push
add
stc
test
or
mov
dec
push
and
test
xchg
and
stos
inc
and
sbbb
es
or
xchg
icebp
add
in
mov
sub
or
sbb
in
adc
and
gs
test
add
jmp
push
les
xchg
int
jbe
cmp
mov
call
add
insb
js
std
mov
sbb
xchg
stc
jg
clc
orb
mov
call
mov
push
shrb
movsb
xchg
out
xor
loop
cmc
add
je
push
clc
push
xchg
or
cmp
pop
cmp
cmp
mov
les
mov
dec
inc
xor
add
orb
loop
loopne
ror
adc
leave
jp
out
shll
push
jl
mov
jne
dec
loop
addb
test
nop
xorl
test
add
add
add
xchg
je
call
gs
imul
in
jb
insl
popa
or
sbb
jae
sub
and
je
pop
jle
mov
outsl
pushaw
lods
jb
fs
jbe
insb
cli
jo
in
jae
ja
shll
sbb
addr16
popa
cmc
imul
cmc
jne
or
mov
jo
jae
outsb
inc
push
push
dec
sub
jmp
js
push
inc
pop
fs
sbb
jnp
jns
or
cld
fisubl
add
inc
fbld
and
arpl
and
push
push
jo
jb
incl
bt
mov
xorl
mov
push
sbb
push
push
dec
sets
je
lods
movaps
add
ss
popa
fstp
cmp
push
shll
cwtl
pop
mov
xor
out
adc
and
daa
or
push
loope
adc
pop
dec
pop
push
push
std
adc
adc
popa
dec
mov
fisttpll
and
sbb
inc
les
and
xchg
dec
les
outsl
imul
les
and
jle
inc
or
in
adc
mov
or
in
adc
dec
stos
daa
and
sub
clc
js
xchg
pop
inc
lea
xor
sub
mov
push
jmp
or
jge
mov
xchg
or
push
and
inc
push
and
pop
and
pop
and
xchg
add
or
or
or
enter
xor
or
xchg
and
enter
push
sub
cmp
jbe
pop
xchg
and
imul
push
xchg
and
sbb
add
mov
mov
mov
fsubrs
adc
fsubp
ja
dec
sbbl
shl
or
popf
or
push
xor
xchg
xchg
mov
pop
call
xor
out
ljmp
sub
into
inc
adc
xor
pop
mov
ja
cmp
sub
lret
aam
dec
mov
clc
adc
popa
insb
out
and
add
dec
enter
pop
ljmp
popa
push
daa
dec
inc
repz
mov
add
out
jae
pop
imull
ds
into
push
pop
sub
out
leave
pop
sahf
stc
test
and
sbb
dec
mov
sti
mov
inc
add
stc
cmpsb
pop
cmpsl
xchg
in
mov
dec
jnp
mov
repnz
mov
cs
sub
pop
js
or
movsl
das
outsb
out
add
mov
adc
mov
add
aaa
pop
clc
lock
adc
lret
push
icebp
xchg
push
push
pop
out
dec
jl
pop
repnz
inc
xor
cld
pop
xor
add
xchg
notb
aaa
in
insl
xchg
push
adc
lock
adc
or
cmp
add
shll
shlb
mov
testb
ror
cmp
jmp
add
add
dec
in
pop
outsb
aas
js
cld
add
aaa
cmp
imul
fldcw
and
cmp
and
or
pusha
pop
les
mov
sbb
pushf
adc
testb
and
insl
dec
sub
sbb
cmp
push
inc
movsb
pop
popa
mov
push
rorb
mov
or
out
and
adc
stc
int3
mov
or
call
xor
jo
lea
mov
iret
sbb
mov
adc
pop
mov
xor
mov
clc
lcall
mov
out
add
mov
add
enter
push
das
add
and
dec
ljmp
imul
inc
pushf
inc
movsl
stos
pop
fsubrs
imul
jp
or
push
fiadds
test
sbb
cli
outsb
sbb
out
cmc
cmp
adc
sbb
int
add
cli
addr16
push
add
cmc
lods
icebp
imul
mov
pop
into
enter
add
jle
andl
add
dec
add
sbb
add
sub
mov
inc
sti
jmp
pusha
adc
add
sub
dec
cwtl
and
jmp
mov
movsb
lea
xor
sub
in
or
popa
idivl
jbe
and
sbb
fmul
outsl
push
data16
enter
aam
pop
sub
mov
or
mov
cmpb
mov
sarb
jle
and
ja
lret
rcrb
mov
cld
adc
lret
call
or
mov
lret
and
sbb
test
dec
pop
jbe
pushf
icebp
daa
inc
addr16
mov
cwtl
and
mov
movsl
pop
aas
and
cltd
add
mov
dec
mulb
xor
mov
mov
mov
aas
in
xor
lods
mov
add
xor
ror
sbb
adc
in
in
and
fstl
adcl
adc
or
sub
and
cmpb
lea
pop
pop
mov
xor
fcom
add
add
mov
or
lods
pop
rcrl
dec
jnp
aad
lods
ljmp
mov
push
psubusb
test
cmp
cltd
aam
and
pusha
popl
lret
pop
mov
jmp
popf
mov
add
fwait
mov
dec
adc
cmp
inc
mov
mov
xor
pushf
mov
jb
add
mov
mov
ja
push
xor
ror
add
testl
add
gs
sub
sub
push
push
push
or
sub
dec
or
addr16
mov
cwtl
xor
adc
fadd
ret
or
mov
pop
pop
inc
aaa
add
and
and
push
or
pop
or
int
push
call
pop
dec
add
mov
add
add
add
add
jmp
xor
xor
nop
mov
add
xchg
insb
pop
push
out
popf
nop
cmp
cld
mov
mov
add
mov
jg
inc
add
ss
cmp
aas
call
mov
f2xm1
lret
pusha
cs
mov
xchg
pop
arpl
jo
and
dec
lods
jl
sub
pop
add
pop
xor
popl
pop
mov
cld
addl
push
call
std
ss
mov
push
sti
mov
and
pop
sahf
lret
lcall
cmp
jg
bound
rcrb
adc
loop
dec
and
arpl
add
scas
pop
loopne
jle
orb
adc
push
add
pop
adc
sbb
les
jne
ds
jbe
mov
mov
notb
push
push
push
sub
les
inc
lock
add
sar
jmp
int3
daa
outsb
leave
sub
shrb
or
sbb
scas
dec
adc
out
mov
fadd
cli
addl
cmpsl
je
pop
mov
js
push
aas
rcl
mov
in
scas
pop
jnp
fxch
notb
jecxz
inc
cmp
xorl
cmp
es
adcb
in
pop
call
push
add
inc
aam
push
push
add
push
add
outsb
lea
movsb
mov
xchg
adc
xchg
push
cmpl
insb
sahf
fs
rcl
add
mov
mov
test
inc
imul
jno
lock
or
sub
mov
adc
mov
stos
clc
add
pushf
cmc
loopne
xchg
stos
add
test
aas
shr
xor
mov
xchg
out
adc
inc
sbb
or
clc
dec
or
or
movsl
add
dec
adc
lea
cmp
xor
mov
je
cld
call
fdivr
test
dec
iret
out
inc
out
pushf
cs
sbb
mov
rolb
and
jmp
or
int
jecxz
mov
and
iret
dec
xchg
clc
std
stos
jbe
add
jmp
loop
add
mov
sbb
test
nop
rcrb
jl
in
or
addr16
adc
add
adc
repz
shrb
lret
mov
cmpsl
popf
xchg
pop
cmp
inc
add
repz
sbb
popa
fisubl
int
lds
cmp
pop
sbbl
test
rol
leave
clc
testb
jne
mov
push
xor
insl
mov
and
cmc
and
rol
pop
call
sbb
out
dec
test
xchg
lods
out
popa
sub
fsub
dec
daa
fdivr
test
push
mov
jmp
idiv
mov
mov
in
or
cmp
jl
and
adc
mov
and
mov
ds
fiaddl
into
sub
jnp
xlat
and
lods
scas
add
cmp
inc
mov
ja
pop
add
imul
jg
mov
sbb
dec
inc
ret
into
push
cmpsl
dec
bound
inc
xchg
fiadds
fisttpl
jmp
push
adc
es
push
xchg
sbbb
sbb
mov
test
inc
sub
cld
or
pop
add
mov
icebp
out
adc
add
pop
or
cmp
lret
xorb
cltd
push
out
sbb
test
sbb
push
add
sti
jbe
add
mov
and
push
add
sub
xor
jnp
jl
dec
rcrb
inc
ljmp
loopne
mov
in
dec
add
in
arpl
in
popf
add
aaa
xor
dec
test
paddusw
std
fdivr
add
mov
loop
lods
add
dec
mov
adc
fstpt
test
movq
dec
js
cmp
push
pop
xor
in
pop
mov
add
cmp
aam
pusha
sub
cs
jne
and
jle
cwtl
rcrb
or
push
sub
or
jae
push
nopl
adc
fiadds
add
mov
xchg
data16
add
jb
dec
lahf
inc
stos
cmp
rolb
gs
test
jbe
out
fistpl
icebp
add
push
nop
xor
dec
jnp
cwtl
pop
lock
aam
scas
sbb
or
and
push
mov
imul
into
adc
push
fisubl
xchg
in
loopne
add
lss
in
ret
ss
fildl
mov
nop
jg
add
int
movsl
out
or
add
jne
addl
sub
sub
sbb
fidivs
aaa
pop
notb
ret
mov
mov
movsl
inc
add
pop
lahf
adc
shrb
in
push
xor
add
sahf
xor
mov
ret
lcall
push
sahf
stc
shll
sbb
push
shl
add
pop
cmc
idivb
jnp
add
push
add
add
adc
ss
add
lret
rolb
jg
and
je
add
and
lock
pop
push
push
jmp
ja
adc
dec
push
mov
add
push
jne
sub
loopne
mov
outsl
mov
cs
and
je
movsb
or
addr16
add
orb
sar
pop
repz
add
js
test
rol
dec
popf
mov
iret
xor
lods
mov
cmp
lods
pop
adc
add
test
mov
aas
sahf
add
cli
xchg
mov
xor
push
inc
icebp
cmp
sub
jle
les
shlb
psadbw
push
jg
jmp
in
sub
sub
or
mov
jae
adc
lcall
cmp
js
sarl
ret
shlb
ljmp
fiadds
or
adc
mov
xchg
mov
call
push
inc
ja
or
adcb
xchg
mov
pop
sahf
dec
add
fcompl
lret
add
fwait
pop
mov
pop
sub
repnz
add
test
data16
fldt
andl
xor
mov
jno
pop
out
sti
push
mov
test
sbb
xor
lods
jecxz
mov
into
cli
add
out
add
test
inc
aam
push
loop
xchg
cltd
cwtl
xchg
push
add
inc
xchg
clc
xor
pop
lea
fdivrp
mov
dec
pop
orb
arpl
sbbb
std
and
inc
lahf
mov
clc
jmp
add
outsb
add
dec
mov
add
sti
push
jecxz
call
push
xor
cmpsl
adc
fdivs
dec
in
jp
cmp
pop
cltd
scas
add
or
imull
cld
and
popa
fadd
verr
jne
in
outsl
insl
in
sbb
call
popa
jne
xchg
mov
mov
ret
and
dec
pop
pop
fisttps
jnp
lods
sub
add
cmpsb
pop
std
or
lods
push
fiaddl
out
ret
lea
and
xchg
sahf
sub
orl
ljmp
fisttps
sbbb
jmp
aam
movb
jne
dec
and
cmpsb
xchg
test
fwait
add
inc
lcall
mov
and
dec
lcall
lret
insb
subb
inc
scas
mov
add
lods
pop
mov
stc
jb
push
aaa
mov
add
or
mov
mov
popa
nop
jl
fwait
add
pop
and
jmp
jo
cmp
nop
jb
add
cmp
push
push
pop
lea
add
adc
push
sbb
adcl
clc
push
inc
mov
ljmp
arpl
adc
sub
in
add
lret
ds
xor
les
add
or
inc
sbb
xchg
scas
inc
fldl
lret
add
or
popa
and
push
outsl
js
jmp
or
add
xor
enter
nop
or
or
add
jb
or
jge
add
lret
xor
push
add
push
mov
adc
clc
add
cmp
xor
mov
int3
dec
xchg
xchg
aam
sbbb
cmp
pop
add
cmp
push
pushf
jbe
mov
mov
arpl
dec
mov
dec
add
push
xchg
jp
push
push
add
mov
faddl
add
jmp
shl
jg
add
adc
les
xorb
pop
mov
add
cld
ss
mov
pusha
pop
ljmp
cmp
sub
adc
cmp
pop
sbb
and
adc
mov
add
add
fmul
pop
adc
push
mov
clc
cmpsb
call
mov
cli
push
loopne
sub
add
adc
cmp
jns
add
jo
push
or
and
icebp
cmc
mov
lock
pop
add
out
int3
loop
clc
neg
sub
inc
mov
ds
dec
lret
pop
in
out
jg
add
fnstcw
push
aad
mov
mov
xchg
cmpl
cmp
adc
cmp
mov
cmp
int3
fiadds
mov
hlt
clc
stc
or
rorl
and
push
dec
test
mov
test
push
movsb
out
jecxz
ss
add
mov
push
xorl
add
out
mov
push
add
adc
mov
subb
jge
data16
pop
outsb
andb
scas
and
shr
in
add
lds
cmpsl
shll
cmpsl
popa
mov
sbb
add
sub
icebp
add
add
mov
add
div
aaa
mov
lods
add
jp
mov
bnd
sbb
int
stc
add
jl
lds
adc
push
adc
mov
nop
out
push
jg
xor
mov
pop
inc
shlb
hlt
pop
mov
mov
popf
lret
mov
pop
add
sarb
insl
jl
fcos
mov
dec
adc
mov
mov
mov
xchg
bound
sub
jns
add
jle
int
sbb
daa
int3
push
popa
mov
cld
xor
and
pop
cwtl
dec
scas
inc
les
pop
imulb
cltd
loopne
adc
pop
jbe
orb
pop
int
and
add
test
data16
aas
lods
sub
or
pusha
xor
and
inc
orb
mov
inc
and
add
jbe
ret
adc
jg
movsb
lds
adc
add
mov
lea
mov
fnstcw
enter
push
dec
shlb
ret
insl
jecxz
out
popa
cltd
xor
dec
add
repnz
mov
adc
in
pusha
rcrb
std
lea
push
fadds
dec
addb
lcall
adc
or
loopne
pop
push
mov
ja
xchg
jl
add
mov
inc
add
sarl
cmp
push
lea
dec
mov
iret
xchg
add
adc
sti
adc
add
rcl
push
pop
popa
fdivl
in
gs
sub
test
mov
adcl
adc
xor
inc
lock
pop
andl
add
notb
loopne
sub
mov
push
mov
dec
add
jmp
outsl
mov
out
or
sub
int
andb
lahf
add
inc
add
and
andl
mov
adc
add
scas
pop
rolw
adc
mull
or
test
mov
xor
add
ds
fs
pop
imul
popf
nop
xorl
arpl
mov
pop
scas
xor
lahf
js
push
mov
add
mov
lock
roll
mov
mov
test
in
xor
add
mov
popa
mov
inc
mov
adc
call
xchg
sar
push
rcr
pop
add
mov
add
pop
adcl
push
hlt
dec
enter
jmp
xchg
fidivs
andb
sub
add
stc
pop
push
add
or
add
xchg
clc
loopne
add
cli
cmc
add
jmp
cmp
popa
fsub
dec
stc
mov
iret
xor
xor
scas
dec
xor
sub
fwait
rclb
ret
adc
sbb
enter
or
inc
fstpt
orb
mov
pop
js
ljmp
rcll
ret
xchg
int3
sub
add
sub
sbb
dec
ret
nop
sbb
out
mov
xchg
or
inc
mov
xchg
push
xor
shrb
inc
mov
adc
in
into
pop
and
je
add
fs
loope
cmp
sub
adc
jecxz
pop
cwtl
and
cwtl
in
add
inc
lcall
insb
mov
orb
mov
xchg
mov
lret
and
clc
cmp
in
cmpsb
add
test
push
xchg
adc
add
les
push
pop
arpl
mov
push
mov
add
test
movsl
xor
add
in
les
jnp
pop
pop
rorb
add
dec
xchg
dec
push
xorl
pop
push
lahf
and
cmp
sysexit
imul
or
push
ja
fcmovnb
add
out
jno
subl
inc
add
adc
push
pushf
or
verw
divl
jns
cmp
jp
mov
lret
add
fisubrl
je
or
jecxz
xor
add
or
daa
stos
add
and
xchg
outsb
out
fstpt
xlat
jne
pop
cmp
mov
fsubr
or
imul
push
xor
push
sub
in
lret
sbb
cmp
js
xchg
lahf
ja
or
sbb
add
sbb
dec
cmp
or
pop
or
pop
rcll
and
nop
mov
adc
push
sarl
je
nop
repnz
add
mov
or
jb
jns
push
and
mov
les
push
push
add
stos
or
sbb
jle
out
movsb
in
daa
push
mov
add
rcrl
pop
mov
mov
cmpl
dec
inc
outsb
mov
or
or
adc
popl
cmp
and
dec
pop
adc
loope
rol
addb
clc
cmp
iret
add
in
je
out
adc
xor
adc
mov
call
jmp
nop
addr16
pavgw
and
xchg
push
pop
mov
mov
out
push
pop
mov
inc
int3
add
stos
or
icebp
inc
leave
push
orb
mov
and
cmp
rol
sub
scas
loop
mov
jo
or
push
jmp
jns
add
mov
shl
aam
cli
push
lods
adc
sbb
pop
lds
call
out
sti
xor
insb
xchg
jg
sub
push
add
push
jno
or
fwait
mov
jl
imul
loop
out
cmp
jmp
lock
fldt
jle
jno
pop
sahf
add
in
rep
gs
adc
dec
xorb
xchg
arpl
int
popl
add
xor
shlb
loop
loop
add
fcomp
inc
cld
mov
add
loope
test
in
add
imul
ljmp
rol
cmp
xchg
inc
add
add
jb
test
hlt
or
push
in
pop
add
loope
je
lods
out
add
add
dec
add
jnp
fcoms
clc
add
and
add
push
sub
jo
xchg
jg
mov
and
mov
dec
dec
add
cltd
loopne
cmp
popf
or
and
push
mov
add
mov
push
add
pop
popf
mov
lret
dec
add
imul
xor
push
push
lds
push
daa
mov
pusha
xchg
testb
fisttpll
das
out
adc
or
orl
adc
push
jp
add
mov
add
movsb
test
add
mov
jecxz
ljmp
pusha
je
or
add
fmuls
pop
stos
xlat
call
add
jmp
mov
mov
xchg
faddl
lret
sti
pop
xor
mov
aaa
inc
inc
mov
or
and
and
test
mov
pop
cltd
or
loop
inc
fcomps
out
and
popa
shll
mov
or
adc
inc
mov
fldl
repnz
add
xchg
xchg
call
add
jb
jge
cmp
scas
jne
test
adc
cmpsl
pop
and
sub
movsb
jb
lds
add
sbb
or
jae
clc
add
add
test
add
icebp
push
sbbl
aad
mov
and
fimull
sub
adc
sbb
add
mov
je
popf
repz
pop
mov
sub
jl
sbb
dec
inc
or
add
cmp
sub
test
jno
and
in
adc
aam
loop
pusha
imul
push
aad
add
std
and
dec
scas
sbb
sub
inc
ret
push
mov
jmp
mov
sub
xchg
aas
push
sub
int3
ret
jo
roll
imul
push
fldl
fistps
jnp
sub
pusha
pop
pusha
gs
mov
fimull
or
push
cmpsl
pusha
pop
mov
adc
int3
jp
ret
xor
rolb
je
cmp
push
inc
scas
xchg
dec
add
add
add
push
xchg
mov
push
fwait
push
jb
cwtl
xchg
add
arpl
adc
add
mov
bound
xorl
sbb
insl
xchg
jae
push
cwtl
jle
add
int
imul
bswap
es
or
jnp
jo
sbb
std
pusha
lods
fsts
push
jge
sub
call
lods
rorl
inc
stos
add
jmp
loope
das
jp
hlt
pop
cmp
pushf
mov
dec
jbe
sub
xchg
mov
ljmp
jge
shl
inc
push
add
sbb
popa
dec
loopne
pop
mov
xor
sbb
pusha
push
rcrl
add
dec
jae
jle
iret
add
push
adc
and
jp
repz
mov
repnz
js
lahf
xor
or
lock
ficoml
jecxz
push
negb
les
pop
out
xor
dec
test
sti
incb
insl
mov
sub
mov
les
scas
cmc
cwtl
popf
dec
adc
pop
xchg
sarb
inc
add
into
sbb
push
lret
orl
dec
xor
pop
xchg
sbb
adc
mov
adc
add
fadds
sub
repnz
mov
fadds
pop
fwait
inc
pop
mov
mov
js
mov
jmp
in
inc
pop
and
sub
in
ret
adc
arpl
pop
lods
fsub
sti
xlat
adc
inc
adc
in
test
jg
and
xor
add
dec
sub
and
lahf
and
sub
mov
inc
adc
or
adc
int
imul
sub
jns
clc
test
add
adc
iret
xchg
xchg
loopne
or
sbb
or
inc
mov
dec
mov
adc
add
imul
pop
notb
sti
adc
loopne
cmp
xor
fwait
push
push
sub
ficomps
stc
mov
sbb
hlt
cwtl
push
mov
add
in
insl
add
dec
fptan
lahf
incb
xchg
test
mov
add
sbb
push
daa
push
dec
pop
and
outsb
inc
fwait
xor
cmp
add
cld
mov
rorb
mov
mov
mov
shrl
imul
frstor
adc
loopne
lcall
jae
sub
and
adc
clc
sub
inc
rcll
adc
adc
adc
adc
js
nop
mov
shr
nop
jge
mov
cld
ds
and
adc
push
cmp
xor
test
mov
jg
and
or
dec
nop
in
test
and
and
and
push
adc
adc
mov
mov
or
inc
xor
mov
popf
mov
notl
inc
sarl
and
push
mov
mov
rorl
add
pop
test
add
fs
sbb
push
dec
jp
add
jnp
fwait
loop
pop
ja
mov
push
mov
jecxz
sbb
add
push
add
in
leave
int3
dec
pop
imul
dec
mov
dec
nop
jp
ljmp
add
xchg
dec
and
fldl
pop
popf
lahf
rcrb
mov
shll
mov
lret
notl
int3
into
mov
add
add
fcmovu
or
aam
int
cmp
in
mov
add
sti
xor
dec
cmp
add
jg
sub
add
sub
sbb
add
xor
and
mov
aad
push
mov
add
daa
push
pop
mov
push
jp
pop
scas
xchg
in
shll
mov
xchg
dec
addb
int
out
cmp
cmp
adc
add
jb
pop
push
daa
cmp
push
in
pusha
inc
push
nop
pop
lea
jmp
add
out
pop
test
mov
add
orb
mov
in
repz
mov
dec
in
jecxz
ljmp
cltd
and
dec
mov
sbb
lock
stos
sub
adc
call
faddl
sub
pop
test
inc
jmp
ficoml
push
sbb
pusha
enter
cmp
sbb
hlt
jb
jno
add
and
push
cmp
xorb
aas
icebp
and
mov
and
decl
jns
and
ljmp
pop
into
add
outsb
jge
mov
clc
cmp
in
or
jo
fdivrs
cmp
and
sub
pop
add
xchg
add
jmp
or
test
dec
pop
sbb
imul
xchg
int
imul
std
ljmp
incb
fwait
sbb
xor
int
add
js
pop
mov
les
aas
enter
ret
int3
fisubrs
movsb
ja
or
and
xchg
mov
adc
adc
mov
cld
mov
xor
mov
cmpsl
fstps
inc
mov
push
rorb
imull
inc
loop
sbb
shr
jbe
roll
rcrb
mov
nop
and
adc
mov
jo
sbb
outsl
mov
push
daa
add
shl
sbb
hlt
popf
fs
outsl
stc
and
rcll
mov
jo
div
add
es
push
mov
filds
or
mov
jmp
add
ss
ds
test
popl
rcll
pop
and
add
aam
ljmp
pop
dec
lds
jg
scas
add
fldcw
imul
das
sbb
mov
dec
sbb
out
cli
fiadds
les
fxch
int3
repz
dec
int3
xchg
sub
call
aam
adc
movsb
and
inc
mov
add
pop
dec
daa
cld
fiadds
mov
ret
in
jnp
jbe
cmp
or
iret
stos
push
adc
pop
dec
cmc
push
add
and
sbb
mov
fistpl
dec
mov
inc
je
cli
movsl
push
rorb
and
cwtl
cmp
ljmp
add
je
push
add
mov
or
inc
les
mov
stc
adc
fsubs
add
xchg
flds
aas
stos
add
movsb
lret
xor
or
fbstp
enter
ret
std
add
addb
and
dec
mov
mov
in
xor
and
repz
inc
mov
lea
add
inc
inc
mov
addb
fidivrs
aam
lcall
movsb
out
add
add
movsl
rcl
setnp
cmp
call
cld
loope
emms
inc
lds
mov
dec
add
sbb
sbb
ror
lock
add
xchg
mov
icebp
decl
mov
fdivl
xchg
enter
push
inc
data16
cmp
cmp
mov
cmpsl
jne
jmp
push
aas
addl
cmp
dec
gs
cmc
loopne
aaa
test
mov
mov
dec
push
add
push
pushf
out
push
das
shlb
mov
cmp
rorb
pop
jae
bts
in
xchg
push
pop
call
add
outsb
testl
pop
dec
add
mov
fucomi
ljmp
xchg
push
daa
cmp
out
cmp
lahf
or
pop
mov
and
mov
xchg
pop
add
mov
int
rorb
lods
pop
pop
pop
push
xor
jmp
mov
dec
xchg
add
pop
push
add
arpl
jo
lea
inc
cmpsb
test
cmp
xchg
mov
lret
dec
lea
lods
jl
iret
ficomps
shlb
cmp
pop
and
pop
inc
dec
push
stos
sub
enter
mov
in
pop
mov
pop
inc
or
rcrb
out
inc
cmp
jne
sbb
js
ret
dec
cwtl
daa
jo,pn
in
dec
xchg
ds
xchg
xor
testb
pop
push
lcall
mov
push
mov
sub
je
add
enter
stc
xchg
add
inc
outsl
push
mov
adc
mov
subb
and
dec
pop
or
add
xor
or
bound
jb
add
mov
iret
lock
stc
jno
rcll
dec
jge
add
inc
sub
xchg
or
push
loopne
xor
mov
xor
adc
add
push
push
sbb
lods
pop
xchg
faddl
jns
and
xor
scas
pop
push
sar
pop
or
mov
stos
pop
add
fucomip
inc
mov
es
pop
rcll
add
fsubl
dec
mov
ja
loop
popw
and
insb
push
into
cmpsb
cmpxchg
xchg
or
xlat
mov
add
sti
jmp
sub
jbe
add
inc
dec
int
adc
jo
fsubrl
and
add
lea
and
mov
repnz
add
andb
iret
and
or
data16
and
pop
add
js
push
int3
int
movsb
xor
lret
push
mov
jnp
adc
mov
and
mov
stc
and
test
mov
and
rorl
push
fcomps
andb
loopne
and
adc
pop
inc
lods
push
xlat
test
setle
mov
xor
adc
loopne
scas
jae
sbb
mov
pop
sbb
mov
insb
fisubs
adc
jl
test
popw
mov
hlt
xchg
pusha
add
insb
inc
cmp
pop
jge
int3
rcrl
add
dec
and
mov
inc
fcoms
inc
loop
mov
lods
push
loopne
es
add
inc
je
sbb
inc
cwtl
lahf
call
sbb
out
ret
sub
adc
mov
cwtl
push
sbb
push
pop
ja
movsl
adc
hlt
cld
sub
mov
stos
out
fadds
sbb
lahf
or
push
data16
xchg
or
mov
and
jne
add
jns
fstl
push
roll
xchg
sti
and
pop
and
xor
psadbw
inc
lods
mov
arpl
mov
ss
xchg
jge
add
xchg
test
push
mov
cmpsl
add
push
test
adc
lret
jge
out
sub
cmp
fnstenv
push
mov
cmp
dec
jmp
sbb
inc
lea
sbb
and
adc
daa
add
jle
sub
inc
push
push
mov
ret
and
cmp
dec
enter
mov
dec
pmulhuw
adc
das
imul
or
inc
pusha
inc
cld
lea
xchg
lcall
jmp
sbb
pop
and
mov
into
and
pop
jp
call
ljmp
add
cmpsl
bound
cmp
and
out
enter
rclb
loopne
sub
jg
add
adcb
mov
mov
cmpb
adc
lock
fld
adc
popf
pop
dec
xchg
ds
sub
ret
jmp
mov
add
xor
xor
cmp
out
rolb
lret
adc
add
out
fcmovne
dec
pop
or
ds
add
andb
add
sahf
lock
sub
data16
add
mov
sbb
aas
and
pop
ret
lock
or
add
sahf
in
cmpsl
negb
adc
push
jge
mov
and
inc
loopne
add
je
mov
rolb
ljmp
xchg
int
sbb
or
cmp
adc
dec
or
jns
pusha
mov
push
push
test
push
pusha
out
mov
nop
add
jno,pn
push
add
test
rorb
inc
jbe
add
or
rolb
popa
decl
pusha
mov
sbb
pop
lret
je
sarb
sbb
or
shlb
ljmp
test
xor
xor
pop
pop
xchg
dec
rclb
lods
push
and
dec
pusha
stos
out
mov
xorl
add
jecxz
push
push
frndint
mov
movsl
pop
mov
aad
lods
sti
cs
mov
nop
cmp
sub
cwtl
push
push
add
roll
sub
sbb
mov
stc
or
bound
into
mov
sbb
mov
jb
inc
jmp
lcall
dec
add
std
lods
sahf
cmp
sbb
dec
loopne
outsl
test
mov
push
movsb
mov
and
or
out
fistps
in
dec
inc
jns
jno
loope
jb
into
iret
pop
dec
stos
xlat
cmp
aam
add
pushl
mov
xchg
nop
add
mov
int
fiaddl
mov
cld
imul
pop
cs
clc
mov
mov
rcrb
pop
lret
ficoms
mov
or
mov
xchg
pop
dec
insb
dec
lods
add
shrb
xor
add
push
jae
in
scas
mov
mov
enter
sub
jae
inc
push
ficoml
xchg
xchg
inc
arpl
push
and
xor
test
sbb
sbb
or
shrl
xchg
add
je
clc
mov
dec
sbbb
test
cmpsb
push
add
add
inc
cmp
lret
jecxz
inc
add
mov
push
add
cld
jne
test
pop
push
shl
mov
push
push
out
xchg
add
add
mov
dec
lds
add
lahf
mov
mov
lds
adc
movsl
or
mov
push
lret
mov
sti
add
mov
mov
enter
movsb
je
or
push
add
movl
andb
dec
cmpxchg
cmpsl
nop
dec
testl
scas
insb
mov
cmp
push
stos
xchg
in
mov
xorb
xchg
inc
jnp
add
sbb
xchg
dec
test
pushw
mov
or
imul
testl
inc
mov
pop
inc
loop
cmp
daa
sarb
inc
gs
mov
add
inc
add
mov
push
mov
ds
push
mov
test
fdivl
jns
lock
in
add
lods
mov
jne
xor
adc
in
push
ja
add
mov
int3
sub
ja
or
loop
sub
mov
jl
add
mov
or
jecxz
add
xchg
xchg
fwait
mov
sbb
add
mov
add
push
xchg
pop
adc
fnsave
sub
mov
xchg
lahf
cmpsb
or
cmp
loopne
mov
out
pop
cmpsl
adc
je
outsb
jo
movsl
sub
imul
xchg
cmp
add
or
sarb
repnz
shrb
add
subb
subl
pop
popa
es
cmp
jge
mov
add
fcomps
dec
cld
adc
push
stc
in
out
add
jno
bound
dec
add
mov
add
xchg
add
rolb
sub
or
cmpsl
and
and
stc
test
fmull
test
add
pop
shl
lcall
add
jae
loopne
mov
push
add
push
in
rorb
iret
outsl
std
inc
pusha
sbbb
aam
mov
jle
jmp
jno
xchg
cwtl
and
test
inc
mov
loope
push
lahf
loopne
insl
test
add
dec
aas
mov
lret
add
pop
jp
add
adc
test
lds
jl
fbld
add
pop
imul
mov
add
arpl
nop
inc
add
or
lea
insb
xchg
inc
sbb
mov
pop
lret
sub
sahf
nop
mov
faddl
lock
mov
aam
jge
or
ss
lock
jl
add
test
xor
push
mov
loop
add
lret
subl
push
fdivl
cmp
sti
and
xchg
mov
scas
sub
je
or
andb
or
out
dec
or
add
xchg
push
movsb
add
stos
sbb
mov
and
fs
adc
push
mov
inc
mov
or
sbbb
cmc
orb
inc
out
ficomps
and
lcall
lods
jmp
lock
dec
xchg
inc
je
jnp
fisubs
test
cmp
es
fdivs
cld
add
stc
divb
add
or
movl
loop
sbb
data16
rorb
add
or
je
movsb
mov
lret
and
insb
test
in
dec
lea
ljmp
comiss
inc
ficompl
in
cs
push
int3
repz
repnz
pop
pop
ja
add
add
lds
jne
pop
mov
adc
daa
sub
ss
cmp
add
clc
jae
push
push
andb
outsb
pop
dec
push
sub
or
cli
aam
jge
xor
dec
mov
cwtl
push
add
decl
and
mov
popa
or
movsb
inc
pushf
add
call
fldl
inc
cmp
cmp
add
push
test
xor
insl
je
mov
add
and
cmp
stc
movsl
mov
xor
inc
and
push
test
cmpsl
xor
inc
push
fadds
mov
scas
push
out
call
cwtl
test
sub
sbb
test
inc
aam
lods
add
xchg
mov
sbb
pop
cmp
enter
into
sbb
bound
sub
add
fwait
xchg
add
ret
loopne
mov
shl
sbb
jp,pt
out
adcl
dec
mov
aam
sbb
stos
pusha
addb
pop
sub
xchg
iret
jne
incl
dec
dec
mov
out
pop
add
and
push
popf
add
cltd
lahf
sub
inc
mov
fiadds
mov
or
test
add
popf
pusha
insb
inc
aad
pop
inc
cld
aas
fdivrs
dec
add
push
mov
mov
cs
add
dec
sbb
xchg
mov
or
lods
add
jmp
add
cwtl
mov
fisttpl
int
or
out
lods
sbb
imul
xchg
popa
jecxz
push
ljmp
in
sti
nop
pusha
xchg
ja
push
lahf
loop
shll
ljmp
sbbb
add
mov
sarb
cwtl
mov
and
jae
lods
mov
xor
pushf
pop
aad
add
ror
and
outsw
mov
inc
mov
add
xchg
outsb
jp
add
and
aas
leave
cmc
or
mov
shrb
mov
outsb
pop
cmpsl
pop
loop
dec
cltd
cwtl
add
xchg
hlt
pop
add
scas
sbb
pushf
test
mov
add
pop
mov
insb
jp
xor
aam
pop
loope
and
or
inc
out
add
cmp
fnstsw
and
mov
mov
outsl
stos
jle
sahf
insb
add
mov
mov
mov
inc
jb
mov
add
jbe
or
jecxz
cmpsb
jecxz
pop
add
add
pusha
jl
pcmpeqb
pop
mov
add
mov
xchg
decb
lock
mov
jo
out
and
mov
popa
fbstp
negl
xchg
add
ficompl
mov
mov
adc
adcb
mov
fwait
aas
dec
xchg
xchg
xlat
cs
popa
hlt
pushf
pop
add
mov
add
xchg
adc
add
push
mov
popa
adc
add
addb
push
jecxz
mov
loopne
stos
sahf
lock
js
jno
jmp
add
inc
mov
pop
mov
pusha
hlt
std
and
inc
shll
mov
jge
testb
xor
insb
add
xchg
sbb
cmpsb
loopne
cwtl
mov
cmpl
dec
pusha
adc
stos
dec
pop
movsb
aam
sbb
test
jge
add
shrl
jg
add
pop
mov
and
mov
pop
cs
xor
ret
add
xor
add
jp
xchg
xchg
add
mov
and
push
mov
sbb
push
mov
xchg
mov
add
pushf
sbb
cmp
in
push
das
jo
cmp
mov
dec
sbb
add
rcrb
mov
sbb
out
dec
xchg
cwtl
aad
aad
dec
or
cmp
add
or
inc
pop
call
sbb
test
sub
lret
mov
addr16
adc
aam
add
cmp
int3
sbb
add
cli
lods
mov
jecxz
loopne
fimuls
xchg
xchg
inc
mov
push
pop
mov
in
or
sub
out
inc
push
lahf
int
add
add
lods
jp
shrd
pop
addb
rcll
pop
fiaddl
xchg
dec
pop
sbb
hlt
pop
sbb
sbb
bound
add
inc
pop
lret
movb
cmpl
sbb
add
fldpi
icebp
pop
mov
popa
popl
fiadds
or
mov
cld
add
js
pop
int3
inc
aad
cmpsl
inc
add
lret
sub
test
sti
inc
aad
pop
pop
lcall
mov
jp
mov
in
or
fadds
and
adc
cmc
insb
inc
add
gs
lcall
pop
dec
cmp
vhaddpd
mov
aam
inc
sbb
add
ret
test
adc
cs
add
sub
push
jecxz
mov
add
es
sub
rcll
out
outsb
pop
xor
aad
faddl
sti
xor
mov
mov
in
adc
cmp
nop
cld
popf
fs
add
cli
dec
addl
aam
dec
add
adc
sarb
add
mov
roll
stos
mov
and
add
cwtl
fisttpll
loopne
mov
adc
inc
dec
mov
inc
push
push
mov
sub
adc
sub
cs
add
and
jl
xor
or
mov
orb
and
mov
js
inc
addb
lcall
inc
add
sbb
cld
xchg
sub
add
push
fmuls
push
sub
test
or
dec
daa
xchg
inc
loopne
loopne
mov
adc
into
sub
or
pop
dec
and
jle
adc
add
dec
or
mov
inc
iret
out
cmp
subb
mov
fxam
push
sub
or
imul
pusha
loopne
int3
ficompl
mov
lods
mov
lahf
or
in
push
mov
adc
fdivrs
add
and
lret
stc
test
daa
jg
and
xchg
fwait
pushf
and
pop
xchg
movsl
rorb
scas
call
mov
jnp
ss
sub
sbb
or
mov
add
jle
iret
lock
pop
ja
dec
mov
xchg
adc
sbb
mov
inc
repz
cld
xchg
test
sub
movsb
adc
add
sbb
mov
xor
stos
data16
add
fsubrs
insb
test
xchg
jae
bswap
fwait
or
add
es
mov
jl
add
pop
xchg
sub
adc
and
mov
or
mov
in
push
mov
imul
dec
sub
ret
inc
add
stos
cs
addb
add
mov
adc
repnz
sbb
sbb
pusha
mov
stos
lods
add
or
mul
addr16
les
add
cmc
cmp
pop
cmp
jno
int
xchg
push
add
subl
mov
dec
idiv
inc
ret
cmp
in
cmp
add
inc
cmpsl
bound
jnp
insb
cltd
xchg
lret
daa
sti
xorb
jmp
fwait
jb
mov
push
loopne
daa
loop
cli
and
das
mov
jecxz
xor
mov
add
sub
stos
test
divl
cmp
add
add
movsl
add
jmp
cmp
cmp
jecxz
lods
sbb
daa
sbb
mov
loopne
or
je
jp
fistpll
decb
ss
mov
adc
add
xchg
sub
mov
in
push
jle
mov
mov
stc
add
fnstenv
add
xor
xor
out
movsl
out
cvtpi2ps
aam
ja
imul
pop
inc
mov
push
test
outsl
add
mov
lock
add
shl
sub
in
fwait
xchg
cmpsb
fimuls
jecxz
and
xchg
and
sub
leave
inc
shl
mov
loope
or
cwtl
cld
add
cmpl
dec
inc
leave
mov
xor
test
rcrb
shlb
jg
dec
scas
push
cltd
inc
popf
add
lods
and
mov
and
loopne
scas
adc
push
bound
hlt
jne
dec
loopne
mov
jmp
in
pusha
jae
testb
ret
or
add
xor
cli
or
lods
aaa
adc
and
add
leave
inc
and
sbb
imul
sarb
fdivrl
jb
add
sti
xacquire
push
pop
pop
xor
xchg
or
movsl
push
jle
insb
adc
cmp
mov
or
scas
add
mov
adc
iret
and
sti
cmp
ret
lds
jb
pop
subb
or
xchg
test
or
out
cld
ss
repnz
add
jmp
push
cmp
negl
movsl
aas
or
cwtl
jo
add
and
mov
pusha
test
inc
outsl
add
jecxz
js
movsl
or
cld
ja
insl
sahf
dec
mov
cli
lcall
mov
adc
or
aas
movsl
push
loopne
test
mov
roll
xlat
cmc
js
pop
mov
xor
sbb
sbb
lods
push
iret
mov
add
out
ss
add
jecxz
stc
aaa
mov
sbb
mov
cmpsl
mov
add
add
nop
push
mov
addr16
add
cld
cmp
in
pop
mov
jo
jmp
sbb
add
dec
rclb
pop
fists
mov
sbb
and
fs
hlt
jno
pop
pusha
inc
pushf
popa
and
mov
push
push
adc
lret
add
adc
add
mov
aaa
push
cli
bound
ja
mov
sub
and
inc
jne
stos
pop
call
xchg
xchg
lret
xor
add
cmp
imul
lods
add
mov
sbb
inc
add
dec
push
mov
lret
pushf
pop
addb
mov
fisttpll
sbb
jg
iret
leave
repnz
lea
dec
add
push
mov
add
std
ds
xor
cli
sbb
pop
clc
aas
sarl
or
adcb
cld
cmp
pusha
out
cld
mov
cmp
sub
add
dec
xchg
aas
pop
sub
mov
sti
sbb
add
or
iret
push
test
inc
add
mov
or
ds
cmp
dec
pop
rorb
jbe
dec
movsb
xor
pop
jle
sbb
and
xor
in
ja
cwtl
test
ret
add
nop
les
in
inc
mov
outsl
call
js
adc
sub
inc
or
cmpb
pop
daa
orl
shl
je
lock
fwait
xor
xor
xor
rcrb
loopne
cmp
repz
pop
push
dec
subb
add
out
pop
nop
pop
push
fisttpll
sarb
loopne
mov
sbb
mov
pop
pop
and
pop
fsts
cmpb
mov
jb
cmp
hlt
mov
push
pop
sbb
popf
lcall
inc
add
jp
inc
les
pop
call
mov
imul
add
addl
add
pop
outsl
xchg
xchg
clc
sub
add
xor
sub
pop
mov
xor
popa
clc
adc
insb
jae
sub
lods
push
pop
inc
mov
inc
mov
mov
sbb
xor
cmp
loopne
add
into
jmp
sahf
lods
xchg
cmpsb
clc
xchg
and
add
adc
push
in
mov
add
cmp
shl
loopne
mov
inc
push
push
xorl
mov
add
sub
cmp
rorb
jo
push
add
jg
cwtl
lods
into
cmp
dec
je
push
pusha
jae
mov
test
or
xchg
pop
movsb
sbb
inc
add
jl
cld
test
outsb
hlt
add
sbb
lret
in
hlt
inc
pop
jno
lret
push
xchg
xchg
pop
dec
mov
ss
scas
int
cmpsb
jge
lods
or
jno
add
cmp
test
nop
pop
mov
pusha
xchg
push
add
or
and
mov
imul
adc
inc
sahf
in
popa
imul
out
cwtl
pop
push
cltd
shll
lods
icebp
add
add
bswap
cmp
push
fsubs
add
test
pop
add
xor
mov
lret
mov
fcmovne
js
mov
shrb
cmp
inc
dec
cmp
add
sbbl
mov
sub
gs
add
stos
enter
and
sub
or
xor
cmp
loopne
aaa
add
mov
add
inc
sub
add
out
or
xchg
push
mov
notl
and
mov
sub
sti
fdivs
add
les
iret
dec
call
lcall
test
pop
mov
movsl
insb
pushf
sbb
pop
loopne
add
adc
scas
add
ret
fcmovnu
cmpsb
inc
add
fwait
das
fisubl
jns
test
call
add
jle
addr16
sbb
imul
fwait
push
jo
xor
push
rolb
add
iret
xchg
jbe
mov
movsl
sahf
adc
fs
fsubs
inc
add
loope
push
fwait
inc
enter
mov
mov
pushf
clc
mov
jae
cmpsb
add
dec
lret
or
mov
pop
je
add
daa
jbe
sbbl
cld
sub
inc
and
addl
add
mov
fbld
mov
sti
add
sbb
dec
adc
mov
xchg
testb
mov
test
mov
pmulhuw
std
and
das
mov
outsl
lea
sbb
test
frstor
inc
lret
ret
push
shlb
push
sub
add
cmp
sbb
jo
add
cwtl
mov
les
add
imul
dec
push
lods
add
js
aad
pop
add
hlt
pushl
mov
add
or
dec
push
add
je
and
daa
lds
shrb
add
inc
loopne
mov
or
mov
ss
add
mov
fldl
cmp
mov
pusha
int
icebp
sub
jle
cmp
lock
jg
mov
sub
fistps
pop
mov
fs
aaa
jae
stc
mov
sub
addw
jo
and
test
loope
push
mov
dec
xchg
add
mov
adc
add
sbb
xchg
or
pop
orb
sar
xchg
xchg
xor
sbb
sbb
hlt
loop
out
jns
push
inc
mov
dec
roll
out
mov
mov
aas
cmp
out
push
adc
push
inc
inc
inc
cmp
and
xorb
loope
add
jg
imul
sbb
out
repz
add
movd
xor
xor
mov
test
adcb
sbb
mov
pop
jnp
add
xor
sub
inc
mov
lcall
inc
mov
xchg
pop
call
or
nop
orps
test
clc
mov
and
and
add
stos
incb
adc
fdivr
add
or
pop
mov
mov
nop
push
cmp
js
out
or
subb
jp
sbb
or
jle
sub
mov
dec
lods
xchg
subl
jbe
aaa
adc
cltd
inc
push
sub
push
ljmp
dec
adc
xor
int3
push
movsl
lods
mov
loopne
popa
dec
jnp
lahf
and
sub
fnstcw
lods
add
cmpl
jbe
pushf
push
cmp
push
mov
cltd
lcall
and
xlat
lds
or
roll
dec
jmp
push
movsl
imul
mov
cltd
pop
add
pop
push
or
cmp
and
jb
sbb
enter
in
sahf
dec
out
enter
fs
pop
cmp
mov
or
cmp
pop
ja
xor
inc
jge
in
insl
xchg
movsl
fcoms
add
les
or
add
push
cmpsl
scas
adc
jnp
movhlps
push
pushf
loopne
leave
out
jo,pt
add
adc
and
aaa
dec
pop
or
mov
subb
cld
loop
xchg
xor
jns
scas
inc
pop
inc
call
adc
mulb
test
sbb
sub
gs
pop
add
add
mov
adc
sub
int3
shrl
pop
add
std
dec
cli
inc
add
or
fidivl
add
push
jmp
lcall
add
sbb
test
dec
add
push
sti
lds
pop
or
inc
mov
rcl
aas
jns
sub
pop
js
mov
mov
icebp
jns
xchg
or
inc
push
insb
ficomps
outsl
add
stos
fnstsw
outsb
rclb
pop
mov
sub
in
jecxz
arpl
sbb
xchg
mov
insb
iret
call
adc
sub
inc
sbb
add
insl
stos
testl
mov
and
push
fmul
xor
rclb
mov
inc
sbb
xchg
sub
mov
or
xor
sub
xor
add
mov
popa
cmp
jmp
cmp
or
adc
insl
add
stc
dec
add
call
mov
out
adc
dec
and
addr16
inc
jg
or
in
push
mov
dec
lahf
sbbl
cwtl
std
mov
loope
jns
lods
dec
mov
sub
mov
sub
jle
jl
add
sbb
scas
xor
add
jmp
add
rcl
sbb
outsl
adcb
pusha
sbb
fnstcw
sub
add
mov
cmpsl
sahf
lods
or
jbe
sbb
mov
cmp
push
orb
loope
sub
add
jmp
cmp
movsl
mov
pusha
pop
mov
adc
inc
hlt
sub
cs
pop
adc
in
mov
inc
mov
push
xchg
cwtl
push
int
cmp
xor
or
or
mov
push
push
nop
pop
pop
divb
out
movsb
mov
jae
or
jne
stc
jp
jge
add
es
ja
test
filds
lea
jno,pn
and
add
or
cmp
and
jl
adc
mov
shrl
xchg
push
pop
xor
adc
icebp
sbb
inc
imul
adc
movsl
add
adc
test
mov
bound
jo
lea
mov
inc
lock
push
add
mov
push
les
pop
and
mov
jb
cwtl
push
sub
in
adc
fdivs
out
sub
mov
xor
add
shlb
push
mov
aaa
popa
add
cltd
int3
in
add
or
mov
push
fistl
lcall
ret
nop
aas
or
arpl
pop
mov
adc
les
or
xor
outsb
sub
and
add
adc
and
nop
inc
test
in
js
call
aaa
mov
push
add
adcl
iret
or
dec
mov
ror
sub
mov
mov
add
sub
aas
insb
mov
clc
add
outsb
dec
dec
xchg
add
ss
mov
sub
xchg
nop
add
jmp
mov
add
mov
add
xorl
fs
inc
sub
movsl
push
repnz
arpl
jbe
and
mov
sbb
ss
popa
cmpsl
aam
inc
add
mov
push
into
faddl
sbb
iret
clc
pushl
les
lds
insl
loopne
add
pop
push
or
cwtl
inc
mov
mov
imul
aas
sub
pop
or
das
mov
and
xor
fildl
imul
int3
sbb
push
push
jae
cmp
xchg
xchg
cwtl
loope
leave
and
push
ret
add
in
div
or
push
cmp
subb
lock
push
ljmp
pop
addl
cld
and
movl
cmc
inc
lods
jb
sub
add
scas
imul
sub
mov
cmc
dec
cmpsl
jg
pusha
add
pop
push
adc
loope
clc
add
int
push
mov
push
jnp
movsl
and
mov
daa
xor
loopne
sti
bound
cmc
sbbl
lcall
mov
add
xor
gs
add
jb
js
dec
cmp
scas
ja
and
adc
gs
adc
cli
add
push
jnp
xchg
lods
dec
inc
pop
sub
je
lret
push
out
inc
cld
mov
push
rcr
push
pop
mov
push
dec
sbb
lds
push
rolb
cld
icebp
cmp
test
push
mov
xchg
dec
repz
mov
mov
scas
ret
jno
out
and
sub
pop
cmp
shll
pushf
mov
loop
xor
std
cwtl
add
nop
add
shll
icebp
scas
jg
jle
pop
pop
xorl
rolb
fdivrl
push
cmp
xchg
add
lock
fs
sbb
jg
adc
add
sub
mov
pop
enter
xchg
mov
out
add
or
push
out
add
mov
push
es
into
add
add
xor
xor
mov
mov
jge
sti
xor
cmpsb
add
test
or
dec
push
add
xor
jnp
js
add
xchg
xchg
out
das
add
rcl
sbb
les
push
sbb
add
dec
pop
ret
int
push
pop
xor
mov
and
jo
arpl
mov
out
nop
int3
jmp
add
mov
out
mov
subb
add
pop
or
dec
in
cmp
arpl
clc
adc
add
inc
dec
aam
cmpsl
add
out
add
add
and
xchg
inc
pop
mov
nop
mov
push
pop
add
cmpsl
test
mov
cwtl
push
jno
icebp
add
rcll
xor
daa
movb
jbe
and
mov
in
lock
push
mov
test
add
xor
int3
insb
mov
out
sbbb
mov
pop
jno
pusha
and
inc
cmp
add
outsl
jl
xchg
or
lock
adc
add
xor
push
mov
jnp
mov
jl
pop
dec
movsl
add
loope
inc
push
xchg
adc
sarl
pop
mov
leave
sbb
mov
sbb
lods
add
jnp
mov
fdivrl
pusha
and
or
xlat
dec
call
shlb
add
or
aas
outsb
cwtl
jge
pop
insl
or
sbbb
pop
adcl
or
push
sar
and
xor
rorb
lods
add
or
dec
mov
mov
cmp
test
loopne
add
fildl
addr16
aam
pop
mov
adc
dec
roll
sti
xor
pop
mov
push
and
sahf
sbb
cltd
xor
ja
inc
and
inc
aas
push
pushf
sti
and
test
cmp
inc
jle
add
or
mov
sbb
mov
rorb
fwait
inc
in
add
mov
add
dec
mov
imul
lods
adc
enter
ja
add
lret
fistps
lahf
incl
aas
fbstp
ret
push
mov
mov
mov
out
xor
cmp
sbb
orl
int
jne
push
add
push
sub
mov
sbb
sub
jo
scas
jp
sub
pop
dec
mov
mov
xor
sbb
jbe
sbb
cmp
jle
or
in
xor
mov
add
cmp
es
stos
ja
and
sbb
data16
imul
add
stos
pop
sub
and
imul
sub
pop
jl
push
stc
cmp
inc
push
jno
mov
inc
push
enter
dec
push
nop
cmc
adc
and
pop
imul
std
cmp
sti
cwtl
jae
je
add
in
sbb
jno
add
or
out
mov
pop
adc
sub
out
sbb
repz
add
push
imul
add
jmp
mov
enter
add
lret
arpl
movsb
imul
jno
in
je
cs
fldl
dec
push
or
loope
cld
add
stos
mov
add
outsb
cltd
ss
push
push
inc
push
mov
inc
mov
add
clc
add
jmp
std
jle
add
movsb
stc
and
pop
je
push
mov
mov
cli
mov
xlat
or
aaa
adc
subb
jne
sub
pop
lods
xor
aas
inc
nop
ror
add
push
into
push
enter
lods
sbb
js
add
stos
push
and
add
mov
and
lret
add
sub
sub
lret
xor
mov
pop
push
dec
movsb
mov
scas
sbb
es
daa
nop
add
inc
mov
inc
loopne
mov
aad
jo
aam
lock
xorl
cli
or
adc
dec
das
or
nop
fiadds
in
in
jmp
inc
pop
xorb
mov
xor
mov
add
scas
sbb
stos
fldenv
adc
xor
enter
cmp
les
inc
arpl
in
adc
loopne
pop
cmpsb
mov
scas
cmp
paddw
sbb
ror
add
imul
jns
imul
xor
pushf
adc
jo
cld
mov
loopne
push
sti
rolb
aas
std
dec
push
pop
movsb
outsl
push
xor
cmpsl
jecxz
dec
stc
adc
add
mov
xchg
add
repz
lcall
add
cmp
movsb
xor
orl
add
xor
in
xor
out
push
jne
and
js
mov
enter
pop
scas
insl
jg
add
xlat
xor
and
mov
jl
mov
xor
add
cld
ret
mov
fldt
xor
ljmp
push
aam
les
mov
adc
out
repnz
dec
mov
xchg
inc
and
insb
aaa
cmc
icebp
stc
addr16
mov
test
push
inc
call
push
xor
test
stos
and
xchg
pop
push
inc
movsl
jnp
lock
dec
stc
lods
add
and
add
cmpsb
jle
dec
imul
adc
addb
xor
rcll
cli
push
outsb
aad
and
or
fdivr
xor
add
dec
xchg
inc
bound
adc
pusha
cmpsb
daa
lahf
enter
add
mov
cwtl
popa
push
or
stc
data16
ljmp
test
pop
xchg
inc
hlt
loop
pop
dec
mov
mov
inc
gs
dec
incb
push
mov
and
aas
xor
xor
jns
movl
pop
gs
sbb
push
pop
or
lea
mov
lret
add
icebp
fcmovb
ds
xlat
loopne
xor
notb
lcall
jecxz
push
xchg
and
or
xchg
cmp
and
cmc
mov
arpl
jbe
sub
dec
adc
inc
mov
ljmp
adc
add
sub
and
add
push
jae
scas
add
mov
das
cmp
lock
jge
fs
out
fmuls
adc
je
xor
push
jl
lcall
lahf
add
xchg
test
pop
outsb
mov
insb
es
push
add
ror
cmp
and
jae
pushf
add
repnz
sti
add
lea
popf
push
add
movsl
xor
xorps
andl
add
inc
push
and
or
in
gs
mov
aas
add
push
inc
push
mov
cld
inc
mov
cltd
add
not
push
dec
unpckhps
movsb
call
add
mov
push
push
sbb
jno
lahf
rcrb
mov
push
notb
hlt
adc
adc
sub
mov
inc
add
add
push
cltd
mov
inc
je
add
pop
xor
insb
lahf
add
daa
pop
lods
stc
inc
cwtl
add
cld
in
notb
adc
inc
or
adc
test
ja
repz
mov
imul
sti
xor
mov
mov
dec
fbstp
pop
inc
fildl
add
xor
mov
pop
hlt
mov
push
popa
and
jne
add
xchg
jl
sbb
shr
sbb
xor
adc
cmp
inc
std
push
gs
sahf
add
int3
cs
ret
data16
xchg
repnz
and
add
int3
cmpsl
and
push
or
push
adc
sar
xchg
sbb
cmp
xor
cmp
loopne
cmpsb
mov
stos
out
pop
adc
aad
in
sti
adc
std
add
movsb
push
sub
pop
rep
jnp
mov
scas
or
mov
movsb
sar
add
sti
js
mov
pop
xsave
rclb
mov
mov
cmp
andb
test
addr16
pop
add
outsb
add
addb
int3
adc
mov
sti
add
int
xchg
insl
push
add
cmpsb
idivb
enter
aas
arpl
loope
xor
nop
test
in
mov
and
cmpsl
xchg
pop
dec
lret
jecxz
sbb
sbb
pop
xor
int3
mov
jno
dec
sbb
mov
and
into
jb
add
xchg
pop
aaa
loope
jne
dec
xor
sbb
js
add
pop
inc
int3
call
das
xor
les
fbld
mov
icebp
pop
dec
mov
leave
fsts
stos
lock
pop
imul
add
inc
nop
push
xchg
push
ret
and
and
mov
fimull
push
lret
add
add
stos
scas
lret
pop
xchg
sub
add
pop
cwtl
and
in
or
mov
xor
stos
lds
je
jmp
mov
xchg
inc
or
jno
enter
adc
decl
lods
and
xchg
in
dec
cmpsl
nop
lret
mov
mov
je
lret
popa
popf
dec
loopne
pop
ss
cmp
pop
mov
aaa
mov
aas
adc
mov
or
xor
cli
cmp
roll
and
pop
test
icebp
cmp
dec
xor
xchg
repz
adc
add
daa
mov
xchg
or
jle
pop
stos
sbbb
ret
dec
sbb
sub
jecxz
push
or
or
shll
sub
jmp
push
xlat
outsl
dec
sti
mov
ret
push
fnstenv
mov
fisubl
cmpsl
push
stos
push
mov
sbb
add
add
ja
mov
jns
paddw
jnp
lahf
leave
or
or
iret
pushf
add
std
add
pop
add
mov
add
fwait
std
push
divb
cmp
js
aam
es
mov
xchg
cs
ret
adc
dec
imul
loopne
sbb
jbe
jmp
sysexit
pop
cltd
xchg
sti
pop
xor
adc
fstpt
icebp
int3
shlb
in
loope
dec
inc
in
xor
mov
mov
fneni(8087
lea
jmp
push
add
cli
idivl
dec
pop
mov
jo
xor
sub
std
sbb
inc
pop
add
dec
mov
mov
sub
pop
hlt
push
rclb
fadds
nop
lock
xor
add
shll
loop
sbb
mov
pop
lds
pushf
xor
push
lods
and
or
and
inc
movsl
push
mov
rorb
fsubrl
or
rcl
and
fs
fbld
sub
aad
andl
repnz
call
cmpsb
push
cli
pop
insb
jb
sbb
clts
jo
popf
int
fs
lock
push
add
addr16
mov
sbb
add
inc
test
vhsubps
add
std
inc
mov
xor
dec
cmp
mov
fmuls
lcall
jbe
cmp
inc
and
cmp
xchg
add
or
dec
pop
add
ja
add
jle,pt
sub
cld
call
mov
sub
dec
xor
and
adcl
rolb
xchg
cltd
imul
lret
shll
mov
and
and
add
loopne
inc
lock
lock
push
je
jmp
pop
push
loopne
out
xor
add
mov
sbb
jg
cmp
fisubs
hlt
xchg
mov
mov
cwtl
add
cs
sbbl
pop
leave
adc
add
and
mov
lret
aad
dec
ss
pop
add
sti
clc
mov
das
jno
icebp
movsb
cwtl
jl
cwtl
loop
sahf
sbb
mov
push
inc
popa
and
unpcklps
add
lds
lock
pop
inc
sbb
lcall
or
adc
aas
pop
test
inc
rol
pop
and
adcl
dec
xchg
adc
sbb
in
lret
outsl
pop
adc
loopne
test
cmp
int3
add
shlb
cli
es
andb
add
enter
sub
inc
add
clc
mov
push
test
adc
mov
dec
dec
or
push
mov
xchg
in
incb
push
cs
push
jns
or
mov
cwtl
add
mov
add
popa
xchg
repz
cmpb
loop
cmpsl
aas
xor
icebp
sub
push
xchg
ds
into
hlt
pusha
mov
popa
cltd
pop
pop
mov
or
repz
test
pop
jp
orl
hlt
or
sbb
jp
jl
add
arpl
or
mov
mov
into
cmpsb
mov
or
incl
dec
jge
push
dec
mov
jmp
addr16
sbb
mov
pop
push
inc
dec
rorl
mov
mov
shl
jecxz
jbe
std
and
fisubrs
mov
mov
add
mov
push
mov
loopne
shlb
cld
add
and
pusha
mov
ja
push
xchg
cld
pop
cmp
aad
adc
out
add
pop
incb
les
pop
pop
mov
leave
ret
push
sahf
add
out
bound
mov
faddl
mov
add
jo
xchg
cli
mov
je
out
and
add
dec
inc
mov
inc
xchg
pop
jno
add
inc
mov
das
aam
add
in
pop
cltd
adc
cmp
sub
in
pop
mov
add
add
mov
rolb
add
sub
cwtl
xor
das
sbb
leave
arpl
dec
in
or
mov
mov
shlb
js
sbb
xor
popf
cmp
xchg
mov
orb
jb
sbb
push
aad
test
cmp
and
fld
sub
cmp
lds
mov
in
push
xor
push
add
adc
dec
dec
pop
in
test
test
into
and
or
jle
xchg
inc
pop
sahf
daa
aad
cmpb
lods
add
sub
push
pop
int3
cmp
xchg
pop
sahf
lods
pusha
mov
inc
add
jae
daa
mov
pop
mov
lret
dec
in
bound
loopne
add
rcrb
outsb
add
cmc
or
mov
inc
mov
inc
pop
bound
pop
or
mov
sub
sbb
add
pop
lcall
or
and
sub
mov
fcmovnb
nop
pop
das
hlt
pop
add
push
cltd
or
les
scas
push
fimull
adc
loopne
insb
sbb
cwtl
sahf
push
jge
jns
lock
inc
xchg
adc
pop
test
and
add
jp
sub
add
das
xchg
add
dec
inc
aam
sbb
add
rcr
xchg
cld
stc
cli
sub
test
movl
sar
xor
addr16
jmp
push
add
jle
lock
lahf
inc
inc
cwtl
dec
jge
jns
pusha
aaa
dec
push
jns
cmc
add
xchg
adc
sub
dec
cs
adc
in
push
cmp
add
sub
mov
inc
imul
test
daa
ja
and
dec
in
out
add
int3
cld
pop
sbb
jo
and
pop
pop
push
insl
repnz
fcomps
mov
push
int3
sub
xchg
dec
shrb
nop
xchg
jecxz
sarb
pop
enter
js
and
add
xchg
xor
dec
mov
inc
cmp
test
mov
in
fcoms
pop
add
sti
adc
add
in
repnz
pop
adc
dec
add
mov
inc
in
clts
mov
mov
xchg
sbb
cmp
gs
popa
enter
cmp
xchg
mov
xchg
sbb
ds
cmpsl
int
jb
sub
nop
divl
gs
sbb
jmp
aaa
clc
inc
mov
pop
sub
push
pop
mov
or
rcr
ret
or
dec
aam
daa
mov
jno
lea
shlb
xor
in
adc
cwtl
add
sbb
lds
jbe
and
cmp
pop
popl
sbb
cmp
cmp
add
jns
inc
pop
mov
mov
and
in
add
add
in
sbb
sbb
inc
jl
xor
ljmp
int
mov
mov
cld
lods
cmp
inc
dec
jnp
dec
addr16
aad
xor
cltd
sbbl
cmp
add
dec
and
or
pop
fcoml
repnz
jo
sub
fisubrs
fs
jecxz
mov
mov
add
les
add
fstps
xchg
sub
add
push
subb
sub
repnz
jb
inc
push
inc
xchg
add
push
xchg
incl
imul
jl
jmp
cmp
push
cmp
mov
dec
xlat
xor
or
scas
push
rolb
daa
add
ret
test
and
jbe
mov
les
call
push
mov
and
decl
inc
adc
push
ret
jl
adc
add
in
xchg
jg
jmp
adc
push
pop
push
repz
add
and
loopne
and
out
leave
iret
add
xchg
push
fcoml
xchg
pop
in
add
daa
add
roll
push
xchg
popa
jge
add
cmc
std
add
fidivl
and
outsb
jge
mov
aaa
pop
ret
negb
addl
add
aas
dec
jmp
lock
push
lret
adc
inc
ja
rcrb
into
xchg
lcall
out
push
xchg
push
js
movsb
mov
sub
jp
add
or
jp
adc
je
xorb
dec
push
stos
jecxz
dec
stc
and
dec
stos
int3
mov
or
xchg
jns
jno
add
std
push
mov
daa
rolb
push
or
cli
lods
xor
cmp
inc
mov
les
lahf
push
push
out
std
fs
mov
mov
ja
data16
pop
push
rcll
jg
js
gs
mov
cmpsl
or
jae
push
add
imul
fwait
push
add
out
sarb
adc
add
cmpsl
flds
das
imul
loop
pop
vpextrd
sti
add
dec
jle
stos
xchg
add
mov
inc
sbb
in
nop
mov
adc
sti
push
mov
in
add
sahf
sub
cmp
inc
mov
ljmp
jns
jmp
xchg
fildl
mov
movsb
xor
add
pushf
xchg
cs
or
cmp
pusha
aas
or
jo
aam
or
popl
int
or
mov
pop
test
xlat
pop
or
cmp
repz
ljmp
inc
stos
xor
add
mov
rcll
xor
or
aas
xchg
les
rorb
es
icebp
or
mov
push
or
and
add
idivb
repz
pop
lcall
mov
inc
addb
and
mov
call
pop
adcl
cmp
adc
mov
ds
dec
pop
movsl
add
js
push
cmp
or
sub
or
pop
clc
mov
push
mov
cwtl
repnz
sub
mov
push
push
add
jl
add
inc
outsb
mov
aas
or
sbb
jmp
call
sbb
push
pop
lcall
pop
rcrb
lret
mov
cwtl
lcall
add
mov
ss
in
lock
mov
inc
dec
stos
mov
add
or
pop
add
lret
enter
add
lds
jno
push
std
pop
into
cmpsb
push
inc
rcl
push
hlt
imul
mov
push
sarb
xchg
inc
lock
mov
push
mov
add
xchg
loopne
ja
lahf
add
mov
dec
mov
cmp
add
shll
cmp
movsb
cmp
scas
cld
test
imul
lahf
sbb
and
push
in
or
sub
roll
adc
or
mull
push
push
cwtl
add
jg
std
mov
jmp
sbb
mov
roll
add
lcall
into
cmp
lea
imul
jmp
loopne
pop
xchg
mov
cs
pusha
push
add
in
icebp
jp
push
push
adc
out
mov
dec
stos
add
test
jp
or
add
cwtl
pop
pop
lods
shlb
and
imul
dec
inc
cmp
out
add
testb
push
sub
adc
xchg
pop
adc
loopne
nop
sub
or
push
pop
pop
mov
ja
lock
pop
add
mov
imul
add
push
add
or
fistps
mov
cld
test
jne
es
cmp
ret
orb
fwait
and
push
and
dec
mull
not
mov
push
pushf
add
cltd
dec
loope
push
sbb
test
add
push
cmp
rclb
cmp
aam
adcb
dec
inc
and
xor
xor
fucom
xorl
mov
jne
pop
js
xor
test
and
cmp
das
mov
and
jge
jmp
mov
lcall
pop
cwtl
out
adc
lret
pop
ret
jbe
hlt
adc
lahf
test
sbb
xchg
add
aaa
add
in
cmp
incb
inc
push
not
pop
jo
movsl
out
sbb
pop
cld
fs
add
sub
add
dec
clc
in
mov
push
sub
fiaddl
push
add
rcl
and
xchg
push
add
xchg
adc
fistpl
loopne
insb
nop
cwtl
add
aaa
andb
fwait
add
in
imul
jae
adc
pusha
cmp
leave
and
lret
sbb
loop
add
outsb
xchg
mov
and
clc
hlt
or
mov
push
jl
mulb
sbb
xchg
jmp
mov
mov
lahf
add
je
xchg
jmp
rorb
push
fistpll
jo
cli
in
xor
int3
dec
and
add
dec
ja
loop
add
stc
in
fcoms
in
sub
or
test
pusha
cmp
daa
xor
jb
add
or
pop
xor
mov
xor
dec
add
mov
ret
pop
test
cmp
mov
push
pop
leave
in
inc
insl
daa
je
jp
js
or
inc
movsb
aad
icebp
aas
inc
test
in
ds
leave
lds
lcall
inc
sub
jbe,pt
dec
and
jne
add
or
sbbl
clc
mov
jns
pusha
flds
loopne
cmpsb
in
pop
jno
adc
mov
mov
cmovg
mov
inc
outsl
pop
pop
call
sbbl
iret
cwtl
mov
cld
mov
sub
testl
mov
adc
and
loopne
rorl
mov
movsl
dec
hlt
and
movsl
push
push
or
cwtl
aam
test
jg
push
stos
jno
or
jg
inc
cld
push
sub
push
mov
or
addr16
insb
ljmp
lods
cmp
mov
cmpsb
xchg
xchg
push
rcrb
adc
pop
sbb
repz
loope
mov
or
cmp
in
sbb
xchg
mov
loopne
cs
cltd
mov
xchg
xchg
movsb
lds
stc
repnz
add
ficoms
adc
push
push
add
test
mov
aaa
sbb
push
ds
pop
dec
mov
cmp
xchg
mov
lock
mov
mov
push
push
dec
add
xchg
adc
add
jp
push
daa
pop
loop
fdivrs
or
fwait
popa
mov
pop
stos
leave
and
push
push
dec
mov
xchg
mov
mov
sub
push
pop
aas
mov
or
cmp
in
rolb
add
fsubrp
xor
jg
cwtl
rcr
sbb
test
push
or
mov
cmp
jnp
sbb
loope
inc
dec
cmpsl
inc
and
iret
push
sti
jb
sbb
adc
incl
repz
insl
jl
sbb
enter
sbb
insb
jge
js
fiadds
daa
repz
leave
fidivl
add
inc
in
sbb
stc
ljmp
in
hlt
mov
xchg
xchg
cmp
mov
sbb
ja
add
jo
xor
hlt
jbe
xchg
dec
stos
cld
mov
or
jb
xor
ror
sbb
ljmp
pop
ljmp
les
test
cmpsl
testb
sti
mov
add
xchg
cmpsl
es
roll
loopne
inc
push
or
aam
mov
xor
xor
or
dec
mov
sbb
and
insl
add
movsb
push
jge
sbb
jmp
pushf
mov
mov
add
push
mov
mov
fldcw
nop
xor
mov
xchg
push
cmp
mov
dec
cmp
add
lahf
shlb
and
push
test
stc
or
je
jo
cwtl
fwait
lret
push
leave
into
in
xchg
jbe
imul
mov
stc
or
icebp
mov
in
rcrb
dec
sbb
adc
xchg
mov
insb
dec
add
ja
fsubrs
mov
aas
xchg
add
divl
enter
pop
andb
dec
add
into
fsubr
sti
add
mov
add
xor
xor
jle
and
mov
add
mov
or
add
lret
pop
adc
enter
lea
xchg
cmpsl
xor
inc
mov
rcl
nop
cmc
cmp
sub
add
cmp
js
ljmp
inc
mov
and
popf
mov
test
das
jle
jg
fwait
stos
add
or
lea
pusha
hlt
add
in
pop
nop
adc
pusha
push
jae
add
or
iret
mov
test
jnp
insl
mov
mov
jecxz
inc
sub
adcb
fsts
add
add
pop
xchg
cmp
jo
test
lods
add
pop
sub
aaa
lret
int3
fldenv
mov
fadd
mov
sarb
sub
daa
jl
std
or
mov
lret
jp
add
sub
and
movsl
mov
xor
fistps
imul
fcomi
add
mull
movsl
or
movl
out
insb
mov
dec
into
pushf
mov
add
jecxz
jno
push
adc
add
xchg
mov
test
lret
inc
jno
inc
jg
push
cwtl
pushf
in
das
loopne
sub
add
mov
mov
xor
adc
arpl
add
push
cmp
mov
aaa
int3
and
sbb
pop
jmp
decl
and
push
fnsave
loope
movb
mov
adc
sbb
cli
or
sub
inc
hlt
shlb
xchg
adc
add
scas
lock
lds
sub
add
clc
push
mov
xlat
lds
pop
xor
sbb
mov
clc
je
fldcw
shl
push
sbb
fs
addr16
push
std
add
inc
iret
jae
enter
popa
sbb
cmp
jnp
rcrb
push
fwait
and
or
adc
ret
pop
push
hlt
add
lods
lahf
adc
stos
test
test
or
jle
mov
aam
andl
call
out
iret
fistps
dec
push
cli
or
mov
cmpsb
jl
aas
adc
add
jnp
pop
mov
mov
push
mov
shlb
lock
nop
push
add
loopne
test
inc
movsb
dec
dec
sbb
aam
and
das
push
fwait
push
cld
add
sbb
mov
add
hlt
and
push
xchg
or
mov
pop
lods
sahf
call
mov
cmp
jge
in
add
int3
scas
mov
pop
ror
sub
loop
imul
or
add
test
push
imul
clts
in
sti
cmp
mov
and
cwtl
lahf
sub
arpl
mov
adc
dec
or
push
imul
scas
sbb
sbb
mov
add
fdivr
cli
lds
bound
cmp
add
cmp
and
xchg
mov
xlat
and
cs
imul
mov
pop
xchg
stos
loopne
sahf
jecxz
nop
add
andl
loop
cld
pop
pop
push
lods
mov
mov
loop
loope
clc
std
add
outsb
jns
cmp
push
ljmp
jae
mov
clc
mov
xorl
xlat
inc
and
push
or
sub
subb
clc
mov
push
imul
fcom
add
mull
rol
enter
rcrb
jo
add
jns
mov
xchg
and
int3
sub
add
lcall
sub
js
stos
or
dec
and
jo
mov
adc
inc
into
add
test
rorb
call
frstor
clc
or
add
ja
js,pt
sub
push
add
pop
xchg
cltd
pusha
pop
rcll
inc
xor
call
addr16
cwtl
outsl
or
mov
outsb
and
push
dec
js
lods
sub
aaa
add
add
push
add
mov
call
std
lds
xor
add
addb
xchg
movsb
dec
mov
fildl
sub
int
testb
lods
test
add
sub
outsb
lea
cmp
cmp
sti
mov
aam
inc
push
mov
add
push
testb
leave
or
pop
pop
cmp
inc
ret
cmpl
repnz
add
ret
push
cmp
pop
roll
fsubl
push
popf
gs
sbb
test
or
data16
sub
in
push
dec
add
sub
movl
out
mov
js
pusha
pop
ret
pop
dec
xor
js
adc
lret
add
jmp
rclb
jbe
cmp
sbb
or
dec
push
pop
add
xchg
lock
add
mov
rolb
xor
inc
add
insl
stos
in
jp
outsl
mov
enter
jp
add
addr16
popa
rorb
and
data16
fs
imul
cmp
push
outsb
mov
fcomps
test
loop
add
mov
sbb
imul
xlat
jmp
add
sar
in
pop
call
and
pop
xchg
lcall
popf
mov
push
sahf
insl
sub
movsb
mov
adc
lock
das
rclb
add
lret
popa
imul
rorl
push
out
adc
adc
fcmovb
cmp
mov
xchg
xor
mov
fldl
mov
mov
ret
and
rcll
addb
xor
sbb
stos
aaa
push
pop
push
adc
ret
addb
xor
cmp
add
in
adc
adc
dec
inc
cmpsb
in
loope
cmc
push
in
movsl
enter
add
jno
push
popf
imul
lret
sub
add
mov
jg
add
and
aaa
mov
out
xor
inc
push
xchg
and
jg
mov
fldt
jb
mov
inc
adc
rclb
lods
sub
cmp
adc
add
jge
jg
sub
pop
test
sbb
xor
loope
and
push
pop
adc
jl
cmp
loop,pn
pushf
add
push
ja
cmp
ljmp
mulb
sub
sbb
mov
add
daa
mov
and
stos
jb
icebp
pop
ss
push
or
int3
cmp
in
or
dec
add
xchg
test
and
lods
aam
adcl
push
out
mov
movsl
loop
nop
mov
cmp
and
pop
cmp
pop
mov
or
enter
dec
inc
shl
add
jb
mov
pop
pushf
push
add
cld
fdivl
lock
lea
push
mov
in
or
lcall
sub
sub
add
rcrb
inc
pusha
fst
push
sbb
jle
mov
mov
inc
call
imul
dec
push
cmp
add
xchg
aad
insb
inc
xorl
mov
push
jg
out
fsubl
mov
pop
fistpl
push
mov
popa
out
inc
add
cwtl
lock
pushf
add
aam
pop
rolb
subl
mov
rcrb
sub
aam
into
mov
mov
adc
test
iret
das
mov
dec
outsl
cwtl
fsub
sbb
pop
push
addb
inc
add
scas
fwait
pusha
shl
std
pop
xchg
hlt
jmp
pop
jb
test
add
cmp
loopne
je
add
add
ss
pop
movsl
and
inc
jae
mov
ret
push
lods
sbb
inc
xchg
adc
mov
or
dec
stos
mov
insl
xor
aad
push
xor
iret
test
xlat
loope
loope
mov
rcrb
out
lock
hlt
pop
mov
xor
rcr
xor
call
cs
adc
scas
sbbb
fwait
cmp
and
lock
or
sbb
dec
add
mov
std
and
add
jmp
push
pushf
jp
add
jno
inc
mov
mov
xchg
mov
repz
add
dec
adc
pushf
cltd
insb
stc
shrb
mov
lods
add
pop
loop
daa
enter
lahf
in
xchg
sub
sbb
nop
sbb
in
add
lret
push
clc
ljmp
xor
sub
popf
mov
clc
pop
les
sbb
mov
push
sub
fdivs
add
and
cmp
jne
or
add
push
rcrl
dec
and
fadds
pusha
ja
mov
fnstcw
add
mov
xlat
add
std
ret
cld
pop
add
mov
add
cmp
cmpsb
pop
mov
lahf
clc
adc
test
push
sub
mov
or
jno
clc
push
mov
hlt
mov
pop
decl
roll
lret
pusha
ret
imulb
mov
sti
orb
pop
jns
xor
add
mov
and
lcall
add
cmpsb
push
inc
push
imul
lock
sub
jge
inc
mov
rolb
xchg
js
insb
push
pusha
xchg
add
fidivl
add
add
add
jne
add
push
lret
push
cwtl
xchg
sub
add
lret
add
or
mov
add
aam
shlb
ss
scas
add
adc
pusha
xchg
sbb
jne
mov
add
ret
or
sbb
fsubs
call
enter
imul
push
cmp
xor
sub
cmp
mov
outsb
flds
test
push
push
out
cmp
jg,pt
fnop
push
xchg
inc
sbb
or
int
add
and
jg
lcall
inc
fisubrl
sarl
push
insb
cmp
pusha
cmpsl
push
ja
cmp
xchg
mov
mov
out
pop
pop
xchg
cmp
addl
add
cmp
mov
pop
xchg
push
inc
out
loope
mov
ret
jo
push
pop
inc
and
pop
mov
xchg
cmp
mov
xor
xchg
sbb
aam
jl
pop
add
int3
mov
inc
sub
stos
stc
push
int
out
inc
fdivs
in
pop
mov
xor
arpl
or
mov
adc
sbb
cmp
add
sbb
insb
pop
in
jl
ds
stos
xor
add
clc
add
or
pusha
pushw
icebp
jno
and
add
push
jle
add
adc
adc
jo
test
add
stos
enter
or
mov
jl
je
add
adc
arpl
insb
or
xchg
and
aam
nop
ret
inc
adc
xor
sbb
lea
sbb
and
rcrb
add
sub
add
xor
lock
and
add
scas
mov
incb
push
sbb
xlat
int3
hlt
adc
enter
stc
rorb
enter
adc
adc
scas
add
cli
pusha
pop
xchg
push
cmc
fsubr
js
inc
lods
sahf
add
hlt
mov
fmuls
sbb
xor
mov
inc
add
and
clc
pusha
notb
repnz
adc
enter
data16
inc
fdivrl
rolb
cmp
sbb
hlt
mov
arpl
jne
ds
add
adc
adc
push
negl
and
push
jecxz
push
fsubs
stc
faddl
rolb
push
les
icebp
lock
inc
orb
push
pushf
rolb
jno
hlt
jecxz
jo
jo
iret
add
mov
in
outsb
dec
add
mov
and
sbb
xor
adc
add
xlat
stos
mov
xorl
and
sub
sahf
mov
pop
sub
insl
cwtl
ljmp
xor
or
ja
ss
loopne
outsl
das
bound
int3
or
dec
push
sbb
nop
test
sbb
cwtl
xor
mov
lods
mov
add
out
push
movsb
shl
push
add
cmp
sub
fdivs
jo
pusha
js
sbb
sub
aaa
jp
or
andb
adc
sbb
cmpsb
sub
inc
fwait
add
icebp
jmp
and
push
cmp
lahf
pop
pop
xchg
or
adc
fisttpll
and
push
popf
add
in
mov
arpl
leave
mov
fs
rorb
repz
je
cmpsb
dec
jbe
or
jecxz
mov
inc
xchg
xor
and
adc
mov
add
dec
pusha
lahf
outsl
mov
loopne
mov
call
pop
mov
inc
fldcw
fmul
call
jne
inc
test
aas
add
and
scas
in
cmp
and
sbb
daa
das
jno
mov
ss
loopne
mulb
adc
or
bound
lret
ret
xchg
pop
pop
call
sarl
lds
push
lret
adc
mov
in
sbb
xchg
sarb
scas
sbb
dec
test
ljmp
addr16
ret
je
js
sbb
add
adc
rclb
lods
and
icebp
or
mov
sbb
xorb
xor
fmull
push
or
cmpl
inc
les
add
out
mov
jmp
fbstp
ljmp
or
jbe
jge
loope
shll
push
insb
pop
hlt
loop
rol
xor
aam
and
add
mov
jbe
add
add
je
in
out
ret
call
js
fadds
xchg
push
addr16
or
je
push
rorb
push
imul
int3
dec
ja
add
pop
movsl
mov
ror
jge
lret
mov
out
rcll
push
inc
mov
movsl
std
push
cs
nop
pusha
xchg
push
inc
sahf
js
add
jno
xor
hlt
sub
sub
inc
mov
std
xor
xor
cmp
pop
inc
imul
push
stos
mov
cmp
jp
std
mov
mov
cli
imul
jmp
pusha
xchg
add
cmpsb
arpl
add
in
fistl
lret
or
sbb
or
xchg
jp
cmp
fiaddl
jbe
xor
adc
xor
or
adc
xor
adc
test
add
fnstsw
and
js
or
dec
or
or
sbb
dec
movl
adc
pop
add
movsl
imul
loope
outsb
sub
inc
xor
add
xorl
in
add
pushf
aad
hlt
outsb
fcoms
add
mov
mov
mov
lds
push
add
xor
arpl
cwtl
cmp
pop
fsubr
sub
and
pop
dec
xor
jbe
cmp
sti
xor
loopne
sub
dec
lods
add
push
dec
sar
xlat
out
xchg
loopne
cmp
add
orl
inc
fbstp
dec
in
les
mov
mov
mov
add
lret
add
push
or
cmp
sbb
xor
adc
pusha
fiadds
adc
cmpb
sub
sub
add
or
jns
scas
leave
call
xchg
inc
or
mov
or
out
push
test
nop
sbbl
inc
cli
shll
sbb
dec
shll
adc
inc
inc
lods
stc
add
pusha
push
jo
push
add
mov
mov
jo
fisttpll
jns
loope
cmp
pop
insl
je
cmp
test
or
fs
jmp
add
test
sub
jb
xor
pushf
adc
hlt
shlb
cs
clc
mov
sbb
pop
pop
dec
mov
push
in
adc
mov
lods
or
or
push
roll
fs
sbb
andl
pop
cmpl
movsb
rcrl
and
add
push
mov
inc
or
stos
jge
add
and
lret
push
jmp
sbb
xor
add
test
pusha
mov
sbb
lahf
mov
into
and
xor
jb
psrld
and
and
call
aas
inc
pop
xor
add
adcl
call
out
xor
stc
std
pop
pop
test
add
xchg
fsubs
movsl
stos
pusha
or
and
out
adc
add
sbb
dec
repnz
add
clc
fildl
mov
das
add
pminsw
insb
jl
shrl
add
fbld
in
shl
jle
and
and
inc
stos
cmp
in
xor
inc
dec
add
or
pop
jge
andb
jl
jb
and
xchg
pusha
pop
inc
into
add
inc
mov
rcll
mov
lret
lea
xor
sub
xchg
dec
test
mov
push
out
add
mov
cwtl
push
mov
pop
fisttps
add
jae
adc
add
outsb
push
and
push
mov
xchg
mov
lock
mov
fisttpl
lahf
enter
jge
sbb
mov
pop
xchg
sub
cmpsl
cmp
cmp
loopne
jecxz
mov
mov
mov
out
pop
sti
or
sub
imul
or
inc
das
adc
loope
mov
pop
push
imul
testl
jge
ja
xor
gs
clc
xlat
cmp
add
add
ljmp
add
cmovle
pop
add
lds
lods
imul
cmp
add
mov
dec
mov
cmpsb
fsubrs
nop
jge
cmp
sub
cmpb
es
sahf
scas
sub
call
mov
dec
or
adc
ss
lods
xor
out
lods
sbb
mov
pusha
imul
xchg
add
scas
pop
add
or
repnz
and
push
ja
mov
and
loopne
pop
inc
jmp
and
add
sahf
out
outsl
or
mov
lods
push
cltd
imul
xchg
pop
bound
test
pusha
push
ss
pop
ss
iret
scas
fwait
sub
add
inc
test
adc
pushf
inc
in
enter
xor
pop
out
mov
cwtl
jae
cmpxchg
xor
fdivrl
lahf
repnz
insl
sti
ret
add
sbb
pop
mov
mov
aam
pop
add
jge
repz
and
pop
aam
pop
inc
imul
ja
mov
popa
jne
push
sbb
add
mov
inc
mov
push
outsl
loope
insl
add
lcall
add
pop
clc
push
ja
push
call
out
inc
add
mov
jb
push
std
mov
fs
rcrb
fwait
pushl
jl
fwait
jecxz
adc
inc
lea
mov
add
push
lea
test
incb
jl
scas
sahf
and
mov
or
clc
fmuls
loopne
xchg
dec
out
dec
pop
add
sbb
mov
cmp
sahf
outsb
dec
mov
inc
cmp
mov
add
push
pop
jg
cmp
adc
and
sbb
and
pop
enter
push
mov
adc
aam
repz
sti
test
in
cmp
jg
shll
xchg
mov
loopne
call
insb
out
xor
prefetch
inc
cmp
cltd
rcl
jb
enter
xchg
adc
cmp
cmc
cmp
mov
outsl
lret
push
xor
add
negb
xor
aam
jns
cwtl
xor
leave
push
call
popa
sti
lds
and
adcl
adc
fwait
test
and
addb
iret
lahf
loop
shrl
xchg
repnz
push
xchg
jb
adc
inc
mov
loope
mov
push
mov
rorl
insb
adc
lcall
add
xor
fs
mov
and
das
add
mov
mov
lahf
fbstp
mov
enter
add
jp
lahf
sbb
pop
addr16
mov
cmc
jne
or
orl
loop
add
es
jbe
dec
clc
addb
mov
movsb
xorb
add
test
cmpsb
pop
xchg
sbbb
int
jp
and
stc
fcompl
filds
jae
pusha
mov
inc
test
sub
jle
dec
jb
scas
dec
out
add
xchg
inc
sub
test
and
iret
rcrb
aas
fldl
push
add
xchg
cld
and
push
loopne
adc
and
jle
add
and
xchg
inc
dec
leave
loopne
adc
lock
roll
dec
xor
lret
popa
mov
adc
out
clc
mov
or
sbb
leave
sub
test
test
dec
jns
sbb
test
inc
add
in
fistps
add
jl
icebp
adc
add
out
push
out
add
mov
sub
add
mov
hlt
mov
xor
rolb
psubq
movsb
mov
outsb
sbb
shl
push
andb
dec
divl
mov
adc
pop
add
cmpb
aas
sbb
fimull
pop
sbb
pusha
mov
add
cltd
imul
add
jg
xor
jne
add
cwtl
loop
pop
loope
and
cs
addl
and
and
or
add
out
mov
lret
xor
xor
lcall
jae
rcll
loope
add
jp
or
dec
cmp
xchg
fbstp
push
sub
out
jbe
nop
add
sub
pop
pop
or
cmp
ret
xchg
sahf
pop
pop
or
sub
pusha
sub
fiadds
cltd
push
shl
sub
sub
jb
inc
enter
inc
pop
mov
inc
mov
mov
test
je
or
aam
notl
in
add
cld
or
sub
xchg
pusha
adc
add
ret
mov
and
inc
mov
mov
les
mov
push
enter
fcmovnbe
dec
adc
in
or
scas
mov
add
popa
push
enter
adc
cmp
les
rol
pop
push
mov
or
mov
push
sub
fmull
enter
in
cmp
stc
dec
xor
dec
lock
int
mov
mov
ret
mov
cld
leave
pop
rorb
aam
imul
mov
bound
movsb
in
aaa
popa
mov
mov
mov
jmp
jo
enter
push
fwait
mov
bound
daa
arpl
sbb
test
mov
and
stc
mov
dec
xor
mov
or
mov
addb
lods
jno
push
aam
mov
mov
leave
and
test
cmp
cld
rcrb
std
sub
inc
dec
push
lds
je
in
jl
add
fwait
xchg
out
jmp
jns
mov
pop
add
in
mov
add
cmp
sahf
add
push
pushf
out
jge
movsl
add
mov
stos
jbe
jl
add
ret
pusha
and
mov
push
fs
cli
hlt
ds
or
and
fwait
adc
mov
mov
cmpb
xchg
out
lcall
sub
xchg
shlb
xor
inc
pop
pop
out
add
jge
or
popa
push
test
xchg
pushf
fld
jb
jge
or
cltd
xor
mulb
xchg
enter
jmp
cmp
cld
inc
jo
mov
xlat
pushf
lods
add
call
push
and
mov
add
jg
add
repz
ret
lock
fdivl
dec
push
outsl
mov
cmp
or
and
xchg
loopne
adc
jecxz
loope
dec
push
jp
adc
mov
mov
cmpb
push
push
xor
out
pushf
jl
add
jne
into
addl
inc
je
xchg
test
adc
jo
adcb
xchg
and
insb
jg
mov
add
cli
mov
push
pop
adcl
mov
imul
fiadds
xlat
test
mov
sahf
adc
pop
fs
mulb
mov
add
adcl
aam
push
stc
and
or
xchg
mov
lods
and
imul
clc
outsl
mov
bound
add
push
or
add
lods
add
scas
add
xor
push
mov
test
mov
ss
popa
fsub
jns
mov
add
or
cmpsl
xor
and
into
repnz
mov
xchg
out
add
loop
test
dec
cmpsb
pop
enter
test
icebp
ror
push
cwtl
adc
hlt
inc
shlb
push
sbb
rcr
xchg
push
jb
dec
and
and
xchg
out
test
or
test
xchg
sub
adc
fsubl
mov
imul
xor
rorb
mov
adc
add
jl
add
adc
dec
cmp
mov
dec
shrb
sub
test
sbb
faddl
sub
jle
mov
lods
ficoml
push
nop
sti
cmp
test
imul
mov
lock
add
into
inc
mov
inc
add
mov
or
jo
aaa
push
cmpsl
inc
jnp
add
pop
mov
je
pop
cmp
pop
aad
sub
adc
add
movsb
enter
mov
lret
jb
or
sbb
in
mov
xor
hlt
xor
test
add
sbb
add
in
out
shll
pop
pusha
cmp
mov
add
into
dec
add
aad
mov
shr
pop
out
and
fistpl
add
xor
and
mov
sub
nop
adcl
sub
outsl
mov
pop
insl
sub
jbe
lret
add
pop
pop
adc
mov
cmpsb
jns
pop
inc
es
mov
std
jno
call
les
adc
mov
dec
dec
and
mov
pop
lcall
icebp
add
loopne
jae
pop
addb
add
or
filds
mov
dec
mov
dec
cmp
enter
push
inc
sub
je
fbstp
push
add
and
daa
xchg
mov
cli
mov
xchg
je
xor
xchg
jnp
xchg
add
inc
in
lret
mov
jns
out
cmp
subb
xchg
cmc
cwtl
inc
rcll
push
sbb
mov
in
inc
dec
or
ret
inc
push
aad
mov
sub
jl
add
mov
push
push
es
mov
aas
adc
lea
sti
nop
rorb
shll
adc
push
test
sbb
js
mov
sub
or
pushf
cmpsb
fsubrl
adc
test
das
loopne
mov
ret
xor
cmp
nop
bound
dec
add
sub
hlt
shrb
mov
sti
adc
sub
add
jnp
add
jl
dec
das
insb
and
add
std
inc
leave
mov
push
xor
jl
pop
fdivrl
les
lods
int3
in
add
in
jl
daa
mov
mov
or
sub
jo
fidivrl
cmp
mov
inc
les
pop
add
adc
nop
mov
inc
mov
mov
js
lods
sub
xchg
mov
lock
push
in
hlt
jne
mov
es
aad
adc
mov
into
in
inc
les
push
data16
in
and
add
jge
mov
xchg
cld
inc
stos
les
adc
int3
lods
scas
cs
aam
repnz
andb
imul
movsb
inc
hlt
pop
stc
insl
jg
ljmp
movsb
roll
insl
cltd
xor
hlt
lcall
sub
jle
sbb
jae
into
test
imul
cmp
addb
sbb
pusha
add
pop
test
cmpsl
and
imull
int3
and
iret
push
loopne
mov
xor
imulb
add
mov
pop
and
xchg
jecxz
jl
adc
mov
int3
subl
fimull
add
in
and
mov
in
add
mov
cmp
and
aas
rorl
fisttps
xchg
sbb
jge
add
cmp
xor
jp
mov
aaa
sbb
xchg
mov
das
aam
cmp
add
daa
pop
dec
xchg
addb
fcoml
in
nop
call
sbb
popa
push
rclb
xorb
iret
push
aas
lods
mov
jae
sub
mov
in
orl
sbb
xchg
out
jnp
loopne
jmp
jo
dec
push
call
add
popf
sub
cmp
xor
ret
add
inc
filds
fsubrl
jo
and
gs
mov
imul
or
dec
mov
stc
mov
add
loopne
fs
add
lret
jg
pop
sub
mov
jl
pop
in
rorl
xchg
mov
cwtl
pop
mov
nop
push
es
adc
cwtl
cmpsl
clc
inc
fwait
enter
jo
adc
mull
setae
pop
dec
inc
and
mov
xchg
and
hlt
fldcw
sbb
mov
sub
push
add
jbe
subb
push
movsl
mov
or
hlt
xchg
cmp
mov
sub
or
out
lods
int3
inc
push
pop
or
push
fadds
shrl
or
movsb
std
mov
or
orb
xchg
sub
sub
jle
add
rcrb
and
pop
ss
adc
sub
call
mov
cmp
mov
mov
mov
lds
mov
add
jo
sbb
insb
push
cmpsb
mov
insl
inc
imul
sub
in
add
mov
movsb
xchg
repnz
shrl
and
cmp
pop
push
sbb
loop
mov
mov
xchg
push
or
fsubrs
cmp
popa
not
and
repnz
mov
xor
add
cmp
hlt
daa
scas
cltd
enter
nop
lret
xchg
inc
xchg
mul
jmp
subb
mov
ds
and
sub
inc
pushf
xchg
roll
cltd
movsbl
pop
xor
xchg
loopne,pn
sub
or
sti
sub
and
push
xor
cltd
hlt
popf
mov
popa
inc
lock
adc
inc
jnp
sub
aad
out
pop
inc
das
lock
dec
push
mov
sub
aam
add
sub
jns
dec
dec
sub
andb
js
sbbb
adc
mov
mov
mov
jns
in
cmp
nop
add
push
repnz
out
push
jecxz
cmp
sbb
cmp
pop
pop
lock
inc
nop
pop
mov
mov
out
and
or
pop
adc
and
push
push
test
jae
or
fmull
insl
inc
mov
pop
or
sub
test
out
pop
les
dec
push
push
out
add
pop
pusha
and
mov
cs
sbb
sub
rcr
adc
or
mov
loope
xorl
add
and
repz
loopne
xchg
jg
adc
sub
lods
sub
push
mov
or
adc
gs
outsb
dec
in
aas
nop
push
inc
push
and
adc
stc
movsb
cmp
fldt
cmp
mov
out
dec
mov
shlb
add
add
jns
cmp
orl
mov
test
inc
mov
and
aam
rol
fcoml
lods
adcb
test
mov
push
shrl
enter
mov
cmc
call
pop
mov
aad
in
rclb
bound
shll
lret
adc
cmp
ss
fwait
push
xor
add
std
ja
sbb
shrb
cltd
mov
lea
inc
pop
inc
sbb
mov
loope
sbb
test
inc
test
mov
cwtl
sub
add
mov
cmpsl
adc
in
xchg
div
mov
or
sbb
inc
test
xchg
popa
imull
shlb
push
or
adc
dec
pop
inc
xchg
into
shlb
movl
mov
dec
add
adc
int
mov
loopne
sti
sarb
lods
add
hlt
and
push
sbb
jg
andb
movsb
dec
lods
call
pop
xchg
xor
sub
or
les
popa
xchg
out
outsb
and
arpl
adc
and
test
mov
push
sbb
mov
les
xor
sbb
pop
out
ljmp
add
push
mov
test
call
fptan
loopne
lea
add
int
cwtl
pop
repnz
or
lods
mov
rorl
lock
or
xor
icebp
nop
add
push
fst
or
lds
xor
mov
aas
enter
push
imul
pop
movsl
daa
cwtl
hlt
fs
mov
loopne
mov
add
out
test
sbb
test
xchg
lock
fisubs
cmc
insl
or
mov
dec
test
std
add
negl
decb
in
lret
movsb
fistpl
adc
rclb
and
push
add
add
hlt
sbbb
fistps
les
icebp
mov
pop
push
fmul
cld
enter
xchg
imul
add
nop
outsl
ja
pop
fistpl
aaa
repnz
popa
sub
fsubr
shrl
testb
icebp
ret
enter
test
pop
jnp
add
outsb
arpl
add
xchg
cli
cmp
xor
pop
mov
lods
cmp
pop
sub
mov
xchg
mov
mov
add
mov
mov
dec
stos
sub
addl
mov
lahf
loopne
fcomps
aaa
into
pop
mov
in
fsubs
test
push
sbb
mov
mov
fldt
js
inc
cmp
add
and
in
pop
hlt
je
add
mov
cmpsl
mov
inc
pmuludq
xchg
add
push
div
push
lods
add
dec
aaa
or
xor
adc
pop
scas
and
sarl
inc
xchg
pop
adc
mov
sub
cmp
roll
icebp
cmp
ds
dec
lods
and
dec
aas
scas
out
clc
add
adc
vmwrite
lahf
enter
sub
popf
sbb
inc
scas
int3
loopne
cmp
mov
mov
push
stos
sub
arpl
jno
sbb
cld
dec
imul
xchg
enter
scas
js
cmp
int
sbb
movsb
addb
in
jg
push
mov
data16
repnz
add
or
ljmp
mov
sub
mov
jmp
xchg
in
adc
push
inc
cld
adc
mov
loope
mov
add
sbb
lds
add
fdivl
inc
cwtl
mov
add
pop
aaa
dec
jnp
or
lds
sub
mov
add
std
js
andl
pop
dec
loopne
jp
sub
add
mov
push
scas
cmp
add
pop
loopne
leave
mov
or
or
imull
push
shlb
jmp
sahf
and
aam
inc
ja
push
mov
add
jae
sbb
lret
xchg
nop
pushf
stc
add
mov
sbb
lahf
sub
mov
mov
mov
fnsave
add
jbe
in
js
nop
and
int3
push
inc
xor
lcall
add
pop
aam
add
dec
insl
shll
xor
hlt
test
imul
sbb
lret
jno
mov
sub
push
sub
out
inc
adc
add
ret
filds
push
xorb
stos
adc
xchg
jnp
cmp
mov
loopne
xchg
cwtl
and
call
cs
divl
roll
dec
js
test
mov
andl
sbb
mov
push
sbb
ret
pop
add
jg
outsb
inc
imul
inc
pushf
push
ret
jle
mov
mov
push
movsb
mov
repnz
push
jecxz
inc
js
and
pop
add
cmp
shll
cmp
inc
cmp
mov
mov
xchg
and
movsb
cmp
add
popa
add
les
pop
jmp
ret
int
addr16
mov
jg
iret
pop
sub
dec
sub
push
and
aam
repz
pop
shlb
call
fsubr
ljmp
adc
xchg
inc
or
sbb
mov
or
xchg
leave
add
mov
sub
fadd
mov
push
add
test
pop
arpl
andb
sbb
cmp
cmp
out
mov
lock
cmp
inc
sbb
add
add
cwtl
jns
mov
sub
fwait
insb
sbb
cmp
shlb
jge
andb
pop
pop
mov
jg
jo
sbb
arpl
add
ljmp
jl
ret
xchg
stos
mov
movsl
pop
mov
mov
push
inc
lret
out
or
or
cmp
sub
je
adc
lods
add
aas
in
add
push
jb
jle
xchg
xchg
dec
cmpsl
adc
or
mov
pop
mov
xlat
xor
clc
arpl
dec
inc
jecxz
xchg
add
nop
dec
or
into
inc
daa
hlt
aas
add
mov
mov
inc
inc
sub
testb
dec
and
aaa
and
fcmovne
adc
inc
mov
adc
mov
test
push
inc
and
push
repz
fs
sub
sqrtps
add
scas
pop
in
push
and
add
ljmp
pusha
jne
cmp
out
ret
lret
adc
or
mov
push
dec
repnz
sub
enter
loopne
add
sar
mov
fisttpll
add
add
mov
stc
xchg
icebp
inc
sbb
ss
sub
jbe
fadd
mov
aaa
test
xor
imul
out
xchg
es
jbe
add
pop
fs
fnstsw
and
cmpsb
insb
lret
push
pop
aas
inc
popl
xchg
scas
mov
pop
rorb
or
addl
mov
fisttpl
dec
bnd
cmp
aas
pop
imul
adc
add
sub
js
sub
cmpsl
add
adc
add
push
sbb
jp
sub
stos
and
fcoml
movsb
push
jne
ljmp
daa
sub
lret
icebp
jo
verr
cmp
mov
stos
xchg
fidivrs
sahf
or
lock
out
sbb
mov
and
dec
test
scas
retw
lods
add
add
dec
in
iret
mov
mov
lcall
add
test
cmc
add
rolb
push
add
out
add
xlat
fdivs
pop
add
in
dec
test
mov
jp
aam
xor
sbb
push
icebp
adc
enter
mov
fildll
mov
inc
shl
inc
pop
cli
push
add
xchg
jl
imul
xchg
out
jns
mov
int3
cli
es
add
push
cwtl
mov
ss
push
xlat
add
stc
addr16
loopne
add
mov
clc
aaa
jo
add
je
loopne
adc
mov
pop
push
cli
orb
stos
or
add
imul
shrl
ficomps
nop
push
es
icebp
dec
mov
daa
inc
mov
add
or
sub
in
jle
adc
add
faddp
leave
add
imul
rolb
hlt
bndstx
pop
fcoms
mov
xchg
push
jmp
aam
dec
push
movsb
mov
adc
loopne
mov
out
leave
ret
add
push
xchg
gs
push
adc
mov
imul
cmp
cs
inc
or
pop
sbb
subb
lret
xorl
add
in
add
scas
leave
fmull
and
and
cmp
sub
xorl
add
pop
push
mov
lods
xchg
sbb
pop
push
inc
jl
or
int3
test
sbb
sbb
inc
push
sbb
shll
cli
scas
add
mov
fbstp
lahf
leave
call
test
in
shrl
repz
sahf
sbbl
push
push
fdiv
push
das
add
sub
aad
jp
sbb
add
dec
jmp
repnz
mov
es
call
js
pusha
cmp
dec
add
or
add
xor
sub
loope
pop
and
dec
pop
push
jp
popf
pop
add
inc
dec
add
cwtl
cld
imul
or
ret
push
push
das
scas
add
rcrl
pop
enter
add
pop
outsb
std
xor
cmp
nop/reserved
mov
xlat
lods
subl
jge
pop
loop
imul
insb
lods
call
mov
push
ret
mov
or
sbb
xchg
out
push
push
jecxz
pop
and
notl
cmpsb
sbb
rcr
xchg
dec
insl
test
cmp
rcpps
ficoms
pop
dec
es
js
mov
jp
push
adc
in
inc
or
sti
rcr
pop
std
in
inc
out
mull
dec
dec
cltd
adc
leave
add
les
loope
pop
mov
and
jb
faddl
lahf
and
push
fidivrl
pop
fnsave
pushf
mov
aam
xor
aas
sub
arpl
mov
rsm
notl
subl
pop
fs
add
mov
repnz
add
push
jb
jecxz
jae
je
mov
lahf
dec
jmp
mov
xchg
inc
rcrl
inc
sbbb
add
mov
mov
xchg
add
gs
push
lret
inc
adcl
add
movsl
mov
push
cmp
mov
pusha
cld
pop
and
jo
add
sub
add
cmp
repnz
dec
cwtl
dec
adc
subl
cmp
and
mov
icebp
add
pop
ljmp
bound
imul
pusha
add
test
jg
push
scas
mov
add
mov
and
sub
movsb
in
loop
outsl
xchg
imul
aaa
js,pt
add
shrl
setnp
daa
jno
inc
loopne
mov
rorb
iret
push
lcall
scas
insb
or
add
mov
add
lods
ljmp
jp
fists
call
lods
sub
add
mov
jecxz
sbb
int
faddl
adc
pushl
pop
aam
dec
push
jl
int3
out
repz
pop
inc
add
dec
jnp
std
lahf
add
mov
loope
fsubl
inc
pop
jmp
mov
cwtl
inc
outsl
inc
hlt
popf
data16
fcmovne
add
loopne
add
rol
test
dec
andb
add
cli
cwtl
loopne
inc
popa
in
lret
das
mov
jnp
dec
add
xor
dec
dec
mov
je
pop
add
ljmp
sahf
insl
mov
add
sbb
test
in
jmp
js
int3
add
cltd
add
mov
jns
lds
add
addr16
call
dec
xchg
mov
xor
pop
repz
pop
sahf
jne
je
mov
add
push
cmp
jge
stc
in
adc
lock
mov
pusha
add
push
sbbb
incl
adc
into
push
sbb
sbb
push
add
clc
gs
shlb
jns
lods
pop
xlat
dec
cmpsb
mov
pushf
push
inc
stos
sub
jle
bound
pop
xor
adc
sbb
pop
dec
jo
addb
cld
sti
and
lock
mov
sbb
sbb
mov
test
add
push
jnp,pn
jae
add
ss
jmp
jg
inc
test
ja
and
xlat
mov
inc
or
mov
es
dec
mull
xor
cmp
shlb
cmp
fs
int
xchg
add
repnz
stc
mov
xchg
pop
mov
mov
mov
add
mov
cs
jecxz
jmp
fdivr
aas
adc
leave
pusha
icebp
lcall
add
ljmp
add
cmp
aaa
scas
xchg
arpl
lds
and
add
leave
fisubs
popf
jo
mov
loop
jmp
clc
add
iret
push
lret
rorb
roll
rolb
lds
icebp
subb
pushl
cwtl
mov
pop
shlb
xchg
fs
add
sub
cmp
pop
mov
add
inc
and
cs
cmc
ja
mov
xchg
push
repnz
sub
dec
in
sub
jnp
mov
outsb
scas
loope
lret
xchg
mov
inc
pop
jecxz
aad
cwtl
inc
andb
movsl
jl
jl
add
fnstenv
jne
icebp
orl
out
mov
push
lahf
push
cmpsl
loop
addl
cltd
inc
inc
call
and
repnz
mov
sbb
icebp
loope
cltd
add
xor
loopne
test
aad
adc
inc
xchg
xchg
push
ret
arpl
push
call
shll
faddl
sbb
mov
or
aam
sbbl
int3
add
adc
fmuls
repz
aam
cltd
add
mov
inc
cmp
cs
out
hlt
incl
mov
xchg
sbb
sbb
add
lods
cmp
ret
movsl
lea
lock
adc
cmpsb
test
loopne
int
sbb
addl
jae
movsb
jg
hlt
mov
dec
lret
lahf
jge
das
jno
mov
mov
pop
mov
stc
add
xor
push
aam
ret
jnp
popf
xchg
add
dec
shl
sbb
add
cmp
sbb
xorb
ljmp
mov
push
mov
lods
hlt
iret
in
add
sub
jo
mov
loopne
mov
push
inc
jo
out
push
xchg
sarl
into
fs
std
xor
cs
mov
add
in
shll
xor
movsb
lds
lea
add
cmc
dec
jno
add
push
inc
mov
mov
sbb
add
jg
leave
loopne
cld
aaa
addb
fucom
int3
call
xor
repnz
push
add
mov
xor
add
data16
sbb
cmp
insb
xchg
mov
rcr
cmp
xchg
pop
fildl
inc
lock
mov
inc
andl
filds
int
fimull
sbb
add
xchg
aad
inc
inc
imul
jl
add
mov
and
je
inc
insl
imul
lds
pop
jnp
inc
or
cmp
inc
out
add
jp
fadds
jbe
mov
subb
xchg
and
add
inc
dec
shll
loopne
test
mov
inc
dec
out
xchg
add
je
mov
add
int3
testl
mov
faddl
xor
ds
loope
aam
dec
add
cmp
push
push
cmpb
sbb
inc
jns
and
push
or
sub
cmpsl
mov
mov
xor
jmp
in
pop
stos
lret
sbb
jns
popl
adc
push
push
sub
pusha
mov
push
xor
imul
pusha
dec
shrl
jo
pop
pop
push
add
pop
add
in
aad
inc
into
push
add
clc
jb
or
fsubl
clc
mov
add
or
sbb
add
gs
sahf
add
dec
test
dec
movsb
jnp
and
lret
sbb
cmp
or
dec
int3
mov
sub
ret
dec
cmp
out
push
lods
fmull
push
inc
cmp
addb
dec
fiadds
insb
add
sahf
mov
sar
mov
je
pusha
jne
inc
jecxz
ret
js
adc
repnz
addb
sbbl
and
cli
add
out
ds
jp
mov
push
push
and
lahf
stos
repz
in
call
test
jb
cli
add
inc
insb
cmpsb
int3
pop
add
sub
es
xchg
mov
add
enter
mov
stos
xchg
adcb
mov
pushf
jnp
cs
inc
rolb
pop
push
xor
testl
dec
jge
rclb
and
ljmp
dec
inc
loop
add
iret
push
adc
cs
and
stos
andb
mov
add
adc
test
rcr
aam
int
pop
ljmp
push
insb
repnz
shl
repz
or
addr16
sti
dec
cmp
xchg
stos
cld
ret
in
mov
sbb
adc
cmp
mov
jno
push
cmp
pop
in
inc
mov
or
push
outsl
int
jnp
sub
inc
and
mov
xor
adc
and
fs
test
shrb
insb
add
inc
imul
inc
mov
inc
popa
xor
int3
sahf
mov
lods
dec
xchg
add
fcom
test
icebp
and
sbb
scas
leave
add
loope,pn
inc
and
je
xor
mov
fsubrl
add
xor
mov
inc
push
add
hlt
xlat
or
mov
cmp
movl
test
aas
pop
cmp
jb
inc
aad
add
sub
push
jmp
clc
je
add
filds
mov
adc
xor
add
cmp
cli
xor
add
jno
push
mov
dec
scas
repnz
add
xlat
mov
jnp
lret
add
call
test
add
pop
dec
or
push
sbb
push
fistl
pusha
inc
pop
jno
xchg
hlt
popf
call
add
jp
call
popf
add
mov
add
jb
divb
add
loop
and
mov
scas
std
mov
mov
fdivrl
pop
jno
divb
ficompl
mov
xor
add
push
add
fiadds
scas
push
fildll
add
adc
pop
ds
femms
movsl
cmp
inc
orb
dec
je
and
jg
mov
add
sbb
jp
dec
and
add
adc
push
sub
leave
add
addb
sbb
rclb
pop
fsubs
jecxz
add
lods
xchg
call
xor
insl
xor
cmp
icebp
sar
mull
mov
sbb
rclb
add
xchg
sbb
sbb
in
add
inc
ds
test
add
call
aad
add
bound
pop
cmp
fsubs
sub
loopne
add
ffreep
dec
movsl
in
dec
inc
add
jo
sarb
cwtl
dec
dec
or
call
arpl
mov
loop
add
xor
cwtl
sti
aas
inc
psadbw
je
add
daa
cmp
pop
int
dec
mov
push
cld
mov
sbb
or
shrb
and
and
push
push
adc
aam
mov
scas
ss
xchg
adc
mov
in
fiaddl
cmp
cmpsb
adc
jb
sub
or
pop
incl
adc
sbb
mov
movsl
test
sub
add
std
mov
xchg
dec
bswap
add
stos
xchg
jle
movsb
add
sub
pop
movsl
test
cmp
les
add
imul
hlt
loop
add
aad
dec
add
push
or
dec
andb
les
or
add
inc
adc
frstor
out
popf
or
mov
stos
mov
in
add
push
inc
xchg
cmp
cmp
or
jle
fldl
jmp
mov
sub
incl
cmp
mov
pop
sub
sub
add
inc
aam
and
push
sbb
dec
and
mov
xor
ds
test
dec
stos
add
scas
dec
xchg
repnz
jge
xor
jle
mov
jecxz
cmpb
push
sti
cmpsb
sbb
sub
rolb
mov
fmuls
dec
loopne
inc
add
nop
inc
xor
xor
or
add
int3
in
and
push
repnz
daa
divps
jb
cmpsb
andb
cmp
sarb
sbb
into
sete
pushf
mov
jg
js
adc
or
lret
xchg
into
mov
mov
in
sub
pop
call
movups
dec
iret
std
addr16
addl
mov
stos
jae
movsb
shrb
jge
sbb
xchg
pop
dec
les
add
fistpl
add
sub
cmp
imul
add
pshufw
add
clc
fsts
mov
add
jae
add
sbb
add
int3
je
cmp
ret
push
adc
out
add
xchg
subb
mov
pop
push
pop
fldcw
sti
ret
adcb
add
stc
jae
sbb
mov
shl
and
daa
pop
and
push
test
add
stos
fdivs
dec
dec
pop
scas
addl
test
icebp
inc
lret
or
movsl
mov
int
outsl
movl
mov
cmpsl
shlb
subb
jmp
add
cs
pusha
xchg
add
sbb
ljmp
xchg
imul
jecxz
mov
fldl
push
fadds
loop
jo
mov
adc
or
shlb
lods
xchg
sbb
jb
shl
lret
cmp
xacquire
nop
jg
lcall
adc
jecxz
sarb
xlat
sarb
xorl
jle
shl
lock
mov
int3
add
stc
scas
add
icebp
push
out
or
or
pop
imul
imul
not
add
push
hlt
lea
mov
pop
inc
mov
dec
mov
imul
pop
add
rorl
fnstsw
icebp
js
lea
je
mov
xor
fadds
ss
mov
int3
xor
push
lcall
push
dec
lods
and
xchg
jo
mov
jb
push
jae
add
in
js
mov
lea
or
jo
inc
sbb
les
incl
lcall
mov
add
imul
popf
bound
push
sbb
movlps
dec
lea
mov
repnz
popf
inc
daa
jp
push
test
lock
or
shll
add
add
mov
in
nop
int
cmp
out
jle
cmp
and
adc
cmp
gs
add
adc
adc
hlt
mov
and
or
shrb
hlt
inc
nop
addl
add
scas
xor
enter
add
stc
inc
push
jns
mov
add
push
enter
adc
inc
mov
or
dec
mov
lods
jp
xor
es
lea
cmpl
add
or
adc
cld
jb
fwait
mov
and
xor
push
jne
iret
les
mov
add
pop
jg
mov
add
js
add
mov
sub
mov
rolb
jnp
and
pop
int
sub
adc
xor
or
test
rcrl
adc
push
int
sbb
mov
mov
outsb
add
call
xor
add
pop
or
les
push
enter
ficompl
xor
cmp
or
cmp
call
aad
jg
mov
mov
testb
dec
in
cmp
dec
jo
add
ja
pop
nop
lock
xchg
lods
mov
adcl
rol
jnp
nop
setne
pushf
pop
sbb
jae
add
int
in
cmp
push
or
inc
roll
bound
addr16
daa
push
push
pusha
in
repnz
test
push
add
aam
lods
mov
push
push
and
fdivs
xor
push
daa
into
fxch
jl
or
mov
add
and
cmc
push
adc
mov
jl
jmp
adc
stc
in
shrl
xchg
cs
jns
inc
roll
dec
cli
mov
ja
test
mov
fdivr
pop
add
pop
dec
roll
xchg
aas
mov
cwtl
jbe
add
mov
cmp
stos
rol
test
pop
loopne
add
push
mov
repz
imul
mov
lcall
lock
push
lds
shrb
incl
rorl
inc
and
add
push
test
stc
jnp
in
lds
js
cmp
cld
loope
das
mov
hlt
cltd
mov
inc
lods
cmp
iret
mov
add
pop
gs
add
add
push
push
or
sbb
mov
fwait
rclb
cwtl
pop
dec
lock
fldl
sub
inc
jnp
adc
xor
jle
js
pusha
out
add
lods
and
int
pop
and
add
aad
sbb
xchg
mov
cltd
and
add
jp
insb
lret
pop
call
sbb
jb
sahf
mov
add
push
sbb
dec
cli
xor
add
imul
mov
sub
add
lret
out
adc
lock
out
mov
lods
sub
fstpl
clc
sbb
xchg
fisubrl
push
xor
cwtl
es
cld
filds
xchg
call
push
adc
inc
mov
bound
lret
sbb
pop
call
test
je
aam
cli
lret
add
fdivl
push
fbstp
mov
mov
add
adc
jnp
and
xchg
sbb
js
pushf
push
mov
jo
fwait
jns
or
test
clc
and
das
pop
das
popf
mov
test
insb
pusha
inc
sbb
pop
les
mov
incb
inc
mov
push
mov
adc
push
addl
and
xchg
bound
rcrb
cmpsb
mov
mov
test
repz
xor
ds
adc
pusha
push
mov
xor
sub
test
mov
out
push
stc
test
push
bound
in
add
clc
xchg
dec
mov
jmp
lcall
inc
pop
sub
repz
jno
jg
call
xchg
add
and
mov
add
xchg
mov
call
daa
adc
dec
mov
add
into
cmp
add
and
sub
mov
ds
dec
movsb
dec
sub
lock
push
sub
xchg
es
in
adc
inc
add
mov
mov
loop
and
add
vmovddup
xchg
sub
repz
aas
mov
and
aam
mov
dec
push
std
mov
rcrb
xchg
mov
repz
inc
les
dec
int
stc
je
jnp
pop
rclb
sbb
gs
pop
clc
xchg
sti
add
mov
ljmp
cmp
arpl
nop
mov
adc
cmp
mov
xor
popa
and
pushf
enter
add
add
cmp
cmc
cltd
xchg
pop
add
dec
add
shlb
xchg
subl
dec
dec
pop
sarb
imulb
minps
add
adc
lds
sub
arpl
push
sbb
cld
out
sbb
jmp
cmp
jae
mov
mov
adc
xchg
cld
repnz
and
xor
enter
jns
sbb
jg
push
fistpll
sti
add
mov
mov
nop
add
cmp
and
or
cmpsb
add
ret
aaa
jb
and
pop
bound
out
test
sub
jge
pop
stos
mov
scas
add
add
dec
adc
je
add
repz
mov
cmpb
inc
ss
push
gs
jae
push
or
in
sbb
pop
inc
and
lahf
insl
push
add
pop
sub
call
cli
js
sbb
jl
sub
sbb
jmp
imul
push
loope
pop
sahf
int
cmpb
cmp
add
xor
lea
xchg
sub
fwait
sub
and
cmp
incl
out
mov
add
pop
ds
jno
adc
test
add
es
add
mov
fnstcw
adc
btcl
mov
xchg
add
inc
enter
inc
sti
in
mov
push
pop
gs
add
inc
add
jae
mov
mov
mov
dec
out
leave
and
pop
and
add
out
pop
add
lcall
repnz
fs
fcmovbe
pop
jno
pop
les
inc
xor
mov
add
adc
mov
int
into
inc
adc
daa
lret
pop
dec
dec
mov
cmpsl
xor
jo
loopne
push
and
jg
jbe
stos
lret
stc
in
add
mull
mov
insl
jl
push
inc
addb
bndldx
lock
or
sbb
add
popa
or
push
mov
push
adc
push
pop
add
dec
jl
dec
aaa
in
push
subb
sub
addb
add
xchg
imul
add
pop
imul
dec
add
fwait
add
lods
inc
mov
inc
inc
ret
int
add
ret
or
cld
mov
aam
movsb
add
mov
fmuls
sbb
xchg
xor
add
push
stc
loopne
pushf
testl
dec
mov
rcrl
sub
pop
add
adc
out
adc
aaa
out
lods
mov
in
aas
push
sbb
pop
xchg
adc
roll
popf
icebp
pop
sub
dec
add
fs
addr16
inc
cmp
xchg
subb
or
add
add
jne
pop
fldcw
dec
mov
mov
adc
leave
mov
xchg
or
sub
add
andl
jp
jne
sub
add
mov
jnp
add
punpcklbw
xchg
or
sub
mov
push
roll
lds
xor
fisubs
test
cmp
loop
fs
push
jbe
mov
pusha
mov
mov
pop
subb
loopne
dec
cmovno
notb
push
popa
ds
cmc
dec
repz
jecxz
adc
cld
es
sub
sbbl
pop
inc
cli
sbb
ret
xchg
scas
ja
divb
inc
cltd
xchg
xor
imul
xor
rolb
mov
mov
add
dec
sub
xorb
mov
int
or
in
add
roll
jmp
add
daa
pop
out
xlat
pop
mov
subb
jp
sbb
incl
sbb
lea
mov
pop
insb
mov
and
in
xor
mov
mov
and
movsl
call
push
pop
xlat
pop
dec
and
cmp
sbb
add
lahf
xor
lods
xchg
shr
adc
in
add
mov
or
mov
jns
std
mov
pop
std
out
out
mov
lods
or
dec
pop
mov
fadds
sub
movsl
mov
ret
filds
aad
xchg
lods
sub
fstps
inc
jg
xchg
add
enter
xor
adc
xor
les
cmp
add
stos
mov
jbe
lahf
dec
or
mov
push
cmc
xchg
jns
scas
call
dec
fs
cwtl
lods
push
xor
outsb
lret
push
rcrb
or
gs
shll
mov
insb
adc
add
add
dec
push
pop
fld
mov
mov
xchg
pushf
jo
mov
push
xchg
subb
add
dec
adc
shl
out
and
dec
xchg
or
jmp
cs
cmp
and
add
xchg
xor
scas
mov
mov
xchg
push
cmp
pop
jp
and
fistpll
in
add
jne
jbe
inc
pop
adc
mov
rcrb
es
jb
loope
fwait
pop
sbb
sahf
repnz
mov
add
push
pop
sbb
imul
cmp
pop
add
xchg
xlat
mov
sub
mov
add
push
pop
cmpsl
jae
sahf
clc
add
cld
xchg
shll
sub
orl
cmc
jo
add
mov
add
or
push
mov
insl
cwtl
test
inc
out
push
add
push
fs
gs
inc
add
add
ljmp
mov
nop
pop
sub
in
xchg
mov
add
jnp
cmp
in
add
adc
or
pusha
fmul
popa
or
and
cmpb
fs
add
arpl
add
mov
adc
xorl
and
add
xchg
notb
push
sub
add
cmc
pop
test
and
les
mov
dec
sub
add
jg
ret
add
testl
push
jne
mov
dec
lret
inc
rcrl
sub
mov
pause
sbb
add
jp
test
ficomps
xchg
lea
testl
add
int
ljmp
push
xchg
out
xchg
xor
add
push
out
mov
pop
aam
jle
dec
sbb
in
xchg
push
loope
scas
add
sbb
push
idivb
pop
xlat
fsts
je
int3
sub
lds
inc
loope
xchg
push
dec
pop
rorb
add
lds
xorl
movaps
and
and
adc
sbb
stc
add
add
inc
add
stos
fstps
jmp
xchg
mov
dec
nop
shl
cld
and
js
add
push
imul
add
dec
pop
ret
aas
sub
mov
xor
jmp
mov
fwait
sbb
jno
add
jns
inc
mov
insb
ret
rolb
push
dec
pop
aam
add
mov
add
jnp
ret
sahf
pop
repnz
cli
xor
aad
pop
ja
inc
jae
add
mov
sbb
dec
cmp
add
sbb
popf
popa
adc
lcall
gs
cmp
test
xor
mov
lahf
inc
sbb
jns
bound
leave
dec
out
ljmp
int
xor
jne
loop
jmp
add
insb
loope
mov
adcl
icebp
notl
inc
test
pop
mov
inc
test
daa
adc
mov
pushf
call
jnp
sbb
fsubrp
inc
pop
add
and
in
nop
mov
cli
insl
dec
add
dec
sub
mov
rcrl
clc
cmpsb
mov
pop
dec
jle
stos
mov
adc
or
das
add
and
aam
imul
orb
xor
gs
iret
cwtl
stc
sub
popa
fs
mov
movsl
sbb
cmpsl
jb
dec
lahf
dec
shlb
mov
stc
das
test
add
xchg
pop
and
mov
nop
mov
repnz
add
cmp
bound
divb
add
sub
jne
pop
push
or
cld
rorb
and
subb
movsb
repz
rclb
mov
sub
mov
pop
in
push
hlt
popa
enter
aaa
jecxz
pop
mov
aad
fs
mov
add
std
xchg
cmp
hlt
aad
xchg
or
push
aas
mov
fsub
or
fcomps
push
andl
mov
pop
cs
adc
jg
ljmp
mov
cmp
add
jne
add
inc
and
inc
sbb
mov
ret
mov
inc
mov
mov
aas
sub
push
sub
inc
inc
scas
loop
nop
std
add
fisttps
xlat
les
jo
je
ja
add
mov
add
and
push
lock
cld
add
mov
psubusb
sub
add
ljmp
mov
repz
push
or
aaa
add
lahf
cwtl
cld
add
lods
mov
xchg
mov
mov
lods
cmp
roll
jno
cmp
xlat
lret
or
stc
nop
mov
dec
rcrl
xchg
add
jl
mov
and
xor
jb
je
inc
hlt
add
loopne
outsl
sub
lahf
call
les
mov
imul
loopne,pn
imul
jae
mov
push
sarb
dec
pop
or
adc
mov
rcrb
dec
add
ret
stc
jl
imul
pusha
je
sub
push
add
and
fs
lea
aaa
pop
test
cmp
cmp
add
mov
mov
inc
mov
dec
mov
inc
mov
repz
or
inc
xor
and
nop
add
in
pop
cmc
lods
xor
or
add
jp
and
mov
push
xchg
and
sub
cmp
int3
aaa
test
or
pop
xchg
mov
scas
popf
int3
aam
es
cmpsb
sarl
in
nop
pop
or
sbb
xchg
push
clc
adc
andl
sbb
test
rcll
ja
dec
in
iret
test
xchg
scas
fcomps
sub
lock
pop
daa
test
add
xor
xor
and
cmp
adc
or
push
add
shrb
std
repnz
mov
call
and
and
scas
xor
adcb
or
out
lret
sbb
cmovnp
ljmp
pushl
xchg
sarl
or
pop
repz
sbb
add
xor
vmovaps
add
mov
sarb
add
lcall
enter
popf
lret
xchg
mov
icebp
outsl
mov
add
pop
fsubs
mov
std
imul
les
mov
repz
adc
jns
add
and
loop
xor
or
add
jae
inc
call
ret
push
lods
jle
mov
pop
ja
enter
sub
arpl
jnp
or
movsb
out
hlt
and
adc
add
and
pop
xor
ja
jne
adc
jne
adc
and
insb
add
mov
imul
jp
mov
outsb
xchg
mov
or
test
xor
lods
aaa
daa
adc
and
pop
test
loopne
xchg
repnz
add
xor
into
push
rorb
mov
in
add
test
jg
testb
cmp
shl
data16
iret
and
pusha
jne
and
mov
js
push
in
lret
mov
loopne
cmp
ret
push
sbbb
loope
pop
push
lds
outsl
and
xchg
sub
int3
movsb
xor
and
sarb
lahf
dec
mov
cltd
std
and
mov
or
ret
rclb
leave
popf
and
add
scas
and
movswl
xchg
dec
and
inc
icebp
jne
mov
repz
xor
sbb
xor
xor
les
dec
int
mov
test
push
add
arpl
add
inc
sbb
and
pop
addb
xor
and
pop
js
test
adc
adc
das
mov
movsl
xchg
inc
push
inc
inc
add
lods
iret
mov
repz
test
adc
dec
icebp
sub
lds
sbb
and
lea
aaa
out
cmp
clc
bound
fstpl
pop
sub
insb
xchg
es
rol
mov
xchg
fcomps
push
rol
dec
xor
dec
fadds
call
cmp
xor
push
mov
mov
lret
or
aad
pop
in
andl
rorl
dec
xchg
mov
int3
push
arpl
nop
adc
je
pop
mov
lahf
fsubs
cli
pushf
or
andb
mov
jbe
mov
repz
lods
mov
test
lods
rorb
and
sbb
mov
hlt
xor
add
or
shlb
rcrb
jns
mov
sub
or
adc
sub
pop
dec
les
inc
sbb
in
add
cmp
mov
mov
inc
pop
xor
jle
int
cld
xlat
pop
dec
cmp
cmp
inc
lcall
pusha
fisttpl
movsl
or
in
xor
add
ret
jb
inc
add
dec
repnz
mov
jmp
icebp
push
sahf
mov
test
test
clc
dec
lcall
cmp
jae
cmp
pusha
fs
adc
adc
cmp
xchg
int
mov
jae
jbe
mov
outsb
push
outsl
es
jle
pop
push
cwtl
pop
pop
mov
nop
das
mov
adc
cmp
pop
add
or
add
xchg
popf
adc
sbb
jo
xor
mov
popa
popf
inc
retw
hlt
mull
and
jnp
dec
and
xor
adc
jo
les
jae
sub
enter
loop
jns
mov
lret
add
fs
add
mov
aas
ret
nop
fmuls
cmpl
es
or
or
mov
push
or
jno
int
add
and
mov
or
ffree
jge
lldt
aam
sub
clc
mov
push
jne
and
push
xchg
ja
sub
adc
cwtl
loope
cmp
fcom
mov
out
hlt
inc
add
push
sub
push
add
mov
xchg
js
push
lock
jne
or
pop
out
cmpb
xchg
pushf
pop
stos
xor
mov
xrelease
movsbl
je
mov
add
pop
mov
rcll
sbb
enter
insb
in
pusha
mov
test
adc
cmp
pop
fistpll
dec
push
add
lods
fidivrl
fidivrs
or
sbb
xor
jl
or
aam
xchg
es
ds
push
aaa
add
sti
push
imul
adc
test
int
sbb
cmp
sbb
jl
cmp
inc
jb
inc
cmp
inc
xlat
push
sarb
shlb
fs
hlt
add
adc
sub
cld
out
sub
xchg
mov
push
loopne
stc
xchg
and
jns
into
mov
ret
xchg
addr16
je
mov
jp
pop
hlt
ret
and
inc
dec
testb
test
xchg
inc
clc
mov
pop
imul
xor
sub
push
add
jns
or
and
mov
push
loop
xor
adc
jns
sbb
xchg
mov
dec
mov
and
xor
mov
sbb
pop
cs
bound
add
xchg
sahf
loop
sbb
pop
push
cmp
mov
pop
test
adc
aam
int3
adc
nop
mov
add
and
cmc
icebp
pop
in
jecxz
sbb
jo
sbb
cmp
mov
and
shll
and
lds
addr16
ss
sbb
add
and
fdivs
mov
add
imul
into
dec
inc
xchg
fisttpll
xor
add
jno
dec
mov
jb
std
aas
mov
jns
mov
inc
xchg
mov
int3
rcrl
lods
dec
or
in
add
ja
stos
dec
stos
int3
and
les
into
popa
popf
shlb
loopne
xchg
push
pushf
jg
mov
cmp
dec
cmp
mov
mov
cltd
fists
into
test
and
fs
sub
add
push
jl
rol
lds
push
or
push
pop
xchg
sbb
dec
daa
add
add
leave
rcll
and
xor
dec
gs
cmp
mov
adc
mulb
cs
cli
and
arpl
add
ljmp
dec
repnz
and
lea
and
lret
clc
pop
inc
addb
add
push
jmp
cltd
mov
pop
add
sub
xor
call
inc
xorb
dec
movsb
cltd
bound
icebp
and
clc
movsl
aam
mov
loope
sub
jns
sbb
mov
mov
add
movsb
or
test
add
test
das
and
add
daa
or
pushl
mov
jns
sbb
sbb
xor
jo
imul
xor
dec
and
pop
arpl
nop
sub
sub
or
xlat
xchg
inc
imul
repnz
sti
push
add
and
enter
stc
sbb
outsl
add
and
call
or
mov
xchg
shll
dec
stos
add
xor
sub
je
xchg
add
mov
in
jb
add
adc
imul
sbb
repnz
cmc
int
loopne
inc
out
testl
push
fdivrl
adc
pop
fstl
sbb
and
lret
add
push
push
outsb
jno
xor
xchg
cmp
add
lock
stos
mov
inc
sbb
in
popa
cwtl
cld
aam
cmpsb
add
jg
mov
add
mov
cmp
push
enter
pop
dec
jle
or
lea
and
sub
xor
dec
mov
mov
jae
pop
mov
xlat
imul
cmpsl
fstpl
ret
psrad
loopne
mov
jnp
xchg
inc
inc
scas
add
daa
mov
cmpsl
clc
shlb
add
jg
cmc
jge
jle
sbb
loope
adc
cmp
mov
sahf
movsl
mov
int
add
xor
fsubl
add
jmp
pusha
in
pop
xchg
dec
ret
cs
mov
vandnps
nop
xchg
add
incl
rorb
inc
hlt
add
in
mov
push
js
in
mov
sbb
add
add
addb
mov
insl
mov
add
dec
mov
arpl
mov
aaa
pop
lods
stc
pop
ret
insl
adc
dec
push
push
sbb
idivb
addb
sbb
xchg
cmpsl
xor
adc
mov
sarb
mov
roll
addr16
fiadds
popa
and
sbb
fbstp
sbb
in
std
nop
fimull
add
lea
cmp
cmp
sar
inc
repz
arpl
loopne
je
clc
test
inc
clc
icebp
cpuid
insl
cmp
inc
dec
hlt
xor
sbb
sbb
push
or
mov
jns
scas
iret
imul
xor
add
or
addr16
and
lahf
xor
out
sbb
pusha
push
xor
mov
ja
imul
imul
sbb
xor
push
mov
test
bound
pusha
fdivrs
test
or
mov
push
iret
rcrb
neg
sbbb
sub
pop
adc
jo
in
les
mov
pop
stos
inc
in
and
enter
sbbb
mov
mov
ret
cmp
f2xm1
sti
push
pop
mov
add
xlat
fidivl
or
and
jns
inc
lock
test
inc
or
xchg
sbb
xchg
xor
push
xor
mov
cmpb
clc
or
cmp
xor
not
arpl
sub
pop
mov
into
add
adc
mov
cltd
hlt
rcrl
xchg
pop
xor
dec
cs
push
push
cmp
mov
sub
or
jmp
mov
daa
add
xor
ljmp
jns
cmpsl
test
add
jb
dec
mov
fs
sahf
mov
ret
popf
or
scas
mulb
cmp
xchg
adc
pop
js
repz
iret
and
and
or
cmpl
xor
mulb
dec
ret
jne
cmp
and
mov
or
cmp
and
ja
cmp
pop
imul
or
data16
jns
jo
addr16
pusha
rcr
jns
nop
mov
aam
push
mov
xchg
movsb
and
daa
rclb
xchg
stos
andb
js
cmp
cmp
mov
add
into
sbb
dec
stos
cmpb
add
xchg
pop
xchg
sub
dec
sub
sub
adc
in
movsb
dec
fsubs
cmpsb
add
lret
and
mov
popa
addb
rclb
testb
xchg
clc
jmp
popa
adc
clc
push
push
jl
dec
push
das
xor
mov
aam
pop
xor
sub
inc
hlt
inc
and
sbb
sti
scas
push
ds
xor
lahf
imul
xor
adc
sbb
mov
adc
xor
push
call
das
add
pop
bound
pop
and
test
scas
add
test
fdivs
in
js
jle
sub
rorb
push
push
add
shrl
ret
and
sti
fiadds
movsl
loop
in
fs
xchg
ret
pop
or
aam
xchg
pop
aam
dec
cmp
mov
int3
addr16
in
insb
add
and
gs
adc
icebp
pop
lock
cwtl
pop
cmpsl
or
das
inc
sub
pop
daa
sub
enter
test
cld
rcll
aam
fsubrl
xor
cli
mov
adc
adcl
mov
sti
arpl
cmp
aaa
insb
and
or
js,pn
rcrb
mov
dec
scas
jmp
push
inc
pushf
push
movsb
adc
ficomps
lret
adc
cmc
sub
les
mov
bound
mov
std
test
adc
cmc
adc
test
sub
sbb
or
mov
js
movsb
mov
cwtl
xor
cmpsb
xor
sub
jns
es
xchg
cwtl
pushl
pushf
jbe
xchg
pop
sbb
sbb
loop
mov
incb
xorl
test
cmp
pusha
rcrb
xor
inc
jo
lcall
push
mull
add
cmp
popa
andl
jne
cltd
xor
ss
ret
add
lods
int
cmp
xchg
pop
mov
bound
jo
cmp
push
sbb
enter
shll
loopne
std
xlat
push
ja
add
hlt
sbb
inc
rcll
fidivl
sarb
xor
nop
cltd
pushf
and
add
push
cmp
jmp
sbb
and
icebp
testl
sbb
jno
and
gs
je
das
adc
dec
jbe
push
pop
das
clc
and
cmpsb
add
lds
push
and
mov
add
and
jle
outsb
xchg
xor
mov
jnp
rorb
or
mov
add
stos
pusha
cmp
xor
das
add
fadd
repnz
xchg
addr16
inc
add
add
arpl
gs
push
icebp
xchg
fisttps
and
jns
add
lock
fxtract
sub
or
add
out
in
push
mov
add
xchg
push
aam
mov
lret
sahf
daa
movsl
insb
add
add
xchg
add
or
mov
std
adc
leave
lods
subl
dec
and
clc
jl
jmp
ficomps
adc
pop
cmp
push
je
cwtl
sbbl
inc
cmp
mov
scas
cmpl
roll
sahf
xchg
pop
mov
mov
scas
sbbb
push
sub
sahf
jbe
sbb
pop
add
ds
xlat
or
and
sub
adc
mov
fdivl
call
add
pop
in
pop
sbb
xchg
int3
gs
daa
lahf
sbb
mov
je
xchg
ja
ret
sbb
jecxz
ret
sbb
jecxz
ret
sbb
lahf
adc
fistps
sbb
jnp
ret
sbb
out
or
outsl
and
sahf
sbb
rcll
in
orb
cmp
test
popa
xor
jge
cmp
sbbb
cmp
daa
fmull
add
rolb
xchg
adc
mov
add
es
mov
and
inc
xchg
pop
imul
call
sub
stc
xor
and
sbb
in
pop
mov
add
mov
scas
or
cs
lldt
cmp
add
hlt
add
pop
jns
sbb
push
inc
inc
pop
addb
out
and
cmpsl
lret
test
and
add
jecxz
je
andl
adc
pxor
jo
lods
test
and
pusha
push
mov
clc
clc
rcll
pop
mov
pop
xchg
loopne
popa
les
pop
sub
and
add
ss
scas
and
adc
sub
xor
lcall
pop
test
sub
fs
cltd
ret
pop
or
jo
add
imul
pop
popf
jae
sbb
sbb
mov
push
push
mov
mov
js
add
mov
xchg
cmp
add
cmp
and
lcall
inc
repnz
xchg
cwtl
and
sbb
popf
mov
xor
pusha
ret
pop
push
js
loopne
lock
ror
daa
pusha
or
std
fs
inc
jo
pusha
xor
xor
xchg
xchg
sarl
pushf
xchg
pop
rolb
shlb
dec
adc
pusha
add
movb
popa
pop
push
inc
iret
add
pusha
inc
cmp
dec
pusha
sub
inc
xor
pop
dec
jg
sub
clc
cmp
aad
sbb
sahf
in
call
imul
bound
subl
pop
lea
in
decb
cmp
push
sarl
inc
out
rclb
lock
cmp
sub
leave
sub
lock
mov
and
and
pop
add
out
mov
jne
and
aam
add
pusha
cmp
jge
sbb
jle
andb
or
push
or
and
inc
aas
je
in
mov
mov
enter
or
sbb
jbe
push
and
and
shll
and
repnz
dec
mov
aam
push
imul
mull
movsb
add
xchg
cmp
xchg
push
adc
in
mov
loope
enter
inc
iret
div
jno
adc
fcoml
sbb
cs
into
cld
adc
add
lahf
lea
sub
mov
add
aas
nop
shll
sub
je
cmp
sbb
pusha
loopne
dec
into
arpl
sbb
dec
cmp
and
add
lods
ret
cld
cmp
cmp
and
push
aam
or
mov
push
inc
add
stos
dec
leave
and
pushf
add
mov
push
jbe
ret
scas
add
or
inc
sarl
jmp
popf
imul
push
add
shr
lods
cmp
adc
mov
mov
xchg
dec
push
lea
dec
fwait
enter
pop
shl
aam
inc
mov
call
xorps
in
add
cmp
sahf
mov
int3
and
add
pusha
inc
cmp
into
sbbb
push
and
mov
test
mov
rcrb
sbb
sbb
xor
inc
repnz
mov
sub
repnz
mov
push
out
add
imulb
ss
ret
mov
inc
sbb
aam
popf
test
dec
inc
add
scas
adc
and
xor
in
andb
adc
adc
add
and
orl
mov
mov
inc
repnz
mov
loopne
repnz
popf
lods
push
mov
cmpsb
lock
sbb
in
jae
jns
add
push
pop
pop
sbb
rol
dec
push
mov
popf
les
push
and
or
adc
mov
inc
add
ljmp
clc
add
push
fadds
mov
xor
push
aad
adc
loop
cmp
cmpsb
cmpb
fisttps
cmp
or
je
push
popf
sbb
movb
insl
fld
lcall
add
mov
push
adc
aam
push
cmp
in
sub
cwtl
fsubp
mov
addl
adc
add
sub
add
popf
adc
cmc
orb
rcll
add
test
das
xchg
movsl
sub
push
pop
pop
cmc
hlt
addb
mov
push
add
das
repnz
shlb
push
jns
pop
fiadds
push
ret
repnz
mov
insl
adc
bound
or
fxtract
add
mov
jl
or
add
lcall
dec
xor
int3
add
sub
adc
or
xorb
add
pop
adc
addr16
adc
mov
and
jecxz
addb
sub
fiaddl
pop
cmp
mov
jmp
mov
divl
mov
enter
adc
jo
jno
add
faddl
adc
test
xor
aam
loopne
jo
ret
bound
add
mov
add
push
mov
mov
outsl
popa
fistl
adc
les
xchg
lods
add
lcall
xor
inc
add
subb
jo
clc
inc
ds
or
and
sar
mov
pop
loop
out
cmp
mov
and
jne
out
sub
nop
push
sub
es
insb
aaa
sbb
test
add
mov
rcrb
add
clc
sub
dec
and
push
mov
and
ret
push
mov
pop
int3
pop
and
inc
jmp
inc
cwtl
push
test
fcomip
pushl
add
mov
pop
mov
cmpsl
mov
or
sbb
push
pusha
xchg
xor
jmp
cmp
imulb
or
sbb
push
mov
fldcw
push
mov
dec
xchg
rol
or
aas
roll
shll
xchg
movsb
adc
sub
push
les
xor
rclb
and
cmp
xchg
pop
sub
shl
mov
xchg
push
js
adc
fdiv
adc
push
push
es
mov
jns
or
mov
int3
jmp
pop
inc
fcompl
cmpsl
cs
push
adc
jmp
and
mov
icebp
xorl
scas
and
sbb
out
insl
push
mov
addb
and
or
loopne
fidivrl
imul
rcll
mov
notb
xor
mov
or
sub
lods
jl
fildl
or
cmpsl
loope
pop
loopne
and
rol
into
inc
add
test
push
enter
and
mov
mov
fldcw
push
inc
xor
and
adc
sub
mov
xchg
push
or
nop
mov
push
aaa
cwtl
or
testb
popa
inc
xchg
mov
loop
xchg
or
sbb
bound
xchg
inc
fs
xor
pop
aad
lds
cmpsb
sub
jno
and
inc
push
fcoml
mov
cmp
cmp
mov
cwtl
imulb
rol
pop
andl
mov
insb
mov
test
sarb
or
cmp
xchg
dec
addl
jae
jo
fadds
jl
push
xor
dec
addb
cwtl
push
adc
fistps
orb
loopne
jae
inc
mov
and
mov
sub
sbb
jbe
or
pop
push
je
sub
xchg
add
das
add
xchg
push
lods
adc
push
ret
out
add
adc
jnp
je
or
xor
mov
stos
lds
pop
dec
inc
les
out
or
mov
ret
les
add
call
push
fdivrs
mov
mov
add
pushf
dec
and
pop
sub
pusha
xchg
roll
inc
movsl
xchg
cmp
fs
adc
andb
in
xor
clc
cmp
mov
and
out
mov
sbb
in
add
repnz
jle
sti
es
mov
nop
int
add
mov
mov
in
leave
mov
push
iret
or
insb
ljmp
shll
mov
xchg
cmp
jl
or
mov
pop
pop
inc
nop
sub
or
iret
or
cmp
lock
adc
mov
mov
hlt
jle
mov
and
jge
adc
jp
div
imul
or
int3
jae
add
test
stc
or
push
in
add
out
push
int
popf
mov
jmp
add
shll
flds
ljmp
cwtl
xor
test
fsubl
dec
inc
das
add
sahf
or
ds
sahf
mov
jns
add
mov
lcall
pusha
sub
and
pop
mov
jbe
sub
sbb
push
adc
add
cmp
in
mov
jl
std
aam
je
inc
xchg
push
mov
sahf
sub
sub
mov
jae
push
push
add
mov
inc
adc
add
push
push
in
mov
add
lahf
inc
add
pop
mov
mulb
clc
cli
xchg
es
inc
inc
orb
add
mov
ljmp
push
add
pop
cwtl
ljmp
push
negl
mov
ds
adc
mov
or
xorb
sbbl
dec
jmp
push
pusha
pop
pop
jb
cmp
fdivrs
mov
xchg
pop
inc
jns
push
je
bound
inc
push
sub
lds
mov
jmp
push
sub
inc
add
dec
inc
loopne
repnz
or
loope
sarl
les
pop
pop
add
mov
cmp
jmp
jne
cmp
pop
cwtl
test
dec
sar
ret
sbb
mov
mov
rorb
sub
pusha
cmp
mov
sub
inc
cmp
adcl
and
xchg
adc
push
loop
test
enter
mov
inc
int
push
add
lds
adc
jnp
test
mov
mov
pop
dec
movsl
call
mov
jae
dec
dec
sbb
or
fdiv
or
insb
jge
sub
pop
mov
mov
mov
or
aam
inc
test
test
sahf
mov
inc
mov
addb
jmp
xchg
jne
pop
push
mov
sbb
test
jo
enter
or
faddl
cwtl
mov
inc
jo
hlt
shll
in
fs
and
inc
in
jecxz
add
ret
xchg
outsb
cmpsb
sub
in
push
xchg
sbb
pushf
mulb
cmp
cld
loopne
orb
or
add
add
add
dec
lcall
inc
mov
xchg
xorb
dec
sbb
loopne
mov
filds
int
mov
pop
mov
xchg
cmp
xor
cmp
and
das
xchg
rorb
fnstcw
push
cwtl
xchg
in
add
mov
ret
dec
seto
mov
loopne
cwtl
insb
and
add
or
xchg
cmpsl
aas
push
or
dec
into
mov
in
clc
push
or
adc
xchg
pop
in
dec
test
rorb
mov
jno
sbb
fisttps
cmpb
mov
pusha
nop
dec
sbb
sub
repz
addb
and
jl
mov
add
lds
dec
rorl
adc
xchg
addr16
and
add
mov
sub
insb
mov
sahf
or
aas
lret
dec
adc
pushf
and
in
dec
xchg
xchg
cmp
fs
push
cmpsl
pop
add
adc
and
popa
mov
aam
jns
lods
dec
mov
inc
sbb
mov
push
pop
aam
sahf
xor
jns
flds
lret
test
add
xor
in
mov
adc
sahf
scas
mov
sbb
insb
add
es
mov
pop
xor
fldl
mov
rol
js
das
adc
sub
ror
test
add
insb
notb
icebp
lea
cmp
adc
mov
pop
in
out
cmp
sbb
mov
movsb
rorl
sbb
mov
insb
adc
ljmp
int3
or
not
mov
sbb
add
shr
add
cmpb
sub
or
das
cwtl
jl
mov
sbb
add
mov
jmp
sub
xor
out
xchg
call
add
mov
lcall
out
dec
xor
in
iret
add
dec
adc
pop
push
mov
in
dec
push
nop
push
insb
mov
adc
in
faddl
mov
add
pop
dec
cmp
rorl
add
cmpsb
clc
xor
test
cs
addr16
fsubl
jge
add
sbb
mov
mov
es
nop
clc
je
out
dec
push
movsl
sbb
mov
xchg
mov
and
mov
call
mov
int
jmp
push
sbb
add
sbb
inc
add
cmp
adc
cmp
and
add
and
pop
rcrb
hlt
jmp
push
mov
mov
mov
mov
jnp
das
or
loop
in
jge
hlt
xchg
cmp
in
xlat
add
daa
fsubl
mov
sub
mov
jo
in
push
lret
enter
xor
cmc
dec
out
pop
add
ljmp
cmp
lcall
cmp
dec
push
into
andb
xchg
mov
xchg
xor
and
xchg
xor
aam
scas
mov
add
das
inc
cltd
jl
inc
repz
shr
or
ret
inc
mov
sub
jns
pop
aad
dec
inc
pop
add
mov
dec
mov
jno
sbb
adc
adc
xor
hlt
jae
nop
sbb
jns
or
sub
clc
sbb
rcrb
pop
int3
or
shl
sbb
mov
adc
cltd
cs
mov
arpl
pop
movzwl
fcom
flds
inc
and
scas
and
inc
adc
mov
xor
ficompl
mov
mov
rolb
clc
xor
cmpb
inc
or
das
xchg
cmp
stos
pop
sub
lcall
pop
inc
inc
add
inc
mov
sub
pusha
fsubrl
or
adc
out
mov
push
mov
test
jae
ret
add
lcall
and
loopne
push
stc
lods
and
lods
leave
subl
hlt
jmp
add
add
daa
test
mov
daa
inc
call
or
mov
sbb
les
in
xchg
sbb
out
daa
jp
lock
inc
or
xor
xor
adc
mov
rorb
sub
dec
and
jge
dec
mov
orb
mov
js
dec
cmp
add
pop
aad
xchg
mov
mov
xchg
dec
andb
jae
pop
pop
and
nop
add
arpl
inc
xchg
mov
aam
cltd
int
add
enter
cs
and
and
pop
data16
add
inc
push
lret
cmpsl
loopne
cmp
add
inc
sbb
mov
add
test
or
or
loop
cwtl
test
negl
mov
pop
mov
cmpsb
xor
ja
ds
cmc
mov
sarl
jmp
inc
cli
and
aad
inc
dec
push
pushf
hlt
es
decb
push
outsl
jge
or
mov
sub
jno
dec
add
or
mov
or
sub
xchg
dec
adcb
lret
add
mov
lods
mov
or
nop
xor
sub
sub
imul
aam
add
add
daa
adc
lret
mulb
xchg
sbb
cmpb
inc
pop
inc
test
inc
lahf
add
cmp
jle
pushf
in
jo
xchg
inc
fistpl
or
pop
jnp
fwait
and
pop
cmp
and
out
cmp
mov
je
fistl
sbb
cmpsl
cmp
or
and
xchg
jno
push
and
pop
add
or
fwait
ljmp
push
js
scas
clc
mov
sub
xor
or
push
xchg
gs
mov
sti
add
sub
pusha
popf
mov
lods
jl
mov
add
mov
fmuls
or
cwtl
add
jno
xlat
sub
test
mov
cld
or
jo
fs
insl
inc
dec
mov
pusha
push
and
movsl
frstor
mov
into
dec
push
xor
cli
jo
push
lahf
mov
icebp
out
in
mov
outsb
lods
aaa
pop
mov
fidivs
in
imul
js
push
imul
stc
jp,pn
cmpl
popa
in
in
int3
mov
add
or
push
pop
and
jnp
enter
cli
xchg
scas
daa
cs
xchg
push
push
cmpsl
fnsave
and
cmp
dec
sub
nop
add
cwtl
int3
xchg
mov
jbe
push
add
or
push
push
in
pusha
outsl
or
pop
add
jns
inc
mov
jecxz
xor
cmp
ja
cld
imul
testb
lock
das
pusha
mov
jnp
enter
or
test
sbb
jns
inc
cld
cli
sahf
dec
and
shll
sbb
inc
call
fisttpl
xchg
or
repz
xor
cmp
jbe
sub
sahf
push
pop
std
lret
orb
push
test
add
xor
cmp
add
out
nop
mov
test
inc
jns
je
adc
xor
adc
movsl
xlat
cmp
adc
adc
cmp
lret
mov
push
lahf
lods
ss
mov
adc
xorb
and
inc
mov
add
cmpsl
and
mov
lcall
sbb
jns
js
add
out
dec
xchg
cmpsb
gs
inc
fcompl
mov
add
and
cmpsb
in
push
or
mov
adc
push
push
add
aad
fiaddl
aaa
cmp
enter
imul
xor
ja
fbstp
xor
test
inc
and
xchg
scas
add
jb
cmp
add
sbbl
mov
shl
jp
push
adc
adcl
jno
pop
xor
loop
fisttpl
bound
and
lods
iret
cli
daa
and
inc
imul
fnsave
xchg
les
cmp
jp
aad
mov
movsb
shl
sbb
mov
dec
arpl
mov
pop
pop
add
jne
lcall
in
shl
or
push
cltd
jp
mov
or
push
add
mov
add
ja
and
pop
lds
out
fldcw
iret
dec
loop
add
pop
sti
mov
mov
add
add
test
and
add
bound
mov
out
mov
pop
add
dec
mov
cmp
xor
pop
pop
cmp
pop
mov
in
jp
add
dec
outsb
mov
scas
jp
sub
mov
or
lods
mov
or
push
jne
data16
leave
push
sub
add
adc
test
test
add
push
mov
pop
adcl
or
add
fucomi
and
add
enter
arpl
shrl
xchg
sbb
mov
xor
jae
pusha
inc
jbe
push
xor
pop
jecxz
out
scas
or
pop
push
call
into
inc
mov
dec
jmp
stc
adc
lret
imul
xchg
clc
mov
add
cmp
add
insl
movsl
mov
mov
pusha
jne
test
ljmp
lock
adc
arpl
or
test
add
xchg
js
cmp
out
scas
out
mov
dec
pop
pop
add
shlb
and
push
xchg
cwtl
and
jge
xchg
xorb
clc
xchg
nop
int3
jl
pop
divb
jae,pn
sbb
push
ja
enter
test
xchg
pop
subb
call
sbb
shrl
push
mov
in
add
pop
cwtl
and
mov
out
pop
cmp
add
sbb
mov
insl
or
add
flds
imul
repnz
xorb
jg
lret
pop
xchg
xorb
mov
xor
pop
mov
sub
adc
in
add
inc
jl
dec
pop
jo
and
aas
mov
dec
nop
xchg
nop
and
int3
or
andl
xorb
cmp
or
scas
int
or
add
jp
jae
adc
push
data16
sahf
imul
add
add
xor
sbb
xchg
nop
movsl
push
repnz
adc
jae
sub
add
inc
stos
pop
add
rclb
jecxz
mov
les
sbb
cld
xchg
rol
add
push
sub
rcl
push
sbb
pop
dec
call
push
nop
scas
mov
sbb
and
mov
mov
sbb
and
push
pop
fs
sbb
adc
push
out
ss
cmpsl
sub
add
cmp
or
int3
mov
push
mov
repnz
popf
enter
outsl
ss
jno
mov
jmp
or
test
inc
ljmp
pop
loopne
sbbb
mull
push
and
rcll
mov
rcrb
hlt
xchg
jmp
movb
add
or
mov
dec
sbb
adc
pop
pop
mov
mov
cmp
xchg
cmp
inc
or
push
push
sub
xchg
jo
add
sbb
ja
shrb
add
lods
add
and
shl
mov
and
adc
sarl
int3
xchg
xor
cmp
sbb
test
add
mov
test
mov
jno
add
cld
mov
cmp
jnp
push
jl
inc
scas
test
adc
add
cmp
sub
fmull
int3
adc
insb
bound
pusha
popa
je
sbb
or
or
roll
xorl
js
xlat
xor
test
and
daa
push
fistl
lcall
adc
pop
pop
jp
xchg
pusha
fldenv
sbb
shrb
shl
xor
pop
ret
mov
or
inc
or
or
rolb
add
lock
outsb
cmpsb
addl
lahf
pop
cmp
adcb
pop
dec
in
insb
and
daa
sbb
movsl
mov
das
pusha
jbe
or
or
cmc
add
or
lock
push
push
inc
jb
shll
in
inc
dec
mov
mov
push
push
cld
loopne
xchg
push
arpl
add
mov
or
daa
faddl
adcl
inc
adc
sub
or
hlt
ret
push
iret
mov
jns
dec
stos
addb
push
movl
test
imul
fsubr
popf
mov
mov
and
mov
push
iret
push
arpl
movsb
mov
pusha
ret
add
xor
xor
pop
loop
push
and
fidivs
cmp
cld
ret
jns
cmpl
js
pop
mov
xor
aad
insl
mov
cmpsb
or
jo
sbb
call
pusha
mov
xchg
xchg
pop
and
dec
setle
aas
test
mov
push
push
pushf
insb
push
xor
mov
dec
addr16
lods
add
out
pop
and
js
mov
ja
or
lds
pop
push
loop
sub
cmp
xor
aad
inc
in
mov
dec
mov
sub
mov
adc
clc
push
fisubs
into
pusha
sbb
add
and
sub
mov
into
rcr
xchg
cmp
and
add
add
cld
in
lret
dec
out
sbb
test
pop
rcrl
faddl
jno
sbb
sub
mov
adc
repnz
insl
push
and
xchg
mov
jp
loop
or
jbe
sahf
add
and
add
xlat
cmp
inc
scas
lea
pop
push
test
cltd
incl
add
ret
seta
pop
adc
scas
jno
dec
mov
nop
cld
lret
psllq
pop
xchg
adc
rol
cmp
and
enter
loopne
test
dec
pop
mov
mov
fsubrl
or
mov
add
jecxz
out
outsb
clc
dec
xor
xchg
or
aaa
mov
and
out
insb
cmpb
in
jle
divb
call
popa
insb
adc
mov
dec
pop
arpl
mov
test
push
ror
xor
je
push
or
rolb
mov
jg
leave
xchg
sarl
add
imul
loop
sub
gs
mov
fchs
addl
enter
pop
cmp
lahf
mov
bound
pop
int
fsubrl
add
aam
inc
mov
enter
add
mov
cmp
sbb
scas
andl
lea
pop
xlat
nop
and
adc
push
mov
cmp
add
das
pop
out
push
adc
fisttps
mov
dec
inc
sub
mov
clc
aam
sbb
lods
sbb
pop
cwtl
daa
xchg
test
mov
xor
in
push
pop
stos
fs
lds
jmp
sarb
sbb
and
jecxz
push
add
imul
sbb
pop
mov
inc
pop
mov
and
sbb
pop
mov
fdivrl
insb
cmp
divl
or
mov
mov
out
mov
fcoml
pop
fwait
dec
inc
jl
repz
inc
xchg
ret
test
push
addl
sub
pop
add
xchg
jae
push
pextrw
push
push
cmc
inc
xchg
adc
mov
pop
push
jo
inc
mov
push
inc
inc
sub
mov
mov
add
push
pop
add
and
mov
outsl
fiadds
push
push
in
sbb
mov
lock
nop
sbb
fs
jbe
fs
fs
add
xchg
jmp
mov
imul
cmpsl
rorb
int3
shlb
mov
sbb
loopne
cwtl
aas
shlb
scas
add
xor
leave
cwtl
cld
popf
and
loop
pushf
fadds
fwait
add
or
nop
push
adc
fdiv
mov
mov
add
les
fs
orl
mov
pop
or
andl
add
out
inc
push
push
xchg
mov
das
loopne
in
dec
push
das
loopne
mov
enter
pop
xlat
fs
xor
pusha
call
mov
xlat
mov
and
in
into
bound
push
mov
inc
andl
dec
pop
jno
jnp
psubq
mov
sbbl
insb
pop
fnsave
stos
lds
cmp
outsl
add
add
in
in
mov
movsl
xor
push
pusha
addr16
pop
add
repnz
xor
mov
out
mov
enter
adc
pusha
jl
das
pop
jnp
mov
insb
sub
dec
mov
mov
mov
popf
pusha
adc
shrl
or
mov
movsb
shrb
pop
test
call
push
gs
mov
hlt
mov
movsl
shlb
mov
jae
add
mov
rorl
in
es
in
jle
add
lock
xorl
fcompl
cld
and
push
xchg
mov
pop
dec
push
lds
data16
xchg
mov
cltd
jl
dec
int
arpl
mov
add
mov
and
or
fiadds
mov
ds
dec
add
shl
dec
test
hlt
mov
pop
inc
loopne
and
lea
or
xchg
cmp
test
and
push
mov
clc
and
cmp
sbb
in
and
das
andl
push
pop
mulb
add
lret
test
cs
or
sbb
sar
addr16
lock
jmp
in
push
lahf
sub
adc
sbb
mov
mov
ret
push
and
mov
je
fadds
and
inc
xor
mov
sbb
into
rol
test
clc
adc
mov
xchg
add
rorb
mov
js
js
xchg
push
cld
cmpl
adc
call
daa
xor
xlat
add
dec
dec
jae
push
and
ret
jb
les
mov
ja
cmp
mov
loop
icebp
mov
add
dec
scas
cmp
push
mov
inc
pop
or
dec
je
xchg
pop
xchg
shll
icebp
push
pop
xchg
insl
fs
das
cmp
popa
sub
inc
fdivr
dec
xchg
lods
icebp
out
fdivrs
cmp
add
xor
test
dec
fwait
sahf
sbb
mov
loopne
mov
nop
sbb
test
adc
fsub
loop
sub
mov
or
sub
push
xchg
mov
aas
jnp
add
pushf
in
or
mov
dec
and
mov
and
add
push
xor
dec
push
mov
data16
loop
fistps
pop
mov
jbe
or
inc
mov
cmp
add
and
shl
mov
adc
push
lods
stos
dec
dec
sbb
call
push
inc
push
xlat
adcb
inc
mov
andb
inc
jns
or
lock
in
arpl
jge
sbb
sahf
push
jo
clc
push
enter
fdivs
inc
mov
lret
movsb
add
fstl
inc
push
movsl
jnp
adc
pop
stos
push
add
pop
aad
bound
mov
jno
add
aam
xor
adc
or
push
xor
je
inc
dec
rclb
mov
inc
pop
fdivp
enter
xorl
int
cmp
sub
pop
cmp
test
lods
in
and
inc
repnz
out
adc
and
inc
les
rcl
add
add
xchg
push
rcrl
cmp
jl
mov
pusha
adc
dec
jb
ljmp
jg
or
mov
cmp
cmp
and
dec
pop
les
enter
pop
dec
scas
test
add
xor
lret
nop
add
jo
or
js
or
push
or
addl
and
aad
add
icebp
lret
add
jp
jnp
insb
shl
cmpl
push
add
dec
or
xor
jo
ret
add
rcrb
jle
add
fsubl
loop
enter
pop
add
add
adc
mov
addr16
or
sbbl
dec
mov
add
pop
test
fwait
sub
jmp
add
test
imul
inc
hlt
cli
sub
mov
mov
add
in
sub
mov
enter
enter
push
xchg
rol
pop
fsub
cmp
jecxz
fwait
jge
sarl
or
fdivr
pop
cmp
test
jns
lods
test
mov
bound
test
aas
fldcw
shl
movsb
repnz
aad
add
in
repz
push
pop
int3
mov
pop
jae
call
adc
loopne
addr16
add
stos
dec
or
lret
je
mov
cmp
xor
adc
xlat
add
and
push
push
test
or
cmp
in
mov
popf
add
cmp
fwait
adc
lock
jb
add
call
aam
xor
repnz
cmp
push
rcrb
inc
bound
inc
cwtl
inc
es
enter
mov
push
mov
sub
or
and
add
adc
dec
inc
daa
arpl
in
adc
and
insb
repnz
sub
sarl
add
jo
jp
adc
fsubrs
call
cmp
sbb
pop
sub
push
adc
sbb
jb
xchg
in
jmp
mov
add
mov
add
jp
insl
daa
mov
push
mov
sbb
in
push
sub
pop
shlb
mov
inc
cmpsl
shl
and
stc
sub
mov
push
and
add
or
mov
pop
or
stc
pusha
in
dec
iret
add
movsb
pop
mov
add
int3
scas
icebp
mov
cld
jnp
fidivrs
add
push
or
or
xor
cwtl
imul
mov
add
inc
push
and
fwait
in
jle
insl
or
dec
or
test
test
lret
cmp
and
xor
push
decl
das
pop
and
mov
jecxz
mov
mov
xorb
pop
adc
adc
push
sbb
in
jns
nop
and
add
sbb
push
push
test
mov
dec
addr16
adc
je
scas
add
mov
or
fwait
inc
mov
push
aam
add
shl
ret
outsl
sub
xchg
xorb
stos
add
or
or
push
iret
ss
inc
cmpl
xchg
mov
mov
mov
aaa
mov
or
js
in
jecxz
cwtl
std
adc
add
dec
fmuls
sub
in
arpl
call
add
fprem1
jecxz
add
mov
ja
ret
and
imulb
add
mov
das
push
jnp
in
mov
sbb
stc
in
cmp
arpl
push
dec
out
lds
jo
mov
xor
lock
ret
pop
out
hlt
or
loopne
inc
in
mov
inc
mov
fnstenv
movsb
sub
enter
dec
les
daa
add
imul
gs
sub
push
sahf
cmpsl
in
push
fwait
mov
push
push
and
cwtl
cmp
test
jnp
es
mov
pop
mov
or
pusha
xchg
stc
int3
movsl
loopne
jb
sbb
in
test
fistpll
les
xorl
outsb
lret
add
stos
fisttpll
insb
rclb
sbb
shlb
nop
decb
xor
and
dec
lret
mov
mov
jmp
mov
sbb
add
aaa
sub
mov
mov
imul
and
cmp
mov
divl
js
ljmp
cmc
adc
push
imul
or
add
loop
pop
imul
nop
mov
and
jmp
movsl
and
and
mov
imul
stc
pusha
icebp
loop
lds
dec
jb
xchg
mov
xor
sub
and
add
sbb
push
cmp
cltd
int
dec
xchg
sub
mov
les
xchg
ret
mov
dec
in
mov
jle
call
and
enter
xor
or
pop
or
inc
outsb
mov
jno
fdivrs
das
mov
ss
repnz
call
push
push
dec
pusha
push
push
mov
mov
sub
int3
sbb
mov
adc
mov
push
mov
pop
shl
mov
ss
mov
xchg
clc
bswap
fisubrs
mov
push
es
cld
cmc
add
or
fadds
cmp
icebp
adc
outsb
mov
adc
xchg
mov
lods
movsb
mov
mov
inc
mov
and
je
jmp
pmaddwd
and
je
pop
mov
aas
aaa
clc
inc
pop
add
jno
adc
push
fstpt
fxam
sbb
in
insl
sbb
cwtl
xchg
push
push
std
fwait
addb
dec
rep
or
or
dec
add
ljmp
sbb
dec
add
in
sbb
cmp
lods
repz
jo
push
xchg
or
inc
test
sub
mov
push
xlat
jp
lods
xor
shll
loope
pop
push
int3
add
cmc
pop
adc
mov
cmp
inc
les
push
push
pop
ds
add
mov
and
push
xchg
push
push
mov
in
daa
add
pop
mov
and
dec
push
mov
jb
leave
mov
mov
xor
add
inc
dec
test
dec
outsb
rolb
stos
mov
ret
fdiv
jbe
scas
add
and
pushf
aad
rorb
movsb
enter
mov
inc
daa
mov
and
xchg
stos
mov
xchg
jmp
jmp
int
nop
mov
push
loope
or
inc
and
aam
jb
pusha
jno
rclb
ljmp
and
outsl
adc
mov
aam
loopne
xlat
repz
in
jo
cmp
popf
inc
adc
sub
or
daa
mov
push
push
nop
xchg
out
and
shll
push
add
jns
in
add
xchg
fs
and
lock
xlat
inc
inc
inc
insb
push
sub
push
jno
sbb
daa
jp
mov
push
dec
add
xchg
or
loop
adc
fimuls
cmp
xor
mov
fwait
loopne
addr16
adc
sbb
and
add
cltd
je
xchg
adc
sbb
lock
cld
push
xchg
enter
inc
mov
insl
or
pusha
sbb
mov
mov
in
or
push
pusha
inc
pop
enter
xchg
insl
insb
mov
dec
test
fs
into
xor
scas
les
test
push
enter
pop
cmp
mov
gs
cmp
lods
call
ljmp
mov
and
and
inc
mov
xchg
sarb
in
push
in
sub
xchg
stos
sub
sbb
enter
adc
push
xchg
fildl
test
jg
xor
shrb
cmp
push
sbb
xor
xchg
mov
sub
mov
aaa
aam
pop
and
sub
mov
lahf
dec
add
xlat
enter
mov
inc
add
and
in
arpl
cmp
inc
enter
mov
lea
sub
adc
inc
loopne
ret
add
iret
scas
mov
mov
push
inc
pop
mov
mov
shl
bound
jl
and
js
mov
pop
sub
mov
inc
mov
jo
inc
inc
popf
jp
mov
imulb
jne
add
push
sbb
hlt
xchg
add
lcall
pop
pop
add
std
test
in
pushf
jo
sub
inc
xor
sub
insb
js
sbb
mov
loop
mov
sbb
sbb
push
nop
or
mov
cmpb
adc
cld
pop
test
pop
cmp
pmulhuw
test
cmp
xchg
lock
mov
mov
in
cwtl
rcrb
dec
imul
cmpsb
pusha
mov
jb
mov
or
enter
add
push
jmp
mov
out
push
or
jno
sub
push
inc
js
popf
xor
adc
pushf
sbb
shl
and
sahf
clc
je
push
add
ja
and
sbb
sbb
jnp
pop
sahf
or
je
sbb
or
add
xlat
addr16
jo
in
aam
pop
mov
jg
cs
insb
rorb
inc
lahf
fmul
pop
js
pop
cmpb
mov
sbbl
sbb
pop
int3
jnp
mov
lods
mov
jbe
testb
out
ljmp
dec
push
aam
insb
dec
aam
push
iret
pop
mov
fsubr
outsl
lock
loopne
lea
insl
mov
icebp
mov
push
push
popa
add
mov
mov
enter
sub
dec
cli
mov
fiadds
in
jge
imul
adc
or
and
das
aam
mov
inc
fs
cmp
mov
add
mov
adcl
test
adc
add
dec
push
das
incb
mov
daa
rcrl
inc
push
ja
push
aam
add
adc
xor
repz
add
and
out
loopne
adc
repz
adc
or
adc
mov
mov
dec
les
pushf
push
fisubs
pop
js
adc
mov
add
ljmp
jnp
cwtl
xchg
cli
jecxz
adc
imul
adc
cmp
cmpsl
test
push
or
push
sbb
push
sbb
test
pop
mov
mov
aas
inc
out
sti
add
andl
imul
popa
mov
stc
pop
lahf
or
or
mov
xchg
mov
pop
call
mov
adc
cmpsl
add
inc
mov
pop
mov
push
out
jp
sbb
mov
sbb
or
loop
add
or
inc
xchg
add
cmpsl
push
loope
add
rclb
shll
call
add
ljmp
pop
jp
push
or
jbe
subl
mov
hlt
test
mov
add
mov
out
cli
add
dec
test
mov
xor
dec
dec
xchg
sbb
pop
mov
pop
jl
aam
cmpxchg
test
inc
push
daa
push
out
jl
inc
scas
add
inc
or
add
gs
dec
mov
pop
mov
imul
mov
or
jo
in
fstps
fs
cmp
aad
test
fidivrl
sub
xlat
mov
sbbl
mov
rcrb
sbb
sbb
inc
repz
push
pusha
push
ficoms
iret
movb
xor
push
xor
mov
mov
add
testb
add
subb
lahf
nop
mov
mov
lods
lahf
and
loope
aaa
movsb
inc
ljmp
fdivs
mov
add
or
fistl
cmp
pop
pop
jle
or
repz
mov
fsubl
jns
and
test
cwtl
jo
jg
out
lock
fstpl
jecxz
in
test
xchg
pusha
adc
mov
add
add
sbb
pop
mov
push
inc
and
mov
dec
in
sub
cmp
add
lret
add
pop
clc
in
test
sar
mov
fwait
mov
dec
add
mov
loope
fcomi
sub
adc
add
or
cmp
inc
push
mov
inc
das
jne
lods
loope
add
adc
daa
mov
mov
sbb
mov
dec
dec
jl
and
and
aam
push
xchg
and
les
xorb
sbb
cwtl
lret
rcrb
dec
xchg
outsb
pop
push
cmp
add
cwtl
jg
pavgw
pop
adc
push
mov
push
or
add
fcomip
jp
pop
push
loopne
inc
push
pusha
insl
xor
les
mov
push
stos
push
ror
add
into
jb
and
and
push
sub
iret
mov
lahf
insl
mov
jb
adc
bound
add
pop
icebp
dec
sbb
lods
lret
xchg
andb
clc
lcall
xchg
mov
add
or
pop
cmp
jg
add
xchg
dec
imull
mov
xchg
cs
es
insl
or
inc
push
add
popf
xchg
fsub
xlat
adc
mov
add
orb
cmp
loop
add
stc
orb
jae
add
fucomi
sbb
outsb
cld
add
sbb
xor
test
mov
xorb
lahf
mov
shll
std
pop
xlat
cmpsb
cmp
stos
add
inc
inc
call
xchg
dec
adc
push
in
dec
sub
sub
inc
aaa
mov
outsb
or
cwtl
pop
xor
std
inc
test
iret
inc
push
inc
mov
push
pop
and
cmp
mov
jnp
mov
test
adc
mov
in
fcompl
repnz
inc
add
mov
fsubs
mov
insb
nop
or
je
jae
add
call
pcmpeqb
cwtl
mov
sub
push
mov
addb
in
xor
cmp
adc
or
mov
inc
movsb
clc
xor
int3
push
nop
add
dec
adc
fcoml
push
inc
xchg
cmp
addr16
pop
sahf
fsubs
outsb
xchg
sbb
pushf
sub
xor
ret
and
sbbl
jl
push
or
dec
dec
aam
mov
out
lds
sti
ret
fucomip
inc
cld
lods
movsl
mov
in
in
pop
add
aam
test
aaa
add
je
sbb
sub
fsts
and
idivb
sub
out
inc
fwait
push
enter
inc
shrb
and
mov
inc
daa
cs
add
imul
loop
jb
inc
jmp
mov
in
das
dec
lcall
cmp
dec
pop
hlt
popa
and
inc
push
je
outsb
sbb
imulb
repnz
push
lods
dec
and
mov
xchg
pushl
js
push
or
and
hlt
fcomp
cmpsb
add
xor
lcall
add
xchg
and
fstl
adc
int
sub
mov
and
mov
lea
das
stos
cmp
sbb
or
lret
sbb
mov
cmp
add
jb,pn
idivb
or
jge
mov
test
add
xchg
push
xorl
pop
aam
or
imul
or
outsl
xchg
and
out
inc
rclb
sub
add
mov
push
pusha
cs
daa
sub
popa
add
mov
inc
out
push
jmp
mov
in
pop
xchg
or
lock
out
in
mov
cmp
mov
test
push
shll
imul
popf
mov
test
shr
mov
dec
adc
sbb
cmp
xor
sub
mov
adc
cmp
mul
jmp
pushf
ret
lods
scas
xor
and
inc
sub
stc
push
adc
sbbb
jmp
in
jl
mov
jecxz
cmpsb
and
add
jg
add
out
mov
adc
add
sbb
xorl
mov
repnz
or
or
icebp
mov
loop
repnz
out
and
mull
cli
add
adc
adc
decb
cmp
adcl
scas
add
out
mov
or
nop
inc
cmp
jne
repz
push
mov
popf
jne
pop
mov
mov
inc
mov
dec
cmc
test
add
mov
push
mov
faddl
fstl
or
push
sbb
pop
add
je
fimuls
sti
mov
pop
es
or
addr16
adc
push
pushf
push
mov
rorb
js
adc
cmpb
insb
test
jge
sbb
push
and
add
clc
fbld
or
or
pop
mov
test
push
les
sub
sti
jnp
popa
add
cmp
jbe
jns
lods
jns
dec
xchg
testb
inc
push
dec
bound
sbb
mov
xchg
mov
lock
pusha
mov
sub
popa
mov
sub
sbb
sarb
out
add
stc
mov
add
lahf
mov
ret
sub
out
fisubl
shl
out
xchg
add
push
pop
call
flds
addl
out
ret
jns
pop
pop
sub
xor
ljmp
fxch
inc
shrl
stos
jecxz
mov
xor
pop
add
out
lods
mov
or
push
sbbb
mov
jmp
lahf
mov
pusha
pop
mov
dec
mov
js
pushl
xchg
mov
jb
add
push
jg
les
add
xchg
pop
mov
add
pop
mov
test
test
movsb
sub
xor
pop
mov
outsl
add
dec
pop
cli
mov
lods
adc
testb
inc
jae
cmp
cltd
popf
pop
jge
xchg
cmp
and
add
jb
xor
cmovge
sub
inc
stos
and
inc
sbb
nop
in
std
loopne
jp
clc
mov
mov
sti
pop
int3
push
xchg
xor
adc
fadds
dec
dec
pop
sbb
pusha
mov
add
mov
add
or
sbb
jbe
jno
sbb
cld
push
or
xchg
sbb
clc
sbb
lds
lea
stos
mov
stos
cmp
outsb
sbb
adc
mov
cmp
scas
jno
into
adc
cmpb
ret
jbe
xchg
fisubrs
mov
pop
lea
push
sub
mov
mov
loope
sub
js
shrb
addr16
adc
pop
jmp
adcb
and
fwait
or
and
clc
jae
dec
push
cmpsl
shlb
jmp
cmp
adc
movsl
fwait
push
dec
insb
mov
dec
pop
sbbb
inc
lahf
mov
jbe
adc
lahf
mov
adc
add
fldenv
push
add
adc
mov
mov
or
push
cmp
dec
cmp
adcb
mov
imul
jg
es
xchg
and
ljmp
adc
and
xor
adc
movsb
add
xchg
adc
mov
addb
pop
scas
push
fdivrl
jo
sub
cmpl
popa
pusha
mov
icebp
and
test
add
sarb
or
popl
mov
gs
sbb
int
ret
dec
mov
lahf
or
jge
cmc
pop
xchg
add
int3
test
cmp
mov
popa
mov
sub
or
and
and
xor
or
add
outsl
pop
mov
ds
pop
sub
or
add
lds
ret
js
jle
rep
repnz
sbb
movsl
mov
sub
push
insb
adcl
cld
jmp
pushf
movsl
and
ja
nop
daa
dec
daa
jg
pop
sub
cmp
or
dec
lods
in
out
gs
sub
scas
out
add
adc
cmp
mov
sar
push
add
cli
loop
sub
pop
and
pop
popa
int3
push
loop
sub
jno
add
mov
fistpll
jno
sub
xor
in
mov
subb
add
call
mov
fcoms
or
add
mov
xchg
jno
in
pop
rcr
data16
pusha
aad
cltd
subb
mov
loope,pt
popl
rcrb
out
dec
push
push
add
jge
cmp
add
pop
cmpsb
daa
push
fldcw
fcmovne
addb
xor
sbb
filds
xor
pop
cmpsb
add
push
and
adc
std
add
es
stos
enter
andb
sahf
je
fwait
pusha
repz
push
or
add
pop
movsb
mov
cs
daa
out
lahf
mov
add
mov
add
lods
inc
pusha
call
aam
sub
sbb
addl
jb
mov
sbb
pop
and
add
sub
or
xchg
mov
add
mov
in
mov
lea
sahf
push
add
sbb
filds
mov
or
add
hlt
inc
cmpsb
mov
sub
mov
daa
shrb
pop
mov
jo
jg
int
out
je
mov
and
verw
jmp
ja
push
add
dec
add
imul
xor
es
inc
add
push
pop
in
cmp
cmp
jmp
mov
pop
xchg
mov
push
add
gs
sti
cmp
cs
mov
in
adcb
cmp
call
jbe
sbb
add
scas
lahf
nop
fwait
movsl
cwtl
dec
aaa
popa
ljmp
cmpsb
jns
in
pusha
pushl
and
in
sub
and
repnz
cmp
add
outsb
push
adc
cmp
add
shlb
add
mov
pusha
in
daa
dec
nop
sahf
mov
xchg
stos
jb
or
insb
mov
cmp
addl
hlt
inc
fs
jle
aas
out
lret
dec
andb
pop
and
nop
mov
and
pop
push
rcll
aad
into
cmp
push
rclb
jno
jl
into
xor
lods
lcall
adc
lea
aad
cmp
add
push
push
and
loopne
mov
rcrb
int3
mov
mov
add
jns
movsb
pushf
mov
inc
sbb
add
ljmp
dec
inc
dec
lcallw
sbb
movsb
mov
jb
cmp
iret
mov
shrb
inc
mov
sub
add
pop
loopne
or
sbb
ror
repnz
sbb
pop
mov
push
inc
orb
push
addl
ret
mov
sub
adc
cmpsl
pop
int
mov
jp
outsl
fwait
pop
add
jbe
add
out
fadds
jo
jb
and
dec
or
xchg
xchg
or
push
pop
add
and
xorb
lahf
xchg
fsts
into
push
mov
mov
bnd
outsb
int3
es
adc
and
pop
add
mov
fbstp
xchg
je
cmp
ds
sub
inc
jns
jno
add
push
cwtl
push
sub
lods
jle
add
jecxz
inc
lahf
or
vxorps
pop
in
ret
clc
mov
adc
cmpsl
dec
sbb
jbe
dec
pop
add
aaa
and
mov
aam
pop
and
add
outsb
in
xchg
xchg
psrlq
aas
jle
data16
in
xor
lea
sub
in
xorb
sbb
jg
arpl
and
add
xchg
sbbl
and
sbb
push
adc
push
les
dec
add
test
bound
int
aad
aam
jg
xor
ja
out
add
in
mov
sahf
test
mov
add
cmovp
inc
mov
pop
out
out
shlb
add
add
and
add
add
popf
xchg
sahf
add
dec
in
lcall
push
push
lret
and
imul
add
scas
inc
cmc
not
push
mov
cmp
sub
mov
addb
addr16
out
inc
sbb
loope
or
insb
or
ret
loop
nop
xor
lea
addb
imul
dec
add
or
mov
and
add
movsb
ja
inc
loopne
or
outsl
xorb
mov
stos
or
popa
and
ficoml
xchg
andl
xor
cmp
mov
popf
or
xchg
fwait
adc
add
add
pop
push
leave
ja
stc
scas
nop
push
add
sbb
mov
add
scas
outsb
add
xor
jae
data16
fs
lcall
ds
adc
xor
movsl
stc
sub
add
or
add
mov
cmp
cs
iret
jp
mov
test
jno
int
lret
pusha
jae
inc
sub
push
roll
ja
rcl
mov
pop
lret
sbbb
jns
cs
inc
push
cmp
ljmp
cwtl
les
popf
mov
and
pop
icebp
add
pushf
into
imul
and
rorl
inc
mov
daa
stos
or
mov
pop
ljmp
enter
cli
cmp
mov
mov
nop
arpl
test
add
clc
xchg
push
add
xor
inc
loope
or
add
dec
mov
add
dec
cld
in
push
sbb
push
add
adc
scas
pop
sbb
bound
int
sbb
or
cmp
xor
push
pop
loop
inc
add
xorb
inc
xor
jg
cmp
adcb
decb
dec
mov
enter
xor
test
les
jl
packssdw
nop
loop
jno
in
cwtl
adc
shlb
es
scas
inc
mov
out
push
out
inc
dec
push
adc
sbb
xor
adc
divb
push
aas
add
ret
xor
jae
pusha
push
pop
inc
jmp
mov
mov
mov
inc
xor
or
push
pop
lds
push
push
add
outsb
sub
mov
cmc
dec
push
add
and
inc
dec
loopne
mov
add
xor
sub
push
or
outsb
testb
add
sub
add
lds
in
cmp
push
std
dec
and
ds
stos
pop
nop
xor
mov
add
jns
xchg
rcrl
insl
jnp
out
inc
std
mov
dec
cltd
iret
add
inc
adc
add
mov
add
pop
es
mov
inc
pop
in
add
sbb
shrb
aad
test
add
rolb
gs
and
rol
inc
clc
stc
pusha
and
pop
dec
flds
cwtl
jbe
imul
mov
xlat
add
adc
mov
pop
add
add
faddl
lahf
rolb
or
call
inc
and
push
or
jb
add
shlb
addb
sti
cld
fcmovb
jb
in
add
push
fcom
mov
dec
pop
addr16
xchg
pop
loopne
subl
or
and
xor
lods
mov
add
dec
fwait
or
or
inc
mov
add
stos
hlt
shlb
and
jl
sbb
bound
into
mov
cmp
mov
sahf
and
xchg
push
push
adc
lcall
adc
dec
sub
add
sahf
dec
jbe
lcall
cmpb
push
xchg
inc
mov
pop
lcall
inc
mov
adc
shlb
cli
mov
mov
es
xchg
les
jbe
dec
push
jb
lods
je
xor
ljmp
pop
xor
push
rcrl
cmp
xor
out
stos
cmp
sub
cmpsl
mov
xor
cs
jmp
add
int
aas
in
rolb
dec
pop
cmc
scas
cmp
pusha
sub
push
or
divl
jg
add
fnstenv
cmp
mulb
adc
adc
or
push
sbb
add
ss
jno
jmp
jmp
mov
inc
jbe
adc
push
iret
sub
std
cmpl
xor
add
pop
adc
lds
enter
xlat
ja
mov
fcomps
or
xchg
or
push
pop
sub
cltd
mov
aam
out
xchg
mov
iret
js
mov
shr
jnp
push
repz
add
dec
jle
add
dec
xlat
sub
aaa
dec
add
stos
xchg
add
cmp
xchg
add
adc
jo
mov
push
shlb
dec
add
adc
fisubrl
xchg
add
and
sbb
dec
lds
int
xchg
test
jp
xor
scas
cs
inc
gs
push
leave
or
pop
fsubrs
int3
jo
add
mov
xorb
add
out
add
mov
xor
sbb
jmp
jnp
hlt
sbb
loop
in
lock
aad
mov
jbe
ja
jo
pop
aaa
jo
pusha
out
mov
test
aad
mov
aad
imulb
ss
sti
hlt
dec
sbb
sub
sbb
inc
dec
cmc
mov
repz
or
and
push
inc
mov
dec
inc
push
subb
cmpb
adc
xor
adc
sub
mov
sbb
mov
cmpb
fnstenv
pop
xorl
stc
icebp
rolb
push
popl
mov
push
test
add
xchg
pop
pushl
pop
push
les
jmp
cmpb
mov
add
clc
loopne
and
mov
xor
and
add
push
mov
imul
subb
mov
stos
jbe
setne
popa
loopne
dec
pop
out
push
push
or
inc
fmuls
add
xchg
sub
pusha
inc
jnp
add
xchg
shl
adc
add
fiaddl
into
test
movswl
mov
mov
and
mov
loop
xor
push
stc
fwait
jle
mov
adcb
icebp
aaa
or
inc
jp,pt
add
mov
jp
and
mov
rorl
push
adc
pop
add
mov
lods
loopne
popa
stos
daa
jne
add
jge
shlb
jg
lcall
hlt
add
stc
sbb
pusha
fidivrl
int
push
dec
xor
pop
cmp
add
pop
xor
shll
cmovp
mov
shl
or
mov
jmp
popa
adc
xor
ficoml
sub
lcall
cmc
jmp
and
pop
out
mov
dec
cmp
jno
fsubrl
add
fisubrl
aam
jno
jo
pop
into
xor
cmc
sbb
mov
shl
pop
pop
ffree
sub
pop
iret
iret
filds
adc
mov
addb
dec
adc
jmp
adc
cmc
jne
dec
in
push
and
orb
mov
aam
pusha
dec
fiadds
pop
sbb
sub
jne
les
add
test
pushf
add
push
lcall
push
sub
test
and
push
xor
les
in
mov
pop
sbb
add
iret
ret
fldcw
nop
adc
xchg
and
push
mov
adc
nop
pop
out
and
sbb
jmp
pop
pop
push
add
or
xchg
sbb
or
iret
les
sti
icebp
in
xor
and
pushl
lcall
sbb
xlat
inc
sbbb
popf
cmc
xor
popa
test
fs
call
add
mov
fs
out
frstor
add
repz
lea
leave
sbb
nop
pusha
dec
push
pop
mov
loopne
cmovle
into
mov
sbb
popa
rdtsc
dec
xlat
or
pop
nop
jnp
jo
pop
jg
add
daa
jb
sbb
andl
add
mov
add
and
pop
sbb
insb
mov
cltd
push
mov
push
xor
push
adc
cli
adc
mov
mov
cltd
mov
push
addb
aaa
int
rorl
mov
mov
stos
mov
lock
pop
or
stos
cmpsb
push
mov
fidivrl
sub
dec
add
xor
xchg
mov
or
sbb
jmp
or
rcrb
popa
pop
sub
test
dec
aas
mov
dec
xchg
les
mov
adc
sub
inc
push
outsl
out
and
popf
push
push
add
mov
add
fisubs
pop
xchg
mov
jmp
out
andb
add
fildl
adc
mov
cltd
test
mov
and
in
mov
pusha
dec
insl
ret
movsl
push
mov
pop
jo
add
xchg
mov
jmp
ret
mov
and
xor
popf
xlat
sbb
jne
cli
inc
call
cmpsl
lcall
stos
pop
mov
sbb
cmc
aas
stc
add
test
pop
out
jmp
loopne
push
mov
or
xorb
fistps
sub
mov
push
pop
test
fildl
xchg
push
nop
popf
add
jp
adc
jno
mov
add
lock
pop
out
and
cmp
add
inc
pushl
enter
aad
xchg
sub
roll
int
or
jb
pop
roll
das
inc
negl
dec
shl
xchg
popf
sbb
xor
cs
pop
xor
orl
shll
mov
shlb
inc
repz
and
mov
outsl
clc
fildl
sarl
inc
das
sarb
fisubl
mov
rdtsc
arpl
loop
cmovs
adc
adc
or
lods
cs
adc
leave
mov
lret
mov
pop
jbe
test
inc
push
mov
add
pop
mov
xchg
pop
mov
addb
push
jge
sub
mov
imul
jecxz
mov
mov
xchg
int3
aam
inc
pusha
lea
fcompl
adc
or
adcb
dec
dec
lahf
push
mov
addb
ja
inc
adc
lret
add
lret
and
push
push
and
pop
call
mov
loopw
add
shr
dec
pop
popa
adc
sub
pop
orb
mov
cld
sub
push
outsl
mov
jecxz
adc
js
add
movlps
xorb
lods
repnz
push
mov
add
mov
xor
xchg
adc
es
mov
insl
lds
mov
adc
xchg
ljmp
add
mov
ljmp
sbb
and
dec
ds
stos
lcall
or
pusha
push
pop
and
test
movsb
or
dec
xor
insb
ds
and
mov
xor
xorl
mov
leave
push
jl
add
or
add
es
repnz
xchg
mov
mov
adc
xor
les
add
add
pop
mov
bound
mov
add
scas
xlat
or
adc
push
fldcw
add
std
movsb
add
push
jo
jmp
rcrb
and
data16
iret
mov
mov
lods
or
outsl
call
pcmpgtd
pop
sbbl
idivb
add
out
gs
fyl2xp1
pop
and
sbb
lcall
xchg
mov
or
mov
cs
xchg
mov
popf
aad
mov
xor
mov
xlat
add
pop
sti
add
andb
je
aaa
mov
cmp
or
pusha
push
push
lds
pop
bndldx
xor
inc
and
mov
xchg
jle
rorl
and
aam
les
cltd
in
adc
push
xor
push
leave
insb
push
stos
sub
push
sbb
and
and
mov
and
dec
cmc
adc
neg
add
in
sbb
dec
outsb
insb
push
mov
add
push
push
leave
add
mov
xor
fisubrs
xor
lock
lret
push
test
pop
push
rcrl
add
stos
fld
sarl
and
jno
and
in
or
add
push
pusha
xchg
jmp
pop
and
sbb
sbb
cmp
mov
mov
mov
mov
or
or
call
add
cltd
adc
sbb
pop
xor
rorl
sub
pushf
outsl
xchg
push
orb
add
mov
bound
fistps
add
lods
into
scas
mov
push
mov
add
cmpxchg
mov
inc
or
adc
pop
cltd
in
cmp
repnz
cmc
add
fisttpl
push
pop
fdivl
clc
dec
clc
xchg
push
push
inc
lds
mov
or
sub
sub
cmpb
popf
imul
repnz
sbb
aad
push
mov
push
adc
or
xor
cmp
sbb
mov
xor
jl
aad
adc
xchg
jbe
jle
loop
fsts
mov
push
sbb
mov
rol
and
jmp
push
and
movswl
lea
out
xor
or
inc
xchg
sti
xchg
fucomi
xchg
cwtl
sbb
xchg
adc
jmp
adc
lret
xchg
mov
add
ja
jne
sbb
mov
mov
loop
nop
pusha
push
push
cs
pop
sbb
pop
cmp
sahf
lret
imul
mov
add
nop
mov
add
in
pop
out
in
setae
lods
iret
loopne
test
jno
jmp
mov
or
mov
mov
cmp
inc
and
mov
rcrb
clc
pop
push
daa
leave
cmpsl
mov
push
cmpsl
loopne
add
xor
iret
fnstsw
jno
lea
jnp
mov
sti
add
xchg
jp
sbb
pop
add
fst
loopne
jno
cltd
adc
xor
jb
pop
add
xchg
cmp
popf
std
mov
xorb
das
dec
pop
out
in
and
adcl
mov
add
out
movsl
sbb
cmpb
add
and
push
inc
add
into
push
sbb
daa
jo
xchg
and
adc
and
sub
jg
inc
mov
pop
xchg
ss
pop
outsb
xchg
add
xchg
cmp
jae
sahf
push
sbb
xchg
add
popf
push
add
mov
add
inc
clc
and
pop
and
mov
sub
roll
sub
outsb
iret
jo
and
in
push
ss
pop
adc
jb
add
mov
lods
mov
inc
aaa
dec
pop
nop
clc
loop
popf
cmp
sbb
or
mov
mov
mov
nop
sub
rcrb
in
call
scas
inc
ret
stos
sub
cli
pop
popa
lods
mov
add
int
fcoms
jecxz
inc
or
stos
jb
bound
rorb
pop
sbb
sahf
loope
js
inc
push
and
add
mov
adc
fisubl
pop
mov
hlt
les
orb
ficomps
outsl
or
mov
inc
and
jge
add
cmp
jne
push
arpl
xchg
jo
jmp
add
or
xorl
jmp
add
outsb
stc
fnstenv
dec
cmp
pushf
jo
enter
adc
dec
js
adc
or
jp
push
push
sbb
mov
nop
sbb
orb
add
adc
testl
insl
inc
xchg
xor
shlb
xorl
add
xor
mov
mov
inc
xor
sub
cmpl
dec
inc
test
add
and
lods
out
sub
inc
pop
test
lret
lea
add
jge
mov
xor
push
add
mov
sbb
push
inc
mov
sub
cmpsb
cmpsb
push
fimuls
and
in
aas
and
and
push
fcomps
add
je
jne
fidivrs
cmpsb
push
add
arpl
sbbb
mov
pop
pop
xor
rclb
push
add
or
cmpsb
int
dec
ljmp
dec
add
push
pop
sbb
or
pusha
jp
aaa
add
pop
sbb
movsb
ret
shlb
dec
nop
cmpsb
pop
loopne
aaa
and
iret
xchg
dec
sbb
push
jl
sti
popa
faddl
add
or
fmuls
adc
outsl
insb
scas
js
add
xor
popf
jns
ss
aam
add
mov
popa
int3
scas
std
popa
xchg
mov
add
fstl
inc
das
xor
rcrb
add
sub
cmp
es
or
adc
not
jl
jp
mov
xchg
cmpsb
add
push
add
xchg
xor
jno
inc
and
jg
cmovns
out
das
mov
int
lret
popf
xchg
jmp
das
scas
inc
push
pop
and
pop
jmp
xchg
cmp
fsts
mov
and
adcb
xor
xor
out
mov
mov
or
les
adc
inc
cmp
jnp
add
cmp
pusha
mov
push
mov
scas
add
fwait
pop
jae
addr16
clc
xor
jmp
test
or
cld
mov
xchg
adc
mov
mov
pushl
ror
jecxz
mov
mov
je
or
leave
andl
dec
xchg
aaa
push
add
popa
add
out
out
sub
add
lea
or
jmp
mov
pop
fistpll
and
call
xchg
add
jmp
fcomi
lock
int
rol
psubsw
mov
arpl
inc
xchg
cmp
cmp
lea
cld
dec
mov
les
mov
sbbb
stc
das
rcll
sbb
mov
test
xorb
jmp
or
arpl
and
add
ljmp
rcll
add
pop
sti
jmp
data16
or
mov
pop
test
and
and
pop
sbb
push
imul
and
sbb
cs
cmp
cmovbe
call
int3
std
pop
mov
leave
jge
or
or
xchg
dec
notl
pop
xchg
pop
add
push
push
imul
pop
pop
xor
adc
pop
add
fwait
adc
imul
pusha
test
call
pusha
fcmove
push
pop
daa
imul
jle
and
call
cmp
dec
push
int3
scas
xor
loope
cmpsb
lods
inc
cld
and
and
or
lcall
mov
repnz
add
into
ja
call
xor
cs
clc
sub
add
icebp
or
repz
xchg
add
cld
cld
dec
outsb
fadds
loope
call
es
std
pusha
stos
add
js
push
lods
jle
jb
inc
imul
fbld
imul
mov
adcl
mov
call
sbb
add
pop
nop
push
mov
push
shrl
push
mov
mov
pushf
sahf
je
sbb
jb
loopne
inc
and
scas
imul
imul
mov
cmpsb
bound
xor
add
xchg
add
movsl
and
je
mov
add
addb
add
mov
adc
popl
out
pushf
lcall
insl
jl
leave
cwtl
movsb
pop
sub
sbb
test
shl
dec
pop
mov
mov
pop
cmp
rolb
pop
test
mov
enter
and
add
xor
ret
add
inc
adc
sbb
shll
in
mov
adc
mov
and
pusha
or
mov
lret
mov
test
ret
out
mov
insb
inc
dec
push
shl
ss
mov
mov
pusha
vpmulhuw
pusha
lea
ljmp
inc
fildl
clc
jge
js
push
jo
inc
add
lock
dec
bts
jnp
fnstcw
or
and
fwait
and
mov
mov
aad
cmpsb
imul
add
add
scas
out
test
mov
mov
subb
lds
pop
scas
push
pop
lahf
mov
clc
xor
insb
adc
cltd
call
shlb
jne
add
or
pop
xchg
arpl
call
jb
push
xchg
scas
pop
push
std
pushf
shll
push
jo
in
jp
push
clc
ja
imul
popa
xor
push
mov
scas
test
and
add
arpl
add
imul
or
add
fnstsw
or
lds
lcall
mov
clc
mov
push
adc
shl
push
xchg
jge
loope
adc
add
add
or
ror
pop
fisubrs
pop
arpl
xor
ds
push
les
jp
add
sub
dec
js
cmp
in
add
add
push
int3
mov
scas
jmp
dec
clc
add
call
mov
jge
arpl
inc
xchg
ret
aas
rclb
dec
dec
inc
add
or
xchg
cmpsl
das
mov
add
in
mov
dec
mov
jle
add
fbstp
testl
push
insb
mov
jbe
add
mov
inc
nop
popf
out
dec
jge
into
xlat
mov
sub
xlat
in
rorb
lret
call
rcrb
push
xor
jecxz
add
lea
aas
test
cld
repz
adc
pop
call
inc
out
sub
movsl
lods
sub
jns
push
call
fiadds
js
bound
inc
popf
hlt
mov
inc
dec
mov
cmc
xor
push
je
insb
repnz
mov
push
sbb
xchg
or
push
fmull
fsubs
xchg
sbb
sti
pop
xchg
push
in
dec
and
add
test
lods
mov
cmc
push
mov
push
lods
pop
sub
mov
aaa
xor
in
lcall
jnp
ret
mov
sub
outsb
adc
fsubrp
je
movsb
sub
dec
fdiv
hlt
loopne
in
jg
add
sub
push
add
xchg
jne
test
adc
adc
push
xchg
or
or
xchg
dec
mov
insl
push
xor
call
sub
adc
dec
pop
push
fiadds
ljmp
mov
lea
lods
mov
inc
lds
addb
cmc
jge
ljmp
mov
mov
outsl
outsb
jle
mov
adc
pusha
mov
adc
sarb
add
ds
lret
sub
and
xchg
inc
icebp
test
pop
or
jl
adc
cmp
in
rorl
addb
cmp
fstps
sbb
clc
or
dec
sbb
add
ss
xor
lahf
mov
jp
adc
adc
cmp
pop
dec
fdivrl
aaa
fadds
hlt
or
and
sub
ja
xlat
enter
sbb
mov
xor
jne
clc
movsl
loope
pusha
add
int
pusha
gs
inc
adc
inc
cmp
daa
cltd
movsb
in
push
hlt
mov
test
mov
mov
xor
adc
sbb
mov
jo
or
repz
mov
push
loopne
daa
adc
or
and
jl
sbb
data16
int
xchg
sarb
or
test
xor
adc
add
fwait
dec
or
int3
lods
jg
inc
ja
gs
or
outsl
fisubrl
cmp
xchg
sbb
sbb
cmp
inc
cltd
cmp
fwait
pushf
fxch
sub
iret
loope
xor
sub
fldt
cmp
ja
inc
cmp
add
jl
outsb
shrl
fldenv
jge
mov
pop
scas
or
sbb
xchg
cld
into
outsl
ja
int
clc
sbb
jmp
clc
imul
and
es
sub
outsl
lahf
cmp
fs
dec
inc
add
jmp
and
add
or
clc
sbb
std
pop
cld
push
movl
jg
mov
fldlg2
mov
sub
mov
aad
sub
and
add
sub
mov
adc
mov
and
adc
in
into
add
ljmp
sub
xchg
push
sub
incb
inc
jno
or
neg
add
mov
jno
mov
pop
nop
xor
pusha
sbb
pop
aam
sub
dec
pop
mov
sub
rcll
call
sbb
cmp
pushf
dec
je
sbb
in
pop
mov
xor
loop
aaa
incl
ret
xchg
add
insl
mov
pop
cmc
pop
dec
add
aad
int
fsubrs
test
adc
nop
mov
or
sbb
ljmp
lret
test
push
pop
dec
and
mov
add
cmp
insb
jge
or
es
faddl
das
xlat
rcll
movsl
mov
outsb
or
xchg
imul
inc
sbb
push
xchg
or
ljmp
adc
inc
and
jnp
ljmp
sti
cld
pop
hlt
pop
cs
xchg
aaa
sub
lcall
push
decb
movsl
and
loope
jmp
xchg
add
xchg
loope
mov
ljmp
test
pop
mov
and
xor
adc
add
pop
and
gs
pop
push
adc
dec
push
add
push
in
leave
add
pusha
nop
mov
mov
adc
lahf
xor
call
mov
jmp
fsubr
cmpsb
inc
rolb
sub
mov
add
pusha
push
mov
gs
fsubrp
dec
shl
cli
lea
mov
push
jg
cld
ficoms
mulb
scas
test
mov
push
mov
or
mov
pop
add
pushf
lret
shlb
sub
in
or
xchg
in
and
scas
xor
mov
cwtl
jae
xor
movsl
imul
xchg
pop
adc
es
scas
sar
frstor
adc
or
adc
jno
loope
xor
icebp
leave
fwait
add
jbe
add
xor
cmpsb
lcall
sahf
jae
rorl
scas
fsubs
add
mov
cmp
add
notb
push
loopne
push
jno
mov
sbbb
add
aam
cs
movsb
lret
pop
pop
leave
cmpsl
movsl
pop
and
lea
dec
add
mov
mov
sti
add
sub
mov
pop
pop
adc
cs
mov
add
pusha
in
pop
and
pop
and
daa
test
xchg
nop
mov
jns
xchg
in
cmpsl
rclb
pop
adc
jge
pop
lea
xchg
inc
js
cmp
shrb
mov
jmp
dec
repnz
cld
rol
mov
nop
fnstcw
movsl
adc
fidivrs
lods
push
and
adc
cmpsl
mov
cwtl
dec
dec
dec
mov
adc
push
add
cmpsb
mov
lea
test
stos
sub
jmp
cmp
pop
pop
and
lds
mov
xchg
xlat
mov
nop
lret
mov
push
cld
sub
pop
shll
cmp
lods
xor
roll
inc
rolb
cmp
mov
dec
lcall
mov
mov
push
xor
or
push
ficoms
lea
mov
iret
leave
lret
push
fisubs
xchg
popf
xor
or
cmp
repz
push
icebp
ret
add
or
mov
lock
std
lcall
mov
gs
jnp
mov
sbb
adc
xor
sti
pop
fldenv
pop
fwait
mov
mov
mov
call
lea
out
repz
jmp
es
sbb
mov
adc
into
push
push
popf
cmp
clc
andb
mov
xchg
sbb
sbb
xchg
xor
xchg
push
out
and
pop
cmp
jmp
mov
sub
mov
xchg
adc
imul
and
mov
add
or
xchg
int3
cmp
adc
cs
push
in
sbb
cmp
popa
mov
push
mov
shll
push
mul
add
mov
pop
jns
repnz
adc
inc
cmpsl
adc
pop
ljmp
cmp
pop
and
insl
or
mov
dec
sbb
xor
test
pop
lret
push
fwait
add
dec
in
pop
aaa
push
mov
mov
inc
xchg
xchg
pop
sub
jmp
cmp
dec
mov
push
cwtl
mov
sub
dec
fmull
sub
jecxz
test
or
add
imul
or
jmp
outsb
sysret
or
jae
arpl
pop
pop
test
mov
mov
pop
pop
movl
cwtl
push
cmpsb
repnz
xor
mov
movsb
mov
xchg
push
lods
orl
push
fucomi
xorl
testl
sbb
rorb
add
dec
mov
daa
cmpsb
mov
sbbb
cmp
sbb
dec
add
push
and
sbb
aaa
mov
pushl
loopne
test
in
roll
push
mov
movsb
int3
andl
outsl
inc
add
scas
lea
and
nop
dec
mov
ret
mov
sbb
xor
push
sub
inc
mov
mov
xchg
ficomps
push
cmp
lea
int3
jb
xchg
pusha
int3
push
xor
sbb
stc
mov
add
test
adc
iret
fwait
popa
inc
push
or
cs
fbld
xchg
dec
jns
cmp
fwait
or
ja
int3
adc
jmp
sub
mov
popf
lret
pop
dec
or
sub
push
xor
addl
call
ud1
pop
movsb
pop
out
jmp
ss
fs
pop
sbb
sub
and
sbb
adc
push
daa
sbb
mov
in
ljmp
adc
push
stos
out
add
push
dec
aaa
jo
sub
mov
mov
fcmovnbe
rcl
push
mov
flds
push
repnz
ja
in
push
test
inc
adc
inc
scas
leave
xor
js
outsb
add
insb
out
sub
faddl
sbb
sbb
test
fiadds
add
sarb
dec
xor
xor
out
std
popf
or
loope
test
push
imul
outsb
push
add
stos
rclb
stc
fucomi
or
lahf
jmp
jmp
jns
mov
mov
std
add
jnp
insl
add
mov
ja
pop
test
mov
ret
repnz
out
cmp
mov
add
out
jne
and
add
inc
add
rcrl
call
adc
or
sub
popf
inc
sbb
test
push
test
sub
pop
mov
pop
sbb
adc
out
cld
ficoml
imul
btr
leave
jge
jbe
and
cwtl
adcl
mov
add
dec
mov
or
jnp
push
rcll
xchg
lock
xchg
les
adc
inc
xor
enter
sub
mov
add
out
add
pop
int
fiadds
mov
les
repz
hlt
imul
jge
iret
shr
adc
roll
jns
inc
sbb
sub
repz
int
flds
nop
xchg
mov
or
loop
enter
arpl
jmp
mov
scas
shlb
add
lods
jnp
lds
subl
outsb
jp
add
mov
mov
lea
test
jbe
test
xchg
jae
shlb
or
stc
mov
or
retw
push
mov
pop
add
repnz
add
mov
pop
lcall
or
data16
iret
sub
adc
cmpsb
mov
add
dec
xchg
fisttpl
xchg
popf
dec
dec
pop
inc
lret
adc
lret
enter
adc
sub
bound
mov
shlb
and
loope
cmp
scas
add
movzwl
push
sbb
popa
pop
dec
int3
aam
add
add
daa
inc
addl
mov
sub
test
jle
out
repnz
popf
lea
leave
shrl
adcl
xlat
sbb
mov
xchg
fcomps
add
pop
cmp
lret
mov
ret
lock
mov
andb
sbbb
call
xchg
xlat
test
jge
adc
nop
negb
in
cmpsl
stc
push
fwait
xor
jecxz
into
out
push
add
enter
mov
repz
cld
mov
repnz
ret
sub
jo
adc
popf
pop
jae
clc
sub
pop
orb
add
mov
loope
cvtpi2ps
imul
pop
mov
mov
insb
sbb
cmp
sub
add
pop
or
mov
pop
add
popf
mov
add
xchg
adc
out
add
sbb
das
xor
pop
shl
aam
and
pop
mov
ljmp
je
fcompl
cmpsb
inc
or
pop
lds
and
push
xchg
xchg
push
jne
push
add
xchg
adc
xor
pop
mov
add
ret
je
jle
pop
add
push
out
mov
sbb
add
sub
xor
int3
add
jl
or
pop
xchg
int3
lods
imul
dec
xor
adc
repnz
leave
aaa
or
dec
pop
loopne
adc
movsl
add
push
jmp
cmp
clc
pop
push
das
xor
lds
xorl
xchg
sbb
repnz
lgdtl
jle
orb
lock
rorl
outsb
in
add
pop
mov
and
dec
stc
aam
mov
jmp
inc
pushf
lock
into
test
dec
mov
ret
sub
xchg
add
and
jno
jg
mov
imul
lea
add
push
jo
sti
fwait
cmp
pop
cli
in
jno
cli
push
into
nop
add
ljmp
xchg
cmpsb
scas
stc
daa
mov
add
mov
pop
and
cwtl
mov
jmp
fwait
outsb
jmp
pop
rcll
push
testb
pusha
rclb
inc
xorb
test
mov
sub
inc
scas
and
mov
xor
cmp
lea
hlt
mov
and
sub
add
mov
push
xor
cmp
add
sub
das
xor
push
xchg
inc
adc
mov
nop
out
shlb
sub
dec
pop
mov
mov
inc
xchg
jne
std
movsl
inc
sbb
sahf
adc
sbb
push
clc
xchg
mov
sub
mov
add
inc
adc
dec
add
int
jne
xchg
or
arpl
repz
mov
mov
dec
sbb
jnp
pop
adc
test
nop
inc
mov
lock
and
rclb
clc
imul
shrb
add
push
push
fcmove
out
call
or
subl
cmp
andb
mov
dec
adc
add
mov
dec
xor
clc
pop
subb
adc
adcb
sti
repnz
push
jmp
lea
orb
shrl
cmp
rorb
cmp
out
in
mov
adc
cmpsb
sbb
pusha
in
pop
and
pop
xchg
in
daa
add
movl
jb
daa
sbb
and
jno
sbb
xor
add
cmp
outsb
cwtl
and
les
mov
and
ss
fidivrs
or
add
mov
xlat
and
sbb
shlb
jae
xchg
xchg
fdivl
mov
ja
xchg
sbb
sbb
cltd
pop
mov
ja
pop
aam
out
or
cmpsl
lcall
stc
imul
adc
jo
dec
pop
int3
decb
aad
arpl
push
mov
dec
repz
pusha
jecxz
xor
inc
popa
mov
inc
or
test
add
addr16
hlt
cmp
mov
decb
dec
subb
xor
mov
push
cmp
mov
pop
shll
mov
cmp
aad
pop
imul
movsl
ss
lret
xchg
pop
andl
mov
dec
adc
ficompl
or
lods
lcall
jmp
jmp
mov
adc
mov
jl
outsb
mov
mov
aaa
mov
xchg
xlat
push
jge
in
dec
dec
ret
je
jmp
jo,pn
mov
mov
add
xor
dec
pop
mov
add
jae
jns
loop
or
push
stos
dec
mov
inc
adc
fs
push
inc
lods
pop
inc
cs
xlat
push
stc
cmp
add
cmp
mov
xchg
inc
js
xchg
les
adc
mov
cmp
orb
or
push
lods
test
cmp
add
subl
xlat
test
add
push
int3
and
cmp
lods
aaa
call
cltd
andl
xor
enter
add
xchg
into
add
xchg
inc
push
push
push
pop
xchg
adc
int
sbb
xor
xchg
fwait
fwait
sub
nop
mov
mov
cld
mov
mov
sub
dec
lock
add
mov
cld
cwtl
jg
gs
push
mov
or
popa
mov
sub
daa
jmp
pop
dec
loopne
pop
inc
and
add
jae
xchg
and
sub
jl
or
ja
add
sbb
addr16
testl
jmp
jo
popa
cmp
sbb
les
imul
xor
sahf
std
fisubrs
mov
xchg
cs
xor
mov
add
jae
xor
inc
push
adc
and
sub
pop
mov
push
jmp
adc
in
sti
or
bound
das
sbb
mov
and
imul
xchg
pop
sahf
mov
sbb
imul
fwait
gs
mov
pop
stc
jmp
adc
xchg
pop
xorl
mov
aaa
stos
andb
dec
sub
adc
aas
sbb
es
dec
push
adc
sahf
lahf
shl
fists
decb
enter
xorb
pop
or
fmull
int
jmp
test
add
mov
call
add
and
sub
je
gs
stos
xor
mov
cwtl
adc
ss
lea
pop
dec
push
xchg
cmpsb
cmp
add
call
xchg
mov
xchg
mov
mov
push
lret
ljmp
lods
adcl
jecxz
addr16
imul
mov
inc
jno
add
pop
andl
nop
testl
jl
push
push
jecxz
insl
adcb
add
or
cmc
push
cwtl
dec
sbb
push
adcb
cld
iret
add
cmpsl
inc
dec
fdivs
popf
or
push
pop
mov
inc
xchg
pop
adc
add
push
mov
mov
call
xchg
lcall
lret
cmp
lods
cmp
xchg
dec
movsl
shrl
scas
aaa
shll
mov
rol
dec
jmp
das
xor
imul
nop
pop
js
rorl
jo
pop
dec
cmp
jmp
mov
js
int3
add
or
mov
mov
xor
aas
mull
stos
lret
popf
sub
push
jmp
mov
and
dec
movsb
push
jl
scas
loopne
es
fbld
cmpsl
andb
inc
mov
add
mov
pusha
mov
sub
sbb
insl
push
or
push
mov
dec
pop
and
mov
and
ljmp
addb
sub
inc
addr16
hlt
mov
and
xlat
xor
jmp
xor
sub
outsl
or
push
and
aas
adc
loop
cmp
daa
adc
in
loop
pop
test
push
rol
mov
cmp
das
aaa
mov
mov
nop
jge
shll
jns
inc
loopne
pop
movsb
mov
jmp
out
add
jae
add
pop
mov
jno
outsb
push
fsts
es
int
push
cmpsb
add
jge
fwait
nop
andb
stc
dec
push
gs
cmp
ljmp
dec
push
mov
push
subb
push
out
add
adc
rolb
aad
test
or
or
into
xchg
and
stc
es
jnp
add
movswl
xchg
push
xchg
jo
out
fmuls
test
mov
lock
mov
lcall
ds
loope
aas
cmp
jle
fcmovnbe
out
out
sub
lret
popa
dec
aam
stos
add
mov
mov
lock
int
shll
iret
loopne
jo
jne
popa
icebp
mov
iret
push
enter
add
pop
xor
scas
test
enter
inc
popa
add
cld
mov
mov
or
jnp
mov
cmp
rorl
push
rcl
jae
sub
incl
test
adc
jle
jl
xor
clc
push
insl
out
stos
fcomps
or
mov
inc
pop
sub
sub
loop
pusha
std
hlt
loopne
pushf
movb
cwtl
add
sub
push
cmpsb
dec
ss
sub
mov
jo
jg
and
mov
sub
jno
popa
pop
inc
sub
cld
xchg
pop
loop
add
and
fimuls
add
mov
in
sub
mov
sub
mov
jmp
in
mov
or
stos
pop
jo
mov
sbb
mov
mov
incl
es
inc
pop
scas
faddp
mov
or
pop
popa
inc
xor
adc
add
pop
mov
or
popa
sub
pusha
stos
mov
push
call
add
jae
shlb
inc
add
lods
mov
pushf
nop
push
xchg
xor
aaa
cmpsb
adc
sbbl
inc
orb
cltd
cmp
mov
xchg
or
mov
movsl
jmp
mov
pop
add
ds
push
add
xchg
jb
nop
into
mov
mov
dec
dec
pop
test
jmp
jnp
sub
sbbb
es
mov
js
lahf
jns
movsl
loop
xlat
lcall
pop
movsl
adc
pop
cs
sbb
in
adc
fnstenv
cmp
int
mov
cmc
sub
push
inc
sbb
dec
sahf
pop
in
test
or
cmpsl
mov
or
cmp
or
insb
shrb
repz
mov
cmp
jecxz
mov
repnz
or
add
xchg
and
cs
mov
xor
in
or
pop
pop
fwait
xchg
add
lahf
and
aam
and
xchg
mov
jns
loopne
lea
popf
xor
mov
dec
mov
dec
and
andl
gs
les
stos
add
ret
push
mov
lods
dec
jmp
inc
xor
mov
xorb
push
pusha
test
push
fs
and
push
shl
lods
inc
push
sub
cmpsb
pop
mov
mov
lods
push
test
fs
fidivrl
and
sub
push
lahf
mov
jge
dec
sbb
or
xor
or
faddl
ljmp
in
mov
or
pushf
filds
mov
xchg
xor
xor
sub
cmp
inc
xor
mov
fs
ljmp
pop
outsb
push
popf
and
scas
cli
faddl
pop
xlat
sahf
subb
mov
movsl
out
mov
mov
cmpsb
ror
xchg
cmp
in
fstl
jae
popa
jnp
xchg
dec
jg
fcoml
popf
adc
xchg
lea
inc
outsl
adcb
mov
subb
clc
shlb
or
and
add
cmp
fstps
push
cmp
xor
adc
lds
into
dec
pop
mov
inc
push
test
jb
push
nop
add
xchg
push
mov
dec
cmpl
int3
movb
insb
outsl
test
mov
test
sbbb
das
dec
pop
loope
ficompl
cmp
mov
arpl
mov
sub
jmp
push
out
jp
add
jno
sub
shl
sarb
lret
cmc
jbe
dec
or
xchg
sti
sub
fnsave
push
sbb
pop
lods
xor
dec
push
adc
adc
in
outsb
shrb
mov
movsl
add
test
adcb
push
scas
jmp
sub
repz
iret
xchg
mov
push
cld
in
add
xchg
and
dec
push
and
repz
sub
repnz
das
adc
cmp
adc
cmp
push
mov
mov
mov
xchg
or
pusha
rcll
arpl
pop
mov
scas
or
mov
mov
fistpl
comiss
stos
imul
in
dec
ficomps
pop
push
jmp
jge
idivb
repz
call
test
and
sub
mov
dec
mov
sub
jbe
cmpsb
fs
test
push
push
stos
jbe
push
xchg
int
ret
fisubrl
insl
call
fs
and
or
sbb
movsb
call
je
popa
sbb
fcoml
shll
jmp
and
outsl
ret
or
pusha
xor
or
clc
jmp
and
daa
inc
sbb
popf
outsl
jge
imul
push
mov
mov
movb
jmp
add
std
gs
push
fisttpl
and
push
pusha
cmp
mov
push
and
xor
adcb
add
lahf
or
xor
lock
dec
icebp
sub
mov
clc
sbb
pop
ror
push
js
addb
fs
imul
cli
testb
enter
pushf
stos
pop
pop
jbe
jmp
jb
bound
lods
add
rol
inc
out
sub
mov
jb
mov
pop
mov
sub
jb
pop
mov
xchg
sbb
jno
jecxz
fisubs
mov
push
push
xor
and
lahf
xor
pop
mov
jno
lds
add
cwtl
shr
sbb
sub
xorb
cmp
cmpsl
add
ds
jns
popf
push
leave
mov
cmp
inc
icebp
inc
das
les
dec
mov
cmp
inc
or
xchg
push
inc
mov
sub
mov
int
jle
stos
enter
mov
out
andl
lret
int3
sahf
andl
mov
add
lods
cld
rcrb
or
int3
lahf
xchg
jne
add
addb
cwtl
aas
inc
mov
fdivl
sbb
push
push
inc
pop
pusha
out
fdiv
pop
daa
clc
cld
dec
push
mov
mov
jno
movsl
iret
das
adc
pop
addl
das
imul
sbb
icebp
cmpsl
cmp
shl
loopne
sbb
add
pop
ret
lods
inc
hlt
adc
cmp
mov
pop
mov
mov
mov
pop
xlat
mov
jle
iret
pop
mov
jmp
insb
cmpb
push
sti
sbb
sub
cld
dec
fmull
int
and
lds
pop
adc
ljmp
aaa
lea
mov
pop
shll
mov
andl
or
cld
lcall
insl
mov
outsl
fdivl
loop
shrb
daa
in
jbe
mov
jnp
jo
or
mov
mov
mov
xchg
pop
pop
sbb
clc
cltd
cmpsb
or
das
div
cld
add
mov
mov
cmpsl
and
xchg
cmp
jl
insb
les
xchg
call
das
fwait
and
push
xchg
cmpsb
or
xor
test
stc
stos
add
bound
sub
add
jo
in
push
jge
sarb
and
lea
or
and
jno
jo
and
add
pop
inc
push
notb
ret
inc
xchg
adcb
add
cmpsl
fcoms
cmp
aam
dec
mov
fs
jbe
xorl
outsb
rcl
clc
fidivrl
mov
sub
mov
inc
dec
sbb
mov
mov
repnz
clc
jae
sti
out
cltd
mov
ljmp
dec
nop
jno
add
push
add
push
mov
adc
inc
sbb
mov
outsl
lret
jns
mov
sbb
adcb
pop
pop
nop
outsb
jne
scas
pop
je
add
push
cmp
lret
fsts
dec
mov
in
xor
jbe
ds
mov
add
pop
shlb
insb
in
add
sbb
stos
int3
add
in
lret
divps
inc
jmp
or
mov
add
mov
mov
ja
movsb
mov
in
push
popf
jne
call
mov
test
jo
in
jno
in
add
lods
scas
hlt
dec
mov
mov
xchg
add
clc
mov
popa
push
jp
jp
popa
adc
jmp
mov
jb
and
add
sub
cmc
sub
push
adc
mov
and
sbb
roll
pop
or
and
cwtl
adc
sbb
icebp
xor
sub
jge
xchg
es
and
test
push
sbb
xchg
or
mov
jp
jae
mov
and
adc
lea
dec
rcll
pop
outsb
repz
jecxz
jg
and
frstor
popa
mov
cs
andl
inc
adc
stc
pop
cmp
pop
sub
shll
jnp
inc
add
push
movsl
add
aad
out
mov
and
hlt
dec
push
add
sahf
into
sbb
add
rorl
sub
mov
inc
mov
add
je
sbb
cli
mov
xchg
inc
rorl
cli
xorb
dec
shrl
imul
inc
mov
scas
jno
pop
mov
xor
or
call
mov
test
mov
imul
xchg
xchg
popf
xorb
adc
pop
loop
mov
or
jnp
push
push
cli
cmp
pop
mov
adc
mov
jecxz
pop
fwait
testl
rcrb
or
jmp
push
pop
add
in
fildll
xchg
adc
dec
jg
mov
jmp
lahf
lods
jae
outsb
dec
pop
cmpsb
mov
xchg
adc
inc
or
pop
pusha
out
loopne
mov
push
in
add
add
or
mov
xorb
sub
mov
outsl
in
cwtl
mov
pop
outsb
in
pop
icebp
in
lods
push
or
jp
push
push
out
int
mov
add
fldt
lea
shrb
js
push
call
or
stos
push
xlat
push
pusha
mov
xchg
jecxz
dec
lods
out
adc
out
insl
in
negb
aad
mov
mov
adc
mov
and
pusha
pop
arpl
lahf
in
jge
pop
push
addb
add
cwtl
adcb
push
pop
aas
mov
in
hlt
pop
and
add
add
sub
out
sbb
idivl
inc
sti
sbb
insl
lods
mov
or
pop
xchg
push
in
mov
jmp
test
mov
shll
xor
pusha
cmc
inc
jno
movsb
cltd
popa
cli
xor
les
cmp
leave
divl
cmc
jno
sub
and
add
negl
int3
or
out
in
pusha
xchg
xor
xor
mov
add
out
xchg
or
xor
out
aad
mov
rcrl
clc
cmp
int
xor
js
lds
sahf
and
push
stc
popf
and
jecxz
adc
xor
movsb
push
fmulp
dec
sbb
dec
loopne
dec
xchg
sbb
nop
ret
sub
mov
sbb
test
and
mov
xchg
push
add
cmp
push
mov
cmpsl
test
sbb
or
out
lret
rcll
or
popf
sbb
mov
push
nop
jmp
pop
pop
pop
push
popf
add
inc
adc
ljmp
xchg
out
mov
push
or
xchg
inc
daa
jns
xchg
cmpb
push
mov
or
and
test
and
xor
in
xchg
dec
mov
lea
lds
int
jp
cmp
enter
loop
mov
add
cmp
fists
aam
jp
pop
or
sub
mov
jo
and
pusha
push
push
jmp
pop
xchg
add
xor
sbb
inc
cmp
and
imul
xchg
xchg
add
pop
add
xor
or
xlat
cmp
and
mov
xor
dec
fmull
or
int3
out
xchg
dec
push
scas
or
jbe
aaa
pop
sahf
push
rorb
xchg
mov
cld
bound
ret
and
mov
mov
and
fists
cwtl
std
adc
lea
rcl
mov
dec
outsb
push
sub
ret
add
scas
sub
pop
sbb
or
ficoml
mov
mov
adc
fidivrs
xor
and
lds
lods
outsb
lret
lret
sub
jmp
ret
mov
je
dec
pop
and
or
and
clc
aaa
ret
sub
rorl
add
sub
lret
call
add
mov
repnz
bound
loop
enter
enter
sub
ret
cmp
addl
push
jne
popf
cmpl
leave
mov
inc
lahf
adc
mov
inc
out
push
adc
adcb
test
push
mov
sbbl
gs
add
sti
jb
sbb
push
add
mov
jne
inc
sbb
mov
aam
shrb
adc
das
adc
pusha
push
out
mov
popa
xchg
mov
pusha
mov
or
andb
minps
inc
sbb
mov
push
push
mov
jbe
push
add
sbb
sbb
test
sub
clc
mov
popf
mov
and
scas
je
imul
mov
and
cwtl
and
inc
gs
loope
mov
push
dec
pop
mov
pop
outsb
cmp
sbbb
loope
fistl
mov
scas
pusha
jnp
nop
mov
mov
addr16
jp
cmp
das
add
cli
push
and
mov
xchg
imul
push
test
add
fcoms
insb
insl
and
loope
mov
loop
xchg
outsb
inc
lods
cmp
pop
adcl
lock
jg
bound
xchg
mov
push
or
adc
sub
add
sti
inc
pop
cli
lods
cmp
jb
mov
jmp
leave
imul
jno
scas
dec
call
roll
das
je
mov
shrb
loopne
push
dec
mov
lea
aam
sub
inc
adc
imul
inc
jp
and
or
sub
sbb
sub
popa
jb
add
arpl
push
dec
push
fsts
pop
nop
test
xor
jbe
adc
notl
pop
add
mov
into
add
repnz
jmp
xchg
add
adcl
pop
xchg
shl
nop
sbb
mov
and
xor
cmp
inc
sbb
lds
shl
fwait
jle
test
dec
popl
jnp
add
pop
dec
imul
and
jae
add
in
imul
sub
add
mov
push
add
or
sub
imul
xor
push
fisubrs
add
and
jp
cli
xor
outsb
iret
lahf
enter
xchg
scas
push
and
inc
adc
add
mov
jecxz
sub
es
mov
rorb
mov
rolb
int
out
xchg
scas
and
pop
test
scas
adc
scas
adc
and
adc
test
movsl
mov
ss
mov
fwait
cltd
and
mov
xchg
adc
orl
iret
xor
lea
push
js
mov
xchg
jns
fimull
mov
in
mov
fcmovnbe
sbb
lret
movsl
add
insb
roll
loop
add
enter
and
cwtl
cli
and
pop
je
inc
pop
sbb
popf
fcmovbe
pop
les
mov
das
inc
jno
inc
sbb
call
pop
adc
xlat
aad
pop
js
or
push
pop
mov
and
jb
add
ret
push
pusha
mov
subb
xor
pop
adc
in
mulb
jecxz
dec
ret
sub
pop
cmp
lea
and
imul
or
mov
push
inc
clc
and
jmp
adc
xor
stos
icebp
and
test
and
xchg
aas
out
push
cmpl
add
xchg
cld
fbld
mov
icebp
movsl
pushf
mov
das
insl
sbb
test
xchg
inc
inc
push
pusha
nop
sbb
mov
mov
mov
gs
fwait
add
lea
scas
addr16
jl
mov
mull
fistps
jecxz
xchg
lcall
ficompl
dec
das
inc
add
xor
in
jp
adc
fiadds
and
loope
sar
sbb
enter
mov
into
aam
xchg
push
subl
out
lret
or
popf
dec
sbb
hlt
adc
bound
add
cld
jnp
pop
inc
mov
cmpsl
icebp
cmpb
mov
call
xor
sub
adc
gs
pusha
pop
adc
aam
aad
xchg
mov
xchg
xor
cmpsb
and
jp
ret
jno
popf
adc
mov
movsb
add
es
jmp
xlat
mov
lea
cmp
pop
mov
fs
adc
das
sub
nop
popa
add
shr
mov
js
mov
fnstcw
addr16
inc
dec
in
cmp
fmuls
cmp
orb
inc
push
mov
int
dec
cmc
loope
jp
mov
lcall
cmp
loopne
gs
jno
repnz
mov
jo
cmp
insl
aam
dec
and
je
xchg
xchg
mov
lea
and
add
scas
jb
or
aaa
or
jns
les
outsb
mov
in
mov
outsl
cmpsl
mov
test
mov
out
and
insl
inc
xchg
lcall
jmp
pop
lock
add
lea
mov
test
xor
push
clc
jl
xchg
test
fldenv
das
jmp
js
xchg
sbb
jecxz
and
pop
enter
xor
xchg
fs
int
or
jmp
mov
inc
mov
dec
jbe
faddl
rcrl
scas
lret
push
pop
mov
das
test
mov
pavgw
shl
cmpsl
cmp
cmp
scas
fdivl
pop
test
push
addr16
dec
scas
adc
mov
mov
pop
jp
sbb
daa
lea
xor
push
push
add
repz
mov
push
push
pop
pop
add
xchg
pop
stos
outsb
add
push
sbb
sbb
rcrb
fildl
flds
pop
or
dec
aam
pop
rcrl
xchg
mov
push
ret
cltd
cs
addr16
xchg
sub
sbb
cmp
scas
dec
test
bound
xor
in
pop
and
sub
mov
mov
lcall
popf
mov
into
mov
sbb
cmpsl
mov
add
int3
mov
in
or
fwait
adc
cld
out
loope
xchg
rclb
hlt
inc
and
out
movsl
mov
mov
sub
sbb
je
aaa
movb
pushw
lea
frstor
fwait
sahf
enter
inc
dec
fldl
or
xor
xchg
sub
pop
jnp
mov
jbe
aad
sub
jb
xchg
mov
out
sub
or
inc
fistl
in
dec
test
daa
rorl
inc
pop
dec
mov
fbstp
movsb
mov
inc
xchg
push
or
jge
push
and
pop
pusha
xlat
mov
and
fcomi
or
pop
repz
adc
inc
mov
sti
pusha
mov
pop
adc
push
xor
push
pop
popa
icebp
mov
lea
xchg
out
pop
shrb
mov
jp
add
push
xlat
sub
lahf
and
int3
lahf
mov
mov
push
push
pop
mov
or
mov
ljmp
repz
repnz
test
pop
inc
insb
adc
div
dec
imul
and
xor
popf
jp
testb
inc
push
mov
mov
popa
mov
pop
ljmp
or
and
mov
pop
mov
xchg
int
sbb
movq
adc
jmp
jmp
cwtl
push
fnsave
sub
pushf
mov
pop
and
pop
or
aaa
fisttpl
mov
push
xor
mov
das
adc
cmc
mov
loopne
sahf
pop
and
pop
lds
inc
jmp
pop
outsb
cmp
ss
adc
imul
add
pushf
mov
test
aam
fiaddl
pop
mov
jbe
xchg
imulb
enter
push
xor
mov
dec
xorl
cmp
jnp
mov
ja
mov
std
cmpsl
and
inc
outsb
popa
cmp
cmp
inc
and
js
inc
sub
test
inc
arpl
xor
add
or
pop
xor
enter
lock
add
push
daa
inc
dec
add
ja
daa
es
cmp
ss
lcall
fs
jno,pt
popa
nop
imul
bound
sub
lea
xchg
and
jnp
scas
push
xor
sbb
mov
aas
adc
jecxz
sbb
mov
das
scas
ror
fs
lahf
dec
stc
enter
pop
sahf
nop
sub
pusha
push
push
shll
add
xchg
pop
repnz
inc
inc
add
mov
inc
dec
xlat
mov
loop
pop
rcrl
add
xlat
push
adc
cli
sub
add
mov
sub
scas
pop
hlt
add
dec
stos
mov
jl
adc
pop
outsb
aaa
jge
inc
lahf
mov
mov
loope
sub
out
mov
jmp
out
inc
xlat
orl
mov
mov
pop
cs
fimuls
ficomps
inc
mov
xchg
push
lcall
ja
pop
inc
ficomps
mov
aam
cs
cmp
jbe
adc
ds
pop
mov
and
sbb
mov
add
jmp
in
int3
popf
lea
push
rcll
xchg
dec
inc
or
mov
out
jp
and
insl
cmp
cmp
shll
xor
mull
std
pop
leave
xchg
lea
daa
bound
jge
std
adc
leave
mov
adc
daa
add
enter
cmp
dec
cli
xlat
inc
xchg
inc
inc
sub
pop
inc
and
add
pushf
sbb
adc
cs
iret
lods
nop
ljmp
sar
ficoms
fcompl
das
ret
aas
push
pop
lret
xchg
sub
movl
sub
cli
ss
or
mov
dec
sbb
outsl
dec
jmp
and
in
or
pop
inc
call
out
xor
fsubr
sub
insl
and
pusha
and
pop
dec
add
add
cmp
pop
lods
scas
mov
loop
pop
mov
loopne
mov
sub
cmpl
jp
or
jnp
pop
jne
lahf
adc
adc
int
adc
sub
out
clc
fcompl
add
movsl
insb
adc
add
mov
pop
pop
adc
fcompl
dec
cld
mov
mov
add
xchg
aam
mov
mov
cmp
mov
cmp
cmpsl
push
hlt
mov
or
and
aad
xor
scas
aaa
dec
mov
lret
xchg
std
dec
ja
das
stos
fidivrl
adc
lret
and
and
imul
mov
xchg
dec
cs
lret
mov
mov
loopne
cmp
dec
inc
adc
sbb
mov
or
sub
jbe
adc
mov
sti
add
dec
lret
sbb
incb
js
push
enter
inc
ror
add
mov
add
sub
pop
push
jb
push
pop
cs
mov
shll
sbb
inc
movsl
enter
push
adc
sbb
and
lret
mov
inc
cmc
ja
mov
ja
mov
scas
push
adc
adc
add
bound
pop
pop
lahf
int3
or
pop
mov
xlat
xchg
push
and
jle
fstps
inc
pop
or
pusha
cld
xchg
in
sub
and
mov
faddl
icebp
lret
je
enter
or
test
pop
sub
xor
jmp
imul
adc
int3
push
adc
lods
das
sti
adc
cwtl
adc
cmpb
and
scas
xchg
mov
stc
shl
xor
lods
mov
adc
add
mov
mov
aas
rcrb
xlat
mov
adc
or
divl
push
mov
xchg
or
push
test
shl
xchg
jle
sub
popf
inc
add
inc
push
mov
std
dec
jbe
jecxz
mov
loop
pusha
repnz
jle
adc
push
push
addr16
ds
push
aam
int
add
pop
adc
imul
mov
sub
pop
pop
add
pop
and
sbb
imul
dec
mov
sti
ss
pop
jle
aam
or
clc
js
mov
mov
add
mov
pop
test
test
test
and
jmp
cmc
add
mov
pushf
jae
jo
or
test
out
mov
mov
mov
aad
mov
push
and
and
xchg
hlt
add
dec
or
xchg
fidivrl
enter
jns
xchg
add
push
pop
or
mov
pushf
jae
nop
mov
or
add
cld
js
inc
cmc
popf
mov
pusha
and
testl
xchg
daa
loop
and
std
lds
decb
mov
sbb
add
pop
mov
aad
outsb
les
lret
fnstcw
sbb
data16
orl
pop
popa
fwait
and
aad
popf
jo
and
xchg
call
and
mov
inc
jne
jnp
fldt
push
les
sbb
rcrb
and
inc
das
mov
popf
cli
xchg
shr
lret
aaa
jmp
sub
mov
sahf
popf
rclb
mov
fdivl
push
push
popf
fcmovnb
pop
inc
jg
nop
call
lret
pusha
sbb
iret
mov
push
pop
mov
inc
adc
daa
movsl
add
ret
add
pop
xchg
in
xor
dec
inc
adc
mov
push
inc
imul
jbe
in
inc
push
mov
pop
adc
das
add
clc
mov
fs
cmpb
lcall
xor
dec
call
add
orl
pop
in
je
pushf
cmp
call
flds
xor
xchg
pop
xchg
cltd
add
xchg
dec
or
adc
repz
dec
int3
or
push
mov
shlb
cmp
and
out
add
cld
lret
dec
jo
add
lahf
pusha
push
mov
sbb
ret
inc
push
outsl
xor
ficoms
enter
stc
push
movsl
shlb
inc
adc
sub
incl
mov
cmovs
dec
xchg
lcall
addr16
xlat
ljmp
cltd
ficomps
out
jecxz
add
jnp
out
adc
jmp
mov
pop
pusha
pop
aas
arpl
lock
test
gs
pop
jo
shl
outsl
push
xor
arpl
lcall
dec
add
gs
lret
dec
or
pop
push
mov
add
xor
xchg
and
adc
mov
xchg
dec
in
lock
cmpsb
sub
pop
sub
in
cld
aad
lock
jb
mov
add
ljmp
adc
idivl
or
sub
ja
xor
fcmove
bnd
push
test
push
arpl
movsl
push
jns
mov
push
mov
push
mov
xchg
test
aad
xchg
cmp
pop
aas
loope
stc
sarl
jecxz
add
xor
or
sub
les
scas
je
mov
lahf
stc
sub
inc
cmc
mov
cmpsl
jne
mov
rol
in
sub
sub
xchg
jp
or
add
xor
push
inc
test
and
mov
shl
and
popf
cs
add
adc
out
adc
mov
or
in
xchg
je
push
nop
sub
in
fiaddl
sarl
push
push
cld
jbe
add
add
mov
xor
inc
jno
mov
mov
fnstcw
xchg
lcall
cmp
clc
cs
jmp
lods
jno,pn
fildl
push
lahf
sti
es
outsl
js
add
add
les
sub
dec
cmp
das
test
fstpl
push
sbb
adc
add
pop
mov
add
dec
push
orl
jge
mov
lock
test
scas
arpl
dec
outsl
mov
mov
idivl
mov
jmp
dec
loope
dec
outsl
pop
add
pop
push
ljmp
ja
dec
add
push
cwtl
dec
rclb
enter
push
pop
mov
dec
sub
jne
dec
jmp
jecxz
pop
in
push
cmp
clc
loop
paddsb
sub
insl
aam
or
mov
dec
cmp
jmp
push
push
iret
cmp
mov
cmp
push
out
loope
xor
incb
into
adc
enter
sub
nop
add
mov
add
call
fisubrl
test
out
rcrb
add
sub
mov
ljmp
scas
dec
xor
arpl
jecxz
push
test
nopl
xchg
fistpll
ljmp
ds
cld
mov
jle
decl
sti
pusha
scas
negl
adc
cld
mov
add
lret
mov
mov
sub
dec
sti
sbb
sarl
daa
jmp
ret
and
cltd
sub
mov
xchg
jp
or
adc
ret
and
rcl
sbb
adc
sbb
inc
jae
mov
mov
pop
scas
mov
ljmp
xchg
dec
push
aas
test
and
incb
pop
and
adc
testb
in
js
add
cmp
ljmp
imul
push
push
pusha
ret
or
stos
outsb
int3
adc
dec
and
pop
xor
inc
scas
cmc
sub
lock
mov
int3
call
shlb
mov
cltd
xchg
stos
xchg
pop
push
loope
mov
shl
mov
ds
mov
test
pop
fmuls
rolb
mov
dec
fwait
cltd
xchg
sbb
jnp
pop
or
mov
fisubrl
dec
loop
sub
push
in
mov
adc
sbb
xchg
or
sarb
jp
push
push
xchg
and
and
sub
mov
test
cmp
leave
imul
sbb
bound
mov
cltd
loopne
mov
cwtl
cmp
int
rcrb
and
stc
and
shrl
fiadds
repnz
push
fwait
in
js
jl
and
pop
push
ljmp
mov
jge
sarl
shl
mov
or
pop
pusha
xchg
adc
or
jb
in
dec
insl
xor
pop
sub
in
cld
in
sahf
fisubs
and
push
pop
popa
sub
or
lock
add
pop
push
gs
mov
xchg
or
and
ret
inc
inc
and
push
stc
fs
mov
test
es
pop
sub
or
push
imul
in
add
daa
nop
push
adc
push
clc
or
or
dec
add
dec
adc
arpl
fidivrs
push
fisubrl
clc
test
movsl
inc
in
mov
xchg
ds
mov
lahf
pop
mov
push
dec
mov
xchg
and
stos
add
mov
pop
mov
pop
sti
scas
and
jo
sbb
jo
add
push
inc
sub
pop
or
out
movsl
out
jle
add
loop
or
fists
jmp
mov
jg
mov
mov
or
sub
mov
or
add
add
mov
mov
ljmp
add
and
mov
add
and
mov
jbe
js
inc
bound
jo
push
pop
je
popf
pop
mov
nop
sub
mov
sahf
lret
lcall
xlat
cs
jns
add
pop
pop
xor
dec
cld
js
mov
das
sti
mov
adc
sbb
aaa
stc
jo
mov
frstor
cmp
dec
mov
xchg
leave
dec
js
mov
sub
mov
mov
dec
and
adc
imul
jns
or
ja
jno
xchg
mov
xor
add
shlb
sbb
push
mov
movzwl
push
sub
jmp
movsl
jb
mov
sub
sub
clc
mov
cs
movsl
test
and
adc
pop
sub
icebp
or
aad
push
cwtl
add
mov
lods
xor
js
bound
loop
jecxz
mov
sbb
or
jb
cmp
or
push
shlb
adc
insl
loop
mov
lock
add
aam
outsb
xchg
add
xchg
aaa
aad
mov
or
pop
aas
xor
pop
cli
lahf
icebp
sbb
inc
pop
mov
pushf
cmp
call
out
sahf
imul
push
gs
punpckldq
incb
outsl
daa
lret
sbb
imul
scas
insb
adc
sbb
jl
adcb
mov
xchg
mov
ja
shlb
js
pop
test
push
pop
jmp
repz
pop
dec
call
js
add
lock
rcll
sbb
into
and
add
stos
fdivl
mov
adc
pop
stos
fmull
sarb
xchg
cmc
stos
add
div
xchg
dec
jnp
and
mov
mov
push
mov
test
add
pop
push
ds
call
pop
fldt
cmp
mov
jns
mov
cltd
pop
js
xchg
or
pop
lret
add
icebp
mov
inc
dec
je
fdivrp
lock
out
popa
mov
mov
js
shll
lahf
xrelease
roll
push
js
lret
add
dec
mov
inc
xchg
and
rcrl
sub
push
enter
mov
out
popf
rol
sbb
ja
ficoml
cmpb
inc
and
sub
sub
add
push
xchg
je
leave
ja
fisttpll
jnp
sub
and
dec
inc
add
sbb
lcall
pop
mov
loop
decb
clc
pop
popa
fildl
sbb
dec
jg
repnz
mov
repz
lds
repz
jns
sbb
aam
test
cmp
je
mov
and
push
mov
faddl
popf
jle
outsl
movsb
popf
and
pop
js
and
test
lea
lds
imul
jge
lea
insb
in
out
or
imul
insb
lahf
js
push
shll
add
mov
lods
add
mov
mov
popa
nop
ja
cltd
inc
pop
add
out
or
xcrypt-cfb
cmpsl
mov
adc
sbb
pop
pop
push
mov
pop
cli
push
cmp
sti
push
add
xchg
add
in
out
cmp
xchg
outsl
mov
push
sub
popf
mov
sbb
cs
fsubl
xor
loop
push
adc
sti
icebp
mov
jecxz
sbb
mov
addl
and
jbe
fcompl
lcall
shlb
dec
scas
cmp
fildl
into
dec
in
push
addr16
movsl
pop
inc
xchg
cmc
mov
sbb
dec
jmp
add
cmpsb
negl
jns
movsl
sbb
pop
nop
xchg
adc
cltd
in
or
je
pop
mov
jne
dec
push
or
aas
out
mov
xchg
fisubl
int
mov
add
jl
sub
lods
and
xor
xor
rolb
call
xchg
xchg
mov
push
sahf
xor
fwait
pop
das
xor
add
nop
sar
shll
xor
rcrl
outsl
fldenv
xor
dec
inc
mov
popf
shr
add
adc
inc
adc
lahf
lock
add
nop
add
xor
dec
push
fiadds
dec
clc
jnp
jne
xchg
pushf
test
xor
pop
outsb
in
imul
inc
mov
adcb
adc
dec
dec
add
addl
xchg
std
mov
leave
pop
sub
icebp
dec
test
out
push
sbb
cmp
lret
in
or
cli
fisttpll
mov
stc
mov
pusha
sub
in
and
and
cmp
pop
sub
les
pop
inc
xorl
ja
add
mov
sub
cld
pop
fdivl
mov
xor
cmp
mov
mov
and
dec
inc
movsl
int3
aam
dec
add
rorl
push
add
jo
repz
xor
mov
mov
xor
mov
daa
push
pop
in
pusha
cmc
lds
int3
fistps
pop
add
add
pop
out
and
add
dec
jnp
push
pop
and
and
addb
inc
in
xchg
rorl
xchg
ret
jle
xor
adc
cwtl
pop
and
lock
adc
out
mov
adc
test
and
adc
adc
add
pop
pop
or
clc
test
stos
jecxz
and
inc
scas
in
cmpsl
or
sbb
ljmp
daa
mov
inc
pop
sbb
pop
sub
sbb
jae
add
fstpt
push
hlt
inc
pop
add
insb
les
sub
xchg
adc
in
sbb
hlt
sbb
popf
push
imul
roll
sub
ror
andb
cs
loop
jnp
js
mov
sarl
mov
cmpsl
dec
in
outsl
les
xchg
das
imul
or
jg
jno
pop
adc
sbb
or
inc
cld
inc
insl
cmpsb
add
mov
je
and
push
imul
sub
or
imul
inc
xchg
jns
inc
inc
pushf
mov
je
fcmove
push
pusha
out
out
cs
mov
cmp
cwtl
out
push
add
push
jne
sub
mov
aas
jns
mov
add
pop
loopne
fmuls
xchg
stc
pop
sbb
pushf
mov
popf
dec
sub
pop
fimull
adcb
sti
jge
xor
xchg
pop
xchg
push
subb
shrb
fs
nop
inc
sub
les
push
cld
stc
aam
adc
sbb
mov
add
mov
mov
cmp
and
jl
dec
sbb
push
mov
shr
add
jns
mov
daa
mov
popf
adc
bound
pusha
rcr
and
mov
jno
add
outsl
int
cmp
ss
sbb
loop
dec
jno
jp
pop
mov
inc
in
lods
dec
icebp
dec
add
cmpsb
pop
notb
mov
add
sub
inc
shlb
pinsrw
xor
inc
sbb
and
pop
addl
cld
add
int
stos
cmp
or
push
lahf
sbbw
jo
stc
push
push
xchg
jns
jmp
push
loope
ss
cli
out
ret
mov
inc
aaa
jp
mov
out
lods
adc
dec
sbb
dec
fstl
cmpsl
xorl
sub
push
mov
outsl
cmpsl
sbb
pop
mov
leave
push
sbb
imul
xor
jno
mov
dec
cmp
lcall
adc
scas
imul
mov
mov
or
cmp
lret
mov
sub
sub
sti
xorb
dec
fcoml
mov
mov
sbb
push
test
adc
mov
push
add
add
lods
out
mov
inc
inc
test
mov
and
xor
adc
clc
rcrb
jl
mov
shr
lods
popf
test
push
icebp
adcl
pop
out
adc
mov
mov
popa
cmp
pop
adc
cmpsb
test
pusha
jl
das
sub
xchg
or
popa
jno
jmp
jp
imul
pop
xor
lods
pop
add
inc
es
and
or
sbb
je
aam
jmp
cmp
shrb
sub
and
add
fmulp
mov
pop
add
fists
add
push
inc
fldt
jae
mov
imul
mov
push
sbb
add
push
sahf
mov
xchg
adc
repnz
jno
mov
test
mov
lods
fsts
and
loopne
push
sbb
pop
pusha
jmp
clc
and
daa
je
jmp
xchg
lret
mov
add
stc
ja
ret
icebp
jne
ja
and
cs
mov
jns
xor
popa
lods
movsl
les
add
in
push
notb
into
ljmp
test
lds
push
loope
adc
mov
push
pop
mov
add
jb
inc
xchg
std
sub
out
popa
and
outsb
xor
stos
pop
inc
sarb
shl
add
jbe
jg
iret
inc
mov
addr16
ss
jae
add
and
cmp
jns
mov
aam
nop
cli
mov
leave
jae
lods
mov
adc
and
dec
mov
adc
cmpb
leave
xchg
push
enter
gs
inc
inc
jp
sub
or
ss
and
pop
cmp
push
jo
mov
stc
dec
rclb
lcall
and
and
mov
sub
add
imul
in
cs
pop
dec
inc
mov
iret
add
push
xchg
negl
jmp
or
mov
enter
rol
shl
add
out
mov
xchg
jl
add
cmp
lcall
test
in
mov
adc
sub
subl
out
push
in
xor
jb
addb
push
mov
cmp
pop
movsb
mov
repnz
push
fbld
and
push
imul
lret
pop
dec
jnp
fwait
sahf
jle
xor
pushf
push
jmp
adc
inc
cmp
aas
add
cmpsb
dec
les
xchg
lret
aam
pop
add
cmp
xor
mov
mov
jecxz
xchg
dec
bswap
sbbl
clc
add
xchg
adc
push
pop
sbb
xor
shlb
shrl
std
mov
andb
sbb
and
xor
inc
mov
cmp
divb
and
sti
nop
jmp
jns
aad
jge
testb
outsb
cs
xchg
lock
or
aaa
dec
imul
movsl
lods
push
mov
adc
faddl
mov
mov
xor
mov
test
add
adc
stc
sub
push
arpl
push
mov
mov
mov
push
mov
inc
jecxz
mov
add
nop
push
inc
addb
cld
int
fdivrs
add
pop
fs
push
bound
pop
pushf
fwait
add
dec
xchg
push
sarb
sub
mov
orb
aas
add
nop
fwait
mov
push
cmp
lea
out
mov
add
cmp
std
jmp
call
mov
jle
call
enter
in
negb
int3
push
add
int
push
pop
ss
and
ret
fnstsw
jbe
int
cld
je
or
cmp
and
add
ja
mov
addr16
mov
adc
push
and
cmp
gs
mov
mov
mov
push
test
push
push
mov
mov
popf
push
inc
ret
sub
or
jne
push
std
fwait
add
jmp
and
inc
sub
stos
dec
sbb
out
daa
fs
mov
push
mov
sub
bound
imul
or
mov
cmc
sbb
sbbl
out
mov
mov
out
xor
popa
pop
mov
xchg
add
fisttpl
push
cs
add
lret
fcmovbe
xchg
pushf
int
xor
out
xor
add
int
and
adc
mov
test
imulb
pop
mov
pop
movsl
dec
fcompl
mov
out
mov
mov
int
orl
adc
mov
call
mov
jo
mov
mov
insb
xorb
popl
add
gs
adc
imul
xchg
das
dec
lcall
pop
bound
mov
popf
subl
or
jle
xor
enter
dec
or
in
inc
cmp
cmp
inc
pusha
push
stc
pop
or
ja
sub
bound
pop
push
movsb
sub
adc
aas
pop
loopne
xor
add
test
or
jno
and
ds
sub
movsb
aas
mov
imul
lret
push
mov
outsl
xchg
ja
and
fwait
bound
jnp
sub
xchg
push
jge
inc
je
mov
lods
push
outsb
adc
adc
rcr
orl
shlb
mov
mov
xchg
or
adc
xchg
jns
int
inc
por
mov
mov
scas
mov
roll
adc
adc
pop
or
xchg
mov
xchg
pop
les
or
mulb
and
in
lods
jle
add
call
pop
mov
cs
add
mov
daa
sarb
push
pop
bound
mov
jno
fimuls
xlat
or
push
iret
lods
sub
imul
push
dec
loope
xor
out
xchg
out
sbb
mov
mov
fnstsw
subb
jne
adc
xchg
scas
jb
jne
add
jno
imul
aam
lret
xor
sub
xor
or
adc
add
jne
mov
fisubrs
stc
xlat
inc
fwait
cmpsb
inc
inc
adc
lea
sbb
aaa
inc
imul
inc
mov
mov
pop
leave
nop
call
out
jg
bound
sti
add
mov
test
push
scas
push
dec
scas
fldcw
and
aam
jmp
add
xlat
xchg
mov
stc
fsts
or
sub
mov
scas
sub
cmp
cli
fcoml
cs
sbb
mov
aam
mov
cmp
jnp
cmp
mov
das
test
dec
add
cltd
xchg
pop
mov
out
fimull
mov
jecxz
adc
sub
xor
sbb
movsl
in
cmp
mov
push
popf
dec
fcmovne
pop
les
sub
pop
imul
cmpsl
add
dec
add
rcrb
and
pop
or
dec
ret
inc
jmp
orb
decb
push
fs
push
inc
adc
das
jne
out
add
add
inc
jmp
hlt
out
xor
mov
js
sbb
xor
push
mov
or
push
jecxz
pop
dec
popa
int
sub
fsubl
fsts
pop
push
sbb
xchg
shll
mov
ds
push
xchg
lds
push
pop
out
call
and
gs
mov
mov
pop
out
ror
es
aas
ret
int
loopne
stos
stc
pop
add
or
add
dec
mov
mov
fcmovu
mov
add
xor
cmp
les
mov
std
sbb
ljmp
cmpsl
cmp
lds
cwtl
adc
sbb
ret
pop
inc
mov
lea
add
fadds
push
mov
jmp
mov
sub
outsb
add
pop
shlb
sub
sbb
push
mov
xchg
pop
adcb
inc
sarb
cmpsb
dec
mov
lods
jbe
lods
inc
push
repz
add
inc
xchg
sbb
mulb
adc
clc
rorb
mov
xor
push
pop
mov
pop
xor
xchg
push
fnstenv
mov
adc
fisubs
cmp
pop
cmpsl
mov
les
jno
mov
push
mov
or
xlat
andl
in
mov
jne
pop
pop
negl
es
dec
outsb
pop
adc
nop
andb
push
inc
xchg
or
fnstenv
test
cltd
dec
pop
pop
xor
dec
cmpsb
fcoml
xchg
sub
test
or
jp
jge
aam
mov
mov
add
repnz
pop
call
adc
aad
inc
popa
fsts
sbbl
dec
pop
rcll
and
xchg
loopne
mov
clc
sahf
pop
jmp
test
sub
jbe
insb
mov
xor
movsb
add
adc
rorb
outsl
sahf
add
das
xchg
out
mov
popf
and
push
push
nop
push
push
sub
lods
pop
pop
inc
outsb
mov
add
mov
pop
sahf
xchg
sub
adc
fadds
and
pushf
pop
xor
in
sub
push
in
adc
sbb
sub
stc
daa
out
adc
std
xor
int3
das
jne
lcall
das
ret
pop
sbb
inc
inc
sub
in
lahf
movsl
pop
iret
repz
pop
scas
dec
push
leave
dec
insl
mov
sub
mov
adc
mov
mov
mov
or
xchg
mov
repz
ret
cmp
decl
xlat
mov
push
int
dec
jnp
add
mov
test
outsl
mov
ss
cmpb
lret
cli
add
cmp
or
adc
mov
stc
or
imul
movsl
sub
sahf
cmp
pop
cmp
lahf
pop
cmp
or
stc
dec
push
js
xchg
lds
hlt
pop
imul
daa
popf
movsl
aas
xchg
mov
add
shll
imul
xor
leave
out
lea
and
mov
rclb
push
adc
jb
fnstsw
push
cmp
sbbb
adc
sahf
js
pop
nop
fistl
push
mov
cmp
cs
add
or
hlt
sbb
or
mov
jns
mov
fstpl
rcrb
adc
lret
dec
mov
push
int
adc
cmpsb
out
lock
push
nop
xor
pop
add
pop
nop
push
inc
sarb
orb
mov
cs
adc
test
hlt
fldenv
pop
ret
push
pop
int3
adc
and
xchg
std
in
pushf
cmc
mov
lret
mov
call
adc
jne
adc
jle
add
lret
add
xor
flds
stos
xchg
push
dec
mov
loope
je
test
and
adc
ja
repnz
out
push
jnp
decl
xchg
popa
add
ljmp
push
add
add
jb
lock
push
mov
fidivl
outsb
jp
stos
daa
cmc
mov
stos
push
sub
pop
mov
push
es
jnp
adc
jmp
add
aas
add
dec
adc
jmp
iret
lcall
pop
lds
mov
not
push
iret
mov
cltd
sub
cmp
jmp
dec
pusha
jns
sbb
je
nop
lcall
mov
adc
mov
mov
popf
sbb
cmpsl
push
mov
lret
add
loopne
popf
insl
sub
pop
enter
pop
mov
fadds
inc
push
mov
lahf
mov
pop
mov
jge
lret
xor
in
mov
pop
daa
xchg
and
or
mov
fisttpll
pop
adc
push
mov
jl
push
fucomi
sub
sbb
mov
lea
or
loop
out
dec
ficoms
scas
and
jg
inc
andl
adc
cmpsb
addr16
push
enter
sub
in
mov
arpl
add
loope
add
pop
mov
aas
movsb
dec
dec
mov
or
out
mov
mov
popf
adc
rolb
mov
mov
popf
pop
into
lods
mov
add
mov
push
xlat
fisubs
outsl
faddl
mov
inc
ror
stos
add
xor
jp
mov
adc
out
mov
jle
add
xor
or
fsubs
adc
cltd
adc
dec
inc
sar
outsb
stos
and
notl
mov
stc
sahf
int3
aam
mov
jge
fsubrl
fwait
sub
mov
add
push
icebp
testb
scas
je
fs
xchg
roll
ja
outsb
test
xchg
sti
stos
push
gs
in
fisubrl
fldt
jo
ja
sbb
pop
jae
daa
add
push
js
in
call
dec
insl
shl
xchg
pop
mov
mov
add
sbb
xor
mov
cmp
xchg
add
mov
push
test
mov
or
dec
add
sub
push
xor
out
daa
dec
mov
xor
jp
mov
inc
sbb
jge
iret
push
pop
pop
popa
in
mov
mov
testl
cmpsl
xlat
mov
bound
xlat
out
inc
inc
enter
sbb
dec
jno
xor
lods
cmpsb
daa
nop
push
ror
out
cmp
imul
lods
stc
and
data16
dec
sub
call
orb
fiaddl
cmp
test
xchg
inc
lock
add
movsb
js
pop
cmpb
mov
xchg
call
add
sbbb
pop
test
mov
lret
jg
push
jbe
jg
push
mov
mov
icebp
in
inc
jmp
jno
call
dec
popf
stos
popa
aaa
xchg
dec
les
fucomip
pop
cs
inc
sbb
andb
roll
daa
sub
jnp
in
imul
in
jge
movsl
movl
dec
clc
xor
insb
movsl
jb
cmp
sub
mov
fucom
rcll
add
ja
mov
jnp
mov
mov
test
jbe
jb
add
pop
xchg
insl
sahf
fs
gs
cmpl
cli
push
ficoml
sub
out
add
test
iret
sbb
cli
leave
mov
test
pusha
push
imul
call
pop
mov
mov
sbb
dec
add
inc
or
pop
xchg
mov
arpl
sbb
lcall
pop
pop
jle
or
dec
orb
sbb
call
pop
out
add
jmp
mov
push
sarb
stos
xchg
loopne
push
mov
xchg
adc
fimuls
mov
cmp
push
push
jbe
xchg
mov
jo
pop
sbb
and
mov
cmp
std
add
mov
cld
ret
mov
xchg
inc
test
cmpsl
mov
add
adc
int
andl
xchg
mov
cmp
push
cmp
inc
sti
lcall
and
fadds
dec
cli
out
push
pop
pusha
jnp
scas
or
push
es
cmp
mov
popa
arpl
ret
sub
or
out
loopne
cs
inc
popf
rcll
int
jne
stc
jmp
imul
pop
xor
and
add
call
xor
sub
jns
add
in
mov
hlt
jo
add
xchg
das
jecxz
inc
sti
leave
cmp
add
mov
lret
dec
out
mov
cmpl
popf
or
pop
fs
push
jbe
jnp
add
sbb
shl
imul
xchg
int
sub
push
add
pop
xchg
lahf
hlt
gs
mov
xchg
or
insl
xchg
xchg
pop
cltd
jo
mov
pop
jecxz
push
leave
and
push
sbb
dec
inc
mov
pop
sbbl
ljmp
ficoml
xchg
fcomps
fsubrp
mov
fiadds
shll
mov
jbe
imul
xchg
add
imul
pop
cwtl
lea
mov
pop
jmp
xor
mov
cmp
movsl
and
xchg
pop
push
clc
sahf
aad
mov
inc
outsl
or
les
daa
mov
lcall
mov
mov
xor
mov
pop
and
push
enter
cmp
popf
push
repz
sub
mov
sbb
jge
test
popa
xchg
push
and
push
xchg
jno
xchg
pop
scas
xor
push
dec
jl
insl
xor
add
outsb
push
or
cld
jl
in
call
xchg
stc
call
cmp
xor
sub
movups
push
test
xchg
dec
push
cmp
pop
dec
xchg
outsb
jno
push
pop
shrl
xchg
dec
or
jecxz
and
mov
xchg
inc
push
lock
leave
loop
jp
adc
sub
shrl
loopne
mov
jbe
mov
out
insl
add
dec
fistpl
dec
pop
cwtl
push
pop
mov
cmp
les
faddl
loop
adc
popf
xchg
sbb
mov
add
inc
fwait
xor
sbb
aaa
sbb
or
adc
hlt
lds
test
aaa
mov
jl
mov
pusha
sub
test
mov
popf
loope
aas
dec
insl
test
pop
jmp
mov
sbbb
fcmovu
sbb
push
testl
lds
arpl
fs
std
lds
outsb
push
imul
cmp
cmova
or
add
cwtl
icebp
popa
push
shll
outsl
aaa
add
faddl
cltd
dec
data16
test
add
jge
pop
push
and
adc
add
nop
push
in
movsl
jno
sbb
pop
pop
scas
jecxz
daa
andl
inc
cmpsl
or
or
fistpll
xlat
bound
jmp
pop
xor
add
jmp
xchg
push
insl
in
int3
lret
sti
mov
jecxz
pop
and
hlt
lock
adc
adc
cmp
mov
add
mov
subb
inc
fistpl
push
xor
dec
push
and
dec
test
fistl
pop
or
popa
pusha
popa
jne
xor
mov
lods
std
js
mov
push
sbb
mov
nop
sub
sbb
in
scas
and
pop
pop
mov
push
shl
inc
and
adc
in
push
repz
push
xchg
sub
sbb
fdivrp
iret
rcl
push
add
loope
or
lock
xor
movl
fcmovbe
dec
lea
push
adc
pop
add
and
mov
jae
popf
clc
imul
pusha
insb
mov
in
push
mov
mov
das
leave
inc
jmp
xchg
pop
xchg
popa
mov
rol
fdivs
and
push
pusha
ljmp
std
adc
clc
add
cmp
push
or
loopne
and
push
cwtl
test
sub
scas
fstpl
lcall
mov
nop
jb
inc
je
dec
testl
popa
cltd
jb
sti
xchg
dec
mov
dec
inc
sub
cs
sub
mov
inc
jge
std
jp
cli
js
cmp
cmpsb
out
cmpb
dec
rol
mov
adc
ret
adc
xor
and
jmp
inc
testl
push
adc
sub
mov
jge
jmp
repnz
dec
lret
mov
mov
je
ret
add
inc
dec
lret
or
and
popa
dec
loop
das
mov
rolb
jl
mov
daa
pop
mov
mov
inc
mov
xchg
stc
scas
xchg
mov
adc
dec
xchg
aam
rcl
jo
push
add
jg
bnd
pop
dec
cmp
mov
insb
xor
adc
mov
fcomps
sub
nop
pop
mov
and
cmc
dec
hlt
loopne
cld
sub
dec
mov
sub
adc
jne
ds
sbb
or
lods
sbb
mov
xchg
mov
shrl
dec
xchg
sti
leave
and
pop
dec
fcmove
hlt
add
fmul
popf
bound
popa
jo
sahf
sub
xchg
adc
push
mov
loop
sub
mov
push
jae
and
daa
repnz
bound
sbb
andl
lahf
push
std
mov
dec
push
stc
sub
cmp
mov
nop
das
inc
sbbl
mulb
mov
push
dec
call
popa
adc
sub
ficomps
std
ja
call
push
rolb
loopne
outsl
add
mulb
frstor
fisubrl
adc
jno
cs
xor
mov
pusha
xchg
jbe
sarb
add
xchg
jl
pop
lcall
pop
dec
iret
sub
adc
xor
fisubrs
push
xor
push
popf
hlt
jg
xlat
mov
je
add
mov
outsb
xchg
cwtl
or
orb
dec
or
pop
repnz
xlat
int
fistps
cwtl
add
aam
push
add
pop
inc
cmp
xlat
lret
int3
iret
pusha
sbb
and
mov
and
cmpb
sbb
dec
mov
lret
jmp
pop
lea
rclb
xor
or
jl
push
sbbb
lret
cltd
testb
lret
inc
or
das
push
stos
fildl
mov
aaa
push
movsb
push
add
pop
and
mov
add
popa
xchg
ja
outsl
mov
mov
shlb
adc
inc
xchg
add
mov
push
xchg
orb
or
sub
add
pushf
movsb
push
iret
adc
wbinvd
mov
out
pop
pop
outsl
push
push
aaa
xor
fisubs
sbb
jne
cmpsl
add
insl
xchg
test
lea
test
call
enter
std
cmp
mov
add
cwtl
xor
mov
push
sub
adc
and
add
fldl
imul
add
mov
fisttps
xchg
or
rclb
cs
add
test
or
rcrb
mov
jno
ret
outsl
dec
inc
aas
jl
or
push
mov
data16
lock
sbb
int3
xor
into
dec
stc
and
xchg
xor
bound
add
jecxz
mov
subb
cmp
jno
les
idivl
mov
push
dec
sbb
mov
ss
bound
popa
mov
fsubrp
insl
mov
mov
sbb
mov
nop
int3
push
clc
push
mov
mov
push
add
aaa
pop
lods
inc
stos
mov
stc
xchg
repz
xor
dec
and
aaa
mov
push
in
mov
jg
test
mov
xchg
mov
test
sti
shlb
xor
xchg
sti
icebp
jo
jne
cmp
mov
gs
fsubrl
ja
in
pop
mov
js
add
hlt
inc
jmp
adc
inc
mov
inc
xchg
jno
sub
or
pop
xlat
inc
sahf
pop
cmp
fs
cmp
jnp
sbb
and
push
or
mov
test
push
add
mov
icebp
stc
das
push
push
add
je
ljmp
fstpt
sbb
mov
jp
aas
daa
enter
gs
std
ja
sbb
dec
lods
jecxz
push
mov
aad
lods
sbb
outsl
pop
and
add
lods
das
cmp
cltd
popf
clc
ds
push
test
push
dec
dec
mov
fistpll
dec
dec
loopne
notb
add
in
sbb
xchg
hlt
mov
es
fildll
mov
test
xchg
hlt
cmp
push
stc
pop
cmp
or
pushf
sbb
push
int3
sbb
and
lret
and
inc
xor
mov
out
movsl
xlat
sbb
mov
leave
pop
dec
and
cld
pop
add
popf
mov
or
idivl
adc
dec
inc
adc
mov
fdivrl
maxps
sbb
dec
jno
bound
fmull
sbb
popf
and
and
ds
sub
xor
push
outsl
pop
add
pop
lcall
add
iret
adc
shlb
test
insl
xchg
xchg
std
push
jmp
mov
sub
fistpl
xor
loopne
or
fwait
lea
and
mov
cmpsb
or
jmp
shr
fimull
push
jo
mov
or
aas
push
fwait
and
and
add
lock
sub
outsl
cmpsl
jae
fcoml
int
mov
pop
pop
add
dec
add
lret
pop
xchg
test
lds
add
out
enter
push
push
cmpsb
mov
std
stc
or
and
xor
je
inc
in
popf
sar
jmp
dec
adc
mov
mov
add
stc
push
out
lock
mov
cmc
fstpt
xchg
aam
adc
dec
xorb
push
jnp
jne
jp
inc
adc
adc
jbe
adc
std
add
and
sbbb
call
or
les
xchg
or
mov
lea
test
movl
stos
pusha
aad
or
sub
cmpsb
mov
mov
adc
push
clc
ds
mov
jns
pusha
sbb
in
mov
xchg
jmp
mov
in
push
jne
test
mov
jne
cmp
hlt
fmull
test
xchg
add
je
push
add
mov
lds
jnp
or
add
pop
push
cmp
push
stc
mov
jno
inc
out
roll
pop
push
daa
pop
jae
jnp
push
inc
cmp
cwtl
dec
popa
adc
imul
shl
xchg
lret
aaa
dec
lock
sbb
mov
ja
push
push
lcall
pop
inc
and
add
mov
popf
xor
mov
push
sbb
mov
xchg
adc
ljmp
inc
sbb
imul
js
enter
shlb
loopne
and
mov
sub
xor
sbb
test
ljmp
fisubs
mov
movb
or
imulb
enter
shr
imul
jae
mov
cmc
and
cli
mov
mov
cmp
push
xchg
test
and
jmp
mov
sub
push
test
ficomps
call
mov
mov
xor
xchg
mov
jno
rcl
and
add
inc
jns
sub
ficomps
sahf
mov
pop
add
mov
ret
or
add
push
sahf
fidivs
push
mov
pop
aas
mov
mov
mov
call
push
mov
jge
icebp
adc
or
rorl
fisubl
mov
leave
stc
dec
insl
lcall
sub
mov
xor
xlat
lods
das
addb
or
cs
sub
mov
loopne
cs
lret
jl
adc
sub
test
outsb
pushf
imul
and
mov
les
jmp
daa
xor
in
mov
jns
mov
dec
pop
push
mov
mov
and
dec
add
ficomps
sub
push
mov
js
push
arpl
sbb
or
or
inc
in
ljmp
inc
inc
or
leave
adc
add
xor
mov
lahf
aam
jne
nop
adc
popf
and
aas
push
lret
das
mov
sbb
mov
hlt
dec
aad
iret
lods
or
stos
or
cmpb
add
cmc
add
out
mov
pop
dec
popa
mov
in
or
nop
sub
popf
daa
mov
and
adc
xor
push
sbb
push
pop
mov
loope
mov
xchg
lods
pop
mov
daa
add
jb
mov
sub
lret
outsl
addb
xchg
sti
dec
sbb
cmc
mov
out
dec
scas
loopne
dec
mov
popf
das
aam
sbb
test
inc
adcl
sub
jmp
and
hlt
inc
mov
popa
xchg
addr16
or
dec
icebp
pusha
mov
sub
xchg
pop
xchg
andb
test
in
sub
xor
testb
xor
das
xor
push
sub
movsb
aas
add
pop
adc
sbb
jg
mov
mov
xchg
mov
jo
mov
and
adc
test
inc
push
cwtl
fcompl
lret
pop
popf
mov
xor
pop
xor
and
cmc
push
cmc
xchg
mov
push
pop
je
imul
or
cmp
sbbl
mov
inc
pop
sbb
add
aad
push
xlat
popa
add
mov
jg
jge
outsl
cmp
aad
jmp
fs
fmull
pushl
outsl
pop
push
push
pop
and
negl
adc
pushf
movsb
mov
xchg
fcoml
popf
fwait
add
jmp
add
xchg
incb
dec
adc
or
xchg
incb
dec
mov
xor
adc
or
ja
mov
mov
nop
add
xchg
xchg
mov
cmp
aaa
loop
ja
or
push
xchg
add
lds
sub
cmpsl
popf
push
fcmovbe
mov
xchg
lods
repnz
leave
and
popa
pop
insb
pop
dec
fisubs
sbb
cmp
inc
je
cmp
sti
stc
xor
push
mov
enter
lock
xor
insl
and
fcmovnb
sub
popf
push
rol
xchg
sub
dec
inc
cld
push
mov
int
addr16
in
int3
std
dec
mov
adc
ss
outsl
cmc
sub
mov
out
jp
daa
mov
and
dec
adc
fsubl
cmovp
lock
and
cmp
jo
orl
jg
dec
cli
xor
xor
decb
sub
xchg
push
mov
add
mov
clc
mov
add
loopne
xchg
or
popa
jbe
inc
adc
les
sub
es
jl
ljmp
test
je
pop
pop
daa
cli
mov
pop
mov
jbe
popa
mov
sar
and
test
add
or
sti
mov
inc
dec
push
andl
loope
adc
and
add
push
pop
jmp
insl
jmp
fcmovu
pop
scas
bound
outsl
orb
dec
shlb
inc
pushf
xchg
je
dec
or
jg
aad
mov
jle
imul
cmp
and
loop
push
push
pop
add
push
daa
xchg
add
or
insl
test
andb
push
mov
faddl
iretw
js
add
pop
lret
jle
and
cmp
pop
les
adc
inc
dec
out
mov
popa
adc
lahf
fmull
mov
add
mov
negl
pop
fs
scas
and
sub
std
add
in
mov
data16
pop
in
cli
mov
addl
or
xlat
hlt
add
xor
cs
mov
inc
or
andb
test
mov
pop
or
fwait
rolb
add
mov
std
adc
fcoml
mov
rorl
jbe
xchg
cmc
pop
ljmp
dec
nop
in
das
lods
pop
mov
int3
lea
mov
movsb
mov
std
int3
cmpsb
or
cmp
aad
jne
mov
jnp
rol
mov
push
inc
and
push
sub
mov
std
cmpsl
in
std
inc
cmc
dec
pop
or
jmp
mov
mov
push
push
sub
push
iret
test
add
inc
test
mov
pushf
add
mov
add
sbb
jg
push
jmp
mov
bound
cld
ret
cmc
xchg
bound
pop
lds
xor
cltd
aaa
dec
out
popa
sbb
pop
ret
dec
adc
pop
cmpb
add
mov
ljmp
dec
popa
xor
es
fsts
xchg
aam
and
and
cmpl
sahf
fs
repnz
xchg
les
pop
cs
xor
push
sbb
pop
mov
rclb
mov
add
jp
icebp
das
repz
add
add
xchg
push
add
sub
nop
out
jae
xchg
aam
aam
pop
loope
sahf
pop
xchg
sub
add
nop
mov
jl
faddl
das
cmp
inc
jns
leave
dec
jg
lds
cmpsl
adc
xor
mov
and
hlt
aam
outsl
aaa
out
jnp
dec
incb
xchg
pop
das
sbb
xchg
mov
and
sbb
adc
popf
insl
xchg
dec
jle
and
pusha
jne
pop
lock
jnp
repz
rcrl
insb
jnp
test
cmp
sahf
fsts
jb
cmp
mov
fildll
loopne
jge
cltd
daa
or
add
sbb
int3
adc
aam
or
pop
xor
mov
std
leave
and
cmp
mov
je
pushf
jmp
gs
mov
popa
mov
fadds
ja
xchg
adc
mov
daa
gs
adc
shll
sub
jne
cs
out
jne
pushw
in
cmpsl
push
add
cmp
adcl
popf
xchg
sub
lea
xchg
movsl
jp
test
enter
fcoml
cmpsb
push
test
jb
rorl
xor
pop
pushf
rol
add
mov
lahf
jnp
orl
cld
mov
sbb
pop
cmp
and
push
filds
push
mov
loop
lret
xchg
cld
or
icebp
inc
pop
mov
pop
add
add
hlt
outsb
xor
push
int
in
mov
jo
cmp
mov
dec
lcall
in
pop
loop
xchg
cmp
pop
or
adc
cmc
aaa
lods
pop
xchg
adc
cmp
shrl
or
push
scas
jo
sub
icebp
mov
testl
sub
sbb
shrb
or
clc
mov
outsb
add
add
lds
out
mov
lock
jmp
dec
je
das
aam
fidivl
aam
out
movsb
pop
pop
lret
cwtl
cmp
adc
lahf
outsb
les
cmpl
std
jbe
adc
push
mov
or
pop
jge
and
sub
divb
dec
sti
rolb
leave
xlat
adc
call
sub
adc
jle
add
mov
cmp
adc
mov
stc
outsb
call
inc
arpl
cmp
cwtl
mov
ret
fwait
mov
mov
fistpl
xor
push
test
mov
mov
int3
lea
push
and
sbb
loope
mov
test
ljmp
lock
dec
pop
inc
mov
pop
jne
pusha
fildll
mov
lea
sbb
or
or
aad
sbbb
outsb
test
cld
mov
xchg
pop
xchg
mov
mov
imul
adc
push
cld
ja
scas
cli
cmpsb
lss
jle
dec
xchg
xor
cld
push
pop
push
cmpsl
jns
imul
add
je
cmp
mov
dec
out
adc
xchg
mov
addb
push
push
sub
add
into
in
call
pop
scas
cwtl
test
popa
jmp
xor
sub
repz
jmp
push
pop
faddl
lea
adc
shll
mov
jno
mov
call
loop
divb
jae
mov
cmc
xor
and
mov
xor
xchg
cwtl
or
mov
jns
inc
inc
add
mov
bound
xor
mov
int
xchg
pmaddwd
and
mov
push
out
adc
bound
pop
xchg
jp
out
dec
fwait
scas
and
mov
sub
jo
int
adcb
lea
jne
jno
adc
dec
xchg
andl
xor
xor
inc
xchg
scas
jle
sub
cmc
inc
pop
add
mov
inc
add
jg
ljmp
fstps
daa
pusha
jns
xchg
add
loopne
popa
enter
mov
flds
and
add
or
pushf
mov
pushf
mov
sbb
nop
ffree
or
fldl
rorb
dec
push
adc
and
lret
lock
jbe
fmull
sbb
sub
mov
mov
stos
into
lods
jae
xchg
jne
sub
mov
cld
faddp
rcrl
mov
and
mov
add
inc
repz
mov
cltd
dec
xor
lcall
cmpsb
fimuls
pop
and
add
jae
or
outsl
fildl
nop
lcall
add
inc
push
push
mov
pop
ljmp
adc
dec
mov
test
adc
adc
cmp
lds
mov
adc
sbb
arpl
jne
scas
jbe
aam
push
mov
jl
xchg
outsl
inc
add
xor
mov
mov
jbe
inc
adc
mov
cmp
adc
inc
add
cmp
xchg
jb
dec
movsb
mov
test
in
mov
sbb
shlb
push
sti
cli
fisttps
rorb
clc
add
mov
xchg
cmc
mov
xor
push
outsl
mov
xchg
or
jae
push
jmp
arpl
cli
and
sbb
aam
ljmp
xchg
mov
mov
pop
mov
push
outsl
fiaddl
js
lods
jmp
pop
jb
sub
gs
jb
push
mov
cli
cwtl
jno
pop
mov
push
cmp
es
adc
and
pop
dec
push
out
mov
dec
mov
xchg
mov
lods
xchg
loopne
stos
addb
mov
idivl
inc
pop
dec
int
mov
push
pop
fs
jo
lods
mov
sub
aad
in
add
sti
pop
sub
or
dec
aaa
mov
mov
push
mov
std
add
lea
cmp
loope
sahf
mov
loope
pop
jno
es
aas
cmp
add
xchg
repnz
add
adc
lock
xor
jno
and
jl
ja
imul
cmpsb
pop
divl
dec
cld
push
add
and
add
push
std
inc
movsl
xchg
les
scas
cmpsl
call
daa
test
aam
push
add
mov
push
push
add
in
fdivp
daa
test
push
push
mov
into
and
scas
je
lret
add
fdivr
mov
sarb
dec
fisttpll
lret
lds
in
add
jmp
mov
sub
adc
test
mov
ss
fdivrl
inc
dec
stos
je
scas
or
mov
fcompl
ja
lods
jge
mov
iret
push
je
adc
repz
orb
mov
add
test
movsb
or
sbb
stos
dec
add
ds
nop
std
sbb
popf
dec
enter
cmp
and
adc
out
sbb
mov
icebp
add
lret
pop
push
lods
inc
in
rep
add
fs
jb
push
add
imul
mov
pop
sbb
shrl
out
or
adc
dec
pop
shrl
add
stos
and
ja
mov
ljmp
outsb
in
jmp
inc
clc
lahf
lock
xchg
in
andb
add
fmuls
and
mov
pop
je
imul
inc
jne
mov
subl
push
imul
add
jb
psllw
cmpsb
sub
test
popa
push
hlt
enter
gs
xchg
nop
int3
push
mov
shl
or
test
push
stos
pop
push
cltd
xor
fcompl
das
scas
fcompl
mov
or
jne
push
repnz
xorb
push
repnz
test
mov
pop
mov
push
inc
jp
int
and
pop
jnp
add
fisttpl
cmc
jb
mov
ljmp
ficomps
cmpb
lret
cwtl
loopne
lods
xchg
push
repz
popf
bound
dec
dec
mov
cli
in
lahf
enter
sbb
test
pop
mov
sbb
jo
repz
sub
sbb
cltd
mov
lds
test
cld
inc
aam
add
jns
arpl
std
cmc
nop
daa
push
or
mov
dec
in
cmp
stc
add
fabs
js
sub
mov
imul
dec
add
inc
add
push
enter
enter
sbb
stc
xor
sbb
mov
js
mov
test
enter
mov
xchg
icebp
xchg
dec
push
and
mov
sub
movsl
adc
stc
out
mov
movsl
fsub
aam
sub
pop
jae
xchg
mov
mov
pop
push
sub
mov
test
fs
stos
push
sub
push
fs
mov
sub
fistpl
mov
sbb
jno
add
popf
mov
add
scas
gs
jmp
inc
and
jo
cmpsl
popf
pop
mov
sub
dec
mov
pop
testl
cmpl
push
in
sub
loop
cld
sbb
xchg
test
in
adc
jae
jl
aaa
push
xchg
inc
stos
xor
sub
add
pop
push
mov
add
cmpsl
ret
sub
inc
cld
dec
push
and
cmpsb
addr16
mov
pop
stc
std
lea
std
ret
into
fincstp
jnp
add
gs
or
dec
es
ja
or
sbb
iret
adc
cmp
and
mov
test
jno
ss
add
jge
xchg
jecxz
sbb
mov
imul
shlb
xchg
adc
mov
dec
add
fsub
test
add
and
in
add
roll
data16
adc
or
lret
lods
xlat
mov
mov
mov
push
inc
mov
dec
lods
icebp
orb
dec
in
inc
dec
in
pusha
sarl
push
pshufw
add
jne
mov
xlat
jo
popf
loop
mov
push
jge
es
or
pop
mov
xor
mov
push
xchg
pusha
sub
dec
js
in
daa
push
mov
xchg
dec
pop
pop
insl
add
cmp
pusha
xchg
mov
test
or
or
lret
push
cmp
push
fisttpl
mov
insl
sub
lds
out
lret
xchg
lcall
out
adc
test
leave
cmp
test
shll
scas
pop
nop
sub
ficoml
push
fwait
mov
mov
outsl
out
sbb
add
inc
xchg
cwtl
xor
mov
adc
mov
fildl
or
js
shlb
mov
rcrl
dec
hlt
scas
cld
sub
pslld
inc
xchg
xchg
push
popf
in
add
imul
xor
cmp
pop
xchg
xchg
mov
sbb
sub
cld
outsb
mov
call
lods
mov
dec
jns
out
lock
cld
sub
loop
xor
mov
jmp
pushf
jnp
fstps
sbb
add
data16
and
push
jg
inc
mov
gs
push
ss
push
xorl
hlt
pop
scas
mov
testl
fmuls
mov
adc
scas
enter
inc
dec
xor
adc
sub
enter
outsl
add
cli
cmpl
jecxz
and
jno
aas
stc
pop
call
movzbl
push
push
pusha
or
cwtl
sbb
mov
push
push
sbb
jmp
add
js
adc
jae
add
ja
das
ret
push
shll
das
pop
lcall
adcb
out
mov
imul
sub
and
xor
das
jne
stos
push
dec
test
push
mov
idivl
arpl
mov
outsb
ficoml
enter
es
mov
xchg
sbb
xchg
mov
data16
cwtl
dec
fldt
add
jbe
lock
adc
imul
pop
popa
dec
dec
loop
inc
lsl
ficompl
clc
test
roll
test
push
gs
dec
and
push
out
aaa
addb
and
sub
pop
jmp
filds
test
dec
fidivrl
pop
int3
push
mov
cld
mov
push
test
int3
lret
es
push
mov
leave
incl
dec
movsb
scas
inc
sub
dec
out
repnz
mov
lret
lds
xchg
in
lods
fldt
call
cmp
mov
repz
mov
jge
mov
cmp
xor
xchg
push
pop
dec
insb
adc
aad
in
lock
xchg
sub
xlat
es
dec
pop
jns
dec
test
adc
sti
leave
push
js
subb
fldcw
daa
inc
cltd
ds
popf
cmp
into
test
mov
pop
fisubl
addr16
lds
add
scas
xor
xchg
test
mov
ja
shlb
sub
insb
mov
stos
addb
sub
pop
mov
mov
pop
shlb
shlb
mov
lods
nop
or
incb
xor
pop
mov
lret
nop
push
cli
arpl
mov
add
and
imul
mov
mov
mov
mov
jle
cmp
inc
adc
mov
xor
mov
arpl
pop
pop
cli
in
test
or
cmpl
movsl
push
in
add
and
sbb
dec
rorb
add
pop
mov
or
xchg
std
push
in
mov
mov
mov
jnp,pn
mov
rolb
push
sbb
adc
int
imul
std
lods
pusha
and
push
pop
push
insl
fsubl
outsb
sbb
in
mov
xor
xchg
adc
adc
dec
adc
in
add
jno
sbb
xchg
pop
mov
shl
aam
cli
sub
pusha
adc
inc
lret
and
adc
ss
add
das
cmpb
dec
rorl
and
ret
shlb
mov
adc
and
push
push
icebp
shr
sub
mov
pusha
xor
dec
imul
add
pop
in
mov
adc
fnstsw
imul
stos
cmp
es
callw
das
and
subb
jno
dec
ljmp
mov
int3
sub
jb
insl
adc
dec
mov
and
adc
inc
sbb
test
cmpsl
jbe
mov
les
jle
or
mov
or
imul
xchg
cli
xor
scas
mov
or
and
enter
sbb
push
icebp
lsl
inc
mov
fnsave
mov
push
fildl
adc
mov
scas
dec
jb
jge
inc
sbb
mov
pop
add
scas
loop
popa
daa
pop
pushf
mov
push
mov
aaa
fists
aad
sub
fdivl
lret
sbb
jmp
dec
adc
inc
faddp
mov
and
loopne
pop
xchg
flds
mov
std
bnd
push
sub
adc
xchg
popf
xchg
das
scas
fsubrl
mov
mov
inc
cmpps
cmp
mov
lds
jecxz
test
repz
pop
mov
std
scas
push
inc
sub
mov
adc
sub
pusha
sub
fldl
mov
inc
stos
ljmp
mov
cwtl
jne
push
inc
cmp
mov
sub
stos
test
sub
pop
mov
loopne
jle
push
jno
push
and
repz
inc
sub
call
pop
jb
jo
mov
xor
adc
stc
push
mov
mov
popf
fs
int
enter
js
jae
out
data16
jp
jmp
aam
faddl
mov
popf
inc
push
xchg
sbb
cmp
add
xor
sbb
daa
push
mov
pusha
int3
fiadds
sbb
into
shll
std
sub
mov
jb
or
das
and
cli
mov
dec
mov
mov
outsb
mov
and
bound
movsl
je
cli
inc
push
xor
jae
sbb
jge
mov
in
or
mov
mov
out
sbb
mov
ja
xchg
imul
out
cltd
add
sahf
add
icebp
cmpsl
sbb
inc
adc
sub
pop
or
mov
dec
sub
cmc
adc
push
cmpsl
in
pop
insl
and
add
das
xor
add
push
leave
or
gs
push
aam
push
mov
aaa
xchg
mov
xchg
insl
es
out
or
cs
xorb
sbb
cld
popa
outsl
popf
jmp
jb
data16
loop
mov
jmp
xchg
add
test
cmc
xor
negb
or
pushf
mov
shlb
add
lea
sti
pushf
mov
repnz
xchg
lret
jnp
mov
xchg
sbb
or
shll
stos
out
xchg
stos
popa
pop
dec
movsl
cmp
fidivl
stc
jle
sbb
movsl
and
jmp
dec
sub
pop
xchg
and
cmp
jle
pusha
jnp
adc
cli
leave
arpl
mov
pop
call
xchg
out
and
add
cmpsl
pop
jno
test
or
add
xor
push
jmp
shll
pop
xchg
sub
hlt
addr16
jnp
loope
int3
mov
gs
pop
push
mov
lods
add
lret
jecxz
subb
repz
pushf
xchg
mov
mov
leave
mov
pop
pop
dec
subl
or
mov
call
les
hlt
popa
sbb
dec
cld
insl
push
dec
int
jg
mov
pop
out
in
popa
notb
loope
inc
jle
lea
clc
pop
loop
cwtl
add
push
sbb
xchg
jg
ret
sub
ljmp
shlb
xor
pop
mov
sub
loope
xchg
clc
dec
xchg
mov
jne
xchg
push
cld
rorl
mov
punpcklwd
inc
and
shlb
adc
cs
lret
inc
mov
leave
sbb
mov
hlt
mov
out
nop
cs
lcall
cmc
lds
add
shl
cs
into
imul
mov
outsl
push
pop
test
cld
gs
jbe
inc
sbb
xor
std
or
jl
das
jle
push
add
mov
mov
cmc
daa
pop
adc
jmp
mov
addb
lcall
cmp
lahf
icebp
iret
xor
adc
jo
ficoms
shlb
mov
and
push
andl
clc
rolb
mov
xchg
pushl
mov
ret
test
js
daa
mov
mov
fld
adcl
cld
fisttps
pop
push
bound
push
aad
and
daa
pop
pop
lods
pop
xorb
js
push
aad
inc
add
movsl
shlb
sub
mov
cltd
mov
jo
clc
push
or
jae
pop
sbb
js
push
xchg
pop
int
pop
aas
ficoms
mov
jnp
xchg
mov
add
daa
pop
pop
and
pop
xchg
scas
and
scas
jno
and
mov
cwtl
subb
clc
mov
adc
mov
dec
sbb
push
jbe
add
xor
out
pop
mov
mov
cmc
jmp
clc
jg
cmpsb
js
test
aam
ret
mov
cli
add
es
xor
or
add
stos
mov
xchg
into
notl
cmp
xchg
dec
xchg
mov
jge
sahf
test
rcrb
clc
pop
popa
cli
das
std
sub
pop
mov
sbb
mov
jmp
std
cmp
pusha
mov
dec
add
xchg
mov
mov
inc
stos
push
and
pushf
or
or
scas
imul
mov
jg
cs
sub
cmpsb
add
mov
mov
push
fdivp
or
jb
add
outsl
rclb
fisttpl
dec
int3
out
js
add
mov
push
outsl
pop
and
inc
or
aaa
stc
and
xchg
or
push
sub
les
out
jp
mov
or
sbb
pop
cltd
add
stos
aam
sbb
add
jecxz
pop
push
adc
sbb
jge
movb
inc
jns
sub
and
mov
mov
popa
call
jno
add
aas
xchg
xor
dec
mov
dec
ss
int
jle
loopne
ja
dec
in
or
sbb
shlb
sbb
add
mov
pop
sub
popf
mov
sbb
scas
or
cmc
outsl
sbb
xor
dec
dec
gs
mov
mov
fucompp
scas
call
add
test
xchg
lcall
or
pop
fstl
sahf
pop
das
and
add
lcall
mov
sub
push
scas
adc
popa
lods
std
sar
fs
stc
or
nop
insl
dec
fisttpl
dec
inc
or
mov
nop
test
sub
lret
dec
rcrl
int
fs
inc
mov
ja
mov
mov
xor
inc
add
cli
mov
mov
mov
jbe
hlt
sbb
dec
pushf
mov
ds
loop
xlat
pop
cmp
or
pop
xchg
inc
xchg
and
mov
xchg
out
nop
add
jno
xchg
push
dec
iret
dec
cmc
leave
in
notb
lret
mov
or
mov
or
into
ret
add
pop
xchg
mov
lret
adc
add
sub
push
jge
lahf
cli
lods
or
inc
adc
pop
call
jbe
inc
sub
xchg
mov
rclb
jle
dec
imul
stc
ds
dec
sarl
ficomps
add
mov
add
jg
pushf
sbb
movsl
repnz
add
push
xor
xchg
jle
loop
and
dec
adcb
adc
mov
data16
and
adc
xor
mov
or
xchg
stos
movsb
pusha
cmp
lea
out
fldl
xor
or
xor
mov
mov
mov
movsl
pop
out
sbb
jne
adc
adc
mov
adc
cmp
jb
xchg
fcmovbe
pop
popf
rorl
ja
aam
inc
call
scas
and
add
inc
add
shlb
cmc
nop
adc
popf
push
and
push
sub
mov
cmp
add
or
sub
mov
and
call
xchg
add
jp
push
jb
sbb
out
sub
xor
out
ret
jmp
pushf
call
rcrb
mov
add
fdivrp
out
test
andb
sbb
adc
push
mov
stos
aaa
frstor
sub
mov
stos
sahf
add
jnp
xor
shll
fcomi
imul
adc
ljmp
dec
cmp
inc
insb
sbb
jbe
movsb
out
cmp
xor
popf
push
adc
sub
popf
xlat
dec
push
pusha
clc
jno
loopne
cmp
popa
dec
fwait
test
add
cmp
cmc
adc
sub
mov
add
aam
mov
sub
xor
jo
xchg
inc
ds
add
pop
and
sbb
xlat
pop
ret
push
sbb
sbb
xchg
out
add
pop
xor
xchg
push
mov
jmp
pop
addr16
cmpsl
fsubl
push
ret
repz
dec
pop
cmp
shll
push
mov
inc
les
pop
push
dec
cmpsb
xor
cmp
inc
xchg
push
add
stos
lea
test
shlb
int3
dec
or
mov
mov
xchg
or
div
push
push
int3
mov
inc
pop
scas
sub
sub
in
sbb
jno
cs
pop
jmp
xor
lods
pop
pop
push
in
mov
sbb
add
fsubrs
adc
iret
cmp
sahf
fcomps
pop
out
xor
popf
adc
out
add
aam
or
and
xchg
push
mov
mov
aad
aas
aam
ja
lahf
lock
push
add
xchg
jl
std
shll
mov
pop
mov
xchg
add
ficomps
push
insl
fiadds
pop
jle
cli
mov
lahf
les
cli
lea
cmp
and
mov
dec
dec
je
pop
incb
xlat
push
xchg
cmc
cwtl
pop
push
in
adc
adc
mov
xor
mov
inc
xlat
or
sbb
pop
dec
and
popf
push
adcb
xchg
test
adc
je
scas
lods
cmpb
jns
add
rcrl
or
stos
repz
push
daa
popa
in
insb
rcrb
xchg
pop
xor
nop
add
pop
popf
std
pop
jmp
cs
fdivs
push
mov
xchg
scas
mov
and
daa
and
push
cmc
sub
adcb
or
shl
sti
std
jge
mov
and
dec
jnp
and
xchg
jge
pop
or
mov
test
fildll
and
bound
das
and
fwait
jo
js
out
or
mov
repz
fsubl
or
ret
jp
add
pop
ds
je
fs
scas
imul
sub
lea
lock
lahf
je
dec
xlat
mov
test
nop
stc
push
push
pop
mov
inc
push
xor
outsl
call
mov
mov
cmp
pop
xchg
out
xchg
test
jmp
sub
sti
mov
cwtl
push
mov
add
push
and
mov
sbb
mov
jg
aad
imul
jg
mov
ljmp
lret
sbb
fwait
call
or
inc
ja
xchg
push
push
in
jl
mov
jl,pn
leave
mov
ljmp
xchg
dec
cmc
iret
aad
sbb
lea
pop
push
adc
xchg
mov
pop
es
adc
add
orb
jmp
out
lcall
jne
lret
dec
mov
push
jns
jnp
fsubr
testl
mov
lods
or
dec
sarb
cli
insb
fsubl
fmul
xor
out
push
cwtl
cmpsb
fimuls
es
sub
sub
jnp
dec
sbb
das
pop
mov
push
ficomps
jno
insb
stos
xchg
pop
or
imul
ret
xlat
int3
xchg
cmp
ds
sbb
mov
lock
scas
faddl
mov
jmp
mov
gs
pop
mov
ds
test
iret
ljmp
sbb
pop
adcb
or
push
testl
daa
jmp
add
fs
mov
jl
and
pop
stos
data16
mov
hlt
enter
adc
add
inc
fadd
xchg
or
add
leave
cltd
mov
nop
push
cmp
insb
and
pusha
add
add
cltd
cld
sub
mov
push
pop
dec
ret
adcb
scas
adc
jmp
mov
orb
das
inc
lcall
lahf
xchg
pushf
adc
push
jl
push
bound
orb
cs
lock
jo
gs
jo
push
jo
push
lcall
inc
leave
pusha
cwtl
sbb
cmp
out
dec
sub
push
adc
and
or
sbb
push
nop
push
xchg
mov
jp
in
orl
and
sub
pop
mov
push
cmp
push
mov
cli
shlb
add
push
incl
adc
movb
add
std
decb
imul
ja
ficompl
add
push
push
mov
or
jne
movzbl
inc
mov
jae
sbb
xor
sbb
dec
mov
test
pop
iret
add
jmp
inc
and
out
paddd
cmp
or
shrl
lcall
data16
sub
mov
int
cmp
dec
or
mov
cmpl
xor
imul
inc
test
std
inc
lods
arpl
mov
cwtl
lret
mov
ret
shr
mov
imul
les
xor
and
mov
dec
inc
and
mov
stc
rolb
shr
test
rcrl
mov
xor
or
or
and
enter
in
shr
loopne
xorb
pop
es
mov
sub
xchg
ret
jmp
push
fs
dec
push
inc
or
push
test
fwait
testl
or
cli
add
cmp
inc
fs
sub
xchg
and
rorb
push
or
mov
leave
pop
nop
jne
add
or
insb
sub
push
sub
adc
or
sbb
push
and
mov
push
jne
sahf
data16
adc
mov
mov
xor
pusha
in
jbe
and
cmp
sbb
lahf
pop
sbb
dec
xchg
adc
cmp
and
xchg
xchg
stc
and
test
pop
jmp
mov
decl
cmp
fadd
cmpl
pop
cltd
call
dec
mov
xor
dec
dec
xchg
push
sub
jae
push
lahf
lds
lahf
roll
xchg
adc
and
pop
mov
test
pop
pop
cld
ret
leave
ret
or
in
cmpsb
or
rorl
es
arpl
in
pop
mov
test
hlt
add
mov
ficompl
add
add
mov
mov
or
lock
or
adc
cmp
xor
add
notl
mov
adc
and
nop
pop
ja
jmp
pop
add
es
nop
movsb
mov
add
mov
mov
or
sub
push
sbb
pusha
fdivrs
in
test
pop
rorb
out
jno
loop,pt
cmp
inc
ret
adc
cmp
arpl
sahf
mov
out
and
pushf
sub
data16
and
daa
bswap
nop
cmc
adc
push
fidivrl
xchg
out
cmpsl
cmp
dec
xor
or
out
lock
jecxz
mov
push
mov
loope
pop
add
icebp
mov
dec
std
cmp
adc
jmp
xor
mov
test
test
mov
aad
mov
dec
add
pusha
jecxz
jno
out
push
sbb
add
dec
psubd
jp
and
fdivr
sub
mov
imul
fidivl
xchg
mov
add
mov
scas
loopne
pop
cmp
test
mov
jle
pop
cmp
adc
imul
gs
shlb
jmp
dec
shll
hlt
mov
cmp
cs
mov
addr16
or
shll
jg
inc
push
pop
sbb
pop
add
jae
pop
pop
mov
shll
and
scas
xor
add
popf
cltd
adc
fcompl
cmp
in
adc
xchg
jne
testl
cwtl
xor
shll
sti
add
pop
pop
mov
mov
adc
aam
leave
js
dec
sbb
inc
decl
in
andb
in
out
adc
flds
pop
andl
in
fwait
push
insl
scas
xchg
pop
push
adc
int
xlat
mov
add
out
and
dec
pop
popf
inc
cmp
ljmp
lahf
xor
jmp
icebp
mov
push
add
lods
mov
mov
out
into
and
sarb
out
xchg
add
test
stos
fstpt
movsl
xchg
push
js
jno
jnp
or
jne
pusha
inc
mov
mov
fldcw
dec
loopne
sbb
and
jo
cmp
nop
shlb
arpl
rolb
push
fildl
insb
add
sbb
shlb
jle
xchg
arpl
pop
int
scas
jno
testb
xchg
in
mov
add
pop
sub
adc
jecxz
push
push
add
add
lock
jb
popa
mov
outsl
dec
add
xchg
loopne
sbb
call
xchg
ja
push
add
xchg
mov
inc
fwait
mov
or
aam
les
pop
mov
push
mov
dec
sti
jg
pusha
mov
js
jno
clc
ja
jle
pop
scas
push
flds
jp
test
mov
out
mov
es
add
aad
testb
jno
jecxz
mov
push
xlat
adc
mov
sbb
into
outsb
mov
int
add
mov
idiv
cmp
inc
ds
pusha
ja
fstpl
sub
stos
dec
push
dec
xchg
mov
pop
adc
xor
jg
ss
dec
jbe
add
push
jo
cmp
test
add
push
lcall
mov
inc
sub
aam
flds
xchg
push
insl
pop
data16
inc
mov
inc
sub
enter
repnz
sub
xor
add
jno
out
xchg
testl
xchg
lock
cltd
mov
cmp
insb
add
sarb
imul
cs
xchg
sti
test
pusha
xor
xchg
leave
add
out
sbb
sbb
cmp
outsl
inc
rorb
aas
add
mov
add
pop
push
shlb
shrb
cmpsb
or
lock
push
flds
sub
lds
add
mov
das
or
mov
lret
mov
add
mov
mov
sbb
pop
popl
and
clc
jno
add
and
add
daa
jge
mov
add
push
or
lret
push
mov
cmp
cmp
fisttps
cmpsb
cmp
and
jnp
cmp
rorb
sbb
or
push
fisubs
dec
repnz
std
mov
mov
xchg
jl
scas
sbb
cwtl
test
sbb
insb
nop
xchg
xchg
xor
loopne
ja
movsb
test
movsl
sbb
add
mov
cli
and
outsb
fsubrp
or
dec
imull
aad
xchg
lods
andl
rcr
mov
add
and
adc
cld
lahf
add
inc
ljmp
jle
jl
jg
jb
mov
aad
add
js
add
jg
cmp
pop
add
aas
push
sbb
jae
iret
lcall
movb
or
daa
sbb
mov
shll
fs
cmp
xor
ds
add
icebp
sub
fldcw
data16
popa
sbb
rcrb
or
jae
cmp
pop
ja
rdpmc
dec
flds
mov
cmp
add
xchg
rorl
jl
rolb
in
or
jl
add
nop
sbb
cmc
ljmp
imul
jb
xor
jl
fldenv
add
fwait
add
loope
and
fiaddl
inc
daa
scas
arpl
insb
cs
sub
ret
inc
insl
test
sbb
in
lahf
xor
adc
inc
dec
imul
dec
insb
popf
cmp
and
adc
leave
xor
cmpsb
pusha
arpl
add
xchg
push
shrb
add
inc
jle
push
jnp
add
dec
cs
popa
sar
mov
lds
and
mov
ret
fimull
push
push
mov
inc
add
test
gs
xor
fisttpll
pusha
mov
jg
insl
or
sub
pop
orb
mov
cli
sub
xlat
incl
and
push
es
jmp
or
shlb
adc
movb
sbb
jno
sub
shlb
mov
and
jns
and
lahf
popf
add
xor
mov
cltd
rorl
icebp
fs
gs
add
mov
mov
fiadds
int3
pop
imul
int
mov
inc
and
scas
xor
roll
adc
fpatan
rorb
jbe
stos
add
or
mov
or
cmp
mov
clc
xor
jo
dec
push
clc
sub
jl
xor
js
mov
push
jge
outsl
add
addl
pusha
js
sbb
pop
push
mov
push
dec
mov
inc
or
mov
add
or
jge
loopne
mov
add
jl
mov
mov
adc
inc
popf
push
mov
add
push
mov
jno
dec
or
int
sub
andb
loope
add
mov
cmpsl
xchg
jno
push
rolb
or
insl
outsl
mov
sub
scas
cmp
rcrb
dec
es
cmpsb
adc
sub
pop
out
mov
inc
ljmp
test
push
sbb
mov
bound
lret
test
mov
push
dec
and
mov
inc
mov
lret
mov
sub
adc
dec
inc
mov
push
xor
push
dec
inc
mov
gs
fcomps
jo
and
mov
sub
fisubl
jo
xchg
mov
add
add
in
test
cmp
ret
inc
add
in
xor
pusha
add
adc
sbb
cmp
mov
lahf
cmpsb
dec
add
cmp
rcrl
cmp
dec
stc
and
cmpsb
out
jno
stos
jne
xchg
femms
out
push
mov
dec
mov
pop
mov
adc
gs
lret
inc
movsb
mov
cmp
cmpb
add
cmpl
gs
hlt
xchg
std
or
dec
out
loope
sub
add
stos
push
cmp
leave
lret
dec
jbe
dec
ficompl
cmpsb
inc
daa
mov
add
dec
lds
aam
push
dec
jecxz
lret
orb
jp
mov
lret
push
inc
xor
sub
jno
movsb
mov
sub
lcall
add
sub
sub
push
fadds
add
lea
test
jl
ficomps
sti
push
mov
or
inc
faddp
cmpsl
add
int3
add
inc
aas
pop
movsl
push
cmp
sbb
inc
mov
and
add
loopne
in
popa
add
jnp
loope
pop
loop
xor
rolb
xchg
sub
jle
sbb
dec
icebp
mov
cmp
jmp
andb
je
inc
xor
outsl
mov
cmp
add
jbe
adc
push
mov
push
js
add
scas
add
bound
or
sbb
ret
mov
xchg
lahf
xor
adc
or
and
adc
shrb
outsb
aaa
xor
sbbb
push
sti
sub
xchg
out
nop
pop
ss
add
orb
cwtl
sbb
cmp
aaa
subb
loope
mov
push
je
pop
add
add
decb
push
and
jns
add
xchg
and
sarb
sbb
xor
jle
xor
xchg
fld
rorb
jb
lcall
add
sub
shl
aas
xchg
jl
out
shl
xor
mov
shll
lock
xchg
mov
xchg
jmp
pop
add
mov
mov
movsl
shr
and
mov
pusha
or
jb
pop
pushf
jl
dec
mov
add
xor
and
xchg
or
shrl
sbbl
out
add
cmp
fcompl
push
adcl
mov
in
jo
mov
test
movsb
jnp
lods
stos
xchg
cmp
xchg
xor
push
rcrb
push
add
lods
fcmovnb
push
lcall
les
ds
add
popf
inc
cli
xor
aad
cli
ja
add
push
out
jle
mov
loope
mov
clc
js
xchg
adc
outsl
je
sub
in
jne
fstpt
push
mov
mov
add
and
call
push
pusha
lods
aad
cld
outsl
push
inc
aad
lret
out
add
sub
jp
and
cmpsb
pop
scas
in
or
cld
addb
sub
inc
jbe
add
mov
inc
movlps
push
ds
xor
sub
loope
jle
add
mov
inc
lcall
inc
sub
nop
in
or
lret
sbb
push
daa
or
leave
fidivs
cmpsb
sbb
pop
andl
mov
pop
in
mov
mov
adc
mov
cmp
jmp
push
sub
shl
add
test
aas
mov
dec
or
loopne
cwtl
sbb
repz
jb
icebp
jns
mov
mov
add
arpl
test
add
pop
loope
push
push
pusha
pop
add
mov
in
pop
je
push
xchg
push
adc
xor
mov
push
ret
add
sub
test
xor
rclb
inc
sbb
mov
out
lahf
cltd
mov
sbb
xor
add
nop
jb
in
push
push
mov
in
sbb
cmp
addb
xor
nop
adc
andb
dec
add
sbb
rorl
lea
inc
ds
xor
lcall
and
xor
movl
lods
bound
idivb
daa
add
mov
call
push
jb
ret
cld
xor
aas
lods
mov
jo
push
add
sub
push
lret
ret
mov
jne
add
mov
lock
push
pop
and
ficoms
insb
cmp
addr16
subl
sub
aaa
pop
cmpsl
leave
int
sub
or
repnz
divb
pusha
testl
fcoms
dec
pop
movsl
fnsave
shll
loope
pop
ljmp
mov
adc
adc
add
xor
push
adc
mov
inc
cltd
out
enter
ss
fadds
inc
xor
fcmovnbe
jno
add
mov
pop
add
mov
add
cmp
lcall
add
xchg
mov
sub
lds
sbb
nop
jb
out
add
push
insb
mov
outsl
hlt
xor
mov
add
dec
stc
mov
fnstenv
pop
imul
add
jnp
xor
pop
mov
shrb
sbb
xlat
int3
mov
adc
xchg
insl
mov
sub
test
mov
mov
jno
cmpl
push
mov
cmp
mov
int
sbb
add
stos
inc
pop
add
jecxz
push
cs
jne
push
add
fbstp
out
pushf
sbb
jg
dec
mov
add
imul
roll
arpl
jno
dec
gs
cltd
into
repz
inc
outsl
mov
inc
shl
adc
push
sbb
popa
add
subb
pop
add
roll
sbb
and
xchg
clc
push
inc
pop
or
or
and
sbb
or
pusha
inc
fisttps
add
mov
add
in
add
aad
mov
mov
adc
sbb
mov
push
fsubrs
xchg
add
mov
pop
test
xor
inc
jo
jg
addb
scas
mov
xchg
rcll
cmp
jl
sarb
push
cmp
imul
or
pushf
sub
rcll
lds
in
add
lock
repnz
push
rorb
xor
pop
jne
rcrb
xchg
rcll
andl
jae
loopne
jo
push
add
in
roll
dec
xchg
dec
cwtl
add
test
inc
mov
add
rorl
add
movsb
fsts
add
mov
nop
mov
mov
adc
cltd
mov
sbb
loopnew
mov
jns
insl
xchg
mov
repz
sahf
out
mov
mov
or
and
push
sbb
cmp
imul
inc
push
cmpsl
loopne
sbb
sbb
add
dec
add
aad
push
mov
ljmp
or
int
aaa
dec
lds
aad
xbegin
lahf
inc
std
nop
jae
fdivr
xchg
dec
jecxz
adc
mov
shll
add
adc
sbb
out
xchg
add
push
jmp
ret
pop
add
and
lahf
int
imul
xchg
mov
or
ret
add
les
enter
mov
cwtl
clc
ret
add
mov
jp
in
lods
sub
sub
ljmp
xor
jo
mov
push
aas
enter
clc
or
sub
std
adc
sub
jge
movsb
out
inc
and
rcrb
lea
data16
sti
test
and
sbb
add
or
mov
pop
mov
lock
sbb
in
inc
cli
cld
dec
adc
dec
cmpsl
add
jg
mov
ljmp
or
loopne
add
inc
ds
mov
inc
orb
pop
popa
cli
adcl
or
sti
in
push
out
adc
and
add
call
lods
ret
inc
mov
adc
mov
cmpsb
xchg
pop
add
mov
aad
pushf
add
xor
scas
dec
mov
mov
jle
sbb
fdivs
rorb
jae
cmp
mull
int3
jmp
jne
push
mov
sti
cltd
cmc
stc
lock
add
test
or
lea
bound
ljmp
sbbl
dec
pop
test
or
mov
add
xor
iret
push
cmpsb
sbb
or
sahf
pop
xchg
scas
movb
jg
jmp
imul
jle
adc
push
jbe
bnd
cmp
iret
mov
inc
insl
hlt
clc
imul
inc
pop
out
xor
pusha
push
ret
cli
out
and
insb
pop
mov
pusha
rolb
loop
add
cmp
and
mov
cli
loopne
add
mov
sub
movsl
add
inc
and
sbb
pop
xchg
pop
into
sbb
xor
lock
iret
shlb
cltd
add
pop
mov
pusha
mov
fiaddl
je
cld
ret
mov
ret
in
sbb
mov
cld
arpl
int3
cmp
adc
roll
movsl
test
adc
shlb
movsb
and
test
addb
mov
cs
in
lock
mov
mov
repnz
lahf
mov
fwait
sub
jg
add
cmpsl
adc
add
jge
jne
ljmp
cmp
je
aas
sbb
ljmp
das
inc
fsubs
and
cwtl
or
xor
jecxz
sub
xchg
notl
fiaddl
lret
add
mov
inc
out
add
ret
cmp
cmpsb
daa
jl
add
scas
sarl
hlt
jno
loop
add
add
pop
push
sarl
in
add
and
das
add
jle
mov
cmp
pop
pop
sbb
mov
add
pusha
data16
cmp
aaa
sbb
sbb
and
fmul
add
sbb
lds
jnp
push
pop
movb
mov
movsb
add
mov
cld
push
loope
jae
jns
cmp
xlat
fnstcw
shll
into
pusha
adc
mov
mov
mov
in
sti
add
dec
rorb
push
out
movsb
add
xchg
scas
jbe
jnp
add
shl
dec
repnz
xlat
aas
adc
in
add
add
jnp
mov
inc
lret
lret
in
inc
pop
mov
cmpsl
dec
sbb
mov
test
mov
add
xchg
roll
jmp
jecxz
repnz
fadds
xor
cmp
cmp
loope
push
aad
push
adc
add
shlb
push
xchg
add
loope
clc
js
xchg
push
add
fwait
popa
pusha
mov
addl
and
jns
mov
scas
or
fcmovb
jp
add
jmp
cmp
add
add
inc
mov
pop
insl
mov
inc
sub
or
lret
clc
fnstsw
icebp
cmp
pushf
adc
aad
push
jno
add
gs
jl
sbb
adc
lret
call
sbb
inc
sbb
or
cld
in
push
paddd
mov
sub
mov
jg
sub
gs
mov
push
xchg
xchg
addb
cld
popl
cmp
ret
mov
adc
ja
data16
scas
pusha
dec
ret
sub
jecxz
pusha
dec
jp
cmp
rorl
xchg
jmp
outsb
adc
sub
jge
add
add
aaa
xchg
aam
imulb
enter
add
clc
or
sub
lock
fisubl
jl
mov
push
arpl
lock
and
addb
xchg
lods
add
js
adc
jbe
add
mov
xor
push
cmp
adc
jmp
out
pusha
mov
pop
dec
test
xchg
cmp
sub
leave
inc
je
les
cmp
sahf
xchg
push
xchg
sub
jno
cmp
sarb
push
pushf
imul
and
inc
cld
sub
outsl
pop
pusha
jb
out
or
in
repz
add
nop
int
push
in
cmp
arpl
or
es
fcom
push
ficoms
pop
loopne
add
fs
adc
jbe
pushf
add
adc
jp
inc
popa
sub
in
aas
shlb
cmp
imul
sbb
sub
pmaxsw
jg
add
push
adc
mov
jbe
shll
dec
addr16
adc
push
icebp
mov
and
pop
data16
sbb
adc
pop
cld
fistpll
cmpsb
jmp
ja
xchg
inc
add
movsb
daa
addr16
mov
repz
add
jns
ret
adc
adc
jne
add
inc
imul
pop
add
bound
jle
shr
jg
in
sbb
aam
test
mov
movsb
filds
nop
fdivrs
scas
mov
xchg
and
sbb
add
jmp
or
enter
lea
fildl
inc
cmp
daa
rcrl
sbb
mov
add
pop
lea
pop
mov
add
cmp
cmp
sub
ror
or
cmp
scas
outsl
and
pop
add
add
mov
sbb
and
filds
loopne
push
sti
sbbb
iret
std
add
adcl
in
hlt
test
add
lcall
push
mov
or
cs
xor
dec
dec
sbb
les
dec
addr16
add
enter
aas
out
add
ret
add
inc
add
push
popf
pusha
scas
push
mov
adcb
jecxz
xchg
mov
push
jle
jg
rolb
mov
pop
or
mov
mov
add
out
mov
or
mov
mov
shl
add
push
sbb
cs
adc
add
cmp
dec
add
adc
xchg
jno
std
xchg
fadds
inc
push
outsb
test
or
lret
mov
add
popa
pop
popa
pop
add
xchg
sbbl
push
test
mov
scas
pop
push
and
and
add
dec
or
add
dec
or
loopne
xor
arpl
xchg
add
inc
pop
fmull
stc
add
fs
jg
addl
mov
add
int3
dec
add
pop
push
in
out
sub
shr
mov
bound
and
psllq
xchg
or
aas
or
pop
fwait
cmp
fs
mov
loope
dec
rclb
mov
add
into
jg
inc
les
add
mov
out
pop
aaa
notl
xchg
out
and
sbb
hlt
mov
mov
mov
in
icebp
std
setge
jle
add
lcall
xchg
test
pop
push
mov
movsl
xchg
mov
repz
rcrb
call
gs
push
pop
dec
cmpsl
shlb
movsl
add
jo
adc
xor
lret
dec
outsl
dec
or
push
pop
pop
arpl
add
mov
movsl
dec
adc
mov
rorb
sti
and
imulb
fsubrl
in
ja
mov
or
mov
cs
mov
aas
dec
lret
popa
sub
mov
pop
in
xchg
xlat
lods
add
dec
fs
add
ss
fiaddl
andl
mov
mov
pop
pop
or
jge
sub
sub
and
ljmp
xchg
add
cwtl
mov
cmpsb
out
pop
xor
in
jns
adc
inc
shll
aam
add
mov
add
lret
add
dec
test
add
or
icebp
xchg
or
jmp
leave
adc
and
imul
xchg
xchg
add
xor
xor
out
loopne
dec
shrl
stos
js
inc
add
add
jecxz
push
and
ffreep
sub
in
out
loope
add
add
and
andb
aam
add
decl
mov
in
pop
add
sub
enter
jge
jns
pop
dec
adc
lahf
xchg
add
adc
jmp
jo
add
mov
stc
push
sbbb
ret
repz
nop
dec
mov
ltr
jmp
in
or
push
filds
xchg
jns
iret
je
mov
ret
mov
inc
int3
in
aas
push
pop
aad
add
mov
das
or
jge
pop
mov
sub
add
mov
ja
sbb
add
adc
add
out
cmpsb
lods
sbb
inc
add
mov
fmuls
cli
adc
mov
push
xchg
cwtl
push
push
out
add
out
sbb
mov
mov
and
test
pop
subb
inc
addb
insb
pop
out
sub
es
cmp
stos
jb
ret
fs
jmp
cmc
xorl
stos
adc
xlat
push
add
mov
pop
out
add
orb
push
jp
aad
rorb
fwait
push
shl
jno
push
ja
cmp
lods
je
and
add
ficomps
add
adc
sbb
mov
dec
clc
leave
dec
outsl
push
hlt
xchg
popf
and
inc
int3
test
sti
out
divps
lcall
mov
mov
push
push
xchg
and
rcrb
lcall
jle
push
cmp
adc
mov
push
sub
ja
shl
jecxz
sub
inc
mov
divl
jnp
iret
fisubrs
or
push
mov
or
pop
sbb
add
pop
add
bound
fs
sub
inc
and
or
xlat
mov
shlb
add
inc
movsb
lret
mov
aam
lods
pusha
push
cmp
pop
lds
xor
dec
xchg
mov
js
or
and
jns
loopne
into
xchg
mov
and
pop
add
mov
aas
mov
cmpsb
push
adc
es
xor
in
inc
test
fcmovu
mov
lods
sbb
or
mov
cli
icebp
cmp
inc
jecxz
aaa
les
push
lcall
mov
mov
les
add
push
and
test
and
stc
js
cmp
mov
jbe
test
mov
mov
mov
rolb
sbbb
mov
mov
dec
into
jno
add
call
enter
movnti
jecxz
sub
ja
inc
xlat
insb
push
add
mov
and
sub
out
add
xchg
pop
pop
data16
jl
loopne
add
push
mov
inc
add
pop
add
loope
dec
push
jmp
in
cmp
add
xchg
lcall
inc
icebp
add
jb
clc
lret
in
dec
push
sbb
or
jl
sbb
mov
add
dec
popf
je
xchg
dec
in
in
jl
add
icebp
aam
add
js
enter
push
cmp
jp
cmp
pop
mov
jbe
sub
mov
pusha
mov
sub
cmp
push
loop
das
push
inc
xchg
ljmp
lds
jecxz
lock
mov
in
fsubrs
aad
int
and
rorl
add
push
and
fcomps
push
add
cmpsb
mov
cmp
fisttps
inc
and
dec
and
pusha
std
aam
jmp
add
xchg
dec
push
fbstp
jle
or
xchg
add
test
jecxz
iret
sub
les
xchg
lock
shl
lods
stc
pushf
xchg
jno
repz
js
cmp
add
mov
cmp
pop
xchg
cmc
fsts
add
pop
inc
ret
lds
shl
push
test
cmp
in
pop
testb
adc
int
add
outsb
je
ret
inc
mov
xor
xchg
xor
mov
insl
add
das
adc
xchg
pusha
adc
add
sub
movsl
dec
mov
and
add
in
cmpsl
daa
int3
add
pushf
mov
cwtl
incl
divl
leave
cmp
fwait
mov
js
and
stc
fisubl
clc
or
mov
adc
xchg
movsl
out
add
das
pop
xor
mov
jnp
cmp
iret
add
or
dec
add
add
rclb
jbe
sbb
stos
jnp
add
jge
cmc
push
mov
add
mov
push
sbb
inc
test
sub
leave
in
vcvtsi2sd
stc
jmp
cs
jne
add
jecxz
stos
sbb
or
add
icebp
push
mov
add
xchg
mov
mov
cmpl
fsubrl
adc
out
inc
add
jp
out
aad
insl
cmp
add
push
xor
pop
jmp
mov
jmp
js
cltd
pop
jo
daa
repnz
add
rolb
xchg
cmpsl
and
xchg
adc
dec
lahf
divb
scas
mov
jl
cltd
jmp
out
sub
add
pop
loopne
and
ja
xchg
mov
daa
aam
ret
xor
inc
or
add
mov
pop
sub
cmpsb
mov
inc
pop
push
push
mov
mov
dec
or
adc
rcr
dec
add
and
jle
gs
add
lock
pop
mov
or
sub
sub
mov
cltd
cmp
int3
pop
add
or
inc
adc
scas
push
ljmp
mov
push
jmp
lods
jg
jmp
fstpt
test
cwtl
mov
add
push
in
shlb
add
dec
outsl
sbb
loop
testl
lret
ret
cmp
das
imulb
les
and
test
push
adc
lcall
add
pop
sahf
mov
pop
lods
push
push
das
lahf
pusha
dec
je
lock
sbb
jge
fucom
mov
cmp
or
mov
jo
add
in
cmp
cmp
or
jbe
dec
mov
add
jg
add
nop
call
push
std
clc
aam
lret
in
cmp
adcl
lcall
xchg
and
outsb
dec
push
cmpsl
aam
sbbl
shll
repz
mov
fists
out
ret
mov
cmp
sub
rclb
fisubrs
add
jno
imul
xor
adc
pusha
inc
mov
in
loope
pop
pop
test
or
mov
jb
xor
xchg
sub
mov
mov
clc
iret
pop
sbb
mov
add
push
pop
push
add
fldl
xor
enter
addl
dec
jo
sbb
push
icebp
faddl
pushf
dec
adc
imul
int3
loope
pop
add
scas
inc
mov
aas
push
cli
repz
mov
addr16
jl
push
jne
loop
shlb
aas
lock
into
mov
jle
mov
es
popl
mov
dec
jns
andb
lock
and
loope
inc
cmp
adc
fmuls
insb
je
lods
push
daa
add
sub
mov
add
inc
cmpsb
dec
cmp
jo
loopne
ror
pop
pop
out
adc
add
or
sbb
xchg
push
xor
inc
cmp
add
cmp
inc
inc
adc
pop
ror
add
cmp
add
sub
out
push
insl
inc
addb
sbb
sub
jae
xor
orl
add
gs
test
popa
push
cltd
pop
cli
and
sub
inc
ds
pop
cmc
push
int3
or
rorb
jae
push
rcll
icebp
fs
es
push
add
xlat
xor
imul
push
jne
loopne
push
nop
adc
imul
add
cld
inc
pop
add
aaa
and
into
add
sub
cld
adc
push
push
cs
or
testl
xor
insl
or
pop
inc
pop
stos
add
repz
mov
sub
lret
jle
add
pop
fs
or
xchg
push
add
push
out
sbbb
int
add
xlat
scas
xor
ret
or
dec
and
fiadds
lods
outsl
dec
bound
in
mov
call
pop
loope
xchg
sub
inc
mov
inc
adc
sbb
mov
push
jae
pop
jns
ret
mov
xor
pop
mov
les
fnstenv
loope
lret
jae
push
outsl
push
scas
add
pop
or
add
xor
mov
add
ret
dec
daa
add
fldenv
aaa
mov
rolb
testb
pop
push
scas
cmc
imul
sbb
stc
add
pop
arpl
aas
bound
push
xorl
sub
out
cs
popf
sub
sbb
dec
or
fsts
mov
or
shll
rolb
pop
add
add
adcb
daa
push
out
push
sub
repnz
add
jl
je
mov
sbb
sbb
enter
inc
pop
cltd
jp
inc
shlb
ja
cmpsl
nop
jbe
push
pop
test
hlt
sub
xor
add
icebp
popf
add
xor
sbb
pusha
ret
es
mov
push
das
loop
clc
lds
repnz
or
push
hlt
js
and
call
xchg
mov
addr16
popa
fmul
pop
add
cmp
or
ljmp
mov
or
xor
add
push
sbb
add
add
adc
clc
fucomp
scas
hlt
ret
cmp
lods
push
out
mov
ss
jb
mov
cmp
iret
push
popf
mov
ljmp
movsb
add
and
jecxz
imul
pop
push
mov
popa
je
lods
std
push
ret
add
jmp
jl
loop
dec
shlb
mov
ret
sbb
jmp
ficoms
inc
pop
pmaddwd
cwtl
sahf
jg
inc
out
nop
or
shl
and
sub
mov
ljmp
pop
sub
ror
mov
neg
pushf
push
jbe
iret
sub
addb
xor
fnsave
mov
xchg
movsb
adc
lea
and
flds
jnp
mov
movsb
addb
sbb
jns
sbb
inc
rcrb
cmpsb
dec
cs
pop
dec
mov
inc
push
nop
push
push
roll
xchg
cwtl
cmp
popl
lahf
lds
test
xchg
enter
sub
and
cmp
test
or
add
add
sub
push
jl
into
xchg
jecxz
sbb
push
divl
cmp
movb
mov
inc
paddw
add
lret
jecxz
add
mov
dec
mov
fs
mov
bound
insl
or
lahf
pusha
add
add
sbb
cwtl
dec
pop
ficoms
es
add
movsl
loopne
fistpll
jnp
xor
das
add
mov
xchg
lcall
ja
aam
sub
sub
imul
xchg
xor
lret
xor
addl
and
stos
pop
lahf
dec
add
sbbb
rclb
movsb
pop
xor
adc
aaa
bound
mov
shlb
and
popf
lock
inc
sar
and
pop
xchg
xchg
imul
addr16
sub
jecxz
sbb
js
lock
add
sub
out
jae
cmp
notb
nop
stc
mov
pop
movsb
add
out
cmp
jmp
jg
stos
pusha
xor
push
push
aaa
add
sub
sub
add
xor
and
xor
mov
add
xchg
loop
lcall
leave
notb
push
push
add
adc
mov
movsb
mov
test
add
rorl
iret
cltd
scas
ret
ljmp
cmp
mov
sbb
stos
adc
add
js
add
xchg
push
add
xor
std
sbb
movsl
shlb
adc
adc
mov
dec
dec
lods
insb
add
pop
jo
or
sahf
daa
fwait
jl
push
add
lret
outsl
xchg
pop
dec
in
or
jnp
xchg
les
rcrl
cli
xchg
lods
sti
dec
imul
inc
lret
and
repz
or
fistpl
mov
add
rorl
cmpsb
cmpsl
jp
es
sub
mov
or
popa
xor
ds
dec
repz
jl
ret
lcall
test
inc
cmpsb
pop
lcall
rcrb
les
add
arpl
add
fldenv
jo
jmp
or
lock
test
sysexit
dec
inc
jb
sub
add
mov
repnz
out
jb
shlb
js
pop
inc
loopne
lret
pop
pop
push
push
sbb
add
stc
push
mov
fs
das
push
stos
add
pop
push
xor
add
inc
scas
sbb
out
add
and
jo
outsl
aam
sbb
out
jb
in
lahf
pop
in
jne
add
dec
or
fnstcw
sub
and
lcall
pusha
adc
cs
mov
cmpsb
add
jmp
adc
push
pop
mov
loopne
inc
mov
mov
mov
rcr
jecxz
sbb
cmp
pushw
repnz
pop
jmp
aam
sbbb
popa
mov
push
lods
scas
arpl
dec
fs
enter
jno
push
pusha
inc
adc
or
call
int3
ljmp
das
loopne
mov
and
je
js
add
call
sahf
faddl
mov
sbb
jns
shr
add
xchg
jl,pt
std
aam
adc
orb
daa
cmpsl
test
inc
repz
mov
add
popf
inc
testb
mov
mov
std
cmp
jl
pop
add
test
mov
in
xchg
mov
nop
pop
je
cmp
mov
cmp
and
out
push
mov
andl
inc
out
mov
adc
fmuls
mov
roll
mov
add
and
sbb
add
not
inc
out
test
popa
mov
fcompl
sub
enter
repnz
add
cmp
adc
inc
leave
xor
and
cs
xchg
stos
cmp
jnp
cmp
enter
add
jne
sub
insl
sar
jo
adc
lock
out
test
out
inc
stos
sub
cmpb
push
lcall
in
subb
dec
data16
add
push
sarb
and
xlat
sbb
pop
fsubr
ja
test
in
orb
xchg
out
das
and
cmpsl
mov
add
cltd
pop
sbbb
ja
push
test
je
push
fwait
ds
jo
lea
sub
xlat
adc
pop
je
je
inc
xchg
ficoms
call
sbb
jo
lods
mov
jae
sub
cmpl
jb
outsb
stos
jne
lock
or
sub
es
pushf
and
arpl
push
add
in
add
pushf
dec
push
dec
mov
pop
add
loopne
rol
popa
or
repz
pushl
mov
or
pop
cmp
and
jo
jbe
sbb
jge
and
imul
push
outsb
or
cmc
sbb
cmp
cmp
in
sub
fbld
xchg
push
loopne
cwtl
ljmp
add
and
add
enter
sbb
jo
testb
stos
leave
push
cmp
sub
das
pop
jo
inc
xchg
aas
cmp
fsub
test
pop
xor
adc
sub
sbb
aam
and
pop
jge
pop
sbb
inc
mov
add
push
cld
or
xchg
add
pop
scas
push
mov
pop
jo
add
adc
nop
stos
cmp
add
aam
xchg
push
pop
jo
test
aad
add
mov
clc
sti
xchg
xor
popa
fxch
lahf
int3
inc
jnp
push
jne
pop
iret
mov
mov
lock
cmpsb
fldz
adc
fiadds
loop
aaa
shlb
syscall
or
inc
out
stos
xor
jmp
dec
sbb
pop
pop
pop
shrb
pop
sbb
adc
sub
inc
test
nop
test
int
inc
mov
xchg
imul
in
stos
bound
in
adc
cs
cmp
dec
enter
lret
fldt
xchg
or
cmp
pushf
hlt
mov
mov
mov
dec
loopne
and
or
mov
sbb
mov
insl
insb
jp
push
jae
sbb
xchg
pop
add
xlat
xchg
jo
and
add
pop
xchg
xchg
pop
hlt
lahf
add
addr16
sub
jne
and
jo
in
sbb
add
fsubl
and
push
enter
xchg
nop
adc
pushf
inc
call
loope
dec
lret
mov
push
je
scas
and
xchg
cmpsb
lods
cmc
xchg
cld
bnd
add
xor
add
pop
fimuls
and
iret
cwtl
js
dec
aam
and
xchg
rolb
adc
add
sbbl
xchg
push
rclb
add
jecxz
dec
mov
push
xorb
push
add
fisubrl
and
fistl
or
xor
outsl
xchg
fcmovb
jnp
jg
aad
pop
nop
movsl
mov
outsl
and
pop
add
inc
sbb
add
in
push
adc
or
leave
xor
inc
add
mov
pop
pop
das
push
gs
std
out
cmp
icebp
add
adc
das
es
clc
pop
ljmp
pop
add
test
jns
add
mov
or
mov
mov
sti
popa
inc
xor
stos
xor
cmp
outsl
frstor
gs
xchg
in
shrb
add
inc
imul
add
mov
sbb
cmp
loope
stos
mov
or
xor
pop
rcrb
adc
add
and
rcrl
dec
cmp
jecxz
add
mov
aad
add
mov
mov
inc
add
les
sbb
add
sbbb
rolb
mov
ret
aam
rorb
mov
add
xor
lea
xchg
cltd
and
jno
mov
dec
repnz
orl
in
pop
test
jg
xchg
loop
cmpsb
jle
test
cmp
mov
inc
sbb
cmpsb
fimuls
roll
nop
add
incb
add
outsb
scas
std
data16
add
add
cltd
push
jp
push
pop
pop
nop
js
mov
add
jmp
or
add
inc
push
inc
jno
xchg
xchg
mov
loop
aas
adc
enter
or
and
insl
nop
flds
pushl
pop
aas
fs
jnp
add
cmpsb
lcall
lret
shrb
pop
movl
adc
sub
pop
xor
fcoms
add
dec
in
xchg
shl
xchg
enter
lods
jmp
cmp
pop
scas
jg
in
add
jle
stos
sub
in
lcall
push
js
in
cmc
xchg
or
mov
outsb
in
sub
add
icebp
cs
mov
subb
pop
lods
or
int
call
push
pushf
xchg
shlb
push
fldenv
dec
and
into
push
jbe
bound
xchg
xor
push
mov
std
dec
mov
cmpb
adc
jbe
xchg
adcl
enter
mov
cmp
enter
pop
fnstenv
add
stc
xchg
fwait
cwtl
shlb
cmp
pop
adc
fsts
push
rolb
jo
xor
add
fcoml
mov
xchg
arpl
jno
cmp
cmp
bts
xorb
pop
rcll
fldenv
gs
xor
bound
cmp
enter
imul
test
add
bound
add
outsb
sbb
fstps
push
push
xor
adc
xor
inc
xor
jbe
and
hlt
mov
fstpt
cmp
dec
das
add
add
jne
inc
jge
pop
shlb
fistpl
sbb
or
push
cli
inc
into
filds
fiaddl
movsb
jae
sbb
push
push
pop
mov
cmp
pop
sbb
jge
or
add
add
or
adc
jbe
inc
and
roll
jne
sbb
aad
popa
bound
sub
incb
stos
addr16
push
mov
add
cmpsl
push
sbb
xchg
jge
pop
inc
lret
and
or
arpl
xorl
mov
mov
and
out
sbb
stos
add
mov
add
adc
inc
add
push
aam
negb
daa
pushf
add
cmp
sub
int3
mov
je
and
xchg
sub
xor
or
lods
movsb
sbb
inc
mov
and
add
add
dec
inc
adc
mov
in
shl
leave
adc
adc
jae
mov
mov
loopne
popa
push
idivb
cmp
cmpsl
scas
adc
or
dec
iret
add
imul
loop
popf
mov
sub
mov
out
and
arpl
pop
icebp
push
mov
sarb
mov
pusha
addb
push
inc
adc
arpl
rol
xchg
jle
add
add
xor
dec
and
cmp
movsb
inc
or
call
std
addl
insl
imul
mov
push
sar
popf
xor
xlat
lods
xor
imull
int3
xor
or
sti
outsl
push
das
xchg
rolb
cltd
roll
test
repnz
mov
adc
add
lods
in
xor
pop
cmp
repnz
inc
mov
pop
nop
xchg
lods
pop
aas
test
mov
mov
lock
rclb
add
cmc
add
es
mov
call
inc
mov
add
mov
out
mov
add
cmp
int3
add
push
adc
pop
cmp
pop
and
les
xchg
mov
mov
rorl
add
ds
popa
add
jnp
adc
into
pop
test
xchg
inc
out
repnz
xor
sbb
add
xchg
sub
imul
rorl
in
add
xor
add
dec
popa
jo
add
push
jmp
jne
aaa
pushf
pop
test
adc
out
add
in
or
fwait
dec
setbe
fists
or
je
cs
jnp
cmpl
add
sbb
mov
sbb
dec
add
inc
jb
mov
jne
inc
sbb
pop
fnstcw
jle
leave
push
push
add
push
cmp
xor
add
shlb
aad
pop
popa
cmp
imul
jb
test
or
out
clc
mov
pushf
lcall
lret
add
nop
clc
and
pop
cmpsl
add
cmp
add
push
mov
add
inc
add
pop
mov
jnp
pop
push
fcoms
sbb
lret
pop
mov
push
and
sbb
add
int
insl
add
jno
ret
sbb
sbb
fst
dec
movsb
cltd
out
mov
and
loopne
cmp
fadds
pop
jns
jle
add
mov
bound
popf
adc
and
lock
orb
movsb
lods
insb
push
push
and
stc
xor
fs
pop
or
dec
nop
leave
movsb
push
pop
xchg
pop
rclb
jmp
jns
adc
mov
stc
aaa
push
adcb
mov
dec
jo
push
es
loopne
out
add
xor
inc
aaa
xchg
cli
push
mov
xor
sub
test
cmp
xchg
jbe
incl
jo
or
mov
stc
add
out
jb
fcoml
xor
cmpsb
dec
mov
int
nop
das
in
mov
insl
xchg
cmp
imul
adc
and
xor
add
repnz
idiv
jp
cwtl
fcomps
cmp
push
pop
dec
add
stc
and
pop
insb
mov
add
cmc
dec
les
inc
mov
gs
loop
les
int3
pop
dec
sub
add
or
rcll
out
jecxz
cmp
adc
cwtl
push
mov
roll
imul
xor
jo
push
aad
xchg
pop
pusha
sarl
jns
add
pop
lods
les
mov
adc
or
lock
pop
fs
add
int3
fsub
popa
add
aam
add
pop
dec
jnp
mov
jno
subb
and
jae
out
adcl
testl
imul
mov
divb
pop
or
pop
lods
lock
shlb
das
jns
add
sub
ret
lea
xlat
add
inc
aam
test
jge
inc
lret
aam
mov
fisttpl
pop
sbb
mov
add
mov
jg
adcb
adc
mov
fldcw
add
push
and
add
mov
add
add
lods
nop
jg
push
rolb
rcrl
xor
je
scas
push
pop
pop
or
rclb
ljmp
xor
bnd
jp
mov
xor
mov
xchg
pop
stc
mov
aad
nop
sub
loop
clc
addr16
mov
loope
insb
lods
insl
mov
fiaddl
mov
cmp
push
or
je
in
lock
cmp
ret
inc
pop
and
insb
push
add
xchg
es
fidivs
cmp
hlt
jno
or
dec
popa
add
add
stos
add
xor
inc
add
add
push
sub
ja,pt
pusha
mov
scas
add
sbb
aas
int3
xor
add
xchg
and
or
rcr
cmpsl
mov
mov
in
jbe
push
adc
cmp
mov
inc
out
xchg
add
dec
add
add
inc
aas
call
lret
iret
popf
fwait
add
inc
or
pop
leave
stos
dec
pop
mov
loopne
jl
cmp
mov
jmp
iret
inc
das
adc
or
inc
xor
sarb
call
xchg
aaa
jns
sub
pop
xchg
jne
repz
sub
jecxz
lahf
loop
lock
aaa
cmp
mov
lods
cmp
add
cmp
ds
ljmp
mov
test
or
and
rorb
xor
aad
jb
sti
add
xlat
into
and
mov
mov
and
xor
lds
push
xor
std
xorb
sahf
push
dec
sbb
ret
add
mov
xlat
fiadds
push
push
movsb
fiaddl
mov
pop
xorb
sbb
ds
sbb
dec
adc
xorb
repnz
add
mov
ja
sub
test
mov
mov
and
add
idiv
cmp
sbb
inc
sbb
add
pop
sti
add
push
out
repz
add
xor
repnz
xchg
mov
inc
dec
cmp
mov
nop
and
jae
sbb
dec
pop
inc
arpl
ret
mov
sub
push
lret
add
jns
jmp
xor
outsl
add
cmp
dec
pop
pop
sarb
jnp
std
stos
arpl
pop
popf
icebp
sahf
in
out
outsl
mov
dec
loope
iret
jle
add
xchg
xchg
xor
mov
movsl
fsubrl
jl
loopne
rolb
mov
push
les
add
push
and
add
or
hlt
fsubs
jo
aam
sub
mov
add
jle
mov
ret
rorb
sub
add
fwait
loope
cwtl
adc
les
jp
or
fldenv
scas
add
add
jbe
or
stos
aad
mov
adc
add
icebp
push
xor
xchg
or
mov
sbb
sbb
add
dec
sahf
mov
lods
pop
add
lahf
mov
notl
add
push
mov
push
mov
mov
pop
add
or
jb
add
testb
sbbl
sub
mov
sub
mov
adc
loopne
test
sbb
xchg
imul
jno
sbb
dec
sbbb
in
ret
pop
cs
mov
outsb
dec
rolb
lods
or
push
jp
or
scas
pop
xchg
ljmp
in
mov
xchg
jne
iret
fs
fildl
pop
add
sub
jmp
or
bound
outsb
jecxz
pop
xlat
pusha
push
push
add
scas
icebp
mov
add
jge
pop
js
cwtl
int
cmp
xor
push
call
mull
or
pop
mov
push
fs
ljmp
arpl
nop
sarl
sub
cmp
dec
scas
jp
scas
add
std
adc
hlt
je
int3
add
lds
xor
sbb
pop
adcb
or
int3
mov
es
xchg
mov
dec
stc
jecxz
and
push
sbb
addr16
mov
das
sbb
add
push
inc
or
push
pushf
lods
add
sahf
daa
out
imul
rorb
scas
jnp
xchg
lds
add
leave
lock
add
notl
in
fs
enter
push
movsb
pop
push
jge
dec
pop
jg
push
jb
addl
icebp
nop
cmp
adc
jo
push
mov
mov
or
add
cwtl
inc
add
mov
mov
add
test
fadds
xchg
into
insb
or
fs
loopne
mov
repnz
fimuls
add
jmp
jne
cld
andl
shlb
xchg
es
subb
dec
mov
cmp
adcb
cwtl
sbb
mov
add
leave
jns
xorb
sbb
nop
xchg
cmp
push
dec
fistpl
stc
out
lock
jns
outsb
dec
sti
rclb
push
mov
jns
cmp
test
push
xchg
fstps
sarb
ljmp
sub
pcmpeqb
dec
and
js
call
sub
sub
lock
cwtl
jl
xchg
adcl
adc
inc
cwtl
mov
pop
jge
and
add
push
enter
negb
fimull
jl
pop
cmp
aam
pop
popa
call
add
push
add
add
ljmp
lock
mov
sbb
pop
add
jle
out
dec
jp
mov
add
mov
adc
mov
test
addb
adcb
jb
enter
add
into
sub
out
and
jle
enter
mov
cmp
insb
pushl
cltd
add
outsl
pusha
inc
clc
scas
xchg
jo
addr16
repz
and
idivb
sub
adc
fstpl
jge
cvttps2pi
mov
fwait
jb
cmp
xchg
jle
and
mov
fadd
mov
loop
mov
xchg
call
mov
push
insl
add
in
hlt
dec
int
mov
mov
mov
fadds
cwtl
test
or
or
enter
xchg
pop
add
int3
and
or
insl
lds
es
jecxz
or
and
inc
jbe
ficoml
in
sub
invd
jae
cmp
pop
push
gs
sahf
and
rorb
out
mov
push
sahf
lods
ja
add
repnz
dec
cli
or
sbb
sti
inc
int3
sbb
jg
and
ds
nop
rolb
sbbb
jl
or
icebp
cmp
rcr
add
mov
loope
mov
insb
add
adc
mov
stos
out
popa
jl
out
dec
lods
add
jp
xchg
sahf
dec
xor
inc
adcb
dec
in
add
and
sti
stos
and
add
call
shl
mov
inc
and
aad
add
loopne
mov
xchg
cmp
jge
in
adc
jae
sub
dec
xchg
jl
in
or
jmp
int
das
in
fwait
add
cs
adc
sub
add
lret
loope
imul
inc
cwtl
or
hlt
lods
cmpsb
push
sbb
aaa
pop
lret
vpopcntb
mov
hlt
jge
call
pop
test
les
add
fbld
add
pushf
cwtl
mov
hlt
jbe
daa
mov
push
lret
push
and
insb
xor
lahf
les
adc
and
fsts
cmp
rorl
packsswb
fists
adc
mov
mov
ljmp
sarl
mov
pusha
inc
inc
jo
add
dec
repz
xor
cmp
and
jnp
pop
add
incb
leave
fdivs
xor
imul
test
cmp
or
std
add
pop
sub
pop
cmp
add
inc
in
shll
jle
lock
pop
pop
mov
clc
movsl
faddl
out
cmpsl
mov
mov
int
add
mov
ljmp
sub
sbb
bound
out
push
xor
mov
adc
cs
add
lods
push
or
or
fsubl
pusha
in
test
mov
mov
ret
mov
jo
adc
jno
cwtl
add
inc
pop
or
inc
add
lret
pusha
or
ja
fldt
ret
xlat
push
pop
cmp
add
xchg
stc
add
push
ljmp
js
add
cmpsl
pop
jo
pop
jne
and
inc
pop
jae
push
test
loope
rol
fcomps
int3
lahf
mov
pushf
and
add
cltd
cmp
add
bound
sbb
call
jne
loope
push
xlat
adc
lahf
add
ds
hlt
jg
xchg
fistpl
rol
pop
loopne
sbb
lock
bound
sbb
jns
daa
lret
mov
fxch
and
cmp
xchg
fisubs
add
and
frstor
jno
add
mov
shrb
inc
in
xor
out
pop
add
push
or
push
nop
insb
jp
into
addb
ret
fwait
and
mov
jl
das
inc
rolb
push
leave
js
dec
inc
add
add
sbb
sub
mov
add
xchg
inc
mov
dec
hlt
add
xchg
add
xchg
outsl
call
sub
dec
add
adc
sbb
fcmovbe
mov
sub
xor
test
cwtl
xor
mov
xor
sbb
imul
leave
lea
sub
jo
add
push
popa
in
jo
add
xor
movsb
outsb
xor
adc
dec
ror
and
test
lret
scas
movsb
pop
adc
imul
xchg
add
jge
jns
jg
sbb
loope
sahf
mov
push
push
mov
xchg
fwait
nop
sbbl
sbb
xor
rclb
fimuls
add
jno
push
idivb
pop
add
cwtl
jmp
xor
mov
add
repnz
or
ljmp
iret
push
cmp
mov
push
inc
add
inc
into
fsubr
loopne
imul
mov
jbe
cmp
pop
sub
ffree
mov
pusha
leave
add
or
inc
add
inc
out
adc
fcoms
xchg
sub
das
sarb
and
adc
mov
pop
std
aam
data16
pop
aaa
enter
lcall
sarb
xchg
jnp
dec
add
inc
out
lahf
pusha
les
loopne
inc
in
outsl
inc
pop
mov
mov
sbb
or
sub
cmp
add
cmp
fadd
call
fwait
aaa
add
sbb
insb
sbb
scas
es
xor
push
mov
xchg
jbe
add
mov
imul
mov
dec
in
sbb
adc
and
add
nop
aaa
mov
aas
mov
movsb
add
or
inc
popa
inc
push
adc
dec
call
mov
add
lret
jmp
psubd
test
sbb
fdivrp
mov
jb
aad
daa
int
test
cmpl
dec
lods
cli
loopne
adc
fsubs
dec
cmp
sbb
mov
push
cs
mov
mov
inc
add
dec
xchg
sub
ret
add
gs
mov
sub
mov
add
loopne
enter
rcl
jae
sti
enter
add
push
iret
mov
inc
lds
jg
mov
in
push
adc
dec
and
pop
dec
enter
loopne
sbb
sub
inc
cmp
xchg
ficompl
and
sbb
cmp
mov
adc
int
mov
add
push
dec
adc
repz
mov
dec
add
pop
sahf
push
jne
push
sbb
mov
jnp
je
add
orb
mov
hlt
and
inc
mov
jl
mov
pusha
fisttps
movsl
mov
xor
mov
add
xorb
push
add
inc
push
add
cs
out
mov
mov
push
push
pop
push
pushf
shrb
mov
mov
in
jecxz
sbb
rorb
lcall
mov
pushf
adc
das
test
repz
dec
pop
push
clc
fwait
in
push
ror
cmp
dec
outsb
push
jb
sbb
lock
into
outsl
mov
loope
jge
sub
call
pusha
pushf
scas
pop
dec
add
adc
in
scas
aam
mov
xchg
cmpl
cmp
inc
sub
ret
insl
cmpsl
rcr
add
jmp
xor
add
clc
jp
add
in
mov
inc
test
aam
mov
jne
loopne
nop
lds
mov
lret
jns
mov
repz
fisttpl
pop
push
shrb
shlb
in
in
add
stos
jb
push
and
test
frndint
mov
xchg
jb
push
in
iret
dec
lahf
xor
or
jl
subb
jg
sbb
adc
repz
sbb
jbe
mov
mov
mov
jle
cmp
push
shl
insb
and
push
sbb
cmp
mov
cli
and
sbb
jne
or
push
push
jmp
mov
lock
int3
xchg
and
xor
mov
mov
push
fsubrl
cli
rcrb
mov
sbb
sbbb
fs
mov
mov
jae
add
xor
flds
xchg
incl
lods
mov
lret
pushf
or
inc
dec
cld
sbb
add
imul
sub
add
decl
xchg
mov
and
int3
call
cwtl
mov
pop
add
test
lret
insb
js
lea
cmp
pop
pop
in
sbb
sub
xchg
lds
in
or
cmpsl
cmp
mov
mov
hlt
shrb
frstor
add
and
aad
jne
push
enter
add
test
nop
test
fwait
xor
into
add
inc
push
lods
mov
xor
or
or
xor
rol
sub
xorb
sbb
filds
fwait
cmp
pushf
mov
mov
lods
xchg
add
fldl
shll
les
push
aad
loopne
pop
add
jp
dec
in
leave
outsl
ret
in
in
aam
test
cmp
shlb
mov
mov
push
popa
push
adc
xor
pop
sbb
pop
into
add
int3
push
out
jg
xor
nop
fwait
mov
movb
stos
stc
icebp
mov
add
mov
adc
pusha
mov
jb
clc
insl
gs
mov
stc
cmp
lock
mov
fildl
ret
mov
adc
out
into
por
add
mov
push
jns
out
or
or
cmpsb
sbb
test
out
dec
and
inc
sbb
das
cmp
sbbb
int3
fldl
gs
fldcw
jl
add
out
xor
and
and
push
pop
arpl
aas
je
jae
mov
dec
psubw
imul
and
cmp
lock
rcrb
inc
add
and
or
movsl
mov
out
jns
stc
and
jnp
mov
jmp
push
sbb
movsb
add
fisubrs
pop
jp
pop
xchg
xchg
cmp
or
mov
popa
inc
rorl
mov
outsl
pusha
and
sbb
mov
add
add
mov
pop
add
mov
add
pop
jne
inc
ljmp
cmp
lret
cmp
fidivrs
push
cli
imul
insb
jns
add
addl
xchg
xor
cmpsb
jne
inc
push
dec
out
cmp
push
mov
inc
jg
cmpsl
xchg
in
gs
or
jp
add
shll
mov
sub
jns
xchg
fdivrs
pop
jbe
adc
inc
repnz
inc
in
aad
je
add
push
fldenv
xor
pusha
add
notl
loope
mov
and
jae
aam
xor
lds
pop
add
decb
call
pop
pop
lret
mov
or
arpl
push
rcrb
pop
pop
inc
and
add
addr16
pop
add
lods
add
jg
inc
add
xchg
sbb
out
repnz
add
mov
cmp
call
mov
lock
sub
lret
imul
lahf
or
xor
rorl
aas
lret
shrb
fisttpl
roll
mov
mov
pop
into
push
jno
add
and
cmp
and
push
out
scas
add
mov
and
fnstcw
shr
test
or
dec
jns
loope
adc
out
les
test
add
es
sbb
les
jo
out
shrb
aas
bound
cld
xor
dec
imulw
jnp
jge
ds
push
rcrb
xchg
pop
cmp
stos
mul
add
sahf
cltd
aas
add
mov
jl
sub
ret
mov
pop
mov
loopne
fldl
nop
shlb
add
xchg
add
adc
and
add
dec
outsl
divb
lret
xor
jge
int
mov
mov
push
add
and
aaa
mov
sarb
fidivl
pop
js
ret
fwait
lret
jle
push
push
pop
aas
gs
pop
mov
mov
int
pop
aaa
repnz
loopne
imul
push
popa
mov
daa
xlat
cmpsl
test
add
lahf
movsl
cltd
add
stos
repnz
sbb
pop
cs
cmpsl
lcall
inc
scas
into
repnz
adc
addb
mov
ljmp
shlb
xchg
mov
and
inc
jp
js
add
pop
out
clc
sub
push
cs
mov
aam
hlt
pop
ret
jmp
inc
xchg
sbb
xchg
push
repz
mov
adc
pop
inc
jne
sbb
pop
pop
push
mov
inc
inc
andb
imul
xorb
lock
mov
cmp
jecxz
loope
adcb
std
popa
das
xor
unpcklps
or
jge
lods
push
stos
push
sub
and
mov
shll
out
les
push
nop
adc
pop
test
dec
cmpb
cmp
cmpsb
inc
dec
clc
cmp
push
xor
or
pusha
or
or
dec
push
js
mov
inc
js
add
mov
clc
adc
push
push
cmp
cld
xchg
cmp
add
cmp
cmp
sub
mov
add
aaa
sahf
sti
jle
fsts
fistps
or
jb
rclb
das
jp
daa
pop
in
hlt
stc
dec
mulb
or
push
int
sbb
mov
cmp
cmp
sbb
test
jmp
lds
push
add
rclb
fxtract
sbb
push
imul
push
add
or
pop
add
test
mov
add
ret
inc
scas
imul
je
add
out
fldenv
loope
xor
andb
sub
notl
fnsave
pusha
cld
pop
push
pop
jl
xor
xor
add
rolb
dec
mov
push
add
cmp
aaa
les
xchg
popf
lds
pop
rolb
fisttpll
adc
shrb
cmp
or
or
and
adc
or
lods
pop
iret
cpuid
mov
stos
add
add
jp
push
mov
dec
adc
jne
cmp
dec
and
add
add
aaa
adc
xor
jge
add
cmc
pusha
xchg
enter
call
hlt
xor
inc
pop
fwait
dec
sub
xchg
and
stc
or
pop
dec
adc
lahf
sub
lret
xor
mov
adc
fs
inc
popf
fs
clc
daa
jno
sub
es
xor
jo
inc
add
adc
pop
pop
push
dec
out
imul
rcl
imul
insl
pop
aas
xor
pop
or
fnsave
sbb
cmp
xchg
fs
lret
sub
out
add
jecxz
sbb
jge
enter
add
pop
stos
push
add
pop
mov
xchg
lock
and
adc
mov
add
incl
mov
ds
dec
popf
clc
mov
dec
xchg
daa
addb
mov
es
call
mov
sub
arpl
jne
cmp
in
xor
in
mov
xchg
add
pushf
call
xchg
pop
sub
add
add
iret
add
ret
sar
add
inc
cmpsl
xchg
loopne
lret
push
shlb
sbb
push
pop
out
jno
jecxz
pop
ljmp
aam
ror
push
insl
fwait
daa
pop
xor
add
mov
adc
xor
jnp
cs
andl
jne
cmp
lods
sti
or
dec
lock
sbb
sarb
inc
popa
lcall
lods
out
add
loope
hlt
pop
popa
mov
rcl
in
jnp
fists
ret
outsl
loopne
scas
mov
or
add
flds
add
push
pop
dec
lea
adc
lock
xchg
adc
push
pop
aad
and
add
dec
pop
jl
orb
addl
push
xlat
and
out
icebp
scas
leave
sahf
loop
inc
cmp
aas
sbb
aad
cltd
inc
add
add
adc
shlb
and
or
loop
pop
xchg
popa
mov
mov
in
mov
loope
cld
repnz
pop
push
jnp
dec
test
add
cwtl
cmp
shll
iret
stc
lock
dec
or
or
push
add
mov
mov
daa
stos
sbb
push
jo
add
or
and
inc
and
pusha
mov
mov
out
rolb
es
push
shll
or
jl
xor
rcrb
sbb
loope
add
or
push
je
dec
push
mov
pop
ret
out
movl
jmp
cltd
or
dec
gs
and
add
rorb
lds
std
dec
js
loope
xor
lods
push
xor
pusha
negl
mov
xor
jne
cmp
fcoml
out
mov
lods
add
loope
or
adc
push
add
jge
xchg
jbe
xchg
push
fidivs
pop
pop
adc
pop
pushf
fs
or
shlb
cmp
ljmp
subl
aas
jp
mov
call
es
or
loop
xchg
jns
add
mov
or
lahf
test
or
enter
push
sub
adcb
call
hlt
test
xor
xchg
add
dec
pusha
mov
mov
enter
neg
push
scas
shlb
sbb
mov
aaa
add
mov
gs
cmc
test
add
xor
les
sbb
pusha
fnsave
jmp
sbb
out
pusha
mov
filds
scas
outsl
addr16
sub
test
bound
imulb
jle
pop
sub
mov
stos
daa
adc
or
hlt
test
mov
add
jl
mov
outsb
mov
or
leave
test
popf
aaa
jns
push
dec
imul
adc
mov
test
inc
fadds
sbb
dec
gs
popa
mov
pusha
push
adc
or
xor
iret
adc
pop
cwtl
test
xchg
dec
int
clc
and
cmp
xchg
jnp
add
xchg
inc
aaa
lods
loop
andl
xor
dec
jne
xchg
pushf
push
add
mov
popa
aad
ret
or
xlat
sub
xchg
push
push
enter
cmpsb
add
dec
fnstsw
outsb
scas
pusha
loope
stos
mov
sub
sbb
jno
mov
xchg
pushf
mov
push
sub
fsubrl
out
ret
xchg
int
mov
test
mov
sbb
add
dec
and
or
jno
mov
xchg
xor
jp
add
int
push
push
les
jecxz
pop
or
mov
mov
mov
movsl
cmpsl
dec
shrb
add
jmp
and
cmp
ja
mov
fiadds
mov
jmp
shlb
int
mull
je
sbb
repz
ljmp
push
mov
les
pop
adc
jecxz
insb
pop
rcrb
or
and
sub
add
lods
adc
test
arpl
mov
adc
cmovno
fldenv
je
addl
lods
add
push
insl
pop
pusha
hlt
mov
xchg
mov
loope
aaa
xlat
mov
sub
cmp
dec
test
sub
rclb
outsb
insb
out
sbb
in
fbld
pusha
pop
xor
xor
mov
adc
jno
add
inc
pushf
std
sarb
mov
sub
cmc
testb
imul
and
jl
repz
rclb
or
and
out
aaa
test
cwtl
jmp
pop
push
in
adcl
rolb
sub
jae
add
fsts
icebp
mov
test
pop
lods
dec
cmp
andb
dec
xor
arpl
lahf
gs
sub
shr
ret
sub
arpl
imul
rorb
repz
out
sub
mov
fwait
xlat
add
sti
mov
je
or
pop
sub
and
sub
mov
add
mov
push
dec
add
mov
sbb
sbb
addr16
mov
lock
lea
add
mov
xorl
jne
xor
xchg
or
arpl
cmc
add
fildl
add
mov
xchg
add
mov
mov
into
cltd
push
fiadds
pop
push
fstpt
jnp
add
xor
push
orb
imul
xorl
add
push
and
xor
subb
add
ret
push
loopne
aas
aas
xchg
add
pop
xchg
add
push
imul
in
xchg
push
adcb
mov
inc
add
lcall
push
xor
daa
xlat
outsl
cmp
or
sbb
xor
pop
add
lahf
lcall
scas
or
addr16
sub
inc
add
push
xor
data16
call
mov
mov
rorl
sub
add
sahf
in
lock
mov
push
faddl
hlt
sbb
sbb
add
fsubs
arpl
push
test
fstps
sub
sub
sbb
mov
inc
jp
push
sub
aas
jge
pusha
xchg
push
lods
or
sahf
es
xchg
xor
add
push
mov
call
lods
add
sbb
mov
sti
jno
jae
shrb
les
xchg
push
rcrl
xor
ja
push
sbb
sub
cmp
ret
lcall
sarb
test
and
pop
cmp
sarb
lahf
xchg
add
mov
cwtl
stc
out
push
out
test
fldl
mov
mov
cmp
pop
ljmp
pusha
jbe
sub
test
aas
pusha
and
jg
inc
adcb
mov
rol
jge
cwtl
pop
je
gs
and
pop
add
xchg
cmp
in
sbb
dec
loop
xchg
lock
bswap
fistpl
or
or
out
das
incb
insl
js
icebp
aam
cltd
fsubl
addb
add
mov
push
pop
add
call
inc
bnd
push
pop
xchg
mov
popa
lock
add
mov
and
add
fnop
xlat
sbb
or
cmp
inc
repnz
shr
fiaddl
lea
test
notb
and
pop
inc
add
jns
mov
sbb
lcall
js
jl
xchg
and
dec
rcr
add
icebp
mov
cmp
cmp
out
dec
and
lret
and
or
mov
loope
push
sbb
lret
and
jle
cmp
insb
sbb
jmp
scas
movsb
test
cli
push
or
mov
add
xorb
push
sbb
or
jmp
mov
ret
roll
mov
push
mov
mov
stc
and
fisubl
je
mov
hlt
test
fimuls
cmpsb
test
adc
adc
add
loop
mov
inc
cvtdq2ps
mov
cmp
xchg
xor
xor
pop
aas
ja
xorl
push
xchg
pop
aam
cmp
mov
add
push
data16
add
lahf
sub
jbe
fadds
push
inc
aas
mov
inc
sub
mov
js
sbb
in
repz
insl
sbb
repnz
add
mov
repnz
nop
pop
inc
push
sbbb
out
test
adc
insb
mov
pusha
mov
es
xchg
mov
addb
mov
loopne
cmpsb
cmpsl
in
mov
xor
xchg
out
add
mov
daa
adc
mov
scas
mov
or
pop
xchg
cmp
movb
push
or
fists
sti
les
ss
fsubs
adc
mov
xor
ja
push
test
xchg
mov
adc
mov
pop
xor
dec
hlt
pushf
in
mov
roll
and
jmp
xchg
and
pop
iret
add
cmp
pop
jmp
pop
sahf
mov
add
daa
shl
cmp
les
jle
adc
add
mov
stc
lock
xor
xchg
fwait
jbe
xchg
mov
pop
jo
push
sahf
mov
das
rol
dec
add
out
cwtl
pop
fisttpll
test
clc
imul
ds
popf
sub
push
je
add
daa
add
mov
add
jo
cli
mov
add
push
add
push
aas
push
sub
sbb
fisttps
cmp
sbb
dec
jae
add
mov
jno
cmpsb
sbb
stos
mov
bound
andl
mov
push
out
add
sub
fistps
iret
cmpl
ret
xor
sbb
cmpb
mov
movsl
sub
jb
idiv
and
adcl
fs
sub
jbe
test
test
jecxz
xor
add
mov
xchg
dec
scas
push
iret
out
leave
movsb
cwtl
adc
mov
jecxz
mov
aaa
mov
pushf
lock
sarl
jno
sbb
xchg
lret
mov
ja
mov
sub
add
xchg
inc
lea
add
lret
push
push
or
je
nop
mov
rcll
jl
cmpsl
dec
rolb
rolb
pop
in
popf
xor
cmp
xchg
mov
fildl
and
mov
or
pop
repnz
clc
add
lret
push
aas
cmpsb
test
xor
ljmp
or
clc
inc
add
inc
push
dec
cmpsb
cmp
adc
add
push
push
and
leave
xchg
test
jmp
cmc
or
in
fadd
ret
cmp
lcall
add
inc
insl
push
and
mov
xor
and
jge
in
loopne
sti
jo
xor
out
pop
outsb
sbb
and
int
lock
xchg
pop
sti
add
and
push
jns
rcr
add
rorl
jp
int
xor
clc
andb
rcrb
test
aad
inc
pop
push
loopne
clc
js
jl
cld
cmp
sub
adcb
dec
fcompl
add
mov
mov
sarb
xor
ficoms
sahf
jnp
dec
sahf
popf
je
daa
inc
bound
add
fcomp
sub
jge
push
es
push
push
pop
xlat
test
mov
sbb
sbb
xchg
fsubs
das
leave
outsl
xor
mov
xchg
dec
mov
add
push
nop
push
decb
in
mov
insl
pop
add
mov
outsl
fcoml
pop
or
xor
sbb
push
fadd
cli
mov
xor
aam
push
pusha
push
mov
loopne
xchg
test
mov
jge
clts
inc
pop
nop
inc
add
rcrl
jecxz
jl
lods
dec
cmpb
jl
aad
or
and
cmp
into
scas
je
jne
mov
aas
push
jle
cmp
add
cmc
sahf
int3
inc
cmp
add
xchg
adc
mov
das
mov
xchg
pop
pop
sarb
outsb
pop
aaa
lods
cmp
lock
subb
dec
cwtl
sub
xor
sbb
addr16
sarb
xor
mov
push
cwtl
lock
mov
sbb
add
sbb
mov
push
add
mov
fidivrl
pusha
notl
sub
pusha
and
mov
movsb
push
adc
cltd
hlt
mov
mov
sbb
rclb
lea
js
cmp
addr16
ret
dec
popa
mov
add
mov
push
roll
cmp
jp
jns
clc
stc
in
icebp
mov
sub
inc
loopne
inc
popa
sub
push
mov
sbb
mov
int
subb
dec
mov
iret
test
and
pop
cmp
inc
fidivrs
arpl
icebp
sahf
shlb
adc
inc
mov
rorb
dec
inc
adc
test
mov
stc
mov
xchg
add
hlt
iret
roll
mov
decb
jb
mov
mov
mov
pop
inc
adc
xor
add
mov
pop
push
xor
jns
and
and
lret
or
sub
inc
sub
add
lods
mov
sub
sti
cmp
xchg
pop
inc
and
and
pop
inc
loopne
in
adc
jns
inc
adc
repz
sub
pop
push
fs
and
adc
mov
add
pop
in
push
cmc
sub
pusha
sub
loopne
jne
sub
xor
sahf
leave
cwtl
aaa
fldcw
add
push
fdivrl
and
xchg
adcb
mov
push
mov
pop
loope
ja
jge
xorl
cmp
popa
or
and
pop
in
adc
aaa
testl
stos
inc
jg
add
push
cmpsl
dec
and
mov
mov
inc
call
mov
xchg
lahf
or
jg
inc
pop
xchg
imul
and
sbb
iret
add
or
and
fnstenv
add
cmpsl
sub
cmp
xor
jle
fildll
sbb
loope
add
adc
sbb
subb
cmpsl
add
pop
aaa
inc
xchg
in
sbb
inc
add
pop
ss
loope
ja
inc
and
adc
jge
popf
call
and
add
add
cmp
jnp
inc
add
fists
insb
or
pop
push
jmp
mov
jno
add
push
pop
xchg
int3
or
add
and
inc
add
idivb
lds
cmp
ficomps
faddl
aaa
or
les
jne
sbbb
jg
xor
and
xor
call
stos
or
out
add
jnp
lahf
fwait
or
mov
popa
dec
in
xlat
roll
xor
in
add
arpl
add
stc
mov
inc
jg
add
bound
mov
xchg
add
lock
sbb
xchg
mov
inc
out
push
and
add
jns
mov
insl
arpl
loope
cmp
pop
sti
add
lds
inc
pushf
mov
adc
jb
inc
or
inc
enter
mov
and
stc
adc
ret
lahf
add
in
mov
sbb
add
pop
clc
adc
mov
and
jg
xchg
loopne
add
test
pop
add
xchg
aaa
and
mulb
jns
cmp
jge
fcomip
jp
add
push
xor
pop
sti
sub
call
addr16
inc
cmc
adc
mov
lods
outsb
aad
ja
cld
xchg
cmp
mov
pop
movsl
mov
add
mov
push
add
out
ja
xor
clc
add
shlb
push
fs
cmp
and
ret
add
add
add
jge
jp
loopne
add
repz
jnp
insb
maxps
cmp
add
int3
pop
cmpsb
add
lea
mov
mov
repnz
xchg
cmp
and
add
fildll
lea
add
cs
addr16
ljmp
jge
outsb
daa
dec
xor
adc
add
mov
add
je
stc
xchg
inc
add
lret
inc
int3
mov
shlb
xchg
nop
xchg
fcoml
add
mov
push
inc
enter
ja
outsb
jae
push
test
in
inc
add
punpckhbw
int3
add
xor
or
cmp
cmc
outsl
lock
sbb
call
imul
rcrl
shlb
pop
sub
gs
mov
or
mov
jl
and
iret
int3
mov
enter
in
add
mov
dec
lret
xor
imul
mov
repnz
push
stos
mov
out
ss
rcll
outsb
lock
dec
popa
add
xor
js
loop
ljmp
jge
add
sahf
repnz
sti
pusha
sub
jae
outsb
jp
cs
mov
add
cmp
cltd
pop
push
imul
add
adc
xor
adc
push
inc
jl
push
sarb
mov
ja
jle
mov
leave
add
pop
aas
roll
lret
ret
rcl
add
or
push
cmp
and
ss
push
sahf
fisttpl
add
and
adc
into
adc
push
push
xlat
mov
add
push
imul
mov
icebp
repz
in
stc
cmp
das
push
cltd
xchg
insl
inc
add
imul
ljmp
jbe
repz
add
jecxz
fstl
push
dec
aam
pop
lock
pop
out
push
adc
insb
mov
cmpsb
cmp
scas
aaa
movsb
sub
or
int3
sbb
sbb
cli
pop
lock
mov
lods
in
xchg
add
mov
push
inc
inc
hlt
lret
add
shlb
mov
dec
addb
fnstcw
xchg
roll
vmptrld
lea
push
add
xor
xchg
adc
jge
inc
test
add
imul
nop
int3
xchg
fmuls
push
cmpb
sti
add
sahf
sub
repnz
add
pop
idiv
mov
les
push
mov
aaa
ret
jo
jg
xchg
and
and
xor
iret
sbbb
lcall
cmp
iret
add
sti
dec
adc
pop
shr
sub
jecxz
mov
lahf
idiv
jne
nop
push
add
lret
jo
add
test
addr16
cmp
or
test
sbb
cs
mov
lahf
xchg
decl
fsubrs
mov
xor
add
inc
ja
sub
shrb
pop
pop
push
and
mov
out
shlb
cmp
jno
shlb
andl
mov
dec
and
daa
cmp
and
adc
orb
inc
dec
dec
clc
lret
pusha
dec
enter
insb
add
sbb
add
jp
xor
daa
jb
dec
mov
dec
subb
and
repz
or
daa
add
pop
and
ja
call
jl
push
xor
popf
push
std
xor
sbb
in
jle
add
dec
dec
ret
and
push
adc
out
clc
mov
mov
jle
into
arpl
push
jp
add
aam
sub
stos
cs
dec
add
int3
mov
xor
sbb
pop
es
mov
popf
xchg
lods
sub
xlat
add
push
mov
loope
jne
add
lods
int3
outsb
jge
add
xor
mov
shr
mov
orb
sbb
push
mov
roll
in
xchg
aas
enter
aad
lds
xor
iret
fcomi
adc
add
adc
pusha
aam
fistps
rolb
lods
cmpb
insb
cmp
add
sarl
pop
cmpsl
cmc
stos
jl
mov
add
add
xchg
ljmp
dec
and
test
mov
repnz
mov
ficoms
and
shll
dec
or
add
mov
push
add
leave
outsb
push
xor
popa
mov
mov
adc
decl
fstpl
pop
in
out
mov
in
jb
add
in
fdivrs
movsl
pop
popf
lds
loope
jae
popa
lahf
sub
push
or
and
incb
shrb
call
clc
and
pop
adcl
shll
flds
stos
xchg
jmp
push
out
mov
sub
cmp
xchg
test
aad
inc
cld
jnp
sub
adcb
fwait
loopne
xchg
xor
mov
pushf
pop
add
cmp
verr
rorb
add
divb
nop
or
in
xor
mov
test
outsb
fwait
mov
add
ss
sbb
das
add
jecxz
push
or
mov
adc
call
pushf
mov
or
xchg
sbb
mov
sbb
pop
dec
cmp
rorb
and
jns
dec
test
das
movsw
js
enter
outsb
cltd
loope
xor
add
sbb
ds
push
cld
push
loopne
test
cs
subl
inc
add
loop
int3
xchg
cltd
aad
adc
add
cmp
shl
jecxz
jae
mov
push
dec
rcll
push
lods
pop
das
push
add
xchg
xor
out
add
cmp
pop
jno
sub
lahf
xor
stos
std
incl
fsubrl
aaa
jl
jns
add
mull
shl
jl
sub
in
stos
push
movsb
xchg
jne
aas
push
enter
test
add
inc
pop
ja
test
int
testl
adcb
loop
es
xchg
push
push
loopne
arpl
pop
fdivrl
es
push
test
push
aas
mov
mov
lock
rolb
mov
loope
testl
movsb
and
dec
dec
loope
push
test
mov
pop
adc
fiaddl
outsl
cmpsl
or
dec
add
xor
push
dec
cmpsl
xchg
sbbb
or
adc
inc
popf
or
push
add
push
sbb
add
insb
pop
mov
cli
stc
xchg
fildl
jo
movsl
sub
call
data16
jmp
rolb
lea
mov
cmp
cwtl
push
test
add
mov
popf
js
pop
lea
sbb
pop
push
cld
and
dec
enter
xchg
repnz
xor
sbb
push
enter
pop
push
test
scas
xchg
sub
addl
daa
push
mov
out
ds
fadds
cmp
jo,pn
cmp
nop
sbbb
fiadds
stc
xor
add
mov
imul
imul
mov
repnz
sbb
in
push
jae
hlt
pop
add
ljmp
add
pop
jne
sbbl
jl
sysexit
stos
jno
sbbb
inc
dec
jge
ds
loop
out
pop
and
adc
and
sbb
add
mov
clc
jp
jae
add
enter
add
popf
rol
sbb
add
bound
imul
sbb
fs
add
inc
sahf
int3
add
pop
sub
repnz
add
sub
psubd
add
cmp
daa
scas
mov
sbb
in
xchg
aad
add
xor
cwtl
add
fdivrs
fcompl
pop
push
jp
fs
push
decb
loop
pop
dec
lock
pop
add
testl
mov
or
inc
out
dec
shll
mov
inc
mov
jl
jg
insb
jp
xchg
or
jns
ficoms
decb
int
xchg
fxch
add
jmp
les
popa
pop
sbb
roll
sbb
pop
add
push
xchg
pop
int3
mov
cmp
add
add
cmpsb
jl
mov
out
xor
rolb
add
stos
cs
xor
jnp
das
push
mov
add
out
sbb
test
adc
sub
and
add
or
popa
jl
jp
les
sub
inc
add
es
flds
ja
fistps
ljmp
int3
call
jbe
imull
cmp
xchg
add
mov
shl
push
cli
add
jp
test
and
dec
inc
enter
mov
mov
fs
stos
int
dec
inc
sub
outsl
jno
add
xchg
notl
and
inc
add
dec
scas
bound
fnstcw
push
leave
fsubs
xlat
jno
cmpb
cmp
in
pop
xchg
jmp
add
mov
test
adc
add
jno
int3
leave
push
stos
sarb
inc
test
push
xchg
add
push
aam
int3
jmp
or
clc
arpl
sbb
fildll
int
pop
mov
pop
xchg
outsb
into
sub
mov
xchg
testb
cmpb
pop
or
loope
mov
sub
insl
add
xor
in
xor
hlt
in
pop
jge
add
adc
dec
cwtl
add
lahf
aam
sbb
add
inc
jp
mov
adc
xchg
mov
mov
add
negb
rcr
es
sarb
push
xchg
js
clc
shll
mov
bound
lds
add
nop
scas
lret
jge
fiadds
mov
aas
cmp
xor
mov
dec
cmpb
andb
pop
push
push
int3
aad
fninit
lret
movsb
mov
notb
or
jo
and
call
notb
mov
loopne
mov
xchg
add
loope
in
or
add
ss
xchg
mov
aad
xchg
mov
sub
sub
loopne
mov
push
or
ss
enter
in
scas
add
adc
mov
cmp
pop
addl
call
mov
add
cmp
lahf
add
std
mov
pop
subb
xor
int3
xor
mov
sbb
out
or
push
mov
add
test
loopne
in
and
xchg
sub
cmp
add
pushf
ret
and
int3
sarb
stc
sub
insb
adc
jno
popl
and
or
repz
mov
lea
jmp
mov
mov
adc
add
lods
test
xor
sub
in
add
add
xchg
add
add
test
inc
mov
or
dec
add
je
mov
add
es
pop
or
popa
jbe
mov
lret
shlb
dec
test
or
nop
add
insb
cmp
push
sbb
push
lahf
dec
xchg
ret
dec
lods
roll
sbb
cmp
mov
je
jne
add
and
jno
fldcw
mov
add
mov
jle
enter
fstl
push
add
div
cmp
sahf
inc
arpl
pushf
dec
xchg
scas
add
sub
push
xchg
filds
add
push
sub
pop
mov
add
mov
inc
jnp
add
stc
inc
xor
test
andl
pop
ss
mov
repnz
imul
das
push
mov
pop
js
or
test
push
mov
push
out
cmp
push
jl
hlt
mov
repz
mov
sub
cs
cmp
lret
inc
or
add
pop
int3
or
sbb
dec
add
cmc
pusha
arpl
mov
add
cwtl
sub
inc
add
lcall
decb
dec
sub
add
jecxz
xchg
jmp
bound
add
mov
pop
mov
and
rcrb
adc
addb
or
xor
add
or
into
add
push
lods
stos
push
aaa
mov
cmpsl
bt
cmp
repz
lods
fdivs
in
add
mov
and
in
cmp
pop
out
mov
add
nop
sbb
stos
int
jb
test
pop
mov
add
int3
dec
push
scas
cld
sbb
add
cwtl
add
dec
pop
push
xchg
add
subl
jno
add
lock
sahf
lret
or
push
cmp
pop
mov
pop
and
xchg
aas
es
and
and
dec
add
xchg
or
xchg
push
add
cltd
aam
lock
sbb
lods
inc
fs
popa
add
push
stc
dec
iret
mov
invd
mov
and
int3
je
repz
inc
sbb
pop
push
add
mov
out
repz
loopne
or
adc
xor
sbb
or
and
mov
bound
js
mov
pop
adc
xchg
hlt
popa
insl
add
adc
or
xchg
pushf
add
jmp
pusha
aad
je
add
and
fildll
loopne
xor
mov
jp
add
dec
xor
xlat
mov
movsl
adc
mov
hlt
adc
xchg
push
fcmovb
lcall
mov
and
xor
mov
jo
aaa
jmp
shlb
add
ja
add
mov
hlt
shrb
icebp
mov
loopne
mov
push
decl
ljmp
shlb
sbb
mov
bound
pop
jge
add
mov
and
pop
icebp
jle
pop
jmp
stos
inc
jg
mov
xchg
movsb
iret
lret
and
add
lds
jmp
subb
add
xchg
out
sub
fimuls
mov
mov
adc
xor
out
pop
roll
addr16
add
add
stos
push
jns
imul
divb
lods
out
add
out
sbb
xchg
add
jo
or
xchg
rclb
add
mov
enter
lds
test
adc
and
aaa
cmp
mov
pop
out
lods
lock
add
sbb
fcompl
fnstcw
mov
dec
loop
ss
xor
cld
adc
push
or
push
jmp
cmp
or
mov
ret
movsl
push
add
es
mov
sar
popl
leave
jmp
in
dec
scas
rdseed
sub
sarb
and
mov
and
lock
adc
call
sub
lret
loopne
mov
inc
adc
mov
add
rclb
sub
stos
add
or
stc
std
fidivrl
push
clc
add
pop
and
dec
cwtl
pop
hlt
lods
pop
aas
fisttpll
xchg
pop
movsl
mov
ret
or
cmp
inc
dec
rcrl
jmp
hlt
fistl
add
jb
jecxz
rcl
push
cmc
icebp
push
clc
adc
cmp
shll
inc
jbe
mov
pusha
add
loope
rolb
mov
repz
jbe
dec
cmc
lahf
xchg
sub
add
mov
mov
pop
and
sti
sbb
scas
jo
aam
dec
add
in
les
xlat
jno
sarl
shl
add
aaa
dec
fwait
pop
mov
dec
add
add
mov
and
xor
pop
jg
cmp
xchg
sbbb
outsl
orl
cli
push
push
gs
dec
adc
nop
mov
sub
in
sahf
lret
negb
push
fadds
jbe
incb
aam
mov
lret
leave
dec
add
jmp
add
fld
jne
add
mov
cmp
pusha
loop
dec
add
sahf
pop
add
xchg
cmpl
pop
jbe
aas
xchg
dec
sbb
add
mov
testb
je
in
fdivr
rcll
aaa
cmpb
popa
dec
shrb
icebp
ret
xlat
xor
fisubrs
lret
pop
mov
pop
dec
mov
cltd
daa
les
and
std
add
ja
pop
mov
ljmp
repnz
cwtl
jns
add
xor
call
add
test
mov
enter
xor
out
loop
dec
push
sub
and
sub
xchg
dec
shl
dec
sub
add
fisttps
xor
mov
add
pop
or
lods
dec
mov
inc
xchg
mov
test
inc
add
lahf
sbb
push
in
add
mov
add
arpl
adc
lods
jecxz
push
push
cmp
mov
mov
sbb
fstpt
push
sahf
dec
adcl
cmp
mov
mov
fdivrs
std
out
testl
dec
push
sub
lahf
sbb
testl
in
lods
test
int3
xor
xchg
sahf
add
inc
inc
xor
mov
adc
imul
lea
mov
fsubs
and
lock
jge
loopne
add
inc
mov
jnp
push
jo
call
and
aaa
inc
shll
add
cmpsl
mov
lods
imul
pushaw
into
icebp
mov
or
int3
cld
add
popa
push
cld
xchg
xchg
add
xor
add
aas
hlt
cmpsb
in
add
lock
loopne
add
out
jb
gs
mov
and
and
leave
insb
bnd
call
add
sub
mov
mov
sbb
cs
jno
or
xlat
js
jg
sub
add
jge
mov
push
jnp
cmp
pusha
shrb
add
mov
push
aam
and
pavgw
mov
arpl
pop
sub
mov
ret
push
cld
sarb
loopne
addr16
xor
push
xchg
dec
in
std
shrb
jno
adc
aam
mov
data16
sbb
push
dec
outsl
jl
cld
push
es
jne
xchg
mov
pop
jb
imul
adc
xchg
mov
sbb
ret
repz
add
shlb
xchg
push
xchg
fstpl
push
cmp
add
cmp
inc
lds
mov
in
bound
fldl
inc
push
icebp
daa
pop
push
mov
add
repz
push
iret
xchg
or
sbb
repz
stos
je
add
icebp
stc
movlhps
jle
mov
push
inc
sub
lds
add
sbb
shlb
movsl
add
jge
jbe
add
sbb
pusha
lock
ja
adc
fisttps
pushf
add
xorb
fisubrl
sahf
inc
jp
scas
add
leave
je
add
inc
fcoml
adc
pop
push
outsb
or
mov
add
adc
pop
jl
pop
sub
mov
mulb
pusha
sub
roll
or
fs
pusha
loopne
adc
imul
pop
jl
or
dec
sub
xor
mov
mov
dec
hlt
mov
repnz
sbb
adc
ss
movsb
cmpb
add
bound
inc
xor
lcall
add
ret
and
mov
popf
pop
loop
js
add
sbb
notb
sbb
lds
hlt
imul
movsl
cmpsb
lea
loopne
pop
inc
stos
inc
rcrl
add
enter
xor
jnp
push
mov
inc
pslld
and
pop
fstpt
add
adc
xlat
push
fsubrl
add
outsb
mov
imul
shld
push
loopne
jle
data16
add
pop
in
or
fwait
stc
xchg
add
out
mov
push
dec
outsb
out
and
and
jl
add
sbb
mov
hlt
pop
inc
sbbb
pop
cmp
dec
and
push
inc
add
mov
je
andb
mov
cmp
scas
imul
rol
roll
sti
push
mov
pop
dec
aam
pushf
and
outsl
test
aas
icebp
jno
add
dec
mov
sub
jmp
add
and
aam
ucomiss
cmp
pusha
and
add
stos
js
add
add
push
push
jp
aas
or
add
inc
or
mov
sub
push
add
cmpsl
add
cmp
push
add
push
jp
sub
mov
lcall
enter
push
mov
cmova
add
mov
inc
rorb
pop
add
pop
mov
sub
or
add
xchg
es
arpl
add
xchg
or
cs
movsl
loop
leave
add
loop
pop
push
mov
xor
sahf
inc
jg
add
out
xchg
mov
add
sbb
outsl
movsb
scas
add
xchg
push
jge
and
mov
pop
add
mov
aad
and
or
push
add
push
xchg
pop
xchg
xchg
xor
and
js
mov
dec
fisubrl
dec
stos
inc
pop
shlb
je
xor
mov
pushf
popa
jae
adc
inc
jmp
jb
sbb
bound
mov
repz
out
sbb
fwait
shll
adcb
fisubl
jg
cmp
push
subb
fsub
add
scas
aam
mov
cltd
ret
mov
xchg
mov
sbb
orb
or
mov
es
hlt
enter
add
mov
mov
out
or
loopne
push
mov
xchg
add
add
add
dec
jge
movsl
fcom
loopne
push
insl
pop
push
add
js
pop
stos
mov
jle
dec
mov
addl
pop
ficoml
xor
rorl
cmp
inc
fs
mov
mov
lret
sub
shlb
add
fs
jae
jbe
loope
xor
xchg
add
aam
testb
dec
jl
pop
pop
loope
add
mov
stc
inc
push
mov
sub
sub
int
cwtl
mov
in
icebp
rcrb
lods
add
mov
testl
pop
fldcw
js
push
push
mov
adc
xchg
call
hlt
pop
cmp
popa
lret
sub
pusha
std
loopne
pushf
dec
adc
sbb
add
sub
mov
imulb
sbb
and
sbb
and
sub
inc
cmp
mov
ficomps
subb
add
repnz
int
adc
mov
cwtl
pop
cmp
sub
out
and
pop
shrb
xchg
aaa
add
inc
bound
fwait
mov
imul
arpl
cmp
icebp
cmpsb
mov
fucomp
cld
add
push
test
add
push
mov
pop
sbb
mov
pop
mov
ljmp
mov
jp
or
push
pusha
mov
push
push
lcall
insb
add
popa
call
sar
lahf
nop
mov
cmc
pop
xchg
rclb
pop
sti
adc
inc
lahf
pop
aaa
mov
ss
cmc
in
add
daa
out
jmp
negb
mov
and
es
out
cmpl
cmp
push
mov
fwait
mov
add
mov
and
pushw
mov
dec
scas
add
mov
or
sbb
mov
fs
mov
out
mov
pop
push
lret
dec
mov
in
adc
stc
and
ds
pushf
pop
add
rol
js
pop
xor
xor
mov
nop
jmp
jne
add
xchg
ss
gs
fidivrs
add
sbb
das
inc
cs
dec
je
clc
call
data16
xor
xor
xchg
jns
pop
dec
xchg
jmp
std
sbb
mov
mov
add
into
sub
pop
add
gs
incb
and
sahf
xor
add
subl
daa
mov
nop
pop
add
repz
dec
adc
push
daa
push
xor
insb
add
push
fldl
adc
stos
xchg
pop
scas
mov
inc
add
daa
push
add
pop
mov
jmp
lcall
lds
std
pop
jb
test
xorb
xor
inc
lcall
add
sbb
sbb
cmp
mov
cs
inc
movsl
dec
push
xor
or
mov
push
hlt
movsb
jge
and
dec
enter
xchg
add
lcall
lea
dec
cmc
clc
add
iret
lock
push
push
pop
xchg
push
fcmovnu
jns
push
loope
pushf
add
mov
sbb
sahf
fdivrl
add
ja
addr16
jp
xchg
or
mov
add
sbb
jnp
mov
jmp
pop
outsl
and
fs
fsubrs
xchg
lret
add
nop
loope
pop
adc
dec
xchg
fildll
push
sbb
repz
ljmp
imul
mov
add
sbb
jno
add
inc
std
out
mov
repnz
loopne
pop
inc
push
inc
pushf
mov
popa
jnp,pn
add
pusha
cmc
mov
dec
push
cmp
push
adcl
loopne
mov
lods
test
iret
jns
sub
mov
das
xor
and
pop
aam
test
in
rcrb
adc
jbe
xor
mov
loopne
ljmp
leave
aaa
std
xchg
hlt
lods
popf
cwtl
nop
cmp
and
mov
ds
aaa
cld
lds
in
push
jmp
push
cwtl
add
add
add
push
arpl
sbb
fcompl
mov
push
jl
inc
push
pop
mov
xor
cld
insl
popa
rolb
sbb
push
sub
xor
andl
vmptrld
adc
leave
xchg
je
loopne
add
je
jg
cmp
jnp
fldpi
xor
std
subl
jns
cmc
jle
add
ljmp
test
cs
out
and
movsb
jmp
sub
or
mov
cmp
xor
sbb
cli
jns
cld
cmp
stos
push
xor
hlt
lcall
xorl
inc
mov
xlat
aam
nop
addl
test
pop
js
lahf
pop
mov
mov
add
dec
inc
test
fistps
int
lods
adc
rolb
je
sbbl
add
pop
push
insb
add
insb
pop
fisttps
imulb
loopne
orl
add
out
cmp
adc
enter
mov
dec
cmp
loopne
pop
pop
mov
add
mov
loop
sub
add
pop
add
or
lea
adc
add
nop
lret
inc
mov
sbb
add
push
pusha
in
sbb
mov
test
loopne
adc
inc
js
jl
add
mov
repnz
rolb
xlat
push
dec
pop
mov
add
add
es
mov
iret
push
jne
sub
jp
scas
and
out
add
jnp
sbb
mov
out
push
clc
adc
shr
add
mov
rolb
inc
in
scas
je
push
fildll
adc
movups
sub
loopne
or
xchg
cltd
les
add
xchg
into
call
incl
gs
lock
cmp
in
sbb
cwtl
mov
lret
dec
leave
or
add
iret
aad
lahf
sbb
sub
jo
clc
sub
add
xchg
enter
mov
mov
or
addr16
test
jmp
hlt
out
lea
fisubl
xor
jns
xchg
sbb
js
inc
subb
sub
cli
or
push
mov
dec
or
pop
dec
cmp
movsb
rclb
jecxz
fmul
xchg
jnp
sub
or
inc
and
cmp
push
mov
js
rorl
enter
adc
icebp
pusha
lods
fimull
or
in
inc
les
popf
push
or
lret
sbb
sub
mov
cmp
inc
push
imul
xchg
add
fs
sub
mov
mov
pop
cmp
jb
incb
push
or
das
jnp
add
pop
jns
aas
out
icebp
pop
cmpb
xlat
pop
aad
inc
add
into
pusha
adcb
faddl
rep
jns
andb
xlat
bound
mov
mov
notl
xor
sbb
pop
sub
sub
insl
loopne
add
dec
ljmp
fidivl
sti
mov
addr16
scas
int3
arpl
out
adc
and
jne
add
pop
mov
push
push
add
sub
xchg
adc
je
aaa
jg
stc
int
push
in
push
jae
rorl
out
movsb
repnz
push
and
andb
out
repz
leave
sbb
fsts
mov
sbb
cmp
jl
ds
adcb
mov
cmc
jle
popf
mov
loop
leave
mov
add
mov
jle
xchg
imul
adc
jns
inc
jae
lods
push
hlt
cmc
inc
xchg
aaa
mov
jp
add
loop
cmp
sub
pop
hlt
jb
rorl
int3
push
mov
clc
jne
dec
lea
add
out
jmp
popa
in
jnp
repz
adc
xchg
rcll
add
cli
out
popl
fisttpl
fdivrs
add
jle
push
mov
es
cwtl
insb
mov
aam
mov
cmpsb
mov
add
arpl
rol
addb
cmp
add
xlat
mov
mov
sbbb
mov
add
lea
aas
xor
and
aad
sub
mov
ja
cwtl
jo
cmp
lcall
mov
jb
mov
or
add
dec
dec
fsubs
push
add
adcl
jb
mov
sub
subb
dec
mov
sarl
stos
cmp
or
add
xor
ret
xchg
or
pop
das
aas
insb
inc
dec
cmpsl
leave
cmp
stos
add
dec
cmp
add
adc
fldcw
sbb
lods
ljmp
pmulhw
pop
mov
mov
xchg
testb
cmpsb
subl
cli
sar
popf
add
mov
xor
pushf
or
and
add
std
inc
xchg
scas
fiadds
rorb
cs
ret
cli
pop
scas
xor
xchg
in
fdiv
push
add
adc
and
scas
ljmp
dec
inc
stos
mov
xor
pop
push
or
cmp
enter
or
testb
pop
fdiv
and
sbb
popf
pop
sbb
add
lds
xor
into
inc
imul
cmp
lods
andl
cmpsb
adcb
in
pop
lock
fcmovnb
loop
addr16
les
xchg
lret
ss
mov
xor
and
add
mov
aad
or
pop
outsb
add
das
sub
nop
mov
add
xlat
arpl
fildl
lahf
mov
sbb
add
jno
mov
lods
add
inc
cld
xchg
std
loopne
push
jo
pop
sbb
shrb
mov
pop
adc
movsb
add
in
add
lods
inc
mov
pop
pop
pop
add
fmuls
or
push
repnz
add
mov
rclb
xchg
sbb
xor
lock
es
mov
sub
ss
es
or
pop
mov
call
add
sahf
inc
xchg
pusha
add
sbb
popl
jb
adc
and
and
das
add
arpl
shll
nop
add
idiv
loop
or
xlat
pop
leave
mov
ss
jge
mov
pop
int3
into
jne
add
xlat
aas
sub
cs
movlps
iret
mov
pop
incl
imul
add
ret
cmp
cwtl
dec
jl
repnz
ljmp
fdivp
fldl
xchg
shll
mulb
mov
lret
xor
movsl
pop
mov
mov
add
pop
or
mov
xlat
lods
pop
push
lret
shrb
pop
inc
sar
out
lock
movsl
outsl
add
loop
rolb
les
dec
shll
roll
add
cmp
pop
adcb
mov
shl
mov
sarb
sbb
push
out
dec
cmp
leave
add
lock
rorl
gs
scas
xor
loopne
push
pop
in
inc
out
mov
int
jmp
inc
jb
scas
mov
sub
insb
repz
loopne
add
mov
add
cmp
cs
jo
add
xor
les
mov
int
add
and
lock
pop
scas
bound
scas
lods
push
add
ret
cmpsl
mov
lcall
mov
or
jg
pop
jge
shlb
adc
mov
mov
das
add
push
xchg
jp
pop
nop
jmp
mov
inc
or
pop
lahf
test
cmp
movsb
xchg
inc
push
subl
hlt
mov
mov
mov
sbb
or
loope
call
cwtl
mov
gs
ljmp
ret
sbb
inc
data16
mov
out
sbb
adc
insb
out
add
in
lods
xchg
mov
jo
pop
add
xor
pushf
daa
into
add
jmp
test
cmp
mov
loopne
and
push
mov
add
call
inc
subb
mov
xchg
sahf
xchg
mov
mov
pop
mov
xlat
test
outsl
or
pop
sub
cltd
fldcw
and
divl
pusha
sbb
xchg
stos
adcb
data16
add
push
ficomps
adc
filds
mov
fldpi
loope
dec
mov
cmp
test
add
cmp
je
add
test
dec
xchg
add
mov
fcoml
sbb
pop
or
insb
dec
pop
dec
adc
shlb
add
sbb
mov
add
mov
in
mov
cmpl
adc
push
aam
push
cld
inc
in
add
gs
outsb
shll
pusha
or
add
push
gs
add
or
add
cmpsl
sub
push
in
std
or
pop
inc
add
xchg
test
arpl
jno
rcr
enter
iret
lcall
add
lahf
mov
jno
cltd
jne
lock
add
pop
mov
and
cltd
mov
inc
pop
cmp
cmp
imul
adc
cwtl
shlb
jl
mov
xchg
inc
ds
inc
add
pop
cmpsl
test
add
add
dec
jne
pop
inc
leave
lea
mov
pop
add
pop
mov
xlat
orb
add
inc
icebp
aam
mov
cmpsb
lahf
movl
fucomip
enter
or
jecxz
rorb
lea
mov
add
je
sbb
mov
inc
mov
jae
jnp
test
jno
out
add
inc
mov
rorl
mov
jecxz
pop
add
xchg
lahf
fstpl
in
sbb
fcmovu
or
xor
rorl
xlat
in
loope
add
cld
xchg
cwtl
or
sbb
loopne
addr16
mov
pop
mov
push
lret
or
sbb
xlat
add
sbbl
int
mov
jge
add
xchg
adc
add
arpl
cli
add
pop
maskmovq
testl
pop
in
imul
xor
aaa
mov
or
jbe
add
mov
xchg
inc
mov
jo
dec
aad
mov
push
out
and
enter
add
pop
decl
mov
enter
les
add
inc
adc
push
ret
pop
mov
jno
push
sub
notl
dec
cltd
xor
out
dec
dec
lock
inc
push
add
sbb
push
and
not
jne
and
pop
dec
add
lea
nop
cli
rorl
dec
push
test
push
add
pop
pusha
sarb
adc
and
mov
sub
jge
outsb
cmp
sub
and
mov
mov
inc
xchg
xchg
pop
push
les
inc
js
inc
out
inc
mov
mov
fiadds
fisubl
andb
push
pusha
jo
clc
shll
adc
xchg
scas
add
jmp
fwait
dec
mov
add
or
movsb
mov
call
mov
pop
popa
fcmovnbe
sbb
jae
pop
add
icebp
out
es
int3
in
jg
lcall
shrb
push
xchg
sbb
inc
or
movsb
add
mov
popa
jns
add
int
std
mov
dec
add
shrl
add
adc
mov
stos
lds
imul
sub
mov
add
int3
out
push
add
cmc
and
mov
mov
stos
loopne
mov
xchg
xchg
add
fldl
or
arpl
or
out
int
call
add
sahf
fwait
sbb
sbb
push
pop
stos
pop
inc
mov
jns
lock
mul
jg
movsl
in
xor
insl
pop
or
push
js
add
mov
mov
aas
mov
add
dec
xchg
or
in
add
lret
scas
or
add
add
mov
pop
faddp
enter
dec
add
ja
movsb
cmp
imul
cmp
jbe
add
xor
cld
push
jo
rolb
sbb
push
aaa
cmp
jmp
mov
sbb
not
nop
add
sub
cmc
xor
je
add
mov
aad
mov
pop
pop
int3
sahf
xchg
dec
mov
sti
inc
jle
ret
add
test
xor
add
jge
imul
movsl
cs
cld
add
out
mov
js
sti
jl
add
cmp
insb
movsb
adc
out
add
cld
pop
fldt
aam
cmp
stc
add
sbb
mov
mov
cmp
je
clc
daa
xor
shll
rcrb
and
add
xor
dec
pop
subl
jb
sbb
repz
rcrb
sub
div
jmp
add
ljmp
adc
lahf
add
cmc
and
add
add
xor
push
cmp
add
in
fs
cmpsl
iret
inc
sub
inc
mov
xor
pop
jnp
mov
es
popf
jae
add
pop
push
jno
dec
mov
mov
pop
pop
mov
add
add
scas
jle
ja
or
aas
sub
jl
je
add
inc
cmc
mov
jne
pusha
pop
jmp
dec
xor
and
adc
jle
inc
push
stos
aad
mov
sub
xchg
push
scas
xchg
cmp
xor
ret
pop
cmp
dec
add
xor
imull
call
pop
push
mov
pop
adc
stos
mov
add
xchg
pushf
jg
insl
mov
es
adc
inc
adcb
cmp
out
sbb
jl
xor
add
xchg
addr16
mov
lret
add
adc
pusha
lsl
add
add
rorb
nop
add
or
test
rolb
inc
add
jne
mov
pop
cwtl
js
hlt
sub
insb
add
pop
xor
dec
inc
push
add
sahf
xchg
test
cli
out
xchg
rorb
xor
ret
outsb
rcr
and
andb
add
dec
xchg
dec
push
scas
mov
add
lea
aas
mov
xabort
push
push
or
cli
or
mov
out
push
je
inc
arpl
cltd
adc
movsl
adc
and
add
in
fiaddl
push
cmp
call
push
jbe
jnp
mov
out
and
repnz
jo
mov
lret
add
mov
enter
add
mov
in
or
add
clc
pop
shrl
test
dec
add
scas
sahf
dec
pop
jne
jge
into
push
add
nop
ss
or
mov
outsb
testb
hlt
rorl
cmp
mov
add
lret
loopne
jnp
add
pop
test
or
xchg
cmc
fiaddl
inc
add
sub
mov
addr16
je
add
add
jl
fcoml
mov
add
repnz
mov
sbb
fildl
jl
mov
pop
repz
orb
popf
repnz
arpl
or
cmp
add
icebp
xchg
mov
daa
testl
jae
sbb
adc
ja
movsb
sub
out
mov
inc
add
sahf
in
jge
mov
sbb
call
fcoms
aas
addl
sarb
push
jg
add
es
jae
roll
call
inc
cltd
add
mov
rorb
gs
addl
adc
add
cmp
xlat
popa
ss
out
cmp
aam
pop
adc
insl
test
fadds
xor
mov
mov
xor
das
inc
clc
dec
inc
rolb
movsb
mov
sahf
iret
push
xchg
cmpsl
inc
leave
sub
add
xabort
lods
jno
xchg
cmp
xchg
bound
pop
or
or
mov
fistpll
cmpb
lret
inc
xchg
add
lcall
mulb
das
loope
and
mov
pop
mov
add
adc
imul
mov
push
rcrl
mov
add
lea
stos
mov
lahf
cmp
dec
cli
shrl
xor
dec
inc
xchg
or
mov
jo
out
and
inc
sub
mov
add
enter
xchg
mov
iret
pop
fmuls
mov
dec
pop
nop
add
add
imul
dec
nop
rolb
mov
in
subb
mov
jecxz
sub
cld
pushf
add
adcb
outsl
push
mov
dec
ret
int
xchg
in
or
jns
adc
repnz
add
loope
dec
cmp
mov
pushf
sbb
cmp
outsb
rol
outsl
or
push
in
mov
jmp
ds
mov
test
add
xchg
pop
nop
sbbb
clc
sbb
mov
fcmovbe
xor
xchg
inc
mov
jns
sar
adc
add
cmp
add
js
mov
sbb
pop
and
lods
cmp
outsb
mov
cmp
movsl
mov
dec
add
data16
fstpt
adc
or
shrb
xchg
fucomi
div
lods
add
cmp
test
dec
in
mov
dec
in
inc
stc
mov
sub
pop
decl
push
lcall
xchg
or
adcb
insb
mov
or
sti
fistpll
xor
dec
push
cs
out
test
sarb
pop
fbld
test
fistpl
sti
xor
cltd
push
adcl
cmpsb
in
les
inc
in
add
test
test
jno
add
mov
sub
adc
pop
add
std
addb
sub
inc
notl
stc
test
jae
fldl
jmp
mov
xchg
and
and
fdivs
and
jo
call
xchg
mov
mov
rcl
add
pop
add
or
push
or
out
mov
les
lret
push
fdivrl
or
jno
pinsrw
cwtl
add
ss
jns
add
inc
fisttpl
out
add
jnp
push
push
mov
daa
add
mov
mov
dec
into
pop
add
lahf
cmpb
imul
fidivs
add
mov
mov
enter
add
jp
cmp
cmp
cwtl
outsl
add
fsubrs
popa
xchg
fs
or
pop
call
je
dec
bound
sub
push
or
xorb
shl
mov
adc
push
mov
outsb
xchg
add
popf
xlat
sarb
dec
pop
pop
push
stos
jne
loopne
insl
loope
pop
and
daa
inc
xchg
add
es
repz
mov
adc
add
push
mov
or
shll
or
hlt
pop
bound
mov
cld
lock
dec
rolb
pushf
aas
mov
jno
movsl
popa
push
test
cmp
mov
push
gs
mov
sbb
push
icebp
in
loopne
scas
adc
jle
add
jp
pop
add
mov
int3
add
mov
xor
add
jae
inc
push
add
push
insb
test
aad
cmp
jp
add
scas
movsb
add
nop
jb
mov
add
pop
pusha
push
pop
mov
mov
add
sbbl
jp
dec
sarb
shll
jp
or
lahf
lcall
dec
fs
mov
out
outsb
rorb
add
inc
adc
sub
daa
cwtl
shlb
add
icebp
sbb
es
cmc
out
dec
or
pusha
pop
sub
add
pop
cmpsb
pop
jns
lds
push
sbb
add
xchg
lcall
pusha
stc
and
xor
xlat
aas
push
outsb
and
testl
test
bound
jl
jecxz
jbe
sbb
inc
adc
add
add
sub
mov
sbb
popf
loopne
push
lods
add
inc
insb
fwait
out
das
add
adc
scas
repz
add
cmp
dec
scas
cmp
dec
adc
and
sti
dec
out
xor
lds
je
and
jbe
pop
hlt
cmp
ret
mov
mov
jae
pushf
ret
mov
jb
mov
shrb
pop
push
adc
xchg
out
es
and
cmp
cmc
subl
cld
lret
mov
icebp
pop
jae
xlat
gs
mov
outsl
sub
inc
imul
in
mov
faddp
fadds
and
popa
mov
sbb
pusha
imul
add
jne
push
lcall
sub
lock
add
or
mov
cmp
cmpsb
cmpl
enter
add
rol
fscale
loop
sub
dec
mov
inc
add
sbb
xchg
pop
add
and
add
inc
cmpsb
outsl
and
sbb
dec
movsb
pop
inc
popa
xor
cld
pop
incl
jmp
inc
jbe
enter
mov
loop
icebp
sbb
into
dec
xchg
push
sbb
clc
ja
sub
pop
sbb
sub
dec
and
xchg
add
and
push
mov
jmp
ljmp
add
out
cmc
rcl
mov
jmp
mov
push
inc
out
rclb
sbb
jne
jge
out
daa
or
pop
cmp
loopne
repz
shl
and
cmpsl
data16
shl
cmp
and
cmpl
pop
mov
and
adc
adc
pop
dec
std
mov
cmp
ds
and
pop
mov
inc
popa
push
rcr
xor
push
fistpll
add
push
js
lret
pop
jmp
add
cmc
and
adc
mov
test
or
ret
add
popa
popf
not
push
jae
adc
pushf
repnz
add
push
imul
sgdtl
movl
lret
fcompl
movsb
jne
nop
jno
mov
xor
pop
negb
mov
mov
or
ror
mov
sub
add
inc
pop
imul
daa
sub
mov
mov
movsb
cmovg
jno
sbb
push
stos
or
sbb
add
push
clc
hlt
out
leavew
mov
les
pusha
inc
inc
test
or
mov
lds
fistpll
adc
xor
xchg
call
mov
inc
xor
mov
inc
lock
aam
inc
nop
jo
insb
adc
in
sub
popf
paddsb
and
mov
lods
add
cli
outsl
inc
scas
add
adc
int3
pop
pop
sbb
insl
mov
add
fstps
sbbl
add
or
inc
push
cltd
fwait
add
mov
inc
outsb
mov
sub
mov
stos
adc
mov
cli
xchg
cmc
enter
insb
add
jae
in
ficomps
js
xchg
push
or
sub
and
inc
xor
ret
push
ret
mov
cmp
arpl
jne
test
xchg
andb
or
je
and
mov
call
movsb
sbb
outsl
or
ds
iret
add
stos
xor
pop
jp
sub
adcl
jl
mov
mov
mov
jle
hlt
insl
push
pusha
cli
and
aas
in
adc
mov
and
ret
pop
inc
ficoml
call
or
adc
mov
mov
sbb
add
nop
dec
arpl
add
push
les
shr
stos
add
or
outsb
adc
sbb
xorb
sbb
xor
mov
push
lahf
sbb
jp
push
xor
mov
inc
or
cmpsl
jecxz
cwtl
mov
je
jno
mov
add
cmc
cmp
mov
cwtl
add
leave
jb
ret
cmp
add
jge
enter
xor
xchg
ds
inc
jecxz
fcompl
add
aam
and
stc
mov
pusha
mov
add
rcl
sti
mov
dec
inc
or
xor
mov
or
add
sbb
call
mov
dec
push
arpl
jle
adc
dec
js
int3
adc
mov
or
adc
iret
xor
cmp
xchg
add
sbb
and
adc
out
dec
scas
dec
push
sti
dec
pop
xchg
add
or
pop
mov
jle
dec
mov
fwait
add
jge
sub
pop
orl
out
push
add
jle
xchg
gs
out
fiaddl
jb
dec
cwtl
popf
jl
mov
inc
sti
test
mov
jg
and
fabs
std
inc
xchg
add
and
rolb
cmpb
cmp
adc
sub
loope
shl
add
push
dec
mov
cld
add
push
add
push
add
lods
or
dec
jg
pop
mov
aas
enter
push
cli
outsb
add
movsb
xor
add
dec
js
fnstsw
inc
mov
add
popf
mov
out
outsb
push
push
jl
mov
stos
ds
add
push
cmp
mov
xchg
or
pop
jmp
push
adc
mov
mov
sbb
je
lock
pop
outsl
push
push
loop
shlb
mov
scas
adc
mov
cld
cmpb
xchg
sub
lret
imul
in
pop
add
inc
mov
fs
xor
sub
xor
sti
or
or
rorb
xchg
call
into
sbbb
pavgw
or
mov
andb
push
and
in
xchg
iret
popf
pop
fadd
addl
inc
jmp
xor
imul
leave
in
movsb
daa
xchg
into
cs
push
add
sbb
or
add
inc
add
jge
add
pop
mov
movsl
fsub
mov
sbb
pusha
in
imul
add
jnp
sub
std
cmpsb
add
mov
ror
mov
xchg
sbb
popa
jle
cmc
call
insb
dec
push
clc
sub
mov
pop
test
outsb
add
fcomp
inc
lret
rclb
adc
lock
dec
push
mov
add
xor
mov
out
xor
mov
mov
mov
push
bound
inc
adc
add
mov
loopne
out
or
outsl
sbb
jo
in
or
add
dec
inc
and
xlat
dec
pop
adcb
inc
inc
lock
out
test
stc
loopne
hlt
add
pop
daa
inc
and
jge
add
sbb
fsub
cmp
fs
push
add
rorl
std
mov
jo
cmp
outsb
mulb
fdivrp
add
cmpsl
add
insb
in
mov
cmp
leave
bound
xor
cltd
sbb
mov
jnp
enter
push
roll
loopne
xchg
sub
push
add
aam
xchg
jg
jecxz
test
mov
adc
mov
add
shl
clc
test
xchg
in
and
push
sub
push
add
inc
jnp
pop
sbb
mov
aaa
pusha
int3
cld
push
insl
add
sgdtw
sub
in
hlt
lret
stc
js
je
mov
jo
sub
jb
xchg
inc
push
pusha
mov
add
shl
in
fstpl
xlat
mov
mov
and
mov
add
out
lods
inc
inc
ret
push
mov
mov
xor
dec
js
xchg
int
add
lods
in
jne
jno
sbb
lret
dec
in
pop
inc
sbb
push
xchg
pop
lret
cmp
or
roll
jmp
rolb
mov
mov
sbb
int3
fidivrs
stos
jb
add
push
mov
xor
fsubrl
int
sbb
pusha
stos
cmp
pop
xlat
out
add
add
cld
orb
outsl
add
jbe
jmp
adc
loopne
add
xorb
mov
mov
pop
sub
fisubs
pop
out
cmp
fistl
nop
and
jg
xchg
faddl
mov
add
or
cs
fisttpll
cmpsb
mov
mov
pop
pop
fdivrs
sbb
push
push
jmp
loopne
lock
pop
mov
inc
fstps
pusha
lds
ljmp
add
and
add
sub
pusha
inc
lret
sahf
les
aam
testl
sbb
fsubrs
xor
and
mov
adc
pop
loope
aaa
shrd
insl
ss
imul
or
sbb
push
sti
stc
jg
add
rclb
push
inc
mov
test
mov
add
out
pop
in
add
shll
outsl
xor
cmpsl
dec
push
aad
stos
insb
int3
sbbb
in
jb
je
out
mov
xchg
or
and
mul
insb
jl
dec
jae
add
pop
jno
sbb
mov
sbb
add
pop
xchg
cmp
movl
adc
jns
add
mov
cs
test
bound
mov
sbb
fistpll
imul
push
ja
add
hlt
inc
xchg
fmul
iret
push
add
aas
out
lea
add
dec
in
or
xchg
xchg
sti
xchg
in
add
pop
adcb
adc
add
dec
jns
add
inc
orl
js
adc
pop
dec
iret
pop
xchg
ja
or
cmp
add
sub
scas
ja
shll
popf
push
mov
jnp
scas
movsb
out
sub
cmp
movsl
mov
and
shll
loope
cmpsb
push
clc
orb
add
fists
pop
add
sbb
add
add
or
fadds
xlat
lock
dec
sarb
add
xchg
mov
xchg
shlb
add
js
cmp
lods
out
push
scas
dec
push
ret
or
mov
sarb
pusha
test
dec
fistpll
xlat
mov
cwtl
js
add
jmp
pop
add
repnz
mov
inc
or
xchg
test
test
loopne
test
call
insl
aam
aad
ja
add
leave
sbb
pop
adc
paddq
clc
sti
push
add
sbb
adcb
iret
pop
add
loop
loopne
xor
out
inc
add
mov
mov
cmp
pushf
insb
je
add
adc
loop
popa
and
mov
add
fwait
stos
cld
movb
push
mov
or
cmp
and
add
into
mov
mov
cmp
push
sbb
test
push
icebp
xchg
sub
xchg
jg
jo
dec
pop
imul
movb
inc
mov
add
mov
scas
iret
lcall
cs
sub
cld
rep
add
mov
cmpsl
clc
add
stos
mov
in
ds
out
and
arpl
popa
mov
fwait
add
mov
int3
in
add
push
loopne
stc
cs
mov
leave
add
pop
into
pop
add
jmp
cmp
cmpsb
xchg
add
mov
lds
jns
mov
cmp
inc
cmpsl
rcrl
pop
flds
loopne
sbb
add
jnp
push
inc
jg
or
outsb
decb
rclb
mov
mov
cli
ret
and
and
and
lods
outsb
loope
cmpb
dec
pop
in
int3
dec
mov
mov
test
lock
pop
cmp
sub
inc
cmp
outsb
add
adc
and
jno
subb
or
in
lret
add
shl
xchg
cwtl
sub
ficomps
or
hlt
dec
add
mov
daa
ja
cmp
icebp
mov
mov
and
add
pusha
addr16
jo
nop
in
inc
inc
movb
mov
sbb
adc
add
xchg
xchg
dec
and
add
mov
sbb
shll
scas
jbe
add
notl
push
lods
jns
call
cmc
mov
add
cmp
jnp
call
xchg
fadds
stc
inc
insb
add
inc
repz
mov
leave
scas
out
add
sbb
mov
jb
or
dec
in
ret
push
cmp
fnstenv
mov
roll
jmp
std
xchg
lea
cmp
jl
or
punpckhdq
inc
movsb
cld
sub
push
notl
nop
sbb
hlt
stos
es
add
xor
fsubl
inc
fs
in
std
adc
push
or
js
xchg
mov
call
jmp
hlt
pop
and
mov
pop
gs
out
sbb
je
fstl
enter
xor
xor
lret
add
ret
aas
loop
ljmp
cltd
nop
cmp
jo
xor
mov
cmp
repz
cmpsl
jns
gs
jo
mov
and
cmpxchg
iret
test
mov
pusha
mov
int3
push
push
mov
adc
testb
add
pop
pop
mov
jge
sub
fldcw
dec
jo
leave
pop
add
imul
cmp
movl
cmp
pop
lock
push
add
dec
xchg
mov
mul
js
xor
insl
adc
cmp
xchg
mov
add
add
add
pop
push
jecxz
lds
cmp
ja
add
and
add
movsb
mov
je
loopne
sbb
add
hlt
and
clc
add
inc
aad
pop
pop
dec
lahf
add
xchg
ror
imul
cltd
xchg
mov
clc
sti
pop
mov
aas
sbb
xchg
add
test
and
add
popf
push
inc
icebp
ficoms
hlt
pop
in
inc
cmp
mov
aam
add
popl
pop
dec
data16
into
cmp
pop
popf
push
xchg
mov
rorb
cli
and
xor
mov
pushf
sub
push
dec
add
dec
rolb
xorl
ljmp
jb
and
sub
add
and
xchg
jbe
fmuls
or
sub
cmpb
daa
in
and
pop
leave
jbe
adcb
outsb
popa
add
pusha
pop
jg
dec
dec
aad
and
sbb
mov
inc
cmp
sub
add
fistps
dec
pop
pusha
jl
push
adc
testl
pop
add
adc
stos
mov
test
ja
dec
mov
and
sbb
inc
and
sbb
aam
iret
and
xchg
pop
mov
stos
and
mov
inc
add
jge
js
xchg
mov
pushf
adc
int
adc
cmp
dec
xorb
sahf
mov
add
lods
js
ds
test
rcll
dec
icebp
push
and
jae
sub
add
mov
add
add
lret
dec
cmp
xchg
jecxz
add
scas
dec
mov
cmc
xor
jne
and
addb
cmp
pop
add
cmp
lock
popa
sub
test
cmpb
jl
add
nop
cmpsb
pop
jne
sbb
jmp
sahf
movsl
add
jb
jge
fdiv
xchg
xchg
inc
cwtl
out
aas
sub
jg
sbb
xchg
inc
jne
js
loopne
rorb
push
push
jnp
fisttps
test
inc
mov
inc
adc
sbb
fadds
mov
sbb
cvtps2pi
pop
dec
or
ja
repz
in
test
or
add
sbb
fistpl
lahf
jb
les
sub
and
jbe
sbb
add
pushf
jp
aam
add
enter
pop
aas
aad
insl
cmp
sub
mov
add
adc
mov
pop
mov
add
add
pop
clc
xchg
imul
add
pop
sub
add
int
cmp
cmp
sbb
add
addr16
fdiv
pop
push
fisttpl
push
cmc
test
add
stos
mov
jb
xchg
inc
mov
pop
cmp
push
jle
stos
jae
sub
cmp
sbb
shll
sub
xlat
faddl
subb
icebp
cmp
repz
shrl
or
call
mov
stos
insl
mov
and
jp
fiaddl
pop
scas
cli
jno
insb
xor
xor
mov
scas
jns
jne
aam
out
popf
aaa
add
iret
mov
and
in
pop
daa
shr
and
inc
jne
sub
ss
add
bound
arpl
js
dec
push
push
icebp
cmp
and
ljmp
dec
popa
push
mov
or
and
push
cltd
add
out
xchg
push
or
inc
loopne
adc
xor
imul
inc
aaa
test
lock
pop
aad
mov
ret
cmp
sub
sub
nop
fwait
jecxz
xchg
or
and
mov
dec
sbb
subb
add
std
inc
sbbb
sub
je
xor
sbb
lret
mov
mov
push
push
pusha
cli
ror
fdiv
add
out
mov
cmp
aam
jmp
mov
ja
push
sub
ficomps
insb
and
pop
mov
add
out
inc
add
enter
xchg
mov
setae
nop
std
or
cmp
xchg
lock
scas
shrl
mov
stc
sahf
inc
and
data16
test
xchg
push
add
xorb
mov
dec
icebp
pop
int
call
mov
fwait
out
lahf
jg
out
xor
cmp
js
add
push
or
add
add
sbb
adc
int
mov
lods
cmpsb
push
movsl
fucom
test
and
mov
adc
lcall
sbbb
add
sti
jnp
scas
pop
adc
add
push
stc
push
decb
mov
pop
loopne
add
fimuls
pop
push
arpl
in
outsb
and
je
cmp
and
add
lret
mov
out
in
cmp
pusha
xor
push
or
and
add
cs
xchg
fistl
or
nop
add
mov
jl
dec
dec
iret
adc
dec
pushf
xor
and
lahf
cmc
mov
ret
xlat
fimull
jb
bnd
or
jnp
pop
cmovb
popa
pop
out
jle
cs
test
xor
mov
ja
jle
loop
add
jmp
push
pop
data16
pop
push
mov
and
or
push
inc
mov
push
iret
nop
jge
ret
mov
inc
addl
sbb
cmp
aas
or
out
add
xchg
add
notl
mov
and
jecxz
test
int3
sbb
or
mov
les
jmp
pop
xchg
out
inc
xor
jbe
repnz
xor
pop
and
movsb
mov
cs
stc
and
incb
sub
adc
inc
adc
and
cs
cmpsl
mov
dec
mov
mov
push
movsl
dec
rorl
notl
mov
js
push
popa
enter
mov
xchg
pop
or
add
push
inc
sbb
push
cltd
push
sbb
and
test
in
mov
std
das
inc
xchg
cmp
adc
and
jbe
add
xor
lock
movsl
cltd
cli
mov
mov
call
pushf
lret
add
or
add
and
imul
flds
xchg
cmp
push
sbb
adc
mov
add
adc
push
lcall
clc
xchg
es
int3
sbb
in
sbb
outsb
sub
inc
xchg
dec
push
add
add
cmp
ljmp
pop
movsl
loop
inc
stos
fcmovnbe
push
add
imul
add
add
sbb
pop
jmp
ljmp
mov
xchg
sub
pop
andl
jge
dec
sbb
arpl
loop
add
test
stc
or
js
mov
cmp
add
jae
andl
xor
lds
arpl
loopne
push
push
imul
pop
mov
push
or
cmp
test
xor
adc
test
scas
add
or
adc
pusha
lock
inc
sbbb
adcl
call
clc
add
push
subl
add
and
aad
popl
iret
in
dec
sbb
subb
xchg
adc
loope
mov
arpl
xchg
add
mov
ret
jmp
mov
mov
cmc
and
add
ficomps
jl
sub
xchg
je
mov
pop
xchg
add
jns
std
jmp
lret
push
je
int3
push
jp
adc
je
adc
stos
hlt
push
xchg
or
inc
sub
add
or
xorb
repz
mov
or
jmp
lcall
push
cmc
daa
lock
scas
push
mov
hlt
test
mov
pushf
or
dec
ret
cld
push
sub
ljmp
in
sahf
sub
push
cld
movb
mov
incb
pop
cmp
pop
cld
push
jns
mov
jge
sub
nop
inc
sbb
adc
scas
pop
mov
fdivrs
subl
subl
xchg
addr16
inc
mov
push
or
fnstsw
push
cmp
xchg
sub
dec
cmp
inc
int3
mov
cmp
sbb
scas
cli
imul
jl
push
fisubrl
add
inc
add
xchg
cmpsl
aam
call
jns
xor
test
mov
jl
push
ret
nop
mov
pusha
sbb
lahf
adc
add
movsl
sub
in
and
daa
adc
add
mov
sub
scas
pop
bound
and
add
adc
daa
rclb
push
adc
popa
mov
jnp
sub
or
jno
cs
scas
or
mov
mov
add
add
ds
sti
call
rorb
pop
cmp
lret
stos
outsb
sbb
add
lcall
add
test
mov
xchg
jge
mov
insb
xchg
sbb
or
js
mov
inc
sbb
ret
adc
ljmp
gs
mov
stos
enter
inc
loope
push
add
fldenv
scas
push
das
mull
orb
fs
and
jo
mov
cld
or
mov
cmp
lds
push
push
xor
addb
inc
adc
loope
add
jne
and
or
mov
xchg
sbb
andl
rorl
jmp
pop
js
push
insb
mov
ss
mov
repnz
mov
jno
lret
fwait
test
loopne
mov
xchg
mov
in
mov
jae
into
and
xor
adc
and
sub
ss
mov
pop
xchg
cs
test
and
pop
rol
push
icebp
fsubr
add
out
shr
subl
mov
adc
sub
push
adc
sbb
mov
outsb
add
les
cltd
sbb
dec
stos
inc
and
movq
cld
lret
add
push
aas
insl
or
movsl
xlat
shl
into
xchg
loopne
sbb
fldl
sub
mov
and
sbb
out
cmpb
adc
add
and
insb
add
ja
xchg
stos
in
and
dec
adc
sbb
test
incb
xor
cmpsb
xor
add
in
aad
add
pop
and
add
es
push
jmp
data16
lcall
xchg
mov
inc
and
jnp
push
lahf
icebp
les
sub
popf
push
and
or
cmp
add
jb
dec
sub
cli
call
sub
mov
dec
in
add
retw
xor
push
out
addl
adc
inc
repnz
imul
cwtl
add
lahf
cld
fsubs
cmp
jno
cvttps2pi
subb
scas
mov
or
adc
pop
pop
or
sahf
add
mov
dec
mov
push
sub
cs
scas
mov
and
nop
push
test
mov
es
movsb
pop
mov
sbbb
push
jnp
sbb
pop
xor
add
mov
std
pop
add
pop
in
rorb
aam
sbb
inc
repnz
pushf
clc
add
push
xchg
mov
paddw
mov
int3
sub
and
add
push
jnp
pop
sbb
lods
sti
adc
loop
add
jmp
add
add
jnp
push
and
aaa
pop
stos
jg
and
adc
inc
pop
push
or
das
aam
int
adcb
movsb
push
bswap
push
sarb
pusha
and
cmp
sub
add
jl
and
outsb
dec
pop
test
or
in
mov
scas
add
fldcw
dec
addr16
pop
or
je
loope
add
lret
arpl
clc
dec
sub
add
insb
pop
pop
xchg
icebp
jle
add
stos
push
data16
adc
mov
add
pop
push
add
mov
cmp
cmp
cmc
decl
mov
xor
imul
clc
jbe
arpl
push
jp
aaa
jb
sub
and
call
in
add
inc
imul
sahf
rorb
mov
push
dec
adc
pushf
or
out
mov
nop
jmp
insl
test
add
ss
mov
inc
mov
aam
adc
pop
sbb
or
and
clc
out
xor
repz
adc
adc
add
adc
pushf
and
adc
je
and
stc
nop
lods
xchg
dec
leave
cwtl
enter
cmc
inc
loope
inc
pop
push
dec
or
push
stc
cltd
jns
jo
arpl
lods
fistpll
jmp
clc
outsl
roll
je
or
dec
or
xor
add
cmp
sbb
add
xchg
sub
xchg
daa
je
cld
sbb
je
scas
add
xor
pop
out
add
std
shlb
sub
jbe
xchg
cmp
add
inc
je
leave
clc
add
dec
lods
add
daa
push
loop
push
push
and
adc
mov
push
sbb
adc
jle
mov
sbb
jae
filds
popf
cmova
lret
add
rorb
fsubr
and
aas
mov
sbb
pushl
and
add
sub
xchg
add
inc
loop
add
mov
add
lret
aad
dec
cmp
add
mov
fwait
icebp
ret
iret
test
loopne
pop
in
cld
fists
pusha
aas
inc
call
and
push
pop
push
adc
js
cmp
lods
xor
jg
jmp
movsb
or
and
es
subl
mov
aas
fdivrl
test
pop
pop
shlb
add
loop
xchg
add
jle
in
test
push
dec
lock
xlat
popf
movl
inc
mov
cmc
add
dec
xlat
dec
cmp
add
popa
inc
mov
mov
push
add
lret
inc
arpl
hlt
jns
xor
icebp
add
push
jmp
stc
cmpsb
sub
dec
xchg
sti
pop
xchg
cmp
add
scas
jge
add
mov
adc
add
inc
movsb
outsb
mov
add
lcall
jmp
pop
popf
cmp
int
in
push
cmp
add
adc
xchg
cmpl
shll
aam
mov
cmp
add
mov
add
mov
fwait
test
adc
fmull
pop
push
sbb
add
cmp
out
xor
daa
stos
sub
jmp
mov
adc
into
insb
rol
and
mov
sti
cmpb
pop
inc
bound
inc
jmp
adc
ret
test
aas
add
add
sbb
loopne
add
push
cwtl
rcll
jle
and
push
jns
add
mov
call
sbb
rcrb
lahf
out
mov
jno
imul
add
insl
xchg
sub
loop
fwait
cmp
push
jns
out
pop
repz
add
sub
add
testl
jmp
dec
jns
add
out
mov
shrb
mov
testl
sahf
adc
aad
jmp
mov
pop
out
hlt
add
bound
add
aas
movsb
sahf
add
js
fst
cmp
icebp
je
fmull
adc
adc
dec
and
add
inc
dec
xchg
jmp
in
cmp
test
xor
mov
mov
mov
dec
outsb
add
pop
lods
and
pop
adc
jo
pop
jp
add
jl
add
push
and
add
test
or
out
pop
daa
jns
call
ja
mov
add
sbb
mov
fisubrs
popa
push
sub
loopne
sub
mov
add
popf
js
push
stc
mov
shll
cmp
inc
add
fwait
int
nop
shlb
mov
fists
jp
add
add
addb
rolb
in
imul
cli
xor
mov
add
fxch
cwtl
comiss
mov
fcmovnb
xor
pop
and
movsb
pop
mov
jge
xor
push
insl
out
add
std
and
inc
mov
arpl
lcall
lret
and
xchg
add
test
cmp
sbb
cmp
decb
xchg
xchg
jnp
or
lods
lds
jge
int3
pop
popa
hlt
rcrl
inc
ret
stos
add
lds
daa
or
pop
popa
dec
add
repz
aad
xchg
or
jnp
mov
cmpsb
cmp
mov
pusha
in
add
pop
pop
lret
lahf
mov
dec
call
repnz
sahf
xor
pop
mov
jle
and
imul
push
js
cmpsl
xchg
inc
pop
mov
cmp
dec
and
mov
inc
aad
out
test
dec
pop
int3
rol
push
out
sbb
jno
scas
loopne
shlb
mov
xchg
call
add
andb
sbb
sbb
fldcw
andl
adc
add
in
mov
add
pop
push
push
add
xor
pushf
cltd
inc
shrb
jecxz
in
loopne
mov
pop
out
ja
pop
dec
add
rol
and
inc
movl
sub
cmp
and
push
data16
repnz
jecxz
inc
roll
aad
xchg
or
mov
cmp
stos
in
jno
mov
and
sbb
movsb
iret
add
sub
dec
push
or
mov
gs
sarb
add
mov
lds
imul
lods
sub
push
and
cmp
rolb
rclb
xor
fstp
pop
test
add
xchg
shld
pushf
push
pop
stos
pusha
stc
movsb
push
add
xchg
jno
add
lods
mov
sahf
push
push
push
arpl
add
jno
clc
in
lods
test
or
xchg
inc
repnz
xor
loope
jp
add
in
ret
aaa
or
adc
data16
add
mov
push
fildll
pop
jb
mov
jl
xor
pusha
sbb
sub
das
sub
pop
push
test
jae
loop
dec
insb
in
pop
cmc
inc
pusha
sub
sbb
jno
add
push
test
mov
shlb
inc
dec
cmp
add
lods
jae
pushl
out
and
xor
in
jg
push
movsb
fcomps
and
sub
mov
sbb
xchg
mov
and
push
sbb
cmp
jb
in
pop
nopl
idivl
mov
jae
or
dec
lods
mov
ret
dec
cs
push
xlat
xchg
repnz
jle
lret
sub
pop
test
xor
es
inc
out
cltd
mov
sub
push
sbb
nop
lcall
push
sbb
pop
loopne
mov
xor
pop
imul
jge
jbe
ds
addb
nop
jg
jb
dec
mov
mov
fucompp
xchg
sub
sbb
lods
fcomp
pop
inc
popa
test
mov
add
xchg
jbe
cmpsl
daa
imul
nop
xchg
inc
xor
movsb
add
pop
addr16
add
test
push
add
sbb
push
shrb
jae
das
fsub
sub
jmp
and
add
psrad
add
push
cmp
leave
jns
les
jecxz
ljmp
add
xchg
in
repnz
and
or
mov
das
mov
lods
add
mov
shl
add
ss
jnp
mov
add
xor
add
adc
cltd
in
pop
xor
imul
pop
jo
add
addr16
add
dec
out
add
sub
xchg
in
fsubs
js
mov
mov
and
xor
add
sub
in
das
push
lret
or
loop
jge
bswap
mov
xchg
pop
int3
js
cmp
dec
mov
xchg
pop
gs
xchg
test
outsl
add
sahf
ret
xchg
mov
xor
jle
push
sub
xor
add
outsl
cld
jns
pop
mov
arpl
xor
lcall
movsb
jne
lds
sub
in
jno
das
imul
lods
add
mov
mov
out
lret
add
enter
lods
pushf
add
lahf
sub
loopne
xchg
adc
scas
jb
shll
lock
adc
inc
add
mov
add
inc
mov
sahf
push
ret
std
jecxz
rclb
dec
push
xor
in
outsl
add
jne
add
and
cmp
subb
ret
xor
out
adc
out
or
push
repz
leave
xchg
add
push
pusha
test
push
add
add
cmp
xor
and
mov
pusha
es
fadds
inc
lods
xchg
add
push
jb
repnz
push
lods
sar
rcrl
jg
add
ja
pop
and
sub
sub
pop
andl
add
and
insb
js
xchg
push
mov
cmpl
dec
adc
dec
cmp
std
xlat
and
cli
cmp
push
inc
mov
sbb
add
and
js
cwtl
fdivrp
adc
lock
adcl
jp
push
scas
adcb
push
mov
add
fs
mov
scas
fildll
xor
cmp
ret
leave
or
jno
add
push
outsl
arpl
outsb
sub
in
jae
add
xchg
xchg
mov
sarb
pusha
popa
and
ret
pop
pop
jo
int3
and
push
loop
inc
mov
mov
mov
int
mov
bound
xchg
push
pop
sub
mov
add
fs
rolb
jne
mov
popa
es
or
jae
testb
aas
jns
test
fcmovnb
lcall
mov
mull
dec
jae
mov
js
add
push
sbb
in
mov
xor
add
xchg
add
jb
push
and
into
in
adc
insb
test
mov
icebp
fwait
lock
mov
cli
xchg
rorl
adc
stc
leave
mov
mov
jg
xor
lock
xor
cmp
aam
sbb
cmp
in
rolb
js
lds
sub
ljmp
rcl
sub
movb
rorl
xchg
cs
nop
add
push
lret
push
in
jnp
add
out
inc
psrld
add
test
fwait
nop
hlt
mov
xlat
add
sbb
pushf
in
push
mov
jbe
jle
insl
xchg
mov
push
fistps
int3
cwtl
sahf
stos
aam
pop
sub
mov
fcomp
add
mov
fdivl
sub
lcall
ret
xchg
inc
and
popf
jmp
jp
mov
jb
cmp
test
jne
xor
jno
pusha
push
add
or
inc
add
test
in
icebp
cmp
lds
or
mov
add
jg
adc
jb
andb
push
shll
hlt
ficomps
fnstcw
test
sarb
aas
and
lahf
jle
cmp
cmp
add
xchg
mov
mov
add
jns
lcall
movsb
test
add
pop
and
inc
add
add
xchg
mov
push
pop
fdivp
add
lock
out
mov
add
fnstsw
hlt
jle
add
and
rolb
les
sub
dec
call
insl
test
enter
pop
int
pop
add
sub
sti
add
icebp
xchg
pop
add
inc
shll
insb
fstpt
ja
add
pop
jae
shr
lock
dec
test
loope
add
xor
add
int
add
add
es
jno
push
stos
and
sbb
aad
dec
add
sbb
jg
or
pusha
leave
inc
mov
mov
nop
les
loop
jle
add
pop
xchg
cmc
cli
dec
fldt
jns
cmp
sarl
in
inc
mov
pop
es
testl
adc
bound
mov
sub
movb
add
mov
cli
mov
dec
aam
mov
fmul
adc
add
and
cmp
xor
fwait
push
add
insb
jno
sbb
ljmp
popa
and
or
pop
adc
test
or
push
add
sbb
rcrl
es
pushf
jmp
add
jne
stc
rcrl
iret
and
sub
push
sbb
mov
test
xchg
jo
ljmp
rorl
mov
inc
xchg
pusha
aas
push
jp
jg
sbb
add
mov
add
xor
xchg
jne
jecxz
pop
inc
or
and
aam
jno
es
loope
inc
and
inc
out
cmpsb
jne
add
ret
sub
in
and
hlt
push
jns
loope
pop
mov
shlb
cwtl
fwait
add
arpl
push
push
xchg
dec
nop
pop
dec
hlt
inc
push
test
enter
mov
mov
pop
cmpb
in
inc
sahf
insb
out
lds
dec
add
ficoms
dec
sub
in
or
insl
pop
lods
cmp
adc
dec
fs
add
dec
jmp
rcrb
mov
and
mov
aaa
inc
add
cmp
repnz
cmp
push
push
cmp
scas
ret
lret
sub
pusha
cmp
adc
imul
push
ret
push
fldl
scas
push
fidivl
add
or
cmc
outsl
es
pusha
add
sbb
fsts
sti
ljmp
dec
ss
adc
out
mov
cltd
pop
lds
add
fsubr
fwait
add
sub
xchg
pusha
dec
aam
add
das
xorb
mov
test
jp
sbb
iret
rcrb
jge
es
sbb
hlt
mov
pop
lods
adc
fiadds
in
sbb
fcompl
pop
mov
push
and
sbb
and
data16
ja
mov
fisubl
sarb
add
push
xor
xchg
std
outsb
mov
jg
js
cwtl
or
aas
insl
jge
jmp
pop
sub
mov
and
add
sbb
fsub
xchg
inc
pop
loop
dec
and
dec
adc
test
cmp
loopne
mov
rcr
add
subl
scas
movsb
add
or
sub
xchg
mov
jb
cwtl
arpl
sbb
add
test
push
and
ja
outsb
adc
fnstsw
jmp
xchg
add
rcrl
jb,pn
call
push
mov
jnp
std
ret
rorb
outsb
cmp
mov
popf
and
sub
and
add
ficoms
mov
mov
lcall
loopne
jg
jae
jecxz
add
inc
cld
sub
enter
cmp
add
stc
insl
fistl
enter
incl
push
fimull
dec
adc
jns
pusha
popa
movsb
rcrb
pop
or
iret
push
mov
pop
add
call
loopne
and
adc
inc
int3
les
nop
in
and
mov
dec
les
shrb
add
mov
fldl
mov
nop
fists
jo
adc
insl
stos
std
scas
mov
stos
mov
rcrl
and
aam
or
and
jo
shll
push
sbb
out
clc
adc
adc
push
sub
jmp
loope
movsl
mov
hlt
dec
in
push
jnp
daa
stc
jbe
and
dec
jp
imul
lret
mov
pop
add
pop
push
inc
push
stos
or
cmp
idivb
add
out
hlt
xchg
mov
ffree
in
add
fidivrs
inc
movsb
jnp
xor
in
inc
stc
add
jge
pop
jmp
aam
and
mov
leave
pop
mov
sbb
orb
mov
dec
add
inc
add
jb
sub
sbb
jmp
into
jg
push
inc
arpl
loopne
push
jle
js
fisubrl
leave
int
pushf
fidivrs
fcompl
mov
xor
ds
dec
inc
sub
mov
sub
fstpt
gs
stos
cmp
push
add
scas
adc
lea
sbb
mov
sahf
scas
addl
pop
dec
stos
jno
cld
adc
mov
lods
add
mov
dec
repnz
push
inc
cmpsl
dec
mov
mov
roll
mov
mov
addb
mov
les
mov
add
ds
outsl
pop
add
inc
jle
add
jno
pop
add
int
push
nop
insb
sub
add
add
pop
stc
lret
mov
cwtl
mov
mov
stos
fsubrs
sbb
add
xor
push
or
or
adc
loope
mov
add
dec
jbe
fsubs
inc
push
pop
mov
mov
dec
or
push
or
pop
jl
cmpl
cld
jle
jo
orb
ss
fisubl
mov
js
push
fwait
dec
sbb
inc
xchg
xchg
ret
push
cli
shll
jmp
push
push
cwtl
pop
add
pop
insl
fwait
ja
js
add
xchg
dec
cmp
nop
pop
push
in
je
aas
dec
dec
outsb
rorb
stc
clc
and
xor
cmpb
push
mov
rclb
test
scas
pop
jae
sarb
jmp
jecxz
insb
mov
push
sbb
xor
add
inc
mov
cmp
xchg
lcall
add
cli
or
sub
pusha
mov
mov
add
fimull
jno
inc
cmp
stc
fmuls
in
rcrb
out
jmp
dec
jne
add
or
push
add
adc
aam
out
int3
add
pop
lahf
dec
cmpsb
stos
add
push
jnp
dec
add
xchg
fstpt
push
ret
inc
mov
fdivs
in
lea
cmpsl
cmp
jb
fiaddl
inc
aad
fmuls
mov
stos
add
and
data16
outsb
xchg
pop
shr
and
add
dec
ja
test
add
in
add
xchg
add
fldl
add
add
int
dec
add
push
dec
ja
fs
add
push
mov
add
out
pop
les
push
cmp
dec
lock
sbb
pop
and
loopne
xlat
lods
or
adc
aam
sub
cwtl
shr
sub
jb
inc
mov
jne
outsl
test
add
cli
in
roll
push
pop
or
addb
add
clc
mov
add
push
sahf
sarl
xchg
adc
fldl
push
mov
xor
dec
aad
mov
add
sub
adc
aaa
xchg
or
rclb
cs
mov
mov
cmpsb
cmpsb
fistps
add
mov
fadd
into
roll
mov
movl
dec
add
mov
jnp
mov
add
adc
inc
sahf
hlt
sarb
stos
lods
jge
aaa
dec
fidivrs
jmp
add
push
push
loopne
std
add
lcall
cmp
adcb
sub
sar
sub
adc
jmp
jno
call
mov
icebp
aad
sub
pop
aas
call
scas
out
mov
pop
shll
ffreep
cmpb
mov
into
push
stc
aad
add
fdivs
add
lahf
outsl
imul
das
imul
jmp
jb
add
iret
lret
xchg
cmpl
pusha
or
cwtl
repnz
daa
aam
popa
add
jb
pop
rorb
insl
dec
in
rclb
outsl
add
jge
xlat
push
faddl
mov
mov
jl
push
mov
push
push
mov
pushf
iret
or
add
mul
repz
inc
lock
loopne
inc
push
inc
dec
jmp
out
inc
jp
sub
int
sub
cmp
dec
loopne
add
js
adc
lods
xlat
mov
dec
jle
es
addb
stc
xchg
sbb
mov
inc
inc
push
mov
in
pop
xor
test
mov
lock
cwtl
add
cmp
xchg
add
jecxz
xchg
fs
push
pop
cmp
adc
sbb
nop
aam
xchg
clc
test
dec
jmp
call
add
pop
add
cli
push
gs
mov
iret
lods
pop
inc
fidivrs
push
pop
testl
ret
test
xchg
out
and
dec
sub
mov
pop
mov
mov
add
adc
xchg
mov
xlat
pop
pushf
cmp
push
das
movq
adc
xor
mov
add
int
stc
or
pop
and
stc
mov
add
out
pop
jmp
pop
loopne
push
pushf
int
movb
sub
pop
clc
mov
icebp
mov
adc
je
push
lds
std
add
adc
lods
leave
mov
lret
test
jp
lods
pop
cmp
push
inc
jnp
mov
mov
int
nop
add
hlt
push
sti
adc
and
out
mov
xchg
emms
sbb
and
xchg
cltd
imul
add
xchg
nop
test
test
js
add
pop
mov
add
push
cmpsl
mov
and
and
cli
jo
adcb
mov
mov
mov
push
mov
cmp
ss
adc
jnp
mov
add
stc
sub
add
pop
push
and
test
sbb
test
inc
inc
cmp
sub
adc
aaa
jnp
add
jns
es
aad
push
adc
das
loop
sub
add
aaa
addr16
scas
ror
add
out
mov
mov
cmp
hlt
loope
inc
inc
pop
leave
pop
outsb
pusha
sub
cmp
add
mov
outsl
sahf
outsb
sub
sbb
jno,pt
andb
dec
push
push
push
ss
sbb
cmp
cwtl
jp
dec
ja
add
mov
add
ss
push
add
xlat
arpl
clc
xchg
faddp
jmp
and
jae
mov
dec
mov
je
jle
ljmp
inc
imul
cld
mov
aad
xchg
or
jle
iret
mov
lret
jmp
pusha
icebp
or
imul
jnp
or
imul
inc
add
les
xchg
fcom
shrl
sbb
mov
mov
scas
insl
adc
dec
adc
add
popa
adcb
jb
fstpl
fisubs
inc
mov
dec
gs
std
pop
mov
cmp
lcall
and
xorl
stos
sub
push
mov
testl
sbbb
push
add
push
xchg
add
imul
add
push
popa
mov
hlt
add
xchg
je
pusha
lret
clc
pop
adc
nop
xor
dec
sbb
sub
popf
push
pop
loopne
xlat
pop
sbb
sbb
add
jecxz
movsb
mov
es
mov
dec
adc
add
xor
xchg
and
adc
mov
adc
add
fmulp
add
push
adc
stc
outsl
inc
push
mov
movsl
cltd
add
sar
jb
aaa
outsb
scas
add
gs
push
xorl
shll
jmp
inc
fsubrs
dec
or
jb
je
mov
jne
push
adcb
leave
ror
xchg
rcr
add
mov
call
add
add
fs
add
and
movsb
in
pusha
add
divb
pop
faddl
sbb
fisubrl
xor
aad
sbb
add
jl
insb
sbb
andb
cs
inc
aas
add
xchg
rolb
add
insb
sbb
add
sti
jbe
loope
cltd
xor
push
mov
in
inc
mov
lahf
rcll
cmc
pop
call
jns
mulb
jno
lds
add
outsb
pop
mov
add
cmc
rclb
pop
ffreep
jo
sub
add
in
or
jmp
or
dec
rclb
pop
dec
pusha
or
xchg
add
cmp
sub
and
rorb
or
sbb
and
icebp
gs
or
stos
mov
sbb
mov
out
idivb
mov
bound
fbld
ret
iret
lret
in
push
add
inc
fmull
xor
dec
movsb
pusha
cmp
pop
sbb
inc
popf
jg
add
dec
out
lock
add
test
iret
mov
inc
cwtl
xchg
and
movsb
inc
cmpsb
ret
inc
call
sahf
mov
or
pop
in
pop
insb
jo
and
stos
add
sahf
add
mov
sbb
test
movl
adc
stos
xor
jge
xchg
and
xchg
mov
fidivl
add
repnz
out
mov
add
bswap
mov
sbb
repz
xor
pusha
jg
dec
pop
add
pop
push
sarb
mov
adc
sbb
mov
xor
push
fldcw
int3
dec
add
pop
inc
mov
inc
add
or
sbb
jo
sub
shr
pop
cmc
and
stos
add
dec
adc
add
dec
and
jno
add
cvttps2pi
sub
imul
aas
faddl
mov
es
adc
cmp
adc
arpl
enter
push
fwait
xor
pop
fistpll
jo
rolb
es
call
xchg
iret
jmp
arpl
ja
add
inc
pop
rolb
rcrl
and
scas
jo
mov
add
sub
or
pop
jo
mov
sbb
pop
stos
subb
mov
lods
sbb
and
loopne
pop
popf
adc
mov
add
jl
dec
sbb
test
or
mov
str
fnsave
mov
mov
lods
fistpll
add
xchg
mov
pop
dec
fstps
cmpsb
add
inc
jl
cmp
inc
lock
and
push
cmovae
in
and
ja
and
rolb
loope
or
add
das
addr16
dec
jmp
es
add
push
imul
pop
test
dec
pushf
pop
cmp
jg
scas
pop
jo
adc
movl
lds
addb
pop
daa
dec
out
scas
les
dec
ss
sbb
add
xor
loopne
adc
mov
mov
cmp
cmpsb
insb
and
stos
mov
sbb
andb
add
popa
sahf
inc
sub
sbb
inc
lea
iret
int3
sub
in
add
mov
lcall
sbb
fdivr
xchg
mov
inc
loope
ss
stos
add
adc
test
ret
jge
jg
add
in
inc
cmp
insb
sub
into
pop
dec
pop
jae
or
lock
movsb
es
fadds
repz
jns
xchg
lock
mov
or
sbb
mov
mov
push
out
mov
orl
std
dec
xor
les
adc
cmp
lods
ja
pop
leave
sub
and
sbb
add
cmp
pushf
or
jo
lahf
xchg
into
int3
daa
sbb
xchg
rol
sbb
add
arpl
lock
or
pop
dec
out
orb
cmp
and
outsb
clc
or
cmc
cwtl
adc
out
add
mov
jns
adc
add
hlt
push
mov
ficoml
jno
sbb
mov
fs
sbb
loope
mov
in
cs
cmp
lret
andb
les
push
inc
fildl
fstpl
jnp
daa
dec
cmp
fs
cmc
lds
sbb
mov
push
imul
inc
js
inc
cmp
pop
pop
xor
pop
loopne
mov
faddl
mov
cli
sub
mov
pop
sub
sar
add
pop
add
mov
mov
cmp
fs
sarl
jp
add
xor
iret
add
or
fwait
mov
lock
mov
enter
scas
mov
call
dec
pop
add
data16
add
xchg
push
and
pusha
test
add
adcl
dec
dec
nop
add
repz
in
hlt
jns
repnz
push
inc
insb
fdivl
in
add
mov
mov
add
clc
xchg
xor
movsl
sbb
inc
sub
inc
push
add
loop
mov
inc
push
push
push
aad
pop
ret
outsl
push
ror
fcmovnb
enter
adc
aad
fwait
aas
xchg
int3
test
push
inc
out
xor
jnp
dec
adc
imul
add
jmp
pop
push
insl
dec
push
loopne
xchg
jae
add
mov
into
push
faddl
adc
fnstenv
xchg
mov
add
and
loop
cmp
lcall
lret
mov
insl
mov
icebp
sbb
dec
jp
pop
cltd
nop
ret
xorb
jecxz
add
test
push
fstpt
jbe
lahf
sbb
mov
inc
mov
fadds
push
xchg
inc
pop
in
outsb
add
stc
and
mov
xchg
call
ljmp
dec
dec
add
pop
mov
and
or
loop
lcall
pusha
xlat
xchg
or
push
xor
xchg
cmp
addr16
add
ljmp
call
and
xor
xor
xchg
popf
and
push
cmc
loopne
and
sub
ret
cmp
mov
adc
add
mov
mov
add
cmp
add
jb
pop
inc
jge
add
or
sub
hlt
add
push
ljmp
add
ret
popf
cmc
rclb
xor
add
mov
or
sub
fildl
sbb
daa
mov
loop
shll
out
rolb
mov
rcl
dec
adc
clc
adc
add
jae
mov
rcrb
jo
hlt
add
push
ja
sbb
test
or
mov
fucomip
rcrw
push
and
popf
adc
mov
rolb
int3
push
ja
aaa
repnz
xchg
fistl
ds
test
shll
cmpsb
xor
dec
mov
add
sbb
stos
adc
mov
outsb
in
mov
jmp
sbb
mov
inc
pop
inc
inc
ret
add
push
arpl
cmpsl
scas
add
data16
dec
push
cmovb
adc
jmp
push
jnp
mov
test
xchg
aas
cmpsb
xlat
push
int3
xor
adc
std
in
movsb
pop
fisubl
ja
test
dec
add
sub
sbb
mov
aaa
adc
cmovbe
pop
mov
add
add
ret
rcll
cs
cmp
pop
pop
shrl
add
lock
repnz
fldl
cmpsl
push
insb
sbb
fwait
jnp
add
pop
pushf
adc
ja
push
icebp
mov
adc
orb
mov
fs
dec
pop
std
rolb
rorl
out
xor
daa
icebp
cwtl
xchg
lods
add
adc
xorl
pop
add
and
add
mov
fnstcw
mov
add
int3
xchg
sbb
stc
nop
fwait
add
jecxz
inc
lock
dec
mov
insb
js
cmp
inc
mov
call
lahf
xchg
lret
lds
testb
test
stos
nop
adc
pop
movsb
add
push
shlb
xor
add
ss
daa
out
cli
add
fcomip
mov
inc
push
in
sbb
inc
lcall
jno
mov
cmp
addl
mov
roll
xchg
mov
xchg
in
ljmp
dec
mov
cmp
roll
and
pop
add
or
in
stos
push
mov
and
imul
add
test
into
lret
outsl
ja
pushf
cmp
lds
mov
inc
mov
dec
sbbb
shrl
mov
sar
mov
popf
insb
add
mov
push
xor
mov
adc
int
sbb
repz
into
pusha
push
jg
xchg
ltr
jecxz
lock
scas
or
xchg
add
cmp
aaa
add
js
mov
jae
ljmp
push
sarb
and
pop
nop
jmp
imul
add
mov
push
mov
insl
aaa
lock
pop
and
rcl
sub
add
sbb
jne
arpl
mov
add
and
mov
cmp
das
stos
inc
clc
xlat
fcmovnb
negb
ljmp
inc
stos
add
lods
popf
sbb
push
add
int3
or
adc
adc
jns
inc
jb
add
jmp
or
add
lret
jns
stos
sbb
sbb
sub
testl
adc
sub
add
hlt
push
xor
jns
sbb
push
add
std
jb
jo
sub
xchg
xor
adc
lock
insb
andl
rcll
xchg
mov
das
test
adc
mov
rolb
add
mov
or
fidivs
add
scas
sbb
notb
pop
cli
add
shl
jne
xchg
sub
lds
xchg
xchg
xlat
add
xchg
dec
or
jo
int3
cmp
cmp
mov
fwait
out
add
and
in
mov
add
push
mov
inc
fiadds
jo
lret
sbb
or
and
pop
mov
popl
lret
mov
pop
pop
xor
cmpl
dec
leave
in
or
inc
cwtl
pop
aad
sbb
push
add
ret
adc
xchg
aas
fidivl
mov
data16
add
imul
imulb
shlb
loopne
mov
mov
jno
mov
push
xchg
add
sarb
scas
adc
das
out
or
mov
adc
adc
mov
dec
sbb
test
loope
sar
into
and
inc
lea
push
jecxz
clc
mov
push
xchg
stc
push
ret
std
scas
es
add
ffreep
pop
xor
and
gs
push
xor
push
call
jae
lods
jbe
or
gs
cwtl
les
mov
cmp
andb
les
cmp
test
xor
or
pop
inc
call
jge
add
or
xorb
xor
inc
adc
sbb
lahf
movsb
pushf
cmp
std
mov
lcall
bound
call
add
popl
mov
xchg
in
stos
into
aas
jo
add
inc
pop
adc
in
out
pop
add
inc
add
arpl
cwtl
jne
js
pushf
mov
mov
inc
test
jmp
or
lahf
or
cmp
sbb
add
mov
xor
and
push
dec
ret
iret
push
add
addr16
pop
mov
and
add
dec
insb
pop
lods
test
sarb
adc
add
pop
in
add
add
xor
nop
add
ljmp
loope
test
add
dec
lds
add
adc
add
jmp
sub
mov
dec
cmc
push
add
mov
testb
stos
pop
scas
test
adc
test
adc
ret
inc
pushf
lret
fisubrl
lret
sbb
mov
and
pop
add
xor
lea
cmp
roll
mov
mov
jbe
js,pn
xor
mov
in
sub
inc
outsb
ret
pop
xor
adc
xor
shlb
arpl
icebp
inc
insb
in
cmp
jg
rcrb
test
inc
stos
xor
add
repz
sbb
outsb
testb
sub
push
insb
icebp
rolb
clc
scas
add
jb
jg
add
or
pop
xchg
add
fnsave
mov
test
sub
add
clc
jmp
jnp
cmp
add
les
xchg
inc
movl
flds
data16
dec
call
xor
inc
dec
jmp
js
add
xchg
push
aaa
add
repz
pop
stc
popa
adc
add
pop
sbbb
nop
sub
fsubp
xchg
and
les
pop
orl
fst
pushf
adc
in
sbb
and
sbb
push
xchg
or
dec
fimuls
add
nop
push
aam
aad
dec
pop
daa
push
addb
rol
test
mov
cmp
xor
and
mov
andl
fsin
mov
rcll
sbb
in
lahf
rcr
sbb
push
in
mov
dec
leave
pop
pushf
mov
xchg
xchg
out
andb
out
andb
jecxz
add
mov
in
add
and
mov
es
or
mov
pop
dec
clc
daa
bound
shr
lock
scas
jmp
jns
das
push
add
loope
and
shrl
xor
mov
leave
mov
add
nop
scas
add
pop
popf
and
aad
adc
outsl
pop
iret
add
cmpsb
mov
clc
mov
dec
shl
mov
cltd
shlb
push
sbbl
add
ficompl
dec
hlt
fcoml
mov
add
adc
mov
into
adc
fimuls
jle
and
je
cwtl
sahf
adc
or
shrb
cld
test
daa
adcb
jb
imul
and
mov
xchg
jo
jl
or
les
dec
mulb
stos
addb
cmp
xchg
push
aad
pusha
fcmovnb
adc
adcb
and
add
aam
pop
mov
call
xchg
sbb
mov
add
inc
sbb
sub
js
cmc
sub
add
xchg
inc
jl
cld
out
adc
mov
inc
add
in
inc
vandps
insl
mov
add
sbb
mov
add
aad
xchg
cmp
jnp
xchg
fadd
das
pop
xor
aas
add
or
loopne
icebp
pop
inc
sub
xor
rcll
add
xor
add
xchg
pushf
and
pusha
add
add
xor
push
jl
push
std
shlb
add
xor
dec
je
test
xchg
dec
out
add
dec
adc
fldenv
mov
in
icebp
popf
cltd
adc
mov
cmp
jne
iret
ret
loope
out
stos
ficomps
mov
fldt
sbb
jo
xchg
cmp
lret
add
shlb
fldl
jg
pop
int3
ja
lret
cmp
daa
ret
shlb
inc
cmp
push
xchg
push
dec
jo
pusha
mov
xchg
aas
push
leave
ss
sbbl
clc
cmp
das
iret
xor
pop
cli
pusha
in
jb
jle
fisttps
popa
shlb
xor
insb
bound
inc
adc
inc
add
dec
popa
inc
call
sub
mov
imul
mul
mov
es
add
or
inc
mov
adc
cmpb
arpl
or
subb
jnp
add
rorl
adc
inc
xchg
adc
sarl
repz
mov
sub
imul
mov
mov
xor
lds
add
xchg
popa
xchg
test
loopnew
ficompl
repz
mov
push
fsubrl
loopne
xorl
xor
pop
sbb
add
pop
mov
sub
jmp
push
loop
ret
fs
push
sub
loope
pop
nop
or
push
xchg
xor
jo
sbb
mov
jge
sbb
pusha
mov
jnp
dec
xchg
pop
or
outsl
add
inc
push
stos
mov
add
aas
testb
clc
push
mov
add
fld
mov
adc
in
cwtl
cwtl
add
add
sbb
fadds
push
cltd
cmp
push
rol
sbb
pushf
in
les
pop
adc
jo
hlt
push
aam
aad
enter
out
xchg
pop
jne
imul
call
and
pop
int
mov
adc
pop
jo
insl
jno
xchg
popf
mov
adc
sbb
add
push
rcr
test
nop
xchg
pop
mov
pop
jl
and
or
clc
idivb
jg
push
roll
fldt
jae
xor
enter
xlat
pop
add
xorb
lds
push
xchg
add
lahf
push
xor
pop
and
mov
pop
sbb
dec
clc
pop
cwtl
sub
inc
jno
xor
mov
loope
xchg
and
mov
adc
insl
xchg
fwait
and
mov
push
or
or
aam
divl
in
dec
and
add
sti
jg
push
orb
shl
sahf
jnp
push
mov
mov
add
imul
push
loopne
cmp
push
add
add
jge
loopne
inc
rcrb
sbb
pop
mov
add
mov
inc
cmp
rolb
or
add
int3
and
or
dec
adc
add
pop
xor
or
xchg
inc
mov
push
outsl
adcb
mov
fs
push
add
mov
cli
ret
lret
add
push
dec
sbb
iret
in
fldl
adc
xor
fmull
mov
fstpl
xchg
loope
mov
mov
and
aas
pop
cli
add
push
dec
xchg
lret
in
push
repz
push
jmp
adc
jnp
add
cmpps
push
call
and
ds
add
sub
lock
dec
and
mov
xor
xlat
cmp
inc
adc
cmpsb
mov
adc
lcall
sub
push
xor
sub
mov
push
or
iret
add
xchg
rorl
add
sub
cmc
std
gs
add
push
cmp
mov
push
lock
sbb
mov
pop
shl
mov
xchg
add
sahf
or
shlb
mov
js
test
lea
mov
add
sarl
inc
add
inc
inc
imulb
das
adc
test
xor
pop
add
insl
sub
xlat
push
inc
shlb
or
add
repz
scas
out
adc
sub
loop
add
cwtl
or
cli
mov
aam
gs
sbb
stos
call
sbb
inc
sub
jg
and
ds
cmpsb
add
cmp
nop
jae
jge
add
mov
xchg
jno
add
rcrb
add
push
mov
call
scas
lea
pop
pop
xchg
and
and
paddw
roll
popw
and
add
mov
or
sbb
add
ds
mov
add
inc
ljmp
je
mov
addl
or
jb
call
dec
mov
out
mov
push
fistpll
insl
xor
add
ljmp
inc
js
sarb
addb
pop
sar
testb
jno
ficoml
add
adcl
inc
or
xlat
sbb
mov
test
popf
xchg
pusha
insl
cwtl
xchg
jo
sub
das
je
pop
ss
or
jae
add
lock
jno
popa
jnp
push
test
int3
mov
pop
mov
add
sbb
arpl
or
mov
or
jo
inc
add
outsl
sbb
add
mov
sar
ljmp
or
jns
adc
add
dec
xchg
cmp
pop
rolb
faddl
loop
mov
adc
dec
push
ror
loopne
nop
jmp
in
pop
test
add
lods
push
jecxz
adc
push
fdivrs
decb
insl
add
cld
push
in
cmp
sbb
push
add
jns
push
bound
fisttpll
xchg
adc
add
fisubrl
mov
cmp
jo
adc
mov
mov
cmpl
movsl
cld
xchg
loopne
popa
lret
dec
jp
mov
int
pop
int3
outsl
jnp
icebp
rclb
mov
and
jge
pusha
xchg
fidivl
add
insl
jmp
add
pop
sub
inc
iret
mov
faddl
jns
inc
cmpsl
adc
pop
add
data16
or
addb
js
inc
mov
inc
add
shr
loope
sarb
imul
and
mov
lcall
or
mov
fwait
jge
add
dec
dec
jno
xor
add
and
push
or
cmp
push
mov
push
push
mov
add
insb
mov
pop
sbb
mov
lock
out
fiaddl
ja
cmp
add
mov
cmp
push
sub
dec
loopne
int
or
or
jb
fiadds
adc
stc
dec
xchg
neg
pop
daa
or
outsl
and
addr16
mov
add
jbe
int
pop
popa
je
pop
xchg
mul
sub
lret
nop
lock
push
push
lret
shl
mov
ja
cmp
xchg
fnstenv
cmp
inc
pop
sbb
stos
leave
sub
mov
cwtl
add
int3
sbb
xchg
xchg
add
je
inc
fsubs
daa
aas
cmc
or
push
and
sub
lcall
mov
and
push
adc
add
outsb
pop
xorl
andb
popa
xor
or
pusha
aas
pop
fndisi(8087
dec
mov
je
jmp
sbb
icebp
cmp
inc
cld
or
add
xchg
lcall
dec
add
add
jmp
jp
pop
into
dec
shlb
rorl
pushf
add
adc
aad
mov
xchg
add
popl
inc
ficoml
push
adc
adc
mov
sbb
sahf
aaa
cmpsl
add
add
adc
add
mov
xor
add
bnd
test
pusha
adc
out
add
arpl
imul
mov
pusha
popa
xchg
push
adc
jb
push
xor
jns
add
lds
xor
ficomps
lret
xor
inc
or
mov
jmp
test
imul
in
fcmovne
popa
add
xlat
jbe
mov
test
add
cmp
iret
mov
add
cmp
inc
push
pop
cmp
xchg
scas
repz
cltd
mov
pop
mov
add
push
call
jae
aad
sbb
add
fists
jbe
addl
fcmovnbe
pop
sub
mov
mov
arpl
add
andb
mov
adc
pop
adc
pop
cmp
mov
popl
add
lods
pop
in
push
or
sub
cmp
add
cmp
int3
mov
dec
rcl
adc
loop
add
sbb
scas
cld
fdivl
xchg
dec
pop
pop
or
or
dec
movsl
add
clc
jae
add
or
shl
add
les
add
mov
shr
pop
xchg
add
gs
aaa
dec
loopne
test
add
movsb
sbb
add
aas
fiadds
xor
cld
add
mov
adc
push
pop
sub
adcb
add
inc
sbb
push
call
or
scas
jg
mov
and
pusha
pop
stc
pop
push
cmp
sbb
jo
xchg
cwtl
test
add
cld
mov
pop
or
cmp
jns
mov
testb
jmp
enter
aam
fstps
hlt
jbe
cmp
filds
jg
dec
adc
aam
movsb
cmp
jp
add
push
or
push
dec
sbb
or
add
in
cmpsl
push
pop
inc
lret
shrb
hlt
pop
inc
push
pop
push
out
shl
int
loopne
add
sub
ds
pop
fiadds
leave
ljmp
scas
xlat
pop
or
sahf
test
lret
jo
call
test
add
lock
fabs
add
subl
mov
push
dec
mov
jbe
in
clc
test
add
pop
pop
push
stos
addr16
or
sbb
loope
cmp
fcmovnbe
bnd
fildll
iret
and
cmp
scas
cmpb
xchg
fs
out
pop
repnz
add
xchg
cmpb
mov
dec
add
push
xor
or
enter
mov
pop
add
adc
xlat
xor
pop
mov
filds
icebp
aad
jne
out
dec
mov
imul
jp
mov
add
push
popa
xchg
xchg
jno
lock
mov
add
mov
aad
negl
stos
mov
push
push
sub
add
dec
jne
add
std
cwtl
test
xchg
insb
sar
xchg
test
cltd
das
adc
mov
insb
jmp
dec
mov
pushf
sbb
push
jo
dec
js
add
xor
jge
dec
orb
stos
push
adc
jae
xchg
rcrl
dec
add
or
mov
hlt
leave
add
ljmp
xchg
loopne
pop
sbb
repnz
pop
cmp
std
in
dec
sbb
mov
testb
pop
xor
cmp
sub
lock
lcall
lret
dec
mov
adc
call
adc
mov
jmp
idivb
cmp
cmpsl
ficompl
add
orb
lahf
add
stos
imul
pop
add
cli
mov
sub
addb
std
cmp
dec
orb
jge
pop
lock
sbb
jne
adc
fcomi
aad
jle
pop
add
xchg
rcrl
rolb
loope
or
test
or
jmp
aas
mov
add
dec
or
fsubr
insl
add
ja
pop
cmc
movsb
arpl
fwait
pop
xor
pop
shlb
inc
aad
mov
psubb
imul
or
add
iret
cmpsb
jae
clc
mov
in
mov
cltd
aam
loopne
jo
dec
mov
subb
push
xor
add
add
ret
sti
jg
jb
je
xor
inc
fiaddl
negw
mov
sbb
xchg
clc
or
add
subl
sub
mov
add
fwait
pop
xlat
xor
mov
mov
inc
imul
jp
in
xorb
jbe
repnz
push
add
pop
fidivl
adc
adc
add
je
mov
mov
pop
loopne
add
push
and
and
push
das
ss
popa
or
fnstenv
cs
sub
push
push
jp
jg
add
lock
cli
push
add
cmp
push
fbstp
add
xor
sbb
push
nop
sub
sbb
jae
popf
inc
add
cltd
inc
out
cmc
adc
add
pop
es
outsl
dec
inc
dec
movsl
test
sub
fucom
das
xor
push
into
jae
out
jbe
mov
outsl
dec
add
hlt
std
pop
push
pop
call
ret
fdivl
jne
add
sub
add
scas
out
data16
outsl
add
push
stc
fdivs
cld
pop
inc
or
out
add
sub
pop
mov
and
scas
jl
clc
test
sub
out
pop
lahf
inc
pop
pop
push
cmp
out
mov
iret
cs
movsb
add
or
xchg
add
mov
dec
jno
jg
add
push
shlb
add
pop
mov
lret
pop
or
mov
fildl
inc
cli
mov
add
pop
pop
test
movsl
mov
mov
or
cmpsl
add
lret
adc
mov
cmpb
mov
xor
adcb
aam
pop
fs
sbb
add
cmpsl
out
xchg
fcoms
jno
pop
lret
add
mov
mov
jmp
cmp
idivl
stos
sbb
aas
xchg
loop
add
pop
subl
adc
test
fdivr
push
lret
push
mov
dec
std
mov
dec
imul
sbb
outsb
ds
mov
push
cmp
clc
jo
outsb
nop
out
lea
jo
add
gs
pop
jmp
cmp
inc
xor
adc
mov
lock
jl
add
push
in
ljmp
and
xor
add
dec
push
inc
cmp
fistl
jbe
insl
lods
sbb
pop
mov
and
jle
test
cmp
sahf
movsb
mov
test
mov
jne
sti
mov
xor
js
lds
or
adc
and
push
push
pop
in
or
pusha
mov
imul
add
sbb
mov
pusha
ds
mov
inc
xchg
jmp
jbe
sbb
pop
inc
rclb
sub
pusha
fwait
sahf
mov
cmpsb
ret
shlb
sbb
iret
add
push
jp
rcrb
stos
js
mov
mov
adc
mov
test
in
sarl
fadds
xchg
mov
enter
jl
mov
sub
jo
mov
es
push
mov
insl
xor
js
je
inc
pop
in
int3
jb
scas
pushw
fwait
or
fistpl
adc
sub
inc
mov
add
mov
mov
cltd
or
ss
adc
popl
enter
xor
cli
sbb
in
sub
clc
dec
xor
mov
dec
mov
xor
inc
mov
push
aam
push
gs
mov
adc
pop
pop
cmp
rolb
lea
and
test
outsb
rolb
roll
andb
xchg
adc
das
xchg
fsubp
add
iret
std
pop
sbb
ljmp
mov
mov
lea
add
or
or
cld
das
sbb
sub
xchg
push
shrb
addr16
mov
sub
add
jno
sbb
add
push
stc
mov
mov
sbb
gs
dec
bound
mov
fists
adc
push
cmp
inc
xchg
lahf
push
in
in
push
ret
push
add
pop
int
mov
mov
arpl
in
add
cwtl
pop
push
insl
xor
sub
adc
pop
ds
mov
addr16
mov
imul
push
mov
adc
dec
enter
cld
leave
imul
or
negl
addr16
and
repnz
xor
loopne
and
je
movsb
pop
jne
sub
inc
int3
sbb
xlat
or
jne
sbb
stos
bound
out
ds
cltd
std
loop
in
fcomps
cmpsb
add
mov
stos
add
and
jmp
pop
add
rorb
mov
test
stos
add
movsl
mov
test
adc
sbb
add
cmp
rol
jl
dec
ret
add
add
movb
das
movl
adcb
aad
cld
push
inc
add
jmp
jmp
out
out
adc
mov
in
pop
or
inc
add
lods
sbb
subb
cmp
cwtl
and
jne
ja
shrb
ror
data16
mov
dec
add
enter
sub
fs
add
mov
cmp
or
sarl
dec
pcmpeqb
sbb
mov
sti
add
pushf
lret
inc
xchg
dec
xchg
inc
cld
pop
add
mov
or
add
jbe
add
fmull
add
ss
push
cld
and
inc
or
or
dec
add
adc
jle
imul
push
loopne
loopne
into
push
fwait
rolb
xchg
sbb
add
stos
mov
test
repnz
cld
inc
nop
add
lods
add
outsb
jmp
insb
cmpsl
cmovae
movsb
adc
inc
push
in
nop
out
lock
lcall
adc
push
mov
cmc
pop
outsb
lahf
push
inc
outsl
push
test
sub
popf
psrlw
sbb
dec
push
or
in
insl
pop
add
daa
jno
or
jo
cmp
icebp
sbb
pop
sub
ss
push
jns
sub
and
jne
mov
add
sub
adc
fisttps
pusha
testb
or
pushf
and
xor
inc
sub
hlt
adc
add
ja
dec
movsl
outsl
das
sub
push
daa
js
outsb
cmp
add
push
hlt
add
push
fwait
lock
testl
xchg
lds
lock
xchg
pop
mov
hlt
out
lods
push
les
leave
add
ret
sarb
lods
sub
sti
pusha
mov
add
mov
push
add
push
rcrb
jle
gs
clc
in
xchg
add
mov
jmp
ret
mov
add
scas
push
and
xchg
clc
lret
jg
rorb
addb
and
outsb
add
into
jp
fisubl
jne
xor
aaa
dec
add
fistps
pusha
gs
test
ljmp
mov
add
nop
and
or
mov
add
mov
inc
mov
dec
fsts
add
cmp
cs
inc
test
pop
add
inc
adcl
or
loopne
mov
scas
dec
sbb
out
and
inc
mov
jl
add
cmp
out
cld
lea
pop
dec
lds
mull
pusha
xor
mov
pop
movsl
leave
cmpsl
pushf
add
mov
xchg
add
xchg
sbb
and
or
js
scas
and
push
sarb
push
mov
arpl
or
sub
jnp
and
bound
loopne
jno
xchg
fwait
jmp
sarb
pop
inc
push
mov
or
sbb
dec
fdivrs
ret
lahf
add
mov
pop
pop
sarb
int3
add
jne
mov
sahf
xchg
pop
insb
add
call
ds
daa
andb
aaa
add
in
pop
jb
add
add
dec
add
call
dec
mov
popf
pop
cmpsl
sbb
out
outsl
dec
movsb
mov
or
call
imul
das
xchg
mov
cmp
push
cmp
add
and
clc
cltd
fidivs
imul
dec
xabort
dec
mov
add
jge
es
adcb
jp
out
xchg
cmpsb
add
aas
xchg
sbb
jno
inc
fnstcw
outsb
lods
cmp
mov
dec
fcomp
popl
icebp
shrb
js
cmpsl
sub
int3
xchg
mov
pop
or
or
xchg
add
adc
inc
pop
nop
add
repz
mov
cmpsb
pop
or
jmp
xor
add
add
stc
add
or
jne
lret
fbld
sti
sub
mov
dec
hlt
or
icebp
mov
inc
add
and
mov
add
in
push
adc
fists
add
popa
icebp
add
mov
mov
cmpsl
rolb
adcl
call
mov
movsb
test
or
fcoms
xchg
out
lret
test
mov
push
inc
iret
int3
mov
sub
cs
sub
loopne
lret
pop
or
mov
mov
xchg
test
push
sbb
int3
test
xchg
daa
or
inc
pshufw
push
imul
lods
pop
add
xchg
aad
stc
lea
or
mov
ror
test
orl
je
mov
cmc
pop
dec
es
test
lds
add
add
sbb
and
aam
les
adc
add
mov
outsb
jecxz
and
add
inc
or
mov
xor
dec
and
dec
inc
cli
test
xor
movsb
int
fstps
xchg
push
fidivl
add
movsb
aas
pop
decb
mov
aad
cmp
inc
add
repz
rorb
mov
nop
cs
jge
adc
add
nop
fcompl
inc
insb
icebp
cmpb
clc
in
sti
lret
and
and
gs
adc
add
inc
sti
sbb
imul
subl
cmc
shll
dec
pop
pop
loopne
sarl
mov
add
arpl
push
add
int3
jno
mov
pop
inc
retw
icebp
aam
adc
mov
ss
sbb
out
xchg
roll
clc
movsl
push
add
inc
out
xchg
push
cld
adc
pop
scas
add
and
adc
arpl
add
shll
jns
in
es
ds
jno
inc
lea
pop
dec
int3
mov
mov
imul
or
adc
out
repz
cmp
sub
ljmp
sub
mov
out
add
sbb
push
jne
mov
shll
mov
es
xchg
inc
jnp
dec
push
cmp
xorb
cmpsb
fcompl
push
add
adc
aas
xchg
add
les
inc
dec
mov
cltd
jecxz
dec
into
pushf
mov
add
jns
loopne
jle
adc
jle
mov
push
mov
inc
hlt
mov
mov
leave
adc
push
js
push
mov
xor
add
and
cmc
add
and
lret
sub
xchg
je
negl
data16
and
cmp
setp
sub
repz
jecxz
lock
aad
xchg
cli
shlb
pop
sub
xor
push
mov
test
roll
add
sub
inc
dec
cld
addb
mov
and
loopne
in
cmp
cmpb
pop
add
lock
gs
mov
repnz
add
sub
sbb
aam
cmpsl
xor
jae
push
add
xor
out
pop
jb
sub
xchg
sbb
addb
dec
pop
add
rcrb
daa
jmp
pop
les
and
add
add
pushf
inc
in
pop
imul
add
adc
movsb
or
out
cmp
or
pop
fistpll
push
add
lods
out
sbb
push
std
or
and
push
mov
mov
str
fldcw
xchg
add
shlb
ja
sbb
and
cwtl
adc
hlt
sub
imul
cmp
lock
adc
push
pop
ss
xchg
je
cmp
iret
mov
jb
cmp
adc
jle
mov
decb
ss
sub
sbb
icebp
pop
push
mov
out
fs
adc
test
stc
jl
jl
mov
adc
jmp
inc
pop
adc
add
lock
popf
add
add
jg
push
fdivrl
sbb
sarl
mov
inc
pop
hlt
dec
and
sub
cmp
aas
ljmp
xor
sbb
jo
movsl
mov
add
mov
and
add
inc
xor
add
lea
xchg
andb
inc
pop
mov
pusha
cwtl
ja
sbb
sbb
pop
aas
fstps
cmp
push
rolb
cltd
dec
icebp
push
jo
pop
cmpb
pop
in
enter
pop
lods
xor
sub
cmpsl
cmc
sbb
nop
push
lock
mov
mov
or
mov
aam
je
sub
xchg
pop
xchg
adc
in
and
add
add
add
inc
jle
add
imul
fsubl
add
in
mov
push
jl
xlat
add
in
cmpsl
dec
xchg
push
add
ljmp
jg
add
sarl
popf
lods
shrb
flds
fists
add
lahf
sbb
fwait
sub
sbb
das
cltd
push
clc
mov
aam
add
dec
stos
rorb
fidivs
jbe
add
jmp
es
lahf
ror
mov
adc
not
mov
rcrl
sub
jno
mov
imul
arpl
mov
add
mov
aad
add
lret
ret
lods
fs
lock
mov
mov
pusha
cmc
hlt
loopne
cwtl
mov
out
add
shrb
sarl
add
out
jno
jle
pusha
sub
sub
add
addl
inc
inc
in
lea
out
jbe
jg
sbb
pop
inc
data16
jns
cmpb
pop
popa
gs
pop
aaa
pop
dec
push
cld
adc
and
sbb
jge
cwtl
push
ret
daa
sub
mov
mov
int
inc
loope
add
insb
add
sub
daa
movsb
add
sub
pop
faddp
jbe
xchg
add
sbb
pop
sbb
enter
and
hlt
add
data16
outsb
int
popa
add
cmpsb
mov
fldcw
push
jbe
mov
mov
push
add
cmpsb
pop
repnz
xchg
daa
add
fwait
call
sbb
xchg
mov
rcll
and
lds
jb
sub
mov
sti
push
testb
je
dec
insb
mov
sarb
pop
jo
add
mov
out
fildll
add
arpl
movsb
je
sub
int
and
ret
jbe
inc
add
lahf
cmp
shlb
hlt
iret
adc
xor
rolb
mov
mov
sbb
jmp
orl
hlt
adcb
cmpsl
shlb
inc
int3
sbb
and
add
jno
ret
sbb
sbb
aas
and
repz
or
ret
sti
adcb
add
ja
push
outsl
sub
aaa
mov
inc
add
and
aam
jmp
mov
mov
sbb
jge
and
xor
jmp
adc
iret
insl
mov
je
int3
jo
in
or
mov
xlat
xor
fisttpll
and
jecxz
in
cmp
outsb
ret
jge
inc
insb
sub
int
es
imul
pop
push
add
inc
outsb
mov
fistpll
push
insb
pop
xchg
xchg
pop
int3
aas
xor
inc
add
pop
fimull
add
mov
sbb
dec
pop
clc
addb
cmp
or
sub
cld
push
add
shll
pop
add
inc
xchg
add
scas
lock
mov
mov
xor
pushf
and
push
push
add
or
xor
pop
pop
pop
data16
jae
das
shrl
sub
out
adc
shll
push
in
outsb
test
lret
mov
fsubrs
mov
add
mov
loop
pop
aad
xchg
dec
jmp
mov
leave
shll
icebp
inc
pusha
mov
rcr
jnp
cmc
sbb
loopne
or
push
inc
jo
setle
xlat
loope
xor
mov
nop
call
repnz
sub
add
les
or
shll
jnp
mov
icebp
mov
jbe
je
xor
test
sbb
lods
xchg
push
stc
clc
and
inc
adc
test
rcr
mov
andb
hlt
add
in
lods
inc
aam
bound
dec
and
and
mov
lret
adc
mov
test
in
pop
and
cmpsb
add
aaa
mov
mov
add
out
fstpl
cmovle
in
mov
cli
mov
je
movsb
jae
push
jp
ja
add
cmp
cwtl
add
pop
sub
shll
push
jo
add
push
mov
rclb
mov
in
pop
jle
andb
fstl
idiv
add
mov
shl
push
or
and
daa
int
dec
push
mov
bound
loopne
jp
ja
push
push
mov
xlat
mov
jmp
add
xor
int3
mov
shrl
mov
je
jecxz
cmpsb
adc
cld
mov
mov
inc
or
mov
mov
sbb
add
jmp
push
add
pusha
inc
adc
rol
xchg
xor
sbb
bswap
inc
jne
sub
js
pop
mov
add
in
or
jno
outsb
cmpb
add
add
das
push
loopne
pop
xchg
test
addr16
cltd
test
shlb
add
sbb
add
mov
outsb
sbb
les
rolb
adc
mov
sub
mov
loop
inc
rorb
inc
pop
add
enter
lahf
leave
pop
out
fisubrl
pop
rclb
or
fadd
cwtl
add
mov
push
movl
das
ss
jmp
add
mov
pushf
les
mov
adc
lcall
inc
adc
cmp
sahf
and
jge
xchg
or
mov
icebp
add
mov
mov
mov
mov
jae
push
sbb
xchg
adc
mov
inc
ja
mov
add
or
push
loop
cmp
addl
jb
stc
rorl
loopne
push
add
mov
out
dec
push
nop
inc
add
jmp
xchg
push
negl
loop
push
jle
scas
mov
dec
add
xlat
dec
add
sub
fisubrl
and
xchg
add
sbb
sbb
dec
stos
enter
clc
pop
rolb
lret
addr16
dec
dec
add
fcom
and
adc
mov
mov
roll
ret
add
push
cli
hlt
outsb
add
sbb
xchg
lea
add
jg
mov
sbb
mov
ss
rcll
xorb
add
nop
mov
daa
lret
dec
pop
jae
mov
rclb
xor
stc
lret
xchg
add
stos
push
jnp
jle
or
aam
add
cmp
add
add
sbb
adc
sbb
xor
dec
sbb
jne
xlat
pop
mov
inc
fistps
push
sahf
add
fstl
sbb
aam
pop
jae
jle
lods
lock
outsb
or
push
mov
adc
repz
call
aas
add
inc
adc
sub
sbb
in
lods
cmp
test
pop
pop
out
xchg
cmp
pshuflw
shlb
add
shlb
add
mov
jo
add
nop
leave
add
ljmp
sbb
pop
or
ja
and
ss
pusha
popl
mov
mov
in
inc
sarb
mov
dec
mov
dec
imul
or
jle
jno
add
and
mov
cli
add
dec
push
sbb
or
add
mov
ficomps
test
push
xchg
add
cli
mov
or
xor
in
dec
add
adc
pusha
sbb
popa
mov
inc
xor
fsubs
movsb
jp
add
lret
mov
mov
push
add
and
and
stc
mov
lods
add
movsl
add
add
imulb
mov
push
outsl
dec
inc
jge
dec
cmp
insl
and
jo
sub
add
scas
and
in
add
std
leave
pop
cld
fiaddl
push
out
dec
fwait
mov
movb
inc
les
sti
jo
hlt
fdivrs
push
mov
pop
dec
add
xor
xchg
les
sub
xchg
pop
stos
adc
ficomps
add
hlt
jo
add
insb
inc
cmpsb
pop
cmp
push
sub
push
dec
sbb
add
in
push
cmp
int
repz
loopne
cli
add
inc
add
xor
fildl
lahf
shlb
dec
cld
stc
je
das
imul
mov
cmpsl
sahf
add
cli
push
add
xchg
push
or
add
out
add
mov
add
test
dec
out
mov
cmp
shl
or
std
add
pop
cs
xlat
add
pop
xchg
int3
pusha
jno
enter
add
adc
mov
pop
das
psrlq
cmc
ljmp
or
call
negl
dec
cmp
adc
pop
rcr
scas
lods
add
int3
inc
and
pop
xchg
dec
inc
dec
xor
add
xchg
sbb
ja
pop
or
or
cmp
add
fisubrs
add
into
pop
sub
imul
add
push
mov
cs
inc
frstor
push
mov
or
pop
mov
call
xchg
pop
aas
adc
rcr
popa
in
push
push
fiadds
cmp
out
int
mov
lods
cmp
pop
cwtl
adc
xchg
add
into
std
adc
mov
clc
add
or
and
out
pop
add
leave
lock
divl
mov
add
shrb
call
fs
xor
loopne
push
and
push
pop
loope
dec
ds
stos
mov
pop
adc
addb
cmp
call
pusha
and
sub
lret
add
dec
aaa
stc
add
in
pop
dec
movsb
ds
push
pop
loop
push
scas
push
add
push
push
push
popa
daa
sub
mov
mov
add
push
test
fwait
pop
mov
pop
sub
data16
dec
add
push
cmp
iret
roll
inc
mov
add
dec
cmp
or
add
adc
pop
dec
jb
jno
add
out
push
shll
aad
adc
arpl
mov
out
adc
add
sub
js
mov
pusha
pop
arpl
mov
sbb
push
das
mov
inc
and
test
jbe
rcrl
add
pop
push
dec
aaa
and
sbb
scas
lcall
loopne
mov
jecxz
sarb
jmp
daa
data16
js
cmc
stos
lock
or
ja
pop
andl
nop
dec
mov
push
out
pop
cmp
pop
addr16
push
sub
loopne
mov
in
sbb
xchg
dec
jl
add
aam
mov
out
nop
xchg
add
outsl
js
add
lret
nop
push
dec
lcall
xchg
cmpsl
nop
jnp
std
movl
mov
cli
hlt
rcr
cltd
sbb
mov
add
sub
push
aas
popf
lods
adcb
jl
aad
cmp
pushf
xchg
lods
ja
and
sbbl
cltd
jb
add
mov
pop
in
aaa
rorb
sbb
adc
adc
std
pop
push
int
out
add
es
jp
fmuls
add
lcall
std
pop
pop
adc
pop
cmp
and
sub
in
loope
or
pop
gs
cmp
xor
lahf
cmpsb
faddl
push
adc
mov
in
add
mov
lret
cltd
cmp
xchg
inc
das
out
dec
xor
or
ja
pop
pusha
sbb
je
rclb
fs
insb
es
into
xor
clc
out
mov
sbb
push
adc
imul
xor
adc
push
mov
stc
addr16
jo
out
in
je
ret
pop
clc
dec
add
pop
adc
add
mov
cmp
and
bound
fs
or
pop
aam
and
jbe
add
push
js
and
out
push
ror
gs
scas
add
push
or
xchg
mov
cwtl
lds
fists
add
fcomps
bound
jb
subl
es
popa
pop
xchg
sbb
inc
dec
mov
jle
xor
test
inc
sti
add
inc
cmc
or
and
push
pop
add
mov
sarl
out
sbb
add
push
stc
cmpsb
add
repnz
addb
xchg
pop
pop
stos
xchg
push
add
mov
cmp
cmpl
sar
pop
jbe
mov
sbb
mov
call
push
addb
cmpsl
add
cwtl
fdivrp
fstps
add
push
mov
xchg
push
dec
mov
and
popf
rol
sub
fadds
adc
out
bnd
add
push
pusha
mov
inc
out
mov
negl
cmp
stc
inc
push
jmp
xor
add
adc
jae
sbb
inc
les
add
scas
test
testb
ja
xchg
cmp
add
bswap
cmp
inc
mov
add
daa
stos
imul
mov
pusha
mov
jge
testl
jmp
daa
xor
fisttps
pop
add
adc
jae
out
xchg
add
lcall
pop
clc
stc
fsubrl
push
cmp
xchg
insl
popa
add
in
add
repz
je
int
popf
push
pop
push
pop
xchg
pushf
mov
and
loope
inc
in
dec
pop
cwtl
enter
out
call
push
lock
sub
and
stc
insb
inc
jb
cmp
in
xor
mov
mov
mov
call
fcmovnu
sub
addr16
stos
mov
and
xchg
inc
and
sub
mov
add
in
scas
cwtl
xor
dec
add
cmpsl
std
cmp
incl
orl
nop
mov
insb
pop
jb
and
mov
clc
mov
cwtl
cmp
jl
push
and
mul
adc
syscall
mov
xor
add
int
pop
ljmp
adc
loope
fidivs
movsl
lahf
cwtl
dec
cs
rorb
adcb
cmc
sbb
inc
jne
and
dec
dec
cmp
repz
adc
jae
push
and
mov
mov
pop
pop
push
jo
les
dec
bound
sub
rcl
addl
pop
xchg
pop
ret
add
aam
in
cmp
sti
cmp
inc
adcb
outsb
add
fwait
push
adc
mov
add
add
mov
loop
mov
call
mov
pop
inc
add
mov
popa
popa
pop
mov
in
cli
loop
sub
sbb
pop
jno
add
mov
mov
adc
out
ja
dec
mov
mov
outsb
add
cmpsl
scas
nop
mov
sub
pop
pop
mov
lds
fcomip
orl
jle
data16
pop
jns
pop
push
enter
mov
icebp
addb
jmp
pop
movsl
jge
sbb
int
inc
or
loope
fwait
adc
push
inc
out
sarb
roll
ljmp
add
mov
jmp
push
in
cwtl
jp
scas
push
out
punpcklbw
or
data16
cmpl
out
pop
test
addr16
lods
inc
add
xchg
or
outsl
repz
ja
fdivs
inc
aaa
sar
pop
lea
add
or
js
jo
aam
movsb
pusha
popf
add
cmp
add
xor
push
pop
bnd
in
mov
pop
cmp
xchg
loopne
jecxz
inc
jmp
mov
add
fildl
pop
outsl
add
sbb
mov
add
repz
mov
push
add
inc
add
popf
mov
lret
in
or
sub
inc
jg
mov
movsl
add
dec
jge
dec
jnp
test
add
xchg
mov
repnz
lods
mov
fimull
cmpsl
dec
pop
scas
and
add
rcl
mov
or
and
add
cmc
call
add
shl
xchg
sbb
or
mov
fs
adc
lea
jmp
xchg
mov
in
pop
jge
push
inc
jb
mov
mov
and
jle
rol
daa
and
pusha
adc
fldz
repz
add
pop
push
insb
xchg
cld
inc
out
inc
dec
and
mov
popf
adc
aam
loop
enter
add
add
in
bound
dec
mulb
jns
pop
int
add
mov
add
repz
ret
movsl
mov
popa
das
adc
cmc
push
stc
int3
insb
ja
jns
inc
mov
push
adc
pop
dec
push
pushf
add
call
lcall
sub
outsb
lahf
in
jmp
imul
jnp
mov
dec
add
add
mov
add
sbb
mov
mov
push
sarb
pop
mov
mov
imulb
add
es
dec
daa
ds
scas
dec
rcrl
ja
movsl
add
rclb
insb
dec
ds
ret
sub
loope
add
or
push
scas
int
pop
jmp
adcb
es
lea
cmp
pminub
push
xchg
loopne
push
rcrb
mov
dec
fiadds
lods
add
flds
jecxz
aas
ret
inc
ds
mov
add
adc
inc
sub
pop
add
sbb
xchg
sbb
repnz
add
cmp
scas
mov
ror
sti
xchg
lods
or
xor
pushf
mov
xchg
xor
or
mov
enter
add
push
mov
mov
sbb
popf
test
add
sub
outsb
add
adc
andl
push
sbb
sub
add
jp
jae
add
push
push
fnstenv
add
ret
pop
xor
add
pusha
lret
into
xor
add
mov
mov
rcr
push
into
stc
cmpb
fiaddl
dec
inc
and
push
push
rcll
xor
jno
add
or
add
sar
jecxz
movsb
and
add
cmp
pop
push
repz
push
xchg
pusha
out
add
cmp
xchg
jo
and
ds
pop
icebp
icebp
push
mov
add
xor
add
or
test
pop
or
sti
scas
inc
and
xor
jns
add
imul
and
cwtl
or
jb
jno
stos
negl
add
leave
add
adcb
adc
add
pop
cmp
in
push
cmp
fsts
frstor
mov
es
jmp
cmpsb
xorl
cmovl
cmp
xchg
inc
cmp
pop
add
lret
ficoms
cmp
lods
xchg
dec
fisubrl
movsl
xlat
imul
pop
cmpsb
aas
sub
xor
mov
sub
add
adc
pusha
andl
dec
dec
xchg
pop
add
lods
push
dec
pop
mov
out
jae
add
adc
in
adc
decb
or
xchg
and
add
movsl
dec
sub
xor
pop
xorb
mov
cmp
cmpb
ret
add
lods
pop
int3
add
lcall
es
add
lcall
cmpsb
mov
inc
sub
int
aaa
and
add
sbb
js
xchg
and
test
xor
xchg
or
xor
add
and
ret
sub
pop
push
testl
and
fmuls
cmp
push
pusha
push
add
fwait
mov
inc
mov
call
sarb
add
or
into
gs
add
lock
add
repz
lods
add
adc
mov
in
dec
divb
add
pop
scas
nop
hlt
add
mov
iret
emms
mov
jbe
pop
loopne
pop
push
push
shrl
pop
and
jno
popa
out
clc
adc
sti
add
data16
jne
stos
push
movsl
repnz
lret
add
jp
mov
ret
lahf
pop
cmp
cmp
loopne
add
out
cmpsb
mov
adc
adc
jo
fs
bound
cmp
dec
pop
ljmp
lock
add
shlb
mov
add
xor
mov
imul
gs
scas
jbe
add
cmp
add
dec
mulb
stos
fwait
lock
rorb
mov
inc
lcall
jo
mov
cs
mov
out
adcb
mov
push
and
cmpxchg
or
mov
jnp
add
xchg
jae
addb
sbb
and
sahf
jns
orb
adc
gs
addb
add
out
in
in
subb
stc
inc
negl
jge
ror
pushf
lods
xchg
xor
imul
sbb
fdivr
mov
inc
mov
jns
push
and
add
loope
adc
adc
in
or
mov
ds
jl
add
lock
popf
mov
add
jmp
movlps
loopne
das
dec
push
pusha
add
fbstp
pop
dec
test
jnp
mov
add
dec
push
fildll
add
lds
faddl
dec
test
mov
pop
push
lock
scas
cli
add
test
mov
leave
sub
orb
inc
in
add
fisttpll
and
inc
add
pop
or
and
adc
dec
mov
movsl
jg
add
pop
cs
xchg
gs
pusha
js
add
pop
repnz
xchg
cwtl
js
add
push
in
int3
test
sbb
jno
ja
add
flds
sti
mov
inc
inc
pop
mov
minps
pusha
cltd
mov
mov
pop
xchg
inc
les
add
lods
stos
mov
js
add
enter
or
adc
xlat
cmp
call
or
and
leave
into
cli
inc
xchg
ja
xor
cmp
adc
mov
ja
outsl
or
mov
hlt
fwait
xchg
mov
lahf
movsl
add
sti
sub
jg
add
and
je
pusha
xchg
pop
add
fdiv
jecxz
insb
in
out
or
test
add
xchg
add
mov
inc
xchg
jo
push
add
and
mov
mov
add
or
fcoml
xchg
aaa
add
sti
fstps
test
jne
mov
inc
and
fiadds
ja
hlt
in
add
adc
fucomip
nop
add
pop
addb
mov
aas
pop
jne
add
sbb
add
adc
nop
mov
cltd
adc
loope
add
inc
shlb
or
mov
add
clc
ds
dec
mov
mov
add
dec
orps
rorb
ljmp
movsb
mov
clc
icebp
subb
push
adc
cs
adc
nop
getsec
sub
sub
incl
mov
xor
pop
add
mov
mov
adc
add
es
lds
add
rol
sbb
je
add
mov
cwtl
leave
mov
fs
inc
mov
nop
mov
ja
lock
mov
inc
addl
outsl
xor
aas
push
aad
adc
repnz
addb
sbb
lds
and
mov
ror
in
adc
or
aad
adc
push
sbb
adc
cmp
or
jle
int3
add
sub
pop
or
stos
shrl
out
dec
add
jns
es
sbb
clc
ss
ret
loopne
aam
add
icebp
shlb
mov
fstp
int3
aad
add
lock
clc
xchg
testl
out
lret
aas
pop
jge
iret
jnp
add
or
adc
cwtl
cmpsl
shl
call
inc
leave
lds
into
or
sub
sarb
push
orb
add
sbb
fmul
xlat
add
ret
sub
popf
or
add
out
add
xchg
stos
push
cmp
pushf
pop
dec
add
das
lock
gs
fcoml
add
icebp
call
jle
daa
cmp
mov
jns
jp
add
sahf
inc
xchg
inc
sub
cmp
add
cmp
sbb
addr16
adc
xchg
sarb
fdivs
jnp
jg
mov
mov
push
test
shll
ret
sbb
cmpsl
push
cli
ljmp
ss
mov
sbb
sub
ficompl
pop
sub
loopne
std
add
mov
inc
out
adc
fists
push
pop
dec
sbb
ss
adc
mov
pop
jnp
xchg
jp
xor
mov
jbe
out
xchg
xor
cld
je
dec
int3
cmp
in
mov
jle
pushf
mov
add
jno
sti
dec
insl
cmpsb
andl
add
rcll
xchg
leave
mov
sbb
test
sbb
jp
or
xor
adc
add
inc
mov
add
add
push
aas
lds
cs
std
test
cmp
xor
cmpsb
add
hlt
sub
popf
sub
insb
ja
jb
pop
rol
add
add
mov
nop
mov
popf
cld
add
jne
push
in
mov
or
jmp
orb
xchg
xor
cmpsb
daa
xchg
dec
mov
jno
push
jmp
mov
or
sbb
adc
jmp
lret
repz
ret
and
fistps
arpl
pop
pop
add
cltd
mov
and
inc
ja
arpl
lods
cmp
add
pop
mov
aaa
and
dec
mov
mov
test
repz
mov
jecxz
add
mov
pop
outsl
sub
cmp
push
inc
pusha
into
add
sub
call
add
push
xchg
insb
shlb
and
imul
sysret
or
sbb
in
add
les
pop
and
mov
xchg
lret
je
add
repz
pop
nop
add
mov
mov
adcl
cmpsb
test
mov
jne
mov
adc
jle
outsl
inc
nop
and
unpckhps
sbb
xor
inc
int3
add
sub
fmuls
jmp
and
out
bound
rol
insl
push
xor
fbstp
mov
aaa
mov
xchg
add
out
pop
pop
add
dec
in
jne
outsb
shlb
test
mov
lods
push
outsb
pop
mov
aam
add
loopne
pop
cmp
inc
sahf
push
sahf
ror
push
cs
cltd
add
pushf
add
movsb
incl
jge
add
adc
jmp
xchg
add
add
and
push
push
jl
jbe
jb
in
ret
arpl
imul
roll
inc
xor
jmp
dec
push
xchg
push
dec
loopne
ss
cmp
pop
inc
adc
add
and
orb
aas
jbe
cmp
add
pop
xchg
outsl
xchg
movsb
stos
jecxz
push
jno
add
hlt
ret
std
or
mov
rclb
in
dec
test
ljmp
and
and
and
loop
loopne
push
add
adc
mov
sub
cmp
bound
pop
inc
pop
movsl
out
pop
fistl
pop
jmp
add
mov
xlat
push
mov
lret
cmp
repz
lret
out
in
cmp
mov
aaa
loopne
out
or
aas
flds
bound
popf
inc
sbb
xchg
inc
repnz
add
cld
hlt
sub
lret
inc
add
sub
jb
pop
shl
stc
push
xor
cmp
fcmovnb
test
jmp
xor
stc
sub
fmull
enter
add
jle
test
test
leave
cmp
call
xchg
add
hlt
add
shl
loop
out
sbb
cld
cmp
mov
xor
xchg
cs
lock
inc
inc
dec
imulb
test
jp
loopne
pushf
add
sub
out
repnz
push
orl
test
inc
sbb
dec
mov
sub
dec
rcrl
in
sub
push
xchg
inc
ret
in
iret
xor
cmp
addb
lock
add
je
adcl
aam
and
mov
ljmp
je
push
sbb
aad
and
xchg
dec
stos
pop
jnp
cmp
inc
mov
inc
sbb
add
push
mov
cmp
sbb
add
rolb
faddl
cld
push
in
fadds
or
cltd
sub
mov
or
add
dec
clc
fdivp
roll
andb
ljmp
mov
sbb
mov
test
dec
lret
int3
add
lods
les
jmp
add
aad
xlat
pop
xchg
cmp
push
imul
sub
cmp
in
dec
mov
lahf
call
sub
dec
xchg
rclb
fwait
cmpl
fmuls
lcall
mov
xor
dec
in
clc
push
or
adc
add
add
mov
push
dec
arpl
and
add
or
stos
or
lcall
in
lods
rcrb
shrl
jle
push
int3
xor
cmp
lret
mov
shrl
pop
stos
test
mov
movsl
sbb
lret
shl
mov
inc
mov
add
jp
iret
push
add
test
cli
mov
cmpsl
add
push
or
lock
xlat
cmp
ret
xchg
cmp
xchg
add
mov
fwait
int
loop
in
sbb
push
es
jnp
pop
call
push
cltd
scas
fisttpll
sub
cmp
stos
notl
pop
xchg
and
sbb
pusha
or
shlb
adc
cmpb
push
test
mov
add
rcrb
outsb
cmpsb
lcall
ljmp
and
scas
aas
insl
inc
or
push
sub
dec
pop
xor
sbb
mov
sbb
inc
sub
mov
daa
rcrb
cld
loop
inc
and
add
mov
fnstcw
pop
mov
jle
mov
movsl
mov
cwtl
fwait
repz
rclb
movd
jl
pop
or
add
inc
ds
push
bound
pop
pop
cmpsb
sahf
imul
add
lock
lahf
clc
pop
add
sub
pop
sbb
inc
fildll
pushf
sbb
bound
out
popa
jecxz
fldl
mov
std
movl
orb
sahf
pop
jb
cmpsl
inc
cs
pop
push
movl
cmp
popf
add
rcll
addr16
cmp
sbb
pop
cmpsl
inc
lcall
loopne
or
add
enter
sub
out
out
mov
mov
imul
jmp
data16
add
pusha
arpl
out
add
adc
jg
add
xchg
mull
xor
xor
jmp
mov
scas
mov
cmpl
add
cld
js
add
push
lds
fwait
or
lcall
sbb
sub
inc
sarb
xchg
int
push
fwait
mov
jg
scas
xchg
prefetch
or
add
lret
lds
aas
push
in
add
xchg
loop
add
punpckhdq
xlat
jae
add
fistpll
gs
add
stc
sub
ds
insb
and
push
dec
fsubrl
jl
mov
mov
jecxz
mov
add
sub
pop
inc
nop
shl
sti
xor
add
mov
sub
incb
cmp
push
sub
mov
insl
push
sahf
adc
mov
pop
add
add
test
push
cmp
iret
xor
fadd
sahf
lock
and
and
hlt
mov
dec
xchg
add
cmp
cltd
pushf
jle
mov
in
dec
or
mov
xchg
das
xor
jl
ja
xor
rolb
out
jmp
lcall
mov
aad
jno
lea
jge
pop
xor
jb
add
fxch
adc
stos
add
addr16
call
add
xchg
fucomip
mov
test
lds
jmp
adc
cs
or
sti
es
pop
pop
pushf
leave
add
out
sub
cld
mov
aas
test
flds
mov
xor
aaa
cwtl
popl
mov
jle
cmp
in
xor
and
rorl
add
push
shl
daa
mov
test
fstps
cmp
sbb
sub
andb
push
cli
rcr
inc
repnz
xor
je
mov
and
sub
out
push
pusha
fistps
sub
in
inc
add
pop
pushf
movl
sub
adcb
push
int3
lods
jns
insb
cmp
push
push
dec
xchg
jb
mov
cwtl
and
stos
and
push
and
cli
dec
lahf
movsl
in
outsl
pop
pop
jmp
sub
adc
imull
dec
cli
in
jb
sub
adc
repnz
sbb
ds
dec
sbb
mov
and
push
das
pop
ss
sbb
pop
mov
and
mov
cltd
sub
mov
ds
cvtpi2ps
fwait
add
add
pop
call
xor
push
popa
loopne
ss
and
cmp
mov
cld
adc
outsb
add
pop
add
xor
rcrb
sub
add
addr16
sub
aas
shlb
aaa
out
test
lahf
lcall
adc
xor
add
inc
stos
push
sub
pushl
addr16
data16
mul
jbe
or
push
inc
xor
lret
movsb
jg
cmpsl
inc
sub
enter
xor
jae
push
sti
ja
and
push
jg
scas
addl
aad
add
jbe
mov
add
or
mov
mov
insl
mov
sub
cmp
aas
jne
std
inc
les
jg
push
mov
dec
push
adc
adc
sub
repz
add
roll
inc
add
les
cmp
sub
dec
and
xor
cmpsb
adc
rorb
cmpsb
add
mov
arpl
lahf
ds
out
data16
sbb
cmp
sti
and
cmc
lods
orl
pshufw
cmp
fidivrs
mov
into
stos
inc
add
out
xor
int
add
mov
fs
insb
fdivrs
xor
fdivs
or
add
sbb
faddl
lods
fstpl
or
outsl
add
outsb
sti
mov
mov
jp
lods
js
cwtl
popf
xchg
call
add
add
popa
cli
hlt
mov
movsl
push
enter
pop
dec
push
sti
imul
xor
cmp
push
leave
out
inc
cmp
test
add
mov
sbb
add
adc
pop
out
insb
add
pop
imul
jae
cwtl
cmpsl
lahf
dec
add
rol
jecxz
and
cmp
loop
addb
lcall
dec
mov
cmpsl
cmpsb
add
push
imul
dec
add
jnp
data16
push
shl
das
inc
inc
add
imul
push
add
add
shrl
ret
fldcw
push
jle
lds
stos
enter
js
pop
mov
test
sar
aam
dec
pop
fists
mov
mov
sti
andl
pop
jno
dec
in
out
sbbl
jbe
dec
mov
scas
cmp
jmp
cmpsl
inc
mov
adc
cmp
or
cli
out
call
push
pop
inc
pop
lods
inc
in
nopl
fisubrl
xor
mov
cmp
ret
inc
adc
xor
mov
add
lock
lods
iret
pusha
jns
es
lahf
xchg
mov
aam
das
pop
jp
fwait
add
sahf
inc
int
adc
add
out
mov
push
add
push
inc
mov
push
scas
sti
add
cmp
or
mov
add
sub
inc
jbe
jge
loope
mov
add
sub
cltd
out
pop
or
andl
test
in
nop
add
mov
mov
ficoml
adc
push
icebp
lcall
shlb
mov
add
sub
in
xchg
arpl
jno
lock
jecxz
and
xor
std
jo
adc
xor
add
dec
out
add
cli
nop
orb
jne
add
add
aad
daa
inc
mov
in
push
scas
add
loope
mov
sahf
jmp
jbe
add
mov
add
pop
ret
lods
mov
rcll
mov
adc
loopne
xchg
inc
add
mov
stos
add
pextrw
jg
popf
sub
adc
add
pop
push
icebp
pop
outsl
inc
xchg
dec
divb
movsb
push
cmp
movb
movsb
adc
add
rcr
push
cmp
xchg
dec
cmp
xor
stc
and
cwtl
push
out
add
xlat
je
fisttpll
lea
add
push
lock
sbb
dec
test
inc
adc
js
test
call
out
add
or
pusha
or
pop
andl
mov
sbb
cwtl
or
movaps
fs
arpl
sbb
test
lock
out
add
decb
mov
test
cmpb
ficoms
dec
sub
hlt
add
leave
call
pop
sub
or
adcl
pop
add
and
aas
inc
sbb
add
pusha
push
xlat
sarb
mov
sub
imul
pop
shll
mov
shr
mov
pusha
daa
ds
icebp
cmpl
inc
add
dec
sub
fwait
push
pusha
jl
aad
add
push
pop
and
repnz
dec
cld
jl
movsb
call
cmp
loopne
add
dec
sub
popf
xor
add
hlt
daa
pusha
clc
pusha
cmp
cmp
por
mov
xchg
scas
add
mov
popf
add
push
add
push
mov
insb
lds
xchg
test
shrb
push
add
sbb
add
pop
inc
pop
clc
notl
mov
cmc
mov
lods
add
fs
cld
movsb
xor
inc
sbb
fildll
add
ds
incl
outsb
rcl
adc
xor
mov
faddl
pop
test
dec
sti
xchg
mov
pop
cs
cmp
aad
mov
fmul
add
ret
in
sbb
and
mov
and
cmc
xchg
loop
sub
mov
sub
adc
shl
jno
cld
lock
mov
and
out
dec
aad
or
or
adcl
xlat
or
fwait
xchg
dec
add
out
hlt
mov
mov
in
pop
mov
mov
cmp
xchg
lret
lcall
mov
jp
dec
punpckhbw
arpl
cwtl
add
iret
bswap
add
lea
mov
add
xchg
cmpsb
xchg
aaa
or
pop
xorb
add
push
pusha
push
or
test
sbb
repz
mov
leave
mul
xchg
add
mov
xor
mov
jge
pushf
push
add
and
out
or
lods
das
and
adc
roll
cs
lods
add
sbb
xchg
xor
pop
push
sub
pop
cmpb
cltd
push
push
sbb
lods
or
push
addl
push
adc
pop
sub
cmp
aad
insb
subb
mov
ja
rorb
xor
xchg
pop
addr16
hlt
mov
add
xchg
movsl
sub
test
jmp
inc
icebp
sbb
mov
dec
and
add
test
int3
sarl
lods
icebp
popa
sub
add
cmpsl
mov
ds
add
scas
pop
pop
or
or
jns
lret
pop
fistl
mov
adc
inc
and
xor
xlat
mov
mov
adc
pop
aam
andb
sbb
push
add
dec
pop
pop
add
cmp
adc
int
popa
mov
jb
pop
add
xor
out
add
jne
jnp
sbb
in
lds
mov
push
mov
stos
xchg
push
subb
add
or
push
loop
add
dec
roll
cs
popa
mov
lcall
roll
je
cld
popl
jno,pn
idiv
test
fisubrl
and
outsl
roll
clc
mov
rcr
xor
jnp
mov
xchg
inc
cltd
mov
cmpsb
add
mov
or
dec
sbb
gs
lahf
add
rcrl
test
mov
aad
pop
add
sbbl
and
xchg
int3
mov
add
mov
xor
cwtl
fwait
jbe
andb
inc
scas
xacquire
and
dec
cmp
add
sub
lret
add
mov
mov
hlt
sub
ljmp
sbb
test
add
testl
cmp
or
or
enter
out
lock
cmp
pop
cld
loope
int3
add
shl
hlt
in
xchg
add
or
leave
inc
xor
add
je
movl
gs
add
mov
ja
cmp
dec
rcr
pop
jnp
push
mov
add
add
or
push
les
sub
adc
bound
fidivs
inc
les
in
add
fidivl
push
sbb
mov
andl
aas
jge
sbb
add
into
sub
add
and
add
or
push
nop
add
js
es
sub
pusha
xor
dec
int
loopne
inc
inc
cmpsl
adc
daa
arpl
je
and
xchg
pusha
iret
add
mov
inc
gs
cli
scas
add
pop
dec
xor
adc
icebp
pop
aam
add
xlat
cmp
inc
and
scas
icebp
aas
add
and
mov
fisttpl
notb
mov
fs
repz
es
hlt
add
inc
add
xor
sub
adc
sub
add
into
adc
mov
incl
or
movsl
add
pusha
aad
sbb
or
call
ds
mov
loope
xchg
adc
cltd
inc
subb
flds
decb
movsl
roll
jns
jl
push
cmp
or
mov
inc
int
or
sbb
add
jmp
leave
movsb
pop
dec
lods
mov
pop
or
add
enter
mov
dec
out
inc
mov
fmul
mov
pop
adc
inc
mov
cli
outsb
jmp
push
orb
addb
push
pop
sub
ja
cmp
aam
add
sub
and
mov
rol
fsub
push
mov
les
cltd
clc
rolb
dec
jno
add
mov
jl
inc
pop
sarb
inc
mov
mov
mov
enter
or
mov
cld
fsubs
inc
stc
push
xlat
add
add
insb
add
mov
inc
push
xchg
aam
fstl
add
es
mov
daa
sbb
std
mov
in
add
rcll
ljmp
inc
mov
adc
or
push
mov
add
jbe
ljmp
jmp
popf
mov
push
adc
or
jle
adc
jg
inc
add
clc
dec
sub
push
mov
xchg
add
or
add
mov
jo
jne
cmp
add
add
jl
lea
movsb
xchg
xor
mov
push
or
adc
push
pusha
in
dec
mov
mov
shlb
mov
int
sub
test
ds
sbb
pushl
loopne
adc
mov
je
test
jmp
and
push
inc
out
sbb
and
loopne
mov
js
cmp
add
mov
xor
test
lock
repnz
cmpsl
cmp
jae
in
xor
cld
sbb
inc
jo
xor
sbb
and
notb
adc
add
insb
stos
out
ficomps
les
clc
addr16
push
insl
jg
rol
cmp
push
or
jge
and
ret
fadds
nop
pop
fisubrl
mov
lods
jmp
add
mov
push
sbb
jl
push
lock
mov
push
xchg
mov
cmp
add
cmp
je
xchg
add
jge
add
and
mov
add
push
xor
data16
xchg
pop
pop
out
sub
flds
fmulp
sarb
mov
out
inc
clc
adc
movsl
mov
cmp
add
mov
adc
add
inc
je
fst
inc
sti
jnp
push
pop
pusha
fiaddl
mov
movsb
enter
add
mov
shlb
fdivl
pop
sti
lds
add
sub
shl
out
fcoml
sar
rorl
test
cwtl
out
and
pusha
bound
pop
in
xchg
iret
mov
lock
add
jle
stos
cmp
push
lods
dec
jmp
xchg
add
dec
adc
push
scas
pop
faddl
adc
add
sub
les
push
jno
xchg
pop
arpl
roll
incb
jo
mov
test
add
adcb
mov
jg
xchg
pop
pop
push
inc
mov
add
dec
inc
scas
out
mov
xchg
dec
movsl
dec
rorb
test
iret
mov
lret
jl
mov
sub
pop
in
iret
or
mov
adc
sub
add
inc
sahf
nop
mov
pop
dec
int3
hlt
leave
fmull
sub
cld
lahf
loopne
mov
inc
add
pop
lret
jecxz
jmp
inc
sub
lea
cmpsb
aaa
xor
add
and
in
ljmp
sub
test
inc
shll
mov
mov
xor
or
ds
add
ds
cmp
add
cmc
add
call
mov
xor
ljmp
stos
or
jecxz
test
pop
test
cli
xchg
out
out
jne
cmpsl
inc
imul
out
lods
loopne
stos
push
dec
cmp
pop
mov
add
push
cmp
cs
lea
cmp
loopne
aaa
rolb
leave
cmp
cmp
mov
icebp
fisttpll
add
fs
cwtl
cmp
xchg
pop
andl
sub
arpl
dec
rolb
mov
add
add
adc
or
inc
mov
pop
loop
or
imul
pop
sub
imul
aad
mov
mov
dec
dec
lods
add
adc
push
xchg
scas
mov
pop
ljmp
and
call
xor
sub
inc
loop
add
dec
pop
pop
xchg
in
add
xor
insb
enter
or
mov
shll
xor
lret
cmc
out
cmp
sub
and
pusha
inc
push
fxch
add
mov
mov
add
adc
sbb
push
add
sbb
arpl
inc
lds
cmpb
jb
clc
mov
popa
mov
icebp
add
ds
lret
push
inc
rcrl
push
popa
jecxz
sti
mov
and
movsl
push
or
sbb
xor
xchg
popa
sbb
mov
fistpll
lcall
leave
addr16
cld
add
jno
cmp
add
sub
pushf
xchg
adc
repz
aam
or
inc
add
cli
jno
pop
data16
add
jae
dec
lret
fadds
and
jmp
lea
mov
sti
bound
fsubl
rcrb
sbb
sbb
xorb
inc
add
push
jo
sbb
ret
sbb
add
xorl
nop
jo
fnstcw
sub
cli
jno
lods
sub
ffree
jle
jo
pusha
aaa
nop
std
fwait
mov
jns
lahf
dec
mov
sbb
cmp
arpl
out
lcall
mov
and
jle
sahf
mov
stc
pop
cmp
or
adc
push
js
jnp
add
cld
dec
aaa
add
fdivs
iret
jb
nop
loopne
lods
xor
sbb
sbb
mov
dec
add
xchg
std
dec
iret
xchg
sarl
pop
mov
jg
pop
mov
repz
jp
add
fmul
nop
add
cwtl
adc
fidivrs
mov
test
add
or
ret
and
cmc
push
inc
xor
add
orl
andb
jb
and
lock
fwait
xor
dec
push
and
add
ljmp
dec
pop
push
out
pushf
sarb
mov
mov
or
lods
add
bound
pushf
hlt
subb
sub
add
mov
int
inc
pop
inc
popa
xorl
jbe
ficoms
jo
subl
push
and
dec
push
cli
mov
sbb
add
sti
lahf
rclb
add
in
loopne
mov
movsb
addr16
fdivl
cli
and
stos
xor
fbstp
dec
pop
popf
adc
hlt
push
sbb
jp
pusha
aaa
push
dec
add
and
push
add
ja
pop
xor
xlat
inc
ret
out
lods
jbe
sbb
xor
cs
pusha
les
or
dec
add
lcall
filds
and
sub
movsbl
neg
add
xchg
dec
movb
and
in
scas
roll
add
xchg
mov
fisttpll
mov
pop
sbb
mov
test
insl
lock
repnz
lods
sbb
adc
add
cmpsl
or
sbb
and
data16
dec
and
xchg
push
iret
xor
mov
xchg
add
push
hlt
xor
or
add
fildll
adc
push
lods
mov
jg
andl
mov
shll
mov
xchg
cmp
xor
or
add
or
outsl
inc
inc
add
add
inc
cmp
pop
add
insl
push
jo
scas
loop
enter
xor
add
bound
or
inc
push
push
test
js
inc
jno
orl
pusha
adc
and
pop
test
dec
adc
cltd
cs
adc
testl
test
xor
fsts
inc
int3
sub
push
and
outsb
or
push
int
test
xchg
add
inc
mov
and
sbb
test
mov
loopne
jecxz
inc
bound
loop
sbb
dec
cmc
xchg
fdivs
xchg
scas
add
hlt
sub
add
cmc
mov
fistps
lea
mov
and
mov
nop
das
lods
pop
push
cmp
and
int3
sub
imul
pop
in
jge
pop
pop
nop
jl
jno
add
push
cs
mov
enter
push
fwait
pop
push
cmp
ret
mov
and
outsl
nop
push
sbb
insb
push
idivb
aam
mov
push
or
rorb
sbb
xor
jno
in
hlt
push
add
icebp
adc
mov
iret
scas
add
dec
adc
insl
add
movsb
out
fimuls
mov
dec
add
jb
mov
in
mov
jle
mov
mov
adc
out
xorb
clc
mov
adc
and
add
and
mov
jo
push
pusha
pop
clc
sahf
xchg
jmp
or
rolb
or
adc
addr16
test
xchg
add
or
in
mov
mov
nop
movsb
sarb
sbb
or
inc
adc
add
std
loopne
int
stos
adc
lods
add
pop
or
pop
xor
mov
fwait
mov
les
mov
jmp
push
stos
lods
testb
movsl
loope
leave
lret
outsl
cmp
add
cmpsl
pop
adc
push
daa
aad
jg
int
sub
push
cmp
xlat
subb
cmp
rcrl
int
dec
cmp
push
push
sub
test
stos
add
add
inc
mov
das
js
jo
add
dec
aad
jbe
xchg
push
shrb
jp
mov
pop
mov
lret
or
jle
inc
movhps
push
pop
mov
xor
inc
loop
or
and
add
popf
or
je
hlt
rol
test
pusha
mov
mov
xor
std
and
pop
add
and
sahf
push
xchg
sub
clc
mov
sbb
add
mov
mov
fldt
xchg
push
ljmp
sub
add
lds
cmp
mov
jo
dec
nop
add
mov
cld
jae
inc
mov
add
fwait
rclb
rcrb
sbb
sahf
cmp
xchg
jns
incl
mov
or
inc
daa
inc
jo
dec
lods
mov
xlat
inc
pusha
lcall
paddsb
insb
mov
add
add
xabort
and
fs
aaa
jae
add
test
or
mov
sahf
sub
adc
movsb
pop
cmp
add
out
push
negb
cwtl
jbe
or
mov
xchg
subl
sahf
sbb
mov
lods
sbb
lret
outsw
roll
mov
ja
cmpsb
int3
out
pop
xor
cmp
rorb
xchg
adc
mov
xchg
shlb
pop
cmp
insb
xchg
ja
frstpm(287
jne
mov
rorb
cmpsl
sahf
repnz
sbb
mov
cs
test
adc
push
push
mov
lret
les
mov
add
andl
xor
aad
jmp
sarb
sahf
negb
and
pop
cld
inc
cwtl
xor
pop
in
and
nop
jns
add
inc
test
mov
add
push
add
pop
xor
add
mov
add
push
xlat
call
loopne
cld
add
add
mov
and
hlt
mov
inc
dec
jo
add
rclb
scas
push
shlb
jns
insl
jnp
shlb
mov
imul
stos
xorb
cs
jb
hlt
repz
mov
enter
pop
sub
adc
jb
in
repz
xchg
pop
dec
insb
add
pop
in
sbb
shl
add
sub
pop
data16
sbb
lds
loop
add
movsl
imul
add
mov
test
push
add
ja
xor
out
movsb
mov
testb
dec
lahf
test
add
xor
outsb
faddl
push
or
aas
leave
out
pop
xor
in
ds
cmp
mov
and
inc
sarl
int3
test
pusha
clc
rcrl
or
pop
adc
pusha
fbstp
inc
stos
shrb
aad
mov
push
add
cli
test
arpl
cwtl
add
stos
and
mov
mov
cmp
faddl
pushf
mov
cmp
add
dec
jle
mov
fmuls
fildl
xchg
jo
add
mov
ret
daa
mov
inc
and
inc
ja
cli
sti
fisttps
test
imul
test
inc
popf
outsl
cli
movsl
pop
jbe
enter
mov
lret
jg
fbld
out
lods
pop
decl
jo
cltd
mov
add
stc
or
hlt
add
aam
cmpb
jnp
push
xor
adc
fnstenv
enter
test
sbb
or
adc
xlat
cmp
mov
sub
xor
loopne
xchg
add
clc
popf
pop
or
cmp
lock
xchg
sub
jecxz
add
pop
push
lock
test
mov
mov
sub
add
outsb
xor
jnp
lea
pop
loope
add
xchg
push
inc
jo
enter
xchg
sbb
mov
cmp
add
xor
repz
pop
mov
decl
push
add
jne
stos
add
fs
test
pop
nopl
fbstp
pop
add
mov
sbb
jmp
sbb
paddsb
sahf
lea
mov
xor
pop
out
or
pop
xchg
fdivs
add
stos
addr16
push
enter
and
jle
call
pop
add
test
cltd
push
add
stos
jmp
adc
add
movsl
mov
sbb
xor
add
fnstsw
pop
insb
in
add
inc
cmp
insl
xchg
add
pushf
push
jge
mov
jae
sbb
cmp
sub
mov
imul
jl
inc
sbbl
cmp
in
sar
add
daa
cmpb
pop
fildl
aas
or
lods
inc
fldenv
cmp
sub
jb
jg
fiadds
jp
jb
add
aad
pusha
push
fcomps
sbb
dec
cli
push
in
mov
mov
dec
repnz
negb
add
fcoms
jbe
inc
jb
cmp
std
js
jno
sarb
cld
aaa
mov
push
push
popl
movsl
cmpsb
cmp
push
dec
lock
jne
lcall
xchg
push
or
lods
ja
xchg
add
out
cwtl
std
mov
outsl
jle
addr16
test
push
lock
pop
and
lcall
andl
fsubrl
push
inc
xor
cmp
loope
mov
fsubr
pop
pop
dec
xor
cmp
sbb
pop
clc
pop
aam
inc
lock
loope
xchg
pushf
in
insl
and
push
rolb
out
cmp
jl
sti
add
jb
dec
pop
inc
push
stos
add
pop
addb
fmull
inc
pause
or
js
and
fistpl
lahf
dec
pop
jns
mov
inc
hlt
add
adc
repz
cmp
add
add
add
adc
sbb
add
dec
mov
add
xchg
pop
das
mov
js
sub
imul
pop
push
ret
adc
add
lods
loop
or
pop
fnstsw
cmp
add
sbb
mov
test
adc
leave
mov
fwait
xchg
out
paddusw
jo
pop
add
leave
inc
add
add
mov
int
in
or
filds
orb
out
aam
insl
mov
addb
add
and
mov
rorb
nop
add
pop
xchg
inc
hlt
cmc
mov
inc
cmp
into
dec
add
popa
jecxz
pop
int
mov
fcoml
push
adc
in
fisubs
add
cmp
or
xlat
sub
push
popf
mov
fimull
cltd
mov
xorb
sbb
sbb
xor
sub
repnz
jecxz
mov
pop
pop
pmulhuw
mov
rorb
mov
dec
mov
ficompl
inc
out
clc
push
loope
mov
ficomps
add
jae
mov
mov
daa
mov
lods
inc
int3
or
imulb
add
jg
in
add
mov
insl
loop
mov
xchg
pop
loopne
cmp
add
sub
in
add
mov
stos
xor
pop
push
bound
jo
lcall
adc
inc
inc
cmp
subb
cmp
rcll
jns
adc
mov
fptan
xor
mov
shll
xor
add
jmp
mov
xchg
movsb
or
repnz
jmp
or
push
and
pop
xor
sbb
dec
into
mov
mov
lret
scas
add
hlt
push
imul
movd
les
lock
inc
add
pop
cmpsb
mov
push
add
adc
lods
add
adc
ret
pop
add
fidivl
add
nop
inc
ljmp
popf
insb
xchg
xor
jecxz
add
dec
arpl
dec
or
mull
enter
jo
jmp
sahf
sbb
xor
add
lret
push
in
push
fcomip
jmp
pop
and
jnp
cmp
dec
decl
and
outsl
dec
jnp
or
lds
nop
scas
jl
add
idivb
jbe
xor
filds
ret
sub
add
enter
iret
std
add
mov
cmp
nop
cmp
aaa
insb
fdiv
out
lods
and
pop
add
outsl
enter
mov
push
or
mov
scas
and
pusha
insb
add
mov
or
fdivl
cmp
sub
xlat
cmp
arpl
mov
or
mov
inc
adc
movsl
jne
mov
push
add
in
add
jg
dec
rorb
mov
jo
xor
out
addr16
ret
ret
sti
add
sub
pop
dec
and
push
fwait
or
addr16
ud1
inc
movsb
cmp
add
push
mov
pop
dec
cs
pushf
js
mov
jno
adc
or
push
loopne
scas
je
add
sub
cmp
out
loope
aad
std
xchg
add
and
in
pusha
mov
xchg
add
inc
mov
cwtl
aaa
add
ds
push
xor
push
mov
cmp
gs
stos
xor
push
and
and
xchg
popf
punpcklbw
add
shll
sbb
adc
cmpsb
nop
cmp
inc
mov
nop
pop
add
addr16
das
adc
sub
fdivrs
fadds
xor
in
adc
and
jecxz
icebp
cli
jb
add
and
repnz
mov
add
add
stos
jg
jb
push
int
imul
lock
sub
test
mov
inc
ret
xor
les
add
sub
add
mov
add
sub
int3
mov
lea
dec
pop
jae
jns
mov
dec
mov
add
sub
add
and
mov
or
rcpps
mov
jle
icebp
add
xchg
xor
lcall
dec
and
push
movb
push
push
loope
inc
imul
das
pushf
cltd
push
or
mov
push
jnp
mov
xor
ret
sarl
lcall
sarb
scas
add
xchg
cmpsb
pop
popa
dec
mov
adc
sub
mov
in
add
out
inc
rolb
mov
je
add
xchg
add
addps
dec
cmp
mov
fistps
ret
lods
jg
sbb
sub
cmp
adc
dec
push
arpl
enter
pop
jmp
cld
or
cwtl
jb
pop
aad
imul
rcrb
mov
bound
aas
add
mov
das
jecxz
fdivr
mov
data16
inc
xlat
mov
jecxz
or
add
cltd
xchg
sub
aam
pop
pop
in
cwtl
pop
xchg
add
sbb
or
push
push
das
dec
push
dec
pop
in
sti
lds
jmp
sbb
les
lods
inc
ja
sbb
or
add
xchg
mov
aam
and
mov
popa
shll
loop
lods
or
xlat
add
push
fiaddl
fwait
stos
mov
addr16
add
dec
inc
pusha
mov
pop
mov
add
inc
sahf
fisubs
repnz
dec
push
in
call
scas
data16
repz
dec
pop
xchg
movsb
adc
sahf
mov
add
je
push
add
inc
js
std
or
out
inc
jo
insb
in
lods
push
jae
pop
cmp
xor
jne
adc
add
push
adc
add
sbb
xor
int3
ret
sub
cltd
mov
pusha
mov
fildll
add
or
jl
std
mov
fcoms
out
andb
jbe
sahf
add
lea
jge
dec
pop
iret
pop
ds
fmuls
pop
lea
adc
or
inc
out
negb
in
inc
cmpb
fiadds
in
les
sti
cmp
lea
in
mov
incl
push
nop
and
add
xsaves
push
or
icebp
add
insb
in
rolb
cmpsl
dec
loopne
add
sti
test
xchg
mov
popf
inc
daa
pop
add
mov
js
xor
mov
arpl
setae
jle
cmpsl
sbb
push
and
imul
imul
cmpsb
rcrl
mov
inc
mov
jmp
sub
loope
mov
movsl
dec
xchg
mov
jl
sarl
outsl
dec
je
add
ds
dec
pop
push
push
adcl
or
fsubs
imul
cld
in
add
jo
lock
into
popa
std
add
es
xchg
mov
adc
pop
jns
pop
in
add
and
jmp
add
fcoms
pop
nop
adc
add
add
push
aas
xor
sub
popl
sub
in
adc
loopne
push
lahf
xor
outsl
pusha
outsl
mov
gs
loopne
sbbb
lea
rol
add
ret
mov
adc
fcmovbe
cmc
add
inc
xor
iret
mov
add
jo
repz
mov
inc
lea
adc
loop
add
sbb
sub
and
mov
sub
add
jl,pt
sbb
loope
pop
ss
aaa
adc
inc
add
imull
addb
add
pusha
add
add
xchg
add
add
cmpsb
push
xchg
mov
stos
rolb
push
sbb
les
testb
popl
push
mov
push
add
mov
je
imul
fnstenv
or
jg
pushf
and
mov
add
test
xor
jmp
push
dec
je
add
lock
or
inc
dec
inc
ljmp
mov
fisttps
outsb
mov
xchg
and
adc
popl
xor
jle
mov
sbb
cmpb
in
dec
les
cmp
mov
stos
mov
addb
enter
daa
pop
dec
clc
push
push
pusha
add
fsubrl
mov
jmp
mov
mov
lods
sub
jp
xorb
in
data16
push
sbb
pop
aam
jne
sbb
mov
or
sbb
and
add
fadds
sarb
cltd
clc
gs
cmc
adc
addr16
add
int3
pause
shl
addb
popf
xor
add
lcall
add
and
and
or
mov
out
sub
pop
sbb
push
pop
add
stos
dec
inc
adc
push
outsl
inc
mov
loope
movsb
fwait
pop
jb
add
mov
jae
add
scas
in
push
aad
add
mov
in
popa
add
jbe
cld
mov
mov
mov
insl
jo
loope
les
mov
das
fstpt
icebp
mov
xor
fldcw
mov
loope
cmc
stos
int3
test
arpl
dec
clc
shlb
mov
add
pop
les
shl
dec
xor
inc
mov
incl
mov
sbb
sub
jnp
add
repnz
ret
sub
call
pop
repz
test
in
andb
lods
dec
mov
or
movsl
je
addb
orl
ret
test
repz
mov
add
notb
jecxz
in
add
sbb
in
ja
sbb
loopne
dec
mov
xchg
xor
loope
pop
jbe
add
push
and
ja
add
sti
test
in
dec
jmp
clc
cmp
pusha
insb
loope
push
lods
add
mov
dec
mov
imul
rolb
mov
daa
loopne
cmp
pop
fsubr
test
add
out
jns
lahf
inc
repnz
lea
push
adcb
sub
cmp
sub
dec
inc
outsb
add
icebp
ret
bound
nop
inc
mov
in
imul
add
shll
insb
les
movsb
inc
scas
inc
push
mov
sbb
or
add
add
js
inc
add
or
inc
mov
dec
pop
imul
fiaddl
xchg
test
cmp
mov
cmp
adc
sbb
dec
es
add
aam
les
or
inc
mov
add
pop
gs
mov
jbe
add
or
pusha
cli
movsb
jns
fisttpll
cmpb
fadds
xchg
push
lea
cmp
out
inc
pop
adc
add
xchg
lock
imul
pop
cmp
in
das
fwait
inc
repz
pop
test
mov
pop
jae
das
push
pop
loopne
or
and
mov
test
mov
hlt
out
jnp
pop
or
in
add
jo
out
cltd
lock
add
cwtl
adc
mov
in
sbb
js
jmp
xchg
sub
ja
sbb
fsubrs
mov
cwtl
gs
add
sarl
pop
xchg
xchg
add
push
sarl
pusha
inc
jge
in
add
fs
jo
push
xchg
cmp
test
clc
push
leave
hlt
push
add
sahf
add
cmp
fwait
add
push
push
jno
js
add
mov
imul
xor
mov
fists
xchg
stos
sbb
sub
sub
add
push
add
enter
dec
or
push
xrelease
test
cmpsl
mov
jae
js
add
push
and
push
testl
stos
cld
outsl
add
mov
lock
or
arpl
jmp
adc
div
imul
or
mov
rol
mov
push
add
bound
scas
adc
lods
mov
xchg
xchg
dec
fistpll
add
sbb
or
lret
cwtl
mov
lea
mov
jg
push
sub
and
aaa
add
iret
call
fwait
add
das
cmpsl
sahf
dec
adc
add
adc
inc
mov
sbb
add
push
inc
add
xor
mov
aaa
jae
add
lea
sbb
cld
lods
jg
push
repz
cmp
lods
adcb
add
xchg
lea
fadds
inc
add
sbb
mov
push
jg
adc
push
mov
sub
into
inc
roll
or
test
pop
pop
jno
add
les
sub
mov
adc
dec
int
enter
add
loopne
insb
movl
jg
scas
cmp
int3
dec
push
add
add
xor
xlat
test
andl
iret
add
jae
imul
xchg
cmp
or
xor
loopne
jns
inc
ja
fildl
cs
outsl
scas
subl
add
js
adc
mov
out
aad
pop
cmp
xorb
adc
push
dec
cmpsb
push
push
or
cld
mov
add
popa
mov
cmc
add
dec
stos
xor
add
ss
add
add
pop
push
cmp
sbb
ljmp
dec
sub
gs
es
in
fistpl
jge
add
nop
loopne
pop
xchg
int3
lret
arpl
test
mov
adc
ljmp
jle
mov
movsl
sub
test
and
add
sarb
jbe
add
int3
inc
cli
xchg
push
add
or
sub
popa
xchg
out
pop
adc
jecxz
mov
fwait
andl
cli
pop
test
repz
enter
daa
sbb
sbb
js
add
shrb
das
push
jmp
leave
sbb
sbb
add
jne
mov
roll
popa
push
lods
adc
xchg
inc
add
cmpsl
enter
mov
add
cmp
add
cwtl
aas
testb
or
mov
fnsave
sahf
cmp
nop
add
sbb
adc
lahf
ret
dec
mov
fists
sub
popa
outsl
loop
push
adc
cmp
mov
insb
sti
pop
movsl
add
movsb
push
xchg
call
inc
les
add
out
call
adc
add
mov
xchg
and
add
push
shl
add
cmp
icebp
stos
test
pop
aam
add
sub
dec
jmp
add
push
cli
xor
mov
push
rclb
test
js
je
shl
cmc
mov
add
movsl
cwtl
xor
or
dec
add
cld
in
iret
clc
fiadds
dec
in
pop
dec
fwait
popf
or
repnz
xor
mov
mov
add
ja
stos
test
cmc
add
mov
stos
adc
mov
add
ret
mov
shlb
add
out
loopne
xchg
andb
rorl
int
mov
or
or
inc
fmul
jecxz
add
mov
add
scas
sub
repz
or
dec
jne
andl
call
pop
daa
inc
add
popa
jecxz
push
cmp
add
xor
icebp
jmp
mov
arpl
push
inc
lds
jns
pushf
je
fstps
loopne
repnz
pop
adc
iret
add
push
movsl
sarb
outsl
sahf
data16
inc
push
and
test
scas
stos
test
or
sub
ds
add
int
mov
add
fsub
or
clc
mov
mov
push
lods
jp
popf
inc
push
sar
push
test
cmp
lds
loop
pop
jp
xor
in
xor
fsubrs
push
lret
add
jle
in
add
pop
lcall
cwtl
sbb
or
das
pop
add
xor
in
push
into
cmpsb
add
lods
xchg
xor
add
lret
imul
in
xor
movhps
fnstcw
inc
push
lock
and
in
frstor
dec
mov
lret
mov
push
cmp
aad
insl
shrl
in
imul
stos
cli
sahf
ficoms
xor
loopne
add
or
dec
sbb
sbb
cwtl
inc
pop
or
fiadds
scas
mulb
mov
in
in
add
add
or
iret
add
mov
add
xlat
xchg
pop
jl
push
test
jae
scas
repz
ss
pop
xor
std
add
jmp
and
adc
fildl
mov
sbb
or
or
aas
cmp
cmpsl
mov
inc
hlt
insl
sub
scas
cwtl
sbb
add
push
or
repz
dec
subb
ret
dec
add
lret
loopne
nop
lods
add
inc
rorl
paddq
push
and
dec
jb
add
xchg
ja
str
xor
add
pop
jbe
sbb
add
repnz
lods
push
movsl
jne
push
mov
cmp
adcl
xor
pop
mov
push
and
fmulp
push
arpl
fsubrl
or
add
mov
out
pop
lret
pop
and
sbb
fs
dec
or
add
hlt
push
subb
adc
pop
adc
lcall
scas
sub
xchg
add
cmp
sbb
insl
scas
mov
incl
mov
jb
incb
jae
mov
add
jp
xlat
loope
pop
cmp
hlt
daa
inc
pop
data16
sbb
ficomps
or
js
nop
cmovnp
and
sub
hlt
add
xchg
xchg
ror
ds
jl
push
push
fwait
cmp
and
ss
add
jg
in
jae
jb
adcb
push
add
std
test
fildll
push
cld
ljmp
jl
adc
outsl
pop
dec
cmp
or
ret
nop
scas
inc
je
adc
mov
push
dec
xchg
mov
sub
push
push
leave
adc
add
adc
dec
fsubl
dec
in
sbb
test
insb
sub
ret
lahf
xor
push
inc
xchg
add
xor
sub
mov
jo
push
arpl
push
add
jg
jmp
cmpb
pop
test
or
jo
and
add
loope
inc
lods
in
es
mov
add
jle
addr16
add
xor
dec
sbb
pop
or
cmp
push
sub
add
out
fists
frstor
and
pop
cmp
dec
rcrb
sbb
popf
xor
test
addl
lcall
fiadds
jecxz
push
leave
cmp
push
add
adc
adc
mov
sbb
push
addr16
sbb
add
and
mov
dec
filds
movsb
mov
aam
jl
mov
pop
mov
push
mov
shlb
inc
adc
lods
push
pop
mov
xchg
mov
sbbl
ss
add
fnstcw
pop
or
mov
mov
std
add
mov
call
jle
movsb
adc
push
add
scas
and
divb
fwait
dec
cmp
movsl
add
lret
inc
test
mov
fs
mov
and
pop
cmp
jnp
cmc
into
push
pushf
sbb
mov
inc
imul
nop
sub
jno
add
movsb
std
add
arpl
outsl
add
xlat
fdivrs
in
pusha
mov
inc
cld
rcll
jb,pt
outsb
sbb
bnd
dec
aam
mov
cld
rclb
loopnew
push
stc
loopne
cmp
pop
mov
les
jo
mov
shl
dec
popf
cld
add
xchg
lret
insl
gs
and
lcall
mov
sbbl
repz
sub
ret
out
jns
inc
mov
sub
and
and
add
push
jmp
aam
xchg
adc
push
in
aas
cmp
or
xlat
testl
mov
dec
aas
add
xchg
rcrb
mov
cmp
push
in
pop
inc
add
rclb
addl
sarb
in
mov
inc
sbb
sbb
sbb
add
dec
and
out
sarb
fildll
outsb
inc
or
xlat
movsb
popf
add
cmc
cmpsl
pop
mov
and
ljmp
pop
cmp
mov
or
jns
add
stos
cltd
pop
aaa
mov
xchg
cmp
or
and
add
jp
or
cmp
rolb
sub
icebp
dec
lock
add
and
or
dec
mov
in
scas
mov
nop
sbb
push
add
push
adc
out
xchg
pop
cmp
mov
stos
dec
add
cmp
push
test
xchg
xor
xor
fcomps
popa
adc
and
cs
mov
mov
pop
mov
push
out
or
pop
cs
cld
adc
add
nop
jns
mov
rolb
mov
lods
add
in
adcl
adcl
notl
inc
jecxz
cmp
pop
add
mov
mov
mov
inc
mov
and
mov
and
xchg
cmp
loopne
mov
bound
test
sti
lock
ds
cmc
fildl
fdivrl
push
test
cmp
jae
gs
add
iret
xchg
xchg
cmpsb
inc
fiaddl
repnz
pop
mov
out
std
dec
jmp
add
iret
dec
in
pop
call
mov
sti
nop
sub
gs
outsb
hlt
shlb
aam
int
add
les
jnp
orl
add
cmpsl
add
and
add
xor
jl
std
dec
cli
push
add
inc
add
adc
pop
dec
lods
test
mov
repnz
push
sbb
inc
add
xchg
push
xchg
mov
xor
adc
flds
add
add
lock
in
loope
adc
pop
jns
lea
add
cmp
mov
ret
loop
adc
enter
leave
xchg
nop
cwtl
es
out
addb
repz
push
cwtl
inc
sub
inc
call
jge
push
cmp
bound
push
lods
jp
push
push
add
lcall
sub
clc
mov
out
or
fildll
in
out
xchg
mov
pop
mov
jno
sbb
stos
dec
push
xchg
xchg
add
in
leave
sbb
add
xrelease
xchg
mov
add
sbb
popf
cld
ftst
pop
add
mov
std
adc
and
cmp
jecxz
pusha
repz
fcmovbe
nop
lock
adc
repnz
xor
cs
paddw
add
outsb
and
out
stos
data16
movsb
push
lea
add
fsubrs
jb
lcall
in
dec
sbb
je
mov
jge
add
insl
pusha
xor
or
cwtl
add
xchg
push
pushf
ret
sbb
sahf
add
lods
mov
dec
aas
aam
mov
add
aad
push
int3
addb
xchg
pop
fstpl
mov
dec
or
bound
xchg
scas
add
das
hlt
out
xchg
pop
mov
imul
add
aad
and
mov
add
cmc
bound
push
adc
cmpsb
pop
jl
sub
scas
outsl
sbbb
inc
movsb
mov
mov
jns
ret
mov
xchg
jge
mov
xor
in
jne
xor
add
ljmp
fldt
add
add
scas
add
lds
dec
pop
hlt
mov
inc
and
nop
add
pop
js
iret
mov
fwait
add
pop
mov
fcmovnu
pop
outsb
nop
mov
addl
inc
adc
xchg
pusha
push
mov
cmp
dec
sbbb
add
mov
outsl
pop
mov
dec
pop
mov
cld
push
add
mov
inc
popf
inc
and
or
loope
lfs
cs
cmc
int3
jns
lock
mov
inc
cmp
push
sub
cmp
xchg
out
add
out
mull
les
wrmsr
test
daa
jecxz
roll
inc
or
pop
sub
and
adc
sbb
add
and
dec
xlat
mov
cmp
sub
pop
stc
out
push
adc
add
jns
pop
or
lods
dec
dec
andb
mov
aam
cwtl
add
dec
loop
cmp
popa
cmc
xchg
fmull
cmpb
add
dec
or
sbb
sarb
fdivl
in
shll
push
jl
aad
pop
cmpsl
je
call
mov
cwtl
imul
and
cmpsl
add
popf
sti
dec
dec
sbb
subb
sbb
cmc
rorb
out
add
pop
ret
iret
fstpt
add
lret
mov
loopne
fwait
popa
mov
dec
fcmovbe
sbbb
xor
sbb
xorl
rolb
pusha
pop
mov
and
aam
add
adc
adc
aaa
pop
lods
cmp
enter
add
sahf
pop
outsl
add
hlt
add
dec
out
lds
mov
adc
lcall
mov
mov
add
mov
sub
mov
pop
bound
ds
add
mov
addr16
and
lret
mov
repz
in
scas
pop
jns
push
jge
add
test
jp
cmpsb
mov
push
dec
rcll
jo
inc
mov
add
fsubrs
arpl
add
pop
and
imul
daa
lret
inc
sbb
subl
loopne
sub
rcrb
fildl
lret
lcall
add
sub
inc
jl
jae
mov
pop
mov
add
gs
jg
ret
mov
add
orl
popa
xchg
adc
mov
pop
sub
adc
jle
xor
insl
xchg
loopne
icebp
dec
js
or
int3
je
enter
add
mov
rcrb
arpl
dec
mov
cmpb
cmp
pop
push
pop
test
mov
daa
pop
call
mov
xor
jo
jg
jl
fnstenv
out
add
mov
jle
add
jp
es
movsl
lods
mov
sbb
adc
push
popa
fs
xlat
sbb
cmp
nop
push
negl
pop
mov
shll
daa
lods
mov
or
sbb
add
out
aam
inc
sub
xor
and
add
aas
aaa
lods
and
xchg
cmpsb
pop
test
inc
mov
and
shrb
aam
ret
add
jmp
push
add
out
in
loop
dec
sbb
test
nop
xchg
cmpsl
adc
adc
je
popf
outsl
fbstp
push
push
jg
pop
push
xchg
sahf
xor
clc
pusha
ret
adc
adc
popf
push
inc
mov
or
scas
filds
dec
mov
push
repz
out
rcrl
aas
pop
cmpb
jbe
aam
insb
ja
add
repz
add
xor
out
or
and
or
fimuls
lahf
mov
inc
inc
add
fmull
cld
cmp
mov
inc
scas
and
jae
insb
or
rolb
popa
and
and
je
test
lock
popa
addr16
incl
inc
jle
sub
sbb
jmp
insb
sbb
pushf
cmpsb
mov
ja
fs
mov
add
mov
arpl
sbb
lret
mov
fwait
sub
dec
ja
or
push
shlb
dec
fcoml
orl
sti
rcrb
cmp
sbb
and
pushf
xor
and
in
xchg
push
add
cs
int3
enter
or
outsb
and
negw
in
xchg
scas
add
pop
in
xchg
rcrl
xchg
inc
inc
ret
push
sahf
popa
cmp
shr
jb
jle
adc
mov
pop
adc
scas
inc
mov
push
daa
je
add
rclb
xlat
push
sbb
ret
lcall
fistps
fsubr
adc
xchg
int3
rcrl
add
andl
ret
filds
jecxz
or
and
jmp
sbbb
sbb
pop
or
rcrb
mov
and
insb
xor
xchg
push
add
inc
push
shll
sqrtps
or
adc
or
loopne
pop
adc
stos
xor
and
add
dec
mov
pop
movsb
mov
dec
jecxz
in
es
xchg
or
cmp
hlt
add
imul
push
cwtl
scas
adc
add
xchg
mov
add
pop
pop
push
add
dec
or
adc
pop
js
data16
popf
sub
jmp
pop
jne
add
push
popa
xchg
mov
adc
cwtl
int
nop
add
mov
test
add
mov
or
ja
mov
push
mov
mov
lock
mov
sub
inc
inc
sahf
fmull
jle
add
stc
pop
hlt
mov
mov
pop
add
aam
xchg
xor
cld
and
push
mov
inc
push
lock
add
pop
fisttpl
pop
lahf
in
or
ficomps
push
out
jnp
fldlg2
clc
clc
pop
add
push
mov
or
and
mov
in
iret
add
xor
jns
call
aad
push
add
lret
cmp
scas
mov
bound
cmp
xor
sbb
push
subb
or
pop
in
sub
into
mov
add
jo
push
std
fdivs
and
shlb
push
stos
adc
or
call
fidivrl
cli
mov
js
push
xchg
cwtl
loop
add
jnp
cmp
outsb
leave
cmp
int
add
pop
stc
test
repz
inc
dec
mov
mov
lods
mov
adc
rcr
aam
clc
cmp
jnp
lret
mov
jne
ja
in
in
repnz
lods
sbb
arpl
dec
jbe
inc
mov
cmp
stos
adc
mov
enter
cs
test
call
mov
shlb
fidivrs
pop
lods
and
add
pop
push
addr16
cltd
add
pop
mov
mov
adc
xlat
mov
mov
es
mov
test
leave
stos
loopne
xor
in
insb
lods
popa
es
push
jp
outsb
cmp
mov
and
add
in
aam
xchg
adc
lods
loopne,pt
cmp
subb
inc
add
loop
imul
in
inc
enter
add
xor
repnz
movb
fdivr
cld
mov
adc
repnz
adc
push
fcmove
clc
push
dec
xor
sti
add
fldt
jle
jae
cmp
pop
ss
daa
arpl
in
mov
push
cmp
call
pop
sub
outsb
sti
pop
addr16
or
adc
add
push
xchg
pop
add
pop
mov
add
sub
into
bound
and
mov
mov
or
sub
and
inc
mov
loopne
and
xor
adc
push
add
pop
clc
and
pusha
xor
pop
jge
hlt
lods
jnp
popf
mov
pusha
cld
xchg
add
fmuls
xlat
add
lods
fs
movsb
add
jge
out
sbb
lods
adc
paddq
add
shrb
dec
push
sbb
movsl
add
add
push
add
push
mov
mov
adc
add
xchg
sbb
je
add
and
in
sbb
out
push
pop
inc
mov
add
jp
add
xor
cmc
loop
xchg
pop
and
ljmp
fsubl
movsb
and
xorb
ds
cli
xchg
add
jecxz
test
cmp
inc
divl
mov
add
xor
std
into
add
int
cmp
mov
inc
pop
adc
inc
jmp
pusha
cs
fiadds
out
fildll
pop
xchg
cwtl
test
inc
outsl
jl
add
push
lret
out
jo
mov
fcmovb
xor
inc
mov
call
pop
push
loop
out
add
mov
nop
dec
add
fdivs
rcll
push
out
cmpsl
add
and
enter
sub
xchg
stos
dec
or
mov
mov
lods
ficomps
push
fcompl
jb
add
loopne
xchg
lret
hlt
add
cmp
roll
jle
imulb
pusha
pop
clc
push
fcmovu
add
jmp
mov
push
sub
add
ljmp
cs
pop
iret
push
cmp
mov
lds
inc
adc
add
addr16
xchg
jo
sbb
stos
sbb
add
jle
dec
inc
dec
sub
add
mov
adc
cmpsb
and
enter
mov
and
nop
dec
push
mov
push
sti
leave
pop
pop
and
add
lods
clc
cmp
ret
or
test
or
pop
jg
dec
fildl
std
pop
xchg
outsb
add
and
xchg
push
ljmp
inc
pop
not
sub
sbb
adc
int
ret
pusha
push
pushw
xor
imul
lock
add
mov
or
cmpsl
xor
pop
or
push
das
add
or
enter
movsb
test
and
loop
push
mov
loopne
shrb
sub
push
lret
mov
cmp
and
cmp
aaa
pop
scas
lods
out
inc
jb
xchg
je
cmp
mov
mov
mov
add
jmp
pop
bound
adc
out
cld
add
lahf
adc
jl
movsl
rolb
pmaddwd
lods
loope
pop
add
sub
jle
push
sub
popl
xchg
iret
mov
cmp
mov
loopne
add
test
cmp
stos
into
push
add
push
test
sbb
addl
mov
pop
push
cmpb
add
and
pop
add
mov
je
sub
add
shlb
cmp
mov
mov
cltd
clc
sub
sbb
adc
add
adc
dec
fs
ljmp
fdivs
cwtl
lret
cmp
xor
sbb
pop
or
test
test
call
iret
gs
inc
add
out
xchg
sub
fadds
pop
shll
jmp
cmpb
add
inc
or
inc
fsub
lods
add
lock
push
iret
fsubs
jne
add
jle
enter
cs
adc
add
and
pop
add
divl
dec
out
lcall
inc
stc
inc
pop
and
adc
mov
pop
sbb
imul
cld
int
sbb
imull
cmp
jbe
fadd
ret
dec
mov
pop
or
push
sti
push
inc
adc
and
mov
sbb
loopne
sbbb
mov
sarl
inc
push
xor
inc
cwtl
call
sbb
cmp
nop
add
push
sldt
and
push
add
lock
mov
jne
gs
popl
and
sbb
lock
cli
xor
adc
sbb
daa
pusha
add
mov
jmp
push
and
arpl
add
mov
jle
testl
inc
les
aad
clc
test
jb
sbb
xchg
ret
push
mov
dec
jle
loopne
add
jmp
loope
orb
adc
mov
adc
inc
jp
jb
sub
cli
jo
push
mov
rolb
cmpl
jp
mov
add
popf
inc
and
les
inc
dec
arpl
test
stos
add
dec
adc
lock
lret
add
aam
jge
shll
imul
sub
xchg
add
mov
push
jb
mov
insl
cmpsl
push
adc
push
jb
xchg
jle
mov
mov
iret
out
adc
adc
or
mov
inc
sbb
cmc
push
rorb
fwait
push
sub
sub
add
dec
dec
cwtl
call
add
shrl
int
or
adc
xchg
xor
ljmp
loopne
add
ds
and
sbb
int3
dec
jle
dec
push
jmp
loop
xchg
inc
or
rolb
jecxz
pop
seto
mov
add
cwtl
mov
popf
xchg
sbb
push
lret
mov
cmp
add
ret
mov
and
lahf
dec
or
add
cmp
clc
lods
add
std
es
aas
jl
mov
jnp
add
int3
int
pop
les
inc
push
mov
mov
xchg
sbb
insb
add
rcll
push
xchg
int
ss
cmp
pushl
xor
cli
pop
test
lods
jns
xor
xchg
addl
xchg
js
mov
lods
push
pusha
fldl
je
mov
in
test
add
gs
popa
leave
mov
add
lock
mov
mov
cmp
shlb
sub
add
add
stos
or
rcrl
or
and
mov
in
xorl
aaa
jae
stos
repnz
pop
and
fidivs
ret
dec
inc
fnsave
addb
add
insl
mov
add
dec
nop
pop
bound
into
and
xor
test
lods
pop
add
stos
add
jno
aaa
pop
repnz
add
push
cld
and
jecxz
mov
fwait
movsl
lods
push
out
push
loope
cwtl
clc
jl
add
dec
pusha
cmpsb
int3
or
ret
mov
pavgb
push
add
sub
cmp
jg
mov
jge
xchg
rorb
pop
add
sub
add
sbb
sti
js
push
mov
dec
insb
fldenv
pop
add
jp
mov
cwtl
bound
pop
or
or
out
adc
js
mov
into
movsl
push
shl
jae
dec
sbb
dec
jo
aaa
subb
or
pop
aam
mov
cmp
repz
jl
push
dec
es
rcl
push
mov
clc
xor
sbb
pop
mov
sti
inc
mov
nop
jae
push
add
xor
or
jnp
adcb
lea
in
inc
fs
mov
cltd
mov
hlt
and
popf
adc
add
inc
sarb
adc
sbb
pop
jecxz
push
rcr
mov
mov
je
lds
in
aam
xor
push
pop
add
mov
push
ljmp
lret
pushf
cmp
jecxz
add
int
dec
add
push
addb
pop
jecxz
sub
add
pop
mov
ss
sbb
adc
or
sbb
add
inc
jno
mov
and
and
and
xor
lock
arpl
jb
nop
push
dec
inc
rolb
mov
push
add
sti
iret
sub
push
dec
xor
push
xchg
ss
pop
sbb
pop
inc
sub
pushf
or
inc
lock
add
push
push
stc
lahf
aam
push
add
lret
mov
inc
mov
jp
add
repz
mov
icebp
inc
int3
add
rcrl
pop
push
les
add
repz
in
adc
je
das
popf
js
lods
cmpsl
add
cmp
enter
push
jo
faddp
push
aam
orl
scas
and
xchg
rcll
mov
add
push
jmp
loopne
add
xor
sub
dec
cmpb
and
or
nop
sbb
jae
insl
shr
adc
std
sbb
mov
leave
loopne
in
adc
add
arpl
in
xchg
mov
add
pushf
ret
mov
and
add
arpl
sub
clc
cmp
adc
push
adc
daa
jae
in
cmp
int
or
adc
out
in
aad
xor
ljmp
lock
add
fwait
stos
mov
pop
testb
shll
mov
xor
bound
jp
add
mov
mov
push
pusha
cwtl
mov
sysenter
gs
movsb
sub
sbb
or
jbe,pt
jl
or
bnd
je
add
pusha
inc
mov
dec
add
pop
xchg
andb
test
sarb
add
mov
hlt
mov
add
fs
mov
notl
xchg
in
lret
add
icebp
arpl
adc
addr16
add
data16
xchg
popf
pop
aaa
add
lret
pusha
mov
jecxz
add
jmp
rolb
imul
pop
add
inc
insb
test
adcb
outsl
sub
push
cwtl
arpl
add
icebp
shr
das
cmp
add
inc
dec
ss
sbb
cmp
scas
cltd
xor
mov
daa
test
sbb
jecxz
mov
test
sbb
clc
scas
add
pop
push
hlt
enter
push
pushf
or
sbb
pop
mov
jl
add
addb
cmp
push
imul
and
aam
mov
sti
dec
int3
pusha
and
or
xor
imul
aaa
jno
cmpsl
push
les
xchg
in
and
mov
xlat
add
rcr
pop
sub
dec
push
cmp
xchg
mov
add
lea
sub
pop
out
mov
add
stos
ja
add
nop
dec
push
movsl
aam
and
js
pop
filds
add
aas
lahf
jecxz
stc
add
cmpsl
push
sub
pop
mov
ret
in
xor
jbe
or
int
push
movsl
add
ds
xchg
mov
push
cmp
cli
jo
and
mov
pop
push
and
js
add
or
jbe
sbb
lock
push
pop
or
clc
jne
or
add
push
movsb
fisttpl
or
add
sub
add
iret
push
es
mov
inc
push
and
add
dec
ljmp
jo
repnz
pop
adc
pop
addr16
or
add
cmp
mov
add
das
shrb
in
aam
dec
mov
pop
adc
pushf
sub
or
hlt
jge
dec
movsb
xor
xor
or
add
shll
add
inc
pop
scas
sub
cmp
out
sbb
insl
sbb
cmp
push
jo
in
jne
movsl
sbb
add
pop
sbb
add
pop
aad
add
mov
inc
push
cwtl
and
lahf
add
dec
cmp
jns
add
add
mov
ss
jns
insl
pop
js
cmp
adc
xchg
dec
sti
push
add
push
imul
aaa
andb
mov
jno
lcall
in
in
push
add
pop
pop
sbb
scas
sub
shlb
in
add
mov
loop
adc
mov
or
testl
es
lret
push
xor
out
subb
pop
mov
into
push
outsb
shlb
repnz
and
add
dec
mov
lidtl
add
inc
lcall
lods
loope
add
leave
repz
dec
cmp
loopne
enter
add
dec
sbb
inc
push
add
cmp
notb
inc
and
jns
in
add
mov
add
orl
clc
inc
fstps
movsl
push
in
test
add
cmp
cmp
add
into
bnd
xor
sub
lcall
in
pop
and
js
pop
adc
push
lods
addl
mov
repnz
inc
scas
xchg
ja
sbb
stos
push
add
mov
inc
pop
add
fidivl
fbld
jmp
add
sbb
sbb
cmpsl
pop
add
push
test
call
incb
inc
aas
cwtl
push
out
add
push
incl
add
sbb
les
iret
add
jmp
mov
les
cmp
push
mov
outsb
add
pop
push
mov
add
push
dec
sub
adc
sbb
enter
add
mov
cwtl
mov
stc
push
jae
lahf
pop
and
add
filds
adc
xchg
sub
add
push
push
inc
fdivr
sbb
inc
in
jno
dec
ds
mov
or
jg
add
repnz
pop
out
add
gs
adcl
sub
pop
dec
inc
les
add
imul
mov
add
push
lea
outsb
inc
dec
lock
add
ret
mov
inc
loop
mulb
test
fldl
mov
inc
xchg
loopne
add
adc
stos
subl
cmp
movsl
add
pop
xchg
shrb
pushf
int3
or
jns
or
addb
cmp
pushf
push
aam
sub
loopne
push
dec
es
inc
fadds
jnp
push
push
mov
add
mov
xor
add
test
xchg
adc
push
xchg
or
pop
aam
pop
sarb
lods
cmp
add
push
rorl
in
cmp
rclb
add
sbb
out
pop
dec
or
push
mov
push
inc
add
loope
xchg
inc
div
jbe
mov
sub
cltd
cmpsl
sahf
and
xor
pop
pop
xorl
mov
sub
adc
sub
aam
xchg
push
jo
mov
loopne
iret
mov
push
inc
insb
xchg
xor
outsl
push
out
xor
sbb
je
outsb
sbb
mov
lret
lods
stc
rcrl
jo
xor
xlat
push
lret
and
pop
or
xchg
in
inc
jo
or
bound
in
dec
sub
dec
stos
xor
ret
add
push
fxch
mov
push
test
sbb
pop
pusha
stos
mov
shrb
push
push
adc
add
pop
xchg
cwtl
mov
aam
stos
shll
mov
push
dec
add
mov
gs
add
sub
lods
add
add
ss
dec
jnp
arpl
cmp
dec
mov
nop
loopne
push
sub
and
xor
mov
jg
cmp
mov
repnz
lret
add
inc
xor
scas
jle
inc
leave
in
aad
add
mov
scas
jno
add
nop
pop
in
add
into
mov
pop
hlt
sub
add
sbb
push
adc
ret
add
xlat
mov
add
dec
pushf
inc
push
cld
frstor
subb
std
ds
xor
dec
pushf
jb
inc
andl
clc
jmp
jg
push
pop
and
add
xchg
dec
sbbl
dec
fcoms
mov
mov
imul
test
loop
cld
decl
add
sahf
add
jo
into
adc
add
cmpsb
mov
pop
movsb
shll
add
lods
jecxz
int
and
add
xchg
push
fs
sub
push
lret
mov
add
pop
scas
mov
in
jo
aaa
arpl
cmpsl
pop
sti
rcrb
fcoml
jmp
and
dec
das
pop
cli
fadd
test
and
mov
mov
mov
pop
shrb
add
xchg
hlt
testl
mov
scas
andl
rorb
jl
and
push
push
aad
clc
imul
divl
lock
divb
adc
add
mov
push
aaa
add
cmp
cwtl
sub
adc
pop
jp
leave
cmpsl
push
mov
test
push
xchg
ds
add
test
jge
or
jl
add
shlb
push
add
push
aaa
pop
adc
jnp
insl
nop
sbb
hlt
dec
dec
inc
mov
rclb
adc
mov
pop
in
add
rcr
mov
sub
fs
int
dec
or
mov
sbb
imul
jae
add
movsb
sahf
jmp
fnstsw
and
xchg
mov
dec
sahf
push
aaa
jo
add
ret
daa
pushl
add
push
and
in
add
add
or
dec
add
jmp
push
or
push
sbb
xor
add
push
xchg
ds
insb
lea
dec
in
aaa
imul
sub
call
mov
mov
ja
rolb
xor
xor
leave
fistpl
add
push
sbbb
adc
xchg
xor
icebp
aaa
mov
int3
jno
add
push
cld
flds
stos
add
xor
mov
pop
xlat
jmp
subl
jae
push
xchg
push
xor
sbb
sub
push
ljmp
lods
pop
xchg
sbb
pop
xor
les
sbb
add
pop
push
rorl
into
add
xor
sub
push
sbb
rcr
cmpsl
aaa
or
lea
jecxz
call
push
dec
add
gs
pop
rolb
out
popa
pop
mov
sbbl
or
out
add
push
cmp
mov
pop
fnstcw
add
loopne
push
or
jae
sarb
add
dec
loope
add
jno
sbb
xchg
fdivrl
push
test
sub
shrb
cs
mov
add
or
adcl
fistl
inc
enter
sbb
jb
insl
push
or
mov
cmovge
ds
xor
roll
pop
les
push
jle
inc
mov
jb
clc
ret
jbe
movsb
xor
cmp
repz
add
or
in
add
mov
loopne
pop
stc
add
dec
mov
imul
mov
jle
jb
cmp
ja
adc
adc
pushf
addb
movsb
cmp
test
aam
mov
lret
jnp
out
inc
pop
clc
divb
ret
cmpsl
add
fldenv
add
xchg
inc
cltd
dec
jne
daa
cld
mov
in
xchg
fstl
inc
notb
fwait
cwtl
fs
rclb
push
out
adc
xchg
repz
cmc
add
pop
sbb
push
push
push
jge
and
pop
add
in
xchg
ja
in
imul
decb
shl
int3
sbb
add
addb
imul
cli
xor
jg
xchg
test
andb
nop
and
add
inc
jmp
or
jg
xor
ja
mov
out
popf
aas
xor
or
mov
jg
stos
add
jl
mov
dec
scas
lock
xchg
orl
loop
lahf
mov
in
int3
pop
sub
cmc
xchg
inc
pop
push
call
push
push
popf
push
or
int
popa
xchg
clc
fbstp
lods
mov
inc
cmp
xor
in
push
add
jl
cmp
leave
dec
dec
pop
je
mov
out
push
and
jnp
jle
inc
and
mov
mov
add
aad
test
enter
and
cmpsb
cld
out
cwtl
lahf
add
push
pop
sub
call
sti
sbbl
insb
cmp
in
pop
add
sub
testl
mov
cwtl
mov
xor
clc
rcrb
movsb
out
xor
add
mov
sbb
mov
dec
add
fcomps
or
jne
add
dec
jnp
xor
bound
loop
test
xchg
pop
adc
or
leave
cltd
jnp
and
out
aas
dec
insb
mov
int
jnp
cmp
daa
testl
and
lock
pop
sub
pushf
daa
sub
and
clc
cmp
ljmp
mov
insl
rcrb
add
xor
inc
stos
rorb
pop
roll
inc
dec
aam
and
loopne
push
add
cli
fbstp
add
dec
mov
mov
insb
add
negb
sub
xor
mov
adc
jb
cwtl
fsts
in
add
cmp
sti
mov
cltd
std
xchg
in
scas
shlb
subb
mov
out
or
push
in
lds
in
jl
or
cwtl
lock
ja
jge
addr16
leave
mov
rorb
jno
add
in
icebp
mov
loop
or
nop
mov
jl
jbe
inc
mov
outsl
cmp
dec
rcll
inc
shl
popa
adc
push
xchg
dec
cmc
dec
and
mov
or
scas
add
in
adc
sbb
pop
test
lds
inc
in
adcl
lock
pop
add
repnz
mov
mov
jo
scas
aaa
scas
add
repnz
mov
xchg
add
nop
inc
xchg
mov
mov
fsubrs
mov
sti
jl
pusha
fucomp
test
rolb
out
lahf
push
sub
sbb
movsl
dec
xor
push
dec
aam
add
pop
repz
lret
add
add
jne
subb
push
cmpsl
aam
dec
out
add
imul
jo
aad
pushf
add
in
fisttpl
mov
in
subb
fildll
xchg
push
jbe
push
out
or
inc
add
roll
mov
mov
in
test
cmp
push
icebp
cmpsb
pop
clc
pop
stos
mov
fs
add
stos
mov
scas
add
sub
add
stos
mov
in
pop
xor
adc
push
mov
loope
sub
mov
pop
popa
or
loop
scas
test
push
mov
or
test
hlt
push
inc
and
rolb
inc
xchg
push
jp
adc
push
aam
xchg
aad
scas
add
nop
out
dec
add
outsl
test
test
data16
sub
out
ljmp
add
testb
in
sbb
nop
add
add
add
push
pop
jge
nop
mov
stos
div
xor
adc
cmp
dec
or
sbb
xor
fcoml
or
or
dec
int
cmp
xchg
and
and
sbb
push
shl
add
sbb
mov
mov
mov
outsl
daa
add
ds
adc
add
pop
in
fwait
fs
or
and
push
jecxz
add
pop
out
rcrb
push
iret
xorl
xor
je
add
fisttpll
int3
or
and
test
mov
dec
test
dec
lahf
mov
nop
xorl
cltd
repz
pushf
int3
add
cmp
fs
cli
xor
addl
int3
cmc
dec
jbe
sti
pop
jno
add
cmpsl
add
add
sti
jge
sbb
dec
mov
pop
movl
pop
pop
test
lock
rcrl
fiadds
xchg
lret
jne
lcall
sbb
add
out
pop
insb
inc
pop
lock
jp
jg
or
pop
jl
ret
in
mov
roll
or
enter
sbbb
aad
add
punpcklwd
and
cmpl
jp
add
pop
and
or
add
jmp
or
mov
mov
add
or
cmp
bound
mov
jb
jae
dec
add
test
inc
xor
pop
push
int3
jl
adc
or
add
mov
lea
insb
testb
pop
pop
adc
nop
mov
inc
mov
xchg
push
lret
pop
cmc
inc
and
in
adc
mov
lods
popa
and
or
sub
aad
and
jbe
add
ret
pop
mov
lods
ljmp
setp
xlat
ror
and
push
add
and
rorb
insb
sub
ljmp
test
ret
adc
xchg
xlat
mov
mov
push
lock
sarl
or
pop
test
mov
nop
sub
push
jge
mov
add
mov
nop
or
jle
shlb
int3
inc
adc
orb
dec
jo
bound
xor
imul
iret
sbb
in
inc
loopne
adc
test
add
mov
adcb
push
or
lret
push
jno
sahf
dec
addb
jge
divl
push
and
add
push
inc
sti
add
and
mov
adc
incl
loopne
xor
add
in
push
dec
mov
mov
and
ror
inc
je
mov
mov
inc
scas
test
cwtl
pop
lods
push
jmp
xchg
and
insl
add
xorb
xor
fidivrs
pushf
ret
fsubrl
cli
push
add
jmp
ss
mov
subb
fs
mov
and
test
mov
jg
push
add
add
xlat
sti
sub
xor
pop
lock
xchg
push
cmp
sti
mov
js
cmp
xor
repz
push
lock
lret
pusha
iret
xor
notl
lahf
cmp
sbb
fmuls
aas
sbb
xchg
pop
inc
push
add
fdivrs
xor
sub
out
mov
repnz
mov
or
and
dec
loopne
rclb
sti
clc
push
inc
cmp
movsb
cli
jge
ss
mov
lods
bound
in
add
cs
sbb
lods
inc
test
iret
pop
xchg
add
les
mov
in
inc
mov
insl
jno
or
out
push
add
xlat
push
les
mov
dec
repnz
add
xor
testb
les
lcallw
outsb
ret
cmc
ja
fstps
rolb
push
push
mov
hlt
ds
push
bound
loope
push
add
cmp
push
int
jecxz
jp
seta
cwtl
mov
xor
pusha
inc
arpl
pusha
outsl
xor
cld
jne
and
imul
pop
push
dec
jo
cmp
xchg
add
fistpll
adc
inc
xlat
jecxz
add
inc
ljmp
cmp
or
mov
lcall
jg
push
lock
push
js
or
sbb
mov
xor
mov
out
sbb
cmp
add
xor
leave
ret
jno
cmpb
sub
cld
imulb
and
or
mov
add
mov
les
call
mov
add
mov
adc
pop
or
cmp
dec
movsl
xor
test
cmc
inc
mov
pop
aad
or
mov
rcrb
mov
jle
loop
push
add
test
ret
lods
mov
int
add
adc
xchg
sub
stos
sub
xlat
enter
mov
dec
call
outsb
xchg
or
fsubr
jg
mov
lods
mov
add
or
add
or
gs
cmpsb
add
arpl
jle
xchg
test
pop
iret
or
movsb
cld
pusha
pop
or
push
mov
mov
add
jl
mov
xor
jnp
add
loope
pusha
xchg
mov
lods
in
inc
xlat
test
adc
pop
pop
add
leave
mull
add
repnz
add
jl
or
sbb
in
jae
dec
jg
in
add
adc
and
sti
pop
sbb
js
mov
outsl
push
or
dec
and
dec
pop
mov
je
add
xchg
xor
popf
out
mov
imul
incl
outsl
cwtl
mov
les
mov
xor
mov
add
xchg
adc
jbe
add
cmp
lret
add
inc
sub
xor
add
jp
push
jnp
adc
xor
fadd
sub
inc
add
xor
stc
out
hlt
sub
sbb
dec
outsl
imul
iret
adcb
dec
add
mov
call
mov
rcrb
inc
aam
and
int3
mov
add
sbb
cmp
nop
dec
cltd
adc
jle
mov
mov
pop
sbb
jbe
lods
and
neg
pusha
dec
sub
jne
dec
sub
push
inc
add
int
jl
testb
xor
pop
jns
rcll
pop
loopne
adc
mov
sbb
ds
inc
add
jg
cli
test
mov
push
add
and
ja
add
or
dec
verr
push
add
stc
mov
mov
and
in
rolb
repz
in
jl
mov
lock
out
inc
or
add
inc
cmpb
sub
inc
lcall
fmull
andb
hlt
aam
and
and
xor
dec
pushf
xor
mov
add
and
lahf
lock
push
ror
push
andb
mov
mov
or
insb
jnp
add
dec
inc
jae
rclb
xchg
xchg
loopne
adc
test
cmp
add
jns
ficomps
sub
add
cmp
lea
and
and
mov
add
push
pop
push
xchg
in
loopne
arpl
push
adc
cmpsb
ret
scas
push
pop
push
pop
dec
add
cmp
call
cmpsb
inc
pop
jge
adc
push
add
mov
outsb
pop
in
sbbb
jbe
inc
lea
add
mov
mov
add
inc
and
fmul
mov
stos
adcb
imul
jp
jno
repz
add
fwait
call
xor
pop
or
jae
add
mov
or
shl
std
fldenv
ficompl
add
je
xor
sti
and
notl
xchg
pop
mov
xchg
ss
addb
cltd
adc
push
sub
adc
push
sub
lret
rolb
out
sub
mov
into
call
jb
add
inc
addr16
jmp
jbe
mov
test
cmpl
clc
pop
fcoml
icebp
bnd
cmp
orb
mov
dec
fistl
adc
imul
cwtl
daa
cld
lahf
into
loop
cmp
push
mov
add
add
and
cmp
pop
sub
jo
out
in
scas
dec
dec
lcall
addl
or
mov
pop
sti
mov
adcl
test
shrl
add
nop
in
xorb
int
add
or
inc
xor
outsb
adc
cmp
push
subl
popf
add
aad
or
cltd
fiadds
pop
sub
mov
cli
dec
fndisi(8087
dec
out
mov
cmp
add
dec
int
sbb
pop
add
aam
lock
cmpl
shll
sbb
add
loope
std
repz
adc
out
or
add
loop
sbb
add
inc
xlat
jbe
xchg
lret
fstl
adc
cld
push
inc
push
call
add
mov
adc
pop
sub
or
push
mov
ss
add
cmpl
mov
or
outsb
lcall
aad
loop
call
test
imul
and
or
add
frstor
test
mov
add
int3
fisttpll
cmp
pushf
into
icebp
inc
shr
sti
add
cs
push
enter
push
jl
add
xchg
fdivrs
das
xchg
loope
es
xchg
pop
add
mov
push
mov
push
test
enter
dec
jns
ds
pop
je
add
mov
and
enter
adc
add
mov
push
int
and
inc
xchg
add
push
cltd
mov
movsb
mov
outsb
add
and
scas
fisttpl
fbstp
and
cmpsb
lods
or
adc
ja
sbb
add
cmp
das
pop
add
mov
jae
sbb
data16
push
or
pop
sub
inc
mov
hlt
out
mov
sti
add
push
dec
out
mov
jmp
xchg
out
push
cli
or
dec
icebp
mov
add
cmp
lock
add
notb
dec
mov
mov
and
push
sub
pushf
add
mov
popa
sahf
push
cld
ja
aam
sbb
cli
xchg
adc
fwait
sbb
inc
xor
push
cmc
or
push
ficompl
adc
test
mov
es
popa
jbe
inc
inc
mov
inc
add
xor
in
add
xchg
sahf
fisubs
mov
pop
inc
into
lret
data16
loopne
enter
add
stos
xchg
add
call
jecxz
mov
sub
aas
inc
mov
ljmp
add
ret
push
aam
cwtl
out
mov
notb
cmpsl
pop
add
sti
lcall
ror
inc
mov
add
xor
mov
add
cwtl
and
adc
sub
cmp
mov
sub
or
mov
rolb
arpl
rcll
adc
sbb
outsl
fdivrp
mov
fsubr
add
clc
pusha
xchg
aam
jbe
add
bound
add
add
imul
jle
add
pushf
adc
nop
inc
or
insb
popa
cmp
dec
push
jmp
cld
lods
push
pop
add
sbb
add
and
fisubl
add
lcall
cmpb
shrb
add
pop
cwtl
sbb
ss
out
jge
xor
iret
mov
add
pop
and
xor
dec
sahf
lret
in
add
mov
mov
inc
sbb
pop
sub
adc
lcall
ret
bound
jbe
add
add
data16
addl
test
cmp
jp
lret
hlt
add
orb
rcrb
fildll
jnp
fisubs
inc
sbb
inc
cmp
test
jecxz
les
lods
bound
add
loope
push
or
ret
into
xchg
push
cld
testl
xchg
popa
icebp
mov
add
jns
xor
add
adc
mov
repz
sub
repnz
lahf
inc
sub
mov
je
bswap
and
or
mov
cmp
or
rorl
bound
loop
or
lock
jo
addl
add
sub
inc
mov
int
test
jo
mov
hlt
xor
or
sti
loopne
mov
arpl
pop
xorb
push
scas
inc
push
inc
cmp
test
out
add
jp
je
jae
pushf
mov
and
dec
mov
add
out
shrb
out
cmp
add
idivb
fistpll
sub
imul
dec
icebp
xorb
hlt
push
stc
rolb
xchg
cmp
stos
pop
lahf
and
add
pop
in
sbb
mov
rclb
push
es
mov
jne
jno
add
lcall
xchg
add
inc
aaa
jmp
dec
and
rorb
cmp
inc
out
call
pop
push
shrb
ds
jne
sahf
mov
cli
int
or
mov
outsl
fdiv
lock
add
pop
scas
mov
inc
out
jmp
mov
sub
xchg
xor
pushf
cmp
mov
xchg
push
mov
shl
mov
lock
mov
add
stos
pop
cmp
js
cwtl
xor
mov
pop
pop
test
or
hlt
jo
cs
jo
ds
cmpsb
fcoms
addb
outsl
loopne
add
dec
clc
js
clc
add
mov
cmp
rolb
mov
push
xor
insl
add
xor
add
fs
inc
shrl
in
add
mov
test
shrb
call
add
and
push
mov
popf
sti
inc
adc
mov
out
lods
xchg
js
movsb
test
dec
dec
es
sub
and
jne
pop
sub
jl
add
xchg
orb
push
xchg
add
xchg
push
insb
mov
or
dec
mov
xor
mov
ret
add
into
imul
das
xchg
mov
push
jno
pusha
xor
jge
data16
pusha
lods
push
jl
xchg
in
add
andl
into
mov
rcrl
rorb
inc
es
imul
and
hlt
xchg
out
mov
adcb
pop
call
loopne
or
leave
push
mov
sti
add
add
mov
mov
idivb
and
sar
pusha
fiadds
cmp
pop
push
incl
add
scas
jbe
js
add
or
rolb
xor
pushl
cmc
add
int3
push
sub
test
lret
add
into
jg
jp
lds
hlt
mov
je
jb
popf
sub
das
pop
mov
loope
inc
sarb
push
clc
popf
add
das
or
xchg
sbbl
add
data16
fisubrl
mov
cltd
dec
or
call
stc
sti
add
mov
dec
inc
lods
enter
cwtl
or
fisttpl
xchg
outsb
imul
ds
in
pushf
mov
mov
push
add
out
cmpsb
push
add
pop
jle
mov
sbb
decb
xchg
ret
pop
add
jbe
mov
add
and
jecxz
lds
hlt
or
test
lcall
ja
or
mov
add
fs
xor
rorl
xor
mov
push
mov
rcr
leave
jns
imul
scas
xchg
movsb
pop
daa
sbb
shrb
inc
mov
popf
test
decb
rcrb
ret
sahf
xchg
aaa
imul
push
pop
add
into
adc
rdtsc
sbb
inc
mov
push
mov
repnz
mov
jae
aas
dec
gs
mov
cmpsl
pop
inc
out
sub
nop
and
xlat
adc
sbb
subl
lahf
cmp
cmp
jbe
mov
mov
sti
adc
sbb
add
ficoml
sbbl
je
sbbb
sbb
sbb
xor
scas
inc
sysret
jne
mov
mov
sub
sub
jo
and
outsl
inc
test
add
clc
out
cld
sbbl
sbb
or
test
mov
mov
insl
add
aad
sub
std
pop
cwtl
mov
sub
insl
jno
add
cmpsb
stos
dec
outsb
loop
bound
sbb
dec
insb
orb
inc
aaa
xor
sarb
out
add
notl
cmp
rcrb
push
mov
cmp
mov
std
mov
or
pop
inc
out
add
push
fldcw
sub
repnz
roll
mull
pop
in
cmp
movsb
adc
ljmp
cs
mov
lods
add
mov
sub
adc
pop
adc
push
pushf
movsl
mov
or
jp
add
adc
inc
test
hlt
jl
mov
fs
cmp
sub
scas
inc
sbb
mov
outsb
inc
add
mov
jnp
lock
jecxz
and
pushf
mov
clc
mov
cwtl
xchg
imul
testl
lret
or
int3
cmpl
cmpsb
xchg
rol
je
cmc
add
cwtl
push
jbe
add
mov
mov
push
out
les
in
dec
sub
pop
and
add
inc
lea
push
mov
pop
mov
mov
sbb
outsb
dec
test
lret
fwait
cs
mov
clc
cmp
add
inc
mov
add
stos
and
dec
jl
mov
push
or
or
xchg
cmpb
mov
aad
idiv
xor
add
add
nop
pop
adc
add
mov
adc
mov
cltd
inc
xchg
ret
jl
stc
test
pop
sub
mov
pushl
data16
mov
cmc
pop
or
fistpll
mov
xchg
orb
xchg
adc
or
bound
mov
adc
inc
shlb
lss
xchg
cwtl
cmp
jnp
push
loop
push
jg
and
mov
in
cld
out
jle
lret
pop
jbe
push
scas
loopne
aas
sarl
xchg
test
dec
cmp
int
int3
inc
pusha
and
sub
lods
sbb
mov
inc
jnp
jae
or
mov
sarb
sbbb
push
pop
popf
insl
inc
pop
jge
ds
imul
divb
loopne
loopne
add
lret
mov
lcall
fidivs
pop
lahf
add
clc
push
lods
push
add
shrb
sar
psrlq
xor
popa
adc
add
mov
aaa
xchg
stos
xchg
cmp
lret
pop
jne
rcl
in
mov
sbb
dec
aad
push
push
cltd
repnz
sti
sub
dec
pop
loope
jmp
push
adc
int
or
mov
arpl
cmc
mov
loopne
dec
or
push
xchg
lock
add
cmpsl
mov
insb
add
xor
div
or
faddl
mov
sub
add
shlb
push
add
mov
les
popa
pop
loopne
adc
mov
test
or
add
jnp
inc
ss
aas
add
adc
and
add
imul
add
rcll
add
notb
mov
jbe
push
jmp
xchg
scas
call
orl
mov
jns
pusha
leave
out
mov
add
xchg
dec
xchg
adc
jle
sti
cmp
mov
lret
pop
xlat
mov
lds
cmp
jg
lods
js
loope
sub
and
or
loopne
mov
pop
stos
dec
add
sub
mov
int
mov
loope
and
push
js
pop
fwait
arpl
insl
add
fisttpll
mov
roll
icebp
daa
inc
popa
loopne
mov
lods
idiv
je
mov
ret
test
and
lock
sbb
push
add
cmp
push
lods
pop
fmul
adc
bound
add
scas
das
xchg
or
push
jbe
dec
inc
add
insb
subb
call
and
adc
mov
jo
data16
cltd
mov
add
jo
push
pusha
lret
inc
add
clc
add
mov
mov
repz
sub
or
mov
aad
pop
mov
jmp
shr
imul
add
loope
and
xchg
push
add
imul
or
pop
jno
or
nop
and
clc
cmpsl
add
aam
js
push
adc
insl
cli
xor
jo
repz
push
or
imul
ret
mov
aas
add
mov
enter
add
or
and
nop
jmp
sbb
lahf
add
test
das
add
push
ds
ljmp
jnp
add
sub
cld
cmp
lret
inc
lock
or
cs
pop
stos
add
adc
js
inc
jbe
mov
outsb
or
add
or
jnp
or
mov
cmpb
xlat
ret
pop
mov
lret
xor
inc
rcr
in
xor
dec
lahf
add
jecxz
inc
add
fcoms
add
ret
push
push
insb
mov
sbb
adc
add
scas
push
cmp
inc
add
clc
ss
add
add
adc
sti
test
add
aaa
push
dec
daa
jle
add
cmpsb
inc
imul
cmp
push
adc
add
stc
sbb
stos
addb
fneni(8087
add
mov
fs
pop
repnz
add
sub
das
jb
add
or
pop
mov
jmp
mov
cmpsl
mov
push
add
test
incl
sbb
das
add
add
cltd
push
fwait
push
xlat
mov
mov
leave
mov
shrl
idiv
inc
addr16
mov
fisubrs
scas
add
enter
mov
push
add
jnp
inc
bound
jmp
adc
pop
int3
inc
and
pop
xchg
sti
sbb
inc
adc
pop
dec
add
enter
ljmp
cli
jg
and
cmp
add
dec
sbb
insb
addl
ret
mov
add
mov
sti
popl
mov
push
jp
push
in
push
mov
dec
xor
add
mov
aam
xchg
add
dec
addl
ss
jae
xchg
sbb
fdivrl
xor
sarb
sub
add
or
movl
push
sbb
mov
mov
mov
testb
pop
fsubrl
sarb
outsb
lods
push
loop
sbb
stos
sub
outsl
popf
add
imul
popf
iret
shlb
adc
cmpsb
rclb
pusha
mov
lcall
mov
pop
gs
add
jle
push
jmp
aad
adc
hlt
pop
add
jbe
ja
nopl
adc
or
add
fadds
pushf
add
inc
aam
and
add
push
cmpsl
inc
xor
push
dec
xchg
sbb
adcb
mov
push
xchg
fstpl
add
dec
repz
test
fwait
out
dec
lret
cmp
add
dec
lcall
es
or
cmp
mov
pop
and
sahf
cmp
mov
xor
or
sti
andb
popf
mov
das
jmp
aas
or
dec
add
test
add
inc
fisttpll
add
ljmp
fwait
out
testb
fbstp
jae
add
sbb
xchg
in
pop
inc
push
and
incl
add
xchg
or
jmp
push
xor
subb
sub
or
xchg
shld
add
mov
adc
adcl
sub
dec
cmp
xchg
pop
xor
push
mov
aad
fwait
add
mov
dec
clc
push
ds
add
ficoml
jb
movsl
or
ret
sti
aad
cs
scas
lahf
ds
add
sbb
xchg
lock
out
or
gs
les
cld
add
jle
push
loope
fstpt
add
jecxz
mov
add
mov
mov
add
and
aad
adc
fdivl
add
xchg
shlb
dec
or
scas
add
xchg
pop
and
or
sahf
fwait
loopne
and
jo
or
adc
ja
jp
mov
orl
add
push
xchg
jl
psubq
inc
inc
out
add
loopne
mov
pop
sbb
fs
lock
imul
mov
adc
inc
add
sbb
jg
mov
add
jecxz
fnstenv
add
loopne
por
dec
mov
adc
jmp
ds
sbb
inc
into
jl
mov
adc
add
sbb
adc
cwtl
insb
push
mov
xor
mov
loope
inc
dec
sbb
mov
adc
cld
addr16
movlps
rol
popf
les
ficompl
lds
jp
js
adc
mov
and
int3
and
shrb
pop
add
cld
addb
lods
imul
add
xchg
gs
xchg
add
mov
push
mov
cmp
and
popa
or
pop
xchg
xchg
cwtl
jle
pop
test
or
and
sarl
dec
add
rcr
adc
xchg
cmpl
xor
mov
scas
or
mov
cli
in
jp
add
int
mov
cmpsb
arpl
jmp
int3
lret
filds
ss
add
cmp
pop
push
in
movsl
out
pushf
pop
adc
je
sar
mov
sbb
add
inc
pop
pop
roll
add
sub
xorb
cmp
mov
lods
loop
inc
push
sbb
dec
lock
add
jo
and
adc
push
lret
jle
iret
sar
or
clc
xor
enter
idivl
and
pop
jnp
push
jnp
call
jle
repnz
add
mov
mov
add
xor
add
ja
lods
jp
inc
into
adc
adcl
fildl
ljmp
or
xor
xchg
add
les
sbb
xchg
add
xor
and
fildl
push
dec
pop
or
test
and
xchg
sbb
and
sbb
or
mov
adc
and
adc
dec
es
cmp
xchg
sbb
call
rcrb
jle
push
fldt
jecxz
loopne
mov
fnstsw
pop
jbe
hlt
lea
outsb
in
rolb
push
xor
jo
xchg
add
jnp
add
sarl
in
sub
inc
sbb
sarb
cli
rorb
sbb
cmpl
jmp
test
add
shll
xor
sbb
adc
js
pop
cmp
sbb
mov
movsl
ja
dec
in
mov
xchg
push
lds
add
jae
mov
and
out
mov
or
cmp
sub
sbb
ds
rcl
test
pop
cmp
and
pop
adcb
or
sbb
aaa
push
pop
xchg
pop
sbb
push
addb
mov
lods
lret
loope
add
mov
test
add
sbb
add
jb
sub
pop
sti
std
je
leave
dec
or
or
lds
mov
fs
sahf
pop
jg
dec
push
fdivr
add
cmp
fistps
add
movsl
mov
pop
loopne
add
dec
sbb
mov
int
pop
add
mov
push
mov
pop
add
sbb
adc
add
or
sub
jb
add
pushf
popf
sbb
add
and
dec
mov
ss
daa
aad
add
int3
dec
outsl
jne
inc
add
sbb
out
mov
ror
aas
xchg
ss
jnp
lret
add
faddl
popfw
sbb
orl
inc
or
mov
gs
daa
in
adc
inc
pusha
add
jmp
mov
sub
inc
jg
das
or
fnstenv
in
cmc
add
jno
and
push
or
mov
xlat
mov
mov
test
nop
sub
movsl
mull
and
adc
aaa
in
pop
shl
dec
inc
mov
xor
pop
add
movsl
mov
add
mov
inc
mov
xchg
mov
movsb
montmul
cmpsb
add
xchg
inc
adc
sbb
in
ds
add
aas
inc
sti
jge
add
jle
pop
leave
cmp
and
fistpll
mov
dec
dec
jmp
lods
pop
xchg
mov
into
mov
pop
out
xchg
dec
lock
jp
cmp
cs
xchg
add
pushf
jbe
inc
sti
ss
and
push
mov
jne
shrl
sub
or
dec
out
les
lea
cmp
fdecstp
adc
aad
pop
add
adc
jp
mov
mov
test
jno
ret
xor
jo
subb
or
stos
imul
jmp
jne
roll
mov
aam
mov
cli
jns
mov
addb
add
pop
stos
cmp
add
push
fdivr
mov
add
sub
xor
jl
nop
rolb
sbb
es
xchg
mov
movsb
add
adc
jle
mov
lods
out
add
leave
lods
mov
add
mov
and
xlat
cld
cmpsl
mov
cmp
xor
and
and
add
fisubl
js
or
ror
test
les
mull
or
clc
push
xor
dec
cmc
xchg
mov
test
pop
hlt
repnz
gs
sub
sbb
rorb
add
cmp
push
lods
jg
sbb
xor
outsl
je
mov
mov
mov
scas
xor
repz
add
pop
sub
or
in
andb
test
inc
pusha
push
cmp
adcl
pop
fdivrl
lcall
mov
scas
add
xchg
orb
jns
in
add
std
mov
sbbl
xor
movl
andb
popa
lock
add
dec
sti
cmc
fwait
add
nop
js
loopne
add
movsl
push
xchg
jmp
push
fiaddl
mov
sbb
dec
test
fdivr
je
add
dec
in
sbb
sbb
les
pop
inc
ficoms
enter
test
add
xchg
daa
mov
add
mov
add
sahf
in
scas
cltd
push
dec
and
add
ds
pop
outsb
pop
mov
arpl
mov
cmp
adc
shlb
add
pop
mov
inc
mov
jecxz
jae
mov
into
or
sub
mov
cmp
std
test
add
loope
imul
push
pop
mov
loopne
add
cld
jae
std
xor
lock
out
mov
add
push
push
fs
sbb
inc
jp
inc
cmp
add
imul
lea
clc
int3
not
inc
orl
mov
lahf
add
aaa
fisubl
loop
jne
psubsb
or
jge
lahf
lock
rolb
js
inc
andb
or
and
sti
call
add
mov
dec
ret
dec
mov
add
adc
pop
cmc
add
adc
jae
in
sbb
je
or
add
sub
nop
jge
mov
out
add
add
js
cmp
in
add
outsl
xchg
and
les
pop
or
les
and
inc
mov
and
stc
adc
lds
sbb
mov
cmc
loope
aad
add
in
into
push
sbb
out
pop
pop
das
adc
fdivrl
add
mov
pop
aaa
xchg
movsb
in
lcall
jae
pop
add
in
insb
addr16
sbb
add
sbb
stos
cmpsb
fldl
lahf
aas
mov
xchg
shll
mov
add
sbb
inc
adc
addr16
in
orb
jno
repz
sub
add
push
xor
test
mov
call
xor
push
push
dec
fcoml
nop
add
inc
add
mov
adc
aaa
test
add
inc
add
add
add
clc
adc
pop
repnz
fbld
out
stos
add
loope
or
pop
stc
cmp
xor
fmuls
push
adc
adc
pop
mov
arpl
add
cmp
sub
add
and
pop
movsl
push
stc
xchg
jno
add
mov
out
inc
xchg
xchg
adc
cmp
loop
std
imulb
add
xchg
inc
lcall
nop
add
cmp
out
daa
jbe
ljmp
out
pop
leave
ret
and
xlat
and
add
jg
mov
shrl
outsb
and
out
outsb
push
xchg
add
dec
xchg
rorl
into
ret
inc
addb
mov
push
pop
mov
dec
lahf
sbb
popa
aaa
sbb
ror
xchg
rcrb
add
mov
popf
sub
or
outsl
push
clc
sbb
sub
je
add
sbb
jmp
stos
adc
out
roll
ret
mov
or
push
inc
or
stos
out
pop
pop
and
push
movsl
mov
push
xchg
pop
adc
decb
add
stc
in
ss
lea
sti
mov
jns
or
jmp
outsl
mov
xor
mov
sub
jge
cli
imul
nop
pusha
add
cmp
push
in
lea
pop
lcall
push
xor
xor
lock
xor
adc
shufps
add
imul
arpl
pop
mov
push
sub
add
mov
data16
arpl
inc
or
jp
mov
mov
lock
add
stos
mov
add
ljmp
add
xor
in
outsb
add
adc
nop
enter
add
jl
fbld
sar
pusha
enter
clc
jge
push
int3
mov
xor
mov
dec
inc
xor
xchg
popf
and
add
loopne
xlat
ja
xor
out
loopne
add
adc
inc
adc
out
in
sbb
clc
mov
add
push
test
jmp
cmp
mov
inc
cmp
cld
jbe
mov
mov
test
or
mov
mov
jp
ja
push
cs
xor
ss
fsub
fiadds
mov
sub
jle
add
ja
xor
pop
inc
mov
jl
add
mov
mov
add
fwait
cmc
loop
push
add
lods
pop
xlat
mov
icebp
jno
xor
sbb
adc
add
push
stc
inc
add
outsb
call
imul
inc
loop
jb
adc
out
add
pop
insb
repz
push
clc
fcoml
xor
push
jg
lsl
inc
out
insl
scas
add
and
or
clc
inc
call
dec
add
sub
jne
loopne
jo
nop
pop
cmova
mov
icebp
add
xor
pop
jle
xchg
mov
js
or
add
stc
dec
pusha
push
lock
test
inc
pop
and
nop
add
enter
fs
stos
xlat
loop
xor
add
adc
xor
pop
rcrb
pop
sbb
adc
dec
mov
inc
xchg
or
int3
jp
je
pop
mov
fs
inc
mov
pusha
add
hlt
sub
pop
fildl
js
jmp
mov
jno
addb
cs
cmp
add
cmpsb
gs
xchg
lods
push
sub
push
xchg
adc
add
and
pop
add
mov
pop
sbb
fisttpll
mov
sub
ss
jnp
roll
lret
pop
add
loop
les
rorl
insb
dec
inc
push
add
addl
incb
aad
in
std
int
push
xchg
sar
test
and
aaa
sub
cs
inc
and
cld
enter
mov
arpl
mov
pop
sbb
subl
and
je
jnp
ja
cmova
pusha
xchg
dec
int3
push
addl
add
add
mov
mov
lahf
mov
aad
dec
xchg
pop
push
push
pop
cmc
or
andl
or
sbb
xor
and
sbb
cmpsb
add
lds
lock
xchg
sub
jmp
jne
jmp
adc
push
sub
cmpsl
jb
lahf
rolb
nop
clc
or
push
das
push
push
aaa
loopne
mov
icebp
dec
add
pop
cmpsb
mov
jbe
sub
clc
mov
scas
adc
adc
int
test
add
bound
test
ret
dec
cmp
xor
add
cli
lods
adc
cmc
aam
mov
dec
mov
movsb
xchg
subb
test
adc
insb
arpl
and
cmpb
mov
jl
test
and
loopne
fs
aad
sub
les
cmp
pop
jne
add
pop
mov
xor
inc
mov
call
cmp
or
cmp
push
popaw
loop
adc
xor
int
pushf
inc
cs
mov
xor
std
push
repnz
cmc
pusha
lock
es
mov
inc
pop
xor
mov
ss
icebp
jnp
mov
dec
imul
cwtl
xchg
sbb
adc
and
insb
sbb
ljmp
add
shrb
aas
roll
push
in
pushf
jge
cltd
cmp
in
int3
lods
mov
arpl
dec
inc
test
dec
push
or
adc
lods
mov
mov
xor
pop
mov
jb
sbb
xchg
out
jg
cmp
or
movsb
ret
hlt
nop
loopne
or
cmpsb
addb
test
dec
dec
out
mov
add
lock
movsl
aad
jl
adc
fmuls
gs
dec
pop
lds
sub
stc
out
insb
xor
xor
loopne
shlb
pusha
push
dec
add
pushf
xchg
mov
iret
cmp
add
shrl
call
add
mov
add
add
dec
mov
mov
fsubs
add
adc
adc
push
daa
mov
jmp
xchg
add
push
imul
mov
mov
jb
add
xchg
push
push
and
ljmp
push
out
xor
inc
inc
popa
push
push
mov
push
adc
add
xor
lahf
and
or
sub
mov
fildl
sbb
mov
gs
or
and
sbb
bound
add
xchg
hlt
ljmp
add
data16
fdivs
sub
add
jmp
add
iret
sbb
mov
lods
adc
cmp
sti
dec
icebp
add
xor
xchg
add
or
cmpsl
sbb
shl
push
pop
push
pop
jle
push
hlt
notb
cmp
imul
mov
mov
or
aaa
xchg
bound
pop
lret
mov
xchg
xlat
sarl
insb
sbbb
sbb
pop
cmc
orb
add
add
sub
syscall
push
jg
sub
shlb
push
or
inc
or
add
aaa
sub
sub
lret
or
add
rorb
mov
hlt
pop
negl
adc
test
push
sub
ja
and
cmp
add
xchg
call
xor
mov
fimull
addb
ret
cli
sub
mov
jne
add
leave
mov
xor
jmp
popf
nop
loopne
cmp
adc
xchg
aaa
jne
enter
add
or
outsb
add
fimull
inc
push
push
add
push
mov
jecxz,pt
xorb
lret
cmp
cwtl
adc
es
and
aam
add
add
xor
add
pop
inc
gs
inc
pop
loopne
lock
jecxz
adc
sub
pop
sbb
jp
scas
js
addl
xchg
mov
outsl
lret
loopne
inc
mov
ucomiss
mov
pop
sbb
mov
fcompl
cmp
sarb
add
movsl
xlat
arpl
popf
test
aad
add
cltd
mov
lock
pop
and
xchg
xchg
and
mov
mov
repnz
inc
pop
jo
ja
mov
movsb
lahf
outsl
and
push
sbb
xor
pusha
xchg
outsb
jns
movsb
xor
out
cmp
cli
shr
fcomps
int
in
cmpsl
sub
xor
cmp
mov
jle
in
popa
enter
dec
or
ss
add
js
sbb
mov
push
lret
pop
add
jno
add
std
add
cltd
int3
aam
sub
xor
jbe
add
outsl
cmp
or
lods
pusha
push
jnp
add
sbb
cmp
add
mov
add
andl
test
daa
mov
rorb
dec
mov
xor
add
mov
test
imul
sub
mov
mov
xchg
sti
jl
add
adc
in
push
or
enter
fnsave
fsubrl
add
push
adc
add
jl
lret
repnz
dec
test
mov
movsl
sub
push
cmp
add
push
loopne
mov
add
shr
mov
faddl
cmp
out
mov
mov
pop
add
jl
add
xor
leave
fistpl
xor
aam
pop
add
jnp
cmc
cmp
xor
fs
bound
ficompl
aas
cmpb
push
xchg
ds
rcl
mov
cmp
adc
xor
add
mov
lods
push
test
pusha
popa
add
sbb
mov
pop
pop
mulb
mov
test
sti
mov
xchg
mov
xchg
sbb
lods
adc
cs
push
lds
add
pusha
add
pop
mov
flds
test
dec
mov
mov
xchg
jecxz
arpl
lcall
and
adc
fcomps
cmp
imul
or
dec
push
cmpl
das
mov
xor
sbb
push
and
sbbl
imul
sbb
pop
nop
mov
mov
jbe
sub
xlat
jl
mov
subb
sub
bound
sbb
rcrb
add
pop
clc
out
scas
lret
add
mov
xchg
pop
cmovle
mov
lock
xchg
add
test
mov
call
inc
jp
push
add
dec
or
mov
test
int
or
push
das
and
pusha
inc
pop
mov
add
dec
mov
push
sub
faddl
outsb
add
jg
add
dec
push
aam
jne
add
inc
pop
aam
out
popa
cmp
adc
loopne
int
and
xchg
push
and
mov
nop
xor
test
adc
adc
rolb
add
mov
clc
clc
cld
add
and
repnz
xor
fbstp
loope
lods
test
mov
int
jg
mov
mov
pusha
sbb
loope
inc
fwait
sbb
inc
xchg
xor
addb
test
neg
stos
xlat
cs
add
jb
clc
repnz
push
addr16
dec
es
add
nop
dec
xchg
add
push
adc
add
sbb
cld
sub
mov
push
stos
clc
lods
lret
xchg
mov
or
xor
outsl
xor
ficomps
fadds
and
and
pop
add
xor
js
push
pusha
and
push
nop
or
and
xchg
out
pop
jne
add
fwait
cld
mov
cmp
call
sbb
shll
dec
adc
lret
outsb
lret
sub
jnp
add
xor
ss
sub
in
add
inc
jae
in
mov
xor
mov
fildl
add
stc
dec
cld
cltd
push
sbb
dec
aaa
add
pop
daa
rdpmc
in
mov
dec
fstps
sbb
push
testb
test
cmpb
add
pop
mov
mov
add
repz
rclb
jne
in
cmc
and
lret
sbbl
out
jo
push
add
pushf
mov
ds
lods
enter
or
xchg
cmpb
inc
test
xchg
insl
lock
xchg
pop
add
mov
or
sahf
sti
lods
and
scas
sbb
subb
pop
jns
jmp
mov
iret
mov
add
fcmovne
add
outsb
call
push
sbb
inc
stc
dec
pop
jl
xchg
and
lahf
test
addr16
in
enter
mov
mov
xchg
jmp
cmp
pop
mov
sub
push
jg
inc
mov
add
push
dec
jecxz
stos
ret
jbe
add
iret
subb
out
push
mov
loopne
mov
mov
insb
testb
mov
and
sub
jbe
mov
sub
add
and
add
or
jecxz
fimuls
push
andb
cmp
xchg
add
das
stos
sbb
xchg
pop
xor
mov
jl
xchg
andb
xor
mov
mov
pusha
dec
xchg
inc
aas
xchg
mov
pushl
outsl
sti
push
and
mov
addr16
inc
fsubs
cmp
mov
js
mov
dec
add
inc
sti
mov
or
cmp
jmp
inc
loopne
ljmp
mov
pop
dec
cmp
fsubrl
mov
push
add
jge
or
in
cli
sbb
add
call
mov
and
fdiv
ret
push
mov
or
lock
xor
jmp
inc
adc
fsubrs
or
mov
jmp
arpl
das
int3
sbb
add
inc
cmp
push
popa
sbb
jae
xor
add
icebp
pop
out
and
lods
sub
jne
or
jo
sbb
sub
mov
add
fwait
lcall
lea
add
cltd
aaa
add
movsl
pusha
jle
jecxz
imulb
add
or
sahf
bound
ret
enter
fstl
and
in
push
sqrtps
mov
scas
xor
push
stos
xor
decl
shrl
aam
clc
mul
lcall
push
leave
in
pushl
add
mov
ret
sub
jae
lret
imul
je
pop
add
jle
leave
lldt
sub
mov
fdivrp
das
push
sbb
xor
pop
add
pop
sbbb
in
ja
outsl
cld
aas
push
inc
cs
rolb
pop
jno
add
loopne
fwait
pop
flds
popa
and
sub
xchg
sub
xchg
mov
add
aad
xor
mov
jle
inc
nop
ljmp
push
ds
add
roll
adc
out
add
dec
pusha
jecxz
mov
data16
fs
and
daa
repz
pushf
and
mov
xor
pop
push
mov
dec
stos
add
or
xchg
add
xor
cmp
pop
aas
sbb
xchg
jl
leave
std
add
fcompl
jp
sub
push
mov
fiadds
dec
cmp
in
xchg
and
add
sub
scas
sub
add
call
mov
movl
add
sbb
pusha
sbb
mov
pop
daa
pop
or
mov
jo
dec
dec
jns
imul
pusha
aam
or
and
loopne
jo
add
lcall
out
lods
push
pusha
add
dec
mov
xchg
cmp
cmp
shl
cmpsl
jne
fs
xchg
cmpb
push
mov
add
imul
mov
pop
dec
and
xchg
dec
aas
call
sbb
adc
cmovg
dec
mov
movsl
jae
ficoml
add
add
sub
fwait
add
js
xchg
xchg
outsb
or
sbb
lock
sbb
aad
lds
or
mov
adc
push
jnp
add
push
sub
mov
ret
add
shl
add
pshufw
mov
sti
push
sub
call
rcrb
add
idivl
adc
mov
js
out
and
jnp
shlb
in
add
loopnew
in
sub
enter
jb
repnz
sbb
pop
mov
repz
or
sub
push
popf
bswap
push
adc
fldl
test
add
shlb
and
push
bound
xorb
jp
add
fwait
cmp
popl
xlat
xor
sbb
dec
hlt
or
out
xchg
push
sbb
sbb
add
ret
cld
fadds
iret
push
push
orb
in
xchg
movl
xchg
mov
sbb
mov
cmp
adc
xchg
jecxz
shrb
or
dec
ja
cmp
hlt
jnp
add
fstpt
movsl
cmp
cmova
inc
mov
jns
add
lock
mov
pop
subl
imul
dec
jae
add
push
mov
adc
xchg
jl
add
call
jge
lea
in
lods
cmp
bound
push
das
enter
test
and
lock
jmp
imul
outsl
jp
in
dec
push
add
pop
cmpb
mov
imul
push
cld
test
shll
xor
cli
cmp
loop
rcrb
cmpsb
dec
out
push
dec
jo,pn
roll
pop
loop
cmp
add
mov
sahf
and
pusha
add
inc
movsb
fwait
and
push
in
insl
add
int3
lock
aad
add
mov
popf
xor
add
sbb
adc
xchg
add
movsl
mov
loop
add
clc
push
outsl
push
adc
es
insb
add
dec
cli
inc
add
mov
pushf
push
gs
and
sbb
out
inc
xor
mov
cs
popf
inc
add
jmp
call
or
dec
add
mov
aaa
xor
repnz
or
and
in
push
fiaddl
dec
dec
pop
jb
mov
mov
test
sti
out
add
ljmp
mov
in
movsb
add
pushf
dec
mov
cs
add
dec
cmp
push
cmp
mov
add
incl
add
add
icebp
or
mov
pop
lcall
inc
xor
aad
enter
add
pushf
movb
into
add
xor
push
fsubs
dec
std
jl
negl
xchg
leave
rcl
lods
add
inc
dec
push
nop
mov
adc
mov
test
dec
add
cld
add
idivl
add
insb
repnz
jo
add
push
dec
nop
imul
ja
add
push
or
movsb
jmp
call
push
mov
sub
push
mov
subl
sbb
ret
dec
and
or
enter
cmc
insb
gs
orb
push
xchg
mov
add
xor
pop
and
pushf
jmp
push
add
popa
nop
leave
jge
mov
xchg
cmpl
fisubrs
jecxz
pop
sub
pop
cmpl
hlt
fldenv
inc
adc
mov
fisubl
cmp
add
je
jnp
mov
sti
mov
shlb
ret
fdivs
icebp
pop
ret
sub
cmp
inc
mov
fstpt
xchg
shr
out
sub
and
mov
movsb
push
push
je
jmp
xchg
xchg
cmpsl
insb
popf
push
and
add
or
rolb
push
cmc
mov
hlt
add
test
ds
iret
push
add
orb
inc
into
add
or
stos
mov
add
pop
daa
into
mov
pop
cli
lock
jno
inc
nop
add
movsb
dec
orb
xchg
sbb
sub
xchg
add
je
push
add
jp
leave
adc
xor
aad
outsl
fistl
xor
sbbl
lret
cmp
adc
scas
fldt
push
pop
push
add
es
pop
js
adc
dec
add
ja
and
ficompl
pop
cmp
inc
inc
cmp
xlat
and
sub
pop
or
mov
cmpsl
cwtl
xchg
adc
add
rcrb
out
loopne
sub
movsl
rcll
ja
fwait
inc
and
inc
js
pop
push
popa
shr
mov
inc
add
sbb
cmp
add
dec
sarb
scas
addl
fcom
or
pop
inc
in
loopne
jns
pop
ljmp
or
or
mov
inc
loopne
dec
push
add
ficompl
jns
add
jb
push
mov
mov
cld
push
in
js
add
xchg
xchg
sub
repnz
cltd
jne
pop
jnp
icebp
or
add
fiadds
jecxz
jge
fdiv
mov
jp
add
movq
xchg
dec
inc
cmp
jge
jl
add
sub
mov
out
inc
mov
imul
test
fildl
push
mov
or
in
gs
mov
inc
and
sahf
cld
rorb
sbb
mov
add
aam
xor
add
lcall
nop
sbb
mov
pop
pop
dec
or
xchg
and
or
hlt
add
insb
aas
sbb
adc
or
loopne
xor
push
mov
int3
inc
adc
outsl
push
nop
mov
dec
mov
dec
unpcklps
and
test
and
inc
in
and
and
adc
sub
adc
pushf
xor
push
adc
adc
mov
push
jae
fs
mov
pusha
mov
pop
pop
add
push
cltd
sub
inc
out
xchg
mov
mov
adc
rol
repnz
hlt
ja
ds
subb
mov
add
xor
mov
push
mov
mov
add
sbb
lds
and
fildl
xchg
pop
repz
sbb
add
or
mov
inc
push
and
lods
add
mov
pop
jb
sub
ja
pusha
pop
adc
cmpxchg
mov
mov
pop
jb
or
xlat
push
cmp
and
push
and
lods
sbb
sahf
cmpsl
and
pop
pop
lcall
or
push
pop
repz
mov
and
dec
mov
ret
push
iret
imul
fwait
jp
add
inc
inc
push
add
stc
xor
dec
scas
push
mov
push
clc
adc
and
lock
pop
pop
test
es
js
add
dec
dec
pop
imul
xchg
dec
pop
xchg
cmp
mov
fistpl
sub
dec
sbb
movsb
push
inc
sbb
lahf
push
inc
repnz
cmpsl
add
sbb
lock
frstor
cli
in
add
mov
or
xchg
jnp
xor
add
and
lret
std
outsl
add
rcrb
jge
in
iret
aam
call
push
pop
dec
cmpsb
and
jo
pop
subb
mov
adc
add
dec
test
pop
pop
scas
or
sbb
je
insb
xchg
movsl
pop
add
fistpl
mov
mov
negb
mov
push
ljmp
jmp
push
add
push
loope
or
jecxz
mov
push
test
add
cmp
jae
dec
or
xor
add
push
stos
loop
push
pop
cmp
xorb
add
and
push
xor
adc
cmp
ret
in
adc
pop
push
add
outsl
movsl
add
and
xorl
aas
xor
jmp
shrl
add
mulb
add
fadd
cmpb
add
ss
add
jecxz
mov
popf
inc
dec
xchg
add
pop
push
and
pop
push
fiadds
fisubrl
jb
add
push
xor
hlt
insl
xor
pop
cmp
jo
jbe
iret
lods
loop
add
hlt
clc
mov
enter
xchg
sub
loop
pop
push
bound
rcll
sarb
jmp
sarb
inc
inc
cltd
add
nop
and
add
fsubrl
push
dec
or
mov
inc
data16
mov
add
sbb
xchg
mov
push
dec
adc
pop
push
push
insl
inc
cmp
cli
mov
add
and
loop
xor
aam
cmc
aas
mov
shr
mov
push
cmpsl
sub
pushf
fdivl
add
insl
jg
fs
dec
fld1
add
cwtl
fiaddl
add
mov
in
inc
gs
test
daa
outsl
mov
addb
inc
mov
ss
repz
ljmp
push
cmp
lods
add
and
cmp
pushf
leave
xchg
fnstenv
jge,pt
loopne
pop
push
push
cmp
mov
add
arpl
inc
adc
cmp
add
loope
mov
insl
cld
mov
arpl
dec
les
aad
jle
push
cmp
shrb
roll
sub
or
out
loope
aaa
inc
aad
add
or
pop
mov
repnz
lock
into
popa
fiaddl
or
popf
aas
lds
in
pop
cmp
push
sub
cmp
push
movsb
cs
pusha
xor
push
xchg
scas
sub
sbb
pop
jns
push
nop
decb
loopne
pushf
ja
dec
push
test
add
lahf
subl
inc
sub
cmp
sub
popf
call
ljmp
sub
faddl
call
mov
adc
movsb
or
ret
pop
mov
ss
add
xor
out
add
addr16
push
mov
mov
shl
dec
clc
adc
xlat
and
pop
push
and
dec
add
pushf
sahf
andl
loopne
push
add
mov
jne
cli
dec
sub
mov
xor
push
add
xor
pop
repnz
js
fdivs
jno
sbb
inc
ja
add
dec
xchg
fiadds
cltd
mov
pop
movsb
dec
inc
mov
stos
out
add
mov
xor
mov
scas
adc
fcomip
pop
lea
mov
inc
sub
int3
testb
movb
pop
and
xchg
insl
pop
mov
add
dec
lahf
sbb
cmp
jge
popf
push
hlt
xor
out
add
jmp
test
xorb
pop
add
add
xor
pop
jg
mov
loop
push
xchg
add
lods
filds
arpl
pop
mov
jbe
movsl
loop
mov
adc
aas
add
cmpsl
sub
cmc
sbb
xorl
inc
jle
pop
pop
incl
and
std
fs
jge
hlt
add
fldenv
lea
jle
dec
push
jo
sub
jmp
test
punpckhbw
shlb
mov
push
and
pushf
cmp
mov
and
and
popa
cmp
call
add
push
xchg
flds
sbb
mov
jo
add
mov
movsb
cmp
xor
bound
das
mov
add
adc
lcall
cmp
inc
gs
and
fdivrs
inc
test
add
xor
out
stc
push
push
adc
xor
mov
inc
add
filds
mov
add
aas
or
mov
inc
add
scas
jno
jne
add
push
out
sub
push
aad
xchg
inc
enter
aam
movsl
aas
lfs
cmc
inc
hlt
int3
sahf
add
push
or
adc
aad
xchg
out
popl
out
sar
adc
cmp
fiadds
in
push
add
mov
pusha
test
insl
xor
roll
mov
cmpb
bound
sub
cmp
cmp
hlt
stos
test
cmp
or
popf
jecxz
or
imul
fisubl
mov
xor
nop
fs
out
push
dec
addl
dec
ja
add
fstpt
cmp
inc
mov
sbb
cld
sar
nop
pop
cmp
scas
jne
inc
pop
or
or
add
in
enter
add
ret
popf
roll
adc
dec
jge
add
lods
inc
pop
push
dec
dec
or
loopne
fwait
imul
add
loop
mov
and
ret
pop
add
scas
cld
insb
add
mov
fcompl
mulb
bound
outsb
pop
insl
add
mov
pop
test
mov
mov
push
dec
mov
xchg
or
rol
bound
js
out
in
mov
es
mov
pop
xchg
sub
cmpsb
fwait
push
pusha
test
pop
cmpsl
add
aam
mov
repz
in
mov
movsb
loop
push
dec
pushf
andb
xor
dec
mov
xchg
sub
out
icebp
movsb
push
push
cmp
cmp
or
cld
or
xchg
inc
cmp
cmp
xchg
sub
add
bound
addr16
movsb
add
push
add
cs
rorb
push
mov
push
mov
hlt
xor
dec
cmp
cmc
scas
pop
adcb
enter
test
push
dec
dec
and
add
pop
mov
arpl
add
mov
jb
mov
push
cmp
add
call
lock
js
sbb
int3
rcr
test
or
mov
mov
in
add
add
cmp
mov
jno
push
add
seto
in
push
pop
add
sbb
add
xor
push
inc
dec
std
add
jae
sbb
lret
fisubl
push
xchg
cmovne
daa
cwtl
add
repz
das
cmp
pop
mov
shll
std
jo
add
roll
jbe
stc
incb
add
dec
fs
clc
outsb
xchg
out
nop
mov
mov
jb
out
andl
scas
xchg
out
shll
js
adc
loopne
pushf
orb
dec
mov
mov
jo
pop
push
dec
stos
cltd
sahf
je
add
mov
add
dec
icebp
mov
test
int3
popa
adc
shlb
add
xchg
mov
jle
push
cld
inc
das
add
pop
mov
cwtl
cmpsl
mov
andb
dec
inc
and
push
jl
inc
jle
mov
add
jge
hlt
xorb
jae
int3
mov
add
pop
cmp
aas
addr16
orb
pushl
xchg
add
cmpsb
sub
stc
add
mov
xor
add
cmpsb
push
into
fimuls
or
pop
rorb
clc
mov
mov
outsl
add
adc
enter
sar
sbb
out
fistps
pop
mov
sbb
add
mov
data16
flds
xchg
popf
pop
shrb
sub
jo
test
add
inc
movsb
ds
scas
fisubs
pop
add
stos
and
jmp
pop
fmull
dec
push
ds
cmp
add
push
jno
push
cmp
cmp
mov
sti
xor
mov
cmp
cmp
mov
or
pop
sub
push
test
das
shlb
shlb
ss
xor
movsl
addr16
mov
dec
dec
mov
sub
add
cli
cmc
dec
xchg
arpl
sbb
cmp
mov
xchg
add
cld
mov
scas
les
sbb
adc
push
jmp
outsb
int
icebp
loopne
lcall
das
movnti
ds
imul
xor
fdivs
or
lds
sahf
xor
adc
lcall
jo
pushf
sub
add
call
cwtl
mov
mov
add
out
fldcw
mov
dec
jp
inc
fiadds
in
movsb
icebp
mov
adc
int3
sub
jb
push
movsb
das
xor
gs
repz
jmp
daa
and
dec
lock
or
jo
or
add
inc
add
scas
aad
pop
add
out
add
aam
negl
or
fcmovnu
cmpsl
push
ss
nop
mov
and
sti
mov
dec
lds
add
cmp
arpl
inc
mov
adc
xor
push
add
lea
and
mov
jle,pt
in
out
xchg
mov
xor
test
dec
jo
inc
add
ja
cli
negl
out
push
lcall
ret
sbb
adc
inc
js
hlt
out
push
mov
inc
rcrl
add
gs
in
mov
int
pop
add
imul
lahf
pop
add
pop
add
jmp
inc
leave
cmp
mov
into
out
push
dec
sub
mov
xchg
ret
xchg
rol
lret
add
sbb
mov
mov
insl
add
add
add
lret
mov
and
je
jmp
aaa
fiadds
jmp
sbb
add
cmp
and
pop
sbb
sbb
sti
pop
faddl
jns
add
xor
and
cmp
pop
or
adc
cld
add
and
in
sub
inc
addr16
fstl
push
add
sbb
jge
fwait
cwtl
push
imul
and
pop
repnz
mov
jns
bound
or
mov
pop
xchg
push
addl
into
rcll
sub
push
sub
imul
pop
hlt
jp
loop
dec
pop
addb
jno
int3
and
add
jmp
add
test
add
adc
nop
mov
mov
lahf
adc
mov
mov
dec
add
into
push
sbb
mov
dec
ss
test
pop
shll
xor
mov
fisttpll
jg
std
and
xchg
sti
clc
loopne
mov
int
ret
mov
pop
stc
in
aam
adc
dec
add
repnz
hlt
sub
bound
or
xor
mov
pop
add
and
mov
or
cmpsl
mov
mov
je
lret
push
xor
sbb
cmpsb
ss
test
jg
ss
out
adc
mov
ja
push
cmp
inc
push
loopne
add
in
xchg
and
jmp
add
out
pop
xor
loope
loopne
pop
xor
in
xchg
in
out
dec
inc
adc
sti
mulb
jp
shlb
hlt
jns
sti
add
add
pop
out
insb
add
adc
push
jne
or
enter
or
pop
inc
jl
iret
and
jnp
or
js
clc
and
sub
or
insl
mov
sarl
xlat
loop
call
es
pop
inc
sbb
dec
dec
mov
xchg
or
scas
pop
adc
inc
add
add
cmp
test
add
dec
cld
push
cmp
cmpsl
mov
sbb
pushf
rol
mov
xlat
push
imul
dec
adc
dec
add
inc
pop
xor
xor
repnz
push
jle
push
lock
add
sahf
sbb
add
mov
or
sbb
shrl
add
add
aam
add
out
scas
test
jnp
pop
adc
xor
add
mov
add
shrb
add
sbb
test
fucomi
cli
cmp
stos
push
xchg
cld
out
addl
roll
les
sarb
cmp
sub
add
cmp
call
add
shld
popa
jmp
popl
mov
inc
xchg
xor
dec
jmp
dec
loopnew
jmp
inc
and
push
cmc
popf
jns
pop
clc
ds
outsb
adc
sbb
lods
mov
sbb
inc
jl
call
ja
fistl
mov
add
pop
sahf
js
or
add
xlat
adc
inc
rcrb
insb
add
shlb
in
repz
mov
mov
jge
std
test
imul
sbb
inc
cmp
pop
lahf
jb
in
int3
inc
jbe
sbb
add
fmuls
in
add
stc
xchg
or
mov
sbb
ja
xchg
rcrb
sub
in
add
orb
add
insb
shr
push
cmp
lds
cltd
aaa
lret
pop
popl
sbb
into
push
outsb
movsb
xchg
cli
xor
fwait
jns
lods
sbb
fmuls
loop
sub
add
pop
push
test
lret
sub
je
std
sbb
jmp
sbb
jne
add
outsl
loope
aam
cmp
jle
inc
movsb
pop
leave
test
mov
int
mov
push
mov
push
pop
into
cltd
add
sarb
xor
adc
in
int3
sbb
mov
xchg
and
add
xor
ds
inc
fwait
cmp
push
cmp
xlat
pop
cli
sub
popf
test
add
lahf
hlt
out
mov
cmpb
xchg
outsb
dec
add
dec
add
out
mov
mov
add
aas
mov
cs
pop
je
jne
adc
cwtl
push
add
test
or
mov
jle
out
gs
ja
dec
mov
jmp
cld
mov
pusha
iret
mov
inc
out
cmp
push
add
pop
add
cmp
fs
push
cmpsb
sbb
and
enter
mov
add
mov
outsl
or
add
mov
lret
dec
adc
mov
push
sbb
lods
lods
jne
pop
or
sarl
sub
stos
mov
push
fcoms
in
orl
add
cmp
pop
out
xorb
jp
movsl
add
int
or
addr16
add
mov
jmp
movb
push
xchg
jl
cwtl
cwtl
sahf
nop
adc
subl
roll
jb
fs
adc
ja
mov
push
enter
dec
je
xor
pop
int3
pop
push
js
loop
and
pop
sbb
dec
test
mov
mov
cs
int3
inc
shlb
scas
inc
int
cltd
lcall
push
and
add
movsl
adc
add
mov
cwtl
cmpsl
out
testb
js
leave
mov
les
imul
repnz
xorb
arpl
adc
inc
popa
data16
xchg
in
inc
adc
dec
or
je
sbb
test
shlb
dec
xor
push
jno
mov
xor
lcall
adc
add
lret
insl
add
jg
lea
pop
movsb
add
popl
add
jnp
cmpsl
lods
lret
cmp
cmp
mov
iret
out
outsl
add
and
lret
jecxz
add
sarb
xchg
push
pop
jge
add
pop
mov
dec
cltd
inc
mov
mov
lea
inc
inc
and
push
add
leave
or
call
jbe
add
sbbb
add
xor
dec
or
adc
roll
cs
xor
cmpsb
push
jno
sbb
xchg
add
int3
dec
insl
pusha
and
cmpsl
push
mov
and
aaa
lea
test
push
xchg
in
mov
das
addb
ja
bound
mov
in
sbb
sub
hlt
pushf
sbb
out
add
movsl
shll
sbb
mov
push
ss
inc
mov
inc
enter
xor
mov
push
imul
shl
sub
push
push
inc
aas
dec
aam
sbb
dec
sbb
jmp
push
add
in
loope
test
idiv
mov
pop
int
pop
xchg
mov
aas
push
in
sarb
add
or
sahf
cmp
pop
inc
push
mov
inc
mov
cmp
and
stc
scas
orl
adc
push
pop
jl
inc
adc
mov
add
xchg
test
sbb
or
in
mov
or
out
add
add
mov
add
jns
cs
cmpb
loope
lret
add
mov
out
xcrypt-cbc
cmpsl
push
jmp
test
lahf
xorb
cld
sbb
mov
into
xor
aas
int
add
pop
fistpll
stos
pop
adc
adc
mov
xchg
outsb
nop
clc
jge
aaa
mov
lods
xchg
movsb
lock
adc
mov
cmpsb
add
mov
daa
mov
add
sub
nop
xor
sbb
test
rcrb
maskmovq
mov
lods
and
xchg
xor
dec
inc
add
mov
xor
mov
sub
addb
sub
icebp
popa
jbe
lahf
add
addl
pop
dec
leave
int3
pop
fisttps
xor
cld
mov
sub
shlb
jp
shlb
fucom
ljmp
lea
mov
sub
sub
cmp
out
add
aas
shll
inc
lret
mov
add
testl
sbb
in
mov
add
mov
pop
mov
ljmp
sarb
push
and
das
mov
stos
add
mov
inc
out
mov
fidivrs
add
ror
lods
outsb
add
test
scas
pop
add
lret
fsts
add
out
cmp
jmp
push
incb
mov
scas
sbb
popf
nop
adc
add
sbb
mov
fldlg2
ficompl
add
nop
shll
fstpl
pop
shrb
add
cmp
leave
cmc
ljmp
lods
and
jp
mov
or
add
scas
scas
sbb
loop
sbb
pop
jnp
sti
dec
push
loopne
and
js
add
cmc
out
fiadds
mov
loopne
add
cmp
pop
sub
mov
sahf
int
jns
aam
cmp
test
dec
cmp
leave
add
repz
add
add
inc
sahf
inc
sub
push
cmpl
jle
repz
cltd
add
jg
mov
pop
test
ret
mov
cmp
or
in
loopne
push
fwait
pop
enter
sbb
xor
leave
fadds
xorl
ret
stc
out
xorl
sbb
mov
push
pop
push
enter
nop
push
loope
inc
cmpsl
cmp
cld
sbbl
add
insb
add
xor
mov
cmp
jae
add
mov
inc
mov
outsl
verw
inc
je
je
or
pop
adc
sub
push
xor
fiadds
mov
and
std
adc
btrl
aaa
call
add
sub
lret
push
int
jmp
inc
inc
scas
adc
mov
add
setnp
loopne
xchg
rcpps
cmp
inc
pop
cmp
xor
or
xor
or
add
inc
xchg
movsb
xchg
mov
cmp
add
subb
lahf
out
int
addb
ja
mov
repz
mov
ljmp
xor
add
dec
adc
and
or
push
dec
add
push
or
mov
push
jno,pt
addl
inc
cmpsb
shll
lock
cwtl
mov
push
push
and
sub
clc
pop
or
cmp
fmuls
shlb
add
inc
sbb
inc
fsubrl
jg
cmp
ficoml
nop
pop
and
sbb
add
in
mov
loopne
clc
std
sbb
dec
test
stos
aam
jge
imul
inc
sbb
adc
xchg
push
in
fildl
jo
push
arpl
sbb
movb
mov
dec
shl
std
add
push
mov
or
shrb
xchg
andb
add
lods
cmpsb
cmp
sub
adc
mov
shr
mov
movsl
push
mov
jns
ljmp
fmull
mov
cpuid
mov
cmp
in
mov
rorb
lods
flds
xchg
icebp
dec
cmpsb
pop
add
mov
xor
inc
pop
pop
repnz
cmp
popf
inc
out
icebp
in
fstp
fsub
addl
mov
xchg
add
lea
mov
jo
cwtl
addb
add
mov
popf
sbb
adc
sub
or
add
adcl
js
les
add
xor
dec
dec
mov
sbb
or
or
push
dec
add
jb
add
jle
pop
push
in
insl
cli
mov
xor
adc
inc
arpl
fisubs
mov
lock
cmp
add
sahf
xchg
adc
lds
jb
xchg
cmpsb
xor
mov
adc
xorb
mov
sti
push
mov
shrb
imul
popf
ret
lret
push
push
and
cmc
pop
xor
cmp
pop
pop
out
mov
stos
jnp
sub
mov
ja
or
add
sti
data16
add
loopne
push
or
int
mov
add
loop
mov
sub
pop
adc
gs
dec
setns
mov
mov
mov
fs
ret
add
stos
nop
es
imulb
add
xchg
mov
hlt
push
or
xchg
pop
and
adc
add
push
fnstcw
xchg
rclb
insl
pop
pop
add
cli
ja
leave
jno
mov
and
xchg
mov
pop
push
ja
xchg
lods
ljmp
mov
sbb
cld
cmpps
dec
cld
ds
add
mov
cwtl
and
mov
sub
push
pop
loope
inc
mov
add
ja
inc
jle
dec
cmpsl
jno
mov
adc
jge
pop
xchg
push
jle
fisttps
mov
adc
imul
xchg
iret
aam
xor
add
out
mov
dec
add
leave
orb
xchg
lret
data16
xlat
mov
add
dec
pusha
jne
cmp
adc
test
cmp
testl
cwtl
test
rclb
pop
fimull
push
mov
das
sub
push
add
cli
cld
push
xchg
out
push
and
dec
pop
pop
loopne
fwait
mov
add
adc
movhps
add
or
jbe
incb
xor
das
pop
in
cwtl
jae
cmp
mov
xorb
xor
cwtl
pop
ds
leave
pop
sub
mov
add
jl
fsubrp
call
nop
jbe
sahf
cmp
stos
cmp
cmp
pop
ret
add
inc
vmovlps
cmp
pop
popf
xor
ds
jns
pop
call
mov
rorl
pop
xor
sbb
leave
adc
int3
adc
pop
cmp
add
int3
ret
loopne
divb
add
and
aad
pop
mov
sbb
add
and
xchg
pop
cltd
adc
lret
enter
aas
pop
inc
lahf
insl
ret
add
pop
jbe
mov
sub
and
push
daa
stos
call
sbb
cmp
lods
sbb
rorl
xchg
sub
aaa
jbe
dec
mov
js
daa
mov
sub
cmp
cwtl
jecxz
jo
daa
add
dec
or
das
divl
add
mov
cltd
dec
jnp
mov
sub
and
adc
pop
roll
cld
mov
mov
jbe
mov
fadds
add
ss
pop
push
shrb
scas
or
inc
push
or
jae
sbb
xchg
push
bswap
stos
dec
lods
xchg
adc
pop
icebp
add
mov
mov
out
jnp
add
stos
test
jnp
cmp
test
dec
jno
roll
pop
sbb
inc
rorl
xchg
sbb
sub
sti
push
sub
stos
inc
push
data16
xor
add
adc
mov
dec
and
add
jno
xchg
lsl
dec
bound
mov
stos
inc
lds
fdivs
movb
mov
nop
add
adc
jl
pop
xchg
inc
pop
push
fwait
stc
stos
sub
outsl
add
xchg
mul
neg
jbe
add
sbb
jl
add
insl
add
mov
push
pop
mov
mov
cmp
mov
add
aad
add
inc
mov
pop
jae
add
in
aaa
cmpsb
pop
lret
mov
data16
adc
pop
mov
mov
test
mov
push
push
rcrb
adc
inc
scas
jns
sbb
push
enter
imulb
push
add
jmp
jns
add
jns
int3
pop
call
test
sbb
lock
sub
add
stos
mov
adc
outsl
jae
xchg
xor
mov
sub
add
mov
or
xor
xorb
mov
adc
and
push
and
aas
jg
jne
cmc
in
dec
or
std
lods
faddl
mov
pusha
mov
push
test
test
dec
daa
and
cmp
xchg
push
das
out
orb
mov
push
add
scas
push
popa
xor
test
into
mov
jno
cmp
shrb
movsb
xorb
add
push
in
aaa
sub
sbb
add
cli
push
xor
xor
mov
cmp
movsb
orl
dec
repz
and
ret
adc
orb
call
outsl
aam
xor
push
fmuls
add
cs
pop
mov
jno
sub
in
in
or
stc
hlt
cmp
inc
shlb
add
dec
dec
jnp
iret
adc
cmpsb
mov
fs
lods
adc
test
ret
push
pop
lock
out
or
push
clc
and
std
pop
and
fldenv
jl
jo
push
dec
lock
mov
push
or
in
pop
fmull
inc
mov
xchg
jg
fldenv
push
pop
mov
add
pop
dec
jnp
adc
rorl
mov
inc
xor
jg
xor
sub
add
mov
mov
fistps
test
repnz
adc
add
ljmp
call
rol
xchg
cmp
sub
leave
jo
lcall
push
adc
movsb
mov
jmp
jnp
pop
inc
nop
mov
xor
sbb
adc
pop
mov
testb
add
push
xorl
addb
and
mov
enter
or
out
hlt
cmp
or
pushf
jp
inc
aam
jp
or
jns
ds
aad
and
ljmp
je
subl
pop
pusha
dec
loopne
jno
mov
divb
jge
popl
sbb
jmp
dec
jge
rorb
push
insb
les
add
xchg
or
mov
jecxz
ret
js
inc
fldenv
test
jb
mov
add
mov
sub
popa
loope
stos
js
xor
push
in
movsb
testl
icebp
mov
shr
loopne
hlt
cmp
or
pushf
rorl
pop
pop
call
aaa
loopne
les
inc
xchg
and
testl
bound
add
push
roll
dec
add
inc
or
adc
mov
cld
adc
mov
pop
pushf
lock
repz
loop
mov
add
jo
movsl
aas
jbe
pop
cmp
cltd
xor
addb
test
adc
lahf
xchg
subl
xchg
fmul
jle
add
adc
clc
sbb
lret
enter
add
sahf
aas
mov
rcl
test
add
mov
lock
cmp
xchg
hlt
cltd
sub
or
pop
pop
enter
rolb
ficoml
and
mov
pop
adc
mov
push
or
mov
adc
cwtl
sbb
test
cwtl
xor
cld
sbb
in
inc
xchg
cli
nop
add
inc
out
out
insb
add
xchg
int3
shll
ret
and
loopne
adcb
jge
xorb
add
fnstsw
lret
iret
stc
int
insb
pop
xchg
cli
add
fdivs
or
xchg
jno
movsl
pusha
in
pminsw
cwtl
add
jnp
sbbl
adc
icebp
add
mov
jne
dec
scas
pop
add
inc
and
fbstp
movsl
sub
mov
adcb
add
push
cmpsb
push
pop
mov
icebp
inc
sbb
jmp
fmul
lock
add
xchg
push
xor
je
add
test
enter
mov
stos
or
lret
test
xchg
or
inc
scas
iret
aad
push
jg
movsb
test
in
cltd
lret
xor
add
xchg
mov
sahf
jl
pop
ja
push
cmc
out
andl
out
pushf
negl
and
cmp
add
loop
out
movsb
mov
sbb
mov
xor
push
imul
lods
out
jno
add
inc
cmp
inc
or
jb
insl
icebp
dec
jae
pop
add
xchg
imul
mov
sahf
add
gs
std
add
mov
and
out
mov
cmpsb
mov
mul
clc
aaa
mov
mov
mov
orb
dec
or
push
addr16
and
stos
cmp
jl
or
add
push
xor
bound
addb
dec
push
int
pop
sub
add
sub
cmp
add
imul
xchg
and
loope
adc
sub
sub
add
hlt
dec
ret
adc
lock
jns
add
cmpb
or
test
js
into
inc
add
push
or
outsb
sub
fcomp
xchg
adc
and
mov
nop
fiaddl
adc
sarl
pop
jnp
push
sbb
jns
in
mov
repnz
cs
leave
hlt
cwtl
or
push
adc
sahf
xor
mov
add
add
jge
lea
ret
fsubl
mov
dec
and
inc
sbb
clc
add
ljmp
mov
push
xor
or
or
mov
clc
nopl
shrl
loopne
repz
pop
adc
mov
jae
mov
jo
dec
and
add
dec
jne
sbb
inc
pop
push
xchg
lret
jmp
ret
sbb
cmp
xor
fistpl
sub
mov
aaa
movsb
mov
movsb
les
add
xchg
aad
sarb
cmp
rorb
std
add
sti
xchg
movb
add
inc
add
dec
out
sbb
jle
cmp
mov
mov
andb
jmp
mov
bound
adc
jbe
fildll
lcall
lds
sahf
or
int
add
in
mov
gs
mov
or
xlat
jle
cmp
mov
add
and
jne
sub
in
lret
xchg
pop
sbb
cli
cmp
dec
in
and
outsl
xorb
ja
cs
or
add
stc
add
mov
test
sub
sub
repnz
arpl
xor
push
mov
stos
push
or
jno
and
mov
add
shr
repnz
test
incl
or
mov
jne
pop
arpl
cmp
mov
dec
add
dec
mov
roll
lds
int
mov
addr16
mov
add
cmpsl
inc
bound
push
mov
inc
movsb
cmp
in
push
js
in
add
push
in
xor
add
fstpl
push
bound
mov
hlt
cmpl
add
add
call
sbb
dec
retw
hlt
cmp
jge
js
xchg
add
imul
pop
push
sbb
pop
icebp
loop
in
mov
jmp
les
cwtl
je
bound
aam
shlb
fdivs
out
add
xchg
test
in
loope
add
movsb
dec
add
imul
mov
into
mov
aaa
add
arpl
hlt
stos
mov
dec
xchg
les
pop
rorl
mov
cmpl
mov
xor
add
scas
jp
and
pop
pop
in
pop
dec
mov
mov
out
lret
int3
mov
pop
add
dec
das
mov
or
adc
loope
push
inc
mov
mov
pusha
or
jl
and
sub
fcomps
iret
add
dec
jecxz
mov
lea
and
test
dec
test
add
xlat
mov
dec
mov
and
mov
push
insl
push
mov
aas
stos
sarl
mov
sti
hlt
dec
nop
inc
popa
scas
add
sub
shr
jmp
pop
push
ja
mov
dec
mov
mov
aam
push
rolb
subps
and
cmp
push
stos
jge
loopne
mov
mov
xchg
mov
push
or
and
pop
mov
fidivs
lock
in
call
mov
and
push
xor
call
in
add
ret
jno
lret
push
aad
dec
inc
jns
loopne
adc
cli
jp
mov
dec
jg
push
jbe
subl
sub
insb
jb
xor
mov
icebp
add
dec
mov
lea
push
lock
add
lods
addr16
adc
add
xor
fwait
repnz
ror
mov
add
rolb
add
repnz
dec
push
arpl
hlt
push
sbb
js
rcrb
lds
mov
fidivrs
roll
or
sbb
je
sarb
pushf
dec
leave
adc
sub
int3
xor
add
inc
iret
out
or
jmp
cmp
sub
add
add
pop
mov
sub
sbb
add
xchg
loop
inc
dec
xor
jns
add
fimull
test
mov
sbb
and
add
loopne
mov
add
and
xchg
add
test
jmp
ljmp
and
insl
mov
adc
pop
jp
add
sbb
push
clc
mov
push
lock
or
movsl
pop
add
outsl
pop
mov
add
pop
xchg
jo
add
nop
push
cmp
cmp
cli
xchg
iret
inc
cwtl
mov
pop
mov
cld
dec
add
scas
ja
xor
xchg
jae
pop
jecxz
les
add
cmp
and
jae
ret
xor
add
das
pop
pusha
xchg
adc
incl
pop
add
cmpsb
xor
xor
xchg
and
repnz
add
xchg
outsb
std
fnstsw
cmp
scas
mov
push
movsl
cmp
andb
xchg
inc
out
cmp
add
enter
adc
add
fdiv
aad
push
xorb
xchg
pop
add
sub
and
fildl
add
lret
push
popf
jnp
jae
loopne
sbb
jb
sbb
clc
pop
js
xchg
cmp
push
sbb
add
sarb
roll
leave
adcl
sbbb
add
lea
pop
in
lock
mov
dec
imulb
adc
sub
adc
xchg
add
loopne
xchg
push
in
test
retw
rcrl
inc
insl
jl
add
mov
mov
sub
xchg
sti
xor
mov
jnp
push
add
fisttps
cmp
push
jno
popf
cmp
ficoml
xchg
stos
add
mov
pop
lahf
add
les
cmp
mov
xlat
je
add
sbb
inc
jo
bound
lods
out
cmp
sub
stos
in
adcb
test
mov
iret
in
shlb
add
sub
test
dec
or
test
add
cmp
add
inc
xchg
mov
sarb
fsts
jl
adc
and
xchg
xor
movb
nop
add
dec
orb
cld
inc
jnp
xlat
add
and
daa
pop
xor
shlb
fxch
shll
or
pop
loop
movhps
jno
adc
xchg
fnstcw
push
nop
call
jns
sub
dec
les
adc
pavgb
add
shlb
sahf
mov
sbb
addl
mov
jmp
add
jno
ljmp
dec
adc
inc
lret
adcl
push
shll
jno
dec
int
xor
add
popa
fucom
pushf
icebp
xor
jmp
adc
out
xchg
andl
mov
out
mov
adc
pop
mov
es
xlat
cs
mov
pusha
repz
mov
pushf
test
arpl
addr16
add
jl
aas
roll
sbb
clc
pop
pop
mov
jns
add
add
jge
cmp
mov
in
jl
jl
pop
mov
sahf
add
mov
xlat
add
lods
js
or
add
clc
jg
fiaddl
arpl
popl
jle
adc
out
ret
clc
push
mov
fiadds
pop
cmp
and
les
std
add
test
and
inc
bound
push
lock
add
out
out
enter
mov
das
icebp
mul
or
pop
add
adc
nop
loop
dec
pop
mov
add
das
inc
sbb
add
inc
fcom
pop
push
dec
add
sub
inc
add
repnz
fadds
inc
pop
or
sub
xlat
scas
ss
xchg
ret
mov
ja
mov
nop
add
adc
jnp
add
arpl
lahf
mov
add
mov
popl
xchg
cmp
imul
cmp
jne
bound
inc
gs
push
lret
push
enter
cmp
jnp
rorb
pop
add
insl
cmp
xor
and
and
push
daa
rcrb
dec
outsl
inc
sbb
pop
mov
mov
pop
xor
mov
mov
icebp
add
add
aad
mov
fmull
xchg
jecxz
mov
add
sbb
js
cmp
pavgb
fcmovnb
mov
loop
add
ret
or
fldl
jge
cmpsl
mov
add
cmp
emms
push
push
xor
add
mov
mov
mov
lcall
pop
addr16
xchg
add
leave
pop
pop
cmp
jle
add
into
aam
inc
dec
sbb
adc
mov
jns
pop
dec
and
sldt
inc
stc
mov
test
insb
out
pop
xorb
and
gs
mov
jecxz
dec
add
rorl
add
std
xchg
mov
mov
inc
lahf
add
sbb
add
adc
clc
mov
lods
pop
or
jns
mov
imul
or
fnsave
sbb
add
andb
add
cmp
in
out
fadds
mov
adc
aam
add
arpl
xchg
inc
in
xchg
xor
mov
mov
and
test
in
mov
pop
call
xor
jns
loopne
cld
add
inc
mov
nop
jo
lret
pop
add
je
pushf
lds
scas
add
repnz
xchg
ljmp
push
jg
add
push
cmp
fsub
ret
nop
add
dec
ret
add
roll
out
push
sbb
ljmp
pop
adc
in
add
aam
mov
push
iret
hlt
mov
cltd
cmp
or
shl
add
cli
lret
mov
nop
shll
or
dec
scas
hlt
orb
push
mov
and
mov
pushf
add
push
les
push
lock
pop
and
jp
mov
enter
jae
xlat
sub
into
inc
rolb
ljmp
add
scas
mov
in
inc
cltd
dec
add
or
sbb
fadd
stc
jae
add
jecxz
add
cmp
cmpsl
push
inc
mov
add
aam
cwtl
add
pop
or
pop
push
sbbl
inc
in
sub
push
inc
dec
push
jo
jle
or
je
ds
or
adc
adc
pop
call
sbb
add
jl
inc
add
gs
cld
rolb
sbb
popa
sbb
pushf
int3
daa
adc
movsb
pop
or
mov
test
xor
aam
jmp
add
sti
loopne
cmp
adc
mov
mov
test
rorl
sbb
xchg
lret
xchg
and
pop
push
test
jmp
iret
mov
pop
hlt
ja
pop
les
mov
adc
je
cld
nop
jl
in
insl
or
pushf
mov
or
mov
pop
add
shl
pusha
cli
add
inc
dec
pop
cmp
add
and
clc
mov
in
mov
xor
subps
sub
inc
add
inc
das
jge
push
into
mov
or
xor
movsb
fsubp
mov
inc
and
outsl
pop
lock
inc
mov
fisttpl
in
push
xchg
mov
sbb
xor
addr16
sbb
into
dec
pop
cli
and
cwtl
or
stos
fs
add
add
subl
mov
mov
jp
jns
jecxz
clc
mov
or
sti
add
cmp
mov
ss
dec
movsb
sbb
sti
xchg
push
or
not
sahf
cli
jae
mov
add
insb
fwait
lods
fistpll
or
mov
dec
mov
mov
shl
push
add
stc
movsb
inc
add
out
push
sar
adc
mov
xlat
call
or
xchg
pop
sub
cmp
adcb
sub
sub
or
lret
cmp
jne
imul
xlat
add
fwait
std
jmp
pop
rorb
cmc
add
in
cmp
mov
add
in
mov
inc
cmc
pushf
incb
add
mov
in
adc
dec
inc
insb
jp
mov
and
inc
filds
sub
cwtl
pop
fs
add
jnp
dec
lahf
push
paddq
add
cmpsl
xchg
cmp
fildll
push
cmp
out
mov
xor
inc
in
dec
pop
leave
imul
fwait
ret
jno
cmp
test
int3
lock
xchg
mov
add
adc
push
or
push
cmc
mov
nop
add
jb
xchg
sbbl
xchg
add
inc
ja
roll
pushf
inc
mov
std
dec
incb
nop
and
lock
iret
adc
cmp
sbbb
cld
add
add
ret
or
fmuls
mov
into
dec
daa
add
push
cmc
push
add
stos
xchg
jo
push
int
pop
jg
cmp
and
aas
add
daa
je
daa
pop
jns
adc
pop
shll
add
insb
cmp
sbb
sbb
mov
push
add
lcall
and
and
out
repnz
imul
xor
in
sar
mov
adc
enter
inc
and
push
jle
loopne
out
inc
pop
nop
jb
inc
push
pop
cwtl
cwtl
fdiv
add
loope
inc
mov
cld
fadds
adc
cli
inc
mov
dec
and
and
fsubs
inc
imul
in
add
lcall
lret
rcr
add
push
xor
shrl
sub
cwtl
in
fadd
rcrb
loopne
incb
jb
cmp
mov
sbb
test
mov
cwtl
jne
loopne
mov
ds
roll
subb
mov
mov
daa
xchg
xchg
add
cmpsb
fidivl
pop
or
rorl
insb
rorb
scas
sbb
arpl
sbb
mov
sahf
cmp
faddl
repz
ds
orl
call
inc
das
clc
loopne
mov
mov
inc
orl
add
sbbb
pop
mov
jne
adc
les
add
lret
and
sub
dec
mov
enter
nop
cmp
pushf
in
dec
cld
loopne
inc
sub
gs
out
xor
lods
and
hlt
pop
fimull
clc
mov
bound
inc
imul
jns
or
mov
add
add
loop
out
jge
ldmxcsr
mov
add
sbb
ds
aaa
dec
enter
ss
jb
stos
mov
add
cwtl
cmp
jmp
jo
in
rcrb
insb
xchg
push
shll
xlat
mov
aad
push
jno
pop
or
pop
and
pop
add
sahf
sbb
mov
add
adc
aam
xor
xchg
and
int3
mov
inc
jb
mov
mov
shll
pop
rol
ds
inc
pop
arpl
sarb
movsl
pop
lret
mov
add
movsb
ljmp
and
mov
sub
pop
sub
leave
mov
xor
sti
inc
mov
jno
sbb
daa
or
out
popf
or
adc
mov
hlt
dec
pushf
rolb
insl
and
jb
inc
subb
xlat
push
mov
mov
xor
dec
push
xor
push
test
add
addr16
and
pop
push
xchg
adc
adc
xor
mov
dec
add
ret
idiv
pop
dec
sbbb
cmp
adc
hlt
pop
lahf
mov
add
jge
inc
fidivrl
fdivs
jns
and
rorb
lods
jnp
cmp
lahf
mov
ljmp
roll
mov
inc
sub
add
ds
insb
popa
inc
dec
nop
add
pop
pop
adc
mov
aad
ss
rolb
into
xor
xor
setns
in
inc
dec
std
shl
enter
das
jle
in
and
or
pop
testl
mov
in
sub
int
aaa
sub
push
dec
jge
pop
mov
pusha
sbb
repnz
push
xor
je
repz
add
test
pusha
add
xor
push
add
fiadds
jo
xor
add
fwait
lret
adcl
sub
push
add
test
insl
dec
sub
mov
xor
call
push
sbb
cli
pop
lret
int
mov
xchg
and
rorl
mov
loop
loope
js
in
popa
pop
push
lahf
sbb
add
dec
ljmp
pop
jmp
and
aad
loopne
cmp
popl
cld
cmp
mov
jp
clc
mov
mov
add
mov
int3
mov
mov
imul
mov
pop
adc
push
addr16
fucom
push
in
cltd
leave
add
mov
cmc
in
inc
bound
dec
cs
lods
push
mov
lret
fldl
adc
jnp
lds
lock
out
fisttpl
mov
lret
mov
adc
imul
push
xchg
andl
sbb
jbe
mov
xor
lock
and
into
sub
dec
clc
add
xchg
jnp
add
lcall
shlb
fsubs
push
or
dec
test
out
lds
add
imul
fmull
pop
lret
xorb
enter
and
jle
push
mov
int3
mov
push
fwait
add
sbb
cmp
xor
pop
loope
mov
arpl
pop
mov
dec
push
or
scas
mov
sbb
loopne
shlb
or
imul
rcrb
test
les
adc
mov
cld
out
sbb
inc
mov
pop
inc
or
rcrb
iret
rcl
pushf
sahf
add
pop
out
or
out
add
aaa
sbb
test
jmp
cld
adc
test
call
out
clc
je
sbb
and
shlb
add
fstl
inc
inc
xor
pop
add
or
push
dec
jmp
adc
cmp
call
sahf
leave
add
xchg
xor
or
dec
fimull
lock
or
cmp
cmp
nop
ret
adc
add
and
cs
cltd
sbb
cmpsb
pop
and
mov
xor
mov
add
sbbb
movsl
or
xor
cmpb
push
push
add
sub
add
pop
ret
and
xlat
addb
js
lcall
mov
or
sub
pop
ss
add
jns
adc
es
pop
pop
aad
fsubl
mov
data16
mov
inc
arpl
imul
push
popa
add
sub
les
cmp
mov
mov
lock
push
or
ljmp
add
xchg
ret
push
fisubrl
pop
jecxz
pop
pop
loop
sub
jbe
nop
jae
movsb
or
push
test
fidivs
jbe
add
xchg
add
cmpsl
pop
pop
adc
jecxz
dec
cmc
mov
xorb
icebp
in
push
call
aaa
rcrb
and
in
es
sub
cld
in
pop
mov
shlb
sahf
out
int
das
scas
sbb
add
pop
jl
shll
dec
push
out
aas
mov
cltd
push
mov
leave
add
out
sbb
xor
cmp
mov
stos
clc
dec
add
pop
loopne
pop
xchg
dec
repz
mov
aam
shl
lock
xchg
inc
test
inc
or
jl
stc
movb
cs
mov
stos
cmc
xor
mov
xorb
pusha
jle
hlt
add
adc
inc
mov
add
jae
xor
mov
repz
mov
and
loopne
mov
cmpb
push
sbbl
test
rclb
or
popf
loopne
push
cmp
xchg
push
rcll
cltd
aad
int3
fidivs
sbb
inc
dec
jo
adc
add
test
lcall
lahf
lret
test
enter
fcom
pop
cmpxchg
or
rorb
inc
sub
scas
test
shlb
sbb
push
and
nop
inc
xor
sbb
push
ret
sbb
inc
cltd
cld
mov
pop
xor
mov
loopne
movsb
xor
std
add
inc
jb
int
je
sbb
ja
lret
pop
xor
stos
movsl
xor
jmp
addr16
inc
leave
and
inc
jb
test
add
adc
call
arpl
adc
pop
js
add
out
dec
fs
dec
pop
adcb
in
add
jg
push
fwait
add
mov
mov
dec
jecxz
div
cmp
mov
and
add
jge
pop
xchg
inc
andl
dec
cmp
ljmp
pop
std
test
insl
ss
dec
add
fmuls
inc
or
jl
adc
add
aam
mov
lret
xchg
or
push
pop
lods
add
push
push
cmp
test
pop
call
xchg
add
js
popa
jae
rcll
xor
adc
dec
outsb
add
test
add
sub
or
cmpsb
sub
pusha
out
pop
add
cmc
mov
sbb
inc
push
mov
dec
cmp
lods
cmpb
in
or
xchg
and
add
inc
dec
cmp
vucomisd
loope
sbb
and
stos
jo
and
fs
dec
fxch
lock
mov
icebp
in
inc
jns
adc
sbb
xchg
testl
jge
adc
xchg
jl
add
insl
ljmp
jo
stc
add
sub
add
mov
mov
movups
andb
inc
push
push
add
fdivl
imul
add
push
stc
into
dec
mov
pusha
cmc
xchg
push
sbb
cwtl
lahf
rcr
testb
sub
push
mov
loopne
cmpsl
mov
add
insl
lods
mov
call
sbb
mov
lahf
fidivrs
add
ret
fisttpll
adc
popf
inc
push
lods
add
mov
mov
xor
out
cmp
pop
ljmp
pop
push
mov
and
adc
cltd
rcll
pop
shlb
xchg
int
lock
enter
and
mov
push
sub
lods
sar
xor
sbb
pop
and
add
ss
test
insb
mov
add
or
pop
mov
cmp
pop
pop
xchg
pop
pop
and
adc
and
mov
or
ljmp
cltd
jb
jmp
mov
repnz
or
je
inc
loope
nop
add
in
xchg
das
aas
and
ret
mov
xchg
lea
in
cld
dec
lods
ror
add
add
or
sarl
inc
adcb
pop
mov
cmp
loopne
and
repnz
cmp
nop
pusha
pop
pusha
xchg
iret
cmpsl
inc
hlt
adc
add
bound
jne
add
lret
mov
nop
rcrb
imul
dec
pushf
add
mov
jg
fistps
add
pop
shl
dec
mov
sub
sbb
cltd
sti
jg
rclb
inc
add
std
and
bound
add
cmp
push
jo
dec
scas
daa
movups
add
mov
addr16
movsl
aas
push
xlat
enter
add
ja
hlt
add
xor
subl
xchg
xchg
test
push
adc
add
cltd
gs
push
xor
mov
xchg
incb
jmp
dec
sub
je
jo
pop
or
out
sbb
cltd
aam
add
test
sub
divb
in
and
add
shlb
pop
insb
xchg
inc
test
cmp
addr16
nop
adc
sbb
add
xchg
cli
push
xchg
add
xor
mov
popf
sbb
jo
inc
push
and
std
xchg
ja
outsb
add
mov
aas
insl
jne
add
inc
add
inc
dec
insb
and
std
pop
cwtl
or
dec
add
icebp
xchg
add
popa
mov
popf
mov
xchg
jle
or
popf
xchg
cmp
mov
ljmp
sbb
jl
testl
or
pop
filds
add
cmp
sub
fcomps
adcb
lret
call
adc
and
add
movsb
jge
add
jmp
and
xchg
imul
sti
add
notb
add
sub
jbe
mov
in
inc
add
or
vmovups
shr
lods
ret
pop
push
sub
cmp
mov
into
pop
pop
shlb
daa
rorb
xchg
int
dec
js
fdivrl
pop
mov
or
mov
fadds
pop
xchg
push
add
das
movsb
lods
or
mov
in
mov
nop
sub
call
xor
or
fstl
mov
add
jne
or
inc
orl
in
stos
pop
xor
sbb
inc
lcall
filds
push
jecxz
jae
movups
movsb
push
add
bound
inc
call
jnp
push
fsubrl
clc
mov
mov
add
andb
or
push
or
cmp
rcrb
inc
mulb
std
scas
jecxz
mov
int
add
sub
pop
enter
add
das
adc
rcrl
in
add
shlw
cmp
sbb
mov
cmpsl
cltd
add
xchg
jb
fnstsw
leave
out
lock
cmc
aas
sbb
cmp
mov
hlt
sbb
pop
ds
push
xchg
mov
rorb
inc
jp
testb
imul
adc
jecxz
add
mov
sbb
push
jae
rorb
lahf
mov
add
out
push
sub
and
add
loop
xchg
icebp
jb
jo
js
lds
inc
outsl
bound
mul
dec
xchg
add
cmpb
xchg
scas
clc
jns
add
ja
jp
or
mov
dec
adc
pop
mov
test
sub
mov
adc
inc
xor
pop
das
popa
rolb
shrl
push
ss
rorl
lock
dec
cmp
inc
sbb
add
dec
and
fnsetpm(287
js
andb
nop
add
dec
sub
fistpl
adc
mov
outsl
rcrb
out
repnz
ret
or
shlb
cmp
and
or
divb
sbb
hlt
sbb
ss
int
clc
js
roll
mov
in
ficomps
icebp
add
mov
dec
cmp
mov
inc
loop
lcall
lea
mov
push
add
and
add
xor
sub
push
pop
fimuls
mov
incb
movsl
cli
mov
jb
test
imul
jle
add
daa
jle
ljmp
mov
arpl
push
popa
xor
sbb
pop
test
inc
out
clc
ror
push
outsb
add
xor
icebp
adc
mov
adc
sbbl
mov
push
pop
addr16
outsb
xchg
lret
pop
lock
xor
flds
pop
pop
and
add
dec
jle
inc
add
int
jmp
mov
mov
dec
cmp
addb
lret
jmp
rclb
add
incb
sub
outsl
popa
pop
sbb
sarb
lods
inc
fs
xor
jmp
mov
das
leave
or
dec
pop
fidivrl
push
mov
and
loopne
add
jmp
add
dec
andl
ss
stc
add
pop
les
add
xchg
xorb
push
into
rorb
adc
and
pop
loopne
xor
dec
rcrb
or
xor
jne
out
in
xchg
popf
adc
dec
add
inc
imul
xchg
cmpsl
or
add
jmp
adc
pop
add
stos
loope
jmp
std
addr16
and
push
jmp
fiaddl
pushf
movsb
jecxz
xor
add
pop
mov
add
ljmp
add
fsubs
rclb
outsl
inc
js
add
cltd
xchg
iret
add
not
sbb
movsl
inc
cld
scas
arpl
rorb
jmp
add
aaa
testl
mov
add
and
arpl
scas
inc
inc
subl
sub
adc
dec
aas
jl
add
jno
add
add
lret
sarl
fwait
add
cmpsl
inc
mov
test
dec
add
inc
mov
pop
incb
mov
xchg
fs
add
je
pushf
femms
mulb
sahf
and
jno
jle
push
sub
in
cmp
lahf
xchg
xlat
popf
adc
xcrypt-ofb
cmpsl
scas
sub
mov
pushf
add
mov
popa
push
jecxz
cli
add
stc
cld
aas
and
adc
insl
outsb
rolb
add
out
out
int
cmp
repnz
jae
xor
fcmovnb
imul
add
icebp
cli
add
inc
popf
adc
sub
testb
xchg
add
lcall
call
dec
push
daa
cld
setp
xor
push
jp
push
pop
xor
inc
popa
loope
or
add
cmp
inc
cmc
sbb
ja
cmpsl
push
or
xor
cmp
icebp
fiaddl
add
or
lret
orb
push
push
lock
inc
adc
call
sub
pop
loop
mov
leave
shrl
ljmp
mov
push
dec
mov
add
mov
pop
add
in
and
adc
je
inc
data16
or
or
movlps
scas
mov
lret
add
mov
dec
sub
and
into
pusha
cli
xchg
mov
and
inc
push
mov
and
mov
test
data16
xchg
jbe
sub
sbbb
add
xchg
pusha
xor
sbb
call
jg
cmp
inc
stos
cmpsl
dec
sub
out
dec
lds
jns
cs
ds
in
inc
jo
push
xchg
cltd
adc
repz
cmp
push
mov
loope
pop
nop
inc
pop
or
push
lret
or
sub
stc
add
pop
and
sysexit
negb
cld
pushf
ds
pop
inc
sub
fs
rolb
popa
jl
cmp
or
aas
pop
xor
or
mov
mov
pusha
pusha
jl
add
mov
clc
shl
fildl
fsubrs
sub
pop
add
mov
xchg
es
cmc
je
movsl
inc
xchg
add
pop
sti
pop
cli
xor
div
sbb
lock
dec
arpl
jno
cltd
adc
or
out
add
scas
das
mov
add
jne
cld
inc
pop
faddl
pop
add
sub
fmul
add
xchg
sbb
fidivl
aam
test
mov
dec
add
mov
jp
sbb
insl
ljmp
mov
loop
or
or
ret
mov
popa
xchg
je
daa
sbb
test
cmp
cmp
mov
js
xchg
pop
lea
add
pushf
bound
add
cmpsl
jo
mov
mov
add
cld
pop
ja
mov
add
out
inc
aas
leave
mov
nop
xchg
add
inc
jbe
xchg
addr16
add
mov
js
rorl
mov
push
cmp
iret
imul
loopne
mov
and
add
inc
dec
jmp
add
flds
push
jl
add
inc
test
sbb
xlat
pop
xchg
add
sub
push
inc
sbb
sbb
mov
pushf
jbe
inc
adc
mov
test
jne
sub
loopne
push
ljmp
jo
pop
inc
mov
jb
and
add
rol
sbb
mov
pop
bound
stos
add
pop
add
xchg
cmp
jecxz
dec
imul
or
loop
sbb
lods
ret
decb
movsb
je
leave
sarb
add
add
xor
and
cmpb
add
and
int
add
pushf
push
inc
mov
xchg
dec
mov
cli
aam
ftst
mov
add
fwait
jne
add
stc
push
adc
repnz
cmp
sub
movsw
adc
cmpsl
and
test
and
ficoml
mov
sub
jmp
int3
cmpsb
clc
std
sub
scas
mov
mov
jae
cmp
orb
in
pusha
jno
insb
in
push
popa
lcall
cmpsl
push
pop
adc
inc
dec
sub
int
push
add
cmc
adcl
fnsave
shrl
aaa
hlt
and
adc
aad
push
pop
add
test
push
and
add
enter
xchg
lods
scas
push
xor
adc
push
jno
cs
iret
and
es
jb
ljmp
mov
cmpsb
cmp
mov
clc
andb
clc
adc
cltd
and
xor
loopne
rclb
scas
ret
push
push
andl
mov
stos
in
cli
jg
or
pop
roll
scas
jge
mov
add
jno
mov
add
cmp
pop
js
and
nop
add
inc
cld
xchg
add
mulps
cmpsb
pop
adc
out
insb
aam
add
ss
adc
sbbb
jle
xchg
dec
std
lahf
pmaxub
out
inc
and
xlat
paddusb
or
stc
test
and
mov
or
and
enter
add
mov
lahf
mov
dec
and
and
pop
testb
mov
lock
addl
call
mov
push
fisubrs
fstpl
adc
sub
stc
adc
cld
pop
sarb
out
push
dec
int
xchg
or
sbb
jo
mov
ja
pop
mov
and
and
lcall
fs
add
jl
test
sahf
xchg
cli
add
insb
mov
pop
or
out
push
cmp
dec
sti
in
fwait
mov
mov
sub
and
jmp
stos
cmc
cli
movsl
adc
aam
sub
lea
insb
out
dec
push
stos
fcmovnbe
test
jae
push
add
mov
cld
jl
add
outsb
popf
test
jg
add
insl
mov
add
adc
out
iret
pop
cmp
push
add
add
jecxz
out
test
pop
or
push
popa
dec
lea
dec
mov
test
add
outsl
pop
mov
xchg
lock
pusha
movsb
mov
push
xchg
cmp
pop
sbb
push
js
inc
bound
ret
test
xchg
clc
inc
nop
push
push
jbe
in
add
pop
rorb
add
out
addr16
imul
add
or
cmp
cmpsb
ja
push
test
popf
std
inc
push
gs
cltd
sub
pop
push
mov
in
lahf
add
mov
into
adc
rolb
out
cmp
xchg
fildl
bound
cli
add
mov
das
je
scas
add
xchg
std
ret
lret
gs
add
pop
rolb
rcrb
mov
inc
xor
outsl
or
scas
add
repnz
sti
pop
xor
fbstp
push
inc
adc
stos
mov
push
das
dec
loopne
add
icebp
inc
mov
xor
shll
stos
insb
add
rorb
dec
sbb
and
pop
lahf
js
adc
xorb
inc
rdpmc
jo
test
cmc
push
push
sbb
ret
push
mov
push
test
xchg
jo
and
dec
ljmp
sub
jmp
jecxz
pop
push
fiadds
and
cmpl
xor
nop
test
in
adc
add
jg
sub
or
mov
mov
pop
jb
hlt
push
add
cmp
ljmp
mov
aas
call
jmp
mov
cmp
test
divb
mov
repz
loope
pop
dec
insl
mov
pop
jmp
dec
add
add
ror
add
adc
movsl
xor
in
add
pop
jae
cmp
mov
mov
sub
pop
stos
lock
jo
or
rolb
xor
clc
pop
or
movsl
jle
mov
outsb
add
daa
pop
xlat
pop
pop
cmp
and
push
cmp
popf
stos
cmpb
jae
add
ds
out
add
add
adc
dec
enter
jne
xchg
fmul
add
out
test
movsb
stos
jecxz
pop
adc
enter
dec
pop
sbb
mov
dec
xor
add
push
inc
push
pop
jns
mov
test
push
add
xchg
inc
adc
test
test
mov
test
repz
inc
lods
cmpsl
add
xor
sub
xlat
js
add
out
adc
shrb
adc
fistps
dec
in
cmpsl
inc
aaa
xchg
add
push
sub
xlat
cmpb
dec
push
aaa
inc
mov
xchg
lcall
aad
pusha
adc
add
pop
add
loopne
sub
dec
mov
push
inc
push
out
in
and
scas
cli
add
xchg
lods
cld
loopne
test
add
dec
repnz
xor
mov
push
add
cmp
movl
pop
pop
shlb
add
insl
ds
pushf
jns
mov
sbb
nop
test
add
sbb
xchg
adcb
lret
decl
loop
add
lds
insl
orb
mov
lret
lock
mov
push
add
inc
std
push
jge
mov
dec
sahf
xor
sub
mov
sub
lds
scas
cs
cmpb
mov
fadds
pop
push
fidivs
mov
aas
mov
lock
ret
mov
or
inc
ljmp
xchg
rol
into
add
mov
testl
popa
in
jge
xor
mov
aaa
dec
dec
sub
push
mov
cmp
xchg
mov
or
sti
pushf
test
pushf
xchg
lea
xor
aaa
out
push
fadds
aam
adc
into
or
cmp
cmc
mov
jmp
addr16
arpl
sbb
push
dec
lahf
jp
lret
sub
fisttpll
jo
add
loopne
xorb
scas
iret
mov
sbbl
lea
psubb
add
pop
imul
test
stos
jg
push
lret
dec
out
pop
jae
jmp
scas
mov
imul
push
pop
or
pop
jecxz
push
add
movsb
movsl
hlt
sti
in
add
scas
xchg
sahf
pop
inc
cli
loopne
adc
inc
pusha
call
sub
push
int3
mov
leave
mov
jae
fwait
mov
stc
pop
inc
call
add
mov
clc
xchg
mov
sarl
scas
ret
add
cmp
cmpsl
sarb
lods
int
push
adc
xchg
sbb
fistpl
in
pushf
fs
mov
loopne
cwtl
xchg
add
mov
test
insl
jno
push
xchg
inc
lret
cwtl
enter
rol
cmc
cmp
sbb
jmp
pop
push
jnp
cmp
data16
pop
xor
pop
into
mov
rclb
aam
sbb
push
lcall
add
mov
and
and
mov
add
and
add
mov
sar
or
push
adc
mov
or
bound
call
xlat
loopne
jae
arpl
pushl
xor
nop
pop
sbb
faddl
test
push
mov
add
add
fsubrs
pop
ljmp
shrb
nop
add
jae
and
add
add
nop
lret
arpl
int
stc
add
xor
xchg
mov
dec
mov
mov
loope
daa
movsb
add
add
arpl
lods
insb
mov
cmp
add
jns
push
or
out
add
mov
mov
je
sti
roll
test
or
pop
in
idivb
ficoms
imul
xchg
add
loop
sbb
or
std
push
and
int3
je
pop
loope
and
pop
mov
call
inc
pop
pop
push
or
flds
repnz
mov
xchg
cmp
ret
mov
adc
jae
mov
pop
ljmp
lret
pop
adcl
repz
inc
andb
lahf
call
inc
push
cwtl
jne
rorl
sub
loopne
loope
or
imul
xchg
fwait
cmp
scas
pop
add
clc
push
addr16
mov
ret
xchg
dec
dec
sub
sarb
pop
out
mov
stc
pushf
stos
clc
lock
sbb
xor
cmp
jle
test
in
xor
sbb
cmp
mov
adc
cmp
repz
push
inc
call
stc
sub
push
xor
sbb
incb
fdivl
outsb
leave
inc
shrb
add
add
mov
inc
loopne
pop
xor
add
inc
into
lret
or
lods
add
mov
insb
adc
push
inc
xor
imul
int
loopne
gs
pop
dec
mov
cltd
roll
sub
test
mov
mov
in
add
mov
in
repnz
adc
add
mov
xor
inc
lret
nop
jns
add
pop
jmp
add
cmp
jae
rcr
or
scas
pop
aaa
loopne
roll
inc
int3
push
outsb
fmuls
lahf
pop
adc
arpl
and
jmp
push
xor
stc
xlat
mov
or
push
dec
jmp
cmp
adcb
mov
mov
rolb
or
in
stos
add
and
ror
nop
test
inc
cmpb
push
add
cld
fldenv
add
mov
fadds
cltd
sbb
into
ret
addr16
pop
mov
nop
or
xor
mov
add
sbb
sub
mov
dec
sub
xor
bound
outsb
clc
dec
repnz
add
movb
jmp
subl
pop
mov
faddp
ret
xchg
sbb
dec
mov
push
fwait
pop
test
pop
mov
add
aaa
add
outsb
lock
insb
pusha
pop
push
or
lcall
mov
xchg
add
sub
sti
sbb
push
xchg
add
xor
ja,pt
shrb
ss
xor
inc
add
cmp
pop
lods
mov
xor
push
nop
mov
subb
pop
inc
shrb
imul
mov
xorl
outsl
call
sbb
mov
add
or
xchg
pop
add
adc
nop
mov
or
rclb
lret
and
mov
imul
testl
xor
jl
or
mov
sub
sti
push
fxch
test
push
sbb
push
dec
pop
pop
add
idivl
mov
iret
sub
je
add
call
pop
mov
rcrb
pushf
sbb
outsl
fisubrl
add
cli
out
add
mov
aam
test
cmpsb
lret
inc
mov
pop
dec
cmpsb
push
mov
inc
sbb
hlt
cmp
popa
or
in
mov
add
push
mov
sbb
pop
outsl
arpl
in
add
stos
or
jecxz
mov
notl
sbb
aam
add
into
push
mov
cltd
add
adc
sti
xlat
jne
cmp
sub
add
adc
mov
rclb
mov
fs
cmc
add
xchg
cltd
sbb
mov
adcb
add
scas
sbbl
popa
or
xor
test
add
dec
loopne
add
fs
sub
popa
enter
in
xorb
mov
mov
lahf
addl
push
out
movsl
jecxz
add
rep
mov
test
shl
jl
add
mov
hlt
inc
push
xchg
ret
rorl
inc
add
fldcw
imul
pop
cmp
add
imul
decb
sub
movsb
loopne
insl
pop
pop
add
add
std
add
sti
aas
inc
add
fcmovu
mov
adc
sti
fs
pop
andl
push
jp
nop
notb
fmull
sbb
jo
dec
ds
mov
or
in
add
mov
das
mov
iret
pushf
jne
push
loopne
add
out
adc
sbb
pop
shrl
or
popa
cltd
add
data16
cwtl
push
stos
ss
inc
lea
cmp
in
adc
popa
jo
test
pop
cmp
loope
cmp
repnz
outsl
cmp
cs
fistpl
std
add
push
scas
les
stos
add
in
push
inc
and
cld
push
add
xchg
punpckldq
jecxz
sbb
loope
pop
loopne
cwtl
or
push
push
xchg
lock
test
loop
cmp
mov
pusha
cmp
out
pop
add
daa
adc
push
leave
xchg
pop
mov
aas
add
loop
jb
sbb
mov
test
bound
inc
imul
scas
sarb
cwtl
out
popa
mov
xor
sbb
cmc
sbb
lea
inc
incb
rcrb
push
lods
rorl
xchg
adc
inc
je
add
xchg
mov
xchg
fs
jo
add
add
dec
pop
inc
js
jp
push
mov
sbb
jecxz
push
ret
pop
lods
stc
stos
push
push
jl
lock
clc
pop
popf
rcrb
add
ret
iret
inc
repnz
loopne
add
add
addl
adc
cwtl
add
lahf
push
ja
cmp
cld
and
pop
mov
mov
dec
lds
test
cmp
mov
fmull
out
cmpsl
add
jecxz
ljmp
ja
repz
lods
imul
push
roll
mov
pusha
adcl
or
pop
aas
fistl
add
fmull
push
shl
mov
cli
xchg
in
scas
add
in
mov
add
into
sub
add
ret
adc
mov
add
dec
push
adc
xor
inc
xlat
fmull
sbb
ja
mov
dec
loop
shlb
test
xchg
test
mov
lcall
fcomi
cmp
jg
mov
pushf
add
pop
imulb
dec
loope,pt
lcall
aaa
dec
leave
addr16
xchg
sub
or
mov
mov
pushf
mov
nop
pop
and
add
outsl
pop
mov
or
add
lcall
jae
xor
cld
push
js
sbb
test
dec
xchg
adc
stc
ror
and
test
aas
insb
cmc
pop
or
andb
ljmp
inc
rclb
push
addb
addb
jne
rcr
pop
inc
or
cmc
loope
jle
xchg
dec
icebp
xor
ja
dec
xrelease
cmp
push
rorb
test
fdivrl
outsb
ret
ljmp
cmp
pop
push
test
loope
fdivrs
add
fsubr
xor
jg
ficomps
sub
scas
mov
mov
mov
aas
pop
pop
add
add
xor
mov
in
pop
sub
std
jbe
add
adc
cmp
mov
movsl
call
ss
loope
sub
dec
shrb
pop
sbb
in
hlt
push
movsb
push
lds
push
pop
popf
sub
jge
add
pop
dec
gs
cs
mov
mov
mull
mov
inc
inc
xorb
push
subb
inc
pop
mov
sbb
popa
dec
mov
add
sar
nop
cwtl
xchg
iret
add
pop
xor
je
mul
add
sub
lret
cltd
pop
xor
mov
call
das
add
in
sub
test
mov
mov
sbb
pop
xchg
sub
rcrb
sub
mov
cli
movsb
add
mov
jecxz
insl
xchg
cld
mov
test
add
mov
mov
inc
stc
jo
mov
out
dec
xor
inc
repnz
stos
roll
cmc
lahf
push
fidivl
pushf
or
leave
hlt
sbb
test
inc
push
push
mov
jbe
add
imul
mov
jmp
ret
adc
nop
and
sub
pop
repz
pop
push
jbe
xchg
and
cli
pop
aam
push
inc
cmp
int3
sub
mov
xchg
mov
mov
push
movsb
jo
add
push
mov
cmp
sahf
and
add
push
cltd
pusha
icebp
xor
and
cmp
add
xchg
out
push
cmpsb
clc
into
add
mov
not
dec
mov
jno
sub
in
rcrl
loope
lret
nop
mov
stos
dec
insl
mov
add
fwait
cmp
add
dec
dec
sub
loopne
cwtl
fsubp
insb
xchg
push
and
jno
xlat
add
nop
cld
pushf
jle
insb
or
ds
popa
dec
sub
psrad
mov
cmpsl
adc
pop
lock
cmp
push
sbb
mov
lcall
cld
cmp
leave
aam
adc
clc
mov
lods
test
add
mov
pop
inc
cmp
loopne
test
faddl
adc
mov
sub
or
sbbl
mov
jne
push
jle
stc
test
add
out
xchg
call
filds
mov
xlat
and
xchg
mov
add
push
xchg
cmpsl
jo
clc
jecxz
sbb
dec
subb
sub
fildll
popf
daa
push
jae
sbb
pop
aad
pop
je
jl
lahf
fst
mov
cmp
pop
and
pop
push
cmp
lret
mov
bound
xor
sbb
cli
jo
insb
clc
cwtl
les
movsl
stos
xchg
stos
sti
xor
adc
pop
out
dec
sbb
inc
cs
subb
nop
xchg
add
outsl
lea
ljmp
jo
add
int
xor
and
add
frstor
enter
lods
scas
insb
shr
scas
add
jle
mov
rorb
imul
mov
fstp
and
xor
mov
sbb
xchg
frstor
jno
and
movsl
add
xor
pop
stos
andb
lret
add
std
jl
fdivrl
push
pop
push
add
sub
add
sbb
add
loop
or
into
dec
xor
lret
shlb
add
add
and
sti
stos
in
rclb
pop
xlat
jg
sbb
dec
add
inc
shlb
add
jne
out
xor
push
and
xor
lea
aas
cltd
in
push
fstl
into
pop
pop
imul
movsb
mov
xchg
das
add
ds
inc
int
push
inc
test
mov
sbb
inc
es
dec
fadds
mov
and
dec
add
dec
movsb
xchg
jge
loopne
adc
cld
insl
add
push
popf
iret
das
js
inc
pusha
sbb
mov
repnz
lds
add
psubw
push
mov
out
add
clc
mov
pusha
pop
sbb
movsl
inc
addr16
adc
mov
ljmp
push
add
js
pushf
lcall
out
pop
sub
aaa
mov
outsl
enter
jmp
lods
xchg
mov
ret
scas
and
orl
push
pop
cmp
or
add
mov
imul
idivl
push
loop
xchg
jmp
outsl
aas
test
sub
scas
rcll
xchg
ret
add
in
xlat
xchg
sbb
cmp
sub
fstpt
add
ret
movsb
push
add
add
xor
push
out
push
cmp
decb
popaw
pop
jae
cmp
cmp
inc
stos
ret
mov
pop
lret
inc
repz
pop
fnstcw
push
pop
adc
or
into
jle
pushf
adc
or
dec
sub
pop
sbb
pop
sahf
bnd
mov
mov
add
jp
mov
mov
inc
add
mov
adc
jbe
nop
cmp
cmc
mov
sbb
leave
scas
out
iret
and
loopne
and
aam
and
dec
add
jb
sub
int
inc
add
rclb
adc
in
jge
mov
inc
inc
fistl
das
stos
pop
add
or
lcall
sub
add
mov
adc
push
das
sub
cs
or
or
mov
cmp
xor
add
xchg
and
adc
clc
clc
movsl
add
mov
cmc
imul
inc
cmpsb
sub
add
jmp
mov
mov
fcomi
sbb
mov
inc
sub
xchg
xor
push
hlt
add
in
fcom
arpl
pop
sub
ljmp
push
push
mov
jp
jl
or
nop
sahf
cmp
popa
add
push
mov
cmp
add
pop
into
aas
and
stos
cld
add
adc
xorl
pusha
out
inc
imulb
add
dec
mov
cli
stos
add
sub
ljmp
add
daa
hlt
sub
loopne
add
and
repnz
aas
push
rorl
cli
jl
inc
dec
sbb
inc
iret
push
lcall
add
add
roll
fidivs
xor
lea
cmpb
out
mov
xchg
mov
xchg
sbbb
add
cltd
cmp
es
jp
fimuls
jg
add
scas
roll
adcb
pop
cmp
pop
out
dec
in
rol
sub
add
sbb
sbbb
loop
jmp
jecxz
push
add
xorb
mov
fs
sahf
cmp
or
loopne
das
jl
add
mov
lcall
cwtl
cmp
add
push
inc
les
stos
or
xor
cmp
jnp
mov
idiv
inc
xchg
add
mov
lods
out
pusha
add
cmc
push
enter
add
and
and
pop
pop
jns
mov
lock
rcrl
repnz
add
ja
add
les
cmp
and
mov
shlb
add
pop
sbb
xor
mov
jle
aad
shlb
or
inc
jns
jecxz
xchg
loopne
add
outsl
sti
mov
mov
or
jo
add
mov
out
dec
push
cmpsl
adc
and
lds
int
out
xchg
cmpsl
pop
cld
add
movsl
fimull
xor
adc
ret
ss
dec
fsts
roll
xchg
mov
repnz
jle
pop
pop
add
cmp
dec
test
inc
and
adc
sub
scas
mov
fistpll
xorb
jns
fildl
inc
mov
aam
sbb
and
lock
dec
scas
add
mov
ja
ret
inc
ret
imul
push
scas
scas
popf
sub
lret
arpl
cmp
outsb
pusha
mov
sahf
stos
mov
xor
add
adc
outsb
ds
inc
sbb
or
sub
mov
pop
pop
ss
shlb
and
push
pop
aas
out
cmp
hlt
ja
add
push
inc
aam
dec
and
pusha
adc
insb
push
jns
jg
cmc
sbb
push
out
xchg
clc
sbb
jns
lods
insl
mov
add
addr16
adc
testb
fiadds
sarb
loope
add
into
js
inc
mov
add
pop
mov
and
icebp
sub
add
or
roll
out
jg
dec
jo
cwtl
pop
setno
push
inc
and
dec
add
dec
dec
cmpsb
add
push
push
sub
mov
ljmp
loope
test
lret
cmc
cmp
into
and
jno
outsb
andb
pusha
xor
sub
pop
outsl
sub
mov
clc
std
sbb
mov
fidivl
pop
into
mov
sbb
and
iret
push
and
lock
mov
mov
jne
adc
daa
and
sets
jmp
add
ja
repz
ds
sbb
icebp
inc
jmp
test
and
scas
or
sbb
insb
movsb
jl
data16
add
stos
mov
mov
and
xor
addb
inc
nop
push
fs
or
test
scas
outsb
pusha
push
mov
xor
sub
cmp
test
jl,pt
inc
insl
aam
sbb
rcrl
jne
inc
xchg
in
add
nop
test
lret
push
in
loope
insb
inc
test
call
arpl
add
mov
inc
cmpsl
push
jp
stc
inc
movaps
subl
imul
xor
jge
xchg
add
orl
ss
push
push
dec
mov
add
inc
stos
aas
dec
aaa
loope
add
sahf
ja
cli
popf
inc
imul
ret
add
dec
iret
int
add
inc
nop
jae
subb
lods
jno
push
add
popf
pop
adc
and
shlb
dec
xorl
insb
dec
inc
fwait
adc
lds
enter
int3
or
push
sub
subl
lret
push
shll
add
sub
add
jecxz
cmp
test
push
cmp
push
pusha
mov
inc
pop
jmp
movsb
add
xchg
lahf
and
inc
cwtl
push
shll
inc
sub
mov
xorl
aam
gs
test
cmpsl
xor
shll
mov
shlb
sbb
lahf
out
jo
sub
mov
dec
pop
aaa
sub
rcrl
out
imul
xchg
dec
out
loopne
subb
nop
shr
jl
cmpsb
cwtl
in
push
push
sbb
rorl
in
sub
mov
xor
cmp
invd
in
andl
push
cmp
mov
test
cwtl
adc
and
ret
adc
mov
add
sbb
fadds
and
rcrb
mov
rolb
adc
in
xor
and
outsl
push
aad
call
test
ret
adc
dec
push
jae
mov
jecxz
sbb
sahf
lds
and
xor
lcall
and
mov
sbb
inc
adc
mov
or
fidivrl
ret
cltd
call
sub
add
sbb
stos
mov
lods
xor
jbe
rolb
inc
inc
or
cli
or
aaa
xchg
xchg
loop
mov
test
pop
push
pop
insb
packsswb
add
into
shll
nop
xorl
inc
aas
xlat
jl
addr16
cmp
test
popa
aam
into
daa
add
fbld
and
xor
mov
mov
into
dec
pop
pusha
add
xor
imul
lock
movsl
shr
jecxz
or
xchg
dec
mov
sub
adc
es
inc
imul
mov
pop
mov
and
mov
mov
adc
push
inc
xchg
push
insb
arpl
aad
in
push
rcrb
test
pop
push
leave
add
loop
mov
mov
mov
movsb
cmp
xor
adc
and
sbb
adc
mov
sahf
fstps
mov
in
lods
push
mov
and
dec
out
andb
add
lret
mov
pushf
xor
cltd
jno
mov
cltd
sahf
xor
aad
mov
cli
jle
cli
les
push
adc
add
cmpsb
mov
inc
push
lock
sti
popa
cmpsl
mov
cltd
dec
shll
or
pop
and
mov
stos
andl
adc
mov
out
enter
inc
adc
cmp
add
cmp
imul
fs
push
sbb
inc
mov
fmull
addb
push
es
sbb
shr
push
sub
gs
popa
xchg
jo
sbb
mov
jns
xor
stos
aam
push
sub
fsubrl
jp
add
and
and
std
lret
fsts
subl
and
xlat
xor
pop
cwtl
fcomp
mov
pusha
mov
cmp
lcall
cmp
fmulp
pop
inc
int3
jo
mov
ret
fists
in
mov
add
add
cwtl
neg
hlt
loop
xorl
inc
add
xlat
mov
lret
jecxz
aam
test
in
inc
insb
ds
adc
sub
xchg
add
sbb
dec
int3
adc
or
lahf
xor
fs
mov
pop
adc
subl
xchg
cmpl
mov
fadds
test
mov
mov
subb
movsb
and
out
jl
inc
lods
jge
pop
cmpsb
addb
repnz
jo
xchg
inc
adc
xchg
jmp
cmp
jb
fcomp
dec
push
ds
shlb
cmp
inc
test
adc
lret
rorb
mov
pushf
test
lahf
xchg
add
mov
dec
add
js
bnd
cmpsb
stc
jle
add
std
les
inc
sbb
je
jl
mov
imul
rol
and
in
adc
stos
mov
call
dec
jge
rcrb
nop
fsubrs
dec
fcoml
inc
aad
dec
cmp
mov
inc
jbe
hlt
sbb
clc
out
ret
xlat
dec
incb
lret
pop
jg
sub
movsb
add
jg
out
sbb
std
or
nop
push
mov
fisubrs
and
pop
subl
test
add
loopne
sbb
in
sub
jbe
movsb
xlat
dec
inc
inc
je
mov
pop
pop
add
mov
out
pop
xor
and
jnp
push
pushf
adc
daa
jns
fildl
xorl
nop
or
faddl
jne
add
and
nop
pop
add
dec
adc
cmp
jle
add
jne
adc
es
lds
jne
add
ret
push
insb
je
in
sbb
xchg
push
cltd
or
call
js
jl
shrl
fsubrl
dec
loope
pop
in
add
fxch
in
test
and
outsb
push
adc
rolb
sub
add
les
and
popa
cmp
add
jl
rcll
hlt
hlt
ret
push
xchg
push
cltd
es
loope
and
xchg
aad
jno
inc
pop
lds
cmc
sbb
dec
test
add
and
rorb
and
push
push
shll
add
sub
push
add
jg
add
popa
subb
inc
stc
jne
add
lds
adc
test
dec
rcrb
jbe
add
add
sbb
dec
loopne
add
xchg
add
sub
mov
inc
jle
jne
add
mov
xor
lods
es
pusha
repnz
lahf
add
ja
sbb
mov
adc
push
loopne
add
andl
or
pop
rclb
add
xorb
stos
shlb
dec
cmc
popa
nop
lods
daa
aaa
add
shll
loope
pop
sub
adc
inc
rcll
movsb
inc
cmp
add
mov
dec
les
pop
jno
or
jmp
cmc
popa
lods
shrb
nop
pusha
jecxz
add
cwtl
and
xor
add
in
arpl
add
rcr
jp
lods
jnp
out
bound
add
inc
test
add
or
enter
inc
add
es
mov
lods
imul
cmp
jg
add
mov
aas
and
xchg
xlat
jno
dec
push
sbb
cld
pushf
pop
and
adc
divl
push
loop
nop
mov
push
cltd
mov
cmpsb
cmpsl
mov
sbb
je
lea
xchg
adc
pop
loopne
fs
ss
rclb
mov
jae
mov
das
and
ds
je
xchg
adc
repz
and
mov
leave
xor
cmp
add
shlb
lahf
imul
add
stos
push
test
xchg
inc
or
pusha
sbb
fadd
movsb
sbb
sbb
mov
ret
xlat
pop
mov
hlt
jmp
add
in
push
mov
add
les
rcr
sub
iret
jae
push
mov
je
movsb
push
or
pusha
fsubs
jl
mov
in
roll
rcl
pop
cld
or
cmp
imul
daa
mov
pop
add
xor
pushf
aas
and
jp
push
pop
inc
stos
dec
mov
pop
ret
shrl
and
add
sahf
mov
dec
test
ds
sbb
leave
pop
mov
xchg
adc
sub
pushl
shll
leave
add
pop
lret
adc
cli
ja
filds
push
out
dec
or
push
pop
repz
inc
xor
in
test
dec
adc
ret
das
test
lods
out
mov
cli
inc
add
push
movsl
nop
lahf
fcmovne
push
mov
test
or
pop
cwtl
movsb
imul
lock
pop
push
nop
movb
sti
int3
test
dec
es
bound
arpl
jle
hlt
lahf
and
aam
test
in
pop
mov
adc
les
mov
dec
fwait
lds
or
sbbb
jl
subb
cmp
jge
cmp
hlt
sub
cltd
ja
pop
clc
enter
add
inc
stos
test
push
inc
fwait
jle
dec
cwtl
push
lods
flds
or
jns
call
je
mov
cmp
cmpsb
cmc
fdiv
lcall
jmp
out
add
push
das
adc
add
cmc
pusha
dec
and
pop
lock
add
in
lret
cmpb
and
mov
pop
or
roll
ljmp
enter
mov
dec
sbbl
add
pushf
mov
xchg
ret
in
das
push
cmovs
adc
pushl
sub
adc
subl
shlb
out
loop
je
and
mov
xchg
mov
jne
scas
mov
pop
daa
es
xchg
jo
pop
or
ret
mov
int
leave
xor
dec
aam
push
cmpsb
mov
orl
stos
sub
leave
mov
dec
fcmove
test
dec
testl
jl
ret
daa
sub
jnp
in
adc
cmp
xor
dec
jns
ljmp
sub
mov
xchg
push
insl
inc
sbb
dec
inc
inc
popl
das
dec
icebp
arpl
adcb
mov
hlt
test
adc
rol
adc
sub
push
pushf
les
jecxz
xchg
mov
add
xor
push
inc
push
cmc
hlt
and
add
cmpsb
call
inc
pushf
xor
loope
jnp
cmp
sub
xor
inc
jns
or
test
rorl
and
hlt
scas
loopne
sbb
test
jo
aad
xor
xorl
rclb
mov
enter
pop
aad
clc
adcb
pop
adc
mov
sbb
cmp
idiv
push
orl
mov
ja
icebp
decb
into
int
inc
lret
insl
test
out
adc
movsl
das
xor
lock
nop
adc
add
push
mov
add
fldl2e
mov
jp
jecxz
int3
mov
cmp
leave
shlb
movsb
jbe
adcb
mov
sub
pop
negl
inc
cmpb
lock
jb
inc
add
pop
xchg
jne
fdiv
add
and
mov
jns
cmp
cmp
arpl
enter
fisubl
mov
dec
add
pop
arpl
cmp
cs
pusha
xchg
cli
inc
sbb
ss
stc
call
inc
test
jg
pushl
xchg
pushf
test
inc
fbstp
and
add
inc
or
inc
push
in
in
aad
pop
and
mov
fcoml
fcmovnu
push
rcll
sarb
scas
add
inc
mov
shrb
jbe
xchg
lods
shlb
add
xor
inc
mov
test
and
mov
xchg
push
lods
inc
push
test
cmp
inc
lock
jl
lret
enter
pop
cwtl
jo
adc
mov
lcall
xor
push
xchg
mov
mov
jno
loope
rcrl
xchg
mov
dec
sti
or
and
xor
sub
test
mov
add
mov
addr16
or
sbb
sub
ds
mov
rclb
cmpsl
sbb
mov
loopne
loop
hlt
andb
insl
mov
jg
sarb
cltd
add
adc
jmp
popa
lods
sub
and
sub
popf
adc
mov
faddl
bound
sub
pop
pop
cmc
add
lcall
xchg
xlat
adcb
rorb
push
ds
or
push
jo
popa
rcrb
icebp
sbb
enter
arpl
pop
mov
clc
out
push
sub
or
inc
test
lea
or
pop
cltd
les
add
ror
mov
dec
nop
sub
push
jg
push
adc
mov
aas
sbb
out
sbb
js
pushf
lret
cmpsb
lahf
jecxz
or
sub
add
xor
xchg
cmp
int3
jecxz
leave
xchg
and
bound
test
in
push
insb
pusha
mov
xor
add
xor
call
in
gs
test
repnz
loope
pop
stos
out
dec
push
pop
movsb
jno
push
jne
jp
xchg
adc
push
lock
inc
and
imul
sbb
cmp
dec
cltd
les
lahf
cli
insb
dec
lret
adc
popa
mov
ss
inc
xchg
aas
clc
add
stos
add
fsubrs
popa
nop
dec
fmull
pop
pushf
dec
les
pusha
cmp
aad
jo
pop
lahf
adc
imul
loope
lret
adc
in
jno
add
pop
cmc
fisttpl
sbbb
mov
addb
dec
jg
sbbl
mov
mov
imul
pop
xchg
rcl
and
sbb
inc
inc
inc
dec
inc
mov
adc
out
mov
mov
sahf
sbb
test
jno
adc
xor
mov
add
jle
or
sub
mov
shrb
arpl
sbbb
loopne
xor
mov
mov
lcall
mov
out
and
in
and
das
es
test
sbb
adc
ljmp
into
add
push
pushf
fcmovnbe
and
fsts
and
decl
test
add
xchg
mov
mov
movsl
mov
loope
add
loop
mov
xchg
fisttps
enter
adc
and
cmp
add
or
test
push
xor
pusha
jle
test
cmp
and
add
nop
rcrb
flds
mov
inc
add
sub
es
lahf
adc
add
nop
or
cwtl
ja
es
shrb
out
clc
ds
dec
add
rorb
and
mov
stos
adc
and
pop
cmp
xchg
les
sub
mov
loopne
xchg
adc
push
inc
xor
sahf
cli
sub
imul
mov
punpcklbw
xorl
inc
imul
test
jne
enter
or
dec
xorl
fcompl
cmpsb
shr
add
xchg
pop
mov
mov
stc
subl
mov
push
xor
mov
dec
jno
lcall
inc
xchg
add
mov
popf
and
es
insl
in
test
mov
jns
loopne
push
fucomi
or
xor
cmpsl
lods
rcr
loopne
pop
adc
and
pop
cmp
push
mov
into
jno
es
mov
dec
daa
lret
int3
test
hlt
jge
call
cmc
ss
pusha
insl
loop
cmpsl
dec
mov
pop
bound
inc
cmpsl
call
jno
cmp
xchg
xor
andb
mov
cld
mov
fsubs
in
fs
mov
mov
lahf
sbb
notb
or
sbb
lahf
inc
add
addb
dec
icebp
mov
test
popa
js
and
jbe
cmp
add
shrl
leave
pop
fsubrs
mov
mov
das
lcall
add
adc
bound
sahf
js
sbb
aam
scas
dec
cltd
shrb
shlb
aas
add
imul
adc
dec
xor
lahf
mov
mov
or
test
and
push
cld
mov
or
xor
sbb
adc
pusha
scas
xor
notl
lea
lret
fcoms
out
sub
inc
inc
xchg
inc
mov
in
jmp
sbb
pop
int3
mov
jae
add
push
mov
jo
cmp
notl
xor
andb
add
jmp
addr16
subb
jne
push
lret
cmp
jl
push
inc
sbb
sub
aam
ret
and
mov
jae
pop
int
stos
cmp
and
or
loopne
sub
fs
fnstsw
adc
sbb
movsl
or
lret
xor
test
dec
addr16
enter
adc
dec
imul
sbb
inc
mov
or
add
fsubl
daa
xchg
daa
insb
add
sbb
push
rcl
rorb
cmp
into
push
inc
lods
mov
test
js
nop
jo
popa
aam
or
subl
jmp
adc
pop
rcr
xchg
test
add
int3
popa
into
cmpsl
dec
and
rcr
insb
cmpsb
into
aaa
cmp
imul
sahf
addb
and
jp
aad
sti
push
fimuls
xchg
mov
inc
mov
inc
cmp
mov
jns
inc
lock
subb
lret
or
push
cltd
mov
inc
movsl
js
ds
ret
sti
lods
inc
xchg
jnp
aad
inc
cmpsb
add
fnstenv
dec
and
xchg
loopne
jle
pop
mov
daa
sti
mov
cmp
lods
dec
cs
test
pop
dec
sarb
cltd
lret
add
insl
es
je
inc
aas
in
iret
mov
mov
mov
ja
pop
add
inc
imul
sub
mov
out
popa
sbb
ja
fs
mov
stos
scas
add
insb
lock
rcll
sub
pushf
shrb
mov
jg
in
adc
cltd
pop
jecxz
sbb
jge
add
push
pop
mov
jp
mov
push
andl
sti
fildl
fdivrs
add
push
iret
filds
imul
js
inc
mov
aam
mov
add
mov
imul
loop
mov
rcrl
sbb
inc
push
add
cmp
or
test
sbb
lock
add
daa
and
inc
add
add
jl
mov
cltd
cmc
push
fists
sub
pop
push
shrb
js
gs
inc
rcl
aad
fs
mov
jg
add
subl
jge
add
cmp
and
dec
pop
mov
adc
pop
and
sub
or
add
movsl
hlt
xor
sub
in
add
sarb
jl
mov
adc
add
jp
imul
add
les
shll
xchg
call
das
iret
or
sarb
add
push
mov
add
inc
pop
cld
rol
sar
lods
rcrb
xor
stc
add
in
aad
mov
loopne
xor
int3
sub
jb
sub
xorl
and
sub
and
dec
jnp
sub
fnop
sub
int
inc
sahf
bound
jns
clc
popf
or
cmc
imul
add
and
loop
shl
push
jae
loopne
call
jne
lret
pushf
test
push
add
lock
popa
cld
dec
pop
pushf
inc
ljmp
stos
sbb
push
or
jnp
or
jl
adcb
mov
data16
int3
sbbb
test
and
std
enter
push
pop
sbbb
lret
rclb
cld
test
ret
hlt
xor
mov
repz
inc
mov
movl
int
out
add
stos
push
lods
push
imul
and
inc
add
pusha
sbb
cmp
push
int
add
aaa
rcrl
nop
rorl
xor
mov
mov
sbb
enter
pusha
stc
loopne
push
or
mov
pop
adcb
sbb
leave
pop
dec
adc
aaa
adc
imul
test
push
pminub
push
lock
mov
fs
add
jnp
iret
cmpl
jg
icebp
aad
sub
lret
shll
test
pop
bound
add
lods
jmp
insb
rclb
movhps
imul
mov
sbb
les
and
mov
cltd
mov
roll
pop
loop
hlt
test
add
push
stos
call
sub
es
lahf
rolb
repz
dec
xchg
sub
add
rorb
jno
lock
jl
add
iret
loopne
adc
out
hlt
ret
add
pop
fdivrs
xchg
add
int
add
add
and
xchg
jae
jl
mov
cs
fisubl
cmc
xchg
pusha
add
roll
inc
mov
ja
fdivr
add
xchg
xor
dec
scas
call
mov
mov
call
je
cmp
fs
int3
repz
cltd
xorl
jecxz
les
flds
xor
stc
jae
mov
lea
or
pop
sub
add
rolb
fadds
out
sarb
das
mov
jl
sti
and
hlt
sbb
xorb
jle
lock
repz
shl
pop
sub
js
mov
add
icebp
inc
mov
push
or
subl
jb
mov
or
jl
fidivl
je
or
pop
rorl
push
les
sbb
jo
lea
pushf
or
pusha
orb
adc
and
arpl
add
test
shlb
and
mov
es
pusha
or
int3
add
andb
add
into
and
movsl
out
mov
mov
add
enter
inc
cmc
rorb
jg
cmp
lret
pushf
cmp
or
subl
scas
inc
jl
and
test
cmp
mov
pusha
and
pop
test
inc
push
sbb
call
add
add
pushf
pop
add
in
and
je
cmp
arpl
add
inc
shrb
sar
add
aad
adc
gs
sbb
sbb
adc
pop
movsb
fxtract
rorb
mov
rcr
adcb
aam
movsb
test
or
adc
mov
inc
add
add
inc
push
mov
sbb
imul
aad
inc
pushf
adc
jns
push
popf
lods
lock
push
pop
cmp
rclb
push
shl
inc
push
arpl
incl
mov
mov
sub
jns
lret
dec
mov
andb
xchg
ror
sbb
test
movl
int
push
aaa
mov
mov
xchg
sbb
cmp
inc
subl
stc
pcmpeqb
imul
rcr
lds
add
cwtl
push
cmp
dec
out
pop
ljmp
or
mov
cmp
and
pop
adcl
div
mov
pminsw
fs
andb
sbb
push
jle
or
jl
outsb
fdiv
testb
sbb
xchg
mov
sub
es
push
insb
jo
ja
add
mov
adc
dec
pop
adc
in
add
fsubl
pop
pop
sub
pop
push
insl
sarl
lods
add
int3
out
repnz
dec
add
jp
push
sti
loope
add
jg
xchg
inc
mov
and
jne
mov
mov
adc
mov
add
sahf
cmp
pusha
and
outsb
mov
push
nop
daa
data16
add
pop
aas
mov
popa
add
sbb
mov
add
orb
add
fsts
imul
and
call
add
stos
cmp
das
pop
xchg
xor
or
add
insl
lret
lret
pushf
sbb
jo
jecxz,pt
cmp
inc
push
push
cltd
mov
ret
jne
inc
or
imul
cmp
jg
xor
pop
and
ss
or
add
imul
push
mov
nop
dec
jp
xchg
sbb
add
inc
inc
push
mov
jo
adc
andl
repnz
rcrb
adc
sbb
les
loope
inc
fs
mov
mov
push
mulb
fmull
out
lcall
das
sub
and
fbld
mov
sbb
adcb
adc
lock
sub
leave
lret
push
jo
ja
add
pop
cs
std
or
je
add
add
push
daa
aaa
jne
adc
or
sub
rcr
movups
cmp
and
cmp
pop
sahf
push
into
test
shr
movsb
outsb
lret
xor
sub
addb
xlat
shl
mov
loope
pop
rclb
imul
and
test
jne
inc
and
pop
pushf
idivb
mov
xchg
inc
mov
lock
sbb
stos
sub
add
fidivrl
add
imul
addl
test
xorb
outsb
add
xor
dec
add
idivb
adc
cmp
movsl
mov
push
in
xlat
clc
sub
and
dec
or
pop
mov
inc
rolb
enter
mov
lea
in
les
or
push
nop
lret
pop
xor
sub
nopl
jns
mov
add
cmp
jmp
pop
call
add
fucomp
test
test
mov
mov
fstps
js
xchg
sbb
pushf
iret
sub
stos
sbb
test
xorl
fisubl
add
and
mov
sub
sbb
mov
push
xchg
dec
add
movsl
daa
outsb
bound
push
lahf
jge
push
cmp
shrb
sub
inc
insb
cmp
lock
cld
lahf
add
int3
jp
sbb
lock
nop
cmp
sbb
cmpsl
mov
sub
iret
lods
repnz
popf
ret
lahf
and
dec
test
jge
pop
sub
popa
daa
mov
mov
imul
loopne
shll
shll
mov
and
sub
ret
jne
faddl
add
dec
ret
add
popf
add
stos
jnp
push
out
jo
nop
sbb
add
and
shr
add
mov
push
jle
jno
cmp
add
mov
lret
sbb
cmp
jbe
out
add
cli
push
or
mov
mov
jbe
insb
out
push
xchg
add
dec
hlt
push
dec
in
insl
and
cmp
out
push
cwtl
fsts
dec
add
push
sbb
inc
push
mov
loopne
pop
jno
pop
sbb
jns
add
mov
leave
jle
pop
aaa
stc
fsub
fcoml
pop
in
push
loope
sbb
add
std
repnz
add
int
ds
ficoml
in
mov
add
hlt
mov
addl
cmp
cmpsl
sub
sub
ds
sub
shrb
outsb
mov
add
enter
sbb
shll
pop
cmp
add
in
xor
inc
sub
push
lret
push
adc
fcoms
out
lret
call
mov
dec
add
xchg
cltd
or
lds
push
cs
shl
lret
subl
rolb
xor
test
xor
mov
jbe
cld
lock
fwait
stos
and
sub
ljmp
call
mov
push
jl
stc
pop
jp
fdivrs
call
lds
andl
jecxz
icebp
add
mov
js
daa
push
rolb
enter
rol
pop
insb
out
mov
lock
xor
xchg
xorl
clc
aad
out
adc
cmpxchg
pushf
sbb
cwtl
push
pop
adc
and
nop
adc
jl
jo
xlat
jmp
fcmovne
rcrb
dec
xor
adc
call
dec
int3
subb
and
xchg
sub
mov
bound
aaa
sbbb
out
in
dec
xor
mulb
lret
es
loopne
sbb
orb
mov
pop
xor
push
test
cwtl
lock
mov
pop
mov
add
sub
xchg
adcl
fmull
inc
cmpb
pop
mov
rorb
out
fmuls
pop
push
sbbb
aad
xchg
mov
sub
or
mov
shll
in
movsb
data16
xorb
ds
das
imul
jge
mov
add
sbb
add
adc
push
and
stos
push
or
shll
lods
sub
jnp
add
push
mov
dec
and
mov
lds
fs
mov
enter
sub
xchg
sub
xchg
add
sbb
add
cmp
fisttpl
inc
jmp
xor
popf
adc
xor
test
addl
test
adcb
lock
mov
xchg
mov
dec
mov
adc
push
jo
jne
jecxz
mov
mov
lods
dec
cmp
and
adc
mov
pmulhw
push
add
jae
es
in
jbe
add
mov
mov
leave
sbb
mov
adc
cwtl
pop
push
shlb
les
fiadds
loopne
mov
mov
push
int
sbb
mov
nop
mov
je
lea
lock
jo
loop
pop
mov
sbb
cmp
subl
add
jno
mov
stc
ret
mov
call
in
push
enter
sbb
add
pop
test
mov
lods
push
mov
inc
cltd
or
sahf
arpl
and
out
mov
dec
stos
dec
lret
rclb
or
inc
lock
call
cli
ret
cld
adc
push
pop
jne
lcall
scas
xchg
cmp
cmp
fadd
idiv
icebp
idivl
inc
enter
lret
rcll
mov
arpl
sbb
push
aad
add
mov
jecxz
outsl
cwtl
hlt
jg
or
xchg
adcb
sbb
popa
lret
adc
push
xor
and
jle
ret
ficoml
mov
les
iret
mov
dec
subb
and
scas
mov
xchg
out
sbb
in
pop
jp
stos
xchg
jl
pop
mov
jl
enter
icebp
add
sub
sbb
cld
hlt
pop
dec
pop
push
add
push
add
int3
cmp
and
pop
cmp
inc
shll
fistpll
pop
ja
lahf
adc
rcrb
xchg
cmp
out
add
xchg
add
or
or
sbb
sub
repnz
jmp
and
xchg
int
stc
cwtl
inc
push
pusha
push
clc
jecxz
add
or
call
nop
scas
push
lods
divl
and
ljmp
or
xchg
jb
push
test
stc
adc
inc
mov
int3
mov
out
add
mov
sbb
xchg
dec
pop
dec
pop
test
inc
imul
fmuls
pop
cmp
and
ljmp
stos
test
in
sbb
sbb
imul
stos
rol
loop
test
fucom
mov
fists
mov
sub
dec
fcomps
adc
test
add
and
je
mov
and
and
add
hlt
stos
iret
sub
fsubr
rolb
loop
sub
imul
jmp
xlat
adc
clc
mov
inc
repnz
add
aas
lret
cmp
and
add
adc
add
das
in
loope
dec
aad
sbb
push
nop
mov
movsb
lock
andb
sti
adc
xchg
mov
mov
add
les
sub
mov
jns
cwtl
cld
and
dec
or
cmpsl
fs
pop
scas
or
movl
or
mov
xor
andl
xchg
cs
add
bound
sbbb
lahf
loopne
imul
cwtl
xchg
mov
xchg
mov
pop
enter
fiaddl
push
lods
lret
xchg
in
fistl
cld
mov
add
fs
loopne
lcall
mov
cmp
andl
xlat
adc
push
lods
test
pcmpeqd
xchg
scas
xchg
fildl
mov
add
mov
lds
xor
mov
cmp
fst
test
fdivl
push
es
add
lret
add
add
and
es
sub
sub
pop
mov
int
gs
inc
movsb
dec
adc
ds
js
jo
pusha
mov
cltd
mov
pushf
and
mov
test
ret
add
iret
int
and
add
lods
lret
xchg
hlt
call
cmp
addl
fisubs
nop
sahf
movsb
les
lock
mov
add
or
cld
mov
inc
adc
rcr
sbb
sbb
and
test
add
or
stc
loopne
lret
adc
shr
aam
sub
lods
or
and
pop
xor
lds
daa
mov
sub
clc
inc
pop
mov
and
test
push
dec
and
mov
ja
jns
jge
xchg
rclb
in
and
cmc
or
mov
outsl
movsl
imul
jno
add
je
mov
jp
les
push
mov
mov
push
gs
enter
push
insl
xlat
dec
in
loopne
add
or
jo
jae
cmc
out
jne
imul
or
push
stos
mov
xchg
xor
mov
add
arpl
dec
push
outsl
dec
imul
add
and
nop
sub
inc
adc
enter
jge
add
sub
imul
sbb
es
or
add
add
sbb
sub
movsb
test
and
add
pop
add
daa
sub
in
dec
xchg
xor
mov
call
add
lret
lods
cmpb
and
aam
add
loopne
outsl
lret
cmp
add
jge
sahf
xchg
inc
lea
into
jle
add
sti
cltd
lahf
insb
mov
mov
sbb
fld
imul
arpl
pop
mov
mov
or
addr16
adc
push
int
add
mov
add
cmc
inc
sarb
add
ljmp
les
cwtl
outsl
dec
aas
add
mov
add
pop
ja
fs
outsb
add
adc
cmp
add
sub
fwait
nopl
in
in
imul
stc
cmp
mov
icebp
add
xor
ficoml
add
shlb
cli
mov
arpl
jne
mov
enter
mov
inc
notl
sub
out
js
and
and
sarb
cmp
pop
mov
push
mov
es
xchg
add
xchg
daa
test
adc
jae
pushf
sbb
mov
mov
mov
ds
xchg
andl
push
sbb
bswap
fs
loopne
shl
lret
hlt
jno
fadd
cmp
and
add
cwtl
repz
call
or
add
sbb
jae
and
add
lahf
push
sbb
lahf
cbtw
inc
mov
mov
movsb
pop
mov
gs
or
inc
mov
insl
push
dec
stc
push
mov
mov
inc
push
xorl
std
pop
andb
daa
mov
mov
mov
cmp
and
jmp
pop
mov
cs
movsl
sub
enter
loope
jg
inc
subb
or
cli
adc
sbb
popa
aad
inc
pushf
inc
scas
ret
add
mov
xchg
popa
dec
mov
sub
add
imul
imul
sbbb
adc
pop
test
jp
mov
jle
pusha
inc
adc
pop
add
xrelease
subl
clc
inc
fucomip
pop
inc
mov
adc
jmp
push
pop
cwtl
lods
adc
test
shll
shl
mov
fildl
rorb
cwtl
nop
mov
aas
je
or
int
adc
bound
sbb
lret
rcrb
int3
psubusb
hlt
xorb
sub
inc
js
les
inc
arpl
cli
test
add
fistpl
push
adc
and
hlt
jle
loop
rol
xchg
xor
mov
xchg
cmp
sbbb
xchg
pusha
daa
movsb
test
inc
adc
sbb
ds
jg
jne
sbb
sti
cmpsb
popa
enter
mov
rolb
lods
jg
popa
pop
and
push
inc
inc
adc
add
mov
jno
or
mov
push
push
push
mov
addr16
push
arpl
les
sbb
inc
mov
and
fstpt
pop
repz
mov
and
sub
dec
push
ljmp
imul
inc
add
inc
iret
shll
add
lret
push
lret
mov
popa
xchg
sahf
inc
aad
and
pop
ret
mov
daa
mov
xchg
cwtl
sbb
add
or
jns
cli
out
lods
add
dec
push
xchg
into
loop
mov
xor
leave
shlb
add
pop
mov
cmpb
mov
lods
scas
push
jbe
pusha
adcb
xchg
sub
or
lds
push
push
and
test
add
mov
sbb
mov
and
add
loop
fists
add
aam
rcll
popa
mov
and
and
add
int
push
xchg
push
adc
dec
mov
jo
nop
in
enter
sbb
sbb
push
pop
popa
xor
add
lret
cmc
clc
in
sub
clc
mov
aas
push
xor
pop
data16
rol
stos
xchg
mov
pop
mov
sbb
repz
cmp
and
inc
clc
pop
cmp
mov
lahf
rcrl
jp
add
fwait
sbb
loope
loop
mov
mov
add
loope
lock
xchg
mov
cmp
lods
test
pop
hlt
push
test
lret
pushf
dec
test
sub
add
add
cs
mov
push
xchg
xor
adc
dec
and
sub
mov
push
jmp
inc
je
add
notl
mov
adc
fsts
mov
mov
mov
push
cmp
mov
adc
and
call
aam
mov
and
add
adc
iret
add
mov
pop
pusha
movsb
inc
shrb
and
cmc
add
int
xor
mov
cmpsl
fwait
mov
pop
sub
sti
rcl
imul
adc
ss
xor
mov
pop
fcoml
inc
orl
in
cld
mov
add
jae
mov
int
jge
fs
adc
andb
insl
dec
fistps
xchg
das
pop
cltd
add
jne
or
jae
sbb
add
fimuls
in
jl
jge
add
or
dec
and
or
lret
cli
mov
mov
cwtl
cli
addb
xor
mov
fisubrl
nop
pop
jecxz
lret
jno
dec
jns
jns
mov
add
inc
sub
cwtl
mov
mov
add
dec
test
mov
inc
push
and
jnp
js
push
sbb
push
lock
adc
mov
jecxz
fdiv
cmp
loop
add
in
lcall
add
in
out
sbb
repnz
icebp
mov
dec
in
cmp
xchg
xor
sbb
lahf
xchg
mov
or
or
fcoms
pop
ret
pop
inc
jnp
add
sub
inc
jnp
jae
in
push
pushf
mov
shl
add
mov
loop
and
dec
std
push
add
sub
adc
insb
cmpb
dec
add
cld
add
stos
push
mov
adc
lds
dec
dec
incb
jno
inc
and
push
xor
out
dec
add
inc
add
jge
les
lcall
dec
lret
add
sti
jae
cltd
push
lods
das
and
imul
push
das
nop
mov
sub
jbe
repnz
aad
sbb
enter
mov
out
push
test
shrl
sbb
popf
call
outsl
int
xchg
das
stos
pop
nop
fs
icebp
clc
add
loope
into
lock
outsb
mov
dec
add
test
inc
mov
xchg
gs
xorb
loopne
add
shll
inc
fsubl
adc
push
and
outsb
pop
mov
add
nop
inc
sub
add
in
roll
and
aam
fildl
dec
hlt
mov
enter
inc
add
lods
jl
inc
or
mov
jns
ret
xchg
mov
and
push
sbb
sbb
sub
insb
filds
dec
add
out
mov
loope
pop
clc
or
les
adc
shrb
xchg
jno
cwtl
test
les
mov
je
and
xor
stos
inc
mov
sub
adc
mov
movsl
loopne
out
jnp
add
mov
lds
sub
hlt
dec
stc
test
jo
ds
ret
flds
sti
sub
add
lcall
aam
daa
push
icebp
lock
add
mov
add
mov
xchg
cs
dec
mov
push
stos
lret
shlb
outsl
dec
clc
add
daa
cmpsl
shl
fcomp
leave
add
hlt
stc
loopne
add
mov
pushf
mov
pusha
lret
inc
xorl
dec
call
inc
mov
hlt
add
dec
jmp
jae
fwait
shl
or
push
arpl
mov
add
shlb
and
ja
sti
pusha
sbb
cwtl
cmpsb
fadds
in
ret
outsb
scas
pop
and
fdivl
add
addb
mov
dec
outsb
or
enter
sbb
shll
les
xchg
xor
mov
and
or
call
xchg
push
jmp
das
js
adc
sbb
mov
lock
imul
fildll
enter
cmpxchg
add
or
outsb
leave
test
jp
je
jae
xchg
sub
xor
int
pop
int3
dec
inc
cmp
leave
pop
jns
jl
push
sahf
fisttps
or
dec
imul
lret
inc
add
cmp
ffree
pusha
sahf
mov
data16
xor
sbb
in
outsb
pop
push
inc
sub
sbb
or
push
or
add
jnp
add
xchg
ret
lods
push
or
push
or
popf
enter
add
jne
xchg
cmp
push
ja
mov
fnsave
push
ds
dec
push
sub
mov
sub
cwtl
imul
cltd
enter
fldcw
scas
sbb
movsb
test
push
xchg
sbb
popf
dec
enter
add
or
negl
inc
xor
xchg
add
out
add
ja
push
sub
mov
and
subl
iret
pop
mov
out
inc
pop
sbb
lods
jns
bt
inc
cltd
lock
add
cld
mov
hlt
adc
jmp
mov
pop
jge
mov
jo
mov
cmpsb
add
cmp
mov
in
pop
mov
sub
pushf
addb
push
xchg
inc
sub
jbe
add
mov
cmc
les
aas
divb
insb
cmp
fadds
imul
shr
subb
int3
ds
jge
xor
inc
or
jp
mov
dec
add
or
lock
aad
add
aam
ljmp
pop
pop
xor
scas
adc
movsb
lock
xchg
add
or
jmp
iret
cmp
test
add
out
jne
sbb
adc
xchg
sbb
rclb
mov
adc
xor
mov
bound
test
mov
aad
stc
sbb
ret
xchg
cmpsb
mov
and
push
bound
mov
scas
arpl
sub
stos
push
sub
mov
or
push
and
bound
mov
adc
roll
nop
pushf
lds
jge
outsl
adc
push
mov
lret
mov
inc
push
dec
fsubrp
test
shr
and
cltd
pop
mov
xchg
sbb
mov
add
lds
idivl
shrb
or
xor
sub
and
pop
rolb
push
sti
xor
add
jecxz
push
jmp
dec
add
push
sahf
mov
loop
add
push
out
add
repnz
sbbb
iret
mov
int
jge
arpl
fwait
sbb
xchg
adc
cmp
jp
out
loope
sti
or
orb
pop
push
xor
mov
add
fmul
sub
add
inc
loope
stos
add
cmc
roll
lret
mov
push
das
ds
push
sbb
aam
add
jae
sbb
fadd
add
cs
daa
int
cli
jge
ljmp
add
rcrl
sub
add
mov
dec
pop
pusha
mulb
and
jp
in
das
sub
mov
rolb
js
addb
cmpsl
xchg
xchg
daa
imul
xchg
mov
mov
rorl
jge
push
repz
push
cmp
adcb
mov
sub
test
loopne
push
and
mov
cmc
scas
pop
push
lods
fsubs
repz
inc
sub
testb
call
xor
inc
and
les
and
inc
dec
out
cwtl
inc
cmp
sbb
ja
xlat
leave
jno
popl
outsl
mov
lods
es
inc
dec
movsb
clc
and
push
dec
inc
xor
cmp
cmp
testb
scas
sahf
test
pop
and
shrb
jb
cltd
loop
out
sbb
pushf
sbbb
out
ret
cmp
ja
outsb
push
push
jp
or
add
xchg
or
clc
aad
hlt
scas
or
mov
fmuls
fcmovu
or
mov
lock
cmc
and
inc
mov
add
js
test
ret
sub
enter
add
scas
loope
or
pop
sbb
inc
nop
pushf
fcomp
and
ficompl
insl
add
xchg
stos
or
cmp
push
add
out
mov
pop
mov
push
adcl
jmp
push
insb
inc
mov
cmc
sbb
add
jno
add
mov
lcall
js
cmc
rol
add
mov
jg
fldenv
inc
fadds
push
es
hlt
xor
adc
icebp
add
bound
imul
sub
add
jecxz
cmpsl
movsb
rolb
enter
xor
andb
ja
cmp
dec
and
xchg
sub
cmp
dec
and
add
cmp
icebp
add
roll
add
pop
dec
jecxz
adc
adc
cmc
push
dec
mov
movsb
test
push
mov
hlt
sbb
adcl
add
xor
add
adc
mov
popf
or
nop
bound
shrb
out
sub
pop
pop
mov
push
pop
jl
rcrb
pop
mov
adc
xor
inc
sbb
aaa
popa
ss
std
mov
inc
adc
xor
dec
insl
insb
xlat
loop
sbb
pop
sbb
add
sub
and
lcall
mov
sbb
and
adc
xchg
das
daa
and
xlat
les
add
nop
inc
adc
add
dec
xchg
add
mov
pop
push
jae
add
adc
ds
test
adc
inc
dec
add
lods
inc
cmp
dec
sahf
ljmp
enter
cmc
enter
pop
lods
adcl
xchg
cwtl
subb
outsb
cmpsb
rolb
xor
cmp
adc
push
inc
xor
add
cmp
add
lcall
bound
push
sub
add
insb
loopne
pusha
mov
mov
outsl
dec
inc
popa
mov
rcr
call
jno
ret
xchg
push
add
fisttps
movsl
adc
loope
and
out
adc
inc
push
adc
push
fcomp
adc
xchg
pop
pop
scas
add
dec
adc
cmp
cmp
loope
jp
shl
popl
dec
cmp
test
cmp
sbb
and
cwtl
jg
hlt
dec
jl
pop
adc
push
out
jp
nop
sbb
decb
add
mov
lcall
lds
adc
cwtl
pop
cli
std
mov
test
mov
aam
loopne
jb
shrl
nop
add
jns
add
dec
loopne
cmp
sub
jne
or
mov
faddl
cmp
lret
addr16
int3
cwtl
push
das
jecxz
out
cmp
xor
jp
outsb
add
add
dec
sbb
adc
test
cmp
mov
lds
cmpsl
add
cmp
mov
or
mov
mov
add
push
pop
addr16
pop
add
sub
jb
add
jno
dec
lock
mov
mov
inc
aam
mov
add
out
push
push
jle
pop
inc
add
and
fcoml
addr16
repnz
sbb
add
fldenv
sahf
xor
sub
test
jae
jnp
and
in
adc
mov
sahf
adc
inc
jbe
popa
pop
cmp
add
adc
push
aam
inc
push
lods
adc
add
movl
xor
call
inc
inc
add
or
data16
mov
add
cwtl
jmp
mov
fdivp
mov
addb
jns
sub
lock
cld
pop
dec
js
dec
loope
popf
xor
mov
fistl
add
pop
jb
pusha
cltd
pusha
cmp
je
bound
inc
insb
fsts
add
lret
in
add
loope
subb
push
sti
sbb
push
jmp
rcrl
add
push
mov
dec
adcl
loope
iret
sub
sti
adc
and
test
repz
in
cs
push
mov
inc
subl
xor
and
mov
jbe
jl
sbb
or
jno
dec
sub
mov
or
insl
dec
icebp
cli
add
out
jle
push
popa
cs
jno
out
popw
rcll
rorb
decb
sub
lahf
xchg
add
jno
sti
mov
bnd
js
pop
loopne
movsb
push
jecxz
in
inc
rcrl
test
fdivl
cmpsl
js
push
push
movsb
pop
push
xor
cmpb
notl
jne
enter
test
cli
adc
paddq
xchg
shll
xchg
in
push
pop
enter
in
rorb
mov
nop
sub
inc
movsl
sar
cld
mov
inc
fdivrs
push
pusha
in
xchg
push
jge
adc
add
inc
push
add
xchg
or
scas
push
dec
push
fcomp
imul
js
xchg
call
aam
les
mov
inc
movsl
jle
add
je
push
push
scas
xor
loopne
push
dec
jle
loope
cltd
push
inc
xchg
sub
add
mov
mov
add
adc
pop
sub
dec
rorb
dec
out
mov
addb
mov
rorb
inc
gs
xchg
jnp
add
sbb
xchg
dec
jns
pusha
fsubl
mov
in
js
xchg
xchg
incb
ljmp
or
inc
nop
add
jns
adc
jmp
fadds
loopne
addb
mov
inc
or
ret
mov
loopne
js
pop
push
jle
sub
pop
push
add
fsin
inc
sbb
xchg
sbb
jb
add
push
sbb
sbb
add
je
and
test
and
imul
jmp
or
jo
imul
add
in
inc
int3
fcoms
or
imulb
pop
shll
fcomip
dec
loopne
dec
sub
xchg
dec
pop
push
outsl
inc
mov
xchg
add
cmp
xchg
dec
rclb
jne
imul
pop
and
and
jb
adc
add
pop
jo
pop
inc
icebp
outsb
xchg
xchg
js
leave
adc
and
pusha
sbb
adc
mov
pop
roll
test
sub
add
cli
sbb
pushf
xor
fwait
loope
mov
cmc
mov
jg
and
pause
add
aad
cwtl
mov
scas
pop
in
call
inc
fs
mov
mov
add
mov
stos
adc
loop
lcall
xor
fstps
dec
rolb
fsubrs
sbb
pusha
fdivs
xor
or
imul
mov
add
sahf
add
lret
adc
push
cld
pop
les
adc
insb
adc
sbb
sbb
test
mull
and
imul
rolb
rorl
pushf
in
incb
pop
cld
cli
xor
das
push
mov
les
cmp
fldcw
add
cmp
mov
in
cli
rolb
mov
std
adc
in
or
adc
xor
and
subl
repnz
mov
rolb
popf
je
jbe
cwtl
push
loop
add
shll
pusha
adc
xor
jecxz
push
xlat
cmp
push
sub
add
out
in
aam
add
roll
xchg
lods
fstl
shr
mov
xchg
or
hlt
or
mov
add
in
dec
sbb
sub
mov
out
aad
pop
cmpsl
shlb
cmp
jb
cmp
sub
inc
addr16
scas
sbb
dec
rol
mov
mov
mov
cmp
int3
out
js
bound
inc
in
add
scas
sbb
mov
jmp
sbb
xor
loope
aaa
out
mov
popl
pop
testb
sbb
in
mov
scas
bound
andl
jne
dec
fwait
addr16
insb
mov
lods
test
icebp
jb
inc
or
push
mov
adc
xor
aad
and
xchg
and
hlt
xchg
lahf
mov
popa
mov
xchg
push
and
push
pusha
pop
sbb
cmp
in
mov
jbe
xor
jno
add
cmp
cs
mov
repz
dec
scas
add
jns
out
outsl
inc
and
pop
aam
add
and
mov
push
enter
sbb
test
lock
mov
push
adc
sahf
les
pusha
pop
mov
cmp
add
rolb
sbb
cld
xor
loope
jb
scas
insb
das
or
adc
and
sub
mov
mov
mov
roll
jnp
pushf
lds
inc
lock
andb
sub
cmp
mov
lods
xchg
ljmp
or
mov
mov
sbb
xor
shrl
mov
call
popf
pop
or
gs
decl
scas
jge
adc
test
faddl
ljmp
hlt
sbb
in
mov
cmp
addb
leave
repz
arpl
cmp
pushf
scas
xchg
or
mov
add
shl
inc
push
push
add
call
loopne
fisttpl
aam
les
stos
in
inc
es
inc
mov
scas
icebp
out
mov
pop
sub
fs
rolb
jb
sbb
rcrl
subb
or
aaa
out
test
mov
lock
int3
fcmove
and
cltd
cld
or
xchg
dec
outsl
dec
pop
xchg
mov
mov
icebp
cltd
or
jnp
or
inc
lock
repz
sbb
mov
in
movsb
int3
aam
and
mov
add
loopne
jp
stc
add
sbb
mov
daa
outsl
push
or
enter
sbb
cmp
jb
sbb
inc
mov
shlb
add
jle
or
cmpsb
stc
or
jmp
add
and
jno
pushf
sbb
decl
test
inc
movb
or
bound
inc
scas
shll
daa
xor
js
loop
xorl
popa
sbb
aam
icebp
sbbb
adcb
pop
add
sti
xchg
sbb
or
stos
inc
hlt
mov
jmp
push
cmp
jae
push
subb
inc
dec
jae
aaa
testl
jno
cli
orl
pop
popa
mov
mov
adc
jg
js
and
stc
sbb
push
pop
or
rolb
and
add
sbb
lcall
lods
test
add
cmp
in
repnz
add
jge
jb
cmp
repz
lea
std
adc
es
cmp
xchg
push
popa
enter
fwait
adc
sub
insb
out
xchg
lcall
outsb
pop
sbb
flds
xor
clc
add
mov
push
xorb
add
stos
rolb
xchg
xlat
mov
fists
add
mov
sar
xchg
lods
adc
sub
and
pusha
nop
dec
pop
jo
sbb
jno
cltd
cltd
lock
js
push
push
dec
add
scas
mov
push
pop
sub
jl
add
xchg
test
nop
mov
cltd
popa
stc
inc
dec
xchg
and
ljmp
xchg
pop
and
clc
cwtl
cmp
dec
and
xchg
push
call
jns
cwtl
mov
outsb
add
jg
or
test
add
pop
add
test
adc
add
jne
add
and
clc
inc
add
xor
cmpb
add
cmp
movb
jmp
int3
mov
mov
test
pop
add
inc
sbb
es
in
sarb
mov
cmp
popa
sub
in
mov
pushl
icebp
out
add
fwait
scas
pop
aam
cli
sbb
sbb
ja
adc
fiaddl
mov
es
add
or
cli
cltd
out
fnstenv
cmpsl
loop
adc
cld
cmp
pop
add
data16
in
iret
sar
rcll
and
stc
dec
cmc
hlt
cs
das
add
call
jle
jb
sub
popa
js
sbb
leave
add
add
push
outsb
or
push
adc
xor
and
jb
shrb
negb
inc
push
mov
cmp
inc
and
call
insl
jg
sarb
sbb
dec
ja
dec
push
mov
and
stc
nop
and
mov
sbb
add
mov
leave
sti
add
or
jp
mov
call
test
sbb
ds
fnstenv
mov
pop
inc
fs
stos
out
adc
pop
fdivl
push
roll
cmpl
add
push
pop
sbb
mov
cwtl
jno
int3
sub
iret
add
and
inc
out
fidivrs
mov
shr
sar
pop
jmp
shlb
inc
jno
jne
sbb
and
rclb
lods
adc
je
and
xor
dec
mov
cltd
js
icebp
mov
add
jne
in
cmp
push
adc
inc
std
adcb
jnp
or
xchg
scas
sub
xlat
add
add
mov
mov
adc
push
xchg
mov
andl
jle
mov
das
xadd
lret
adc
shlb
sbb
pop
loop
dec
inc
out
and
je
jp
aas
mov
inc
add
xor
xchg
lock
enter
xchg
add
add
or
fwait
jmp
cmp
mov
push
xor
jge
nop
or
inc
xor
xor
insl
mov
adc
repnz
xor
aam
add
movsb
mov
rclb
shl
stos
inc
mov
jno
fldenv
or
dec
or
aas
xor
int3
mov
movsb
ja
call
xor
and
add
push
add
jle
lods
and
int3
cld
dec
mov
pop
jmp
cmp
arpl
mov
cs
or
add
stc
out
ficoms
fcmovnbe
sbb
lods
arpl
mov
lret
cmpb
dec
mov
mov
adc
add
cmp
add
in
call
jns
sahf
dec
cmp
stos
add
xchg
call
add
mov
add
push
push
pop
testb
jno
xor
or
or
fs
cltd
push
add
test
ja
add
rcll
test
sbb
cltd
cld
and
cmp
jb
add
lods
mov
daa
xchg
add
lret
adc
xlat
shll
sti
and
mov
add
bound
mov
cs
mov
mov
jge
mov
ret
push
add
into
popl
push
jbe
testb
sbb
adc
or
inc
test
push
in
in
adcl
sbb
mov
enter
add
pop
or
out
lock
push
add
jns
xor
push
andb
and
mov
les
adc
cltd
in
add
andl
lcall
push
jle
xchg
xchg
arpl
sbb
xor
psllq
sbb
jbe
or
roll
dec
lods
popa
sbb
push
mov
push
push
push
add
or
in
or
cmpsb
jb
mov
mov
pusha
bound
pusha
faddl
shrb
cli
cmp
insb
cmp
cmp
mov
add
jne
rcll
js
push
mov
push
rorb
dec
aas
sbb
movsb
dec
shlb
pop
add
arpl
push
push
jo
lods
mov
mov
add
outsb
cld
dec
mov
sbb
pop
dec
add
and
cmp
xchg
add
fidivs
inc
adc
add
mov
and
clc
inc
scas
int3
inc
jmp
pop
adc
mov
stc
mov
arpl
iret
or
paddusw
xchg
xchg
nop
addr16
iret
aad
rolb
or
movsl
jno
mov
inc
sbb
mov
stc
inc
pusha
inc
xor
movsb
sbb
jle
shll
cmp
inc
adc
pcmpgtb
in
sub
jl
cmp
bound
iret
add
enter
push
push
push
sub
stc
xlat
mov
out
sbb
movsb
or
movsb
xchg
add
aas
cmp
xor
scas
and
jmp
push
sub
add
mul
lods
or
adc
xor
add
mov
mov
repnz
movsb
or
push
test
add
leave
fstpl
mov
pop
xchg
in
movsl
jo
sbb
decl
movsb
mov
jae
jge
dec
xlat
mov
ja
mov
add
out
ror
addr16
aas
xchg
push
xchg
jno
je
cltd
mov
popf
cmp
data16
push
or
movsl
shl
cli
adc
nop
enter
lret
push
and
xor
imul
xchg
cmp
push
jg
add
xlat
ss
jle
rclb
push
sbb
movsb
hlt
test
add
dec
pop
lcall
out
movsb
xchg
bsf
movb
bound
jmp
and
lods
and
mov
shl
cld
int3
ficoml
push
or
rcrb
xlat
jp
dec
fisubrl
xor
and
sub
add
add
pop
ja
popa
js
or
or
adc
rolb
mov
sbb
push
cwtl
addb
add
mov
or
outsb
test
cmp
fcoml
fadds
call
movsb
push
mov
cmp
xor
shrl
jle
or
lahf
std
decb
push
jl
mov
call
dec
add
fs
nop
call
les
xor
push
fbld
mov
adc
ss
cwtl
out
pop
mov
and
jno
push
mov
in
orl
jo
test
in
cwtl
or
ficompl
fsts
and
sub
inc
xor
add
mov
dec
xorb
mov
xchg
add
cmp
lea
in
fiaddl
push
jnp
add
xchg
fdivr
xor
add
add
pop
pop
fisubs
and
add
mov
int3
fsubrs
add
pop
adc
sti
lret
test
adc
rcrl
xchg
xor
arpl
sub
pop
push
push
mov
mov
sbb
loopne
push
add
stos
aaa
pop
mov
xor
and
movl
add
ds
add
fldt
in
add
push
push
outsl
and
or
pop
idivl
pop
xor
add
adc
add
sub
push
cmp
push
scas
pop
sub
xlat
clc
int
inc
add
push
scas
mov
push
cld
dec
mov
movsb
ror
jmp
sub
and
pop
scas
add
sub
sub
xor
xchg
scas
sti
mov
inc
pop
out
xchg
stos
mov
xorb
aas
shlb
jg
push
add
xor
pop
mov
test
pop
adc
cmp
pop
xor
xchg
out
and
bound
fsubrs
enter
out
add
or
aaa
mov
add
add
inc
mov
mov
sbb
outsl
pop
imul
dec
lret
mov
mov
xor
add
ffree
dec
xchg
into
add
adc
arpl
xor
mov
fisttpl
repnz
sbb
xchg
sub
jmp
and
loopne
cwtl
mov
xor
push
jp
and
pop
stos
mov
movsb
daa
xor
or
add
xchg
cmpsl
add
sub
pop
pop
jecxz
adc
cli
lock
add
fs
dec
inc
xchg
addr16
xor
popf
push
add
and
xor
add
fcom
cmp
xor
push
add
loope
mov
gs
sbb
aas
push
pushf
fdivl
add
stc
rorl
repnz
imul
ja
add
aaa
mov
add
pop
and
xor
ja
inc
xor
cmp
clc
ret
add
cs
ret
loopne
push
pusha
aaa
sbb
mulb
pusha
sahf
adc
inc
push
loop
clc
in
js
sub
cmp
jmp
inc
dec
mov
std
dec
pop
or
inc
les
mov
fistps
fiaddl
add
adc
scas
lods
je
mov
jo
rolb
mov
out
jmp
xor
aas
add
rcr
cltd
lahf
jl
popf
jo
jg
loop
aam
mov
sbb
xchg
adc
rolb
pop
mov
mov
cmpl
jle
movb
jp
push
dec
jecxz
xor
jbe
out
add
mov
add
daa
sub
pop
out
inc
mov
in
flds
sbb
bound
push
jb
ljmp
imul
arpl
xchg
loopne
mov
lods
push
add
cmc
inc
rclb
int3
dec
and
xor
scas
addr16
xor
add
movsl
mov
jmp
add
xchg
ljmp
dec
mov
pop
push
orb
in
sbb
sahf
push
loope
inc
mov
cmp
jns
xor
inc
push
jno
stos
jp
adc
push
add
lea
fsub
and
mov
clc
jns
add
cmp
xor
fidivs
in
pop
ss
add
sbb
nop
lods
out
nop
or
pop
mov
mov
xchg
cmp
flds
add
shlb
sbb
adc
shlb
sti
jg
add
pop
imul
or
out
ficomps
mov
add
jp
test
pop
fdivl
xchg
add
call
lock
add
popa
mov
addl
pop
cmc
sbb
push
int
fwait
jnp
add
scas
cmp
push
fiadds
lds
cmp
arpl
out
popa
jmp
xlat
dec
push
cmp
loope
addl
aad
add
mov
or
lcall
pop
add
movsl
and
loopne
shl
push
adc
xorl
xor
int
stos
gs
aas
cmp
pusha
mov
xor
push
insl
adc
jnp
inc
mov
pop
jle
ss
sbb
add
adc
std
les
mov
dec
inc
test
cld
jns
dec
loope
and
clc
add
xchg
mov
add
jne
xor
and
adc
in
xchg
push
add
xorb
lret
ret
lds
push
ss
js
gs
push
cmpsl
faddl
adc
in
xchg
shl
adc
or
int
mov
add
add
call
mov
mov
js
push
add
popf
sbb
cltd
xor
loope
jecxz
mov
lods
sbb
ss
mov
dec
xchg
adc
shrb
add
mov
lods
push
add
rcll
xchg
mov
loop
sbb
push
mov
push
jle
adc
push
xor
add
nop
jb
cwtl
mov
mov
loopne
cld
fimull
push
rol
cmc
insb
aaa
and
out
cli
je
push
test
je
pop
adc
call
lahf
cwtl
out
adc
mov
dec
dec
push
pop
test
cmpb
xor
cs
cmpl
roll
adc
cltd
xchg
mov
out
int3
xchg
jae
movsb
add
pop
mov
mov
or
fdiv
mov
mov
jb
xor
fsubp
cs
les
fcom
lock
cmp
in
addl
lcall
std
jno
pusha
add
sbb
cmp
sub
push
sbb
and
push
jmp
loopne
or
mov
add
xorb
stc
mov
or
les
adc
inc
mov
cmp
pop
std
jo
mov
push
lret
sub
aad
adc
mov
rorb
jg
add
sti
push
jg
cwtl
inc
add
fcoms
or
loop
jne
sbb
in
pop
test
jmp
ds
mov
je
cwtl
fucomp
test
inc
lds
fildll
addr16
cmp
in
stc
add
inc
lahf
inc
bound
test
loope
xchg
aaa
cmp
xorb
stc
movsl
sbb
clc
cwtl
shlb
sub
cmp
bound
xor
sbb
js
mov
add
mov
pusha
pop
mov
sub
mov
add
movsl
inc
jge
aas
insl
flds
mov
xor
push
scas
xor
dec
shrb
rcl
cwtl
pop
push
and
aam
cltd
scas
outsb
jns
notb
add
cmpsl
rcrl
adc
hlt
pop
in
xor
outsl
pop
pop
and
lret
sti
inc
add
fdivl
adc
add
fdivrp
adc
sbb
adc
mov
in
inc
outsl
xchg
pop
test
stos
adc
clc
test
add
or
das
sbb
add
jbe
add
jnp
fs
xor
push
insb
dec
dec
lods
pop
inc
pushf
fcoml
int3
mov
fnstsw
dec
push
pop
xlat
test
dec
adc
add
dec
insb
adc
addr16
std
mov
test
mov
add
aas
xor
or
jecxz
mov
sbb
lea
xchg
mov
xchg
sub
scas
in
ficoml
mov
add
pop
rolb
add
je
dec
add
repz
cli
cltd
push
pop
in
inc
push
jmp
mov
push
mov
pop
std
out
pushf
pop
adc
mov
add
jmp
pusha
popf
xchg
jne
sub
orb
addr16
fdiv
add
jb
mov
xor
stos
lods
int3
cmp
mov
and
sub
mov
pusha
movsl
jl
sahf
leave
fnsave
xchg
sar
addr16
enter
leave
dec
cmp
sbb
sbb
cmp
xor
cltd
add
dec
repnz
push
das
mov
pop
xchg
sub
mov
mov
aaa
hlt
mov
cmpsl
clc
ret
add
rclb
add
mov
xchg
inc
shrb
dec
pop
push
or
call
cmp
lcall
xchg
ds
mov
jp
sub
and
dec
adc
rcll
fiadds
fs
clc
adc
xor
sub
cmp
shlb
push
mov
pop
xor
dec
dec
aas
repnz
or
xlat
mov
and
les
iret
dec
cwtl
xorb
fbstp
movb
out
lds
sub
add
jb
test
jle
lcall
add
aam
push
pop
fs
dec
and
iret
cmp
add
js
pop
ds
scas
push
and
and
comiss
lods
mov
loopne
aad
ljmp
push
xchg
mov
ja
test
lahf
jo
mov
cmp
sub
adc
adc
jle
in
fsubp
mov
xchg
pop
in
push
xor
push
dec
and
out
pop
xchg
daa
pop
xor
sbb
clc
ja
adc
push
gs
inc
pop
jo
push
push
adc
mov
imul
jae
int3
cmp
sbb
ret
mov
inc
lods
mov
pop
ds
imul
cmc
fisubl
arpl
jge
adc
inc
dec
fnstsw
pusha
cs
call
aad
fwait
cli
mov
mov
je
or
sbb
add
dec
jge
popf
hlt
lock
mov
mov
adc
inc
mov
pusha
add
aas
in
inc
ret
add
mov
cli
add
push
je
ss
hlt
add
into
cmp
sub
add
scas
push
in
mov
add
mov
out
add
xchg
mov
lds
outsb
in
jns
fildl
sar
aas
movsb
xchg
hlt
lods
sbb
fsubs
and
fcmove
mov
cmp
dec
ret
and
ret
clc
les
add
xchg
pop
push
xchg
xor
cmpb
jns
jge
jbe
das
fisubl
iret
test
call
sarb
lods
mov
or
loopne
into
xor
mov
xchg
cwtl
addr16
mov
fisttpl
pushl
out
enter
sub
adc
xchg
jns
std
mov
in
jl
pop
clc
aas
loope
mov
jo
pop
cld
add
js
jnp
push
hlt
sub
repz
pop
add
jns
push
jmp
fstpl
inc
pop
je
scas
subb
mov
fadds
movsl
jp
or
in
movsb
mov
std
int
in
mov
xor
mov
jp
sbb
fcoml
and
cmp
ja
push
add
adc
mov
lret
stos
adc
mov
fmull
sti
lcall
test
sbb
fs
push
aam
and
cmpsb
je
in
add
jne
pushf
lods
out
dec
add
bound
decl
pop
stos
pop
adc
call
fs
or
add
out
and
dec
iret
sub
add
in
lea
scas
add
sbb
cmp
and
mov
loopne
push
adc
and
dec
xor
lods
scas
adc
and
lods
add
pusha
sbb
and
xor
mov
insl
and
shlb
xchg
ret
inc
mov
fcomip
push
fiaddl
and
pop
inc
hlt
jecxz
sub
lcall
fsubrs
int
cwtl
mov
sbb
outsb
mov
jbe
adc
or
ret
ss
pop
add
mov
inc
push
pop
cltd
lcall
push
adc
inc
pop
and
ja
stos
xchg
cmpsb
ror
orb
leave
mov
pop
in
and
out
xlat
lods
cmpl
cmp
cltd
sbb
and
sub
fcoms
enter
aam
sar
ret
add
into
mov
cmc
fimuls
sbb
sahf
push
mov
les
test
xchg
jge
scas
imul
and
sub
fs
fcmove
mov
pop
jecxz
cmp
enter
int
mov
out
push
in
xor
or
dec
add
jmp
inc
test
cmpsb
push
inc
cmp
mov
pop
sbb
dec
ja
push
push
push
sub
shlb
adc
jl
and
addb
or
orb
faddl
sub
daa
sub
push
cmp
adc
xchg
sbb
cld
orb
sub
movb
mov
push
xor
add
out
cld
adc
xlat
je
pusha
sahf
cmp
jne
mov
and
adc
or
test
cmp
lods
sbbb
jl
ds
clc
push
xchg
mov
cmp
add
jge
push
lock
in
pop
sbb
mov
dec
add
jno
xor
fucomi
and
mov
lahf
xchg
cmpb
sahf
icebp
and
jne
repnz
lahf
subb
inc
inc
test
and
int3
cli
ja
mov
sub
std
lret
inc
xchg
add
jmp
dec
xor
or
bound
cmp
add
cmp
lret
pop
pop
add
sbb
addr16
and
pop
test
loop
mov
add
ret
add
or
push
jle
adc
adc
add
out
pop
sbb
add
lret
shr
addb
dec
stc
jnp
mov
addl
jp
jo
cmp
enter
inc
sahf
mov
das
add
mov
loope
mov
dec
pop
jnp
fstps
and
aas
cmp
pop
sar
test
sbb
enter
cmp
mov
adc
fmul
or
jne
or
inc
rclb
dec
add
loopne
cmc
push
add
push
aad
inc
nop
bound
add
sub
sbb
push
or
cmp
jno
add
loopne
out
xchg
add
sub
pop
fwait
dec
mov
jae
add
sub
pop
add
mov
stos
mov
add
adc
int3
push
or
mov
ljmp
rolb
add
xor
add
fisttpll
mov
mov
sub
xorl
cltd
jae
cmp
sub
cmp
mov
dec
mov
xor
push
jecxz
adc
scas
cwtl
sahf
push
jp
stc
mov
inc
jle
mov
dec
lock
cmp
mov
adc
inc
stc
adc
or
lods
jns
movd
push
mov
loopne
xchg
iret
push
pop
jo
mov
add
or
xchg
flds
mov
shlb
add
cs
jno
add
bound
cmpsb
rorb
imull
jo
push
push
pop
jnp
lods
dec
lds
inc
enter
out
shl
cld
cmp
cmc
add
enter
jbe
cs
and
lods
xor
add
test
add
ret
js
pop
sbb
jno
das
xchg
inc
in
inc
in
pop
cld
xor
mov
lock
scas
sbb
flds
and
rcr
sub
aam
fs
add
ret
insb
pop
enter
outsb
std
cmc
stos
pop
fcomi
xor
inc
nop
mov
fcomps
inc
mov
mov
negl
mov
push
sbb
add
mov
jnp
jno
shrb
adc
add
cmp
addb
fidivrl
pop
add
xchg
or
inc
and
mov
push
scas
pusha
mov
sbb
les
pop
cs
add
loope
arpl
xor
push
stc
pushf
fnstenv
faddl
add
push
mov
rcll
add
jmp
fistps
sub
sub
lret
mov
xchg
mov
or
xchg
call
outsl
xor
lcall
loop
add
stc
push
popf
pop
mov
xchg
cmp
inc
sbb
pushf
jno
and
cmp
and
jle
test
push
imul
sbb
outsb
fwait
inc
dec
sbb
add
sbb
stos
cmp
int3
inc
pop
or
or
xchg
fcmovnb
ret
sar
dec
add
xchg
rorl
push
scas
lea
lret
mov
dec
add
pop
loope,pt
sub
pop
call
adc
lock
add
daa
adc
add
sti
and
lods
mov
cmc
push
test
xor
push
incb
pop
jl
adc
push
add
cmpsb
out
ret
jne
adc
add
sbb
test
push
and
push
sub
sahf
dec
decl
add
cmp
sti
dec
jae
add
xor
sbb
and
dec
jmp
push
sbb
pop
andb
out
out
add
pop
adc
aad
ljmp
lds
ficoml
add
mov
xlat
mov
sub
add
gs
pop
addl
in
and
cmp
das
mov
add
aam
cmpsb
movsb
outsb
int
dec
jb
pop
cmc
rol
jbe,pn
mov
in
lret
fldcw
out
push
rcrl
jo
cmp
add
fwait
rcll
add
sbb
ss
aaa
aad
mov
call
add
insb
addr16
sbb
mov
ret
pop
add
adc
or
pop
push
add
into
xor
xchg
jnp
xchg
movsb
in
add
push
ret
sti
adc
nop
sahf
test
xchg
outsb
pop
push
scas
out
pop
inc
push
inc
stos
or
jbe
xchg
sub
mov
mov
sbb
inc
or
iret
add
xchg
add
loope
in
es
jns
xchg
in
into
cmp
arpl
shll
out
lods
std
add
pusha
sub
fdivrl
rol
shrb
add
repnz
inc
jbe
aad
push
shrb
addb
nop
lods
adc
push
add
xor
xor
push
cmp
inc
xchg
ss
xchg
js
push
add
hlt
pusha
cmp
add
sbb
jge
adcb
out
mov
sub
in
adc
dec
jle
add
rolb
push
cmp
shlb
inc
xchg
add
in
loopne
push
icebp
or
fs
sbb
ja
pop
rorb
add
test
cmpl
dec
paddusb
inc
cwtl
adc
xchg
mov
mov
pushf
add
sub
push
lds
adc
lahf
loope
add
pop
xor
incl
xlat
loopne
bound
cli
movsb
push
jmp
or
cmp
incl
pop
aas
inc
xor
sub
scas
mov
xchg
inc
das
out
mov
add
mov
add
and
and
pop
adc
inc
fsubl
mov
scas
fs
stos
xor
push
sub
notl
je
pop
cld
ljmp
in
jns
add
fisubl
in
mov
or
xchg
std
mov
pop
loope
and
or
scas
in
ret
adc
loopne
shll
adc
pop
adc
adc
add
adc
inc
add
sub
sbb
sarl
icebp
js
and
mov
insl
add
add
adc
add
add
xor
stos
in
test
mov
cmp
std
cmpb
in
jmp
jbe,pt
orl
loop
subb
lahf
orps
hlt
sbb
dec
sbb
pop
add
xchg
repnz
mov
icebp
mov
mov
in
mov
mov
test
push
xchg
lea
xchg
adc
ss
decl
push
cmp
and
gs
shlb
rcl
mov
inc
xchg
xchg
mov
pop
inc
or
mov
lods
sub
add
mov
mov
jle
sub
jno
nop
ds
push
add
xchg
dec
add
pop
jae
add
add
or
add
icebp
jno
lret
loop
cltd
xor
mov
inc
push
rcrl
xor
popa
inc
lock
mov
push
leave
outsl
mov
packuswb
stos
pop
mov
pop
push
pop
pop
mov
xchg
sub
cmc
pop
fcom
and
bound
sub
cs
repnz
repz
ret
cmpb
fwait
cld
mov
adc
push
or
jl
in
push
hlt
lret
fwait
xlat
shrb
push
or
xor
jo
bound
mov
adc
push
dec
sub
mov
add
in
daa
sub
mov
pop
and
js
xor
stc
cmpsl
pusha
stc
or
in
call
or
andl
fstl
or
jno
and
addb
cwtl
cmpsb
inc
jns
sbb
and
leave
stos
add
popl
dec
add
add
add
aad
jbe
stos
loopne
addr16
popa
xchg
test
in
mov
adc
add
dec
jmp
add
insb
dec
aam
xor
sbb
ljmp
add
lcall
mov
push
pop
test
mov
mov
add
imul
scas
pop
inc
inc
add
cmp
mov
adc
fstpt
cmp
cmp
subb
sub
and
add
sbbl
clc
hlt
sbb
imul
jb
rclb
daa
add
jbe
cmp
cmp
fsubs
jae
insb
cwtl
add
sub
add
aaa
cmp
imul
xchg
xor
mov
in
add
adc
sub
push
cld
sbb
out
testl
repnz
outsl
adc
loope
sarb
mov
lock
fs
add
cld
addb
jl
idivl
in
xor
fs
jecxz
adc
ret
pop
loop
es
subl
mov
dec
outsl
add
aad
addl
mov
push
mov
mov
add
pop
div
xlat
and
lret
add
rcrb
pop
mov
mov
jecxz
inc
add
lock
adcb
lcall
cmp
or
sub
xrelease
add
mov
inc
mov
in
xchg
imul
popf
xor
inc
mov
mov
add
in
out
andb
jbe
js
add
mov
adc
and
jno
mov
mov
aaa
add
mov
test
jne
xchg
lds
add
pop
xlat
aad
stc
cltd
mov
jg
outsb
pop
or
and
ret
imul
mov
mov
push
sub
jne
push
cld
lcall
daa
pop
xchg
das
dec
push
incb
xchg
lcall
pop
jo
pop
push
pop
cmc
mov
vunpcklps
out
sub
ret
push
xor
adc
pop
lea
pop
xor
or
jnp
xor
clc
and
sbb
xchg
and
rolb
add
adc
ss
pop
add
jnp
fldcw
aad
outsb
pop
rcl
adc
add
test
mov
add
push
pushf
pop
dec
jnp
mov
negl
clc
cwtl
inc
sub
test
push
jo
dec
sub
pop
and
in
pop
add
les
jp
jb
inc
cs
add
clc
adc
mov
adc
js
lret
add
shrb
push
add
dec
jne
dec
push
inc
add
xchg
repz
cwtl
xorb
mov
jle
loop
mov
xchg
inc
pop
push
addb
jo
cmp
add
movsl
repz
adc
xchg
lods
push
sbb
cmp
dec
outsl
push
push
and
push
push
xchg
mov
jo
inc
pop
ja
movsb
sub
into
xlat
iret
enter
adc
aaa
mov
sub
push
popa
inc
dec
xchg
add
fs
js
add
and
lcall
in
popf
mov
gs
jge
add
shll
and
cltd
or
cmpsl
or
loop
xor
daa
jecxz
rcr
xchg
fs
xchg
movsl
push
pop
xor
flds
fcomp
xlat
inc
shlb
stos
and
pop
stos
out
xchg
imul
push
add
cli
dec
add
sub
mov
out
or
sbb
xchg
or
insl
push
aad
les
fs
aam
and
loope
imul
and
iret
das
mov
pusha
and
mov
pushf
popf
shlb
enter
decb
cs
xchg
arpl
mov
jg
dec
adc
inc
ret
sub
add
mov
lahf
mov
and
jle
push
fcmovne
int3
add
pushf
call
add
cmpsb
aad
scas
stc
lds
sub
mov
dec
sbb
xchg
pop
popl
mov
inc
or
xor
add
movsb
fdivs
repnz
jg
add
add
jo
into
add
push
pop
movsl
add
pusha
fidivs
les
push
mov
sbb
or
xor
xlat
mov
test
push
insl
xchg
cmp
push
cmp
test
sbb
nop
sti
pop
xor
aam
fistpll
out
ja
add
and
fisttpl
xchg
fisttps
hlt
rcrb
jge
add
mov
out
pop
xor
add
rolb
cmp
notl
nop
stc
jp
pop
hlt
xor
popf
and
inc
xlat
add
mov
loope
in
mov
dec
dec
pusha
xchg
shl
rorl
lods
scas
ljmp
aam
sahf
push
dec
and
pop
data16
push
mov
mov
lret
sbb
push
cmp
lods
lock
outsb
pushf
or
add
movsl
fists
xchg
xchg
stos
cld
pop
sub
fiadds
add
dec
loopne
cmpsl
lock
jbe
mov
mov
ret
mov
add
dec
push
dec
adc
pop
stos
mov
add
xor
sub
orb
into
ljmp
add
iret
xlat
fdivs
or
pop
popf
push
jecxz
or
pop
xchg
loope
add
pop
add
stc
repnz
mov
or
cmp
add
xchg
dec
add
cwtl
in
add
mov
xchg
add
in
je
fwait
or
mov
or
inc
mov
push
loop
push
rclb
shrb
pusha
mov
mov
mov
add
popf
loop
jmp
add
cmc
jp
mov
gs
mov
mov
insl
js
or
and
in
push
in
test
add
nop
lods
jae
push
sbb
loop
adcb
addr16
push
dec
pop
jp,pt
mov
dec
mov
faddl
pop
inc
shl
mov
iret
and
xor
jle
dec
jl
or
rorl
mov
fildl
aam
jmp
mov
add
pop
jno
add
xchg
add
or
pop
lods
add
xlat
inc
adc
outsb
push
testl
cmp
stos
adc
dec
add
out
jno
vrsqrtps
or
push
cmpl
das
jb
jo
inc
dec
adc
ds
add
pop
imul
adc
or
inc
ja
add
mov
movsb
add
xor
dec
mov
jns
int
bound
lea
imul
sbb
insl
ds
xor
testl
fmull
lods
leave
mov
jl
add
aas
fwait
mov
addl
leave
pop
mov
inc
outsl
or
push
pop
inc
nop
or
imul
push
cwtl
jl
hlt
mov
sub
cld
xlat
addb
add
lret
cli
mov
jl
fmul
test
fisubl
jp
dec
add
sub
int
lds
add
or
and
mov
push
add
push
daa
loopne
div
rolb
rcrb
add
push
int3
cli
jno
cltd
pop
mov
ds
out
dec
sbbb
faddl
mov
loopne
mov
orb
xchg
add
pop
pop
std
jns
inc
roll
sub
mov
mov
test
pop
push
arpl
mov
fidivrl
cmp
fbld
push
nop
mov
add
mov
mov
ret
add
test
mov
repnz
mov
mov
sub
dec
dec
scas
adc
movsb
pop
daa
mov
rol
lcall
setno
add
jmp
outsl
cmp
rol
add
add
cld
nop
add
loope
and
sbb
lds
push
xchg
cltd
mov
test
cwtl
adc
pop
push
mov
mov
push
dec
jbe
cmp
cmp
pop
sbb
xchg
sar
lret
mov
jmp
inc
pop
and
mov
das
add
outsl
mov
jns
add
pop
es
adcb
cld
popa
jne
lods
or
cwtl
adc
add
insb
loope
xchg
test
jno
mov
sarb
jecxz
lcall
xchg
push
js
in
mov
data16
div
or
mov
in
add
push
loopne
rcrb
add
pop
es
mov
test
or
aam
add
inc
pop
and
cmp
fiadds
sarl
adc
lcall
add
movsb
pushf
mov
xchg
add
insl
lea
mov
adc
int3
add
sbb
and
sbb
movsl
mov
int
bound
adc
sbb
mov
mov
mov
hlt
lret
mov
ja
fstpl
mov
insl
inc
mov
push
add
shl
add
or
push
stos
adc
dec
dec
push
sbb
mov
repnz
adc
pusha
add
data16
pop
mov
ficomps
sub
xchg
add
cmp
pop
mov
imul
frstor
dec
adc
jns
add
sub
in
sbb
lret
mulb
inc
add
add
adcl
push
fisttps
mov
ds
add
jp
cld
xchg
add
cmp
addr16
js
mov
add
cmpsl
fnsave
into
repnz
and
aas
fcoms
pusha
add
into
inc
mov
cmc
adc
mov
loop
xchg
out
insl
in
adc
jle
flds
cld
jns
mov
lfs
xchg
xor
inc
add
inc
addr16
xchg
ljmp
mov
dec
jg
in
xor
in
add
add
mov
addr16
gs
sub
hlt
loope
push
and
mov
xor
add
shll
mov
cltd
xor
add
adc
cwtl
inc
jb
add
mov
jno
add
push
dec
sbb
fdiv
mov
ja
xlat
pop
ljmp
add
nop
dec
call
jl
add
aaa
insl
pop
in
inc
cmovle
push
das
and
jne
mov
scas
mov
cmp
mov
cmp
lret
cs
int
jb
movl
jne
rorl
xchg
mov
push
sbb
and
icebp
scas
push
cld
adcb
into
sbb
jg
cwtl
dec
jns
outsb
inc
pushf
add
xchg
xchg
hlt
xchg
movsb
xchg
add
enter
stc
mov
jmp
xchg
test
ret
addb
pop
xchg
add
push
outsb
dec
es
pop
in
sbb
in
outsb
pop
mov
pop
incl
dec
int3
sub
and
push
mov
sub
sub
add
xor
inc
rclb
sbbl
add
test
pop
inc
test
popa
pop
mov
or
dec
pop
add
jno
cmp
pusha
adc
iret
enter
dec
add
or
add
mov
icebp
jl
add
cmp
incl
xchg
mov
dec
fs
movsb
fisubl
lock
das
add
and
jb
cmp
roll
rorb
sbb
sub
or
rcrb
icebp
cmp
aas
push
enter
lock
add
insl
mov
push
mov
jo
rcll
push
add
lcall
xor
outsl
hlt
sbb
int
shll
dec
and
push
jne
xor
in
push
xchg
add
pop
shll
cmp
xor
or
repz
inc
test
cmp
leave
sbb
adc
out
cmc
jp
es
xor
pop
xchg
out
les
testb
sub
add
or
lret
pop
xor
sbb
mov
adcb
add
orl
add
or
movl
iret
add
mov
lret
mov
into
add
int
aam
xchg
insb
loopne
inc
into
add
push
std
ja
in
inc
in
iret
shrb
mov
mov
ret
or
add
and
stos
stos
sahf
out
add
imul
xchg
mov
xor
test
test
shlb
and
cmp
loopne
or
pop
test
inc
stos
xor
add
mov
out
loope
jg
test
xchg
add
add
mov
pop
loope
add
addl
cmp
push
add
lods
sahf
js
ljmp
and
sbb
ljmp
nop
into
push
movsl
fdivp
inc
ljmp
fxch
push
imul
pop
add
ja
pop
orb
mov
repnz
lds
sbb
rolb
mov
testl
mov
rcrb
arpl
dec
clc
xor
and
jnp
mov
sbb
mov
push
cltd
sti
mov
xor
jge
mov
pop
mov
cld
mov
add
into
sbb
sbb
insb
pop
test
mov
fidivl
mov
mov
jle
xor
scas
adc
add
sarb
repz
lcall
push
pusha
jl
in
in
enter
addl
pushf
out
pop
lsl
mov
push
int3
mov
jecxz
les
popf
push
popl
scas
incl
adc
add
out
out
jle
pop
push
cmc
scas
pop
sbb
enter
jno
and
and
cmp
and
popa
adc
mov
clc
dec
add
test
lock
scas
sub
cmp
and
lods
ret
mov
mov
inc
pop
sbb
outsb
dec
fistps
add
xor
mov
xor
and
fdivrl
sbb
test
jl
mov
jmp
inc
add
or
jle
add
mov
cltd
push
inc
movsb
test
pop
sub
pop
jg
jle
insl
iret
xorb
inc
cmc
ljmp
sbb
repnz
stc
add
loope
mov
arpl
add
lahf
dec
outsb
aad
mov
in
jno
popa
lahf
adc
or
jns
cwtl
adc
andl
sbb
sub
xchg
jl
dec
jle
pusha
test
repz
push
fwait
mov
push
imul
bound
sbb
cmp
mov
mov
mov
imul
xorb
mov
xchg
dec
add
lds
in
push
xchg
mov
push
and
enter
add
loope
in
add
lock
repz
addr16
rcll
add
movsb
and
add
push
push
cmp
dec
xchg
adc
mov
add
mov
jle
psubw
fwait
sbbb
sbb
rcrb
mov
adc
outsb
add
sub
add
inc
aad
jge
out
add
jno
jnp
arpl
sub
mov
sarl
jns
scas
or
sbb
sbb
addr16
jbe
arpl
sbb
pause
jne
popa
adc
mov
add
into
inc
daa
push
jno
add
aam
pop
outsl
push
out
or
cmc
hlt
fmuls
andb
mov
and
jecxz
push
mov
sti
add
jg
lahf
push
add
cmc
add
pmulhuw
add
push
sub
pop
cmp
ret
sub
es
scas
cwtl
shlb
add
mov
add
loope
clc
add
dec
repnz
sub
sbb
jmp
jno
cld
adc
test
pusha
add
lret
xlat
jge
add
inc
add
and
mov
bnd
js
inc
sub
mov
mov
sbb
sub
add
add
xchg
int
popa
sti
xchg
add
loopne
insb
add
loop
mov
es
add
mov
add
dec
test
add
es
cmp
sbb
cmp
add
inc
xchg
pop
mov
pop
jbe
mov
fs
add
addr16
adc
sbb
add
xor
lds
sahf
xchg
ds
adc
je
or
push
sub
sub
sbb
stc
repz
push
mov
cld
sbb
xor
or
andl
lcall
xor
inc
push
add
mov
xor
xor
lods
adc
add
adc
into
out
add
sub
lock
pusha
pop
cmpsl
add
icebp
ljmp
aad
sub
xchg
cmp
mov
les
test
int3
mov
pushf
mov
nop
xchg
cmp
mov
and
lock
jnp
xorb
insb
into
mov
add
jno
xchg
mov
xchg
mul
cmpsb
mov
add
xchg
sub
xchg
and
cmp
jl
mov
cmpsl
inc
fcmovnu
aam
pusha
jg
adc
mov
aas
das
sahf
cmc
lds
xor
fadds
add
fmull
and
push
inc
jno
in
aas
mov
mov
ja
pop
push
sahf
xor
mov
das
and
lahf
sub
add
enter
cli
pop
add
mov
addr16
aaa
mov
inc
cmp
sbb
lcall
popf
pop
jnp
cmp
out
gs
jno
aaa
mov
imul
test
jp
add
push
ds
mov
loop
add
push
mov
inc
add
scas
test
push
popa
and
lods
jg
add
and
dec
xchg
subb
stc
cli
int
mov
add
xor
jb
ss
stos
xchg
int3
pop
mov
push
mov
inc
addl
or
mov
and
mov
add
cmp
ljmp
iret
int3
pop
rolb
hlt
xor
xor
movsb
add
push
add
xorl
dec
jge
add
fldcw
lock
add
scas
sbb
jle
add
in
iret
pop
in
xorl
clc
sub
xor
or
stos
aam
pop
and
pop
cmp
or
je
fiaddl
stc
fcoms
jecxz
mov
xlat
mov
call
mov
push
aad
jae
push
dec
pop
pop
add
jle
pop
and
xor
popa
sub
adc
fidivl
and
dec
cmp
shrb
add
or
pop
push
xchg
out
sub
xor
push
mov
sub
daa
arpl
popa
mov
xchg
xchg
cld
jmp
add
adc
outsl
pushf
loop
dec
imul
jle
sbb
push
add
scas
push
add
dec
xor
fs
js
loop
and
outsl
stc
outsb
lahf
sbb
test
cld
les
lcall
pop
shlb
or
xchg
call
ja
test
adc
push
inc
lds
ds
push
xchg
in
add
inc
inc
pop
push
popa
repnz
sbb
add
add
pop
mov
iret
add
xchg
push
ret
add
cltd
push
maxps
dec
jp
inc
add
mov
dec
xchg
push
push
inc
push
pop
mov
loop
push
jecxz
shl
addr16
popa
xchg
push
call
fcmovbe
pushf
addb
cmp
addl
out
test
pop
add
mov
arpl
dec
add
inc
ja,pn
cwtl
jne
gs
cltd
add
push
jp
pushf
fsubrl
cmp
test
stos
mov
pop
pusha
push
push
fdivl
mov
add
ret
enter
push
repnz
pop
pop
cmpsl
add
cmp
test
add
fldenv
push
jmp
sbb
sbb
cmp
shlb
and
fs
add
in
add
ds
fdivs
clc
push
cmp
mov
cwtl
lret
add
pop
adc
mov
out
packsswb
jge
add
in
pop
add
dec
xor
jae
xor
add
movsb
push
mov
sbb
popa
movsl
ret
clc
clc
ret
mov
in
mov
lods
xchg
ja
push
xor
movd
or
add
inc
inc
mov
inc
cmovno
movsb
add
add
ss
jecxz
and
xchg
or
lret
pop
jge
push
add
das
inc
fsubrs
xchg
adcb
jo
mov
sbb
les
pop
scas
lock
pop
jo
out
or
xor
repnz
mov
and
addr16
and
adc
inc
adc
sbb
mov
fadds
je
xlat
out
or
and
clc
mov
shl
in
mov
push
jno
jg
cwtl
lods
add
sub
cld
jp
iret
imul
mov
xchg
push
mov
jns
jge
push
sbb
pop
cmp
outsb
or
cmp
shrb
push
ja
fidivrl
sbb
inc
loopne
jg
out
add
push
mov
jno
and
adc
sbb
cmp
mov
add
insl
mov
punpckhdq
in
add
add
add
xor
mov
jmp
xchg
pop
xor
daa
in
xchg
push
lahf
lods
enter
rcrl
orl
mov
cltd
cli
cmp
and
js
cmp
adc
shl
and
mov
hlt
add
faddl
into
add
xor
push
sbb
inc
inc
fbld
add
bound
push
inc
mov
addb
and
jnp
in
or
cli
xchg
inc
push
in
mov
push
fisttpl
push
jne
loope
and
mov
sbb
sbb
xchg
pusha
nop
add
insb
jmp
int3
shlb
add
loop
ss
dec
xor
enter
add
enter
mov
add
dec
shrl
dec
adc
loopne
lock
pop
adc
pop
movsl
out
adc
or
cmp
add
xchg
das
insb
jmp
xor
or
repnz
pop
inc
jne
or
mov
sbb
cmp
test
ret
lock
shll
fadds
outsl
or
jle
or
dec
add
or
cmp
mov
pop
das
dec
add
cld
fcomps
stos
dec
add
mov
je
add
repz
push
add
test
pop
push
and
add
push
mov
push
jge
add
and
jg
dec
dec
dec
add
jno
add
xchg
test
aas
out
add
push
lods
push
popa
adc
push
mov
add
sbb
add
push
xor
fldt
outsb
imul
cmp
sub
mov
fadds
je
mov
loop
mov
and
and
add
xor
test
add
aaa
xchg
add
out
add
dec
mov
inc
loopne
push
movsb
add
mov
mov
mov
add
shl
sub
adc
icebp
xchg
add
iret
shr
xor
xor
and
fldcw
adc
mov
sbb
inc
mov
test
nop
xchg
je
cmpsb
jl
loopne
mov
push
cld
out
add
int3
repz
mov
add
divb
add
ljmp
pusha
std
adc
pop
loope
rcl
pop
or
xor
xor
loopne
add
pusha
add
dec
jg
push
xor
in
mov
cmp
pop
xchg
inc
sub
dec
in
leave
sbb
pop
or
or
mov
cwtl
shlb
and
dec
xor
or
testb
pop
mov
loopne
pop
push
fsubp
dec
ret
pop
xchg
push
cmp
sub
add
adc
dec
lds
xchg
add
jge
xor
stc
mov
fcompl
lods
inc
cmpsl
pop
xor
pop
xor
xor
xchg
mov
shlb
inc
add
pop
sub
or
dec
pop
lods
test
inc
sbb
add
jnp
adcl
xchg
push
es
add
add
push
add
push
sub
add
das
scas
stc
negb
iret
add
shlb
clc
loopne
mov
adc
add
lcall
cmp
stos
orb
fdivrs
xchg
addl
xchg
pop
insl
xor
add
mov
test
mov
add
out
jge
in
iret
push
mulb
cmp
andb
das
jp
pop
icebp
adc
lahf
fcoml
push
mov
add
outsl
jne
lock
in
mov
add
jbe
push
fsubr
push
add
lahf
fucomi
jle
pop
add
mov
andl
add
ja
xor
and
ljmp
xchg
les
nop
gs
ffreep
mov
dec
int3
inc
sbb
jns
push
roll
ds
add
pop
lods
mov
mov
aad
add
cs
mov
pop
jp
ret
hlt
sbb
mov
call
mov
out
mov
jnp
add
nop
pusha
xchg
fldt
sub
push
inc
sub
lret
mov
lea
mov
add
xor
and
neg
ret
fcompl
je
cs
shlb
fwait
out
sub
sbb
push
clc
add
pop
add
push
sbb
push
pop
add
fmul
jnp
aam
jns
setae
lods
adc
inc
adcb
mov
arpl
je
add
xchg
dec
xchg
jmp
xchg
add
cmp
or
aas
movsl
add
sbb
mov
in
mov
cli
push
add
xchg
adcb
pop
movsl
and
bt
icebp
add
xor
pop
std
sbb
xor
adc
add
aaa
push
jne
pop
add
mov
cld
add
mov
repnz
pop
mov
add
out
ljmp
and
add
sub
cmp
cmp
mov
add
shl
xlat
sbb
sbb
cmpsb
addl
inc
dec
int3
shlb
and
xor
push
rorb
pop
daa
mov
and
mov
sbb
push
dec
gs
addr16
subb
inc
or
sahf
xchg
xchg
notl
movsb
xor
rorb
inc
xchg
out
add
repz
push
and
inc
add
mov
xlat
push
sbb
daa
clc
inc
push
add
push
js
sarb
int
pop
int3
pusha
addb
jnp
cmpsl
pop
dec
sbb
icebp
cmc
adc
clc
in
xor
or
fstpl
adc
mov
add
out
sahf
movsl
adc
jns
push
sbb
ror
sbb
aam
adc
push
mov
ds
sub
fucomp
mov
push
pop
cmp
insl
xor
sub
aad
stos
fiaddl
ss
cmp
or
arpl
mov
lds
sbb
mov
mov
hlt
xor
adc
or
je
add
int
pop
rol
xchg
sbb
and
hlt
pop
add
sbb
add
pop
out
insb
mov
pop
mov
lods
mov
mov
out
xlat
pop
lcall
sbb
cli
rorl
xchg
nop
add
add
into
aaa
add
addr16
sahf
les
or
inc
add
push
cmp
adc
mov
add
int
iret
aas
cmpsl
inc
inc
jbe
add
sti
repz
and
add
enter
lret
dec
enter
pop
jmp
fadds
inc
cmp
lods
xor
mov
outsl
iret
cwtl
add
mov
pop
adc
xchg
mov
or
sub
mov
add
mov
scas
mov
int3
cmpsb
push
mov
sahf
push
inc
pop
xor
clc
add
cltd
jns
add
mov
aad
mul
sub
in
add
sahf
popa
and
movsl
add
mov
add
mov
or
add
cmp
sahf
cli
mov
mov
dec
test
xlat
in
lret
cmpsl
jmp
push
pushf
iret
push
jns
add
inc
aaa
add
xor
addb
push
mov
pushf
int
out
movsb
out
aas
add
cltd
xor
add
mov
bound
push
dec
add
xchg
dec
sbb
inc
pop
sbb
cmp
add
mov
testl
into
jb
or
clc
jo
and
je
in
sub
pop
add
push
xor
fstl
dec
mov
lret
icebp
rcrb
sar
sub
mov
inc
clc
lahf
sub
idivb
pushf
sub
push
cmpsl
sub
inc
aam
rcrl
xor
jge
mov
or
aaa
dec
jns
and
adc
ss
fldl
dec
cmp
outsb
push
inc
cmp
jl
sub
add
add
repnz
xchg
into
lea
rclb
iret
adc
jbe
cmc
mov
out
shrl
jo
pop
xchg
jnp
mov
in
mov
imull
into
inc
test
mov
es
lcall
adc
sbb
aas
add
add
movsl
push
push
cmp
sub
enter
outsl
dec
es
push
mov
inc
loop
pop
jne
add
arpl
pusha
inc
and
and
add
ret
es
in
in
adcb
sub
cmp
dec
push
clc
add
or
or
popa
ss
addl
fists
out
lcall
clc
imul
jl
mov
shrb
icebp
rcr
je
jbe
add
dec
inc
push
dec
shlb
push
out
pushf
shr
add
dec
addb
pop
cld
js
mov
jo
and
pop
xor
mov
bound
cmc
std
jnp
pop
pop
roll
add
mov
js
dec
dec
gs
int3
daa
add
mov
in
stos
xor
sbbl
add
std
push
daa
mov
sbb
add
js
fcoml
xorb
push
lock
pop
ret
iret
test
fdecstp
push
pextrw
and
push
jns
in
sete
or
cwtl
sahf
adc
jo
out
add
push
out
ds
add
inc
test
sub
pop
cmp
xchg
push
and
add
sbb
sbb
fmul
push
adc
cli
mov
mov
add
imul
and
movsl
dec
add
outsl
jp
sbb
aaa
xor
inc
jnp
add
dec
or
stos
inc
inc
in
sub
pop
arpl
mov
mov
adc
lock
roll
add
js
mov
in
cwtl
add
pusha
stos
sub
mov
jno
add
or
ja
imull
lcall
adc
cmp
sub
add
imul
mov
xor
jnp
pop
incl
mov
push
adc
xchg
push
nop
pop
ret
cmp
add
push
dec
push
pop
test
push
arpl
movsl
fdivs
cmp
xchg
loope
and
or
ljmp
dec
push
xor
out
mov
or
push
cmp
xlat
or
pusha
testb
sbbl
pop
adcl
shll
cli
sbb
push
clc
sbb
pop
lahf
xchg
stos
pop
sub
fs
push
add
jno
or
hlt
mov
cmp
xor
dec
cmpsl
inc
pop
aaa
or
pusha
sub
test
dec
or
jmp
lret
fiadds
push
add
mov
dec
add
push
sti
test
je
jnp
in
cmc
push
dec
inc
jbe
xchg
jmp
cmpsl
mov
sub
insb
subb
mov
scas
xchg
adc
ret
ljmp
lret
iret
add
outsl
mov
add
stc
lods
jl
vucomiss
push
add
and
push
pop
cli
pop
add
cmp
imul
inc
fs
xchg
jmp
sarb
mov
push
inc
aaa
and
aam
xchg
add
out
lods
ret
add
gs
jne
mov
shlb
mov
lret
jno
mov
pusha
cwtl
in
or
inc
jo
add
sbb
xchg
cmovp
rclb
push
mov
dec
cli
or
or
push
ss
jge
mov
ficoml
ret
adc
shr
mov
inc
into
loopne
and
add
loopne
push
jne
ficompl
sub
inc
loope
xchg
mov
add
orb
xchg
mov
pushf
sbb
inc
add
scas
sti
mov
lock
push
sbb
fdivs
push
add
or
sbb
enter
std
or
add
ret
xor
jbe
mov
stc
sub
cld
pop
push
lahf
test
xorb
negb
fcmovnb
xchg
add
inc
icebp
fwait
xlat
ja
add
mov
imul
mov
xor
and
inc
add
jno
lcall
fsubrs
jo
mov
add
cmpsl
jmp
jecxz
adc
mov
nop
dec
leave
xor
sub
int3
mov
cmp
dec
adc
add
hlt
jae
fwait
add
mov
pop
lods
or
sbb
arpl
dec
push
ffree
add
test
scas
movaps
lods
push
push
add
push
inc
xchg
call
ret
xchg
sub
call
pop
nop
and
xchg
sub
ret
out
inc
sbb
or
push
test
jmp
test
add
mov
mov
mov
mov
aad
dec
dec
icebp
sub
leave
mov
inc
mov
push
and
push
add
bound
and
adc
xchg
mov
push
push
sbb
pusha
dec
add
fucom
aaa
add
cmpsl
mov
addb
sbb
dec
hlt
mov
push
xchg
loopne
hlt
daa
and
in
cmpsb
inc
add
adc
push
sub
bound
push
add
js
add
cmp
mov
loope
int
int3
inc
jecxz
mov
xor
adc
push
add
ss
push
ret
loop
cmp
sbb
sti
add
stc
jmp
dec
mov
adc
daa
or
nop
subb
or
add
cmp
movsb
push
xlat
add
sub
jae
adc
add
cmpsl
cmpsb
stc
iret
adc
mov
outsl
mov
and
rolb
cmc
mov
rol
push
test
add
sbb
mov
paddw
fcoms
inc
xchg
add
bound
fcompl
push
add
popf
mov
cmp
orb
and
cmp
fsubrs
jns
add
sub
cli
add
filds
pushf
dec
mov
cmc
pusha
cmp
jl
add
fiaddl
mov
lahf
je
js
out
add
sub
pop
dec
aam
add
mov
orb
and
mov
jns
leave
nop
inc
inc
mov
pusha
iret
push
rcr
push
xchg
add
ret
sub
loopne
jnp
cmpsl
add
rorb
sub
adc
add
into
mov
pop
or
pop
push
mov
rorb
xchg
pop
repnz
les
add
push
xchg
xorb
arpl
pop
add
repz
cmpb
cmp
xchg
jle
cmc
push
add
int
adc
mov
jo
fildl
dec
add
add
psraw
je
std
pusha
cvtps2pi
movsl
sbb
add
and
add
arpl
mov
inc
inc
fsubr
cltd
add
movsl
dec
hlt
cmpsl
icebp
jae
add
mov
pop
cld
test
jne
add
mov
push
push
xchg
cmpsl
push
movsb
adc
roll
and
idivl
out
repz
nop
sarl
cmp
rolb
sbb
cmp
pusha
loopne
dec
loop
add
and
xchg
jecxz
inc
push
fnstenv
add
dec
xor
jl
jne
repz
inc
or
clc
sbb
cmp
xor
into
dec
outsb
es
dec
sbb
add
sub
add
cmp
ficoml
dec
add
ss
stos
mov
pop
jne
add
mov
insb
add
jbe
test
inc
jo
or
dec
sbb
sbb
jae
pop
test
push
pushl
cmpsb
xchg
adc
pop
push
jb
ret
adc
cld
cmp
push
add
jns
ffreep
cmpsl
and
mov
fstpt
add
mov
repnz
enter
loope
and
insl
dec
popa
jecxz
cmp
cmpsb
sahf
and
push
fdivrs
jno
nop
xor
adc
repnz
add
nop
mov
mov
subb
and
add
xchg
insl
cwtl
jp
cwtl
add
xchg
jne
cmp
stos
bswap
add
sti
in
pop
add
jmp
pop
or
movsb
sbb
jns
dec
inc
xchg
push
divb
aad
sub
std
pusha
sub
sbb
dec
add
and
xchg
add
jo
dec
mov
pop
mov
inc
fldcw
and
adc
into
jecxz
insb
jmp
push
scas
repz
enter
mov
push
or
inc
push
ds
int3
add
jmp
aam
xchg
or
orb
mov
push
sbb
push
push
fwait
adcl
sbb
add
insl
mov
inc
add
test
or
sbb
popa
xor
aad
out
mov
dec
sbb
lods
mov
stos
jae
aas
das
ss
fadds
pop
dec
icebp
shrb
cmpsb
jno
jbe
fistl
add
jnp
in
xchg
add
rolb
out
pop
cli
push
cwtl
pop
add
sbb
jno
shlb
xor
lods
mov
dec
xchg
mov
fadds
xor
sbb
and
dec
pop
add
shrl
xor
cmp
mov
insb
test
adcl
add
ds
movsl
xchg
shr
add
inc
stc
xchg
add
add
add
dec
jae
pop
pop
roll
inc
xchg
cmpsl
ss
loop
or
stos
scas
mov
pusha
add
mov
jne
psllq
pop
inc
and
jns
add
pop
cmp
add
mov
enter
in
add
cmp
int
sub
out
fiadds
rorl
jg
add
inc
arpl
add
sbb
push
and
int
mov
add
cltd
sub
cmp
lds
mov
or
mov
loopne
inc
adc
outsl
jno
add
dec
pushf
add
mov
loopne
addr16
fwait
lods
add
sahf
jnp
pop
pushf
out
lock
adc
sbb
xchg
sub
insb
add
icebp
xor
dec
fdivrs
add
movsb
push
pop
pop
sub
fmull
jnp
jb
dec
sbb
fisubrs
jecxz
fsubr
outsl
add
and
push
aam
pop
addb
jnp
adc
ljmp
pusha
sbb
inc
pusha
das
adc
add
mov
fcmove
fildl
addb
sbb
jbe
cmp
test
pusha
or
fisubrs
xor
call
scas
add
aad
cmp
add
sbb
and
add
mov
outsl
movsb
cmp
cmp
adcl
mov
aaa
cmp
stos
rcrl
sub
push
sub
xor
mov
add
decb
test
fdivl
scas
bound
test
mov
jae
clc
out
loopne
dec
sub
push
push
nop
dec
stos
lock
adc
add
call
leave
add
add
test
mov
popa
lock
test
add
dec
js
add
les
push
push
xlat
rcll
sub
sub
in
lds
roll
scas
jns
or
pop
pop
movl
in
xor
cmp
js
int3
inc
fs
movntps
pusha
outsb
push
mov
add
nop
or
add
insl
add
mov
roll
xchg
sub
dec
test
add
push
push
outsl
inc
iret
add
inc
int3
jb
inc
push
jbe
inc
pop
popa
int3
mov
enter
cmp
pop
xchg
int3
adc
repnz
mov
or
xchg
subb
movb
mov
mov
add
jns
mov
xor
mov
bound
paddusb
and
push
out
xchg
push
xor
adc
out
sbb
mov
inc
jno
mov
add
int3
xor
cs
dec
add
ret
xchg
xchg
lods
call
subl
add
mov
add
sbb
std
mov
scas
mov
push
dec
add
stos
or
call
pop
push
test
or
aad
fisubrl
xor
xor
lea
insl
mov
fisttps
push
test
adc
dec
mov
push
daa
mov
in
sub
and
test
add
addr16
test
shr
pop
aad
pop
mov
leave
es
addl
bound
aad
cli
lods
push
and
sbb
loop
cld
inc
js
add
sub
sbb
insb
inc
dec
push
sbbb
lock
pop
jge
add
inc
insb
jle
lret
enter
inc
rorb
push
inc
add
mov
jne
mov
add
sub
jmp
inc
aas
sub
mov
cmp
add
lods
fdiv
pushf
or
dec
jnp
mov
add
pop
or
stos
popf
or
insb
mov
mov
std
dec
outsl
pop
lock
test
negb
add
out
sbb
sahf
fdivr
fs
jge
cld
sbb
cmpsl
roll
cld
adc
popf
sbb
andb
mov
pop
push
xlat
popf
dec
xchg
pop
cmp
pop
xor
lds
inc
and
xchg
sub
add
jecxz
insb
fs
pop
jmp
mov
inc
xchg
xchg
add
pop
xor
popa
add
sti
js
add
sbb
add
inc
icebp
cld
shrb
push
add
adc
or
xchg
scas
dec
ja
cli
das
add
into
or
gs
adc
test
loopne
xor
test
ds
repnz
jb
popf
jmp
fidivrs
imul
pop
dec
stos
mov
pop
add
add
sbbb
fsubl
dec
outsl
mov
adc
cmp
add
ja
rcl
lea
stos
hlt
and
imul
xchg
push
mov
push
sahf
xor
pop
pop
add
and
rorb
cld
add
std
dec
pop
dec
daa
call
test
adc
aas
push
rol
gs
roll
movsb
xor
lods
mov
jns
mov
pop
addr16
mov
sbb
sub
add
or
dec
push
mov
in
xlat
das
xchg
shrl
loopne
mov
jno
or
rcr
ja
fadds
icebp
arpl
movsb
pop
cwtl
stos
mov
in
jl
xor
popf
push
dec
cmp
imul
jmp
add
sub
mov
jl
dec
adc
mov
jne
add
mov
pop
push
fsubrs
xchg
or
loopne
push
in
inc
mov
push
call
xlat
pop
lahf
sbb
add
daa
push
ljmp
xchg
mov
call
push
cmp
and
jmp
mov
mov
lods
mov
cmp
lahf
jne
lods
adcl
filds
clc
cmp
add
pushf
bound
lods
cmp
and
fwait
add
mov
das
orl
mov
push
ds
push
jle
mov
mov
add
fstl
inc
push
fildll
sub
cwtl
adc
push
xchg
adc
adc
xorl
add
enter
ss
mov
push
add
lods
inc
mov
fiaddl
jnp
add
mov
call
sbb
sub
loopne
repnz
mov
jmp
lods
fadds
rolb
inc
mov
xchg
lock
add
mov
xchg
imul
mov
sbb
shlb
add
daa
mov
ficoml
lahf
loopne
push
push
or
ss
sub
pushf
xor
add
and
fwait
sub
shlb
or
test
push
mov
sbb
adc
imulb
xor
shlb
add
xor
out
cld
inc
mov
fwait
pop
cmp
adcl
push
xchg
ret
pop
lock
dec
into
mov
lahf
add
mov
ja
add
jo
dec
stos
notb
add
mov
mov
rcll
xor
add
sti
add
push
adc
lock
add
fdivl
ret
xor
subb
cmp
mov
pop
and
loopne
enter
pop
test
fistps
cmp
pop
pop
les
add
sbb
insl
add
les
fldl
lcall
push
jg
sbb
inc
andb
xorb
pushf
add
jecxz
js
shlb
add
jne
xchg
ljmp
aad
bound
int3
inc
cmc
pop
add
shrb
ret
fistpll
add
add
inc
mov
inc
add
out
rol
outsl
jecxz
call
sbbb
push
sti
addl
push
xor
in
sub
push
in
sub
lock
loopne
and
jns
add
fldl
add
sbb
sub
or
out
cmp
inc
mov
ret
movsb
out
add
mov
insl
push
in
pop
mov
adc
adc
jl
adc
pusha
push
mov
int3
mov
dec
addr16
out
add
or
in
cmp
sub
sub
idivb
sbb
loopne
cmp
sbb
or
mov
xor
push
test
es
addl
mov
repnz
fldenv
cmp
add
jne
xchg
or
addr16
pop
xor
jb
cmpb
pop
add
lahf
cli
xchg
sub
add
dec
pop
loop
lret
shrd
add
adc
sbb
add
cmpsb
pop
push
fidivs
test
sahf
add
push
popf
dec
cmp
xor
or
test
or
xchg
sub
add
pop
add
xlat
js
adc
sub
mov
adc
in
loopne
sub
add
std
imul
and
jne
push
push
jl
xor
adc
xchg
dec
push
jl
pop
imul
fadds
mov
lods
pusha
je
or
xchg
cli
int3
in
lds
ds
xchg
call
xor
test
and
pop
mov
pop
cmpsl
lret
outsl
add
call
or
cltd
jmp
adc
push
int3
rcrl
scas
addr16
pop
inc
data16
in
add
aas
mov
testb
sub
mov
xor
mov
and
mov
cmp
sbb
xchg
pop
xchg
pop
add
pop
scas
js
add
sbb
adc
jnp
pop
fsts
add
jg
add
shrb
test
push
add
fsubl
mov
jmp
incl
fwait
mov
jno
xchg
enter
mov
repnz
cmp
test
xchg
cmp
dec
jp
shlb
add
mov
sbb
cld
inc
dec
add
hlt
add
decb
pop
and
fsubr
pushf
mov
mov
ljmp
mov
or
pop
testb
add
in
adc
pop
lock
add
daa
rolb
jbe
fwait
repz
sub
inc
add
fcmove
decl
pop
repnz
out
cmp
iret
add
ror
pop
loopne
fnstsw
pop
lock
mov
in
jg
cwtl
dec
add
push
push
and
mov
and
daa
or
add
xlat
gs
jg
and
in
sti
rolb
popa
iret
mov
lret
out
push
sbb
xlat
stos
jmp
pushf
dec
add
xchg
adc
hlt
dec
add
cmp
cwtl
and
je
add
inc
leave
in
bnd
dec
push
push
mov
add
push
stos
add
cli
mov
clc
in
sub
push
icebp
mov
stos
orl
in
jge
pushf
ja
add
xor
popf
ljmp
insl
mov
xchg
add
imul
xor
fsts
or
or
add
enter
jge
push
sbb
je
adc
aaa
xchg
in
movsl
push
xchg
xor
pop
add
mov
std
add
or
xor
adcl
pop
xchg
mov
in
nopl
aam
inc
xor
inc
adc
test
in
stos
outsb
in
rolb
xchg
cltd
sub
sbb
hlt
add
fwait
adc
push
outsl
ret
loopne
adc
xchg
add
cld
mov
jg
or
inc
mov
out
psubd
add
divb
movsb
jo
push
sub
xchg
js
add
std
jge
jg
inc
adc
pop
gs
cmc
icebp
and
add
pop
xchg
and
add
jbe
pop
enter
rorb
sahf
sub
andl
mov
test
incb
dec
cmpsl
mov
inc
ret
addr16
fwait
roll
mov
insl
int
sub
sbb
add
mov
cmp
iret
mov
adc
popa
clc
rorb
add
xor
lret
xchg
std
out
push
jne
add
addr16
aas
js
pop
nop
xor
cmp
cld
mov
xchg
xor
aam
push
adc
out
xor
xorb
pop
pop
cmpb
sbb
ss
xchg
hlt
aas
cmp
stos
andb
jl
xlat
adc
jmp
insl
iret
add
lret
lods
jns
sbb
xchg
rolb
dec
addl
xchg
dec
mov
mov
add
and
xlat
mov
xchg
sahf
jp
cmp
loopne
and
or
sbb
lods
out
cwtl
mov
in
loop
sbb
jg
mov
pop
or
sti
cmc
jle
es
adc
add
mov
jns
stos
xchg
mov
add
inc
jle
inc
cmp
shl
repnz
aas
add
inc
mov
or
jbe
incb
sub
cwtl
adc
add
rorl
sahf
jae
lcall
add
je
xlat
out
cmp
movl
or
imul
push
xor
lock
sub
addl
sahf
das
sbb
xor
sti
adc
ret
cld
leave
mov
stc
jmp
push
addl
incl
push
pop
popf
out
dec
mov
mov
int
adcb
inc
in
push
rcr
nop
jle
xor
into
cmp
jnp
add
sub
mov
pop
jae
add
push
xor
inc
lds
add
mov
ret
add
bound
mov
push
in
aad
jg
xchg
addr16
into
xlat
rol
pop
lcall
movsb
lock
inc
std
cwtl
sub
add
cmp
call
into
sub
pop
xor
enter
stc
xchg
or
cli
rcrl
or
repnz
mov
in
push
push
inc
invd
cs
lcall
add
sbb
xchg
hlt
xorb
shll
mov
sbb
cmp
add
cmc
jecxz
or
sub
cmpb
cli
cmpsb
pop
inc
js
add
sarl
stos
cmp
add
ja
inc
arpl
aam
jge
out
subl
lods
int3
insb
xchg
add
int
add
outsb
and
xchg
mov
xchg
add
stc
mov
add
sub
dec
bound
imul
sbb
in
roll
ds
shr
inc
das
add
fadds
std
add
xchg
outsb
int3
pop
cmp
xlat
cmpb
sub
sar
push
jnp
cmpl
mov
sbb
push
inc
add
mov
mov
inc
add
xor
stos
cmpsb
repnz
mov
outsl
add
or
add
inc
addr16
shrd
movsb
test
daa
dec
xchg
pop
add
mov
and
sar
mov
in
in
mov
test
insb
jne
fucom
xchg
je
sbbb
pusha
sbb
int
test
fsubp
lods
cs
scas
cs
cmp
cmpsb
add
lea
dec
add
jno
movsl
xchg
shr
not
add
mov
xor
in
adc
sbb
mov
add
lahf
stos
hlt
aas
nop
or
mov
xchg
int3
popf
int
xor
out
pop
jns
repnz
dec
mov
faddl
gs
jl
add
cmp
cmp
cmp
rcr
pop
loopne
add
stos
mov
and
add
lea
fadd
dec
jb
and
sbb
int3
insl
add
pusha
push
lods
pop
dec
sub
test
mov
sbb
adc
js
jl
shl
or
iret
xchg
popa
push
jo
inc
add
sbb
xchg
pop
dec
xchg
jp
lds
loopne
add
aaa
nop
add
shlb
or
push
mulb
leave
jmp
shl
scas
iret
or
shl
insb
shlb
xchg
cmp
fisttpl
mov
push
cld
in
xchg
rolb
int
test
push
adc
mov
loop
cmpl
pop
mov
xor
es
mov
testb
aad
add
jo
dec
add
in
dec
mov
cld
xchg
fdivrs
sbbl
cmp
scas
out
dec
mov
cmp
idiv
push
js
daa
cmp
call
jns
mov
sbb
inc
xor
into
add
jmp
rol
mov
loop
mov
jmp
mov
fisubrs
andb
adc
jle
sbb
add
clc
ret
or
nop
pushf
add
roll
mov
loop
scas
add
in
add
test
loope
adc
imulb
inc
add
jmp
add
bound
add
add
add
ljmp
lods
xchg
pusha
inc
mov
pop
fwait
xor
lcall
incb
lahf
sub
je
xchg
insb
and
mov
jmp
push
out
mov
cs
adc
pop
sarb
fstp
cwtl
sub
enter
dec
punpcklbw
add
movsl
sub
shlb
push
add
pop
push
pop
fldl
sbb
xor
cmpl
stos
imul
or
adc
add
popl
inc
add
dec
xchg
jo
adc
pop
lds
rcr
cmpsb
stos
cld
add
out
cmp
roll
mov
lock
inc
pop
pop
and
inc
jns
inc
rcll
shrb
mov
push
jno
sbb
push
xor
shll
adc
movsl
and
push
imul
jmp
imulb
adc
sbb
jp
test
mov
dec
jge
cmpb
leave
add
je
fs
mov
jl
add
inc
jmp
pusha
dec
into
out
pusha
sarb
btrl
xor
lock
xchg
xchg
pop
orb
testb
cmpsl
push
sub
xor
jl
add
lret
push
pop
or
add
mov
xorl
arpl
movsl
or
inc
add
filds
movsb
lea
fs
or
xchg
jmp
inc
xor
mov
mov
mov
jecxz
or
sbb
sub
in
mov
mov
pusha
bound
daa
jae
pop
out
jo
fistpll
adc
mov
dec
jmp
xchg
add
out
adc
adc
xchg
sub
add
jle
pop
in
add
fadds
push
mov
jo
lds
mov
mull
mov
movsl
gs
sbb
add
mov
fcompl
loopne
fisttpl
hlt
jmp
gs
mov
or
int3
sbb
dec
push
das
jge
add
test
les
rcrb
jge
loop
jns
add
mov
es
pusha
sub
mov
add
sbb
push
push
movsb
int
push
pop
mov
or
stos
jmp
cmp
xor
stc
add
ficomps
faddl
movsb
xchg
jo
out
ss
push
jle
adc
sub
cmp
jbe
insl
push
loope
xchg
add
xor
mov
loopne
sarl
fisttps
aam
mov
adc
cmp
fadds
outsb
push
sbbb
clc
inc
cld
inc
in
fisubrl
dec
cmp
in
lods
rolb
add
and
sbb
gs
cwtl
rep
cwtl
sub
cmp
clc
ficoml
dec
ja
add
in
mov
scas
dec
sub
clc
jnp
xor
lret
mov
mov
or
int3
nop
xchg
call
sub
xor
icebp
insb
mov
std
mov
enter
and
lret
adc
adc
jp
mov
push
add
xchg
sahf
repz
xor
or
out
mov
mov
add
pop
enter
mov
outsl
in
ja
push
xchg
test
jnp
flds
mov
mov
pop
testb
iret
fstpt
jle
loop
mov
lea
sti
leave
xchg
addb
pushf
pop
push
sbb
pop
push
gs
sar
push
jnp
xlat
push
dec
jg
jns
ja
push
fnstenv
mov
rolb
xor
add
xchg
add
cmc
test
mov
add
pop
loopne
mov
jae
push
cmc
jno
sbb
cltd
ja
mov
add
jl
enter
roll
mov
scas
out
cli
or
incl
push
mov
sti
outsl
jne
movsl
repnz
push
addr16
mov
das
icebp
pop
adc
sarl
and
dec
add
xor
dec
sbb
outsl
pop
push
vpunpcklbw
incb
xor
jbe
mov
pop
int3
adc
das
shll
je
test
lcall
arpl
add
scas
pop
addr16
jne
mov
push
sbb
orl
je
pusha
iret
mov
ds
out
popf
stos
or
dec
pop
add
cmp
cmc
inc
jmp
xor
mov
add
mov
cmp
sbb
rorb
adc
jbe
nop
das
mov
mov
inc
push
inc
loope
cli
lock
adc
or
jb
or
dec
mov
xchg
pop
mov
jg
addb
cmpsb
fisttpl
in
push
add
repnz
xor
sbb
dec
test
pop
jge
add
jbe
js
andb
rclb
pop
std
add
mov
es
jno
xsha1
cmpsb
dec
cmp
cmc
mov
mov
or
in
xor
shrb
shlb
sub
add
ja
and
xor
add
add
in
lcall
cmc
xchg
ret
out
orl
mov
icebp
sbb
in
iret
or
addr16
and
sub
inc
imul
add
sbb
mov
test
cmc
jl
sbb
inc
adcb
add
sub
pop
ficompl
test
mov
adc
push
jmp
mov
inc
and
call
cmpsl
adc
ja
sub
jecxz
mov
inc
push
shll
sbb
and
sbb
cmp
cmp
xor
add
in
push
loope
mov
add
shl
cs
cmpb
in
adc
fs
pop
mov
mov
divl
push
pop
push
add
test
pop
cli
add
icebp
clc
out
xchg
fildl
xlat
cmpxchg
insb
xchg
pusha
cmc
repnz
testb
cmp
daa
xor
cli
mov
imul
sub
sahf
pop
bnd
sub
or
and
push
push
add
es
jle
mov
cmpsb
setno
add
and
push
jae
jecxz
add
cwtl
and
sbb
iret
pusha
add
cld
inc
mov
pop
stos
cmc
add
ret
lcall
test
or
cltd
mov
mov
clc
cmp
pop
mov
outsl
loope
fwait
lret
add
sub
adc
xorl
sub
aaa
sub
add
adc
nop
fisubrl
xlat
rcrl
in
inc
ds
adc
sbbl
insl
or
jno
xchg
stc
lock
mov
jae
cmp
pop
orb
cmp
mov
mov
out
lock
hlt
test
aad
jo
xor
or
sbb
jecxz
xorb
xchg
sbb
push
orb
add
dec
mov
pop
shlb
mov
fmul
test
aam
push
lds
lret
nop
loopne
push
jle
mov
push
add
sbb
mov
bound
pop
outsl
push
mov
cmp
lods
ret
in
cmp
stc
cmc
xchg
int3
jge
cmpsb
and
xchg
aaa
pop
pop
jle
add
jmp
test
daa
std
jp
mov
mov
mov
psllq
mov
pop
ljmp
test
movsl
cmp
inc
and
or
pop
jbe
sbb
lods
lret
into
test
xchg
js
add
push
popa
sbb
sarl
adc
push
ljmp
or
mov
dec
test
mov
sti
inc
push
and
jge
and
jg
or
sarl
mov
xor
add
jge
pop
out
lahf
arpl
sbb
and
add
jo
xchg
pop
xchg
in
add
cmp
xchg
not
jp
or
mov
add
cmpsl
pop
xchg
pop
cld
jnp
lock
cmpsl
call
adc
adc
push
push
sbb
xorb
mov
mov
rclb
nop
sub
jl
ja
add
inc
inc
lret
je
mov
ss
test
or
pop
lret
xchg
sbb
shl
add
insb
lcall
test
fsubs
in
imul
movsl
xor
aaa
mov
cmpsb
addr16
cmp
setnp
jb
fsub
dec
mov
vcvttps2dq
and
mov
inc
nop
jg
loop,pt
lock
repnz
mov
add
xor
sbb
arpl
pcmpeqd
lea
je
jne
pop
jmp
jo
movsl
mov
add
push
repnz
mov
fildll
add
inc
pushf
pop
adc
dec
add
cmpsl
rcll
inc
lock
int3
add
imul
push
and
jp
pusha
cmpsl
test
roll
daa
push
xchg
fmull
scas
add
fs
inc
clc
or
lds
mov
cmp
mov
cmpsb
mov
sub
lods
inc
add
mov
and
adc
push
push
cld
cmp
sub
icebp
jno
inc
and
push
stc
push
cmp
adc
push
or
jmp
push
pop
or
lds
or
hlt
and
mov
shrl
inc
pushf
mov
add
rolb
subb
and
out
loopne
add
xor
int
xor
add
fdivl
shlb
dec
loopne
xor
push
adc
adc
push
test
cmp
jnp
xor
dec
lret
add
push
jne
out
sub
int3
pop
dec
addb
jecxz
add
pop
pop
dec
cltd
xor
ficomps
test
adc
add
xchg
dec
jnp
lock
icebp
mov
leave
out
in
mov
data16
jb
sub
sbb
jnp
xchg
push
push
movsb
fdivs
jle
mov
cwtl
insl
mov
xor
outsl
flds
dec
mov
inc
scas
jns
add
test
iret
add
jb
leave
in
fstpt
push
call
test
inc
movl
bound
dec
cmp
mov
add
testl
sbb
ds
out
jb
sbb
aam
mov
inc
lahf
addb
aad
rcrb
inc
repnz
push
lock
add
dec
adc
ja
add
pop
es
adc
rolb
out
addr16
loopne
add
add
adc
mov
int3
dec
add
jo
cmp
mov
xchg
dec
jle
or
pop
xorl
out
loope
or
sbb
sbb
push
cltd
and
stc
lea
btc
pop
pop
inc
xlat
insb
rcrb
int3
xor
jnp
add
mov
jo
cmp
add
xchg
pop
dec
aas
pop
inc
clc
cmp
lea
push
xor
jmp
add
cmp
sbb
or
add
and
sub
iret
sub
mov
xor
push
out
jno
sbb
xchg
cmc
movsb
cmp
and
out
fwait
pop
add
mov
in
cwtl
inc
mov
enter
pop
pop
xor
clc
push
add
fisubl
sbb
adc
nop
mov
pop
ja
inc
shlb
ret
xlat
filds
or
pusha
loopne
mov
fnsave
and
add
testb
jg
cld
adc
push
xor
aad
cwtl
jne
jmp
add
addr16
jbe
mov
sbb
pop
dec
lret
int3
fnsave
xchg
cmpsb
push
or
dec
xor
fistpll
xchg
add
sbb
ror
int3
pusha
add
or
mov
pop
dec
loop
add
mov
add
xlat
andl
jg
hlt
pop
or
sub
or
lock
into
mov
adc
stos
inc
testb
sub
jo
lcall
iret
lahf
or
cmc
xorb
les
push
dec
sbbl
sbb
add
sbb
dec
sbbb
int3
pop
inc
inc
inc
cld
add
test
js
repz
mov
sbb
xchg
push
lods
bound
arpl
fadd
sub
clc
jne
mov
jnp
mov
inc
lahf
mov
cmpl
in
pop
add
add
iret
xchg
fdiv
pop
dec
inc
sbb
mov
roll
gs
scas
cmc
fwait
sub
jb
leave
fldt
jle
movsl
orl
lock
jb
scas
dec
add
pop
loopne
and
mov
jae
roll
scas
orl
mov
mov
pop
adc
imul
fistl
or
insl
fs
add
lea
mov
verw
sbb
fs
push
sti
into
dec
pusha
dec
daa
cmp
mov
pop
push
das
lahf
sbb
add
test
or
sti
mov
mov
inc
cmp
push
dec
pop
jg
add
inc
gs
frstor
iret
pop
sarb
test
clc
popa
dec
ds
adc
jp
add
shl
jb
fdivrs
out
in
xchg
int
push
movsb
aaa
movsl
dec
pop
jge
mov
mov
cmpsb
int3
pusha
dec
cwtl
cmc
hlt
rorb
ltr
enter
xor
and
shl
gs
jo
sbb
jle
stc
pop
daa
xchg
mov
pop
add
cli
dec
leave
jbe
lods
inc
mov
scas
jo
mov
rol
add
nop
inc
adcl
add
pushw
stos
fs
repnz
xchg
ljmp
cli
sbb
movsb
adc
cld
add
pop
mov
inc
jb
cmp
adc
sbbb
insb
push
or
or
ficoms
test
jnp
loopne
data16
adc
lahf
test
imul
add
fsubl
add
cwtl
shll
imul
add
cmpl
sub
cmpsb
mov
cwtl
jp
bnd
xor
add
in
jmp
push
int3
mov
rol
jbe
push
std
jl
add
xor
pushf
add
adc
or
and
sbb
cmp
mov
cwtl
sbb
jge
ret
cmpsb
sbb
or
jg
aam
fwait
adcl
inc
add
nop
pop
stos
decb
add
push
push
es
cmp
pop
pop
mov
cmp
into
push
repnz
outsl
add
adc
addb
and
sbb
adcb
add
and
pop
jl
or
add
popa
jno
cmp
xchg
mov
push
es
add
jno
icebp
add
aad
out
jno
xor
rolb
movsb
pop
push
out
mov
add
test
mov
pusha
jae
subb
pop
cmp
pop
lret
cmp
adc
dec
or
sbb
add
in
add
pop
sbbb
test
inc
mov
aaa
lret
push
into
lea
mov
inc
call
out
adc
pop
inc
sub
mov
adc
sub
push
dec
pop
fstpl
mov
sbb
les
fwait
repz
add
imul
add
jmp
dec
sahf
dec
sti
mov
and
aas
pop
jo
ret
sub
dec
lods
push
imul
add
cmp
add
cltd
jg
insb
es
push
add
push
sub
mov
je
push
xchg
fs
dec
add
leave
cmp
sub
add
jecxz
sub
rcr
add
lea
cmp
mov
adc
add
jnp
push
das
push
pop
daa
add
jl
or
add
call
and
loop
inc
jl
lock
std
jo
sahf
xor
sub
jge
add
cmp
testb
inc
adc
inc
xor
in
das
cmc
sahf
lods
je
ljmp
mov
leave
fiaddl
arpl
stc
pop
aas
aam
hlt
shl
scas
psrad
cld
mov
xor
push
push
inc
add
sub
add
mov
push
adc
sbb
rorb
xlat
add
outsl
je
popf
daa
sub
add
xchg
sbb
jle
sub
add
push
adc
dec
xor
push
clc
jge
add
nop
subb
push
pop
pop
pusha
jno
pop
jecxz
pop
dec
leave
fisubrs
push
add
xchg
jle
sub
pop
add
push
mov
mov
lods
ret
push
add
xor
adc
insb
testl
lret
xlat
cmp
mov
or
xchg
mov
insb
add
mov
movsb
jnp
pop
aaa
stos
lods
push
rcrl
mov
test
je
cmp
sbb
cwtl
mov
lahf
fiaddl
fwait
mov
lea
das
popa
xor
cmpsl
out
stos
pop
fcom
inc
mov
fiadds
in
addr16
xor
rorb
mov
fdivl
adc
mov
and
add
mov
dec
cmp
jns
mov
pop
jecxz
setbe
xchg
in
or
mov
mov
mov
dec
cmp
cwtl
jb
push
mov
xor
addb
jbe
mov
or
push
cltd
or
cld
push
lea
push
in
test
inc
push
mov
js
xchg
xchg
xor
or
push
xor
mov
jmp
add
gs
xor
mov
cmp
std
fwait
xchg
mov
cld
loop
and
jno
mov
mov
adc
leave
mov
and
pop
mov
sbb
add
arpl
outsb
or
mov
mov
cmp
jl
mov
dec
sub
cmp
es
test
out
movl
ja
push
and
and
add
mov
mov
push
mov
jae
fistps
pop
clc
add
or
outsb
pop
add
push
add
fucompp
xchg
xchg
outsl
sbb
cmp
aas
test
inc
dec
mov
rol
inc
mov
adc
test
mov
dec
mov
es
xchg
outsl
add
ret
dec
xchg
iret
xchg
int
add
xor
cmp
adc
xor
inc
out
in
sub
pusha
mov
and
add
negl
add
out
cwtl
cmc
add
sbb
testb
add
or
mov
sahf
ret
and
adc
pop
faddl
add
test
test
xchg
leave
bound
pop
mov
push
je
mov
ss
cld
cld
mov
stc
xchg
dec
aas
pusha
mov
add
shlb
mov
stos
sarb
pusha
push
mov
call
loope
gs
jecxz
fildl
cli
cld
adc
filds
sbb
xor
add
out
pop
add
lahf
sub
adc
push
insl
dec
cmc
orb
insb
push
dec
lods
push
rcrb
or
and
shrb
push
scas
add
lret
jl
add
push
das
out
jnp
dec
sub
xchg
cwtl
cmp
popf
pop
cmp
sbb
inc
repnz
mov
rolb
cmp
pop
mov
cmp
andl
push
push
andb
add
and
inc
cld
fdivrp
sbb
repnz
loop
xor
sbb
xorl
iret
repnz
or
arpl
pushf
mov
cmp
je
cmp
frstor
pop
test
jbe
add
rol
inc
mov
and
cld
ljmp
cmp
cmp
jbe
ljmp
and
test
xchg
jmp
dec
or
push
inc
ret
pop
lods
dec
jmp
add
add
dec
test
clc
add
push
cwtl
insb
mov
aam
cmp
int
add
or
dec
mov
and
pusha
add
fsts
adc
mov
hlt
shl
daa
add
or
in
sbbb
inc
add
xor
inc
cmc
sbb
test
aas
movsl
add
into
call
xchg
mov
inc
push
cmp
fldl
inc
mov
in
and
mov
decl
jle
jge
xchg
gs
lret
vxorps
jl
out
push
iret
push
stc
ror
adcb
imul
xchg
push
loopne
popf
inc
add
pop
push
out
enter
mov
add
adc
inc
out
cmp
add
sarb
add
sub
inc
andb
fldcw
cmp
lock
icebp
push
lret
and
paddd
call
add
icebp
in
jo
xor
ss
mov
and
mov
fldl
xchg
pop
ficoms
leave
ss
es
rclb
cmp
popa
add
xor
loopne
jne
stos
icebp
ljmp
stc
mov
gs
testb
test
in
leave
push
fldl
mov
adc
adc
xchg
data16
dec
loop
sbb
imul
add
mov
pop
jp
add
lret
in
loop
add
xor
and
js
fcom
xchg
mov
add
adc
out
into
mov
loopne
cmc
dec
in
add
clc
mov
movsb
inc
sub
popf
ret
adc
cli
add
and
add
lds
inc
add
dec
add
jne
sbb
mov
xchg
adc
mov
cmp
xor
les
pop
mov
adc
add
mov
loop
add
pop
xchg
or
add
xchg
je
stos
cld
xchg
loopne
xchg
mov
out
and
in
out
in
cmpsb
daa
es
xlat
sahf
add
mov
sub
add
sarl
push
add
xor
add
xchg
push
add
daa
cmpsl
ret
sarb
add
jae
imul
lcall
xor
jnp
lret
ret
sub
sbb
adc
frstor
loopne
cmp
pusha
xor
imul
testb
and
roll
or
add
int3
xlat
adc
push
mov
testb
mov
dec
add
test
pusha
inc
add
in
arpl
fwait
aam
adc
data16
xor
stos
repz
insl
rcpps
pop
pop
pusha
or
mov
imul
out
out
popa
hlt
jecxz
dec
pop
lret
mov
dec
dec
add
cmp
or
out
push
sbb
iret
mov
cwtl
mov
inc
add
jae
sbb
push
dec
add
push
mov
push
fiadds
pop
sub
mov
sbb
adc
icebp
dec
xchg
xchg
pusha
je
outsl
add
and
adc
or
push
xor
mov
sub
idivl
inc
add
jmp
xchg
mov
sahf
nop
add
and
call
js
add
insl
cmpsl
pushf
xor
pop
sbb
add
test
jmp
aaa
mov
data16
loopne
add
sti
nop
add
xchg
mov
stos
mov
xchg
cmp
sbb
scas
ss
cmp
addr16
and
jmp
es
add
dec
rorb
sbb
jg
ret
mov
add
cmp
dec
sar
pop
cmp
mov
pusha
jle
bound
cmp
lret
mov
adc
pop
sub
ret
stos
inc
inc
jno
mov
call
pop
fidivl
push
stc
stos
sbb
pop
adcl
fiadds
or
cmp
add
mov
and
pop
fwait
add
cmp
cmp
cld
xlat
jp
insl
pusha
lods
mov
add
imul
xor
and
xchg
jnp
jg
dec
mov
lods
xor
icebp
inc
inc
xlat
sub
loop
lods
push
imul
lock
mov
jecxz
or
mov
shrb
inc
add
cmp
lds
dec
movl
xchg
inc
mov
insl
add
lret
sub
sub
mov
imul
out
inc
add
call
mov
cmpsl
rcrl
push
mov
loopne
loope
mov
and
or
cmp
or
lea
hlt
and
jge
add
or
mov
scas
out
test
jmp
rolb
movsb
sbb
push
cmp
popl
leave
rcr
xchg
or
test
aas
or
into
add
bound
inc
out
pop
add
les
sbb
std
loopne
lahf
xor
into
inc
jmp
pop
pop
and
jl
xor
sbb
jle
testl
pop
dec
add
add
push
push
pop
push
addr16
and
jae
in
pusha
mov
jmp
mov
filds
mov
cltd
jno
scas
mov
push
ror
in
call
push
sbb
aam
insl
push
into
adc
push
fisubrs
andb
pushf
add
adc
push
test
cltd
adc
sbb
dec
sbb
mov
loopne
shl
add
push
inc
lds
std
js
pop
test
inc
add
cmpsb
mov
add
decl
sub
dec
sub
add
cmpsl
jns
mov
add
lcall
inc
sub
mov
insb
loopne
add
cmpsb
lcall
push
add
cmp
lea
sbbb
add
aaa
inc
repnz
das
add
adc
pop
dec
xor
and
xchg
sti
addl
and
or
dec
in
jmp
push
mov
and
lods
add
dec
jae
xchg
out
add
mov
daa
mov
hlt
adc
push
or
cmp
cmpsb
or
mov
add
lds
mov
jns
add
mov
dec
das
lcall
lock
sbb
call
roll
cmc
out
ss
dec
add
ret
dec
lahf
and
add
or
cmc
and
leave
ss
sbb
inc
inc
pusha
lret
xor
or
adc
jmp
les
fists
dec
sub
cmpsl
jne
mov
push
xor
mov
addr16
sbbw
frstor
lock
cwtl
loop
cmp
pop
sarb
les
push
push
mov
xor
push
insb
stc
cld
jge
add
das
nop
movsl
adc
and
ret
pusha
imul
nop
xchg
rclb
outsb
jmp
stos
lcall
add
mov
mov
pushf
scas
cwtl
insl
ss
adc
add
sbb
daa
decl
lcall
inc
xor
xchg
cwtl
mov
and
cmp
push
aas
inc
repz
mov
or
sbbl
mov
add
jmp
popf
xchg
jno
sti
punpcklwd
mov
inc
rcrb
aad
jle
pusha
lock
mov
add
push
test
inc
stos
enter
orb
aas
cmp
addl
lods
add
idiv
test
cmp
push
bound
fs
fidivrs
insb
add
negl
pop
mov
popa
mov
fnstenv
sbb
gs
stc
bswap
ret
adcb
rcr
add
pop
mov
sbb
cld
movsb
adc
pop
add
adc
add
pop
add
lds
xchg
nop
fnstenv
jle
add
and
mov
mov
scas
fdivrl
fwait
inc
mov
stos
lock
ja
in
call
pusha
fistpl
pop
push
push
pop
mov
call
pop
ss
add
sbb
sbb
outsb
add
push
outsl
clc
std
out
sub
ja
test
into
test
and
pop
mov
jl
push
popa
clc
add
add
push
sbb
imul
and
mov
subb
cmp
add
xor
out
push
pushf
imul
sbb
jge
icebp
xlat
js
mov
add
idiv
movsl
dec
mov
bound
repz
add
inc
test
mov
sbbb
cmp
cltd
add
inc
pop
mov
mov
add
std
adc
stos
add
mov
mov
xchg
sub
mov
mov
sbb
push
enter
nop
mov
lcall
add
sbb
insl
push
out
aaa
jp
sub
and
add
and
push
add
stc
push
movsl
mov
test
js
in
lds
mov
and
jo
repz
jl
mulb
add
sbb
imul
push
stc
add
mov
pop
lea
xor
cli
cmp
out
fwait
lret
jno
or
pusha
mov
gs
cmpb
inc
in
mov
aad
in
xchg
xchg
mov
and
add
das
aad
ljmp
clc
jnp
inc
push
mov
sahf
aaa
outsb
xor
lds
sbb
xchg
mulb
lahf
mov
call
icebp
mov
call
in
mov
pop
daa
add
addl
cli
cmc
adc
dec
movsl
or
jno
jg
inc
add
in
out
mov
sbb
add
mov
jb
or
cmc
mov
xor
repz
and
pop
mov
adc
inc
in
xor
jg
push
cmp
ds
jo
mov
sub
sbbb
mov
cmp
out
inc
mov
outsb
add
jb
popf
dec
mov
roll
rolb
adc
inc
add
ja
stos
ret
enter
push
lds
out
add
inc
mov
sbb
test
cmp
leave
loopne
stos
lea
aad
pop
hlt
cmc
add
outsl
jecxz
sub
cmp
sbbb
add
mov
mov
push
loop
or
pusha
lods
cld
mov
mov
adc
lock
push
jmp
adc
inc
insl
add
add
add
mov
inc
outsl
add
cmp
push
jno
pop
int3
in
arpl
bound
push
add
clc
xor
jno
add
jbe
and
sub
pop
out
add
rcrl
cmc
int3
push
repz
xorb
mov
mov
je
add
pop
jno
pusha
sub
data16
mov
and
cmpsl
pop
addr16
nop
cwtl
cmp
adc
lods
sub
mov
add
mov
jecxz
and
mov
cmp
flds
imul
pop
adc
stos
jl
popa
and
xor
cwtl
adc
daa
xchg
and
pop
icebp
jmp
sub
std
add
dec
repnz
jnp
lahf
add
lds
aam
mov
les
add
loope
pop
popf
inc
add
testb
call
cmovp
mov
or
dec
add
add
inc
fwait
cmp
clc
lahf
dec
xor
iret
cmp
jmp
sbb
fdivs
loop
and
add
or
leave
adc
lock
jnp
sub
fldenv
or
push
iret
push
push
mov
or
fs
and
pop
loope
inc
or
cmp
cmpsl
rep
sti
add
jg
or
adc
xor
cmp
xchg
movsl
inc
imul
sarb
xchg
jnp
adc
sbb
mov
jp,pn
ret
mov
add
das
push
and
aaa
xchg
ljmp
sbbb
ds
xor
out
les
mov
add
pop
push
arpl
pusha
testl
push
add
xchg
mov
mov
roll
add
test
xchg
xor
movsb
loop
enter
mov
jae
mov
and
mov
iret
sub
xchg
icebp
popl
dec
push
mov
add
sarl
or
lcall
dec
sbb
mov
loopne
or
stc
fstl
aaa
clc
adc
loop
push
jns
fnstsw
mov
add
test
xchg
rolb
jge
dec
jbe
mov
call
add
jo
jg
orb
mov
or
xchg
movsb
dec
pop
outsl
cmc
add
mov
add
gs
scas
sbb
cmp
pop
bound
mov
add
sti
or
add
repnz
mov
js
add
ljmp
xor
jmp
mov
in
loopne
mov
inc
stc
dec
mov
push
xchg
mov
popa
xchg
std
jp
mov
cmp
dec
insb
sahf
or
cs
add
xchg
mov
jmp
fistpl
loopne,pt
mov
inc
add
adcl
add
and
mov
or
jmp
mulb
add
add
pop
push
add
inc
xchg
mov
add
pop
mov
int
repnz
pop
mov
jae
popa
outsb
psubb
pop
loopne
dec
out
add
xlat
sub
mov
sbb
xor
jo
pop
xchg
in
and
cld
sahf
rolb
faddl
loope
or
add
sbbb
dec
cmpsb
cmp
outsl
imul
fwait
in
aad
adc
add
fiaddl
popf
imul
fcoms
ja
add
push
lcall
jno
cmp
idivl
ficompl
lahf
adcl
and
cs
pop
lods
lret
pushf
int3
pusha
cli
add
out
bswap
ret
mov
add
mov
and
fs
cmp
sub
sbb
dec
dec
pop
cmpsl
idivl
movntq
out
loop
xadd
and
mov
mov
stos
in
adcb
xchg
enter
pop
or
dec
ljmp
jns
aas
or
or
add
out
int
and
roll
ljmp
aad
fiaddl
dec
cs
popa
jmp
fistl
adc
push
andb
insb
or
ret
cmpsl
mov
mov
add
mov
pop
pusha
xor
cmp
add
int
dec
dec
add
and
in
loopne
adcb
lds
in
shrl
mov
rcrb
xchg
int3
mov
sbb
rcrl
and
stc
add
cmp
cmp
ljmp
test
int3
pop
sahf
gs
dec
mov
cmp
sbb
dec
sti
fimuls
adc
add
cs
jo
pop
add
jbe
loopne
jne
outsl
pop
push
adc
hlt
pop
cmp
adc
mov
pushf
pop
mov
incb
xorl
repnz
mov
add
xor
add
mov
rcrl
in
push
add
je
xchg
cltd
cmp
test
fsubl
imul
dec
js
push
cmp
rolb
lret
add
cli
jmp
repz
call
dec
cwtl
fwait
mov
roll
xchg
jo
ljmp
push
or
and
cmp
outsb
add
fidivs
mov
jno
std
cmp
jne
lods
adc
inc
xorb
inc
pop
add
sahf
and
add
int3
mov
test
outsb
movntq
out
mov
stos
int
nop
pop
test
icebp
add
stos
mov
outsl
lock
cmc
push
adc
imul
inc
inc
leave
or
mov
lds
adc
in
sarb
add
adc
test
ds
pop
xor
in
ret
nop
cmp
dec
ja
cltd
jmp
hlt
je
add
hlt
movsl
cmp
cwtl
add
in
sbb
inc
mov
add
in
sub
cmp
fmull
aad
hlt
xor
fxch
sbb
pop
arpl
or
sub
andb
xchg
pop
iret
mov
mov
add
cmc
es
jnp
jle
ja
add
stos
mov
xchg
add
push
in
rcll
bnd
jb,pt
cli
or
and
add
loop
and
arpl
aaa
ds
cmc
lods
stos
test
dec
xchg
rolb
std
add
mov
pop
dec
dec
jle
add
popf
jno
imul
xlat
jp
pop
ret
adc
xchg
push
xchg
xor
add
mov
add
outsl
sahf
fadds
clc
mov
xchg
out
fwait
dec
jae
incb
mov
sub
xchg
adc
sbb
add
rcrl
dec
adc
xchg
mov
cs
jae
pusha
imull
push
mov
push
sbb
mov
mov
cmpsb
shr
xchg
pop
xchg
or
mov
mov
mov
and
shrb
lret
fs
inc
adc
and
jbe
cmp
repnz
push
sbb
cli
dec
adc
xchg
add
sahf
insl
in
jl
mov
xlat
dec
mov
cmc
imul
test
popa
jns
dec
loope
dec
pop
hlt
test
push
repnz
test
cmpsl
mov
outsb
add
loop
test
adcb
fldl
rcll
dec
ret
jl
rorb
cld
test
push
push
lods
add
sarb
pop
lret
ret
shlb
jne
in
push
add
or
pop
lock
add
fildll
jnp
mov
pop
or
push
pop
test
and
mov
xor
mov
cmp
movsl
mov
andb
lock
sbb
jg
lar
jbe
lea
push
les
arpl
js
add
push
insb
dec
aad
add
in
pop
mov
jne
cmp
add
push
jbe
aaa
jl
xchg
repnz
sub
add
repz
inc
add
lcall
push
cmc
pop
je
add
lock
mov
pop
cmp
add
mov
movsl
insl
mov
sbb
sahf
mov
push
mov
add
xchg
pop
pushf
jmp
jg
pop
fildll
mov
and
fildl
jle
movsl
push
jmp
sbbb
inc
aaa
js
add
arpl
adc
inc
mov
sarb
loop
gs
add
add
int
sarl
cmp
or
sub
and
ret
xlat
out
mov
test
xor
mov
add
out
mov
int
std
addr16
mov
pop
mov
xor
sub
movsb
dec
sub
pushf
xchg
pop
out
mov
lds
rorl
pop
sub
push
scas
cmpsb
mov
pusha
outsl
clc
cmpb
and
loope
cmc
add
movsl
jno
ret
aam
insb
ja
add
jnp
and
push
movsl
add
test
cli
add
mov
ffreep
fsts
scas
push
cmp
xor
cmpsb
adc
push
psllw
in
outsb
shrb
cmpb
inc
outsl
push
add
rcrb
add
mov
aam
es
cwtl
add
mov
jae
fs
fiaddl
jo
push
or
cltd
pushf
add
pop
push
mov
dec
nop
ljmp
add
divl
aam
push
add
pop
fs
mulb
mov
sahf
cmp
jbe
xor
clc
adc
lock
imul
adc
iret
sub
cmpsb
push
mov
pop
add
xchg
xchg
mov
subb
adc
out
add
scas
mov
xor
xor
ret
in
push
push
cwtl
inc
mov
add
push
cmp
dec
mov
dec
xchg
mov
adc
sbb
insl
push
sbb
aad
sahf
sub
xchg
das
and
adc
insl
mov
lcall
pop
in
imul
pushf
mov
jge
shrb
movsb
dec
cmpsb
mov
xor
pop
shlb
outsb
sahf
adc
pop
imull
stc
stos
addl
adc
pop
pop
loop
movsb
out
add
outsb
sub
pop
pop
out
sahf
imul
or
pusha
aam
in
sub
fcomp
movsl
or
das
add
mov
xlat
lods
cmc
push
jns
fwait
or
inc
or
mov
adc
mov
insb
dec
jmp
inc
insb
xchg
fld
lods
mov
sub
jns
mov
cmp
mov
pop
dec
push
pop
add
jp
jae
roll
lcall
and
daa
in
das
inc
pop
mov
enter
hlt
aam
add
mov
je,pn
add
mov
dec
sub
subl
dec
inc
sbb
or
les
mov
jae
pop
movsl
les
loop
aaa
ds
sbb
rolb
add
loope
mov
sbb
das
add
add
lea
je
pop
push
xchg
push
popa
rorl
lock
or
jmp
test
insl
dec
nop
lock
pop
js
mov
push
pop
in
rcrl
mov
call
xor
ret
or
pusha
adc
fdivl
push
push
sub
or
or
popa
fdivrl
jl
out
int3
sbb
int
add
mov
mov
ja
or
ds
shl
andl
sub
add
fdiv
sub
ret
pop
pop
movsl
pushf
fisttpll
mov
loopne
pop
lock
out
inc
push
mov
pop
jne
add
inc
push
xchg
movb
ds
aad
pop
pop
outsb
in
test
or
aaa
repnz
jg
or
add
xlat
lods
js
mov
mov
cmp
pushf
sub
or
into
xchg
cli
adc
xor
jg
adc
mov
roll
lods
jle
or
cld
add
test
ss
fs
enter
xchg
sub
add
idivb
arpl
out
insb
adc
push
lahf
shrb
push
cld
mov
adc
mov
sbb
mov
outsl
or
add
pop
jno
mov
cmp
ss
mov
sub
lods
enter
aaa
and
mov
movzwl
in
arpl
ljmp
int3
push
lods
pop
push
daa
pop
in
push
rorl
xor
sbb
dec
mov
lret
add
cltd
int
push
fstpl
movsb
loopne
lcall
inc
ja
sub
das
mov
in
push
pop
jno
jns
push
aas
loop
andb
out
pop
adc
adc
pushf
cmp
add
dec
loopne
das
mov
xor
decb
mov
mov
sub
or
push
dec
jg
clc
fmuls
sbb
ja
mov
sbb
addl
clc
imul
fldl
test
inc
sub
cs
mov
mov
gs
subl
mov
mov
push
mov
cmp
mov
int3
daa
andb
das
mov
cmp
jbe
fidivl
mov
and
xor
push
mov
push
and
add
sti
add
test
pop
popa
ret
sbb
into
popa
xchg
mov
add
shrb
fcompl
int
sbb
testb
inc
fstl
cmp
data16
pop
jecxz
sbb
outsl
test
sti
sarl
add
xchg
mov
sub
add
inc
xor
mov
or
insb
jg
sbb
stos
stc
orb
xchg
add
lods
xorb
fbstp
push
pop
bound
dec
fsubr
add
and
pop
xchg
sti
inc
xchg
mov
hlt
aaa
hlt
pop
lock
cwtl
fisubrs
jge
imul
dec
mov
outsl
add
xchg
adc
mov
adc
mov
lahf
mov
mov
xor
push
adc
add
sbb
sub
xor
test
dec
pop
mov
in
loopne
sbb
roll
mov
sub
or
insb
pop
push
loopne
mov
cmp
loop
sub
cmp
xchg
mov
sub
sbb
push
jmp
cltd
mov
pop
inc
std
je
into
stc
add
mov
pop
in
inc
add
ficoml
add
dec
sbb
mov
or
rcll
rcr
int
add
clc
cwtl
iret
mov
imul
sbb
in
add
mov
jb
stos
jb
add
nop
je
dec
ja
inc
adc
aas
push
add
jle
jae
add
aaa
pushf
out
or
cmc
mov
mov
cld
sbbl
add
fmull
mov
sbb
into
int3
aad
scas
sahf
pop
shrb
rcrb
add
xchg
dec
popf
pop
loopne
repnz
nop
push
jo
sub
mov
roll
push
xor
insl
cld
rolb
movsl
push
pop
scas
sub
test
in
add
gs
pop
sub
les
sbb
mov
scas
divps
popl
imul
pop
outsb
addr16
push
mov
rorl
mov
mov
sub
dec
xchg
addb
lea
idivb
jno
pop
inc
rclb
jmp
mov
dec
inc
and
lahf
add
pusha
push
adc
outsb
test
in
out
hlt
je
add
jno
xchg
pusha
shl
pusha
pusha
push
cmp
or
dec
fs
jns
add
jns
dec
jle
repz
sar
cmpsb
mov
sbb
xor
or
xchg
addb
dec
dec
and
pop
in
xor
pop
inc
or
add
dec
sub
clc
shlb
mov
jmp
jp
bound
rcrl
xorb
mov
add
scas
sub
inc
xor
in
add
mov
sbb
xor
add
clc
dec
push
mov
dec
arpl
mov
int3
push
push
fnsave
cld
mov
add
ss
adc
pop
add
and
add
xchg
pop
mov
pop
push
aad
pop
ds
add
push
mov
inc
aad
repnz
lods
and
xchg
lds
add
sbb
and
push
add
sbbb
adc
gs
cld
les
mov
sti
jp
je
pop
sarb
sbb
and
repz
or
iret
push
movsb
decl
push
outsl
add
adc
or
xchg
lret
add
jecxz
and
mov
call
push
adc
push
lea
sti
shlb
repz
repnz
mov
push
add
mov
ret
mov
and
push
jg
or
clc
push
cli
adc
and
or
popf
add
data16
sbb
loopne
inc
adc
movsl
mov
leave
imul
add
icebp
push
cmp
dec
mov
cmp
add
jle
pop
mov
add
push
aam
cltd
lcall
jl
add
je
std
nop
push
es
cmpsl
push
repz
mov
add
shlb
jmp
add
pop
mov
add
mov
sahf
arpl
in
sbb
mov
shrl
enter
push
add
mov
cmp
out
mov
push
add
xchg
add
adc
jp
imul
repz
jl
xchg
add
mov
packssdw
inc
enter
add
xor
cmp
inc
push
rorb
stos
inc
cmp
pop
push
clc
jbe
add
push
adc
bound
and
push
mov
jge
inc
add
pop
popw
xor
pusha
rorl
add
cmpsl
lock
movsl
or
xchg
lods
adc
aaa
test
ja
int
test
les
imull
push
les
sub
sbb
nop
mov
std
xchg
dec
mov
add
jmp
jno
jo
and
cmp
push
xor
movl
enter
cmp
inc
in
mov
loop
cmpl
or
xor
adc
inc
push
fdivrl
xchg
mov
insl
push
add
sub
fidivl
cmc
push
add
repnz
jl
add
sbb
pop
scas
hlt
aad
add
and
mov
addl
sbb
ja
sub
or
lods
frstor
pusha
xor
loope
jne
std
sbb
and
mov
mov
xor
add
and
add
pusha
icebp
loop
mov
add
shll
lods
imul
dec
stc
dec
xor
mov
add
mov
xor
lret
xchg
and
testl
mov
pop
iret
push
test
lfs
mov
enter
xor
insb
icebp
nop
adcl
mov
loopne
cmp
scas
push
mov
iret
xchg
and
cmc
movsb
dec
divl
and
sbb
pop
dec
inc
or
jge
ret
dec
fdivrs
add
inc
shr
mov
inc
mov
rcrb
push
add
gs
mov
push
sahf
add
cs
data16
cmp
add
mov
fisttpl
dec
xor
push
mov
add
pusha
subb
fsts
inc
add
es
pop
inc
fs
fsubr
xor
mov
pop
or
bound
test
adc
test
mov
pop
mov
lods
xchg
add
jbe
inc
loopne
cli
sbb
cmp
shlb
jmp
inc
das
aaa
add
nop
jmp
sub
jmp
popf
rcl
push
add
push
mov
xchg
clc
and
sbb
jge
mov
mov
jle
fmuls
sbb
xor
inc
add
out
jmp
sub
inc
roll
mov
or
pop
testl
pop
sarb
adc
sub
jge
fisubrl
mov
sbb
mov
outsb
mov
push
divb
lahf
add
xchg
daa
test
inc
adc
and
lcall
jo
dec
add
lds
iret
jl
xorps
xor
cmpsl
push
jg
lea
sbb
in
and
push
leave
pop
add
push
mov
fsubl
mov
inc
mov
test
or
mov
jp
dec
xor
mov
mov
lods
and
lea
ret
inc
dec
fldt
addl
inc
xor
xchg
mov
jg
add
dec
ret
addl
lods
and
jecxz
shl
mov
cmp
std
mov
cmc
cmpsb
fbld
inc
push
inc
lret
push
add
fwait
cmp
imul
sahf
ret
rcrb
jg
iret
or
mov
add
lea
je
add
inc
mov
pop
sbb
push
leave
adcl
stc
mov
out
sbb
sub
jbe
aad
push
add
jns
jle
xor
test
decl
sub
push
mov
fs
out
add
aad
lcall
dec
gs
mov
adc
test
int3
mov
shll
jb
lock
cmpsb
popf
push
add
or
scas
add
pop
pop
call
test
icebp
lods
mov
jo
popf
xchg
scas
andb
push
sarl
jbe
add
or
sbb
insl
cmp
dec
pop
inc
push
add
push
stc
mov
addr16
add
cmp
inc
inc
mov
in
sub
jmp
pop
sbbl
add
and
inc
or
and
xchg
add
enter
mov
pop
sub
loope
add
sub
or
or
lds
add
pop
push
and
add
out
pushf
das
insb
adc
and
cmpsb
xchg
fsubp
and
gs
paddd
sarl
adc
jmp
inc
movsl
mov
mov
loopne
pop
mov
test
add
decl
cli
sbb
cwtl
div
shlb
cmp
push
add
cmp
notl
inc
insb
push
call
or
fidivrs
inc
add
repz
test
sbb
xor
mov
mov
arpl
jnp
cmp
mov
fiadds
adc
xchg
xchg
fldl
scas
mov
inc
hlt
cmp
cs
les
cmc
add
mov
push
ja
pop
subb
repnz
jp
pop
mov
dec
xlat
subb
repz
mov
jmp
cltd
ja
frstor
add
push
mov
bound
push
push
inc
cmp
cltd
nop
add
mov
pop
dec
leave
sbb
pop
jb
lock
mov
ds
cmpsb
es
fistpll
les
shrb
aas
pusha
mov
rorl
movsb
add
scas
imul
add
inc
push
out
add
sar
mov
pop
dec
sbb
xor
ja
xchg
jnp
add
aam
mov
sub
in
icebp
add
xchg
dec
jno
dec
or
or
arpl
add
inc
ss
xchg
stos
push
loopne
cmp
or
dec
cmpsb
movsb
xor
mov
ret
xorb
or
sbb
add
inc
stos
js
and
out
add
sbb
xchg
loop
add
mov
or
stc
push
repz
vpaddusb
cwtl
add
add
xchg
add
add
push
gs
cmpsb
pushf
adc
push
sub
lcall
loopne
push
jl
or
testb
add
cli
pushf
ss
fsubl
das
cmpb
test
ret
sub
sbbb
xchg
cmp
add
call
hlt
enter
xchg
inc
mov
data16
adc
or
cmpsb
adc
add
lock
jecxz
lret
xchg
into
rolb
add
mov
add
hlt
adc
aad
mov
jno
jg
das
xchg
sub
cmp
jg
add
test
leave
iret
cmpsb
out
in
adc
mov
ret
ds
add
div
les
add
xchg
jge
or
lds
sub
out
mov
push
nop
and
adc
out
dec
int3
xor
add
add
enter
faddl
or
loop
or
inc
pop
bound
sbb
inc
push
pop
jp
dec
idivb
dec
sahf
add
xor
mov
mov
push
sub
xor
int3
jg
outsb
inc
data16
add
and
add
and
adc
testb
stc
iret
mov
add
push
std
xor
out
pop
add
rclb
cld
sahf
inc
add
add
pop
mov
mov
pop
push
aaa
loop
mov
xchg
and
jno
xor
pop
inc
dec
cmc
jl
fnsave
adc
punpckhdq
pop
xchg
mov
pop
add
pop
pop
pushf
pop
or
xor
popa
sub
cmp
mov
inc
subl
mov
and
loopne
sbbb
sub
clc
ret
cmc
cld
cmp
pusha
and
add
shlb
dec
push
add
jp
sub
jo
xchg
add
imul
icebp
inc
roll
adc
jne
rolb
jae
jecxz
add
push
fs
lods
jmp
popa
mov
sti
out
add
xor
or
aaa
pop
fstpl
lds
sub
outsl
movsb
rclb
add
inc
bound
push
jg
js
outsl
inc
lret
mov
dec
dec
cmpb
out
jae
out
mov
imul
sarl
movsl
mov
mov
scas
cmp
pop
xchg
add
push
adc
and
pop
movsb
and
int
and
shlb
out
jne
adc
xor
fadds
jp
jmp
pop
cwtl
xor
paddw
add
sub
jbe
sub
xor
mov
add
call
jle
sub
pop
push
stos
sub
ljmp
xchg
stc
push
mov
dec
addr16
add
rolb
icebp
clc
insb
add
aam
ret
in
mov
addb
outsb
push
push
add
xor
and
movsl
pop
mov
das
adc
popf
add
ret
fldl
add
and
jae
es
and
insl
xchg
jo
scas
fsubrl
fcmovnu
xor
adc
pop
addr16
sbb
mov
jg
and
jge
in
insb
mov
enter
jmp
inc
sub
pop
adc
rcl
lcall
inc
mov
mov
xchg
pushf
jbe
xor
push
ljmp
ja
lahf
cmpsl
cs
sbb
add
xor
adc
das
pop
loopne
hlt
cmp
data16
push
lods
mov
jb
test
push
sbb
lea
push
jmp
insl
int3
popf
outsb
add
pop
xor
subl
xchg
cld
dec
nop
lds
add
xor
stc
mov
xchg
sub
mov
inc
or
je
movsl
inc
lock
mov
scas
mov
pusha
rorl
mulb
push
inc
out
ret
and
pop
pop
in
cmp
sbb
loope
sub
sub
lret
cmpsl
fwait
push
xor
js
pop
push
jle
jecxz
dec
loopne
mov
add
dec
aam
sbbb
jp
push
mov
repz
bound
es
test
shlb
pop
icebp
push
push
adc
mov
movsb
cmpsl
popf
inc
pop
jle
cmpsb
jnp
int3
fdivl
or
ret
ja
enter
push
jle
jp
adc
scas
mov
xchg
int3
inc
rcr
mov
not
shll
cmpsl
add
dec
mov
sidtl
fsubs
adc
insb
mov
stos
add
or
adc
out
inc
fsub
adc
lods
mov
and
push
in
mov
fldl
lods
push
pop
sbb
inc
lock
mov
mov
bswap
sub
or
push
cs
fistpl
pop
les
es
sub
sub
cmp
sub
jecxz
cmp
dec
test
and
xor
adc
rcr
bnd
addl
xchg
and
dec
fiaddl
sbb
add
xor
mov
test
movsl
nop
push
or
mov
push
pusha
jae
add
pop
test
mov
sahf
bound
in
or
dec
mull
and
cld
cmpsb
outsb
add
xchg
inc
mov
inc
add
adc
xchg
jmp
push
insl
sub
cmpsl
pop
push
bound
shrl
push
sub
and
add
inc
sbb
sbb
pop
mov
xor
pushf
inc
pop
cmp
movsl
arpl
mov
and
pop
in
fs
nop
repz
orl
sbb
mov
loope
cmpsb
push
cmp
pusha
inc
jno
inc
cld
xchg
xor
add
cli
repnz
cmp
jecxz
add
add
xor
stos
or
jns
dec
inc
lock
into
js
out
mov
add
xlat
mov
sub
cmpsl
test
pop
repz
cltd
add
mov
mov
repnz
loope
out
bswap
lods
or
xchg
push
fcomps
inc
jae
lods
or
out
lret
ljmp
add
mov
inc
adc
leave
in
push
sbb
sbb
jbe
sbb
dec
cli
and
inc
cmp
sbb
scas
sub
push
movsb
test
xor
push
sbb
cmc
notb
cmpsl
dec
mov
inc
or
jb
mov
adc
pop
sub
movsb
pop
and
fcmovbe
int3
add
rcpps
push
dec
mov
add
aaa
loope
add
push
fcompl
mov
mov
pop
rclb
into
cs
in
lds
cmp
cmp
cld
push
out
test
jge
loopne
pop
flds
test
out
cmp
mov
aas
inc
sbb
add
mov
pop
scas
inc
adc
sbb
hlt
add
mov
faddp
insb
aas
jp
cmpb
stos
std
cs
adc
add
inc
mov
out
repnz
lea
and
outsb
and
xor
xor
xor
push
cmp
cmpsb
jle
sahf
add
loopne
push
fwait
add
rcrb
test
xchg
or
repz
dec
inc
loope
xor
js
ja
or
mov
add
adc
popa
iret
sbb
loopne
or
lods
call
test
pushf
pop
or
push
mov
push
mov
xor
mov
pop
pop
dec
out
inc
pop
jb
cmp
das
cmp
call
add
cmpsb
sarb
jnp
or
push
movsb
add
aad
jge
jle
lcall
int3
jl
push
mov
mov
inc
push
add
sub
orb
or
mov
inc
pop
fcmovnbe
pop
mov
pop
repz
mov
add
and
aam
jne
mov
mov
add
xchg
and
add
jns
loope
push
sbb
dec
add
adcb
rclb
mov
test
add
adc
lods
mov
loop
mov
imul
subb
push
add
cli
shlb
arpl
pop
loope
js
addl
hlt
jg
and
mov
or
push
lret
jg
in
xchg
add
add
xor
loop
add
flds
scas
push
dec
ret
push
push
sub
cmp
add
mov
push
fwait
lock
jge
out
sbb
std
cmp
push
mov
fsubrp
sub
push
repnz
enter
inc
or
mov
mov
sbb
add
popf
aam
push
outsl
int3
dec
insb
mov
sub
cmp
cwtl
adc
add
sbbl
pushf
mov
iret
loopne
cs
cmp
xor
push
xor
in
shlb
pop
test
xchg
sbb
movl
cld
lods
and
add
lret
idiv
aad
jbe
inc
jbe
mov
xchg
fldenv
push
jge
add
iret
pop
add
adc
add
xchg
es
out
movsb
cmp
ret
or
stc
aaa
into
pop
aas
jae
aam
enter
push
xchg
inc
mov
jl
push
push
pop
addb
or
add
mov
add
mov
add
popf
xor
mov
ret
mov
loopne
icebp
es
add
jecxz
jmp
mov
clc
cmpsb
mov
or
pop
repz
sub
gs
pop
mov
jg
cmp
xchg
idivb
es
js
adc
xor
fcomps
movl
dec
mov
cmpb
std
addr16
call
xchg
xchg
add
cmpsb
add
sbb
pop
jmp
lcall
pop
outsl
add
hlt
push
insb
ss
ds
dec
stos
mov
data16
call
xchg
stos
cmovge
cmpsb
pop
jecxz
mov
nop
mov
push
pop
cld
sub
mov
xchg
andb
add
add
int
inc
mov
xchg
cmp
sbb
js
fwait
call
add
cs
in
dec
rcrl
jnp
mov
mov
int3
add
rep
shll
scas
cmc
fimuls
int
test
xchg
add
cld
jle
je
cld
fstl
movsl
scas
test
lds
add
dec
stc
stos
test
jp
sbb
cmpsl
out
and
aam
pop
push
sub
pop
mov
mov
pop
test
aam
push
xchg
add
jecxz
incl
in
test
lods
sbb
add
mov
in
add
lea
xor
xchg
loopne
cs
pop
mov
mov
cmp
test
fstpl
push
jns
mov
in
add
test
roll
inc
mov
jge
adc
pop
jecxz
repz
add
inc
fcoms
adc
push
or
into
fiaddl
test
dec
rclb
ja
test
es
xor
mov
imul
ds
add
ss
add
fwait
xorl
add
cmpsl
push
notb
jg
shll
rolb
xor
xorb
mov
ljmp
mov
js
outsb
pop
push
jbe
in
rcrb
pop
adc
cs
shl
jp
adc
mov
test
enter
test
idivl
pop
inc
fs
aaa
mov
push
fcomip
push
jge
and
stos
sub
xlat
pop
std
add
adc
xchg
or
xchg
push
cmp
jo
pop
faddl
idiv
in
mov
in
and
xorb
sbb
dec
vmrun
pop
mov
inc
push
mov
add
outsl
jns
hlt
sub
imul
nop
out
test
js
add
scas
xchg
je
sbb
add
pop
lods
pusha
xchg
std
out
push
add
test
and
rcl
jmp
leave
sub
xor
lods
add
push
cld
push
stos
loope
clc
jo
or
roll
scas
mov
and
adc
iret
push
mov
jecxz
add
cwtl
sbb
sbb
subb
cmp
in
mov
sbb
ret
cmp
mov
jp
mov
pusha
jecxz
xor
jae
and
int3
cmp
out
mov
inc
sub
fistpl
addb
ret
shlb
pop
dec
jl
mov
mov
cmpb
outsl
add
push
add
and
push
dec
xlat
cmp
iret
jne
mov
fcoms
push
out
aad
clc
add
mov
push
sub
xchg
xor
dec
add
dec
pop
in
sbbb
sbb
cwtl
cld
pusha
mul
hlt
push
nop
or
fstpl
test
jns
fs
add
xchg
mov
pop
fidivrl
hlt
xor
add
push
or
mov
fnstenv
add
push
push
jno
add
pusha
lds
jo
sbb
add
sbb
and
incb
dec
in
ret
rclb
add
iret
and
dec
or
pop
jae
xchg
or
ljmp
add
aaa
sub
mov
loopne
xchg
ret
call
gs
fiaddl
in
fisttpll
outsb
add
lods
push
iret
adc
ljmp
mov
rolb
stos
andb
js
add
fbld
mov
push
mov
movsb
nop
mov
lret
fsubs
xchg
pushf
jb
hlt
adc
sahf
cmp
add
ret
mov
pop
sub
loopne
cwtl
sub
add
cmp
dec
in
dec
popf
popa
add
sbb
pop
test
jnp
add
xor
add
test
jp
sub
addl
push
inc
dec
push
sarl
xchg
inc
add
call
jns
ljmp
push
mov
icebp
add
popa
leave
jo
inc
rorb
adc
lret
mov
in
xchg
add
pushf
lods
mov
add
inc
dec
in
cmc
dec
add
adc
add
pusha
mov
add
popa
sbb
imul
add
xor
push
or
ret
scas
flds
dec
lock
push
clc
imul
sahf
fs
loop
xchg
pop
arpl
dec
mov
out
jle
mov
inc
jo
fildll
sbb
or
push
inc
int3
xor
and
out
arpl
xchg
dec
clc
call
pop
inc
mov
push
lahf
jne
sub
bound
scas
rol
xchg
aad
ret
ds
popf
test
adc
sarl
jae
mov
fsubs
loopne
push
subl
popa
pop
inc
daa
leave
xor
ficoml
mov
dec
nop
inc
mov
fadds
popf
adc
test
sbb
push
das
call
hlt
inc
push
js
jb
loop
outsl
inc
sub
push
fldcw
ret
adcb
test
daa
mov
mov
jp
pop
pop
and
dec
fcom
push
lea
add
mov
fstps
mov
ljmp
and
fnstenv
lds
in
cwtl
push
add
stos
jae
in
add
pop
fmuls
mov
push
and
testb
dec
push
jno
lea
outsb
hlt
xlat
dec
lods
or
push
add
sbb
adc
add
push
jno
loope
mov
rclb
add
xor
mov
dec
bound
xchg
enter
ja
mov
jg
pop
out
pusha
inc
add
sbb
roll
sbb
or
imul
test
stos
and
cmpb
push
mov
subl
data16
cmp
outsl
dec
stc
test
push
idiv
jl
mov
lods
fcmovbe
shl
adc
dec
xor
fisubrs
pop
mov
test
enter
ret
pop
xchg
sqrtps
ja
scas
mov
mov
jno
mov
mov
sub
adc
add
loopne
fldenv
pop
das
sti
fisttpl
inc
sub
inc
mov
data16
aas
adc
and
ds
jnp
cmpsl
insb
xor
ficoml
pop
stos
sub
add
movsb
das
iret
rorl
or
add
jge
mov
daa
sbb
push
add
and
jmp
push
mov
lret
rcrb
clc
add
mov
cmpsb
lea
dec
cmp
pop
push
scas
adc
sbb
sti
ret
dec
and
cmp
jnp
mov
scas
lahf
roll
mov
mov
or
insb
mov
add
in
in
lds
inc
es
cs
sbbl
popa
adc
mov
cmp
push
jmp
in
xor
cmpsl
int3
jno
add
test
xchg
movsl
mov
dec
push
sbb
arpl
add
push
sub
adc
sarb
inc
inc
xor
out
adc
addr16
int
int3
push
push
add
les
sbb
popl
ret
push
aaa
adcl
fsubrl
mov
ds
mov
in
lods
out
add
lcall
push
ficompl
movsb
es
movsl
les
jae
xchg
int
lds
xchg
das
in
pop
sub
jp
insb
cmc
aam
dec
adc
lret
rcr
outsb
fiadds
sbb
jae
int3
aaa
clc
add
mov
xchg
sbb
es
repz
add
pop
add
out
enter
dec
xlat
mov
cmp
add
mov
sbbb
add
adc
insb
pusha
insb
negl
add
xchg
inc
dec
cmp
add
ds
push
adc
add
inc
mov
pop
or
push
jbe
int
mov
lock
jns
dec
cmp
movsb
out
out
xorb
insl
popf
sbbl
mov
mov
scas
pop
add
iret
imul
cmp
mov
sbb
insl
ror
insb
add
stos
push
mov
sbb
xor
shlb
or
scas
test
adc
sbb
push
push
jmp
lods
inc
das
push
pop
push
out
push
loop
dec
outsl
outsb
imul
add
repz
addr16
rcll
add
xor
mov
outsl
mov
add
sbb
cmpl
rcrb
or
sbb
lods
adc
jp
sbb
xchg
xor
aad
mov
les
aam
dec
in
cmp
lcall
jb
pushf
mov
add
or
shll
mov
cmc
push
inc
mov
negb
in
add
sahf
lock
rolb
ret
inc
iret
xor
sbb
add
repz
div
into
std
adc
sub
cmp
ds
push
test
cmp
lock
mov
insl
dec
pop
mov
fidivrl
dec
xor
faddl
pusha
lds
mov
jge
add
shl
fmuls
inc
and
inc
xchg
dec
xlat
adc
in
sub
lret
xorb
mov
or
xlat
jo
pop
cmc
lods
fs
adc
cltd
pop
dec
or
ret
lcall
and
jnp
mov
push
sbbb
xchg
push
inc
in
push
adc
lea
jl
add
imul
push
xchg
sbb
pop
inc
mov
insl
lea
out
lods
jne
push
aad
jmp
hlt
mov
in
or
mov
mov
fwait
sbb
push
popa
call
add
pop
ret
fsubr
fidivs
insl
int3
adc
add
lahf
jnp
mov
xlat
fdivrp
ds
push
pusha
cltd
mov
xchg
cmp
jo
add
sar
mov
popa
fwait
mov
loop
or
adc
outsl
and
pop
test
roll
dec
add
xor
mov
sub
sarb
jnp
mov
add
and
pop
les
push
jno
xor
mov
push
hlt
inc
push
mov
mov
popf
sub
jmp
push
cmp
hlt
jle
inc
xor
js
mov
pop
fildll
adc
cmp
add
lock
add
mov
aam
sbb
loope
in
movsb
pop
mov
and
adc
mov
movl
cmp
pop
movsl
adc
cmpsl
add
add
js
sbb
or
cmp
mov
mov
add
addl
mov
inc
pusha
push
aaa
lea
dec
repnz
mov
test
cmpsb
or
aaa
and
pop
dec
insl
sub
sahf
or
inc
in
imul
push
daa
call
jge
fnstsw
mov
ss
xchg
cwtl
js
cld
xchg
int3
bound
pop
or
das
cli
rolb
inc
jae
adc
xchg
mov
pop
and
mov
fiadds
scas
cmp
movsl
mov
lods
cs
fbld
ss
mov
insl
icebp
xchg
stc
fsub
faddp
mov
addr16
pop
pusha
mov
loope
pop
lret
lahf
rclb
fsubl
mov
sbb
mov
mov
imul
inc
xlat
xchg
adc
imul
mov
mov
insl
shll
xor
jmp
dec
add
and
hlt
adc
jmp
scas
sbb
xor
stos
fs
inc
data16
mov
je
jne
mov
push
jbe
rcl
ds
outsb
add
sarl
nop
repz
dec
and
lahf
test
popf
add
push
cs
inc
add
aad
and
add
lods
xor
cli
push
pop
pinsrw
and
setno
xlat
test
xor
sarl
jecxz
push
add
mov
call
test
mov
inc
mov
add
pop
push
mov
add
add
mov
cli
mov
add
or
popa
jmp
cmp
fs
add
es
add
xor
sti
add
lahf
cmc
aam
xor
mov
js
repz
dec
mov
cltd
sahf
orb
pop
nop
mov
push
add
mov
dec
repnz
dec
xlat
cwtl
shll
shlb
pop
stc
inc
ljmp
cmpsl
mov
add
add
loopne
sbb
and
pop
mov
fnsave
dec
rclb
add
mov
mov
cs
pop
add
add
enter
stc
pusha
mov
add
push
insb
and
sbb
fildll
addb
xor
add
sbb
push
test
cltd
es
sbb
add
mov
push
sbb
push
ljmp
mov
jp
inc
fimull
xchg
mov
aas
mov
fdivrl
les
into
lock
iret
mov
mov
add
fsubs
sbb
add
xor
test
mov
sbbb
push
pop
pop
inc
shrl
mov
add
ficoms
add
jb
lods
js
or
stc
iret
lock
dec
add
popa
jo
push
jns
push
mov
xor
add
mov
sub
push
mov
shr
pop
mov
jns
add
mov
filds
mov
clc
mov
add
lds
jmp
sub
push
repnz
out
mov
shll
dec
xchg
sub
dec
sbb
add
add
lods
sahf
add
jmp
jecxz
js
add
add
sbb
lahf
mov
mov
lock
loop
imul
push
int
push
fadd
add
xor
mov
add
inc
lock
inc
adc
and
dec
jl
mov
nop
add
out
out
setae
loopne
shll
mov
push
xor
mov
jg
addb
les
pop
and
push
shll
xor
jb
fdivrs
scas
cs
mov
cwtl
shl
out
clc
pop
cmc
adc
push
push
mov
mov
inc
test
mov
dec
test
inc
add
and
xor
mov
add
xchg
js
dec
adc
aad
rclb
fs
sub
mov
dec
test
and
push
outsb
sub
inc
adc
inc
push
sbb
sub
das
test
xor
adc
push
push
push
rorb
push
mov
sar
cld
dec
pop
jg
cmpsl
pop
xchg
cmpsb
cmp
ljmp
push
xor
add
or
or
cmp
mov
jmp
cmpl
inc
je
jecxz
mov
cmc
enter
inc
dec
mov
inc
or
add
push
jg
repz
cmp
and
lods
push
add
inc
lock
out
and
mov
bound
sub
push
inc
cwtl
mov
cmp
mov
jb
add
lods
cmc
mov
sub
mov
std
xchg
mov
in
fwait
insb
jae
xor
call
loope
jne
fs
mov
mov
cmp
jecxz
pop
scas
mov
test
cmp
push
push
int3
stos
inc
pusha
mov
aaa
leave
jnp
call
into
pop
add
aam
jae
xchg
nop
test
inc
loop
mov
test
dec
andl
nop
and
cld
add
cmp
test
push
aas
dec
pop
inc
ds
add
jmp
out
ret
fs
adcb
pushf
outsl
jmp
add
ja
mov
push
add
dec
adc
leave
roll
dec
mov
mov
and
ficompl
jmp
test
xor
out
icebp
outsb
add
divl
out
and
jmp
insb
adc
pusha
fistl
add
lret
mov
dec
jl
ljmp
add
sbb
enter
in
add
pop
clc
into
jmp
insb
cli
bound
add
ja
mov
lods
call
mov
pop
fdivp
hlt
lea
mov
dec
jge
mov
fadds
push
test
sbb
push
adc
add
adc
xor
sbb
outsb
add
mov
js
xor
dec
stos
add
in
or
add
pop
std
cwtl
or
ja
xor
mov
and
stos
push
xchg
adc
idiv
xorl
sub
mov
or
stc
mov
test
jns
adc
scas
mov
lea
mov
pop
mov
cmpb
stos
pop
test
test
jb
enter
and
jecxz
test
and
add
xor
stos
outsl
adcl
or
inc
sbb
and
add
out
add
cmp
aad
xchg
cmp
adc
loope
cli
lock
sbb
sub
orb
add
adc
out
sahf
inc
out
xor
mov
sub
mov
add
lcall
call
xor
pushf
xchg
jne
push
inc
popa
adc
jge
mov
push
ja
es
cltd
add
idivl
push
aas
dec
cld
pushf
insb
std
add
push
mov
nop
add
clc
lret
xor
shrl
pop
mov
add
test
enter
filds
lods
in
repnz
movb
jo
xlat
cmpsl
imul
je
adc
adc
inc
cmp
jle
in
mov
add
lds
ret
cmp
add
clc
or
jl
les
flds
ret
repz
lcall
hlt
jbe
mov
dec
inc
std
lds
mov
sbb
jnp
lods
and
push
ja
mov
aaa
fnstcw
sub
dec
mov
sub
xchg
pop
push
fisubs
add
adc
or
fldt
push
filds
xor
popf
mov
clc
pop
add
fcoml
jnp
jmp
scas
enter
jecxz
fnstsw
test
aaa
add
imul
sub
in
add
ljmp
jns
pop
push
push
and
cmp
arpl
in
inc
jmp
xor
add
pop
xor
push
xchg
mov
sub
hlt
test
ret
ja
jb
sbb
int
pop
sub
jno
imul
or
and
push
cmc
scas
fadds
xchg
mov
xchg
hlt
inc
lods
enter
test
enter
add
test
and
sbb
cmp
addb
lds
pop
pop
pushf
and
mov
fs
mov
mov
mov
push
stos
jl
add
sbb
fstpl
fdivrs
ds
push
sub
fs
sub
out
add
inc
punpckhdq
repnz
shrl
movsl
add
xchg
out
pop
xor
dec
mov
imul
movb
cmp
add
inc
xor
fucomp
fsubs
in
popf
add
add
cmp
add
test
mov
jne
push
dec
out
add
cmp
nop
mov
out
push
adc
pop
pusha
add
or
aad
add
stc
addr16
lods
cwtl
add
das
push
addb
jmp
scas
bnd
fcmovnu
xor
dec
xchg
pop
xlat
popl
or
mov
shrb
xor
std
les
roll
jns
inc
cmp
loopne
mov
je
add
mov
faddl
std
cltd
jb
sbb
or
sbb
mov
imul
push
mov
push
fadds
repnz
inc
mov
mov
inc
jae
in
lret
jge
xchg
pop
jo
push
call
mov
iret
push
loop
cs
out
sarb
pusha
push
mov
mov
add
out
aad
add
xchg
jmp
add
clc
sti
or
dec
and
jl
or
shrl
and
pop
cmp
sub
cmp
add
adc
shrb
roll
and
inc
mov
add
mov
wbinvd
add
pop
and
adc
cmp
and
shlb
sub
pop
rcrl
arpl
js
neg
jne
jp
add
push
into
int
adc
xchg
fildl
cld
jge
pop
mov
push
addr16
or
mov
cwtl
xchg
sub
ret
bound
aam
pop
push
movsb
pushf
add
in
push
push
push
cmp
pop
jmp
add
lods
mov
adc
cmp
and
mov
push
std
pop
popa
add
dec
and
pop
pop
fs
xor
cmpb
flds
arpl
mov
adc
das
sub
out
iret
push
cld
scas
and
int
lock
add
sub
add
xchg
mov
xor
test
jo
repnz
jbe
add
jl
mov
add
add
imul
sub
sbb
sub
xor
cld
push
in
mov
loope
fdivs
rcr
mov
test
push
in
dec
ja
jno
xchg
hlt
out
xor
pop
push
pusha
add
call
add
pop
mov
sub
mov
sahf
sub
in
add
pop
out
cs
pop
xor
daa
sub
pusha
pop
cmpsb
jnp
pop
mov
ss
ret
sub
pop
lock
lret
jg
faddp
pop
aam
adc
test
cmp
xlat
add
inc
jge
add
xchg
cmpsb
and
add
pop
sbb
int3
add
dec
push
add
or
sbb
mov
int3
ljmp
xchg
les
mov
push
lock
pop
cltd
shrl
xchg
call
xchg
dec
dec
loop
pusha
jae
add
push
mov
cmp
jo
dec
and
nop
xchg
add
mov
xchg
xor
add
outsl
subl
cwtl
ficompl
mov
lcall
sub
cmp
pop
in
jno
cvtps2pi
dec
inc
shlb
mov
xchg
dec
pop
mov
sub
mov
push
dec
add
icebp
mov
imul
xchg
out
dec
ficomps
jge
add
cmpsl
insl
mov
dec
add
loope
stos
pop
cltd
and
scas
add
sub
mov
enter
inc
clc
push
mov
cmpsl
mov
xorb
lods
cmp
lahf
test
jecxz
lock
ror
add
dec
scas
add
data16
mov
mov
cmpsb
insl
push
leave
pop
shlb
frstor
call
add
xchg
or
andb
aaa
testl
lock
fs
cmp
mov
push
jle
add
pop
mov
imul
or
into
mov
popa
jns
add
xor
jmp
aaa
xchg
sti
jg
pop
add
loop
inc
dec
pop
call
leave
inc
add
nop
pop
fcompl
popf
jge
or
sbb
mov
add
les
add
xchg
or
sbb
sub
call
and
xchg
cld
imul
clc
add
mov
and
scas
pop
repz
cmpsb
add
jg
jae
in
xchg
add
add
dec
dec
push
orb
jns
cmpsl
add
xor
cmp
sbb
mov
xchg
psllq
lock
jno
pushf
shl
cltd
cmc
subb
repnz
jbe
jne,pn
adc
lods
movsb
repz
sahf
mov
aaa
mov
cmp
addr16
cltd
jnp
sbb
rorl
mov
pushf
and
add
int3
jg
adc
iret
mov
cli
xchg
add
arpl
out
decl
lods
out
cmp
fadds
push
lods
push
les
sbb
add
add
mov
push
repz
sbb
fdivrp
cmpsb
push
cmpl
and
adc
add
arpl
loopne
pop
cwtl
out
std
fldt
push
nop
pop
add
xor
push
sub
and
mov
inc
push
mov
in
inc
cli
cmp
pop
add
inc
jmp
iret
sbb
jbe
add
pop
addr16
or
sub
inc
sub
clc
pop
loop
add
add
lods
add
cltd
sbb
or
adc
add
jmp
adc
mov
push
mov
or
cmpsl
push
sub
ljmp
xchg
jl
and
call
lret
sbb
pop
add
das
xchg
push
cmp
dec
add
addb
scas
lea
add
lds
add
push
push
test
add
xor
in
add
xchg
xor
cmp
xor
push
add
loop
sub
xor
inc
xchg
and
mov
add
xchg
dec
dec
jnp
add
fcompl
sarl
pop
popf
add
stos
out
insb
sbb
and
pop
inc
stc
jo
hlt
das
lods
stos
add
mov
add
adc
cmp
imul
inc
rcl
xor
add
and
rcll
add
mov
mov
add
lret
cwtl
add
hlt
push
sbb
or
mov
lahf
pop
and
push
add
adc
mov
fistl
xchg
scas
rcrl
add
shr
fwait
push
std
push
add
mov
stc
inc
jle
xor
loopne
cli
into
fldl
sub
loopne
mov
in
stc
inc
pop
jnp
fs
add
std
cmp
shrl
popf
xor
dec
jge
out
fbld
inc
mov
mov
outsl
add
aad
cmc
sbb
test
mov
sbb
clc
or
mov
xlat
dec
outsb
add
mov
sahf
push
and
mov
push
imulb
cltd
cmovnp
and
add
cmpsl
jnp
lods
mov
add
dec
jno
fadds
mov
sbb
ret
xchg
dec
in
insl
rolb
out
sbb
push
movsb
jp
or
cwtl
insl
xlat
inc
xor
push
shrb
fwait
shll
ss
sbb
call
mov
icebp
jge
push
rol
lcall
push
call
inc
add
dec
out
fcoml
xchg
xchg
jmp
mov
out
jns
xchg
sub
addl
add
sti
flds
mov
mov
mov
sbb
test
int3
cmc
xchg
test
das
sub
jb
rolb
cmpl
mov
scas
cmpsl
dec
adc
sahf
mov
jns
movd
mov
adc
push
arpl
push
ljmp
jmp
xchg
jp
add
adc
and
aaa
cmp
jmp
add
fbstp
mov
cld
gs
rolb
shufps
dec
sbbb
inc
insb
add
sbb
inc
jl
aam
add
cs
add
test
mov
cs
stc
pop
insl
inc
or
icebp
inc
mov
stos
rcrb
mov
mov
je
jge
mov
add
lea
stos
lahf
out
cmpsb
pop
mov
sub
jbe
sub
cli
add
in
inc
test
add
fbstp
roll
push
push
and
aas
mov
pop
mov
jno
add
popf
imul
jo
sbb
and
push
or
push
cwtl
jle
adc
aam
add
sti
rolb
add
movsl
xor
into
sbb
leave
jl
scas
add
inc
mov
inc
add
mov
pop
xchg
add
in
imul
mov
jo
sbb
push
lds
out
mov
scas
push
dec
xchg
sbb
push
rolb
jmp
add
mov
pop
subl
add
test
iret
xchg
in
nop
and
sbb
mov
sbb
dec
add
add
mov
mov
addr16
push
push
add
mov
and
add
stos
sbb
inc
scas
jmp
les
outsb
mov
add
popl
adc
sbb
jg
mov
dec
shl
add
mov
pop
and
mov
mov
push
push
push
cmpsb
jge
adc
sahf
pop
clc
mov
hlt
fldl
mov
ror
into
xchg
add
sub
nop
pop
mov
mov
or
dec
bound
xchg
dec
cli
js
add
out
sub
sti
pop
test
aaa
in
add
inc
dec
sbb
das
mov
jbe
cmp
adc
sub
pop
test
add
repz
sbbl
add
iret
lock
jl
cltd
push
call
pop
xchg
sbb
add
add
push
xor
loop
pusha
or
sbb
add
jl
fisttpl
dec
call
imulb
mov
into
adc
arpl
loope
mov
out
pop
mov
sti
loopne
jp
or
sbb
addl
inc
and
lret
dec
insb
in
adc
add
shlb
mov
repnz
add
dec
jne
mov
fcoms
push
addb
pop
sub
mov
jmp
and
popa
ret
rcll
add
jl
out
aas
lock
add
pop
adc
test
addr16
je
sbb
xor
fbld
add
das
outsb
or
mov
mov
jne
shlb
fwait
aas
jbe
add
lea
nop
or
jmp
add
pop
lahf
jo
in
sbb
sbb
sarl
sub
into
jle
add
subl
add
shrl
shr
jo
ljmp
dec
cmp
jo
popa
jp
add
push
xor
add
mov
outsl
lahf
int3
mov
lock
es
add
movq
test
mov
lcall
cmpsb
add
test
pop
pusha
inc
jae
pop
addr16
or
inc
mov
xchg
in
mulb
cmp
cmp
add
icebp
rcrl
in
and
and
movsl
jp
cld
les
cmp
add
fidivrs
add
inc
loop
and
sub
jg
add
ljmp
inc
sbb
pop
test
mov
push
jp
ljmp
jno
out
xchg
add
pop
xchg
ss
ljmp
sti
cmpsb
faddl
into
xor
popa
jnp
mov
pop
enter
mov
adcl
sub
xor
push
jb
addr16
push
adc
in
add
iret
add
imul
dec
pop
mov
ljmp
dec
stc
out
addb
jae
inc
jmp
fld
lahf
fiaddl
cmpsl
adc
inc
inc
cwtl
add
repnz
fmul
das
mov
subl
push
lahf
inc
arpl
lock
sarb
xchg
push
in
sti
fimull
bound
mov
dec
mov
cmpsb
aam
leave
loopne
add
add
push
lret
or
inc
add
xchg
int3
or
or
mov
add
cmp
les
add
data16
enter
add
shlb
dec
cmp
mov
xchg
in
add
lods
xor
mov
xchg
pop
pushf
pop
adc
mov
cwtl
nop
imul
mov
ja
fsubs
aad
mov
add
push
add
cmpsl
sbb
add
mov
mov
push
insb
add
aad
push
loope
out
add
jne
add
sub
fidivrs
add
push
dec
pop
add
or
pop
xor
aam
scas
out
repnz
aaa
add
cmpsl
je
add
leave
cld
push
lcall
in
dec
stos
mov
xor
sub
xlat
mov
fisttps
add
pop
loop
sbb
mov
repz
xchg
imull
jmp
jle
add
rorb
add
mov
xchg
xchg
adc
add
mov
addl
int
cmpsb
jb
mov
pop
les
jp
jnp
lret
pop
addb
cmp
push
mov
add
cmp
inc
mov
fbstp
outsb
xchg
and
push
sti
mov
push
push
clc
add
test
and
nop
add
cmpb
or
inc
mov
je
xor
xor
aam
push
adc
lcall
add
xchg
psllw
unpckhps
add
push
inc
cmp
or
rcr
mov
and
add
lods
add
adc
or
aaa
add
xchg
jnp
ja
imul
scas
adc
and
imul
mov
jg
nop
xchg
aaa
in
push
cmpsb
push
mov
jns
mov
cmp
pop
dec
shlb
add
daa
idiv
aam
pop
xchg
and
add
repz
add
pop
sbb
mov
dec
add
pop
insb
outsl
lcall
pop
mov
sub
test
stc
pop
loop
cld
fiaddl
mov
cs
pop
add
dec
in
or
adc
icebp
inc
scas
divb
inc
xchg
test
xchg
add
ret
loopne
cmpsl
push
adc
xchg
sub
outsl
shl
pop
aas
add
fiaddl
popa
imul
cmpsb
inc
fsubr
lahf
setae
and
aaa
imul
ljmp
add
sarb
jmp
push
vdivss
dec
jg
and
mov
push
pusha
push
addb
add
fs
add
xchg
add
shlb
and
add
cmpsb
pop
mov
aaa
mov
lret
ret
add
sbb
jno
je
pop
add
dec
inc
pop
xorb
fs
sub
inc
xor
push
scas
lcall
xchg
bound
add
testb
cmp
push
cmpb
inc
inc
push
or
ja
ret
cmc
mov
sbb
sub
mov
mov
cmp
aam
out
test
lock
sub
xor
daa
add
sti
inc
sbb
addb
inc
adc
cmc
push
mov
xor
sbb
jno
fldl
scas
mov
leave
inc
pop
test
and
dec
mov
stos
jno
xor
push
rorl
add
loope
mov
add
icebp
ret
test
sub
cld
xor
cs
push
push
orb
jg
cmp
jge
movl
neg
fwait
xchg
or
imul
les
jle
popa
lret
jle
add
orb
leave
dec
sbb
inc
push
jbe
je
scas
or
xchg
insl
pop
cld
aaa
push
adc
dec
jno
les
sti
xor
enter
fisttpll
cltd
clc
test
sti
add
cmpsb
dec
rclb
xchg
jae
insl
sahf
jmp
pusha
pop
ret
sub
cltd
or
adc
add
mov
scas
dec
lcall
mov
das
outsb
shlb
call
push
pop
daa
mov
add
pop
stos
xlat
pop
aam
mov
fcompl
push
jae
pushf
sbb
lret
out
push
add
mov
data16
out
cmpsl
pushf
xchg
enter
lahf
cs
jno
sbb
adc
xor
inc
sbb
add
nop
inc
and
and
xchg
mov
andl
repz
jo
loope
mov
fwait
add
stos
sarb
sbb
pusha
jl
cmp
inc
add
cmpsl
ret
cmp
jge
xorb
js
pusha
clc
jle
xor
in
push
ret
jbe
inc
hlt
add
lret
scas
dec
cld
bound
icebp
ffreep
xorl
push
mov
add
jle
rclb
jbe
xchg
xchg
adc
push
out
test
movsl
pop
mov
rcrb
add
lret
es
push
pop
movb
addl
xlat
aaa
fdivs
add
pop
loop
mov
fimull
adc
mov
and
dec
add
add
xorb
js
mulb
cmp
pop
xor
cmpb
and
add
call
pop
push
unpcklps
pcmpgtb
cli
inc
les
stos
and
xchg
pop
cmp
add
adc
add
shll
mov
sbb
sub
inc
jmp
jo
xlat
adc
stc
outsl
xchg
das
lret
mov
fmull
mov
scas
sbb
add
js
cwtl
mov
dec
mov
adc
mov
push
push
loop
jg
add
orl
aas
adc
sub
sahf
hlt
sbb
add
orb
inc
shl
rcrl
push
cwtl
in
jle
nop
gs
jl
dec
jge
fildll
add
mov
inc
hlt
pop
push
add
jecxz
adc
loopne
inc
mov
mov
lahf
xchg
sbbb
sbb
cwtl
xchg
dec
inc
add
imul
insb
scas
xor
cmp
cmc
or
dec
andb
lods
lret
add
fmulp
add
pop
push
rcll
mov
adc
mov
adc
pop
mov
jmp
lret
xchg
mov
outsb
and
sbb
fstl
or
iret
lds
mov
or
insl
jne
push
roll
jb
cmp
add
orb
adc
add
add
dec
add
ret
or
cltd
xchg
adc
xor
testl
sbb
push
pop
mov
fnstcw
push
add
or
pop
popa
add
ljmp
push
cmpsb
mov
mov
xor
outsl
jb
lods
cli
in
sub
add
and
je
add
mov
jne
cmp
xor
mov
ja
popf
xchg
nop
mulb
jno
test
push
add
cwtl
stc
imul
or
inc
cmp
fcmovnb
out
fwait
stc
xor
int3
loope
add
or
dec
in
lcall
adc
scas
jbe
fisubrs
add
call
rorl
popf
sub
pop
cmpb
pop
jnp
push
lcall
pop
scas
mov
and
dec
add
pop
shll
mov
add
sbbl
pop
pop
and
inc
add
test
imul
push
int
or
sbb
push
cmp
push
push
into
mov
lock
add
fnsave
shrb
cmc
xor
leave
stos
xchg
and
aaa
fmull
inc
add
xchg
icebp
mov
push
add
aas
dec
dec
dec
popf
cmpsb
jl
add
mov
and
lods
int
aad
jo
or
add
test
ds
mov
add
dec
jmp
adc
add
add
inc
jle,pn
roll
pop
adc
xor
lods
xchg
mov
mov
add
mov
push
jno
mov
xchg
pop
jle
add
sbb
pop
or
add
int
cmc
and
imul
rolb
add
add
dec
sbb
stc
add
orl
jbe
add
mov
scas
and
inc
nop
mov
scas
adc
iret
jecxz
cmc
push
mov
rcr
mov
roll
cli
into
cmp
xchg
fs
mov
sbb
add
cld
les
add
rcl
test
inc
dec
dec
in
mul
gs
xchg
es
xor
das
cmp
mov
inc
adc
cmp
loopne
jg
add
xchg
fwait
push
mov
and
add
mov
add
sub
xor
dec
jge
add
or
or
xchg
imul
stos
xchg
dec
daa
mov
add
mov
mov
insl
add
clc
jne
jp
sbb
inc
cmp
add
inc
pop
push
inc
sub
xchg
clc
fdivl
shlb
jge
jle
add
les
repnz
push
add
rcr
fwait
or
insl
ret
jg
mov
and
mov
repz
hlt
enter
addb
cmp
mov
mov
sub
jmp
ret
test
inc
aas
popa
dec
stc
xor
lcall
add
dec
and
sti
adc
add
add
xchg
mov
data16
push
xchg
cwtl
lret
pop
or
inc
rorb
leave
xchg
sarb
cmp
sub
jmp
or
mov
hlt
jg
xchg
mov
add
push
mov
add
push
cmp
add
aaa
out
cmp
imulb
or
cmp
lret
mov
outsl
add
mov
add
ret
mov
cmp
fisttpl
jbe
mov
pusha
sbb
add
dec
mov
faddl
sub
jp
xor
leave
xor
add
ljmp
add
dec
xchg
negl
imul
add
scas
dec
rcr
loopne
push
stos
add
push
ljmp
aaa
sarb
pop
imul
inc
aam
nop
push
into
or
fwait
in
mov
lods
and
je
jae
add
jecxz
mov
xlat
jge
repz
pushf
add
ja
xchg
push
cmp
add
sahf
xlat
pop
mov
adc
fsubrs
push
fidivl
mov
mov
divl
cmpsb
jecxz
outsl
sbb
add
push
mov
add
push
cmpsb
jmp
lods
into
fiadds
lret
mov
inc
out
or
add
imull
jmp
xchg
jg
cs
or
push
pop
pop
out
xor
fidivs
dec
les
add
adc
cmp
xchg
iret
add
mov
test
cmp
pusha
dec
divb
cmp
pop
orb
cs
jg
iret
out
subl
les
mov
jns
fdivl
mov
cmc
mov
std
out
cmp
jbe
out
inc
lret
add
stc
nop
lret
jns
pusha
jg
cmp
outsl
daa
xchg
add
jecxz
mov
add
ficompl
add
cld
add
movsb
out
test
add
cmpsl
pop
add
subb
pop
mov
fwait
das
imul
cmpsl
notb
mov
dec
pop
scas
add
shl
push
insl
or
jecxz
jge
jo
mov
push
insl
mov
lock
jl
cmp
adc
xor
adc
movsl
cmp
roll
stos
testb
imul
mov
adc
out
add
sbb
push
mov
mov
aaa
aam
inc
add
push
les
cld
add
stos
hlt
fwait
in
inc
xchg
add
add
push
add
adc
into
sti
push
sbb
xor
je
sub
sub
add
shlb
sub
jmp
pop
inc
das
jo
or
mov
jge
push
dec
call
or
or
adc
jmp
loopne
add
aad
cmp
push
ljmp
and
lret
leave
push
add
sbbl
pop
insb
add
pop
enter
xor
push
and
fisubs
add
lret
dec
push
sub
testl
pop
push
pop
clc
data16
shlb
outsl
bound
arpl
sar
cs
add
sbb
fdivs
mov
rcrb
jb
in
jl
add
push
jbe
dec
xchg
jnp
es
sbb
or
pushf
mov
loopne
push
jae
pop
repz
fcompl
add
push
scas
mov
add
fwait
lock
cmp
push
mov
aas
mov
fstpt
testl
jecxz
mov
cmp
shlb
pusha
xchg
inc
movsl
mov
jno
fdivrl
push
sbb
mov
leave
push
loop
in
and
sbb
adc
xor
fmulp
fdiv
cmp
mov
sahf
dec
cmp
ret
sbb
add
push
addl
in
int3
inc
mov
into
sub
or
ss
dec
fadds
or
push
shlb
pop
fs
jno
in
add
test
mov
inc
mov
jge
mov
mov
in
jp
daa
faddp
push
add
mov
cld
mov
xor
push
jb
repz
cmp
xlat
loop
rclb
add
jle
cmpsb
add
adc
roll
insl
out
cmp
in
push
cmp
fbstp
aaa
sbb
pop
mov
nop
push
add
mov
dec
push
dec
cli
add
and
lods
add
adc
aas
std
fildl
sbb
or
add
cld
xchg
shr
jg
lods
out
add
dec
cs
lock
dec
xchg
dec
xchg
sbb
xor
shlb
aaa
loope
pop
scas
xbegin
pop
mov
int3
push
push
xor
cltd
sbb
roll
xchg
out
rclb
sar
sbb
mov
repnz
sbb
insl
add
or
sub
daa
nop
in
mov
ja
add
into
mov
call
andb
scas
rcrl
pop
clc
add
dec
fidivl
xchg
sbb
mov
add
je
jno
mov
jg
pop
bound
jge
jmp
repz
adc
add
cltd
jae
ja
jge
mov
lods
decb
inc
repz
jns
push
pop
sub
xor
addb
cmp
xchg
out
mov
cs
add
add
jp
adc
add
aaa
push
sub
divl
in
std
xchg
adc
pop
negb
daa
sarb
rcl
pop
mov
insb
mov
push
mov
jg
mov
iret
outsb
int3
rcrb
mov
pusha
and
mov
sub
push
cmp
pop
push
ss
add
scas
xchg
loop
rcll
out
adcb
test
icebp
mov
or
sbb
ds
hlt
sub
jb
cmp
lcall
mov
ds
leave
pop
pop
movl
sbb
jmp
out
fwait
mov
add
enter
xor
pop
pushf
testl
mov
outsb
mov
or
inc
mov
mov
popa
xchg
and
push
aaa
dec
das
mov
lods
mov
adc
jb
sbb
rcll
int
mov
lock
push
pop
xor
test
loop
lods
dec
inc
add
adc
das
jo
or
in
pop
inc
test
inc
sub
es
jae
xchg
scas
add
rorb
inc
and
jno
in
push
push
pop
or
movsb
rorb
cmp
push
xor
test
repz
test
sub
repnz
orb
jb
add
xor
lret
pop
add
inc
add
cmpsl
xchg
gs
sti
push
push
or
mov
xor
jl
ja
dec
lods
add
or
pop
in
and
shll
call
adc
xchg
ja
cmpsb
pop
mov
mov
ss
aad
xor
xlat
push
inc
cs
jmp
or
cmp
fcmovu
in
sub
movsl
adc
orl
jge
add
mov
ret
flds
cmp
loop
fsubrs
add
pop
mov
lock
cmp
jmp
sbbb
add
inc
or
mov
dec
and
fdivrs
add
mov
inc
mov
add
jl
push
lds
xchg
adc
paddb
or
mov
cs
das
rorb
xor
xor
shl
out
enter
cmp
jne
scas
call
add
and
xchg
add
iret
aas
dec
sub
xlat
mov
inc
push
mov
jmp
ret
sbb
loopne
add
mov
jl
rsqrtps
repnz
repz
daa
pop
lret
pop
sbb
dec
xor
add
imul
adc
sub
pop
jae
mov
sbb
add
stos
jb
or
add
mov
jae
adc
in
and
push
dec
mov
pop
mov
jge
sbb
sub
pushf
and
xchg
lock
dec
test
push
ltr
loop
dec
xchg
add
adcb
add
mov
dec
add
shrb
xchg
add
add
inc
sub
in
rcl
inc
std
and
adc
in
dec
test
add
mov
out
pop
push
dec
add
loope
mov
dec
je
mov
jnp
pop
add
mov
lcall
ja
pop
add
bound
push
rolb
mov
insb
ret
cmp
jae
pop
popf
mov
out
out
mov
clc
sub
add
push
addl
cs
inc
je
sub
loop
jae
adc
mov
add
cmc
packuswb
jle
fiaddl
leave
inc
shlb
xchg
outsb
push
loope
retw
mov
push
rcrl
mov
push
jmp
je
pop
jecxz
xchg
pop
inc
shlb
dec
into
pop
add
dec
jae
sub
in
ss
ret
cmp
and
arpl
mov
ret
mov
cltd
adc
dec
mov
xor
fmul
addr16
jnp
flds
xchg
lcall
fwait
rcl
mov
mov
or
or
pop
and
gs
xchg
filds
inc
sub
aas
mov
cld
add
outsl
sbb
xor
lret
jbe
dec
xchg
mov
data16
repnz
or
xchg
push
ret
insb
dec
movsl
add
fistpll
sub
lods
daa
xchg
sub
xorb
addps
lods
sbb
push
mov
fsubrl
mov
pop
xchg
push
mov
punpckhwd
std
pusha
pusha
jnp
jno
or
xor
pop
hlt
rorb
sub
pop
pop
and
xor
pop
int3
xchg
dec
xchg
movzwl
out
and
js
jg
sub
xchg
dec
into
dec
add
das
ss
pop
sbb
pop
dec
outsl
push
mov
flds
xor
sarb
and
dec
adc
xchg
mov
fadds
mov
loope
cmp
mov
mov
lret
add
inc
and
sub
ficoml
and
jg
adc
roll
xchg
xor
jbe
enter
or
je
mov
xor
add
mov
ret
jmp
pop
mov
rorb
xchg
add
cmp
pop
mov
add
adc
dec
or
scas
subb
add
scas
dec
cmpsl
enter
aaa
xor
dec
arpl
pop
mov
xchg
pop
push
cmpsb
lcall
adc
flds
cld
int
or
scas
sub
cmp
jne
xor
pop
outsb
cmc
mov
mov
hlt
je
dec
loop
aas
loopne
or
out
push
dec
dec
add
repz
push
cmp
pop
jno
into
mov
subb
and
add
dec
shll
fstp
cmp
es
add
outsl
insb
pop
pop
fsubs
add
ret
incl
push
pop
adc
push
mov
pushf
mov
mov
fisubs
cmovl
insl
and
shld
push
cmpb
pop
mov
scas
loop
outsb
mov
or
aaa
cmp
mov
cmp
rcrl
sub
pusha
in
scas
adcb
cmp
sub
pop
jecxz
movsl
popf
pop
or
or
add
and
lods
add
xor
xor
int3
cmp
push
jno
enter
and
sbb
test
shrl
add
inc
adc
add
xor
mov
xor
add
cltd
sbb
jp
inc
cwtl
lods
inc
inc
lds
jae
movb
popf
into
int3
mov
push
add
das
lret
adc
or
add
les
mov
add
inc
and
enter
push
jae
fadds
fcoml
cmp
or
cmp
stos
orl
inc
inc
xchg
loope
sub
or
mov
dec
or
rol
cmp
pushf
sub
mov
add
push
mov
lret
in
outsl
and
dec
adc
rcrb
nop
arpl
xor
test
mov
popa
jge
inc
and
fwait
cmp
mov
push
in
mov
je
jnp
arpl
cmp
inc
adc
cltd
cmp
sbb
icebp
mov
ljmp
pop
inc
sbb
add
push
cmp
jmp
push
out
mov
clc
nop
aaa
dec
pop
scas
add
enter
push
nop
sbb
add
fcomps
and
aas
sahf
add
mull
inc
inc
es
push
push
adc
cs
mov
add
cmp
repnz
inc
jnp
add
inc
inc
movsb
insb
call
insl
mov
add
push
push
movsl
faddl
cmp
stos
addr16
outsb
pop
filds
lock
dec
inc
push
mov
icebp
mov
imulb
xchg
shl
je
or
pop
mov
mov
sbb
push
jmp
and
push
push
clc
fsubrs
sahf
or
iret
adc
lock
gs
andl
subb
push
repz
lret
mov
movsl
pop
adc
sub
repnz
scas
mov
cmp
ffree
daa
subps
inc
adcl
sahf
dec
add
xor
add
shlb
dec
add
jo
mov
int
int3
add
push
push
dec
ja
add
mov
mov
shrl
rcr
mov
add
gs
lret
xlat
int
je
pusha
ljmp
cmp
leave
dec
jmp
push
push
mov
mov
stc
rorl
cmpsl
orb
dec
mov
jns
add
lcall
pop
sub
jecxz
in
jae
mov
test
push
add
add
divb
push
adc
xlat
xor
in
mov
leave
daa
push
rcll
xchg
dec
add
mov
ds
push
jns,pn
add
sub
jmp
or
and
add
or
test
xor
cmp
cwtl
dec
arpl
or
jae
jb
xor
xor
mov
fwait
add
fdivrl
and
add
shll
mov
std
aam
xor
lret
sbb
mov
xchg
add
and
pop
xorb
sub
xchg
mov
xor
add
push
pusha
mov
lods
lret
xor
leave
fs
enter
fstpt
pop
push
inc
jo
pop
cli
cmp
xor
hlt
lods
xchg
notb
add
cmp
mov
xor
jnp
pop
aaa
lods
pop
cmp
lahf
ror
inc
dec
pop
jno
insl
jmp
mov
xchg
loopne
sbb
rcll
pusha
imul
add
int3
cmp
imul
mov
adc
xor
in
adc
jl
and
out
and
inc
ljmp
push
jae
fsubs
pop
and
cmp
bound
adc
mov
lock
outsl
xchg
jmp
mov
subl
adc
mov
jno
insb
cltd
adc
popa
mov
sub
bound
adc
pushf
inc
in
or
xor
add
lret
xor
xor
cwtl
outsb
or
xchg
lods
les
movsb
jbe
ret
xor
aam
adc
dec
inc
cltd
mov
and
mov
sub
andl
pop
and
dec
ja
push
xchg
pop
dec
mov
push
and
pusha
daa
int3
mov
adc
and
push
adc
adc
movl
out
adc
cltd
aas
xor
addr16
adc
lahf
adc
adc
es
push
pop
mov
test
cmp
fldenv
xor
cmp
in
cmpsl
inc
loopne
in
add
filds
dec
js
mov
and
popa
inc
xor
inc
inc
inc
and
jg
sbb
ja
dec
icebp
cmp
dec
test
das
jl
stc
or
aas
jle
jp
pop
inc
xchg
out
aas
sub
pusha
lret
jbe
scas
repnz
nop
cld
lahf
cmpsl
xor
cmp
and
iret
dec
pusha
enter
das
icebp
aas
push
test
jne
out
cmpsl
sbb
cmp
dec
stc
fisttps
enter
mov
nop
xchg
lahf
xor
sbb
jne
pop
popf
xor
loop
push
jl
out
repnz
fbld
sub
nop
lret
jbe
outsl
sbb
pusha
in
pop
xchg
das
aas
and
clc
pop
iret
jo
out
sbb
ljmp
dec
imul
dec
sbb
seto
adc
inc
inc
nop
gs
inc
pop
test
pop
js
and
fildl
test
cmp
adc
and
and
mov
xchg
mov
lock
or
mov
push
mov
or
test
daa
int
arpl
and
cmp
ret
stos
inc
inc
add
push
scas
xor
lods
push
enter
pop
and
and
pop
jecxz
pushl
jns
and
adc
or
mov
adc
mov
and
adc
fimuls
xor
mov
inc
inc
mov
and
das
das
mov
jns
nop
shll
ret
add
jo
cmp
push
mov
loopne
aas
jno
decb
dec
mov
inc
dec
stc
push
adc
and
jecxz
and
adcb
cmp
xlat
inc
les
adc
int
ret
ljmp
cld
test
sti
sub
xor
insb
adc
clc
or
adc
mov
pop
andb
or
pop
dec
stc
int
dec
call
dec
js
push
sbb
clc
lods
clc
xchg
dec
cmpsb
xor
sub
jb
mov
cmp
ljmp
jno
ds
mov
xor
and
nop
sub
jecxz
pop
adc
ss
fcomp
push
xor
mov
test
mov
push
lock
push
jno
cltd
sub
sbb
dec
xchg
clc
jns
inc
mov
xchg
xchg
fbstp
iret
js
lcall
movsl
stos
dec
pop
movsb
testl
aam
pop
mov
dec
lods
xchg
xchg
sub
mov
xchg
inc
cmp
int3
mov
mov
mov
pusha
repnz
ror
inc
and
in
and
fcoml
int
jl
dec
test
push
testl
jo
lock
test
add
jmp
cmp
cld
and
ss
sbbb
lcall
inc
or
and
sub
add
dec
sub
lock
push
int
sbbb
aam
pusha
int3
sti
add
cltd
sub
mov
and
lods
das
movb
cmc
or
test
loop
add
sbb
andl
in
or
push
mov
mov
fs
jno
adc
add
loopne
scas
ss
data16
push
and
mov
xor
popa
aas
mov
cmp
jge
pusha
imul
pop
in
add
xchg
mov
add
and
jo
rcll
ljmp
test
mov
repz
orb
mov
test
add
xor
mov
add
add
and
cmp
movsl
jno
pop
add
cmpsb
mov
add
jmp
inc
cmp
adc
sub
xor
gs
test
faddl
or
dec
leave
mov
lahf
shrb
add
pop
aas
sbb
mov
ret
dec
inc
insb
mov
xchg
aas
inc
movsb
mov
dec
add
jne
insb
lret
jmp
imul
mov
sti
dec
add
pushf
xchg
arpl
cmpsb
pop
ds
adc
add
imul
add
mov
push
shlb
xchg
adc
jae
fistps
lock
add
hlt
jbe
push
jns
call
push
sub
jl
data16
xorb
int
addl
sub
je
mov
cmp
clc
sbb
lret
mov
into
dec
add
fidivrs
in
call
insb
std
xor
call
bound
es
dec
add
xchg
sub
iret
pop
add
cmp
and
or
add
push
mov
sbbb
adc
insb
mov
and
dec
subb
pop
sbb
es
xor
push
sub
add
mov
scas
sub
adc
iret
mov
mov
addl
and
cmp
movsl
mov
js
dec
push
push
push
adc
pusha
dec
xor
out
dec
cmp
mov
adc
or
xlat
outsb
mov
mov
sbb
pop
jle
insb
ffree
loopne
std
xchg
incl
packssdw
popl
push
into
jmp
sub
data16
pop
in
adc
pop
pop
xor
loopne
cmp
loop
mov
fidivl
scas
add
pushf
adc
push
nop
jns
lds
inc
add
loop
sti
xchg
int3
mov
push
adc
rolb
ss
das
mov
inc
ret
es
fsubr
daa
mov
add
push
xor
adc
or
test
enter
fsubr
lock
add
pop
push
and
sarb
js
add
imul
mov
enter
jbe
sbb
mov
dec
clc
jge
aam
inc
inc
out
sahf
cld
dec
add
test
mov
push
call
or
lods
add
sub
xor
jle
es
cmp
mov
add
push
ja
inc
add
mov
add
add
sub
pushf
pop
jecxz
and
or
inc
pop
adc
and
push
add
add
xchg
cli
scas
fistpl
push
adc
mov
add
xor
and
icebp
gs
ja
inc
sub
int3
testb
lahf
es
out
mov
push
xlat
jo
mov
xchg
cmc
in
push
icebp
jmp
and
or
add
and
iret
pop
pop
dec
sbb
add
add
lahf
cmpsb
negb
add
or
jo
adc
adc
sbb
fnsave
pop
negl
jnp
scas
fmuls
add
and
ds
out
sbb
enter
inc
scas
add
sub
jne
jnp
ret
mov
adc
or
add
int
mov
cwtl
inc
jecxz
fadds
dec
adc
mov
loope
insl
jp
jg
cmp
cmp
and
cmpsb
addr16
add
mov
pop
ljmp
and
lahf
gs
or
cmp
push
pusha
add
cmp
jle
dec
xlat
ret
or
dec
jne
and
xor
loopne
cld
sbbb
fadd
pushf
jb
mov
push
sub
inc
mov
repnz
pop
jne
push
ficompl
xchg
out
insl
addr16
mov
dec
push
and
call
cmp
mov
addr16
or
inc
add
mov
movsb
mov
pusha
leave
add
add
sub
jo
test
add
add
pushf
mov
mov
stos
sbb
add
xor
dec
push
in
loopne
mov
stos
add
dec
jle
dec
addl
add
and
dec
add
popa
add
mov
scas
fistpl
lret
pop
js
cwtl
mov
andl
dec
insb
pop
add
pop
add
mov
pop
add
dec
adcl
jne
cmp
xor
add
pushf
sbb
popa
pop
sub
stc
call
push
mov
add
cmp
mov
add
and
divl
or
cmpb
ror
adc
cmp
outsl
pop
dec
push
xor
sub
mov
add
pop
fcmovu
mov
jecxz
aas
push
or
xchg
sub
movsl
testl
test
add
push
pop
mov
enter
idivb
sub
inc
ljmp
push
sbb
outsb
shlb
mov
dec
add
and
sub
mov
nop
aaa
cld
add
dec
sti
xchg
inc
das
dec
or
xor
add
nop
movsl
sbb
cmp
test
mov
cmp
mov
orb
xchg
add
aad
stc
pop
jnp
add
xchg
cmpsb
in
push
hlt
nop
dec
out
cmp
roll
mov
inc
out
add
movsb
cmp
outsl
dec
sub
jp
push
movsl
in
imul
not
lcall
out
cmpsl
lods
dec
sbb
cmp
add
mov
sub
add
cmpsb
pop
xor
imul
insb
add
or
pop
xchg
repnz
add
jecxz
rorb
mov
scas
xlat
xchg
pop
incl
xchg
xor
sbb
bound
or
cmp
add
mov
add
stos
sbbb
stc
sub
push
or
pop
or
mov
jl
fwait
add
sub
andl
ror
jb
add
sbb
mov
adc
js
cmp
int3
xchg
imul
jbe
cmp
mov
cmp
bound
inc
stc
sbb
mov
ds
jae
xchg
xlat
ror
sbb
pop
lods
dec
test
ficompl
or
jae
loope
and
jne
out
add
sbb
dec
xor
cmp
add
cmc
sar
add
mov
aad
add
out
iret
mov
jae
mov
fcomip
mov
outsl
or
add
mov
imul
inc
mov
add
cmpb
mov
loop
ret
das
add
add
jp
mov
shrl
loop
jno
sbb
cmpb
add
push
inc
les
adc
xchg
insl
test
add
int3
lods
sbb
and
add
mov
add
aaa
out
or
mov
jnp
add
pop
push
mov
push
aaa
or
mov
sbb
xchg
cltd
adc
loope
je
jne
add
out
ds
cmp
popa
add
push
mov
lahf
add
mov
cli
add
jns
add
xor
pop
enter
addb
and
fsts
fildl
cmpl
inc
repnz
aaa
push
jge
sbb
cmp
lock
push
inc
adc
shlb
add
test
mov
dec
ss
add
and
inc
cltd
or
into
add
cmp
fldl
adc
les
movsb
add
je
pusha
pop
test
fisttpl
roll
mov
pop
push
cwtl
mov
sti
add
add
jae
add
pop
push
add
pop
hlt
mov
xor
fistpl
pop
sub
sti
or
in
jge
pop
test
push
mov
add
mov
loopne
sarb
pop
and
punpcklbw
stos
dec
mov
add
insb
pop
pusha
movsl
adc
add
sbb
xor
clc
inc
or
adc
push
sar
into
pop
loopne
divl
std
sbb
mov
pop
sbb
pop
adc
xor
pop
movsb
dec
adc
xchg
jge
hlt
decl
xor
xchg
dec
cmp
pop
loopne
xchg
std
add
lcall
lret
cmpsb
or
pop
arpl
mov
popa
andb
sub
mov
ja
push
adc
pop
cmc
add
cmp
mov
fstl
out
jnp
add
sub
repnz
mov
mov
fnstenv
lcall
cmp
cmp
adc
sarb
sarl
add
aad
mov
dec
and
icebp
xor
clc
lods
and
insl
mov
pop
adc
adc
push
jb
fdivp
jecxz
sbb
lahf
and
inc
push
sub
mov
xchg
cmp
data16
clc
mov
pop
and
mov
popa
push
sub
ds
mov
cmp
pop
fmull
pop
add
jmp
cld
xor
xchg
adc
adc
push
push
cmc
mov
insl
add
stc
mov
call
dec
push
add
add
icebp
lock
insl
jae
dec
hlt
cmp
cli
dec
mov
sub
add
add
sub
add
push
add
jmp
aas
jmp
aad
arpl
add
into
je
shl
lock
jae
mov
out
decb
lcall
filds
ds
push
xchg
aad
rcrl
adc
pushl
mov
addr16
loopne
cmpsb
int3
lret
jmp
xorb
mov
xchg
mov
mov
out
add
or
ret
add
imul
mov
cmc
dec
jno
jge
and
mov
add
mov
sahf
add
insl
mov
int3
or
adc
pop
sub
or
gs
mov
daa
dec
xor
pop
btr
mov
movsl
jmp
loop
add
hlt
sub
or
push
movsl
addb
push
pop
pop
push
add
mov
std
mov
add
or
dec
shrb
xchg
sub
sbb
inc
cmp
mov
fiadds
rcrl
pop
popa
or
pop
jmp
and
insl
push
outsb
out
scas
mov
addb
lret
stc
in
add
add
adc
adc
jnp
data16
xchg
in
rcrb
or
js
xchg
add
mov
repz
jb
push
mov
cmp
mov
xor
aas
jb
cmp
xor
pop
sbb
or
mov
pusha
aad
add
movsl
inc
xchg
add
pop
stos
mov
out
add
add
popa
and
lods
xchg
sbb
add
cwtl
incl
push
and
xor
scas
add
nop
mov
xchg
cmc
add
mov
mov
ja
jne
sbb
mov
add
xchg
sarl
or
out
xor
inc
clc
stos
in
push
repz
gs
fsub
rcll
leave
xor
pusha
nop
loop
pusha
adc
stc
stos
icebp
add
cltd
push
adc
add
xchg
cmp
mov
out
call
ds
cltd
sub
out
daa
mov
jno
repnz
outsl
mov
adc
fisubs
jl
push
iret
out
cmp
sbbb
outsl
inc
add
or
pminub
popa
sbb
add
int3
add
push
cwtl
adc
or
add
pop
pusha
sub
xor
clc
or
mov
xor
rcl
add
add
bound
jne
scas
mov
hlt
inc
dec
iret
clc
divb
jae
add
sub
repnz
outsb
push
jne
test
popa
es
es
mov
cmp
sbb
cmpsl
insb
pop
rcrb
jnp
mov
scas
cmp
cmp
imul
mov
notb
stos
cmp
out
orb
add
pop
outsl
les
jae
nop
je
pusha
popa
ret
mov
dec
xor
mov
inc
divl
into
lock
in
mov
ret
and
sbb
xchg
mov
push
or
sti
and
rorb
jae
jmp
sub
addb
pushf
js
cmp
test
les
test
add
adc
add
mov
cmp
jb
inc
shrl
daa
lcall
test
stc
sub
fwait
cli
addl
adc
rolb
mov
xchg
fdivrl
cmp
xchg
outsb
ss
dec
scas
push
repnz
add
xchg
mov
xchg
jo
rcrb
mov
mov
icebp
and
pop
dec
sbb
sbb
jo
cltd
xchg
sti
pusha
sarb
xor
ret
add
adc
jae
jne
and
imul
mov
jb
sub
mov
neg
enter
add
stos
push
stc
pop
mov
pushf
lcall
xchg
pop
jno
jbe
add
sub
les
ficoms
push
mov
js
mov
mov
mov
addr16
push
insl
pop
add
inc
adc
mov
add
shll
in
xor
js
pop
xchg
sbb
jecxz
pop
push
flds
fdivl
test
sbb
push
pop
inc
and
ja
stos
ret
fdivrp
mov
xchg
mov
xchg
repnz
in
mov
in
std
rolb
inc
add
jnp
add
stos
lahf
pop
ret
add
rolb
sub
lret
cwtl
mov
jecxz
mov
push
ret
ret
add
rolb
jb
add
je
add
jne
clc
xor
and
mov
scas
sbb
adc
cmp
mov
push
pop
cmp
jb
jmp
sub
mov
add
lahf
popf
out
aas
loope
xor
inc
sti
xor
dec
out
cmp
inc
or
fwait
pop
add
js
in
mov
pop
mov
rclb
jmp
inc
add
sub
std
ret
cmpsl
push
lods
mov
add
jno
xchg
mov
mov
add
dec
jp
xchg
filds
inc
out
add
jg
shr
cmpsl
data16
push
push
or
or
add
incb
jp
push
je
in
cli
leave
stos
or
inc
add
dec
imul
and
and
inc
or
mov
push
or
test
push
inc
or
inc
mov
or
inc
je
testb
imul
ret
lret
and
xor
sbb
push
popa
aam
pop
xorl
loopne
mov
test
pop
and
adc
repz
jge
mov
in
cld
add
mov
inc
enter
jge
add
lret
ja
sub
add
inc
mov
mov
xchg
andl
sti
mulb
mov
pusha
and
int
jge
jb
sub
add
sbb
leave
jo
jecxz
cltd
pop
out
push
andl
mov
add
adc
stos
sbb
xchg
jne
sbb
addr16
enter
sub
add
imul
push
dec
add
sarl
mov
subb
in
and
add
ss
xchg
ljmp
sbbb
pusha
mov
dec
pop
fildll
add
pusha
loop
push
lock
push
call
jns
aam
out
rorb
nop
inc
dec
daa
pushf
lds
jae
or
arpl
add
cmp
dec
addr16
test
ss
push
mov
adc
add
dec
pushf
add
xchg
sbb
jb
or
inc
sti
out
inc
das
push
inc
or
in
mov
in
mov
sti
add
in
shrb
testb
dec
mov
in
dec
out
mov
add
shlb
insl
add
into
fwait
dec
and
sbb
push
ds
repnz
lcall
idivl
adc
inc
shl
andb
je
cwtl
mov
call
hlt
xorl
into
or
lods
push
loopne
inc
add
pop
dec
dec
add
cltd
add
ds
popa
inc
pop
lods
add
sbb
stos
loopne
call
jmp
add
mov
in
pushw
dec
jecxz
mov
and
and
hlt
hlt
cmp
aas
scas
js
test
pop
das
xchg
adc
xrelease
in
or
ljmp
and
int3
ja
les
sahf
test
cmpsb
dec
xchg
int3
adc
int
sub
adc
or
inc
fst
cmp
rclb
lds
mov
cwtl
add
pusha
out
jns
mov
cld
push
sbb
sarl
add
cmp
loop
fwait
add
into
sub
jp
imul
or
nop
mov
dec
cmp
or
mov
sahf
sub
rclb
ret
or
lret
dec
lods
sub
cmpsb
and
ret
and
js
gs
in
aam
mov
mov
in
std
cltd
inc
adc
sbb
inc
xor
jns
insb
shlb
jo
data16
lds
call
pushf
adc
add
ja
ror
push
add
xor
push
test
sbb
lea
lods
sbb
inc
jmp
push
jne
cltd
into
fbld
mov
imul
adc
dec
pop
lods
daa
nop
aas
aaa
or
or
adc
bound
push
dec
sarb
fmul
sbb
mov
xor
movsl
cmp
pushf
xor
adc
ljmp
jae
add
or
movsb
loop
inc
or
pop
subb
clc
lret
mov
adc
push
inc
imul
loopne
scas
push
daa
je
mov
add
mov
loop
pop
jg
xchg
add
mov
js
mov
and
sub
cli
out
xchg
mov
and
movsb
add
ljmp
out
hlt
inc
add
lods
nop
mov
sub
add
cli
roll
jbe
push
es
inc
orb
in
xor
maskmovq
testl
pop
ss
pop
adc
mov
sub
and
pop
lea
adc
stos
add
fisttpll
cwtl
aad
mov
push
add
xlat
repz
lock
ret
or
mov
push
pop
mov
xchg
int
js
mov
and
push
pop
mov
dec
lods
and
fistl
jmp
les
and
pop
push
mov
fldenv
pop
xor
jg
test
or
cmpb
mov
sbb
dec
loopne
and
jb
movsl
push
xor
mov
xlat
call
add
add
cs
and
dec
and
icebp
jle
mov
xor
cwtl
mov
mov
das
cli
xor
xchg
mov
pushl
sbb
push
jp
rcrb
rcr
cltd
xchg
push
nop
xor
mov
cmpsl
sbbl
add
dec
xor
sub
mov
xchg
and
add
and
sbb
movsb
js
pop
xchg
fisttpll
xchg
pop
jne
xor
and
in
orb
stc
cld
pop
adc
aaa
movsb
pop
mov
sbb
fstl
dec
xorb
pop
and
insb
pop
jbe
in
ja
xchg
scas
dec
or
int3
aas
sub
add
jg
lahf
lret
or
and
mov
hlt
mov
hlt
add
mov
jno
ss
inc
inc
les
pop
aam
into
mov
pop
inc
inc
cmpsb
mov
add
addr16
inc
mov
out
les
or
push
or
lods
add
je
adc
test
sbb
mov
cmp
jmp
test
repnz
dec
cmp
mov
cmpb
pop
shlb
pop
xchg
lods
xchg
cmp
inc
pop
gs
xchg
fimuls
lods
mov
push
sarb
rolb
add
repz
mov
ds
add
in
lret
shlb
movsl
inc
pop
js
sbb
shlb
mov
jecxz
push
push
xor
pushf
mov
arpl
lds
adc
push
jmp
add
clc
dec
xchg
add
jle
aas
arpl
inc
sub
sbb
add
inc
insl
or
xor
dec
aam
add
ficompl
xchg
sbb
inc
popa
add
xchg
dec
aaa
sub
xchg
mov
add
inc
cmp
sub
test
jge
push
sbbb
mov
movsl
cli
js
sbb
lret
mov
lcall
testb
in
xor
dec
cwtl
sub
adc
ja
sbb
inc
stc
test
dec
pusha
jecxz
cmpb
mov
mov
loope
fcomps
inc
test
push
test
mov
jle
add
jmp
mov
lahf
in
add
jno
fwait
mov
mov
xor
ljmp
stc
pop
test
call
adc
int3
cmp
fcoms
add
add
stos
daa
adc
sbb
add
xchg
fnstsw
test
add
and
add
mov
sub
cld
add
or
pop
jnp
jns
cltd
inc
sub
cs
mov
add
imul
andb
or
in
in
cmc
push
cmp
data16
pop
lds
inc
pusha
inc
hlt
iret
enter
clc
aad
cltd
fs
add
notb
lret
inc
andb
mov
and
icebp
movsb
push
adc
outsl
xchg
out
cmp
add
inc
inc
add
fisubrs
enter
addb
ja
and
add
push
mov
shl
ficoml
ljmp
addb
inc
push
outsb
cmp
call
je
lret
aaa
and
add
add
aas
nop
jnp
enter
sar
iret
ficoml
lret
cli
out
loope
shlb
lock
xor
jb
and
push
mov
inc
dec
mov
adc
add
rcrb
outsb
pop
sbb
leave
mov
loopne
push
or
push
mov
outsl
lock
xchg
adc
daa
testb
shrb
in
call
or
cmp
addr16
jb
cmpsb
inc
dec
xlat
adc
fisubl
push
inc
or
push
hlt
mov
jmp
and
cmp
or
ljmp
mov
xchg
push
mov
daa
sub
add
outsl
outsb
imul
add
xor
dec
jp
add
imul
out
and
mov
loop
sub
xor
sub
jge
pop
je
cmp
in
pusha
xchg
inc
xchg
dec
test
aam
xorb
cmp
pop
and
out
mov
dec
stc
and
test
les
fdivs
mov
adc
pop
nop
scas
xchg
sub
inc
popa
scas
mov
sar
adc
and
lcall
sub
jle
aaa
fsub
sub
sbb
orb
imul
add
outsb
and
test
testb
aaa
sahf
cltd
vmovntps
adc
pop
sarb
lcall
testb
loopne
xchg
cmp
jl
jb
sbb
orl
xor
adc
mov
je
add
out
sbbb
aaa
and
fs
xchg
scas
mov
dec
jns
shll
clc
mov
cmpl
loope
and
dec
lods
js
and
loopne
push
inc
daa
loopne
push
test
outsl
rclb
mov
adc
jno
xor
js
xchg
add
out
add
add
sbb
test
pop
pcmpeqw
ret
ret
cmp
cmpsl
shlb
add
in
add
lock
push
icebp
adcl
add
pop
cmc
lods
addb
mov
sub
in
add
movsb
pop
dec
enter
dec
push
mov
pop
add
jge
test
dec
add
add
xor
push
jne
adc
popa
dec
and
jge
xor
imul
inc
fadds
push
lods
mov
icebp
cwtl
pop
shrl
add
jbe
and
je
stos
and
add
cmpsl
xor
andl
movsl
or
push
sarl
push
fwait
pop
rcl
repnz
xchg
ja
sbb
loop
mov
xor
addps
mov
mov
add
test
or
jae
mov
cltd
add
jb
inc
fs
jno
cli
mov
adc
aaa
push
inc
cmp
adcb
jmp
adc
or
mov
jp
cld
fsub
shll
je
jno
shrb
cltd
jb
add
add
inc
adc
add
push
les
jmp
or
movsb
bound
pop
fidivs
cwtl
inc
loopne
das
cltd
add
in
rcll
in
dec
add
stc
ja
daa
shlb
stos
push
inc
ror
jno
xorl
dec
dec
addl
incl
or
add
out
lods
cmp
addl
dec
jbe
popf
cmpsb
dec
scas
xchg
cs
sbb
xor
mov
cmc
adc
mov
sub
jo
add
sbb
or
jle
sub
fsubrp
xor
pop
jnp
cs
js
ja
loopne
pusha
adc
cmp
lock
add
daa
cwtl
dec
xchg
jg
je
in
xchg
pop
jg
sarl
cld
es
sub
sbb
cli
jbe
lret
popa
or
dec
sub
push
or
or
orb
adc
xorl
xor
lea
jb
add
comiss
pop
imul
or
push
pop
add
adc
pop
mov
pop
xchg
cmpsl
cwtl
jp
xor
inc
mov
adc
shlb
je
pop
fcoml
sub
mov
push
mov
add
inc
adc
test
jo
xor
imul
call
and
push
push
insb
lock
rdtsc
xor
push
nop
arpl
cvttps2pi
mov
mov
push
or
pop
test
mov
out
icebp
xchg
xchg
andl
jb
push
xchg
pusha
insl
rcr
push
clc
push
jno
sti
xchg
xor
xor
into
push
std
add
adc
pop
and
repnz
sbb
sbb
sbb
sub
xchg
jl
and
inc
push
shrb
jae
add
add
dec
xor
push
and
shlb
push
shlb
push
sar
inc
sub
mov
push
cmp
fnstsw
repnz
out
jecxz
jge
adc
dec
or
pop
mov
mov
or
lock
insb
xor
lea
push
mov
clc
das
stos
and
adc
push
out
loop
fucomip
shlb
out
add
push
ds
rclb
push
mov
push
stos
push
sub
mov
cmpsl
loop
mov
inc
mov
fidivl
nop
mov
popl
adc
lock
mov
jb
push
popl
xchg
sbb
mov
sahf
xorb
nop
xor
push
inc
repnz
arpl
cmp
sbb
cmp
xchg
add
popa
mov
mov
or
cwtl
xchg
ret
cmp
mov
mov
ret
dec
sbb
jle
jnp
andb
ja
fs
nop
sub
stos
xor
out
shl
ret
cwtl
addl
and
jnp
lock
adc
cmp
xchg
adc
xorb
or
dec
mov
popl
mov
pusha
loopne
es
add
out
xchg
cmp
loop
dec
mov
xchg
sub
cmp
in
add
xor
clts
ss
cltd
and
xor
daa
push
inc
xchg
or
push
aaa
inc
ret
das
sub
mul
or
or
add
clc
lods
fbstp
aas
xchg
sub
add
pusha
dec
mov
pop
shlb
sub
and
pop
jo
hlt
pop
inc
das
shl
or
xor
inc
inc
pop
cmpb
jmp
xor
imul
xor
push
js
mov
mov
xor
push
pusha
lock
xor
jmp
lods
jecxz
xor
decl
xlat
fsubrp
add
cltd
sub
or
mov
xchg
inc
movsb
shlb
sub
inc
bound
add
xchg
jg
sub
push
into
and
and
lret
addb
mov
pop
pusha
add
push
inc
rcl
push
push
in
jmp
ljmp
mov
bound
push
mov
ret
repnz
ret
or
or
sub
test
dec
iret
xlat
add
add
mov
xchg
dec
imul
stos
pop
pusha
add
or
dec
inc
mov
cwtd
adc
enter
pusha
aad
aas
mov
dec
adc
sbb
and
loop
pop
aaa
adc
mov
ss
inc
movsb
push
inc
push
mov
lret
loope
lods
std
lret
or
push
cmp
mov
push
pusha
rclb
push
mov
xlat
inc
push
sbbl
loop
sbb
xor
nop
stos
scas
rolb
rorl
shl
jbe
inc
jne
xlat
loope
scas
mov
add
jp
add
ds
push
pop
sbb
cli
mov
rcrb
scas
popa
jmp
add
mov
nop
movsl
outsb
add
adc
push
push
xchg
and
loopne
in
lock
xchg
and
fiadds
enter
subb
pusha
addb
sub
leave
or
sub
loopne
repnz
sub
sub
mov
mov
jmp
jno
xchg
xor
mov
or
mov
sahf
xor
dec
out
dec
xchg
xchg
or
rcrl
or
loopne
ja
fs
popa
leave
push
pusha
lock
cld
mov
in
out
mov
inc
add
mov
dec
or
outsb
lock
xor
test
dec
add
daa
out
inc
and
dec
add
push
loop
add
adc
add
pusha
or
cld
xchg
jo
or
jb
and
and
mov
xchg
nop
xor
pusha
fdivrs
add
icebp
nop
out
dec
call
xor
out
dec
mov
add
xchg
lret
xor
push
adcb
ret
xor
pop
lea
jnp
xor
mov
fdiv
inc
xor
mov
or
sarb
ljmp
mov
fs
and
lret
loop
xor
mov
stc
inc
fistl
lock
xor
mov
sbb
adc
inc
loope
jo
call
add
mov
icebp
fldt
pop
dec
rclb
lock
loopne
and
dec
rcrl
loopne
adc
and
flds
dec
and
fiadds
mov
es
xor
call
and
std
and
out
lahf
add
fucomip
add
pop
adc
adc
std
push
mulb
daa
fisubl
nop
loope
mov
aad
sub
jb
lret
dec
and
adc
or
sahf
dec
and
mov
mov
adc
lods
pusha
sbbl
push
inc
rcll
popa
sub
jmp
add
xorb
xor
pop
popf
adc
fildl
and
pop
add
inc
out
jno
loop
pusha
push
jl
mov
mov
popa
adc
pusha
or
pop
notb
push
aam
mov
mov
or
popf
dec
jp
xor
punpcklbw
and
adc
stos
jecxz
push
jb
lock
movl
ds
dec
ret
mov
out
rolb
pusha
mov
jae
jo
clc
into
or
call
sti
lock
or
lods
sti
fildl
mov
repnz
add
in
dec
cmp
pop
jl
push
xor
inc
test
icebp
les
jp
cmp
or
xor
add
and
push
add
sarb
xchg
add
cmp
cli
dec
jo
jns
fildll
cmp
jecxz
mov
leave
xor
and
or
xor
icebp
dec
push
inc
pusha
iret
pop
test
repz
push
inc
lock
jae
fs
popa
or
lock
mov
inc
inc
rorl
repz
imul
and
imul
lahf
push
popf
mov
std
imul
mov
repz
add
mov
sbb
cmp
fstpt
pusha
pop
xor
add
mov
fdivrs
and
scas
cwtl
or
pusha
fdivs
xor
daa
and
jbe
pop
dec
lods
les
sub
and
movsl
cmp
int3
popa
sub
inc
dec
inc
dec
call
roll
mov
dec
cld
mov
jns
popa
push
std
shl
ja
mov
popl
lods
adc
ds
add
pusha
cmp
mov
jo
and
popf
loopne
daa
dec
sbb
mov
inc
jbe
mov
adcl
dec
mov
add
or
les
icebp
push
add
and
pop
cmp
insb
pusha
jle
je
fbstp
sub
pusha
xor
pop
push
pop
mov
sbb
pop
jg
fcmovnb
inc
mov
mov
or
mov
shll
cmp
nop
sbb
cmp
sub
in
push
in
aaa
mov
add
push
pop
jg
or
mov
popa
enter
out
mov
or
inc
xchg
inc
push
scas
or
pop
es
pop
add
insb
in
std
dec
cmp
fdiv
or
and
loopne
mov
xor
fldl
fwait
inc
xchg
iret
mov
and
mov
loopne
lret
pushf
mov
sbb
xlat
andl
adc
jbe
xchg
adc
inc
jp
and
loope
sub
push
negb
jns
cwtl
jecxz
popa
xor
popl
xchg
shl
add
mov
ds
sub
inc
mov
xchg
ret
mov
mov
dec
sbb
das
scas
loop
icebp
adc
bound
sbb
mov
cmp
xor
sbb
shlb
inc
xchg
andl
xor
stc
adc
mov
dec
add
popa
lods
cwtl
inc
mov
jl
jb
adc
sub
inc
dec
adcl
clc
popf
into
sbb
sub
push
out
adc
mov
mov
or
aas
scas
or
xchg
push
out
rorl
jno
stc
addr16
shrl
xchg
sbb
lcall
add
push
sub
adc
mov
add
sbbb
adc
mov
sbb
lock
xor
mov
xor
lock
and
loope
subb
xor
adc
add
daa
shrb
fsubs
pop
mov
adc
cmpsb
sbb
popf
push
scas
shrb
mov
rolb
sbb
je
icebp
lock
clc
push
lock
dec
pop
xchg
xchg
pop
pop
add
ss
adc
jno
lock
std
mov
fmull
loope
xchg
mov
lock
sub
sub
mov
mov
inc
mov
cmp
dec
push
ret
sti
sub
sbb
outsl
addr16
lds
and
das
pushf
cmp
or
scas
xor
sbb
adc
aas
push
icebp
sub
test
pusha
scas
mov
aas
test
mov
popl
pushf
add
mov
iret
rcl
inc
cwtl
mov
fstpt
sbb
push
rcl
sbb
xor
xchg
xchg
jp
cmp
jno
lock
test
rcl
mov
add
and
lcall
test
lds
icebp
icebp
lock
mov
jge
adcb
movsl
cmp
mov
xchg
test
hlt
fdivrs
lret
xor
cmp
dec
dec
dec
inc
mov
push
adc
into
repz
add
dec
movsb
add
xor
addr16
mov
xor
cs
lret
insb
fcom
or
pop
inc
xorl
inc
hlt
sub
cmpsl
icebp
and
xchg
mov
outsb
repz
jmp
mov
push
pusha
cmp
mov
cmpsl
adc
pop
push
and
test
inc
push
subb
out
lods
inc
add
adc
push
popl
dec
or
cs
sahf
cwtl
push
std
mov
push
shll
pop
push
ret
inc
lods
and
js
insl
adc
outsl
or
lods
add
lahf
xor
clc
cmp
pop
pop
pusha
push
es
and
or
repnz
pop
push
jbe
adc
loopne
ficoml
push
xchg
pusha
mov
shll
mov
mov
fmuls
int
bound
outsb
test
fidivrs
out
ror
inc
pop
dec
loopne
enter
pusha
loopne
inc
adc
mov
std
inc
int
cld
jl
and
mov
icebp
dec
or
push
test
push
leave
xor
push
int
popf
inc
test
xor
mov
shl
hlt
dec
leave
rclb
or
add
cmp
or
mov
adc
lock
push
andl
pusha
fcoms
inc
clc
leave
mov
je
popl
adc
mov
cmp
inc
je
inc
or
cwtl
gs
imul
xor
inc
rol
pop
and
inc
int
and
and
mov
pop
pop
jle
rcr
mov
lock
push
nop
dec
ss
pusha
push
sbb
cwtl
adcb
cmp
shrb
ss
cs
pushf
adc
dec
outsb
loope
into
pushf
jl
sbb
movsl
inc
xor
les
jl
rolb
add
adc
push
add
les
fstpt
pop
decb
fstpt
or
rcll
xchg
dec
pusha
mov
subb
fs
outsb
mov
stc
gs
ja
shll
mov
ds
inc
xor
add
jne
push
push
ss
popa
sub
inc
pusha
pusha
es
jge
lds
dec
inc
insb
pusha
mov
aam
jg
and
loop
or
cmp
xlat
sbb
and
add
inc
movsb
push
inc
into
inc
jl
adc
add
or
aas
je
and
dec
loopne
xor
lock
imul
popl
adc
mov
lds
dec
loopne
sub
mov
fs
cli
mov
in
cwtl
cmp
into
push
pusha
rep
mov
in
mov
scas
je
cld
add
mov
loopne
daa
popa
into
shr
ficompl
pop
lods
stos
mov
out
fidivrl
cmp
rol
adc
ret
mov
and
pop
fidivs
sub
pop
test
into
std
pusha
fadds
popa
scas
out
pop
pusha
add
lock
jnp,pt
mov
xor
out
pusha
pusha
xchg
adc
shrl
cs
pop
and
mov
mov
into
jno
lods
outsb
popa
jmp
repz
gs
into
out
jl
or
xor
scas
loopne
js
adc
adc
or
lea
fstpt
add
call
pop
fstpt
pusha
shl
inc
adc
or
int3
movsb
push
mov
add
das
mov
or
push
or
push
or
out
adc
addb
pusha
sub
mov
out
and
imul
mov
icebp
sti
mov
insl
pushf
and
and
fnstsw
call
cmp
ret
mov
xchg
xchg
inc
loope
mov
arpl
fsubr
push
add
push
mov
xchg
divl
sbb
adc
fsubs
sub
mov
icebp
push
sbb
jb
and
jb
popa
in
xor
mov
push
push
dec
xchg
fistl
popa
sub
movsb
stos
test
icebp
jno
mov
arpl
loop
mov
cmpsb
mov
or
ret
or
in
push
sbbl
adc
lea
sbb
pop
xor
or
jl
sbb
adc
jno
inc
leave
addb
fdivrl
sbb
adc
lock
mov
repnz
or
lahf
jmp
nop
mov
daa
sbb
inc
lods
push
and
push
inc
cmp
out
shll
mov
shll
loopne
lcall
sbb
dec
mulb
gs
jno
sbb
sarl
lock
and
rcrb
adc
lahf
ficomps
sbb
mov
sbb
xor
xchg
xor
pop
dec
add
add
and
add
scas
xor
sbb
push
jnp
rorb
insb
pusha
inc
cmp
jg,pt
and
add
loope
sbb
outsb
adc
xor
arpl
add
rcrb
mov
xor
add
or
popf
fsts
add
push
ss
jmp
enter
jl
add
dec
or
or
cmpb
lock
add
pop
xor
movsb
push
add
and
add
loopne
popf
xlat
cld
inc
cmp
shl
call
gs
pop
addl
negb
rolb
mov
lds
add
jg
ja
test
lock
sbb
add
lret
ret
call
xchg
jmp
cmp
repnz
mov
jmp
hlt
out
movsl
add
cmp
xor
adc
sbbb
lret
add
addr16
test
xor
mov
imul
push
dec
les
and
fstl
push
pop
cmc
add
pop
sub
add
out
inc
les
add
inc
push
mov
aad
dec
addb
stc
push
mov
add
ljmp
cmp
repnz
cmpsb
mov
add
sub
clc
or
clc
pop
mov
insl
pop
push
in
push
mov
mov
jg
int
xor
sbb
clc
outsb
in
aas
mov
sub
mov
int3
dec
lcallw
sub
dec
nop
aam
or
subb
popf
hlt
push
cli
mov
in
ret
mov
sub
add
lret
cmp
into
das
insl
dec
stos
add
sti
or
xchg
add
cmp
add
cmp
lcall
cltd
out
xchg
mov
dec
mov
push
popa
arpl
add
mov
add
cmpsb
xor
or
add
jb
sub
add
mov
test
jb
dec
mov
add
inc
in
mov
bound
cmp
cmpsb
adc
jae
mov
jl
jo
imul
insb
jmp
ljmp
add
push
lock
push
jp
add
mov
sbb
mov
fstps
loopne
scas
mov
or
adc
fdivrl
add
push
negl
jecxz
dec
out
add
call
pop
add
dec
dec
sub
enter
and
pop
inc
loopne
add
xchg
pop
jecxz
pop
leave
fwait
xchg
js
imull
jno
jbe
add
xchg
xchg
or
rolb
push
rorb
inc
test
scas
dec
pop
ljmp
out
add
aad
adc
adc
clc
add
mov
mov
inc
cmp
mov
cmp
jnp
pop
pop
int
inc
xor
jbe
xchg
lock
add
ficoml
nop
sbb
add
cmp
jne
add
pop
jge
push
shl
gs
jne
xor
arpl
sbb
add
jmp
ds
sub
inc
daa
sbb
mov
push
mov
pop
incl
lds
inc
call
push
push
movb
push
cmpsl
insl
imul
call
pop
sbb
loopne
fwait
sub
out
jnp
cmp
mov
jg
add
fnstcw
sbb
sar
or
jns
hlt
rclb
lret
mov
in
add
movsb
mov
adc
xchg
lea
in
pushf
dec
sub
lock
inc
jnp
sub
pop
pop
mov
pushf
pop
sub
ret
rol
xor
add
mov
nop
rcrb
mov
add
xchg
pop
popa
sub
adc
inc
outsb
and
jmp
sarb
sbb
add
push
dec
fidivl
ret
add
pusha
stos
jns,pt
cmpsb
xchg
add
add
lret
sub
dec
mov
mov
mov
aas
fwait
bnd
repz
pop
repz
ficompl
push
cmp
sarb
cmp
js
pop
or
pop
sarb
mov
fbstp
add
movsb
fs
add
mov
dec
into
aad
es
add
and
scas
add
xlat
fsts
ds
xorl
icebp
mov
orb
nop
inc
xchg
dec
mov
xchg
jge
jl
fs
lock
clc
add
test
lahf
mov
aaa
popl
mov
lock
sbb
negb
push
aas
lea
icebp
push
mov
fdivrl
in
mov
inc
cmp
jge,pn
scas
sub
add
test
add
addr16
sahf
add
lds
cmp
pop
fldt
add
outsl
push
hlt
mov
roll
add
popa
and
add
mov
sub
sbbb
sub
cmpsl
fldt
es
pop
xor
sbb
adc
sahf
jae
lret
lcall
idivl
inc
push
inc
cmp
inc
mov
aam
cmpb
rorl
push
add
xlat
and
ds
in
add
lret
adc
jmp
je
loopne
mov
enter
imul
mov
int3
push
jnp,pn
push
les
enter
lahf
shlb
dec
inc
add
movsl
flds
in
or
or
adc
xchg
test
scas
testl
int
fbld
mov
add
jmp
sbb
pop
roll
into
jbe
pop
add
and
push
sbb
orb
add
pusha
and
movsl
xchg
loopne
aas
out
add
xchg
xchg
inc
inc
inc
or
add
data16
mov
and
xchg
pop
fucomip
stos
jns
rorb
sub
test
lock
mov
pop
mov
dec
std
fstpl
sub
call
inc
add
xor
lods
bound
push
pop
inc
and
pop
jne
cmp
pop
mov
mov
outsl
clc
pop
fwait
pop
pop
jns
add
dec
push
ja
data16
inc
cs
movsb
jb
adc
fdivrp
stc
add
cmpsb
cld
es
jg
popf
or
testb
sub
cwtl
repz
test
fisttps
mov
sub
lahf
stos
divl
sbb
cmc
adc
mov
inc
jne
cli
fnstenv
push
mov
les
scas
cld
sahf
push
mov
lods
insl
and
addr16
aad
push
dec
ret
push
mov
jge
add
rol
xor
add
inc
sbb
add
sbb
enter
dec
or
mov
dec
add
in
jge
mov
mov
xchg
xor
pop
inc
rolb
mov
add
dec
loope
mov
orb
mov
sub
sbb
cmpsb
add
loopne
adc
sahf
aam
imul
aas
add
aad
push
add
mov
negb
jnp
add
rcll
lds
mov
jecxz
outsl
push
mov
scas
add
xchg
mov
in
adc
add
sub
jmp
pushf
test
pop
fsubrl
sbb
push
add
xchg
xchg
jmp
mov
mov
aam
cmp
iret
add
cmp
mov
or
js
mov
xor
bound
lret
add
dec
scas
sbb
js
xorl
addb
add
hlt
mov
inc
sti
xor
lret
popa
jl
jae
loope
lret
ficoms
sbb
adc
xlat
jo
add
inc
mov
sub
outsl
and
mov
pop
rorb
jl
test
push
in
insl
bound
jns
add
lods
shrb
jbe
cmp
xor
lahf
sahf
jno
in
ret
jbe
movsb
pusha
adc
inc
push
fwait
call
orb
clc
lret
pop
or
inc
jb,pt
xchg
sbb
push
in
or
add
dec
sub
fwait
fs
iret
or
xchg
add
roll
repnz
jecxz
dec
xlat
add
inc
movsb
in
adc
push
out
pop
cs
lea
adc
pop
cmpsb
aas
or
pushf
stos
mov
adc
shlb
cmp
lahf
push
or
xchg
add
inc
jno
add
mov
shll
test
pop
loop
xor
loope
adc
inc
pop
into
sub
mov
cmp
sbb
dec
adc
add
sbb
xlat
dec
mov
shll
add
leave
dec
or
and
pop
pop
add
pop
rol
xchg
xchg
add
cmp
and
cmp
mov
out
adc
pop
jno
idivl
mov
lods
in
sub
pop
repnz
out
ret
fcomip
push
insl
mov
xchg
ffree
add
fmull
movsb
dec
add
xor
pop
in
sbb
jmp
cltd
sbb
insb
mov
clc
sbb
nop
rcr
int
add
js
mov
js
add
mov
ja
aas
lods
push
or
xor
xchg
imul
and
movsb
test
mov
pop
xchg
add
or
inc
bound
sub
pop
jb
push
scas
fsubp
aad
inc
and
mov
sbb
xlat
mov
xchg
push
add
pop
filds
jge
shl
call
and
fimull
pushf
insb
adcb
addr16
testl
xchg
xor
xchg
and
push
clc
mov
or
hlt
or
xchg
push
popa
add
add
outsl
les
xchg
jbe
adc
add
inc
mov
pop
filds
mov
icebp
pop
fsubr
insb
orb
or
stos
or
out
add
add
mov
xchg
outsb
or
adc
faddl
mov
sahf
mov
stc
in
cwtl
cmc
xor
test
mov
clc
xchg
jo
mull
push
adc
pop
outsb
jp
rolb
dec
mov
adc
xorb
adc
clc
in
or
sbb
in
popf
scas
mov
or
add
enter
pshufw
les
cmc
out
imul
test
std
push
mov
cmp
stc
xchg
jp
inc
clc
call
andb
das
in
mov
dec
pusha
xor
and
mov
add
fistps
cli
xor
add
pop
aam
es
lods
add
pop
xchg
lods
sbb
pop
fbstp
adc
orl
add
sub
out
mov
xor
incb
or
fldenv
and
add
xchg
add
in
nop
cmp
adc
and
popf
inc
out
mov
int
and
testb
das
int3
std
roll
adc
adc
scas
jmp
jno
add
outsb
std
fldl
dec
mov
push
adc
shlb
mov
xlat
jne
inc
push
flds
lahf
mull
int
xchg
sub
jnp
dec
stos
loopne
mov
add
mov
ficoml
pop
dec
or
add
jmp
xor
push
or
sub
jmp
pusha
adc
jns
sbb
dec
loope
loopne
and
jl
add
add
xor
pop
lcall
adc
sbb
add
stos
cmpsl
pop
add
ja
and
add
leave
pop
mov
rcll
cwtl
add
cltd
cmpsb
movsl
cmp
das
add
dec
mov
or
add
cli
scas
sti
mov
push
and
enter
cmp
scas
mov
sub
add
popa
mov
or
xor
subb
js
add
cmp
jae
add
iret
pushf
jge
imul
loop
pop
sbb
lods
mov
nop
mov
jmp
js
add
out
andb
push
sub
arpl
add
sbb
addr16
sbb
mov
and
mov
xchg
xchg
add
add
pop
gs
add
adc
xor
push
mov
inc
lret
pop
add
mov
add
idivl
orl
inc
inc
jbe
add
test
in
push
jl
add
lods
imul
adcl
push
les
aad
dec
cmp
pop
insl
pop
sub
cmc
aas
add
arpl
hlt
add
es
fldt
or
jp
mov
add
fmull
iret
popf
cmp
jb
ds
jecxz
or
pushf
andl
and
xchg
jns
scas
js
push
data16
fdivrs
add
sub
pusha
cmpsb
jae
aad
ret
into
lcall
imull
jp
repnz
mov
repz
ja
lods
jbe
jnp
daa
jns
pop
or
mov
add
adc
insl
sbb
cmpsl
or
cmp
push
inc
outsb
add
arpl
cmp
nop
test
jmp
int
in
sub
inc
test
push
out
mov
or
pop
jle
cmpsb
pop
adc
add
jp
sub
inc
or
add
ret
mov
mov
add
fisttpl
xor
and
int
ljmp
xchg
sti
add
stos
mov
or
inc
mov
jg
std
sub
or
hlt
fwait
adc
xor
popa
sub
mov
jp
and
hlt
cmpl
jmp
in
adc
adc
jecxz
add
xchg
add
mov
je
in
cmc
insb
sub
dec
add
je
clc
gs
fcmovne
add
pop
in
jb
add
push
movsl
loope
push
fdivl
out
test
mov
movsl
fadds
sbbl
mov
sbb
mov
pop
mov
and
enter
add
mov
push
loopne
push
mov
arpl
fdivl
cwtl
jnp
out
and
shrl
adc
add
xchg
cmp
inc
and
adc
clc
testb
andb
rorb
add
gs
jg
xor
frstor
pop
xor
xchg
adc
mov
xchg
ret
stos
push
ja
inc
jmp
inc
mov
sub
mov
or
xchg
test
jp
imul
cwtl
jnp
scas
push
ud0
add
xchg
popf
js
add
jl
jo
cmp
push
enter
cmp
out
lcall
mov
sub
lea
cmp
cmpb
test
test
je
gs
cmpb
sub
hlt
xchg
mov
in
mov
cltd
push
enter
sub
std
push
lock
xchg
push
inc
cld
dec
or
rcrb
or
out
add
push
call
sahf
test
and
adc
lock
pop
lret
push
jns
cmp
add
subb
xchg
inc
sbb
fistps
adc
add
and
pop
push
inc
int3
add
insl
sahf
mov
movsb
ds
mov
ret
jae
dec
mov
roll
sbb
imul
cmp
inc
cmc
adc
punpckldq
jns
fwait
dec
add
out
addl
jbe
adc
and
cltd
icebp
in
addl
and
ret
xchg
bound
movsl
jns
mov
mov
jp
leave
sub
aad
xor
mov
pop
stc
pop
ds
add
jne
add
addr16
cmp
jae
add
and
sub
jg
push
sti
jne
lock
add
out
cmp
clc
add
dec
lret
mov
xor
add
pop
ja
mov
push
mov
fsubs
lods
stos
repnz
sub
sbb
add
lret
xor
andl
lds
iret
dec
pop
xchg
add
xchg
push
and
add
jg
sbb
pushw
sub
loopne
loopne
dec
lcall
sub
add
add
xor
mov
test
adc
cs
sarb
adc
nop
insb
add
loopne
scas
dec
adc
or
aam
in
inc
adc
mov
mov
cmp
jno
xor
bound
push
test
mov
push
ljmp
repnz
jg
and
add
scas
jl
xchg
imul
into
or
mov
sub
or
enter
rol
cmp
push
movsb
or
pop
test
cmc
mov
pop
dec
xchg
outsb
push
out
jecxz
ret
push
cwtl
mov
add
add
mov
jge
add
sub
mov
loope
js
mov
or
jmp
lds
add
or
mov
sbb
rcl
cli
inc
cld
mov
out
orl
add
add
notb
push
leave
push
cltd
mov
mov
daa
cmpsb
add
xchg
pop
pop
mov
push
lcall
leave
pop
mov
rorl
movsb
sbb
icebp
rorb
ret
mov
fs
add
ret
popa
push
cwtl
inc
fiadds
xor
sub
push
insb
cltd
fdivr
add
pop
push
add
jnp
cmp
out
js
mov
push
test
sbb
subl
lahf
loope
lods
xor
testl
je
mov
or
shlb
and
aaa
mov
push
cli
pop
and
fidivrs
add
pop
pop
lds
faddl
dec
ret
mov
add
lock
push
add
jbe
loopne
addb
in
xchg
popa
test
add
mov
popf
icebp
inc
pop
call
lret
dec
and
jns
push
lods
lret
rep
add
rolb
loopne
jle
push
aam
out
ret
adc
into
inc
fdivrl
mov
pop
sbb
inc
mov
scas
loope
ror
xchg
fidivrs
add
mov
push
sub
cwtl
dec
add
loopne
xlat
adc
test
in
cmp
dec
push
xchg
popl
push
mov
sub
aad
add
loop,pt
cltd
rclb
add
sbb
cmp
je
add
cmp
add
sub
mov
mov
test
arpl
add
cmp
pop
push
sbb
adcl
popa
dec
inc
mov
inc
iret
stos
adc
or
push
repnz
sub
movb
pop
popf
je
jge
pop
cmp
data16
pop
das
sbb
loope
add
fiaddl
mov
dec
faddp
xchg
sbb
xor
shrb
idivb
fcmovbe
mov
add
dec
add
lahf
stc
lods
int
sbb
sbb
or
ret
cmpsl
cld
pusha
add
pop
inc
or
shl
add
jp
pop
scas
cld
and
mov
in
sbb
cmp
lds
fsubp
add
fnstsw
cmp
outsl
inc
sahf
mov
test
fidivs
sbb
adc
and
test
adc
add
dec
dec
xor
dec
add
sti
loop
shlb
jl
movaps
dec
gs
insl
pushf
dec
mov
pop
push
incb
loopne
sbb
add
add
shl
mov
les
out
or
inc
xchg
inc
jo
adc
mov
sahf
mov
push
push
popf
scas
and
pusha
sbb
insl
adc
mov
sub
xchg
rolb
int3
sti
divl
push
mov
in
pop
out
or
mov
dec
sbb
add
dec
add
mov
mov
imul
and
pop
push
movsl
pop
adc
lods
add
lds
popa
xlat
cwtl
jecxz
mov
jmp
pop
int3
pop
add
xor
and
push
inc
xor
or
sbb
sbb
arpl
loopne
cmp
add
inc
rcrl
cld
loope
loope
je
jae
jne
in
jecxz
fsubp
jle
add
xchg
adc
ss
cwtl
push
jge
jg
mov
add
push
sbb
adc
loopne
or
lcall
pop
lock
loopne
sahf
in
pop
add
add
jo
dec
adc
pop
fmul
repz
sbb
cmp
movsl
and
js
pop
cmovne
inc
and
mov
lods
adc
add
xchg
in
mov
and
jp
outsb
pop
pop
and
sti
add
lcall
in
or
ret
add
mov
dec
or
lods
addl
sbb
sub
sbb
divl
inc
lods
int3
scas
nop
adc
jns
shl
inc
aas
push
pop
test
push
sbb
in
movsb
cli
inc
adc
xor
push
add
push
inc
dec
popa
mov
dec
pusha
fwait
sub
sub
inc
jmp
pop
add
xor
mov
lods
stc
dec
out
add
pop
fmull
xchg
arpl
inc
adc
xor
dec
movsl
aas
popa
sahf
add
cmp
xor
push
pop
sub
cmpsl
clc
out
cmp
nop
add
sbb
insb
aam
sysret
adc
sub
xchg
add
xchg
add
xor
inc
out
mov
add
leave
test
mov
adc
mov
cli
ret
push
jp
push
and
into
add
jmp
stos
fisttps
inc
push
lret
add
xchg
fcomps
cmp
fcoml
out
mov
lock
loop
testb
andb
pop
add
mov
mov
cs
enter
pop
add
xlat
sub
fcom
sar
jno
inc
and
add
sarb
and
aam
push
adc
lods
or
sbb
xor
jecxz
and
push
add
cmp
add
push
in
add
insl
or
mov
filds
and
sarl
pop
or
fwait
add
les
sub
rcrb
jecxz
push
add
int3
inc
add
add
lret
add
or
add
jle
xor
push
cmc
stc
or
pop
ja
add
nop
cmp
inc
mov
add
or
cmp
sub
adc
daa
aad
add
outsb
and
cltd
add
pusha
aam
sbb
insb
lahf
sbb
mov
add
inc
cli
test
fildll
add
pop
adc
add
cmp
loope
add
lock
pop
mov
addr16
lret
sub
or
leave
mov
in
mov
adc
push
out
cmovge
orl
cmp
shr
mov
bound
in
cmp
jle
add
add
scas
add
fnstsw
in
in
outsb
add
xchg
push
lea
sbb
loopne
je
aad
push
push
lods
pushf
push
or
cwtl
loop
cmpsb
or
or
pop
sbb
mov
stc
ss
jns
pop
push
and
fnstenv
dec
sub
std
add
clc
sub
stos
mov
andl
add
jns
nop
das
jl
xor
pusha
push
adc
repnz
movsl
jnp
or
stos
xchg
adc
pop
sub
mov
je
inc
add
jae
mov
gs
adc
pop
pop
inc
icebp
sub
xlat
jmp
xchg
fbstp
mov
push
sub
or
add
fsts
xchg
sub
sti
add
adc
push
mov
fcoml
mov
add
mov
popl
in
jl
adc
stos
cld
xor
into
das
cmpsb
lret
jo
fsubp
mov
aad
sar
sbb
addr16
add
xchg
pop
dec
inc
push
sarl
mov
push
mov
push
call
out
cmovns
jmp
aas
scas
into
test
add
repz
int3
mov
adc
push
stos
mov
dec
xchg
inc
or
adc
cmpb
push
lret
movb
lcall
mov
stos
scas
sub
mov
loopne
lret
outsb
adcl
int
add
iret
aaa
repz
dec
push
fadd
adc
cmp
jnp
xor
pop
xlat
add
rcr
inc
dec
mov
andl
and
aam
das
pusha
push
mov
gs
or
ss
cmp
shrb
sahf
fwait
sub
std
jle
add
lahf
js
sti
mov
add
mov
dec
inc
fwait
jae
filds
shlb
aad
jno
add
aam
repz
rorb
outsl
popf
inc
mov
cltd
out
jecxz
push
adc
push
dec
cmpsb
pushl
addr16
cmp
jge
cmp
scas
aaa
sub
pop
cmp
xchg
mov
add
sub
pop
push
push
pop
ja
divl
mov
cmp
lret
mov
jae
jno
pop
mov
jnp
xchg
pop
andb
adc
enter
mov
or
sub
cwtl
cmp
mov
add
fdivr
or
mov
scas
xlat
ror
out
addl
loope
pop
test
in
aam
pushf
aaa
fcompl
mov
jmp
add
das
mov
loope
data16
cmp
loope
push
clc
movsb
mov
fidivrs
jns
or
int
cmp
lods
add
push
scas
js
sub
int
outsl
jmp
dec
in
push
dec
xchg
add
pcmpeqb
lods
add
clc
pop
xor
xor
sub
mul
shr
sahf
add
lods
into
dec
sbb
adcb
jno
jge
mov
add
jp
dec
lcall
cmp
mov
or
scas
add
addb
mov
xchg
add
movsl
popa
aad
cwtl
jmp
aaa
xchg
and
add
loope
inc
sti
int3
adc
add
pop
push
add
inc
ror
repz
add
cmp
ret
mov
jg
cmp
add
sbb
or
js
sahf
hlt
ja
aas
ret
mov
je
cwtl
lcall
xchg
sarl
outsl
popa
dec
push
adc
loopne
icebp
xor
fwait
sbbl
add
sar
push
mov
jge
fadds
ljmp
rorb
daa
out
popf
sbb
repz
in
in
imul
andb
xchg
fsubp
inc
pop
jnp
mov
push
mov
push
dec
ljmpw
mov
sub
scas
jne
mov
imul
cmc
mov
dec
add
repnz
iret
popa
sub
add
mov
mov
add
or
cmp
sbb
add
shll
fists
in
lds
and
xlat
add
cwtl
adc
clc
push
dec
cmpb
les
mov
inc
fnstcw
add
enter
in
push
sbbl
and
sahf
mov
sub
or
mov
loopne
inc
add
mov
int
pop
push
inc
inc
lods
xorb
cmp
push
sbb
sahf
mov
dec
pop
xchg
xlat
das
add
int3
fisubrl
add
test
in
jge
mov
inc
ret
mov
loopne
mov
dec
fists
stos
test
add
mov
sti
xchg
add
and
jmp
mov
mov
enter
lods
sbb
xchg
in
mov
test
or
inc
mov
dec
cwtl
jne
or
jp
xor
add
inc
outsb
xchg
dec
test
in
aad
mov
arpl
add
adc
movsb
incb
or
jl
jp
pusha
ret
in
rcrl
dec
jg
xchg
pop
inc
icebp
xor
pop
out
loopne
in
stos
push
cmp
push
mov
sbb
add
int
add
insl
rorb
xchg
hlt
pop
fs
clc
xchg
pushf
add
lret
or
push
jg
inc
mov
add
jl
add
mov
mov
mov
flds
loope
cwtl
insb
dec
mov
jnp
pop
ja
add
ds
sbb
cmp
and
sbb
add
sbbl
push
pop
divl
sbb
rcrb
mov
hlt
cmp
pusha
test
add
or
repz
lock
xor
fmuls
ss
adc
push
push
pushf
jno
cmp
jne
inc
add
pop
cmpsl
mov
sbbb
fnstenv
xlat
cmp
in
fiaddl
repnz
gs
jbe
add
or
jge
outsb
cmp
cmp
in
add
jp
pop
xor
insb
dec
cmp
mov
add
in
stos
stc
add
repz
cmp
sbb
repnz
fidivrs
dec
call
inc
shlb
add
or
sbb
add
test
shll
jae
in
enter
mov
fidivrl
js
sbbb
cmpsb
push
hlt
gs
sbb
or
mov
and
fstpl
addr16
inc
push
mov
push
imul
in
mov
pop
popa
xchg
addr16
aam
xchg
or
lock
mov
pop
jl
test
leave
callw
sbb
jb
add
adcl
add
mov
mov
jno
ljmp
mull
push
add
adc
add
mov
push
mov
and
cli
fcmove
sbb
lods
add
adc
lret
cli
std
or
adc
push
inc
mov
aas
cmp
push
mov
movb
inc
pop
add
xchg
mov
rcrl
in
jae
lea
xchg
loope
cmpsb
xchg
add
cli
shlb
add
sbb
add
or
shlb
sbbb
cmp
or
fiadds
lods
xor
rorb
hlt
cmpl
cmpsb
out
add
and
cwtl
mov
cmpsl
mov
adc
cld
mov
movsl
push
test
dec
add
push
flds
shrl
mov
push
pop
jmp
aas
mov
ret
mov
outsb
xchg
stos
icebp
neg
lret
push
ljmp
cmpsl
adc
jnp
xchg
push
decl
add
out
mov
dec
sbb
push
xor
xlat
or
xor
add
stc
mov
dec
cmp
xchg
arpl
int3
pop
pop
jg
sbb
shlb
movsl
add
iret
xchg
icebp
add
into
outsb
pop
mov
and
cmp
mov
adc
mov
or
add
pop
cltd
and
jns
aam
push
and
inc
mov
sub
pop
add
lsl
jl
loopne
inc
adc
nop
mov
sbb
mov
insb
fs
js
cli
or
xor
pusha
lret
adc
push
rol
or
sar
and
aas
sbb
lds
xor
add
cli
mov
cwtl
addr16
jne
xor
and
dec
pushf
insl
aam
jmp
add
nop
dec
xor
inc
add
sbb
xor
dec
test
jbe
ss
push
call
shr
mov
jg
xchg
es
nop
stos
lea
add
stos
test
add
in
pop
adc
test
rclb
lock
out
fisttps
pop
bound
add
pop
repz
mov
addb
and
data16
ljmp
lcall
jo
jge
add
imul
pop
out
shlb
jo
or
pop
into
xor
mov
cli
add
xchg
jbe
add
stos
jl
arpl
pusha
addr16
mov
cld
loope,pt
xor
and
dec
mov
rcl
outsb
jo
cli
mov
cmp
jns
outsl
mov
lea
repnz
divb
jp
sarw
push
call
repnz
sbb
adc
sbb
iret
jnp
mov
sub
or
clc
loopne
sub
jmp
clc
adc
pushf
das
jecxz
es
mov
add
or
push
cmp
mov
bound
scas
clc
pop
mov
lods
outsb
shrb
dec
mov
lret
mov
add
sbb
cmp
xchg
add
lahf
mov
and
stos
std
jmp
push
lock
sub
inc
cmp
xchg
arpl
mov
sub
xchg
test
jnp
lcall
pushf
outsb
push
dec
test
adc
add
lds
cmp
cmp
sti
aas
hlt
mov
sub
cmpb
addb
jae
push
popl
out
mov
test
cltd
add
mov
xlat
cwtl
incl
imul
dec
fwait
cli
pushf
movsl
xor
clc
dec
daa
gs
and
enter
and
mov
fiaddl
xchg
xor
out
mov
out
and
pop
cli
scas
add
bound
sub
mov
add
cmp
or
push
push
daa
or
mov
out
add
pop
inc
jg
fidivl
mov
push
es
push
ret
push
int
lds
jl
add
pop
lahf
lock
mov
adc
lea
pop
mov
cmp
inc
xchg
stc
dec
sub
pushf
xor
aas
pop
add
std
out
and
cmp
in
fsubl
add
xlat
pusha
les
hlt
adc
inc
or
in
mov
shr
adc
pop
or
movsb
shll
loope
inc
jnp
cs
cltd
or
dec
mov
icebp
add
xor
pop
std
shrl
outsl
insl
je
sbb
imul
cmpsb
push
mov
mov
shl
out
push
test
sub
jnp
or
out
pop
sbb
xor
inc
dec
outsb
enter
dec
push
sti
sub
orb
cmpb
inc
push
and
subl
jo
ficomps
insl
xchg
pop
subb
imul
cmp
inc
sbb
pop
popa
add
sub
adc
pop
test
pop
mov
jmp
lods
aas
repz
jl
mov
roll
jg
sti
xlat
jmp
add
popa
outsl
pmulhw
addb
pop
imul
out
pop
pop
mov
pop
test
imul
add
cmp
push
les
rcll
test
enter
cmp
dec
std
mov
mov
pop
call
in
sub
mov
cld
cli
in
cwtl
or
pop
mov
lods
js
add
adcl
nop
movsl
jle
add
inc
push
push
sub
andb
rol
add
cld
sub
dec
arpl
add
shlb
sub
imul
add
mov
inc
insl
sub
bound
add
ret
cld
and
dec
loope
shlb
mov
dec
sbb
push
lock
jmp
dec
xchg
xor
ljmp
adc
add
jnp
jp
rol
cmp
test
js
or
adc
or
test
mov
or
xor
sbb
adc
push
lret
xchg
bound
inc
sbb
sub
and
mov
nop
xchg
enter
dec
and
outsb
aad
and
mov
inc
sbb
add
rclb
sbb
mov
xchg
mov
cmpsl
adc
lret
popf
add
aam
adc
enter
pop
cwtl
mov
rolb
jge
add
mov
or
dec
mov
mov
push
loop
sbb
into
cmpl
and
and
push
clc
add
inc
and
sbb
pop
push
jae
out
sbb
or
orb
sbb
mov
popf
jno
loopne
inc
pop
sub
scas
pushf
in
jge
adcb
out
mov
lea
aas
es
loopne
mov
out
sbbl
enter
in
arpl
dec
xchg
insb
push
aaa
adc
add
mov
lcall
loopne
addr16
adc
add
and
jbe
sbb
xor
nop
rorl
aad
pop
mov
rorb
rol
andb
and
or
push
sub
xor
adc
mov
push
cmp
add
es
mov
xor
insl
loope
dec
lods
repnz
in
arpl
adc
or
lods
shl
pop
xor
popa
je
je
clc
xchg
inc
insl
outsb
add
outsl
addr16
clc
mov
or
adc
sbb
and
fsubr
icebp
loopne
je
sub
insb
test
and
popa
aad
pop
push
icebp
cmp
dec
dec
mov
cmpl
popa
fwait
push
dec
xor
rcrl
stos
xor
mov
sbb
mov
divb
mov
cmp
push
inc
pop
add
pop
xchg
testl
pop
add
andl
hlt
push
ss
sub
or
or
inc
inc
sub
xor
mov
or
mov
cmp
je
movsb
and
fmul
xchg
push
and
mov
mov
pop
lea
jecxz
xor
and
adc
push
add
idivl
nop
dec
test
pop
insl
and
popf
call
mov
xchg
mov
subl
rolb
addb
test
repz
test
mov
inc
sub
push
adc
aam
adc
out
push
adc
mov
test
xor
scas
push
adc
pop
push
in
imul
into
mov
xchg
jl
dec
xchg
push
and
lret
sub
dec
add
adc
sbb
into
leave
insl
rolb
andb
cmp
sbb
inc
add
mov
cmp
in
push
push
nop
test
inc
jmp
mov
and
ss
insl
jmp
in
divl
sar
add
in
pop
shlb
data16
into
add
push
add
test
lods
xorb
sti
dec
mov
js
and
cmp
add
push
inc
cmpb
add
mov
inc
push
orl
xor
pop
cmp
or
cwtl
cs
or
lret
or
mov
jb
xor
outsl
pushl
adc
das
xor
jbe
lea
fadds
mov
enter
sbb
xchg
adc
mov
or
push
ljmp
mov
push
ret
dec
mov
and
nop
lcall
lea
sti
add
daa
bound
ljmp
mov
in
push
cld
inc
mov
in
stos
ds
mov
cli
out
mov
shlb
mov
icebp
or
daa
jmp
sub
mov
sbb
xor
sbb
inc
adc
sub
push
movsl
popa
add
xor
xchg
push
pop
mov
xor
imul
jbe
inc
sub
jnp
pop
sbb
or
test
push
mov
xchg
shlb
push
jecxz
xor
clc
sub
pusha
dec
adc
adc
add
scas
loopne
and
lcall
or
sub
pop
and
inc
sbb
sbb
sub
mov
adc
adc
add
cmp
jecxz
jae
out
test
insl
pop
cmpsb
jo
movsl
dec
movnti
jae
rolb
mov
add
cltd
ljmp
shll
mov
fwait
arpl
or
add
iret
jg
xchg
cmp
fsubs
mov
mov
xchg
in
ja
insb
push
lds
add
mov
add
mov
adc
dec
adc
jl
xacquire
dec
cmp
fsub
add
sbb
adc
call
rcrb
movsl
js
adc
das
rcrb
cmpl
jle
lret
aad
sbbb
sub
enter
add
and
pushf
fiaddl
je
shll
stos
jo
jb
inc
mov
sbb
mov
dec
mov
test
dec
xor
add
inc
incl
inc
mov
sti
jno
adc
push
lret
loopne
sbb
mov
jne
push
add
pop
dec
icebp
sarb
or
push
xchg
xor
scas
push
dec
add
push
fldl
lcall
add
dec
mov
dec
xchg
pop
incb
add
addr16
pop
aas
push
add
adc
cmc
lret
js
jecxz
dec
or
mov
cmp
fstl
aam
add
add
xchg
jle
loop
cmp
mov
mov
filds
mov
push
popf
mov
loope
xchg
pop
cwtl
xchg
daa
pusha
sbb
mov
js
push
xchg
addb
push
in
rorl
jnp,pn
add
icebp
inc
pop
adc
jbe
adc
mov
jl
add
sub
lcall
mov
mov
stos
add
inc
flds
js
cmpsb
inc
addb
push
push
add
in
int
add
roll
ret
rolb
fsubrp
cltd
adc
sarb
movsl
adc
hlt
loope
or
push
or
fs
xor
sarb
jbe
and
ficompl
add
add
aaa
adc
test
loope
ja
mov
and
das
or
insb
test
lods
add
cmp
mov
sub
and
nop
je
stc
nop
cmp
adc
sbbl
cmp
jg
ja
mov
push
daa
rcrb
xchg
add
shl
mov
push
pop
jle
mov
cs
incl
push
inc
js
add
xor
pop
hlt
ffree
adc
fstps
ja
pop
jo
adc
mov
dec
in
dec
push
mov
push
sub
mov
int3
mov
cmp
scas
xorb
lods
sbb
push
cmp
icebp
rcrl
movsb
cwtl
test
dec
clc
add
sub
ds
sub
pop
xor
ljmp
inc
nop
push
lea
mov
ja
xchg
sub
add
and
add
ficompl
push
adcb
les
inc
sub
xchg
lods
nop
mov
ja
cmp
dec
fwait
add
jo
add
inc
xchg
sbbb
mov
or
cld
loope
inc
lods
add
mov
inc
jl,pn
mov
add
iret
mov
aaa
add
cmpsl
push
sbb
psllq
or
aam
add
sub
fiaddl
add
stos
rorl
add
push
aas
add
and
std
add
sarb
jle
not
mov
cmp
outsb
arpl
mov
or
jae
fistpll
ja
add
cmp
inc
pop
xlat
enter
mov
shrb
inc
adc
es
test
jae
mov
cltd
jl
push
add
test
jne
int
hlt
test
sbb
pop
jge
add
add
sub
push
insl
loope
mov
dec
cmp
icebp
enter
mov
lock
or
aad
jge
das
jne
add
cs
pusha
or
sbb
pusha
mov
enter
stos
inc
subb
jae
adc
add
mov
add
bound
mov
add
mov
jo
and
sbb
daa
sub
add
cwtl
jp
fld
add
cmp
insb
leave
jmp
xor
push
add
push
mov
testb
xlat
bound
push
dec
lea
clc
xchg
add
mov
push
int3
add
pop
fcmovnu
mov
inc
add
xchg
xorb
call
dec
lcall
testl
adc
add
shrb
add
mov
pop
repnz
repz
xchg
inc
inc
jne
cmp
add
adc
shll
repz
add
cmp
icebp
sbb
idivl
xchg
pop
test
rcr
add
and
pusha
jnp
paddusb
flds
sbb
push
out
sti
fsub
popl
outsb
push
mov
push
pushf
dec
add
fwait
inc
mov
pop
das
pop
addb
push
divl
cld
sahf
add
scas
sbb
cmp
outsl
cli
push
cld
cwtl
add
cs
mov
popa
add
clc
std
test
push
scas
imul
mov
rorl
add
mov
adc
daa
mulb
mov
add
andl
xchg
lsl
inc
cltd
sbb
lret
push
shlb
add
xor
and
pop
scas
sbb
dec
mov
pop
lock
pop
stos
imul
in
nop
shll
enter
jno
push
sldt
pop
pop
mov
clc
loop
imul
outsl
mov
in
lcall
lods
xchg
fidivl
fdivs
cmp
cwtl
jbe
sub
in
mov
add
xchg
clc
dec
dec
add
mov
stos
xchg
adcb
push
lea
sbb
inc
fwait
hlt
out
ror
cmp
fstpl
jg
dec
sbb
mov
jnp
lea
clc
push
mov
popa
mov
in
add
mov
bound
stos
iret
out
arpl
push
mov
das
test
add
pop
add
repnz
jecxz
in
add
jmp
mov
cwtl
dec
mov
pop
cmp
add
aad
fs
sub
pop
mov
adc
xchg
add
stos
pop
leave
loopne
mov
sbbl
into
inc
cld
jnp
mov
and
cmc
mov
and
adc
push
outsb
test
fmuls
loopne
movsl
cwtl
inc
out
rol
push
fidivrl
cmp
dec
and
pop
or
test
push
int
cmp
adc
int3
sbb
adc
rcl
inc
jbe
ljmp
push
xchg
rcrl
jmp
pop
int
pushf
mov
push
in
push
scas
int3
inc
add
jnp
or
jne
xchg
add
mov
nop
or
inc
arpl
add
call
xor
dec
fcomp
in
in
out
roll
outsl
stos
aaa
movsl
pmulhuw
ror
add
xor
pusha
cmp
enter
jno
mov
and
cld
adc
xchg
mov
adc
cwtl
sbb
enter
pusha
sbb
push
xchg
mov
pop
mov
testl
xadd
jbe
iret
les
sub
jl
data16
add
pop
popf
dec
aam
mov
in
xor
or
mov
sub
add
addl
cmp
mov
pop
mov
test
mov
in
add
jo
lcall
scas
mov
jle
add
int
out
jno
shll
in
loop
mov
call
sub
je
loopne
mov
data16
sub
daa
add
out
imul
das
dec
dec
out
pop
mov
imul
and
pop
adc
xchg
add
add
dec
fs
xchg
cmpsb
sub
scas
inc
or
out
aas
xchg
fistpll
rclb
push
cli
les
sbb
in
das
jmp
sub
add
mov
xchg
fildll
add
imul
das
pop
div
mov
imul
leave
xchg
cmp
pop
ret
add
es
mov
add
pop
mov
dec
dec
cmp
push
push
pop
push
xor
movsl
in
sbb
mov
stos
xor
xor
test
add
idiv
xchg
xor
xor
sarl
add
mulb
pop
xor
xor
incb
ret
movntq
out
fmul
pusha
jno
xor
cli
test
mov
cmp
addb
inc
movsb
std
add
js
and
or
call
sbb
jb
daa
or
pop
pusha
xor
in
popa
fldl
mov
stos
fadds
stc
lcall
add
loopne
movsb
xchg
inc
roll
int3
outsb
mov
stc
cltd
and
rclb
inc
movb
imul
inc
arpl
xor
mov
push
cmc
jmp
pop
or
sarb
mov
leave
inc
pop
add
pop
sar
sub
push
push
push
push
jbe
ja
pusha
loopne
xchg
sbb
popa
adc
cs
aam
inc
push
add
sub
lahf
jmp
pop
loopne
sbb
inc
mov
push
lds
add
lock
cli
ret
mov
loopne
xor
dec
loop
add
daa
add
das
filds
cmp
or
dec
ja
ret
sbb
jo
arpl
inc
pusha
js
mov
cmpl
or
add
fstpt
add
and
mov
add
ljmp
imul
sbb
sub
push
negb
mov
add
out
pop
xchg
add
imul
lahf
mov
test
cmpsl
add
ljmp
out
aam
add
mov
adc
add
jmp
adc
jp
sbb
xchg
push
loop
push
insl
jae
shrl
filds
inc
and
sbb
scas
sbb
or
in
pop
cmp
int3
out
add
fldl
mov
jecxz
add
leave
or
jb
lret
loop
inc
dec
xchg
pop
sub
mov
or
cmc
or
sbb
repnz
add
mov
inc
roll
jge
dec
xorb
adc
push
add
xor
jg
add
sub
pop
add
out
into
out
clc
jae
in
cmpb
cmp
jle
pop
or
out
mov
adc
insb
jmp
mov
rolb
loope
cld
adcb
mov
sub
mov
xor
lods
add
cli
movsb
addb
dec
add
push
add
jmp
cld
popa
jb
add
stos
scas
jne
cmp
fcomps
call
lret
mov
sbb
dec
movsl
lds
push
inc
aas
pop
push
popa
in
add
xchg
ja
add
sbb
add
inc
push
mov
add
inc
sbbl
adcb
mov
dec
add
pusha
ret
rorl
and
or
sub
hlt
dec
mov
inc
sbb
add
jo
sti
sbbl
mov
sbb
mov
push
inc
push
mov
jno
inc
jnp
sahf
repz
stos
jae
cmp
aaa
fsub
pusha
pop
sbb
jo
add
test
orl
shrl
add
out
or
test
pop
sbb
cmp
js
sub
pop
out
aad
inc
out
dec
cmp
add
and
xor
inc
fcoms
inc
add
stos
bswap
jecxz
or
nop
push
imul
cmp
inc
lret
or
add
ret
inc
xor
iret
add
pop
loopne
mov
add
xchg
orb
dec
insl
or
xchg
mov
mov
scas
mov
roll
cltd
jmp
push
push
mov
lock
push
movsl
mov
lods
bound
dec
pop
pop
push
xchg
push
shlb
in
test
stos
inc
nop
mov
test
xor
jae
add
mov
pop
sarb
pop
sbb
push
add
inc
lret
fst
jg
mov
hlt
adc
sub
lods
mov
nop
repz
add
adcl
mov
mov
in
adc
gs
push
lock
loope
add
loop
push
cld
loopne
add
test
xor
add
push
jno
add
and
add
cli
movsl
setge
pusha
and
add
mov
fldcw
sbb
cmp
xchg
xor
push
stos
loope
xchg
in
jae
add
push
jnp
add
les
and
mov
inc
lahf
dec
jo
add
ret
sbb
cld
sbb
mov
outsl
or
add
xchg
mov
or
ret
lods
scas
xchg
add
mov
rclb
add
and
rolb
dec
lret
mov
mov
xor
data16
jno
out
in
cmp
dec
xchg
call
push
popf
pop
clc
pop
pushl
sbb
add
jle
mov
add
in
add
jle
lcall
clc
add
mov
jne
add
sbb
fcompl
pop
pop
popa
xorb
xchg
fisubrs
add
notl
push
popf
xor
push
mov
into
add
movsb
cmp
sbb
daa
rcrb
jns
cmc
push
imul
shrb
adc
push
lcall
and
rol
cmp
out
leave
jl
add
xchg
cmp
push
sbbb
in
call
adc
cmc
aas
add
repnz
push
dec
pop
add
das
jb
loopne
lret
add
cmp
aad
inc
int3
add
out
add
adcl
je
pop
push
inc
scas
aas
add
lahf
sub
pop
cmpsb
inc
xchg
lods
sub
jo
stos
int
mov
movsl
xor
imul
in
je
je
inc
add
push
jno
fcoms
hlt
add
and
push
xor
sarb
mov
icebp
movb
int
sbb
aam
leave
add
and
push
out
xlat
cltd
jno
cwtl
mov
xchg
pop
add
mov
ja
mov
fcompp
or
sub
sbb
mov
imulb
std
sbb
mov
stc
add
lcall
mov
add
cwtl
test
repnz
test
cmp
xor
push
add
rcpps
xorb
repz
jl
pop
into
mov
mov
mov
test
add
popa
dec
sub
adc
add
push
mov
rorl
cwtl
or
call
sbbb
lods
and
pop
sahf
dec
add
cmpsb
fisttpll
sub
cmpsl
sbb
dec
scas
push
pop
in
stos
mov
pusha
xchg
push
ret
dec
pushf
add
js
add
movsb
pop
dec
cmp
icebp
adc
ret
lret
inc
add
inc
and
add
xchg
mov
add
das
test
mov
pop
pop
fstps
inc
cmpsl
testb
mov
add
xor
xchg
push
sub
cli
xor
lds
cmp
jns
cltd
stc
mov
mov
sub
addl
int3
sbb
and
outsb
ja
push
fcomp
sti
add
out
jno
lea
pusha
cmp
pusha
test
mov
dec
call
repz
ja
cmp
cmp
adc
add
adc
js
mov
add
test
ret
lret
fadds
mov
adc
pop
ja
jecxz
add
dec
xchg
pop
jno
xchg
add
ret
loopne
addl
mov
cld
mov
xchg
or
aaa
fildl
mov
mov
mov
int
or
icebp
fsub
add
call
or
in
lret
imul
test
lds
xchg
loop
stos
repz
add
dec
cmpsl
fnstsw
dec
and
imul
clc
push
mov
popa
or
mov
dec
mov
add
aaa
test
add
fcoms
int3
out
into
sbb
shr
orb
or
rcll
push
and
dec
xlat
repz
xchg
sub
add
pop
lcall
test
cmp
jns
cmp
pop
add
pop
jo
stos
push
push
add
fldenv
xor
popf
mov
and
xchg
mov
jle
mov
add
add
push
sbb
jne
shrb
lock
out
push
test
pusha
std
add
adc
mov
mov
mov
mov
flds
lret
xchg
jge
add
xor
xor
cmpb
add
pop
and
aad
mov
call
loop
rolb
cwtl
les
inc
adc
test
sub
in
lcall
pop
mov
mov
adc
ret
std
or
mov
dec
outsl
cmp
push
rcrb
testb
and
add
in
in
jb
add
dec
adc
loope
stos
call
mov
jge
add
push
ret
mov
dec
das
sub
sbb
mov
orb
add
jge
imul
push
jnp
sti
ret
jl
xchg
push
xchg
add
dec
pop
popl
add
test
inc
push
js
aaa
inc
jae
pop
pop
nop
push
shr
inc
gs
add
cmp
filds
adc
in
out
testb
sbb
in
cmpsl
std
jecxz
stos
add
dec
cmp
bound
sbb
out
les
pop
cmp
push
cmp
jnp
addr16
push
dec
add
lret
aaa
cs
jo
pop
iret
cltd
add
dec
stos
pop
fcmovnbe
addr16
pop
or
dec
push
jnp
xlat
add
push
pushf
inc
gs
dec
mov
aad
add
cwtl
pop
lcall
cmpsb
add
inc
xlat
orb
lahf
add
inc
js
push
into
mov
add
mov
adc
xchg
mov
in
ds
subb
fldcw
or
mov
pop
pop
js
inc
fwait
mov
adc
js
dec
sbb
pusha
mov
pushf
add
scas
xorl
xchg
clc
jecxz
repnz
or
cltd
movsl
addb
push
add
ljmp
pop
or
xor
jmp
mov
and
push
mov
in
jns
pop
jo
cmp
enter
movsb
js
add
arpl
add
push
cmp
jmp
add
roll
pushf
mov
mov
bound
mov
shlb
sbb
add
push
clc
adc
sbb
lods
jge
mov
add
cwtl
addr16
and
and
adc
dec
scas
push
mov
roll
dec
push
inc
xchg
stc
adcb
out
outsb
scas
push
xor
gs
adc
pop
inc
pop
add
fnstcw
das
jno
hlt
shr
andb
add
cmp
adc
cli
out
add
and
lret
fsubl
fwait
inc
popf
out
push
add
push
flds
mov
jmp
add
jmp
add
mull
daa
jae
pop
cmp
cmp
cmpb
rolb
xor
lods
jne
add
or
sbb
iret
inc
rol
lret
cltd
add
rcrl
or
add
add
mov
cld
xlat
cwtl
push
push
popf
or
and
inc
arpl
add
xchg
sbb
enter
aas
insl
mov
hlt
fdivs
pop
mov
xor
inc
sbb
dec
jg
ficoml
insl
push
test
xor
les
je
fdivrl
push
daa
push
and
add
and
loopne
stos
inc
roll
subb
pop
out
call
jne
xchg
nop
hlt
cmp
andb
sti
cs
cmp
lea
cmpsl
stos
scas
pop
add
sub
andb
aas
add
push
loop
insl
scas
cmpsl
leave
or
popl
packuswb
add
shl
sub
jae
in
jbe
imul
push
add
cltd
in
stos
dec
add
adc
outsb
add
jae
xchg
pop
and
leave
lock
pop
mov
jmp
pop
dec
imulb
fcomip
xchg
push
lahf
insb
in
xor
sub
add
cltd
dec
xchg
sti
add
jo
inc
mov
mov
sub
dec
pop
mov
push
xor
and
adcb
imul
sbb
lret
iret
pop
push
test
aas
hlt
imul
rolb
insb
add
jp
pop
add
sahf
shrb
lods
or
xor
push
movsl
add
sub
or
jo
cmp
sbb
bound
addl
push
cpuid
pop
add
mov
pop
cwtl
fpatan
mov
in
xchg
hlt
sub
out
cmp
mov
bound
enter
dec
pop
mov
jns
add
xor
pusha
mov
inc
push
add
dec
fs
clc
pop
add
push
mov
add
jl
lds
mov
mov
movsl
nop
ds
adc
mov
add
fisttpl
jo
repnz
popf
add
test
stc
xchg
xchg
push
add
rcrb
add
push
xor
sbb
or
xchg
ret
pop
scas
pop
cmc
movsb
sbb
into
fs
inc
push
inc
sahf
fistl
idivl
or
enter
xchg
nop
rolb
clc
dec
push
negl
pop
loopne
pop
pop
xchg
lods
add
cwtl
ds
mov
and
pop
push
push
dec
subb
mov
arpl
mov
loopne
insb
or
rclb
add
xorl
inc
fnsave
sti
inc
pop
sbb
add
loopne
add
out
mov
cwtl
clc
rolb
push
fwait
xchg
xor
shlb
xchg
js
sub
or
inc
pop
xor
lock
dec
fidivrl
in
sahf
lahf
loop
add
dec
mov
jg
in
adc
pop
das
add
add
fcomps
xor
and
add
add
stc
imul
scas
push
add
pop
inc
jno
and
add
call
jb
add
aas
mov
pusha
and
push
bound
hlt
fbld
das
pop
ds
jns
mov
adcb
insl
popa
pop
test
inc
mov
adc
add
shll
data16
add
shlb
loope
test
jb
in
repnz
jecxz
sub
testb
inc
es
xchg
cld
scas
rcrb
sldt
out
cmp
add
mov
orl
rcrl
movntps
sub
js
jge
pop
pop
rolb
jo
popf
sub
inc
and
sub
sbb
sahf
inc
cmp
stc
jg
add
aam
push
lahf
lock
xor
mov
pop
add
jle
dec
adc
dec
cli
mov
outsl
xor
cmc
jb
ljmp
xchg
pusha
and
filds
vsqrtss
and
mov
and
hlt
roll
shrb
ljmp
or
pusha
sbb
movsb
dec
lods
in
add
jge
aaa
add
jno
out
pop
add
xlat
adc
int3
or
fisubrs
cmp
std
xor
fistpl
xchg
push
scas
jg
dec
and
push
gs
or
and
mov
push
testl
out
push
pusha
jp
inc
jbe
mov
aaa
in
mov
ss
pop
out
xor
mov
movsb
subb
jbe
fdivr
loop
dec
ror
add
cltd
and
stos
out
lock
in
scas
inc
in
add
pop
cmc
int3
fsubr
inc
push
rol
insb
fmulp
pop
orb
pop
jl
adc
ja
idivl
shrb
push
mov
or
aas
popa
fcoml
mov
cmp
shlb
and
fdivrs
call
inc
push
fwait
inc
hlt
add
call
mov
int3
sub
loop
pop
push
repz
clc
shlb
aad
shlb
sbb
dec
pusha
xlat
inc
cmp
xchg
cld
jno
push
jne
cmp
mov
add
xchg
inc
in
sbb
mov
jns
ret
cltd
cmp
out
pop
jg
cld
roll
cs
xor
iret
jecxz
sbb
add
aam
ret
push
fwait
in
lcall
fmulp
shl
inc
add
mov
cltd
mov
cmp
sub
imul
dec
outsl
dec
cvtpi2ps
sub
int3
add
and
pop
out
pop
sbb
adc
and
daa
inc
std
in
loopne
test
bts
xchg
fldl
int
mov
or
fadds
test
jbe
outsl
in
and
out
fwait
cld
lahf
xchg
pusha
rcl
add
cli
lods
jmp
add
aam
fsubr
shll
add
std
push
pushf
stos
cmp
cwtl
sbb
loop
fimuls
clc
rol
pop
test
jmp
adc
enter
repz
mov
adc
or
add
jmp
pop
mov
sbb
add
int
rolb
cmpsl
test
add
jle
fldt
imul
push
lahf
and
movaps
jge
scas
inc
push
xchg
call
jns
mov
dec
and
ja
lret
sarb
aas
rorb
shrl
adc
or
cwtl
pushf
cli
inc
sub
js
add
xchg
loop
aas
test
add
lret
adc
xchg
rcrl
pop
jne
popa
mov
lods
sbb
orl
and
cmp
enter
fmuls
inc
mov
dec
pusha
cld
call
push
dec
and
mov
push
clc
cmp
add
ds
clc
scas
test
add
lods
movsl
mov
lds
xor
loop
ljmp
mov
out
add
sub
jle
cwtl
sbb
push
testl
ljmp
mov
xor
out
sbb
add
add
stos
pushf
sub
jecxz
dec
setno
sub
mov
jg
jge
and
mov
data16
push
dec
xor
cmp
add
lcallw
push
push
fldt
xor
sub
sbb
iret
pop
ja
cli
push
jns
add
ss
in
fdivl
imul
add
jnp
movsl
sbb
scas
or
jo
test
enter
sub
insb
addb
fnstcw
adc
cltd
add
dec
and
test
test
mov
in
pop
jb
in
jno
idivl
and
add
cmpb
add
pop
pop
xor
into
imul
mov
cmc
bound
xchg
mov
and
jmp
cs
aaa
ds
fists
xchg
cmp
arpl
fs
rorb
aas
adcl
xchg
nop
out
mov
cmp
jbe
clc
add
fdivrp
mov
subb
dec
loop
sahf
std
dec
adc
cmp
test
mov
and
mov
popf
add
lret
iret
sbb
out
xchg
testl
fldcw
rolb
cld
stos
andb
adc
bound
cmpsb
add
add
cmp
or
mov
or
add
and
sbb
adc
int3
test
push
mov
adc
jge
jns
js
xor
aaa
cmp
out
roll
das
mov
push
or
pop
jl
add
incl
outsb
ss
mov
mov
push
adc
loop
inc
clc
adc
clc
out
xchg
cmp
or
xchg
mov
adc
pop
or
out
or
dec
xchg
shlb
add
sub
xor
insb
sub
sbb
fdivrs
insb
sbb
xor
outsl
mov
or
ja
sub
pusha
sbb
int3
add
adc
jns
out
jne
add
lcall
add
test
add
sub
icebp
std
subl
scas
adc
movsb
inc
subb
inc
xor
cmp
int
pop
cltd
div
ds
xor
or
addl
out
and
jp
inc
mov
call
add
mov
les
cli
movsl
ret
sbbl
and
adc
gs
fldl
inc
sbb
sbb
mov
and
pop
add
insl
dec
loopne
fdiv
sbb
mov
lret
pop
inc
mov
popa
dec
enter
mov
cmp
adc
pop
out
or
sbb
test
adc
movsb
stos
push
je
add
rcl
repnz
push
add
enter
ds
add
punpckhwd
in
je
or
insb
ret
push
aam
push
add
dec
test
shll
lea
pop
outsb
cwtl
mov
imul
add
aaa
mov
add
imul
xchg
add
mov
cmpsb
fistl
je
and
je
lock
ss
sbb
jl
movsb
or
stc
and
std
in
test
repz
xor
xor
sub
mov
mov
aaa
jbe
mov
jmp
adc
pop
leave
xchg
imul
shlb
mov
lretw
xor
mov
sub
push
xchg
adcb
add
test
sbb
add
dec
cld
cltd
mov
inc
pop
leave
in
push
jp
sub
mov
ss
sbb
sub
mov
mov
inc
in
icebp
arpl
or
popa
loop
pop
inc
push
pop
add
cmp
es
adc
pop
out
ja
loopne
adc
or
movsl
in
or
icebp
add
cmpsb
mov
xchg
dec
mov
xchg
lea
rolb
add
push
inc
in
mov
jbe
xorl
xchg
mov
xchg
sub
or
or
fldcw
pop
xchg
sahf
jbe
popa
loopne
loop
test
mov
sub
dec
movups
push
dec
jbe
pop
mov
cmpb
je
mov
call
cwtl
pop
and
cltd
out
rclb
sti
rcll
jecxz
mov
mov
test
lods
inc
mov
push
xchg
sarb
sub
jo
mov
cmp
cwtl
js
cmp
cmp
lret
sub
or
xchg
push
cmp
jbe
pusha
out
dec
or
mov
jl
pop
xchg
and
fs
insb
outsl
aam
or
pop
sub
pop
jg
mov
sub
fisttpll
cmp
sbb
popa
andb
mov
cmp
shlb
sbb
dec
out
xchg
and
testb
cmp
cmp
xor
imul
addb
cld
pusha
sbb
add
add
sahf
sbb
jl
movsl
cmp
sbb
or
fwait
xor
push
inc
mov
add
cld
cltd
sub
or
mov
popa
cmp
and
pop
sub
mov
clc
mov
inc
enter
test
mov
out
int
cmp
adc
dec
popa
cmc
add
shrl
repz
mov
xor
and
or
mov
cs
pop
out
mov
add
mov
mov
test
test
pusha
and
mov
test
out
inc
inc
sub
int3
aam
or
dec
popf
outsb
adc
js
pop
inc
add
rclb
repnz
jae
clc
push
jecxz
fcoml
sbb
inc
xchg
dec
add
add
adc
add
add
mov
push
test
lea
hlt
push
adc
fldl
pop
rcr
out
jp
or
std
sbb
lcall
add
js
xor
lcall
hlt
daa
push
or
inc
fnsave
lods
xor
or
addl
push
aas
ret
mov
mov
aaa
aad
push
fmuls
xchg
fimuls
xchg
mov
cmp
lods
mov
mov
roll
loope
adc
mov
dec
or
xchg
lods
rorb
test
pusha
in
jge
adc
add
mov
push
jno
push
aam
push
xchg
adc
movsl
dec
data16
cmp
and
clc
xor
sbb
out
pop
mov
bndldx
int3
scas
mov
adc
adc
loopne
or
jge
and
jmp
or
and
sub
sub
adc
jg
mov
sahf
mov
loopne
adc
out
cmp
daa
add
jo
jbe
inc
xlat
sbb
inc
cld
stos
jp
inc
push
loopne
ds
inc
aad
and
fcoml
pushf
loopne
inc
insb
mov
or
adc
pop
call
add
addr16
nop
out
push
cli
cwtl
push
shlb
add
mov
jne
sub
jnp
insb
xchg
mov
pop
add
adc
arpl
mov
sarl
push
dec
lret
cwtl
or
dec
test
mov
popa
cltd
test
jl
loope
jo
movsb
xchg
push
cmp
add
push
mov
sub
lock
pop
mov
fadd
mov
cs
call
fwait
mov
fcomps
add
out
pop
jmp
lods
fistl
enter
pop
movsl
dec
add
pushf
das
mul
lods
mov
fsubrl
icebp
pop
push
jae
cli
daa
hlt
lds
sub
aas
sub
clc
pop
enter
jne
push
jg
out
test
cmpb
js
sub
je
xchg
cltd
dec
orb
add
xor
loop
add
ret
dec
shlb
mov
insl
or
add
pop
mov
jb
add
push
or
imull
sub
jbe
cmp
std
jno
mov
iret
mov
add
sbb
add
or
dec
adc
jns
or
fmuls
mov
and
and
adc
out
sub
ret
rcrb
cmp
mov
ficomps
ret
iret
scas
jne
out
lret
shl
sub
mov
subb
nop
lds
pusha
sbb
movb
pop
push
or
push
js
cs
inc
mov
sbb
ret
or
and
mov
stos
xor
mov
add
xchg
inc
and
adc
adc
scas
jge
pop
pop
cmpb
nop
xor
inc
cwtl
hlt
or
add
mov
ror
andps
roll
or
test
test
lea
mov
and
or
add
das
stc
ja
add
mov
fidivrl
fwait
lret
sbb
push
sub
flds
mov
add
and
mov
adc
adc
add
imul
add
mov
data16
aad
xchg
jo
add
mov
add
loop
in
push
adc
out
xor
test
es
dec
add
pop
shlb
or
mov
cmpb
and
push
mov
mov
xchg
sub
jnp
add
outsl
push
add
insb
xchg
inc
test
shrb
jb
add
add
mov
add
ljmp
sub
dec
push
push
ljmp
stos
adc
xlat
sub
add
sarb
add
sub
mov
insb
stc
decl
inc
and
or
pop
and
mov
adc
fistpl
inc
or
loope
daa
clc
jle
add
and
adc
jmp
xchg
sub
pop
rorl
push
loopne
mov
test
in
jo
push
dec
adc
daa
loopne
dec
into
add
push
jp
aam
sarl
lea
pop
push
pop
xchg
sbb
stos
mov
movsb
cmp
ss
inc
or
jns
and
hlt
cmp
push
cmp
ja
mov
jns
xchg
cltd
int3
and
mov
mov
lret
mov
or
jb
out
adc
inc
add
mov
sbb
add
das
in
xor
gs
sarl
loope
adcl
sub
dec
add
add
add
ret
or
jp
dec
mov
dec
pushf
cs
out
jae
mov
pop
loopne
pop
jl
mov
sahf
add
or
xor
and
add
fcomi
push
mov
shll
add
pusha
shl
push
dec
mov
pop
stc
and
adc
fwait
shlb
sub
mov
jno
cld
mov
fs
xor
iret
pushf
and
sub
in
mov
test
inc
jecxz
loop,pt
or
cmp
cmp
movlps
into
inc
insl
movsb
sbbb
xor
dec
cmp
inc
mov
fisttps
add
movsb
icebp
push
pop
add
outsl
dec
pop
js
daa
adc
out
in
out
dec
clc
push
adc
xchg
fdivr
jp
xor
jg
mov
sti
mov
dec
scas
add
pushf
loop
add
jne
or
icebp
sub
sbbb
scas
mov
iret
test
pusha
in
xor
enter
dec
add
movsl
insb
faddl
in
xchg
shlb
js
nop
js
mov
mov
test
adc
lods
movsb
mov
and
mov
adc
addl
or
pop
jl
add
iret
add
pushf
xchg
je
je
pusha
fiadds
in
shlb
in
cmp
imul
dec
xorb
add
push
mov
sbbb
out
das
ljmp
pop
aad
shr
pop
or
or
and
mov
fdivr
lcall
adc
pop
sbb
sub
mov
or
cmp
lods
mov
jle
xor
add
add
bnd
aas
aam
rolb
dec
xchg
nop
sub
mov
xchg
loopne
xchg
add
jb
add
pop
fsts
xor
push
jmp
pop
or
pusha
dec
test
roll
and
cmp
out
dec
and
lret
sbb
mov
pop
pop
movsb
cli
jb
and
jo
cmpsb
ds
dec
jmp
scas
mov
mov
add
mov
iret
sbb
cld
stos
inc
or
aaa
out
ret
daa
inc
mov
enter
in
sar
out
jecxz
or
mul
movb
xchg
imul
cmpsw
xchg
or
les
stc
xor
mov
push
lock
mov
push
adc
mov
pop
rorl
andb
cmc
cmpsb
pop
jbe
add
ss
in
mov
rcl
sbb
mov
int3
add
jne
dec
sub
pop
loop
and
int3
dec
adc
fcmovu
or
mov
std
push
xchg
out
add
iret
cmp
pop
pop
inc
pop
sub
cmc
adc
adc
bndldx
xchg
mov
addr16
fwait
pusha
add
sbb
pusha
cwtl
movsl
ja
pop
jo
cwtl
add
bound
xchg
adc
mov
fs
push
or
xchg
add
mov
mov
add
mov
sbb
clc
add
test
cmp
out
sub
inc
mov
adc
mov
rcll
adc
dec
enter
add
xchg
ret
addr16
push
shl
repnz
les
addb
rclb
movsb
cwtl
nop
add
pop
and
sahf
in
movsl
fwait
inc
jmp
cs
outsl
scas
push
shlb
add
sub
stos
xor
mov
and
lret
addl
and
and
fs
fwait
add
orb
inc
xlat
sub
jge
add
sbb
les
add
mov
cs
xchg
or
mov
add
cmp
arpl
mov
cmp
inc
add
push
pop
in
jp
int
test
cmp
xor
lret
mov
cwtl
aam
dec
push
aam
jg
inc
xlat
mov
mov
scas
cmp
pop
in
aad
adcb
mov
mov
pop
ret
repnz
mov
sub
xchg
inc
cmp
popf
pop
push
aaa
add
test
fisubrs
xchg
insb
fldt
addl
insl
mov
or
rorl
xchg
push
and
cltd
mov
pop
es
cld
cmp
test
adc
pop
inc
sahf
call
sbb
loope
or
rorl
pop
pop
enter
jae
test
outsb
dec
mov
mov
imul
and
repnz
adc
lret
leave
mov
adc
add
fimuls
clc
paddusb
rcrb
adcb
in
xor
pop
add
inc
xchg
cmp
dec
shrl
loopne
inc
xor
leave
mov
test
sbb
mov
and
mov
pusha
jns
jns
inc
shll
and
rcll
inc
adc
or
movsl
out
adc
jo
push
jge
or
pop
mov
or
negb
push
sub
imul
sbb
pop
xchg
test
movsb
cs
dec
adc
or
es
rolb
or
dec
imul
sbb
add
pop
mov
dec
push
jns
lds
popa
cmp
inc
or
pop
mov
imul
xor
cmpb
lods
jge
push
pop
aaa
or
daa
adc
add
lret
cld
test
lds
in
ja
daa
je
mov
sub
pop
xchg
mov
pusha
xor
fldt
rcr
or
xor
push
cmp
fnstenv
rolb
xchg
daa
rorb
jl
or
bound
jle
dec
pop
mov
js
fdivrl
mov
int3
aad
rolb
dec
enter
dec
fcoml
js
cmp
add
sbb
jae
cmp
xchg
mov
push
or
mov
gs
inc
mov
sbb
add
pop
mov
loopne
mov
xor
sahf
pop
aad
mov
add
mov
shrb
xchg
dec
cmp
mov
pushf
add
jl
fimull
and
out
xor
test
dec
std
mov
and
sbb
dec
add
lock
leave
mov
add
push
or
popf
dec
add
xor
jle
sub
insl
jmp
and
enter
jmp
lds
xchg
cmp
test
cmp
dec
dec
mov
sbb
xor
movsb
cmp
es
test
jo
mov
dec
jmp
dec
mov
xchg
cmp
fidivl
adc
push
sub
xor
jle
in
out
cmp
inc
cmp
or
jl
jge
adc
pop
push
movsb
dec
loopne
pop
or
adc
jmp
movsl
inc
or
je
ret
cmp
dec
add
lret
std
sub
sub
repnz
outsb
sarb
rcr
daa
sub
mov
call
push
enter
add
adc
insb
daa
mov
scas
or
mov
in
push
dec
cltd
xchg
call
sub
dec
out
push
sub
pop
add
cmp
add
xchg
les
adc
push
iret
or
je
into
mov
mov
sub
add
nop
jl
out
add
jmp
jae
add
subl
lock
xchg
mov
xor
in
arpl
mov
in
pushf
adc
rorb
inc
in
xor
xchg
push
xorb
and
fadds
fwait
mov
dec
into
test
movb
nop
cmp
sbb
aad
xor
jbe
sub
mov
mov
icebp
loope
add
call
add
or
add
cmp
ss
cmp
fcomps
shll
dec
enter
cmp
jnp
or
dec
pushf
inc
and
ljmp
test
add
out
xor
das
ret
aam
sbbb
push
in
adc
pop
dec
enter
cmp
scas
inc
aad
popf
loopne
add
sbb
xchg
mov
add
data16
lret
pop
pop
lods
dec
xor
pop
or
loop
xor
into
adcl
inc
jo
cld
mov
mov
jb
out
hlt
sbb
pop
mov
mov
lds
clc
inc
cmp
mov
clc
scas
add
fwait
xchg
pop
cmpsb
cltd
jo
and
mov
add
adc
push
sub
dec
insl
ljmp
xor
mov
jb
add
lret
mov
mov
mov
xor
dec
add
or
inc
lea
jmp
add
shrb
push
mov
xchg
adc
mov
fwait
js
inc
mov
dec
sbb
sbb
add
and
dec
aas
cmp
push
stos
fsubrs
jge
nop
and
cmpb
or
dec
ror
fisttpl
jecxz
loope
mov
adc
adc
shr
mov
je
sbbb
xchg
imul
add
add
and
pmuludq
fcoml
jl
inc
test
add
decl
push
das
adc
add
movsl
jo
adc
sbb
dec
in
and
ds
sub
lock
fsub
mov
adc
call
fst
add
nop
dec
push
adc
out
out
cmc
je
gs
dec
std
mov
rorb
out
jbe
add
cld
adc
add
xchg
ficomps
sbb
mov
movsb
lea
jge
pushf
loopne
cmc
loop
sub
or
add
sbb
daa
in
int3
dec
push
sbb
xchg
jo
dec
imull
rclb
add
mov
outsl
mov
or
into
cld
ljmp
test
int
jge
sarb
push
mov
data16
shlb
sahf
jo
sub
fs
pop
in
xchg
add
out
pop
jmp
push
cwtl
pop
lods
pushf
jo
add
dec
mov
ljmp
pop
jns
jnp
das
xor
adc
mulb
pop
nop
sbb
mov
cmp
inc
sbb
icebp
mov
inc
rcl
pop
push
in
push
clc
jo
mov
cli
shll
insl
fcmovne
add
pop
mov
rcll
pop
or
adc
js
fdivrs
cmp
lods
les
jp
faddl
dec
pop
mov
cs
push
dec
lock
loope
arpl
clc
and
cld
cs
in
les
mov
fdivs
jns
inc
cmp
mov
cmp
xchg
mov
xchg
inc
xor
and
loopne
int3
and
bts
adc
push
xchg
cmpsl
je
test
fwait
adc
imul
sbb
lods
or
inc
fdecstp
sbb
add
jns
lock
leave
mov
add
fsubl
push
inc
add
xchg
cld
jbe
jmp
xor
lods
jbe
call
mov
jnp
movl
xor
mov
into
mov
push
pop
in
rorb
mov
mov
outsl
stos
mov
jno
add
leave
lret
enter
push
loope
jp,pt
pop
gs
fcoml
add
nop
repz
lret
add
push
pusha
or
and
in
stos
sbbl
add
pusha
add
add
stos
movups
add
mov
mov
out
dec
dec
adc
xchg
fyl2x
sbb
jp
clc
popf
jge
or
or
mov
mov
inc
jl
add
sbb
imul
pop
adc
push
adc
shlb
test
clc
fldl
push
push
fwait
outsl
test
sub
dec
jge
mov
cs
mov
inc
into
jl
loopne
call
and
inc
jae
and
sbb
test
gs
jo
test
movsb
rclb
mov
lock
add
cmp
jmp
mov
stos
dec
out
xchg
cmp
push
fdivrl
sub
push
jno
int3
fs
out
adc
fisttpl
lock
es
enter
jp
inc
add
adc
outsb
mov
pop
mov
xor
and
test
ljmp
adc
jnp
dec
fisubrl
and
aad
and
xor
sbbb
in
add
add
mov
adc
into
or
in
mov
mov
mov
pop
jmp
xchg
jp
imul
jo
or
adc
mov
dec
test
imul
jge
rclb
les
aam
jns
cmpsl
fs
sub
cwtl
sbb
and
lds
sub
sub
add
cmp
xor
nop
or
inc
push
push
lahf
outsb
xchg
jl
and
xchg
add
jg
mov
fnstenv
gs
mov
dec
mov
push
mov
popa
cmpl
shll
nop
adc
mov
pop
push
fcoms
loop
clc
mov
jmp
repnz
add
jecxz
sub
fistpl
loop
arpl
jno
hlt
add
and
pusha
push
adc
add
frstpm(287
mov
loopne
ret
jmp
ja
les
popa
xchg
push
nop
movsb
adc
inc
jo
mov
adc
cmp
sub
ret
int3
xchg
xchg
mov
mov
lret
loope
shrl
shlb
daa
flds
mov
or
test
int3
xchg
dec
mov
cmp
xchg
mov
mov
les
inc
test
and
push
aam
pop
lcall
add
pop
cmp
std
jno
lds
cmp
adc
aaa
pop
inc
push
sbb
aad
xchg
push
and
adc
mov
mov
sbb
inc
test
out
cwtl
xor
sub
mov
mov
pop
xchg
insb
mov
out
push
or
xchg
cltd
repnz
call
or
sub
xchg
adcb
push
and
cltd
xor
push
in
add
inc
add
mov
lds
sub
sbb
inc
jnp
and
scas
sbb
pop
push
dec
aam
js
add
ret
pop
and
mov
dec
inc
xlat
stc
sbb
jo
add
add
mov
dec
into
fstl
and
rolb
call
js
cmpsl
insb
shll
roll
rolb
add
test
clc
sub
mov
adc
cwtl
rorb
and
jb
pop
mov
or
sub
gs
dec
push
mov
pop
aam
pushf
inc
testl
mov
mov
call
jne
add
sti
cwtl
sub
repnz
and
gs
xor
adc
xor
mov
and
adc
mov
jge
push
add
push
add
fistps
daa
push
add
fnstsw
mov
cmp
push
cmp
les
sar
rol
das
sbbb
call
mov
inc
add
jbe
cmp
data16
clc
je
sbb
loopne
push
shll
add
popa
inc
inc
mov
push
pusha
inc
mov
jecxz
loopne
call
in
orb
fsts
cwtl
fsubl
dec
xorl
xchg
out
sbb
xchg
adc
or
das
mov
orl
mov
js
clc
xor
inc
sbb
inc
mov
nop
add
fidivl
cmp
jbe
dec
add
sti
jg
xchg
sub
mov
cmp
sub
mov
stos
fiadds
xchg
pop
repz
inc
push
xchg
jnp
xchg
sub
repnz
out
fcomi
lods
mov
push
and
xlat
xchg
jnp
insl
add
fildl
movsb
repz
sub
addb
clc
dec
or
movsb
add
clc
dec
pushf
push
mov
add
ds
out
pop
in
mov
insl
mov
cmc
xchg
cmp
jecxz
je
nop
roll
pushf
push
inc
test
hlt
pop
dec
enter
fcompl
test
outsb
stc
sub
sbb
mov
mov
dec
xor
insb
gs
mov
and
je
and
add
lahf
push
cmp
xor
cmp
repnz
addb
jge
jbe
add
insl
imul
dec
outsl
shlb
and
clc
test
and
pusha
fsubr
and
ror
xchg
dec
test
js
mov
add
test
jmp
shlb
pop
sub
pusha
repnz
jp
xor
mov
add
or
jbe
adc
xor
sbb
mov
mov
sahf
mov
lahf
enter
pop
fucomp
sbb
in
cld
test
or
sub
sub
xor
adc
scas
fyl2xp1
xchg
movsl
les
add
outsb
scas
mov
scas
nop
hlt
jno
sbb
adc
pop
and
add
popf
sub
hlt
sbb
insl
rcll
sub
fdivrl
mov
or
and
and
cmp
inc
jge
fnstcw
xor
adc
and
jge
mov
sbb
add
in
lods
or
jae
mov
xchg
mov
sub
fadd
mov
cmp
jno
popa
insl
adcb
jg
mov
mov
add
sub
loopne
jg
lret
mov
jle
pushf
ja
lret
mov
jl
mov
push
and
fisubrl
jno
dec
xor
les
or
addl
mov
fdivs
jp
sar
fildll
mov
repz
in
add
pop
lea
mov
pop
add
xchg
fmull
cmp
insb
data16
sub
lret
or
fstps
fisttpll
adc
inc
add
sarb
mov
add
lret
stc
sub
test
cwtl
jle
imul
sar
rorb
and
inc
movsl
lods
dec
pop
outsl
js
lods
loopne
add
mov
in
add
sbbl
push
aam
pop
pusha
cmp
inc
add
inc
or
push
cwtl
mov
cmp
add
and
push
xchg
stos
hlt
adc
add
ret
dec
test
add
outsl
gs
aam
pusha
cs
jl
fs
fxch
cmp
adc
and
dec
cwtl
add
or
sbb
repnz
cmpsl
or
div
push
inc
or
add
and
push
add
or
int3
adc
imul
jp
out
mov
push
inc
cmp
push
and
pusha
mov
adc
pop
xchg
shrl
das
lods
or
lds
adc
out
jae
das
mov
add
jnp
xor
or
dec
mov
mov
jp
cmp
add
pushf
dec
lea
mov
repnz
and
dec
and
lods
imul
aam
test
int3
add
adcb
and
xlat
gs
punpckhdq
lods
cmpb
imul
mov
jo
sub
cld
dec
sbb
xchg
push
sub
and
data16
enter
and
fcoml
mov
jo
sbb
gs
hlt
mov
loopne
cli
in
jae
rolb
repnz
push
scas
or
and
adcb
add
pop
fsubrs
and
dec
mov
unpcklps
in
loopne
pop
lds
orb
adc
inc
sub
mov
push
cwtl
cwtl
pop
cmp
repnz
xor
add
testb
test
mov
mov
sbb
xlat
bound
mov
sbb
enter
mov
mov
dec
repnz
adc
nop
lods
xor
sbb
dec
ret
mov
push
sbbl
inc
call
ljmp
xchg
or
jnp
rclb
sbb
xor
adc
push
dec
add
sub
and
out
add
xor
xlat
xchg
cld
or
pop
mov
call
sub
lock
rep
adc
mov
daa
aas
or
dec
dec
mov
add
out
sub
andb
inc
int3
les
imulb
cmpsb
sbb
add
or
pusha
aas
xchg
cmp
lods
xchg
ljmp
mov
mov
out
hlt
sbb
int3
scas
je
nop
add
fldt
rolb
add
fucomi
test
int3
add
and
jp
cld
push
adc
and
and
fcompl
mov
adc
push
lods
repnz
jle
test
add
push
jns
sahf
adc
xor
rol
fwait
push
cmp
jmp
or
nop
ja
and
xor
add
sbb
cmp
mov
aas
mov
push
jge
addr16
cmp
mov
pop
lret
cmp
mov
add
pusha
loopne
push
jo
adc
lahf
mov
testl
inc
jge
mov
xor
jne
adc
aas
add
add
jmp
shll
xchg
int3
out
mov
adc
or
mov
movsb
add
xchg
add
pusha
and
data16
test
inc
lock
push
mov
nop
mov
hlt
ret
add
push
mov
sbb
loop
shlb
cmp
fwait
mov
push
lods
js
rorl
lods
lret
dec
mov
or
dec
adcb
outsb
and
lds
add
int3
push
loop
sbb
decl
test
xor
add
testb
mov
inc
dec
xorb
stc
movsb
xlat
lea
in
add
push
scas
decl
movsl
stos
inc
mov
cmp
and
cmp
test
mov
gs
shlb
add
adc
adc
jecxz
mov
sbb
mov
mov
pop
push
and
add
and
adc
test
push
enter
fwait
cmc
dec
mov
mov
push
scas
loope
jg
cwtl
hlt
cmpsb
js
push
testl
mov
lock
sub
lods
fldenv
mov
dec
mov
movsb
leave
test
pop
and
shl
lock
and
xchg
add
add
clc
les
rcl
loopne
add
es
insb
sbb
push
fsubl
nop
call
cmp
pusha
shr
hlt
lahf
movzbl
mov
inc
or
and
push
or
xor
stos
jo
jle
add
adc
inc
add
in
mov
cmp
jb
jns
or
scas
shll
divl
pop
mov
adc
add
adc
xchg
push
int
or
ja
je
mov
imul
ret
and
add
out
test
xor
pop
xchg
adc
hlt
ljmp
ret
leave
cmp
add
andl
aad
push
test
paddsb
add
subl
test
loopne
mov
test
mov
add
fdivs
add
cmp
fs
call
push
and
jb
jbe
or
in
outsb
jae
add
sahf
push
imul
add
shlb
adc
rol
adc
mov
xor
loopne
adc
lods
fcmovnu
inc
dec
adc
movsb
add
mov
dec
shl
fnstenv
addl
adc
scas
test
mov
xor
clc
pop
fcomps
pop
arpl
add
jmp
or
insl
lock
rcrl
das
gs
sbb
mov
xor
xchg
sbb
xor
jns
cwtl
cmp
inc
fs
dec
dec
jno
dec
mov
add
unpcklps
or
jle
popa
movsb
in
out
push
mov
inc
push
mov
and
add
test
add
pop
sbb
mov
jge
add
adc
loop
mov
loopne
add
es
xchg
and
or
jo
push
add
in
out
pop
and
loop
je
pushf
sub
cmp
stc
test
shrb
mov
mov
pop
mov
mov
push
in
sub
mov
out
pop
inc
mov
cwtl
or
add
push
ds
push
daa
aam
xchg
add
jmp
in
sti
scas
ds
inc
lods
lds
xchg
cmc
inc
push
pop
jo
in
or
movsl
cmpsb
add
loop
and
arpl
insl
cmp
add
lods
mov
in
cmp
and
sub
sbb
inc
add
lret
cmp
xchg
sub
mov
mov
sarb
push
sbb
data16
stc
daa
xchg
jno
sahf
mov
shrb
jg
daa
jecxz
xlat
js
or
sarl
in
pusha
nop
call
add
rclb
jg
inc
jo
add
mov
bound
xor
lock
mov
lret
pusha
test
push
enter
xor
mov
pusha
mov
test
cld
push
int
add
mov
lret
scas
mov
loopne
lods
les
loope
std
insb
add
mov
add
mov
mov
fprem
add
mov
mov
cld
and
or
inc
sbb
into
adc
or
or
cmp
xlat
bound
inc
aaa
and
lds
lret
xchg
sar
out
pop
mov
cmpb
sbb
arpl
sahf
mov
in
xor
mov
nop
xchg
mov
push
add
and
aaa
jb
cwtl
adc
pop
mov
in
fidivrs
adc
add
mov
cltd
pop
and
jmp
xor
add
shll
adcb
jnp
mov
inc
mov
rol
pop
insb
ja
inc
inc
or
sub
jno
adc
mov
shlb
test
or
xchg
cwtl
test
imul
jb
push
inc
and
pop
cmpsb
dec
jg
cmp
icebp
int3
fildl
jo
mov
adc
call
push
out
xchg
movb
lcall
mov
je
pop
and
in
jo,pn
mov
push
jns
add
sti
or
fdivs
inc
in
add
sti
pop
pushf
cmp
push
data16
je
inc
dec
sbb
add
rcll
lods
cmp
and
jecxz
cmp
cld
xorl
shr
mov
dec
add
bound
call
or
add
inc
push
jno
ljmp
add
push
mov
movsb
mov
in
mov
jae
arpl
stos
outsb
lea
xchg
jb
pop
gs
je
mov
mov
pop
xor
push
add
shl
xchg
mov
xor
pop
int3
divb
add
movsb
add
jmp
scas
or
test
jle
pusha
repnz
out
push
decl
loopne
insl
mov
sbb
mov
imul
insb
adc
mov
cmp
scas
inc
inc
ret
sbb
je
or
inc
into
xor
sub
test
out
mov
loopne
adc
jbe
adc
lock
xchg
pop
pop
fistl
mov
adc
jae
dec
into
ljmp
test
call
inc
es
sub
jnp
leave
ljmp
sti
pop
daa
push
pop
add
jne
xor
and
iret
dec
and
jbe
inc
ret
dec
or
pop
inc
imul
lret
leave
push
or
clc
inc
dec
pop
loopne
dec
push
loopne
aam
iret
outsl
pop
and
jl
out
les
inc
aaa
mov
pop
sbb
xchg
add
hlt
lods
push
dec
fcom
leave
pop
or
add
pop
loop
in
cmp
inc
jecxz
outsb
sub
mov
hlt
dec
das
pop
pop
jnp
jb
and
sbb
push
add
idivb
inc
addb
cld
call
inc
ret
dec
fcoms
sub
js
mov
call
and
cmp
in
sub
mov
or
push
mov
xor
lahf
bound
pop
jbe
mov
loopne
cmpsb
shlb
cwtl
add
int3
pop
or
and
mov
add
scas
sbb
xor
mov
test
fmull
aad
xchg
cs
stc
das
fnsave
lods
add
jle
cmp
jge
ror
dec
inc
push
cmp
faddl
cmp
adc
sub
aas
ds
pop
in
outsb
loop
xorl
insl
cmpb
dec
add
pushf
mov
cwtl
in
inc
cmp
jle
arpl
js
mov
lods
ss
jl
pop
das
lods
js
rclb
sbb
repnz
and
xor
movsl
mov
cmc
pushf
adc
inc
adc
cmpb
in
add
xchg
xchg
les
pop
add
xor
incb
into
ret
xor
and
test
inc
cmp
popa
jge
jae
add
inc
mov
mov
mov
jge
jb
pop
xchg
mov
and
shl
js
xchg
inc
mov
icebp
jno
push
cmp
jnp
test
lock
adc
js
push
aam
mov
adc
lret
aam
cmp
cmpsb
adc
dec
add
ret
xchg
lock
pop
sbb
ss
jo
in
and
test
mov
jno
les
push
add
xorl
add
outsb
out
in
and
adc
cmp
add
dec
mov
inc
push
imul
mov
jl
aam
cmp
jnp
daa
ljmp
rcll
je
inc
fwait
pop
add
push
fimuls
js
jo
or
js
cltd
mov
outsb
inc
add
jmp
adc
mov
clc
adc
adc
pop
addr16
stc
and
adc
cwtl
add
pop
dec
pop
jb
leave
sbb
add
xor
pop
insb
and
andl
sar
popf
nop
adc
add
sub
aam
mov
fidivrs
sbb
dec
lods
inc
jo
pop
and
adc
test
or
das
cwtl
addb
mov
fdivrl
fsubs
pop
lea
pushf
cltd
in
push
ret
rcr
in
and
sahf
loopne
add
enter
fistl
cmp
mov
pop
popa
pop
add
fisubrs
rcrb
push
sub
or
push
or
in
mov
idivl
mov
add
and
cmp
or
in
lret
outsl
xchg
add
jmp
cmp
inc
xor
and
ljmp
ds
xchg
pusha
add
and
testl
pop
icebp
pop
pop
jae
lret
outsb
mov
daa
out
jl
rorl
adc
call
add
push
xchg
pop
sarb
jno
and
in
xchg
jae
mov
fildl
idivl
pop
push
je
aam
int
and
mov
cmp
or
orl
fidivl
cmpsb
mov
pop
pop
loopne
fsubs
mov
mov
dec
adc
aad
or
add
xor
adc
dec
pushf
add
cmc
sbb
insb
mov
out
inc
cmp
std
stos
outsb
add
sti
fcmovb
pop
call
andb
in
sub
add
mov
lcall
pop
dec
add
push
push
fcoms
cwtl
or
pop
pushf
cli
into
repz
out
push
repnz
add
adc
lret
out
mov
add
add
push
es
fimuls
xchg
not
sub
fcoml
dec
add
test
or
lods
enter
in
mov
or
push
xor
mov
mov
adc
xor
scas
add
xor
mov
inc
loopne
push
mov
call
and
inc
ret
std
pop
push
sbb
push
popf
adc
jge
dec
rolb
loopne
les
jnp
cmpsl
cmp
stc
mov
outsl
enter
pop
lret
xchg
adc
bound
lods
mov
xor
out
ret
in
dec
sub
hlt
add
pop
negl
and
push
popf
mov
xlat
or
adc
add
add
das
in
pop
aam
movl
int
clc
insb
push
fs
push
add
xor
cmpsl
inc
pop
mov
test
mov
mov
sub
and
push
sub
enter
nop
mov
adc
andb
add
bound
sbb
jno
cmp
pop
fdivrs
ret
imul
xor
cld
pusha
mov
cwtl
adc
jge
test
push
cld
gs
mov
adc
xchg
mov
stos
or
or
test
clc
cwtl
test
dec
sbb
dec
movl
cmp
sar
push
mov
addl
jo
sbb
mov
les
pusha
pusha
mov
push
nop
movsl
nop
pop
mov
mov
and
jl
mov
cmp
xorb
cli
stos
or
xor
gs
and
fistpl
sub
mov
adc
testb
mov
in
rorb
sbb
dec
mov
subb
jmp
pushf
je
sub
jo
add
and
aad
clc
sub
sbb
xchg
lods
loopne
add
and
test
subb
add
xor
shl
ret
stos
push
pop
jp
push
negl
cmp
bound
inc
ljmp
add
fidivs
xor
test
push
int3
outsb
test
sub
adc
dec
test
jbe
mov
or
pushw
jmp
out
add
xor
cwtl
sbb
jae
nop
lock
dec
mov
out
clc
lods
push
rclb
mov
jmp
jno
jl
add
mov
add
mov
test
cmp
adc
cmp
or
aaa
outsl
sarl
sbb
inc
fcomps
sub
std
leave
or
inc
ret
adc
add
cmp
fs
jbe
mov
push
pop
add
mov
cmp
mov
jbe
icebp
cmp
or
or
add
in
push
aaa
adc
and
sub
add
std
out
pop
in
xor
mov
mov
push
mov
loopne
in
xchg
or
mov
and
lods
jnp
mov
add
push
clc
sbb
pushf
push
add
jno
fadds
mov
movsb
dec
imul
or
test
mov
add
mov
cmp
xorl
addb
or
ret
lcall
add
rcrb
adc
fwait
testl
inc
or
cmc
mov
fsubrl
in
push
mov
add
xchg
popf
push
push
inc
sub
inc
inc
sub
inc
test
cmp
outsl
xor
push
add
cwtl
js
out
sub
in
fcmovnb
loope
inc
sbb
mov
add
jbe
sub
inc
hlt
lea
aam
inc
xchg
test
mov
insb
aad
adc
push
or
enter
mov
or
sbb
jmp
fcoms
xlat
adc
add
mov
mov
xor
int3
loopne
mov
inc
call
mov
add
in
dec
in
pusha
dec
in
jbe
or
jb
jns
js
test
inc
and
or
inc
aad
imul
pusha
jmp
mov
xchg
test
test
bound
push
xchg
inc
lret
mov
mov
inc
dec
adcl
dec
dec
test
cwtl
xchg
dec
in
rorb
push
adc
and
cld
pop
push
nop
orb
je
mov
pop
sbb
xor
dec
xor
rcrl
sbb
mov
mov
xchg
add
add
pop
bnd
das
ja
push
mov
cli
mov
mov
ror
add
lahf
mov
loop
xchg
clc
sti
add
les
sbb
aad
mov
xor
jl
scas
or
int3
outsl
sbb
jmp
hlt
loope
add
or
push
jbe
sub
imul
repz
add
addl
and
mull
icebp
clc
add
and
and
fisubl
lods
jmp
hlt
or
mov
ret
or
out
add
in
cld
and
sub
sub
inc
push
sbb
imulb
int3
sbb
cmp
dec
inc
jne
push
jle
inc
shlb
sbb
enter
outsb
addl
lods
add
movsl
lock
cmp
jl
xchg
andb
jmp
cmp
xchg
nop
fdivl
adcb
cmp
ljmp
add
pop
fadds
rclb
or
cmp
cld
pop
push
dec
fdivl
add
and
or
test
orb
pop
push
inc
xor
inc
inc
sub
mov
kmovb
inc
dec
gs
mov
mov
sbb
xchg
add
jns
add
or
cmp
enter
or
mov
adc
add
inc
imul
out
and
inc
lock
les
ret
iret
addr16
add
mov
daa
dec
popa
subl
sbbb
mov
test
imul
add
xchg
jl
push
xchg
jge
lea
data16
cltd
call
aaa
dec
test
sub
clc
addr16
std
add
inc
icebp
jae
add
fs
mov
mov
in
xor
or
lea
scas
xlat
pop
jmp
addr16
xchg
bnd
sbbl
or
mov
clc
daa
fistl
adc
fs
mov
add
cmpsl
or
inc
mov
popf
inc
movsb
add
lret
mov
cltd
add
jecxz
xchg
clc
shll
aad
lahf
sbb
add
and
or
add
loope
loop
int
dec
call
sub
and
mov
sbb
addr16
mov
leave
add
bound
xchg
in
inc
in
sbb
jge
push
mov
add
mov
lock
mov
push
and
ret
mov
jno
orb
js
pop
imul
mov
stc
mov
pusha
pop
push
cmp
test
push
mov
orb
fwait
xlat
les
sbb
daa
int
ja
test
stos
pusha
dec
movsl
push
inc
in
adc
xchg
std
jo
sub
sbb
int3
jno
mov
orl
add
and
cmpsb
jb
cmp
jo
rolb
mov
dec
pusha
test
addb
inc
sbb
dec
xor
movl
loope
inc
adc
or
pop
mov
and
cld
in
and
mov
dec
ss
push
leave
hlt
dec
jno
mov
push
lds
add
fisubl
sbb
sbb
mov
sbb
add
popa
push
bound
insl
dec
icebp
and
inc
mov
into
dec
push
push
ret
outsb
addl
scas
add
lret
jmp
test
jecxz
pop
mov
push
int
fidivs
add
jns
add
add
lret
scas
or
add
stos
rcll
mov
add
fwait
addb
sarb
mov
sub
xchg
mov
add
or
pop
push
adc
and
and
cld
inc
mov
sub
sbb
ret
mov
add
std
inc
and
in
subl
dec
nop
leave
sbb
xchg
xor
call
aas
inc
xchg
mov
imul
xor
popf
movsb
push
push
inc
jns
cmp
push
icebp
movsl
mov
and
test
sbb
inc
rcr
nop
mov
sbb
and
hlt
ret
add
pop
xor
jae
adc
stc
pop
int3
or
inc
jno
data16
xor
dec
and
icebp
mov
imul
adc
sbb
sbbb
imul
orb
inc
ficoml
pushf
leave
imul
fdivp
pusha
mov
sbb
aaa
pop
push
cld
and
mov
cmpsb
xchg
cwtl
sti
dec
cmp
subb
jo
mov
mov
jl
in
cmp
pusha
lea
sub
mov
loop
xor
js
add
idivl
repz
pop
dec
nop
mov
or
dec
xchg
xchg
sbb
cmp
sub
mov
dec
dec
in
mov
dec
add
jb
mov
dec
mov
mov
out
add
sub
add
add
xor
lds
dec
mov
mov
arpl
sbb
push
pusha
sbb
scas
dec
je
bound
and
lea
arpl
dec
jl
add
movsl
mov
push
hlt
das
pop
or
scas
and
mov
add
or
shlb
and
mov
add
xchg
ret
icebp
loope
mov
cmpsb
cmp
out
pushl
push
push
insl
sub
and
leave
int3
adc
enter
inc
adc
dec
ret
xchg
lahf
adc
or
stos
sbb
adc
dec
push
daa
jnp
mov
lods
mov
sarb
or
cli
movsb
ret
repnz
or
repnz
ror
lahf
push
dec
or
test
and
or
mov
lds
jne
mov
adc
clc
shlb
fs
loopne
cwtl
xchg
icebp
and
lds
in
sbb
in
add
add
inc
orb
jne
mov
adc
or
dec
adc
dec
lret
sbb
push
xchg
add
mov
loope
mov
inc
movsb
adc
in
or
shl
adc
adc
inc
and
scas
cmpsb
push
dec
push
movsl
es
sub
xor
pop
loope
scas
orl
jno
dec
shl
pop
xor
in
pusha
mov
inc
push
loope
add
adc
adc
sahf
lods
mov
xchg
xor
jnp
add
cli
out
xor
xor
cmp
and
lock
mov
test
mov
fcmovnbe
syscall
repnz
cmp
adc
mov
cmp
xchg
fnstsw
insl
xor
cs
int3
jecxz
loop
jo
cs
xchg
cmp
movsb
cmp
test
add
push
lea
in
add
inc
test
and
pop
or
pop
test
or
sbb
add
mov
pop
adc
loop
je
rclb
dec
jae
js
inc
aam
leave
inc
add
or
pop
sahf
push
stos
enter
fidivl
negb
inc
stc
mov
aad
add
pop
out
out
pop
js
in
dec
cmp
pusha
mov
adc
push
andb
cs
sub
cltd
cmp
lock
push
add
and
fadds
cmp
je
in
cwtl
and
repz
and
cmpb
and
push
sbb
repnz
and
pop
roll
dec
stos
ja
jo
mov
movsb
or
xor
repnz
and
aas
rclb
ret
les
add
cmpsb
dec
jp
sub
int3
sbb
ret
mov
test
xor
jo
pushf
outsb
push
cmp
out
add
add
push
or
jns
cltd
mov
outsb
add
push
adc
inc
fnstcw
push
pusha
icebp
inc
push
cmp
add
mov
or
arpl
loope
sub
cmp
push
xchg
add
inc
scas
subb
loop
or
xor
imul
mov
jecxz
mov
add
mov
mov
adc
fisubrs
mov
ds
into
pop
pop
mov
addr16
and
leave
cmp
or
lock
test
rorl
jns
dec
cmp
sub
adc
adc
push
or
std
lods
cmp
sbbb
sbb
push
lock
pop
add
push
or
imul
jbe
pop
lcall
inc
add
xchg
xor
mov
add
or
setge
cmp
outsl
mov
adc
push
xor
sub
pusha
jno
mov
jecxz
pusha
cmp
xchg
into
sub
xor
xor
mov
icebp
sub
rcl
shl
push
stc
fdivr
lahf
add
jns
mov
or
pusha
xchg
ret
sub
movsl
sub
dec
addb
rcr
and
sub
ret
shrl
testl
enter
jae
mov
bound
sbb
rorl
lods
or
fnstsw
cmp
and
and
enter
rolb
scas
in
lods
idiv
dec
ret
xchg
cmpsl
mov
out
cmp
sahf
add
pop
mov
lods
pop
sbb
add
push
repnz
xor
xchg
add
arpl
sub
dec
cmp
inc
cwtl
lods
outsb
and
inc
add
movsl
mov
add
sbb
or
push
pop
add
dec
push
aas
add
test
sub
adc
push
inc
or
cmp
xchg
pop
xor
loope
mov
push
mov
inc
mov
adc
xchg
sbbl
or
sub
add
lods
inc
aas
inc
fs
enter
out
pusha
and
imul
mov
arpl
daa
mov
add
mov
adc
pop
jae
mov
test
mov
jns
inc
cmpsl
aad
test
fiaddl
pop
cmpsb
bound
lcall
inc
xchg
adc
dec
in
mov
cwtl
jbe
sub
fwait
xchg
jle
in
stos
push
or
cmc
add
jmp
clc
fisubrs
xor
aam
xchg
test
test
inc
adc
cmp
popl
or
bnd
cld
add
inc
mov
sbb
jno
and
cwtl
push
add
in
mov
cmp
inc
and
sub
cs
imul
sub
push
fwait
xor
mov
lds
lds
test
adc
add
and
sub
cmc
jae
and
sbb
repnz
add
adcb
mov
pop
loope
lret
or
rorb
and
ret
andb
cmp
mov
icebp
pop
test
jl
mov
jae
lret
jns
pop
add
dec
mov
nop
and
dec
icebp
int3
cmpb
loopne
mov
andb
pushf
in
push
add
ret
pop
add
mov
testb
xor
pop
dec
ret
addr16
pusha
mov
dec
push
add
rolb
add
pushf
sti
mov
mov
fcoml
mov
enter
and
movsb
jl
pop
cwtl
cmpsb
push
xor
leave
add
ret
xchg
adcl
xchg
aaa
in
popf
inc
rorl
scas
mov
stos
add
sarb
inc
push
or
inc
in
jb
test
and
push
rcrb
and
mov
inc
push
mov
or
adc
push
xchg
pop
cmp
inc
push
addr16
pushf
subb
test
or
mov
add
adc
scas
sbbl
inc
pop
nop
and
and
repnz
jge
scas
insb
inc
or
or
insb
lods
ret
add
adc
lret
adc
imul
or
jno
rolb
or
mov
mov
or
sbb
add
jg
mov
and
add
outsl
mov
callw
xchg
add
xchg
or
repnz
push
int3
test
cmp
add
pop
add
call
sbb
adc
loop
in
lds
mov
adc
dec
or
arpl
fsubrs
es
je
mov
dec
and
jmp
sub
sub
addr16
mov
test
sub
add
insb
cmp
sbb
rolb
fiaddl
sbb
out
add
jnp
fcmovu
clc
aam
sub
add
inc
push
adc
imul
inc
test
daa
fildl
lret
in
clc
js
or
iret
jmp
dec
leave
pushf
and
fs
daa
es
sub
xor
stc
inc
inc
mov
sar
rcrb
in
mov
sbbl
hlt
fwait
push
movsl
loopne
adc
test
lods
xchg
test
jno
dec
pop
test
pop
jb
add
loop
add
fidivl
xor
sbb
or
jo
adc
sub
mov
stc
and
push
mov
lret
ret
popa
loopne
pop
clc
push
dec
xor
cmpl
divl
sub
push
dec
jl
pop
mov
and
cmp
popa
popf
add
insb
outsb
cmp
mov
aam
lock
adc
cmc
inc
push
jns
and
stos
dec
push
out
aad
xchg
mov
sbb
mov
dec
dec
out
les
mov
xor
or
xchg
mov
out
enter
and
pop
incl
int3
add
inc
mov
add
mov
js
orb
add
sbb
popf
into
xlat
xor
cmp
cs
test
in
add
loopne
iret
pop
cmovs
std
fcompl
adc
adc
pusha
or
pop
and
dec
ljmp
push
ret
push
insl
mov
out
cmp
inc
dec
and
pop
mov
sbb
pop
add
cs
cmpl
push
int3
cwtl
dec
push
push
add
cltd
or
enter
dec
cmp
clc
dec
cmp
jnp
add
inc
mov
jge
push
int
f2xm1
mov
mov
cmp
adc
xlat
mov
stos
rol
nop
mov
int3
adc
mov
xchg
and
mov
icebp
jns
push
std
xchg
sbb
pushf
daa
pop
jge
or
xchg
adc
jecxz
pop
enter
es
popf
cmp
jbe
inc
add
lods
loope
popa
mov
jns
add
daa
mov
push
insl
int3
lods
and
or
nop
fwait
and
test
pop
in
inc
pushf
int3
cmp
push
xor
in
mov
mov
or
xor
pop
mov
add
pop
into
mov
pop
dec
dec
mov
inc
test
add
cmp
enter
seta
or
inc
adc
outsb
cs
push
es
ret
mov
lock
sbb
adc
popa
inc
loop
cmp
dec
add
sahf
pop
cmc
cltd
sub
adc
mov
add
je
jo
xchg
sbb
pop
dec
les
sbb
rolb
stos
repnz
dec
jno
dec
xchg
xorb
popa
mov
sbb
xor
filds
mov
sbb
pop
cmp
shrb
push
add
sbb
add
jb
das
dec
add
xor
lahf
pusha
lret
inc
int
icebp
imul
add
shlb
mov
rcrl
cmp
lahf
add
dec
frstor
mov
lret
and
clc
pushf
sub
add
mov
xchg
xor
popa
fmuls
ret
es
sub
mov
jecxz
popf
leave
ret
push
ljmp
sub
imul
out
ret
pop
scas
dec
add
lods
dec
test
mov
cmc
std
inc
push
roll
inc
loope
mov
fildll
rcr
aas
mov
and
cmpsl
sbb
push
fidivl
ds
cltd
or
mov
pusha
mov
inc
xchg
rcr
and
les
adc
inc
pop
add
ret
jmp
mov
pop
or
lcall
scas
cld
pusha
add
push
test
xor
aam
sahf
pushf
divl
adc
inc
cmp
sbb
icebp
hlt
mov
jge
add
sbb
xchg
in
loopne
aam
and
mov
punpckhwd
mov
add
rorb
mov
mov
xchg
add
adc
jnp
icebp
int3
and
adcb
jno
je
loop
fnstenv
dec
sahf
rcrl
bound
jle
xchg
jo
aam
mov
ficompl
hlt
push
pop
push
jne
add
insb
pop
nop
cmp
shlb
mov
push
xchg
movsb
fwait
dec
add
or
lods
std
icebp
xchg
and
or
or
ret
lock
sbb
scas
sbb
call
xchg
dec
test
push
inc
add
sub
aas
xchg
sarb
adc
inc
xor
into
push
std
xchg
cmp
daa
dec
add
or
fisubrl
idivl
add
adc
cli
fldl
sub
insb
ljmp
pop
cvtdq2ps
rol
mov
cs
mov
js
movsl
xor
mov
rolb
xor
pop
and
mov
add
add
aas
sub
adc
ficomps
or
mov
imul
mov
mov
cmp
cwtl
lods
pop
add
pop
jnp
sbb
outsl
leave
shl
and
add
mov
outsb
sbb
dec
push
mov
mov
sub
test
inc
mov
lods
jl
cs
mov
push
add
cltd
push
ja
push
add
leave
hlt
jo
cmpsb
and
jno
jl
dec
inc
add
adc
daa
jge
es
bound
fldcw
inc
ret
mov
push
roll
dec
xchg
and
les
adc
rolb
xchg
lret
aad
jno
add
inc
out
cmp
adcl
fadds
rol
imul
cmpb
add
jl
call
push
xchg
ja
ficompl
sub
mov
out
sub
std
addb
mov
stos
mov
pop
pop
in
dec
test
xchg
push
mov
dec
data16
daa
inc
movsl
hlt
jno
mov
inc
xchg
lret
aas
adc
stos
jbe
movsl
add
xchg
loopne
dec
jecxz
pushf
in
mov
arpl
mov
or
inc
shll
nop
les
aam
jle
fldl
lret
mov
shrl
inc
mov
incl
lock
push
adc
dec
and
cmp
sub
adc
add
dec
xor
lea
mov
out
cmp
xchg
adc
mov
pop
out
sub
pop
jne
jo
dec
mov
sub
add
add
mov
rolb
pop
add
ja
scas
adc
or
inc
mov
nop
test
test
ja
mov
fsubrl
xchg
addr16
adc
insb
enter
push
or
sbb
cwtl
dec
daa
jne
xchg
push
pop
pop
jo
sahf
je
pop
dec
pop
xchg
fwait
clc
adc
mov
mov
fidivl
pop
jns
sub
sub
jle
xchg
dec
nop
int3
xchg
xor
in
lret
mov
xor
andb
inc
mov
je
adc
xor
add
ljmp
add
fisttpll
push
lret
sbb
cmp
sbb
dec
xor
and
ds
push
xchg
mov
int
cltd
jge
and
daa
out
add
dec
pop
cs
lret
push
repnz
test
clc
enter
mov
bound
inc
add
stc
stos
dec
pusha
mov
pop
sub
rcrb
or
ljmp
cmpl
mov
leave
pop
loopne
je
iret
inc
dec
fdivs
pushf
add
loop
mov
aas
enter
cwtl
inc
xchg
xchg
xchg
cmpsl
add
inc
mov
movsl
and
fcoml
stos
push
and
ret
jnp
inc
fmulp
xchg
xlat
jo
cmp
shlb
lods
xchg
mov
dec
nop
mov
ficompl
xor
roll
xor
mov
popa
test
mov
fmull
mov
push
mov
xor
int3
mov
add
sub
jg
add
out
test
jbe
add
sub
int3
and
test
push
fadds
xor
inc
fcmovnb
xchg
pop
movsb
add
int
or
cmp
lret
add
ret
sub
dec
jecxz
ret
imul
jge
inc
ret
enter
mov
cs
add
dec
cmp
pop
mov
or
sub
mov
sub
jb
ds
adc
cli
mov
cmp
mov
cmp
mov
pop
jne
add
mov
dec
push
cmpb
pop
addb
sub
shlb
xchg
inc
add
int3
std
mov
out
ret
xor
cltd
add
pop
mov
add
lret
aas
test
xor
dec
insb
push
pop
adc
arpl
sub
jp
ja
xor
clc
rcll
jmp
subl
jo
jno
add
pusha
sbb
adc
add
int
lcall
shrl
sub
and
sbb
add
inc
iret
add
and
sahf
xchg
inc
xchg
enter
xor
fsubs
and
sub
aam
lds
xchg
dec
inc
aam
les
out
cmp
or
cmc
mov
inc
stos
xchg
mov
pop
and
add
add
repz
cmpsb
rolb
shlb
dec
xchg
xor
sub
adc
inc
in
jecxz
mov
dec
mov
add
jns
dec
aaa
dec
andb
jg
pop
xor
out
aaa
add
mov
adc
fsubs
add
dec
xor
add
and
dec
mov
movsb
in
cwtl
jns
enter
jle
dec
pop
jl
inc
fistps
stc
sub
loopne
adc
popa
jae
cmpsl
insl
add
cs
int
les
xchg
loop
repz
xchg
jle
ret
ds
adc
int3
xor
stc
and
cwtl
adc
pop
lods
jl
adc
arpl
sbbb
sbb
jno
jbe
add
cltd
sub
mov
pop
add
xchg
xor
dec
inc
out
call
push
add
stc
xchg
cltd
sub
enter
lods
adc
and
xor
xchg
mov
add
mov
aad
mov
push
daa
xchg
pusha
mull
fnsave
mov
ja
push
int3
ret
add
and
xchg
mov
aas
adc
add
in
mov
sbb
daa
adc
pop
sub
or
mov
mov
inc
int
nop
xor
shrb
inc
xor
mov
stos
or
cld
dec
push
rol
jbe
inc
rorb
out
pop
add
mov
push
dec
data16
dec
lds
add
jmp
outsb
je
and
and
xchg
pop
xchg
add
enter
rolb
mov
data16
fimull
add
lods
xor
adc
adc
lret
mov
cmp
mov
popf
icebp
repnz
iret
in
jo
int3
add
dec
fisubs
mov
add
movsl
in
cld
xor
fs
cs
lods
or
test
mov
fcoms
mov
sub
and
adcb
ret
jmp
loop
test
incl
and
hlt
jp
dec
hlt
cmp
sbb
test
mov
mov
or
dec
sub
mov
adc
pop
loopne
and
adc
mov
aaa
push
in
jb
loop
add
test
sahf
add
mov
push
cmpb
push
scas
and
sqrtps
xchg
jnp
lds
xor
shrb
into
loope
aam
add
jg
sub
or
adc
or
mov
sub
or
add
cmp
bound
lods
xlat
dec
loop
nop
and
inc
fs
int
sub
mov
pop
insb
sbb
mov
sarl
jl
ljmp
mov
sub
jb
repnz
nop
cwtl
or
in
mov
xor
push
cltd
pop
mov
mov
adc
dec
add
sub
xor
add
mov
les
in
xchg
pop
push
jbe
xchg
in
and
sarb
mov
dec
sbb
dec
inc
and
orb
mov
addr16
push
cwtl
mov
push
add
out
imul
insb
paddw
mov
clc
inc
lock
lcall
les
mov
pusha
pusha
pop
test
sub
jns
test
mov
sub
repz
testb
inc
test
test
inc
jns
add
sub
jne
add
jmp
adc
push
add
jno
adc
adc
or
mov
inc
mov
sbb
dec
and
lock
leave
jmp
jp
nop
mov
xchg
mov
xchg
inc
inc
roll
jo
add
add
push
mov
test
sahf
push
ljmp
test
sbb
scas
add
or
mov
push
icebp
add
and
xor
loope
add
scas
xchg
push
sbb
or
call
mov
mov
mov
xchg
dec
dec
mov
xor
test
cmp
sub
fsubs
xchg
pusha
mov
cmpsb
or
mov
add
nop
xchg
or
or
mov
or
popa
push
mov
ss
fdivrs
pop
add
cmc
into
les
movsb
cmp
subl
add
inc
mov
je
in
jnp
pop
cli
popa
cld
mov
add
mov
and
sub
mov
mov
int
out
jg
lret
inc
jmp
call
jl
clc
dec
cmp
mov
ja
cmp
icebp
repnz
inc
ltr
mov
andl
pop
int3
cwtl
add
cmp
inc
int
scas
rcll
lods
jb
cltd
pop
mov
adc
add
stc
lds
cwtl
adc
mov
js
mov
xchg
jnp
push
mov
rol
aad
or
mov
xchg
clc
inc
mov
roll
xchg
in
xchg
loopne
fmuls
or
movsl
adcb
js
and
jle
mov
and
ret
inc
and
jp
scas
js
add
enter
inc
sub
jns
int
hlt
pop
inc
add
mov
hlt
scas
mov
jl
fimuls
cmp
xor
dec
xorb
icebp
nop
das
mov
or
cld
cmc
movsl
pop
add
add
sub
aam
in
xchg
pop
jns
add
nop
xor
xor
and
xorb
and
or
dec
add
or
xor
jb
call
in
addb
imul
leave
pushf
pop
cwtl
sub
xor
movb
out
ss
mov
repnz
and
jg
shr
mov
je
add
clc
aas
dec
ficoms
ret
mov
testb
cs
shlb
push
add
push
daa
dec
jmp
mov
sbb
mov
dec
add
test
inc
add
leave
dec
rol
ffreep
scas
lahf
cmp
bnd
jle
add
xchg
push
add
frstor
sbb
iret
mov
insb
xchg
cmpsl
pusha
xchg
and
sub
push
mov
add
hlt
inc
push
fcomps
inc
pop
orb
push
or
pop
xor
lds
imul
orl
hlt
sub
enter
lea
iret
in
inc
xchg
sub
dec
xchg
xchg
aas
add
mov
jg
xor
clc
pop
pop
add
jns
subl
push
lcall
sub
enter
andb
stos
bound
repnz
sbb
mov
mov
cmpsb
dec
dec
adc
bound
popa
lret
sub
xchg
mov
inc
rclb
jmp
enter
pushf
icebp
add
pushf
imul
and
and
cmpl
ret
aam
aas
or
push
sub
mov
iret
mov
cmp
add
pop
in
adc
ret
mov
test
jl
pusha
mov
out
or
out
popa
xchg
or
adc
test
mov
cmp
sahf
in
adc
add
mov
mov
mov
inc
std
dec
sbb
mov
adc
mov
int3
mov
repnz
clc
dec
add
inc
test
hlt
adc
add
push
gs
mov
adc
jl
mov
and
int3
add
push
dec
adc
hlt
in
inc
into
cmp
inc
inc
and
pop
cmp
rorl
loop
push
dec
inc
pushf
jno
mov
pop
adc
mov
jb
cltd
in
andb
jbe
push
push
push
repnz
jmp
pushf
mov
test
inc
test
add
and
cmpsb
ret
sub
inc
and
adc
xchg
xchg
add
iret
cli
dec
dec
and
in
adc
rolb
stos
pop
inc
pop
push
sbb
mov
jbe
pop
mov
mov
fisubs
adc
cmp
dec
test
inc
add
pop
loop
pop
adc
hlt
jnp
dec
stos
insl
mov
lods
aam
inc
sahf
insb
loopne
and
add
dec
rorb
sub
leave
mov
mov
xor
jl
pop
mov
and
push
pop
push
mov
frstor
loopne
decb
mov
xor
lea
add
sub
add
mov
bound
jb
pop
ds
sub
mov
pop
sub
out
pop
std
lcall
xchg
xor
sub
insl
pop
adc
mov
pop
add
fwait
inc
xchg
repz
inc
in
lahf
popa
adc
push
std
and
frstor
add
mov
and
xor
movsl
iret
dec
repz
lods
cltd
adc
shl
nop
adc
pop
add
jno
in
imul
jae
add
inc
push
rcl
out
pusha
dec
fs
mov
orl
add
dec
dec
add
imul
lock
daa
inc
cwtl
cwtl
arpl
nop
sbb
inc
rcrb
dec
repz
mov
sarb
adc
pushf
cli
inc
xchg
inc
push
lret
nop
jl
sbb
clc
lds
mov
xchg
in
xorl
cmp
mov
les
add
add
and
fidivl
daa
mov
cmp
add
xor
inc
adc
dec
sub
mov
pop
stc
add
mov
xchg
sbb
add
sbb
jecxz
enter
dec
mov
mov
jmp
jmp
add
adc
mov
pusha
imul
insl
stc
js
xchg
inc
dec
rorb
rclb
loopne
xor
daa
jmp
xchg
cmp
cmp
mov
aam
push
xor
pop
std
add
add
in
push
loope
movl
jno
jmp
mov
fidivrs
push
sbb
push
pop
jno
xor
inc
fistpl
movsb
adc
mov
addb
add
inc
cmp
mov
cmp
cltd
xor
cmp
addl
adc
push
add
mov
add
sub
mov
pushf
or
adc
add
in
pop
iret
or
add
cmp
mov
js
bound
es
mov
sbb
incb
gs
cmp
lahf
shrb
cmp
or
stos
push
popf
mov
mov
inc
mov
mov
jmp
inc
dec
pushf
add
or
xchg
fs
cltd
les
in
test
mov
xor
adc
idivb
inc
jmp
or
int
pushf
sbb
es
cmpsb
sub
mov
dec
xorb
mov
scas
add
jns
xchg
rclb
pop
pop
lret
push
sahf
push
popl
and
pusha
jne
dec
into
push
iret
add
pop
shll
dec
dec
orb
scas
inc
ret
lret
cwtl
repnz
das
mov
pusha
xlat
icebp
mov
adc
frstor
cltd
pushf
cltd
jp
jbe
pop
jl
cmp
arpl
xchg
insl
pop
shll
push
es
inc
das
jp
mov
mov
sbb
mov
pop
jge
test
pop
inc
cmp
jl
or
cmpsb
loopne
stos
pop
and
test
fiadds
push
jns
insl
aaa
inc
xor
adc
sub
setnp
mov
push
punpcklwd
movsb
scas
pop
add
lcall
fstl
and
jecxz
inc
lods
cmp
lds
call
push
dec
mov
lret
sahf
inc
pop
mov
popf
gs
inc
lock
add
fnsave
das
xor
dec
movsb
mov
test
test
lods
stos
cmp
mov
pushf
xchg
add
xchg
mov
mov
jno
incl
mov
push
or
popf
mov
sub
push
jmp
lock
fildl
sub
mov
jecxz,pn
sbb
mov
pusha
mov
cltd
pop
push
js
lahf
test
push
add
add
and
cbtw
or
pop
and
jge
sub
sarb
cld
xchg
add
test
push
or
adc
mov
cs
jbe
mov
dec
sbb
mov
cmp
sub
mov
sbb
mov
dec
and
mov
data16
add
or
loopne
dec
je
adc
insl
idiv
push
pop
cmpsl
sub
les
nop
int3
sub
sbb
es
inc
mov
add
inc
inc
stos
cmp
xor
sbb
lock
xchg
dec
lock
pop
or
push
lahf
test
cmpl
nop
pop
mov
bound
sahf
jns
mov
cwtl
lret
rcl
xchg
inc
dec
and
lea
fldl
aas
xlat
lds
add
or
sahf
and
mov
bound
push
push
inc
adc
mov
sbb
mov
loopne
add
lods
imul
adc
add
pop
mov
push
in
lahf
xor
xchg
pop
addr16
ss
fcoml
lea
mov
jbe
dec
lds
cwtl
dec
lock
rorb
sub
xor
in
ds
jae
fxtract
push
pop
xchg
leave
subb
or
movsb
std
dec
incb
mov
daa
jo
enter
lea
divl
lahf
adc
adc
inc
cmp
ret
test
sbbb
icebp
mov
or
pop
lret
sub
imul
lea
add
xchg
xor
cmp
pusha
xor
cmp
jmp
push
loopne
and
or
mov
push
mov
call
test
or
xchg
add
push
das
sub
mov
or
add
inc
mov
sbb
mov
dec
jecxz
data16
rol
test
js
add
in
cmp
lcall
mov
sahf
mov
mov
add
lods
daa
xor
sbbb
jns
pusha
xchg
jmp
jl
jge
ss
sub
cmpsl
movsb
pop
push
mov
adc
lret
test
xor
testl
leave
cmp
inc
or
cmpsl
popf
repz
icebp
or
insb
push
notl
pop
or
movsl
mov
mov
cmp
add
js
adc
xchg
cwtl
fadds
ljmp
and
mov
add
sbb
and
or
fwait
jo
fisttpl
add
pop
and
scas
pop
mov
lods
mov
add
mov
imul
shll
push
imul
aam
mov
mov
mov
add
daa
adc
or
roll
sub
in
push
mov
mov
mov
xchg
sbb
or
stos
and
or
add
xchg
jg
shl
int3
out
inc
mov
loope
outsl
sbb
lea
sub
adc
inc
clc
lea
movsb
or
shll
test
or
mov
dec
add
xor
xorb
mov
lahf
inc
inc
sub
loopne
or
lahf
stos
mov
xor
cli
jmp
inc
jmp
xchg
and
push
js
push
mov
stos
jg
rorb
pop
dec
inc
adc
xor
iret
cmp
insb
sub
xchg
and
push
movsb
call
arpl
rorb
jg
xor
jbe
repnz
and
out
lahf
push
sub
sub
in
pusha
js
or
xchg
inc
or
es
out
sub
daa
add
push
jl
fcomps
mov
add
arpl
cltd
mov
or
or
testl
ret
add
mov
xsha1
cmpsb
pcmpgtd
int
or
xchg
cmp
rcrl
push
nop
mov
fwait
sbb
cmp
and
out
inc
push
sbb
cmovnp
adc
add
lods
inc
xor
push
add
andl
or
xor
stc
loop
xchg
enter
rorb
add
push
pop
sbb
jmp
mov
mov
and
add
loopne
dec
cmp
je
pop
scas
xchg
aaa
dec
xor
iret
sbb
jnp
mov
jge
gs
sbb
sbb
jnp
push
push
sarb
push
mov
add
sub
aas
cmp
add
adc
sti
je
add
int
pop
movsb
shlb
xor
push
xor
fadd
push
gs
mov
push
loopne
jnp
sarl
in
and
fs
lret
shll
add
movsl
lret
ficomps
imul
rorl
loop
pop
les
stos
repnz
cld
adc
jae
cmp
push
lea
mov
inc
sbb
inc
sbb
or
ret
lds
xlat
jmp
cmc
push
xor
sbb
sbb
mov
jae
push
xchg
jb
add
cmp
push
sbb
dec
adc
sub
std
adc
jno
shlb
rcrl
aam
mov
add
int3
mov
fisubrs
mov
subl
mov
add
push
xor
pop
add
jnp
lods
inc
fmull
arpl
sbb
pop
ficoms
pop
pusha
jecxz
out
cli
sub
push
in
jmp
xor
add
sub
pop
cmpsb
mov
aas
xchg
inc
jbe
adc
iret
addr16
cmp
stc
lret
scas
ja
rorb
in
cld
and
cmp
adc
sbb
dec
fdivl
aam
ljmp
adc
push
add
jecxz
movsb
add
cs
dec
test
mov
and
jmp
scas
sbb
push
sub
add
inc
xor
mov
dec
mov
sbb
cmp
mov
sbb
pop
test
add
stos
fsubl
sub
jb
subb
and
fidivs
in
pop
jnp
add
xor
fistpll
pop
pop
jp
xchg
lods
mov
lds
dec
xchg
fiaddl
mov
jae
add
test
push
sub
xlat
push
dec
mov
add
xchg
in
mov
sbb
fdivr
adc
fadds
xchg
ret
adc
adc
repnz
test
inc
andl
xor
hlt
shrl
hlt
lea
xchg
test
cmp
mov
xchg
faddl
addr16
jecxz
fstpl
mov
addb
stc
popf
push
icebp
inc
or
pop
sub
sub
lea
sub
out
add
imul
ret
sti
adc
in
and
jge
ljmp
xor
or
jl
loopne
adc
jnp
sbb
shlb
fucomp
jmp
and
popf
lock
add
mov
cs
cmc
stos
pop
xor
aad
cmp
xorb
add
hlt
stc
pop
jbe
pop
add
push
cmpsb
fwait
shlb
sbb
nop
sti
or
cmp
jnp
xchg
dec
scas
mov
add
or
stos
stos
fs
loopne
int3
add
mov
enter
imul
je
push
xchg
fsubrl
mov
add
jp
and
xor
mov
fmuls
imul
fwait
cld
cmp
outsb
cltd
sti
dec
xor
je
sbb
xchg
add
es
pop
push
sbb
jecxz
adc
add
inc
sbb
add
jb
cmp
adc
add
repz
push
cmpsl
dec
inc
xchg
addb
add
es
xchg
sbb
inc
sbb
loope
lret
mov
std
aaa
mov
sub
adcb
retw
outsl
xchg
call
push
sub
loopne
inc
arpl
sub
inc
add
andb
adc
sbb
test
insl
sbb
int3
and
aam
sarl
pop
cmpsb
addr16
push
push
and
push
inc
or
nop
fmuls
add
adc
add
lret
xchg
repz
jns
adc
and
pop
je
std
cmp
lret
jb
sub
aam
and
cmpsl
mov
repz
pop
pop
jb
push
add
or
xchg
in
ret
sbb
pop
stc
imul
jge
add
cwtl
push
roll
icebp
mov
and
xchg
adc
xchg
hlt
pusha
push
cmc
mov
sbb
lods
aas
lcall
cmc
push
or
test
push
shl
clc
pop
add
pop
inc
js
adc
adc
lret
add
xchg
mov
mulb
add
cmp
imul
sbb
pop
enter
lock
cmc
sbb
fidivrl
pop
shrl
dec
xor
pushf
xor
cmc
sbb
mov
or
add
pop
cs
bswap
push
lods
mov
js
sbb
cwtl
or
xchg
rcrl
mov
decl
mov
push
imul
sub
cmp
lea
lock
inc
mov
js
pop
cmp
outsb
sub
xchg
lods
les
insb
mov
fs
jnp
xchg
mov
pop
fmul
or
and
aaa
les
sub
movsl
gs
test
xor
std
dec
add
jbe
jae
mov
addl
aaa
pop
mov
cwtl
out
dec
xchg
inc
xor
xorl
shr
mov
add
sbb
js
push
rorb
mov
mov
jno
and
dec
jnp
ret
lret
dec
int
lcall
iret
xchg
movsl
fcomps
mov
inc
adc
rorb
cmpsl
lret
and
or
aas
sbb
shlb
daa
adc
mov
inc
addr16
sub
push
out
in
cli
add
imul
arpl
mov
fwait
jo
rorl
mov
dec
shll
pop
jb
stc
fs
adc
test
mov
adc
and
or
add
inc
dec
adc
fidivrs
je
cli
int3
nop
clc
inc
jge
xor
lock
adc
ret
xor
mov
je
loopne
add
push
mov
dec
adcl
or
gs
add
cltd
repz
movsb
aam
sbb
int3
in
pop
and
cmc
xor
xchg
inc
xchg
and
push
mov
std
dec
push
test
xchg
daa
pop
sub
cmpb
add
mov
inc
loope
cmp
into
mov
fcmovnb
adc
push
std
mov
xor
adc
jecxz
sti
stc
jno
lahf
mov
insb
pop
shrl
inc
out
add
xor
notl
les
add
xchg
cli
add
daa
xchg
int3
add
xor
imul
sbb
test
adc
sub
mov
jnp
andb
adc
ja
dec
jne
pop
sbb
or
sub
xchg
aam
call
int
add
mov
arpl
loop
mov
lods
sub
and
jmp
xchg
add
cmp
add
push
jg
enter
sbb
jne
push
pop
inc
flds
shll
and
dec
js
adc
inc
aas
pop
or
in
add
into
cli
hlt
stos
addb
inc
push
adcl
enter
add
xchg
stos
hlt
push
int3
adc
call
rcll
and
out
add
dec
fisubs
add
sub
sbb
pop
popa
inc
inc
cmpsb
mov
ret
sub
inc
xor
ret
add
test
out
xchg
or
jne
mov
or
cmp
rolb
and
sub
sub
rorl
or
lds
jg
loope
cmp
repnz
int
xchg
pop
inc
test
xchg
in
or
gs
fwait
adc
lock
cmpsb
push
mov
mov
xor
jmp
cltd
cmp
cmpsb
cld
sbb
and
fsubrp
ror
out
mov
or
int3
cmp
pop
add
push
mov
sub
inc
adc
dec
mov
add
data16
inc
mov
and
adc
add
mov
jne
add
aam
repz
jp
add
adc
xor
mov
sahf
fsub
mov
out
sbb
jge
mov
sahf
movsb
or
enter
repz
add
cltd
icebp
inc
inc
cltd
aam
bound
add
or
add
xchg
jb
pop
inc
sbb
jmp
jg
rcl
cmovb
sbbl
inc
addr16
add
fldenv
fisubrl
dec
xchg
inc
or
cmp
jecxz
xchg
xchg
cmp
out
jl
pop
repnz
fimuls
add
fistl
mov
dec
fldenv
orb
sub
add
mov
or
add
mov
xor
nop
sahf
pop
push
fwait
les
gs
scas
push
in
pop
lods
dec
icebp
rolb
lret
mov
imul
test
xchg
push
add
repz
pmullw
dec
sbb
add
les
sub
int3
enter
sbb
mov
add
repz
sub
add
sti
ficoms
or
jecxz
je
mov
ljmp
in
sbb
out
test
cmc
ret
pop
mov
sti
shrb
rcl
imul
movsb
xor
cmp
adc
notb
lock
adcb
add
int
push
mov
es
add
adcb
ljmp
sbb
enter
add
push
adc
add
adc
jbe
cs
add
ret
xchg
shr
mov
push
cmp
enter
or
jo
adc
stc
mov
notl
add
test
ficomps
or
roll
and
or
in
lahf
cli
add
int3
mov
loop
repnz
pop
pop
aad
rcr
push
imul
rorb
out
imul
inc
cmp
push
add
mov
cs
pop
lods
leave
add
and
jge
or
adcb
add
sbb
cmpl
aam
cmpsl
or
movsl
aas
sbbl
ficompl
add
imul
cmp
adcl
ljmp
lods
dec
fmull
incl
add
adc
rcrb
fcomip
les
mov
dec
add
cmp
cltd
test
cld
add
lcall
xchg
jecxz
or
xchg
pop
xchg
xchg
add
lcall
in
add
test
add
inc
aas
jb
loope
adc
inc
or
adc
xor
adc
add
into
push
cmpsl
mov
inc
pop
aam
std
push
aaa
cli
dec
add
xchg
jb
mov
cmp
aas
cmp
imul
in
push
inc
ljmp
cmp
dec
enter
mov
add
push
dec
xchg
in
incb
and
pop
jns
cwtl
sbb
shlb
dec
cmpl
test
mov
sti
mov
orb
neg
add
sahf
mov
loope
fsts
out
inc
cmp
xor
add
lret
xchg
enter
mov
imul
shl
dec
lcall
add
call
adc
cmp
add
push
into
push
add
xchg
mov
cs
sbb
enter
int3
hlt
push
fs
sub
adc
add
sbb
or
adcb
mov
dec
jmp
add
inc
sbb
cld
add
adc
push
pushf
lcall
sbb
mov
ret
in
jns
mov
push
dec
sbb
pop
data16
pushf
and
nop
into
dec
push
aam
inc
lret
xlat
repnz
cld
xchg
ljmp
inc
pusha
cmp
sbb
dec
mov
add
andb
cmp
mov
addr16
push
jp
clc
sbb
add
add
add
inc
inc
lock
push
add
xchg
add
mov
mul
andb
inc
pop
adc
dec
mov
pushf
int3
sahf
sub
stc
ficomps
mov
mov
inc
dec
cltd
add
mov
leave
ss
pusha
or
adcl
sub
cmp
cmp
inc
js
jo
push
addr16
sbb
icebp
shll
adc
fstps
inc
cmp
cmp
or
ss
sbb
xchg
in
xchg
inc
or
xchg
push
add
pop
into
mov
insb
enter
mov
add
xchg
int3
jb
data16
xlat
hlt
sub
stos
in
loopne
jnp
or
mov
jecxz
gs
jns
jns
flds
dec
pop
jae
xchg
xchg
int3
inc
lea
mov
xchg
hlt
inc
test
lods
out
das
sub
add
outsb
push
aam
jl
sbb
cmp
stos
insl
mov
cwtl
push
lds
xor
or
mov
lea
ljmp
sub
add
cmp
sahf
mov
lret
and
imul
sub
enter
inc
push
sbb
jge
inc
cmp
xor
enter
adc
push
add
es
jle
sub
mov
dec
enter
dec
push
imul
xchg
icebp
add
push
mov
iret
inc
push
or
jnp
adc
cmp
cld
add
pusha
or
push
add
adc
mov
int3
mov
inc
dec
pusha
ljmp
push
test
sub
xor
xchg
orb
sbb
sbb
cwtl
dec
insb
sub
mov
pop
push
rorl
xchg
hlt
popf
pop
jno
loopne
cmpsl
sbbb
popa
add
pop
fnstsw
add
pop
cmp
and
nop
aam
lret
cmpb
rcll
and
mov
inc
adc
incl
out
in
jo
aam
push
shll
es
push
pop
pusha
pop
int
stc
pop
lcall
cmovae
dec
outsl
lret
xorb
xor
cltd
add
mov
pusha
add
adc
enter
mov
add
cld
add
icebp
inc
aas
shrb
dec
insl
adc
jnp
mov
inc
faddl
cmc
dec
loope
pop
das
dec
out
cltd
add
pusha
lcall
insb
and
inc
pop
push
aad
dec
inc
and
dec
mov
and
sub
addl
adc
push
lds
push
int
int3
mov
out
mov
scas
movsb
jle
scas
mov
dec
arpl
sbb
adc
add
add
das
fidivs
stos
jb
sub
cmp
jnp
jo
sbb
push
mov
shl
jecxz
dec
mov
add
pusha
mov
sbb
push
push
cltd
je
ds
aaa
scas
pinsrw
loopne
xlat
jge
das
jno
adc
xchg
push
leave
and
popa
xchg
cmp
test
or
cwtl
push
insb
add
cs
push
in
or
add
in
rorb
adc
inc
std
frstor
mov
cwtl
andb
add
add
pop
dec
and
sbb
sar
jecxz
daa
xor
cmc
out
sub
mov
inc
add
fs
or
sar
mov
sub
test
inc
adc
in
inc
je
mov
and
cltd
pop
dec
cld
adc
add
mov
push
and
or
ror
add
dec
or
data16
sub
lea
pop
test
jbe
int
and
add
mov
aad
imulb
add
pop
sarl
cmpsb
mov
mov
xlat
jg
je
push
cmp
inc
or
or
lea
test
jno
inc
add
jmp
test
xchg
xchg
pop
out
adc
cmp
rol
sub
cmp
mov
mov
add
std
decl
pop
add
mov
fisttpl
lods
orb
into
lds
lods
adc
mov
sub
pop
cwtl
inc
pop
cmp
dec
sbb
push
lea
lock
call
cld
inc
aam
xor
sbb
lds
fdivr
and
inc
dec
jbe
inc
pushf
adc
fisttpll
xchg
ret
jnp
jl
xor
fsubrs
dec
jne
in
int3
aad
add
repz
cwtl
xchg
xor
int3
insb
mov
clc
mov
stos
cmp
xchg
push
movsb
es
mov
std
mov
xor
mov
xor
data16
add
push
add
xchg
sub
sbb
or
addb
minps
clc
mov
sbb
ret
cmp
add
xchg
ret
push
mov
pop
jl
shll
sti
add
stc
pop
add
out
scas
pushf
sbb
cmp
inc
adc
lret
add
clc
add
std
mov
pop
sbb
dec
add
repz
and
imul
add
pop
and
mov
sub
add
jp
rcll
jo
pop
add
mov
imul
inc
insb
push
push
dec
add
lcall
hlt
cmc
xor
orl
add
xchg
mov
sbb
test
mov
data16
lods
or
xor
xchg
ror
add
and
and
leave
adc
xchg
mov
loope
dec
mov
or
xor
mov
icebp
enter
hlt
adc
mov
fadds
xchg
xor
push
out
andb
loope
sbb
aad
mov
pop
push
or
andb
add
imulb
pop
push
fidivrs
pop
and
jo
inc
push
add
bsf
cld
sbb
mov
inc
mov
jnp
pop
mov
inc
mov
cwtl
add
flds
loopne
cmp
lret
cmp
addb
subps
xor
int
sbb
pop
call
std
or
add
icebp
in
mov
cld
and
add
std
push
push
dec
add
popa
mov
or
mov
fnstcw
cmpsb
mov
jnp
cltd
push
add
pop
aaa
mov
pop
mov
test
or
lret
mov
aaa
orb
orb
test
loopne
fisttpll
insb
xchg
jp
adc
add
nop
inc
mov
sbb
cld
or
leave
lret
insb
push
ja
iret
inc
shrb
push
in
add
xchg
push
mov
dec
mov
adc
sahf
mov
ret
cmp
and
xchg
push
icebp
rol
js
dec
fildl
lock
mov
push
mov
cltd
add
sub
cmp
lods
add
push
inc
sbb
int
not
sbb
inc
mov
xchg
jae
sbb
or
les
mov
daa
add
dec
push
add
bound
andb
mov
inc
sysenter
das
jae
cli
add
sub
cld
adc
add
loopne
sbb
xor
fadds
dec
mov
js
andb
add
sub
adc
jl
insl
sbb
jg
inc
jae
inc
js
enter
xchg
loop
inc
pop
dec
add
jecxz
inc
ds
add
inc
sti
call
dec
enter
pop
imul
data16
into
sub
out
rcrl
ret
aaa
lret
add
mov
mov
add
inc
lahf
and
pop
or
cs
hlt
sub
nop
and
loopne
nop
add
shlb
mov
xchg
ds
aas
into
push
mov
faddp
xlat
clc
idivl
and
sub
xchg
push
sti
mov
cmp
ret
ficoml
mov
orl
xor
mov
adc
mov
sbb
std
and
adc
adc
pop
lret
cld
addb
add
int
or
mov
add
mov
jno,pt
add
outsb
leave
loopne
jb
xor
mov
adc
and
test
mov
dec
pop
add
jnp
in
inc
inc
dec
fdivs
inc
add
push
enter
adc
lret
cmp
aad
andb
push
lahf
add
inc
xchg
sub
in
inc
cmpsb
or
icebp
add
add
or
add
mov
mov
loopne
ds
push
adc
pop
jae
xchg
inc
cmc
arpl
fucomp
ror
sahf
out
sub
xchg
lock
sbb
test
add
pop
push
adc
push
add
xor
add
and
add
xor
fists
ret
xor
jns
xor
movsb
add
leave
lods
or
xchg
bound
popf
lods
lret
les
sbb
sbb
push
movsb
add
pushf
xor
dec
xor
out
add
and
faddl
inc
mov
cmc
je
sub
leave
stc
fiaddl
lds
adc
imulb
mov
sub
test
movl
setb
stos
sbb
mov
pop
push
shrl
imul
cmp
jno
and
push
popf
iret
dec
add
test
lock
adc
rolb
and
push
orl
cmpsl
in
loope
adcb
pusha
xor
les
jnp
in
hlt
subb
add
hlt
movsb
popw
jo
sbb
inc
movsl
dec
adcb
xchg
adc
scas
jno
xor
dec
sub
adc
repnz
jge
leave
cmp
cmp
fidivs
xchg
add
mov
icebp
cmpsl
add
xchg
add
out
ret
inc
shlb
add
or
je
les
inc
daa
outsb
sbb
push
ja
ds
push
pop
adc
ljmp
add
add
and
add
or
roll
dec
subl
cmp
mov
adc
pop
addl
adcl
push
cmp
sub
divl
cld
jge
push
sbb
inc
push
clc
cltd
adc
and
les
test
xor
mov
push
dec
pushl
loopne
jmp
imul
mov
dec
jp
mov
dec
lds
add
test
clc
mov
jae
mov
add
imul
add
daa
inc
add
rcrb
or
es
ds
stc
add
xchg
repz
adcb
sub
roll
daa
add
out
xlat
xchg
push
add
cmp
lock
mov
arpl
cmc
subb
inc
ljmp
cs
enter
push
loopne
sarl
xor
call
sbbl
xchg
in
push
adc
mov
stos
test
sbb
popa
sbb
test
cs
sti
repz
icebp
lahf
cmpsl
pop
lcall
ja
mov
jecxz
mov
out
rolb
push
mov
testb
pop
adc
faddl
cmp
aas
adc
ret
cltd
shll
dec
lods
push
mov
jns
int3
faddl
lea
cmp
xchg
inc
fninit
inc
in
mul
int3
push
mov
push
outsb
movb
pop
cmpl
int3
add
dec
push
ds
cmpb
pop
in
sub
nop
enter
pushf
cwtl
pusha
or
xorb
loope
or
inc
inc
push
loop
into
sbb
mov
sub
cmpb
sbb
lock
jb
test
add
pop
lock
xor
cld
les
inc
aas
pop
mov
movl
adc
in
lret
sbb
hlt
mov
cmp
ret
pop
sub
push
rol
push
sub
pop
shlb
jle
xor
js
pop
mov
aam
test
and
ret
lock
inc
fsubrs
add
sbb
movsb
pop
pop
adc
xchg
sbb
and
popa
push
and
int3
mulb
cwtl
add
aam
adc
and
inc
mov
sbb
arpl
pop
jne
add
and
cltd
mov
push
loopne
jae
cmp
cmp
dec
orb
push
xchg
mov
pop
cli
aas
lcall
aaa
rcrb
enter
inc
xchg
adc
je
stc
lea
out
pop
sbb
push
sub
push
in
inc
int
jl
fisttpll
scas
test
xor
cmp
enter
lea
mov
inc
jae
add
push
stc
in
push
push
ffree
cltd
or
pop
iret
add
pop
add
pusha
scas
push
dec
add
push
inc
pusha
xchg
lock
xchg
in
push
leave
sub
adc
das
and
pop
mov
mov
pop
dec
mov
movsb
add
cld
call
sbb
cwtl
pop
pop
pop
mov
add
mov
xchg
lods
imul
ret
shrb
loopne
push
clc
adc
fidivs
test
adc
sbb
or
adc
mov
jp
pusha
push
call
in
or
pop
loop
jb
mov
mov
andl
add
fnstsw
out
sbb
adc
dec
jnp
adc
pop
leave
dec
cmp
pop
pop
push
rclb
or
add
mov
mov
movsl
cmp
push
add
jl
cmpl
mov
clc
lods
xor
inc
cmp
cmp
sbb
mov
jo
add
movsb
mov
jg
sbb
mov
cmp
fsubrs
nop
rorb
add
xor
pop
or
int3
add
dec
sar
or
in
in
jb
pop
subl
adc
or
add
repz
lock
xchg
and
cmp
add
sbb
data16
inc
ja
jl
inc
shl
negl
shlb
pop
gs
sub
cmp
scas
lods
pushf
add
ljmp
fsub
daa
cmp
push
or
imul
sub
sbb
mov
cwtl
dec
pop
sbbl
xchg
insb
test
add
mov
jl
pop
pusha
das
xchg
mov
and
rorb
stc
aad
repnz
mov
lods
pusha
pop
idiv
add
stos
rcll
mov
add
hlt
int3
into
sbbb
and
dec
xchg
sub
cmp
mov
fsubrs
add
or
cli
mov
cmc
and
sbb
dec
pop
fnsave
add
cltd
repnz
cmp
add
xchg
lods
and
into
add
pop
pop
mov
jge
add
push
inc
imul
jp
in
sbb
into
shl
aas
sbb
xchg
mov
push
pop
push
lock
imul
add
xchg
loop
sub
sub
nop
pop
adc
loopne
jae
loope
xor
adcb
pop
push
and
add
pushf
repnz
fldl
or
out
imul
mov
rcrl
repz
fstps
sbb
sahf
mov
xchg
fisubl
movsb
in
test
sbb
loop
add
shlb
cmp
and
aad
insb
push
xchg
add
repz
enter
out
mov
and
pop
cwtl
nop
inc
ret
icebp
call
cld
pusha
ret
add
mov
andl
jb
stos
aaa
mov
gs
or
int3
add
imul
inc
sbb
mov
jl
jnp
popf
add
or
mov
xchg
xor
orl
cwtl
icebp
jecxz
fists
stc
adc
je
rolb
mov
aam
sub
mov
les
cmp
stos
push
pop
test
adc
lods
les
cmp
or
sub
aas
clc
jg
insb
push
xchg
iret
loop
and
sbb
shll
enter
pop
shrb
jg
or
pop
ljmp
xor
loope
iret
les
addr16
faddl
sahf
push
mov
cmc
inc
cmp
sbb
icebp
loopne
data16
sbb
xor
sbb
mov
adc
and
cmpsl
inc
sbb
mov
repz
movsl
nop
push
sub
or
add
fisubs
add
rcl
aas
inc
loop
inc
sbb
shll
ret
add
push
push
add
or
cmc
icebp
sub
mov
add
add
outsb
inc
push
mov
and
leave
adc
add
add
sbb
enter
pop
push
add
loop
stc
repz
fidivl
pop
ljmp
mov
lret
int
add
cld
sbb
dec
flds
or
inc
adc
cmc
fsubl
mov
fisubrs
push
mov
add
aam
movsb
and
cmp
lods
jecxz
xchg
fistl
pusha
ret
mov
xor
mov
and
inc
movsb
dec
inc
call
pop
outsb
cmp
mov
daa
mov
iret
xchg
push
clc
les
loopne
cmc
dec
rolb
daa
and
push
adc
pop
iret
std
sbb
jmp
and
push
mov
lahf
outsb
ds
and
add
movsb
or
xor
dec
xor
aam
insl
dec
outsb
clc
fwait
mov
jge
add
popf
jbe
data16
dec
decb
shl
add
test
outsb
add
leave
loope
add
sub
fiadds
inc
test
in
jne,pt
add
repnz
call
xchg
orb
mov
sub
shll
rolb
lock
xchg
mov
push
js
aas
imul
add
mov
jmp
or
inc
ljmp
dec
pop
fimuls
cmc
stc
adc
xchg
push
cmp
mov
pop
jne
dec
popf
outsb
mov
jg
lahf
test
mov
and
fimuls
or
pop
in
xchg
in
ret
dec
xchg
int
or
or
xor
push
pop
aam
in
xor
out
sbb
xchg
add
je
lret
pusha
int3
test
pop
jge
lods
push
gs
mov
int
and
jae
cltd
inc
adcb
cmpsb
sub
adc
push
and
ficoms
dec
and
addr16
pop
mov
loop
cmpb
pop
jmp
pusha
hlt
dec
sub
fmulp
xor
jnp
fwait
mov
pop
call
xlat
xchg
and
push
movsb
dec
fwait
jnp
pop
ret
cmc
sub
and
test
add
cld
jno
mov
push
add
sbb
cmp
call
movsb
inc
in
mov
cwtl
dec
jo
jl
mov
push
add
aad
mov
push
inc
sahf
mov
pop
push
push
cmpxchg
in
adc
xchg
inc
cmpsl
push
inc
inc
mov
scas
add
sbb
push
aam
xchg
add
inc
push
enter
inc
nop
jns
inc
aas
sahf
push
test
or
cmp
add
lea
dec
jae
outsb
mov
jecxz
das
pushf
test
pushf
push
or
lds
push
clc
push
aad
add
add
cltd
lock
aas
push
adc
or
xorb
dec
inc
pusha
mov
loop
sahf
jbe
test
and
xchg
inc
pusha
loope
sub
and
fs
adc
jae
mov
xor
dec
add
loope
cli
pop
cs
and
xchg
movsl
sbb
dec
daa
add
js
nop
push
rcll
cwtl
loope
adc
xchg
add
pop
popa
sbb
out
or
add
push
testb
sbb
clc
test
sbb
mov
insl
sbb
loopne
jnp
popf
imulb
dec
xchg
popf
outsb
sbb
or
outsb
sbb
cmp
or
ja
pop
lods
dec
dec
call
fs
and
sahf
leave
pushf
loop
je
loopne
rclb
push
push
icebp
add
push
sub
mov
flds
xchg
popf
inc
adc
push
imul
adc
mov
dec
xorb
xchg
fimull
andb
stc
loop
data16
cmp
adc
pop
adc
sub
jne
xor
add
inc
std
pop
and
das
xchg
rorb
dec
in
aam
mov
pop
inc
popl
popf
mov
mov
bound
add
xchg
and
lret
flds
push
mov
add
subl
push
les
push
in
lret
sahf
imul
stc
popf
mov
fs
pushf
js
add
sbb
push
aam
jno
jl
sbb
lods
dec
ds
push
repz
std
push
add
add
cmp
adc
adc
inc
or
jns
cmp
test
scas
add
ret
fstps
stc
push
insl
cmp
push
xor
test
enter
sub
cmp
push
and
int3
mov
aaa
in
xor
add
sub
and
xchg
pop
rolb
push
loope
jb
nop
int3
cld
mov
movsl
fldl
and
sahf
and
out
sbbb
les
push
loope
and
add
lods
andb
sbb
icebp
xor
lds
nop
test
and
push
jns
test
fisubrl
mov
mov
scas
inc
cmp
adc
xchg
jne
fdivs
add
aas
lcall
inc
add
mov
sbb
mov
movsl
or
inc
sub
and
mov
pusha
mov
repnz
jnp
test
add
popa
jne
sar
js
xor
add
inc
icebp
and
xchg
lcall
add
int3
js
push
add
xor
enter
sub
fwait
addb
inc
add
inc
add
and
loope
add
aam
dec
shlb
cwtl
fcompl
pusha
ds
mov
dec
inc
push
jnp
int
dec
sbb
xchg
sahf
push
inc
adc
insb
mov
inc
mov
mov
pusha
sbb
ljmp
test
mov
pop
ds
mov
aam
mull
xchg
fwait
and
xchg
add
dec
add
daa
subb
repnz
inc
mov
add
fcompl
jbe
outsl
ja
or
xor
mov
insb
xchg
pusha
mov
jno
mov
pop
cwtl
or
or
pop
movb
push
sub
aam
xor
aam
xchg
add
xor
pop
dec
lcall
outsb
aam
imul
xchg
sbb
pusha
push
sub
and
push
cwtl
xchg
test
jecxz
enter
call
cmpsb
pop
mov
dec
xchg
fbld
cmc
xchg
xor
enter
ljmp
adc
and
xchg
popa
lds
jo
mov
std
sbb
and
sti
add
lods
jl
mov
std
pop
daa
and
sar
add
dec
sbb
rcll
sbb
daa
fimuls
jo
xchg
cltd
sbb
inc
pop
or
cmp
mov
data16
or
add
dec
int
addr16
add
nop
loope
ljmp
sub
or
adc
aad
add
adc
mov
add
lock
pop
xor
cli
fwait
enter
ss
inc
sbb
mov
mov
dec
push
adc
dec
hlt
pusha
into
outsb
fildll
sub
repz
adc
mov
sbb
cmp
cmp
cs
xor
mov
pop
pop
dec
inc
rorb
mov
inc
dec
lcall
dec
scas
xor
aas
mov
push
inc
sbb
add
les
ja
pop
mov
inc
movsb
int
enter
ret
sahf
jmp
incl
sbb
add
fbld
shlb
or
push
mov
dec
shrl
push
jmp
cmp
loop
lret
inc
adc
add
jno
add
rcrl
pop
add
cmp
loopne
dec
adc
jae
and
cmpsb
mov
or
fcoms
imul
adc
add
loop
cld
jno
test
or
test
rcl
into
add
lcall
repnz
daa
aas
mov
cmpb
cmpsl
dec
nop
lahf
add
movsb
and
popa
xchg
clc
int
jns
sbb
add
xor
insb
pop
push
iret
sahf
jecxz
mov
jae
cli
mov
lods
rolb
xor
in
pop
lret
loop
mov
cmp
mov
bound
insb
pop
push
sub
mov
cmp
pushf
loope
mov
push
lods
stc
aaa
jo
inc
idivb
hlt
rolb
and
sbb
mov
push
xchg
inc
sub
cltd
pop
pop
or
test
mov
inc
gs
or
bound
inc
jle
mov
xchg
aad
add
fsubrl
nop
enter
pushf
sub
adc
in
xchg
mov
add
inc
dec
rorb
mov
ret
rcrb
adc
inc
jl
ja
pop
lret
movhps
fadds
imul
sbb
add
pusha
scas
and
rolb
popa
mov
clc
jmp
cmp
sub
mov
jecxz
jns
lock
inc
add
fists
dec
pop
jg
sbb
or
add
das
test
cld
mov
lods
shl
cs
dec
add
add
adc
mov
push
fcompl
mov
jae
jno
or
aam
xlat
adc
push
insl
mov
into
add
dec
add
add
pop
std
add
push
fwait
jbe
out
sub
test
xchg
notl
lcall
add
add
inc
xor
cmp
repz
add
inc
ds
inc
cltd
xorb
xor
popf
xor
mov
add
es
in
push
icebp
add
jle
adc
xlat
xor
jmp
xor
clc
adc
leave
fs
bound
fsubr
rclb
mov
sbb
jno
xchg
pop
dec
fucomip
cs
dec
stc
push
popl
or
add
inc
inc
xchg
dec
dec
movsb
fdivrl
scas
push
clc
jg
stos
inc
add
sbb
dec
dec
sbb
pop
into
sbb
out
mov
cmp
cmp
popl
lds
jns
add
sarl
add
rcr
add
fiaddl
push
nop
add
cmp
sub
arpl
js
add
mov
adc
adc
leave
or
add
pop
mov
cmp
dec
ds
push
sub
cmp
or
adc
pop
add
jg
sti
add
cmpsb
mov
test
push
add
jb
cmc
rcl
and
mov
fdivrs
popa
add
aaa
jge
in
push
scas
push
push
movsl
mov
rcl
enter
push
test
roll
xchg
push
test
xchg
mov
dec
sub
add
inc
testl
push
movsl
stc
or
jmp
fdivrs
mov
mov
negb
sbbb
mov
adc
addr16
jb
sub
testl
cli
cmp
je
test
dec
xchg
add
pop
mov
or
inc
pop
movsb
clc
cli
pusha
add
lods
mov
clc
mov
stc
xlat
enter
push
repnz
add
push
inc
xchg
scas
xor
clc
movsl
mov
sbb
push
subb
mov
cmpsl
add
inc
cmpb
pusha
insb
xchg
push
loopne
iret
sarb
add
sub
sub
inc
adc
andb
incl
xor
fcompl
and
push
filds
xchg
sub
lahf
add
lret
sti
jge
int
add
clc
mov
xchg
out
cmp
add
lock
incb
fildll
add
addr16
inc
and
xchg
cmp
out
stc
push
andps
dec
dec
out
push
dec
cli
or
dec
mov
pop
lds
mov
pop
cmp
ds
push
inc
aad
dec
pop
test
mov
clc
jnp
shll
jns
add
push
scas
xor
sub
aas
inc
add
aam
imul
inc
adc
ficoms
dec
jo
cmp
mov
mov
push
addr16
pop
outsl
cltd
inc
in
movsb
inc
push
inc
cmovo
in
add
push
push
mov
hlt
add
sbb
xchg
int3
rolb
jns
sub
add
push
aas
dec
mov
xchg
sahf
lret
cmp
add
addl
pop
inc
fwait
out
push
push
jne
push
movsl
popa
cmp
outsb
dec
ja
into
push
inc
les
push
adc
lea
insl
xlat
adc
and
add
mov
adc
add
xchg
xor
es
sub
cmp
imul
jae
and
out
enter
repz
add
push
popl
es
pop
lret
pop
sbbl
jl
lock
add
nop
loope
rclb
dec
push
pushf
in
stc
cmp
or
rclb
inc
addb
xlat
cld
mov
stc
movsb
adc
and
pop
xchg
xor
add
enter
out
insb
mov
adc
add
mov
lds
jb
add
push
push
sbb
insb
jo
aas
and
fcoml
add
inc
pusha
imul
test
ss
fsubp
jns
scas
jge
add
cmp
or
stc
cmpsl
jb
popa
add
loop
in
repz
adc
cmp
rolb
adc
ljmp
rcrb
add
icebp
push
dec
add
fcomi
push
xor
jb
adc
icebp
sbb
fmull
ja
shrb
dec
mov
scas
fiaddl
push
aam
dec
add
adc
fisubl
xchg
mov
push
arpl
inc
test
arpl
mov
repnz
iret
lar
push
pusha
xorb
lahf
dec
loopne
add
repnz
cwtl
dec
mov
daa
lcall
add
pop
je
or
jp
imul
scas
push
nop
faddl
loope
dec
sbb
cmpsb
loopne
pop
add
ljmp
clc
pusha
in
add
jns
push
pop
lods
add
sbb
jmp
or
or
incl
stc
adc
push
ljmp
add
je
sbb
cmpsb
sbb
jne
adc
and
jno
xchg
xchg
and
or
sub
push
inc
sahf
xlat
fwait
sub
jne
adc
js
cmp
data16
push
mov
insb
sub
sub
inc
pop
xor
adc
bound
xchg
cmp
add
popa
bnd
xchg
mov
xor
dec
dec
popf
mov
out
add
rep
sarb
sub
movsb
nop
add
push
stos
jp
mov
add
ja
xchg
cmp
repz
xchg
xor
lock
jp
push
in
scas
lahf
stos
push
add
pop
lea
mov
daa
test
dec
add
or
clc
je
add
ja
add
adc
or
adc
shrb
jne
insb
test
and
xchg
add
in
es
sbb
bound
or
mov
mov
jno
xor
jns
inc
hlt
fildl
push
jge
mov
or
and
aam
xlat
push
push
insl
mov
and
fmull
call
aad
inc
sub
int
mov
and
fstpl
movsl
faddl
jb
or
push
mov
orb
movsl
aaa
add
clts
mov
das
sub
test
pusha
movsb
push
mov
pop
popf
subl
jle
ss
push
pusha
and
dec
cmp
add
mov
inc
pop
popa
jmp
repnz
add
pop
lods
ja
lret
jmp
ds
and
icebp
add
les
adc
pop
add
sub
add
dec
in
cmpsl
sbb
add
pop
sti
pop
add
xchg
push
enter
jl
jo
pop
popf
add
test
add
stos
adc
mov
xor
mov
add
icebp
mov
pushf
add
scas
in
out
test
repnz
sbb
cmp
push
jbe
and
fcmovnb
xor
out
mov
and
xor
push
xor
add
push
lods
jmp
add
dec
jnp
pop
lock
mov
mov
push
xorps
dec
dec
mov
adc
and
jg
mov
mov
push
mov
sbb
dec
lret
dec
test
sub
cmp
lea
test
lahf
in
loop
or
and
fildl
cmp
cmpsl
add
addr16
or
call
mov
add
lds
xlat
add
aam
add
shlb
mov
popa
ljmp
scas
cmp
mov
add
cmpsl
and
js
out
and
ss
enter
push
add
cmpsl
push
fdivs
mov
mov
mov
cmpsl
and
jg
icebp
jae
pushf
push
mov
ret
pop
add
adc
cli
inc
add
dec
lahf
pop
add
test
or
mov
imul
ret
nop
dec
lods
outsb
sbb
pop
or
mov
inc
sbb
shll
dec
push
push
in
lods
jecxz
hlt
pop
mov
rorb
data16
sbb
shrb
add
mov
xchg
icebp
rcr
repz
lods
sti
add
inc
mov
pop
icebp
sbb
in
nop
pop
add
adc
sbb
iret
pusha
fbstp
sbbl
push
xlat
inc
and
mov
std
add
scas
lds
jo
and
pop
add
dec
out
sub
outsl
or
add
in
push
movswl
sbb
sbb
inc
dec
repz
add
mov
aam
sub
test
outsb
fwait
xchg
aas
add
cltd
cmp
adc
loop
pop
adc
push
ja
jo
gs
mov
incb
lock
fwait
add
scas
sarb
xor
push
sub
jp
out
and
xchg
sub
imul
scas
push
jp
cmpb
add
lock
lods
cmp
inc
mov
mov
pop
adc
fldcw
jmp
insl
push
lock
inc
fstpt
leave
add
subl
add
xor
imul
ds
add
aam
xchg
push
fdivrl
pop
add
ret
sbb
mov
mov
test
mov
scas
mov
dec
out
loopne
add
sbb
incw
clc
pop
movsl
sarb
xchg
repz
xchg
or
shl
sbb
xchg
jmp
mov
pop
push
test
mov
sub
jle
out
sahf
xchg
pusha
sub
add
xor
xchg
inc
adc
inc
add
sub
add
mov
nopl
je
add
dec
mov
add
push
mov
sub
push
sti
ror
insl
jl
add
mov
xchg
pop
out
iret
stos
loop
xor
jge
sbb
rcll
sub
mov
mov
mov
stc
fwait
mov
jmp
mov
add
jmp
pop
ds
mov
or
push
xor
mov
add
test
out
aas
aad
adc
loope
pop
xchg
orb
out
cmpsb
add
hlt
mov
jae
paddq
mov
and
and
jb
add
imul
mov
rorb
mov
xchg
add
pusha
sub
pop
cld
sti
or
andb
push
aam
mov
xchg
mov
out
cld
or
int3
stos
jle
cmp
mov
sbb
inc
int
sarb
cld
loopne
out
cmp
lcall
mov
pop
mov
inc
stos
aas
loope
xchg
inc
insl
add
xchg
mov
xchg
add
adc
cmp
adc
arpl
jg
cmp
mov
mov
rcll
insb
mov
add
in
into
lret
lret
sbb
ret
add
fcoms
push
jg
or
jnp
imul
pop
xor
add
adc
sbb
or
mov
push
cwtl
xchg
leave
jge
add
or
push
ds
xor
popl
bound
add
loopne
imul
andb
pop
mov
sub
dec
cmp
mov
dec
ss
add
or
xor
push
cltd
push
lock
lds
cmpsl
cmp
nop
push
adcl
pushf
sbb
inc
add
mov
out
or
add
sub
push
dec
fsubl
adc
push
popa
cmp
stos
clc
push
orl
dec
sbb
rclb
js
add
mov
push
and
or
fsubrl
sbbb
sbb
and
mov
add
jmp
mov
mov
mov
repz
jae
int
mov
mov
clc
andb
out
dec
sbb
scas
int
cmp
adc
and
cmpsb
inc
iret
lret
in
mov
inc
shr
test
mov
dec
xchg
fsubl
aam
dec
add
adc
sub
or
aas
test
cs
addb
xchg
mov
pop
add
mov
mov
add
jo
cmp
add
call
imul
test
insb
in
xchg
or
mov
add
sahf
idiv
stc
insl
mov
add
sub
cwtl
repnz
push
xlat
clts
cmp
pop
loopne
lds
ret
dec
sbb
add
inc
aaa
jnp
call
fstl
and
jae
inc
xchg
push
or
xchg
icebp
mov
xchg
mov
dec
push
jbe
add
adcl
shll
outsb
in
pop
cmp
xchg
les
sub
pusha
or
lahf
pop
cs
cmp
mov
mov
add
aas
call
jbe
mov
cs
mov
clc
lods
icebp
xchg
or
add
jge
fs
jo
sub
shlb
or
add
rclb
add
in
mov
add
psrlw
jmp
mov
add
imul
push
add
fdiv
pusha
add
test
add
sbb
dec
add
ds
jns
xor
push
stos
aam
add
rcrb
pop
mov
bound
add
mov
test
inc
mov
pop
push
dec
popa
movsl
cmpb
xor
mov
scas
lds
add
or
sbb
nop
add
inc
xchg
out
push
int3
popl
xchg
and
mov
add
fsubp
daa
adc
add
int
dec
sbb
testb
mov
adc
cli
mov
pop
or
jno
test
sarb
add
sbb
lcall
push
divl
xchg
push
inc
insb
sbb
add
mov
pushf
inc
cmp
popa
jno
add
or
push
enter
pop
outsb
testl
aas
movsb
inc
mov
push
add
scas
sbb
cwtl
addb
adcb
xor
jmp
enter
shrb
and
imul
das
test
add
lods
mov
mov
add
add
fdivs
add
xchg
xchg
jno
adc
nop
nop/reserved
adc
adc
mov
sub
push
or
push
mov
push
cli
jb
pop
pop
aam
sti
mov
in
pushf
add
arpl
stc
pop
in
outsb
adc
jmp
adc
fldz
add
cwtl
cmp
sahf
or
pop
jg
sbb
add
add
and
enter
jno
ja
or
nop
movsl
xchg
add
and
test
sbb
rclb
nopl
lret
cmpb
jns
sbb
fwait
jmp
rcrb
test
xchg
cmc
push
sub
xor
or
adcb
ret
xor
jecxz
mov
test
cmpsb
add
inc
pop
lret
fucomi
or
lods
push
sub
dec
pushf
sub
xchg
push
lods
mov
add
xchg
shll
aad
mov
dec
ret
push
cmp
xchg
hlt
imul
adc
sub
insl
fidivs
nop
pop
pusha
pushf
lret
mov
push
add
fnstenv
hlt
push
sub
xchg
les
subl
lods
inc
add
xchg
loopne,pt
imul
mov
add
push
nop
xchg
sti
add
int
xor
inc
sbb
shlb
mov
and
jle
int3
imul
push
sub
mov
sub
or
dec
push
push
xor
es
shlb
outsb
icebp
mov
cmp
sbb
inc
rcr
cmpsb
inc
sbb
xor
push
add
dec
and
ret
add
and
add
leave
mov
sarb
xorb
scas
xor
addr16
xor
stos
mov
add
in
ja
lods
cmp
pusha
or
inc
xchg
add
lea
add
addr16
mov
pusha
bnd
mov
jae
jmp
adc
call
das
lret
mov
loopne
cwtl
inc
pop
js
daa
pop
clc
aaa
or
adc
dec
and
mov
pusha
mov
pop
in
insl
or
mov
cmpsl
shr
sub
popf
adc
or
jo
das
xor
push
aad
inc
sub
pop
shlb
and
clc
mov
jmp
and
lods
and
adc
mov
subb
add
repz
sarb
lret
pop
jle
mov
scas
push
pop
add
mov
jmp
ss
pop
add
addb
sub
pop
mov
xor
mov
sub
pop
mov
mov
imul
sub
fs
sbb
lret
rorb
add
js
push
cmc
pop
add
dec
sbb
lret
data16
aam
clc
cmp
test
test
ret
and
push
es
jecxz
outsl
cmp
pop
mov
adc
lds
mov
sbb
and
stos
leave
jge
add
test
jp
xlat
int3
mov
and
xchg
dec
ds
shlb
cld
push
bound
and
cmpb
sub
jle
adc
jmp
int
les
inc
add
ret
clc
and
add
push
lods
outsl
or
add
fistps
sub
inc
or
inc
sahf
hlt
jne
loopne
jg
add
out
and
sbb
sbb
aam
lock
call
add
cmp
pop
inc
das
or
loopne
sub
jo
mov
pop
and
sub
dec
xor
push
not
mov
pop
cmp
and
sub
jne
cmp
hlt
xorb
jecxz
pop
push
push
xchg
sbb
outsb
adc
add
in
and
mov
inc
xchg
add
add
dec
ret
jmp
mov
aam
iret
add
xchg
test
push
ljmp
fnstcw
call
dec
sub
outsb
repz
mov
into
xor
and
daa
lcall
incb
imul
cmp
out
sbbb
sbb
lds
fcoml
xchg
fcmovne
mov
mov
mov
push
lods
and
adc
ds
jns
stos
mov
xor
push
jno
pop
mov
fsubl
nopl
jmp
data16
es
add
ds
cmp
add
push
push
mov
jl
ffreep
mov
fiaddl
dec
sbb
and
loop
mov
inc
inc
in
rolb
mov
lahf
cmp
imul
add
loop
sarl
arpl
add
mov
or
xlat
cltd
pop
add
inc
rorb
and
pushf
stos
cs
jge
jecxz
pop
add
push
mov
cmp
jno
xor
cmpsl
nop
subb
fiadds
jmp
mov
pop
add
gs
lret
xor
loop
xorb
mov
adc
pop
pusha
loopne
daa
pop
inc
add
push
add
sbb
lods
rolb
in
jo
in
ficompl
cmp
pushl
lock
scas
ds
add
test
push
call
jge
enter
repnz
jecxz
ficomps
inc
imul
and
adc
cwtl
cld
je
data16
das
andb
add
and
or
xchg
sahf
xorl
js
lret
mov
cmp
mov
adc
jbe
aaa
add
ficompl
rcrb
cwtl
in
vmovsd
inc
or
jnp
dec
rolb
xor
xor
loope
add
nop
add
mov
psubb
jmp
add
add
test
test
clc
pop
sub
xchg
enter
mov
mov
jb
filds
pushf
js
dec
push
cld
push
lds
sub
add
xchg
in
push
jge
mov
xor
ljmp
cs
cmc
cmp
loopne
xchg
add
and
add
add
hlt
jmp
adc
rorl
sbb
andb
int3
cmp
jns
add
push
adc
cwtl
dec
mov
stos
lock
ror
jno
xor
lret
faddl
dec
sub
xchg
loopne
cmp
insl
mov
inc
push
imull
sbb
dec
mov
and
pop
fiadds
dec
push
push
arpl
movsl
test
push
add
sti
inc
push
frstor
dec
mov
jecxz
je
and
test
daa
jnp
les
add
das
int
int3
jbe
add
outsb
add
xchg
stos
mov
adc
enter
push
xor
jl
dec
xor
inc
add
push
inc
add
sbb
jo
xchg
push
faddl
les
dec
shlb
popa
jae
add
push
out
loop
call
cs
add
mov
les
dec
mov
pusha
jg
out
pop
out
mov
cmp
clc
add
stos
dec
loopne
ret
dec
leave
out
test
aam
push
adc
and
pop
adc
sbb
mov
std
jmp
xor
ds
add
mov
lods
loop
je
jecxz
add
lds
add
jnp
out
into
cmpsl
jle
and
inc
sub
std
outsl
add
ds
sub
popf
ja
push
mov
add
add
add
and
add
xchg
push
sbb
mov
add
notl
adc
mov
xor
loop
add
in
aad
lock
add
sti
ljmp
xchg
jg
and
aad
or
or
loope
icebp
cmpsl
cmp
call
add
outsl
mov
add
scas
push
divl
jmp
ret
mov
movsb
aam
addb
mov
xorb
mulb
add
lea
out
push
add
lahf
and
stc
addb
push
pop
sub
inc
jo
and
sub
loop
outsb
std
xchg
leave
mov
pop
push
mov
or
jb
dec
decb
xchg
or
jbe
fwait
nop
inc
ftst
sbb
mov
shlb
xchg
mov
xchg
adc
add
adc
mov
das
and
jle
je
leave
pop
shll
cmpsb
pop
adc
nop
iret
popf
jmp
add
jmp
pop
sarl
xor
push
pop
pop
add
lret
push
push
push
xchg
rcrl
mov
push
mov
popa
mov
mov
inc
mov
inc
xor
mov
loope
les
leave
scas
add
push
icebp
out
adc
arpl
pop
adcb
bound
ret
and
mov
cmp
push
adc
xchg
roll
repz
sarb
stc
in
loopne
je
insb
add
imul
mov
rolb
sahf
mov
mov
cmp
mov
flds
xor
pop
dec
mov
mov
lea
mov
mov
icebp
pop
gs
pop
push
int3
add
scas
xor
iret
bswap
shlb
and
push
adcb
mov
outsl
inc
lock
in
mov
push
pop
jle
mov
inc
xchg
lods
shlb
out
repz
push
add
lock
dec
in
jp
sub
cmp
cmp
nop
push
add
pop
ret
add
mov
xchg
clc
adc
push
sahf
repz
dec
in
sub
adc
cmp
add
pusha
aam
add
xor
mov
movsl
test
jb
pusha
loope
sbb
inc
inc
add
addb
jo
inc
mov
daa
add
jne
mov
sti
popf
pop
test
in
mov
imul
lret
cmpsl
int3
jo
cli
add
jp
jns
sbb
addl
jo
leave
add
insl
mov
cmp
sub
inc
fcomps
add
outsl
mov
mov
enter
xchg
sbb
mov
add
aam
jnp
push
jge
xor
jns
je
aaa
call
pop
push
add
xchg
sub
jae
add
mov
and
pushf
fildll
in
adc
pusha
mov
aam
rcll
js
jno
add
jle
sti
sub
inc
aas
inc
shr
xor
push
shr
jb
pusha
cwtl
push
add
xchg
mov
mulb
mov
and
popf
add
cs
shll
fldl
push
scas
inc
or
add
stc
sbb
ja
add
test
jmp
lods
out
stos
mov
add
or
add
sbb
xchg
and
loopne
scas
lds
add
lret
sub
pop
add
lods
dec
mov
add
jo
pop
mov
push
add
jne
cmp
out
push
push
pop
frstor
in
psraw
sub
sbb
lcall
sbb
jl
imul
mov
idivb
xchg
add
sub
aas
mov
mov
pop
ljmp
in
sarb
add
xor
pusha
movsl
and
add
div
test
mov
sub
mov
popf
push
sub
jmp
cmpsb
add
adc
iret
test
mov
dec
xor
add
leave
fs
xchg
scas
gs
mov
aam
inc
cmp
fldcw
and
push
sbb
std
cmc
mov
loop
repnz
js
and
js
pop
inc
cmc
mov
mov
imul
or
out
mov
sbb
add
lahf
in
cmp
repnz
dec
adc
jl
addr16
out
adcb
fldl
add
jmp
lret
mov
xchg
popa
add
push
cmp
push
out
push
sub
cmp
cmp
rclb
pop
into
jae
and
mov
xchg
or
out
or
scas
cmp
arpl
cmp
adc
xor
jnp
add
push
and
inc
dec
enter
jb
int
dec
pop
call
out
ljmp
add
sbb
ror
imul
cmpsb
rclb
add
dec
pop
xor
add
inc
les
push
ficoml
xchg
loope
outsl
and
sbb
mov
xchg
movl
dec
push
xor
or
add
sti
leave
cwtl
pop
rcr
add
and
mov
lret
lock
jmp
stos
inc
lods
or
add
flds
mov
cmp
xchg
xor
pusha
int
out
add
adc
loope
mov
push
fnstsw
stc
or
scas
mov
pop
pop
imul
add
mov
dec
lcall
xor
lds
sbb
notl
outsb
add
test
dec
imul
mov
enter
jno
add
jmp
inc
jb
push
mov
test
and
or
jp
xchg
xchg
lret
out
pushf
push
mov
mov
aaa
push
push
loope
and
hlt
and
cld
inc
xchg
add
scas
adc
mov
in
movsl
push
roll
jo
inc
cmpsl
unpckhps
pop
push
dec
mov
add
dec
dec
fwait
adc
inc
add
and
ret
cmp
add
loope
mov
out
or
cmp
fdivrs
mov
and
call
mov
dec
in
xor
push
in
int3
add
xor
mov
sub
in
xchg
in
sahf
dec
adc
cmp
popa
in
push
xchg
adc
int
and
push
incb
pop
sbb
out
shlb
add
ret
leave
test
add
jae
popa
mov
pop
out
add
loop
sub
lret
iret
push
add
adc
xor
mov
js
add
sub
sub
xchg
test
addl
stc
add
sbb
mov
push
ds
sarl
mov
sti
sbb
add
arpl
sub
mov
jge
fs
aaa
xchg
stos
push
mov
inc
add
movsb
adc
or
fdiv
jl
and
ja
cmp
pop
xchg
or
js
add
mov
movsb
cmp
add
icebp
xchg
test
mov
xor
dec
mov
cmpsl
inc
or
enter
popf
lods
in
fisubs
push
and
mov
add
jb
stc
pop
pushf
add
dec
outsl
xchg
cmp
add
mov
je
add
push
movsb
add
daa
push
das
call
inc
pushf
cmp
pop
and
push
repz
dec
pop
add
xchg
or
cld
sub
nop
fwait
jbe
aas
adc
pop
add
sub
add
neg
inc
test
jb
cli
gs
jno
add
std
cmp
jno
scas
popf
add
popa
cmpsb
aaa
inc
ret
push
mov
loop
mov
jne
adc
mov
mov
cmp
sahf
pusha
adc
jp
add
dec
scas
test
push
add
mov
sub
adc
das
movsb
sub
adc
add
cmp
xchg
mov
fsub
cmpsb
xchg
lds
pop
xchg
sbb
test
add
sub
test
add
insl
mov
jno
cli
movups
xor
jae
add
mov
pop
push
add
or
adcb
decb
lcall
repz
iret
rorb
inc
inc
mov
add
inc
sbb
sub
add
loop
sub
xor
xchg
popf
add
add
out
scas
movsb
sub
test
stos
aaa
xchg
jp
add
add
xor
pop
add
andb
rcll
sbb
gs
mov
outsl
add
xor
adc
shlb
insb
mov
xchg
sbb
daa
mov
jb
add
lods
push
pusha
adc
rcll
add
mov
aas
pop
pop
and
cmpsl
cmp
cmp
xchg
repz
sub
decb
ret
hlt
test
sbb
cli
outsb
ret
jmp
push
loopne
stc
xor
call
jnp
dec
cmp
cmp
fadds
jecxz
mov
lock
repnz
add
or
test
imul
xorl
pop
pop
cmpsl
js
sub
mov
or
lret
movsb
test
arpl
lret
mov
ja
add
or
dec
aas
mov
adcb
jae
mov
xchg
bound
xchg
out
scas
pop
int3
xchg
movsl
sbb
jbe
mov
adc
mov
push
mov
mov
lock
lods
pop
aad
inc
ret
sub
mov
mov
sub
idivl
shrb
sahf
jbe
sub
xchg
xchg
mov
add
addr16
mov
aaa
xor
faddp
dec
cld
mov
adc
xor
jo
hlt
jl
xor
fmuls
add
rol
mov
mov
add
jo
shlb
push
mov
add
scas
xchg
int3
inc
jno
loopne
add
js
add
pop
mov
add
das
into
test
pop
add
ret
dec
add
subl
add
add
jo
cmp
and
sub
in
mov
cmp
sub
adc
rorb
shrb
sti
lahf
cmpb
test
sbb
sbb
int
ret
mov
mov
popf
sub
cmc
insb
and
cmpsb
pop
mov
adc
pop
aad
mov
dec
sub
jnp
aas
in
cld
mov
xchg
jp
repnz
sarl
pop
in
mov
cs
imul
and
sbb
or
hlt
sub
mov
cltd
lret
add
bound
call
jle
inc
sub
repz
xlat
movsb
in
inc
pushf
rolb
imul
add
call
adc
es
pop
or
test
pop
popf
ds
xor
mov
push
filds
movsb
sbb
inc
call
sbb
imul
adc
out
fadds
push
mov
mov
jbe
aad
imul
sub
jg
or
mov
dec
cli
outsl
add
xchg
push
sub
jnp
add
jbe
xor
insl
aas
and
xchg
push
add
pop
mov
jp
cmpsb
mov
cmp
in
pop
add
and
jbe
mov
adc
pop
cld
aas
sbb
jmp
xchg
lcall
mov
test
mov
ret
test
pop
loopne
les
dec
adc
das
mov
repz
jmp
jo
push
add
fldl
scas
je
add
cmp
pushf
incb
push
jnp
mov
in
adc
pop
xchg
aaa
cmp
daa
sub
fwait
mov
jge
dec
leave
add
mov
xor
add
das
rcr
fistpll
pushf
repz
and
xchg
cmp
mov
jmp
jnp
fiaddl
push
add
cmp
cmp
xor
adc
out
in
add
out
sbb
imul
inc
or
call
popa
add
out
popa
add
lock
sub
cmp
xor
arpl
cmc
push
lcall
add
addr16
lods
pusha
push
push
pop
fidivl
out
sti
cmp
or
fsub
dec
xlat
xorl
fldl
add
mov
add
mov
xchg
movsb
lcall
jns
pop
sbb
jecxz
stc
add
mov
mov
cmp
rorb
and
jbe
rol
push
xchg
jno
sbb
xor
pusha
push
es
mov
mov
iret
mov
out
and
inc
push
sti
xchg
mov
loopne
cmp
loopne
add
mov
push
sub
out
inc
sub
sub
inc
xchg
leave
add
js
int
fstpl
sbb
xchg
or
add
lcall
mov
int
ficomps
xchg
pop
cmc
jno
add
loopne
clc
lahf
jb
rolb
sbb
fildl
cli
out
sub
ret
add
xchg
push
insl
pop
pushf
sbb
push
enter
shlb
add
jnp
cmp
icebp
es
fimuls
sub
add
lock
push
mov
sub
xchg
ss
out
lahf
popf
sbbb
push
int3
pop
jno
sti
icebp
lock
adc
fcomp
add
add
mov
add
ret
dec
adc
addb
push
loope
sub
leave
cmp
pop
test
fsubrs
xchg
mov
bound
lahf
loope
add
popa
push
and
push
pop
jl
or
mov
xchg
lods
push
add
cmp
fs
pop
jnp
movsb
lret
js
sbb
aaa
cli
das
daa
add
xchg
adcl
sarl
fadds
shlb
hlt
mov
jge
sti
nop
and
adc
loop
pop
jmp
icebp
ja
sbbb
addb
push
sbb
sbb
xchg
or
fiaddl
jmp
pusha
movsl
xchg
push
xlat
jbe
leave
sub
aas
add
loopne
roll
push
ss
push
mov
stos
mov
xchg
mov
cmp
push
and
and
jns
jne
clc
sahf
inc
jbe
stos
lds
addl
adc
mov
jmp
jo
ja
test
mov
lret
mov
sub
xchg
xchg
add
mulb
decb
arpl
insl
xor
and
sahf
popa
sbb
fiadds
aam
iret
cwtl
mov
pop
es
or
and
sbb
dec
sub
pop
cli
imul
jle
movsl
pop
andnps
add
dec
outsb
jmp
lret
lret
add
add
xchg
xor
jl
nop
popf
xor
movsl
xor
add
jmp
pop
push
mov
jne
fstpt
pop
xor
orl
divl
daa
sub
jae
xor
add
push
int
sub
repnz
fidivrl
pop
les
loopne
aaa
icebp
push
imul
packuswb
loopne
adc
pop
insb
adc
xlat
lret
mov
push
push
or
test
std
push
add
dec
sbb
xchg
pop
adc
jae
pop
pushf
inc
fs
arpl
mov
movsb
push
add
sarl
adc
mov
shlb
lea
inc
out
movsb
inc
movl
dec
add
or
adc
fmull
aas
adc
dec
and
outsl
sti
xchg
out
adc
out
shlb
loopne
pop
pop
loopne
sar
add
jns
fiaddl
call
lods
adc
outsb
mov
push
adc
cltd
movsb
leave
lods
add
cmp
jno
push
or
sub
mov
mov
cmp
mov
mov
add
lret
jo
jbe
mov
add
in
add
mov
cmp
jno
dec
add
cmp
xchg
add
pop
int3
mov
xchg
shlb
sub
sahf
es
xlat
xor
xchg
popa
cmp
jns
jae
aam
into
push
les
lock
add
or
ds
insb
jp
fadds
push
pop
aas
shlb
clc
sub
sbb
pop
mov
sbb
addr16
pop
lods
add
imul
sti
sub
cwtl
leave
add
push
into
les
xor
xchg
mov
test
ja
cmpsl
dec
mov
mov
push
add
add
pop
add
fiadds
inc
sbb
add
js
aaa
cmp
imul
sbb
jg
lock
cwtl
sbb
pop
arpl
fwait
dec
and
lcall
or
outsl
ret
stos
aas
xor
in
hlt
andb
cli
add
or
stc
add
fstl
cld
mov
adc
lcall
adcb
pop
fiadds
jge
and
xchg
cmp
pop
xorb
mov
jecxz
adc
add
push
and
pushl
adc
enter
dec
cmp
icebp
mov
add
js
lods
jg,pn
add
mov
dec
add
inc
movl
loopne
push
repz
mov
int
xchg
sub
push
adc
mov
mov
and
fildl
inc
inc
or
aam
add
sub
or
mov
xchg
scas
push
mov
incl
push
adc
daa
test
xchg
push
and
or
sbb
pop
inc
add
dec
repz
lea
outsb
push
fwait
das
add
out
jae
xor
add
mov
shll
mov
fistpll
sbb
xchg
shrb
mov
and
jbe
cli
sti
add
sub
lret
out
adc
test
popf
jg
add
xor
push
push
mov
fisttps
add
add
push
or
sbb
xchg
pushf
add
orl
jge
dec
mov
insb
xchg
roll
add
lahf
int3
push
lds
cmp
scas
xchg
inc
das
inc
mov
loope
aaa
xlat
xor
in
push
ljmp
push
pushf
pop
add
imul
and
inc
aam
mov
pop
cwtl
xchg
sbb
les
mov
iret
andl
test
mulb
inc
or
jbe
imul
push
jmp
decl
ret
idivb
sbb
stos
add
movsl
mov
xor
and
fiaddl
mov
jo
pop
ret
fstpl
mov
xor
loop
xchg
in
xchg
scas
inc
inc
popa
mov
sub
inc
adc
scas
add
cmp
push
mov
subl
cmp
pop
adc
jge
add
in
jg
add
jmp
mov
adc
or
sbbb
addr16
bound
mov
cld
out
mov
sbb
out
inc
popa
and
loop
inc
imul
test
arpl
cmpsl
adc
adc
cmp
mov
pop
cmp
inc
aam
out
push
movb
out
jecxz
lcall
sub
outsl
in
mov
ds
add
or
int
sub
xor
xlat
push
or
add
js
out
adc
cwtl
jbe
ds
js
shll
jo
cmp
add
icebp
push
mov
mov
jne
xchg
or
xchg
and
mov
mov
movsb
imul
outsl
add
xchg
stos
jg
dec
hlt
pop
xor
in
mov
mov
aas
dec
nop
add
jge
xchg
incb
mov
ret
sahf
pop
or
jne
push
inc
sbb
out
adc
das
push
pop
sahf
stos
or
jo
js
sbb
cwtl
or
adc
or
pop
pushl
pusha
cmp
mov
aad
add
stos
or
fwait
into
andb
jo
mov
fnsave
test
xchg
adc
and
inc
push
add
ret
movsb
lds
pop
xlat
outsb
pop
xor
test
xchg
orl
shlb
mov
insl
mov
mov
lcall
gs
fidivrs
out
imul
test
pusha
xor
adc
xchg
mov
inc
and
push
xor
push
shr
std
repz
push
xorb
push
pop
mov
push
es
xor
les
add
cmp
inc
loop
ss
sbb
mov
jecxz
sbb
pusha
out
jmp
pop
movsl
pop
in
add
jne
jge
add
lds
jle
pop
jnp
stos
shlb
fistps
xlat
decb
mov
hlt
adc
cwtl
ficomps
push
ds
test
ds
ja
add
setp
imul
js
mov
sbb
fstps
mov
adc
sub
cli
or
mov
movl
aad
adc
push
cmp
xchg
icebp
movb
sbb
jbe
mov
js
iret
jno
test
cmp
aas
cmp
daa
xor
test
gs
xchg
pop
cltd
push
add
mov
jp
sar
dec
xlat
lea
inc
pop
inc
cmp
adc
or
cmp
gs
add
cmpsb
roll
jl
inc
sbb
xchg
pop
mov
lret
pushf
add
cmp
add
mov
xor
addb
add
sbb
add
add
adc
mov
xchg
repnz
rorl
lods
test
in
xchg
repnz
add
sbb
adc
pushf
xchg
arpl
xlat
sbbl
or
pop
into
dec
and
addb
cmc
pop
sbb
mov
and
xchg
adc
push
add
icebp
push
jno
gs
in
or
sbb
push
fdivrs
xlat
or
mov
je
mov
mov
cmpsl
xor
or
and
add
dec
test
or
enter
shlb
adc
sub
sti
cmp
push
clc
sub
loop
add
fildll
ds
dec
or
shlb
pop
fistps
xor
xor
enter
aam
add
sti
pop
sbb
push
shlb
lret
lock
xchg
stos
cltd
sbb
orl
inc
cld
fldl
and
out
inc
xchg
adc
insb
add
jo
gs
adc
stos
xlat
adc
push
insl
clc
pop
pusha
es
pop
out
mov
nop
popa
sti
push
add
pusha
imul
and
adc
or
enter
xor
add
inc
xor
and
pop
icebp
add
scas
jb
inc
cmp
sbb
xchg
and
sub
push
leave
xor
or
out
fwait
and
addr16
inc
cmpsb
mov
pop
outsl
pop
sbb
lahf
or
dec
out
sahf
mov
push
sbb
adc
das
add
push
dec
fldcw
cld
mov
pushf
and
ret
mov
sti
jl
test
push
mov
arpl
ds
idivb
cmc
push
cwtl
dec
in
mov
jb
push
dec
pop
jge
cmp
outsb
inc
and
repnz
fistps
test
cmp
cmpsl
fldcw
jge
add
lock
xor
cmpb
pop
push
jge
cld
push
dec
pop
out
fmuls
sahf
pusha
outsl
jg
xlat
adc
aas
repnz
and
scas
mov
nop
insb
dec
ss
sbb
inc
lcall
fs
sub
in
lahf
test
jecxz
xorb
fmuls
out
mov
call
sbb
adc
into
mov
xchg
or
in
mov
dec
lret
pop
cmpsl
ds
inc
add
add
adc
std
insl
lret
ja
out
cmp
sub
lods
fsubs
scas
and
les
insb
in
adc
adc
or
or
mov
or
and
mov
fsubs
xchg
bound
and
fprem
adc
movq
icebp
out
nop
pop
add
sbb
dec
add
inc
or
xchg
stos
mov
jb
nop
pop
adc
in
mov
xchg
xor
or
add
and
jp
mov
sub
and
fwait
popf
add
test
jne
adc
sub
mov
adc
shll
xchg
pop
stc
and
or
pop
pop
mov
jne
or
xlat
ret
or
push
fbstp
and
fistps
add
test
fidivrs
adc
or
jb
mov
xchg
cld
adc
enter
shrl
xchg
inc
push
dec
and
mov
add
mov
hlt
xorb
adc
adc
cld
pop
pop
push
sbb
push
sbb
cmp
xchg
mov
sbb
sub
sbb
lahf
shrb
pop
pop
sub
sub
or
cmc
in
stos
jge
test
subl
cmp
push
mov
mov
jb
js
mov
jbe
movsb
and
dec
add
pop
movsl
xor
inc
repz
push
xchg
or
mov
pop
das
and
call
call
imul
or
inc
mov
xchg
dec
push
or
mov
arpl
adc
or
lock
adc
subb
outsl
icebp
lcall
sub
sbb
movsb
mov
push
xchg
and
sahf
sbb
sub
xor
sahf
mov
in
inc
inc
pxor
dec
in
push
xor
xchg
or
addb
or
add
ret
or
int
jg
inc
in
or
adc
and
xchg
adc
stc
inc
cwtl
add
fwait
jnp
xchg
pusha
cwtl
inc
dec
pop
in
pop
inc
xor
ds
jmp
clc
mov
gs
sbb
fisttpll
add
add
mov
imul
mov
mov
jmp
imul
xchg
shll
or
inc
pop
adc
dec
rolb
in
pop
and
lcall
sub
pop
hlt
nop
aaa
adc
pusha
sahf
mov
push
leave
add
add
cmpsb
dec
inc
loopne
cmp
add
ret
cld
stos
pop
fldl
xchg
xchg
jo
loopne
inc
dec
add
jmp
sbb
cmc
test
std
inc
push
xchg
iret
outsb
adc
push
mov
ds
push
sbb
jnp
cmp
lcall
dec
add
test
or
inc
xor
outsl
pusha
inc
push
mov
es
daa
adc
popa
xor
xchg
dec
adcb
inc
sub
fldenv
lock
jns
pop
add
and
xor
shlb
sbbb
xchg
addb
add
fbld
add
lret
adc
ljmp
mov
dec
call
adc
mov
int
imul
mov
shlb
dec
pusha
sub
pusha
pop
cmp
or
outsb
call
xchg
sbb
cmpsb
aas
or
arpl
xorl
mov
and
cwtl
xor
out
adc
push
stc
sbb
pop
out
sahf
scas
andb
or
add
mov
mov
add
es
cmpsb
fmuls
in
mov
scas
popa
add
sub
and
fdivs
push
sub
jge
cltd
shl
inc
test
hlt
pop
lcall
hlt
and
inc
ficomps
push
rcrl
addb
and
and
in
mov
cltd
xchg
push
and
inc
dec
sbb
sbb
add
fnstenv
sbb
mov
xchg
or
bound
and
xor
and
nop
aad
jge
adc
mov
and
add
insl
sub
hlt
or
mov
pop
dec
out
mov
in
xchg
inc
ja
and
mov
aas
push
push
pop
mov
sbb
dec
dec
cmp
adc
or
sbb
jmp
rcrl
lods
das
mov
jo
add
add
xchg
cmpsb
shlb
mov
popf
daa
mov
inc
dec
xchg
sbb
cmp
xor
add
inc
sbb
adc
mov
mov
rcrl
sub
fcoms
leave
cmpl
add
xor
popa
sti
jb
push
and
daa
cmovnp
std
mov
add
pop
lea
dec
stos
enter
ret
add
mov
lock
inc
xchg
mov
lret
dec
pop
jg
sbb
jl
mov
mov
xor
fstpl
into
lods
and
xor
inc
outsl
add
mov
or
sbb
or
cmp
jbe
add
rclb
inc
scas
stos
add
cmp
sbb
sahf
mov
ljmp
inc
sbb
pop
sti
lea
in
adc
add
inc
mov
add
fidivs
mov
gs
mov
mov
and
jo
cmp
add
push
iret
roll
and
gs
inc
push
add
lret
mov
cmp
jge
and
sbb
xchg
icebp
jg
cmp
cmp
pop
xchg
adc
int
aam
mov
lods
jns
adc
and
outsb
aam
add
xor
repz
jmp
fsubrl
imul
stc
pop
sbb
iret
and
mov
sub
scas
mov
mov
pop
mov
nop
in
sbb
mov
and
sub
sbb
scas
insl
daa
add
in
push
add
js
or
ss
push
sbb
out
test
add
and
jle
sub
mov
fs
add
inc
pop
sbb
pop
xlat
dec
mov
dec
sub
add
jl
data16
jb
in
or
jg
jne
cmp
add
out
leave
add
pop
pop
add
int
mov
cmpsl
sti
add
pop
popf
mov
push
add
dec
push
push
ret
loop
mov
inc
bound
or
andl
push
dec
ffree
into
out
addb
imul
xchg
lods
repz
ljmp
add
pop
inc
push
or
mov
lahf
xorb
adc
loop
add
lret
ficomps
sahf
gs
add
xlat
push
test
push
mov
push
shrb
or
pop
mov
mov
sti
add
xchg
sub
and
loop
pop
rolb
adc
cmp
jne
sar
rcr
push
loopne
or
xor
add
jb
inc
outsb
dec
or
xchg
and
lock
repnz
and
xchg
mov
cwtl
mov
push
xchg
jecxz
aam
add
adc
add
cmpsl
out
xor
js
or
mov
xor
add
ret
xchg
pushf
int3
fiaddl
and
push
leave
push
mov
add
out
dec
int
test
add
dec
and
add
stos
cltd
mov
popf
std
mov
mov
xor
mov
pop
xchg
cmp
jne
scas
stos
xlat
dec
pop
lods
pop
dec
cltd
out
and
out
sbb
add
add
dec
lahf
dec
push
add
xor
add
push
dec
insb
add
push
or
and
fnstsw
mov
mov
add
sub
in
orb
xor
cmp
jecxz
stos
dec
mov
xor
loope
jns
pop
xchg
add
in
push
lea
add
ficompl
cmpsb
clc
aam
sub
arpl
popf
aaa
popa
movsb
jo
push
mov
mov
or
add
jb
stos
outsl
and
and
pushf
lods
adc
push
inc
mov
aas
jo
sarb
pop
out
lret
jg
sbb
mov
jmp
fldt
push
mov
sahf
xor
jnp
dec
leave
dec
imul
sub
adc
loopne
mov
or
pop
add
cmp
pop
dec
sbb
pusha
in
adc
mov
or
fs
mov
daa
gs
mov
xor
xchg
add
push
aas
fistpll
lret
in
in
cmp
mov
xor
repnz
sbb
mov
pop
div
push
je
lock
push
add
inc
loope
jb
leave
mov
sub
mov
faddl
sbb
and
dec
add
and
fsubs
xchg
add
nop
outsl
cmpsb
push
das
subl
sarl
dec
pop
scas
inc
xor
or
pop
lahf
xchg
ret
dec
ds
add
nop
or
js
xchg
add
inc
pop
push
sub
and
jle
inc
add
inc
outsl
aad
add
sub
in
enter
lock
repnz
jge
add
and
add
loop
mov
push
daa
ja
lret
sub
pop
xor
push
add
fisubrl
xlat
dec
and
in
pop
add
test
fs
sahf
fisttpl
sar
imul
adcl
mov
aad
push
mov
dec
mov
push
lcall
add
push
fisubrl
or
mov
aas
std
add
jne
in
insl
xchg
es
add
inc
ss
arpl
shll
sahf
and
fidivl
dec
pop
daa
psrlw
jl
insl
add
xor
sub
lods
nop
insb
jge
add
pop
loope
pop
pop
add
out
das
or
sbb
insl
in
fs
sarl
stos
lahf
ds
add
popa
flds
cmp
mov
add
cli
adc
pushf
pop
push
or
xchg
add
ss
bound
stos
popa
fiadds
dec
adc
mov
in
add
sbb
pop
iret
fs
xchg
daa
mov
lds
jo
push
jb
add
repz
mov
jg
add
inc
mov
scas
add
and
add
mov
and
add
lods
stos
mov
scas
add
xor
dec
imul
dec
dec
sti
shl
inc
add
mov
push
add
fstl
lods
xrelease
push
rcrb
sub
fmul
push
xor
sub
cwtl
xchg
ja
jnp
pop
push
and
xchg
and
push
xorb
xchg
enter
inc
fistps
pop
enter
cmc
shlb
shl
push
cmp
inc
mov
fdivrl
jne
or
jle
stos
jo
xchg
cmpsb
insb
sub
pop
push
call
dec
fcmovnbe
out
jae
sbb
movsl
add
inc
adc
dec
call
sub
xchg
test
outsb
leave
mov
lds
sti
iret
icebp
in
and
jecxz
stos
jle
adc
jnp
add
lea
add
roll
repnz
mov
insb
cmp
subb
pop
inc
xorl
adc
adc
mov
ds
popl
jecxz
sbb
loope
sub
add
loop
add
arpl
dec
test
cli
sub
xchg
or
lea
lds
icebp
into
aas
jecxz
dec
pop
shr
xor
addr16
lods
push
mov
js
mov
mov
shrl
and
push
xchg
outsb
jbe
rcrb
sbb
sub
ljmp
ds
xor
xchg
adc
pop
add
mov
add
repz
leave
into
jno
push
fwait
incl
orb
pusha
pop
sub
pusha
adc
movsb
mov
add
dec
and
incl
or
sub
enter
push
aad
outsb
xor
and
js
dec
jns
jo
sahf
add
inc
add
mov
faddp
adc
popa
xchg
pop
cmp
jb
shlb
shl
push
cmp
cli
imul
in
add
stos
or
push
adc
jbe
fstpl
arpl
add
aas
sub
pushf
add
sar
es
jp
stos
or
outsl
out
xchg
dec
aad
cwtl
sub
inc
test
lods
repnz
jle
dec
fists
and
add
push
cmp
or
js
push
mov
popl
cmp
pop
fsubrl
shlb
xor
out
add
stc
lret
lea
inc
add
add
int3
mov
add
pop
pop
pop
xor
movsb
dec
or
mov
pop
push
into
add
xchg
or
sbb
cld
rorb
add
dec
out
lds
xor
add
loope
and
fisttpl
insl
ret
cltd
jl
or
movsb
insb
sbb
or
fsub
push
or
mov
xor
mov
pusha
sbb
arpl
mov
mov
sbb
push
xor
mov
lcall
aam
push
adc
or
sbb
pop
mov
jg
in
inc
sub
lods
add
fs
pop
dec
sarb
push
addl
or
mov
negb
movsb
fldenv
and
popa
lea
add
adc
repnz
add
jle
mov
std
xor
jmp
clc
test
data16
inc
outsl
and
or
out
rcll
xchg
stc
inc
xchg
xor
mov
pop
push
sub
or
std
push
or
ret
shll
jb
popf
jo
sbb
rol
or
xor
add
cmpsl
xor
cli
sub
pop
lcall
dec
sbb
or
pop
insb
leave
shlb
ljmp
push
lods
test
or
jg
inc
mov
pop
inc
pop
or
jmp
shll
repnz
cmp
or
pop
sti
addb
sub
push
cld
add
mov
push
sub
jle
sbbb
add
push
cmp
sbb
add
les
cmpl
aaa
adc
sti
shrb
mov
negb
cwtl
cld
inc
push
repnz
les
aas
mov
rcrb
cmp
ds
int
test
xchg
pusha
push
mov
dec
cmp
add
lret
arpl
and
xchg
ja
jg
test
out
sahf
cltd
cmovs
je
jecxz
in
cmpsb
and
loope
addl
inc
test
shlb
std
lahf
cmpsb
pop
sbb
lock
sub
mov
add
sahf
aad
fs
sbb
orb
or
cltd
pop
orl
inc
notl
aas
add
add
push
jmp
pop
add
test
pop
xchg
add
sub
pop
dec
in
js
pop
mov
mov
cltd
sbb
cs
movsl
sbb
sbb
dec
mov
je
xor
jbe
add
je
add
or
add
xchg
mov
xchg
pop
int3
or
jmp
pop
xchg
nop
add
mov
cs
fdivrl
cmp
shrb
mov
add
stos
into
inc
roll
push
add
popa
icebp
inc
lret
xlat
cltd
and
filds
add
cld
sbb
insl
ljmp
in
sub
add
nop
mov
jnp
ds
add
mov
jne
mov
jbe
mov
push
gs
nop
xor
mov
sub
mov
outsb
push
pop
mov
lock
add
movsb
int3
rolb
dec
push
dec
cmpb
jns
out
aas
ret
jnp
jmp
inc
cmp
cld
pushf
bound
lcall
shrb
push
lock
adc
in
mov
inc
icebp
movsb
out
lods
popf
add
sub
xchg
mov
inc
int3
push
mov
repnz
int
insb
jmp
add
xor
xchg
movsl
jle
sbb
shlb
mov
movlps
sub
mov
fcomp
mov
xor
jp
add
mov
rcrl
or
rcl
jp
stc
dec
dec
or
inc
sbb
add
or
fistpl
mov
push
outsl
bound
add
pop
out
cmp
int
shlb
rclb
add
aam
gs
xor
add
ffree
xchg
inc
arpl
or
mov
push
ret
add
nop
les
fwait
push
shlb
mov
xor
clc
orb
mov
repz
movb
inc
std
mov
add
add
ret
add
in
push
lds
outsl
sub
fcomps
sbb
addr16
outsb
push
les
jge
jne
pop
xchg
imul
and
in
and
pop
enter
add
lret
mov
mov
lods
inc
fnsave
or
add
fwait
adc
ljmp
insb
in
lods
sub
add
jno
popa
stos
xor
jo
inc
cmpsl
mov
icebp
pusha
jl
clc
inc
jae
loop
xorb
in
cmp
shl
add
xchg
add
xor
out
repnz
sbb
add
pop
inc
loop
icebp
scas
push
pusha
adc
pop
sbb
jl
add
dec
inc
sub
das
subb
pop
xchg
gs
and
inc
push
sub
add
xchg
or
je
add
aaa
mov
inc
push
xor
xor
int3
push
ss
popa
sub
cmp
bnd
rolb
rcrb
repz
test
push
pop
fnstsw
addl
aaa
xchg
and
xadd
lcall
outsb
xor
loopne
imull
scas
push
nop
adcb
or
jbe
inc
cmp
mov
mov
dec
cmpsb
lods
push
xchg
in
jp
add
dec
call
cli
cmp
inc
sub
pop
add
adcl
push
shlb
enter
add
jp
scas
mov
add
test
mov
sbb
ja
ljmp
sub
scas
add
inc
out
cmp
pop
jbe
sti
das
sahf
rclb
hlt
inc
int3
add
xor
ror
or
push
ljmp
cmpl
xchg
pop
inc
push
push
inc
inc
mov
sub
jge
add
adc
inc
xor
or
add
aas
adc
ja
inc
scas
stc
push
movsl
jb
sbb
ret
and
and
push
lahf
sub
adc
psrld
cwtl
rclb
nop
clc
or
and
lcall
dec
xchg
mov
and
mov
inc
push
and
and
mov
mov
xchg
iret
jp
fs
or
pusha
add
mov
add
mov
pop
add
cld
arpl
sub
mov
inc
push
dec
add
outsl
js
mov
lods
add
cmpsb
lea
add
cs
adc
jns
ja
movsb
cmpsb
popf
pop
push
dec
out
mov
aad
std
add
inc
cmp
add
adc
jns
test
mov
xor
add
sub
lcall
hlt
lock
sub
mov
sbb
dec
pop
mov
cli
in
add
inc
mov
icebp
repnz
inc
dec
sbb
mov
cmp
jge
lock
cmpsl
test
mov
xor
xor
pop
mov
and
shll
cltd
push
lock
inc
rcll
adcb
cmp
cmp
xchg
stos
out
sbb
inc
add
mov
sub
push
adc
add
mov
push
adc
insl
xchg
jl
push
xor
popfw
inc
dec
add
pushl
add
add
mov
popf
mov
dec
add
inc
xor
cmp
pop
sub
insb
hlt
and
sub
push
add
iret
fsubrl
pushl
mov
xor
jmp
test
rcrb
add
push
shrl
sahf
jbe
push
xchg
inc
leave
clc
stos
loopne
out
add
pop
cmc
aam
adc
add
mov
sbb
add
loope
scas
jle
jb
lahf
cwtl
dec
add
mov
add
test
dec
inc
test
jbe
cmp
add
aam
cmp
icebp
popa
cltd
addb
jecxz
sti
jl
aaa
add
and
repnz
mov
xor
ljmp
in
inc
or
fs
clc
lea
add
inc
xor
movsl
mov
mov
icebp
cmp
xlat
dec
lret
xor
fwait
push
les
cmovo
fidivl
dec
enter
rorl
pusha
mov
fwait
pop
std
pop
xchg
add
jno
fcomps
add
mov
test
je
adc
ss
add
aam
outsl
dec
adc
mov
add
cli
mov
jp
lock
and
sbb
jno
sbb
loop
cmp
adc
scas
push
fcmovb
jle
mov
mov
sahf
repz
sbb
xchg
jae
call
lcall
outsl
movsl
dec
xchg
sub
jbe
add
and
clc
mov
dec
cmp
lock
std
mov
test
pop
pop
add
and
push
and
adc
add
fsubl
xor
gs
add
mov
iret
pop
pop
pop
fwait
sbb
nop
cmp
xchg
pop
mov
push
fstpt
add
cwtl
jb
test
data16
xor
fisttpll
popa
add
pop
scas
shl
and
add
mov
lahf
add
xchg
clc
fiaddl
push
mov
outsb
inc
dec
jo
add
and
imulb
lock
scas
out
xor
jae
and
xor
push
leave
imul
mov
bound
xor
out
pop
jecxz
cmp
add
cmp
cmp
add
cmpsb
pop
mov
imul
cmp
jb
add
ds
mov
loopne
push
add
lock
cmp
lods
mov
pop
fnsave
xor
adc
addr16
ret
add
cmp
jne
and
pop
movsb
xchg
add
xchg
sbb
pop
lods
cmp
mov
and
mov
clc
add
mov
sbb
pop
mov
aaa
add
int3
pop
adc
add
cwtl
rcrb
push
out
jns
push
subb
int
out
push
and
lret
cmc
fbld
btc
dec
adc
sti
call
or
xchg
inc
cmp
pop
ljmp
pop
cmpsl
scas
ds
lock
jno
add
jecxz
mov
in
mov
fcoms
ret
popa
add
mov
jnp
add
xor
mov
ja
sub
sub
add
repnz
cli
lock
clc
push
lods
lret
je
push
add
leave
cmpsl
andb
test
add
clc
dec
js
cmp
cmp
pop
add
jl
cmc
and
aas
sbb
and
mov
sub
in
pop
add
mov
inc
sub
out
aas
inc
ficomps
ret
xor
sub
jecxz
into
jg
shl
mov
add
cli
pop
mov
shlb
repz
add
mov
pushf
pop
ret
or
decl
add
jg
mov
xchg
or
fldl
scas
xchg
ret
ret
adc
leave
pop
sarb
xor
lock
ret
fsubl
sbb
lods
nop
pop
mov
add
pop
jmp
jne
mov
mov
jnp
or
push
xor
andb
mov
sub
or
push
add
dec
cltd
pop
rcll
lods
sbb
adc
add
scas
jnp
sub
xchg
cmp
add
cmp
adc
fcmovne
dec
andb
stos
and
xor
movsb
sbb
insl
add
xor
ror
and
fcompl
shl
sub
cmp
mov
xor
pop
jno
je
lods
sbb
sarb
and
sub
test
fidivrs
aam
stc
out
add
mulb
xchg
mov
in
sti
aam
shl
jle
popf
test
and
enter
into
ljmp
add
mov
add
decb
dec
push
pop
xchg
add
mov
pop
push
fildl
rcrb
or
push
lea
loopne
mov
rcrb
out
addb
shll
icebp
ror
mov
inc
add
pop
pop
mov
mov
fidivl
xchg
dec
push
add
loopne
mov
add
mov
jae
mov
add
orl
repz
add
test
add
negb
adc
dec
sbb
movntps
add
sub
xchg
add
adc
and
mov
aaa
and
test
sti
rcll
mov
and
stos
repnz
cmp
int3
inc
cs
cmp
sub
loopne
in
jnp
mov
add
sub
mov
leave
nop
xor
push
ror
js
mov
enter
pop
mov
cmp
mov
xor
jo
sbb
dec
pop
sbb
jl
inc
imul
mov
shlb
inc
dec
adc
or
add
xor
jnp
mov
repnz
add
addl
cmp
inc
mov
fisubl
add
add
loop
enter
add
mov
or
cmp
xor
int
pop
cs
xor
popf
in
mov
pusha
sbb
add
mov
je
add
xchg
jmp
mov
sbb
and
outsb
out
sbbb
add
jo
pop
xor
leave
and
xor
sbb
add
xor
xchg
mov
dec
inc
adc
push
add
push
gs
xor
in
add
insl
sbb
inc
mov
push
repnz
fildl
cs
shlb
add
push
mov
shll
xchg
andl
in
and
dec
push
push
sub
add
aad
jp
leave
mov
mov
adcb
mov
mov
add
test
cmpsb
dec
loop
push
dec
and
pop
and
sub
test
sbb
roll
ficoms
mov
mov
ds
mov
cmp
sbb
aas
and
movsl
mov
xchg
add
dec
ret
and
push
ror
in
cmp
mov
lret
mov
inc
bsf
movsl
push
test
mov
and
clc
pop
inc
loopne
xor
movsb
sbb
mov
ret
jne
fldl
loope
hlt
js
lds
add
negb
test
push
fidivrl
mov
scas
rclb
mov
xchg
xchg
sbb
or
xchg
inc
mov
jo
outsl
or
add
lea
dec
add
dec
ret
push
cmp
push
sbb
xor
lods
mov
push
push
in
cmp
push
add
push
lds
lahf
shlb
pop
mov
add
into
adc
mov
xor
xchg
xor
mov
push
fxch
js
add
xchg
inc
pop
xchg
push
idivb
in
or
lods
int
jo
adc
nop
push
and
subl
add
push
jmp
mov
inc
sub
or
repz
ret
mov
xchg
dec
jge
push
dec
fisttpll
int
sbb
push
lock
add
pop
jnp
lahf
popf
add
pop
insl
outsl
into
dec
mov
jb
addr16
mov
mov
mov
hlt
push
lock
ret
andb
add
rcrl
push
adc
cmp
and
cmpsl
popa
dec
ss
lret
icebp
or
sub
pusha
scas
dec
add
mov
aam
or
mov
adcl
loopne
add
sbb
sbbb
add
test
mov
bound
lahf
adc
insl
in
lods
roll
icebp
and
in
repnz
jl
cmp
push
mov
push
fidivl
frstor
add
jbe
fnstcw
insl
add
pop
jecxz
mov
scas
dec
es
dec
add
push
addr16
lahf
shrb
adcb
loope
lea
cs
mov
cmp
cmp
mov
push
ret
sbb
sarb
js
jg
sbb
cmp
shr
adc
cmp
inc
mov
nop
divl
in
imul
or
sahf
adc
frstor
rcl
icebp
pop
and
push
mov
or
push
sbb
dec
jo
lahf
mov
je
pop
push
addb
add
mov
shrb
repnz
data16
nop
add
mov
out
inc
dec
sbb
mov
or
mov
sbb
or
imul
pop
add
pop
std
es
mov
or
inc
enter
pop
pop
adc
inc
lahf
rcll
stos
jno
pop
data16
lret
js
test
test
pop
cmc
sub
jbe
jns
add
lret
outsl
shrb
js
shlb
sbb
sub
jg
inc
mov
cmp
ljmp
repnz
cmc
daa
lcall
sarl
loope
cmp
xor
insb
jne
and
loopne
push
jnp
lahf
xchg
adcl
les
ficomps
jae,pn
and
mov
rol
mov
sbbl
pop
or
pop
xor
and
arpl
add
mov
pop
imul
shlb
sbb
test
loope
cmp
in
mov
add
jge
or
add
inc
test
test
cmp
ljmp
sbb
and
test
jecxz
cmp
mov
add
movsl
push
xor
in
fistps
and
movsl
add
sbb
mov
add
es
stos
mov
push
jle
cmp
xor
adc
clc
pop
jge
pop
jbe
mov
ljmp
data16
xor
adc
mov
adc
int3
out
xchg
nop
and
nop
add
pusha
push
in
mov
imul
scas
les
push
cmpsl
stc
cmpb
cmpsb
add
pop
xor
xor
das
add
decl
fidivrs
pop
faddl
jns
dec
fsub
cmp
add
xor
popf
je
mov
test
cmpsl
mov
push
add
int
mov
cmp
or
cmc
iret
cmp
inc
xor
testl
clc
add
mov
cmp
xor
jecxz
dec
ret
scas
xor
and
pop
add
or
cmp
jno
jae
lret
push
in
sub
add
cltd
fsubl
mov
je
repnz
cli
or
cld
ficompl
leave
add
jo
je
xchg
cmp
xchg
sbbb
mov
addr16
push
push
mov
add
aam
popf
xor
inc
inc
push
ss
mov
mov
out
push
ja
sub
fs
sub
pop
adc
xchg
hlt
jbe
fadds
aad
add
mov
rolb
add
fnstenv
jecxz
ja
push
add
mov
cmp
and
je
sub
add
insb
pusha
cld
addr16
mov
ficompl
pop
mov
sbb
add
add
xlat
dec
adc
movsl
mov
popf
pusha
pushf
and
adc
stc
xor
and
ficompl
mov
add
sbb
dec
cmpb
sub
cld
push
xchg
inc
mov
push
or
out
mov
div
xor
out
adc
popa
add
push
push
icebp
fwait
xor
push
mov
pop
add
inc
jl
and
pop
subl
lret
adc
mov
repnz
mov
xor
add
jmp
mov
lods
mov
clc
sbb
cli
pop
les
lret
mov
outsb
inc
lret
pop
add
das
mov
int
mov
pop
out
pop
cli
xor
sti
xorl
inc
and
xor
ja
jl
mov
cmp
adc
cs
cmp
push
popaw
add
or
mov
push
ret
pop
jp
out
inc
add
dec
push
sub
adc
icebp
fldl
stos
dec
clc
adc
in
sub
rclb
rcrl
and
int3
add
lods
outsb
jnp
xor
sub
adc
inc
push
jecxz
xorb
cmp
add
jmp
pop
movsb
xor
push
and
cwtl
in
mov
jecxz
sub
push
sbbb
nop
cmp
sbb
jb
adc
push
sahf
xor
add
popa
cmpsl
push
cmpsb
test
cli
add
in
sub
dec
in
in
xchg
sbb
ss
push
stc
and
fwait
and
insl
inc
icebp
ds
test
dec
aas
clc
or
pop
arpl
adc
cmp
fs
pusha
add
pop
dec
sahf
pusha
cmpb
and
jecxz
xchg
sub
adc
and
inc
xchg
lock
into
push
sbb
add
mov
mov
and
push
icebp
hlt
je
pop
call
filds
rorb
loope
dec
data16
sbb
in
or
inc
sar
add
dec
push
jo
mov
add
popa
adc
fildll
add
loope
cs
and
sbb
loopne
or
and
mov
add
clc
popa
dec
cmpsb
cld
inc
cmp
stc
mov
sbb
xor
in
or
fstpt
add
and
sbb
jns
mov
into
mov
cwtl
cmp
dec
jl
push
fwait
bound
jne
aas
and
mov
inc
int3
add
aas
jp
or
mov
dec
or
scas
mov
rorl
aaa
pminub
and
dec
outsl
js
inc
jmp
das
cmp
test
rorl
push
dec
mov
dec
andb
xchg
sub
stos
faddl
pusha
test
pop
pop
push
inc
add
or
sti
movsl
adc
or
jl
cmp
xlat
ss
shrl
cld
and
sub
xor
push
dec
xor
mov
xchg
icebp
xchg
loop
shlb
iret
outsl
fcmovbe
daa
dec
dec
jo
loope
decb
cmp
add
sbb
add
mov
mov
sbb
addb
icebp
sbb
push
adc
aaa
mov
out
das
scas
movsb
mov
pop
add
sbb
lret
cwtl
aaa
adc
mov
xchg
cmp
or
add
or
nop
aas
add
aad
inc
sub
add
sbb
inc
ds
jo
imul
das
cmp
jmp
sbb
aad
and
mov
cmovnp
movsb
dec
jae
daa
inc
xor
xor
xlat
add
movsb
lahf
std
and
pop
popf
cld
test
je
adc
arpl
jp
push
xlat
xchg
dec
shll
sub
sub
lock
test
notl
popa
sub
loopne
xor
jmp
es
es
or
or
add
or
sahf
mov
into
adc
sbb
mov
and
jmp
cld
out
add
jb
psrad
shrb
mov
jne
cmpsl
cmp
mov
aaa
movsb
mov
call
cmp
lods
aam
cmp
lret
cmp
add
and
lahf
sbb
pop
dec
jnp
adc
mov
adc
mov
add
lcall
mov
movb
ret
pop
xchg
sub
sub
mov
test
into
xor
add
loop
pusha
mov
imul
outsb
mov
sub
push
sub
pop
cld
pop
xor
cmp
and
add
mov
and
mov
xchg
shl
mov
sbb
xchg
cmp
enter
movsb
rcll
add
and
mov
sub
pop
lret
pop
fstpl
push
jns
mov
sti
dec
add
jecxz
addr16
push
or
movsb
adc
jo
jnp
enter
into
add
pushf
les
shlb
lods
rolb
aas
ja
adc
sbb
ljmp
push
pop
shlb
jo
pop
sub
popf
pop
leave
dec
and
test
inc
mov
inc
cmp
jmp
insl
fdivrs
and
sub
out
add
je
movsb
mov
jo
or
xlat
pusha
pop
test
leave
dec
lods
and
add
call
adc
adc
add
or
pop
xchg
aad
push
adc
add
push
cmpsl
adc
add
popa
aam
add
lahf
or
dec
les
push
movsb
outsb
xor
aaa
icebp
fdivl
scas
sub
push
mov
lods
and
sbb
jo
cmc
adc
inc
enter
inc
add
add
imul
aas
pop
int3
cmp
sbb
mov
or
test
push
mov
and
std
and
sub
jno
sub
loop
pusha
das
addl
xorl
xchg
adc
sub
jnp
xor
in
int3
faddl
jmp
cmc
xchg
and
add
inc
test
fstpt
xor
pusha
pop
lock
jmp
setno
cmp
gs
mov
jg
mov
jo
xor
test
mov
vmovsldup
add
pop
jns
mov
adc
and
rolb
addb
jae
outsb
mov
test
sbb
or
sub
gs
or
mov
and
adc
scas
xor
loop
cmp
sub
aad
loopne
andl
jbe
add
imul
cli
das
lods
dec
cwtl
sti
pop
mov
hlt
dec
ret
fdivs
fwait
cmp
mov
js
xchg
iret
in
add
mov
dec
out
cmp
outsb
subb
js
pop
sbb
loopne
hlt
pop
jne
in
rolb
lret
in
fimuls
sub
and
js
add
testl
in
movsb
imul
scas
mov
add
dec
enter
jb
sarb
mov
insb
xchg
and
bound
cmp
mov
lods
pop
ret
popf
call
stos
cwtl
xor
aas
push
xchg
sbb
mov
jp
inc
mov
sub
cs
shlb
jl
pop
lods
ret
and
dec
in
nop
mov
mov
mov
mov
and
mov
dec
out
sub
pusha
or
jne
les
push
stos
sbb
rolb
mov
ja
jl
leave
psllw
addr16
sub
loopne
mov
add
icebp
jo
adc
jnp
inc
bound
aaa
inc
rolb
enter
inc
push
dec
mov
fcomps
add
outsl
sub
jl
std
out
aaa
cmc
dec
mov
inc
xor
xchg
enter
mov
jb
pop
pop
and
push
int3
fcomps
out
sub
stos
fsubl
add
data16
sti
out
xchg
pusha
push
ds
loope
out
jne
ds
aam
in
sysret
int
lcall
in
test
test
clc
add
ds
cmpsl
add
fildll
sub
leave
fs
xchg
dec
and
and
dec
adc
loop
add
int3
scas
sbb
inc
add
push
lds
add
int3
hlt
xchg
ret
xchg
xchg
inc
jl
adc
or
repz
loop
push
xchg
enter
mov
aas
shll
mov
sub
imull
aam
and
add
shlb
jg
push
pop
push
cmp
pushf
gs
aam
inc
cmp
push
mov
or
shll
rolb
add
es
popa
hlt
add
fwait
adc
insl
lock
in
mov
fnstenv
lock
nop
or
inc
cltd
dec
call
outsb
pop
ret
sbb
cmpsb
ficompl
add
mov
xor
add
and
mov
add
xor
dec
add
scas
fsub
inc
and
and
sub
push
add
jg
adc
add
dec
push
adc
outsl
push
addl
jno
inc
test
mov
mov
sti
lock
nop
faddl
stc
cld
mov
mov
out
fmulp
mov
scas
es
mov
push
rclb
sub
add
jmp
loop
and
pushl
enter
xor
pop
xor
mov
mov
cmp
bnd
add
and
cmp
mov
scas
pop
xor
inc
xchg
and
sub
sbb
fldl
add
cli
xor
and
repz
mov
pop
pop
mov
test
or
cld
std
insl
cmp
or
jbe
add
dec
divb
repnz
cld
insb
mov
cltd
loopne
test
jecxz
fcomp
jne
mov
cld
add
shrb
notb
nop
push
push
sbb
scas
dec
add
jmp
jp
setne
shrb
xchg
push
push
aad
xor
sbb
sbb
rorl
and
cs
lret
pop
add
mov
loopne
inc
outsl
jg
popa
inc
inc
lods
scas
call
push
mov
push
pop
sub
test
sub
push
shll
in
sbb
shlb
imul
cld
repnz
out
xchg
jb
add
cmp
or
je
nop
pop
jo
push
pusha
ror
mov
jg
mov
aaa
jbe
add
adc
lret
add
cmp
add
jecxz
add
add
inc
aaa
sub
out
sbb
sub
lds
add
orps
xchg
subb
and
pop
xor
xor
sub
std
cld
movsb
rcrb
pop
lods
xchg
xor
xor
cmpsl
aaa
in
and
fsubr
adc
xchg
std
inc
pop
pushf
lahf
scas
test
add
pushl
push
jecxz
insl
mov
pop
pop
ret
mov
dec
pop
movsb
cmpsl
repnz
jle
rorb
pop
ror
fistl
rclb
pop
js
add
jo
mov
sbb
mov
lods
xor
inc
cs
scas
pop
mov
imulb
sub
movsl
enter
add
cltd
fiaddl
mov
add
dec
cmc
std
add
add
mov
jmp
cmpb
ljmp
push
mov
lock
cmpsl
and
movsl
mov
sub
mov
loope
xchg
cwtl
jo
scas
in
add
popf
into
aad
and
popa
movsb
add
push
sbb
ljmp
inc
loop
xchg
pop
aas
fistps
or
pop
ljmp
jge
xchg
out
fs
cli
fiaddl
mov
mov
sbb
xchg
dec
mov
xor
lret
aam
sarl
int3
push
xchg
adc
jbe
jge
outsl
or
in
lret
mov
rolb
adc
in
dec
scas
cmp
sub
cwtl
add
mov
sbb
cmc
movsb
or
cwtl
xorb
call
or
pop
sbb
mov
outsb
in
imul
cmp
inc
add
cmp
in
cmp
xchg
push
pop
sub
pushf
lods
hlt
xor
pusha
mov
xor
data16
xor
js
push
cmpl
xchg
pusha
cmp
cmp
aaa
add
scas
inc
mov
add
popa
leave
pop
out
pusha
test
cwtl
aad
jae
xor
and
mov
cmp
sbb
jnp
popf
xchg
adc
sbb
jp
int3
xor
dec
add
jnp
divl
lcall
push
int
add
jnp
arpl
or
inc
rolb
xor
clc
ret
adc
mov
add
das
push
rcr
repnz
dec
lea
dec
in
sar
pusha
test
fsubs
mov
std
test
mov
rolb
dec
pop
frstor
aaa
insb
add
fimuls
add
mov
in
dec
adc
out
sub
movsl
push
ja
jae
call
add
aas
mov
and
dec
add
cmp
mov
int3
testl
int
add
jg
inc
mov
nop
push
push
loop
pop
outsb
pop
xchg
test
add
mov
xor
shlb
lahf
ja
pop
mov
mov
sbb
xchg
ds
mov
inc
addb
aam
jo
jne
and
mov
add
xchg
into
in
push
add
xchg
pusha
sub
add
pop
mov
pusha
loop
cmp
mov
and
inc
xlat
jnp
pop
add
dec
mov
mov
and
mov
es
sahf
loope
inc
jmp
bound
add
mov
loopne
fidivl
xor
push
inc
mov
in
sub
pop
and
add
adc
jl
mov
add
jg
jmp
pop
test
jo
jne
add
js
and
add
and
fs
xchg
cmpsl
dec
pop
aaa
movsb
iret
daa
sub
test
push
nop
sub
in
dec
out
push
mov
jnp
xor
mov
mov
rolb
aaa
subl
in
stos
add
fdivrs
in
addb
imul
pop
push
arpl
or
mov
jp
int3
add
test
lea
cmpsb
fadds
mov
out
fdivrs
jne
insl
test
fildl
xor
xor
fwait
nop
and
pop
movsb
add
mov
pop
and
rorb
lret
xchg
dec
mov
call
out
jecxz
push
test
sub
arpl
add
xchg
lret
movsb
sbb
pushf
jmp
mov
enter
jecxz
je
cmp
in
sbb
or
les
pop
and
in
imull
imul
orb
fmull
dec
int
test
mov
push
int3
add
rorb
push
fisubrs
add
dec
mov
sbb
pushf
enter
rorb
jecxz
in
jne
adc
sahf
nop
mov
in
loope
or
pop
sub
js
idiv
lea
add
xchg
dec
bound
enter
ss
out
add
push
lret
subb
mov
leave
add
pop
cmp
cwtl
es
mov
mov
push
pusha
push
lds
cmp
hlt
add
xor
scas
cs
loop
jmp
add
push
fidivl
int
mov
push
push
jo
into
or
add
lahf
lods
test
xlat
inc
mov
or
pop
daa
aam
lahf
xor
push
movsb
xchg
pusha
dec
aam
jae
sbb
pop
and
jmp
cmpsb
cmp
ja
inc
xor
cmpsl
cltd
push
sbb
jb
pop
test
shlb
mov
sti
add
push
adc
stc
push
add
rolb
pop
jb
dec
fldcw
adc
jle
mov
ret
add
sarb
lret
and
mov
pop
add
sub
push
test
cmp
movsb
pop
jne
push
cld
lods
insl
add
or
pop
aam
xchg
xchg
jb
fbstp
test
xchg
jne
pop
cmp
icebp
mov
push
in
jmp
and
mov
in
sub
cmp
add
push
add
ror
sub
mov
jb
xorl
pusha
and
cltd
cmp
subb
add
dec
jo
cmp
jl
cmpb
sub
mov
shr
test
cmovo
cmp
push
dec
dec
xchg
adc
add
je
or
in
repnz
adcl
and
xorb
out
xor
adc
jae
add
test
js
clts
es
repnz
cmp
add
pop
les
add
jg
push
mov
adc
cmc
sub
ficoml
dec
or
push
jl
test
pop
mov
adc
test
sbb
je
inc
cmp
rcr
jo
mov
outsl
cwtl
cmp
mov
fcoml
cmp
sub
adc
cli
adc
les
gs
sbb
cmp
inc
add
out
inc
add
push
subb
cli
out
xor
adc
mov
lret
dec
add
add
mov
xchg
push
push
pusha
fcompl
js
cld
leave
mov
jb
adc
push
push
lds
mov
orb
ficomps
daa
ret
adc
mov
in
jp
test
in
add
jecxz
inc
jo
out
push
push
and
jno
or
add
orb
dec
fadds
cmp
clc
xchg
add
mov
outsb
orb
push
sahf
mov
jmp
andl
cmp
adc
pusha
fadd
sub
test
in
shl
cmc
repnz
loope
pop
mov
pushf
lea
fistpll
push
out
add
sbb
iret
push
sti
add
push
mov
inc
int3
clc
add
cld
imul
shl
jecxz
sbb
add
pop
jmp
inc
mov
add
sbb
pop
sbb
dec
jbe
int
adc
sbb
mov
jnp
sbbb
jp
cmp
int3
add
enter
lock
inc
mov
pop
add
or
imul
inc
movsb
stos
push
shlb
jns
mov
xor
clc
jbe
pop
inc
xor
dec
sbb
xlat
fnstsw
jnp
rcll
or
cli
lret
pop
sbb
dec
inc
aam
faddl
dec
cmpl
fcmovnu
cmpl
add
idivl
or
sbb
inc
std
test
push
lods
adcb
das
cmpb
pop
mov
dec
jne
dec
sbb
pop
out
jbe
pusha
fs
pop
std
inc
adc
push
out
lock
dec
jl,pt
aam
loopne
lret
rorl
loop
popa
cli
dec
rcrb
cmp
aaa
pusha
xor
dec
jl
sbb
jb
or
mov
cmc
mov
arpl
fcom
and
aad
je,pt
pop
pop
es
mov
int3
pop
addr16
cmc
pop
mov
cld
and
rclb
icebp
mov
sbb
mov
push
into
hlt
and
pop
stc
xor
sub
and
ret
mov
sub
lea
or
lds
add
mov
cld
scas
add
shlb
cmp
push
push
push
or
add
dec
mov
enter
fsubl
sbb
and
and
sub
pop
iret
add
dec
push
test
xchg
add
out
dec
mov
add
mov
push
add
in
add
xchg
sbb
pop
sub
ret
ret
movsl
mov
push
lret
and
and
push
xchg
mov
rorl
std
mov
mov
loop
dec
daa
and
jne
js
pop
rcl
fs
fsubrl
mov
inc
sbb
mov
dec
mov
mov
xor
and
and
cltd
mov
lock
lods
pusha
push
arpl
inc
std
jnp
les
ret
faddl
icebp
pop
or
jl
nop
jo
sbb
int3
fidivs
xor
clc
fldl
cmp
mov
pop
push
loope
pop
clc
xchg
aam
pop
cltd
inc
add
dec
lret
cmp
mov
adc
dec
add
pop
lret
push
add
cs
pop
mov
add
nop
mov
cs
mov
int
pop
les
or
test
insb
dec
add
aas
mov
pop
mov
aam
into
xor
out
aam
xchg
addl
push
jnp
add
adc
mov
jbe
or
loopne
add
mov
jmp
or
lret
cwtl
in
hlt
inc
not
add
ljmp
fistl
sub
mov
add
mov
jg
inc
sub
andb
jns
push
sbb
shll
pop
out
push
jno
fwait
push
outsb
cli
orl
nop
adc
fs
js
testb
or
pop
enter
push
subb
shll
adc
push
add
dec
call
mov
mov
add
aas
sarb
or
adc
pushf
insl
or
pop
ljmp
lods
data16
out
ret
js
dec
mov
mov
nop
es
push
add
mov
inc
arpl
cs
pop
and
or
flds
sbb
mov
mov
test
lret
inc
sub
add
out
movsl
lret
xchg
pushf
adc
cmpsl
mov
arpl
add
stc
mov
lods
xor
call
daa
mov
lock
cwtl
pop
or
and
arpl
jnp
mov
pop
push
hlt
cld
nop
push
roll
loop
add
cli
mov
push
pop
push
or
and
or
flds
call
cmp
xchg
mov
test
inc
shrl
or
push
mov
repnz
add
stos
cli
xchg
dec
aad
int
push
add
pop
sbb
sub
mov
sarb
push
xchg
ret
xor
icebp
dec
loopne
mov
mov
sbb
lret
jle
jecxz
mov
sub
xor
mov
aas
nop
sub
enter
sub
ds
out
and
add
std
or
out
pusha
call
enter
movsl
cltd
dec
pop
mov
inc
and
ret
sahf
fcmovnb
or
enter
in
adc
add
add
incl
and
cld
mov
test
mov
dec
add
insb
into
loop
push
xchg
pushf
sahf
and
outsb
push
add
in
pop
stc
lea
sub
add
ss
rorb
push
mov
push
sub
sbb
adc
loop
pop
repnz
mov
inc
hlt
idiv
bound
stos
sbb
add
sbb
out
lods
pop
enter
scas
jl
clc
mov
or
or
mov
aam
and
cmp
addb
fwait
inc
mov
add
push
mov
dec
mov
pop
cmpsb
into
adc
pushf
jl
cli
xor
call
adc
pop
pop
mov
es
and
mov
setb
in
pop
pop
lods
imul
aas
daa
or
inc
sub
mov
add
push
cmpsl
mov
scas
roll
mov
and
push
pusha
add
push
push
pusha
ficompl
push
adc
imul
inc
mov
mov
cmovae
addr16
xor
stos
gs
repnz
nop
or
inc
mov
adc
xlat
add
roll
sbb
sub
jno
sbb
fmuls
andb
mov
fwait
and
dec
ljmp
lret
mov
push
adc
add
add
fsubs
mov
add
subl
mov
jbe
mov
xlat
adc
sub
pop
push
andb
xchg
add
out
jns
call
clc
cmp
loopne
jl
add
loope
add
leave
cli
popa
dec
pop
xchg
inc
mov
adc
and
iret
orb
cltd
push
dec
rclb
adc
shll
jb
sub
push
in
xchg
xchg
in
xor
gs
leave
add
or
dec
mov
pop
jp
pop
mov
inc
sbb
sub
push
jge
add
lods
cld
and
push
out
ror
push
inc
xchg
push
loopne
xchg
add
fwait
xchg
cwtl
adc
cwtl
xor
mov
std
sub
sbb
enter
mov
leave
jae
decb
or
mov
repnz
xor
ja
add
sbb
jno
sub
sub
and
mov
add
mov
jo
push
int3
and
add
test
jne
inc
mov
imul
in
push
sbb
jns
jbe
in
adc
repnz
fsubs
inc
cli
mov
shrb
js
mov
testb
fidivs
nop
cmp
lret
jg
mov
addb
and
add
daa
jbe
and
xchg
or
mov
mov
std
jle
add
aam
fistps
loop
push
pop
mov
lds
fldl
xor
and
stos
or
stos
mov
adc
fwait
mov
xchg
fiaddl
mov
test
xchg
mov
testb
pop
lcall
sbb
cs
add
and
cmp
cld
je
stos
dec
adc
mov
add
adc
adc
out
mov
and
cwtl
and
fwait
inc
ja
cmp
add
jmp
test
enter
pushw
dec
pop
cmp
cmp
test
movsb
mov
fs
mov
shlb
xchg
hlt
pop
cmp
add
jecxz
fsubl
cmp
sbb
popf
daa
outsl
nop
aam
cmp
arpl
mov
insb
jns
sub
aad
in
cwtl
adc
push
mov
outsb
popf
mov
scas
add
sbb
hlt
add
add
pop
add
jmp
pop
xchg
mov
mov
lock
jp
push
cwtl
or
adc
mov
pop
mov
mov
pop
add
ja
adc
lret
jg
or
sub
int3
add
shrl
jbe
jbe
push
pusha
les
xor
mov
scas
adc
movsl
xlat
lods
add
lret
xchg
aad
sbbb
stc
mov
pop
dec
push
les
add
cld
pop
push
loopne
sbb
out
mov
add
sarb
stos
and
or
push
aam
outsb
xchg
mov
pop
pushf
iret
fwait
mov
sub
pop
add
lods
and
test
repz
adc
decl
mov
scas
lods
mov
stc
out
xchg
adc
js
and
mov
mov
jg
jne
add
sub
add
leave
cmp
out
mov
adc
xchg
mov
fwait
mov
lock
stos
dec
int
hlt
mov
xor
negb
dec
pop
adc
jnp
loopne
addr16
popa
mov
add
adc
icebp
lea
imul
dec
inc
enter
mov
xorb
fs
sub
insl
js
dec
aas
int
and
cwtl
es
out
and
loope
cld
xor
xchg
call
sbbl
mov
dec
outsb
sub
xchg
and
sub
push
dec
push
sbb
lret
mov
add
cld
movb
add
std
dec
out
jecxz
sub
xor
shr
cmp
lods
inc
add
pop
dec
lret
dec
add
push
sti
ret
nop
push
mov
cwtl
push
xor
in
and
insl
or
mov
icebp
add
out
cmc
jae
add
jbe
mov
pushf
cmp
add
mov
mov
vpshlq
icebp
clc
pop
push
jge
fmull
push
sbb
sbb
aam
jb
pop
inc
jns
ss
xor
add
mov
mov
xor
xor
cli
jp
aam
sbb
add
inc
mov
and
and
jle
xchg
sub
xchg
nop
push
fadds
movb
pop
sub
cltd
fildl
jno
or
inc
xorb
jmp
push
mov
dec
add
sub
inc
xlat
ss
fldcw
mov
pop
bnd
push
cmp
out
or
add
pusha
sarb
gs
or
daa
push
jae
lea
mov
xchg
add
dec
mov
test
cld
add
dec
popf
sub
clc
fcom
pushf
add
enter
fidivrs
cmp
mov
ja
add
fsubr
and
push
xor
scas
sub
out
or
and
sbb
pop
add
fstpl
fidivl
icebp
jb
sub
xchg
xchg
add
jmp
xor
not
bound
js
icebp
add
out
dec
lods
mov
adc
sub
jmp
cmpsl
fsubs
xchg
adc
repz
pusha
pop
rclb
stos
jg
add
mov
cmp
lods
test
clc
clc
xchg
add
mov
xchg
jmp
cmpb
pusha
mov
js
cmp
jecxz
xadd
push
push
imul
scas
mov
jns
in
inc
roll
jp
subl
sbb
sub
sbb
push
testb
mov
or
xchg
das
add
outsl
mov
jge
mov
imul
push
xor
cmove
jno
add
xor
lods
adc
iret
adc
xchg
jp
cmp
testl
dec
cmp
sbb
in
les
xchg
add
jae
sbb
sbb
imul
aam
xchg
add
mov
inc
pusha
mov
insb
dec
imul
jns
or
lahf
jbe
subb
andl
xor
add
cmp
daa
add
or
and
ffree
jns
and
cli
scas
add
cld
dec
or
xlat
cmp
inc
fcomi
shlb
push
cmpsb
adc
lods
inc
sbb
jmp
sub
add
mov
outsl
in
add
pusha
fldl
mov
nop
cmp
xor
popf
bound
add
add
jg
mov
sbb
lret
icebp
testl
push
sbb
cwtl
jb
add
loopne
add
adc
add
test
mov
mov
mov
and
pop
ds
mov
sub
jecxz
cltd
mov
rorl
int3
cmpxchg
lock
out
add
jle
clc
mov
xor
add
paddsw
frndint
push
dec
clc
ja
push
add
icebp
dec
lret
pop
std
gs
in
add
mov
jge
sbb
xchg
add
xchg
stc
call
push
pop
xor
push
stc
or
inc
lcall
xor
les
xlat
inc
fnstenv
cmp
add
fidivrs
xorl
imul
dec
outsb
stc
inc
in
xchg
pop
pop
cwtl
push
mov
xlat
clc
jae
push
add
ror
xchg
enter
insb
or
add
popf
sub
mov
dec
add
mov
mov
loopne
loopne
scas
push
pop
nop
es
push
xor
addl
pop
add
xchg
adc
cmpsl
push
stc
out
pop
out
fcom
insl
pop
sub
sub
xor
pop
imul
add
push
adc
or
push
ds
pop
add
or
lock
nop
rcrb
push
sbb
mov
inc
ret
add
mov
mov
sub
lods
dec
fdivrs
mov
adc
add
inc
and
movsl
or
add
cwtl
jmp
aas
into
add
xchg
incl
adc
mov
mov
dec
adc
add
or
add
push
mov
popa
adc
in
imul
pop
test
sbbb
xchg
jbe
sarb
pop
pop
pop
mov
mov
sbb
or
dec
es
xchg
lahf
into
insl
imulb
mov
adc
test
clc
mov
adc
test
lret
std
iret
push
xor
adc
mov
jno
add
inc
sub
or
push
arpl
loopne
inc
push
or
fbstp
add
das
xor
push
cwtl
cmpsb
push
add
or
add
les
ss
or
nop
loopne
inc
add
filds
wbinvd
mov
sbb
mov
add
lds
mov
xchg
add
je
ffree
clc
add
cmc
fnstenv
mov
and
ds
inc
pop
pushl
mov
dec
or
xchg
sahf
push
xlat
popf
jp
es
or
dec
lock
adc
xchg
sbbb
mov
mov
mov
stc
in
jmp
and
push
xchg
cmp
fs
mov
or
popa
sub
push
insl
xchg
mov
test
fbstp
pop
std
cmc
or
scas
into
push
and
mov
sub
push
repnz
js
mov
fdivrl
lock
mov
jae
lds
popf
mov
add
rorb
filds
ljmp
dec
clc
subb
sub
pushw
es
cli
add
jle
add
mov
ret
mov
test
mov
movsl
xchg
and
cli
and
stc
ret
lock
add
ja
xor
test
scas
roll
jo
and
cld
add
andb
cmp
pop
iret
push
in
lds
cltd
push
dec
pop
xor
add
testl
adc
iret
cmpxchg
add
clc
xchg
ja
add
xor
aam
cmp
cli
dec
dec
xchg
push
push
push
icebp
ss
bound
mov
or
or
outsb
adc
inc
sarb
mov
pop
mov
mov
mov
js,pt
scas
pop
imul
scas
sub
mov
inc
add
fistpl
std
adc
add
mov
in
add
jecxz
hlt
mov
add
xlat
inc
std
mulb
adc
push
and
bound
js
xchg
mov
cmpps
ss
add
xor
cwtl
and
xor
arpl
rorb
cmc
hlt
xor
ja
sbbb
sti
cmpsl
mov
add
imul
int
mov
sahf
lods
ds
imul
pop
addr16
push
test
dec
pop
or
cld
mov
and
xorl
inc
xor
mov
mov
pushf
inc
sahf
pop
xchg
xor
add
sbb
xchg
jge
shrb
mov
lock
add
mov
mov
or
cli
shlb
sbb
push
jle
sbb
insb
xchg
sbb
movl
iret
lock
pop
jmp
nop
insl
xchg
ss
daa
inc
sbb
add
aas
addb
xor
mov
aam
ljmp
xlat
sarb
arpl
out
jmp
lods
add
xlat
fiadds
and
add
xchg
add
imul
mov
call
mov
adc
fistl
inc
sti
xchg
in
add
fadd
mov
mov
int3
mov
sbb
shl
dec
or
xor
jmp
mov
push
and
leave
shrb
add
sbb
cmpsb
ret
add
pop
popa
push
je
inc
sub
das
dec
xor
add
mov
mov
cld
icebp
jb
jae
add
sbb
push
push
pop
pop
leave
and
adc
or
loop
and
add
insw
aaa
scas
dec
push
dec
les
adc
xchg
mov
jp
xchg
add
in
insl
popl
xchg
mov
lods
cli
jbe
fadds
and
and
sub
adc
cmp
movsb
dec
leave
push
or
int3
dec
pop
xchg
pop
inc
add
mov
push
and
fmuls
add
sbb
bound
or
xor
and
rep
call
adc
cli
les
add
int
xor
fs
inc
mull
and
push
mov
add
add
mov
sbb
push
shlb
mov
cmp
test
or
sbbb
jmp
outsb
cmpsl
in
lock
cmc
mov
push
ret
cmpsb
out
enter
test
jp
pusha
pop
pop
aad
adc
jecxz
and
pop
int3
subl
sarb
add
push
int
mov
repz
stc
cmpsb
loopne
mov
and
test
add
sub
push
pushf
add
pop
ss
loop
scas
jns
or
leave
imul
add
jg
dec
out
or
imul
je
nop
or
ret
test
add
sbb
xor
cmp
jbe
dec
mov
xchg
inc
sbbb
push
add
mov
xor
lods
jns
add
cwtl
lods
inc
sub
ja
arpl
xorb
out
leave
enter
xchg
add
add
int3
pop
ljmp
jg
imul
mov
aas
popf
das
loopne
mov
pop
mov
ja
repz
add
dec
add
mov
pop
jg
dec
xor
aaa
pop
dec
jmp
movaps
leave
add
xlat
jg
pusha
mov
adc
fisubl
rcrl
rclb
mov
push
mov
sahf
pop
xor
jae
movsb
js
cmc
jg
jb
add
cmp
sti
dec
jge
mov
adc
mov
test
and
or
inc
shll
pushf
fsts
mov
mov
mov
and
imul
test
aam
add
out
adc
xlat
lea
icebp
pop
add
push
pop
dec
mov
psubq
out
pusha
ss
sub
push
pushf
push
ficomps
lahf
push
sahf
sub
leave
and
inc
arpl
dec
adc
add
or
ds
xchg
jbe
add
add
mov
inc
push
cmp
xchg
pushf
addps
and
test
clc
inc
fisttpl
sbb
adc
add
nop
bnd
xor
outsb
xor
pop
fs
pop
cmp
in
add
std
adc
loope
push
stc
scas
es
mov
faddl
mov
add
fnstsw
mov
pusha
adc
add
xchg
nop
loop
add
sbb
cltd
push
add
inc
cmp
push
out
or
dec
jnp
or
aad
dec
mov
jns
int
arpl
ljmp
sbb
testb
aad
mov
adc
adc
add
or
push
adc
add
pop
repnz
push
dec
add
mov
daa
add
pusha
sub
fwait
push
add
into
iret
les
xor
and
shlb
push
dec
adc
cmp
fs
pop
adc
popf
je
and
test
pop
jbe
sahf
jle
lock
fisubs
int3
call
mov
inc
sbb
rcrl
push
mov
scas
cmp
add
dec
add
or
sbb
scas
cltd
outsb
icebp
mov
xor
lret
xor
sbb
iret
add
dec
cld
mov
xchg
das
sbb
bound
inc
xor
pop
into
mov
fildl
out
sub
rolb
inc
mov
cmc
mov
sbb
popa
xor
outsl
sub
cli
adc
sbb
dec
cs
aad
cmp
orb
mov
mov
fiadds
add
jmp
adc
pop
arpl
lods
repz
out
addl
loop
fdiv
mov
push
xchg
movsl
xchg
in
sub
jge
lret
push
mov
fs
test
test
stc
jae
pop
ret
push
call
faddl
or
mov
jo
das
jne
dec
jae
lods
leave
in
data16
pop
jecxz
mov
sbb
cmp
mov
adc
lods
add
mov
cmp
and
and
xchg
int3
lahf
xlat
cmpsb
pop
shrl
push
mov
es
cmp
and
mov
fstpt
or
and
in
cmp
push
lods
push
mov
je
gs
int3
cwtl
xorb
sbb
add
adc
fildll
imul
inc
mov
fiadds
fs
jo
push
test
and
dec
enter
pop
stc
sbb
pop
xchg
xorl
lret
pushf
and
or
ret
mov
sarb
push
out
adc
pushf
dec
add
lods
subb
flds
pop
fdivr
outsb
inc
jbe
or
adc
pop
sbb
test
fsubrl
xchg
or
add
and
in
add
adc
aas
xchg
xlat
rcrb
stc
pop
xor
xchg
xchg
add
test
scas
add
add
lods
cmpsb
inc
jp
adc
aas
shrb
push
mov
push
cwtl
test
insl
int3
push
inc
je
hlt
push
dec
ljmp
fidivrl
push
cmp
mov
add
xor
std
enter
jae
popl
inc
movsb
push
cld
cmpsb
bswap
push
add
out
std
push
adc
jle
pop
adc
ljmp
popf
movsl
sbb
jnp,pn
or
xchg
pop
in
cltd
ss
add
sub
inc
lea
out
call
shlb
add
jge
and
and
sbbl
jmp
cmp
adcb
jns
inc
jl
pop
pop
lods
call
add
or
jnp
cmp
jb
push
mov
xor
cwtl
das
mov
push
adc
or
stc
sub
out
xchg
ss
cmpl
push
rcr
repz
cmp
jle
mov
xchg
adc
mov
xchg
sti
jnp
mov
lods
mov
jl
stos
sbb
es
xor
cmp
jge
and
data16
inc
add
roll
mov
lcall
mov
test
lea
pop
xor
xchg
jle
add
jl
and
test
xor
add
int3
add
dec
sbb
ja
xorl
jnp
jle
subl
inc
lds
iret
outsl
add
lahf
aam
js
mov
pop
push
jge
loopne
ds
shll
mov
dec
in
add
cmp
cmp
add
repz
dec
xchg
inc
inc
inc
and
add
adc
pop
ss
inc
or
and
jl
inc
scas
mov
jae
jno
cmp
inc
push
jp
test
or
sub
push
jmp
shrb
test
or
inc
out
sub
inc
push
pusha
xchg
icebp
cmpb
testb
jns
or
pop
ds
push
xlat
adc
add
cmpsl
lds
jno
push
call
xor
in
cmp
add
and
mov
inc
add
aam
scas
cs
popf
add
cld
andb
and
adc
mov
add
movsb
push
aam
int
jbe
mov
jg
pop
fisttpl
push
xchg
adc
loopne
and
xchg
rorb
push
mov
pusha
shll
add
xchg
push
into
jp
popa
ja
or
add
pop
sub
int3
lods
pop
jp
bound
lds
std
enter
test
jae
xor
jne
jns
sbb
cmp
add
push
jmp
data16
fnsave
push
xchg
mov
pop
add
push
aaa
sub
or
sbb
cld
and
pop
imul
shll
jae
xchg
pop
test
dec
and
nop
test
sti
and
jae
jnp
mov
aaa
in
rol
mov
and
std
jnp
mov
xor
sbb
ret
adc
ja
add
push
sahf
sub
adc
addl
mov
add
andb
cs
push
cld
fmul
pusha
mov
ret
cmpl
dec
andb
lods
dec
aaa
mov
incl
xchg
push
or
das
lods
xchg
cmp
or
fwait
push
jmp
adc
icebp
pop
xchg
pop
loop
push
scas
lock
ret
dec
into
js
popf
cmp
jmp
gs
add
sbb
cwtl
mov
cmp
push
popfw
push
mov
adc
lret
and
or
ss
cmp
lahf
popa
scas
cld
in
xor
xor
adc
add
mov
iret
push
or
sbb
test
fimuls
and
ja
loopne
mov
cmp
rorl
inc
or
mov
mov
or
push
fistps
addb
rorb
mov
out
pop
movsb
fidivrs
mov
pop
roll
pop
scas
pop
xchg
jle
es
or
xor
mov
xor
ja
sbb
sub
adc
push
les
pop
mov
jno
or
adc
roll
jns
icebp
jb
iret
push
mov
sti
lahf
nop
push
shll
xor
push
xchg
add
fidivrs
jb
out
ret
cmp
xor
inc
xchg
fadds
mov
call
or
mov
or
cmpl
push
sub
xchg
add
mov
pop
cwtl
add
out
sub
bound
imul
les
mov
jp
add
ds
call
leave
xor
pop
jmp
inc
or
push
push
mov
aaa
add
xchg
int
movsl
shl
jb
add
in
inc
and
cmpsl
cmp
popa
push
or
jecxz
enter
sbb
fisubl
mov
dec
pusha
push
inc
stc
pop
jle
dec
ret
int
and
and
sbb
mov
out
add
fstpl
cmpl
ljmp
lods
adc
jae
jl
sbb
xor
push
push
nop
mov
test
roll
inc
xlat
mov
xor
fsubrl
jnp
cmc
in
test
add
jle
aad
ja
fisttpll
ljmp
push
push
pusha
add
jg
fcmovbe
std
sub
pop
sbb
or
mov
xlat
scas
pop
pop
add
arpl
mov
mov
jb
dec
or
pusha
and
cld
inc
shrl
jl
jmp
sub
cltd
lods
fisubs
adc
push
imul
movsl
sub
mov
and
aad
cwtl
inc
outsl
push
add
dec
add
int
jle
inc
xchg
jbe
cmp
cwtl
adc
add
in
push
jne
jnp
das
add
xchg
out
dec
sbb
mov
adc
test
inc
xchg
mov
pushf
push
pop
loopne
scas
stc
pop
stos
adc
dec
and
test
push
or
adcb
xchg
roll
push
xchg
pop
cmp
movsl
pop
sbb
aaa
call
or
nop
xor
leave
cltd
pop
add
pop
xchg
dec
sub
or
xchg
inc
les
add
repz
fistpll
into
outsl
push
mov
or
xchg
ror
sub
cltd
jl
xchg
push
orb
dec
and
xor
xchg
imul
adcl
int3
mov
out
aam
pop
nop
cmp
aas
fidivrs
call
inc
out
cwtl
adc
imul
sbbl
fcomps
mov
cmp
orb
jns
repnz
adc
and
pusha
mov
sbb
add
jg
jnp,pn
inc
cmp
pop
and
icebp
mov
inc
add
nop
and
scas
rolb
stos
repz
add
xchg
or
xchg
cmp
rcr
bound
or
inc
adc
push
or
push
xor
xor
inc
xor
or
int
rolb
mov
adc
les
or
or
dec
jge
out
inc
cmp
addr16
add
cmp
xchg
arpl
mov
mov
cmc
int
dec
cmp
inc
loopne
fcoml
inc
adc
push
mov
dec
sub
mov
andl
mov
cmpb
pop
jbe
idiv
mov
jno
jo
adc
js
test
jb
add
int3
out
popf
pushf
rorb
xor
stc
insl
mov
mov
int
scas
rorl
frstor
repnz
xor
jg
mov
add
or
xor
orb
add
sub
lods
outsb
scas
jl
pushf
and
and
rcrl
ror
add
pushl
add
push
dec
add
dec
