xor
inc
ret
push
push
call
xor
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
call
cmp
jne
push
call
pop
call
push
push
call
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
add
mov
cmp
jge
push
call
pop
push
push
call
call
mov
mov
pushl
pushl
pushl
call
add
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
call
ret
jmp
jmp
cmpl
jne
jmp
push
push
pushl
call
add
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
jmp
push
push
call
pop
pop
ret
xor
ret
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
mov
lea
push
mov
call
add
mov
mov
addl
ret
jmp
jmp
add
ret
ret
xchg
xor
xchg
ret
add
ret
add
popl
push
push
pop
pop
push
xchg
pop
push
xchg
mov
xor
xor
mov
pushl
ret
jmp
ret
ret
push
push
push
push
push
push
push
push
push
push
push
push
call
add
pop
pop
pop
pop
pop
pop
pop
ret
mov
ret
mov
ret
push
popl
ret
xchg
xchg
xchg
push
pop
mul
xchg
xchg
xchg
push
pop
push
addl
pop
ret
pop
push
xchg
ret
push
pop
ret
push
add
add
ret
mov
ret
add
push
mov
push
push
push
xor
push
mov
xchg
mov
push
push
call
call
push
push
push
push
call
push
push
call
push
push
push
push
call
push
push
call
push
push
call
call
push
push
push
call
mov
push
call
push
call
push
push
push
push
call
push
push
push
call
push
push
call
push
cmp
jae
ret
pop
call
incl
lds
stc
call
mov
call
mov
pop
pop
pop
pop
ret
mov
test
je
and
lea
cmp
ja
cmpb
je
mov
lock
je
pause
cmpb
jne
push
push
push
call
pop
pop
mov
lock
je
push
push
push
call
pop
pop
jmp
nop
mov
and
mov
test
je
and
lea
cmp
ja
cmp
jb
mov
push
push
call
pop
pop
mov
shr
add
xor
sub
adc
and
lea
and
add
lea
sub
ja
andl
add
jmp
nop
nop
mov
lea
mov
mov
cmp
jb
add
call
or
mov
movb
mov
pop
pop
pop
pop
ret
nop
nop
movb
mov
shr
add
xor
sub
adc
and
add
mov
mov
push
call
pop
test
je
cmp
jbe
mov
cmpsl
insl
sub
cltd
orb
mov
inc
scas
icebp
fwait
inc
pop
or
jo
mov
xchg
mov
dec
xlat
andl
in
xor
and
mov
fldt
out
mov
or
pop
adc
jmp
pop
inc
jmp
mov
inc
add
call
mov
sub
sti
loopne
jl
out
dec
sahf
or
subb
sub
adc
push
out
or
mov
dec
mov
out
not
push
cli
jno
dec
xor
and
orb
mov
movsb
insl
xchg
mov
mov
or
stos
lock
xchg
jle
push
jb
notb
add
int3
push
into
mov
mov
mov
push
and
nopl
mov
mov
push
or
aaa
push
lret
xchg
fwait
cmp
adc
ljmp
lods
inc
std
fiadds
pop
out
xchg
sbb
stos
popa
or
mov
adc
mov
pop
mov
add
cwtl
jo
xchg
popf
pusha
out
loop
frstor
pcmpgtw
out
outsb
icebp
inc
arpl
cwtl
in
lods
xlat
mov
push
ret
dec
into
fsts
xchg
lret
dec
xlat
ds
sahf
jns
and
sub
outsl
push
subb
and
out
mov
adc
lahf
xor
sub
jg
pushf
sbb
add
inc
xchg
rorb
repz
addr16
out
mov
scas
xchg
mov
ffreep
or
and
negl
sbb
pop
hlt
pop
xor
imul
repnz
cmp
int
out
aad
dec
fistpl
lahf
cli
dec
xorl
lods
ljmp
lds
inc
pop
jp
inc
add
cmp
mov
mov
xchg
lods
int3
out
hlt
xchg
cmova
mov
jl
push
fwait
nop
scas
fidivs
mov
mov
rorb
jne
sahf
pop
into
xchg
pop
or
cmp
cmpb
popa
ret
pop
add
les
or
and
pop
loop
cmp
mov
mov
push
fldt
out
outsb
out
addr16
decb
loop
mov
add
and
add
fadd
or
cwtl
insb
push
push
pushl
filds
xor
xchg
lods
push
and
push
jmp
test
xchg
push
lds
out
loopne
jno
and
jae
icebp
cwtl
lcall
imul
mov
inc
mov
xchg
push
and
xchg
sar
cmp
cmpsb
ss
lahf
mov
push
pmuludq
adc
test
or
pop
cld
pusha
divps
jle
sahf
lods
sub
in
mov
dec
pop
xchg
test
cmp
sbb
xor
pop
rolb
mov
lods
outsl
daa
lock
and
push
loopne
fwait
mov
and
shll
mov
fisttps
stos
adc
pop
popa
sbb
xchg
rorb
xor
cmp
fsubrp
pop
inc
sbb
mov
cmpsb
sub
sbb
clc
shll
push
aad
aad
push
push
jns
rorb
lods
jne
pusha
rcl
adc
lret
fwait
xchg
pop
fisubs
push
mov
adc
xor
fisubs
dec
and
sbbb
nop
push
fldt
add
stc
mov
ret
lcall
mov
rep
pop
cwtl
stos
outsb
pop
movsl
stc
cmc
jmp
adc
mov
jbe
fs
loop
mov
or
rcl
pop
inc
xchg
fisubrl
daa
imul
fidivrl
int
enter
sub
int
xchg
xlat
into
icebp
sbb
inc
xor
jae
push
mov
into
or
cmp
cmc
pop
btr
dec
add
jne
cld
repnz
inc
test
stos
xor
mov
int3
or
js
xor
imul
mov
pop
sbb
cmp
push
clc
or
in
sbb
les
es
mov
inc
inc
and
outsb
mov
into
dec
add
jle
jmp
mov
jne
xchg
or
push
mov
clc
das
mov
xchg
xor
xchg
leave
shrb
icebp
jo
inc
jae
jbe
aaa
push
or
sbb
shlb
in
fcomps
cmp
imul
push
in
sbb
mov
push
cwtl
inc
cmc
dec
idivb
adc
pop
aaa
push
inc
mov
pop
ja
in
sub
rcrb
inc
xor
cmpsl
dec
repz
rcr
mov
or
andl
mov
jmp
and
mov
adc
cmovp
cli
cmpsl
pop
test
aad
add
adc
push
mov
leave
cmpsl
loope
add
mov
repnz
rcrb
call
test
push
inc
cmovns
add
fwait
mov
pop
ds
mov
cmp
dec
js
roll
push
pop
es
mov
mov
iret
push
test
scas
insl
xchg
mov
ret
stc
rclb
pop
dec
sbb
inc
push
mov
addl
pop
dec
movsl
xor
push
shr
mov
xchg
or
stc
sub
lcall
add
sbb
insb
loop
cmp
out
or
cmpsb
test
push
jmp
cmp
sub
fwait
push
mov
inc
lock
sub
or
cmp
fadds
adc
xor
mov
jns
in
bound
hlt
xchg
push
mov
jno
adc
aaa
loope
sub
inc
xor
add
sub
pop
xorb
outsb
jecxz
inc
xor
mov
pop
mov
cmp
popf
mov
xchg
cwtl
and
cmp
xchg
test
aaa
aad
xchg
test
sti
cmc
cltd
push
mov
push
stc
adc
sarb
sbb
jp
jns
push
ja
jl
fdivl
xchg
xor
enter
cmp
xor
in
mov
jp
jge
mov
jne
pop
shll
mov
setp
int3
sbb
and
addr16
mov
and
subl
ds
cmp
pop
lahf
jg
les
push
xchg
mov
pop
aam
jo
or
mov
repz
out
lret
mov
add
repnz
pop
xchg
push
cmp
shrl
dec
loope
arpl
jne
xchg
jns
fnstcw
sbb
mov
inc
inc
xor
mull
mov
cld
jp
cmp
insl
repz
sarb
insl
push
fwait
cmc
insb
fbstp
push
bound
neg
jg
jecxz
pop
into
fldcw
jnp
cmp
ljmp
bound
sti
sti
lods
push
rcll
add
call
fs
pop
sub
push
mov
add
lock
adc
jecxz
mov
fnstenv
push
push
imul
xor
adc
in
test
xor
in
popa
mov
xchg
mov
xlat
xor
inc
repz
push
mov
std
push
shl
lcall
lret
adc
xchg
jmp
push
xchg
test
inc
aam
sbb
add
mov
and
fidivs
inc
cmpsl
cmpsb
in
push
lret
dec
and
mov
add
sub
xor
xchg
mov
lds
add
mov
pop
or
ljmp
jns
pusha
cmp
sub
scas
xchg
push
mov
int3
mov
inc
movsb
arpl
sti
arpl
mov
aas
mov
xor
mov
gs
xchg
mov
sahf
jns
sbb
mov
mov
jo
scas
imul
loopne
cs
jp
sti
int3
std
add
xor
mov
jmp
in
and
jnp
mov
cmp
cmp
sbb
nop
jg
xchg
adc
and
decl
xchg
lahf
xchg
cmc
cmp
insb
jne
aad
roll
mov
imul
mov
loopne
imul
aad
adc
push
je
pop
idivl
outsb
jecxz
inc
push
add
insb
xchg
mov
xor
or
outsl
mov
xchg
push
mov
pop
mov
push
jno
xor
sarb
popf
push
ret
imul
ja
jno
dec
out
mov
popf
test
push
push
insb
mov
or
cli
in
es
mov
and
shl
mov
stos
or
jo
sub
add
popf
pushf
movsl
cmp
inc
gs
rcrl
xchg
xchg
cmc
xchg
cmc
std
sahf
adc
or
jae
lds
push
push
and
loop
movsl
xchg
test
mov
dec
sub
cmpsl
cwtl
insb
jecxz
lret
out
add
sbb
call
xorb
js
xchg
stos
in
add
add
insl
mov
outsl
stos
outsb
and
test
xchg
inc
cltd
pop
cmc
pusha
lcall
xor
out
test
pop
or
push
fnstsw
dec
push
and
cmp
fsub
cmpsb
xchg
add
mov
int
xor
stc
repz
push
fists
loop
jne
sbb
and
lods
fdivr
and
imul
jne
es
inc
and
aad
outsl
mov
adc
pop
out
ficoml
dec
push
push
lret
mov
in
dec
dec
arpl
mov
inc
insl
mov
push
aaa
cmp
rol
clc
xor
jne
ds
gs
gs
cmp
ss
dec
cld
push
leave
sbb
push
mov
lcall
popl
scas
into
xor
adc
lea
daa
xchg
mov
inc
or
push
xchg
std
xor
xchg
pop
push
mov
sbb
aam
repz
loopne
insl
sub
div
adc
fcoml
xor
xor
ret
pop
push
add
dec
cltd
xorl
testb
sbb
and
jge
and
lea
add
pop
cs
adc
fiaddl
out
repnz
roll
subb
or
stos
push
xor
stc
clc
lahf
fwait
stc
add
sbb
stc
inc
adc
and
sub
or
insl
scas
xor
cmp
fwait
icebp
enter
mov
add
addl
shll
data16
popa
or
pop
test
aas
leave
loop
xor
push
out
xor
dec
jmp
adc
add
pop
lret
lahf
mov
lea
and
jns
push
mov
dec
add
xchg
mov
xchg
loop
in
mov
push
cmp
mov
nop
mov
dec
movsl
addr16
mov
repz
jb
repz
pop
add
mov
out
sub
mov
mov
fisttpll
or
adc
dec
cwtl
scas
cs
fdivrs
mov
lods
rcrb
sub
jbe
xor
rcrl
pop
js
jle
iret
outsb
shl
add
orl
pop
adc
adc
push
push
cmpsb
pop
test
xor
movsb
popf
roll
sub
jo
sbb
mov
sbb
nop
mov
nop
push
jae
sldt
and
adc
pop
mov
xor
mov
inc
cld
mov
dec
adc
add
stos
xchg
cli
sbb
sahf
rol
mov
mov
dec
xlat
das
fmul
push
notb
es
scas
lods
je
cmp
jl
stos
mov
jbe
jecxz
jle
jnp
lea
add
push
and
ljmp
mov
sahf
jge
int3
lret
fdivl
mov
mov
xor
push
ficoms
inc
out
lods
inc
or
popa
mov
das
stos
mov
inc
mov
test
sbbl
stos
das
cmp
sub
add
ret
and
repnz
ret
icebp
rcl
inc
push
imul
aaa
or
scas
pop
xor
out
jb
lods
mov
jge
dec
inc
lods
pop
jb
jp
setnp
add
pop
into
lret
and
imul
movsl
adc
mov
rorl
pop
pop
cs
sarl
mov
sub
testb
mov
lock
int3
inc
test
rcl
jmp
push
mov
jno
mov
dec
aaa
test
sbb
push
into
cmp
or
mov
in
andb
fucomp
pop
fld
xor
xchg
xchg
stos
xor
push
add
xlat
and
lcall
pop
ds
mov
push
jle
inc
add
aaa
jns
push
xchg
movsb
sub
stos
fs
jne
mov
rcll
ret
pop
jl
xlat
add
xchg
or
mov
or
loope
xor
inc
fucomip
xchg
mov
fstl
gs
xor
mov
sar
lea
dec
sub
aad
addr16
mov
mov
xchg
int3
icebp
fwait
push
enter
jb
mov
mov
movsb
orb
addr16
nop
addr16
stos
fcmovne
mov
cld
cltd
pushf
out
adc
pop
outsb
sar
jecxz
adc
dec
subb
aad
xor
sub
loop
cli
jl
ljmp
js
or
sbb
pop
jle
jp
cmpsb
aad
add
das
stos
mov
shlb
dec
stc
mov
push
sbb
dec
cmp
nop
adc
mov
es
cmp
repz
aad
fidivl
out
cmp
cmc
push
arpl
sbb
and
inc
mov
and
xor
ret
test
and
outsl
add
bound
adc
in
out
cmp
filds
mov
add
ret
and
xor
add
iret
in
insl
adc
dec
std
mov
out
rclb
or
repz
sub
jb
decl
and
inc
jns
sbb
xchg
mov
in
cmpsb
or
lock
cmpsb
fistl
jge
pop
fcoml
test
mov
push
imul
or
jl
mov
jno
jns
scas
sub
or
push
ja
mov
popa
hlt
int3
and
cmp
lods
mov
jns
dec
jg
and
mov
or
xor
push
sarb
lock
cli
mov
push
das
adc
cmp
fidivl
imul
pusha
in
sub
mov
loope
lock
aam
inc
rcrb
stos
hlt
xor
pop
mov
lods
mov
je
mov
pop
xor
pop
adc
das
cmp
test
and
dec
loope
or
and
mov
mov
inc
xor
js
mov
xchg
dec
int
pop
xchg
jge
pop
fucom
and
shlb
adc
sti
and
pop
pop
mov
popf
out
enter
xchg
ret
cmpsl
jae
in
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
adc
lods
fwait
adc
nop
push
lret
cltd
push
sbb
cmp
pop
pop
sahf
inc
pop
fadds
lods
pop
mov
xchg
leave
xchg
fistpll
mov
mov
out
xlat
push
nop
sbb
mov
or
sbb
adc
test
jl
dec
cmp
popa
push
inc
in
roll
or
pop
dec
movsl
adc
out
xlat
push
adc
pop
rcrb
js
push
push
fwait
mov
xchg
jae
repz
dec
sbb
dec
fidivrl
pop
mov
into
mov
push
or
loopne
nop
jno
data16
jnp
scas
dec
outsb
fistps
shrb
sahf
aad
sbb
loope
mov
push
dec
or
cmp
jne
pop
mov
mov
push
das
cmp
nop
ss
aas
das
xor
shlb
cmp
call
mov
adcl
scas
mov
xor
pop
outsb
and
imul
or
fcoml
mov
or
mov
cld
call
aad
leave
adc
movsl
push
testb
aam
popa
jecxz
and
clc
pushf
sub
test
cmp
inc
or
jae
cmpl
pop
js
mov
and
sub
adc
ljmp
mov
fisubrs
push
fistpl
rcrb
stos
cs
mov
cld
loopne
mov
mov
mov
add
std
dec
xor
or
xor
ja,pn
mov
lock
cwtl
xchg
xor
push
xchg
add
dec
jno
shrb
frstor
cmp
adc
pop
dec
cld
clc
xor
fsubrl
inc
and
pop
aas
mov
jns
or
inc
jmp
xchg
mov
movsb
jmp
sahf
inc
or
jl
fstps
ja
xchg
loope
out
js
lods
addr16
inc
adc
cli
loope
mov
dec
mov
xchg
jp
xorb
xor
push
mov
inc
insl
and
vzeroupper
cs
sub
dec
inc
push
mov
loope
gs
and
or
sti
sti
ficoml
jecxz
pop
cwtl
int3
fwait
cmpsl
sbb
inc
inc
sbbb
loopne
and
shr
sbbb
pushf
sub
int
lcall
sbb
das
mov
jp
sub
aam
xlat
sub
in
aam
mov
xor
cmpsb
clc
clc
stc
repz
jb
pushf
xchg
addr16
addr16
mov
sar
sub
mov
or
test
xor
add
es
insl
movsl
icebp
bound
mov
mov
pop
push
rclb
jo
repnz
addr16
aad
ja
outsl
les
xchg
fs
out
jl
popa
pushf
cmc
pop
enter
mov
mov
in
lods
sub
jb
lock
cltd
push
push
or
xchg
cltd
push
lret
cmp
rorb
sbb
jge
jno
xor
insl
cs
xor
pop
ret
aam
out
mov
pop
orl
pop
int3
testl
dec
cmp
mov
test
dec
outsb
jmp
inc
push
mov
clc
mov
aas
pop
outsb
dec
je
loop
shrl
out
inc
sbb
pop
outsb
movsl
jmp
in
mov
in
push
jne
leavew
ljmp
fs
subb
ljmp
out
pop
xor
decb
cli
cmp
adc
pop
sbbl
aaa
out
mov
sub
popl
rolb
dec
lret
pop
loop
gs
jle
or
jnp
or
in
mov
adc
push
pop
outsb
xor
push
mov
lahf
int3
push
adc
stc
fs
leave
mov
or
ss
lea
adc
push
sub
outsb
pop
inc
and
pushf
dec
sub
pop
push
pop
mov
or
sbb
iret
adc
in
sbb
lcall
jne
pop
adc
push
ljmp
or
cmp
pop
mov
cmp
cli
imul
in
sbb
or
mov
int3
jae
subl
cmp
popf
scas
or
add
cmp
lds
pop
push
aaa
xor
int
jg
jmp
mov
sbb
jg
out
xchg
sub
xchg
clc
xor
inc
jb
xor
xor
pushf
in
stos
pand
or
je
out
in
dec
or
xchg
xchg
pusha
xor
and
stos
cmp
or
arpl
push
bound
jne
push
daa
enter
pop
and
adc
aas
push
clc
int
jl
or
imul
in
test
popf
lods
je
popf
in
loop
popf
ds
movsb
xor
jae
inc
pushf
add
mov
movsl
inc
mov
push
aas
mov
inc
addr16
lea
test
test
mov
adc
insb
mov
xchg
in
mov
mov
fidivs
loope
addr16
pop
data16
inc
iret
cmpb
xchg
dec
lods
dec
push
sub
shll
aam
lods
ret
sub
jle
popa
or
dec
shll
es
fmuls
cmpsl
jg
add
insl
adc
hlt
leave
imul
push
or
inc
or
repz
repnz
pop
mov
stos
mov
movb
adc
or
into
loopne
popa
dec
xor
pop
fcomi
mov
std
daa
or
mov
test
xor
xor
shlb
scas
push
cmp
and
loopne
dec
addr16
mov
movsb
aad
sahf
mov
jnp
jo
or
into
xchg
push
ds
addr16
out
or
out
jmp
shlb
push
mov
mov
mov
pop
pop
xchg
test
dec
or
lock
lahf
cltd
cmpsb
aam
movsb
push
inc
data16
pop
negb
fldl
dec
or
lahf
mov
jecxz
add
pusha
insl
sar
icebp
mov
inc
or
sbb
into
pop
sbbl
movsb
stos
in
fidivl
iret
mov
call
add
sahf
adc
dec
sub
and
push
jle
push
add
or
pop
rcrl
pop
cltd
in
cmp
lea
lret
push
lods
jecxz
ficoml
pop
pop
icebp
stos
lret
jae
mov
inc
inc
and
mov
mov
xlat
test
loopne
mov
xor
fldt
out
sub
fsubr
in
aas
in
lds
stc
fistps
into
in
or
adc
and
fldenv
cld
movsb
scas
xchg
or
call
mov
jmp
dec
dec
jo
movsb
and
arpl
scas
iret
mov
push
cmp
mov
into
mov
mov
cmpsb
repz
movsl
test
push
stos
mov
cmp
cmp
jg
repz
xchg
sub
dec
std
mov
dec
mov
sarb
add
arpl
xchg
cmp
imul
mov
push
xchg
sahf
xor
fists
jl
cwtl
out
out
push
adc
sahf
xchg
cmp
fwait
loop
dec
sub
inc
xor
das
add
fcoms
mov
mov
scas
rcrb
sub
add
inc
push
lea
enter
xchg
add
inc
sub
testl
jp
cmp
inc
mov
xchg
addr16
mov
and
xor
fsub
sub
mov
sub
ret
daa
dec
shlb
es
fsts
xchg
cmc
push
cmp
lds
inc
or
ret
aaa
inc
or
sub
adc
jb
xchg
inc
js
test
movsb
add
adc
aam
movsb
gs
std
fs
pop
mov
mov
jo
daa
test
insl
das
add
cmp
inc
out
mov
inc
xor
fidivrl
jecxz
decl
push
popa
das
roll
adc
sbb
fcompl
mulb
mov
lock
fs
or
out
adc
lods
pop
out
xchg
push
and
or
push
ds
cld
mov
xchg
pop
insb
loope
shll
pop
test
jnp
xor
pop
dec
push
popf
jno
movsl
lahf
stos
jns
aas
add
add
lods
cmpsb
jae
stos
mov
rclb
test
sti
push
sbb
mov
into
ret
jne
scas
icebp
scas
pop
dec
sahf
and
imulb
jne
pop
in
lcall
jp
push
push
xor
lods
scas
jp
into
xchg
cmp
jecxz
cmp
push
cmp
loop
mov
in
out
jle
inc
ljmp
and
imul
xchg
mov
cmp
repnz
insl
mov
jno
inc
and
xchg
xchg
insl
sbbl
loop
cmp
gs
sbb
dec
es
notb
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
push
daa
int
mov
sub
imul
inc
inc
xchg
in
ret
mov
add
and
fwait
stos
mov
dec
jns
test
loope
sbb
push
jo
push
out
stos
shlb
jge
imul
pop
and
xor
inc
loope
mov
out
rcll
inc
js
mov
loopne
cltd
cmp
dec
aas
add
fcomps
andl
sbb
cmp
mov
pop
cmp
push
repnz
pop
shl
stc
sub
mov
ret
bound
in
and
pop
mov
cmpsb
or
push
aaa
fisttps
jb
inc
cmp
std
data16
aaa
leave
sti
push
mov
lock
mov
ljmp
mov
or
out
enter
outsl
dec
cmp
adc
rcll
fsts
test
pop
add
imul
fs
aaa
push
jle
and
lcall
push
scas
int
mov
pop
insb
cmp
lea
lods
xor
test
dec
fsubs
and
sub
pop
sahf
scas
lahf
insl
test
xbegin
icebp
cmp
mull
out
cmpb
lcall
rol
push
mov
or
dec
xchg
outsb
movsl
ss
cmp
pop
dec
push
rolb
popa
testl
dec
cmc
jl
popa
cltd
nop
les
gs
mov
or
iret
pop
add
cs
cmp
mov
push
xlat
pop
imul
add
mov
dec
fstpl
xchg
sbb
loop
scas
pushf
mov
outsb
mov
dec
adc
or
sbb
iret
adc
je
xorl
pop
push
cmp
mov
popa
aad
mov
mov
push
sub
popf
pop
adc
or
imul
mov
std
inc
dec
inc
das
push
cwtl
popf
push
out
mov
mov
pusha
jmp
les
subb
out
lods
into
stc
int
push
mov
mov
sbb
jnp
xorl
inc
arpl
in
cmc
jbe
fcompl
call
jne
dec
mov
out
sbb
cmc
and
fcomps
ds
inc
mov
pushf
adc
sarb
inc
pop
jns
pushf
pop
mov
sub
fdivrl
adc
jl
lods
inc
mov
aad
fwait
outsb
dec
test
lds
cli
mov
sub
pop
and
jmp
fldl
lret
pop
lods
loopne
cmp
sbb
dec
pop
adc
or
inc
inc
scas
push
das
add
sub
sbb
dec
scas
in
pop
pop
mov
and
jo
pusha
aam
call
data16
xor
or
imul
aam
jns
sub
xor
les
pop
cmc
push
sbb
rorb
insl
add
lret
dec
pop
bound
aam
gs
xor
xor
xchg
leave
cmp
mov
xchg
push
add
dec
mov
mov
jg
fwait
clc
jg
push
dec
xor
enter
push
and
js
movsb
dec
xchg
mov
sbb
pop
pop
adc
into
jg
loope
or
jle
fsts
lret
loope
add
pop
inc
pushf
enter
push
xchg
stc
sbb
pop
push
push
enter
leave
mov
sti
dec
pop
pop
lcall
inc
out
enter
add
xchg
mov
sub
add
movlps
aam
pusha
je
test
pop
and
test
xchg
movsl
jmp
in
cmp
mov
inc
test
aaa
dec
adc
addr16
sub
xor
in
cmp
mov
mov
mov
fsubs
lcall
fists
mov
push
cmp
loop
adc
adc
push
imul
aaa
mov
idivl
scas
jne
out
cmp
data16
push
in
subb
shrd
ficoms
scas
adc
imul
pop
mov
inc
int
lock
arpl
imul
and
and
cltd
nop
add
out
mov
in
sub
mov
lods
lret
movsb
xor
add
cli
movsb
sub
test
cmp
pop
sbb
pop
sbb
mov
inc
dec
cmp
aad
xlat
jge
mov
leave
inc
cmc
in
data16
pop
pop
mov
xor
pop
sub
dec
mov
jp
test
xchg
lcall
out
lret
sarb
scas
das
dec
push
xchg
inc
or
push
push
es
pop
iret
jo
add
and
xor
push
cmp
pop
xchg
fidivrl
ret
lds
mov
nop
outsb
and
in
mov
inc
popf
and
sbb
sbb
addr16
adc
std
test
movsl
cmc
jp
sets
rolb
popa
subl
pop
mov
fs
ret
je
mov
cmpsb
cmp
outsb
xchg
addl
mov
testb
dec
push
mov
cmp
push
loop
sbb
mov
inc
icebp
xchg
jge
nop
sarb
leave
movsl
sub
jb
xor
xor
sbb
sbb
das
or
add
mov
fdivrl
dec
sarb
test
mov
call
push
fsubrs
sbb
movb
sbb
xor
jmp
iret
or
jle
mov
daa
clc
mov
dec
test
or
xchg
pop
clc
push
hlt
lret
xchg
lods
mov
stc
sub
jae
sub
enter
add
rcrl
pop
lds
outsl
lods
lcall
out
jmp
sub
sbb
cli
aas
or
popf
sbb
in
ret
fwait
or
adc
rcrb
ror
xor
int
or
xchg
dec
jge
jge
gs
dec
imul
cmp
fdivrl
std
rcrb
clc
adc
enter
test
sub
repnz
inc
mov
or
outsb
sub
jle
das
repz
insb
fisttpll
imulb
call
and
jmp
jns
frstor
mov
xchg
add
mov
in
cltd
sub
sbb
xchg
mov
xchg
xor
incl
or
mov
mov
adc
adc
cmp
nop
sbb
and
cmp
pop
ss
add
fisttps
pusha
icebp
jge
jnp
sub
aad
ds
pop
inc
or
lods
jbe
mov
sbb
int3
scas
and
push
test
insl
push
divl
negb
mov
jae
pop
fimuls
lret
cmp
jo
or
das
cmpsb
into
imul
inc
lcall
jge
mov
sub
out
xchg
stos
adc
cmc
test
sbb
jbe
adc
or
cmp
imul
jno
dec
push
arpl
mov
pop
xchg
pop
or
add
dec
lods
or
scas
add
jg
pop
add
mov
sbb
cld
cmp
sbb
into
out
dec
push
sub
je
jo
pop
pop
pop
movsl
or
dec
ror
mov
cmp
call
push
mov
nop
cmp
jno
inc
jle
adc
shl
out
and
movsb
xor
push
mov
enter
loopne
jl
insb
in
pop
sbb
jns
bound
and
pop
ret
jb
stc
pop
loop
fisttps
jmp
mov
mov
cmp
jo
or
or
xchg
pop
mov
stos
push
clc
mov
mov
xchg
sub
adcb
sbb
pushf
lods
xchg
or
adc
and
add
cmpl
pop
jmp
xor
or
clc
scas
movsb
jl
mov
stos
arpl
mov
lcall
sbb
ret
push
xchg
loopne
inc
je
jo
pop
push
pop
shrb
xchg
clc
ljmp
dec
push
lret
fcomps
jge
xor
push
inc
aam
pop
call
inc
add
and
das
push
and
ret
dec
fists
inc
mov
ja
out
dec
adc
test
xchg
xchg
jae,pt
push
inc
arpl
pop
test
push
cmpsb
sub
shl
pop
sub
icebp
out
shl
or
pusha
and
fstpt
push
mov
aas
int3
out
or
mov
ret
xchg
or
ret
fadds
and
cmp
jp
inc
mov
sub
push
jecxz
sub
jb
push
fnstsw
mov
jae
negb
and
adc
push
into
inc
sub
cld
repz
cmc
lods
xchg
addb
xchg
in
or
push
shrb
xor
das
push
sub
aaa
xor
mov
pop
cmc
sbb
into
or
push
mov
out
sub
pop
mov
repnz
cmpsb
scas
mov
pop
aaa
repz
out
inc
fcmovnu
add
cs
dec
testb
jns
cs
add
mov
test
repnz
ret
ret
cmp
loopne
clc
inc
nop
mov
adc
sbb
add
addr16
mov
dec
lret
cmc
cmpsb
sbb
jp
add
lods
movsl
fwait
dec
mov
cli
or
cltd
adc
out
dec
js
push
aam
pop
mov
cmc
in
pop
inc
adc
lcall
sahf
scas
push
jns
adcl
lods
mov
mov
cltd
jbe
push
mov
push
pop
cmp
aad
push
add
sbbl
les
cmpb
dec
fs
in
mov
and
cs
and
lret
out
nop
xchg
sub
iret
dec
addr16
jl
dec
mov
pop
stos
pop
xchg
pop
notb
scas
add
or
xchg
mov
out
ljmp
lea
sti
add
adcl
jns
push
ss
pop
rcl
cltd
adc
movsb
movsl
sub
jns
push
push
idivl
cmpsb
loope
lods
mov
popa
in
jb
ffreep
xchg
idivb
sub
mov
rolb
fbstp
shrl
inc
lods
loopne
cmpsl
ret
sub
pushf
mov
add
insl
push
or
mov
gs
inc
mov
jmp
mov
sbb
cli
repz
hlt
lock
bound
shlb
int3
out
jg
repnz
mov
xor
mov
int
or
inc
popf
std
xor
mov
sbb
pop
mov
sub
pop
push
xor
add
aaa
fiadds
inc
mov
jo
push
out
pop
sahf
int3
bound
sahf
ret
push
xchg
das
shl
fmuls
fmuls
push
fsubp
mov
cmp
sbbb
mov
mov
cmp
popa
jae
loopne
test
xchg
inc
mov
dec
dec
dec
movsb
xchg
xchg
adcl
shlb
rep
es
inc
ret
fcomps
jmp
hlt
ss
ds
enter
fists
xchg
sub
inc
sti
dec
inc
imul
pop
lcall
cli
push
xor
push
fnstcw
and
jb
jmp
dec
test
shll
xor
mov
shlb
in
add
push
inc
xor
xchg
imull
mov
or
scas
call
mov
adc
ja
push
xchg
push
lret
sbb
jmp
lahf
ret
pop
lods
pushf
xor
imul
mov
cli
lds
xchg
lods
pop
cld
jns
pushf
push
call
pop
stc
jae
mov
jb
mov
jnp
jmp
pop
ret
sbb
cmp
into
sbb
xchg
xor
popa
mov
pop
push
cmp
or
into
jno
sahf
call
insb
movsl
stos
test
icebp
movsl
xchg
cs
dec
cli
jg
arpl
pop
dec
cmc
or
adc
repz
pop
pop
lret
sub
mov
stos
cs
pop
je
fwait
adc
je
pop
jp
loope
sarb
cmpsb
out
push
or
cwtl
dec
fisubl
leave
pop
ljmp
fildl
aaa
lds
push
dec
sarl
adc
mov
jns
pop
jg
or
test
out
lods
call
fnstenv
bound
sbb
test
inc
fld
add
push
scas
loopne
cmp
icebp
jecxz
add
pop
loopne
sub
fsubrs
xchg
pop
or
rclb
cmp
and
movsl
out
sub
jge
rorl
arpl
outsl
in
arpl
jne
into
sub
or
gs
jns
xchg
jbe
add
cmc
pop
push
fcmovb
gs
xor
pusha
data16
mov
push
fldt
inc
out
lcall
push
cmpsb
popa
lock
scas
in
cmp
test
and
mov
ss
dec
pop
xchg
push
or
addr16
jbe
ja
dec
sbb
lcall
inc
pop
mov
push
repnz
pop
mov
mov
imul
sbb
je
mov
cmp
and
ret
stos
xchg
insl
js
outsb
mov
dec
in
mov
or
and
iret
jnp
pusha
ds
outsl
jno
repz
aad
in
imul
cmpb
push
mov
lret
mov
xor
pop
mov
movsl
in
pop
loopne
out
inc
int
xchg
pop
roll
or
jle
mov
xchg
dec
jecxz
dec
inc
fsts
fistps
mov
xlat
xor
mov
pop
and
in
pop
sub
push
lret
testb
mov
popa
test
aad
rorb
and
push
pop
xchg
xchg
je
pop
mov
inc
mov
in
add
scas
outsl
add
xor
dec
adc
dec
dec
xor
mov
mov
and
xor
push
cmp
loopne
or
into
ljmp
push
in
sub
jl
add
fbld
lds
mov
xchg
mov
leave
por
sbb
and
cmpb
add
push
mov
ja
hlt
in
and
jmp
int
clc
jmp
add
inc
push
push
sarl
or
into
orb
ja
scas
add
gs
mov
xor
inc
push
loop
fyl2xp1
enter
add
popa
add
dec
inc
hlt
scas
adc
adc
push
stos
sbb
jmp
add
or
push
adc
mov
pusha
test
xor
mov
movsl
push
jno
fsubl
addl
jns
pop
mov
outsl
push
mov
outsl
roll
lret
jo
pop
ljmp
bound
mov
push
nop
inc
int3
mov
xor
int3
int3
or
imul
es
lret
jb
mov
loop
pop
add
ss
adc
dec
inc
les
and
fistl
jbe
inc
arpl
fwait
test
fnsave
or
in
fucompp
sbb
mul
xchg
ret
das
xlat
push
stos
and
jae
idivl
jae
mov
test
in
pop
xchg
ss
mov
add
jmp
movsb
xor
por
jg
fwait
out
add
xchg
sub
xchg
push
fsubrs
xor
arpl
por
dec
pop
inc
adc
xchg
pop
pop
cwtl
xchg
push
jp
pop
shlb
sahf
leave
cli
mov
in
sbb
in
lods
lods
ret
jne
test
cwtl
sub
fcmovne
push
adc
cmp
cmp
and
push
ret
stos
outsb
and
dec
cmp
adc
xchg
pop
pop
cs
and
iret
lock
inc
push
aas
imul
pop
inc
mov
cli
mov
lods
lods
inc
push
sbb
sti
jmp
adc
jo
ret
ss
testb
ss
mov
fimuls
adc
and
mov
xchg
mov
sti
fisubrs
loopne
add
sahf
xor
test
sahf
cld
divl
xor
sub
jge
leave
les
sarl
leave
loope
je
mov
mov
xchg
js
inc
dec
pop
jb
fldcw
mov
mov
cmc
or
scas
mov
jmp
ja
pop
xor
stos
xchg
inc
xchg
repz
xchg
xchg
imull
sbb
cmp
mov
dec
movsb
xchg
decb
lret
add
push
fmull
insl
sub
inc
cld
addr16
icebp
mov
inc
and
push
out
cmpsb
inc
clc
sub
mov
jmp
adc
sub
mov
jp
mov
aam
dec
cs
jle
xchg
pop
jbe
inc
cmp
push
movsb
cmp
ficompl
sbb
in
mov
inc
test
aaa
test
call
mov
scas
xchg
decb
dec
cmp
out
add
dec
cwtl
test
push
jae
lahf
mov
sbb
push
movlps
mov
jg
adc
fimuls
mov
test
comiss
lcall
fsubr
scas
jecxz
jns
cli
and
loopne
push
pop
fstpt
jl
aad
mov
hlt
xchg
and
pop
and
mov
xchg
and
xor
orl
in
inc
pop
ffree
into
push
pusha
pop
lods
cltd
pop
ret
mov
sub
pop
test
fs
cmpsl
xchg
xor
dec
addr16
jle
insb
xchg
aad
js
les
xor
mov
cmp
and
cltd
js
and
es
dec
sbb
stos
addr16
js
fcmovnb
inc
cs
in
adc
hlt
jl
jbe
mov
test
sti
sub
test
xchg
adcl
push
ja
lret
frstor
fstl
cmpsl
clc
rclb
insb
jne
shlb
or
push
xchg
ret
movsb
mov
pop
inc
pop
inc
hlt
cmp
test
iret
sbb
in
stos
std
aad
or
iret
ds
fs
movsl
shlb
jp
testl
xor
push
cmpsl
mov
fisubs
xchg
repnz
into
loopne
insb
stc
daa
ret
inc
ret
dec
jne
dec
gs
fistpl
and
fiaddl
push
jo
inc
in
push
stc
insb
xor
int3
insb
ss
push
orb
scas
out
mov
lock
movsl
cli
mov
or
idivl
ret
lret
jmp
cmpsl
lret
fiadds
or
bnd
sti
dec
jb
push
movsb
mov
movsb
loopne
test
push
push
popa
or
mov
cli
adc
and
xor
dec
mov
sub
mov
dec
sbb
bound
cmc
push
and
lahf
ss
jmp
mov
jae
int
int
out
xchg
scas
sahf
xor
cmp
ficomps
jle
and
mov
ljmp
mov
ret
xor
icebp
addl
push
aam
sbb
cwtl
shrl
push
call
repz
popl
and
mov
test
scas
xchg
hlt
xchg
xor
xchg
jns
mov
gs
mov
movsb
loope
sbb
in
dec
dec
call
push
mov
xchg
mov
loop
xchg
je
in
out
fidivrl
das
jbe
lcall
or
pop
mov
fistps
sbb
or
orb
jo
fisttps
jbe
insl
xchg
arpl
mov
std
sbb
adc
adc
stc
add
jg
mov
jg
out
arpl
jb
ljmp
gs
cmpsb
jno
filds
mov
movsl
xor
rcl
cli
inc
js
imul
cld
inc
xchg
mul
rcrl
xchg
sub
jge
xchg
lcall
cmp
dec
xor
push
mov
jge
sbb
mov
mov
cltd
clc
inc
lods
jo
jg
cmpsb
xchg
pop
fsubr
sub
adc
ret
test
fwait
loopne
mov
push
jns
or
xchg
add
cmp
mov
xlat
imul
sub
shll
int3
es
int3
xchg
mov
inc
push
mov
inc
lret
xor
sti
cmp
jnp
test
out
pop
push
pop
out
mov
pop
lods
pop
inc
dec
add
fcmovu
inc
aam
add
mov
xchg
aaa
cmp
js
in
xchg
xchg
ror
cs
into
xchg
xorb
sub
jne
dec
repnz
add
cld
cmp
pop
pop
sub
ficoml
and
xor
adc
dec
mov
shlb
dec
xchg
daa
notl
sub
and
sub
insl
inc
mov
out
add
xchg
movb
mov
inc
test
gs
pop
std
jbe
pop
fcompl
xchg
xor
movsb
ficompl
jbe
out
cld
movl
jne
stc
cli
hlt
divb
add
xchg
xchg
xor
shl
adc
addr16
inc
cs
dec
insl
push
int3
inc
sti
out
inc
imul
mov
adc
adc
dec
pop
cmp
or
xchg
jns
in
mov
stos
dec
daa
adc
lods
mov
test
mov
pop
sub
xorl
lret
popa
fwait
inc
outsb
dec
mov
jecxz
and
inc
js
out
rorb
push
inc
iret
aam
cmp
not
push
xlat
or
jge
test
movsl
test
adc
mov
lea
sub
jae
sub
call
xchg
xor
jp
cwtl
pop
dec
mov
push
add
pop
fwait
es
dec
out
dec
sub
lret
jno
lods
cmpsb
call
mov
in
or
imull
sbb
mov
pusha
arpl
xchg
mov
fwait
and
cmc
sub
mov
cmp
cli
out
xchg
call
pop
add
push
adc
dec
sbb
sbb
cltd
inc
shl
xchg
add
mov
mov
push
inc
mov
pop
mov
inc
cli
rclb
out
push
sbb
sbb
inc
cld
xor
loopne
mov
inc
lods
lods
gs
adc
iret
ret
mov
insb
mov
call
sti
into
scas
xchg
insl
ds
stos
jns
add
std
dec
nop
outsl
icebp
or
stc
lret
xchg
lahf
repz
adc
imulb
sbb
inc
xor
iret
cltd
pop
adc
sub
lcall
cmc
inc
mov
loope
aam
or
cli
fisttps
adc
jmp
pop
mov
add
jb
out
push
nop
xchg
mov
rcrl
and
mov
pop
push
scas
push
fisttps
pop
inc
push
out
les
lods
fld
andb
out
xchg
xchg
das
pop
insl
dec
cltd
pop
ret
inc
mov
iret
dec
outsl
repz
push
cmp
sub
call
jecxz
dec
ja
lret
or
je
fs
dec
pop
and
sbb
enter
mov
sbb
inc
xlat
shr
add
out
xchg
inc
xchg
sub
mov
fwait
mov
mov
cmpsb
jg
mov
xor
popf
add
jmp
or
sub
out
repz
pusha
adc
mov
mov
test
jge
or
dec
mov
adc
je
out
aad
adc
rsm
or
cmp
cwtl
push
test
leave
cwtl
stos
test
cmp
call
sub
mov
jg
and
push
ret
sbb
inc
outsl
jl
addr16
fsubr
lret
mov
test
cwtl
gs
clc
inc
test
pop
pop
test
xor
push
test
cmp
jl
lods
nop
jb
mov
xlat
mov
adc
and
add
out
data16
fadd
sub
mov
subb
call
addr16
insb
mov
mov
mov
arpl
xchg
pop
inc
out
xchg
mov
xchg
jns
ret
xchg
lods
sti
xchg
loopne
test
into
aam
es
repz
fisubrs
push
pop
arpl
popa
dec
add
enter
jno
sbbb
push
sbb
and
push
lods
mov
adc
cld
cltd
dec
stos
fstpl
sbb
xchg
inc
mov
pop
pushf
and
outsb
dec
mov
es
push
ljmp
sub
lret
in
mov
int3
push
jp
or
xor
dec
sbb
jle
mov
shrl
out
add
mov
stos
cli
pop
pop
cmp
iret
mov
xchg
push
sbbl
stos
mov
arpl
xchg
mov
rorb
hlt
or
push
pop
push
fdivrs
fnstcw
adc
cld
inc
rcll
or
mov
mov
clc
cmp
inc
popf
out
enter
cmp
sbb
push
aam
jns
sub
or
or
and
fsubrs
in
cmpps
shll
stos
in
dec
fs
or
xor
sahf
xor
mov
imul
insb
jl
xor
dec
add
xchg
jbe
cmp
inc
lcall
pushf
pop
cli
ljmp
mov
pop
clc
mov
imul
lea
xor
push
iret
push
ficoms
int3
sub
ret
out
mov
das
xor
xchg
ds
lds
shrb
mov
jnp
xor
cmp
jb
and
lahf
mov
sahf
xlat
push
repz
lahf
mov
stos
stos
xchg
or
pop
xchg
inc
jo
xchg
in
sbb
push
enter
mov
shll
sbb
dec
and
shll
data16
test
adc
ljmp
push
icebp
push
xor
daa
cmp
test
or
sarb
pop
add
jns
in
mov
adc
push
and
push
imul
cld
xor
fld
xor
hlt
push
mov
outsl
fimull
pop
mov
je
adc
jns
call
inc
ficomps
and
std
lods
ret
xchg
mov
lea
mov
mov
imul
pop
pop
pop
push
xchg
testl
push
sub
xchg
mov
jb
push
ds
insl
pop
scas
mov
mov
mov
push
and
mov
push
xchg
mov
and
cs
movsb
push
out
movb
mov
xchg
jae
cmp
jp
fwait
xchg
dec
cs
fdivrs
les
jl
mov
ljmp
arpl
iret
lahf
xchg
fdiv
pop
inc
mov
add
jno
and
iret
pop
xor
jne
xor
mov
add
cmp
jg
out
xchg
hlt
pop
pop
test
pop
into
xor
mov
cld
mov
xchg
xchg
fs
cs
ljmp
outsl
subb
xchg
sbb
cmpsb
inc
xchg
in
sub
jbe
jnp
pop
aad
jb
sub
inc
ja
dec
sti
sub
mov
fwait
call
stos
ret
mov
push
sbb
sbb
dec
mov
sub
scas
or
cmp
lock
fcmove
rclb
or
arpl
sub
and
lahf
adc
andb
adc
mov
fsub
lock
inc
adc
adc
jb
stos
xchg
cmp
cli
leave
lods
cmpsl
stos
scas
lods
int
roll
jl
sbb
mov
insl
hlt
mov
add
xchg
add
inc
add
inc
fldt
jmp
mov
das
or
add
mov
jae
sub
test
jo
pop
mov
out
mov
aaa
adc
cltd
add
mov
adc
fsubrl
mov
bound
ljmp
in
mov
ljmp
loope
fldt
sbb
negb
aaa
mov
movsl
sub
sti
ja
ret
cmc
ret
movsb
pop
repnz
shl
pop
cmc
ficoms
iret
add
xor
cmp
mov
sbb
shl
rorl
jae
out
jnp
roll
divl
sahf
push
and
xchg
pop
in
rcrl
push
and
cwtl
xchg
lahf
xchg
test
adc
mov
and
lahf
dec
pop
xor
cmpsb
mov
sub
sub
enter
ftst
add
cmp
dec
out
push
pop
sub
je
insl
adc
popa
push
daa
sbb
cmc
pop
push
outsb
and
cli
fisttps
aad
xor
and
jnp
sbb
dec
loopne
lock
xchg
mov
mov
cmp
bound
popf
insb
mov
je
aam
inc
ds
sub
sbbl
sub
pop
lock
imul
das
sbb
xchg
test
enter
mov
adc
mov
push
add
cmp
movsl
inc
arpl
in
repz
insl
sbb
mov
inc
stos
jecxz
pop
pop
or
push
xchg
push
scas
mov
dec
mov
cs
xlat
out
lock
imul
sub
scas
orl
and
lret
push
inc
mov
aaa
andb
jns
sub
or
sbbl
sub
repz
pop
xor
jbe
ret
les
popf
cwtl
fidivrs
cmc
pop
push
xchg
pop
enter
sub
in
mov
jbe
mov
mov
pusha
addr16
cld
ja
ret
mov
pop
popa
std
mov
popf
lcall
aam
mov
xchg
mov
or
mov
mov
cmpsb
jbe
faddl
inc
nop
mov
aaa
push
jno
sbb
mov
jg
cmpsb
mov
adc
inc
lea
pop
xchg
xor
das
js
or
cmpsb
in
cmp
xchg
cmpl
cltd
jnp
outsl
arpl
add
jl
push
int
lcall
in
fstpt
ss
mov
xchg
mov
push
mov
jecxz
mov
cmpsl
imul
fldl
es
mov
cmp
mov
adc
dec
or
jg
lcall
das
je
ret
test
ds
stos
dec
sbb
out
test
inc
jb
sbb
jno
aaa
sbb
inc
add
aam
movb
das
mov
jmp
or
jmp
xchg
mov
and
pop
scas
jl
movb
in
sbb
xor
add
add
xor
inc
movsb
test
pop
negl
into
aas
aas
test
test
pop
xor
mov
in
cmp
sarl
movsb
fwait
push
jge
movsb
stos
xor
xchg
jo
pop
lahf
or
outsb
fiaddl
fwait
xor
or
inc
hlt
jp
adc
movsl
and
dec
mov
test
aaa
shll
xchg
dec
push
dec
mov
or
fisttpll
scas
push
fwait
aad
stos
imul
daa
push
loopne
jne
dec
xor
sbb
mov
sbb
dec
fildl
rclb
and
cs
jbe
jb
rclb
hlt
and
add
add
xor
sbb
testl
sbb
jae
scas
aam
fbld
fs
push
arpl
xchg
cmp
push
pop
mov
sbb
cld
xor
and
xlat
sub
popa
int3
ss
shll
dec
test
pop
sbb
sti
insl
or
andb
or
mov
arpl
mov
xor
mov
daa
cmpsl
and
or
and
inc
arpl
push
lcall
mov
lods
cs
mov
cwtl
cli
push
cmp
rolb
cwtl
popf
mov
cltd
les
fsub
add
pop
pop
in
mov
sahf
cmp
cmp
fs
mov
nop
ljmp
push
xor
ss
fcmovne
lods
ljmp
movsb
fldl
mov
push
add
or
and
rolb
aam
sahf
and
mov
mov
addr16
sahf
mov
movsl
xor
mov
sbbl
test
sbb
out
loop
mov
lret
mov
cli
dec
push
cmc
inc
push
xchg
ret
xchg
mov
frstor
adcb
push
xlat
lahf
fcomps
xchg
jg
inc
shlb
dec
mov
orl
inc
pop
adc
mov
sub
sbbb
cs
adc
hlt
mov
cmp
aam
orl
out
xor
mov
mov
outsb
mov
outsl
sub
xchg
xlat
mov
jb
int
sub
xor
add
and
jns
mov
es
adc
das
mov
jb
pusha
xchg
lods
ficoml
divb
pop
out
mov
add
mov
cmpsl
mov
mov
push
ljmp
aam
xor
xor
sub
leave
adc
xor
push
out
mov
fldenv
xchg
mov
add
pop
out
xor
push
aam
or
or
arpl
sahf
push
and
rcll
or
sbb
in
push
jbe
dec
hlt
mov
das
push
movsl
repz
cmc
fstpl
or
popf
mov
or
ret
push
push
mov
fcoml
push
aad
pop
inc
and
lock
mov
jnp
sub
rolb
aaa
sub
lret
and
add
aas
fisubrs
mov
pop
add
mov
pusha
icebp
mov
std
or
lahf
dec
in
fldt
push
pop
jnp
fs
mov
in
push
pop
cmp
mov
xor
loopne
ja
sub
outsl
sbb
lret
or
xor
mov
sbb
daa
mov
insl
xchg
inc
in
push
faddl
popa
ja
or
jmp
xchg
decl
and
pop
enter
mov
cmp
pop
push
xchg
sbb
cmp
cld
xor
push
lock
imul
jb
cmpsb
or
mov
xorl
xchg
cld
outsl
shrb
mov
dec
pop
in
cwtl
out
stc
pop
pop
test
clc
daa
inc
cmc
mov
test
xchg
fiaddl
into
cmp
dec
movsl
xor
shll
jge
in
cmpsb
lea
fistl
cli
movl
pushf
ret
and
es
push
fcompl
repz
pop
rcll
dec
inc
jno
inc
or
into
jb
ret
and
arpl
inc
dec
arpl
das
xchg
xchg
mov
add
cmp
enter
cld
repnz
push
fsub
sti
xchg
and
fxch
ds
insl
sub
pop
test
jbe
enter
push
cmpsb
mov
mov
mov
lds
stos
lret
pop
daa
inc
outsl
sahf
push
mov
push
xchg
cmpsl
fcmovb
ret
je
jecxz
mov
mov
shl
mov
cmpb
out
dec
sub
mov
lret
mov
loope
jb
jbe
adc
and
pop
cmp
je
cmp
xchg
inc
test
inc
or
adc
lcall
pop
bound
push
adc
out
or
xchg
popa
add
and
and
sub
xchg
push
fidivs
std
pop
clc
dec
rorl
fbld
sbb
jl
decl
in
sti
jno
xchg
lock
mov
cmp
lock
lret
push
testl
mov
or
sub
mov
je
push
stos
out
insl
push
cmp
xchg
lods
add
push
jne
addb
dec
jmp
push
pop
inc
out
mov
xor
adc
sti
lret
ret
out
adc
or
out
sahf
neg
enter
les
adc
and
sarl
shrl
jo
hlt
stos
push
lock
mov
adc
mov
xchg
hlt
sbb
push
mov
cld
adc
sbb
aam
sbb
leave
fiadds
in
ja
cmp
mov
pop
dec
mov
rolb
mov
dec
add
xchg
lret
adc
negl
mov
sti
movsl
sbb
or
push
xchg
mov
sahf
stos
xchg
mov
fldt
fldt
pop
xor
dec
cmp
dec
ljmp
ret
nop
fucomip
ljmp
cmp
cli
mov
out
insb
mov
add
inc
dec
or
xchg
xchg
mov
xor
jmp
and
jmp
mov
insb
jns
xor
pop
imul
jle
mov
movsl
fidivrl
push
inc
adc
jns
sub
xor
fcompl
idivl
ljmp
jns
repnz
mov
cmpsb
aad
push
js
and
pop
mov
rorb
or
dec
out
divb
inc
inc
icebp
jg
adc
and
jmp
mov
iret
jae
sbb
and
mov
push
cmp
int
jg
fwait
out
mov
lahf
mov
or
inc
sub
mov
repz
add
mov
sub
pop
xchg
sub
pop
mov
rcrb
js
pop
sub
shr
int3
in
gs
arpl
and
jecxz
mov
ret
xchg
mov
mov
adc
repz
aaa
sub
add
jne
mov
mov
leave
loope
mov
jae
jo
out
jnp
fisubl
sub
fisubl
test
and
cmpsb
scas
fisubrs
pushf
push
jns
adc
sub
cmp
xchg
outsl
xlat
cmpsl
in
stos
icebp
test
mov
mov
mov
lret
mov
push
out
pushl
inc
dec
sbb
jp
and
adc
clc
stos
scas
rcrb
lock
cltd
xor
bnd
js
xor
rolb
mov
inc
addr16
sbb
sbb
subb
iret
jno
push
sub
push
psrld
cmp
cmpsb
jp
dec
lods
jle
and
inc
jo
sub
dec
out
lret
mov
push
fdivrs
mov
or
fsubrp
pop
pop
sub
xchg
dec
jno
ss
leave
sub
fsubs
xlat
jne
xchg
mov
adc
fldt
andl
movb
jns
push
call
xchg
xchg
jae
in
lods
cmpsb
jns
fwait
adc
cmp
dec
pop
push
lcall
push
xor
or
xchg
jno
push
add
mov
cmp
fwait
sahf
mov
cld
std
stos
dec
push
add
push
inc
fildll
xor
rcll
push
enter
repz
add
arpl
mov
xchg
or
aad
inc
hlt
xchg
mov
out
leave
cmpsl
or
sub
test
xor
sub
rorl
icebp
pop
jl
cmp
sbb
jno
shlb
xchg
fnstenv
xchg
dec
push
loope
pop
adc
xor
sub
and
ljmp
repz
mov
cld
enter
push
jae
pop
test
bound
add
test
repnz
daa
jb
adc
loope
or
pusha
sub
shrl
rcl
jge
inc
out
fnstsw
rorl
out
inc
je
mov
xor
out
or
outsb
mov
fstpt
mov
mov
lcall
jge
cmpl
jo
je
add
add
sbb
push
imul
jge
jle
fisubl
mov
mov
shrl
sub
dec
xchg
mov
xor
mov
mov
rclb
mov
mov
xor
cmp
lcall
pop
sub
negl
add
popf
lret
test
popa
jmp
mov
pop
mov
mov
in
add
add
jnp
sbb
stc
mov
int
sub
sbb
fiadds
xor
xor
or
nop
or
jae
and
sub
out
mov
imul
pop
ljmp
lcall
mov
out
or
mov
xor
add
adc
fdivl
push
push
inc
ret
call
jae
cmp
jae
xchg
sbb
inc
xchg
push
pushf
or
jge
xchg
fbld
es
xor
out
mov
test
pop
sub
out
xor
out
mov
push
push
int
xor
sbb
cmpsb
pop
mov
ret
or
push
out
pop
leave
movsl
cltd
aad
out
repz
mov
repnz
orl
xchg
mov
jle
pop
xchg
idiv
jno
mov
int
xchg
sbb
ss
fmull
add
stos
addr16
mov
arpl
sub
and
ret
int3
add
mov
inc
fwait
or
or
jns
pop
or
jno
jmp
ficoml
into
jge
xor
fmul
push
or
jl
lret
movsl
jae
movsb
adc
and
xchg
push
xchg
lds
arpl
loopne
cmp
ljmp
add
pop
stc
cmp
ss
mov
mov
jl
cmpsb
sahf
dec
subb
pop
sub
fmull
inc
and
push
pop
mov
lahf
mov
bswap
pop
dec
add
mov
mov
out
pop
push
add
jmp
call
or
sub
xor
pushf
jmp
imul
adc
je
pusha
cwtl
clc
lods
sbb
adc
jecxz
jo
jge
lock
leave
add
movsb
push
pusha
push
stos
inc
std
lods
les
adc
cs
nop
outsl
mov
icebp
lret
add
inc
xchg
jle
cmp
out
jo
adc
js
pushl
shrl
xchg
lahf
add
add
jp
fwait
sub
lods
fldl
mov
dec
jmp
cwtl
mov
xchg
ficoms
in
mov
jno
xchg
pop
inc
mov
inc
cwtl
adc
or
clc
mov
aam
xor
xchg
and
les
pop
insb
xchg
stos
sgdtl
jbe
jo
push
stos
mov
xchg
inc
sti
pop
fcoml
adc
cmp
xor
rclb
cwtl
inc
lods
mov
xlat
mov
dec
cwtl
add
mov
fidivrl
mov
lods
push
test
lods
mov
shrb
and
popf
push
incl
inc
test
xchg
and
sub
xor
aad
faddl
jns
lret
icebp
in
mov
pop
out
lods
inc
xchg
scas
pop
mov
jo
xor
inc
movsb
jb
push
daa
inc
add
sbb
sbb
shr
pop
shrb
stos
jo
jmp
sbb
fdivrl
mov
aam
inc
fs
js
inc
lret
or
add
in
loope
dec
mov
js
xor
mov
mov
aas
imul
adc
mov
cltd
addl
add
je
pushf
aad
mov
out
rol
push
call
jg
adc
xor
in
push
jno
fdivrl
out
fiadds
jns
add
imul
pop
jns
test
test
dec
jbe
stc
and
scas
mov
das
das
lods
push
rcl
push
xor
clc
xchg
mov
dec
notb
mov
test
fs
in
cmp
test
or
sub
mov
adc
loope
or
rcll
leave
or
mov
xchg
cwtl
bound
push
rep
xor
dec
fwait
cs
sub
dec
push
lea
cmp
scas
add
scas
ja
imul
mov
testb
js
push
sub
jmp
push
sub
stc
clc
js
inc
loope
mov
xchg
jp
dec
fldt
lahf
aas
jp
enter
sahf
sti
stos
idiv
and
scas
sbb
mov
mov
std
sahf
cld
sub
adc
dec
and
push
out
movsb
in
test
push
imul
add
in
orl
xchg
cmp
push
rcrl
sub
jmp
cmp
jne
sub
pop
pop
jmp
sub
scas
push
sub
mov
aas
pop
std
fs
popf
sbb
ficoml
lret
cmp
ficompl
mov
je
fcomps
sbb
inc
loopne
cltd
fsubr
stos
shrl
adc
cmp
gs
inc
mov
xchg
mov
push
sub
sub
enter
xorl
incl
loopne
je
mov
test
ret
mov
int3
in
rcr
xchg
xchg
mov
and
out
jecxz
fiadds
cs
mov
cmc
inc
out
bnd
sub
das
shlb
daa
mov
or
lret
sub
sar
jbe
aad
pop
sbb
dec
add
leave
sti
cli
mov
xor
rcr
pusha
pop
sub
add
xchg
pop
into
fwait
call
sbb
jns
mov
dec
imul
lock
and
cmp
cmp
imul
push
pop
push
stos
dec
cmp
jne
mov
insl
adcl
ror
jmp
sti
insl
sarb
mov
ds
xchg
mov
insl
stos
gs
stos
push
push
adc
sub
data16
sub
cmp
xor
dec
iret
xchg
insl
jnp
pop
sub
pop
jp
std
pop
aaa
les
or
shlb
rcr
add
jmp
adc
sub
or
test
inc
lea
pop
out
sbb
movsl
inc
jns
xchg
movsb
cmpsb
test
hlt
es
jecxz
sub
mov
jne
ret
mov
sbb
popf
fists
imul
mov
arpl
inc
mov
ss
and
fwait
and
call
nop
rolb
mov
shlb
xchg
in
fisubrs
inc
test
add
xchg
pusha
cmp
lret
jno
jl
sub
mov
nop
jo
shr
out
push
fistl
push
inc
repnz
push
mov
add
scas
or
int
nop
adc
popa
out
stos
jl
cmp
mov
dec
cmpsl
clc
push
js,pn
adc
mov
out
cmpb
popfw
cmp
repnz
and
pushf
push
push
push
repnz
push
cli
cmp
hlt
imul
jno
inc
lret
cmpsb
xchg
cmp
jae
in
shrl
jge
das
lock
pop
mov
cmp
push
mov
ret
push
inc
or
pushf
dec
xlat
int3
xor
rcrl
xchg
push
lahf
fdivs
or
inc
icebp
rcr
test
mov
lds
fidivl
or
jmp
xchg
mov
cmp
addr16
outsb
fs
ds
or
aam
stos
cmpsl
push
jns
mov
outsl
xchg
es
lret
bound
xor
out
ret
and
sbb
aad
sbb
add
cltd
push
mov
imul
lods
mov
mov
inc
or
mov
mov
sbb
outsb
sbb
xor
bound
cmp
fstpl
jae
adc
sbb
dec
sarb
psadbw
jmp
lahf
je
aad
pop
mov
mov
mov
inc
fisubrl
mov
cmpsl
xlat
cwtl
jno
xor
jge
pop
push
daa
dec
cmp
or
adc
pushf
outsb
test
xchg
adc
adc
sub
aad
push
and
cs
cmp
iret
cmp
popf
cmp
inc
mov
cs
cmpb
repnz
inc
fisubl
jns
mov
packsswb
sbb
data16
imul
cs
sarb
or
add
ds
or
xor
pop
mov
mov
negb
shrl
jmp
aas
fcomip
add
insl
insl
jno
lahf
out
bound
dec
pop
sahf
mov
push
push
fwait
xchg
out
and
pop
pop
in
fwait
inc
call
arpl
lahf
fimull
jmp
push
push
push
sbb
negl
pop
pop
es
push
fists
dec
xchg
mov
in
cmp
push
adc
push
add
dec
mov
mov
stc
xchg
aas
pop
dec
nop
add
inc
sarl
pop
int
and
xor
jae
test
adc
mov
int3
dec
out
cld
in
sub
mov
mov
sub
lret
fsts
mov
cmp
push
mov
loopne
pop
mov
push
xchg
jo
shlb
push
xchg
pop
inc
jbe
mov
pusha
or
loopne
aas
pop
mov
addl
sarl
shll
dec
ljmp
mov
xor
inc
insb
pop
mov
inc
lea
pop
test
divb
cmpsl
movsb
sbb
lock
icebp
arpl
into
sbb
adc
pop
mov
mov
add
mov
loopne
std
loope
inc
sbb
pop
adc
add
lock
inc
movsb
sbb
aad
hlt
sub
cwtl
icebp
dec
or
lahf
or
lcall
jmp
dec
cmpsl
push
mov
xchg
and
aas
mov
mov
pop
jno
push
nop
test
adc
out
mov
popf
dec
mov
out
lcall
fcomi
mov
sbb
test
add
adc
lcall
mov
arpl
shl
ljmp
cmp
shlb
jle
xchg
ds
mov
fistl
packssdw
mov
pop
test
pop
or
xchg
dec
fs
jae
fcomps
mov
cmc
outsb
ret
and
fs
cld
scas
mov
jle
pop
or
jo
adc
jge
shlb
xchg
stos
push
data16
in
popa
stc
pop
pop
cmc
jl
xchg
mov
aam
aas
mov
cmpsl
ret
xchg
jl
dec
cmc
and
fldl
mov
inc
xchg
push
popf
lods
out
add
add
test
enter
in
pop
mov
out
clc
int
cmpsl
popa
in
pop
add
cmpsb
pop
lahf
xor
ficompl
iret
fisubl
sub
cmc
mov
aad
nop
xor
outsb
xchg
rorb
inc
and
pusha
adc
jne
sub
dec
inc
add
in
out
inc
outsb
pushf
jecxz
aaa
or
aam
jae
mov
sbbl
jb
pop
xchg
add
sbb
sbb
mov
lods
aad
or
sbb
leave
mov
jae
inc
std
cltd
popa
pop
arpl
icebp
xor
xchg
push
push
cwtl
fidivrl
aam
stos
int
push
pushf
out
sbb
lds
push
jg
test
loop
xchg
xchg
movsl
loope
or
jmp
fs
outsb
inc
cmp
or
adc
repnz
or
gs
sbbl
divl
fstps
loope
inc
sub
or
imul
lods
outsb
insb
xchg
cld
arpl
imul
loop
and
sub
sbb
stos
sub
adc
add
cmp
sbb
mov
pop
les
loopne
push
or
pop
adc
pusha
adcb
push
inc
lods
test
test
mov
sub
int3
cwtl
cld
sub
jae
and
cli
jo
jmp
sub
mov
xorl
sub
pusha
sbb
jge
inc
fcompl
popa
push
dec
push
lahf
jecxz
dec
outsl
test
mov
mov
mov
dec
xor
lcall
pop
add
fidivs
jo
out
movsl
mov
push
adc
sub
sub
dec
or
jns
pop
push
fstps
jmp
pop
cwtl
lcall
push
les
adc
add
push
mov
jo
daa
dec
or
adc
iret
push
dec
xchg
xchg
clc
mov
jnp
popa
adc
mov
lods
pop
xorl
and
and
push
add
xor
and
fisubs
pop
sahf
scas
js
test
gs
test
xchg
push
xchg
fadd
or
cmp
pop
insl
pop
mov
cmpsl
in
xchg
ret
push
push
dec
xchg
movsb
sub
std
sub
inc
mov
inc
adc
pop
repnz
fsubrs
enter
xchg
lahf
in
mov
stc
add
mov
dec
sahf
in
inc
or
ficompl
sbbb
mov
dec
jbe
or
and
mov
scas
jp
pop
adc
sti
icebp
stc
xor
sbb
add
ffreep
cmp
adc
and
inc
nop
dec
fdivr
hlt
xchg
in
insl
xlat
ja
lea
xorl
inc
std
pop
mov
andl
jne
fmuls
pop
pop
add
jle
cmp
ret
adc
inc
cmp
std
insb
mov
and
call
fildll
test
mov
lahf
add
fwait
adc
icebp
push
fxch
adc
sbbb
adc
and
or
loope
mov
cld
and
cmp
fiaddl
out
dec
dec
je
test
push
fistpll
xor
test
or
sub
roll
mov
nop
mov
divl
pop
movsl
dec
dec
xchg
subl
adc
ret
cmp
jne
out
push
int
orb
cmpsl
push
hlt
push
xlat
popf
ret
pop
mov
push
loope
mov
or
ss
inc
outsl
dec
lock
lea
mov
mov
push
lret
jle
push
sbb
fbld
mov
test
add
mov
stc
in
cmp
shll
lahf
sbb
outsl
dec
fisubrs
or
test
ja
addr16
repnz
cmp
pop
pop
sub
dec
or
ret
loope
inc
mov
mov
sub
rorl
cmp
jns
cmc
psubw
fistpl
or
or
in
mov
lret
xor
jmp
or
pop
adc
mov
sbb
push
pushf
dec
add
ds
int
test
je
mov
ret
fwait
out
adc
jg
sbb
push
and
test
test
xchg
xchg
push
fiaddl
sub
loopne
iret
lock
insl
sbb
lahf
cmpsb
in
mov
gs
sub
shlb
xor
mov
ret
inc
lretw
adcl
inc
adc
cmp
in
pop
and
xor
out
cmp
lea
and
shrb
push
xchg
imul
cmp
or
cltd
mov
jmp
xor
dec
lahf
out
and
mov
in
pusha
pop
sbb
in
dec
arpl
xlat
xor
jp
dec
dec
pop
pop
inc
js
xchg
cmpsb
enter
jbe
leave
push
jmp
xchg
paddsw
outsb
jns
adc
fisttpll
movsl
lds
movsb
inc
push
jmp
add
mov
inc
decb
jge
push
out
jb
mov
cmp
in
and
jp
sub
and
and
jbe
mov
movsl
push
push
dec
push
xchg
and
ficomps
push
pop
sub
adc
xchg
cmc
cmpsb
cmp
sbb
adc
cmpsb
or
pop
and
mov
sbb
outsb
pop
fsubl
dec
mov
add
adc
nop
and
cmp
xchg
sub
inc
cmpl
inc
or
xor
call
imul
outsb
nop
add
dec
rorl
out
dec
cmp
stos
in
adc
pop
inc
jnp
imul
push
lea
fwait
dec
std
push
daa
cs
mov
mov
push
and
and
dec
scas
add
inc
scas
dec
mov
mov
push
inc
imul
adc
ljmp
jbe
push
sarb
movsb
test
push
dec
jnp
rcrl
dec
pop
push
fdivs
cmp
jno
xchg
inc
dec
fildl
addb
daa
mov
mov
sbbb
mov
xchg
pop
adc
cs
mov
pop
xchg
ja
aas
cmp
add
sarb
clc
mov
push
les
fs
ret
xor
aas
xchg
sahf
mov
and
xchg
xor
pop
add
jecxz
mov
pop
adc
xchg
sub
mov
pop
sub
arpl
and
loope
mov
pop
inc
es
sub
popf
shlb
and
cli
inc
loopne,pn
rclb
ficoml
dec
scas
add
and
or
cmc
sarl
inc
test
push
fcoml
xchg
sahf
add
mov
dec
inc
lahf
addr16
dec
add
xchg
call
cmp
jb
jne
aas
daa
popa
sbb
push
cmp
test
cltd
cmp
push
cmp
dec
fisttpll
or
mov
and
rcrl
push
lret
pop
sub
jae
clc
mov
xchg
inc
xchg
repnz
nop
lods
mov
int3
sti
pop
lret
xor
mov
push
mov
andl
cmpsb
imul
inc
aad
sub
shll
push
lods
add
ficoms
pusha
rcll
cltd
or
mov
pushf
ss
xchg
jmp
xor
xor
shll
lods
ret
adc
xor
vcvtsd2ss
ja
jo
movsb
pop
testb
push
hlt
mov
hlt
scas
mov
lock
inc
xor
aad
je
push
icebp
in
jno
dec
pop
cmp
adc
mov
add
outsl
jbe
pop
cmp
push
mov
enter
dec
push
popa
in
js
sub
or
cmc
in
cmc
inc
sub
ljmp
and
inc
out
mov
cmpsl
push
adc
dec
add
mov
fldt
jbe
or
jl
out
gs
sahf
mov
int
pop
cltd
mov
jbe
outsb
sbb
mov
sub
jo
and
push
popa
pop
int3
adc
or
adc
xchg
push
sbb
mov
pusha
xchg
sub
push
inc
pop
push
fildl
add
jle
inc
out
arpl
push
fdivrs
xchg
dec
fisttps
dec
dec
mov
lea
xchg
push
andl
jg
push
aas
pop
sbb
mov
jns
into
call
sub
jge
mov
mov
jb
xor
sub
mov
sbb
ret
cli
sbb
cmp
ret
dec
in
xchg
stos
mov
add
les
loope
push
push
xchg
pop
outsb
jo
out
leave
es
cmp
addps
pushf
insl
call
jp
daa
pop
cmpsb
insb
out
mov
jp
jmp
mov
out
mov
jge
push
into
cmp
pop
lret
stc
inc
or
and
mov
aam
push
fstpt
mov
lods
testb
push
inc
ret
insl
inc
fwait
mov
xchg
dec
fldt
insl
lea
loop
push
jl
mov
fstpt
out
push
stos
cmp
jl
xchg
cwtl
fbld
add
les
cld
stos
adc
in
mov
movsb
push
aam
ss
test
aas
jne
neg
cmp
in
int3
jmp
hlt
inc
cmp
mov
add
icebp
sub
outsb
jle
es
mull
out
outsl
sub
iret
inc
movl
and
jecxz
fnstenv
jmp
xchg
dec
rorb
dec
jp
push
inc
loop
aaa
pop
aas
mov
push
movsl
fsubp
rorb
push
push
pop
jle
repnz
xchg
aad
cmc
outsl
lret
iret
mov
adc
cli
ret
imul
sub
push
xor
xchg
filds
or
jmp
pop
inc
pop
aaa
mov
in
popf
xchg
loop
cmp
fadds
leave
adc
push
jno
or
xchg
pushf
jae
inc
out
call
xor
push
adc
adc
dec
shlb
mov
add
mov
out
and
icebp
jns
adc
aam
je
imul
dec
test
mov
out
loope
adc
insl
sub
sub
hlt
enter
xor
pop
mov
fsub
subl
scas
jns
add
push
in
sub
xchg
sub
xlat
mov
lcall
arpl
pop
add
loop
mov
daa
test
lahf
xchg
mov
cmp
addr16
in
orl
and
push
cmp
add
or
inc
stc
jmp
mov
jp
adc
das
xor
out
movsl
in
cld
imul
insl
xchg
pop
mov
arpl
in
inc
mov
scas
ret
movntq
scas
sarb
or
xor
out
out
pushf
pop
adc
pop
pop
xchg
push
clc
aaa
jno
and
pushf
fs
in
adc
lret
mov
xor
repz
pop
sub
lock
add
mov
jo
pop
in
mov
and
lock
ficomps
jge
push
cmp
push
lcall
cs
movsl
scas
inc
mov
add
int
iret
cwtl
jmp
into
lods
add
insl
dec
mov
push
lea
lahf
push
mov
in
push
and
dec
call
jl
sbb
repnz
sbb
jnp
xor
jno
xchg
lcall
lods
mov
arpl
pop
iret
stos
xor
mov
bnd
mov
aam
shr
inc
insb
out
mov
mov
pusha
xor
clc
aam
rclb
cmp
sbb
rcl
mov
inc
push
ljmp
sbb
popa
in
mov
shlb
popf
adc
inc
js
push
aaa
icebp
dec
cmp
sbb
jmp
lahf
nop
add
xadd
cwtl
push
fsubrl
or
dec
xor
ss
mov
pop
push
cld
xchg
cmp
mov
push
les
adc
mov
test
lcall
arpl
xchg
push
and
xchg
rorl
loopne
xor
jge
stc
pusha
push
int
adc
push
imull
cmp
xchg
push
lret
fbstp
dec
mov
sbb
and
and
int
in
sbbl
or
add
loop
mov
shlb
push
mov
add
pop
xchg
in
mov
dec
fidivrl
lahf
sahf
out
jo
push
push
mov
arpl
pop
cmp
mov
jg
pop
mov
imul
inc
adc
mov
mov
or
xchg
mov
int3
in
clc
mov
pop
adc
dec
push
les
je
icebp
xor
pushf
dec
push
cmpsb
lret
xchg
jge
xchg
sahf
and
push
ret
inc
cmpsb
loop
jmp
pop
mov
bound
mov
or
xchg
push
pop
cmp
lcall
sbb
cli
and
fwait
int3
cltd
scas
stos
pop
jl
int
push
xchg
xlat
nop
sub
rcrb
mov
out
pop
sbb
lea
in
xchg
rcrb
in
mov
cmp
rolb
or
sbb
stc
mov
stc
lock
inc
leave
cltd
jp
cmpsl
ljmp
shll
popf
test
lods
fimull
clc
in
out
ret
lcall
int
addr16
jp
and
insb
pop
pop
push
jae
push
mov
xor
xorb
imul
jne
fs
popf
push
add
adc
test
sbb
inc
adcl
stc
stos
aaa
inc
cmp
aaa
aaa
ret
and
jp
cmpsl
je
fcoml
shll
xchg
sub
adc
xlat
cmpsl
xchg
push
xchg
mov
adc
mov
cmp
cli
and
mov
imul
lret
andl
cmp
daa
and
push
idivl
push
rcl
bound
jp
sub
lcall
inc
pop
testl
push
fsubs
sub
xor
fs
out
and
pop
pop
jmp
cmp
ds
inc
scas
ficompl
add
dec
xchg
adc
stos
xchg
idivl
jbe
out
adc
push
stos
adc
push
test
stos
dec
pcmpgtw
adc
mov
lret
hlt
shlb
xchg
cmp
bound
push
mov
jbe
lock
pop
push
dec
mov
pop
std
push
frstor
mov
mov
jo
inc
cmp
mov
ja
and
or
dec
cli
mov
push
jecxz
pop
xchg
mov
enter
push
lods
jbe
arpl
mov
mov
and
cltd
iret
js
xor
xchg
cltd
inc
cmp
js
mov
leave
and
push
sti
xorl
iret
dec
dec
insb
shl
xor
in
dec
mov
scas
shlb
in
push
or
sbbl
lods
loopne
dec
mov
fs
push
popf
mov
pop
and
sti
dec
pop
out
insb
arpl
mov
mov
lret
stos
xchg
xor
aaa
push
test
insb
sub
mov
push
push
sbb
les
xchg
push
jae
sbb
push
push
sar
fwait
movsl
pop
mov
jb
cmp
push
popa
adc
std
std
xor
or
iret
cwtl
lods
sarl
jmp
lret
adc
in
outsb
jns
mov
or
add
and
cmp
shr
cmpsl
inc
fcomp
mov
mov
fdivs
repz
jmp
mov
dec
add
test
icebp
pop
in
ficompl
rcr
mov
cltd
ds
and
fisttps
mov
lret
mov
int
cwtl
sub
maxps
repnz
mov
ds
in
dec
arpl
inc
add
cltd
movsl
in
fisubs
cmp
jo
adc
inc
orb
mov
add
cmp
cmpsl
mov
ja
adc
enter
adc
aam
adc
lgdtl
nop
cmp
das
pop
repz
cmp
iret
mov
mov
adc
sbb
sub
and
xchg
jae
dec
loope
xchg
cmpsb
jg
sub
das
lds
dec
jns
xchg
dec
and
mov
cwtl
and
rcll
ret
and
pop
int3
or
push
bound
ficoml
fistpl
xchg
lret
hlt
jmp
sub
cmp
sub
inc
imul
xor
push
pop
jg
sarb
sbb
push
aam
ret
lea
loop
push
xchg
mov
pop
sbb
dec
pop
mov
ret
pop
ss
pop
push
and
jno
fsubrs
push
das
cmp
in
push
adc
stc
sti
ret
ds
adc
xor
or
add
inc
inc
jge
and
in
adc
dec
sbb
mov
aad
cwtl
cld
lcall
jge
pop
dec
ss
fsub
cmpl
mov
fs
inc
adc
loopne
cmpsb
pop
mov
and
inc
and
dec
sub
and
add
into
test
mov
loopne
scas
and
push
scas
adc
leave
or
test
mov
xor
sbb
clc
orb
push
sbb
xchg
mov
int3
cmc
addr16
pusha
ljmp
push
addr16
or
cmp
fsub
pop
inc
cmp
stc
roll
cmp
ror
xchg
sbb
mov
add
popa
mov
push
push
and
fildl
imul
lds
mov
std
out
mov
outsb
adc
lods
cmpsb
pushf
pop
ss
es
jno
dec
push
cmc
out
push
arpl
push
clc
lock
mov
or
in
aaa
add
aaa
std
adc
icebp
push
mov
mov
ja
data16
jecxz
jl
cmp
or
mov
cmp
pop
xlat
adc
ficompl
mov
cmp
int3
xchg
or
repz
gs
es
cltd
mov
popf
pop
mov
lds
rolb
xchg
out
int3
jp
test
loope
sub
roll
gs
dec
pushl
sub
add
aam
sahf
nop
mov
mov
push
xchg
outsl
ret
ss
ljmp
aam
mov
cmpsl
and
adc
and
or
sahf
mov
scas
shrl
adc
mov
pop
push
inc
adc
dec
dec
or
or
sbbb
loope
and
arpl
mov
out
push
cmp
dec
outsl
adc
aam
out
mov
push
test
mov
pop
add
cwtl
mov
sub
mov
imul
xchg
inc
cltd
inc
or
popf
mov
sahf
jmp
pminsw
fdivp
sub
dec
in
push
mov
std
jnp
lods
jge
cli
push
popf
mov
push
addb
mov
adc
adc
jbe
fsubl
lahf
mov
mov
mov
or
stos
scas
push
test
push
pop
inc
loopne
and
add
das
cmp
es
imul
lret
cs
jmp
ss
test
por
test
xchg
jmp
dec
lods
cmp
fsubl
inc
clc
xlat
cmp
scas
ficomps
dec
dec
xchg
pop
pop
cmpsb
or
push
mov
dec
xchg
jae
fcom
mov
push
xor
rcll
push
mov
push
jns
lcall
and
adc
add
je
jns
push
je
stos
push
lahf
sbb
icebp
inc
ror
push
xchg
xchg
sti
pop
pushf
dec
push
inc
inc
test
pop
mov
scas
adc
cmp
push
iret
xchg
lods
subb
xchg
sbb
aad
ret
test
push
or
ja
sbb
mov
xchg
cmpsb
pop
out
mov
sbb
jae
mov
repnz
scas
hlt
in
cmp
mov
cmp
jp
sbb
inc
outsl
aad
popf
sbb
mov
shr
in
bound
lods
or
int3
pop
sbb
cmp
pop
shr
aad
in
mov
dec
fsubrl
sbb
jns
lahf
sub
mov
lret
add
mov
test
lcall
fists
mov
jecxz
sub
and
push
jae
sbb
dec
or
add
or
loopne
repz
mov
sub
fwait
xchg
test
cli
push
roll
dec
add
or
sbb
and
mov
xchg
pop
inc
mov
fidivrl
push
push
inc
popf
sarb
mov
cmpsl
mov
sub
stos
jmp
mov
push
mov
sub
sti
fs
leave
ret
mov
sahf
sub
adc
je
out
loopne,pt
mov
jne
xchg
js
es
shrl
nop
out
or
in
mov
xchg
mov
sbb
and
sbb
rorb
mov
cli
and
pop
and
add
andl
push
gs
iret
mov
mov
adc
cmpsb
stos
xor
sbb
jbe
push
mov
mov
mov
cwtl
xor
adc
out
bound
or
loopne
jecxz
mov
sbb
cmp
mov
mov
sarl
jno
dec
mov
cwtl
and
popf
ret
xor
cs
fistps
out
test
es
test
sbb
shl
scas
mov
dec
inc
pushf
loope
cmp
xlat
and
in
shlb
icebp
mov
es
push
dec
cmpsb
add
pop
xor
popa
sarl
sbb
jb
sub
push
and
push
rorl
ror
aad
es
jle
dec
mov
les
sub
aad
test
insl
pop
fs
sti
add
lcall
push
cmp
test
fwait
in
cs
fildl
mov
sbbl
clc
sbb
or
ret
sub
add
fcomps
push
lods
push
sbb
call
mov
dec
sbb
push
jecxz
cs
mov
inc
add
fucomip
sub
mov
icebp
sbb
sahf
mov
scas
inc
lret
shrb
jl
out
sti
sahf
xor
mov
lea
imul
repz
movsl
xchg
jle
je
jmp
mov
ds
jge
addr16
insl
cmpsl
xor
pop
push
clc
movsl
rorb
movsb
out
pusha
mov
add
sub
bound
and
mov
jne
aad
adc
mov
mov
sub
sub
adc
and
push
push
sbb
les
insl
in
jp
xor
sub
add
cltd
roll
andl
pop
les
jl
pop
mov
test
outsb
or
cltd
mov
push
adc
aaa
xchg
sub
shrl
jne
push
mov
daa
ret
xchg
dec
mov
out
aad
xor
mov
iret
mov
jb
outsl
pop
sbb
push
sub
dec
loope
jno
mov
lahf
or
inc
cld
add
or
les
jnp
jle
fidivs
xchg
nop
pop
mov
push
outsl
sub
cmp
fs
lock
ret
rcll
fwait
ret
cs
ret
sub
jns
fmull
mov
mov
bound
mov
mov
sub
out
jge
movsl
push
push
pop
test
cmp
mov
dec
or
sub
jns
bnd
pop
fstpl
xchg
ljmp
xchg
cmp
xchg
lret
lret
inc
sub
jl
popa
pop
icebp
aam
dec
jg
andl
in
jmp
mov
inc
cmp
sbb
loop
add
ljmp
movsl
ds
fcomp
ss
ror
mov
pop
stos
dec
mull
divb
xor
movsb
call
jecxz
push
lret
fnstenv
gs
jmp
bound
pop
adc
mov
cmp
adc
jle
sbb
sub
daa
xchg
adc
ss
ret
add
imul
mov
lcall
dec
adc
fldt
cltd
jg
cltd
lods
je
imul
hlt
jl
jecxz
das
cmp
andl
pop
cs
lahf
mov
xchg
push
adc
int3
in
xor
in
cs
add
inc
mov
cmp
mov
lret
in
stc
cmp
divb
mov
and
pushf
dec
mov
test
shll
hlt
pop
popa
cmp
mov
dec
sti
out
call
mov
subb
cmp
jmp
rcl
jl
popa
psrad
mov
push
ret
pusha
adc
or
ficomps
std
adc
mov
xor
mov
cmp
enter
addr16
and
cmp
nop
push
pop
push
xchg
insb
test
out
aas
stos
into
inc
push
in
fwait
adc
test
sbb
arpl
sahf
aam
or
inc
shrb
pop
jge
sarb
ret
xlat
imul
mov
pop
push
mov
repnz
or
pop
sub
or
xor
lret
cmp
in
xor
add
incb
push
jge
jno
sub
cwtl
les
lret
in
bound
cmp
jnp
fs
stc
imul
in
loop
mov
sub
sbbb
mov
cmp
mov
scas
fldcw
and
sarb
mov
dec
jnp
sarl
xor
lret
cltd
jl
mov
outsb
hlt
add
mov
dec
int3
lods
xor
in
in
pop
add
testl
movsl
cmp
adc
repnz
pop
push
daa
dec
xor
mov
lea
arpl
mov
pop
adc
inc
push
jnp
test
insl
lock
sbb
cs
mov
mov
sub
test
xchg
push
std
mov
clc
pmaxub
lock
das
insl
push
mov
mov
xor
add
fcoms
fidivl
sbb
in
push
es
or
push
cld
and
add
aaa
cmp
scas
lret
out
inc
dec
jnp
mov
cmp
popa
arpl
lcall
xchg
cltd
pop
mov
cwtl
push
sbb
add
xchg
mov
fbstp
test
xchg
add
fwait
jnp
call
cwtl
pushl
jae
mov
jl
add
sub
mov
dec
mov
cmp
mov
lds
adc
push
out
div
jp
rorb
scas
or
mov
addr16
fucom
sub
sbb
movsl
lock
popf
cmp
in
jl
lret
pushf
lods
inc
and
dec
push
das
inc
add
pop
dec
mov
mov
fcompl
sbb
shrb
out
pop
in
lret
push
js
clc
cmpb
mov
pop
jnp
inc
out
mov
inc
jb
pop
rol
xchg
mov
out
mov
cmp
xchg
jne
xor
push
pop
imul
push
orb
add
cmpsb
lds
inc
test
bound
cwtl
push
mov
in
lods
lret
test
dec
fsts
pop
out
add
cwtl
xchg
dec
push
int3
or
sahf
icebp
and
push
adc
out
test
adc
sbb
dec
jno
repnz
adc
stos
inc
and
jnp
repnz
and
mov
bound
mov
arpl
cmpsl
aaa
aam
gs
lea
mov
pop
ja
cmpsb
ret
mov
pop
nop
dec
lds
in
and
ljmp
push
dec
mov
lret
push
pop
filds
sbbb
sbb
cld
jp
cli
lcall
pop
or
mov
push
loop
xlat
inc
addr16
dec
add
ds
push
and
push
mov
dec
xchg
stc
push
ds
sbb
xor
ror
in
adc
imull
fcom
ret
test
das
cmp
pop
and
cmp
pushf
mov
not
ja
add
mov
orb
mov
xor
int
repz
imul
xchg
lds
add
packsswb
sub
xor
jmp
and
out
scas
jl
adc
cmpsb
jbe
inc
push
inc
cmpsl
rcl
sti
mov
pop
or
mov
divl
dec
das
dec
push
or
ffree
jno
xchg
jmp
ret
mov
pop
movsb
dec
push
mov
insb
lock
mov
xchg
pushf
orb
ret
xchg
call
cmp
pop
fsubr
mov
imul
add
dec
inc
lcall
shlb
jmp
add
cmp
lret
or
push
fisttpl
enter
adc
scas
shlb
add
cmpsl
lcall
xchg
femms
movsl
fdivrs
inc
inc
in
add
mov
inc
push
mov
repz
imul
std
test
lret
mov
mov
or
mov
push
xlat
call
fimull
ja
cli
and
bnd
ljmp
popa
or
imul
mov
pop
pop
mov
xchg
mov
jbe
sarl
jno
xchg
cld
addr16
and
pusha
xchg
insl
xchg
arpl
sbb
insb
sub
cmp
push
rcrl
sti
fldcw
pop
fsubl
add
das
cwtl
scas
jne
repnz
loopne
adcb
adc
outsl
daa
jno
loopne
mov
inc
fidivrs
jo
jecxz
fiadds
mov
js
fldcw
pop
into
sarb
dec
movsb
dec
outsb
mov
fisttpll
mov
inc
dec
int
jno
xor
xchg
std
clc
imul
je
call
daa
mov
aas
or
inc
imul
sub
into
xchg
xchg
cli
inc
jp
mov
mov
add
mov
cs
fdivrl
add
mov
imul
xchg
inc
and
ret
jnp
cmp
andb
push
incb
cld
out
adc
adc
xchg
ja
flds
int3
movsl
out
jle
and
mov
sbb
or
out
pop
cld
mov
jmp
and
ds
sub
mov
push
xor
fwait
adcb
xor
xor
jno
aad
inc
std
push
nop
or
ficomps
scas
fists
das
bound
dec
stos
jl
stos
ja
push
scas
xchg
sbb
imull
sub
fbstp
scas
fstps
dec
add
fsubrs
cld
add
xor
das
or
mov
aas
dec
mov
cs
mov
mov
add
and
fsubp
mov
adc
adc
jecxz
cli
jo
push
add
inc
inc
lret
push
jb
mov
cmpb
dec
or
xchg
popf
xor
mov
cld
inc
dec
sbb
mov
jle
clc
add
sbb
ret
sbb
cmc
lock
imul
inc
out
mov
roll
jl
popf
rcrb
xchg
push
cmp
add
clc
fcmovne
outsb
and
cwtl
subb
push
lods
int3
inc
push
xor
in
cmp
test
or
sub
test
test
dec
fidivs
dec
and
stos
test
sbbb
and
cltd
adc
pop
xchg
push
ret
rclb
enter
inc
insb
sbb
cli
divb
or
xchg
add
popl
rorb
and
cld
out
sbb
int3
into
mov
rcrl
enter
mov
fistpl
sbb
mov
rcrb
int
sbb
movsb
hlt
pop
push
fsts
imul
sub
mov
scas
in
xor
mov
xchg
dec
and
push
pushf
scas
je
adc
js
fucomip
xor
dec
call
pop
add
push
sbb
add
push
push
or
cmpsl
sti
out
lods
xlat
inc
mov
pop
xchg
sbb
loope
jge
stos
pusha
nop
add
cs
mov
jecxz
xchg
clc
pop
add
xor
or
daa
rorl
hlt
std
mov
jnp
inc
fadds
mov
and
sub
icebp
mov
sbb
and
add
add
jl
repz
push
or
aaa
repnz
imul
xchg
jecxz
out
adc
dec
and
loop
jg
repnz
mov
popf
dec
adc
sahf
lret
lds
clc
fisttpl
xorl
jge
pop
call
adc
fstps
add
mov
fmul
adc
xchg
xchg
out
sub
fistpl
xchg
shll
add
jp
push
imul
out
leave
xchg
mov
movntq
aaa
sahf
int3
jo
stos
mov
ret
pop
mov
adc
leave
jnp
call
add
mov
xor
xlat
add
jle
pop
inc
xchg
cmp
cmp
xorl
popf
mov
mov
add
scas
push
inc
aam
test
jl
xchg
testl
lods
pusha
xor
jnp
sbb
push
rcrl
loopne
shrl
jne
je
imul
xor
out
not
leave
jnp
cmc
ficoms
or
lds
jne
mov
int3
inc
push
pop
sbbl
clc
aam
cmp
mov
lahf
icebp
adc
aaa
pop
jbe
adc
pushf
push
push
in
sbb
or
sbb
shrl
jo
push
cmp
js
scas
push
aas
mov
cs
bound
aaa
jns
not
out
jnp
pop
setne
pop
and
cmp
jnp
mov
push
hlt
ficoml
emms
or
in
dec
lcall
push
pop
stos
incb
insb
jne
int3
lods
jne
dec
mov
enter
mov
mov
ret
pushf
std
cmpl
mov
adc
rorb
imul
scas
mov
cltd
and
mov
shr
push
andl
test
rcl
xchg
aas
lret
dec
inc
mov
or
push
cli
pop
adc
fwait
cmp
stc
push
xchg
jo
push
mov
mov
sbb
ret
jno
xor
fwait
or
inc
xor
repz
test
adc
xor
jbe
bound
adc
outsl
adc
filds
pop
jp
jg
dec
push
pop
xchg
push
xchg
test
pop
loop
sbb
stos
adc
ret
or
mov
lcall
daa
out
fmulp
inc
scas
repnz
cmpb
sbb
mov
pop
pop
pop
int
mov
push
push
rclb
lcall
cs
mov
push
out
mov
inc
rol
das
jnp
outsl
push
push
push
push
add
jns
mov
ret
pop
adc
sbb
lea
fwait
mov
jo
fiaddl
out
rorl
movsb
pop
dec
cmp
dec
lcall
pop
repnz
and
pusha
push
sbb
shrl
mov
mov
xchg
lret
or
xor
adc
dec
jge
dec
inc
dec
pop
sub
mov
push
push
ss
xchg
mov
xor
dec
cwtl
repz
fwait
dec
aam
imul
aas
aas
mov
adc
leave
enter
xor
sbb
mov
xorb
add
cmpsl
jnp
hlt
pop
cmp
imul
nop
sti
jecxz
mov
mov
push
jle
rorb
mov
or
mov
rcl
mov
icebp
xchg
jbe
push
data16
xlat
adc
jae
mov
cmp
adc
mov
lahf
scas
fcompl
add
sbb
pop
iret
test
imulb
mov
inc
js
jns
mov
rorl
into
popa
out
lcall
push
fwait
loopne
inc
stc
out
div
adc
pop
cwtl
sbb
gs
pop
and
pop
std
adc
jne
hlt
in
popa
pop
popa
cli
mov
mov
mov
cmp
xor
and
jge
hlt
push
imul
jecxz
loop
ret
pushf
inc
adc
cmpsl
inc
shl
xchg
test
enter
add
int
mov
inc
xchg
out
test
xor
imul
scas
sbb
pop
pushf
mov
cmp
insl
inc
fcmovbe
addr16
mov
lret
in
pop
mov
insl
jb
hlt
flds
pop
or
sti
imulb
sarb
mov
or
add
mov
push
or
push
mov
lock
movw
jns
xlat
popa
lcall
mov
lds
cmpsb
mov
pushf
mov
dec
xor
xchg
div
in
ret
jns
fimull
aaa
insl
test
scas
cmc
lcall
das
imul
out
pushf
or
dec
jg
xchg
jl
outsb
test
cwtl
dec
jne
mov
repnz
and
xor
icebp
std
cld
scas
add
in
clc
inc
mov
adc
and
jge
jg
mov
or
push
fsubrl
stc
jb
nop
jle
mov
outsb
push
mov
push
lods
or
xor
popf
xchg
insb
mov
sbb
push
addr16
in
push
jl
in
jbe
loope
in
jl
push
rcll
xor
daa
mov
dec
pop
fcomi
push
enter
sbb
cmp
test
stos
and
jae
xor
cmp
and
test
dec
mov
std
cwtl
rcll
call
int
mov
push
lret
pop
notb
and
push
add
mov
mov
pop
dec
adc
or
sub
xchg
lea
add
or
add
icebp
mov
out
mov
rorb
xchg
imul
mov
sbb
push
inc
add
xor
loopne
add
cld
xor
arpl
pop
mov
jmp
adcb
mov
aas
inc
test
push
dec
aas
jmp
inc
push
jnp
mov
daa
xor
xor
test
inc
js
dec
sub
aad
jne
mov
ss
cwtl
or
data16
lock
sbb
ljmp
in
fsubrl
sub
fistpl
jmp
pop
jae
leave
jp
dec
push
movsl
mov
xchg
xchg
mov
fwait
cli
ds
and
jp
leave
xlat
jmp
inc
sti
ja
out
insl
adc
push
aas
adc
cmpsb
jmp
je
jecxz
pop
aam
push
cmp
shlb
push
daa
sti
mov
mov
incb
cmp
mov
or
jp
jge
shl
mov
mov
mov
nop
mov
sbb
ret
xchg
bound
mov
int
jns
into
roll
nop
outsl
lahf
vpor
cld
xchg
movsl
adc
pop
mov
ja
xchg
sbb
lods
xchg
adc
sbb
cmp
adcb
or
or
push
xbegin
or
scas
sbb
pop
rcr
pop
mov
aaa
fistl
notl
add
sbb
push
add
pop
xor
andl
outsb
dec
sbb
push
cmp
out
addr16
int
adc
xchg
mov
xor
sqrtps
mov
push
test
dec
cwtl
inc
push
add
xchg
lods
or
sbb
inc
sub
jno
mov
js
scas
cltd
xchg
lcall
nop
aas
jmp
lcall
or
pusha
mov
xor
das
push
int3
push
stc
inc
push
mov
sub
pop
push
add
out
hlt
das
adc
xchg
mov
mov
adcb
adc
cmpsb
cmp
scas
jecxz
lock
gs
xlat
aaa
jge
xchg
cwtl
mov
repz
popf
sub
in
mov
push
mov
shlb
aam
mov
shl
adc
push
add
push
pop
and
fcoml
in
test
mov
sbb
adc
sub
test
mov
jp
xchg
xor
and
stos
out
cmc
leave
pop
mov
gs
into
sub
xor
lahf
inc
push
das
xor
and
sub
cwtl
lds
xchg
xchg
imul
sbb
xor
mov
jle
icebp
aam
push
and
jo
jb
jmp
popa
and
inc
adc
jg
fdivs
roll
or
in
mov
test
add
hlt
and
loope
fisttpl
shl
adcl
shll
adc
movups
scas
jns
fbstp
and
stos
push
ret
or
xchg
mov
pop
jge
xchg
dec
call
data16
je
cs
push
add
jns
push
xor
andb
cmpsl
out
push
je
and
cs
gs
fs
xorl
jl
mov
sub
jp
dec
xorl
cmp
les
insl
stos
daa
je
sbb
mov
dec
popa
data16
cmp
xchg
push
push
jl
in
addb
pop
cmc
and
pop
xchg
mov
bound
jl
ds
cmc
and
inc
insb
lret
bound
and
jg
cmp
inc
ljmp
mov
push
rcrl
ljmp
or
imul
adc
mov
pop
mov
cmp
std
adc
xchg
das
pushf
ror
push
or
dec
jg
cmp
push
lods
fnstsw
mov
pop
loope
mov
or
imul
call
stc
pop
or
add
test
test
scas
add
das
movsb
push
mov
shl
lods
lds
sbb
or
xchg
loopne
scas
rclb
popa
ss
push
adc
dec
sub
cwtl
bound
scas
adc
stos
push
aad
xor
notl
adc
fwait
sbb
dec
cmpsl
xchg
jb
add
das
shrb
cltd
outsb
xchg
inc
xor
xchg
cmp
xchg
es
ficoml
enter
es
pop
pop
push
lret
sarl
in
add
pop
orb
or
fdivs
movsl
or
or
mov
xchg
or
fwait
push
xchg
movsb
dec
pop
in
adc
dec
stos
shrb
call
mov
or
inc
aas
cli
scas
in
ret
mov
stos
std
mov
mov
push
pop
pop
movl
jle
mov
lret
or
rclb
mov
repz
lcall
push
outsl
fidivrl
sbb
cmpsl
dec
push
daa
mov
sub
dec
into
mov
test
sbb
sub
out
inc
add
sub
sub
clc
test
and
mov
inc
in
shrb
and
dec
add
in
or
or
or
jnp
sub
push
mov
add
insl
inc
adc
push
jbe
add
xchg
jle
fsubrs
sub
jp
pop
sub
ds
pop
sbb
lods
fmuls
dec
jo
insb
push
mov
or
sar
pop
aad
xchg
icebp
cs
jge
std
xchg
aam
and
xor
cld
mov
cwtl
jnp
repz
in
adc
and
cmpsb
adc
nop
aam
imul
mov
pusha
fwait
or
sbb
int
xchg
negb
push
lret
sbb
jmp
jbe
inc
and
mov
or
and
insb
scas
mulb
and
hlt
or
daa
cmpsb
lret
orl
pop
lret
repz
leave
mov
enter
ljmp
fnstcw
xchg
add
pop
sub
inc
rclb
ds
mov
fdivs
cld
xor
shlb
pop
mov
pop
mov
xchg
xchg
lret
mov
inc
dec
movsl
push
push
jb
mov
sub
inc
sub
add
icebp
push
and
xor
push
fdivrs
pop
arpl
pop
out
mov
cmp
pop
xchg
pop
leave
sbb
jle
addr16
arpl
scas
outsb
inc
faddp
cmp
or
or
stos
movb
push
scas
into
xor
out
push
sbb
add
mov
mov
fimuls
dec
insb
pop
jp
addr16
cmp
rolb
mov
call
mov
inc
loop
test
adc
in
int3
lret
ss
nop
pop
mov
cmp
cmc
sub
pop
sub
fwait
pushl
mov
ljmp
pop
imul
mov
sbb
ret
test
mov
pop
pop
fsts
xchg
pop
push
je
mov
idivb
cmp
pop
cmpsb
adc
mov
xor
out
dec
fistl
pop
int3
jge
cmp
xor
scas
int3
es
cmp
mov
cwtl
push
pop
sub
fcmovnu
popw
jae
adc
pop
out
inc
push
xchg
popa
dec
mov
adc
sti
fsubr
push
mov
fcompl
jp,pt
fcoml
pop
sub
test
and
jne
stos
lret
mov
pop
push
aas
or
hlt
xlat
cmp
ret
push
mov
ss
push
jle
aaa
push
xchg
stos
dec
jg
or
mov
mov
je
pop
rcr
pop
inc
enter
lahf
or
lcall
aas
or
mov
stos
jmp
pop
inc
xchg
hlt
and
xor
jo
arpl
sub
iret
inc
dec
xor
test
aad
dec
test
mov
dec
xor
sbb
push
int
mov
jno
mov
pop
js
stos
inc
mov
add
add
ret
test
sub
push
test
dec
cmp
push
push
dec
xchg
cmp
lods
das
inc
lds
pop
clc
adc
mov
cld
add
pop
lds
jle
shl
cmpb
lea
dec
hlt
push
in
mov
and
je
pop
push
jne
sbb
mov
and
out
lea
lret
push
int
fdivr
and
mov
test
push
dec
daa
xchg
movsl
and
inc
imul
sti
add
lods
cmp
lret
es
mov
addr16
mov
jne
mov
add
subb
lret
int
or
jne
pusha
stos
rol
fbld
push
mov
xchg
rolb
jmp
pop
test
ss
gs
xchg
cmpb
dec
sbb
pushl
mov
and
es
add
jnp
inc
dec
push
cmp
hlt
jo
push
inc
lret
adc
in
aam
in
out
dec
pop
jmp
mov
add
add
lret
mov
movsl
xchg
out
mov
xchg
outsb
push
aad
test
mov
sahf
lret
mov
add
push
and
mov
mov
lock
mov
loop
sub
push
cs
in
outsb
sub
pop
cltd
mov
push
lahf
xor
scas
adc
adc
push
lcall
addr16
mov
jmp
sbb
inc
mov
stos
je
add
stos
sbb
lods
mov
loop
cmp
mov
shll
pop
add
adc
mov
add
lcall
jle
pop
int
cmpsb
push
jge
and
xor
xor
sub
push
roll
pop
pusha
and
xchg
add
sarl
rcr
mov
pop
pop
xchg
cld
mov
test
divl
cli
jo
les
mov
xor
pop
enter
xchg
test
pop
pop
int3
sub
popf
imul
sar
mov
jae
mov
scas
movsb
jns
adc
aas
cwtl
in
sbbl
jo
scas
dec
inc
or
xor
movsl
dec
and
data16
out
push
cmovns
or
or
xchg
sub
adc
push
test
xchg
or
out
inc
out
xor
test
xchg
mov
or
and
inc
pop
out
out
sbb
inc
mov
xor
mov
rcr
jl
xchg
cli
pop
or
pop
into
shrl
xor
pop
stos
fstpl
movb
lret
inc
push
scas
scas
xchg
dec
jge
imul
dec
daa
push
mov
inc
and
pop
xor
sub
lds
loop
insb
aaa
mov
mov
push
jp
xor
push
xor
mov
or
mov
xor
int3
leave
xor
xchg
addr16
adc
das
or
cmpsl
int
mov
adc
xchg
cmpsb
push
daa
lea
out
mov
and
jecxz
stos
ljmp
inc
sbb
mov
and
imul
pop
aas
cmp
clc
pop
nop
pusha
mov
popa
sub
push
cmp
xchg
popf
ja
mov
xchg
insl
bound
fcomps
imul
jl
inc
into
daa
xchg
ret
fmul
pop
sbb
cmc
jle
mov
or
mov
enter
push
jbe
fnsave
xchg
int
and
xor
sahf
test
mov
and
push
cli
gs
mov
out
push
or
dec
rol
or
push
inc
jno
aaa
adc
aad
push
or
sub
jge
aam
pop
mov
xor
test
push
in
jnp
adc
cwtl
pop
cmovae
dec
push
jns
mov
jb
movsl
aam
popf
dec
mov
decb
xchg
adc
iret
std
push
loopne
push
sti
push
and
xchg
hlt
and
pop
shrb
movsl
ds
lods
push
pop
out
adc
xor
cmc
xor
push
cltd
outsl
sbb
repnz
add
xor
or
ja
popf
xchg
push
adc
xor
popf
mov
test
mov
fs
push
call
cmp
fmulp
pop
push
adc
mov
push
mov
movsb
aaa
outsb
mov
das
sbb
ljmp
out
xchg
mov
cli
add
xchg
push
push
jb
dec
push
or
sub
push
dec
inc
mov
adc
in
jle
or
xchg
aaa
jl
jbe
aas
adc
push
mov
insb
jae
jecxz
mov
xchg
cmc
frstor
lcall
movsb
xchg
xchg
xchg
fadds
inc
lea
hlt
sub
mov
pop
dec
mov
movsl
jns
and
into
outsb
test
pop
lret
sub
pop
adc
xor
shlb
dec
pop
sti
aad
mov
jne
test
add
mov
ljmpw
lcall
data16
subb
xchg
andl
fcomps
push
fimull
test
push
lret
mov
jl
inc
xor
push
sub
cwtl
add
jae
fistps
mov
addl
push
and
es
mov
lods
mov
mov
xchg
inc
out
push
js
mov
mov
cmc
mov
stos
inc
into
push
mov
gs
int3
out
andl
xlat
ret
push
xchg
shl
fistl
inc
cmpsl
or
in
mov
mov
dec
xchg
fwait
aaa
inc
jne
mov
fs
mov
lods
push
sub
sahf
mov
mov
shlb
std
add
inc
jb
xchg
mov
jns
popa
pop
ja
sub
loop
pop
xor
testb
lods
or
push
mov
popa
cmpsl
out
test
inc
xchg
and
out
and
push
dec
es
pop
test
push
jp,pn
dec
inc
xor
and
mov
sahf
xor
pop
arpl
sti
lock
int3
leave
and
call
into
iret
and
xor
lahf
pop
mov
jmp
imul
int
xchg
add
sbb
addr16
jnp
pop
fidivrs
jnp
ss
cmp
add
lea
frstor
sub
fstpt
xchg
cmp
jo
mov
push
dec
mov
and
daa
sbb
inc
push
test
mov
pop
and
lea
outsl
cli
loope
dec
lods
cmp
sbb
lret
xor
icebp
scas
and
add
cmp
xchg
adc
test
notb
adc
mov
loope
pop
cmp
push
aas
popa
fldcw
jp
pusha
mov
int
push
or
popf
xlat
mov
aas
in
imul
inc
xor
push
pop
movsl
mov
push
mov
mov
sub
jle
cmc
jg
mov
xchg
ljmp
imul
jmp
imull
jnp
es
adc
cmp
cld
or
adc
js
add
test
jl
mov
inc
pushf
mov
fnstsw
mov
add
dec
add
andl
xchg
mov
cmp
int3
adc
mov
cmp
sub
inc
pushf
sub
sbbb
and
xchg
rclb
fldt
xlat
rclb
sub
test
fnstcw
jb
mov
adc
add
loop
addr16
insl
jmp
xor
mov
aaa
dec
and
inc
cmpsl
inc
popf
and
popa
outsl
and
sbb
jp
lea
push
push
sti
std
pop
cmc
rolb
les
sbb
mov
mov
stos
fsubrl
enter
adc
shl
add
orb
xchg
daa
mov
adc
fadds
cmpl
cmp
sbb
jno
mov
popf
iret
out
push
cmp
sbb
pop
aas
iret
cmc
test
rcl
ja
xchg
loope
lret
or
out
jmp
cmp
imul
movb
nop
aaa
add
insl
mov
mov
push
lret
lds
pop
dec
cli
add
xchg
stos
xchg
dec
psrlq
arpl
adc
and
xchg
cwtl
sub
je
jge
inc
outsl
and
adcl
in
mov
pop
movsb
mov
sbb
fsts
loop
rcll
xchg
or
cmp
push
mov
dec
pop
imul
pop
mov
mov
jns
std
test
push
pop
int3
out
int3
mov
xor
ret
jo
and
iret
adc
add
dec
xlat
repz
cli
pop
mov
sub
std
add
sahf
dec
lret
sbb
cmpsl
inc
aaa
sbb
fcoml
sbb
jne
xorl
push
sub
xchg
fs
addr16
sub
add
mov
daa
mov
stos
clc
js
std
mov
xchg
xor
fimull
addl
fcoms
xor
stos
ret
jg
aad
xchg
sahf
mov
sbb
test
add
or
fwait
loope
sahf
fwait
adc
lea
dec
jle
jo
cld
and
out
adc
loopnew
mov
jae
xchg
push
fstp
sub
movsb
dec
mov
push
jg
sub
arpl
rcll
and
xor
cld
imul
frstor
daa
add
push
movsl
lea
aam
mov
cmpb
xchg
mov
push
stos
out
adc
pop
or
add
mov
iret
lods
mov
lcall
aam
in
addr16
ret
pop
pop
das
mov
test
add
mov
sub
adc
daa
test
xchg
ret
test
cmp
jl
loopne
jle
and
xchg
xchg
dec
mov
push
add
mov
push
push
push
xor
and
push
sbb
ja
icebp
test
in
fimull
ss
dec
pop
mov
adc
imul
clc
dec
pop
ja
cmp
jp
aam
push
jnp
mov
insl
mov
and
or
imulb
aad
jb
mov
rcrb
pop
fcoms
adc
movsl
push
pop
mov
push
push
mov
dec
xchg
add
mov
in
aaa
ret
hlt
push
mov
and
jmp
arpl
fldenv
pop
lret
lcall
lea
dec
xchg
mov
mov
add
xor
or
iret
xor
pop
cmp
inc
push
jecxz
or
adc
sbb
and
jne
jo
xchg
mov
pop
jns
push
jb
test
sbb
fsubr
inc
jecxz
cmp
dec
dec
out
mov
adc
xor
cmpsb
jge
sti
sbb
insb
flds
or
mov
pop
ss
cltd
subl
addr16
std
sub
inc
es
push
dec
dec
cwtl
or
ljmp
shlb
push
inc
out
mov
test
mov
mov
adc
adc
mov
xchg
sub
push
pop
int3
xchg
rcll
sbb
mov
jl
push
outsb
stos
vmovq
aam
pop
cmp
pop
add
add
mov
aad
daa
jns
lock
add
ja
ljmp
xchg
mov
sarb
jge
mov
call
stos
pop
jl
or
fbld
lds
adc
dec
ds
jle
pop
jnp
popf
dec
in
test
and
in
sbb
enter
push
fnstcw
pop
imul
pop
dec
pop
iret
in
cmpsl
out
insl
cli
out
mov
mov
pop
sbbl
movsb
pop
sar
xchg
dec
sahf
fdivl
sbb
scas
jge
out
popf
mov
in
hlt
push
mov
inc
jns
mov
subb
or
jg
imul
dec
xchg
ljmpw
lods
je
or
mov
pop
mov
fisubl
mov
ljmp
xor
sub
mov
cmpsl
xchg
les
call
test
sbbb
push
jno
mov
add
js
or
js
mov
addr16
cmpsl
pop
std
or
dec
pop
repz
pop
add
xchg
mov
aad
pop
mov
das
sbb
ficoml
jg
mov
sbb
outsl
jne
push
lret
popf
and
or
sahf
outsb
sbb
xchg
jmp
out
pop
and
xchg
pop
mov
adc
jmp
inc
push
xchg
mov
mov
inc
add
sbb
pop
sub
xchg
jle
repz
fdivl
cmp
aad
jl
push
aaa
xor
cs
outsl
inc
push
lret
jbe
xchg
inc
lret
clc
jbe
orb
mov
and
cmpsb
imul
fsubrs
ret
imul
mov
xor
xchg
mov
and
cs
out
mov
mov
arpl
outsb
aad
call
inc
cld
mov
movsl
shlb
sub
inc
cmp
stos
jb
xor
loop
rcrl
addl
push
lock
shl
shl
pop
xorl
leave
insb
into
or
sub
push
jmp
push
lahf
call
test
fsubs
cmp
mov
cmc
jmp
xchg
jno
pop
loopne
insb
das
orb
jl
ret
sub
fisttpl
subb
inc
movsl
mov
loope
in
mov
sub
xor
jp
jp
test
dec
inc
les
int
cmc
scas
testb
scas
jecxz
vpaddsw
sbb
movsb
adc
jae
push
outsl
mov
cmp
push
xor
jecxz
jle
sbb
adc
ja
iret
fidivrl
imul
andb
jo
cmp
sub
jecxz
das
aad
aad
mov
clc
das
xchg
dec
data16
in
fistl
add
cwtl
add
lret
pop
push
rcll
loopne
aas
outsb
xchg
in
iret
xor
movsl
mov
and
cld
jb
pusha
mov
pusha
mov
jbe
adc
cmpsb
pop
pop
push
lock
mov
pop
cld
ror
pop
lods
fadd
inc
aaa
fisttpll
fsubrs
adc
jle
inc
rcr
icebp
dec
add
inc
xchg
xchg
mov
xor
outsb
push
rcl
not
sub
std
int3
sbb
jecxz
and
mov
or
sar
subl
shll
sbb
cli
out
jge
jno
jo
or
xor
xor
xchg
cmp
cltd
roll
sar
dec
xchg
or
cmpsl
fs
inc
cmp
pusha
dec
sbb
xchg
fnstsw
sub
pop
xchg
data16
lds
push
cmp
mov
shrl
pop
or
adc
and
flds
mov
push
int3
orb
push
sub
cmovg
adc
xor
cmp
push
pushaw
hlt
dec
and
imul
das
mov
pop
repnz
rcrl
mov
insb
jl
clc
call
cwtl
les
adc
mov
fs
cli
cs
arpl
nop
arpl
or
into
inc
lret
fwait
ret
stos
push
leave
lods
pop
fldenv
mov
repz
ja
cld
insb
leave
push
dec
mov
adc
add
mov
aad
in
fs
pop
clc
pop
xor
fs
fisubrs
cld
push
mov
jmp
sbb
shrb
rcl
enter
mov
dec
pop
push
mov
scas
rorb
jle
cmp
mov
xlat
or
ljmp
das
mov
dec
in
push
mov
ret
sbb
xchg
add
push
in
mov
or
sub
test
xlat
push
mov
das
cld
xlat
or
aad
daa
jecxz
cmc
mov
les
pop
xchg
jg
insl
pop
jbe
inc
xchg
outsl
fisubrl
rcrb
addr16
lret
xchg
ds
mov
pusha
jbe
sub
outsl
imul
clc
dec
fisttpll
cmp
subl
pop
fmuls
jo
insb
imul
cltd
adc
sbb
adc
mul
and
sbb
pop
scas
in
je
sbb
xchg
cmp
fcoms
jo
cmp
jnp
in
inc
hlt
jmp
loopne
add
dec
lcall
dec
rclb
subb
xchg
stos
fadd
test
lds
mov
mov
les
ljmp
jecxz
lods
sbb
jno
and
xchg
test
adc
jbe
mov
push
dec
xlat
cmc
shll
mov
jge
loope
jnp
pop
mov
sahf
or
adc
push
in
push
mov
push
scas
gs
aas
xor
std
stc
push
sub
decb
nop
dec
outsl
popa
rcr
popf
out
inc
loope
jo
pop
test
mov
sub
fs
fyl2x
pop
in
xchg
stos
dec
or
loope
inc
push
out
jge
or
jo
mov
aaa
insb
and
movsl
fs
inc
or
pop
clc
jbe
insb
mov
icebp
ret
insb
int3
leave
adc
adc
push
push
mov
xlat
xor
push
out
orb
sarl
mov
jns
cwtl
mov
mov
push
enter
add
in
pop
and
pop
xchg
les
mov
fld
cli
outsb
adc
lret
pop
int
dec
repz
loope
pop
mov
xchg
stc
movsb
lods
sub
add
mov
jg
pop
cmp
add
cltd
add
lar
xor
jle
mov
add
cltd
dec
adcb
push
inc
in
fstpl
pop
daa
cmpsb
push
adc
gs
push
dec
push
lods
jg
or
add
xor
push
jnp
sbb
jl
dec
mov
push
lret
inc
cmp
pop
jbe
xor
out
jo
shlb
fdivs
cmp
lods
pop
sub
jae
mov
andb
push
sub
lret
dec
repnz
mov
xor
sbb
mov
fs
xchg
and
pop
in
sub
insb
addr16
jecxz
or
cs
pop
out
jo
add
imul
add
cmpsl
inc
push
lret
cltd
leave
lcall
rorb
addr16
mov
adc
pop
xchg
mov
repnz
xor
mov
xchg
dec
cmp
addr16
mov
into
jno
repz
mov
adc
out
lods
out
imull
dec
sub
xchg
das
inc
mov
shll
cmp
sbb
aad
pop
mov
rol
xchg
orb
push
jne
iret
xchg
icebp
shl
jnp
jno
imul
ja
rol
inc
inc
adc
enter
cmp
jne
leave
lods
jo
add
sub
inc
push
lds
push
js
cld
lods
mov
imul
adc
pop
out
test
inc
xor
sub
faddl
mov
or
cmc
ret
out
jge
popl
in
xor
inc
sbbb
jnp
lds
testb
es
cmpsb
sbb
pop
rcll
icebp
push
js
sbb
mov
sub
mov
mov
mov
mov
leave
shrl
sub
jo
iret
push
dec
push
push
leave
mov
jmp
dec
lret
mov
addr16
add
imul
xchg
cmpsb
jne
incb
ljmp
ret
mov
cli
sub
sbb
xchg
mov
test
xor
jecxz
test
stos
mov
mov
mov
jo
jne
mov
lret
push
popf
jbe
lods
jge
push
cwtl
mov
ds
push
cmpl
ja
push
sbb
insb
fcmovnbe
sub
ja
cltd
jne
iret
mov
ja
pop
jg
adc
sbb
notb
mov
mov
popf
test
out
push
mov
enter
ljmp
push
pop
fdiv
bound
add
sbb
push
and
jno
insb
add
jae
xchg
stc
ds
dec
scas
xor
pop
pop
pop
sbb
mov
loop
fisttpl
pop
movsl
fsubrl
dec
jbe
lods
jb
mov
push
lahf
or
psubusw
jne
mov
push
aad
pusha
movsl
out
sub
jmp
and
leave
inc
fs
mov
sbb
loope
lahf
call
lods
or
lods
out
jo
jne
loope
test
cmp
or
negl
pop
mov
movsl
test
inc
inc
fsts
xchg
inc
mov
sub
pop
jbe
popa
and
movw
add
xchg
ja
lret
sbb
aad
lret
xchg
in
insb
push
out
bound
and
xorl
fs
sbb
jecxz
pop
data16
adc
xchg
mov
outsb
fistpl
xor
fisttps
cmp
push
shl
sub
shl
pop
mov
xlat
jmp
sbb
fidivrs
lods
lock
ljmp
mov
add
push
fsts
push
add
push
iret
and
movsl
add
fcomi
outsl
add
jno
imul
in
stos
std
push
pushf
add
mov
imul
sbbl
int
mov
mov
mov
push
dec
rolb
add
test
shrb
out
out
std
dec
jbe
jns
push
xchg
add
sbb
leave
add
into
sbb
mov
test
xchg
dec
jns
sbb
fstpl
popf
xor
enter
mov
orb
xchg
inc
loop
jns
out
fisubl
test
lods
bound
mov
push
cltd
mov
mov
and
in
cld
pop
lods
cmp
jmp
and
inc
pushf
mov
mov
out
push
inc
mov
jno
add
sahf
push
sub
int
movsb
mov
pop
mov
outsl
lret
sbb
popf
iret
loopne
arpl
pop
int
fisubrs
sbb
enter
ja
outsl
jae
mov
lcall
imul
adc
xchg
inc
into
cmp
nop
add
adc
lea
push
xchg
xchg
mov
shll
cmp
lods
stos
mov
in
pusha
pop
jle
mov
mov
test
jae
mov
imul
push
xor
dec
fwait
in
pushf
fmul
jg
stos
xchg
and
enter
pop
movsb
sbbb
inc
mov
aaa
scas
jg
outsb
lcall
push
ja
fdivp
mov
test
xlat
fwait
gs
or
fisubrl
adc
popa
jl
jo
inc
and
or
add
cmp
ss
das
sub
clc
push
lret
outsb
or
out
pop
jns
sub
cs
ss
dec
mov
jle
jge
inc
fdivl
jl
ret
jbe
xor
loope
ja
cmpsb
pop
inc
mov
adc
mov
sub
pop
mov
mov
and
dec
or
cmp
push
clc
les
push
cmp
mov
cmpsl
inc
sbb
nop
ret
xor
dec
adc
iret
jne
iret
jb
sub
push
jns
xor
jecxz
cmp
inc
movsb
fucomi
icebp
mov
ret
mov
xchg
pusha
jo
ljmp
push
pop
aad
xchg
jbe
popa
xchg
icebp
lds
adc
data16
dec
sti
aas
push
or
xor
fs
mov
cmpsl
cld
mov
sub
fcmovnb
sub
or
imul
cmp
mov
dec
mov
leave
cmpsl
fcom
inc
dec
jns
cs
hlt
jno
popf
das
mov
pop
and
std
push
ljmp
xchg
sub
sub
loope
cs
movsl
or
ds
scas
fcos
mov
rcrb
fstps
mov
dec
cmpsl
arpl
push
mov
lahf
cmp
mov
push
xchg
adc
lds
in
pop
push
dec
divb
lds
xchg
es
ret
bsf
dec
push
repnz
add
insb
or
pop
aas
rclb
loope
fisttpll
addl
clc
xor
mov
and
leave
mov
or
insl
stos
fcomi
dec
fwait
dec
pop
jge
stos
jg
pop
jnp
jne
pop
ret
pop
jbe
movsb
cld
sbbb
ja
jnp
aad
lock
add
mov
lds
out
adc
and
pop
push
lods
xor
dec
lods
and
cmpsb
adc
xchg
shr
sub
das
or
cmp
nop
push
add
aaa
cmp
stc
aad
cwtl
test
dec
nop
insb
sbb
xlat
js
mov
sub
dec
fisubrl
cli
lea
push
bound
movsl
push
jl
lea
ret
btrl
add
sar
mov
mov
iret
adc
andl
cltd
outsl
mov
xor
mov
out
lcall
fisubrl
xor
inc
ret
in
sar
jmp
subb
mov
fcoml
movsl
and
dec
pusha
adc
add
xchg
adc
ret
test
and
adc
mov
or
or
adcl
pop
call
cmp
bound
jge
sahf
push
lcall
cmp
mov
insl
sarb
cmp
cmp
pop
std
inc
call
pusha
mov
adc
insb
in
ret
mov
fldl
stc
xor
testl
push
shl
sub
sub
in
stc
orb
out
dec
jp
mov
stos
sti
lea
iret
movsl
cmp
jne
inc
lret
hlt
or
lods
popa
push
cwtl
xchg
jmp
fmuls
in
lret
add
insb
outsb
jnp
xchg
sbb
dec
mov
jp
cli
push
sub
ret
sbb
leave
and
push
out
push
jge
or
inc
xchg
and
cmp
mov
notb
test
test
filds
movsb
add
push
scas
lods
rcr
push
lret
lcall
fildl
mov
les
ds
je
inc
gs
out
pop
inc
outsb
cmpsb
or
sub
mov
lods
sbb
sbb
push
ds
mov
cmp
pop
repz
sbb
xor
je
pop
lods
mov
sub
mov
xchg
inc
mov
push
andl
pusha
and
push
int
aad
pop
inc
mov
loop
es
xor
scas
js
aam
cs
imul
and
and
pop
inc
push
dec
loopne
or
push
ret
js
rorl
mov
lock
out
pop
repnz
dec
mov
mov
enter
mov
scas
jns
dec
mov
mov
pminsw
addr16
jge
das
push
sbb
mov
dec
and
xchg
adc
pop
iret
clc
jns
nop
das
lds
jnp
cmp
inc
push
jge
dec
loopne
outsl
jo
ds
xchg
imul
push
jns
mov
xlat
enter
pop
xor
sahf
loope
push
and
or
and
into
pop
fwait
cmc
dec
sub
mov
add
or
dec
outsb
push
test
pop
cmp
cltd
int
aas
pushf
ret
mov
fldl
or
lea
loope
mov
push
sbb
lret
mov
dec
push
sub
xchg
scas
cmp
sahf
hlt
xchg
out
in
mov
mov
inc
cmp
mov
inc
jno
lret
leave
adc
out
fstp
add
xor
adc
and
js
xchg
dec
lods
test
in
adc
sub
push
mov
repz
push
mov
and
jnp
cmc
mov
pop
inc
push
dec
pop
cmp
jle
enter
les
sub
flds
jno
inc
sbb
imul
bnd
adc
xor
and
popf
inc
jmp
or
xor
fldenv
popa
dec
inc
add
lahf
pop
and
fcomi
sarb
sbb
jns
sub
jb
pusha
sub
lea
jecxz
fildl
test
jae
insb
repnz
inc
pop
es
dec
imul
jp
insl
test
dec
mov
sbb
and
mov
mov
jp
dec
mov
jmp
loop
in
push
pushf
movsl
fcmovbe
dec
out
sbb
lret
pop
pop
inc
test
push
jnp
xchg
rcll
shlb
icebp
stc
leave
sbb
push
mov
mov
roll
adc
leave
leave
mov
sbb
insb
and
cld
cmp
shlb
xor
cld
cmp
fwait
dec
add
xchg
fwait
insl
pusha
movsb
inc
sbb
imul
mov
ret
ret
lods
es
stos
pop
mov
cmp
icebp
in
xor
xor
insl
push
xchg
add
repnz
mov
inc
mov
lcall
fs
outsb
stc
dec
arpl
sub
fsubl
test
mov
int
jle
popf
fidivl
push
pusha
ds
mov
adc
cwtl
in
or
pop
adc
xchg
jp
stos
cmpsl
pop
andl
imul
dec
xchg
inc
out
xchg
inc
sbb
mov
lret
inc
and
sbb
shr
loop
mov
push
push
mov
and
push
sub
rolb
mov
and
sub
jl
push
mov
add
pop
sbb
inc
repz
sbb
daa
lods
sbb
repnz
jo
mov
loop
dec
aaa
enter
cmp
sub
shll
push
std
jecxz
sub
dec
addl
mov
push
ret
cmpl
cmpsl
mov
int
call
adc
cmc
xchg
mov
fstpt
leave
in
push
add
testb
push
in
cmp
or
bound
inc
stos
aam
in
out
insb
lret
int3
dec
pusha
cmp
iret
xor
adc
test
decl
sub
andl
std
adc
sbb
mov
cwtl
test
xor
fsubl
movsl
orb
adc
frstor
es
mov
outsl
shl
push
xchg
addb
daa
add
imul
and
lea
inc
mov
cmp
aas
xor
std
stc
push
sub
cmpsb
shr
sbb
into
sarl
testl
dec
aam
push
and
je
and
in
cmp
xor
cmpsl
inc
mov
mov
fptan
pop
cmp
popa
mov
jb
movsl
or
mov
addr16
cmpsl
jl
add
mov
or
xchg
adc
jle
xor
sbb
adc
jl
sbb
jmp
sbb
ret
sub
cmc
fxch
cmp
aas
pop
mov
lock
xchg
clc
int3
mov
add
mov
out
rorb
xlat
gs
xchg
xor
scas
aam
sub
fsts
daa
xchg
pop
and
xlat
cmp
je
cmp
ret
fcmovu
pushf
sub
mov
pop
jbe
test
pushf
outsl
std
daa
das
inc
fs
cltd
cmp
pushf
movsb
xlat
in
adc
push
cmp
sahf
dec
xchg
fbld
mov
xor
push
ss
jle
dec
push
cmp
repz
std
arpl
ret
jbe
fdivrl
mov
sbb
xor
scas
rcrb
push
jb
cmp
cwtl
sti
loope
fsts
movl
xor
decl
jge
or
cmp
cltd
mov
cmpsb
mov
xor
add
leave
jp
int3
aam
dec
call
repz
lea
inc
mov
addr16
xchg
dec
xchg
xor
call
out
dec
sub
push
and
jg
cmp
cltd
inc
push
mov
loop
pushf
fiadds
jbe
dec
sub
sub
xchg
enter
and
loopne
jl
xchg
push
pop
push
and
shlb
imul
pop
and
mov
sub
dec
push
addr16
filds
addr16
cs
sbb
pusha
enter
out
add
or
subb
push
push
push
mov
lods
mov
dec
or
mov
aad
nop
pushf
rorb
add
cmp
xchg
aas
push
iret
rorl
push
xor
stc
neg
or
out
cmpsl
daa
out
pop
mov
data16
inc
loop
jnp
xchg
xor
clc
jp
fstps
xchg
repnz
mov
insb
imul
hlt
cmpsb
or
xchg
push
xor
test
daa
cmp
dec
call
scas
bound
mov
mov
insl
jnp
loopne
and
std
femms
jo
loope
push
inc
adc
sbb
xor
push
loope
or
fdivl
repnz
out
pop
adcl
mov
adc
inc
push
mov
jne
loop
push
add
sub
xchg
daa
rorb
lock
or
pushf
cmp
movsl
xor
in
lods
daa
jne
lods
dec
xchg
lahf
popf
and
sub
mull
xchg
dec
dec
pop
call
pop
in
sub
and
arpl
ret
icebp
xchg
sbb
ja
jg
inc
fbld
mov
mov
mov
loop
or
pop
mov
into
loope
fwait
mov
in
cmpsb
rolb
jmp
popa
mov
and
xchg
add
xor
fnstenv
and
test
ja
dec
test
dec
lods
dec
fnstenv
cmp
jg
mov
lcall
arpl
dec
negb
push
mov
fcmovnu
mov
inc
aam
adc
dec
xchg
push
mov
push
mov
lret
add
xchg
cmc
mov
pusha
shr
sti
or
add
adc
lock
das
test
stos
mul
lcall
or
movsb
loop
jo
repnz
sbb
sbb
insl
daa
jbe
push
jbe
xchg
or
xchg
sub
dec
push
mov
mov
out
cmp
aad
and
xchg
hlt
orl
sbb
adc
add
adcb
imul
mov
mov
mov
xor
sbb
xor
int3
and
push
out
or
push
sbb
dec
andb
les
cmp
sar
ljmp
bound
mov
cmpsl
fcomps
into
ret
dec
push
xchg
cmp
std
in
push
ret
push
cltd
cmp
sbb
ret
cmpsb
jle
sbb
mov
int3
xor
and
sarb
sahf
mov
sbb
popa
push
push
push
call
pop
loopne
fsub
ds
mov
adc
inc
sub
jmp
add
push
mov
jns
arpl
aas
adcw
pop
cmp
adc
pop
sub
xchg
jnp
lcall
or
sub
imul
out
xchg
inc
xor
mov
mov
sbb
jae
jo
jae
and
pop
into
mov
aam
in
add
dec
test
jne
int
test
pop
push
xlat
icebp
shll
inc
inc
fs
lcall
inc
popa
shrl
out
dec
xor
mov
cmpsb
adc
dec
mov
mov
pop
data16
jge
pushw
rcrb
dec
add
or
pop
movsb
mov
insl
inc
push
stc
jl
pop
loope
lds
shll
jo
inc
negl
ljmp
mov
lret
imull
cmp
lods
push
add
aaa
in
jo
lods
pop
ljmp
divb
mov
xchg
inc
mov
stos
shrb
sub
dec
add
mov
aaa
insb
xor
out
rcrb
aam
pop
push
jb
gs
pop
dec
mov
test
xchg
pushf
dec
pop
je
fisttpl
arpl
ret
mov
jmp
xor
repz
sbb
imul
fdivrp
js
repnz
push
ds
roll
lock
jecxz
scas
lahf
dec
sti
pop
fcoms
adc
push
mov
stos
xor
cmp
lods
mov
aad
mov
fdivs
mov
and
push
push
and
data16
mov
xchg
dec
jo
jmp
cwtl
daa
data16
lcall
icebp
xchg
in
ljmp
pop
ljmp
popa
push
les
xor
dec
push
jb
xchg
pusha
jecxz
push
ds
sbb
xchg
or
mov
das
decb
lahf
or
outsl
lret
sub
ja
mov
mov
or
jo
lcall
popf
mov
stc
mov
push
lret
push
scas
and
imul
lret
gs
test
pushf
call
hlt
jne
faddl
xchg
icebp
jp
in
xchg
mov
scas
pop
aam
dec
adc
test
cmp
je
cmpsl
cltd
dec
and
or
and
jnp
lea
jecxz
aad
dec
mov
jmp
in
xchg
shlb
jmp
insb
jb
dec
cmp
mov
scas
lods
nop
inc
xchg
out
ficomps
popa
xchg
jne
mov
push
xor
xor
mov
cmpsl
or
inc
and
inc
cmpsb
icebp
lret
jge
jp
sub
hlt
xchg
popa
sbb
popf
mov
xchg
and
inc
mov
testl
mov
adc
mov
mov
gs
fnstcw
xor
inc
jmp
or
fldt
shrl
bound
cli
and
andl
sbb
sbb
fiadds
aad
js
mov
test
mov
sub
xor
arpl
sbb
jge
loopne
gs
xchg
add
jns
std
cmp
jne
jg
mov
rcrb
call
pop
jae
adc
mov
inc
sbb
fidivrl
xchg
out
aaa
test
mov
push
clc
mov
les
mov
enter
mov
mov
dec
pop
stc
mov
add
fxch
mov
pop
cmp
jg
jns
push
xchg
aam
cmp
or
aam
and
insl
mov
jbe
aad
pop
add
sbb
leave
movsl
dec
push
dec
arpl
js
lods
adc
ret
stc
jp
out
cmpsl
push
adc
and
jnp
and
cmpl
cmp
mov
mull
lea
int3
or
jno
test
mov
cmp
cmp
enter
shl
ja
sbb
in
jp
call
ljmp
ficoml
jle
inc
frndint
mov
mov
sarb
adc
push
addr16
lds
mov
pop
push
mov
mov
leave
jl
jle
pop
mov
xacquire
enter
int3
xlat
insb
mov
add
adc
mov
mov
lock
pop
jecxz
daa
aaa
jecxz
jp
out
ret
xor
push
jecxz
arpl
loope
outsl
push
arpl
xor
adc
sub
sub
jecxz
mov
and
inc
cmpsb
int
and
arpl
mov
cld
or
xchg
fcmovne
rclb
pop
add
je
inc
inc
decb
and
adc
or
xchg
jo
rorb
cmp
sub
push
add
sub
nop
test
adcb
mov
addr16
mov
into
por
ljmp
sub
pop
imul
into
aas
test
outsl
adc
cmp
pop
dec
mov
into
cmp
lret
dec
sbb
xor
pop
test
roll
dec
ror
cwtl
dec
popa
lea
pop
mov
pop
sti
ss
cmp
mov
stc
rcl
cmp
lock
cmpsl
sub
jl
imul
inc
addl
add
xchg
pop
jge
add
cmpsb
mov
cmp
pushf
mov
andb
clc
fcmovb
pop
jb
mov
cli
dec
xchg
in
inc
add
flds
dec
mov
call
rcrl
push
push
push
xorb
test
js
mov
rolb
jnp
push
stos
cli
add
pop
mov
push
insb
pop
fs
mov
jno
sbb
les
shl
rorl
xchg
mov
scas
or
xchg
xchg
push
mov
mov
push
add
scas
lcall
add
clc
and
ret
and
or
mov
pushf
sahf
into
ficomps
add
push
lret
mov
stc
shll
in
flds
cli
ret
cmp
stc
inc
sti
loope
push
fnstenv
out
push
jg
and
dec
enter
cli
rorb
lret
push
and
cmp
cmp
push
hlt
sub
data16
scas
jns
dec
lea
mov
push
push
jo
sbb
and
xor
cmp
fdivl
sti
jae
lods
xor
andl
fdivl
push
je
mov
scas
mov
and
lds
mov
movsb
sub
mov
inc
stc
sar
push
fnsave
sbb
rorb
fdivl
cmp
imul
fcompl
ror
mov
mov
xor
jae
push
mov
and
mov
inc
sbb
and
sub
xchg
sti
aaa
xorl
mov
addr16
arpl
xchg
aam
aam
adc
add
cwtl
sahf
lds
insl
popf
adc
std
dec
ret
xlat
mov
or
add
and
pop
cmc
cmp
hlt
cmc
icebp
adcl
rcl
sbb
mov
cmp
jge
int
int3
std
testb
popf
xchg
mov
sti
add
push
je
lret
jno
test
push
or
dec
negb
loopne
data16
inc
add
iret
sbb
fwait
or
pop
rolb
dec
scas
cmpsb
int3
or
inc
movsb
push
mov
imul
cmpsb
mov
cmovnp
insl
out
sahf
pop
push
aas
sarl
je
xor
mov
sbb
sub
js
push
and
pop
insb
lds
lds
stos
adc
push
mov
test
mov
cmp
cwtl
cs
and
dec
leave
xchg
pop
jbe
mov
dec
mov
or
repnz
push
pop
das
clc
and
test
movsl
push
test
mov
push
xor
gs
loop
les
daa
in
mov
jge
dec
nop
loope
and
aas
xchg
iret
push
sbb
xor
fdivrp
sub
jecxz
fneni(8087
mov
adc
test
dec
rorl
loop
push
mov
inc
mov
rcrl
cmp
push
les
stc
push
sub
xchg
inc
pusha
or
jnp
and
cmp
jns
add
stos
push
lea
leave
imul
dec
pop
lahf
decb
stos
or
repnz
and
mov
gs
pop
rcll
jmp
test
push
sahf
cmp
push
jae
fs
nop
into
mov
mov
mov
jg
out
jbe
mov
pushf
jmp
and
fsubr
cmp
or
cld
adcb
roll
sbb
mov
ret
and
fimull
mov
dec
je
cmp
imul
das
dec
leave
jae
xchg
shll
sbb
ret
and
xchg
iret
out
lcall
nop
mov
in
outsb
scas
repnz
rcrl
mov
xchg
xchg
adc
lcall
insl
ficoml
dec
mov
sub
std
adc
fmulp
ljmp
ljmp
cli
jp
out
fistps
jbe
jbe
dec
rcrb
mov
xor
mov
dec
imul
sub
aas
leave
inc
movsb
cmp
scas
push
pop
shl
push
fldenv
inc
imull
jecxz
push
mov
cs
hlt
shrb
out
bound
insb
cmpsl
push
pop
in
les
mov
pushf
lret
mov
loope
lcall
out
sbb
std
xchg
xchg
xchg
cmp
mov
pop
test
pop
stos
dec
and
jae
xchg
jg
and
clc
inc
loopne
or
and
and
fldenv
mov
sub
sbb
repz
sub
xchg
pop
nop
out
mov
mov
mov
mov
jb
sbb
jo
dec
xchg
xchg
std
or
test
sbb
ja
inc
hlt
mov
jl
ljmp
mov
fdivs
or
vpsubd
xchg
mov
data16
lahf
push
out
call
loope
enter
xchg
pop
mov
in
sbb
mov
jbe
mov
push
imul
lds
cmpsb
out
inc
in
or
enter
cmpsb
mov
xchg
cltd
fsubl
adc
push
out
sbb
mov
push
push
add
cmc
jge
enter
mov
icebp
test
push
xor
sbb
push
add
mov
int3
ret
sahf
push
xor
ljmp
cmp
jecxz
popf
mov
cmc
lcall
jge
mov
cli
sarb
or
lods
repnz
bound
add
cmpsb
stc
pop
cmp
mov
mov
test
shl
pop
test
test
mov
dec
aaa
cmpsl
add
lods
mov
pop
flds
dec
mov
cmp
pop
gs
push
cmp
mov
fdiv
inc
cmp
sub
aam
and
mov
bndldx
jno
mov
xor
inc
mov
dec
lods
jnp
lods
jl
lret
push
fcoml
xchg
jp
dec
clc
cmpsl
cmp
ja
add
xor
sub
sbb
lods
lcall
js
cmp
inc
and
arpl
outsl
adc
ljmp
int
enter
jno
stos
jmp
ret
jge
xor
pop
enter
xchg
jp
scas
mov
fstps
cmpsb
lahf
push
outsl
bound
inc
dec
aas
sahf
in
lods
loop
cmp
lods
icebp
lock
fsts
add
scas
xor
dec
imul
mov
inc
jmp
pusha
hlt
orl
mov
cld
jg
mov
mov
dec
sbb
arpl
add
clc
and
mulb
aas
cmp
mov
sub
scas
add
inc
scas
sub
adc
out
sti
push
addl
insb
sbb
jmp
cmpsl
push
std
inc
jl
bound
inc
cmp
aam
int3
mov
push
lahf
lea
in
pusha
arpl
pop
mov
jge
sub
fcmove
sbb
push
cmp
inc
rorl
pop
xor
mov
out
lds
ficomps
ret
jb
xorb
test
sarb
shlb
inc
sub
dec
mov
mov
lret
xor
pop
add
or
and
cmc
js
push
adc
repnz
xor
jbe
cmp
mov
nop
lcall
dec
popf
lods
cmp
mov
pop
fisubrs
add
dec
int3
adc
jne
jae
pop
ret
push
adc
lcall
rclb
and
test
adc
js
jecxz
test
jo
xchg
push
into
inc
dec
and
pop
lcall
insl
push
cmpsl
mov
pop
call
popf
inc
gs
outsb
mov
fcompp
push
inc
lods
xor
ret
sbb
popa
mov
cmpsl
dec
das
add
pop
cmp
xchg
ret
jno
jns
outsb
xchg
mov
dec
xchg
mov
pushf
in
mov
mov
mov
pop
mov
lods
fldcw
jmp
icebp
andl
jmp
insb
or
loop
mov
addr16
pop
cmp
cmp
dec
sbb
mov
cld
divb
popa
jb
push
sbb
notb
jg
adc
mov
pop
mov
xor
mov
sbb
add
mov
test
or
and
fucomip
in
push
xor
push
out
leave
das
cmp
push
push
std
jg
stos
outsb
sarl
loope
test
pop
es
sub
mov
jb
adc
and
adc
sbb
xor
push
sbb
popa
fcmovbe
mov
insb
lock
dec
jge
cmp
hlt
dec
dec
jmp
sbb
imul
push
addr16
sarl
nop
test
jle
ret
mov
mov
dec
jno
push
test
jp
popf
loopne
dec
adc
lret
icebp
inc
mov
xor
cli
jns
sti
test
xchg
jl
jno
filds
stos
pop
dec
fldl
or
inc
xlat
ds
js
stos
add
rsqrtps
popf
xchg
xchg
dec
add
ss
xor
orb
bound
mov
jmp
sarl
mov
jae
sub
mov
shr
int3
mov
push
mov
hlt
cmp
sbb
mov
mov
notb
or
jge
dec
jne
push
xchg
mov
rcrl
mov
data16
out
push
push
push
dec
or
in
mov
fldt
jp
js
mov
aaa
mov
pusha
test
aas
nop
and
inc
xorl
and
jne
pop
cpuid
ret
mov
sbb
mov
cmp
cmp
inc
das
loopne
into
test
lahf
dec
insl
add
pop
inc
test
adc
mov
mov
inc
xchg
addb
nop
mov
mov
cmp
pusha
stos
push
sahf
movsb
or
xor
sbb
xor
hlt
cmpsb
jns
add
fst
les
push
aam
and
push
pop
push
in
sbb
jb
lea
inc
xchg
jae
jle
sbb
push
mov
std
sub
add
popa
lock
xor
cltd
pop
cltd
push
cmc
cwtl
inc
int
call
jle
push
jecxz
add
mov
enter
sbb
sub
xlat
or
insl
stc
xor
les
iret
imul
cmpsl
shlb
rcl
stos
cmpl
daa
aam
inc
scas
inc
test
bound
mov
cmp
pop
xor
pusha
lods
sbb
je
inc
xchg
xchg
lcall
outsb
xchg
cli
sub
adc
jecxz
add
shlb
jo
mov
jg
inc
or
mov
mov
inc
cmp
repnz
xchg
xchg
jmp
mov
push
inc
xlat
sub
cmpsl
lcall
add
fidivl
xchg
outsb
bound
mov
pushf
out
sbbl
adc
push
xor
shlb
push
xor
dec
hlt
ror
add
andb
add
push
gs
adc
fcompl
pop
and
dec
inc
nop
repnz
xchg
inc
frstor
xchg
push
aas
lods
insb
insb
mov
cmp
cs
jbe
in
addb
xchg
xor
and
push
fbld
and
inc
nop
adc
call
add
mov
push
jbe
shlb
sbb
aam
cmp
or
int3
stos
pop
cmpl
out
cmp
les
daa
scas
fsts
xchg
and
mov
daa
cmp
fcoms
cld
cmpsl
insl
leave
xchg
nop
das
aas
mov
leave
adc
pop
jnp
test
cwtl
jle
and
bound
loope
pusha
jo
iret
mov
loop
arpl
gs
xor
ja
jmp
fprem1
push
lds
hlt
pop
in
dec
cmc
mov
push
int
mov
or
int
rcll
fdivrl
ret
adc
insl
rorb
mov
push
mov
data16
jb
or
inc
scas
fsubrs
inc
pushf
sbb
xchg
mov
add
mov
adc
and
loopne
add
push
mov
xchg
adc
loopne
gs
popf
pusha
insl
mov
push
fcmovne
pop
push
pop
adc
iret
test
sbb
dec
mov
ljmp
shl
sti
shl
aad
and
les
or
mov
jb
ret
shll
xor
fpatan
inc
push
mov
dec
scas
inc
or
jbe
sub
push
sbb
pop
cmp
outsb
mov
jmp
out
jecxz
dec
enter
mov
mov
or
jmp
outsl
xchg
mov
insl
int3
cmc
xchg
sarb
jecxz
shll
sbb
movsb
fadds
ds
mov
test
bound
push
mov
cli
repz
xor
inc
push
popl
push
sub
fsub
pop
inc
xor
incb
pushf
inc
mov
and
sti
xor
and
mov
mov
js
mov
xchg
fisubs
imul
nop
jmp
fstp
push
sbb
adc
add
insl
adc
out
push
cmp
mov
cmp
and
fsub
pop
ret
lret
mov
adc
daa
xchg
adc
pushf
pop
in
jo
cmpsb
nop
scas
lods
xchg
push
ret
dec
shr
push
lods
repnz
push
push
daa
sub
stos
sahf
movb
scas
jp
cli
and
pushf
push
aam
and
mov
and
lea
fstps
jnp
lock
push
js
dec
and
clc
ret
add
or
push
add
out
mov
daa
push
jnp
enter
mov
es
fwait
mov
push
loope
mov
push
inc
lods
push
dec
mov
call
and
stos
mov
sub
dec
rcrl
es
jl
pushf
push
outsl
mov
repnz
push
shrb
lret
stos
nop
icebp
add
mov
lret
jo
lret
je
jns
jge
push
pop
gs
xchg
shrb
or
and
pop
mov
and
repnz
mov
lods
scas
lret
xor
jne
pop
stc
jo
stc
lods
xchg
sub
fidivrl
ja
lods
pop
fistpll
mov
or
inc
fstpt
out
xor
mov
into
pop
ret
sbb
ds
inc
jnp
cld
aaa
roll
dec
sub
jo
je
or
in
fcompl
stc
cmpsl
push
xchg
xor
dec
test
jb
mov
push
mov
outsl
inc
leave
xchg
inc
fstpl
test
data16
xor
imul
pop
push
inc
jl
in
mov
les
jl
xchg
pop
dec
mov
orb
test
cmp
scas
dec
lahf
xor
mov
push
jmp
adc
cli
sbb
dec
dec
cmp
mov
mov
mov
movsl
loopne
mov
addr16
inc
jp
sbb
xor
xchg
adc
jns
fdivs
xor
repz
movq
clc
sbb
sub
mov
ds
into
movsl
jg
push
mov
icebp
cmp
jge
int
pop
imul
popa
fsts
mov
cmpsb
scas
xchg
dec
addr16
mov
outsb
in
ljmp
and
push
jmp
popf
push
jmp
mov
and
aas
cmp
cwtl
jns
add
popa
ja
mov
daa
and
cs
fildl
or
iret
jp
cmpsb
aas
xchg
mov
xorl
ja
jnp
push
clc
or
sti
je
dec
pop
or
dec
ljmp
hlt
ror
adc
addr16
and
sbb
jl
scas
pusha
xchg
divl
icebp
nop
sbb
call
lods
xchg
ret
pop
mov
jge
lret
jno
dec
sub
inc
adc
jge
cmc
mov
sub
cltd
decb
push
jl
add
push
ja
popa
sub
pop
enter
push
cmp
xor
into
cli
xor
ljmp
or
sbb
pop
and
paddusb
xchg
adc
cmpsb
xor
inc
lods
push
and
stos
inc
mov
ss
fwait
sub
fstps
push
movsb
mov
out
ror
je
negb
and
pop
popf
push
mov
outsb
push
enter
add
pop
insl
mov
xor
add
push
mov
aad
ret
pop
xchg
push
bnd
js
or
sahf
inc
push
xchg
ljmp
ret
inc
and
aaa
inc
cmp
xor
mov
or
mov
test
push
pop
test
sbb
push
test
pop
sub
in
call
and
inc
aad
lcall
xchg
and
stos
ret
out
test
fwait
pop
addl
mov
add
pop
xchg
xchg
and
data16
and
dec
push
mov
test
in
add
arpl
test
push
mov
jg
aam
testb
packssdw
pop
adc
jo
cmp
inc
scas
push
adc
xchg
sti
sahf
mov
sub
es
sub
out
inc
push
push
imul
shrl
sub
cs
cmovp
add
inc
stc
les
mov
jae
mov
test
daa
movsb
cmc
sub
xchg
fwait
sti
leave
mov
movsl
adc
lea
push
push
cmp
ret
mov
inc
xor
pop
cli
inc
rolb
pop
lret
mov
sub
js
cwtl
inc
les
es
dec
lds
es
fwait
mov
mov
scas
xor
out
fisubrs
xchg
test
imul
inc
inc
fwait
inc
mov
pop
jge
stos
or
fdivrs
inc
jbe
lock
push
outsl
stos
pop
cmpsb
xor
std
xchg
lds
push
insb
xor
mov
mov
in
addr16
leave
insl
sub
mov
inc
sbb
fwait
arpl
int
lcall
mov
imul
std
movsl
sub
add
push
sbb
push
sbb
not
nop
arpl
push
repnz
sbb
mov
test
test
mov
fdivrl
sti
repnz
adc
push
cmp
and
mov
pushf
push
push
mov
lods
in
int
roll
mul
add
movsl
cmpsb
mov
aad
mov
sahf
cmpb
push
sti
js
lock
jb
stc
sahf
enter
or
int
sub
inc
shl
or
outsl
pop
cld
or
scas
and
fabs
adc
faddl
fdivrl
fwait
in
sahf
or
fnstsw
mov
cmp
mov
jb
aas
fimull
sub
cmp
fcoml
sub
imul
cmp
sub
dec
stos
fildl
loopne
and
jne
mov
mov
mov
and
lcall
leave
shll
out
arpl
push
stc
xlat
sbbl
and
loopne
lret
fdiv
sub
xor
fidivrl
ja
scas
pop
push
push
shll
add
mov
insb
add
rolb
sbb
sarl
sbb
rcl
and
les
push
incl
popa
shlb
sarb
shl
jo
dec
popa
lods
pop
scas
loope
jg
dec
mov
dec
jns
or
pop
cmp
mov
or
cmp
add
lret
inc
mov
shrb
jo
pop
mov
sub
jmp
popf
and
adc
cld
rorb
in
sub
xor
stos
sbb
jg
add
or
inc
sbb
push
std
cmp
in
ljmp
shll
sti
xchg
mov
jo
leave
add
pop
add
in
xchg
popa
and
and
pop
test
sbb
andl
mov
jo
add
test
icebp
mulb
and
sub
pop
movsb
dec
or
mov
gs
jb
mov
aam
jbe
clc
push
xor
arpl
xor
movsl
mov
pop
sub
sbb
cmp
inc
movzwl
fsubrl
push
in
pop
sbb
sbb
stc
jle
movsl
ds
inc
ds
pop
arpl
mov
insl
and
int3
sbb
pushw
add
jae
add
sub
push
push
iret
sub
adc
es
jge
repz
iret
jmp
adc
pop
push
ret
stc
or
out
xchg
xchg
mov
cs
xor
pop
dec
xor
imul
dec
adc
ss
mov
xchg
add
cld
cmp
jbe
mov
xor
push
stc
orb
jne
call
aad
inc
icebp
inc
mov
sbb
and
and
sbb
lock
cmp
jo
xor
adc
sbb
inc
das
sub
int
jecxz
sti
imul
sbb
push
lea
outsl
xor
out
mov
xor
int3
fstps
cmpsl
dec
sub
xchg
popf
fs
sbb
push
jns
mov
adc
or
mov
mov
push
aam
inc
jecxz
jnp
imul
jge
fidivrl
pop
stc
dec
lds
loopne
arpl
pop
outsl
lcall
pop
rcrb
dec
pushf
icebp
and
sbb
cmp
mov
mov
or
pop
mov
or
lds
xchg
pop
mov
aaa
dec
or
loope
shrl
arpl
xchg
mov
mov
pusha
stos
push
cmp
lahf
jne
cs
mov
fistps
sub
int
jno
ret
mov
ds
mov
mov
dec
fisubs
cwtl
xchg
sar
sub
mov
jbe
mov
pop
or
cld
test
in
sub
add
mov
shrb
mov
movsl
insl
jp
lea
out
popa
imul
push
mov
ja
test
and
pop
inc
mov
push
dec
push
es
scas
inc
jns
or
mov
inc
jno
pop
notb
and
cmp
lret
mov
popf
sub
jns
cmp
dec
leave
data16
out
es
and
enter
outsb
jle
sub
dec
in
repz
repnz
xor
xor
dec
cmp
fsubs
mov
dec
movsb
je
adc
pushf
cmp
jmp
or
push
xor
psubw
test
lock
mov
nop
cli
mov
xor
jno
or
mov
xchg
ds
xor
push
rep
cmp
xor
cld
xor
sub
cli
pusha
mov
test
sbb
rorb
xchg
ffreep
mov
add
gs
mov
mov
fisubl
sbb
imul
and
bound
sbb
dec
mov
jne
mov
hlt
sub
loopne
xor
cmc
cs
aas
mov
cmpsb
divl
mov
in
xor
not
out
dec
sub
repnz
js
neg
mov
and
popa
jb
pop
xchg
cmpsb
cmpsb
inc
mov
jmp
test
pop
ja
push
arpl
sub
shrb
xchg
pop
fsts
idivl
stos
stos
outsl
cmc
jns
cmc
push
mov
sub
nop
cmp
xchg
cmp
mov
mov
xlat
lahf
mov
popl
push
mov
jmp
cmp
int
in
add
loope
dec
loope
dec
cmp
bound
xchg
stos
xchg
jnp
pop
jns
xor
lods
fsubs
imull
loop
jae
icebp
add
pusha
sub
mov
and
divb
jns
inc
out
xchg
push
adc
pop
mov
bnd
shlb
mov
and
pop
lea
enter
ret
xor
sbb
mov
nop
sbb
jg
fiaddl
adc
push
mov
sub
sbb
jb
inc
pop
stos
jp
jl
aam
jle
and
out
sbb
test
dec
ret
mov
mov
pop
sbb
out
sbb
mov
mov
cli
add
into
jmp
mov
sub
ljmp
imul
stos
or
sbb
jnp
enter
jg
adc
add
jo
fisttpll
lcall
enter
adc
out
mov
fnstsw
movsb
std
sarb
cwtl
add
mov
add
stos
xchg
adc
cmpsb
call
jecxz
push
cwtl
adc
xchg
in
inc
movl
scas
lds
ljmp
ret
cli
mov
xchg
pop
pop
repnz
out
mov
inc
sbb
in
jg
add
sbb
lret
xchg
mov
cmp
xlat
push
lds
push
sub
lds
ret
rclb
mov
mov
cld
jo
and
pop
and
dec
aaa
imulb
lods
mov
inc
mov
push
or
fs
and
jmp
inc
xchg
mov
fdivs
xor
jl
sub
xchg
pop
pop
nop
jmp
negb
imul
mov
cs
mov
gs
or
out
pop
mov
push
inc
aam
adc
outsl
mov
aaa
test
fstpl
jbe
mov
sbb
into
arpl
push
push
imul
aam
scas
xchg
lret
cmp
int3
mov
loop
jae
cmp
mov
mov
fstl
or
gs
mov
cltd
jbe
mov
adc
mov
aam
push
nop
jb
xor
dec
mov
sub
hlt
out
mov
fists
mov
mov
popa
loopne
add
mov
outsb
and
dec
in
clc
insl
or
aam
push
cld
jno
popf
mov
push
es
lret
xor
adc
mov
sahf
lcall
jmp
ret
out
int3
pusha
cmpb
stos
and
fidivs
xchg
cmpsb
xchg
sbb
pushf
sub
pop
sub
xchg
jne
and
jg
push
or
out
inc
inc
xlat
pop
add
jecxz
push
xor
stos
jne
cmp
pop
cmp
xchg
add
fs
pop
mov
dec
sbb
mov
sbb
mov
je
mov
xchg
ret
shlb
cmp
sar
sti
xorl
mov
scas
mov
out
scas
out
cmp
cmp
xor
imul
mov
cmp
fwait
ds
fxch
and
pop
cmp
pop
imul
pop
divl
lret
push
stos
and
cmp
inc
jne
lock
pop
ret
mov
loope
outsl
add
nop
arpl
in
movsb
xchg
lods
shr
xchg
jo
popaw
dec
jmp
cmpl
lahf
sti
push
sti
xchg
jbe
enter
scas
cli
cmp
pop
mov
inc
mov
lret
mov
pop
or
pop
jnp
icebp
aad
mov
cmpsb
pushf
and
je
or
je
imul
clc
sub
das
push
sbb
sub
dec
cmp
cmpsb
xchg
rcrl
imul
addl
roll
jl
push
inc
std
sbb
inc
pop
inc
inc
jl
jnp
loope
inc
push
inc
sub
and
xchg
and
fwait
and
cmp
sbb
and
push
pop
mov
mov
lret
sbb
cmp
sub
in
fmuls
adc
cld
ds
push
xchg
mov
sarb
pusha
sub
mov
xor
jno
mov
fnstsw
test
ss
mov
add
push
sar
outsl
jl
stos
xor
mov
jle
scas
and
mov
rcrl
lcall
adc
rcrb
std
sub
test
bnd
mov
out
mov
xor
xor
cmpsl
lret
pop
mov
not
add
movsl
adc
imul
pop
adc
nop
outsl
sti
inc
stos
cmpsb
inc
rcll
mov
and
lods
and
mov
cmpsb
add
dec
cmp
testl
out
push
xor
xor
out
sub
scas
jbe
xor
cmp
cmp
jo
call
stc
push
ret
push
mov
pop
std
xor
arpl
and
gs
cmpsl
insb
lea
cmp
aam
jnp
decb
shl
fs
test
pop
icebp
shrb
icebp
push
loopne
movb
sbb
pop
and
pop
cmp
cmp
push
cmp
inc
pop
sub
jg
mov
mov
out
cs
pop
nop
sbb
push
cmpsb
jecxz
xchg
les
es
rcr
movsl
cmc
repnz
mov
xor
jbe
popa
inc
add
loop
push
loope
adc
push
idivb
jns
or
in
addl
movl
clc
xchg
popa
sbb
rcrb
add
enter
ret
xor
pop
jecxz
std
cltd
fdivrl
outsb
lret
add
loopne
pop
inc
lods
mov
jecxz
inc
mov
xor
or
lahf
loopne
in
pop
push
fmull
jge
cld
add
std
rorl
xchg
clc
xor
or
pop
add
test
shlb
decb
aad
jae
pop
je
testl
ja
add
jmp
mov
mov
fmull
insl
shlb
clc
divl
cli
sub
push
cmp
icebp
mov
jnp
arpl
mov
repz
test
adc
or
sub
cs
scas
mov
in
pop
mov
mov
js
or
jbe
es
push
addl
push
push
adc
daa
dec
pop
jl
ljmp
stos
mov
pop
faddl
jp
pusha
xchg
jmp
jmp
or
rcll
hlt
nop
mov
loope
jne
cwtl
call
jno
inc
sbb
and
mov
mov
sub
sub
sahf
stc
xor
jne
movsb
cmpsl
addr16
push
test
pop
bound
cltd
mov
mov
int3
adc
fists
inc
jnp
clc
fildll
insl
pop
hlt
sub
mov
imul
xor
jo
les
sarl
cmc
sub
push
std
dec
or
iret
ljmp
test
lods
lret
fwait
adc
das
cmpsl
jp
pop
dec
rclb
dec
clc
loopne
std
mov
jmp
xor
bound
lods
xor
cli
test
cmp
cmp
cmp
iret
repnz
mov
fldenv
inc
adc
rcr
ljmp
icebp
sti
leave
or
jp
push
pop
pop
cltd
es
sbb
inc
loopne
rcll
mov
outsb
mov
outsb
sbb
jnp
xchg
shl
cwtl
mov
lds
sub
lds
cmpsb
int
ret
pop
cs
lcall
add
lea
push
aaa
jno
xor
and
stos
test
add
jp
add
mulps
jl
push
lods
sahf
in
test
mov
out
int
or
idivl
jmp
mov
ret
push
mov
mov
push
mov
insb
orl
lret
mov
add
dec
cmc
jno
xor
lds
mov
sbb
loope
fbld
sub
test
adc
add
imul
pop
test
xor
and
ret
jns
out
stos
xor
fldenv
inc
xchg
hlt
push
loop
arpl
insb
clc
sub
pop
jl
movsb
enter
insl
jle
jp
pop
and
iret
add
aam
xchg
push
std
fnstsw
loopne
mov
outsb
lret
jecxz
test
cmc
fldl
cmp
fcomi
fisttpl
or
and
test
mov
mov
xchg
dec
hlt
gs
js
xor
enter
pusha
sahf
addl
mov
out
aam
jo
or
iret
sbb
cld
xor
imul
mov
inc
xchg
movd
push
in
ret
jne
out
push
dec
adc
and
aam
xchg
jae
fmul
ficoms
fdivp
mov
xor
mov
inc
in
add
mov
pop
sbb
int
add
fisttps
xor
push
fistpll
xor
cmp
es
jae
out
decb
rcll
mov
sbb
movsl
arpl
clc
fwait
stos
mov
movsb
sub
push
jne
decl
push
pop
sti
dec
call
add
stos
decl
fmul
movsl
int3
xor
scas
push
cmp
pop
pop
or
mov
mov
inc
mov
pop
xlat
jge
imulb
test
mov
sahf
xchg
mov
test
les
sbb
sub
shll
inc
sbb
scas
add
out
jne
imull
addr16
mov
sbb
cmp
sti
fidivs
ret
inc
mov
loop
xor
pmaxub
cmp
pop
addr16
loopne
loope
mull
adc
dec
jp
mov
add
dec
jg
popl
subb
mov
xchg
jo
push
sbb
mov
inc
loop
add
inc
xor
adc
fidivl
aas
push
sub
xchg
shrl
mov
add
jmp
addr16
pop
daa
clc
fbld
jo
xchg
icebp
adc
adc
cmp
jbe
inc
pushf
jns
cmp
nop
sub
loopne
dec
pop
xchg
pop
add
pop
and
shl
inc
mov
enter
js
mov
jmp
fadds
or
and
push
and
test
repz
jg
ljmp
push
xchg
adc
dec
test
ljmp
push
mov
sub
in
arpl
repz
xchg
cmpsb
lret
std
add
ret
mov
inc
push
outsb
inc
test
test
jp
stos
adc
sbb
jb
jo
xlat
xchg
pop
inc
and
mov
insl
mov
movsb
push
es
shl
xchg
jmp
lahf
aam
jae
inc
xchg
mov
xchg
loopne
and
fucomip
or
push
fs
cmp
fistpl
pop
orl
sbb
mov
clc
fsubs
inc
les
fwait
cmp
push
ja
dec
add
lods
shlb
and
or
in
push
jle
imul
pushf
cmp
pminsw
into
xchg
cltd
jle
pop
out
movl
clc
cwtl
pushf
lcall
adc
pop
or
mov
dec
and
lcall
les
insl
in
fnstsw
adc
cmpsl
call
faddp
push
mov
dec
add
sbb
lods
mov
mov
jg
dec
add
xchg
nop
pusha
jl
pop
subps
sbb
jae
push
ret
rcll
mov
scas
hlt
int
aam
push
sbb
push
cs
mov
fs
pop
pop
jl
mov
ret
sti
inc
dec
fsubl
aaa
fstpl
push
adc
mov
and
aam
cmpsb
cmp
lret
mov
dec
push
fnstsw
nop
push
imul
cmp
add
jns
mulb
mov
push
mov
inc
ret
mov
subb
xor
push
inc
jae
out
jge
adc
sbb
and
lds
into
icebp
enter
ret
lret
lea
mul
stos
cwtl
sub
xor
dec
add
inc
sub
popf
nop
xchg
mov
or
or
call
in
jne
call
cmp
pop
ds
pusha
mov
call
adc
pop
xor
jmp
mov
pop
ficoml
sub
pop
cld
or
push
enter
scas
xor
mov
pop
arpl
add
movsb
arpl
mov
mov
mov
in
push
sub
fidivs
push
clc
mov
fs
pushf
push
inc
xchg
push
enter
loopne
rcr
nop
pop
jmp
aas
mov
das
pusha
mov
add
mov
xor
test
jb
aam
cmp
jb
pop
popf
push
ds
xchg
sahf
push
aad
lock
sbb
xor
pusha
orl
pop
dec
xchg
xchg
lods
pop
jns
fcmovnu
add
xchg
pusha
ds
sti
jmp
insl
mov
aas
scas
xchg
test
lret
and
push
pusha
lret
and
push
pop
push
or
ljmp
or
sti
and
gs
ret
dec
mov
in
outsb
clc
xor
lahf
mov
xchg
scas
roll
inc
mov
les
lods
sbb
mov
xchg
sbb
mov
mov
dec
mov
sbb
push
hlt
mov
push
fsubl
ja
mov
mov
and
hlt
imul
push
xor
mov
push
int
inc
ss
push
lret
mov
addr16
adc
push
in
xchg
cmpsl
mul
ret
cmpb
jle
outsl
cmc
mov
xchg
push
dec
jecxz
jae
insb
mov
lret
loopne
fs
out
out
add
or
sbb
dec
les
sbb
ja
or
pop
and
fsubl
int3
cmp
leave
adc
cs
jmp
cli
js
and
sbb
das
push
xchg
lret
dec
es
loopne
sarw
loopne
lret
je
loop
sub
push
scas
push
test
mov
sbb
cltd
enter
or
outsb
out
sub
jl
pop
ss
sub
jnp
xchg
or
fnsave
push
sbb
or
inc
aad
rcll
and
inc
jo
decb
push
mov
cmpsl
daa
lea
adc
push
jbe
and
imul
xor
jl
jp
lret
cld
xchg
mov
repz
clc
sbb
or
inc
in
adc
test
lret
inc
out
daa
pop
ret
xchg
lds
jbe
pop
jns
test
inc
lret
mov
in
lcall
push
mov
xor
in
jnp
cld
ljmp
jg
leave
outsb
xchg
push
fwait
or
insb
push
out
addr16
cwtl
lods
pusha
mov
mov
call
or
xlat
in
xchg
aam
push
hlt
jmp
mov
fsubl
rorb
sbbb
inc
add
sub
inc
andb
pop
sarl
lahf
mov
loop
adc
lock
pusha
cmc
sahf
in
jmp
imul
pop
mov
cli
addr16
cltd
stos
movsl
negl
cmp
and
test
rolb
call
mov
dec
fcomps
scas
ds
nop
xor
mov
lds
cmc
push
mov
addr16
incb
mov
outsb
sarb
jbe
outsb
ljmp
ljmp
adc
inc
push
les
out
fs
inc
rolb
repz
std
push
inc
pop
lahf
xor
mov
add
push
in
jo
xchg
push
daa
cmp
mov
cwtl
clts
jnp
bnd
xor
add
aad
push
ja
jo
sar
mov
scas
fcompl
mov
idivl
add
stos
rol
mov
and
stos
stos
ja
mov
xchg
mov
out
mov
mov
or
lret
ret
shrl
out
sub
cmp
orl
inc
sbb
ret
add
cld
dec
xor
push
test
mov
cmpl
mov
cmp
xor
pop
dec
mov
jns
push
xor
mov
pop
mov
add
adc
aam
xchg
cmpsb
dec
mov
jnp
jl
loop
daa
rcll
mov
push
movsl
mov
sub
or
jae
rolb
enter
out
addr16
add
popa
sbb
das
popa
sbb
cmp
xorb
icebp
inc
stos
cmc
xor
jne
int3
lret
pop
jmp
das
nop
jo
jecxz
pop
xor
out
in
testb
aas
notb
pop
lfs
add
sbb
cmp
lods
pushf
lcall
jnp
mov
jne
inc
stc
dec
imul
sub
dec
mov
stos
xchg
int3
jl
xchg
dec
icebp
or
notl
cmp
xchg
jg
or
push
inc
std
fld
mov
push
jp
mov
dec
mov
adc
jg
inc
mov
mov
add
lret
stos
cmpsl
pop
pop
or
xlat
movsl
frstor
jmp
mov
imul
aaa
loop
or
inc
gs
pop
sbb
ljmp
mov
mov
rcrb
push
xchg
mov
sbb
sbb
cmp
cmp
imul
lret
adc
jbe
xchg
add
cmp
int3
xlat
sar
jl
mov
lahf
cmp
xchg
out
test
ds
fsubp
push
fimuls
int
mov
push
pop
lcall
rcl
gs
hlt
lods
push
fdivrl
adc
stos
xchg
sub
cmc
dec
lcall
add
mul
adc
mov
push
iret
test
in
jb
aam
ret
stos
adc
jecxz
mov
sar
imul
lock
mov
cmpsb
ljmp
and
jns
jge
add
cmpsl
stc
push
lahf
mov
cld
sar
roll
stos
ljmp
mov
lock
aad
lret
sti
and
xchg
or
out
aam
aam
ss
es
notl
cmpsl
or
inc
jle
popa
shr
rcll
ret
or
les
jg
mov
inc
xlat
loope
fcomi
jle
sub
mov
mov
loope
out
mov
pusha
cmp
xchg
mov
push
jns
icebp
fdivrs
popa
add
nop
sti
xchg
popf
push
push
icebp
pop
or
ret
lret
lock
mov
out
pop
or
stc
sub
jg
aam
push
xor
cmpsb
lahf
incl
sbb
xor
pop
sbb
je
pop
pusha
add
pop
pop
aad
cmp
ds
mov
push
jge
inc
cli
xor
cmp
mov
enter
sahf
pop
fstp
dec
pop
mov
aad
mov
in
cmpsb
jg
jns
push
js
xchg
sub
mov
movsl
sbb
mov
scas
enter
sub
jmp
aam
in
jecxz
sarl
jmp
lock
and
test
push
xchg
imul
or
push
add
iret
cld
sbb
xor
xchg
xchg
sbb
mov
cs
jp
pop
icebp
sti
sub
xor
inc
fdivrs
mov
xchg
lar
sbb
sti
and
add
jo
dec
sbb
pop
and
add
or
push
bound
mul
mov
pushf
cli
aaa
xchg
fdivrl
mov
adc
pop
int
shlb
push
jg
xor
push
popf
cmp
loope
je
jae
jecxz
mov
sbb
fs
jl
popa
pop
adc
push
pop
mov
mov
jnp
xchg
jle
xor
sti
stos
push
or
sbb
xor
jo
in
cmpsl
scas
push
push
in
inc
mov
adc
add
bound
xchg
pop
out
stos
mov
mov
rcrl
inc
xchg
aam
ljmp
xlat
lahf
or
push
imul
push
push
leave
outsb
ja
sub
push
aas
xchg
js
or
ja
ds
jne
xchg
inc
repz
push
sub
cli
jle
out
icebp
sbb
loope
mov
xor
es
jo
mov
xor
cli
push
les
rcr
jle
fsts
jo
test
add
inc
jo
mov
and
push
sti
in
sarb
jo
and
out
mov
and
push
mov
mov
lea
adc
call
orb
xchg
fisubrs
lret
pop
push
push
sarb
out
test
mov
arpl
mov
popa
test
test
mov
push
outsb
insl
mov
inc
shl
repz
fistpll
or
bound
mov
pop
xchg
and
arpl
fwait
and
cs
fstl
or
mov
push
cmp
cmp
movsl
sarb
jnp
sbb
ljmp
mov
inc
or
iret
sbb
mov
mov
loop
in
hlt
pop
pop
add
iret
enter
jo
lock
rcl
call
mov
stc
mov
or
add
and
rclb
ja
jmp
pop
inc
jo
jnp
fdivrs
scas
rorb
call
mov
cs
stos
insb
push
sub
aaa
mov
mov
pop
xchg
int3
jns
fbstp
daa
test
inc
arpl
jb
xchg
jle
xor
in
dec
iret
clc
lret
fsqrt
divb
cmpsb
popf
jo
outsb
cld
daa
jb
jne
hlt
mov
std
in
cli
sub
daa
popf
push
imul
test
inc
roll
es
xchg
pusha
jge
push
xchg
cmpsl
and
inc
jno
call
mov
aas
cmp
out
mov
out
ds
sbb
dec
syscall
iret
scas
addl
mov
jle
imul
pop
xor
xor
pop
or
pop
jns
les
adc
aas
or
shll
mov
push
cmp
cmpsl
hlt
mov
inc
dec
test
xor
inc
lcall
and
fnstcw
xchg
gs
mov
shrl
shrl
fnstsw
cmpsl
fmuls
jno
adc
inc
insb
inc
fwait
stos
add
sub
jae
xlat
dec
mov
loopne
mov
mov
cmc
sbb
dec
adc
sub
lahf
sbb
sbb
xchg
and
mov
push
push
mov
imul
jnp
xchg
fsubrl
or
pop
loop
xchg
xchg
sbbl
fidivrl
sbb
sbb
adc
xor
pop
movsl
out
inc
loopne
ljmp
fdivs
lcall
jmp
lret
ja
pop
fcmovu
xchg
push
xchg
out
inc
push
movsl
in
add
xor
jb
out
sahf
js
pop
js
test
add
mov
scas
addr16
sbb
inc
push
sub
cmp
push
lcall
sbb
mov
and
outsl
repz
xor
jg
adc
pop
int3
jno
and
push
mov
adc
or
jb
and
push
test
dec
sbb
scas
insb
xor
and
and
cmp
adc
xchg
repnz
imul
cmp
jns
sbb
lods
pop
jae
lret
leave
shrl
jo
fdivrl
stc
jb
cmp
lods
mov
push
mov
lods
fiadds
stc
xor
mov
adc
jp
lea
scas
outsl
aam
gs
sub
push
cmp
js
js
xor
push
and
jo
dec
ja
sub
mov
pop
loopne
mov
lock
pop
imul
ret
inc
repnz
daa
or
notb
jb
xchg
xor
xor
mov
add
hlt
adc
clc
testl
add
lds
dec
sbb
xchg
fnstcw
gs
pop
lods
adc
push
popf
nop
sub
ljmp
imul
adc
fcmovnu
scas
or
ja
ret
xorl
push
mov
and
cmp
push
push
cltd
cmp
rol
flds
xor
or
lea
fistps
lcall
pop
ja
dec
dec
push
cmpsb
sbb
cmp
ret
out
mov
adc
scas
xor
xor
jae
lret
ja
fcompl
sbb
jb
mov
and
lret
dec
mov
mov
sbb
push
js
mov
or
adc
add
push
inc
and
sbb
push
inc
jbe
fidivs
mov
popa
or
push
cmpsl
sbb
icebp
pop
out
out
incb
cltd
dec
pop
mov
mov
xchg
stc
cmpsb
cwtl
notb
push
hlt
pusha
push
idiv
arpl
and
ja
sbb
ret
mov
imul
push
sbb
sub
dec
in
push
sub
sbb
inc
xor
iret
mov
cmc
lods
loopne
scas
es
or
arpl
push
mov
mov
js
or
xor
fcompl
mov
cltd
addl
pop
scas
or
pop
hlt
push
cs
aam
inc
dec
int3
cmp
es
cs
or
sub
sbb
xor
jo
cmp
pop
aaa
cli
ret
push
mov
jo
push
xor
scas
push
jae
lea
or
mov
sbb
icebp
popa
fdiv
pop
jg
sahf
pop
lods
or
cmpsl
push
push
add
dec
sub
mov
push
adcl
aam
add
push
pop
test
out
xlat
adcb
xchg
outsb
addr16
jp
sub
pop
sbb
ljmp
push
sarl
mov
cwtl
aas
fistps
iret
dec
push
js
dec
pop
inc
inc
adc
out
mov
ficoml
xchg
add
stc
js
call
mov
das
dec
jmp
jp
cmpsl
xchg
arpl
cli
add
adc
nop
push
movsl
inc
cmp
out
cmp
scas
inc
cmpsl
push
loope
xchg
sbb
hlt
inc
icebp
inc
into
mov
xchg
and
ret
xlat
test
inc
dec
ss
mov
bnd
sbb
pop
xor
cld
dec
icebp
pop
lds
push
adc
divb
push
fdivrs
mov
int
sbb
cmpsl
jae
jg
jl
outsl
mov
ss
and
push
in
stos
mov
cwtl
pop
push
loopne
rolb
mov
pop
push
mov
iret
popa
cmpsl
shll
ja
mov
xlat
inc
pop
shrl
outsl
and
cmp
cld
mov
enter
mov
inc
sarl
sub
loope
add
mov
sbb
add
dec
dec
sub
pop
push
outsb
cmp
lods
fwait
mov
mov
into
gs
cmc
dec
aaa
movsl
sub
pushf
jne
add
sub
shl
fucomp
sub
das
jl
pop
call
rolb
lods
jb
sbb
cmp
cld
or
fs
push
adc
or
lods
rcrl
loop
lds
xchg
clc
subb
jno
cwtl
push
sarb
add
mov
addb
dec
xor
cli
mov
mov
mov
stos
or
inc
mov
sbb
push
js
push
inc
inc
int
insl
push
in
mov
dec
add
cmpsl
pop
rolb
into
test
stc
adc
imull
into
sbb
add
inc
in
jo
inc
insb
or
rol
cmpsl
rol
lods
and
in
sub
cs
ds
movsb
iret
add
inc
and
or
xor
inc
mov
adcb
xor
xor
testb
shrb
xchg
push
mov
add
or
bndldx
jno
mov
mov
movsl
ljmp
gs
jmp
cwtl
jns
fdivl
push
push
dec
inc
mov
jb
js
cwtl
in
pop
js
rcll
lock
push
xor
xor
sbb
loope
mov
shlb
ds
aad
mov
loop
jge
lock
xchg
fs
xchg
fstl
pxor
dec
push
test
popa
lods
out
dec
xlat
mov
divl
inc
int
xlat
cmp
pop
jge
test
mov
hlt
cmc
jg
and
cltd
jl
loopne
in
xor
ret
jmp
lods
inc
ret
ss
push
nop
loopne
jg
jae
and
ljmp
mov
mov
xchg
pop
dec
jmp
pop
push
shr
insb
out
roll
dec
out
hlt
inc
push
fists
and
xchg
mov
ret
aas
cld
jne
xor
push
mov
push
sub
mov
or
push
and
repz
js
xorl
fnstenv
sahf
mov
mov
xchg
sar
test
xlat
dec
cmp
pop
mov
js
jecxz
sbbb
jp
jb
mov
sub
mov
daa
pop
mov
jmp
insl
xchg
and
cs
in
mov
cmpsl
test
leave
fwait
out
in
pop
sub
rcrb
lds
jno
mov
pop
fistl
lds
pusha
sbb
loope
rolb
dec
add
mov
inc
in
adc
icebp
mov
movsl
jno
hlt
test
xchg
sbb
orl
sti
and
adc
xorl
mov
add
add
enter
js
sarb
and
cmpsl
inc
in
mov
ret
xchg
aas
mov
stos
mov
sub
popf
dec
and
cs
pop
xor
xchg
jecxz
mov
push
imull
ss
cmp
aad
addl
aas
and
rcl
pop
adc
xorl
xor
fsubl
jne
or
pop
dec
or
sub
push
pop
sub
jmp
ljmp
sbb
xor
dec
rcrl
sub
pop
pop
adcb
sahf
push
cmp
data16
lcall
aad
xor
mov
xchg
mov
sub
les
xchg
fdivs
add
inc
mov
in
cli
gs
pop
push
es
mov
push
push
scas
out
jmp
test
lret
bound
frstor
mov
ss
inc
push
repnz
sub
inc
xchg
addr16
mov
mov
mov
loop
call
sub
mov
mov
inc
sbb
in
js
inc
adc
xchg
xor
adc
dec
iret
cmp
mov
lret
loope
push
dec
dec
ja
repz
pop
les
outsb
enter
lock
jle
cmp
faddl
stc
xor
cmp
xchg
mov
call
gs
pop
or
xlat
lods
xchg
pushf
in
sbb
pusha
repz
jmp
movsb
popa
pop
jnp
pop
mov
repnz
pop
out
testl
push
or
or
aas
add
cmp
out
mov
dec
ja
repnz
inc
jae
in
push
mov
scas
xlat
loop
pop
pushf
into
xor
push
jbe
jns
push
push
lahf
dec
push
bound
xchg
xchg
or
stos
stos
sbb
fstps
push
mov
insb
xchg
adc
sub
jmp
movsl
adc
inc
adc
mov
jg
and
pop
or
pop
push
and
cmc
jl
push
loope
pop
daa
pop
xchg
pop
jmp
out
sub
inc
in
fisubl
jns
push
jne
jg
adc
sub
scas
pop
jae
sbb
arpl
push
jge
pop
adc
clc
sub
pop
aaa
pop
dec
xor
mov
imul
in
add
ret
test
das
mov
testb
inc
xor
imul
add
std
imull
mov
mov
inc
dec
popa
push
aad
and
fcoml
adc
test
inc
jmp
or
lock
dec
mov
mov
dec
and
xlat
push
add
imul
stc
nop
or
mov
icebp
pop
xlat
add
push
lds
mov
push
mov
sahf
or
fisttpl
xchg
mov
adc
loope
dec
adc
popa
call
pushf
imul
fmull
insl
dec
fnsave
pushf
mov
xchg
clc
dec
arpl
std
loopne
cmp
push
orl
push
cli
mov
cmpsb
and
inc
inc
adc
mov
int3
sbb
cmpsb
iret
stos
ret
outsb
out
fldenv
adc
xchg
addr16
rcr
call
fwait
and
push
mov
inc
jno
pop
pop
rep
mov
pop
adc
rcrw
test
cmpsb
daa
frstor
test
push
stc
jno
pop
cmp
cli
jbe
stos
fdiv
sub
je
lcall
add
daa
mov
rolb
repnz
xor
push
nop
cmp
lret
or
scas
out
popa
loopne
push
jne
and
int3
push
push
push
lds
shlb
daa
aad
rcrl
adc
cwtl
cmp
xor
cmp
insb
call
ja
popf
imul
mov
lahf
js
jb
test
jmp
xchg
popa
movsb
push
cmp
inc
inc
push
cmc
mov
sbb
test
or
ret
cmc
fsubp
rcll
arpl
hlt
or
lcall
mov
insb
ret
mov
mov
out
mov
inc
xchg
pop
mov
jge
pop
inc
cmc
sbb
jo
sub
insl
dec
insl
cs
adc
dec
imul
dec
sub
lds
or
movsl
ljmp
and
cli
mov
jne
xchg
sbb
fmuls
loopne
mov
fldcw
push
in
jae
xor
scas
adc
add
add
ljmp
aas
aaa
sbb
jae
adc
cwtl
mov
add
in
dec
mov
lret
dec
dec
aad
xchg
mov
sbb
mov
das
popf
stos
push
mov
subb
pop
xor
xchg
test
inc
pop
sub
scas
push
mov
mov
cmpsb
sub
dec
sbb
xchg
pop
sbb
dec
jp
jbe
jo
jecxz
mov
out
rcll
dec
push
xor
mov
sub
popa
mov
adc
idiv
add
push
xchg
daa
stos
lahf
jae
dec
imulb
lods
cltd
lcall
push
fstl
adc
cmpsl
push
es
sbb
xchg
jbe
loope
mulb
adc
cmc
jb
mov
dec
adcb
sahf
adc
mov
scas
inc
in
pop
dec
xchg
cs
xor
jno
outsb
push
adc
add
xchg
cmp
push
fst
cmp
addb
mov
shl
mov
mov
inc
cmpsl
std
adc
lds
leave
xor
mov
imul
es
adc
jae
sbb
mov
mov
enter
filds
mov
push
push
mov
pop
push
in
push
jmp
sub
cs
pop
push
cmp
jl
and
dec
cmp
nop
int
push
mov
mov
pop
inc
in
lock
mov
jg
push
adcl
imull
sub
pop
pop
mov
fsubrl
mov
inc
lret
xor
cmpsl
call
shl
outsl
les
ds
icebp
ja
jle
outsb
call
repnz
inc
sub
nop
sbb
or
fstpt
cltd
pop
sub
sbb
jg
mov
loopne
lahf
mov
fldl2e
out
jmp
int3
jg
fwait
icebp
data16
enter
outsb
adc
scas
fs
adc
daa
pop
add
adc
xchg
call
mov
ret
jmp
ficoml
pusha
out
cmp
mov
movsb
lret
movsl
fdivl
xchg
inc
add
out
lds
or
sub
pop
inc
ret
in
cli
shl
mov
xor
xor
cmpsl
or
lock
xor
mov
test
xchg
sub
gs
cmp
loopne
cmpb
test
pop
push
xchg
mov
jg
pop
ljmp
jg
mov
mov
mov
hlt
inc
out
push
or
adc
push
aas
lret
or
std
mov
push
sbb
push
adc
pop
ds
fwait
inc
sub
sbb
nop
je
call
xchg
pop
scas
adc
jo
pop
xchg
bound
inc
aas
dec
cmp
xchg
mov
aad
rcrb
imul
popa
out
inc
pusha
sub
ficoms
inc
adcl
aam
xchg
add
push
push
sbb
mov
pop
xchg
gs
pushf
jno
das
lods
movsb
mov
mov
std
fistl
out
idivl
add
sub
decb
push
push
xor
cmp
rclb
int
push
fs
sahf
mov
dec
lret
arpl
pop
xor
dec
mov
add
mov
sbb
xor
pop
lods
daa
dec
clc
mov
push
shrb
subb
inc
scas
push
xor
pushf
imul
sbbb
ffreep
pop
cmpl
xor
and
mov
es
scas
jns
loope
int3
cmp
lahf
pop
sbb
push
cwtl
lock
scas
addl
in
sub
sti
push
jmp
shll
in
inc
inc
mov
ficoml
clc
xchg
das
arpl
lcall
outsl
in
xchg
lock
sbb
rolb
inc
mov
or
dec
inc
std
adc
inc
insl
adc
ss
mov
mov
xchg
xor
nop
dec
sub
clc
imul
ret
ret
jbe
shr
daa
sub
cld
sub
xor
or
movb
or
mov
xor
call
jno
mov
xor
fstpt
push
push
das
pop
addr16
jp
push
push
push
sub
xchg
inc
cmp
mov
add
icebp
jmp
mov
add
out
lret
pushf
bts
popa
ss
push
ret
fidivrs
int3
repz
mov
push
fsubp
lds
jle
or
add
in
sub
xchg
pop
pushf
jnp
inc
and
sbb
enter
sub
sbb
daa
lret
fcoms
lods
test
aad
cmp
cmp
push
sbb
getsec
jae
dec
and
loope
push
push
jns
sti
dec
mov
push
and
cltd
rclb
rol
jge
mov
jae
pop
xchg
not
sbb
cmp
sbb
jp
popa
hlt
xor
xor
inc
loop,pn
in
add
mov
popa
mov
xchg
into
rolb
int
mov
mov
sti
pop
pop
mov
mov
ss
jmp
jo
jno
inc
lret
jge
pop
and
call
es
xchg
jecxz
loop
add
outsb
fsubrp
cli
push
mov
push
mov
aam
mov
mov
pop
dec
xor
icebp
and
xchg
pop
sub
sar
push
enter
int3
add
xchg
fcomps
or
mov
or
mov
add
test
testb
cmp
xchg
adc
sub
push
cmp
fs
movl
mov
or
in
sbb
add
shl
stc
mov
mov
push
jge
faddl
in
loope
call
pusha
dec
push
data16
test
rclb
insb
xchg
pop
adc
lods
lahf
call
es
scas
adc
subb
test
adcl
mov
jecxz
aaa
mov
imul
ret
push
mov
icebp
nop
fimull
ds
dec
std
out
add
outsb
xor
add
in
insb
inc
dec
xor
adc
cmp
ret
cltd
rcrl
mov
lahf
pop
pusha
retw
notb
mov
fcomps
lahf
arpl
mov
jno
cmp
lods
cli
outsl
icebp
add
out
loope
in
mov
jo
cwtl
xor
add
jmp
jecxz
push
and
mov
sbb
repz
cmp
and
sub
int3
shll
pop
lods
int
push
test
cmpsl
adc
pop
scas
insb
rclb
inc
faddl
xchg
inc
or
mov
lods
inc
lods
inc
int3
stos
aaa
xchg
je
aam
jge
sbb
loope
enter
repz
lea
xor
in
and
sub
sub
pop
and
mov
push
adc
inc
gs
pop
mov
push
and
or
cmp
xchg
cmp
adc
adc
sub
mov
fmuls
cmp
rclb
cmp
xchg
lret
fisubrs
push
int
mov
cmp
icebp
mov
sub
push
nop
mov
pop
lea
sbb
shrb
in
sub
popa
cmp
stos
and
xor
adc
pop
cmpsb
mov
inc
mov
lret
jo
daa
push
mov
lcall
xchg
insb
cmpl
and
inc
sbb
dec
test
inc
push
push
mov
inc
inc
adc
mov
stc
adc
inc
jge
and
and
stos
mov
pop
mov
stc
bnd
in
push
ret
pop
sub
in
dec
rclb
mov
pop
dec
jecxz
xor
gs
out
push
repz
mov
inc
xorb
enter
xchg
push
ss
rolb
add
bound
enter
jo
jno
pop
adc
fnstenv
pop
das
stos
shr
js
push
mov
adc
fstpl
rorl
iret
mov
mov
mov
pop
adc
outsl
add
pushw
push
mov
and
test
dec
icebp
xor
aam
repnz
jns
fs
mov
repz
clc
cmpsl
aam
orl
notb
imul
out
lock
jg
dec
testb
outsb
jbe
repz
sub
out
add
cmpsl
fsub
imul
mov
sahf
xchg
mov
jo
adc
out
sbb
je
pop
roll
dec
jnp
mov
add
mov
scas
repnz
pop
jle
push
cmpsl
repz
cmp
jbe
out
aaa
ja
inc
movsl
repnz
test
jp
jle
or
addr16
shlb
pop
aas
cmp
pusha
inc
sub
lods
stc
ret
add
sub
xchg
pop
dec
mov
xchg
mov
mov
and
int3
jns
pop
std
adc
xor
arpl
mov
mov
or
repz
call
gs
mov
cmp
out
sub
push
stc
add
rorb
xchg
jne
lods
xchg
loop
iret
mov
je
shl
inc
dec
dec
dec
loop
cmpsb
int
sbb
bnd
mov
aam
xor
push
push
xor
fildl
hlt
stos
ja
sbb
or
lahf
ret
cmp
xchg
rorl
cmpb
pushf
aad
adc
mov
xchg
dec
xor
sub
xchg
enter
fwait
not
out
and
je
and
push
or
movsb
or
sahf
adc
mov
stos
pop
push
in
imul
xchg
push
fucomip
adc
test
outsl
jl
mov
mov
loope
sub
ret
or
fisubrl
fisttpll
inc
and
inc
sub
xchg
inc
jmp
ljmp
pop
test
xor
cmpsb
mov
aaa
cli
bnd
dec
dec
fwait
and
mov
mov
sub
and
jg
push
or
jg
pop
loop
test
sub
enter
add
xor
cs
rorl
push
sub
sbb
fnstenv
mov
push
xlat
push
or
xchg
std
xor
fwait
dec
mov
movd
push
js
sub
or
and
sub
jno
movsl
in
pop
imul
lret
orl
ljmp
xchg
mov
sub
loop
adc
jmp
cltd
dec
push
in
sbb
fidivrs
dec
xchg
fcomip
pop
fdivrl
lahf
and
pop
fdivl
iret
fnsave
mov
mov
call
imul
in
fwait
sub
in
sbbl
stos
cmp
mov
jo
push
sbb
insl
push
aas
bound
aaa
inc
in
mov
xor
add
mov
xor
pop
push
gs
test
jne
aam
imul
movsb
dec
outsb
test
pop
xor
addr16
push
sbb
std
lret
ljmp
loop
push
out
or
jno
add
lret
scas
subb
adc
xchg
bound
dec
mov
es
rcr
cli
inc
bound
sar
add
lret
jnp
xchg
inc
mov
aad
mov
lret
mov
or
or
dec
inc
dec
pop
bound
lock
fwait
rorb
testb
scas
push
xor
jbe
push
adc
inc
push
rclb
push
cli
mov
mov
imul
xchg
cmp
pop
gs
xor
cmpsb
add
jle
xchg
in
fcmovbe
and
push
jmp
cmp
lods
dec
stos
lahf
add
cwtl
js
sub
xchg
adc
add
jno
stos
mov
std
or
or
mov
pop
xchg
in
jg
sbb
js
push
pop
fistpll
pop
xchg
sbb
testl
mov
sbb
lods
or
fwait
cld
pop
les
adc
cli
pop
in
mov
mov
jnp
push
mov
repz
mov
sub
sbb
mov
jo
inc
aaa
adc
dec
je
mov
sub
xchg
test
out
stos
and
in
adc
out
sbb
sahf
jl
ret
xor
test
pop
adc
mov
cs
mov
push
inc
ds
mov
lock
push
shrl
sbb
jo
mov
mov
pop
xlat
pop
cwtl
or
adc
rcrb
mov
or
xor
mov
loop
jmp
and
xchg
rcrl
lds
add
aam
sbb
and
lret
into
inc
xchg
cld
cmpsb
add
test
imul
mov
adc
mov
pop
out
dec
xor
adc
jnp
fwait
loope
sub
push
jae
mov
movsb
arpl
sbb
xchg
push
cmp
xchg
fs
xchg
inc
ret
cli
push
lcall
lds
inc
xor
add
cli
jg
cmp
aam
out
dec
popf
enter
jmp
lock
sbb
shrl
out
sub
inc
fimuls
mov
mov
cmpsl
xor
gs
in
pusha
mov
or
pop
or
sbb
adc
xchg
adc
mov
fidivrs
sbb
loopne
out
push
mov
js
push
xchg
adc
push
inc
jp
cmp
mov
mov
push
mov
jmp
adc
mov
shl
aaa
mov
cmp
rcr
les
jg
jb
rcrb
cwtl
mov
fstpt
xor
stos
fwait
xchg
ja
dec
or
xor
shlb
test
out
inc
shr
stc
sbb
repz
int
sbb
mov
leave
mov
cmpsb
pop
cmp
mov
fdivrl
mov
jmp
jae
xchg
sbb
mov
push
dec
cmpsl
adc
cwtl
mov
and
sub
aad
rclb
pop
fldenv
sbb
movhps
or
xchg
fildll
jp
add
sbb
cmpsb
xor
out
fldcw
push
cmp
pop
shl
fcmovb
insl
cwtl
in
adc
mov
sub
pop
sub
and
pop
in
jmp
push
pop
cmp
into
push
lea
out
jecxz
test
push
mov
dec
shrl
leave
loop
jmp
shrb
cmp
adc
mov
popa
dec
mov
outsb
sbb
jo
cmp
fildl
enter
call
mov
call
popf
add
insb
push
pop
cmpl
adc
ret
sahf
xchg
cltd
mov
mov
sbbl
push
cmpl
es
lods
add
inc
mov
loope
imul
dec
imul
sarb
shl
xchg
cmp
add
add
or
pushf
xchg
dec
push
sub
jae
mov
mov
ficoms
sbb
insl
ret
sub
cmp
xchg
pop
add
or
out
mov
fisubs
js
and
notl
aas
xor
fbld
mov
xor
xchg
enter
jne
ret
dec
scas
pop
dec
lods
adc
dec
stos
jl
gs
int
push
push
sub
dec
and
mov
mov
sbb
nop
int3
lods
inc
mov
sahf
jnp
imul
into
sub
sbb
cmpsb
jbe
out
pushf
aam
shrb
xor
mov
xor
xchg
cmc
int3
das
jnp
jne
aad
repnz
mov
fs
rolb
fists
loope
popf
lods
insb
clc
jmp
fnstenv
pop
push
mov
lods
xlat
adc
cmp
jne
xor
jge,pn
adc
push
push
inc
clc
jo
rcll
cli
mov
or
cwtl
pop
mov
xchg
shr
mov
fs
mov
cmpsl
mov
lret
incb
dec
fadds
movsl
xor
push
pop
add
jge
mov
std
pop
daa
jns
cltd
jl
arpl
jno
jp
icebp
push
jecxz
push
sbb
int3
dec
pop
cmc
inc
cltd
cmpsb
sub
in
enter
mov
jno
cli
leave
mov
and
jbe
orb
mov
stos
jnp
cmp
pop
movsl
jmp
jno
push
lea
gs
jne
testb
inc
mov
mov
scas
inc
fimull
cltd
fwait
cwtl
into
stc
pop
mov
push
scas
pop
cmp
rcl
push
test
mov
jge
loopne
mov
mov
lods
jg
das
data16
or
les
mov
mov
dec
inc
mov
fsubrp
je
loope
push
lock
xchg
push
cltd
mov
ret
or
insb
es
add
xchg
dec
or
pop
push
push
xchg
mov
arpl
in
je
mov
push
jo
cmc
push
dec
cmpsb
mov
fyl2xp1
push
add
rolb
mov
mov
sbb
bnd
orl
xchg
jmp
bound
add
or
adc
test
sbb
sbb
cmp
fnstcw
insl
sahf
pop
mov
pop
jl
shll
aam
les
push
pop
shrb
adcl
fdivrl
loopne
shll
dec
jnp
fcoml
mov
pop
pop
add
rcl
or
test
sub
scas
sbb
pop
xchg
cmp
ds
sub
push
imul
add
data16
stos
insb
sbb
adc
mov
mov
andb
negb
jecxz
jge
test
cmc
xor
xchg
shll
xchg
sub
ja
shlb
icebp
xchg
push
sub
lock
push
jecxz
dec
orb
js
and
push
mov
mov
pop
aaa
lret
mov
cmp
data16
push
je
not
mov
mov
jp
ficoms
stos
dec
push
outsb
add
xchg
inc
cmp
rol
stos
in
pop
sub
or
mov
enter
cmp
int3
cmp
xlat
jle
pop
loope
out
push
sbb
mov
stos
out
jbe
or
loope
mov
jmp
inc
adc
push
ja
aaa
daa
cmp
or
outsl
loopne
mov
mov
xchg
fistpll
or
jge
dec
or
pop
out
push
mov
imul
sub
dec
push
push
andl
jae
mov
ljmp
mov
inc
faddl
incb
and
adc
and
shlb
mov
push
cmpb
nop
sbb
inc
jnp
ja
jb
jl
cmp
push
and
dec
imulb
stos
jl
xor
xchg
imul
or
clc
inc
mov
add
pop
and
inc
repnz
lea
mov
int
fs
jne
push
dec
hlt
xor
cs
jp
adc
dec
shl
push
mov
jne
jg
sbb
inc
subb
mov
adc
aam
add
dec
pop
fisttps
cs
pop
ss
jns
inc
fs
mov
les
lahf
or
add
hlt
fwait
adc
sub
cmp
or
ret
jbe
adc
aad
push
filds
jb
dec
sbb
addl
inc
push
aaa
or
or
add
data16
scas
scas
xchg
icebp
jl
xchg
mov
pusha
nop
loope
js
cmp
sub
mov
movsl
addl
mov
call
data16
jo
pop
lea
and
mov
dec
out
cmpsb
lds
jns
dec
inc
divb
inc
in
popf
rcrl
add
xchg
fidivrs
ret
lcall
popa
adc
jno
call
cmp
push
stos
push
ror
stos
test
dec
nop
jb
or
mov
ret
lods
and
loopne
sbb
jns
pop
insl
pop
mov
cli
push
push
test
cwtl
push
xchg
fs
data16
adc
jb
xor
js
push
and
sahf
push
scas
and
shll
cmpsl
je
cmp
cmp
lea
jbe
or
cmpl
mov
xchg
sub
arpl
aad
mov
ja
out
jno
mov
jle
iret
loop
rorl
notl
add
fistl
sbb
icebp
fisttpll
stc
out
and
dec
jmp
mov
pop
mov
or
sub
or
jmp
xlat
jo
mov
mov
lds
fstl
mov
mov
iret
mov
push
lea
lds
movsb
mov
dec
mov
xorl
rcrb
pop
js
pop
js
mov
adc
idivb
jb
mov
out
iret
hlt
push
pop
lock
sarl
inc
inc
aaa
aaa
enter
add
insb
adcl
call
mov
aam
xor
xchg
mov
jo
jp
jge
scas
leave
mov
fwait
clc
pop
ret
hlt
enter
pop
pusha
jnp
pop
inc
pusha
sbb
push
xor
pop
pop
xor
sub
lret
add
mov
in
cltd
xchg
cmp
imulb
sub
out
jg
adc
push
and
pop
pop
imul
dec
sub
dec
popf
loopne
fcmove
cmpl
adc
mov
dec
push
add
xchg
pop
lea
stos
movsb
cli
adc
mov
mov
mov
adc
mov
sarl
outsl
mov
nop
bound
mov
int
pop
adc
nop
push
aad
add
jle
xlat
xor
push
fimull
add
cld
cld
push
fstl
orb
adc
mov
jp
sbb
cltd
dec
ss
outsl
sahf
jo
dec
mov
sub
xchg
mov
fadd
sub
call
sar
mov
push
dec
lock
inc
mov
mov
daa
dec
daa
dec
mov
out
and
das
mov
jl
int
aas
xchg
adc
fnstcw
out
int3
adc
mov
jne
and
cmpsl
adc
fidivrs
sub
xchg
in
std
filds
cmp
daa
mov
rolb
in
mov
pop
gs
or
and
into
xchg
cmp
sub
push
or
fmul
mov
loop
mov
fcmovu
aam
cltd
std
aad
adc
mov
int3
sub
push
cmp
cmp
add
aas
jnp
xchg
mov
and
inc
xor
jge
pop
fldl
lret
inc
cmpsb
scas
arpl
and
xlat
add
xchg
push
or
mov
outsl
nop
ss
jg
fadds
mov
cmp
push
in
sahf
ljmp
push
cwtl
push
gs
fwait
leave
icebp
dec
mov
mov
xchg
mov
xchg
adcb
xor
add
sbb
fnstsw
dec
jle
hlt
sbb
pop
cmc
out
mov
and
movsb
xor
adc
mov
jnp
xor
cs
xlat
cli
add
icebp
in
repz
pusha
pop
test
mov
stos
out
cmp
mov
out
xor
jmp
scas
div
sub
mov
add
in
scas
xchg
das
cmp
inc
lds
sbb
xor
cmpsl
pusha
xchg
push
mov
scas
sbb
iret
fiaddl
or
xor
sub
scas
fisubl
jp
cmp
xor
inc
aam
jb
out
lahf
cmp
xchg
fildll
and
mov
inc
bound
cmovnp
mov
pop
mov
sub
sarb
shrl
hlt
pusha
mov
xchg
or
adc
lods
and
ret
mov
sbb
mov
insl
insl
sbb
lock
inc
sbb
mov
call
inc
push
hlt
xchg
dec
scas
or
pushf
fsts
cmp
inc
iret
add
loop
in
ja
mov
jne
jl
lahf
ss
adc
mov
add
int3
mov
cmp
xor
xchg
xchg
in
xchg
insb
cli
fimuls
adc
pop
insb
pop
movsl
stos
ret
popf
add
push
or
stos
inc
inc
inc
aas
lret
pop
push
pop
push
fcmovu
test
iret
cmc
sub
cwtl
mov
mov
jmp
stc
loopne
movsl
pop
scas
mov
xchg
pop
xchg
xchg
jg
mov
loop
xchg
jbe
rcr
pop
mov
in
aad
jnp
mov
mov
jge
pop
and
cmp
cs
mov
and
test
push
daa
adc
mov
push
or
cmp
test
mov
inc
xor
xchg
addb
fimuls
insb
sbb
jecxz
into
xor
push
inc
rcrb
test
les
nop/reserved
xor
test
ljmp
in
mov
rorb
popa
rol
push
aad
mov
jnp
aam
jno
aaa
mov
movsb
scas
jne
mov
mov
pop
cmovns
stos
xchg
push
insl
fs
sbbb
push
xor
out
mov
ret
mov
push
aad
push
pop
push
xlat
dec
mov
pop
mov
xor
push
fisubrs
pop
movsb
iret
inc
add
out
pop
push
imul
loop
mov
insl
inc
in
xor
xchg
aam
shll
inc
inc
adcb
into
pop
scas
dec
outsl
dec
push
push
rcr
cwtl
in
cmp
int
jle
mov
mov
dec
pop
cmp
sti
shll
xor
dec
xchg
push
cld
out
jge
xor
popf
jmp
add
or
outsl
jns
gs
movsb
fwait
hlt
outsl
mov
or
ret
sub
stc
shl
mov
mov
rolb
and
pop
or
imul
xchg
jmp
ljmp
mov
lods
pop
pusha
fimuls
fnstsw
or
xchg
sbb
out
mov
dec
lahf
inc
sub
xor
in
mov
insl
enter
push
adc
adc
mov
push
or
aas
rcl
mov
jb
int3
insl
pop
mov
cwtl
mov
cli
sub
cmovnp
movsb
test
icebp
std
rcll
gs
cmp
sub
leave
pushf
mov
dec
outsl
mov
loop
add
divl
mov
bound
lcall
add
stc
cmp
lea
jp
adc
mov
js
lea
int
cmp
lcall
out
cmpsb
pop
lock
adc
clc
in
stos
adc
jne
jge
insl
xchg
imul
shll
aaa
out
or
xchg
bound
mov
xchg
jl
sbb
repnz
mov
daa
and
jg
lds
mov
jecxz
fisubs
inc
jo
jg
into
xchg
lds
or
sbb
testl
loope
cmp
movsb
add
ret
xor
jp
imul
out
adcl
inc
push
push
cwtl
inc
push
adc
std
in
adc
ljmp
loopne
imull
mov
shlb
mov
jnp
es
les
out
in
ffreep
add
sbb
sbb
cmp
inc
leave
cltd
cmpsl
subl
popa
je
or
ficomps
dec
adc
sbb
dec
divl
cwtl
in
cmp
sarl
je
je
fbld
data16
cli
out
mov
lcall
jnp
ds
stos
dec
dec
mov
loope
es
push
inc
jne
outsl
dec
pusha
aam
les
les
inc
push
iret
jbe
jle
cmpsb
mov
lea
mov
add
negb
dec
cmp
shrl
in
cmp
addr16
test
lret
fwait
cmp
in
in
loop
pop
frstor
pop
sti
xor
push
pop
sbb
mov
aaa
ret
jo
outsb
mov
inc
and
xchg
clc
es
out
cmp
repnz
sahf
lds
pop
mov
mov
xchg
sbb
jnp
es
scas
insb
lock
jo
das
test
mov
mov
testl
pop
leave
push
inc
sub
adc
push
jo
pop
pop
lods
cli
jns
pushaw
dec
sub
push
or
add
adc
sbb
and
and
pop
jb
cld
sbb
incl
add
daa
xchg
popf
and
jae
addb
dec
jne
cmp
mov
loope
jmp
xlat
addl
jo
xor
or
push
sbb
lds
clc
hlt
addl
mov
adc
jl
insl
mov
mov
xlat
rcll
repnz
decl
pop
jmp
daa
test
pop
loope
push
push
xchg
xchg
mov
or
and
cld
xor
mov
sbb
out
xchg
lods
les
pop
sbb
call
add
mov
cld
xchg
lods
lock
cs
cmp
std
and
xchg
inc
int
mov
outsl
mov
push
or
fdivl
cmp
mov
inc
cmp
mov
jns
jmp
mov
in
es
pop
xchg
sub
push
push
icebp
push
fwait
push
fidivl
cli
xchg
popf
rorl
loop
sub
jne
fcomps
ss
pop
inc
jns
and
fs
les
and
ret
dec
rorl
sahf
push
ljmp
inc
push
cmpsb
je
mov
push
dec
aas
jb
xlat
jae
xchg
pop
test
sub
push
and
push
stos
das
or
inc
mov
fsubl
dec
xor
sbb
rcll
sbb
mov
iret
xor
cs
rorl
pop
mov
mov
mov
push
std
test
clc
mov
xchg
mov
mov
aaa
sahf
lahf
add
dec
pop
pop
mov
adc
enter
add
or
pop
fwait
push
orl
xor
xor
sarl
or
fistpl
movsl
test
shlb
pusha
pusha
cmpsl
mov
xchg
add
and
inc
roll
mov
mov
cltd
fnstsw
sbb
mov
push
mov
fbstp
popf
jnp
adc
imul
push
lock
std
cli
push
add
and
and
mov
in
sbb
cmc
and
arpl
outsb
test
pop
push
movsl
jp
push
dec
popa
stos
mov
push
mov
push
into
mov
cmpsb
mov
cmpsb
mov
dec
and
push
loop
imul
movsl
testb
ss
xchg
shll
outsb
rol
jecxz
push
lret
mov
cmp
rcrb
call
pop
sbb
or
cmp
outsl
lret
out
jmp
sbb
adc
sahf
inc
pop
imul
test
outsl
jecxz
and
pop
adcb
and
enter
aas
sub
fisttpll
cltd
mov
pop
mov
test
cli
add
mov
lods
xlat
mov
mov
rcll
decb
pop
outsl
adc
mov
jp
fstpt
jno
pop
push
aam
or
fiaddl
addr16
sbb
pop
mov
stos
hlt
push
pop
clc
mov
loope
adc
push
mov
xlat
inc
pop
int3
dec
inc
ja
mov
dec
mov
xchg
mov
shll
cmpsl
out
in
sub
aas
scas
jns
mov
out
xor
popa
adc
add
cmp
lret
test
or
mov
adc
or
add
loop
iret
jecxz,pt
movsb
rorb
cmc
jg
les
pusha
dec
fs
cmp
mov
sti
add
ret
loope
or
hlt
popf
repz
mov
loop
scas
and
mov
js
js
mov
bound
dec
jl
add
cmpsb
sbb
pop
push
xor
lods
pop
sbb
xor
dec
mov
jne
lea
into
repz
mov
je
adc
xlat
push
in
sub
mov
xor
adc
mov
cmp
shrl
inc
dec
mov
mov
aaa
aas
jg
cmpsb
scas
mov
pop
dec
add
dec
aad
inc
inc
leave
mov
xchg
outsb
push
das
movb
xchg
fisubl
pop
mov
xchg
sbb
jnp
popa
inc
pusha
dec
mov
adc
icebp
lret
xchg
test
addr16
rclb
out
dec
mov
sub
imul
xor
adc
stos
popf
mov
addl
fstp
pop
fsubs
mov
lock
mov
cli
ljmp
xlat
mov
loope
push
push
mov
fsts
pop
mov
dec
cmp
sub
push
cmp
xchg
mov
add
push
es
clc
cli
ds
sbb
push
ss
sub
sub
push
mov
loope
stos
cmpsl
jno
arpl
rcrb
add
in
je
mov
mov
imul
jns
and
daa
aam
dec
repz
cmp
adc
dec
push
dec
fnsave
cmp
xor
pushf
mov
xchg
mov
jp
jg
test
pop
repnz
aas
rolb
dec
mulps
fdivl
ss
jnp
shrl
mov
insl
scas
push
mov
inc
mov
push
cmp
mov
sarb
push
push
fnstcw
cmp
xchg
aaa
mov
cld
sbb
xchg
cmp
dec
and
fsubp
add
sbb
sahf
jbe
adc
xchg
repnz
inc
xchg
jbe
mov
pop
xchg
sbb
stc
inc
sbb
mov
rcrb
es
pop
in
and
lahf
aaa
sbb
inc
jbe
mov
inc
dec
rol
mov
sub
flds
fabs
ds
sub
add
jbe
subl
mov
add
cmpl
push
xor
fwait
jmp
jnp
lock
inc
push
fs
mov
cmp
pop
sbb
insb
mov
xlat
arpl
or
nop
cld
xor
add
shll
leave
andb
sti
xor
test
mov
push
xor
inc
or
fwait
sub
mov
rcl
mov
mov
cmp
jne
dec
sub
sahf
cmpsb
pop
and
lcall
or
enter
and
sbb
test
inc
rorl
outsl
cmp
stos
and
ja
dec
push
roll
xchg
imul
rolb
xchg
fwait
popa
and
clc
xchg
mov
fwait
andb
sub
pusha
scas
and
addl
inc
fidivrs
bnd
ja
out
jns
andl
cmp
cmp
sbb
mov
xchg
fbstp
lea
sub
xchg
push
pop
test
xlat
cli
and
lock
dec
in
and
mov
pop
adc
sub
insb
repnz
mov
inc
mov
in
add
push
mov
loopne
imul
mov
idiv
cwtl
mov
jg
xchg
pop
and
dec
fidivrs
inc
sub
inc
lods
aaa
int
dec
enter
adc
push
pop
jo
push
jle
pop
popf
and
mov
lcall
fwait
mov
js
aam
xchg
xor
clc
sarl
mov
insl
jmp
clc
lods
cwtl
mov
ret
es
fwait
mov
enter
xchg
aam
inc
int3
int3
bound
add
ret
cmpsb
xchg
in
loop
imul
xor
push
sbb
clc
filds
mov
jecxz
inc
sbb
adc
leave
and
mov
test
leave
cmpb
mov
shll
nop
add
lahf
leave
sahf
aam
lahf
mov
pop
mov
mov
mov
mov
dec
inc
mov
insb
fldl
lahf
sbb
pop
cwtl
pop
jecxz
xor
mov
xchg
fcmovnu
das
mov
mov
mov
in
jnp
sbb
jl
jae
insb
mov
sbb
add
sub
inc
dec
test
push
in
push
and
cmc
or
inc
movsl
xchg
popf
jbe
push
mov
es
adc
and
loope
mov
push
rorb
xchg
adc
xchg
es
loope
mov
mov
adc
jne
xchg
xchg
or
mov
mov
dec
adc
or
pop
mov
sub
repnz
shl
ret
jns
adc
or
fimuls
sbb
pop
push
add
xor
stos
mov
scas
mov
sahf
jg
fs
jnp
std
outsb
mov
push
movsb
mov
jge
sub
cmp
imul
lret
dec
pushf
rcll
fcomp
add
push
cmpsl
call
fidivs
mov
es
mov
push
cmp
sbb
mov
std
push
and
fwait
lods
inc
push
out
les
cmp
in
jecxz
pop
lahf
xorb
sbbb
push
dec
insb
mov
inc
sub
repnz
rorl
aad
in
cmp
js
fnstcw
or
movsl
movsb
adc
lea
dec
je
mov
sbb
gs
dec
jmp
fisubrs
push
xor
insb
out
xor
push
mov
sbb
ftst
xlat
lods
pop
ljmp
cmp
xor
pusha
mov
sahf
add
jle
clc
lret
shll
xor
pop
fcmovnb
mov
negb
pop
mov
icebp
repnz
mov
sub
sarl
push
jl
lock
in
push
pop
lods
lret
sbb
mov
mov
arpl
dec
call
sbb
push
arpl
mov
and
dec
push
or
mov
fcompl
push
mov
inc
lcall
fs
inc
inc
pop
sub
adcl
jae
mov
arpl
lahf
adc
dec
xchg
int3
adc
test
imul
out
sbb
test
imul
data16
stos
push
adc
cli
push
jbe
repz
pop
inc
fadds
mov
pop
dec
mov
pop
add
imul
sub
test
and
jle
mov
inc
adc
dec
repnz
mov
pop
mov
or
ss
sbb
fld
push
cmp
es
jmp
push
outsb
dec
mov
jno
fistl
sbb
inc
movsb
movsl
and
into
mov
sbb
jge
mov
sbb
xlat
push
or
sub
sbb
mov
mov
call
in
sbb
sbb
mov
jecxz
cltd
fisttpll
scas
push
sub
ss
lcall
jbe
cmp
jl
pop
and
stos
xchg
insb
adc
sti
dec
fstpt
fs
pop
repz
pop
xchg
and
inc
adc
rorb
pop
sub
mull
cwtl
das
inc
push
pop
stos
dec
scas
inc
mov
jne
or
cmp
inc
neg
filds
and
mov
or
fistpl
insl
sbb
mov
jne
movsb
jp
mov
movsb
negb
popf
std
nop
fidivrl
pop
inc
nop
rclb
movsl
dec
loope
cmp
arpl
mov
orb
rcr
dec
push
loopne
loopne,pn
xlat
sub
shrb
rorl
xchg
or
dec
add
ret
ret
jo
or
ljmp
stos
fldenv
lret
dec
lea
call
mov
cwtl
xchg
ja
and
xor
push
aas
rclb
xor
adc
sub
jne
jo
mov
int
push
popf
andb
jmp
jp
mov
pop
mov
divps
in
test
shll
and
or
xchg
or
dec
sbb
inc
faddl
xchg
push
push
insb
push
cmpsl
pop
out
pop
sbb
cmp
insl
and
mov
lds
or
add
inc
std
sub
add
sub
aas
lods
lahf
std
orl
and
call
insl
ret
notl
and
andl
lahf
inc
mov
pop
inc
adc
mov
sahf
push
jbe
out
fmuls
mov
imul
push
mov
pop
bound
adc
repz
incl
rcrb
je
test
cmc
test
push
rorl
gs
mov
dec
repnz
sub
adc
ja
mov
xor
test
xlat
insl
dec
shl
jle
test
iret
dec
xlat
push
loope
in
push
cmp
jb
repnz
push
jb
mov
addb
jge
jge
jns
dec
mov
cmp
xlat
stc
adc
std
cmp
and
jg
xchg
popa
push
sbb
jae
dec
xor
js
dec
mov
xor
aas
rcll
xchg
gs
adc
ljmp
or
leave
xorl
fs
std
jecxz
clc
inc
add
out
lret
pop
jae
inc
xchg
mov
jl
mov
call
mov
repnz
xchg
jnp
popaw
cwtl
dec
mov
cmp
loop
fsubrs
inc
fcomi
and
inc
lahf
or
mov
loopne
xchg
popf
stos
in
ljmp
push
pop
mov
jg
lea
lahf
fwait
add
popa
outsb
xlat
aaa
leave
xor
scas
sbb
lock
mov
push
adc
pop
xchg
jp
sub
cwtl
repnz
insb
sub
std
loop
or
jbe
sbb
lahf
popa
movsb
xor
es
xorb
mov
mov
cltd
cmp
std
icebp
addl
mov
and
ljmp
and
inc
jns
test
es
or
add
lret
popf
and
dec
sti
sbb
or
push
pop
inc
mov
inc
flds
lcall
xchg
test
icebp
push
jp
movsb
sbb
mov
sbb
mov
repnz
mov
cs
addb
mov
cmp
cs
xchg
fistl
jo
mov
insb
sbb
fsubrs
cmp
rorb
out
mov
and
xor
lds
nop
pop
fs
pop
mov
jp
cmpsl
mov
ja
push
int3
daa
dec
mov
repnz
push
jecxz
ficoml
mov
pop
into
push
sbb
mov
xchg
je
out
xor
cmpsl
fcmovb
aam
fcompl
pusha
out
cmc
ljmp
adc
cmc
cmp
cmp
mov
jmp
xor
mov
jge
and
sti
in
inc
push
dec
add
mov
cmp
pop
dec
cmpsl
cmp
stos
subb
dec
adc
pop
or
fstpt
std
inc
push
push
js
loope
arpl
xchg
cmp
rorl
inc
jecxz
pop
mov
scas
loope
xor
dec
jecxz
xor
sbb
sahf
or
mov
adc
xchg
jae
and
cli
incl
in
jecxz
sarl
daa
add
in
lea
xor
mov
jae
add
mov
cmpsl
mov
xlat
add
adcb
inc
inc
sub
add
outsb
nop
sub
rorl
add
cwtl
jmp
xchg
cmpsb
ret
loope
push
xchg
enter
pusha
test
push
fucomip
adc
mov
je
jle
push
lock
icebp
mov
jmp
xchg
and
das
jle
daa
sti
pop
divl
mov
cmp
femms
gs
jmp
inc
icebp
iret
mov
push
out
fsubrp
pop
dec
sbbb
mov
icebp
lea
jb
fidivrl
insl
xchg
xchg
filds
das
test
add
data16
sub
lcall
test
pusha
and
arpl
in
imul
fidivrs
in
push
xchg
and
or
dec
add
jns
inc
push
aas
stos
das
jg
mov
std
mov
adc
nop
xchg
cmc
lcall
mov
mov
movsl
adc
fwait
xchg
mov
int
mov
sub
enter
add
mov
sarl
mov
cmpsb
push
pop
sub
adc
pop
mov
push
inc
ss
test
and
sbb
jbe
loope
add
jno,pn
mov
jg
pop
mov
sub
fisubl
xchg
cmc
lcall
repz
push
cmp
aam
js
cmp
out
inc
or
or
mov
imul
push
popa
jnp
jns
out
add
je
int
pop
and
sahf
cmpsb
pop
pop
ret
into
mov
das
int
inc
mov
sbb
and
xor
mov
jne
or
push
or
in
std
mov
scas
adcl
movswl
pop
notb
sub
insb
adc
aas
sub
inc
pop
xlat
xchg
incl
sahf
das
stc
adc
jp
mov
sbb
jle
popa
xchg
imul
or
mov
mov
lock
in
jg
jo
xor
ret
dec
jo
imul
and
das
jecxz
cli
imul
popl
adc
cmc
add
repz
shll
mul
cmc
xchg
dec
in
ljmp
mov
cmc
loopne
popa
ja
lret
es
out
ret
lods
and
cmp
aaa
sbb
idivl
jge
in
lcall
cmp
add
fldl
fisubrl
mov
xor
cs
push
sub
add
aaa
or
lret
dec
rorb
les
insb
lods
negl
lret
clc
sub
out
pop
insl
bound
push
je
sahf
jmp
jbe
out
mov
sbbb
pusha
mov
pop
shlb
cmpsb
add
pop
push
cmp
pop
mov
fidivl
dec
stos
adc
out
ud0
aam
push
mov
mov
or
mov
jg
ret
jp
lea
xchg
data16
push
pop
cmp
out
jnp
add
mov
mov
adc
call
ret
inc
repz
rol
insl
movsb
int3
mov
mov
frstor
xor
int
pop
hlt
jmp
xchg
addr16
adc
cltd
dec
mov
jbe
stos
ret
cli
test
orl
aam
mov
in
add
mov
jae
daa
mov
jbe
mov
jge
in
cmp
shlb
cmc
jge
push
and
loop
cltd
sub
int3
ret
xchg
ror
aam
mov
cmp
sub
rep
dec
cmpsl
jmp
jg
or
pop
out
arpl
test
aam
xor
mov
and
daa
ss
setns
lcall
pop
mov
inc
insb
xlat
lods
mov
test
hlt
jl
int
out
dec
mov
push
loope
lret
xor
insb
loop
data16
or
jp
fsubrp
mov
sbb
lahf
inc
jmp
xorb
stos
ja
push
and
push
push
test
jmp
aam
rorb
call
fbld
or
cmpl
or
mov
shl
mov
enter
arpl
fdivrs
mov
xchg
and
inc
pop
mov
and
mov
or
push
mov
jae
dec
inc
sub
mov
adc
xor
push
stos
repz
mov
xchg
add
inc
mov
mov
into
gs
cmp
mov
insl
imul
pop
std
loopne
adc
jb
cmpsl
addr16
push
adc
pop
loop
cmpsl
push
jno
cmpsl
rorl
out
in
scas
adc
sti
imul
aad
andb
test
call
int3
test
shll
add
imulb
cmp
out
inc
xchg
cltd
add
ja
sub
lahf
in
jge
mov
add
std
pop
fdivrl
ljmp
jo
push
and
jmp
cli
enter
mov
movl
mov
lods
sahf
adc
or
divl
sbb
fstl
or
stos
fbld
push
fidivs
push
cld
or
inc
pop
out
in
lods
and
pop
lahf
or
mov
xchg
mov
inc
int3
call
mov
sbb
stc
lods
dec
jno
jns
fbstp
add
std
push
in
mov
adc
outsl
add
xor
lods
pop
adc
mov
xchg
adc
add
and
test
divb
pop
push
sbb
mov
idivl
in
and
sub
inc
xor
jge
bound
cmp
inc
sbb
dec
xchg
sub
pop
gs
enter
dec
mov
sub
jo
push
or
out
aaa
in
cmc
popf
or
cmpsb
mov
loop
push
hlt
out
orl
out
and
pop
lods
jmp
aad
mov
jl
out
push
push
notl
fdivr
cmp
cmpsb
mov
mov
mov
sub
insb
lret
or
lods
jle
daa
cltd
popa
gs
mov
stos
lea
mov
negl
fsubl
loop
popf
dec
jbe
add
lret
mov
dec
xchg
repnz
int3
xchg
adc
fmull
in
adc
dec
movsb
int3
pusha
cmp
inc
sti
out
sbb
add
jnp
repnz
mov
cmp
scas
fsubs
or
mov
xor
loopne
dec
loope
push
xlat
push
cmc
xor
incl
adc
out
rolb
mov
xchg
inc
inc
roll
dec
inc
cmpsb
clc
std
mov
push
fs
mov
not
or
shlb
imul
push
divl
lret
rclb
push
adcl
dec
std
cmp
add
jae
shl
fsubr
push
jge
repz
pop
das
pmulhuw
cltd
dec
push
das
dec
movsl
sbb
push
pop
outsl
lea
jl
xchg
xor
addr16
shlb
addl
mov
xor
or
add
inc
clc
push
push
ja
ss
into
ret
push
outsl
or
inc
mov
cwtl
cmp
push
xor
adc
mov
lods
pop
mov
test
cmp
mov
xchg
insb
mov
addb
inc
dec
dec
icebp
pop
js
xchg
js
pop
sub
xor
and
ret
xchg
insl
push
in
ret
rcrb
fidivrl
sub
shrb
adc
inc
int
xchg
insb
hlt
jae
decb
cli
adcb
push
adc
addr16
adc
js
stc
lahf
daa
cmp
call
sub
push
or
shll
lds
add
aam
std
out
lret
push
xlat
xor
mov
xor
xchg
adc
shlb
hlt
outsl
dec
xchg
lock
mov
adc
fstl
push
scas
or
inc
pop
mul
mov
cli
cmp
imul
xchg
jb
jmp
xchg
mov
sti
dec
jbe
push
insl
mov
outsl
mov
xchg
xchg
pop
sahf
rclb
mov
shlb
jp
testb
sbb
pop
lea
adc
xchg
dec
and
lods
mov
mov
mov
or
test
dec
cmp
bound
mov
daa
dec
push
sub
fs
cli
loopne
push
stos
mov
cmp
out
xchg
push
dec
cli
inc
or
push
shll
leave
mov
lcall
mov
insl
mov
sti
and
adc
jns
jmp
mov
in
mov
adc
fdivl
lret
jg
jno
in
loopne
mov
sbb
dec
jp
test
test
dec
jo
pop
loop
icebp
and
in
dec
xor
movsb
sbb
jge
out
xor
sbb
inc
jle
add
adc
dec
or
sbb
sbb
mov
xor
xchg
fmuls
sbb
jns
scas
mov
mov
decl
dec
in
jl
jb
and
data16
jg
lds
cmc
inc
and
enter
mov
or
xchg
inc
push
loope
insb
xor
ss
jle
fwait
xor
notb
jl
cltd
jb
insb
add
mov
or
pop
je
std
iret
clc
aas
lcall
lret
add
test
push
sti
stos
pop
push
imul
push
dec
imul
mov
xchg
icebp
or
adc
popf
lods
cmp
daa
jnp
and
in
icebp
jae
mov
add
mov
js
sbb
add
jno
xor
lock
imulb
repz
sbb
dec
mov
add
push
mov
cmp
dec
cmpsl
pop
jmp
mov
in
divl
sbbb
push
in
add
push
shlb
pusha
leave
pushf
and
ja
les
adc
ror
test
loopne
pushf
int3
mov
and
pop
cwtl
mov
mov
mov
xchg
inc
cmpsb
pop
inc
lea
xor
jo
mov
outsb
jle
sbb
jae
cmp
fwait
xchg
ja
pop
jecxz
adc
hlt
sbb
out
and
sub
jge
mov
add
sbb
sbb
movsb
adc
mov
ss
mov
mov
mov
aad
arpl
push
mov
dec
scas
cs
das
and
pusha
repz
sbb
xor
adc
inc
xor
cld
hlt
mov
es
jle
fdivrl
pushf
pop
loop
inc
pop
aad
in
pop
cli
sub
es
and
ss
int3
xor
into
mov
icebp
ljmp
push
repnz
add
in
mov
fstl
dec
xor
cwtl
push
and
jp
sub
in
stos
mov
mov
sti
pop
loopne
in
daa
ret
icebp
push
mov
inc
add
popf
mov
jg
movsb
lret
cmpsl
push
lret
push
fisubrs
fcomps
cmpsb
shl
fcoml
lcall
cwtl
push
sbb
sub
lahf
cs
sub
pop
inc
push
jge
inc
test
push
popf
pop
inc
leave
enter
fld
movsl
repnz
cmc
out
xor
pop
pop
pusha
dec
negb
mov
daa
xchg
jp
sbb
pop
xor
push
dec
push
adc
push
negl
adc
ret
repnz
cmp
test
xor
jl
js
cmpsb
scas
scas
clc
lods
adc
adc
shl
hlt
addr16
test
stc
test
fwait
pop
xchg
adc
xchg
scas
repnz
shrb
cmp
imul
sbb
flds
mov
icebp
stos
jecxz
fs
xchg
and
dec
je
std
or
jg
inc
mov
add
fcomps
mov
out
add
repnz
pop
dec
push
push
ds
push
mov
adc
fists
push
push
subl
fcompl
add
mov
push
jns
in
or
add
jns
inc
inc
imul
xor
push
test
xchg
or
daa
mov
mov
xchg
and
test
sub
jae
pop
pop
rcll
mov
movsl
fildl
jl
inc
clc
iret
andl
data16
stc
pop
dec
loopne
add
test
sbb
xorl
out
pop
xchg
pusha
loop
pop
fbstp
sti
cs
aas
ja
mov
add
movsl
dec
cmp
lock
fiaddl
loop
stos
inc
lsl
dec
fsubrs
ss
add
decl
and
xchg
xor
lret
loop
mov
jnp
pop
and
inc
addb
pop
add
dec
pop
jl
adcb
jp
jbe
jb
pmaxsw
aad
xchg
push
inc
fucomi
mov
repz
fdivrl
fsubr
lea
push
jb
mov
or
int
mov
mov
aas
out
jo
movsl
jbe
loope
jp
inc
push
xchg
decl
push
sub
jg
mov
inc
jecxz
outsl
push
or
lds
adc
loopne
pop
rcrl
inc
shlb
lret
jo,pt
lea
and
sahf
fstps
push
rcl
pop
stos
push
fidivs
sbb
dec
dec
popa
cmc
xor
and
fistpl
outsb
aam
nop
adc
test
ljmp
mov
cmpsl
pushl
popf
sbbl
test
je
imul
xchg
test
push
ja
xor
xor
mov
aam
push
adc
pop
std
les
lret
aam
fwait
mov
loop
mov
sub
mov
insl
push
adc
jg
pop
scas
enter
mov
in
fidivs
imul
loopne
push
mov
lret
mov
mov
push
push
push
jbe
fwait
or
mov
test
aaa
in
mov
gs
adc
movsl
movsl
mov
notb
data16
addr16
dec
inc
out
inc
xor
mov
xlat
outsb
sahf
xlat
dec
add
lods
sbb
aaa
rorl
xchg
adc
cmp
mov
cmp
jmp
inc
enter
lret
xor
inc
sub
loop
xchg
fs
inc
shll
loop
ljmp
push
mov
lea
mov
mov
cmpsl
popa
in
cli
pop
bound
and
xchg
and
out
hlt
dec
ror
pop
add
sahf
pop
imul
sbb
dec
xor
xor
mov
inc
loope
sbb
ret
sbb
je
les
jbe
mov
pop
pop
sub
sahf
and
cld
idiv
fsub
std
lea
mov
xchg
ds
aam
pop
mov
out
jb
push
out
sbb
jmp
pop
sbb
jbe
popa
cmp
pop
test
dec
mov
pop
ja
sub
stc
jnp
sbb
insl
dec
test
repnz
jp
mov
mov
inc
imul
xor
cmpsl
adc
mov
aaa
popf
pushl
jae
pushf
xchg
in
repz
mov
push
add
jne
fbld
inc
aad
fsubr
clc
addr16
popa
das
xchg
movsb
icebp
int3
inc
lea
in
scas
push
push
lods
jmp
or
inc
mov
outsl
sub
xor
adc
mov
jbe
sub
faddl
testb
or
outsl
jmp
gs
cmpsb
xchg
shr
jb
jp
jno
sti
daa
movsl
add
jmp
jnp
add
shl
push
push
dec
and
popf
xchg
aaa
adc
filds
dec
pop
pop
mov
out
test
pop
pop
mov
ds
gs
movsl
or
jns
jg
jmp
or
les
std
adc
dec
mov
jge
xor
jg
mov
mov
and
push
push
mov
ljmp
stc
movsb
push
loopne
call
pop
add
push
xchg
push
cmpsb
lds
pop
rclb
cltd
cs
push
movsl
das
arpl
lret
dec
sub
dec
mov
mov
clc
flds
dec
js
ljmp
inc
inc
popf
mov
sahf
jecxz
add
inc
inc
adc
mov
clc
sub
push
mov
xor
movsb
sub
and
and
je
jp
lods
push
add
jno
les
jge
sti
push
shrl
mov
in
xor
pop
push
or
mov
pusha
mov
inc
xor
int
lea
loopne
js
scas
mov
test
dec
cltd
out
pop
icebp
mov
adc
sub
in
mov
sbb
arpl
mov
aad
adc
pusha
cmpsb
mov
or
mov
dec
popf
inc
adc
stc
cmpsl
rcrb
mov
inc
mov
ror
lock
push
aad
aam
sub
sahf
add
jne
ret
jecxz
xchg
and
lock
xlat
loopne
int3
scas
or
shr
add
pop
xlat
xchg
sbb
movsb
and
cmp
push
aas
xchg
push
or
xor
lds
inc
mov
cs
jae
or
xor
aaa
adc
dec
je
enter
das
repz
in
adc
cmp
outsl
shlb
ds
rclb
cli
loope
aas
lods
stc
pop
cmp
pushl
push
mov
sbb
and
and
in
mov
cli
nop
lret
ficomps
int3
mov
fsubrl
push
pop
sbb
adc
cwtl
popa
cs
xchg
scas
into
dec
flds
xor
fistl
dec
loop
test
insl
sbb
dec
test
adc
aaa
loop
xchg
push
cs
mov
movsl
repz
sbb
daa
cmpsb
mov
sbb
mov
inc
adc
aad
pop
xchg
dec
fsubrl
pushf
ds
xor
adc
mov
incb
popf
push
fistpl
sbb
out
iret
jno
sbb
mov
negb
outsb
bound
adcl
pop
decl
in
jg
xor
popa
js
addr16
push
mov
outsl
sub
mov
jmp
pushf
mov
gs
repnz
rcr
xchg
cld
jbe
loop
cmp
xor
scas
addr16
ljmp
mov
in
out
mov
adc
sub
gs
mov
ss
add
sbb
idiv
push
stos
filds
int
jbe
add
mov
aad
aam
or
pop
dec
mov
adc
jnp
mov
sbb
mov
add
fdivs
adc
pop
into
fcoms
or
add
mov
sub
das
pop
mov
inc
icebp
rcll
enter
sbb
inc
sbb
xchg
mov
lods
sub
cmp
aad
pushf
inc
pop
test
mov
jp
iret
adc
call
outsl
mov
ds
xchg
mov
fdivr
sbb
push
sbb
inc
das
jno
fldl2t
mov
subb
test
sbb
lea
xor
fcoml
lods
ss
cmp
insl
push
loope
shrl
inc
adcl
sbb
cld
out
xlat
pushf
and
rolb
cmp
jno
inc
and
insb
xchg
push
mov
xchg
cmp
adcl
lcall
bound
dec
dec
out
cmp
in
subb
jge
sub
add
test
pop
lahf
inc
mov
pusha
and
sbb
sub
xor
fisttpll
jne
sub
jge
sub
scas
incb
jo
mov
popa
sti
mov
arpl
jp
cwtl
sub
int3
call
jp
cwtl
sub
int3
call
int
mov
in
or
jmp
pop
clc
or
sub
fistpl
lahf
loopne
xchg
hlt
push
and
and
inc
into
sub
add
outsl
mov
push
pop
jno
movsl
xlat
mov
sbb
in
mov
xrelease
aaa
cmp
xchg
fmuls
mov
or
es
cs
dec
cs
in
mov
shlb
sub
les
inc
adc
cmpsl
xorl
loopne
adcl
mov
sbb
and
and
jecxz
jge
push
mov
or
jno
rcll
pop
mov
lds
sub
jno
jmp
ds
xchg
adc
cmp
cmp
or
or
add
mov
inc
jle
ljmp
cmp
lods
or
xchg
xchg
pop
push
pushf
out
scas
mov
insb
xchg
push
jecxz
movsl
aas
pop
fimuls
lcall
popf
shl
loopne
add
leave
pop
gs
add
push
out
aaa
jge
test
mov
lea
xor
aad
lret
fists
xchg
es
and
sub
pop
pusha
xchg
mov
dec
repz
subl
enter
push
cmp
ror
push
sbb
addr16
push
ljmp
aas
jbe
pop
shl
jle
sub
in
cmpsl
addr16
loop
test
xor
andb
xchg
or
ror
sti
jno
push
mov
mov
mov
xchg
pusha
sub
push
mov
mov
mov
dec
shll
mov
icebp
pop
xchg
cmp
rcrl
jmp
push
imul
pusha
jmp
outsb
inc
xor
pop
ja
incl
jmp
inc
sbb
mov
bound
lods
jge
mov
push
inc
iret
dec
cld
inc
or
mov
jb
sahf
fisttpl
or
adc
sahf
cmc
insb
sub
repz
rol
popf
imul
and
movsl
icebp
jne
fldcw
fs
pop
int3
sti
hlt
xor
xchg
and
add
pop
add
lret
xor
test
test
sahf
ss
cmp
or
inc
lods
mov
mov
dec
jg
mov
mov
std
or
in
pushf
adc
flds
mov
in
push
dec
ret
inc
fcmovb
sahf
and
mov
sti
lods
iret
or
pop
fdiv
push
rolb
movsb
push
jo
insb
pop
sub
fdiv
pop
push
or
bound
adc
cmp
les
outsb
out
xchg
jo
cmpsl
or
pop
movsl
outsb
or
or
fwait
in
nop
pop
mov
jg
mov
cmc
push
push
sarb
sub
stos
sbbl
lods
lcall
add
orb
fistps
aad
cmp
jne
popf
push
call
gs
push
ds
jno
mov
xor
daa
testb
jg
repnz
pusha
cmp
pop
jle
xlat
or
sub
push
cmp
add
and
dec
dec
ret
jl
add
dec
dec
sub
push
pop
gs
les
mov
pop
inc
pusha
or
and
sbb
je
and
jno
lock
sbb
js
inc
mov
loopne
pop
outsl
push
jmp
sbb
outsl
stos
pop
lret
cmp
lock
jmp
xchg
dec
dec
fcomip
xor
fidivrs
xchg
and
shl
int
aam
in
out
cmp
pop
adc
unpckhps
or
push
xor
pop
mov
dec
fidivrs
xor
jl
dec
cmp
cmpsb
or
push
dec
jl
in
gs
pop
aam
je
push
in
xor
or
mov
jae
xor
and
sub
cwtl
stos
pop
gs
pop
fidivs
add
inc
add
sub
xchg
pop
ds
push
mov
stos
jae
xlat
daa
dec
jnp
cmp
mov
data16
lret
push
mov
lea
push
pop
sbb
xlat
pop
js
inc
cmpsl
enter
imul
jmp
enter
or
dec
jns
insl
inc
lods
inc
pop
lods
sbb
mov
lcall
pop
sub
and
iret
aam
mov
adc
xchg
jns
mov
inc
xchg
pop
push
mov
je
inc
dec
sti
xchg
jmp
lea
sub
ret
push
dec
leave
lahf
decl
inc
pop
push
gs
stos
test
or
adc
sar
jb
filds
cmc
dec
and
rclb
xor
aas
push
sahf
jb
repnz
sbb
arpl
sub
mov
mov
cmp
fdivr
into
hlt
sbb
shlb
lods
adc
xlat
xchg
ret
push
jno
cmp
sub
pop
imulb
mov
xchg
lock
cwtl
push
mov
inc
stc
xchg
lcall
add
mov
mov
jb
jge
add
dec
loopne
ljmp
or
or
fstp
jp
testb
adc
pop
add
xchg
dec
ja
dec
mov
cmpsl
mov
pop
test
pop
mov
xor
or
jl
idivl
lahf
ficomps
mov
add
xchg
and
sbb
xchg
inc
push
sub
mov
xor
out
movsb
pop
lcall
js
movsb
dec
in
add
adc
xor
lret
sub
sub
inc
jae
in
sub
inc
jnp
fisttpl
cld
sub
inc
sbb
lcall
loopne
pop
das
inc
lea
cmpsb
jo
js
mov
jecxz
mov
add
xchg
repnz
adc
jg
cmc
lock
aam
sbb
hlt
shl
stos
push
or
in
lds
fs
xor
cmpsl
jae
mov
hlt
mov
push
popf
sti
pop
dec
repnz
call
pop
sahf
test
lcall
mov
ret
movsb
pop
std
mov
dec
test
leave
insb
dec
push
cltd
fisubrs
ss
pop
add
adc
sub
lret
mov
jg
das
and
sub
pop
cltd
jl
in
clc
xchg
jmp
adc
inc
push
ss
pop
std
arpl
jecxz
ret
outsb
stos
push
fistl
test
insb
mov
mov
notb
cmpsl
jecxz
jae
pop
pusha
and
lods
pop
shll
arpl
mov
stos
insl
out
cmp
in
jle
dec
push
push
ret
push
push
mov
mov
mov
ljmp
dec
push
mov
mov
loop
loope
push
xchg
adc
dec
sub
inc
pop
mov
aaa
mov
shl
mov
cmp
mov
sbbl
mov
mov
mov
mov
xchg
xchg
movsb
scas
aam
nop
adc
xchg
xchg
dec
mov
cmpsl
call
inc
sbb
sar
dec
pop
xor
call
xor
sub
jae
jge
sub
mov
in
pusha
aad
xchg
cmp
cld
enter
nop
sbb
stc
mov
sahf
mov
stc
mov
xchg
je
cmp
out
mov
testb
xor
jmp
scas
pop
cmp
nop
loope
and
mov
pop
jno
pop
jmp
imul
xchg
std
adc
enter
cmc
js
pcmpgtw
movl
dec
mov
push
inc
mov
mov
daa
lret
add
test
mov
movsl
xchg
cmp
jecxz
pop
push
addl
or
out
mov
dec
cmp
into
int
mov
pusha
out
pop
jbe
push
gs
jb
test
xchg
mov
jae
shll
int
das
cmp
aaa
test
jle
call
xchg
and
cmc
in
jno
adcl
dec
mov
fildll
loop
repz
sub
and
sub
popl
jnp
xor
mul
cmp
push
jl
pop
push
test
mov
mov
cmp
ret
dec
cli
cmpsl
loop
out
out
cli
movsl
test
shr
gs
fs
scas
xor
adc
cmp
pushf
movsl
clc
jb
sub
ficomps
insb
lods
push
mov
lods
test
push
sub
adc
mov
lods
hlt
mov
lahf
dec
notb
adc
xchg
imul
jns
hlt
shlb
movsl
adc
clc
sahf
bound
daa
adc
xorl
or
xlat
nop
pop
mov
callw
lods
mov
sub
sbb
adc
inc
xchg
add
fsubs
enter
in
fwait
rcr
addr16
in
lock
test
stos
inc
std
fwait
shlb
xchg
push
call
push
xlat
pop
es
inc
cmpb
shll
stc
fldt
ss
sbb
bound
sbb
ljmp
adc
loop
out
repz
push
fcmovbe
lock
mov
xchg
mov
out
cmp
jb
inc
cmp
fidivs
icebp
dec
in
aas
stos
ficoms
fwait
repnz
enter
outsl
mov
mov
aad
dec
or
cmp
es
nop
insl
imul
notl
dec
pop
sarb
jo
fisttps
stc
sahf
inc
push
xor
int3
and
inc
loopne
pop
sbb
fwait
addr16
push
fs
sub
sti
stc
dec
shll
mov
leave
mov
pop
sti
shll
xor
das
repnz
pop
inc
xorl
fildl
and
sub
or
int3
ret
mov
push
ja
dec
inc
rcrb
xchg
add
mov
pop
inc
xlat
push
dec
xchg
pop
sub
xchg
inc
xchg
sub
ljmp
sub
dec
mov
jne
clc
mov
mov
sahf
lods
cmp
jns
jo
mov
push
push
or
aaa
jecxz
in
test
cltd
test
fldenv
mov
inc
jmp
call
mov
or
jae
lds
in
or
cmc
callw
sti
jle
leave
adc
dec
add
in
stos
sbb
dec
adc
mov
idivl
pop
mov
sub
lods
int
add
mov
rcl
fwait
in
jb
adc
fsts
shll
pop
insl
xchg
icebp
push
mov
repz
pop
cli
mov
sbb
pusha
es
fldt
xchg
pop
push
add
fnstcw
movsl
inc
xchg
jne
adc
adc
mov
sub
push
push
mov
dec
test
das
add
push
push
xor
lret
cmp
pop
les
int
fs
popa
lea
and
jmp
jge
push
fs
dec
jnp
fcmove
xor
mov
lods
dec
out
in
scas
ds
aaa
xor
sub
hlt
cmp
jno
sbb
dec
adc
outsl
gs
mov
hlt
or
fcoml
shlb
lret
gs
sbb
mov
cld
mov
push
jne
dec
jns
es
dec
lret
push
xor
loopne
loop
shl
lea
jle
imul
das
push
sbb
xlat
pop
mov
push
xchg
adc
cmp
pop
pop
int
or
xor
push
sub
std
or
pop
cmc
imul
ljmp
adc
fs
sub
push
loop
cmp
cmp
jns
mov
leave
jo
fimull
rorl
mov
subl
sbb
xchg
shrl
repnz
cmp
cmp
mov
mov
int
in
or
aam
popf
into
xor
movlps
scas
sbb
lea
pop
jmp
and
cs
mov
fstp
mov
test
stos
in
push
adc
js
aas
sub
dec
cld
mov
cltd
sbb
cmp
loopne
cltd
fists
loop
rolb
aad
push
adcb
push
xor
pop
iret
les
mov
mov
sbb
scas
sbb
ror
inc
stos
test
mov
push
xlat
xor
repz
lods
sbb
sarb
adc
inc
push
mov
pop
sahf
cld
rorb
out
ds
cwtl
test
test
lret
das
dec
insb
dec
je
aad
xor
pop
jge
adcb
mov
lds
inc
in
sbb
in
loopne
dec
push
cmpsb
inc
pop
ret
addr16
icebp
js
pop
ds
stos
mov
sub
push
fs
inc
xor
fcmove
stos
cmp
ret
fcompl
cltd
lret
mov
fsubr
or
mov
popf
daa
aaa
cmp
inc
or
push
sahf
add
and
into
addr16
call
sarl
daa
adc
fmull
lcall
mov
inc
mov
cmp
xchg
mov
xchg
js
mov
mov
sub
stos
cwtl
dec
outsl
lea
sbb
bound
outsl
push
pop
or
idivl
jl
mov
xchg
lock
jp
xchg
xchg
xchg
popa
lahf
rcll
imul
pop
in
outsb
lret
jp
jae
iret
pusha
pop
adc
loopne
xor
dec
lret
in
inc
pop
lock
imul
mov
in
sub
mov
xlat
add
dec
repnz
mov
mov
repz
xor
jbe
fxch
adc
scas
push
fs
roll
test
mov
in
xor
push
stos
insl
xor
jnp
xlat
leave
into
mov
inc
in
push
fisubl
inc
inc
rcrl
mov
jge
imul
xor
pop
movsb
xorl
lods
push
sub
push
fidivs
test
push
push
xor
inc
ret
mov
xor
xchg
xchg
mov
adc
fcoml
adc
pop
testl
push
in
cmp
hlt
push
pop
pop
repnz
stc
movsb
dec
mov
xchg
aam
lea
jb
or
icebp
lcall
mov
or
and
in
sbb
dec
int
dec
xchg
addb
aaa
adc
xchg
insb
aad
mov
in
push
adc
cli
in
push
mov
shrl
dec
es
int3
sbb
jno
cwtl
adc
dec
into
jecxz
push
push
mov
sub
stos
loope
mov
popa
jne
outsb
sti
stc
hlt
jno
xlat
bound
adc
lock
or
sti
das
mov
popa
test
xor
push
add
cmp
and
aaa
mov
cli
lcall
mov
movsb
popf
or
lock
in
xchg
popa
xchg
or
loopw
enter
les
fnstsw
xchg
cmp
and
xchg
xor
in
cmp
jno
cmc
xchg
push
and
es
ficoml
pushf
mov
scas
stc
inc
and
jae
lcall
sub
sub
jo
push
jle
inc
ljmp
mov
cmp
add
xchg
fstpl
xchg
test
aas
lods
mov
fcmovnbe
in
daa
sbb
jmp
or
dec
ljmp
pushl
inc
push
in
mov
mov
inc
mov
rcrb
or
mov
loop
stos
jmp
cmp
cmp
out
rcll
into
andps
cmp
dec
mov
pop
shrb
mov
sub
or
jne
rcrl
xchg
cld
shll
popa
repnz
leave
dec
cmp
sub
int3
cmp
inc
pop
int
inc
mov
add
fidivl
pop
ret
lret
adc
mov
adc
adc
cmp
insl
sub
sahf
mov
pushf
or
add
jnp
sbb
dec
jo
popa
xor
pusha
cmpsb
pushf
shll
xchg
lahf
inc
add
out
and
and
pop
add
dec
cmpsb
repz
inc
pop
scas
scas
fcmovu
jo
jecxz
lret
lock
icebp
out
mov
mov
mov
adc
or
push
rolb
cmc
pop
lcall
mov
leave
xchg
repnz
push
sahf
int
jle
dec
jecxz
aaa
pop
pushf
out
mov
mov
lret
jmp
loope
xor
out
sbb
out
mov
rorb
fcmovnbe
lods
cmp
shlb
pop
push
adc
xchg
testb
mov
lret
sbb
out
dec
xchg
push
stos
ja
stc
adc
add
adc
cmp
out
pusha
jnp
pusha
rclb
gs
jg
scas
lret
out
out
arpl
filds
pop
dec
or
xor
jmp
jne
and
daa
pop
imull
ret
push
and
movsl
mov
jae
push
xor
es
in
push
int3
inc
sarl
and
jl
mov
push
je
xchg
lret
sub
xchg
addl
mov
orl
lea
cmp
dec
scas
xchg
sub
sbb
loope
test
xchg
leave
rorl
pusha
in
or
scas
jb
addb
test
mov
adc
dec
aam
xor
movsb
add
mov
sub
pop
lods
dec
lret
xor
push
shlb
in
test
mov
push
jns
pop
mov
in
cmp
or
inc
ja
out
or
jle
cmp
lcall
fistpll
push
cs
cltd
subb
cltd
add
mov
xor
adc
add
xchg
lret
xchg
bound
out
xor
cld
nop
dec
sbb
mov
inc
mov
pop
mov
mov
out
insl
test
and
or
cmp
cmp
lods
gs
rolb
sbb
addr16
sbb
add
fmuls
xchg
cmp
sti
mov
pop
ljmp
lds
addl
jne
ss
clc
rep
or
sub
fisttpll
mov
xchg
pushf
add
sarb
fists
inc
js
popf
mov
ja
fisubs
dec
not
jb
push
inc
pop
jp
xor
pop
mov
mov
arpl
cmp
std
test
add
fimull
insb
push
stos
sub
test
mov
cmp
cmp
rcl
mov
cmpsl
in
xor
dec
stc
or
lret
shrl
sbb
sub
rcll
mov
nop
jns
aaa
dec
xchg
stos
push
jge
hlt
mov
gs
sahf
and
test
sbb
inc
add
rorb
mov
mov
je
jge
xchg
xor
sarl
push
jb
and
loope
xor
jecxz
sbb
or
loope
push
add
cmp
pop
sub
and
sub
fcoms
mov
and
jmp
or
push
stc
loop
sub
sub
inc
lock
sub
jo
jnp
lds
sti
and
push
out
jp
xchg
add
fwait
inc
jns
push
xor
xchg
enter
push
fildl
push
mov
imul
push
icebp
mov
pop
dec
adcb
jmp
sbb
mov
ss
mov
cmp
xchg
push
cmp
inc
jge
cwtl
pushf
icebp
cmp
shl
aad
arpl
cmp
mov
in
js
cmp
je
imul
in
pusha
rolb
and
xchg
xor
jbe
test
in
aaa
push
sub
mov
push
jb
cmp
lock
test
push
cmp
sub
jecxz
pop
fdivr
xchg
popf
scas
mov
xchg
xchg
xor
mov
lret
aaa
cld
pop
stc
dec
subb
fsubrp
xor
or
and
jg
mov
inc
das
xchg
dec
and
inc
outsb
xlat
ud1
mov
leave
and
dec
call
clc
mov
out
je
adc
shl
push
fs
loopne
outsl
xor
inc
sub
push
shr
mov
mov
pop
and
or
ja
test
add
xlat
dec
and
push
jecxz
orb
xor
aaa
push
sarl
dec
bound
xor
pop
ret
jnp
dec
push
cmp
dec
or
push
cltd
out
test
add
idivl
imul
testb
push
cs
and
dec
push
pop
push
cs
and
jae
and
sbb
sbb
and
inc
int
adc
mov
fcoml
aam
in
aad
lret
pop
or
daa
test
outsl
fisubs
inc
push
cwtl
mov
sub
ja
and
insl
das
push
lods
nop
cmp
adc
mov
cmp
jno
xchg
int3
pop
add
negb
std
push
jns
sbbb
push
cltd
add
cmp
xor
lret
sub
mov
mov
cld
loop
mov
cmp
ja
clc
bound
decb
fs
sbb
xor
add
popf
loope
pop
or
pop
test
jle
addl
rolb
push
pop
xchg
fstl
cs
aas
clc
mov
bound
fdiv
jge
cmp
cmp
jle
pop
xor
sbb
test
decl
sub
repz
test
test
cmp
or
lret
cs
sahf
sbb
scas
mov
loop
jne
mov
xchg
mov
dec
mov
jmp
push
xchg
mov
movl
sub
adc
stos
pop
mov
inc
dec
inc
mov
or
lret
enter
xchg
or
out
sub
ds
out
mov
push
insl
or
in
mov
or
jl
bswap
std
push
dec
add
add
cli
arpl
loopne
dec
cmp
dec
or
adc
pop
fwait
cmp
lret
jne
lea
mov
push
jmp
pop
adcb
mov
ret
fidivl
and
loope
fadds
fiaddl
xchg
js
lret
push
lea
mov
cltd
mov
push
out
call
xor
repz
pusha
or
cwtl
lods
jge
out
cld
js
mov
out
mov
shrl
test
jne,pt
aad
sbb
test
jecxz
adc
xor
cmpsl
push
outsl
in
cli
out
cs
mov
das
mov
fucom
mov
inc
xor
jnp
fstps
or
jo
xor
out
push
mov
das
fcoml
mov
adc
cmp
cld
dec
push
pop
in
jb
enter
or
sub
and
movsl
xchg
mov
orl
and
mov
ret
scas
and
out
lock
and
enter
jae
fstpl
sbb
loop
mov
fcmovb
xor
testb
jns
mov
insb
fs
movsl
movsb
out
jbe
sub
andb
pop
imulb
fldt
xchg
js
or
fimull
pop
dec
cmpsb
je
mov
xor
pop
xchg
push
add
add
adc
sahf
jg
xor
popf
cltd
jle
out
add
nop
mov
dec
test
and
lea
out
loop
xchg
sbb
lahf
int3
aas
adc
dec
or
aas
adc
dec
or
aas
adc
dec
or
aas
adc
dec
or
aas
adc
dec
or
aas
adc
dec
or
aas
adc
dec
or
aas
adc
dec
or
aas
adc
dec
or
sub
sub
out
shlw
mov
push
shll
mov
lods
cmp
sub
adc
xlat
cmp
push
lcall
je
jmp
in
bound
jno
out
rorb
xor
and
or
adc
or
ror
stos
mov
or
rcrl
and
jb
inc
arpl
loope
ret
mov
mov
dec
xor
mov
jge
push
pop
cmp
movsb
or
xlat
scas
pop
aad
lods
pop
dec
in
xchg
mov
and
xor
cmp
jo
pop
call
mull
xor
cmpsl
mov
ficoms
lds
push
inc
jle
jo
fidivrl
outsl
fsubrs
push
pop
mov
and
data16
scas
mov
cmpsb
lea
pusha
cmp
and
jo
mov
and
xor
outsl
ret
arpl
and
mov
inc
mov
mov
adc
inc
cmpsb
int3
sub
sub
jl
inc
loopne
sarb
dec
inc
mov
xor
mov
movsb
repnz
pop
xor
sub
ja
pushf
push
cmp
inc
ss
push
filds
fldcw
daa
push
dec
mov
pop
cmove
imul
push
jb
scas
sub
stos
jb
aad
push
andb
mov
rclb
mov
mov
sbb
sahf
ret
ffreep
jo
push
aam
repnz
xchg
adc
mov
int3
aam
stos
leave
cmp
inc
mov
es
sbb
in
imul
in
orb
mov
stc
pop
lcall
and
movsl
ja
pop
adc
pop
lret
mov
adc
or
xchg
fldl
and
adc
xchg
insl
sbb
mov
pop
xor
insl
push
add
push
inc
rolb
jo
out
adc
rcrb
xor
and
pushf
push
addb
sub
and
aaa
imul
lea
ja
stos
insb
and
cld
jmp
inc
into
test
fwait
lahf
sarl
filds
mov
clc
test
mov
mov
aad
mov
addr16
mov
lcall
mov
jo
adc
mov
lcall
rcl
jns
hlt
into
xchg
rol
and
stc
push
ficomps
sub
pop
pop
sub
pop
mov
sbb
lret
mov
les
or
mov
xor
mov
push
jp
outsl
mov
push
jbe
out
int3
clc
pop
aad
es
cmp
fstl
iret
mov
jge
sub
mov
fs
lods
and
cltd
movsb
sub
jns
enter
sbb
jns
inc
adc
fdivrl
pop
mov
lods
pop
mov
sub
sbb
mov
sbb
fdivrp
mov
insb
inc
jge
cmpsl
stos
adc
pushf
mov
dec
mov
lods
dec
test
or
sub
xlat
cli
and
jo
rcll
imul
iret
je
adc
pop
sbb
js
jle
mov
xor
es
pop
test
mov
sub
mov
and
lcall
and
mov
push
mov
imull
pop
mov
dec
add
pop
pop
jmp
dec
stos
dec
jae
gs
mov
adc
mov
cmp
jnp
cmp
pop
cli
js
xchg
cmp
int3
scas
dec
push
in
sbb
or
and
pusha
out
vpmaxsw
hlt
cli
mov
push
cmp
loope
cmpsb
pop
and
sub
fmulp
push
out
pusha
stos
loop
add
mov
mov
fldcw
das
loop
adc
ja
imul
inc
sbb
jns
jo
cmpsb
or
cld
sbb
popa
mov
pop
jo
hlt
push
cmp
pop
sub
loope
mov
mov
mov
inc
insb
mov
pop
add
pushf
out
mov
sbb
adc
xlat
gs
push
out
cmp
cs
movsb
daa
cli
in
test
mov
daa
leave
mov
daa
push
insb
in
add
mov
aam
jo
cld
jl
out
pushf
mov
gs
mov
mov
xor
aam
fldcw
mov
popa
push
cmp
rcl
mov
mov
dec
in
loop
aas
or
movsl
dec
test
mov
xchg
sbb
daa
add
sbb
sarl
or
adc
fadds
inc
icebp
sub
adc
xchg
aaa
pop
int3
fmulp
scas
push
pop
cmp
shl
jmp
repnz
ljmp
jg
jmp
arpl
mov
add
ret
and
movsl
lds
or
test
inc
rcrb
xchg
lods
mov
xor
add
adc
adc
cli
cmpsb
xchg
adc
ror
inc
cwtl
lret
add
fcmovu
lea
sbb
in
outsb
addb
mov
stos
jo
aas
cltd
out
pop
mov
fldlg2
scas
or
cld
addr16
leave
xor
pop
stos
shlb
aas
push
dec
inc
int3
int3
add
xchg
aad
ret
sub
rcl
and
push
data16
or
push
test
das
das
aaa
fstps
fildll
mov
push
js
adc
sbb
test
loope
lea
dec
mov
adc
mov
mov
pop
mov
out
adc
xchg
loope
or
mov
sub
mov
adc
inc
iret
fnstenv
es
nop
push
inc
mov
cmpsb
push
sahf
insl
das
cmp
xor
mov
pop
fiaddl
jecxz
dec
pusha
loope
cmp
pop
sbb
sbb
mov
mov
inc
push
jl
dec
aad
ss
push
loop
push
lods
cwtl
pop
sub
sbb
push
das
adc
mov
mov
ja
icebp
pop
std
pop
scas
xchg
lods
inc
push
sbb
pop
jne
cmp
xchg
push
jl
jecxz
in
int
push
jb
and
idiv
jle
lret
loope
repnz
lods
stos
mov
mov
pushf
or
mov
cmp
mov
jo
jae
sub
in
push
rcrl
lcall
inc
ds
push
cmc
stc
leave
insb
loopne
push
mov
orps
jno
sti
rcll
ljmp
neg
vcvttps2dq
rclb
fwait
mov
in
dec
mov
dec
data16
push
daa
and
das
jle
rcrb
jns
cmp
cmp
mov
sarb
adc
adc
lea
inc
or
movl
stos
sub
out
enter
push
and
inc
inc
inc
ret
and
sbb
aas
xabort
mov
xor
movsl
outsb
and
push
insl
mov
add
jo
cld
adc
pop
lea
movsl
mov
shlb
sub
pop
pop
fwait
bound
sub
sub
mov
mov
rclb
aad
aaa
sbb
in
lods
insb
cld
outsb
xor
fstpl
stc
lds
jp
mov
xchg
cmovns
ret
test
sub
jae
jmp
int3
add
adc
cmp
xor
sbb
inc
jae
jno
mov
gs
mov
mov
orl
mov
inc
jle
inc
mov
push
sbb
and
fsubl
into
xchg
cmp
dec
inc
cwtl
jno
sbb
add
inc
cwtl
pop
jnp
lds
sahf
cmpsb
aaa
dec
push
aad
lods
mov
dec
sub
jo
fwait
adcl
add
mov
adc
ljmp
roll
push
push
das
inc
fninit
or
xor
sbb
jbe
cmc
addr16
out
scas
call
cld
pop
push
ss
xchg
lods
push
mov
in
repz
or
test
mov
out
sbb
push
mov
ffreep
mov
jge
test
cltd
add
and
fstps
inc
gs
adc
rorb
out
call
gs
stc
lock
xor
cld
jae
bound
stc
bound
movq
loop
bound
pop
rcll
aad
xor
out
repz
xor
jb
jecxz
movsb
fcoml
mov
xchg
lock
out
jb
add
es
divb
pop
stos
loop
outsl
test
pusha
adc
push
stos
mov
fs
adc
dec
imul
std
add
popa
sbb
outsl
or
js
fnsave
inc
and
jp
out
inc
cwtl
or
popl
add
or
push
lds
es
lret
jns
pop
add
jns
jge
pop
hlt
sbb
pop
bound
movsb
pop
mov
inc
es
in
xchg
lods
adcl
dec
add
mov
rcrb
mov
pusha
in
mov
push
aas
mov
mov
sub
insb
hlt
cmp
xchg
scas
hlt
xchg
lcall
jb
xchg
popa
mov
sub
out
inc
mov
mov
mov
or
jne
sahf
inc
rorl
lahf
mov
inc
out
xchg
xchg
mov
or
sub
stos
in
pop
and
adc
dec
lds
mov
sbb
aaa
xorl
fnstsw
fistps
lret
mov
cmp
xchg
or
lds
dec
cltd
cmpsl
dec
lea
rcrb
sub
sahf
xchg
mov
loope
mov
paddsb
dec
dec
xor
fnstcw
sub
sub
cmc
fstpl
fisttps
xorl
imul
pusha
sub
cmp
inc
push
mov
push
pop
sub
cmp
sbb
pop
jl
repz
dec
adc
pop
pop
fs
inc
and
fucomp
lret
sarb
xor
pop
add
hlt
pop
insb
fstpt
xor
mov
push
dec
adc
fldl
jns
fwait
jne
enter
inc
pop
in
jge
xor
and
push
or
xchg
mov
mov
inc
roll
hlt
mov
adc
out
inc
dec
sub
xlat
push
add
repz
add
test
movsl
aas
adc
jg
data16
out
xchg
xor
jl
push
lret
push
inc
jge
mov
xchg
mov
outsb
popa
lret
movsl
sbbl
push
jno
push
testl
jge
adc
and
push
cmpsl
sbb
adc
add
mov
subb
adc
dec
cmp
adcl
mov
popa
dec
enter
jmp
imul
out
xchg
icebp
inc
imul
scas
jle
stc
pop
mov
ds
inc
add
mov
movsb
enter
scas
inc
cltd
cmp
sub
pop
test
call
lea
pop
jecxz
push
inc
es
into
mov
fsts
icebp
mov
jle
pushf
adc
inc
mov
inc
pop
shrb
leave
pop
loopne
mov
sbb
bound
sub
mov
sub
test
iret
cmpb
lods
cs
cltd
fwait
out
sahf
sub
ss
add
dec
mov
push
mov
pushf
mov
jmp
sbb
enter
add
jecxz
dec
fsubs
scas
pop
jl
sub
mov
jecxz
and
xorb
adc
cmp
jbe
sbbb
stos
pop
adc
pop
or
xchg
cmp
pop
cmp
ja
xchg
cmp
or
and
andl
push
sahf
hlt
out
push
sbb
stos
inc
std
ret
sbb
pop
push
jb
mov
jne
adc
add
mov
fcoms
hlt
call
aad
leave
pop
sbb
outsb
push
dec
insl
fwait
jo
daa
xor
sbb
in
rcl
in
sbb
loop
mov
lret
cltd
mov
sub
pop
and
adc
cli
dec
fnstsw
ja
ret
push
in
sbb
std
ret
cwtl
xchg
rorl
mov
call
sbb
js
push
mov
orl
shlb
push
jns
and
rcrb
lods
pop
dec
dec
outsb
adc
jle
lds
scas
and
mov
insb
hlt
cld
and
cld
xor
decb
mov
push
bound
sub
or
xchg
mov
cs
andb
xlat
clc
and
pop
in
mov
add
pop
rcrb
fs
or
dec
test
popf
inc
xor
dec
jecxz
mov
inc
bound
scas
xchg
pop
dec
fwait
xchg
jbe
jo
leave
mov
outsb
and
fwait
or
dec
cmp
jbe
dec
test
orb
out
loop
push
fwait
pop
data16
lds
out
dec
ftst
adc
sbb
inc
aam
cs
rclb
mov
repz
iret
jb
inc
in
jno
je
or
hlt
adc
popf
sbb
lahf
pop
sbb
and
pop
js
mov
xchg
aad
mov
mov
add
xchg
movsb
sub
pop
stos
mov
repnz
cmc
mov
sub
xchg
inc
mov
inc
xchg
in
imul
test
mov
push
loopne
rol
adc
lret
popaw
lea
xor
xchg
inc
xchg
add
jbe
mov
add
dec
cwtl
movsl
add
int3
sar
stos
cmp
push
stos
loopne
jge
mov
insb
test
test
push
mov
mov
add
in
enter
cmc
xor
pop
and
sub
inc
outsl
dec
cltd
jns
mov
imul
jle
mov
sub
jb
mov
sbb
fstps
mov
jge
xor
dec
xlat
je
xor
dec
aas
xchg
test
mov
movsb
fimuls
fstp
xor
test
dec
jge
int
mov
jle
sub
mov
and
cld
mov
fdivl
add
push
sbb
imul
cmp
cltd
jmp
or
movsl
lret
mov
cmp
or
fisubs
loop
mov
rol
jns
mov
lock
pop
popa
add
shll
pop
jge
lods
sahf
jno
push
movsb
stc
iret
int3
mov
cltd
out
dec
mov
add
filds
dec
daa
sbb
mov
test
inc
je
jbe
insl
mov
std
inc
insl
jl
xlat
testl
loope
pop
jl
movsb
adc
and
or
andl
push
xor
pop
inc
adc
nop
mov
test
mov
fcmovb
insl
leave
repnz
data16
imul
adc
jmp
push
sti
dec
fs
pop
jne
leave
in
in
testb
cmp
mov
push
inc
mov
ret
loop
pop
add
or
xchg
jo
xor
test
in
jp
test
in
clc
sub
xor
sub
pop
cmpsl
daa
addr16
subl
shl
arpl
sub
lock
icebp
mov
mov
ret
adc
mov
fcmovu
push
mov
push
mov
inc
adc
pop
fstpt
es
scas
pop
mov
lea
cmpb
mov
int3
outsb
test
cmp
mov
sbb
stos
imul
mov
mov
repnz
mov
xor
inc
mov
push
int3
or
cmc
add
pop
mov
insl
repnz
les
js
aam
or
or
ljmp
cwtl
data16
xchg
or
dec
mov
xchg
cld
jge
mov
std
mov
movb
inc
dec
pop
xchg
sub
sub
sahf
dec
adc
jecxz
mov
jns
dec
dec
daa
test
sub
imul
and
pop
call
mov
push
pop
outsb
out
repz
pop
lods
std
das
in
pop
popa
add
fbstp
das
xor
add
lock
cmp
pop
jbe
das
cmp
jae
je
mov
sub
fsts
xchg
cmpsl
cmpsl
jl
sbb
aas
aad
push
imull
dec
inc
mov
sahf
aas
fbld
es
inc
xor
roll
dec
adc
ret
rolb
xchg
insb
inc
mov
mov
dec
popf
push
scas
add
sbb
inc
ret
push
ficoms
xor
and
add
mov
add
iret
mov
cmpsl
cmovae
push
insb
adc
mov
push
scas
and
xor
add
mov
pop
xor
test
push
mov
dec
pop
js
adc
sub
push
mov
xchg
in
push
in
adc
sbb
mov
stc
insl
push
pop
stc
or
jmp
fisttpll
mov
dec
shl
dec
in
push
dec
pop
or
sti
popa
push
addr16
push
dec
pop
cmpsb
subb
mov
nop
add
shl
loope
in
and
pop
pop
cmp
xchg
xchg
fnstcw
out
cmc
xchg
decl
test
daa
jno
add
sbb
sahf
mov
sbb
jnp
mov
lret
loope
rcrb
shl
out
fadds
aas
aad
mov
bound
and
dec
jno
add
cmp
mov
pop
inc
hlt
xchg
dec
or
add
stc
pop
mov
mov
adc
pop
adc
mov
sub
push
mov
pop
mov
movsl
movsb
repnz
jns
cmp
pop
mov
or
inc
mov
mov
lcall
cli
inc
dec
nop
jecxz
mov
data16
mov
or
and
movsl
jb
pop
sti
jns
sbb
pop
out
mov
and
sbb
test
cmc
loopne
mov
mov
aas
aas
mov
and
sahf
aam
push
and
mov
inc
das
mov
adc
mov
dec
mov
mov
jbe
fdivr
movsb
xchg
das
enter
jne
inc
test
mov
pop
fdivr
jp
push
mov
xchg
xchg
jb
pop
cmc
sub
out
sub
das
testb
pop
cmp
fidivs
cmp
repnz
and
dec
in
mov
jl
inc
jg
mov
test
cs
cltd
scas
inc
push
pop
pop
push
mov
aad
mov
sub
mov
cltd
pop
mov
mov
test
lahf
adc
pop
stc
stos
mov
mov
jmp
adc
stos
mov
cmp
push
pop
pop
push
push
shrb
or
xor
jl
xor
pop
mov
pop
xor
push
fld
out
pop
push
dec
mov
sub
fmull
push
cmp
xchg
xchg
leave
cmpl
dec
sub
roll
int3
ss
and
mov
cmpsb
mov
test
fwait
gs
in
add
or
addb
add
sbb
adc
push
rolb
xchg
out
js
stos
or
push
arpl
xchg
pop
adc
xchg
jp
or
pop
enter
xchg
dec
pop
arpl
cmp
notb
push
xor
xchg
jno
aaa
mov
divl
addr16
or
cli
test
adc
inc
stos
xor
mov
fmuls
cltd
daa
inc
aam
pop
loopne
icebp
gs
mov
fs
out
pop
lcall
add
jmp
push
sarl
dec
aad
xchg
ret
lret
cmp
inc
lret
fcoms
xchg
mov
mov
lahf
shll
shlb
scas
notl
push
fstpt
push
cmp
daa
dec
repnz
dec
and
test
movsl
ds
cmp
xchg
adc
fcoml
cmp
push
mov
inc
cmp
int3
pop
aas
sbb
pop
faddp
cmp
push
fisubl
shl
stc
daa
cmp
pop
and
cld
addb
lds
lahf
int3
imul
mov
mov
xor
cmp
clc
mov
lds
test
mov
jnp
sub
mov
nop
xor
push
sub
adc
xchg
in
int
pusha
fisubs
or
out
or
out
mov
lret
pop
bound
cmc
push
jmp
inc
dec
movsl
sub
outsb
int
cmp
jne
mov
xor
pushf
leave
movsb
imul
jb
movsl
inc
addl
not
sub
das
mov
mov
lcall
mov
movl
add
out
lret
jl
pop
data16
jbe
pop
push
sub
mov
inc
lret
dec
aam
sbb
adc
sti
loope
negl
fsts
cmp
dec
xor
mov
xchg
rolb
or
into
sub
sbb
fwait
mov
push
jo
xchg
mov
aaa
fidivs
lea
jnp
mov
test
xchg
mov
pop
in
scas
xchg
repnz
mov
test
ljmp
push
test
idiv
jmp
cmpsl
fbstp
inc
mov
es
and
fsubrs
je
mov
mov
fsubr
pusha
fsubrl
fcmovb
dec
testl
jae
add
daa
push
mov
pcmpeqw
lods
cld
mov
pusha
cld
mov
and
sti
int
or
push
sbb
popf
lret
into
cmpsb
dec
sahf
sbb
pop
int
mov
jnp
xor
das
lret
inc
sbb
fs
cli
xchg
mov
sub
fwait
jl
cwtl
rcll
sbb
cmpb
adc
lock
xchg
inc
and
pop
shrb
and
or
push
int3
and
jl
mov
jp
jl
jmp
out
ret
mov
mov
pop
sub
rorl
jb
jne
clc
scas
and
ret
ds
out
lods
and
jmp
shrb
adc
push
in
sti
scas
lds
pop
jp
stc
imul
das
and
lcall
je
andl
mov
dec
lock
in
fwait
std
pusha
pop
clc
sub
addr16
xor
jecxz
xchg
shrl
loop
jb
cmc
mov
test
pop
and
loop
scas
aas
pusha
adc
in
jae
daa
shl
rcl
and
insl
or
loope
stc
jns
stos
add
jno
cmp
arpl
xchg
ljmp
mov
popa
sub
scas
arpl
mov
bound
cmp
cmp
mov
jecxz
xchg
lea
pushf
fwait
cmp
adc
and
stos
or
cmp
int3
mov
iret
push
cmpsb
and
cmp
mov
add
pop
jnp
jmp
daa
out
cmpsl
jecxz
pop
mov
inc
mov
pop
and
cmp
push
and
shll
sbbl
cld
sbb
dec
movsl
mov
jo
fsubrl
nop
adc
scas
iret
or
mov
aaa
or
mov
fidivrs
pop
fnsave
xchg
icebp
or
inc
jo
and
dec
xchg
ret
push
xchg
xlat
sub
lea
ds
clc
adc
sti
aad
sbb
insl
leave
mov
or
sbb
loopne
or
xchg
shr
test
mov
dec
add
ja
idivl
fisttpll
push
es
inc
fwait
or
arpl
cmp
mov
loope
stos
push
sub
mov
jle
fildll
sbb
jno
jb
ljmp
pop
rorb
fadd
scas
inc
inc
xchg
inc
std
daa
adc
lock
dec
xor
iret
das
dec
dec
inc
inc
xor
push
je
cmpsl
push
push
adc
add
fwait
mov
les
es
in
int
push
rcrb
adc
mov
in
jle
mov
add
lods
lds
das
lods
test
mov
sub
add
mov
std
imul
xor
pop
stc
scas
jl
sub
pop
xor
lods
mov
jg
test
popf
lret
outsl
movsb
lods
clc
ljmp
insb
add
sub
clc
pop
test
andb
test
clc
scas
inc
cmpl
push
push
dec
xor
or
out
push
cmc
test
lahf
pop
add
lahf
jg
loopne
lds
mov
sub
lret
dec
xor
sbb
xor
or
mov
lock
inc
sbb
ret
mov
mov
inc
dec
test
test
cmpsb
mov
aas
loop
inc
pop
xlat
out
adc
mov
adc
add
repz
ficompl
sti
ret
addl
and
fisttps
or
sbb
mov
pop
and
push
sub
test
mov
popf
mov
cmp
aad
mov
cmc
pop
and
adc
xchg
or
cmp
xor
popa
mov
lcall
fisubrl
jle
repz
cmc
iret
lea
xchg
nop
push
ds
mov
cmpsl
insl
lret
pop
jge
add
xchg
pop
les
aas
mov
xchg
push
cs
inc
push
aaa
sub
outsb
popa
inc
mov
dec
and
or
sbb
ret
cli
fsubl
push
adc
add
stos
std
mov
xchg
mov
fisttpll
xchg
dec
xchg
pop
sub
jmp
xchg
cli
pop
lods
leave
ret
cmp
pop
aam
sub
push
aaa
mov
mov
mov
lret
sub
cmp
int
xchg
pop
inc
dec
cmp
push
and
jne
sub
scas
inc
sbb
imul
sub
jne
mov
jne
imul
mov
xor
adc
adc
cmpsb
sarb
mov
xchg
repz
clc
and
mov
rcrl
jno
xchg
add
cli
sbbb
dec
cmpsb
inc
push
xchg
or
fcmovu
mov
inc
sahf
xchg
and
jg
repnz
xor
pop
and
test
sbb
fdivrs
push
dec
mov
dec
sbb
les
and
stos
push
lods
sub
cs
out
push
in
lret
std
or
sbb
pop
insb
xchg
ret
pop
mov
cmp
ds
fxch
and
pop
pop
sub
sarl
fucomi
sbbb
mov
mov
push
lret
mov
rcrb
mov
sub
bound
popa
ja
sub
movsl
lret
pop
shl
out
jae
cmpsb
aas
scas
dec
aad
push
mov
imul
std
ja
repnz
dec
dec
pop
mov
out
lea
adc
mov
loopne
xor
loope
out
jne
hlt
adc
out
inc
stc
lcall
jbe
cvtps2pd
mov
and
test
dec
cli
sub
mov
outsl
rclb
cmp
mov
je
push
jns
adc
push
fstpt
int
test
dec
sbb
xorb
into
loope
in
jmp
sbb
les
out
dec
into
ret
push
xchg
insl
loop
arpl
fldcw
mov
jnp
jo
popf
and
sbbl
shr
push
loopne
xor
pop
xchg
jno
movsl
mov
xchg
jno
add
cmp
in
lea
sbb
dec
test
pop
jo
fmuls
mov
es
mov
call
rorb
add
test
popf
pop
dec
gs
mov
jp
push
dec
and
loop
jne,pt
dec
inc
cmc
js
jp
clc
dec
pop
test
imul
xchg
xchg
jb
dec
push
pop
xlat
lcall
iret
xor
inc
clc
call
mov
stos
sbb
lret
jnp
cmp
push
aas
movsl
stc
nop
pop
and
xchg
roll
dec
imul
xor
mov
sub
je
jge
testl
scas
clc
fdecstp
or
imulw
add
jbe
sbb
and
adc
mov
inc
scas
leave
roll
nop
pop
shrb
shrb
sgdtw
inc
add
aam
imulb
cmc
pop
lahf
push
mov
pop
sbb
aaa
pop
jns
scas
and
aad
test
sbb
pusha
insb
jmp
pop
add
movsb
add
adc
inc
cmp
test
or
ret
lcall
lods
and
in
int3
inc
mov
dec
mov
dec
cwtl
pop
add
push
cmpsb
ret
popf
int3
dec
cmp
add
test
mov
das
ret
push
push
xchg
pusha
idiv
out
push
push
xor
lret
mov
stos
push
adc
inc
ja
inc
out
dec
into
and
mov
and
test
push
push
out
inc
in
fcompl
sub
movsl
and
push
outsb
lock
fildll
ja,pt
lret
gs
mov
push
mov
xor
mov
mov
cld
jp
and
cli
jl
cmpb
sbb
jle
movsl
out
cmpb
hlt
inc
into
lds
cmp
stc
xchg
test
mov
movlps
xlat
xor
ret
ret
push
shrl
bound
out
sub
scas
scas
push
cmovge
je
pop
and
push
ds
icebp
mov
fadd
lret
jns
decl
jecxz
addb
cmpl
popa
andb
pop
xor
push
lahf
cmpsl
enter
adc
cmp
push
fiadds
push
mov
int
jbe
je
pop
rorb
jo
rorl
mov
jl
daa
fwait
push
out
xchg
and
inc
shll
inc
in
icebp
int
pop
jne
cmc
iret
mov
iret
call
aad
fwait
adc
ja
orl
jne
mov
push
or
pop
fiaddl
insb
jmp
mov
aas
repnz
mov
or
pop
icebp
das
stc
mov
mov
outsb
fmull
push
push
arpl
es
ljmp
jmp
sbb
jno
cmp
lods
test
mov
add
xchg
lahf
cmp
push
cmpsl
aaa
in
movsb
std
mov
pusha
inc
aas
and
sti
cmp
jno
je
shrb
sbb
mov
or
movsl
shr
cld
sub
lock
aad
pop
sub
rol
xchg
xorl
stos
nop
icebp
int
ret
add
sub
mov
xchg
xchg
push
int
and
or
mov
aaa
sarl
inc
mov
or
jecxz
mov
add
xor
inc
aas
inc
sbb
sbb
jo
popa
shr
subl
das
lahf
mov
dec
cltd
outsb
mov
imul
inc
or
testb
push
ljmp
ret
or
xor
lods
mov
lods
sub
pop
aad
aaa
stos
sub
jmp
loope
xchg
xor
mov
leave
sarb
sti
adcb
rorb
addr16
mov
test
mov
dec
loopne
loop
jnp
pusha
out
push
jbe
pop
pop
xchg
lods
adc
test
xchg
in
sahf
idivl
sub
xchg
push
sbb
push
movsb
enter
lea
aas
stos
repz
int3
pusha
sti
pop
jg
cmp
inc
mov
mov
ja
orb
jl
fistpll
test
jp
dec
push
push
loope
in
mov
inc
ret
mov
shl
push
clc
xlat
mov
out
mov
push
inc
push
push
addr16
dec
aad
les
cs
rcl
jo
push
xchg
or
sbbl
outsl
loope
out
pop
jecxz
mov
sub
stos
jns
inc
cld
dec
pushf
jns
sar
sub
hlt
xchg
cs
pop
pop
ds
enter
stos
dec
jge
int3
fcmove
inc
push
mov
mov
inc
mov
lahf
push
outsb
int
nop
scas
or
push
out
inc
into
add
shrl
enter
shll
inc
inc
shlb
imul
imul
add
sub
rcrb
sbb
aas
inc
lahf
pusha
xor
push
push
jnp
pop
sbb
outsl
sub
pop
ds
xor
fmuls
shrd
cwtl
lods
mov
sub
jecxz
ljmp
divb
out
adc
jl
jns
mov
xchg
bswap
cmpb
add
movsl
fmuls
test
lds
movsl
imul
push
dec
and
cli
pushaw
orb
mov
popf
fwait
movsl
pop
imul
jns
mov
xchg
fstpl
dec
mov
mov
xorb
insb
add
aas
sbb
jl
and
pusha
add
mov
xor
sub
std
jle
mov
xchg
popa
push
fistps
jbe
and
xchg
fldt
dec
sub
push
jne
push
ss
inc
dec
cs
cmp
cmpsb
jno
jno
sbb
push
cmpsb
int3
ss
xor
xchg
aaa
push
xor
push
jp
outsl
notb
rcrl
lahf
test
cmp
lods
outsb
jae
sbb
pop
leave
xchg
push
fsubl
push
push
push
inc
lods
jb
push
and
or
inc
psubq
xorl
jno,pn
push
add
mov
clc
outsb
ret
mov
jns
aaa
sarb
mov
jl
pop
fistl
push
mov
lods
mov
inc
push
mov
push
dec
shrl
mov
out
inc
cs
sahf
pop
loope
rcr
loopne
cltd
sbb
mov
lea
pavgb
je
imul
jae
xor
inc
pop
in
dec
mov
ss
mov
cmpsl
sub
adc
lret
sti
shl
out
popa
adc
leave
and
cmp
xchg
iret
pop
outsl
andb
mov
pop
push
jnp
sbb
dec
dec
in
int
inc
adc
sbb
enter
mov
jns
rorl
or
jp
arpl
pop
out
add
jbe
arpl
popf
imul
pushf
dec
dec
jb
push
lds
pop
outsb
mov
cmp
push
dec
test
dec
loope
pop
ret
pop
lea
popl
or
out
push
lahf
xchg
pop
jg
movsl
movsb
jl
cmp
push
aad
jno
pop
rcrl
xchg
mov
pop
shll
or
dec
push
jl
adc
push
mov
shrb
shl
out
pop
jecxz
xor
sbb
test
sub
adc
and
push
test
lahf
ds
xchg
or
sbb
outsb
in
cmpsl
jmp
daa
pop
leave
mov
mov
sti
xor
xchg
push
pop
xor
imul
adc
enter
dec
cwtl
test
cmp
jae
ja
jmp
fwait
and
jne
and
mov
ret
jle
mov
or
push
daa
mov
repnz
or
mov
ljmpw
in
mov
pop
mov
lods
sarl
cwtl
loop
outsb
rolb
add
push
push
pushf
std
jno
lock
xor
or
in
jg
xchg
jne
decl
xlat
push
add
fldenv
jno
inc
addl
fcomps
push
jae
lcall
mov
mov
push
ljmp
fisttps
mov
test
rcrb
in
mov
je
shr
stc
sahf
inc
outsb
or
stc
jo
lea
jne
jne
lods
push
jmp
xor
sti
adc
out
dec
imul
inc
pop
fidivl
das
fidivrs
mov
cmp
xor
mov
mov
pop
jge
cltd
sub
push
out
add
shll
fs
jnp
jmp
aaa
and
mov
loopne
ficoml
je
pop
int3
sub
and
flds
jne
xor
in
js
pop
xchg
mov
mov
lea
test
cmp
push
leave
lret
mov
mov
in
stos
or
adc
mov
adc
stos
lcall
int
mov
xchg
inc
dec
daa
rcll
into
repz
lds
inc
enter
hlt
mov
pop
inc
push
sbb
push
jno
es
test
cmp
into
lds
jno,pn
jnp
ljmp
or
push
add
out
les
or
add
or
imul
push
fmull
pop
pop
xor
jge
sub
jno
loop
mov
mov
popa
adc
inc
js
adc
lods
inc
sub
adc
jl
femms
insl
lock
jbe
mov
push
jmp
lods
nop
push
sbb
pusha
movsl
aam
cmc
xlat
jb
lret
shl
data16
fildl
loope
adc
test
and
inc
imul
repnz
shr
sbb
lcall
into
test
in
daa
ret
out
imul
fsubl
xchg
push
inc
loope
mov
adc
daa
xchg
adc
leave
inc
dec
mov
xchg
hlt
shlb
test
in
lret
sub
out
lods
jns
or
adc
inc
jbe
sub
and
sbb
fisubrs
sub
sbb
loop
push
ljmp
pop
std
jb
imulb
jns
enter
mov
xchg
scas
outsb
testb
adc
cmp
pop
test
xor
out
shll
mov
rclb
fiaddl
scas
out
jo
mov
dec
mov
cld
daa
xchg
jae
mov
fnstcw
cld
pop
scas
sub
push
movsb
jle
fldl
xor
xor
mov
lcall
inc
or
cmp
cld
scas
fstpl
mov
data16
pop
mov
jo
xlat
lret
mov
mov
pusha
call
adc
mov
imul
xchg
jno
movsl
pop
sub
mov
std
cmp
rorl
daa
mov
dec
sub
mov
imul
es
mov
pop
xchg
inc
xchg
stc
test
fldl
add
insl
or
in
pop
imul
repnz
or
pop
jge
sbb
mov
and
fimuls
jp
and
mov
dec
and
jg
push
xchg
clc
cwtl
dec
adc
jb
jne
xchg
jg
es
in
cmc
fsubs
push
jle
push
fcmovbe
je
inc
mov
ds
mov
je
pop
loop
stc
popa
icebp
test
sbb
push
pop
loopne
insl
scas
outsl
lods
arpl
fsts
xchg
xlat
rcrb
xor
dec
jne
pop
jle
inc
adc
daa
pop
xor
jns
jmp
std
cltd
sbb
add
leave
xchg
xchg
pop
sbb
negb
call
adc
jbe
fcoml
fsubl
pop
outsb
aad
jp
call
sub
cs
dec
insl
pop
outsb
or
dec
add
cmp
pusha
loope
sub
cli
mov
loope
lea
xchg
pushf
shll
iret
scas
dec
push
cmp
ljmp
dec
sahf
out
enter
jmp
aaa
xor
ret
mov
sub
push
sarb
loopne
jle
in
dec
dec
cld
cmc
icebp
sahf
ljmp
push
mov
push
inc
mov
ljmp
push
mov
ljmp
jo
ja
lcall
xor
data16
jp
adc
movsb
add
dec
cmp
int3
cs
push
imul
lret
mov
flds
and
arpl
jecxz
push
add
lahf
stos
and
pop
cli
insl
pop
sub
pop
call
lods
push
sub
or
in
ss
push
incl
or
sub
data16
pop
dec
orl
mov
out
aaa
push
in
enter
mov
xor
or
dec
sub
inc
or
push
rol
add
mov
pop
aam
fistl
ds
jecxz
sti
dec
shll
mov
sti
aaa
leave
push
scas
cmc
xchg
dec
sbb
mov
pop
jnp
jb
mov
aad
xor
das
jg
sbb
or
fistpll
enter
mov
bound
mov
and
addr16
jb
movsb
xor
dec
dec
aad
jp
adc
adc
int3
scas
pop
xchg
xchg
push
adc
aas
pminub
fmull
adc
xchg
jo
lods
stos
out
jg
rol
xor
pop
mov
fwait
push
push
enter
mov
xchg
movl
xrelease
pushf
sub
and
aam
testb
pushf
xchg
push
cmc
out
and
sub
les
or
insl
mov
stos
or
pop
jb
aad
and
push
and
fstpl
push
adc
push
pop
or
jbe
jmp
aas
xchg
imul
sahf
xchg
lahf
lods
jbe
mov
scas
sub
imul
sub
push
push
push
dec
xchg
test
dec
xor
push
jb
lock
push
dec
jp
or
sbb
cmc
cmc
out
xor
adc
push
test
mov
sarl
sub
push
popf
enter
pmulhw
pop
stos
mov
pusha
mov
xor
pop
outsb
mov
xchg
imul
jo
call
out
lahf
in
ds
ja
xchg
fbld
icebp
hlt
repz
lcall
test
scas
insb
xchg
or
xor
pop
fsts
adc
and
repz
mov
stc
cmc
repz
xchg
jecxz
and
sti
inc
xchg
cwtl
push
mov
mov
cld
push
ret
fsubrl
clc
lahf
mov
mov
std
pop
js
xchg
fldcw
aas
cmp
xchg
pop
add
add
aaa
mov
cmp
subb
cmp
pop
add
cltd
cmp
push
cmp
fcoml
psubusb
jb
pop
xchg
mov
lock
mov
repnz
aas
imul
mov
or
rclb
cmp
and
neg
subb
cmp
sbb
mov
sbb
out
repnz
imul
daa
and
cmc
dec
mov
test
testb
orb
jge
mov
jmp
mov
mov
aad
jmp
aas
push
cmpsl
hlt
pop
xor
outsl
xchg
adc
push
repz
cli
mov
inc
cwtl
add
or
xchg
and
into
js
or
insl
mov
mov
shll
stos
cltd
sub
repz
jne
jle
mov
sbb
fcmovu
jo
aam
adc
add
scas
fists
movsl
shlb
outsb
fdivrs
stos
fnstenv
test
push
addb
enter
sbb
lds
scas
push
lods
into
imul
adc
sbb
push
or
in
pop
filds
in
push
adc
enter
jle
xor
shll
dec
adc
fidivrs
push
mov
stc
outsb
aad
adcb
movsl
jle
in
gs
scas
xchg
mov
ss
cltd
cmpl
insb
and
scas
scas
cmp
enter
jne
inc
daa
leave
stc
cld
inc
movsl
sub
pop
aas
test
movl
mov
and
inc
sbb
inc
sarb
call
movsl
xchg
repz
push
mov
dec
out
xor
test
addr16
loopne
sbb
jg
aas
mov
test
add
mov
sub
and
mov
adc
pop
pop
pop
mov
cmp
add
pop
cmp
arpl
in
in
jnp
lahf
cmp
push
out
sbbb
add
hlt
test
ror
xchg
imul
mov
mov
out
cltd
mov
pop
jge
jge
and
adc
fistps
cmp
in
ret
sub
sbb
mov
pop
mov
dec
mov
cmp
sbb
stc
cmc
mov
pop
mov
and
imul
mov
nop
sti
mov
cmp
sbb
out
rcl
daa
dec
mov
shrb
scas
push
out
stc
cmp
mov
shl
sahf
scas
jnp
and
mov
add
outsl
mov
mov
jge
add
dec
loopne
xchg
push
ficoml
lcall
add
mov
testl
sbb
xor
sub
clc
sub
inc
inc
subb
dec
jge
dec
adc
cmp
imul
repz
inc
int3
push
inc
enter
dec
add
dec
pop
fildll
aad
mov
sbb
xchg
xor
adc
dec
mov
fcmove
mov
xchg
xor
dec
mov
loopne
push
cmp
test
push
mov
jl
sbb
sub
push
cltd
push
push
dec
divb
pop
fisubrl
in
in
clc
cli
stc
jbe
jno
cmpsl
enter
shrb
cmp
adc
mov
mov
inc
inc
ds
xchg
mov
push
push
or
mov
adc
or
inc
jb
mov
add
lret
dec
xor
cld
std
push
or
movsl
push
loope
sti
jno
jbe
or
xchg
in
cmpsb
hlt
push
icebp
mov
in
mov
push
adc
stos
inc
mov
dec
and
test
cli
pusha
gs
rolb
adc
fstpt
lcall
sbb
mov
loopne
dec
mov
push
dec
jnp
inc
mov
jmp
cmc
cli
loop
insl
inc
mov
inc
sbb
adc
sarl
test
fwait
jmp
and
mov
iret
aas
mov
jno
xor
lret
pop
jg
xor
addb
cmp
dec
push
into
test
nop
lahf
js
adc
adc
cltd
es
icebp
in
or
push
jp
jbe
inc
call
pusha
mov
jb
clc
or
xor
ss
mov
sub
dec
mov
or
fisubs
pop
test
xlat
mov
xlat
xchg
dec
add
fwait
enter
pop
sbb
pop
inc
mov
mov
and
xor
mov
sahf
xor
or
mov
out
mov
mov
scas
pop
mov
mov
shl
pop
mov
inc
insb
ja
stos
notb
insb
add
mov
sub
nop
ret
test
xchg
xor
iret
stos
insl
fiadds
enter
mov
lret
test
in
jmp
adc
pop
cs
sub
fs
enter
into
lea
stos
fdivs
adc
add
sub
sbb
mov
outsb
mov
mov
lret
mov
jo
dec
jb
push
or
mov
outsb
stc
arpl
xor
ss
xor
sysret
leave
lret
cwtl
out
arpl
ds
push
arpl
mov
push
test
pusha
fidivl
sub
cmp
sbb
xchg
mov
push
pop
clc
rorl
push
daa
mov
inc
outsb
insb
push
xor
pop
mov
mulb
arpl
add
test
inc
jle
aaa
add
sbb
or
inc
cmp
jmp
dec
outsb
outsb
push
ljmp
ss
mov
cmp
aas
cmp
enter
icebp
les
into
pop
mov
les
or
sub
insl
jo
jmp
add
cli
fucomi
pop
jecxz
das
stc
mov
pusha
lcall
cmpb
out
pop
push
ret
push
pop
or
fdivl
sub
stos
in
push
hlt
pop
push
mov
sahf
push
cmp
ss
xchg
lcall
test
xchg
xor
repnz
dec
push
sti
repz
stos
add
into
fnstcw
aam
aam
arpl
hlt
in
mov
fsubrs
icebp
dec
pop
stos
call
cli
out
jb
call
lcall
mov
js
sub
inc
mov
adc
test
push
ss
movl
mov
shr
or
mov
pop
xor
sub
arpl
fmulp
rorb
cli
add
mov
stc
sub
or
mov
pushf
aad
cwtl
add
sub
push
cmpsb
push
add
ret
xlat
loope
int
imul
and
rclb
mov
cmpb
lods
stc
mov
int3
gs
mov
imul
nop
decb
push
inc
ret
iret
stos
cs
das
xlat
xchg
insl
fldcw
decb
cmp
pop
jns
hlt
xchg
or
or
push
insb
out
add
inc
js
insl
stos
adc
sub
cli
mov
lret
sbb
and
push
mov
mov
mov
push
xchg
dec
sar
push
pop
inc
lcall
xchg
mov
inc
clc
mov
push
sahf
adc
in
aas
je
cs
and
xchg
xchg
or
adc
fwait
inc
inc
cld
cwtl
mov
cmp
aam
loope
cmp
testb
jns
aas
add
push
mov
adc
nop
das
mov
pop
xchg
push
dec
xor
add
pushw
push
push
lcall
inc
pop
lahf
loope
adc
into
loop
inc
mov
push
mov
inc
xor
cmp
in
xor
daa
jl
cmpsb
jns
dec
push
lcall
or
pushf
mov
sarl
adc
mov
pop
faddl
mov
ja
inc
push
inc
cmp
push
das
inc
push
xorb
push
sbb
in
jno
repnz
fs
pop
sbb
mov
lret
mov
jb
icebp
inc
jg
je
cs
inc
jnp
push
insl
dec
pushf
loopne
popf
push
push
pusha
mov
cs
jne
lahf
mov
test
nop
xlat
out
bound
aad
fstl
arpl
jns
mov
xchg
adc
xor
mov
jns
inc
lcall
xor
xor
inc
or
push
sahf
xor
mov
sub
call
pop
js
leave
mov
lret
mov
xchg
jl
fnstenv
ljmp
jb
xor
mov
mov
dec
loopne
arpl
and
mov
inc
popf
mov
rcr
sahf
push
cld
and
fxch
push
ss
inc
sbb
or
jo
loopne
pop
sub
out
jl
jecxz
cmp
loope
mov
cmpsl
sti
fiaddl
lods
and
outsb
filds
and
dec
cld
lods
xor
sbb
loope
andb
shrb
inc
pop
mov
add
xchg
shll
and
ljmp
pop
movsb
xchg
insl
or
dec
sub
mov
insb
pop
jno
pusha
and
mull
dec
mov
int
std
sub
dec
adc
popf
pop
xor
or
mov
loope
cmp
sub
inc
es
pusha
cmp
jbe
into
repz
in
jge
and
lahf
mov
addb
push
lods
ret
or
mov
xor
inc
mov
inc
incb
mov
aam
in
dec
std
inc
mov
inc
into
iret
add
rcl
cmp
sbb
test
into
jo
stos
xchg
dec
clc
int3
ljmp
mov
aaa
leave
jne
dec
lds
es
dec
mov
pop
push
call
mov
jmp
and
mov
cmp
out
mov
mov
sub
rorl
push
adc
mov
movsb
addr16
and
mov
jle
repnz
notb
jg
push
and
in
bound
mov
pop
sbb
bound
out
and
fwait
sub
fstp
mov
lods
negb
lret
dec
out
loopne
stos
pop
xlat
jp
roll
cmp
sub
and
test
cmp
jecxz
sub
cmp
mov
lock
hlt
ret
outsl
jp,pn
inc
xor
dec
ljmp
xlat
dec
mov
jmp
adc
add
pusha
repnz
loopne
cmpsl
lds
jns
in
add
xchg
inc
add
pushf
cmc
push
test
imul
aam
loope
pop
push
ljmp
pop
mov
add
fisubs
xor
jnp
insb
or
or
fistl
sbb
or
dec
inc
or
ja
imul
xor
mov
inc
jbe
hlt
xor
dec
mov
test
les
adc
fwait
lahf
jp
mov
out
popf
addr16
insb
test
stos
mov
daa
cld
pusha
addr16
nop
push
fwait
push
fchs
inc
jne
bound
mov
popa
cltd
inc
mul
mov
xor
jg
cld
xchg
mov
pusha
lea
mov
and
xchg
adc
scas
sub
mov
std
xor
inc
dec
ds
mov
adc
leave
dec
ret
icebp
jge,pt
imul
js
jb
mov
sub
or
hlt
cmpsl
loopne
add
loope
xchg
push
fs
mov
testb
and
loopne
mov
loop
or
push
xchg
add
es
cli
mov
clc
or
enter
mov
int
add
sbb
or
jns
fists
out
cs
cmp
mov
test
ss
loope
mov
pop
push
sarl
add
js
mov
testb
pop
inc
xchg
ror
pusha
adc
ret
popa
cmp
neg
insb
xchg
push
cmpsb
ficoml
sbb
mov
pop
loope
aas
adc
cld
lea
dec
mov
fwait
jb
cwtl
aam
pop
mov
mov
dec
inc
sbb
cmp
dec
outsb
or
aas
mov
xchg
cld
push
jae
neg
cmp
hlt
xor
mov
popfw
cmp
jge
cmp
mov
xchg
daa
pop
shll
cmp
dec
nop
jae
add
push
xchg
filds
pop
enter
inc
decl
out
lcall
lds
and
pop
adc
movsl
dec
leave
leave
stos
sub
sbb
inc
fcomi
sbb
cltd
loop
pop
je
ds
fdivs
loope
push
mov
sub
iret
icebp
xchg
clc
xorb
loop
enterw
cmp
out
mov
dec
addr16
xchg
jg
inc
xchg
mov
mov
aaa
sub
sub
andl
insl
mov
idivl
leave
ja
sbb
jae
and
lea
enter
int
inc
cltd
jns
mov
or
xchg
popa
popa
outsl
xor
jg
dec
test
ss
or
bound
add
xor
inc
filds
scas
fistps
adc
pop
fwait
aam
ja
xor
dec
and
xchg
in
decl
mov
mov
out
hlt
scas
xchg
cmp
je
jmp
xchg
pop
sub
call
ja
ret
les
mov
int3
dec
out
daa
nop
test
shrb
jnp
mov
or
mov
xor
nop
push
aad
test
jno
add
adc
aas
pushl
fistl
xchg
cld
dec
ret
jmp
test
dec
and
addl
adc
and
jl
pop
sbb
mov
out
adc
jecxz
out
pop
jecxz
add
add
dec
push
in
mov
mov
and
stos
push
push
lcall
clc
push
push
ret
fs
repnz
in
pop
lcall
mov
call
repnz
jl
xchg
jnp
fnstcw
xor
mov
aam
pushl
sti
mov
mov
testl
jge
xchg
fsts
push
push
das
xchg
or
xor
fldl
and
cmc
push
mov
data16
std
jl
mov
and
fwait
pop
data16
push
cmp
sub
hlt
xchg
scas
dec
fcomps
cmp
nop
sbb
adc
hlt
aas
rcll
arpl
aaa
sub
rorl
pop
and
adc
lds
in
das
and
adc
adc
js
xchg
movsb
movsb
into
idivb
sub
inc
sub
repz
hlt
xor
mov
scas
pop
xchg
jle
xor
mov
xchg
ljmp
jnp
mov
fwait
jl
insl
sahf
inc
jb
cmc
mov
jmp
clc
add
xor
pop
shll
frstor
push
cld
mov
xorl
cmp
push
pusha
jg
mov
mov
cld
inc
bound
adc
cmp
loop
add
clc
mov
fsts
mov
jg
sub
cmp
arpl
js
fwait
nop
xor
cld
mov
mov
imul
sbb
and
xchg
jg
push
jnp
jbe
jl
add
mov
leave
mov
sbb
mov
push
in
aas
in
add
xchg
and
mov
shlb
insl
push
xchg
push
mov
mov
push
arpl
les
lret
movsb
push
push
lods
cwtl
pop
xlat
pop
mov
into
test
out
push
mov
les
loopne
std
fmul
lahf
push
xor
dec
dec
scas
dec
mov
mov
mov
bound
inc
subb
pop
dec
adc
je
lock
adc
scas
fiadds
lock
lods
sti
and
cmc
xor
sub
jl
fldt
cmp
inc
test
es
loope
std
cld
and
or
xchg
rorb
cmp
xchg
dec
mov
in
shrb
outsl
inc
adc
inc
jno
sbb
mov
roll
xor
xor
mov
pop
ja
mov
sub
mov
mov
xor
or
mov
dec
jge
push
popf
es
cwtl
or
add
inc
add
arpl
inc
pop
pop
je
cmpsb
lock
std
cli
mov
xor
push
inc
jae
pop
dec
push
lock
es
sti
mov
fbld
sbb
mov
out
and
cmpsl
mov
stos
subl
jno
jmp
jo
inc
lock
mov
xchg
sub
cwtl
or
ret
and
movb
cmp
arpl
mov
or
add
sbb
jle
sbb
lret
cwtl
dec
aaa
mov
cmp
adc
movsb
add
sti
nop
je
aaa
cld
dec
cld
sub
mov
xor
push
adc
jns
test
icebp
nop
sub
testl
into
and
inc
add
fcomps
stos
cld
loope
mov
aad
xchg
pop
sbb
cmp
test
or
dec
out
pop
lock
ret
mov
mov
adc
xchg
gs
sbb
mov
jmp
adc
dec
jl
cwtl
add
add
push
push
push
mov
insb
mov
pop
xchg
data16
mov
or
fistpll
rolb
leave
xor
stc
pop
cld
pop
test
mov
sti
clc
push
mov
mov
fs
mov
lcall
popa
and
fidivs
out
sub
test
jp
gs
cmp
xchg
out
movsl
add
test
out
je
mov
mov
cmpsb
mov
outsl
cs
sub
fldcw
sub
sti
cmc
dec
imul
movsl
adc
push
xchg
jmp
inc
cmpsb
outsl
cmp
leave
leave
pop
test
cwtl
leave
outsl
daa
fst
shl
popf
add
bound
xchg
xchg
jecxz
or
stc
mov
push
sub
and
fs
imul
aaa
cmp
imul
outsl
rcr
sub
push
stos
les
movsb
scas
test
jge
out
xor
dec
sbb
lods
lahf
dec
jecxz
or
subb
inc
adc
fistpll
cltd
xchg
push
mov
sub
xor
dec
out
ljmp
leave
scas
fists
mov
mov
sbbl
aad
out
es
cmpsl
dec
xchg
loop
jae
es
call
jg
push
imul
jp
ljmp
xchg
jg
jp
or
stc
lahf
pop
and
cltd
mov
ds
pop
inc
lret
sbbb
pop
jb
mov
iret
stc
fdiv
fucom
cltd
mov
jmp
add
outsb
scas
shrl
push
es
hlt
lods
push
es
aaa
pop
or
dec
xchg
arpl
mov
insb
subb
imulb
push
push
sti
dec
jne
aam
sub
ret
sti
addr16
adc
cld
cmpsl
fcmovb
jno
outsl
sub
pop
in
pop
inc
jns
cwtl
jo
add
dec
sbb
cmp
xor
mov
pop
adc
stos
inc
out
cmp
decb
adc
pusha
fidivs
xchg
in
push
sbb
mov
inc
lock
mov
pop
inc
ret
jmp
push
flds
sbb
push
popf
gs
mov
sub
or
push
aas
push
xchg
mov
icebp
and
pop
jmp
jmp
xor
test
push
cmp
lret
dec
and
mov
inc
pusha
xor
jg
stos
lods
mov
rcrl
shr
sti
bound
mov
repz
aad
or
mov
rcrb
mov
inc
lock
inc
pusha
jne
xchg
pop
push
xchg
mov
mov
cmp
int3
mov
jnp
out
xchg
xor
aaa
call
inc
xorl
fsubl
into
and
jg
jle
or
clc
arpl
scas
rclb
pop
std
and
popa
sub
add
fimull
cltd
lret
inc
enter
mov
mov
push
in
mov
movsb
adc
mov
std
cld
dec
adc
dec
push
mov
sbb
les
push
cmp
into
aam
stos
jmp
adc
xor
mov
mov
push
inc
add
loop
dec
outsl
or
mov
pop
fidivl
and
fstpl
xchg
ljmp
gs
and
xor
and
hlt
xor
scas
push
das
movsl
iret
mov
xchg
into
sub
adc
test
int3
loope
imul
xchg
int
xor
mov
in
js
mov
out
mov
xchg
stc
movsb
out
sbb
sub
mov
cli
inc
pop
mov
jb
lds
in
rclb
xchg
dec
push
cmc
mov
mov
scas
in
int
dec
stos
nop
loop
dec
mov
test
pop
push
js
aam
test
ja
mov
xchg
pop
sbb
cwtl
mov
loopne
stos
push
cmp
cmc
roll
pop
out
mov
xchg
lods
sbb
ret
lahf
sbb
push
iret
shrb
enter
popa
mov
shlb
and
sub
test
popa
push
or
and
xor
sbb
test
push
nop
jecxz
in
in
push
aas
xchg
add
and
imul
test
ds
arpl
outsb
dec
or
mov
add
cmp
rep
pushf
xor
push
in
leave
cmp
cmp
lret
cwtl
mov
ret
fbld
js
or
mov
dec
or
std
lea
fnclex
xlat
push
jmp
inc
std
std
mov
pop
mov
shufps
stc
std
imul
gs
add
in
mov
pop
scas
das
pop
sub
push
mov
aam
adc
mov
addr16
dec
rcrb
cli
xchg
or
sarb
mov
pushf
movsl
cmp
in
in
mov
lahf
jp
aad
repz
pop
sub
out
mov
pop
push
mov
std
add
add
mov
pop
jne
imul
sbb
and
pushf
test
add
inc
movsb
fwait
jecxz
mov
leave
imul
mov
or
ss
outsl
cmpsl
sub
imul
out
idivb
sub
shr
mov
mov
pop
add
pop
push
loope,pt
xchg
xor
dec
rcll
fmuls
scas
push
mov
dec
jnp
call
add
cwtl
bound
push
pop
mov
mov
dec
faddl
xchg
test
sub
mov
or
xchg
es
jmp
or
cmp
inc
push
mov
inc
out
pop
sbb
cmpsb
leave
sahf
xchg
mov
jo
mov
mov
push
loope
nop
cld
inc
cli
xor
mov
jnp
xor
jecxz
mov
sti
xchg
sbb
ljmp
push
add
push
loope
fdivs
lahf
cli
mov
or
rcrl
aaa
add
xchg
adc
cmp
es
lea
push
pusha
arpl
sbb
insb
fcmovnb
jp
sarl
inc
add
sar
jb
jle
sub
xchg
dec
jns
outsl
adc
cmp
jne
mov
pushf
cmpsl
fadds
sub
mov
pusha
rclb
mov
popf
mov
and
inc
test
outsb
popf
outsl
jb
out
and
ja
xchg
cli
jo
cmp
movsbl
aad
mov
lods
iret
bound
mov
inc
sbb
xchg
movsl
sbb
out
loop
xchg
xchg
and
xchg
in
mov
mov
lcall
jmp
mov
mov
filds
les
push
sub
call
jbe
outsb
lcall
shrb
sahf
lock
fisubrs
outsb
lcall
add
out
cmp
repnz
add
aad
andb
adc
push
test
idiv
pop
mov
xchg
xlat
mov
cmp
mov
dec
in
leave
cmp
jbe
push
shlb
fsub
pushf
je
mov
cmp
mov
sub
int3
jb
js
or
or
out
incb
mov
outsb
mov
pop
push
pop
fcomi
mov
and
sbb
sti
dec
cmp
pop
stos
loope
bound
mov
mov
ss
jp
xorl
sub
dec
aad
push
jbe
bound
push
sbb
adc
loop
imul
nop
in
push
pop
aas
repz
lea
and
sbb
int3
mov
push
test
jge
outsb
pop
mov
inc
xor
es
pop
push
cli
cld
je
xor
into
lret
sub
mov
xlat
mov
scas
adc
test
jae
inc
dec
sbb
jo
or
mov
js
hlt
dec
shlb
scas
adc
orb
femms
push
pop
xchg
xchg
mov
mov
test
leave
outsl
ljmp
xchg
cmpsb
xor
test
cmp
addr16
pop
adc
enter
pop
stos
adc
push
add
in
jle
jle
adcl
cmpsl
out
ljmp
aaa
popl
mov
sbb
pop
xor
push
clc
stc
loope
cltd
and
in
jbe
jmp
lret
imul
sub
std
dec
push
fldl
cmp
push
pop
lods
adc
add
test
pop
pop
push
cmp
jnp
mov
inc
xchg
jp
repz
call
adc
xor
or
int
and
pop
mov
xor
jb
cmp
bound
call
pop
ljmp
mov
push
scas
bound
xchg
or
roll
sub
shll
es
add
ja
lds
inc
std
fadds
cwtl
mov
pop
sub
negb
xor
push
xchg
xchg
stc
push
ficompl
xor
aas
int
inc
scas
or
sub
cmp
mov
sub
push
dec
dec
push
sbb
sbb
dec
lds
or
xchg
lcall
mov
icebp
push
ss
std
sub
shll
or
and
xlat
and
jnp,pt
cmp
or
xor
or
in
sqrtps
sub
push
mov
or
fs
adcl
mov
daa
mov
int3
sarl
xchg
mov
or
rorl
sub
ficompl
dec
mov
testb
and
mov
sti
pop
push
lods
push
bnd
sub
add
sbb
pusha
js
pop
in
subb
jb
aam
in
adc
fucomi
std
add
mov
insb
out
jae
mov
gs
insl
movsl
gs
movsb
mov
jmp
ret
stc
daa
xor
mov
daa
arpl
pop
or
sub
pop
jl
scas
enter
daa
cmpsb
movsl
test
push
sub
loope
and
inc
fadd
sub
inc
sbb
cmp
loope
dec
das
aas
out
adc
jmp
and
cmp
pop
int3
sub
jle
in
bound
insb
rorl
and
out
adc
adc
inc
inc
cmpb
movsb
scas
cmp
into
adc
je
adc
push
idivb
incb
xlat
dec
pushf
nopl
out
aad
cmp
ja
pop
iret
jns
fcomip
pop
ja
stc
mov
arpl
push
insl
xor
insb
scas
mov
fnstsw
xchg
test
test
xchg
xor
rcrb
and
jbe
sub
add
jp
mov
out
mov
and
cmc
icebp
mov
or
dec
jecxz
cmpsl
cli
insb
xorb
fst
pop
clc
pop
repnz
aas
test
into
or
pop
addl
test
xor
movsb
dec
jne
add
imul
in
leave
rcrb
in
movsl
mov
lahf
mov
xchg
in
dec
stc
xor
jno
add
repz
pop
adc
pop
xchg
cltd
mov
or
add
aad
mov
in
mov
pop
sbbl
dec
sub
cmp
pop
jae
clc
icebp
jae
adc
dec
gs
pop
flds
jns
xchg
jg
std
repnz
push
mov
fwait
js
xchg
imulb
sbb
out
xor
pop
dec
mov
stos
addl
pop
ds
test
sub
dec
sub
cmp
fs
scas
rcrb
arpl
push
out
int
dec
roll
nop
and
aas
xlat
loop
loope
fs
sbb
adc
out
inc
mov
sbb
or
and
ss
popa
mov
jno
arpl
test
sbb
mov
mov
scas
je
mov
js
jns
mov
lret
mov
push
push
stos
inc
cmp
mov
popf
inc
and
sub
mov
push
fwait
addb
cs
sub
outsb
out
int3
ljmp
mov
push
dec
ds
adc
out
cmp
test
lds
jmp
roll
sbb
test
cltd
call
dec
jg
ret
xchg
or
fcom
xor
xchg
test
inc
ret
dec
jae
mov
jle
pusha
sbb
sub
das
jmp
subl
test
mov
lock
mov
xchg
into
cltd
pop
pop
fmuls
loop
imul
push
jl
gs
out
clc
mov
je
jo
pop
ficompl
lods
sub
mov
inc
jae
sbb
fadds
out
mov
or
sbb
fildll
fmuls
mov
mov
stos
pop
pusha
stos
cwtl
sbb
and
fisubrs
mov
cmp
inc
popf
in
mov
pop
inc
xchg
insb
sbb
sbb
mov
inc
mov
pop
mov
or
xchg
sub
cmp
push
icebp
test
jecxz
add
xor
test
jle
cmp
or
aaa
ljmp
outsb
cmp
dec
loope
push
pusha
andb
loop
imul
push
daa
push
shll
ljmp
push
sbb
mov
test
call
mov
pop
xchg
aaa
ja
scas
div
add
int
mov
loop
cmp
jae
fwait
mov
pop
aad
sub
xor
out
sbb
rcrb
push
add
lock
outsb
push
adcl
rorb
sub
jbe
repz
imul
cwtl
negb
leave
pop
or
xchg
std
cld
dec
dec
jo
pushf
filds
mov
inc
aaa
out
sbb
cmp
pop
out
inc
cmp
push
jnp
push
enter
dec
mov
inc
push
mov
push
push
or
dec
cmp
xchg
imul
inc
insb
or
iret
aas
sbb
inc
insb
pop
rclb
jae
sbb
mov
scas
orb
add
pusha
jne
jno
sti
xchg
fwait
mov
nop
insb
in
and
movsl
xlat
mov
or
xor
lds
sbb
add
es
mov
nop
mov
movl
mov
jecxz
pop
xor
sbb
push
and
cmpsl
popa
cmp
ds
push
inc
add
shrb
test
xlat
rorb
fdivs
jne
lcall
mov
fnstsw
popa
test
jbe
push
push
in
mov
fisubl
xor
inc
push
addr16
sahf
aam
shlb
lahf
mov
or
incb
aas
jl
imul
mov
cmp
push
pop
out
xor
pop
clc
in
imul
push
mov
out
inc
mov
je
iret
scas
push
mov
xor
push
mov
mov
popa
jmp
mov
sarl
push
add
push
adc
cmpb
push
push
rcrl
fdivrs
jg
popf
dec
mov
sbb
icebp
cmpsl
popa
cmp
pxor
pop
mov
inc
ja
imul
mov
xchg
cmpsl
popa
pop
inc
add
inc
adc
dec
push
sbb
push
mov
aas
into
or
or
aaa
xor
mov
push
and
pop
lret
push
addb
pop
inc
scas
push
mov
insl
dec
dec
sahf
fwait
pop
sbb
mov
xor
push
sbb
in
imul
mov
ds
mov
aas
cmpb
xchg
mov
adc
mov
scas
clc
push
ja
sar
pop
btr
out
popf
inc
mov
testl
jge
sbb
push
lret
decb
insb
dec
jb
in
jg
cmp
cmp
gs
lods
jge
in
push
dec
push
xchg
icebp
es
and
test
in
lods
mov
popf
dec
stos
les
hlt
or
ja
mov
and
sub
int3
mov
lcall
rcrl
cltd
in
dec
sub
sbb
dec
mov
pop
movsb
xchg
xor
xchg
sub
jmp
repz
push
out
jo
mov
and
imul
dec
test
sbb
mov
push
lret
pop
jmp
cmp
shr
xchg
push
fs
dec
sub
cld
les
add
gs
xchg
xchg
jo
gs
inc
shl
inc
mov
in
mov
add
sbb
nop
hlt
jne
jp
mov
lcall
and
cmpsl
jmp
faddp
in
cwtl
adc
hlt
and
dec
int3
mov
or
xor
mov
sub
std
call
shl
stc
int3
mov
lret
cmp
or
jl
xlat
daa
inc
scas
das
mov
dec
imul
stc
and
jo
pop
mov
in
shrb
ss
mov
and
out
and
enter
popf
pusha
movsl
and
mov
cmp
push
popf
cmp
fdivp
out
in
lret
lods
mov
adc
mov
je
in
adc
subl
movsb
outsl
xchg
adc
fnstsw
stos
test
sahf
stc
add
mov
outsb
cld
mov
push
out
xchg
cmp
dec
ret
xor
aad
pop
out
push
aas
out
pop
jp
lret
hlt
icebp
sub
call
dec
int
push
add
xchg
push
shr
in
adc
push
mov
fs
pop
adc
das
mov
jae
lea
mov
inc
sub
xor
push
mov
and
push
addr16
push
push
out
out
loope
sbb
loopne
enter
pop
dec
stos
lcall
cwtl
inc
aas
psllq
pop
cmp
mov
xchg
mov
int3
divl
mov
sbb
lds
jmp
inc
test
out
mov
shl
mov
inc
cmp
xor
aaa
or
jg
mov
inc
add
into
sub
aaa
setne
adc
cmpsl
xchg
dec
lahf
xor
popf
mov
pop
pushf
pop
fwait
inc
int
mov
sub
mov
ret
ret
lret
aas
das
nop
jge
outsl
sub
lods
outsl
outsb
adc
dec
xor
in
cmp
bnd
dec
repz
pushf
icebp
orb
add
pop
loop
add
mov
pop
jmp
mov
insl
cmpsb
in
jae
jecxz
xor
pop
inc
sbb
adc
mov
nop
out
scas
subb
cmp
add
mov
pusha
cmpl
inc
icebp
gs
add
sbb
out
fadds
cmp
mov
cmp
and
mov
mov
mov
iret
adc
xor
pop
int
test
imul
nop
jns
hlt
imul
adc
cmpsb
sbb
inc
cmp
cmp
pop
xchg
add
les
inc
cs
fldt
int
xor
inc
fdivl
sti
data16
fwait
pop
mov
mov
sbb
stos
outsl
jo
xchg
sbb
cwtl
lds
lods
das
dec
adc
inc
insb
dec
pop
pop
xor
inc
push
test
shrl
push
push
jmp
lret
in
dec
into
sbb
cmp
scas
pop
inc
imul
mov
adc
fadds
addb
adc
xor
add
mov
mov
mov
std
mov
into
push
pop
cmp
lahf
call
adc
push
in
js
aas
rclb
nop
adc
insb
call
mov
or
outsb
push
xbegin
and
ret
or
inc
jg
aas
sub
push
cwtl
xchg
fidivrs
ljmp
pop
jge
xchg
test
dec
imul
jecxz
inc
fstl
jmp
bswap
xchg
mov
xor
aaa
add
adc
stos
add
cmp
in
adc
cwtl
push
mov
cmpsl
icebp
mov
stos
adc
adc
rolb
or
jbe
test
daa
insb
pop
adc
pushf
cs
neg
dec
enter
cwtl
xchg
incl
pop
cltd
popa
xchg
aam
loopne
xchg
xor
dec
sub
sub
sbb
mov
push
aaa
test
sub
inc
fldenv
pop
inc
imul
mov
arpl
popa
jbe
xor
imul
call
push
jo
sbb
xor
sbb
xor
adc
mov
xchg
cld
test
in
xor
push
or
or
repnz
sarb
and
cmp
aas
or
insl
cmp
adc
mov
les
stos
sbb
jno
push
or
xchg
leave
sbb
xchg
push
jge
dec
test
incb
cmp
rclb
pop
mov
stc
pop
pop
imul
mov
push
jp
aad
lods
xchg
lea
pop
sti
push
movsl
or
es
in
or
mov
push
and
sbb
push
insb
mov
mov
sbb
lea
adc
mov
lret
xor
insb
jmp
adc
push
lock
ljmp
cltd
out
fdiv
andl
int
aad
dec
mov
scas
push
sub
dec
xlat
mov
jecxz
adc
imul
sbb
ret
jnp
loop
jno
sbb
xchg
hlt
mov
cli
mov
movsl
ljmp
bound
or
jo
push
sahf
pop
sbb
es
ret
xor
mov
jnp
arpl
dec
mov
cld
jae
pop
mov
add
mov
enter
rcll
mov
and
addr16
clc
fs
pop
repnz
mov
lcall
mov
into
leave
sar
lret
insb
push
mov
cmpsl
mov
and
and
les
sbb
sub
or
push
cmp
cmp
mov
inc
pop
or
mov
sar
arpl
adc
pop
aad
inc
sbbb
xor
nop
addr16
or
movsb
mov
fisttpll
icebp
inc
sbb
int
loope
fistpll
jns
fbstp
je
aas
ret
jne
pop
testl
dec
cmpsb
cld
adc
jp
dec
fdivl
cmp
sub
cmc
movsl
sbb
pop
or
add
dec
outsb
imul
sbb
popw
ja
in
mov
popa
push
int
and
fidivl
xlat
push
xor
mov
fdivl
jp
das
dec
mov
sub
shrb
or
dec
cmp
scas
dec
and
cwtl
xor
cmp
in
inc
decb
pop
out
jb
jge
lods
into
mov
nop
and
icebp
std
popl
xlat
sub
loope
inc
jg
cmpsl
lods
aas
cmp
repnz
jp
or
fwait
lcall
push
fs
jmp
out
add
pop
adcl
popf
ret
jns
dec
in
mov
cs
arpl
jae
jb
add
cmp
jnp
adc
cmp
sbb
pop
fnsave
stos
push
mov
in
lret
mov
mov
add
add
xchg
xor
loopne
pop
push
sub
shlb
ljmp
aas
mov
mov
inc
push
in
add
sarb
clc
repz
or
stc
mov
outsl
pop
add
inc
sbb
bound
sub
xchg
push
enter
jecxz
xor
loopne
jle
pop
in
mov
push
xor
mov
mov
and
fbstp
sbb
je
adc
sub
imul
in
inc
sbb
or
cmp
cs
lods
cmp
aaa
push
push
push
mov
in
data16
adc
out
sub
dec
repz
lret
int
push
xchg
test
inc
and
movsb
stos
cmpsl
jmp
movsb
int3
or
fdivp
push
jns
or
xchg
mov
adc
and
add
add
mov
pop
xchg
sub
ja
xor
idivb
clc
ljmp
or
ss
andb
fldz
mov
jl
cmp
mov
sub
loop
jge
arpl
insl
pop
add
or
popa
icebp
sub
push
xor
jecxz
sub
and
mov
xor
mov
adc
iret
push
jmp
fwait
ljmp
jo
neg
sub
int
mov
jns
fdivrl
test
add
aad
and
pop
sub
adc
adc
fnstcw
xor
xor
push
sub
pop
pop
and
enter
push
dec
aaa
adc
repz
mov
mov
call
ja
shlb
adc
mov
and
std
mov
mov
aad
addr16
pop
inc
mov
repnz
xchg
shr
sub
mov
xlat
enter
in
mov
negl
push
or
out
dec
jg
repnz
and
dec
xchg
push
cmp
mov
lods
or
and
lds
cs
xor
sbb
sbb
fnstsw
insl
mov
xor
push
cmovnp
pop
or
aad
hlt
leave
cmpsl
jp
xor
not
mov
mov
fbstp
or
mov
sub
xor
lret
sub
jne
pushf
jb
pop
dec
sub
xor
xchg
leave
out
xchg
cmpl
ret
mov
repz
call
ds
adcb
cmc
rclb
xor
ret
enter
mov
cmp
cmp
test
add
xchg
out
dec
push
lods
mov
jno
int
dec
inc
jmp
mov
jg
jne
add
in
and
lock
pop
outsl
rclb
fisubs
nop
dec
loope
mov
pop
push
mov
pusha
cmc
pushf
movsl
jl
and
add
popa
mov
or
out
icebp
cmpsl
lret
mov
out
sbb
rcr
mov
jo
sbbl
add
adc
loopne
jge
int3
test
in
jle
dec
pusha
out
stos
mov
jnp
repz
sub
and
jmp
rcrb
xor
push
in
xchg
out
das
sbb
dec
mov
pop
xor
in
add
xor
jg
dec
pop
fwait
mov
in
and
mov
test
loop
mov
sub
add
xchg
and
dec
movsl
lret
cmp
and
orb
adc
pusha
ret
movsb
cmpsb
mov
out
popf
repz
cmp
shl
loope
and
and
pop
mov
stos
ljmp
loope
popa
lods
inc
jns
mov
iret
nop
lods
sbb
xorb
lret
mov
js
jnp
push
loope
mov
xor
add
repnz
add
or
ss
adc
iret
filds
les
pop
jge
icebp
mov
enter
mov
repz
xor
fists
adc
divb
std
mov
mov
cld
xor
xchg
push
pop
cmpsb
push
mov
int
sbb
adc
imul
stos
xchg
popa
sar
loopne
lods
lods
push
or
pop
int
cltd
pusha
je
push
add
aam
inc
mov
dec
fildl
sti
popf
push
jns
daa
lcall
mov
xor
outsl
or
aaa
ror
push
cmp
scas
inc
xchg
sbb
sub
push
ret
mov
lahf
fsubl
mov
mov
jno
sub
mov
adc
ret
mov
fcoml
insl
mov
xor
inc
cmp
flds
or
ds
fildll
pop
mov
test
shl
jne
jnp
iret
les
cmp
push
pop
gs
roll
insl
mov
pop
jp
mov
pop
sarb
test
into
sub
fsubp
inc
pop
cmp
jns
ss
sub
add
sahf
popf
shr
dec
clc
stos
dec
js
icebp
or
xor
push
jne
cmp
inc
pusha
push
cmp
cmp
xor
imul
cmpsl
les
or
adc
and
mov
or
xor
iret
push
push
or
and
mov
adc
movsl
dec
adc
imul
push
xchg
fistpll
adc
push
aaa
shr
and
imul
adc
sti
cmp
mov
mov
stc
out
outsl
pop
jne
iret
push
ds
addr16
imul
enter
dec
push
mov
lahf
mov
and
rcrw
push
jmp
loopne
and
pop
insl
or
jae
out
pop
push
inc
push
mov
dec
mov
jb
lcall
adc
xor
mov
mov
cmpl
gs
loope
mov
jp
mov
rcrl
jmp
nop
or
dec
popf
mov
int
cmpl
ret
jecxz
push
das
cltd
scas
or
ljmp
sub
mov
mov
loop
ret
push
pop
dec
sbb
std
es
lods
icebp
cmp
adc
sbb
inc
iret
mov
or
cmc
mov
push
lcall
push
mov
mov
aaa
test
enter
sbb
jno
dec
in
or
rcrl
leave
aaa
cmp
mov
jp
sbb
inc
hlt
roll
lret
pop
sub
mov
pushf
mov
adc
test
cmp
cmp
mov
xchg
push
rclb
not
pop
pop
add
cmc
sbb
pop
mov
and
testl
inc
daa
adc
and
je
or
test
add
mov
imull
dec
push
pop
xchg
sbb
cmp
jg
and
andl
and
mov
push
pop
daa
jl
add
in
or
stc
cmp
andl
or
add
lahf
pop
cmp
pop
jno
das
cmpsl
pop
mov
sub
or
add
sub
add
aas
mov
xorl
mov
mov
cmp
xor
fcomi
subl
test
shl
dec
repnz
add
jno
add
inc
mov
cmp
popa
hlt
sbb
xchg
in
ret
mulps
mov
sti
fidivrs
out
cmpsb
inc
scas
jle
out
push
es
cmc
inc
and
test
add
dec
pop
xor
pop
dec
divb
adc
jnp
mov
repnz
vprotq
cmp
jp
insb
movsb
jmp
and
sbb
adc
ljmp
xchg
push
inc
sti
push
lcall
mov
mov
nop
mov
sbbb
xchg
testl
jl
lcall
leave
sbb
int3
std
in
fcomi
inc
insl
js
pop
lods
mov
jbe
dec
mov
rcrl
lea
ljmp
mov
sub
les
mov
cmpl
lea
iret
sbb
mov
push
shll
cld
jne
and
lods
mov
xor
dec
jbe
push
pop
mov
sub
cmpb
cld
gs
add
mov
inc
push
pop
xor
cmp
xor
loope
mov
movsb
test
adc
pop
in
sbb
mov
or
push
aas
sbb
mov
xchg
push
mov
ja
pop
movsb
pusha
lret
pop
jno
aaa
add
dec
or
jge
cli
into
sbb
push
decl
mov
pop
inc
fdivrp
xor
xchg
xor
cld
push
pop
or
test
je
sbb
inc
repz
lds
rcrl
and
xchg
fbstp
mov
lret
push
mov
les
je
mov
sbb
shll
xchg
mov
int3
cmp
xor
sbb
pop
jecxz
hlt
xor
jmp
push
ret
mov
sub
dec
out
and
enter
mov
test
jns
fnstsw
adc
push
or
add
xor
in
movsb
ljmp
adcl
mov
mov
lods
sbb
pop
rclb
in
shlb
aaa
mov
or
ljmp
lods
adc
mov
ja
jge
pop
fdivrl
fsub
and
sti
jne
xchg
lcall
or
jmp
js
fs
ret
es
mov
mov
popa
mov
or
ficomps
data16
mov
mov
mov
nop
pop
and
xor
out
fildll
dec
repnz
cmpsl
enter
or
imul
add
push
sbb
fwait
cli
sub
mov
loop
lods
jne
xor
cld
sbb
scas
cmc
ljmp
push
lret
lods
lea
push
push
cmp
sbb
sub
rorl
ds
adc
iret
mov
adc
pop
subl
add
aas
push
mov
xor
filds
into
lds
popf
pushf
es
mov
mov
dec
sahf
dec
pushf
push
sarl
dec
lea
xchg
add
aaa
xchg
popf
sbb
jae
shl
mov
mov
scas
push
mov
or
jg
and
adc
xlat
ficoms
xor
sbb
add
dec
ds
jns
mov
dec
shlb
xor
je
jbe
imul
pop
dec
pop
adc
mov
mov
xchg
mov
sbb
jo
idiv
test
sbb
cmp
jmp
pop
push
gs
stos
rorl
xor
fs
out
inc
js
xchg
mov
scas
xchg
js
mov
and
test
sub
jmp
push
lea
notb
cs
rcrl
or
fisubrs
sub
jge
sub
xchg
or
mov
lcall
lds
lahf
fadds
lods
dec
int
repz
iret
sti
roll
fistpll
arpl
jl
loop
repz
mov
xchg
stos
jbe
mov
leave
addr16
mov
call
sub
stos
rolb
out
jecxz
cs
xchg
rclb
lahf
sub
xor
push
loop
or
mov
and
das
andl
xor
fbstp
cmp
mov
ret
add
push
repnz
repnz
popa
test
lcall
pushf
mov
call
scas
orb
jmp
inc
sub
int3
jg
out
push
cmpsl
sahf
dec
out
js
cmp
ficoml
mov
sub
dec
out
add
xchg
sbb
mov
jno
iret
add
mov
idivb
cwtl
jnp
mov
mov
ret
push
and
dec
imul
adc
inc
xchg
out
and
fnstsw
sub
daa
dec
and
pop
mov
cld
pushl
or
cmp
cmovne
push
mov
sbb
sub
and
xchg
xchg
push
mov
clc
pop
mov
and
stc
or
adc
bound
in
fidivl
sub
pop
adc
and
jb
lcall
inc
fcoms
sbb
scas
sbb
pop
mov
js
sbb
push
leave
sub
mov
jl
loopne
out
rcr
loop
cmp
shl
imul
mov
lret
sahf
lahf
dec
jnp
les
in
adc
sbb
lods
fstl
mov
out
daa
or
inc
cmp
iret
insl
push
insl
orb
lds
jb
and
xor
cltd
push
pop
daa
sub
ror
cmp
mov
sahf
mov
mov
loop
movswl
pop
cmovns
or
add
add
add
add
add
inc
popf
out
enter
xor
lret
sbb
mov
and
pop
push
push
inc
popf
out
enter
inc
popf
out
enter
mov
rcl
adc
out
enter
inc
popf
out
enter
inc
popf
out
enter
iret
aaa
popf
inc
jecxz
xchg
mov
out
enter
inc
popf
out
enter
scas
add
mov
popf
out
enter
inc
popf
out
enter
inc
popf
out
enter
call
sarb
cmp
jne
and
add
adc
add
je
add
jbe
add
add
add
add
jo
add
add
mov
xor
add
pusha
add
add
add
add
inc
pop
add
add
add
add
loop
pop
popf
scas
push
mov
add
add
add
add
add
add
add
jg
inc
add
add
sbb
mov
add
add
add
or
fs
add
add
add
xorb
add
cmp
cmp
add
add
or
subb
add
add
xorb
inc
push
add
bound
add
dec
or
mov
add
rolb
or
xor
add
add
add
les
add
dec
insl
jg
sub
add
inc
add
add
add
add
add
add
addl
scas
add
add
or
icebp
lock
inc
add
inc
add
add
test
add
addl
stos
add
add
fimuls
adc
inc
add
or
subb
add
sub
add
dec
add
add
cmc
pop
sbbb
iret
jge
jl
pop
sbb
std
pop
test
adc
push
sub
test
loopne
int3
push
lret
lahf
inc
add
cmp
call
jmp
and
mov
loop
mov
and
jno
add
sub
add
lods
loope
test
cwtl
xchg
popf
inc
add
in
loopne
es
icebp
xor
jne
adc
in
js
clc
clc
pushf
pop
push
pop
aad
xchg
mov
and
inc
int
pop
sbb
aas
repnz
adc
stos
jp
cwtl
xor
inc
push
inc
fidivrs
cvtps2pi
jg
push
pop
lods
jl
ret
fwait
imul
popa
pop
sti
jb
testb
sbb
mov
dec
xchg
mov
inc
cli
jne
push
lds
sahf
jbe
sub
leave
push
jmp
and
jne,pn
sbb
mov
call
or
lock
add
shlb
jmp
and
pop
jle
imul
push
mov
repz
imul
idivb
lds
jecxz
shlb
inc
or
and
pop
pop
xchg
daa
mov
sbb
icebp
lret
insb
adc
lahf
mov
adcl
cmp
cmpsb
pop
sbb
fcmovnu
xchg
jg
hlt
loope
or
inc
popf
ljmp
jmp
loopne
enter
pop
cs
out
add
and
in
imulb
push
mov
pop
push
mov
xchg
aad
clc
pop
push
pop
lahf
cmp
dec
jle
sub
inc
or
aaa
jecxz
outsl
lahf
mov
ljmp
inc
pop
shll
mov
lds
fisubs
xor
jecxz
jmp
sbb
or
or
or
lods
outsl
ret
dec
dec
jne
jg
sar
pop
hlt
and
loope
pop
inc
sti
jnp
cmpsl
jecxz
inc
orl
cwtl
in
fs
add
cmp
cmp
outsl
push
mov
shll
fwait
jnp
and
xchg
inc
in
pop
stos
roll
add
lcall
orl
sub
cmp
sub
sub
cmpsl
mov
pop
xchg
outsl
or
outsl
clc
sub
adc
cmp
pop
sub
stos
fimuls
mov
add
inc
je
in
mov
mov
lods
pop
push
ret
mov
mov
adc
jbe
xchg
jl
data16
lcall
fldcw
inc
cmp
sub
enter
mov
in
dec
push
sbb
ret
rcrl
inc
mov
push
add
mov
cmp
inc
fnstenv
lods
fmul
aam
or
jnp
or
fldl2t
mov
in
cmpsb
xlat
jnp
push
and
sbb
cli
cmc
mov
das
xor
sub
jne
mov
fsubl
aam
imulb
sbb
lret
push
sbb
dec
push
cli
cmp
repnz
sub
push
fldt
call
cld
popa
push
inc
pusha
mov
adc
add
xor
push
nop
scas
cmp
pop
loop
pop
xor
pusha
cli
cmp
inc
jne
sbb
add
push
shrb
mov
add
pop
jns
sbb
jle
int3
adc
push
inc
cmc
sub
loopne
inc
adc
cmp
xor
push
arpl
xchg
movsb
add
xchg
enter
mov
sub
sub
pusha
rcrl
dec
roll
dec
mov
arpl
and
pop
cmp
push
cmp
mov
mov
pop
add
jge
jns
sbb
sub
cmc
or
xlat
dec
push
sbb
lock
scas
pop
aaa
pop
out
test
dec
js
lcall
sti
mov
jle
push
inc
jmp
sbb
push
lock
add
stos
mov
dec
in
jg
xchg
jp
and
push
mov
add
je
xchg
sti
nop
arpl
inc
adc
out
cwtl
sbbl
xor
popf
lret
cmp
lea
setp
pop
add
dec
in
mov
das
xor
push
out
jb
push
push
xor
add
stos
mov
xchg
test
insl
inc
aam
push
cmp
jl
inc
into
push
pop
arpl
loope
add
sbb
mov
adc
pop
or
xchg
push
les
push
adc
and
loopne
dec
inc
mov
test
test
xchg
lea
jb
jmp
adcl
je
mov
jb
lds
stos
or
aaa
mov
enter
inc
pop
test
test
push
xchg
fwait
mov
out
nop
cmp
or
scas
subb
jno
sub
push
inc
nop
adc
mov
mov
addr16
js
sbb
jnp
arpl
jne
in
xor
pop
xchg
mov
mov
dec
popa
xor
inc
loope
and
mov
mov
push
cmc
sbb
xor
push
dec
mov
mov
in
xchg
pop
jnp
mov
cltd
sahf
sub
adc
cld
jo
and
xor
add
movsl
sub
loop
sub
and
mov
ficoms
loopne
push
rcrl
test
daa
sbb
add
int
or
jno
fwait
xchg
or
dec
fistpl
pusha
insb
push
add
jmp
inc
test
add
mov
addb
in
into
xchg
or
test
xor
clc
push
cmpsl
leave
insb
xchg
inc
push
jbe
lods
in
jo
push
insb
hlt
data16
hlt
xchg
or
push
out
cmpsb
test
in
movsl
enter
in
shl
add
test
scas
or
sti
cwtl
jae
pop
pop
pusha
ja
mov
pop
inc
fcoml
daa
or
loope
adc
push
mov
out
mov
test
xchg
mov
mov
arpl
data16
fs
push
das
inc
and
adc
sbb
cmp
dec
inc
sbb
sbb
les
pop
or
movsl
outsb
js
mov
mov
ret
cmc
outsb
pop
push
mov
enter
popf
push
cltd
lock
js
repnz
test
movsl
clc
loopne
into
cmpb
gs
adc
cmp
jns
pop
push
jp
adc
adc
push
push
aaa
js
xchg
sbbl
xor
rcll
or
fnsave
lret
mov
and
sub
push
adc
subb
xlat
inc
push
outsb
mov
daa
ret
out
rolb
dec
sbb
or
jns
nop
fcoms
add
stc
fcompl
fistpl
shrb
xor
ljmp
dec
jmp
fld
pop
cs
and
add
movsb
mov
cltd
das
pushf
fimull
fwait
jae
stos
sbbb
jb
and
std
xchg
xor
dec
push
jnp
adc
sbb
neg
dec
adc
es
iret
pop
cmpsl
mov
xor
mov
jns
adc
pusha
push
and
jmp
adc
ss
cmpsl
mov
xor
insl
insl
popf
mov
sub
adc
inc
fwait
jae
jle
lret
mov
ss
cmp
imul
ficoml
pop
rclb
dec
cltd
popf
aas
test
bound
test
mov
lds
dec
xchg
fisttpl
cmp
and
dec
xor
xchg
pop
jecxz
cmp
dec
shr
hlt
xor
movsb
rorl
mov
mov
or
pop
aam
pop
cmp
mov
out
scas
cld
lods
in
xchg
insb
lcall
ror
shlb
push
xlat
jecxz
lcall
or
aas
out
push
jmp
imul
fsubr
fldl
sahf
sar
aam
fdivl
mov
or
add
fists
sarb
scas
fsubrp
xchg
or
xor
movsl
bound
out
mov
call
in
mov
adc
push
pop
mov
push
xchg
lcall
jg
xor
cmpsl
stc
movsl
adc
cmp
and
jno
sub
mov
ds
lea
pop
outsl
sahf
dec
loope
cltd
add
jbe
jl
jmp
sub
hlt
pop
dec
sti
iret
xchg
loope
subb
push
push
das
sub
pusha
into
inc
or
mov
mov
xchg
loopne
pop
mov
xor
in
jnp
hlt
shrb
pop
addr16
adc
and
int3
sbb
or
cmp
out
test
arpl
cmp
sub
cmpsb
xchg
and
daa
aad
aaa
movsb
add
mov
or
cmp
jno
sbb
pop
xor
xchg
pop
pop
inc
fimuls
test
cwtl
rorl
xor
cmp
das
nop
in
fpatan
nop
fnstcw
jp
pop
pop
xchg
insl
mov
mov
clc
jmp
sub
je
rcll
jge
outsb
pop
sahf
push
cmpb
inc
ret
pop
cs
sub
push
mov
push
cmc
cld
adc
cmpsl
pop
inc
es
fstpl
cmp
nop
inc
fldcw
insl
test
inc
push
pop
push
pop
adc
lods
xorb
jb
sti
push
je
repz
in
js
mov
repnz
cmp
sbb
decl
pop
jp
mov
test
xor
adc
dec
xlat
mov
push
and
aaa
dec
mov
jmp
repz
xor
sahf
mov
jmp
mov
xchg
fisttpll
insl
jg
sub
xchg
push
jmp
adc
stos
push
test
pop
fcoml
into
xor
in
lcall
addr16
and
jno
int
in
adc
sahf
lock
lods
sbb
or
inc
xchg
ss
xchg
cwtl
lods
xchg
jle
inc
dec
daa
ja
pop
pop
adc
movsb
test
hlt
call
enter
ja
outsl
sbb
sbb
mov
gs
xchg
inc
cmp
pushf
loop
shlb
loope
sbb
mov
mov
pop
lcall
lock
scas
xor
sar
int3
test
lock
mov
rorb
jg
sti
divw
bound
inc
and
hlt
not
sti
fs
sbbl
mov
lods
xchg
int3
insb
scas
push
xor
xchg
xchg
and
mov
cmp
pop
adc
pop
ror
pop
jae
push
cwtl
xchg
inc
dec
jno
sti
xchg
adc
mov
xlat
mov
add
mov
call
inc
bound
std
dec
xchg
out
ds
dec
mov
loopne
or
scas
dec
jae
xor
mov
push
insl
and
mov
lds
aas
cld
cmc
xchg
jge
xchg
xor
add
cmp
sbb
mov
dec
insl
mov
lret
stc
mov
jbe
bound
loope
cmpsl
cmc
cmp
xlat
push
sub
mov
inc
and
adc
in
aaa
cmp
movsb
push
lods
sub
pushf
roll
in
ret
stos
ret
aaa
int3
sub
ret
mov
orb
cmp
adc
nop
gs
push
das
adc
cmp
push
inc
movsw
pop
jl
sbbl
stos
sbb
sub
cmc
in
sub
pop
ret
jmp
fisttpll
sbb
and
push
rcrl
aad
mov
inc
and
sub
jo
fcomip
jo
xchg
add
dec
xor
jge
add
pusha
mov
pop
popf
stos
jno
hlt
xchg
mov
pop
je
clc
sub
add
cmp
mul
xor
cmp
sbb
out
fidivrs
imul
jge
sub
lret
cmp
hlt
inc
pop
jg
clc
and
cltd
inc
dec
shll
jne
and
adc
fistpl
pop
outsb
mov
xor
neg
sub
test
je
sti
sbb
pop
jmp
xchg
popf
sti
sub
xchg
or
and
loop
mov
lods
dec
int3
and
mov
adc
inc
sub
test
clc
inc
push
pop
add
lods
jp
dec
mov
dec
push
cli
outsb
les
pop
add
mov
and
fldcw
sub
mov
or
cld
xor
std
jbe
fidivrs
pop
outsb
insl
sub
inc
decb
mov
popf
jmp
imulb
aas
push
fcomip
sbb
test
pop
outsb
mov
fsubs
mov
sbb
cmpsl
scas
pushf
inc
cmp
shl
lea
out
aad
cmp
sti
and
fs
icebp
mov
push
xor
pop
cmpsl
lods
popf
or
sub
int
lret
mov
xor
dec
movsl
push
mov
inc
dec
cmpsl
dec
push
and
xchg
insl
sub
addr16
mov
adc
std
push
je
lea
lock
in
push
mov
inc
push
fstps
xchg
ds
push
out
add
loopne
arpl
fidivrs
movsl
cmp
in
xor
mov
test
adc
or
ret
pop
inc
pop
ret
bound
hlt
roll
pop
mov
fcmovne
or
outsb
sub
push
xchg
insb
push
sbb
mov
out
ljmp
cmp
fs
dec
adcb
inc
loop
xchg
push
imul
and
inc
movsb
mov
sbb
inc
mov
sahf
test
jecxz
imul
movsb
cwtl
push
jmp
inc
sbb
mov
popa
adc
adc
lds
sti
out
or
sbb
jae
jecxz
lahf
stos
repnz
lock
rcrb
and
adc
stos
hlt
data16
inc
f2xm1
shll
dec
in
hlt
jne
popa
mov
mov
mov
fnsave
mull
movsl
out
sbb
vorps
or
aam
call
mov
fcoml
enter
mov
jne
rcl
sub
sbb
out
cld
cmp
jge
nop
mov
test
xor
loop
iret
out
lret
pop
cli
adc
mov
pop
mov
xchg
jl
sub
inc
sub
sar
pusha
rorl
xchg
repz
lret
cld
sub
xor
dec
mov
mov
jg
push
sbb
in
sbb
sti
push
add
popf
bnd
fstpt
xor
int
ret
fldenv
xchg
adc
add
jo
arpl
pushl
testl
xchg
xchg
out
clc
clc
lahf
jo
or
xchg
rorl
cmc
and
mov
mov
call
leave
fistps
fnstenv
jnp
cwtl
mov
add
outsl
dec
inc
gs
push
shll
fdivrl
sub
xchg
mov
xchg
aaa
fcompl
cmp
fiaddl
push
mov
jmp
ret
es
mov
fldt
push
inc
mov
xchg
call
mov
xchg
shrl
mov
daa
pop
push
in
aam
and
in
aam
shrl
inc
or
ja
sub
cmp
hlt
adcl
std
in
push
lods
pop
lds
ja
jecxz
adc
aad
or
add
decb
xchg
sti
sub
xchg
push
aaa
adc
jg
or
pop
jns
mov
ljmp
jmp
mov
and
std
jecxz
pop
pop
ffree
sub
inc
or
dec
decl
fwait
mov
xor
mov
aad
pop
pop
adc
aad
inc
cs
mov
insb
jne
cld
cmpsb
cmp
push
adc
or
xor
jb
pusha
push
movsb
aad
mov
fadd
mov
addb
dec
daa
repnz
jg
mov
shl
mov
call
and
bound
xor
sbb
or
jl
fadds
cmpsl
mov
push
gs
scas
fmuls
arpl
test
out
add
jbe
aad
adcl
daa
lods
aad
or
inc
cwtl
mov
inc
xchg
leave
and
je
popf
inc
movsb
sub
es
fldcw
mov
bound
rorl
rol
flds
aaa
sbb
mov
sbb
add
sbb
mov
icebp
notl
jg
mov
mov
test
mov
push
js
cs
fs
test
shlb
push
inc
push
cmp
xor
mov
int
shrl
fdivl
loopne
jp
mov
mov
ja
mov
aaa
mov
jb
cmpsl
cmp
mov
and
aaa
lods
inc
int3
pop
jecxz
push
mov
jne
cmp
push
push
pusha
pop
sub
xchg
aas
mov
lahf
sbb
mov
ret
popa
lods
sub
test
rol
jmp
je
cmp
movsb
rorl
adc
imul
pop
shll
inc
ja
push
mov
out
xchg
sub
mov
pop
out
cmp
dec
inc
hlt
cli
mov
sub
jmp
sbb
mov
add
xchg
in
aam
in
adc
sub
push
sbb
xchg
loop
ret
jmp
and
and
loopne
lock
ror
and
xchg
cld
stc
adc
test
inc
ret
lahf
cmc
pop
cwtl
cs
cmp
ret
lea
xchg
stc
ss
insb
hlt
mov
gs
push
int
adc
imul
outsb
fnstenv
fdivs
mov
add
pusha
imull
ffreep
inc
jmp
inc
aam
imul
into
imul
lock
cmp
xchg
rcrl
xchg
pop
xchg
inc
scas
lret
leave
stc
push
aas
and
dec
sbb
into
pop
xor
or
push
cmpl
push
sbb
inc
outsl
xor
sti
lret
cmp
bound
stc
mull
rcrb
jns
fadds
mov
mov
add
pop
adc
dec
add
pop
pop
mov
mov
aas
aam
aam
pusha
adc
xlat
jl
cmp
fmull
lahf
insl
fstl
movsb
into
jge
adc
push
inc
lock
inc
push
fadds
insb
or
pop
mov
orps
inc
sub
xchg
xor
mov
pop
rcl
mov
mov
daa
lods
in
fistpl
rorb
scas
fimull
add
sahf
in
adc
in
std
loope
jne
pusha
mov
jno
movsl
mov
xor
outsl
aaa
aas
sahf
bound
pop
test
stos
shl
and
inc
sub
jno
pop
lret
mov
es
pop
cmp
cltd
xchg
mov
stos
xor
ds
sub
adc
je
xor
pop
aas
repnz
repnz
mov
lods
jmp
cltd
xchg
loopne
push
lret
flds
in
stos
aam
out
orb
mov
adc
shlb
div
sbb
js
jmp
dec
aam
push
fs
mov
mov
mov
mov
and
dec
dec
push
jl
shrl
cli
ret
inc
sbb
push
push
xchg
push
xor
pusha
loopne
rorl
add
and
mov
mov
pop
ret
daa
push
int
in
jmp
lea
push
ret
mov
or
sti
xor
sub
xor
repnz
and
push
adc
xchg
jne
scas
stc
add
and
nop
fmul
push
mov
test
faddl
mov
xchg
xor
leave
push
mov
icebp
roll
or
adc
jnp
in
mov
test
inc
fsubl
mov
movsb
lcall
es
test
lods
in
test
lret
or
mov
test
or
repz
icebp
cmp
outsl
inc
push
loope
adc
std
in
mov
jp
loopne
xor
sbb
jmp
imul
xchg
insl
push
aas
lcall
test
imul
and
mov
out
or
ret
dec
push
dec
pop
pop
inc
inc
pop
daa
popl
iret
pop
xchg
lcall
sub
xchg
test
cmpsb
int3
movsl
shr
push
mov
psubb
shl
movsl
in
jae
jle
jecxz
mov
or
push
dec
pusha
mov
stos
cld
jecxz
test
adc
adc
ss
lock
mov
mov
inc
xchg
imul
mov
and
in
jge
test
cld
jbe
aad
push
stos
mov
ret
xor
mov
out
es
test
and
mov
xchg
imul
cltd
lret
adc
insl
jns
mov
mov
in
mov
fcoml
cmp
jp
js
mov
push
mov
add
push
xchg
in
add
add
add
adc
mul
into
sbb
fdivrs
inc
nop
lret
bound
mov
je
or
mov
faddp
inc
fistpl
pop
test
pop
mov
sbb
pavgb
xor
fnclex
xchg
sahf
xchg
lret
arpl
sub
pusha
push
call
push
mov
inc
insl
sbb
inc
xorb
int
cmpsb
mov
stos
mov
xor
mov
icebp
ficoms
test
cwtl
xor
and
daa
negb
shlb
out
jmp
and
lahf
xchg
rcll
out
fisubrl
and
popa
mov
jne
insb
hlt
fucom
dec
pop
xchg
scas
adc
insb
jnp
adc
xchg
jp
ljmp
cmp
inc
xor
jne
push
jne
aaa
or
cld
sbb
test
fidivrl
rorl
test
icebp
fwait
push
testl
sbb
push
fs
mov
mov
jno
inc
ret
lcall
loopne
adc
mov
jbe
shlb
fnsetpm(287
push
dec
sub
sbb
push
cmp
mov
fcmovnbe
adc
pop
adc
and
aam
andl
rsqrtps
pushf
cmc
mov
ret
or
loope
movsl
mov
movsl
gs
add
repnz
insb
xchg
mov
lods
sbb
sub
mov
jle
xor
sti
jecxz
dec
or
push
sub
cmpsb
in
push
shrl
jge
pop
inc
inc
sti
aam
mov
ficoms
xor
sahf
aaa
mov
js
dec
psadbw
pop
mov
lods
insl
negl
or
cmp
scas
fwait
in
push
cmp
and
sbb
cmpsb
stos
xchg
ret
subb
test
mov
pop
and
ret
mov
sbb
xchg
push
aaa
pop
xchg
insl
imul
mov
inc
push
dec
xor
xlat
aas
sahf
inc
push
cmc
sbb
pusha
xchg
and
xor
idivl
je
sbb
out
arpl
xchg
in
fcmovnbe
cld
je
xor
and
inc
fidivl
fidivl
cmp
idivl
sub
lock
sbb
shl
stos
jmp
in
push
jae
inc
and
daa
test
pushf
lds
mov
lods
cs
adc
mov
stc
int
push
dec
cmpsl
dec
in
push
insb
or
outsl
add
popa
insb
push
stos
sub
xchg
das
insl
mov
cmc
rcrl
sahf
jo
inc
scas
jecxz
jmp
rol
add
loop
vpcmpgtd
sbb
add
mov
sub
sahf
jge
bound
arpl
xchg
add
cmp
pop
jne
test
inc
and
or
add
int
jg
cmp
xchg
in
lock
mov
mov
xchg
cmp
loope
fbld
sar
mov
mov
xchg
or
and
iret
mov
pop
mov
ficoml
jbe
mov
shll
je
sub
addr16
xchg
xchg
sbb
inc
xchg
push
jecxz
jl
ret
insl
push
int
pop
or
movsl
ds
sarl
inc
jnp
and
test
add
mov
push
in
sbb
fwait
movsl
mov
and
aas
js
xchg
push
imul
sub
add
cmp
jo
cmp
jg
sahf
inc
sbbl
sbb
hlt
push
jo
jne
das
fdivl
push
inc
sub
or
lret
in
mov
and
or
xor
les
jo
sub
xchg
jge
xchg
mov
adc
iret
cmp
popf
jg
sub
loop
add
mov
out
pop
fistpll
push
mov
fucomip
push
and
data16
icebp
ss
clc
repnz
dec
push
and
mov
pop
fnstsw
inc
je
fisubl
mov
insl
outsb
jae
daa
lret
pop
adc
xlat
ljmp
adc
push
push
push
mov
adc
add
ret
push
push
decb
fisttps
cwtl
cmp
out
out
mov
xor
sub
cmc
cmp
or
fdiv
aas
mov
clc
xchg
sbb
dec
mov
cltd
dec
jge
add
cmp
fistpll
mov
test
pop
mov
dec
cmp
mov
inc
int3
sbb
and
jne
lea
mov
nop
test
faddl
fdivrl
push
mov
or
in
hlt
and
or
mov
inc
sti
gs
daa
mov
loop
xchg
mov
pop
push
fmuls
inc
lcall
pop
leave
mov
mov
fnstcw
lock
daa
xchg
div
fsubs
dec
cmpsb
cmpsb
mov
sub
jb
mov
xchg
pop
movsl
pop
iret
sub
fldt
mov
cli
and
mov
rcl
push
fst
pushf
pop
lea
fisttps
push
inc
add
insb
outsl
dec
repz
jno
shr
mov
mov
mov
cmpsb
std
in
enter
mov
push
roll
dec
inc
mov
xlat
sub
xchg
cmp
push
dec
add
cmp
pop
mov
fistps
lcall
dec
imul
jecxz
inc
cmpsl
mov
cmpb
mov
jbe
pop
fdivr
sub
and
ja
push
roll
and
fisubrl
mov
jo
ljmp
mov
mov
jmp
loopne
lea
adcl
shlb
fldl
sub
cmc
mov
xchg
fstp
test
xchg
xchg
aad
mov
mov
push
pop
lcall
sbb
cli
cmpsl
mov
mov
add
and
mov
inc
inc
mov
jo
fldcw
dec
data16
lret
clc
mov
jno
sbb
int
cmp
sarb
imul
mov
inc
lds
push
fwait
and
mov
shl
imul
push
int3
lret
int3
fsubr
sub
jne
in
cmp
pop
xchg
in
ss
mov
adc
cmp
push
loope
mov
xor
addr16
pop
push
pop
mov
in
pop
inc
sub
xor
dec
mov
lcall
cmp
inc
jge
mov
stos
xlat
xchg
in
js
data16
int
popf
lds
loopne
shll
fdivrl
cmp
mov
mov
out
lea
xor
sub
and
xchg
dec
or
loop
or
fdivrs
dec
out
and
sub
sbb
sub
push
and
mov
mov
jns
add
fsubr
repnz
inc
movsb
loopne
dec
aas
mov
sahf
mov
mov
lret
fsubr
xchg
ljmp
mov
jno
insb
lock
mov
adc
mov
lahf
jnp
xchg
mov
push
and
cmpl
mov
movsl
adc
cltd
mov
int3
loop
add
or
insb
mov
je
mov
dec
shrl
inc
sub
xor
cmp
jno
mov
ds
lahf
bswap
pop
dec
clc
imul
dec
punpcklwd
mov
div
movsb
js
ss
adc
jnp
hlt
and
cmpsl
inc
lcall
out
jl
adc
sbb
sub
insl
adc
cltd
call
push
or
imul
movsl
enter
lret
inc
mov
mov
sbb
inc
cmp
cmp
lds
inc
mov
xchg
ret
test
cmpb
pushf
xchg
scas
ja
shl
push
push
arpl
enter
mov
les
imul
jo
test
pop
rcll
cld
mov
jp
mov
enter
jl
int
xchg
inc
adc
or
add
pushf
add
bound
les
pop
adc
cmp
push
mov
inc
stos
mov
mov
push
xchg
loop
mov
fsubrl
sti
jo
imul
insb
xchg
mov
cmp
inc
daa
fsubs
js
dec
pop
fcomp
jbe
pop
divb
orb
shrb
addr16
cwtl
jp
xchg
sbb
sub
imul
nop
push
cmpsl
jmp
push
sbb
js
xchg
mov
push
sbb
ljmp
pusha
add
mov
mov
icebp
adc
mov
cmpsb
inc
popa
jg
push
in
ljmp
add
es
in
push
jno
mov
lods
fs
loopne
insb
pop
jl
cmp
sbb
mov
inc
dec
inc
addl
adc
sub
arpl
addr16
inc
fwait
and
in
rcrl
xor
adc
bound
cmp
rcrb
lcall
popa
in
pop
ret
push
mov
cmp
repz
enter
dec
dec
mov
std
aam
pop
xchg
or
ljmp
in
int
call
dec
fwait
cmpsb
jmp
pop
sbb
adcl
aas
lods
push
push
and
cltd
das
fsubrp
call
lahf
or
add
rol
pop
xor
push
ret
mov
jbe
daa
scas
lds
sub
pop
aaa
ret
stos
sbb
movsb
outsb
sti
mov
mov
int
out
pop
pusha
xchg
jg
sub
mov
dec
push
je
jl
add
and
sub
test
push
jno
mov
mov
pop
mov
and
mov
out
pop
fcoml
push
hlt
in
movsb
inc
fsubrp
aaa
push
adc
out
arpl
cmpsl
adc
imul
lahf
imul
xchg
jb
add
imul
dec
mov
sub
insb
stc
push
adc
mov
ds
pop
sbb
cs
inc
fldt
mov
lods
lret
lea
mov
push
push
sbb
roll
ds
inc
jno
cltd
neg
xlat
rcr
ja
ss
ja
sar
pushf
mulb
xchg
pushf
das
call
add
cmp
or
shll
mov
fmull
xchg
jecxz
iret
mov
fistpl
cs
or
daa
adc
addr16
insb
pop
shl
mov
sahf
adc
cli
ficoms
insb
ja
outsw
push
sti
sub
xor
adc
lods
sahf
inc
adc
xor
pop
sub
inc
das
mov
ficomps
lcall
pop
xor
insl
loope
sar
arpl
popa
add
or
frstor
mov
lcall
hlt
movsb
out
inc
mov
repz
dec
out
mov
inc
filds
ss
add
test
push
cwtl
fstps
js
mov
or
jno
orb
les
faddl
cmp
nop
je
add
gs
sbb
out
cli
call
and
cmp
mov
and
daa
dec
in
mov
push
call
das
jecxz
jae
inc
leave
stos
mov
aas
in
ret
imul
dec
loopne
push
dec
push
pop
pop
pop
lahf
mov
xchg
mov
out
cmp
into
and
mov
push
mov
insb
ljmp
xchg
jno
dec
xor
pop
or
and
sub
pop
lea
imul
int3
int3
es
pop
scas
mov
inc
leave
rcll
inc
cmc
ljmp
dec
and
adc
ljmp
xchg
sbb
adc
into
in
pop
xor
outsl
lock
popf
imul
xor
movsb
and
dec
imul
idivl
imul
sbb
mov
xchg
std
ret
mov
mov
hlt
clc
cli
insb
scas
popf
insl
mov
mov
pop
in
push
inc
xchg
jmp
clc
adc
add
mov
push
jle
into
mov
popf
xor
and
mov
pushf
in
xor
popa
shlb
push
mov
nop
aas
adc
xchg
mov
xchg
sahf
adc
jno
das
ret
mov
test
xor
test
pop
int
lret
ljmp
bound
pop
xchg
xor
xor
and
fdivrl
lret
shlb
out
jg
sbbb
dec
adc
push
jae
cmp
sbb
sub
outsb
mov
les
mov
sub
mov
fsub
lahf
movsb
pop
es
cs
adc
sti
inc
pop
or
xchg
sbb
imul
inc
dec
lret
cmp
sub
into
mov
sub
push
test
xor
popf
ret
or
inc
aaa
mov
outsl
jns
xchg
xchg
dec
lods
xor
cltd
xchg
inc
push
cmpb
es
mov
orl
xor
imul
pushf
clc
add
pop
loop
arpl
cmp
adc
fwait
dec
sub
out
aam
mov
pop
adc
and
shrb
scas
in
psubusb
adc
in
aaa
cmp
xor
adc
pop
and
mov
jmp
ret
mov
repz
daa
xlat
cmp
es
mov
xor
sbb
jle
dec
je
pop
dec
pop
pop
dec
inc
inc
jecxz
inc
movsb
and
sti
dec
std
imul
in
mov
jp
jnp
cwtl
xchg
testb
mov
rol
pushf
andb
nop
jbe
jge
cmp
pushf
fstl
xchg
jnp
push
fstpl
aaa
jo
or
cmpsb
push
sahf
in
pop
pop
or
jge
mov
adc
pop
jne
mov
xchg
sub
cli
push
or
insb
pop
cmp
xor
js
lret
and
mov
inc
push
lods
scas
jmp
mov
xchg
mov
or
sbb
or
dec
scas
cs
pusha
nop
pop
cmp
sbb
xorb
lods
xchg
faddl
and
xchg
rclb
dec
dec
push
inc
mov
lods
rcl
and
cli
test
mov
cmpsb
sbb
xchg
jecxz
int3
jae
push
dec
xchg
inc
sbb
dec
pop
xor
out
dec
ret
inc
lds
pop
pop
mov
mov
scas
and
in
push
dec
adc
adc
adc
and
adc
xchg
aaa
push
pop
loopne
rcr
fisttpll
push
lea
je
pop
inc
pop
mov
adc
xchg
ja
iret
dec
dec
lret
hlt
xchg
pop
jbe
sub
adc
adc
dec
sub
pop
mov
loop
daa
aaa
in
add
mov
pop
mov
dec
int
mov
jmp
faddl
incb
clc
icebp
jp
divl
and
jbe
inc
pushf
cld
xchg
pushf
fiaddl
adc
lret
ljmp
ja
aam
xchg
dec
push
data16
cmp
loop
ficoml
sub
loope
jnp
mov
dec
push
lock
pop
cmpsl
pop
fidivl
bound
pop
dec
mov
pop
push
inc
movsl
sbb
inc
mov
into
xor
daa
pop
mov
into
aaa
xchg
lahf
stos
pop
sbb
in
add
sbb
out
jl
pushf
scas
xor
testl
xchg
fldl
add
sub
and
sub
inc
or
mov
mov
xchg
dec
mov
xchg
mov
jo
jb
xor
jle
cld
shrb
pop
hlt
arpl
out
in
xorl
lods
xchg
lret
cmpsb
cs
adc
lret
aas
mov
adc
scas
sbb
sbb
in
ss
ds
nop
fldl
xchg
rolb
sti
push
mov
dec
inc
cmp
add
mov
xlat
mov
and
arpl
pminsw
ret
mov
mov
je
popf
addps
jmp
jb
leave
fcoml
mov
mov
bound
or
sub
mov
data16
xchg
jns
dec
jmp
movsb
decb
sti
mov
xchg
pop
push
jne
roll
jb
xor
notb
inc
aaa
and
clc
fs
sub
sbb
iret
push
jo
dec
iret
and
test
iret
loope
push
push
or
mov
arpl
or
or
out
and
cmc
adc
jb
xchg
mov
and
cs
and
int3
or
hlt
xor
or
out
loop
add
mov
pop
adc
fcompl
ljmp
and
sub
adc
fdivl
jne
jmp
fimull
xor
mov
adc
mov
jecxz
loop
movsb
push
pop
movsl
lret
inc
popa
dec
sti
in
movl
mov
rorl
aad
shrb
fdivl
jmp
sbb
insl
push
cmp
add
inc
arpl
outsb
adc
aas
xchg
popa
sbb
pop
roll
test
pop
fnsave
test
adc
lock
inc
fs
pop
fcmovnb
inc
ret
rcrb
aas
aam
scas
or
icebp
lea
jns
lret
mov
loop
push
leave
jmp
xchg
adc
lods
mov
jo
push
or
mov
sahf
fsubr
xor
jb
xor
cld
iret
mov
dec
xchg
adc
mov
jp
fcmovnbe
lret
subb
aas
cmpsb
fistpl
sbb
out
push
sbb
pop
cmp
adc
xchg
or
repnz
xchg
sarb
pop
xor
ret
dec
rcr
pop
cmp
sbbl
add
push
lock
xor
xchg
adc
jg
and
movsl
mov
ficoml
pop
sarl
xchg
shl
movsl
in
xor
fistpll
dec
jnp
insl
jnp
leave
adc
jg
xchg
push
rcrl
out
in
daa
lock
push
movsl
out
stos
and
mov
fst
mov
lods
cmp
push
sub
push
addr16
xchg
out
pop
pop
fldcw
push
cmp
jecxz
and
xchg
adc
mov
sbb
outsb
aad
xchg
push
jmp
lea
push
push
cwtl
movsb
and
mov
jno
dec
ss
xchg
jae
movsl
mov
stc
dec
xor
jp
sbb
pop
lret
inc
xor
cli
mov
pop
shlb
ljmp
mov
sahf
push
int
adc
xchg
push
in
or
rcll
clc
loop
xchg
mov
scas
mov
add
mov
pop
mov
sbb
dec
add
inc
andl
and
clc
test
push
inc
inc
daa
popl
inc
mov
fsubrp
sbb
scas
dec
call
add
push
inc
cmp
out
dec
dec
mov
xchg
dec
cmp
mov
dec
cmp
and
xchg
dec
sbb
and
xor
dec
push
cmp
pop
and
or
call
call
sub
int
xchg
stc
fwait
out
cs
test
mov
inc
out
hlt
int3
adc
inc
test
mov
or
cltd
cmp
negb
mov
cmpsb
daa
insb
xor
outsl
adc
jmp
mov
movsb
push
xchg
pop
fsubrl
and
push
jae
popa
je
mov
in
scas
mov
mov
outsl
rolb
popa
movb
cs
add
fcomps
jle
dec
in
imul
or
xchg
mov
jl
push
sub
dec
lea
mov
aad
xchg
sub
push
add
fisubrs
sahf
pop
mov
adc
mov
pop
cmp
mov
outsl
cwtl
cwtl
popf
mov
fs
sbb
mov
jmp
mov
xor
mov
jns
out
fimuls
pop
lock
pop
vpunpckhbw
pusha
add
jae
fsubr
xlat
insb
scas
lret
sub
outsl
sbb
add
mov
sbb
jae
ds
sub
xor
pop
shl
addl
jg
cmpsl
out
cmp
push
popa
sti
fwait
jle
cwtl
mov
jnp,pn
and
mov
mov
mov
lock
cmp
xor
push
and
xchg
push
sub
stos
lret
push
xor
rcr
dec
cli
jp
aad
cmp
mov
shrb
leave
scas
push
xor
test
cmp
or
mov
rcr
subl
sarl
test
push
data16
push
cltd
aaa
push
xor
pushf
pop
in
mov
xchg
jbe
push
mov
shrl
lea
xor
xor
or
ficomps
xchg
mov
call
or
mov
shrb
ss
pop
cmc
mov
push
xchg
std
adc
and
aad
lods
push
repnz
pop
sti
hlt
jl
cmc
cltd
lock
stc
xchg
pop
mov
cmp
xchg
es
and
cwtl
imul
ret
subl
push
fnstenv
in
jmp
stos
adc
idivl
push
aad
xchg
cmc
push
movsb
xchg
cmp
arpl
lea
mov
adc
cmp
mov
jb
outsb
push
fwait
js
inc
decl
mov
cmpsl
mov
or
insl
test
mov
cltd
fildll
or
loopne
icebp
add
leave
xor
mov
loope
into
mov
xchg
lcall
xor
lods
out
test
scas
add
scas
cmp
push
mov
or
push
out
stos
dec
scas
inc
inc
or
idivb
lods
subb
clc
sub
mov
out
pusha
cs
mov
push
push
or
je
rolb
dec
push
into
in
lcall
and
out
push
push
sarl
dec
andl
popf
inc
rclb
lret
int
mov
xor
mov
pop
lods
pop
adc
lcall
mov
mov
push
outsl
and
push
int
outsl
outsl
out
jae
or
and
std
fsubrp
add
jne
ljmp
clc
jo
and
push
lcall
pop
push
jnp
shlb
jp
loop
or
stos
sti
xchg
jnp
lods
ds
lds
ret
mov
insl
dec
jmp
cld
mull
xor
and
leave
add
push
sbb
arpl
rol
sbb
insb
roll
cmp
cmp
adc
cmpsl
pop
pushf
pushf
mov
push
mov
adc
cltd
rcrb
outsb
shrb
xlat
pop
dec
jmp
or
shl
sbb
and
xlat
testb
sti
jne
jmp
imull
frstor
cmpsl
outsl
push
sub
pusha
mov
adc
test
pop
popl
adc
xor
mov
ja
pop
stos
into
testl
or
lds
dec
dec
loop
pushf
xchg
adcl
sub
outsb
adc
xchg
pop
ret
hlt
enter
test
fwait
loop
push
test
sub
and
roll
fcomps
adc
add
rcl
cmp
out
dec
neg
and
pop
inc
xchg
dec
push
hlt
int3
xchg
inc
les
fcompl
or
loope
mov
push
and
dec
cmp
es
pop
sbb
xchg
push
lcall
nop
and
xor
subl
jns
cli
dec
or
jnp
sbb
ja
xchg
je
imul
insb
and
inc
adc
es
lods
cmp
add
popf
xchg
inc
mov
das
das
movsl
test
and
mov
stos
mov
popf
mov
outsl
mov
out
and
pop
cmp
fsubrl
inc
insl
mov
leave
mov
xor
mov
mov
push
nop
cli
fisubrs
test
lds
icebp
mov
pop
jmp
ss
out
dec
sti
ror
sub
imul
ds
xchg
mov
pop
cmpsb
pop
lret
mov
mov
loop
orl
mov
inc
mov
addr16
mov
xor
mov
jo
adc
push
ficompl
inc
mov
imulb
lods
sbb
jae
push
cmp
mov
inc
xchg
in
and
in
mov
jge
into
outsb
mov
xor
mov
addb
xchg
pop
pushaw
jo
out
sub
or
mov
mov
jg
cli
add
das
push
and
lods
dec
adcb
ss
int3
inc
test
call
shll
fsubs
and
inc
sbb
popl
into
jle
and
xor
inc
popf
addr16
test
notb
push
test
cmp
mov
cltd
add
enter
dec
inc
js
jno
fsts
out
push
dec
mov
push
icebp
inc
iret
or
cmp
ds
test
xchg
pop
sub
jns
dec
mov
lahf
fsubr
push
ja
or
aaa
push
xlat
dec
lds
xchg
xchg
dec
push
push
stos
out
lods
fildl
xchg
js
push
fsubrl
test
repz
sub
push
pusha
fistpll
int
lahf
imul
xor
dec
call
or
jge
mov
pop
lods
adc
into
add
or
pop
xchg
xor
fbstp
out
xchg
test
xchg
sub
out
in
iret
jl
aad
shld
cmp
mov
mov
sbb
cmp
inc
cld
sub
cmpsl
test
dec
xor
ss
scas
addr16
jns
push
mov
aad
roll
out
leave
dec
dec
outsl
and
lds
jmp
jnp
cmp
in
in
jns
mov
push
jae
ret
add
jmp
test
push
mov
mov
sub
sbb
imul
and
xor
popf
mov
pop
mov
xchg
loopne
add
sub
dec
jb
pop
add
adc
dec
sub
add
test
or
fsubrp
data16
or
cmp
clc
hlt
dec
clc
xor
and
mov
mov
and
add
dec
nop
xchg
sbb
cmp
scas
mov
shr
push
xchg
jae
and
fdiv
pop
push
out
jo
pop
xchg
repz
xchg
aaa
cmp
adc
repnz
push
cs
aad
shl
rol
mov
add
stos
or
hlt
enter
out
imul
sub
pop
aas
push
ds
ja
cmp
inc
ret
xchg
dec
and
adc
or
dec
cli
adc
mov
testl
divb
dec
cwtl
xchg
mov
or
adc
clc
push
add
std
adcb
in
push
lahf
ss
ret
push
in
mov
push
popf
cld
mov
pop
mov
test
sbb
ljmp
inc
test
clc
cld
or
pusha
aad
xlat
sub
inc
lcall
arpl
inc
mov
in
push
loope
xor
pop
test
jecxz
ds
cmp
and
mov
mov
imul
mov
insb
dec
popa
cmp
cmp
je
mov
test
pop
out
xchg
sub
enter
xchg
insb
fsts
lds
sub
lds
inc
inc
cld
mov
leave
dec
adc
call
mov
push
cmc
aaa
arpl
pop
ffree
mov
sub
pop
add
test
cwtl
rcrl
pushf
jbe
daa
cmpsb
les
adc
jbe
dec
add
push
scas
or
loope
push
mov
sub
hlt
out
mov
jno
and
int3
cli
dec
movsl
xor
sbb
icebp
inc
mov
mov
daa
into
mov
xchg
jge
add
inc
mov
scas
sbb
sub
sub
fists
and
xor
cmpsl
shll
out
mov
xchg
xorl
or
daa
sti
pushf
xor
xchg
sub
add
orb
ja
xlat
lret
imul
mov
pop
cmp
or
dec
and
dec
imul
fildl
loope
into
ds
inc
xchg
lret
cmp
cmpsl
jae
addr16
cmpsb
cmp
fdivrl
rcrb
pop
jle
ret
in
dec
xor
mov
inc
jbe
xor
lock
or
ffreep
fwait
test
les
push
jne
in
push
gs
lds
mov
cmp
pop
testl
hlt
mov
and
xlat
lret
lcall
lods
lods
out
repz
sub
mov
push
add
cmpsl
xor
add
sahf
loopne
sub
adc
mov
fucomp
addr16
and
sub
mov
hlt
in
jl
xchg
push
push
push
mulb
mov
xor
push
fcoml
out
sub
pop
fcmovne
insb
cs
rclb
sub
inc
imul
xchg
cmc
cs
add
inc
jmp
push
mov
stos
or
push
lock
out
sbb
xor
or
mov
sbb
xchg
call
sbb
inc
mov
and
shlb
js
adc
lret
fwait
dec
imul
fsubr
or
js
sub
add
call
sbb
dec
faddl
mov
jmp
push
sub
and
xor
test
imul
pop
repz
add
push
loop
stos
adc
movsl
fidivrs
sub
jne
xor
adc
xchg
dec
and
sahf
fmuls
xchg
inc
pop
inc
pop
pop
cmpsl
mov
in
xchg
adc
mov
stos
sub
pop
sarb
or
xor
mov
sbb
adc
xchg
fbld
fstl
mov
add
sbb
dec
gs
iret
push
lock
outsl
scas
or
fisubl
push
fs
xor
mov
adc
ret
fucomp
or
decb
sbb
xor
push
cmpb
pop
mov
andb
xor
int
xchg
negb
push
lock
jl
cmp
andb
cmp
popf
icebp
adc
lds
jne
sub
rcrl
call
hlt
inc
inc
jecxz
cmpsl
cmp
dec
test
clc
hlt
jae
pop
sbb
add
adc
and
js
mov
imul
cmp
add
std
jns
xchg
movsb
out
dec
xchg
xchg
arpl
je
mov
mov
out
mov
cld
fbld
inc
mov
jecxz
into
xor
xchg
adc
jne
test
push
lret
dec
jne
out
not
loop
push
push
mov
lds
ret
icebp
push
mov
mov
int3
loope
popa
imul
cmp
pop
and
xchg
adc
enter
pop
sbb
outsl
pop
cwtl
sahf
cmpsb
into
addb
outsb
push
clc
sub
fst
and
mov
pop
cltd
sbb
dec
mov
jo
push
scas
popa
repnz
lods
nop
sbb
adc
adc
cmpsb
icebp
jb
add
rcrb
push
xchg
push
sub
sbb
hlt
pop
xor
es
shll
and
lcall
call
push
adc
addr16
call
into
and
sahf
ss
pop
adc
add
inc
dec
or
dec
mov
nop
fldt
push
aad
scas
stos
fcomps
mov
movsl
or
out
shl
sbb
xor
push
es
movsl
pcmpgtd
shll
outsl
shrb
rcl
negb
fisubrs
add
mov
sbb
int3
cmpsb
das
fwait
pop
adc
test
ds
addl
sub
push
incb
xchg
and
pop
mov
mov
jp
cmp
stos
xor
call
psrld
addb
mov
test
push
xchg
push
mov
sbb
mov
sbb
pop
test
out
sub
add
and
gs
insb
aas
mov
xor
xchg
scas
sarb
jae
adc
push
aad
cs
call
inc
scas
jp
fildll
insl
xchg
mov
fisttpl
int3
or
lock
sbb
xchg
sbb
cld
gs
int
stos
cmpsb
mov
mov
stos
pop
cmp
rolb
imul
dec
push
adc
cmp
dec
pop
add
and
addr16
jge
sub
sbb
dec
fs
cmp
and
xchg
mov
andb
sub
xor
adc
orb
and
in
dec
fiadds
xchg
jge
cmp
std
sub
fcompl
orb
xchg
adc
cmp
mov
out
sbb
jmp
adc
iret
and
push
lds
add
icebp
lret
idivl
add
out
lds
dec
mov
xchg
push
pushl
shll
popa
inc
push
and
gs
push
mov
shr
or
ret
cmp
fwait
setl
xchg
in
cmp
test
add
in
jae
push
pop
das
iret
cs
xor
stos
insb
xchg
jns
lahf
loop
push
mov
outsb
aaa
inc
iret
xor
stos
xlat
int3
cltd
pop
je
cltd
test
adc
rcrl
std
in
pop
mov
leave
shlb
lods
xor
add
cmp
push
jb
sub
dec
and
xlat
mov
jno
movsb
in
cmp
xor
inc
pusha
testb
sti
fcoml
fiaddl
push
mov
inc
cld
lcall
adc
mov
aas
popa
aad
fistl
mov
mov
dec
ljmp
les
lea
dec
or
pop
gs
dec
or
mov
icebp
mov
push
and
outsb
dec
fcoms
mov
into
ret
xorl
add
add
loopne
or
fcmovne
jp
fsubs
xorl
and
mov
je
mov
mov
shlb
fimull
adc
adc
fwait
inc
imul
and
inc
or
lds
dec
sbb
add
push
jmp
pop
jb
sub
pop
add
inc
sbb
push
loopne
inc
lods
in
subb
inc
insl
and
repz
lcall
int
inc
gs
popa
stos
sbbb
push
push
mov
push
rcrb
pop
push
dec
jle
cmp
in
cmp
cld
jle
inc
xchg
adc
stos
mov
pushf
insb
decl
mov
in
je
ret
popa
pop
push
fcompl
mov
std
in
scas
stos
clc
in
call
dec
loope
mov
xchg
into
negl
fs
and
dec
adc
dec
dec
add
scas
mov
xor
mov
cltd
xchg
push
lds
inc
xor
jb
sar
cmp
clc
or
cmpsb
dec
xchg
repz
outsl
lcall
loop
jne
or
scas
mov
push
cwtl
mov
mov
or
pop
test
icebp
mov
mov
jmp
cmp
and
and
xor
push
out
imul
xlat
jbe
insb
das
adc
jg
insl
test
inc
sub
in
out
push
inc
adc
jns
insl
into
stos
pusha
xor
xchg
daa
cwtl
push
jle
adc
sbb
fimuls
in
clc
sbb
mov
adc
push
jle
add
icebp
cltd
aad
jge
cs
iret
and
sti
jb
xchg
jns
negb
mov
les
mov
xor
sub
mov
lret
push
add
jg
idivl
cwtl
lcall
ss
fidivrs
imul
mov
repnz
jecxz
jge
xchg
ret
out
ja
scas
clc
mov
out
add
insb
test
adc
movsl
jg
xrelease
mov
ds
push
jb
xchg
mov
daa
mov
cmp
jl
cmp
push
xchg
hlt
cmp
nop
iret
lods
dec
inc
daa
mov
addl
in
cmp
les
sbb
mov
inc
ror
pop
scas
mov
sarl
mov
push
dec
imul
xchg
push
adc
lods
push
int3
incl
add
insb
mov
mov
mov
arpl
and
mov
pop
jae
cmp
adc
xchg
sbb
out
inc
push
mov
mov
enter
fdivrs
int
fstps
jns
push
mov
jne
jle
mov
push
idivb
test
adc
mov
les
mov
sub
call
cmpsl
outsb
int
lahf
pop
mov
test
and
mov
jnp
cwtl
aam
pushf
icebp
in
stos
mov
push
mov
push
jp
stos
movsl
mov
or
lods
fdivrs
imul
andl
xchg
daa
enter
and
jne
call
xchg
xlat
cli
mov
cs
sti
or
and
ret
dec
stos
aaa
sub
into
jl
inc
mov
orl
mov
jbe
xchg
xlat
push
push
dec
push
out
xor
sarl
test
jecxz
jne
and
shrb
mov
mov
jmp
push
sarb
and
jle
xchg
popf
jl
test
mov
iret
push
mov
lcall
movsb
and
test
cmp
push
mov
jnp
out
in
roll
sub
or
and
mov
es
dec
lods
and
xchg
mov
push
in
mov
repz
in
hlt
pop
divb
ret
sti
sub
mov
push
sbb
push
js
or
push
hlt
mov
cld
into
stos
aas
jl
js
and
push
int
xor
adcl
shrb
dec
lds
in
mov
cmp
int3
sbb
pop
cmpsb
mov
sbb
adc
xchg
and
inc
fimuls
fwait
pop
jle
iret
lods
dec
xchg
jnp
mov
or
cltd
jp
inc
or
sarl
sbb
xor
data16
jae
sbb
mov
sub
ret
mov
fsubs
pop
bound
sbb
ja
push
cmp
fistpl
push
mov
notl
xchg
jge
clc
out
pop
test
dec
pop
fisubrs
add
mov
adc
outsl
dec
pushf
pop
shl
outsl
mov
sub
inc
fwait
xor
xchg
dec
cwtl
mov
icebp
lods
xchg
pop
sahf
and
shl
outsb
xor
add
jae
xchg
jle
leave
mov
loopne
jne
lods
jbe
mov
mov
fiadds
cmp
cmp
cmp
mov
and
faddl
sahf
sbb
push
daa
jb
mov
inc
out
push
mov
rorl
fdivp
pop
inc
mov
inc
cmc
jns
fsubrl
scas
jecxz
ds
push
cmp
loope
mov
imul
fcomi
shrl
test
mov
aaa
or
adc
ret
push
dec
rcrb
cmp
loope
test
lock
sar
negb
xchg
mov
je
scas
pcmpgtw
stos
data16
movsb
mov
leave
test
aas
int
test
push
mov
lea
pop
mov
and
xchg
push
sub
mov
mov
cmpsl
dec
or
dec
arpl
in
sbb
pushf
test
adc
cltd
jmp
mov
fidivrs
inc
or
push
enter
ljmp
push
jmp
xchg
adcl
int
mov
push
sahf
in
les
and
xchg
jge
add
ss
mov
scas
mov
push
or
test
inc
or
pop
and
repz
sub
fstpt
inc
xchg
and
loop
fstps
ss
ljmp
pop
repnz
mov
stos
pusha
adc
sahf
jecxz
jae
lret
cmpsb
xor
mov
or
insb
pop
dec
lret
test
insb
rorl
out
hlt
dec
mov
xchg
ss
pop
repz
leave
mov
loope
ret
test
in
mov
mov
fsubr
cmp
inc
jmp
mov
add
andb
xor
add
mov
js
and
jb
xor
arpl
faddl
mov
push
dec
and
ja
or
ljmp
pop
mov
daa
fwait
push
loop
jl
mov
dec
mov
xlat
mov
sbb
push
dec
add
rcll
jo
inc
pop
insb
movsb
jae
rclb
stos
and
bound
mov
jp
mov
ja
out
into
add
sbb
push
jno
cwtl
xor
jle
xchg
xchg
pop
and
jl
in
cmp
mov
clc
lock
inc
out
sub
mov
adc
cmp
lcall
enter
mov
mov
jmp
pop
js
inc
inc
in
jo
or
cmc
mov
inc
rep
mov
xchg
xor
insl
push
ljmp
mov
jnp
ss
mov
and
push
je
and
jae
je
roll
les
sahf
pop
xchg
divl
stc
ja
and
mov
daa
hlt
inc
enter
pop
adc
popf
push
push
shrl
and
incl
jmp
cltd
ret
pop
les
out
dec
adc
pop
aaa
jbe
inc
add
jp
daa
or
mov
cmovns
test
push
adc
cmc
lock
pop
or
outsb
hlt
jbe
and
inc
pop
ret
adc
test
into
in
lods
repnz
js
cmpsb
sarb
test
andb
jecxz
add
aas
sbb
movsb
dec
add
jp
jp
sub
jbe
out
mov
dec
xor
lods
inc
push
test
mov
ret
add
mov
jbe
data16
scas
fucomip
jl
dec
inc
mov
ret
popa
dec
and
inc
pop
outsb
push
add
std
fisubs
mov
ret
bound
pop
push
dec
aaa
mov
dec
lods
daa
add
rclb
inc
mov
out
ret
or
sbb
inc
fcoml
clc
idiv
mov
es
jmp
push
jg
sbb
movb
xor
cmpsb
adc
movsl
adc
xchg
mov
test
pop
jne
imull
mov
stos
pop
push
ds
data16
outsb
aas
std
xor
cmpsl
or
dec
mov
mov
outsl
mov
addr16
adc
mov
mov
push
push
enter
ret
stc
xchg
mov
inc
stc
test
cmpsb
adc
cmp
cs
sub
cmp
jnp
sbb
sahf
dec
jg
lods
push
lcall
lods
test
ja
dec
inc
cmpsl
in
inc
stc
cmp
fbstp
lods
rcrb
add
adc
inc
xlat
xor
std
mov
jp
out
and
scas
jge
jno
push
push
outsb
sbb
lock
push
sarl
popa
inc
out
inc
test
xchg
mov
test
push
mov
mov
xchg
inc
iret
sbb
add
jns
push
addr16
movsb
jecxz
and
sub
xchg
and
shll
call
push
pop
inc
out
pop
iret
jo
or
adc
or
lret
insb
or
je
sbb
data16
pusha
and
out
roll
repz
jmp
jbe
xchg
mov
cmpb
fistpll
sarl
scas
cmp
adc
roll
pop
cmp
mov
movntps
lea
mov
push
pushf
sub
int
cmp
popa
xchg
sahf
scas
xchg
pop
sysenter
mov
jne
js
das
add
mov
sbbb
xchg
xchg
cli
cld
adc
in
jns
jmp
ss
stos
and
mov
add
sbb
sbb
sub
or
dec
and
push
xor
inc
pusha
xchg
inc
jnp
lods
sub
adcl
mov
xchg
sub
mov
mov
addb
and
aas
lret
mov
xor
test
repz
repnz
loop
pushf
mov
adc
imul
int
sub
fdivs
lods
xlat
sub
sub
subb
cld
adc
xor
clc
iret
mov
ljmp
or
outsb
mov
inc
insb
stos
je
push
mov
lret
mov
push
sub
pop
stos
jecxz
jns
aad
mov
subb
fldl
fwait
orl
sub
stc
in
nop
pusha
insb
xor
frstor
or
or
mov
sbb
das
sbb
cmpsb
loopne
jo
into
popa
out
xor
push
or
bound
out
int3
sub
scas
aam
jecxz
dec
cmpsb
dec
lods
push
mov
lret
sub
fidivl
dec
shl
sbb
jns
xchg
call
push
repz
pop
ja
jecxz
mov
fisttps
fisttpll
cld
adc
repz
mov
push
pop
sub
xchg
int3
sbb
lsl
test
orb
and
xor
mov
or
es
xor
fcmovne
mov
or
inc
sbb
fmull
cmpl
cmc
inc
sub
ljmp
xor
mov
xorl
mov
xlat
in
pop
fisttps
add
cmp
aaa
inc
push
cmc
sbb
or
jle
dec
shlb
in
push
gs
stc
inc
or
daa
xlat
sub
frstor
leave
fldl
mov
pop
fimuls
cld
pop
mov
sub
js
add
lea
mov
and
xchg
mul
shl
jg
popf
popa
xor
lea
je
inc
aaa
cld
jbe
dec
mov
cmc
and
scas
movsl
insl
and
adc
jp
xor
xor
fucomi
mov
push
shrb
bound
inc
push
jb
inc
inc
pusha
in
jl
pushf
jb
pusha
adcb
mov
cmp
test
lret
mov
mov
pusha
into
sahf
add
mov
and
mov
mov
mov
mov
fmull
cld
sbb
lahf
test
pop
add
repz
xor
jbe
out
xchg
and
inc
es
add
imul
imul
adc
inc
inc
xchg
or
pop
movb
mov
and
jg
dec
jno
adc
and
rcrb
jno
popa
add
xor
test
mov
fiaddl
sar
fwait
dec
sub
xor
cmc
int
int
jne
into
or
push
les
mov
lds
lock
dec
sub
sahf
outsl
jno
jp
fildl
pop
test
rcr
ja
adc
dec
and
movsb
xchg
cmp
mov
sub
dec
repnz
sub
jo
movb
mov
lret
add
fcmovnu
adc
pop
cmp
mov
pop
add
cmp
adc
lods
inc
add
cmp
push
mov
xor
push
xchg
insb
xchg
fsub
insb
int3
stos
cmp
cmp
mov
stc
jg
cltd
dec
popf
fistpll
mov
cmpl
mov
mov
mov
aas
sub
add
pushf
pusha
addl
dec
sbb
jno
push
jb
repnz
cwtl
daa
mov
push
jb
clc
cld
ja
inc
cmp
or
es
dec
cmp
jle
sahf
xchg
cmpsl
mov
jne
jle
adc
push
in
cmp
cmc
pop
leave
push
dec
gs
mov
test
push
cmp
xchg
pop
pop
push
sbb
adc
cmp
sti
addr16
rcrl
jl
shlb
test
fs
in
call
ja
mov
or
push
inc
dec
sarb
adc
cmp
push
repz
mov
xchg
sub
xor
int
das
icebp
pop
addb
outsb
lods
mov
and
mov
lret
and
rcrl
in
mov
push
lret
push
push
int
or
cmpsb
pop
adc
dec
ficoml
int3
dec
dec
das
cmp
popa
add
push
push
jnp
mov
cmp
adc
ss
jno
adc
pop
pop
outsb
sub
mov
add
pop
sub
dec
mov
xor
mov
pop
xchg
or
adc
fs
jle
pop
out
and
cwtl
mov
pop
adc
cmpsl
sub
dec
or
mov
mov
into
je
std
fstl
lcall
pop
outsb
sbb
xchg
add
lods
movsl
int3
negl
daa
mov
testl
out
jnp
daa
lcall
jno
ja
ljmp
mov
fsubl
movsb
mov
jecxz
gs
sbb
imul
outsb
rolb
jl
dec
stos
dec
cs
xor
add
cwtl
stc
push
pop
ret
cwtl
test
mov
cli
dec
xchg
xor
test
cmc
mov
cli
push
add
or
mov
pop
adc
pop
adcl
scas
outsb
in
std
jp
inc
adc
rorl
push
in
in
mov
mov
mov
dec
add
adc
sbb
cmc
xchg
iret
pop
filds
out
loop
lods
jmp
scas
xchg
inc
lds
adc
xchg
adc
ret
pop
adcb
loopne
mov
mov
mov
mov
add
aam
out
call
inc
insb
xchg
jmp
inc
int3
pop
push
sub
aad
sub
jle
xchg
or
aad
loop
sub
push
mov
ret
ja
pop
pushf
fsub
xchg
push
fwait
movsb
xor
xor
mov
and
ja
js
add
aam
mov
in
ja
cli
mov
shlb
mov
std
mov
push
ret
mov
cmp
jo
mov
sahf
cmp
icebp
mov
add
test
imul
rcl
dec
mov
and
and
lea
cmp
xchg
mov
fdiv
stos
shrb
mov
jge
std
fs
lahf
or
xchg
incl
sbb
add
loop
inc
lods
int
fsubs
outsb
leave
cs
xlat
mov
in
subb
shl
xchg
mov
jg
enter
std
push
gs
rcl
sub
outsl
scas
addr16
fnstenv
rcrl
fs
xor
daa
sbb
xor
into
or
xchg
lret
cmovle
insl
loop
xor
clc
adc
aaa
push
pop
dec
push
adc
mov
dec
adc
cmpsl
push
das
popf
xchg
mov
cmpsb
pop
cmpsl
in
mov
add
lods
inc
pusha
cwtl
cmp
fstl
subl
ljmp
js
jns
iret
inc
pusha
dec
xor
test
cli
mov
outsl
scas
fidivrl
jmp
jo
cmp
out
pop
int
pop
sbb
into
pop
cwtl
arpl
jge
push
push
into
xor
mov
pop
fdivp
es
adc
push
xchg
jecxz
adc
test
aam
mov
bound
mov
cltd
or
int
inc
fisubs
and
popa
je
in
xchg
outsb
imul
lahf
dec
jp
push
jecxz
dec
add
fldcw
lret
out
jp
cmp
sahf
inc
in
ds
js
sti
adc
mov
js
loopne
jle
inc
xchg
add
cmp
adc
cmp
out
push
jmp
xchg
loopne
roll
mov
jge
lret
stos
add
pusha
iret
jne
loop
pop
fiaddl
push
xchg
mov
push
repnz
push
xchg
mov
pop
fcoms
ja
pop
push
add
xchg
roll
push
cmc
call
cmc
in
push
fstpl
jae
lods
ds
popa
in
scas
jo
ss
pop
pushf
jge
movsb
div
negb
cmp
js
pop
jmp
push
shrl
jns
inc
xchg
loope
mov
bound
addr16
pop
popf
test
pop
adc
popa
in
mov
arpl
fs
mov
movd
cltd
in
outsl
dec
fwait
in
ret
shrl
mov
js
mov
leave
int3
xlat
enter
mov
push
ss
mov
out
or
movsb
pop
mov
aad
sbb
int
adc
aas
pop
cmpsb
or
cmpsb
cld
aad
lret
jb
push
pushf
gs
jecxz
das
mov
pop
push
insl
cwtl
pop
sub
fs
lods
sub
xchg
sahf
imul
lea
dec
sbb
imul
inc
add
jp
lahf
inc
inc
xchg
sub
mov
lds
cwtl
mov
fldt
movsb
add
dec
xchg
lods
scas
cmpsb
inc
mov
scas
xchg
bound
and
aas
out
mov
and
mov
es
push
mov
daa
mov
je
sub
repz
inc
sub
idivl
fwait
testb
je
cld
xchg
test
or
add
aam
xchg
rclb
push
cld
inc
adc
jbe
mov
sbb
call
lahf
insb
jns
sub
js
push
jno
xor
aaa
sub
push
jo
cmp
data16
mov
add
mov
mov
cmpsb
mov
or
test
pop
push
push
dec
ficomps
mov
dec
xchg
cmp
int
push
lret
cld
shlb
std
or
rcrl
or
push
out
pop
daa
sarl
mov
adc
jae
popf
jae
lods
dec
pop
jl
ret
sub
jno
mov
cmc
mov
add
int
push
mov
ret
cmc
xchg
or
xor
cmpsl
cmp
fdivl
or
into
cltd
aas
scas
sbb
sbb
pusha
addr16
mov
pop
mov
ds
mov
int
xor
scas
cli
mov
and
sub
xor
or
adc
orb
mov
mov
dec
imul
pop
pop
mov
sub
sbb
xor
dec
hlt
loope
out
cmpsl
cld
repz
out
pop
pop
test
cmp
mov
fnop
shr
idivl
lahf
xchg
adc
iret
dec
mov
inc
stos
inc
inc
and
dec
les
dec
xor
mov
mov
cmc
cmp
pop
xchg
and
sarb
out
mov
xor
or
cmc
and
fs
sarl
pop
xor
cmp
mov
sbb
add
lea
pop
mov
ss
adcl
dec
jns
fisubs
mov
mov
adc
xchg
push
mov
shl
sub
inc
mov
mov
int
dec
mov
mov
lods
fdivrs
pop
inc
ljmp
push
push
das
xchg
inc
mov
loop
call
sub
pushf
sub
subb
mov
xchg
fcoml
push
fsubrp
leave
icebp
rcrb
lcall
in
imul
mov
fldenv
dec
ret
dec
loop
test
test
cmp
or
insl
cmpl
mov
adc
mov
sub
xlat
outsl
mov
ret
out
adc
adc
or
push
push
push
sbb
sarb
and
cmpsb
sbb
int
cld
repnz
mov
pop
push
rcrb
xor
sub
stos
pop
and
daa
lret
mov
lret
gs
cmp
sub
mov
ss
hlt
sbb
add
pop
mov
arpl
ja
xlat
push
inc
insl
das
stos
sub
jle
imul
insl
pop
sub
inc
imul
movsw
sub
jecxz
sahf
mov
rorb
outsb
or
jns
lock
xor
aad
mov
xor
xchg
add
ss
or
mov
dec
cltd
dec
add
mov
mov
push
fnstenv
xor
push
jecxz
aaa
adc
out
dec
add
mov
ret
pushf
dec
rcl
leave
repnz
mov
movsl
xchg
pushf
mov
nop
or
cmpsl
inc
out
cmpsb
jl
mov
mov
movsb
inc
mov
fidivs
movsb
mov
std
mov
add
and
test
in
lret
dec
in
mov
dec
pop
inc
jp
dec
cltd
push
jg
mov
mov
ds
pop
repz
es
add
test
cmc
xchg
and
cmp
pop
imul
scas
mov
sahf
jge
mov
inc
mov
mov
enter
cmp
fisubs
lfs
xchg
int3
jge
push
add
repz
or
imul
arpl
mov
dec
pop
cmpsl
and
hlt
into
add
mov
push
loope
lods
mov
out
jno
inc
into
mov
add
out
mov
test
addl
ljmp
cwtl
in
mov
add
mov
jmp
xchg
inc
test
test
out
or
add
gs
sbb
adc
push
or
mov
adc
dec
push
mov
jae
sbb
dec
fadd
fbld
lcall
inc
dec
hlt
test
ja
push
xchg
gs
je
into
decl
or
sahf
mov
notl
pop
mov
std
xor
scas
sbb
jg
dec
pop
test
test
cmp
les
push
loop
pop
or
pop
hlt
push
add
and
in
loope
cs
shlb
mov
dec
stos
test
adc
stos
mov
dec
push
insb
push
ret
rcr
addl
dec
or
inc
mov
loopne
test
mov
push
frstor
adc
ret
lret
mov
xchg
push
adc
mov
repz
mov
addr16
test
cli
cltd
insl
mov
into
cmp
adc
fwait
lods
mov
mov
add
rorb
in
shlb
and
aad
int
daa
pop
or
sti
xchg
js
lret
mov
lret
stos
push
pop
mov
jnp
mov
push
sub
in
mov
gs
jp
cld
pop
dec
aaa
cmp
gs
fbld
fisttpl
mov
jg
sbb
push
inc
pop
ja
mov
int3
push
cmpsb
int3
sti
mov
std
test
ficompl
pop
jno
leave
adc
pop
gs
cmpl
xlat
sar
shlb
jo
lret
cmp
jge
mov
negl
lahf
outsl
or
fnstenv
adc
fwait
stos
xor
dec
dec
mov
inc
or
cmc
pop
dec
mov
inc
pop
sahf
dec
jp
xlat
ds
cmpsl
repnz
jg
sub
adc
in
pop
xchg
loop
push
mov
inc
cmp
cmp
dec
or
inc
outsb
cwtl
repnz
mov
xor
rorl
mov
ljmp
pushf
pop
int3
roll
out
push
jmp
jne
ret
xchg
clc
or
pushf
sbb
push
bound
cs
pop
mov
sti
jnp
pusha
imul
lcall
scas
popf
or
adc
cmp
repz
pushl
fisttpll
test
add
in
addr16
hlt
ljmp
ds
fiaddl
inc
jns
scas
clc
push
add
cld
and
inc
adc
cmp
add
cmp
addr16
test
xchg
inc
dec
daa
or
or
cmp
loop
in
mov
fcomps
pop
jp
pop
popf
cmp
insb
xor
or
mov
out
mov
mov
lods
push
dec
int
inc
dec
adc
push
jne
mov
popl
mov
daa
lock
arpl
xor
out
test
push
cwtl
mov
xor
mov
mov
cmp
sti
repz
aas
jne
xor
insb
and
adc
adc
scas
jmp
dec
ficoml
lret
frstor
xor
repz
xor
mov
outsl
inc
hlt
adc
sbb
test
jne
adc
push
aad
stos
fs
dec
ljmp
or
sahf
xchg
cmp
pop
scas
sbb
std
add
and
jmp
xlat
pop
inc
ss
and
out
bound
push
mov
xor
popf
jp
add
lcall
aad
testl
jle
adc
addl
bnd
inc
xchg
mov
pop
or
loop
jno
daa
mov
pop
add
mov
pop
shlb
xor
shl
ficoms
sub
or
movsb
out
add
add
sbb
push
xchg
addr16
lock
add
or
mov
cli
mov
shrb
mov
jne
mov
lret
mov
pop
daa
mov
imul
loop
pusha
fs
gs
dec
les
movsb
pop
fcompl
rol
and
xchg
inc
xchg
testb
faddl
out
loop
xor
rolb
push
dec
call
dec
out
mov
pop
adc
shlb
pusha
adc
push
dec
imul
dec
movsl
jl
mov
adc
sbb
add
pop
mov
mov
jno
mov
push
mov
pop
jb
loopne
movsb
rcl
xor
pushf
dec
out
jno
loopne
jb
dec
and
xor
inc
add
clc
es
mov
jmp
sbb
and
in
stc
pop
sub
sti
lahf
mov
dec
cmpb
cmpl
cmp
mov
nop
add
jae
fdivrl
loop
pop
mov
in
loope
xor
jno
mov
mov
push
dec
aam
in
cmp
pop
dec
inc
cs
mov
jno
clc
mov
pop
in
dec
add
inc
sub
fsubrs
push
jbe
push
add
mov
arpl
dec
and
mov
add
push
aam
fbstp
and
pushf
cli
sbb
jbe
or
mov
lods
out
sahf
xor
es
fcmovu
push
or
scas
les
stos
pop
fnsave
pop
or
test
out
jle
xor
sub
xchg
xor
xor
xchg
enter
xchg
mov
movsb
icebp
sti
fidivrs
inc
jns
jecxz
addr16
fsubp
xchg
jecxz
sbb
add
jp
lea
cmp
jnp
js
adc
aam
and
ret
adc
nop
sahf
nop
sti
jno
jp
xchg
pop
mov
mov
dec
vcmpps
mov
and
fbstp
push
into
and
pop
sbb
adc
adcb
decl
mov
lret
aaa
iret
cmp
leave
out
xchg
mov
mov
and
adc
fistl
push
es
and
js
jns
popa
or
mov
cmp
mov
push
add
mov
push
jne
or
mov
cmp
gs
outsb
fsts
fwait
mov
add
lods
inc
mov
shll
and
cmp
call
clc
fists
pop
xor
out
xchg
or
pushf
mov
xchg
mov
or
adc
xor
or
pusha
jns
push
jge
cmp
idivb
adc
das
rolb
fidivl
sub
add
pop
cwtl
aam
dec
push
sub
std
dec
in
les
cmp
sbb
lds
push
outsb
mov
xlat
icebp
mov
popf
sub
jne
outsb
popa
daa
fsin
fdivrl
imul
jmp
repnz
jl
dec
shlb
mov
cmpl
xchg
lret
jecxz
inc
fistl
arpl
cmp
int
adc
push
jno
mov
call
fistpll
fs
hlt
test
mov
and
repnz
push
inc
dec
fstpl
inc
test
rcrb
xchg
mov
adc
mov
dec
xlat
push
sub
nop
and
pop
cwtl
ljmp
enter
mov
inc
adc
aas
sbb
pop
push
popa
push
cmpsb
pop
fimull
inc
push
or
mov
xchg
mov
pop
dec
mov
faddl
repz
enter
sub
lods
outsb
xchg
sbb
add
push
and
dec
in
stos
sbb
insb
aas
divl
xchg
lods
test
and
les
mov
and
mov
enter
jno
or
lods
inc
shr
xchg
mov
into
roll
cmp
addr16
xchg
or
push
inc
push
lcall
mov
addr16
xchg
push
xchg
add
xor
xor
mov
das
cmp
cmpsl
rcrb
lret
ficomps
pushl
test
mov
cmpsb
in
imul
sub
repz
out
and
scas
xchg
std
xor
and
and
adc
scas
and
test
fmulp
cmp
hlt
lahf
cmp
push
mov
sbb
adc
pop
cmp
or
add
mov
xor
pop
jmp
or
mov
out
stos
rorl
daa
push
fnstcw
pop
inc
fwait
test
sub
clc
repnz
or
sbb
inc
inc
aad
xor
xchg
out
dec
scas
inc
jge
mov
add
inc
cmc
jp
out
inc
popf
or
xor
sub
jnp
shll
insl
cltd
xchg
xor
sub
pop
push
ja
add
lea
sti
mov
loopne
mov
scas
jge
pop
and
mov
in
xchg
push
maxps
or
add
and
mov
fwait
mov
outsl
mov
mov
scas
sbb
lods
adc
lods
jo
jb
inc
add
pop
sbb
hlt
ret
addb
xor
sub
xlat
mov
jge
in
push
lahf
outsl
mov
mov
mov
mov
arpl
mov
mov
loop
push
lret
sahf
dec
scas
sbb
cs
mov
mov
dec
inc
ja
fildl
mov
pop
rcrb
arpl
ret
mov
or
aad
addb
fiaddl
push
out
xchg
push
pop
xlat
xor
xchg
outsb
adc
outsl
in
cmp
push
xchg
jno
ljmp
insb
inc
and
xor
aad
pop
pop
push
pop
ja
fisubs
or
mov
adc
pop
mov
pusha
repnz
jne
popa
aam
js
cmpsl
jmp
loop
cmp
aaa
cmp
xor
ljmp
dec
xor
push
dec
cmpsb
add
iret
pop
adc
out
lahf
push
sbb
cmp
mov
arpl
xor
nop
cltd
and
add
mov
or
cwtl
push
addr16
mov
nop
mov
sub
mov
stc
mov
mov
arpl
dec
imul
addr16
outsl
push
andl
push
inc
lock
and
xchg
mov
test
bound
add
lret
push
pop
mov
push
and
cmp
xlat
jno
icebp
test
adc
mov
pop
lcall
sbb
movsl
add
push
sahf
int3
cmp
stos
arpl
js
in
loopne
fnstenv
inc
mov
jge
ror
enter
les
or
aas
lahf
sarb
xor
out
je
jno
insl
decb
repz
loope
std
pushf
aaa
and
cmp
and
pop
shrl
cmp
arpl
mov
cmp
mov
sbb
rcrl
adc
jnp
stos
or
mov
popf
fsubrl
mov
push
xor
cli
mov
cmpsl
inc
push
imul
stos
loope
push
repz
movsl
iret
inc
xchg
dec
sarb
pusha
icebp
or
stc
stos
sub
xor
fdivs
das
ds
pop
data16
dec
cmp
test
push
dec
and
sbb
pop
outsl
into
mov
xor
flds
arpl
pop
pop
cmp
aas
je
push
ds
push
call
test
push
adcl
outsl
adc
push
mov
aas
testl
subl
or
fadds
popf
mov
jg
sarl
mov
shr
xor
hlt
lods
adc
movsl
adc
cmc
je
or
lods
adc
lock
iret
sbb
dec
pop
mov
push
cmpsb
adc
dec
fdivs
ljmp
xor
aas
xor
in
inc
pusha
lods
sti
mov
lcall
jg
dec
push
movb
es
std
cmp
aaa
push
xchg
jmp
dec
cmpsl
test
add
fstpl
add
stos
xchg
pop
xchg
hlt
movsb
jecxz
xchg
pusha
cmp
cmpb
ror
mov
bound
shll
loop
repz
filds
and
xchg
mov
cmp
inc
aad
insb
dec
inc
mov
loope
rclb
cmp
xchg
out
mov
xchg
in
repnz
jae
mov
pop
and
aaa
push
and
add
and
add
in
push
push
jb
pushf
push
in
cli
dec
or
pop
lea
outsb
jns
adcb
popa
pop
jecxz
sbb
call
push
push
inc
inc
cltd
loope
and
fiaddl
lds
and
add
loope
test
inc
sub
jl
xchg
mov
cmp
and
jae
mov
imull
lret
or
dec
cmc
xchg
test
and
jnp
pop
lods
sub
call
repz
push
das
aaa
adc
cmpsl
sti
jl
push
pushf
mov
fnstsw
sbb
add
sub
out
loope
in
pusha
push
adc
loopne
sub
cmpsl
data16
push
enter
faddl
jmp
push
lds
js
sbb
orl
loopne
dec
out
adc
jge
dec
add
sbb
xchg
aaa
cmpb
jae
add
sbb
jns
dec
jo
lea
xchg
jbe
sub
jae
dec
movb
jmp
cli
test
xor
mov
outsl
sarl
stos
cmpsb
sbb
dec
push
test
adc
push
loope
cmpsl
push
mov
pop
mov
js
jmp
dec
and
add
pop
adc
add
cmp
pushf
inc
mov
mov
lret
sbb
jae
xchg
mov
fwait
xlat
repz
in
daa
lret
mov
push
or
sbb
std
xor
mov
and
movsb
icebp
xor
lret
inc
test
call
shll
shrd
inc
or
adc
movsl
mov
je
outsl
inc
push
jns
aaa
inc
ds
leave
xchg
jmp
cmc
dec
cmpsb
sbbb
into
or
scas
push
and
push
cmp
lock
jbe
cwtl
or
mov
jmp
xor
fsubs
jmp
je
add
cmp
fldenv
mov
ljmp
incl
and
push
jbe
sub
inc
stc
clc
call
rorl
sbb
and
sub
ds
and
mov
dec
shlb
movaps
push
sub
push
jl
add
jbe
lods
sbb
std
int
or
outsl
cwtl
inc
sub
test
aaa
jl
jl
scas
push
xchg
dec
mov
sub
jno
out
dec
dec
xchg
aad
sti
loope
mov
pop
in
xchg
dec
ljmp
outsb
mov
hlt
adc
mov
rcr
pop
dec
lds
jns
hlt
jae
push
in
test
xchg
out
es
pop
jne
cmp
dec
and
xchg
jnp
sbb
inc
outsl
push
gs
es
mov
bound
fwait
mov
cld
insb
sbb
ja
jl
adcb
mov
loop
push
sub
das
xchg
xchg
ss
xlat
negl
pop
fidivrs
mov
push
fstpl
push
cltd
mov
and
mov
push
gs
test
stc
adc
mov
arpl
mov
pushf
fs
lret
repnz
loope
and
test
mov
adc
add
or
std
call
inc
jo
xchg
add
test
nop
loopne
xchg
lock
leave
mov
mov
xchg
sahf
jge
and
js
cli
cmpsl
movhps
add
mov
inc
xlat
sti
es
jno
cmp
mov
inc
sub
aas
add
lds
nop
int3
inc
and
jge
scas
loopne
dec
dec
sti
xor
lods
roll
and
hlt
lahf
inc
mov
and
scas
shrb
pop
mov
and
scas
imul
and
lahf
lods
and
push
movsl
push
subl
rcrb
mov
pop
add
loope
jb
stos
data16
xor
lahf
sub
dec
sbb
sub
ljmp
push
sub
inc
cmpl
dec
test
cmc
hlt
jle
inc
fsubl
mov
xchg
fiadds
dec
cmpsl
mov
loopne
movsl
int3
xor
ficompl
das
or
pop
pop
gs
sub
dec
sub
jl
pop
and
sub
jecxz
push
testl
addr16
aad
cld
inc
xchg
mov
fcoml
daa
mov
dec
dec
inc
imul
test
dec
and
inc
add
sub
outsb
rcrl
dec
js
iret
cmp
das
insl
fstl
lret
sbb
arpl
mov
mov
sub
xor
mov
cs
sub
push
adc
adc
and
pushf
jmp
fcmove
pop
push
fsubr
stc
push
lods
roll
bound
sahf
push
scas
outsl
insl
fimull
arpl
sub
push
in
cmp
repz
fmull
mov
jmp
adc
ficomps
leave
call
inc
shr
dec
pushf
mov
and
mov
or
mov
cli
add
test
pop
lret
or
or
push
sar
mov
jmp
insl
adc
sbb
repnz
int
sbb
mov
push
fdivl
repz
mov
mov
fldt
popf
testl
xchg
fbstp
fcmovnbe
sarl
jo
stos
shr
inc
add
push
insl
out
insb
fwait
pop
ficoml
dec
cmovge
jo
aad
int
push
sbb
mov
xchg
or
jmp
add
mov
sbb
fs
andb
fcmovbe
rsqrtps
clc
pop
jnp
mov
test
dec
jnp
or
bound
add
xor
cmp
sub
push
jg
push
mov
cmpsb
imul
sbb
pop
xor
sbb
outsb
sbb
lock
movsl
mov
addr16
adc
add
lret
dec
adc
sarl
fsubl
aas
imul
xor
lret
mov
ficomps
dec
aam
sbb
pop
adc
jo
adc
xchg
iret
sbb
iret
and
push
cmp
cmp
out
in
rcr
xchg
add
add
test
lret
fildll
sahf
jp
pop
test
xchg
mov
test
pop
int3
xor
xor
push
xchg
sub
ja
addr16
aad
dec
inc
rdpmc
daa
sbb
cmp
sbb
xchg
mov
jno
pop
test
sub
jo
arpl
jae
sti
push
ss
mov
or
outsb
repz
shll
mov
jb
pop
mov
ds
test
sti
inc
xorb
test
es
subb
stc
loop
bound
test
scas
sbb
jmp
loopne
cmp
xchg
push
cld
jns
push
cld
inc
dec
jge
or
xor
ljmp
fildll
mov
lods
jmp
scas
cwtl
cmpb
cld
xchg
mov
or
dec
fistpl
clc
mov
movsl
xchg
dec
scas
fcoml
xchg
ret
xchg
lahf
cmp
into
pop
insl
ja,pt
push
pop
add
negb
mov
popa
jp
cld
mov
xchg
fstpl
pop
push
lock
xchg
push
jge
fisubrs
cmp
int3
xor
scas
jecxz
pop
push
loope
aaa
xchg
lds
dec
rorl
inc
popa
jns
dec
lcall
xchg
mov
pushf
pop
mov
loop
repnz
andb
sti
daa
xchg
loope
xchg
testb
and
lcall
xchg
in
xchg
gs
lods
xor
rep
push
rorb
shll
push
ja
add
lcall
in
fbstp
test
sub
stos
mov
arpl
cmp
cmc
repz
lods
mov
adc
lcall
negb
movsl
mulb
push
push
imul
mov
fists
das
inc
sub
xor
lret
add
call
inc
xor
iret
cmpsb
inc
lds
push
pop
and
out
pusha
adc
pop
pop
aad
xchg
std
lds
push
cltd
ficompl
sbb
xchg
sarb
cmp
outsb
or
bound
or
repz
ret
jns
insb
cmc
dec
jge
sub
sub
insb
pop
mov
cmp
arpl
xchg
cmpsl
jl
ja
jp
popa
subl
dec
xchg
pop
inc
xchg
cmp
sub
out
push
xor
add
cld
xor
jae
lret
mov
cli
rolb
xor
xchg
lcall
mov
mov
pop
cld
add
sub
push
add
add
lea
stos
sub
hlt
xor
ja
mov
jmp
dec
ret
js
leave
stc
mov
and
dec
jle
push
cmpsl
mov
sub
sub
pop
jp
roll
std
and
loope
cmp
movsb
push
pop
sub
mov
leave
xchg
mov
je
les
or
pop
in
xor
fmull
nop
xchg
mov
pop
xor
xchg
inc
test
fstl
dec
fldt
xorl
fists
outsb
sbb
jmp
lea
push
push
mov
iret
idivl
and
das
shll
out
cld
inc
cmp
xlat
out
mulb
dec
sbb
ret
mov
bound
in
in
adc
cmp
in
dec
test
mov
sbb
int3
sbb
mov
hlt
lea
add
xchg
mov
out
mov
pop
mov
inc
fsubr
mov
aas
lret
std
pop
in
fstpl
sbb
aaa
cmp
call
stos
xchg
lahf
in
arpl
out
pop
insl
mov
in
jmp
pop
fldenv
xlat
mov
popa
dec
dec
cmp
push
xchg
dec
add
xchg
idivl
repnz
sbb
insb
mov
cld
or
cmp
or
bound
adc
aaa
xchg
pop
dec
dec
and
js
push
mov
loope
cmp
dec
ds
test
cld
pop
pop
fwait
add
jbe
mov
clc
aam
loope
pop
clc
sahf
sbb
mov
jge
imul
add
rorb
push
mov
adc
ret
iret
aam
jne
aas
xchg
mov
jmp
push
push
dec
insb
rcr
cmc
cmpsb
jns
cltd
push
sti
sbb
pop
xor
movsb
add
inc
push
jmp
popf
in
movsl
and
dec
cmp
xor
cmp
jp
int
and
jns
push
add
mov
lds
ja
jle
xchg
and
les
std
dec
and
mov
mov
jne
pop
cld
arpl
or
sbb
jmp
sbb
or
jle
mov
in
cmp
int
add
pop
outsl
push
sar
cmp
pusha
mov
xchg
xor
out
adc
fistpl
pop
jae
jl
sub
jp
pop
add
xchg
sub
popa
mov
stos
dec
mov
adc
lret
shr
cmc
xchg
lret
push
subb
iret
jle
jmp
lahf
jb
jmp
jne
in
loope
js
in
jns
lock
fnsave
sbb
sbb
or
cs
cmpl
sub
xchg
addr16
jg
inc
push
adc
xchg
xchg
add
push
mov
test
lds
fists
test
adc
imul
popf
ret
jge
mov
sbb
pop
dec
cmpl
inc
add
push
pop
push
es
mov
je
outsb
movsl
rorb
mov
adc
pop
dec
or
icebp
cli
dec
dec
ss
add
mov
sub
jbe
je
jg
outsl
stc
mov
filds
ret
aam
jecxz
add
out
fildl
scas
inc
movsb
lret
out
addl
mov
shlb
cwtl
imul
cmpsb
daa
movsb
dec
fadds
in
fcompl
lcall
adc
jnp
popa
pop
xor
mov
dec
lods
iret
inc
sub
into
mov
dec
push
xlat
adc
pop
fcompl
ror
jno
push
imul
jl
pop
sub
or
hlt
or
aam
test
lods
jnp
adc
mov
insl
outsl
xchg
lds
jnp
pop
jecxz
test
xor
lahf
adcb
ss
and
cld
aad
pop
push
aas
fstl
lods
sbb
aam
jns
or
pop
cwtl
lods
jle
aad
mov
adc
pop
imul
push
test
push
stos
in
ficompl
mov
mov
stc
aas
mov
leave
iret
push
icebp
ret
add
cmp
sub
sarb
mov
pop
cld
mov
xor
inc
mov
or
test
dec
xchg
mov
and
dec
sub
mov
jno
dec
lock
daa
xchg
jns
rcrb
fs
cs
mov
xchg
sbb
sahf
gs
outsb
cmp
jmp
fstpt
jnp
dec
cmp
loope
clc
cmp
pop
mov
sub
sbb
cmp
push
xor
cmp
xchg
cmpsb
sbb
bswap
les
xchg
push
out
lods
pop
mov
mov
test
aas
les
jg
aas
push
stos
pusha
xchg
jb
push
inc
mov
dec
outsl
mov
mov
test
fwait
xor
adc
mov
lret
or
inc
cmp
sbb
in
ljmp
mov
data16
adc
daa
fstpt
dec
cmp
sbb
and
lods
aaa
mov
lds
pop
leave
xlat
sub
lcall
cmpsl
add
je
xor
sbb
sub
imul
gs
loope
std
and
cld
dec
mov
inc
pop
out
fucomip
cmp
jnp
lea
xor
lea
sub
aam
push
xchg
jb
arpl
mov
lahf
cs
arpl
xchg
out
imul
aas
ds
icebp
cli
in
and
mov
inc
cmc
fsubrl
mov
xor
mov
in
mov
cld
dec
and
mov
je
ret
sbb
icebp
cmc
std
xor
inc
adc
or
push
jge
xor
cli
jp
lahf
stos
bound
roll
jle
and
mov
xor
and
mov
add
in
push
movsl
rcrb
and
fwait
dec
mov
addr16
jmp
dec
jge
sbb
add
notb
data16
std
lods
cmp
ja
fbstp
fs
sub
pusha
mov
sbb
pop
lcall
pusha
cmp
arpl
pushf
pop
mov
mov
push
inc
std
outsb
jecxz
cli
jecxz
cltd
jbe
std
cmp
aam
xchg
int3
xchg
mov
addr16
pop
add
test
inc
fdivr
lret
scas
or
test
repnz
and
push
push
sub
or
mov
repnz
xchg
rcrl
xchg
pop
scas
xchg
mov
stos
cmc
mov
aam
je
xor
cmp
push
add
ljmp
insb
mov
or
inc
cmp
loopne
push
sub
andl
vpor
fwait
jle
out
or
ljmp
xlat
stc
mov
cmc
or
cld
cs
dec
lods
pop
push
inc
das
call
sbb
test
mov
sbb
push
mov
sahf
test
jno
pushf
idiv
stos
inc
rol
cmpsl
xchg
mov
mov
clc
ja
mov
add
negl
dec
mov
xor
stc
mov
inc
int
push
lret
andb
push
test
mov
or
sub
in
sub
jno
fstpl
sub
cmpl
popa
push
js
cmp
je
out
aam
cmp
ds
add
sbb
sub
pop
xlat
cld
out
jg
dec
pop
daa
fsubl
mov
mov
bound
xorl
and
xchg
push
ret
cli
push
dec
add
cmc
into
cmpsl
or
es
pop
iret
cld
jle
lea
fildl
adc
fstpt
lock
pushf
pop
inc
jp
jmp
lcall
fcompl
dec
sbb
push
aas
rcrl
je
dec
xchg
ret
rol
pusha
or
popa
es
sahf
imul
inc
pop
dec
insb
rcrl
test
sarl
lods
xor
mov
mov
call
aaa
nop
dec
jb
outsl
rclb
stos
dec
fisttpll
lret
sbb
lods
es
and
mov
leave
div
hlt
add
adc
jl
out
pop
lods
cmpsb
mov
adc
mov
into
dec
bound
push
sub
xchg
in
shlb
mov
push
jbe
mov
pop
sub
push
push
pop
jle
xchg
mov
fldcw
int
inc
jno
cmp
xor
scas
call
jge
popa
aas
sar
pop
fiadds
or
mov
fwait
xchg
jmp
pushf
cwtl
lea
sub
mov
inc
popf
pusha
repnz
dec
lcall
mov
adc
xchg
test
and
data16
imul
mov
loope
shll
push
add
std
inc
sub
enter
ljmp
cld
in
push
in
adc
ror
and
xchg
out
xor
rcl
sti
loop
sub
std
mov
imul
or
push
inc
out
mov
dec
push
cmp
jge
testb
les
lock
mov
mov
mov
mov
insl
fidivl
out
fcmovnbe
sub
adc
mov
jae
pop
jnp
sbb
cmpsl
or
xor
mov
mov
adc
insb
adc
lock
jne
sub
pushf
inc
out
iret
call
add
dec
adc
xchg
pop
adc
add
xchg
push
mov
in
add
inc
jmp
xor
subb
into
sbb
pop
or
out
in
or
mov
daa
and
inc
sti
lret
test
adc
call
ss
divb
int3
fnsave
in
ret
inc
scas
and
outsl
inc
in
fstps
mov
push
or
daa
out
sub
xor
inc
and
je
movsb
lret
xlat
test
sub
xor
lahf
int3
mov
and
push
cmp
and
fcomp
mov
andnps
rdtsc
jnp
outsl
pop
adc
cmp
fldcw
lret
call
outsb
xchg
mov
movsl
sarb
pop
movsb
pop
ja
and
popf
inc
out
lcall
add
fmuls
cmp
mov
inc
sub
cmpsb
pop
imul
lret
sub
repnz
cmc
fdivrs
lea
mov
sbb
mov
adc
out
pop
das
iret
fdivrl
popa
fnop
sub
sti
or
lods
push
jae
sbb
int
jle
dec
lods
lock
decl
pushf
jg
ljmp
push
pop
imul
and
test
push
ret
inc
pop
arpl
inc
xor
push
shll
adc
mov
jl
jmp
loop
cmpsl
mov
out
xchg
jp
xchg
adc
out
mov
xor
jmp
dec
sbb
adc
xor
fnstenv
xchg
xchg
wrmsr
inc
stos
push
xchg
incl
jo
repz
jecxz
arpl
test
icebp
cltd
fisttpl
pop
leave
aam
imul
inc
jl
aam
xchg
pusha
rorb
ret
daa
cmp
mov
mov
adc
mov
daa
jae
mov
ds
sub
mov
inc
mov
and
xorb
xchg
add
mov
push
and
das
xchg
sbb
pop
dec
out
enter
movl
cmp
xor
adc
pushl
xchg
push
sub
xor
pop
xchg
aaa
int3
or
mov
add
iret
rcr
mov
rcrl
ds
cmpsl
outsb
aam
pop
ljmp
push
push
and
imul
rcll
and
cmc
ret
xlat
leave
out
movsl
or
adc
sub
shll
test
jae
add
cltd
ja,pt
rorb
cwtl
xchg
fisubl
cmc
jb
arpl
add
cmp
mov
daa
xchg
out
jb
dec
rorl
nop
xchg
ss
mov
shll
stos
inc
lea
add
and
adc
mov
xchg
push
inc
in
xorl
jnp
jno
fstpt
push
rcll
mov
push
mov
test
movsl
mov
add
push
cmp
xor
mov
inc
loope
popa
add
add
push
mov
aad
mov
fists
jae
xchg
loope
cmp
lds
sub
pop
ja
cs
and
dec
mov
addr16
or
loop
stos
dec
dec
add
sub
mov
pshufw
jns
mov
les
xor
push
js
aas
popf
imul
arpl
sub
push
sarl
out
dec
int
xor
fadds
push
push
stc
inc
jns
sbb
jl
or
mov
call
or
insl
fcmovnu
test
into
or
nop
inc
ret
out
shrb
dec
pop
xchg
adc
fldenv
scas
rclb
jne
ss
cmc
mov
jns
inc
mov
inc
int
cmc
add
insb
inc
or
sub
cmpb
icebp
sbb
pop
or
pop
stc
nop
mov
dec
loope
andb
sub
xchg
lods
jmp
add
mov
mov
adc
divb
hlt
lcall
add
xor
sub
ror
sbb
inc
int
js
jbe
push
ja
xor
sub
pop
fsubl
pop
cltd
push
and
pop
push
fmuls
imul
sbb
xchg
enter
add
fsubp
bound
insl
mov
pop
sub
in
insl
enter
dec
sub
aas
les
repz
stos
xchg
cmc
out
add
mov
jecxz
rcrl
icebp
dec
int3
out
adc
push
push
mov
repnz
push
fbstp
into
arpl
stos
sbb
adc
push
mov
pusha
cmp
cltd
adc
xor
movsl
xor
lahf
push
mov
push
mov
dec
shrb
lds
fisubl
and
aam
pinsrw
jns
adc
or
in
out
push
jecxz
loope
add
mov
add
mov
cmpsl
xor
inc
mov
lret
jle
into
rolb
mov
xchg
es
loopne
cld
xchg
imul
or
sbb
or
outsb
clc
sbb
xor
cwtl
add
xchg
adc
cmp
jbe
jp
pop
movsb
fsubs
shll
shrb
mov
jne
inc
or
sub
lret
je
les
adc
fists
in
in
mov
loop
loope
jecxz
data16
or
icebp
mov
mov
sbb
mov
or
icebp
push
dec
push
rcrb
arpl
addr16
sbb
jae
loope
cmp
sub
push
sub
hlt
or
mov
outsl
repz
imull
insl
mov
jns
or
jbe
push
sti
mov
stos
pusha
mov
inc
xor
mov
or
jmp
sarl
jl
inc
xchg
jle
movsb
jno
aaa
xchg
rcrl
mov
mov
cmp
dec
xlat
shr
dec
gs
mov
dec
enter
jo
out
js
iret
test
decb
cmpsb
sbb
mov
adc
mov
fs
dec
addr16
pop
fsubr
ds
xor
mov
imul
sub
sbb
aad
cmp
mov
inc
xchg
ret
mov
pop
inc
or
adc
or
pop
push
neg
mov
sbb
hlt
cmpb
outsl
push
loop
ret
pop
push
push
loope
pop
enter
shrb
movsl
fcoms
or
std
inc
adc
adc
loop
sub
and
sub
inc
sub
fs
lods
fisubs
insl
mov
push
xchg
mov
into
ret
aam
jg
dec
jno
adc
addr16
repz
jb
jge
mov
bnd
inc
pusha
inc
leave
stos
shl
or
sub
mov
lods
popa
arpl
out
enter
jbe
loope
xchg
jecxz
cmp
jb
pop
outsl
popa
pop
cmpsb
add
xchg
jge
adc
jo
movsb
dec
loope
ficompl
shlb
inc
mov
jle
dec
push
mov
pop
clc
xchg
movsl
sbb
push
std
call
adc
stos
push
inc
test
add
ret
adc
sub
adc
adc
sbb
dec
dec
xchg
cmc
xlat
sbb
inc
lret
mov
testb
xchg
xchg
or
mov
cmpsb
fmuls
and
out
repz
mov
pop
test
movsl
or
int
jns
sub
gs
add
pop
int3
sbb
movsb
imul
mov
fldt
dec
xlat
or
fdivrl
mov
mov
aaa
inc
sub
lock
in
roll
adc
nop
inc
rorl
iret
pop
or
or
add
inc
sbb
arpl
inc
sub
push
sbb
call
sbb
test
sub
push
and
lods
xor
lods
pusha
gs
in
jne
or
ss
lret
mov
mov
push
lds
xchg
pop
stos
jno
jne
jbe
mov
les
dec
addr16
and
jecxz
int3
stos
push
addb
fisubl
cltd
fidivs
addb
mov
jne
mov
mov
xchg
insb
xchg
cmp
pop
inc
into
sbb
jne
inc
test
inc
ret
add
sub
cmc
pcmpgtd
and
sub
sbb
es
add
sbb
jmp
ret
shrd
push
mov
mov
xor
cmp
add
ret
pop
push
lret
in
jae
shll
pop
xor
xchg
int3
cmpl
cwtl
or
jo
bound
lods
push
fwait
sbb
stc
dec
xor
test
bound
pop
fsub
pushf
pop
mov
cs
push
push
pop
dec
cwtl
push
addl
popa
decl
lret
cltd
xchg
mov
adc
push
fidivs
add
inc
fcompl
ror
sahf
cmp
adc
xchg
xchg
pop
or
sahf
call
cmp
std
lcall
movsl
ljmp
cltd
cmp
pop
dec
cmc
movsl
lret
or
jmp
rorb
xor
ret
repz
xchg
scas
inc
out
icebp
loope
mov
stc
add
sbb
adc
mov
je
repz
pop
repz
sti
pop
int3
iret
cmp
cltd
imul
orb
repz
lods
adc
insl
sbb
frstor
adc
xchg
jno
pop
cmp
mov
pop
ret
divl
inc
pop
inc
xchg
dec
mov
movsl
xchg
or
mov
pop
jle
sbb
daa
jo
fidivrs
outsl
scas
mov
push
cltd
mov
jle
and
fstp
adc
xor
and
jbe
in
sbb
pop
pop
popf
in
daa
cmpsl
lret
dec
dec
sbb
lahf
f2xm1
loopne
or
sbb
ljmp
jecxz
dec
dec
push
push
outsl
xchg
dec
lock
sbb
jp
les
inc
xor
loop
jns
inc
pop
or
into
repz
inc
pop
negb
xorl
inc
iret
push
imul
mov
and
and
je
lahf
das
pop
lods
push
fcoms
push
punpcklbw
push
mov
cld
sub
pop
xor
or
jns
and
mov
inc
adc
das
enter
push
iret
mov
push
subb
add
mov
cld
int3
fisubrl
mov
flds
lods
sahf
or
pop
imul
mov
inc
push
or
push
leave
scas
xchg
popa
xchg
iret
arpl
and
push
movsl
ljmp
push
sbb
xchg
xchg
jb
sbb
imul
cmp
xchg
popa
shrl
cmp
jmp
dec
mov
adcb
jnp
lret
xlat
lea
rcrb
pop
nop
sti
lods
pause
xor
sub
jg
inc
dec
ljmp
rolb
in
mov
jo
jb
pop
xchg
adc
test
cli
lods
pop
fstpt
insb
xchg
out
mov
cmp
shrb
sbb
hlt
popf
in
aad
cmp
dec
iret
dec
cmp
dec
or
xor
das
cmpl
icebp
cmp
xor
inc
insb
movsb
test
lret
or
rcrl
mov
xchg
mov
cmpsl
lahf
adc
repz
add
jle
mov
adc
popf
sbb
adc
or
mov
fsts
pop
les
cltd
add
pusha
cltd
mov
inc
mov
jecxz
outsl
jb
stos
movsl
or
ja
lret
enter
outsl
cmpsb
lock
xor
jl
inc
out
mov
or
leave
test
jmp
push
jns
divl
lds
stos
into
int3
shrl
sub
dec
test
add
jne
cs
and
mov
fsubp
aam
jo
push
aad
mov
cmp
jb
push
cmc
mov
jno
test
das
mov
loopne
mov
shlb
flds
insb
inc
mov
test
sub
jno
pop
mov
cwtl
sub
sbb
pop
xor
cwtl
push
lea
mov
cs
cmpsl
ds
mov
xchg
sub
frstor
and
in
imul
xchg
adc
pop
pop
cmp
fidivrs
das
push
cli
xchg
xchg
push
pop
adc
addb
xor
inc
mov
mov
cmp
sbb
dec
in
gs
das
pop
lds
push
xor
cmp
mov
daa
sub
sbb
leave
mov
in
or
push
pop
scas
xchg
out
pop
jg
xchg
push
popa
fwait
call
sub
mov
lahf
lods
stos
jg
sub
cmpsb
loopne
lods
inc
dec
test
mov
mov
test
push
and
mov
inc
in
out
fsubl
ret
mov
mov
test
insb
sbb
pushf
imul
jbe
jecxz
add
std
jns
inc
shrl
sbb
test
push
push
push
add
jns
mov
daa
adc
inc
or
out
sub
in
jp
das
or
cltd
jl
mov
mov
or
dec
divb
daa
mov
lcall
out
adc
mov
sub
daa
xchg
js
aam
lret
xor
nop
test
dec
loopne
xor
dec
orl
call
sbbb
sahf
mov
push
bound
and
lods
sub
into
dec
jno
divb
test
ret
sub
roll
dec
stos
outsb
loope
mov
int
cmpsl
push
negb
jle
sub
ret
push
rclb
ss
inc
loope
dec
inc
cmpl
xchg
iret
adc
ret
or
nop
sub
cmc
or
arpl
sbb
cmp
mov
lods
lahf
pusha
mov
push
ret
push
cmp
sub
mov
addr16
fdivs
push
lods
mov
pop
imul
dec
or
add
scas
outsb
xchg
shlb
sbb
rcrl
or
lahf
int3
mov
sbb
stos
add
jmp
lahf
cmc
ds
repnz
xchg
xchg
jl
xorl
dec
es
iret
movsl
lea
lret
mov
ret
sbb
lret
iret
dec
mov
push
movsl
pushf
xor
test
xchg
add
mov
repz
into
pop
jle
dec
fsubl
xor
ret
aam
adc
ja
repnz
xor
and
mov
sub
push
jb
popa
stos
push
orl
int
cld
push
inc
inc
movsb
mov
lods
pop
inc
fs
ljmp
mov
and
jae
fistl
mov
ljmp
add
dec
mov
je
push
cmpsl
stc
je
loope
data16
adc
stc
dec
mov
sub
or
aas
push
add
out
hlt
dec
mov
lcall
fbstp
mov
sbb
in
jne
pop
nop
repz
push
int
mov
dec
fs
icebp
and
sbb
sahf
in
cwtl
iret
scas
sbb
pop
pusha
cmp
inc
and
add
cmpsl
in
add
mov
inc
outsl
es
les
sub
fisubrs
outsb
mov
lret
repz
aas
xlat
test
adc
sti
mov
cmp
je
jnp
push
inc
test
loopne
fimull
pop
cmp
test
loop
fsts
fcompl
in
mov
test
in
or
cmc
push
pushf
mov
add
fidivs
and
mov
sub
int
icebp
or
push
dec
lahf
or
dec
shlb
add
dec
daa
dec
jg
fstps
mov
addr16
mov
outsl
dec
sub
jne
insb
das
dec
lret
cwtl
mov
lea
sbb
fwait
lds
loope
mov
shr
fs
scas
mov
aas
mov
hlt
mov
test
xchg
clc
add
add
data16
addr16
insb
test
cmp
mov
repz
add
mov
adc
leave
mov
sahf
lret
lock
rcrl
aas
pop
push
xchg
mov
dec
insb
cmc
cmp
jnp
insl
sbb
in
sbb
stos
arpl
jl
cmpsl
ljmp
jecxz
cmp
dec
push
out
cmc
xchg
dec
sbb
pop
fwait
nop
shll
xor
and
inc
sub
pop
jns
nop
adc
imul
std
adc
mov
addr16
mov
inc
insl
push
mov
mov
and
insb
sti
cmp
or
push
add
test
loope
xchg
mov
int3
cltd
rcr
loopne
or
cmp
pop
outsb
sbb
sub
in
scas
pop
add
mov
ja
adc
aaa
jbe
jno
clc
rolb
insl
sub
rcrl
cmpsb
adc
pop
test
mov
loope
shll
fdivs
dec
or
pop
in
in
mov
loope
in
jge
mov
pop
aam
inc
mov
cmp
les
xor
pop
es
xor
push
lahf
or
je
add
lcall
loope
fchs
sub
push
push
pop
lret
sbb
jbe
push
rclb
jnp
outsl
bound
fstl
test
push
js
ret
fidivl
out
icebp
stc
sub
sti
hlt
mov
je
and
cmp
jae
jmp
mov
sbb
rdtsc
inc
out
cmp
cmp
jbe
into
xlat
sbb
adc
icebp
mov
lods
cmp
mov
int3
inc
and
arpl
nop
icebp
addr16
xor
cwtl
popa
mov
pop
mov
jae
dec
and
mov
or
ljmp
inc
imul
in
or
pop
inc
or
push
sbb
movsb
mov
adc
adc
jmp
inc
movsb
mov
rorb
and
movsb
imul
mov
scas
cld
and
sub
popa
adc
xor
sbb
pop
pop
xchg
xchg
add
and
push
hlt
jg
lret
push
xor
out
mov
xchg
aam
or
test
cmp
mov
jg
mov
jg
hlt
sub
sbb
iret
call
pop
pop
lods
in
popl
jge
sub
lea
popa
mov
sti
xchg
fwait
aam
mov
out
mov
aad
ja
dec
xlat
out
push
cmpsl
pop
mov
jle
xor
mov
sbb
xchg
xor
push
inc
sub
in
xchg
shl
adc
gs
sub
pop
xor
mov
ja
loop
loope
lcall
imul
jae
inc
daa
fisubrs
push
mov
lods
sti
pop
paddsw
cmpsl
push
lods
popa
ret
xchg
cld
cmc
push
sbb
mov
push
sar
fnsave
jne
std
or
jmp
lret
lret
je
jge
andl
mov
leave
xorb
mov
shr
inc
outsb
ja
in
loope
inc
lcall
gs
imul
adc
repnz
mov
enter
stc
enter
xchg
dec
jmp
leave
imul
cmp
push
sbb
dec
mov
sbb
into
in
aas
mov
pop
dec
rorb
aad
out
lods
mov
insl
cltd
std
or
aad
loop
pushf
pop
mov
or
jmp
pop
or
inc
out
jecxz
xchg
push
loope
stos
stc
in
push
fnsave
cwtl
jno
cmp
mov
in
dec
jle
mov
enter
mov
mov
add
push
add
cld
push
stos
inc
cwtl
sbb
loopne
xchg
sbb
mov
lods
pop
stos
cmp
movsb
xchg
mov
les
dec
fbstp
divps
das
mov
xchg
scas
pop
cmpl
imul
outsl
pop
push
add
sub
mov
cmc
out
pop
ss
fucomip
cmpl
rcrb
sbb
int3
push
add
xor
xorb
stos
les
xor
vmwrite
sysexit
sub
adc
jb
idivl
out
iret
loope
imul
je
jo
xor
js
sbb
add
pop
adc
sub
cltd
std
cwtl
push
add
aaa
call
imul
pop
and
dec
in
jle
mov
sub
insl
mov
imul
jb
cmp
and
lods
xor
shll
and
xchg
outsb
outsl
inc
or
xor
jno
or
or
bound
cmc
scas
loop
sbb
loopne
push
sub
cs
push
push
leave
mov
aas
loop
inc
es
gs
adc
in
and
mov
hlt
outsb
clc
cmp
shr
pop
fs
cmpsl
dec
jae
stc
jns
pop
inc
cs
sbb
fdivrs
dec
adc
rcll
inc
sub
xlat
insl
xor
shrb
jae
ret
inc
mov
inc
pop
aad
negl
mov
xchg
inc
ds
push
imul
sbb
iret
call
lahf
dec
cltd
pushf
mov
add
xor
xor
lock
push
sub
rolb
pop
dec
fdivrp
mov
sub
push
push
cmp
andb
xchg
cld
xchg
js
data16
addl
mov
bound
adc
pusha
xchg
push
pop
mov
cwtl
mov
mov
lret
fbstp
arpl
dec
inc
cwtl
xor
daa
daa
mov
cmp
testl
cmc
and
add
cwtl
rol
mov
mov
xor
repz
ret
sbb
cltd
mov
mov
popf
mov
cmpsl
das
popf
hlt
xor
mov
daa
hlt
push
fidivs
jae
jge
iret
hlt
scas
push
push
std
mov
xorl
mov
arpl
pop
pop
xchg
xor
mov
push
and
orb
fsubrl
or
mov
cltd
push
shll
data16
push
cmp
stc
scas
pop
movsb
cwtl
insl
test
pop
or
sbb
adc
add
adc
xor
cmp
pop
rcrb
std
loopne
stc
dec
in
dec
fldt
xchg
xchg
xor
loope
xchg
lods
imul
push
imul
or
je
pop
sub
pop
addr16
addr16
clc
sub
cmp
shlb
lahf
lods
jns
pushl
rcll
jns
mov
ss
cmp
fsubl
stc
jl
int3
iret
ret
iret
xor
daa
push
mov
mov
mov
add
xchg
repz
divl
xor
xchg
cmp
inc
loop
mov
loope
and
outsb
jo
out
dec
test
packsswb
fcmove
in
in
les
dec
loop
cmp
and
cwtl
sub
mov
push
fsub
sahf
push
sub
movsb
xchg
jne,pn
dec
mov
pop
fcomps
pop
dec
dec
and
fildl
xor
aam
cmp
xchg
shrb
or
shlb
movsl
imul
adc
mov
aaa
aad
jns
dec
mov
jecxz
popf
lret
mov
insb
call
mov
mov
or
pop
lret
add
test
sar
sbb
shrl
dec
mov
divb
repz
mov
data16
rorl
mov
ds
mov
cli
inc
sub
xchg
mov
mov
mov
and
xchg
fucomip
inc
fdivs
out
rcl
lcall
mov
sbb
repnz
fldl
jle
inc
std
fnstcw
dec
mov
xchg
fiaddl
adc
dec
call
imul
mov
cmpsl
aas
std
fmull
out
mov
bound
mov
dec
in
jne
mov
scas
aam
cmp
call
fistpll
push
cmc
sub
pop
cmp
mov
pop
xchg
mov
fidivs
jle
or
mov
dec
sbb
loopne
insl
inc
js
sarb
lcall
lahf
outsl
xchg
adc
ficoms
or
movsl
into
data16
into
mov
sar
mov
pop
mov
and
test
or
cmp
daa
bound
mull
mov
sbb
rolb
push
dec
mov
insb
aas
scas
push
sbb
test
divl
jle
sbb
jne
mov
add
pop
cwtl
add
icebp
arpl
xlat
jge
push
inc
iret
and
or
dec
lret
mov
sbb
mov
dec
insb
dec
int
mov
xchg
lods
sbbl
ja
and
cmp
cmp
sub
fnsave
lahf
xor
mov
push
pusha
cmpl
xchg
jae
xor
add
jns
jle
sbb
lds
push
add
mov
data16
cwtl
cmpsl
pop
jp
add
int3
into
jb
sti
push
cld
dec
lret
sbb
xchg
jp
aaa
and
lcall
or
int3
ljmp
stc
or
xor
fwait
cli
or
push
pop
mov
enter
in
insb
lret
sbb
into
xchg
rclb
popa
and
and
mov
mov
mov
cmc
push
aaa
cwtl
adc
into
adc
das
scas
sub
mov
stos
mov
inc
xchg
and
sahf
xor
mov
sub
mov
dec
jle
pop
sbb
xchg
addl
sbb
mov
daa
xchg
es
push
inc
push
adc
pop
leave
into
dec
add
push
mov
cmp
mov
pop
in
movsb
repnz
movsb
je
cwtl
xchg
push
mov
push
fildl
icebp
xlat
test
ljmp
lahf
gs
cltd
test
out
cmpsb
adc
sahf
cmpsb
push
loopne
ss
movsl
or
fldcw
lret
out
or
lods
jp
adc
adc
cmp
lock
sbb
lds
jle
iret
add
adc
stos
xchg
lahf
sub
daa
jo
dec
outsl
push
xlat
mov
sbb
lods
ret
leave
push
sub
movsb
push
daa
sub
int3
into
into
pop
out
pop
jp
xor
pop
aas
dec
sub
shufps
mov
adc
jp
jae
imull
xor
rorb
stos
out
repnz
dec
scas
xor
or
aaa
mul
mov
repz
scas
imul
inc
cli
hlt
inc
movsb
jle
dec
xor
adc
sub
pop
movsl
aas
ljmp
insl
mov
push
sbb
sub
mov
jmp
negb
inc
out
sbb
fcoml
ds
push
xchg
out
gs
ret
cmc
inc
dec
jecxz
mov
inc
push
lock
inc
add
add
cmp
fxch
push
nop
mov
test
les
fs
xchg
push
lock
sbb
lock
jp
ljmp
in
sbb
xchg
mov
shl
or
xor
xchg
mov
ds
push
mov
not
movsb
xor
xor
je
push
rclb
sbb
insl
inc
mov
xor
xchg
lds
xchg
or
sbb
je
aaa
sbb
push
hlt
add
xor
inc
int
test
mov
mov
inc
mov
in
pop
gs
mov
xchg
lock
cmp
dec
sbb
push
fimull
into
test
push
inc
mov
cmp
sub
out
xchg
mov
inc
mov
xor
jmp
mov
out
shlb
cmp
xchg
xor
clc
push
cs
pop
push
aam
adc
jl
in
pop
leave
ds
ja
add
inc
push
push
cs
pop
mov
cmp
xchg
inc
pop
into
gs
xchg
popf
lahf
or
divl
daa
or
movlps
lods
nop
popa
fidivrl
xor
inc
push
repz
xchg
push
add
and
jl
jg
mov
adc
xor
icebp
pop
sub
rol
das
add
or
xchg
jnp
cmc
or
cmp
push
mov
xor
cmp
out
loope
mov
outsb
out
sbb
add
js
push
and
mov
jno
loopne
insb
movsb
dec
dec
xor
outsb
mov
add
sarb
xlat
arpl
rcrl
push
xchg
out
ja
jmp
sub
push
pop
push
fstpt
adc
ret
je
lock
pop
daa
xchg
push
inc
jle
and
pop
ret
cmpsb
push
into
adc
dec
inc
lods
movsb
shrb
in
ret
dec
mov
and
push
movsw
enter
stc
push
icebp
jbe
dec
gs
and
jg
mov
xor
inc
adcb
pand
cs
and
jp
sbb
pushf
cs
pop
xor
dec
fbld
int
movsb
fsin
or
gs
jnp
ficompl
icebp
add
out
out
inc
in
call
mov
cs
push
xchg
roll
scas
adc
xor
es
out
ret
push
rolb
scas
jnp
adc
idivl
js
repz
sbb
mov
and
pop
cltd
outsb
lretw
rolb
xchg
push
and
cmc
dec
daa
lock
mov
inc
shl
out
jge
inc
mov
pop
enter
imul
movsl
jo
jnp
push
pop
pop
inc
mov
fidivl
in
ja
out
andl
fnsave
mov
push
xchg
xor
push
add
or
imull
sub
push
dec
jae
jmp
push
lahf
aas
sub
or
pop
sarb
iret
out
jns
cwtl
cmpsb
js
xor
add
fwait
or
xorb
mov
insl
inc
aas
push
dec
sahf
lea
cld
mov
mov
jnp
xor
inc
rol
popf
and
aas
pop
cltd
dec
idivl
ret
sarl
jnp
cmp
ficomps
popf
and
popf
add
push
stos
mov
out
add
jno
mov
int
movsl
xchg
push
push
test
cltd
fdivrs
int3
shl
xchg
daa
sub
and
inc
or
pop
out
lcall
test
cmp
mov
mov
push
repz
fsubl
shr
jb
pusha
mov
in
and
pop
or
pop
fidivs
loopne
push
outsb
shll
mov
jae
fstpl
jb
scas
dec
pop
dec
sti
pop
jae
add
popa
out
mov
insb
xorl
cmp
push
jo
jb
int3
fcmovb
push
int3
push
imul
mov
daa
jmp
outsb
int
les
sub
mov
mov
sub
aam
imul
dec
pop
dec
sbb
outsb
xor
inc
push
mov
ja
test
aas
pop
cs
and
mov
shrl
inc
xorb
mov
sbb
loopne
rol
mov
mov
gs
xor
fstl
pushf
jo
adc
jle
fiadds
and
sbb
push
xchg
mov
xchg
iret
sub
outsl
popa
or
fsub
fildl
inc
jp
cld
mov
or
rcrl
lds
push
jp
in
dec
mov
xchg
xlat
pop
mov
fildll
dec
lods
mov
fistl
push
push
xchg
sbb
cltd
movsl
popa
add
and
mov
mov
inc
insl
lret
movlps
ljmp
cmpsl
add
mov
and
fisubrs
xchg
xchg
dec
mov
jns
pop
sbb
scas
inc
xchg
cs
xor
push
rclb
mov
icebp
and
insl
and
into
aam
fldl
ret
cltd
xchg
fstpl
inc
sbb
inc
cmc
add
test
add
mov
pushf
js
in
repnz
dec
nop
call
aaa
lds
push
ficoml
adc
shlb
push
pop
sub
and
dec
sub
mov
xchg
inc
sbb
and
inc
inc
mov
dec
xor
in
mov
int
dec
movsb
pushf
mov
js
scas
cmp
lahf
imul
rcrl
mov
mov
mov
int
dec
jp
inc
daa
dec
sbbb
ret
fwait
xor
mov
sahf
pop
inc
lea
js
cmp
sub
cmp
mov
leave
rcrb
ret
sub
mov
pop
add
fisttpl
popa
mov
and
icebp
jle
icebp
xchg
arpl
aaa
adc
pop
mov
inc
stos
xchg
enter
and
lea
dec
pop
outsl
insb
inc
sahf
push
insb
xchg
mov
stos
div
jl
negb
sahf
fiadds
sub
cmp
cmp
cmpsl
dec
aas
jbe
orl
mov
repnz
pop
popf
push
push
adc
xor
loope
fbstp
push
xchg
in
and
mov
mov
movsl
mov
sbb
mov
jge
int3
jbe
mov
loope
fs
jnp
inc
dec
mov
fs
or
stos
xchg
andb
arpl
mov
ret
xchg
clc
push
adc
sarb
xchg
std
sbb
dec
push
popf
stc
xchg
adc
jl
xchg
mov
arpl
test
fdivrs
xor
push
scas
sbb
repz
stos
sti
and
les
addr16
mov
mov
add
outsl
clc
shl
add
test
in
mov
popf
mov
pop
mov
mov
jb
xor
sub
cmp
inc
xor
fdivl
mov
leave
xlat
lea
mov
int3
inc
xorb
and
iret
mov
lahf
lock
stc
sbb
mov
dec
lahf
cmp
mov
call
dec
outsl
fdivp
inc
xor
and
xor
pop
jno
ljmp
into
add
mov
push
bound
mov
scas
xchg
mov
push
fisubrs
fisttpl
je
pop
sub
movb
and
nop
mov
or
enter
add
enter
test
popa
xchg
ds
push
insl
lret
sub
sti
mov
mov
cwtl
adc
mov
lods
stos
and
sbb
ret
negb
jb
mov
jge
inc
shrb
dec
test
or
cmp
mov
mov
aaa
cmp
or
mov
dec
int3
outsl
mov
insl
push
ja
push
fcompl
decb
sub
or
test
lds
dec
adc
mov
shrl
mov
mov
mov
cmp
loope
lret
test
mov
cmp
xchg
mov
aad
add
ja
fldenv
subl
xchg
push
push
xor
in
sbb
loope
mov
push
ret
shr
mov
sub
sbb
sbb
or
add
fstp
fucom
dec
lods
xchg
lcall
dec
mov
dec
addr16
or
inc
test
daa
mov
sarb
mov
dec
mov
pop
rcll
cld
pop
jle
xor
outsb
cwtl
and
and
lret
stos
stos
and
mov
lods
or
nop
add
sbb
shl
data16
jne
sbb
sub
clc
mov
mov
aad
fwait
or
mov
shrl
aas
fs
daa
jns
fsubp
dec
xchg
ret
out
fildl
hlt
mov
mov
xchg
ret
cmpsb
outsb
cld
les
rolb
cld
push
das
jno
fiadds
dec
clc
xchg
pop
popl
mov
xchg
bound
dec
mov
adc
addr16
xor
jne
mov
cmpsb
xor
jb
repz
xor
loop
mov
out
jb
jae
xchg
sub
pop
fwait
adc
add
test
in
mov
lcall
jb
mov
dec
mov
fcmovnu
fmull
popa
sbb
dec
out
icebp
jo
fdivp
inc
test
mov
or
mov
test
movsl
stos
jmp
enter
icebp
adc
and
pop
cmp
cmp
jb
adc
in
fnsave
mov
or
adc
fcmovnbe
iret
adc
stc
popa
aam
dec
cmp
cmp
pop
adc
dec
jecxz
inc
cmp
xor
xor
inc
popf
mov
or
cmp
hlt
cmp
enter
sub
test
dec
add
adc
sbb
cs
jle
jg
mov
dec
subb
dec
and
or
sbb
sbb
jnp
dec
iret
leave
jl
jmp
movsl
sub
jle
sbb
and
inc
and
test
push
addl
push
mov
sbb
mov
bound
movsl
cmpsb
popf
stos
dec
or
xchg
shrl
jnp
jmp
loope
sbb
mov
sbb
aaa
pop
notb
fisubl
pop
jl
cmc
mov
aas
adc
mov
mov
mov
mov
std
cld
pop
leave
test
pop
sub
xor
sub
inc
out
loop
xor
jp
sbb
mov
flds
std
scas
rcrl
inc
js
imul
iret
add
ja
xchg
cvtps2pd
cmp
out
fbstp
mov
test
sbb
rolb
or
jecxz
sbbb
mov
push
xor
xor
push
movsb
loop
sub
lahf
adc
ss
addr16
loop
or
mov
dec
pushf
sti
popl
andl
popf
add
pop
fadds
insl
divb
mov
push
insb
cs
inc
outsl
pop
inc
outsl
scas
mov
jecxz
dec
addb
movsb
lret
in
rorb
hlt
push
aam
pop
adc
int
push
cwtl
bound
testl
add
inc
into
sbbb
out
mull
notl
or
xor
xchg
or
je,pn
adc
nop
jo
fnstenv
fwait
or
mov
adc
repnz
jg,pn
mov
adc
xlat
lret
push
dec
loopne
lret
mov
out
sub
loop
outsl
xchg
mov
loope
inc
sub
jmp
shrb
adc
sub
cmpsb
mov
rcrl
aad
insb
ffreep
cli
out
test
push
cmc
adc
clc
int3
cmp
stc
rclb
jnp
sbb
jne
add
mov
mov
cmp
jle
hlt
cmpsb
in
lahf
mov
mov
xchg
sub
dec
push
ficompl
pop
push
dec
mov
adc
dec
xchg
dec
lds
mov
pop
stos
scas
mov
adc
pop
and
cmp
loop
xchg
data16
test
xor
cmovns
mov
rolb
xchg
pop
and
repnz
mov
ds
xchg
rcll
imul
int
imul
lret
cmp
aas
mov
repz
mov
push
inc
fwait
and
inc
xor
pop
jne
pusha
push
dec
test
sub
sti
pop
adc
dec
std
data16
or
push
test
inc
sbb
jae
or
xor
and
imulb
dec
andl
negb
jnp
mov
xor
pop
jbe
xchg
or
xchg
pop
pop
inc
xchg
mov
adc
adc
mov
hlt
dec
shl
les
adc
pop
roll
popa
inc
sub
cli
xor
es
scas
inc
cltd
ss
gs
mov
sbb
nop
pop
iret
mov
mov
cmp
pop
dec
jae
and
mov
pop
push
and
shl
xor
pushf
fists
push
mov
or
jg
pop
pop
aas
cmp
stos
pusha
push
mov
repz
pop
xor
scas
aam
scas
inc
scas
sbb
pop
arpl
xchg
aad
cmc
push
fldenv
mov
repnz
pop
lods
movl
mov
popa
clc
test
out
pusha
testb
ljmp
jge
xor
ljmp
fldt
add
mov
leave
mov
sub
sub
adc
sbb
cmp
je
aad
push
testl
dec
je
leave
or
mov
push
xchg
hlt
aaa
clc
push
lahf
xor
mov
mov
pop
cmpsl
and
das
scas
mov
mov
ds
fs
cli
sub
mov
decl
mov
adc
in
cmc
jl
cld
or
sub
inc
rorl
add
test
xchg
scas
nop
xchg
ret
jbe
or
je
mov
lods
in
xchg
xchg
jns
ljmp
or
outsb
in
mov
mov
xor
fadd
jno
inc
adc
mov
es
call
repnz
clc
cmp
mov
stos
ljmp
pushw
imul
mov
out
sub
cmp
ljmp
mov
and
cmpsl
pushf
out
sub
pop
movsb
pushf
out
mov
mov
loope
nop
mov
pop
adc
lret
bound
arpl
dec
and
dec
xchg
mov
push
jle
sarl
add
mov
cmp
push
jbe
inc
and
sub
inc
and
jno
dec
mov
arpl
cwtl
scas
stos
mov
scas
xchg
or
jo
dec
ljmp
push
insb
xor
and
push
stos
je
inc
cmp
out
insl
push
inc
pop
mov
mov
subb
insb
xchg
test
xchg
outsb
test
or
incl
repnz
js
ss
pop
mov
jbe
lock
jae
jne
add
ljmp
lret
or
jbe
in
jnp
ret
aam
push
xchg
mov
ljmp
sbb
pop
scas
and
sbb
les
lret
lds
ss
cmp
fs
add
xor
adc
fistpl
loope
mov
pop
push
pop
ljmp
lret
pop
cmp
dec
sub
cmc
mov
pop
insl
aaa
xchg
cmpsl
insb
or
mov
adc
insb
jg
fstpl
out
push
push
push
lea
popa
neg
jmp
jns
lret
test
add
mov
inc
lea
add
inc
push
fwait
testb
test
push
loope
icebp
mov
aas
sub
in
das
data16
ja
sub
jae
push
incl
mov
hlt
mov
fiadds
mov
neg
adc
add
outsb
add
leave
movl
jb
rcl
cld
stos
movsl
jl
pop
pop
fiadds
test
inc
and
xchg
push
lea
and
mov
mov
lahf
cmp
js
sbb
jp
loope
testb
pushf
mov
inc
cmpsl
mov
xchg
add
push
into
mov
add
cmp
mov
jmp
jg
mov
mov
repz
iret
adc
nop
xor
sub
imul
xor
xchg
mov
je
push
insl
fcompp
inc
shll
adc
cmp
loope
pop
bound
in
cmp
mov
sub
mov
xor
add
mov
xorl
or
sti
push
out
in
test
pop
mov
loop
mov
pop
mov
lret
sarl
push
nop
sbbb
pop
faddl
add
sbb
fs
iret
mov
sbb
mov
sbb
mov
mov
mov
sarl
fs
and
insl
xchg
xchg
jl
sarl
stos
cmp
ret
dec
mov
loop
scas
inc
or
xor
sti
or
pop
xor
xchg
inc
or
mov
icebp
push
lret
sub
cmpsb
outsb
arpl
xchg
add
enter
or
cli
and
mov
xchg
and
ret
add
ret
mov
loopne
add
mov
mov
ss
or
mov
cli
adc
mov
inc
jo
or
adc
push
idivl
push
shll
mov
mov
jecxz
sbb
sbb
in
pop
hlt
stos
lret
and
mov
mov
jae
popa
das
je
into
push
movsl
lods
sahf
mov
xlat
ficoms
aam
jmp
inc
into
dec
sub
xchg
adc
fstl
in
ror
dec
mov
mov
push
call
lods
loop
shll
das
test
jg
and
lea
or
and
mov
cmp
mov
mov
cmp
push
cmpsb
in
lret
mov
ss
or
mov
jns
sti
dec
repz
call
fsubl
icebp
clc
xor
sbb
hlt
nop
ljmp
mov
mov
adc
pop
sub
sub
hlt
test
add
xchg
mov
decb
mov
cmpsl
leave
pop
mov
jns
pop
clc
rcrb
add
adc
adc
dec
leave
cs
pop
mov
and
xchg
fstps
add
add
cli
push
ror
inc
ror
sarl
stos
ds
and
mov
mov
push
push
shrl
cmp
adc
cld
les
dec
adc
gs
lds
loope
add
adc
sbb
pop
sub
sub
and
popf
pop
adcb
movsl
je
leave
inc
das
out
inc
aam
xchg
rcr
imul
pushf
cmp
push
loopne
mov
and
orl
iret
loopne
out
jmp
cmp
inc
shll
scas
add
mov
add
jge
xchg
lret
fcomps
sbb
and
inc
mov
popa
cwtl
js
pop
inc
cmp
sub
cwtl
lock
ret
jbe
cmp
mov
cmp
or
in
inc
jo
popa
cmc
mov
sub
loop
shlb
cmpsl
sbb
popf
ja
imul
push
orb
aaa
in
xor
mov
push
mov
stos
xor
movsb
leave
enter
mov
loop
sbb
movsl
jo
mov
xchg
xor
pop
loopne
aas
data16
cltd
sti
and
sub
push
pop
xchg
jl
push
movsl
push
in
mov
xor
scas
dec
mov
popa
in
roll
fldt
testl
xor
pop
pop
add
pop
scas
lret
in
mov
cmp
enter
xchg
rol
jg
mov
xor
dec
loope
and
xchg
cmp
dec
and
add
cmc
std
std
jg
sub
stos
insb
pop
xchg
inc
clc
push
cmp
jns
neg
shlb
sub
add
js
inc
xchg
cltd
xor
rorl
int3
xor
cmp
icebp
and
lret
xor
mov
ljmp
pushf
jecxz
inc
adc
pop
sub
cwtl
imul
mov
lret
xchg
dec
add
aam
int3
int
sbb
sub
dec
push
movsl
sub
dec
out
sahf
and
cmp
mov
mulb
push
bound
xor
adc
and
mov
adc
and
dec
lahf
mov
ss
cwtl
xchg
push
out
ds
fisubs
aad
or
mov
mov
ja
mov
jecxz
shlb
pop
xor
or
jo
sub
addr16
and
imul
mov
inc
sub
xor
sub
xorb
leave
outsl
aam
pop
bound
sbb
mov
outsl
ja
inc
mulb
outsb
jl
jne
jecxz
fnstsw
aam
jnp
adc
aas
popf
lcall
movsl
sbb
dec
sbb
adc
push
outsb
sub
sarl
mov
inc
js
push
inc
pop
pop
sahf
xor
icebp
push
jno
arpl
test
xorl
dec
rep
mov
loop,pn
dec
push
sbb
inc
xchg
cltd
inc
sar
nop
sti
mov
push
sub
xchg
adc
fnstsw
sahf
pushf
inc
dec
insl
xchg
cmp
in
mov
mov
in
js
xor
mov
insl
jne
mov
divb
arpl
push
scas
xchg
fsts
out
mov
movsl
test
jnp
fistpl
xchg
call
movsb
xor
add
inc
mov
cmp
pusha
xor
jmp
mov
sub
add
stc
loop
push
inc
cli
jl
sub
ret
and
xor
repnz
nop
rorb
movsb
jae
adc
adc
mov
in
mov
cmp
jne
or
xchg
in
sbb
movsb
mov
adc
and
rorl
dec
shll
ja
fucomi
mov
xchg
jo
rcrb
push
popa
ds
shlb
movsl
push
test
push
aam
les
ds
or
inc
test
mov
mov
pusha
movsl
sbb
movsb
inc
pop
mov
pop
jb
xor
jg
or
hlt
jae
mov
stos
pop
and
jnp
cwtl
jns
push
ss
lahf
mov
divb
jp
or
imul
std
fldenv
repnz
inc
cmp
andl
jge
in
nop
fcoms
lock
aad
mov
aad
mov
add
add
test
and
subl
xor
pushl
ss
stos
and
jl
lret
sbbl
pop
movsl
adc
sub
push
adc
cli
insl
mov
pop
add
mov
adc
pop
add
cmp
loope
cli
adc
mov
mov
cmp
sbb
xchg
dec
cmpsb
pop
mov
xchg
or
into
sub
mov
xor
inc
jb
sbb
mov
aad
lcall
popl
addr16
dec
mov
aas
enter
xchg
push
iret
push
pop
movsb
mov
jo
clc
fstp
xchg
aam
xchg
lret
and
and
mov
jbe
add
adc
cmp
in
pop
testl
ret
push
jbe
fisttpl
push
fsubs
xor
mov
fcomps
inc
icebp
inc
fldl
fsubr
fs
fldt
pop
addr16
xor
inc
rolb
out
lea
inc
enter
mov
ja
mov
mov
adc
shll
nop
clc
testl
dec
or
xor
xchg
mov
add
cmpsb
cli
mov
or
dec
outsl
xchg
mov
lcall
ret
out
insl
mov
pop
hlt
cmp
sub
jno
jecxz
imul
sbb
out
sub
test
xchg
mov
cmp
cs
lds
fsub
jp
repnz
lods
sub
mov
bound
xchg
mov
ja
aaa
int3
adc
xchg
fst
ret
test
cmc
xor
mov
xor
sub
push
nop
inc
push
pop
or
mov
inc
or
fmull
psllw
popa
lcall
and
sub
inc
and
add
fisubrl
jl
jns
notb
add
mov
mov
adc
cmp
push
inc
clc
push
mov
inc
mov
mov
push
movsb
and
fisttpl
inc
jecxz
repnz
xor
je
mov
add
bound
and
mov
mov
fmull
sti
mov
imul
or
jl
sbb
in
jno
push
fstpt
xchg
div
imul
cmc
push
inc
sub
idivl
adc
cmpsl
roll
or
ljmp
adc
mov
jp
inc
jno
push
pop
sbb
or
xchg
cmp
cmp
mov
push
mov
mov
push
inc
ret
mov
rclb
lcall
sbb
daa
movsb
das
cmp
mul
jp
test
cwtl
mov
lahf
lds
mov
outsl
push
sbb
ss
mov
inc
sbb
push
add
push
push
into
addr16
add
aaa
imul
sarb
xchg
xor
adc
pop
mov
bound
inc
lods
inc
lds
cltd
lcall
nop
inc
mov
jnp
leave
es
xor
rolb
add
leave
sub
or
aam
jle
pop
sbb
xchg
es
and
inc
mov
mov
loopne
xor
dec
jae
loope
inc
idiv
jl
adc
daa
push
js
fwait
dec
loope
mov
lcall
in
jo
pushf
inc
cmp
daa
mov
mov
or
push
ds
aad
leave
outsb
and
call
jne
mov
mov
push
pop
mov
mov
jge
mov
xor
fs
lret
sub
stos
popa
mov
loope
cmc
inc
loope
bound
sub
fcoml
pop
mov
movsl
jo
push
mov
xchg
mov
xor
cmp
and
lods
sub
sbb
jmp
popa
sbb
lea
jno
pop
sbb
hlt
sbb
lcall
xchg
adc
jecxz
enter
cmp
in
lds
push
and
mov
idivl
stos
js
in
dec
enter
sub
sbb
loop
movsl
cmpsl
jp
inc
jns
into
fildll
leave
xlat
jae
fisttps
int3
lret
ss
jecxz
je
inc
jmp
arpl
push
jno
push
es
mov
inc
mov
jecxz
push
xchg
loopne
out
or
xchg
xorb
insl
test
push
das
lret
mov
sahf
push
out
push
mov
inc
or
and
mov
xchg
bound
aas
xlat
mov
mov
push
xchg
shll
es
shlb
aas
ja
mov
push
test
in
sar
pop
jb
add
push
mov
and
std
or
xor
mov
aas
mul
adc
jae
or
xor
or
add
loopne
jno
stc
jno
lcall
imul
imul
xor
mov
sub
mov
cmp
iret
cmpsl
std
movsl
xlat
aaa
mov
mov
pusha
sbb
mov
shlb
pop
jp
arpl
xor
mov
dec
popa
push
sub
mov
mov
and
push
cs
xlat
mov
stc
fildl
lds
pop
inc
or
inc
add
cli
sbb
xchg
jno
repz
push
lods
test
adc
pop
hlt
jecxz
or
paddb
mov
pop
add
andb
push
and
cmp
sbb
outsb
inc
mov
mov
dec
inc
jecxz
out
jp
cwtl
dec
and
ret
xchg
mov
roll
mov
cmp
int
rorl
nop
pop
adc
push
mov
fldt
inc
push
pop
movsb
aam
inc
sbb
stc
mov
xchg
shld
mov
pop
xor
jecxz
lret
addb
push
fdivrp
out
push
inc
rolb
arpl
jg
mov
enter
dec
push
adc
mov
cltd
inc
add
push
divl
inc
jae
mov
sbb
push
sub
icebp
rcr
cmpsb
out
cmp
jle
mov
mov
faddp
push
pop
jl
pop
insb
mov
push
movsb
fnstenv
mov
pop
icebp
cmp
xchg
ds
fisubs
leave
cmp
loop
or
ljmp
mov
cli
jb
mov
adc
sub
xlat
inc
xchg
push
ret
push
hlt
pop
mov
cltd
leave
sub
imul
lret
xchg
or
xlat
xor
das
pop
dec
dec
fcomps
lods
pusha
clc
or
das
cmp
movsl
mov
cmp
clc
jae
xor
adc
and
mov
inc
cmc
sub
adc
aas
xor
jns
sub
cmpsb
or
enter
rol
movsb
int
das
aaa
sub
popa
push
push
jp
dec
or
test
cmp
xor
mov
rcll
and
test
and
inc
lock
out
dec
pop
push
rorl
fwait
cmc
incl
pop
popf
cmpsb
mov
lea
cld
mov
jb
ret
lret
add
shr
test
loop
scas
push
lret
lods
mov
pop
ret
hlt
insb
push
into
dec
ja
push
fidivl
nop
test
mov
lea
int3
jge
fisubl
push
push
loop
iret
and
mov
inc
out
mov
push
xchg
cmp
xchg
nop
sti
pop
je
mov
jp
subl
addr16
cmp
cmp
push
xor
xchg
xlat
fcom
mov
xchg
pop
iret
jns
imul
mov
push
sti
fldenv
inc
shl
mov
push
shl
dec
add
mov
lahf
or
icebp
ret
inc
pop
and
fistpll
out
adc
test
loop
pop
fstps
dec
into
mov
pop
mov
leave
sbb
dec
adc
rcll
aas
sub
clc
fidivrs
inc
hlt
out
stc
jno
adc
push
inc
dec
push
cmpsb
jecxz
xchg
in
inc
mov
into
push
or
sbb
int
test
pusha
nop
add
sbb
dec
cmp
hlt
cmp
jno
roll
xchg
dec
gs
cmp
lds
icebp
andb
stos
inc
dec
in
test
cmp
nop
sub
inc
push
icebp
mov
sub
pop
mov
shll
xchg
cld
cmp
fwait
add
jns
daa
and
subl
fwait
lret
pop
aaa
out
mov
dec
mov
add
or
int
xor
sub
sub
call
and
mov
cli
mov
push
cli
or
jge
pop
stos
dec
push
push
adc
jmp
popf
ja
jne
mov
inc
aam
cld
jle
push
ljmp
orl
push
std
cwtl
xor
or
test
out
add
dec
cld
mov
mov
pushf
sub
movsb
leave
pushf
jae
loope
mov
xor
stc
test
xor
inc
das
adc
pop
sub
mov
push
mov
loop
scas
rclb
mov
pop
lds
jle
notl
sbb
sti
bound
adc
aad
je
fs
inc
xchg
hlt
shlb
jp
pop
call
inc
adc
js
sti
xor
add
xchg
xchg
scas
insl
xchg
scas
imul
aad
aas
call
pop
xlat
adc
push
incl
aas
pop
fcmovbe
xor
fsub
stc
mov
rcrb
mov
pop
push
jg
adc
mov
adc
fsub
movsl
cwtl
fnstenv
add
je
cmpl
inc
add
clc
or
jb
out
daa
fisubrl
hlt
popf
ss
sub
lahf
xor
aas
jno
mov
cmp
pop
pusha
xchg
mov
cld
adc
test
daa
dec
push
daa
xchg
and
mov
scas
inc
iret
jne
mov
pop
das
or
inc
xor
jge
and
lret
cld
ret
pop
jnp
dec
popa
jmp
jno
push
inc
je
adc
repz
aad
mov
fcomip
sti
xchg
cmp
mov
mov
pop
movsl
inc
or
jle
pop
movsb
or
inc
jno
dec
mov
mov
pushf
dec
outsl
lahf
icebp
inc
rclb
add
mov
pop
xor
call
imul
cmp
jge
jns
lods
cmp
sarl
adc
cli
loopne
fldl2e
push
jns
mov
or
movsl
cs
mov
mov
push
mov
inc
jbe
test
into
push
push
cli
enter
daa
inc
mov
adcb
sub
sbbl
pop
mov
push
loop
adc
ror
xor
ljmp
imul
adc
mov
inc
cmp
xor
sub
adc
clc
jbe
mov
xchg
pop
mov
pop
xchg
add
mov
mov
sahf
sbb
popf
nop
mov
lods
xor
add
xadd
adc
push
aas
int
jbe
inc
dec
negl
out
and
jae
flds
and
push
popa
call
mov
jne
ljmp
rclb
adcb
jl
sub
dec
out
imul
mov
dec
xchg
into
push
call
lret
push
jp
dec
mov
push
sub
pop
shrl
ljmp
lcall
adcb
enter
mov
scas
add
testl
cmp
inc
add
stos
fsubrs
test
loopne
into
add
or
xchg
stos
movsb
pop
jecxz
push
insl
jnp
and
ljmp
dec
mov
lea
mov
mov
dec
cmp
cmp
lcall
insl
jp
and
fisttpll
push
push
push
push
les
movsb
call
outsl
jmp
cwtl
fsubrs
pop
push
inc
outsl
enter
ja
sbb
mov
ljmp
sbb
leave
pop
fucomip
mov
and
jl
aam
jp
lods
cmp
adc
shrb
dec
pusha
test
pop
subb
add
icebp
mov
dec
out
ds
mov
lret
add
gs
loopne
stc
icebp
fwait
mov
stc
sbb
xchg
icebp
dec
sub
mov
jmp
pop
cmpsb
mov
add
jge
or
sbb
dec
dec
ret
pop
test
dec
ret
and
dec
popa
pop
test
shlb
inc
sbb
mov
lods
push
jno
push
dec
inc
jl
sub
insb
icebp
pusha
mov
cltd
push
jns
lds
pop
jne
into
pop
dec
sub
fcmovu
push
mov
sub
fistl
jp
neg
mov
mov
inc
cli
notb
sar
mov
adc
dec
add
int3
inc
enter
sub
js
pop
movsl
xor
adc
neg
popf
into
test
mov
out
daa
mov
cltd
lahf
outsb
mov
andb
lea
mov
sub
sarb
pop
cli
sbb
in
stc
add
outsl
icebp
daa
cmp
popf
es
mov
dec
pop
jg
clc
push
sarl
dec
inc
iret
mov
ja
mov
fcomps
jo
out
push
lock
push
push
xchg
mov
xor
pop
sub
sbb
adc
jl
pop
aaa
dec
popf
mov
pop
pop
and
mov
jmp
ss
xor
mov
fldl
mov
aad
ret
cmc
outsl
and
or
aas
aaa
adc
mov
testl
js
xlat
arpl
inc
sub
xchg
cmp
sub
jo
data16
int
mov
bound
ja
xchg
and
mov
jmp
inc
adc
xor
aas
inc
test
xchg
jno
repz
and
mov
fs
pop
pop
mov
mov
or
or
pop
movsl
ret
jno
add
lcall
in
xchg
sahf
adc
roll
test
movl
insl
adc
xchg
mov
gs
push
aas
dec
call
cmp
sbb
jbe
out
into
push
xlat
xor
das
xchg
loopne
xchg
cwtl
push
pop
ja
push
xchg
mov
mov
inc
hlt
paddusb
rcll
mov
es
arpl
jb
sub
and
ror
inc
mov
jnp
add
mov
push
stos
inc
adc
in
inc
outsl
xor
add
stc
cmp
and
mov
inc
aas
xchg
push
pop
xor
and
in
push
push
jae
lahf
daa
sub
mov
jbe
push
lods
aas
xchg
push
cmp
lea
add
jp
jne
in
in
popl
enter
jl
mov
ds
rcll
aaa
jmp
les
test
sarl
xchg
bound
repnz
pop
outsb
mov
cltd
in
jg
out
imul
xor
fwait
lcall
leave
xor
movsl
mov
cmp
sbb
mov
adc
mov
adc
les
mov
sbb
cmp
subl
cwtl
cmpsl
das
cld
pop
loop
mov
popa
sub
repnz
bound
pop
pop
cmpl
xlat
testb
xor
stos
ret
fists
pop
adc
xchg
into
pop
inc
push
test
jmp
sbb
dec
test
mov
std
ljmp
lret
xchg
mov
arpl
subb
ret
test
sub
lea
or
pop
mov
and
clc
jbe
call
jb
sbb
push
jp
in
ljmp
mov
fidivrs
xchg
xor
call
add
leave
incb
in
adc
lret
jmp
pop
add
sbb
xor
xlat
divl
xchg
mov
pushf
int
add
pop
mov
int3
and
mov
addr16
sub
andl
or
xlat
arpl
push
jecxz
mov
pop
pushf
adc
xchg
xor
outsb
and
and
adc
cmpsl
mov
cmpl
gs
cli
push
inc
pop
dec
jle
and
adc
mov
mov
xchg
lock
shlb
ss
inc
popa
dec
and
lods
fwait
mov
ja,pn
leave
rol
and
jnp
mov
adc
dec
mov
cmp
mov
jb
inc
ljmp
cmovb
stos
pop
sub
mov
pushw
cmp
xorl
jnp
jl
pop
loope
jg
push
movsl
pusha
enter
push
xchg
sbb
push
arpl
popa
test
mov
loope
xlat
out
stos
std
dec
push
jmp
xlat
iret
inc
sub
or
fwait
push
into
icebp
mov
xorb
mov
mov
sbb
push
les
daa
jl
sub
sbb
test
sbb
inc
inc
mov
jecxz
xchg
inc
lea
xchg
pop
xor
sbb
test
dec
inc
jmp
out
into
add
mov
adc
xchg
jb
mov
hlt
repnz
cmpsb
pop
push
cmp
add
dec
std
cmp
jo
inc
imul
sub
add
push
adc
cmpsb
pop
jge
xor
xorb
test
and
ret
gs
sbb
jnp
push
xchg
lods
out
mov
frstor
and
inc
push
mov
sub
cmp
mov
sarl
rcpps
dec
enter
mov
mov
ja
pop
mov
and
mov
arpl
popa
jne
sbb
clc
insb
fistps
repz
repnz
sahf
push
mov
jnp
sbb
xchg
aas
xor
loopne
rol
pop
inc
jmp
mov
push
push
xchg
mov
je
dec
bound
inc
fldenv
pop
insl
insb
cmp
jl
mov
mov
mov
jmp
xchg
loopne
in
cmc
fdivrs
je
fldcw
pop
inc
lret
lret
test
cs
pop
mov
aas
sarl
shlb
and
lahf
and
sub
cld
mov
push
lahf
sti
xchg
lcall
rcrb
je
mov
in
xchg
push
loopne
jecxz
jae
sbb
xchg
mov
mov
loop
push
mov
in
jne
dec
jge
xor
sub
jne
adc
int
out
push
add
and
sub
inc
sbbb
arpl
inc
or
repnz
shlb
lea
lcall
jnp
xor
jg
push
movsb
push
imul
xchg
pop
mov
jg
mov
jbe
pop
adc
ljmp
aaa
xchg
or
sub
das
mov
mov
and
push
insl
out
inc
std
sahf
cmp
and
pop
pop
mov
dec
test
loopne
or
jbe
aaa
notb
pop
jnp
arpl
jns
xorb
or
push
cmp
dec
pop
add
pop
adc
outsb
out
scas
fsubl
imul
push
int3
mov
sti
xchg
ljmp
mov
sbb
mov
orl
scas
xlat
stos
test
xor
cmc
pusha
xlat
in
nop
lahf
push
adc
fsubrs
loopne
fcomps
push
adc
clc
or
xchg
sbb
xchg
cs
mov
mov
jmp
push
mov
push
mov
lea
pop
or
sub
sbb
sbb
jae
dec
inc
pop
std
mov
and
andb
push
out
mov
pop
in
jp
add
fiadds
loopne
mov
xor
jns
sub
pushf
mov
roll
and
pushf
xorb
pop
xchg
outsl
cmp
js
cmp
mov
in
cmp
and
jge
xor
mov
add
out
pop
cmp
lcall
xchg
and
sub
out
lds
addr16
xor
sub
jae
and
mov
adc
lea
cmp
dec
loope
push
xor
xor
mov
test
in
je
or
mov
mov
fbstp
gs
imul
pop
jecxz
clc
jmp
fnsave
inc
push
push
mov
lret
je
pop
mov
insb
and
and
mov
inc
mov
or
pop
dec
movsb
cmp
shll
lds
mov
fmull
dec
notb
cmp
jmp
lock
insb
clc
rcrb
std
in
aas
jo
push
cltd
xchg
ret
in
shr
sbb
ror
scas
mov
sbb
pop
and
xchg
sbb
mov
sub
adc
jae
sub
insb
mov
push
dec
imul
fcoms
sbb
mov
adcb
sti
into
and
inc
stos
xchg
mov
out
xor
push
not
lahf
or
je
jne
bnd
sbb
nop
out
scas
test
jns
idivl
sbb
jle
lds
jnp
sbb
add
into
ds
jae
js
scas
cwtl
mov
push
loope
jmp
and
out
xlat
fnsave
pop
test
mov
push
xor
mov
popa
mov
lret
arpl
pop
push
mov
sahf
mov
cmp
sbb
mov
xor
addr16
jae
dec
mov
push
add
mov
mov
ret
cmpsl
mov
mov
movsl
xor
add
fdivs
gs
pop
sbb
loop
scas
cmp
fldt
ret
pop
xor
into
pushf
test
cs
aad
lcall
ss
mov
ja
mov
push
sub
cmpsb
fnsave
cmc
dec
aaa
das
sbb
imul
mov
nop
leave
iret
nop
jno
movsl
push
pushf
loopne
roll
pop
dec
pop
mov
je
ljmp
pushf
repz
mov
pop
pushf
mov
sbb
push
cltd
int3
sbb
into
xchg
jo
push
pop
mov
pop
add
dec
adc
cli
dec
mov
mov
mov
fwait
push
adc
in
adc
icebp
xchg
imul
cld
add
adcl
js
cmp
adc
sbb
adc
test
fdivrs
inc
mov
adc
rolb
mov
in
push
mov
cltd
addr16
negb
stos
jbe
and
push
or
jecxz
sub
lret
xchg
push
cmp
pop
jnp
ret
mov
xor
push
dec
lds
pop
fcompl
scas
xor
fnstsw
addr16
xor
jge
sbb
test
imul
leave
icebp
cmc
jbe
pop
mov
sarb
adcb
add
imul
jns
jae
sub
je
lds
inc
xchg
out
and
enter
bound
popf
jmp
mov
outsl
pop
sti
pop
loope
imul
mov
rcl
cmpb
ds
mov
cmc
or
jg
and
xor
in
or
or
adc
dec
inc
lods
or
aad
mov
jo
push
pop
shll
xchg
imul
loopne
sub
in
xchg
xor
mov
push
pop
std
loope
popf
xchg
imul
mov
sbb
xlat
cmp
push
ds
push
xlat
or
cmp
pop
lods
jge
in
orb
icebp
xor
cli
test
stos
add
xlat
cmp
push
fptan
push
pop
add
enter
ret
jl
jg
and
dec
leave
pop
and
cli
fcoml
loope
mov
arpl
lcall
test
sbb
dec
pushf
adc
jmp
sbb
sahf
dec
mov
outsl
jno
jnp
dec
sub
dec
fs
or
push
fnstenv
out
lret
pushf
xor
mov
movl
lds
aaa
jl
stc
and
in
ljmp
sarl
mov
fwait
xor
dec
movsb
mov
add
mov
aad
jns
insl
int
out
push
sbb
and
lods
leave
lret
fimuls
out
cmp
addr16
push
sub
cltd
test
faddl
xlat
jl
data16
jb
fsqrt
shlb
fs
data16
xchg
push
inc
mov
dec
stc
dec
nop
imul
fsubl
cmp
stos
adc
push
xor
push
jecxz
cmp
test
stc
adc
jbe
mov
out
imul
scas
adc
nop
movsl
push
imul
push
rcr
mov
pop
xor
mov
push
js
stos
pop
mov
add
jmp
lea
insl
sbb
mov
arpl
idivb
inc
xchg
cmp
roll
cmp
add
lcall
pop
ja
jge
pop
loope
dec
stc
leave
arpl
ret
jmp
fisubrl
dec
xchg
fstp
adc
scas
cmp
daa
out
mov
inc
fs
out
iret
jb
push
int
push
mov
sarb
jo
add
cltd
lcall
sbb
scas
sahf
test
sbb
call
daa
lret
adc
mov
rorb
andb
cli
cmpsb
inc
sub
adc
int
ljmp
fadds
sub
adc
in
add
sub
sar
popf
and
loop
jmp
mov
loop
push
xor
jo
lret
insl
out
imul
call
cmc
imul
fbstp
pop
mov
aaa
mov
movsb
lods
adc
mov
cmpsl
dec
pushaw
mov
mov
movsb
and
clc
shll
divb
ror
push
mov
xchg
shlb
xchg
cltd
push
cmp
outsl
jmp
sub
lret
lret
push
sub
addr16
inc
inc
loop
jmp
add
jmp
sbb
pop
push
iret
test
rcr
add
dec
xor
cmpsb
xchg
mov
into
scas
cwtl
xchg
hlt
pop
addb
jno
fidivrl
ret
inc
std
dec
sbb
lea
loop
lret
mov
fs
jne
xor
mov
out
js
sahf
sub
jmp
pop
cwtl
ret
pop
push
jge
test
mov
test
outsb
bound
pop
lea
shl
hlt
inc
stc
fcoms
sub
mov
push
loope
rcl
and
negl
add
daa
popl
push
jo
adc
mov
or
les
ret
and
outsb
cmpsb
pop
ret
mov
xchg
arpl
dec
adc
repnz
mov
push
inc
pop
cwtl
dec
bound
imul
hlt
lcall
jp
cwtl
test
fcomi
hlt
data16
sub
pop
mov
xchg
sub
dec
mull
jp
adc
mov
pop
fs
push
imul
fcmovb
sbb
stos
mov
mov
scas
cmpsb
push
loop
in
jns
loop
stos
or
cmp
push
cmp
lds
inc
push
or
ret
test
and
ja
sbb
push
lods
fsts
in
or
rcll
add
ljmp
lahf
adc
push
fadd
outsb
pop
mov
cltd
rclb
fwait
push
rcrb
adc
in
cmp
xchg
mov
adc
cltd
fcoms
jo
push
xor
push
cmp
add
sub
sti
nop
repnz
stc
mov
mov
repz
call
and
sti
pushf
adc
cmovae
cwtl
cmc
call
pop
std
and
jmp
rclb
fiaddl
cltd
iret
cltd
cmp
add
loopew
pusha
hlt
pop
in
pop
lcall
mov
mov
movsl
and
fisttpl
ret
adc
out
pushf
rclb
mov
xchg
pop
fistl
jns
fldt
cli
call
jae
int
pop
pop
and
rcll
or
inc
movsb
out
icebp
clc
in
or
cld
add
das
sahf
loope
xchg
jg
out
lcall
movsl
mov
sub
cmc
mov
ss
or
int
push
and
dec
nop/reserved
scas
xlat
rorl
jmp
pusha
fimuls
test
pop
sahf
adc
ja
jmp
mov
or
mov
je,pn
jae
add
pushf
sti
fstl
xor
mov
mov
data16
popl
in
sbb
fs
cmp
outsl
mov
mov
out
fsubp
cmp
adc
adc
jge
out
and
test
adcb
mov
outsb
mov
mov
or
sti
inc
push
arpl
pop
fmuls
clc
inc
push
add
lret
push
mov
add
std
ret
mov
loopne
pop
sbb
in
dec
dec
inc
adc
or
inc
test
into
mov
sub
mov
dec
fs
sbb
jb
mov
dec
inc
mov
mov
cmpsl
test
lods
das
std
xchg
sbb
decb
repz
jle
adc
cmp
lahf
and
sub
sarl
sbb
mov
dec
jp
aaa
jge
lret
add
imul
dec
inc
loop
dec
lcall
inc
js
mov
mov
data16
cmp
sub
aaa
and
xchg
jns
push
mov
pop
mov
mov
xor
and
xor
inc
ss
clc
jne
repz
mov
cltd
inc
pushf
mov
sub
pop
pop
adc
push
mov
lods
in
fs
inc
add
aaa
pushf
xchg
add
xor
push
and
cmpsl
fmuls
movsb
ja
das
pop
std
sub
in
push
std
or
jge
mov
sbb
outsb
cmc
xchg
and
xor
in
shlb
or
add
loopne
int
lcall
xchg
test
test
xchg
lds
mov
inc
popa
sbb
cld
adc
lds
movsb
js
leave
cld
lcall
cmp
jae
mov
or
repz
or
insl
jns
nop
add
jbe
xchg
dec
mov
mov
insb
outsl
jmp
jge
mov
or
pop
jmp
js
pop
les
inc
and
cmp
in
add
lcall
xchg
lret
adcl
and
xchg
pop
fldcw
push
stos
int3
push
jecxz
xor
insb
xor
shlb
movsb
add
lcall
insl
pop
or
nop
sub
rcrl
pop
mov
rcll
xchg
add
pinsrw
or
jge
repz
jge
fcomps
push
mov
dec
sbb
fstpl
shll
cmp
mov
imul
adc
loopne
lds
fsubrs
mov
imul
xor
mov
lock
add
lahf
push
popl
xor
in
inc
fdivl
hlt
pop
jnp
sbb
adc
or
mov
ret
jp
pop
lds
sub
iret
in
push
mov
in
or
inc
je
jmp
mov
mov
pcmpgtd
jmp
pop
or
pop
or
dec
insl
aad
mov
gs
scas
push
mull
inc
jmp
xor
clc
scas
mov
sub
out
mov
jb
push
out
jmp
pop
sbb
lahf
loopne
or
push
inc
xchg
pop
sub
in
or
clc
push
pop
pop
aam
pop
fadds
stc
sahf
mov
repnz
xchg
frstor
ja
scas
xor
aam
outsb
jno
rorb
pop
jmp
sub
jp,pt
xchg
sbb
ljmp
mov
loope
mov
out
jg
push
test
imul
lcall
inc
cmp
inc
jnp
xor
cmpb
xchg
pop
pop
es
sahf
sti
cmp
icebp
push
inc
and
and
jo
adc
in
fisttpl
adc
push
mov
adc
mov
mov
inc
jg
xor
rorl
test
mov
jae
mov
int3
les
push
fisttpl
cwtl
sbb
xor
push
pop
loope
push
mov
imulb
pop
add
es
divb
into
pushf
lret
pop
test
mov
and
jbe
xlat
popf
pop
sbb
xchg
mov
enter
sbb
push
xor
testl
loopne
hlt
jle
incb
in
mov
mov
jle
int3
cwtl
pop
pop
dec
pop
nop
inc
xchg
sahf
push
js
add
cmp
mov
dec
insl
pop
dec
pop
xchg
lds
sub
xchg
ss
cmp
ret
cmc
test
pop
mov
inc
pop
fidivs
aaa
pushf
out
xchg
jg
ficompl
stos
pop
out
mov
dec
push
addl
xlat
shlb
sub
xchg
lahf
fcomps
and
adcl
movsb
dec
clc
out
mov
sbb
jno
xor
mov
fcoms
lock
xor
test
cmc
adc
setl
adc
into
xchg
xchg
nop
cmp
call
and
xchg
sahf
pusha
andb
xchg
jo
shrl
push
les
jecxz
in
lds
mov
jmp
aam
das
in
jne
imul
dec
push
lods
ficompl
sub
dec
push
mov
orb
mov
icebp
insb
sti
mov
jnp
lcallw
in
mov
add
mov
dec
ljmp
mov
lods
in
mov
aad
shlb
mov
mov
and
std
adc
and
pusha
sarb
add
jo
daa
scas
ja
aad
xor
inc
mov
xlat
xchg
cwtl
shrb
repnz
popf
fiadds
adc
popa
iret
ret
or
mov
repnz
out
and
jbe
or
sti
xor
jecxz
nop
jle
push
push
les
pop
dec
adc
addr16
loopne
into
xchg
cmp
data16
mov
in
add
fsubrs
in
mov
adc
inc
call
or
outsb
into
inc
ret
bound
and
xor
or
out
icebp
pop
and
cmp
mov
into
daa
fcmovb
les
shll
dec
test
xchg
stc
dec
aam
mov
sti
jg
adc
and
pusha
or
xor
call
mov
add
cmc
pushl
repz
add
dec
ds
fwait
push
or
lcall
inc
push
cltd
or
adc
je
scas
fisubrl
xor
push
rcrb
cwtl
imul
dec
xor
aaa
xor
xchg
inc
mov
xor
mov
sbb
xor
mov
inc
popf
add
out
insb
insb
pop
test
int3
mov
aad
mov
bound
mov
add
pop
lea
pause
stos
mov
pop
icebp
cmp
mov
push
push
xlat
push
lock
aam
iret
movsl
imull
adc
les
out
adc
cwtl
or
out
xor
insl
xor
icebp
fcomip
aaa
shlb
pop
sbb
pushl
popa
stos
sbb
imul
leave
xor
inc
int3
fstpl
loope
mov
cmpsl
jo
mov
mov
jnp
mov
dec
mov
lcall
cmc
stos
mov
cmpsb
xchg
test
daa
scas
push
and
adc
xchg
mov
pop
sub
sbb
lret
out
mov
xchg
jecxz
int
ficomps
cmp
dec
cltd
jp
call
mov
cmp
pusha
lock
add
add
mov
std
pop
enter
repnz
mov
pop
mov
les
mov
sbb
or
test
sarl
icebp
addb
pop
mov
je
and
mov
and
and
push
scas
pop
xchg
rolb
test
push
movsl
add
outsb
jnp
aaa
adc
or
hlt
add
adc
testb
mov
pop
popf
sbb
pushf
mov
and
fistpll
cmc
out
lods
ret
jl
out
mov
jecxz
maxps
int
jg
jge
int3
ret
sbb
sub
outsl
mov
adc
inc
les
cli
jle
jnp,pn
scas
lods
rorb
jns
push
add
scas
mov
sub
or
push
adc
jb
ror
testl
xchg
aaa
sub
jl
popf
mov
addl
fimull
ja
mov
shrl
mov
je
addr16
insb
inc
les
bound
popf
mov
mov
addr16
xchg
loopne
popf
xorl
aaa
mov
mov
xchg
gs
xchg
shrb
jne
stos
mov
sub
push
fwait
imul
xchg
xchg
mov
bound
fscale
in
sub
pop
dec
fidivl
xor
loope
adc
fistpl
jbe
xchg
leave
sbb
aas
dec
shrb
gs
lods
into
sbb
jb
testb
cmc
pop
mov
mov
inc
bound
or
cmp
pop
sub
xlat
fisttpl
rcll
fsub
xchg
push
out
adc
les
cmpsb
aam
mov
movb
mov
pop
movsl
out
fucom
cmpsl
adc
adc
cmpsl
fidivrl
cmpsl
pusha
shrl
loope
mov
in
dec
ja
ljmp
cmpsl
in
cmp
cld
fbld
stos
jo
cmc
pop
mov
dec
add
push
iret
jne
lret
sub
and
scas
sub
lock
sub
xchg
pop
jg
xchg
pop
adc
stos
xor
sub
jnp
cmp
jno
out
test
inc
cmpsl
xchg
sub
mov
imul
jl
xchg
stos
cmp
add
int3
cmp
push
mov
dec
push
sub
inc
push
das
mov
xlat
bound
pop
dec
enter
je
int3
in
inc
scas
pop
aad
xchg
xor
fsubr
insl
push
adc
inc
push
in
inc
test
mov
outsl
mov
mov
mov
int
xlat
notb
mov
lcall
jno
xchg
push
mov
and
xor
inc
or
mov
jp
cmp
mov
sarb
es
jae
loopne
push
dec
sub
in
lahf
cmp
jb
jb
leave
ss
and
jnp
adc
insl
fbstp
lock
push
push
dec
pushf
push
lock
jl
push
pop
dec
pop
imul
lahf
mov
data16
movsl
jbe
xchg
xlat
cmp
enter
lds
mov
sbb
sub
mov
addl
shrb
ret
pop
jae
dec
dec
xchg
pop
mov
xor
dec
je
mov
insb
sbb
xchg
mov
jne
dec
je
lock
cmpl
repnz
sbb
into
pop
adc
and
fiaddl
adc
jne
andb
add
scas
or
and
fmuls
add
testb
pop
cld
xor
mov
sbb
fwait
pop
fs
scas
jnp
stos
ja
push
mov
add
xchg
in
fsubrl
movsb
jl
out
shlb
int3
xchg
sub
movb
adc
les
xor
jl
scas
loope
ja
jae
mov
or
imull
and
shll
mov
test
push
das
inc
jp
or
int3
push
movsb
xchg
les
mov
mov
push
fists
cs
imul
fcomip
lods
or
mov
into
jnp
sub
test
jmp
imul
loopne
jmp
xor
push
push
mov
add
aam
test
xor
sub
xlat
cmp
dec
aam
loop
clc
xchg
push
je
dec
xchg
inc
push
std
mov
inc
loope
xchg
or
cld
aas
jae
or
xchg
add
shlb
dec
dec
sbb
cmp
repz
adc
movsb
lds
add
mov
icebp
jge
cli
aam
pop
scas
jl
push
mov
aad
push
jns
in
add
push
lods
mov
outsl
or
and
and
adc
or
jnp
in
leave
pop
xor
dec
aas
rcrb
jb
sub
js
inc
leave
das
icebp
cmpsb
flds
push
xchg
ja
ret
jb
jge
notb
imul
push
mov
adc
insb
mov
jno
dec
or
imul
dec
insl
popa
add
ja
mov
insl
xor
jns
push
in
repnz
rorl
and
push
lret
cmc
cld
ret
pop
xor
leave
out
stos
xchg
inc
aam
shll
loop
push
push
add
daa
inc
sub
aad
imul
arpl
inc
cmp
fbld
loopne
insb
mov
sub
fwait
mov
jp
adc
and
fisubrs
lds
leave
sub
push
bound
mov
or
idivb
mov
and
pop
fdivrs
icebp
push
stc
mov
scas
iret
dec
repz
negl
and
xlat
popf
popw
cli
xchg
push
jb
faddl
inc
sahf
bound
xor
jnp
ficompl
inc
push
and
arpl
frstor
insl
jo
jnp
ja
xor
xchg
push
and
or
lahf
add
les
dec
nop
push
xchg
hlt
push
leave
adc
push
sar
popa
sarl
sar
adc
mov
jns
fcoml
rcl
test
mov
jo
jl
rcrb
pop
cli
jb
cmp
fucomp
and
cmp
sbb
and
icebp
insb
sub
mov
movsb
sahf
out
or
ss
xchg
dec
pop
mov
movsb
xchg
cmp
adc
cmpsl
jbe
push
jns
scas
push
cld
inc
push
xor
cmp
mov
loop
fldt
pushf
aad
jne
je
mov
cmc
aas
and
adc
gs
sub
nop
jb
pop
mov
sahf
insb
repnz
subb
xor
push
sub
sub
xor
and
stos
jl
leave
xchg
stos
push
repnz
and
mov
lds
inc
lock
out
add
cmp
out
mov
movsl
mov
pushf
je
cmpl
lods
scas
int3
mov
imul
jno
jo
std
out
dec
push
pop
cmp
xor
fistps
xor
fists
pop
out
and
adc
inc
sti
popf
jecxz
in
inc
divb
out
dec
mov
mov
in
xor
xor
leave
and
mov
mov
mov
inc
sbb
dec
test
mov
adc
scas
mov
push
mov
enter
sti
stos
jecxz
and
mov
inc
adc
mov
out
push
inc
aad
sub
pop
mov
inc
lods
xchg
cmp
lods
xchg
int
inc
pop
ret
push
mov
jb
test
sti
out
sti
mov
dec
loope
mov
sahf
and
xor
mov
push
or
leave
pop
test
pop
fisubl
mov
sub
cmp
in
inc
push
loopne
jns
shlb
bnd
jecxz
pop
loopne
pop
dec
int
sub
mov
xchg
push
mov
push
in
jecxz
pop
xchg
dec
cli
jecxz
leave
jl
mov
stc
lret
adc
jmp
stos
dec
mov
call
mov
cmp
lods
mov
stos
repnz
cmp
push
repz
mov
adc
add
out
je
add
push
stos
test
sub
addr16
mov
scas
in
les
rcrb
in
pop
std
inc
adc
mov
mov
jb
jg
mov
push
xchg
dec
loopne
popa
push
adc
jecxz
jg
hlt
add
inc
aam
inc
or
xor
std
sub
rclb
or
xor
out
or
or
outsb
loopne
std
cwtl
cmpsb
mov
sbb
sbb
push
mov
ss
mov
push
pop
jno
xchg
dec
dec
push
jp
dec
sbb
cli
and
mov
push
ss
insb
push
push
incl
mov
xchg
negw
push
add
adc
mov
dec
inc
or
xchg
out
dec
cmc
rol
and
stos
mov
sti
dec
out
lret
rclb
ret
push
sub
pop
int
scas
mov
cmp
scas
les
std
xor
iret
std
sbb
push
ljmp
sub
aad
out
cmp
mov
mov
jbe
andl
xor
jns
fstpl
add
lock
push
push
in
mov
mov
fnstsw
push
xor
lea
mov
repnz
xor
and
stc
inc
add
dec
pop
dec
cmc
in
push
inc
mov
cmpsl
pushf
outsl
xor
enter
jno
mov
sarl
dec
pop
pop
test
pop
aas
cmp
sbb
cmc
push
sbb
scas
repnz
scas
jnp
jle
dec
das
scas
sub
push
dec
jl
stc
inc
popl
ret
loopne
mov
outsl
or
xor
xlat
lea
mov
pop
mov
adc
mov
lret
fcompl
sbb
cwtl
nop
jg
pop
movsb
xchg
ja
in
mov
pusha
inc
dec
outsl
jle
idivl
mov
and
inc
xor
call
shr
in
push
ret
rorb
adc
andl
aaa
cmp
pop
cmp
notb
ret
test
cmc
and
mov
push
negl
lods
sub
movsl
test
std
dec
test
sti
add
add
pop
cltd
fs
rcr
mov
loope
jnp
and
push
out
dec
pop
jno
sbb
sbb
dec
add
js
into
negb
push
dec
mov
fcompl
xor
dec
push
mov
jge
jne
adc
scas
jb
xchg
movsb
out
or
ljmp
dec
mov
movsl
ficompl
cmp
in
push
out
cmpsb
jg
in
cli
outsb
mov
arpl
jmp
pop
cmp
into
movsl
mov
dec
ja
in
cmp
into
mov
xlat
ja
movsb
in
mov
and
mov
add
mov
fwait
pop
push
out
std
sub
inc
lock
sbb
push
cmpsl
popf
mov
lret
push
mov
aas
mov
jecxz
sar
loope
loop
leave
fstp
out
xor
test
scas
rcll
int3
push
push
dec
aad
xchg
mov
fsub
jo
cld
adc
add
and
cs
enter
cmpsb
push
jnp
loop
fwait
dec
vcvtsi2sdl
pop
mov
mov
out
dec
icebp
jnp
addr16
jle
push
outsl
dec
imul
add
imul
fwait
cmp
mov
inc
pop
cld
adc
pop
adc
mov
or
mov
jae
nop
call
fs
out
xchg
in
aaa
jle
cmp
dec
int
pop
mov
add
jo
test
pop
cli
mov
xchg
idivb
iret
cmpsb
mov
mov
xchg
dec
xchg
clc
push
jb
xchg
dec
stos
cwtl
jb
mov
stos
mov
add
pop
les
shr
pop
jmp
into
pop
jle
pop
push
pop
arpl
data16
lret
add
sub
lahf
iret
push
sbb
dec
jae
mov
pop
add
push
int
inc
and
iret
neg
xchg
jns
idiv
sbb
in
and
push
cmp
xor
addr16
ret
jl
lret
ds
daa
add
testl
pop
hlt
lods
add
fwait
popa
rolb
imul
lods
aas
mov
mov
repnz
adc
mov
jns
rcrb
cmpsl
pop
inc
jbe
adc
push
dec
insb
sub
dec
jnp
sbb
pop
adc
aam
cmp
ja
adc
xchg
mov
pop
int
leave
lock
xor
and
popf
sbb
mov
rcll
sarb
xor
gs
sbb
push
push
xor
loop
add
or
test
hlt
fsubs
xlat
jp
loop
push
enterw
lahf
push
mov
stc
movsb
sub
shlb
aaa
sub
xchg
lret
popa
cmpsb
in
xchg
out
add
dec
idivb
or
push
pop
scas
xchg
inc
aad
out
mov
stos
cmpsb
add
shl
adc
les
pop
outsl
pop
xchg
movb
xchg
je
outsl
inc
push
ja
in
and
ss
cltd
xor
icebp
or
or
shl
or
sub
cwtl
es
mov
dec
inc
sub
out
mov
popf
inc
das
sub
fadd
jg
cmpsb
mov
mov
call
inc
xor
test
ror
push
lret
adc
xchg
sahf
call
sub
std
or
shlb
push
lds
dec
and
scas
mov
out
adc
ja
shlb
outsl
inc
movl
nop
out
shlb
xor
cmpsl
xor
cli
sub
test
out
push
adc
ja
std
push
mov
jmp
or
outsb
or
mov
and
fistpll
mov
add
loopne
mov
out
pusha
lcall
xlat
addr16
int
int3
inc
dec
mov
fstl
insl
pop
fildl
xchg
push
sbb
es
clc
xchg
js
pop
jnp
cmp
sti
stc
pop
out
xor
and
ret
mov
andb
nop
or
xchg
loope
jae
nop
ja
hlt
fsubl
push
flds
push
std
arpl
xchg
dec
in
dec
imul
push
mov
inc
cmp
aaa
in
add
xor
push
rcl
jnp
out
and
xchg
inc
adc
sbb
out
mov
clc
das
cli
jge
aam
dec
fadd
mov
or
outsb
jae
int3
sahf
rorl
push
insb
push
mov
roll
pusha
mov
cmp
in
popf
cmpsb
jp
test
add
int
inc
and
add
loop
pop
dec
add
cmpsb
mov
adc
mov
sub
xor
insl
mov
mov
in
xor
rcrb
enter
jmp
cli
sbb
out
push
repnz
push
add
lret
sahf
stos
pushf
add
ret
push
rcrl
push
cmc
repz
inc
mov
or
pusha
cmp
call
test
fmul
out
int
fstl
pushf
xor
out
xor
int
push
scas
iret
sub
ret
ja
jg
incl
mov
ss
jle
cmp
gs
and
ds
cmpsl
in
push
cltd
lcall
inc
inc
fabs
push
outsb
stos
fwait
jae
cwtl
push
cmp
push
bound
roll
mov
sti
push
movsb
adc
rcrb
mov
sbb
ret
push
push
subl
pop
rcrl
adc
jnp
sub
fstpl
cmpsb
xchg
cmp
loope
into
stc
stc
mov
push
movsl
sbb
rol
xchg
sbb
sbb
cld
jns
std
or
aaa
push
jmp
pop
push
pusha
ds
test
dec
mov
xor
or
mov
fwait
aad
adc
sbb
push
add
gs
sbb
mov
push
addl
push
rclb
gs
mov
pop
fildl
data16
out
roll
js
in
mov
inc
push
ret
sbb
into
cwtl
sti
jne
insb
outsl
dec
xchg
in
push
inc
mov
repnz
faddl
ljmp
pop
rcr
subl
fisttps
rcl
addr16
xchg
mov
push
adc
dec
sbb
push
repz
inc
or
mov
sbb
add
sbb
mov
jb
lcall
imul
stc
mov
fs
sbb
sbb
in
add
cmp
nop
fs
pop
push
mov
xchg
shr
xor
push
sbb
mov
pop
jg
push
sarl
outsl
inc
inc
pop
jecxz
jl
push
xchg
inc
aaa
mov
add
shrl
adc
lods
aaa
add
je
sbb
inc
lods
push
cwtl
loop
push
adc
in
xchg
mov
sub
insl
dec
xchg
inc
out
sbb
jae
xor
fisubrs
sub
and
xor
and
dec
pop
popl
and
pop
scas
mov
mov
int3
pop
imul
cli
xchg
add
scas
xor
or
scas
cld
lret
ljmp
stos
lds
bound
fcmovnb
imul
mov
push
mov
in
xchg
negb
test
sbb
or
and
xor
mov
mov
divb
push
jmp
dec
fdivrs
sbb
jmp
pop
jmp
adc
xchg
xchg
cmp
mov
cs
mov
dec
jmp
cmp
iret
sbb
sahf
mov
xchg
adc
rcll
out
out
sbb
fidivs
fsubrs
pop
lahf
imul
jns
mov
stos
decb
jg
je
icebp
cwtl
pop
inc
icebp
out
mov
iret
xchg
int
adc
mov
and
bound
pop
andb
imul
jnp
push
es
mov
es
hlt
and
in
xor
sub
testb
xchg
jbe
adc
into
icebp
pop
cmpl
adc
jo
hlt
test
aam
adc
mov
jb
mov
push
adc
mov
cmpsb
sbb
stos
test
in
popf
filds
jnp
xchg
lcall
insl
add
and
or
fsubs
mov
jno
sar
outsl
sbb
insb
dec
push
sbb
adc
ret
ror
sub
enter
pop
fwait
jg
movsb
pop
cli
mov
adc
out
sbb
orl
fistpll
cmc
cli
jp
mov
mov
push
scas
outsl
and
jo
add
ljmp
mov
mov
inc
jle
xchg
jge
cmp
scas
jbe
aaa
jno
fwait
je
xchg
mov
or
jae
popa
jno
sub
fstpt
sbbl
imul
jo
push
or
inc
inc
or
mov
jecxz
ss
das
cmp
pop
inc
call
rcrb
leave
sar
cmp
cmc
cmp
sub
aaa
inc
pop
je
or
outsl
mov
lcall
fdiv
mov
sbb
pop
push
outsb
cmc
in
psubsw
pop
data16
add
mov
cmp
sahf
push
xor
loope
and
ret
sub
aam
xor
out
push
mov
loopne
loop
jo
push
inc
and
inc
in
xchg
sbb
loop
orb
loope
nop
imul
jne
xor
inc
xor
mov
fwait
jb
pop
pop
jae
pop
mov
dec
push
stos
xchg
inc
pop
mov
adc
and
and
push
movsb
sbb
scas
dec
movsl
add
mov
in
sbb
xlat
cmc
xor
push
dec
int3
or
dec
leave
pushf
xchg
sbb
pop
test
pop
dec
fwait
add
push
movsl
std
add
pop
cli
jge
mov
fs
mov
sbb
mov
std
inc
adc
lret
data16
adc
out
xchg
or
xchg
pop
out
aad
pop
sbb
loop
and
pop
popa
pop
notb
mov
pop
cmc
jle
sbb
and
filds
pop
testb
mov
inc
push
in
leave
pop
push
fdivs
call
inc
pushf
inc
pop
int3
push
dec
test
cmp
loopne
fwait
nop
xchg
test
mov
push
std
sbb
addr16
call
xor
out
push
jmp
out
pop
insl
outsl
pop
pop
xchg
mov
mov
mov
lret
scas
cmpsb
add
ds
xor
and
aas
ret
lods
fbld
sbb
shrb
push
ljmp
popa
pop
cmpsl
mov
jbe
cmpsb
lods
sbb
mov
push
cmp
loop
or
fwait
xchg
xchg
sub
cli
repz
data16
icebp
data16
jl
fs
sub
push
sub
rclb
pop
sar
fdivp
mov
mov
ss
and
test
rcl
stos
mov
leave
pop
lret
jg
addr16
mov
repnz
xchg
mov
jns
mov
sahf
inc
test
push
xor
sbb
testb
sub
pop
insb
push
jl
mov
mov
or
call
mov
xor
leave
pushl
xchg
add
cs
adc
cmp
xchg
mov
fsubrs
cmp
adc
clc
std
dec
mov
dec
sub
sub
push
adc
xor
inc
test
lahf
push
push
inc
inc
mov
int
or
stos
add
ud0
xor
fs
mov
dec
mov
push
jg
and
push
xor
pop
pop
jmp
repnz
testl
pushf
mov
jg
dec
rol
testb
push
jg
mov
insb
bound
stc
sub
out
out
rcrb
sub
fs
ss
sbb
dec
dec
shrb
cmp
xor
dec
xor
data16
mov
scas
es
dec
scas
dec
ret
dec
xor
sbb
lods
rcl
pop
adc
pop
pop
push
jmp
lds
mov
mov
and
mov
dec
xchg
inc
outsl
inc
adc
adc
pop
mov
jge
xchg
hlt
fistps
mov
mov
in
cmp
cmp
add
dec
sub
jbe
mov
dec
cmp
into
push
stos
out
mov
sub
bound
sbbb
or
decb
mov
mov
fldl
mov
jno
sub
push
xor
xor
xchg
sub
mov
dec
push
jmp
sub
cld
cmp
add
sahf
cmp
mov
sub
addr16
jnp
add
jecxz
xor
ficompl
lret
mov
xor
xor
mov
cmp
adc
xchg
sub
lods
sub
pop
clc
lock
mov
inc
idivl
aas
cli
insl
cmp
jmp
or
pop
cwtl
mov
popa
in
imul
lret
out
xchg
outsl
inc
subb
push
imul
dec
dec
stos
bound
lock
sub
jnp
inc
movl
pop
lods
stc
int
mov
arpl
inc
adcb
mov
mov
outsb
std
dec
dec
scas
repz
push
insb
jg
adc
enter
inc
pop
incl
sbb
movsb
jne
lock
sbb
pop
insb
fildl
push
cmp
xor
adc
inc
cmovno
cmpsl
stos
imul
lock
je
subb
inc
cmp
lea
in
loope
jg
scas
icebp
mov
mov
adcb
xor
ds
imul
ja
not
sub
jne
rol
out
push
aaa
aad
mov
filds
jns
xor
gs
cmp
dec
push
cmpsw
mov
pusha
inc
out
lea
mov
sub
out
sbb
inc
xchg
aad
jne
js
push
les
add
push
imul
pop
lds
dec
cli
sub
cmp
lcall
jge
add
xchg
loopne
cmp
ss
hlt
and
or
push
fadds
addr16
pop
mov
dec
jo
shl
in
sub
mov
jp
push
mov
hlt
ret
mov
popa
mov
ret
out
adc
or
push
scas
cmc
xchg
pop
or
jge
insb
sub
stc
pusha
ljmp
idivl
mov
jno
fcoms
leave
jmp
mov
cmp
mov
iret
mov
mov
test
push
jmp
mov
clc
std
pop
addl
and
pushf
fmul
xchg
xchg
jle
data16
out
iret
cmp
sbb
out
push
lods
out
or
xchg
scas
pop
repz
push
fldenv
push
daa
mov
xor
push
pop
shll
lcall
pop
scas
push
data16
scas
and
dec
inc
sti
mov
inc
inc
mov
or
push
cmp
cltd
jnp
or
mov
sub
out
add
or
add
ja
lret
inc
and
rcrb
push
xchg
dec
dec
lret
mov
push
adc
jae
cltd
or
inc
jmp
mov
sub
sub
das
ret
xor
mov
xchg
push
or
popl
sbbb
int3
mov
or
int3
ficoml
iret
pop
shll
mov
dec
xchg
and
adc
stos
jae
mov
jge
mov
mov
and
cmp
lods
loopne
jg
test
dec
loop
aas
popa
test
adc
jno
pop
or
test
nop
shlb
loope
sbb
adc
and
arpl
imul
stos
ds
push
inc
xchg
lods
mov
lret
sub
mov
daa
rcrl
mov
daa
jno
dec
mov
and
aas
icebp
data16
sbb
loopne
movsb
mov
repnz
xchg
imul
jl
arpl
mov
out
xchg
clc
popa
xchg
mov
test
inc
pop
or
into
fadd
adc
jle
mov
fsubrs
lods
jp
rclb
or
push
mov
sahf
mov
mov
les
orl
cmp
push
lods
dec
jmp
loopne
and
adc
cltd
loop
push
sub
cmp
add
jl
icebp
xor
jge
lods
inc
nop
pop
mov
jbe
and
mov
sub
gs
mov
mov
adc
or
mov
pop
push
sbb
js
cltd
filds
test
mov
push
loopne
mov
ret
leave
jmp
mov
mov
mov
rolb
or
jmp
adc
loop
dec
inc
xor
xor
iret
jae
add
enter
cltd
pop
ljmp
fmull
pcmpeqb
mov
gs
mov
fsubrp
std
insl
adc
push
js
adc
ss
pop
xchg
aam
test
cmp
fs
aas
dec
shrb
mov
lahf
leave
push
xchg
push
fs
and
mov
fldt
xchg
jb
fcmovnu
lret
sbb
sbb
sbb
lods
ret
pop
insl
mov
int3
jp
add
sbb
xor
and
jbe
imul
or
pop
xor
mov
loopne
adc
xor
pop
jle
pusha
rolb
lret
mov
imul
out
ret
xchg
mov
gs
adc
les
mov
addr16
push
fs
adc
jne
mov
movl
ljmp
sub
cwtl
test
pop
inc
imul
lods
scas
insl
aaa
daa
fst
dec
mov
lods
jle
cltd
loopne
adc
pop
dec
inc
int3
and
lret
into
inc
arpl
bound
sub
add
scas
jnp
pop
push
mov
push
in
in
aad
loop
rorl
subb
cltd
fiaddl
sbb
lret
adc
jg
add
mull
xchg
ret
sub
pop
stos
push
or
sbb
mov
addl
test
cld
dec
push
push
int
popf
push
imul
adc
cmp
add
scas
inc
scas
popa
xchg
jnp
mov
jge
lods
mov
int3
dec
jb
jnp
dec
xor
mov
pop
cmp
test
jg
add
mov
add
nop
rolb
mov
jae
push
push
fldl
pop
jmp
in
jp
in
mov
pop
in
aas
data16
call
mov
mov
cmp
push
aad
scas
mov
aam
mov
cli
pop
sbb
sub
sbb
push
or
or
jge
xor
out
icebp
push
jg
sbb
cmp
enter
push
pop
mov
rolb
xor
aaa
shrl
pop
push
jl
aam
fildll
push
sbbl
mov
cs
mov
lods
cltd
pushf
xor
inc
das
pop
in
je
mov
jbe
lea
pushf
mov
cmp
fnstcw
scas
aad
sub
mov
jl
scas
cmp
mov
movsl
mov
mov
popf
repnz
mov
lret
cs
mov
popa
aaa
pushf
push
lea
shll
push
mov
pop
outsl
leave
push
jbe
add
js
cwtl
sahf
cmpb
adc
inc
sub
test
stc
mov
sbb
add
or
or
sub
push
pop
addr16
xchg
shrb
sub
addr16
lods
roll
lret
inc
add
faddl
scas
fwait
sahf
fisubs
hlt
in
pop
xor
jecxz
inc
jmp
xchg
xchg
decl
xor
cmpsb
cmc
das
xor
add
js
sarl
je
xlat
mov
addb
mov
xchg
xor
pop
je
daa
and
je
jmp
cwtl
xor
sbb
das
out
int3
xchg
loopne
into
jle
das
nop
xor
cs
cmp
lcall
add
cmp
test
push
into
inc
add
or
cwtl
jbe
in
mov
fimuls
push
inc
sub
in
sbb
ds
adcb
inc
jmp
imul
push
in
push
movsl
xchg
cmp
ds
adc
push
push
add
mov
movsl
sub
lcall
and
imul
mov
insl
dec
icebp
sti
mov
mov
movsb
cmc
sbb
mov
repz
idivl
add
adc
mov
dec
cmp
fisttps
or
dec
pusha
cmp
lcall
jmp
int
mov
cmpsl
lret
pop
pop
rorl
dec
test
loope
out
mov
and
fists
cld
outsb
mov
xchg
mov
xchg
add
movswl
mov
hlt
aas
mov
cmp
xlat
sbb
lods
stc
jo
add
dec
sbb
push
mov
jnp
iret
repz
scas
loop
cltd
lcall
add
sbb
xchg
divb
mov
stos
aaa
dec
out
scas
or
or
lcall
or
sahf
mov
add
repnz
movsb
inc
addr16
adc
in
loopne
clc
jns
add
jle
xor
push
addr16
push
and
mov
cmpsl
adc
fisubrs
pop
xchg
inc
cmp
fldt
out
dec
gs
mov
jo
pop
jne
jp
jne
dec
fwait
cmp
call
jg
push
push
cmpsl
pop
sub
mov
xor
out
xchg
pop
xchg
fcompl
insl
cmp
mov
inc
fnstsw
inc
mov
das
inc
xor
iret
push
xor
or
pop
jae
xor
or
lcall
jb
inc
mov
lods
inc
cwtl
fprem
dec
mov
fcmove
or
adc
aaa
sub
cmp
pmullw
xchg
xorl
dec
data16
cs
cmp
pop
int3
data16
in
mov
insl
pop
adc
push
mov
push
test
jae
inc
xor
orb
je
int3
and
std
ss
push
aaa
lcall
insl
loope
addr16
sbb
iret
jle
mov
imulb
int3
enter
or
push
cmp
aas
dec
scas
xor
mov
xchg
in
or
xchg
adc
or
stos
daa
jecxz
mov
lds
inc
dec
sbb
mov
sbb
dec
ss
and
mov
inc
mov
mov
dec
repz
test
xchg
sub
and
cmp
mov
pop
sbbb
ds
scas
push
cwtl
insb
sets
push
bnd
sub
test
shrb
insl
lret
pushf
les
in
in
rcrl
out
call
cmc
xor
addl
fmull
xor
sbb
dec
inc
inc
pop
sub
lock
in
add
and
mov
xor
jge
dec
imul
and
dec
or
scas
sbb
jo
xor
les
aad
das
cs
mov
movsb
loope
stos
dec
add
bound
rclb
push
xchg
mov
ss
fidivrl
add
orl
aas
push
scas
repnz
arpl
fisttpll
sahf
xor
aas
pop
in
pop
iret
lret
xchg
pop
push
movsl
sti
arpl
dec
pop
sar
xchg
sbb
adc
inc
iret
pop
push
or
jno
jbe
imul
sbb
dec
and
adc
push
xorb
mov
mov
sbb
jne
inc
dec
xchg
loope
leave
fstl
fcoml
cli
int
cmpsb
mov
fcoms
mov
aas
mov
jo
shll
movsb
shlb
cmp
iret
mov
je
popf
shll
sub
jne
cmc
mov
mov
mov
mov
mov
out
out
mov
loopne
imul
int
shrl
fwait
adc
ret
in
outsb
sbb
sbb
fsts
std
pop
adc
iret
xchg
adc
sti
cmpsb
xchg
pop
in
filds
mul
daa
push
add
js
fistps
inc
imul
cli
lods
xor
add
leave
push
stos
or
adcb
push
xor
fmuls
and
jge
ss
lock
mov
push
pop
fsub
outsl
and
pop
inc
incl
cmpsb
stos
add
cld
jmp
mov
ret
jnp
or
sbb
sbb
mov
xor
ja
test
out
or
add
push
ret
test
cmp
adc
mov
sbb
gs
and
test
aaa
bound
imul
adc
fisubl
out
pop
push
rorl
push
or
adc
rcll
shl
mov
nop
popa
and
mov
push
rcrb
mov
popa
cmpsb
mov
push
ds
in
js
and
sbb
cmpsb
push
dec
sub
push
lcall
pop
adc
andl
and
sbb
stmxcsr
addr16
fdivl
lds
int3
lcall
jge
mov
in
outsl
inc
mov
arpl
adc
rclb
lahf
ljmp
sbb
xchg
pop
adc
shl
js
add
mov
cld
adc
inc
and
in
mov
jl
outsb
cmpsl
jo
mov
ja
and
pop
out
push
outsb
and
divw
pop
pop
in
sahf
mov
mov
test
jg
sbb
in
add
jnp
push
rclb
insl
lods
adc
in
int3
mov
movsl
jecxz
mov
shll
or
shll
lahf
push
movsl
xor
xor
les
gs
jle
and
cmp
ret
es
jb
outsl
enter
pop
xor
xor
mov
cmp
call
jmp
mov
jl
data16
mov
lcall
jnp
push
dec
mov
scas
adc
out
stc
jo
loopne
les
dec
repnz
xchg
shl
mov
fisubrs
arpl
addb
stos
mulb
mov
lock
lods
xchg
inc
xchg
jbe
mov
pop
push
jmp
jp
hlt
mov
and
sub
stos
jno
rcll
cmp
repnz
mov
xchg
test
bound
icebp
cld
aas
xchg
inc
negb
cmc
xchg
add
pop
push
aam
push
mov
mov
mov
dec
pop
das
mov
gs
jmp
sahf
xchg
test
mov
cmp
jl
wrmsr
decb
pop
sahf
stc
shll
in
into
iret
fcoml
movl
aam
andb
test
mov
push
mov
fstpl
mov
test
das
push
dec
imul
push
mull
cmp
dec
xchg
das
std
jb
sub
ja
cmp
dec
mov
dec
add
push
and
adc
inc
movsl
mov
ljmp
into
jb
jecxz
cmp
and
popf
add
lods
sbb
mov
mov
mov
pop
dec
inc
cld
dec
jl
in
push
jnp
push
je
rcrb
insb
mov
cmp
out
int
or
pop
ret
inc
or
in
cmp
lret
mov
scas
sbb
pusha
adc
mov
add
jecxz
inc
inc
mov
dec
xchg
enter
iret
aaa
adc
out
out
call
xor
add
js
push
mov
and
das
mov
sub
lock
cli
je
stos
mov
imul
jge
cmp
sub
push
xchg
popa
add
in
clc
jmp
sbb
sub
call
adc
xlat
out
cwtl
nop
nop
adc
cmp
fcoml
pop
dec
inc
idiv
jno
cmp
jae
cmc
mov
aam
lcall
push
in
xor
cmp
adc
shlb
dec
adcl
mov
in
ret
clc
mov
and
ljmp
scas
dec
cs
pop
or
inc
xor
lods
xchg
call
aam
mov
mov
ftst
mov
add
test
imul
and
in
push
in
mov
jecxz
pop
inc
xchg
pop
dec
sub
push
jg
dec
cmp
lahf
adc
jns,pn
arpl
mov
jge
outsl
xor
and
das
test
pop
dec
inc
scas
cmc
dec
jge
inc
test
int
fwait
in
and
sub
mov
jne
mov
jns
xchg
inc
loopne
jg
stos
mov
adc
ljmp
daa
call
je
jbe
cld
ljmp
out
inc
aam
dec
mov
insl
clc
ffree
test
imul
frstor
cli
stc
push
mov
mov
nop
and
ss
pop
cmp
lahf
shrl
mov
and
push
add
xor
pusha
cmp
fwait
icebp
fldcw
mul
addl
in
lcall
cmpb
pop
test
lock
lock
sti
xchg
jmp
cmp
hlt
sbb
std
mov
adc
jnp
xchg
ja
inc
loope
addr16
popf
stos
pop
pop
out
stc
ss
mov
loope
cltd
cld
adc
and
adc
lahf
subl
jnp
cmpsb
or
pop
addr16
or
scas
mov
mov
mov
lods
or
mov
cmp
xchg
and
mov
xlat
mov
test
add
mov
sub
pop
scas
add
inc
test
lcall
enter
mov
or
dec
mov
inc
and
mov
pop
push
mulb
push
addl
aaa
sub
jp
pop
sub
std
and
dec
nop
push
sbb
pop
sbb
dec
and
add
cmp
push
sub
dec
mov
sub
ret
cmc
or
sub
scas
adc
enter
aam
add
jp
xchg
test
cli
sub
pop
cmp
idivb
stc
shll
imul
std
std
popf
cmp
test
mov
pop
cmp
mov
shrb
ljmp
pop
imul
inc
dec
mov
adc
cmpsb
and
add
adc
jno
lods
sub
xchg
lret
mov
dec
scas
cld
lods
and
mov
pop
sbb
fcmovnu
jp,pn
sbb
jns
push
call
push
movsb
push
imul
lods
mov
outsl
xchg
es
inc
xchg
jae
push
orl
les
bound
addr16
arpl
call
adc
or
pusha
addr16
push
popf
int3
sti
adc
mov
sbb
inc
adc
and
mov
inc
stos
leave
adc
sbb
push
mov
cmp
popf
xchg
xor
cmpsl
testl
test
xchg
add
je
adc
rolb
repz
inc
hlt
jp
ret
ds
test
push
in
sbb
ljmp
aaa
imul
fwait
and
js
or
dec
ja
outsb
cs
pusha
mov
pop
sbbl
mov
ljmp
test
dec
aas
cmp
pop
inc
jne
bnd
movsl
pop
std
in
sarb
out
scas
or
and
fwait
shlb
add
fsubl
or
pop
hlt
fbstp
pop
bound
sbb
sub
fcmovnb
imul
ljmp
and
push
lods
packuswb
lret
je
xchg
pop
push
and
cmp
fcomi
cmp
fstps
stos
xchg
cmp
pop
sbb
repz
les
fldcw
jo
jecxz
or
xchg
xchg
lcall
sub
nop
outsl
and
dec
cmpsb
push
or
push
mov
fsubrs
into
aaa
shll
loop
push
fcomps
sbb
jne
mov
pushf
loope
fmull
sbb
and
jge
in
xlat
neg
xchg
add
mov
sbb
mov
repz
cmpsl
dec
repz
sar
push
sbbl
sub
dec
mov
jbe
in
data16
mov
fisttpll
mov
xor
lcall
sub
fadds
mov
pop
dec
out
or
push
pop
ja
xor
movsl
xchg
jl
insl
xor
mov
xlat
xchg
pop
push
jo
mov
xchg
sbb
rorb
jecxz
ficoms
xchg
enter
cmpsb
out
sbb
iret
jecxz
ljmp
shrb
pop
in
mov
or
pusha
push
lock
mov
inc
shlb
xchg
pop
loopne
fwait
mov
adc
mov
fidivl
cmp
lock
pop
cmp
push
jmp
sbb
add
mov
icebp
or
rcrb
insb
mov
movsb
iret
sbb
repnz
icebp
cmp
dec
mov
cmc
scas
pop
sbb
jnp
loop
ret
shl
push
out
adcl
push
or
aam
sub
jo
bound
dec
notb
xchg
dec
push
jae
mov
push
push
es
aas
lahf
mov
int3
xor
test
inc
shrl
test
jae
jge
test
inc
data16
mov
sub
xchg
cmp
jae
in
sub
inc
sbb
cwtl
dec
imulb
pop
jecxz
ret
out
lretw
stos
arpl
push
sahf
iret
shr
mov
adc
cmp
mov
ret
mull
or
dec
mov
les
xchg
push
repz
xor
xor
jp
aas
pop
mov
cmc
xor
xlat
mov
or
stos
fidivrl
movsb
inc
or
testl
jbe
mov
iret
pop
insl
fildl
xchg
fidivrl
mov
mov
and
add
sub
imul
inc
loopne
adc
leave
xor
or
and
pop
pop
xor
dec
cld
int
dec
mov
add
idivl
cltd
popa
jmp
mov
pop
push
out
test
pop
stc
mov
xchg
jp
pop
popa
and
mov
dec
xchg
mov
jle
aad
and
push
pop
aaa
and
xlat
and
imul
ss
mov
or
push
mov
xor
xor
fsubl
xorb
or
test
rcl
mov
sti
and
dec
dec
pop
dec
mov
aaa
lcall
push
mov
adc
inc
push
lds
jb
insl
fisubs
cmp
push
push
stc
xor
stos
dec
ja
adc
fs
fists
dec
rorb
test
repnz
in
lock
jbe
mov
lds
push
adc
es
dec
xchg
mov
leave
mov
add
lcall
jno
xchg
add
adc
movsl
and
lret
cmp
xor
add
sti
aaa
and
int3
enter
sbb
insb
sbb
push
inc
push
mov
sahf
rorb
fcmovu
and
scas
or
pushf
adc
sbb
mov
mov
push
in
push
aad
sbb
cmp
add
mov
repnz
sbb
mov
mov
lret
mov
or
sahf
stos
or
add
or
mov
call
jmp
in
inc
imul
or
jo
fisttpll
mov
push
push
dec
movsb
test
push
nop
lods
out
push
stc
and
mov
das
bound
aaa
inc
lods
jne
adc
ret
push
sbb
or
loope
mov
sbb
in
dec
add
bound
outsb
jecxz
call
cmp
cmp
push
pusha
jmp
and
orb
pop
add
xchg
daa
movsl
sbb
flds
pop
dec
inc
sti
test
inc
jl
inc
pop
sti
push
pushl
ds
fmuls
pop
mov
pop
pop
fwait
or
enter
mov
mov
jl
fcmovbe
and
gs
dec
popf
add
cmp
cld
cld
add
fcmove
nop
jb
xlat
mov
or
fldl
mov
mov
sbb
mov
cli
pushf
and
push
pop
in
js
mov
jle
dec
int
jp
subb
sti
sbb
roll
das
sbb
pop
push
inc
xlat
jle
xchg
push
das
cmp
pop
xor
push
lret
and
fstpt
fistps
xchg
pop
arpl
dec
pop
out
jecxz
rcrb
paddq
loop
sub
mov
in
test
sub
inc
jnp
lcall
sub
inc
xchg
pop
sub
dec
mov
out
js
and
xlat
mov
loope
push
and
in
dec
test
add
and
ds
aas
pop
cmp
gs
mov
sbb
lds
or
bound
sbb
jecxz
xchg
test
lret
in
repnz
loope
mov
movsl
jbe
fldcw
adc
and
cli
into
sbb
in
lock
cmp
xchg
sub
dec
sti
mov
jp
mov
dec
sbb
xchg
mov
jb
dec
or
lahf
out
lea
stos
lcall
dec
lret
xor
ret
pusha
insb
sub
xor
fiaddl
icebp
jb
mov
es
call
test
mov
dec
jle
jbe
in
cmovnp
inc
sbbb
std
ret
mov
in
sahf
inc
pop
mov
pop
inc
jle
cmp
dec
or
xlat
fs
mov
loopne
jmp
mov
dec
and
aaa
xlat
fmuls
dec
xor
cs
mov
inc
cwtl
pop
lret
xor
leave
cwtl
ret
jg
daa
pop
or
jb
cmp
lods
xchg
arpl
rcr
xlat
mov
inc
and
fidivs
xchg
lods
adc
jmp
sub
ret
insl
cmp
jns
das
cmp
mov
je
xchg
mov
cmp
aam
xchg
bound
arpl
leave
lcall
scas
inc
scas
nop
shll
cltd
inc
das
es
sti
push
es
repz
xor
push
pop
ss
icebp
cmp
sbb
scas
dec
pop
push
push
push
mov
mov
push
sar
cmp
in
sbb
mov
cwtl
sbb
fstl
dec
xchg
popa
push
ljmp
xor
mov
jo
sarl
dec
in
and
cmpsb
pop
cmp
stc
test
flds
leave
aam
mov
jne
addb
fdivrs
das
ss
mov
popf
cmpl
insl
xchg
or
mov
mov
jo
dec
dec
inc
idivb
popf
imul
hlt
lret
sahf
ja
imul
push
jl
int
jmp
test
dec
cmp
xchg
cmpsb
xchg
icebp
or
pop
add
lock
sub
jmp
jae
lock
mov
daa
lret
stos
test
pushf
cmp
ds
flds
out
or
inc
hlt
xor
and
mov
inc
mov
mov
iret
push
xor
xlat
mov
sti
pop
je
and
scas
jo
jns
adc
add
xchg
rolb
cld
cwtl
push
data16
xor
fiaddl
pop
pushf
jnp
pop
aas
push
push
aaa
test
xor
test
mov
loope
lea
inc
mov
scas
ret
hlt
xchg
orb
outsl
jmp
ja
sbbb
test
add
lahf
inc
lock
push
pop
ljmp
push
jp
test
shll
and
mov
jne
pusha
insl
adc
lods
pop
dec
mov
push
leave
fwait
push
jle
mov
cmc
add
add
dec
push
jb
xchg
xchg
or
sub
xchg
cmpsl
push
loop
icebp
rorb
dec
push
fsubrl
iret
in
gs
aam
jae
jb
pushf
xchg
out
sbb
cmp
int3
mov
sbb
mov
pop
vpaddsw
repz
pushf
or
xor
jecxz
or
dec
fldenv
ss
ret
pop
mov
out
push
jns
mov
shl
aam
sbb
jnp
pushf
fistl
mov
outsb
jl
fdivrl
pop
inc
xor
adc
mov
mov
mov
mov
cwtl
xor
movsb
notb
push
cmpsl
mov
sarb
inc
mov
cltd
and
xor
sbb
negb
insl
mov
xlat
push
adc
push
mov
adc
ret
jns
pop
cmp
cmp
and
sarl
sub
in
jo
jecxz
jg
pop
jae
idiv
clc
fimull
mov
push
mov
cmp
out
in
jmp
add
inc
fs
mov
shl
mov
cli
inc
mov
out
sti
cmpsb
pusha
mov
push
dec
movsl
xchg
xor
inc
adcl
flds
loopne
push
push
jb
inc
aaa
leave
cs
add
push
sahf
pop
sbb
insb
pop
sub
test
daa
in
push
xorl
push
dec
cmp
adcb
out
mov
pop
and
scas
xor
test
sub
aad
mov
jb
inc
push
pop
jnp
mov
inc
and
mov
mov
lods
rclb
adc
sub
jbe
adc
aad
xchg
cmpsb
scas
popf
arpl
int
mov
pop
insb
loopne
mov
mov
or
mov
arpl
hlt
lea
xchg
push
jb
sar
add
xchg
rclb
sub
shll
shll
lds
inc
mov
and
and
xchg
fistps
hlt
test
adc
adcl
or
xlat
fnstenv
jg
push
sbb
test
pop
and
and
mov
in
rcrb
push
xor
add
daa
and
cmp
jae
jge
xor
and
ror
pop
lret
stos
jo
lcall
test
pop
mov
mov
pop
sub
mov
xchg
pop
inc
call
inc
jno
sub
cmp
fwait
shl
popa
ja
daa
jnp
test
aas
je
js
dec
inc
ss
xor
ret
fwait
mov
push
cmpb
stos
mov
add
cmp
sbb
and
lret
fwait
loop
push
out
icebp
jmp
adc
je
test
pop
out
imul
mov
xorl
cld
adc
addr16
js
mov
loop
inc
inc
jb
jg
int
inc
jle
call
loope
add
stos
sahf
cld
sub
xor
jp
ljmp
pop
clc
outsl
pushf
sahf
add
sbb
cmp
add
cmp
push
dec
popa
xlat
cli
sub
sbb
push
es
dec
and
mov
movups
jg
int3
cmp
add
loope
push
es
mov
das
or
add
jo
cmp
rcrb
push
push
out
in
pop
pop
xor
mov
inc
and
pop
cmc
adc
daa
subb
mov
dec
enter
jle
test
push
mov
sbb
jnp
scas
pop
and
sbb
xchg
cli
pop
inc
fidivl
icebp
push
ds
out
mov
push
outsb
xor
in
ljmp
test
mov
xor
mov
cli
push
or
mov
or
popa
cmp
icebp
fcmove
push
mov
mov
add
pop
stos
mov
lcall
bound
lcall
dec
dec
push
xchg
add
add
sbb
nop
addl
out
je
ret
jbe
in
aam
and
jle
pushf
loopne
pop
pop
shlb
shrl
cs
xorl
out
and
lret
stc
sub
mov
sub
flds
popf
fcoms
mov
xorl
popa
pop
jae
das
mov
dec
in
sbb
sbb
in
xchg
dec
xchg
mov
gs
xchg
les
andl
jns
vpandn
leave
cmp
aas
aad
push
hlt
mov
fwait
dec
lds
fwait
movsb
lods
popa
scas
loop
mov
fstps
or
or
xchg
pop
in
pusha
data16
pop
pop
loopne
jmp
sub
xorb
gs
push
inc
mov
jno
ret
enter
dec
sarl
jnp
push
dec
sbb
lret
outsb
mov
hlt
or
fdivs
repz
mov
jno
rorb
or
sti
das
fs
in
arpl
ret
scas
xor
mov
jno
stos
loope
decl
ret
sti
lret
ss
adc
jecxz
sbb
sbb
andl
mov
filds
pop
bound
out
pop
sahf
push
nop
ficompl
pop
jp
dec
pop
imul
imul
xchg
sahf
aad
inc
add
scas
mov
cmp
js
cmp
and
sub
mov
sub
dec
ficomps
std
pop
or
arpl
push
aaa
addr16
pop
sub
jno
or
adc
in
out
dec
or
cmp
adc
jmp
ret
xor
pop
ret
dec
pop
arpl
cmc
in
dec
mov
mov
jbe
jno
loop
or
ljmp
aaa
fsubl
and
mov
mov
dec
sub
sbb
decb
push
cmp
sti
aam
push
add
sub
xchg
movb
lock
dec
push
cmpl
mov
into
rcrl
and
pop
fwait
push
mov
dec
aad
es
popa
addl
loop
dec
jbe
mov
call
outsl
sub
mov
movsb
fdivl
cmpsb
test
dec
sub
lea
dec
loope
sub
test
out
aad
mov
out
fidivl
jne
xchg
push
xchg
jne
call
sbb
es
mov
loop
mov
jns
test
mov
pop
hlt
das
cmpsl
mov
push
and
or
lret
sahf
repz
lret
jne
pop
sbb
dec
and
sub
mov
push
cs
push
inc
stos
cmp
lret
shl
mov
daa
jg
lds
sbb
loope
sbb
inc
sub
push
and
in
xor
call
fidivrl
aaa
mov
mov
jns
pop
cmc
popf
movsl
jbe
jg
sub
scas
xchg
sti
adc
push
aam
xchg
sub
and
xchg
mov
out
push
sub
outsl
add
adc
mov
mov
cmp
and
cltd
idivl
lret
vandnps
mov
popa
ficomps
mov
imul
push
jnp
push
aad
lret
repnz
ja
cmp
adc
lds
xchg
in
dec
sar
aas
sbbl
std
cmp
hlt
or
sub
xlat
jmp
or
mov
cmc
and
lahf
xchg
imul
sub
test
and
into
adcb
stc
test
mov
insb
imul
xor
stc
jg
mov
hlt
stc
pushf
xchg
xor
mov
pushf
sub
test
jmp
out
clc
lahf
sub
popa
mov
push
add
es
cmpsl
adc
mov
fistpll
push
in
push
and
stos
shr
xchg
cmpsb
inc
loope
xchg
push
add
push
xor
jecxz
dec
lock
mov
movsb
sub
in
cmc
xor
loopne
fsubs
and
dec
push
or
dec
outsb
xchg
mov
mov
push
and
lods
call
jecxz
lret
jb
cmpsb
inc
dec
adc
outsb
outsb
pop
inc
xor
test
lret
movsl
dec
jae
inc
pusha
lods
inc
lcall
dec
xor
and
jne
or
ljmp
jecxz
jmp
imul
clc
and
arpl
data16
js
jns
shlb
aad
shr
sub
inc
push
es
pop
lods
mov
push
cmp
push
idiv
sarl
dec
bound
sub
jle
lahf
add
pop
ja
or
pop
xchg
mov
lds
xor
gs
repnz
sub
lods
int3
lods
mov
mov
push
pop
inc
jb
jno
nop
pop
pop
pop
neg
and
adc
mov
fwait
mov
sbb
das
sbb
sarb
fldt
jbe
pop
and
adc
jg
shll
les
mov
adc
inc
xchg
dec
fcoms
enter
push
and
idivl
fmull
arpl
fldcw
dec
je
popa
loopne
cmp
shrl
push
pop
xchg
pop
xchg
mov
movsl
stc
cltd
pop
filds
fsubrs
and
and
out
test
sahf
xor
mov
bswap
mov
inc
ljmp
jbe
cmpsb
push
out
adc
sub
mov
jne
mov
add
shlb
loopne
inc
and
movlhps
ss
outsb
mov
lods
add
xor
lcall
pop
outsl
mov
aaa
jbe
pop
dec
into
lods
movsl
pop
pop
dec
test
xchg
cmpsb
loopne
test
sub
bound
or
js
and
testb
out
inc
aam
and
dec
gs
mov
cmp
gs
lds
pop
mov
or
cwtl
adcl
and
inc
popa
push
sub
lahf
ss
xchg
mov
jecxz
dec
lahf
push
cmp
jns
gs
xchg
movsl
cmc
fistpl
sahf
xchg
cmpsl
cmpsl
cltd
cmp
lret
mov
sahf
xor
inc
mov
lret
sub
movsl
mov
push
sahf
xor
hlt
adc
jno
adc
sub
popa
jns
cmp
jbe
xabort
out
movd
push
lret
dec
sbb
push
pop
fsub
mov
je
loop
sub
sub
xor
dec
pop
mov
lock
rorb
cmc
nop
and
in
push
sub
jp
push
or
dec
xor
pop
sbb
xlat
testl
test
push
jb
ret
cmp
adc
mov
inc
fdivrl
pop
push
and
clc
xchg
and
fdivrl
ljmp
scas
mov
push
ds
jmp
inc
nop
jl
loope
push
fistl
jl
jecxz
in
flds
sar
mov
fnstcw
dec
lret
adc
push
jl
sub
ds
sarl
insb
fisubs
and
push
lods
adc
add
test
pop
push
jne
orb
test
adc
out
jmp
or
lods
bound
inc
add
cmpsb
mov
aas
cltd
mov
lret
repnz
push
lret
imul
or
push
fwait
stc
adc
cltd
sub
les
into
sahf
pushf
mov
push
xchg
or
loopne
xor
stc
xor
and
icebp
in
dec
inc
mov
inc
cmp
cmp
jne
adc
add
xchg
cmp
insl
fdivrp
ja
mov
rorb
dec
mov
jg
lret
loopne,pn
or
shl
sub
lret
and
jge
fnstsw
scas
push
jmp
inc
sbb
out
jle
repz
popa
cmp
lret
rcl
pop
movl
scas
imul
insl
js
inc
pop
mov
xor
fcompl
mov
mov
clc
mov
mov
push
pop
mov
cmp
jg
or
jns
dec
jg
sbb
push
or
out
ret
mulb
jmp
mov
inc
xor
dec
and
jb
bound
mov
xchg
aas
cmp
sbb
subl
xor
outsb
add
xchg
jae
nop
in
ja
push
frstor
mov
lret
pop
pop
mov
mov
dec
ds
xlat
cmp
xchg
mov
xchg
sbb
inc
xor
pop
pop
fstp
jecxz
xacquire
das
inc
cmp
mov
dec
mov
add
push
adc
and
mov
call
sarl
mov
insb
repz
mov
xor
lahf
jg
fadd
push
js
out
pop
inc
cmc
push
fdivs
ss
jecxz
add
outsb
loop
sti
mov
loope
lcall
loope
shrb
mov
out
hlt
repnz
les
xor
scas
mov
add
outsl
mov
cmpl
rorl
pop
and
jmp
push
mov
mov
xor
and
xchg
test
xchg
dec
stc
in
pop
push
loop
push
adc
mov
jo
lret
notb
clc
pusha
ret
push
rcrl
xchg
push
dec
pop
sbb
dec
idivl
push
xchg
adc
mov
outsb
push
mov
jb
insl
sbb
inc
pop
mov
negb
in
inc
push
and
stos
sbb
mov
popf
inc
lock
andl
inc
lcall
call
mov
test
addr16
cmc
push
adc
lods
incb
xchg
or
ss
push
in
sarb
mov
cmp
in
add
xchg
push
icebp
xor
or
fnsave
xchg
xor
addr16
aaa
dec
jecxz
ljmp
repnz
xchg
cmc
push
inc
lods
aad
into
cli
clc
aam
cs
mov
shll
inc
cmp
in
mov
ss
xor
xor
iret
sbb
add
subl
mov
push
or
and
lds
mov
pop
lods
cmpsl
jg
mov
or
sub
ret
loop
jmp
mov
ljmp
shll
cs
mov
cmp
adc
lock
pop
and
push
scas
leave
push
test
xlat
and
jne
lods
dec
idivb
and
sbb
mov
imul
rclb
xor
dec
loopne
jl
fs
mulb
inc
inc
sub
mov
inc
push
mov
cwtl
jp
mov
fcmovb
test
pop
out
adc
push
add
ss
dec
movups
dec
or
mov
shlb
push
cli
mov
into
pop
ljmp
cmp
and
add
rcr
cmp
jne
sahf
ja
mov
mov
incl
xchg
cwtl
icebp
mov
rorb
aad
pusha
add
mov
mov
test
push
sbb
or
push
dec
or
jae
sti
sbb
mov
lea
lahf
add
or
xor
sbb
push
sbb
push
mov
push
mov
xchg
dec
inc
xchg
pushf
push
popa
sbb
xor
cmpsb
in
mov
imul
mov
in
ja
mov
psubsb
sahf
rorl
jmp
fdivrs
lret
inc
cmp
xor
xchg
xor
dec
xchg
das
add
outsb
mov
push
filds
cmp
lret
inc
psubw
push
ljmp
in
xor
adcl
mov
or
sub
js
dec
or
jge
xor
xor
pop
xchg
add
sbb
aaa
out
sub
cli
push
and
push
aas
mov
clc
mov
sbb
sahf
mov
mov
or
pop
ss
loope
mov
jne
mov
mov
and
dec
pop
sub
xor
sub
pushf
xchg
jb
pop
cltd
push
mov
aas
xchg
xorb
jg
jg
sbb
fcomps
cwtl
cltd
insb
mov
imul
fimull
jno
enter
push
out
in
add
int3
mov
sbb
adc
ds
push
insl
xchg
pop
push
orb
dec
out
and
fwait
cmp
lock
push
orb
js
mov
dec
mov
jle
out
mov
mov
and
lret
jb
xchg
jbe
push
push
stos
cmp
dec
and
leave
jbe
lcall
jnp
int3
cmp
push
jle
add
jle
js
mov
lods
cmpsb
push
test
lods
pop
das
xchg
mov
movupd
xchg
mov
xor
pop
push
mov
jp
pop
inc
out
movl
rcr
and
repnz
movsb
and
aam
loopne
add
push
jge
inc
xchg
and
jbe
ds
cmpsb
mov
mov
test
imull
or
nop
inc
sbbl
scas
cmp
mov
mov
leave
or
dec
outsb
pcmpgtb
aad
decl
cmc
lret
leave
jl
jmp
mov
mov
stos
pop
jns
xchg
or
push
jae
inc
sbb
in
repnz
gs
stos
adc
sub
add
mov
jo
dec
xchg
sub
out
mov
pushf
jmp
leave
dec
dec
ficompl
in
cmp
xor
dec
sub
mov
les
xlat
fisubrs
or
lock
sbb
cmpsl
outsb
ljmp
adc
icebp
shl
sub
insb
push
sub
add
xchg
cmpsl
push
das
enter
mov
mov
mov
sbbl
mov
mov
push
dec
dec
rcrb
jecxz
test
add
into
fcmovnb
or
aaa
or
pushf
mov
or
adc
mov
cmp
aaa
add
in
inc
jg
aas
std
es
outsl
out
xlat
jl
cmp
jmp
ret
cmp
mov
push
sbb
mov
int
push
add
cmpsl
push
jmp
lds
inc
test
sbb
add
mov
popa
outsb
decb
clc
popf
int
mov
outsb
mov
sbb
add
clc
cld
mov
ret
lret
adc
xchg
ja
xchg
fwait
sbbb
lcall
push
jae
cmp
mov
jecxz
push
cs
xchg
jecxz
sub
imul
fadds
xchg
lea
cwtl
pop
cmp
rcrb
inc
xor
xchg
clc
mov
pushf
test
mov
clc
sbb
lock
mov
lahf
lret
fwait
les
pop
sbb
sub
mov
pop
mov
stos
outsb
adc
and
mov
cwtl
xor
xchg
dec
je
mov
dec
out
sub
adc
lahf
sti
cld
popa
sbb
push
mov
rolb
sti
dec
jne
ljmp
xchg
or
iret
mov
inc
lods
ret
orb
fcmovu
je
mov
sbb
sub
pop
xchg
mov
stos
aaa
in
es
cmpsb
rcrl
fbld
in
jne
sbbb
jne
jp
pop
jl
std
pop
lea
inc
or
and
gs
in
das
pop
cs
js
pop
xchg
repnz
ss
jne
sub
test
movsl
add
adc
fisttpll
adc
bound
or
mov
sahf
flds
xchg
add
jb,pn
sarl
jnp
mov
in
scas
sahf
jmp
and
or
scas
pop
lret
ret
lcall
mov
mov
jae
cmp
std
ss
pop
ret
jecxz
push
fldt
pop
mov
repnz
push
lret
dec
shr
into
and
sti
mov
out
leave
mov
jmp
icebp
pushl
pop
mov
cmp
adc
add
stos
call
xchg
nop
dec
push
push
push
jb
fwait
sub
dec
pop
push
pushf
pop
dec
test
js
fcoms
pop
std
fmuls
mov
imul
cwtl
test
push
jae
xchg
sub
push
mov
xchg
push
popl
jbe
dec
test
xchg
pop
pop
inc
out
xchg
adc
xor
hlt
dec
xchg
xor
test
pop
push
mov
shl
add
bnd
mov
mov
test
xchg
rclb
xor
xchg
add
jbe
sbb
mov
pop
roll
test
cli
aam
imul
sub
mov
xchg
pop
sbb
aaa
es
or
push
sti
or
or
inc
xchg
aad
lea
negl
hlt
popa
jnp
fadds
inc
adc
inc
sbb
fdivr
fwait
cmc
mov
cld
mov
pop
inc
nop
inc
dec
rcr
xor
roll
shlb
xor
subb
cs
mov
dec
mov
mov
and
xchg
cmc
jp
dec
sbb
fdivrs
mov
bnd
xchg
movsl
stc
pop
xchg
jb
and
xchg
cmp
lea
call
cmp
addr16
lods
ret
sub
lahf
add
out
lahf
mov
xor
icebp
mov
adc
dec
rcrb
out
movlps
xor
loopne
and
inc
jno
aam
push
mov
push
andb
mov
add
imul
js
mov
mov
xor
pop
clc
or
jmp
and
push
mov
popa
in
setl
push
ret
ja
or
push
push
in
rcrb
xorl
gs
test
pusha
ret
jecxz
loope
sbbl
mov
aaa
out
out
or
repz
repnz
jge
loope
fimull
scas
imul
xchg
jmp
pop
xchg
sbb
test
bound
arpl
jl
ja
les
mov
scas
insb
xor
fldenv
pushf
loop
arpl
inc
xor
std
adc
xor
bound
int
in
lea
and
dec
dec
in
jne
imul
pop
sbb
loope
pop
icebp
or
in
stos
jge
or
popf
lahf
daa
les
jne
addl
jne
sbb
cmpsl
mov
mov
popf
jo
lcall
repnz
xchg
sahf
into
cs
enter
ljmp
arpl
jge
or
push
or
pop
fisubl
lcall
cli
add
out
sbb
dec
and
imul
in
ljmp
arpl
bound
mov
push
push
call
xchg
pop
cmpb
push
hlt
add
mov
mov
pop
test
cmp
push
dec
sbb
adc
cmp
movsb
xchg
addl
das
lds
push
aas
dec
lahf
pushf
inc
mov
dec
outsl
lahf
mov
or
xchg
mov
xor
shrl
jb
cmc
pop
mov
add
sub
test
sbbb
stc
xchg
or
addr16
int3
in
add
mov
and
adc
sbb
ficompl
inc
in
inc
lds
adc
pop
adc
and
sarb
inc
push
xor
sar
sahf
data16
ds
scas
pop
mov
dec
sti
ret
xor
es
int
inc
mov
das
or
lret
pop
cmp
mov
leave
scas
jle
mov
fwait
inc
out
dec
adc
sahf
sahf
cmc
repz
xor
cltd
loopne
test
sub
test
jnp
push
push
push
inc
fcompl
leave
pop
nop
dec
cmp
scas
mov
dec
or
enter
cwtl
jae
mov
ficomps
add
scas
inc
push
in
pop
in
je
add
int3
call
dec
add
mov
and
negb
lahf
jae
cmp
adc
popa
pop
xchg
in
jae
pushf
cld
jp
imul
ret
inc
pusha
add
mov
push
int3
ljmp
push
lret
jg
data16
lods
jne
loopne
mov
lahf
mov
mov
push
mov
ret
stos
dec
aam
jno
add
lret
andb
mov
mov
popa
push
push
cmp
jmp
dec
mov
jbe
xor
subb
sbb
cmp
xchg
dec
popf
xchg
shl
mov
imul
dec
push
mov
cld
popa
mov
in
dec
xor
jmp
push
js
test
into
mov
push
ds
mov
xchg
in
pop
jg
clc
test
sbb
inc
stos
pop
and
jmp
mov
div
cmpsl
aad
shl
adc
ds
fbstp
xor
mov
pop
pushf
in
loope
inc
cmpl
push
pop
mov
sub
push
mov
dec
mov
in
jno
cmp
adc
mov
outsb
hlt
lcall
jle
add
and
std
or
xlat
and
mov
std
in
scas
popa
and
jb
leave
xchg
push
push
ror
mov
lahf
out
in
into
sbb
or
push
xor
add
and
push
addr16
out
pop
mov
mov
faddl
push
popa
xor
fcos
push
movsb
aad
jecxz
clc
push
in
inc
rclb
inc
xor
cmp
push
jae
or
inc
and
loop
add
insl
movsb
out
icebp
mov
sub
icebp
call
pop
dec
adc
loop
pop
dec
sbb
xor
popa
xorl
adc
out
or
mov
testl
nop
nop
enter
cld
mov
mov
mov
ss
or
fsubrp
jae
flds
mov
aad
xchg
or
inc
cwtl
fmull
push
in
cltd
lds
add
out
sub
sti
out
fcmovu
mov
nop
mov
jmp
and
xor
pop
ljmp
insb
sub
xor
sbb
mov
xor
or
mov
xchg
jp
mov
inc
test
aad
push
sbb
xchg
xchg
jne
sti
xchg
xchg
aaa
mov
bound
add
pop
xchg
ljmp
decl
sahf
mov
addb
sub
fwait
jae
fnstcw
fsubs
dec
pushf
test
cmp
pop
push
insl
or
cmpl
push
mov
sahf
in
mov
movsw
and
jmp
jnp
mov
imul
pop
sahf
xchg
shrl
push
jge
sub
aad
cmp
add
lahf
mov
mov
add
lret
xor
sbb
stos
jp
mov
adc
ret
test
xchg
loope
xor
rcr
stc
pop
hlt
into
jno
or
adc
cmc
pop
inc
rcrb
dec
push
pop
xchg
stc
add
add
push
jmp
sahf
jb
rorl
pusha
dec
out
add
add
lret
outsl
inc
jmp
adc
dec
outsb
bound
push
shl
sub
dec
pusha
mov
mov
pop
cmp
cmp
outsb
cld
push
movsb
enter
insl
or
int3
inc
mov
adc
and
push
dec
sbb
lcall
lret
jbe
dec
icebp
in
jns
popf
xchg
pop
rcrb
shrl
pop
loop
lahf
pop
into
sbb
xor
add
pop
inc
pop
xor
test
or
int
mov
adc
icebp
cmp
sub
sub
inc
xchg
lret
mov
neg
fcoml
mov
xchg
dec
dec
nop
jne
sbb
pop
cmp
insl
push
and
jnp
call
pushf
inc
sub
adc
inc
repnz
int3
lock
scas
inc
pop
aam
jae
ja
out
jp
add
jno,pt
and
mov
fcoml
xor
rcrl
icebp
adc
dec
call
xchg
popf
ret
dec
and
sbb
mov
mov
pop
test
add
loop
pop
sar
mov
fwait
push
int3
lret
loopne
sub
xchg
cmp
inc
cmp
out
fucomp
loopne
xor
add
les
push
add
add
out
lods
in
fs
sar
es
int3
imul
mov
jne
jmp
push
push
xchg
jmp
mov
repz
dec
push
rcll
jl
and
push
rorl
cld
cmp
pusha
push
mov
lret
mov
mov
sbbb
repnz
push
pop
lods
push
mov
adc
out
push
push
cmp
cmpl
adc
bound
rep
clc
sbb
clc
push
push
test
pop
dec
mov
sub
cwtl
pop
jno
mov
xchg
adc
pop
cmp
insl
mov
test
aaa
inc
push
inc
outsl
push
xchg
jne
int3
lret
adc
pop
aaa
insl
aad
push
es
push
jne
movsl
jp
inc
mov
xchg
xchg
movl
cmovne
int3
dec
push
mov
iret
pop
sub
mov
pusha
and
imul
idiv
cmp
cmpsl
popf
popf
cmp
sub
sub
leave
lret
and
outsb
mov
call
rcrl
ret
rcl
mov
jmp
ds
mov
ljmp
and
pop
sbb
loop
fldt
mov
and
loope
scas
mov
or
lods
push
jno
and
add
into
fnsave
mov
fcomip
push
push
xchg
fmul
aaa
sub
loop
cld
arpl
in
pop
andb
pop
ret
or
clc
xchg
inc
mov
popf
das
ss
adc
stc
adc
mov
movsl
jns
into
je
mov
push
mov
repz
adc
sub
cmpb
lock
and
in
icebp
cmpsl
dec
insl
sub
test
int
movsb
mov
add
icebp
pop
dec
pop
int3
inc
sbb
adc
outsb
inc
lods
mov
mov
cmp
in
scas
insw
fs
out
out
lret
and
or
insb
xor
pop
push
aas
mov
xchg
stos
rorb
imul
mov
push
cmp
sbb
jne
repz
outsb
jmp
imul
cmp
mov
sbb
int3
mov
cmp
scas
jmp
call
jns
mov
sarb
gs
lods
push
sub
mov
test
stos
mov
jle
ret
push
and
xchg
xor
insb
sub
mov
inc
daa
and
loopne
rorb
fwait
push
mov
outsl
popf
test
cli
or
inc
int3
jge
xor
rorb
jno
scas
sbb
push
popa
lcall
in
cmp
mov
leave
rclb
icebp
inc
push
xor
pop
mov
test
and
rolb
jbe
cmpsl
std
pop
fbld
loopne
sbbl
int3
pop
pop
jbe
xchg
pop
jb
inc
xchg
idiv
stos
pop
or
dec
mov
push
sbb
inc
add
ljmp
js
pop
jecxz
lret
push
iret
lcall
mov
pop
out
xor
xor
or
dec
sbb
lock
or
push
xor
test
stc
scas
ljmp
loopne
xchg
or
loope
push
shlb
clc
mov
fadds
mov
imul
push
mov
pop
jp
pop
and
adc
lcall
and
bound
mov
push
in
xor
stos
adc
sbb
xchg
push
inc
aaa
not
out
sbb
sub
cmpsb
std
lea
mov
test
cmp
scas
fadd
call
dec
mov
test
sarl
mov
enter
xchg
lret
je
sbb
loopne
push
repnz
sbb
call
xor
pop
sahf
xchg
pop
cmp
sub
pop
enter
pop
sub
dec
push
cli
and
push
jae
cmpsl
mov
mov
enter
leave
scas
inc
and
pushl
aaa
sub
ret
loope
mov
data16
xor
fldl
cmp
xorb
arpl
push
pop
orl
jle
fmull
ret
cwtl
sub
dec
roll
dec
sub
push
cli
and
in
pushf
dec
dec
enter
lcall
sub
pop
scas
jl
pop
add
inc
pusha
dec
mov
je
sub
test
inc
sbb
mov
push
adc
ds
imul
sbb
mov
pop
sarl
mov
jbe
sbb
pop
mov
dec
xor
test
inc
add
sti
pop
jl
pop
cmp
aaa
cmpb
loop
sub
or
pop
int
push
lods
lret
in
and
sub
adc
dec
jb
jl
and
clc
andl
adc
jle
hlt
data16
ljmp
test
enter
dec
pop
push
stc
outsb
push
aaa
fs
mov
dec
int3
inc
in
in
xor
and
shrb
xchg
loop
add
sub
andb
cli
jae
adc
mov
jno
pop
rolb
add
loop
fwait
pop
incb
mov
add
lret
fwait
or
adc
lret
mov
mov
xor
jo
adc
adc
sbb
adc
lea
cmp
jle
icebp
cld
pushf
sub
sub
mov
mov
inc
js
cmpb
sub
repnz
out
enter
xor
dec
jg
loopne
and
mov
jnp
fnstsw
xor
mov
jno
sbb
add
rorl
and
xor
mov
cmp
ss
sub
mov
xchg
ja
shl
cs
sbb
jg
jp
sbb
imul
pop
imul
ljmp
addr16
stos
nop
inc
inc
mov
mov
add
pop
subb
add
addr16
jne
pushf
xchg
aad
or
fwait
and
gs
push
sarl
pop
xchg
clc
mov
and
dec
popf
dec
jge
inc
mov
mov
or
ror
add
lods
inc
mov
push
clc
fisubl
or
int3
and
pop
mov
stos
lcall
popf
enter
stos
sub
bound
push
or
xor
cmc
push
xor
and
push
dec
and
or
jae
adc
add
dec
jo
shl
dec
inc
popf
outsb
stos
fisubs
mov
lock
mov
mov
sub
inc
lds
shll
aad
insl
popf
sbb
fistpll
pushf
or
popf
sarl
pop
mov
xor
nop
aad
imul
xor
jbe
dec
loop
cmp
push
call
dec
push
add
or
repnz
add
dec
cmpsl
mov
repz
lret
jb
test
mov
jb
ljmp
push
rorb
push
in
jmp
or
jmp
add
mov
iret
dec
mov
jle
popa
nop
pop
mov
mov
push
addr16
js,pt
rcrl
idivb
cmc
adc
mov
std
dec
scas
fs
insl
or
in
mov
shll
clc
rcr
roll
into
into
pop
cmpsl
cmpsl
repnz
imul
iret
or
insl
popf
data16
xchg
les
repz
inc
push
mov
pop
mov
inc
sbb
int3
and
jle
cmp
movsb
aad
cmp
in
xor
mov
jg
shlb
pop
sbb
lds
xorb
je
rcll
out
stc
scas
dec
repnz
cltd
cmc
xchg
daa
gs
stc
and
sbb
mov
es
mov
out
loop
mov
call
subb
ret
sub
rolb
or
mov
test
jo
ss
scas
pushf
loop
imul
adc
shlb
pop
jb
addb
dec
pushf
and
mov
rorb
pop
jmp
imul
loopne
fsubrs
rorl
push
call
push
aaa
rclw
and
gs
pop
cmp
mov
inc
lcall
fwait
pusha
int3
add
ja
nop
push
and
xor
mov
mov
outsl
push
and
out
pop
inc
idivb
add
in
addb
adc
aaa
inc
cmp
xchg
addr16
jnp
sti
xor
cmp
sbb
mov
inc
jg
movsl
jne
cmp
add
jb
push
clc
xor
cmpsl
jno
pop
push
fs
cli
and
sub
aaa
mov
mov
out
movb
insb
push
push
and
les
popf
mov
jl
repz
ret
xor
dec
inc
push
shl
popf
jb
mov
inc
cmpsb
fdivrl
fcoms
sahf
les
lock
stos
cltd
jbe
sub
dec
pop
mov
mov
pop
dec
inc
ss
mov
shr
movsl
jp
add
mov
jns
loopne
lds
popf
mov
cmp
dec
mov
loop
pushf
fwait
xchg
mov
push
xor
xchg
fwait
sbb
insl
pop
sub
dec
or
jmp
push
push
inc
aas
fisubrl
je
lahf
lahf
inc
or
jo
mov
cs
fimull
sub
dec
dec
shll
lret
add
int3
je
mov
sbb
fidivrl
ficoml
in
push
xor
add
jg
rcrl
clc
add
clc
popa
inc
addl
pop
scas
mov
arpl
scas
mov
shll
jp
push
and
fisttpll
inc
orb
ret
loop
test
inc
sti
pushf
jp
fstpl
or
bound
sub
aad
xchg
mov
pop
pop
push
xchg
dec
stc
xor
push
xchg
push
repz
jle
push
dec
std
push
push
stos
repz
xchg
fisubs
dec
mov
addr16
adc
xor
sub
inc
mov
fwait
gs
fbld
mov
in
lahf
dec
mov
push
push
mov
in
fbstp
sub
adc
decb
femms
iret
imul
fs
cmp
push
pop
mov
xor
mov
out
mov
xchg
inc
or
cmp
jns
jecxz
enter
jae
add
add
cwtl
popa
shlb
push
icebp
fisttpll
out
xor
push
pop
adc
xlat
jb
orl
add
cli
pop
in
cmp
fstpt
jae
in
arpl
imul
add
loopne
bnd
js
in
xchg
aaa
mov
xor
stc
dec
dec
sahf
sub
out
rcll
mov
shl
lcall
cmpsb
in
mov
ret
push
fs
dec
mov
pop
daa
mov
inc
stos
fwait
lea
fisttps
xor
jmp
sbb
cmp
jmp
inc
jl
and
mov
sub
or
js
jno
test
popa
xlat
in
jns
loopne
mov
and
repnz
scas
pop
mov
fcoms
jbe
into
sbb
xchg
add
sbb
test
aad
mov
repz
push
arpl
jp
add
dec
dec
mov
lds
subb
push
lcall
push
rol
imul
xchg
stos
add
add
inc
jnp
lods
test
ljmp
inc
pushf
jge
mov
js
mov
loope
add
sub
cltd
inc
clc
inc
cmp
sahf
and
stc
push
daa
test
push
cld
or
imul
push
mov
jae
or
sbb
dec
sbb
dec
inc
sub
fs
pop
adc
or
jnp
adc
mov
outsl
sbb
aam
adc
aaa
jmp
inc
cld
movsb
movsb
movsb
mov
push
clc
cld
jl
int3
dec
dec
in
jecxz
dec
add
into
mov
sub
gs
mov
call
adc
repz
fisubs
inc
outsl
dec
lcall
std
popa
or
xor
ficoms
daa
or
nop
add
enter
jns
les
in
js
aam
jno
mov
xchg
rcrb
orb
inc
in
cltd
jno
and
jmp
ds
lds
mov
mov
aas
into
mov
sti
roll
push
mov
xchg
movsb
mov
mov
idivb
negl
test
jle
addr16
inc
cmpsl
imul
inc
cwtl
jmp
xor
gs
cmp
lahf
xchg
jmp
lret
xchg
jne
or
shlb
roll
rcl
xchg
mov
fisttpl
decb
nop
xchg
jae
rcll
and
mov
and
and
addr16
jo
push
inc
inc
fmuls
adc
sti
insl
mov
xor
xchg
adc
mov
sbb
xor
sbb
fistl
jno
into
rolb
lret
cmpl
jp
shrl
in
mov
sbb
mov
subb
ljmp
sub
mov
cli
movsb
sub
enter
sbb
xchg
cmc
add
and
out
mov
inc
cmp
dec
xchg
mov
imul
mov
icebp
cmp
mov
push
roll
xor
sub
mov
xor
test
pop
adc
sti
add
sbb
rclb
sbb
adc
pop
mov
xor
xchg
mov
adc
in
xor
dec
ret
gs
aaa
pop
xchg
popa
gs
dec
in
sarl
dec
mov
pop
shrl
insb
push
push
pusha
and
dec
cld
pushf
xchg
mov
loopne
mov
mull
mov
test
pop
add
movsb
adc
mov
mov
mov
jmp
lret
sub
mov
stos
mov
push
push
xchg
mov
cmp
jo
cmp
ds
push
mov
cmp
mov
insb
and
sbb
test
sub
psrld
push
movsl
icebp
ds
and
mov
jg
mov
mov
scas
sub
jp
cmc
enter
mov
repnz
js
xlat
andb
iret
nop
mov
jl
stos
mov
lret
inc
lods
pop
push
pusha
in
jle
into
and
pop
movsl
push
andl
popf
mov
push
out
or
stos
int3
xor
push
mov
test
gs
mov
rorl
xor
ror
dec
fildll
pushf
push
jbe
jle
mov
sbbb
jbe
int3
dec
xor
xchg
rolb
adc
cmp
out
rolb
test
lods
mov
pop
fcomps
add
pop
std
add
push
mov
dec
or
pop
adc
cmp
jae
arpl
mov
mov
mov
pop
jb
lds
lods
pop
aas
lret
sar
mov
ret
mov
iret
and
mov
push
or
or
jae
outsb
lea
int
sbb
push
and
jmp
movsl
xor
inc
popa
imul
sbb
jmp
imul
dec
adc
fsubl
in
push
jge
xor
push
sbb
xor
stos
dec
dec
andb
repnz
xor
jnp
out
in
jp
dec
adcb
inc
aas
in
jne
out
mov
push
sahf
mov
lcall
fdivrl
daa
pop
mov
popf
dec
out
fimuls
jg
sti
lret
loop
in
and
jb
cmp
lods
sbb
jno
fstl
mov
pop
stos
xor
test
out
mov
fisttpl
mov
out
outsb
push
sbb
dec
dec
inc
inc
orb
cli
arpl
ficomps
mov
dec
and
outsb
xor
ds
ret
mov
mov
testb
mov
pop
jp
dec
inc
cmp
cmp
ja
mov
icebp
jle
or
js
xchg
sbb
aad
inc
lock
xchg
xor
cs
insb
lret
imul
mov
es
adc
test
mov
adc
dec
pop
sti
pop
mov
xchg
lret
andb
movb
dec
ret
divb
inc
xor
jno
dec
data16
adc
repz
ss
fs
inc
mov
or
or
nop
leave
ss
icebp
push
inc
cmc
jo
rorl
cli
dec
pop
repnz
imulb
add
xchg
mov
pusha
mov
or
cwtl
or
sahf
dec
pop
icebp
adc
das
jno
jns
aad
into
add
inc
imul
jp
inc
inc
fmuls
jne
dec
out
adc
cwtl
mov
inc
imul
nop
xchg
iret
push
mov
rclb
fdivrl
add
adc
fsubrp
outsb
jle
or
pop
cmpsl
cmc
movsb
movsl
popa
cmpl
leave
jecxz
lds
mov
mov
in
stos
or
jl
int
add
mov
daa
lcall
inc
cli
fiadds
dec
rclb
daa
pop
and
push
test
push
or
xchg
fsubrs
pop
jns
js
push
and
stos
flds
push
xchg
repnz
ret
push
cmp
mov
pusha
out
sub
test
xor
sub
mov
and
add
ret
xchg
loopne
or
aaa
cmp
fwait
push
out
hlt
mov
and
adc
inc
inc
js
stos
pop
lret
xchg
aas
add
xor
mov
scas
inc
es
and
and
ret
popw
into
and
aaa
cmp
push
clc
xchg
mov
std
xlat
mov
pop
xchg
sti
nop
fwait
mov
adc
insl
daa
lahf
inc
imul
pusha
dec
clc
in
mov
ret
mov
decb
outsb
in
repnz
sbb
and
pop
lock
pop
sub
mov
pop
push
push
rcrl
pop
sbb
arpl
add
out
adc
dec
jbe
es
mov
xor
mov
jo
lret
pop
imul
dec
jo
pop
jmp
jmp
fwait
es
rcrl
mov
negb
pushf
lret
mov
cmp
scas
push
scas
fisttps
mov
adc
push
inc
push
add
mov
hlt
add
in
imul
pop
push
sub
and
movsl
and
adc
pop
push
push
cmc
or
stos
ror
scas
out
add
es
mov
and
icebp
add
sub
ja
dec
xchg
clc
dec
xor
lock
stc
fwait
in
xchg
out
mov
pop
and
decb
jbe
test
clc
cmp
bound
adc
mov
aaa
or
mov
fmuls
imul
mov
sub
sub
addl
mov
mov
sbb
test
mov
jbe
and
scas
loop
sub
sbb
push
mov
pop
xor
xor
pop
jns
jae
sbb
xchg
arpl
pop
push
sub
mov
add
notl
sub
sub
xorb
adc
or
xchg
mov
sub
fmul
cmp
cmp
xor
sbb
cs
inc
mov
sub
stc
into
movsl
adc
imul
pop
jae
dec
xor
inc
loope
data16
das
mov
push
xchg
icebp
xor
jns
addr16
in
hlt
pop
pop
cld
scas
mov
xor
jns
mov
lds
dec
and
arpl
sub
rolb
fcoml
cs
outsl
sub
add
in
sub
iretw
repz
lret
shlb
jge
push
paddsb
aaa
sub
push
lods
push
into
js
imul
arpl
jno
iret
cmpsl
stos
fistps
cmpsb
pop
and
ss
add
jge
stos
push
cmpsl
lret
push
inc
stos
adc
xor
call
and
sbb
add
je
nop
inc
rolb
inc
mov
mov
jle
pusha
imul
call
ljmp
add
lahf
xchg
imul
push
xchg
cltd
xchg
hlt
add
cld
loope
adc
mov
test
clc
dec
fistl
jae
in
add
clc
out
mov
adc
out
sub
or
and
jmp
add
cmp
pop
decb
insl
test
sahf
jmp
sub
pop
aam
gs
sub
into
push
repnz
lret
mov
cmp
loop
lahf
imull
fists
subb
sub
nop
cmp
mov
bswap
lods
rclb
pop
lock
lods
adc
jb
pop
rcrl
mov
icebp
inc
out
cli
mov
adc
or
jbe
jmp
xor
pop
and
mov
xchg
cmp
xor
imul
ret
pop
sub
cltd
hlt
loope
fldenv
cli
mov
mov
imul
scas
xchg
mov
lods
imul
out
push
pop
mov
in
fbld
add
mov
jg
movsb
int3
pop
adc
or
mov
add
in
adc
dec
jnp
hlt
or
or
orl
repz
mov
loop
adc
repnz
sub
mov
je
ret
scas
cwtl
mov
adc
mov
cld
sarb
inc
jo
pushf
push
inc
sbb
js
int3
fsts
sub
mov
ss
push
and
sub
pop
pushf
nop
add
mov
sarl
std
into
vcmppd
fistpll
mov
jg
mov
enter
scas
stc
aam
cs
inc
lret
dec
pop
scas
lods
pop
inc
mov
sub
shr
inc
out
in
dec
or
stos
test
fsubs
xchg
jg
aam
dec
jno
push
fabs
shlb
lcall
push
jp
sbb
xor
xor
push
cmp
pusha
sbb
cld
rorb
iret
inc
je
jmp
outsb
in
lret
aam
mov
xchg
fstl
aam
jmp
fcompl
gs
jno
jnp
adc
dec
or
popa
daa
mov
add
xor
pop
push
insb
dec
outsb
pop
lds
pop
stc
xchg
out
cld
push
cmp
clc
in
shlb
lcall
sbbl
and
das
fadd
xor
insb
aad
mov
sub
xchg
jnp
sbb
pop
inc
pop
jnp
iret
mov
mov
xchg
aaa
cmp
or
in
aad
arpl
adc
lock
mov
call
ret
jo
scas
aam
dec
push
scas
in
inc
xor
std
mov
and
roll
and
lods
fisubl
fdivs
xchg
push
mov
dec
jl
popa
push
push
push
mov
js
scas
inc
sub
leave
push
jb
pop
mov
in
mov
outsb
cmp
fstl
or
push
loopne
sub
testb
push
lods
cld
js
fadds
iret
ret
sbb
lahf
rcll
popl
lea
leave
pop
icebp
frstor
repz
adc
into
push
cld
jno
push
fisubrs
rclb
inc
add
jns
pop
jl
enter
mov
inc
jb
cmpsl
jle
es
lcall
rorb
pop
dec
inc
cwtl
pop
into
hlt
or
mov
outsl
jo
mov
inc
dec
popf
adc
lds
jno
rcrb
pop
add
or
imul
leave
and
add
mov
push
mov
bound
roll
enter
sti
mov
pushf
aas
repz
cmc
es
movsl
sti
pop
cwtl
mov
fs
clc
xchg
jae
push
adc
xor
cmp
ljmp
test
es
add
push
fnstsw
xor
sbb
jo
mov
cmp
insl
pop
or
pop
cmc
imul
jb
mov
sub
lds
aam
insb
sahf
stc
insl
mov
addr16
fdiv
inc
aam
cmp
in
dec
shrl
xor
ss
stos
xchg
insl
inc
sub
decb
mov
push
mov
lock
pop
inc
mov
and
push
push
icebp
mov
mov
aaa
imul
fists
mov
xor
sub
stos
sahf
pushf
bound
lea
mov
out
leave
cltd
add
insb
ja
ficoms
jp
sbbb
int3
aas
enter
inc
js
not
mov
test
das
aaa
add
xlat
add
sti
inc
lds
mov
pushf
sbb
and
mov
loopne
cmp
xor
xchg
lea
xchg
loopne
mov
insb
in
sti
cld
add
dec
cmpsl
out
xor
jecxz
add
mov
jnp
aam
ljmp
rcrl
lods
mov
ret
jg
xor
mov
loopne
fstpl
and
cmp
icebp
pop
xchg
mov
sbb
sub
fnstcw
mov
sbb
add
xor
mov
ljmp
ja
subb
test
lcall
push
sub
nop
cmp
inc
pop
ret
ffree
adc
test
push
pop
cld
js
movsl
jnp
adc
and
push
js
mov
adc
mov
cltd
cltd
pop
jae
push
cltd
ret
jl
lds
cmc
rcll
adc
in
das
mov
inc
repnz
or
cmpsl
repnz
shll
pop
fucomi
icebp
std
sbb
and
sub
cltd
fsubrs
roll
adc
jae
sub
insb
jp
cmpsb
cmp
xor
mov
mov
lcall
or
cs
pop
addr16
data16
sahf
stc
push
jns
test
out
push
sub
adc
lahf
adc
or
mov
movsl
xor
outsl
pusha
pop
ja
pop
pop
movsl
lret
dec
fildll
mov
jle
lcall
clc
lods
mov
lds
jbe
imul
mov
data16
mov
ret
fwait
repz
jb
imul
aam
repz
mov
jo
ds
lcall
fs
pop
adcl
push
xlat
or
pop
cmp
jb
xchg
data16
shll
popf
pop
stos
xor
pop
int
or
das
fstps
nop
xor
jne
add
popf
dec
cmpsl
or
stos
inc
repz
rcr
aad
mov
ja
cmpb
fdivs
sub
mov
fmuls
sub
addr16
mov
fsubr
icebp
xor
pushf
push
ja
xor
rorb
sbb
stc
lret
movsl
mov
ss
je
inc
call
cmp
aas
xchg
push
add
nop
and
rcrl
test
js
negl
jg
dec
dec
mov
into
ret
in
pop
insl
sahf
int3
add
or
dec
in
fildll
xor
cmp
popf
addr16
outsl
rcll
in
lahf
bound
outsb
int3
addps
add
out
jno
imul
stos
xor
inc
mov
dec
adc
incb
insl
inc
mov
mov
pop
sub
insb
xlat
and
mov
aas
aad
filds
sub
lock
mov
repz
ret
or
movsl
push
cmp
mov
lock
xor
inc
popf
fucomp
aam
outsb
jnp
in
cmp
out
push
xchg
fisttpl
lods
inc
clc
repz
imul
sub
xchg
push
jno
push
xor
sti
adc
cmp
addr16
mov
xor
lret
jmp
adc
add
insl
push
test
mov
mov
ret
mov
icebp
cmp
dec
add
notb
aaa
cmpsb
pop
jo
mov
inc
cmpsl
jnp
outsb
pop
ja
aas
inc
inc
dec
gs
lret
loop
push
addr16
xchg
mov
mov
andb
or
sub
jnp
jb
leave
test
or
rcrl
sbb
cmp
mov
pop
sub
mov
aas
mov
mov
ja
jmp
insb
cmp
nop
lods
out
lret
xchg
lds
je
cmp
adc
jb
dec
sub
jne
pop
or
mov
mov
out
imul
out
xchg
rcrl
pusha
xor
pop
dec
adc
mov
loopne
cmpb
push
add
xchg
push
sub
sub
test
lock
out
jno
les
inc
or
jl
lods
xlat
inc
push
loopne
mov
negl
adc
inc
mov
add
lea
adc
xchg
dec
div
stos
cld
fdivrs
in
in
test
push
out
in
inc
adc
out
push
das
popf
jmp
ds
mov
cmpsl
imul
dec
add
sarl
xchg
repnz
push
pop
mov
adc
add
mov
outsl
push
retw
iret
ficoms
imul
adc
iret
sti
push
add
push
hlt
int3
xorb
inc
dec
sub
or
push
sub
repz
test
leave
idivb
pop
add
mov
adc
idivl
xor
negb
cmp
adc
push
es
add
lods
cmpsl
dec
rclb
add
xor
aaa
outsb
mov
popf
int3
jb
sub
push
cld
sbb
repnz
pminsw
jno
or
xchg
push
or
mov
mov
and
cmpsl
subl
pop
in
loop
aaa
int
xchg
ljmp
jecxz
and
push
push
lods
insb
inc
fistl
xchg
fidivs
nop
int3
arpl
pop
cld
out
dec
cmpsb
out
mov
mov
pop
and
outsb
ffreep
lds
test
shll
cmpsl
add
daa
xor
lea
xchg
adc
fsub
movl
rorl
push
mov
rolb
int
stos
loop
fsubs
jmp
mov
fwait
cmp
add
sbb
aaa
and
bound
loope
and
adc
pushf
in
int
outsl
lods
xor
sbb
inc
sbb
dec
inc
fwait
lds
pop
xlat
mov
popa
cmc
leave
jnp
jmp
sub
int
lret
and
sub
lock
stos
sti
cld
arpl
add
or
sahf
dec
add
shrb
sbb
sti
cmpl
cltd
adc
mov
mov
inc
fwait
outsl
push
mov
movsl
hlt
inc
out
add
pop
mov
xorb
mov
and
daa
pop
add
xor
testl
adc
push
cli
lret
cmp
jl
mov
jno
outsb
insl
pop
ljmp
ja
xchg
mov
jle
ret
inc
sub
jg
in
mov
inc
ret
repz
jge
leave
xlat
ljmp
or
out
jno
or
mov
ss
inc
lret
enter
aaa
xorb
jbe
shlb
xor
into
pop
sub
int
movsl
pushf
stos
push
fcoms
adc
lods
imul
scas
mov
mov
sub
mov
add
rcll
jo
dec
push
cmpsl
or
lods
stos
testl
mov
es
nop
add
movsb
ficompl
inc
mov
scas
pop
test
int
cmc
sbb
xorb
aam
sub
mov
cli
mov
add
jg
lock
mov
test
or
adc
add
popf
mov
add
sub
jmp
xchg
mov
mov
and
pop
fcmovu
shll
cmp
mov
es
out
pop
arpl
ljmp
ret
mov
outsl
dec
jnp
outsl
mov
les
push
adcb
or
mov
pushf
xchg
inc
pop
sub
out
xchg
xchg
mov
aam
rcl
push
push
aad
sub
in
or
popf
adc
stos
jo
add
pop
dec
mov
pop
mov
mov
or
in
push
pop
mov
xor
clc
das
or
cmp
ss
lods
pop
inc
mov
push
and
ljmp
xor
mov
and
inc
popa
jae
mov
fwait
dec
xchg
add
add
fldl
jecxz
stos
fiaddl
mov
push
xor
mov
imul
adc
jns
loope
imul
cmp
pop
mov
aas
pop
jns
je
iret
xchg
lret
adc
orl
mov
inc
add
test
sbb
pop
pop
insb
inc
fnstenv
insb
daa
mov
jnp
or
push
imul
jp
repnz
sbb
lret
pop
push
mov
bound
test
testb
push
addr16
sub
add
jecxz
bound
jo
and
cmp
jecxz
lock
bswap
cmp
inc
lods
sbb
sti
sub
mov
or
stos
pop
out
pop
xchg
fildll
jmp
pop
insl
rcl
push
fwait
insl
lret
aam
cli
ret
add
into
cmp
jne
outsl
jmp
jl
jae
inc
mov
mov
sahf
movsl
mov
loopne
jge
aad
and
rolb
shlb
popf
jns
push
imul
mov
cmpsl
scas
cmpsl
mov
xlat
pop
loope
jae
dec
adc
mov
mov
outsl
add
or
sbb
adc
sub
mov
push
inc
push
xchg
das
adc
mov
sub
jle
ljmp
mov
jne
std
repz
push
fadd
cmp
push
repz
rolb
push
sub
pop
xchg
xchg
xchg
sbb
mov
lea
and
or
pop
xchg
sar
xchg
xor
mov
and
jg
jne
dec
aas
addr16
sbb
fnstsw
sti
or
ss
xchg
in
mov
stos
mov
data16
push
fs
fldl
out
stc
test
mov
xchg
and
out
cwtl
jno
inc
sub
cmp
fidivrl
clc
xchg
icebp
stc
pop
loope
int
into
sub
lds
mov
stos
cmp
cmp
repnz
add
test
iret
movsb
or
sbb
cltd
pop
pop
cmp
in
shlb
cld
in
pop
xor
cli
xchg
adc
sbb
jo
push
and
jl
xchg
rcrl
cltd
dec
out
mov
out
pop
pushf
aad
int
mov
lret
out
nop
insl
repz
in
mov
fcmovu
add
insb
idivb
lea
dec
mov
sub
sbb
lret
sub
push
mov
test
xchg
ficoml
cs
fs
adc
cmp
mov
or
mov
and
jle
pop
aad
pop
or
dec
mov
test
sub
nop
dec
adc
push
pop
push
push
sub
cwtl
jb
das
sbb
rcrb
or
fcoml
es
les
lahf
cli
cmp
sub
or
push
into
pop
dec
leave
in
cld
pop
rclb
pop
js
or
ljmp
jae
sarl
into
addb
jne
dec
aas
mov
push
cmpsb
dec
xchg
jo
fdivrp
fnstenv
xchg
mov
mov
insb
out
movsb
in
inc
adc
fadds
dec
test
je
lret
mov
add
pop
scas
inc
jl
jne
loopw
movl
mov
jbe
mov
inc
incb
mov
jecxz
aas
int3
aad
mov
popa
pop
sbb
iret
daa
jecxz
xlat
lret
int3
shlb
scas
jge
jae
add
testb
fbld
insb
add
mov
cmp
dec
insl
loope
push
mov
jcxz
cmpsb
inc
inc
sti
cld
fmull
mov
outsb
add
adc
mov
fisttpl
sub
mov
lea
addb
fld
xchg
lods
aam
push
iret
stos
loop
popf
into
popf
sbb
filds
stc
stos
or
lds
or
mov
push
cmc
cmc
aad
mov
mov
xlat
lret
lock
mov
test
ret
push
pop
data16
and
aas
fcomip
cmp
fists
je
xchg
lods
mov
fistps
call
lret
mov
roll
add
mov
scas
jb
ficoms
sarl
jl
dec
sub
mov
repnz
push
mov
popl
out
dec
mov
idivb
mov
adc
push
or
cmp
and
out
repnz
mov
push
in
in
ds
pop
les
mov
out
pushf
and
xor
xchg
mov
jp
clc
nop
repz
and
or
sub
ficomps
mov
dec
xchg
sti
loope
test
out
and
xchg
add
and
cwtl
mov
jg
outsb
adc
test
pop
xchg
call
jo
fwait
xchg
pop
xor
int
mov
stos
jmp
cmp
stos
int
pop
pop
push
mov
aaa
xchg
loopne
cwtl
andb
push
jae
shlb
mov
imul
push
scas
cmp
call
cmpsl
sub
rep
dec
aad
inc
push
iret
mov
mov
std
int3
outsb
shr
xchg
and
sarb
or
adc
push
sti
int
sbb
hlt
jne
mov
mov
jbe
cmp
clc
scas
int3
jae
push
lret
pop
jne
mov
mov
je
sbb
sub
pop
out
loope
ljmp
es
in
je
cmp
jl
lret
mov
push
add
mov
jmp
mov
lock
mov
pushf
sbb
aam
inc
in
shlb
or
jp
loope
jl
dec
adcl
aam
push
pushf
aam
sbb
cmp
fstl
mov
pop
imul
rolb
adc
mov
in
jg
or
mov
inc
lock
dec
fsubl
sbb
jecxz
mov
outsb
mov
push
fstl
out
xchg
mov
into
push
fidivl
mov
jmp
lds
jne
cmpsb
mov
gs
jb
mov
in
lret
xchg
sub
mov
push
adc
inc
add
adc
adc
fldenv
push
repz
xlat
jg
and
inc
movsl
and
loopne
pop
ds
cmp
adc
sbb
mov
push
adc
popf
jecxz
xor
xchg
inc
mov
xor
nop
addr16
aad
std
inc
and
fisubrs
lods
xchg
mov
lock
lods
cmp
add
sti
xor
cmp
outsb
mov
stos
push
cli
mov
adc
xor
jno
cmc
bound
adc
fnstcw
jne
jbe
cmp
test
or
dec
out
add
pushf
fcoml
add
stos
inc
jo
cmp
cmc
xchg
int
mov
data16
xchg
cltd
aam
xlat
ret
jno
lcall
arpl
adc
xchg
dec
pop
mov
pop
push
pop
adc
sbb
mov
jno
jnp
bound
mov
cli
push
add
lcall
sahf
push
mov
add
jae
adc
inc
push
je
xchg
cmpsb
mov
out
imul
movb
add
mov
push
je
xlat
shrb
addr16
jnp
jne
lods
nop
test
cmp
inc
or
jns
notb
mov
add
inc
ret
jg
stc
cmpsb
int3
addl
xlat
xor
shll
mov
cli
pop
sbb
pop
addl
addr16
ljmp
arpl
std
inc
ds
inc
ret
mov
leave
call
out
jns
jp
xor
loop
out
mov
cmpsl
xchg
sarl
jl
adc
add
hlt
insb
popf
mov
xchg
and
int3
out
into
mov
push
lret
sbb
xchg
lds
testl
xchg
jb
lret
mov
test
jp
fbld
aad
jl
or
and
daa
test
mov
arpl
aam
std
sbbl
call
mov
sub
jne
daa
js
pusha
push
pop
std
repz
inc
les
jns
push
xchg
inc
or
push
loope
dec
shl
xchg
or
jmp
shlb
adc
test
lahf
and
lods
lea
sub
aas
xchg
arpl
clc
dec
inc
cltd
and
lock
add
sbb
push
movsb
out
jb
or
cmp
ds
or
int3
outsl
mov
dec
dec
jmp
insl
mov
push
dec
pop
mov
or
and
inc
loopne
fstp
jns
loopne
cld
cmc
mov
insb
add
xchg
cli
daa
mov
mov
push
push
daa
int
add
and
mov
fs
push
or
jp
in
movsb
sub
adc
mov
fdiv
lds
push
adc
cmp
std
xlat
aad
jecxz
xor
or
xchg
lret
lret
shld
xchg
sti
push
cmpsb
cwtl
jmp
xchg
jo
cwtl
aas
jle
leave
repnz
je
push
mull
out
fstps
iret
scas
mov
sub
push
cmc
lock
pop
adc
xor
arpl
lret
shrd
into
scas
jg
jae
or
add
mov
sbb
pop
aad
inc
rcrl
or
dec
mov
lods
jno
pusha
and
subps
sarb
push
mov
lret
xchg
dec
mov
decb
mov
and
enter
xchg
mov
push
jns
mov
jb
pop
push
es
add
in
push
ror
cmp
stos
pop
cmp
pop
leave
cmp
push
cs
push
hlt
lahf
dec
jl
xor
aam
test
push
or
arpl
xlat
je
stc
out
arpl
jno
dec
mov
stc
out
mov
int
sub
dec
inc
mov
lods
mov
push
mov
mov
xor
je
into
adc
jle
lods
add
jnp
les
stos
inc
mov
jg
jmp
dec
ss
xor
mov
test
idivb
aam
push
rol
inc
and
mov
in
sub
pop
jl
push
mov
icebp
mov
ljmp
enter
or
add
in
and
lock
lock
repnz
int
or
mov
scas
cmpsl
popa
inc
les
mov
pop
jo
outsl
xchg
sbb
pop
in
orl
stos
add
cld
xchg
adc
imul
or
push
or
movsl
fsubr
out
push
sub
scas
shrl
xor
push
xchg
movsb
inc
sbb
xchg
or
mov
fistpl
stos
fisttps
loop
xor
cli
add
adc
fwait
mov
jg
shl
addl
pop
sbbl
nop
fadds
push
xchg
mov
or
cmp
adc
xchg
and
jno
mov
sub
cmp
jmp
jnp
sti
jnp
sub
xor
rorl
xchg
mov
xor
lds
jl
pop
in
vpmacssww
adc
stos
lret
out
jnp
rolb
pop
fcompl
pop
sub
shld
lret
roll
rorl
mov
popa
repz
sub
mov
dec
cmp
shrl
popf
sbb
mov
int3
enter
add
popf
adc
scas
mov
pop
in
mov
repnz
arpl
mov
and
mov
test
js
mov
insb
add
cmp
popf
sub
sbb
and
xor
arpl
mov
push
dec
shrb
arpl
push
test
push
push
rclb
aam
push
or
in
sbb
rcrb
mov
xchg
je
jbe
add
push
loope
insl
addr16
sbb
pop
outsb
stos
ja
dec
mov
push
mov
jp
sti
cs
mov
sub
inc
jge
paddsw
pop
imul
mov
add
mov
xor
repnz
push
ret
mov
mov
xchg
clc
pop
dec
nop
inc
jmp
ss
cltd
in
out
mov
out
daa
insl
pusha
inc
or
push
dec
or
shl
jne
gs
fistpl
xchg
sbb
out
push
push
scas
loope
lods
mov
and
pop
clc
add
das
pop
popa
mov
mov
call
sbb
jmp
fdivs
sbb
lahf
dec
les
push
dec
sub
incl
lahf
aam
ret
push
pop
cli
pop
or
pop
cmpsl
data16
mov
lret
inc
shll
and
xchg
in
ret
mov
aad
sbb
test
pop
test
stc
xor
sub
cmp
out
cmp
mov
xor
movsb
xchg
cmp
daa
ljmp
ja
pop
std
jb
adc
in
xchg
lret
into
xor
add
cmpsb
cmc
cmp
or
add
dec
xor
lods
icebp
aas
inc
cmpsl
mov
or
movsl
mulb
mov
and
xchg
pusha
sub
ss
in
pop
mov
lods
aad
fdivrs
jge
mov
adc
sar
test
and
add
imul
shrb
adc
pop
dec
dec
pop
sbb
cmpsl
bound
and
inc
mov
data16
stos
sub
enter
js
jb
int3
mov
and
int3
and
cmp
fsts
outsl
lea
push
dec
insb
in
and
movsb
ficompl
sbb
adc
xor
cwtl
or
push
jno
leave
mov
sbb
pop
fs
lahf
xchg
or
test
ds
lods
mov
mov
add
bound
nop
cmp
mov
testl
dec
mov
das
es
rolb
add
loope
out
mov
sub
inc
pop
aad
sub
push
inc
add
hlt
mov
dec
push
mov
ret
andb
inc
xlat
lds
add
push
repz
mov
mov
dec
cwtl
pop
mov
push
mov
xor
or
dec
call
sub
inc
or
mov
xor
mov
test
in
ds
push
and
adc
or
push
imul
cmp
scas
dec
test
mov
pop
stos
add
mov
call
cld
js
add
push
dec
cmc
orl
lods
fstps
adc
repz
ret
sti
mov
arpl
pop
adc
popf
call
int3
mov
sbb
aad
shl
aas
in
rclb
sarl
fwait
mov
jmp
jbe
mov
push
in
aaa
cmpsl
fsubl
mov
nop
into
jb
mov
mov
aas
jo
aad
test
jg
test
stos
mov
leave
cmpsl
aas
clc
cs
fs
test
sub
push
cmp
or
cmpsl
pop
test
fiaddl
lock
pop
stos
out
ljmp
aam
lret
fsubrs
inc
insl
mov
xor
inc
subl
cld
and
out
jg
inc
imul
lcall
push
loop
mov
dec
in
push
insb
jb
xor
inc
repz
xor
rolb
flds
or
jae
mov
test
or
out
xchg
inc
adc
orl
pop
sub
inc
cltd
xchg
test
adc
repnz
jo
xchg
in
shrb
adc
xor
and
jecxz
fldz
jl
mov
mov
mov
addb
lret
mov
mov
rcr
sbb
mov
inc
push
imul
adcl
pop
movsb
mov
pop
xor
pop
lea
xchg
pushf
pop
out
mov
pop
gs
pop
sahf
sub
push
and
ljmp
inc
mov
jp
mov
lcall
rcrl
rcr
push
cmp
andl
add
addr16
pop
pop
push
sarl
ds
pusha
mov
lcall
fsub
in
jo
aam
push
je
testl
repz
fs
in
adc
push
lods
mov
fs
and
cmpsl
pusha
movsb
cmpsl
jo
xchg
inc
jo
int
adc
iret
cwtl
int3
das
mov
in
cld
inc
cmp
test
adc
dec
jno
out
loop
adc
add
xchg
mov
mov
pop
or
cmpsl
dec
lret
in
and
xchg
xchg
insb
out
lret
cltd
fsubrp
clc
pop
pop
cmp
filds
mov
rcrb
lods
sbb
popa
add
xchg
stc
jnp
xchg
outsl
push
or
testb
xchg
lcall
gs
jns
sahf
stc
pop
fisttpl
jb
mov
mov
fwait
add
cmp
movsb
or
cmp
arpl
fidivl
mov
lret
inc
fisttpl
push
or
push
es
push
dec
out
jge
add
adc
cmpsl
std
push
imul
popf
xchg
ret
fcom
xorb
imul
dec
mov
jl
in
lret
xchg
fcomp
jg
cltd
test
outsl
in
das
add
out
fadds
pop
out
in
lods
add
jae
daa
push
cmp
and
push
shrl
xchg
inc
mov
pop
xchg
push
test
dec
mov
xchg
mov
xchg
bound
ljmp
jg
imul
popf
push
pop
fs
shll
aam
xchg
fwait
or
jle
and
mov
cmp
ret
out
push
sub
mov
cmp
cmc
outsb
mov
ljmp
das
push
mov
or
pop
test
int3
inc
mov
cmp
les
cs
cmc
insb
leave
push
jns
in
xchg
jecxz
inc
xchg
loopne
mov
int3
lods
ljmp
stc
mov
xor
lcall
and
int3
rol
aad
sti
cmp
add
loope
mov
adc
out
mov
mov
push
int3
and
push
adc
popf
movsl
sub
dec
cltd
mov
lret
add
mov
or
imul
fwait
add
ljmp
sub
mov
mov
dec
sahf
shll
insl
insl
cmp
inc
shl
sub
inc
cmp
lods
adc
or
loopne
sbb
in
jg
xor
xadd
in
add
cmpsb
adcl
mov
ss
adc
mov
adc
mov
testb
push
mov
fs
cmp
dec
repz
mov
jae
jb
in
dec
xor
out
or
jl
addr16
clc
testb
and
sbb
and
pop
cltd
rcrb
dec
jg
xor
arpl
sar
add
pop
jge
pop
rcll
icebp
mov
inc
pop
fstl
js
push
scas
out
mov
mov
cld
jne
fldl
cltd
dec
les
pop
jno
mov
jl
or
xchg
mov
xchg
mov
dec
sub
iret
and
hlt
push
dec
mov
xchg
nopl
int3
mov
stos
dec
out
cmp
testb
sbb
rorb
lds
imul
and
sbb
stos
jne
adc
add
cld
jge
loopne
enter
sbb
adc
add
jno
xlat
mov
inc
pop
push
lock
test
jnp
mov
stc
sub
bound
lret
fbld
scas
push
and
xchg
sbb
adc
stos
pop
fsubl
and
std
std
jnp
inc
fisubrl
fld
lods
addr16
jmp
pop
jle
test
mov
or
gs
mov
xchg
mov
mov
sub
xchg
inc
and
pop
jecxz
lret
pop
rol
frstor
push
jnp
das
dec
cwtl
cmp
test
adc
xchg
jno
or
xchg
and
push
jmp
enter
or
jge
or
dec
outsl
jno
cs
adc
fstpt
inc
cmp
mov
sbb
cmp
aaa
mov
fldcw
lods
pusha
xchg
cmp
xchg
in
test
mov
lcall
mov
mov
mov
sub
jne
xchg
pop
rorl
mov
data16
lock
push
and
iret
imul
mov
imul
test
or
lea
lcall
outsl
repnz
pop
outsb
jno
in
mov
testl
push
aas
and
mov
test
sub
push
or
lock
pop
mov
neg
imul
inc
mov
mov
loop
mov
in
add
push
xchg
xor
loop
mov
sahf
mov
fldt
sbb
popf
and
dec
push
mov
das
mov
mov
ds
test
or
aad
lahf
dec
js
pop
rcl
adcb
push
sub
push
lret
test
mov
push
adcl
lahf
sarl
sbb
cmc
mov
dec
clc
push
ffreep
mov
sbb
push
and
fstl
adc
mov
mov
sahf
cmpsl
mov
mov
xchg
and
outsl
jg
orb
dec
popa
add
lea
push
test
dec
cmp
aaa
pop
mov
mov
xchg
mov
sbb
xor
fnstcw
je
ds
ficoml
cmp
mov
adc
mov
aas
fnstsw
sbb
stos
clc
xor
jmp
test
in
sub
push
iret
jbe
stos
jb
and
fnstenv
jnp
hlt
sub
incl
dec
icebp
test
sbb
cmp
int
addr16
xchg
push
loop
push
sub
stc
inc
stc
or
mov
in
jno
mov
idiv
imul
test
cmp
lea
imul
jg
mov
incb
xor
loop
fnstenv
test
or
popa
dec
rol
push
cli
call
jg
orb
pop
dec
mov
pop
in
les
pop
sub
outsl
pop
mov
fstpl
mov
jmp
in
push
inc
in
mov
xor
lds
mov
jne
push
mov
pop
sub
rorb
xor
xchg
insl
jl
shlb
mov
xor
mov
push
ss
mov
daa
scas
mov
jl
pop
jns
jns
pushl
push
add
addr16
cld
aad
dec
out
jb
xor
fimull
jmp
pop
or
mov
push
push
adc
jb
push
sti
je
dec
rolb
divl
ret
aas
lods
pop
xor
lahf
leave
sti
orb
mov
inc
aaa
mov
xchg
dec
pop
mov
mov
xchg
aam
in
pop
mov
and
adc
xor
in
in
push
in
xor
leave
ss
adc
mov
dec
pop
int
adc
subl
lds
sub
or
add
and
push
std
icebp
iret
into
pushf
addr16
repnz
mov
lods
jle
imul
jmp
mov
cmp
lods
push
push
cltd
stos
jecxz
sarl
jmp
aam
dec
push
xor
sub
insl
int
sbb
fbstp
mov
js
lret
jg
rcl
stos
cmp
adc
fistps
dec
loopne
sahf
andl
js
jne
arpl
icebp
sub
stos
and
in
xor
mov
pop
dec
mov
push
and
add
testb
int3
les
inc
fcmovne
lock
std
xchg
loop
sub
int
and
push
adc
adc
jle
jo
push
pushf
sbb
stc
sbb
lcall
out
jne
dec
jno
cmp
movaps
imul
int3
sub
push
pop
inc
push
bound
icebp
hlt
jo
scas
inc
xchg
mov
xchg
ret
pop
mov
neg
aam
mov
inc
push
hlt
adc
dec
or
or
mov
mov
cmp
popf
pop
xchg
mov
outsl
push
and
out
sar
cmp
push
xor
loope
xchg
cwtl
aad
jge
add
rol
loope
sbb
in
mov
das
into
pop
push
cmp
outsl
mov
movsl
stc
mov
cwtl
cmpsw
insb
jns
imul
xor
repz
in
in
push
loopne
cmp
das
push
mov
pusha
mulb
mov
aas
leave
mov
out
mov
jne
sbb
mov
call
fcmove
mov
sub
push
mov
pop
addr16
cltd
lcall
jno
andl
in
scas
push
sub
int3
and
cld
enter
fisubs
data16
fmulp
push
ja
mov
push
inc
mov
dec
push
add
data16
sub
loope
pop
fimull
xchg
cltd
stos
mov
nop
sub
sarb
data16
sarl
inc
inc
or
ljmp
cmp
jne
in
jnp
push
push
sbb
mov
xor
fwait
hlt
inc
cmp
and
mov
dec
shlb
and
fcmovnbe
fs
aam
sti
rcr
mov
pop
xchg
mov
inc
sub
lcall
mov
scas
push
pusha
cwtl
add
adc
fnstenv
mov
inc
add
mull
lahf
adc
out
sbb
jae
dec
leave
jno
in
mov
aaa
adc
jae
xchg
mov
outsl
mov
sub
fists
sub
mov
xchg
mov
bound
or
mov
jnp
xor
sub
xchg
das
xchg
mov
fisttps
inc
enter
int3
adc
cmpsl
arpl
sub
aaa
sbbb
xor
pop
or
mov
cmp
test
mov
push
fcoms
int
mov
mov
mov
pop
rorl
sbb
and
aam
push
push
inc
outsl
adc
inc
sub
or
pop
push
into
ret
das
scas
aad
and
jmp
std
mov
test
add
shlb
in
movsl
in
jne
ljmp
lods
ret
pop
jne
bound
orl
lret
inc
into
jle
jb
stos
cmpsb
cltd
push
out
loope
add
inc
jmp
sbb
adc
dec
int
sub
xchg
mov
mov
mov
mov
dec
ljmp
ficompl
testl
test
xchg
mov
jb
mov
pop
ja
jl
xchg
push
push
mov
and
jb
dec
test
div
shlb
sbb
imul
or
ss
hlt
fidivrl
mov
ljmp
xor
and
push
or
movsl
pop
ljmp
pop
aaa
jecxz
xor
fsts
aas
pop
mov
outsl
push
mov
cld
cmp
outsb
jb
shl
mov
xlat
inc
in
divps
push
in
xor
sbb
add
jecxz
inc
fidivrl
jne
in
ss
ds
stc
movsb
out
mov
inc
jmp
or
cmp
scas
jl
cmp
jmp
sub
call
dec
leave
scas
scas
into
cmc
xor
mov
stos
mov
pop
aaa
add
cmpsb
adc
cmp
int
enter
lahf
into
out
jg
test
inc
ds
pop
mov
aaa
sub
test
adc
cltd
jmp
or
pop
es
mov
mov
icebp
lods
jl
lcall
jo
jb
inc
pop
ds
pop
sub
ret
stos
icebp
or
es
insl
jmp
sub
stos
ljmp
pop
out
insl
cs
adc
cmpsl
push
xor
lcall
xchg
pop
mov
in
pusha
insb
divl
pop
xchg
jne
dec
push
xchg
in
mov
jo
jp
mov
bound
js
dec
sbb
pusha
pusha
jae
pop
out
fs
push
movsb
xchg
iret
and
xchg
in
mov
call
pop
sti
mov
mov
pop
add
and
dec
dec
mov
sub
jmp
mov
aas
aam
sbb
stos
adc
mov
cli
mov
cmp
aaa
fs
rcl
pop
jle
shl
inc
insb
repnz
sahf
imul
adc
out
aad
or
jmp
cmpsb
sub
lds
ret
xchg
jne
out
xor
enter
pop
aad
shlb
inc
adc
inc
jne
cmpsb
stos
dec
or
outsb
addr16
test
orl
jne
or
pop
jae
gs
mov
jnp
jnp
xor
pop
xchg
mov
sbb
incb
sub
jne
out
mov
dec
aas
fcompl
jbe
push
sbbb
push
add
xor
orl
mov
mov
push
addl
sbb
rcr
nop
pop
add
add
rorl
dec
in
or
jae
lods
add
push
xor
sub
pop
shlb
fisubl
jo
mov
add
cwtl
es
cli
sbb
in
add
rclb
mov
sbb
cmp
or
sbb
fisubrl
jne
pop
nop
sar
or
xor
addr16
mov
inc
mov
sbb
dec
and
pop
ja
mov
imul
popa
fildll
xchg
mov
push
sbb
pop
nop
int
loop
dec
rcrl
fnsave
push
pop
jno
stos
fcompl
xor
data16
divb
jp
bound
icebp
push
ja
test
sahf
cmp
hlt
jb
shlb
push
imul
adc
popa
mov
std
roll
cwtl
xor
cmp
faddl
xor
insl
mov
pushf
jle
mov
xorl
mov
scas
fistpl
or
mov
ss
push
cmp
or
inc
push
jg
sub
cwtl
adc
add
mov
mov
inc
inc
xlat
ss
jecxz
pop
push
push
mov
test
out
into
adc
cwtl
push
outsb
jp
pusha
addl
aas
in
adc
pop
dec
mov
aad
into
pop
xchg
or
loop
mov
scas
push
and
lret
xor
insl
push
fisttps
in
fadds
popf
jae
and
fcoms
pop
push
popa
or
test
push
pop
movsl
mov
repz
and
scas
sub
or
cmp
nop
adc
fmull
and
repnz
dec
xchg
popf
mov
adc
in
xchg
test
xor
jecxz
inc
movsb
and
hlt
movq
out
out
imul
daa
aas
fdivrs
out
mov
and
je
mov
lock
sbb
jnp
push
add
pop
aad
mov
sahf
mov
idivl
adc
adc
xchg
repz
shrb
xchg
jmp
inc
inc
xchg
out
cmc
fimuls
lock
pop
fs
mov
inc
lahf
pop
cld
push
mov
xorb
inc
xor
mov
mov
in
mov
pop
lcall
insb
repnz
cmp
push
push
stos
cmpsl
loop
movsb
mov
aaa
out
push
lods
jb
cli
pcmpeqd
adc
aaa
adc
insb
pop
add
mov
rolb
xchg
mov
lods
js
arpl
mov
hlt
dec
adc
adc
addr16
testl
xchg
stc
dec
cmp
cmp
sbb
jae
jg
jae
mov
sub
repnz
lret
addr16
aas
out
into
push
dec
xor
sbb
mov
jle
flds
adc
stc
sbb
add
adc
dec
lock
hlt
jo
cmp
push
les
pop
out
add
or
or
mov
pop
xor
ret
mov
inc
imul
xchg
inc
in
pop
dec
fdivrs
push
cmpsl
pusha
popf
scas
loopne
sbb
or
cmpsl
xlat
mov
sbb
mov
ret
scas
aad
movsl
rep
ja
addl
lods
cmp
adc
mov
fcomi
aaa
xor
inc
insb
test
xchg
loope
iret
push
sbb
stc
out
push
push
pop
pop
std
push
ud0
faddl
mov
mov
movsl
popa
ds
mov
pop
test
lea
mov
stos
jmp
adc
push
jge
inc
lret
xorb
mov
iret
mov
pop
scas
cld
inc
addr16
in
sti
testl
xchg
or
das
or
inc
loopne
jo
fs
and
jne
xchg
inc
adc
sub
test
dec
stos
pop
push
mov
das
in
jp
fisttpl
mov
or
stos
imul
mov
mov
punpcklbw
dec
mov
test
push
xor
repz
jl
mov
daa
in
andb
adc
hlt
add
loope
sbb
fmuls
movsl
arpl
and
lods
mov
lods
pop
fists
pop
mov
test
sahf
mov
mov
xchg
and
cmpl
jo
mov
das
insl
ss
shl
sub
pop
push
in
mov
or
int3
out
test
inc
xor
fsubl
cmp
and
jbe
ljmp
imul
dec
pop
mov
sbb
mov
pop
and
adc
push
in
addr16
popf
dec
pop
or
or
jne
push
pop
out
cmp
mov
cmp
lcall
adc
push
inc
xor
imul
cwtl
and
lock
xchg
mov
enter
mov
and
js
mov
lret
in
inc
jle
push
add
addl
xchg
add
inc
jge
idivl
sub
int3
push
insl
mov
inc
dec
int3
adc
sub
adc
push
or
in
arpl
ret
mov
mov
xor
ffreep
fsubr
insb
pop
mov
fcoms
jecxz
dec
popf
pop
inc
push
and
cwtl
mov
mov
sahf
inc
ficoms
lds
xchg
repnz
jnp
sbb
add
cmpsl
jl
mov
cltd
xor
mov
test
and
mov
test
cmp
enter
jg
enter
jo
add
clc
or
jb
mov
shll
out
pop
aas
lret
mov
add
out
push
mov
mov
mov
enter
mov
in
lahf
cs
or
ret
jno
stc
jnp
jo
dec
mov
pop
lock
jae
jnp
mov
adc
pop
loopne
data16
sbb
mov
inc
push
push
stos
xchg
inc
pusha
xchg
dec
xchg
pop
fisttps
sub
mov
jnp
cmp
ss
inc
dec
xor
shl
subl
dec
pop
pop
hlt
jbe
les
dec
push
pop
mov
ss
clc
jb
jb
sbb
and
hlt
test
jg
cwtl
pop
clc
aas
jb
test
pop
outsl
cmpsl
and
lcall
xor
and
add
and
adc
sbb
jno
outsb
dec
jmp
sub
daa
or
scas
jmp
adc
movsl
enter
pusha
mov
mov
cmpsb
jo
sub
data16
dec
movsl
fcoml
push
xlat
bndstx
sbb
jg
and
lea
add
scas
pop
in
mov
data16
add
dec
cmp
repz
stos
in
popf
xlat
mov
fdivp
std
imul
or
push
dec
mov
push
ret
jns
mov
pop
pop
xor
addr16
in
mov
test
xor
nop
and
xchg
je
cld
int
adc
test
jmp
ret
mov
and
mov
pusha
xor
inc
mov
xchg
pop
or
add
mov
dec
pop
push
mov
cltd
dec
inc
jmp
test
cmp
xchg
test
mov
and
clc
cld
xchg
and
fstpt
shlb
mov
mov
test
shll
cld
pusha
pusha
jle
mov
addr16
cmpsb
fiadds
test
popa
xor
add
cmp
lcall
in
jnp
mov
add
jae
lahf
and
push
dec
movsb
xor
and
cld
in
jp
push
push
gs
mov
or
mov
add
mov
pusha
movsl
mov
pop
sub
sbb
dec
aaa
add
movsb
xchg
add
sub
std
pushf
pop
and
cmc
test
mov
enter
xchg
inc
jb
fistpll
adc
ret
stos
outsl
jmp
aad
jg
inc
cmp
stos
xchg
pop
mov
dec
hlt
call
shrb
mov
cld
pushf
adc
ljmp
pop
inc
outsl
popa
add
pusha
inc
mov
jae
sub
leave
sarl
cs
icebp
adc
add
orb
and
cmp
or
jne
in
in
cmp
mov
lret
lcall
mov
jp
xchg
popl
mov
sbb
fnstenv
in
xor
es
mov
cmp
mov
daa
ret
fcomi
bound
ret
mov
sar
xor
push
fistpll
sbb
mov
pop
out
pop
inc
jl
push
repnz
test
outsl
or
in
sbb
or
iret
push
sub
xchg
js
and
int3
je
mov
imul
pavgw
jecxz
rorb
mov
rorl
jecxz
dec
cmp
rcrb
dec
outsl
lcall
js
nop
insb
cmp
sahf
clc
push
mov
xor
adcl
movaps
xor
pushf
popa
in
push
sahf
test
jne
das
call
stos
jmp
mov
xor
pop
bound
xchg
sub
lret
add
out
dec
sbb
push
insl
test
cmp
rclb
gs
xor
mov
aaa
jl
mov
xor
in
dec
sub
mov
out
sub
cli
icebp
jecxz
sbb
scas
xchg
in
loopne
ret
inc
sbb
dec
jbe
push
jae
ja
mov
das
sahf
loop
or
sbb
or
cltd
in
dec
mov
fnstenv
pop
sbb
adcb
jo
fists
aad
ljmp
loopne
imul
enter
adc
xor
cmp
lcall
mov
aaa
insl
dec
cmp
sbb
cmpsl
mov
xchg
je
mov
cmp
inc
enter
icebp
or
rorb
sarb
push
inc
repz
pushf
lods
sub
fnstenv
xor
ljmp
repnz
scas
mov
push
push
inc
sahf
jecxz
push
call
test
lock
xor
sbb
insb
inc
mov
stos
push
cmp
mov
and
jge
pop
inc
xchg
dec
add
dec
adc
adc
and
bound
mov
jno
mov
dec
push
push
cmpsl
fadd
icebp
ret
push
inc
sbb
test
fnstsw
sbb
mov
pop
push
inc
int
nop
jecxz
nop
xor
rcr
pop
out
lds
xchg
test
aaa
jae
enter
rclb
dec
inc
cmp
ss
mov
cwtl
mov
aad
xchg
pushf
sbb
mov
push
lcallw
sub
popf
or
cmp
dec
jne
aad
jns
pop
cmc
incl
push
or
into
inc
jno
rclb
loope
popf
arpl
mov
adc
rorb
dec
inc
xor
clc
std
lock
xor
roll
es
aaa
mov
push
xor
vmread
or
daa
inc
cli
add
adc
cmp
and
add
pop
jmp
mov
or
adc
mov
out
push
cmp
aam
mov
mov
imul
jns
cmc
imul
xor
cmpsl
subb
xchg
cmc
lcall
loope
dec
sub
jl
in
mov
push
xchg
sub
movsl
roll
push
cmc
ds
mov
das
movsl
shll
daa
data16
repz
mov
imul
push
adc
hlt
mov
dec
mov
add
mov
ror
sahf
adc
aad
daa
jecxz
xchg
pop
cld
push
cmp
xor
notb
mov
fwait
adc
movsb
imul
lds
dec
mov
mov
enter
aad
rorl
jge
fmuls
sbb
and
adcl
push
inc
adc
adc
sbb
mov
popf
imul
and
xor
push
or
and
xchg
inc
outsl
xchg
in
outsb
out
test
or
iret
pusha
test
xchg
mov
fmuls
lods
cwtl
mov
and
mov
out
jne
gs
popa
adc
imul
cmp
or
push
add
push
icebp
mov
mov
imul
xor
push
aam
lods
rorl
lahf
in
or
hlt
arpl
lock
pop
fcmovnu
pop
add
push
inc
xorl
mov
mov
jno
flds
addr16
xor
and
adc
call
shl
mov
xchg
mov
mov
rcll
fists
out
pop
and
mov
arpl
hlt
mov
sahf
xchg
popl
jb
test
loopne
adc
fcoml
scas
cmp
icebp
jl
jg
sub
push
divl
dec
gs
sbb
mov
lret
jecxz
mov
aaa
inc
divb
pop
clc
pop
adc
mov
ret
push
lea
or
push
adc
das
sub
stc
sbbb
ficompl
xchg
and
in
inc
aas
pop
inc
add
mov
mov
dec
jno
nop
and
mov
loop
out
mov
inc
out
aas
add
mov
push
jl
cs
add
shl
or
popf
xchg
push
cmpl
lods
icebp
ret
mov
cmpsl
mov
dec
mov
mov
filds
addb
imul
adc
lock
loopne
std
fildl
lahf
xchg
leave
lods
lret
nop
mov
cli
subb
test
or
dec
mov
xor
movsl
popa
lods
sbb
lock
pop
lods
les
and
fs
mov
pop
daa
sbb
in
outsb
dec
sbb
cmc
adc
cmpsb
add
pop
push
cmpsl
imul
push
mov
cmp
cld
pop
imulb
jno
loope
in
pop
ljmp
push
sbb
push
sbb
xchg
sub
cmpsb
inc
loope
fistpll
sub
sub
lahf
cmpsl
push
sub
icebp
call
bound
imul
push
rcrl
inc
jae
scas
hlt
aaa
mov
aaa
push
pop
mov
push
ret
jl
push
cld
pop
test
dec
out
jnp
aas
mov
jno
ja
fadds
test
cld
pop
in
cmpsl
aad
mov
cmp
and
jle
mov
shrl
jmp
xchg
insb
stos
mov
mov
mov
jl
push
jnp
push
xchg
nop
or
push
jbe
jo
mov
push
mov
xor
xchg
dec
imul
mov
adc
call
fldl
ds
cmp
mov
mov
dec
adc
adc
lods
rclb
mov
dec
in
jne
outsl
mov
xor
ja
ljmp
jbe
in
xchg
push
call
orl
arpl
inc
cmpsb
in
or
mov
je
mov
movsl
outsl
jnp
loope
testl
xchg
sbb
sahf
aam
ljmp
mov
pop
add
ret
xor
inc
dec
mov
push
popa
rorl
in
cmp
push
insl
scas
adc
mov
add
jl
sbb
in
mov
sub
incb
stc
adc
outsl
das
mov
orl
ret
xor
dec
mov
mov
mov
mov
and
xor
ret
cmpsb
sub
lret
mov
jl
xor
out
adc
mov
pop
or
fistps
mov
icebp
inc
repnz
jnp
out
lods
mov
and
and
push
mov
out
fisubrs
mov
outsl
ljmp
cmpsb
mov
in
push
push
and
test
jb
xchg
jne
cli
sub
mov
int
nop
push
jle
mov
mov
bound
ljmp
mov
mov
imul
iret
ficompl
in
mov
add
test
sub
fcoml
inc
and
ret
sti
pop
in
xchg
add
aam
pcmpeqw
xchg
les
mov
jbe
fbstp
mov
out
mov
sarb
sub
shll
push
aaa
push
sbb
mov
mov
and
lods
mov
daa
leave
mov
mov
mov
xchg
pushf
out
mov
repz
rcrl
shrb
shll
mov
mov
cmp
out
lahf
pop
and
pop
push
ljmp
mov
or
iret
cmp
imul
lods
push
shrb
jmp
repz
jne
pop
fisubs
add
lds
jecxz
cmpsl
xor
mov
jg
pop
xor
xchg
nop
sub
cmp
jae
add
repz
pop
jnp
or
inc
repz
mov
adc
mov
inc
or
mov
push
jns
mov
push
jmp
ljmp
sub
push
mov
dec
fldl
shrb
int
adc
add
or
push
and
pushl
mov
push
jo
mov
add
inc
cmp
add
cmp
push
and
cwtl
imul
mov
test
push
jmp
jno
jnp
mov
xor
data16
sbb
adc
mov
mov
hlt
scas
loop
test
cmc
cmp
leave
je
mov
add
pop
pop
aaa
mov
and
outsl
sbb
je
aas
icebp
sub
int
lret
stos
jbe
mov
pop
and
sbb
jne
arpl
das
xchg
xchg
mov
mov
jbe
cmc
popa
push
xor
dec
xchg
mov
ret
pop
in
rolb
push
sub
pop
inc
stos
fistpll
dec
pop
stc
jae
inc
and
and
test
les
loopne
xchg
inc
add
out
pop
mov
add
addr16
push
cld
es
aaa
inc
jecxz
mov
outsb
push
into
xor
fisttpl
xchg
into
std
lock
pusha
jns
ret
pop
hlt
out
mov
scas
scas
push
xor
les
jno
les
aad
adc
push
fstpt
or
imul
lea
mov
or
jno
dec
into
mov
jp
add
xchg
inc
xlat
xor
bound
or
movsb
mov
jg
outsb
lods
imul
loope
jne
fsubrs
daa
shrl
scas
mov
xchg
jecxz
push
int
scas
dec
pop
sub
and
xchg
xchg
push
mov
sarb
xchg
inc
pop
mov
cmp
sbb
pop
andb
out
jae
sub
push
jb
mov
adc
outsb
sti
mov
push
cmp
pop
sarb
xorb
adcb
cli
fisttpl
and
jnp
dec
xchg
pop
jl
lds
lret
pop
adc
lret
ja
ds
mov
push
ss
lcall
inc
int
mov
fisttps
push
push
or
xor
nop
jns
push
shlb
rsm
xchg
test
loope
je
push
idivb
jecxz
iret
inc
out
xchg
lea
lea
push
ljmp
into
or
addl
scas
mulb
out
les
add
je
in
sub
sbb
mov
cs
fcompp
fcoms
mov
and
push
cmp
outsl
mov
xor
pop
or
dec
jge
sbb
dec
sbb
push
cmp
rolb
mov
inc
icebp
cmpsb
dec
imul
shrb
add
push
mov
or
xchg
ds
cltd
push
push
call
out
mov
jp
push
loope
cmp
lods
rcrb
pop
adc
mov
mov
mov
add
jbe
in
jnp
push
mov
adc
pop
out
xor
add
push
inc
test
xchg
movsl
jnp
sbb
movsb
adc
cmpsb
xchg
push
inc
lcall
adc
bound
and
sub
inc
ss
xor
or
jne
xor
jl
xchg
aad
sub
xchg
sub
in
sbb
or
ds
cmc
mov
test
xor
xchg
mov
lods
movsl
dec
sbbb
mov
push
jge
fcoms
cmpsl
add
xchg
mov
fsts
idivl
lods
dec
mov
pop
xchg
jp
sahf
cs
test
adc
lahf
out
loopne
jp
jo
in
or
outsb
test
aad
fsubl
mov
sbb
push
xchg
mov
enter
or
nop
inc
cmpsl
push
in
adc
add
imul
mov
in
add
or
sti
adc
dec
negl
adc
cmp
mov
lcall
xchg
or
pop
movsb
xchg
cmp
pop
popf
lock
lcall
sahf
jge
and
adc
sbb
cmp
in
jnp
imul
xor
cs
or
test
jnp
or
aad
int
lock
icebp
ss
imul
rolb
mov
out
cmpsl
shlb
aam
test
xchg
dec
test
and
gs
insb
xor
rorb
push
insl
mov
orb
sbb
xchg
mov
aas
pop
es
mov
jns
mov
push
stos
clc
add
sub
data16
rcl
rolb
hlt
loopne
lcall
sub
push
ret
inc
outsl
sub
in
cmpsb
movsl
jmp
pop
jne
cmp
mov
lret
jg
push
mov
add
movsb
repnz
or
test
jns
scas
repnz
add
and
fstps
xchg
xchg
fcmovb
pushf
mov
jp
pop
call
stos
std
mov
push
cmp
and
push
movsb
imul
shl
jmp
pop
jg
loop
lods
push
arpl
pop
push
cwtl
mov
adc
popf
xchg
add
mull
outsb
cmp
push
aaa
nop
scas
jns
sbb
mov
push
xchg
cli
andl
repnz
push
mov
xchg
push
call
nop
mov
mov
clc
loop
mov
pop
jle
inc
popf
jecxz
lahf
adc
or
cmp
mov
cmp
cli
mov
test
add
repz
jmp
jno
or
inc
out
pushl
xchg
mov
sbb
or
inc
adc
xor
ds
cmp
frndint
xor
and
dec
jbe
inc
cwtl
cmp
add
loope
movsb
jge
xchg
jnp
mov
jmp
mov
push
xor
sbb
lea
jg
pusha
mov
movsl
mov
dec
in
jb
iret
or
sahf
insb
test
jne
movsb
nop
aas
and
sub
mov
xchg
cld
push
lahf
dec
das
xor
mov
push
or
aas
shll
hlt
mov
ret
mov
mov
jno
ror
out
mov
jmp
push
mov
in
cmc
aaa
mov
xor
mov
pop
mov
fildll
in
fstpl
insb
and
rorb
xchg
test
mov
dec
leave
pop
jle
orl
push
jb
ret
repnz
inc
pop
pop
es
sahf
mov
xlat
in
icebp
push
sub
cmp
data16
fxch
fucomip
icebp
xor
ret
add
xchg
sbb
clc
jp
sahf
lods
inc
inc
dec
add
sbb
inc
jle
mov
inc
pusha
push
add
fcmovu
dec
out
mov
leave
pop
dec
jns
fwait
adc
mov
add
test
pop
popf
push
adc
mov
add
gs
mov
add
incl
rol
clc
mov
sbb
nop
es
popl
daa
jmp
cmpsb
push
xchg
add
and
bound
mov
mov
jne
mov
mov
mov
pusha
and
adc
imul
test
ret
and
xchg
and
xchg
call
cmpsl
sbb
mov
int3
xor
dec
dec
call
mov
or
xchg
je
fstpt
mov
xorb
or
push
test
enter
push
mov
leave
out
rclb
or
fadds
lahf
mov
inc
pop
cmp
or
add
xchg
nop
sbb
cmp
adc
xlat
cli
lods
shrb
inc
and
jae
out
add
xor
xchg
add
mov
repz
jecxz
or
scas
lret
mov
sti
daa
add
into
aas
leave
pop
imul
in
sub
dec
cmpsl
xor
push
pop
les
add
sub
and
daa
popl
in
dec
shll
mov
cld
add
fdivrs
sbbl
movsl
pop
sbb
push
int3
xorb
aam
arpl
pusha
or
ficompl
cmp
loop
xchg
rclb
xor
stos
jmp
jbe
inc
push
xchg
adc
inc
cwtl
in
push
pusha
clc
xor
outsl
mov
int3
adcb
icebp
sbb
lds
out
sub
loop
push
stc
push
xchg
push
xor
push
adc
and
jmp
jl
out
xchg
ret
je
out
outsl
loopne
cmc
in
stos
ljmp
fwait
xor
ds
adc
scas
sbb
pop
hlt
ds
nop
jge
fimuls
bound
sub
daa
repnz
call
push
inc
outsl
inc
jle
decl
nop
xor
aas
lret
mov
mov
imul
pusha
test
xchg
mov
daa
out
inc
or
mov
shll
mov
sub
and
shl
pop
ljmp
fcompl
pop
shlb
xchg
lret
push
inc
dec
lds
mov
dec
mov
mov
jbe
dec
sahf
mov
mov
mov
add
in
mov
xchg
inc
mov
addr16
shlb
sub
addb
test
push
jmp
aaa
daa
pop
or
pop
daa
pop
scas
pop
inc
adc
cmp
popf
sub
movsb
sub
idivb
add
jnp
or
dec
xchg
pop
arpl
cmp
addr16
pop
mov
fcoml
sti
add
insb
push
add
in
sahf
mov
cmc
cmpsb
push
aaa
sub
xchg
pop
jb
rclb
dec
cmp
test
and
js
addr16
lahf
aad
mov
inc
push
push
pop
je
popl
out
dec
repz
push
push
or
sub
add
shlb
push
dec
in
popa
mov
cmpsb
shrb
mov
xor
pusha
sub
adc
test
lret
pop
xor
fsubrs
mov
lret
imul
out
imul
adc
push
hlt
sub
out
aaa
cmp
xor
cltd
xchg
mov
aas
sub
mov
cmp
mov
mov
dec
sbb
rorl
mov
inc
jnp
sub
mov
push
and
imul
push
pop
mov
dec
repnz
push
daa
rolb
push
into
es
rorl
repz
mov
cmp
ja
mov
pushf
in
jge
sub
xor
clc
rolb
add
hlt
jnp
mov
mov
lock
insw
mov
jno
adcb
sub
inc
rcrl
in
or
dec
mov
repnz
mov
xchg
mov
iret
ret
icebp
stc
int
dec
test
mov
inc
mov
pop
dec
cmp
ret
xor
lahf
aam
sbbb
push
jl
mov
enter
ja
xor
in
fld
outsl
cli
cli
addr16
cmp
sub
jo
lds
add
sbb
push
mov
push
test
xor
inc
dec
mov
cwtl
lea
jno
sahf
pop
adc
or
dec
sahf
fsubp
cld
mov
inc
movsl
stc
mov
cmp
lret
lock
adc
inc
mov
and
sbb
cmp
or
cmp
icebp
pushf
hlt
outsl
adc
ret
loope
bound
push
mov
das
stc
lfence
jmp
sbb
lea
mov
rol
pop
adc
stc
mov
ljmp
movsb
inc
dec
leave
jo
addr16
clc
adc
pop
mov
fsub
fsubrs
push
in
mov
inc
ficomps
mov
sub
fstl
sub
sbb
xchg
add
aad
dec
dec
stos
ret
add
jge
mov
add
mov
popa
and
cs
lods
xor
pop
imul
mov
xchg
cld
bound
sbb
mov
cmp
jge
push
pop
push
pop
lea
push
insl
sub
mov
fs
cmp
es
flds
pop
push
outsl
jp
lods
adc
insb
xchg
in
aas
xor
push
or
jne
mov
jmp
inc
scas
stc
add
push
jnp
inc
lcall
jb
xor
mov
psubusw
cli
sbbb
aad
adc
int
jo
cmc
mov
outsb
ret
xchg
add
mov
jae
fidivrs
lahf
out
iret
fsts
fnstenv
pop
jmp
pop
outsb
ss
pop
pop
adc
fists
add
cmovge
sub
inc
lret
dec
out
lock
push
sub
adc
bound
mov
fstps
sbb
xchg
or
bound
cltd
pop
pop
std
fidivrs
sbb
leave
sar
lock
and
or
sub
popa
mov
ja
xlat
notl
shrl
fisttps
jns
xor
and
and
test
fwait
insb
fdivr
xchg
dec
outsb
int
in
xchg
cmp
jl
sub
fmul
hlt
in
jbe
je
push
loope
sbb
push
fdivr
push
ret
cwtl
mov
pop
test
loop
pop
inc
mov
cwtl
mov
push
jo
xchg
test
out
xor
aam
leave
rorb
mov
or
jle
movsl
sbb
mov
sub
mov
push
lods
aam
xor
test
dec
imul
cli
repnz
ficoml
cmp
pop
sub
jl
sub
push
sub
cs
inc
sti
stos
lods
push
cli
out
pop
lock
loop
push
popa
jae
loopne
xor
inc
popf
hlt
mov
das
inc
data16
cmc
pop
pop
inc
jmp
and
add
pop
jno,pt
push
loop
mov
inc
lret
icebp
imul
dec
mov
ret
jmp
popa
arpl
lret
push
cwtl
cli
stos
add
jae
jmp
lods
aaa
addl
pop
test
arpl
je
xor
push
popf
pop
mov
mov
das
imul
jo
jbe
mov
xchg
popf
mov
call
mov
xchg
mov
pop
ljmp
cmp
leave
sbb
xor
mov
sbb
mov
cwtl
add
fbld
hlt
sbb
lds
sbb
add
add
int
lcall
sarb
jmp
sbb
icebp
in
push
xorb
dec
mov
nop
cs
adc
mov
adc
jmp
and
lret
jmp
and
in
dec
add
and
inc
loope
pop
popa
cmp
mov
lods
and
dec
arpl
adc
nop
out
jl
xchg
mov
xor
cmp
imul
fiaddl
pushf
adc
xlat
push
pop
inc
lods
loopne
outsl
inc
insb
repz
mov
je
mov
jno
inc
filds
sti
add
adc
data16
fildll
inc
es
dec
mov
adc
hlt
pop
adc
or
sub
add
mov
rcr
std
pop
test
sarl
fstpl
bound
adc
fldcw
push
mov
cmp
pop
divb
das
jge
xlat
lods
jbe
cmc
jl
sbb
inc
mov
nop
cmc
nop
imul
jb
fwait
ja
shl
mov
sub
sbb
iret
pusha
out
fcmovu
into
jmp
testb
rcll
scas
dec
gs
sub
imul
jmp
imul
loope
cmpsb
and
mov
scas
les
sti
js
mov
jmp
mov
nop
pop
push
sti
lock
mov
xchg
in
aaa
jno
adc
out
fnstenv
cmp
add
test
sbb
mov
test
xchg
jmp
scas
sbb
movsb
int
push
sbb
enter
xor
cmp
push
out
in
jns
ds
fs
add
and
ffree
in
or
cmp
sub
int
test
fsubrs
mov
xchg
sub
xor
inc
jecxz
adc
incb
mov
add
add
dec
dec
cmp
insl
nop
xor
and
movsb
cmp
aad
pop
push
cmp
push
dec
cmpl
xor
inc
test
mov
loop
cmpsb
sbb
sbb
jp
and
and
push
lret
cmp
out
inc
sbb
enter
icebp
cmc
pop
stos
xor
or
ficomps
inc
cwtl
in
ret
pop
lock
push
aad
movsb
shrl
orb
xchg
push
test
fdivrs
in
rolb
xor
es
adc
test
add
push
imul
push
aas
mov
cwtl
int
fisttpl
dec
sbb
inc
arpl
das
insb
cwtl
stos
push
or
xor
test
mov
pop
je
xor
in
iret
mov
adc
outsl
loopne
pop
inc
scas
sbb
pop
inc
loop
mov
mov
sbb
fsubl
push
stc
adc
icebp
fbld
dec
sarl
xlat
movsb
test
scas
neg
rcll
stos
add
lods
int3
mov
sbb
outsl
mov
pop
inc
jg
inc
xchg
inc
inc
iret
lods
pop
leave
cmpsl
pusha
sub
int
lds
jb
stos
aad
xchg
sbb
fldt
pop
fdivrl
fs
inc
push
sub
adc
incb
in
shrb
adc
push
xor
fidivs
xchg
inc
orb
adc
mov
and
jnp
jns
les
addr16
jae
shrb
je
nop
inc
std
pop
cmp
stos
cmp
adc
lds
jl
jg
mov
mov
push
push
xchg
sbbl
cs
adc
jae
jp
mov
rorl
fwait
dec
sub
jns
xor
or
add
cs
fcoms
jno
stos
stos
movsb
jae
pop
pop
outsb
fistl
xor
insl
jb
dec
adc
pop
rorl
lret
mov
jns
fnstcw
lods
testl
mov
sbb
aad
repnz
mov
les
sti
clc
jo
fld
ffree
cmc
out
xchg
dec
mov
xor
push
les
test
dec
and
mov
push
dec
stos
sub
inc
std
in
cmpsb
ja
mov
in
mov
decb
sub
loope
add
or
es
push
push
jno
adc
pop
sbb
push
cmp
repnz
mov
test
jo
jle
jecxz
xchg
insb
sbb
add
push
jbe
fistpll
out
push
fbld
xchg
lea
xchg
mov
jbe
pop
idivb
adc
ljmp
rorl
push
fcompl
daa
xchg
cmc
dec
cli
jns
mov
insl
and
fisubs
sti
pop
pop
aas
add
sti
movl
fidivs
je
loope
sub
faddp
imul
xchg
xchg
sbb
inc
ljmp
jae
stos
cmpsl
nop
fadd
mov
mov
and
aam
xor
and
cld
popf
pop
std
inc
jecxz
inc
cmp
and
fcoml
test
popa
add
out
enter
jp
scas
lods
sub
sbb
outsb
nop
xor
rolb
xor
pop
mov
cld
scas
xchg
jmp
jge
dec
and
cmp
cmp
scas
jmp
mulb
adc
add
aam
jns
test
sarb
pop
shlb
bnd
fucom
lcall
mov
or
cmpsb
and
cmp
xchg
xchg
insl
add
out
ret
mov
scas
movsl
dec
dec
add
mov
mov
or
scas
fwait
adc
jmp
and
pop
out
lds
mov
cltd
shll
xchg
mov
repz
test
adc
jns
and
testl
andb
test
mov
lods
and
enter
jge
jecxz
mov
pop
pop
outsl
or
push
jp
mov
insb
push
and
mov
or
and
lahf
cmpsb
popa
lods
jmp
adc
push
push
jp
cmpsl
and
pop
jb
xchg
sti
aad
xor
sti
xor
or
aas
out
cmpsb
inc
push
insb
les
cmp
mov
mov
xchg
push
insl
outsb
xor
call
mov
cmp
push
and
mov
nop
insb
arpl
push
jns
inc
and
cmp
imul
aad
mov
pusha
nop
xchg
adc
test
xlat
xor
stos
fwait
pop
mov
adc
es
popa
adc
jbe
fimull
es
idivb
andl
pop
loopne
mov
je
jo
jbe
mov
xchg
mov
jecxz
loope
cmp
push
std
sti
xor
xlat
leave
movsl
and
add
mov
push
add
scas
inc
and
sub
out
adc
stc
mov
into
xchg
xchg
test
mov
cmp
nop
jl
jecxz
inc
and
iret
repnz
fisubs
pop
rep
mov
lret
and
shll
xor
stos
repz
int
fwait
jno
dec
push
push
cld
sub
test
sbb
outsl
add
sti
idiv
mov
mov
sbb
xchg
cld
aad
lds
stos
incb
or
call
js
xor
insl
adc
dec
test
shl
mov
and
xchg
pop
push
aaa
xchg
cs
js
adc
lods
cli
jge
adc
mov
cmp
fcompl
movsl
mov
in
dec
imul
xor
out
in
and
cli
repnz
fdivs
sub
rolb
add
pop
jns
xchg
dec
sub
or
push
jge
lret
xlat
push
lcall
sub
pushf
fisttps
jns
push
lcall
dec
cmc
push
repnz
jb
pop
inc
inc
aas
pop
imul
sbb
jmp
gs
outsl
out
es
cmc
sbb
or
iret
in
xchg
mov
push
jns
mov
push
std
push
mov
ret
pop
jp
in
cmp
cmpsl
lods
xlat
stos
fstpt
rcrb
xchg
jge
and
addr16
popa
inc
lahf
jp
mov
fnstsw
inc
mov
xlat
sbb
mov
pop
lret
add
das
mov
cmp
lock
outsl
lock
push
pusha
outsl
mov
push
jo
cmp
stos
sbb
enter
xor
lcall
mov
ret
ss
xor
jae
cmp
sub
xchg
xchg
or
or
adc
mov
xchg
jo
nop
mov
ja
stos
movsb
les
cmc
and
jl
in
mov
xchg
je
psrlw
fldenv
sbb
lahf
lcall
pop
arpl
leave
mov
in
test
icebp
add
sbb
or
stos
ss
cmp
mov
jmp
push
mov
push
jbe
lahf
dec
sti
mov
dec
hlt
dec
aaa
cmp
fcomps
repz
jno
bound
push
icebp
imul
ljmp
shll
mov
sub
shll
rorl
mov
mov
sbb
jb
flds
and
xor
lcall
xchg
pop
push
testl
outsb
test
push
icebp
push
aad
lock
xchg
arpl
std
adc
dec
popf
das
jg
xor
push
pop
lcall
into
cmp
out
ret
jl
push
imul
and
jbe
in
mov
fwait
enter
rorb
or
insb
rol
mov
adc
add
clc
xchg
insb
jne
movb
push
subl
xchg
test
popf
jg
lahf
arpl
jmp
add
inc
mov
jl
ss
mov
cmp
or
inc
jecxz
popa
or
jmp
add
insb
sub
movb
adc
inc
lock
out
fsub
mov
inc
dec
mov
popf
scas
mov
or
cmp
or
test
dec
into
and
mov
xor
cmp
mov
sbb
inc
mov
fdivs
int
rcr
out
ret
cmp
lea
sbb
cmp
sahf
and
push
xor
jmp
aad
insb
push
insb
jmp
push
fldenv
pop
cmp
adc
jp
fwait
cmpsb
sub
jb
addb
and
jp
mov
out
sbb
repz
mov
ret
out
aam
push
push
fwait
pop
cmp
push
insl
gs
pop
inc
cmpb
sub
repz
push
push
int3
in
fs
into
stos
inc
js
nop
in
rcl
adc
icebp
fnstsw
or
ja
dec
dec
aaa
push
data16
push
push
mov
or
xor
xlat
mov
mov
and
and
enter
push
add
jmp
popa
xlat
loope
pop
xchg
fadds
fistps
xor
dec
cmc
adc
roll
lods
xlat
out
mov
repz
fucomip
shll
cmpsb
push
ficoms
movsb
das
sbb
or
fldcw
xchg
xlat
out
mov
fstps
cld
sub
aam
adc
xchg
or
adc
seto
int
pop
dec
fwait
mov
jle
mov
jmp
into
movsl
std
or
dec
mov
test
push
cmp
test
mov
repnz
push
cwtl
fisubl
lcall
or
into
xchg
stos
lea
jns
out
cmp
jb
cwtl
sbb
leave
sub
lods
aam
inc
cmp
setne
lods
jo
and
xor
dec
xchg
mov
movsl
jbe
clc
int
into
or
bound
lds
sbb
bound
pop
jmp
test
ljmp
arpl
push
inc
jb
add
movsl
mov
stos
or
mov
pop
into
push
sub
add
loopne
loopne
xchg
les
nop
push
shrb
pop
mov
adc
mov
nop
xchg
and
mov
bound
pusha
dec
mov
cmp
popa
out
je
inc
js
or
cmp
mov
sub
add
gs
adc
jno
and
outsl
sbb
mov
subb
jae
ror
lods
or
aam
lcall
fnsave
mov
mov
ja
loopne
mov
adc
lods
jae
jb
dec
out
mov
popa
adc
lds
sbb
stc
repnz
mov
cmpb
cmpsl
adc
push
daa
xchg
les
mov
aas
cmp
bound
mov
ret
imul
popf
scas
xor
rclb
repz
pop
ret
xor
cmc
jb
pushf
divb
jle
add
push
fstl
in
xchg
out
int
or
jmp
rcll
andps
xchg
xor
inc
mov
sub
fwait
jnp
insl
jno
das
push
push
xor
mov
mov
dec
xor
mov
lock
sbb
pop
pop
add
bound
insl
aam
mov
movb
adc
cmpsl
pop
pop
add
ljmp
inc
fsubl
xchg
loope
push
fwait
sahf
push
or
xor
loop
rolb
arpl
add
mov
ret
testb
jecxz
push
leave
stc
cli
sbb
pop
aaa
shlb
inc
mov
mov
fnstenv
lds
mov
insb
and
add
fcoms
inc
pop
daa
out
enter
cli
adc
lock
fists
jnp
imul
ja
mov
mov
dec
mov
js
xlat
or
in
fcomi
push
mov
shll
std
out
xchg
lahf
fcom
das
mov
push
cmc
test
test
xlat
cmp
add
mov
imul
nop
out
stc
xor
filds
movsb
xor
loopne
pop
hlt
hlt
inc
cmpb
jmp
dec
jecxz
jl
inc
les
sti
imul
pop
add
dec
icebp
and
nop
jo
sbb
dec
mov
stos
movlps
jp
mov
jno
rcrl
in
fs
outsl
pop
mov
or
dec
dec
subl
fldl
jne
pop
loop
test
rcr
faddl
fildl
xchg
out
les
imul
lods
mov
push
dec
std
test
out
jnp
call
testb
sbb
cwtl
fidivl
test
pop
cmp
dec
imul
ds
fimull
ret
int
clc
data16
adc
std
or
jle
mov
and
mov
push
out
or
push
subl
dec
imul
xchg
xchg
lock
xchg
in
inc
das
xchg
clc
cmpsb
push
out
jb
int
mov
xlat
negl
cmc
js
movsl
push
and
aas
mov
pop
mov
movsb
mov
xchg
mov
add
push
dec
mov
mov
iret
inc
test
or
repz
sub
sub
setb
push
pop
int3
insb
in
cmp
xor
mov
xor
mov
jb
out
test
fisttpll
nop
push
jmp
in
leave
sbb
ret
mov
cmp
test
pop
dec
pushf
jmp
pmulhuw
mov
sub
sti
ljmp
cmp
lock
xchg
push
ret
inc
pop
add
lods
add
jae
mov
jae
xchg
ss
push
fs
ss
fistps
jmp
mov
xchg
rolb
in
mov
andl
jo
inc
adcl
jns
out
xchg
inc
jl
mov
pop
jb
cvtdq2ps
mov
aad
popf
gs
cmp
loope
lods
jge
inc
rorl
mov
out
rcr
lcall
data16
jle
jae
iret
push
sbb
cmpsb
sub
cmpsl
push
fdecstp
pop
imul
daa
rorl
test
xchg
aas
fwait
popa
stc
out
cwtl
adc
pop
xchg
mov
aaa
out
jle
adc
aad
out
sbb
mov
pop
scas
cmpsb
inc
push
cmp
dec
ret
lret
sahf
jecxz
mov
sub
mov
cmc
push
mov
adc
lret
fucom
lret
and
cmp
mov
lods
sbb
sbb
xor
cmpsl
adc
sbb
pop
enter
lret
xchg
fdivrl
jp
js
sub
or
dec
and
and
pop
sub
xlat
addr16
push
add
mov
test
mov
lret
jmp
mov
aam
aad
mov
push
sub
leave
shrb
fistpll
sahf
xor
ljmp
sub
mov
int3
and
imul
mov
adc
pop
xor
mov
jl
lods
sti
das
call
aad
popa
fsts
test
iret
bound
lods
pop
mov
or
stos
mov
movsb
push
je
jns
fldcw
popf
dec
and
das
jl
popa
dec
sbb
scas
jb
mov
and
rcrb
idivl
out
andb
out
out
adc
xchg
ss
fs
and
mov
cwtl
int
pop
sarb
mov
sub
dec
dec
in
sbb
aad
cmp
pop
mov
add
lahf
pop
popf
sbb
inc
outsl
mov
divb
mov
push
sbb
add
adc
xlat
fwait
push
pop
xchg
xor
insl
push
pop
dec
pushf
pop
jmp
mov
testl
cmp
shl
xor
push
mov
addr16
arpl
filds
cli
sahf
xor
push
jg
imul
add
fstpl
loope
cmp
mov
iret
pop
call
xchg
shlb
pusha
sbb
cwtl
cmp
pop
mov
lahf
sbb
pop
pop
sbb
ret
adc
nop
push
cltd
dec
fsubp
clc
pop
dec
lods
and
mov
popl
adc
loopne
pop
xchg
push
sbb
out
popf
cmp
or
mov
or
add
pop
out
loopne
ds
or
icebp
jae
mov
pushf
setns
lock
sbb
mov
fsubr
into
dec
daa
popa
xchg
hlt
xor
jae
cmp
mov
add
sub
mov
sbbb
push
out
push
sarb
lea
lea
fldenv
pop
dec
leave
filds
xor
stos
sub
mov
inc
clc
sbb
into
xchg
movlps
repz
subl
jmp
cs
cwtl
repz
sub
xor
das
and
out
inc
cmp
mov
loopnew
xchg
push
mov
stc
dec
cmp
cmpb
arpl
je
rorl
sub
ficompl
sub
aam
scas
popa
inc
jle
rol
sbb
jae
dec
add
gs
or
fs
mov
or
out
sub
out
pop
lock
mov
sarl
mov
mov
mov
nop
mov
or
adc
mov
cmp
les
neg
fidivl
jle
fsubrs
lret
lea
lds
cmc
mov
addr16
cmpsl
mov
xor
xlat
sbb
sub
and
call
dec
sub
push
shl
jg
movsb
ja
and
arpl
mov
xchg
mov
loopne
mov
addr16
aad
sub
xchg
pop
arpl
cltd
iret
int3
mov
dec
aam
dec
add
xchg
in
xor
rorb
rcll
mov
out
ret
bnd
sarb
popf
xor
out
lahf
xchg
inc
and
scas
inc
jge
add
addr16
bswap
ljmp
sbb
popf
mov
xchg
jae
jns
xlat
pop
cmpsl
ret
repz
je
test
ljmp
adc
sbb
lds
rorl
or
pop
lods
arpl
mov
push
add
xor
ffreep
push
mov
fld
mov
insb
pop
sbb
push
push
mov
jne
sub
mov
mov
inc
nop
mov
ret
andl
sbb
or
outsl
pop
mov
nop
mov
dec
xchg
cmp
cmp
pusha
xchg
xchg
or
inc
stos
and
cld
pop
dec
or
and
push
cmp
stos
data16
shll
int
lahf
insl
mov
ficoms
mov
xchg
and
xor
jmp
jnp
popa
dec
insl
test
cwtl
call
inc
adc
mov
shrl
in
jmp
jno
test
pusha
out
inc
aas
ljmp
push
loopne
sti
add
or
notb
out
fstps
add
test
lods
aaa
or
icebp
call
mov
out
stos
je
lret
filds
aam
icebp
gs
imul
inc
sub
mov
test
test
es
stc
push
jle
aam
cmp
mov
xchg
adc
dec
lret
adc
int3
sbb
out
push
mov
loope
in
inc
negb
xlat
call
sub
push
mov
xor
repz
enter
loope
pop
mov
testb
inc
cmp
inc
cwtl
and
fstpl
push
es
loopne
xor
sbb
push
xchg
xchg
lods
adc
dec
xchg
leave
pop
ljmp
or
pusha
xchg
add
jle
pop
add
jne
addr16
rclb
add
mov
movsl
jbe
cltd
in
popf
pop
or
sbb
popf
stos
sbb
call
inc
mov
push
mov
pusha
out
pop
cmpsl
lock
xor
jo
in
arpl
mov
clc
imul
xor
lret
js
add
mov
adc
dec
jae
in
stos
mov
test
bound
push
jno
dec
cmp
sub
inc
mov
imul
jns
sahf
and
je
sysenter
aam
or
ret
negl
pop
or
pop
inc
push
add
daa
ror
sbb
pusha
push
mov
sarb
add
ss
pop
repz
loopne
push
push
adc
and
add
push
in
fs
mov
iret
mov
rep
inc
mov
bound
xor
push
pop
inc
inc
dec
fstl
insb
and
cmpsl
jns
cmp
jbe
jl
roll
mov
clc
jp
sub
fdivrl
test
mov
push
jns
js
jl
xlat
pop
sub
add
mov
daa
dec
xchg
sub
in
mov
add
movsl
stos
pop
inc
rcrl
fimuls
icebp
and
pushf
js
cltd
cli
cwtl
push
mov
mov
insb
test
cwtl
movsb
inc
es
cltd
in
mov
jecxz
push
cmp
shlb
lods
fildl
out
pop
fstps
and
pop
sub
nop
rcrb
aam
xchg
cmp
jge
sbb
fucom
pusha
movsb
cmp
pop
push
push
mov
je
mov
out
add
bound
imul
push
xor
add
push
or
jne
xchg
test
sti
lock
pop
push
mov
faddl
jle
xlat
stos
test
fisttps
sub
pop
ljmp
adc
pop
push
in
ret
mov
xchg
sub
mov
adc
mov
or
fidivs
pop
jge
fldcw
pop
mov
add
sti
in
cmpsb
sub
inc
dec
ljmp
lock
xchg
cs
sbb
xor
xlat
push
sub
jecxz
std
test
decb
xchg
add
xor
add
cld
outsb
sbb
adc
lret
sub
and
out
xor
pop
addr16
fiadds
or
pop
and
mov
into
push
sbb
int
ja
aad
sarb
popf
jnp
add
xchg
push
jmp
jp
xor
in
xor
xchg
lret
es
fcmovnbe
test
jae
pop
mov
dec
or
push
fwait
arpl
scas
repz
sub
loopne
dec
mov
faddl
cli
rcl
fdiv
data16
cmp
jmp
mov
inc
pop
pushf
cmp
hlt
mov
dec
inc
out
pusha
stc
shrb
xor
push
jecxz
out
sub
dec
sbb
cmp
push
test
hlt
addr16
sbb
aas
ljmp
sti
imull
test
jecxz
dec
adc
out
add
push
or
loopne
mov
test
insb
sub
push
lods
es
mov
mov
mov
insl
push
fsub
icebp
test
out
bnd
push
xor
lahf
rcll
push
lods
adc
jno
cmc
jg
or
jg
xor
nop
ret
subl
xchg
popf
mov
jnp
mov
dec
incl
aas
push
cmp
adc
cs
and
or
fsubrs
out
push
scas
arpl
xchg
leave
jae
jne
jecxz
push
out
imul
cwtl
sub
fdivrs
cs
test
imul
and
inc
jge
int
aad
jecxz
mov
xchg
sti
into
cld
in
movsb
jmp
cmp
cmp
mov
aam
fcoms
push
movsl
ss
pop
cmp
stos
fs
pop
out
xchg
or
out
mov
cli
jge
pop
popa
jne
rorb
jne
pop
into
lret
inc
push
dec
dec
scas
imul
mov
fldenv
mov
or
out
sbb
add
movsl
push
jbe
mov
sbb
incl
sub
mov
inc
aad
aaa
mov
ficompl
sbb
push
mov
push
pushf
lods
push
shrl
xchg
in
sti
or
ljmp
das
cmpsb
pop
add
test
mov
pop
mov
mov
pop
fs
push
cltd
mov
psrld
imul
cmp
mov
data16
hlt
sbb
je
inc
pop
mov
and
mov
lcall
loop
sbb
enter
and
inc
push
popa
xchg
dec
stc
push
test
push
mov
pop
cwtl
and
call
fwait
arpl
iret
pop
movsb
mov
push
mov
aam
jns
adc
sub
sbb
push
push
pop
mov
xor
mov
push
lahf
out
xchg
mov
loope
dec
inc
movsl
xor
jle
inc
mov
popl
inc
push
test
leave
sub
into
loope
and
fst
or
lahf
lods
inc
push
in
icebp
cmp
ljmp
int3
nop
push
js
mov
push
xlat
sbb
jae
push
mov
andl
adc
sbb
adc
push
push
flds
lds
xor
in
loop
lds
test
das
sbb
add
xchg
xchg
in
xchg
add
in
hlt
loopne
lods
pop
push
sbb
test
mov
fldl
mov
push
hlt
sbb
pop
pop
cmp
outsb
dec
outsl
pop
xor
mov
xchg
pop
incb
sbb
cmp
inc
sbb
lcall
jl
loope
mov
jb
lock
test
subl
out
mov
insb
fwait
push
inc
adc
mov
mov
dec
sar
push
clc
push
dec
fsubrl
xor
inc
ljmp
inc
ds
vcvtsi2sdl
jle
insl
loopne
adc
push
scas
jl
mov
test
enter
pop
mov
rol
jae
jl
sbb
int3
dec
aaa
sti
mov
cmp
xor
fcoms
cmc
outsl
xor
xor
mov
cs
loop
cltd
push
lods
fnstsw
adc
ja
icebp
mov
outsl
sub
cs
lcall
xchg
pop
inc
mov
out
sbb
cmp
imul
lds
unpcklps
rcll
enter
out
push
ret
lcall
inc
dec
scas
jecxz
add
xor
and
cmp
and
mov
add
movsl
xchg
icebp
push
loop
jno
sub
popf
insl
jp
or
movsl
nop
js
add
adc
push
outsb
adc
xorl
lret
sbb
stc
jno
std
cld
aaa
popa
dec
xchg
cmpsb
push
xchg
lods
xor
rorb
push
jo
adc
sahf
imul
dec
jae
push
cs
jb
adc
enter
jns
xor
ret
or
je
je
int3
pop
mov
out
fsubr
push
mov
repnz
mov
sub
push
test
sub
cwtl
arpl
mov
iret
xchg
lods
sub
mov
xchg
cmp
test
mov
pop
xor
push
xchg
mov
push
into
in
outsl
jle
adc
mov
cmp
leave
sbb
xchg
inc
sub
or
sub
mov
sbb
bound
sub
sbb
das
pop
call
mov
and
sub
pop
mov
xchg
lret
sub
mov
pop
xor
std
lods
testl
sbb
clc
movsl
fwait
into
xchg
call
xchg
sbb
push
xchg
xor
cltd
xor
sti
out
add
inc
scas
mov
fs
out
inc
dec
sub
pop
sbb
adc
sbb
out
popa
scas
popa
xchg
and
cmpsl
rolb
fiaddl
ss
subb
push
lock
mov
leave
mov
enter
or
xor
mull
insl
pop
jae
or
loop
bound
fiadds
popa
and
lcall
or
sbb
xchg
xor
jne
xchg
mov
or
sbb
divb
pop
daa
pusha
mov
adc
fs
in
ljmp
bound
lret
inc
mov
in
mov
inc
stos
push
mov
mov
pop
int3
adc
movsb
mov
xor
mov
add
mov
sub
out
pop
adc
test
or
in
mov
sub
cld
jo
dec
pop
jbe
jle
jo
sarb
jl
loop
fcmove
cmp
sahf
xorl
loop
movsl
arpl
jo
ss
cmp
xchg
sarl
xchg
adc
adc
in
scas
negl
aaa
jg
lret
push
and
dec
mov
mov
in
dec
mov
arpl
push
ret
push
js
and
inc
or
es
popl
sbb
and
adc
xlat
inc
xchg
jnp
ds
dec
out
xchg
cmpsl
fdivrp
xchg
in
ficoms
arpl
ret
and
mov
mov
stc
pop
ret
mov
xor
mov
sbb
sbb
mov
fwait
test
lcall
xorl
mov
jmp
notl
jmp
sub
ds
cmp
fistl
rol
xchg
dec
test
pop
inc
jno
fs
sbb
aas
fucom
add
stc
mov
gs
adcl
adc
test
orb
iret
xor
jmp
mov
mov
pop
push
insl
sbb
mov
push
cs
cmp
rclb
shr
cltd
icebp
xor
adc
pop
sbb
adc
in
in
loope
repnz
into
stos
and
sbbb
xor
aad
fwait
mov
lods
lods
stos
fyl2x
push
outsl
pusha
pop
push
mov
movsl
sbb
mov
xchg
scas
inc
xlat
cmp
enter
mov
mov
dec
in
enter
inc
jl
adc
aaa
sbb
insb
jmp
pop
bound
mov
ds
movsb
in
mov
fistpll
and
pop
ficoml
aas
adc
enter
stos
ds
cmp
jp
jnp
inc
add
loope
imul
repnz
roll
add
inc
daa
inc
mov
mov
repnz
or
adc
xchg
push
sub
enter
xor
inc
adc
push
aad
xlat
lret
sub
in
jae
loopne
popf
test
sbb
dec
cmp
dec
bound
popa
lods
cmp
jae
iret
xor
mov
mov
out
hlt
icebp
sub
dec
cmp
sbb
adc
in
out
jno
pop
cs
jg
outsb
in
pushf
dec
dec
addl
sahf
insb
dec
ss
out
xchg
inc
lock
addl
std
fimull
cmpsb
in
xchg
pop
aad
imull
dec
nopl
andb
out
push
inc
aam
push
jae
jno
fwait
mov
pusha
addb
dec
push
mov
cwtl
in
and
arpl
arpl
scas
jg
imul
jb
sub
or
popf
cmc
cmp
dec
mov
or
lahf
mov
arpl
out
sti
cmp
aaa
cmpsl
dec
dec
xor
fnstsw
dec
push
jb
pop
arpl
call
rcll
push
dec
xor
lcall
sub
dec
lcall
cmc
mov
lea
xor
stc
test
xchg
push
mov
and
bound
jmp
in
pusha
push
outsb
jbe
dec
in
lds
sahf
mov
out
inc
xchg
mov
or
fnstcw
aaa
mull
dec
fsubrl
ret
add
mov
arpl
sub
jnp
sub
outsb
or
jo
mov
xchg
mov
fnstsw
pop
jmp
or
mov
addr16
jnp
or
mov
mov
jge
mov
pop
arpl
pop
pop
inc
mov
xchg
fucomp
add
jns
push
mov
dec
popf
fidivs
pop
je
mov
mov
fildll
jne
or
xor
sub
xchg
repnz
push
or
sub
mov
mov
pop
repnz
push
jae
xor
dec
adc
add
lods
shl
lock
push
xchg
pushf
leave
dec
adc
mov
lods
cwtl
lds
sub
sbb
mov
inc
ljmp
add
sub
mov
into
repnz
xchg
int
lods
cli
shll
lret
pop
aad
cwtl
std
daa
shrl
inc
sub
push
cmp
adc
pop
fs
cmp
repz
push
push
ret
mov
test
icebp
data16
push
jg
push
iret
push
or
push
inc
cmp
mov
pop
push
mov
mov
cmpb
sahf
sbb
push
roll
push
js
push
cmp
jo
mov
lcall
js
mov
out
push
insl
inc
sub
rcrb
push
iret
sbb
mov
dec
mov
loopne
jo
fstps
out
mov
jecxz
test
pusha
pop
sub
test
push
mov
jo
inc
shll
jne
xor
xchg
arpl
jg
cmpsb
push
jge
jne
ljmp
shll
in
andl
hlt
add
xor
mov
inc
cmp
xor
adc
rorb
and
jmp
lea
mov
pusha
andl
push
aam
cmpsl
loop
sub
cmpb
in
sub
fidivrs
pop
hlt
dec
gs
push
out
mov
sbb
cmp
lea
flds
pop
mov
mov
pop
mov
xchg
out
aaa
fiadds
bound
addr16
std
add
push
dec
test
jnp
pusha
jne
test
nop
popf
sub
cmp
xchg
xlat
test
iret
dec
xor
lcall
sub
add
lret
es
mov
jecxz
jne
int3
fwait
and
mov
or
out
clc
push
scas
scas
xchg
lods
lea
movsb
mov
aad
and
inc
cmpsl
into
and
call
pop
sbb
data16
sub
gs
adc
test
je
add
subl
dec
aam
and
cltd
outsl
enter
pushf
out
dec
lret
stos
pop
xchg
clc
cmp
inc
call
adc
mov
fs
jae
repnz
in
xor
aam
jmp
add
lods
pop
push
int
fdiv
lds
pop
js
xchg
mov
ds
es
shll
pop
outsl
arpl
test
pop
dec
fnstsw
mov
cmp
inc
imul
add
leave
mov
pop
mov
test
out
or
fisttpll
cmpsl
call
inc
fwait
mov
jmp
sub
add
test
pusha
sti
cmp
cmp
push
out
sarb
orb
clc
popa
test
rorl
pop
mov
fistps
daa
aam
jle
and
daa
jmp
into
mov
in
sub
mov
repnz
push
fwait
or
ja
jmp
dec
jo
imul
bound
push
ljmp
es
in
push
cmp
frstor
cltd
repnz
push
adc
rorl
in
lods
les
inc
mov
jp
scas
outsl
out
lea
push
les
ja
adc
in
lcall
pop
sbb
sti
mov
movsl
std
mov
push
and
pop
sbbb
cmpsl
sub
hlt
xor
cmp
sbb
je
ret
loope
les
push
jno
pop
fists
dec
push
gs
cmp
scas
clc
sbbb
lret
pop
mov
loop
xor
lcall
call
mov
imul
adc
push
out
mov
fbstp
ja
add
mov
xchg
shll
scas
jnp
je
xor
sbbl
mov
call
addr16
int3
mov
aad
shlb
icebp
cmp
stos
sbb
cmpsl
add
adc
ret
imull
xchg
ss
push
js
mov
dec
mov
fnstenv
push
out
fbstp
sbb
push
xchg
test
adcl
mov
mov
ljmp
jecxz
mov
nop
dec
fmull
rolb
outsl
call
inc
fwait
xor
push
sti
jno
dec
pop
repnz
pop
sbb
pop
ret
ja
cmp
into
mov
in
fwait
shrl
add
filds
imul
cmp
push
or
data16
lods
in
cs
pop
fnstcw
inc
mov
call
pop
xchg
push
cli
cmp
negl
pop
mov
jnp
lret
inc
mov
ss
pop
push
pop
xor
jne
rorl
mov
mov
mov
outsl
xor
inc
cltd
fwait
nop
mov
mov
sbb
push
jnp
cmp
inc
dec
aam
out
xor
popf
insb
ret
pusha
xchg
inc
inc
push
outsl
lcall
and
push
scas
sbb
mov
jl
cmp
sbb
dec
addr16
mov
mov
sbb
mov
subl
mov
mov
and
mov
inc
ljmp
rorl
enter
mov
cmp
sbb
sbb
repz
out
xchg
add
mov
mov
mov
add
xor
jne
test
xchg
pushf
lfs
out
sarb
jnp
mov
lahf
mov
xor
fsubrs
adc
dec
insl
cmp
ss
mov
clc
mov
adcb
dec
push
ffreep
mov
mov
cmp
dec
cs
push
out
lcall
mov
xchg
pushf
adc
adc
pop
pop
mov
icebp
cmpsb
fcmovu
out
cli
cmp
xchg
sarl
mov
xor
popf
leave
lahf
lret
mov
aad
or
stc
adc
mov
aam
add
dec
sub
sti
or
sub
in
cltd
xchg
pop
jmp
push
cmp
jnp
fsts
jl
mov
xlat
sahf
cmpsb
add
add
loop
lahf
mov
in
mov
bound
lcall
inc
or
test
imull
mov
popf
jge
cwtl
fdivs
jp
push
jb
sbb
mov
enter
add
and
add
jnp
jns
push
shll
mov
jae
popf
in
dec
loope
std
adc
das
daa
adc
gs
cwtl
clc
adc
scas
inc
popa
add
loopne
inc
lods
and
ss
insb
jge
push
in
fwait
shl
lock
sti
out
stc
lret
and
jg
lods
adc
addr16
xchg
cmc
pop
jl
lea
push
jl
sbb
mov
out
addr16
push
popa
fstpl
pop
push
ja
cmp
rolb
cmp
aam
mov
ljmp
out
in
icebp
or
out
imul
shll
int3
dec
loopne
int3
add
cmp
fldl2e
xchg
adc
mov
push
adc
jo
push
int3
mov
jno
aad
cltd
lahf
rclb
gs
xor
xor
mov
out
sbb
rcll
push
enter
push
imul
mov
inc
repz
hlt
push
xchg
clc
test
scas
std
inc
roll
inc
push
popa
call
dec
sub
or
daa
lods
loopne
push
xchg
cmp
lahf
aad
push
imul
loope
cmp
or
xchg
fcmovbe
movb
dec
cmp
lcall
lret
notb
stos
xor
scas
mov
xchg
jae
xchg
cmp
sub
add
push
push
out
mov
xor
push
aad
int3
push
test
push
aas
inc
push
push
popf
push
fnstcw
jne
nop
and
scas
xchg
push
push
outsb
adc
pop
mov
mov
fwait
xchg
inc
les
sub
cmp
lahf
mov
add
loopne
lock
dec
in
inc
ret
mov
std
or
std
push
fcomps
push
cld
in
xor
cmp
test
mov
and
sub
fwait
and
adc
xor
adc
shlb
out
sub
push
xchg
cld
mov
dec
add
mov
cltd
mov
insb
pop
ljmp
sub
adc
out
sbb
xchg
clc
out
jnp
in
jmp
mov
ficomps
dec
clc
inc
mov
and
inc
outsl
notb
lock
mov
sbb
shr
and
jle
pop
push
cmp
jns
test
das
in
fs
xor
mov
or
xor
pop
sub
jns
mov
loopne
sub
pushf
or
insl
sbb
sbb
cmp
lcall
sub
jg
fwait
insb
xchg
xor
mov
shrl
jecxz
movsl
mov
mov
push
mov
repnz
cmp
sub
xchg
push
ror
sbb
push
popf
mov
hlt
loope
jnp
xor
das
inc
ljmp
lcall
mov
bts
mov
add
jp
into
sti
push
cmp
repz
dec
push
and
enter
pusha
xor
push
adc
sbb
dec
ja
repz
mov
mov
inc
outsb
mov
inc
sahf
add
lods
cli
js
les
fxam
ds
adc
push
ljmp
sbbl
mov
jmp
and
rolb
adc
sti
stos
add
mov
mov
ss
xchg
jp
addb
xchg
loopne
mov
xlat
das
mov
pop
das
sbb
xchg
pop
lret
jl
popa
inc
or
data16
and
out
enter
ss
cmp
stos
hlt
xchg
std
pop
mov
cmp
stos
sbb
push
sub
ret
iret
mov
stc
push
mov
and
jge
inc
clc
cmp
add
xchg
mull
cwtl
xor
enter
into
ja
mov
int3
mov
test
inc
jbe
loope
mov
mov
push
fucomp
or
mov
dec
jge
fimull
jle
xchg
pop
and
arpl
daa
and
sti
inc
insl
ja
out
pop
cmp
lcall
push
test
lds
fdivl
pop
loopne
enter
mov
ret
push
imul
push
sub
cmp
fs
out
stc
in
scas
out
loope
dec
xchg
jp
push
jle
and
fdiv
push
mov
xchg
push
imul
xchg
stos
js
mov
stc
lret
cld
pop
test
ret
pop
adc
push
cmp
daa
test
lds
sub
and
insb
ffree
cmp
jmp
add
outsb
pop
cmp
jmp
arpl
mov
icebp
mov
call
fbld
cmp
lret
or
push
sbb
inc
loopne
into
fidivrl
popf
jg
dec
shll
push
js
jo
ja
xor
mov
mov
cli
jno
imul
cmp
and
add
and
and
aas
mov
cwtl
mov
xchg
mov
jnp
jle
or
or
hlt
in
call
js
xor
outsb
mov
in
jbe
and
xchg
cmp
shll
mov
je
call
loope
xchg
sbbl
into
das
cld
cld
inc
xchg
or
mov
inc
lds
xor
fidivrs
or
xchg
mov
cmp
pusha
push
lret
bound
cmp
es
mov
push
cmpsb
xchg
mov
sub
jge
insl
loope
dec
data16
aas
in
and
pop
and
or
insl
aas
insl
leave
je
xchg
out
jp
pop
cmpl
jbe
bound
bound
dec
es
sub
sub
inc
mov
mov
cltd
fwait
push
je
and
push
mov
jno
sub
and
dec
imul
mov
inc
push
xchg
xchg
jmp
and
insb
in
mov
xorb
push
outsb
dec
lret
mov
fdivl
clc
push
popf
cld
daa
and
jbe
cmp
fs
aam
call
cmp
movsb
adc
add
popa
rcr
imul
push
xlat
hlt
sbb
sub
fistpll
sbb
jae
stc
push
sub
add
cmpb
out
mov
movsl
in
and
and
out
adc
jl
insl
mov
inc
jg
mov
jmp
or
push
jmp
xchg
xor
mov
sub
ficompl
test
pop
mov
movsl
sbbb
and
out
cmc
lret
mov
or
add
or
rcrb
daa
push
inc
sub
pop
dec
ret
mov
and
mov
popa
ficoms
das
imul
or
mov
jmp
xorb
notb
sbbb
pop
sub
mov
jecxz
es
rcr
mov
inc
xchg
into
iret
std
aam
xchg
inc
ljmp
orl
mov
add
leave
jbe
add
push
cmp
ss
insb
ficoml
stos
lahf
jae
ja
cli
gs
sbb
jle
scas
mov
ja
imul
insb
mov
mov
cmpsl
cwtl
mov
cwtl
dec
addr16
popa
cmp
xor
or
jmp
mov
cld
stc
sub
mov
lahf
sbb
loope
push
cmp
and
adc
mov
or
lret
ss
fsub
es
ljmp
std
cmp
mov
je
movsb
out
lods
insb
pushf
inc
jne
xor
jo
in
mov
scas
mov
sub
cmp
xchg
or
or
mov
pop
or
pminsw
out
imul
xchg
es
nop
mov
or
sub
nop
cmp
jg
xchg
or
add
cmp
stos
dec
cli
adc
test
sub
nop
jg
lds
in
sbb
mov
sbb
cmc
dec
enter
je
or
lahf
xchg
push
jp
sbb
into
jbe
pusha
loop
pop
push
subl
negl
lods
add
pushf
lock
xlat
and
xchg
in
mov
fcomip
movsb
inc
mov
cmp
data16
lods
push
xor
jecxz
loope
pextrw
jg
cli
mov
into
in
pop
pushf
add
rorl
stos
xor
ja
inc
rol
cmpsb
repnz
mov
scas
inc
gs
mov
inc
xchg
sbb
dec
push
in
nop
mov
xlat
addb
in
push
mov
shl
pop
cmp
pop
jns
mov
mov
sub
sub
mov
lods
into
xchg
and
sbb
or
movsb
lahf
aas
in
or
inc
aaa
inc
push
and
push
loopne
mov
pop
xchg
add
mov
or
lret
mov
mov
js
xor
fstl
push
inc
lret
push
add
add
sbb
cmpsb
sbb
das
mov
dec
js
inc
and
gs
icebp
aas
sbb
jecxz
pop
cmp
popa
jbe
or
adcb
xchg
insl
and
mov
aad
sbb
xor
dec
insb
push
insl
cmp
insb
xchg
fsubrl
dec
adc
inc
jns
inc
xchg
mov
push
pop
fs
add
test
sbb
sbb
dec
in
inc
ror
inc
jg
jae
loop
je
scas
sbb
call
int
outsb
sub
pop
jae
mov
mov
and
adc
mov
aas
es
pop
adc
xchg
push
mov
rorb
or
fstps
cs
mov
pusha
gs
dec
mov
shrb
mov
lahf
push
pop
jnp
sub
sbb
jecxz
mov
jmp
loope
loope
dec
mov
and
push
cli
push
imul
or
pop
lea
lock
mov
subb
fcmovu
hlt
int3
lahf
movsb
pusha
xchg
pop
mov
cvtpi2ps
outsb
roll
cld
adc
ret
pop
or
scas
add
shr
lds
ljmp
and
xor
mov
mov
ret
ret
jne
cmp
vmovd
or
adc
dec
arpl
push
mov
mov
mov
cmpsl
gs
push
mov
data16
mov
cmpsl
mov
movsl
outsb
jg
push
lods
add
mov
leave
sbb
cli
test
mov
subb
in
xor
ds
jge
popa
push
xor
cmpsl
shll
mov
xlat
mov
daa
stos
cmpsl
test
mov
sbb
pusha
fists
mov
rorl
addr16
mov
shl
pop
inc
fs
test
cmc
ljmp
push
arpl
fcomps
mov
and
xchg
inc
jle
jne
or
mov
cmp
jecxz
inc
add
push
cmp
ss
push
popf
or
pop
mov
in
fists
mov
pushf
sbb
cltd
sbbl
iret
orl
push
fistl
push
mov
or
enter
mov
imul
aam
in
pusha
dec
dec
jge
movsl
lea
incb
inc
ja
push
mov
xchg
in
testb
mov
mov
lds
sbb
loope
ds
xor
dec
inc
cmp
inc
jb
add
add
mov
addb
xchg
and
fld
mov
and
mov
hlt
or
and
shrl
mov
pop
cmp
mov
and
out
push
or
dec
es
dec
cmpsb
repnz
cmp
rol
push
cmp
or
leave
jno
pop
or
pop
hlt
sbb
cmpsl
ss
clc
xor
iret
xor
inc
dec
xchg
pop
push
nop
pop
mov
add
xchg
sub
pop
std
test
clc
nop
in
daa
add
push
call
fwait
aas
fnstenv
pop
test
xor
xchg
dec
mov
es
shr
mov
push
pop
shll
lods
loope
popa
xchg
adc
pop
cmp
jge
xor
add
jbe
into
cmpsb
adc
cltd
sub
or
jg
lahf
mov
insl
loope
push
sub
cltd
jecxz
lods
movsl
scas
sbb
xchg
inc
jg
cmpsl
lea
in
mov
pop
mov
paddd
jb
ljmp
inc
sbb
mov
adc
mov
push
bnd
addr16
fistpl
mov
xchg
inc
sti
sbb
and
xchg
sub
mov
lret
mov
test
dec
dec
inc
enter
add
sbbb
push
mov
mov
adc
outsl
push
pop
cmc
fwait
mov
push
xchg
cwtl
xchg
mov
and
or
or
in
mov
fidivrs
pop
dec
loope
inc
lahf
std
fimuls
in
pop
in
mov
clc
sbb
jbe
mov
repnz
and
jne
pushf
sbb
inc
lea
mov
pop
lods
lea
mov
jp
in
dec
mov
cmp
pop
add
out
rcrb
mov
jbe
cmp
cmp
test
lea
xchg
fwait
mulb
or
popa
aad
data16
icebp
pop
jmp
fildll
mov
outsl
cwtl
subl
or
or
xchg
out
enter
mov
fdivrs
rorb
and
inc
push
adc
xchg
mov
mov
aam
or
fidivl
mov
lcall
add
jno
and
adc
sbb
out
lock
in
dec
add
cmc
cs
and
pop
in
jmp
or
jo
dec
add
ret
or
das
lret
sbbl
mov
push
jp
inc
xchg
mov
outsl
push
lds
fistpll
movsb
fistpl
add
xor
clc
pop
adc
js
ret
adc
outsb
mov
clc
dec
add
mov
pop
push
xchg
and
fimuls
cs
push
cmp
sub
mov
jo
les
lods
inc
sbb
sub
or
mov
and
ljmp
imull
push
cmc
out
popf
jb
stos
mov
pop
jmp
dec
dec
xchg
sub
cld
call
popf
xchg
test
iret
and
inc
clc
sbb
lock
mov
dec
and
decb
inc
cwtl
movsl
xlat
inc
sub
faddp
cmp
or
cmp
clc
adc
repz
mov
jnp
arpl
or
test
xchg
jle
icebp
imul
mov
into
and
repnz
out
xchg
lret
imul
pop
repz
fidivl
or
iret
in
test
push
push
cmp
add
pop
add
dec
rclb
sbb
mov
lret
and
movsb
rcrb
cld
fimuls
pusha
loope
add
and
pusha
dec
stc
lcall
arpl
mov
sub
mov
adcl
repz
dec
fcmovbe
mov
mov
adc
inc
int3
mov
scas
mov
jae
mov
mov
or
adc
lods
into
mov
sbb
lahf
ss
mov
fidivrs
mov
imul
xchg
mov
inc
jge
ljmp
jno
dec
sbb
aas
inc
jmp
xchg
mov
dec
pop
pop
repz
sarl
xor
push
shll
cmp
jl
cmp
jns
shll
xor
iret
call
cs
mov
mov
mov
xlat
sub
dec
fnstcw
lret
incl
pop
cmp
leave
ret
add
push
sbb
cld
xchg
jmp
mov
add
xor
std
fdivr
jbe
clc
jb
cltd
and
sahf
push
cld
cmp
mov
add
xor
push
lcall
mov
sbb
out
xor
sbb
test
and
mov
std
scas
leave
mov
clc
pop
adc
mov
test
rorb
and
xor
inc
or
test
call
add
test
arpl
nop
fsubrp
push
cmp
mov
jno
int3
push
mov
and
sbbl
lret
cmc
pop
cltd
sahf
roll
lcall
cmp
movsl
jle
mov
add
mov
adc
cmp
jge
jns
jb
mov
xor
cmp
and
pop
add
push
popa
pop
mov
iret
orl
rcrb
and
and
xor
add
pop
fnstcw
jb
mov
lock
dec
pop
inc
in
outsb
pop
movsb
jg
sti
sbb
rcrl
mov
add
arpl
sbb
test
pop
or
mov
adc
jno
jae
mov
adc
sub
xlat
dec
mov
xor
int3
repz
push
movups
es
mov
mov
out
and
xchg
add
cmp
push
adc
or
stos
cs
out
and
ljmp
jmp
stos
scas
or
pop
loopne
or
add
ret
push
jl
in
jg
es
incl
push
jle
mov
arpl
aam
jae
movsl
imul
jne
in
inc
adc
sub
or
xchg
cmp
sbb
push
in
test
lahf
roll
in
lahf
mov
mov
jmp
push
fmuls
div
adc
sti
and
push
std
push
mov
rolb
inc
addr16
mov
add
add
push
pop
ffree
out
pop
mov
iret
lds
pop
arpl
ret
adc
mov
sbb
jl
leave
je
sbbl
mov
and
add
iret
je
ja
shl
xchg
or
cmpsb
push
cmpsl
xchg
lret
imul
subl
fisttpll
or
cs
stc
rcr
sahf
push
and
insl
push
cmp
in
or
xor
dec
in
xchg
cmp
pop
add
pusha
mov
lcall
pop
lds
lret
jno
or
pop
sbb
add
xor
out
xor
jo
int
lahf
add
jnp
jge,pt
dec
add
cltd
push
dec
adc
ds
aaa
jbe
push
shll
cld
jp
jb
std
push
push
jle
iret
fwait
cmc
add
xor
fisttps
nop
cli
dec
testb
xor
in
adc
xchg
mov
or
aas
cmp
mov
and
cmp
dec
mov
dec
cmp
mov
shl
repz
sbb
outsb
push
stos
cmp
das
inc
popf
cs
or
push
cmc
push
xchg
or
add
push
dec
adc
add
movsb
stc
sbb
jo
adc
ffreep
push
jp
lods
push
nop
jmp
test
rcll
mov
sti
test
push
out
sbb
mov
cli
lcall
std
dec
inc
lret
pop
fisttpll
sbb
test
cmpsl
imul
ds
xlat
jmp
je
push
jo
xchg
ljmp
push
scas
xor
nop
int
xchg
xor
bound
minps
xor
hlt
xor
or
ljmp
xchg
inc
in
inc
inc
fs
pop
and
mov
into
inc
orb
and
pop
scas
mov
pop
les
xor
jp
mov
dec
lcall
aas
dec
mov
pushf
gs
xorb
mov
mov
xchg
rcrb
mov
adc
mov
push
xchg
jle
dec
adc
xorb
sbb
test
dec
inc
add
iret
fidivrs
inc
ret
and
xor
fdiv
jmp
mov
push
mov
mov
mov
fwait
jo
pop
push
xor
and
xor
jo
ret
leave
xor
mov
push
push
scas
lret
mov
hlt
iret
stos
or
iret
mov
fldenv
int
jg
shll
pop
jno
jg
inc
jno
xor
mov
cmp
or
lcall
shll
fisttpl
inc
add
pop
outsl
pop
iret
jecxz
ljmp
daa
in
or
int
lods
xchg
jb
xchg
insl
dec
lcall
pop
in
and
pop
mov
mov
sbbb
out
xor
clc
negb
or
popf
fistpll
and
push
mov
mov
jbe
jp
or
outsl
aad
ss
lea
stos
test
xchg
xchg
mov
cmc
loop
jmp
or
mov
jmp
stos
aad
push
sti
xchg
inc
popa
adc
ljmp
inc
add
orl
pop
mov
lret
faddp
pop
mov
mov
je
pop
test
test
jle
jle
xchg
fwait
in
jle
cmp
hlt
mov
cmp
rorb
jecxz
pushf
shr
sub
jns
fdivl
mov
inc
fnstcw
dec
jp
mov
or
jge
xor
mov
out
add
push
popa
mov
mov
lock
inc
adc
dec
mov
xchg
loop
cmp
std
sarl
fisttpll
rorb
iret
out
sub
dec
push
inc
lods
xor
negl
mov
std
sbb
cmp
cltd
inc
es
push
jno
rorl
scas
sti
ds
ds
out
addr16
add
cmpsl
pop
dec
mov
cli
mov
mov
mov
stos
cmp
lret
ret
mov
or
jl
add
cmp
andb
imul
in
xchg
add
mov
pop
xchg
xor
lods
fs
and
fstpl
loope
insb
push
jno
mov
in
and
mov
sub
push
jbe
push
inc
pushf
dec
mov
dec
jl
icebp
int3
adc
xchg
pop
rcrb
dec
dec
inc
std
push
mov
mov
xor
test
push
subb
pop
jnp
inc
pop
xchg
sub
ds
sbb
js
orl
push
and
push
xchg
iret
add
lret
push
imull
pop
ljmp
test
mov
fildl
hlt
mov
pop
push
ljmp
push
and
ret
push
and
push
xor
and
cmp
test
and
jp
inc
rcrb
into
jge
fwait
add
jmp
sub
les
add
in
pop
dec
je
ljmp
push
push
fidivs
jp
inc
int
mov
popf
dec
push
in
pop
or
stc
js
pusha
lds
push
inc
push
mov
pop
adc
push
or
lcall
add
insb
js
subl
push
and
rcll
cltd
mov
mov
xor
adc
cmp
adc
repnz
lock
aam
and
in
push
mov
or
addb
inc
jmp
imul
in
fs
ret
out
das
xlat
cmp
jge
push
out
sbb
inc
adc
fisubl
push
cmpsl
stos
clc
aaa
idivb
push
inc
pop
ljmp
inc
push
and
dec
cmp
jno
repz
jb
jl
push
insb
or
data16
orb
inc
push
sbb
jle
jmp
dec
lds
or
mov
imul
sub
sarb
pop
or
inc
xorl
mov
cmpsl
cmp
ret
xor
push
adc
scas
push
and
pop
fwait
mov
xchg
inc
fdivs
enter
lds
clc
mov
insb
bnd
dec
add
cmp
inc
lret
cmpsl
mov
js
fwait
dec
push
out
mov
das
std
je
out
jnp
imul
adc
adc
or
adc
cs
adcb
stc
inc
int3
jae
inc
clc
sarb
lock
sub
add
inc
lea
push
jae
cli
outsl
sub
xchg
stc
mov
dec
cwtl
mov
popf
push
sub
sti
movb
sbb
dec
incb
mov
push
or
jp
test
jp
fwait
jbe
xchg
push
mov
ror
xlat
add
and
das
je
idivl
in
repnz
clc
inc
cmpb
mov
addr16
push
sti
cmc
jno
push
repz
insb
mov
push
mov
jmp
clc
cltd
xchg
push
jbe
sbb
aam
cmp
mov
pop
aaa
jecxz
or
addb
xchg
cmc
in
sbb
xchg
cld
jecxz
int3
enter
int3
das
cmp
lcall
loop
jno
jbe
int
popf
int3
dec
pop
loopne
rcrl
out
mov
jg
aad
push
push
pop
lea
repz
push
mov
mov
jns
inc
int3
shrb
loopne
in
mov
jmp
mov
notb
pop
loope
push
inc
je
cmp
adc
fsubrs
insl
pop
xchg
jmp
mov
outsl
test
cmpsb
iret
lahf
dec
mov
or
pushf
cs
and
xor
fnstsw
jbe
sbb
xor
add
push
fldt
jnp
subl
cltd
sbb
adc
xor
adc
jle
pusha
out
and
rcrb
jmp
pop
lahf
dec
mov
imul
push
jne
sub
cmp
mov
imul
mov
lahf
jae
lock
jns
mov
push
pop
int3
xchg
imul
mov
stos
xor
xchg
roll
jno
push
lahf
sub
cmp
ja
bound
sub
jl
stc
push
call
enter
mov
sahf
cli
test
xchg
fcompl
cmp
mov
outsl
leave
cltd
inc
and
sbb
adc
jmp
pop
cltd
xor
add
imul
cmp
sbb
fistps
adc
jo
sub
inc
sbb
outsb
inc
mov
mov
mov
add
shll
testb
and
insb
hlt
sbb
mov
pushf
ss
stos
pop
cld
push
jnp
jnp
or
mov
sbb
sbb
cmpb
cmc
enter
cmp
pop
pop
pop
adcb
mov
dec
xor
mov
pop
cmp
xlat
or
test
sbb
jno
cmp
pop
rcll
out
aas
dec
ja
mov
mov
jmp
mov
inc
shrl
mov
jp
nop
test
lcall
pop
cmp
cmp
data16
cld
mov
pop
lods
cmp
and
jmp
pop
rolb
mov
imul
int3
imul
xchg
nop
jmp
xchg
mov
in
xor
fildl
pop
jl
je
adcl
or
inc
push
fcmovnb
gs
jle
and
xor
cld
dec
fbstp
out
mov
sbbb
mov
test
dec
mov
jp,pn
mov
inc
bound
or
lock
inc
sub
int
iret
loope
xor
stc
mov
jbe
xor
gs
test
or
les
clc
pop
aas
add
mov
aaa
jge
sub
loopne
lea
icebp
rcrl
sub
push
xor
addr16
mov
cmovb
clc
fcomps
sub
push
or
shrl
cltd
sti
out
inc
xchg
dec
adc
out
cmpsb
aas
fistps
test
inc
cmp
inc
and
int
aad
in
sub
sbb
dec
imul
cmp
pop
test
mov
sbb
adc
jge
dec
loope
cmp
xchg
bound
std
loop
dec
fstpt
aad
fidivrs
loopne
aad
pop
fldt
hlt
jne
iret
fidivrl
mov
outsb
push
lods
ljmp
outsb
sub
popf
scas
lds
cmp
sarl
ja
inc
jae
andb
imul
cmpsb
add
adc
mov
mov
mov
mov
out
add
in
imul
mov
cmp
outsl
xchg
and
adc
cmp
mov
sbb
jns
or
icebp
xor
mov
dec
test
mov
xor
pop
pusha
out
sbb
cmpsl
in
pop
xchg
call
cmp
pop
outsl
orl
and
jp
xlat
mov
loope
bnd
sub
pop
cmc
or
call
int3
lcall
xor
faddp
mov
xlat
jle
ja
scas
outsl
xor
insl
dec
adc
xchg
adc
pop
cmp
inc
jge
aaa
fimull
jno
push
push
cli
adc
lahf
push
jae
movsl
dec
xor
mov
insl
jo
icebp
mulb
pop
jg
lock
xor
or
imul
mov
cli
or
inc
push
mov
es
sub
xchg
sub
je
mov
ds
and
popa
sarb
mov
dec
mov
test
mov
inc
sbb
cltd
lcall
insl
and
daa
dec
cmpsl
fwait
cmove
cwtl
mov
das
cmp
lahf
add
mov
lahf
jo
xor
js
inc
jl
sarb
push
inc
jmp
jno
mov
inc
mov
jge
inc
adc
mov
push
rcll
adc
mov
xchg
fimull
popf
pop
push
push
and
xor
xor
inc
mov
les
adc
or
les
pop
inc
mov
mov
popa
je
sub
lods
fcmovnu
and
push
lock
jae
cwtl
dec
adc
mov
adc
push
jle
jnp
sub
push
int
scas
cltd
mov
sub
push
aaa
push
xor
cltd
cwtl
pop
lock
cltd
dec
jns
mov
mov
lock
jmp
xlat
jg
mov
lds
call
mov
movsb
cmpb
cmp
add
in
out
sbb
lcall
cld
and
push
icebp
inc
popf
decb
inc
adc
repnz
hlt
addr16
pop
outsl
mov
fcomi
adcl
push
faddp
sbb
fstl
xchg
arpl
xchg
add
sub
in
dec
cmc
das
out
repnz
bound
jmp
mov
test
and
out
jle
jle
cmp
mov
jae
repz
pop
inc
loop
mov
pop
repz
push
stos
jae
inc
insl
mov
mov
movsb
push
adc
cmp
js
jno
sub
inc
mov
cmp
xchg
mov
inc
js
ja
das
mov
cwtl
pop
adc
dec
xchg
mov
pop
outsb
push
rcr
in
mov
adc
stos
out
cmc
aaa
test
sub
xor
xacquire
xor
jmp
push
pushf
scas
and
je
add
ficoms
lds
imul
push
mov
mov
add
dec
sbb
inc
loop
mov
inc
ss
or
shll
jne
pop
mov
test
jmp
mov
lods
or
lret
pop
sbb
mov
mov
imul
mov
cs
fldenv
push
stos
pop
or
inc
addr16
mov
iret
sub
call
sbb
adc
sbb
lcall
xor
and
sti
mov
pop
repnz
jmp
xchg
test
mov
add
inc
xchg
fsubr
inc
cld
fsubrs
stos
leave
or
push
xor
in
out
jb
fwait
mov
sbb
adc
sti
sub
lods
gs
aam
cmpsw
or
push
loopne
push
push
lret
add
ljmp
mov
lock
stc
inc
dec
shlb
lea
xor
jae
or
dec
add
pusha
aad
insl
fcomp
jo
add
xchg
test
push
mov
sbb
or
mov
imul
les
in
and
add
int
outsl
mov
pop
inc
les
cmp
xor
xchg
aad
sub
xchg
mov
add
in
cmc
in
add
ds
cli
ret
sub
xchg
out
pop
cmp
mov
mulb
std
adc
inc
scas
iret
aaa
cli
mov
sbb
jbe
in
pop
popf
insl
test
hlt
sub
loopne
xor
xor
iret
lock
in
adc
adc
test
movsb
enter
mov
cmp
scas
jbe
iret
imul
subl
jb
pop
push
into
popf
jecxz
lret
pop
fcomp
loope
addr16
aaa
outsb
hlt
int3
into
cli
mov
push
cmp
xchg
cmpsb
jb
or
xchg
sub
sub
orb
cmpsl
lods
lcall
mov
pop
and
bound
xchg
fnstsw
add
out
inc
jnp
and
mov
inc
push
ds
mov
jl
mov
sub
sbb
ss
lret
test
mov
add
sbb
lods
cwtl
test
fwait
imul
mov
fwait
mov
cmovns
adc
dec
imulb
adc
xchg
lods
or
dec
and
pop
in
arpl
lods
xchg
or
pop
lock
aaa
mov
sbb
sbb
movsb
add
in
out
or
scas
cltd
cmpsl
cs
arpl
xchg
out
sub
xchg
movsl
sbb
repnz
mov
stos
mov
cmpsb
loope
test
mull
pop
xor
sub
mov
inc
adc
rcll
pop
insb
and
data16
mov
dec
adc
mov
xchg
sbb
xchg
mov
or
enter
or
dec
jmp
cmp
aaa
fsub
cmp
pop
pop
pop
cwtl
sub
stc
mov
adc
mov
aaa
cmc
lock
int3
in
and
cmp
xor
fsubrl
and
pop
in
in
ss
xor
cmp
int3
xchg
pop
xor
mov
mov
lods
sub
sbb
bound
cmp
test
in
test
std
fprem1
aam
or
dec
and
mov
inc
out
fistps
cltd
pop
dec
rcll
jle
incl
xor
dec
inc
inc
push
adc
dec
dec
mov
aaa
fsts
aaa
inc
call
sbb
adc
xor
mov
out
adc
mov
in
das
int3
xor
stos
xchg
repz
sub
jge
fsubs
pusha
movsl
jnp
mov
push
pop
cs
ret
sub
xchg
jl
push
jne
and
jg
ret
inc
fidivrs
insl
jmp
jecxz
inc
outsb
xchg
cwtl
mov
cmc
ret
and
or
xor
popa
cmc
loop
je
push
cs
dec
cltd
fsubr
mov
cmp
cmp
lods
cltd
mov
cmpsb
adc
stos
inc
pop
mov
xor
notb
xor
mov
lea
xchg
jne
or
sahf
test
sbb
push
mov
inc
loop
xchg
pop
push
add
jb
or
inc
cmp
push
sub
inc
popa
aam
in
and
aaa
insb
xor
pushf
mov
rcll
leave
out
lret
xchg
cmp
cmp
xchg
xchg
aaa
pop
cmp
cmpsb
jmp
mov
mov
add
cltd
pop
xor
jnp
inc
mov
mov
push
ja
cs
inc
nop
cvtpi2ps
pop
int3
mov
push
xchg
je
dec
std
repnz
outsl
mov
xchg
jnp
pop
sbb
xor
cmp
inc
in
sbb
cmp
fsubrl
fnsave
pop
or
pop
ss
shrl
xor
fisttpl
or
dec
test
mov
pop
push
push
xchg
cmc
das
ja
push
clc
movsl
mov
fptan
incl
insl
pop
inc
and
icebp
fiadds
mov
das
xor
aad
cmp
mov
push
cwtl
out
sbb
rorl
fsubs
fisubl
scas
ss
and
xchg
mov
mov
popf
mov
push
mov
imul
sbb
dec
shll
push
test
into
xchg
mov
imul
cld
les
xchg
or
lock
sub
cld
jl
adc
jne
sti
mov
mov
pop
and
push
push
sbb
scas
lahf
adc
pop
lds
pushf
fisttpll
cli
pop
or
mov
xchg
lcall
xchg
or
imul
sub
daa
sti
mov
add
sarl
int
mov
xor
js
jb
mov
adc
add
loope
pop
test
insl
mov
inc
xchg
jnp
mov
pop
test
fildl
movsb
lods
mov
adcb
das
jnp
push
xchg
cs
adc
xchg
fs
dec
cmp
aad
lcall
rcr
daa
in
les
int
cmc
cmp
repz
mov
push
mov
cmp
pop
mov
rclb
dec
cmpsb
mov
pushl
inc
lock
sub
or
mov
fs
jecxz
push
loopne
gs
aam
aaa
push
fsubrs
scas
andl
mov
or
cmpsb
xor
enter
push
adc
fdivs
inc
ror
add
jo
repnz
pop
ljmp
rolb
test
inc
out
inc
ljmp
sbb
xor
popf
addr16
lcall
insl
push
push
cmc
arpl
lock
push
in
popa
je
dec
jno
inc
push
mov
and
nop
pushf
cmp
insl
push
pop
mov
scas
fistps
cmp
dec
mov
shlb
lcall
inc
push
je
or
push
popa
je
dec
xchg
mov
movsb
mov
jmp
sub
imul
ljmp
ja
or
mov
les
push
mov
sub
dec
pop
push
xor
sub
aad
pop
xchg
sub
mov
xchg
jp
sbb
hlt
push
lods
add
scas
rcrl
pop
mov
fcoml
pop
shr
add
mov
subl
and
test
add
dec
stos
mov
and
pop
stc
add
in
adc
xor
sahf
mov
mov
add
mov
movsl
lea
lods
dec
mov
sbb
pop
fsubr
gs
clc
jns
ss
mov
in
pop
cmpl
mov
popf
push
jmp
call
testb
mov
mov
in
adc
push
les
inc
stc
inc
adc
sub
repnz
pop
jmp
test
seta
aaa
mov
inc
mov
adc
add
jmp
mov
xor
mov
lret
jno
dec
push
jmp
lods
push
sar
and
mov
push
mov
fdivrp
dec
jae
mov
adc
dec
int3
les
push
sub
nop
mov
out
add
mov
cmp
lock
test
cmp
pusha
int
sub
mov
dec
pop
sbb
and
cmp
shr
mov
insl
lea
in
fwait
dec
sub
inc
xchg
jmp
push
test
xor
js
or
divl
shll
ds
and
mov
xchg
in
sub
mov
dec
ficoml
push
jno
fdivr
and
adc
outsw
cmpsl
je
jno
loope
sub
scas
and
andl
or
mov
std
mov
in
jb
sub
xchg
ret
and
out
clc
jle
out
dec
in
loopne
fsub
cltd
jg
xor
addr16
xor
stos
fcoml
pop
or
sub
xlat
repz
ljmp
sub
push
pop
les
mov
sub
inc
pop
mulb
imul
cs
mov
ja
push
mov
into
aam
xchg
inc
mov
pop
sub
dec
xchg
outsb
sub
int
add
cmc
dec
dec
dec
imul
jmp
rolb
mov
dec
pop
out
adc
dec
aad
stc
iret
mov
mov
sbb
pop
add
mov
ss
jg
mov
mov
mov
test
aaa
cs
mov
sbb
xchg
lea
mov
fdivrs
cmp
xor
jbe
shrb
fwait
rcrb
repz
outsl
cmc
adc
lret
pop
jecxz
jecxz
shr
daa
or
sahf
xchg
add
push
mov
addr16
inc
sub
xor
leave
pop
arpl
out
fdivrl
mov
arpl
daa
adc
gs
xchg
movb
or
and
xor
mov
or
shlb
aas
out
jne
cmp
push
xor
add
scas
or
mov
dec
in
adc
sbb
push
dec
push
jle
fidivrs
sub
dec
test
dec
sbb
insl
push
inc
cmpsb
out
shrb
mov
jno
push
stc
cmp
xor
cltd
mov
filds
jnp
icebp
push
out
dec
shll
cmp
jne
ljmp
daa
inc
sub
pushf
jle
iret
mov
xlat
xchg
adc
cmp
popf
and
sahf
cmp
xor
push
inc
aaa
in
es
mov
or
subl
sub
nop
adc
push
repnz
xor
lods
ficoml
stos
xchg
pop
shlb
icebp
dec
js
popf
fidivl
pop
nop
sub
kxnorb
sar
insb
scas
inc
pushf
push
push
pop
mov
jg
sbb
pusha
fldenv
xchg
enter
pop
pop
js
dec
fs
adc
fcomi
test
dec
fnstsw
xor
and
fwait
push
cmpsl
push
iret
fsubrl
negl
sub
fsubrl
mov
dec
sbb
mov
push
inc
sbb
leave
sbb
inc
mov
dec
jge
pushf
sub
jg
push
stos
maskmovq
lods
lahf
out
dec
mov
ds
mov
sbb
pusha
movsl
mov
push
mov
add
dec
pop
and
fisttps
divl
jge
outsb
add
es
dec
mov
fnstsw
add
adc
lret
mov
cmpsl
bound
add
inc
sahf
cmp
mov
test
sub
shlb
out
popa
mov
jecxz
mov
pop
or
stc
adcb
and
lock
das
inc
xor
push
mov
adc
mov
mov
jp
stos
adcb
in
and
jo
xchg
inc
and
push
sub
jnp
test
ror
test
pop
xchg
std
es
pushf
lods
andb
icebp
push
int3
cmp
outsl
lds
cmp
xchg
mov
jmp
std
adc
andb
sbb
out
xchg
repz
stos
pushf
add
add
in
sub
filds
cs
adc
cwtl
xchg
sbb
xor
aas
iret
cmpsb
mov
xor
xor
add
or
sahf
dec
adc
and
push
cmpsb
mov
inc
cmp
das
dec
push
in
adc
jmp
push
aas
test
push
mov
mov
push
pop
fnstcw
mov
in
jne
hlt
aas
jl
or
fstpl
jp
pop
push
test
inc
int3
cmp
lods
lds
lahf
add
sub
pop
adc
cs
jne
int3
repz
mov
test
enter
cli
stc
and
pop
pop
xlat
jmp
insl
arpl
loopne
jae
xchg
lahf
scas
ljmp
es
lret
shl
cmp
call
fldcw
adc
sub
push
jge
pop
andb
pop
mov
or
and
adc
add
outsl
aad
pop
cmp
lret
aad
daa
push
inc
test
imul
push
stos
test
add
mov
testb
insl
pop
es
mov
inc
hlt
sbb
divb
add
loop
fwait
sub
loopne
dec
jmp
or
pusha
inc
xor
cld
clc
sbb
stos
pop
test
mov
jecxz
xor
mov
sahf
leave
pop
das
sti
push
loope
xor
or
push
clc
mov
sbb
push
enter
stos
lds
imul
sub
es
testb
add
lods
ret
stos
in
outsl
incl
inc
in
dec
subb
pusha
out
sbb
js
out
sbb
mov
push
sahf
mov
mov
rclb
rcll
xor
pop
or
mov
mulb
movl
push
sbb
mov
test
sub
pushf
out
outsb
filds
jb
arpl
fcom
popa
insb
cwtl
cmp
outsl
orl
aas
inc
push
xor
js
jns
and
test
loop
cli
xchg
fiadds
adc
add
out
and
adc
pop
pop
inc
mov
pop
jle
cmp
fadds
add
mov
out
movsb
in
lea
fdivs
int3
add
repz
insl
xchg
xor
xchg
shlb
mov
leave
shll
mov
jl
mov
mov
fnsave
jp
cmc
push
mov
xchg
xor
cmp
mov
lret
push
repz
inc
mov
xlat
mov
jb
fs
mov
clc
and
lds
sub
inc
test
mov
jg
fbstp
mov
mov
stc
mov
push
mov
xchg
xor
dec
incb
in
jnp
push
loope
js
jg
sbb
xchg
xchg
pop
adc
mov
jne
xchg
movsl
cwtl
pushl
push
and
inc
ljmp
outsb
dec
and
pop
push
bound
sbb
lret
pop
adc
adc
icebp
out
repz
dec
pop
mov
ss
outsw
pop
sbb
inc
xchg
mov
or
xchg
lds
ret
fcomps
dec
shrl
loop
loope
xor
sar
lea
in
lcall
add
sar
mov
adc
lret
pushf
add
lods
pop
xor
lods
cmc
sub
mov
and
jecxz
cmp
lds
popf
call
lret
jmp
push
mov
clc
push
stos
mov
mov
data16
mov
repnz
inc
sbb
fdivs
sbb
jle
out
rclb
ficompl
push
loopne
mov
icebp
jge
push
adc
test
push
add
and
mov
jl
and
ljmp
fwait
adc
shrl
sahf
jbe
leave
sbb
pop
ss
insl
sbb
daa
sahf
jne
add
xchg
mov
adc
movsl
mov
xor
out
adc
movsb
lods
xor
test
cmp
add
fwait
addr16
imul
cmp
sub
add
pusha
js
ds
icebp
ret
dec
sti
outsb
push
dec
pop
xor
xor
in
inc
sbbb
lock
lret
fstl
pop
pop
jne
loopne,pn
xlat
mov
test
imul
and
dec
movsl
lea
inc
or
int3
repnz
popa
sub
mov
push
int
imul
rcr
cli
loope
pop
jae
lret
fwait
into
push
adc
inc
movsb
subb
and
test
jb
cli
lods
and
inc
mov
movsl
out
lahf
rol
sbb
daa
add
xor
mov
cs
mov
dec
mov
je
mov
stos
dec
inc
push
nop
orl
and
cs
sarl
mov
jl
sub
gs
pop
jl
aad
sti
mov
xor
stc
push
daa
imul
clc
push
cmp
cmc
dec
test
or
mov
inc
cmp
arpl
or
add
imul
pop
adc
les
nop
nop
clc
ret
xchg
add
stos
inc
and
jmp
cmp
xchg
fs
jecxz
jns
mov
or
scas
daa
lock
das
lahf
out
mov
cltd
jp
inc
add
xor
cmp
adc
mov
or
fimull
sbb
pop
mov
ljmp
das
inc
mov
push
fwait
dec
cmpb
lds
pop
inc
sarl
leave
jg
mov
andl
pushf
cwtl
stos
mov
xchg
or
lods
sub
fldenv
xor
add
sub
lret
lahf
jg
scas
stos
xchg
dec
cmpsl
loopne
scas
fimull
lcall
ficompl
jns
andl
aas
cmpsl
pop
pop
lahf
enter
or
movsb
ja
ja
fwait
pop
test
sbb
mov
jo
frndint
idiv
insl
inc
imul
fidivrl
adc
rol
inc
mov
ljmp
sahf
cltd
mov
pop
icebp
in
movb
js
xchg
pop
wbinvd
sub
mov
lret
data16
jge
hlt
aam
lds
push
adc
lret
add
cld
mov
push
stos
adc
push
imul
cmp
sub
or
cmpsb
xchg
aad
movsb
mov
les
xchg
pop
icebp
jno
jecxz
cmp
mov
sbbl
addr16
mov
lods
pop
scas
jecxz
or
out
xor
pop
out
jl
pop
cmp
pop
clc
subl
dec
jnp
insb
mov
inc
insb
xchg
shl
ds
sub
mov
and
mov
gs
or
mov
lods
adc
inc
outsb
out
dec
xor
xor
push
test
int3
cmpl
popf
movsl
in
jmp
mov
xor
stc
mov
out
push
xlat
xor
mov
add
inc
int
cmp
xlat
mov
jb
dec
inc
mull
sbb
xor
sbb
ficoml
sbb
in
sbb
jne
xor
icebp
enter
jge
lock
movsb
jle
les
lods
jbe
dec
cs
ficompl
inc
fwait
jg
pop
cmpsl
add
jbe
sub
jmp
and
subb
fidivrs
fucomip
fidivl
sbb
mov
lahf
adc
mov
movsb
pop
sbbb
and
ror
lock
cmp
lock
mov
add
dec
adc
jmp
outsl
cmp
dec
mov
cwtl
inc
push
pushf
repz
dec
lods
pop
sbb
cmp
push
or
sti
xchg
mov
and
gs
into
pop
out
lcall
pop
mov
jmp
leave
sar
arpl
jecxz
adc
add
mov
dec
xchg
lcall
lods
inc
sbb
jmp
inc
divb
dec
cmc
pop
lods
and
adc
jbe
jno
test
lret
popf
mov
ret
pop
push
sbb
jbe
rorb
orl
lret
mov
xchg
cld
je
cmp
scas
mov
xor
jmp
mov
mov
add
inc
mov
cmp
aas
pop
and
addr16
sbb
lods
imul
lret
scas
aas
adc
sbb
cmp
int
push
rolb
or
pop
pop
add
out
insl
sar
jno
add
gs
fwait
sbb
mov
mov
or
stc
or
sbb
xor
mov
pop
fdivrl
inc
fs
and
int
push
add
outsb
jle
lods
dec
aaa
scas
inc
jg
fwait
inc
flds
push
incl
iret
bound
mov
bnd
movsb
mov
mov
rol
sub
push
cmp
inc
lods
lock
gs
sbb
fs
push
cld
cld
inc
loopne
sub
in
mov
pop
je
add
orb
mov
inc
mov
fwait
mov
movsb
mov
cli
jb
sahf
xchg
in
sbb
mov
outsb
and
inc
fldcw
xlat
imul
push
mov
xchg
lea
cwtl
mov
jp
xor
push
or
add
imul
addr16
shlb
inc
mov
mov
movsb
xchg
xchg
fidivs
cwtl
cli
lods
adc
pop
pushf
outsl
outsb
les
lcall
aad
push
adc
and
or
add
fmull
jno
dec
iret
nop
mov
addr16
dec
and
xor
pop
jbe
sbb
mov
or
dec
popf
popf
mov
out
das
shll
popf
or
push
dec
arpl
jmp
mov
out
fs
movsl
cmp
pop
dec
adc
push
fs
cltd
sub
mov
popf
xor
inc
imul
ds
xchg
cmc
push
cmc
cli
stos
mov
jge
loop
out
daa
mov
xorl
decl
jno
iret
ret
xor
adc
xchg
ret
fsubrs
lds
inc
mov
lea
movsb
jp
pop
std
add
in
push
pushf
sub
jp
dec
incb
nop
aaa
outsl
ffree
dec
adcl
pop
arpl
fidivrl
inc
mov
mov
pop
test
jno
int3
inc
mov
adc
test
stc
in
fsubl
jecxz
cwtl
js
jae
inc
int3
data16
and
imul
nop
insl
mov
lods
int3
push
mov
pusha
inc
lock
pop
adc
movsb
and
sub
mov
rcl
xor
xor
cmp
call
cmp
push
xchg
mov
int3
push
adc
sar
cmpsb
scas
jns
out
xor
in
jne
cli
pop
fstps
rorl
dec
dec
loope
cmp
roll
or
enter
loope
movsb
js
subl
sbb
lahf
push
call
push
pop
adc
adc
ja
dec
push
mov
mov
jmp
adc
ret
push
fwait
mov
insl
cmp
or
insl
dec
push
xor
loope
mov
in
pop
mov
insb
sub
dec
sbb
or
jo
adc
shl
sarb
jmp
xorb
dec
icebp
jmp
mov
or
ret
sbb
jnp
mov
cmp
addr16
push
add
test
cmpsl
sti
mov
shlb
call
jmp
jno
push
cmp
test
dec
icebp
xchg
insl
sub
repz
or
inc
lods
loope
loopne
push
repnz
xlat
jle
aad
in
xchg
cmp
cmpsl
and
cltd
adc
mov
mov
adc
and
ret
cmp
mov
sbb
cmpsb
pushl
mov
lods
pop
lock
aad
outsb
and
inc
jb
and
std
shr
ss
sub
scas
mov
mov
rclb
cmp
cmc
or
xchg
ret
test
sbb
pop
mov
in
lods
jae
dec
pop
loope
mov
mov
daa
mov
cmp
scas
pushf
and
mov
icebp
sar
shlb
out
shrl
jle
pushf
dec
es
ds
jae
pop
sub
push
ret
pop
pop
sbb
dec
pop
inc
pop
pop
adc
aas
stc
dec
inc
push
sbb
jae
push
jne
dec
push
dec
insl
daa
inc
inc
and
dec
pop
lock
data16
push
aas
lahf
rclb
sbb
popa
and
push
and
adcb
scas
sub
mov
jl
and
jne
inc
scas
xchg
jno
add
ffreep
insl
pop
xor
mov
dec
mov
std
push
or
je
xchg
cs
dec
and
daa
sahf
int3
test
pop
mov
mov
out
mov
mull
mov
xor
js
loop
mull
sti
enter
jecxz
int3
filds
mov
mov
mov
clc
std
mov
lods
cltd
sub
or
xchg
outsb
mov
mov
xor
cmp
bound
pop
sahf
jmp
cmpsb
and
pop
fsubs
bound
je
mov
cmp
or
lcall
jnp
jne
mov
aas
pop
arpl
shr
movsb
pop
cmp
es
lahf
lods
outsb
hlt
hlt
lock
jno
sarl
mov
stc
xchg
pusha
sbb
adc
lret
sub
int
jl
add
int
mov
mov
jl
jno
shlb
cs
xchg
aas
push
lock
mov
data16
cmc
imul
mov
mov
inc
pop
inc
jo
cmpsl
sarb
out
xchg
shrb
cmc
pop
addr16
mov
es
mov
scas
and
add
sub
jae
repz
sahf
dec
lcall
jae
mov
outsl
fmull
out
pop
les
ret
xor
das
es
sub
adc
jbe
shrl
cmp
loop
pop
imul
in
fs
or
cmp
mov
loope
in
rolb
mov
lcall
add
out
add
in
rcll
adc
int
ret
in
dec
push
out
stos
rep
xor
and
add
jge
bound
lods
movsb
mov
scas
lret
pop
sub
adc
int3
cmp
push
enter
loope
mov
lock
and
xor
mov
dec
lcall
cld
mov
xchg
cmp
out
xchg
push
clc
das
daa
cmp
inc
mov
or
fisttpll
adc
adc
push
xchg
push
pop
jnp
into
outsb
push
mov
or
push
inc
mov
inc
std
ficompl
shrl
jge
xchg
xchg
sahf
mov
sbb
mov
push
loope
bound
xchg
loope
xchg
cmp
idiv
repnz
inc
test
pop
test
shl
or
push
les
in
cmpsb
adc
mov
pusha
leave
fistpl
and
jns
fmull
rcrl
fildl
mov
inc
fldl
adc
incb
arpl
shlb
scas
mov
xor
enter
push
mov
jmp
pop
mov
sbb
or
push
stc
mov
addr16
rcll
lods
rclb
in
and
lods
pop
lret
jg
inc
fnsave
cmp
bound
inc
shll
faddp
int
cmp
das
xchg
push
repz
in
mov
repnz
xchg
jae
loopne
jo
pop
push
orl
int3
leave
xchg
inc
mov
dec
mov
or
jne
cmc
xchg
add
push
push
ds
lea
mov
sub
cmpsb
push
sar
in
cmpsb
sbb
shrl
jns
mov
add
sbb
cli
sti
jge
mov
mov
push
and
arpl
jno
cmc
and
fidivs
xor
xchg
ds
clc
mov
jg
jle
pop
mov
jp
or
fs
aad
test
shl
cmp
sbb
or
mov
jbe
sti
outsb
cmp
xor
add
pop
insb
in
imul
add
add
or
jnp
mov
lods
inc
pop
dec
lret
mov
sub
mov
ret
or
push
inc
mov
jne
xor
push
jg
les
stos
stc
in
mov
lock
jmp
add
jmp
push
adc
lds
scas
jge
ds
jg
loope
dec
ds
push
mov
sbb
rolb
data16
nop
and
xchg
mov
lods
and
sub
pusha
and
or
or
pop
cmpsl
out
fwait
paddq
jns
add
jmp
lret
jne
fistl
out
cmc
test
mov
ret
xchg
add
icebp
push
stos
xchg
push
add
sbb
push
stos
jno
ficoml
mov
rcl
mov
sarl
and
sub
adc
add
bnd
lods
inc
xchg
test
ss
shlb
push
je
idivb
fsubrl
ret
ret
push
dec
notl
xor
xchg
lcall
sub
jb
pop
add
mov
cld
shrb
mov
jl
inc
add
sti
jle
negl
mov
shll
xor
mov
fchs
lret
push
cmp
fstp
fmul
cld
cmpsl
push
xchg
rcr
mov
int
aam
xchg
sti
fwait
jnp
adc
adc
jno
pop
sub
pop
jg
lds
adc
dec
mov
insl
jge
pop
in
jge
aad
lock
inc
aas
shll
lcall
mov
mov
stc
dec
rolb
gs
cmc
adc
test
loope
movsl
js
mov
lahf
movsl
loope
inc
pop
mov
xor
imul
cmp
movsl
repz
bound
jge
mov
xchg
in
jmp
fbld
sbb
adc
shlb
or
mov
pop
cmpsb
jb
inc
add
fistpl
jp
nop
mov
cwtl
icebp
cli
loope
in
enter
mov
das
je
or
psrlw
dec
inc
pop
in
inc
mov
fsubr
addr16
sub
mov
ret
inc
sub
mov
cmc
dec
pop
les
out
scas
mov
xchg
jbe
fldenv
into
xor
gs
lock
or
loope
mov
sbbl
xor
daa
loop
jo
sbb
hlt
into
lock
mov
arpl
pop
popf
sub
sbb
leavew
pop
hlt
jae
add
test
sahf
jae
or
jae
push
pop
cmp
jl,pt
cmp
sub
lret
lea
mov
aam
add
lahf
stc
adc
out
sub
lods
out
out
cmp
adcb
mov
push
imul
movsb
repz
shrl
lcall
ss
xor
mov
into
xor
into
mov
adc
test
test
adc
outsl
int
jge
pop
outsl
pusha
add
adc
stos
or
push
mov
sub
fcmovb
rcr
mov
and
in
xchg
push
shr
out
gs
mov
pop
xor
pop
lea
mov
mov
or
and
in
into
push
add
mov
lret
ret
inc
iret
or
push
in
fnsave
ja
dec
xchg
jge
pop
das
flds
lret
lahf
xor
ret
and
mov
xchg
movsl
lock
jns
pop
rcrl
pop
sbb
jns
cld
jle
push
or
loopne
dec
cwtl
fdivr
iret
cmp
mov
xor
lods
cmp
sbbb
aaa
jbe
movsb
and
push
pop
mov
push
mov
or
sahf
sbb
pop
faddp
mov
mov
sbb
aam
in
fstpt
test
inc
gs
and
push
sbb
add
mov
dec
lods
iret
cld
jge
pushf
mov
sbb
mov
inc
into
mov
jae
dec
fdivrl
lods
mov
sub
mov
stos
mov
pop
aas
loope
gs
and
sbb
pusha
js
jo
push
cmp
xchg
cli
cmp
jmp
icebp
test
iret
push
ss
push
out
movsb
cmp
repz
and
cmp
pop
fs
loop
scas
push
inc
into
cmp
xchg
add
jg
sbbl
pusha
cs
cmp
and
mov
push
push
xor
sub
and
cld
mov
out
mov
jae
jge
cmp
cmp
lods
nop
stc
dec
fildl
push
shlb
stos
shl
cmpsl
cmpsb
xchg
mov
cltd
in
scas
inc
and
dec
stos
mov
out
mov
in
std
frstor
add
or
in
jmp
cmpsb
push
dec
mov
and
pop
and
stc
sahf
test
sub
mov
inc
mov
jb
mov
and
cld
mov
lds
mov
mov
pop
nop
or
inc
jo
lods
xchg
push
icebp
fnsave
sbb
cli
and
mov
pop
inc
addr16
adc
cmp
add
dec
mov
and
adc
mov
iret
inc
or
cmp
mov
imul
ds
imulb
ret
push
pop
cmp
sub
jb
inc
ljmp
adc
push
push
pusha
inc
inc
fildl
or
dec
pusha
jne
push
aaa
lea
mov
movsl
push
and
pop
cmp
and
pop
test
cmc
push
jo
call
xor
jp
test
push
out
add
xchg
addr16
and
pop
jb
inc
cwtl
push
ret
test
inc
xor
push
sbbb
test
xor
movsl
daa
push
pop
add
mov
popf
add
or
adc
cltd
fsts
mov
ffreep
repnz
orl
sbb
or
dec
or
sub
ja
pop
pusha
cmpsb
and
pop
scas
inc
xlat
adc
lea
mov
or
push
jg
jno
test
je
dec
negl
push
jmp
cmp
pushl
ret
jg
mov
xchg
inc
enter
cmpsl
roll
mov
inc
addr16
or
xchg
sub
dec
jle
repnz
lock
loopne
aas
out
dec
xchg
pushf
mov
xchg
push
push
mov
test
xor
stos
scas
adc
push
and
out
push
ds
dec
fcomi
mov
jne
int
sbb
cmc
outsl
imul
das
inc
mov
hlt
das
mov
and
cmp
mov
loop
sbb
test
dec
xlat
popf
test
xor
adc
mov
sti
pushf
xor
mov
shl
testl
mov
mov
mov
jns
aas
or
mov
xchg
rolb
filds
leave
aaa
jbe
daa
mov
xor
or
push
and
or
filds
pop
inc
and
xor
and
push
roll
mov
in
sbb
adc
fs
cli
or
mov
insl
fwait
and
mov
jl
sbb
and
and
mov
mov
roll
sbb
and
cmp
jp
xchg
fiaddl
xchg
subl
push
stc
or
lahf
dec
dec
xor
incl
aas
je
jns
sbb
fcmovnbe
in
mov
pop
sbbl
mov
inc
push
sbb
insb
jmp
js
xchg
ret
test
popf
inc
movsl
adc
dec
mov
jb
lods
dec
movsb
fdivl
repz
cmp
mov
lcall
jno
loopne
testl
jae
pop
cmp
sbb
push
adc
mov
insl
push
mov
push
mov
push
cltd
daa
mov
jmp
mov
inc
outsl
sub
inc
cmp
and
jns
cmp
sbb
movsl
mov
cwtl
jg
test
dec
dec
out
das
ljmp
rcr
pop
outsl
mov
stos
data16
fnstenv
pushf
lcall
xchg
test
insl
xchg
xchg
sti
sbb
jbe
neg
ljmp
ss
fsub
lods
sahf
xor
mov
hlt
mov
jp
outsb
popf
mov
cmp
adc
xchg
push
cmpl
inc
test
imul
xlat
or
push
sbb
jl
sbb
xlat
or
xlat
icebp
aas
call
push
push
inc
ret
or
jmp
imul
push
mov
and
scas
in
ljmp
filds
push
ss
inc
inc
pop
sub
mov
adc
mov
mov
lock
stos
xchg
jne
push
fs
fs
and
xchg
mov
int3
lock
lods
enter
test
aas
dec
sti
ja
pop
mov
cmp
adcl
pop
stos
jns
xor
or
insl
push
popf
ret
push
mov
xchg
pop
mov
out
pop
in
ds
cmpsb
repz
jae
push
mov
mov
loop
dec
jp
pop
pop
fdivrl
add
and
int
ds
lds
mov
add
sbb
fcoml
lods
inc
bound
push
outsb
fdivr
adc
cmp
je
pop
pop
pop
adc
mov
mov
outsb
cmpsl
js
and
inc
bound
jnp
cwtl
out
add
mov
jmp
cli
dec
cmpsl
add
nop
popf
pop
ds
inc
nop
inc
adc
pop
cmp
jb
and
add
fstpt
fs
and
out
popa
jne
mov
loopne
sti
fwait
les
test
fsubp
sbb
repz
mov
icebp
mov
out
bnd
ret
and
into
lret
and
jg
scas
add
cmp
scas
gs
aam
xor
popa
sbb
in
push
or
inc
stos
out
sti
enter
fbstp
int3
cmc
push
and
arpl
lret
and
pop
push
loope
lock
mov
cmp
cld
pop
nop
adc
adc
arpl
inc
xlat
jb
cmp
xchg
lds
push
out
aas
int3
cmc
push
es
sub
xchg
jne
out
or
mov
cmp
mov
pop
jecxz
in
fmul
adc
hlt
in
hlt
lahf
jmp
dec
mov
dec
pop
ljmp
aas
and
xorl
inc
les
movsl
dec
cmc
xchg
sbb
shrl
sbb
lret
mov
mov
mov
aaa
mov
std
sahf
jae
mov
fdivrs
lret
data16
test
xor
bound
rcrb
xchg
jae
shl
std
call
notb
or
das
adc
test
push
nop
fildll
fistpl
pop
push
jb
inc
shrb
cmp
xchg
sub
jno
mov
sub
aad
fwait
push
addr16
lods
and
jno
sbb
in
jg
and
ja
ficomps
pop
dec
addr16
aad
shl
or
mov
xor
mov
push
xchg
xor
mov
lods
mov
mov
xchg
cmp
shll
mov
cld
call
sub
and
enter
cmp
pop
ljmp
hlt
out
aad
cmp
dec
fwait
aam
jecxz
in
stos
aas
out
rcrl
inc
out
mov
pop
lcall
test
mov
adc
cmp
fadds
inc
popl
cltd
push
pop
pop
fildl
rcrl
fimuls
ds
jne
daa
push
mov
scas
cmc
and
pop
cmp
xor
or
leave
test
data16
mov
aaa
cmc
idivl
cmpsb
inc
xchg
in
jge
sbb
insb
dec
outsb
mov
lret
push
bound
mov
push
mov
pop
icebp
inc
leave
int3
loope
aas
or
mov
popf
cmp
iret
lahf
hlt
push
loope
outsb
push
js
mov
pop
xchg
xor
cltd
xchg
xor
icebp
xchg
mov
or
stos
ds
cmc
stc
xor
mov
push
push
pop
imul
inc
pop
out
sar
ret
std
pop
nop
ret
adc
lock
sub
fptan
lret
inc
add
ret
lret
cmpsl
push
popa
scas
aas
or
mov
mov
shlb
mov
add
xor
adc
hlt
xor
or
and
std
data16
add
xchg
lcall
xchg
int3
ja
out
mov
popa
inc
push
outsl
std
pop
stos
or
mov
inc
aaa
mov
rcll
mov
dec
xchg
lret
jno
adc
shrb
add
jno
fldcw
jo
into
jl
mov
cmp
dec
cwtl
mov
daa
popa
test
cmpsb
add
mov
ds
bswap
gs
lret
ss
mov
insb
fwait
add
fs
into
xchg
mov
mov
loope
hlt
and
loope
jl
add
lcall
sub
out
cmp
cs
loope
add
std
xor
adc
xchg
cmp
add
xor
jnp
pop
sub
cmp
dec
fisttpl
fucomp
xor
test
ss
jmp
xchg
or
inc
and
shr
in
cs
je
inc
fdivrp
mov
into
push
sub
sbb
jnp
mov
cmp
inc
jns
ret
lret
stc
xchg
cmc
jmp
adc
je
push
iret
sub
mov
mov
mov
cmp
pop
jle
push
test
cmpsl
fcmovnb
mov
adc
lds
adc
dec
mov
sbb
xor
sub
das
mov
loop
rclb
mov
xor
fistl
in
negl
icebp
ljmp
inc
add
push
jns
push
push
sbb
in
push
js
mov
push
fists
sub
out
xchg
stc
dec
or
loope
mov
push
adc
pop
aaa
int3
jge
xchg
sbb
fnstsw
mov
into
push
mov
fists
adc
jp
xor
cmc
pop
movsb
addb
stos
or
les
and
ret
call
testb
mov
out
mov
in
aad
fcomi
mov
jb
movsl
jp
mov
mov
std
scas
cmpsl
mov
xchg
cmp
inc
cmp
fcmovb
cmpsl
pop
fsubrs
leave
fchs
ja
lcall
xor
xchg
sub
out
adcl
cs
xor
aaa
pop
rol
ja
dec
mov
ja
in
sub
add
xor
dec
xor
mov
int
sub
cmp
sbb
cmp
cs
lret
dec
frstor
adc
inc
orb
enter
cmpsl
rcll
mov
roll
dec
sbb
test
cmp
pop
fidivrs
mov
jbe
hlt
int
pop
popf
pusha
push
popf
jmp
cmp
push
fnstenv
out
out
lret
jns
fwait
ljmp
mov
and
adc
push
inc
aad
jo
dec
bound
aas
lahf
dec
push
in
inc
add
insb
fcompl
mov
fimull
dec
add
mov
ljmp
ss
mov
enter
les
dec
movsl
inc
subb
dec
cmc
js
mulb
inc
dec
pop
fs
jnp
mov
mov
and
imul
add
sub
mov
push
mov
out
xlat
lahf
cmp
lret
sbb
ds
scas
arpl
inc
out
js
xchg
outsb
sbb
clc
fmull
xchg
cmovs
jle
mov
cmpl
enter
lcall
lahf
jmp
mov
mov
out
mov
loopne
aad
adc
xor
mov
mov
cmp
or
repnz
xor
or
loopne
mov
mov
mov
test
inc
sbb
and
jnp
jge
mov
push
movsl
popa
lahf
sbb
pusha
xor
out
cmp
mov
pop
out
popf
movsl
mov
adc
es
push
lahf
rcrb
mov
pusha
rolb
scas
test
lods
mov
mov
sub
cmpsl
ds
popf
lods
test
and
mov
and
inc
aad
mov
hlt
and
sti
test
or
adc
push
pop
scas
jne
popa
mov
into
aad
inc
repz
into
or
fidivl
loope
loope
std
rolb
push
nop
or
pop
sub
insb
sub
jg
insb
lahf
mov
loop
shl
inc
adc
jns
es
mov
pop
cld
aam
inc
xor
outsb
mov
jns
test
imul
lcall
movsl
stc
push
xchg
pop
cwtl
inc
mov
mov
xchg
fs
and
inc
pop
pop
js
xor
stc
and
adc
jb
aaa
movsl
cmp
sub
int
sub
pop
jae
sub
pop
pop
pushf
nop
mov
in
adc
pusha
movsb
mov
jle
syscall
mov
cltd
test
icebp
xchg
fwait
insb
repnz
adc
push
pop
pop
sub
call
or
in
pop
sbb
stc
imul
jmp
aam
xor
inc
in
mov
adc
mov
mov
xchg
dec
sbb
cmp
sarb
fbld
lds
sub
add
sbb
pushf
lcall
sub
cwtl
callw
add
in
lea
sub
xchg
out
movsb
pushf
std
std
aas
clc
lcall
xchg
jne
pop
nop
mov
fidivl
mov
aas
les
in
push
jge
pusha
into
popa
mov
in
bound
nop
adc
fnstenv
xchg
dec
test
shlb
imul
inc
push
int
out
into
lcall
hlt
mov
jle
push
enter
and
or
loopne
lods
add
cwtl
push
mov
sub
sbb
ficoms
fbld
cs
fstl
push
jp
or
repz
loopne
mov
pop
jne
fs
add
xchg
hlt
fcomps
adcl
or
popl
lea
sub
mull
pop
das
xor
jmp
xchg
mov
add
out
adc
adc
mov
xchg
sub
mov
hlt
inc
xchg
pop
arpl
or
sahf
jg
xlat
nop
xor
mov
mov
dec
aam
out
or
idivl
fnstsw
dec
adc
pop
sub
mov
push
cmp
dec
or
inc
or
adc
cmp
ds
sub
sbb
es
add
cmpsl
xchg
adc
push
out
xchg
mov
or
jl
aam
xor
xor
pop
cld
cmpsl
sbbl
mov
gs
jge
mov
fnstenv
mov
das
loop
out
out
add
mov
add
cmp
mov
sub
inc
jbe
out
push
mov
mov
or
arpl
push
fcmovb
xchg
test
pusha
je
mov
pop
pop
leave
fs
jge
inc
sbb
xchg
and
inc
add
push
pop
push
cmp
repnz
sbb
out
mov
lods
and
int3
push
rolb
sbb
popf
push
cltd
push
dec
iret
cmc
sbb
xor
out
xor
in
xchg
mov
mov
lahf
adc
adc
mov
inc
pop
nop
test
aad
sti
sti
nop
or
fs
outsl
sub
lods
dec
repnz
add
rclb
jnp
jl
shlb
cmpsl
push
scas
dec
mov
sbb
mov
ljmp
mov
mov
pusha
inc
or
stos
aam
cmp
xor
xor
push
sbb
mov
xchg
push
pop
sub
movsl
push
xchg
inc
in
shlb
dec
mov
aas
imul
xchg
hlt
int
add
and
int
dec
jmpw
in
xor
outsl
ficomps
push
jae
test
insl
adc
and
sub
mov
rcr
fiadds
rolb
and
dec
sbb
arpl
add
dec
sarb
out
sbb
xlat
arpl
mov
icebp
push
loopne
clc
ds
cmp
in
nop
int3
push
xchg
cmp
adc
push
push
xor
push
cmp
xchg
leave
sbb
lret
fbstp
xor
icebp
xchg
mov
adc
addb
test
sbb
cld
cmpsl
sub
cld
pop
int
fldl
mov
jns
mov
es
or
bound
jne
es
sahf
or
gs
dec
and
push
sbb
gs
pop
icebp
imul
xchg
sbb
push
push
lret
mov
inc
outsl
xor
sbb
push
dec
fwait
stc
mov
and
add
jecxz
add
js
into
shl
mov
xor
and
andl
xchg
mov
and
pop
mov
fcomps
cmp
dec
mov
scas
pop
sub
test
test
inc
mov
scas
xlat
mov
mov
cltd
xchg
jecxz
xchg
sub
mov
sbb
rcrl
xor
sub
outsb
outsb
add
add
cmc
pop
into
stos
cmovp
cmp
mov
stc
cwtl
xchg
dec
jg
sub
ds
leave
dec
dec
std
xor
push
jmp
imul
cmpsb
imul
mov
hlt
repz
rclb
shll
mov
faddl
mov
pop
aam
add
sub
mov
jae
mov
filds
and
xchg
adc
test
or
aam
dec
mov
fldl2t
cmp
dec
pop
push
faddl
cmpsb
add
xchg
xor
mov
sub
in
out
xchg
call
ret
adc
jp
movsl
dec
and
jae
jo
out
movsb
movl
mov
inc
cltd
add
dec
or
stos
aaa
addb
or
fdivrs
add
hlt
xchg
mov
adc
add
sub
pushf
pop
cmp
into
imul
outsl
imul
shrb
add
idivl
in
sub
jns
shrb
loop
lea
mov
outsl
pop
lret
iret
xchg
mov
in
and
aam
adc
repz
nop
add
pop
daa
pop
mov
push
xor
dec
and
rorb
test
mov
or
fnsetpm(287
adc
subl
sbb
sub
xor
outsl
imul
cs
cmc
sub
inc
inc
arpl
movsl
clc
dec
ljmp
ja,pn
pop
aaa
inc
inc
stos
pop
push
xchg
fildl
add
mov
sahf
mov
pop
test
mov
mov
sub
repnz
cmp
jne
xchg
sub
lods
fstl
mov
bound
adc
insb
inc
test
jnp
mov
xchg
test
cwtl
xchg
testb
cli
cwtl
xbegin
adc
xchg
loopne
les
sub
or
insb
adc
pop
mov
and
sub
xchg
in
cmc
dec
das
cmp
fcomip
fs
and
add
mov
add
in
pop
test
lds
sbb
in
test
push
into
dec
insb
add
mov
mov
mov
orb
xchg
or
int3
xchg
popa
xor
jae
cmc
jns
xchg
lcall
inc
inc
xor
or
bound
pop
mov
sbb
lret
pop
fcmovb
adc
xor
xchg
and
xchg
stc
xchg
push
aad
push
push
cmp
lret
pop
in
jbe
repnz
mov
aad
in
cmp
adc
mov
ja
inc
movnti
pop
add
add
movsb
std
pop
movsl
jne
imul
push
roll
or
movsb
jecxz
flds
out
add
repz
repz
mov
push
sbb
jg
sbb
js
scas
arpl
xlat
bound
bound
int3
rorl
or
push
outsl
sbb
out
push
push
jp
stos
or
loopne
jo
inc
pop
lods
je
dec
out
idiv
repnz
arpl
jecxz
les
in
into
icebp
add
add
sbb
add
test
mov
adc
jge
xor
push
sbb
pop
lock
inc
jae
popa
xchg
jo
sub
sbb
aad
jg
sbb
push
sub
ficoml
dec
movsb
scas
int3
inc
xchg
aaa
pop
lea
push
jae
cs
scas
adc
cltd
arpl
movsl
cltd
mov
fldt
stc
adc
sbb
pop
xchg
sub
adc
shll
rcl
dec
es
sbb
xorl
jno
xor
and
adc
fdivrl
xor
or
call
inc
xchg
xchg
sti
mov
xor
xor
mov
popl
xchg
xor
xchg
ret
hlt
inc
dec
mov
pop
fidivs
add
xor
lcall
scas
mov
fnstcw
mov
lret
mov
adc
subb
fwait
cmp
stc
aas
jp
pop
sub
xchg
scas
xchg
or
xchg
decb
iret
xor
sub
test
or
dec
mov
ja
andb
hlt
dec
push
adc
aaa
mov
pop
fstp
iret
mov
mov
push
and
sub
xchg
ss
sub
sbb
and
clc
lds
mov
in
lea
sbbb
mov
ja
lods
cmc
mov
movsb
cwtl
pop
or
or
pusha
and
pop
push
lret
icebp
insl
xchg
pop
dec
mov
stos
mov
rclb
push
scas
push
cld
movsb
dec
fsts
pop
xchg
lods
mov
push
mov
sub
sti
add
add
dec
sbb
adc
mov
movsl
test
xchg
test
jle
fnstenv
out
jbe
xchg
lret
scas
insl
push
mov
movsb
jo
xlat
or
cld
je
out
cld
lret
enter
insl
pop
dec
pop
movsl
aad
mov
add
mov
cmpsl
inc
imul
jp
push
adc
pushf
cmp
or
dec
push
cld
in
movsl
into
test
out
or
mov
inc
repnz
mov
lcall
adc
mov
mov
push
push
stos
or
mov
add
cmp
inc
outsl
or
mov
iret
cmp
rcll
fcmovb
and
js
push
add
out
cmpsb
mov
push
cmc
adc
fildll
or
inc
dec
popa
mov
and
sbb
clc
ret
or
sub
jns
lea
mov
cmp
push
jl
std
push
mov
iret
xor
into
dec
xchg
jle
cmpsl
imul
mov
fsts
jp,pt
data16
push
mov
dec
push
ja
lds
es
sti
in
add
test
push
xor
in
mov
adc
pop
movsl
cmp
mov
or
out
sub
pop
and
addr16
mov
mov
cmp
bound
sbb
or
fistpl
pushf
sbb
adc
mov
add
dec
leave
loopne
xchg
cmpsb
repz
fwait
loop
insb
out
fisubrs
inc
xchg
mov
cmp
and
or
arpl
xor
repnz
xchg
addr16
fadds
addr16
pop
jae
pop
jb
pop
popl
cmc
fistpll
xlat
dec
fistl
fisubrs
int
jmp
aam
dec
sbb
sbb
loopne
adc
xor
subl
sbb
movsb
mov
push
lahf
or
bound
xchg
sbb
mov
jne
add
outsl
fwait
dec
push
push
push
mov
add
cwtl
call
cmpsl
arpl
or
stos
aad
add
in
jns
aaa
pop
ja
in
call
shll
xchg
out
lcall
jle
mov
xor
pop
imul
loopne
repz
movsl
adcl
insl
mov
push
mov
or
push
inc
pop
mov
and
pop
popf
xlat
loop
cmp
imul
mov
xchg
lods
jb
stos
pop
adc
xor
ret
std
ljmp
fcompl
in
rorl
pmaxsw
cli
mov
pop
sti
cltd
mov
or
lahf
in
out
mov
mov
sbb
arpl
mov
fcomps
cmpsl
lcall
icebp
cmpsl
mov
pop
je
cmp
addr16
add
sbb
movsb
shl
in
dec
jg
xlat
add
jle
sbb
mov
mov
aaa
adc
mov
gs
pop
dec
imul
push
push
pop
and
jns
cmp
pop
les
es
in
lock
fstpl
add
lcall
push
jbe
sbb
lcall
push
lock
cmc
ss
dec
cmpsb
call
or
aam
shll
and
lock
fnstsw
and
rcrl
push
pop
jbe
leave
cwtl
sbb
mov
fdivrs
mov
in
cmp
in
pop
je
mov
dec
push
cmp
nop
test
dec
movsl
call
movsl
push
push
jmp
call
mov
cmp
aam
stc
mov
jb
fbstp
xchg
inc
mov
mov
insl
inc
push
aaa
jmp
orb
gs
sbb
and
pop
fcmovnbe
add
or
cmpsl
xlat
dec
or
fisubrs
jle
and
aam
sbb
sbb
pop
addr16
popa
arpl
xchg
xchg
add
scas
popa
test
sub
cmpsb
mov
and
jmp
ret
cltd
out
nop
int3
xchg
push
xor
mul
jbe
dec
scas
push
dec
nop
dec
jnp
push
pop
int
lcall
call
dec
call
cmp
sti
mov
adc
xor
fcomps
cs
mov
in
loop
sub
mov
ret
out
sub
jl
sub
lahf
mov
imul
mov
ljmp
stc
loopne
sub
mov
sbb
and
ret
jp
stos
fldcw
fadds
dec
mov
pusha
and
push
movsl
dec
add
es
dec
mov
inc
fcoms
pusha
push
push
arpl
je
push
adc
scas
cmc
in
pushf
pop
dec
xor
push
xor
ljmp
int
cmp
xchg
adc
popl
mov
jmp
mov
adc
decb
icebp
mov
xlat
fwait
in
xor
adc
xchg
and
stos
pop
mov
mov
or
mov
stos
dec
negl
movsl
cmp
les
lret
lock
jno
bound
sub
mov
rcrb
xor
pop
mov
movsb
repz
and
lcall
or
dec
jno
mov
dec
mov
pop
pop
ja
cli
iret
jb
jo
jecxz
rorl
push
push
dec
hlt
xcrypt-ctr
cmpsl
fcmove
mov
push
sahf
lret
loopne
out
scas
leave
dec
movb
cs
adc
mov
movsl
pop
fiaddl
shlb
rcl
dec
inc
add
ret
insl
adc
movsl
dec
rorl
daa
fsubrs
into
sub
mov
sti
je
inc
inc
jp
xchg
mov
loopne
loop
gs
pop
std
test
mov
into
lock
sar
scas
sbb
dec
ret
out
insl
scas
pop
aam
scas
sti
xchg
in
xor
bound
gs
add
pop
leave
lds
push
or
xchg
scas
pusha
ds
sub
push
sahf
cmp
aam
pop
mov
adc
cmc
std
cmpsl
pop
out
mov
mov
shll
mov
cli
out
jp
bound
and
sar
mov
jno
xlat
and
pop
cmp
es
aaa
sub
test
sub
cld
leave
sub
sbb
aad
add
xchg
data16
mov
mov
inc
test
neg
xor
inc
jl
iret
adc
pop
jns
mov
push
xchg
pop
subb
xchg
adcl
jle
imul
mov
frstor
or
jae
and
out
mov
and
fnsave
repnz
or
mov
push
sub
xor
out
inc
dec
adc
out
mov
mov
mov
lea
ljmp
sub
rorb
aad
xchg
sub
inc
and
into
rcl
adc
andb
sub
xchg
mov
fbstp
mov
mov
adc
shlb
mov
arpl
fs
push
mov
add
adc
xchg
andnps
jle
mov
and
mov
lods
cmp
sub
mov
popf
cmp
jmp
roll
jne
insl
push
dec
mov
inc
scas
mov
std
pop
nop
jne
cld
dec
adc
pop
mov
lret
movsb
mov
mov
sub
adc
sbb
xor
shl
sbb
add
adc
lods
cli
xlat
inc
jecxz
lret
cmp
out
dec
dec
sbb
mov
push
jp
xor
push
mov
test
push
fcmovnu
aas
movl
push
dec
es
addb
pop
clc
sbb
mov
out
adc
push
jl
sub
cmp
loopne
xor
rcll
insb
pop
out
cmp
sub
jno
daa
inc
iret
or
aaa
ljmp
inc
dec
in
rcll
addl
insl
mov
mov
test
xchg
adc
cltd
mov
adc
cmp
mov
dec
xchg
mov
and
or
cmp
mov
dec
test
test
lods
mov
xor
es
dec
clc
out
mov
out
test
push
sub
add
mov
lahf
add
loope
pop
or
xchg
cmpsb
lds
xor
and
cmpsl
bnd
add
and
insl
in
es
int
add
je
int
mov
es
mov
sahf
stos
lret
pop
push
mov
mov
or
mov
ds
sbb
adc
and
push
add
pushf
stos
jp,pt
lea
mov
mov
outsb
lret
xor
loop
xchg
jecxz
and
fmul
in
outsb
mov
xchg
adc
inc
or
stos
dec
ss
jb
cmp
push
add
or
push
xor
inc
xlat
idivl
sub
mov
adc
pop
dec
sub
or
mov
clc
cs
into
push
add
xchg
dec
pop
mov
and
popf
int
test
jg
orb
mov
jle
out
xor
xor
lea
lds
mov
jmp
mov
or
mov
sub
out
lods
or
pop
push
push
dec
dec
movsl
int3
iret
pop
loop
ret
cmp
push
mov
vpermilpd
test
mov
sbbl
mov
pop
jmp
movsl
add
jne
lock
ffree
ljmp
sbb
insb
aaa
test
dec
or
out
push
fnstenv
add
imul
pop
push
sbb
or
cmp
sub
pop
sub
popf
jge
lret
jnp
aam
daa
jo
dec
sahf
push
mov
repz
addr16
lahf
ljmp
popa
loope
mov
xor
and
stc
jmp
mov
stos
test
sarl
mov
sbb
push
fstl
cmp
dec
jp
js
inc
inc
push
xchg
fs
leave
rcrb
ret
mov
lahf
or
sbb
or
pop
xchg
dec
add
mov
push
outsb
sahf
sub
sarl
jno
aam
sahf
and
loopne
xchg
xchg
inc
add
pusha
test
adc
les
dec
cmc
das
mov
bound
ss
push
pop
lea
rcll
outsb
lahf
pusha
lds
pop
push
out
mov
daa
mov
popl
adc
lea
mov
xchg
jne
mov
dec
add
adc
loopne
sbb
fistpll
dec
push
xor
repz
enter
lock
daa
mov
scas
xchg
xchg
inc
inc
xrelease
jmp
mov
xchg
ss
inc
jnp
pextrw
xor
out
inc
cwtl
clc
ds
push
mov
aad
fildll
pop
mov
loopne
sub
sarb
adc
dec
ret
xchg
mov
adc
inc
or
cltd
xchg
sbb
jg
fimull
cmpsb
xchg
xchg
sub
mov
pop
push
xor
xor
mov
push
add
mov
popa
fwait
stos
push
movl
imul
inc
cwtl
ljmp
das
pop
addr16
test
pop
mov
fwait
movsb
fdivrl
pop
sub
clc
and
jae
adc
cmpb
clc
push
jge
jae
repnz
xor
movsl
test
push
aad
pushl
pop
inc
cmp
inc
sub
lock
add
test
shr
ret
cs
aaa
test
pop
into
decl
fcoml
xchg
mov
mov
ljmp
cs
call
push
or
push
jmp
out
jnp
mov
out
push
clc
mov
mov
insb
aad
or
imul
cmp
cmpsl
clc
or
dec
stos
jb
add
inc
sbb
ret
sbbb
adc
sub
xchg
pop
sub
dec
jecxz
mov
xchg
push
movb
fs
pop
inc
mov
gs
dec
xchg
cmp
fs
cmc
divl
addr16
mov
inc
adc
sub
add
mov
inc
bound
aaa
popf
pop
gs
pop
sub
sbb
js
test
adc
pop
inc
mov
xchg
xchg
inc
and
pop
iret
push
inc
rcrb
pop
sar
ja
adc
dec
scas
decl
dec
andb
inc
fists
and
mov
loop
push
jb
sahf
ret
jge
and
roll
inc
jmp
shl
push
add
out
stos
ret
fmull
push
cmc
pop
mov
xor
out
or
pop
das
roll
xchg
jae
pop
enter
in
ficoml
cmpsl
pop
inc
jnp
ja
cmp
lds
adc
sbb
and
out
add
addl
aad
aas
and
xor
mov
jo
sysexit
mov
xchg
add
xchg
jge
xor
sub
std
out
xchg
xor
lahf
and
push
sub
sub
inc
push
shrl
push
pusha
push
lods
out
xchg
stos
cs
lods
push
ficoml
mov
adc
add
pxor
pushf
leave
in
xchg
aas
cmc
sub
daa
or
jecxz,pn
cmp
notb
add
or
sbb
or
andb
xchg
test
add
cwtl
sub
push
pop
fs
inc
fiadds
aad
pop
insb
test
xchg
popa
fcomps
adc
mov
sbb
pop
out
cmpsb
fnsave
lods
mov
js
xchg
mov
cwtl
mov
push
xchg
adcb
sti
lea
push
jge
mov
push
push
push
adc
xchg
gs
mov
fidivs
xchg
or
adc
sbb
mov
lock
call
and
mov
ret
cmpl
cs
mov
push
push
jmp
mov
fbld
fdivl
xor
lea
mov
xor
imul
push
jg
push
daa
hlt
xor
inc
cmp
push
loope
inc
pop
xchg
inc
cli
jg
rclb
ds
pop
loope
push
and
mov
mov
add
fiaddl
notl
lret
sub
iret
xchg
mov
rolb
inc
negb
daa
xor
dec
jnp
test
sub
sbb
xchg
fptan
cmp
aaa
dec
fs
push
cld
sub
mov
aas
cmpsb
mov
xchg
shll
mov
adc
loope
arpl
scas
sbb
jae
inc
mov
ja
in
out
push
cmp
lahf
int3
int
flds
mov
jp
fstps
pop
ret
aaa
sbb
sub
into
add
adc
jmp
sub
mov
mov
xchg
mov
sbb
imul
cmp
mov
push
pushf
sbb
scas
inc
mov
jae
test
or
cmp
int3
js
push
sub
std
dec
fs
mov
fldl
add
pop
xor
push
inc
cmp
lods
insb
dec
cmp
mov
pop
sbb
fs
pop
pop
inc
mov
imul
pusha
adc
leave
cmpsb
sub
out
push
sti
sbb
data16
cmc
std
xor
mov
rcll
push
xchg
sahf
adc
or
lods
cmp
mov
icebp
mov
push
enter
jecxz
lcall
cltd
scas
pusha
out
out
je
jae
icebp
inc
inc
out
les
sub
aaa
int
jb
mov
orl
sbb
add
adcl
leave
bound
test
and
add
cmp
mov
sub
aaa
mov
or
mov
mov
daa
mov
in
daa
arpl
daa
aas
xchg
jne
arpl
js
out
shrl
push
sahf
loop
adc
pop
mov
dec
cmp
push
in
cmp
push
mov
ret
pop
jns
add
es
adc
or
push
and
loop
aaa
mov
in
jp
xchg
sahf
xchg
push
dec
ret
aad
shl
sbb
sbb
gs
sbb
out
bound
mov
jle
push
lret
movsb
pop
in
add
dec
rcr
xor
mov
xor
sbb
jge
mov
mov
xlat
call
mov
push
sub
add
cli
xor
pop
push
push
jmp
xchg
mov
push
push
cld
xor
inc
bound
shrb
jnp
mov
daa
fwait
xlat
pop
sahf
pop
fsubrl
mov
pop
xlat
in
lahf
ljmp
xchg
push
xor
lds
shr
mov
push
jbe
in
in
in
scas
cmc
jnp
rcrl
shrl
mov
mov
lcall
insb
sbbb
jge
xchg
xchg
jnp
pop
mov
popf
test
movsl
mov
fimuls
dec
jg
icebp
rclb
shll
push
sbb
jo
out
mov
lcall
jnp
jp
lret
push
pop
inc
popf
mov
jb
pop
jp
jl
ret
ss
or
fwait
in
xorl
data16
popf
jle
lret
adc
out
mov
jns
bound
xchg
rcll
sub
jno
in
shll
repz
pop
or
sub
stos
repnz
mov
test
incl
imul
incb
aaa
ljmp
mov
add
mov
xor
inc
and
pushl
movsb
jmp
dec
mov
iret
or
cmp
dec
adc
pop
sahf
loopne
pop
pop
fs
fsubl
push
xchg
roll
mov
out
cmp
jecxz
aaa
ss
les
adc
and
xchg
movsl
out
enter
jmp
pop
inc
loopne
jns
pop
mov
lea
daa
sbb
imul
divb
and
data16
push
mov
jecxz
scas
icebp
fwait
jecxz
mov
ds
movsl
lods
inc
in
loopne,pt
or
push
jne
push
movsb
add
stc
shl
fstps
imul
dec
negb
clc
dec
sub
sub
or
xlat
popf
fcmovnb
mov
test
fidivrs
and
lcall
push
shrb
mulb
rcl
sub
sbb
aam
jo
push
dec
sbb
test
imul
xchg
xor
xor
and
jge
mov
nop
test
pop
xlat
lds
outsl
unpckhps
dec
adc
cmp
add
pop
jbe
mov
or
adc
or
sbb
imul
out
push
ljmp
aas
xchg
repnz
aas
dec
push
hlt
cld
xor
push
cmp
cmpsb
hlt
jmp
push
mov
rorl
mov
fcoml
or
add
xlat
aam
iret
aam
xor
insb
jmp
hlt
add
xor
je
shrb
jns,pt
adc
enter
xchg
mov
pop
cltd
test
aam
inc
mov
jns
movsl
lods
xchg
jae
pop
jle
xchg
push
mov
cli
mov
cltd
xchg
cmc
cmpsl
in
rcrl
fcom
cmc
jnp
es
inc
aaa
push
xor
jbe
mov
ret
lock
fldcw
cmpl
imul
popf
hlt
inc
lcall
test
or
dec
icebp
inc
add
jo
dec
adc
out
adc
jno
movsb
push
js
aas
and
dec
push
out
and
or
fisubrs
push
adc
lahf
mov
repz
testl
ja
add
mov
dec
cmp
push
xor
cmp
mov
test
mov
add
jno
mov
add
jb
xchg
cmp
cmp
pop
cmp
das
repz
outsb
mov
dec
ja
add
xor
inc
mov
clc
mov
pop
jno
push
mov
or
xchg
lret
lahf
cltd
xor
rorl
mov
jne
fistpll
popl
shrl
imul
jl
sbb
cmp
aam
xor
insb
xchg
test
dec
dec
insl
ficompl
push
cmp
or
mov
in
popw
dec
jmp
dec
cmc
stos
add
dec
ret
mov
xor
xchg
sbb
jae
adc
cmp
lea
shlb
push
imul
push
jnp
test
mov
push
pop
sub
ret
or
into
gs
pop
push
ljmp
popf
jne
adc
loopne
push
imul
nop
fwait
imul
das
fsubr
jle
mov
mov
add
imul
pusha
xor
sub
div
push
inc
lock
pop
out
push
mov
mov
push
mov
xlat
popf
nop
fs
dec
iret
add
sub
mov
sbb
mov
xlat
inc
enter
lds
es
or
inc
jno
pop
push
scas
jmp
push
pushf
cmpsl
jmp
test
hlt
insl
into
pmullw
lock
xor
jb
or
shlb
lock
lcall
pop
ja
ss
cmp
lods
xor
lock
jbe
adcl
insb
rcl
adc
mov
pushf
popa
push
adc
cmp
orb
dec
adc
mov
jno
and
dec
cmc
insl
add
mov
mov
cld
jmp
mov
sar
outsl
xchg
xchg
adc
mov
imul
outsb
pop
push
adcb
div
lcall
lgs
inc
lea
jecxz
push
adc
stos
pop
inc
xlat
cld
test
add
iret
sbb
aas
sbb
or
lea
mov
mov
cltd
jbe
arpl
aam
lret
les
pop
fsubs
fists
into
int3
jne
pop
icebp
mov
dec
mov
pusha
sbb
shrl
or
iret
mov
cmp
and
or
in
push
out
roll
adc
dec
xchg
aam
sub
mov
scas
xchg
xchg
jb
and
dec
cli
jo
mov
pop
sub
int3
cli
bound
sbb
xchg
aaa
scas
xchg
ficomps
sbb
stc
sete
sub
dec
scas
dec
xchg
ficompl
test
jg
xchg
mov
xchg
push
or
push
mov
adc
repnz
inc
cmpb
stc
adc
ds
mov
jle
psubd
add
test
movsb
dec
les
and
lcall
fildll
dec
sahf
cmc
ja
sub
les
add
es
pop
lods
or
decb
aas
xlat
in
das
xchg
pop
nop
clc
pop
mov
lea
out
je
ret
push
adcb
sbb
xchg
push
test
xor
inc
push
mov
inc
mov
imul
cmp
jbe
cmpl
popa
fadds
jecxz
aad
push
xor
test
dec
sub
sub
and
jmp
dec
je
jle
mov
push
imul
adc
sub
and
pop
test
aad
scas
out
lods
lock
mov
rolb
pop
pushf
cmp
out
cmpsb
bound
insb
dec
sub
fs
mov
xchg
enter
jl
cmpsl
pop
mov
xchg
xchg
xchg
clc
push
mov
dec
das
into
jge
in
inc
xor
inc
cmpsl
cmpsl
faddl
insl
pop
mov
fnstcw
xor
jg
enter
mov
dec
or
xchg
in
adc
imul
stos
or
cmc
ficoms
aam
lock
add
imul
cld
dec
clc
push
dec
dec
subl
push
cs
mov
out
add
jns
roll
insb
jno
inc
shl
lret
es
aam
push
js
pop
cmp
jbe
or
pop
addb
dec
add
ds
mov
fdivr
push
inc
dec
inc
std
fwait
and
mov
jb
std
xchg
sbb
mov
mov
addr16
lret
mov
int3
add
out
into
pop
ds
gs
inc
mov
pop
sbb
mov
outsl
pushf
pop
hlt
loopne
xchg
rorb
and
jp
pushf
mov
or
fimuls
xor
outsb
outsl
and
es
shll
dec
mov
outsl
add
fs
adc
mov
mull
sarl
pop
xor
loopne
lock
sbb
outsb
dec
les
mov
pop
outsl
add
imul
jmp
sarb
push
testl
xor
ror
pop
inc
mov
hlt
cmp
pop
pop
ret
test
mov
pushf
stos
xchg
adc
into
xor
or
and
stc
jge
mov
or
mov
fbld
or
mov
push
lods
jne
sub
mov
jo
dec
pop
add
adc
lea
js
sbb
push
mov
test
cli
mov
pop
sahf
mov
pop
push
and
add
fs
add
repnz
fidivrl
movsb
sub
mov
sarb
cmp
and
jbe
loopne
add
mov
jbe
addl
aaa
arpl
add
mov
loope
pop
xor
das
and
fdivrl
lret
pop
or
jl
lock
fs
fcmovnb
push
or
inc
push
push
cmp
decl
lds
clc
push
in
shl
and
out
mov
iret
fwait
and
jge
lods
scas
sub
jbe
cmp
jne
call
inc
xchg
mov
cmpsl
and
icebp
inc
subb
dec
repnz
loopne
fucomi
fisttpll
xchg
xchg
rorl
test
cmp
in
sub
mov
sub
das
mov
add
cmpsb
ret
xchg
cmp
adc
push
push
addr16
xchg
dec
stos
inc
lods
cmc
leave
inc
jecxz
push
and
mov
xchg
jecxz
xchg
adc
ret
xchg
das
mov
fdivrs
out
xchg
mov
ret
jmp
jl
adc
int
sub
test
pop
nop
dec
out
jp
fwait
and
outsl
or
ss
incl
std
pop
mov
pop
js
lahf
gs
or
cmp
insb
jecxz
cmp
inc
xchg
mov
gs
pop
push
sbb
add
xchg
jo
adc
adc
sbb
cmp
mov
push
sbb
jg
push
mov
in
or
xchg
popf
out
in
andb
adc
and
adc
sahf
mov
lea
or
xchg
sbb
inc
sub
jecxz
add
insb
fisubl
jl
pusha
hlt
sub
ret
cwtl
mov
je
int3
inc
gs
or
sub
adc
cmp
push
adc
popw
popa
sub
shrb
clc
push
aas
out
lods
jns
sbb
mov
jno
lret
repnz
or
pop
xchg
dec
pop
xorl
andb
xchg
flds
aad
add
out
popa
xchg
sbbb
pop
ret
sbb
dec
add
fdiv
lds
dec
mov
adc
xchg
iret
lret
lods
jg
add
filds
pusha
out
leave
push
in
add
dec
push
scas
test
mov
movsb
aad
inc
mov
add
cmc
dec
mov
sarl
adc
mov
fwait
or
inc
mov
inc
xlat
jbe
or
push
shl
mov
lds
sbb
adc
insb
arpl
ret
lret
std
jecxz
lds
out
shlb
mov
ds
inc
or
cltd
test
sbb
jnp
popa
xchg
insb
pop
push
mov
outsl
sarl
sub
mov
cmpl
mov
mov
cmpsb
pop
ucomiss
arpl
sbb
and
mov
repnz
push
sub
addr16
out
xchg
inc
test
xchg
rcrl
xchg
push
bnd
cmp
xchg
loop
and
jl
jle
and
xchg
mov
hlt
push
mov
pop
out
dec
clc
jg
xor
mov
out
jne
cmp
jb
pusha
ret
into
mov
lock
mov
jmp
push
outsb
mov
fdivl
hlt
add
out
push
jae
les
neg
or
je
fdivrl
arpl
imul
xchg
ret
push
and
push
jp
jle
je
pop
mov
lods
dec
mov
dec
fimuls
mov
aad
nop
adc
and
sbb
xor
adc
dec
pusha
dec
add
stc
push
xor
mov
or
fisubrl
lods
out
int
jne
inc
lcall
cld
fwait
loop
inc
fisubs
mov
mov
outsb
std
out
sub
insl
lods
imul
nop
test
lock
jae
mov
and
imul
cmp
loopne
je
js
sbb
cmp
bound
add
popf
pop
loop
iret
cmp
mov
mov
jo
es
or
rcll
cmpsl
pop
repnz
mov
leave
outsl
sbb
dec
mov
dec
loop
enter
xchg
inc
fisttpll
push
mov
xchg
sbb
mov
and
subl
fmull
adc
int
gs
fwait
jecxz
adc
adc
imul
fsubrs
ret
add
sbb
lock
fs
gs
int
cwtl
add
or
jbe
push
lods
jl
inc
push
leave
pop
jo
sub
jnp
push
fisubrl
jns
lea
lea
and
and
movsb
lahf
imul
ja
mov
cmpsl
daa
aad
cs
outsl
adc
test
inc
out
popf
xchg
and
pusha
enter
sub
jne
sbb
sbb
xchg
pop
jp
repnz
pop
enter
shl
and
dec
dec
data16
das
inc
out
arpl
cmp
notl
gs
into
in
int3
or
or
outsl
xchg
clc
xor
mov
or
lret
pop
iret
das
xor
adc
pushf
push
stc
pop
mov
sbb
mov
push
xlat
sbb
adc
stos
insb
cs
push
jns
call
in
clc
loopne
mov
add
push
sub
push
ja
cli
mov
stos
shll
arpl
pop
les
rorb
stos
insl
lock
jne
or
int
mov
cltd
sahf
xchg
lret
je
or
test
adcl
push
in
cltd
adc
push
aaa
ficompl
sub
mov
mov
push
mov
or
push
test
outsl
inc
jl
fimuls
cmc
shrb
pop
daa
and
stos
inc
cltd
pop
cmp
cmc
push
sub
jb
enter
mov
sub
mov
jae
jbe
mov
push
shlb
lcall
push
or
adc
xlat
cltd
dec
in
stos
addr16
or
add
test
in
lea
ficompl
repz
aad
sub
pop
loope
mov
jne
out
pop
fnsave
sub
xor
loope
es
and
dec
xchg
mov
or
mov
mov
loop
mov
sub
cli
repnz
fmull
data16
les
jg
scas
push
in
or
dec
dec
xchg
push
push
cld
and
shll
loope
lea
dec
or
mov
aas
mov
and
inc
into
nop
rcrb
xorl
xor
mov
mulb
mov
fisubrl
pop
mov
test
ja
jmp
aam
cli
sub
and
and
or
pop
xor
sub
push
fs
sub
fsubrs
iret
xor
ds
inc
shrb
movntq
or
push
cmp
mov
pop
and
inc
scas
cmp
mov
and
std
lds
push
cmc
stc
fnstcw
test
dec
fcoms
cmc
lea
aam
xchg
lods
movsb
inc
cmp
sub
lea
mov
and
stc
out
lock
mov
cmp
push
adc
push
test
lea
shl
aad
cmp
xchg
bsf
push
lret
shl
lock
inc
lea
mov
or
push
mov
mov
push
push
adcl
jge
pop
lret
xchg
pop
xor
dec
jns
xchg
arpl
dec
popf
inc
jge
sub
movsb
ret
ds
gs
cwtl
insl
xchg
mov
pusha
dec
pushf
ljmp
ficomps
mov
mov
mov
and
push
mov
ret
jb
aaa
mov
test
inc
xchg
cmp
ljmp
jmp
mov
mov
xchg
push
lds
pop
outsl
jle
lock
notl
cli
loope
jecxz
js
add
push
adc
mov
and
rcrl
data16
add
pusha
sub
cmp
jbe
push
in
sti
push
xchg
xchg
jmp
fs
and
add
pop
mov
aam
mov
std
insl
out
pop
out
or
fisubs
int
std
out
rcrl
mov
jl
sbb
mov
data16
and
xor
stos
lahf
imul
gs
cmp
push
popf
jg
lods
xchg
sbb
jecxz
and
jecxz
cmp
cld
enter
pop
ret
out
pop
aas
imul
imul
data16
lods
aas
dec
inc
mov
inc
stos
gs
ret
xor
cmc
or
enter
das
mov
jne
push
popa
push
dec
jns
mov
xchg
cmc
fwait
sbb
repz
add
movsl
fdivr
jnp
and
loop
imul
fstpl
lds
fists
or
add
cmp
push
fcompl
sahf
adc
jbe
pop
pop
data16
icebp
lahf
cmp
push
in
push
sub
fistps
inc
fstpt
es
fidivl
sahf
cmp
pop
push
call
sahf
dec
test
xlat
mov
sub
mov
mov
push
pop
mov
pop
jbe
jp
out
xchg
mov
sub
mov
movsb
movsb
mov
adc
mov
in
leave
dec
and
fdivrs
clc
rorl
xlat
scas
or
mov
push
xor
movsb
ret
mov
push
mov
cmp
mov
pop
in
insl
jecxz
mov
xchg
mov
jecxz
mov
mov
popa
mov
outsl
xor
jno
sbb
sub
test
mov
push
add
push
imul
adc
mov
jno
out
sti
fcmovnu
out
je
cmc
mov
addr16
enter
jbe
out
loop
enter
xchg
repnz
mov
inc
sub
in
jecxz
jmp
jmp
gs
clc
jl
sub
sbb
xor
imul
loopne
jp
jae
pop
aas
push
lods
int
and
xor
or
xchg
jb
sbb
cwtl
push
add
sahf
std
out
sub
xor
cwtl
cli
jns
add
inc
jb
mov
das
addr16
pop
push
cmpsl
out
in
ljmp
sbb
out
push
aas
dec
ror
jp
or
mov
lds
lods
out
mov
xchg
push
or
mov
dec
sub
lahf
adc
or
or
jbe
jns
jb
mov
nop
fcomp
push
xchg
xchg
xchg
mov
xor
aas
xchg
push
sub
xor
js
xchg
mov
scas
pushf
repnz
hlt
in
mov
nop
mov
divb
mov
pusha
xor
mov
ljmp
or
xchg
xchg
xchg
cmp
roll
lods
mov
sub
stos
push
adc
push
sub
inc
xor
ja
ljmp
inc
clc
mov
mov
lods
mov
cmpsl
jnp
mov
divb
out
sbb
lret
cmp
out
repnz
sbbb
ljmp
mov
mov
lds
enter
sbb
xchg
mov
mov
aad
movsb
aas
mov
mov
out
dec
push
jg
push
jae
das
ljmp
adc
inc
int3
cmp
into
and
leave
fs
jmp
orb
cmp
mov
movsb
xchg
mov
call
addr16
push
out
pop
movsb
add
lock
dec
lock
sti
xchg
xchg
sarl
fdivs
fs
pop
cmp
sub
cmp
add
vpsrld
adc
push
jl
sub
leave
call
jne
push
mov
jp
push
cwtl
push
lods
loop
sahf
int
cmp
ret
add
es
lret
add
cmp
cwtl
das
sbb
sahf
daa
inc
xlat
int3
ss
jmp
push
outsb
push
jmp
inc
pop
sahf
lea
push
jno
dec
xchg
pop
hlt
test
mov
lahf
lret
push
pop
xor
icebp
mov
popa
add
aam
decl
or
mov
cmp
xchg
lcall
movsl
lock
cmp
mov
mov
cmpb
inc
test
pop
cli
jg
push
push
out
inc
pop
insb
mov
sbb
xchg
loope
add
icebp
jo
pop
mov
in
push
in
cli
jbe
icebp
int3
fisubs
roll
repnz
inc
mov
xlat
cld
js
adc
inc
cmp
mov
and
stos
sarb
add
adc
jnp
mov
loopne
decl
pop
into
cwtl
imul
lret
dec
xor
sbb
shrb
cmp
lcall
loop
jne
add
adc
cmp
adc
mov
es
ficompl
aas
push
xor
lret
sbb
cmp
sbb
enter
pop
xchg
out
add
loop
js
jp
je
pop
sub
loopne
ret
data16
sbb
es
inc
shl
test
and
cmpsb
cli
pushf
push
or
cmpsl
scas
sub
fldcw
mov
popf
dec
aas
mov
fcoml
ret
idivb
aam
jbe
cltd
xchg
fistpl
lods
je
adc
xchg
push
sbb
out
les
pop
sbb
or
cmpb
mov
ret
push
ja
xchg
pop
loopne
leave
mov
es
and
js
clc
xchg
ror
lea
outsl
sbb
popf
cmp
push
push
outsb
enter
aam
sbb
mov
ror
cmp
not
add
aad
sub
loopne
ds
in
out
push
dec
jns
sbb
shlb
mov
inc
jp
cmp
pop
and
stos
dec
pop
push
mov
or
mov
lods
inc
ss
sbb
push
mov
add
movsb
mov
and
js
mov
add
pop
lods
aas
sub
adcb
pop
jl
jo
push
mov
stos
out
xor
sub
jp
jmp
push
test
jecxz
stos
push
mov
adc
aad
shll
std
inc
out
pop
rdpmc
test
pusha
nop
fisttpll
test
xor
mov
dec
les
std
insb
cltd
inc
mov
jp
or
cmpl
add
std
in
frstpm(287
adc
mov
adcl
stos
cmp
es
sarl
pop
ret
scas
push
int3
mov
mov
icebp
dec
jnp
test
aas
dec
jae
stc
popf
mov
mov
fildll
xchg
mov
and
loope
loopne
int
sbb
xchg
jb
out
pop
js
subb
icebp
insb
jl
add
push
cli
inc
lds
dec
sbb
divl
pop
fs
std
ds
push
mov
jecxz
das
adc
int3
pushf
lahf
cmp
popf
fwait
add
icebp
out
loop
or
dec
int3
fwait
lods
imul
aad
and
ss
xchg
jle
aam
xor
jb
cmc
aam
dec
xor
inc
cmp
leave
ret
repz
pop
enter
xor
xchg
sbb
and
in
enter
fidivrl
xor
dec
in
sbb
hlt
push
sub
cmp
loopne
xchg
sbb
xchg
dec
inc
mov
in
rolb
cmc
sbb
add
dec
fucomp
notb
xchg
cli
scas
push
inc
into
and
xor
cmc
jnp
adc
popf
lea
icebp
mov
test
and
dec
packssdw
mov
xchg
push
fidivl
mov
fcoml
jmp
adcl
lcall
jmp
or
loope
loope
je
icebp
mov
stos
add
jl
test
and
or
gs
cmp
aas
inc
cs
dec
leave
insl
xchg
mov
lcall
and
lret
adc
sbb
ja
iret
push
jge
popf
test
pop
rolb
or
divl
mov
xchg
lods
push
jns
stc
ss
repz
cmp
jb
sbb
cli
push
xchg
push
sub
and
test
xchg
dec
or
push
xchg
jbe
pop
popa
jmp
fcmovb
repnz
test
sti
inc
and
stc
mov
das
push
xchg
sbb
cld
inc
into
sbb
or
dec
fwait
lods
sbb
decl
pop
jnp
mov
stos
imul
stc
pop
sar
push
cld
pop
push
jecxz
and
insb
leave
hlt
xchg
icebp
inc
push
mov
fcmove
xor
add
mov
cmc
mov
jmp
sub
or
shrb
jmp
or
adc
cli
mov
movsb
cli
clc
mov
add
cs
movsb
jae
loop
lret
sub
nop
out
sub
popa
inc
mov
pusha
std
pop
ret
or
push
ret
popa
xor
insl
push
pop
insl
cmpl
jbe
scas
out
push
push
mov
inc
inc
push
cmp
imul
and
int
lods
dec
mov
or
lret
jnp
xchg
inc
cmc
lods
mov
faddl
mov
cmp
sub
mov
sbb
dec
mov
aad
mov
sub
pop
push
xchg
call
xchg
imul
lds
fsqrt
mov
xchg
or
out
dec
pop
sbb
imul
int3
fsubrs
xor
push
daa
out
add
cmpsl
mov
jle
jmp
aas
bound
fstpl
out
pop
in
rorb
mov
gs
mov
into
leave
mov
popf
sub
inc
repz
test
lods
fdivr
test
mov
sbb
addr16
mov
push
lret
movsb
lret
cwtl
and
jp
je
mov
cwtl
outsb
xchg
xor
jge
mov
lods
mov
or
add
scas
mov
xchg
adc
adc
into
loop
rcr
adc
push
mov
mov
cltd
push
mov
xchg
sbb
pusha
mov
test
and
jmp
outsl
mov
shrd
in
pop
cmp
sti
mov
nop
and
add
rcrl
test
aad
xor
std
roll
shll
ja
clc
arpl
clc
push
pop
jne
gs
and
cltd
push
rorl
lahf
jne
jl
pop
les
mov
fwait
inc
cmp
push
mov
fwait
push
sarb
pop
fs
inc
cmpb
cmp
xor
adc
loope
sbb
cmovp
or
mov
mov
push
shll
jp
inc
imul
mov
int3
adc
dec
stos
mov
jmp
inc
lret
xchg
ret
ret
or
sahf
shlb
mov
stos
daa
cmpsl
das
mov
les
pop
dec
dec
in
into
inc
inc
push
jle
sbb
out
mov
jb
int
push
sbb
mov
sub
fistpl
pop
rolb
cmpb
dec
rolb
repnz
mov
mov
fldl
cmp
sub
popa
cmpsb
repz
cs
pop
xor
hlt
icebp
jns
adc
push
cs
test
int
and
sbb
add
xor
pop
pop
andb
xor
cwtl
je
and
je
or
mov
push
mov
push
push
inc
outsb
mov
int
pop
jo
lret
cmp
mov
fldl2t
call
xlat
xor
flds
cmp
fmul
cmp
mov
in
ror
sbb
mov
jmp
stos
jmp
pop
pause
in
pop
xchg
cmp
jecxz
scas
mov
daa
repnz
mov
arpl
aas
jle
aaa
xchg
scas
xchg
iret
pusha
call
fmull
pop
adc
jmp
xchg
mov
mov
in
mov
push
jge
mov
jp
sub
jbe
mov
ret
jmp
mov
and
mov
mov
jae
xchg
lcall
dec
ret
jne
into
aam
std
mov
add
xor
adc
ss
ffreep
push
xchg
xchg
sub
add
out
insb
mov
in
icebp
lcall
push
popf
dec
pop
jp
adcl
enter
scas
ficoms
xchg
dec
leave
xchg
addr16
shll
and
fwait
mov
or
pop
xchg
stos
pop
iret
xchg
js
mov
lea
cmpsb
jae
aas
out
mov
sub
inc
lret
push
adc
popf
mov
notb
aas
jp
jb
or
dec
leave
cld
xchg
push
dec
cwtl
fstp
mov
push
dec
jne
pop
inc
inc
xchg
pop
inc
cli
in
ljmp
test
and
xchg
test
je
vmovups
and
loope
lcall
xor
arpl
test
cmp
jbe
icebp
test
movsl
mov
outsl
in
jb
test
shlb
xchg
and
enter
and
and
negb
cmpsl
pop
xor
jecxz
mov
adc
loop
out
ret
jne
cmpsb
int
sahf
cmpsb
gs
repz
mov
iret
rcrb
xchg
dec
or
mov
fildll
or
pop
add
cmp
mov
shl
xchg
aas
mov
out
orl
mov
mov
pop
pusha
or
setb
cmp
xchg
jbe
clc
xrelease
jnp
into
dec
pop
pop
cld
daa
xchg
add
in
sub
dec
pushl
sarb
dec
sarl
scas
movsl
in
lret
aas
xchg
loope
idiv
imul
sbb
fnstcw
xchg
pop
sub
lahf
jo
mov
imul
mov
inc
or
pop
add
lods
pusha
lock
pop
add
and
mov
xchg
call
lret
jns
cmp
aam
arpl
mov
test
push
jnp
pop
or
ret
call
push
xchg
lret
dec
xchg
jnp,pn
push
popf
sbb
sbb
adc
jge
lods
ret
daa
sbb
popf
test
loopne
fldcw
lock
mov
sbb
pushf
jnp
ja,pt
std
shll
push
les
iret
addr16
jge
add
out
jnp
pop
fldcw
clc
test
jmp
scas
pop
pushf
ss
imul
xor
repz
cmpsb
or
stos
adc
lahf
inc
xchg
pop
mov
add
or
lret
std
sub
cmp
add
lahf
xor
pop
mov
fildll
adc
cmpsb
lahf
ss
scas
cld
es
vpmacsdqh
into
cwtl
or
and
inc
cwtl
dec
and
mov
imul
roll
cs
push
xor
movsl
xchg
push
lcall
scas
aaa
test
daa
dec
in
mov
aas
inc
adc
dec
in
mov
xchg
daa
jecxz
jmp
or
mov
loop
popf
mov
arpl
xchg
cld
cmp
push
jp
mov
add
outsl
sbb
stc
dec
push
mov
xchg
mov
jo
pop
loopne
ffreep
fnstsw
test
add
inc
mov
add
xchg
mov
inc
lds
mov
das
xor
sbb
inc
popa
sub
enter
inc
mov
cld
loop
out
sbbl
xchg
cmpsl
loopne
cmp
adc
jmp
test
hlt
or
mov
mov
aad
in
lds
jmp
xchg
push
sarl
cwtl
mov
popa
push
lret
popa
dec
imulb
cmp
adc
inc
repz
dec
ja
jl
hlt
mov
icebp
sti
lds
dec
mov
sahf
imul
dec
xchg
fcomps
adc
imul
pushf
dec
lcall
add
fidivl
dec
std
or
or
fidivl
jbe
test
push
daa
mov
pop
das
jmp
imul
arpl
fnstenv
mov
jae
push
sbb
pop
out
pop
jo
pop
cmp
add
ficoms
and
push
xlat
lds
push
push
lcall
push
roll
into
lea
sti
les
insb
mov
sub
sub
add
cmpsb
cmp
mov
and
and
into
xor
jo
popa
mov
jno
xchg
push
xchg
ss
lret
mov
insl
xchg
loope
cmc
call
lds
pop
mov
xor
xchg
xchg
mov
pop
jno
dec
mov
out
mov
xchg
and
ret
push
jbe,pt
or
push
adc
lret
cmpsb
loopne
push
cmp
scas
les
pop
pop
in
inc
adc
xchg
dec
push
out
aam
xchg
dec
imul
ja
subb
ja
inc
xchg
fcmovne
mov
inc
ret
push
and
icebp
cmpsb
or
xlat
lret
xchg
jl
pop
xchg
jno
ja
dec
push
repz
les
cmp
mov
repz
pop
pop
push
mov
or
lcall
mov
cwtl
jle
into
ret
cld
daa
jne
and
mov
test
jne
rcrl
js
shr
cmp
ss
jno
cmp
movsb
ja
fwait
in
or
xchg
mov
leave
lds
mov
mov
cmp
jg
cmp
out
call
mov
mov
out
notb
adc
adc
and
adc
lock
stc
push
push
stos
fwait
loope
sbb
fucomip
rorb
jns
mov
or
cli
sub
and
daa
sbb
repz
sahf
ss
xchg
lods
mov
dec
pop
outsb
mov
cmp
adc
mov
movsl
dec
jle
jg
xchg
add
pop
js
in
and
aam
mov
rcl
push
push
test
cmpsl
addr16
xchg
mov
pop
or
cwtl
lods
cli
addb
push
pop
cs
lods
jg
loope
shlb
mov
ret
shlb
js
jle
sub
inc
fadd
testb
ret
jl
xor
mov
push
inc
cwtl
dec
and
inc
xchg
sub
icebp
or
dec
or
push
loop
mov
xor
jne
xchg
push
push
addb
mov
in
imul
test
lods
lds
cmc
rorb
or
shlb
andb
dec
shll
push
out
leave
and
enter
sub
shrb
sub
push
daa
shll
call
leave
in
pop
hlt
pop
push
je
and
ss
dec
mov
lret
push
ret
and
xlat
into
xchg
adc
mov
and
sbb
mov
xor
aad
cmpsb
push
adc
pop
inc
jo
mov
clc
mov
or
mov
les
xchg
or
cld
mov
mov
push
sub
pop
pop
push
push
movsb
lds
pop
cmp
jnp
jns
in
cmp
inc
icebp
dec
pop
aas
dec
mov
jbe
divl
movsl
std
sub
pop
mov
cmp
into
cwtl
je
data16
mov
rcrl
jg
shll
lcall
rcpps
loopne
push
or
loopne
cmc
jp
insl
in
aas
xor
sti
cltd
mov
clc
aaa
inc
push
out
mov
les
popf
lcall
push
insl
push
xor
cmpsl
or
push
fsts
shlb
push
pushf
int3
push
or
sub
and
fcoml
push
jp
imul
xchg
leave
push
nop
jl
sub
incl
or
adcb
ret
inc
pop
out
sub
pop
imul
ficoml
testb
cltd
dec
std
jl
cmp
sbb
inc
cmpsb
mov
inc
imul
dec
scas
lret
sti
or
insl
dec
xor
and
jns
jo
lea
xchg
bound
scas
xchg
xor
sbb
test
dec
fldcw
ret
dec
ret
js
loope
shrb
add
xlat
pop
mov
pop
pushf
das
jge
pop
sub
and
and
jno
xchg
je
leave
push
push
dec
cmp
sbb
sarl
test
mov
test
scas
xchg
out
push
push
pop
push
push
adc
jmp
xchg
push
out
cmp
push
ljmp
jp
les
jp
xchg
pop
xchg
loope
xor
fdivs
fldt
push
push
and
seta
imul
mov
mov
shl
sub
sbb
sub
sub
mov
js
sub
ret
lahf
pushf
inc
fs
cmp
add
push
or
or
ret
mov
sub
push
mov
sbb
sub
fisttpl
out
pop
in
cmpsb
adc
cld
insl
call
inc
or
pop
jnp
lock
rcr
adcb
pop
out
ficoms
xchg
mov
mov
cmp
push
xor
iret
lret
pop
jae
dec
add
xlat
mov
xchg
sbb
and
das
cmpsl
movsb
jno
cwtl
xchg
call
lret
outsb
repnz
push
aad
hlt
neg
repz
xchg
rdpmc
sbb
push
data16
mov
mov
pop
jmp
pop
mov
xchg
ret
stc
or
out
test
dec
mov
in
aam
or
fs
mov
rol
cmp
shll
test
sbb
sub
in
mov
pop
fdivrp
aam
ss
stc
paddusw
andb
inc
stos
test
out
add
add
out
pop
fs
lods
and
notl
rorb
dec
dec
add
add
data16
mov
sub
jmp
jae
loope
jae
add
fdecstp
movhps
add
inc
lock
mov
xchg
mov
jb
rorb
mov
lea
repz
loopne
cmp
lret
in
daa
jge
inc
out
push
mov
sbb
mov
mov
xor
lods
xor
jmp
inc
pop
fdivl
ss
cmc
out
into
pop
call
repz
xor
xchg
mov
fs
arpl
pusha
shr
cmpb
addl
test
xchg
jnp
div
cmp
and
push
and
stos
xchg
int3
sbb
jnp
sub
cld
shr
pop
mov
jbe
rorb
fistpl
out
je
xchg
xchg
push
adc
pop
adc
scas
pop
xchg
mov
xor
jl
sub
lods
clc
dec
xchg
pop
test
int3
sub
aas
push
xchg
sub
gs
popa
bound
in
mov
xchg
xabort
xor
test
lods
pop
fdivr
lret
icebp
push
xor
pop
lods
pop
pushf
and
sub
mov
out
in
dec
mov
subb
jne
hlt
adc
call
jb
lcall
or
rcl
mov
leave
call
fstp
lods
jmp
cwtl
sub
lret
test
out
mov
not
jle
jle
stc
dec
ror
aas
aam
inc
int
sub
and
movsb
fxch
repz
lret
or
push
push
sbb
insl
xchg
fbld
and
orb
test
fwait
jno
mov
xchg
jae
in
sub
push
test
fistl
sub
jecxz
jg
int
ss
xchg
inc
movl
jbe
sub
fidivl
sub
jmp
mov
push
js
inc
push
clc
iret
repnz
mov
movsb
sbb
or
dec
xchg
cmpsb
mov
les
or
xchg
sub
out
divl
push
jl
sbb
xor
call
pushf
push
push
add
int
stc
test
mov
xchg
lret
fimull
xchg
dec
std
cmpl
inc
mov
out
push
adc
stc
adc
and
push
pushf
sub
mov
jmp
fadd
addr16
inc
adc
add
fsub
popf
enter
mov
out
mov
into
and
pop
xor
push
xchg
outsb
mov
or
daa
mov
cwtl
pop
push
ljmp
shrl
cli
xor
stos
dec
or
leave
pop
inc
add
fldt
jbe
adc
lea
ss
dec
leave
cmpsb
mov
cmc
pusha
pop
adc
mov
stos
ret
mov
mov
cmc
pop
gs
jg
dec
sub
aad
notl
inc
sbbb
cmpsb
mov
pusha
int
enter
mov
ret
mov
adc
xchg
mov
js
and
rcl
cmp
jne
sbb
push
mov
inc
sbb
loope
sbb
xor
cmc
xor
div
into
out
adc
mov
loopne
pop
bound
aam
and
xor
pop
call
mov
loop
fldl
adc
rol
les
std
aaa
xor
fisttpl
lock
gs
out
icebp
jg
jge
inc
lcall
xor
mov
adc
lods
cmp
test
sub
jle
xor
jl
inc
jmp
jb
bnd
inc
sbb
cwtl
sub
sbb
xchg
int
addr16
jecxz
call
inc
insb
fidivrl
int
divb
push
mov
std
jmp
dec
mov
fimuls
cmp
cltd
and
out
fstps
mov
dec
mov
out
cmc
push
sub
movsl
lods
ret
rcrl
gs
lock
js
jp
pop
out
sbb
fmul
and
ret
mov
leave
mov
push
jb
sbb
mov
inc
sbb
fcmovb
cmp
jl
shlb
and
test
lods
dec
pop
or
lret
adc
mov
cli
pop
dec
shlb
loopne
mov
pop
test
lcall
push
in
mov
bound
and
push
or
fildl
and
xchg
subb
and
mov
dec
cmpsl
mov
sub
mov
xor
xorb
cmp
call
fisttps
sbb
rclb
daa
outsl
mov
cmp
sahf
lcall
aas
popa
push
adc
lods
mov
mov
xchg
fcomps
push
les
scas
cmp
push
loope
adc
xchg
jge
arpl
mov
ss
je
push
pop
pop
popa
into
jne
lahf
jae
loopne
lahf
mov
repnz
iret
inc
mov
hlt
jp
mov
pop
fldcw
pop
xlat
mov
jmp
xor
mov
mov
das
mov
adc
xlat
and
sahf
inc
xchg
fildl
jge
pop
imul
cltd
iret
sar
mov
lcall
movb
int
loop
ja
jnp
cmp
pop
aad
out
xor
inc
xchg
push
pop
testb
icebp
js
mov
sarl
sbb
cli
add
push
add
adcl
add
scas
fs
mov
mov
add
cmp
jmp
inc
mov
outsl
ss
dec
jg
and
lds
push
mov
add
sub
sbb
push
sbb
dec
lods
lock
lds
enter
xchg
sub
fmull
ret
jns
bound
xchg
pop
and
fs
in
sahf
adc
bound
jecxz
jno
push
pop
cmp
xorb
imul
pop
test
cld
popa
sarl
lods
pop
mov
pop
cmpsb
mov
cs
clc
xchg
mov
push
pop
and
movsb
lret
je
leave
dec
and
subb
add
jle
adc
lods
and
xchg
inc
cmp
add
fstl
pop
push
pop
mov
pop
inc
std
mov
das
jno
in
cmpsl
imul
push
sub
das
mov
stos
inc
mov
mov
pop
cmc
loope
in
out
sub
test
rcrl
inc
and
fcompl
jmp
sar
jb
daa
out
arpl
and
mov
xchg
and
les
mov
lds
jb
jno
jp
push
lock
sbb
sub
mov
imul
filds
mov
movsb
push
rcll
out
add
daa
xor
enter
adc
xchg
cmp
packssdw
push
testb
xchg
mov
cmp
and
xor
int3
mov
mov
insl
pushf
mov
inc
jnp
jnp
loop
dec
mov
ds
sub
xor
out
fbld
dec
mov
push
jnp
iret
sbb
jnp
dec
pop
mov
loope
fisubs
ljmp
movsb
in
minps
fisubs
lcall
push
dec
inc
cmp
xchg
cli
add
ficompl
call
push
jae
repnz
and
test
xchg
outsl
or
fisttps
mov
dec
icebp
insl
add
fcompl
fisubl
mov
ret
rorl
mov
jb
sarb
xchg
out
cmp
das
dec
mov
loope
mov
sbb
mov
cmpsb
mov
into
fnsave
jno
push
adc
aam
jns
pop
mov
aaa
lds
sbb
loope
fmull
lea
mov
mov
stos
lds
push
mov
jecxz
jno
jae
adc
mov
jb
lds
cld
call
inc
enter
xchg
aam
ret
sbb
mov
mov
inc
mov
hlt
lret
add
movsl
push
inc
rcrl
sub
fcomps
es
nop
pop
bound
orl
add
int3
cmp
and
adcb
adc
xor
mov
or
fisttps
or
push
sbb
push
call
aam
rorl
rdtsc
pop
enter
dec
out
loopne
inc
rcr
mov
jns
cmc
xchg
adc
out
shll
or
add
sbb
imul
movl
mov
out
bound
test
add
xchg
cltd
and
ljmp
addr16
and
cli
sbb
ljmp
lock
das
out
iret
and
cmp
lods
mov
imul
cmc
jg
cmp
fwait
ds
xor
je
jnp
push
xchg
and
or
dec
int3
outsl
aam
data16
mov
cmc
rcrl
xor
mov
lret
push
sub
call
mov
pusha
sbb
dec
push
out
push
jecxz
xchg
sub
enter
dec
inc
mov
clc
btc
dec
dec
jno
and
mov
ja
push
add
out
or
pop
cmp
scas
loop
pusha
xor
or
lret
inc
jns
leave
rolb
out
out
mov
mov
ja
lds
loop
sbb
mov
dec
xchg
adc
decb
loopne
popa
movsl
cltd
push
orl
jecxz
xor
leave
aam
pop
dec
xlat
adc
ja
imul
cmp
scas
lret
aas
mov
xchg
mov
loope
shll
or
shl
sbb
lret
leave
cmc
mov
sbb
ficomps
lret
mov
ds
rolb
mov
push
adc
std
stos
dec
mov
or
xchg
es
xor
adc
dec
fdivs
test
repz
sub
and
mov
mov
scas
outsl
and
adcb
ss
add
mov
pop
rol
loope
test
push
mov
mov
xchg
loopne
mov
inc
sbb
iret
sub
adc
insl
fisttps
and
lods
push
adc
fs
sub
or
xchg
mov
je
xchg
std
push
push
mov
inc
push
sti
push
fisttps
movl
scas
mov
pop
jp
dec
cmpsb
push
inc
fiaddl
sbb
fldpi
stc
pop
jno
nop
push
or
sbb
fcmovnbe
dec
enter
int3
fnstenv
pop
enter
sub
imul
adc
lret
sbb
bound
and
out
xchg
ret
nop
stc
or
jg
adc
or
ja
mov
inc
rorb
ljmp
push
mov
sbb
cmp
xorb
outsl
shr
pop
xchg
cltd
jno
insl
or
imul
cmp
shl
push
jecxz
mov
repz
sub
mov
lcall
pop
cwtl
clc
jns
mov
xchg
cmpsb
movsb
cmp
lock
loop
adc
daa
cmp
jae
jne
push
jae
fldl2e
in
fnstenv
leave
fdivl
cmpsb
aad
push
ds
addr16
push
fs
movsl
movsl
and
mov
cmp
call
mov
stos
xor
push
sbb
sub
lret
dec
inc
cltd
jo
sub
dec
mov
cltd
add
lods
xor
pop
add
push
push
xchg
sti
outsl
lret
sub
enter
nop
push
fidivrs
enter
fildll
cwtl
and
mov
addb
das
push
je
fiaddl
loope
lahf
xchg
inc
loope
dec
popa
stc
sbb
lods
xor
push
jmp
push
repnz
dec
pop
imul
bound
out
and
xchg
fmulp
adc
pop
jl
mov
xchg
mov
mov
cmp
push
dec
cmp
jbe
stos
leave
inc
mov
scas
inc
push
jne
jge
adc
addr16
xor
inc
push
lock
pop
and
sub
cltd
lea
inc
adc
push
xchg
sub
mov
push
and
mov
dec
sbb
mov
lret
movb
movsb
mov
daa
cli
adc
sbb
inc
push
out
out
js
cmp
daa
or
push
rcrb
mov
or
push
xchg
xchg
movsb
adc
pop
popa
xor
sub
pop
sub
mov
pushw
aam
das
jno
jo
insb
or
sub
movsl
pop
ds
xchg
aas
mov
and
lods
lds
xlat
cld
stc
pop
lock
mov
cmp
xchg
mov
mov
movsl
iret
mov
mov
dec
push
inc
sub
nopl
rcll
lret
push
fnstenv
inc
jne
mov
rolb
jle
aaa
pushf
in
outsl
push
out
cmp
xchg
dec
mov
add
pop
imul
shrl
push
inc
lds
pop
cmp
push
iret
sbb
mov
rcrl
and
xchg
jg
dec
faddl
sub
fdiv
lods
lahf
ficompl
push
andb
scas
sbb
inc
mov
call
rorl
cli
arpl
push
push
shrb
mov
mov
jge
out
repnz
out
shlb
add
enter
sub
inc
outsb
imulb
cmp
cmpsb
pushf
testb
and
pushf
mov
dec
jb
sbbl
repz
outsb
push
movsl
sbb
into
arpl
xchg
sarl
loope
das
fistps
jg
inc
ja
mov
mov
cld
add
into
sub
repz
std
in
sub
mov
jne
mov
xchg
adc
rcll
ds
lods
push
mov
subb
mov
fbld
dec
loope
ret
ds
imul
scas
jecxz
cmc
inc
test
out
mov
push
cmp
fs
xlat
push
movsb
inc
dec
xchg
xor
out
xor
lea
pop
call
mov
inc
push
cmp
insb
cmp
inc
shlb
pop
ret
fwait
insl
jle
aas
fsubrl
dec
cld
lea
sub
lret
sub
in
icebp
adc
jg
pop
call
cmp
hlt
imul
mov
jl
lahf
insb
aam
push
stos
mov
mov
jno
jmp
loope
fdivrl
imul
dec
sub
rcrl
subl
xchg
ret
loop
js
fimull
sbb
fs
das
sub
addr16
push
and
and
mov
bswap
insl
pop
dec
and
aam
iret
push
cli
lahf
sbb
xchg
loope
mov
or
insl
das
xlat
call
mov
cmp
sar
jmp
mov
insl
and
cwtl
push
cltd
jnp
sbb
pop
fisttpll
push
mov
ds
push
out
dec
mov
xchg
inc
mov
sahf
loop
loope
adc
and
and
push
and
movsl
in
push
into
xchg
pop
cwtl
xor
mov
hlt
xchg
mov
fmuls
pop
jns
sub
sti
icebp
scas
stos
ficompl
scas
dec
push
cmp
sbb
ret
imul
or
xor
mov
stc
arpl
setle
seto
xor
cli
fwait
loop
mov
mov
jp
adc
in
test
je
cmp
fs
mov
bt
movsl
jo
inc
je
pop
push
sbb
and
mov
imul
dec
mov
shl
notl
pushl
int
mov
icebp
imul
adc
bnd
mov
in
mov
and
inc
cmpsl
mov
enter
inc
stc
ret
jge
lret
popa
jne
pusha
mov
xor
and
aas
sbb
mov
repnz
lahf
stos
insl
insl
inc
adc
aad
call
outsl
cmpsb
rcll
jmp
sbbb
test
sub
test
mov
adc
xchg
push
pop
outsb
xchg
xchg
and
mov
test
loopne
push
jno
jmp
fmull
sub
mov
add
mov
fs
lret
sbb
dec
lcall
test
jl
jle
xchg
les
shr
mov
pushl
and
cmc
sbb
scas
xchg
pusha
push
xchg
aaa
out
aam
push
leave
sub
lret
clc
xor
out
or
jl
pop
fbstp
arpl
xor
test
add
mov
pop
iret
mov
insb
test
jle
xor
cmp
es
addr16
push
cmp
movsb
pop
mov
sti
and
aaa
inc
xor
or
sbb
lods
loope
mov
add
popfw
sub
arpl
out
test
mov
add
adc
test
outsb
aad
xchg
pop
xchg
stos
mov
inc
lret
and
pop
leave
jae
push
insl
dec
arpl
xchg
loopne
shll
xchg
in
lret
inc
add
mov
dec
loope
rorl
cmp
add
xor
mov
rol
pusha
pop
inc
mov
sub
sar
mov
jecxz
ud0
std
clc
pop
xchg
pop
jb
xor
jl
movsl
sti
xchg
mov
out
mov
stc
mov
movsl
mov
lcall
push
pop
sub
cld
fwait
icebp
push
sar
dec
das
fmuls
mov
icebp
mov
repnz
push
in
xor
ret
xchg
lret
and
arpl
inc
cmc
loop
movl
cmp
lcall
test
xchg
leave
ret
dec
cmp
or
shrb
adc
xchg
mov
leave
push
adc
mov
cli
mov
mov
push
repz
fstpt
sub
dec
jnp
push
test
sti
mov
aas
in
dec
jnp
mov
pop
xlat
cmp
push
lods
or
scas
hlt
dec
call
adc
stc
sbb
inc
fimuls
inc
mov
mov
out
les
pop
cmc
jnp
and
mov
jnp
in
aas
fldt
fwait
aas
fsts
mov
xchg
push
fildl
icebp
push
adc
jbe
aam
or
insl
xchg
push
mov
mov
pusha
push
and
xor
dec
je
xchg
cmpsl
sub
add
cltd
dec
mov
cmp
mov
imul
mov
mov
cmp
ss
outsb
in
jae
cwtl
push
fs
mov
sbb
mov
adc
clc
and
out
frstpm(287
in
pop
nop
data16
sbb
jae
xlat
mov
int3
mov
dec
jbe
inc
pop
je
lcall
lds
lret
idivb
out
pop
adc
leave
sub
cmp
jl
mov
mov
sbb
idivb
mov
or
int
fldt
stos
aas
adc
movsl
pop
stc
and
push
mov
jmp
sub
xlat
mov
repz
enter
jmp
and
add
rclb
jb
lods
mov
or
sbb
push
jecxz
ret
cmp
push
sarl
cmp
push
adc
or
adc
cs
adc
mov
inc
and
push
mov
xor
mov
mov
enter
fcmove
mov
lea
test
adc
jnp
push
orl
dec
movb
jno
dec
test
adc
mov
sub
mov
mov
or
into
inc
test
mov
aad
sub
sarb
addr16
sub
jmp
lods
cli
or
hlt
pop
xor
jae
int
fxch
add
add
frstor
mov
cs
adc
loope
inc
movsl
pop
pop
or
orb
bound
call
xor
test
lea
lcall
stos
add
or
xor
jmp
push
mov
or
aad
aad
jle
in
mov
mov
outsb
out
rcll
sbb
mov
xor
push
dec
hlt
rcrl
sbb
and
in
adc
pushf
pop
popf
in
test
or
xor
cld
or
xchg
je
lock
ja,pt
xor
sbb
addps
movsb
push
sub
push
inc
mov
lahf
and
leave
fstpl
jmp
cmpsb
dec
sub
push
int
fbld
adc
mov
jecxz
sbb
dec
in
fucomip
rcrb
add
out
jae
push
ljmp
mov
inc
or
lret
int
leave
fwait
insl
fisttpl
es
sbb
mov
imul
mov
pushf
mov
pop
into
push
insl
ljmp
pop
jecxz
cld
pop
jnp
movsl
cmpsb
sub
xor
shr
je
jno
add
dec
int3
ret
rcrl
das
dec
sub
jmp
mov
sbb
adc
test
add
adc
cwtl
mov
es
nop
xor
inc
les
test
mov
repz
dec
iret
push
and
lcall
loope
adc
cld
push
xchg
or
std
lret
sbb
push
xchg
push
inc
mov
jbe
adc
daa
out
sbb
enter
xor
stos
xor
mov
int3
add
out
pop
xchg
aam
aad
fs
mov
mov
lcall
adc
into
stc
jl
cmp
xchg
inc
sbb
loopne
jmp
xorb
mov
shrb
icebp
iret
fs
mov
add
push
subl
hlt
in
minps
xor
int
dec
mov
xlat
dec
mov
scas
daa
inc
lods
inc
sahf
into
in
cltd
jnp
in
mov
push
sub
pop
ret
cmpl
xchg
jge
fmull
or
or
rol
pusha
lods
inc
mov
dec
push
sbb
push
mov
sub
mov
enter
lock
cld
add
adc
mul
xor
sbb
roll
push
xor
xchg
xor
lock
jle
fisttpl
jecxz
add
jbe
loop
clc
sbb
mov
adc
sbb
std
mov
cmp
mov
pop
shlw
push
es
int3
dec
bt
fwait
std
fdivrs
lret
and
add
lcall
loop
xor
mov
xchg
cmp
enter
loope
pavgw
push
jne
jns
pusha
or
dec
mov
addr16
cmp
int3
hlt
je
or
dec
movsb
lock
cltd
sub
push
and
mov
push
pop
jns
ds
sub
into
push
push
xchg
cld
aas
cs
inc
insb
cmp
insl
mov
adc
sti
ds
xor
loop
sub
mov
add
je
or
pop
push
fdivl
and
es
mov
nop
cmp
arpl
fs
add
sarl
insb
adc
xor
test
mov
dec
or
sbb
mov
lea
pop
push
sub
ja
test
jo
xlat
aas
mov
xor
mov
push
xor
or
popa
pop
leave
out
mov
pop
cs
lods
cmpsl
jno
in
notl
mov
push
mov
jecxz
jne
and
push
mov
xchg
shlb
xchg
jns
push
sbbl
jbe
xchg
incb
push
xchg
mov
pop
push
test
pop
xor
adc
fwait
mov
jns
sub
popa
nop
pop
cmp
sbb
jecxz
sbb
mov
cmc
push
sub
dec
mov
insb
jb
in
mov
xchg
ss
ds
adc
push
insb
xor
mov
add
stc
pop
test
cli
sbb
pusha
inc
push
popa
jb
loope
pop
sbb
pop
add
or
aaa
cmpl
hlt
lods
das
adc
out
inc
dec
out
mov
push
and
xchg
cmp
and
leave
mov
setns
mov
adc
adcb
mov
push
aam
dec
mov
popf
adc
mov
leave
rolb
push
test
sub
sub
dec
or
nop
xor
xor
push
lret
lcall
or
sub
in
push
fcomi
jge,pn
test
cld
fstpl
ficomps
add
sarb
fdivp
mov
mov
push
pop
push
dec
mov
cwtl
jmp
mov
cli
cli
addl
lahf
pop
sub
lods
or
xlat
push
inc
adc
in
mov
ja
arpl
dec
mov
test
inc
add
sub
add
and
xor
jns
xlat
jp
push
mov
bound
inc
push
push
mov
loop
hlt
push
loop
cmp
adc
int3
orl
movsl
test
sbb
jo
movsl
jno
mov
push
gs
inc
gs
shrl
adc
ffreep
lcall
dec
js
mov
test
or
divb
les
fwait
repz
out
movsl
out
mov
pop
pop
add
test
leave
xchg
mov
ret
dec
sbb
and
arpl
arpl
or
push
clc
fdivrl
out
shlb
inc
add
mov
into
addr16
arpl
cwtl
pop
pop
imul
call
into
dec
jae
lea
jle
jle
test
mov
push
in
mov
push
or
adc
icebp
test
mov
sbb
sbb
and
sti
sbb
jmp
adc
pop
int3
rorl
loopne
push
mov
insb
inc
ror
dec
dec
dec
dec
mov
sub
pop
lret
xlat
pop
jb
rclb
or
fmull
add
movsl
das
lcall
dec
xchg
pop
jne
push
imul
scas
jb
xor
out
arpl
incb
mov
andl
in
negl
and
insb
mov
lods
flds
add
out
sub
pop
outsb
imul
mov
clc
cmp
sarb
aas
nop
orb
sbb
jge
lret
hlt
cmp
lock
mov
rclb
in
mov
cmp
test
jne
data16
negb
je
pop
dec
jg
test
ja
jecxz
push
stmxcsr
outsl
std
mov
or
out
in
jge
imul
sbb
mov
gs
pop
or
sub
push
int3
leave
imul
out
push
aad
xor
leave
movsb
adc
add
jnp
jge
js
mov
jle
add
mov
push
push
pushf
cli
add
jo
add
in
cmp
xchg
fsts
mov
cmc
add
fistl
scas
xor
popa
cmp
jnp
inc
jmp
and
pushf
mov
jo
jb
sub
js
push
xchg
xor
lock
icebp
or
mov
add
dec
ds
xchg
inc
cmc
jnp
fisubs
aad
dec
mov
cmc
jg
jae
xor
xor
not
and
sbb
push
push
dec
sub
aas
test
sub
fs
jno
into
inc
loop
sahf
dec
push
xchg
sub
mov
jge
xor
sbb
pushf
dec
outsl
mov
outsb
pop
test
mov
test
jle
pop
or
inc
pop
or
push
mov
sbb
je
push
out
xchg
addr16
xor
mov
mov
mov
cwtl
inc
faddp
xor
movsb
stos
push
dec
test
pop
jmp
imul
loopne
jo
dec
in
jno
jb
push
mov
sbb
pushf
mov
data16
imul
pop
repnz
insl
jne
mov
aaa
imul
imul
and
arpl
or
dec
loopne
adc
jo
fs
ret
cmp
push
adc
mov
aaa
ret
neg
repz
dec
outsl
out
movsb
jle
fildll
lahf
test
sub
xor
pushf
add
dec
popa
loope
mov
mov
sarl
lds
xchg
push
in
mov
inc
fstpl
clc
popa
jo
xor
dec
pop
or
roll
xor
inc
cmp
scas
push
jne
mov
cmp
pop
mov
int3
loop
imul
pop
inc
mov
xchg
iret
ficoml
stos
mov
rcrb
cmp
dec
xchg
mov
mov
lret
vxorps
mov
dec
hlt
adc
ss
aam
or
negl
mov
test
jo
imul
fcomi
loopne
jp
mov
adc
imul
and
fs
leave
and
stos
call
das
mov
adc
icebp
fistpll
or
addr16
mov
mov
lahf
sbb
movsl
cmp
lods
push
int
in
mov
push
cltd
gs
mov
fsubs
xchg
insb
pushf
outsl
fcmovb
jnp
out
daa
sahf
inc
sarl
xor
adc
jne
stc
mov
pop
push
push
insb
mov
mov
adc
lret
mov
adc
push
pop
mov
faddp
daa
test
scas
nop
sbb
push
decb
adc
adc
pop
push
or
xchg
mov
enter
add
arpl
call
lds
test
mov
mov
lcall
sbb
mov
shll
push
sarl
adc
and
xor
sar
mov
stos
cld
sbb
cli
stc
and
jb
fsubs
lsl
cmp
add
add
cmp
aad
repz
scas
or
movsb
add
addr16
xchg
cmp
cltd
out
dec
sbb
mov
xchg
loopne
xchg
mov
cmp
mov
inc
loopne
repz
cmp
lods
aad
lods
les
push
adc
and
mov
ficomps
inc
mov
mov
sahf
mov
xchg
push
fnstcw
inc
pop
mov
neg
aad
js
add
mov
xor
cmp
ss
fisubrs
gs
aad
adc
nop
leave
das
pusha
pop
mov
outsb
lret
jl
sub
psubusw
mov
inc
mov
push
or
pop
lods
jp
mov
scas
push
hlt
iret
push
or
cmp
dec
mov
lret
xchg
mov
test
pusha
mov
xor
jmp
lahf
mov
inc
ja
sbb
mov
mov
dec
fisttpll
outsl
jb
and
pop
dec
jge
pop
inc
and
and
arpl
inc
clc
sbb
mov
arpl
dec
jle
enter
push
ret
adc
lock
mov
jae
int
mov
adc
fidivl
ss
fstpl
or
cli
jnp
and
mov
mov
add
shl
stos
sbb
inc
push
xor
cs
popa
inc
repz
push
push
and
out
out
sti
jo
les
push
hlt
sbb
lea
sub
mov
inc
cmp
xchg
sub
aad
and
inc
test
mov
and
aam
or
popf
xchg
in
push
fldcw
inc
mov
mov
push
lods
add
xlat
sbb
sub
jge
shrl
rcll
cmp
push
inc
or
sahf
xchg
adc
rorl
and
adc
dec
jae
mov
in
in
jp
stos
inc
pop
adc
insb
inc
push
sbb
in
sbb
cmp
cmp
jno
pop
xchg
mov
sub
les
inc
xchg
mov
fstl
rcrl
inc
cmpsl
or
jecxz
sub
jbe
mov
xor
aad
movsb
pop
inc
in
jg
test
fwait
or
mov
push
xor
jg
push
mov
aad
xchg
add
ds
ja
mov
call
out
popf
ss
mov
adc
cs
xchg
jmp
sub
in
sti
adc
imul
rcrb
loop
mov
push
pop
sar
stos
out
cmc
and
lea
out
xlat
pop
mov
and
pop
sbb
push
inc
jo
movsb
dec
push
cmpsl
mov
adc
or
inc
idivl
test
jle
push
idivl
pushf
int
xchg
sbb
fisttpl
in
stos
cmp
push
mov
mov
xchg
sbb
or
jbe
and
aas
or
bound
data16
push
test
lahf
minps
sbb
outsl
lock
out
mov
iret
rorl
adc
fstl
mov
lret
push
xchg
xchg
cltd
xchg
jl
cmp
xor
ljmp
popa
jl
sub
sub
dec
sbb
rcrl
or
pusha
out
insl
loop
imul
aad
mov
cltd
int
cmp
sub
out
lahf
mov
mov
mov
daa
mov
or
gs
fimuls
inc
inc
out
mov
and
data16
xchg
scas
push
pop
aas
lcall
mov
iret
jns
arpl
jmp
or
insl
and
pop
xor
push
mov
push
adc
andl
scas
mov
test
in
pop
sarl
mov
nop
adc
mov
dec
adc
mov
inc
lret
mov
call
sub
loopne
jbe
adc
mov
scas
scas
aad
icebp
js
xor
xchg
xor
js
popf
cltd
imul
xchg
sub
and
stc
pop
ror
jmp
jp
icebp
add
cmp
icebp
mov
mov
push
or
pop
push
xchg
add
jbe
pop
pop
rorl
mov
adc
push
pop
mov
pop
test
ss
test
adc
mov
dec
insl
xchg
dec
xor
mov
in
std
or
xor
push
std
rorl
or
roll
jg
xchg
test
or
push
xor
insl
xchg
xchg
fiadds
inc
stc
cmpsb
shlb
fsubrs
jns
les
les
in
sbb
iret
pushf
fldl
lods
ss
jmp
xchg
es
das
int3
dec
mov
shlb
cmp
lods
push
add
cmpsb
sahf
mov
ja
inc
jo
pop
enter
arpl
iret
inc
mov
outsl
rcrb
xor
aaa
add
mov
xor
call
into
idivb
xor
dec
das
mov
lret
dec
sbb
rorb
and
and
jnp
test
jmp
mov
in
fs
in
scas
ja
push
shll
mov
sbb
rorl
inc
dec
push
adc
xchg
rolb
xchg
arpl
jp
mov
cmp
jbe
push
popf
cld
lock
jb
pop
add
dec
scas
lret
or
xlat
mov
mov
xchg
mov
in
outsl
lret
pusha
mov
sbb
or
pop
add
jae
or
add
jno
test
jecxz
out
popf
cwtl
repnz
jns
jl
xor
mov
mov
dec
pop
andb
cmp
add
sub
test
fs
mov
in
ds
xchg
or
pop
loop
inc
pushf
je
into
push
mov
or
sub
int
jle
xchg
jne
jmp
push
mov
repnz
adcl
and
pop
dec
enter
pop
orl
and
jle
gs
cltd
das
jne
push
mov
flds
add
xchg
orb
mov
add
xchg
sbb
lahf
das
out
xchg
inc
jp
cld
imul
dec
push
dec
imul
or
mov
push
jp
lahf
push
mov
push
aad
lock
pop
dec
movsb
movsl
dec
test
aad
xchg
pop
sbb
and
add
xchg
mov
jmp
jb
inc
add
dec
testb
loopne
jp
div
adcl
add
jnp
pusha
mov
add
insb
leave
rorb
fsubs
movb
inc
lds
scas
shll
cmp
add
cmp
rcll
xchg
cld
jg
mov
sbb
push
sbb
sbb
push
fisubl
lcall
fdiv
js
mov
push
and
push
jmp
sti
jmp
push
icebp
jno
pop
ss
xor
pop
ret
ja
fisubl
mov
or
std
jae
jg
xchg
push
xor
insl
jbe
shrb
xor
sub
std
push
stos
icebp
out
enter
mov
stos
inc
lods
gs
sar
cmp
cmp
es
out
push
ret
xlat
mov
sbb
inc
out
sub
jo
es
cld
add
add
xchg
outsb
sbb
shll
pop
mov
ja
gs
rol
arpl
sahf
shlb
inc
sub
push
ds
mov
rorb
loop
lea
clc
mov
cmp
and
add
or
je
out
pop
out
cmc
push
cmpsb
cwtl
sbb
mov
loop
jmp
xchg
lea
xor
vsubsd
mov
aas
xchg
into
and
sub
or
cmp
mov
hlt
out
fadds
or
int
xchg
mov
dec
popf
aas
push
jbe
int3
test
fs
xor
xchg
sub
ds
lret
and
xchg
mov
daa
jne
pop
xchg
and
jmp
in
or
mov
call
inc
mov
daa
out
lods
fdivs
and
test
jbe
lret
or
inc
mov
inc
push
mov
fs
cmp
lret
jae
inc
test
cltd
mov
sahf
loopne
and
fbstp
pop
std
gs
loop
add
jle
xlat
mov
stc
out
daa
pop
dec
fs
mov
mov
cmpsl
in
dec
inc
decl
cmp
xor
in
push
loope
inc
inc
sbb
aam
je
adc
cmp
das
inc
jl
inc
test
mov
jecxz
push
lea
xchg
sub
std
pop
dec
adc
sub
mov
xor
ret
push
dec
popf
xor
add
repz
xlat
xchg
push
dec
fsubrp
subb
jecxz
sti
fsubrs
icebp
sbb
sub
adc
mov
jg
sahf
push
xor
cld
sbb
sub
mov
in
fcmovb
and
movsb
adc
mov
movsb
jbe
div
adc
aaa
insb
sbb
mov
in
popa
into
inc
pop
repz
mov
imul
dec
add
and
aas
xchg
cld
xor
cld
cwtl
xor
shlb
pop
cvtps2pi
insb
mov
mov
pusha
arpl
mov
or
outsl
pushf
decb
xor
jmp
ds
repnz
fdivrl
in
sub
mov
inc
mov
mov
jge
dec
lods
mov
sti
sub
mov
ljmp
xor
sub
mov
xor
xor
test
mov
add
push
push
loope
sahf
or
outsl
shlb
jbe
jp
mov
mov
push
pop
ficomps
mov
cmpsl
jnp
mov
jge
in
test
not
sbb
and
ficompl
xor
mov
xchg
xchg
dec
js
cmp
xchg
mov
ret
dec
shrb
xchg
movsb
push
loop
call
dec
mov
fwait
or
or
add
pop
pusha
ds
jbe
inc
jb
lahf
adc
fwait
xchg
or
pop
jecxz
in
andps
or
les
rolb
lock
ja
cmp
dec
mov
and
pusha
loopne
jg
mov
push
rcl
ja
addr16
lds
dec
ja
xchg
jp
pop
in
loopne
into
in
cmp
out
cmp
insb
and
mov
xor
cmpsl
vfnmadd213pd
gs
sti
pusha
push
mov
test
add
add
ds
add
test
sbb
fs
ficompl
adc
stos
push
out
movsb
pushf
rorl
cld
mov
mov
xor
mov
and
inc
mov
stos
sub
movsl
lcall
fstpl
mov
fxtract
xor
sub
cmp
cmpl
icebp
movsl
je
int3
movsl
insl
xor
sbb
xchg
negb
push
popa
cwtl
js
fstpl
mov
adc
mov
rcll
dec
jno
ja
cmp
js
ja
jb
test
xchg
xchg
xlat
pop
xor
push
xor
ja
lahf
int3
lcall
roll
aad
addb
fisttpl
xchg
ja
sub
lahf
loopw
xchg
pop
push
jg
fcomps
scas
and
imul
or
cmpsl
loope
in
mov
mov
or
out
dec
lahf
stos
adc
shr
and
adc
les
int
fstpl
mov
jbe
push
mov
jae
outsb
sub
jecxz
jmp
pusha
sarb
xor
and
jle
cmpsb
or
dec
stos
hlt
cmc
push
push
movsb
jmp
jnp
fiaddl
mov
sbb
cmpsl
mov
fdivrp
mov
loop
xor
mov
sahf
mov
jl
decb
bsr
push
flds
movsb
cmp
push
sbb
xchg
or
pop
stc
lods
xor
push
cltd
stc
jbe
push
mov
pusha
xchg
and
and
pop
fs
add
lret
jl
pop
lock
lock
mov
dec
xor
push
lcall
cmp
or
loop
pop
in
and
lds
popf
sti
and
xor
popa
test
jp
clc
xor
cmp
test
pushf
pop
cmc
test
cli
fiaddl
into
jnp
out
sub
inc
iret
or
mov
jmp
push
cwtl
lea
loop
and
data16
shlb
mov
sub
push
xor
pop
je
test
cmp
xchg
jp
ret
mov
hlt
sbb
jmp
bound
push
aam
mov
aas
mov
add
inc
mov
test
lret
mov
or
ljmp
sarb
jno
loop
insl
push
scas
movsl
xchg
imul
xor
movsb
dec
jge
test
jne
dec
push
in
push
push
sbb
cltd
mov
cmc
cld
push
movsl
jns
decb
xor
pop
pop
lahf
stos
test
ror
lods
add
jl
insl
les
aaa
jg
aaa
and
jg
out
inc
arpl
add
outsl
repnz
mov
mov
inc
lea
pop
mov
pop
dec
mov
les
rep
das
mov
adc
mov
popf
cld
mov
cli
sbb
adc
xchg
ss
xorl
push
xor
es
leave
movsb
cmp
incb
ret
fistpll
xchg
or
lahf
push
jl
addr16
lahf
cld
in
jle
cmp
dec
push
or
jp
push
in
fidivs
dec
fcoms
push
leave
mov
testb
cmp
add
scas
pop
adc
inc
inc
pop
arpl
aas
fst
adc
xchg
push
pop
mov
out
and
push
sti
scas
ds
fwait
xchg
sub
jnp
inc
xchg
outsl
mov
mov
in
or
sbb
cmp
and
flds
add
outsb
pop
jb
cs
dec
pop
push
pop
lahf
movsl
insb
jmp
fsubrp
insb
fstp
inc
rclb
fyl2xp1
mov
xor
subb
fimull
cmp
test
shrb
sub
leave
movsb
adc
lea
and
push
fnstenv
mov
sbb
sarl
fsubl
dec
mov
frstor
call
loope
rcrb
xor
inc
loopne
mov
adc
out
sahf
sbb
dec
in
test
mov
xchg
sbbl
lret
lret
xchg
pushl
inc
or
clc
mov
add
jns
jae
ud0
outsl
dec
pushf
push
sbb
cmp
into
int
add
out
arpl
inc
add
aad
stos
and
push
out
pop
ss
lock
pop
add
xor
push
cltd
mov
adc
mov
sub
popa
sbb
stos
in
in
out
clc
add
stc
xchg
xor
xor
inc
loope
rcl
sub
adcl
jle
fisubl
jmp
jle
out
bound
or
push
mov
jg
jecxz
mov
nop
adc
fsubrl
push
push
stos
hlt
fdivl
mov
mov
repz
push
mov
aas
mov
and
aad
pop
xchg
jnp
dec
ja
inc
lret
les
cwtl
outsl
or
jl
clc
and
cmpsl
cmp
sbb
call
adc
mov
cld
hlt
jge
or
mov
cmp
movsb
movsl
out
jno
mov
jle
lods
shll
ds
ret
jb
insb
into
mov
cmp
ja
bound
pop
jl
into
push
mov
roll
insl
lret
cmp
xchg
ficoms
daa
jnp
xchg
ja
xor
jae
adc
popa
and
inc
insb
adc
mov
out
sbb
cmp
push
adc
jge
jecxz
pop
fcomps
rclb
jle
sub
pop
adc
cmp
cwtl
imul
push
lods
xor
jns
and
ret
sbb
sbb
or
mov
scas
or
sub
js
cmp
sub
pop
xchg
adc
test
or
stos
in
add
std
push
and
pop
fcmovne
lret
cmp
inc
lods
xchg
add
fs
jmp
fisubs
sub
mov
test
lock
out
jns
xchg
dec
das
pop
lahf
mov
cmpsl
fwait
sti
or
rcll
int
xchg
push
mov
cmp
dec
and
in
jecxz
mov
loope
ror
cmp
pop
sbb
xrelease
daa
loop
sub
sbb
mov
cwtl
aad
pop
xorb
ret
xor
inc
rcll
mov
xorb
xchg
shlb
xor
dec
sbb
movsb
ss
xchg
mov
decb
jb
in
cmp
mov
rcrl
pop
loope
stos
jbe
xlat
inc
std
pop
fst
inc
mov
dec
out
xchg
pop
mov
mov
xor
test
lea
arpl
push
adc
jbe
into
xchg
repz
pop
inc
scas
in
adc
es
test
ja
pop
adc
imul
mov
or
mov
jae
xchg
les
test
cmp
movsb
lcall
ds
inc
xchg
xor
or
es
cwtl
push
icebp
rorb
shlb
cld
ds
or
mov
dec
popf
out
xor
and
pushf
push
je
jg
push
fcmovu
sti
insb
mov
int
dec
shlb
xchg
xlat
pop
jl
sbbb
mov
inc
or
cmp
sahf
out
sub
add
pop
jg
mov
ret
cwtl
test
jl
daa
outsb
push
in
inc
js
cmp
movsl
jnp
ljmp
xor
mov
test
out
sbb
xor
mov
push
push
ljmp
ja
outsl
adc
out
xchg
scas
stc
movsb
xchg
roll
mov
mov
xchg
inc
sub
push
jno
mov
sti
xor
repnz
and
pop
stos
test
shrl
rorb
sub
xchg
inc
fwait
sub
add
test
mov
dec
push
inc
lds
jmp
pop
jecxz
mov
rcr
inc
mov
pop
dec
xor
icebp
ss
insl
add
sbb
inc
fneni(8087
repz
xor
mov
pop
hlt
bound
adc
cmpb
dec
in
add
pop
push
add
jl
mov
cmp
movsl
adc
mov
sti
xor
movsl
mov
fmuls
hlt
or
push
jmp
pop
push
and
insl
test
cwtl
cmp
xchg
cmc
enter
je
sub
jbe
test
fistps
test
rcll
lds
xlat
lock
cmpsl
dec
adc
and
adc
xchg
push
cmp
pop
pop
pop
push
push
repnz
repz
movsl
cli
dec
mov
insl
cltd
jmp
dec
dec
aam
jle
call
cmpsb
or
sti
adc
mov
dec
inc
fxch
imul
dec
mov
add
mov
add
cmpsb
mov
inc
adc
cmp
int
lods
int
or
imul
mov
mov
pop
jns
xchg
shrl
dec
dec
jg
sar
or
negb
in
mov
test
dec
addr16
rol
pushf
out
push
mov
cmc
rclb
es
pusha
xor
mov
or
mov
jp
std
out
xor
sub
jle
sbb
mov
sbb
icebp
out
pop
cmp
clc
cld
mov
add
in
jnp
ljmp
xlat
mov
sbb
and
mov
push
add
pop
loopne
ja
scas
cmp
dec
xchg
loop
pop
popa
addr16
in
xchg
adc
push
add
xchg
ficompl
cli
lea
push
in
xchg
xor
fs
push
das
sbbl
std
mov
xor
es
enter
aad
inc
mov
mov
dec
mov
icebp
push
xchg
in
cmc
bound
aas
and
pop
cmp
test
es
inc
add
jl
and
mov
mov
add
hlt
sarb
mov
adcl
out
and
adc
push
imul
pop
add
and
xchg
in
bound
and
sbb
jge
flds
sbb
or
jo
fsts
dec
ja
mov
lea
pop
xor
lcall
push
sahf
lret
dec
dec
js,pt
mov
lcall
lea
lret
outsl
orl
sbbl
jl
xor
dec
xchg
adc
jg
int3
mov
sbb
daa
movsb
cmp
adcl
pop
mov
push
mov
arpl
das
sbb
sub
adc
ret
cmp
adc
inc
inc
jo
fcomi
xor
into
std
sarl
addr16
pop
adc
sub
or
jecxz
xchg
pusha
insl
jp
jmp
rcrl
hlt
mov
shr
lds
inc
test
mov
frstor
bound
mov
mov
in
sbb
jo
mov
cltd
mov
cmp
cwtl
lds
mov
gs
inc
test
loopne
int3
mov
mov
dec
negl
push
jne
xor
aad
add
inc
dec
mov
cmp
cmp
mov
or
fisttps
fmull
mov
enter
xchg
add
and
scas
cmpsl
shl
push
push
frstor
imul
add
sbb
dec
mov
out
sbb
icebp
or
pop
pusha
xor
inc
xchg
dec
movsb
or
sub
jg
insb
dec
jb
mul
and
arpl
xchg
mov
ret
sar
iret
js
fwait
mov
dec
mov
cmp
jo
sbb
bnd
ror
aad
pop
das
daa
add
add
xchg
lahf
pop
mov
in
push
les
stos
pop
jb
fimull
or
dec
and
adc
rcrl
jmp
orl
mov
cmp
into
xorb
mov
cmpsb
int
xor
dec
mov
loop
mov
js
or
cmp
push
mov
pop
add
inc
ds
jbe
xchg
push
xchg
inc
insl
pop
dec
mov
fstpl
ja
aaa
stos
jno
test
mov
and
sub
adc
dec
or
inc
leave
dec
xchg
pop
inc
rol
aad
ljmp
push
xor
cmp
fisubs
cmpsl
cld
adc
add
leave
pop
mov
insb
sbb
lds
mov
decl
push
rcrl
xor
sub
outsb
add
ret
jecxz
in
push
mov
movsl
dec
or
push
mov
adc
lods
in
mov
cmp
mov
fistpll
push
rcrl
dec
cmpsb
sub
sti
call
addr16
ljmp
or
mov
xchg
mov
movb
lods
mov
xor
inc
mov
xchg
mov
ja
out
dec
mov
xor
scas
cmpsl
pop
mov
les
xor
dec
jne
ljmp
mov
inc
dec
jp
jmp
inc
movsl
in
mov
ja
adc
jns
mov
jns
and
ss
cmc
icebp
push
lahf
dec
ds
repz
or
sbb
loopne
repnz
pop
sub
fwait
daa
mov
leave
mov
add
scas
imul
mov
inc
mov
push
or
ret
add
sbb
pop
fnstenv
lods
aam
dec
leave
sub
push
mov
and
punpckhbw
xlat
dec
push
in
pop
mov
pushf
xor
push
ds
rcll
cmp
jl
push
dec
inc
or
aaa
pop
mov
sbb
push
fisubrs
ljmp
into
mov
mov
daa
pop
jno
mov
fildll
int
int
rorl
dec
pop
xor
in
adc
roll
inc
movsb
idivl
inc
rcll
xor
cmc
inc
or
sbb
xor
out
mov
jns
or
in
and
mov
ret
aad
xchg
mov
sub
jecxz
fxch
mov
repz
in
mov
ss
xchg
xor
test
sbb
xor
pop
into
pop
nop
ja
pop
cmpsl
jg
cmpl
push
repz
xlat
jno
imul
sbb
shlb
jge
and
xchg
rcr
je
ja
dec
pop
jl
push
sbb
jae
push
add
push
movsb
test
mov
xor
cltd
push
lcall
xchg
movsl
adc
mov
ret
pop
sub
add
test
lret
out
add
mov
mov
sti
fists
out
and
mov
adc
and
shll
mov
pop
and
js
push
xorl
jae
pop
rclb
testb
adc
fadds
imul
roll
mov
push
daa
xchg
mov
add
stos
aas
lods
dec
stc
popa
jmp
lds
xchg
stos
adc
mov
xlat
mov
mov
stc
mov
pop
add
icebp
adc
jmp
stc
mov
add
mov
cmpsb
push
or
jle
xchg
mov
sbb
push
pop
lcall
aad
into
ret
dec
add
mov
stos
xchg
in
stos
inc
loop
andb
fsts
cltd
lock
incl
jns
out
mov
clc
inc
paddd
dec
add
ret
xor
ljmp
enter
pop
hlt
ficoml
inc
xchg
inc
leave
dec
jbe
mov
rcrl
popf
push
mov
dec
cmpsl
cmpsl
xor
push
and
test
and
or
push
test
xor
add
mov
lret
add
test
and
fbstp
pop
lods
addb
mov
cltd
flds
es
jae
imul
mov
loop
dec
sahf
push
pop
dec
jmp
outsl
dec
sub
or
cmp
jns
shlb
out
mov
cwtl
adc
testl
sti
xor
lcallw
daa
mov
adc
ret
fsubl
stc
inc
xchg
inc
test
in
or
and
loopne
or
emms
inc
push
inc
outsb
scas
out
push
ficompl
in
sbb
out
push
inc
and
test
xchg
adc
push
sbb
cmpl
cmc
out
xor
mov
shlb
push
xchg
xchg
loopne
xchg
cld
pop
xor
pop
adc
stc
mov
inc
lods
push
push
ja
jns
push
lret
out
xchg
inc
faddl
cmpsl
jno
fld
movsl
rcll
cmpsb
inc
sbb
lods
jg
and
jbe
push
nop
fwait
pcmpgtd
push
inc
aas
mov
clc
jge
xchg
or
cmc
ds
push
pop
rolb
pop
les
bound
pushf
jbe
out
out
clc
fwait
fwait
xchg
push
sub
cli
sub
sbb
das
dec
jle
push
dec
cld
out
fs
lds
mov
cmp
movsb
pop
xor
jno
sbb
into
sbb
cmp
jge
gs
popa
cltd
sbb
out
pusha
push
fcoms
pop
or
aam
push
mov
popf
aad
xchg
jmp
gs
dec
xor
cmc
rorb
xlat
cmpsb
push
cmpsl
movl
lds
inc
fisttpll
fsubl
jo
xchg
aad
pop
mov
ljmp
nop
push
frstor
ss
stos
mov
xor
iret
adc
loope
mov
paddusw
dec
inc
mov
test
fldenv
adc
cmp
jnp
in
in
push
out
add
repz
inc
xchg
cmpsl
push
in
xchg
mov
shll
lret
xor
adc
cs
or
mov
adc
mov
cmp
aam
or
cwtl
cmovbe
dec
mov
arpl
sbb
pop
icebp
out
xor
nop
inc
ds
aaa
ret
jbe
and
bound
movsb
jnp
dec
aad
sub
repz
push
pop
insb
rcr
sbbl
cmc
int
xchg
xchg
loop
push
shll
enter
imul
rclb
ret
mov
bound
shlb
inc
cmpsl
xchg
sbb
push
lret
test
dec
jno
cmp
mov
addl
pop
movsl
cwtl
push
push
dec
or
mov
cmp
xor
jp
inc
adc
sub
rcrl
and
aas
jno
test
push
imulb
xorl
and
add
dec
add
cmpsb
push
pushf
out
mov
inc
ds
roll
test
mov
push
push
cmp
and
fidivrl
or
and
push
repz
fwait
push
mov
sahf
push
mov
movsb
mov
push
mov
dec
pop
cmpsl
leave
les
or
leave
mov
or
enter
sub
fwait
push
dec
stos
jecxz
les
pop
cmp
cmp
push
int
dec
jbe
xor
add
bound
jno
push
aam
pop
mov
mov
xor
ss
mov
push
push
adc
push
mov
subl
mov
mov
icebp
or
movsb
insl
bound
shll
cwtl
call
add
std
cs
xor
jp
jg
iret
push
cwtl
inc
sbb
in
push
imul
pop
das
pop
sbb
cmp
and
jmp
mov
mov
nop
icebp
mov
pop
nop
mov
pop
dec
subb
jae
sub
arpl
cltd
int3
out
mov
mov
mov
or
sbb
push
outsb
add
xchg
rolb
mov
lods
or
mov
repnz
mov
push
mov
mov
fsubl
jmp
inc
mov
pop
out
shlb
sahf
pusha
jecxz
xor
cmpsb
mov
es
xor
xor
mov
in
fucomi
lahf
jge
rol
push
mov
or
cmp
lock
adc
mov
pushf
call
jge
xlat
sbb
sbb
and
inc
lods
mov
jp
into
pop
and
fstl
cmp
mov
loop
dec
out
repnz
es
xor
push
aad
imul
mov
stc
inc
fidivs
and
aaa
xchg
adc
ljmp
add
insl
es
push
mov
sub
pop
xor
inc
ret
jbe
out
mov
mov
add
jbe
push
lock
shll
ret
rorb
dec
jle
inc
mov
jp
mov
sahf
push
ss
mov
push
mov
pop
pop
dec
out
ja
mov
or
into
aas
enter
in
out
sbb
mov
enter
add
and
adc
pop
cmpsb
jecxz
sub
call
xchg
popf
pop
jge
mov
xchg
cmp
cmp
mov
in
out
hlt
pop
or
xchg
call
fs
dec
movsl
sbb
movsl
loopne
pop
mov
and
pop
xor
and
ljmp
sbb
and
cmpb
pop
shlb
insb
xchg
cltd
add
jmp
mov
rclb
cwtl
shl
mov
in
or
ss
lea
inc
cmc
mov
mov
stos
dec
xor
xchg
not
adc
mov
pop
rcr
fdivrs
xchg
int
xchg
out
subb
mov
scas
add
and
ss
push
or
into
cmp
pop
sbb
mov
mov
mov
pop
sbbb
inc
add
dec
or
cmpb
mov
xchg
mov
xchg
jae
mov
jle
movsb
pop
call
js
mov
adc
andl
jnp
mov
mov
xor
sti
cmp
ja
add
cmpsb
out
mov
cmp
mov
push
std
enter
pop
xor
fildll
mov
add
mov
inc
daa
mov
cmpsl
test
das
shll
not
popa
pushf
pop
fistl
dec
lock
call
cld
add
fldt
loop
inc
dec
pop
sub
sub
fmull
aas
pop
jp
pusha
ds
das
popf
push
dec
fcmovbe
mov
scas
xor
dec
rcl
push
and
je
dec
ja
das
movsl
lahf
icebp
jl
mov
push
xlat
arpl
sub
push
clts
jecxz
and
cmc
aaa
mov
hlt
cli
adc
sub
xchg
std
jb
jp
push
inc
sbb
jb
imul
aaa
popa
cmp
rcrb
jecxz
out
push
sbb
jl
lods
loop
lea
jbe
outsb
adc
lea
scas
int
xor
aaa
leave
or
add
test
adc
outsb
jmp
imul
push
mov
pop
icebp
push
mov
mov
pop
mov
js
xor
push
scas
lods
and
imul
xchg
jg
fcoml
pop
pop
insb
push
sbb
sbb
cmc
adc
jge
cmp
mov
hlt
test
insl
pusha
fisubs
sub
leave
jle
aad
mov
cwtl
ret
loop
test
push
aam
jmp
mov
mov
or
cwtl
js
lods
popf
testl
mov
cmp
push
lcall
les
mov
push
cmp
adc
push
enter
ficomps
dec
addl
mov
mov
stos
sahf
cmp
inc
and
ljmp
dec
push
int
pusha
sbb
mov
stc
xchg
scas
lds
rorl
push
testl
adc
sub
add
movsb
shlb
jg
repz
xor
and
shll
lods
jge
sub
xor
loope
jns
loop
xor
cmp
or
jnp
clc
stos
ror
pop
mov
add
jmp
aam
ja
rcl
js
lea
push
test
mov
fidivrs
arpl
in
fwait
insl
mov
hlt
mov
dec
xchg
mov
sbb
push
repnz
push
mov
cmp
sbb
sub
jge
push
adc
jne
mov
xchg
shlb
lret
xor
dec
imul
add
mov
push
in
xchg
subb
es
jns
jg
mov
dec
mov
adc
add
mov
hlt
icebp
and
xchg
cmp
mov
push
mov
cmpsl
mov
lods
out
and
imul
jmp
sbb
sub
push
cmp
xchg
hlt
cltd
pop
inc
out
and
xchg
cwtl
mov
lret
or
stos
cmp
inc
cmp
and
fisubl
ja
loop
mov
pusha
or
gs
mov
sub
fstl
adc
shll
popf
push
mov
push
jp
sbb
sahf
mov
push
inc
and
pop
dec
xchg
mov
pusha
or
insb
out
call
xlat
dec
adc
mov
push
jne
xor
add
aad
xchg
or
inc
adcl
and
shll
outsl
push
push
fistl
jl
xchg
sbb
dec
shlb
mov
sub
jp
push
orl
subl
push
adc
aad
test
stos
out
xor
push
outsl
dec
nop
inc
jb
mov
test
cmpsl
repz
xchg
xor
pop
je
jno
loope
push
es
scas
ljmp
sbb
filds
andl
mov
mov
push
or
or
jb
sarl
jge
pop
xchg
and
orl
rorl
sub
inc
enter
mov
out
mov
xchg
insb
jnp
ficompl
imul
xchg
inc
cmpsl
test
testb
jmp
test
jo
stos
mov
jbe
mov
aad
inc
jp
sbb
in
in
insb
dec
mov
mov
push
bound
popa
lret
push
cld
cmp
push
xchg
mov
inc
mov
jnp
test
leave
ss
dec
lcall
cli
fisttpll
and
lahf
adc
push
xchg
push
adc
and
push
jg
arpl
jbe
aas
jmp
mov
stos
or
push
mov
xchg
movsl
sub
movsl
ljmp
cld
out
ret
pop
ret
mov
ret
cld
xor
or
adc
js
aam
mov
ret
repnz
mov
movsl
test
and
ret
dec
or
inc
xor
cs
clc
in
add
lock
notb
mov
sub
push
adc
sahf
icebp
jns
dec
inc
sub
ja
js
pushf
jnp
inc
cmc
cmp
dec
and
pop
mov
cld
aaa
mov
jae
jecxz
xor
scas
cmp
addr16
out
and
cmc
mov
jnp
dec
test
subl
subb
out
xchg
stos
cmp
dec
sbb
xchg
cmovge
mov
jmp
fs
pop
adc
adc
in
mov
push
pop
loop
cli
sbb
cmp
xorb
test
in
lods
and
jecxz
aad
adc
lods
xchg
cwtl
test
into
inc
lods
inc
int
cmpsl
sub
jecxz
jg
pop
sub
xchg
cs
vmovupd
cs
cmp
fimull
jae
cltd
neg
xchg
ret
mov
sbb
lods
inc
test
sbb
mov
or
jae
or
jno
fldl
xchg
mov
mov
add
divl
int3
ficompl
jae
lea
jns
mov
push
inc
hlt
imul
shrl
lods
shrb
movsb
xchg
scas
leave
ret
add
or
push
nop
sbb
sub
fwait
mov
xor
imul
pop
stc
xchg
test
vpunpckhbw
shll
pop
xchg
outsb
xchg
sbb
push
stc
and
or
push
mov
out
mov
jne
jmp
lcall
ret
xchg
hlt
sahf
jae
lds
pop
fmull
dec
fdiv
add
mov
push
inc
xchg
push
adc
out
sbb
lahf
les
xchg
sub
xchg
fbld
cmp
sbb
out
bound
mov
rol
jb
testb
push
dec
sub
jmp
scas
aam
xor
cmpsb
xchg
xchg
push
cmp
dec
cmc
xchg
inc
in
push
pop
and
or
not
imulb
ficoml
movsb
mov
mov
jg
lea
cmpsb
xlat
or
xor
shll
pop
adc
sbb
negl
pushf
pop
pop
aaa
xorb
ret
or
or
add
test
pusha
pop
fwait
pop
int
mov
cmp
sub
push
dec
jb
rcr
inc
dec
push
shlb
pusha
cmp
xchg
mov
dec
mov
pop
stos
lods
scas
fcoms
push
fbld
mov
sub
and
movsb
and
pop
inc
cld
cmpsl
in
mov
movsb
sbb
adc
icebp
in
scas
and
call
xchg
xor
sarl
lds
inc
push
scas
inc
sti
rorb
jle
and
in
mul
push
sahf
stos
mov
xor
mov
out
ljmp
jg
or
dec
dec
push
lds
and
out
std
fisttpl
fisttpll
js
pop
cs
loope
jmp
or
cltd
in
packuswb
add
xor
ljmp
ljmp
and
into
aas
sub
sbb
jge
mov
xchg
scas
pop
push
cmp
lcall
cmp
cld
push
lahf
test
popa
add
xor
ja
lock
notb
inc
xchg
jbe
lods
xchg
out
add
dec
jmp
lcall
ds
push
xor
push
jge
scas
xor
cmp
mov
sbb
adc
ja
cwtl
insb
xchg
and
xchg
shll
adc
aaa
mov
js
lcall
pop
and
mov
rcrl
dec
data16
lea
outsb
mov
xchg
inc
and
dec
mov
push
push
lods
clc
sar
dec
adc
jae
xchg
sub
mov
ljmp
xor
outsb
xchg
out
aaa
xchg
in
ss
jno
shrb
fdivrl
mov
in
int
aad
xor
outsl
js
fsubs
push
clc
out
mov
ds
dec
out
add
mov
test
lds
jno
fsts
hlt
mov
or
xchg
repnz
scas
sahf
and
insb
in
loope
fimull
jg
add
adc
out
mov
jnp
inc
jno
leave
mov
jb
dec
jnp
fisubl
adc
push
jns
pop
xor
rclb
shll
push
aas
lea
out
add
out
int3
mov
inc
sti
mov
pop
stos
sub
and
push
or
jnp
movsb
shlb
fldcw
sub
out
scas
daa
scas
pop
xorb
jo
cmpl
xor
in
cwtl
pop
adc
movsb
xlat
mov
das
push
lret
mov
mov
push
and
adc
in
arpl
jne
test
stos
cmpsl
scas
mov
js
or
mov
leave
or
pop
push
mov
mov
orl
adc
inc
mov
xchg
and
leave
out
jmp
mov
jb
stc
sbb
lock
out
mov
pop
popa
loopne
push
inc
mov
aas
cmp
xchg
rcrb
mov
push
xor
cmp
jge
mov
enter
cld
mov
push
sub
cmp
outsb
pop
sbb
sbb
ror
out
add
cmp
fildll
mov
daa
adcl
add
add
ljmp
cld
jecxz
lret
mov
aaa
sub
in
loope
imul
scas
inc
mov
jae
shrl
lret
hlt
fcom
and
inc
jle
inc
out
mov
in
in
mov
add
lret
fwait
lcall
cmpsl
movsl
les
fimull
jb
jmp
jge
pop
scas
sub
subb
mov
arpl
cmpb
sbb
sbb
int3
jge
int3
sbb
cwtl
mov
pop
daa
dec
push
les
loopne
and
push
lcall
xchg
sahf
loop
pop
shl
lods
mov
es
xchg
clc
mov
xchg
scas
bound
sbb
lcall
cltd
inc
repnz
xlat
add
in
push
and
pop
xchg
loop
mov
lahf
shrl
pop
int3
sarl
andb
repnz
movl
add
popf
push
xor
inc
mov
inc
fstl
cmp
push
and
sub
rcl
outsb
add
push
sbb
sbbb
sbb
cmp
and
es
lods
lods
popf
mov
jb
in
xor
cmp
iret
out
xor
ljmp
jl
inc
std
lock
jns
popf
pusha
sarb
popa
dec
jb
and
adc
adc
and
mov
ret
js
mov
jmp
or
test
ror
add
push
rorb
mov
call
dec
add
push
jns
pop
jle
pusha
mov
mov
cmp
nop
jecxz
imul
sub
cmp
push
mov
or
ficompl
negb
push
sbb
and
cmpl
cmp
fistpl
xorl
and
sbb
mul
cmpb
data16
xor
test
jb
lret
mov
shrl
or
ret
cmp
and
in
mov
cmp
rorl
jg
scas
shll
dec
sbb
aad
test
imul
faddl
push
mov
mov
std
mov
int
gs
ljmp
xchg
je
fnsave
mov
or
xchg
aas
adc
test
pop
mov
in
out
test
xchg
mov
and
mov
cmpsl
or
int
dec
rcrl
add
push
adc
loop
jmp
mov
icebp
hlt
out
inc
adc
mov
push
mov
cmpsl
push
mov
pop
adc
mov
cld
popf
fs
loop
lret
call
dec
sahf
in
xchg
les
xlat
sti
stos
iret
shl
inc
sbb
dec
push
sbbb
xchg
lahf
imul
stos
into
mov
pop
pop
call
pop
bound
imul
push
les
out
push
fwait
in
int3
lock
js
mov
jb
pop
adc
cmpl
or
mov
mov
inc
pop
xchg
xor
outsb
cmp
or
mov
filds
push
jp
stos
pop
pop
les
int
cmp
cmp
ficomps
inc
push
push
adc
rorl
push
call
jle
cmp
js
fists
fiadds
adc
int3
jl
arpl
mov
shlb
icebp
sub
cld
mov
jle
sub
cmpsl
push
lret
lea
xor
aad
sub
dec
and
xor
int3
mov
lahf
pop
push
orl
sahf
pop
outsb
std
sub
shrb
int
std
mov
jl
fs
mov
xchg
and
pop
inc
lret
sbb
mov
mov
mov
mov
inc
lds
pop
jo
cwtl
test
mov
push
fwait
xchg
jmp
movsb
movsb
faddl
aaa
mov
cld
sahf
mov
sbb
gs
jecxz
outsb
fstps
sub
aam
ret
sbbl
sbb
mov
scas
cwtl
adcb
fiadds
mov
pop
addr16
inc
repnz
xchg
movsl
insl
or
comiss
scas
xor
or
dec
out
mov
out
roll
jge
aaa
roll
jmp
jmp
xchg
mov
cmp
dec
imul
iret
out
je,pn
ret
adc
xchg
rcll
xor
sbb
in
jp
and
clc
pop
in
aaa
arpl
sub
loop
jae
and
and
or
aad
inc
mov
pop
test
mov
cmp
ret
std
adc
cli
xchg
xchg
and
shrb
xchg
push
outsl
in
clc
xor
mov
xchg
cmp
fnstcw
sbb
sbb
leave
xor
fsubrs
pop
rclb
dec
fbstp
fisttps
mov
or
std
xchg
aam
mov
and
pop
fs
mov
into
in
subl
test
idivl
jo
out
enter
cwtl
or
adc
pop
xor
or
shr
scas
cs
push
cmpsl
mov
xchg
jbe
cmp
inc
pop
lods
cmpsb
incl
addb
sub
fsubrp
mov
xchg
leave
cmp
lods
in
cmp
xor
mov
mov
gs
and
in
dec
popa
inc
ja
addr16
shrl
sarb
add
rolb
dec
xor
arpl
xchg
subps
mov
out
ret
mov
loope
icebp
js
jb
sbb
aaa
js
mov
lret
push
mov
aaa
xor
sub
sbb
imul
sbb
dec
mov
pop
xchg
into
lret
jmp
imul
icebp
mov
add
loope
call
or
es
dec
add
rclb
cs
or
lcall
cmp
push
inc
push
popf
int3
xor
fwait
mov
stos
stc
and
xchg
cmc
cmc
push
stos
push
loop
pop
and
ds
into
jne
inc
jp
inc
fsubrl
out
mov
repnz
cmp
jnp
xor
out
sbb
jns
cmp
subb
push
adc
imul
outsl
xchg
pop
jo
scas
adc
jae
fdivl
pop
in
jl
or
adc
mov
shl
add
call
inc
jmp
nop
mov
xchg
aam
inc
mov
lahf
xor
sub
mov
jb
xorb
xchg
cs
push
cmp
mov
or
mov
or
pop
stos
or
and
test
jae
test
dec
jo
out
or
mov
dec
adc
jae
test
mov
dec
pop
add
out
ljmp
add
lods
inc
lret
aas
out
mov
mov
xlat
je
push
xor
add
lahf
xor
jnp
mov
jp
jle
and
push
bound
popa
mov
mov
inc
shr
test
mov
xor
dec
shl
push
mov
xchg
xor
out
dec
jno
loope
sbb
loope
xor
sti
aaa
adc
cmc
gs
add
pop
das
sbb
aam
test
pop
dec
mov
pusha
int
jge
ret
in
jo
shlb
pop
mov
mov
hlt
and
sbb
xor
adc
adc
mov
stos
sub
in
cmp
loop
adc
xorl
jb
xchg
std
dec
cmp
inc
shrb
pop
xchg
negb
outsl
dec
xchg
jle
pop
mov
sbb
and
fldl
je
pop
lock
mov
sti
lock
and
ret
xchg
and
stc
shll
cmp
mov
std
comiss
xor
cmpsb
xor
sub
sahf
stc
fcoms
cmp
mov
cwtl
sub
mov
jmp
leave
pop
xchg
scas
mov
test
push
add
test
outsb
dec
push
inc
stc
jl
sub
inc
stos
mov
imul
dec
inc
adc
aam
mov
repnz
sub
aaa
xlat
mov
xor
sbb
pop
jle
js
or
or
insb
push
cmp
fidivs
scas
adc
jnp
stos
out
add
mov
xor
mov
std
xchg
sbb
sub
cmpb
push
and
dec
mov
inc
dec
mov
pushf
jg
js
loope
inc
es
cmpsb
jp
jmp
dec
xor
xchg
mov
jmp
fnstcw
and
in
sbb
push
cld
cmp
inc
lds
aas
sub
loope
addr16
lods
push
xor
adc
in
aas
les
inc
jmp
sub
int
fidivl
jecxz
clc
imul
push
repz
sbb
ficomps
andl
cmp
xor
out
out
repz
cmc
leave
test
sbb
sub
cwtl
inc
int
ret
push
or
jno
aad
adc
and
ret
cmp
jbe
outsb
clc
xor
adc
pop
ljmp
inc
insl
out
rcl
lret
pop
jge
or
cmp
pop
xchg
sbb
lds
pop
out
incl
lret
and
call
adc
lds
mov
and
mov
mov
push
ret
inc
push
xor
mov
addr16
sbb
ficompl
and
dec
pusha
jno
test
ss
daa
add
mov
jno
pusha
cmp
push
das
data16
cmp
xchg
popf
mov
sahf
mov
sbb
sti
xchg
sub
pop
stc
frstor
cmp
inc
sub
pop
or
ss
sbb
xchg
lret
push
mov
jno
jb
or
cmp
in
pop
or
icebp
lret
jmp
pmuludq
pop
jnp
sub
cli
and
push
cwtl
adc
mov
icebp
sbb
sub
mov
jnp
popl
or
inc
int
shr
jbe
dec
cltd
fcoml
sbb
jg
xchg
inc
xlat
xor
mov
pop
xchg
loop
xorl
lret
mov
nop
cmp
std
ljmp
and
stc
push
movsb
addr16
xchg
adc
mov
sbb
jecxz
lods
inc
fs
push
fdivrl
ja
insb
movsl
jne
pop
xchg
mov
and
adc
iret
and
arpl
sub
fldenv
iret
and
cmp
pop
cs
out
arpl
and
push
in
pusha
sbb
cs
add
out
test
or
test
movsl
mov
and
cmp
in
inc
hlt
inc
ljmp
insb
cmc
sbb
mov
pop
push
sbb
mov
and
mov
mov
dec
mov
xchg
arpl
dec
push
insb
outsb
in
int
dec
int
insb
mov
sbb
sub
fnsave
ret
popf
ljmp
cwtl
je
lds
imul
mov
inc
nop
pop
int3
mov
out
jle
or
ret
shrl
fidivs
icebp
ret
jge
mov
lods
or
repz
div
push
loop
jo
mov
jo
inc
mov
mov
dec
xlat
add
repz
or
add
lock
das
mov
dec
adc
sbb
push
and
mov
inc
fildl
arpl
jmp
dec
sub
inc
frstor
sbb
and
cli
scas
test
sti
sbb
lods
clc
arpl
movsb
aas
mov
fnstenv
fldt
push
sub
mov
jg
and
mov
inc
pop
ret
cmpsl
dec
push
sbb
icebp
dec
adcl
mov
or
outsl
xor
add
add
jns
stos
daa
jl
or
push
mov
push
cmpsb
loop
gs
jecxz
mov
mov
scas
std
add
das
ss
ror
push
sahf
jg
in
sbb
xor
or
dec
add
outsl
xchg
rclb
fsubrs
out
sbb
ja
ret
or
push
sub
int
add
mov
pop
xchg
cwtl
call
test
add
jo
ljmp
or
push
popf
hlt
mov
add
je
push
ja
sbb
fst
cmpsb
or
adc
push
lods
test
mov
test
jns
ss
jae
push
aad
adcb
sbb
idivl
imul
lret
aam
inc
lea
popa
ss
out
sbb
test
jge
mov
cmc
push
pop
test
lods
rol
cmpb
nop
adc
cmpsb
and
push
mov
jp
add
and
mov
fwait
ror
rorl
in
roll
lods
fmul
mov
sub
jle
roll
rcrl
lods
ud2
mov
push
adc
and
adc
pop
xlat
mov
xchg
das
add
insl
das
mov
xchg
scas
push
pop
inc
cmp
fwait
jg
arpl
dec
cmp
in
mov
hlt
mov
fwait
mov
fistpl
xchg
mov
stc
push
movsl
pusha
adc
les
add
jbe
xor
je
data16
xchg
lahf
movsb
fwait
and
add
push
je
hlt
insl
fidivrl
in
stos
and
lods
dec
enter
xorb
and
add
int3
aad
and
rolb
loopne
xor
cmp
mov
enter
dec
sub
ret
xor
ja
out
sbb
xchg
or
sahf
data16
sar
and
mov
movsb
xor
pop
push
inc
and
adc
pop
jmp
sub
push
cmpsb
lock
bound
cmpsl
subb
cmp
xchg
addr16
lret
adcb
sbb
int
push
out
and
jns
add
movsb
aas
iret
mov
cltd
mov
jecxz
loopne
pop
faddp
int
in
rolb
pop
pop
cwtl
jo
test
daa
iret
jb
jge
call
jecxz
xchg
and
sbb
es
std
adc
push
pop
add
xor
vpavgw
scas
dec
or
negl
push
fcompl
loop,pn
stos
dec
dec
pushf
sbb
sarb
xchg
ds
ret
iret
dec
lea
jle
inc
dec
loope
and
xchg
inc
sbb
xchg
rolb
mov
inc
sbb
dec
in
cmp
test
cmp
mov
dec
test
lcall
push
dec
dec
cmc
add
jp
mov
std
in
xchg
lods
or
in
mov
in
jb
sarb
shrb
int3
jmp
push
cmp
test
inc
sbb
or
mov
sub
dec
pop
lret
or
mov
cmp
lods
inc
in
xlat
sbb
out
cmp
push
rcl
pop
or
adc
inc
loop
cmp
pop
add
addr16
insb
push
inc
jl
arpl
sub
adcl
mov
sub
out
nop
mov
mov
aad
jmp
pop
cmp
push
and
addl
bound
inc
nop
push
pop
add
mov
in
add
add
stos
pop
jno
enter
bound
imul
roll
addl
out
lods
ficoms
mov
hlt
mov
lret
out
popa
xor
sbb
or
adc
xor
lods
add
fists
test
aaa
fwait
pop
xor
clc
stc
push
mov
out
dec
imul
adc
sub
jg
dec
or
addr16
sbb
repnz
mov
push
adc
leave
out
sbbl
adc
outsl
push
push
and
std
fisubl
push
cmp
adc
jno
cmpl
out
loopne
xchg
outsl
xlat
adc
push
repnz
sarl
sub
fucomip
mov
das
sar
or
sbb
xchg
subl
or
popf
ret
mov
out
and
pop
sbb
sub
or
leave
pop
add
xchg
lods
xlat
xchg
aam
push
cmc
mov
and
inc
pop
sub
mov
out
rcrb
lds
push
in
inc
mov
cmp
shrl
or
mov
inc
fimull
lret
or
aam
pop
push
inc
mov
jge
ja
mov
rorl
dec
lret
sahf
xor
inc
insl
cltd
loopne
mov
out
push
jns
push
mov
movl
outsb
loop
mov
lock
mov
push
cmp
push
sub
or
jno
sub
jb
shl
insb
pop
xor
pushf
arpl
into
fsubr
dec
insb
icebp
xor
xor
cmp
add
stos
mov
push
pop
inc
cltd
jb
daa
sahf
mov
xchg
insb
jns
cmp
lds
aaa
dec
icebp
inc
xchg
cmp
fwait
dec
andb
lret
sub
inc
addl
mov
aaa
jg
je
gs
add
mov
repnz
out
inc
push
fsubp
leave
sarl
into
lea
adc
or
fsub
clc
cltd
repz
and
lock
mov
clc
mov
sbb
clc
call
jge
sub
mov
push
cmp
dec
inc
push
imul
scas
and
loopne
aam
andl
mov
xor
addb
add
mov
out
rclb
pop
shll
jl
je
ret
decl
xchg
hlt
and
xlat
sbb
out
sbb
icebp
cwtl
addb
cltd
dec
fs
pop
test
sbb
inc
pop
aam
leave
jnp
pop
xchg
add
testl
and
dec
fists
fisttps
fistpl
mov
sub
sbb
loopne
outsl
cwtl
sbb
xor
ss
pusha
pop
std
pop
mov
fsts
aaa
aas
insl
sbb
sbb
ss
sbb
dec
loope
cmpsl
stc
arpl
mov
jo
popf
rcr
jbe
mov
and
push
insl
dec
test
and
adc
push
std
movsb
lock
test
jnp
add
out
inc
mov
pop
loopne
xor
insb
inc
outsb
sbb
in
push
outsb
add
lea
leave
mov
and
cmp
rcl
mov
cmc
push
dec
leave
adc
dec
rcll
mov
and
movsl
xor
add
dec
adc
cmp
inc
xchg
in
or
rcl
jnp
cmp
xchg
dec
nop
stos
scas
sbb
push
cmp
pop
mov
sbb
xlat
int
hlt
pop
mov
aas
movsb
mov
inc
sbbl
adcb
mov
bound
sbb
leave
mov
sub
mov
outsb
and
iret
and
cmpb
ja
push
pop
stos
inc
mov
mov
and
int3
into
push
negl
sbb
outsb
in
inc
cmp
mov
jecxz
ss
sub
clc
fisubl
sub
add
scas
out
pop
push
mov
cmp
pusha
ljmp
mov
int3
dec
aaa
jns
test
into
mov
scas
lret
subl
pop
inc
mov
mov
js
sub
add
popa
scas
cs
add
jg
movsl
popf
stos
mov
cmp
jo
and
int3
add
sub
cmp
cli
leave
pop
out
mov
sahf
stos
mov
push
xor
pop
je
lea
push
call
mov
mov
jnp
push
dec
not
imul
xchg
je
mov
insb
scas
repnz
add
cmp
and
stos
push
and
jbe
cmc
dec
sbb
mov
push
mov
xlat
stc
lods
add
and
lds
cmp
mov
mov
jo
jae
cmpsl
iret
jbe
mov
rcrb
sub
out
cmp
stc
xchg
inc
in
mov
shlb
imul
out
adcb
in
sub
popf
sbb
and
dec
mov
or
mov
xchg
pop
pop
insb
test
lcall
sbb
or
jne
cwtl
inc
fmul
push
mov
mov
xchg
mov
cmpsl
push
movsb
jmp
lea
mov
cmp
pusha
jnp
stos
shll
pextrw
test
sarl
mov
sbb
xchg
mov
mov
cs
add
cmp
call
scas
or
ret
popa
pushl
ss
outsb
cmp
je
mov
jl
int
call
inc
sbb
sub
mov
or
lock
lcall
cmpsl
adc
dec
jecxz
xchg
inc
pop
test
outsb
jl
jns
push
or
pop
jle
lods
lock
lahf
xlat
jp
add
addr16
jno
push
mov
ficoml
add
sbb
dec
cmp
push
mov
stos
xchg
pop
andb
testb
cmp
aas
mov
subb
lods
cmpsl
pop
push
dec
stc
loope
repnz
push
xlat
lds
add
pushf
pop
testl
and
ret
push
test
adc
jl
shlb
xchg
stos
enter
test
shll
push
insl
test
sbb
jp
xlat
ja
jo
mov
stos
mov
sbb
sbb
adc
xor
jo
pop
sbbb
or
dec
test
adc
fstpt
jp
call
ret
scas
dec
inc
cmpl
leave
dec
push
sbb
data16
push
divb
hlt
in
je
xor
rcr
rcll
jge
out
pushf
je
or
scas
jae
in
mov
scas
stos
pop
and
inc
cltd
movsl
push
nop
mov
pop
mov
ljmp
fldcw
pop
and
inc
in
xchg
repnz
call
fiaddl
xchg
aad
or
call
andl
jbe
add
push
push
std
push
push
push
fldcw
push
loop
add
inc
pop
jae
scas
mov
xor
je
jmp
mov
repnz
mov
insl
into
ret
arpl
jmp
push
xor
and
shl
xchg
pop
ficoml
fisttps
push
dec
mov
fdivl
in
dec
inc
xchg
arpl
mov
cld
test
xor
popa
and
out
daa
bnd
pop
add
pop
add
adc
fwait
mov
mov
xchg
shl
mov
fdivrl
lahf
popa
enter
loop
dec
lret
mov
addl
mov
repz
arpl
mulb
fs
jecxz
mov
lcall
cli
aad
aas
hlt
mov
sbb
jae
jmp
mov
stc
hlt
cmp
push
je
cld
imul
js
lods
divl
xor
das
pusha
jne
push
mov
sub
imul
fmuls
jne
sub
mov
into
adc
idivl
mov
jmp
rcll
out
clc
cmp
sbb
fcoml
sub
and
dec
mov
xchg
sbb
cmp
mov
mov
cld
fnstcw
lods
or
test
hlt
cmp
cld
pop
outsb
lods
sarl
jp
loopne,pn
pushf
xor
test
pop
xchg
jl
decl
inc
je
mov
mov
lret
call
mov
outsl
cs
dec
or
xor
lahf
push
pop
pop
dec
mov
or
cld
adc
and
jne
dec
shlb
or
clc
mov
outsl
jbe
pop
jbe
stos
pop
bound
rclb
add
xchg
in
mov
adc
into
mov
mov
inc
mov
mov
xor
stos
push
or
cmp
shlb
fisttps
xor
test
cmpl
push
mov
dec
neg
mov
mov
jnp
inc
into
jb
mov
and
push
divl
jmp
lahf
dec
sub
icebp
sbb
xor
add
fcmove
sbb
out
xchg
clc
loopne
fisttps
dec
mov
mov
pop
dec
adc
insb
pop
aam
jecxz
aam
scas
decb
jl
and
and
inc
jg
jge
movsb
mov
test
cltd
dec
gs
or
lods
mov
add
or
mov
sarb
mov
push
decb
test
push
adc
sarl
das
movsl
js
fidivl
ljmp
sbb
mov
test
fcmovb
inc
lahf
mov
add
cmp
jecxz
xor
cmp
out
cmp
sub
pop
pop
ficoml
lret
testb
and
mov
mov
in
mov
orb
pop
in
lret
mov
pop
and
iret
repz
inc
mov
cmp
mov
stc
js
repz
push
jle
ljmp
cli
and
pop
inc
out
cwtl
mov
mov
mov
flds
mov
daa
scas
push
je
nop
out
mov
sub
mov
add
add
fidivrs
push
lret
mov
cli
ljmp
dec
pop
mov
rolb
sub
pusha
mov
dec
or
addr16
cmp
pop
dec
fistps
mov
inc
lods
mov
scas
into
mov
inc
scas
xchg
xchg
stos
sahf
jno
sub
cld
pop
scas
xor
xor
push
dec
sahf
sub
inc
push
popa
arpl
cmp
and
fistl
mov
movsl
fs
loopne
cmpl
lahf
mov
xchg
mov
lcall
in
scas
scas
sub
leave
lods
xchg
and
xor
and
push
shrb
test
add
les
push
in
mov
loopne
orl
fs
loope
xor
or
fwait
sbb
mov
fidivl
iret
mov
cltd
js
mov
and
cmp
jmp
in
add
inc
daa
es
xchg
movsb
sbb
or
test
lods
out
insb
imul
push
fldenv
inc
movsl
leave
cwtl
rorl
push
outsb
jmp
call
outsb
dec
in
xlat
mov
mov
mulb
cmp
sbb
mov
push
leave
fisubrs
sub
xchg
xchg
in
and
cmp
sti
fiaddl
or
popl
lret
sub
jg
stos
sahf
inc
cli
cld
popa
mov
or
mov
test
dec
dec
aad
notl
insl
xchg
cwtl
testl
outsb
xlat
mov
mov
xor
push
xor
jl
xor
ret
mov
jmp
dec
mov
or
mov
jo
imul
fmull
pop
jns
pop
xor
in
cltd
mov
add
add
pop
xlat
inc
data16
out
dec
je
and
out
lret
jne
gs
mov
mov
lcall
ss
repnz
mov
icebp
jno
cmp
jbe
sub
int
xchg
inc
stos
cltd
mov
mov
or
mov
xor
mov
in
fwait
mov
and
sti
enter
or
hlt
mov
pop
pop
shrl
inc
shr
jbe
outsb
nop
lods
in
xchg
imul
stos
mov
push
loope
add
and
pop
sbb
adc
cmc
mov
daa
inc
ljmp
pop
mov
adc
xor
mov
or
jbe
shll
ds
add
movsl
add
lds
fptan
xchg
jge
jge
lock
adc
inc
shrb
imulb
adc
shll
dec
test
xchg
mov
and
or
popl
pcmpeqd
adc
loop
pop
pop
test
dec
mov
add
jecxz
xchg
fwait
out
dec
ficomps
add
and
pop
xchg
xor
cmp
jae
sub
lret
xchg
push
mov
sub
cmp
jecxz
aam
mov
sbb
inc
test
in
push
xchg
mov
jno
xor
cmp
mov
jb
cmpl
add
mov
or
xor
pop
andb
mov
sub
mov
aam
std
add
jle
cmp
jbe
inc
int
lods
es
popa
ljmp
repnz
and
push
pop
test
xor
mov
push
subb
cli
adc
sbb
jb
div
fidivrl
sub
cmc
iret
add
enter
jg
rcll
add
and
inc
jl
or
int3
and
cmp
stos
mov
or
inc
lock
jno
xchg
push
ja
stos
mov
lea
in
inc
adc
and
sbb
in
sub
movsl
rcr
mov
jecxz
ficomps
or
mov
lret
inc
in
inc
or
repz
add
and
cs
in
ret
sub
xchg
fdivrl
out
hlt
mov
lcall
adc
mov
or
cmp
or
dec
cld
jbe
outsl
and
ret
add
test
and
xchg
cs
pop
loop,pn
shll
daa
cwtl
nop
push
mov
out
xchg
test
cmp
jmp
sbb
aas
sbb
mov
cli
mov
sbb
sub
cmpsb
mov
popa
cmp
sti
and
pop
mov
sbb
aas
aas
dec
cmp
fimull
andb
inc
xchg
pop
pushf
ds
cmp
xor
es
jbe
sarl
jg
xchg
push
lock
in
insb
ret
pop
enter
mov
sbb
pop
rorl
jl
dec
lret
xchg
js
sbb
imul
inc
adc
imul
sbb
add
dec
push
cmp
push
lods
mov
loopne
and
xchg
mov
sahf
mov
add
xchg
sahf
imul
and
pop
mov
outsl
jnp
push
cltd
movsl
shll
int
or
sbb
sbb
mov
ds
loope
xchg
inc
mov
add
aaa
xchg
nop
xor
movsl
rolb
stos
bound
or
mov
into
dec
and
or
sbb
fs
cmpsl
push
sub
jge
lock
xlat
jb
cmp
daa
pop
or
orl
ss
cli
jnp
or
mov
icebp
push
mov
xchg
sub
xchg
ret
jbe
leave
cmp
sbb
push
leave
enter
imul
lea
xorb
scas
repz
lret
int
ret
shll
movsl
loopne
ret
in
cmp
push
pop
mov
je
imul
adc
test
dec
stos
gs
cli
in
popf
out
in
dec
xchg
mov
mov
jae
jecxz
jb
inc
cmpsb
nop
push
fwait
negl
pop
push
jne
push
fimuls
pop
jb
fwait
fs
aas
jo
jno
insb
cmpl
pushl
pop
imul
jle
cwtl
push
sub
fwait
ss
bswap
pop
lahf
inc
pop
xchg
push
sub
mov
mov
ljmp
mov
inc
jae
sub
xlat
mov
jmp
cwtl
dec
jns
and
jecxz
xor
call
mov
int
cld
pcmpeqw
xor
pop
mov
call
fsubp
xor
dec
cmp
xor
lods
sub
inc
daa
mov
xor
fdivr
pop
cmp
or
pop
mov
sbb
daa
lods
rorl
mov
mov
out
inc
mov
push
push
nop
xor
movsl
inc
adc
daa
adc
negb
dec
aas
lret
pop
pop
dec
mov
add
test
mov
mov
jecxz
pop
pop
push
mov
sbb
push
add
and
call
sbb
pop
outsl
sahf
fs
rorl
cmpsl
sbb
push
xchg
bound
mov
xchg
inc
push
push
add
pop
fs
hlt
insl
add
or
push
sub
jb
push
mov
inc
xchg
out
pop
mov
jae
mov
insl
push
ljmp
mov
jae
test
xchg
push
xor
push
imul
gs
adc
mov
mov
inc
fdivr
mov
or
test
sub
andl
and
ds
movsb
push
pop
add
in
mov
subb
mov
mul
imull
fchs
cltd
xor
sbb
frstor
push
incl
test
adcl
cld
fiaddl
into
sti
stc
in
pop
or
push
jno
lea
loop
out
pop
insb
mov
pop
cmp
jnp
xchg
in
sub
pushf
iret
leave
add
mov
jle
inc
fisubrs
sbb
lret
fisubrs
fiadds
cmp
movsl
insl
sub
ret
or
mov
xchg
or
popf
enter
mov
popl
add
mov
js
and
repnz
cli
xor
add
sbb
push
ret
add
inc
movsb
jno
inc
je
xchg
insl
pusha
mul
push
xor
sbb
movsb
popa
ljmp
aas
dec
pop
xchg
ja
mov
sub
mov
cmc
sub
push
in
ss
sub
out
sbb
push
push
dec
xchg
sbb
loope
pusha
test
std
xchg
ljmp
xchg
lds
adc
mov
out
mov
in
mov
icebp
stos
push
mov
sbbb
pop
rcl
scas
popa
mov
faddl
popa
and
jmp
xchg
out
jae
loope
xchg
fldt
loopne
outsb
xchg
loopne
mov
mov
and
xchg
mov
xor
aad
mov
sbb
push
aam
cmpsl
cmc
dec
cmpsb
das
ja
mov
pop
pop
iret
sbb
repnz
imul
cmp
aam
out
add
sbb
fwait
stc
add
addl
bound
mov
jl
fsubl
push
lea
sti
mov
dec
rcrb
xchg
xchg
sarb
mov
mov
jg
sbb
jne
popa
jb
ret
sti
bound
push
jecxz
xor
xor
jmp
outsb
push
inc
pushw
xchg
dec
jle
leave
push
adc
xorb
push
adcl
cmc
mov
imul
out
push
insb
test
jo
cmp
sbbl
cmp
inc
cmpb
adc
clc
jl
les
outsb
or
or
adc
or
sub
ss
out
outsb
cmp
es
sub
dec
cmp
sub
clc
xor
in
clc
shr
mov
das
jp
outsl
into
add
jae
add
add
aaa
aad
sub
jmp
push
sbb
sub
push
ds
sbb
mov
mov
rcrb
mov
mov
adc
popa
or
jecxz
dec
jbe
imul
xchg
insb
je
loop
dec
insl
out
lds
aad
lea
or
pop
adc
add
je
sti
int
dec
jno
push
scas
arpl
cs
lea
cmova
sub
fadds
mov
jl
xchg
sbb
jne
xor
repnz
ljmp
xor
and
jnp
cmp
xchg
inc
iret
xchg
ljmp
dec
adc
je
aad
lods
scas
addr16
xchg
cld
mov
test
aaa
dec
repnz
push
jns
inc
mov
scas
jmp
cwtl
mov
xlat
fdivrl
cs
mov
int
ret
xor
sub
xchg
xlat
xchg
ds
aam
inc
xlat
cli
pop
pusha
xor
test
lock
fstps
ljmp
mov
aas
mov
adc
dec
pmullw
ret
sub
test
push
and
sarb
mov
dec
std
je
inc
sbb
cmp
mov
push
mov
or
mov
dec
inc
sub
inc
jnp
shll
xchg
iret
loop
mov
push
popa
out
cwtl
dec
xor
inc
std
hlt
push
pop
lcall
cltd
push
arpl
loop
jo
mov
add
in
pop
xor
mov
adcl
faddl
movsb
push
mov
incl
push
icebp
adc
xchg
mov
add
mov
repz
cmpsl
cld
and
enter
lds
ficomps
lods
mov
mov
mulb
inc
mov
sub
cld
push
cmp
gs
mov
test
and
inc
push
adcb
loope
pushf
push
movsl
clc
push
inc
jns
xor
gs
push
lret
js
add
xor
mov
jmp
xchg
in
dec
sub
je
popa
std
cmp
jns
cmpsb
pop
push
jmp
mov
dec
mov
add
daa
jb
jae
loopne
test
pop
cmp
popa
sub
inc
jns
mov
mov
gs
lea
jl
loopne
ret
pop
test
jge
dec
imul
out
jbe
add
jg
in
and
jle
jns
lretw
mov
xor
in
mov
ret
mov
lcall
lock
inc
or
jle
out
add
outsl
test
inc
and
sbb
pop
mov
xchg
and
les
inc
add
popf
je
push
xorl
icebp
lahf
out
push
aad
leave
cmpl
sbb
push
pop
test
sbb
pop
fnsave
push
lcall
out
ljmp
int
dec
outsb
aad
out
pop
popl
hlt
sbb
lea
inc
dec
or
dec
adc
push
or
addb
and
mov
stc
xchg
shll
std
cli
cmp
and
xchg
dec
repnz
stc
cmp
dec
scas
int
ljmp
and
cli
jle
lret
stos
jnp,pt
notb
negl
or
loopne
xchg
movntq
out
xor
pop
stos
inc
dec
mov
sub
jecxz
jecxz
rclb
fnstsw
mov
or
jecxz
fs
jp
xor
hlt
cmp
repz
mov
rclb
cmpb
addr16
cmpsl
les
add
add
pop
dec
popf
ss
mov
stc
inc
lahf
daa
mov
scas
nop
repz
or
mov
jle
or
pusha
push
outsl
out
jecxz
aad
or
inc
test
inc
push
mov
testb
subb
dec
dec
mov
push
xor
mov
adc
dec
fwait
arpl
and
insl
int
neg
call
xchg
jmp
shlb
push
js
into
ja
lods
inc
test
pop
mov
inc
sbb
pushf
pop
and
sub
pop
push
mov
in
daa
or
nop
lds
fidivrl
push
mov
xor
cmp
lahf
pop
sti
std
js
cltd
dec
mov
xor
lock
and
aas
loope
or
mov
arpl
scas
or
jge
loop
jp
push
out
jp
mov
pop
js
mov
lea
cmp
fdivrl
int3
addr16
nop
mov
insb
movsl
aaa
or
inc
pop
xchg
cmp
out
cld
stos
cmp
jecxz
lea
fidivrl
stos
pop
or
test
int
mov
add
mov
sbb
fstp
mov
push
sub
xchg
pusha
inc
sbb
icebp
add
xlat
imul
arpl
nop
xchg
jb
and
mov
ja
mov
or
jge
inc
insl
mov
shrl
xchg
cmp
mov
or
pusha
ret
cmp
lods
arpl
imulb
stc
jg
or
fadds
clc
ret
xchg
test
pop
inc
aaa
inc
mov
scas
movsb
dec
pusha
or
cli
lea
cli
and
dec
iret
push
movsl
xor
lret
aad
pop
aaa
mov
aad
jbe
aas
cmp
je
sub
stos
mov
fidivrl
ret
or
lret
dec
in
ret
jne
xor
push
fmull
shr
daa
into
xor
mov
jl
orl
push
pop
inc
pop
jg
pop
imul
cmp
clc
dec
dec
mov
rcll
test
je,pn
and
mov
in
imul
xchg
sahf
hlt
loop
xor
jo
jle
fstp
sbbb
cmp
fs
aas
xor
cmc
out
daa
insb
dec
mov
push
xor
gs
test
fldcw
in
dec
stos
sbb
cmp
push
loopne
clc
mov
mov
movsl
neg
dec
test
cs
ficompl
cwtl
lret
out
add
pop
dec
inc
je
aaa
pop
rcll
insb
outsl
jp
ret
xor
out
mov
xchg
dec
std
mov
mov
ljmp
outsl
dec
aam
push
or
mov
push
or
sbb
pop
xor
add
data16
add
inc
cmpsb
sarl
xor
rorb
arpl
or
ret
jo
into
mov
lahf
sub
mov
rcr
mov
mov
icebp
xorl
je
es
std
xchg
in
add
xchg
jg
dec
inc
jne
in
mov
xor
dec
and
dec
cmpsb
mov
fisubrl
push
cmp
into
incb
lock
sbb
stos
data16
fs
lea
jnp
xor
push
mov
out
bound
rorl
jae
jl
popa
mov
xchg
push
lcall
lahf
jne
fimuls
adc
outsb
mov
fmull
repz
pop
das
xchg
and
fidivrl
cmp
cmc
cmp
xor
sub
fsubl
cmp
fs
adc
push
jns
test
jge
out
push
sbb
sbb
add
sar
cmc
mov
icebp
fsts
rclb
rolb
lods
aaa
sbb
mov
sub
adc
cmp
divl
mov
mov
insl
adc
bound
test
aas
fwait
push
lock
mov
and
and
push
dec
pop
lods
repz
fidivrl
jmp
or
cmp
mov
push
stos
pop
rcrb
or
in
push
sub
or
int3
mov
mov
addr16
jbe
xchg
out
rorl
nop
add
and
insb
out
int3
fdivl
inc
shll
cmp
incl
or
xchg
pop
push
rclb
sbb
in
pop
nop
cmpsl
pop
add
ja
mov
repz
jmp
push
mov
nop
jle
es
loope
adc
mov
ret
jp
out
push
jecxz
ret
outsl
push
cmpl
data16
push
push
xchg
nop
jge
std
or
fnsave
ficompl
jecxz
dec
mov
sub
in
inc
bound
or
jge
pusha
xchg
ljmp
out
cmpb
into
loope
fsts
mov
rorl
daa
sbb
push
xlat
clc
lret
add
push
int3
push
int3
adc
xchg
xchg
out
jbe
cmpsb
mov
xlat
rclb
cmpl
fs
clc
cmp
stc
scas
xchg
mov
aad
xchg
addr16
xchg
aam
xor
or
sbb
scas
filds
lahf
pop
pop
lds
adc
lock
push
cltd
mov
push
mov
jl,pt
inc
xlat
push
enter
sbb
aam
cmp
andl
or
or
test
add
fisubs
loopne
cmp
jo
lahf
mov
dec
iret
adc
scas
xchg
pop
mov
pop
cmp
mov
mov
push
cmpsb
inc
and
pop
out
xchg
xchg
aad
aam
xor
xchg
pop
xor
mov
nop
push
jbe
aas
in
or
addb
scas
dec
idivl
movsb
sbb
xor
pop
into
mov
mov
in
push
jge
xchg
mov
xchg
loopne
cmp
int
shrl
inc
or
adc
xchg
sarb
adc
leave
fists
loopne
mov
lods
xor
sbb
push
cmpsb
dec
popf
nop
sbb
jl
inc
repz
xlat
add
and
into
jg
ss
inc
xor
lds
pop
xchg
cld
push
rorl
cld
cmp
cmp
cwtl
data16
adc
dec
stos
sbb
mov
pop
orb
iret
dec
jg
testb
bound
rcl
dec
dec
insl
rcll
data16
adc
cmpsl
jmp
shl
adc
jmp
mov
lock
mov
jmp
imul
push
loope
xchg
adc
ds
or
cld
cmp
sub
xor
scas
push
aaa
sub
mov
rol
roll
ret
add
in
xor
aam
inc
jns
test
daa
and
sub
push
aaa
and
scas
pop
add
aad
cmp
pop
mov
push
test
jae
mov
lds
push
fisubs
inc
je
fcoml
sub
negb
mov
adc
sbb
jg
in
stc
mov
mov
clc
or
jg
mov
ret
sbb
sbb
mov
js
dec
ret
stos
test
std
mov
bswap
pop
test
sub
mov
xchg
cmp
bound
sub
lcall
lods
push
cmp
cmp
test
xchg
sub
shlb
rorl
adcl
popf
xor
inc
push
cmc
inc
push
jne
mov
ret
mov
repz
lods
xor
lock
jge
or
pop
xchg
mov
shll
mov
stc
hlt
stos
and
testl
test
mov
or
jmp
cmpsl
ret
lock
pop
pop
jle
movsl
stc
mov
repz
pop
lods
dec
mov
jmp
or
push
test
mov
xor
in
mov
xchg
popa
inc
xchg
xor
dec
xor
out
test
xor
add
pop
jo
int
dec
into
push
dec
push
push
sub
inc
dec
ss
xlat
push
pop
repnz
je
ja
sub
sub
push
divps
pusha
inc
xchg
add
jae
stos
lods
insb
int3
cmpsb
in
cs
inc
outsl
scas
sub
addr16
outsl
sbb
push
std
movsb
add
jp
mov
mov
dec
mov
inc
cmpsl
jp
dec
sub
jbe
xchg
sub
sbb
outsl
pop
call
xor
int
out
or
enter
ret
cwtl
shrb
inc
and
outsb
mov
mov
mov
ret
push
inc
clc
roll
mov
test
push
mov
pop
push
and
inc
cmpsl
out
daa
test
add
orps
in
jl
push
pop
mov
subl
in
cmp
and
lock
mov
fwait
cmp
mov
les
in
dec
aaa
inc
and
mov
mov
push
push
mull
push
in
xor
hlt
andb
add
xchg
push
cwtl
xor
sbb
and
pop
mov
test
daa
adc
pop
ret
mov
hlt
jns
xchg
sar
mov
or
pop
aad
push
inc
mov
jge
aad
arpl
jl
pop
cs
mov
mov
push
nop
push
das
or
in
mov
nop
sti
sub
icebp
shll
rclb
in
cs
xchg
adc
inc
fsubp
sbb
lea
stos
mov
sub
pop
pop
shr
or
rcl
push
movsl
cmp
pop
or
icebp
std
xchg
stos
and
js
dec
leave
xor
jns
pop
mov
inc
sbb
loop
into
cmpsl
shlb
inc
lods
jge
pop
cltd
dec
js
imull
add
addr16
push
repz
mov
jle
and
mov
lret
lahf
adc
xchg
lret
sbb
xchg
xchg
cwtl
jg
fstpl
pop
addr16
notl
xor
xchg
sub
push
out
aas
sub
icebp
inc
addl
enter
frstor
out
mul
mulb
pusha
mov
cmpsl
js
xchg
fwait
in
push
cs
pop
les
mov
jae
inc
sbb
cs
in
mov
pop
lea
xchg
hlt
test
dec
inc
in
roll
mov
test
mull
cltd
movsl
das
xchg
fiaddl
sub
outsl
mov
inc
jo
mov
adcl
cs
cwtl
test
xchg
jl
mov
adc
in
mov
add
out
sbb
jge
mov
fiadds
mov
int3
mov
xchg
cltd
jp
sub
sbb
gs
cmc
subw
mov
dec
divl
mov
insl
pop
cmpl
xchg
dec
push
gs
stc
aad
arpl
insb
dec
scas
sub
adc
push
rcr
sub
jp
frstor
pop
xchg
scas
pop
cmp
filds
and
mov
jo
rorl
dec
scas
sbb
ror
nop
xchg
int
inc
dec
int3
mov
push
inc
inc
out
arpl
fadds
sbb
pop
bound
xlat
ljmp
subl
outsw
stc
mov
aas
sbb
out
inc
mov
pop
pop
test
sbbb
jl
rolb
and
loope
je
push
mulps
pop
mov
sbb
or
test
add
mov
sahf
cs
sbb
mov
xchg
lock
test
or
jae
fdivrl
je
lret
rolb
jecxz
dec
adc
cmp
lock
pop
fcoms
test
out
lock
dec
das
test
jmp
movsl
ds
jns
fimull
lock
add
jno
rcrl
xchg
xor
inc
or
cmp
push
cmp
push
xor
xchg
out
icebp
repnz
xchg
xchg
jae
insl
mov
mov
mulb
repz
incb
cltd
mov
insb
pop
stos
mov
push
xchg
and
xchg
and
push
lcall
dec
popa
mov
adc
mov
test
push
push
loop
imul
adc
cmpsl
fisubs
jge
mov
es
mov
cmpsl
add
pop
sti
jmp
jg
xlat
rolb
inc
shl
pop
les
dec
fabs
in
lods
shrl
loopne
add
imul
mov
test
xchg
and
repz
jle
mov
pushl
lods
mov
or
lods
adc
inc
cmp
push
cmp
push
and
pop
or
adc
jnp
mov
sti
fcompl
xor
mov
cmp
jbe
and
pushf
inc
int
cld
mov
jmp
cmpsl
shrl
jbe
bound
adc
sub
sub
ss
cmp
icebp
cmp
adc
mov
pop
cmp
mov
pop
sahf
push
movsl
mov
mov
es
aas
syscall
cmp
es
iret
lea
cmp
adc
lock
xchg
cs
xor
cld
insb
movsl
adc
sahf
int3
inc
and
inc
sbb
mov
cmp
push
es
popa
stos
into
pop
xorl
and
cs
push
inc
push
leave
xchg
add
pop
or
mov
fldl
in
in
mov
xchg
push
fistl
fcompl
and
in
mov
and
push
icebp
jns
mov
cmp
xchg
outsl
into
lret
xor
dec
mov
mov
orb
mov
mov
dec
or
addb
test
cmp
negb
add
inc
cmp
sbb
mov
test
push
dec
test
js
testl
or
push
out
push
pop
pushf
xchg
repz
repnz
xlat
addl
aaa
fcoml
or
aad
or
pop
mov
push
add
or
sahf
out
sbbl
in
push
addl
lds
mov
cmp
cld
pop
inc
fisubrs
jl
sbb
outsb
lea
les
sbb
push
mov
loope
xchg
mov
leave
aaa
mov
clc
xlat
loop
lcall
add
sub
ljmp
sbb
daa
pop
ret
pop
adc
xor
in
push
shrb
aas
mov
pop
gs
or
lahf
negb
cmp
mov
lock
mov
daa
roll
in
add
pushf
loope
push
mov
int
xor
sbb
mov
add
inc
sbb
hlt
adc
mov
fimuls
leave
xor
lods
fldl
xor
movsl
in
dec
sbb
push
add
mov
cmp
stos
sub
pop
fmul
inc
ljmp
out
inc
stc
push
sbb
mov
bnd
fwait
sbb
mov
mov
and
stos
movsb
nop
or
jecxz
mov
push
clc
pop
jbe
add
dec
std
mov
inc
je
sbb
dec
les
fstpl
mov
xchg
push
xchg
and
cs
mov
and
rorb
js
mov
xchg
ret
cmp
lods
daa
pop
sub
lahf
mov
jmp
cmp
leave
jo
jae
les
mov
pop
aam
mov
sbb
adc
xchg
lret
hlt
pop
mov
out
push
in
fadds
data16
ret
push
mov
loop
jmp
push
or
shr
mov
mov
cwtl
sbb
dec
rolb
cmpl
std
xchg
mov
xchg
cltd
xchg
and
outsb
add
mov
sub
adc
arpl
or
cli
xchg
xchg
nop
dec
loopne
jecxz
aaa
sub
bound
jne
in
ss
fstpl
mov
jno
adc
insb
add
movhps
jns
mov
dec
add
jecxz
push
call
add
inc
pop
pop
jecxz
jbe
or
stos
or
pop
scas
ss
inc
into
dec
xor
mov
mov
mov
scas
out
ret
pop
or
sbb
sub
cwtl
int3
lea
or
or
addr16
movups
mov
push
mov
xchg
mov
sub
jae
inc
repz
sub
push
push
and
add
pushf
and
add
ret
cmp
lea
mov
shlb
cmp
xchg
cld
mov
fidivl
mov
stos
les
ljmp
aad
mov
aas
or
aas
xchg
jne
and
xchg
fiadds
cwtl
sbb
icebp
imul
push
repnz
nop
xchg
dec
or
jae
xlat
lcall
dec
iret
imul
mov
clc
adc
cld
jg
jge
inc
jns
lret
add
dec
sbb
ret
arpl
pop
outsl
stos
cs
mov
ret
into
int3
and
push
xor
mov
pop
xchg
sub
dec
sbb
mov
pop
mov
es
push
int3
mov
dec
jo
or
xchg
inc
fsub
ljmp
xchg
cmp
pop
incb
es
cmp
gs
out
out
and
loop
clc
lea
cmp
pop
mov
cmc
mov
cwtl
call
pushf
sbb
mov
push
fnstsw
xor
repnz
push
mov
loop
xchg
sub
jb
movsb
jne
and
icebp
movsl
cmp
lods
nop
fistl
sbb
and
decl
jns
push
xchg
mov
xorb
dec
mov
scas
or
movsl
ror
pop
in
xchg
push
sbb
and
sbb
lock
jns
xchg
dec
mov
dec
push
aad
test
adc
push
jl
sbb
aas
gs
test
mov
repnz
incb
lds
adc
cmpsl
pop
jno
imul
mov
jmp
pminub
fwait
sub
jmp
add
repz
push
jb
jle
outsb
dec
push
and
lret
nop
push
cmp
add
fldt
mov
mov
clc
ret
mov
mov
adc
add
adc
pop
out
inc
push
sbb
stos
xor
add
xchg
dec
lock
stc
sbb
adc
lea
mov
mov
add
shlb
fcoml
xor
mov
repz
jnp
out
dec
and
dec
mov
push
ficompl
push
pop
emms
jmp
insb
jo
ljmp
dec
scas
fcompl
inc
stos
cmp
sti
push
pop
data16
arpl
cmpsb
dec
push
cmp
mov
nop
out
int3
push
inc
xchg
pop
jno
mov
movsb
les
icebp
mov
hlt
xchg
mov
add
loopne
nop
lret
cli
pop
sbb
xor
out
xchg
ret
fmull
fbstp
push
lock
in
or
pop
lods
rcr
push
jae
push
pop
sbb
pop
mov
xor
cmp
fstps
xchg
aad
test
cld
iret
cs
sbb
cmp
push
inc
push
out
imul
enter
in
pop
mov
push
cmp
test
pushf
ds
pop
mov
ficomps
idivb
lods
cmova
icebp
insl
cltd
lahf
shrb
xchg
das
push
cmp
mov
ja
mov
xor
xchg
push
cmp
in
loopne
fwait
mov
cmp
add
jnp
hlt
mov
insl
mov
and
sbb
xchg
sahf
sbb
push
fisttpl
out
mov
pop
mov
cli
jo
fcompl
add
loop
and
pop
mov
xor
sub
dec
sbbb
insl
push
cmp
mov
pop
dec
xchg
jb
push
out
cmpsl
outsl
in
je
jg
dec
jl
test
and
das
je
xor
xor
cmpsl
test
pop
cld
cs
or
mov
pop
fisttps
jp
sti
in
hlt
mov
add
sub
sub
push
xchg
fs
mov
pop
add
xchg
fiadds
aad
lret
addl
add
pop
jb
lret
popa
stos
jae
test
jp
repz
outsl
sbb
popf
out
mov
out
xor
mov
nop
pop
pop
paddusb
ss
ss
dec
jp
fdivl
xor
and
and
sbb
jmp
sbb
inc
or
sbb
xchg
enter
dec
ds
jns
testl
repnz
int3
add
imul
inc
jle
sbb
jge
test
xchg
mov
arpl
pop
adc
jnp
mov
dec
cmpb
fld
std
inc
push
adc
add
jecxz
test
xchg
ret
mov
addr16
xchg
mov
addr16
add
cld
out
dec
inc
call
out
sbb
test
std
pop
cmpsb
out
push
stos
or
xchg
fcoml
mov
inc
xchg
ds
cmp
sarb
mov
adc
stos
enter
jge
jae
repz
gs
inc
shll
and
mov
sbb
mov
cmp
dec
sub
fcomp
xchg
loopne
mov
out
stos
lods
lret
das
hlt
xor
cmp
sub
inc
mov
les
xchg
enter
popa
dec
imul
insl
dec
mov
out
mov
shll
cltd
inc
mov
gs
xchg
addr16
ffree
push
add
sub
push
sub
pop
dec
ss
subb
jecxz
lock
cmp
mov
fwait
or
cmp
mov
out
rcrl
dec
daa
lahf
loopne
int
sbb
jge
cmpl
xchg
mov
fbstp
mov
jns
jl
add
inc
mov
sti
lret
push
imul
dec
xchg
jo
xchg
push
mov
jmp
movb
imul
mov
push
sar
or
loopne
jb
push
sub
jp
pop
adc
pop
xor
es
xchg
mov
and
inc
pop
pop
and
and
andb
int
fbstp
sahf
mov
incl
sbb
imul
jmp
outsb
xor
push
test
push
sbb
push
test
add
jo
xlat
xlat
daa
rol
bound
insb
adc
into
das
push
rep
mov
rcl
insb
stc
enter
lahf
cltd
jns
leave
bound
xchg
addr16
jns
mov
sbb
insl
clc
jnp
sub
stc
popf
test
stc
aas
ficoms
mov
ja
movsb
ret
in
dec
push
mov
mov
dec
push
iret
imul
mov
pop
dec
sub
or
std
push
out
and
inc
out
icebp
jns
push
jecxz
jle
xlat
loope
push
sbb
insb
stos
jl
pop
lds
mov
lods
addr16
arpl
xlat
leave
inc
pusha
imul
pop
cmp
jge
pop
bound
stc
daa
pop
ret
in
iret
xor
and
lahf
add
arpl
inc
jmp
cmpsb
cmpsb
pop
shll
mov
mov
fisttps
imulb
jne
icebp
dec
pop
jae
out
cmp
cmp
or
push
mov
cmpsl
into
inc
or
or
incl
lea
imul
sub
push
dec
inc
nop
mov
push
inc
mov
aam
in
push
in
jecxz
int3
subl
jl
mov
fisubs
ret
xor
mov
jle
test
sbb
insb
push
jnp
jp
fs
inc
test
cmpsb
push
jecxz
mov
pop
sbb
mul
ud0
or
sbb
add
or
cmc
jge
sbb
rorb
cwtl
lcall
out
push
je
dec
add
dec
in
pop
adc
icebp
inc
push
cmpb
mov
lret
pop
push
sbb
dec
add
or
orb
and
aaa
sub
lret
dec
es
mov
subb
inc
mov
test
or
test
loop
je
pushf
imul
and
movsb
cmp
retw
mov
sti
mov
sbb
xchg
arpl
xchg
xchg
mov
xor
bound
dec
hlt
cltd
sbb
xchg
cmc
fwait
cli
xor
ret
lcall
bnd
dec
pop
add
in
leave
fisubs
xlat
jno
test
je
and
cmp
pop
jnp
push
ret
and
mov
fistpl
arpl
cltd
loopne
push
mov
cmpsl
test
bound
imul
fisubrs
cmpsb
cmp
aas
into
xchg
mov
pop
pop
movsl
push
ss
movsl
jno
shrl
sarb
ret
mov
gs
lret
inc
fldenv
aas
add
mov
dec
ds
push
data16
ret
lea
dec
mov
in
adc
push
adc
push
lods
dec
test
movsb
shr
es
std
leave
jb
mov
in
ret
mov
repnz
leave
pop
cmc
stos
ja
fmulp
pop
fldl
sub
sbb
imul
std
sti
enter
movsl
push
lahf
in
mov
mov
pop
mulps
xor
std
cmpb
out
mov
inc
adc
daa
adc
or
popa
push
push
into
negb
cmp
inc
mov
push
mov
mov
adcb
cs
sub
add
int
and
push
cmp
add
pop
sub
clc
sbb
jne
add
cmpsl
inc
jns
jmp
cmp
iret
fsubrp
mov
fs
stos
adc
enter
pushf
push
cltd
inc
rolb
loopne
sti
in
pop
xchg
mov
lods
push
sbb
sub
pop
push
stc
rorl
out
and
ficompl
xchg
pop
xchg
fadds
pop
sub
ret
shlb
or
test
jne
jmp
mov
mov
push
push
bound
sbb
out
pop
adc
inc
test
cmpsb
pop
test
push
in
ret
nop
cli
icebp
lea
adc
push
cld
pop
xchg
leave
pop
int
jns
jnp
sbb
xchg
xor
test
out
mov
push
sbb
lods
cltd
loop
les
sahf
inc
cld
cmp
insl
daa
addr16
or
test
dec
mov
push
loope
sub
std
popa
test
cmc
mov
sbb
leave
push
jo
xor
mov
scas
jge
sub
aad
mov
sbb
fsub
clc
in
mov
scas
mov
mov
and
inc
sub
push
iret
adc
rclb
xchg
stc
lret
xchg
pop
and
roll
aam
mov
jno
enter
mov
xchg
jae
aad
loopne
test
aaa
mov
xchg
pushf
cli
movsl
cwtl
call
mov
icebp
daa
ja
push
xchg
nop
jnp
cli
out
lret
mov
sarb
inc
jae
daa
xchg
jbe
adc
mov
cli
or
scas
or
fsubr
dec
shrl
sti
mov
mov
adc
mov
inc
pop
inc
push
push
sahf
popa
in
loop
fisubrl
add
or
or
test
mov
mov
in
mov
push
shlb
movsl
lock
dec
stc
sub
jo
cmp
aad
xchg
imul
stos
mov
mov
cwtl
ret
jo
pop
arpl
test
fildl
test
movsb
sti
filds
in
pop
insl
daa
popf
lea
test
mov
cmp
and
in
leave
mov
enter
lea
push
xor
imul
rorl
adc
clc
mov
xor
push
mov
enter
std
mov
jnp
push
insb
out
jns
cmp
inc
mov
jbe,pn
sub
xchg
ja
insb
clc
sarl
jb
push
inc
pop
enter
aaa
cs
mov
cmpsl
push
scas
xchg
stos
adc
mov
loop
and
jbe
lahf
pop
and
loopne
shll
or
sub
cld
outsb
lahf
mov
sbb
mov
test
xchg
ret
cmpsb
mov
leave
add
jae
lock
or
mov
ds
ret
fistpl
xor
mov
ja
mov
icebp
std
push
cmp
adc
in
fiaddl
mov
pop
jnp
push
fdivl
ja
jp
repz
xor
repnz
imul
inc
dec
mov
call
out
cmp
loopne
mov
ret
cmp
pushf
imulb
jne
add
cmp
xor
sub
push
out
outsl
add
inc
xchg
mov
sbb
mov
enter
xchg
adc
mov
cmpsl
in
pop
jne
push
int
mov
add
inc
cltd
dec
test
mov
sub
popa
or
sbb
mov
mov
ljmp
into
adc
add
fstpt
cmpb
jno
mov
pop
lcall
mov
jae
data16
mov
and
cmp
popf
jbe
stos
sub
fisubl
xor
xchg
mov
push
pop
jmp
and
lret
lds
loop
cld
sub
out
dec
in
inc
ds
fadds
stos
int3
cld
outsb
pop
fidivrl
mov
sbb
cmp
popf
scas
mov
push
sbb
gs
das
and
cltd
xor
cmp
xchg
fbstp
shlb
out
jg
sbb
je
jecxz
je
mov
push
imul
lock
ret
jno
stos
sub
xchg
xor
push
sub
fcoms
mov
or
jge
out
loopne
push
dec
inc
cwtl
pop
push
aaa
cwtl
adc
inc
push
jle
ret
lcall
cs
pop
and
scas
cmc
enter
or
stc
cmp
cmp
mov
aaa
mov
xchg
xchg
cmp
jnp
cmp
mov
inc
xchg
mov
push
xor
add
test
pop
and
xchg
imulb
jnp
mov
sub
mov
call
cld
sbb
mov
insl
int3
ss
sbb
jo
cltd
inc
adc
jg
push
pop
cmp
mulb
xor
int3
jmp
pop
mov
adc
xlat
adcl
shl
mov
jle
xchg
xor
push
mov
and
loop
inc
test
imul
fimuls
cmpsl
lahf
xlat
mov
add
sub
movsl
add
mov
add
imul
outsl
xchg
dec
or
popf
sbb
adc
mov
cs
cmp
into
imul
jmp
mov
int
push
and
add
mov
mov
in
addr16
shlb
movsl
or
cld
stos
pop
inc
pmovmskb
push
sbb
cmp
mov
loope
dec
outsb
pop
repz
and
jno
dec
lods
jns
cwtl
and
push
add
cmp
pushf
sub
pop
jl
stc
sbb
push
adc
test
cmp
xorb
hlt
cmpsb
jg
add
mov
dec
mov
jg
inc
inc
push
inc
pop
mov
or
les
mov
dec
popa
or
inc
in
xchg
mov
outsl
cmp
out
outsl
xlat
stc
aad
xor
cmp
test
psadbw
push
dec
and
cld
scas
rolb
mov
or
jmp
cmp
adc
int
sub
push
dec
jge
pop
shl
test
or
cmp
dec
cmp
mov
mov
cltd
sbb
pop
and
mov
mov
xchg
cmpsl
iret
imul
pop
pop
cltd
push
in
pavgb
jmp
movsb
mov
cld
bound
adc
and
mov
add
jle
out
orb
stos
xlat
repnz
inc
mov
test
mov
xor
mov
push
jle
incl
xchg
jnp
xchg
imul
stos
add
push
mov
dec
andb
outsb
fucomi
lock
fistps
xchg
ja
jge
inc
sti
in
gs
jnp
inc
lcall
adc
push
clc
add
xor
pushf
loop
or
cmpsb
lret
xor
xor
add
lahf
pop
jns
cmpsl
mov
add
lret
mov
subb
lock
inc
lods
cs
into
call
fs
test
xchg
lock
mov
addr16
or
mov
aad
rcrl
andb
jne
xchg
inc
scas
mov
mov
pushf
nop
fwait
outsl
test
mov
and
cmp
les
dec
fs
sub
pop
mul
mov
lcall
cmp
jl
or
dec
push
jg
movsl
xlat
sub
mov
loop
in
cmc
mov
push
repnz
mov
jle
in
in
sbb
lcall
les
inc
shl
clc
mov
push
std
out
lea
push
add
aas
mov
ss
sbb
in
imul
jb
addr16
shlb
mov
ss
dec
aaa
je
out
rclb
dec
cmp
aaa
lret
es
in
jge
into
pop
icebp
cmp
mov
jnp
das
jle
jp
fdiv
dec
sbb
js
loopne
sbb
sub
mov
mov
shr
xchg
mov
loop
xchg
lds
bound
jae
aaa
int3
and
jmp
or
ss
js
fldenv
aam
cmp
mov
cli
pop
pop
push
and
fs
xchg
hlt
adc
xor
dec
cld
xor
gs
andl
dec
insb
add
adc
popf
mov
jns
data16
xchg
sub
push
jecxz
stos
loop
sbb
dec
je
mov
nop
int
dec
fwait
loopne
jno
mov
pop
jns
pop
mov
js
testb
and
jecxz
cmp
ss
data16
faddl
insl
push
add
dec
lret
bound
mov
dec
or
icebp
out
mov
dec
popf
repnz
stc
xor
push
mov
cmp
loope
xchg
std
out
add
mov
xor
jo
cmc
inc
xor
fistl
icebp
lods
mov
icebp
fildll
fstpl
jne
sarb
loop
mov
mov
ror
cmp
adc
cmpsl
or
imul
and
xor
int
xchg
mov
jo
int3
clc
insb
cmpsl
push
or
shrb
repz
insb
nop
fisubs
cmp
mov
and
lahf
pop
call
push
cwtl
mov
inc
xor
or
mov
and
add
add
in
gs
aad
xlat
mov
jge
sub
shlb
iret
lahf
pop
pop
add
jmp
mov
test
mov
jns
jle
push
bound
insl
lret
sbb
xchg
mov
pop
cli
cmp
jmp
mov
inc
mov
sbb
cmc
push
negl
mulb
ficomps
and
or
fimuls
lods
aam
bound
sbb
pop
stos
ffree
loope
xchg
xor
adc
and
mov
repz
popa
pushf
out
test
js
push
dec
inc
inc
push
or
jg
sarl
gs
and
mov
or
roll
repnz
hlt
mov
add
jge
sub
mull
jno
jns
test
xchg
jmp
sahf
sahf
pushl
mov
fs
push
push
jle
mov
call
ds
mov
sbb
bound
xchg
push
insl
addr16
leave
pop
cmpsl
jae
mov
pop
xchg
clc
jp
repnz
int
negl
pop
sub
sbb
popa
xchg
popf
mov
xchg
sar
iret
pop
inc
mov
sbb
push
in
in
inc
mov
sarb
ds
jle
mov
sub
pop
cli
mov
add
arpl
dec
pop
push
in
or
andl
jmp
mov
xor
test
xchg
jo
outsb
xchg
cs
imul
mov
inc
xchg
add
xchg
push
jno
fs
or
xchg
dec
jae
lds
and
jmp
shll
pmaxub
in
mov
sub
pop
or
or
mov
add
cmc
xchg
rep
ffree
and
aad
fisttps
sub
insl
scas
jo
jbe
lret
test
int3
adc
sub
dec
fdivl
cmp
test
cmp
adc
fst
xchg
sahf
gs
notl
mov
popf
les
dec
or
fiaddl
popf
dec
jl
or
movsl
out
out
push
int
leave
jae
in
sbb
inc
js
sbb
pop
out
xlat
pop
inc
mov
mov
je
dec
adc
cmp
test
pop
adc
xor
std
test
cmp
mov
dec
movsl
adc
add
int
adc
pop
out
or
jbe
aas
mov
push
xchg
sti
add
jle
pop
jb
sbb
mov
iret
cs
jp
or
push
rolb
jge
cmp
xchg
xchg
xor
jo
xchg
xor
pop
xchg
add
push
cmp
mov
mov
push
movsb
aad
inc
arpl
neg
adc
xchg
jg
ljmp
clc
xchg
xor
dec
add
shll
sub
lock
cmp
and
cmpsl
leave
in
mov
mov
and
adc
mov
fwait
pop
rolb
jno
addr16
mov
cmpsb
adc
mov
and
sub
into
sbb
add
dec
rcrl
push
sti
nop
aaa
outsb
sbb
xchg
std
fbstp
mov
inc
push
mov
pop
stc
movsb
cmp
pop
mov
lock
or
jp
cmp
lds
push
dec
inc
inc
and
push
mov
dec
mov
ret
insl
mov
les
cmp
shlb
scas
nop
xor
mov
pop
loopne
dec
mov
psrld
stos
mov
cmp
hlt
add
out
adc
cmp
rclb
shll
lcall
sub
cltd
dec
pop
xchg
insl
ja
xor
sbb
sub
xchg
mov
cltd
inc
es
mov
xchg
lahf
outsl
and
mov
sbb
jmp
ret
aam
out
cmpsl
pop
xor
test
xor
mov
pop
cltd
shr
add
xor
xchg
ja
nop
lods
das
or
xor
xor
jnp
push
and
pop
mov
repz
dec
cmpsl
jg
fisttps
ret
fdivp
inc
loope
hlt
ret
jbe
into
add
sbb
jl
dec
cmp
cmpsl
inc
fistps
mov
dec
add
mov
xor
std
sub
pushf
sbb
testl
stos
push
inc
nop
or
in
mov
ja
push
sub
inc
mov
movsb
subb
xlat
pop
outsl
adc
xchg
or
or
dec
mov
lahf
iret
cmp
rcrw
or
sbb
ds
or
xchg
pushf
ja
inc
fwait
xchg
xor
test
frstor
gs
es
adc
fiadds
or
lock
sbb
adc
dec
fnstsw
out
loope
hlt
enter
push
aas
inc
ret
mov
push
cmp
clc
cmp
pop
inc
data16
test
mov
adc
mov
sub
dec
lcall
in
xchg
jo
mov
mov
mov
fucomp
imul
cmp
loope
test
xchg
inc
lea
add
mov
xor
or
fsubl
pop
lods
ljmp
addr16
into
lahf
adc
shll
cmp
mov
out
test
scas
xchg
add
repnz
mov
or
fs
jmp
push
sbb
pop
rcrl
incl
into
and
mov
rorl
es
add
xor
ss
test
inc
std
push
ja
mov
dec
les
mov
or
daa
mov
sbbb
ret
out
xor
mov
loopne
xlat
lcall
xor
outsb
fmul
std
adc
int3
inc
pop
xchg
loopne
or
xor
jmp
xor
sahf
mov
mov
int3
mov
jg
cmpsb
scas
ds
test
aad
push
fadd
adc
imul
mov
mov
iret
in
fcoms
lock
mov
adc
jp
loop
fnsave
cmp
ljmp
or
jmp
cmp
pop
adc
mov
cmc
subl
and
jle
mov
das
add
cmpsb
mov
inc
pushf
xor
add
cmp
ret
dec
push
out
mov
adc
sbb
push
les
dec
ret
orl
lcall
popf
movsl
adc
push
out
and
out
push
sbb
or
arpl
jmp
pop
cmp
pop
mov
mov
dec
inc
jge
push
in
or
out
jb
cmp
mov
lods
mov
ja
scas
daa
fcom
daa
or
and
push
jb,pn
cmc
scas
xor
test
pop
mov
jae
dec
enter
mov
push
aam
cmpsb
ljmp
pop
sub
daa
pop
cmp
insl
cmpsl
cmp
repnz
cltd
add
xor
aam
xchg
inc
roll
aaa
and
or
js
hlt
mov
inc
subb
sbb
xchg
sbb
lcall
mov
mov
rorl
or
call
rcrb
repz
xor
fisttpl
mov
mov
imul
pop
sti
pusha
mov
into
enter
xchg
mov
mov
nop
enter
dec
sbb
out
insb
clc
adc
stos
push
and
cwtl
pop
movsl
cmp
repnz
mov
fnstenv
ljmp
shld
inc
stos
mov
repnz
mov
fcoml
fbld
cwtl
cld
dec
dec
repz
sbb
push
mov
aaa
adc
inc
sbb
adc
icebp
dec
test
pusha
mov
imul
das
pop
cmp
fs
scas
add
jns
lods
aad
out
sbb
xchg
lods
cmpl
repnz
cmp
or
mov
inc
mov
sbb
mov
addr16
fnstenv
stc
sub
loope
int
sbb
mov
call
dec
imulb
add
test
sub
imul
or
pop
imul
jae
sub
rcr
mov
pop
stc
rcrb
pop
mov
insl
pop
addb
cs
push
leave
lea
enter
jmp
scas
push
mov
mov
xlat
js
or
adc
rcrl
sub
pop
add
dec
push
sbb
ljmp
aaa
test
mov
pop
dec
push
insl
jge
rep
mov
sub
rolb
arpl
cli
pop
ficoms
sub
test
int3
std
jg
xlat
aaa
jle
movsb
sbb
push
aaa
pop
or
aad
or
jl
jmp
jb
add
sub
out
dec
stos
imul
cmp
lds
jbe
mov
jne
mov
pop
lahf
sbb
xchg
iret
mov
xchg
push
xchg
inc
sti
push
sub
mov
add
cltd
gs
int
daa
sbb
ret
jb
repz
mulb
icebp
stos
les
stos
testl
cmp
data16
in
aad
and
dec
or
add
shlb
hlt
and
mov
test
jae
pop
jb
fisttpll
cmp
push
aam
inc
into
sti
or
pushf
mov
std
orl
outsb
lds
lahf
sbb
cli
ret
xor
jecxz
movsl
lods
cmc
sahf
xor
stc
andl
icebp
stc
sti
mov
sti
push
outsb
jne
adc
cld
sub
push
jmp
jns
out
mov
pop
stos
cwtl
subb
push
sbb
je
mov
data16
das
test
dec
sub
cmp
lret
out
dec
adc
xchg
ret
into
sbb
in
scas
repz
pusha
cmp
mov
js
sub
into
sub
push
pop
addl
jnp
mov
sbb
cmp
mov
in
cmpsl
mov
pushf
pushf
jns
or
nop
lcall
cmp
arpl
dec
pop
cld
repnz
push
out
rorb
xor
push
sbb
or
jge
sbb
sbb
insl
call
sbb
shlb
xor
fsubs
jnp
mov
push
and
repnz
flds
pushf
inc
rcll
xchg
xchg
inc
mov
or
clc
fwait
or
xor
mov
and
add
loop
adc
xchg
lds
aaa
lcall
int3
out
cmp
push
and
sbb
mov
lcall
popa
cmp
jns
xchg
xchg
jne
pushf
lods
stc
fmuls
in
shlb
xor
pop
inc
jo
lods
test
cld
mov
les
cmp
jbe
add
inc
popa
or
add
pop
push
add
in
dec
inc
pop
mov
inc
jnp
aaa
pop
aas
imul
adc
push
xor
int
or
xchg
pop
mul
rclb
imul
adc
mov
inc
nop
and
scas
divl
adc
sahf
aad
movsb
cmc
lock
fsubrl
dec
dec
pop
cmp
mov
or
cmpl
pop
jmp
repnz
add
cs
push
rorl
mul
sub
fdivrs
cmpsb
fwait
cmc
pushf
dec
negb
fcmovb
add
sub
out
mov
cmp
loop
jae
cmc
insb
cmp
stos
push
repz
mov
das
inc
ljmp
pusha
inc
xchg
pusha
mov
mov
fcomps
imul
call
pop
inc
imul
adc
ficoms
outsb
jl
mov
xchg
lret
jbe
cmp
fisubl
ss
pop
pop
pop
adc
pop
mull
sbb
cli
fs
faddp
scas
stos
outsl
lds
and
and
out
clc
out
lret
xor
pusha
clc
mov
sub
or
ss
in
adc
aam
push
dec
xchg
mov
imul
xor
pop
inc
daa
inc
jno
aas
jns
xor
push
cs
cltd
outsb
sub
cmp
test
or
push
mov
inc
leave
shrb
fldcw
ljmp
sub
sbb
push
push
jmp
jns
mov
insl
sub
adc
lds
sub
xchg
sbb
sub
push
imul
int3
and
xchg
pop
jnp
mov
out
add
xor
testl
pop
popa
ret
pusha
adc
scas
shrl
fstpt
jmp
rcrl
fs
sahf
xorl
dec
add
adc
loope
loope
pop
cmp
bound
xor
xchg
outsl
mov
xchg
xor
test
pop
test
or
xor
push
fdivrs
cwtl
jmp
and
mov
mov
xor
cmp
imull
cmp
sahf
mov
clc
lods
outsl
pop
scas
ds
xchg
clc
push
popf
mov
fcoml
push
cmp
adc
movsb
mov
xchg
lods
shll
mov
imul
adc
jbe
ret
and
call
push
mov
dec
pop
decl
jbe
and
push
xor
ss
cmp
push
pop
inc
imul
movsb
or
push
xor
adc
pop
push
mov
mov
cmp
daa
dec
mov
jle
xchg
jnp
sbb
inc
gs
xlat
sbb
pop
pop
jge
cltd
arpl
fcoml
pop
xorl
push
ds
adc
jnp
out
nop
dec
mulb
aaa
pop
js
ret
sbb
pop
xorb
adc
xchg
in
mov
aad
add
sub
add
and
dec
in
adc
fbstp
cs
js
aad
mov
sti
xlat
pop
mov
jnp
insl
aas
mov
cli
mov
xchg
imul
inc
rol
push
xlat
repz
pop
xchg
mov
nop
sub
mov
scas
jb
shrl
jg
repz
and
hlt
ret
push
jle
cmp
sahf
push
mov
dec
addr16
rcr
dec
mov
std
out
fimuls
lds
mov
and
notl
mov
adc
out
mov
sti
push
lcall
jae
mov
and
out
jbe
push
mov
sbb
lahf
push
dec
loopne
jo
sub
repnz
push
cltd
clc
mov
mov
ljmp
mov
push
adc
mov
test
ja
jge
cmc
mov
leave
add
in
push
mov
mov
push
dec
mov
test
mov
xchg
and
jle
and
add
add
fiaddl
outsl
enter
sbb
jbe
xchg
ret
adc
shlb
das
cltd
mov
movsl
push
jb
gs
add
lds
nop
pop
inc
mov
and
adc
adc
icebp
sbb
jge
xchg
xor
jno
push
cmp
stos
fadd
mov
sarl
dec
ss
leave
jl
and
cmc
pop
in
adc
outsl
inc
movsl
mov
and
lret
cwtl
daa
ds
pop
add
test
xchg
sbb
leave
adc
es
loopne
in
outsb
xchg
fstpt
js
inc
cli
fs
pop
xchg
int
cs
int
xor
dec
xchg
or
pop
lods
jle
je
adc
mov
nop
je
xor
jns
and
in
mov
idivl
gs
inc
jle
cmp
cmp
jmp
sahf
enter
cs
push
shrb
pop
stos
lcall
iret
jp
sub
jg
cmp
into
mov
dec
mull
xchg
sbb
mov
ret
in
ljmp
in
insb
push
stos
rcrb
and
in
push
mov
cmp
xlat
adc
int
jbe
xchg
fs
outsb
loop
mov
lock
fldl
mov
xchg
ret
dec
cmp
mov
pop
cmpsl
add
xchg
pop
push
push
jae
cs
or
dec
and
lock
jne
aaa
inc
pop
mov
mov
int3
fadds
add
sbb
jae
sbb
fidivrs
jo
ficoml
fs
cmpsl
scas
push
pusha
iret
cltd
pop
pop
jmp
or
push
pop
cmpsl
insb
push
movsl
or
loop
scas
dec
fnstcw
or
inc
jg
fnstenv
int3
nop
push
pop
cmp
test
pop
scas
push
add
and
faddl
jp
in
cmp
or
arpl
arpl
sub
aaa
in
out
push
mov
out
rclb
xchg
movmskps
mov
lods
imul
repnz
xor
xchg
or
hlt
inc
enter
sbb
cmp
and
data16
sbb
mov
and
pop
ja
popf
lret
out
invd
std
jg
popf
imul
ljmp
jns
mov
scas
jb
inc
pusha
loop
cwtl
data16
pop
inc
or
lcall
loop
roll
aad
stos
jge
push
mov
or
add
lcall
das
cli
xchg
fldl
jbe
arpl
inc
inc
push
fndisi(8087
mov
popa
in
popf
loopne
das
push
hlt
sahf
add
data16
pop
cmp
add
enter
fbld
test
dec
sbb
popa
in
mov
ljmp
ljmp
xchg
out
mov
sub
stos
pop
fldl
out
and
loope
xor
sub
aaa
push
popa
mov
add
loope
and
loop
dec
push
and
push
xor
jmp
jl
pop
xor
out
pop
and
sbb
push
cmpsl
sub
test
xchg
push
push
stos
pop
into
adc
push
push
jae
mov
adc
gs
fwait
stos
sbb
dec
test
icebp
testb
jge
loope
xor
xor
adc
aaa
jne
push
fsubl
cwtl
test
incl
out
repnz
es
mov
andb
div
sub
mov
push
movsl
adc
mov
lea
in
dec
xchg
or
push
sti
sbb
lret
and
ja
sarb
movsl
and
or
rcrl
imul
or
pop
xchg
dec
lds
ffree
std
xor
pusha
push
icebp
jle
fists
sub
jecxz
ljmp
repnz
push
or
in
ss
xchg
cs
jle
mov
jecxz
mov
jle
push
std
repnz
imul
add
sbb
sbb
sbb
and
lods
inc
jnp
shrl
xlat
sub
nop
inc
jg
mov
inc
shrl
in
xor
shll
cmp
and
repnz
cmp
xor
popf
int3
push
popa
jnp
loopne
sub
push
push
std
out
sbb
dec
hlt
stos
jecxz
outsb
fidivl
sbb
das
out
mov
push
xor
test
cld
movsb
js
pop
mov
push
ret
jnp
mov
push
rcrb
mov
jb
cmp
leave
ret
aad
mov
jl
dec
sbb
shr
lahf
imul
shrb
movsb
mov
jnp
outsl
pop
sbb
aad
mov
jp
mov
int
adc
lea
jle
scas
addr16
mov
movsl
shr
cmp
dec
fldenv
push
lret
shll
or
mov
call
mov
mov
repnz
cmc
shlb
mov
cld
inc
jb
inc
lock
mov
fidivl
xor
mov
inc
scas
add
cmpsb
xor
imul
fisttpl
ret
push
cmpsl
negb
arpl
pop
add
testb
ja
xor
mov
idivl
out
rolb
lds
push
mov
cmpsb
outsb
mov
cmc
mov
outsl
mov
sub
mov
cmp
mov
mov
mov
mov
or
fidivrl
je
xchg
loope
jp
jb
and
or
jne
pop
or
arpl
sbb
bound
test
fisubrs
lahf
cwtl
cmp
push
sub
loope
adc
mov
and
mov
jnp
mov
mov
cmc
insl
sub
leave
xchg
inc
movsl
adcb
cmp
lret
js
rcll
cmp
push
inc
push
adc
mov
repnz
pop
loopne
and
adc
gs
fbld
add
xor
mov
leavew
imul
push
dec
sub
push
jmp
mov
int3
add
mov
sub
mov
mov
dec
popf
das
pop
cmpsb
jmp
xlat
xor
xchg
test
scas
mov
sbb
pop
rcrb
je
movsb
cmpsl
stos
sbb
subb
movsl
sub
jecxz
jle
adc
mov
es
xchg
xchg
lods
xor
lea
pop
xor
xchg
mull
or
cli
test
xor
cmp
mov
out
and
jle
loop
or
pop
ss
cmp
sub
inc
ja
cli
inc
dec
mov
mov
bound
jmp
xor
fstpt
outsb
adc
movsb
imul
inc
jle
sub
or
bound
rorl
into
sub
inc
jae
and
dec
jns
das
and
jae
mov
mov
cli
mov
mov
das
repz
fwait
lods
jle
aas
stos
and
add
jns
sar
nop
push
out
rolb
lods
ds
add
mov
pushf
lret
test
in
xor
int3
lds
cmc
dec
jnp
test
and
sub
and
inc
aam
fs
cld
push
jne
jns
mov
sbb
mov
mov
or
cmc
popa
jno
sarl
int
rorb
mov
daa
popf
mov
stc
sbb
data16
out
scas
les
sbb
testb
sub
mov
lds
mov
sub
pop
jl
aaa
test
mov
cltd
enter
xlat
mov
xor
lea
push
and
clc
dec
jmp
add
xchg
lods
sti
inc
pop
adcl
jle
test
nop
xchg
jo
loop
roll
sub
rorb
sbb
sub
in
js
jl
popa
xor
cmp
into
popa
dec
inc
lret
or
movsb
scas
scas
pushl
aaa
push
dec
pop
out
int3
ss
jp
and
inc
add
and
cmp
dec
adc
ficoml
iret
sbb
leave
jge
sarl
shl
and
lahf
mov
shrl
push
mov
int3
add
jbe
cli
dec
hlt
jge
or
lds
jle
nopl
dec
sar
roll
adc
dec
cli
inc
add
jnp
mov
mov
xchg
pop
test
insb
inc
xor
push
mov
das
sub
adc
xor
xchg
pop
xchg
sub
fisubrl
xchg
sbb
js
xor
pop
lret
aam
xor
xor
and
js
add
pop
and
mov
push
movsl
pop
call
lods
jae
cltd
sbb
mov
andb
hlt
xor
in
sar
popf
or
stos
jnp
sbb
lret
lods
hlt
mov
sub
jb
lock
or
addr16
loop
cmp
clc
xchg
pop
in
push
mov
movsl
outsl
jp
pop
sbb
daa
mov
add
jno
cmpsl
jmp
fcmovne
jbe
imul
into
daa
mov
gs
shll
testl
add
mov
in
adcl
xor
jp
out
pop
push
pop
test
and
insl
dec
cld
mov
nop
stc
pop
sbb
jbe
mov
pop
aad
aam
aam
xchg
mov
mov
fdivs
and
mov
ja
movsb
leave
add
adc
ficomps
mulb
xchg
hlt
rcrb
bound
clc
sbbb
push
xlat
and
add
jne
fmuls
inc
and
adcl
jmp
dec
cmpsl
push
cmp
cli
movsb
sarl
jmp
cs
xor
mov
cltd
xchg
push
jb
jbe
jle
imul
pop
aas
imul
stos
and
jo
cmp
pop
cltd
loope
push
add
pushf
pop
stos
inc
loope
mov
dec
test
cmp
xchg
jae
in
inc
cwtl
xor
ljmp
xchg
inc
addr16
insb
ss
lcall
or
push
and
inc
fcmovu
aaa
xchg
or
icebp
adc
loop
lods
or
add
fdivs
jo
shlb
pop
fwait
jne
mov
test
fildl
in
and
lcall
jmp
cli
cmp
mov
decb
repnz
shlb
cltd
pushf
shl
mov
or
stos
mov
xor
xor
outsl
xchg
xor
adc
adcl
sub
pop
adc
clc
and
jo
ljmp
and
add
cmp
frstor
mov
ret
stos
or
gs
dec
jl
repz
int3
outsb
imul
lods
popf
out
stos
mov
and
or
adc
cmp
mov
cs
rcr
loop
xchg
adc
add
xor
xchg
xchg
imul
sub
adc
ret
or
lcall
fcom
dec
push
add
jmp
icebp
bound
pop
repnz
psubq
push
enter
in
dec
xchg
outsb
dec
inc
shrb
mov
cmp
frstor
sbb
mov
loope
lock
stc
js
pop
popf
xchg
and
fildll
xchg
sub
cmpsb
fisttps
dec
ret
ja
pusha
dec
adc
xlat
add
call
lret
fadds
sarb
add
inc
jns
xchg
outsb
ss
repnz
bound
mov
popf
sbb
dec
and
jnp
mov
mov
sbbl
dec
out
es
loope
mov
cmp
and
xchg
cwtl
test
mov
aaa
fdivl
ret
fdiv
dec
jb
fimull
stc
les
ret
push
xchg
mov
xor
in
fwait
sbb
mov
mov
cmp
movsl
mov
lock
and
sti
cmp
orb
jle
dec
mov
xchg
stos
mov
mov
xchg
ds
sub
in
int3
xchg
pusha
mov
fs
mov
jle
or
rsqrtps
push
ficompl
ss
je
jg
jecxz
outsb
pop
pop
imul
mov
sbb
sub
movsb
xchg
mov
out
aaa
and
nop
arpl
mov
or
shl
jge,pt
ss
dec
xchg
add
repnz
and
mov
lods
sbb
pop
xchg
fs
xchg
jmp
jp
rorl
and
or
xchg
enter
sahf
loop
mov
pop
out
call
fimuls
push
xchg
cmp
je
xchg
jp
popa
cmpsb
cs
lods
dec
and
daa
cmp
adc
inc
lods
or
dec
adc
gs
lcall
mov
sub
mov
divl
rorl
addr16
add
sti
and
loope
movsb
mov
dec
filds
loopne
setl
fs
sbb
sbbb
inc
lret
push
pop
out
inc
mov
push
pop
test
mov
or
insl
popf
cld
sub
fmulp
imul
insl
pusha
sub
stos
fs
or
ds
xchg
push
push
xchg
jle
pop
std
pop
jae
cmp
movsb
imul
imul
stc
jl
add
mov
inc
testl
push
adc
into
push
dec
mov
mov
sbb
faddl
sub
fpatan
ficompl
cs
mov
sbbb
cmp
aad
bound
das
stos
rcrl
std
rcrb
gs
jmp
xchg
push
insb
inc
insl
xor
icebp
and
arpl
push
sub
hlt
js
jmp
je
jb
popa
mov
scas
js
pop
xor
pop
in
sbbb
test
xchg
cmp
mov
pop
out
or
int
mov
fwait
pop
fwait
cmp
sub
add
adc
dec
fists
stos
mov
inc
dec
cmp
scas
ffreep
mov
and
call
addr16
push
inc
sub
sahf
mov
sbb
jp
imull
xor
or
mov
movsb
iret
popa
js
lods
jmp
dec
sub
mov
in
in
test
dec
outsl
outsb
lea
mov
inc
mov
and
jno
adc
pop
push
xchg
push
push
call
sub
dec
scas
xchg
xor
inc
and
mov
push
scas
sbb
loop
lock
aam
pop
add
push
ja
dec
test
or
mov
or
dec
mov
insl
sahf
add
sbb
pop
and
daa
iret
cwtl
insb
jge
cs
outsl
or
jae
shrl
imul
je
mov
inc
sbb
inc
xchg
outsl
test
cmc
push
mov
insl
out
xchg
mov
cwtl
and
sti
movsb
data16
insb
mov
clc
pop
push
dec
xchg
faddl
addl
adc
rolb
mov
xchg
adc
iret
xlat
test
popa
call
ja
pop
ficomps
xor
ja
aas
mov
xchg
xchg
fidivs
je
pop
aad
and
fbstp
fistpl
jmp
adc
jmp
mov
lods
faddl
inc
mov
jmp
pushf
rolb
mov
repz
daa
int3
lock
sbb
adc
jp
cltd
call
loopne
shrd
mov
xor
or
adc
jl
loope
or
fcoms
stos
pop
gs
lods
sbbb
mov
mov
lods
andl
push
and
mov
int3
push
sarb
shlb
mov
daa
ret
xor
pushf
insb
or
stc
inc
lcall
or
icebp
lret
xchg
jp
xchg
mov
leave
cmpxchg
mov
cltd
ljmp
pop
lock
jne
repnz
dec
mov
pop
jmp
in
xchg
fbld
and
out
inc
imul
jbe
xchg
and
cmp
mov
jne
sub
mov
pushf
stos
xchg
imul
jmp
jle
adc
cmp
cmp
test
dec
or
sub
add
das
adc
ror
call
mov
repnz
xor
push
mov
dec
cltd
push
mov
movsl
aam
cmp
lds
popf
data16
stc
das
cmpsb
pop
pop
insl
adc
mov
xchg
dec
leave
cld
xor
pushaw
cmp
inc
popf
lcall
push
cs
pusha
mov
or
fs
cmpsb
es
mov
jo
imul
jne
pop
out
sub
xor
sub
xor
add
sbb
mov
sub
jo
xlat
or
sti
pushf
or
loopne
pop
sub
inc
fstpt
or
cltd
das
push
sub
out
xor
dec
outsl
out
inc
rolb
push
push
pusha
pop
or
dec
ficompl
pop
mov
sub
je
test
lret
dec
mov
aam
push
pop
inc
stos
call
mov
aad
fbstp
cwtl
insb
mov
pop
sub
arpl
jno
add
xlat
mov
js
aas
adc
add
stc
mov
pop
call
xchg
shll
mov
xor
pushf
stc
rol
dec
push
inc
xchg
dec
adc
mov
popa
scas
popf
add
and
sub
pusha
scas
and
out
inc
adc
inc
and
xchg
mov
mov
loop
call
sbb
and
out
sbb
xor
fsub
int3
xchg
mov
outsb
dec
test
and
cmc
mov
add
mov
xchg
inc
pop
add
dec
imul
jb
ror
movsl
inc
lea
or
jnp
cld
mov
cmp
cmp
movsl
ds
pop
lds
mov
lea
cmp
inc
test
ret
push
push
pop
out
inc
add
test
fcomp
xor
cmp
xchg
ds
in
inc
dec
add
cmpsb
push
frstor
or
jo
lock
cmp
lock
flds
jo
inc
js
adc
jle
aad
cmp
out
outsb
dec
or
jb
repz
add
sbb
fldenv
add
into
and
sbb
mov
and
iret
cwtl
fwait
pushw
mov
lods
jle
mov
dec
into
inc
imul
jmp
cmp
mov
outsb
sbb
sbb
jne
out
dec
std
mov
mov
cmp
repnz
rol
test
jae
lds
cmpsl
adc
shll
daa
outsb
and
int3
gs
xor
lock
xchg
xor
fs
lcall
les
or
jmp
in
xor
shlb
mov
inc
add
mov
int
add
cmp
pop
js
or
push
and
mov
jns
daa
sub
xor
icebp
repz
cmp
and
xchg
ret
add
sahf
jmp
popa
sub
loope
push
lret
adc
sub
shlb
out
pop
mull
pushf
pushf
or
loope
mov
inc
les
ret
mov
push
adc
loope
dec
mov
add
inc
sbb
mov
lock
cmp
mov
dec
sub
cmpsl
xchg
pop
dec
mull
sbb
stos
cmpsb
int3
pop
fwait
adc
dec
das
jp
mov
dec
add
inc
inc
sbb
pushf
push
xor
sbb
mov
xor
addr16
call
stos
call
add
inc
jae
jb
add
sbb
cmpsb
call
mov
add
jno
and
push
mov
paddsb
rorl
insb
jle
or
pusha
rclb
nop
sub
insb
add
mov
stc
ja
les
xor
xchg
ret
lcall
push
popa
push
fldt
dec
popf
in
mov
add
imul
push
or
cmpsl
cmpsl
pushf
xchg
xchg
fildll
and
mov
gs
pop
clc
popa
mov
cwtl
xchg
mov
jb
and
je
sub
add
xlat
mov
jl
cmpsl
sbb
sub
jno
test
fndisi(8087
mov
mov
mov
jne
outsb
repnz
and
xchg
push
bound
icebp
insl
jno
inc
subl
imul
leave
in
in
cmp
mov
pop
or
sar
xcrypt-ofb
cmpsl
sub
add
and
or
sbb
inc
je
and
sub
lret
dec
sbbb
mov
in
inc
popa
adc
mov
rorl
mov
mov
push
lret
mov
dec
cwtl
mov
leave
jae
fsubrs
movsl
gs
lods
out
sub
flds
dec
addl
imul
xchg
pop
and
mov
cmp
popl
call
ja
mov
and
or
mull
popa
jmp
in
jb
arpl
cld
mov
push
loope
and
movsl
xchg
in
sub
out
arpl
jle
and
push
mov
lds
xchg
cmp
inc
dec
pop
mov
lds
inc
enter
or
or
cmp
popf
add
fstpl
data16
rcrb
pusha
or
xchg
testl
jle
shlb
dec
mov
sbb
adc
mov
sub
xlat
mov
mov
mov
mov
xchg
mov
call
jmp
fcoms
popa
shlb
js
jnp
outsb
fcoms
add
enter
arpl
ret
js
fucomp
int
add
fisubl
ret
int
dec
std
in
lcallw
mov
ret
and
sahf
test
sti
fsubl
mov
es
mov
mov
mov
insl
movsl
push
inc
xchg
mov
adc
push
or
or
and
fimuls
stos
mov
push
into
rcll
dec
pop
popl
pop
or
pop
xor
stc
or
pushf
mov
repz
daa
push
xlat
cli
or
and
dec
push
inc
hlt
fsubs
pop
push
in
xchg
jg
xor
insl
arpl
out
sti
mov
in
das
popa
ja
or
repnz
ljmp
mov
popf
mov
xchg
or
jbe
into
call
pop
in
leave
mov
pusha
hlt
aas
mov
jmp
sub
aaa
pop
lret
gs
fld
inc
sbb
xchg
mov
cmp
imul
dec
test
mov
lahf
addr16
popa
cmpl
ret
inc
or
push
sahf
stos
cmp
lret
and
jmp
pop
push
bound
pop
int
iret
cmp
popf
cli
fnsetpm(287
or
vpshuflw
imulb
bound
in
sub
popl
repz
mov
fisttpl
push
mov
mov
xor
push
iret
outsl
jno
push
xor
mov
aaa
adc
out
jg
push
mov
mov
lret
pop
xor
fildll
scas
mov
and
movsb
add
add
xchg
imul
adc
jmp
pop
movsb
cltd
call
sbb
xor
js
aas
das
gs
mov
pop
push
movsb
xchg
jl
lods
fwait
out
addl
fnstsw
gs
dec
les
pop
lods
xchg
jno
push
mov
neg
and
cmp
pop
push
pop
daa
ds
dec
push
mov
adc
and
mov
xchg
push
and
sahf
cmp
cmpb
ss
mov
lret
cmp
mov
jmp
frstor
pop
pushf
cmp
sub
enter
sub
dec
into
push
leave
repnz
lea
and
pop
cmc
cmc
xlat
icebp
mov
rorl
push
fmull
jp
sbb
repnz
jmp
inc
ljmp
aam
stos
jne
mov
add
test
inc
je
ja
aas
mov
ds
jl
test
pop
xchg
xchg
push
hlt
adc
add
push
ss
insb
add
inc
call
je
in
mov
and
xchg
fwait
inc
iret
popf
addr16
rcr
subb
mov
lret
add
loop
cmc
repnz
xor
shl
les
pop
in
out
xchg
dec
out
jne
sub
popa
xchg
push
jmp
stc
xor
jo
jns
aas
push
and
jge
xchg
mov
or
lock
dec
sub
pop
out
mov
rclb
dec
cmp
clc
aaa
pop
into
popa
popf
sub
mov
lret
xchg
and
call
mov
mov
int
xchg
sar
lods
jp
mov
sub
test
jg
sub
in
roll
lret
xor
mov
mov
jne
add
adc
xchg
ficoms
cmp
mov
pop
dec
and
pop
sar
pop
push
sbb
arpl
test
stos
mov
and
push
shl
lahf
in
sbbl
lock
imul
mov
insl
mov
jg
enter
pop
into
clc
idiv
jle
xchg
lahf
js
pushf
out
push
es
test
subl
jmp
fwait
rcrl
outsb
lcall
fcoml
mov
mov
aad
inc
sub
cmp
mov
mov
lcall
scas
or
cs
sub
push
mov
pusha
out
dec
call
push
sti
cmp
je
inc
rcrl
hlt
and
cmp
stos
jo
and
push
or
rcrb
fcoml
lds
jecxz
sti
xor
xchg
out
pushf
mov
lcall
ss
dec
cld
test
iret
mov
xchg
mov
das
sbb
cmp
les
ljmp
dec
jp
and
scas
mov
pop
fcmovnb
out
fstps
inc
pop
jmp
int3
sub
push
sub
sub
les
xor
pop
mov
movsb
adc
sub
xor
clc
push
push
mov
cmpsl
or
sti
das
add
lea
push
bound
push
lods
lock
mov
fs
dec
movsb
mov
cmpsl
shrb
jns
addr16
lds
xchg
insl
sub
sub
movb
add
inc
rep
xor
push
sbb
jg
sbb
ja
xchg
jg
iret
dec
and
cmpsb
pop
sbb
in
mov
jecxz
lret
shr
arpl
xchg
fs
jnp
dec
jae
push
mov
pop
out
iret
add
fwait
cs
xchg
adc
jb
jns
jmp
inc
ret
popa
mov
mov
in
in
sbb
cmp
mov
iret
xor
dec
adc
xor
jge
stc
lret
pop
or
jge
ja
mov
daa
popa
fsub
movsl
add
push
lea
int3
daa
and
push
push
fildl
push
jo
sbb
push
ss
push
push
repz
pop
mov
lahf
xchg
push
jp
sahf
and
add
or
and
adc
ss
and
mov
xchg
jg
repnz
jecxz
pop
adc
inc
push
aaa
iret
xchg
mov
mov
cmc
mov
mov
dec
jo
mov
loop
mov
clc
fdivr
fimuls
jge
mov
pop
jl
iret
repz
into
jge
movsl
add
js
pop
xor
lahf
pop
or
sub
mov
aaa
jmp
sub
mov
andl
inc
cli
dec
stos
insl
cmp
xchg
adc
aas
adc
jmp
in
lcall
cs
adc
test
imull
enter
add
inc
hlt
insb
aad
in
clc
lds
out
loopne
mov
sbb
fs
aad
dec
std
xchg
stc
arpl
lock
imul
cltd
imul
pop
movsb
iret
jbe
scas
push
mov
fcompl
xchg
lock
rorb
scas
jg
mov
pop
adc
dec
fdivs
test
adc
out
popf
and
mov
add
hlt
push
test
jl
sahf
popf
int3
pop
hlt
fldcw
pop
fiadds
loope
or
movsb
shll
push
jmp
lret
mov
pop
dec
push
xchg
sub
or
movsb
sahf
scas
adc
sahf
jp
sbb
pop
or
movsb
sahf
jno
mov
add
mov
cmp
js
sub
out
sbb
inc
popl
sub
cmpl
xlat
cltd
lock
add
push
sbb
xor
xchg
and
inc
push
stos
mov
negl
pop
stos
fmulp
fsubrs
cwtl
icebp
dec
jmp
insb
out
aas
std
jne
push
into
test
sbb
cmp
scas
pop
ja
add
xorl
mov
or
xor
mov
movsb
in
jmp
fstps
out
jne
insb
or
adc
jbe
lahf
mov
xlat
ja
or
adc
inc
orb
cld
lods
or
repnz
inc
repz
in
aad
mov
push
dec
xor
movb
xor
push
xchg
pop
jg
mov
pop
aam
mov
iret
jp
gs
xor
scas
paddq
ja
xor
hlt
push
outsl
jno
gs
pop
in
sub
push
xor
xchg
outsb
test
xlat
push
push
lcall
fildll
and
fs
cld
test
imul
sbb
mov
les
aad
pop
mov
add
popa
cli
cmp
jmp
inc
int3
jge
jge
fwait
xlat
aas
in
dec
inc
sub
mov
movsb
adc
aaa
inc
jge
ljmp
xor
cwtl
pop
cwtl
hlt
sub
enter
jl
outsl
cmp
fs
push
fwait
inc
out
push
inc
nop
dec
je
add
paddw
xor
out
push
mov
adcb
shr
mov
mov
rorb
cwtl
mov
push
xchg
sub
lock
std
lods
out
sub
out
jecxz
xlat
aaa
jle
daa
mov
scas
test
dec
xor
ds
lahf
pop
sbb
lods
cs
jb
into
jne
cmpsl
push
enter
loop,pt
jnp
pushf
or
aam
adcb
lcall
les
jns
test
pop
popa
cmp
jne
fbstp
movsl
in
cmp
out
pusha
cmpsl
inc
xorl
push
insl
in
jnp
lret
addr16
mov
mov
cmpsl
testb
sbbb
xor
sbb
mov
pop
test
mov
sbb
ret
mov
mov
lds
aaa
inc
and
out
mov
jp
scas
ficoml
out
stos
mov
sbbl
pop
sbb
pop
aaa
icebp
loope
js
outsl
and
daa
subb
mov
pop
das
out
sub
dec
fdivp
adc
insl
cli
cmp
in
cmp
jmp
fistl
add
adc
adc
stos
stos
sarb
incl
xchg
loope
pop
xchg
xchg
mov
dec
addr16
sub
push
pop
ja
out
scas
js
mul
push
sbb
les
adc
insl
cmp
xchg
adc
push
mov
roll
imul
fsubp
sbb
jae
pop
add
ljmp
mov
xchg
ss
add
mov
add
enter
pop
push
mov
scas
push
rcrb
xchg
and
inc
andl
pop
push
imul
or
xchg
push
cltd
push
stos
jle
in
cmp
cmp
div
or
push
mov
call
sarb
jns
sbb
ds
shl
add
push
sti
jge
or
aam
jne
stc
sbb
mov
jl
push
popa
or
stc
outsl
ljmp
inc
mov
int3
pop
repnz
aas
jne
ds
mov
xor
cltd
aam
add
sbb
imul
decl
sbb
test
cwtl
mov
lods
push
push
ja
out
dec
loope
shll
pop
in
js
lds
push
mov
bnd
sub
sbb
lea
sub
flds
inc
mov
adcb
dec
stos
mov
xorb
cld
imul
lcall
or
pop
dec
inc
and
aaa
and
jae
push
nop
orl
mov
adc
or
sub
mov
cmpb
outsl
dec
lahf
outsl
mov
pusha
hlt
mov
cmpsb
and
rol
push
popf
test
daa
dec
call
or
icebp
jp
sar
mov
testb
movsl
fimuls
mov
jle
sbb
cmpb
dec
cli
dec
xor
icebp
rol
ret
cmp
lret
cmp
adc
mov
lahf
mov
ss
lea
pop
pop
cmc
mov
lods
stos
cmp
xor
rorb
dec
fdivs
lcall
mov
lret
add
repz
mov
outsb
insl
sbbl
xor
mov
ret
pop
push
pop
sbb
ds
ds
mov
mov
mov
adc
mov
addb
jno
push
ds
ds
out
xchg
lcall
sti
lahf
mov
lret
aas
int3
das
inc
cmp
adc
and
sub
jmp
mov
mov
test
gs
lahf
repnz
adc
roll
push
inc
cmp
adc
cli
jbe
sbb
stos
pop
sahf
mov
cmp
dec
jl
lods
push
negl
sub
jo
mov
mov
bound
dec
mov
loopne
xor
lret
cmc
mov
mov
dec
or
out
sub
imull
loop
jp
cmp
sbb
rorb
mov
cmp
dec
imul
dec
and
jecxz
add
in
mov
xchg
and
mov
xadd
ds
dec
negl
push
jne
test
or
xor
push
pushf
leave
lods
mov
daa
xchg
push
cs
sub
inc
das
mov
add
lea
add
adc
lds
pop
mov
jmp
add
fsub
ja
add
push
rorl
ja
push
xor
dec
adc
cmp
out
adc
mov
stos
cmp
cltd
mov
sbb
jecxz
adc
sahf
jo
lret
sbb
shll
cltd
mov
jbe
scas
push
dec
jge
stos
popa
mov
sbb
loopne
enter
inc
aam
jno
and
sub
sub
loope
push
sub
xchg
popf
out
dec
pop
sub
or
cmpsb
cmp
sbb
mov
mov
mov
or
mov
pop
xorb
hlt
sub
add
nop
xchg
jns
push
es
stc
in
sti
jb
cmpsb
xor
add
stos
push
xlat
fisubs
add
mov
es
cmp
pop
sub
std
adc
test
mov
xlat
sbb
xlat
sub
mov
sub
mov
mov
iret
dec
push
jl
lcall
in
sub
inc
in
fistpl
adc
movsb
push
xchg
icebp
xor
push
mov
push
pop
repz
das
push
cmp
xchg
cltd
jb
pop
cmpsb
sub
inc
insb
enter
or
cs
add
xchg
push
xchg
movsl
ret
xchg
cmp
adc
out
popf
pop
in
xchg
dec
mov
hlt
inc
cmp
aas
popa
test
loopne
in
dec
stos
std
push
or
pusha
ljmp
jno
pusha
sbb
in
out
insb
scas
pop
adc
sub
sahf
sbb
xor
fists
lock
jbe
mov
stos
add
loopne
lds
push
ss
lods
ret
mov
inc
mov
shrl
mov
outsl
sub
pushf
pop
mov
mov
int
and
ds
push
jbe
rcrb
cmpsl
lock
dec
or
test
into
pop
loopne
xor
dec
test
pop
adc
gs
ficoml
out
mov
mov
movsl
insl
pop
and
scas
jge
loope
or
insl
mov
mov
enter
sbb
loope
sbb
lcall
test
inc
pop
hlt
mov
fldenv
add
mov
sbb
fsubp
sbb
add
xor
and
aam
push
rolb
ror
sub
mov
lods
push
mov
jnp
or
loope
pop
xor
into
test
lahf
xchg
sbb
mov
lea
cmp
fsubrs
add
lahf
dec
sub
add
or
out
cmc
adc
lea
test
mov
loope
mov
pop
es
hlt
jl
mov
jo
dec
fcoml
nop
cmp
loopne
pop
or
or
int
mov
sahf
xor
test
jns
insl
out
notb
dec
test
dec
mov
fisubrs
mov
lret
sbb
cmpsb
sbb
fsubl
int
scas
inc
xchg
stos
cmc
and
mov
push
sub
mov
rorb
push
aam
xor
xchg
fucom
int
push
jo
sbb
and
lods
je
add
ds
cmp
cli
push
mov
sbbb
test
adc
bound
xchg
mov
fistpl
inc
test
scas
jecxz
sti
dec
pop
stos
sbb
aaa
jbe
andb
jbe
jno
mov
mov
sar
fildll
call
sbb
xchg
icebp
sahf
jge
je
mov
or
sub
xchg
mov
dec
push
jae
pop
daa
insb
les
sbb
in
or
push
repnz
loop
jmp
add
imull
mov
cwtl
stc
pop
cmpb
pop
jle
sbb
loope
imul
cmp
xlat
cs
cs
jecxz
das
daa
out
movsl
pop
das
mov
or
jo
or
or
orb
repz
fs
mov
jmp
int
and
xchg
cltd
cld
adc
cwtl
cmp
push
call
adc
add
loope
xchg
sbb
test
mov
inc
out
paddsw
push
jg
mov
or
xchg
pop
mov
fwait
inc
popa
push
test
or
loop
mov
push
loopne
or
mov
in
sbb
mov
test
mov
inc
popl
xor
data16
in
jp
jecxz
test
out
into
cs
lea
sahf
nop
out
xchg
sub
popa
cli
sbb
add
stos
cs
ljmp
dec
imul
mov
dec
sti
sbb
test
push
add
sarl
gs
int3
add
xor
push
xchg
icebp
push
or
sub
fimuls
scas
xor
add
mov
push
mov
hlt
or
fisttpll
iret
fists
inc
jae
ss
xchg
popa
sbb
xchg
push
pop
mov
fiaddl
adc
outsl
pushf
sub
add
or
aam
lods
test
int
sub
sbb
out
pop
xchg
mov
test
mov
adc
jne
in
pop
jo
xor
jl
jle
sub
stos
arpl
jbe
mov
lahf
cmp
mov
mov
mov
and
cmp
std
xor
pushf
gs
testb
cmp
icebp
inc
inc
imull
int3
lahf
leave
outsl
call
cmp
leave
xor
repz
or
lods
push
adc
add
ja
pop
push
xchg
arpl
and
inc
adc
mov
hlt
test
xchg
mov
sbb
fnsetpm(287
popa
enter
mov
push
and
xor
js
xchg
add
sub
mov
je
pop
jp
sbb
and
outsl
repz
addb
fisubl
pop
jbe
repnz
dec
mov
imul
cltd
pop
pop
adc
into
popf
ja
or
clc
clc
sbb
xlat
std
or
movsb
rep
jle
or
loopne
mov
leave
xchg
xchg
cmp
bound
adcb
sub
scas
ret
insb
popf
pop
xchg
out
inc
out
mov
cli
push
inc
dec
cmc
mov
pop
xor
xor
sub
decl
fs
addr16
mov
int
push
bound
adc
mov
jg
clc
ljmp
push
mov
mov
movsb
mov
scas
loope
dec
scas
mov
mov
repnz
lock
push
negb
lods
xchg
out
push
push
xor
in
dec
jecxz
lahf
std
es
mov
mov
test
cwtl
fcomi
xor
aas
add
xchg
jnp
adcb
sub
shrb
gs
lret
notl
mov
push
push
out
and
push
mov
fldenv
lock
insl
push
call
push
mov
cltd
das
mov
push
leave
adc
cmp
jae
pop
or
pop
daa
insl
shl
stos
push
outsb
or
cltd
ss
insl
insl
xor
lock
jp
lea
jno
ja
jo
adc
ret
in
das
add
mov
adc
pop
mov
mov
push
mov
shlb
adc
sahf
mov
add
ss
and
push
sub
das
xchg
sarb
stos
pop
cmp
gs
mov
lods
je
test
insb
popf
jae
pop
inc
push
xor
daa
lods
sbb
mov
and
mov
cmp
sar
xchg
fidivs
jecxz
lret
mov
mov
inc
mov
mov
incb
clc
insb
jge
sbb
scas
push
adc
and
pop
aam
jg
lods
adc
pop
fmul
ret
je
in
cmp
pop
imul
js
jns
or
adc
in
mov
clc
pop
mov
loop
cmp
mov
jno
sbb
inc
arpl
dec
les
jmp
add
jg
bnd
mov
inc
icebp
scas
dec
imul
das
inc
add
in
xor
movsl
adc
xchg
dec
popa
push
ret
or
pop
cmpsb
gs
or
sbb
cmp
jno
add
scas
or
mov
sub
inc
das
dec
divb
push
mov
repnz
push
add
gs
sub
fiadds
cmp
lods
push
popa
stos
stc
test
pop
pop
ja
lahf
mov
ljmp
sbb
out
outsl
cld
adc
pop
mov
es
add
lds
and
decl
out
ja
cmp
mov
jo
mov
mov
out
icebp
daa
shlb
sbb
fninit
nop
ja
rorl
out
sbb
jbe
sub
adc
add
jl
adc
neg
addr16
pop
into
imull
in
fsubl
test
xchg
cmpsl
aad
loop
subb
mov
and
pop
das
mov
inc
pop
std
sahf
pop
fnstenv
out
jle
sbb
mov
jnp
mov
mov
pop
into
icebp
repz
js
scas
sub
and
mov
mov
leave
shrb
dec
sub
pop
inc
sbb
mov
xorl
mov
imul
test
or
sub
fnstsw
into
clc
call
mov
adc
and
clc
adc
xor
nop
adc
jge
int
adc
mov
jecxz
push
jge
dec
out
add
cmp
loopne
andl
mov
out
inc
sbb
and
cbtw
inc
notl
or
aad
callw
and
pop
mov
cld
sarl
and
xor
mov
pushf
out
int
push
jae
into
mov
shll
shrl
jg
je
and
xlat
add
add
mov
jnp
jl
sub
ja
mov
sti
int
sbb
orl
xchg
mov
imulb
daa
leave
jo
dec
hlt
loop
jbe
inc
iret
addr16
flds
loopne
fildl
fcmovnb
mov
test
clc
das
lahf
inc
ds
ja
fisttpll
inc
nop
mov
push
push
jo
into
sub
jecxz
cmp
sbb
scas
xchg
xchg
outsl
outsl
les
dec
add
popa
and
dec
jb
xor
dec
icebp
outsl
xchg
sbb
mov
addb
popa
adcb
push
add
sbb
sub
pop
fidivrs
iret
inc
rcl
jge
js
mov
loop
in
mov
rorb
mov
fsubrl
xorl
push
lahf
ret
push
ljmp
cmp
sahf
sub
out
push
push
dec
cmp
repnz
testb
fldl
mov
fsubrl
sub
or
rcrl
ljmp
push
pop
jp
xor
into
arpl
mov
arpl
add
and
jp
mov
add
scas
xchg
jmp
pop
stos
mov
dec
arpl
cmc
insl
push
lods
mov
jae
fcom
loopne
cltd
xor
and
pop
sub
cwtl
sub
and
xchg
mov
aas
inc
scas
jge
xchg
xor
test
ret
sub
ret
xchg
mov
test
jle
into
nop
bound
pushf
enter
xchg
loope
jmp
cld
inc
out
shll
shrl
push
es
cmc
fadd
mov
and
imul
dec
jbe
test
adc
xchg
mov
dec
insl
dec
popa
rcl
inc
pop
inc
adc
push
sub
pop
xchg
or
push
addr16
cmp
or
sub
cmp
push
jae
jmp
insl
xor
pop
cmp
imul
ret
xor
test
push
adc
dec
test
imul
push
dec
aad
pop
imul
pop
cmpsb
mov
xorl
inc
push
rcll
sarb
insb
adc
jecxz
sub
loopw
jnp
lods
popf
hlt
dec
fwait
jo
xchg
and
daa
jl
mov
popf
add
sub
inc
adc
inc
mov
and
shl
sub
fcomps
pop
add
fwait
stc
mov
shlb
rcr
mov
mov
cmp
in
push
adc
enter
mov
fs
and
mov
out
imul
push
out
jo
dec
movsb
push
add
mov
push
lcall
pop
loope
bound
push
push
dec
into
std
int3
dec
je
setns
dec
inc
stc
sarb
leave
push
push
icebp
sbb
jbe
testl
test
sbb
repnz
lahf
loopne
mov
cmc
bnd
leave
pslld
lahf
subl
add
cmp
fildl
jne
test
dec
xchg
cmpsb
push
scas
sbb
ficompl
mov
add
mov
imul
mov
cld
sbb
stos
cld
push
mov
xor
and
jbe
xorl
stos
mov
shr
aad
xchg
xchg
pop
xor
filds
in
mov
push
ret
or
and
sub
mov
fnsave
xchg
dec
push
dec
pop
mov
adc
pop
daa
orb
push
lret
shr
fmull
lea
cmp
ds
sbb
testb
inc
cmc
push
pop
sub
fstpt
sbb
and
jne
leave
insb
add
out
or
sbb
xchg
pop
movsb
pusha
mov
inc
scas
data16
insl
test
adc
popf
lcall
cli
jb
jl
and
sub
mov
repz
cli
lods
shrl
js
xlat
gs
push
test
js
mov
mov
pop
fcmovnu
and
push
aaa
jge
in
inc
xchg
fsub
out
cmp
jo
mov
mov
insb
loop
enter
adc
sub
and
dec
jnp
mov
fadds
push
push
in
sbb
in
cmp
and
out
dec
inc
pop
push
dec
out
not
mov
inc
dec
lea
cld
repz
push
test
cli
aad
pop
outsb
addr16
shr
in
mov
icebp
mov
fdivrp
mov
sbb
ds
xchg
test
and
mov
hlt
leave
mov
mov
sbb
gs
ljmp
stos
mov
sbb
sbb
mov
cmp
dec
mov
jmp
dec
pop
jae
les
movsl
and
loop
mov
sbb
test
xchg
sub
ds
insb
push
lods
jle
mov
adc
jg
aad
addps
push
out
pushf
pop
inc
in
mov
add
inc
aam
mov
push
aam
das
mov
add
in
mov
adc
push
sahf
stc
and
decb
jg
icebp
inc
pop
mov
mov
and
lds
sub
mov
jne
lret
out
add
push
das
daa
arpl
and
ror
adc
mov
stc
pop
inc
xchg
fidivrs
rcrl
testl
or
jle
mov
call
cmp
push
adc
dec
adc
or
mov
inc
xor
outsb
popl
mov
cmpsl
popf
ret
xor
jp
test
xor
cwtl
aas
mov
pusha
sbb
test
xor
add
out
add
in
sbb
push
jnp
aam
jns
ja
ja
into
sub
out
loop
hlt
jle
dec
cs
mov
xchg
and
jecxz
aad
into
icebp
addb
notl
xorb
shl
mov
dec
hlt
insb
sbb
bound
lcall
les
cmc
cmp
dec
pop
jecxz
adc
sbb
push
mov
test
lods
icebp
fsubrp
sub
cmpsl
fs
insl
popf
and
cmp
add
frstor
sbb
popa
lock
push
push
sub
dec
jl
std
aas
ds
jmp
dec
or
lea
cmp
lret
pop
jp
push
bound
push
mov
add
enter
out
cmpsb
stos
add
mov
mov
loop
negl
or
adc
outsb
in
or
loop
insl
outsb
push
test
dec
push
cmp
push
sub
dec
add
xor
or
push
cmp
mov
xlat
pop
in
inc
dec
pop
sbb
add
leave
jge
push
push
out
sub
and
sbb
xor
jno
pop
shr
mov
pop
dec
lds
jo
and
in
or
fiadds
adc
inc
ret
dec
dec
add
arpl
sub
xor
and
lret
test
inc
jae
rcl
mov
inc
dec
and
mov
xchg
addb
lret
popa
fists
imul
mov
dec
adcb
lahf
add
mov
pop
push
jns
xor
insl
mov
dec
jnp
jne
xor
sbbb
out
in
ljmp
sub
je
pusha
sbb
loopne
sti
cwtl
hlt
push
cmp
es
cmp
jecxz
push
nop
out
jge
pop
inc
xor
mov
mov
rol
sahf
cld
outsb
add
fcoms
inc
in
xchg
popf
cmpsb
xor
inc
mov
bound
lret
push
inc
sahf
jns
outsb
ss
int3
add
jle
imull
movsb
mull
test
mov
das
xor
xor
pushf
mov
push
popf
pop
jmp
gs
xchg
adc
sub
roll
gs
testb
xor
mov
shr
sti
cmp
pop
fisubrs
lret
pop
mov
fidivrl
add
int
daa
test
jb
sbb
dec
jmp
stos
test
mov
mov
scas
sub
cwtl
in
push
fdecstp
cld
test
add
je
xlat
push
jo
jne
int3
inc
xor
add
pop
xor
mov
in
fs
pop
insb
clc
stos
and
adc
push
lds
cmp
adc
pop
cs
fwait
push
xor
repnz
test
stc
loop
das
cmpsb
outsb
pop
in
xchg
jge
and
mov
or
dec
xor
fcompl
xchg
sbbb
pop
mov
test
fsubrs
movsl
pop
loop
dec
mov
mov
sahf
mov
inc
xor
icebp
in
add
jmp
lahf
or
daa
fadds
mov
pop
cmp
mov
lret
pop
clc
pusha
dec
ja
dec
mov
fsubr
sti
iret
imul
pop
das
inc
mov
mov
cmpsl
push
cmpl
mov
and
icebp
les
adcb
imul
pusha
mov
imul
fisubrl
xorl
pop
push
adc
push
testb
push
xchg
sbb
add
xor
xchg
enter
adc
cmc
fmuls
pop
ss
lcall
mov
test
or
and
push
enter
cmc
or
inc
xchg
cli
or
les
fs
or
addr16
shr
pop
jp
cmc
inc
sub
mov
lds
adc
mov
or
imul
aam
popa
mov
ja
in
xor
into
fnstcw
xchg
bound
repz
xchg
jae,pt
xchg
jle
mov
enter
cmpsb
xor
sub
xor
xor
or
add
and
jns
or
jp
cmp
orl
sub
popa
in
push
xchg
push
cmpl
test
pop
push
and
adc
push
cmc
sbb
out
xor
repz
lods
jns
popa
repz
mov
jne
scas
sbb
daa
rcl
sti
pushf
jae
xor
out
rorl
add
mov
inc
insb
or
and
test
dec
lods
aaa
add
aas
rep
push
cmc
loope
imul
mov
int3
cmp
aaa
aam
shll
mov
fnstcw
mov
add
push
in
test
dec
xchg
pushf
cmp
pop
imul
aaa
sti
repz
pop
add
pop
call
add
pop
andl
sbb
inc
rcll
lret
stc
add
mov
sbb
mov
xor
imul
jbe
enter
in
or
push
jl
jecxz
lods
xor
xor
cltd
mov
sub
movsl
push
or
inc
dec
xchg
repz
ja
fcmovu
add
std
leave
orl
jb
and
mov
pop
pop
jnp
pusha
js
and
pop
dec
cmp
cmp
jno
adc
xchg
mov
fisttpll
mov
bsf
loope
clc
inc
mov
test
jnp
lods
insl
xor
jmp
scas
inc
mov
frstor
shlb
fmuls
and
daa
sub
adc
xorb
adc
xchg
or
call
jne
add
push
int
xchg
pop
cld
popf
add
cmp
or
jmp
in
test
les
sbb
mov
inc
jbe
jne
lea
fistl
inc
mov
repz
mov
mov
inc
lret
pop
jb
ljmp
adc
mov
and
adc
loop
adc
sub
mov
xchg
fistpll
icebp
fsubrp
mov
dec
and
pop
fwait
out
xchg
enter
dec
xchg
inc
bound
xchg
cmp
jae
sbb
sub
lret
loop
lret
aad
pop
xchg
mov
nop
add
lods
gs
pop
dec
mov
je
xchg
xor
int
ljmp
es
mov
xchg
push
jl
js
mov
daa
inc
adcl
add
inc
int
sbb
pushf
adcb
in
inc
cmp
sbb
push
arpl
popf
inc
jp
inc
mov
sbb
testl
lret
dec
out
lods
dec
ds
and
xchg
mov
mov
adc
sti
and
je
push
cltd
addr16
loope
je
in
andl
mov
in
loope
or
icebp
sub
xchg
std
mov
xchg
add
xchg
js
xor
push
pop
jbe
dec
or
rcll
cmp
and
fwait
mov
mov
mov
mov
rolb
mov
and
enter
jle
in
cltd
repnz
mov
cmp
mov
jecxz
xor
rorl
aad
mov
add
fwait
ss
push
arpl
test
out
adc
pop
and
int3
loop
mov
and
into
inc
mov
out
push
jp
je
arpl
daa
dec
aam
mov
jg
xchg
pop
std
push
mov
xor
pop
sbb
lea
divb
pop
sbb
cli
je
stos
jnp
dec
sub
lea
fidivs
cmp
fisttpll
cmpsb
stc
ljmp
repnz
arpl
outsb
mov
fidivs
mov
outsl
movsb
mov
sbb
mov
pop
out
ret
ljmp
cmc
shl
lcall
iret
and
inc
test
rcll
mov
mov
push
stos
xor
adc
mov
mov
push
addr16
mov
sbb
xchg
adc
vhsubps
mov
gs
and
ss
aas
pop
or
ret
dec
push
mov
jb
inc
sub
mov
aad
mov
in
xor
stc
or
inc
movsl
aad
push
add
jbe
add
mov
pushl
mov
jp
mov
call
cmp
rcll
in
sub
or
mov
cltd
cwtl
mov
insl
scas
fs
das
add
sbb
adc
pop
mov
out
mov
outsb
hlt
loop
clc
sbbl
mov
iret
shll
or
and
adc
mov
popa
cwtl
in
cmp
insb
inc
and
inc
inc
clc
scas
ds
clc
jge
ja
inc
ret
testl
outsb
jmp
fwait
mov
lods
cmp
dec
jmp
mov
inc
dec
cmpsb
in
popf
add
xlat
cmpl
scas
or
in
or
xor
mov
mov
mov
or
xchg
sub
shl
fidivrs
push
jp
cmc
cmp
mov
icebp
lock
mov
mov
adc
sahf
ret
std
xchg
lods
pop
xor
js
jmp
inc
jl
mov
movsl
rorl
out
adc
cmp
or
jle
or
pop
inc
jl
outsb
cmp
inc
inc
stc
fmull
inc
lahf
out
push
ret
lods
jo
inc
pushl
jecxz
mov
push
outsl
adc
dec
mov
ret
sub
jmp
ljmp
lods
adc
in
pushf
jmp
mov
pop
jg
hlt
or
mov
movb
cmc
dec
hlt
shl
inc
je
sbb
add
orb
sub
fdivl
sbb
push
inc
lar
adc
jmp
mov
mov
les
stos
jecxz
pushf
fildl
sti
test
popf
pop
xchg
jmp
nop
cmp
int3
mov
xor
testl
inc
jbe
mov
popa
sub
sarb
test
add
dec
mov
add
scas
stos
cmpsl
lods
jb
mov
ret
shlb
jecxz
jl
bound
inc
dec
repnz
daa
out
mov
xor
lods
stos
push
mov
dec
in
filds
out
pop
adc
js
icebp
adcb
fcmovb
call
mov
inc
and
in
ss
sub
mov
dec
ud0
sti
xchg
jecxz
mov
insl
add
add
aam
cli
sub
inc
add
scas
add
adc
lods
inc
mov
or
into
bound
pop
sbb
jae
scas
loopne
jmp
cmpsb
sahf
scas
xchg
pop
sbb
shll
mov
lret
xor
lret
daa
lods
sub
decb
mov
sbb
test
add
xchg
push
cmp
orl
out
or
out
mulb
stos
je
pop
cld
mov
popa
pop
out
mov
imul
inc
out
or
xchg
and
dec
add
lods
mov
enter
nop
insb
ja
xchg
aad
jge
dec
dec
add
movsb
xchg
xor
dec
push
jg
ljmp
and
xchg
jnp
xor
popf
cmp
aad
pop
or
sbbb
les
sarl
nop
test
pop
je
insl
xor
movsl
push
or
dec
fwait
xchg
dec
iret
cmpw
dec
out
scas
xchg
and
pop
movsb
bound
add
out
out
or
aad
aam
cmp
jns
jnp
fcoms
jl
outsb
repz
sub
adc
scas
mov
lods
fists
fldt
std
insl
sub
pop
call
add
cltd
fwait
jno
rorw
jg
pop
adc
xchg
or
pop
add
out
nop
ds
ja
aaa
mov
andl
dec
cli
jo
aaa
pushf
sub
rcl
lcall
jp
mov
fwait
push
cmp
and
mov
adc
or
aam
and
sub
push
lahf
push
cmp
sbbl
push
cmp
stos
cmpsl
movsl
movsl
jmp
xchg
dec
in
lea
scas
jb
test
lahf
arpl
ja,pt
jb
lahf
je
mov
setbe
out
test
and
lea
dec
adc
leave
mov
pop
xchg
or
fstpt
xchg
pop
scas
and
cmpsl
mov
sbb
pop
aad
call
ret
sti
loopne
dec
sti
adc
sub
cmp
cmp
out
cwtl
jno
pop
cmp
not
xchg
cmp
sub
pop
dec
push
inc
and
loop
mov
rorb
cmpsb
leave
inc
bound
nop
mov
inc
adc
mov
mov
adc
xchg
insb
cmp
rclb
ror
mov
mov
mov
pop
adc
jo
test
out
filds
add
xchg
push
and
cmp
and
sub
pop
inc
push
add
dec
add
addr16
and
fisttpll
iret
pop
inc
cltd
lods
xlat
xchg
fadds
push
jecxz
rolb
xor
int3
sbb
push
inc
jno
or
cmp
xlat
jae
cmp
push
pop
rcl
mov
ret
sbb
fmull
les
jnp
cmpsl
pop
xor
xor
cld
fnstsw
dec
sbb
xorb
fdivl
add
imul
in
mov
cmp
sub
xchg
xchg
jne
das
xchg
dec
into
aad
sbb
ret
add
push
jae
mov
inc
aam
sahf
mov
and
mov
hlt
mov
jb
dec
es
imul
and
xor
push
enter
cld
shrb
mov
insl
dec
or
or
xor
sbb
pusha
rorl
ljmp
testb
dec
adc
mov
push
mov
adc
popf
mov
sub
xor
rcrb
mov
push
aad
add
mov
inc
adc
jp
push
xor
fimull
pop
lds
pop
pop
std
xcrypt-ecb
cmpsl
dec
in
cmp
or
addr16
inc
mov
add
jne
rcrl
leave
inc
ret
pop
xchg
jg
push
jg
jno
int
pushf
les
xor
cmp
push
mov
fnstsw
incb
out
shll
fs
fdivs
insb
call
pop
mov
fisubrl
jmp
stc
mov
in
mov
pop
hlt
push
push
inc
mov
je
repz
lods
xor
cmp
pop
fistl
paddq
subb
push
ret
mov
popa
dec
cmc
mov
lret
xchg
sbb
data16
xchg
imul
pop
in
xchg
xchg
push
xchg
pop
stos
add
cmp
and
pop
dec
mov
les
dec
fldt
or
sub
push
and
and
ret
push
jg
sub
mov
adcb
jmp
in
push
fs
leave
sub
das
div
dec
lret
orb
xchg
xchg
stos
dec
xchg
fsubrl
mov
adc
xor
rcl
push
stc
dec
ret
push
rorl
pop
pushl
xchg
jo
data16
lret
sub
out
cld
in
mov
add
sub
adc
add
mov
adc
fdiv
push
sbb
bound
mov
pushf
add
je
sahf
push
xchg
and
lea
addr16
jns
hlt
fs
add
pop
jp
inc
adc
lods
out
enter
mov
ret
std
adc
out
mov
pop
shl
sub
cmpsb
int3
dec
adc
hlt
std
sub
data16
xchg
jl
mov
xchg
addr16
incb
pusha
xchg
sub
imul
mov
mov
sbb
sub
fistpl
dec
cmp
inc
and
or
movsl
dec
sbb
data16
sub
jl
xchg
imul
pop
clc
xor
fdivs
aam
cmp
scas
jle
push
int3
sbb
xchg
cmpsl
outsb
test
xchg
sub
out
outsb
icebp
test
scas
sub
mov
stc
ret
ds
lret
cmc
mov
daa
or
mov
rcrb
sahf
mov
shrl
scas
lds
ss
sahf
movsb
aaa
loope
xchg
jno
addr16
shld
cmp
test
ret
xchg
adc
rolb
cmp
push
or
xchg
aaa
cwtl
decl
test
cmpb
fs
or
fld
pop
mov
mov
frstor
inc
sub
hlt
cmpl
mov
sub
dec
fcompl
inc
pop
dec
cmp
dec
gs
jge
push
sti
adc
push
push
adc
mov
aaa
xchg
mov
add
jecxz
pop
shlb
adc
inc
mov
ret
push
sbb
test
mov
sahf
setg
add
mov
inc
cmpsl
fbld
addr16
push
push
es
or
popa
std
orl
mulb
sbb
shrb
in
fcoms
jae
mov
popa
ret
push
jns
icebp
add
cmc
fnsave
das
insb
loop
add
cs
xchg
into
cmp
in
jmp
cmp
ja
lods
fidivrs
rclb
jmp
loop
dec
sbb
insl
jecxz
out
ret
dec
pusha
or
imul
clc
pushf
inc
jle
insl
mov
xchg
testb
inc
cld
mov
cld
adc
lea
out
push
jno
jge
les
push
insb
dec
cwtl
fs
dec
fdivrs
stos
xchg
xor
add
mov
fldt
in
fsubrs
roll
jne
and
lods
dec
int
sbb
adc
outsl
in
mov
stos
mov
mov
xchg
les
add
int
data16
push
and
and
in
mov
insl
inc
xor
lret
push
notb
movsb
movsl
sbb
imul
cli
movb
ja
adc
xor
add
mov
ret
or
xchg
add
sub
out
lea
subb
jo
stos
in
mov
inc
leave
mov
xchg
adc
int3
cmp
xchg
frstor
push
std
ljmp
sub
add
adc
push
or
das
imul
xor
ret
mov
xor
les
jae
adc
mov
movsl
scas
adc
shll
jbe
push
mov
pop
add
sbb
out
jg
adc
sbb
or
or
int
xor
popa
out
popa
xchg
mov
push
xor
arpl
and
in
sti
ljmp
xchg
dec
dec
pop
sarb
in
in
leave
and
or
mov
and
pop
dec
scas
data16
push
test
pcmpgtd
outsb
icebp
dec
leave
pop
or
int3
xchg
xchg
and
fistpll
rolb
ja
cmp
inc
xor
add
shl
repnz
outsb
adc
jge
jge
add
ds
mov
push
sti
inc
push
dec
test
xchg
pop
or
push
cld
jge
push
adc
xchg
jae
shlb
jp
fidivs
nop
test
mov
repnz
dec
xor
and
scas
test
addl
ljmp
cmpsl
mov
lock
dec
sbb
sbb
outsb
es
ret
aam
mov
int3
sarb
roll
lret
into
sahf
clc
mov
cmp
lds
pushf
lahf
mov
or
jecxz
push
into
jl
rcrl
mov
push
mov
inc
jecxz
adc
faddp
orb
in
arpl
jnp
cmpsl
dec
pop
and
mov
push
test
cmpsb
adc
mov
mov
ja
enter
or
je
or
scas
pop
inc
mov
or
test
scas
clc
pop
and
inc
mov
cli
pop
xchg
pop
fidivrs
addr16
loope
lcall
hlt
pushf
cltd
dec
xor
mov
cmp
ja
popf
jae
in
icebp
cmpl
xor
mov
sbb
mov
ret
lock
add
insb
lock
mov
les
mov
mov
aaa
xchg
cwtl
adc
xchg
mov
mov
mov
sub
sub
cwtl
mov
inc
xchg
cli
pop
rorl
outsb
xchg
lret
add
dec
inc
inc
and
les
in
and
out
push
xor
jno
xchg
push
dec
iret
aad
test
mov
pop
pop
lcall
cmp
xchg
adc
test
sbb
cmp
test
fsubl
call
pop
cs
cmc
ds
std
sbb
xlat
push
stc
inc
in
dec
test
cs
lret
cmp
mov
out
cwtl
aam
aaa
cmp
call
flds
push
mov
je
test
lods
inc
lock
adc
cmp
jbe,pn
lahf
dec
repnz
orl
inc
mov
dec
outsb
mov
cs
xor
sti
push
dec
sbb
fwait
adc
adc
out
lret
dec
orl
cmp
adc
mov
stos
push
std
cmpsl
mov
popf
popa
jnp
gs
adc
jmp
lds
jnp
sbb
xchg
and
fcomps
push
rol
pop
jecxz
inc
push
cld
nop
ret
push
in
lock
pop
leave
pop
cmp
fisubl
test
dec
sahf
aaa
push
add
stos
enter
std
sbb
cmc
daa
imul
loope
scas
jg
stos
mov
jp
inc
xchg
into
push
in
adc
xchg
pop
lods
cs
into
aad
cmpsl
andb
lret
outsl
cltd
ret
cltd
mov
and
dec
aad
mov
mov
outsb
test
cli
clc
ret
dec
lcall
movsl
sub
fisttpll
test
ss
sub
jno
es
and
in
mov
jmp
test
cld
mov
jbe
fisubs
fidivrs
out
mov
jae
mov
aas
and
movsl
add
iret
mov
mulb
loope
or
pop
push
mov
and
xor
lods
push
mov
in
insl
push
push
push
bound
aam
rcr
lods
pop
fdiv
push
icebp
mov
xchg
mov
sub
mov
inc
inc
cmp
or
pushf
outsl
lds
and
push
std
das
lcall
xchg
clc
mov
int
in
adc
and
int
dec
clc
imul
xor
movsl
mov
and
rep
xor
inc
inc
sub
int3
cltd
mov
aaa
idivb
fisttpll
sbbl
bound
mov
fmull
lds
pop
fcompl
fadds
cmp
dec
vpunpckhdq
ja
xor
scas
pop
mov
xor
stc
mov
sbb
arpl
add
and
cs
and
test
sbb
push
hlt
icebp
fisttps
inc
and
pop
pop
int3
adc
xchg
pop
out
jmp
jo
xchg
clc
mov
mov
pop
rolb
int
inc
or
dec
mov
int3
or
insb
andb
inc
push
sub
sub
xlat
pop
outsb
out
movsb
bound
xchg
jge
push
mov
cmpsl
jnp
shlb
mov
push
lds
lock
cs
jnp
push
pop
mov
loope
addl
shl
mov
shr
mov
in
adc
and
test
divl
lods
loop
and
lcall
mov
lahf
xchg
push
je
mov
push
addr16
je
lds
addl
jae
dec
add
orl
or
cwtl
push
sbb
lods
sbb
xlat
pop
fdivrs
add
and
mov
pop
cmc
xor
mov
jnp
int3
ret
and
mov
insl
sbb
adc
inc
arpl
lahf
mov
push
dec
test
mov
xlat
ja
and
test
jbe
and
aas
jne
cmp
lahf
in
outsl
inc
ljmp
add
fcoml
mov
lods
pusha
inc
sti
xor
mov
stos
add
mov
jp
mov
xor
dec
fists
incb
cmc
imul
fistl
das
push
sub
ja
mov
std
or
inc
dec
repnz
pop
pop
xchg
inc
repnz
dec
mov
fistps
mov
lds
lret
pushf
jl
xchg
sbb
mov
push
jns,pn
push
clc
or
nop
push
iret
lds
shrb
call
cmp
dec
push
mov
pop
dec
cmc
xchg
push
inc
hlt
jb
test
test
dec
mov
push
inc
mov
push
lds
cmpsb
pop
push
loop
or
std
or
insl
dec
or
and
jg
leave
jmp
jae
xor
pop
lock
lret
lods
mov
sti
in
mov
dec
test
sub
push
lahf
add
andb
jp
in
out
js
inc
dec
out
mov
popa
pop
mov
data16
cmp
ret
sub
xchg
in
mov
adc
aad
in
xor
mov
sahf
jle
jne
lret
xchg
out
nop
sbb
in
rcrb
cld
cld
stc
das
inc
and
mov
cwtl
cwtl
out
aad
aam
inc
sub
notl
xchg
popa
cmp
lds
into
push
ljmp
sub
push
sbb
push
mov
xor
adc
sub
and
inc
jbe
mov
xchg
xor
pop
aas
add
mov
ljmp
add
cs
xchg
pop
jle
sub
addr16
cld
inc
sub
jne
sub
mov
mov
sbb
inc
cwtl
push
data16
xor
mov
sbb
repnz
cwtl
fidivl
jae
xchg
out
jl
mov
lea
mov
mov
out
push
sub
insl
rol
bound
es
adc
jb
xor
dec
inc
add
inc
subb
mov
pop
test
lods
popa
mov
mov
cmpsb
inc
pop
jne
mov
dec
es
imul
fstpt
loope
push
or
jmp
xlat
adc
imul
int
dec
push
iret
xchg
sbb
dec
mov
icebp
cli
das
jmp
push
or
aaa
hlt
or
out
jno
jbe
mov
cmp
rcll
arpl
xlat
loope
mov
subb
clc
adc
out
ret
add
outsb
add
push
cli
aad
fs
fucom
inc
mov
add
inc
lahf
and
pushf
push
and
push
add
cmp
mov
push
shll
xor
stc
cltd
repnz
subb
push
mov
int3
sub
loop
std
shl
dec
mov
sub
jmp
int
xchg
sbb
hlt
mov
push
jg
cmc
mov
mov
inc
ss
mov
xor
pop
sub
ja
testb
mov
mov
sub
add
cwtl
jl
les
das
or
gs
mov
movsl
xchg
enter
xor
lods
enter
mov
stc
jmp
rclb
push
dec
and
ret
insl
repz
out
pop
pushf
sub
push
or
lahf
repz
incl
mov
sub
push
lret
data16
outsb
fnstcw
push
int3
sub
push
loop
jecxz
sub
add
or
add
cwtl
cmp
mov
fdiv
pop
ficomps
pop
cli
or
dec
orb
fwait
out
mov
mov
lret
testb
insb
ret
icebp
cmp
lock
outsb
mov
inc
lret
sbb
cmp
jl
sub
add
in
xchg
adc
xor
in
fstl
cmp
mov
jl
mov
cmp
loopne
popa
inc
xchg
cmp
inc
mov
ficoml
push
dec
jecxz
jne
stos
mov
imul
mov
leave
xchg
lea
ljmp
inc
pop
mov
xor
mov
fchs
mov
jae
pop
mov
pushw
ss
into
inc
push
cltd
stos
mov
mov
cmpl
jb
add
rcrb
jmp
hlt
dec
popf
mov
mov
fiaddl
dec
jg
mov
xor
ret
cltd
adc
aam
dec
inc
iret
scas
add
popa
shlb
pop
inc
add
inc
inc
cmp
mov
and
inc
dec
cmc
and
xor
and
insl
loope
inc
and
stc
jmp
test
les
cltd
mov
mov
cmp
and
add
push
gs
lds
ljmp
mov
out
sbb
in
add
xchg
inc
sbb
mov
push
and
or
sub
test
call
pop
mov
fwait
lock
xlat
gs
ret
test
add
and
sbb
sub
test
adcb
shll
jmp
mov
pop
xor
jbe
lds
imulb
jb
xor
xchg
adc
xchg
mov
cs
push
mov
sahf
sar
cmp
ret
sbb
xor
fistpl
dec
pop
add
ret
mov
aaa
jle
lds
popa
sbb
mov
mov
es
jp
xlat
fidivl
stos
add
lds
dec
sub
cmp
imul
sub
pop
jnp
outsl
inc
sti
lock
jnp
daa
dec
sbb
dec
pop
imull
mov
xchg
push
fimull
dec
pop
sbb
add
imul
mov
ja
ret
in
outsb
movsb
sub
mov
test
in
les
shrb
addr16
pop
jl
xchg
call
mov
dec
jge
outsl
repnz
cltd
ret
adc
pop
pop
mov
mov
fisubl
addl
mov
bound
lods
dec
shll
cli
enter
pop
idivb
mov
mov
outsb
nop
cs
sahf
xchg
dec
sub
ja
and
sbb
dec
lds
ret
pop
push
cmp
outsl
iret
sti
sbb
popf
and
adc
test
das
test
push
sub
and
aam
or
addr16
push
loop
int3
fucomi
mov
or
push
and
rcrb
movlps
mov
add
scas
mov
push
scas
inc
pop
rolb
add
call
scas
std
leave
adc
fldt
inc
mov
dec
jae
mov
stos
test
pop
jno
les
adc
dec
mov
addr16
fadd
scas
mov
or
mov
sbb
das
push
pop
mov
ljmp
pop
jl
in
inc
xchg
fwait
xchg
loope
sub
push
lds
lret
das
fimuls
popf
jg
push
pop
lds
xchg
or
mov
insb
bound
sbb
lock
mov
push
call
jne
ja
js
pop
mov
daa
jnp
dec
scas
outsl
loopne
inc
out
idivb
shl
aam
cld
mov
mov
stos
sub
pop
movsl
xchg
and
movsl
push
pop
lahf
daa
lret
add
cmp
add
test
jbe
fdivr
add
jo
mov
mov
enter
hlt
dec
sub
stc
cmp
daa
mov
pop
in
call
psubsb
mov
sahf
rolb
arpl
push
jle
jmp
outsb
enter
lret
cmp
rcrl
or
push
jb
or
pop
xor
sbb
add
mov
aam
jecxz
push
call
or
cmp
inc
xchg
xchg
and
adc
enter
loope
lcall
push
inc
daa
nop
in
sar
ds
dec
mov
mov
movl
or
clc
cmp
dec
stos
mov
arpl
cli
fs
int3
pop
movsl
xchg
lahf
sbb
add
fnsave
out
lods
add
rorl
cmp
loop
je
gs
push
mov
out
push
and
xchg
adc
xchg
pusha
cmp
jmp
xchg
dec
push
xchg
cmpsb
sahf
shr
or
sahf
mov
lock
cmp
shll
xchg
incl
and
cmpsl
dec
ret
dec
call
push
lea
push
test
ja
sub
popa
fldl
or
ljmp
mov
lods
andb
push
jle
sub
adc
sbb
pop
lret
jne
and
daa
mov
dec
in
add
cwtl
push
loop
cld
cwtl
pop
aam
movsl
shr
cmp
scas
push
dec
js
out
sub
jae
rorl
outsl
pop
aad
mov
mov
push
adc
sarb
inc
jge
test
push
and
or
call
fisttpll
ret
das
loopne
mov
sbb
fisttpll
push
loope
mov
jae
dec
dec
test
xor
add
fyl2xp1
pop
dec
popa
cwtl
mov
fstenv
cltd
xor
or
fdiv
mov
call
push
out
int3
imul
jmp
mov
lret
imul
jae
add
jae
call
xchg
outsb
in
mulb
int
dec
inc
es
push
mov
out
push
and
imul
xchg
gs
pop
es
xchg
add
shll
lods
lahf
fisttpll
out
mov
fildl
ds
lea
int
mov
jb
push
dec
repz
sub
push
adc
jg
mov
gs
xchg
jg
sub
leave
rcrl
test
mov
cli
add
fimuls
mov
and
adc
mov
mov
loope
leave
out
xlat
les
sbb
ficoml
movl
or
adc
adc
lret
cmp
test
mov
push
pop
mov
push
pop
fcmovu
lods
test
add
xchg
cmpsl
sub
aam
adc
sti
mov
out
or
mov
sbb
stos
sub
int
dec
je
ror
stos
mov
inc
popf
push
or
out
addr16
xor
shll
cmpsl
adc
cmp
repnz
cmp
cmp
fisubrl
push
pop
bound
dec
jns
or
std
repnz
andb
stos
inc
dec
lods
loopne
int
add
mov
mov
sub
xchg
popa
sub
lea
nop
or
ljmp
sar
inc
pop
in
icebp
jg
or
xchg
fisttpl
inc
lret
cmp
fiadds
and
mov
adc
jp
leave
sbb
cli
mov
push
flds
cmp
and
mov
orl
testb
push
in
push
jl
fisttpll
ret
xor
cld
insl
adc
outsb
adc
pushf
mov
or
dec
pop
cmpsl
cmpsb
mov
pop
pop
dec
push
mov
rcrb
add
out
sub
in
adc
fxch
or
das
mov
es
lds
jns
add
or
xor
add
mov
sbb
daa
sub
sbb
push
repz
cmp
cmp
scas
mov
outsb
ja
cmp
decb
xor
adc
lods
lret
sub
lds
test
mov
cmp
repz
sbb
shl
jne
fiaddl
aad
push
out
or
lea
int
sub
mov
pop
mov
jo
push
cltd
sarl
loope
test
cli
orl
mov
mov
out
jmp
jno
jb
inc
xchg
inc
add
outsb
in
loop
mov
push
cmp
mov
mull
rcrb
xchg
jo
push
sub
adc
lahf
jne
jne
insb
mov
and
jno
fcmovnu
jle
iret
jmp
cld
cwtl
les
mov
jb
jae
int3
aad
xchg
jo
lea
les
add
xchg
je
mov
add
mov
rcrl
popa
sbbb
sbb
stos
sub
sub
add
or
push
sti
sub
rcl
fistps
and
imul
fisttpll
mov
or
push
adc
and
sahf
cmp
inc
pushw
adc
aaa
adc
mov
mov
cmpsl
inc
or
pop
paddw
mov
decl
in
pop
and
push
mov
ret
and
out
stc
sub
shll
add
dec
mov
es
shlb
adc
and
xchg
rcrb
jge
add
cmp
inc
xchg
and
je
and
jge
mov
mov
add
inc
lret
imul
neg
call
cmpl
push
repz
mov
repnz
jne
push
arpl
pop
cmp
xchg
adcb
adc
cli
pusha
mov
lahf
fs
mov
popa
cltd
das
hlt
movsb
sub
aad
test
mov
or
inc
push
inc
daa
out
cmpsl
nop
mov
lahf
stos
lods
add
in
jo
xlat
cmp
adc
out
cwtl
and
addr16
mov
sub
data16
mov
dec
push
push
shlb
jecxz
jo
cld
sub
xchg
shrl
mov
int
xor
cmp
pop
out
mull
sbb
pop
lret
cmp
int
loope
mov
nop
sbb
dec
xorb
or
dec
ret
and
je
or
clc
lock
sub
js
mov
cmp
dec
push
and
xchg
mov
inc
outsb
or
dec
mov
mov
inc
jnp
outsl
dec
adc
jl
jmp
loop
jns
xchg
add
aaa
pop
loope
fildl
push
cmp
inc
push
lret
inc
dec
xchg
cmp
sub
mov
xchg
mov
mov
sahf
cmp
clc
xlat
inc
jnp
in
movsb
loope
push
mulb
jecxz
fidivs
cmc
sbb
dec
dec
xor
jnp
add
push
cmp
jp
or
repz
xchg
dec
jg
nop
mulb
jl
jle
xor
jno
sub
loop
test
adc
insl
or
add
loopne
push
popf
enter
mov
push
xchg
sub
repz
andb
ja
rcrb
cmp
insb
mov
cs
ja
rcrl
mov
and
cld
xor
add
fmuls
push
scas
jo
call
call
cli
push
lds
sti
sbb
stos
imul
jns
movsl
cmpsb
xchg
mov
in
pushf
and
mov
mov
jo
mov
pop
in
push
cmp
loope
cmpsl
add
pop
fsubl
sbb
stos
push
int3
into
inc
and
pusha
sub
push
ss
in
or
sub
adc
lock
sub
xchg
dec
sbb
mov
push
mov
out
or
inc
stos
ret
push
sub
jno
movsb
inc
adc
fbld
loop
mov
xchg
gs
imul
fwait
stc
lcall
and
jb
out
inc
les
xlat
pop
cmpsb
xchg
push
push
pop
pop
jp
ficoms
adc
adc
pop
xchg
in
call
sbb
jns
jge
in
cmc
pop
daa
jl
add
push
add
je
les
cmpsl
pop
pop
fcomi
and
cmp
addl
push
jne
clc
arpl
sbb
jle
int
pop
push
fistpll
xlat
jl
inc
lret
xchg
xor
aad
adc
sub
stos
sbb
in
insb
sub
ret
pushf
loop
pop
mov
fstps
xchg
ret
ljmp
cltd
pop
inc
or
mov
mov
mov
lahf
ret
xor
xor
push
pop
mov
movsb
mov
jae
stos
and
pushf
or
dec
pop
in
jae
push
cld
mov
cmp
add
pop
pop
hlt
push
jbe
pop
sub
add
cmp
es
dec
loop,pn
mov
xchg
xchg
or
jnp
icebp
sbb
dec
mov
sbb
dec
imul
mov
subb
je
test
mov
push
mov
cmp
jns
push
div
incb
mov
insl
mov
hlt
iret
sub
into
mov
insb
lods
add
xlat
add
jno
cmp
adc
push
movsl
ljmp
test
dec
lret
rorl
sbb
lds
xor
sub
ret
cltd
sahf
sub
dec
mov
add
mov
loopne
push
mov
pusha
je
sbb
dec
push
imul
mov
bound
pop
dec
movsb
nop
stos
repnz
out
arpl
sub
or
iret
in
xchg
cmp
jns
int3
add
jne
loopne
enter
jne
pop
pop
inc
fdivrs
sub
push
test
push
out
ss
mov
add
inc
cmpsb
jge
insl
mov
outsb
sub
mov
scas
insb
xor
inc
js
and
insl
leave
fisubs
or
aad
cmpsl
clc
add
fwait
mov
add
jmp
jg
fsubl
idiv
repnz
xchg
mov
mov
hlt
mov
hlt
ljmp
sbb
pop
insl
leave
and
xchg
dec
out
mov
sbb
mov
adc
sbb
ret
inc
in
fnstcw
std
add
pop
lcall
loop
or
jne
push
jl
mov
aam
jecxz
cmp
mov
iret
mov
xchg
or
icebp
hlt
dec
jle
mov
pxor
enter
mov
adc
inc
pop
fsts
pop
mov
or
add
cltd
rorb
push
dec
lahf
addb
mov
cmp
xor
mov
cmp
cmpsb
inc
into
pop
mov
iret
inc
loopne
ds
mov
jnp
insl
stc
cli
inc
jno
push
dec
imul
inc
imull
in
push
outsb
rcl
cmpsb
inc
int
add
in
test
add
movsl
ja
lcall
cmp
insl
sbb
stos
scas
pushf
add
std
xor
mov
add
inc
inc
out
add
push
cmc
movsb
cmovl
mov
repz
and
pop
imul
in
push
lds
bound
and
movsb
mov
sarl
jl
add
mov
mov
insb
xchg
mul
fs
mov
xchg
lcall
iret
fisubs
sahf
es
or
pop
inc
movsl
pop
mov
stos
mov
xlat
cmc
adc
pop
push
dec
lock
dec
out
push
ffreep
aam
fwait
dec
mov
inc
jp
hlt
aaa
push
mov
fstps
es
lcall
jo
mov
adc
dec
sub
repz
mov
dec
cmp
add
out
das
dec
in
xor
enter
sbb
xchg
arpl
jno
pop
xor
leave
mov
outsl
testb
and
aad
je
or
ds
repnz
test
les
push
dec
mov
or
and
sbbb
xchg
or
mov
ljmp
sbb
inc
pop
stc
arpl
ja
fs
mov
mov
xor
lret
mov
push
lret
pop
or
push
rorb
mov
xchg
cmp
push
pop
mov
jnp
inc
orb
jb
lahf
ficompl
cmp
jge
lea
push
mov
fildll
sbb
mov
add
xchg
fildll
loopne
cmp
jnp
fcomps
jmp
jl
cmp
pop
das
fsubrl
mov
adc
push
outsb
or
mov
mov
lcall
push
iret
mov
movsl
and
js
fnclex
mov
jecxz
fdivs
jns
gs
or
inc
mov
inc
push
pop
sbb
movsl
mov
cmp
ja
test
insb
aam
lods
icebp
sbb
insb
rcr
into
mov
jle
dec
mov
xchg
xchg
mov
adc
addr16
push
jnp
push
mov
stos
inc
push
dec
mov
mov
insb
je
cmpsl
mov
ret
mov
pop
add
loopne
or
cmp
test
imul
or
pop
or
popf
loopne
mov
mov
xchg
gs
jae
sti
out
clc
cmpsl
pop
out
cli
cs
cmp
out
icebp
mov
insb
int
popf
mov
push
xor
dec
ds
popa
dec
in
popa
sbb
xchg
pop
in
rcrb
fistps
sti
pop
mov
push
dec
sahf
addr16
fbstp
iret
lds
adc
std
addr16
push
out
xor
mov
sarl
rclb
mov
ffreep
or
sub
int
sbb
imul
add
jl
mov
cmp
cmp
mov
and
sbb
pop
fsubrl
adc
add
sahf
add
ret
mov
inc
in
and
lcall
cli
mov
push
mov
fs
cmc
jmp
jge
lahf
mov
mov
lea
dec
ljmp
sub
int3
cmp
lret
ljmp
push
arpl
xchg
pop
or
in
cmp
or
movsl
in
loop
stc
lahf
icebp
addb
pop
lds
out
xor
fcmovnb
sbb
sbb
mov
push
xlat
xchg
aam
imul
sbb
sub
int
out
imull
fiadds
jo
lods
cmp
xchg
cltd
and
push
xlat
xchg
fs
cs
or
jne
jge
aaa
lods
mov
mov
push
or
cmp
xor
add
adc
xchg
stos
lds
hlt
lea
sbbb
xchg
push
pop
notl
shll
mov
adc
push
adc
out
or
lods
fs
or
adc
lret
pop
js
shll
stc
lock
jb
xor
add
icebp
das
les
inc
shl
xchg
sbb
or
out
pop
mov
lods
lcall
dec
inc
ficoml
jmp
aas
fsubl
jmp
pop
cmp
sti
jecxz
mov
dec
cmp
or
pop
cld
ljmp
gs
arpl
insl
or
subb
hlt
mov
lcall
lret
or
shr
dec
sub
idivl
xor
inc
jmp
pop
enter
in
or
cmp
inc
cmc
stc
jae
call
hlt
pop
in
inc
nop
js
aas
push
movsb
xor
iret
push
push
lahf
mov
int3
jp
fwait
or
mov
pop
fsubrs
xchg
jns
jmp
dec
fnstsw
sub
xchg
push
sub
out
in
push
mov
xchg
or
add
push
insb
xchg
test
inc
xchg
test
loope
mov
jge
int
in
sbb
test
std
xchg
jne
pop
iret
in
push
inc
decb
fistpll
mov
loop
push
mov
pop
sahf
jae
aas
sbb
ffree
fdivr
cmp
push
lcall
mov
push
lock
pop
hlt
nop
jmp
fstpl
cli
std
push
fs
into
mov
cmp
in
and
mulb
pusha
repz
test
mov
pop
jge
ja
push
or
stc
and
aaa
cwtl
rorb
mov
mov
jnp
dec
gs
xchg
inc
jo
jno
mov
lods
pop
xchg
mov
or
inc
cmpsb
out
add
jo
mov
jns
push
push
cmpsb
sbb
icebp
add
mov
fiadds
jle
jb
dec
adc
scas
je
imull
pop
outsb
mov
out
fdivs
sbb
xor
jbe
push
or
push
mov
fnstcw
sbb
mov
pushf
xchg
adc
notl
adc
xchg
adc
shlb
lahf
lock
mov
mov
cwtl
nop
stos
cli
sub
stos
mov
outsl
mov
mov
xlat
mov
xor
xor
or
hlt
pop
sub
mov
lods
push
imul
xchg
ja
fs
push
outsl
into
popf
mov
std
xchg
out
rcl
push
ja
js
js
add
pop
hlt
inc
repnz
push
push
cli
fists
or
lock
sbbb
test
push
shll
mov
test
adc
add
cs
mov
or
sbb
sahf
or
add
lock
jb
out
push
mov
jge
fisubl
cwtl
sub
sub
and
fldenv
lds
add
test
add
inc
rcrl
push
lds
iret
jb
aam
out
cs
hlt
mov
test
scas
fidivl
mov
test
mov
stos
jge
dec
xchg
outsb
mov
pop
iret
negb
push
ds
es
push
stos
or
adc
test
and
outsl
ficoml
lahf
mov
lods
or
ds
cmp
es
pusha
dec
cmp
xor
clc
cmpsb
dec
cvtpi2ps
cwtl
jle
addr16
fsubrs
sar
lret
and
repnz
dec
sahf
xlat
lods
leave
je
out
scas
dec
in
mov
addr16
xor
mov
pop
leave
jo
shll
ret
mov
leave
mov
jb
fwait
imul
cmp
cs
adc
pop
xorb
dec
pop
mov
inc
cmp
push
add
sub
push
mov
sbb
sbb
cmp
adc
pop
inc
mov
pusha
mov
mov
into
out
ja
push
mov
push
pop
sbb
pusha
or
xchg
push
stos
pushf
jmp
mov
in
fldt
fwait
jb
dec
mov
hlt
inc
out
push
aas
fildl
cli
negb
mov
jle
xchg
mov
and
das
fldpi
test
pushw
push
ficoml
paddusb
inc
sbb
xor
xchg
push
push
fistpll
inc
cld
mov
xor
cmpsb
sarb
mov
mov
sarl
and
lea
fcmovnb
jg
lret
adc
xor
mov
pop
push
clc
fdivrl
dec
shrl
mov
in
orl
shl
les
push
add
test
shll
mov
push
pushf
xlat
mov
in
mov
and
xor
xchg
shrb
aad
push
mov
test
push
sbb
cmc
mov
inc
jae
outsb
pop
js
cmp
cmp
mov
mov
and
js
mov
sub
jb
movsl
shl
push
mov
lods
pop
push
mov
sti
add
jns
outsl
pop
ret
or
in
push
pushf
fstpt
dec
std
inc
cmpsl
sbb
test
add
inc
cmpsl
mov
enter
rorl
mov
mov
adc
pop
scas
insl
decb
cmpsb
inc
jecxz
push
inc
cmp
iret
loopne
xchg
pop
add
sub
xor
cmc
fiadds
arpl
cmpsb
pop
cmpb
aas
iret
push
mov
xlat
arpl
mov
mov
xchg
inc
out
xor
lahf
sbb
mov
sub
sbb
cmpsb
in
mov
cmc
and
popa
aas
xchg
int3
aam
lahf
ret
fsubrs
dec
imul
sbb
xchg
jb
mov
pop
aaa
aas
jle
jne
cmp
in
incb
mov
adc
mov
and
adc
repnz
leave
mov
sub
push
and
jle
lret
movsl
xchg
scas
pop
xor
cwtl
imul
push
arpl
push
testb
mov
inc
xor
cmpsl
mov
pop
sub
popa
scas
pop
add
xor
sub
xor
xor
cmp
or
jl
adc
les
add
jmp
js
pushf
xor
cmp
mov
es
push
iret
jns
out
jbe
or
mov
or
sbb
mov
mov
movsl
xchg
test
add
je
psrld
push
ljmp
sub
mov
ret
pop
jle
push
pop
dec
lret
ss
pop
push
xchg
ret
inc
sbb
mov
cmp
jno
int3
pop
xchg
inc
arpl
jo
sub
clc
jge
rcrl
inc
xchg
jb
andb
add
mov
and
push
cli
fisttps
test
outsl
mov
bound
sub
test
aad
fmull
add
pop
jle
dec
pop
dec
out
adc
or
sub
cmpsl
mov
fs
mov
or
cmp
rcrb
push
and
adc
fsubr
insb
es
stos
icebp
mov
lock
pop
push
adc
ret
stos
push
sub
mov
arpl
mov
or
xor
test
or
test
imul
data16
inc
and
outsb
lcall
pop
lret
bound
rclb
shr
repz
xor
daa
cmpsb
mov
pop
sub
mov
in
or
int3
inc
lcall
push
jbe
loopne
cmc
pusha
mov
out
sub
jg
or
gs
lock
es
out
inc
div
sub
daa
push
and
pop
loope
xlat
icebp
test
addr16
mov
jl
adc
adc
add
stc
mov
sbb
fstp
mov
mov
sti
mov
inc
scas
lods
inc
xchg
orb
cmp
mov
and
sbb
lcall
movsl
mov
loopne
lea
in
push
jmp
or
sar
xchg
jb
sub
pusha
hlt
pop
loope
inc
dec
in
mov
outsl
int3
out
test
fcompl
add
fdiv
push
sahf
push
scas
lods
and
scas
push
jle
mov
jns
cli
nop
add
mov
inc
sbb
pop
pop
mov
sbb
dec
call
xchg
mov
xor
inc
int3
clc
in
cmp
sti
mov
ret
bound
in
cmp
mov
xchg
icebp
xchg
mov
imulb
rcrb
movsl
inc
mov
outsl
ficoml
iret
pop
add
es
mov
mov
mov
mov
in
sbb
dec
adc
es
adc
dec
inc
rolb
mov
sub
jns
adc
and
ljmp
jb
popf
inc
mov
bound
push
scas
or
push
add
test
push
out
rclb
xor
pop
xor
pop
adcb
push
lock
pop
push
out
mov
aam
testb
jb
inc
jecxz
inc
aaa
insb
sub
push
xchg
lcall
pusha
jl
icebp
or
ret
cmpl
jbe
mov
fbstp
pop
outsb
adc
mov
out
imul
cmp
daa
or
test
or
adc
and
pop
or
add
push
pushf
sbb
push
mov
sub
jne
scas
bound
mov
push
addr16
cmp
mov
mov
mov
jbe
jne
adc
fs
and
jo
imul
adc
aam
push
pop
pop
ljmp
loopne
add
cmc
shll
std
dec
aaa
pop
imul
int
lds
or
mov
inc
add
inc
sub
les
mov
fstps
into
hlt
in
lea
inc
aad
jo
dec
lock
pmulhw
cmp
addl
inc
fcompl
fstpl
lock
or
mov
jge
je
test
aam
or
xchg
stc
fisttpl
notl
cs
xor
xchg
and
stos
xor
es
xchg
cmp
call
inc
nop
testl
xchg
scas
es
inc
and
mov
movsb
ljmp
divl
loope
dec
fdivs
sbb
jecxz
ret
rcr
insb
inc
mov
loop
xor
mov
or
pop
jnp
cli
loope
outsb
dec
sub
mov
insl
inc
arpl
js
test
ds
outsb
cmpl
push
pop
pop
dec
adc
add
lock
mov
lods
mov
fistpll
jp
pusha
enter
std
xchg
mov
cld
pop
sbb
push
pop
mov
cmp
pop
lods
cli
sarb
mov
ret
pusha
mov
aam
aas
fdivl
xchg
lods
repnz
fsubrl
mov
cmp
stos
notl
jl
popa
lock
stc
jno
mov
or
lahf
push
cltd
test
cmpsb
xchg
fstl
int
mov
jp
mov
cmpsb
shr
pop
and
dec
rcl
inc
bnd
adc
and
dec
scas
test
js
lea
ljmp
cli
cmp
test
icebp
ret
jecxz
hlt
jmp
jb
push
mov
jg
gs
add
leave
ret
mov
int
jo
dec
jae
mov
clc
jae
lcall
fsub
and
das
addr16
cmp
xchg
pop
gs
sub
dec
leave
lods
in
push
jg
dec
fs
sbb
pop
addr16
xchg
aas
into
push
dec
sbb
adc
mov
jle
jb
lea
push
xor
out
stos
fwait
jns
scas
mov
and
push
repz
mov
sub
xchg
mov
imull
inc
loop
out
xor
cltd
insl
dec
or
je
ficoml
xchg
pushf
pop
mov
fsubl
ror
sarb
loopne
push
adc
addb
inc
pop
cmp
movsl
jb
push
mov
cmp
pop
cltd
mulb
mov
xchg
or
mov
testb
addr16
inc
in
jns
and
pushf
cmp
aas
in
add
stos
popf
pop
in
enter
out
clc
call
jb
addr16
test
shlb
pop
in
sub
jnp
inc
arpl
push
sbb
add
int
pop
or
js
hlt
into
js
xlat
data16
and
pop
fldt
test
ror
cli
add
lods
or
scas
ss
mov
fs
fdivl
out
fcmovne
and
ljmp
and
inc
push
dec
pop
inc
nop
loope
cmp
sub
std
xor
ljmp
xchg
push
cmpsb
xor
out
dec
or
xchg
push
lret
xor
push
push
mov
loopne
or
mov
mov
sub
fdivs
cwtl
adc
divb
lret
and
aas
lods
cld
push
cltd
pop
nop
out
icebp
rorb
lret
out
arpl
jno
stc
movsb
je
push
dec
imul
sub
mov
ret
push
pop
fcomi
mov
in
sbb
adc
adcb
push
push
mov
pop
mov
xor
push
pop
rcl
mov
cwtl
push
lock
sbb
lock
out
leavew
sbb
mov
popf
push
addr16
stos
bound
push
pop
into
add
sbb
adc
pop
or
ljmp
pop
mov
and
rolb
xchg
push
mov
cmp
js
sub
shl
mov
test
mov
mov
xchg
push
sub
or
sbb
stos
pop
push
stos
or
mov
movsl
shrb
std
jae
stos
mov
cs
cmp
adc
cmc
stc
jne
sub
push
or
call
push
sub
inc
aam
clc
sahf
out
nop
xor
sbbl
inc
sub
hlt
and
cltd
movsb
inc
inc
fs
cmpsb
sahf
sahf
pop
stos
mov
mov
adc
lcall
mov
lahf
jecxz
mov
lock
xor
negl
imul
out
fists
pop
push
nop
pop
or
imul
jl
dec
popa
lcall
adc
into
mov
jo
adc
movsb
es
sbb
and
mov
mov
dec
mov
fwait
enter
roll
lret
mov
sahf
fdivl
adc
lcall
jle
mov
pop
orl
and
insl
sub
movsb
xchg
push
mov
ficoms
aaa
test
cli
xorb
rolb
test
rolb
and
push
movsb
mov
shlb
sub
rorb
out
mov
imul
adc
js
fld
jg
call
xor
in
lret
test
pop
test
inc
mov
scas
or
cltd
push
outsb
mov
out
aas
inc
cld
sbb
xor
aad
or
xor
sti
gs
jns
mov
adc
roll
or
xchg
lods
popf
nop
mov
lret
insl
outsb
pop
loopne
xadd
mov
jb
cs
add
xchg
sub
pop
push
fs
cmp
dec
shrl
sahf
mov
repnz
sti
in
dec
test
pop
hlt
or
aad
int
out
dec
outsl
andb
inc
stos
andl
lret
dec
add
cs
std
push
ds
sbb
and
mov
mov
sub
call
jg
pop
cltd
negl
xor
mov
cltd
mov
fcomps
lock
fldl
fimuls
stos
xor
mov
push
sbb
mov
cmp
push
lahf
push
fadds
aas
sub
outsb
push
lods
shll
lods
inc
loop
adc
jg
dec
cmpsl
or
dec
fstps
pop
add
rclb
popf
aaa
xchg
mov
popa
xchg
xrelease
adc
push
cmpsl
ret
iret
mov
ss
add
adc
push
test
loop
pop
flds
out
lahf
stos
addr16
mov
leave
popa
cwtl
psllq
mov
sahf
lret
xchg
subb
out
xchg
insl
xlat
in
adc
jmp
jl
xor
inc
pusha
push
cmp
pop
pmulhw
add
xor
pop
adc
push
lock
scas
mov
pop
inc
pop
adc
pop
aad
out
cmpsb
xchg
test
inc
inc
sbbb
insl
sub
das
add
mov
mov
notb
cmp
ret
push
mov
cli
jmp
repnz
clc
or
sub
push
sbb
das
xor
cmpsb
push
rcl
sbb
inc
jo
lds
mov
inc
jno
ljmp
xor
das
mov
and
cmp
push
mov
test
jecxz
cli
mov
gs
pop
pop
lea
cmp
ret
xchg
xor
lods
xor
repnz
out
inc
out
shrb
adc
push
outsl
xchg
loope
add
pop
adc
fimuls
inc
outsb
xchg
lret
dec
addr16
and
clc
push
or
add
test
mov
bound
cmpsb
xchg
popf
push
adc
mov
inc
jg
mov
imul
testb
stos
loopne
aam
lahf
mov
not
std
or
cli
outsb
cwtl
test
mov
ljmp
ret
inc
addr16
jle
push
push
stos
int
pop
adc
test
frstor
pop
cmp
jmp
ret
cmpsb
fimull
imul
movsb
test
mov
stc
aad
and
aaa
testl
stc
out
add
inc
loopne
jae
cmc
inc
mov
lret
imul
jb
out
subl
popa
push
sub
mov
shrb
idiv
subl
test
or
jmp
pop
pop
jecxz
js
jg
lea
daa
je
mov
int3
ss
lea
pop
mov
imul
mov
mov
sub
bound
and
mov
mov
mov
jmp
daa
add
outsb
push
inc
mov
pusha
outsb
jne
mov
jne
arpl
cmpb
cmpsl
repz
loope
arpl
inc
dec
inc
dec
sub
cmp
in
leave
add
add
test
dec
mov
fs
adc
pop
icebp
add
aam
jp
lahf
sbb
fwait
push
pusha
cs
adc
mov
inc
xor
pop
mull
stc
scas
cmp
jmp
cmc
or
fnstenv
mov
xor
pop
js
outsb
jle
pop
rclb
cmpsb
mov
push
in
mov
enter
mov
jp
call
out
test
mov
mov
or
dec
mov
cmp
test
loope
lea
push
imul
cmp
pop
repnz
push
mov
cli
cltd
mov
jecxz
mov
jnp
hlt
add
fdivrl
and
inc
repnz
or
cltd
adc
sub
pushf
push
sbb
xor
loopne
cmp
hlt
ret
sub
jbe
mov
lock
lods
xor
mov
xor
pop
cmpsl
push
stc
and
daa
xor
jne
jo
xor
movsl
lret
push
test
je
sahf
sbb
iret
xchg
pop
out
mov
cli
test
shl
cltd
add
adc
stc
xor
loopne
inc
iret
xchg
ret
sbb
and
outsb
je
int3
pop
jp
rclb
xchg
mov
out
lahf
sbb
cmp
loop
sub
call
loop
cmc
adc
je
repz
in
xorb
lds
cs
mov
out
insb
aas
dec
fwait
inc
imul
test
adc
push
fistl
or
jno
div
std
in
mov
test
xchg
mov
mov
outsb
cmp
and
rolb
push
or
push
and
and
xchg
movsl
push
movsb
xchg
int
sub
sahf
pop
cld
lret
sbb
xor
push
mov
dec
cld
mov
cwtl
into
mov
xor
idivb
push
das
cmp
lea
test
pop
mov
push
mov
add
enter
dec
lcall
in
gs
sbb
and
or
andb
sub
je
jbe,pn
scas
outsl
ret
xchg
out
mov
push
cmpsl
add
jp
jle
mov
mov
std
js
jno
mov
test
rcr
adc
enter
and
mov
pop
xor
gs
push
mov
dec
movsl
and
sbb
sub
int
add
fwait
or
loopne
xchg
dec
test
push
gs
jg
call
xchg
xor
es
sub
pop
aam
add
rcrl
cltd
sbb
dec
sahf
test
adc
add
icebp
out
fcoms
cmp
and
mov
aas
aaa
arpl
pop
das
int
cmpsl
subl
or
mov
cld
in
sbb
sub
push
fildll
mov
sbb
jg
fildl
stc
cmp
mul
aaa
lretw
adc
lods
clc
inc
insl
mov
outsb
aaa
and
xchg
ret
nop
jmp
stos
push
push
orl
and
xchg
popl
mov
incl
add
clc
inc
enter
sarb
mov
cmpsl
dec
mov
mov
jnp
jns
ja
or
aas
scas
mov
adc
xchg
not
adc
cmp
test
cld
xor
icebp
mov
mov
rcrb
fsubrs
mov
insl
iret
pop
xchg
xor
lcall
mov
rorb
xchg
xchg
add
fstpt
push
mov
es
jae
sub
sbb
xor
fstps
dec
add
or
sub
into
or
call
push
inc
test
push
popf
aaa
lahf
cmpsl
negb
rol
outsl
sahf
scas
pop
inc
cmp
rol
enter
mov
insl
adc
pop
xchg
pop
jo
lahf
inc
es
sbb
xchg
fwait
inc
daa
and
mov
push
push
into
lock
inc
jl
out
or
mov
push
aaa
pop
push
cpuid
push
jecxz
dec
loope
xor
fcom
push
mov
mov
cmc
adc
xchg
cli
sti
push
shrb
adc
outsb
int3
dec
addr16
stos
dec
sub
jbe
jmp
mov
add
mov
adc
sbb
cli
mov
xor
fnsave
pushf
imul
cmpsl
jno
fsub
std
jae
pop
sti
in
push
push
or
and
pop
aaa
xor
sbb
enter
xor
push
push
sbbl
dec
arpl
dec
movsb
add
mov
add
lcall
cmp
loopne
xorb
mov
mov
ds
adc
out
outsb
and
shll
icebp
mov
cld
xchg
push
movsb
bound
push
into
push
dec
loopne
inc
pop
sbb
mov
mov
mov
xor
cmp
xor
outsb
cli
push
cltd
sub
aad
fsubrl
pop
or
lock
mov
jns
movsl
mov
stc
and
jo
leave
push
outsb
in
mov
outsb
mov
push
stc
ret
xchg
mov
add
pop
js
popf
cmc
jno
testb
pop
mov
test
in
cmp
into
mov
mov
out
call
int3
sub
mov
fisttpll
sahf
je
add
pushf
lcall
out
sarl
subb
mov
push
ror
mov
add
mov
push
sarb
xchg
xchg
mov
mov
dec
out
gs
dec
add
pop
pop
cmp
das
cmp
cmp
jno
sahf
ret
iret
xchg
arpl
sub
sbb
push
in
push
cmp
jecxz
lahf
iret
sub
push
in
in
gs
lea
push
testl
cmp
negb
arpl
sub
dec
sub
das
insb
push
imul
lret
inc
add
rorb
sbb
pop
fptan
movsl
xchg
ret
and
xchg
or
aaa
out
fs
sbb
ljmp
mov
popa
ret
jns
fisubrs
int3
pusha
or
push
and
jns
or
adc
cli
sbb
dec
and
add
fiaddl
add
mov
jmp
mov
out
adc
xchg
adc
leave
pop
mov
jge
mov
loopne
imul
cmp
inc
imul
push
dec
and
mov
popf
js
shll
test
push
push
cmc
sbb
cmp
inc
mov
sbb
sbb
jbe
cmp
fidivl
aad
cmp
ret
test
test
cmp
sub
inc
out
aas
push
mov
out
push
std
loopne
repnz
fdivrl
clc
stc
cmp
aad
xchg
imul
push
sbb
mov
fsubrl
pusha
xor
jmp
dec
xor
mov
fld
pop
add
xchg
loope
loopew
lock
push
cltd
movb
cmp
jae
ret
or
sahf
jae
in
xor
push
dec
or
addb
xlat
mov
ret
lds
xchg
outsl
enter
and
cmp
loopne
outsb
inc
cmp
add
loop
sub
mov
pop
int
lea
push
add
int3
les
in
daa
sbb
xchg
xor
dec
lods
jo
test
mov
or
scas
adc
cltd
inc
es
roll
je
xchg
int3
pop
ljmp
mov
push
xchg
fisubl
sbb
xchg
jmp
mov
or
repz
lcall
ds
mov
xchg
out
xchg
je
fmul
xchg
idivb
add
and
jbe
cmc
adc
call
leave
cmp
mov
test
sbb
sar
sub
mov
jmp
lcall
cmp
je
rolb
leave
sub
pop
pop
dec
movsl
scas
out
pop
mov
sub
push
cmpsb
or
dec
clc
mov
pop
int3
cwtl
mov
jg
cwtl
sbb
imul
inc
pop
cli
jbe
ret
mov
or
cli
jp
into
movsb
clc
lcall
scas
std
popa
nop
xchg
xchg
xlat
mov
jo
pop
test
pop
xlat
jle
push
jae
fs
mov
sahf
mov
orl
jne
insl
ret
dec
dec
bound
push
filds
dec
mov
roll
neg
inc
pop
das
mov
mov
and
jns
iret
xchg
inc
ret
xor
xor
sbb
mov
cmp
mov
call
adc
or
mov
daa
xor
and
fldl
bswap
mov
mov
in
lods
mov
jecxz
lahf
fs
nop
xor
mov
jo
scas
dec
aaa
jno
shrb
inc
lcall
negl
or
xor
repnz
mov
jns
xchg
push
xor
dec
push
inc
loopne
sbb
lods
repz
stc
adc
ret
in
xchg
pusha
inc
xor
mov
xor
pop
sbb
add
lods
lahf
sbb
ja
insb
mov
add
mov
adc
adc
daa
lock
sub
les
popl
leave
jge
jge
mov
cli
mov
rcrl
push
insl
sbb
inc
xor
mov
xchg
clc
iret
mov
jmp
fldz
out
pusha
sub
inc
andl
push
mov
insl
shlb
push
outsl
dec
fldl
xchg
lcall
fidivl
inc
lock
or
push
icebp
push
xchg
xchg
jge
jg
add
xchg
call
sbbb
or
dec
test
ljmp
shlb
es
jp
pop
in
mov
xor
adc
adc
loopne
dec
sbb
add
dec
mov
mov
push
push
push
into
jnp
lret
xchg
sbb
div
push
movsl
flds
loop
or
jmp
mov
xor
sti
enter
mov
dec
xor
jge
int
adc
pop
bound
add
mov
xor
pop
adc
sbb
jmp
jecxz
insb
mov
sbb
jecxz
fucomi
xchg
xchg
out
sbb
xchg
mov
mov
push
push
clc
loopne
pop
jne
shrl
sbb
fadds
mov
dec
and
fmulp
or
sub
xorb
mov
sti
dec
arpl
dec
or
fisubl
imul
mov
mov
add
in
leave
add
repnz
pop
pop
insl
popf
dec
mov
add
jo
pop
fdivp
push
mov
leave
mov
aad
push
inc
shrl
push
je
lret
and
mov
xchg
popa
mov
pop
dec
in
mov
sub
les
mov
call
jns
add
test
push
dec
xor
mov
sbb
and
pop
in
push
jnp
fstp
scas
adc
hlt
or
mov
shrl
mov
mov
mov
or
insb
test
sub
jecxz
stc
inc
xor
ss
add
xchg
or
in
mov
or
cmp
loope
dec
outsl
fsubp
sbb
leave
mov
dec
and
mov
shr
lcall
sub
int
dec
push
push
jg
divl
pop
lods
inc
lods
lea
push
lret
test
jb
orb
bnd
mov
sbb
pop
add
mov
jle
scas
gs
or
xchg
aam
in
shll
sti
in
iret
arpl
leave
push
xchg
enter
jmp
xor
ret
adc
pop
ds
inc
pop
out
xchg
jo
out
in
push
repnz
adc
cmp
and
push
pop
mov
orl
cld
popf
cltd
movsb
aad
ss
pop
out
push
ret
int
mov
hlt
xor
fidivrl
shrl
test
xor
lret
in
aad
cmpsb
xchg
push
mov
iret
mov
loope
inc
mov
rcrl
les
fs
mov
or
adc
jg
pushf
ds
loope
cmp
shll
mov
pop
dec
dec
mov
repnz
addr16
sarb
jns
adc
shrb
clc
aad
movb
cmpsl
das
push
into
mov
sbb
je
dec
dec
shl
mov
mov
mov
mov
in
inc
dec
or
add
rcr
push
stos
sbb
push
xchg
xor
repz
test
iret
mov
jno
sub
scas
sub
adc
jmp
push
ja
cmp
flds
push
jl
mov
mov
out
jne
xor
imul
sub
fwait
add
scas
leave
into
shll
stos
ret
in
aam
and
fdivs
clc
push
xor
push
dec
cwtl
mov
dec
pop
xchg
jno
fldenv
mov
fildl
aas
arpl
jg
or
add
dec
xchg
jne
add
ss
rep
xorb
push
ljmp
mov
adc
mov
pop
fisubs
xor
xor
rorb
ds
aaa
lock
cmp
fwait
cmp
ja
add
in
xorl
mov
fnstcw
repz
mov
int
stc
push
in
into
mov
shll
in
fstps
add
inc
out
cltd
or
enter
or
jae
dec
sbb
dec
mov
addr16
or
add
or
xchg
aas
and
lret
xor
sub
sbb
aas
popf
addr16
cmp
imul
in
fidivs
adc
xor
cmp
sub
adc
enter
sbb
jmp
xor
inc
shll
std
pop
inc
clc
aad
sub
dec
repz
cmpsb
jb
add
clc
inc
and
sub
hlt
ljmp
lds
ljmp
mov
cmp
xlat
jb
inc
cmpsb
dec
push
sub
les
dec
dec
lcall
add
stc
dec
xchg
aas
mov
adc
jle
xchg
inc
andb
loope
sub
push
pop
add
xchg
sbb
cmpsl
mov
mov
cmc
test
repz
clc
xchg
pop
mov
outsb
sub
dec
mov
or
fcom
inc
repz
imul
xchg
xchg
mov
fstpl
mov
sbb
test
mov
dec
xor
push
loopne
lock
not
rolb
add
mov
test
lods
jmp
cmpsb
dec
cmp
ljmp
jle
sbb
es
jle
arpl
and
fwait
lods
and
sub
pop
stos
scas
jnp
scas
dec
popf
in
sbb
cli
or
js
dec
xchg
out
inc
jb
dec
lods
mov
mov
mov
jnp
ss
stos
shll
xchg
outsl
mov
test
or
popa
xchg
mov
test
mov
jo
iret
inc
aas
dec
sub
cwtl
dec
aad
iret
int3
inc
mov
xor
das
scas
out
xor
mov
ljmp
aas
cwtl
add
push
mov
test
lret
pop
test
jmp
sbb
pop
mov
dec
mov
scas
pop
test
cmpl
and
add
add
shll
adc
je
fisttps
rcrb
push
cld
das
js
and
dec
and
xor
adc
pusha
dec
jge
dec
icebp
movsb
into
pop
dec
js
shll
fisttpl
scas
xchg
dec
movsl
xor
outsb
test
sbb
rcr
mov
test
in
mov
xchg
gs
shlb
icebp
hlt
push
mov
test
xor
sbb
or
adc
sar
dec
sub
roll
sbb
dec
cmp
dec
cmp
std
mov
stos
inc
push
cwtl
aad
fidivs
xorl
sbb
dec
mov
and
stc
sbb
outsb
sbb
pop
int3
jae
mov
mov
sub
jecxz
or
and
push
push
imul
rcrl
fbld
pop
clc
sti
js
std
cmpsl
cmpsl
mov
gs
jns
scas
lahf
mov
out
pop
fdivrl
ds
dec
push
mov
and
add
add
aam
xor
sti
jecxz
push
aad
std
rcr
shrl
jns
pop
in
fdivrl
or
sub
add
stos
gs
cmp
test
mov
add
shlb
ljmp
dec
call
inc
adc
xlat
cmc
adc
lret
dec
xchg
stc
xor
push
test
xchg
inc
arpl
jle
outsl
inc
dec
pushf
imul
and
sub
dec
icebp
add
dec
lock
pushf
pmuludq
push
icebp
add
mov
mov
mov
in
inc
cwtl
jp
or
push
ss
out
rcr
leave
fdivr
fsubrl
jb
cltd
fs
or
das
push
xor
dec
aas
jno
xchg
sbb
add
xchg
add
mov
sub
inc
push
cmpsb
cmp
cmc
enter
xchg
push
push
or
push
pop
jl
jecxz
dec
ss
loopne
imul
mov
inc
rcll
add
leave
rcll
xor
and
mov
scas
inc
or
stos
cltd
dec
insb
sti
push
stos
pop
and
fwait
push
inc
add
shlb
xchg
jb
lods
insl
mov
mov
inc
dec
mov
icebp
bound
in
movb
xchg
dec
adc
sbb
jmp
adcl
inc
and
dec
dec
in
mov
xchg
test
push
lret
ds
das
add
mov
call
sbbl
mov
cli
sti
js
add
inc
push
test
ljmp
fiaddl
sub
scas
add
mov
xchg
jne
fstps
push
pop
jno
mov
icebp
in
inc
xor
enter
xchg
sbb
xor
arpl
push
add
bound
dec
jae
in
icebp
jne
test
mov
xor
jge
xorb
sbbl
outsb
mov
jae
jnp
shll
sahf
add
std
and
sbb
inc
xchg
sub
cmp
push
cmp
sbb
ret
push
pop
aad
pop
js
mov
dec
xchg
sub
xor
fisubs
xchg
inc
or
sbb
fisubl
shrb
push
lcall
xor
adc
js
lea
cmp
sub
mov
nop
insl
loop
dec
mov
push
repnz
pop
shlb
out
push
xor
pop
testb
mov
push
pop
fmulp
outsb
mov
out
sbb
rolb
fistpl
in
adc
sbb
mov
cmpsb
scas
decl
pop
sbb
push
mov
xor
sbb
or
ja
lcall
inc
jge
ret
cmp
cltd
aad
imul
movl
mov
xchg
mov
shr
out
leave
out
fwait
jmp
pop
enter
lcall
adc
push
psraw
pop
lock
adc
mov
in
push
xor
movsb
mov
loop
and
mov
mov
jg
and
popl
in
out
xchg
push
mov
dec
mov
push
or
rclb
mov
adcl
lret
mov
push
inc
add
adc
adc
pushf
lods
xchg
int3
xor
adc
cmp
pop
mov
or
mov
scas
xchg
xor
add
cmp
dec
xlat
jmp
adc
mov
adcl
ret
add
lods
fwait
sbb
fsubl
mov
cld
jae
pop
xchg
scas
int
push
pop
push
testl
fidivl
cmovae
daa
push
jecxz
push
push
mov
dec
roll
jnp
std
push
ds
xchg
incl
lea
mov
test
andl
cltd
mov
jnp
sbb
xchg
in
addb
jp
stos
jns
mov
mov
xorl
dec
or
lea
cld
fs
enter
hlt
jno
test
std
inc
inc
xor
jg
mov
jl
arpl
popa
and
xor
pusha
repz
jl
mov
scas
sub
cmp
jo
data16
fldenv
fnstenv
push
sbb
mov
mull
and
loop
iret
pop
sub
out
and
in
icebp
adc
je
cmp
mov
daa
xchg
sbbb
push
cmp
lret
stc
fcoms
mov
repnz
mov
pop
leave
push
sub
lcall
jle
je
add
add
push
aam
mov
rcrl
jecxz
movsb
std
mov
test
sub
jmp
jb
je
xor
out
add
sahf
jle
mov
imul
incb
popf
mov
push
push
adc
sub
mov
hlt
dec
enter
add
lahf
and
mov
loope
inc
je
pusha
inc
jb
dec
mov
int
pushf
mov
xchg
pop
inc
ret
add
adc
fimull
sub
mov
xchg
movsb
arpl
movsb
cmp
movsb
xchg
sbb
xchg
fnstenv
sbb
fwait
mov
out
insl
or
popa
repz
into
push
push
cmp
ret
adc
ret
dec
jns
bound
inc
inc
dec
jae
inc
lods
fwait
mov
xor
test
rol
loopne
jbe
cmp
enter
pushf
mov
adc
add
cmpsb
adc
sub
pushl
sub
movsb
test
pushf
mov
aaa
out
mov
js
xlat
fs
lods
xchg
outsb
add
jo
jnp
sub
in
mov
pop
test
stos
add
pop
fwait
mov
fbstp
lods
xchg
outsl
mov
outsl
xor
adc
pop
inc
xchg
pop
pushf
popf
push
dec
rorl
mov
add
or
adc
cli
and
cmp
add
ja
lret
mov
and
lods
mov
dec
cmpsl
mov
pop
int
lcall
dec
dec
inc
movsb
sbb
in
cltd
pop
dec
xorl
xor
sub
xor
mov
sbb
and
xchg
sbb
push
rcrl
mov
xchg
add
rcrb
out
shlb
pop
and
bound
mov
xchg
fisubrl
repz
mov
mov
imul
dec
stos
sub
mov
aam
enter
cmp
out
fisttps
lea
xchg
jle
insb
mov
dec
pop
pushf
cmpsb
lods
mov
in
mov
pop
imul
dec
sbb
or
test
std
ret
mov
adc
sub
mov
pop
leave
shrb
fimuls
stos
aam
roll
rcl
dec
popf
int3
inc
stos
xor
mov
gs
in
dec
or
mov
inc
fsubrl
sub
sub
xchg
jecxz
jno
adcb
jns
lds
fisttps
xor
in
add
imull
mov
shlb
rorb
es
pushf
out
rorl
sub
push
lods
pusha
cld
xor
test
imul
pop
add
aam
push
pop
out
and
pushf
sub
mov
fcmovnu
das
push
cmp
cwtl
aaa
fldt
push
divl
add
jne
pop
scas
push
xor
popa
daa
clc
fcmovbe
es
and
enter
movl
lds
jge
negl
jl
mov
sub
divl
icebp
jp
push
add
sbb
inc
mov
push
pop
lret
mov
xor
ficoml
cmpl
cli
sti
fsubs
xor
push
mov
mov
sti
or
push
adc
jb
xor
add
inc
subb
mov
xorl
or
dec
jae
into
sub
ret
mov
pop
inc
pop
mov
jo
out
outsb
mov
add
movsl
jecxz
cltd
or
aas
adc
aaa
xor
adcb
xchg
mov
push
and
cmp
mull
sti
cmp
int3
inc
repnz
xadd
mov
xor
push
push
push
dec
pop
push
in
pusha
js
mov
fidivrl
inc
adc
add
mov
lret
push
inc
jo
movsl
push
jno
or
clc
dec
int
lss
shlb
inc
cmc
sub
sbb
add
jl
incb
int
in
and
sbb
lds
loope
pop
aas
pusha
out
inc
test
mov
daa
dec
out
fpatan
sbb
dec
pop
sub
jbe
iret
xchg
push
rcrb
xchg
cmp
inc
ljmp
adc
xchg
cltd
adc
lds
lds
sahf
push
fsubrs
mov
mov
push
pushf
jb
hlt
je
mov
and
push
mov
cmp
pop
fsin
dec
or
mov
jl
ret
pop
in
adc
inc
push
aaa
sbb
in
mov
cmp
xchg
shrb
xor
lea
stos
xlat
rol
daa
cli
cmp
test
sbb
imul
push
dec
notb
jge
sbb
xchg
gs
filds
xchg
push
aad
arpl
jl
push
mov
inc
xchg
dec
adc
jmp
inc
inc
punpcklwd
jle
jae
mov
test
jb
xrelease
ret
push
rolb
rcrl
int3
aam
xlat
lods
rorb
subb
adc
xchg
scas
movsb
mov
fsubrp
addr16
mov
inc
shlb
int
jno
imul
leave
inc
mov
std
js
mov
push
cmp
bound
inc
push
add
out
mov
mov
ja
pop
popf
shl
inc
mov
loopne
dec
sbb
dec
loop
xor
pop
or
rcll
shlb
pop
or
and
pop
mov
inc
bound
les
adc
out
mov
cwtl
gs
mov
repnz
movsb
into
push
sbb
pusha
movsb
addl
and
movsb
jb
pop
cs
lret
in
aad
outsb
loop
imul
loope
hlt
daa
mov
sub
push
stc
lcall
xor
jle
inc
or
mov
dec
or
int3
pusha
inc
or
sbb
cs
stos
gs
add
aaa
dec
add
push
pop
sarl
outsl
popf
lcall
jp
mov
xor
iret
inc
cmp
cmp
sub
scas
cmp
xor
jb
push
inc
mov
adc
cmp
icebp
leave
lds
pop
pop
xchg
nop
jae
test
sub
adc
popa
aam
jno
push
loope
sub
lret
push
pop
mov
add
ret
and
mov
xor
pop
xchg
les
insl
mov
fnstsw
inc
cwtl
aad
cmp
jae
stc
nop
cmp
adc
mov
lods
adc
ret
fldcw
push
insb
mov
fsubrs
outsb
dec
or
pop
mov
addb
movsb
jg
and
push
pop
cmc
push
pop
stos
cmp
aas
add
push
jno
popl
insb
jo
sbb
cltd
stos
jmp
popa
lret
xchg
stc
mov
cli
pop
and
stos
mov
jns
mov
xor
test
and
adc
in
jo
xchg
pop
lret
push
pop
or
inc
xchg
inc
mov
jns
int
pop
test
popf
dec
fsts
cmpsl
jle
jmp
dec
inc
or
mov
mov
jecxz
lock
aaa
xchg
xor
jmp
fucompp
lock
xor
mov
addr16
cmpsb
sbb
inc
add
mov
mov
sub
xor
imul
loop
rcrl
movsb
cmp
jge
lock
imulb
xchg
bound
jmp
subl
xchg
cmpsl
pop
cmp
cwtl
outsb
xor
cld
call
add
dec
lahf
faddp
mov
mov
faddl
jae
sub
mov
lcall
in
cwtl
test
dec
add
enter
iret
push
xor
nop
jae
dec
inc
and
pop
test
cmpsl
jno
mov
aaa
cltd
cwtl
les
out
and
sahf
les
int3
jmp
arpl
inc
orb
stc
mov
repz
ja
sub
in
clc
push
aas
scas
repnz
sbb
movsl
inc
js
aas
pop
mov
sbb
int
jge
jns
xchg
outsl
jno
rcll
mov
pop
cmp
insb
mov
xchg
out
arpl
sti
fisubrs
inc
imul
and
and
inc
adc
adcl
jno
int3
pop
and
mov
jp
std
hlt
pop
jb
push
loopne
inc
dec
push
idivb
ljmp
test
adc
hlt
ja
xchg
mov
fcomps
push
aas
adc
popf
dec
xor
pop
in
mov
icebp
outsb
aad
ret
xor
rclb
xor
pop
in
cmpl
mov
mov
adc
xchg
and
in
mov
sub
jo
mov
xchg
shlb
int3
mov
xor
inc
xor
lcall
daa
std
js
jno
out
sub
pop
xor
cld
mov
lret
aaa
repz
aad
mov
add
pushf
jge
int3
and
int
mov
mov
lock
iret
push
xorb
mull
stos
int3
push
or
shll
or
push
popf
cltd
scas
sub
push
pushf
movsl
adc
sbb
jbe
std
jo
bound
into
xor
adc
jge
arpl
mov
aaa
frstor
mov
ss
jp
aas
mov
pop
pop
jp
fdivl
adc
mov
adc
pop
add
gs
out
rcl
mov
push
inc
cmp
leave
xor
dec
dec
mov
int
cld
lret
mov
popa
pusha
pop
les
ss
sub
or
sub
mov
popf
mov
cmp
cmp
sub
fs
push
cmp
into
push
add
sub
jbe
push
cli
pop
pop
sub
mov
adc
xlat
cmp
mov
out
jb
inc
inc
jb
xchg
jmp
inc
outsl
jge
jnp
or
orb
adc
out
rcll
jnp
out
xlat
xchg
jne
inc
aad
jp
arpl
pop
xor
sbb
fsubrl
mov
push
dec
mov
jmp
cmpsl
jle
outsb
dec
daa
push
test
jle
outsb
loope
sbb
int3
movl
call
popa
cmp
sub
sub
and
adcb
sub
sahf
push
sub
jl
lcall
nop
and
xor
mov
mov
out
std
test
aaa
xor
out
mov
mov
nop
push
outsl
push
xlat
xor
sub
in
and
call
jecxz
div
and
adc
pop
sbb
les
aad
test
push
jle
in
inc
scas
ficoms
xchg
push
repz
fdiv
lcall
jmp
cmpl
sbb
cmp
inc
lret
movsl
rcll
xchg
ljmp
or
lods
popf
cmp
out
loopne
adc
dec
out
jmp
imul
mov
pop
sub
or
fadd
sbb
fwait
movb
gs
sbb
nop
iret
cmc
adc
sbb
jecxz
mull
mov
lcall
adc
lock
sub
jb
pop
xor
xchg
call
repnz
cmp
cmp
addr16
xor
xorl
dec
adc
mov
push
test
cmp
aaa
aam
jl
insb
out
mov
cmpsl
xchg
sub
in
xchg
push
push
sbb
add
into
or
and
mov
jnp
push
add
add
sbb
inc
cmc
adc
test
pusha
xchg
leave
or
add
mov
shll
push
mov
cli
and
jo
xor
xor
xorl
test
test
mov
xchg
out
inc
les
mov
cmp
sti
cmp
mov
jae
jb,pn
or
xor
pop
iret
xchg
pop
out
out
inc
mov
repz
mov
mov
push
fsubp
jmp
mov
xor
lcall
ret
mov
sub
in
cmp
fbld
jb
pusha
sbb
mov
jno
cwtl
hlt
dec
xchg
jbe
push
sub
push
in
jno
outsl
in
out
mov
nop
in
or
call
push
les
addr16
adc
test
push
inc
dec
int3
jl
addr16
jmp
in
aaa
lea
pop
adc
push
xor
ljmp
mov
cmpsl
rol
mov
shr
sbb
xchg
dec
shll
lods
mov
popf
pop
xor
rcrb
in
add
pop
push
push
dec
fwait
pop
mov
pop
xchg
sub
lahf
sar
jmp
push
rol
mov
adc
pop
pextrw
adc
pop
lret
iret
hlt
std
cmp
aam
andl
aad
pop
cmpsl
mov
pop
test
aam
xchg
dec
or
pop
xchg
lds
out
jecxz
imul
push
fldl
ret
xor
mov
and
cmc
cmp
repz
xchg
ljmp
ret
dec
xor
mov
pusha
std
sub
jo
in
or
and
aam
shlb
adc
ja
push
mov
cmp
xchg
ret
push
xor
cmp
sbb
sti
push
movsl
fdivrp
xchg
dec
iret
lds
cmpsb
push
aad
mov
add
cmc
cmc
jns
xor
loop
xchg
cmp
add
pushf
cs
push
clc
aas
pop
sbb
adc
dec
imull
into
enter
loopne
sub
pop
cmc
adc
fidivs
lds
fstl
in
test
pop
in
pop
cltd
addr16
mov
cmp
sbb
adc
cmpsb
fcomip
and
leave
inc
mov
xor
testb
fistpl
dec
nop
outsb
gs
popa
pushf
sub
cmp
cwtl
and
xchg
cld
adc
pushaw
xchg
add
dec
mov
cmpl
lods
aam
pusha
incb
sub
and
mull
adc
and
repnz
and
fstpt
push
jb
push
mov
popf
mov
cmc
scas
xchg
add
loope
push
xor
jl
inc
loop
mov
pop
popa
call
dec
pop
dec
push
jge
jecxz
inc
fwait
pop
mov
jl
adc
insb
mov
mov
pop
mov
cmp
daa
push
or
leave
test
das
jp
pop
mov
insl
dec
add
js
lea
dec
push
fimuls
mov
das
mov
fs
arpl
jg
inc
sbb
xorl
pop
cs
push
jo
or
test
sub
lret
jae
in
in
subl
adc
subl
scas
push
subb
and
and
imul
mov
in
mov
sub
pop
es
pushf
stos
xor
lcall
jnp
outsl
aam
pop
cltd
fs
outsl
cmp
push
mov
mov
cmp
add
or
jno
mov
ret
test
not
test
bound
cmpsl
jne
imul
pop
sbb
mov
pop
mov
jl
test
scas
or
rorl
pop
imul
adc
fsubr
clc
jno
lret
incl
inc
outsl
std
hlt
stos
inc
and
sbb
add
test
inc
xor
xchg
jle
jnp
xlat
push
mov
push
es
xchg
lcall
loope
xchg
sbb
test
hlt
loopne
xchg
rorb
lahf
lods
cltd
xor
fwait
jne
sub
jno
inc
mov
repnz
lret
fnstcw
ljmp
jp
pushf
mov
dec
xlat
push
insl
cmp
es
add
cld
xor
mov
xor
or
sub
cmpsl
rcr
jb
rcr
imul
push
into
or
cmpb
ret
dec
pop
les
dec
pop
push
adc
xor
adc
jns
jecxz
das
push
xchg
lahf
popa
push
pop
add
inc
jmp
push
and
mov
jns
sbb
mov
insl
jge
push
lret
cmpsl
shlb
cmc
leave
jmp
aas
lock
mov
pop
xchg
popf
dec
dec
adc
push
pop
out
imul
test
ljmp
pop
pushf
push
jbe
push
add
add
adc
lods
leave
lea
mov
loop
mov
mov
or
iret
xor
jle
push
xor
pop
push
lcall
cmp
dec
jge
xchg
push
arpl
out
pop
adc
adc
push
out
stos
mov
push
bound
stos
and
dec
fimull
movb
mov
ret
sub
pop
push
inc
push
daa
addr16
lea
push
xchg
outsb
cmp
sub
push
sbbb
shrl
inc
iret
push
shrb
sbb
cmp
sub
in
pop
xchg
pop
or
fstpt
fsubs
paddb
pushf
in
ret
adc
ret
icebp
pop
rclb
in
aad
push
pop
shrl
xor
adc
mov
repz
in
xor
mov
lods
mov
xchg
add
inc
push
rolb
or
cmp
xchg
cmp
das
jl
fiadds
xchg
int3
sbb
fs
fstpt
call
test
xor
jecxz
lret
inc
inc
aad
push
mov
movsl
mov
in
lods
or
cmp
mov
cld
out
mov
push
movsb
cmp
jno
or
sarb
inc
xchg
mull
and
lret
dec
adc
mov
add
dec
orl
xor
je
or
jno
inc
and
mov
sahf
pop
jg
roll
jle
xchg
inc
cmp
out
mov
push
out
jns
cmp
xchg
enter
cmp
sub
mov
sbb
ror
test
mov
clc
add
inc
sbb
dec
or
mov
popf
ja
dec
in
icebp
cwtl
sbb
pop
leave
and
mov
or
je
lods
insb
or
subb
in
push
out
out
add
bt
movsl
jmp
xchg
mov
inc
aas
rorb
cmc
repnz
inc
sbb
cltd
sub
fdivs
pop
inc
mov
jl
stc
filds
movsb
mov
cmpsl
add
fsub
sub
jnp
out
pop
cwtl
mov
cmp
mov
mov
mov
pushf
pop
mov
inc
aam
mov
xor
jbe
insb
nop
test
outsl
arpl
pop
fsubs
in
mov
push
fistl
cmp
aas
out
cmp
ret
add
xchg
jb
xor
cmp
dec
add
andl
or
aad
or
cmp
xlat
sahf
jno
call
xchg
pop
lods
test
sub
cli
ret
jnp
enter
jmp
insb
and
jb
xor
movsl
enter
je
fmul
pop
sti
fs
xchg
mov
into
cmp
inc
xor
movsl
sbb
pop
loope
orb
mov
pushl
shll
dec
pop
sbb
cld
int
dec
xor
mov
xchg
lock
mov
imul
xor
mov
and
out
fucomp
and
fwait
mov
or
or
js
in
into
push
ret
mov
fdivrl
test
imul
in
sahf
inc
fmull
xor
jo
push
shlb
lahf
mov
jmp
inc
add
jo
adc
stos
rcll
add
jae
inc
sbb
mov
out
ljmp
call
add
lahf
loop
or
xchg
mov
ficoml
mov
jp
push
mov
sub
cmp
movsb
std
imul
sub
adc
lea
lret
pop
inc
fdivrp
jbe
xchg
lret
xor
inc
aas
mov
fdiv
je
fwait
add
je
mov
ss
fdivrl
cmp
cmp
pop
stos
js
cmp
push
mov
lock
mov
xchg
out
mov
push
cmpsb
jge
add
aad
jl
loope
sub
fiaddl
jo
les
xchg
outsb
cmp
sub
out
fnstcw
stos
or
stc
jne
push
jb
mov
cwtl
daa
adc
fwait
lret
or
gs
add
xchg
adc
cmp
lret
mov
jg
pop
xchg
add
sub
adc
inc
sub
or
inc
pushf
sbb
add
ja
jg
jecxz
popf
inc
jg
dec
inc
aam
pop
ret
adc
icebp
pop
sub
pushl
add
fcmove
xor
mov
jae
cmp
pop
imul
ljmp
sbb
or
je
fwait
dec
in
mov
pop
add
inc
test
pop
add
xchg
out
orb
gs
sarl
mov
inc
shlb
or
std
and
add
int3
pop
dec
push
dec
fwait
pop
out
mov
test
or
pop
imul
sbb
clc
int
or
into
add
repz
fldt
jmp
pop
xor
jecxz
jo
iret
xor
pop
xor
xchg
push
jbe
adc
mov
and
mov
rclb
push
into
push
fcmovnbe
and
xchg
clc
shlb
cmp
push
pop
out
pop
ss
fwait
or
xchg
sbb
or
jecxz
sahf
mov
std
cmp
dec
xchg
aaa
inc
add
addl
mov
xlat
or
leave
mov
cmp
sbb
shl
mov
pop
xchg
xor
add
aas
jmp
adc
out
es
sti
ret
icebp
arpl
ds
mov
nop
out
cld
jo
push
adc
loopne
test
movsb
inc
pop
movsl
mov
mov
arpl
dec
adc
movl
mov
sbb
popf
shrb
sbb
fimuls
call
adc
cmp
push
lret
into
int3
jle
pop
pop
cwtl
rclb
mov
imulb
mov
mov
cmp
or
push
in
test
repz
mov
stos
xlat
cwtl
push
xchg
aad
arpl
xchg
shll
pop
rolb
mov
js
or
push
jge
adc
cmpsl
push
out
insb
or
and
and
lret
icebp
mov
into
das
xor
push
das
adc
insb
outsb
leave
ljmp
or
fistpll
xor
in
je
orb
lret
and
lahf
jg
xchg
nop
stos
js
xchg
sbb
mov
test
and
ja
cwtl
add
filds
pop
pusha
ljmp
jnp
hlt
call
jle
cmp
shrl
pop
mov
incb
cmpsb
inc
jecxz
jmp
pop
mov
adc
popa
enter
sbb
mov
jae
frstor
outsb
fdivrp
pop
jmp
clc
mov
js
lfs
jle
sub
cmp
cmc
push
vdivpd
sti
int3
rorw
clc
jns
daa
hlt
in
mov
add
out
jle
adc
xchg
mov
shrl
pusha
push
xor
cmp
push
sbbl
adc
xchg
in
mov
test
out
sahf
dec
stos
test
cld
movb
loop
xchg
rcl
in
jl
iret
mov
xor
into
xchg
xchg
insl
jge
jg
sbb
inc
nop
xchg
pop
pop
and
adc
adc
or
lods
dec
jne
sbb
fiadds
sbb
leave
jo
cld
shr
cmc
ret
ja
pop
cmp
sbb
xchg
leave
xchg
inc
in
pushf
in
lahf
cld
pop
imul
testb
pop
push
popa
imul
cmp
or
sbb
lret
or
movsb
loop
xor
les
mov
inc
add
daa
or
addl
loop
sbb
loopne
pop
cltd
sub
lret
ja
test
sarl
push
fwait
orb
rorl
test
jg
mov
mov
cmp
aad
div
xor
push
mov
jl
ror
adc
adc
lds
out
pop
and
enter
jns
cli
loope
dec
and
cmp
pop
ja
stos
int3
xor
enter
jg
hlt
out
xor
mov
pop
cmpsl
aaa
jg
enter
push
push
gs
movb
add
dec
sub
xchg
jmp
add
inc
add
jp
xchg
adc
or
aas
lret
xchg
es
cmc
or
outsl
mov
cmp
pop
clc
mov
adc
test
nop
pop
push
fwait
int3
jle
xor
popa
xchg
lahf
insl
lea
fadd
out
stc
fdiv
clc
dec
loop
fistpl
cmp
inc
jno
xor
cltd
xchg
inc
loop
sahf
jecxz
sbb
inc
xor
jbe
sbb
xchg
test
push
stc
fdivrl
leave
stos
jge
sbb
repz
dec
sub
mov
pushf
xor
lret
pop
jmp
xchg
addl
iret
dec
cmp
mov
lret
or
lcall
sub
xchg
or
pusha
setge
xchg
nop
mov
jne
lock
push
xlat
fmul
sub
test
or
add
adc
pop
inc
cmp
in
bound
add
xchg
inc
pushf
mov
cmpl
iret
subb
mov
xor
rcrl
mov
push
pop
js
mov
out
lahf
addb
not
je
cltd
int3
cli
clc
and
add
ja
mov
insb
sbb
sub
lock
test
sbb
xor
aas
cmpsb
data16
test
test
adc
cld
mov
push
inc
out
pop
mov
pushf
jp
pop
sbb
push
cmp
mov
pop
ss
dec
sbb
jle
jmp
shll
mov
pop
filds
mov
sub
or
daa
add
mov
xchg
and
cmp
pop
sbb
fidivs
mov
jo
lahf
lods
xchg
cltd
in
dec
cmp
and
sub
sbb
loop
loop
shll
push
inc
loopne
scas
testl
sub
lea
dec
cltd
pop
xorb
nop
mulb
dec
or
popa
ret
add
pop
cld
push
cwtl
lret
test
xor
or
ffree
inc
outsb
test
jb
in
fimull
fimull
dec
aas
add
sbb
scas
iret
cmpsb
movl
cmp
dec
add
and
or
and
repz
mov
add
pop
sbb
dec
cmp
imul
push
jns
sub
mulb
loopne
outsl
add
xor
sbb
dec
and
and
sub
jp
cmpsb
cmpsl
and
icebp
faddl
movsl
outsl
fcomps
aas
push
nop
rcll
iret
xchg
mov
daa
xchg
sar
jle
xchg
inc
sbb
imul
or
or
xchg
mov
push
insl
cmp
std
lahf
mov
mov
pop
push
dec
cmp
hlt
mov
call
popa
adc
xorl
movsl
loop
mov
fwait
cltd
and
adc
mov
pop
mov
lods
in
xor
sbb
or
test
arpl
mov
xor
gs
dec
call
dec
jb
lods
fnstcw
mov
sub
sbbl
inc
insl
mov
addr16
iret
sahf
mov
sub
jns
xchg
cs
inc
xchg
or
daa
outsb
rorl
out
jo
xchg
aas
and
inc
sub
lret
mov
loopne
fs
fistl
jmp
fdivrs
and
sbb
es
pop
pop
movsb
insb
arpl
pushf
inc
push
insb
inc
sbb
movsb
ljmp
cmp
pop
and
rcr
cmp
sbb
inc
das
sub
dec
jmp
outsb
imul
inc
cld
mov
add
addr16
aaa
lock
lcall
lret
mov
sub
cmp
enter
sbb
dec
sahf
cmpsl
cld
jp
insb
xor
daa
sbb
and
testb
outsl
scas
push
jo
icebp
arpl
xchg
sub
outsl
repnz
in
sbb
and
loopne
jmp
icebp
fsts
loope
in
jb
and
adc
xor
xor
test
mov
dec
or
push
push
cmp
inc
hlt
icebp
xchg
push
lahf
outsl
mov
pop
int
addr16
xchg
mov
stos
inc
dec
cmp
aas
add
ds
pushf
push
addr16
iret
filds
jge
inc
cs
call
sahf
mov
in
in
pop
sub
ja
ljmp
cmc
in
fcmovnu
and
scas
adc
fadd
jno
or
and
scas
testb
mov
outsl
in
adc
sahf
test
sub
cmp
aaa
xorb
or
ret
mov
push
mov
xor
mov
movsb
stos
push
jbe
outsl
cmc
cmp
sbbb
push
dec
mov
push
aaa
xlat
mov
sarl
jg
mov
andnps
xchg
ljmp
jne
insl
jne
or
and
ljmp
int
loopne
int
dec
push
mov
mov
pusha
or
sub
orb
mov
call
sarl
jns
adc
cmp
movsb
push
pop
adc
dec
int3
aam
fcom
in
xorl
and
push
je
push
mov
mov
lahf
sub
push
push
xor
pop
das
aad
daa
mov
std
inc
jae
rcll
jb
movsb
testb
or
mov
sub
lret
cmc
bound
xor
push
sbb
andb
mov
xchg
jmp
push
push
outsb
xchg
scas
in
mov
lods
jae
push
push
sub
stos
inc
addr16
rol
add
jns
pop
push
sbb
outsl
dec
xchg
xchg
cmpsl
dec
prefetch
movsl
push
outsl
jno
dec
pop
lods
sbb
ss
cltd
xor
push
dec
sub
sub
adc
sbb
sub
xchg
mov
mov
iret
pcmpgtd
pusha
adc
inc
shl
cmp
adc
jne
mov
push
adc
pusha
push
cwtl
pushf
movsl
inc
inc
inc
cmp
inc
mov
insl
std
push
dec
adc
enter
xor
jmp
fldenv
divl
mov
ljmp
loop
insb
out
xchg
jmp
mov
stos
or
and
and
out
xor
or
dec
testl
sahf
int
testl
ja
mov
mov
xlat
lods
lock
mov
ljmp
into
in
sbb
in
sti
scas
cmp
leave
into
hlt
psubb
push
notb
fsts
add
inc
mov
pop
mov
push
sahf
idivl
fstpl
fidivrs
sar
sahf
in
xchg
jmp
dec
fwait
subl
jb
xor
add
mov
enter
sub
lret
or
mull
jno
hlt
mov
imul
int
mov
out
iret
mov
add
push
enter
push
sub
xor
or
call
shll
lods
out
pop
mov
sbb
cmpsb
add
cmp
adc
fwait
es
lods
mov
scas
xor
leave
nop
rep
and
pop
jne
nop
inc
test
or
cmp
lea
fxch
int
xchg
mov
lcall
fistps
adc
sbb
sub
mov
inc
mov
rol
test
sahf
test
jg
mov
scas
sahf
jo
lea
pop
dec
push
icebp
addr16
and
je
aad
xor
cmp
out
xor
mov
cmpl
stos
cmp
fimuls
adc
cmp
mov
rorl
or
shl
aam
or
outsb
les
mov
dec
dec
adc
les
mov
out
sub
sbb
sub
fs
add
imul
adc
icebp
ss
out
mov
inc
cli
push
dec
push
ja
ds
cwtl
mov
fisubl
xor
lcall
pusha
subl
sbb
cmp
jno
gs
mov
mov
pop
mov
inc
test
inc
fistpl
xlat
mov
insl
aam
mov
xor
pushf
daa
test
push
scas
adc
mov
cmp
push
jb
mov
xchg
mov
cmc
leave
and
ror
fsubp
lds
mov
js
add
dec
lock
scas
cld
lret
mov
adc
addb
int3
popa
mov
mov
mov
xchg
adc
dec
frstor
rdtsc
add
pop
pop
mov
jl
es
sar
mov
mov
fwait
mov
punpckldq
or
enter
mov
in
repz
mov
inc
add
push
scas
push
test
fld1
mov
cmp
xor
inc
dec
jp
inc
std
sub
cmpsb
into
pop
adc
insb
xchg
out
adc
pop
or
adc
pop
imul
mov
mov
mov
icebp
daa
aam
xchg
jecxz
adc
mov
ret
or
popa
sahf
test
fistpl
jle
pop
jle
popf
or
les
fdivp
mov
jmp
or
xchg
or
fcmovne
xor
xor
imul
adc
ret
cmpsb
push
in
imul
ja
mov
or
pop
push
adc
push
fmull
out
xchg
ret
lret
pop
fmul
pusha
push
sbb
mov
into
nop
test
ds
inc
in
scas
rclb
pop
dec
add
loop
and
jns
mov
ss
je
test
push
cmp
pop
xchg
fstl
xchg
repz
fwait
jecxz
movsb
repnz
lea
out
lds
lea
repnz
rcl
sbb
pushf
add
lcall
jle
outsl
testb
int
loope
hlt
push
xchg
jae
mov
loopne
stos
jmp
cmp
sub
pop
je
lea
adc
push
loopne
mov
faddl
in
leave
and
sub
or
cltd
jae
clc
aam
or
loope
in
pusha
dec
js
mov
lret
pushf
mov
scas
xor
push
ss
out
jmp
fsubl
mov
fidivs
outsb
lds
or
jle
sbb
icebp
sub
pop
push
jno
mov
in
xor
mov
imul
daa
lret
out
lods
stos
sbb
popl
fistps
cmpsb
data16
mov
test
and
fisttpl
cs
negl
out
popa
jmp
xlat
lods
jecxz
xchg
and
dec
daa
jb
ljmp
pushf
lcall
cli
push
aaa
fiadds
xchg
shll
xor
push
mov
push
fcomi
out
sub
and
loopne
xchg
pop
adc
pop
ret
xor
sarb
mov
cltd
orb
mov
add
fcomps
pusha
cmp
inc
jae
sub
fnstsw
stc
stc
cwtl
inc
pop
std
sub
test
ret
fbld
and
call
mov
mov
inc
movsb
mov
out
fsubl
xlat
mov
imulb
xchg
xchg
cmovns
mov
adcb
test
out
pop
adc
std
test
xor
leave
xor
aas
decb
push
add
popa
pop
sahf
ds
stc
movsb
notl
outsb
enter
add
shll
shl
dec
leave
push
dec
mov
xchg
pop
add
adc
xchg
jbe
sarb
adc
mov
mov
ficomps
sub
mov
in
add
gs
cli
jle
sahf
mov
mov
and
or
clc
mov
out
jg
inc
cmp
or
ds
mov
lock
in
sub
mov
xor
repnz
xor
mov
rol
inc
sbb
mov
xchg
icebp
pop
inc
mov
sbb
es
or
jle
push
and
bound
out
movsl
scas
dec
insb
dec
sbb
jl
fnstenv
xchg
inc
in
jmp
fs
jae
and
aaa
and
out
insb
ja
lahf
dec
xchg
push
mov
jmp
loop
mov
xchg
inc
loopne
cmpsl
test
or
lret
jne
push
ja
mov
movsb
cmp
out
xor
mov
repz
cmp
mov
mov
sub
hlt
cltd
jbe
aad
sbb
jno
xchg
add
cwtl
fisttps
out
cmpsb
les
adc
pop
dec
lea
pop
pop
sbb
xlat
jb
ds
ret
jmp
insb
rclb
xor
adcb
or
dec
mov
repnz
push
sbb
in
imul
pop
fcompl
insl
mov
inc
fistpll
xchg
loope
mov
subb
pop
mov
jae
xchg
jg
cmp
sbb
mov
inc
loop
adc
mov
sub
or
lret
mov
sbb
std
mov
and
test
or
pop
data16
lahf
lret
lods
dec
stos
xchg
push
pop
jecxz
jo
js
push
repnz
xchg
jge
subl
push
xor
or
adc
jno
mov
xchg
mov
cmp
in
stos
jne
push
loop
xor
mov
scas
pop
add
mov
add
cmp
pop
xchg
cmpsb
pop
andl
jecxz
cmpsl
and
scas
xorl
in
mov
add
testl
in
movsb
loopnew
enter
bound
mov
shl
sbb
mov
pusha
jmp
movsl
aas
dec
pop
add
adc
movsl
mov
jo
aas
mov
iret
fiadds
fbstp
mov
notb
push
fisubrs
or
xor
and
jbe
xchg
pop
rcr
jns
stos
aam
cmp
test
mov
stc
dec
add
fisubl
inc
addr16
aaa
shrl
das
xchg
cltd
push
pop
in
push
sarl
loopne
pop
arpl
jb
xor
js,pn
mov
and
xor
pusha
sbb
mov
loope
pop
and
mov
repz
mov
pusha
stc
out
stos
push
mov
iret
fsubr
mov
fsubl
das
mov
mov
mov
dec
icebp
in
repz
jp
insl
clc
cmc
sarl
add
push
movsb
xor
pop
shlw
jae
xchg
or
pop
or
push
sub
jne
lock
stos
out
xor
mov
mov
xor
nop
pop
lea
dec
mov
jecxz
xlat
jns
test
xorb
stos
add
inc
fistl
sub
fs
es
popa
stos
mov
push
xchg
bound
mov
fs
aam
xchg
jp
mov
inc
inc
adc
jge
fistpll
out
hlt
cli
sbb
in
mov
dec
mulb
inc
push
and
sbb
pop
repz
sbb
sbb
repnz
call
jge
popa
scas
sbb
cmp
push
mov
mov
ficompl
sarl
add
adc
jg
lret
lcall
sub
xchg
mov
push
add
jae
xlat
repz
or
addr16
lock
jecxz
sti
inc
adc
lret
xchg
inc
stos
imul
out
sar
es
or
dec
xchg
mov
enter
inc
push
addr16
rcrb
in
call
hlt
icebp
fimuls
sub
test
sbb
sbb
ss
adc
test
jno
rol
faddl
adc
push
jno
pop
jo
jg
xchg
insb
cmp
dec
lcall
xor
dec
cmp
int3
jmp
jp
rcrl
pop
insl
xchg
sti
jb
mov
xlat
and
popa
push
xchg
fyl2xp1
fisubrl
dec
lret
push
pop
cli
dec
cmp
or
jle
in
lcall
test
mov
and
popa
and
mov
mov
push
adc
cs
push
outsl
jbe
push
arpl
aam
iret
test
mov
es
fnstsw
push
das
lds
mov
addl
lods
mov
out
xor
popa
mov
xor
jnp
mov
dec
push
jo
xlat
and
in
sbb
hlt
mov
xlat
pop
inc
xchg
nop
mov
fwait
add
mov
insl
jg
aam
daa
xor
xchg
jmp
add
mov
add
mov
data16
mov
fs
jno
lods
stos
pop
cmp
sub
and
ja
repnz
cmp
lahf
push
pop
clc
in
neg
dec
sbb
inc
mov
adc
sub
fnsave
dec
dec
sub
rorl
scas
lods
inc
mov
lret
sub
push
fwait
lahf
xor
js
jnp
cmp
jl
test
enter
ljmp
lahf
iret
scas
sbb
inc
add
daa
icebp
sub
arpl
js
out
fcmovbe
inc
and
lret
ds
or
rcrb
push
or
push
push
jmp
test
dec
adc
ljmp
add
test
scas
xchg
stos
sub
xor
cmp
sbb
cli
pop
pop
cmp
lret
sbb
cmp
sbb
and
imul
jp
mov
push
jns
stc
inc
sbb
inc
and
pop
push
cmpsb
fs
inc
stc
add
cmpsb
inc
pop
cld
fstpl
mov
jb
dec
cmp
mov
mov
push
fcompl
adc
dec
jne
jnp
cmc
sarb
cmpsb
jae
loope
cmp
negb
js
xor
xchg
or
cmpsl
idivl
mov
push
sub
push
pop
xchg
int3
xchg
mov
sbb
stos
dec
sub
enter
xor
imul
fucomi
dec
jo
daa
adc
xchg
outsl
into
xchg
mov
jecxz
iret
cli
jge
sti
popf
sub
and
xchg
jb
ds
push
sub
mov
xchg
fsts
pop
mov
mov
inc
push
mov
loopne
enter
inc
or
sbb
jge
lcall
pushf
loop
cli
movsl
add
mov
int
ja
jg
jns
fmull
fistps
iret
cmp
mov
rorb
cmp
inc
mov
test
arpl
dec
sbb
cli
push
ret
mov
xchg
xchg
sub
call
add
outsl
or
andl
and
cmp
outsl
je
push
dec
or
cmc
pusha
cmp
mov
iret
lds
sti
add
jl
cmp
xlat
pop
cli
jge
or
loope
outsb
add
es
es
out
fmuls
adcb
sub
adc
pop
cs
lods
jo
sahf
bound
dec
pop
imul
adc
jnp
mov
mov
sub
pop
xor
and
outsb
or
out
lcall
sbb
xchg
repz
sbb
mov
xorb
iret
mov
add
outsl
pop
mov
jb
jae
ja
xchg
jbe
into
fsubs
mov
ror
jge
xchg
pop
add
lcall
pusha
inc
in
inc
stc
jns
jp
inc
cmc
sti
inc
das
inc
pop
insb
mov
gs
cltd
sbb
mov
jecxz
pop
sbb
stos
pop
sbb
mov
jecxz
mov
jmp
inc
adc
aad
inc
aam
mov
xchg
fyl2x
pop
pop
cmpsb
cmc
cs
aaa
pop
dec
rorl
leave
stc
mov
inc
sub
xchg
insb
push
je
enter
faddp
xor
iret
mov
ss
in
sub
int
addr16
adc
or
mov
pop
mov
mov
fmull
push
loopne
sub
filds
add
jno
subl
sbb
aaa
dec
xchg
jmp
mov
inc
lahf
dec
mov
pop
jge
pushf
repz
mov
jmp
or
out
xor
cmpsb
xchg
dec
jg
scas
dec
sub
dec
xchg
test
rolb
addr16
cmp
mov
cld
jae
popl
cli
popa
lods
xchg
sub
xchg
int3
and
sbbl
push
mov
insb
iret
add
mov
vmread
test
mov
pop
adc
or
jno
fmuls
jbe
ss
xor
cmp
fwait
xchg
jecxz
ds
rolb
and
hlt
xlat
push
or
cmp
add
adc
sbb
dec
sub
fwait
hlt
push
mov
mov
pop
test
dec
sbb
mov
les
aaa
or
jp
adc
mov
mov
mov
dec
xor
adc
fsubrl
lock
adc
cwtl
xor
out
xor
lret
pop
jge
push
sbb
sahf
popa
test
pushf
aad
repz
mov
outsb
jo
jb
mov
das
rclb
clc
cmp
pop
lods
idivl
mov
aad
and
outsb
test
lret
mov
jmp
cmp
movsl
lret
insl
mov
mov
mov
inc
aaa
in
btc
mov
and
xor
rol
ljmp
pop
call
sbb
xchg
mov
push
xchg
push
movsl
jns
mov
mov
xchg
mov
subl
les
loopne
sbb
pushl
in
lods
mov
push
inc
stc
add
sub
imul
lock
int3
decb
movlhps
test
cwtl
sysexit
les
ja
mull
add
sub
leave
push
push
xor
je
fsubp
sbb
mov
cli
mov
pop
or
inc
mov
enter
xor
mov
popa
cwtl
hlt
inc
fs
stos
xlat
int3
jno
xor
inc
repz
xchg
aaa
adc
pop
fs
push
inc
pop
xchg
inc
daa
jg
sbb
int3
mov
sbb
loope
and
out
push
mov
xor
es
or
jno
movl
fbld
movsb
test
or
xor
divl
mov
out
dec
cltd
push
fs
mov
xchg
ds
push
cmp
adc
cmp
vpsubsw
movsl
addr16
xor
clc
dec
mov
mov
lock
push
cmp
popa
and
sbb
adc
aad
xor
stos
cmp
mul
out
daa
icebp
das
jmp
or
mov
jmp
or
or
in
arpl
data16
add
pusha
xor
in
sub
adc
lods
cmpsl
cpuid
inc
mov
mov
mov
xchg
fildll
into
inc
xor
mov
les
add
imul
sbb
mov
or
or
fisttpll
in
data16
push
adc
popf
rclb
aam
ficoml
xor
rolb
fimull
mov
sti
dec
inc
or
repz
xor
dec
pop
ficoms
call
mov
add
cli
cmpsl
jp
xchg
fisttpll
push
lods
jmp
sbb
mov
dec
cs
test
insb
cmpsl
popa
cmc
movsl
push
dec
inc
and
cmp
scas
jle
sahf
mov
out
lcall
pop
movsl
pop
mov
dec
mov
fisttpl
mov
xchg
andb
outsl
ror
fcmovne
popa
mov
adc
sub
and
sbb
mov
fwait
mov
ljmp
dec
or
cli
adc
dec
lods
lret
lcall
add
fisubrl
add
jnp
mov
adc
in
bound
add
aad
mov
jg
or
ss
xor
les
and
pop
jb
push
push
adc
lcall
mov
push
mov
adc
sbbb
inc
ds
sbb
out
shr
mov
mov
clc
outsb
xchg
ret
pop
xchg
jecxz
scas
lahf
sahf
ljmp
sbb
push
mov
fyl2xp1
fistps
sarl
pop
push
aad
xchg
inc
jge
rcrl
mov
sahf
ja
cmp
loope
xchg
pop
pop
call
add
cld
pop
ljmp
into
ds
fsts
or
sbb
cltd
sub
xlat
out
out
sbb
xchg
mov
scas
sub
ret
pop
call
inc
aas
dec
sti
pop
cli
mov
mov
movsl
in
nop
push
pushl
cmp
outsb
push
fldcw
and
push
dec
out
fwait
push
ret
dec
out
test
lahf
call
cli
or
stc
mov
mov
sub
sub
ss
sahf
dec
sub
or
adc
mov
mov
push
xor
inc
icebp
xor
insl
stc
subl
sub
push
popf
scas
sarl
pop
xchg
insl
rclb
mov
mov
push
xchg
lea
push
test
sarl
xchg
dec
stos
mov
xchg
cmpsb
inc
scas
lret
mov
fdivl
sbb
mov
and
and
les
rclb
shlb
push
or
out
sahf
jns
int3
mov
pop
or
std
sbb
arpl
cmp
or
dec
and
mov
xchg
jle
inc
int
mov
ja
jmp
mov
mov
cmp
mov
nop
mov
lret
lret
add
xchg
sub
lods
into
xchg
xchg
data16
push
mov
xor
ret
test
daa
not
je
loopne
sub
xchg
fcmovu
movsl
int
stc
std
inc
mov
lods
pop
data16
xor
out
push
mov
jmp
mov
pop
jae
push
pop
sbb
and
lods
cmp
pop
imul
dec
imul
sbb
lock
cmp
or
dec
lret
pop
stc
jmp
jno
repz
xchg
roll
cmp
ret
and
pop
bound
inc
cmp
test
sub
xchg
in
cmp
in
movswl
push
jbe
data16
ss
sbb
mov
test
sub
mov
ds
nop
xor
jo
inc
jo
and
inc
es
test
not
push
adcl
cmp
add
xor
in
mov
pusha
push
daa
outsb
repnz
mov
push
push
loopne
in
pusha
pop
fstl
imul
ds
pusha
cmp
adc
shlb
test
mov
and
inc
hlt
mov
int3
adc
push
mov
sbb
mov
incb
repz
pop
add
lds
ret
jbe
inc
sub
add
in
movsb
arpl
outsl
mov
jle
or
cmp
mulps
cmpsb
pop
push
pop
ds
jnp
xchg
lret
mov
std
outsb
or
sub
mov
std
lods
adc
cld
pushl
and
lds
out
dec
pop
sahf
clc
adc
clc
cmp
mov
movsb
xor
sub
push
mov
jo
or
in
call
lea
mov
repnz
add
pop
aaa
fnstenv
daa
dec
mov
adc
scas
dec
adc
xchg
cmp
lret
and
xor
push
inc
or
iret
xor
out
or
out
cmp
jb
subb
sbb
fs
stos
je
cmp
pop
push
movsb
shrb
ljmp
aam
adc
fists
cld
test
adc
jg
data16
and
push
and
sbb
mov
mov
sbb
fwait
ds
fs
rolb
mov
inc
xchg
push
sub
xchg
rolb
aad
icebp
mov
movsb
and
push
adc
ret
xor
lahf
stos
mov
andl
movsl
arpl
iret
gs
imul
into
fldl
into
jae
xchg
jle
xchg
or
cmp
inc
inc
sub
addr16
push
mov
cmc
adc
arpl
sub
and
push
dec
inc
pop
data16
loope
test
rorb
xor
jmp
frstor
mov
and
in
sahf
xchg
sub
jl
fdivl
cmp
fsub
test
aam
rcrb
fcmovnbe
int
mov
ja
js
jno
mov
cmp
sub
out
cli
mov
sbb
loopne
add
or
test
push
sar
inc
loope
lock
ret
cmp
out
sbb
sub
xchg
sbb
jnp
dec
sbb
xchg
or
addr16
mov
leave
inc
inc
lods
push
ja
ja
and
ljmp
daa
sub
cwtl
dec
mov
js
mov
js
xchg
scas
xrelease
fcmovbe
cmp
cmp
lahf
sbb
adc
scas
es
mov
test
lret
sbb
out
jno
movsb
adc
scas
pop
sahf
mov
lock
jnp
push
cmpl
or
xchg
ret
cmpsl
popa
bound
loope
inc
sub
ds
xor
mov
inc
std
movsb
or
sbb
int
cli
or
test
push
aad
jo
xor
sbb
adc
and
cmp
xchg
pop
aaa
fnstsw
popa
xchg
ljmp
sub
fiaddl
xchg
mov
fiaddl
sahf
fstpl
sub
adc
dec
scas
arpl
jb
mov
aam
into
xor
movsl
or
das
lret
dec
xor
iret
cmpsb
popl
popf
sarb
ret
pop
ret
mov
sahf
aad
or
lret
je
testb
popa
loop
sub
xchg
rorb
mov
lds
mov
loope
or
in
jl
sti
jo
sbb
add
lcall
xchg
jnp
jmp
cli
movsl
popa
pop
mov
imul
push
rcll
pop
sti
jae
pusha
xchg
push
notb
xor
movsb
mov
movsb
inc
cmp
xchg
mov
mov
pop
add
sbb
das
push
inc
adc
push
ljmp
jnp
daa
leave
enter
insl
insb
push
xchg
out
cmp
movsb
cmp
mov
sti
add
dec
ror
dec
push
inc
mov
jb
into
add
testl
xor
popa
pop
aad
pop
ljmp
adc
cs
mov
mov
or
dec
push
out
mov
cmp
rcrb
and
or
in
fwait
add
jmp
imul
sub
add
push
adc
xor
out
dec
in
iret
scas
mov
add
pop
and
ds
ffree
mov
outsl
jg
and
enter
inc
in
shll
xchg
jle
jae
in
mov
imul
scas
gs
sahf
mov
mov
inc
mov
mov
sahf
stos
jae
insl
mov
fbstp
jg
mov
int3
repz
movsl
pop
test
jmp
cmpl
aas
mov
iret
inc
mov
in
repnz
roll
jge
rclb
rcrl
rorb
adc
cmp
pop
and
jae
cmp
loopne
int
faddl
mov
enter
iret
inc
sbb
dec
mov
mov
sub
push
in
andl
adcb
sbbl
lods
daa
inc
sbb
and
cmp
sahf
in
lods
jge
mov
test
mov
fcmovb
insb
cmpsl
inc
stos
mov
fstps
xchg
sbb
push
push
mov
cmp
enter
scas
or
sbb
aaa
hlt
xor
xor
out
add
cmp
jecxz
outsb
sub
lds
lret
cmp
jg
fadds
cmp
fadds
in
mov
incl
insb
adc
into
in
fidivrs
pushf
inc
fldcw
inc
xchg
add
leave
jne
sbbb
and
add
aaa
andl
fiadds
lods
test
sbb
cltd
xchg
out
dec
fwait
mov
out
adc
fwait
or
rorl
jne
mov
xchg
addl
push
cmp
push
hlt
mov
clc
and
daa
jg
movsl
std
push
mov
lds
gs
sarb
adc
pop
aam
addr16
popf
jno
jne
adc
out
sub
shlb
xchg
xchg
test
mov
or
pop
mov
sub
mov
push
int
lcall
and
pusha
jecxz
or
mov
add
imul
sbb
mov
xor
int3
lds
xchg
sti
pop
add
in
or
jmp
ret
es
dec
lods
cmp
pop
dec
and
mov
cmpsl
jo
loopne
mov
dec
lds
or
lcall
fwait
xor
push
rclb
adc
sbb
outsb
sbb
mov
or
or
out
repz
call
sbb
mov
xor
mov
mov
test
inc
pushf
stos
adc
or
insb
add
or
out
push
or
inc
xchg
lea
xchg
sub
cli
fs
sbb
sbb
mov
imul
fisubrs
push
popf
clc
pop
sahf
pop
cltd
mov
das
or
in
or
sti
dec
xor
or
cmp
cmp
aam
push
call
arpl
push
data16
aas
pushf
fcoms
or
push
pusha
cmp
adcb
and
dec
call
popf
sbb
fnstsw
add
or
cmp
sub
sarb
xchg
add
loop
outsl
dec
aam
fmul
scas
in
jg
rcll
popf
popf
jp
pop
add
inc
adc
ret
mov
icebp
testb
inc
mov
cmc
dec
sub
stos
push
dec
sbb
ret
jns
lea
int3
mov
cmc
jb
xrelease
push
sahf
add
jnp
repnz
in
cld
sub
push
pop
push
jmp
ret
push
sbb
xor
test
inc
shll
sbb
cwtl
add
xchg
andb
scas
add
mov
add
arpl
faddl
outsb
call
add
cmp
bound
jle
pop
pop
or
xchg
into
mov
sub
xchg
aad
es
ljmp
stos
and
inc
inc
push
push
test
mov
shrb
sub
jno
sub
fiadds
lds
push
leave
test
inc
mov
lret
pop
aad
add
mov
std
inc
xor
pop
xchg
stc
jb
rolb
mov
mov
out
dec
cmp
mov
sbbl
push
or
pop
popf
adc
fs
adcl
jo
imul
into
jbe
mov
decl
dec
jl
mov
and
xchg
shlb
xor
pop
movsl
dec
je
iret
mov
mov
test
xor
pusha
mov
mov
mov
imul
adcl
or
push
stc
out
addr16
cmpsb
jno
adc
xor
mov
mov
lcall
or
adc
outsb
out
dec
mov
inc
mov
mov
lret
test
lahf
imul
fidivrs
icebp
mov
into
xchg
call
hlt
cmpb
out
inc
stos
cmp
mov
and
xor
lret
pop
rcr
hlt
xor
enter
sbb
imul
scas
xchg
inc
insl
ficoms
adc
out
popf
imul
out
push
lcall
push
push
scas
fisubrs
lock
fildl
ror
sub
sbb
xchg
xchg
add
dec
mov
add
xchg
ror
rorb
sbb
mov
adc
dec
xor
jo
pop
es
pop
lock
cmpsl
pushf
pop
ret
sbb
jns
dec
adc
push
cld
xchg
daa
xchg
cmp
jo
pop
inc
bound
jne
dec
nop
jb
shll
push
jae
ret
sub
arpl
mov
out
mov
std
cmc
jo
rclb
mov
cmp
cs
inc
mov
push
push
push
arpl
mov
jecxz
xor
add
int3
fnstsw
add
les
arpl
in
cmp
or
push
pushf
inc
popa
je
mov
or
jo
cmp
clc
ror
popf
mov
mov
jecxz
xchg
dec
leave
push
cmpl
lea
cmpsb
divb
push
cmp
pop
test
hlt
sub
je
xor
aam
lods
jo
mov
inc
fmuls
rcrb
push
jp
clc
mov
push
fsubl
in
dec
orl
or
xor
jg
icebp
hlt
add
adc
adc
jne
dec
scas
mov
mov
adc
test
lcall
es
xor
subb
jne
lret
lahf
mov
aam
push
push
dec
xor
mov
jno
xchg
pusha
push
cmp
lods
mov
fxch
dec
and
mov
popa
pop
stc
pop
sbbb
les
xchg
mov
or
add
inc
pop
mov
inc
adc
jns
pop
dec
test
imul
push
sbb
mov
ja
movhlps
outsl
push
mov
cmpsl
repnz
sbb
adc
test
icebp
in
and
jmp
aaa
add
and
and
out
or
mov
popf
push
pop
push
sub
repz
pop
lea
test
push
mov
pop
xchg
push
mov
cwtl
cmpsl
dec
out
out
and
aas
sub
cmp
jns
inc
test
push
lahf
sti
pop
sub
fwait
adc
je
mov
ja
jl
fsubr
sbb
cmp
sub
into
scas
push
shrl
xchg
adc
add
xor
jg
jb
insl
cli
jg
notb
mov
in
jg
ret
test
cmpb
mov
adc
xchg
mov
pop
scas
pop
into
sbb
clc
jae
fsubs
push
sbb
rolb
sub
fnstcw
inc
sbb
fwait
cmp
mov
jecxz
lcall
hlt
cmpsb
jmp
iret
out
pop
mov
add
clc
jb
std
jae
mov
mov
stc
cmp
pop
xor
mov
ret
cli
push
push
cwtl
fidivrs
add
push
adc
subl
mov
fstpt
lret
into
sbb
add
xor
fsub
fisttps
fisttps
sbb
hlt
ret
xorl
add
pop
iret
fdivr
outsl
rcl
xor
loope
or
imul
cwtl
sti
loop
xchg
push
sub
push
in
xchg
cli
aas
push
roll
pop
fldl
les
rorb
adcb
call
lods
aas
mov
pop
mov
icebp
xchg
shr
push
sub
push
data16
jmp
or
adc
gs
mov
loop
mov
lock
mov
push
aas
inc
aam
pop
xorl
mov
push
ljmp
sbb
fs
mov
push
dec
and
es
add
jge
out
pop
sub
lock
mov
mov
sbb
es
loope
pop
cs
les
fisubs
lret
pop
negl
ret
sub
ja
mov
dec
gs
test
sbb
mov
scas
ds
and
mov
jecxz
clc
mov
rcll
stc
test
imul
add
or
inc
add
cltd
cmp
pop
add
cmp
mov
je
mov
mov
nop
cmp
iret
popa
xor
pop
cli
dec
or
add
push
sbb
popf
enter
push
dec
push
shlb
mov
fstps
cwtl
push
popf
cmp
adcl
mov
lods
sbb
pusha
mov
mov
mov
xchg
mov
clc
pop
in
push
gs
inc
jg
jmp
scas
rcrb
ds
xorl
ds
pop
push
cmp
mov
and
je
subl
mov
ss
arpl
lods
test
inc
lods
mov
push
and
int
cmpsb
xchg
dec
push
and
dec
arpl
adc
lock
xor
pusha
sahf
mov
push
test
filds
repz
int
outsb
mov
pop
and
and
arpl
pop
test
mov
clc
jp
int3
dec
xchg
outsb
push
fidivl
testb
or
and
pop
lods
popa
stos
dec
outsb
std
iret
sub
add
pop
mov
rolb
xor
mov
lods
pop
lea
imul
dec
imul
xchg
cli
cmpsl
sub
stos
jg
jecxz
sbb
mov
lret
inc
adc
lahf
add
xchg
andl
arpl
sub
or
fbld
stos
jae
xor
iret
inc
call
sub
add
sub
xor
cmp
sbb
mov
mov
pop
lea
push
dec
fnstsw
sahf
icebp
xor
dec
dec
xor
mov
scas
lds
hlt
sbb
pop
push
push
mov
mov
es
je
cs
jno
adc
insl
mov
orl
mov
in
cmp
addr16
or
mov
push
inc
decb
int
lock
xchg
mov
lock
push
push
xor
andl
fsts
pop
cwtl
pop
cmp
iret
mov
bswap
loope
push
jnp,pt
jae
sbb
imul
into
mov
inc
scas
jns
fwait
aaa
push
loopne
gs
mov
testl
inc
pop
inc
and
push
dec
pop
loope
repnz
xor
push
arpl
rolb
push
mov
sub
lret
dec
out
dec
repz
jecxz
loop
loope
jg
adc
in
pop
pop
jnp
fwait
inc
hlt
ret
pop
or
shll
repz
or
xor
aam
cmp
cmpsl
and
xor
scas
jecxz
pop
or
pop
sub
sbb
mov
or
inc
push
cmpsb
inc
inc
popa
pop
rcl
icebp
xchg
dec
mov
popf
dec
jge
js
inc
cmp
pusha
push
xchg
inc
push
or
add
add
xchg
xlat
cld
loop
sarb
lock
scas
push
imul
xchg
imul
mov
js
popa
push
movswl
add
cmpsl
icebp
pop
test
dec
data16
sarb
push
sbb
mov
mov
fdivs
dec
add
pop
lock
movsl
aaa
xchg
push
adc
mov
cmp
xor
fidivrl
out
cmp
aas
imul
xor
mov
int
stos
and
out
push
ret
aas
clc
js
inc
repnz
or
outsl
sbb
push
fwait
adc
arpl
xchg
dec
mov
add
xchg
mov
adc
cltd
stos
dec
inc
loope
jg
mov
cmp
or
mov
xchg
fstp
loopne
cmp
or
pushf
dec
xchg
pop
cmpsb
mov
xor
inc
ds
lock
inc
addr16
sub
sub
mov
addr16
jecxz
xor
mov
pop
mov
mov
mov
mov
add
cwtl
test
lods
shlb
adc
jo
xor
mov
mov
mov
fidivl
mov
shll
mov
mov
jl
lea
std
push
jo
inc
sbb
mul
add
movsb
mov
inc
sub
fs
or
ljmp
sbbl
or
pop
sahf
and
mov
jnp
imul
daa
mov
mov
xchg
lods
sbb
js
js
mov
jns
lds
xchg
loope
add
lods
ret
leave
in
ja
movsl
push
sub
nop
mov
adc
jne
xor
mov
shrb
pop
fisubrl
sub
xchg
pop
xchg
fiaddl
icebp
loop
sub
nop
lea
in
jl
mov
pop
xchg
out
pop
xchg
inc
mov
data16
cmp
test
sub
lret
or
push
addr16
outsb
lock
mov
sub
ja
cmp
adc
mov
ret
push
jge
jmp
scas
jle
mov
sub
test
clc
dec
mov
dec
jp,pn
push
ret
cmp
dec
adc
nop
dec
test
stc
dec
out
cmp
hlt
mov
fwait
jne
shll
divb
cli
movsl
repnz
mov
test
fistpl
into
fwait
mov
fdivrs
push
in
rcll
pushf
jbe
pop
cmp
cmp
xchg
lods
fadds
dec
cmpsb
imul
and
push
ret
sbb
push
sbb
stc
test
adc
cld
repnz
and
add
ret
stc
jnp
ret
sub
add
jnp
rcrl
inc
inc
or
in
inc
sub
inc
xchg
and
gs
imul
pop
les
int3
leave
add
jns
jle
jne
and
inc
xchg
xchg
ljmp
loop
fmuls
mov
sub
mov
out
xchg
and
fdivs
dec
insl
arpl
inc
jle
add
ret
sub
mov
xor
adcb
loop
or
clc
pop
adc
push
inc
pusha
mov
ret
xchg
shlb
andl
into
pop
dec
scas
call
add
repnz
adc
sti
sarl
jecxz
test
xchg
es
leave
nop
mov
pop
mov
movsl
in
shll
lds
inc
cwtl
pop
xor
dec
xor
aad
cmp
dec
or
cmpsl
sahf
imul
add
popf
nop
xchg
sti
ret
inc
test
and
fnstsw
adc
mov
mov
mov
push
xchg
mov
adc
adcl
mov
xchg
mov
jmp
jp
lahf
test
repnz
and
mov
mov
mov
clc
lods
mov
sub
shl
pop
adc
mov
or
sti
or
mov
jmp
xlat
inc
test
addb
arpl
ret
xor
cmpsb
cmp
call
pop
pop
dec
mov
push
inc
fwait
mov
repz
stos
adc
in
arpl
inc
outsl
ja
pop
pop
mov
imul
in
and
cmpb
clc
sub
and
dec
out
gs
push
jecxz
push
add
ret
or
jecxz
test
xor
pop
sbb
test
and
pop
outsl
and
mov
aad
sbb
in
mov
xchg
popf
xchg
pop
fsubrs
popf
or
dec
or
icebp
imul
bound
pushf
dec
test
cmpsb
sub
jg
pop
cltd
es
xchg
adc
dec
stos
es
outsb
and
adc
aad
hlt
lods
mov
dec
push
fsubs
add
jg
nop
xor
jl
push
xchg
stc
mov
push
adc
insl
and
dec
popf
stos
sar
add
mov
inc
sbb
setnp
fdivp
outsb
stc
xor
pop
or
dec
xchg
and
pop
sbb
sar
push
xor
movsl
out
js
and
push
mov
jg
roll
cwtl
mov
xchg
xchg
movsl
aas
inc
xlat
loopne
shlb
mov
pop
dec
pop
cmp
push
pmaxub
push
sbb
push
popl
mov
jo
ljmp
insb
sarb
and
mov
mov
push
mov
mov
sub
xchg
lcall
dec
xchg
xor
fs
or
inc
lods
sub
je
and
jmp
flds
into
jecxz
mov
stos
or
inc
mov
add
mov
adc
cmpsl
push
lea
jo
xchg
mov
cwtl
cmpsb
cld
jecxz
pop
insl
test
fwait
cltd
stos
and
pop
mov
into
jb
add
add
mov
jne
das
movsb
jmp
das
sub
lahf
fldpi
sbb
shll
test
mov
mov
scas
leave
popa
pop
mov
xor
cmp
inc
mov
inc
insb
int
pop
nop
or
mov
cmp
cmpl
bound
test
les
ret
mov
std
arpl
shll
jge
movsl
insb
aaa
addl
xchg
push
scas
leave
out
lods
sub
jmp
push
push
mov
int
add
movsl
repnz
add
stos
movsl
out
dec
mov
pop
cmp
jns
push
pop
xor
mov
int
inc
push
jne
pop
pop
mov
ja
push
mov
ds
mov
lock
repnz
imul
outsl
out
imul
test
mov
fdiv
pusha
icebp
push
lahf
das
jecxz
shlb
divb
and
pop
mov
mov
bound
push
mov
jecxz
adc
out
xchg
cld
xor
mov
dec
movsb
scas
lea
inc
mov
mov
xor
test
jnp
scas
shr
daa
lds
push
dec
dec
mov
inc
jne
mov
pop
jae
add
pop
push
inc
pusha
fnsave
test
mov
or
cmp
frstor
popf
pop
out
cmc
out
stos
xchg
jbe
inc
popf
lea
sub
mov
mov
in
sbb
fidivrl
adc
psubusw
rcrb
nop
push
xchg
fildl
stc
sub
push
inc
daa
loope
jno
sbb
sbb
call
push
and
dec
adc
jo
adc
scas
movsl
adcb
sbb
lcall
mov
outsl
mov
ret
arpl
aad
sbb
outsl
jbe
jns
jl
in
loopne
xchg
roll
xor
mov
cmp
gs
sub
popa
das
push
enter
sub
pushf
stos
imul
negl
in
xor
or
push
cmpb
gs
arpl
dec
push
jae
dec
inc
jge
mov
xchg
test
pop
cmp
xchg
or
dec
subl
andl
push
aaa
inc
lock
xchg
pop
xchg
mov
push
lahf
inc
xchg
push
ret
test
lds
lret
daa
daa
sar
mov
mov
ds
jnp
mov
gs
mov
daa
movsb
fidivs
and
xor
pop
mov
scas
popf
push
sbb
fwait
test
mov
fbstp
cmp
enter
add
xor
test
mov
out
movsb
addr16
ss
adc
movb
inc
fst
xor
nop
hlt
sahf
sti
fs
inc
fwait
cmp
inc
popf
insb
xlat
jp
out
popa
push
inc
adc
ds
cwtl
rcrl
lahf
mov
insl
push
data16
iret
mov
je
xchg
in
pop
ja
or
pop
mov
xchg
stos
stos
push
sbb
mov
cmc
mov
out
out
arpl
fs
negb
int
test
in
flds
sbb
enter
pop
adc
pusha
and
cmp
lret
pop
inc
pusha
enter
mov
out
psllw
divb
test
aaa
and
outsl
rcll
xor
mov
fistps
lock
je
arpl
and
sub
xor
cli
daa
sbb
cli
imul
cmc
push
ss
out
das
jnp
dec
jnp
cmc
mov
imul
adc
lods
lret
fwait
movsb
iret
mov
cmp
dec
cwtl
jbe
pop
inc
jg
sbb
sbbb
es
arpl
ret
nop
lret
jnp
into
repz
stos
orl
repnz
rcrb
jo
test
movsl
mov
or
cmp
mov
cld
xchg
aad
aas
test
add
or
push
pop
sbb
jp
xchg
pusha
rcrb
xchg
sbb
jl
int
or
out
sahf
jp
dec
nop
int3
mov
test
paddq
cmpsb
ljmp
mov
mov
jmp
pusha
ja
dec
mov
clc
in
out
sbb
data16
test
sti
xorl
mov
push
lds
jecxz
pop
hlt
adc
lock
pop
movsb
adc
push
jp
sub
push
and
bound
loopne
outsl
xchg
xlat
push
int
mov
lods
ds
cs
fiadds
jne
stc
repz
or
jp
adc
adc
mov
mull
push
inc
pop
scas
hlt
test
mov
out
call
data16
cld
push
adc
outsb
pop
dec
lock
push
pop
test
xchg
iret
push
rcrl
dec
clc
xchg
pop
sti
imul
int3
fnsetpm(287
cwtl
inc
lds
adc
ret
xor
shl
mov
push
ja
mov
inc
loop
dec
push
ret
int3
dec
shl
xchg
gs
inc
dec
jbe
stos
and
rclb
pop
sub
shl
inc
inc
fiaddl
shll
lods
or
cmpsl
mov
insb
movsl
mov
and
adc
aas
ss
fistl
jp
insl
xor
shrl
repnz
dec
addr16
lock
sahf
gs
push
adc
mov
inc
adc
adc
outsl
dec
fdiv
pop
push
into
addl
inc
inc
inc
push
imul
jp
push
out
sub
fs
icebp
and
or
inc
ss
mov
in
adcl
movb
subb
in
in
into
mov
xchg
lods
jbe
add
mov
push
shl
lret
dec
sub
hlt
test
ret
loop
shrb
add
pop
cwtl
mov
rcr
jmp
or
mov
dec
xor
aas
mov
sbb
adc
mov
cmp
sbb
addb
test
shlb
inc
xor
testl
mov
in
xchg
aas
sar
pop
dec
lret
negl
or
mov
and
cmp
into
mov
mov
mov
mov
ljmp
jg
imull
inc
push
mov
test
arpl
aas
push
test
jl
push
test
xchg
in
notl
popa
add
jb
in
mov
xchg
push
jecxz
cmp
add
xchg
lock
insl
clc
sbb
scas
cmpsb
out
xchg
out
sbb
xor
jnp
pop
mov
scas
lods
xor
fmuls
stos
inc
dec
push
cmp
push
push
out
in
jl
cs
aaa
scas
out
add
in
jecxz
shll
pop
sbbb
or
jnp
sbb
cli
outsl
outsl
cmp
adc
pop
imul
fldenv
call
dec
adc
mov
pop
mov
addr16
test
jnp
inc
pop
test
and
sub
sub
mov
lcall
cmpsl
xchg
mov
or
call
ret
xchg
das
inc
push
mov
or
fisubrs
add
pop
fidivs
int
ds
dec
mov
stos
js
cmp
and
pop
ror
jg
mov
xchg
adc
int
add
pop
adc
js
movsl
push
jbe
jg
mulb
std
inc
sub
xchg
cmc
imul
pop
movsb
xor
mov
lds
cmp
jo
push
xchg
dec
clc
cltd
imul
push
mov
outsb
and
int3
add
inc
push
sbb
addr16
fwait
sbb
rorb
stc
mov
jmp
fimuls
cli
jbe
xchg
xchg
xchg
fstpl
adc
stos
cmpl
pop
sbb
fadds
xor
push
xchg
pop
shrb
pushf
jns
std
lahf
jbe
call
push
push
rcll
sarb
mov
mov
fisubrs
ss
adcb
and
mov
call
xor
testb
xor
jp
and
or
xorb
mov
mov
dec
test
cltd
xor
jecxz
loop
sub
mov
mov
ss
pop
loop
push
sar
loop
testl
or
jecxz
popf
xchg
push
adc
mov
cmpsb
cmp
inc
sub
xor
jg
fnstenv
push
pop
cmp
out
aam
cs
pop
sbb
cmp
fbstp
push
and
push
and
rcl
xchg
daa
pop
sub
and
aam
push
or
fldcw
insl
popf
and
or
sub
cs
std
lods
pop
les
pop
out
inc
xchg
push
and
jmp
sub
bound
or
pop
mov
sbb
iret
ja
enter
jnp
or
fdivrs
inc
or
nop
jl
pop
pop
push
jb
das
mov
sahf
push
inc
pushf
jle
push
cmp
mov
xor
dec
xlat
in
push
xchg
lret
mov
mov
pop
dec
repz
movsl
lret
ss
push
ljmp
enter
jmp
jb
cmpsl
in
pop
mov
idiv
sbbl
aam
jge
lock
jb
xor
andb
in
pop
xor
adc
jo
add
fimuls
cmpsl
fmul
mov
mov
xor
or
cmp
mov
lock
test
cmpsl
sarl
int
jb
stos
push
mov
inc
ljmp
loopne
into
or
aas
hlt
lock
scas
add
jmp
mov
xor
in
inc
cli
iret
loope
adc
inc
daa
jne
out
xchg
stc
inc
push
mov
clc
jne
out
jl
js
test
pop
and
subb
outsb
mov
xchg
cmp
or
inc
je
cltd
jbe
dec
scas
cmp
jmpw
cmc
pop
xorl
sbb
xor
cmp
mov
gs
inc
lcall
arpl
pusha
pop
into
push
dec
sar
leave
adc
rcrb
jl
push
lahf
jns
sub
xchg
push
sub
jmp
pop
lds
insl
mov
subb
jae
test
fsubl
sti
pop
ja
arpl
jmp
subl
jb
mov
mov
pop
cmp
aaa
mov
mov
add
sub
lods
pop
adc
inc
adc
pop
out
clc
in
pop
sub
pop
sbbl
pop
push
arpl
add
jo
sub
lret
ret
out
out
lods
jle
jnp
push
lcall
cltd
cltd
cmp
xchg
lds
out
lds
in
cmp
jae
sahf
nop
mov
mov
daa
adc
mov
aas
das
jbe
stos
sub
rorb
push
mov
mov
gs
add
mov
xor
mov
loop
clc
out
out
push
sbb
xorb
cltd
nop
sbb
inc
nop
cltd
inc
ds
aaa
pop
xchg
push
popa
cs
das
pusha
jo
mov
cld
sub
popf
or
int3
js
les
dec
pop
xchg
enter
jmp
mov
daa
mov
arpl
and
xchg
jle
jecxz
or
aas
pop
lret
pop
jno
xor
lock
jo
mov
pop
popf
sarb
out
aad
scas
pop
mov
mov
or
mov
fiadds
xchg
fcmovnu
pop
into
cmpsl
or
xor
mov
outsl
inc
ret
shl
loopne
ds
push
stc
dec
fisubrs
aad
ss
aam
fsubs
push
cmpsb
outsb
rcrl
lods
jno
pusha
jmp
xor
aad
inc
scas
out
and
cmpsl
ret
jmp
sub
movsl
imul
mov
lods
dec
stos
dec
pop
jg
jle
out
stos
and
test
dec
or
std
std
push
ret
ret
lcall
lret
subl
push
pop
pop
out
add
mov
enter
adc
jbe
pop
ss
cmp
imul
das
and
dec
jp
xchg
and
xchg
lret
mov
aas
loop
shrl
ret
and
ss
push
xchg
dec
pop
add
xor
out
loop
xor
xor
insb
inc
xor
sub
mov
cmpsl
push
insl
xor
into
sub
inc
mov
arpl
adc
popf
cmp
stc
pmulhuw
mov
pop
or
push
divb
icebp
xchg
dec
mov
cmc
or
push
push
fcoml
imulb
lcall
movsb
clc
jns
insb
cmp
enter
push
pop
cmc
std
sub
nop
das
push
jmp
and
aad
pop
inc
mov
xchg
bound
movsb
mov
mov
pop
dec
inc
out
or
addr16
clc
in
push
repnz
dec
dec
or
cmc
cli
pop
movsb
iret
pop
in
and
loopne
cmp
adc
sbb
mov
pushf
in
jg
cld
xchg
gs
arpl
sti
lds
push
fincstp
testb
sub
pop
rorl
pop
sub
scas
push
mov
mov
jge
sbb
sbb
dec
cmp
test
nop
js
sub
sahf
xchg
imul
bound
add
inc
test
aaa
or
lahf
or
imul
aad
shlb
xchg
mov
addr16
jne
divb
mov
jmp
sub
push
insb
push
and
sub
xchg
in
sub
es
jle
jge
and
mov
fdivl
loop
dec
cmp
pop
jo
pop
push
fcmove
pop
stc
mov
mov
mov
scas
sbb
or
adc
sar
fildll
hlt
inc
pop
sbb
pmulhw
add
inc
mov
and
fsubl
push
xor
push
mov
jmp
cmc
bsr
mov
adc
push
xor
xchg
xchg
mov
rsqrtps
sarl
cmpsb
ljmp
rorl
mov
cmpsb
addr16
outsl
sbb
jbe
cltd
daa
call
cmpsl
sub
dec
lods
mov
ss
sub
mov
pop
adc
push
adc
leave
or
cmovle
dec
lret
mov
xchg
fdivp
sbb
outsl
or
daa
mov
jnp
lods
aad
inc
mov
push
jmp
mov
stos
xchg
sbb
cltd
ss
mov
or
dec
arpl
ljmp
push
jecxz
cmc
dec
dec
scas
and
mov
fdiv
cmp
movsl
jno
cmp
lea
xchg
jle
add
aas
std
mov
pusha
repz
test
shlb
repnz
movsl
imul
icebp
sub
das
xor
call
scas
push
and
cmpl
and
xchg
ret
mov
jo
ret
shl
mov
cwtl
mov
pop
adc
jecxz
jo
mov
stos
pop
test
lret
and
mov
cmc
inc
xchg
scas
sbb
pop
sbb
push
push
fimuls
clc
mov
mov
cmp
enter
add
mov
push
stos
and
movsb
mov
das
shll
pop
adc
outsl
sub
pusha
fiaddl
and
jo
mov
into
sub
fscale
adc
shrb
adc
daa
daa
sub
sbb
jns
xchg
pop
cmp
push
xor
das
clc
inc
mov
mov
in
mov
adcl
loopne
dec
xchg
mov
jle
cmp
decl
pop
mov
sub
jns
dec
ds
fdivrp
pushf
xchg
xor
in
jmp
fld
jge
pop
stc
repnz
aad
mov
addr16
push
test
ret
int
jno
push
dec
xor
adc
adc
cli
cld
mov
sbbb
fmulp
jno
mov
pop
rorl
cmpsb
or
les
cli
bound
aaa
aas
xorb
fisubl
push
adcb
sub
lret
aaa
xchg
aad
jae
out
sarb
jl
mov
jns
daa
push
xchg
sti
lods
mov
cmpsl
imul
loop
je
or
xchg
pop
jb
jg
mov
and
movsl
daa
dec
dec
mov
push
out
or
dec
repnz
dec
popa
cld
or
mov
ret
enter
in
push
add
cmpsb
fidivs
sbb
arpl
sar
mov
or
sub
aaa
mov
adc
rcrl
sbb
sbb
sbb
scas
push
cmp
in
adc
aaa
ret
imul
cmp
aas
xchg
sbb
imul
jecxz
push
sub
les
fisubl
bound
add
push
pop
pop
jecxz
mov
test
cmp
lods
stos
push
mov
lret
dec
sbb
sub
or
inc
mov
mov
dec
jbe
and
mov
fdiv
mov
icebp
add
sbb
daa
outsl
adc
pushf
sub
pusha
push
cld
and
out
fisubl
sbb
xchg
cmp
lods
pushf
loope
arpl
lock
in
mov
repnz
or
or
pusha
daa
and
in
pop
addr16
xor
push
in
movsl
jne
aam
mov
loop
xor
inc
test
out
mov
mov
mov
sbb
mov
daa
fs
popf
jl
lods
cmp
push
and
test
cltd
xor
or
daa
cmp
stos
or
mov
hlt
fbstp
mov
ss
cmpsb
sub
sub
xor
cld
adc
xchg
sbb
mov
and
mov
test
mov
inc
pop
xchg
in
xchg
rclb
inc
outsl
inc
addr16
push
mov
sahf
cmpsb
or
out
sti
adc
mov
mov
sub
sahf
das
gs
shl
mov
pop
add
pop
in
fisubrs
sbb
jnp
and
gs
incl
jns
testl
mov
shl
pusha
sub
mov
int3
daa
out
data16
or
lock
sbb
bound
xorl
ret
pop
pop
cmc
push
repz
loopnew
mov
flds
push
negb
pop
cwtl
mov
ret
pushf
fdivrl
movsl
stos
push
shl
cltd
dec
inc
jo
xor
loopne
jno
add
sti
inc
daa
cmc
rcr
shll
popa
inc
xchg
notl
movsl
inc
sbb
insl
add
inc
pusha
push
stos
adc
nop
in
pop
pushl
or
or
sub
nop
sub
jb
popa
xchg
mov
iret
popf
jb
fcmovu
xchg
out
xor
pop
repz
fwait
scas
cs
shrl
jno
pop
into
jle
arpl
aam
enter
lea
arpl
or
movsb
mov
aad
xlat
pop
cs
stos
iret
cmc
or
test
push
push
popa
loope
add
sti
push
mov
adc
js
dec
mov
and
lret
sub
add
call
fldcw
push
repz
imul
cmp
mov
mov
pop
stos
pop
stos
sti
xor
jge
push
inc
rcrl
scas
xlat
jp
rcll
out
pop
xchg
cs
outsl
clc
lods
aam
or
aas
and
cmp
shll
outsb
fwait
and
mov
rorl
sbb
sbb
mov
sub
xlat
in
cmpsl
mov
inc
sbb
adc
jecxz
jno
add
push
push
jnp
inc
js
dec
xor
shll
mov
out
lods
dec
std
aad
ss
cmovo
dec
push
fdivr
or
pop
lret
xchg
inc
xor
roll
jl
into
in
insb
cmp
addr16
dec
pop
loope
int3
inc
arpl
and
inc
mov
adc
scas
sbb
cmp
sbb
mov
pop
loope
call
ds
cs
jnp
stos
push
lret
incb
scas
push
push
cmp
fwait
repz
js
push
lock
dec
jae
inc
mov
dec
and
xchg
dec
inc
bound
scas
pop
cmpsb
inc
pop
loop
stos
lea
sbbb
ljmp
out
mov
push
rcrb
sbb
popf
mov
hlt
cld
sarb
rorb
idivb
pusha
sbb
insl
aas
addl
outsb
sbb
push
pop
push
mov
out
dec
adc
jae
pop
mov
and
push
fxch
movl
mov
jbe
ficompl
fbstp
aas
fsubl
int
lahf
push
dec
ror
mov
jmp
cwtl
lods
xchg
pop
add
out
insb
test
cmp
pop
and
pop
call
xchg
mov
cmp
and
shlb
in
fidivrs
mov
sti
lock
add
dec
repz
lock
xor
mov
pop
cmp
cwtl
jge
fisttpll
cmpsb
andl
inc
push
mov
sbb
cmp
push
adc
xor
pop
es
inc
aad
mov
in
pushl
mov
loope
loope
push
cmp
fucomp
mov
repz
push
lea
in
std
mov
in
mov
test
icebp
fstp
xchg
fiadds
jge
push
das
cmpsl
dec
xchg
sbb
ljmp
sbb
add
mov
testb
xchg
pop
lcall
fstl
enter
arpl
mov
and
xsaves
pop
out
js
push
daa
fs
cmp
mov
cli
in
out
sub
loopne
cmc
xor
jp
das
adc
cld
insb
pusha
dec
fwait
cltd
mov
fs
pop
das
mov
cmp
mov
mov
sbb
dec
lods
push
add
jge
jno
mov
sub
pop
adc
in
rcrb
inc
dec
mov
ret
jl
or
xor
mov
mov
push
test
aad
or
sbb
push
inc
enter
outsl
cmpsb
jnp
mov
add
mov
fsubrs
push
mov
ljmp
int
les
and
sub
insb
jle
cwtl
ja
and
or
jmp
and
in
jns
push
xchg
jge
cmpsl
gs
mov
lods
daa
mov
test
test
xor
mov
enter
out
push
lds
mov
sahf
stos
dec
leave
and
repz
gs
adc
push
adc
call
je
jno
data16
mov
mov
mov
leave
fsts
and
outsl
in
pop
insl
or
out
fdivs
call
cmp
icebp
loopne
and
mov
xchg
inc
mov
adcl
outsl
dec
inc
es
in
cld
ljmp
loope
stc
fadd
cmp
xchg
push
loopne
std
cmp
stc
movsb
test
mov
or
mov
cld
hlt
sbb
faddl
or
outsb
pop
loop
insb
out
push
inc
mov
rorb
cmp
mov
cmp
loopne
es
mov
fisubl
data16
push
enter
cmp
clc
inc
mov
iret
cmp
push
fs
std
mov
push
ret
mov
cmp
data16
daa
lret
pop
jnp
mov
fcmovne
and
push
ret
inc
and
mov
aaa
loopne
cs
xchg
insl
adcl
ds
out
into
mov
and
aam
jl
sbb
pmaxsw
inc
mov
inc
data16
xor
adc
jp
xchg
inc
push
std
sbb
xchg
adcl
mov
mov
loop
fists
inc
test
mov
and
push
mov
insb
push
adc
xchg
and
pop
or
lcall
fdivrs
or
lods
xor
sub
in
cmp
mov
repz
loope
xor
shll
and
sbb
add
subb
not
mov
and
sub
cwtl
pop
mov
cmp
orl
rorl
pop
push
cli
mov
mov
push
jno
xchg
ja
std
pop
sbb
mov
adc
push
jo
rcl
xchg
rcl
iret
les
loop
dec
and
push
push
sub
pop
dec
sbb
repz
sub
mov
push
and
mov
lock
cmp
sbb
mov
ret
jle
bound
lahf
cmp
dec
in
repnz
and
outsb
adc
pop
mov
add
enter
nop
jg
cld
outsl
pop
inc
push
jle
jns
cs
or
fisttps
xchg
mov
push
les
push
imul
cs
repz
iret
mov
adc
adcb
pop
outsl
movsb
into
push
xchg
pop
or
mov
mov
cmp
sbb
mov
lret
mov
add
push
jp
rcll
cmp
jmp
outsb
mov
dec
push
les
xor
inc
popa
fcoml
out
pop
sub
fwait
pop
add
xor
mov
in
sub
dec
adc
push
xchg
inc
xchg
add
sar
and
das
mov
pop
decb
mov
rcrl
movsl
fldl
xchg
out
xor
out
lods
jle
xchg
inc
stos
mov
jle
in
jb
adc
mov
or
adc
imul
and
iret
out
dec
movsb
flds
or
cmp
jnp
inc
push
ret
jb
in
push
adc
int3
sub
insl
std
mov
jae
callw
mov
push
dec
adc
cmc
in
bound
jns
or
test
push
addl
mov
mov
and
push
bound
scas
fisubs
inc
mov
jp
cmp
inc
sti
cwtl
pop
pushf
andb
inc
lret
lods
lods
aad
push
shr
push
lcall
arpl
or
xchg
in
add
fs
fldt
lret
mov
dec
xchg
out
cmpsl
call
push
push
int
out
stc
push
hlt
inc
repnz
and
jmp
sub
and
mov
and
or
adc
loope
xor
or
lock
pop
lods
daa
pop
push
sbb
sbb
pushf
fldcw
stos
scas
pop
push
sti
rcrl
sub
mov
insb
mov
sbb
mulb
ds
jbe
jo
push
clc
cmp
out
pand
mov
into
leave
cli
repz
loopne
sti
stos
xor
lahf
fs
fstp
mov
or
lcall
inc
sbb
testb
clc
mov
lods
cmp
inc
out
cmp
push
cmp
adc
sub
aaa
mov
adcl
repnz
adc
mov
dec
xor
inc
std
xchg
dec
sub
addl
aad
std
adc
inc
xchg
mov
rcr
cld
or
cmp
push
inc
int3
or
mov
mov
jae
sub
lock
jmp
ftst
mov
or
mov
mov
bound
aas
lds
push
lret
xor
mov
sub
inc
imul
pop
and
adc
loop
sub
daa
xor
mov
push
lahf
inc
jo
cmp
test
push
inc
out
dec
mov
fistl
sub
mov
mov
leave
xor
aaa
pop
lea
dec
lock
in
inc
xor
jnp
sub
aas
add
inc
je
jecxz
pop
scas
jg
hlt
pop
sub
xchg
les
mov
jns
jno,pn
add
and
or
jbe
das
dec
jg
dec
test
push
or
pop
dec
cmp
and
cmp
cld
gs
inc
sbb
outsb
flds
in
subb
fbstp
sbb
in
setle
notb
testb
sbbl
jae
jmp
in
sbb
or
xchg
insl
sub
outsl
jle
or
arpl
leave
push
lods
aam
pop
in
rsqrtps
ds
jl
jmp
scas
or
nop
xlat
xorb
push
popf
arpl
adc
jno
and
xor
aam
adc
dec
stc
jae
xor
fnclex
inc
nop
mov
in
ficomps
sbb
testb
push
push
ret
dec
inc
adc
cmp
sbb
or
rcll
dec
mov
adc
pop
mov
jge
sub
xchg
sub
mov
mov
add
jno
sbb
ljmp
movq
clc
in
imul
mov
push
mov
add
xor
mov
in
mov
popf
push
add
or
test
cmp
out
loop
mov
pusha
gs
mov
je
int3
xchg
leave
mov
aaa
cmpb
add
inc
test
adc
adc
les
lahf
in
dec
hlt
dec
xor
in
jno
xor
inc
xchg
shlb
sbb
arpl
cmp
cmc
inc
aam
int
rcrl
rcll
ds
ss
jne
mov
ds
pop
xor
push
lds
dec
or
jp
test
or
shrl
push
je
add
xor
sbb
rcll
xor
loopne
ljmp
scas
add
cld
mov
iret
inc
mov
aad
and
inc
fsub
cmp
loope
adc
aas
or
sbb
inc
jl
mov
xchg
and
push
pop
cld
mov
cli
or
push
scas
insb
ja
push
xchg
les
dec
aaa
dec
mov
push
add
jb
mov
leave
and
les
dec
jb
icebp
shr
fnsave
jae
fcoms
cmc
je
shll
fdivr
hlt
cmp
rol
pop
lods
stos
pop
sub
out
jbe
jl
mov
mov
mov
sbb
icebp
xchg
mov
xchg
ret
les
xlat
je
xchg
arpl
jns
rcrl
data16
jno
sbb
test
pop
mov
js
std
mov
dec
cmp
repz
js
insl
pop
fdivs
xor
popf
push
pop
jnp
aad
or
les
pop
fs
cwtl
mov
sbb
and
inc
xor
data16
sbb
jno
scas
push
push
int
xchg
cwtl
push
cmp
mov
mov
adc
out
sbb
sub
cli
mov
out
out
push
lods
mov
and
add
xor
insl
sub
lock
adc
cmp
insl
rorl
pop
lods
aas
xor
call
dec
jo
out
xchg
cmp
jecxz
inc
cmp
add
ss
int
xchg
inc
mov
push
test
roll
outsl
jnp,pt
loop
pop
out
jne
mov
push
out
dec
inc
ss
out
ja
and
bound
icebp
pop
mov
movsb
jge
scas
cli
pop
sbb
daa
mov
in
mov
jb
mov
cmpsb
dec
push
int3
sbb
les
pop
les
xchg
insl
fnsave
data16
xchg
ret
dec
mov
popf
mov
mov
cmpb
sub
inc
out
icebp
lret
inc
imul
push
sub
jmp
sub
test
mov
ds
aam
fs
or
loope
enter
xchg
or
lahf
xlat
je
push
cmp
cwtl
into
push
repnz
lcall
jb
push
pusha
lock
push
sbb
pop
push
or
sbb
push
popf
ja
mov
mov
xchg
lock
cmpsb
dec
xchg
scas
xchg
leave
add
popf
jp
cmp
fwait
mov
andb
cld
addr16
movb
jmp
sahf
loopne
dec
out
jle
inc
pushl
jno
shl
mov
jbe
rclb
cmp
stos
flds
movsl
push
cmp
or
sub
xchg
dec
cmp
push
push
and
cmp
aad
inc
push
cmc
add
subl
lods
inc
js
sbb
into
notl
testb
sbb
lahf
and
leave
push
or
lahf
mov
adc
outsb
push
or
insb
in
lea
pop
add
js
sti
aam
mov
mov
mov
fcom
in
dec
mov
enter
cmp
in
or
stos
ret
shlb
mov
je
aam
sub
ja
cmpsl
or
mov
out
movsl
fdivl
pop
cmp
cwtl
fcompl
jae
jecxz
dec
fdivrl
pusha
not
pop
stc
iret
imul
scas
xor
mov
dec
mov
xchg
and
mov
dec
adc
push
xchg
push
inc
cld
mov
insl
jne
or
or
std
mov
mov
mov
sbb
orb
xor
mov
jmp
cmpsl
fadds
gs
mov
aam
movsl
pop
cltd
jp
xor
xchg
jb
arpl
and
into
xchg
add
or
push
pop
pop
movsb
lret
insb
repnz
jg
ja
out
mov
push
loope
xchg
push
repnz
div
aas
lods
pop
dec
gs
mov
mov
ret
outsb
push
lods
xor
mov
inc
stos
xor
or
xchg
add
cmp
nop
dec
sbb
xor
mov
jl
int3
fnstcw
and
out
repnz
stos
mov
cmpsb
fmull
pop
sbb
icebp
addl
sub
pop
fwait
inc
mov
xor
nop
mov
daa
adc
es
stc
mov
cli
stc
xor
mov
mov
dec
pop
cs
dec
imul
int3
outsl
std
lcall
iret
loop
or
jb
sbb
and
mov
je
push
loopne
cwtl
dec
mov
lods
jecxz
lahf
into
sbb
sbb
jmp
mov
xor
or
dec
clc
jne
das
jb
ja
or
xor
test
pusha
rorl
out
lods
sub
mov
in
iret
mov
mov
call
sub
mov
and
xchg
test
push
jo
adcl
push
add
mov
fadd
mov
ficoms
jle
jae
in
cld
push
loopne
ret
sub
nop
les
repz
push
jb
mov
out
mov
cmp
xchg
jecxz
aas
xchg
xchg
mov
jmp
loope
and
nop
int3
test
fwait
sub
scas
jnp
fwait
mov
cli
sbb
cltd
insl
jbe
daa
adc
and
jg
cmpsb
xchg
add
lcall
mov
jns
mov
pop
mov
pop
xor
push
mov
mov
ja
pusha
pop
outsl
push
dec
subb
sahf
xor
adc
mov
and
in
jecxz
leave
popl
stc
fdivl
and
inc
icebp
mov
data16
cld
adc
insl
inc
xor
movsb
push
sti
pop
inc
nop
lret
dec
test
or
mov
push
ja
add
mov
aaa
cmp
pop
mov
rcrb
adc
add
orb
inc
into
mov
mov
push
add
push
pop
psllq
lret
gs
jecxz
mov
orb
mov
nop
aas
std
in
arpl
add
inc
lock
xorl
fcom
add
mul
call
mov
xor
sbb
popa
pop
ljmp
in
movsb
jns
int3
mov
push
add
or
out
dec
mov
adc
je
adc
subl
dec
adc
sbb
cmc
int
fcmovbe
lods
lcall
mov
and
dec
xlat
jnp
inc
jecxz
or
mov
and
lret
rorb
xor
push
pop
pop
mov
cmpsl
into
mov
pop
push
inc
ljmp
sbb
pusha
mov
dec
je
xor
cmp
jns
add
sub
mov
aad
pop
pop
mov
sbb
and
clc
mov
or
push
sub
sub
ret
push
flds
repz
and
lea
jae
imul
sarb
mov
mov
in
dec
fnstcw
pushf
addl
xchg
pushl
sub
and
rorb
dec
stos
sarl
xchg
addb
jo
xchg
mov
ret
sbb
and
nop
mov
push
lahf
sub
dec
push
test
out
mov
pop
scas
lds
xor
lock
nop
stos
loop
mov
ss
pop
cmc
jmp
repnz
or
pop
mov
lret
enter
roll
xchg
out
and
insl
imul
clc
sub
cmpsb
in
sbb
enter
lret
sahf
neg
inc
fiadds
fcmovu
ljmp
xchg
mov
cwtl
mov
pop
movsl
mov
mov
lahf
pop
lods
jae
xor
mov
mov
or
cwtl
mov
or
inc
rclb
sub
push
sbb
gs
jae
insl
mull
push
cs
in
jbe
inc
fwait
jp
push
jno
xchg
cmp
lcall
lret
fidivl
stos
inc
mov
dec
jne
sti
pushf
stos
stos
xor
cmc
adc
js
push
test
dec
out
out
in
jo
test
add
icebp
fistl
mov
loop
jb
cli
inc
cmp
lcall
sahf
mov
adc
out
jp
sub
rorl
or
gs
repnz
or
xchg
pop
push
inc
pop
aam
adc
xor
lods
mov
in
xchg
mov
mov
sysret
pop
popa
stc
shr
addl
lahf
pop
xor
lds
fstl
sbbb
sti
je
add
orl
dec
bt
jge
in
aaa
or
rclb
mov
jae
inc
cmp
add
dec
cmc
loopne
jo
loopne,pt
sub
insb
adc
mov
jmp
xor
lods
jp
jmp
sub
js
and
jl
and
fidivs
pushf
inc
push
scas
jne
into
cmp
sub
or
dec
stc
fcoms
cmp
test
faddl
or
lret
clc
add
mov
push
fs
push
push
lea
sbb
lahf
or
cmp
fidivl
dec
int3
fists
dec
jg
mov
add
push
adc
popw
push
mov
xchg
fistl
adc
push
sahf
pop
or
pand
in
inc
inc
pop
loop
inc
xchg
int3
ror
adc
outsl
sbb
mov
js
js
in
and
shrl
popa
stos
jmp
cmp
mov
cwtl
dec
add
and
outsb
ja
add
ret
insl
ljmp
cmp
sti
mov
mov
cli
xchg
cwtl
jb
dec
adcb
test
sub
xchg
dec
mov
sti
cmp
xchg
sbb
mov
and
dec
test
test
das
push
pop
insl
cli
cmc
call
jp
aam
xchg
fstpt
incb
shll
jp
in
and
bound
mov
jne
xor
or
xchg
arpl
sbb
fcmovne
cltd
sbb
mov
xor
fildl
shl
cmp
push
stos
int
inc
pop
sbb
xor
das
fists
cwtl
sbb
or
jnp
pop
out
hlt
sub
test
mov
inc
sbb
cmpsb
js
push
jecxz
jbe
mov
mov
mov
lret
push
test
xchg
std
add
mov
xchg
sbbb
adc
and
xorb
and
push
sbb
mov
lea
mov
adc
sub
insb
out
int
pop
and
push
stos
xor
arpl
or
cmp
loop
popf
sbb
mov
ja
fwait
cmp
sub
in
inc
pusha
push
bndstx
sub
outsl
xchg
test
rorl
xchg
lds
adc
insb
xor
movb
sbb
jp
cld
mov
dec
dec
jg
repnz
lds
cmp
mov
mov
dec
dec
lret
call
dec
lods
testl
cmp
and
insb
sub
jecxz
add
pop
push
in
jo
fstpl
pop
cli
jne
cli
int
in
js
mov
mov
sbbb
inc
cmp
cmc
pslld
dec
xchg
cmpsl
mov
inc
fs
cmpsb
or
cmc
insl
ret
jne
cmp
loop
adc
and
sahf
idiv
dec
mov
pop
adc
pop
rcrb
add
xchg
addr16
add
fsubl
add
cmpl
into
jge
cs
jmp
or
xlat
pop
pop
ja
js
shrl
or
mov
xchg
push
cs
mov
push
xor
xchg
insl
push
lret
in
add
ret
outsb
lret
push
sub
or
lods
cs
cmpsb
cmpsb
fildl
outsb
jb
xchg
cmpsl
js
jecxz
pop
mov
mov
inc
mov
jb
and
ret
or
adc
pop
mov
mov
sbb
test
jns
mov
cmc
cli
mov
mul
mov
push
mov
out
inc
cmp
fisubrl
scas
leave
inc
mov
jnp
mov
fs
popf
jl
outsl
ficoms
repnz
xor
hlt
mov
push
int3
adc
loopne
pop
adc
into
out
sbb
add
mov
sub
cs
dec
push
xor
std
arpl
test
arpl
mov
inc
and
iret
pop
gs
les
xlat
cmpl
push
adc
dec
mov
popa
pop
fwait
mov
sarb
pop
pop
mov
mov
pusha
add
cmp
repz
push
adc
xchg
es
mov
js
inc
adc
ret
jp
adc
dec
dec
pop
cltd
jle
adc
sbb
add
imul
icebp
aaa
mov
fsubl
ljmp
cld
xor
in
sar
mov
sbb
cmpsb
xor
icebp
cli
dec
lret
adc
mov
xchg
cmc
jns
into
mov
test
rclb
mov
xchg
and
leave
inc
and
add
fnstenv
adc
sub
jg
mov
mov
ficoms
test
sbb
adc
push
mov
addr16
add
push
icebp
push
repz
push
dec
or
xchg
loopne
mov
or
dec
jbe
push
lock
cmpl
leave
in
test
or
movsl
sbb
jge
pushf
jns
leave
loop
dec
add
notl
faddp
orb
in
dec
push
rcl
sub
lea
test
pop
ret
xor
nop
add
xchg
push
dec
sbb
xchg
clc
imul
lcall
daa
sti
pop
inc
cmp
mov
jge
std
mov
inc
jg
pop
and
inc
jle
push
testl
lock
lods
fs
xlat
sub
mov
xlat
sti
or
movsl
dec
fsts
ret
dec
aad
lahf
push
mov
jl
and
dec
xchg
mov
pushf
mov
jge
loopne
lock
or
jmp
or
fsts
repz
cmpsb
or
out
imull
jo,pt
mov
ficoml
rclb
js
out
xchg
sub
adc
outsl
pushf
dec
fs
sub
mov
insb
jbe
test
dec
mov
adc
and
les
fs
ss
dec
adc
sub
out
mov
sbb
push
lods
lret
pop
daa
sub
add
cltd
cmp
xchg
lea
push
ret
sub
enter
xchg
mov
test
dec
js
cmp
cmp
jbe
movsl
mov
call
mov
lret
pushf
inc
mov
cmp
adc
xchg
pushf
jl
mov
enter
sbb
jne
clc
repz
cmpsl
dec
sbb
mov
mov
mov
test
dec
push
ljmp
popf
sub
in
addb
push
xchg
mov
ret
push
rorl
add
pusha
add
repz
std
xor
xor
mull
cmp
in
icebp
pop
ja
dec
ja
push
pop
xchg
mov
stos
xor
je
fwait
xchg
sbb
rorl
or
gs
dec
iret
imul
popf
fstl
imul
push
mov
idivb
out
adc
pop
add
xchg
aas
pop
aaa
adc
mov
sarl
or
add
in
mov
repz
icebp
cmpb
loopne
xchg
popa
pop
pop
leave
dec
push
shl
mov
cld
ror
add
nop
dec
cmpsl
jge
cmp
aas
loopne
ret
sub
pop
sbb
ljmp
ret
js
adc
or
lret
bound
xchg
shll
cwtl
stos
inc
cmc
repz
sarl
inc
jae
int3
push
inc
mov
hlt
push
lahf
mov
mov
mov
jno
std
lahf
repnz
inc
pop
add
cs
jge
mov
mov
bound
fcmovb
cmc
xor
fcmovb
push
mov
jns
mov
inc
jmp
hlt
test
mov
mov
add
imul
shll
das
lcall
ret
cmp
xlat
arpl
sbb
out
xchg
xor
add
test
ret
sbb
dec
inc
enter
imul
dec
popa
add
mov
pop
sbb
mov
adc
aad
inc
js
push
jbe
stos
mov
mov
aad
shl
je
push
jmp
mov
push
inc
dec
out
xchg
data16
incb
sbb
mov
inc
rcr
adc
mov
xchg
push
sbb
adc
xor
xchg
mov
clc
xchg
inc
sbb
pusha
jg
push
testb
mov
mov
jl
outsl
inc
cmp
les
out
adcl
cmc
icebp
xor
xor
pop
xchg
inc
inc
mov
aad
lods
out
push
aas
mov
cltd
jbe
cmpsl
or
push
bound
or
lret
in
rcl
les
aaa
adc
out
adc
mov
int
mov
sbb
xor
inc
out
inc
mov
sti
aam
pop
test
push
lods
mov
pop
add
adc
clc
pop
scas
shl
lods
mov
out
aaa
sahf
cmp
and
in
fwait
pop
out
ja
push
cmp
mov
inc
jo
xchg
dec
inc
mov
in
cmp
mov
imul
dec
xchg
mov
js
cmpsb
dec
push
jmp
pusha
push
insb
pop
dec
scas
add
roll
imull
call
out
loope
jecxz
mov
popa
das
xor
adc
pop
jl
cmp
jnp
xchg
cmp
les
insl
jp
fistpl
pop
jg
push
comiss
iret
and
aaa
push
js
into
cmp
mov
cmp
daa
imul
fwait
pop
or
mov
inc
dec
imul
inc
cmp
xchg
jmp
cmp
cwtl
pop
rorb
pusha
pop
stos
scas
jecxz
xor
adc
inc
or
push
test
mov
scas
pop
mull
inc
imul
repz
push
leave
sbb
mov
inc
xor
jge
dec
xchg
std
test
aaa
je
test
pop
pusha
iret
cli
out
imul
fcoml
into
lds
cmpsb
cmpsb
jl
addb
into
jno
cltd
lret
fsub
cmp
lahf
or
out
ja
jo
sahf
dec
inc
out
lcall
sub
das
repz
push
or
insl
xor
xchg
adc
mov
scas
cmc
inc
idivl
movsl
lods
inc
xor
cmp
xchg
push
push
add
ja
inc
mov
sbb
jl
dec
mov
push
xchg
sub
inc
filds
leave
lret
xor
cli
in
icebp
mov
imul
dec
test
sub
lock
xor
ret
insb
xchg
xchg
add
gs
out
popf
mov
jae
mov
and
mov
mov
push
push
and
and
adc
xor
rorb
xor
js
stc
cmp
dec
movsb
pop
insb
in
repz
xlat
mov
dec
pushf
mov
sahf
push
in
out
push
dec
lds
int3
mov
fisttpll
pop
xchg
adc
enter
pop
or
xor
fcompl
push
mov
xor
mov
push
xchg
loope
sti
sub
inc
jno
sub
pop
lods
mov
cld
add
pushf
fdivs
fstpl
es
in
in
fistl
loop
inc
int3
movsb
xchg
dec
stc
cli
test
mov
jae
mov
xor
xchg
rol
stos
addr16
or
imul
loope
adc
rcll
sub
aas
scas
lahf
fwait
pop
into
inc
std
jl
mov
std
lods
dec
push
insl
in
mov
mov
jl
scas
les
sti
mov
add
fidivrl
cmp
ret
adc
lds
mov
std
lret
out
push
sarl
jnp
into
ficoml
dec
pop
mov
popa
pop
add
jmp
lret
inc
stos
fs
push
jns
arpl
psubq
jle
jne
mov
hlt
idiv
fsubrl
test
out
sub
adc
dec
ret
mov
negb
aas
mov
aas
test
cmp
adc
jne
cmp
in
in
imul
cmpsb
jbe
add
mov
shll
test
and
into
jp
pop
and
mov
mov
ss
mov
push
insl
and
adc
pop
and
sub
mov
add
shlb
nop
shll
ljmp
outsl
imul
rcr
sbb
lcall
xorl
pop
js
mulb
insb
and
dec
jne
sbb
xor
mov
pusha
stc
push
jnp
mov
jp
mov
int
xor
imul
cmpsb
lret
aam
mov
lahf
imul
xchg
pop
push
mov
jnp
loope
mov
aad
int
push
jns
repz
xor
and
movsb
jmp
inc
xchg
and
push
ds
xor
out
outsl
mov
insl
jns
idivb
push
leave
mov
pop
xor
mov
pusha
or
insb
xchg
es
fwait
mov
mov
adcb
push
rclb
lds
xor
push
stos
mov
arpl
push
sbb
mov
insl
fisubl
popa
out
orl
xor
mov
or
std
sub
frstor
mov
add
pop
call
icebp
jp
outsl
std
nop
add
lret
cmp
pop
sbb
cmp
cli
add
mov
jnp
scas
mov
andl
aas
hlt
test
cmpsb
cmp
mov
sbb
fwait
in
jg
in
dec
push
dec
lahf
sbb
loop
xor
jns
push
lcall
fwait
jae
mov
xchg
bound
push
mov
cld
outsl
scas
test
lret
test
out
sub
mov
jne
cld
mov
mov
mov
stos
jns
fs
stos
inc
jecxz
out
mov
cmp
inc
fsubs
je
push
sbb
loop
test
push
mov
test
repnz
and
mov
cli
test
fidivs
or
fisubrs
jle
insb
pop
subl
mov
ror
mov
clc
cmpsl
das
jnp
fmuls
dec
cmc
adc
lahf
cld
xor
mov
pop
mov
mov
sub
lahf
sub
dec
xor
sbb
jns
dec
add
inc
jg
dec
lret
add
and
std
xor
mulb
inc
or
je
es
push
cwtl
pop
jne
fsubl
mov
movsb
sbb
push
adc
dec
adc
xchg
adc
dec
sub
rcrb
cld
mov
mov
lea
or
mov
jp
loopne
xor
push
and
rcll
nop
xchg
jge
mov
lds
jb
jecxz
out
cmp
ret
arpl
in
fdivrs
loopne
cmc
rclb
sub
ds
hlt
or
lret
dec
movsb
cwtl
jecxz
xchg
rcrb
bound
and
mov
push
ss
lods
data16
or
stos
push
sbb
jbe
dec
xor
add
icebp
into
movswl
add
ja
into
mov
lahf
jl
push
sbb
mov
adc
add
es
cmp
aaa
mov
iret
fcmovnu
mov
inc
pop
mov
and
in
jno
push
cli
int3
push
pop
loope
adcl
dec
data16
int
repnz
dec
call
sbb
xchg
add
enter
mov
addb
push
int
mov
pop
pop
adc
adc
lods
cs
xchg
aaa
push
lock
xchg
jmp
jmp
stos
and
push
and
addb
aas
lods
stc
repnz
dec
fistps
adcb
xlat
jl
sbb
fldenv
sahf
push
mov
ja
popf
push
lret
roll
mov
mov
inc
push
insb
inc
imul
js
lods
xchg
lret
inc
cmpsl
repz
rclb
mov
push
movsl
mov
in
daa
or
test
scas
aam
push
stc
dec
mov
mov
es
insb
add
inc
adc
ds
fcompl
mov
das
adc
loop
ja
and
popf
jle
cld
ret
rcl
loop
scas
xor
cs
addb
cmpsl
test
mov
mull
inc
push
xchg
movsb
push
xor
sub
in
in
enter
ret
jg
lock
imul
repz
scas
inc
push
rclb
js
sub
outsl
fs
lea
rcrb
inc
lahf
push
movsl
rol
rorb
mov
stc
mov
jmp
scas
rolb
xor
sub
mov
jo
in
pop
scas
cltd
mov
mov
cmp
mov
shll
fildl
popa
dec
outsl
pop
adc
icebp
sub
xor
xchg
mov
mov
movsb
push
pusha
addb
or
adc
xchg
inc
lret
cmp
xchg
inc
inc
sbb
adc
sub
mov
xchg
jl
fidivrs
ljmp
sbb
shrd
lods
lcall
add
cmpsl
out
nop
and
call
enter
xchg
push
sbb
in
scas
cmp
mov
mov
out
mov
cmpsb
jle
aam
jb
aas
loope
out
xchg
pop
push
and
mov
sub
subl
sbb
fistps
pop
and
mov
insl
dec
fstpl
pop
mov
fists
in
dec
add
fwait
shl
mov
sti
enter
jp
xchg
dec
dec
xchg
cmpsb
push
int
pop
xchg
add
shll
xchg
mov
mov
lcall
fldenv
lahf
xlat
push
push
int
arpl
xor
stc
xchg
xchg
sarl
iret
push
jne
jae
shrl
push
and
mov
loop
dec
cmc
je
dec
into
mov
mov
pop
inc
mov
push
das
mov
inc
call
mov
test
mov
push
sub
push
sbb
mov
sub
and
inc
and
clc
cmpsb
cmpsl
sarl
addr16
out
cwtl
in
lret
adc
jge
out
stos
and
cmc
fwait
jl
sub
jbe
inc
loop
adcl
adc
popa
fadd
jo
adc
sbb
rorb
int
sub
int
dec
lahf
fwait
lcall
push
sub
out
pop
fs
adc
xchg
repnz
sti
push
mov
adcl
shlb
aam
hlt
popf
fs
js
lret
or
test
jge
sbb
jmp
or
and
cmp
sbb
inc
mov
daa
aas
andb
test
or
cli
or
xorl
adc
daa
push
xlat
rcl
daa
or
inc
pop
bswap
mov
inc
or
mov
in
push
or
sbb
iret
movsb
mov
adc
inc
mov
lret
lods
sbb
test
sub
pop
push
cli
sub
fimull
inc
dec
stc
incb
push
int
push
in
outsb
rcl
les
sbb
adc
xchg
jecxz
jbe
gs
into
xchg
rcl
movsb
in
test
push
or
cltd
js
push
faddl
imull
loop
pop
aas
stos
xchg
mov
aas
jae
and
mov
lods
xchg
out
jne
stos
ds
fisubrl
xchg
push
movsl
in
fisttps
push
inc
cmpsl
jp
mov
or
or
gs
cmp
xor
lret
cmp
mov
xor
sbb
and
repnz
stos
pusha
sti
aaa
clc
ja
push
or
xor
push
jle
mov
sub
int
adc
das
lods
add
stc
adc
mov
and
cmp
jmp
and
inc
jb
aam
int
andl
pusha
mov
dec
dec
or
movsb
xchg
cmpsl
adc
sbb
pop
into
lret
dec
lea
loope
imul
dec
mov
cs
xchg
or
lcall
out
cmp
imul
lock
ja
rcll
lods
adc
inc
stc
adc
insl
or
mov
loopne
rorb
shrl
jecxz
imul
inc
js
inc
jo
imul
cvtps2pi
and
jmp
push
dec
cs
jg
fimuls
scas
mov
or
xlat
jmp
mov
adc
clc
or
xlat
add
hlt
mov
jbe
sub
mov
push
sahf
jb
inc
cmp
dec
jo
mov
inc
hlt
out
pop
push
outsb
mov
imul
in
mov
xchg
or
xlat
sti
rcrl
test
fwait
test
sub
dec
add
out
aad
fnsave
sub
loopne
adc
iret
sbb
xchg
add
daa
lahf
cmpsb
mov
mov
or
fisubs
pop
repz
aaa
fdivrs
push
out
add
in
aam
repnz
sub
mov
mov
out
shll
orl
in
dec
call
adc
mov
mov
shr
rorl
lcall
lret
mov
sbb
cmp
aam
in
push
jmp
mov
inc
xchg
xchg
hlt
stos
aas
out
push
pop
lds
pop
fldt
js
aas
test
mov
movsb
rcrl
jb
sub
in
xor
xlat
mov
outsl
fdivrl
add
jb
dec
sub
ja
sub
stos
fimull
mov
lock
cmp
xorl
movsl
add
je
and
cmpb
mov
sahf
and
pop
mov
dec
fmul
sti
insl
les
loopne
or
pusha
mov
lret
sbb
shrl
push
shll
imul
popf
insb
in
lret
adc
call
call
pop
into
das
sbb
daa
and
leave
add
or
scas
sbb
mov
idivb
lds
add
int3
mov
and
icebp
push
fsubp
fisttpll
inc
clc
push
lods
pop
mov
ret
mov
fidivs
mov
stc
fadd
dec
sysret
sbbb
movsl
lcall
fsubrs
imul
xchg
sub
sbb
jo
lock
cmp
insb
jno
out
sbb
mov
mov
stos
int
mov
ret
mov
sbb
pusha
mov
cmp
add
pop
scas
sti
push
and
cmpsl
loope
jns
int
mov
push
push
je
cs
icebp
int
mov
adc
add
push
imul
adc
mov
jnp
xor
decl
movsb
iret
sub
lods
bswap
inc
loope
sub
imull
stos
fmul
and
test
rcrl
aaa
push
nop
mov
mov
xor
or
je
fisubl
lahf
dec
ficompl
mov
cs
inc
dec
sub
sub
add
push
mov
sti
mov
adc
xor
rorl
inc
jnp
popa
sbb
inc
daa
cmpsb
lock
imul
inc
cmp
adc
loopne
inc
movsl
sbb
call
enter
sbb
in
push
jecxz
dec
loop
push
or
popa
mov
xchg
xchg
push
push
pop
into
fwait
aam
test
cld
dec
pop
mov
int
cli
fdivrl
pop
xor
mov
xlat
dec
pop
push
jl
nop
inc
fisubl
mov
gs
mov
scas
lret
mov
xor
sahf
iret
scas
mov
lahf
shl
vorpd
add
mov
jmp
cmp
repnz
adcb
or
sbb
jg
push
push
and
lods
movb
loopne
addb
int3
xor
hlt
sub
mov
fisubrs
das
xor
cmp
imul
or
and
andl
or
ljmp
int
outsl
ja
pushf
or
faddp
jmp
and
pop
jmp
sub
shrb
xor
pusha
jl
sbb
fadds
mov
fildl
fiaddl
fcompl
lea
adc
addr16
outsb
jbe
fstpl
add
sub
arpl
cmp
sarl
cmc
sub
jl
mov
adc
ret
jg
sbb
mov
and
aaa
mov
out
shlb
adc
jge
es
push
ds
add
out
mov
xchg
int3
push
xchg
sub
mov
out
fmuls
xchg
out
test
sub
cmpsl
cld
mov
and
pop
jno
jecxz
sub
sbb
mov
nop
daa
push
sub
inc
aas
pop
pop
dec
insl
shll
and
push
cmp
mov
xor
stos
sarb
inc
push
and
mov
or
in
dec
xor
mov
orl
fwait
cmp
sahf
movsb
test
gs
adc
add
pop
mov
fwait
test
scas
icebp
int3
repz
jg
mov
add
popf
iret
icebp
aam
xchg
dec
xchg
xor
mov
into
ret
adc
mov
scas
test
fcmovu
pop
shr
mov
add
or
mov
xchg
or
add
icebp
andb
stc
inc
mov
icebp
push
pusha
xor
sbb
rcll
inc
in
pop
adc
mov
or
ficoms
pop
xchg
stos
cld
lret
push
insb
jecxz
pop
stos
adc
inc
mov
aad
mov
adc
jmp
cmp
xchg
xor
lret
dec
les
fdivrl
inc
cmpsb
cltd
repz
push
sub
repnz
stos
jecxz
out
mov
cltd
mov
test
add
lock
lea
loopne
std
cmpsl
sti
movsl
fnstsw
and
out
adc
sbb
jb
sti
mov
jmp
add
xor
ret
push
fs
push
inc
ljmp
std
addr16
lahf
add
cmp
roll
push
mov
mov
and
push
scas
sbb
or
adc
jl
ret
lods
in
xchg
cmpsl
sub
xchg
pop
mov
in
mov
orb
fists
pop
dec
arpl
test
and
push
rorb
lods
mov
gs
jle
into
cmp
xchg
call
hlt
bound
test
jo
sub
xchg
lods
imull
adc
jbe
sbb
or
sub
inc
aas
xchg
mov
js
mov
xor
cli
cs
xor
lcall
jnp
aad
pop
dec
repnz
mov
stos
and
sub
sbb
stos
rclb
enter
rcrl
fdivs
xor
sub
out
roll
test
call
shrl
xor
adc
cwtl
xor
outsb
sbb
sbb
rcll
inc
add
int
xchg
bound
xlat
leave
mov
addr16
pushf
push
lock
inc
sub
leave
js,pt
std
gs
dec
scas
pop
adc
xor
dec
xchg
or
arpl
pop
and
mov
xchg
outsl
push
push
inc
mov
cmp
sub
cmp
clc
je
pushf
les
jecxz
adc
sbb
lret
push
data16
fdivs
fsubrs
filds
test
xor
cmpsb
add
sahf
sbb
in
pop
ret
repz
pusha
or
call
cmp
lods
push
push
imul
mov
daa
fiaddl
cmpsb
xchg
jae
mov
cmp
jb
or
xchg
loope
jbe
push
mov
and
cmp
cli
ss
scas
jnp
mov
ss
or
cmp
out
xor
pop
and
xor
inc
cmp
addl
jg
xor
fst
jp
mov
hlt
cld
sarl
pop
loop
jmp
popa
xor
iret
shlb
addr16
cld
dec
inc
push
cld
jb
push
jnp
sbb
add
sar
dec
sub
pop
popf
int3
xor
incb
push
cmp
xchg
cld
imul
ret
iret
cmp
inc
pop
rol
cwtl
inc
ss
dec
sub
and
lods
iret
imul
bound
and
and
adc
xchg
and
orb
jo
lret
sub
inc
xchg
xor
stos
movsl
push
mov
sbb
sbb
lods
repz
pop
scas
flds
mov
pop
dec
cmc
fiadds
add
adc
pushf
jo
xchg
mov
les
pop
popf
mov
sbb
daa
mov
jbe
adc
fsubp
ret
add
xor
outsb
ret
mov
imul
pop
or
push
adc
pop
sub
or
fdivp
insl
cmc
adc
add
dec
aaa
mov
out
fldcw
add
jle
mov
fbld
cmp
add
paddd
xchg
fisubrl
rolb
cmc
inc
gs
or
mov
mov
es
lods
imul
dec
fdivp
push
xor
out
ljmp
call
mov
sub
orb
les
shlb
xor
or
mov
jg
repnz
or
mov
dec
int3
mov
and
addb
push
sbbb
pushf
cli
push
cmp
aaa
mov
xor
rorl
lahf
mov
sbb
jle
outsb
adc
sbb
dec
enter
sub
fildl
xor
shl
cmpsb
adc
cs
rcr
je
ja
outsb
sub
mov
pop
inc
addr16
cmp
jmp
cmpsb
adc
adc
shlb
mov
dec
mov
or
test
cmp
and
mov
push
das
out
fstpt
mov
mov
push
adc
cmpsb
sub
in
sub
add
in
pop
jae
fstpl
cmc
cmp
ljmp
outsl
pop
loope
das
aad
scas
aas
out
cmp
adc
or
xchg
push
ja
mov
in
and
loop
jge
inc
xrelease
mov
pop
call
pop
sbb
insl
lahf
fldl
aas
pushf
stos
adc
mov
fidivrs
jp
xchg
sbb
roll
movsl
jb
test
aam
cmpsl
or
push
adc
fdivl
dec
pop
sub
into
push
sub
fidivrs
sbb
sbb
or
mov
jg
add
xor
pop
xor
jecxz
push
je
push
cmc
nop
xor
in
pop
adc
shlb
int
pop
popl
popf
push
lods
stos
rcl
ljmp
mov
push
cmp
aaa
and
rcll
jns
add
cs
nop
pop
dec
ret
inc
sahf
mov
xchg
jecxz
clc
fists
enter
fbld
adc
insl
push
leave
data16
push
cmp
cld
lcall
sbb
adc
inc
lods
dec
mov
sarl
out
ja
dec
cld
mov
les
jle
movsl
mov
cltd
sub
pushf
lret
push
adc
dec
jns
xchg
jl
out
jecxz
test
sbb
add
cli
shr
stos
pop
jbe
cli
pop
push
lret
mov
scas
xor
in
imul
mov
xchg
dec
int
and
push
imul
cmp
push
rcll
mov
xchg
gs
push
push
fmul
jp
lods
pop
enter
xchg
cmp
push
cmpsl
push
xchg
pop
fs
dec
mov
dec
fistpll
mov
mov
dec
fstl
and
mov
mov
stc
lret
sub
imul
dec
repnz
fisttpl
push
xchg
mov
les
imul
ljmp
lods
int3
push
scas
es
loope
mov
adc
lret
xor
lods
and
daa
data16
cld
add
sub
push
adc
push
pop
outsl
ret
pop
fcmovbe
add
add
imul
in
jnp
pop
inc
dec
xchg
cmc
dec
scas
pop
jle,pn
or
sbb
dec
mov
jo
or
jmp
add
fiaddl
sbb
pop
push
repnz
push
je
mov
imul
adc
mov
add
dec
or
dec
mov
das
repz
fsubrs
lock
add
lods
mov
cmp
mov
hlt
and
mov
int3
jge
mov
xchg
sahf
xor
jo
cmp
cwtl
add
clc
mov
loope
pop
popa
pop
xchg
sti
sub
mov
dec
or
mov
xchg
mov
and
ljmp
sub
add
jmp
mov
imul
mov
in
sub
dec
cmp
out
xchg
icebp
cli
inc
inc
scas
mov
jle
pop
aad
or
mov
insb
xchg
mov
into
add
cmpsb
jmp
les
mov
pop
sahf
mov
mov
stos
call
push
add
gs
rorl
jg
scas
pop
loop
dec
enter
in
mov
inc
neg
dec
adc
or
insl
loope
jns
hlt
movsb
push
mov
cmp
pusha
int
dec
xor
out
stc
ret
jo
sti
je
mov
sahf
mov
pop
insb
jecxz
add
pop
sbb
test
dec
inc
test
adc
stos
repz
cmp
fstpl
gs
pop
push
in
rcrl
scas
add
xor
sub
sbb
clc
mov
sbb
lahf
icebp
xchg
xor
jno
int
mov
or
jge
mov
adc
data16
jno
pop
jl
iret
cmpsl
dec
popa
xor
iret
adc
outsb
sub
in
jne
sub
leave
inc
ret
pop
sbb
movsb
sbb
mov
repnz
mov
pop
inc
hlt
inc
aaa
xor
sbb
rcr
push
fs
jg
sub
mov
dec
lcall
inc
sub
ficoms
xchg
xor
sbb
insb
mov
mov
repz
pop
outsl
fs
pop
arpl
cli
pop
adcl
mov
adc
cmp
inc
and
adc
fsts
and
roll
add
xchg
orb
cs
cltd
mov
xor
scas
jno
in
ret
mov
aad
pop
xorl
inc
ja
loope
add
mov
and
cmc
cmc
pusha
add
in
and
dec
into
xor
cli
inc
push
test
clc
pop
and
inc
sub
jno
icebp
jnp
dec
mov
add
sahf
lds
pop
loop
inc
aam
nop
push
fldenv
inc
or
shlb
inc
pop
ret
xchg
and
pop
das
iret
mov
xchg
aad
loop
aam
dec
mov
roll
sti
mov
jp
mov
cmpsb
xor
hlt
fadd
xor
test
out
mov
loope
cmp
mov
out
jl
push
jmp
mov
xlat
pusha
xlat
clc
add
cmp
popf
add
loopne
or
enter
aad
stos
dec
and
mov
add
imul
push
or
ljmp
insl
inc
jmp
adc
les
mov
cwtl
push
loop
inc
dec
and
test
scas
or
mov
xchg
xor
mov
sub
xchg
push
push
xchg
mov
push
adc
and
xchg
dec
xor
adc
xor
iret
jle
push
sub
pop
or
cmp
push
cmc
fistpll
mov
mov
mov
pop
ret
mov
xchg
stos
push
mov
xsha256
cmpsb
push
and
das
mov
sbb
rorl
loop
push
adc
xchg
fisubrl
orb
cs
xor
mov
imul
and
lcall
lods
push
sub
cmc
jmp
jnp
enter
lods
push
dec
gs
push
clc
inc
into
lods
enter
je
pop
sbb
lock
shl
sub
addb
negl
and
pop
repz
push
ja
inc
sub
sub
sub
adc
inc
roll
fimull
popf
je
jo
dec
cmpsl
inc
jo
or
pop
jb
ficoms
push
stos
rcrl
mov
cmp
sub
in
sbb
cmpl
inc
inc
int
mov
es
lea
pop
ja
sub
clc
sbbl
imulb
leave
shl
xchg
lahf
notl
repz
cld
or
cmp
incb
movsb
dec
clc
lcall
dec
add
push
or
fstsw
in
dec
stos
aad
mov
int
popaw
les
mov
das
popa
or
imul
out
or
cmpb
mov
sbb
insl
call
shlb
pop
mov
aas
pop
sub
stos
add
filds
insb
add
or
ljmp
adc
inc
in
insl
pop
mov
mov
cld
push
jo
xor
fwait
daa
in
jb
push
push
adc
xor
aam
sbb
jno
cld
fwait
and
int3
mov
aas
adc
vpaddb
imul
pop
pop
push
mov
push
jnp
push
sub
mov
mov
mov
push
lahf
mov
daa
adc
adc
or
shrl
mov
movsb
jne
lcall
rcrl
insb
mov
mov
fimull
mov
mov
in
and
dec
xlat
push
and
pop
mov
push
xchg
jmp
cmp
jle
sbb
nop
push
pop
dec
pop
push
sti
adc
sub
sbb
jo
add
jae
fiaddl
cmp
fs
je
or
pop
dec
jp
ret
pop
pop
push
pop
lods
arpl
iret
sub
adc
push
ret
es
inc
call
mov
lods
sub
xor
aas
cmp
xchg
aad
loop
mov
popa
in
jmp
loop
dec
push
cli
xchg
dec
xor
out
mov
in
aas
movl
test
jle
push
stos
jno
lcall
popf
jecxz
xchg
enter
inc
push
jp
test
jp
cmp
out
aaa
ljmp
outsl
inc
mov
ret
sub
push
pusha
xor
pop
inc
and
movsb
mov
pop
mov
mov
add
and
out
imul
iret
hlt
xchg
push
cmp
lcall
sbb
nop
scas
jecxz
dec
loop
aas
push
mov
or
jo
jbe
incl
mov
aad
jl
aas
inc
dec
adc
adc
add
cwtl
jae
xchg
lea
xor
popf
into
aas
mov
stos
test
mov
lret
test
or
sub
push
popf
lret
mov
adc
jle
adc
add
inc
stc
imul
cmp
pop
mov
push
dec
sub
lds
and
xchg
iret
sar
sbb
sub
pop
mov
or
out
inc
jbe
pusha
int3
mov
in
jmp
int
js
xchg
outsb
sbb
inc
cltd
lret
push
out
mov
out
inc
test
adc
or
in
iret
mov
jb
stos
cmp
notb
xor
mov
cmp
cmc
pop
mov
fdiv
xor
arpl
gs
pop
lcall
cmp
and
cmpsl
xchg
lahf
loopne
push
or
add
leave
xor
xlat
pop
push
test
inc
or
mov
or
repz
mov
in
sub
sarl
repnz
dec
aad
mov
aas
popa
sub
adc
incb
inc
loop
fnstcw
ja
mov
imul
xchg
dec
enter
jbe
cmp
clc
xor
rcl
mov
test
in
inc
pop
sub
cmp
call
pop
and
sar
cmp
mov
fs
jbe
cmp
cmp
rcrb
mov
das
arpl
add
sbb
jae
jge
lret
fmul
outsl
jge
jne
iret
inc
pop
sbb
fwait
sarl
dec
mov
or
or
in
shlb
push
das
mov
sub
mov
es
jo
mov
in
outsl
add
sbb
cmc
cmp
add
aas
mov
fimull
inc
cmpsl
mov
outsb
dec
jmp
sbb
xor
inc
es
mov
dec
data16
loope
pop
adc
cmpsb
jno
push
call
sub
sub
loop
mov
xor
or
sub
jbe
into
fnsave
cmc
dec
out
repz
out
jle
push
and
fwait
add
sahf
aas
lods
mov
test
pop
lods
jmp
jle
jns
imul
nop
jno
cmp
dec
cmpb
lods
bound
das
test
lcall
push
test
subb
into
ret
inc
clc
cmpsb
loope
dec
stos
mov
or
in
scas
movsb
mov
or
int
pop
loop
jle
and
fdivp
push
je
or
push
test
sbb
je
mov
fldl2e
je
sbb
pop
fidivl
and
stos
mov
andl
push
pop
xchg
push
cmp
sbb
in
jae
dec
mov
cld
out
jns
add
adc
mov
iret
movsl
fildl
fsubrs
mov
mov
out
cmp
out
lea
and
mov
ret
out
fdiv
adc
inc
sahf
std
cmp
mov
test
dec
out
xor
sti
repz
loopne
cmp
in
or
push
scas
jno
cmpsl
aad
pop
repz
add
pop
mov
pushf
xor
out
shlb
lds
test
fs
mov
fmull
in
lock
data16
adc
fsubs
sbb
inc
push
jmp
mov
pop
sub
or
mov
testl
sub
cs
push
clc
jnp
sti
add
push
cmp
popf
adc
dec
cmpsl
dec
xchg
push
lock
sub
lcall
mov
and
and
pop
or
ror
mov
cwtl
aad
aaa
sub
sbb
adc
jne
cmpsb
ret
mov
movsb
test
or
es
mov
shld
lods
enter
fisttps
inc
in
xor
jp
js
adc
loope
stc
fsts
sub
loop
xchg
cmp
mov
out
or
lahf
cwtl
jle
cs
dec
xchg
and
add
gs
and
xor
jp
jnp
bound
pop
cltd
dec
sbbl
dec
stos
mov
pusha
stos
fcomps
sbb
mov
dec
push
push
mov
rcll
mov
in
in
outsl
cmp
cld
sbb
sahf
mov
iret
rcrb
fidivrs
test
cwtl
repnz
xor
adc
jle
fists
leave
push
push
test
xchg
push
add
push
sbb
cmp
pop
loopne
mov
cltd
cmp
or
popf
scas
sub
out
mov
les
insl
jne
cmp
mov
add
sbb
and
mov
sbb
or
cli
add
jp
fwait
and
shll
loop
pop
dec
addr16
out
ja
loop
adc
pop
sub
sbb
cmc
mov
popa
fisttpl
test
hlt
jl
test
dec
xchg
jge
xor
mov
dec
mov
jae
xchg
lret
xor
mov
insb
fimuls
mov
push
xchg
and
mov
dec
idivb
scas
inc
dec
stos
inc
mov
orb
xlat
jmp
les
imul
pop
repnz
js
pop
or
mov
loop
cmp
jge
and
xor
jl
mov
push
mov
outsl
fcomip
or
xchg
and
sub
sti
pushf
test
xor
jbe
xchg
inc
mov
sbb
xor
mov
mov
ret
jl
mov
inc
and
imul
cmp
mov
in
xor
fistl
xchg
int3
ds
clc
insb
inc
inc
sarl
and
out
ljmp
pop
mov
movsl
lock
xchg
or
clc
out
stos
jnp
dec
ret
pusha
mov
jecxz
stos
call
xchg
stos
rorb
dec
xor
mov
cmp
push
movsl
xor
scas
out
inc
jecxz
sahf
imull
and
push
sub
or
add
enter
cltd
pop
and
xlat
and
cmp
fwait
loopne
xchg
add
jp
je
popa
subl
testl
xchg
xchg
inc
dec
jp
cld
dec
jg
mov
mov
or
inc
into
xor
cmp
mov
add
mov
sbb
adc
dec
mov
xlat
sti
dec
add
and
lahf
data16
aad
outsl
sub
addl
dec
cmp
std
mov
scas
pop
sar
pushl
fisubs
mov
xlat
cmpsb
mov
sub
fs
fisttps
cmpsb
sub
cmp
cmpsl
ja
fmull
mov
or
movsl
ret
data16
dec
leave
call
inc
mov
mov
minps
test
iret
aam
pushf
jbe
in
mov
mov
or
pop
mov
pusha
ja
cld
aad
addr16
out
pop
mov
mov
adc
jne
test
jae
sarl
mov
inc
imul
mov
push
push
xor
cmpsb
ret
inc
imul
adc
ret
pop
leave
dec
cmpl
stc
jnp
add
sub
sbb
jecxz
movsb
pop
insl
jl
mov
mov
xchg
xchg
stos
cmp
pop
daa
fcmovbe
sbb
add
mul
jb
pop
call
pop
push
and
mov
or
push
adc
cmp
aas
mov
push
outsb
fwait
xor
inc
loopne
mov
cwtl
rol
imul
jo
popf
push
iret
sub
jne
cltd
sti
repz
xchg
push
xorl
mov
mov
mov
lcall
adc
arpl
lods
dec
push
add
inc
loope
and
cmp
inc
fdivl
mov
dec
pop
xor
out
dec
jg
test
incl
outsl
adc
jbe
mov
fmuls
pslld
add
dec
jae
cmp
cmpsl
into
or
lods
add
mov
popa
push
inc
int
push
mov
js
test
mov
outsb
jo
add
jmp
loop
test
bound
in
cmc
jecxz
xor
outsl
mov
add
sub
fldcw
test
mov
xlat
and
xchg
stos
xchg
movsb
negb
test
insl
mov
sub
rorl
mov
push
jmp
pop
sub
das
bound
shrb
mov
dec
cltd
fsubs
mov
inc
pop
dec
stc
mov
cmpsl
xchg
lock
imul
inc
clc
lret
fs
cs
push
and
jbe
jbe
pop
mov
insl
mov
push
adc
sbb
popa
loop,pt
mov
adc
pop
jns
daa
jno
jg
and
loop
or
mov
enter
lock
xchg
inc
in
lahf
outsl
or
sbb
and
mov
sbb
or
shrl
cmp
or
sbb
jge
jne
xchg
repz
cli
rorl
push
popa
mov
jns
sbb
ss
and
ficomps
xchg
movsb
mov
mov
fsubr
loopne
ljmp
rcrl
out
adc
add
mov
dec
mov
mov
mov
xor
in
sti
push
add
movsl
out
rclb
rclb
jecxz
jno
mov
lods
mov
sub
icebp
jl
fistl
insl
cmp
daa
rolb
aad
cs
mov
pop
loop
hlt
xchg
scas
adc
inc
sbb
testb
aas
xlat
xchg
mov
ret
cmp
xchg
rcr
mov
out
mov
cmp
jg
repz
sbbl
inc
add
hlt
mov
ljmp
sub
loop
push
aam
jae
cli
xor
jb
lods
inc
sbb
and
dec
xchg
xchg
movsl
fnstsw
lods
add
out
loopne
flds
push
dec
dec
push
adc
cs
mov
mov
adc
xchg
sbb
loope
and
jle
adc
movsb
rcrl
in
sbb
into
push
cmpsl
push
in
cmpsb
fisttpl
ss
shlb
sub
stc
in
ret
test
jecxz
lds
and
cmp
lods
popa
in
inc
lret
xchg
mov
cmp
repnz
lods
and
xchg
sbb
mov
mov
inc
push
idivl
aaa
in
and
sbb
sbb
cld
pop
sub
add
mov
push
movsb
ret
and
jecxz
aaa
dec
adcl
inc
pop
pop
adc
in
and
call
sub
js
cwtl
sbb
lods
mov
xor
push
out
in
sub
or
mov
lock
push
js
xchg
jno
lds
clc
xor
sbb
sub
jp
ficomps
cmp
into
pop
adc
push
xor
mov
jo
xor
notb
fildl
dec
mov
mov
or
jae
iret
xor
jg
sahf
xchg
cmpsl
sbb
lea
lds
mov
mov
or
mov
and
adc
xchg
adc
add
js
imul
adc
subb
pop
jp
xor
pop
mov
fsubr
xchg
cs
mov
loop,pn
jne
out
fsubrp
inc
stos
mov
jp
pop
testl
xchg
repz
ret
xchg
je
addr16
shlb
fwait
push
icebp
out
and
and
sbb
mov
push
sub
js
in
std
xchg
cmp
xchg
arpl
insl
add
fscale
loopne
sahf
out
adc
popf
and
das
inc
inc
push
pop
xchg
loope
mov
out
sub
sbb
mov
imul
mov
rclb
ljmp
push
jb
pop
push
lahf
ljmp
xor
clc
or
dec
out
push
imul
jle
iret
adc
xor
frstor
out
inc
mov
or
push
es
xor
cmp
leave
push
jg
subb
and
or
mov
push
cmp
ret
js
cmpsl
rcrb
inc
cmp
inc
fwait
cwtl
movsl
adc
leave
or
cltd
packssdw
or
lahf
out
add
pop
push
dec
aad
mov
daa
imul
testb
out
das
sbb
sar
jle
fmull
div
clc
mov
int3
rolb
popf
test
mov
dec
in
xchg
and
sub
jmp
cwtl
push
cltd
ljmp
inc
jo
add
pop
out
adc
sbb
push
ja
mov
inc
fldt
dec
cmp
mov
jl
fnsave
add
and
stos
push
call
loop
dec
or
or
and
test
lcall
jmp
pop
addl
and
xor
stos
or
xor
addb
mov
js
lods
dec
fadd
daa
push
adcb
adcb
test
pusha
lods
sbb
mulb
cmp
jnp
sub
insl
lds
orb
fnstenv
mov
es
xchg
fwait
arpl
je
adc
mov
xor
loop
xor
inc
pop
sbb
xlat
jbe
xchg
xchg
in
and
lods
cmp
cmpsb
subl
in
out
jo
jno
nop
adc
std
roll
movsl
mov
and
stos
dec
push
sahf
mov
jg
sub
les
cmp
movsl
dec
cli
hlt
popf
xor
xor
ss
and
fs
adc
sbb
adc
jle
aaa
je
je
jbe
enter
negb
cmpsl
sarl
jmp
mov
pop
stos
mov
push
xchg
scas
sub
inc
scas
aaa
pop
mov
push
mov
jl
mov
pop
adc
cmc
popa
mov
test
jl
insl
mov
adc
sub
mov
jl
pop
or
stos
add
flds
rorb
arpl
outsb
movsb
dec
jnp
jge
inc
and
inc
or
jp
clc
dec
sarb
sahf
movsb
lea
jge
mov
enter
cmp
sub
nop
sub
cmp
stos
das
sbb
pop
stc
jmp
ljmp
rcl
sbb
loop
mov
xor
cli
jmp
mov
pop
es
test
cli
popf
js
mov
sarb
loope
aaa
or
sub
cmpsb
nop
je
rcl
ljmpw
mov
ja
outsb
xor
cmp
jp
loope
loop
add
pop
cs
stos
aas
jo
gs
sbb
aam
mov
ss
cmp
pop
cmpsl
sbb
and
push
hlt
mov
lret
mov
cli
jo,pn
jne
cmp
xchg
mov
jne
inc
cmp
ret
js
repnz
movsb
jge
ljmp
stos
jb
pop
adc
mov
dec
or
sahf
mov
mov
out
and
test
sub
pop
sbb
xor
repz
adc
pop
out
or
xorb
into
xchg
pop
fsubrl
popf
or
inc
mov
mov
or
inc
into
cmpsb
sbb
lock
aaa
movsb
push
xchg
cmp
inc
fnsave
shll
fwait
popa
mov
stos
dec
lret
push
int3
fimull
add
imul
adc
out
mov
push
jnp
push
cmpl
rorb
sbb
dec
je
sbb
pop
xchg
in
in
bnd
and
dec
ja
jmp
test
cwtl
add
jl
jg
mov
mov
dec
repnz
add
cmp
cld
int3
xchg
jl
mov
inc
lds
popa
mov
sbb
dec
cmp
insl
lea
enter
xchg
ret
hlt
in
inc
pop
jge
cmp
jmp
es
out
pop
push
jne
sbb
cltd
cs
mov
daa
cmpsl
adc
push
xchg
jmp
inc
aad
inc
inc
and
jp
imul
addr16
or
insb
push
rcr
and
int3
lret
mov
cwtl
or
rorb
loope
fmuls
test
and
imul
std
add
js
lods
pushf
pop
dec
sub
mov
mov
dec
cmpsb
inc
int3
and
pop
dec
cmp
ret
movsb
xchg
fadds
mov
or
add
pop
add
push
insb
add
jne
mov
and
xor
in
pop
imul
lods
insb
cwtl
aas
dec
jns
incb
mov
clc
fistpl
gs
pop
xchg
add
cltd
push
mov
pop
pop
xor
push
leave
xor
mov
jno
addr16
or
pop
andps
adc
xchg
fsubrp
data16
scas
xchg
cmp
mov
mov
in
cld
out
dec
fnsave
push
incb
aas
xor
push
cmp
out
adc
sbb
mov
xor
cmpsb
cmc
push
pop
xlat
repz
out
fbld
pop
rorb
fwait
inc
int3
ljmp
clc
popf
rcll
ljmp
lahf
insb
cwtl
add
movsb
data16
cs
xchg
imul
movsl
jle
push
sub
scas
mov
lods
pop
mov
mov
jp
pop
fmull
add
sub
fiadds
dec
lret
xlat
test
lcall
jle
cwtl
mov
cmpsb
lods
and
repnz
mov
and
mov
jbe
sub
xlat
jle
mov
in
cmp
mov
je
lcall
xor
iret
adc
jmp
xor
testl
testl
inc
movsl
push
loopne
push
std
in
fsubrs
mov
adc
mov
lds
add
or
add
ss
inc
push
fimuls
test
in
xor
or
cmc
gs
push
cmpsb
shlb
dec
xor
push
in
dec
call
cmpsl
push
dec
adcb
sbb
aaa
enter
pop
push
in
sahf
mov
mov
in
xchg
repz
mov
xchg
sub
daa
pop
lea
lods
adc
ficomps
psllq
add
pusha
in
mov
sti
mov
lcall
jno
sub
arpl
cwtl
xlat
xchg
in
ljmp
rcrl
gs
pusha
sub
mov
insl
popf
or
in
aaa
insb
fidivl
daa
into
mov
jp
fstl
push
sti
inc
pushf
jnp
jne
pusha
mov
cmpw
loop
dec
dec
xchg
xor
mov
mov
push
dec
data16
rorb
das
sub
jge
ror
mov
jle
mov
cmp
mov
xchg
xlat
dec
add
call
aam
pop
jp
in
sarl
loopne
cltd
les
mov
insb
mov
jmp
mov
nop
and
inc
sub
into
xlat
in
mov
in
push
test
sbb
ljmp
out
xchg
arpl
ja
in
dec
inc
int3
jo
dec
pop
jo
xchg
add
mov
sub
jle
mov
push
cmp
gs
bswap
popf
or
lret
test
loope
je
fistl
or
xor
neg
pop
arpl
test
or
out
das
fimull
test
aam
movsl
mov
pop
or
dec
mov
cmpsb
dec
sbb
cmpsb
cmp
push
adcb
sahf
jecxz
and
pop
mov
cmp
bound
mov
push
stc
insb
xchg
jmp
pusha
pop
mov
insb
fcomps
mov
lret
mov
lds
xchg
or
push
into
jns
cmp
ljmp
dec
and
scas
lds
or
mov
cs
cmp
xorb
dec
pop
addb
adc
xor
mov
push
cmp
cmp
xchg
inc
sbb
cmpsb
sub
stos
bnd
lea
xor
shr
loope
jge
in
jp
sarl
or
pop
xor
dec
je
aad
adc
cmp
jg
aaa
mov
add
and
mov
std
jae
mov
mov
ret
jge
cld
shr
das
xchg
pop
push
int3
lret
or
aaa
add
mov
je
out
mov
sarb
mov
shl
loopne
adc
arpl
dec
ljmp
mov
jl
popf
stc
adc
inc
push
sysret
loope
pop
mov
cli
or
jo
mov
cwtl
fdivs
jp
xor
stos
push
mov
mov
inc
addl
test
rcll
lds
dec
notb
out
std
daa
jne
xchg
aad
or
mov
adc
mov
out
lret
aam
jno
pop
xor
sub
jp
ficomps
dec
sub
stos
xor
fdivrs
dec
adc
push
jmp
add
insl
push
dec
adc
sub
mov
xor
xchg
orl
shlb
pop
into
addb
pushf
jg
mov
dec
adc
adc
mov
fstpt
cld
scas
shll
fs
mov
sbb
push
sbb
andl
mov
je
or
mov
adc
dec
aad
push
andl
pop
add
or
mov
mov
mov
je
jmp
push
xor
mov
mov
mov
cli
lahf
lock
mov
cld
mov
outsb
out
sbbb
and
add
stos
xchg
pop
std
inc
mov
pop
jp
cmpsb
dec
mov
adc
fisubl
mov
or
push
das
shll
mov
jmp
inc
sub
xchg
popf
jmp
stos
in
xlat
jne
bound
inc
pushf
test
in
pop
outsb
dec
mov
jae
in
pop
out
loop
or
xchg
inc
mov
out
inc
cmp
aas
lods
data16
sub
adc
ret
xor
mov
imul
xor
sbb
pop
pop
leave
pop
testl
test
mov
jbe
das
imul
mov
lcall
cmp
sbb
adc
ret
outsb
and
push
test
jl
mov
fwait
push
mov
mov
push
cmpsb
inc
pop
or
popl
ss
pushf
loopne
inc
fstp
inc
dec
add
jle
xlat
cmpsl
lcall
jle
imull
sub
lcall
and
inc
xor
insb
mov
add
aad
mov
dec
mov
mov
pop
loope
fdivs
cmpsb
pop
xchg
imull
and
stos
add
imul
cmp
adc
adc
add
iret
fwait
mov
cmp
mov
pop
cmp
add
cmp
mov
jne
shl
cld
cli
sbb
stc
xchg
or
icebp
cmc
outsb
mov
jmp
stos
and
jnp
add
jl
imul
push
jns
jb
or
test
ret
idiv
andl
cmp
jg
pusha
mov
fists
mov
and
aaa
test
scas
cmp
mov
adc
ret
fs
or
filds
cmpsb
sub
mov
outsl
ja
lret
cmp
neg
dec
leave
adc
flds
push
aaa
cwtl
push
jne
mov
jb
outsl
adc
cmp
sub
adc
jnp
push
mov
dec
mov
daa
jnp
cmpsl
int3
mov
pop
mov
mov
push
lods
mov
pusha
ret
cmp
lds
cmp
cwtl
add
jg
inc
movb
mov
and
cld
dec
or
cltd
mov
xor
xor
in
pop
cli
pop
inc
xor
lret
mov
cs
mov
dec
inc
adc
cmp
lret
sub
scas
pop
jb
sub
push
cli
test
sbb
fbstp
ja
jae
icebp
sti
stc
enter
push
test
mov
addr16
push
orb
lock
outsl
adc
adc
add
out
pop
fdiv
mov
out
popf
inc
cmp
xchg
out
sbb
rcrb
shrl
adc
mov
mov
mov
jae
mov
add
mov
push
sbb
stos
test
subb
dec
sbb
sbb
test
fwait
mov
push
lahf
and
aad
mov
and
fwait
imul
dec
jp
jb
xor
and
nop
adc
imul
mov
sbbl
test
or
dec
test
sbb
jle
push
push
fs
sbb
and
aam
stos
insb
pop
push
addr16
jo
cmp
daa
or
and
push
push
add
fsub
cmpsl
sarl
cwtl
mov
push
ljmp
fstpl
jne
sbb
adc
xchg
ljmp
adc
sbb
cld
jns
jns
decb
mov
mov
add
in
fidivrl
jo
mov
in
orl
xor
imulb
jl
fcmovbe
xor
mov
imul
or
push
shl
jmp
jnp
shr
mov
imul
daa
pop
dec
sbb
dec
cmp
cld
lds
adc
das
mov
inc
xchg
adc
xchg
xchg
sbb
test
mov
aad
pop
jns
push
push
mov
out
adcl
or
sbb
filds
cmpsb
in
and
sub
adc
lods
xchg
mov
and
stos
mull
fcmovne
in
shrl
aad
add
xchg
inc
mov
and
mov
sub
test
xchg
pop
fildll
xor
pop
jmp
pushf
mov
sub
test
repz
loopne
mov
and
jns
push
out
sub
xchg
andl
sbb
jge
push
nop
xlat
mov
and
gs
xor
jmp
mov
xor
aaa
nop
jg
idivb
push
call
loopne
in
cmc
xor
ss
sbb
orl
mov
mov
int
mov
mov
cmpsb
mov
lret
add
mov
jbe
push
dec
mov
les
pusha
mov
or
testl
repnz
je
add
mov
push
dec
negb
aas
jle
cwtl
fwait
or
pop
and
cli
mov
jns
adc
jo
arpl
or
cmp
sti
push
filds
pop
cltd
aaa
xchg
inc
sbb
pop
cmp
bound
fstl
ds
fcoml
loopne
pusha
sarl
sub
movsb
lds
jne
cmc
mov
jno
jb
cmp
or
cmp
jge
dec
inc
mov
push
fwait
test
es
mov
roll
jecxz
popf
test
clc
jne
dec
sub
addr16
mov
inc
xor
iret
test
mov
xor
push
mov
pop
hlt
movsb
adc
sbb
jmp
je
popa
in
cli
cmpsl
in
jmp
jne
mov
push
jecxz
in
or
hlt
inc
mov
out
into
insl
dec
pusha
sub
xor
xchg
dec
pop
iret
loope
push
loope
pop
imul
ret
push
adc
jmp
jg
sub
lahf
push
sti
les
ljmp
aaa
addr16
xlat
in
dec
je
in
dec
repnz
sub
out
imul
dec
adc
mov
in
mov
fidivrl
imul
sbb
and
scas
lcall
and
imul
in
dec
gs
std
aas
imul
push
sti
cs
fdivs
aaa
call
insb
push
pop
hlt
dec
test
pop
ja
lret
int3
lret
sbb
mov
test
adc
adc
lcall
imulb
push
bound
subb
dec
push
xchg
sub
cmpsl
xor
sti
test
rorl
mov
cmp
int
sbb
xor
test
lds
lods
sti
popa
stos
mov
cmpsb
push
jmp
xchg
insl
xchg
push
ja
pop
das
mov
jl
fcmove
sbb
lods
mov
fdivrp
adc
lret
xorb
cmp
jle
ds
fstps
jmp
pop
mulb
out
mov
fmull
test
fnstcw
sbb
mov
pop
in
repnz
jp
and
push
adc
mov
cwtl
mov
insb
loop
test
lcall
jmp
and
js
mov
mov
cmp
jb
shll
or
daa
cmp
cld
xchg
cmp
add
xor
outsb
call
jne
mov
xchg
jecxz
ja
lods
int
mov
ljmp
or
mov
fisttps
pop
and
or
enter
xchg
adc
aad
stos
test
scas
adc
mov
lcall
sub
stc
mov
stc
push
in
adc
shl
push
shrl
xor
jb
scas
pusha
imul
push
and
jecxz
fidivs
dec
loopne
mov
xchg
jge
inc
data16
cld
mov
mov
arpl
repnz
pusha
inc
mov
xor
test
call
aas
adc
or
stc
pop
add
push
dec
sub
ret
addr16
repz
movsb
fdivrl
rcrb
pop
jbe
or
jne
in
lret
rol
subb
and
out
fdivl
jbe
push
pop
clc
inc
cli
xchg
out
ss
test
scas
ss
and
and
push
or
stos
mov
sti
into
pop
gs
ljmp
fwait
aas
jb
jne
inc
repz
mov
sub
outsb
int
jbe
cmc
test
in
xchg
cmp
xchg
cmpsl
inc
stos
xchg
pusha
hlt
in
lods
xor
mov
addr16
adc
js
shll
gs
pop
push
sub
xchg
sub
ret
dec
lahf
hlt
mov
push
mov
jge
shr
andb
outsl
lahf
inc
xor
out
in
pusha
scas
stc
cltd
xchg
scas
xchg
clc
mov
inc
cmp
mov
arpl
push
xor
ds
clc
xchg
sbb
adc
fmuls
popa
pop
cmp
aam
mov
imul
aas
inc
in
out
mov
repz
jl
cmp
inc
xchg
std
adc
xchg
mov
pop
scas
mov
pop
pop
and
sarb
xchg
shl
test
cmp
outsl
or
add
lret
mov
lds
test
in
push
push
testl
aam
push
fcmove
popf
adc
lret
je
mov
mov
icebp
rcrb
push
je
cmp
out
jo
push
dec
adc
fildll
dec
and
and
push
leave
dec
insb
push
xchg
stos
inc
sub
lcall
mov
sbb
push
cld
sub
pushf
mov
xor
mov
cmpsl
and
fstps
xchg
add
push
int
in
lret
jae
xor
in
cmp
mov
sbb
int3
mov
mov
repnz
add
data16
mov
or
mov
data16
dec
mov
testl
adc
or
add
and
jmp
push
xchg
mov
mov
jbe
or
jae
cmp
icebp
imul
fsub
fdiv
lods
inc
inc
mov
jne
pop
outsl
jl
mov
sti
fnstsw
sub
mov
data16
inc
in
pushl
sub
add
add
or
stos
mov
or
pop
ret
test
pusha
dec
jle
dec
mov
ja
sbb
push
jb
mov
rcr
aam
fldt
jp
push
and
inc
lods
push
lea
xor
faddp
idivl
js
push
sbb
mov
xchg
add
popf
sub
sbb
pop
dec
jle
fsts
outsl
ja
pop
jecxz
stos
jo
out
sbb
lock
inc
pusha
enter
inc
inc
mov
mov
hlt
push
lock
ret
push
in
sbb
push
mov
mov
cli
dec
mov
add
sahf
rorl
test
mov
adc
pop
sahf
cmp
cld
ss
mov
mov
in
movsb
pop
pusha
not
leave
ret
ret
insb
pop
jp
mov
out
mov
sbb
pop
jns
addr16
sti
fucom
add
loop
adc
les
repnz
jno
fsubrs
mov
push
leave
mov
cs
xchg
imul
and
insl
mov
push
and
hlt
pop
push
sbbl
sub
mov
mov
test
ja
cltd
sbb
popa
xor
scas
mov
adc
cmp
push
cs
jmp
dec
stos
stos
mov
cmp
sub
lcall
sbbl
cwtl
stos
dec
cmp
rorl
adc
push
negl
add
inc
roll
das
ss
cmc
in
stos
mull
in
inc
mov
jno
add
fsub
mov
ljmp
push
ror
pop
mov
movsl
mov
add
sbbb
adc
aad
or
fsubr
call
movsl
cmpsb
stos
xchg
cwtl
cs
mov
jle
pop
filds
push
negl
flds
xor
inc
lds
mov
test
repnz
fdivr
mov
mov
mov
push
hlt
test
mov
cwtl
daa
mov
mov
sbb
jae
fsubs
cwtl
mov
adc
mov
sarl
ds
mov
cltd
jg
into
and
pop
mov
mov
push
test
add
mov
xor
lds
call
lcall
sbb
inc
jmp
cmp
ret
ror
out
push
mov
ret
cmpsb
movsl
or
fcomip
xor
pop
inc
andl
xor
cmpsl
hlt
push
mov
test
into
push
mov
add
loop
pop
test
mov
mov
pushf
movsb
int
aaa
mov
int3
xchg
push
test
and
inc
xchg
dec
je
dec
push
jle
push
pop
leave
scas
int3
fs
nop
jge
aad
lea
rol
jp
xchg
cmp
ficomps
ljmp
cwtl
adc
cli
in
sub
xchg
ss
movsl
cltd
xor
test
jns
lcall
aad
sti
scas
lods
into
aad
pop
xor
pop
or
cwtl
xchg
call
or
inc
lret
out
sbb
xor
jbe
sbb
cmp
cmp
inc
cld
sub
jae
adc
or
add
pop
or
mov
icebp
lock
popf
dec
sub
and
xchg
int
push
subl
sbb
or
and
jnp
pop
out
and
mov
push
mov
xor
std
push
mov
push
lahf
dec
sbb
mov
int
or
push
cmp
fidivs
movsl
inc
arpl
in
outsl
movsl
push
adc
mov
pop
push
test
mov
mov
pop
xor
adc
adc
pusha
popf
data16
sub
pop
sahf
add
call
pop
xorl
cmp
fcmovnb
mov
movsl
mov
scas
mov
repnz
sub
cwtl
pop
mov
lea
jb
mov
xchg
cmpsl
mov
mov
sub
xlat
pop
insl
jmp
test
dec
nopl
cmp
lds
inc
and
imul
mov
xor
icebp
inc
das
sbb
pop
pop
stc
lds
add
inc
data16
out
mov
repnz
push
nop
subl
fcmovnu
mov
jnp
dec
loop
pop
xchg
aaa
mov
notb
mov
cmp
inc
pop
out
pop
les
rcll
fadds
jp
movsl
rcrl
xor
fistpll
enter
mov
aad
cmp
in
jo
in
movsb
aas
ss
shrb
jle
mov
sti
cltd
xlat
sahf
iret
out
out
jbe
cmpsl
add
sahf
pop
mov
cld
out
pop
jo
xchg
or
aad
scas
sub
jmp
and
insl
addr16
inc
mov
not
cmp
fs
popf
arpl
movsl
xchg
ja
jno
dec
pop
js
notb
or
adc
pop
and
test
and
loopne
pop
push
and
xchg
out
cmc
mov
inc
push
cmp
push
les
sbb
mov
dec
adc
cli
xchg
mov
pushf
iret
xchg
jp
inc
jb
cwtl
mov
iret
dec
je
shr
shrb
xchg
daa
or
add
inc
cmp
push
lock
mov
push
jle
out
and
inc
lcall
mov
andb
dec
push
fcoms
aaa
cld
cli
xor
loopw
mov
mov
adc
dec
call
mov
mov
stos
fwait
sti
xchg
imul
andb
xor
mov
adc
inc
or
cmp
dec
and
leave
xor
mov
push
imul
jmp
cs
dec
mov
cmp
jle
aam
arpl
push
shrl
or
push
lcall
jns
test
sub
push
xchg
mov
loopne
pusha
push
adc
in
inc
test
add
inc
xchg
mov
mov
pushl
test
aam
ljmp
mov
aaa
das
add
ss
call
insl
or
jle
insl
mov
push
xor
sub
cmp
pop
or
notl
ljmp
faddl
mov
mov
lret
xlat
inc
push
sti
in
sbb
aam
jnp
out
mov
push
mov
xchg
fwait
mov
cmpsl
orl
and
je
dec
cmp
cmp
cmp
adc
xlat
mov
dec
xchg
add
add
js
in
mov
fidivrl
ds
gs
cmc
jnp
je
mov
mov
insl
aad
mov
cwtl
adc
out
inc
stos
ljmp
pushf
push
or
mov
shrl
dec
push
mov
and
movsl
aam
popf
sub
loope
ret
dec
add
pop
xchg
addr16
xchg
jo
add
rclb
sbb
popf
pop
lock
imul
gs
push
dec
call
gs
mov
test
pop
aaa
push
xchg
lea
pusha
push
imul
cmc
cld
push
stos
in
mov
sbb
pop
xor
push
inc
add
outsb
mov
lea
imul
xchg
insl
sti
sub
out
mov
cltd
jmp
jmp
xchg
cmp
cld
xor
mov
sub
roll
inc
aas
test
xchg
push
in
mov
jo
cmp
data16
lahf
jp
push
int
add
push
push
insl
std
sub
orl
xchg
pusha
xchg
adc
iret
ss
or
scas
pop
sbb
fcomps
cmp
mov
bound
subl
mov
add
cltd
add
hlt
mov
or
push
push
mov
inc
or
inc
jne
xchg
mov
bnd
adc
cmp
or
or
mov
lea
out
cltd
mov
or
inc
xchg
sub
sahf
sub
or
mov
cs
add
jecxz
push
pushf
out
mov
and
sub
jbe
pusha
call
mov
sti
loope
in
call
inc
and
inc
inc
lock
std
cmp
inc
or
add
rol
push
leave
cmp
xchg
jg
imul
loopne
out
xchg
in
icebp
inc
xchg
sarl
idivl
nop
int3
xor
sub
push
add
push
fsubr
pop
ss
jo
imul
jne
mov
pop
out
xor
mov
push
outsl
jecxz
sar
sbb
or
or
movsl
repz
ljmp
pop
lret
add
add
nop
and
fadds
loopne
movsl
addr16
cmp
dec
pop
mov
fisubl
sub
fimull
jae
pushf
jmp
roll
int
push
or
sti
leave
dec
add
xor
or
inc
mov
mov
in
dec
lret
out
je
push
and
scas
cmp
test
push
push
pop
inc
sbb
jl
sub
push
cmp
push
push
or
test
fldcw
loope
in
inc
fsts
pop
lds
sahf
mov
stos
jp
divl
insl
dec
rorl
pop
int
popf
xchg
sarb
add
or
adc
jmp
imul
nop
aad
repz
outsl
push
cmp
xor
push
sub
push
ret
cmpsb
repz
dec
mov
inc
jno
outsb
sbb
sub
nop
mov
ret
jg
aad
sbb
and
mov
cmpsb
and
push
outsb
out
lods
dec
push
and
fidivl
push
jl
mov
in
push
std
dec
mov
or
ja
mov
int3
lea
mov
sahf
pusha
sub
mov
cmp
stc
ret
pop
sbbl
mov
pushf
pop
xchg
cmpsb
das
inc
subl
rcll
loopne
loop
cld
jbe
in
push
mov
test
cwtl
inc
adcb
jnp
bound
sti
clc
jb
jmp
jns
xchg
adc
das
call
cmp
jecxz
mov
out
mov
push
mov
jmp
das
dec
dec
xchg
inc
sub
xchg
sbb
feni(8087
pusha
out
jp
out
jp
ljmp
mov
pop
mov
jne
enter
pop
gs
pop
mov
or
cli
xor
mov
xor
das
call
mov
push
pop
daa
xor
dec
pop
mov
sub
push
cld
adc
insl
ds
add
aas
in
test
popa
pop
cmpb
les
dec
pop
les
inc
orb
cli
fildl
stos
daa
fmul
dec
movsl
sarb
cmpb
in
stos
or
arpl
ds
sub
mov
call
cmpsl
xrelease
fxtract
sub
pop
int
dec
outsb
cwtl
jmp
repnz
inc
dec
js
out
mov
or
sbb
shrb
adc
mov
adc
mov
jp
inc
xor
test
lds
jnp
andl
and
mov
outsb
cmpl
lcall
dec
inc
xor
pop
ret
fsubs
mov
iret
add
pop
jmpw
add
mov
push
cmc
xor
inc
lds
adc
jg
pop
sub
aaa
lods
pop
pop
xlat
and
cmp
loope
lods
outsb
pop
push
sub
xchg
das
int
jmp
adc
lods
mov
xor
mov
sub
lcall
jmp
fisubs
pushf
mov
mov
pushf
cmp
sbb
sbb
jmp
sub
mov
movsb
and
push
push
fidivl
aam
sub
cs
mov
mov
mov
test
orl
mov
and
shll
clc
icebp
pop
mov
addr16
ficoml
mov
pushl
data16
mov
lea
pop
dec
lcall
xchg
push
cmpsl
mov
rcrb
ret
sub
mov
test
mov
andl
bound
std
andl
push
fdiv
pop
and
xchg
lret
nop
out
jle
cmp
mov
out
mov
sub
shr
pushf
in
and
jnp
push
loop
in
imul
mov
lcall
dec
xchg
sbb
mov
ror
rcll
adc
lret
xor
add
or
sbb
adc
pop
scas
jo
push
or
xchg
mov
inc
movmskps
jmp
pop
in
sub
addl
push
jno
mov
out
jns
ret
jns
int
icebp
and
outsb
add
jno
lcallw
jmp
lret
push
sbb
ss
andl
mov
stc
pop
add
pop
inc
rcll
mov
sub
sub
cmpsb
lea
mov
sti
and
rorb
fisttps
test
ficompl
addr16
mov
xchg
rorb
pushf
popa
out
stc
fnstsw
xor
sub
mov
xchg
inc
movl
xorl
outsb
fidivs
in
sbb
cmp
jge
scas
adc
aam
je
mov
sub
mov
adc
das
pusha
out
scas
mov
out
adc
xor
shlb
and
mov
cld
push
pop
mov
and
fcmovb
test
sub
sbb
add
sub
mov
sub
mov
daa
xchg
xchg
out
xchg
lret
pushf
clc
pushf
xchg
dec
mov
add
ret
outsb
cld
jo
pop
scas
mov
sti
fbld
ret
inc
mov
lea
fs
sahf
stos
movsl
imul
icebp
xor
and
jl
cmp
imul
jl
lahf
sub
data16
aas
lcall
sti
iret
jle
pusha
mov
dec
xor
imul
jae
adc
loope
pop
icebp
aaa
daa
and
std
jle
mov
hlt
in
push
or
mov
xchg
enter
mov
dec
mov
insb
mov
cmp
mov
pushf
jb
ss
push
cmp
stc
cmp
aad
pop
les
add
leave
mov
js
jb
push
mov
testl
mov
xchg
daa
and
push
sub
out
ret
decl
sahf
jg
mov
mov
push
add
jns
xchg
xchg
jb
lock
ljmp
into
adc
pusha
xor
les
fistpl
jle
mov
xchg
imul
add
dec
mov
mov
shll
fnstenv
cwtl
test
add
int
xchg
xlat
sbb
negb
jmp
pop
cld
inc
addl
insb
icebp
out
pushf
stos
push
in
xor
pusha
shr
mov
scas
mov
std
push
sbb
inc
in
cmp
jbe
enter
rclb
adc
or
gs
test
ret
js
subl
aas
cmpsl
stos
xor
pop
mov
lahf
sbb
sbb
jno
sbb
in
add
mov
hlt
fcoms
out
mov
mov
jb
ss
jb
inc
loope
mov
jae
int
jb
into
inc
cmpsb
dec
xlat
or
ljmp
mov
inc
jne
test
dec
insb
or
inc
data16
push
add
xchg
scas
mov
dec
lcall
inc
xchg
or
mov
pop
lds
push
xchg
cmpsl
xchg
sarl
push
fstp
ja
cmp
flds
dec
mov
adc
mov
xlat
lods
jne
mov
cmp
adc
pop
fbld
pop
jnp
insb
cmp
push
mov
shlb
loope
xchg
ret
jg
das
ja
aad
data16
or
movsb
mov
or
movsb
cmp
xchg
loope
cmpsb
sub
add
mov
mov
stos
pop
enter
es
mov
pop
inc
sub
lahf
movsl
mov
call
outsb
dec
pushf
aaa
dec
iret
adc
inc
add
jbe
dec
or
jne
mov
xor
das
lock
sbb
mov
mov
cmp
cmp
popf
movzbl
arpl
dec
push
insl
aaa
into
test
loope
xchg
add
lds
mov
stos
mov
lock
test
pop
sbb
lret
mulb
jl
and
movsb
push
movsb
mov
gs
imul
jno
cwtl
pop
sbb
in
mov
xchg
mov
lret
icebp
jecxz
imul
xor
lods
arpl
pop
rorl
sbbl
mov
call
hlt
ret
loop
lods
int
mov
mov
inc
xor
arpl
sub
xor
and
xchg
mov
jne
lret
dec
jle
mov
sbb
pop
pop
clc
or
fdivr
dec
pop
lcall
stc
test
sti
and
jecxz
sub
xchg
mov
out
imul
outsl
imul
add
imul
stc
mov
and
push
rcrb
lods
out
dec
int
and
ret
out
push
or
and
xor
sub
pop
cltd
test
pop
int
adc
pop
xchg
fs
test
cmpsl
aam
and
or
xor
pop
pop
adc
arpl
dec
movsb
mov
sahf
jnp
nop
inc
sub
daa
lcall
int3
cmp
fsts
sub
sub
lock
test
xor
int3
inc
pop
pop
aaa
enter
push
mov
daa
add
xchg
scas
mov
cli
and
sub
dec
jp
jp
jae
or
lret
jae
shlb
ret
cwtl
in
add
ljmp
data16
push
arpl
repz
sbb
sti
and
icebp
xchg
sub
aam
insl
ja
inc
jnp
in
icebp
xchg
jl
pop
pop
mov
std
sub
stos
xor
jo
pop
or
pop
jo
dec
test
lds
int3
mov
pusha
jl
cmp
jo
inc
dec
add
stos
adc
dec
movsl
jl
mov
add
xor
sbb
pop
imul
mov
sbb
fwait
mov
test
loopne
cs
vpmacsswd
or
fsubrl
loop
mov
xchg
ljmp
mov
or
fidivs
aas
ds
pop
bound
jmp
cmp
jl
stc
sbb
lods
pop
call
sub
jae
xor
pop
imul
cmc
adc
jb
cmp
cli
aam
fisttpll
ljmp
or
mov
xor
add
sahf
daa
jns
and
jle
dec
mov
sub
inc
shlb
call
mov
mov
adcl
mov
jb
bnd
jnp
xor
mull
push
jb
movsb
push
shrl
xor
cmp
les
push
stc
mov
daa
cld
fldt
lds
frstor
jo
inc
fdiv
std
sbb
scas
rorb
aas
and
in
lds
pop
jns
ret
subl
andb
cs
sub
push
cld
popa
js
mov
and
mov
movsb
lea
loop
jmpw
out
aaa
es
aad
mov
out
je
pusha
dec
xlat
and
adc
pop
dec
inc
pop
fcomp
mov
mov
xor
inc
je
jp
push
das
lahf
xor
and
stc
sub
aaa
pop
add
daa
or
xchg
scas
cs
or
int3
and
scas
mov
jg
outsb
out
xchg
and
adc
insb
sub
or
sbb
dec
jo
mov
roll
push
xor
push
dec
mov
sub
sti
mov
inc
inc
mov
adc
lret
aas
jns
jae
push
int
mov
mov
dec
subb
mov
std
add
add
data16
cwtl
pop
mov
adc
sbb
push
ret
push
adc
mul
add
je
mov
adc
lret
push
cmpsb
hlt
and
roll
pop
and
movsl
out
xor
gs
and
sar
jl
sub
inc
push
mov
dec
rcrb
inc
xchg
shlb
xorl
das
sti
mov
clc
lcall
pushf
loopne
xor
hlt
sahf
pushl
subb
mov
dec
cmp
lret
adc
mov
jg
push
or
nop
and
clc
mov
repz
gs
mov
mov
test
pushl
lea
add
and
mov
add
cmp
jns
pop
loope,pn
fdivrs
bound
insb
adc
bswap
ret
mov
test
std
inc
int3
ds
mov
cmpsb
sahf
pop
js
mov
je
sar
loop
in
push
mov
jne
or
bound
sub
mov
pusha
cltd
mov
rorl
mov
cmp
lea
clc
jae
cs
jmp
jmp
gs
push
cmp
pop
jle
dec
insb
push
mov
popl
arpl
and
insb
insb
js
or
sbb
mov
adc
out
adc
orl
out
and
cld
lcall
dec
in
adcl
push
dec
lods
insb
push
fldl
insb
ljmp
rclb
xchg
dec
jbe
or
inc
cli
repnz
mov
xchg
and
jb
ljmp
cmp
fwait
push
jp
sub
fcomip
es
pop
sbb
daa
pop
outsl
fwait
adc
mov
je
test
std
mov
jne
stos
into
in
insb
xchg
pop
lea
movsb
sbb
inc
ss
ret
mov
ret
fsubr
jl
inc
sub
scas
mov
int3
sub
iret
sub
das
outsb
sbb
push
add
divl
ret
cs
inc
andl
push
cmp
stc
scas
call
icebp
dec
cli
push
add
mov
xchg
sub
sub
xchg
inc
pop
mov
out
inc
sbb
add
jne
ja
and
in
pop
jl
icebp
or
mov
nop
add
sub
or
sbb
movups
test
in
inc
rolb
sbb
lret
outsb
fiadds
rcrb
lods
fsubrs
rol
mov
lar
pop
mov
cld
test
mov
xchg
cltd
lret
lods
lods
mov
stos
xor
dec
cmp
sbb
insl
dec
push
inc
cmc
sbb
xchg
adc
cmc
pop
loop
inc
xor
icebp
je
cmp
dec
fwait
xchg
dec
loopne
cmp
inc
pop
mov
cmp
bnd
cmp
fdivrs
sbb
mov
pop
cmp
xchg
mov
les
insb
mov
dec
dec
bound
xchg
cmp
sbb
outsl
fcmovne
sub
js
icebp
add
dec
imul
dec
xor
std
push
sub
mov
mov
hlt
cli
out
loope
or
shr
jae
testb
mov
rorl
mov
das
pop
jge
mov
ja
lock
ds
bound
xchg
imul
jmp
xchg
cltd
add
adc
repz
pop
mov
shl
pop
pop
push
aam
hlt
test
cli
add
mov
dec
cmp
inc
push
xchg
adc
adc
mov
cmc
and
test
mov
mov
out
and
xchg
insb
mov
xor
mov
push
mov
mov
shl
add
fdivs
xchg
cltd
nop
in
dec
mov
les
out
mov
push
scas
fisttps
pop
push
jno
push
push
push
nop
aam
aas
into
mov
mov
xchg
lcall
pop
es
fiadds
mov
adc
sub
out
jbe
xchg
sub
cmp
arpl
mov
cmpsl
scas
out
dec
lds
pop
and
push
xchg
mov
pop
imul
aaa
sub
aas
cld
jg
stos
rorl
fisubrl
imul
mov
cmpsl
xchg
or
pop
cld
mov
cld
sub
repz
scas
inc
test
idivb
ret
shrl
mov
or
mov
pop
js
mov
sti
movsb
push
xor
arpl
testb
cmp
in
mov
in
repz
add
add
mov
or
pushf
push
repnz
inc
pop
cmpsl
jno
push
test
or
inc
add
cwtl
arpl
divl
push
into
push
mov
in
js
xchg
mov
int3
adc
push
cmc
sbb
imul
mov
out
add
add
mov
nop
mov
in
push
imul
mov
jae
xor
pop
jns
divl
xchg
or
inc
mov
inc
push
jp
dec
adc
dec
mov
jmp
in
or
ficoms
arpl
push
mov
cmc
imul
xor
add
add
leave
xchg
dec
arpl
push
iret
subl
xorl
aam
inc
cmp
int3
dec
mov
mov
jne
jmp
mov
test
sbb
adc
inc
fstl
hlt
adc
rcrb
mov
add
ds
mov
jle
xor
xchg
sub
clc
jb
add
icebp
es
insb
stc
cmpsb
icebp
adc
insb
xchg
or
inc
mov
jmp
cmp
fcompl
or
pop
pop
loop
and
add
into
dec
clc
gs
jmp
or
adc
dec
inc
adc
popa
add
scas
jle
add
dec
cmc
in
mov
insl
xchg
pop
mov
mov
lcall
sbb
mov
inc
ss
jne
jmp
gs
sub
out
adc
sub
add
shl
movsb
add
rcrl
nopl
das
inc
lahf
fxam
add
faddp
lds
mov
pop
into
outsl
lcall
sbb
addr16
xlat
insb
cmp
fiaddl
pop
inc
mov
pop
jae
add
sahf
je
in
cmp
fisubrs
out
cli
mov
aam
jmp
inc
das
pop
adc
or
sbb
sub
scas
fs
sti
lahf
cmp
jmp
mov
cmc
std
mov
lret
push
scas
mov
push
cmp
mov
jo
insb
adc
inc
push
push
imul
stos
xchg
lcall
pop
push
test
sahf
js
imul
jecxz
xchg
daa
pop
mov
pop
mov
lods
add
sbb
adc
cwtl
inc
es
aad
push
mov
sub
add
test
mov
in
movsb
in
push
mull
hlt
fs
push
fmuls
push
push
sbb
aad
in
adc
sub
jl
outsb
jge
pop
cld
ss
gs
cmpsl
dec
hlt
xchg
mov
cmp
aad
dec
mov
mov
js
outsl
stos
add
out
adc
mov
mov
jp
loop
ss
push
fiaddl
xor
out
test
sub
xchg
pop
daa
xchg
int3
sub
or
repz
push
mov
dec
insb
inc
cs
bt
lahf
adc
ror
pop
mov
pop
mov
cmpsb
add
jb
aam
cmpxchg
iret
popa
int3
ja
inc
push
ja
lock
push
cmp
enter
mov
addl
ret
dec
into
mov
push
in
and
sub
xchg
stos
fisubrs
add
mov
mov
sub
dec
imul
add
ret
enter
adc
out
hlt
mov
or
or
mov
push
iret
mov
in
daa
fnstsw
ljmp
mov
test
inc
std
andb
ret
inc
in
inc
jno,pn
lock
rep
shr
je
pop
ss
mov
shr
xchg
mov
repnz
xchg
fimuls
jb
bound
ss
push
loop
int
sub
mov
mov
push
cmpl
gs
mov
sahf
dec
or
pushf
add
lock
mov
fs
movsb
ret
test
js
push
psllq
xchg
cltd
push
pop
jmp
add
outsl
xchg
xchg
bound
mov
mov
int
cmp
stos
sbb
push
xchg
inc
pop
pop
fnsave
jnp
pop
fldcw
inc
gs
ljmp
shl
nop
push
mov
mov
adc
xor
out
inc
out
hlt
add
jl
fwait
sub
pop
das
arpl
xchg
stc
bound
pop
sub
sub
das
pop
out
mov
mov
mov
inc
and
dec
xchg
sub
out
stc
inc
inc
push
lahf
adc
xor
imul
and
mov
ja
js
mov
lret
mov
sbb
lods
add
out
gs
jnp
jnp
push
sub
out
leave
in
outsb
shll
adc
loopne
mov
insl
or
mov
mov
xchg
cmpsl
test
or
ret
sbb
cmpsb
out
insl
notb
in
popf
inc
xchg
stos
jg
out
push
mov
xchg
or
enter
dec
ret
mov
arpl
cmp
dec
lock
xchg
insl
mov
mov
push
xor
lret
push
lcall
inc
pop
xor
fdivr
adc
push
jle
and
inc
sti
pusha
sub
subl
mov
fwait
dec
dec
jge
call
mov
das
sbb
push
xor
mov
ret
adc
aam
xor
hlt
mov
jbe
es
in
sub
jne
stos
adc
scas
stos
inc
aad
ret
mov
jb
mov
inc
jbe
lods
ds
std
adc
jp
orl
xchg
clc
sahf
push
mov
jge
push
subl
loope
inc
cmp
sbb
pop
sbbl
inc
iretw
mov
fnstenv
jmp
add
sub
xchg
fwait
test
pop
mov
push
sub
loope
mov
nop
jle
xchg
cld
testl
dec
pushf
iret
fbld
pop
cmpsl
lods
aam
sub
xor
xchg
pop
std
sti
inc
sub
push
in
pop
and
xchg
pop
pop
xor
push
pop
mov
div
sub
scas
sbb
add
push
repz
incl
and
pop
jle
psrlw
or
ja
and
push
cmp
and
scas
jo
xlat
nop
sbb
mov
mov
sbb
mov
inc
jb
or
jno
sti
pop
fsubrl
mov
dec
arpl
out
dec
imul
dec
or
imul
or
sbb
pop
stos
cli
or
xchg
sbb
pop
lcall
das
xlat
add
or
mov
mov
push
mov
or
popa
push
pushf
jg
xchg
pop
xchg
setne
es
aad
inc
adc
bound
pop
xor
je
cld
jg
push
inc
test
ljmp
repz
jno
add
insl
fistps
add
xchg
sub
daa
or
or
push
inc
test
push
mov
push
mov
outsl
pushf
add
icebp
sti
and
roll
xor
test
sub
cmc
cmpb
scas
mov
fmul
loopne
adc
cs
dec
jp
mov
iret
popf
nop
inc
repz
mov
roll
aam
sub
test
mov
cmp
push
xchg
enter
aaa
inc
mov
mov
lea
dec
mov
in
fadds
xchg
push
inc
in
dec
mov
inc
and
or
xchg
add
dec
sub
xchg
sbb
push
lods
jbe
fisttpll
inc
fidivs
jns
rolb
mov
addl
js
cmc
lahf
scas
in
jae
in
rorb
adcb
mov
push
lcall
or
bound
sbb
sub
ds
inc
stos
aam
and
mov
imul
dec
push
lahf
sub
fildll
test
cmp
mov
or
fiadds
dec
inc
push
mov
adc
in
data16
mov
lds
cmp
stc
test
and
out
xor
jae
sub
add
pop
cmp
outsl
imul
ret
adc
jne
add
ljmp
xchg
arpl
jle
push
add
lret
dec
pop
dec
sarb
and
ja
in
test
sub
sbb
pop
scas
pop
lea
jge
and
and
mull
cmpsl
repz
fsubs
cmp
pop
out
pop
mov
xor
ss
fimull
sub
popa
dec
jp
cmp
pushf
stos
inc
xor
popf
push
test
mov
and
mov
iret
dec
imul
sbbb
stos
mov
xlat
in
stos
xchg
mov
lahf
pop
les
dec
hlt
rclb
lods
ja
mov
dec
cwtl
sbb
fsts
stos
sub
adcb
xlat
es
aaa
xchg
jp
xor
iret
popa
or
outsl
shl
adc
fnstcw
pop
push
mov
mov
cmc
xlat
insb
adc
jmp
cld
jnp
fidivs
cmp
repz
mov
insb
dec
cmp
in
dec
pop
xor
test
sahf
sbb
sbb
cmp
shrl
push
adc
mov
push
sbb
daa
mov
xchg
adc
fsubrl
jne
mov
mov
mov
mov
pop
fisubrl
sbbb
jne
dec
add
addr16
push
outsb
pop
mov
dec
arpl
test
into
mov
cmpb
sbb
adc
outsb
and
cli
inc
insb
mov
bound
lods
cmpb
sub
dec
movsl
lock
sbb
es
inc
and
ficomps
in
xlat
sub
clc
jle
cs
or
pushf
loope
fcoms
pop
out
push
aad
cld
rclb
lret
add
mov
push
xor
ljmp
mov
ffree
movsb
push
je
push
add
pop
xor
insb
adc
xchg
sbbb
pop
mov
sbb
fs
cmc
cmp
cwtl
sbb
popa
pop
fbld
jle
mov
lods
pop
dec
pop
xor
jge
xor
mov
jae
or
xor
cld
xchg
push
adc
sarl
stc
das
out
lods
mov
jle
in
push
pop
xlat
push
push
std
sub
lret
mov
mov
mov
xchg
jecxz
mov
or
push
push
hlt
pop
aam
lcall
push
push
cs
out
filds
test
pushf
lds
out
inc
out
cld
dec
xchg
test
cltd
adc
pop
loope
stc
stos
iret
push
push
imul
aas
enter
test
sub
lcall
shll
sbb
popf
call
test
mov
shlb
fimuls
je
fwait
xlat
or
xor
test
test
jmp
cwtl
cmp
inc
fisttps
xor
fmulp
mov
push
scas
and
clc
into
adc
sub
mov
negb
leave
loope
jae
cmp
int3
pop
notb
inc
les
sbb
aaa
fwait
cld
into
repnz
lea
stc
nop
nopl
mov
xchg
jp
fdivrp
outsl
xchg
movsb
ret
ds
adc
mov
or
xchg
outsb
imul
or
ret
dec
mov
mov
add
xchg
cmp
popf
sar
ficomps
sub
push
test
mov
or
negl
insb
dec
sbb
fldenv
repz
add
inc
inc
xor
imul
xorb
lock
lods
in
mov
fwait
lea
sahf
iret
mov
loope
gs
aam
xor
xchg
enter
mov
js
mov
movsl
lret
push
aam
insb
movsb
push
xor
das
inc
push
insb
inc
aaa
into
aam
mov
fmuls
sarl
je
jae
xchg
adc
inc
cmc
inc
fists
mov
cwtl
call
outsb
jnp
mov
add
mov
das
or
and
repz
outsl
arpl
clc
pop
dec
and
dec
int3
rcr
sahf
inc
xlat
in
adc
repnz
popa
mov
xor
divb
into
push
and
adc
adc
pmulhuw
aam
mov
and
or
add
jne
clc
subl
and
or
xchg
and
push
cmpsl
mov
jp
dec
push
sti
mov
jg
dec
or
or
lret
test
icebp
xor
jbe
testl
add
aas
or
push
mov
jl
pop
ljmp
testb
add
lret
fisttpl
push
xor
mov
jnp
jb
pushf
nop
movsb
cltd
mov
and
es
cmpsb
and
add
xchg
lods
pop
jmp
sub
pushf
dec
mov
arpl
xor
nop
pop
ss
pusha
loopne
push
adc
into
mov
lock
or
xorb
test
push
mov
sbb
insb
in
pop
js
imul
push
cwtl
fwait
adc
adc
loopne
cmp
inc
sbb
int
jno
scas
jbe
mov
adc
aad
push
mov
insl
sub
mov
xorb
sar
cld
jno
pop
dec
inc
je
sub
sbb
xor
in
xchg
mov
xor
or
arpl
jb
outsl
pop
add
js
cli
out
adc
xchg
imul
ret
cmp
into
out
notb
ret
lret
lods
and
fs
add
repz
ljmp
leave
fsub
stos
hlt
in
push
add
pop
push
sub
cwtl
pop
cmpsb
or
in
and
mov
nop
sbb
mov
das
imul
pop
cmp
jg
das
daa
sbb
fbld
jno
add
xchg
push
lods
sub
fs
or
arpl
jb
pusha
cmpsl
pushf
push
adc
sub
and
jb
mov
daa
hlt
cltd
jns
inc
xor
pop
dec
ret
lea
push
lods
adc
ret
and
mov
pop
pop
sub
out
fisubrs
orb
ficomps
fucomp
add
adc
mov
enter
lods
inc
sbb
or
movsl
mov
sub
test
cmpsb
mov
xor
outsb
pop
out
push
into
in
aas
xor
sub
xchg
imul
cmpsl
loop
ja
xor
cltd
loopne
lret
fisubrl
xchg
loope
add
xchg
mov
ja,pn
cwtl
stos
call
cmp
sbb
and
imull
jle
sahf
scas
push
les
mov
das
icebp
and
jnp
sbb
and
jle
hlt
xchg
pop
test
cltd
icebp
repz
jbe
test
mov
jne
lret
rcrl
stos
or
and
or
and
es
jmp
xor
mov
scas
adc
push
mov
movsb
mov
lods
pop
cld
repz
pop
je
xor
pop
div
cli
sarl
mov
frstor
cmp
test
out
clc
sbb
inc
push
add
push
rorb
dec
jge
jo
mov
ljmp
xchg
jl
faddl
and
ret
aaa
xchg
xlat
cmpsb
scas
inc
mov
sbb
inc
test
push
cmp
pop
fs
dec
out
rorb
ret
mov
fucomi
cli
cmpl
ss
shrb
popa
jno
mov
xor
in
aad
int3
int3
add
enter
pop
test
gs
std
das
mov
sub
xchg
je
sti
mov
scas
and
ret
sub
sahf
or
sbb
xor
aad
pop
ljmp
mov
or
jmp
xchg
mov
fdivrs
lcall
xchg
adc
mov
adc
fmul
cmc
call
and
mulb
sahf
pop
inc
push
rolb
push
jecxz
mov
cmpsl
into
incl
movsl
sub
adcb
sub
adc
repz
sbb
cs
cmp
arpl
cmp
fwait
lods
and
outsb
add
mov
nop
jmp
repnz
std
xor
cmp
push
rcrb
scas
lret
fsubrl
mov
es
insb
in
iret
icebp
fmull
shrl
dec
mov
or
xchg
fs
outsl
nopl
xchg
jg
decb
or
fcoml
pop
add
sub
mov
push
ja
xor
andl
ret
adc
xor
add
mov
stc
mov
mov
insl
push
imul
lods
push
cld
sbb
in
das
lock
fcompl
hlt
mov
stos
mov
ret
imul
pop
aad
jns,pt
sarl
add
fstl
push
mov
sbb
rcl
fldl
mov
push
ret
js
addb
pop
popf
lret
aaa
push
add
lret
jno
and
pop
push
cmpsb
mov
ja
and
mov
jne
and
mov
orb
inc
sti
stc
jo
sub
sbb
dec
dec
xor
ss
out
xchg
push
sub
loop
push
jno
jae
sbb
scas
cmpsb
sub
jno
push
pop
negb
call
lods
loop
cmp
andl
xor
push
or
aaa
inc
push
js
fnstsw
scas
mov
adc
xchg
inc
mov
stos
stc
mov
push
xlat
lods
div
repz
rolb
push
xlat
cld
push
inc
mov
in
add
jmp
jmp
pop
xor
mov
outsb
sub
insl
fs
lods
jnp
mov
jo
push
sbb
sub
in
pop
mov
jns
cs
jmp
ficomps
cmp
mov
add
or
aam
cs
mov
js
mov
xchg
push
ljmp
cli
push
stc
or
loopne
outsl
xchg
adc
enter
sub
in
fbld
setnp
inc
and
lret
test
push
cmpb
jmp
aad
loopne
mov
sub
add
add
fimull
xchg
cmp
insl
jp
ret
cwtl
jo
pushf
cmpl
push
test
and
fwait
fs
xor
lods
lea
stc
shl
sahf
inc
jle
in
ja
sahf
pop
push
mov
andb
mov
or
addb
outsl
push
dec
xor
sub
push
mov
je
loope
sub
dec
inc
xchg
mov
mov
rol
mov
jns
bound
dec
leave
add
sbb
push
arpl
mov
mov
sahf
sub
and
movsb
inc
mov
insl
jnp
aam
int3
jp
icebp
leave
pop
mov
loop
in
cmpsb
pop
sub
dec
divb
pop
xor
mov
jnp
scas
add
in
pop
and
mov
idivb
stc
or
xchg
jle
push
sbb
or
pop
jno
ret
lret
or
pop
sub
inc
xor
aam
movsl
pop
pop
push
xor
push
out
jg
les
push
xor
adc
or
jl
aam
push
mov
xor
je
jmp
inc
cmc
ljmp
loopne
iret
out
jmp
movsl
test
sbb
dec
out
ja
add
test
pop
lcall
sarl
push
in
add
xchg
mov
cs
xchg
or
mov
in
iret
xchg
or
andl
push
lcall
or
lret
es
hlt
idivb
sub
add
popa
xchg
pushf
out
stc
adc
fdivp
pop
xchg
lock
cmp
insl
mov
movsb
cmc
inc
int3
outsl
mov
adc
mov
out
xchg
inc
add
mov
rol
jge
adc
and
push
and
sub
xor
jg
popa
arpl
xchg
jb
aaa
sbb
mov
cmp
pop
xchg
push
icebp
push
or
push
loop
sbb
shr
sbb
cmpsl
xchg
fmuls
sarl
ljmp
and
pop
push
in
sub
lahf
fs
jg
pop
lret
fs
insl
cmp
lret
and
mov
in
les
cs
xchg
cs
dec
stc
cmp
mov
pop
fsubrs
mov
inc
inc
cld
sub
xorl
and
sub
dec
insb
or
inc
jne
mov
cmc
je
pop
fists
adc
sub
mov
or
mov
iret
out
pop
ss
notl
dec
jle
shrb
out
les
inc
cld
push
and
or
out
scas
push
fldcw
cld
or
jbe
xchg
ret
mov
outsl
inc
loope
cmp
test
sbb
xchg
mov
aas
imul
aas
jmp
fwait
mov
cmp
cmp
clc
out
in
jo
mov
fisttpll
jne
loopne
lcall
push
sub
ds
data16
sub
fidivs
mov
loopne
pop
faddl
sahf
inc
pop
or
jmp
cmpsb
pop
lret
rcrb
test
aam
enter
js
and
inc
dec
mov
adc
jmp
sahf
iret
xchg
addr16
xchg
xchg
xchg
mov
out
dec
scas
pop
sbb
jmp
lahf
mov
test
arpl
fildl
dec
dec
scas
imul
cmp
pushf
xor
push
sub
xchg
inc
test
xor
jmp
inc
and
dec
scas
pop
mov
mov
jb
and
dec
add
bound
mov
lret
or
pop
sub
nop
test
addr16
xor
mov
mov
cmp
pushl
push
fwait
ja
pusha
mov
inc
ss
dec
leave
xchg
cld
cwtl
xchg
push
mov
adc
jae
daa
add
push
js
test
mov
and
fwait
cmove
dec
and
adcl
popa
xchg
sub
jo
cmc
stos
jne
and
cltd
mov
out
push
rclb
pop
fstl
ret
or
pop
adc
and
inc
jle
xorl
dec
ja
jecxz
cs
pushf
and
or
mov
push
add
pop
push
lret
adc
jg
mov
inc
mov
sub
sbb
inc
sub
stos
mov
lods
out
inc
rolb
cmc
adc
cli
pop
call
ds
in
adc
rorb
xlat
int
cmpsb
adc
fistl
cmpsb
sub
mov
movsl
sbb
xor
pop
scas
jecxz
daa
jmp
jno
loope
cmp
xor
xor
arpl
lret
pusha
inc
lea
jecxz
fdiv
dec
cmp
mov
xchg
mov
shrl
fcoml
pop
clc
cli
rolb
adc
mov
adc
cwtl
pop
mov
push
gs
scas
mov
xchg
and
pop
adc
js
jecxz
adc
xchg
push
sbb
xlat
bound
fucomi
jnp
imul
or
mov
push
rorb
sub
pop
xor
cltd
mov
pop
orl
rclb
xchg
ja
fwait
push
xor
popf
pop
mov
shrl
mov
sub
push
aaa
mov
movsl
out
es
enter
fs
mov
push
push
mov
loope
push
es
repnz
out
in
lods
sti
inc
mov
das
mov
cmpsb
mov
jae
iret
inc
mov
into
enter
jo
mov
insl
les
xchg
jmp
rcrb
mov
ss
out
mov
sbb
dec
fistps
lahf
enter
push
push
pop
pop
repz
das
add
sub
xchg
sub
mov
jae
cmpb
fistpll
adc
mov
repz
addr16
test
addr16
xor
xchg
cld
ficomps
mov
scas
xchg
or
out
add
mov
jp
inc
out
push
jle
sbb
fwait
push
inc
sbb
inc
ret
adc
sbb
mov
pop
dec
or
clc
js
fadd
inc
jb
jb
icebp
mov
pop
in
inc
push
push
mov
movsl
aas
test
push
aas
add
xorb
dec
xor
mov
sbb
pop
pop
dec
jp
sbb
pop
mov
iret
mov
roll
out
repnz
dec
movsl
inc
rolb
shlb
loope
stc
xor
ret
insl
lods
push
sub
xchg
add
lcall
inc
shll
adc
aad
mov
mov
cmp
nop
sub
repz
xor
xchg
shll
loopne
popf
mov
mov
lods
sbb
pop
sub
mov
daa
xor
push
add
call
inc
jle
enter
push
mov
adcb
lahf
cmpsb
jecxz
pop
lea
and
pop
sub
dec
test
mov
cmp
adc
pop
add
push
and
call
ds
mov
js
push
push
adc
dec
cmp
mov
loopne
jge
scas
cmpsl
xchg
int3
ss
inc
mov
xlat
pop
cmpsl
mov
add
ret
or
fdivrl
jne
sbb
cmp
roll
loop
adc
testl
mov
push
bswap
fcomp
fs
xchg
pop
dec
cltd
out
fcmovb
lret
movsl
adc
cmc
and
test
xor
adc
mov
mov
sub
add
notb
fiaddl
jmp
fsubrs
xchg
je
jno
inc
shrl
xor
sbb
outsl
mov
sbb
mov
xchg
call
jp
bound
js
xor
lahf
and
adc
mov
add
mov
rolb
mov
fwait
or
xchg
fdivrp
mov
adc
push
sbb
repz
insl
xchg
inc
lock
mov
jno
mov
roll
jl
sub
shrl
cmp
lods
out
sub
pop
lea
cmpb
std
rcr
inc
test
mov
sti
loop
pop
mov
sti
sbb
nop
aad
in
in
ljmp
shr
test
mov
pusha
dec
sub
pop
sarb
out
push
cld
fcompl
mov
xor
loopne
cltd
fsubl
or
jns
add
jecxz
or
fcoml
lret
push
mov
fstpl
pop
or
xchg
cli
testb
xchg
push
ficompl
je
xchg
jno
hlt
add
ja
sbb
sbb
lret
jno
loop
test
dec
jl
aad
or
xchg
push
inc
pop
ja
add
lahf
insb
adc
ja
sub
movsb
movsl
pop
testb
ss
jb
pop
xchg
and
dec
iret
xchg
int
inc
ljmp
arpl
mov
mov
push
xor
jg
dec
jne
mov
out
sarb
shl
cltd
mov
jae
mov
in
sbb
push
push
bound
lret
mov
pop
or
jmp
cmp
mov
pop
clc
jno
insb
xchg
push
mov
pusha
jae
fwait
dec
lret
inc
jnp
int3
mov
dec
je
gs
daa
mov
xor
push
clc
adc
push
mov
icebp
pop
sbb
mov
in
sbb
int3
adc
mov
and
or
data16
sbb
pop
ret
cmp
sbb
int
shlb
repnz
cs
rcrl
push
fcompl
add
inc
in
adc
lea
xchg
jbe
sti
push
push
imul
ret
jb
sub
mov
in
inc
or
in
rcr
cmp
es
mov
test
jae
movsb
stos
mov
lahf
leave
lds
dec
jno
leave
jg
aad
sub
cs
xchg
push
std
stos
jnp
int3
scas
push
push
xchg
push
icebp
jae
dec
insb
mov
pop
std
popf
cmp
adc
or
data16
lea
fsubrp
orl
std
out
sti
push
hlt
add
fidivrs
and
mov
pop
add
rcr
test
mov
sbb
mov
es
in
shll
arpl
push
leave
sbb
iret
add
and
inc
pop
fdivs
dec
lahf
insl
mov
ss
loop
pop
jp
mov
dec
test
pop
adc
push
mov
insb
mov
adc
push
aaa
lret
popa
sub
push
test
movsl
jle
jnp
lods
mov
jo
mov
frstor
push
xchg
cmpsb
sub
cmpl
andb
mov
rcrl
xchg
dec
or
sub
in
arpl
stc
lcall
sbb
outsl
inc
sub
sti
mov
mov
das
aaa
out
add
adc
std
mov
mov
pop
lods
push
ret
xor
les
dec
and
inc
outsb
lcall
fidivl
fildll
pop
adc
inc
in
mov
test
dec
dec
dec
pop
int3
inc
aaa
pop
scas
sbb
roll
cmpsb
and
test
ljmp
loop
lret
aaa
jecxz
jnp
jns
movsl
repz
ss
ret
and
mov
in
xor
sarl
sub
mov
dec
xor
dec
mov
push
add
inc
xchg
cmp
mov
cmp
add
xlat
jb
ficoml
lods
lidtl
or
cmp
fidivrl
xchg
push
int
nop
cwtl
scas
or
fistl
fistl
out
test
add
jo
sub
push
jb
into
jo
popa
cltd
push
jae
push
pop
inc
mov
orl
cmove
inc
jmp
dec
testb
mov
push
sub
lock
sbb
cmpsl
nop
aaa
sub
mov
in
nop
inc
pop
roll
test
jne
ljmp
xor
lcall
or
xchg
fwait
jae
out
push
or
in
pop
and
mov
jns
cs
addr16
adc
jl
adc
ljmp
push
andb
pop
mov
fsub
addr16
rolb
mov
inc
aam
mov
cltd
std
sbb
psignw
mov
mov
sbb
incl
add
hlt
adc
mov
dec
or
fisttps
cmp
imul
jp
pop
jl
jmp
push
movsb
push
mov
in
and
stos
jbe
cmp
clc
push
or
dec
ret
stos
addr16
jbe
fwait
int
push
sahf
mov
movsl
xor
insb
cltd
stos
pushf
pop
push
ret
sub
test
subl
push
lcall
fcomps
icebp
adc
cmp
or
pop
aad
outsb
nop
std
in
pop
mov
test
push
push
and
shl
out
xchg
sub
in
movsb
jb
or
xchg
sbb
mov
xchg
pop
push
mov
push
push
in
scas
inc
sbb
sub
dec
add
push
add
lahf
fwait
xor
push
xchg
lea
pushf
imul
cmp
push
or
pop
sub
fisttpll
inc
js
push
ds
sbb
aad
or
loope
pop
adc
cmpsl
aad
ret
int
es
sbb
inc
push
rolb
call
popf
out
movsb
aam
mov
test
mov
bound
fwait
test
jno
lret
js
mov
leave
mov
lods
jl
mov
push
push
fs
cmp
fucomp
ljmp
insl
loopne
push
cmp
mov
sub
jo
push
outsb
arpl
call
fwait
cmp
push
call
mov
scas
jp
inc
addr16
push
mov
lea
fldl
jp
pop
mov
addr16
jno
mov
xchg
push
sahf
jl
mov
fcmovu
std
push
loop
cmp
jp
or
dec
popf
sub
xchg
jo
mov
mov
lods
das
int
pop
andl
push
fwait
aad
mov
fbstp
mov
xchg
sub
push
sub
mov
pop
out
scas
frstor
xor
push
cli
call
pop
cwtl
popa
das
dec
sbb
xor
sahf
push
jno
lock
es
sub
dec
sub
daa
cmpsb
sub
and
es
and
jbe
xchg
sbb
adc
outsb
xor
fxch
andl
push
sub
pop
mov
mov
sahf
xchg
inc
shrl
bound
adc
xor
out
aaa
sub
ret
add
xlat
fidivl
sbb
sti
cld
imul
mov
lods
aaa
adc
sbb
jp
ret
or
xchg
inc
push
mov
jo
push
mov
xchg
push
sbb
xor
push
mov
jl
into
sub
je
int
sarl
xor
mov
push
out
lds
mov
fistps
sub
jne
imul
xor
fucomip
xor
mov
outsb
add
pop
aaa
mov
scas
jg
jne
xchg
sahf
inc
rorb
sub
pop
pop
fcmovb
repz
test
fsubr
icebp
imul
xchg
repnz
es
inc
in
jg
int3
pop
push
lods
int3
push
bnd
and
sbb
fmull
cwtl
sbb
mov
ljmp
sub
mov
hlt
cmp
inc
lods
orl
and
enter
jns
ljmp
ja
je
mov
or
shlb
dec
xchg
je
mov
pop
inc
aas
cli
shll
add
sti
lahf
jmp
mov
sahf
mov
mov
mov
or
add
sbb
or
insb
add
pop
std
into
push
lea
inc
lea
es
sbb
popa
cmp
xchg
mov
jae
sbb
aas
cwtl
hlt
or
hlt
lods
mov
sub
pop
dec
and
sbb
mulb
sub
out
stos
out
popa
scas
xor
sub
mov
dec
iret
imul
test
push
push
cmp
dec
inc
and
sbb
outsb
jmp
mov
cwtl
mov
pop
xchg
jg
jns
dec
out
fistl
into
adc
push
movsb
in
pop
sbb
push
jbe
scas
mov
hlt
ror
les
dec
pushf
mov
outsb
pop
ret
adc
cmp
mov
xchg
push
aaa
jbe
shrl
leave
cmp
push
sbb
pop
ljmp
dec
outsb
xchg
js
out
sbb
in
out
sub
mov
or
sub
call
loop
rclb
dec
loopne
mov
or
icebp
cs
js
pop
mov
add
inc
lds
sub
dec
mov
lea
lret
out
imul
xchg
cmp
lret
or
jns
adc
pop
mov
ret
add
jnp
adc
arpl
inc
push
insb
or
ljmp
mov
xchg
xchg
sub
inc
or
std
fsubs
mov
pop
adc
xchg
jge
pop
push
adc
inc
jg
xchg
cmp
cld
cmpsl
mov
adc
add
je
fdivs
add
jne
ficoms
das
mov
xor
aad
imul
xor
cmp
loope
psubw
add
daa
mov
sub
hlt
xchg
imul
pop
mov
nop
dec
das
inc
pushf
daa
inc
dec
test
dec
scas
std
cmpb
ficomps
sbb
and
mov
mov
iret
adc
xchg
or
adc
lods
in
adc
adc
lret
shr
jno
call
push
dec
add
out
dec
int
loop
or
imul
pop
fists
and
xchg
adc
cs
les
cmp
sbbl
adc
xor
push
push
fldt
or
fisttps
dec
pop
dec
push
fldcw
or
or
jp
insb
movsb
adc
sahf
mov
cld
cwtl
lds
mov
jne
adc
test
ficompl
fcoml
lcall
stos
hlt
aaa
push
mov
mov
clc
xor
decb
rcll
test
repnz
mov
mov
jb
and
shrb
enter
mov
ss
sub
and
rcll
inc
leave
pop
or
mov
outsb
dec
sahf
mov
jae
je
loop
dec
xchg
jg
push
mov
cltd
pop
shlb
imul
mov
sbb
xor
call
mov
cmp
jl
stos
pop
add
push
sti
mov
fisubl
out
jmp
adc
in
sbb
inc
xchg
out
insb
mov
call
adc
lea
or
out
repnz
repz
lcall
xchg
cmp
mov
push
push
sahf
fidivrs
rolb
and
xor
shll
mov
les
pop
and
add
sbb
shll
and
fisubrl
pop
out
outsl
sub
dec
adc
das
ds
aam
pop
rcrb
test
dec
in
dec
movsl
aam
add
pop
stc
fbld
dec
sbb
lret
cmc
mov
sahf
and
xchg
pop
dec
shll
repnz
mov
pushl
insb
shl
mov
lds
addr16
lea
mov
add
lcall
push
sub
scas
shl
cwtl
cmpsb
test
cli
sub
xchg
push
cmc
inc
adc
jg
sub
push
mov
and
mov
call
push
into
add
insb
scas
fwait
xor
jo
jnp
push
cmp
add
int3
hlt
lods
fidivrs
add
and
sub
aaa
in
cmpsb
and
pop
push
lcall
rorl
clc
mov
or
or
fsubrs
aad
test
pop
push
sub
repnz
mov
adc
xor
jne
mov
ret
sbb
lahf
jle
xorl
xchg
and
push
repnz
pop
mov
mov
add
jae
mov
cmc
jmp
sub
push
jne
insb
ret
jno
aas
hlt
pop
jl
lret
xchg
loope
cmp
pop
jae
rcrl
imul
pushf
cwtl
fnstcw
jb
sti
rcll
xchg
outsb
aas
xchg
lcall
inc
les
xlat
add
int
jo
loope
xor
sub
jno
rol
xor
stc
daa
jle
out
push
out
je
pop
xorb
xor
lret
getsec
nop
je
out
sti
adc
repnz
mov
aaa
sub
ja
lea
ljmp
jge
repz
insl
rorl
aad
mov
and
notb
mov
sub
jmp
cli
jge
or
mov
sbb
js
aad
mov
jo
xchg
imul
cmpsl
and
pushf
gs
outsb
adc
sbb
pop
lret
add
jbe
pushf
aam
xchg
sbb
adc
test
pop
jbe
movsb
push
fstpl
leave
cmp
adc
push
out
fs
and
pop
jle
cmp
jb
in
jecxz
cld
jmp
mov
or
test
add
jg
ficomps
pop
iret
pop
or
imul
std
cs
mov
inc
mov
add
rcll
inc
cli
xchg
loope
ficomps
and
call
jmp
loop
test
dec
andb
call
xchg
rol
jecxz
cmp
hlt
addl
in
popa
clc
cmp
int3
adc
xor
bound
sbb
pop
sub
repnz
sahf
mov
insl
sub
int
jecxz
mov
sti
inc
mov
pop
xchg
pop
mov
int3
insb
ss
mov
mov
outsl
pop
testb
sub
inc
sub
out
lret
xor
imul
xchg
subl
mov
pop
cmp
mov
cltd
jmp
jb
addr16
push
idiv
sub
mov
jmp
stc
aam
aad
jb
sub
adc
add
add
imul
aad
dec
pop
push
rorl
mov
fwait
jne
std
ja
adc
cmp
mov
and
sahf
fnstsw
arpl
and
cmp
ret
xlat
or
mov
push
add
cmp
mov
mov
xchg
xlat
xchg
xchg
stc
out
inc
mov
loope
test
outsl
xchg
stc
std
aad
flds
stos
sub
xchg
jle
int
cmc
mov
xor
negl
adc
mov
cmp
pop
and
test
roll
lret
divb
jb
and
mov
data16
das
xchg
repnz
les
stos
aad
push
out
inc
push
jg
xor
sub
fdivrs
enter
in
xor
pop
dec
leave
jge
xchg
aam
dec
subb
push
ret
fdivp
cmp
aad
mov
imul
cs
push
cmpl
sub
xchg
mov
sahf
jmp
jno
sbb
jno
cltd
lock
outsl
mov
add
dec
lods
sub
insl
ret
mov
push
outsb
movsl
rcl
dec
fstl
pop
or
sbb
je
clc
or
sub
testl
loope
xchg
jnp
pop
popf
lret
push
mov
ret
rcrb
fisttpl
pop
lcall
sbb
and
push
and
jmp
push
sub
imul
mov
mov
mov
negl
and
pop
aad
lock
sub
test
lods
or
pop
fildl
jg
adc
movsl
icebp
add
add
insb
sub
loope
rcll
pushf
adc
add
jl
icebp
insl
stc
jo
mov
test
adc
mov
sub
sub
jge
fistl
lcall
inc
cmp
jg
div
jo
mov
jbe
mov
dec
imul
gs
into
mov
xchg
int3
cld
dec
sbb
icebp
fistps
popa
cmp
xor
ja
sbb
lret
sti
mov
js
and
adc
dec
daa
jge
push
fstl
test
testb
ret
mov
movaps
xorl
fstpl
dec
sbb
test
cmpb
clc
mov
in
rorl
dec
and
mov
jle
push
es
into
mov
out
sbb
rorb
ret
fdivrs
xor
test
mov
outsb
ss
adc
cmp
sahf
cwtl
jle
xlat
mov
scas
lds
lea
insb
jle
dec
ja
jecxz
insl
push
rolb
jg
mov
lea
test
or
adc
jnp
and
aas
lds
and
data16
or
cmp
shlb
outsb
ja
pushf
pushf
dec
frstor
pop
outsb
sub
xor
movsl
or
loopne
dec
push
movl
cmp
mov
sub
mov
fstpl
xorl
add
ss
popa
clc
mov
push
fisttpll
pop
push
and
and
push
ja
in
fbstp
repnz
inc
add
add
jge
inc
daa
sarl
inc
dec
roll
dec
out
or
mov
lea
ljmp
shlb
sbb
add
push
cmc
imul
stc
js
or
dec
jae
ret
insb
inc
addr16
icebp
lock
and
sbb
or
ljmp
scas
sub
in
xlat
and
fsubrs
bound
in
push
dec
addr16
or
sahf
out
jno
fldl
jae
cmp
add
mov
enter
mov
hlt
lods
sub
mov
call
lods
mulb
ret
jnp
inc
inc
fsubl
std
repnz
pushf
repnz
xlat
sarl
test
aas
movsl
jecxz
sti
xchg
pop
xchg
fstpt
xchg
ficompl
and
aam
jmp
lahf
mov
shrb
test
mov
push
enter
aaa
mov
pop
cld
dec
cli
stc
inc
fs
cli
or
and
lods
dec
ret
dec
adc
xor
and
dec
add
xor
imul
fisubl
bound
xchg
int3
mov
pop
sbb
sbbl
sub
mov
mov
repz
cmp
cli
mov
mov
or
cmp
sahf
clc
dec
mov
push
iret
add
fdivp
lds
inc
mov
push
ss
nop
mov
push
push
movsl
push
test
addb
pop
mov
imul
mov
push
std
pop
adc
mov
call
push
hlt
inc
inc
push
iret
arpl
xor
sub
imul
sti
fidivrl
jl
push
or
ret
lret
xchg
cld
std
pushf
repnz
mov
and
jae
lret
daa
sbb
rorb
scas
sbbl
or
jp
mov
jnp
call
adc
lret
pop
and
popl
ffree
adc
jmp
lock
rcll
test
stos
dec
pop
mov
cmp
stc
jp
cs
xchg
rorb
pop
dec
fs
or
daa
jbe
rcl
outsb
arpl
mov
dec
dec
popl
inc
jg
das
inc
mov
das
subb
ja
lods
out
inc
mov
xor
aam
fwait
rolb
andl
cmp
adc
adcb
mov
adc
outsl
fdivrl
and
mov
rorl
rcrl
inc
cmp
sbb
sahf
pop
aaa
adc
jb
push
or
xchg
mov
jb
shll
cs
jo
mov
aaa
std
addr16
sahf
sub
mov
jecxz
pop
dec
ret
cmp
in
out
push
cwtl
jb
inc
mov
push
mov
push
xchg
push
mov
xor
cmpsl
lods
pop
in
pop
push
mov
xchg
jecxz
pop
jg
dec
and
ficoms
in
cwtl
push
fucom
subb
in
mov
sbbb
mov
jnp
and
mov
cld
mov
pop
hlt
and
lods
pop
out
in
jle
pop
sbb
pusha
xchg
cmp
xchg
repz
lret
push
scas
mov
inc
push
test
xchg
push
push
jo
popf
lock
imul
mov
out
pop
sahf
sub
or
push
out
fimuls
mov
push
xor
sub
or
aaa
repz
pop
dec
stos
mov
popf
fimuls
lahf
mov
mov
pop
push
shrb
and
clc
ficompl
xchg
pushf
mov
cwtl
xor
mov
rclb
mov
pusha
xchg
sub
push
pop
repz
scas
adc
push
cmpsb
shl
inc
pop
sbb
adc
gs
popa
sbb
mov
fbstp
xchg
scas
inc
in
je
mov
inc
fs
test
cmpsb
xchg
mov
jb
pushf
inc
shll
push
sarb
mov
mov
xchg
out
pop
fucomp
pop
push
pop
xchg
dec
push
cmp
cmp
sbb
or
fdivl
xor
inc
in
sub
lcall
push
jecxz
mov
adc
scas
sarl
jmp
andb
les
bound
rorb
shrb
pop
jnp
gs
clc
cmp
inc
cli
ret
xchg
rclb
in
ret
jle
add
push
lret
or
inc
jb
mov
jbe
add
cmpsb
mov
loope
mov
pop
fcoml
xor
cli
js
sarb
adc
das
lock
mov
int
adc
mov
lret
jge
dec
and
gs
mov
cmc
cmpsl
push
sbb
xchg
iret
cli
adc
jmp
pop
insl
mov
stos
inc
pop
ljmp
push
loope
add
int
decl
jae
push
je
test
movsl
mov
aas
mov
add
cmc
mov
inc
push
adc
sbb
shlb
ret
mov
in
or
lds
jmp
jo
into
pop
js
xchg
addl
out
mov
or
cmp
push
lret
scas
fwait
fiadds
fnstenv
mov
mov
cmp
aad
gs
call
adc
inc
push
xor
adc
testl
lods
in
sub
cmp
movsl
dec
das
cli
jp
mov
mov
jae
push
fbstp
jno
sti
xor
xchg
iret
mov
jle
mov
sbb
cs
and
out
xchg
ret
call
pop
push
decb
sbb
test
arpl
ficoms
dec
out
jg
dec
in
ficoml
ja
shrl
cs
je
lahf
jne
mov
mov
or
xor
subb
pop
and
xchg
sub
add
and
push
cli
faddl
jnp
jb
dec
xlat
loopne
fldl2t
iret
shll
xchg
mov
mov
xor
pop
push
cmp
lahf
lds
sbb
push
add
mov
cmc
daa
into
inc
test
fs
imul
ja
push
imul
mov
push
cwtl
xchg
sub
jb
dec
aas
enter
sbb
xor
adc
jno
inc
push
xor
jmp
xchg
test
jge
fs
jmp
and
cmp
inc
addr16
xor
add
std
andb
in
in
hlt
push
addl
ret
add
shll
movsb
das
mov
enter
push
mov
mov
pop
and
mov
sahf
int3
sub
mov
out
cld
orb
cmp
jno
jp
cmp
sub
or
pusha
mov
sahf
adc
pop
sub
or
jmp
pop
in
cmpsl
sahf
dec
add
push
lea
mov
push
jg
out
aad
mov
jp
mov
sub
dec
leave
jne
push
add
mov
ljmp
mov
mov
cmp
or
test
xor
and
or
sub
sub
popa
mov
int3
bound
movd
add
cltd
divb
ret
shl
and
jecxz
sti
sbbl
popa
jno
enter
aaa
jmp
mov
pop
pop
sbb
mov
adc
pop
inc
notl
aaa
push
and
inc
jno
and
jno
inc
mov
lods
dec
inc
sbb
dec
cltd
arpl
and
and
dec
push
and
icebp
ret
sub
orb
or
mov
pop
sti
mov
pop
sbb
les
push
mov
scas
leave
jnp
daa
out
pop
mov
loopne
outsl
lock
orb
lds
jg
je
jb
mov
add
lret
repnz
inc
add
popf
jns
push
loope
call
pop
lods
sbb
mov
mov
ret
or
fidivs
out
inc
xor
push
sub
bswap
shll
or
daa
cmpsb
fiaddl
stc
dec
lcall
lcall
scas
pushf
and
jb
ficoms
ljmp
fmuls
mov
imul
mov
lods
mov
testb
loope
xor
lcall
jecxz
jmp
push
lds
iret
fwait
push
xor
outsb
iret
lahf
mov
adc
add
mov
decl
xchg
inc
xor
cli
cmpb
add
xor
test
mov
mov
rcrb
test
in
add
mov
movsb
xchg
pop
nop
and
sub
lahf
sbb
jns
mov
popf
test
xor
js
inc
push
mov
inc
mov
and
inc
out
and
sub
or
fistpl
ret
rcll
andl
pop
push
into
cmpsl
in
mov
repz
adcl
stos
mov
xchg
repnz
dec
and
jne
dec
ds
fidivl
dec
in
jl
jae
lock
xor
push
aas
push
bound
jp
lods
fiaddl
or
pop
fidivrs
xchg
call
add
aad
jbe
in
out
in
mov
jnp
adcl
enter
jecxz
xchg
imul
jno
lods
mov
jl
inc
or
fnstenv
push
je
test
cmpsb
out
aaa
lcall
aas
add
cli
fildll
cmpsb
jl
or
aam
std
xchg
pushf
mov
sbb
dec
pop
sub
mov
mov
lret
rcrb
push
jns
push
xchg
dec
hlt
imulb
cwtl
jb
call
add
sahf
sti
xor
or
sbb
out
aam
xchg
push
loope
out
xchg
movsb
lahf
imul
lret
fwait
and
jae
sti
or
push
xchg
popf
jp
jo
mov
sub
jb
movb
lret
fstpt
and
xchg
xchg
sti
inc
mov
lods
movsb
jmp
xchg
rolb
jl
insb
cmp
xchg
movl
xchg
fiaddl
dec
mov
mov
popa
pop
cmp
test
pop
mov
mov
in
jmp
add
dec
cmp
ja,pn
or
mov
sbb
or
das
push
and
adcb
adc
pop
dec
imul
fnsave
test
sub
or
sub
das
mov
add
adc
rcll
es
mov
ficoms
pop
decb
cld
aam
pop
xor
out
xchg
addr16
leave
sub
imul
xlat
pop
sbb
fistl
pop
cmp
xor
adc
mov
rcr
and
out
dec
cmp
push
sbb
mov
lods
dec
sbb
or
in
ljmp
movsl
mov
daa
daa
arpl
mov
sub
lahf
aaa
xchg
cmp
aam
mov
js
mov
inc
les
sub
aas
sbb
jns
jecxz
int
fcoml
cmp
mov
add
cmp
popa
es
mov
repnz
dec
out
loopne
push
sbb
aad
ret
xchg
inc
pop
lods
mov
cmp
dec
imul
enter
imul
or
clc
jecxz
jne
or
test
adc
mov
or
add
push
fisubrs
jbe
cmpsl
ret
shr
add
push
lret
faddl
sahf
dec
insb
jmp
aad
cltd
mov
enter
mov
leave
jbe
in
idivb
scas
ret
ds
test
outsb
push
jns
dec
mov
icebp
mov
test
sbb
sbb
adc
adcb
cmp
mulb
dec
aad
push
test
jae
jb
das
dec
adc
mov
mov
xchg
pop
cmp
xlat
lock
pop
mov
push
inc
adc
dec
pop
push
sbb
roll
push
enter
hlt
gs
xchg
xchg
push
scas
sbb
popa
mov
adc
jecxz
pop
and
ficompl
push
bound
outsb
xchg
sub
push
ficoml
mov
jb
clc
clc
pushf
popf
mov
lock
jge
bound
xchg
in
xchg
dec
rclb
into
jecxz
mov
das
test
sub
sbb
mov
push
cmp
push
fsts
inc
lahf
ja
dec
and
cmpl
xchg
mov
xor
sahf
adc
scas
push
cli
das
mov
xchg
loope
je
xchg
sarl
cwtl
sti
and
sbb
lods
fnsave
nop
fisubs
xchg
xor
add
out
lods
std
in
and
aam
adc
jge
cltd
ss
cmpsb
stc
movsl
mov
jp
stos
mov
inc
jge
lods
lcall
enter
ss
test
push
insl
cld
out
popf
ficoml
cmc
jae
mov
sbb
or
add
add
adc
aaa
call
je
insl
or
dec
test
add
sub
call
xchg
shlb
pop
or
fsubrs
sti
push
aas
mov
loop
sbb
adc
inc
sbbl
scas
sbb
mov
or
es
leave
loop
xor
ret
test
jbe
sahf
jae
add
mov
dec
pop
xor
or
sbb
xchg
aam
sbb
xchg
and
hlt
pop
mov
inc
dec
dec
sub
add
shl
mov
xor
int3
call
push
fldenv
cmp
jl
roll
push
lcall
pusha
mov
or
mov
out
repnz
test
dec
repnz
sbbl
or
test
mov
rcrl
dec
and
fisubrl
imul
sub
icebp
test
mov
xchg
xchg
inc
push
aam
pop
mov
pop
addb
movb
pop
daa
jmp
fcmove
mov
pop
shll
xchg
inc
add
out
shr
pushf
gs
xchg
popa
lea
popa
sbb
lea
cmp
outsl
sbb
popa
mov
hlt
out
dec
lock
sub
xchg
cmp
adc
or
xchg
pop
loope
bound
or
push
push
inc
mov
aaa
xor
push
jmp
pop
lret
dec
push
cwtl
into
push
and
aas
js
lret
push
cli
icebp
int3
xchg
test
lret
adcb
repz
addl
test
je
pop
xor
das
leave
shrl
or
scas
inc
iret
mov
sub
or
mov
sbb
pop
movsb
sbb
testl
addr16
dec
dec
ret
aad
test
jmp
inc
cmp
xor
insl
test
jmp
push
testl
mov
lds
loop
xchg
pop
das
insb
orl
ret
add
iret
mov
mov
or
sbb
rcl
dec
aas
dec
inc
movsb
call
outsb
mov
leave
xchg
lea
push
add
mov
in
cmc
adc
mov
cs
sahf
xchg
repnz
jmp
inc
nop
enter
cmpsl
shr
movl
inc
pushf
lea
or
mov
or
enter
and
and
push
mov
rcll
jecxz
ss
lret
je
sbbl
adc
mov
inc
or
xchg
lock
lods
in
sub
or
sub
imul
std
push
outsb
les
mov
pop
jne
cld
sub
les
xchg
fimuls
in
mov
call
lea
into
sahf
mov
xchg
cmp
sub
insl
aam
sahf
clc
idiv
sub
ret
fs
rcrl
loopne
in
adc
pusha
xchg
adc
ret
cli
lret
mov
inc
or
xchg
mov
aaa
jge
lea
xchg
icebp
inc
sub
adc
sub
pop
pop
in
outsl
and
pusha
xchg
xor
dec
lds
and
enter
lods
and
mov
push
lcall
es
cli
shrl
in
mov
cmp
mov
mov
test
aad
sub
pop
out
adc
bound
mov
dec
mov
negl
xor
and
ja
cs
mov
out
out
and
pop
xor
jno
jae
nop
lods
push
cmpl
decl
push
je
dec
add
push
adc
out
inc
mov
fildl
int3
or
push
fld1
xlat
push
mov
jl
lret
mov
pop
pop
sub
lcall
cli
mov
scas
xchg
lods
sbb
sbb
imul
xchg
and
mov
cs
fs
out
shlb
test
dec
inc
inc
outsl
loopne
in
push
inc
sbb
pushf
adc
call
push
mov
adc
dec
adc
movsb
sub
popf
adc
repz
clc
clc
mov
nop
and
out
pop
cmpsb
insb
sbb
notb
xchg
mov
out
orl
mov
sahf
dec
inc
xor
pusha
dec
mov
jp
lret
ret
mov
add
push
cwtl
dec
mov
aad
push
loope
scas
jmp
add
movsl
mov
ror
push
cltd
movsl
mov
dec
cmp
jmp
aam
xchg
push
lods
aas
pop
inc
xchg
dec
out
xlat
cltd
pop
dec
push
xchg
pop
cwtl
repz
mov
hlt
sbb
and
loopw
in
and
jp
mov
aas
loopne
icebp
mov
xchg
dec
jmp
inc
test
adc
and
ja
loop
mov
adc
mov
es
adc
mov
hlt
jno
and
loopne
inc
xchg
or
xchg
xor
and
sbb
inc
inc
out
mov
sbb
loopne
repz
outsb
sub
sub
aad
lds
mov
rcr
cmp
pop
bound
jle
iret
dec
jp
pop
sub
jmp
ljmp
outsl
imul
jae
ljmp
dec
movsb
pop
cld
xchg
mov
popf
in
mov
repnz
adc
and
mov
sahf
scas
inc
loope
sub
inc
xchg
adc
out
xchg
inc
lcall
lock
mov
pop
in
pushl
add
push
cltd
adc
mov
mov
ret
add
xor
insl
cmp
mov
inc
mov
mov
xchg
stos
fnsave
and
lcall
sti
adc
lahf
add
dec
daa
je
in
jg
mov
fsubp
mov
stos
popf
sub
lea
lock
inc
pusha
jmp
ss
xchg
mov
adc
stc
sbb
into
in
ljmp
jle
out
dec
pop
or
pop
jmp
jne
xchg
pop
pop
pop
inc
lods
push
or
mov
sbb
icebp
push
fs
mov
push
testb
scas
ret
sub
fldt
jmp
xchg
lret
test
dec
fmuls
dec
jo
xor
push
dec
dec
xor
cmpb
mov
jle
push
inc
imul
jg
xor
imul
mov
out
out
mov
imul
sub
pop
jge
fwait
clc
gs
push
push
fwait
pop
pop
pop
fnsave
or
aam
xor
pop
sbb
rorb
jnp
pop
push
sbb
adcl
fisubrs
inc
dec
jmp
sub
fiaddl
hlt
jbe
imul
mov
push
xor
arpl
cmc
xchg
loopnew
mov
sbb
mov
sub
mov
mov
call
lret
aaa
fsubl
xchg
test
das
lea
je
push
inc
jge
fstpl
xor
inc
lds
lods
sti
dec
cmp
scas
in
lds
push
ja
lea
jmp
sbb
pop
iret
iret
and
dec
iret
ret
push
pop
es
mov
cmp
leave
mov
scas
outsb
ror
jns
arpl
stos
dec
cld
fwait
adc
in
jb
loop
inc
cmpsl
iret
int3
test
add
lea
inc
sbb
shrb
scas
push
je
mov
mov
icebp
sub
adc
mov
xchg
xlat
push
inc
jmp
fwait
cld
out
aas
jno
adc
mov
adc
jle
push
or
xchg
cli
leave
dec
sti
sub
ljmp
xor
stos
mov
mov
pop
insl
leave
dec
lcall
mov
mov
push
cmp
aad
es
push
jnp
mov
mov
xchg
jae
ret
ret
daa
jecxz
dec
nop
push
hlt
iret
mov
inc
test
cltd
movb
xor
test
mov
push
int3
imul
push
out
push
lds
cmp
cmp
cmpsb
sbb
push
ret
sarb
lret
or
dec
or
shrl
lea
std
pop
hlt
fistpll
ds
and
adc
cmp
aam
inc
mov
hlt
cmp
xor
jmp
push
in
lret
sub
scas
jns
adc
ret
cwtl
and
lods
movsb
push
push
add
les
ja
lret
jo
jno
dec
sub
mov
xchg
gs
add
pop
pop
jno
push
push
adc
ret
nop
mov
inc
jmp
pop
fbstp
push
pop
dec
xor
es
mov
mov
adc
pop
std
jno
fiaddl
mov
push
iret
shrl
and
hlt
aam
mov
pop
je
sub
sbb
push
das
cwtl
testb
jle
sub
inc
or
fistps
cmpsb
sbb
sbb
xor
xchg
fwait
ds
loop
dec
cs
xchg
jge
dec
int3
xchg
imul
sub
xor
jecxz
jnp
loop
inc
shlb
cwtl
test
fisubs
ret
mov
cmp
and
inc
xor
fdivrs
fdivs
popa
popf
push
add
and
js
popf
into
xor
and
mov
xchg
std
lods
scas
es
stos
lcall
mov
xchg
popl
insl
cs
xlat
jo
sub
mov
inc
mov
xchg
jnp
cltd
and
les
add
enter
loop
lods
push
sahf
jg
repnz
fsubrl
sahf
lock
fwait
adc
mov
mov
je
dec
out
jmp
cmp
jno
mov
inc
je
xorb
movsb
mov
sbb
cli
loop
dec
test
addb
and
cmp
adc
int3
mov
movsl
dec
bound
cmp
mov
push
cmp
stos
push
xor
pop
sarl
add
jne
sti
inc
mov
adc
jmp
mov
cmpsl
cmp
loop
out
adc
in
xchg
sub
cs
jp
or
fdivrs
ss
mov
aad
addr16
imul
mov
push
fs
or
xchg
dec
cwtl
jb
jmp
shrb
or
push
mov
adc
add
dec
lods
xchg
arpl
sahf
adc
leave
cltd
cmc
sub
sub
ljmp
shl
testb
mov
pop
lock
mov
je
rcll
xchg
lahf
ljmp
adc
nop
mov
cmp
sub
push
sub
inc
xor
lods
flds
mov
cwtl
xchg
cwtl
scas
xchg
out
icebp
or
rcrb
pop
jno
out
ds
and
pop
inc
inc
add
mov
add
push
and
rclb
xchg
mov
lock
je
fldt
cltd
mov
push
xor
dec
mov
pop
and
nop
dec
xchg
dec
xor
movsl
push
jg
jb
and
sbb
cld
jns
int3
push
insb
push
in
lea
add
rcl
jmp
jnp
xchg
lds
cmp
push
leave
jl
dec
stos
mov
lock
shll
fsubl
fnstsw
adc
adc
pop
push
or
aad
sbb
orb
mov
je
dec
lret
test
xchg
icebp
pop
lock
mov
jns
je
cmp
ffree
mov
popa
xor
shrb
pop
sbb
cwtl
jae
add
xor
stos
stos
ret
cmpsb
shrl
ret
outsl
inc
popa
jne
adc
hlt
push
fnstcw
fsub
xchg
ja
jle
or
test
imul
les
cs
fs
ret
shll
mov
dec
mov
mov
add
outsb
fisttpll
std
mov
bound
movsb
jl
mov
jbe
dec
dec
mov
jne
mov
xor
dec
push
xor
or
pop
cmc
jmp
int
mov
aaa
inc
push
xor
adc
fidivrl
stos
test
pop
fnstcw
ret
negl
xchg
and
sub
lahf
xor
and
movsl
cwtl
mov
mov
sarl
mov
mov
sub
movsb
cmp
lds
sub
jg
test
pop
cmp
dec
cmp
jmp
sub
sub
mov
sbb
pop
mov
cltd
pusha
and
lds
lcall
dec
lret
aam
cmp
pop
outsb
es
adc
mov
pusha
repnz
cmp
pop
ja
xor
sub
pop
xchg
cmp
sbb
xchg
xchg
mov
push
mov
sbb
inc
aaa
mov
movsl
add
push
outsl
call
aaa
and
rclb
inc
loopne
loopne
adc
fwait
mov
jo
sbb
mov
mov
dec
xor
jg
aam
sti
sti
add
gs
pop
out
int3
sarb
out
cmp
addr16
ret
into
fdivs
or
or
cwtl
test
inc
pop
stos
sbb
ds
pop
xor
dec
lahf
lods
rcrl
sub
add
xchg
xchg
mov
or
ljmp
add
in
add
pop
fdivp
in
movl
mov
xchg
and
cld
scas
inc
mov
push
mov
pop
mov
mov
adcb
mov
lods
dec
fildll
mov
jo
lods
sub
or
cmp
jecxz
sti
add
popa
sub
daa
dec
lcall
adc
pushf
pop
mov
or
dec
mov
xor
cmp
jne
mov
rol
testb
pop
mov
out
dec
push
jl
pushf
js
dec
xchg
and
sbb
pushf
rorb
rorl
or
js
xor
xchg
scas
dec
adc
push
les
movsb
dec
fsubrs
sti
cmpsl
jb
cltd
mov
pop
dec
int3
test
or
aaa
mov
icebp
movsb
pushl
inc
imul
outsb
scas
out
js
cs
inc
sbb
jle
dec
jae
inc
dec
sahf
mov
pusha
jnp
testl
and
outsl
cmp
xchg
mov
and
stos
lahf
jle
inc
clc
aas
in
testl
mov
mov
je
pop
push
fs
adc
data16
das
imul
js
push
or
fcmovnu
loop
mov
incb
push
xlat
pop
iret
lods
mov
rcl
jl
shlw
cmpb
lret
pushf
xor
lea
shlb
imul
out
dec
arpl
mov
and
negb
pop
loop
dec
jns
cmpsl
and
sahf
aad
cmp
sub
sbb
lds
mov
dec
jmp
sub
loop
cmpsl
mov
push
or
loopne
push
pop
add
xchg
int
nop
xor
and
addr16
test
sarb
in
inc
adc
adc
imul
mov
xor
add
outsl
push
xor
lcall
or
push
add
mov
addl
es
jne
out
mov
mov
pop
pop
fwait
into
sarb
inc
sbb
sub
adc
add
add
sbb
and
lock
les
jmp
cmpsb
insl
cltd
add
cmp
out
cltd
cli
insl
jl
jmp
adc
mov
ficomps
mov
fsubl
pusha
das
pop
jb
lods
addr16
fld
xchg
test
inc
push
xlat
scas
jmp
notb
sub
jne
push
fmuls
pop
mov
sub
fdivs
jp
dec
adc
mov
lods
pop
test
mov
mov
fwait
shll
cmc
inc
add
or
loope
je
xchg
mov
ds
jbe
pop
shll
ficoml
sar
mov
dec
pop
pop
fs
outsl
jo
inc
sbb
cld
xchg
mov
pop
push
cmp
inc
mov
loope
dec
aad
and
sbb
xor
mov
cmc
test
addr16
jbe
inc
push
cmp
outsl
push
fstps
sahf
sti
lret
ret
sbb
dec
dec
mov
inc
dec
aad
icebp
shll
repnz
add
add
js
fiaddl
test
aam
push
push
jno
push
fcoml
adc
dec
fsubl
mov
jne
dec
call
cli
movsb
stc
push
xlat
or
fxch
dec
mov
adc
adc
vmwrite
cmp
jne
insb
dec
pop
or
inc
mov
adc
roll
data16
xchg
add
dec
in
stos
pop
and
add
sbb
daa
out
jb
test
sub
adc
pop
push
lea
or
fidivs
cli
and
sbb
mov
enter
pop
and
clc
lods
jmp
movsb
mov
or
or
or
pushf
mov
fs
sub
lahf
int
orb
xor
add
mov
stc
and
and
outsl
and
shrb
mov
rorl
outsb
xchg
mov
lcall
iret
pop
js
mov
movsl
inc
lret
cmp
shlb
in
shrb
lahf
adc
sahf
inc
into
les
pop
push
xchg
scas
out
mov
and
pop
mov
jle
movsb
pop
jo
sub
inc
xchg
cs
mov
insl
sub
std
cs
adc
mov
lods
ret
sbb
inc
push
cltd
pop
lods
jmp
loope
jnp
or
pusha
xchg
jno
icebp
fisubs
add
push
lcall
es
scas
mov
ja
cmp
mov
jns
daa
outsb
xor
lock
mov
sub
insl
dec
adc
inc
add
ja
push
movsb
mov
and
out
mov
mull
aam
mov
inc
cmp
push
pop
dec
adc
jge
add
or
in
inc
incl
dec
daa
cmc
shlb
lods
jle
jle
bound
dec
lods
sbb
and
rorb
movsl
out
rolb
jp
xor
sub
jne
inc
mov
dec
cmc
fstp
mov
sub
stos
push
lods
mov
dec
ljmp
lds
dec
imul
addl
aas
out
or
fadds
xor
jb
pop
aad
fnstenv
sti
outsb
or
jecxz
fldcw
sub
mov
je
aam
dec
cld
std
imul
movsl
stc
fdivrs
popf
mov
fidivs
pop
push
jne
das
outsb
push
sbb
xlat
fdiv
dec
pop
addr16
add
mov
outsl
testb
addl
mov
clc
adc
adc
hlt
xor
jnp
dec
jecxz
call
in
popf
sbb
or
or
mov
mov
in
rorb
mov
add
add
cmpsb
test
cld
in
mov
push
stos
iret
lods
in
jbe
mov
sahf
in
and
mov
push
add
daa
icebp
pop
cmp
sbb
push
shlb
ja
data16
das
xor
and
rorl
pop
clc
cmc
dec
aas
fwait
popa
dec
xlat
mov
mov
aas
mov
add
sti
pop
jae
sbb
iret
sbbb
stos
icebp
push
jp
adc
int3
mov
into
pushf
icebp
sbb
dec
js
mov
fstps
add
push
in
mov
and
cmp
ror
xchg
xchg
hlt
sbb
test
push
stos
pop
fldenv
xorl
ljmp
lods
inc
xchg
lds
or
xchg
xchg
push
add
lods
mov
jle
out
data16
dec
popf
nop
test
sbb
dec
jne
es
or
lcall
rorl
sahf
jns
and
fistps
pop
ja
data16
fdivl
add
subl
sub
inc
pop
sub
mov
mov
pop
jle
in
mov
filds
and
xor
aad
push
xor
mov
repz
push
dec
jae
cmp
dec
cmp
enter
dec
imulb
jno
sarb
xchg
sti
sbb
and
imul
aam
and
movsl
xlat
and
adc
fisubrl
pop
and
sarl
lret
fst
pop
or
cmp
test
dec
pop
push
cmp
push
push
lret
push
jp
leave
jb
stos
je
out
or
adc
push
mov
imul
mov
push
adc
ret
cmpsb
stos
add
repz
and
adc
xchg
cmpsb
icebp
add
test
call
xor
inc
into
pop
rorl
ss
xor
into
fucom
daa
mov
in
daa
cmpsl
push
xchg
lods
repz
sbb
js
cmpsb
aaa
dec
cmpsb
mov
pop
filds
cmp
cli
loope
divl
jg
call
lret
push
hlt
sub
pop
xchg
rcrl
imul
pusha
sbb
xor
cmp
out
inc
scas
cmp
mov
incb
cwtl
add
push
sub
adc
movsl
mov
add
jns
dec
push
mov
pop
xlat
dec
stc
or
lahf
cmp
mov
and
test
xchg
test
inc
sub
sbb
clc
loopne
cmpsb
jle
in
mov
aas
ss
xor
imul
fwait
push
mov
lahf
sbb
cli
dec
pusha
mov
push
aam
faddl
jecxz
icebp
iret
and
pop
jp
mov
ret
xchg
push
xor
mov
adc
gs
jecxz
aaa
jge
mov
fsubrl
xchg
ror
adc
xchg
sbbl
mov
cwtl
es
and
inc
outsl
les
lock
fnstenv
mov
xor
fabs
scas
std
xorb
mov
pop
push
ss
pop
dec
out
rcll
jae
es
outsl
cmp
repz
cltd
inc
mov
mov
ljmp
bound
xor
ret
sti
rorb
rolb
cmc
or
scas
mov
xor
push
scas
je
aaa
xchg
imul
xor
mov
mov
lods
les
push
jae
rorb
leave
addr16
mov
fcomps
mov
aam
pop
sub
nop
adc
outsb
mov
sub
stos
test
nop
mov
cmpsb
loope
inc
xor
insl
idivb
das
shlb
adc
fdivs
and
pusha
insl
repz
xchg
cmp
xchg
mov
jbe
cli
js
pop
cmp
pop
xchg
inc
cmpsb
movsl
data16
sti
loopne
lock
lds
int
int3
push
cld
int3
pop
test
inc
je
nop
inc
jnp
dec
out
xor
dec
in
ret
jns
dec
je
add
scas
in
push
scas
test
cli
and
mov
push
aam
dec
mov
mov
and
mov
fwait
test
pop
test
rcrl
xor
nop
push
ds
ret
lock
xor
ljmp
inc
cmp
pop
popa
adc
or
js
in
inc
xor
jmp
mov
fcmovnbe
inc
pop
dec
jmp
and
cmp
dec
insb
xchg
adc
lods
jae
mov
icebp
lret
sub
adc
push
fnstsw
jb
mov
mov
dec
je
outsl
int3
in
cmp
outsb
xor
jne
into
imul
mov
fbld
or
dec
daa
loopne
cmc
mov
movups
push
push
imul
stos
add
daa
sub
rol
pop
ss
and
ds
iret
hlt
inc
jge
mulb
lds
pop
add
sub
cmpsl
out
cwtl
cs
sarl
jb
enter
test
adc
fcompl
jb
mov
mov
jne
and
nop
imul
in
add
xchg
xor
xchg
and
push
call
ret
adc
push
leave
test
adc
subl
pop
pop
int3
aas
shlb
fwait
scas
pushf
inc
out
jle
push
cmpsl
test
imul
mov
pop
ljmp
inc
mov
call
inc
cmpb
mov
sub
fcmovb
add
fdivrs
pusha
std
lret
test
clc
inc
add
roll
dec
ljmp
mul
popf
mov
mov
sahf
and
cld
dec
les
inc
cmp
out
outsb
sti
int
fmul
jb
fstps
inc
xor
sub
divb
stos
push
and
push
and
dec
xor
adc
mov
push
popa
loope
inc
aad
inc
mov
push
lods
jg
sbb
rolb
imul
ja
bound
mov
lcall
movsl
lds
jno
add
iret
or
loop
push
mov
pop
and
subb
xor
inc
sti
ficomps
out
mov
and
push
movsb
push
sbb
adc
popa
shll
lret
or
xchg
pusha
cmp
inc
je
in
into
hlt
sti
or
jb
mov
add
mov
lods
dec
cmp
mov
loop
mov
jno
jno
int
jnp
daa
imul
jno
xchg
test
in
insb
sbb
mov
add
xchg
cwtl
scas
getsec
cli
in
sub
cmp
dec
push
fcoml
push
sub
or
pusha
test
movsb
and
fidivs
hlt
pushf
cmpsl
in
sbb
call
pop
jns
xor
lods
xor
add
dec
repnz
xor
xchg
jno
push
out
and
arpl
mov
ret
test
imul
aas
xchg
push
push
xor
push
dec
cmpsl
cld
jp
push
mov
push
in
xchg
pop
aam
xor
dec
fwait
sub
rcll
and
push
lock
adc
repz
shl
jo
jecxz
xor
jg
dec
dec
ljmp
mov
icebp
out
fstl
pushf
ret
inc
mov
cld
sbb
lretw
mov
mov
jo
cmp
shll
push
out
add
mov
out
pusha
pop
xor
movsl
xchg
loop
push
inc
mov
and
adc
xchg
test
lods
dec
ret
xchg
add
or
jns
add
loope
adc
mov
dec
xor
pop
call
int3
ret
jmp
xchg
imul
mov
cmp
mov
es
sub
pop
repnz
test
stc
and
cmc
or
jge
jg
sahf
out
loope
incl
jg
test
cmp
mov
scas
loope
stos
add
adc
jnp
in
mov
test
xchg
sub
subb
and
insb
cmp
fbstp
fisubl
pusha
adc
insb
shll
inc
movsb
clc
enter
xchg
fnstcw
fcmovbe
or
repz
pop
or
add
cmp
pop
xchg
shrl
scas
into
mov
rcr
sarl
popa
pop
push
outsb
push
jmp
aas
sub
adc
arpl
sub
bound
pop
lods
lcall
fsubrp
sbb
push
xchg
and
loopne
push
adc
fldenv
push
add
mov
mov
fldcw
pop
call
adc
xchg
xor
add
nop
mov
mov
xor
repz
xor
test
arpl
clc
or
jne
add
std
push
fwait
jnp
push
cmp
jecxz
stos
xchg
cmp
push
inc
jno
out
cmpsb
and
and
mov
cmp
loopne
xlat
lcall
js
xchg
xor
lea
pushl
test
add
mov
mov
push
sub
push
adcb
push
jg
ss
repnz
mov
aam
nop
mov
js
ljmp
push
jecxz
mov
xchg
fildl
data16
ljmp
pop
in
mov
divb
loop
adcb
iret
mov
les
push
add
push
or
mov
mov
cmp
dec
lods
push
cwtl
cmpsl
sti
fs
data16
shll
cmp
ds
in
mov
daa
sbb
push
dec
inc
sub
pop
sub
inc
daa
pop
push
stos
sbb
popf
mov
xor
jp
mov
call
and
cmp
and
jbe
inc
sbb
loopne
mov
mov
das
adc
rorl
test
or
mov
sbb
dec
sub
cmp
add
xchg
shlb
xchg
sahf
std
out
pushf
sbb
movsb
lret
adc
push
popa
and
es
push
pop
and
imul
or
rol
push
xchg
push
push
jp
aaa
and
jae
xchg
in
fsubrl
int3
imul
mov
test
std
adc
fnstcw
fs
repz
push
push
imul
aad
sub
mulb
mov
sub
xlat
fiadds
adc
fldt
out
dec
sbb
jnp
push
lds
mov
xchg
cmp
pop
fnstcw
xor
xchg
cmp
insb
and
imul
xor
rclb
mov
sahf
outsb
ds
nop
sub
push
inc
sbb
jg
xor
jp
test
pop
jns
mov
fnstsw
fldenv
sbb
adc
pop
ljmp
xor
xchg
fwait
mov
adc
inc
filds
inc
mov
loopne
mov
cmp
push
in
pop
or
sarb
pushf
sub
jo
inc
es
pop
aas
jp
andl
call
sbb
mov
lahf
lret
and
sub
idivl
push
fwait
outsb
insb
inc
ljmp
and
aad
test
mov
push
imul
std
push
popa
loope
es
sbb
push
ja
stos
jns
xor
arpl
das
shlb
mov
sub
mov
add
mov
stc
clc
pop
inc
dec
cmpsb
jne
stc
mov
push
mov
ds
sub
mov
push
std
pushf
addr16
incb
mov
popa
pop
sar
mov
mov
leave
inc
add
test
stos
pop
scas
cmp
xchg
pop
pop
dec
push
pop
mov
repnz
enter
or
adc
jo
movsl
jl
mov
popf
mov
cld
cmpsl
sbb
and
inc
addr16
in
mov
ficoml
push
jle
and
sbb
dec
cmpb
xchg
arpl
or
call
test
add
mov
and
inc
xor
in
out
scas
movb
xchg
hlt
repz
lret
push
mov
bound
rcl
fs
loop
lret
add
jbe
sub
and
int3
les
xchg
rolb
ds
dec
lds
add
stos
push
dec
out
imul
lea
mov
cld
jl
fsub
int3
xor
jecxz
ret
or
sbb
enter
movsb
cmp
pushf
aaa
fists
mov
rsqrtps
push
or
and
fldcw
das
mov
int3
adc
neg
orb
inc
dec
jle
pop
jne
pop
mov
xchg
pop
lret
xor
jp
mov
test
mov
ds
mov
popa
out
xchg
sub
cmpb
mov
jmp
sbb
lret
psrad
popf
jg
ret
nop
xor
lock
jecxz
adc
push
mov
sti
mov
pop
das
mov
xlat
lea
stos
or
xor
lea
cs
lret
push
scas
xor
mov
jmp
sbbb
mov
push
sbbl
inc
push
mov
xchg
loope
xor
mov
stos
fisubs
lock
pop
outsb
and
icebp
xchg
sub
sub
mov
in
push
rcr
rcll
jecxz
xchg
mov
jmp
daa
inc
mov
repnz
call
xor
sbb
js
movsl
pop
inc
jne
jmp
icebp
mov
fnstsw
es
adc
test
push
movsl
aam
adc
test
sbb
test
fs
mov
loope
shl
jle
popa
lcall
popf
ljmp
pop
cld
or
push
sub
xchg
sub
mov
push
push
mov
pop
je
or
aaa
sbb
into
jmp
push
popf
cmp
cmpsl
loope
inc
jle
mov
pop
lds
data16
in
jmp
ss
incb
bound
sub
jb
inc
cmc
popf
pop
es
xchg
inc
or
shrb
push
inc
xchg
enter
imul
push
or
mov
test
push
loope
mov
xor
and
stc
mov
mov
lret
jge
and
aam
jbe
dec
adc
subl
lods
arpl
aas
xchg
sahf
pusha
sbb
movsb
xlat
popa
or
lret
mov
aaa
paddusb
pop
mov
call
outsb
jbe
test
push
cmpsl
cwtl
pop
adc
fcmovnu
nop
rcrl
dec
stc
shl
daa
adc
adc
scas
decb
or
lahf
or
popl
movsl
xchg
push
js
repz
mov
pushl
shrl
aam
pushf
cmpxchg
jmp
int3
std
and
dec
data16
jmp
push
sarl
js
imul
push
mov
rcll
push
mov
mov
lret
cmpsl
xchg
xchg
and
mov
pushl
cmp
push
lds
lods
pop
lahf
pushf
dec
lret
fnstsw
stc
stc
shll
xor
leave
mov
mov
shr
shll
jne
ss
les
pop
or
enter
lret
mov
stos
in
pop
js
rorl
fbld
mov
sub
jle
sbb
pop
and
mov
in
cmp
ficomps
xlat
xchg
pop
push
xchg
inc
inc
jl
mov
sbb
es
jg
outsl
sarb
test
int3
sbbb
and
and
or
or
incb
sub
js
or
push
fidivl
mov
mov
inc
adc
fmull
cmp
sbb
rorb
dec
movsl
cmpsl
popf
std
xchg
lret
sbb
add
rcrl
push
add
push
scas
test
nop
sbb
lds
ljmp
in
in
xchg
stos
sbb
addr16
mull
mov
loope
inc
xlat
lock
icebp
xchg
jo
cmc
iret
xchg
in
loope
or
je
in
xchg
push
xchg
stos
outsl
jno
push
or
nop
mov
sub
pop
inc
fildl
ret
loopne
addl
cmp
pop
sub
cs
hlt
or
lea
add
pop
adc
adc
pop
std
or
inc
aad
push
pop
add
pop
in
adc
sbb
xchg
popf
jmp
fs
sbb
lret
jbe
pop
or
xchg
int
int3
mov
sub
dec
pop
rcr
or
shll
mov
aad
xchg
mov
and
rcrl
ffreep
xchg
inc
push
or
mov
pop
jne
jmp
push
xchg
cmp
shll
dec
dec
stos
add
outsl
pop
test
dec
lds
sbb
push
ficomps
call
pop
cmp
inc
push
push
push
jle
scas
aas
shlb
xchg
mov
outsl
xchg
leave
hlt
push
xchg
and
sbb
mov
sbb
pop
ds
dec
ljmp
jge
cmp
jge
xchg
add
into
adc
inc
xchg
mov
xchg
xor
add
js
adc
push
or
aad
mov
js
jne
mov
enter
cmpb
pop
sbb
outsb
cmc
jb
insb
cmp
mov
pop
mov
and
and
mov
push
fidivrl
dec
into
xor
push
inc
cmp
negb
pop
or
das
test
push
clc
adc
push
out
addl
sbb
jo
or
clc
aad
rcrb
out
push
divb
stos
xorl
and
or
leave
je
mov
dec
cmpsl
inc
rcll
les
in
stc
shl
inc
test
out
dec
hlt
dec
paddusb
mov
neg
and
clc
fneni(8087
dec
jl
mov
mov
sbb
adc
cltd
test
orb
jo
pop
adc
inc
and
arpl
nop/reserved
push
inc
ljmp
scas
xorl
ss
cmp
sub
sbb
roll
lods
sahf
xchg
ret
cmpsl
pop
cmc
adc
add
mov
scas
dec
mov
mov
in
pop
adc
loope
add
rcrb
mov
add
pop
mov
enter
inc
add
push
xchg
bound
push
arpl
pop
pop
in
pop
push
imul
arpl
cltd
jmp
outsl
fincstp
dec
or
mov
jo
add
rcrl
repnz
lcall
in
in
xor
out
rol
aas
aam
cmp
sbb
les
insl
stos
jno
movsb
out
or
and
icebp
xor
std
add
mov
pop
psadbw
mov
sub
push
fs
test
fnstenv
dec
or
dec
jg
jle
jle
sub
and
jl
cmpsb
mov
mov
sub
rcrb
pusha
mov
je
mov
adc
out
aas
arpl
jle
pop
cmp
in
xchg
lods
frstor
cmpsl
cmp
gs
and
shlb
xor
pop
mov
jne
pop
dec
ss
bound
jne
int
fnstsw
pusha
xchg
xchg
jo
inc
hlt
mov
xchg
fadd
mov
data16
xor
xlat
push
push
xchg
and
out
icebp
mov
test
add
adc
mov
xor
push
xchg
aaa
fcoml
dec
aad
add
iret
imul
pusha
push
adc
mov
stc
enter
sbb
aam
pusha
mov
push
sub
scas
push
movsl
sbb
pop
sbb
bound
movb
push
cs
loope
and
das
pop
inc
scas
add
pop
out
test
jge
fsubp
or
dec
mov
sub
call
jne
xchg
cltd
pop
mov
lret
lahf
xchg
loopne
jbe
fs
enter
pop
rorb
or
int
mov
xchg
sbb
out
lret
test
sbbl
ret
ret
inc
push
sbb
xchg
ror
push
and
scas
jno
clc
test
fstpt
jns
pop
inc
in
ret
add
pop
push
aam
cmp
xchg
xchg
cmp
loopne
dec
dec
inc
inc
jns
or
push
das
mov
sub
aam
aas
inc
add
cmpb
out
pop
je
sbb
arpl
jmp
mov
adcl
jb
cmc
jns
push
pop
test
fcmovnbe
pushf
je
sbb
mov
sahf
mov
into
addr16
jno
inc
add
fs
ss
movsb
add
insb
cwtl
pop
stc
push
clc
push
cli
xchg
xchg
rclb
sub
pusha
push
cmc
lcall
loop
into
lcall
sub
in
mov
and
xchg
scas
out
aaa
sub
bound
xchg
mov
mov
and
pushf
dec
dec
lods
icebp
push
mov
and
pop
popa
jl
mov
xor
into
or
lcall
xchg
or
scas
lds
adc
scas
mov
and
xor
repz
loope
sbbl
mov
xor
and
fsubl
fisubs
ljmp
xchg
dec
jne
test
add
addb
int
mov
jmp
cs
push
add
lods
aad
lret
out
sub
xor
mov
and
outsl
jo
jnp
mov
dec
mov
in
popf
mov
leave
xchg
mov
mov
ja
adc
xchg
loop
jns
cltd
cmpsl
and
dec
pop
in
lret
aaa
mov
fs
in
ret
arpl
jge
pop
mov
dec
sub
adc
movsl
negl
mov
je
pop
xchg
add
pop
add
jno
test
shll
xchg
push
int
pusha
sbb
int
inc
mov
sbb
or
lods
lods
mov
jnp
or
push
dec
inc
adc
or
jb
sub
pushf
shrl
and
mov
sbb
jge
fistl
aad
xchg
mov
pop
xor
fsts
aad
and
shll
mov
jecxz
call
adc
mov
rcll
fnstenv
imul
mov
aad
stc
call
push
clc
movsl
xadd
shr
pop
adc
mov
jo
sar
mov
jbe
and
sbb
cmp
xor
scas
clc
mov
cwtl
clc
cmpsb
xchg
aad
mov
dec
ss
int
and
clc
pop
stos
sarl
iret
pop
aas
push
stc
mov
decb
cld
pop
and
insb
out
add
faddl
mov
cli
mov
enter
xor
xchg
xor
ret
mull
test
hlt
xor
xchg
inc
mov
mov
cmp
scas
xor
cwtl
stos
inc
xor
pop
out
fwait
ret
jmp
add
pop
stos
dec
sbb
sub
inc
mov
or
fwait
cmp
cmp
bound
daa
add
adcl
icebp
loop
shl
mov
pop
aad
in
xchg
and
loope
adc
mov
leave
test
inc
add
sub
dec
mov
xchg
sarb
push
out
ficoml
ret
fildl
xchg
mov
push
bound
inc
add
test
sbb
loop
movsl
adc
jge
clc
xchg
lret
or
mov
rcll
mov
stos
mov
into
imul
inc
lods
fmull
sti
loop
adc
push
adc
repnz
test
and
add
pop
out
insb
into
test
pop
jb
test
jnp
or
inc
fs
cmp
pop
fldl
shrb
sbb
scas
es
mov
adc
lods
mov
mov
push
outsl
sbb
clc
shrb
stc
push
fcmovbe
clc
sti
ret
loopne,pt
std
sahf
in
icebp
xchg
add
xor
jecxz
test
mov
insl
adc
xchg
inc
movsb
or
xchg
cs
xor
loopne
adc
and
xchg
cmp
push
mov
jle
cltd
add
mov
push
xchg
mov
daa
xchg
test
and
jg
adc
scas
movsb
add
mov
mov
cmp
xchg
pop
popa
mov
shlb
pop
mulb
scas
pop
add
pop
xor
push
and
xor
pop
adc
rcrl
imul
cmp
and
loop
loope
iret
movsl
xor
mov
out
sbb
add
bound
sub
fildl
xor
cs
cmpsl
push
and
cmp
mov
jmp
xchg
sub
shrl
pop
or
in
inc
aaa
pop
xor
jb
in
dec
inc
mov
call
mov
rclb
sub
aas
bound
push
lds
mov
sbb
add
jl
pop
ret
mov
adc
push
jns
push
iret
xlat
sub
or
lods
fdivr
cwtl
jge
fsubrl
lret
mov
push
loopne
sbb
cmpsl
bnd
fadds
adc
mov
pop
mov
xor
pop
push
cmpsl
cld
inc
in
add
mov
out
dec
bound
cmp
int3
mov
jns
sub
inc
sbb
cmp
xor
lret
pop
jle
rorl
sub
aam
andl
xor
pop
aad
pop
jae
jmp
or
movsl
dec
jns
inc
mov
aam
sbb
xchg
callw
push
cmc
jle
aam
div
and
sbb
jecxz
aas
adc
inc
xchg
fists
ret
cmp
jle
pop
push
insl
pop
dec
xor
jp
pop
sbb
jg
fisttpll
loop
pop
mov
fidivrs
sub
shll
adc
arpl
punpcklwd
push
ja
adc
popa
push
das
ror
pop
xchg
andb
sub
sar
inc
mov
and
pop
les
adc
jmp
adc
pop
and
lahf
push
out
adc
jle
add
cmpsb
iret
mov
cmp
addb
xchg
repz
push
iret
xor
sahf
shlb
jmp
push
or
arpl
xchg
fldt
adc
test
jp
pop
pop
and
fsub
dec
lahf
lock
outsl
and
shlb
sti
add
pop
retw
add
xor
cmp
xchg
push
iret
sub
les
mov
out
push
aam
pop
cmp
push
push
add
insb
into
mov
cli
fwait
cmpsb
mov
test
stos
and
jae
scas
or
call
stos
xchg
sbb
xlat
pop
in
outsb
adc
pusha
mov
pop
add
mov
dec
or
mov
sub
in
mov
sbb
adc
cmpsb
adc
mov
inc
push
cltd
out
js
cmp
jae
es
es
sub
jmp
outsb
jmp
jl
lahf
adc
xchg
stos
insl
dec
fs
mov
call
sbb
int
aas
arpl
jne
pop
rorl
fsubl
adc
insl
movsb
movl
dec
imul
cld
rorb
repz
scas
cmc
sbb
addb
cmc
or
jmp
int3
pop
sti
addr16
mov
je
xorb
leave
mov
mov
jo
cmpsl
inc
movsl
xor
fcmovnu
mov
ljmp
das
ds
pop
jge
inc
and
xlat
addb
punpcklwd
sbb
imulb
int
sbb
mov
jl
sub
xor
lock
adc
popa
mov
or
ljmp
inc
cmpsl
push
push
add
pushf
add
daa
cmp
jo
xchg
arpl
or
sarl
imul
and
dec
in
add
leave
cmp
into
rclb
pop
ja
jg
inc
inc
jge
inc
pop
sbb
push
sub
pop
mov
hlt
mov
cltd
xor
mov
lahf
or
fnstsw
mov
mov
das
sub
stos
dec
test
loopne
add
mov
clc
add
out
dec
jl
push
and
sub
mov
xor
stos
pop
icebp
or
out
loopne
stc
pusha
testb
cmp
out
and
ficompl
xorl
xchg
ret
mov
jbe
cmp
fs
xchg
repnz
sbb
cmp
xchg
loop
pop
test
add
mov
mov
or
add
les
mov
push
pop
cmovp
cs
sub
scas
hlt
in
inc
mov
jb
add
xchg
xor
lcall
sub
loopne
ret
dec
pop
jne
cld
pop
mov
mov
mov
insb
or
jge
xlat
jne
pop
lods
push
xor
and
aas
movsl
jl
iret
pop
call
and
add
cli
push
jne
xor
cmp
inc
sub
mov
mov
test
ret
xor
aaa
jge
hlt
dec
mov
popf
aad
cmp
jns
xor
dec
or
mov
inc
popa
push
push
int3
repz
sub
mov
sub
repnz
or
clc
insl
and
jp
mov
jbe
negb
outsl
and
in
mov
mov
subl
lahf
insb
inc
jl
shll
ret
mov
mov
in
jnp
dec
arpl
scas
add
pop
jae
test
cmp
mov
xor
add
shlb
xchg
es
sbb
call
rolb
mov
fildll
and
pop
test
sub
dec
pop
scas
test
cmpsb
or
mov
or
daa
pop
push
fldl
cld
loopne
imul
jl
iret
inc
inc
data16
xchg
adc
push
mov
jmp
scas
shl
mov
jbe
stos
shll
adc
cmp
add
faddl
rcr
or
in
out
add
and
out
loope
mov
fisubl
pop
dec
hlt
or
inc
addb
fmull
xchg
mov
aas
fwait
call
in
mov
jbe
and
push
mov
adc
leave
mov
pop
in
xchg
cmp
sbb
sbb
jmp
insb
sbb
dec
cmpsl
adc
jecxz
pop
mov
xor
sub
add
stos
mov
jle
ja
sub
adc
out
dec
rcrl
insl
shrl
hlt
dec
adc
ret
cmpb
cltd
ds
mov
popf
lds
sarl
adc
xchg
add
cmpsb
xchg
cmc
sti
divl
mov
jg
xchg
pop
xchg
cmc
push
push
push
and
adc
inc
or
rorl
inc
orl
xor
mov
mov
xlat
out
gs
in
push
out
adc
or
sub
int
test
enter
insl
add
je
lock
cld
cmpsb
data16
sub
arpl
cmpsb
or
inc
xchg
mov
cmpsb
jae
xchg
fmulp
fdiv
mov
jp
pop
dec
mov
xor
cwtl
scas
lret
or
std
lea
repnz
cltd
mov
sub
mov
in
out
mov
ds
mov
jns
xchg
imul
fistps
std
add
push
mov
popa
xor
addr16
mov
push
and
and
dec
cmpb
xor
repnz
jp
popa
addr16
addr16
fisubrs
out
cmp
inc
ret
mov
test
push
jbe
loopne
in
rcll
inc
shr
xor
jns
and
add
icebp
jbe
inc
nop
mov
jmp
test
ss
enter
sahf
sti
lahf
cld
ret
leave
jmp
push
addr16
and
pop
push
cmp
xor
int
mov
shlb
sbb
jae
popa
jg
xchg
pop
push
test
mov
mov
xor
stos
mov
fstpt
xor
push
jnp
push
rcll
lcall
xchg
mov
push
inc
test
lret
flds
insl
sahf
les
push
pop
pushf
cwtl
mov
rcrb
bound
clc
fnstcw
daa
cmpsl
jp
mov
dec
iret
cmpsl
rolb
jns
xor
jge
decl
add
mov
adc
mov
push
test
sub
xchg
aad
xchg
stos
mov
mov
test
jl
fsubrp
or
cmc
push
jge
stos
mov
adc
sbb
pop
iret
xchg
shll
sbb
in
push
es
mov
adcb
sbb
sti
je
imul
pushf
fidivl
popa
jns
ss
sti
dec
pop
dec
daa
fdivrp
inc
gs
jae
das
add
ficoms
add
dec
or
icebp
dec
shll
popa
lcall
xchg
sbb
orb
adc
push
and
movsl
jnp
xchg
daa
cmpsl
mov
gs
rolb
sub
pushf
and
xchg
mov
cli
sub
pushf
test
rcrl
add
xchg
addl
jmp
push
push
in
shll
mov
xor
or
je
leave
sub
xchg
test
push
xor
aas
add
mov
and
pop
add
mov
and
pop
xchg
cmpsb
mov
push
sub
imul
jbe
ret
repnz
cmc
stos
call
std
sbb
push
stc
inc
in
sub
pop
push
mov
loope
stos
xchg
push
icebp
inc
pop
mov
pushf
in
idivl
pusha
pop
repz
ret
push
push
test
ds
out
pop
jl
inc
jle
mov
add
jne
mov
stc
jbe
subb
inc
ds
jecxz
push
pusha
push
ret
add
add
dec
add
lahf
or
ds
test
out
dec
dec
into
lcall
jle
addr16
lcall
mov
cmp
pop
imul
mov
into
sbb
lret
xchg
shrl
repnz
stc
jae
lds
jnp
jne
aaa
les
dec
sub
js
into
data16
add
cld
movsl
in
sti
sub
mov
mov
xchg
icebp
mov
adc
mov
shlb
push
enter
out
cltd
inc
cmp
shl
jecxz
cmp
mov
iret
mov
sahf
dec
adc
jl
mov
push
jmp
mov
cmp
dec
js
pop
add
icebp
xchg
sbb
and
filds
xchg
loop
fadds
loope
add
lret
mov
mov
rclb
rcll
cmp
sti
je
movsb
loop
xchg
inc
xchg
inc
sub
mov
xor
cltd
mov
sub
data16
lcall
loope
inc
cli
flds
pop
lods
xchg
roll
or
and
pop
xchg
cmp
imul
movsl
adc
sbb
or
adcb
incl
fisttps
mov
mov
mov
int3
je
idivb
sbb
and
lods
fisubs
lock
mov
cwtl
inc
inc
push
and
loopne
les
push
xchg
test
ret
dec
sbb
movsl
shlb
push
pop
int3
aad
popl
in
das
outsb
in
testb
or
incl
aaa
cmp
sub
or
pop
std
mov
imul
pop
in
mov
loope
or
dec
push
jmp
jg
and
pop
xchg
addr16
jnp
xor
mov
push
mov
mov
icebp
lea
mov
hlt
fimull
jecxz
mov
shl
push
sub
xor
push
xchg
bndldx
jmp
inc
inc
dec
inc
mov
insb
and
push
mov
mov
mov
rol
mov
out
data16
movsl
into
lods
sbb
enter
mov
fnstsw
xor
mov
movsl
subl
jle
sub
pushf
data16
push
push
icebp
push
dec
pop
cmp
aad
cli
ljmp
xorl
mov
inc
cmp
push
movl
es
ds
iret
int3
or
xchg
cmpsl
out
push
in
nop
dec
cmp
movsl
add
in
dec
sbb
inc
push
cmpsb
adc
hlt
pop
adcl
pop
xchg
push
ret
jns
outsl
cmpsl
out
mov
dec
xor
push
rol
cmp
or
imulb
lret
inc
sub
mov
pop
and
jno
adc
xlat
sub
scas
mov
dec
cmp
insb
mov
mov
or
arpl
lret
cltd
insb
jb
mov
and
shll
or
mov
sub
mov
pop
inc
cmp
cmp
mov
inc
lahf
ja
sub
js
in
xchg
nop
add
jl
and
mov
jmp
and
push
arpl
sbbl
lret
xor
adc
sbb
repnz
fidivs
std
jle
jle
adc
loop
sbb
pusha
jb
xchg
push
jb
cs
out
loop
in
or
imul
je
sub
add
sub
push
jb
popf
jl
and
xchg
outsb
mov
das
mov
cmc
fwait
rorl
dec
adc
mov
sub
fs
push
xor
jmp
stos
cs
cmc
aaa
daa
pop
sub
clc
into
mov
outsb
fsts
jae
mov
pop
stos
jl
cmp
add
lret
and
jmp
icebp
rorl
fsubrl
aad
stos
fcomps
xor
outsl
dec
cmp
aam
push
cmp
jl
out
stc
ss
or
pop
ficomps
and
jne
std
pop
shlb
stos
popa
and
xchg
notb
not
lcall
out
xchg
push
arpl
addr16
mov
mov
leave
pop
mov
test
sti
xchg
mov
andl
arpl
and
cmp
and
xlat
scas
movsl
jge
lret
popf
fldcw
leave
xchg
mov
adc
in
push
shrb
outsb
insl
out
dec
cmpsl
pop
gs
mov
mov
test
jmp
popa
subb
idivl
xchg
js
stos
jno
out
popa
adc
ffree
outsb
xor
xchg
lods
mov
xchg
mov
mov
cld
movb
js
shrb
ljmp
stos
test
cmp
insb
lahf
sub
negb
jnp
sub
lret
fildll
mov
xlat
fcoml
scas
jb
in
and
enter
popf
jecxz
dec
das
cmp
aam
cmp
mov
int3
inc
roll
pop
pop
adc
test
pop
cmp
gs
arpl
and
cmp
xchg
shlb
out
inc
stos
sbb
lcall
mov
push
dec
jb
lahf
cwtl
mov
jle
movsb
insl
add
out
sbb
imul
fistl
mov
xor
dec
pop
adc
cmp
sbb
sti
ret
lcall
push
jnp
sub
jne
lea
adc
cwtl
lods
xchg
fadd
clc
arpl
inc
repnz
mull
or
je
sub
mov
sbb
cmp
add
push
xchg
or
ret
ret
jo
cld
inc
jbe
sahf
add
dec
mov
ficompl
xchg
add
mov
pop
add
mov
pop
xor
xchg
lods
jp
mov
adc
cmp
push
push
jbe
jmp
mov
push
rcll
jp
scas
cltd
in
mov
lret
jle
jne
stos
jle
inc
sub
test
aam
mov
sub
aam
pop
jge
dec
fsubl
mov
ljmp
fcmovnbe
ja
adc
popw
cmpsb
and
push
ret
jle
stos
add
aas
lret
sbb
mov
test
test
or
in
jp
loope
push
fsubs
in
mov
mov
mov
lret
gs
les
sbb
enter
sbb
push
negb
mov
sbb
insl
dec
stos
jp
test
shl
orl
loop
push
mov
dec
shll
push
pop
scas
into
clc
adc
mov
or
cmp
dec
pop
aad
dec
push
jl
pop
scas
lds
add
lods
push
rcrl
or
std
or
or
xchg
test
shll
mov
mov
outsl
stos
add
add
mov
mov
idivb
sahf
fsubs
push
xor
call
jo
push
push
mov
mov
cmp
xchg
testl
inc
hlt
sbb
test
fucom
les
lods
rorl
mov
ret
cwtl
stos
sub
inc
sub
adc
xor
fdivrl
cld
negl
aam
out
push
xchg
cmp
mov
cmp
xchg
rcrb
aad
mov
pop
mov
into
std
sub
pop
cmpsl
js
mov
lcall
and
ja
mov
or
scas
pop
cli
loopne
test
xchg
xchg
xorb
dec
xchg
jb
ja
xor
adc
std
pop
mov
and
lret
add
pop
pushl
mov
push
xor
pop
stos
in
sbb
stc
mov
xchg
stos
sub
cltd
jl
pop
lcall
sub
dec
gs
in
and
mov
dec
mov
filds
or
add
rcrb
jge
dec
push
repnz
sar
mov
out
adc
mov
mov
push
loope
shrb
mov
lock
push
pop
or
and
in
aaa
mov
and
pop
fwait
push
int3
dec
std
pop
mov
mov
xorl
imul
mov
out
push
push
imul
dec
push
mov
notl
push
out
or
and
cmp
xchg
mov
cltd
jecxz
imulb
cwtl
xor
dec
sub
pop
in
daa
xor
mov
gs
cmp
daa
notb
push
test
int
or
jl
xchg
fnsave
cld
sbb
sub
mov
bound
mov
push
es
scas
repnz
outsb
jno
pop
mov
pusha
bound
fdivs
push
lods
mov
outsl
mov
xchg
inc
fists
jecxz
adc
inc
xchg
add
adc
iret
xchg
pop
movsl
cmp
hlt
out
push
std
push
jbe
push
adc
test
pop
loope
adc
lods
sub
or
mov
mov
in
mov
shll
std
jge
push
fsubs
sbb
sub
mov
adc
mov
pop
ja
pop
push
jbe
andl
xchg
xchg
adcb
gs
insl
jae
cs
inc
mov
inc
jno
movsl
add
sbb
loop
xchg
pop
sub
sti
push
gs
out
in
insl
lds
xlat
mov
loopne
push
adc
inc
sbb
sar
push
sbb
add
dec
and
add
add
fdiv
call
push
pop
xchg
rorb
or
jae
out
jb
xchg
scas
mov
push
jge
movsb
xor
int
mov
ret
and
adc
dec
cld
clc
iret
sbbl
mov
dec
paddsb
fbstp
lods
inc
ss
cmp
jg
adc
ss
pop
stc
insb
add
sbbl
imull
repz
push
aas
sbb
cmp
push
xchg
repnz
sbb
imul
cmp
out
out
ficompl
mov
dec
jl
jnp,pt
mov
repnz
pop
dec
and
pop
push
loopne
xor
push
xorb
lea
mov
jmp
sbb
cltd
xor
push
and
push
ds
test
cli
ud2
popf
mov
cmpsl
out
sbb
call
in
mov
pop
add
rcl
cwtl
std
ljmp
sub
pop
call
mov
subl
stos
movsb
xor
shll
out
pop
lea
rclb
loop
cwtl
mov
stc
mov
mov
adc
pop
decl
lds
or
mov
cli
test
and
xchg
add
adc
pop
inc
add
stos
daa
jbe
out
push
pop
mov
jmp
fistl
pop
fmul
mov
or
mov
popf
jl
pushf
adc
xchg
out
pop
incl
jle
popa
call
jb
fdivs
cli
inc
arpl
out
ss
in
push
push
jnp
jns
sahf
mov
shl
mov
sti
add
mov
pop
xchg
jo
imul
xchg
jbe
inc
add
jns
ret
mov
in
xor
adc
shr
or
jbe
and
insl
sub
shrb
rclb
jb
mov
lahf
jb
popa
das
into
in
jne
dec
lea
sbb
mov
xchg
mov
mov
aad
fwait
pusha
in
xchg
mov
pop
adcb
leave
sub
dec
aad
inc
lods
xchg
sbb
cmp
push
dec
clc
insl
push
and
cmp
bound
adc
or
or
mov
pop
and
sub
insl
or
repnz
enter
xor
daa
mov
fs
mov
jge
test
inc
and
fstpt
or
dec
enter
or
dec
testl
dec
push
add
push
in
ret
shll
dec
test
imul
pusha
and
jbe
sbb
shr
mov
jns
jbe
cmp
insl
test
add
mov
inc
xor
lods
bound
and
loopne
dec
mov
sbb
lds
mov
repnz
js
adc
leave
pop
jb
neg
mov
mov
jae
mov
dec
push
pop
jns
jnp
jnp
cltd
xor
fldcw
faddl
lock
adc
mov
gs
mov
in
ret
shr
xchg
add
enter
mov
les
test
sbb
in
fsts
xchg
xchg
sub
incl
lret
add
jmp
out
jb
mov
mov
add
insb
cmpsl
imul
sbb
or
jecxz
clc
jle
pop
push
jbe
shll
movsl
sbb
inc
cltd
movaps
repnz
xchg
sbb
roll
mov
or
pushf
xchg
rorl
in
adc
in
lahf
push
push
pop
dec
jae
jl
imul
pop
xchg
mov
xor
addl
inc
pushf
dec
hlt
pop
and
xchg
and
add
cmpsl
add
sahf
mov
dec
pop
fdivs
test
jl
mov
add
enter
loopne
stos
inc
ja
add
lods
sub
out
mov
jb
les
or
and
jecxz
sbb
lea
fwait
inc
subb
sub
adc
sti
pushf
cmp
lret
shlb
js
loop
mov
jns
iret
dec
mov
bound
ljmp
sbb
jge
popa
pusha
xchg
push
or
xor
subl
lds
arpl
cwtl
mov
inc
out
pop
fstl
xchg
loopne
mov
outsb
xchg
mov
and
and
clts
mov
test
xor
es
dec
push
rorl
rcr
dec
subb
jmp
adc
xchg
pop
or
jge
ds
add
inc
push
fwait
adc
lahf
and
mov
push
add
rorb
lret
fistl
inc
jne
addr16
insl
push
movsl
out
push
mov
jns
movsl
jno
push
int3
push
push
push
inc
in
sbb
xchg
push
fldl
mov
add
push
sub
xor
nop
stc
add
push
sbb
push
ss
or
mov
pop
inc
stos
imul
pop
dec
or
mov
les
insl
lea
inc
in
and
lcall
out
pusha
xlat
jb
negl
and
out
out
mov
pop
or
mov
fldl
jg
xor
je,pn
xchg
adc
jnp
push
loop
or
mov
imul
icebp
jmp
or
inc
ds
int3
cld
test
xchg
mov
or
or
enter
stos
mov
jo
sahf
sub
aaa
adc
insl
sbb
notb
and
xchg
mov
enter
pop
sbb
pop
in
hlt
ret
popa
dec
push
sub
clc
int
stos
jl
dec
stos
arpl
imull
jecxz
xlat
fcmovnb
nop
pop
inc
lock
or
nop
gs
fwait
xor
je
fistpll
sub
data16
jo
sub
int
ss
dec
ss
add
push
xchg
mov
test
js
mov
nop
dec
call
xchg
in
mov
fcomip
sub
jo
add
gs
add
adc
jne
sub
mov
subb
jo
cmp
mov
sbb
pop
inc
arpl
xor
and
in
shlb
std
bound
mov
jge
in
ds
sbb
push
call
mov
fldt
cmpb
sbbb
int3
pop
lcall
clc
pop
insb
test
sbb
add
jns
pop
pop
xor
cmp
lret
xchg
enter
jmp
sti
movl
sbb
fs
xchg
xor
shl
mov
addr16
lock
sbb
sbb
pop
insb
in
xchg
sbb
mov
insb
adc
scas
add
mov
pop
pop
xor
fadd
mov
stc
mov
movsb
pusha
or
adc
pop
lret
je
and
repnz
inc
mov
cmp
cs
out
jo
je
es
into
or
dec
sarb
leave
lret
dec
jae
out
div
or
mov
cmp
and
rorl
fs
ret
ficoml
xchg
adc
xor
add
popf
and
arpl
sub
adc
adc
aas
test
int
int3
adc
ds
inc
movsb
cmp
ror
dec
cmp
iret
sbb
jle
test
jae
movsb
movsl
jg
mov
jo
jmp
mov
mov
std
mov
cmp
and
aad
cmp
mov
pop
jle
pop
sbb
mov
push
xchg
and
add
in
shrl
push
jne
mov
repnz
outsl
mov
out
jo
ret
dec
movsl
loopne
sbbl
fsts
pop
in
fcomp
jns
cld
or
push
mov
hlt
mov
sub
pop
add
stos
jle
orl
fucomp
jle
xorb
sub
in
sbb
shr
xlat
xchg
ds
push
xchg
sub
scas
lds
adc
ds
repz
jns
sbb
xchg
lods
pop
daa
cs
call
je
dec
mov
xchg
mov
mov
ja
bound
mov
jbe
dec
fildll
mov
shll
xchg
jns
lahf
mov
adc
test
enter
jo
imul
gs
out
jno
shll
xchg
ret
insb
xor
loop
mov
jle
mov
cltd
sub
insb
imul
in
fdivs
dec
push
pop
xchg
mov
rcll
or
pop
fisubrs
rclb
cmc
in
cmp
jg
movsl
std
stos
pop
cwtl
jno
mov
adc
jge
mov
stc
scas
sbb
jmp
ja
xchg
scas
inc
pop
enter
sbb
cltd
pop
ret
push
mov
cmp
jo
andb
sbb
xlat
add
push
cmpsl
sbb
dec
lods
xor
js
rcrl
popa
arpl
xor
pop
loope
pop
and
mov
inc
mov
push
mov
sbb
jne
test
test
cs
pop
mov
fidivrl
enter
mov
popa
jge
push
outsl
lret
add
inc
or
jecxz
cltd
sub
sbb
mov
adc
sub
jbe
jae
add
sbb
fdivr
push
push
or
inc
xlat
outsb
mov
loope
mov
cmc
mov
sbb
lahf
push
outsb
inc
dec
jle
add
sti
sarb
cmp
cmp
and
stos
jmp
cmpsb
sbb
cmp
shrb
rcrl
jnp
pushf
int3
lcall
inc
push
pop
xchg
adc
inc
stos
out
inc
xchg
ss
adc
and
in
push
adc
cli
arpl
xchg
and
and
fcoms
xchg
mov
insl
jae
mov
push
xchg
es
push
add
fimull
xchg
fwait
and
andb
cmp
lods
cmp
push
js
test
pop
pop
push
cmp
cmp
mov
popa
lea
insb
push
add
jmp
aam
test
xchg
mov
lock
dec
movb
ds
inc
imul
fsts
int
lcall
cs
mov
iret
dec
arpl
jl
aam
jno
mov
lods
lds
push
movsl
lock
push
aad
lds
cli
mov
and
pop
mov
lea
jo
ret
cmpsl
dec
mov
mov
xchg
call
mov
inc
dec
cmpsl
and
sub
mov
bound
mov
push
popa
ret
mov
xor
mov
fstpt
xchg
jne
dec
test
test
test
jno
cltd
adc
je
lock
mov
jl
xorb
shrl
mov
pop
push
pop
fidivrs
add
jns
sbb
clc
aad
lret
pop
dec
sub
pop
out
cwtl
imul
out
leave
hlt
xor
mov
sbb
loopne
and
inc
pop
fsincos
icebp
cmp
mov
and
lcall
inc
aaa
std
mov
pop
outsl
cmpsl
inc
in
les
xchg
testb
pop
out
mov
jnp
ffreep
mov
sub
sbb
sbbl
dec
ss
das
cwtl
imul
mov
jge
inc
cmpsb
idivl
and
negb
push
enterw
ds
inc
mov
into
aaa
and
jg
mov
lahf
aad
in
or
leave
aad
pop
pop
jo
roll
pushf
mov
es
aaa
jmp
jbe
addr16
cmc
push
fsubs
adc
sbb
stc
mov
cmpb
jp
push
xor
lock
cmc
pop
out
scas
sti
or
test
jnp
in
aam
adc
cmp
sbb
std
jns
test
in
ljmp
cmpsb
cmpsl
sbb
mov
mull
mov
pusha
xor
sti
fs
mov
pop
out
push
pusha
fdiv
in
lock
rorb
cmp
insb
mov
or
push
mov
mov
into
ds
shr
inc
loop
dec
jg
inc
aad
add
adc
sub
out
add
data16
xchg
bound
pop
mov
out
repz
mov
fdivrl
inc
inc
mov
xor
pop
imul
cmp
cs
adc
sbb
std
js
inc
rol
dec
mov
ss
lcall
outsl
sti
sub
or
repnz
test
mov
xor
icebp
push
je
dec
push
jle
jb
push
scas
lcall
pop
stos
aas
mov
xchg
xchg
pop
push
mov
data16
cld
push
testb
inc
dec
and
pop
iret
xor
inc
push
or
into
iret
jge
xchg
sub
pusha
mov
ds
jecxz
rclb
pop
push
xor
repnz
sahf
lods
and
mov
mov
pop
xchg
mov
cmpsl
gs
add
unpckhps
cmpsl
inc
pop
ss
xchg
sahf
dec
xlat
das
push
insb
iret
pop
jge
mov
mov
mov
notb
mov
shrb
jecxz
int3
cmp
fs
sbb
es
ljmp
es
sub
leave
repz
outsl
divl
gs
dec
call
movsl
jmp
arpl
aam
cli
lahf
adc
fwait
push
stc
jnp
subb
push
jae
orb
out
and
loop
aas
xchg
mov
push
mov
mov
pop
mov
in
les
aad
pop
and
hlt
leave
mov
xchg
mov
fcmovnu
lock
jecxz
sahf
lods
cmp
or
in
loopne
cmp
pusha
mov
pop
inc
mov
mov
adc
lods
loope
test
aaa
in
out
inc
adc
test
mov
cmp
fisttpll
inc
popf
sub
mov
jecxz
adc
or
std
pop
push
lods
ja
xchg
mov
movsb
cmp
mov
or
xor
stos
inc
or
mov
test
nop
loop
inc
dec
ja
or
push
clc
rcrb
push
fimull
test
clc
mov
xchg
mov
jmp
pop
pop
jle
ret
mov
lock
roll
mov
test
add
sbb
in
test
jnp
es
das
dec
mov
inc
push
insl
cmp
shll
mov
lods
xor
pop
ret
lret
sbb
mov
push
cmovnp
pop
imul
in
mov
xchg
inc
pop
fwait
int3
outsb
add
inc
dec
sbb
call
aam
jg
fildll
and
pop
ja
repz
loop
push
pop
cmp
sub
ret
popf
sbb
jbe
and
xlat
in
dec
cld
mov
sub
mov
into
mov
imul
mov
daa
sahf
mov
lret
lret
mov
pusha
fiadds
stos
push
dec
ds
jmp
cmpl
loop
shr
xchg
clc
push
pop
arpl
add
repz
sahf
jecxz
xor
mov
adc
and
push
adc
lods
adc
fisttps
lods
lret
test
dec
leave
sbb
xchg
das
stos
repz
inc
sub
sti
dec
lods
cmpsb
mov
imul
in
in
add
push
jae
leave
adc
test
rcrb
stos
orb
adc
rolb
jecxz
loopne
push
inc
hlt
inc
jp
ljmp
lret
xor
and
inc
jno
sub
jmp
sub
fdivr
lret
pop
imul
dec
dec
sbb
sbb
jno
xchg
and
mov
sbb
in
mov
movsl
es
aaa
aaa
loope
dec
push
arpl
jle
pop
movsl
repz
call
and
mov
ss
pop
aad
out
jae
rolb
jl
and
inc
arpl
iret
mov
mov
sbb
fsub
add
aas
push
fwait
and
ret
fs
out
jae
rcrl
jecxz
movsb
test
dec
pushf
mov
inc
test
test
fsubrs
lcall
pop
mov
stos
mov
xchg
in
call
pop
aaa
xor
cmp
mov
fwait
hlt
and
dec
add
mov
ss
std
rcl
jnp
inc
add
pop
rorb
outsl
cltd
loopne
decl
fsubr
int3
fsubs
add
scas
sub
sbb
movsl
sub
inc
sahf
and
loopne
cmp
ret
sub
add
sahf
lret
cmp
lods
lcall
out
jbe
xor
rorb
cltd
notl
lock
aam
rdpmc
pop
xchg
dec
in
out
mov
jg
push
inc
jae
ss
int
xchg
outsb
out
mov
mov
pop
cmp
ret
add
test
fidivs
sti
shl
ja
mov
into
xlat
push
xor
lret
mov
lss
lock
xor
mov
mov
xlat
out
mov
data16
cmp
fs
push
cwtl
or
les
gs
and
cmp
jne
xor
fwait
cmp
mov
mov
push
shr
xorl
dec
xor
mov
push
push
mov
int3
pop
rolb
adc
mov
das
out
push
jnp
mov
in
stos
dec
mulb
fadd
mov
mov
lret
sub
stos
ja
inc
xlat
push
sahf
insl
jo
xor
test
and
pop
outsb
adc
xor
mov
lahf
adc
dec
pop
dec
jns
dec
repz
or
test
mov
inc
lock
fwait
push
cmp
lods
or
rorb
or
mov
lea
pop
adc
iret
jle
inc
fucomi
adc
aad
lcall
cltd
adc
lods
lods
fimull
dec
fldl
stos
sbb
mov
cmp
xorb
add
jns
insl
jnp
cwtl
in
xor
push
shll
adc
movsl
int3
rorb
idivl
xor
xlat
je
lods
aaa
sub
pop
pop
mov
iret
sbb
adc
sti
lret
sbb
iret
lods
leave
std
jl
inc
add
mov
mov
xchg
mov
rcrb
xor
pop
mov
or
das
jecxz
mov
sbbl
mov
dec
add
neg
push
les
stos
xor
xor
lahf
popa
int
mov
xlat
iret
rcrb
mov
fbld
and
lds
inc
cld
shll
daa
pushf
shll
push
mov
out
or
mov
mov
xor
or
test
ret
mov
fsubl
pop
pop
movsl
ret
js
int3
dec
pop
gs
push
inc
mov
cld
jno
fmull
bound
sub
fimuls
cs
push
sub
mov
inc
inc
mov
ret
sub
loopne
jg
hlt
xchg
or
and
push
mov
movsl
and
js
into
les
push
repz
out
data16
add
icebp
rorl
jno
push
sub
pushf
mov
mov
scas
cmp
int
lcall
gs
scas
cld
packsswb
push
mov
out
push
es
xor
jne
mov
scas
mov
cmc
mov
rol
xlat
cs
test
pop
push
jno
sbbl
test
xor
inc
sub
add
dec
js
cmp
shlb
ja
pop
std
cmp
nop/reserved
cmp
inc
outsl
rolb
dec
cmpsl
push
fidivrs
sar
pop
sbb
shlb
sarb
pop
pop
pop
dec
flds
aam
mov
jmp
in
adc
xlat
lds
dec
call
inc
push
inc
mov
mov
jg
les
fs
push
sbb
loope
into
es
call
mov
jle
mov
dec
iret
fs
das
dec
xlat
cltd
popf
sbb
aas
mov
mov
rcrl
leave
adc
adcb
jne
mov
cmpsl
aad
mov
daa
ss
dec
pushl
sub
rclb
sub
jmp
inc
add
and
xchg
or
xchg
stos
into
mov
mov
pop
out
add
add
cs
pop
daa
in
stos
xor
push
jp
mov
pop
loopne
repnz
into
adc
add
aas
shlb
fsub
jne
jns
cmc
daa
jle
ds
sti
pop
clc
sbb
pop
xor
call
sbb
sbb
add
sarb
popf
sbb
inc
stos
lret
pop
mov
cld
jbe
cmp
or
jno
stos
repz
inc
pop
sub
sub
unpckhps
mov
inc
call
mov
scas
shl
or
inc
std
mov
or
nop
fsubs
adc
adc
lods
push
dec
jp
push
mov
push
cmc
lret
and
pop
inc
outsb
insb
ds
pop
pop
out
fmul
in
inc
fcompl
push
mov
inc
outsl
dec
scas
xor
frstor
sarl
ljmp
stos
loope
enter
fiadds
lea
xchg
mov
leave
pop
inc
jbe
xchg
shr
sbb
sub
mov
mov
int3
inc
push
mov
mov
in
fs
outsl
sbb
out
pop
bswap
addr16
mov
mov
lcall
jmp
mov
mov
jl
adc
sbb
mov
out
inc
adc
or
xchg
cmpb
mov
jg
fwait
movsb
pop
dec
pop
fidivrl
push
fs
sbb
dec
test
mov
fdiv
jmp
push
xchg
stos
mov
sti
pusha
cwtl
in
cmpsl
jl
lcall
mov
mov
mov
leave
lret
cwtl
test
ljmp
loop
pop
insb
cwtl
pop
and
jb
ja
cwtl
int3
daa
mov
push
adc
sti
push
jp
adc
xchg
mov
xor
pop
int3
dec
push
cwtl
pop
add
inc
fdivrl
lods
fildl
lcall
rcll
inc
add
test
adc
push
and
aam
sbb
xor
inc
mov
dec
je
sbb
and
es
mov
scas
loope
in
xchg
cmp
idivl
sub
lret
in
push
mov
aad
aaa
fimull
and
into
xor
fwait
jp
cltd
fsubrl
jno
movsb
pushf
arpl
push
lock
pop
inc
cmp
movsl
pushf
ret
mov
adc
fisubl
jne
sbb
sahf
jo
jp
and
jno
jp
xor
dec
out
mov
sub
push
lock
pop
lret
inc
sbb
mulb
or
icebp
push
mov
ret
pop
mov
sbb
aad
mov
and
movsb
xchg
out
push
jge
mov
repnz
mov
mov
mov
add
cmp
push
out
test
mov
popf
sub
push
jp
jg
mov
dec
xchg
ja
cmp
popf
xor
or
push
sbb
loop
cmpb
adc
sub
dec
scas
aas
movsl
xor
push
out
and
ja
jg
out
jne
sub
xchg
imul
jns
scas
cmp
cmp
fcoms
pop
xor
pushf
out
scas
sub
test
dec
je
lret
sahf
sub
stos
jecxz
add
sub
xor
rcrb
jg
enter
je
xchg
dec
or
enter
inc
test
mov
pop
test
out
test
leave
lahf
or
jecxz
bswap
sbb
mov
sbb
in
cmpsb
jl
iret
ljmp
xchg
push
mov
rcll
adc
nop
icebp
jg
sub
sub
mov
lods
ljmp
mov
xchg
insb
or
mov
sbb
fists
push
addr16
cwtl
js
xlat
sbb
jbe
mov
pop
fstl
push
pusha
add
stos
orb
leave
arpl
cmp
and
mov
dec
mov
mov
and
adc
test
sub
out
mov
and
sub
dec
or
mov
adcl
mov
cmp
clc
stos
xor
gs
jmp
cmpsl
mov
jbe
movsb
fisttpl
xor
mov
jmp
jnp
nop
xor
xor
add
push
dec
addr16
xchg
ficompl
add
sti
add
sahf
lods
in
ret
xchg
test
lods
sti
std
lock
cld
jecxz
sub
and
enter
arpl
mov
sbb
or
pop
addr16
sub
data16
ljmp
das
push
out
mov
cmp
cs
cmp
dec
popf
movsb
and
mov
xor
push
sub
jecxz
or
in
test
cmp
mov
into
loop
mov
add
adc
add
dec
gs
cld
push
clc
pop
scas
sbb
js
sub
ja
push
jl
out
shrb
add
pop
outsl
fs
pop
dec
nop
jnp
shrb
popa
scas
push
insb
js
lret
in
sub
and
mov
adc
cmp
add
lods
int
xor
imul
mov
out
push
adc
movsl
movsl
ss
cmp
add
faddl
and
inc
sbb
mov
mov
and
jo
or
mov
je
or
cmp
dec
rcll
mov
cmc
mov
dec
sbb
lods
dec
loopne
shll
mov
test
in
rclb
loope
mov
sbb
or
out
lret
push
lret
stc
pop
xchg
lods
xchg
scas
push
xlat
mov
add
ljmp
add
pop
out
sti
lods
xchg
and
imul
mov
or
dec
inc
add
int3
push
dec
bound
cmp
in
or
jne
leave
shl
mov
mov
push
out
fdivrl
ljmp
aaa
loop
mov
stc
and
add
sub
lock
add
mov
invlpga
rorb
pop
pop
lods
bound
mov
test
dec
mov
aaa
ds
xor
xor
in
push
hlt
ljmp
shrb
fptan
fsubrs
cmp
loope
stos
stos
insl
int3
fisttps
enter
pop
cmpsb
pop
mov
and
stos
in
jg
das
inc
clc
dec
mov
push
dec
inc
orl
pop
sahf
push
sti
sbb
popa
sub
jge
dec
add
popa
pop
cmpsb
mov
inc
fisttpl
sbb
xor
or
mov
xor
ret
mov
sbb
repz
xor
mov
or
dec
or
hlt
push
mov
mov
rorl
xchg
dec
xlat
dec
insl
push
sbb
mov
mov
pop
push
sbb
or
mov
pop
jg
push
add
std
jle
jne
mov
and
and
and
cmp
or
nop
or
daa
xchg
sbb
push
stc
or
adc
adc
jo
lods
jle
add
and
fidivrl
sbb
mov
into
push
fdivs
enter
and
sub
das
ret
leave
stc
out
jmp
jb
mov
inc
repnz
sub
jle
les
lds
movsb
enter
call
jb
fs
adc
addr16
das
or
or
jecxz
sub
mov
jge
dec
cs
and
lock
jb
imul
push
dec
pop
push
push
xchg
aam
out
rcll
xor
pop
arpl
out
ficoml
stos
aaa
sbb
test
dec
aam
int
mov
adc
hlt
imull
jmp
jno
into
inc
fistpll
imulb
clc
ss
pop
aam
or
in
in
sub
push
repz
jnp
rorl
adc
mov
jb
int3
dec
dec
jle
fs
js
and
pop
dec
imul
je
ja
inc
dec
cmp
jae
rol
xor
cmp
dec
cwtl
repz
shl
fs
adc
jne
add
mov
lahf
mov
scas
mov
or
sahf
mov
jbe
mov
jo
cld
jae
and
inc
mov
aam
xchg
sub
repz
push
popa
mov
je
mov
jle
jl
pop
add
data16
test
or
ret
ss
enter
subl
ficoms
test
hlt
xor
stos
and
push
lock
mov
push
jge
push
inc
mov
ret
mov
test
jne
push
xor
cld
int
shrb
cs
sarb
cld
xchg
mov
mov
mov
insl
mov
push
xlat
adc
in
cmp
dec
sub
and
mov
fstpt
call
lea
movsb
or
adc
add
insb
cltd
mov
js
cltd
xor
jmp
mov
push
fmull
in
shrb
jb
or
sub
loopne
sbb
popf
dec
push
cmpb
mov
and
rclb
sub
cmc
cmp
sbb
repz
popf
lods
lea
jmp
pop
mov
sbb
mov
stc
sbb
mov
jo
scas
fiadds
and
xchg
xchg
cmp
sbb
rol
roll
sbb
mov
out
sbb
fidivl
pop
sti
and
inc
and
fdivrs
push
inc
outsl
cmpsb
fists
roll
xchg
jbe
pop
pop
add
daa
dec
aad
adc
shr
inc
pop
icebp
mov
sub
inc
pusha
fnstcw
jge
insb
aaa
and
push
imul
shrb
add
out
jl
lret
test
insb
push
adc
repnz
mov
dec
lock
push
scas
clc
mov
jg
mov
loopne
adc
or
loope
stos
leave
inc
rcl
push
mov
in
xchg
scas
pop
into
sub
inc
add
lret
jl
dec
fcoml
pop
push
in
movsl
lahf
mov
cmpsl
jne
jo
mov
cli
jns
les
cmc
mov
mov
stos
inc
lret
xchg
xchg
loop
lock
pop
movsl
pushf
test
imull
data16
lret
stc
in
pop
xchg
les
mov
sahf
in
popf
push
ljmp
lret
mov
test
in
ret
ss
hlt
rclb
out
add
xchg
inc
push
rcll
outsl
xchg
stos
jbe
leave
sub
sub
pop
fimull
jp
ret
cmc
pop
out
dec
call
aaa
dec
mul
or
cld
adc
std
in
jno
mov
pop
ds
lret
ret
fnsave
repz
mov
imul
sub
xor
in
adc
lcall
xchg
dec
push
and
adc
dec
popa
fimull
cmc
mul
repnz
clc
movd
notl
outsb
rcll
jbe
xor
fistl
movsb
fsts
cli
movsw
add
mov
lock
sub
imulb
xorb
rcr
and
cwtl
ret
cmp
loope
fs
into
jb
fists
xor
clc
xlat
jae
xor
dec
inc
sbb
repz
in
aad
es
fildl
lock
xchg
fstps
xchg
and
arpl
fbld
xchg
insl
push
mov
dec
aas
clc
mov
adc
mov
fwait
push
cmp
jae
and
lea
jne
test
adc
sub
sbb
or
mov
add
inc
rol
adc
cmp
lea
mov
sahf
stos
fcmovnb
xchg
in
cld
cltd
mov
pop
mov
movsl
rclb
inc
repz
jle
mov
outsb
lret
test
adc
mov
push
mov
mov
inc
aad
lods
imul
fistpll
arpl
push
pop
inc
repz
daa
and
flds
sbb
int3
call
jle
clc
scas
adc
cmpsl
sbb
popf
loopne
mov
das
mov
aaa
xor
mov
inc
imul
inc
enter
push
xor
adc
mov
cmp
lret
movsl
dec
inc
xchg
sahf
enter
pop
movsl
popl
mov
lock
cmp
imul
xchg
cmpsl
dec
dec
cmp
sbb
xor
fscale
das
out
jae
pop
sbb
mov
sub
add
mov
push
jge
and
cltd
aam
push
js
push
xlat
add
outsl
js
adc
mov
pop
pop
jmp
or
shl
shrl
movsb
xchg
lods
sub
pop
jge
ds
xchg
sub
pop
xchg
flds
loopne
ja
jo
add
push
cltd
movsb
sarb
mov
leave
dec
mov
mov
mov
xchg
add
jo
jne
sub
and
push
mov
mov
mov
mov
clc
cld
adc
inc
mov
jns
push
iret
decl
mov
inc
jb
sub
dec
jo
mov
ud1
pop
in
repnz
dec
lret
mov
xor
pop
mov
bound
int
add
jno
xor
fmul
pop
imul
add
mov
xchg
cld
jmp
aas
jnp
xor
loopne
mov
inc
jmp
nop
notl
inc
sahf
push
mov
push
hlt
push
xchg
xchg
cwtl
jg
jnp
mov
mov
cmp
mov
mov
mov
push
xor
lret
mov
das
ja
xchg
xchg
mov
insb
jmp
adc
mov
movd
lret
cld
xor
xchg
add
mov
jp
mulw
and
fwait
enter
js
in
scas
push
ds
lock
or
jge
lds
lods
xor
jbe
jbe
out
push
and
sub
jecxz
sub
mov
mov
imul
push
pusha
ss
imul
jne
pop
test
cmc
mov
add
mov
pop
test
or
test
inc
out
sbbl
aam
dec
aad
scas
lods
and
test
jo
or
sbb
hlt
pop
fs
hlt
mov
lret
xchg
xor
sub
xchg
stc
pop
clc
imul
xchg
dec
mull
fisubl
sub
push
sbb
pop
jo
mov
je
fwait
push
add
sub
add
push
jo
push
mov
fstpt
leave
lea
adc
insb
repz
rorl
outsb
xlat
lods
add
mov
and
loope
cltd
mov
xlat
call
inc
js
or
jno
and
loop
xchg
mov
adc
arpl
or
mov
xor
loopne
push
xor
inc
mull
push
lds
inc
rol
sahf
imul
int
dec
flds
aam
hlt
ljmp
int
push
mov
dec
push
rclb
shr
mov
jp
pushf
stos
mov
dec
iret
cmpsl
fidivs
leave
sahf
out
jge
enter
push
cwtl
divb
pop
push
sti
cwtl
insl
daa
fldl
xchg
and
mov
push
jns
loope
test
sbb
cltd
cmp
xchg
and
cmp
es
dec
std
rcrb
pop
inc
andb
push
or
xlat
adc
mov
adc
adc
cmp
mov
aas
ja
jns
testb
ja
fwait
lahf
jmp
pop
call
and
mov
shl
mov
adc
cltd
xor
jmp
mov
or
sub
pop
out
mov
scas
ljmp
cmpsl
loop
or
mov
xor
roll
xchg
cmp
push
and
mov
loop
xchg
jns
mov
mov
lret
mov
into
pop
or
jns
sbb
int3
jns
out
mov
or
aaa
pop
jecxz
push
shll
imul
push
cmp
mov
cwtl
out
outsl
aas
xchg
fistl
sbb
fs
fisttps
ss
inc
jle
dec
ljmp
mov
and
cltd
lea
or
cmp
mov
xchg
mov
ror
add
pop
cs
mov
jbe
cmp
jnp
jecxz
and
pop
adc
std
es
stos
clc
sub
sbb
fwait
jo
aaa
push
fadds
pushf
push
dec
xchg
daa
adc
lcall
pop
or
test
xchg
aad
cmp
aaa
mov
aad
popa
xor
push
je
pusha
and
sti
or
cs
mov
sub
popf
xor
xor
pop
sbb
es
jmp
aam
mov
lock
inc
cltd
or
cmp
ja
arpl
mov
pop
pop
in
push
dec
pusha
jnp
gs
inc
mov
mov
mov
inc
sbb
jle
rcr
adc
sub
std
inc
aam
cmp
sub
lods
add
add
pusha
jmp
aaa
cmpsb
fdivrl
push
xor
push
sti
and
push
add
filds
push
int3
push
pop
jmp
mov
into
mov
lahf
dec
xlat
sbb
cmp
orl
mov
mov
inc
call
call
insb
cmp
aad
mov
adc
jle
jns
and
repz
xor
pop
clc
mov
test
stos
cmpsb
mov
and
ret
shr
lods
aas
jbe
call
and
inc
fs
cmp
sub
lahf
inc
adc
mov
cmp
pop
shll
stos
sbb
frstor
jg
jns
mov
in
mov
jle
mov
inc
push
or
pop
js
jl
dec
fdivl
mov
ja
sbb
test
aam
loopne
ficoms
std
adc
ret
jl
or
mov
icebp
mov
adc
subb
push
and
or
push
mov
jae
ret
decb
aad
pop
lods
movsb
iret
jo
xchg
dec
pop
adc
mov
int3
lcall
cmp
mov
and
fwait
adc
jg
int3
mov
mov
pop
test
cmp
mov
repz
or
bnd
xchg
cmpsb
push
jmp
add
adc
bnd
add
lock
mov
cmpsb
in
push
in
inc
imul
xor
mov
add
scas
in
sbbb
push
xchg
push
lds
pop
pop
in
out
mov
mov
mov
xchg
std
jg
imul
xchg
movsl
and
arpl
xor
psubw
sbb
in
mov
int
outsl
pushf
pop
add
icebp
shl
mov
montmul
cmpsb
addb
fiadds
jg
add
fildl
ja
pop
mov
mov
cld
mov
lods
and
jl
cli
ret
imul
movsb
lret
test
lret
adc
push
sub
jo
mov
rolb
mov
sub
cltd
je
in
and
jge
std
scas
in
fsubs
cmpb
dec
xlat
in
pop
stc
and
loope
add
add
mov
in
fwait
loopne
int
jecxz
cli
hlt
arpl
push
and
inc
bnd
idivl
scas
jb
mov
repnz
imul
imul
aaa
adc
fsubr
cmpsl
into
mov
cmpl
adc
test
cmpsl
mov
add
dec
and
adc
daa
pop
push
and
leave
scas
lahf
pusha
xchg
jno
clc
movsl
lds
out
movsl
push
jbe
dec
and
or
inc
aad
loop
sahf
jmp
sbb
jno
sti
or
push
je
pop
dec
dec
cmpxchg
test
fwait
inc
pusha
test
adc
inc
test
je
cwtl
scas
lret
repnz
inc
js
push
jp
mov
aam
fadd
xlat
sub
mov
fildll
pop
lds
sub
stos
push
shrb
lret
rorl
xchg
add
ds
int
jb
repnz
scas
sbb
fiadds
mov
xchg
clc
mov
and
add
add
jns
cmc
aad
xchg
out
xor
pop
mov
inc
stc
pusha
test
insb
mov
pcmpeqd
pushf
mov
xchg
cwtd
ss
inc
aam
shrl
or
aam
lea
je
or
jb
icebp
sahf
xchg
in
inc
mov
adc
lahf
mov
xchg
cmp
nop
bound
leave
dec
dec
shll
das
movsb
sub
scas
lahf
jmp
or
stos
mov
pop
ret
inc
mov
dec
in
fwait
mov
jle
pop
das
mov
lea
cltd
je
fimuls
xor
push
mov
cltd
shrb
cmp
mov
dec
ss
cmp
ret
lea
cmp
sbb
dec
xor
xchg
loope
cld
mov
xchg
jmp
cmp
dec
js
jecxz
scas
cs
push
mov
dec
pop
clc
outsb
pop
int3
mov
adc
mov
mov
jp
es
push
outsl
pop
cwtl
fdivs
pminub
adcb
divl
je
xchg
loope
adc
add
xchg
sarb
sub
je,pn
dec
inc
xchg
jbe
dec
mov
mov
pushf
shll
fs
jecxz
cmc
push
inc
inc
cltd
pop
adc
outsb
pusha
mov
icebp
sub
inc
xor
rcll
pop
xchg
arpl
loope
icebp
cmpsl
jne
shll
mov
sbb
sbb
lret
jno
fcomp
rcrb
fistpll
mov
sub
shl
icebp
rcrl
sbb
scas
mov
imul
sub
mov
into
stos
sar
adc
rclb
je
cmpsl
jg
inc
sub
outsl
repnz
mov
mov
sbb
fsubrs
outsb
push
ljmp
repnz
and
sbb
xor
sub
mov
ret
jae
aaa
mov
or
dec
xchg
push
in
xor
push
add
es
rcr
aad
shrl
lds
ds
push
stc
xchg
int
inc
cwtl
mov
sbb
xchg
cmc
sarl
and
mov
adc
mov
dec
or
mov
sub
mov
rclb
hlt
rcrl
pusha
add
icebp
adc
mov
dec
repnz
mov
fs
fiaddl
and
inc
jle,pn
mov
pop
jno
scas
shlb
lret
popf
pminub
sahf
adc
mov
inc
add
mov
insb
jno
lahf
lret
jg
inc
pop
inc
xlat
jno
incb
imul
out
jae
adc
and
les
clc
or
mov
mov
mov
and
fucomp
add
adc
or
clc
testl
xor
imul
xchg
mov
lahf
adc
push
in
mov
xor
les
idivl
aas
ljmp
sbb
shl
ljmp
jae
lds
sub
es
inc
repnz
call
mov
clc
enter
nop
cmp
sbb
push
cmpsb
mov
inc
inc
inc
popa
adc
nop
and
pop
into
insl
in
int
insb
aaa
jmp
mov
cli
mov
cmp
sahf
xchg
xchg
mov
push
das
pop
mov
leave
and
in
lret
jl
sti
in
xchg
aaa
fsubs
adc
out
cli
lds
jle
xchg
out
pop
sub
scas
in
push
mov
inc
pop
shll
leave
insl
jo
mov
mov
or
inc
ficoms
stos
mull
subb
dec
push
cmp
test
stc
mov
pop
jecxz
lret
or
xor
ljmp
shrl
mov
out
ljmp
mov
push
dec
and
cmp
xchg
pop
scas
movsb
imul
push
or
lea
mov
sahf
inc
stos
adc
fsubr
jecxz
sub
fistpll
dec
fs
pop
testb
test
inc
mov
mov
inc
in
pop
jmp
popf
adc
and
sbb
xor
dec
lahf
mov
outsb
pop
add
call
lret
xchg
push
arpl
push
mov
ja
mov
stc
iret
ljmp
xchg
jmp
je
add
bound
cmp
xchg
rclb
xlat
aas
inc
cmp
mov
xchg
into
or
push
pusha
mov
out
jno
fcoml
pop
xchg
or
jmp
imul
sub
psrlw
xchg
lods
bound
and
inc
mov
lret
fcoml
jns
push
adcl
outsl
js
adc
adc
lret
jb
out
inc
adc
mov
push
lods
mov
js
mov
cmp
adc
aam
xchg
adc
ss
push
sbb
mov
xchg
pushf
pop
repnz
les
cmp
bound
push
pusha
fwait
and
sub
cwtl
jno
and
sarl
lcall
mov
sub
mov
push
js
out
xor
lahf
and
pop
ret
in
cld
jno
jo
fdivs
test
popa
mov
sub
imul
pop
add
mov
iret
sahf
and
js
and
xor
cmp
ficoml
fbld
jecxz
dec
push
lret
pop
jb
jp
pop
mov
fsubs
push
arpl
ror
lret
or
xchg
ret
xchg
call
mov
loopne
mov
cwtl
dec
je
int3
test
adc
sbb
sbb
call
shlb
jnp
jbe
sbb
mov
out
ret
pop
outsb
mov
jecxz
add
pop
xchg
sub
leave
sbb
mov
xlat
inc
pushf
push
loop
ja
lcall
pop
mov
push
fiadds
inc
mov
mov
stos
ret
mov
dec
mov
dec
mov
lret
cld
adc
mov
sub
xchg
cmp
or
cmp
or
pop
loop
mov
nop
pop
xor
inc
xchg
cs
in
and
inc
xor
scas
pop
stos
enter
into
adc
cmp
mov
inc
pop
or
pusha
inc
cmp
mov
mov
mov
out
into
add
sti
loopne
stos
data16
mov
ds
or
out
rclb
cwtl
in
and
cmp
cli
mov
das
cmp
emms
adc
iret
sub
imul
adc
push
push
xlat
cltd
lods
scas
adc
popa
movb
loop
mov
jg
aad
pushl
dec
add
mov
push
xchg
inc
and
jle
push
lea
jo
lea
push
int3
pop
push
subb
sbb
mov
mov
inc
cmp
aad
cmp
mov
cmp
mov
inc
xor
and
fstpt
daa
repnz
ficomps
dec
cmp
rolb
xor
cmc
sub
and
in
std
adc
sub
adc
xor
or
test
sub
push
outsb
mov
sub
js
outsb
add
and
sti
jo
test
or
push
jp
dec
sbb
repz
or
movsl
pushf
bound
dec
aaa
mov
push
aas
std
inc
dec
mov
test
scas
sahf
pop
and
stos
pop
mov
mov
mov
mov
adc
call
push
xlat
inc
arpl
mov
push
out
push
mov
in
mov
push
das
mov
loope
out
cmp
das
jo
and
add
test
dec
xchg
push
lock
add
or
mov
pop
cli
adc
sbb
negb
adc
popf
sub
mov
mov
sub
xor
sub
out
out
cmp
dec
jnp
xchg
xor
js
clc
ret
sarl
movsb
and
adc
mov
jo
adc
jl
std
adc
ret
xor
daa
stos
push
sub
mov
sub
xchg
xchg
add
std
pop
jl
push
xchg
inc
xor
jbe
jns
clc
mov
jecxz
add
sub
aaa
sub
pop
mov
add
aas
sub
mov
add
addr16
pop
jle
push
xor
fbld
daa
push
mov
test
testb
mov
xorb
pop
cwtl
pop
lods
mov
fxch
push
cmp
pop
xchg
mov
mov
cmovb
cmpsl
std
xchg
add
sbb
and
ds
jo
out
jl
test
adc
mov
sub
adc
xor
test
call
mov
gs
cli
fcmovu
icebp
adc
lcall
sbb
mov
xchg
inc
xchg
jb
sub
fnstsw
aaa
pop
xchg
pusha
or
nop
and
mov
int
mov
mov
lret
bound
xchg
sahf
fwait
nop
ret
inc
sub
adc
mov
sub
aad
sub
xorb
ss
or
sub
cli
jbe
lret
fistps
scas
mov
mov
stc
or
adc
pop
dec
test
dec
add
mov
sbb
adcl
jns
fisubs
js
jnp
jg
and
mov
imul
lds
mov
inc
fwait
inc
mov
mov
in
add
addr16
and
adc
sub
add
popf
xchg
xor
shrb
mov
mov
mov
pop
mov
loope
mov
push
dec
xadd
jnp
rcrb
mov
xor
jge
sub
es
in
lret
mov
ret
repz
std
inc
push
adcl
jae
stos
jno
mov
and
je
loopne
pop
ret
jp
lcall
jp
outsb
mov
adc
xor
cs
ljmp
hlt
outsb
cmc
out
popf
push
sbb
dec
mov
lret
pop
cli
daa
dec
sbb
insl
add
andl
sbb
clc
sbb
add
lret
jmp
cmpsl
mov
xchg
pop
dec
iret
cld
pusha
pop
movsb
adc
push
mov
divb
or
sub
sub
stos
fincstp
jmp
shlb
mov
sti
das
push
mov
aam
cs
push
into
jg
outsl
jmp
loope
cmp
dec
pop
mov
fnstsw
push
test
insb
pop
iret
loope
pop
inc
push
mov
iret
inc
xchg
and
test
in
add
pop
add
into
adc
mov
xchg
cwtl
and
mov
sahf
jge
pop
mov
data16
lahf
sarl
add
xlat
fisttps
mov
int3
jp
lahf
xor
or
mov
insl
inc
in
xor
sbb
and
or
subb
fwait
mov
in
jmp
xlat
and
ret
mov
jae
ret
daa
inc
sub
xor
aas
sarb
dec
insl
adc
scas
cs
dec
imul
nop
les
ljmp
jp
or
outsb
push
int
jge
sub
cmc
cmpsl
mov
mov
mov
nop
adc
sbb
push
les
jl
push
pop
and
xor
mov
ja
test
push
fstps
and
mov
dec
sub
pop
jg
and
fiaddl
pop
hlt
sub
sbb
and
lods
repnz
call
dec
icebp
mov
inc
mov
inc
in
call
ds
std
sbb
scas
sbb
lods
js
xlat
mov
sbb
mov
lahf
or
sub
push
divb
fwait
adc
inc
roll
or
psubusb
pop
cli
lret
daa
jb
xor
adc
jmp
mov
mov
add
mov
add
dec
jp
insb
lret
cld
outsb
cmp
xchg
repnz
mul
in
scas
adc
jl
lea
jnp
mov
mov
mov
out
sbb
andl
bound
stc
imul
sub
adc
or
add
mov
sbb
xchg
push
mov
clc
ss
mov
fidivrs
sub
imul
call
cmpsl
dec
pop
sbb
mull
int
enter
pusha
mov
outsl
repnz
sti
xor
repz
repz
call
ret
fucom
sub
sbb
les
xor
mov
repnz
push
mov
ret
in
lcall
bound
cmp
cmpsb
pop
stos
cld
mov
xchg
inc
sub
pop
mov
and
sub
pop
lahf
cmp
inc
les
xchg
arpl
mov
aad
scas
mov
leave
mov
enter
test
vunpckhps
and
aaa
ds
in
lret
pop
pop
stos
out
xor
pop
xor
mov
xchg
iret
push
das
xchg
cltd
cmp
icebp
xlat
mov
dec
jp
sti
jno
lahf
xor
and
insb
pop
mov
sub
mov
icebp
mov
mov
xorb
insl
pushf
mov
ror
mov
xor
rolb
fldenv
dec
ss
mov
repz
sbb
add
in
arpl
push
inc
add
adc
jmp
call
pop
mov
jecxz
loop
mov
ss
out
je
dec
lret
arpl
sbb
rcrl
pop
fbstp
or
cmp
pop
jbe
lahf
sti
fildll
ret
jnp
push
inc
das
arpl
push
jge
xchg
push
or
add
aam
push
xchg
fs
dec
push
in
es
fisttpl
cmpsb
push
fs
lods
aaa
and
xor
inc
ficoml
hlt
mov
call
lahf
sbb
mov
push
es
lahf
in
pop
faddp
ret
cmp
je
movsl
fcmovnbe
in
into
push
icebp
add
flds
in
mov
push
in
and
repz
jge
sub
cmp
push
inc
js
pop
mov
jno
mov
jns
sub
imul
in
jg
faddl
jbe
fwait
scas
add
and
out
jmp
leave
cmp
inc
xchg
pop
popa
adc
pop
mov
sub
mov
jb
cmp
scas
add
lock
sub
dec
clc
ficompl
jecxz
adc
mov
sub
gs
xlat
mov
es
mov
pusha
add
or
out
inc
and
lds
xchg
subl
inc
mov
orb
in
stos
or
jg
ds
sbb
pop
popf
push
or
push
fsin
pusha
std
mov
shlb
outsb
stc
cmp
cld
mov
or
cmpsb
sti
push
test
xor
inc
roll
xchg
pushf
pop
sub
or
inc
add
test
pop
rorb
iret
sub
jbe
test
pop
sarl
mov
cmpl
loop
mov
imul
mov
jo
jo
mov
imul
fmuls
stc
scas
xchg
ja
movsl
fmuls
or
dec
bnd
inc
cmovs
es
dec
xchg
pop
xchg
or
test
sbb
fwait
xchg
pop
dec
cmp
shl
mov
arpl
mov
inc
add
sub
or
lods
cli
xchg
outsb
stos
cmpsl
mov
lods
shrb
mov
ss
jmp
adc
jae
addb
cld
and
lret
jbe
mov
cmp
xchg
pop
cmpsl
push
mov
pop
aam
out
enter
cmpsl
inc
xor
test
enter
adcl
imul
cmp
outsl
mov
dec
iret
add
fwait
repnz
xor
fs
jle
ret
mov
lcall
mov
ficomps
into
push
dec
cmpsb
xchg
rcrl
lcall
xor
loope
movsb
xrelease
sbb
pop
cmp
pushf
test
mov
jmp
add
int
stos
sub
sbb
ds
fdivrs
in
jecxz
in
incl
jmp
outsl
pop
and
mov
and
scas
test
cmp
jb
jae
shld
pushf
and
fs
or
push
dec
icebp
mov
mov
sti
js
into
out
push
call
push
xor
or
add
jo
ss
push
div
popf
xchg
cmp
mov
repz
xchg
and
outsl
loopne
cmp
push
sub
add
adc
push
pmuludq
or
pop
mov
add
js
sub
mov
lods
inc
dec
std
sbb
push
xor
repz
lods
mov
jle
pop
jo
push
lcall
sub
cmp
mov
mov
xchg
adc
lds
mov
pop
push
add
iret
fisubs
mov
lods
cmpsb
jbe
cld
jae
imul
adc
mov
dec
pop
xor
inc
or
adc
enter
pusha
popa
push
icebp
repnz
inc
stc
sahf
sarl
xor
inc
ficoml
ret
mov
insb
and
hlt
push
dec
std
ljmp
and
push
pop
or
xchg
lods
mov
imul
ds
and
jns
stos
push
movsb
int
rcrl
dec
insb
xchg
orb
lea
popa
in
out
clc
dec
dec
cmp
js
push
and
frstor
outsb
adc
icebp
mov
sahf
jmp
push
sub
fmulp
jmp
pop
mov
dec
or
adc
bound
dec
sbb
mov
or
adc
or
nop
rcr
daa
insb
pop
adc
addr16
in
movsb
outsl
nop
in
mov
jle
arpl
xchg
iret
test
mov
ficompl
js
sub
cmp
inc
or
fstpl
pop
and
sbb
sarb
and
and
aas
xchg
js
sub
notl
pop
push
add
jnp
lahf
xor
pop
mov
scas
lods
loope
jae
push
sti
imul
imul
test
rorl
add
mov
push
cmp
pop
cmpl
stos
mov
add
mov
push
push
or
fidivrs
into
loop
cmp
push
scas
push
or
sub
cmpl
cmp
bound
push
and
shll
dec
cmpsb
push
push
popa
mov
xchg
cltd
jbe
fwait
sahf
mov
imul
or
nop
loopne
jmp
loop
testl
xor
pop
jle
insb
sbb
dec
fisubs
out
cmp
xor
fwait
xor
xchg
or
mov
sub
xchg
jecxz
fisubl
sbb
repnz
cwtl
enter
jg
aas
pusha
pop
push
jb
adc
test
push
aaa
imul
test
out
ljmp
scas
xor
jo
imul
push
loop
std
xor
les
mov
mov
lret
ror
jbe
sub
jbe
cmpsb
ja
cwtl
pop
mov
pop
inc
les
push
mov
stos
fcomip
rolb
push
add
mov
push
mov
insb
xchg
lret
adc
pushaw
shll
lds
jne
dec
dec
xchg
movsl
dec
lods
cmp
mov
lods
pop
clc
pop
dec
fists
pop
pop
xchg
dec
cmc
dec
push
loop
mov
or
mov
jbe
jecxz
pop
in
movsl
xor
repz
cli
cmpsb
xor
dec
mov
mov
gs
adc
jg
add
pop
cld
mov
in
jbe
dec
rol
and
out
inc
insl
inc
outsb
fnstenv
push
ds
stos
dec
test
cli
pop
subb
mov
ret
cmp
jmp
repnz
sbb
mov
aas
mov
aas
imul
mov
repnz
mov
repnz
adc
testb
call
in
ret
popa
insb
inc
int
sub
jns
popa
xchg
into
dec
adc
sub
pop
pop
nop
cmp
sbb
dec
xchg
inc
xchg
dec
adc
xchg
xchg
aaa
cs
mul
lret
push
test
mov
xor
inc
lret
in
mov
push
xchg
shll
cwtl
jmp
iret
xchg
jb
decb
or
fcoms
pop
lahf
jge
das
aam
sub
divl
or
pop
int3
pop
adc
or
sub
pop
out
sbb
xchg
xor
mov
push
add
lret
or
inc
ud2
je
push
sbb
fnstsw
pop
mov
test
push
cs
adc
icebp
sub
jnp
jnp
icebp
push
jne
lret
inc
cli
orb
loope
mov
and
subl
xor
pop
adc
dec
sbbl
xor
dec
xchg
lock
cmp
mov
xor
das
jnp
lea
jl
decl
rorb
xor
inc
push
mov
pop
out
adc
insl
mov
popf
xor
mov
xchg
mov
inc
push
dec
pop
xor
test
andl
out
cwtl
pop
call
xor
mov
shl
adc
dec
repnz
sbb
mov
leave
sub
js
xchg
jg
mov
les
push
stos
jno
callw
add
jnp
pop
or
adc
sub
sbb
add
mov
subl
cmp
mov
lcall
xor
out
sbb
fcomps
inc
cld
nop
mov
into
jno
fsubl
pop
push
cmp
shrb
movsb
outsb
mov
push
cwtl
lahf
add
xor
test
push
mov
sbb
and
sub
cmp
ss
and
bound
mov
push
mov
xchg
xorl
and
xchg
and
xor
rcll
call
test
test
mov
add
xor
push
cmpsb
rolb
push
jg
mov
jle
cmpsl
and
adc
jl
mov
jae
pop
adc
jne
shl
dec
dec
nop
xchg
data16
xor
mov
ss
repnz
sbb
dec
rcrb
dec
xor
xor
int
push
jmp
xor
xchg
cmpsl
pop
insl
jmp
daa
xchg
mov
pop
loop
daa
adc
dec
sub
out
cmp
outsl
fwait
xor
cld
fsub
dec
cld
push
mov
gs
popa
js
mov
add
or
cmp
std
add
xchg
and
mov
inc
jae
xchg
dec
filds
jo
jp
repz
pop
testl
aas
lea
adc
xor
lea
cltd
push
rcr
in
pop
cmp
jae
idivb
dec
push
xchg
mov
jp
inc
or
mov
push
cmpsb
loopne
cmp
push
lret
mov
loopne
in
fildl
push
push
movsb
mov
arpl
push
push
push
mov
lods
aad
jbe
loopne
dec
inc
les
in
fs
frstor
out
repz
and
jl
or
xor
mov
js
xchg
int
test
pop
push
orb
push
sub
sub
fstpl
or
sahf
sbb
data16
or
xchg
rclb
push
sbb
and
mov
jae
loop
cli
inc
int3
shlb
dec
addl
shl
jg
mov
test
xor
in
inc
in
sub
dec
or
sbb
push
out
cmp
bnd
and
xlat
xchg
insb
cwtl
movsl
fwait
and
and
dec
mov
das
pop
pushf
aas
enter
sti
dec
sub
xor
sub
mov
rorb
fstps
jp
mov
mov
adc
push
sub
idivl
in
add
mov
add
std
mov
lods
add
and
mov
fsub
cwtl
add
das
scas
mov
adc
jp
fnstcw
push
in
clc
jl
mov
cmc
scas
test
jl
pop
sub
lret
sbb
inc
push
cmp
loope
es
mov
and
add
xlat
mov
xchg
inc
xchg
push
sub
in
outsb
jmp
adc
pop
mov
movsl
mov
or
sbb
pop
push
adc
push
jmp
or
push
inc
cmpsb
dec
scas
call
lea
ja
iret
jp
fs
mov
push
fdivr
adc
push
jge
fs
inc
arpl
aas
mov
aaa
scas
jb
xchg
int3
repnz
es
js
mov
dec
in
int3
pop
jb
and
push
addr16
mov
cli
jnp
sbb
test
fimull
in
icebp
push
pop
aas
ja
pushf
inc
adc
imul
orb
test
and
or
cli
xchg
fld
in
mov
lods
mov
pop
cmp
push
adc
jne
push
ret
pop
cwtl
andl
sbb
maxps
mov
push
ret
jno
sub
lods
lret
arpl
sahf
ja
ror
ss
fildl
jmp
in
mov
xchg
inc
xor
mov
notb
mov
xchg
pop
push
sbb
adc
fcomi
in
inc
test
fwait
pop
xchg
movsl
lods
shr
sbb
ljmp
scas
sub
insl
inc
fadds
push
sbb
decl
into
mov
nop
push
mov
lds
dec
lcall
xchg
jl
roll
pop
mov
add
outsl
sbb
sbb
cmpsb
pop
jg
inc
nop
lea
xchg
and
mov
and
mov
push
adc
inc
sahf
cwtl
cmp
stc
fmuls
or
cltd
es
dec
jmp
out
pop
cmpb
pop
mov
push
add
and
dec
or
dec
fstl
pop
cmp
andb
mov
mov
xlat
scas
cmp
sub
mov
xor
push
iret
sbb
aas
je
push
lahf
das
cmpsl
imul
arpl
cld
pusha
xchg
aaa
jb
push
inc
or
fbld
adc
int3
mov
pop
rolb
clc
xor
cmp
je
jo
in
inc
mov
push
inc
adc
movsl
jns
fcomp
mov
imul
div
xchg
divl
and
jo
pusha
xchg
fs
inc
mov
lcall
lret
push
dec
pop
outsb
stc
sahf
sub
pop
aad
mov
sbb
scas
imul
imul
ret
out
lahf
in
sub
pusha
mov
sbb
fistl
sub
lret
mov
sti
stos
cmpsb
popa
rep
jp
cmp
add
inc
cmp
mov
pop
or
imul
int
push
mov
test
jl
dec
sbb
add
xor
mov
cwtl
lock
hlt
mov
dec
call
cmc
jl
subb
pop
mov
mov
test
cmpsl
mov
and
scas
loopne
ret
in
scas
sbb
test
push
dec
cmpsl
or
imul
enter
jp
mov
mov
mov
xor
das
jg
push
les
fcomps
rcrl
cmpsb
leave
xchg
les
mov
push
xchg
nop
das
dec
andl
fsubs
mov
shll
arpl
gs
mov
outsb
std
mov
jbe
jbe
out
mov
cmp
jp
cmpsb
in
daa
push
addr16
sahf
vphadduwq
jbe
cmpsl
insb
jle
gs
xor
lret
cmc
xchg
icebp
rsm
ret
push
pop
or
je
sbb
les
in
or
lock
add
mov
pop
out
sub
xor
nop
jno
fisttpl
or
xchg
mov
gs
pusha
pmullw
adc
movsl
sbb
pop
fstl
fmul
rolb
int
push
add
xchg
stc
dec
pop
mov
push
cs
cmpl
mov
mov
mov
loope
das
test
ret
fdivrl
sub
mov
bound
lcall
push
sub
aam
add
jnp
dec
repz
xchg
lock
inc
bound
or
xchg
out
xor
cmpsl
jne
nop
or
data16
in
ds
pop
add
add
clc
cmp
cmpsb
inc
jge
dec
jle
enter
mov
jl
movlps
outsb
push
fldt
xor
jno
fsubrp
ja
cmp
subb
ffreep
popl
mov
aas
out
mov
jp
mov
push
stos
fcomp
test
and
jmp
cs
fmull
mov
ret
mov
jp
cld
in
adc
pop
and
in
idivb
mov
neg
loope
cmp
sbb
lock
pop
insl
sbb
in
shrb
lods
jmp
mov
idivb
or
mov
pop
scas
or
jo
mov
sbb
daa
aam
loope
pusha
out
dec
mov
lods
pop
daa
cld
pop
fnstenv
pop
aam
fnstsw
inc
push
imul
mov
scas
outsl
or
lds
sarb
aas
call
sub
stos
rol
insl
mov
popa
lds
arpl
arpl
loope
jns
xchg
push
and
test
mov
fmul
pop
inc
sbbb
mov
dec
mov
mov
jns
in
pop
add
movsl
jg
mov
cmc
jmp
or
daa
and
sub
je
mov
inc
add
mov
dec
xchg
pushf
adc
mov
lea
into
xor
test
add
imul
int
addb
push
push
xchg
mov
cld
js
pop
fiadds
aas
pop
daa
jnp
dec
cltd
xchg
add
sahf
jp
pusha
popa
xor
iret
adc
loope
mov
mov
xor
stos
dec
int
inc
cmp
cmp
call
dec
nop
push
addb
lock
scas
repz
xchg
bound
jecxz
xorb
sub
cmp
in
mov
sub
loop
xchg
xor
or
outsl
repz
loope
call
inc
inc
in
arpl
push
inc
xchg
cltd
std
pop
repnz
inc
jmp
ret
nop
shll
movsl
aaa
mov
repz
aaa
stos
cmp
or
fcomip
je
cmp
sub
outsl
insb
xchg
push
and
mov
inc
out
mov
scas
cmp
mov
lods
scas
sbb
and
inc
in
je
mov
mov
pushf
in
sbb
not
cmpl
cmp
inc
movsl
mov
jmp
in
stc
push
jo
cli
sub
adc
or
in
js
cmp
out
aam
adc
or
cmp
xor
movsb
adc
adcl
lods
es
jnp
fiaddl
test
stc
imul
mov
jno
cltd
repnz
jb
xor
mov
jmp
push
mov
sbb
movsl
jecxz
scas
xchg
es
and
push
lcall
and
int3
xor
inc
loop
add
pop
dec
pop
add
aaa
loopne
jecxz
mov
loope
xchg
cmpsl
mov
push
xchg
jp
mov
add
jmp
push
enter
xor
in
repz
xchg
push
pop
data16
sub
mov
jnp
daa
jp
jno
lcall
and
lret
fs
aad
fistpl
jle
push
mov
pushf
fiadds
pushl
adc
dec
and
fstpt
pop
dec
outsb
and
xchg
je
mov
xchg
push
pop
fistl
or
es
ljmp
jbe
cmp
cld
inc
mov
mov
bound
lods
fidivl
rcl
mov
push
cli
mov
or
enter
inc
ror
push
jbe
push
enter
ja
mov
daa
daa
lret
xchg
ret
mov
dec
outsb
sub
lret
insl
pusha
cmpsl
adc
mov
jg
out
pop
lds
repz
movsl
rcrl
xchg
adc
fmulp
adc
xchg
xchg
push
jp
stc
shlb
imul
xorl
pop
sbb
xchg
je
shll
inc
push
roll
shlb
push
int
rep
testb
fisttpll
and
dec
push
jbe
or
sbb
jo
jle
mov
in
inc
and
enter
and
inc
imul
data16
mov
loop
fisttpl
and
insb
hlt
rorb
sub
xlat
test
mov
fildll
ret
stos
loopne
in
add
roll
fdivs
pop
test
push
xor
sub
dec
in
sbb
push
mov
fsubl
fwait
addr16
mov
mov
pop
pusha
cmpsl
insb
push
popa
push
std
pop
popf
add
lods
pop
icebp
jle
cmp
dec
int
inc
loope
add
mov
shr
push
cltd
test
fwait
adc
rolb
lret
xor
insb
mull
cltd
mov
addr16
cmp
shrb
int3
fsin
sbb
jle
xchg
enter
testb
cmp
dec
gs
movsb
ss
sahf
push
xchg
mov
std
pop
call
sub
jns
sub
repz
dec
mov
repnz
adc
jl
loope
dec
xchg
mov
std
mov
sbb
mov
sbb
sbb
push
hlt
imul
fldenv
sbb
sbb
aaa
xor
mov
pusha
dec
es
lock
or
fbld
pushf
jb
dec
add
neg
mov
lds
push
jo
jge
fisubl
decl
cmp
mov
push
add
addl
popf
fistpl
and
cli
mov
popa
clc
xchg
fisubs
aaa
enter
jmp
adc
and
xor
push
std
popf
jmp
inc
xchg
xlat
roll
pushf
ss
insb
scas
loop
xchg
iret
xchg
mov
sbb
inc
outsb
sub
in
sbb
and
js
cld
popf
ds
mov
add
xor
add
mov
cmp
das
test
xchg
sub
inc
jbe
je
cmp
roll
scas
cmp
aaa
js
inc
aas
adc
js
leave
cs
jb
mov
cmp
mov
rorb
iret
data16
jp
and
jne
pop
mov
int3
lahf
mov
outsb
mov
int3
xchg
pop
sti
xchg
lret
inc
sub
push
scas
push
js
add
inc
loopne
jp
add
xor
xchg
mov
mov
xchg
ljmp
outsb
test
push
add
enter
sbb
xchg
sbb
sti
scas
stos
push
jmp
mov
pop
pop
mov
jp
cmp
jnp
add
and
mul
outsb
out
xorb
test
push
and
mov
adc
xchg
pop
je
xchg
nop
mov
xchg
popa
mov
cli
cs
xchg
mov
mov
popa
inc
mov
adc
mov
jae
lret
insl
sbb
cs
imul
fidivrs
subb
jbe
or
dec
sub
dec
mov
fisubl
inc
pop
lods
xor
movsl
mov
stc
stos
jg
lds
sub
mov
mov
jg
subl
pop
adc
push
in
lods
push
and
ret
into
or
popa
cltd
dec
mov
jne
xchg
xor
pop
inc
or
sbb
push
pushf
push
xchg
nop
cbtw
pop
in
xor
notb
push
and
dec
inc
cmc
bound
or
adc
fisttps
js
aad
repz
pop
cltd
xchg
sub
or
hlt
pushf
push
cld
outsb
stos
mov
jb
dec
jg
insl
jg
cmp
bound
mov
jb
jg
inc
call
add
xchg
ret
mul
xor
fwait
jle
jl
cmp
aas
scas
sub
iret
popl
lock
pushf
or
mov
mov
add
lret
ret
hlt
daa
mov
roll
xchg
adc
mov
dec
rorb
std
dec
ljmp
std
cli
rorl
mov
pop
mov
adc
icebp
mov
and
out
xor
jb
sbb
lods
inc
adc
and
add
sub
xchg
arpl
dec
inc
or
jecxz
jmp
aad
in
sahf
imul
icebp
adcb
aas
mov
xchg
mov
xlat
ss
fisubrl
fiadds
pop
cmp
aaa
cli
scas
lea
scas
mov
mov
push
jb
aaa
inc
je
nop
call
movsl
xchg
mov
inc
ret
cs
inc
adc
or
or
inc
pop
sub
fwait
mov
xchg
push
pop
jle
lods
add
nop
out
sub
testb
pop
adc
rorl
jp
mov
pop
mov
adc
das
das
arpl
cltd
sahf
clc
push
and
xor
cmp
shll
cmpsb
and
das
cmp
ljmp
inc
aaa
xor
sbb
pop
sub
push
gs
fcom
jecxz
xchg
add
or
repz
and
addl
repnz
xchg
imul
sti
mov
or
lea
arpl
push
jle
mov
push
lret
add
je
adc
sahf
fadds
stc
negb
movsb
nop
out
push
outsb
loopne
adc
lea
jo
mov
push
mov
mov
or
daa
cwtl
adc
lea
jne
sbb
stos
mov
cli
mov
insl
sub
push
mov
sbbb
shrl
jo
xor
mov
insb
mov
xchg
lret
cmp
mov
mov
ror
lock
outsl
pop
rcrl
jge
and
scas
js
mov
sbb
cmpsb
mov
xor
notb
mov
scas
add
aam
mov
lea
mov
pop
pop
xchg
inc
lahf
pop
xchg
das
mov
jle
inc
fistl
push
cmp
jmp
aaa
jo
and
xor
and
add
stc
cwtl
lea
or
arpl
jbe
cld
push
sub
daa
lods
test
xor
mov
dec
push
adc
mov
or
dec
xor
decb
mov
popf
ret
dec
mov
insl
jecxz
and
aad
jl
mov
pop
push
pop
adc
test
out
lcall
adc
push
sub
cli
sbb
pop
jp
test
adc
bound
mov
and
cwtl
fwait
ret
imul
inc
pop
dec
cltd
inc
xor
cld
test
js
movsb
aam
fstpt
add
jmp
add
cld
mov
lahf
cmp
sbb
push
pop
rolb
xchg
outsb
mov
lret
repz
shl
cmpsb
mov
xor
xor
pop
sbb
jmp
fdivrl
mov
inc
push
mov
test
sub
nop
std
mov
and
insb
add
test
pop
dec
shr
lcall
cmp
mov
dec
push
mov
jns
ds
hlt
lcall
sarl
dec
jp
cld
add
aas
in
push
lcall
cmpb
sti
cmp
push
mov
mov
inc
or
xor
out
dec
orl
xchg
pushf
rcll
inc
adc
pop
push
add
add
sbb
arpl
fwait
aas
nop
stos
call
fcmovnb
jns
out
push
stc
dec
push
enter
inc
push
add
cmp
int
add
xor
mov
mov
dec
mov
daa
inc
or
nop
jl
vmread
adc
jne
cs
mov
mov
add
cs
push
clc
jg
push
mov
lret
dec
adc
imul
cltd
fisubl
sbbl
idiv
outsb
or
cmp
orps
push
ret
push
mov
lahf
bound
test
sub
sub
lret
filds
dec
or
iret
jecxz
xor
pop
mov
push
adc
stc
adcl
ljmp
enter
xchg
sub
inc
paddusw
rcrb
enter
fidivrl
mov
fwait
rclb
shll
rcll
xor
or
iret
and
cmpsl
sahf
push
movsl
negl
loope
push
imul
dec
push
push
push
rol
xor
fcompl
es
fwait
adc
mov
cmpsb
clc
sti
jle
and
sub
cmp
or
je
int
rcrb
sub
mov
inc
test
sub
push
xchg
daa
repz
rorl
fistl
sbbl
inc
sbb
mov
pop
inc
psubsb
mov
dec
add
shrb
cmc
push
inc
in
sub
mov
popa
lock
mov
mov
sbb
ljmp
sub
mov
xchg
out
inc
sbb
dec
ja
mov
jmp
sahf
xor
add
mov
inc
aaa
out
movsl
push
ret
jo
pop
fld
int3
xchg
mov
sbb
jg
stos
imul
std
shlb
xchg
dec
shll
iret
sbb
xchg
push
add
lcall
adc
lods
xor
addb
insl
loope
pop
push
adc
push
mulb
sbb
cmpsl
and
xlat
and
pop
stc
imul
xchg
test
sub
je
sub
pop
icebp
loop
cmp
jb
movsb
repz
cmc
mov
push
call
roll
ds
clc
cwtl
mov
push
mov
popf
pop
out
pop
decl
push
shrb
cmpsl
pop
xchg
dec
jne
and
call
mov
jno
call
mov
jnp
data16
arpl
jae
ss
mov
xor
icebp
dec
or
cltd
jns
dec
loopne
pop
push
ljmp
or
cmp
add
lock
xor
cmp
pop
fmulp
xlat
sub
gs
outsl
mov
jg
inc
faddl
ds
push
xchg
jo
mov
popf
fildl
xor
int
enter
ret
jle
jne
or
rorb
es
sbb
push
lods
dec
movb
cltd
xor
cltd
jmp
pop
cmp
mov
push
mov
movsl
cld
jnp
je
or
stos
stos
sbb
cltd
sub
jnp
xchg
movsl
lods
mov
dec
clc
xchg
int3
std
mov
and
xor
icebp
push
pop
sbb
adc
xchg
jns
and
mov
ror
outsb
rcrl
or
push
addr16
jg
cmp
pop
xchg
jae
leave
leave
lock
or
mov
inc
out
sahf
sbb
rcrb
mov
jmp
xor
test
int3
insl
xchg
add
sti
int
orl
pop
or
xor
sub
fistl
inc
inc
adc
add
xlat
jno
mov
mov
mov
daa
std
aas
loope
out
mov
jns
jne
pop
hlt
jp
cld
pop
scas
ja
adc
mov
dec
outsb
dec
bnd
adc
mov
rorb
push
movsb
scas
adcl
adc
std
sbb
push
ljmp
outsl
push
mov
push
andb
stc
lock
loopne
jne
lcall
rcl
push
test
mov
mov
fists
pop
pop
jae
cmp
mov
add
jecxz
out
es
xchg
push
push
dec
jno
sub
mov
xor
xchg
in
mov
lret
cmpsb
cmp
push
or
push
test
repz
shll
add
or
aam
inc
cmpsb
jmp
addl
pop
xchg
cmc
in
fld
movsl
jecxz
push
lret
ljmp
aas
test
sub
inc
dec
xor
dec
xchg
daa
jb
mov
sub
jle
dec
sbb
xlat
fs
lock
push
pop
and
mul
mov
jae
or
in
jle
mov
test
jge
sahf
lret
or
inc
dec
icebp
std
jmp
dec
dec
inc
lret
adc
or
addb
popa
sbb
cmp
add
pop
ss
arpl
popa
add
lods
adc
or
popa
stos
jle
std
aad
bound
repnz
and
mov
xchg
aaa
dec
and
mov
xlat
ljmp
lret
shlb
mov
ds
adc
sqrtps
lods
stos
in
mov
jne
mov
pop
scas
aam
sbb
imul
jmp
dec
popa
dec
mov
shrb
xchg
mov
xchg
dec
sbb
add
pushf
pop
cmp
mov
xor
jns
test
add
add
es
and
stos
gs
iret
fldenv
pop
mov
adc
cmc
jno
inc
or
mov
push
ss
pop
int
cmp
out
das
push
jmp
or
test
fcomps
scas
cli
xchg
inc
sbb
cmp
and
pop
xchg
mov
sub
inc
imul
movb
pop
inc
mov
sbb
int
xchg
idivb
jo
adc
push
ret
stos
mov
mov
mov
out
inc
shr
loopne
cld
fidivrs
inc
fst
and
push
mov
mov
sbb
cmpsb
in
imul
adc
mov
shlb
lahf
pop
jae
mov
inc
andl
mov
sub
dec
adc
psubw
pop
out
fxch
out
mov
sub
sbb
and
pop
pop
je
sbb
sbb
inc
insl
jne
pop
xor
pop
int
cmpsl
lret
aaa
pusha
mov
sub
push
pop
leave
popa
jne
mov
add
dec
int3
push
cli
js
mov
imul
mov
cmp
sub
add
mov
loopne
loopne
inc
xchg
and
ja
sarb
pop
sub
lret
and
mov
lahf
jg
mov
or
lods
in
roll
loopne
mov
push
je
test
and
xchg
jo
ret
mov
cmpsb
add
nop
pop
lea
sbb
dec
xchg
xor
pushl
jb
mov
cmp
aad
xchg
pusha
hlt
jmp
pushf
cmp
fstps
dec
out
imul
pusha
shll
jmp
cmp
lods
std
out
in
ljmp
xlat
jmp
cmp
ror
insl
mov
sbbl
jle
cwtl
jg
icebp
push
add
jmp
lcall
pop
xchg
cmpsb
imull
pop
xor
dec
xchg
inc
adc
fwait
jp
xor
insb
out
hlt
inc
xor
lock
dec
daa
out
js
sbb
aad
sar
fistl
cmpb
jb
jle
inc
aaa
les
jb
hlt
mov
add
loopne
jae
iret
sbb
imul
stos
js
adc
sahf
mov
push
dec
jl
jne
lock
push
adc
mov
push
in
push
cli
mov
mov
adc
push
sbb
add
push
mov
rorb
jae
xchg
data16
in
data16
push
or
sbb
or
jb
xchg
jae
push
in
cmp
dec
adc
mov
fcoms
xlat
or
lret
repnz
rclb
out
insl
jns
fcomi
outsl
inc
xchg
xor
icebp
push
mov
push
mov
mov
data16
mov
in
mov
daa
cmp
xchg
fdivs
and
das
adc
loopne
sbb
fstl
icebp
popa
shrb
pop
jne
mov
js
rorl
inc
js
test
mov
out
cmc
ss
and
dec
fbstp
andl
or
mov
imulb
sbb
ds
adc
cmp
out
lock
xor
mov
sbb
sub
sti
lock
je
pop
dec
push
mov
add
iret
cmp
push
hlt
scas
mov
mov
ljmp
sub
sub
pop
movsl
cmc
test
dec
lcall
testl
gs
out
leave
std
pop
sub
cmp
and
jbe
jae
pop
std
sti
inc
add
fbld
push
pop
ret
push
arpl
or
sbb
out
inc
xor
movsl
push
lret
cli
das
inc
negb
lcall
xchg
sub
pop
or
rcll
lods
sbb
repz
cli
xchg
dec
out
cmp
mov
dec
mov
adc
cmp
into
icebp
mov
pop
sub
lcall
loopne
in
mov
enter
cs
cs
add
xchg
xchg
test
int
call
jecxz
pop
cltd
int
lock
push
pop
push
jge
iret
lahf
dec
dec
push
ret
aaa
std
jecxz
lret
movsb
fldcw
test
bound
mov
xor
pop
sub
inc
call
xchg
adc
or
or
and
inc
repz
or
int
mov
mov
outsl
adc
mov
push
in
je
cltd
call
ja
push
and
push
push
mov
and
out
js
pop
ret
sub
sbb
ss
test
pop
je
rcr
sbb
rolb
mov
add
daa
pop
popa
into
inc
out
test
sbb
push
push
pusha
in
push
mov
fldt
cmpl
xor
imul
jb
sahf
leave
or
cs
inc
or
sbb
int3
push
jl
call
adc
lret
out
sub
xchg
xchg
sub
cs
repnz
jmp
es
imul
dec
or
jge
lds
in
hlt
and
add
push
adc
mov
push
or
andl
sbb
cmpsb
out
std
cltd
movsb
inc
jge
lcall
pop
mov
arpl
test
adc
shll
aam
add
jp
ficomps
sub
loopne
mov
add
dec
std
filds
call
mov
inc
rcrb
mov
mov
dec
clc
mov
adc
test
sbb
jbe
or
test
int3
and
popa
jb
cmp
adc
jne
or
push
push
xchg
out
cld
repz
mov
sbb
in
mov
push
cmp
dec
lea
int
insl
add
mov
jmp
mov
mov
call
jle
cmpb
dec
push
jb
decb
and
push
xchg
adc
dec
push
sub
sub
or
inc
test
cmpb
mov
aad
arpl
jae
xchg
inc
testl
lcall
and
dec
popl
out
xchg
push
xor
into
cld
aad
jno
push
dec
lods
mov
int3
rcrb
push
xchg
jecxz
negl
jge
popa
pop
jb
jg
dec
leave
jno
pop
mov
sub
mov
adc
movsb
outsl
jg
xor
ror
push
hlt
int3
xchg
xchg
dec
xor
xchg
sub
cmp
jnp
dec
dec
imul
mov
lahf
inc
jb
jbe
adc
frstor
int3
or
mov
mov
shlb
jle
xor
in
roll
iret
stos
out
pop
fcmovnb
ret
aad
sbb
pop
test
jns
repz
add
push
cmp
insl
inc
mov
sarb
stc
inc
jg
and
cmp
icebp
adc
and
sbb
pop
popf
xchg
aas
fsubl
push
cmp
dec
add
pushf
xchg
mov
pop
in
dec
inc
mov
xor
inc
incl
mov
sub
aaa
inc
mov
inc
pop
pop
sub
xor
inc
scas
push
mov
bound
push
ror
cmc
mov
sbb
lods
inc
imul
outsb
mov
sub
and
std
cmp
lret
dec
push
dec
sbbl
cmpsb
fldt
jg
movsb
mov
aas
cli
sbb
push
cli
mov
adc
sub
orb
std
stos
mov
mov
xlat
inc
sbb
add
adc
sub
pop
call
cwtl
inc
mov
mov
sbb
xchg
das
test
mov
jl
xchg
cmp
inc
pop
mov
idivb
leave
mov
mov
addr16
or
jno
add
mov
call
sahf
push
je
daa
dec
sbb
mov
or
cmp
ffreep
cmp
mov
cwtl
inc
out
test
scas
jl
xor
lret
cwtl
test
add
mov
inc
dec
jp
subb
pop
push
add
je
inc
out
jle
cmp
je
in
aad
xchg
sahf
fs
js
aam
mov
cmp
lcall
sbb
in
push
cmpsb
mov
push
xor
or
mov
arpl
push
adc
dec
jbe
bound
jle
mov
les
mov
push
xchg
sti
pusha
pop
mov
dec
mov
or
push
dec
jnp
pushf
sbb
mov
inc
cmp
pusha
and
mov
pop
jecxz
lcall
xchg
andb
les
stos
adc
mov
fcmovb
flds
pop
xchg
cmpl
pushf
fildll
into
sbb
mov
insb
cmp
jl
lret
xorl
xchg
push
adc
push
pushf
lods
sbb
adc
mov
sti
aas
inc
lds
mov
xlat
add
stos
jmp
mov
jge
jno
adc
lahf
mov
out
adc
shrb
jb
jle
push
mov
inc
andl
mov
out
clc
es
push
adc
dec
shl
fs
insl
repz
mov
xchg
shr
pop
pop
jp
sub
mov
push
jo
into
push
ret
mov
inc
pop
fadds
inc
and
jb
inc
fstpt
sub
es
scas
mov
addr16
cmp
stos
iret
sub
sub
sub
rcl
sub
or
pop
std
mov
push
cmp
push
xor
es
sahf
subb
push
and
es
dec
mov
out
hlt
test
pop
or
sbb
xor
pop
mov
mov
dec
pusha
xor
or
fdivp
sbb
pop
ret
inc
sub
hlt
inc
push
mov
shr
sbb
lock
xchg
fwait
stos
xor
test
cli
xchg
clc
cmp
xchg
jno
inc
adc
mov
call
in
cld
cld
and
push
xor
push
outsl
xor
fs
fdivrs
inc
push
sub
scas
cmc
fsubrs
jbe
dec
xor
std
outsb
sbbl
fwait
sbb
out
daa
inc
mov
and
insb
xor
test
inc
ss
test
adc
lds
xchg
js
push
les
das
pop
add
int3
or
sahf
scas
movsb
insb
cmp
je
or
loope
scas
cmp
xchg
jp
or
push
mov
mov
stos
jo
jo
inc
test
aad
dec
cmp
jnp
clc
xchg
add
test
shlb
xor
jns
or
mov
dec
jno
into
mov
push
add
mov
rolb
adc
inc
jge
push
aam
or
loope
insb
fcomip
mov
fisttpll
sti
push
nop
cld
hlt
and
rcrb
popf
jl
shl
lods
cmp
xchg
insb
or
adc
xchg
ds
repz
mov
pop
inc
outsb
popa
cmp
ljmp
leave
addr16
imul
scas
out
jp
push
testb
test
in
mov
push
dec
push
add
jmp
aas
fs
outsl
sub
and
add
aas
pop
push
cmp
sti
in
int3
faddl
xor
lahf
popa
push
out
adcl
incb
lods
jnp
insb
popa
cmp
mov
out
push
loop
dec
movb
jle
in
sub
sub
xchg
roll
xor
lahf
addr16
sbb
shl
adc
arpl
cmp
and
mov
xchg
repnz
push
and
cmp
and
xchg
or
xor
mov
dec
test
adc
div
lret
fdiv
lods
xchg
jbe
sbb
jmp
add
insl
add
mov
xlat
cmp
and
pop
jno
sub
ds
dec
xchg
pop
test
ljmp
shll
and
pop
xchg
xchg
rol
lea
icebp
xor
and
sarb
scas
sub
mov
mov
push
xchg
jne
adc
into
fcompl
shl
lock
and
ja
xchg
adc
aaa
lcall
or
mov
pop
mov
mov
inc
rcll
mov
jecxz
push
in
mov
jge
push
inc
jecxz
sub
popf
in
sbb
push
and
push
mov
fildll
pop
adc
add
push
movsl
hlt
mov
loop
mov
mov
cltd
mov
inc
cmp
mov
pop
mov
dec
scas
scas
jmp
jns
cmpb
jb
dec
cmp
xchg
shrl
or
or
ja
mov
pop
jne
mov
imul
push
jl
aad
test
add
sub
push
push
xchg
add
mov
clc
loopne
insl
push
sbb
sti
stos
mov
aaa
and
scas
xchg
in
std
out
out
add
jne
mov
popf
cmp
into
andb
arpl
loope
sub
add
jg
and
imul
mov
in
sbb
cltd
ds
rorb
shll
mov
sub
dec
int
cmp
cmp
out
add
jne
popa
in
outsb
pop
out
pusha
pop
inc
push
mov
mov
pop
push
xchg
les
les
pop
jmp
imul
sub
test
cmpsl
sub
aaa
imul
xchg
adc
roll
cmpsl
sub
mov
in
mov
adcb
cmp
scas
jp
test
add
fidivl
adc
cmp
out
gs
loope
jae
lret
xor
fs
aam
inc
pusha
jp
inc
aaa
lret
shrb
sub
cmp
adc
int3
aam
adc
or
call
aas
es
fisubs
push
add
add
divb
into
inc
out
inc
int3
rcl
jb
pop
rcll
scas
ss
in
xchg
jne
ret
icebp
repz
enter
ret
xchg
push
in
or
stos
pop
pop
dec
cmp
popf
jp
cltd
bound
divl
push
mov
mov
or
rclb
xchg
xor
sub
mov
xorl
jno
sahf
add
dec
pushf
pop
mov
mov
divl
sub
scas
jae
xor
in
subb
ret
mov
adc
mov
or
xchg
sahf
gs
xchg
int
or
dec
subb
dec
pop
jne
adc
icebp
and
outsb
lret
add
xor
lock
fistl
mov
sub
mov
das
mov
push
imul
call
mov
jnp
jns
nop
cmp
out
sub
scas
mov
mov
sbb
mov
inc
xor
call
jg
add
cmp
shlb
mov
add
mov
fimuls
and
jp
sti
pop
or
mov
imull
das
xor
pop
int
loop
aas
inc
push
dec
testb
dec
addb
inc
int
fbld
arpl
sarl
dec
xchg
cmp
lock
push
xchg
and
aas
inc
cmpsl
xor
das
jecxz
test
xchg
sub
xchg
cli
add
sub
and
mov
aaa
push
add
incb
sbb
jno
lods
pop
rcrb
fcomps
xchg
mov
or
test
mov
dec
pop
imul
fidivs
or
xchg
cli
jno
rclb
cld
cmp
mov
test
jl
cmc
lcall
push
sbb
subl
fdiv
lahf
loop
or
scas
lods
sub
lds
push
sub
out
es
adc
enter
fiaddl
cmp
mov
adc
pop
pop
out
clc
ljmp
sub
loopne
popf
and
daa
dec
imul
xchg
loopne
mov
or
mov
add
das
mov
adc
repnz
xchg
out
xchg
adc
dec
scas
xchg
les
mov
loop
out
clc
test
pop
jmp
mov
int
mov
fmull
adc
addr16
mov
mov
cmp
push
test
inc
pop
cltd
push
dec
mov
rcr
int3
xor
test
sahf
xor
pop
sbb
popf
pop
xchg
pop
mov
adc
adc
mov
pop
aam
push
enter
inc
rcrl
adcl
ljmp
nop
lcall
outsb
or
pop
jne
mov
es
rorl
mov
nop
in
push
xor
sti
iret
xchg
stc
ret
jo
inc
fs
cmpsl
test
stos
je
and
adc
rcll
push
daa
or
outsl
stos
or
js
lds
xor
shlb
inc
cli
outsb
and
aas
aam
mov
aas
push
and
push
insl
jl
insb
sbb
or
stc
lcall
push
outsb
lahf
pop
push
push
pop
ds
lcall
pop
ret
xchg
or
jp
lods
cmpsw
iret
nop
mov
aam
call
je
inc
add
enter
imul
xor
iret
in
add
dec
inc
or
or
cmp
stos
rcrb
rcll
pop
std
ja
dec
pop
push
fstpt
test
fistps
insl
mov
xor
ds
xchg
and
shll
popa
xor
mov
adc
xor
push
jecxz
lock
call
add
cwtl
inc
sbb
popa
adc
inc
aas
pop
data16
movsl
fisubs
fwait
lea
outsb
jno
cli
mov
lock
jnp
inc
arpl
outsb
aas
subl
daa
outsl
test
in
push
fdivr
mov
icebp
xor
pop
mov
cli
xchg
or
pop
adc
outsl
cmp
push
and
repnz
pusha
sbb
jns
dec
aad
hlt
imulb
xor
or
shll
jg
into
mov
xor
xchg
mov
cmp
int
aad
jle
jno
sbb
pop
lods
clc
pop
arpl
sub
inc
out
mov
xlat
cmp
jg
scas
andb
dec
dec
iret
push
bnd
add
rcrb
mov
ja
in
incb
es
cwtl
fs
mov
je
and
xor
inc
cltd
shll
inc
in
jbe
mov
cmp
mov
lret
roll
xlat
add
lea
stos
sbb
adc
stos
dec
and
lods
mov
ret
inc
ficoml
test
shr
jb
adc
mov
sub
call
jae
xchg
xchg
in
inc
jg
add
aam
lods
fwait
dec
sti
mov
jp
out
pop
aam
sti
test
mov
lds
andb
xor
inc
sub
xor
arpl
xor
lea
pop
sbb
adc
mov
shll
aaa
mov
cmp
push
inc
adc
into
fsubs
jnp
mov
jbe
addb
test
push
cmp
sbb
data16
adc
mov
mov
pop
mov
jl
les
hlt
icebp
pop
mov
fldl
aaa
push
add
loope
push
mov
lods
idiv
push
xlat
jno
loope
mov
stos
adc
loope
out
lods
movsb
andl
jmp
ja
jge
sbb
notb
fdivrp
cwtl
push
jae
sbb
out
xor
ret
inc
scas
sub
bound
insl
xor
dec
and
or
scas
ret
test
stc
xchg
jge
pop
lcall
cmp
mov
cmpsl
cmpl
and
pusha
fsub
add
vandnpd
popa
nop
or
arpl
fdivs
dec
fistpll
sti
cld
cmp
push
mov
loope
jno
fnstcw
mov
jle
cmc
add
dec
add
and
or
xchg
icebp
add
or
out
jge
in
xor
fs
pop
push
pop
push
outsl
pusha
and
test
dec
fucomip
out
dec
shlb
inc
xor
repz
add
cmc
xchg
push
js
addr16
jg
fimull
inc
divb
dec
inc
cmp
jns
pusha
hlt
sar
adc
fildl
outsb
dec
sub
jl
sbb
mov
pop
lea
cs
loop
je
mov
mov
cld
jbe
repnz
imul
jle
shll
ljmp
int
or
fnstcw
jl
repz
inc
jb
mov
mov
jbe
pop
jecxz
jne
adc
jbe
xlat
rorl
test
jle
fistl
aad
pop
sub
pop
aas
mov
sub
dec
xor
shlb
sbb
adcb
aad
int
lods
mov
add
sarl
lcall
pop
jle
lods
cld
pop
cmp
pushf
iret
pop
loope
stos
sbb
jne
fmul
xlat
mov
bound
cmpsb
lock
aam
sub
lds
loope
sub
or
xor
jo
xchg
fistpl
cmpsl
sbb
stos
mov
ss
notb
adc
push
jmp
mov
shll
dec
in
shr
xor
mov
incl
or
pop
cwtl
xor
aas
sub
fisttpll
push
cmpsl
mov
cmp
rcll
and
shll
sub
mov
xchg
in
nop
popa
xlat
es
mov
push
and
jbe
icebp
jmp
mov
fs
ss
aaa
pop
loop
and
prefetch
sbb
xor
fdivrp
sub
imul
roll
dec
pop
lds
leave
aam
pop
add
mov
shl
cli
loop
scas
jmp
dec
fists
lret
rorb
negl
xchg
mov
mov
out
sub
daa
cs
je
incb
xor
dec
ret
inc
cmp
rol
dec
std
movsl
js
or
or
idiv
je
call
std
movsb
fwait
jne
or
jecxz
sbb
pop
in
sar
bound
rorl
adc
sub
cs
int3
xchg
pop
inc
mov
mov
std
xchg
insl
not
jae
adc
jecxz
pop
xor
fsts
sbb
push
mov
ljmp
gs
adc
xchg
in
loop
add
mov
pop
jae
pop
lret
out
insl
insl
push
divb
icebp
rorl
jmp
shl
inc
dec
inc
popa
outsb
xchg
aaa
push
sub
jecxz
add
jecxz
ror
inc
cmp
orb
iret
sub
pop
pop
push
or
iret
and
imul
stc
xor
push
xchg
xor
rcrl
lcall
xor
inc
rcrb
icebp
pop
data16
out
int
add
fcompl
scas
and
inc
aam
or
clc
push
sbb
bound
cltd
xor
cmpsb
push
and
ds
push
sub
lds
stc
leave
inc
ds
fistl
sbb
fxch
loope
mov
cmp
sti
mov
sbb
cmp
popf
int
lret
push
lea
cli
testl
movsb
jmp
push
adc
dec
mov
aam
jb
and
jb
sbb
sub
pop
pop
es
xor
insb
dec
xchg
imul
add
dec
mov
xor
lcall
cmp
jge
scas
jmp
mov
pusha
outsb
imul
cmp
sti
incb
ficompl
test
or
pop
lea
xor
push
sarb
cs
and
lcall
test
addr16
and
push
ja
jg
cwtl
gs
push
xchg
stc
test
lcall
xchg
jno
or
cmp
cmpsl
jbe
icebp
or
jl
pop
push
test
xchg
mov
fistps
jb
and
fildll
adc
adc
lea
lods
push
inc
xor
int3
jecxz
mov
xchg
nop
dec
lods
mov
not
cs
xor
adc
cwtl
stos
sub
in
out
shlb
clc
mov
adc
inc
cld
xchg
add
shrl
xchg
stos
push
mov
leave
inc
add
pop
decl
adc
insl
inc
xor
dec
movsl
movsb
jg
mov
andb
out
fsts
mov
bound
nop
cwtl
clc
les
mov
rorl
inc
cmp
std
sub
mov
sub
xchg
xchg
dec
inc
fbld
daa
imul
adc
or
inc
sahf
pop
pop
dec
mov
dec
push
lahf
std
cmp
ss
repz
daa
push
std
jecxz
push
mov
jne
into
nop
mov
mov
jp
mov
scas
test
pop
in
dec
cmp
gs
mov
jb
loopne
aam
ficoml
adc
sub
daa
adc
xchg
push
shrb
push
xor
mov
ffreep
cli
xor
frndint
mov
test
aam
jle
xor
popf
hlt
aad
jne
cmpsl
call
aam
ret
cmpsl
adc
inc
jmp
sbb
loopne
ss
add
push
dec
lods
pusha
scas
pop
mov
loop
or
cmc
iret
add
or
cmp
shll
fimuls
mov
pop
bound
add
lcall
mov
xchg
adc
and
loope
test
sbb
pop
lahf
setg
movsl
cs
pop
pop
arpl
gs
add
js
addr16
scas
fwait
jne
js
das
mov
mov
lods
add
dec
cmp
sbb
scas
dec
ljmp
ljmp
mov
mov
add
jo
sarl
ljmp
jge
mov
lods
iret
ret
stos
call
sub
pop
dec
or
cmpb
rcrl
jb
mov
fisubl
daa
mulb
dec
sub
loope
or
add
lret
inc
push
test
dec
inc
mov
adc
adc
push
fnstsw
es
mov
jp
cltd
movsb
iret
adcl
jb
add
test
jg
and
loope
cmp
lcall
xor
mov
and
lret
pop
xor
arpl
sbb
pop
push
popf
in
fcmovnb
mov
sub
pop
inc
sbb
sub
adc
cmpsl
shr
and
lahf
fsubrl
and
inc
ljmp
mov
stos
jbe
in
popf
adc
stos
cmpl
push
mov
dec
mov
ja
test
jbe
daa
and
mov
mov
dec
jg
or
jns
add
lds
test
sbb
scas
popa
inc
cmp
and
xor
push
adc
cmpsl
lret
adc
in
mov
jns
pop
jae
inc
fs
outsb
jmp
mov
ret
aad
mov
inc
das
adc
ljmp
pop
pop
cmc
movsb
ret
ret
daa
fwait
dec
or
test
pop
cltd
mov
dec
shl
mov
mov
cltd
clc
xchg
sub
inc
lcall
xchg
mov
mov
inc
mov
lret
pusha
xchg
lods
fcmovbe
and
push
push
jbe
pop
sub
pop
mov
mov
fs
cmpsb
pusha
mov
add
test
add
aaa
sub
xchg
add
jmp
das
push
nop
dec
fisttpl
mov
fists
fcoml
movsb
xor
mov
push
aad
call
push
add
rcrl
mov
in
xchg
je
dec
inc
xchg
mov
call
fcmovnb
inc
mov
jmp
out
pushf
enter
xchg
call
popa
ret
lahf
add
and
pop
sub
loopne
test
add
lds
jge
cli
fstps
cmp
sbb
lret
ja
dec
popf
repz
loopne
mov
inc
mov
aad
sbbb
push
mov
xor
lret
loopne
mov
adc
loope
cmp
mov
addr16
sar
test
lods
in
shr
inc
xchg
mov
shl
or
imul
push
sbb
pop
movsl
mov
xor
ret
es
or
sti
sbb
fisubrs
cli
mov
negl
or
sbb
pop
push
add
pop
pop
mov
and
fcos
cs
test
shlb
sbbl
sbb
mov
outsb
cmpsl
push
sbb
in
and
adc
lret
xchg
gs
aaa
jb
and
push
rcrb
mov
cwtl
in
cmpsb
adc
push
cmp
dec
lahf
mov
sbb
sub
fidivrs
inc
xchg
pop
inc
jbe
xor
sbb
xlat
mov
sub
outsl
loope
mov
xor
nop
cs
fmull
popa
adc
dec
push
loop
mov
dec
jne
sbb
xor
ss
jnp
pop
mov
jl
arpl
fwait
sbb
outsl
inc
jmp
das
pop
jmp
daa
insb
nop
loopne
xor
mov
out
jl
movsb
dec
loop
mov
sub
cmp
dec
scas
adc
fadds
shlb
jno
pop
das
add
jns
sbb
cmp
rclb
movsb
shrl
dec
inc
push
sub
xchg
loopne
les
sbb
mov
dec
cmp
and
imul
cs
cli
test
pop
popf
xchg
testb
jb
adc
inc
push
sub
sbb
push
dec
sahf
jbe
jno
movl
jp
test
inc
ret
add
jae
add
insb
cwtl
jmp
stos
jge
pop
dec
push
push
xchg
aaa
fnstsw
in
xchg
es
movsb
popfw
cli
sbb
push
add
scas
xchg
gs
jmp
scas
out
out
push
sbb
or
add
cmpsb
ret
sbb
mov
xchg
daa
xor
in
fcmovb
sbb
rcr
sub
dec
fcomi
sbb
scas
js
clc
gs
sahf
std
jle
pop
es
push
and
nop
or
andb
dec
push
test
and
mov
adc
pop
or
int3
jle
mov
les
test
dec
bound
clc
mov
pop
cmp
lods
jb
sbb
lret
sbb
es
push
pop
out
xor
xchg
cmp
icebp
lds
add
aam
fidivl
clc
dec
mov
xor
sbb
jecxz
pop
pusha
cmpsl
push
pop
pusha
jbe
sbb
loop
add
cmpl
pop
aad
mov
shrb
ja
mov
inc
xchg
cmpsl
outsb
cli
or
jl
out
pushl
mov
lahf
fs
jb
xchg
pop
pop
out
loope
nop
lds
jnp
mov
xchg
xchg
sbb
push
movsl
push
add
sub
mov
add
ficomps
xlat
inc
and
shr
loope
cmp
add
jge
lods
aad
dec
add
in
std
push
sahf
in
imul
pop
outsl
hlt
popf
push
addr16
or
push
out
xlat
pop
and
lock
iret
jp
jmp
sbb
xchg
jne
pusha
pop
int
outsb
adc
xchg
int
loopne
btr
or
sbbl
popa
jg
sti
dec
test
aaa
fstps
xchg
and
mov
push
jb
cmp
into
push
into
mov
xor
fs
aas
mov
mov
adc
xchg
add
ficoml
inc
add
xchg
cmp
imul
roll
pushw
pop
lods
pminsw
dec
xchg
popa
mov
sbb
ja
sub
sbb
jnp
add
js
aad
out
pop
lret
adc
pop
lahf
mov
xor
dec
adc
inc
push
rcr
in
mov
jo
out
dec
in
fiadds
popa
lock
nop
inc
mov
call
jecxz
icebp
sub
sub
xchg
push
xchg
inc
ds
inc
ret
das
inc
xor
lret
popf
jne
lret
cmpsb
stos
je
test
ss
shr
dec
inc
jb
cmp
es
push
jne
sub
data16
and
push
sub
sbb
sti
fcmove
iret
mov
push
test
add
shr
pop
clc
inc
fimuls
xchg
push
in
cmp
test
ds
int
inc
sub
cwtl
lret
xor
je
and
push
cmpsl
ds
iret
into
jnp
test
push
jmp
test
xorl
xchg
pop
push
push
ljmp
pop
mov
das
jle
test
into
fistps
dec
dec
lods
xchg
and
out
inc
ds
add
inc
outsb
add
jo
loopne
loop
int3
aas
lods
ficomps
aam
sub
hlt
dec
push
sub
in
jge
jmp
adc
mov
mov
mov
cltd
shlb
ficoms
cwtl
cltd
lret
pushl
mov
test
adc
subl
and
popa
ljmp
mov
ret
jnp
and
andb
call
jns
arpl
shrl
adc
adcl
mov
jno
inc
lcall
pop
into
ja
xor
mov
aam
pushf
ja
inc
pop
loopne
fldcw
cmp
jl
push
sub
ficoms
mov
push
lods
pop
aam
jp
out
push
dec
movsl
cmp
mov
mov
test
sbb
pop
dec
out
jle
sbb
xchg
add
lds
cmp
addr16
cwtl
cmp
push
iret
xchg
jg
lods
dec
push
fdivrs
clc
inc
sbb
adc
arpl
mov
mov
dec
jno
daa
movsl
inc
call
xchg
jmp
or
nop
movsb
xor
ljmp
jbe
mov
dec
aad
xor
xor
fdivrl
dec
sbb
ret
pop
into
pop
sub
movsb
call
jns
lret
and
cmp
clc
adcb
lret
xchg
fmuls
pushl
pushl
mov
xor
cmp
jae
repz
xchg
popf
dec
and
fsubs
idivl
es
cwtl
loopne
into
and
movsl
sub
mov
or
dec
decl
fsubrs
or
xor
imul
pop
adc
out
or
xchg
pop
ret
cwtl
dec
mov
icebp
mov
xchg
cmp
scas
lret
mov
lods
aaa
sbb
movsb
jae
jnp
in
addr16
inc
aad
out
jmp
dec
jg
push
jmp
lea
jl
mov
aas
in
orb
repz
out
mov
or
sbb
mov
imul
popf
fs
sbbb
push
inc
sarb
fwait
jns
add
xchg
shll
sub
mov
imul
inc
leave
xchg
ljmp
and
cmp
ja
rorl
enter
xlat
test
sbb
cmc
pop
movsl
pop
es
pop
jbe
repz
push
xor
cmp
sbb
mov
mov
shll
xor
les
xor
shl
cmp
dec
sub
push
jmp
sbb
xlat
cwtl
cmp
sbb
inc
push
xchg
outsl
or
inc
or
mov
insl
adc
jl
out
test
jl
add
push
fwait
add
in
out
xchg
cs
outsb
sbb
push
lods
cwtl
cmp
fldcw
cmp
lret
xchg
dec
or
hlt
mov
jno
movsl
add
inc
repnz
xlat
mov
cmp
test
stos
rcrl
fdivr
mov
fbstp
dec
arpl
stos
repnz
cmp
push
mov
cld
lahf
cmp
mov
mov
jno
fidivrs
enter
int
or
scas
push
jo
cwtl
fstpl
imul
insb
loop
andl
dec
mov
add
jge
repnz
pop
push
xor
scas
mov
jae
cltd
pop
lods
push
jns
mov
jecxz
test
das
fsubs
xchg
xchg
popa
out
push
dec
pop
xor
xchg
xchg
push
lods
test
inc
sahf
push
jnp
stos
mov
pop
mov
cltd
divl
jo
or
cli
or
push
fcoml
test
xor
add
outsb
jg
scas
mov
jo
lods
and
shll
bound
pushw
jge
push
mov
or
das
mov
jae
and
cltd
inc
fdiv
out
or
pop
shl
daa
cmpb
pop
push
add
fs
insl
dec
out
and
mov
jo
sbb
dec
in
je
mov
cmpsl
addl
mov
inc
mov
ss
push
jmp
repnz
insl
push
shrl
loop
in
pop
mov
fistl
adc
xchg
orb
lea
sub
rcll
inc
sbb
scas
sbb
cmp
dec
sbb
cmp
adc
mov
in
jne
pop
cwtl
dec
je
cs
cmp
scas
lret
mov
mov
leave
idivb
xchg
xor
jge
std
js
xchg
lods
mov
testb
enter
out
or
push
test
cmc
sub
data16
pop
test
xor
std
sub
push
mov
add
imul
jno
out
pop
fstpl
or
data16
sbb
dec
and
imul
mov
or
jne
movsb
movsb
sbb
mov
lret
sbb
pop
lret
push
dec
ss
dec
and
movsl
movq
pop
js
mov
cmp
xor
adc
push
push
stc
push
scas
sub
call
mov
and
lods
xchg
into
mov
adc
int
leave
lods
mov
jp
ja
pop
call
pop
aaa
int3
mov
icebp
hlt
out
pop
sub
out
mov
mov
loopne
sub
push
aad
div
jg
push
xchg
fucom
cmp
lock
push
cmp
in
cmp
push
addr16
test
cmpsl
or
push
shlb
jp,pn
mov
popa
and
mov
sub
cmc
pop
or
in
outsl
cmpsb
aas
jle
mov
xlat
sub
cmp
lods
xchg
stos
out
pop
or
testl
cmp
aad
mov
push
xchg
loopne
jbe
jne
imul
cmp
outsb
clc
and
sub
push
lea
jnp
pusha
rclb
insl
and
outsb
xchg
jecxz
mov
xchg
ret
mov
popf
or
bound
inc
je
mov
jl
cltd
into
xlat
jg
and
mov
int
mov
pop
sbb
dec
ficompl
sub
rcr
ret
push
bswap
sbb
sbb
push
xchg
cld
hlt
fmull
jne
mov
jbe
jl
test
stc
or
pop
xchg
imul
or
arpl
xor
inc
movsl
roll
aas
scas
mov
repnz
gs
nop
dec
cmp
jge
cwtl
popa
inc
mov
out
jns
xor
jnp
add
ljmp
xchg
adc
xchg
xor
lahf
mov
pop
mov
add
mov
add
or
mov
cld
icebp
les
fstl
ds
sub
inc
dec
xchg
int
icebp
cmp
shll
jl
lea
and
out
sub
scas
sub
or
jmp
in
in
data16
and
add
push
push
cltd
leave
jnp
enter
push
mov
mov
inc
pop
stos
sub
dec
lret
je
scas
fcoms
lahf
xchg
sub
mov
ss
cmp
pop
out
mov
sbb
es
mov
or
movsb
cld
sbb
test
adc
pop
and
decl
inc
dec
push
dec
mov
fstpl
mov
je
scas
jg
jg
push
xchg
push
enter
cli
xchg
and
es
out
fwait
add
les
pop
xchg
inc
repz
jb
idivb
hlt
loope
les
dec
pop
xor
mov
mov
ret
ret
xchg
jmp
rclb
pop
test
fwait
cld
jl
xor
mov
insl
add
fs
mov
imul
mov
inc
xchg
jmp
xchg
inc
dec
pop
mov
les
pushf
aad
hlt
fistl
cmp
int
sub
popf
jns
xchg
nop
hlt
lock
bound
arpl
inc
mov
in
data16
adc
sub
aas
sub
jl
sti
sub
cli
sub
lcall
push
cmp
into
or
popf
test
pop
icebp
xor
fxch
push
jns
imul
insb
icebp
sub
mov
out
je
ljmp
lret
adc
or
and
ja
mov
pusha
xchg
nop
das
add
mov
push
cltd
or
sub
out
enter
test
xor
pop
cmp
sbb
mov
cmpsb
ds
pop
push
mov
mov
scas
inc
xchg
sbb
aam
xchg
cmp
rolb
mov
or
rcll
inc
xchg
adc
inc
inc
rclb
and
into
bound
inc
xchg
pop
out
jno
ret
jle
mov
inc
stc
ds
mov
inc
daa
shl
mov
or
movsl
in
push
in
sub
int3
sahf
cmpsl
repnz
xor
mov
dec
arpl
pop
pop
pop
icebp
mov
sarl
jae
add
mov
or
imul
test
fdiv
and
stc
cmp
pusha
pop
cmp
lods
div
out
negl
daa
pop
xchg
adc
add
outsl
int
push
mov
js
andl
and
or
inc
mov
or
out
movl
jno
mov
ret
dec
scas
cmpb
dec
inc
dec
jp
mov
fsubrs
je
lods
xchg
mov
cmp
icebp
pop
mov
bound
int3
fs
xchg
lret
pop
hlt
mov
leave
xor
enter
xchg
xchg
imul
test
sbb
cltd
xlat
aas
sub
cmc
mov
cmp
mov
insl
lahf
dec
sbb
ret
cmp
stc
and
push
fwait
mov
sti
cltd
push
sub
mov
lahf
test
mov
iret
mov
gs
fisttpll
std
push
jmp
jns
sbb
and
adc
enter
test
call
jp
mov
maskmovq
imull
pop
sahf
mov
sbb
movl
xchg
xor
mov
subb
pop
add
nop
aaa
add
hlt
inc
js
xor
dec
movsl
loopne
xchg
cmp
ret
sub
addr16
push
cmc
scas
mov
clc
sub
push
push
inc
cli
jb
mov
popf
dec
push
add
outsl
lahf
jo
ss
outsl
aad
rcrb
mov
call
ss
jns
adc
scas
nop
ja
aam
dec
out
cmp
mov
sbb
adc
dec
je
push
cmp
outsl
jl
dec
adc
adc
jge
movsl
aam
jne
fiaddl
pusha
stos
mov
out
lcall
sbb
sbb
adc
mov
mov
test
out
jle
xlat
dec
daa
xor
jo
arpl
add
mov
pop
sub
mov
or
sarb
mov
adc
arpl
outsl
movsl
cli
sub
movsb
sbb
cmpsb
lcall
ds
or
cmp
enter
add
and
in
ja
jmp
sbb
aaa
es
faddl
xchg
fstpl
and
push
mov
xchg
pop
push
out
pop
or
lret
or
cmp
sub
movsl
xchg
push
cs
or
mull
fidivrl
pop
popa
xchg
adc
fldl
mov
xchg
test
add
cmp
adc
jno
outsl
mov
daa
xor
or
dec
mov
jecxz
push
jb
dec
mov
call
xchg
jg
jecxz
xchg
adc
movb
jle
xor
adc
jne
aad
mov
mov
out
cmpsl
add
loope
xchg
push
scas
das
lcall
ret
cmp
adc
mov
and
leave
mov
imul
add
mov
cwtl
into
sub
inc
ja
sti
rolb
jg
inc
inc
popl
cmp
mov
or
mov
or
fwait
xchg
jbe
jge
lea
fwait
inc
sbb
push
or
ss
ret
adc
sub
xor
mov
rcrb
ficompl
push
inc
jnp
and
jge
lods
pop
call
fnstenv
inc
sarb
cmc
iret
dec
or
mov
insl
test
mov
pop
push
fmul
dec
loopne
ror
bound
bt
into
clc
jne
and
movsl
push
vmovntps
add
lods
jb
inc
fs
sub
out
pushf
das
jmp
and
adc
fld1
pop
out
les
out
repz
ljmp
mov
and
aas
enter
stc
lods
dec
mov
jge
push
xchg
mov
add
dec
jl
jmp
mov
and
jne
push
frstor
push
add
loopne
inc
dec
add
test
xlat
es
inc
push
or
in
jmp
cmp
adc
mov
and
daa
stos
dec
cld
xchg
aam
stos
cmp
adc
ja
cmp
mov
cld
pushf
aaa
mov
cld
lods
xlat
mov
mov
sub
iret
push
rolb
mov
fdivs
jecxz
pop
push
push
out
mov
pop
aaa
jnp
pop
mov
hlt
xlat
adc
mov
push
sub
sub
repnz
mov
add
sub
sbb
push
das
dec
mov
test
mov
jle
mov
js
pop
cmp
stc
jbe
fdivl
int3
frstor
jmp
pop
jbe
loopne
scas
sub
mov
push
insl
cs
cmc
inc
repz
xor
or
cmp
pop
fidivl
es
fcoml
inc
mov
and
in
inc
xor
cmpsl
xchg
enter
mov
sahf
gs
fisubrl
mov
dec
out
mov
stos
xchg
mov
adc
dec
cmp
jbe
icebp
inc
adc
jecxz
negl
shl
inc
inc
push
jl
jg
sbb
lret
mov
jne
push
and
xchg
adc
xchg
or
lds
rcrl
lret
call
insl
sub
in
mov
xchg
cmp
or
dec
add
test
jae
and
dec
popf
mov
sbb
shrb
push
cmp
xor
lahf
mov
lea
mov
ss
xchg
sahf
dec
cmpsl
cld
lahf
or
fimuls
inc
add
mov
or
scas
mov
dec
daa
inc
arpl
cmpsb
leave
lret
fbstp
clc
ljmp
mov
imul
or
cmpsb
xchg
cmp
in
add
or
fists
fildl
test
dec
adc
add
or
jge
xchg
pop
gs
mov
pop
sub
sbb
add
dec
rcrl
push
andl
dec
fldenv
adc
inc
inc
les
ficomps
fidivrs
bound
push
adc
repz
sarb
cmp
in
pop
inc
std
sbb
out
mov
loope
sbb
rcll
test
out
dec
add
push
xor
and
aaa
pop
sbb
rol
out
add
add
insl
mov
insb
adc
xor
lock
ss
pop
jmp
les
mov
dec
leave
gs
rcrl
xchg
mov
pop
in
fmuls
cwtl
sub
stos
dec
mov
jecxz
int3
push
test
fwait
leave
inc
fnstsw
loopne
pop
outsl
adc
loope
jl
test
sahf
fs
mov
push
sub
jb
or
mov
pop
ss
test
shr
test
add
fidivl
insl
mov
push
daa
mov
aas
jl
popa
mov
sbb
or
icebp
cmpsb
dec
pop
lods
cld
dec
mov
lds
mov
in
and
lods
adc
mov
sti
hlt
aas
dec
adc
mov
xchg
inc
mov
in
push
mov
dec
mov
mov
push
dec
repnz
xor
ja
popf
lock
repz
stos
sbb
out
dec
sub
fdivl
and
push
dec
adc
mov
mov
jmp
adc
out
out
cli
jg
sub
add
sbb
push
ds
and
jbe
fldenv
out
pop
test
mov
fsubs
push
insb
movsl
adc
and
jge
jbe
das
jb
test
testl
jge
aas
stos
mov
cmp
sti
or
pop
or
rol
leave
jae
push
pop
int
push
nop
and
add
inc
jl
mov
xor
or
jg
fnstcw
ljmp
popa
test
or
mov
jae
sbb
jmp
inc
dec
sbb
cmp
push
pushf
xchg
orl
incb
arpl
push
pop
int3
xchg
call
cmc
xchg
jb
int3
sbb
out
dec
cmpsb
pop
dec
jecxz
mov
jp
sub
dec
and
sub
cmp
push
dec
into
push
inc
pushf
pop
jp
adc
test
popf
xchg
std
xor
mov
ficomps
and
icebp
push
sbb
outsl
mov
and
lds
movsl
mov
aad
lea
and
fimull
ficoms
lock
loopne
add
addr16
xchg
fdivrs
adc
xchg
mov
mov
and
int3
mov
xor
pop
test
inc
adc
daa
test
stos
jp
jae
jo
sbbl
clc
imull
push
add
ret
adc
mov
adc
mov
jbe,pt
addb
and
jmp
and
dec
stos
shlb
aaa
sub
add
mov
push
je
test
or
cmp
roll
dec
mov
rolb
loopne
mov
out
xor
sub
cwtl
shl
mov
popf
xor
dec
push
push
dec
loop
mov
adc
andb
mov
inc
push
idiv
jbe
sbbl
inc
scas
lcall
adc
push
push
iret
data16
insl
aaa
popa
aam
adc
call
pop
and
dec
mov
xor
mov
jo
arpl
nop
daa
enter
mov
xor
in
add
add
adc
dec
cld
rorb
mov
inc
shll
js
push
repnz
mov
push
les
mov
insb
lock
push
dec
cmp
jg
sbb
insl
push
movsb
xor
sub
push
add
mov
inc
loop
cmpl
out
insb
inc
xchg
jnp
sti
in
jb
xor
mov
bound
in
scas
test
pop
push
xlat
pop
push
pusha
inc
test
or
setle
push
xor
into
jp
mov
inc
cwtl
push
jae
sub
repz
push
xor
jne
inc
or
push
or
cmp
mov
insb
inc
div
or
insl
mov
popf
fwait
loop
ljmp
into
push
adc
mov
mov
push
jmp
push
jnp
insb
push
idivb
push
scas
cltd
mov
and
pop
clc
stos
xor
outsb
xchg
aam
shll
pop
xchg
sbb
xorb
mov
cmp
dec
xor
icebp
sbb
dec
mov
jae
test
daa
adc
dec
push
test
cmp
aas
nop
imul
movsl
pop
cmpl
nop/reserved
int
sti
repz
mov
push
int
stos
outsb
fadd
pushf
xchg
push
testl
mov
icebp
xchg
adc
lock
push
sarb
fucom
in
mov
adcb
scas
in
out
outsl
push
punpcklbw
imul
dec
or
mov
lods
sahf
sahf
mov
adc
cwtl
mov
adc
lock
insb
adc
adc
xchg
out
jg
or
and
stos
dec
mov
push
adcl
rcrb
mov
addr16
scas
mov
mov
sarl
mov
dec
add
push
out
xchg
adcb
jo
loopne
push
xor
jmp
dec
sub
adc
add
repz
xor
push
cltd
inc
scas
mov
jae
sub
push
inc
mov
cwtl
xor
push
xchg
and
imul
stc
jg
mov
hlt
sub
xor
add
cmp
xor
jecxz
sub
sub
mov
stc
ljmp
test
dec
cmp
sbb
xor
sahf
leave
cmpsl
xchg
clc
sbb
mov
mov
int3
mov
sahf
iret
scas
mov
push
shlb
shll
popf
sub
mov
sbb
push
mov
xlat
inc
shl
or
mov
xor
jne
loope
inc
push
dec
push
xlat
cmp
lds
add
adc
dec
aaa
das
mov
lock
cmc
adc
es
out
clc
test
or
or
jge
xchg
mov
test
int3
jnp
in
lcall
jbe
loop
xchg
out
enter
mov
mov
fisubrl
xor
jl
stos
inc
and
mov
add
adc
cwtl
test
aam
pop
mov
xorb
les
je
add
push
cmp
aad
add
xchg
mov
mov
lcall
mov
dec
pop
mov
mov
rorb
xor
gs
adc
cmp
imul
pop
adc
jmp
out
mov
ror
inc
out
xor
dec
or
jne
int3
mov
xor
push
sub
jne
sbb
dec
js
jecxz
jb
sar
fsubr
js
sahf
jmp
pop
lods
lods
inc
xchg
jns
and
aad
mov
rclb
inc
jns
ret
adc
adc
add
inc
dec
pop
mov
dec
stos
mov
sub
mov
rolb
cmp
xor
sub
add
pop
mov
outsb
push
push
movsl
xor
push
pop
icebp
scas
lds
jo
cld
js
cltd
in
lcall
jo
data16
movb
mov
pop
mov
in
popa
repz
jnp
sub
mov
ljmp
or
ret
mov
arpl
xchg
sbb
mov
repz
sbb
addr16
scas
fnstsw
xor
jle
jl
xchg
sahf
xchg
dec
gs
jle
rcrl
stos
out
outsb
mov
mov
or
int3
icebp
enter
push
fmulp
rcrl
pop
cmpsb
addr16
adc
or
cmp
fwait
or
or
ret
pop
cmp
sbb
stc
adc
mov
inc
daa
in
lods
cmpsl
sbb
and
mov
dec
cmp
mov
push
inc
jb
rcl
gs
adc
cmpsl
int
mov
fsubs
jge
mov
push
pop
loopne
cli
lea
and
cmpsl
les
ja
cli
ds
pop
ss
mul
lret
mov
aam
jne
cli
mov
cmp
and
call
aas
imul
pop
and
xchg
xchg
int3
js
cwtl
xchg
cld
aas
and
cmp
les
sub
xor
adc
inc
ja
push
mov
imul
filds
fisttps
imul
pop
call
iret
in
jnp
xor
fcomps
movsb
test
in
test
sub
lahf
sahf
cmp
gs
dec
repz
fldpi
cmp
ret
ljmp
jo
adc
push
pusha
mov
push
mov
icebp
mov
fistpl
mov
in
hlt
cmp
jge
jne
pop
dec
xor
adc
mov
subb
push
ljmp
int3
aam
sti
int
mov
adc
gs
je
jmp
ficoml
insl
cmpsl
cwtl
cmp
fwait
or
call
cs
hlt
and
imul
sub
mov
scas
into
and
mov
into
into
addr16
push
dec
cld
stos
test
repz
ljmp
add
jbe
aas
xchg
or
pushf
xchg
or
andnps
mov
aas
imulb
adc
xor
das
bound
lahf
pusha
pop
push
xchg
adc
mov
mov
xor
mov
dec
ja
scas
xor
xorl
dec
rorb
add
sbb
leave
cld
mov
cmpsb
xchg
fsubr
add
and
add
push
adc
jno
addb
jmp
aaa
sbb
cmpsl
or
pop
test
inc
pop
push
push
mov
add
movsb
inc
subb
ret
insb
inc
push
xchg
cmc
mov
sbb
pop
aam
mov
popa
ss
in
xor
push
push
dec
test
adc
and
aaa
popa
sub
lahf
add
out
dec
inc
or
cmp
in
inc
movsb
add
jmp
add
inc
xor
cld
pop
sti
pop
ja
lea
add
in
leave
xchg
outsl
xchg
rclb
scas
shrb
jl
test
sub
subl
cli
pop
sbb
or
ss
jb
push
or
pop
aaa
jecxz
push
push
aaa
inc
jge
jno
cmp
dec
cmpl
mov
sbb
cmpl
xor
ljmp
insl
or
pop
notb
push
push
xor
add
in
jge
int3
popl
je
out
std
add
in
jno
movsl
jmp
int
fcompl
inc
or
pop
xchg
jge
mov
sahf
lahf
push
mov
inc
or
int3
sbb
mov
roll
cmp
inc
add
shrb
iret
cmp
stos
ja
dec
and
push
out
adc
cld
mov
fs
xor
insb
aam
mov
jns
mov
dec
inc
adc
std
movsb
cli
in
cmc
bound
fidivrs
lahf
std
lahf
adc
fidivl
pop
mov
lods
sbb
cmp
mov
aam
mov
push
inc
lahf
and
filds
inc
roll
jnp
push
movsb
mov
out
and
pop
cmc
jne
sti
sbb
std
fdiv
arpl
pop
jp
xorb
sarb
fs
or
jno
stos
cmp
add
lcall
lret
leave
mov
mov
jo
push
xchg
xchg
adc
jge
jp
jg
cmp
lods
fs
mov
xlat
mov
cmpsb
cli
mov
xorl
pmullw
inc
jno
dec
in
jl
inc
cli
mov
or
nop
enter
inc
popa
nop
push
xor
jno
loop
jns
in
or
das
add
push
cli
jge
pushf
dec
fmulp
mov
mov
ds
stos
out
or
sub
or
mov
push
inc
sub
fsubr
scas
insb
push
xor
adc
or
xor
imul
loop
movsl
ljmp
stc
iret
lock
sub
fcoml
jmp
outsb
push
int3
push
mov
mov
mov
and
ret
das
outsb
or
dec
mov
testl
push
cmp
outsb
jne
pushf
shlb
test
mov
sub
aas
dec
clc
jp
mov
pop
dec
add
stos
addl
addr16
lds
lock
aam
jle
jl
sbb
int
ds
jo
lock
repz
cwtl
out
xor
mov
jl
leave
mov
xchg
sbb
and
mov
sbb
stos
pop
icebp
dec
insl
push
pusha
shlb
or
jno
xchg
call
out
shr
xor
inc
lds
out
xchg
inc
pop
repz
imul
and
sub
lcall
pop
cmpsl
pop
cwtl
xor
adc
inc
add
jmp
mov
aad
in
jp
shlb
jge
std
clc
in
les
mov
jmp
or
cltd
aas
xor
and
mov
lahf
pop
ret
adc
popl
push
aaa
xchg
mov
pop
lock
lock
daa
lock
mov
jno
cld
jg
imul
dec
push
iret
inc
xchg
cwtl
fistl
int3
dec
aam
mov
xchg
insb
inc
and
rcrb
sarb
cld
pushf
and
or
movsl
jno
jl
clc
es
inc
mov
mov
mov
rcl
push
sub
cs
stos
sbb
add
cmp
jecxz
movsb
push
mov
fwait
pop
ss
jecxz
aas
add
lcall
or
push
ficompl
shl
dec
faddl
cltd
scas
mov
rolb
bound
and
rorb
fisubs
xchg
jbe,pn
jecxz,pt
push
into
push
mov
mov
lea
fistps
sbb
mov
xor
sub
scas
lret
adc
mov
cwtl
fcmovne
and
adc
cmpsl
int
add
or
mov
in
or
jmp
test
sahf
mov
sti
and
xchg
leave
push
or
repz
in
dec
xchg
xchg
xchg
mov
jge
dec
jb
xchg
xlat
adc
xchg
jnp
jle
cmp
mov
mov
lahf
and
mov
movsb
adc
outsl
sub
adc
subb
mov
mov
dec
shrl
jns
sbb
fbstp
push
mov
push
shr
jmp
xor
push
int
inc
push
lods
ret
xor
sahf
and
nop
movups
mov
sbb
jae
adc
pop
cwtl
mov
pop
orb
inc
test
xchg
xchg
mov
int
inc
pop
add
and
jns
pop
add
dec
punpcklwd
pop
add
and
mov
xor
mov
enter
loope
cld
lahf
pop
cmp
cmp
pop
test
jns
push
mov
push
cmc
in
adc
data16
and
pop
ljmp
push
jnp
sub
sub
lea
nop
sub
inc
lahf
in
cmc
add
hlt
cmp
stos
outsb
sti
jbe
pop
push
jecxz
out
je
push
sbbb
fwait
es
xchg
adc
pop
jo
pop
ss
mov
fxch
jle
sbb
dec
add
inc
pop
add
ret
push
push
or
pop
or
outsl
push
outsb
mov
xchg
mov
roll
repnz
mov
xchg
icebp
lahf
js
sysenter
jg
jae
or
dec
cltd
inc
add
lock
fs
test
movl
in
cmp
inc
mov
loope
mov
in
out
sbb
mov
mov
sbb
dec
push
into
pop
sbbb
mov
cmp
add
loope,pn
enter
or
ret
add
inc
push
adc
fmulp
movsl
mov
mov
fs
add
sbb
pop
dec
xor
sbb
pop
gs
sbb
scas
repnz
cmp
cmp
adc
and
arpl
aaa
pop
or
insl
mov
out
cmpsb
xchg
in
push
dec
clc
mov
stc
or
cmc
jle
movsl
add
lahf
in
pop
push
jecxz
jl
jmp
and
xor
inc
clc
dec
arpl
mov
ret
pop
dec
pop
imul
mov
sbb
rclb
dec
stc
subl
pop
rcrl
fisttps
leave
or
jnp
cmpsl
push
mov
cld
in
cltd
aad
cmp
lret
pop
cmp
jecxz
int3
push
stc
xchg
jno
inc
popf
adc
add
adc
pop
mov
lcall
mov
clc
hlt
js
in
out
jl
jnp
push
inc
out
fildl
ja
mov
sbb
push
iret
pop
and
shr
out
aas
mov
jne
push
fwait
and
mov
inc
ss
leave
jns
imul
les
jne
jnp
xchg
add
movsb
insl
or
stos
cmp
sbb
sub
movb
rcll
iret
test
or
mov
bswap
movsl
jns
adc
mov
adc
jno
fbstp
int
mov
push
mov
rcrl
mov
or
iret
popf
ja
int
pop
sbb
mov
or
lret
outsb
stos
inc
push
rclb
insl
sbb
jle
out
mov
mov
roll
stos
daa
xchg
out
add
addl
push
push
adc
pop
sub
popa
out
inc
mov
fistpl
or
sub
cmp
ret
fdivr
es
stc
pusha
mov
out
add
pop
mov
fidivl
push
and
xorb
ljmp
es
sbb
stos
xchg
jno
pop
push
or
xchg
cmovb
out
add
xor
push
xchg
out
sbb
in
lock
in
cmp
lea
xor
and
loop
jb
adc
cmp
push
dec
pop
idiv
mov
loop,pn
mov
movsl
addr16
addr16
dec
orb
movsl
mov
pop
lret
repnz
lods
cmc
cltd
icebp
and
push
inc
fstpl
int3
fsubrl
sub
cltd
mov
mov
dec
std
das
imul
sahf
imulb
lcall
inc
and
xchg
arpl
repnz
notb
scas
dec
push
fnstcw
mov
jbe
mov
sbb
jg
clc
cli
imul
leave
cmp
fmuls
push
adc
fsubrp
movsb
adc
sbb
or
in
cld
mov
ja
je
pushf
repnz
aaa
iret
add
push
and
divb
lret
enter
test
dec
pop
mov
sub
sbb
xchg
cwtl
dec
xchg
imul
ret
mov
mov
jge
push
inc
ja
shll
mov
cmpsb
repnz
enter
jl
cli
pop
mov
inc
subb
pop
fcmovne
sbb
sarb
bound
gs
mov
sub
inc
mov
add
mov
in
aad
insb
mov
or
inc
mov
orl
loopne
sbb
mov
mov
mov
int3
sub
aad
mov
mov
scas
jb
mov
cwtl
pop
push
imul
sti
call
mov
inc
in
cmp
xchg
sbb
insb
popa
sbb
jns
sbb
lods
test
sti
sub
mov
test
pmaddwd
jbe
fldl
mov
mov
aaa
or
push
adc
data16
cmp
test
ret
cmp
call
cli
xchg
mov
fs
stc
jmp
stos
lock
push
mov
rcr
and
and
clc
xchg
xor
test
jno
addr16
test
xor
jnp
or
arpl
cmp
cmc
lods
out
push
mov
dec
lea
push
mov
and
notl
pop
inc
jo
xchg
sarb
insl
or
dec
shrb
scas
add
mov
mov
jg
mov
jno
gs
push
push
lahf
call
js
xchg
mov
test
jnp
in
xchg
lds
lods
outsl
jae
in
leave
xor
inc
inc
aas
sahf
add
jno
xor
jecxz
mov
stos
stos
lea
pop
jne
scas
mov
sbb
and
nop
mov
jmp
int
popa
cli
or
mov
std
or
cmp
arpl
call
push
movsl
mov
pop
jbe
adc
into
dec
inc
fwait
lahf
jne
rolb
fcmovnbe
cmp
rcrb
add
adc
cmp
inc
or
fsubrs
xor
rcrl
and
push
mov
dec
add
or
or
jmp
or
aam
pop
mov
xor
pop
push
insl
adc
ss
cli
add
aam
mov
sub
ljmp
dec
enter
pop
repnz
ja
out
push
jo
test
inc
popa
jmp
insl
or
dec
inc
sti
test
mov
gs
sbb
inc
sub
or
gs
ss
sub
xchg
jmp
daa
dec
test
lret
dec
sub
lods
xor
adc
cmpsl
xor
nop
add
pusha
fildll
sbb
pusha
jg
adc
insb
xor
or
inc
mov
xchg
dec
out
mov
rcll
rcr
jge
cli
ret
push
enter
mov
je
mov
sub
ds
xor
stos
cld
out
pop
pop
out
mov
or
sbb
out
sub
lock
cmp
rclb
adc
pop
aas
xor
xchg
mov
popa
pop
sbb
jb
incl
ret
cltd
cltd
out
push
out
pop
jne
pushf
jnp
out
or
fldpi
jne
mov
mov
jle
and
inc
cs
jl
data16
adc
outsb
dec
in
pushf
pop
cmc
out
cmp
cmc
add
jnp
sub
sbb
add
hlt
pusha
lock
shl
outsb
sbb
test
mov
fstl
aas
out
dec
mov
push
mov
ror
pushf
sub
adc
in
jl
and
lret
sahf
fimuls
jecxz
dec
push
fildl
xlat
divb
push
sti
add
jmp
out
outsl
repnz
pop
sbb
mov
in
and
sbb
fcmovb
into
xchg
orl
jmp
mov
ja
ror
loopne
push
sti
push
xlat
xor
pushf
out
imul
pop
dec
fs
test
dec
mov
mov
enter
testb
mov
xchg
jae
or
scas
lcall
mov
and
scas
lcall
iret
mov
or
jmp
push
sahf
xchg
xchg
mov
jbe
mov
repz
lock
jae
adcb
icebp
xchg
lds
jae
mov
dec
test
inc
not
dec
jmp
dec
lea
cmp
inc
sbb
jmp
or
shrl
ret
ret
frstor
sub
sbb
xlat
inc
xchg
xorb
movsb
mov
push
rcl
pop
jmp
loope
pop
pop
push
jl
mov
cmp
add
idivl
mov
in
mov
imul
jle
push
movsb
cmp
jmp
sbb
fsubl
push
mov
cwtl
add
sub
in
jns
and
or
sbb
test
xchg
lret
pushf
shll
pop
in
or
mov
call
test
ja
mov
pop
jae
push
les
inc
out
hlt
mov
push
jae
psubd
push
ret
inc
cmpsb
add
cmc
iret
mov
pop
sub
pop
mov
pop
inc
or
inc
cld
roll
fistpll
jecxz
adc
push
out
xlat
leave
fcomi
lods
lret
call
adc
add
or
fistps
lds
daa
lock
cmp
mov
outsl
addb
cmp
or
jge
loopne
cmp
repnz
inc
pop
cmp
fbld
mov
and
or
ret
inc
popa
xchg
cmpl
imul
aam
out
mov
pushf
cmp
cmp
jle
lods
fmuls
cmpsb
jne
mov
cmc
pop
out
movsb
mov
sbbb
mov
inc
ret
xchg
cld
movsl
outsl
arpl
push
and
mov
cmp
lds
jl
aad
pop
push
rcr
push
ret
and
cmpsl
aam
loop
in
adc
jnp
xor
fisttpl
pop
lods
add
std
inc
inc
movsb
push
daa
lock
push
sahf
mov
loop
mov
enter
mov
dec
stos
cld
dec
fstl
fsubrs
outsb
fdivrl
cwtl
jne
push
ss
outsl
hlt
cmp
xor
icebp
insb
push
scas
daa
out
inc
pop
dec
mov
mov
lock
and
sqrtps
sahf
ja
pushf
cmp
inc
fsubrl
outsl
repnz
stos
addr16
push
test
sub
nop
test
dec
inc
inc
movsl
jmp
fistps
dec
cmpsl
fdivrs
addb
and
pop
lods
imul
mov
inc
mov
gs
js
sbb
popf
dec
xchg
inc
mov
fcomps
or
test
cmp
jns
adc
insl
pop
call
xchg
dec
lea
lds
add
testb
mov
add
outsl
pop
add
add
jbe
adc
jo
in
fldl
push
aam
andb
inc
sub
sti
inc
testb
pop
popa
insl
sub
xchg
add
inc
or
subb
loop
cmp
out
out
cmpsl
inc
push
lock
inc
stos
ljmp
mov
repnz
and
das
jmp
clc
gs
xor
push
push
mov
jae
sub
popa
jo
aad
mov
lret
das
mov
mov
mov
dec
mov
pop
xchg
sbb
cmp
jle
xchg
pop
adc
xchg
dec
mov
adcb
into
or
fcmovu
pop
inc
or
dec
xor
cmp
in
lahf
inc
pop
pop
xchg
jb
loopne
mov
mov
lmsw
inc
jecxz
int3
mov
jmp
and
ds
orb
lock
out
lock
loope
xchg
test
ja
loope
test
popf
loopne
add
imul
inc
inc
sub
mov
lock
daa
sbb
icebp
dec
mov
out
push
repz
in
inc
lcall
inc
and
fs
movsb
sub
cmpsb
je
mov
adc
or
push
in
icebp
push
inc
and
jno
push
call
jecxz
insb
sub
adc
test
data16
iret
push
ficompl
enter
or
pop
gs
mov
dec
addr16
cmp
sub
and
clc
adc
mov
cld
add
or
jb
outsl
push
jne
scas
xor
add
inc
hlt
or
sar
mov
orw
or
int3
add
push
pop
mov
xor
mov
ret
sbb
aaa
inc
sub
in
jmp
xor
dec
dec
xor
inc
aam
or
fdivrp
sbb
push
jns
xchg
sti
sbb
adc
pop
or
int3
popf
lahf
popf
adc
das
inc
mov
loope
fwait
in
xchg
cmp
out
xchg
ss
cmp
or
stc
pop
jl
push
mov
sbb
aad
in
add
sub
push
lods
outsb
movaps
in
cmp
dec
inc
cmpsl
push
lods
cmp
push
dec
inc
mov
test
cmp
push
in
and
or
and
jl
inc
mov
and
pop
sub
inc
and
cmp
lret
mov
pop
stc
jb
arpl
and
call
jg
push
rolb
in
cmpsl
movsb
lods
mov
xor
or
mov
mov
adc
jnp
mov
mov
outsb
insb
pop
enter
mov
std
mov
das
mov
add
mov
call
add
xlat
outsb
cmpsl
lahf
int
xor
jp
in
mov
test
int
mov
imul
int3
stc
bound
adc
fwait
mov
dec
push
inc
cmp
aaa
xchg
filds
jl
adc
aaa
push
add
push
inc
jmp
jmp
lock
jae
rcll
cmpb
xor
dec
aaa
mov
testb
add
ljmp
xor
popf
lods
cltd
cmc
push
imul
fstpt
int3
sbb
mov
dec
hlt
popa
fmuls
add
sub
insl
pushf
lret
add
repnz
mov
and
ljmp
fists
mov
sbb
jp
test
cmpsl
mov
adc
or
sti
fs
call
pop
sub
inc
rcll
mov
xor
aaa
xor
add
sub
cmp
add
cli
cmp
pop
xchg
dec
dec
pop
jns
arpl
cmp
insl
mov
aaa
mov
addr16
movsb
and
lods
add
xchg
mov
aas
push
ja
sbb
scas
insl
jno
outsl
sub
sub
mov
push
mov
push
mov
lcall
xchg
loop
ret
popa
jg
mov
xchg
testl
adc
jp
mov
es
xor
push
negl
test
xchg
and
mov
rolb
scas
jo
lock
pop
test
addl
subl
xchg
cli
push
jns
repz
test
ljmp
or
pushf
xchg
mov
sbb
dec
and
cli
pop
jae
xlat
xchg
or
fnsave
enter
call
lea
jbe
cwtl
sub
sub
cmp
ljmp
mov
ret
mov
lods
mov
shlb
outsb
jmp
test
test
lret
and
xchg
dec
loope
ds
pop
dec
outsl
addr16
jnp
in
cld
mov
cmc
fnsave
push
aas
arpl
call
insb
cmp
xchg
push
cld
fcoms
movsb
lock
sbb
mov
mov
push
aas
jl
int
mov
mov
inc
mov
and
rcr
repnz
xchg
mov
push
popf
push
roll
mov
dec
andl
xor
leave
mov
or
sub
cmc
lods
sahf
cmp
call
das
cmp
cmpsl
push
xchg
pop
arpl
and
into
push
test
fwait
pop
lea
adc
lret
add
les
les
dec
and
sub
lret
xor
lea
rcl
pop
mov
sub
stc
push
sarl
pop
decl
inc
imulb
mov
in
mov
fdivrs
in
pop
jp
cmp
bound
dec
ret
sarl
lods
or
xor
leave
in
sarl
sbb
mov
jge
inc
xchg
xor
xor
xchg
pusha
sti
nop
dec
out
int3
jns
dec
andl
lret
fs
fwait
xchg
jp
int3
scas
imul
xchg
dec
sar
push
stos
loopne
je
or
outsl
shlb
or
mov
insb
enter
dec
imul
mov
in
fnstenv
shl
sbb
mov
jecxz
je
rcr
inc
out
mov
lret
xchg
fincstp
mov
mov
jp
xchg
ja
and
cld
mov
pop
or
sub
lods
or
sahf
out
insl
xlat
xor
mov
loope
mov
aaa
xchg
jb
cmpsl
lcall
aas
sbb
or
ret
jae
adc
xchg
or
imul
icebp
vpmacssdqh
jne
ret
lods
mov
pop
loopne
in
add
ljmp
mov
cmpsb
jno
mov
cld
xchg
xchg
scas
jno
pop
xor
fdivr
rcrl
sub
pop
pop
shll
mov
fstps
sbb
lcall
mov
jnp
popl
mov
push
stos
xchg
inc
push
jecxz
add
xchg
inc
popf
gs
push
adc
inc
rcr
cmp
in
mov
mov
insb
test
sahf
ror
loopne
dec
pop
pusha
pop
movsl
sub
enter
xor
and
cmpsl
dec
add
jl
nop
push
aad
aam
cmp
pop
mov
adc
es
xor
inc
adc
loop
xor
je
mov
push
sub
cmc
repnz
or
in
jo
jge
fisubrl
mov
sbb
adc
adc
or
pop
sub
loop
out
cmpsb
mov
sub
jmp
fbstp
adcb
rorl
sbb
add
cmpsb
lret
inc
lea
out
and
xchg
test
test
daa
xchg
add
lret
sub
out
adc
lods
mov
inc
xchg
push
pop
xor
sbb
ret
xor
mov
pop
rcrb
test
cmc
pop
push
test
int3
push
addr16
pushf
dec
cs
aad
mov
imul
std
fisttpl
icebp
lds
xchg
rclb
cmp
mov
push
and
inc
mov
rol
add
sub
xor
or
push
lea
fstl
inc
xor
jns
pop
cmp
cmpsl
push
stos
test
cmc
sub
xor
jns
dec
or
stos
xchg
lock
scas
jae
jmp
jp
cmovno
cmpsl
mov
mov
orb
inc
cld
cmp
stos
sbb
pop
mov
mov
les
and
push
mov
add
scas
jno
jbe
xchg
loop
jp
popa
xor
fwait
mov
dec
fs
rcl
insb
dec
push
mov
dec
push
mov
mov
inc
mov
rolb
add
cld
pop
movsl
mov
mov
push
pop
xor
pop
jae
loopne
mov
mov
mov
push
push
jne
sbb
sbb
mov
ret
pop
inc
cmpsb
push
mov
adc
fidivrl
inc
out
or
movsl
xor
cltd
in
jno
stos
push
xchg
loop
lods
xor
xchg
inc
icebp
mov
mov
cmp
cmpsl
inc
mov
dec
dec
xchg
xchg
dec
mov
push
mov
pop
fwait
aam
mov
addl
loope
lret
inc
popf
pop
cmpsw
xor
bnd
dec
pop
dec
stos
jb
sbb
mov
mov
aas
or
jb
mov
and
jno
or
int3
mov
jae
das
push
insb
xor
sbb
xchg
in
cmpb
loope
int
std
push
jbe
mov
sbb
into
shlb
iret
popf
mov
notl
shrl
adc
ljmp
out
push
fs
push
pop
pop
xor
adc
mov
cmp
and
in
mov
mov
mov
mov
shrl
lahf
shll
jecxz
mov
and
leave
loop
jge
std
mov
jmp
out
pop
arpl
ficoms
push
dec
and
mov
inc
movsb
gs
clc
xchg
push
ljmp
pusha
jle
insb
arpl
cmpsb
imul
mov
adc
out
cld
adc
fdivrs
stc
stc
xor
mov
jbe
imul
orl
rolb
xor
js
sbb
mov
jmp
sbb
mov
testb
shr
and
fstpl
fdivrl
clc
or
leave
and
dec
add
fdivs
rcrb
push
testl
hlt
cmp
sbb
iret
pusha
sub
adc
mov
out
filds
out
mov
dec
mov
out
div
orb
scas
dec
jle
mov
std
in
das
repz
dec
fwait
adc
insb
scas
sbb
lahf
pusha
maxps
stos
popf
movl
fs
pop
jp
icebp
push
repz
adc
adc
pop
sbb
aam
rcrl
xchg
ss
push
cmpsl
outsb
xor
pop
mov
mov
movsb
fldl
pop
mov
inc
mov
mov
shr
push
sbb
cs
mov
fildll
dec
xchg
xor
mov
jno
std
sub
inc
dec
and
mov
cmp
ss
xchg
add
addr16
shr
shl
adc
ljmp
leave
mov
sbb
pop
stos
sbb
cmp
xor
mov
pusha
mov
push
cld
sub
and
mov
mov
sbb
xchg
cmp
cmp
push
test
mov
out
xchg
pusha
mov
iret
or
jmp
inc
imul
adc
pop
cmpsb
stc
movsl
jne
xor
shrb
cmpsl
stos
shl
out
es
add
mov
mov
lods
adc
add
gs
jge
das
cmp
lret
pushf
aas
ret
in
jecxz
test
push
sbb
mov
rorb
pop
inc
jmp
xor
aas
jnp
hlt
inc
bswap
daa
sub
mov
xchg
jne
xor
add
push
add
jnp
or
dec
mov
shl
pop
icebp
push
mov
nop
add
int
xchg
sbb
imul
cs
sub
pop
aad
dec
rcr
and
fcmovnb
jecxz
xchg
add
xor
std
push
add
aas
sbb
push
shll
cmpsb
fwait
xchg
int
rcl
aas
and
add
lods
push
out
jg
dec
cmp
add
out
ret
outsl
and
js
andl
gs
in
ljmp
jne
xor
mov
adc
fmul
out
and
aam
sbb
pop
cmpb
push
insl
push
sti
push
in
jbe
mov
sti
and
sbb
push
jb
pop
cwtl
fdivr
xchg
sbb
inc
mov
cmp
dec
daa
shll
loop
cmp
push
cmp
mov
dec
jnp
xchg
push
jg
adc
lods
repnz
add
dec
jmp
clc
sub
lcall
shl
test
cld
sub
pop
sbb
int3
push
fdivp
popa
mov
and
rorb
aam
push
mov
jb
pop
aad
iret
icebp
push
arpl
jb
jmp
mov
adc
cmp
cmp
leave
inc
fst
jl
fidivl
push
in
dec
cwtl
imul
dec
pusha
inc
adc
mov
shll
in
addr16
inc
je
js
fmull
call
pop
push
cmp
shll
test
jb
xorb
fistpll
cmpb
sbb
pop
xorb
jns
adc
imul
xchg
repnz
rcr
pushf
sti
xchg
inc
xlat
push
sbb
sub
mov
add
testb
out
bound
or
decl
adc
jg
cs
js
ljmp
jmp
js
sahf
mov
loopne
cmp
pop
or
mov
jecxz
sbb
xor
lods
dec
repnz
and
cli
fsubrs
jmp
xor
sarl
xchg
dec
sahf
data16
push
pop
lock
mov
inc
pop
lods
mov
pop
test
fmul
lea
ja
mov
repnz
sbb
div
ja
push
sbb
in
daa
inc
cmp
add
jno,pt
adc
sub
cmpsb
test
fsubr
mov
xchg
mov
pop
xor
pop
dec
xchg
push
xor
subb
push
xor
sbb
push
jns
cs
pop
and
ja
jae
mov
fcoml
lock
xor
add
enter
and
lea
sahf
or
sub
push
insl
aas
out
in
loop
lret
xor
movsl
cld
jb
hlt
push
xor
push
les
aad
lods
inc
mov
cmp
jmp
jmp
addr16
adc
sub
cmp
cmp
push
into
cli
dec
dec
inc
jb
rorl
pop
mov
jmp
xchg
iret
inc
lret
out
jne
push
jle
popf
lods
add
sub
jbe
pushf
cmpsb
cmp
cmp
test
jl
xchg
scas
icebp
fisubrl
out
call
out
pop
icebp
fists
or
lods
imul
lcall
inc
hlt
orb
out
push
pop
push
inc
inc
lahf
ss
mov
push
es
xchg
cvtps2pd
mov
loop
or
out
das
dec
sub
mov
pop
lret
inc
push
lret
rolb
lds
pcmpeqb
sbb
mov
sahf
pushf
push
cwtd
jp
test
movsb
stos
inc
xor
aam
jl
pop
dec
lcall
ljmp
inc
add
push
sbb
push
out
mov
popa
stos
adc
jne
sub
jle
int3
iret
adc
sti
out
rcrb
push
inc
inc
outsl
cmp
loope
pop
xor
cli
repz
out
jo
fs
fucomp
test
push
mov
jno
iret
aam
and
adc
inc
imul
cli
mov
pop
xor
push
in
jns
pushf
push
cmpsb
shlb
inc
xor
dec
rorb
test
out
gs
jl
fisttpl
xchg
jno
pop
test
or
shlb
add
push
jmp
mov
loopne
push
js
ficompl
pop
cltd
cmpl
sarb
inc
mov
push
inc
sub
inc
cmpsb
sbb
lcall
dec
cmp
outsl
pop
inc
int3
pop
push
insb
movaps
arpl
push
xchg
jmp
test
scas
add
xchg
pop
push
dec
iret
fnstcw
sahf
mov
push
mov
pop
fmul
mov
scas
ljmp
cmpxchg
mov
jb
fisubrs
adc
dec
pop
push
rorl
out
dec
and
jecxz
mov
ret
stos
jb
inc
test
inc
inc
mov
cmp
mov
lret
pop
inc
mov
mov
pop
inc
nop
inc
pop
mov
movsb
ja
call
dec
push
xchg
mov
or
ljmp
out
bound
sti
mov
mov
mov
in
popf
sahf
push
popf
dec
jmp
ds
adc
sahf
cwtl
lret
insl
xchg
loopne
sbb
cvtdq2ps
imul
jp
xchg
and
add
ds
shr
sbb
icebp
pop
insl
fcomp
xor
sub
sub
into
lock
cmp
push
daa
mov
lret
pop
enter
xor
int
mov
test
jbe
push
cmp
cld
mov
rol
pop
pop
push
dec
mov
sbb
xchg
xlat
fwait
popa
mov
arpl
pop
inc
stos
dec
mov
inc
push
mov
cmp
ljmp
mov
mov
or
xchg
daa
jp
pusha
aad
xchg
jmp
cltd
mov
icebp
mov
das
dec
inc
jl
cmp
das
js
addb
sub
add
cmp
ficompl
push
clc
dec
je
jp
adc
popl
mov
sbb
inc
arpl
cmp
sbb
pmullw
mov
adc
fnstenv
dec
subl
and
mov
clc
insl
add
loope
sub
or
fcoml
push
cmpsl
xchg
mov
dec
jle
into
dec
xchg
dec
push
hlt
fldcw
inc
mov
xchg
jg
int3
push
sarb
arpl
push
dec
shrb
adc
and
mov
out
adc
or
stos
int
sti
jnp
pop
ds
sbb
cmp
sahf
mov
loopne
xchg
mov
push
and
lods
int3
mov
icebp
mov
jbe,pn
dec
in
icebp
fisttpll
mov
push
dec
mov
xor
leave
or
mov
sbb
sub
movsl
dec
stos
int
js
jne
ficomps
xor
mov
xchg
mov
insl
mov
hlt
mov
jecxz
mov
or
test
outsl
notb
mov
scas
je
aam
adcb
dec
xorb
push
inc
adc
adc
fwait
jb
jns
inc
pop
rclb
mov
xchg
filds
in
loop
cli
pop
sub
sbb
test
mov
imul
scas
jnp
lock
inc
jmp
lock
xchg
flds
sub
jne
jmp
add
inc
hlt
jecxz
xor
cmp
jo
and
push
jle
pop
xchg
shlb
mov
pushf
and
pop
mov
jecxz
dec
sub
cmpsb
cltd
hlt
push
jno
pop
loopne
push
inc
loopne
xor
movsb
lea
ret
push
in
idivl
mov
aam
sub
pop
pushf
dec
adc
mov
das
adc
push
lcall
lret
sbb
sbb
nop
mov
movsl
cli
mov
fcom
cmp
sub
and
jge
jp
mov
fistpll
mov
lret
mov
push
in
int3
mov
jg
aas
cmpb
pushf
sbb
and
pop
mov
xchg
sbb
scas
out
imul
mov
stc
push
pop
mov
sbb
aaa
movl
imul
mov
daa
iret
adc
jl
dec
pusha
das
add
lds
inc
inc
dec
xchg
icebp
subb
pop
in
push
sub
push
les
push
add
xchg
repnz
sahf
out
dec
mov
xor
sbb
xor
shlb
or
popf
push
jmp
bound
cmpsb
mov
sar
js
fistl
push
inc
aad
mov
dec
jnp
mov
pop
into
xchg
jo
into
xor
out
enter
xchg
jo
leave
data16
jl
lock
cmp
loope
cmp
jne
test
inc
jge
xor
push
lea
push
sbb
bound
into
sub
adc
mov
sti
or
es
lds
je
insl
test
sbb
shlb
or
out
mov
iret
imul
cmp
xchg
jmp
outsl
cmc
cltd
mov
cwtl
in
fnstcw
aaa
pop
cltd
scas
out
fimuls
pop
inc
outsb
sub
dec
in
sub
int3
inc
outsl
pop
faddl
aad
dec
sbb
sub
cmp
mov
jle
int
sbb
jne
rolb
add
pop
pushf
mov
cmp
ds
lret
or
jns
lahf
jmp
push
das
dec
aaa
loopne
repz
cmp
fisttpl
repz
pop
mov
jmp
push
rorl
cmp
cltd
iret
add
cs
adc
add
faddl
es
fcompl
push
movsl
lret
or
ss
movb
jae
or
aas
xchg
inc
push
mov
xor
cmp
pop
and
loop
sbb
aaa
mov
ucomiss
or
adc
in
lret
stos
das
sbb
imul
insb
and
pop
xlat
mov
out
inc
push
out
repz
jnp
adc
test
sub
push
dec
push
arpl
cmpsl
roll
sub
xchg
orb
cmp
xchg
xor
mov
jl
or
xchg
mov
scas
sarl
movsl
insl
mov
and
sbb
data16
mov
mov
je
sub
jo
xor
or
inc
lds
addr16
rcr
sbb
fists
fisttpll
scas
lock
jmp
lods
mov
cld
imul
pop
jg
push
inc
es
mov
test
out
cmp
das
rcrb
iret
loopne
cmc
movsl
sahf
mov
adc
stc
or
lcall
pop
push
insl
push
rorb
inc
cltd
lcall
xor
adc
out
push
orb
negb
cmp
sub
cmp
in
adc
es
clc
and
mov
mov
sbb
mov
pushf
pop
cmpsl
lahf
rol
imul
lret
ds
jecxz
add
dec
inc
xchg
pop
or
jmp
xor
fsubl
es
xorb
scas
mov
scas
lea
add
ljmp
mov
into
lock
xchg
xchg
xchg
or
cmpsb
sbb
pop
adc
mov
mov
push
unpckhps
and
xor
push
jo
stc
insb
xor
sti
loop
jecxz
jle
push
pop
adc
stc
adc
add
inc
in
push
orl
xchg
jnp
ret
loope
sub
push
lea
pop
xchg
xchg
xor
pop
cmp
cmc
adc
sbb
push
and
fcmovnu
jb
and
add
xor
imul
sub
adc
shll
adc
sbbb
cmpsl
cs
xor
rorb
lcall
fwait
add
cltd
pusha
dec
lea
inc
pop
cmpsl
inc
add
cld
imul
das
fmulp
adc
mov
adcb
cmp
jge
jns
pushf
cs
inc
add
xchg
loop
mov
je
mov
mov
add
push
xor
xchg
xchg
push
popa
mov
popf
mov
push
ret
stos
pop
fsubl
jo
pop
or
stos
mov
mov
inc
or
cli
mov
mov
cmp
mov
mov
into
rol
out
outsl
and
dec
xchg
adc
ljmp
das
mov
push
pusha
dec
mov
in
or
mov
mov
lock
out
nop
mov
dec
jae
jge
je
sub
lret
add
sub
jmp
jmp
movsb
movsb
andb
xor
imul
add
inc
cmp
addl
jae
hlt
push
popa
jb
or
dec
pop
stos
mov
mov
imul
sahf
xchg
outsb
pop
push
xor
outsl
call
loopne
sti
in
and
push
sub
cltd
or
push
sbbl
mov
mov
push
jo
fucomip
sbb
cltd
mov
and
std
and
jbe
incb
pop
or
or
mov
push
repnz
fs
or
aam
cs
test
xchg
or
cli
add
and
ret
mov
and
scas
jge
test
mov
push
mov
ljmp
loope
stos
neg
loop
cmpsl
xor
jge
pop
and
out
jmp
xor
rcrl
out
cmp
popf
or
loop
push
ret
decl
jmp
in
xchg
mov
fs
xchg
repnz
scas
fisubl
push
cmpsb
jge
adcb
test
adc
or
andl
push
xlat
push
xchg
or
cmp
mov
js
scas
xor
cmpsb
adc
push
out
jnp
cmpsl
repz
adc
push
sbb
push
movsb
dec
stos
int
dec
fld
dec
inc
dec
cmp
inc
fistps
scas
lcall
mov
inc
test
adc
in
flds
pop
mov
aas
pop
mov
fimull
jne
add
pop
mov
fdivr
adc
das
pusha
insb
sub
imul
xchg
cmp
xchg
jns
add
lds
or
fs
jae
notb
sub
mov
inc
orb
cmp
cmp
in
out
xchg
mov
add
fistpl
sti
out
stc
fwait
or
rorb
outsb
int3
jo
add
pop
fisttps
or
jge
add
mov
insl
sarl
push
push
lods
imul
jp
ja
cmpsb
test
mov
mov
aad
pop
rcrb
dec
into
cld
jmp
int3
loope
add
push
and
fdivs
stos
pusha
arpl
mov
sbb
mov
ja
or
jmp
xchg
mov
mov
dec
enter
add
fisttps
sbbl
js
xor
sbb
inc
cld
clc
mov
adc
or
jmp
pop
out
mov
shrb
xor
or
sub
fmull
mov
mov
repnz
xor
mov
mov
sbb
aad
clc
mov
dec
cmp
cmpl
mov
rolb
xchg
lock
fidivrl
push
sub
and
repnz
adc
push
add
and
inc
lock
pop
add
and
mov
ljmp
js
xor
mov
or
lret
std
sahf
loop
ret
inc
or
add
jno
cmc
loopne
repnz
scas
jecxz
test
pop
test
cmpsl
mov
es
test
pop
ss
aad
mov
mov
icebp
jmp
xchg
jno
pushf
xlat
loop
bound
cmp
xchg
sti
in
xchg
aas
stos
xchg
mov
aam
sbb
lods
jge
cs
out
inc
test
out
adc
adc
addr16
sub
movsl
inc
pop
push
ljmp
add
lock
enter
int3
xorl
mov
test
mov
popa
cmpsb
add
pushf
sahf
int3
push
test
cmp
loope
aam
pop
mov
jge
enter
sbb
jmp
dec
hlt
inc
in
jns
lret
and
hlt
mov
and
rol
and
clc
shl
xchg
fcompl
in
pusha
pop
pop
addb
ret
out
mov
jmp
xchg
add
inc
xlat
std
outsb
sbb
jnp
loopne
ja
les
sbb
adc
ljmp
pop
and
xchg
out
fistps
std
out
pop
test
and
fwait
xchg
insl
sub
push
sub
xchg
repz
xor
aaa
xor
mov
mov
jo
pop
and
adc
xor
jg
dec
mov
jp
movsb
orb
loopne
cmp
dec
push
push
pushl
outsb
and
adc
jne
arpl
dec
push
mov
cs
das
jle
xchg
mov
or
cli
test
xchg
dec
mov
add
stos
and
xor
out
aad
dec
sub
xchg
cwtl
out
jnp
xchg
mov
add
xchg
icebp
ja
movsb
ror
fndisi(8087
mov
add
flds
jb
cmp
and
int3
das
dec
lock
test
push
inc
xchg
in
dec
fistl
push
jo
xor
int
mov
dec
add
leave
xor
push
outsb
movsb
cmpb
fs
cmp
cltd
sub
stos
imul
pshufw
movsl
lcall
aaa
or
sahf
pop
inc
test
jmp
inc
mov
xor
xchg
inc
mov
adc
shll
mov
and
into
inc
push
in
stc
jae
add
push
int
sub
jns
das
mov
mov
sbb
pop
jg
icebp
std
dec
add
out
adc
adc
sub
mov
divl
sbb
sti
inc
jnp
je
dec
ss
cmp
fstpt
add
ss
popf
pop
test
push
inc
out
xor
into
es
into
dec
xor
repnz
ret
mov
call
mov
cmp
mov
imul
pop
lret
rcrb
repnz
mov
lahf
mov
add
push
push
mov
shlb
out
sub
int
adc
test
pop
and
clc
xchg
mov
jle
inc
loope
test
lret
mov
cmp
fnstsw
xchg
sahf
or
mov
pop
ret
adc
icebp
mov
je
test
aas
mov
es
pop
mov
bound
jno
nop
jg
mov
inc
aad
cmp
mov
jle
jnp
cmp
movsl
inc
or
std
data16
int
inc
pushf
enter
push
outsl
push
mov
aaa
add
or
and
out
out
rcrb
xor
stos
mov
mov
mov
push
daa
int3
jge,pn
mov
dec
jmp
out
xor
lahf
ret
push
mov
pushf
loopne
cmpl
fadd
cmpb
neg
fistpll
jle
push
sbb
pop
mov
negb
inc
mov
fcoml
pop
xchg
rclb
cli
jmp
dec
pop
insl
mull
roll
sub
jno
icebp
sahf
mov
sbb
pop
ja
push
stos
mov
data16
fcomps
jae
inc
sbb
outsb
in
jne
push
pop
fwait
pop
mov
das
bound
ljmp
icebp
xor
xlat
int3
jno
mov
dec
pop
xchg
lods
loop
notb
int3
mov
pop
mov
cli
arpl
imul
push
xchg
jno
fs
in
jo
lea
adc
test
or
pop
xchg
mov
push
mov
movsl
jmp
lcall
cmpsl
push
cmpsb
scas
pop
icebp
inc
fwait
jl
lods
cmp
xor
push
fsubs
ds
pop
movsb
popl
jo
jae
mov
jo
jmp
lahf
xchg
xor
loope
mov
mov
test
pop
in
addr16
pop
xchg
add
aam
cld
inc
mov
popf
lret
sbb
sti
rorb
cmpsl
xchg
into
sahf
dec
aam
cmp
call
pop
mov
xchg
or
jno
sub
adc
cmp
pop
push
mov
insl
dec
addr16
pop
scas
call
std
repz
or
push
divb
mov
movb
push
mov
ja
fisttps
cmpsb
cmpb
push
cmpsb
inc
xor
into
and
lcall
cltd
sub
and
cmp
pop
ret
xor
ljmp
pop
fadds
cmp
push
push
test
in
cmp
je
fwait
pop
and
pop
icebp
pop
or
out
stos
test
call
dec
int3
mov
daa
push
fsts
orb
es
pop
xchg
xlat
fisttpl
push
xor
jecxz
pushf
testb
clc
mov
jae
dec
cmp
popf
mov
sub
dec
loope
cmp
gs
sub
xor
shll
repz
mov
pushf
leave
dec
push
mov
or
outsb
cmp
jecxz
add
cmp
sbb
sub
jns
arpl
lret
ds
jmp
int3
mov
push
xor
push
int
int3
int3
cmp
inc
and
xor
les
sub
fdivrl
dec
outsb
rol
jb
and
lahf
jmp
mov
xor
fistl
imul
inc
and
and
int3
jg
jnp
enter
xor
xor
dec
int
cmpsb
outsb
mov
push
shrb
mov
mov
out
sub
mov
sub
mov
inc
push
testb
mov
insb
es
xor
fbld
mov
loop
push
movb
fistl
xchg
sar
in
pop
lea
scas
stos
es
rclb
loope
and
daa
mov
inc
pop
leave
ss
lcall
test
and
rorl
loop
lret
in
outsb
push
dec
pop
loope
jl
aad
test
sbb
in
pop
cmp
aam
sub
adc
das
fbstp
sub
xor
in
in
sar
mov
cli
mov
push
and
dec
sbb
mov
push
pusha
sbb
jns
mov
xchg
xor
xchg
sarl
mov
or
fisubrs
fiadds
fdivrs
test
jb
xchg
or
imul
mov
or
sub
jbe
pop
mov
push
or
or
idiv
adc
cltd
aas
dec
mov
daa
cmpb
daa
icebp
mov
rolb
bound
push
repz
mov
xor
int3
sti
rorb
push
xchg
mov
popf
sti
out
mov
outsb
mov
lock
sbb
stos
jbe
mov
and
cmp
inc
cmp
push
sbb
test
xchg
add
shll
mov
scas
lret
inc
mov
mov
sbb
xchg
and
mov
inc
bound
test
ljmp
outsb
adc
jo
ja
stos
sub
cmp
pop
int
aas
mov
enter
xchg
push
lods
cmp
pop
int
push
mov
cltd
loopne
sbb
cmpsl
xchg
movups
out
ja
jge
fsubrs
or
leave
and
arpl
outsl
adc
cld
pop
cmc
int3
out
gs
xor
loopne
sbb
pop
test
pcmpeqd
jge
push
fiadds
subl
mov
sub
bound
enter
faddl
in
sub
add
test
stos
sbb
lds
lret
ficompl
mov
fisttpl
jno
lcall
adc
pushf
or
push
hlt
rclb
addr16
mov
repz
imul
adcb
cmc
xchg
or
fwait
pop
pop
ja
inc
dec
dec
jp
push
jg
push
adc
add
dec
jp
cmp
adc
sbb
xchg
adc
inc
mov
sbb
add
mov
mov
cld
pop
mov
in
mov
movsb
push
in
push
xor
outsl
pushf
add
dec
mov
leave
push
andb
lds
xor
pop
scas
jge
and
mov
or
xchg
imul
lret
cmp
xor
cmpsb
popa
mov
addr16
xor
mov
mov
insb
sbb
push
mov
test
iret
outsl
ret
aas
cmp
jno
and
ret
jmp
push
jecxz
sbb
dec
into
lods
fwait
dec
out
loopne
loop
test
pcmpgtw
mov
or
mov
out
lahf
outsl
xchg
dec
aam
es
cmp
inc
mov
roll
fistl
xor
imul
mov
mov
sbb
jecxz
jge
mov
xor
fistl
and
sti
hlt
rorb
pop
cmp
push
rorl
lea
add
mov
scas
and
pop
fistpll
iret
mov
jns
test
sbb
in
xchg
add
rolb
int3
scas
mov
rorl
add
test
add
push
dec
jne
xor
enter
shlb
cld
xor
addr16
imulb
push
sub
pop
or
lahf
fwait
xchg
pop
xor
or
insb
mov
mov
imul
xor
gs
push
mov
mov
orb
pop
jecxz
das
inc
sub
mov
cmp
mov
pop
mov
push
adc
adc
push
xchg
das
outsl
cmp
xchg
pop
xchg
jle
in
mov
cs
jb
mov
or
jne
cmp
icebp
add
mov
and
sahf
xchg
dec
adc
sub
lods
pop
lret
mov
imul
mov
jmp
fidivrs
add
adc
fsts
xchg
rolb
sub
xchg
adc
mov
add
repnz
xchg
fcmove
inc
and
adc
idivb
lock
sub
out
and
and
adc
xchg
add
pop
icebp
hlt
mov
add
or
adc
and
pop
into
push
mov
push
cmp
xor
fidivrl
loope
push
sbb
fists
stos
sbb
rclb
jle
xchg
jmp
push
jecxz
or
pop
stc
sbb
push
push
mov
shlb
repnz
inc
ficompl
jnp
jmp
fnsave
mov
lock
div
cmp
lret
push
int
jg
cli
cwtl
cmp
adc
adc
mov
cmp
fst
push
push
or
inc
lcall
sbb
mov
xor
cmpsl
mov
pop
ror
clc
push
sub
push
outsb
repz
pop
pop
lcall
and
in
pop
cltd
shrb
test
les
inc
into
test
pop
shll
push
test
jns
add
xor
or
pop
fadd
fsubrl
xor
addr16
loop
pop
out
or
test
adc
and
xchg
dec
sub
or
or
ja
popa
ds
mov
mov
xchg
and
and
sahf
pop
fcoml
das
hlt
sbb
sbb
pop
push
xor
pop
fs
ja
adc
fbld
sahf
nop
rolb
push
loopne
xor
data16
dec
les
rcll
in
or
push
test
jno
or
mov
testb
adc
testb
jl
or
fnstcw
push
add
xchg
add
shr
xchg
lahf
mov
push
adc
lock
xlat
fcmovnb
fiadds
cmpsl
jmp
ss
into
jo
cltd
add
add
insb
stos
cmp
push
lds
gs
sbb
mov
jl
inc
push
aad
movsb
xchg
xchg
popf
jp
lock
data16
cwtl
icebp
cmovnp
mov
test
jnp
loop
iret
aas
sbb
ja
mov
movsl
jae
sub
rcr
pop
int3
std
adc
cwtl
xchg
stc
repnz
incb
iret
iret
fmull
xor
test
xchg
ja
mov
in
xor
addr16
adc
mov
pop
or
aas
filds
mov
jp
dec
inc
or
div
xor
int3
lcall
mov
addr16
mov
jo
xor
jns
sti
add
incb
adc
test
jb
xorb
stc
out
xchg
stos
test
popf
ljmp
loope
ja
lcall
fbstp
and
sub
mov
jmp
add
mov
loope
jge
or
dec
lods
push
sbb
jnp
inc
mov
mov
fwait
movsl
arpl
in
ror
aam
or
test
pop
scas
adc
jmp
movsl
fisttpll
loope
daa
incl
jbe
and
mov
xchg
je
xlat
pop
lea
daa
push
push
push
lcall
adc
rol
imul
adc
pop
mov
rcrb
pushf
xlat
cmc
into
cmp
add
lods
pop
jmp
sbb
jecxz
mov
push
call
repnz
mov
add
aad
loopne
mov
push
cmp
or
or
push
cmpsb
push
mov
pop
pop
into
push
ljmp
adc
push
jmp
mov
jg
mov
push
ror
in
sbb
mov
adc
mov
adc
cmpsl
add
and
into
pop
in
in
adc
outsb
and
sbb
mov
pop
leave
aam
sub
je
and
or
in
xchg
pop
in
cld
jg
stos
cmpsl
andl
xchg
ret
push
push
ret
add
fucom
cmp
cwtl
into
js
pop
cmp
inc
push
fldt
mov
add
or
out
cmc
and
mov
aam
fwait
fs
fwait
or
sbb
dec
jle
cmp
test
movsb
imul
sbb
pop
ljmp
inc
cmp
pop
push
sbb
mov
cmp
ret
lea
cli
aaa
hlt
inc
cmpsl
mov
and
pop
repnz
test
pop
and
es
or
mov
ret
aaa
pop
cmp
mov
fwait
loope
pop
sub
push
scas
mov
dec
cmp
stos
jno
mov
arpl
jnp
or
push
imul
cmp
mov
in
jg
stos
aam
int3
inc
sub
jo
insb
leave
mov
pop
shr
push
mov
lahf
push
pop
fsubl
popa
and
shl
cmpsb
cli
aaa
jp
cld
stc
pop
inc
subl
out
scas
sub
push
in
fwait
iret
mov
int3
rol
js
cmp
test
pop
pop
dec
call
hlt
aas
xchg
fdivl
notl
push
loopne
in
or
fdivr
mov
cld
icebp
jmp
fwait
cli
jnp
xchg
inc
mov
out
dec
js
leave
loope
cmp
cmp
lahf
pop
mov
sbb
mov
push
sbb
in
jno
fwait
pop
iret
push
mov
testl
push
jne
iret
sub
sbb
mov
jns
je
sbb
insl
mov
shrl
punpckldq
push
adcb
jns
mov
out
imul
fcmovne
addb
jle
inc
mov
dec
mov
movsb
or
into
orl
fadd
or
das
scas
movsl
mov
mov
xchg
out
pushf
insl
std
mov
sbb
mov
xchg
and
inc
mov
cmp
fbld
ja
arpl
out
jnp
xchg
bound
mov
lahf
jmp
bound
fists
dec
std
cmp
fadd
pop
dec
xor
jns
shll
xchg
fdiv
int
push
fldcw
pop
mov
test
cmpsb
daa
cmpsb
cmpsl
xchg
scas
ljmp
mov
push
orl
frstor
cmp
adc
jb
or
test
sub
aam
imul
ss
nop
mov
add
mov
sub
sar
jmp
jl
es
mov
pop
shlb
lock
lea
out
nop
cmp
xorb
divb
add
cmc
loop
hlt
push
jbe
fcmovbe
andl
add
hlt
lahf
jecxz
jo
insb
fstl
divb
xchg
dec
cmp
bound
mov
insb
dec
add
cmp
js
pcmpeqd
push
jnp
lods
sub
jns
adc
in
and
push
outsb
adc
rorb
out
das
sub
sub
movsl
mov
jmp
std
test
cmp
call
sbb
sbb
jecxz
add
aam
test
mov
xor
loope
cltd
stos
pop
repz
out
jno
add
mov
scas
scas
sbb
pop
std
sarb
lods
in
hlt
sbb
and
mov
enter
leave
jmp
mov
xor
fwait
push
add
mov
shlb
or
mov
push
bound
push
insl
cmp
cmp
xchg
in
stos
jns
sub
outsl
inc
mov
jns
bound
frstor
sti
fcompl
out
into
xchg
jno
faddp
ljmp
frstor
pusha
jne
rcll
xchg
setge
arpl
ret
cltd
sub
or
jbe
movsl
mov
mov
and
ret
and
imul
mov
and
adc
fwait
pop
ss
or
push
les
pop
mov
fbld
add
inc
loop
rol
cltd
xor
rol
ds
rorl
ljmp
cltd
xor
jns
repz
push
popl
lock
jmp
and
lahf
mov
jb,pt
mov
and
mov
es
ret
inc
int
arpl
lods
and
cmp
sarb
fdivl
icebp
or
je
and
das
xor
loope
xchg
movsl
ja
xchg
lcall
and
jge
int
mov
or
pop
dec
stc
push
into
inc
mov
es
aam
pop
pop
test
repz
mov
cmp
scas
pop
out
dec
pop
incb
mov
push
sahf
inc
clc
sub
out
push
lods
mul
aam
ret
sbb
outsl
xlat
jo
outsl
ds
aas
lcall
std
aam
imul
shlb
mov
jmp
cltd
mov
and
xchg
add
pop
xchg
mov
sub
push
icebp
push
vcvtss2si
mov
shll
jb
and
dec
mov
movsb
ret
loope
cmovno
mov
add
std
subl
sub
cltd
mov
push
push
jmp
ss
int3
out
jno
aad
and
test
ljmp
jg
jne
aad
call
jl
pop
stos
cld
mov
popa
cmpsb
hlt
inc
mov
mov
cmp
xor
ljmp
jno
scas
popa
mov
test
xor
sub
subb
mov
sub
xchg
push
inc
mov
fwait
sub
fdivrp
scas
stos
add
mov
scas
xchg
out
push
sbb
dec
je
xor
scas
pushl
mov
std
mov
pushw
pop
fdivs
inc
psubusw
fldcw
fldcw
mov
jmp
xchg
rcl
into
inc
xor
cmp
xor
pop
sbb
xlat
iret
ficomps
mov
sbb
xchg
push
in
sbb
push
iret
hlt
mov
and
push
mov
jne
test
dec
adc
in
dec
cmc
mov
subl
andb
adc
int
pop
fstpt
mov
rorl
fwait
sbb
psubusw
nop
push
call
data16
mov
and
bound
sub
aas
mov
adc
stos
cmp
push
inc
sub
mov
add
sub
repz
push
pop
xor
dec
jnp
loope
jns
lods
fcoms
pop
rep
mov
insb
movsb
mov
mov
pop
sbb
mov
inc
pusha
jl
sub
dec
and
gs
arpl
sbb
pop
call
leave
sbb
xchg
es
pusha
shl
dec
dec
xor
mov
rorl
fstl
aaa
dec
repz
xchg
dec
push
or
mov
mov
jbe
inc
mov
mov
pushf
xor
sahf
pop
loop
xchg
dec
sbb
xchg
pushl
ror
or
or
lret
test
and
testb
daa
xor
cmpb
sub
push
lods
xchg
shll
loope
dec
shll
inc
ficompl
sub
fidivrl
testl
adc
xchg
movsb
hlt
stos
pusha
dec
sbb
and
dec
adc
cmpsb
push
or
pop
hlt
subb
and
sub
fs
in
int
outsl
dec
call
fisubrs
xor
stos
je
outsl
and
imul
fsubs
mov
xchg
test
inc
shll
cmpsb
testb
push
pop
lahf
sbb
push
dec
enter
ret
dec
mov
jmp
shlb
add
cwtl
mov
xchg
in
das
jmp
jae
lods
in
inc
pop
dec
call
fbstp
scas
dec
negb
aaa
push
sub
xor
lds
mov
aaa
addr16
movsb
data16
cwtl
ljmp
sahf
and
ret
pop
mov
nop
repz
jae
sbb
rcl
dec
lret
ds
xchg
sbb
sbb
sub
mov
cmp
inc
xor
pop
ja
das
bound
popf
sahf
pop
dec
out
jo
mov
and
psrad
adc
fnstenv
pop
test
mov
pop
and
lret
test
iret
hlt
hlt
pop
or
jl
xor
aam
mov
imul
sbb
xchg
aaa
pop
stc
mov
rcl
scas
dec
pop
cmpsl
mov
xorl
or
sbb
fcoms
lret
cwtl
andb
jns
sbb
data16
cmp
sub
mov
xchg
shrb
add
ficoms
adc
nop
xor
push
add
mov
js
adc
xchg
cwtl
dec
mov
push
fwait
push
adc
addl
push
push
lea
call
jno
mov
adc
mov
adc
xor
cmp
rcl
fcmovb
bound
jp
dec
leave
xchg
push
xlat
mov
pushf
lret
push
mov
mov
mov
mov
mov
mov
xor
mov
popf
fs
jecxz
lods
roll
mov
out
jp
cwtd
jbe
roll
in
pop
cld
popa
mov
mov
cld
ss
loopne
movsb
mov
fidivrl
popa
cmpsb
daa
dec
cmp
sub
fadds
data16
pushf
enter
sub
mov
roll
add
outsl
cmp
repnz
adc
je
xchg
inc
sbbb
addr16
subb
cmp
movsb
push
insl
pop
lret
push
in
mov
push
inc
mov
imul
test
cmp
out
sub
cld
mov
adc
ds
dec
lret
adc
fimull
in
ret
or
inc
sbb
xor
or
aaa
mov
mov
ljmp
pop
xchg
mov
call
and
adc
sub
cmp
mov
out
push
outsl
adc
das
and
xchg
and
std
dec
pushl
or
fnstcw
adc
sbb
daa
jae
or
test
dec
sbb
jl
adc
stos
lret
repz
fdiv
xor
test
faddp
pop
shll
les
pop
sbb
mov
rcr
adc
ja
push
inc
in
int
scas
push
mov
test
cmp
jg
mov
mov
mov
fnsave
or
and
add
cmpsl
jg
das
lea
adc
fisttpll
inc
xor
xchg
leave
stos
dec
flds
movsb
stos
aad
sbb
inc
insl
pop
sub
cmpsl
outsl
enter
aas
aaa
dec
dec
idivl
adc
mov
fbld
push
jbe
fimuls
dec
test
rorl
jl
cltd
mov
out
and
sbb
xchg
mov
cmp
repz
mov
jno
test
xor
rcll
mov
cmp
adc
add
shr
pop
in
cli
lret
testl
push
add
std
sbb
aas
sbb
sahf
mov
stc
ss
or
adc
xchg
push
pop
inc
ja
gs
fadds
popf
dec
nop
jmp
in
int
jo
push
int
nop
scas
aas
and
jns
scas
pmuludq
mov
sub
out
in
jbe
imulb
lcall
mov
mov
divb
std
mov
loop
push
jp
into
sbb
icebp
pxor
inc
inc
aam
rorb
cmp
loop
aad
outsb
std
xchg
fbstp
or
test
mov
lea
sahf
movsb
xchg
popf
shrb
int
jo
loopne
xor
je
push
jo
cwtl
repz
pusha
into
ljmp
inc
or
mov
mov
ss
xor
mov
pop
fidivrs
jecxz
lock
data16
sub
sahf
andl
adc
subl
out
mov
scas
jne
lret
scas
repnz
cmp
movsb
rcll
xchg
inc
fidivrs
xchg
push
loopne
into
mov
fdivrl
xchg
add
or
out
pop
aam
jl
and
sub
mov
fwait
sbb
push
sbb
sbb
or
add
pusha
cwtl
lret
jle
data16
shlb
and
add
pop
les
xchg
dec
test
fdivrp
and
rorl
xlat
pop
and
mov
pop
push
add
cmpsl
outsb
dec
ljmp
mov
lret
or
dec
imulb
and
ret
xlat
fbstp
imul
in
incl
jmp
push
leave
cmp
mov
faddl
dec
dec
xchg
shl
pop
es
loopne
fs
push
fistl
fistps
insl
cs
adc
ret
js
adc
xchg
jae
addb
test
lret
inc
dec
jl
test
inc
cli
repz
xor
lcall
jo
push
xchg
jp
add
mov
pushf
cmp
jl
adc
xchg
insl
dec
mov
ds
push
xchg
push
fildl
lock
pop
sub
mov
sahf
push
mov
or
dec
jmp
mov
mov
mov
sbb
jmp
jno
gs
insb
fs
scas
mov
adc
mov
out
iret
movsb
movsb
sbb
mov
xlat
cltd
shl
add
dec
cmp
xor
pop
jecxz
enter
cld
add
xor
insb
loope
mov
mov
mov
push
mov
imul
roll
shlb
dec
out
mov
pop
dec
leave
push
lcall
push
add
or
or
test
out
cmp
addr16
jmp
cmp
or
pop
or
mov
mov
enter
mov
loop
fwait
mov
add
xor
repz
mov
fs
das
shrb
or
out
test
dec
jmp
pop
pop
dec
push
pop
stos
mov
inc
ret
ficoml
ljmp
mov
xchg
xchg
sub
mov
pop
mov
dec
aas
and
bound
call
loop
mov
idivb
es
imul
xchg
ds
pop
fmul
add
jecxz
mov
sub
cmp
test
test
xchg
mov
icebp
adc
movsb
sbb
sbb
jns
outsb
outsb
dec
adc
mov
lods
sub
adc
loope
ljmp
xchg
cs
bound
pop
mov
lcall
cmp
jae
add
fdivl
test
fistps
pop
int3
jecxz
in
stos
jnp
push
imul
lret
std
mov
loope
push
les
xchg
dec
adc
pop
jl
pop
popa
sub
test
mov
movsb
mov
mov
mov
fists
mov
pop
in
stos
mov
pop
and
push
outsl
test
sbb
push
popa
inc
pop
sar
cmc
cmp
hlt
in
add
push
push
enter
cmp
cmp
and
cld
iret
cmpl
test
cmpsl
sub
add
lret
sbb
insb
cmpsb
sub
mov
and
push
pushf
mov
pop
pop
or
loopne
add
lods
pop
pop
push
imul
arpl
pop
jae
mov
in
jns
or
push
jg
mov
mov
push
out
or
mov
ja
push
test
rcrl
clc
ret
pop
jge
jns
mov
mov
add
mov
jle
incl
stc
enter
repnz
xor
das
add
popa
and
stc
iret
call
sub
adc
test
sbb
mov
int3
das
int
inc
mov
daa
pop
ftst
and
jb
aam
test
inc
mov
aaa
xorb
lods
cltd
data16
aad
inc
mov
xor
xchg
out
pop
shl
incb
xor
repnz
mov
and
mov
lds
rorl
or
out
add
add
mov
inc
inc
mov
mov
mov
push
cmp
lock
inc
ss
outsl
inc
pop
cmc
inc
shrb
out
rorl
and
dec
adc
mov
add
ljmp
mov
pop
clc
cmp
fbstp
add
xchg
adc
daa
push
stos
sub
cwtl
insl
inc
pop
cmp
mov
outsb
cmp
pop
dec
jg
shll
xchg
movsb
jne
add
in
pop
dec
mov
add
push
push
pop
fwait
cli
in
dec
sbb
inc
xor
fbld
inc
fdivrp
cltd
or
sbb
loopne
push
cmp
ss
idivl
xchg
sbbl
aad
or
into
enter
sbb
xchg
and
mov
mov
in
add
lret
add
and
call
std
mov
inc
add
movsl
cmp
lods
lea
test
fwait
add
pop
popa
addr16
pop
xchg
xor
dec
fmulp
push
xchg
test
in
icebp
cmp
iret
mov
bnd
add
loop
jp
pmullw
adc
ss
mov
push
cmpsb
mov
jle
push
xor
pushf
fstps
sbb
dec
out
in
into
jg
mov
jae
mov
inc
and
les
pop
xor
xor
jo
inc
adc
int
nop
push
mov
jnp
push
jp
dec
sbb
xor
std
jo
loope
daa
mov
xchg
or
cmp
lcall
push
xchg
mull
lock
scas
sbb
aas
mov
jno
sti
adc
sarb
fistl
push
xor
or
xor
out
loopne
sub
sub
out
and
inc
xor
test
mov
sbb
jbe
sub
mov
icebp
adc
sbb
jno
xlat
js
push
or
lock
adc
xlat
mov
cmc
cld
fists
hlt
pop
jecxz
insb
addl
mov
mov
or
sub
stos
mov
cmp
icebp
pop
add
jne
xor
das
pop
mov
mov
clc
mov
mov
rcrb
ja
or
jle
repz
cs
mov
ljmp
mov
or
mov
mov
jecxz
dec
jl
jle
aam
aam
scas
dec
xor
ret
xchg
js
jnp
test
je
or
shrl
test
mov
call
sarb
inc
push
test
sub
popa
push
shl
femms
mov
xor
cmp
mov
in
inc
sub
nop
imull
icebp
xor
and
sub
jbe
leave
jbe
mov
sbb
cld
cmp
xchg
jnp
xor
and
js
fadds
push
cmp
mov
mov
jmp
shrl
scas
js
sbb
imul
clc
jg
jecxz
out
mov
pop
adc
dec
xchg
inc
fisttpl
or
es
icebp
or
sbb
notl
into
pop
fucomip
inc
aaa
mov
pushf
mov
fs
lock
inc
jns
sbb
mov
sbb
inc
imul
xchg
divl
ffree
sbb
pusha
xchg
insl
into
mov
adc
jge
jecxz
jp
sub
fisubl
scas
test
cmp
pop
daa
pop
cmp
insb
adcb
rolb
idivl
test
arpl
popf
adc
or
mov
lods
pop
jle
imul
rolb
pop
fwait
jno
pusha
pop
dec
pop
idivl
push
imul
sarb
or
lods
sbb
xchg
out
sbb
sbb
out
shll
in
xchg
push
inc
dec
lods
sub
sar
sbb
pop
mov
mov
pop
mov
aaa
pop
fsubs
mov
push
and
sbbl
movb
std
fsts
sbb
or
out
out
mov
adc
push
mov
mov
xchg
mov
lods
nop
lcall
shrb
jge
ficomps
xor
adc
or
xor
into
fs
inc
test
xlat
ror
push
mov
mov
fimull
push
sahf
inc
stc
xchg
inc
adc
lods
pop
outsl
sbb
inc
les
mov
sar
jmp
dec
in
sub
mov
cmc
jecxz
push
notl
inc
cltd
lods
scas
dec
or
adc
out
mov
push
or
xor
ret
add
jo
pop
cmpsb
popf
and
int
fidivs
or
sbb
jge
xchg
outsb
aam
inc
out
push
pop
pop
xchg
dec
jmp
or
add
lret
in
insb
movb
mov
pop
insl
cmpsl
dec
xchg
mov
fiaddl
std
and
aas
subb
les
cmpsl
or
shl
mov
add
xchg
lock
inc
sahf
in
hlt
or
ja
sbb
cmp
mov
sbb
sti
push
xchg
out
std
push
mov
loopne
or
outsb
add
mov
loopne
dec
xchg
and
cmp
mov
push
lret
addb
xor
mov
add
jb
test
inc
mov
int
inc
insb
inc
dec
sub
dec
cltd
xor
sub
cmp
insl
mov
or
adc
sub
jns
out
repz
fisubrl
cmp
mov
testb
out
inc
mov
sbb
test
not
mov
xlat
shrb
mov
cmpsl
pop
loope
jmp
repz
jae
sub
xchg
ja
jae
dec
icebp
inc
sub
push
pop
mov
cli
out
push
in
mov
pop
out
gs
push
push
jecxz
push
fcoml
cmp
sbb
adc
dec
inc
js
pusha
and
or
popa
xor
out
mov
pop
pop
rorl
sbb
and
jnp
shrl
cmp
in
sahf
inc
loop
sbb
xlat
js
mov
subl
int3
push
xor
fmulp
or
and
xchg
xchg
jmp
cld
stos
jno
mov
idivb
mov
ja
stc
aam
and
cltd
lds
popf
dec
stos
popf
scas
push
or
jl
sub
frstor
or
subb
or
gs
add
sub
adc
lea
ret
punpckhbw
cmp
xor
dec
pushf
or
adc
pusha
adc
in
adc
jp
flds
push
pop
and
and
jne
andl
std
cmp
out
mov
imul
add
dec
std
aam
insb
lds
stos
cli
mov
xor
sub
jbe
imul
fdivrs
icebp
lods
mov
repz
xor
jns
aas
out
scas
out
out
sub
mov
ja
adc
xlat
pushf
jg
sub
pop
in
fiaddl
shlb
adc
pop
fisubs
iret
push
sbb
arpl
aad
in
sbb
movsl
mov
push
xor
xchg
push
mov
mov
ficompl
mov
out
jg
push
inc
outsb
and
ja
add
xor
mov
and
mov
fmuls
jecxz
mov
loop
jo
lret
int
scas
fistpl
and
jge
cmp
mov
and
dec
jle
xchg
mov
mov
das
jo
fdiv
jnp
insb
roll
mov
js
sub
test
xor
mov
fstpt
adc
mov
das
das
decb
daa
adc
jnp
add
or
push
clc
push
sbb
or
aam
inc
add
or
jg
call
int3
adc
jg
mov
xchg
xlat
cld
lcall
nop
jge
subb
mov
adc
xchg
in
adc
shr
jg
aam
jne
mov
decl
pop
sysret
pop
push
cltd
push
mov
out
loope
stos
jle
push
stc
mov
jnp
xchg
popa
pop
imul
or
sahf
xor
or
popa
lea
out
push
sub
out
in
inc
dec
insl
popa
sti
notl
cmp
pop
push
push
jnp
mov
xchg
cmpsb
or
aad
in
inc
adc
sub
into
pop
cmpb
int
in
xor
push
adc
js
repz
or
pop
mov
push
rclb
sub
test
dec
rcrb
push
aas
and
or
leave
cmp
pushl
and
pop
mov
cmp
js
push
cmpsl
das
shrb
sti
cld
ret
adc
cmpsb
inc
sbbb
adc
mov
jle
out
andb
adc
out
idivl
js
orl
fcomps
pop
outsl
loopne
dec
lds
hlt
movsl
flds
inc
sbb
cwtl
push
xchg
adc
jbe
mov
adc
movsb
lcall
push
rolb
push
cs
decb
fstp
push
movsb
push
int
push
or
mov
fdivs
mov
dec
mov
es
repnz
sub
cmovbe
pop
orb
xsaveopt
inc
dec
cld
icebp
test
test
sti
dec
pop
adc
inc
inc
mov
xor
adc
jmp
fists
addr16
aam
iret
xchg
inc
mov
hlt
nop
xlat
aaa
insb
inc
push
stc
jns
cld
out
ja
pushf
add
push
jecxz
jg
inc
push
jp
movsl
xor
adc
cmp
test
inc
sti
xchg
dec
mov
cs
mov
mov
jl
fstps
int3
ljmp
mov
mov
and
rcrb
mov
andb
jb
push
add
in
test
xor
xchg
mov
loop
or
cmpsl
lcall
jge
int
add
xlat
inc
jbe
fadd
in
xor
inc
loopne
shr
sub
rol
ret
cld
packssdw
sub
xchg
jae
jns
daa
cltd
bound
into
outsl
cli
and
loopne
xor
jp
insl
mov
lret
test
movsl
jge
or
and
je
repz
mov
rol
fldl
pop
test
lock
icebp
les
mov
aam
cwtl
mov
mov
shr
lcall
sub
out
mov
pop
imul
pop
loope
and
jle
fwait
mov
xchg
in
cmc
xlat
push
ss
xchg
pushf
or
and
adc
push
imul
cld
faddl
xchg
mov
mov
or
outsl
adcl
xchg
lahf
dec
outsl
icebp
movsb
xchg
es
cmp
jp
xor
rorb
mov
jge
lods
mov
cmp
xor
ja
insl
repnz
push
lock
es
or
and
leave
mov
test
cmpsl
and
shl
addr16
push
imul
mov
into
sbbl
mov
lea
add
adc
pop
adc
push
add
mov
call
leavew
xchg
inc
jcxz
cmp
enter
pop
sarl
mov
popa
jmp
xchg
sbb
sbb
sub
mov
out
inc
test
ja
and
jb
jo
mov
xchg
xor
jle
sub
aad
push
adcb
mov
imull
clc
mov
mov
mov
cmp
jecxz
cmp
mov
cli
enter
lods
or
lea
lock
dec
fidivl
mov
dec
push
leave
bound
jno
jle
call
dec
call
pop
xlat
fisubrs
push
ljmp
add
movsb
rol
jecxz
xchg
sbb
xor
mov
mov
mov
rcr
daa
popa
add
pop
xor
pushf
adc
and
cs
mov
inc
addr16
rcl
int
xlat
mov
sbb
add
daa
jnp
fsubs
xlat
xor
mov
sbb
clc
das
cmp
fstpl
jl
cmp
adc
and
repz
test
aas
repnz
insb
lods
rclb
xchg
jnp
lods
aaa
fsubrp
idivb
xchg
mov
adc
jno
es
mov
icebp
inc
shrb
sub
sbb
in
mov
inc
scas
jge
inc
dec
jle
push
addb
rcrl
enter
sbb
in
mov
pop
push
test
adc
mov
mov
sub
arpl
std
repnz
ja
out
arpl
js
adc
inc
rclb
bound
cmp
inc
into
pop
and
ss
fs
xchg
add
in
outsl
lock
mov
lret
pop
or
ljmp
in
xlat
push
mov
and
filds
mov
jns
xor
xchg
data16
adc
sarb
hlt
aaa
ss
add
test
inc
or
add
aaa
inc
repnz
out
xchg
cmp
xor
pop
inc
pop
lea
jg
pop
and
mov
dec
jmp
aas
push
lds
push
pop
mov
sbb
std
stc
enter
sbb
loope
aam
in
fstps
fucomp
sub
idiv
stos
loope
mov
push
filds
rorl
sbb
aaa
sarl
lods
mov
sahf
daa
mov
cmp
mov
rorl
out
jg
sbb
repnz
popa
jno
cli
inc
mov
pop
xor
jmp
daa
sbb
sub
aad
jne
xor
inc
in
int3
jecxz
dec
stos
lret
pop
jp
dec
pusha
jae,pt
icebp
fnstcw
orb
and
lahf
les
inc
popa
cmp
inc
aam
aaa
test
in
dec
arpl
jle
sbb
fstpt
outsl
and
push
push
popl
jne
mov
mov
push
imul
mov
pop
inc
dec
dec
ss
sbb
inc
pop
hlt
int3
adc
push
xor
aas
clc
add
mov
xor
push
test
adc
aas
roll
loopne
mov
cli
popf
popl
jae
out
shll
jne
adc
leave
adc
adc
enter
cmp
lahf
inc
jae
into
out
xor
pop
pop
dec
in
adc
into
icebp
xor
imul
jb
jnp
pop
mov
enter
arpl
and
hlt
or
mov
incl
pusha
push
cmp
cmp
cltd
pusha
add
xor
aam
loope
rol
or
inc
mov
rolb
mov
xor
outsl
mov
aas
shll
mov
jns
in
loop
test
fnsave
jg
pusha
push
popf
adc
push
bswap
je
inc
xor
bound
push
xchg
adc
mov
inc
mov
dec
xchg
jecxz
mov
mov
push
jmp
lret
test
xor
xchg
mov
dec
mov
pushf
lock
ret
inc
lret
mov
pop
ret
push
xchg
dec
out
popf
insb
pop
push
lret
xchg
cltd
int3
jmp
cmp
xor
aas
add
xchg
popl
mov
or
call
pop
shrl
and
mov
xor
int
popa
jae
and
repz
mov
dec
xlat
shll
lret
cmpsl
mov
pop
add
mov
inc
push
lds
into
and
shl
imul
sbb
push
and
lret
lcall
and
xchg
clc
jb
adc
mov
addr16
xor
push
fwait
xor
jnp
jbe
pandn
inc
repnz
xor
dec
jbe
inc
push
mov
into
sub
adc
mov
xchg
xor
xor
cmc
sbb
jg
in
pop
movsb
fprem
movswl
nop
bound
cmp
out
int
scas
push
test
sarl
sbb
xor
out
mov
test
leave
idivb
mov
scas
shll
pop
sbb
out
dec
inc
icebp
add
push
dec
cmpsl
repz
mull
cmp
arpl
add
dec
jo
adc
leave
ss
push
mov
push
sbb
cmp
adc
test
mov
or
or
mov
sbb
xor
or
mov
mov
int3
xchg
adcl
sbb
loop
mov
or
mov
mov
iret
or
mov
xor
cmp
dec
fwait
xchg
inc
sbb
scas
dec
dec
add
ss
cmp
loopne
mov
es
hlt
pushf
dec
lock
push
add
fucomi
mov
lahf
mov
push
std
popa
in
inc
pop
xor
push
and
dec
cld
bound
scas
xor
adc
inc
jnp
int
out
mull
dec
or
mov
rol
push
add
xchg
popa
sbb
rcrb
int
or
enter
mov
push
and
mov
mov
sbb
ja
cmpsl
scas
into
dec
popa
xchg
cmp
mov
dec
push
xchg
fwait
and
add
pop
rcrb
ror
pop
sbb
repz
lahf
pushf
inc
cltd
pop
loope
fisttpl
repz
shrl
ret
jecxz
insl
adc
test
adc
inc
or
cmc
scas
push
outsb
pushf
and
leave
stos
mov
hlt
icebp
cmpb
cmp
mov
popa
cmp
js
les
testb
jo
gs
nop
mov
jns
fcomps
fstpt
js
sub
mov
pop
xor
mov
push
sbb
nop
mov
bound
ja
sbb
mov
pop
test
sub
daa
inc
into
test
sbb
pop
adc
pop
sbb
adc
jo
cli
rcll
pop
jl
xchg
adc
push
outsl
fadds
jmp
add
lods
aas
jns
sub
je
jg
nop
aas
push
cmp
push
mov
cmp
xchg
push
cmp
nop
lock
xchg
push
jno
or
cmp
jo
imul
xchg
add
add
das
int
xchg
inc
mov
or
xchg
mov
sbb
test
std
jne
fcmovne
ffreep
dec
cs
scas
int
and
xor
push
jmp
xor
or
pop
jl
xchg
arpl
lret
frstor
bound
mov
movsb
mov
in
pop
das
push
xor
rclb
mov
dec
outsb
mov
cmp
es
imul
lret
outsl
fistps
lods
in
mov
mov
movsb
mov
arpl
dec
cmp
insb
arpl
dec
inc
sub
or
jns
jge
pop
outsb
push
mov
fstps
jl
mov
mov
xor
mov
addr16
cmp
sub
pop
jno
sbb
mov
enter
fs
les
jecxz
rolb
pop
dec
cmp
icebp
shll
dec
jns
stc
mov
mov
cmp
outsl
movsl
push
jle
sar
cmp
mov
jl
cld
jle
insl
pmaddwd
fwait
mov
sbb
insl
push
int
aad
mov
pop
or
fs
xor
jns
std
popf
idiv
outsl
out
pop
mov
dec
repnz
inc
sub
sahf
cwtl
fidivrl
insl
sub
les
dec
sub
mov
pop
ljmp
leave
adc
mov
insl
repz
and
cs
pop
sub
ss
ficoms
mov
pop
dec
xchg
insl
dec
xchg
jl
pop
and
mov
dec
mov
pop
or
inc
andb
sub
rcl
loop
adc
xchg
lea
mov
xchg
pop
cmpsb
sbb
outsb
das
imul
sbb
or
adc
push
pop
pop
jle
adc
xchg
ljmp
mov
sbb
mov
cs
adc
xchg
pop
xor
add
sub
stos
adc
es
lret
jns
out
imul
int
lock
adc
mov
leave
clc
inc
xor
jecxz
int3
push
call
out
fisubs
lcall
lods
sbb
mov
hlt
jg
stc
xchg
sbb
lods
jae
cmp
sbb
enter
pusha
mov
fldt
and
in
ret
push
lods
or
xor
shld
pop
std
mov
cmp
jecxz
push
mov
cs
and
in
jle
mov
rol
adc
nop
sub
idivl
movsl
fwait
je
stc
lock
xchg
push
lods
jo
sarb
pop
xchg
push
testl
xor
pop
shlb
add
scas
loope
and
lea
xor
icebp
push
ficompl
clts
nop
sub
loopne
roll
int
mov
in
push
outsb
push
arpl
in
jb
jno
repnz
pop
jl
push
pop
psubsb
jmp
lock
negl
jecxz
push
in
cld
inc
iret
and
fistpll
out
daa
or
repz
and
dec
fwait
push
inc
je
pop
xchg
dec
insb
std
into
es
das
ficomps
xchg
xchg
nop
dec
and
sbb
cmp
idiv
leave
arpl
mov
cmp
mov
into
xchg
pop
cwtl
rorb
adc
jb
pop
mov
rcrl
add
jp
addr16
int3
pusha
push
inc
jmp
mov
xchg
mov
xchg
and
xchg
in
dec
leave
stc
lcall
jae
push
cmpb
cli
ret
dec
jle
xchg
out
shll
shlb
xchg
cmp
leave
or
sub
or
movsl
sbb
call
mov
mov
xchg
dec
inc
mov
incl
clc
sarb
repnz
xchg
repnz
adc
dec
and
and
fcomip
jge
pushf
or
push
pushw
enter
mov
imul
inc
push
leave
inc
jecxz
sar
ss
inc
imul
cmc
cmpsb
icebp
push
or
push
xor
dec
daa
add
inc
dec
and
das
mov
and
push
and
out
push
jo
or
add
ds
xor
and
pop
xor
scas
out
push
jns
jnp
repz
jns
sbb
ja
test
loop
into
movsb
out
test
mov
jecxz
jbe
ljmp
cwtl
rolb
add
stos
add
xor
mov
dec
scas
loopne
adc
cmp
mov
xchg
loopne
loope
sub
daa
pop
je
movsb
mov
fisttpll
push
pop
pushf
pop
push
popa
mov
xchg
pop
into
cmp
in
je
jnp
enter
mov
nop
addr16
out
push
repz
out
mov
in
pop
out
test
cmp
jbe
pop
cli
jg
xor
jb
mov
aaa
dec
pop
aas
fmul
scas
push
sahf
mov
dec
jge
sub
xchg
add
lahf
mov
jo
and
sub
xor
inc
fs
lods
or
addr16
fiaddl
lods
ret
scas
roll
cmp
push
inc
in
fcomps
scas
and
mov
dec
add
ss
cmpsb
icebp
cmpsl
jl
pushf
push
xchg
rol
jb
dec
movsl
and
xchg
lea
hlt
das
mov
jecxz
or
mov
mov
pop
xchg
idiv
hlt
pop
rcrl
add
jns,pt
xchg
adcl
movsb
push
in
dec
jno
fnstenv
mov
push
mov
inc
roll
int3
outsb
add
jbe
movswl
call
cmp
push
bound
leave
lds
insb
aad
ss
cmp
cmc
mov
js
xchg
std
pop
stos
and
ret
fwait
into
cmp
push
lahf
call
mov
lahf
jl
sub
sub
or
mov
mov
sbb
movl
iret
fidivrs
push
mov
nop
in
jmp
movsb
sbb
mov
adc
aaa
out
mov
push
sbb
stos
inc
clc
push
cmp
mov
sbb
out
xor
movsl
xchg
or
push
sbb
ret
icebp
cmpsb
push
xchg
rcrl
les
mov
pop
ficoml
mov
movsl
mov
sbbb
loopne
and
add
mov
and
jle
xchg
icebp
xor
push
adc
jmp
jno
adc
aam
jne
and
mov
daa
pop
sub
xor
je
int
dec
pop
cmc
out
movsl
adc
sub
mov
pusha
out
or
lods
je
xlat
xor
rep
repnz
insb
mov
cli
lock
leave
sbb
adc
jg
push
loopne
movsw
add
andl
call
add
aaa
pop
lock
add
lret
jle
scas
testb
mov
jnp
inc
or
pusha
xchg
jle
ret
jmp
test
cmp
xor
push
add
iret
insl
xor
inc
shr
out
push
inc
push
cld
sub
lods
adcl
sbb
dec
push
repnz
outsl
adcb
add
je
push
hlt
maxps
imul
cli
fdivl
mov
dec
adc
mov
inc
mov
push
test
push
adc
loope
mov
rolb
aad
sbb
sub
pop
test
xor
cmp
dec
jo
insb
push
sti
sub
mov
mov
push
jmp
cmp
dec
add
leave
add
fdivs
pop
mov
mov
repnz
insb
stos
lock
dec
mov
adc
jl
sbb
rcr
ret
loop
cmpsl
ss
sub
adc
jbe
push
adc
fsubr
icebp
sbb
arpl
push
add
push
fwait
mov
shll
gs
jbe
flds
fsubs
pop
movsl
pop
add
jns
push
out
push
bound
aam
mov
sbb
loope
pop
rorb
pop
xchg
xor
push
pusha
sub
data16
cs
jbe
orl
fdivrl
mov
add
sbb
push
push
fwait
stos
inc
adc
inc
add
idivb
addl
sarl
sbb
and
pop
arpl
cmpsl
cmpb
fnstenv
or
outsl
sbb
cmp
sub
repz
dec
lret
xchg
cli
push
sahf
or
jge
jge
daa
cld
mov
cmp
xor
je
mov
fisttps
mov
lcall
pop
jb
and
push
sub
pop
test
mov
mov
mov
push
ss
lahf
and
std
enter
out
xchg
sti
mov
lret
cmp
movsb
mov
inc
mov
movsb
fnstsw
sbb
pusha
incw
data16
adc
and
mov
fwait
xor
and
mov
insb
push
or
fsubl
jg
lods
push
mov
adc
sbb
dec
fidivrl
mov
mov
lods
or
idivb
sub
lret
dec
mov
sar
mov
mov
mov
dec
push
dec
cmp
subl
fnstcw
mov
push
pop
ss
mov
and
adc
mov
pusha
sub
pop
push
or
movl
xchg
icebp
nop
mov
lret
jle
jns
pop
or
lds
scas
sbb
lock
adc
cmp
push
sahf
mov
enter
and
pop
xchg
push
ss
pop
jo
icebp
push
mov
mov
mov
div
pop
imul
sti
xchg
inc
rcrb
push
mov
aad
push
dec
pusha
jle
xor
mov
movsl
idivl
pop
pop
cltd
movsb
inc
fisubs
dec
adc
dec
jle
cmp
lods
mov
pop
jnp
inc
mov
mov
or
aad
shl
imul
jmp
loope
adc
ljmp
adc
inc
in
push
sbb
cmc
mov
xchg
pop
push
ljmp
outsl
xchg
jg
out
sub
mov
xlat
cmp
push
jp
rcrl
sub
lea
mov
pusha
inc
dec
sbb
fwait
js
addb
or
mov
adc
frstor
jecxz
mov
push
ss
stos
cmp
xor
jb
adc
jbe
cwtl
mov
iret
out
fisubl
hlt
fisttpl
mov
jb
inc
je
add
mov
xchg
mull
cmovg
cld
daa
in
cmpsb
js
not
test
cmp
and
inc
pop
inc
jnp
lea
push
push
add
out
loope
dec
sbb
xchg
push
gs
rcr
bound
fs
cld
insl
pop
pop
jecxz
mov
mov
pop
inc
jg
rorb
sub
xchg
test
xchg
sub
test
push
ret
add
sub
iret
ja
gs
notl
jbe
mov
push
rcrl
jmp
fs
pop
pop
dec
test
insb
or
ret
adc
sub
sub
mov
jb
jecxz
fwait
dec
xor
mov
pop
in
xchg
or
stc
sub
int
mov
xchg
sub
sbb
pusha
jmp
xchg
sub
and
aam
push
or
mov
clts
movsb
mov
mov
das
lds
mov
inc
jmp
mov
and
inc
xchg
sbb
mov
xchg
je
test
mov
dec
test
jge
stos
mov
movsl
and
pop
rcrb
jae
or
inc
sbb
inc
sbb
sti
sub
sbb
sbb
push
or
and
sbb
mov
jle
pop
aaa
fnstsw
pop
shlb
movsb
out
shlb
fsubl
xor
addr16
sbb
mov
icebp
jo
leave
hlt
stos
pop
push
jecxz
dec
sbb
mov
xlat
shrl
pop
shlb
lret
scas
shrb
push
pop
shrl
sbb
lahf
daa
pusha
cmp
lock
daa
push
jnp
cs
cmpsb
xchg
mov
leave
xor
enter
pushf
rolb
jae
push
dec
repz
mov
sub
aad
rolb
pop
inc
js
mov
dec
xlat
pop
fbstp
xor
xchg
sbb
data16
and
sub
xchg
je
cld
push
stos
push
repnz
movsl
cltd
cmp
sub
data16
out
insl
pusha
dec
lds
subl
and
cs
inc
repnz
sbb
push
xchg
push
and
loopne
mov
addr16
ja
rorl
inc
roll
inc
sbb
arpl
pusha
popf
fsts
pop
hlt
out
scas
mov
mov
xchg
inc
jae
imul
iret
add
rcrb
cmp
out
lea
and
mov
mov
xchg
pushf
in
or
mov
call
out
push
adc
jo
mov
sti
test
mov
xchg
or
aad
sbbl
mov
test
or
jmp
inc
aam
mov
dec
out
lret
mov
mov
cmp
lahf
pop
xchg
cmp
dec
push
outsl
arpl
xchg
enter
cmp
pop
out
xchg
std
in
adc
mov
jb
add
cmp
cmp
subl
jle
jnp
mov
push
dec
cmp
out
sarl
mov
adc
dec
stos
push
ret
int
ds
inc
sar
stc
cmp
insb
xchg
dec
mov
lods
and
scas
xchg
xchg
pop
mov
pop
adc
mov
dec
mov
adc
leave
sti
out
lock
clc
icebp
stc
std
jl
mov
icebp
rcrb
orb
filds
or
mov
adc
mov
std
icebp
add
add
push
xchg
notb
cmp
stos
sbb
dec
in
out
imul
dec
mov
fadds
dec
xchg
fstl
pusha
call
gs
mov
or
in
sub
movsl
leave
sbb
mov
pop
xorb
mov
add
shll
stos
xchg
out
mov
aas
xchg
dec
mov
adc
sbb
adc
mov
jg
aam
push
and
add
mov
xor
lcall
xor
cmpsb
xchg
lcall
dec
scas
xchg
lds
jle
test
ficompl
in
mov
dec
into
jbe
stos
jnp
fimuls
pusha
mov
mov
push
test
jmp
xchg
mov
jno
mov
rclb
dec
jo
mov
or
push
inc
cld
test
push
imul
stc
cltd
mov
aad
jg
jecxz
jle
imul
aas
sbb
adc
dec
lret
mov
mov
movb
js
mov
out
inc
out
mov
sbb
pop
out
sub
mov
bnd
cwtl
inc
jmp
mov
jp
cmp
clc
pop
sub
mov
int
xor
mov
lea
and
pop
pop
cmp
sbb
xor
xor
in
sub
movsl
sub
out
xor
mov
inc
test
mov
lock
enter
imul
rolb
xchg
loopne
mov
xor
rcrb
loopne
mov
jg
sub
in
sbb
cli
mov
repnz
sub
mov
out
inc
ret
test
ret
mov
mov
adc
test
xchg
out
adc
mov
sub
push
bswap
mov
xchg
pop
in
js
out
or
mov
mov
popa
dec
lds
sbbb
in
mov
or
mov
mov
inc
jb
xchg
fs
and
cmp
add
arpl
jmp
add
adc
mov
cmpsl
call
add
mov
stc
jnp
fbld
xor
sar
push
sbb
cli
or
insl
pop
jno
xchg
or
repz
xchg
cmp
mov
mov
mov
mov
sub
add
xchg
leave
sub
xor
mov
mov
inc
xchg
xchg
roll
adc
idivl
repz
incl
shll
jo
sub
xchg
insb
loope
int
and
mov
sbb
jmp
pop
stos
out
pop
or
je
and
lods
mov
cmpsl
xchg
cmp
push
push
test
dec
xlat
fwait
cmp
jg
icebp
ss
xchg
or
inc
jnp
sti
rclb
mov
in
aaa
aad
mov
sbb
add
sbb
xchg
pop
mov
mov
lahf
ja
out
adc
jp
xchg
ficompl
lea
mov
push
arpl
and
lock
add
clc
mov
cmp
add
push
sbb
add
mov
adc
and
repnz
sub
xlat
mov
rclb
addr16
stc
cmc
aas
mov
mov
adc
sbb
mov
sti
pop
sbb
push
jg
insb
rcr
jbe
rorb
dec
js
pushf
push
mov
jns
cli
dec
out
icebp
dec
jmp
pusha
xor
xchg
sub
daa
mov
stos
inc
adc
jg
andl
mov
psubq
cmp
xchg
mov
mov
sbb
ret
xlat
cmpb
fisttpll
fnstcw
icebp
push
cmp
pop
pop
push
lock
jnp
sub
cmpsb
xchg
lods
inc
mov
jns
movsl
mov
ret
scas
cld
or
adc
testl
inc
sub
mov
push
adcb
movsb
xchg
enter
iret
mov
sub
or
jae
mov
xchg
jbe
mov
ret
xchg
cmp
cmp
dec
mov
nop
mov
jl
xchg
or
inc
insb
cli
test
ds
push
repz
fadds
rol
aaa
xor
aaa
pop
mov
sti
arpl
sbb
add
out
push
mov
inc
push
test
mov
xor
or
mov
call
mov
hlt
test
lock
clc
push
pop
push
push
mov
mov
ficompl
mov
inc
ljmp
jle
xor
repz
repz
or
dec
inc
mov
ljmp
sahf
jmp
xchg
leave
std
idivb
xor
mov
adc
cmpb
lock
in
gs
xor
sbb
push
rcr
std
and
jns
push
pushf
mov
fadds
push
mov
shll
sub
ja
jno
insb
stos
hlt
push
int3
mov
les
in
mov
or
mov
aas
pop
jbe
orb
mov
out
leave
stos
mov
xchg
push
in
jl
cli
out
mov
mov
pop
mov
lods
xor
inc
cmc
mov
ficompl
int
adc
and
decb
scas
adc
out
mov
sarl
mov
xchg
imul
mov
jae
das
out
cltd
cmp
mov
or
push
jmp
sbb
rorb
or
jne
jmp
andb
dec
negb
add
stc
mov
mov
adc
ret
lret
mov
ja
stos
push
add
adc
pop
idivb
add
inc
js
pop
push
cli
loope
mov
jmp
mov
leave
repz
dec
push
test
xchg
add
adc
sahf
jns
ja
jl
mov
xorl
jle
jb
sbb
mov
add
fst
dec
push
fstl
jne
int
loop
and
stos
jae
incb
xlat
mov
sbb
js
cmp
ds
xor
mov
jmp
cwtl
out
stos
jae
cltd
loop
lods
cmc
clc
imul
xchg
aaa
enter
lods
stos
add
scas
cmc
mov
scas
or
xchg
aaa
test
push
rorb
test
out
push
test
xchg
or
cwtl
flds
push
adc
enter
mov
xchg
dec
fwait
add
xchg
lods
mov
mov
insb
push
mov
lea
outsl
ficompl
out
cld
lds
outsb
adc
stos
je
pop
hlt
and
and
xor
inc
lods
aad
sub
mov
add
out
not
pushf
push
sub
jp
cli
add
popa
xchg
push
sbb
cmc
mov
in
inc
xlat
mov
das
mov
repnz
fmull
fldenv
in
mov
lods
mov
sbb
lods
imul
jo
hlt
mov
test
shlb
mov
dec
mov
into
cmp
mov
popf
scas
xchg
mov
mov
sbb
dec
inc
adc
movswl
mov
and
dec
sbb
push
or
scas
pop
in
mov
gs
cmp
add
mov
lock
loope
ja
ja
push
mov
rcrb
cmp
stc
rorb
jecxz
mov
xor
ret
fldt
xor
dec
adc
imul
push
adc
mov
sahf
mov
cmp
pusha
dec
rclb
int3
out
jmp
and
outsl
daa
mov
push
in
call
sbb
js
je
xchg
ret
xor
std
xchg
dec
push
jne
pop
mov
sub
clc
and
mov
cmc
cmc
data16
or
insb
fucom
shlb
cwtl
lods
test
out
xor
lret
cwtl
lahf
or
in
pop
adc
sbb
sbb
xchg
out
jae
pop
cmp
jmp
shlb
je
jecxz
repz
pushf
inc
ror
adcl
loopne
pop
or
or
movb
popf
mov
ret
js
into
outsl
pop
jns
daa
sbb
movsb
mov
cmp
lahf
ret
into
cs
es
lret
cmpsl
pushf
out
test
rcll
pop
mov
push
fstl
shlb
mov
rorl
adc
ss
dec
dec
bound
cmp
arpl
pushf
iret
nop
mov
movl
and
cmp
xchg
sbb
push
int
fsubrs
fidivl
push
mov
jno
stos
sbb
in
lea
sbb
out
cmp
adc
sub
pop
inc
lock
xchg
lods
fisubrs
out
sub
out
ss
outsb
xor
jae
std
cmp
mov
popa
mov
arpl
sbb
nop
daa
addr16
pop
sub
js
cmp
push
movsl
movsl
xor
dec
xchg
add
xchg
cmc
mov
rorl
jmp
adc
fisubrs
js
aad
leave
pusha
sbb
push
aas
and
fs
push
push
xchg
or
inc
inc
ja
mov
cs
sbb
push
nop
pop
leave
cmpsl
cli
in
jbe
andl
xor
out
or
fcmovbe
test
lods
jecxz
sti
std
fwait
adc
pop
lds
hlt
nop
push
lods
jne
jmp
pushf
hlt
dec
das
push
orl
imul
or
outsl
orb
ja
push
inc
leave
lds
push
sbb
jb
jb
xchg
and
and
xor
lcall
jge
jnp
shr
adc
sbbb
shrl
lds
or
jbe
adc
clc
xchg
enter
dec
adc
cmp
loope
push
sub
cmp
inc
adc
pop
jp
pop
pop
gs
pop
adcb
in
jl
lcall
stc
pushf
in
out
mov
scas
and
hlt
xor
mov
add
cltd
adc
or
mov
subl
sti
and
xchg
add
shl
xorl
mov
lods
popa
mov
aam
xchg
int
movsb
stos
push
jl
stos
sar
push
push
mov
std
imul
xchg
add
xor
iret
test
xor
or
xor
cwtl
in
xchg
int
mov
out
ja
sub
dec
xchg
adc
mov
push
xor
mov
aad
jne
lcall
movsl
push
add
xchg
les
push
ja
fistps
mov
and
leave
lret
cmpsb
inc
fs
out
fistpl
icebp
sub
pop
or
jb
out
ret
dec
ljmp
push
enter
shll
je
in
sub
and
mov
cwtl
mov
sarl
lret
call
sbb
sub
into
push
jbe
enter
ret
out
mov
ss
fistpl
out
xchg
leave
fs
and
in
imul
cmpsb
push
inc
into
aad
lods
das
fs
push
dec
movsl
mov
mov
popf
mov
mov
add
sub
mov
jae
and
insb
lret
addr16
dec
frstor
sahf
dec
inc
push
sbb
out
rcrb
xor
pop
in
in
sbb
out
pop
imul
jnp
xlat
push
pop
pop
fwait
pop
movsb
lods
in
pop
lahf
xor
mov
ret
jge
imul
inc
in
inc
jo
scas
push
push
inc
scas
cld
mov
dec
adc
pop
stos
mov
sbb
jp
hlt
repz
pop
ret
and
mov
ljmp
addl
std
rcrl
mov
sbb
pop
enter
repnz
xchg
das
movsb
or
pushf
mov
dec
inc
ret
adc
dec
je
pop
xchg
imul
ret
xchg
mov
or
jnp
xchg
stos
adc
popf
fstl
sub
int
and
shl
repnz
sub
sbb
xchg
lock
mov
dec
mov
lret
scas
push
es
mov
adc
cld
imul
das
push
mov
xchg
adc
fwait
popa
mov
pop
xchg
pop
cwtl
inc
cmp
fidivs
test
leave
fs
test
xchg
push
cmp
mov
cmpsb
ficompl
sti
push
int
out
out
mov
or
gs
dec
out
sub
stos
dec
inc
mov
aas
mov
mov
iret
stos
stos
mov
int
push
popf
int3
push
popl
iret
mov
rcrl
xor
xchg
mov
or
icebp
sbb
sub
push
push
inc
mov
pop
xchg
cmp
jle
insb
mov
icebp
dec
shr
xchg
mov
leave
test
stos
loopne
popf
dec
shlb
std
push
aad
mov
test
arpl
or
loopne
jecxz
fcmovnu
or
adc
ds
int
push
cmc
shlb
mov
mov
push
add
mov
jmp
sbb
test
movsl
cltd
dec
xchg
out
mov
pop
shlb
pop
int
imul
mov
xchg
outsl
jne
and
push
test
je
sbb
add
insb
daa
stos
jle
in
push
mov
sub
push
sub
dec
and
test
sub
jle
nop
mov
xor
xor
cs
mov
fbstp
test
cmp
aaa
jl
dec
jge
enter
aas
mov
xor
int
mov
or
sub
jae
adc
or
jnp
fildl
out
lock
xchg
jns
jmp
mov
leave
movsb
and
loop
imul
cmpsb
xchg
in
inc
xchg
push
mov
adc
ss
fwait
cmc
sbbb
pop
and
inc
rolb
lahf
jnp
shrl
loope
cmp
gs
mov
sbb
mov
je
sti
mov
ds
mov
in
xlat
out
xchg
add
imul
cmpsl
mov
aam
stc
pop
mov
push
xor
arpl
xor
xchg
loopne
in
lds
pop
sub
les
or
popf
push
inc
jg
xchg
popa
push
and
bnd
nop
cmp
push
push
stos
xchg
scas
sub
fisttps
clc
xor
jecxz
xor
or
mov
mov
mov
outsl
scas
xor
add
testb
jl
push
mov
rorl
stc
stos
negl
xor
div
repz
xor
sbb
xchg
lret
fstpl
mov
scas
xchg
cmc
sarl
add
out
sbb
or
in
jo
or
dec
push
inc
dec
in
movsb
push
scas
sbb
sub
test
jle
rcrl
push
push
incl
mov
je
ret
mov
xor
xor
std
incb
lret
icebp
fildl
in
push
xor
sbb
jae
enter
gs
daa
ss
push
jnp
fimull
add
or
ds
mov
mov
dec
add
adc
mov
ret
popf
jbe
dec
mov
in
xchg
pop
loope
or
xor
mov
iret
lcall
outsb
mov
sbb
sub
adc
pop
cs
ja
mov
or
jo
idivl
pop
jno
push
cwtl
mov
sbb
mov
or
jle
sbb
imul
fmull
pop
xchg
cmp
lds
pop
inc
push
aad
pop
add
lcall
arpl
pop
lods
cmpsl
sti
jmp
or
jb
les
out
inc
insb
cmp
add
in
repnz
andl
push
aaa
bound
js
negb
mov
push
pop
mov
jge
push
sbb
mov
pop
sub
jmp
lods
xchg
movsl
in
and
cltd
fsubs
xor
cli
cltd
mov
inc
popa
aas
inc
loopne
push
mov
xor
es
xchg
in
push
out
xor
stos
imul
pushf
sub
mov
mov
insl
mov
push
pop
add
cmp
shl
gs
mov
add
movsl
daa
cmp
ffreep
jbe
ljmp
aas
jle
and
repz
pop
pop
imul
scas
xchg
data16
or
sbb
xchg
adc
jmp
inc
mov
add
dec
cmpsb
inc
lock
sbb
es
xchg
ja
dec
and
imul
adc
clc
add
dec
fldt
push
into
sub
push
inc
sbb
pop
arpl
xchg
lret
rcll
and
movb
pop
fwait
mov
xchg
add
js
sbb
xor
pop
xor
je
mov
outsb
in
scas
shrl
les
arpl
cs
jbe
in
push
mov
pop
std
pop
xchg
data16
ja
add
pop
lcall
xchg
xor
xchg
call
lret
nop
cmpsl
cmp
popa
xchg
mov
mov
ror
adc
fs
push
lods
mov
stc
clc
adc
fisttpl
in
cmp
xchg
das
adc
ja
fldenv
popf
add
test
push
pop
and
ficomps
int
sbb
xor
cmp
insl
in
loopne
in
popl
sub
lods
dec
scas
stos
jp
fsubrs
dec
pushl
fcmovne
jne
xor
cmp
loope
pop
je
lds
push
push
pop
adc
mov
fld
imulb
jmp
sbbl
lock
popa
in
shlb
jns
nop
retw
push
icebp
cs
cmc
call
cmp
aas
jl
clc
adc
mov
ss
adcl
jne
enter
sbb
jp
push
pop
pop
pop
jno
xchg
fstpt
sbb
xchg
sarl
bound
enter
push
mov
inc
or
stc
bound
lahf
mov
xchg
arpl
test
sbb
pop
lret
cmp
mov
mov
int
or
pop
jle
inc
aas
inc
adc
mov
cmpsl
ljmp
repnz
test
xchg
xor
xchg
hlt
clc
cmpsb
aas
inc
or
addl
sub
int
daa
std
inc
push
add
in
int
hlt
mov
jns
nop
jle
ss
xchg
mov
inc
inc
push
ja
insb
int3
add
xor
jg
bound
cmp
fnstenv
pop
cmp
cmp
push
jno
div
sub
test
cmp
adcb
out
loopne
in
add
int
ds
sub
push
ja
test
ss
test
les
cmp
mov
stc
ret
fs
mov
in
mov
xlat
and
ja
rcrl
sub
push
rorb
add
imul
cld
addr16
jmp
lret
and
es
sahf
icebp
addr16
mov
xchg
mov
scas
pusha
leave
xchg
sub
sbb
call
inc
popa
das
imul
mov
dec
mov
sub
lods
mov
pop
iret
xchg
repz
mov
sub
ljmp
sbb
fstps
movsb
jg
es
stc
scas
insb
push
dec
fdivrl
cli
pop
mov
and
jb
jecxz
std
jbe
mov
jmp
cld
adc
fldcw
mov
stos
clc
mov
decl
subb
cwtl
aaa
icebp
sbb
fsubl
mov
fs
out
add
jmp
lcall
dec
orl
popf
mov
mov
inc
ss
test
out
mov
push
fbstp
mov
imul
lahf
dec
outsl
mov
mov
xchg
addb
sbb
push
pusha
aas
jno,pn
fdivrp
xor
nop
mov
cmp
lods
iret
gs
pop
xor
cmpsb
lret
sub
mov
add
cmp
xchg
ss
mov
jbe
jmp
jb
rcll
addl
jns
push
dec
ja
dec
mov
insl
fwait
lea
pop
and
int3
add
call
gs
mov
lock
sahf
hlt
in
in
mov
cmc
adcl
adc
or
cmpsl
lcall
dec
in
dec
adc
mov
push
add
test
dec
cltd
fsubs
ja
pop
jle
pop
push
sbb
daa
out
adc
xor
pop
arpl
mov
arpl
xor
scas
jle
inc
pusha
fnstcw
xchg
std
notl
fwait
jl
popf
or
mov
pop
ja
jbe
sbb
andb
jle
push
jb
push
jbe
inc
and
arpl
sub
or
xor
sarl
clc
push
loope
sub
pop
dec
inc
test
adc
jge
jb
push
decl
ljmp
and
lds
arpl
jb
push
clc
push
or
and
cs
sbb
daa
fldcw
sbb
pushf
fs
push
mov
sbb
outsl
cs
wrmsr
cmp
out
rep
sarb
pop
sub
push
test
mov
nop
fldt
fsubr
faddl
mov
shlb
movsb
test
imul
cmp
mov
insl
scas
mov
or
cmp
jb
nop
cmp
fwait
int
pavgb
fs
and
aam
repz
fiadds
pop
mov
bnd
jmp
xor
shlb
add
dec
inc
push
add
mov
jge
or
bnd
ficoml
fidivs
sub
dec
fdivrs
xchg
cmp
in
or
sbb
jge
enter
xor
loopne
push
sbb
cmpsl
inc
lcall
into
and
lahf
inc
sarl
aaa
cld
mov
xchg
pop
mov
pop
push
adc
ljmp
push
pop
in
inc
pop
cmp
fiadds
xchg
shlb
repz
les
xchg
or
jns
stc
test
or
xor
cmp
push
sub
sbb
sbb
mov
mov
scas
in
and
rcr
sub
repnz
ret
jo
test
or
xor
jg
std
lods
ret
sub
add
lea
fwait
xor
mov
push
jo
dec
cmovns
test
inc
inc
cli
sub
cmp
jp
stc
nop
flds
adc
inc
pop
sub
or
out
push
decb
les
test
test
daa
mov
ss
std
pop
lods
and
mov
cmpsl
cvtps2pi
hlt
xor
pop
mov
inc
sub
mov
loopne
or
dec
adc
sub
pop
ljmp
push
pop
repz
inc
mov
ret
xor
cmp
insb
or
sbb
pusha
and
cmpsb
jg
xchg
stc
in
bound
inc
or
sbb
jbe
jle
cmpsl
mov
fbstp
mov
dec
dec
mov
arpl
dec
ss
enter
pop
push
xor
and
or
mov
cmp
xchg
hlt
dec
mov
pop
inc
mov
in
xchg
cmp
pop
inc
and
push
dec
sti
dec
mov
xor
dec
inc
mov
mov
repnz
roll
daa
xchg
pop
int
adc
aaa
xor
outsl
addr16
push
dec
mov
xchg
bound
dec
in
jle
or
dec
je
mov
shlb
leave
mov
fcoms
cmpsl
int3
addr16
ffreep
mov
mov
xor
mov
gs
or
repnz
mov
in
xchg
jb
subl
adc
mov
cmpsl
daa
out
fwait
test
mov
js
sbb
sub
mov
es
loopne
add
pop
xchg
aaa
push
lcall
lret
loope
xchg
xor
xor
cmp
mov
sbb
outsl
pop
jne
lods
cmc
jnp
push
mov
mov
xchg
and
fcomps
stos
repz
cltd
cmpsl
das
cld
mov
or
jnp
jmp
mov
stos
stc
push
js
ja
stos
out
outsl
or
or
loop
mov
and
mov
sub
add
scas
adc
cmpsl
ror
loop
push
lcall
repz
cmpsb
mov
in
adc
push
scas
jle
and
loope
mov
scas
xchg
xchg
or
xor
pusha
fdivs
xlat
lea
jbe
out
enter
lret
ljmp
jp
and
dec
data16
mov
lahf
jge
mov
or
sub
fimuls
push
cmp
xor
in
test
and
push
movsb
pop
dec
sbbl
push
sub
test
daa
fs
dec
out
ret
into
lahf
or
or
xor
cmp
mov
jmp
inc
ljmp
mov
mov
ja
or
outsb
mov
arpl
push
jg
or
pusha
daa
mov
adc
hlt
cld
out
mov
dec
fcompl
ret
mov
je
sbb
ret
push
data16
popa
mov
ds
sub
mov
leave
scas
inc
xchg
jo
fs
and
cmc
cltd
vhsubpd
inc
and
fidivrl
or
or
lret
movb
nop
add
mov
fadds
scas
xor
dec
out
cs
and
sub
sahf
inc
loope
insl
adc
push
pop
andb
or
es
cmpsb
fistl
push
mov
or
pop
sub
imul
ret
scas
mov
icebp
cmp
jns
mov
xchg
popf
loop
mov
xchg
inc
xchg
in
iret
stc
dec
or
cmp
rorl
ds
push
rcpps
cmp
lods
pop
xchg
incl
test
lret
or
stos
mov
test
fs
push
xor
mov
lret
xorb
push
mov
bound
adc
pop
ret
lret
pop
in
mov
mov
jno
cmp
cli
ret
lock
imul
cmpsb
jl
or
lret
out
imul
hlt
shll
or
outsl
leave
push
add
pop
push
mov
jmp
cvtpi2ps
rcll
jo
inc
ret
jnp
pop
call
mov
ror
ljmp
and
sub
idivl
imulb
add
ljmp
add
cmp
inc
ss
adc
add
pop
push
pop
sub
rolb
inc
sbb
insb
adc
jle
inc
jg
sarb
inc
insl
or
sbb
daa
stos
jae
popf
mov
int3
in
pop
mov
push
imul
fucomp
adc
mov
lret
negb
mov
and
loopne
enter
push
cmp
push
cmc
rcrb
fistl
dec
jp
and
sbbl
imul
dec
lret
movsl
cmp
add
push
mov
cmpsb
lods
mov
mov
cli
test
lret
xchg
icebp
das
cmp
jl
inc
fildl
sub
sbb
lret
int
sbb
push
out
push
lock
imul
neg
popf
mov
push
xchg
outsb
xor
add
rclb
repz
sbb
mov
lock
in
jmp
adc
pop
ss
mov
and
mov
jge
sbb
and
daa
pop
int3
cmp
pusha
shlb
add
imull
add
loop
pop
push
pusha
jnp
pop
jp
and
add
pop
pop
push
lret
pop
scas
incb
push
das
iret
dec
add
jo
push
xlat
dec
lahf
cmp
xchg
fcom
divl
mov
pop
cmp
mov
cwtl
arpl
jmp
lahf
outsl
mov
mov
xchg
dec
pusha
jno
movsl
aam
xchg
dec
dec
push
psraw
cmc
push
cmpsb
push
pop
mov
lds
push
ds
ret
cmpsb
fcomi
fisttps
insl
push
mov
mulb
or
orl
sahf
mov
add
sarb
fcmovnbe
das
dec
sbb
mov
cld
pusha
scas
sbb
nop
mov
cli
cwtl
out
mov
cmp
iret
jecxz
jb
rcll
data16
sbb
cmc
add
test
sbb
stc
mov
cmp
or
rcrl
cli
push
sub
and
cmpsl
pop
out
push
jno
ss
roll
or
mov
or
jb
pop
mov
push
psubusw
ret
aad
aas
mov
test
adc
das
dec
lret
mov
mov
add
sub
inc
daa
insb
aad
fsubl
jae
jae
loope
imul
es
lcall
mov
das
mov
mov
or
and
pop
add
ja
cltd
mov
pop
imul
fistpl
into
lcall
les
jns
lahf
cltd
popa
and
lea
and
push
fsubrl
sbb
dec
lods
jno
xchg
dec
cmp
jns
xchg
sarb
gs
sub
lods
insb
mov
xchg
arpl
mov
iret
je
int
push
test
dec
inc
push
push
popa
aas
in
nop
push
call
loopne
call
repnz
mov
sub
jge
jle
mov
scas
in
fstpl
add
jge
andl
jbe
xchg
adc
inc
es
dec
xor
mov
xchg
mov
mov
xchg
ja
inc
xor
pusha
rcpps
xorb
nop
push
and
ficoms
iret
pop
mov
push
jg
dec
inc
mov
testl
dec
xchg
adc
movsl
int
ret
inc
jg
insb
test
mov
cmp
sbb
add
mov
ljmp
inc
out
xor
inc
mov
adc
lock
cmp
stc
test
cmp
dec
aam
push
adc
data16
sti
push
shlb
jo
dec
sti
stos
mov
mov
mov
or
arpl
test
icebp
cmp
jae
cwtl
dec
lret
fistpll
jmp
fimuls
fstpl
insl
xchg
hlt
pushaw
cmp
mov
and
xchg
cmp
mov
fwait
add
aas
in
stos
cld
mov
cmpb
and
test
movsb
scas
mov
add
pop
icebp
addr16
aas
sub
loope
push
repz
js
jnp
cwtl
or
out
dec
pop
push
mov
scas
sbb
push
xchg
add
movsb
jbe
xchg
aaa
jmp
scas
movups
xor
loopne
out
repz
btc
xchg
xchg
jecxz
rclb
push
or
je
stc
dec
jo
aam
aaa
xor
jbe
mov
dec
pop
lds
js
sarl
bound
hlt
mov
and
adc
out
fimull
lds
inc
xor
mov
aad
mov
roll
pop
adc
jbe
cmpsb
sbb
bound
or
scas
leave
nop
lock
mov
mov
or
lahf
jns
or
sub
insb
lahf
dec
aad
mov
xor
pop
xchg
xchg
popa
sbb
pop
sbb
xor
icebp
fdivrp
fcomps
xchg
and
imul
dec
fbstp
ret
scas
mov
jns
mov
jecxz
movsb
dec
cmp
bound
xor
dec
push
and
dec
stc
std
fmuls
dec
cmp
pop
sbb
filds
scas
aam
loope
mov
and
pusha
mov
and
jmp
dec
xchg
rclb
push
jae
add
jne
fwait
or
jge
add
out
sbb
shll
outsb
mov
or
mov
fstpt
adc
sub
and
enter
loopne
xor
imul
mov
lock
push
mov
push
cltd
and
out
in
cmp
inc
das
pusha
add
mov
dec
push
cltd
imul
or
pusha
imul
and
jo
lods
push
dec
arpl
xchg
mov
mov
testl
xchg
or
gs
push
aam
pcmpgtb
pushf
loop
movsl
int
jg
push
cmc
cmc
out
mov
inc
pop
push
inc
sti
sub
adcb
inc
stc
dec
push
xchg
es
dec
pop
or
imul
js
sub
stc
in
xchg
mov
movsb
mov
mov
mov
aam
pop
cmp
dec
cmp
imul
cmpsl
cmp
mov
dec
pop
mov
xchg
aas
andb
ja
pop
lea
pop
inc
mulb
cwtl
iret
jecxz
mov
gs
daa
fidivl
out
scas
xor
xchg
ja
icebp
mov
pop
inc
aas
pusha
outsl
dec
gs
inc
flds
gs
mov
cmc
sbb
mov
mov
fisttpl
insb
fstpl
sbb
lods
add
jg
push
je
ljmp
fldl
jp
pandn
sbb
jmp
cmp
or
dec
cwtl
and
insl
mov
mov
mov
addb
push
dec
dec
adc
jnp
adc
xchg
and
fisubrl
test
jecxz
sahf
cmp
mov
push
and
jge
loope
daa
enter
xchg
push
aaa
test
xchg
lcall
test
or
in
jl
jnp
test
mov
jmp
incb
int3
cmp
push
xor
xchg
dec
pushf
dec
test
lea
mov
push
push
mov
sarl
repz
cmp
test
cmc
into
aas
shll
pop
aas
mov
insb
cld
shr
xchg
xor
xorl
or
and
cmp
enter
push
dec
jo
repz
ret
sub
rorb
outsl
clc
dec
xchg
lods
cmp
adc
ret
das
jge
ljmp
and
leave
loope
jg
push
movsb
out
xchg
push
xor
jnp
adc
stc
jb
or
jmp
xchg
pop
in
int3
cltd
pop
or
andb
cs
lds
mov
test
ja
mov
push
push
sahf
into
scas
sarl
xchg
inc
int
divb
mov
jl
ds
ror
cli
pop
js
loopne
inc
cmc
aas
leave
aaa
and
sbb
add
in
cmp
ss
mov
adc
jp
gs
adc
add
lods
pop
fincstp
fs
push
adc
loopne
aas
pop
or
stc
stos
stc
sti
sarl
jb
xchg
jns
mov
push
in
mov
mov
mov
sbb
jnp
or
outsl
cmp
or
mov
mov
xor
or
pop
and
adc
cmpsl
cmp
mov
jne
dec
out
mov
enter
push
outsl
leave
ds
sbbb
mov
push
jg
fs
loop
in
inc
xor
jg
and
mov
cmp
cmpsl
cld
push
push
test
lcall
cld
mov
in
mov
jmp
xor
and
or
or
lea
sub
push
push
sti
sub
push
mov
xchg
pop
mov
or
xor
cmp
sub
stos
pushf
bound
pop
sahf
lahf
add
sub
imul
flds
pop
inc
pop
mov
cmpsb
pop
jns
add
push
jne
jnp
notl
xor
push
out
add
mov
inc
mov
add
sbb
test
rclb
inc
mov
jo
ficoms
loopne
notl
xchg
inc
aad
cmc
mov
add
mov
out
fs
andb
or
sub
jnp
push
xchg
fidivrl
and
ficoms
push
shlb
fldt
xor
xchg
mov
jne
addr16
xor
push
or
adc
push
mov
aad
cmpsb
loopne
lea
xor
aaa
inc
xchg
jmp
dec
call
enter
dec
sti
rcrl
lds
je
mov
out
xchg
adcl
cs
test
clc
mull
add
or
jmp
orb
repnz
dec
mov
cli
jae
lods
sbb
push
fadd
or
push
leave
pop
push
and
sub
jge
and
jae
or
dec
jb
and
not
mov
push
sub
adc
cs
dec
and
add
bound
mov
fcompl
or
push
mov
rcr
loope
dec
cmp
popf
inc
repz
dec
in
push
or
cmp
add
sarl
mov
bound
ds
xchg
or
fists
stos
inc
xchg
test
dec
frstor
mov
loopne
add
testl
push
leave
pop
xchg
jbe
push
into
insl
ljmp
mov
sbb
int
ds
popa
cmp
mov
sbb
and
sbb
pop
mov
mov
out
adc
add
mov
ja
xchg
and
test
xchg
call
jge
arpl
mov
test
push
sub
rcrl
aad
adc
cltd
div
mov
xchg
popa
lods
repnz
cltd
push
jle
stos
cmp
sbb
adc
movsb
push
mov
xchg
addr16
cltd
push
adc
sub
ret
punpckhdq
out
bnd
lret
mov
cld
mov
pop
mov
lahf
out
or
cmp
pop
enter
cltd
jns
fwait
and
cmp
push
push
push
imul
pop
xchg
cmp
arpl
jo
adc
pop
push
shl
loopne
pop
aad
add
pop
je
mov
mov
cmp
loope
sub
les
inc
out
push
gs
pop
shr
lret
xchg
rolb
dec
imul
fstp
sbb
mov
test
mov
sub
sub
xor
inc
jnp
nop
add
addb
xlat
scas
xlat
pop
dec
push
faddp
or
aas
jnp
aad
inc
pop
jns
xor
hlt
icebp
add
int3
or
filds
add
and
xchg
push
enter
mov
inc
ja
or
push
push
sti
mov
add
into
sarl
cli
in
mov
cltd
pop
pop
cmp
mov
iret
mov
adc
or
lds
dec
in
jmp
cmpsl
adc
xor
mov
jg
js
fldt
ret
xchg
in
cmp
mov
cmp
mov
ret
pushf
and
inc
out
cmpb
jo
sub
lods
cmpsl
add
stc
push
test
mov
cwtl
pop
imul
icebp
pop
jnp
cmp
mov
lods
pop
outsb
dec
scas
into
out
out
or
cmp
mov
test
mov
jbe
mov
mov
aam
fdiv
dec
loop
scas
jp
sub
fcomi
cld
adc
cli
pop
repnz
jmp
lods
inc
sub
jle
xchg
inc
neg
sbb
loopne
xchg
jno
or
xor
sbb
xlat
test
pushf
fists
jo
nop
xchg
sbb
mov
or
inc
add
inc
xlat
adc
xor
nop
push
call
dec
fcmovu
xcrypt-cfb
cmpsl
and
adc
push
cmp
cvtps2pi
jnp
je
nop
mov
xchg
out
push
xchg
push
leave
cmp
insb
cltd
push
push
xorl
xchg
add
es
mov
xchg
scas
mov
addl
mov
addl
push
pop
jg
std
mov
aad
inc
loop
pop
loop
enter
test
rcrb
push
test
xchg
popf
mov
lds
pushf
dec
sub
pop
jle
vfrczss
mov
pop
dec
in
cmp
test
dec
mov
push
add
jne
loopne
xchg
jb
pushf
xor
cmp
fbld
add
or
outsl
jnp
or
addb
out
out
pop
or
adc
leave
rcr
and
lcall
and
inc
mov
ret
cmpsl
call
movsl
test
clc
mov
pop
inc
int3
leave
in
add
mov
cmpsb
fcmove
pop
sub
add
loope
arpl
subl
lods
test
push
pop
pop
pushf
movl
aad
cmp
pop
aas
dec
adc
cmp
adc
stc
les
scas
ss
cli
sbb
fsubrs
in
out
add
mov
inc
ficomps
sarb
test
in
dec
fcmovnb
pop
mov
fdivrp
jb
das
xchg
jbe
imul
fwait
scas
mov
jp
pop
xor
mov
pop
mov
pusha
scas
shll
cmp
adcl
sbb
fbstp
cmp
push
rclb
out
mov
lods
mov
pop
fst
xor
cmpsb
xchg
xor
adc
push
add
shlb
call
int
inc
lods
call
mov
dec
xchg
aaa
pop
fistpl
sub
cmp
ret
mov
test
sbb
aaa
adcb
mov
adc
jl
xor
mov
adc
mov
into
iret
jle
push
decb
inc
arpl
mov
xchg
fisubs
sub
pop
inc
pop
das
pop
int3
aaa
add
test
lcall
test
pop
sbb
xor
in
sub
cmp
push
jmp
cmp
or
add
dec
mov
fcmovnb
dec
mov
iret
imull
loopne
sbb
test
daa
jns
xchg
xor
jmp
or
inc
pop
push
pop
mov
test
das
or
inc
jne
mov
test
xchg
test
or
add
pop
pop
js
adc
inc
mov
mov
lcall
dec
mulb
sub
xchg
cltd
gs
enter
push
mov
cmp
add
cmp
sahf
adc
addr16
dec
cmpsb
or
ficoms
xchg
sahf
xchg
fildl
inc
xor
and
enter
mov
in
es
and
dec
addr16
sbb
insl
and
or
imul
fnstsw
lock
or
mov
test
aas
sarb
test
xchg
push
mov
cmp
mov
mov
mov
or
repnz
push
mov
mov
xchg
jbe
lret
xchg
ret
xchg
mov
mov
lret
xorb
lret
lock
lds
jno
sub
lret
push
push
mov
ret
jne
xchg
add
lret
lcall
cmp
iret
ljmp
mov
push
xchg
push
mov
and
repz
and
mov
sbb
or
dec
dec
sbb
scas
testb
gs
shlb
mov
fcmovnu
cmp
insb
adc
push
pop
cmp
dec
mov
cmp
gs
mov
mov
xor
in
cmc
push
inc
divl
lahf
jnp
xchg
lds
mov
pop
add
mov
sbb
jno
stos
stos
and
xchg
mov
cli
sbb
mov
test
cmp
daa
int3
jns
mov
mov
cwtl
lret
pop
test
stos
fcomps
pushf
iret
out
test
ds
stos
lds
sbb
fisubs
mov
ss
insb
sbb
pop
je
fs
or
sbb
jl
mov
jg
mov
fprem1
nop
sub
test
out
mov
mov
lret
jmp
cmc
rcl
sbb
or
cmpsb
push
out
aad
push
dec
ret
arpl
divb
aad
and
push
pop
cld
ja
jecxz
cmp
mov
pushw
add
mov
imul
int
push
leave
lock
jb
js
loopne
push
repnz
add
sti
mov
mov
mov
adc
jo
push
stos
test
mov
jno
xchg
in
enter
lahf
adc
xor
fimull
pop
xor
xchg
iret
inc
mov
mov
and
xor
lock
mov
jns
jb
and
xor
aam
inc
xchg
xchg
pop
repnz
orb
sub
test
pop
enter
fsub
push
pop
lods
mov
xor
insl
jecxz,pn
lock
sbb
test
and
mov
jp
xchg
mov
pop
xor
fstl
pop
dec
jns
adc
mov
arpl
cmp
sbb
xor
adc
cmpb
mov
push
rcrl
jne
repnz
leave
imul
and
pop
addb
mov
test
shl
push
mov
daa
add
xchg
xor
mov
and
add
sub
je
lahf
insb
in
add
lcall
push
bnd
andl
adc
inc
aaa
jle
andb
pxor
rcrl
jo
pop
add
sub
dec
loopne
xchg
imul
and
dec
xchg
mov
idivl
cmp
mov
pop
adc
xchg
jg
inc
ss
das
mov
sub
stos
aad
es
jns
andl
sbbl
lret
or
xchg
testl
and
dec
mov
ret
adc
es
push
jne
aaa
xor
dec
or
fimuls
mov
inc
mov
nop
dec
add
mov
inc
cwtl
int3
mov
xchg
inc
je
cmpsb
mov
mov
pop
call
insb
push
mov
out
mov
dec
arpl
aas
push
js
jp
lahf
in
hlt
inc
xor
icebp
test
pop
xchg
push
lods
push
lahf
sbb
pop
stc
test
jb
sub
or
adc
test
push
outsl
dec
mov
or
mov
xchg
in
js
arpl
pop
or
inc
mov
cmp
adc
pop
aam
pop
sub
sub
inc
add
sub
out
notl
ja
jb
test
fnstcw
push
fcmovne
paddusw
sbb
stos
push
orl
adc
pop
out
jmp
movsl
jnp
ret
popa
mov
xchg
mov
pop
mov
lds
push
div
int3
pop
lret
cmp
push
jno
adc
adc
or
push
js
and
clc
dec
adc
ss
and
cmc
daa
js
dec
in
and
pop
lahf
call
dec
mov
and
jno
jb
push
shlb
stc
add
xchg
pop
mulb
push
int3
xor
mov
mov
int3
or
je
fdivrp
mov
loop
sbb
xchg
adc
cmp
iret
es
mov
jmp
xchg
mov
cmp
lahf
iret
sahf
outsl
xor
js
lahf
jmp
mov
pop
pop
movb
or
dec
cmp
rcl
or
aaa
out
rorl
ljmp
in
cs
push
mov
jae
fmull
xchg
xor
test
cs
jno
inc
mov
mov
mov
pop
cmp
add
sbb
je
xor
cltd
xchg
mov
lea
loope
pop
push
stos
push
mov
dec
cmp
xchg
add
mov
movsl
push
rcl
add
lret
sub
addr16
and
push
adc
xchg
sub
out
and
jo
adc
test
test
push
xor
mov
xchg
mov
sahf
mov
sbb
jecxz
aam
icebp
popf
cmp
push
sub
lods
adc
pusha
ljmp
dec
stos
push
jmp
adc
push
and
loope
lret
mov
fsubs
pop
filds
or
shlb
cmp
aad
mov
mov
mov
mov
mov
sbb
xor
leave
dec
insl
loope
data16
add
loopne
dec
jns
sbb
dec
bound
adc
negb
sub
jl
inc
sahf
incb
mov
cltd
fnstsw
cs
cmp
arpl
mov
es
inc
mov
arpl
push
push
gs
add
test
repnz
jbe
int
adc
mov
or
pop
cmp
push
or
xchg
push
fcomps
dec
mov
dec
sbb
pop
push
xor
mov
xor
in
xlat
nop
pop
or
jns
lcall
push
pop
inc
punpckhdq
int
fstps
and
xchg
pop
inc
imul
or
int
mov
cmpsb
push
jnp
inc
and
inc
pusha
xchg
push
rcrb
out
pop
into
or
mov
mov
mov
mov
in
test
ljmp
lock
int3
pop
adcl
and
aas
jno
notb
stos
cmp
in
adc
fsubrl
pop
add
sbb
inc
cld
mov
idiv
pop
jmp
popa
sub
fistl
mov
das
iret
push
lcall
fadds
xchg
std
enter
in
cmpb
mov
dec
subb
mov
mov
cmpsb
data16
adc
andb
es
pop
cmpsb
imul
push
add
stc
lods
es
pushf
sbb
stc
xchg
adc
in
leave
in
mov
stc
lret
aad
pop
push
outsb
ret
lods
jmp
out
push
mov
out
mov
and
dec
add
aas
cmc
pop
xor
add
daa
jmp
setp
dec
xor
inc
xor
in
mov
out
inc
xchg
sub
lahf
cmc
mov
rcrl
js
push
jge
add
xor
jnp
mov
call
mov
pop
add
js
pop
cmc
int
popf
in
pop
mov
adc
sbb
repz
mov
loope
stc
mov
mov
jae
iret
sub
pushf
sahf
adc
mov
les
not
jnp
add
or
into
xor
pusha
out
pushf
out
out
insl
ja
aad
dec
push
fwait
aam
sub
enter
adc
push
mov
mov
lods
mov
cmpsb
in
lcall
data16
aas
cwtl
mov
or
push
rclb
sbb
inc
jle
mov
stos
cmp
clc
aas
in
or
sub
cmp
aas
std
mov
loope
xchg
add
sub
and
lahf
dec
rolb
out
push
xor
cmp
adc
fstps
out
inc
sub
pop
fisubl
rcll
and
test
and
or
jbe
clc
xchg
xor
pop
xchg
fs
insl
ljmp
mov
daa
cmp
sbb
xchg
and
inc
pop
xchg
or
cmp
loope
mov
jl
cmp
xchg
daa
pushf
stos
dec
in
lcall
insb
rcll
mov
repz
mov
in
mov
mov
mov
dec
cwtl
jl
xor
dec
inc
lcall
lea
mov
mov
mov
int3
push
lods
inc
mov
lea
push
sbb
mov
addl
jno
bnd
or
add
mov
adc
outsb
push
fldt
mov
testl
inc
test
adc
popa
aam
sahf
lcall
dec
je
ds
sbb
ss
inc
mov
pop
iret
movsl
imul
pop
ds
add
or
in
adc
mov
bound
xor
cmp
stc
mov
test
cmpsb
iret
and
dec
mov
movsl
mov
mov
leave
sub
mov
jns
jmp
fisttps
fstpl
xchg
mov
mov
mov
inc
xlat
sbb
fstps
mov
inc
adc
scas
out
cmc
push
stos
add
adc
sar
jg
xor
jno
mov
sub
push
fwait
cli
jae
add
sub
mov
popf
out
cwtl
push
dec
jo
ss
xor
add
in
fsubr
lock
or
xorl
rorl
add
shll
xor
sub
loope
xchg
out
lods
and
sub
jbe
jnp
icebp
jo
jg
nop
ja
cmpsb
cmpsb
imul
test
int3
out
outsl
push
test
dec
stos
and
ret
xor
sti
xor
mov
or
or
out
aaa
and
mov
icebp
mov
pop
inc
cld
lock
inc
and
cmp
adc
in
mov
dec
hlt
popa
test
and
cmp
je
sbb
in
lahf
lcall
mov
xor
mov
sub
cwtl
fidivl
sub
xchg
jae
enter
adc
mov
cmpsb
into
frndint
mov
out
adc
loopne
xor
fnstenv
fsts
lcall
cs
mov
sti
lods
cmp
dec
iret
dec
xchg
pushf
xor
push
xchg
arpl
and
test
out
mov
shll
cltd
dec
cmp
nop
mov
or
sti
xchg
and
inc
push
es
xchg
es
xchg
mov
and
xchg
test
and
popf
or
mov
sub
lcall
jnp
dec
lea
fidivl
xchg
pop
cli
mov
dec
jo
test
mov
sub
sbb
sbb
popf
addr16
adc
mov
repnz
push
push
bound
repz
movl
mov
xchg
ret
pop
mov
push
adc
das
cs
lods
fisttpll
dec
sub
xchg
push
push
cmp
pop
lret
movsl
repz
movsb
inc
jmp
test
idivb
std
jge
rorl
sub
insl
icebp
dec
testl
fidivl
dec
inc
lret
push
cmp
cs
mov
in
jl
fadds
dec
pop
in
sbbb
lcall
add
xlat
fsubrp
cmc
inc
adc
push
or
shlb
das
xor
cmovno
jbe
jg
add
fwait
loop
sub
lds
sub
or
or
pop
push
and
dec
incl
pop
sti
fstl
xor
pop
or
xlat
push
xor
iret
test
pop
mov
pop
inc
pop
int
cmp
pop
jae
pop
mov
pop
and
popf
scas
or
xchg
imul
pop
lods
mov
bnd
or
xor
arpl
push
aas
add
adc
jl
roll
dec
rorb
jae
jae
aas
insb
std
sti
gs
stc
ja
cmp
fsubrl
cltd
mov
ficoml
push
mov
mov
movsl
pop
sub
sub
cmp
jbe
push
lods
enter
push
xor
or
out
stos
lock
popa
sti
lods
stc
imul
mov
push
hlt
xor
push
mov
push
out
cmp
mov
lods
dec
adc
sub
fsubrl
adc
rcrb
push
neg
and
shrb
pop
jmp
daa
mov
shrb
sub
and
mov
mull
mov
cmpsl
adc
mov
cmp
out
inc
sahf
xor
ja
add
lods
push
jnp
cmp
or
jno
mov
push
mov
lds
int3
insl
and
int
lods
decl
adc
shrl
inc
loope
jb
push
imul
ret
ja
lods
sarl
int3
mov
je
lods
cltd
push
mov
adc
sbb
xchg
dec
pop
xchg
mov
std
aad
loope
push
pop
test
daa
lock
and
in
xor
jmp
adc
ds
xchg
cwtl
dec
xchg
push
mov
ds
pop
stos
js
mov
jp
xor
inc
mov
dec
xchg
push
ds
cmp
mov
pop
cwtl
dec
add
movsl
push
cltd
xchg
fcmovb
xor
pop
shlb
fs
movsl
mov
jecxz
sbb
cmp
je
dec
je
mov
jle
xor
lock
enter
adcb
sub
hlt
fbld
test
adcl
ret
imul
jo
rorl
fnstcw
push
cmp
and
mov
popf
push
xlat
sub
mov
cwtl
mov
sbb
iret
pushf
lds
lds
lods
or
sbb
ja
cld
push
repz
sub
sbb
mov
add
leave
ds
int3
xchg
mov
test
push
and
inc
lret
or
add
inc
mov
jbe
loopne
lods
xlat
notb
mov
adc
mov
test
cmpsb
sub
icebp
jne
mov
rcll
ret
or
repz
jno
push
jne
sbb
inc
inc
ljmp
fisttpll
sub
mov
ret
xor
cmpsl
jb
adc
out
jns
daa
push
and
add
jo
xor
int3
jle
decb
aaa
or
pop
inc
pusha
or
push
fldenv
ljmp
sbbb
dec
fsub
push
cmp
clc
sub
jns
mov
cs
jecxz
in
lds
and
cmc
aad
lcall
into
pop
cmp
setno
inc
inc
iret
daa
sbb
xchg
adcb
sub
sub
fisubs
add
insb
inc
in
and
add
bound
sub
dec
mov
jmp
and
dec
cmpsb
add
scas
repz
push
jmp
mov
nop
or
mov
mov
aas
popf
adc
rolb
divl
loopne
mov
or
test
les
sub
sub
jb
push
mov
inc
outsl
cmpb
xor
mov
push
lcall
cld
fcmovnbe
jae
out
jbe
mov
mov
rcl
xchg
mov
adc
fldt
jbe
sbb
pop
cli
mov
mov
mov
ja
inc
imul
push
xchg
scas
cmp
add
mov
xor
xlat
cld
inc
xchg
mov
sub
push
pop
das
jge
addr16
or
push
and
sub
ss
sti
repnz
loopne
fstps
aad
das
hlt
cld
mov
pop
loopne
test
inc
pusha
mov
shrl
xchg
dec
fisttpl
subb
cs
xlat
rol
and
outsb
xchg
add
jo
jg
scas
ja
cmc
out
out
ss
xor
pop
ss
xor
mov
mov
xor
and
mov
xor
roll
or
sti
icebp
std
jmp
adc
mov
and
imul
inc
mov
cli
test
jmp
jns
arpl
pmuludq
and
xor
jge
jmp
lcall
jmp
xchg
repz
pop
popa
or
cmp
jne
lcall
xorb
jge
jo
imul
loop
xchg
push
add
shll
pop
xor
mov
jecxz
shlb
push
sub
push
mov
es
sub
mov
jb
stos
xchg
jo
test
ret
js
hlt
cltd
cld
je
mov
inc
mov
aam
in
scas
subb
dec
iret
sbb
leave
das
out
test
mov
sahf
jo
push
rorb
jecxz
push
popf
adc
out
jle
cs
stc
mov
test
inc
nop
add
into
lods
cmp
jl
std
adc
imul
cs
sub
inc
daa
arpl
js
jne
cmpsl
mov
lea
xor
scas
ja
inc
sti
add
mov
fdivl
mov
jnp
jl
mov
push
jns
xchg
sub
push
clc
xchg
sub
inc
shrl
dec
mov
daa
push
push
les
subb
insl
lods
clc
push
ljmp
test
cmp
xor
test
lds
mov
jmp
mov
jecxz
test
sub
push
dec
or
aam
adc
int3
pop
or
iret
xor
xabort
lcall
leave
jl
jmp
inc
xor
lds
test
sbb
pop
out
mov
mov
or
mov
sahf
test
testl
test
enter
mov
insl
xor
xchg
scas
dec
push
clc
lret
mov
test
into
cmp
push
pop
popf
enter
cmp
hlt
sbb
push
inc
out
lahf
xor
adc
lock
push
out
pop
bound
jmp
outsb
ljmp
xchg
inc
sarb
into
hlt
xchg
aam
out
xchg
cmp
xchg
in
icebp
aaa
mov
clc
add
out
or
outsb
lahf
or
adc
xor
sti
add
and
inc
xchg
lods
push
mov
stos
movsb
call
push
movsb
fs
mov
pop
mov
je
xchg
push
push
fisubrl
pop
mov
scas
cltd
pop
lods
jmp
cmp
stos
insl
or
cwtl
jns
aad
adc
xchg
xchg
je
pop
fldenv
es
adc
xor
fstpl
shrb
test
xchg
aad
jno
mov
frstor
mov
loope
jb
mov
xchg
push
push
mov
outsb
inc
out
push
inc
fnstcw
mov
addr16
mov
loopne
lock
sbb
xor
daa
fsubs
add
add
inc
mov
pop
fidivrl
aam
or
push
shll
lcall
imul
ret
adcl
clc
xchg
roll
or
xor
xor
sbb
sub
imul
test
int
mov
loope
jp
push
fs
dec
push
leave
dec
push
negb
std
out
jl
lea
adc
stc
imul
cmp
aas
cld
jp
inc
inc
scas
out
andb
lret
pop
aas
decl
arpl
cmp
bound
fs
mull
popa
jno
jne
fstps
rorb
inc
mov
and
mov
mov
mov
lea
scas
jmp
mov
fmull
and
lea
push
gs
shr
cmpsb
pop
push
xchg
xchg
jbe
cmp
mov
mov
jno
xchg
jp
fldl
sbb
xor
negl
mov
xor
je
jae
pop
dec
mov
dec
xlat
fucomp
or
push
cmp
jge
cmpl
cmp
jl
pop
jne
cld
xchg
std
bound
inc
and
mov
lock
jle
aas
dec
cltd
xor
divl
push
rolb
dec
shlb
jne
sti
cmpsl
rep
or
dec
and
rol
int3
outsl
hlt
rcrl
mov
popf
xor
mov
cmp
cmp
test
mov
out
pushw
mov
jle
loope
fistpl
loope
stc
repz
jae
cmc
adc
or
cmp
jbe
adc
rorb
iret
imul
je
mov
pop
test
je
xchg
xor
or
pusha
lahf
sbb
adc
or
sub
jl
or
or
les
jle
cltd
mov
push
jge
xor
dec
outsl
outsb
lds
std
jl
adc
lret
jge
xchg
jb
loope
sbbl
mov
xor
jmp
icebp
aaa
iret
les
cmp
mov
mov
hlt
popa
mov
dec
mov
jecxz
cwtl
movsl
push
add
rol
mov
arpl
sub
inc
xor
dec
push
push
xchg
sub
enter
and
jmp
iret
nop
mov
mov
loop
repz
outsb
push
pop
pop
gs
lret
sti
xchg
in
in
outsl
insl
sarl
leave
pusha
mov
add
push
push
add
mov
lret
pop
cmp
ffree
pop
inc
sub
pop
fdivl
int
inc
push
mov
inc
mov
mov
sub
fxch
mov
mov
nop
push
sarl
popf
lock
inc
movsb
mov
icebp
mov
mov
sub
mov
dec
push
cltd
out
std
xchg
cld
xchg
xlat
adc
mov
push
mov
inc
aaa
ss
loop
xchg
shlb
jae
mov
push
mov
imul
std
popf
and
test
lar
mov
popa
xorl
stos
scas
adc
dec
ds
xchg
test
dec
fnstsw
das
sub
or
mov
in
in
cli
hlt
dec
cmpsl
add
sub
cmpsb
pop
pop
ja
scas
cs
ss
and
adc
hlt
xchg
xor
adc
add
mov
iret
imul
popa
rorb
sub
mov
jae
or
dec
or
rcrl
iret
jbe
xchg
outsb
push
das
cmpl
test
mov
and
movsl
jmp
pop
icebp
add
icebp
dec
das
cmp
sub
mov
repz
and
xor
mov
popa
fs
adc
divl
int3
mov
sahf
xchg
pop
pop
repz
xchg
sbb
arpl
mov
aaa
leave
push
filds
popa
jbe
xor
inc
fcomi
lods
pop
or
not
in
cmp
jo
xlat
test
test
aam
push
sub
mov
stc
xlat
insb
mov
pop
inc
jae
mov
pop
mov
push
mov
movsl
jne
sbb
cs
jl
ds
test
push
imul
mov
pop
or
and
outsb
sub
or
sarl
mov
in
fdivs
inc
movsb
paddd
cmp
add
sub
xchg
cmp
pushf
dec
stc
paddsw
or
jmp
sub
xchg
insl
mul
xchg
rcrb
cmp
test
es
mov
rcll
dec
arpl
addr16
fsubs
int
push
loope
int3
jg
mov
fisubl
rcr
xorb
test
mov
dec
and
rorb
sub
jb
clc
fiaddl
push
cmp
xchg
push
xchg
mov
and
xchg
cmp
and
push
sti
dec
sbb
sub
repnz
je
mov
cmpsl
insb
int
scas
gs
mov
push
pop
cld
cltd
pop
mov
adc
nop
outsb
cmp
push
aad
pop
in
push
xchg
mov
add
mov
mov
out
aas
cwtl
adc
dec
adc
repnz
sbb
or
fldl
jecxz
add
xor
aam
pusha
pop
and
lods
cmp
mov
mov
xor
shrb
cld
lret
lods
mov
scas
cmp
cs
or
sbb
outsl
mov
arpl
and
cmc
lds
add
arpl
cmpsl
fisttpll
mov
sbb
sub
icebp
aam
sub
dec
push
jge
add
stos
pop
outsb
aad
adc
sbb
cmpl
sbb
inc
adc
adc
add
ja
icebp
or
loop
jnp
push
arpl
les
pusha
fldcw
fcompl
lret
adc
stos
outsb
sbb
and
inc
outsl
push
or
bound
xchg
gs
loop
imul
scas
jg
js
push
stc
jns
out
loope
add
add
es
mov
dec
add
notl
es
pop
cmp
aaa
mov
cmpb
inc
xchg
sbb
inc
cmp
xchg
fxch
jle
int3
sti
pusha
sti
call
ret
outsl
or
fisttpl
xchg
mov
lods
cmpb
push
dec
out
arpl
dec
test
mov
mov
incl
das
pop
cmp
std
jno
stos
jo
fistl
aam
push
stos
push
ret
xchg
jbe
xchg
cmp
dec
push
pushf
sti
loopne
or
mov
cld
test
ja
dec
js
mov
sub
rcrl
repnz
adcl
add
pusha
int
outsb
mov
cmp
sub
jo
fcmove
inc
repz
stc
jge
inc
movsb
popa
mov
les
push
lcall
jne
pop
add
aad
jo
loopne
in
pushf
cmp
fildll
cltd
lea
stos
cwtl
pop
lret
cltd
or
in
frstor
lds
fcoms
xchg
dec
jmp
ja
test
dec
les
mov
mov
push
aad
data16
dec
lods
leavew
jne
xchg
lds
stos
data16
push
cmp
pushf
pop
bnd
and
push
pop
jae
jp
xchg
adc
cmp
adc
adc
push
mov
push
loop
orb
in
mov
ljmp
pop
scas
adc
out
loope
jge
ret
sbb
fbld
adc
fisttpll
scas
scas
xchg
in
inc
push
or
mov
nop
push
repnz
scas
mov
xchg
xchg
inc
lret
pandn
outsl
xchg
lcall
bound
js
pop
adc
adc
test
cli
lret
sbb
xchg
stos
test
or
push
push
data16
aad
scas
insb
rclb
fildl
addr16
xor
loop
sbb
lea
fwait
insb
dec
mov
and
addr16
ds
loopne
sbb
or
mov
lods
sahf
stc
mov
or
repz
inc
or
sbb
pop
pop
mov
jmp
adc
lock
in
push
lret
cmp
cmc
inc
test
ja
sbb
addr16
pop
cmp
cmp
pop
adc
ret
icebp
cmp
jge
mov
inc
hlt
adc
dec
idivl
psubd
stos
stc
sub
repnz
mov
int
loop
xor
jecxz
adc
ret
push
xlat
repnz
ja
pushf
imulb
pop
push
cmp
xrelease
adc
fsts
add
adc
pop
jno
sti
sub
push
sub
repz
icebp
jp
mov
or
cli
mov
out
push
pop
and
ja
call
cmp
inc
gs
imul
push
mov
std
stos
dec
and
stos
mov
mov
repnz
inc
arpl
mov
and
scas
jo
sub
pop
mov
sub
fildl
fnstsw
xchg
js
push
lea
or
fldt
sahf
adc
ficoml
and
adc
xlat
sub
mov
or
cmp
mov
int
shll
je
add
lods
push
mov
pushf
sahf
sahf
lret
test
push
movsl
sbb
xchg
mov
jecxz
negb
enter
daa
mov
sbb
repz
dec
gs
ret
sti
or
sub
adc
pusha
ja
pop
test
dec
push
int
mov
in
loop
negl
lret
inc
test
pusha
inc
mov
das
out
repz
repnz
mov
xchg
dec
add
je
jnp
sub
rcrl
xchg
or
int
fcmovnbe
dec
in
andb
aam
sbb
nop
fstps
ror
bound
out
daa
stos
mov
enter
or
xchg
lret
test
loop
stos
cli
out
mov
out
cmpsl
fimull
pop
adcl
ficoml
loop
cld
clc
cltd
xchg
pop
aad
and
push
or
inc
mov
and
lret
xor
fdiv
leave
dec
cwtl
cmp
push
inc
cld
shr
cmp
mov
dec
into
sub
push
xor
cmp
and
jbe
sbb
fnsave
xlat
cmpsb
pop
cmp
hlt
cmp
out
stos
out
fidivl
movsb
cmp
mov
data16
inc
adc
shll
scas
push
cmp
rcr
inc
dec
mov
push
push
ja
sub
pop
xchg
clc
loope
pop
int
mov
mov
xchg
imul
push
mov
lds
cmp
or
sbb
pop
jae
jnp
aam
lock
inc
aad
add
xor
push
aam
das
jge
pushf
fisttpl
mov
shrl
repz
das
js
shrb
inc
addr16
fisttpll
sbb
xchg
mov
push
push
movsl
and
xor
sbb
stc
sbb
ficomps
push
adc
xchg
ret
cltd
pop
and
int3
sbb
sub
or
push
lcall
adc
mov
movsb
dec
ljmp
notb
push
inc
cmp
push
jge
inc
adc
sbb
dec
adc
sti
movsb
lock
cmc
pop
push
push
idivb
jb
imul
aad
sbb
jb
dec
and
cli
int3
pop
ljmp
rcl
lods
push
and
call
and
push
cmp
stos
mov
cwtl
add
jo
xchg
call
shrb
or
xor
cmp
addr16
inc
push
and
cli
adc
popf
repz
repnz
xlat
xor
cmp
fs
repnz
pop
pop
add
or
push
mov
xlat
int
mov
int3
xchg
mov
aas
sbb
xor
add
in
inc
pop
cld
sbb
jmp
insb
and
push
adc
sbb
add
jbe
and
mov
outsl
adc
test
cmp
popa
stos
fwait
xchg
movsl
rcrl
test
aad
pop
int3
adc
scas
cmp
and
dec
loop
ljmp
mov
je
lcall
adc
inc
sbb
xor
insb
pushf
jge
rorb
js
rolb
dec
iret
sbb
std
cmpb
push
push
jbe
in
xchg
mov
jb
ret
in
sub
mov
add
xchg
push
jb
add
das
mov
jbe
orb
xchg
test
rcrb
push
push
add
sub
cmp
inc
jle
data16
jl
mov
iret
lods
mov
sbbl
stc
fs
sti
jge
idiv
mov
mov
das
jae
pop
inc
mov
sahf
das
jecxz
or
push
and
mov
adc
sbb
pop
sbb
dec
rolb
cmpsb
lds
xchg
adc
sbb
dec
mov
cmp
imul
fwait
insl
in
pop
inc
insl
jnp
push
cwtl
xchg
sub
daa
jo
inc
push
movsb
iret
jge
xor
aad
add
xorl
lcall
mov
shrl
jp
and
mov
jg
insb
dec
inc
pop
cmpsb
clc
jno
rcr
cs
or
mov
inc
out
aad
or
test
xor
jnp
rcll
cld
or
enter
or
pop
add
push
andb
pop
inc
cmp
cld
out
sub
dec
or
mov
aaa
ja
mov
xchg
int3
and
sarb
inc
andb
push
insb
popa
jno
mov
addr16
sub
mov
push
push
sahf
les
push
adc
jecxz
bswap
fwait
dec
repnz
js
mov
ficompl
sbb
out
cs
cmpsb
add
jbe
xorb
pop
inc
push
or
addr16
jb
out
lea
cs
xorl
inc
jmp
mov
es
xor
add
inc
int3
mov
mov
mov
out
sub
mov
rcr
orps
fiadds
push
mov
lds
push
cs
lea
outsb
jns
push
gs
fsubrl
cmp
and
and
test
orl
sbb
dec
push
cwtl
and
data16
lret
push
pop
fldenv
add
jle
push
add
add
and
dec
cwtl
jne
mov
sti
insb
fbstp
adc
fadds
imul
jbe
xchg
fsubrl
call
jge
xchg
mov
pop
and
loop
int3
dec
fistpl
mov
xchg
xorb
icebp
or
subb
dec
js
mov
dec
aas
aas
mov
les
fcomps
push
mov
push
and
pop
outsb
fdivrs
sbb
inc
mov
ss
outsb
mov
fsts
ficoms
sub
mov
inc
jnp
movsb
je
bound
aad
mov
icebp
pop
mov
pop
jp
imul
sbb
or
adc
sub
inc
shrl
jo
shrb
push
and
xor
push
or
pop
dec
ss
loopne
jae
cwtl
lods
mov
es
pop
inc
push
sbb
mov
adcb
lret
sub
int
push
mov
add
clc
scas
clc
stos
popf
or
pop
cmp
cmpsl
outsl
jmp
in
dec
repz
mov
mov
dec
call
mov
fidivrs
ret
popa
insl
pop
jp
pop
js
sbb
sti
repz
lcall
ljmp
sub
out
fistps
sbb
xchg
in
lea
mov
sub
dec
xchg
outsb
cmpl
fists
cmp
or
add
pop
cmpsb
sub
xchg
in
fisubl
and
mov
mov
daa
cmp
cmp
fidivrl
mov
fwait
in
jmp
or
inc
pop
loopne
out
imul
faddl
in
ret
lret
call
pop
pop
dec
push
adc
fstpt
mov
mov
bound
pusha
pop
scas
cmp
lods
fstpt
mov
jbe
mov
sbb
mov
mov
subl
jbe
xor
dec
mov
cmp
icebp
jg
fisttpll
adc
out
mov
cmpb
cmpb
jbe
xor
pop
jecxz
jo
pop
lock
sub
or
lret
leave
push
pop
push
mov
pop
daa
rorb
sub
mov
lods
out
xchg
add
inc
pop
sub
adc
sbb
ja
cltd
xchg
out
pop
sbb
cld
loop
sarb
mov
dec
popa
xor
dec
leave
into
sbb
xchg
outsl
loope
outsl
js
loop
arpl
std
addr16
or
and
repz
popf
insl
push
test
cmp
rcrl
sub
aad
inc
int3
sbb
je
xor
out
pop
jb
out
lock
pmullw
push
aad
push
sbb
jmp
inc
mov
gs
cmp
or
daa
mov
repnz
push
mov
xchg
leave
jl
cltd
pop
rcr
mov
cmpb
mov
xlat
out
popf
adc
sbb
push
inc
cmp
or
cmp
cmp
push
inc
out
and
call
fstpt
mov
add
xchg
dec
movsb
rcrl
push
test
movsl
nop
out
cmpsl
cltd
cmovne
negb
bound
dec
leave
sbb
lods
je
inc
testl
fmulp
out
push
jno
mov
lcall
mov
inc
push
dec
stos
mov
outsb
cmp
fldcw
mov
call
and
add
mov
dec
jns
inc
push
lods
or
cmp
cmp
js
mov
in
and
inc
inc
insl
ret
inc
mov
test
ss
mov
mov
fmul
in
std
test
loop
aam
fcoml
movsb
jg
nop
int3
cmp
scas
jle
xor
fmuls
imul
roll
ficomps
inc
xor
add
lock
cmp
push
sti
sahf
xchg
roll
pop
push
lahf
stos
and
in
adc
bnd
push
ja
call
adc
sahf
xchg
nop
shrl
mov
test
in
in
push
leave
bound
mov
lock
add
gs
sbb
stos
pop
sub
xchg
or
sbb
inc
jecxz
jp
mov
outsl
xchg
cmp
pop
aam
inc
cmpsb
xor
sbb
mov
push
ret
cli
lods
sbb
rorl
xor
adc
fmull
dec
lds
jne
lret
xchg
testb
hlt
jp
aam
lock
imul
sbb
movsl
lahf
aaa
push
out
lcall
xor
jnp
push
xor
inc
inc
loopne
xor
in
mov
shlb
cmp
push
mov
xchg
jb
pop
pop
cmp
loopne
scas
and
inc
les
and
push
push
hlt
pop
inc
sub
fst
repz
inc
adc
popa
dec
jnp
cwtl
jo
outsb
dec
addr16
popa
and
ljmp
xor
pop
xchg
mov
into
cmp
loop
sbb
push
add
xorl
cmp
inc
jb,pn
mov
fisttps
sbb
enter
in
dec
or
int
cmc
pop
mov
mov
mov
daa
outsb
lret
xchg
pusha
add
cltd
aas
mov
ljmp
pop
sbb
pop
aas
push
cmpl
adcl
inc
and
pop
cmp
call
clc
lret
aad
imul
pushf
fimuls
cmp
jp
sub
sub
shrb
sti
ficoml
mov
add
je
pop
movsb
sub
fwait
inc
sub
and
inc
fistps
std
dec
ja
inc
mov
xchg
sti
mov
shll
push
or
xchg
out
aaa
mov
inc
mov
repz
nop
enter
push
popf
movsl
outsb
jge
jle
jno
add
mov
mov
fisubrs
into
in
adc
and
mov
decl
cltd
dec
pop
adc
push
hlt
jne
or
loop
jle
push
rcrb
sub
fstpt
push
mov
sbbl
mov
in
lret
push
cmp
nopl
mov
inc
push
fisubrl
testb
je
aad
mul
jb
push
mov
push
push
pushf
pop
mov
jae
mov
pop
jno
stc
push
fcmovnb
cli
add
les
lods
shr
out
sub
cmp
sbb
negl
mov
pusha
repnz
in
int
scas
cmc
les
pop
sbb
jmp
or
jp
cltd
inc
cld
mov
incb
arpl
push
jno
xor
lock
icebp
orb
sbb
insb
lret
inc
pusha
sub
and
inc
insb
xor
pop
std
aas
cmp
sarl
aam
xchg
adc
xor
or
pop
xor
fwait
scas
cmp
mov
shll
clc
lea
adc
rcrb
pop
jl
xorl
outsl
int3
js
pop
push
fmull
mov
jnp
lret
test
dec
movsb
push
mull
nop
jno
jl
sbb
loopne
in
cli
cmpsb
test
xlat
popf
cmpl
xlat
js
xor
fs
fwait
arpl
adc
inc
inc
cmp
fwait
mov
in
in
mov
fildll
out
cmp
dec
movsl
jno
jnp
jp
mov
jno
cwtl
or
inc
cmp
daa
xchg
dec
push
adc
inc
dec
sbb
push
or
xchg
lds
int
fiadds
adc
mov
xorl
push
ret
adc
pop
push
mov
popf
imul
jo
pop
sub
imul
and
mov
std
add
pop
je
adc
jbe
cmp
fcompl
sbb
xor
xor
out
jg
adc
insb
push
or
cmp
push
rol
bound
adc
mov
out
aam
pop
dec
dec
mov
int3
popa
loope
fistpl
sub
jo
push
loopne
jg
xor
lods
hlt
pop
push
out
push
xchg
lcall
jg
pop
rcrl
mov
lds
sbb
data16
mov
mov
ds
ret
and
xlat
lahf
int3
jmp
enter
dec
or
popf
sub
in
cltd
les
outsl
je
pop
add
iret
cmp
fadd
repz
mov
mov
adc
mov
adc
jnp
cld
sbb
adc
stc
or
pusha
mov
dec
sti
out
cmp
inc
popf
cmpsl
dec
or
addr16
sub
int
push
scas
bound
mov
push
sub
loope
sub
or
mov
dec
int3
cmp
clc
test
pop
add
or
aam
xor
jecxz
mov
leave
ret
sub
sbb
mov
or
nop
sbb
and
lahf
xor
jle
js
idivl
pop
push
pop
mov
or
inc
jmp
enter
sbb
cmp
and
cs
pop
cli
pop
cmp
xchg
mov
lds
and
add
push
dec
push
adc
xor
popa
or
xchg
adc
xchg
daa
add
dec
pop
mov
stc
push
ret
mov
es
xor
pop
sub
xchg
sub
das
jecxz
popa
xchg
add
mov
cmpsb
data16
dec
fwait
hlt
movsl
pop
mov
pop
std
and
jne
ja
daa
inc
nop
cld
fwait
gs
push
mov
adc
sub
arpl
popa
iret
cld
sbb
rcl
xchg
shl
pop
lea
into
outsl
std
imul
xchg
xor
out
mov
dec
and
and
pop
pop
pop
cmp
je
jge
cmp
icebp
mov
fnstcw
mov
mov
shl
xor
mov
inc
adc
push
nop
jb
dec
es
mov
dec
inc
inc
sarl
fisubl
loope
movsb
push
out
and
test
inc
mov
mov
cmp
movsb
add
popl
mov
mov
mov
push
and
dec
cmp
or
inc
sbbl
xchg
dec
pop
pusha
fcomip
mov
scas
and
out
add
fbstp
or
mov
sbb
cmpb
fcoms
jnp
aad
int3
dec
loope
pusha
sub
cmpsl
cmpsb
mov
fistpll
neg
mov
iret
enter
out
or
movsb
or
lock
mov
and
in
std
repz
js
iret
or
jb
mov
lds
pop
mov
cmp
add
xchg
adc
xor
mov
lock
jge
aaa
or
mov
pop
add
in
cmp
adc
sbb
xchg
jmp
outsl
or
adc
scas
pushf
or
xor
sub
cmc
rcll
mov
push
or
ja
mov
pop
es
into
inc
stos
push
cmp
loope
dec
jecxz
sub
xchg
out
js
iret
cmpl
and
ret
mov
sbb
push
xor
les
jg
rorb
rorl
out
lds
jbe
mov
jl
jmp
mov
fwait
pop
icebp
cltd
push
lcall
push
frstpm(287
scas
xchg
cli
pop
jmp
loope
je
dec
dec
shlb
pushl
mov
push
test
in
jae
adc
push
push
lods
inc
iret
adc
outsb
rclb
mov
dec
sub
push
cltd
test
scas
cli
repz
addr16
rcl
fwait
icebp
push
sbb
test
and
sbb
xor
adc
inc
pop
fnstenv
sub
ss
jge
dec
mov
or
inc
xchg
hlt
jecxz
int
push
lret
push
fbld
imul
ja
cmp
adcb
pusha
pushl
cmpsb
in
shlb
inc
sbbb
and
jo
xchg
pop
std
jae
xchg
push
add
pop
cmc
add
jno
inc
inc
scas
xor
shlb
lahf
mov
push
fimull
repnz
stc
test
inc
adc
xor
xchg
dec
std
call
ror
scas
movsl
daa
jno
mov
stos
js
sbb
inc
inc
pop
jl
adc
mov
shll
loopne
pushf
push
loopne
xchg
dec
push
decl
ror
scas
mov
aas
imul
jns
inc
outsb
js
push
jecxz
cmp
daa
and
cmp
or
add
lcall
pusha
pop
cld
out
popf
je
mov
loope
and
in
lahf
inc
or
adc
dec
jne
adc
bnd
adc
popa
jae
sbb
in
and
sbb
cmp
les
andb
repz
cmp
mov
imul
test
jne
jp,pt
xor
insl
clc
jne
scas
je
outsb
lea
mov
movsl
lcall
gs
std
loope
mov
cmp
nop
dec
mov
xchg
cli
fadds
mov
cmp
cmp
call
scas
and
mov
or
shrl
add
jle
jl
pop
push
xchg
iret
popf
xor
jp
mov
popf
cs
stos
divl
cmpsb
mov
imul
fstpt
or
dec
cmp
push
cmp
aas
and
pop
sbb
rcrb
xor
xor
mov
mov
sbb
scas
inc
lea
push
shlb
int3
repnz
jae
clc
pop
movsl
ja
js
jb
fstl
sub
shll
dec
lea
push
imul
or
das
leave
lds
bnd
pushf
add
sbb
dec
sahf
pop
xchg
out
inc
das
aas
ds
aas
dec
mov
jecxz
dec
test
dec
xor
inc
adc
shlb
fwait
not
cltd
sbb
jo
sti
test
in
pop
push
lret
out
jno
scas
push
add
mov
fcomi
test
pop
movsl
addr16
insl
insb
inc
scas
popf
cmp
pop
xchg
xor
jnp
inc
sbb
in
or
leave
jnp
out
inc
popf
sti
jge
pop
ret
cmpsb
out
mov
jno
cwtl
push
jmp
pop
inc
or
mov
xchg
mov
add
imul
cmp
and
push
jge
ficoms
push
inc
stos
movsb
jns
ljmp
push
testl
mov
sub
imul
pop
aas
rorl
pop
andl
psubq
add
mov
mov
dec
aaa
xchg
push
leave
jb
adc
movb
dec
test
cmp
ret
jbe
adc
int3
lret
ljmp
xor
ss
pop
call
lret
mov
cli
hlt
lcall
andb
xchg
loope
mov
out
push
int
add
dec
jne
push
int
mov
rorl
cltd
adc
dec
pop
ljmp
fldt
adc
fsub
daa
cs
add
mov
add
pop
adc
or
popa
jecxz
int
cmp
sbb
cwtl
stc
xor
gs
jmp
lcall
mov
mov
and
mov
ds
and
fwait
js
pop
jb
sbb
mov
or
bound
xchg
out
adc
xor
popf
push
outsb
stos
sti
xor
outsb
sub
xchg
push
mov
sub
mov
pusha
sbb
out
loop
aaa
mov
outsb
es
sub
out
lock
xchg
sbb
adc
inc
in
scas
je
dec
cmp
inc
cmp
add
outsl
mov
scas
xchg
int
test
add
mov
mov
cmpsb
mov
mov
xchg
jnp
ret
mov
btc
pusha
xorl
mov
xchg
mov
nop
inc
mov
push
xor
arpl
inc
pop
lea
scas
sub
adc
in
mov
mov
rcrb
mov
popa
sub
fwait
pop
jge
pop
pop
mov
and
xchg
xchg
add
adc
cmpsb
and
push
dec
or
adc
in
xor
jae
nop
out
inc
push
lds
cmp
pop
in
lcall
in
cwtl
mov
sub
sbb
and
and
enter
cli
js
dec
adc
mov
adc
cs
cld
cmpsl
daa
aas
xor
cmpsb
pop
pushf
xchg
mov
jb
stos
scas
cs
fstl
and
lcall
and
mov
ja
icebp
sub
jmp
inc
stos
xor
dec
xorl
fs
dec
pop
ja
sbb
jge
or
sti
sub
hlt
add
or
inc
sahf
mov
add
dec
dec
ds
or
out
fs
sbb
fs
sub
sub
lahf
stos
add
dec
mov
xor
sub
adc
int
push
push
and
std
into
ds
lea
imul
mov
ss
pop
mov
xlat
dec
jae
outsl
mov
lods
mov
shll
mov
ficoms
jae
lods
cmp
mov
inc
or
push
and
rcrb
rep
pop
ja
in
jnp
inc
jns
imul
mov
xchg
adcb
ljmp
bound
cmpsl
inc
mov
fprem1
sub
cmp
mov
fistl
push
aaa
imul
dec
mov
out
cmpb
fiaddl
cwtl
ljmp
jl
cmpsl
sbb
movntq
cld
xor
add
xor
repz
mov
add
sti
enter
and
es
clc
mov
adc
clc
xlat
outsb
cmp
jmp
jb
sti
jne
sbb
mov
insl
add
out
pop
pop
mov
leave
in
xor
sbb
filds
rorb
or
or
pop
mov
sbb
lahf
pop
mov
inc
fcmovbe
add
rolb
jo
std
mov
jl
and
cwtl
aam
stos
lahf
rolb
lea
or
mov
mov
es
insb
mov
xchg
or
fiaddl
mov
mov
sub
test
xor
mov
jg
xchg
pop
mov
insb
jo
adc
loopne
sti
push
je
lods
bound
sub
push
sbb
dec
fimuls
out
in
dec
pop
push
xor
out
dec
cmpsl
imul
inc
sub
add
inc
mov
push
pop
xor
inc
in
les
cmc
xchg
imul
pop
add
or
frstor
lret
sub
pop
enter
lods
jo
fisubs
aas
jle
push
cmc
add
push
fcomps
popf
sub
adc
lods
dec
pop
cmp
jns
pop
sbb
sbb
je
mov
icebp
inc
push
cmp
ja
cmp
aaa
push
aam
adc
sub
loopne
stos
negl
into
push
test
mov
pop
pop
cmpl
mov
xor
js
dec
das
or
mov
movb
push
mov
xchg
inc
adc
stos
push
imul
outsb
or
ja
das
mov
addl
enter
outsl
jb
adc
ficoml
mov
mov
scas
int
or
xchg
and
or
in
dec
push
pop
sub
iret
mov
insb
mov
inc
inc
jae
jg
adc
sbbl
adcb
sub
iret
push
shl
pop
sbb
popa
clc
rorl
pop
dec
fldenv
and
sbb
cmp
iret
dec
enter
mov
rcll
aaa
mov
rcll
mov
mov
jo
je
xchg
ja
movsb
mov
scas
push
adcb
mov
mov
xor
gs
lds
adc
add
lds
insl
in
or
es
lret
into
jae
sbbb
and
lock
outsl
or
ja
sub
stos
lahf
std
testl
cmpb
sbb
std
aaa
stc
lret
and
mov
push
je
dec
xor
lods
mov
lock
ljmp
inc
sub
lock
and
fisubrl
test
sti
clc
loope
sbb
push
movsl
pop
imul
cmp
icebp
lock
mov
test
xchg
gs
imul
push
add
lret
pop
adc
pop
aaa
adc
movsb
arpl
dec
push
out
mov
sbb
pop
bound
insb
mov
sahf
loopne
sub
push
mov
pop
outsl
dec
and
in
dec
dec
add
cmp
sub
out
rcrb
mov
cltd
push
mov
fwait
add
out
jmp
sbb
xchg
sahf
sbb
jle
xor
mov
mov
dec
lods
and
xchg
movsl
ret
inc
inc
leave
out
out
xor
pop
mov
lods
add
hlt
inc
test
aas
std
cmp
xchg
das
inc
jl
inc
ljmp
mov
sub
cmp
ljmp
push
mov
adc
pop
ja
mov
xlat
xchg
xlat
push
fdivr
pop
jmp
fsubrs
add
xor
cmp
mov
rorb
ret
jg
and
sahf
sbb
fcmovnbe
cmp
mov
lds
add
test
ja
sbb
mov
inc
lahf
lahf
push
add
out
cmpsb
and
fmul
mov
mov
aas
mov
sbb
pushl
cmp
xlat
addb
jle
imul
cld
mov
inc
add
scas
scas
cld
xor
jl
mov
jge
xlat
pop
mov
or
inc
push
ja
jmp
push
push
aaa
mov
jae
testl
popf
add
sub
mov
outsl
cmp
popa
stos
jle
pushl
and
ss
mov
and
mov
mov
out
push
push
daa
pop
daa
aad
imul
mov
repnz
inc
sbb
sbb
pop
pop
sahf
sub
mov
sub
clc
xchg
push
sahf
push
mov
pushf
aad
pop
dec
in
mov
dec
xchg
pop
adc
in
mov
pushf
iret
mov
je
pop
jb
sbbl
xor
punpcklbw
push
adc
inc
pop
xor
inc
sub
pop
sub
stos
dec
dec
and
mov
test
xchg
and
mov
dec
idiv
lea
dec
fsubs
fs
push
pop
mov
or
push
sub
div
outsl
mov
add
in
jmp
cmp
aad
sub
push
pushf
xchg
ret
fstps
push
pop
sbb
mov
popa
negl
out
sbbb
int3
fs
nop
mov
lods
arpl
dec
cli
jl
xor
mov
rcrl
repnz
fwait
and
mov
and
jle
lods
out
sub
fidivrl
loopne
jmp
and
test
or
and
insl
out
sub
cmp
jecxz
dec
pop
push
dec
mov
mov
add
jno
xchg
jg
xor
xchg
inc
dec
pop
push
fucom
pusha
push
jmp
jbe
inc
cmp
push
jne
lret
stos
mov
mov
xchg
xor
xchg
inc
xchg
les
repnz
add
pop
lea
repz
and
les
dec
pushfw
mov
jge
inc
xchg
cs
in
push
sub
or
push
ds
imul
sbb
arpl
test
sarl
lds
in
mov
mov
sub
jne
dec
sahf
sub
jl
mov
sbb
push
sub
mov
mov
test
mov
add
mov
nop
rcl
xchg
cmp
fs
adc
je
loop
insb
dec
popf
xchg
cmpsl
pop
rcr
push
lahf
aaa
sub
loope
xchg
daa
les
test
mov
xchg
mov
repnz
mov
int
ja
sub
data16
je
adc
jp
add
sbb
mov
lea
cwtl
loopew
push
jne
sub
sbb
pop
inc
lcall
inc
or
add
sti
int
dec
daa
mov
cmpsl
loopne
push
mov
mov
add
inc
and
scas
inc
out
and
mov
inc
dec
cmpsl
in
in
jmp
xor
in
adc
fbld
or
mov
pop
cli
scas
cmpb
or
cwtl
arpl
mov
jmp
imul
pop
test
inc
add
pushl
push
in
andb
cmp
in
stc
std
and
rol
dec
test
adc
cmp
clc
mov
xchg
stos
decl
adc
sti
pop
cld
push
in
aam
fmul
dec
repz
pop
fwait
aas
divl
jbe
push
fdivl
fs
or
pop
lea
outsb
cmp
imul
mov
fs
and
add
xlat
es
out
mov
sbb
mov
cmp
fsubp
nop
xor
fdivrs
push
sbb
add
or
cs
aam
sub
test
ja
push
jb
xor
movsb
mov
stos
fdivs
icebp
sbb
xchg
pop
xor
cmp
int
cwtl
and
sub
jecxz
or
jmp
xchg
xor
nop
mov
stos
popa
outsl
pop
rorl
loop
int3
mov
lahf
jle
insb
mov
xor
jge
lods
and
cmc
arpl
stos
adc
cltd
xchg
popf
in
stc
and
leave
arpl
or
jno
mov
pop
decb
test
dec
cmp
lcall
fnstsw
or
pop
in
mov
add
in
add
loopne,pn
je
dec
xchg
iret
jo
mov
mov
fimull
fs
pop
jns
inc
cmp
jo
push
fisubs
iret
stc
xchg
mov
loop
lods
push
mov
mov
notb
mov
pop
mov
mov
and
xchg
aas
out
popf
sbb
sbb
aas
jmp
mov
pop
xchg
outsl
sub
pop
pop
rcll
xchg
out
out
xchg
ja
daa
add
push
xchg
loop
pop
imul
push
jnp
sub
rclb
push
imul
pop
int
cwtl
lods
outsl
cld
pop
sub
lret
aaa
fdiv
pinsrw
add
movsl
jnp
mov
fildl
sahf
jns
mov
leave
xchg
addb
cmpsl
lea
lods
test
xchg
in
cmovs
cmp
xor
cs
lods
sbb
cmp
popf
adc
js
in
xchg
aam
jecxz
adc
pop
pop
adc
test
ss
and
jbe
sub
movsb
sbb
aas
sbb
adc
add
and
inc
mov
pop
shr
aas
pushf
dec
stos
adc
xchg
iret
xchg
xor
pop
inc
lea
push
inc
cmc
mov
ret
cmc
mov
fbld
adc
pop
cs
test
xchg
mov
mov
in
cmp
cmp
in
js
and
arpl
cmpsl
adc
or
xchg
stos
jmp
push
push
fldl2t
and
cmp
bnd
int3
or
adcl
push
mov
pushf
pop
mov
pop
mov
jmp
sub
inc
in
pop
push
pop
push
in
inc
push
mov
inc
mov
outsl
test
addr16
insb
cmp
jg
xchg
adc
iret
adc
enter
ss
and
mov
add
push
dec
dec
ss
sahf
and
mov
cmp
test
inc
fdivl
rorl
neg
jp
jl
mov
lcall
mov
arpl
test
pop
push
int3
data16
aam
out
sbb
ss
jle
mov
jg
imul
clc
inc
sub
fadds
outsb
fcomps
ficoms
mov
test
js
sbb
jmp
adc
xor
sahf
push
and
xchg
jae
aaa
adc
xchg
xor
xchg
adc
cmp
or
mov
lods
ljmp
pop
jns
inc
movsb
loope
sub
lods
mov
arpl
lcall
jg
or
scas
testb
add
js
push
mov
test
cwtl
pop
repnz
lods
mov
ljmp
xchg
out
push
adc
add
xchg
cmp
or
push
push
mov
cmp
push
adc
popf
ret
cmp
lret
dec
add
stos
pusha
ret
mov
shll
fadds
jbe
arpl
pop
pop
leave
jmp
adc
aad
iret
arpl
cmpsl
std
lcall
push
jg
dec
or
lock
imul
jecxz
stos
mov
and
pop
idivb
ret
dec
inc
outsl
pusha
adc
mov
stos
bound
bound
xor
fldenv
pushaw
jg
dec
in
dec
fstl
shlb
cmpsl
xor
decb
daa
ja
cmp
loopne
inc
das
pop
mov
mov
fwait
adc
cmpsb
loope
aad
xchg
scas
jne
repnz
adc
mov
mov
xchg
jns
aad
jne
fwait
in
jne
xchg
xor
add
add
mov
scas
add
out
shll
sti
adc
mov
popf
enter
pop
push
or
mov
sub
adc
outsl
xchg
pop
inc
ficomps
inc
inc
test
outsl
fldenv
lret
pop
and
jmp
loope
push
inc
out
lret
into
mov
sbb
popa
and
and
push
ss
dec
cld
popf
xchg
leave
scas
push
sti
outsb
lock
push
cmp
movsb
inc
imul
adc
in
or
fiaddl
xchg
mov
ja
cmp
fmuls
lock
fcomps
int
popa
adc
cmp
gs
dec
stos
mov
test
mov
xor
jle
mov
bound
loope
fwait
xlat
stc
xchg
rolb
sub
dec
mov
pop
lock
sahf
push
fcomps
testb
inc
mov
std
jecxz
out
xor
sub
das
test
mov
std
movsb
adc
mov
mov
push
cmp
push
ds
iret
xchg
fcomi
fs
sbb
ja
mov
subl
lds
inc
in
mov
dec
repnz
and
jecxz
insb
adc
pop
outsl
mov
sbb
sbb
add
dec
mov
sub
sub
pop
movsl
scas
pop
cs
mov
mov
dec
aam
rorl
add
cmp
xor
out
pop
mov
xchg
out
out
cmp
jecxz
inc
pop
adc
sbb
mov
sahf
test
sub
cmp
xchg
lret
sub
sahf
mov
pop
lock
xchg
or
sti
fistl
pop
out
mov
repnz
jo
fsubr
stos
inc
mov
iret
push
mov
pop
jnp
shrl
int3
pop
inc
jnp
arpl
push
sar
xchg
test
pop
and
add
andb
push
sahf
and
pusha
dec
or
cmp
scas
jg
inc
inc
shll
clc
lods
aad
mov
clc
sub
dec
mov
adc
sub
or
int
insb
ret
movsl
add
enter
out
mov
nop
popw
lds
bound
shlw
test
iret
and
popf
lret
aad
jp
pop
push
fisttps
dec
fcomps
inc
or
enter
jg
inc
inc
bound
jle
or
xlat
adc
les
jmp
in
insb
adc
and
mov
pop
mov
xchg
adc
sbb
roll
lods
or
cmp
pop
ffreep
cmc
andl
fwait
inc
rcll
mov
push
arpl
mov
inc
fdivl
pop
scas
scas
push
lods
fnop
sar
dec
cmp
movl
imul
out
xor
xlat
push
xchg
mov
jae
push
insb
mov
in
insw
in
sbb
cmpsl
sub
push
and
inc
into
int3
and
and
js
xor
add
and
ja
jnp
gs
and
aad
jle
incl
sbb
push
leave
or
xchg
cs
fadds
cmpsb
xchg
adc
js
sti
imul
ret
inc
xchg
sbbl
fidivs
mov
ja
cmovp
xor
adc
rorb
imul
add
out
xor
sbb
stos
inc
xchg
or
add
out
loop
sti
inc
pop
xchg
icebp
hlt
loopne
test
adcl
gs
popl
jle
adc
loop
cwtl
mov
mov
test
mov
mov
ror
pop
mov
jg
std
jl
div
js
fldl
sti
lret
dec
jp
mov
xchg
push
xchg
cmpb
lea
insl
inc
ret
jp
in
nop
test
inc
cmp
add
push
jae
pushw
mov
pop
sbbl
sahf
cld
leave
mov
pop
mov
fdivl
sub
jb
test
xchg
adc
lock
push
sub
data16
cmp
out
xchg
fs
push
pop
fwait
hlt
out
movsb
cmp
sti
mov
scas
pop
add
mov
mov
inc
mov
imull
out
and
push
push
inc
sbb
enter
adc
daa
aad
push
adc
mov
mov
sub
dec
fmuls
cmp
cltd
shlb
cmp
in
mov
rclb
inc
lahf
leave
mov
call
or
cmp
in
popa
incl
and
shrl
outsl
stc
jg
es
pop
adc
daa
mov
cmpsb
inc
daa
lret
xor
sub
mov
mov
pop
je
sbb
pop
xor
or
add
mov
aam
popf
pop
sti
dec
andb
cmp
mov
xchg
rclb
ret
test
gs
cmpsl
sub
inc
scas
cmpsb
mov
aam
fsub
out
mov
cmp
pop
leave
es
lahf
mov
movsb
les
cmovl
stos
ljmp
mov
jbe
mov
mov
cmp
push
idivb
pop
pop
mov
aas
and
push
xchg
psubusb
fcomps
mov
jno
pushf
int
and
push
ret
push
orl
fcompl
cmpsb
xchg
pop
cmp
test
cmpsl
xor
push
mov
outsb
inc
mov
lahf
leave
inc
lods
pop
xor
xchg
lods
pop
daa
add
add
test
adc
mul
sbb
jno
imul
sub
xchg
add
in
inc
fistpl
insb
cmp
mov
dec
inc
mov
scas
jmp
das
insl
ljmp
sbb
sub
pop
das
xor
mov
cltd
out
push
xchg
xlat
and
ds
js
push
fcomip
mov
ja
add
or
push
call
dec
mov
cmp
or
pop
out
mov
stc
adc
movsb
dec
pop
mov
out
pusha
gs
out
stos
mov
sub
push
push
cld
faddl
jbe
adc
mov
mov
cwtl
aam
inc
rorl
fidivl
pop
cmpsl
mov
adcl
pop
push
outsl
adc
test
cmp
popf
mov
sahf
lret
lcall
cmp
dec
out
or
xchg
dec
and
sbb
sbb
in
mov
jle
sbb
push
mov
or
fwait
push
xchg
jl
adc
mov
enter
rcrl
iret
movsb
fistps
xor
jp
xchg
and
int
push
xor
sbb
xor
pusha
jno
loope
mov
or
and
sub
repz
or
shlb
sub
sbb
cltd
out
rcrl
pop
jg
add
stos
or
lea
in
adc
outsb
lods
mov
daa
push
add
repnz
addr16
sarb
sbb
jge
sahf
lcall
sbb
push
mov
mulb
in
lds
sbb
imul
xchg
loop
and
add
cmovnp
sarl
push
in
mov
imul
xor
lcall
sbb
out
cmp
sahf
adc
notb
ficomps
xchg
ljmp
loopne
sub
cmp
sbb
jbe
rcll
push
inc
sbb
xor
out
rorb
mov
xor
mov
faddl
sub
push
imul
mov
les
mov
pop
xchg
mov
idivl
pop
arpl
enter
outsb
stos
xor
test
faddp
fmull
mov
cmpsl
xor
scas
arpl
cmpsl
pop
inc
in
xor
xchg
jns
push
inc
push
dec
or
xor
out
mov
stos
dec
lahf
insl
int3
xchg
stos
sub
xchg
mov
jl
inc
cmp
sbb
mov
mov
sarl
pop
in
hlt
pushf
mov
push
sub
sbb
out
and
xchg
jge
xchg
outsl
ret
adc
push
jb
in
scas
mov
xor
lock
jp
xchg
or
xchg
notl
andb
test
je
push
mov
lret
shlb
xchg
insl
xor
dec
lea
cmpsb
addr16
xchg
push
insl
nop
mov
stos
lret
push
mov
mov
cmp
xor
out
jno
jmp
test
and
fidivrs
int3
jmp
or
xor
bound
bound
xchg
add
xchg
sub
and
lock
jmp
xor
pop
shll
and
cltd
cmp
int3
les
stos
outsb
aaa
push
xchg
mov
push
lahf
mov
js
mov
jg
iret
rcll
sbb
and
xlat
cmp
and
stc
inc
inc
pop
popf
or
sbb
sbb
or
xor
push
scas
rcrl
mov
cmp
dec
push
add
inc
jg
xor
dec
or
or
sbb
nopl
iret
lea
fldl
out
loop
push
ret
into
or
jg
loopne
lcall
mov
sub
xchg
js
mov
scas
cmp
out
shl
push
pusha
cli
mov
and
xchg
test
dec
and
xor
jae
jge
jecxz
inc
not
int
xor
scas
imul
dec
and
enter
and
and
outsb
lods
stos
stos
adc
mov
mov
test
mov
and
lcall
adc
push
addl
rorl
push
pop
cld
jnp
stos
jp
xor
mov
loopne
jbe
jno
in
sub
es
outsl
fsubrs
jo
sub
faddl
sub
mov
and
bound
mov
shlb
or
dec
pop
leave
dec
jb
jmp
stos
push
inc
aas
in
pusha
push
cli
ret
push
inc
push
dec
ret
daa
push
cltd
dec
call
sub
sbb
enter
sahf
jecxz
in
mov
int3
es
adc
cmp
and
xor
sti
pop
fs
popf
roll
fsub
pop
fdivp
xchg
jne
aad
and
adc
dec
xchg
lods
imul
cmpsb
mov
outsl
cli
add
popa
pop
and
cs
sbb
push
push
cmpsl
imul
sbb
insl
push
mulb
pop
daa
adc
mov
add
push
fsts
lcall
pop
push
repnz
popf
call
xor
mov
mov
jo
push
and
dec
sub
add
cld
inc
dec
test
test
jb
xor
mov
sbb
push
mov
xor
insl
pop
xchg
sub
shll
cmpb
mov
rolb
pop
and
out
mov
enter
push
jl
stc
pop
mov
fcmovu
test
dec
inc
repz
popf
pop
rcrl
pop
test
mov
adc
and
jbe
jae
data16
std
pop
mov
loopne
push
shlb
xchg
mov
ljmp
cmp
mov
mov
fiaddl
call
xor
rol
push
int3
aaa
gs
push
push
sub
fisubs
arpl
adc
in
lods
iret
add
cs
mov
mov
dec
inc
sub
mov
addl
insl
loopne
aad
mov
mov
add
sbb
outsl
frstor
into
cmp
rorl
xchg
outsb
xor
clc
xchg
mov
mov
into
mov
sub
mov
mov
mov
jbe
test
and
dec
sub
lods
ret
leave
jecxz
leave
jmp
int3
mov
mov
mov
popa
sub
sbb
dec
adc
fstl
ret
fistpll
ljmp
sbb
stos
pop
sub
dec
nop
inc
mov
xchg
insb
in
jg
inc
push
sbb
cmpsl
and
cmpsl
les
les
xor
xchg
pop
leave
rcrl
inc
loopne
rol
aad
and
in
call
loopne
inc
push
or
mov
mov
and
inc
dec
adc
sbb
enter
mov
gs
shrb
ss
mov
loopne
xchg
sbb
std
lcall
pop
outsb
shll
pop
jbe
jg
sti
cld
inc
cmpsb
xchg
insl
sub
rolb
aam
xchg
out
sahf
or
pop
call
loop
in
add
scas
sbb
mov
dec
mov
js
xor
cwtl
and
xor
mov
mov
lret
adc
bound
mov
rcrb
adc
aam
push
aas
or
xor
jp
pop
cmp
insl
loopne
sbb
ljmp
lcall
ds
push
sbb
notb
xchg
pop
add
addb
addb
xchg
or
cmc
leave
mov
fcompl
jae
adc
push
cmp
mov
jo
xor
sahf
cmp
xchg
cmp
outsb
stos
aam
dec
cmp
mov
xchg
out
stc
das
xor
bswap
mov
movmskps
and
jle
fists
add
jns
loop
fistpl
test
pop
jo
icebp
jnp
mov
xor
or
clc
mov
stos
jb
jmp
adcb
jl
andb
mov
cmp
fisttps
mov
js
add
or
mov
out
push
and
mov
repz
add
int
sbb
aas
dec
mov
or
mov
push
pop
pop
aad
dec
mov
ja
mov
and
hlt
das
in
pusha
inc
push
pusha
mov
mull
push
xor
scas
stos
mov
fs
mov
mov
insb
popf
sbb
or
and
mov
adc
push
jnp
adc
pop
xor
imul
das
imul
scas
mov
int
jp
push
add
and
into
push
das
pop
mov
test
add
shl
test
xor
cli
fs
mov
or
inc
mov
cmpsl
out
addl
inc
pop
int
mov
xchg
int3
mov
sbb
scas
jmp
pop
fisttps
sbb
cmp
cld
les
or
leave
lods
stos
pop
pop
bswap
jl
pushl
sub
jno
pop
mov
aad
mov
loop
mov
mov
popf
pop
inc
add
or
jno
mov
pop
push
pushf
mov
frstor
leave
addr16
je
call
lods
adc
daa
pop
std
and
lret
push
scas
in
jno
mov
xchg
dec
out
sub
xchg
fs
xchg
out
cld
or
ds
jns
fisttps
daa
jmp
xor
nop
scas
in
adc
mov
lahf
inc
xorl
add
imul
outsl
lahf
add
daa
or
in
mov
xchg
mov
pop
rcr
lcall
mov
in
dec
pop
xlat
sub
sub
and
nop
pop
int
mov
test
jbe
test
adc
jo
ja
push
popa
idivl
mov
xchg
stc
out
mov
pop
pop
sbb
mov
sub
mov
and
xchg
or
fwait
adc
popa
mov
xor
lcall
jae
sahf
fs
jp
cmp
std
pop
loop,pn
test
int3
adcb
pop
lds
mov
mov
push
outsl
sbb
enter
xchg
dec
sahf
movsl
cmp
out
lret
or
dec
cmp
imul
add
ljmp
roll
ds
in
xchg
sbb
pop
xor
stos
into
cltd
mov
imul
adc
push
ja
test
outsl
test
repnz
fsts
mov
out
rcrl
mov
pushf
icebp
idivb
andl
add
es
jo
or
cmpsl
xchg
imul
ret
dec
pop
mov
push
out
test
lds
daa
int
fcoml
push
jl
fnsave
mov
fbstp
arpl
subb
mov
or
pop
in
or
xor
mov
jae
lcall
or
push
cmp
loopne
cmp
sub
ret
add
sub
mov
jp
jne
adc
test
fiadds
sbb
mov
sbb
mov
movsb
dec
negb
loope
in
fs
ret
jae
mov
jbe
les
sbb
fidivl
jg
repz
in
sti
or
push
negl
loopne
mov
push
dec
mov
mov
dec
jmp
mov
enter
mov
fcmovnbe
outsb
add
into
jmp
aam
rolb
js
mov
pop
pop
mov
out
inc
cmp
stc
add
arpl
mov
andb
xor
mov
cli
gs
daa
cltd
imul
pop
aad
ds
jg
out
push
std
mov
jno
push
mov
jae
cmp
jbe
inc
call
pop
dec
pop
xchg
hlt
repnz
aas
add
rcl
ret
sahf
inc
cmpsl
je
push
test
les
jle
call
pushf
push
jo
xchg
out
cli
jmp
mov
inc
jno
lods
ror
jns
jmp
lods
rol
inc
xchg
pop
push
push
lret
adc
insl
inc
or
and
adc
call
lahf
jecxz
dec
nop
mov
into
iret
test
inc
add
inc
shl
das
ds
and
xor
loope
inc
aad
jnp
mov
shll
aad
fcmovnu
lret
test
rclb
and
out
sbb
lock
mov
sub
loope
out
in
cmp
lds
mov
rclb
rorl
inc
jecxz
inc
pop
push
inc
iret
xchg
adc
nop
cmp
mov
add
js
xor
push
sbb
dec
mov
lods
add
mov
leave
ret
mov
mov
mov
cmp
out
adc
xor
cli
les
sbb
idivl
cmp
jl
dec
imul
push
mov
pushf
cmpsl
daa
pop
push
ja
mov
hlt
repnz
mov
inc
sub
popf
cmp
and
cld
in
out
xor
jp
rorl
mov
pop
aam
sbb
cs
rorb
jmp
es
mov
xchg
dec
lds
hlt
in
xchg
fsubrs
and
lahf
lea
leave
loop
pop
shll
xlat
xchg
mov
mov
cmpsl
dec
mov
pop
sbb
push
and
loop
out
sahf
cmpsb
push
inc
stos
xchg
or
loope
mov
adc
lds
repz
mov
shlb
push
pop
arpl
cmp
xor
fcoms
sub
in
xchg
mov
cmp
in
scas
dec
std
cltd
shrb
jmp
sbb
sub
fwait
cltd
cmc
adc
pop
and
pusha
loope
movsl
pop
mov
aam
pop
inc
dec
jecxz
adc
enter
push
in
mov
mov
pop
jmp
call
cmp
out
push
mov
add
pop
cmp
push
pop
out
jnp
jne
sub
div
lock
cmp
jle
pop
xor
sbbb
sbbb
add
xchg
pusha
xor
cmp
call
push
in
int3
into
in
repz
cmpsb
push
int3
sub
rcll
xor
clc
mov
push
jge
fld
rolb
and
inc
lret
mov
or
xor
dec
cmp
mov
push
fst
or
cmp
mov
sub
push
lods
push
loop
and
push
std
and
cs
stos
xchg
or
and
xchg
add
enter
shll
inc
into
jmp
jno
cmp
jae
mov
inc
sub
clc
cmp
mov
xchg
dec
cmpsl
push
insb
push
xor
lcall
fdivrs
rclb
inc
popa
outsl
mov
ficompl
xor
mov
repnz
loopne
ss
add
call
cmc
sub
loopne
jns
xchg
inc
cs
jl
adc
outsl
pop
add
pop
adc
mov
xchg
push
add
add
push
repnz
pop
pop
mov
sahf
aas
xor
pop
rclb
adc
sbb
sub
add
cli
cmp
and
fsubp
jns
or
inc
out
pop
sub
dec
int3
jmp
or
in
les
addr16
xchg
js
adc
fwait
hlt
mov
mov
cmp
lods
loopne
sbb
xor
xor
add
nop
lea
add
xchg
cmp
enter
xlat
ss
mov
hlt
into
mov
dec
cmp
daa
pusha
fnstenv
and
aad
js
sbb
jle
xchg
fildll
nop
daa
dec
push
mov
or
mov
out
lods
xor
adc
mov
icebp
call
out
dec
cmpsl
dec
dec
sbb
ljmp
mov
jbe
or
xchg
adcl
mov
mov
xor
mov
jno
inc
fldenv
fsubl
fs
fstl
adc
lret
adc
xchg
cmp
subl
stc
in
insl
push
mov
aaa
loopne
ljmp
push
cli
filds
xor
rcrl
or
sbb
repz
xor
cmc
cmc
xor
jne
out
jae
inc
sbbl
mov
je
ret
arpl
stos
je
loopne
out
daa
or
add
aas
int3
jb
imul
mov
bound
lock
dec
out
scas
cmpsl
cmp
fs
jae
mov
jns
dec
pop
mov
jbe
bound
sub
rorb
mov
xor
icebp
pop
push
mov
shrb
mov
push
jns
sub
pop
rclb
cs
adc
pop
test
mov
or
daa
sub
fisubrl
jns
out
icebp
imul
js
icebp
leave
aad
xchg
push
test
stc
sbb
sub
rcl
cs
push
pop
clc
pop
aas
xchg
enter
es
shrl
mov
jmp
lcall
jnp
push
adc
rcr
movsl
fsts
jmp
mov
es
mov
adc
call
mov
xorl
xchg
jbe
or
add
lcall
enter
cmp
aas
mov
push
ja
pop
movsl
test
xlat
sbb
dec
ljmp
lahf
pop
sub
adc
gs
jmp
js
jecxz
mov
lods
push
ss
and
add
imulb
cli
daa
rorb
xchg
mov
pop
orb
pavgb
and
mov
pop
xorl
push
cwtl
cmp
dec
fisubrl
or
imul
js
clc
inc
fsubr
push
test
mov
iret
jb
mov
pop
fsts
mov
dec
xor
pop
and
jae
shlb
sti
loopne
dec
xor
dec
mov
push
das
loope
inc
mov
dec
repz
in
push
fldl
or
sbb
adc
add
les
out
mov
loopne
ja
cmp
lcall
test
pop
mov
dec
mov
addr16
dec
push
xchg
lea
es
cld
mov
push
ljmp
pop
ret
add
inc
aas
fdivp
sti
mov
pop
sub
lcall
int
cltd
cli
cmp
es
or
push
cmp
sub
mov
adc
mov
ret
cmp
pop
pop
lods
bound
or
lock
sbbl
mov
adc
xor
lcall
pop
enter
fdivr
add
clc
imul
scas
cmpsl
or
gs
cmp
clc
add
test
sbb
lea
inc
hlt
std
aaa
imul
inc
mov
pop
test
inc
jmp
adc
sub
mov
and
cmp
xor
into
adc
add
jg
pop
xor
cwtl
call
mov
sbb
mov
leave
daa
sub
jl
pop
xchg
testl
jecxz
push
jmp
aad
rcrb
std
out
fldl
cmp
pop
cs
sbb
sub
push
pop
push
cmpsl
push
hlt
imul
ficompl
and
notl
mov
push
xchg
xor
shlb
pop
outsl
fs
xchg
push
outsb
mov
enter
sub
movsb
movsl
imul
jae
xlat
adc
cmpsb
jns
clc
ret
in
mov
jno
iret
sbb
pop
mov
mov
fwait
int
adc
sbb
call
cs
decb
mov
aas
sbb
jbe
cmp
insl
cli
sub
pop
aam
pop
in
addb
es
add
in
mov
inc
push
dec
cmp
out
sub
push
ss
outsb
jge
loopne
sar
mov
test
dec
std
mov
jns
add
cmovb
jmp
and
test
mov
sti
cld
cmp
shll
cmc
mov
and
es
pop
or
pop
adc
adc
js
cs
cltd
addl
inc
pop
cld
mov
test
lret
cmc
lret
arpl
int
in
iret
xor
push
leave
xchg
notl
xchg
setp
fimuls
add
jbe
pop
jg
mov
sub
out
imull
addb
cmpsb
inc
jge
stos
pop
jp
dec
xchg
mov
mov
mov
and
pop
repnz
imul
bound
icebp
fsub
arpl
ljmp
popf
call
pop
xchg
icebp
leave
adc
cmp
popf
sub
pop
pop
jle
push
mov
push
inc
lahf
jb
fsubrl
mov
jp
int
pushf
mov
mov
inc
lods
sbb
adc
push
cmp
push
dec
lahf
dec
adc
mov
lcall
sarl
ret
mov
lods
add
pusha
filds
dec
and
bound
and
sub
add
fstl
aad
xor
sbb
xchg
popa
jmp
push
lods
cmp
cmp
dec
jo
loope
aam
jg
adc
ret
andl
fcomps
jecxz
leave
repz
div
arpl
mov
or
aas
dec
jp
xchg
mov
xlat
dec
mov
stos
les
xor
inc
andl
xor
sub
jae
jge
pop
call
cmpsb
xchg
les
pop
movsl
adc
sbb
push
cmp
mov
push
in
inc
cmp
xchg
fwait
cmp
imul
stos
popf
lret
add
and
sub
ss
test
add
scas
pop
mov
and
lea
packsswb
lcall
mov
into
mov
pop
add
jns
dec
cmpl
and
or
add
mov
sti
cmp
mov
fwait
jg
repz
mov
pop
in
push
jg
adc
mov
ficoml
repnz
fsubrs
cwtl
imul
or
jae
ljmp
mov
pop
sub
adc
mov
mov
addl
mov
mov
movsb
cmp
push
xchg
ds
and
and
inc
nopl
stos
sub
lds
ret
bound
cs
outsb
push
pop
ja
sbb
xor
push
cmpsb
xor
lea
push
imul
push
out
lcall
pop
mov
push
test
xor
or
pop
mov
out
imul
lods
lea
sbbb
outsl
mov
dec
inc
and
test
pop
out
lock
add
imul
outsb
push
dec
push
mov
nop
movsl
inc
xchg
dec
dec
or
mov
xchg
imul
cmp
cmc
aam
sahf
fldt
jl
mov
loope
pop
xor
adc
sbb
mov
mov
sti
test
aaa
stos
mov
sbb
mov
mov
or
cs
mov
and
fiadds
je
das
pop
pop
das
aam
fcomps
jecxz
and
lods
mov
xchg
push
scas
push
scas
pop
xlat
push
or
hlt
push
dec
or
lcall
jmp
xchg
pop
xlat
or
xor
jmp
xchg
popf
add
fwait
and
mov
adc
stos
push
and
mov
xchg
mov
ret
pop
adc
push
push
mov
es
mov
cmpsb
repnz
add
in
clc
sbb
or
mov
and
icebp
sti
pop
mov
push
les
stc
aas
mov
dec
sbb
inc
es
adc
test
push
ror
lret
fisubl
xchg
aas
insl
adc
sete
bound
stc
pop
jg
cltd
xchg
dec
pop
add
pop
cwtl
push
mov
mov
or
adc
mov
div
leave
mov
negb
xchg
pop
daa
xor
jnp
cmp
sbb
lret
mov
mov
leave
add
or
andb
movsl
data16
aad
enter
mov
jae
and
imul
aad
aas
mov
mov
cmp
sub
jge
cmpsb
pop
repz
sbb
dec
adc
mov
mov
xor
stos
loopne
push
out
aaa
test
push
xchg
pop
andl
jmp
fs
push
fwait
mov
and
adc
test
gs
mov
mov
adc
aaa
aam
xor
popa
clc
jmp
out
xlat
lods
jmp
js
sbb
jae
mov
mov
lret
adc
out
loope
je
dec
or
rcll
cmpsl
jle
sahf
add
jmp
paddsw
fprem
sbb
aam
out
pop
inc
sahf
dec
inc
iret
xor
pop
inc
outsl
fld
subb
lret
sbb
dec
push
sete
ds
enter
push
pusha
inc
push
push
sbb
out
jne
inc
addr16
js
pop
cmp
dec
out
icebp
hlt
adc
in
add
xor
sbb
mov
ret
js
dec
pop
mov
sti
lds
inc
adc
js
pop
add
add
test
inc
ret
adc
sbb
mov
mov
lret
xchg
jl
lea
and
and
pinsrw
add
jp
inc
out
call
cs
ja
and
popf
push
mov
lods
mov
out
ficompl
imul
xlat
push
lcall
fistpll
push
lcall
lds
imul
lret
xorb
lahf
ret
mov
lock
xchg
and
add
sbb
test
fdecstp
cmpsb
int
mov
inc
add
aad
out
mov
xlat
pop
fldenv
and
jbe
cmp
push
mov
cmpsb
xchg
in
inc
popf
xor
fcoml
push
icebp
pop
repnz
data16
pop
push
das
stos
mov
loopne
push
test
jns
sbbb
in
mov
xchg
cmp
lods
push
mov
sbb
xorl
or
sub
aam
fwait
fs
sarl
jg
push
sbb
and
cmp
xor
lods
xor
bound
add
xor
cmp
sub
aam
mov
adc
cmpsb
std
mov
add
call
ljmp
insb
dec
sbb
out
xlat
lret
pop
push
insl
std
pop
leave
jnp
and
pop
add
mov
pop
mov
mov
jmp
outsb
cli
pop
mov
loop
test
cmp
inc
mov
loope
add
mov
loope
les
inc
in
fcomip
jp
inc
jecxz
gs
jnp
cmp
es
jbe
xchg
and
cs
fsubrp
and
in
or
or
jle
lods
aam
imul
in
dec
imul
sbb
add
inc
ret
mov
notl
mov
enter
cld
mov
cmp
xor
fldt
push
jle
pop
jmp
js
inc
mov
dec
repnz
xor
andb
daa
movsb
es
push
add
push
in
and
orl
jmp
mov
sbb
arpl
push
mov
mulb
lret
cmp
daa
in
cmp
iret
xor
xchg
xor
imul
mov
nop
or
and
xlat
mov
cmp
jno
aad
int
xchg
adc
push
mov
lea
aaa
hlt
mov
lods
xchg
inc
sbb
sub
xchg
loop
add
subl
and
fnsave
dec
sub
sbbl
jg
push
js
push
loope
xchg
jo
mov
outsl
dec
sub
fmul
out
pop
or
lods
fiaddl
cltd
bnd
and
cmp
mov
push
and
lcall
mov
add
jp
jno
test
push
xor
sbb
mov
mov
mov
dec
fistl
mov
outsb
in
mov
push
in
adc
sbb
fisubs
mov
or
mov
or
outsl
aad
mov
cmp
xor
pop
or
jg
hlt
imul
test
ret
sub
icebp
iret
push
stos
ds
addr16
inc
subb
test
daa
and
ret
repnz
inc
and
mov
mov
and
cs
cli
push
adc
movsb
add
out
push
stos
bound
dec
cltd
loop
adc
lock
cmp
push
cmp
icebp
cs
fxam
mov
in
xchg
sbbl
jg
xchg
and
into
cmp
inc
repz
cmp
push
sub
mov
lret
enter
leave
in
xchg
sub
xchg
cmp
xchg
cmp
insl
into
cmp
test
movsl
dec
into
fistpll
popa
or
xchg
shrl
cltd
push
adc
pop
cmpsl
add
jg
xchg
fidivrl
and
push
cs
dec
rorl
adc
imul
jmp
sbb
mov
sub
cmpsl
aaa
jns
loop
inc
addr16
push
addl
arpl
leave
loope
rorl
ljmp
push
roll
pop
push
or
lods
xor
push
dec
mov
jp
cld
sub
inc
add
and
icebp
loop
cli
int
push
repz
add
ret
repz
jnp
lahf
addr16
sbb
stos
test
xchg
loope
cmpsb
rorl
jne
je
movsl
push
or
jno
mov
lret
fldt
in
fildl
call
in
xchg
cmp
sub
push
xlat
cmp
xor
add
sub
rolb
scas
mov
inc
jg
rorb
dec
adc
mov
xchg
ljmp
or
adc
lret
push
je
xchg
pusha
lock
jle
popa
scas
rcrb
mov
sbb
xor
test
aaa
fmull
mov
scas
dec
roll
sbb
push
in
and
xchg
sub
add
in
inc
data16
enter
stos
inc
sti
cmpl
mov
adc
mov
mov
mov
repnz
pop
fcmove
inc
lock
cs
in
cmp
sahf
or
pop
insb
data16
push
or
insb
dec
add
ljmp
mov
jge,pn
push
mov
paddusb
dec
sub
mov
jmp
cli
mov
es
add
out
fidivl
scas
cmc
ret
iret
icebp
aaa
or
mov
sbb
sub
jge
scas
sub
mov
les
dec
ffree
shlb
jge
jne
mov
in
cmp
out
xchg
adc
test
scas
push
cmp
jae
dec
in
add
aam
insb
adc
pop
jg
aaa
fdivr
xchg
xor
int
xor
jbe
or
xor
or
or
addr16
add
lock
je
jg
test
add
cmp
int3
les
mov
sbb
sbb
subb
xchg
imul
mov
jle
leave
rcrl
cli
mov
in
xor
and
add
pusha
enter
es
pop
fs
rep
mov
clc
xor
adc
in
sar
mov
sub
rol
sbbb
icebp
and
rclb
ret
cmpsl
lahf
sbb
lret
dec
push
mov
sbb
test
jo
mov
xchg
pop
flds
ja,pt
mov
mov
jl
rcrb
enter
je
push
mov
mov
repz
bnd
into
sub
dec
lret
adc
jmp
dec
pop
incl
inc
repz
jmp
lret
sbb
xchg
adc
or
bound
call
sbb
fildll
and
sub
out
lret
cmp
inc
les
cmp
fnstenv
dec
sub
sbb
fsubl
inc
pop
sbb
pop
scas
push
dec
fs
je
add
loop
imul
incb
out
inc
or
ds
mov
mov
loope
mov
inc
std
loopne
fidivs
sbb
ret
movsl
dec
sub
dec
mov
je
ror
out
add
test
inc
popf
xchg
dec
andb
jmp
in
sub
xor
adc
mov
in
sbb
incl
mov
loopne
stos
add
push
ret
test
aas
dec
mov
test
pusha
into
fwait
decb
jnp
mov
ja
scas
mov
adc
lret
mov
cmc
mov
cs
jecxz
mov
call
lcall
or
mov
jo
lods
popf
loope
je
pop
jns
orb
jns
clc
stos
shll
cmpsl
jecxz
lcall
mov
nop
fs
cmp
jnp
xchg
jge
push
dec
movntq
out
negl
hlt
mov
les
aas
adc
insb
push
cmp
loopne
cli
cmp
xchg
sbb
push
movsb
pop
dec
cmp
pop
mov
mov
and
or
or
xor
pusha
mov
sbb
cld
inc
pop
sbb
pop
out
sahf
add
sub
push
push
mov
into
inc
call
mov
test
add
stos
scas
mov
jae
mov
mov
enter
push
and
cwtl
faddl
sub
rorl
jmp
pushw
push
ja
cltd
xchg
std
cs
pop
ds
cs
sbb
push
cmpsb
add
pop
pop
push
out
jmp
push
lret
jge
outsb
inc
mov
sub
push
dec
ss
xchg
mov
adc
stc
mov
orl
sub
and
nop
and
mov
pop
repnz
fistl
and
out
shrb
fidivrs
filds
fdivs
outsb
nop
cmp
out
fwait
call
lods
scas
and
push
sbb
or
xchg
xchg
pop
inc
pop
clc
sahf
sbbb
lock
popf
fcoml
mov
cmp
add
js
out
adc
adc
movb
sti
jp
ror
push
aas
aam
movsb
mov
mov
cmpsb
adc
in
in
mov
fldt
mov
es
mov
mov
adc
lock
push
dec
xor
shlb
xchg
xlat
mov
pop
mov
xchg
xchg
jl
mov
jecxz
and
jl
xor
sub
js
mov
pop
or
mov
testb
rcll
push
pop
iret
loop
shrl
mov
sahf
outsb
xchg
iret
xchg
ja
mov
lahf
lahf
xchg
mov
adc
jp
jns
xor
dec
in
sub
mov
push
test
push
pop
icebp
cmp
cs
lret
mov
icebp
cwtl
sub
adc
add
es
popf
push
cmp
shl
jg
mov
out
int3
fisttpl
sbb
icebp
sub
add
sti
lods
lret
fcomps
imul
jno
add
adc
mov
loop
sbb
dec
sbb
xchg
test
int3
adc
push
popf
repnz
mov
xor
add
push
dec
mov
xchg
aad
fimull
or
call
inc
call
mov
mov
inc
mov
push
mov
out
movsb
dec
dec
jl
or
jnp
aas
testl
add
sub
das
xchg
mov
data16
test
mov
rcl
in
xlat
insb
jno
mov
movsl
pop
mov
pop
stos
test
hlt
imul
out
push
rclb
and
sahf
inc
push
mov
cwtl
aaa
into
cld
inc
call
cmp
aaa
xchg
cs
sub
jo
std
sbb
push
pusha
pop
rcl
mov
sbb
in
ret
pshufw
in
push
xchg
mov
lds
pop
add
dec
ret
aaa
sbb
sbb
rolb
cmpsl
xchg
cld
ret
cli
shl
out
test
out
jne
dec
adc
adc
cmpsl
div
bound
mov
sub
add
mov
popa
pop
jno
dec
ffree
xor
sbb
fiadds
ret
add
or
mov
xlat
testl
push
jmp
mov
jmp
adc
call
push
iret
jne
shll
std
mov
adc
or
or
in
mov
mov
lcall
out
xchg
sbb
mov
mov
push
push
xor
sub
icebp
mov
adc
push
push
test
push
sahf
push
xor
outsl
inc
fsubs
cmpsl
sbb
loop
loope
shll
pop
aam
mov
test
xchg
pop
pop
pop
ret
popf
mov
sub
dec
adc
push
out
mov
cs
jl
das
mov
rcll
cmc
jb
fsubrs
fdivs
jge
adc
xchg
cmc
mov
add
mov
push
in
std
mov
push
xor
scas
outsl
arpl
scas
stc
iret
scas
mov
mov
jecxz
rcrl
mov
sbbw
sbb
fsubl
cmp
push
data16
sbb
jp
ss
and
sarb
jns
dec
add
sbb
enter
shrb
pop
clc
xor
push
scas
aas
mov
mov
add
jne
data16
inc
mov
pop
fdivrs
adc
imul
filds
test
rorl
test
test
clc
push
xchg
mov
jb
mov
xchg
fwait
add
out
sub
inc
mov
ret
fmul
sub
sti
inc
push
cmp
shr
lods
push
mov
loope
outsl
cmp
icebp
cmp
xor
nop
aad
lcall
mov
xchg
mov
or
icebp
push
in
sub
mov
ja
inc
call
adc
sub
or
outsl
fs
or
dec
sub
sub
stc
lods
cli
repnz
adc
dec
lahf
cmp
pushf
aam
push
movsl
cmp
jle
mov
cmp
frstor
sti
mov
in
xchg
jp
ds
shr
add
hlt
xchg
fistpl
dec
jmp
iret
lcall
pop
out
and
push
add
xchg
adc
push
cmpsl
mov
fstl
rcrl
cmp
adc
inc
fstpl
fsubr
js
xchg
jno
fucomp
divl
inc
enter
xchg
fstpt
push
and
mov
adc
sub
movsl
repz
aas
and
or
pop
mov
sbb
and
jne
ljmp
push
es
clc
lret
add
fcoms
jl
inc
sub
repnz
lods
adc
jo
or
arpl
je
cmc
cmp
add
fsubl
inc
out
loope
sbb
es
xchg
dec
and
push
mov
test
push
jg
insl
leave
test
dec
xor
mov
jmp
addr16
and
into
and
shll
push
dec
xchg
jge
and
mov
popf
add
fwait
push
sbb
out
adc
inc
mov
outsl
and
imul
adc
fisubrs
pop
rorb
mov
add
fstpl
mov
iret
into
mov
jmp
aaa
jne
aad
cmp
sti
jno
inc
or
push
subl
or
push
inc
push
addr16
xchg
lock
adc
xchg
pushf
sbb
and
in
inc
je
mov
fsub
push
jns
pop
test
and
out
jbe
mov
cmp
std
cmp
jno
int
in
loopew
lock
mov
scas
push
stos
push
das
push
lock
andb
jg
js
loopne
or
repnz
dec
insb
inc
pop
push
shlb
ja
in
roll
je
xor
jbe
aaa
pop
lahf
dec
cmp
add
mov
pop
xor
pop
pop
andl
and
cmp
xor
insb
lods
ficompl
inc
sub
iret
dec
sub
mov
push
xchg
cmc
mov
notb
ds
jmp
cmp
add
cmp
mov
mov
cmp
jecxz
cmpsb
jp
add
and
int
icebp
shlb
mov
jl
pop
pop
jne
mov
pop
push
jns
fwait
xor
lret
sti
pop
add
pop
xchg
mov
pushf
popa
or
scas
int
sbb
stos
outsl
sarl
into
inc
xor
data16
in
mov
fiaddl
ror
sahf
aaa
shll
lea
jge
xor
dec
mov
mov
bound
sbb
push
pop
fmuls
inc
data16
and
cmp
push
mov
sub
cmp
out
mov
adc
dec
jns
xor
adcl
popf
repz
das
sahf
fistl
movb
cs
enter
sbb
cltd
and
add
mov
sub
in
mov
dec
push
in
lret
loop
or
lcall
repz
sub
movsb
adc
mov
shlb
jp
mulb
pop
ss
lret
fcmovnb
lods
push
mov
ficompl
frstor
and
fmuls
fcmovne
push
inc
pop
jbe
jbe
loopne
dec
mov
stc
imul
adc
rep
fidivrs
gs
out
cltd
movsl
rep
pop
and
xchg
xor
inc
cmp
jb
and
or
xchg
cmpb
fbld
call
jge
shrl
mov
pop
push
pop
sub
add
loop
push
or
leave
lds
sbb
loope
lods
ss
mov
test
jns
or
hlt
fwait
jns
insb
arpl
and
jmp
jns
add
and
ret
push
push
or
inc
xadd
xor
into
jb
mov
pop
xor
popf
icebp
inc
cmp
jecxz
stos
xchg
sub
dec
jns
pushf
and
cmp
cltd
push
mov
aas
jmp
add
mov
mov
push
mov
jmp
and
scas
mov
adc
mov
jns
adc
test
pop
mov
std
push
fndisi(8087
bound
push
and
nop
pop
sub
sub
daa
push
insb
adc
mov
mov
int
pop
sub
xor
shl
test
lds
jmp
dec
mov
daa
cltd
inc
sub
mov
sbb
xor
xor
jo
sbb
icebp
fimull
cmp
fadds
cld
cltd
mov
je
cmp
mov
dec
or
shld
ja
dec
xor
out
xlat
data16
out
fcomip
shll
call
fchs
inc
mov
pop
cmpsl
fstps
jnp
dec
insl
sbb
mov
jns
fucomi
daa
and
jmp
cmpsb
xlat
dec
inc
mov
push
mov
cmp
or
imul
mov
mov
gs
mov
ja
push
lods
push
fsub
mov
mov
add
mov
pusha
jl
xchg
notl
mov
pop
mov
push
push
lret
outsb
push
jne
and
mov
fadd
sarb
ret
push
fstps
inc
scas
cmp
dec
bsr
in
rclb
sbb
mov
or
push
push
gs
dec
loope
hlt
ficoml
xchg
ret
xchg
pop
push
std
cmpsl
inc
and
dec
push
add
or
add
ljmp
or
test
mov
popf
aaa
imul
mov
xchg
add
mov
in
ds
sbb
mov
inc
inc
mov
push
sub
ds
add
mov
sbb
push
adc
push
ret
lahf
es
hlt
hlt
out
fcmovu
or
jmp
sub
jg
aaa
add
inc
jge
add
popl
mov
jg
lods
aaa
adc
lock
inc
cmp
jp
aas
mov
dec
test
sti
ret
inc
pop
scas
ficompl
js
inc
mov
adcb
adc
jne
pop
xor
mov
xor
and
xchg
jns
or
mov
cmpl
shll
push
jnp
scas
xor
movsb
mov
outsb
dec
nop
fnstsw
cmp
stc
xchg
pop
mov
in
jbe
subb
mov
lock
push
mov
test
xchg
mov
into
jnp
fistl
out
test
and
jle
inc
sub
jne
jo
add
lret
dec
incl
adc
cmc
test
cmp
pop
retw
outsl
clc
stos
ljmp
aas
dec
in
enter
shrb
mov
add
adc
btr
xchg
dec
xor
add
xor
ss
daa
or
pop
and
jmp
aaa
mov
test
push
xchg
mov
and
dec
mov
adc
clc
xchg
add
ret
and
test
and
inc
leave
clc
inc
mov
xchg
mov
fs
inc
movsb
add
sub
mov
mov
loope
jp
ret
push
loop
jg
pop
out
jl
loopne
aam
ret
xchg
mov
ror
rolb
fxam
lret
stc
adc
push
push
pop
mov
xchg
icebp
les
xchg
hlt
sub
dec
in
push
mov
ror
mov
arpl
gs
push
push
repz
push
xchg
fwait
lret
dec
test
xchg
hlt
adc
aam
push
or
repnz
cmp
call
jne
xchg
call
xchg
sbbb
subl
andb
jo
out
stc
fiaddl
pop
jnp
test
rcll
pop
xchg
cwtl
dec
adc
sar
mov
js
push
inc
mov
mov
fldt
inc
pop
imul
cmp
xor
and
outsb
push
in
adc
pop
test
push
ja
dec
pop
inc
ret
push
sub
xchg
arpl
cwtl
jno
das
cmp
movsl
add
shrl
fbld
dec
ds
add
lahf
push
dec
xlat
jmp
clc
push
jo
jg
xchg
mov
ds
mov
subl
pop
or
xor
addr16
push
aas
adc
pop
jb
push
leave
int3
rcll
mov
outsb
movsl
jg
push
push
mov
repnz
sub
nop
jno
sub
fldenv
test
stos
aam
sub
out
arpl
jb
mov
hlt
jmp
jb
mov
lods
test
adc
mov
cmp
lock
lret
in
push
ja
imul
fwait
in
lcall
loopne
out
jno
add
xor
xor
aam
mov
fistl
addr16
mov
outsl
lcall
add
gs
pop
adc
test
lret
fmull
push
jns
add
pop
jge
push
nop
popa
fdivrs
cmp
loopne
outsl
sti
inc
mov
cld
adc
and
arpl
or
inc
fcmovnb
test
xchg
jl
push
ja,pt
arpl
loop
ret
pop
adc
lret
adc
ljmp
mov
or
mov
aaa
addr16
js
fcoms
fs
negl
test
test
jbe
movsl
push
aam
sub
in
pop
push
mov
aad
pop
jp
sub
or
add
jmp
in
jmp
hlt
leave
mov
xor
rorb
inc
push
rcrb
xchg
xchg
mov
or
jno
xorl
push
dec
packsswb
stos
pusha
mov
push
ljmp
das
repz
or
shll
push
xor
sti
aas
lock
lahf
mov
adc
insl
rcrb
sbb
mov
xlat
and
mov
jns
cmc
and
cmp
mov
adc
pop
and
fidivl
push
xchg
dec
cwtl
sbb
pusha
movmskps
xor
pop
inc
lret
outsb
jp
fadds
rcrl
push
and
jae
inc
sbb
xorl
sub
cli
data16
icebp
mov
xchg
shrb
add
sub
push
or
dec
mov
jbe
mov
or
fidivrs
stos
orps
movsl
push
pop
sub
dec
imul
xchg
out
imul
imul
fists
movsb
push
pop
jmp
in
push
rolb
call
or
sbb
dec
ljmp
cli
mov
mov
jo
pop
dec
shr
sbb
leave
add
and
or
inc
rclb
std
mov
lock
sub
jle
test
jmp
sbb
sahf
mov
data16
inc
add
xchg
push
stos
dec
adc
mov
push
xchg
loopne
mov
jo
nop
adc
mov
inc
fwait
pop
stc
out
mov
lock
jo
xor
xor
inc
icebp
fsubrs
mov
cmpsl
out
fwait
dec
clc
push
stc
in
dec
daa
shrl
mov
mov
mov
insl
push
sbb
pop
pop
lret
mov
inc
js
dec
imul
mov
mov
pop
xchg
divl
pop
subl
movb
ret
mov
arpl
lock
or
xchg
push
lahf
cs
pop
or
outsl
jae
adc
sbb
ret
cmp
jp
adc
mov
xchg
pop
add
xchg
call
and
xchg
push
ds
je
fisttpll
ficompl
inc
mov
adc
cmp
jne
push
sbb
jge
jnp
insb
push
jg
lock
data16
test
mov
mov
jg
jbe
aam
inc
enter
inc
fidivs
out
cmp
inc
sbb
cmp
jo
mov
mov
outsl
cmp
insl
xor
and
xor
pop
repz
imulb
add
fsubrs
mov
mov
mov
shll
adc
lcall
dec
jne
lock
repz
das
dec
add
xor
adc
or
lods
pop
sbb
into
and
fdivrl
cmp
popf
jl
or
cmp
fsub
dec
lret
sub
push
subl
fdivrs
inc
icebp
sub
jmp
push
mov
mov
clc
scas
sbb
enter
xchg
add
inc
cli
mov
or
pop
lcall
shll
lcall
mov
out
loope
cmp
xchg
or
adc
clc
cld
gs
ss
pop
mov
sti
push
mov
pop
movsl
into
ret
cmp
imul
sub
int
dec
sbb
and
jl
cmpsl
cs
dec
roll
push
or
loopne
and
test
xchg
dec
loopne
mov
dec
aas
test
daa
jmp
jbe
jns
pop
push
out
insl
and
leave
mov
aaa
data16
jns
sbb
sub
loope
push
add
sahf
pop
add
sbbl
pushf
pop
mov
and
jmp
push
xchg
sub
or
sub
jno,pt
xchg
adc
in
push
lds
dec
popa
hlt
arpl
dec
enter
sbb
loopne
and
xchg
std
pop
push
and
loop
iret
out
scas
fimuls
sbb
jbe
push
and
sub
add
out
arpl
ds
sahf
cmp
int3
loopne
ret
or
loop
movsl
or
dec
jno
in
add
mov
xchg
aam
and
call
scas
lods
cli
fsubrl
jae
xor
mov
lcall
ljmp
sahf
in
pop
lcall
cmpsb
jp
add
pop
sub
xchg
dec
or
icebp
lcall
mov
mov
mov
test
xlat
fistps
jbe
scas
push
jnp,pt
in
push
lds
loopne
dec
dec
mov
sbb
test
mov
repnz
mov
jg
hlt
dec
mov
cmpsb
add
in
iret
xor
lcall
lds
test
test
pushf
into
push
sti
sub
test
mulb
sbb
push
sbb
nop
sti
add
jbe
ficomps
sub
push
inc
or
idivl
sbb
lds
inc
in
sub
dec
inc
jg
out
inc
loopne
lret
repnz
jns
iret
lock
jp
inc
stc
or
push
nop
aam
add
imul
add
and
mov
mov
push
push
sub
lahf
loopne
sub
mov
stc
mov
sub
clc
lahf
xchg
dec
and
mov
push
mov
dec
call
imulb
stos
sbb
inc
ja
and
ret
stos
mov
jne
pop
or
leave
xchg
mulb
cs
sub
movsl
andl
xchg
jnp
mov
mov
pop
int3
scas
mov
fabs
sbb
daa
mov
cmp
cld
lods
roll
sub
pusha
pop
add
loope
mov
jge
addr16
ret
fcoms
lock
add
or
data16
ret
jnp
pop
fidivrl
xor
mov
adc
popa
add
fdivrs
rclb
bound
lahf
pop
in
arpl
push
fisubs
sbb
data16
push
adc
ficompl
pop
inc
scas
fnstsw
push
sbbb
icebp
sti
pushf
cmp
scas
popf
push
sbb
negb
cmp
add
in
insl
out
mov
dec
lea
cld
xor
jl
bound
cmp
push
cltd
dec
js
and
shrb
bound
test
jmp
cli
mov
testl
lcall
loopne
ret
movsb
je
mov
rolb
movsb
push
je
iret
adc
mov
cmp
cmp
jmp
loop
cmp
cli
add
outsl
not
cmc
rclb
test
lcall
jae
vcvtss2si
sub
adc
adc
sti
and
decb
out
mov
out
std
clc
xchg
cmp
push
dec
in
dec
inc
cmpsl
stos
adc
mov
dec
fcompl
jmp
mov
add
scas
push
aaa
pop
cmp
mov
sub
sbb
dec
mov
out
lock
jecxz
lcall
mov
ljmp
lahf
add
push
arpl
mov
inc
lods
loopne
insl
inc
cltd
nop
xchg
cmp
sbbb
test
sub
int3
lahf
lahf
cmp
mov
pop
dec
push
inc
or
sbb
cmp
stc
inc
mov
inc
fadd
notb
xchg
inc
int
jo
pop
xchg
push
scas
dec
jne
jo
into
cmp
cmpb
xor
fcompl
pop
jbe
pop
mov
stos
and
mov
and
cmpsl
jmp
and
cmpsb
stc
push
mov
jae
cld
hlt
ds
shl
xor
aam
into
or
je
sub
cmpsl
dec
jae
int
pop
mov
mov
mov
cwtl
clc
mov
insb
cmp
subl
movsb
hlt
pop
sub
add
jmp
xorl
jbe
cmp
dec
clc
sbb
mov
test
mov
js
push
pop
les
stc
cltd
adc
movsl
sbb
sbb
mov
loopne
out
sbb
dec
cmp
movsl
js
cli
or
pusha
cmpl
fistps
mov
into
mov
jnp
xchg
outsb
in
jmp
shlb
imul
icebp
pop
cmp
jae
push
mov
sub
imul
mov
lahf
mov
outsl
add
cmpsl
jmp
mov
dec
je
lods
insb
aam
jmp
jb
lock
outsl
mov
xchg
or
inc
xchg
push
xor
insl
lret
arpl
dec
popf
das
lock
test
xchg
xchg
mov
jmp
addr16
shr
cmp
xor
fcompl
enter
push
pop
xor
ss
ret
out
jbe
popl
mov
sahf
ja
cmp
dec
xchg
or
and
xchg
ss
push
cld
jae
out
iret
test
xchg
mov
test
shll
mov
shll
loope
jns
pop
sbb
enter
mov
insl
inc
jbe
mov
out
nop
jb
insl
or
dec
cmp
xorb
push
hlt
sub
inc
aaa
inc
push
scas
adc
sub
popf
cli
je
jmp
add
inc
mov
sarl
pop
mov
xchg
lcall
cs
scas
pop
or
mov
jb
and
mov
rcl
iret
outsb
lods
stc
push
inc
sbb
mov
subl
mov
sar
inc
js
inc
iret
sbb
mov
sub
and
dec
push
enter
mov
movsl
pop
pusha
adc
sbb
ss
popa
push
clc
or
rorl
addb
inc
and
push
xor
cmp
mov
aas
das
loope
mov
jge
xor
mov
repnz
pop
push
into
subl
cmc
and
data16
or
test
and
xchg
dec
pop
mov
jns
testl
orb
stos
cmpsl
cs
call
pop
or
mov
lods
jbe
mov
fdivl
mov
cli
adc
sub
fiaddl
mov
xchg
bound
lret
orl
push
or
in
sbb
push
lahf
or
test
or
cmp
push
lds
jb
cwtl
push
leave
sbb
ret
test
mov
xor
xchg
push
sbb
popf
stc
push
pop
lret
mov
xor
jg
cmpsl
mov
xchg
jp
int
sbb
repz
popf
ljmp
or
cld
lahf
push
add
push
push
add
add
xor
in
xor
push
mov
arpl
dec
sbb
xor
and
adc
addr16
repz
push
add
add
sub
ljmp
inc
push
push
push
xchg
push
or
adc
mov
test
add
push
and
outsl
cwtl
lea
pop
test
das
icebp
and
push
scas
and
xor
dec
and
and
insb
inc
std
int3
push
mov
pop
add
jge
mov
into
add
sbb
hlt
and
push
xlat
xor
shlb
push
enter
mov
js
out
adc
aas
lods
es
cmc
pop
jg
and
imul
push
and
inc
test
add
add
push
adc
xchg
sbbl
sub
dec
mov
push
mov
insb
loope
sub
jge
fldt
imul
mov
jle
arpl
rorl
cwtl
jns
cs
popa
pop
ret
mov
pop
dec
out
dec
push
repz
or
sbb
dec
ret
xchg
xchg
jno
imul
bound
test
xchg
sub
rol
js
cltd
movsb
inc
mov
cltd
adc
mov
xor
add
std
imul
add
jle
push
sub
sub
mov
vsqrtsd
mov
sbb
lret
pop
adc
xchg
xor
js
cwtl
cmp
or
into
mov
or
and
repz
testl
jmp
idivb
popf
call
cmpsb
das
mov
dec
cmp
in
or
adc
je
loope
adc
sti
negl
and
data16
add
add
pushf
movsl
sbbb
sbb
cmp
fiadds
xor
pop
and
jnp
ja
rclb
mov
jmp
cwtl
mov
xchg
mov
jb
push
rorl
sub
mov
or
shlb
shlb
test
rcrb
sub
sub
pop
mov
mov
icebp
mov
imul
xor
mov
mov
orl
sbb
movswl
shr
xchg
out
clc
daa
xor
rclb
je
shl
mov
xchg
data16
stc
nop
mov
sbb
mov
push
push
mov
push
mov
and
dec
scas
testb
clc
dec
sub
rcll
das
movsb
push
mov
std
sbb
cmp
mov
sub
insl
jecxz
lds
adc
bound
dec
cmp
jmp
ret
lock
out
shrl
fdivrl
adc
rcrl
sbb
dec
cmp
sbb
and
sbb
aad
bound
into
out
or
ret
dec
jmp
leave
cmp
popf
push
cmp
inc
shl
sti
or
aas
lods
xchg
movsl
cmp
jb
cmp
dec
and
mov
xchg
popa
sbb
xchg
fnstenv
push
in
lahf
pop
inc
add
pop
stc
jle
mov
xchg
imul
pop
fnstsw
icebp
outsb
outsb
icebp
xchg
push
movsb
ret
shlb
mov
call
adcb
dec
push
insb
sbb
jmp
push
lods
mov
push
xlat
movsl
or
jo
les
nop
add
dec
out
or
mov
mov
nop
cmp
mov
popf
outsl
dec
inc
shlb
push
cmp
xor
sbb
scas
inc
andl
cmc
loope
mov
fucomip
aad
je
sbb
jo
or
jge
mov
into
lods
cmp
xor
sti
push
adcb
aas
in
imul
mov
inc
insb
xor
jmp
arpl
jg
cld
arpl
xorb
mov
or
push
idivb
sbb
or
jmp
into
mov
jne
or
cli
fistpl
rdmsr
dec
movsl
sbb
mov
cmc
daa
jmp
and
pop
jns
lods
jle,pn
mov
add
dec
push
mov
adc
mov
xlat
dec
mov
test
int
pop
cltd
popa
pushf
pushf
inc
pop
xor
stos
mov
nop
inc
roll
inc
mov
stos
dec
rcll
adc
jnp
call
pop
fistpl
enter
mov
xchg
out
push
sti
sub
test
push
jns
outsb
es
jnp
add
cmp
xchg
dec
push
push
leave
lods
mov
inc
in
lret
push
ss
inc
out
mov
xchg
adc
cmpsl
mov
dec
cwtl
sbb
mov
and
mov
call
and
or
das
lds
cli
jo
adc
das
add
lret
or
out
jbe
cli
scas
inc
mov
ljmp
sbb
in
xlat
mov
or
or
in
cmp
and
cli
fcompl
aaa
leave
adc
jb
addr16
mov
mov
sub
push
iret
lret
out
loope
lods
mov
xlat
mov
push
repnz
ljmp
or
in
sti
fistps
mov
add
fucomp
rol
not
sub
loopne
xchg
pushf
xchg
xor
popa
ljmp
jo
adc
mov
testl
jb
mov
out
nop
and
mov
pop
inc
and
cmpsl
sbb
leave
cmp
das
inc
mov
movsb
mov
jb
sub
out
dec
mov
fisubs
imul
mov
jl
sub
pop
cmp
xchg
cmc
nop
inc
pushf
popf
maskmovq
negl
jl
jge
cmpsb
repnz
cmp
ficomps
xor
pop
sub
xchg
push
mov
mov
dec
rorl
mov
or
adc
dec
rol
idiv
push
or
movsb
insb
pop
in
sub
stos
in
sar
cld
pop
and
jmp
scas
or
loop
cmp
lods
mov
pop
sub
dec
push
jp
scas
icebp
mov
pop
mov
sbb
addr16
cmp
jge
jae
mov
lods
and
int3
mov
mov
lock
ja
adc
xor
lcall
out
lock
stos
jge
in
mov
adc
fistps
jmp
push
int
aas
lahf
test
adc
loopne
push
or
insl
rcl
cmpsl
punpcklwd
bound
push
outsl
sbb
jmp
insl
add
and
dec
sahf
sahf
or
jns
dec
ljmp
cmc
dec
lock
enter
out
insb
scas
mov
push
sub
add
mov
insl
jbe
jl
xlat
ljmp
add
or
movsl
lret
ljmp
ficompl
adc
jle
mov
jno
mov
dec
inc
push
insl
add
repnz
insl
leave
sbb
ljmp
into
cmp
or
in
pop
stos
imul
push
mov
enter
stc
push
fstp
mov
shrl
push
add
xchg
out
cltd
jg
sub
jle
aam
inc
pop
cmpsb
cmp
stc
dec
or
mov
adc
fsubr
inc
inc
stos
xchg
pop
fcmovne
push
rolb
cs
adc
sbb
out
loopne
int
outsl
loope
inc
pop
lret
dec
inc
xor
jbe
jge
out
mov
inc
xor
add
xor
rolb
mov
dec
out
jle
gs
call
cmpsb
fstl
dec
lahf
pop
or
jno
repz
pop
out
shrb
or
insl
scas
cmpxchg8b
lret
clc
fldenv
cmp
mov
add
xor
mov
insb
push
xchg
pop
ss
ds
push
lahf
int
je
jae
push
icebp
jle
cmp
xor
pop
test
xor
in
push
in
sub
in
test
mov
cmp
xchg
loopne
rclb
or
ret
daa
mov
xor
push
cmp
fs
movsl
call
push
pop
fwait
popa
jp
and
arpl
test
jg
arpl
sbb
hlt
das
add
int3
loope
lods
je
inc
inc
fldt
xchg
or
xchg
adc
dec
cmc
and
cmp
sbb
cmc
mov
inc
dec
cmp
leave
adc
jle
fsub
push
dec
push
dec
mov
pop
mov
into
adc
inc
cmp
pop
adc
push
cmp
xchg
lock
fidivs
and
mov
lahf
js
sub
xchg
or
stc
roll
fistps
cmpsb
xlat
fcomip
pop
mov
xchg
jge
adc
pop
add
dec
fcomip
xchg
and
adc
enter
test
cmp
rcl
arpl
mov
int3
jg
cmp
in
adc
fists
push
repz
jl
int3
jecxz
add
aam
pushf
cmp
cmpsb
movsb
xchg
xlat
xchg
aad
jmp
cmp
aas
loope
into
mov
js
leave
repz
lret
add
cmp
icebp
or
pop
sub
test
xchg
in
and
ret
andl
nop
cwtl
pushf
rclb
icebp
leave
mov
aam
xchg
mov
bound
and
lahf
test
fsub
insb
pop
leave
xor
shlb
fs
lods
inc
add
das
sbb
push
xor
out
nop
and
and
push
lret
mov
insl
outsb
loope
rcl
pop
sti
movsb
cli
adc
xlat
insb
int
jno
imul
out
daa
test
insl
or
xlat
add
je
mov
loopne
adc
in
sbb
pop
lahf
dec
test
outsl
ja
or
call
inc
mov
push
push
jle
ret
or
adc
test
out
fnstsw
mov
imul
jp
mov
add
test
out
xor
lods
testb
in
sahf
jne
pop
into
arpl
jg
in
lret
iret
jae
dec
pop
dec
movsb
lock
scas
mov
pop
jb
ret
jae
and
mov
fs
fdivl
in
adcl
hlt
push
ret
cmp
xchg
cmp
cmpsl
mov
mov
fildl
push
cmp
outsb
mov
sti
dec
or
es
sbb
mov
xor
jns
dec
push
mov
push
call
jae
out
pop
inc
notb
lahf
sti
imul
jmp
cmp
dec
cmc
mov
out
mov
aam
dec
les
imul
aam
dec
orl
push
adc
or
pop
xchg
jecxz
xchg
icebp
xchg
ror
xchg
scas
ss
mov
sbb
fwait
lds
dec
cmpsb
nop
xchg
xor
mov
rep
sbb
mov
movsb
jno
and
mov
imul
cmp
jne
push
inc
xor
mov
pop
sub
mov
or
aad
sti
sub
add
in
hlt
mov
push
adc
jg
scas
and
roll
push
push
sarb
pop
and
xchg
inc
scas
mulb
das
push
mulb
or
pushf
jmp
mov
add
inc
mov
test
sub
in
movsl
sbb
ljmp
nop
loope
dec
shll
idivb
mov
push
loopne
xor
int
sub
in
aaa
cwtl
sub
pop
pop
lods
fsubrl
jae
fs
into
in
cltd
js
and
jae
sbb
sahf
ljmp
jge
adcl
cmp
sub
mov
lret
outsl
stos
pop
jle
out
mov
rolb
jno
pop
xchg
int
popf
or
jbe
inc
cmpsl
xor
sbbb
push
mov
cmp
dec
mov
mov
add
jbe
mov
in
push
adc
in
cli
mov
sub
pop
xor
jg
mov
inc
mov
out
lds
or
or
lods
int3
jmp
ljmp
bound
rcll
imulb
test
jg
fcompl
sub
push
pop
push
test
test
push
jae
mov
outsl
leave
aaa
cmc
jo
mov
dec
loope
lock
fisttpl
adc
jns
xchg
inc
push
loope
popf
lea
test
jle
push
mov
popf
adc
inc
out
cwtl
push
fldt
bound
pop
lock
ficoms
icebp
push
loopne
lock
hlt
out
call
jg
movsl
in
sbb
data16
cli
scas
popa
jne
mov
xchg
es
test
jo
add
jecxz
mov
popa
inc
mov
ss
mov
roll
mov
cmovae
sbbl
push
cmovg
sub
cmpsb
and
aam
lock
idivl
stos
or
pop
mov
and
xlat
sar
xor
mov
fucomip
sbb
cmp
or
fidivrl
mov
lods
loopne
in
sti
addr16
icebp
sbb
ljmp
mov
jecxz
add
mov
and
repz
push
mov
mov
test
jne
fildll
fmuls
lcall
popa
imul
sub
adc
movsl
ljmp
mov
fnstsw
or
inc
inc
scas
xor
lret
cmpsb
cmp
and
insb
and
xchg
push
int3
xchg
add
fst
rol
cmc
sub
sub
dec
push
sti
into
dec
lods
outsb
data16
popa
mov
push
pop
sub
shlb
mov
jmp
fmull
xchg
sbb
dec
mov
and
cmpsl
sbb
inc
out
jecxz
outsb
sbb
in
adc
xor
jecxz
mov
or
dec
and
mov
push
xchg
iret
jno
btr
xor
mov
ja
icebp
adc
dec
pop
lock
push
notb
mov
pop
or
sub
cmp
shlb
cmp
jnp
sbb
and
or
aas
dec
out
push
mov
mov
inc
or
inc
ret
repnz
sub
adc
js
repnz
add
jb
cli
cmp
mov
lret
ljmp
cmp
int3
rcr
ret
leave
mov
mov
adc
xlat
mov
inc
out
mov
fisttpl
leave
insb
xorl
clc
mov
movsb
cmpsl
mov
movsb
mov
insb
mov
clc
sub
ja
in
and
int
xor
pushf
loope
fstpt
jnp
testb
cwtl
pop
sbb
mov
fbstp
cmp
ret
add
pop
shlb
push
dec
test
test
mov
nop
mov
orl
cmc
popf
mov
mov
test
lahf
mov
pop
sub
and
popa
jle
adc
jbe
int3
dec
hlt
aas
pushf
lret
inc
xchg
ss
fdiv
adc
dec
daa
inc
xchg
add
inc
outsl
mov
iret
or
repz
out
sbbl
and
pop
adc
out
das
xor
and
inc
cwtl
testl
mov
nop
into
out
cmpsl
mov
sbb
push
pop
jge
fidivrs
movlps
sbb
cs
test
dec
adc
or
xor
jl
out
insl
test
adc
and
or
mov
int3
into
sbb
or
adc
clc
inc
pop
lds
dec
pop
movsl
aad
icebp
ret
inc
dec
test
mov
xchg
aaa
testl
push
mov
jns
mov
inc
sbb
hlt
clc
enter
je
aas
and
fstl
in
stos
adc
jle
ret
dec
rcl
jno
mov
pop
idiv
dec
jg
push
test
stos
jne
gs
push
dec
sub
bound
xchg
xchg
cmc
scas
jle
mov
xorl
fisubs
ljmp
jle
push
sub
scas
mov
insb
mov
fcmovb
insb
dec
mov
mov
into
push
or
rcll
es
aas
scas
imul
pop
rorl
addr16
pop
dec
cld
jecxz
orl
sbb
sub
test
lods
lret
sub
insb
shrl
pop
stc
test
addr16
push
pop
push
xor
jl
pop
mov
adc
ja
mov
jecxz
cmp
cwtl
out
out
cld
dec
js
fwait
sbb
jl
mov
add
mov
sub
in
test
into
cmp
xchg
outsb
dec
jg
fdivl
push
cmp
inc
test
xchg
rclb
push
sub
mov
rcrl
mov
pop
cmp
ret
into
add
mov
aam
out
fnstenv
dec
pushf
xor
imul
lods
imul
insb
out
dec
arpl
mov
xchg
cli
or
out
pop
aaa
lea
xlat
aas
jno
or
stos
xchg
pop
popf
cwtl
xor
mov
ret
cmpl
fs
or
je
xor
into
out
mov
insl
pop
dec
mov
and
mov
xchg
pop
test
pop
jae
dec
cmpsb
jae
mov
out
mov
mov
xor
adc
mov
cld
lret
sbb
pushf
push
lds
sbb
lock
mov
push
push
mov
repz
lret
jmp
mov
shl
les
pop
das
mov
nop
adc
jo
scas
rolb
sbb
inc
iret
adcl
loop
pop
xor
cmp
mov
sbb
mov
cltd
push
jmp
div
into
js
fistpl
pop
inc
insl
mov
dec
xor
mov
adc
mov
xchg
sub
fisttpll
ljmp
aas
xor
jecxz
sub
pushf
add
sub
ret
iret
outsb
mov
arpl
jg
sub
push
test
dec
sbb
add
iret
and
sub
mov
pusha
enter
xor
mov
popf
sti
pusha
push
enter
jns
xchg
push
xchg
add
dec
jge
dec
or
or
cwtl
out
call
dec
lea
jb
mov
sub
ds
arpl
aas
loope
in
scas
mov
cld
rol
stos
fs
and
mov
xchg
cld
stc
cmpb
jo
jo
shrl
push
lahf
adc
mov
imul
jmp
fstpt
jns
loop
adc
xor
fsubs
imul
add
pop
pop
xor
pop
push
push
sub
lea
inc
sahf
mov
test
mov
mov
jns
dec
mov
push
or
out
xchg
xor
sarl
cmp
mov
add
popf
adc
push
inc
nop
adc
or
fs
pop
adc
in
imul
dec
and
pop
push
ret
ja
int
sub
push
loop
js
sub
mov
xor
ss
add
sub
adc
inc
fs
cli
lahf
or
xor
sub
pop
and
dec
ds
add
cs
cli
add
mov
add
pop
add
cmp
pop
icebp
jbe
adc
mov
xlat
mov
cmp
sti
lcall
adc
dec
imul
insl
outsl
xlat
push
xchg
addr16
mov
jno
in
cmp
cli
ret
mov
repz
jle
icebp
pop
sahf
popf
sub
jp
add
sub
or
mov
sub
rorl
test
mov
int
pop
fmull
fstpt
push
add
xor
and
mov
xchg
fistps
jecxz
inc
dec
inc
cmp
mov
cmp
jg
sub
arpl
arpl
jae
dec
ret
cld
dec
or
jno
push
imul
mov
and
cmpsb
dec
mov
xchg
lss
mov
cmp
ret
add
pop
sbb
addr16
int3
dec
cmp
es
push
sbb
lds
test
scas
xchg
add
ljmp
push
or
test
cltd
adc
int
in
jb
enter
inc
push
mov
data16
mov
push
jne
das
sub
popl
and
out
mov
pop
imull
leave
inc
inc
jns
mov
imul
push
jecxz
iret
mov
adc
and
ljmp
call
xor
andb
sbb
ljmp
xchg
test
dec
mov
xchg
movsl
mov
inc
add
in
aad
xchg
lcall
outsl
mov
jmp
sbb
sarl
pop
adc
jns
fnsave
xor
dec
stos
movl
pushf
not
push
add
dec
jp
cltd
cmp
aaa
aaa
data16
jl
xchg
lods
adc
sti
or
lock
sbb
and
fcmovne
mov
jbe
subl
or
fdivrs
mov
inc
sub
mov
inc
mov
adc
movsl
jl
pop
test
stos
xchg
fimull
ds
lret
fisubrl
pop
add
sbbb
js
push
idivb
int3
push
fldcw
sbbb
add
xchg
enter
mov
pop
stos
cmp
sbb
cmpsl
xor
lahf
mov
add
into
inc
mov
cmp
sbb
mov
mov
jmp
and
or
pop
sub
pushf
cmp
push
pushf
sbb
pop
movsb
mov
cmp
inc
and
push
sbb
insb
lahf
mov
inc
xchg
jecxz
sahf
push
adc
and
test
jg
mov
data16
ja
pop
mov
lret
cmpsb
mov
movsl
stos
fmul
mov
inc
mov
or
fcoml
push
push
push
in
xchg
xchg
fdivl
adc
jns
mov
arpl
add
sarb
cmc
stos
cli
inc
add
pop
mov
pop
in
adc
nop
and
lock
jle
inc
std
pop
add
cmp
sub
adc
cmp
cmpsl
mov
lcall
xor
ds
push
push
cmc
inc
mov
push
hlt
das
loopne
imul
pop
dec
mov
insb
adc
jo
popl
in
inc
push
sbb
push
stc
gs
fstl
fidivrs
shll
cltd
inc
mov
jmp
jp
jns
fsubrs
xchg
add
cli
lret
cmc
xor
out
add
sti
inc
sub
outsl
outsl
xor
lds
aas
lcall
mov
in
rcrb
push
in
bound
fsub
pop
mov
mov
inc
cmp
inc
sbb
add
cltd
ja
scas
cwtl
dec
and
ffreep
adc
cmp
leave
pop
push
js
in
push
mov
mov
mov
js
sub
fnstsw
fisttpll
xchg
pushf
mov
subb
mov
mov
cwtl
push
stos
mov
mulb
sbb
pop
stos
add
lds
rcll
adcb
pop
xchg
in
addb
and
pop
add
outsb
std
aad
lds
dec
sbb
daa
inc
sbb
or
int
ret
jns
into
pop
push
cmp
add
sub
leave
push
xchg
mov
inc
movnti
fcompl
xlat
movsl
aad
test
push
pusha
jne
nop
lret
dec
lea
rclb
mov
in
in
inc
imul
push
mov
adc
dec
sbb
mov
dec
push
xchg
mov
dec
jg
adc
or
sub
call
mov
popf
adc
dec
test
sbb
and
cmp
leave
loope
out
xor
inc
insl
push
inc
fnstsw
jge
stos
pop
xchg
mov
ss
aad
xchg
divb
sbb
push
sbb
imul
dec
jmp
xor
les
jo
add
inc
inc
dec
sbb
mov
xorb
cwtl
pushf
xor
aas
jmp
test
jns
inc
and
push
xor
sub
dec
jns
mov
pop
pop
es
sbb
xor
sahf
sub
and
mov
mov
test
fisttps
inc
jb
mov
bound
mov
add
adc
pop
cwtl
shrl
add
sbb
mov
pop
bound
push
lds
mov
addr16
mov
outsb
stos
out
xor
pop
jp
xor
add
push
bound
imul
xchg
add
cli
test
xchg
stc
daa
inc
and
and
adc
sub
mov
sbb
jge
sahf
mov
lahf
lods
add
dec
sub
cmp
mov
jns
push
std
pushf
mov
or
and
js
push
pop
popa
cmp
imul
mov
mov
xchg
sahf
or
mov
lcall
lock
adc
out
xor
push
jne
cld
add
outsl
icebp
sub
inc
idivb
and
fidivrs
loope
adc
xchg
and
lods
xor
fildl
mov
dec
sub
lods
pusha
stos
fisubrs
mov
in
push
incb
and
sub
cmp
jbe
push
jmp
lods
test
mov
jno
clc
sbb
dec
rorl
pop
and
cli
adc
push
sbb
add
dec
negb
negl
adc
inc
in
into
xor
mov
test
test
hlt
pushf
pop
cmpb
pop
inc
xlat
pushf
jmp
js
mov
dec
out
jne
sub
xor
and
cmp
pop
sub
int3
cmpsl
inc
orps
jae
repz
cmpsl
outsb
mov
or
mov
or
into
mov
andl
fnstenv
mov
loope
paddusw
pop
or
sub
std
dec
cmp
sub
or
cld
pop
inc
adc
adc
dec
scas
nop
inc
mov
pushl
je
idiv
fwait
rolb
lahf
pop
mov
movsb
cld
aas
mov
mov
xor
ss
push
jle
int3
pop
leave
mov
pop
les
add
jne
hlt
pop
aam
mov
jmp
pop
cmp
jo
sbb
cmc
int
aad
cmp
popf
call
addr16
sti
rol
pop
rcrb
call
dec
jmp
insb
xlat
jae
repnz
or
dec
sub
inc
iret
and
or
jmp
and
adc
lret
and
sbb
sbb
pop
cmp
cmp
or
push
scas
cmpsl
adc
mov
dec
jmp
xlat
incb
imul
movsl
adc
push
loope
adc
ds
lret
jo
and
xchg
sbb
cmp
imul
mov
aad
outsb
shrb
pop
xchg
push
adc
lock
cli
mov
mov
cmc
cmovo
icebp
and
inc
push
ret
mov
mov
inc
jb
cld
out
jb
mov
rcrl
inc
push
dec
enter
fwait
push
out
cli
or
sahf
jle
cmp
xchg
or
dec
mov
push
push
aad
nop
inc
ret
mov
lock
in
xchg
jle
cmpsl
jbe
test
cmp
mov
dec
mov
mov
lods
jle
fsts
cmp
xchg
pop
inc
addl
sbb
icebp
pop
mov
push
xor
add
imul
imul
pop
insl
push
cmp
aaa
out
loop
mov
push
inc
pusha
in
insb
or
arpl
pop
cmp
leave
sub
mov
gs
mov
pop
int
dec
rcr
insb
push
imul
dec
xchg
adc
outsl
sahf
sbb
cmp
pop
jge
inc
cmp
sub
jmp
int3
pop
std
xchg
push
adc
test
sahf
mov
mov
lea
fstps
and
add
enter
jge
les
adcb
mov
jae
out
lds
add
ret
adc
pop
imul
jg
outsl
xor
ja
sub
popa
or
inc
movsb
xlat
jmp
mov
or
out
fdivl
loopne
xor
test
or
inc
in
popa
dec
dec
dec
add
push
shlb
sbb
jne
and
xor
xchg
outsb
dec
sahf
mov
inc
mov
es
xor
push
push
aad
mov
cmp
test
sub
cwtl
daa
loopne
arpl
inc
imul
lea
sbb
test
fadd
ljmp
or
or
mov
out
jae
insl
cmpsl
loopne
pusha
cmp
xor
dec
inc
pop
cmp
inc
xchg
jns
mov
nop
ja
mov
popf
mov
push
testl
push
jae
in
sub
ret
imul
test
cmpsl
scas
cld
push
in
in
or
mov
sub
lods
aam
decl
shlb
cs
xchg
xchg
cwtl
jns
inc
inc
push
lods
adc
lock
in
test
xlat
test
test
add
aaa
xchg
pop
ss
cld
add
xor
inc
out
cli
sbb
adc
cmpsb
cmpsb
push
mov
int3
mov
les
push
sub
movsb
add
mov
sarl
mov
cwtl
pushf
test
mov
inc
in
test
sub
test
lret
dec
mov
dec
scas
jmp
mov
call
mov
mov
cs
sub
push
lock
xor
pop
loop
ret
xchg
jne
addr16
push
outsb
adc
pop
mov
sub
xor
pop
aaa
jecxz
inc
arpl
xorb
ja
das
dec
push
push
inc
js
inc
jb
xor
ss
aaa
xchg
pop
clc
adc
dec
outsl
push
pop
lds
mov
lea
lcall
inc
popf
pop
mov
and
das
mov
repz
push
lds
jge
inc
movsb
add
into
xchg
cmp
call
pop
lds
vpmullw
pop
or
mov
or
push
or
ja
dec
aas
or
sub
sub
lods
pop
inc
mov
sbb
sub
lds
leave
xchg
pop
jmp
bound
mov
sti
imul
add
rorl
mov
ds
lret
xor
push
pop
jl
adcl
das
dec
xor
jge
sbb
xor
sbb
scas
adc
push
cld
out
jo
mov
imull
cltd
jmp
dec
push
add
pop
sub
and
and
stos
out
das
cmp
inc
fldl
xchg
jmp
ret
mov
cli
mov
lret
add
mov
add
aaa
adc
fmull
orl
js
ljmp
das
add
pop
dec
pusha
push
es
sti
leave
in
adc
pop
push
mov
add
sbb
cmp
ja
inc
cmpsb
ljmp
lahf
pushf
fucom
in
xor
xor
xor
pop
adc
pop
iret
push
mov
clc
mov
mov
lahf
data16
dec
sbb
dec
int
push
mov
arpl
dec
pop
gs
adc
mov
jo
fmuls
dec
or
cmp
push
mov
movsl
push
jae
mov
xor
daa
fs
or
add
or
ljmp
dec
stos
popa
int3
push
fmuls
mov
inc
xorl
outsb
mov
adc
pop
sub
push
mov
pop
jo
add
add
mov
pop
xor
jae
mov
adc
add
push
push
cmp
in
lea
lock
lcall
shlb
mov
mov
test
sub
and
mov
xchg
sbb
cltd
ds
imul
and
cs
xchg
jne
push
xchg
pop
mov
sbb
or
outsb
jns
inc
pop
pop
loop
inc
mov
les
pop
pop
lds
xor
cmp
cmp
cltd
adc
and
add
int
pop
xchg
adc
pop
aas
lret
pop
mov
sub
mov
xchg
mov
hlt
push
push
mov
cltd
or
push
dec
and
dec
mov
xchg
sti
pushf
lods
js
aam
int
cmp
or
lret
push
enter
cmp
stos
out
inc
mov
xchg
dec
cltd
xchg
pop
fnclex
in
mov
or
push
pop
sbb
movsb
cmpsl
rcll
ds
jg
mov
adc
xchg
je
push
pushf
aam
js
cwtl
dec
jne
sbb
mov
push
outsb
xchg
pop
mov
pop
cli
stc
mov
fnstcw
loop
pop
lcall
ljmp
xchg
out
std
sbb
jbe
cs
or
insb
pop
dec
pop
and
int
ljmp
js
in
cmc
icebp
push
jmp
sub
xchg
out
lock
or
mov
jl
lret
aad
aaa
les
leave
in
inc
in
jl
popa
sbb
out
and
add
es
and
pop
and
push
xorl
aad
pushf
call
lahf
repnz
cmc
sbb
fs
pusha
xchg
fistl
and
add
jo
push
imul
lahf
dec
iret
stos
daa
iret
mov
in
int3
dec
sub
dec
lods
and
and
cmp
xor
jg
mov
mov
mov
jmp
pop
jmp
repnz
mov
mov
pop
push
into
push
sbb
out
lret
aam
xor
hlt
fistps
iret
inc
popa
stos
movsb
insl
shlb
rcll
stc
stos
cwtl
int3
aas
fsubs
fildll
xor
je
sbb
xor
sbb
movsl
cwtl
lret
fdivrl
inc
cmp
imul
adc
mov
iret
shr
add
movsl
lret
sbb
push
pop
adc
lahf
sbb
lods
out
test
adc
and
sti
push
fnsetpm(287
rcll
lret
lods
test
lcall
ja
and
push
jmp
aas
call
cli
out
ret
mov
fistpl
aad
test
xor
sbb
lods
mov
les
js
enter
mov
cmp
push
loope
ror
cmc
mov
loop
inc
stos
sub
shlb
repz
mov
xor
or
inc
sbb
add
faddp
shll
lock
or
sub
mov
ljmp
aad
push
cwtl
or
subb
leave
addl
aaa
es
cmpl
cs
shll
jle
aam
jno
rorl
push
fpatan
lock
loope
pop
mov
mov
mov
jno
int3
jge
cwtl
fnstsw
imul
jle
rorl
fistps
sbb
js
cmp
rolb
cmp
adc
test
inc
xchg
jl
push
outsb
test
cld
loope
setne
lret
pushf
sbb
mov
pushl
cmpsl
pop
ror
lock
pop
cmp
out
loope
adc
mov
fcomps
out
xchg
jae
jne
lret
push
mov
jl
idivb
cmp
push
call
fisubs
test
pop
das
xchg
add
sub
pop
mov
pusha
in
out
mov
das
sub
mov
xor
pop
test
sub
and
jge
cmp
sahf
push
dec
out
hlt
into
scas
stos
pop
loope
cld
mov
popa
pop
mov
and
push
adc
mov
fdivl
leave
pop
cli
mov
cmp
jae
lret
pop
lret
stos
push
and
in
push
stos
pop
xor
mov
cmpsl
sbb
stos
cli
push
fcoml
cmp
addl
push
test
adc
mov
xor
or
mov
pop
or
loopne
xor
mov
sub
pop
loop
xchg
and
jb
nop
mov
loop
loopne
outsl
push
add
cltd
loopne
in
inc
and
push
push
sub
pop
das
clc
add
mov
test
and
aaa
push
mov
add
or
lods
mov
insl
inc
lcall
test
stc
mov
inc
hlt
jne
or
insb
push
repnz
pop
sti
in
dec
repz
push
gs
cmp
cmpl
jecxz
insb
mov
jmp
sub
mov
fwait
je
jae
push
sbb
add
adcb
aaa
out
xchg
mov
in
dec
lret
loop
enter
cld
cmpl
or
fistl
sbb
mov
cmp
jl
xchg
sbb
lods
cmc
repnz
idiv
dec
mov
into
xor
data16
jge
in
rcr
inc
xor
fisubl
xchg
or
inc
and
push
fists
imul
sahf
aam
adc
mov
das
out
cmp
xchg
fdivrl
mov
push
mov
scas
or
sub
dec
outsl
pop
cmpsl
adc
xlat
lods
movsb
push
fsub
mov
das
outsl
inc
jnp
mov
imul
mov
mov
nop
enter
sub
rcrl
repnz
in
popf
imul
jge
out
es
dec
mov
xchg
jnp
sub
dec
cltd
mov
xchg
lods
in
sub
pop
xor
or
xor
inc
push
push
popw
lea
jp
xchg
push
fwait
movsl
mov
fidivrs
pop
xchg
idivl
cmc
jecxz
adc
stos
jmp
xor
imul
stos
repz
adc
and
ja
rolb
pop
in
mov
xchg
ljmp
imul
fidivl
inc
and
mov
adc
mov
dec
cmp
dec
js
cmp
decb
xor
fisttps
sub
jle
inc
dec
push
mov
jecxz
std
push
pop
enter
sbb
stos
ret
add
push
cmp
xor
jp
mov
adc
test
xchg
push
sbb
arpl
sbb
mov
jge
leave
dec
inc
scas
push
fisttpl
loopew
mov
or
je
pusha
notl
inc
cmp
lcall
xor
rcrl
pop
in
jl
mov
sub
out
xchg
mov
push
push
ret
loopne
sub
inc
rcrl
mov
dec
filds
push
int
aam
xor
scas
dec
out
push
shll
fdivl
mov
lret
daa
in
adc
lods
popa
lods
mov
in
and
cmpsl
and
loopne
inc
push
push
loop
decl
and
sub
icebp
iret
popf
fs
dec
push
loopne
cmp
dec
jecxz
fsub
cmpsb
roll
and
mov
sahf
stos
jb
jge
pop
jo
lcall
xchg
daa
stos
push
sbb
sbb
push
aas
sbb
in
sub
pop
pop
in
ret
and
cmp
mov
shr
mov
vpsrad
inc
and
add
jp
flds
or
push
imul
sbb
xchg
gs
scas
jne
inc
adc
xor
fbld
in
mov
pop
loop
or
in
cmpsb
lds
cmp
xchg
aam
rol
das
mov
xchg
xchg
mov
push
xchg
sbb
outsb
test
out
je
bound
and
popf
rclb
out
clc
cmc
and
jge
push
mov
gs
clc
test
cmc
mov
in
in
lods
out
dec
add
xchg
pop
cmp
or
pusha
out
daa
inc
dec
xchg
sbb
mov
popl
fmul
mov
mov
push
jle
aam
pop
js
fbstp
cmp
lock
jp
in
icebp
out
mov
mov
mov
push
mov
cmp
out
js
sub
jp
cmp
pop
test
jl
decb
in
pop
lods
out
jno
dec
xorl
daa
xchg
push
hlt
pop
rcl
mov
xchg
adc
lret
pop
fisttpl
lret
mov
cmp
lahf
in
lahf
sbb
ljmp
subl
mov
rolb
cld
jne
push
shl
push
dec
out
adc
pop
jb
xchg
stos
divl
sti
lock
cmp
mov
pushl
push
sbb
dec
cmpsb
pop
jl
adc
cmp
and
add
pop
ret
ss
mov
mov
sbb
mov
push
pop
andb
ja
adc
shll
xor
cld
cmp
imul
mov
xor
jb
sub
pop
xlat
push
pop
xchg
cmp
rclb
jns
inc
adc
orb
jg
rorb
call
sbb
pop
outsl
insl
inc
mov
fldl
xor
and
xchg
dec
repz
sub
xor
or
test
mov
pop
jne,pt
out
movsb
fwait
in
dec
jl
or
std
cmp
notb
jl
pop
pop
add
int3
aam
mov
ret
sub
mov
je
pop
inc
shlb
sub
jo
inc
or
mov
push
test
mov
add
loope
icebp
lds
imul
and
push
ja
xchg
jns
stos
jnp
add
repz
aas
call
lds
hlt
pop
test
add
movsb
sbb
jno
cmp
std
mov
dec
pavgb
mov
push
sbb
sub
push
mov
or
xchg
lds
pushf
call
xor
lret
or
xor
mov
mov
rorl
das
dec
nop
into
es
xchg
xor
jecxz
int
or
std
movsb
push
in
inc
mov
aad
xor
mov
test
into
aas
fidivrs
mov
mov
sub
inc
int
push
jns
sti
ror
std
cmp
cmp
fsubl
pop
test
arpl
lcall
ret
fistpll
mov
mov
sub
push
enter
out
dec
mov
mov
repnz
mov
xor
mov
idivl
cmc
pop
fdiv
or
ss
ret
push
je
lods
data16
clc
jmp
arpl
pop
push
inc
js
push
pop
add
leave
aam
aaa
cmc
lods
jp
js
loop
mov
fbstp
jo
push
cmp
push
aas
inc
push
int3
mov
insb
mov
loop
lds
idivl
mov
lea
push
add
outsb
pop
scas
lret
dec
mov
inc
sbbb
pop
iret
fsubl
xchg
outsb
repnz
aaa
inc
into
jnp
mov
pop
arpl
ds
std
jnp
das
movl
ret
pusha
test
das
jnp
clc
xchg
jns
adc
lcall
cmpsl
int3
sub
pop
loop
jns
call
cmc
and
push
jno
lea
fimuls
or
and
sahf
pop
fsubrl
xchg
std
sub
jo
push
inc
dec
mov
inc
and
je
lcall
xchg
push
push
dec
dec
sbb
rclb
cmc
sub
mov
cmc
aam
xor
push
iret
and
cltd
cli
and
adc
push
mov
sbb
por
test
in
mov
push
add
clc
test
rcl
scas
jge
mov
sbb
xchg
scas
sub
into
stc
lds
jmp
je
test
imul
sub
xor
mov
pop
xor
sub
imul
xor
test
mov
and
jmp
jo
lock
jnp
jne
loopne
sbb
jmp
sub
popf
daa
addr16
mov
add
outsb
jnp
aam
cmpsb
jge
cmp
xchg
jl
cmp
pushf
pop
cld
and
xchg
in
into
out
inc
mov
iret
jp
dec
fiadds
add
test
loop
inc
mov
test
lock
mov
jno
mov
jecxz
mov
test
mov
push
push
dec
dec
mov
roll
gs
push
or
fwait
jp
les
sahf
xor
out
stc
push
dec
rolb
aad
stos
mov
lods
mov
xchg
adc
cmp
mov
inc
adc
push
xchg
adc
mov
add
nop
in
mov
sbb
cmp
jno
test
mov
insl
lcall
incl
out
push
lds
inc
stos
add
fs
pop
std
ljmp
scas
mov
outsl
or
jns
jb
jne
pop
in
es
je
adc
inc
ss
xchg
pop
cmpsb
sub
jb
data16
and
inc
push
xchg
int
imul
je
mov
rorl
ffree
push
das
add
sbb
push
andl
lds
inc
scas
imulb
jl
imull
jns
mov
push
jns
iret
pop
ljmp
loop
xchg
subl
jo
js
subb
inc
fdivs
dec
pop
stc
jl
loop
outsl
push
inc
js
nop
fsubrl
addr16
dec
in
jne
adcl
cmp
lret
nop
xor
jne
mulb
rorb
push
das
addr16
jnp
shrl
imul
xor
adc
mov
daa
pop
sub
repz
jno
xor
ret
mov
decl
and
push
and
or
dec
iret
xchg
and
mov
std
push
jb
or
inc
lock
sbb
xor
cmp
jo
out
test
mov
jnp
das
jle
mov
cwtl
setle
sbb
jecxz
xor
loopne
mov
jbe
adc
mov
bound
pop
sbb
xchg
aad
pop
and
popf
pop
and
adc
xor
outsl
pushf
test
sbb
cli
sub
or
push
xor
ljmp
in
es
pop
xchg
dec
shll
mov
pushf
fstpl
adc
fldcw
hlt
in
fisubs
xlat
movsb
xor
or
inc
jo
pusha
inc
test
cmp
mov
mov
popa
subl
fwait
xor
push
xchg
bound
adc
mov
adc
mov
sub
mov
repnz
lods
je
sub
js
out
xchg
leave
xlat
cs
lret
adcb
mov
push
xchg
mov
mov
jb
push
cmp
stos
insl
mov
or
pop
xor
dec
insl
pop
inc
cmp
pop
add
pop
xchg
test
daa
repz
out
dec
xor
in
cmpb
les
xchg
mov
mov
or
mov
fwait
cmp
sub
cltd
sarb
mov
lcall
inc
in
bound
add
stos
sbb
jg
repnz
sbb
and
dec
in
jbe
popa
jo
sti
dec
xor
pop
pop
push
inc
mov
pop
lods
cli
xchg
mov
or
cmc
dec
or
ljmp
decl
xchg
xchg
mov
testl
pusha
lods
call
es
movsl
jmp
jl
adc
sbb
notl
mov
lds
sbb
loopne
clc
or
inc
shrb
adc
out
and
add
mov
data16
stos
in
lods
aad
test
shl
fs
pushl
fsub
jns
jbe
insb
ds
test
cmpsb
sbb
dec
and
clc
jno
xchg
sbbl
mov
aam
adc
cmp
sub
imul
add
int
loop
lods
adcl
ljmp
icebp
sbb
add
std
cltd
pop
push
cwtl
bound
mov
cltd
rolb
lret
dec
sub
cli
pop
rorb
xor
adc
sub
adc
add
dec
jb
and
notb
cwtl
cld
cmc
mov
bound
test
push
dec
lds
mov
outsb
arpl
and
loopne
js
xchg
lea
jne
cli
jl
mov
jbe
cwtl
std
mov
sahf
imul
push
pop
xor
sub
lahf
jbe
sbb
hlt
mov
inc
sub
cmc
xorl
sbb
cmp
movsl
add
xchg
and
xchg
ret
jecxz
push
push
mov
lahf
sahf
mov
jmp
xchg
pop
dec
and
int
mov
movsb
aas
es
insl
imul
bound
adc
fsts
jge
mov
cltd
ret
and
xchg
dec
add
lods
in
mov
mov
dec
sti
dec
dec
jno
fdivrs
jg
cli
out
subl
xor
dec
lods
push
int3
lcall
add
pop
jp
mov
push
add
jns
pop
add
imul
jae
push
push
mov
popf
sub
and
add
push
add
push
jl
movsl
cli
stc
es
cmc
popf
xor
mov
jns
mov
cmpsl
cmp
push
adc
gs
push
adc
mov
popa
xor
jae
mov
ret
stc
mov
fnstcw
ss
filds
fs
cmpsb
cs
mov
js
jnp
stc
add
sub
xor
sub
rclb
je
mov
lret
adc
dec
shll
push
insl
lsl
and
movsb
cmp
cmovs
jno
ja
ja
push
dec
xor
out
ds
mov
cmpsl
or
push
jp
add
jg
cmp
fidivl
mov
decb
xchg
stos
push
push
cltd
pop
mov
in
adc
and
fisubl
sahf
int3
es
popa
mov
cmpsl
mov
imulb
jle
sbb
frstor
cmp
pop
pop
and
xor
inc
sbb
xchg
enter
call
jns
adc
push
sbb
je
gs
iret
outsb
adc
ljmp
das
add
mov
xor
or
push
mov
or
adc
test
sbb
dec
add
lock
fmull
jp
nop
lret
sub
dec
fldt
dec
int3
xchg
cli
stos
push
aad
mov
sahf
sbb
jnp
in
lret
sarl
lea
fdivl
mov
mov
or
push
das
cmp
jo
sahf
enter
push
jo
repnz
and
jecxz
or
dec
xor
add
pop
sbb
pop
fcomi
imul
xor
das
lds
pop
dec
add
in
and
push
lock
out
shlb
jle
je
dec
lods
push
cmc
pop
ss
arpl
cs
lds
aas
and
aam
negb
popa
imul
iret
jo
test
scas
or
inc
push
lcall
rolb
or
push
sbb
inc
mov
mov
mov
jae
adc
or
aad
fldcw
repz
rcrl
hlt
lods
mov
mov
loope
lock
add
jne
xor
int3
out
or
jmp
jne
cs
sub
or
ror
das
test
inc
mov
sbb
xchg
loopne
fldenv
push
jmp
adc
mov
push
repz
cmp
jbe
lcall
sarb
mov
sub
fldenv
xchg
sarl
sub
push
sti
sbb
cltd
cmp
cmp
sbb
push
and
cmpsl
shl
pop
enter
jae
in
loop
cmp
jg
sub
sti
aam
popf
ljmp
hlt
jnp
mov
dec
out
pop
xlat
sbb
xchg
or
mov
mov
add
data16
mov
cmp
cld
icebp
push
add
jb
push
fisubrl
push
fwait
xchg
cmpsl
mov
pop
rclb
xchg
andl
adc
and
popf
jo
push
jns
adc
or
lcall
mov
push
xchg
out
daa
jp
pop
iret
mov
cs
xor
mov
movb
jb
xor
push
pop
xor
jl
cmpsb
cld
insl
and
je
add
or
nop
popf
out
cmp
or
icebp
jbe
mov
dec
push
cmp
jb
outsb
cmp
mov
mul
jmp
or
xchg
sub
pop
dec
dec
push
dec
inc
dec
dec
cmpsl
iret
jge
mov
push
adc
push
and
popf
out
enter
inc
popf
out
enter
fildll
push
shrl
pop
dec
push
adc
cltd
mull
sub
enter
inc
popf
out
enter
inc
popf
out
enter
inc
popf
out
enter
add
cltd
pushf
insb
fiadds
sbb
adc
jo
mov
sub
inc
popf
out
enter
inc
popf
out
enter
inc
popf
out
enter
inc
popf
out
enter
inc
popf
out
enter
inc
popf
out
enter
inc
popf
out
enter
inc
popf
out
enter
inc
popf
out
enter
inc
popf
out
enter
inc
popf
out
enter
inc
popf
out
enter
inc
popf
out
enter
inc
popf
out
enter
inc
popf
out
enter
inc
popf
out
enter
inc
popf
out
enter
inc
popf
out
enter
inc
popf
out
enter
inc
popf
out
enter
inc
popf
out
enter
inc
popf
out
enter
inc
popf
out
enter
inc
popf
out
enter
inc
popf
out
enter
inc
popf
out
enter
inc
popf
out
enter
inc
popf
out
enter
inc
popf
out
enter
inc
popf
out
enter
inc
popf
out
enter
inc
popf
out
enter
movsb
xchg
data16
mov
jmp
