mov
sbbb
mov
cmpl
loope
repnz
aad
mov
imulb
push
outsl
cli
ret
js
call
ret
lret
mov
test
dec
or
mov
es
les
pop
and
xlat
mov
test
dec
cli
inc
ss
sub
xor
fidivl
loop
loopne
lret
fisttpl
stos
mov
dec
stc
popa
in
cs
pop
fwait
inc
inc
pop
inc
imul
inc
or
sub
mov
ret
xchg
int3
sbb
pusha
lods
pop
inc
pop
les
test
push
mov
push
fstp
sub
xor
aad
or
fcomps
fimull
mov
daa
mov
lretw
pop
inc
leave
ja
and
sub
xor
inc
jecxz
sbb
iret
insb
mov
and
scas
add
rorl
rol
inc
mov
leave
mov
or
inc
fmuls
imul
xchg
xchg
iret
in
inc
pop
and
insb
jno
out
fisubrs
xor
out
lcall
and
loopne
or
inc
in
divb
stos
or
inc
adc
imul
mov
emms
jmp
bound
xchg
jo
call
iret
in
sahf
dec
lea
outsb
dec
cwtl
jns
leave
sbb
and
xchg
push
cmp
call
pop
mov
adc
mov
jle
jp
xchg
xor
out
and
cmpsl
in
int
daa
or
inc
fimull
cwtl
jmp
iret
mov
std
lahf
dec
xor
ret
jmp
cli
add
mov
test
or
inc
ljmp
sub
dec
fbld
lds
cmp
jle
movsb
xorb
fdivl
pusha
or
cmp
std
and
ja
je
in
imul
dec
notb
dec
fs
out
xchg
or
mov
cmp
mov
add
dec
cmpsl
sub
insl
insb
fwait
jl
push
xchg
repnz
lock
into
arpl
ds
xchg
add
popa
shrb
jae
pop
inc
stos
xor
jg
inc
out
mov
pop
pop
cmp
add
das
adc
mov
pop
add
in
fstpl
jb
fwait
jg
out
jp
fisubl
xchg
movsb
movsb
push
imul
inc
imul
xor
adc
jp
stc
stos
and
clc
mov
out
cmpsl
sti
pop
xor
int3
or
lret
push
into
jbe
das
sti
cmc
jg
fisubl
xchg
xor
test
addr16
push
push
mov
inc
push
adc
push
push
mov
fsubrl
sbb
cld
icebp
and
add
xor
adc
scas
mov
pop
xorl
test
clc
fdivrl
lahf
xlat
lds
xchg
aas
jne
jae
lds
pop
lea
adc
jl
push
movsb
adc
shrb
notl
add
call
mov
cmp
jecxz
aad
inc
call
loop
mov
jne
push
nop
ja
sahf
jecxz
shlb
push
sbb
test
in
jo
xor
andb
cmpsl
mov
jmp
fld
mov
jmp
or
push
push
pop
les
inc
les
in
jecxz
pop
add
jns
jmp
xor
jnp
xor
inc
ret
inc
loope
xor
jae
xor
jp
outsl
inc
add
and
pop
popa
rep
sbb
and
push
lahf
adc
push
scas
or
fildll
iret
cmp
inc
stos
test
and
inc
dec
xor
xchg
sbb
mov
and
mov
inc
inc
je
push
fbld
repz
sbb
stc
in
push
int
lret
cmp
test
jmp
and
sbb
pop
fstps
icebp
data16
or
inc
cmp
and
sub
out
adc
roll
xchg
mov
fists
repnz
das
lret
inc
add
insb
outsl
imul
in
out
push
or
and
cwtl
dec
insb
and
imull
xchg
adc
int3
adc
or
repz
or
cld
sahf
sub
int
fstpl
mov
and
pop
mov
add
sub
add
sub
mov
mov
ds
bnd
sub
jb
ds
add
dec
mov
and
sarb
js
test
jae
stc
test
add
xchg
subb
cltd
xorl
pop
dec
aad
inc
xchg
inc
and
add
addb
pop
dec
in
loopne
adc
mov
pop
fidivl
mov
sbbl
xchg
fimuls
pop
mov
sbbb
add
push
pop
jb
mov
movsb
inc
sbb
or
inc
cmp
mov
xor
jg
mov
jg
and
lock
ss
scas
jmp
lcall
js
dec
cmp
inc
sti
dec
loope
addb
test
xchg
xor
mov
xchg
cmpsb
pusha
not
jb
loop
lea
addb
orb
push
dec
cmc
shrl
inc
pop
stc
push
xor
add
loopne
xchg
icebp
pop
in
clc
lret
xor
cmp
pop
rcrl
std
or
repnz
xlat
jae
sbb
insl
lods
adc
popf
push
push
mov
pushf
cmp
xlat
pop
add
out
push
iret
pop
nop
jg
leave
movsb
imul
sti
cltd
pop
nop
lock
shlb
or
dec
mov
dec
xlat
mov
pusha
lock
shlb
enter
std
jge
adc
fistpll
outsl
imul
xchg
mov
scas
nop
mov
sbb
adc
stos
add
xchg
jmp
scas
cmp
push
out
push
xchg
adc
jne
loopne
stc
mov
lods
in
mov
cli
rep
movsb
sbb
mov
daa
adc
jb
sarl
sub
sbb
lret
pop
xor
lret
or
xchg
fxrstor
fcoms
cltd
inc
pushf
mov
es
add
add
lret
jb
mov
add
mov
sahf
and
push
pop
stc
xor
push
and
stos
mov
inc
xchg
aad
mov
icebp
inc
push
jns
jge
mov
mov
and
adc
into
roll
je
in
add
orl
fldcw
cmpsl
outsb
xlat
or
mov
mov
and
jmp
mov
popa
sub
cmp
rcr
insl
mov
icebp
cmp
sub
and
add
sbb
les
shll
aad
push
lods
out
jne
popf
cmp
push
out
idivb
mov
lcall
mov
aam
jmp
aaa
cmp
jge
xlat
xor
int3
and
jle
jge
cmp
mov
cs
negl
ret
out
lock
jp
jle
mov
scas
pop
lea
jne
jecxz
inc
fucomi
pop
shl
dec
xchg
and
xor
sbb
sub
jae
addb
cmp
mov
cmc
mov
mov
mov
adc
fists
pushf
push
and
pop
std
js
ret
xchg
ficoml
mov
jns
add
mov
add
xchg
pushf
push
cli
inc
pop
or
sub
fistpl
nop
cmpsb
rcrl
dec
xchg
imul
inc
cmc
xchg
jmp
int
jnp
cmp
test
test
mov
xchg
fmul
sarl
testb
mov
in
inc
scas
bswap
or
cmp
es
pop
fsts
clc
jmp
fnstenv
rolb
adc
iret
in
pop
xchg
fs
add
ret
sbb
or
push
push
cmp
add
subl
lret
rsm
ds
inc
mov
xor
add
lahf
or
prefetch
or
rcrl
inc
xor
xchg
dec
mov
mov
div
fdivr
or
enter
out
add
or
jns
pushf
push
lock
repz
xchg
stc
mov
xor
pop
push
inc
mov
loope
push
pop
in
les
data16
xor
inc
pop
fdivl
mov
dec
inc
cmpsb
lret
xor
adc
xchg
sbb
out
pop
dec
pusha
lock
mov
mov
nop
or
xchg
adc
cmp
jecxz
or
xor
add
in
js
pop
lock
xchg
jne
jecxz
cmpsl
jb
cmp
mov
gs
push
divb
and
mov
mov
sarl
sub
imul
hlt
dec
mov
xor
daa
lret
shlb
in
hlt
dec
push
fwait
cltd
jbe
insl
push
insl
ja
mov
add
sbb
imul
sbb
inc
jo
xchg
rorb
or
pop
fstl
pop
add
fwait
adc
movsl
push
and
cmp
mov
stos
out
dec
gs
jns
cmpb
in
sti
jae
jnp
inc
adc
mov
ja
adc
mov
sbb
adc
and
mov
cmp
arpl
cld
rolb
mov
test
xchg
adc
push
cltd
jns
test
ja
sub
dec
push
pop
mov
test
sbb
mov
nop
aas
hlt
jno
push
test
mov
pop
nop
adc
insb
mov
jp
out
cmp
add
aad
arpl
jecxz
arpl
mov
and
cmc
xchg
sub
imul
hlt
rclw
jnp
add
push
shlb
movsb
pop
mov
inc
mov
std
add
lahf
cmp
push
ficoml
lea
shl
and
sarb
dec
and
je
adcb
jmp
popa
pop
jo
arpl
mov
loope
cmp
inc
mov
repnz
dec
pop
mov
jne
incl
and
fwait
lcall
add
push
push
xchg
jg
lods
mov
mov
and
add
sbb
or
aas
add
test
sahf
pop
xor
push
mov
inc
mov
pusha
add
cmp
mov
rol
xor
enter
inc
ret
xchg
test
mov
inc
mov
push
inc
dec
icebp
fwait
jb
jmp
mov
jle
inc
fnstcw
mov
cmp
sbb
or
pop
cli
or
aam
xchg
or
mov
test
loopne
in
stc
addr16
push
call
push
xchg
pusha
xor
fwait
ss
dec
flds
and
ss
push
or
fwait
pop
subb
clc
cmp
mov
test
inc
or
pmovmskb
roll
addb
mov
into
sbb
pop
ljmp
xchg
std
ss
and
mov
dec
mov
pop
adc
inc
cmp
push
sub
mov
divb
or
and
and
xor
sti
and
pusha
dec
sbb
enter
jp
xor
and
push
repz
cmc
xchg
inc
in
les
cmpsl
inc
sub
test
mov
cld
xchg
loopne
enter
std
je
mov
cwtl
aad
mov
aaa
inc
stos
lods
jb
test
adc
jb
imul
xor
mov
sub
cmpsb
cmpsb
fnsave
stc
cld
mov
sub
inc
call
stos
pop
ja
fdivs
jle
lret
mov
jnp
out
mov
pop
test
lds
shll
xchg
adcl
iret
mov
movsl
aaa
push
mov
sbbb
jnp
pop
repnz
xor
xorl
decl
dec
arpl
int
push
inc
in
addb
nop
out
or
sbbl
sbb
push
mov
int
mov
push
or
add
test
ja
xchg
xchg
push
cmp
cmp
cltd
xchg
cmc
ret
jnp
xchg
je
lds
pop
xchg
lds
jmp
les
dec
sub
arpl
sbb
decb
or
push
andl
xchg
data16
insl
pop
cli
aam
ja
lds
and
adc
int
cmp
hlt
fnstsw
push
imul
adc
jbe
mov
lds
pushl
js
mov
in
in
lods
and
pop
es
sub
testb
jle
out
pop
cmp
or
cli
cmp
daa
sbb
mov
daa
xchg
les
test
pop
or
lods
shl
sbbl
and
insl
add
lock
cs
out
xor
push
inc
mov
popf
andl
xchg
out
jmp
xchg
and
std
lods
insl
mov
adc
ljmp
roll
shlb
inc
sbb
out
cmp
call
or
out
fcomps
mov
xor
mov
into
push
les
je
insb
xchg
and
sub
test
mov
scas
mov
sbb
cmp
aas
mov
xor
pop
mov
ret
outsb
pop
dec
dec
sbb
divb
call
xor
mov
int3
ret
dec
lods
lcall
or
add
add
push
aad
inc
xor
into
lret
jne
out
push
pop
push
js
ja
pop
lmsw
popf
repz
jp
pop
fwait
or
lds
push
mov
push
cld
fisubs
lods
in
dec
xorb
aad
sub
fucomip
sahf
mov
lea
stos
and
pop
dec
add
pop
or
fnsave
out
xor
mov
push
sub
sbb
pop
sbb
inc
jno
addr16
adc
xor
add
dec
xchg
jp
mov
mov
and
vmovupd
and
in
cmpsl
aad
loopne
pop
movsb
jns
cwtl
ljmp
mov
jns
xor
cmp
cltd
push
add
push
cltd
stc
mov
inc
or
in
pop
sti
gs
jmp
iret
dec
cmc
pop
jnp
push
sub
mov
data16
inc
push
sbb
pop
cmpsb
or
add
sub
adc
jg
shrl
mov
nop
hlt
mov
dec
pop
add
dec
pop
test
fldl
mov
jb
repnz
pop
mov
loope
icebp
jno
ss
fbstp
cs
ret
stos
outsl
cltd
cld
lods
dec
pop
fnstenv
xor
in
jg
push
sbb
sub
aaa
jecxz
mov
shlb
ja
pop
jecxz
xor
mov
cli
pop
mov
push
mov
mov
pop
xchg
mov
cwtl
cld
hlt
push
test
jae
pop
pop
subl
fsubp
push
aad
dec
dec
jp
mov
mov
add
or
jae
bound
sbb
dec
in
adc
xchg
ficompl
test
dec
pop
out
insb
orb
mov
or
hlt
pop
iret
fcoml
xchg
pop
cmp
idiv
and
push
add
pusha
xor
shr
pusha
mov
sub
sbb
mov
push
and
mov
sbb
adc
dec
inc
mov
inc
mov
aaa
xor
sbb
pop
lret
push
call
sbb
dec
leave
jle
movsl
sub
jae
leave
jecxz
push
pop
das
inc
pushf
xchg
aas
fstps
jo
adc
xor
enter
xchg
jae
sbbb
adc
test
push
sub
fsubrs
add
jmp
sub
int3
pop
mov
dec
pop
mov
xchg
mov
mov
inc
and
dec
inc
mul
stos
push
adc
inc
outsl
or
clc
in
inc
mov
ds
out
fs
adc
jb
xchg
inc
and
insl
in
testl
push
out
mov
pop
aad
outsl
call
mov
loope
mov
lods
inc
jmp
push
lods
loopne
cmc
xor
jmp
out
in
call
loop
inc
sub
jg
push
stos
ret
mov
stc
cltd
js
rcrb
xchg
dec
pushf
xor
mov
and
inc
shlb
xchg
push
aad
jns
sbb
frstor
repnz
ja
dec
mov
jns
roll
xchg
leave
jae
les
and
test
std
ja
pop
mov
dec
aad
test
jns
int3
push
sbb
stos
mov
pop
std
daa
push
sbb
xor
movsl
jp
pop
mov
out
rolb
cli
jae
mov
ret
mov
cmpsb
pushf
in
xor
repz
ja
jecxz
sub
sub
add
xchg
aaa
jnp
popa
add
repnz
mov
icebp
rcrb
mov
push
adc
jns
fiadds
lcall
cmp
mov
rcl
adc
fists
repz
outsb
jo
shr
test
xchg
lahf
or
inc
lret
fisttps
mov
aas
adc
adc
adc
adc
scas
sbb
lret
pusha
repnz
pop
lds
or
push
cmpsl
loopne
test
and
pop
mov
cld
dec
jae
popa
push
adc
inc
iret
cmp
jg
lods
pop
lods
popf
jmp
cmpsb
sbbl
mov
inc
cltd
outsb
xchg
faddl
into
shlb
out
outsb
arpl
xchg
cmp
push
sub
jae
jne
addr16
mov
push
add
or
adc
fcompl
cmpsb
out
jns
loopne
dec
shl
sbb
mov
pushf
out
inc
mov
stos
jmp
mov
sarl
test
or
int
pop
cmpsl
es
dec
mov
std
push
adc
repz
or
rcrb
or
loopne
dec
pop
popa
cmpb
lea
orb
out
mov
jbe
cmp
fwait
in
in
lcall
cmp
cli
adc
or
or
pop
ss
xchg
xchg
sbb
lahf
mov
aam
adc
scas
jl
sbb
xchg
lret
mov
mov
call
inc
cmp
mov
add
dec
xor
xor
mov
jne
fs
insb
fcompl
push
ret
call
rorb
ret
mov
push
push
jo
std
sub
inc
fdivrs
jo
jo
mov
mov
dec
adc
pfsub
nop
cli
dec
int
outsb
dec
pop
jno
jecxz
int
xchg
outsb
fs
adc
inc
jp
mov
ret
push
sub
cmp
push
xor
outsl
out
rclb
and
fsubrs
cmpsl
or
add
cmpsb
shrb
push
mov
pushl
jl
pop
push
pop
decw
mov
lahf
and
xadd
jne
movb
cmove
jb
mov
f2xm1
lret
std
repnz
popf
or
and
jmp
and
dec
inc
pop
adc
sub
in
xor
shl
sbb
cs
or
mov
bound
movsl
xchg
in
enter
mov
popa
arpl
insl
lods
movsl
pusha
jle
fnclex
push
add
mov
imul
rorb
inc
dec
out
cmc
stc
dec
add
jmp
sbb
dec
pop
sbb
push
fsubrs
sbb
fwait
leave
xchg
xor
fnsave
mov
pop
es
mov
test
mov
cmpsb
fstpl
adc
pusha
call
sub
xchg
pusha
out
nop
sub
in
dec
popa
dec
enter
into
jbe
bound
mov
inc
ret
rcrb
jnp
or
cmp
or
sar
in
leave
or
aas
out
push
adc
ss
ja
xchg
sub
test
or
scas
jmp
mov
sbb
rol
notl
lods
stc
notb
iret
jmp
out
test
cmp
mov
popf
sbb
test
push
hlt
sbb
add
mov
popl
jge
xor
or
js
bound
xchg
pop
sbb
int3
xchg
cmp
mov
push
cmp
loope
les
cs
mov
daa
pop
call
mov
xchg
out
inc
push
adc
jae
mov
jb
sti
jl
fidivl
mov
jl
xor
insl
xchg
pop
es
fs
int3
aam
movsl
aaa
dec
push
jmp
push
data16
imul
or
sti
jle
push
sub
adc
das
es
shr
mov
lea
adc
js
push
xchg
int
rcll
iret
or
adc
leave
add
push
xchg
inc
ljmp
mov
mov
daa
leave
jns
mov
jnp
xchg
call
nop
cmpl
sbb
jnp
daa
fbstp
mov
imul
jb
cmp
inc
out
fistpll
push
cmp
shlb
sub
ja
test
shll
mov
sub
jbe
fnsave
loope
aas
sbb
xchg
cli
add
int
lret
add
inc
mov
call
and
fisttpll
sbb
fsubl
stc
divl
push
dec
repz
sarb
mov
andl
push
mov
sbb
js
add
loopne
int3
add
mov
or
xchg
push
daa
or
pop
inc
inc
jg
jb
pop
imul
adc
sub
jb
jno
mov
ret
mov
jno
xlat
mov
push
roll
lock
lret
cmp
push
sbb
fstps
cmp
enter
into
fdivrl
lea
mov
push
pop
montmul
cmpsb
add
xor
pop
rcrl
dec
lret
clc
fwait
pop
psubusb
loop
mov
inc
mull
dec
add
lcall
push
repz
faddl
dec
add
xchg
mov
add
bound
leave
sti
mov
mov
cmp
das
cwtl
inc
insb
outsb
repnz
inc
aas
out
testl
out
sub
or
movsb
ffreep
jp,pt
pop
rcrl
cltd
insb
mov
pop
clts
push
lock
pop
inc
in
push
jo
and
sbbl
daa
push
xchg
out
ficoml
out
outsb
xorl
jmp
sahf
cmpl
jno
jg
xchg
mov
mov
jg
push
cmp
mov
subb
aaa
movsb
add
and
hlt
pop
xchg
mov
and
fstpl
inc
and
mov
cmpsl
gs
das
cmp
and
pop
push
cmpsl
out
leave
mov
fldenv
ljmp
clc
jmp
mov
bound
cwtl
aam
mov
push
pop
push
cmp
adc
dec
and
shrb
jmp
mov
out
pushw
nop
seta
adc
sub
xchg
pop
mov
mov
ret
push
mov
jne
jp
xor
hlt
inc
test
fildll
enter
jl
inc
dec
call
jns
into
rcr
arpl
inc
mov
xlat
jb
mov
in
jae
je
add
loope
dec
cmp
ds
lds
div
lods
nop
pop
inc
xchg
aam
bound
push
lods
sub
and
in
jecxz
push
fs
cld
nop
xchg
call
lods
leave
mov
inc
es
jo
ss
and
pop
sbb
or
xchg
insb
daa
sbb
in
subl
xor
jp
sbb
jp
gs
dec
inc
push
jno
ret
sti
mov
popa
and
mov
in
inc
sbb
stos
negl
mov
cbtw
inc
cmp
into
scas
xchg
dec
fidivl
lret
outsl
cmp
dec
mov
xchg
and
or
aas
sub
pop
inc
push
add
in
cltd
hlt
sbb
fldenv
popa
sub
inc
jecxz
xlat
or
pop
push
fdivr
popf
ret
out
pop
or
movsl
lcall
adc
scas
mov
out
and
aad
adc
add
sti
fadd
xchg
xchg
aam
inc
push
mov
cmpsb
mov
xchg
nop
leave
gs
icebp
pop
invd
xchg
dec
mov
cltd
push
or
adc
and
push
mov
ret
sub
fists
cli
xchg
loope
jp
pop
fcmovnb
hlt
xchg
jmp
cmp
add
test
or
xchg
xchg
icebp
cld
add
inc
les
jo
ret
push
pop
popf
lret
jnp
adc
jo
inc
push
hlt
fld
ret
mov
loop
lret
out
roll
das
xor
or
fdivrs
loop
or
int
sahf
jp
jge
push
addb
pusha
cmp
mov
push
and
pop
scas
aaa
cwtl
testb
pop
andb
aaa
popa
jle
add
loope
inc
cmp
test
xchg
je
movsl
ss
xchg
es
icebp
pop
mov
push
sbbb
mov
dec
ficoms
push
pushf
popf
lret
in
outsl
jb
addb
stc
icebp
stos
and
jmp
mov
mov
ficompl
inc
repnz
push
pop
pop
sub
stc
in
mov
ds
sbb
inc
and
cli
cs
cmp
sbb
aam
rcll
sub
adc
test
adc
mov
pop
pop
xor
xorb
ljmp
inc
test
test
jg
mov
daa
xchg
aas
push
test
adc
stc
outsb
push
psllq
mov
adc
test
enter
dec
or
pusha
ja
aam
subl
jle
sahf
aaa
cmp
outsl
jae
xlat
pop
ja
lret
adc
rorb
loopne
mull
outsb
dec
push
xchg
fildl
sub
sbb
lds
pop
mov
inc
jg
sbb
push
mov
rcll
jb
or
mov
lods
lret
loopne
stos
test
mov
push
jg
push
imul
sbb
test
das
xchg
adc
sahf
inc
mov
or
subl
pop
imulb
int
cmpl
in
and
jle
mov
and
mov
jbe
in
dec
and
jl
xchg
cmp
adc
bswap
je
in
lret
outsl
adc
cmpsb
or
xchg
js
or
bound
out
shrl
push
sub
fbstp
xor
jnp
dec
sarl
and
dec
xor
insb
std
test
mov
fs
aaa
inc
or
jno
mov
xchg
sbb
lahf
pop
scas
mov
xchg
cmp
aad
ja
xchg
into
ja
add
fldl
out
movsl
mov
sarl
ljmp
mov
notb
repnz
adc
ljmp
sbb
hlt
inc
cmp
iret
scas
add
pop
mov
orl
xchg
push
sbb
push
dec
incb
xor
jne
mov
test
push
add
dec
ds
and
sbb
pop
dec
shrb
daa
pop
sbb
fsubl
sbb
xlat
pop
jne
jge
clc
mov
mov
fsubrl
cmpsb
mov
inc
lods
es
adc
lock
jnp
jg
aaa
inc
inc
jg
adc
pop
jecxz
jae
and
mov
in
into
jns
fsubp
subl
adc
lds
and
pop
jno
add
add
stos
idivb
leave
movsl
add
sub
outsl
arpl
je
pushf
das
scas
xchg
or
pop
rcll
shrb
mov
pop
mov
sahf
push
mov
xor
sub
sbb
stos
xor
mov
pusha
xchg
sti
mov
mov
mov
popf
lahf
cmpsl
xor
ret
rep
mov
jge
in
scas
fstpt
lret
js
sbb
ss
pop
mov
cmp
scas
mov
cmc
mov
loope
fsub
add
mov
fildll
push
cs
xchg
subb
fs
jo
std
scas
or
jo
cli
push
lret
js
imul
icebp
fsubrs
in
dec
loop
iret
sub
pop
mov
sbb
mov
mov
aam
or
pop
movsb
cmpsl
inc
adc
sub
iret
jb
xor
dec
xor
lods
pop
jecxz
jmp
sbb
and
cmpsb
aaa
sub
dec
imul
xchg
sbb
aaa
push
lods
add
inc
sub
iret
jno
cmp
or
outsl
shl
inc
and
xchg
xchg
sub
clc
push
jge
jl
lods
mov
push
mov
mov
inc
test
sbb
cmp
or
mov
lcall
sbb
popa
mov
sbb
lret
pop
js
dec
or
add
mov
adc
mov
bound
cmp
fiaddl
add
cmc
leave
loope
jb
pop
hlt
pop
rol
jmp
in
adc
cmp
inc
fmull
push
or
mov
mov
lods
xchg
mov
jb
jnp
jns
in
xor
movsb
or
bound
adc
int
add
jno
fwait
arpl
testb
and
js
xchg
and
jmp
xchg
int3
dec
adc
insb
pushf
cmpsl
jo
xchg
fs
ret
xor
mov
mov
push
int3
mov
mov
lretw
mov
cld
and
sbb
add
in
rolb
sarl
push
sbbl
inc
fwait
icebp
icebp
jmp
jnp
jmp
roll
dec
xchg
pushf
lock
ret
fxam
jle,pt
xlat
repnz
inc
out
rolb
leave
out
jnp
dec
fistl
and
mov
loop
push
scas
dec
adc
mov
push
add
jns
mov
xor
loope
push
jbe
jle
hlt
mov
adc
repz
popa
adc
insl
mov
jne
or
add
sub
xchg
dec
and
inc
adc
popf
and
shll
xchg
rcrb
movsl
fcomps
int
cmp
mov
cmpsb
add
xor
add
mov
lods
test
cli
test
les
movsl
jae
cmp
loopne
ja
mov
inc
adc
xchg
jns
hlt
cld
arpl
sub
pop
fabs
pop
mov
jle
lea
mull
jo
js
rolb
adc
int3
sub
js
pop
push
jbe
ret
cmp
jle
inc
adc
jg
mov
mov
mov
and
jg
dec
sti
lahf
sbb
sub
pusha
pop
sbb
inc
mov
sub
mov
in
aas
popf
cmc
cs
dec
test
test
movsl
out
shl
inc
insb
push
ds
neg
mull
cld
inc
dec
push
test
add
jno
ljmp
ret
xchg
push
push
pop
sbb
push
imul
shlb
cwtl
cmp
inc
adcl
pop
mov
rcr
imul
jmp
out
jge
sbb
or
mov
or
imull
add
cli
fsubp
rcrb
mov
adc
push
and
mov
add
imul
cmp
sbb
shll
lods
dec
jmp
les
cmpsb
sbb
xchg
imul
out
mov
lcall
sti
add
mov
outsl
leave
adc
cmp
inc
call
pop
into
jge
lret
icebp
imul
mov
aas
mov
mov
fdivl
push
add
lock
jle
ret
cmpsb
mov
xchg
test
loopne
fst
hlt
ds
push
jg,pt
ret
into
mov
fcomi
mov
sbb
lods
push
fdivr
or
jo
es
pushf
jno
inc
mov
lcall
jb
out
sarb
and
sub
cmp
and
jecxz
sub
xchg
or
xchg
inc
jle
out
out
fstl
sti
inc
clc
cmp
jne
dec
push
inc
sbb
scas
mov
jl
out
cld
loop
and
mov
iret
xlat
jbe
addb
jne
outsl
jle
aam
cmp
push
lock
jbe
xlat
ret
and
mov
aam
add
leave
cmp
adc
dec
dec
call
fsub
fstl
and
xor
int
dec
inc
or
xlat
in
dec
mov
stos
xor
imull
in
push
out
pop
nop
sub
fwait
stos
outsb
mov
inc
push
pop
mov
nop
mov
sub
out
test
in
xchg
stos
adc
imul
test
arpl
cmc
push
loope
mov
xor
test
idivb
clc
xor
es
cs
fucomi
nop
mov
push
cmp
jnp
mov
xchg
lret
jg
jne
movsb
mov
subb
jmp
inc
and
inc
xorl
dec
jl
cwtl
lea
scas
add
mov
pop
movsl
pusha
add
shll
mov
icebp
pushf
inc
dec
mov
xor
int
mov
test
pop
dec
insl
loopne
stc
add
cmp
pop
call
push
xchg
mov
or
push
lea
cmp
lods
cmc
or
jp
movsb
push
or
cvtps2pd
mov
cs
and
subl
pop
repz
add
fbld
test
in
shrl
in
xchg
into
lods
mov
or
scas
xor
lcall
repnz
repz
jnp
mov
inc
push
and
ds
shrl
idivb
cmp
xchg
and
das
sub
push
in
mov
inc
pusha
outsl
pop
mov
ljmp
imul
push
aas
xchg
repnz
mov
addr16
je
sub
fsubl
in
and
xchg
lahf
cmp
popf
jb
xchg
push
inc
loop
or
clc
leave
pop
mov
jnp
or
and
push
repnz
fbld
adc
out
xchg
sbb
scas
lret
push
cmp
repz
fstpl
inc
xor
inc
addr16
jnp
out
addr16
sbb
ret
pop
mov
inc
xchg
xchg
les
es
pusha
xorb
addr16
stos
cmp
jecxz
inc
inc
lea
add
mov
or
xchg
xor
sub
push
lcall
xor
mov
daa
movsl
jno
mov
divl
jbe
movsl
mov
mov
in
jmp
add
adc
adc
inc
mov
pop
or
fimuls
dec
adc
mov
inc
add
jecxz
push
or
mov
fs
mov
xchg
lds
repnz
ss
fmuls
mov
jp
ljmp
mov
ret
pop
push
aam
test
lods
lret
xor
sahf
in
dec
xchg
jge
adc
cmp
js
fstl
loop
mov
dec
repnz
push
add
sub
adc
cmpsl
clc
jmp
out
jg
js
jne
lcall
adc
and
or
dec
sbb
jecxz
push
add
or
dec
jns
jmp
in
test
insl
mov
adc
stos
add
out
ret
cmp
das
push
or
push
push
xchg
enter
sbb
stos
int
lret
push
push
hlt
jle
pop
mov
mov
mov
lret
add
fwait
cmpb
jle
orb
ja
cmpsb
enter
lcall
dec
cltd
mov
adc
rcr
lods
push
xor
ljmp
push
inc
pushf
mov
repz
inc
push
popa
push
divl
mov
cmpsl
jecxz
pop
inc
sar
mov
adc
push
cltd
mov
push
lea
xlat
je
mov
fmul
bound
add
jnp
dec
mov
fwait
insl
sbb
and
sub
shrl
mov
fwait
xor
cmp
sahf
push
addr16
aas
cld
push
cwtl
lea
and
xlat
inc
push
rcll
sub
cli
push
jl
adc
xor
cmp
pop
lods
outsb
xor
jnp
push
ja
and
andl
and
icebp
inc
mov
es
and
ljmp
xchg
jo
dec
mov
pop
or
sub
or
dec
in
adc
hlt
cmp
add
std
cmp
dec
xor
dec
and
jg
test
sbb
in
sub
into
lret
mov
xor
mov
aad
clc
fwait
movsb
mov
dec
add
adc
cltd
mov
fbstp
arpl
mov
or
jge
loope
mov
inc
bound
dec
inc
mov
push
aaa
cmpsl
mov
lahf
test
cltd
notl
mov
int
xchg
and
inc
lds
mov
xchg
stc
mov
mull
dec
stos
orb
and
mov
sbb
dec
mov
dec
aaa
jbe
pop
dec
xlat
sub
cs
mov
jecxz
loopne
sub
push
jg
outsb
ficomps
cld
shll
out
push
lret
pop
mov
cmp
inc
cmp
mov
mov
enter
add
or
and
in
lahf
add
push
sbb
fmull
sbb
mov
pop
outsl
ljmp
das
dec
mov
lret
mov
jle
sbb
mov
jbe
clc
push
dec
cmp
jo
daa
add
dec
xchg
iret
inc
test
rcll
add
lods
and
xchg
jle
repz
das
nop
ljmp
lods
push
mov
cmp
test
shlb
mov
mov
mov
ret
sbb
inc
negl
push
mov
fsubrl
sti
or
scas
nop
pop
stc
mov
mov
rcll
cwtl
xlat
xor
push
cmpsb
jo
xchg
pop
out
pop
fwait
lret
fidivrl
mov
mov
mov
sub
dec
jmp
sahf
cmp
push
mov
lds
adc
out
sbb
testb
jg
into
pop
ja
jb
mov
mov
sbb
out
outsb
dec
lcall
notb
jg
loope
mov
sub
inc
in
jo
mov
xchg
pop
mov
sbbb
call
adc
repnz
adc
fistl
push
pcmpeqb
xor
sbb
inc
cltd
adc
sub
addl
push
xchg
cli
xchg
jo
pop
xor
cmp
mov
mov
fs
pop
addb
imul
xchg
mov
pop
jae
test
clc
js
lock
mov
out
fstps
mov
inc
fcmovnbe
inc
int
mov
insb
inc
sub
cmpsb
and
jno
fdivrs
or
mov
insb
popf
sbb
repz
cmc
lret
lret
pop
out
mov
xchg
mov
sbb
mov
cmp
xchg
add
push
pop
sbb
adc
loop
fisttps
loopne
push
ror
dec
fdivrs
mov
ljmp
add
mov
imul
popf
inc
mov
in
xchg
adc
xchg
cmp
pop
int3
and
and
test
test
dec
aaa
inc
cmp
sarb
xor
push
sub
sbb
fcoml
dec
mov
mov
sbb
cmp
add
mov
add
or
lahf
or
movsl
out
adc
lret
xchg
out
push
in
outsl
sub
mov
lods
mov
aaa
dec
repz
xor
ds
call
add
jbe
insb
mov
sbb
ret
inc
pusha
es
lds
aam
or
push
je
dec
cmc
cmp
sahf
pusha
jno
ja
imul
sub
or
out
lods
mov
dec
or
sub
push
dec
xor
lret
movl
mov
pop
cltd
mov
sti
inc
lds
adc
out
adc
test
mov
add
andb
stos
add
icebp
push
repnz
in
xchg
dec
in
movb
rdmsr
js
aam
xchg
ds
jbe
test
cmp
shrl
push
fistl
repnz
dec
je
and
push
int3
hlt
dec
xor
hlt
jmp
outsl
lods
cmpsb
ss
cld
push
jae
inc
inc
xchg
sub
pop
pop
adc
push
jmp
rolb
push
mov
sub
out
jne
pop
cmpsb
insl
adc
push
jp
rcrb
mov
cmp
out
out
push
rcl
adc
dec
sbb
out
cwtl
cmp
fadds
xlat
and
xchg
xlat
insb
imul
inc
and
arpl
and
fsts
jo
xlat
les
push
or
mov
mov
das
mov
add
aaa
jo
add
push
inc
mov
data16
imull
xor
pop
lret
sbb
imulb
mov
push
nop
jecxz
testb
pop
mov
test
mov
lret
dec
add
push
pusha
cli
mov
push
adc
fisubs
mov
and
jmp
push
or
sbb
push
xchg
inc
cltd
fmull
xchg
dec
cld
scas
ja
in
insl
cmp
into
add
add
ret
dec
push
cmc
loop
cld
inc
ds
cmp
movsb
into
out
xor
mov
int3
or
hlt
adc
or
lahf
xor
movsl
cmp
mov
pop
cmpsl
or
mov
or
inc
dec
rorb
jge
shlb
jge
dec
fstl
shrb
or
pop
pushf
or
or
jnp
jo
jbe
jl
data16
int
pop
outsb
int3
repnz
or
mov
insl
sub
inc
sub
cmp
cmp
sub
sub
dec
loopne
aad
insb
or
mov
xlat
sbb
out
xchg
addb
xor
xor
cmp
dec
mov
loope
stos
insb
xchg
out
lret
mov
and
push
push
lahf
scas
mov
out
push
inc
add
cmp
cmc
cld
cs
test
repz
sbbb
mov
rcrb
dec
xor
fildll
addr16
idivb
jp
sbb
pop
gs
int3
out
scas
push
dec
mov
cmp
jnp
in
lahf
cmpsb
insl
pushf
test
fwait
loope
sub
lock
out
cmp
jnp
sbb
inc
cmp
decl
mov
xor
add
stc
hlt
xor
cmpl
adc
cs
notl
xchg
jle
inc
or
add
jg
pop
movsb
adc
dec
movsb
push
mov
pop
out
imul
lods
aam
mov
inc
cmp
mov
inc
icebp
js
js
popf
arpl
and
adc
cmp
cs
cli
mov
scas
fistps
inc
xchg
mov
jb
adc
push
hlt
dec
xchg
repz
lea
repnz
dec
repnz
mov
std
adc
mov
push
add
sti
or
jae
mov
loop
and
lods
xor
sbb
icebp
pop
aas
fs
push
pushf
sti
and
outsl
dec
das
xchg
lret
mov
dec
pop
rorb
push
insb
xchg
xor
test
shlb
mov
xor
das
in
hlt
mov
shrl
cmp
outsb
fstps
cmp
lcall
scas
das
xlat
test
arpl
in
inc
push
stc
sbb
les
dec
aam
sub
push
push
xor
mul
adc
mov
aam
iret
jmp
inc
jae
xor
fwait
popa
jae
sbb
mov
sahf
imul
mov
ret
je
fs
loope
xor
pop
jnp
std
rol
mov
movsl
jle
scas
sar
mov
aam
loop
mov
dec
ljmp
cs
pop
dec
rcl
shlb
xor
cwtl
sub
or
stos
test
cmc
jb
pop
stos
pop
arpl
lcall
xor
idivb
inc
pusha
popf
insb
out
add
dec
es
ljmp
inc
popf
mov
and
pushf
pop
je
je
mov
cmpsl
mul
and
addr16
adc
jno
cwtl
cwtl
ret
mov
repz
sub
add
out
xchg
out
pop
mov
sbb
add
xchg
and
xor
mov
insb
repnz
sub
stos
cmpsl
cmc
add
cld
call
xor
leave
jge
inc
push
xchg
leave
sbb
mov
ljmp
icebp
mov
mov
sbb
add
leave
cld
inc
sbb
subb
ret
imul
daa
ss
jmp
jb
test
aad
push
sti
icebp
and
jl
push
push
xchg
fsubl
adc
pop
push
mov
pop
push
movsb
dec
std
dec
push
xor
addr16
fldt
arpl
cli
ja
lahf
jle
dec
in
lods
rorb
std
shrl
and
and
cmp
add
pop
xor
push
pop
rcrl
ret
add
lea
mov
add
int
xchg
data16
mov
loop
fs
inc
fmul
int
lahf
pop
adc
fsub
xor
add
int3
mov
insb
jg
inc
cmp
adc
mov
jo
cltd
lods
mov
pop
pusha
xchg
stos
mov
hlt
mov
mov
xadd
or
daa
cmp
adc
dec
mov
add
xchg
not
push
or
push
mov
bound
cltd
mov
pop
inc
xchg
add
mov
dec
pop
xchg
sbb
mov
xchg
push
lds
outsb
mov
loopne
and
pop
test
cmovae
cmp
nop
dec
and
inc
xor
add
pop
cmp
sbb
mov
rol
lock
cmp
mov
iret
insb
xchg
gs
arpl
je
adc
in
stos
gs
mov
outsb
sbb
bnd
or
and
ss
add
movsl
and
in
cwtl
inc
inc
insb
push
mov
cmpsl
test
movsl
xor
mov
and
jo
test
mov
movsb
pop
gs
dec
fnstenv
inc
stos
dec
sub
test
push
dec
lods
push
test
out
dec
mov
dec
sub
mov
loopne
fs
fcmove
test
mov
loop
dec
loop
or
xor
jg
pop
sbb
push
dec
mov
ret
outsl
jmp
sub
cmp
insb
adc
inc
adc
icebp
dec
repnz
incb
inc
aas
fs
shrb
scas
repz
push
dec
imul
imul
call
or
adc
jne
pop
daa
sbb
mov
adc
push
lods
cmp
icebp
test
jmp
and
stc
movsb
mov
cmovnp
push
es
lea
ds
out
inc
pop
sbb
pop
std
or
in
mov
movsl
pop
stos
lcall
mov
stos
jno
adc
cwtl
xchg
sub
inc
push
push
mov
mov
scas
push
loop
int
movl
and
gs
pop
push
sbb
inc
ja
mov
sub
ret
and
fldcw
std
das
cli
pop
in
sbb
or
andl
lods
pushfw
jbe
xlat
test
ret
pusha
rclb
inc
push
xor
mov
cmp
xchg
xchg
stc
jle
lock
dec
lret
out
orb
daa
pop
pop
pop
xchg
call
jp
sbb
into
ss
mov
lds
jl
and
adc
stc
mov
xorb
jae
cs
cmpsl
mov
inc
or
cs
cmp
sbb
loopne
repz
mov
jbe
jmp
hlt
push
jl
out
aad
cmp
hlt
adc
xor
push
and
imul
sbbl
cmpsb
and
jae
gs
data16
jbe
push
loope
test
cld
mov
mov
jns
out
nop
or
in
insl
sbb
and
xorb
mov
push
jp
jno
or
xchg
adc
stc
sbbb
and
sub
gs
add
and
stos
or
fists
add
xor
pop
cmpsl
xor
fcomps
mov
inc
xorb
pop
inc
and
decl
lods
imul
stos
imul
mov
mov
mov
add
loope
sub
mov
sarb
xor
fdivrs
je
adcl
fnstenv
inc
xchg
int3
scas
jl
mov
sub
lahf
mov
pop
fadds
mov
fidivs
ret
arpl
lods
fistps
jnp
add
pop
rdmsr
mov
push
out
leave
mov
enter
push
push
fimuls
cmpsb
jo
lret
imul
or
or
and
jae
mov
mov
jg
lea
dec
sub
sbb
dec
lea
out
movsb
in
add
stos
stos
sub
imull
push
add
and
adc
mov
into
adc
data16
adc
xor
or
lods
es
pushf
jge
pop
leave
xchg
inc
inc
dec
outsb
sbb
mov
mov
inc
cmp
in
pusha
adc
mov
jne
or
imul
fdiv
xor
fst
ret
ja
push
cmpsl
aas
or
sarl
into
adc
adc
int
adc
fisubs
sbb
adc
dec
pop
dec
jno
imul
int3
movsl
cmpsb
fs
mov
sbb
loope
mov
pop
xor
in
testl
loope
bound
hlt
xor
xor
cmp
inc
xchg
add
push
or
and
fs
hlt
cs
out
in
lods
mov
sahf
add
add
imul
inc
icebp
mov
mov
mov
fmuls
jo
xchg
loop
or
mov
pop
add
push
rcrb
out
insl
push
jg
lods
addr16
movsl
popf
pop
jge
stos
cmc
or
into
jecxz
inc
push
mov
aas
into
loope
lods
dec
leave
or
cmp
mov
enter
cmp
icebp
inc
dec
stos
nop
lahf
mov
sarb
jno
inc
add
cmpsl
mov
cmp
imul
ja
push
jecxz
pop
lahf
push
mov
jle
test
jge
xchg
cmp
cmp
bound
cmc
jl
rclb
jle
fidivl
pop
inc
js
and
pushf
add
mov
test
dec
xlat
sub
out
leave
rorl
push
sub
inc
and
sbb
xchg
sub
mov
mov
dec
mov
sbb
and
ret
fdiv
adc
jp
popf
jno
mov
mov
adcb
inc
inc
movsb
mov
mov
fcmovbe
dec
sbb
jmp
inc
inc
jo
jno
inc
dec
push
jno
xchg
ret
fstpl
push
push
push
mov
dec
mov
adc
push
out
cld
dec
icebp
push
outsb
adcl
cmp
xchg
repnz
out
cmp
test
add
mov
jmp
mov
into
cs
stc
lock
push
sti
andb
cmp
jmp
push
add
jmp
cli
sbbb
aaa
and
cli
cmc
insl
sbb
mov
xchg
sub
xor
mov
add
int
and
lods
mov
stos
lret
fadd
pop
mov
sbb
sub
pusha
or
push
ret
push
insb
mov
pop
std
pushf
aam
add
dec
or
pop
and
addl
lret
dec
xchg
xlat
push
dec
cwtl
jno
lods
nop
andb
dec
jbe
jecxz
imul
mov
dec
xchg
add
dec
out
dec
sarb
rclb
xor
jl
mov
pushf
xor
test
test
js
mov
faddl
pop
loopne
scas
and
jnp
lret
xor
mov
mov
imul
loopne
jno
sub
xchg
add
add
push
mov
ja
clc
aam
xor
dec
mov
or
dec
clc
pop
in
into
mov
in
repnz
sub
push
stc
aaa
mov
loopne
mov
mov
sbb
mov
mov
xchg
scas
mov
fstps
dec
mov
mov
xor
inc
out
xchg
push
xor
mov
xor
pop
mov
das
bnd
test
add
push
push
adc
jle
dec
cmp
cmp
daa
stos
or
mov
repz
lret
jle
inc
mov
push
jmp
mov
aaa
dec
ds
xchg
xchg
cwtl
add
out
cltd
add
pop
dec
jbe
rclb
pop
scas
cmpsl
loope
scas
cwtl
cli
xor
and
pop
xlat
inc
insb
mov
add
imul
adc
int3
pop
jge
sbb
loopne
xchg
sbb
test
jae
mov
std
cltd
ret
popf
aas
adc
pusha
and
xchg
mov
out
or
out
jbe
clc
nop
data16
mov
sub
aas
adc
sahf
mov
or
lea
push
scas
mul
outsl
outsb
in
mov
rclb
cs
jp
push
pop
cmc
dec
xchg
xor
repz
pop
inc
pop
pusha
loop
cmp
aam
pop
pusha
add
push
or
outsb
adc
lods
cmp
sub
jno
mov
int3
clc
pop
mov
stos
push
je
aas
lock
adc
cmpsb
pop
jns
cmp
push
and
inc
cltd
push
stos
aam
pop
std
fdivs
aam
push
cmc
inc
xor
adcl
enter
subb
push
popf
dec
push
movb
adc
and
add
repnz
pushf
nop
dec
push
jg
xlat
out
xchg
in
fcmovnb
je
xlat
cmpsl
aad
aas
cmp
dec
pop
sbb
jo
or
enter
xchg
popf
repnz
push
sbb
daa
popf
outsl
dec
lret
fwait
sbb
mov
pop
aam
and
shll
loopne
jge
cmpl
pop
adc
addr16
xchg
pop
pop
test
jg
xchg
xchg
shlb
outsb
mov
adc
jmp
loope
adc
mov
inc
cmp
jecxz
data16
jno
mov
xor
aam
jbe
add
push
fs
inc
in
std
jae
cmc
mov
fld
lcall
xchg
cmpsl
jo
out
or
inc
pop
and
xchg
push
jg
mov
mov
mov
sub
scas
add
mov
sahf
mov
lret
mov
mov
push
loopne
lea
cli
mov
xchg
add
inc
xchg
cmp
test
outsb
jb
adc
push
xchg
rorb
push
dec
stos
push
pop
out
pop
into
mov
jns
push
jmp
rcr
aad
xchg
xchg
xor
nop
push
adc
push
mov
jo
int
mov
jecxz
xor
jmp
mov
jae
push
and
movsl
call
scas
dec
lea
rolb
add
pop
movsl
data16
xchg
jl
test
shll
xor
sarl
push
mov
test
aad
fdivl
pop
fistpll
out
jns
clc
inc
pop
mov
xor
leave
xchg
dec
sarl
xor
lods
jge,pt
push
out
pop
jmp
adc
ss
mov
popf
dec
mov
adcl
jg
mov
shlb
push
mov
in
jg
sbb
gs
add
sbb
xor
pop
sub
das
jbe
adc
incb
push
mov
bound
lods
mov
push
cmpl
dec
jmp
leave
lahf
mov
mov
dec
pop
xchg
or
subl
test
mov
std
xchg
out
imul
cs
sbb
ljmp
pop
jge
add
add
sbb
call
dec
ret
adc
xchg
imul
outsb
stos
stc
xchg
jle
js
jbe
sbb
push
fcomps
pop
xchg
testb
jg
gs
adcl
cmp
jo
stos
dec
or
cmp
add
insb
lock
adc
mov
mov
push
rcrl
testl
dec
sub
loopne
imul
xor
aaa
jbe
pop
inc
push
push
jp
xchg
sbb
inc
fwait
lret
in
sub
testb
pop
rol
je
mov
add
jp
xchg
mov
mov
mov
js
inc
add
dec
fisttps
outsb
ret
ret
sub
sub
lods
mov
fsubl
in
shrb
loop
sbb
aad
mov
scas
fs
aam
mov
maskmovq
cmp
xor
jb
icebp
xlat
jbe
adc
xor
test
inc
lret
test
mov
and
test
fidivrs
fcompl
adc
xor
jbe
aad
sbb
push
xor
testl
addr16
xor
dec
cmp
inc
inc
or
cmp
shr
sbbb
jecxz
pop
stos
rcrl
dec
aas
cltd
cwtl
fwait
ja
cmp
pop
aaa
xor
vaddsd
mov
dec
imul
fdivrs
push
sub
shll
xor
leave
lea
pop
dec
jae
or
pop
or
cmpsb
or
xor
std
movsl
mov
push
adc
dec
int3
rolb
adc
sbb
sbb
incl
xchg
in
lods
ja
jge
enter
icebp
ret
inc
pop
xchg
movsl
dec
stc
mov
pop
shlb
pop
movsl
adc
jg
push
addr16
sbb
ljmp
jne
fisubrl
out
imul
xor
or
es
in
je
and
sbbb
movsl
icebp
flds
fbld
in
pop
int
push
lock
pushf
sbb
jl
rcrl
jle
mov
and
loopne
inc
insb
fwait
push
shr
movsb
mov
ret
pop
popa
cmc
push
jle
andb
fcmove
fcmovnb
es
int3
mov
jecxz
xor
cmp
cmpsb
lret
ss
xor
add
mov
movsb
cs
outsb
aas
lret
push
xor
cmc
lcall
rcll
lods
ficoms
xor
adc
jge
loopne
imul
and
xchg
pushl
and
push
xchg
add
xchg
cmp
dec
mov
sbb
cmpb
gs
jmp
sub
adc
sbb
in
out
call
ret
scas
stos
pop
or
sbb
sahf
js
mov
out
adc
push
sub
jge
subl
imul
test
fadds
jb
fmuls
pop
cli
and
pop
add
sub
sbb
mov
aam
mov
and
pop
out
xlat
sub
out
ret
andb
sbb
imul
push
repz
lods
mov
cwtl
xlat
adc
inc
xchg
xchg
clc
out
nop
scas
mov
in
jo
mov
mov
jae
mov
pop
cld
mov
mov
call
data16
sbb
lahf
rcl
mov
cwtl
push
rcr
cmp
outsb
std
mov
jge
sub
fimull
imul
aam
imul
lahf
or
cmpsl
sub
ficompl
popa
loope
mov
jl
mov
lock
xor
add
lahf
arpl
dec
xlat
outsl
mov
outsl
cwtl
dec
sbbl
pop
jns
sbb
xor
jnp
in
sub
inc
fwait
mov
imul
push
lahf
and
push
int
lret
inc
into
xchg
movsl
sub
js
sub
mov
mov
adc
pop
leave
or
ljmp
push
es
cs
popf
outsb
and
pushf
mov
jae
xlat
mov
and
in
cmp
adc
inc
mov
push
out
in
cmp
push
dec
mov
scas
xchg
imul
fmulp
inc
adc
fsubrp
out
out
cmpsb
lea
nop
not
jne
popf
mov
ds
dec
dec
pusha
xchg
je
aam
ss
imul
push
fidivl
lds
test
mov
cs
cltd
push
lcall
nop
jmp
push
mov
sbb
in
nop
jl
mov
mov
push
test
and
dec
fbld
mov
mov
adc
xchg
test
inc
cmpsl
outsb
movsb
xchg
rclb
xor
rcrl
out
out
and
cmc
xor
scas
cwtl
movsl
sub
cmpsb
shll
sbb
push
inc
outsl
pusha
and
xor
loope
mov
in
push
daa
mov
pop
xlat
clc
jae
mov
inc
sarb
add
and
es
sbb
xchg
jge
pop
movsb
lcall
jnp
sub
hlt
lcall
das
xlat
setle
rol
shrl
xor
push
jmp
int
and
dec
mov
and
adc
xor
outsb
inc
cmp
xor
dec
adc
loopne
fs
add
cmp
sbb
sbb
decl
movsl
mov
jbe
pop
ljmp
movsb
ljmp
dec
popf
bound
mov
push
cmp
sbb
testb
jp
jge
inc
loopne,pt
inc
dec
lret
pop
sti
adc
mov
jg
test
ja
pop
das
fcmovnu
jne
lds
lock
jp
test
movsb
dec
sub
in
mov
lods
int
jnp
test
les
jge
rcrb
mov
and
add
pop
dec
mov
or
push
sti
xlat
insb
fs
xor
sbb
inc
dec
scas
xchg
mov
sbb
ds
cmp
outsl
out
jmp
pusha
or
test
movl
rcrb
mov
aad
xor
rcl
xorb
sub
sar
daa
xchg
sbb
cwtl
scas
enter
mov
add
sahf
mov
inc
xchg
jecxz
add
dec
stos
jns
push
jb
sbb
cs
mov
or
or
rclb
jmp
cmpsl
lock
jo
jl
cmp
inc
adc
sbb
push
and
pusha
sub
xorb
mov
jp
and
into
xchg
jge
cmp
aas
div
add
cmp
ret
push
add
mov
mov
xor
sub
dec
lret
push
pop
xor
ss
sub
inc
mov
popf
cmpsl
scas
movsl
and
lcall
fsubl
push
je
insl
mov
mov
pop
mov
sub
loopne
mov
or
mov
aam
mov
fwait
fwait
xchg
scas
xor
in
pop
shr
sbb
sahf
mov
es
xchg
subl
lahf
mov
mov
mov
mov
mov
out
aad
jp
dec
iret
push
sub
or
push
aaa
out
pop
int3
mov
lods
sbb
cmc
cmp
aas
adc
aad
mov
mov
test
mov
int3
popf
jae
rcrl
data16
xchg
ss
imul
push
in
jb
fists
mov
imul
inc
adc
and
xchg
lahf
loope
inc
adc
imul
lahf
vcvtdq2ps
cmpsl
cmpsb
fistpll
cmp
or
dec
cmpsb
push
dec
pop
testb
lret
cmpsb
ja
adc
xchg
sub
popa
inc
xor
lock
aam
sub
jb
popl
and
fldcw
fdivrs
addr16
outsb
subb
and
xor
pop
add
int
dec
push
bound
push
loopne
sub
xchg
cmp
ja
leave
jmp
xor
mov
mov
enter
out
orl
push
dec
inc
push
movsl
inc
add
aas
frstor
lcall
jo
inc
xor
scas
sahf
dec
mov
jno
push
lcall
lret
and
lret
mov
cli
push
movsl
lds
les
in
mov
ret
pop
ret
push
scas
vmovshdup
lahf
hlt
dec
push
pop
sarl
adc
stos
iret
adc
push
in
repz
es
in
xor
into
pop
lods
lret
or
inc
aas
pop
loop
les
mov
call
xor
popf
pushl
mov
push
mov
sbb
cld
cmc
fld
aaa
scas
je
aad
cmpsb
xlat
jge
mov
lea
negb
mov
in
icebp
jno
insl
xor
xor
dec
cltd
or
add
sarb
jmp
shl
xchg
or
adc
dec
mov
idiv
ja
test
dec
mov
cmp
fadd
add
mov
leave
cltd
bound
adc
popf
int3
xchg
sbb
ret
out
mov
add
lods
mov
jo
aam
jo
subl
mov
ja
fistl
iret
xor
push
lahf
or
aad
cltd
mov
xlat
mov
mov
insl
es
in
int3
pop
xchg
mov
test
and
xor
hlt
mov
test
inc
clc
or
data16
ret
or
push
mov
icebp
pop
mov
movsl
adc
push
mov
xor
or
adc
mov
and
fs
in
and
dec
js
xor
notl
stos
and
sub
loop
sub
jae
jle
mov
mov
lret
add
stos
mov
and
or
push
out
std
xchg
mov
push
lea
push
imul
fisubs
popa
xchg
jg
cld
xchg
popl
cmp
sti
pop
add
or
sbb
sbb
int3
pop
push
xor
mov
adc
fistpll
cs
dec
mov
ljmp
xor
fsubrs
in
add
jle
add
sub
and
pop
jno
aad
add
mov
scas
push
imul
jmp
out
popf
leave
imul
fstpl
mov
xor
mov
rcll
test
mov
div
sub
or
mov
xchg
scas
adcl
pop
outsb
sbb
sarl
lret
leave
aaa
jg
xchg
movsl
inc
jecxz
aas
addb
stos
add
mov
and
sahf
daa
enter
ret
mov
mov
cmpsl
sub
test
jge
adc
add
jbe
pusha
test
jb
cmpsl
sbb
lock
aas
ds
cwtl
inc
fdivrs
sub
lods
mov
fsubrp
aam
subb
lcall
shlb
cmp
pop
popa
inc
adc
clc
jae
ds
lret
mov
mov
or
rorb
loope
jne
push
adc
js
mov
aad
or
cmp
or
mov
inc
stc
cmpl
pushf
jnp
lret
or
dec
push
mov
add
cmp
xorl
js
arpl
sbb
and
ret
mov
imul
mov
cwtl
push
es
push
insb
arpl
mov
clc
pop
pusha
cmp
scas
inc
cmp
in
and
and
fsubs
push
mov
jmp
xchg
outsl
add
inc
jmp
pop
jnp
mov
adc
pop
sbb
lock
insb
push
into
nop
add
mov
or
shlb
insl
sbb
mov
jae
mov
ss
imul
popa
outsb
int3
repz
sub
int
insl
push
sti
nop
sti
push
loope
xchg
mov
sbb
mov
jae
xchg
cwtl
push
sub
adc
enter
stos
jmp
loope
mov
jecxz
dec
out
out
cmpsl
xor
mov
inc
fidivrl
stos
sub
sbb
fsubrp
jne
fmul
mov
std
or
push
mov
sbb
ja
inc
jbe
lea
jg
imul
sub
pop
ljmp
jmp
hlt
and
adc
stos
xor
or
sbb
mov
cmp
push
xchg
push
xchg
lods
insb
xchg
fmuls
and
in
pop
sahf
jmp
das
sbb
rorl
xchg
adc
stos
pop
ja
fdivs
jae
and
dec
mov
sbb
cwtl
pop
pop
icebp
inc
stc
pop
imul
adc
mov
mov
jecxz
loopne
rcrl
push
imul
jae
pop
bound
inc
gs
lret
cmp
push
xor
and
sbb
out
cmp
inc
pop
mov
lahf
scas
movsl
fbld
xor
sub
loop
sub
fs
sbbb
jbe
popa
push
jo
or
mov
gs
pop
call
or
cmp
outsl
sub
aaa
in
adc
sub
mov
dec
and
dec
loopne
xor
fwait
mov
in
push
subb
es
sbbb
cltd
adc
popa
out
push
fs
sub
enter
mov
jbe
je
mov
dec
es
or
imul
ret
ljmp
push
pop
push
stos
dec
iret
insb
inc
decb
xor
scas
adc
mov
cmp
das
popf
aaa
lods
sbb
mulb
inc
or
and
xchg
push
in
cmp
clc
inc
push
int3
out
mov
movsl
loopne
sbb
je
loopne
cmpsl
and
pop
orb
mov
add
adc
gs
adc
js
push
xchg
adcb
cld
pop
aaa
fucomip
lock
daa
mov
cwtl
jle
or
adc
jnp
test
dec
aaa
mov
fstpl
cwtl
xor
adc
imul
outsb
inc
cmp
stos
sbbb
in
addb
bound
ss
addr16
jmp
fs
imul
das
fildll
hlt
pop
and
dec
imul
insl
leave
jo
sbb
sbb
sbb
lcall
push
sbb
arpl
and
inc
and
sub
inc
pop
es
or
out
in
mov
xchg
or
movsl
xor
cmpb
fldz
mov
mov
cmp
pop
cmp
ret
jl
mov
jmp
mov
imul
ja
jecxz
shll
dec
cmc
fbld
inc
mov
js
sub
xchg
enter
dec
xchg
cli
out
imul
xchg
jbe
ret
cld
mov
dec
sub
push
push
xchg
inc
shr
xor
scas
lret
pop
lds
pop
ret
aas
inc
mov
dec
or
pop
out
add
insl
cmp
test
or
mov
ud2
ret
xor
inc
into
sub
xlat
inc
lds
cmp
and
mov
and
xlat
lahf
enter
mov
test
sbb
cli
bound
pop
jbe
gs
data16
cld
pop
sbb
push
rcll
adc
cmp
push
adc
in
enter
lods
aaa
mov
mov
repz
cmp
dec
lock
mov
adc
sub
sahf
push
adc
std
movsb
cmp
add
stc
shll
cld
dec
mov
add
cwtl
lods
sbb
and
mov
popa
mov
stos
f2xm1
aas
sub
dec
lahf
dec
sahf
pop
loope
test
cmp
push
jg
sahf
xor
mov
mov
cmc
mov
cmpsb
pop
inc
cmp
nop
and
xchg
loopne
mov
into
push
push
test
addr16
mov
les
sub
adc
ret
scas
inc
lds
pop
xchg
iret
dec
mov
and
lahf
movsl
mov
add
gs
test
icebp
icebp
in
inc
lahf
mov
data16
clc
add
push
xor
popf
cmp
mov
lahf
mov
scas
stos
and
ret
sbb
jne
mov
fstps
cwtl
mov
fidivrs
jp
int
fs
maxps
sbb
pop
mov
push
cs
pop
movsb
adc
add
jns
mov
movb
adc
lea
into
out
inc
gs
cmp
cmp
test
mov
lea
mov
push
xchg
pop
addb
jae
pusha
xchg
adc
imul
insb
rorb
sbb
mov
js
mov
push
push
sbb
jmp
out
lea
inc
xchg
sbb
push
gs
dec
and
divl
or
push
sbb
in
scas
adc
stos
ds
rorl
imul
in
daa
decl
sbb
leave
jmp
lds
sbb
stc
jbe
dec
out
mov
mov
fisttpll
xchg
jbe
push
jmp
loopne
and
jae
loop
push
lret
and
inc
jnp
mov
lock
pusha
stos
lods
inc
test
cmp
xchg
cmp
dec
xchg
leave
cmpsb
fcmovnb
std
es
into
mov
xor
mov
loopne
shll
push
enter
xor
or
addb
pop
movsl
sub
jmp
je
or
iret
data16
fdivr
push
cmpsl
mov
pop
mov
lret
cmpsb
in
xor
inc
adc
xor
mov
test
sbb
aad
popf
cmp
repz
shrb
push
and
mov
dec
add
in
pushf
mov
xchg
sbb
push
push
mov
out
pop
notl
cmp
mov
roll
aaa
xchg
mov
push
popa
rorb
mov
pop
lods
xor
pop
pushf
imul
pop
and
adcb
test
sub
test
aas
movsl
push
sub
xchg
mov
push
xchg
pop
fldt
lods
mov
push
shll
addr16
mov
sub
mov
scas
adc
stc
jo
frstor
aam
std
cli
push
xor
or
leave
cmp
shlb
xor
andl
cmp
or
ja
cli
clc
mov
mov
inc
test
or
adc
pusha
lahf
dec
jns
pop
push
inc
cmp
mov
xchg
in
sub
arpl
cmp
sub
pop
in
pop
jno
push
add
jae
sti
jmp
lahf
sub
pusha
sbb
insl
inc
mov
test
push
lods
inc
ja
add
pop
jl
mov
add
xchg
sub
cld
movsb
movsb
andb
mov
and
push
insb
or
sbbb
sub
mov
pusha
mov
push
push
scas
xchg
mov
les
push
dec
cmp
les
push
ja
or
sbb
lret
fwait
out
ficomps
cltd
mov
sbb
jo
pop
dec
dec
in
out
sbbb
jmp
mov
push
fldt
out
or
icebp
std
daa
mov
rclb
xchg
push
mov
dec
leave
gs
sub
rcrl
cmpsl
fidivs
stos
das
lods
scas
lret
mov
add
jp
popf
adc
adc
stos
inc
cld
cmc
out
push
and
cmp
jp
data16
mov
inc
test
stos
push
loopne
cs
cmpsb
pop
xor
sbb
repnz
add
sti
ficomps
shl
leave
xchg
inc
inc
mov
pop
cmp
rcrl
addl
sbb
or
sbb
pushf
cwtl
scas
push
shlb
clc
into
imul
loopne
jo
pusha
jecxz
mov
fsubl
or
mov
push
mov
xorb
cltd
push
pop
cmp
push
mov
sbb
inc
fistpll
cmp
popa
pop
stc
dec
pusha
cmp
cmp
lret
dec
mov
mov
scas
shll
out
mov
fiadds
icebp
aaa
mov
pop
lock
std
in
das
mov
jb
mov
ja
std
nop
cmpsl
sub
mov
inc
js
jmp
pop
xor
imul
andb
sahf
sbb
xlat
mov
cmp
out
jge
and
out
loop
pop
jle
dec
lea
pop
and
mov
adc
fmuls
and
adc
mov
cmp
repnz
mov
test
cld
bound
inc
movsb
fiadds
pop
call
sbb
pop
cwtl
push
dec
mul
ss
lahf
loopne
pop
insl
push
sbb
pop
loop
cmp
iret
push
xchg
clc
test
pop
test
rorl
push
cmp
in
in
mov
ljmp
mov
add
mov
loope
cmp
sbb
jge
and
dec
iret
insl
jbe
cmp
pop
mov
xlat
inc
or
mov
lock
mov
insb
jg
pop
jmp
inc
or
ds
in
xor
mov
mov
pop
das
insl
adc
rcr
pop
and
mov
push
pop
std
dec
vandnpd
inc
lods
xor
pop
sbb
popf
push
rcrl
lods
adc
xor
mov
sbb
push
lds
add
inc
or
js
mov
add
pop
inc
jb
push
lds
mov
pop
cmp
and
inc
addl
mov
inc
xor
mov
xlat
pop
mov
and
xor
xorl
das
add
cld
mov
mov
adc
mov
push
cmp
fstps
dec
test
addl
movsl
pop
cltd
inc
sub
lcall
insl
xchg
mov
hlt
pop
mov
sti
fs
shll
push
mov
inc
mov
add
mov
cmp
mov
loopne
dec
loopne
push
xchg
adc
mov
into
ret
pusha
sbb
imul
int
xor
aaa
lock
pop
push
mov
adc
xorb
pushf
mov
icebp
cmp
scas
loop
xor
cli
out
pop
sub
and
adc
pop
ret
divl
lea
stc
jle
inc
dec
adc
popa
fs
stos
test
sub
adc
loope
aad
jl
and
sbb
mov
xchg
sub
xchg
xchg
sub
test
repz
cmp
std
cmp
add
cmp
mov
lods
testb
adc
jbe
xor
idivb
iret
sbb
cli
pop
mov
cmc
mov
push
cwtl
lret
cmp
or
dec
clc
pop
cmc
fldl
and
rolb
lret
loopne
push
pop
insl
mov
pop
inc
jo
adc
xor
fwait
inc
mov
sti
fists
daa
adc
out
mov
push
imul
popa
shll
push
mov
outsl
and
adc
ds
sub
movsl
pushf
cld
dec
imull
lock
push
jecxz
ljmp
and
test
sahf
inc
cmp
rcl
or
xchg
xchg
sub
mov
pop
sub
jecxz
dec
js
mov
mov
or
add
jbe
jmp
jnp
lods
mov
imul
sbbl
out
xchg
loop
sbb
cmpsl
popf
cmpsl
and
hlt
dec
pop
and
sahf
rorl
inc
inc
xor
push
stos
jno
leave
lahf
test
inc
scas
aas
mov
pushf
arpl
push
jbe
ret
test
dec
inc
lods
mov
out
xchg
inc
jns
or
push
bound
or
les
inc
jbe
ret
shl
bound
xchg
aad
xchg
fcoml
xorb
or
scas
in
subl
ljmp
test
gs
addr16
mov
movsb
jo
das
mov
fcomps
aam
enter
xor
mov
mov
xlat
movsl
dec
fisttpl
loop
and
shrb
jle
ret
sti
pop
test
push
dec
push
dec
xlat
frstor
jno
mov
push
nop
stc
scas
fst
ficoml
mov
orl
and
dec
mov
mov
mov
loopne
std
mov
aam
pop
or
repnz
bound
mov
sub
xor
push
addr16
pushf
cmpsl
xchg
mov
jnp
divl
xchg
jmp
jl
cmp
mov
add
push
daa
inc
sarl
inc
and
mov
pop
inc
lods
shll
in
mov
out
stos
iret
adc
sbb
popf
xor
jnp
pop
sub
test
lods
inc
gs
int
xchg
pop
inc
mov
lods
or
aaa
xchg
fsubl
insl
jne
push
xlat
out
mov
xchg
jne
shrb
imul
gs
in
sbb
fldcw
in
out
out
ror
or
sub
push
push
dec
out
jo
imul
xchg
stc
mov
push
add
sub
push
push
cmp
hlt
ret
dec
imulb
sub
mov
test
sbb
sbb
fs
mov
testl
mov
jnp
mov
sbb
or
push
push
sbb
mov
or
mov
mov
sbb
or
enter
sti
adc
mov
jmp
lods
sar
jecxz
jnp
pop
push
push
lcall
mov
roll
sbb
xor
dec
push
jmp
lds
xchg
cmp
pop
cld
pop
popf
sbb
mov
sbb
bound
mov
imul
dec
cld
lds
je
in
sbb
mov
js
fmuls
fwait
int
push
adc
sbb
xchg
pop
test
hlt
fabs
dec
mov
and
pop
rolb
sbb
adc
mov
sbb
loopne
aaa
adc
push
cmp
dec
sahf
inc
or
mov
das
imul
mov
dec
popf
xchg
cmp
pushf
xlat
pusha
adc
and
inc
push
int
in
or
shrb
orl
sbb
sti
xor
sub
xor
adc
fwait
das
cmp
adc
addr16
xchg
xchg
add
inc
or
pop
add
dec
loope
pop
cmpsb
sub
into
fs
cwtl
icebp
ss
sub
fnsave
add
or
mull
jp
clc
arpl
mov
pop
inc
xor
pop
repnz
loope
and
inc
pop
dec
scas
jge
rcrb
mov
test
xchg
jae
jmp
lret
sbb
jge
add
repz
sbb
mov
and
pushf
testl
out
iret
jbe
sub
cwtl
pop
inc
push
push
dec
mov
push
push
mov
push
fiadds
inc
stc
fisubs
adc
mov
aas
mov
popf
and
xchg
mov
or
cmc
ret
daa
sub
or
mov
sub
pusha
aaa
inc
push
sbb
lcall
jmp
sbbb
xor
or
inc
push
mov
fwait
or
out
in
mov
add
jns
add
aam
push
out
mov
jnp
nop
lcall
or
out
and
andb
in
sub
push
out
nop
lcall
into
mov
or
xchg
je
arpl
pop
mov
pop
ret
rcrl
cli
out
insb
xchg
enter
lds
mov
enter
pop
iret
insl
out
adc
cmp
scas
add
xor
in
add
fsubr
popa
mov
inc
mov
and
push
inc
imul
dec
sub
dec
mov
and
mov
in
sub
imul
push
out
mov
or
outsl
push
cltd
lea
adc
xor
roll
adcl
cmp
jnp
pushf
enter
add
fldt
int3
cwtl
cmp
sar
repz
inc
mov
dec
movsl
mov
mov
pause
repz
mov
pop
movb
aam
or
repz
test
adc
adc
hlt
mov
mov
shll
push
repz
or
fwait
add
fcmovbe
xor
dec
mov
adc
mov
xor
jmp
push
and
push
add
idivb
adc
push
mov
fists
and
jmp
push
in
mov
or
cmp
jle
mov
mov
adc
add
adc
add
aad
rcr
fwait
push
cmpsl
daa
mov
cmc
iret
mov
and
adc
cs
xor
lds
mov
in
cmpsb
into
jecxz
lods
jae
imul
xchg
js
lock
ss
jns
test
cmp
xchg
out
in
not
sbb
ja
ss
inc
popa
push
sub
jmp
bound
adc
dec
cltd
lahf
scas
mov
fwait
aas
inc
adc
cltd
push
jecxz
xchg
adc
lea
jo
pop
and
mov
and
aas
in
push
cmp
insl
mov
push
xchg
push
out
imulb
xor
xorb
pop
xchg
insb
pop
xchg
pop
shll
aam
repnz
daa
int
loopne
mov
push
lret
add
pusha
dec
dec
ss
dec
scas
sbbl
xchg
inc
jo
and
cmp
dec
hlt
lea
and
push
jno
cmp
int
cltd
mov
mov
or
add
inc
insb
push
arpl
jge
jecxz
or
pop
jo
sbb
sbb
xchg
jae
pop
repnz
add
test
dec
or
shll
int3
sbb
les
push
pop
pop
lods
aaa
push
mov
sbb
adc
dec
add
icebp
loopne
mov
icebp
iret
mov
push
fimull
sub
lcall
jnp
xlat
xchg
jge
xchg
mov
sub
in
inc
jno
sbb
insb
push
xchg
xchg
pop
xor
jge
fistps
call
cmp
cmp
aaa
mov
push
ret
or
pop
xchg
jo
cmp
mov
cmp
xchg
cmp
mov
push
or
mov
repz
dec
pop
push
popf
xchg
popa
jecxz
sub
xchg
xchg
dec
push
dec
fadds
jp
ret
bound
push
test
jl
divb
mov
pop
out
leave
flds
clc
orb
jp
inc
jle
cwtl
xchg
addl
jae
popa
test
je
data16
movsb
ret
pusha
popa
jg
mov
xlat
shlb
add
jns
es
dec
lods
test
mov
cmp
sbb
rclb
add
sbb
popaw
lcall
ljmp
jl
in
xor
and
dec
xor
xchg
loop
jecxz
pop
add
pop
push
mov
cmp
push
jg
and
adc
popf
loope
cltd
dec
sbb
into
pop
outsb
mov
cmp
jne
cmp
lods
fsubr
cmc
test
dec
fstpt
ss
adc
test
and
insl
push
lahf
sarl
lods
and
mov
subb
rcll
mov
in
mov
or
arpl
mov
loope
sbb
dec
iret
cmp
xor
in
xor
loopne
inc
or
cmp
pop
or
push
mov
xchg
push
dec
mov
imul
test
sbb
jle
fildl
std
ds
sbb
sti
mov
cmpb
mov
cmovge
sub
push
inc
gs
loop
jecxz
repnz
movsb
fs
jb
jae
mov
cld
push
in
cmp
ds
xchg
addr16
pop
sbb
shlb
ja
addr16
popa
daa
idiv
mov
ja
lods
fxch
or
mov
sub
and
cmp
inc
inc
push
and
dec
jl
sarb
adc
pop
decb
inc
mov
lcall
sbb
sbb
daa
into
lock
push
rolb
ret
inc
pushf
test
fwait
lret
lock
xchg
xor
xchg
jl
add
scas
call
cmp
and
aam
lea
cs
leave
ror
pop
sbb
fwait
jno
mov
orl
addr16
pop
ss
rol
les
js
sbb
repz
cld
stos
dec
adc
xor
mov
pop
dec
outsl
and
mov
xor
sub
popf
fwait
outsb
pop
in
sbb
sbb
pushf
sub
adc
sbbb
xchg
pop
stos
ljmp
lcall
mov
jg
dec
fsubrp
bound
lock
test
in
dec
aas
lcall
inc
pop
addr16
add
aad
call
sub
jae
ja
push
out
rclb
push
fnstcw
pop
imulb
push
outsl
mov
xor
pop
adc
inc
adc
sbb
pop
push
xor
lret
xchg
jecxz
dec
pop
or
pop
stos
lock
add
sub
cmc
inc
mov
adc
orl
iret
enter
xchg
push
aad
lret
insb
jl
cmpsb
fiaddl
push
lret
daa
jmp
pop
dec
cmp
push
insb
bound
mov
loope
sub
and
dec
mov
scas
inc
imul
add
sub
jno
out
repnz
pop
mov
add
inc
scas
imul
xor
jl
pop
cmp
pushf
and
xor
mov
mov
push
jo
into
jbe
push
call
adc
cmpsb
outsl
aad
mov
xor
pop
adc
cmp
inc
mov
xor
out
in
int
push
cltd
pop
mov
xchg
je
sbb
dec
inc
ds
adc
mov
ds
outsb
xor
loopne
adc
jns
sarl
jbe
push
repnz
enter
sti
cltd
scas
mov
push
sub
jg
in
loop
popf
dec
adc
push
movsb
aam
jne
lahf
leave
loopne
dec
jo
aam
lods
cmc
int
ljmp
sbb
mov
push
lret
into
sti
mov
adc
lea
add
mov
mov
xchg
fldcw
cmpsl
mov
push
sbb
mov
dec
or
sub
test
mov
adc
out
fwait
pop
imul
out
jg
std
cmpl
aam
adc
mov
inc
adcl
push
add
inc
lock
fldt
push
in
push
pop
into
xchg
inc
pop
and
sbb
xchg
aad
dec
pusha
jge
dec
fimuls
iret
repnz
cmp
sbbl
jp
mov
mov
cmp
stos
loope
pop
decb
lods
mov
cmp
jg
mov
movsb
fsubp
gs
mov
push
sahf
js
cmp
gs
xchg
lods
out
nop
jnp
push
inc
jp
adc
in
mov
dec
mulb
fcmovne
jle
orb
jnp
test
mov
ds
push
loopne
nop
jmp
and
or
in
sbb
imul
popa
or
sahf
inc
xor
iret
insb
mov
mov
pop
sub
js
mov
or
sbb
enter
add
test
vmovlpd
and
insb
js
inc
ficoms
ds
fwait
int3
add
les
repnz
mov
sub
nop
loop
call
cmp
int
faddl
cmpsl
and
sbb
pop
pop
je
lahf
xchg
sbb
xchg
xchg
int
jp
sub
les
cmp
adc
popf
pop
rcr
jg
xor
inc
lahf
movsl
cld
pop
fstpt
dec
out
mov
add
add
pop
ficoms
pop
sub
sbb
inc
sub
inc
push
fcmovu
leave
into
sub
inc
xchg
int3
mov
out
cltd
push
addr16
shrb
orw
cs
lds
lock
stos
loop
sahf
xchg
shrl
jl
dec
mov
inc
insb
pop
addr16
lret
dec
xchg
in
inc
push
inc
int3
xor
std
lea
push
add
inc
mov
fsubrp
mov
sar
popf
lahf
cmp
shll
mov
pop
and
sahf
addr16
iret
in
jecxz
sarl
jp
icebp
jne
sbb
add
les
movsb
dec
mov
stos
popf
xchg
fwait
sub
push
mov
iret
inc
jl
xlat
add
sbbl
pop
mov
push
rcll
cwtl
push
adc
jb
ja
pop
and
repnz
inc
pop
in
jo
lods
sub
pop
int
cmc
mov
mov
push
dec
xchg
add
dec
xchg
out
js
jns
rcrb
mov
arpl
jae
cmp
cmp
push
and
lret
or
mov
xchg
leave
cmpsb
xlat
adc
mov
lcall
push
shlb
enter
mov
push
pushf
scas
mov
and
dec
pushf
xchg
inc
mov
adc
js
adc
addr16
or
das
out
sub
xchg
loopne
sub
pop
cmp
frstor
insb
fwait
les
std
adc
mov
push
sub
orl
mov
and
movsl
test
leave
aam
outsl
movsl
movsl
lods
lahf
sarl
imul
adc
add
lea
sub
sub
out
mov
ret
xchg
shlb
sub
cmc
jmp
dec
xchg
popf
add
sub
sub
mov
jns
andl
sahf
outsb
cmp
sub
jmp
imull
data16
jnp
push
inc
and
mov
aaa
add
push
sbbb
mov
insl
cmp
fs
mov
jno
test
xor
sbb
sub
mov
pop
clc
lea
xchg
lock
jmp
addr16
cwtl
out
cmp
mov
mov
lods
xor
mov
fs
lcall
jle,pn
xchg
nop
repz
and
stos
jbe
mov
mov
jge
test
out
mov
subl
mov
or
pop
adc
xchg
pop
xor
mov
mov
pop
mov
pop
mov
sub
ds
mov
cs
lcall
movsb
jmp
stos
dec
sbb
add
stc
xchg
jbe
push
add
call
call
insb
test
pop
and
in
daa
mul
jl
ljmp
mov
cmp
ljmp
imul
fisubrl
jle
fs
mov
enter
and
lods
cmp
andb
mov
sub
mov
xor
pusha
cs
movsb
mov
jle
lret
aas
mov
dec
pop
jb
in
add
mov
je
insl
mov
jbe
shll
fwait
or
mov
push
lods
lods
mov
push
pop
loopne
xchg
mov
mov
pusha
ret
hlt
bound
lea
bnd
xor
pop
jns
sbb
mov
xor
sbb
scas
mov
sbb
or
push
xchg
mov
jmp
mov
out
push
sti
pop
idivb
ljmp
ds
pop
pop
dec
jns
mov
mov
in
addl
mov
lock
mov
dec
mov
fists
pop
repz
mov
fnstsw
ret
xchg
mov
jl
ss
cwtl
xor
test
pop
xchg
fwait
movl
dec
jmp
addl
ror
test
scas
cmp
cltd
xor
pop
in
dec
dec
ljmp
inc
push
jns
push
std
lahf
cli
in
aas
cmpsl
push
push
fisubl
push
cltd
pop
dec
mov
loopne
std
pusha
loope
pop
lds
sbb
mov
mov
jge
add
mov
and
ja
loope
cmc
movsb
stos
lods
fs
jecxz
insl
dec
mov
and
xorl
lahf
push
adc
mov
cmp
icebp
or
and
jmp
enter
mov
cmpl
sbb
fs
push
ja
jge
ja
push
dec
sarl
and
fnsave
iret
add
inc
xchg
jb
imul
mov
add
cltd
aam
aam
call
jbe
jl
in
mov
push
repz
gs
push
test
mov
mov
cmp
add
mov
jl
into
je
ljmp
jb
push
sarl
mov
or
out
cmp
cmp
xor
aam
int
dec
mov
fldcw
xchg
sub
xor
rclb
sub
sarl
push
sbb
fwait
dec
popa
js
cwtl
lcall
adc
mov
mov
mov
outsb
and
xchg
mov
ds
jge
or
ja
out
jp
icebp
fidivs
aam
xchg
cltd
inc
loope
les
lcall
sbb
inc
add
add
adc
pushl
out
or
dec
xchg
mov
jle
inc
ret
mov
lock
ret
in
sti
mov
jge
mov
adc
orb
lcall
mov
mov
sub
mov
jb
cmpsl
subl
aam
pop
adc
xor
mov
fmul
nop
imul
lret
pop
insl
cltd
xchg
icebp
repz
add
repnz
daa
cmp
inc
mov
cmpb
mov
shrb
pop
insl
cmpsb
add
addl
pop
push
xor
jp
xlat
push
addb
ret
lret
fstpt
jne
stos
mov
push
ror
pop
pushf
fwait
daa
pop
mov
dec
xchg
rolb
push
cmp
jno
pop
pop
and
push
push
enter
inc
or
clc
test
xchg
scas
lret
test
mov
es
loop
stos
cmp
rcrb
pop
mov
call
dec
sub
fdiv
fisttpll
push
icebp
out
insl
xchg
hlt
cmp
pop
sub
add
push
fnsave
addb
dec
and
mov
sub
pusha
lods
push
add
mov
stos
loop
lock
sub
nop
call
cmpsb
mov
in
push
sub
ss
xchg
xor
lods
or
dec
push
jbe
mov
fwait
mov
mov
add
push
lret
dec
xchg
sahf
repz
clc
jl
xor
adcb
insl
sbb
xchg
fidivl
push
sub
out
sbb
lds
xchg
or
leave
or
ret
inc
lret
pop
in
jns
out
adc
pop
fwait
xor
cmp
outsb
jae
and
cs
sbb
fcoms
inc
and
lahf
mov
mov
cld
repnz
outsb
or
xchg
jmp
dec
push
lahf
int3
add
xor
sbb
cld
in
repz
aaa
fists
or
aam
mov
sbb
movl
in
out
or
mov
fsubrp
mov
sbb
pop
addb
xor
inc
outsl
dec
js
push
adc
xor
xchg
daa
add
mov
scas
xchg
cmp
fmul
jb
pop
xchg
repnz
jl
mov
movl
mov
pop
cmp
xorl
std
xor
push
je
pushf
lods
test
inc
pushf
cmp
adc
inc
cmp
add
adc
inc
clc
add
and
rcrb
xor
test
out
into
mov
stc
jbe
loop
jnp
fbld
jnp
xor
xchg
cmp
inc
push
aaa
inc
dec
cwtl
fwait
adc
mov
mov
std
jmp
fcoms
mov
aad
add
stc
pop
enter
pop
addb
cmpsl
mov
xorb
push
mov
mov
fwait
rcrb
adcl
and
mull
sub
and
xlat
dec
jge
fsubrl
sbbb
sbb
testb
and
rorl
pop
es
add
iret
sbb
fdivp
ror
add
cld
sahf
mov
cwtl
incb
mov
insb
jge
inc
mov
xor
into
jbe
dec
pop
sbb
xchg
adc
mov
cmp
imul
pop
mov
cmp
sub
ficoms
insb
lcall
mov
add
movsb
aad
imulb
inc
rclb
jle
test
cltd
cltd
pop
jae
adc
adc
daa
sahf
ret
cmc
add
push
xor
fstpl
pop
iret
in
ret
in
jno
and
stc
push
in
ret
add
cmp
cwtl
fstl
and
lods
out
pop
orl
into
add
inc
test
leave
add
xor
das
push
out
sbb
enter
orb
sbb
iret
mov
mov
xchg
fidivl
adc
xchg
rcrl
sub
adc
iret
mov
daa
ss
add
adc
push
negl
mov
rclb
cmpb
and
lods
scas
lock
xor
js
fldcw
jp
jns
ss
imul
ror
sub
xchg
rcrl
dec
xlat
dec
inc
mov
mov
xorl
repnz
xor
jp
int
cltd
jo,pn
mov
into
jge
bound
leave
fsub
lahf
lock
pop
xchg
and
scas
dec
add
jp
insl
push
mov
pop
fwait
cltd
neg
lret
aaa
jnp
cmc
inc
sub
mov
ror
dec
cli
int
cmp
roll
push
mov
shl
aas
xchg
pop
jmp
ret
lea
or
pop
sub
and
ss
inc
fcomp
push
mov
mov
mov
mov
inc
dec
std
int
push
or
xor
dec
icebp
or
jp
sbb
jle
loopne
les
loopne
lock
inc
das
bound
add
movsb
pop
sbb
pop
mov
cwtl
sarl
adc
loopne
xorl
mov
out
addb
rcrl
pop
shll
sub
mov
loopne
inc
mull
enter
dec
in
xor
jg
insb
insl
cli
jl
adc
inc
adc
cmp
push
das
nop
mov
cli
ficoms
rclb
add
xor
sub
in
aaa
push
push
fistpll
add
lahf
dec
xchg
sub
lret
push
sub
sub
lret
cmp
popa
idivb
sahf
into
jl
dec
daa
mulps
add
popf
push
sbb
pop
stos
push
push
jo
and
xchg
push
iret
or
push
leave
sbbl
scas
loopne
dec
loopne
in
inc
sti
xchg
xor
or
push
pop
pop
test
xchg
xchg
leave
xor
lahf
jg
inc
loop
sbb
adc
dec
cs
enter
out
or
in
sbb
rcrl
mov
mov
cmp
lods
movntq
out
adcb
or
and
adc
mov
clc
inc
test
std
mov
scas
fcmovnbe
test
mov
enter
pop
addb
adc
mov
sar
push
fst
pop
stos
adc
or
sub
fs
les
divl
pop
mov
enter
popf
jb
rcrl
iret
pop
push
and
xchg
shl
rol
int3
or
dec
mov
pop
test
adc
pop
cwtl
lret
icebp
pop
fwait
xor
or
xchg
mov
dec
or
and
clc
lock
push
cmc
cli
daa
cmc
fcomi
adc
movsl
pop
mov
lret
hlt
mov
add
pop
and
repz
call
fisttpll
jmp
jnp
subb
mov
mov
ret
jbe
stc
sbb
ljmp
add
aaa
sbb
insb
jmp
test
aaa
imul
arpl
jg
outsb
negl
or
add
cmpsl
fs
enter
sbb
jle
insl
push
adc
ret
in
push
movsb
mov
mov
gs
xchg
sub
adc
mov
cmc
add
ror
pop
shl
sbb
push
cltd
and
in
in
imul
push
jge
add
cmp
and
push
lret
pop
cmp
pop
mov
add
and
aam
cmpsl
inc
ljmp
sbb
mov
mov
leave
pop
ret
lret
cmpb
fimull
in
jle
jp
jae
pop
movsb
mov
adc
lods
jno
int
arpl
jae
ss
pop
adc
cmp
inc
xchg
mov
sti
xor
insb
pop
je
sarl
or
adcb
push
icebp
or
pusha
fs
jbe
push
jge
push
mov
inc
mov
pop
or
jae
out
mov
jg
pop
in
mov
xlat
pop
incb
cmpsl
dec
out
jge
and
pop
pop
mov
test
push
nop
push
adc
imul
pop
jb
test
mov
incb
inc
je
mov
jbe
push
lods
mov
dec
testl
outsb
add
mov
jmp
shll
or
sbb
xor
or
mov
add
xchg
inc
out
lock
and
sub
push
pop
ret
push
lods
jae
sti
test
cmpsb
dec
add
out
imul
hlt
aam
and
mov
push
cmp
and
or
fwait
sbb
cmp
pop
xor
or
movsb
inc
jnp
scas
je
jle
mov
cmc
test
insb
insl
repz
add
xlat
pusha
push
inc
add
xchg
mov
sub
pop
and
ror
adc
mov
jns
stos
je
inc
sar
mov
aad
arpl
pop
fcoml
mov
ja
mov
clc
dec
pop
addr16
adcl
xchg
mov
aam
ret
stos
popa
mov
inc
xor
cmp
ficomps
add
scas
cmpsl
push
push
aam
in
xchg
cmp
push
mov
fdivl
jnp
dec
arpl
scas
sbb
or
add
cs
les
jae
popf
xorl
adc
ja
or
test
xchg
cmp
in
and
cmc
push
imul
xor
mov
or
leave
les
iret
call
jecxz
cmp
cmp
mov
lock
out
popf
dec
cmc
fidivrs
ret
inc
xchg
repz
std
test
popf
push
xchg
ja
loope
lahf
fwait
cwtl
pop
or
push
push
xor
es
xchg
xchg
mov
add
fildl
push
push
jmp
js
pop
ficomps
clc
push
notb
clc
lock
mov
sbb
enter
inc
aad
sub
in
mov
repz
mov
adcl
adc
mov
push
movsb
fadd
shl
jbe
mov
pop
mov
scas
xchg
add
xlat
scas
ss
mov
jmp
push
lods
test
loope
adc
adc
sbb
mov
aaa
fdivl
out
ja
leave
out
pop
add
mov
dec
add
jb
push
cs
lds
out
and
fistpl
mov
popf
jmp
and
loopne
sbb
cld
or
jno
ljmp
lret
into
imul
jge
pop
int
js
or
stos
push
test
pop
es
pop
xchg
xor
aaa
iret
outsb
push
insl
sub
and
test
push
xchg
push
jb
js
in
pop
and
adc
cmp
hlt
orb
mov
repz
cmp
adc
scas
xlat
lea
insl
cmp
inc
pop
lahf
dec
cwtl
jl
adc
aam
lret
cmp
jno
mov
inc
fs
xor
sbb
mov
push
sbb
pop
mov
jmp
popf
addr16
rol
lods
cmpsl
xchg
and
js
mov
mov
iret
in
sub
xchg
je
lcall
outsl
ljmp
jmp
sahf
mov
ljmp
xlat
mov
aad
iret
pop
enter
ret
fmull
lret
lret
push
shll
clc
pop
in
stc
lock
or
insb
icebp
ds
jne
cs
jg
int
jbe
movsb
mov
ret
fstl
roll
xchg
jle
cmp
and
lret
mov
arpl
pop
mov
sbb
inc
movsl
mov
ds
xchg
pop
inc
cmpsb
pop
cwtl
and
movsb
or
mov
pop
jnp
xchg
and
stos
leave
mov
pop
mov
sub
icebp
or
mov
mov
icebp
pop
add
insb
xchg
push
lea
dec
jle
hlt
jnp
jne
add
into
cmp
sbb
divb
inc
push
add
fwait
incb
lcall
dec
insl
push
mov
sub
xor
cld
jecxz
push
clc
cmc
jno
shrb
add
out
ljmp
sub
jp
test
test
dec
inc
les
push
inc
jecxz
and
roll
jecxz
mulb
fldt
test
sbb
in
add
adc
sbb
cmp
pop
xor
or
divl
jecxz
jle
xchg
xchg
mov
ljmp
adc
mov
and
jmp
in
sub
ja
std
dec
les
pop
ja
push
push
mov
jmp
add
loop
mov
sti
push
or
push
outsb
mov
call
inc
lods
mov
test
int
dec
mov
clc
adc
outsl
jo
icebp
in
test
ss
pop
push
inc
into
jg
das
inc
test
lahf
loop
xchg
cltd
jl
stos
mov
xor
pop
test
dec
push
notb
fisttps
or
imul
jecxz
into
inc
or
adc
adc
int3
xchg
xchg
popa
and
shld
insb
js
add
repz
mov
ficomps
jno
pop
inc
loop
and
subb
inc
jns
xchg
xchg
aam
mov
or
movsl
cmpsl
and
xor
daa
int
mov
xchg
sahf
movsb
pusha
jmp
add
test
mov
add
jns
and
popf
jl
negb
mov
push
xor
sub
das
shl
out
movsb
jnp
lret
out
adc
insl
jns
ret
lea
and
dec
jne
adcl
mov
hlt
cmp
jp
mov
in
pop
pop
fnstcw
lahf
outsb
adc
loopne
sti
mov
and
fisttps
mov
push
sub
jne
push
pop
jo
in
icebp
pop
ret
call
cmpsl
sti
jg
jo
jo
fisttps
fstps
adcb
fwait
lahf
movsl
test
test
shll
stc
push
xchg
or
ds
call
leave
xchg
outsl
stc
mov
repz
arpl
cmp
jb
fnsetpm(287
sbb
idiv
daa
in
adc
xor
mov
aam
dec
popa
shll
cmpsl
and
sub
in
jge
dec
or
push
mov
mov
pop
adc
imulb
jp
add
xor
sub
adc
mov
and
inc
xchg
fwait
mov
jle
add
sbb
add
imul
mov
mov
dec
xchg
das
mov
push
fsts
dec
out
test
adc
pusha
lcall
pop
addr16
ja
dec
cmp
sub
insl
sub
fsts
pop
mov
push
nop
sub
jmp
xchg
loope
cld
mov
cs
jnp
mov
lods
lret
and
inc
repnz
je
aas
xor
jae
cmp
pop
xchg
dec
negl
into
adc
sbb
xor
cmp
pop
push
stos
cmpsl
push
mov
pop
jnp
stos
lret
and
mov
jns
mov
rcl
cmp
mov
jmp
imul
xor
push
dec
mov
int3
movsl
pop
arpl
sbb
pop
lret
xchg
pop
xor
andb
lcall
ret
dec
mov
pushw
int3
gs
mov
sahf
or
fistps
cmpsl
sub
sarl
pop
mov
in
out
mov
or
sub
xor
leave
add
es
out
push
aaa
fidivs
gs
ret
and
or
dec
ds
loop
cmp
popf
mov
ja
loopne
xchg
std
xor
jnp
mov
adc
imul
and
jnp
negl
dec
stos
aaa
lods
cmp
dec
test
add
sbb
cltd
jae
push
mov
inc
les
push
pop
pop
mov
jg
xchg
mov
ja
add
loop
in
out
add
ss
jb
pop
in
add
lret
aas
push
lret
mov
push
stos
jg
int3
data16
jp
cmp
mov
jl
xor
fisubrs
pop
les
out
addb
jne
pop
fsubl
xlat
loopne
cmp
dec
test
pop
cltd
int3
or
inc
sub
xchg
and
jns
xchg
sbb
and
jp
mov
xor
cld
into
pop
cmp
or
stos
dec
aas
cmp
dec
pop
mov
push
repz
push
adc
jnp
popa
mov
pop
test
fstpl
mov
fdivrs
cmpsl
jmp
sbb
xor
or
push
xorl
loope
cs
push
call
sub
fbld
xchg
cmpsl
leave
retw
or
inc
imul
inc
in
cmp
mov
imul
insb
xchg
shrl
or
orl
mov
call
stos
cmp
popf
pop
jecxz
xchg
call
jle
dec
lret
fidivrs
pop
popf
or
mov
fs
pusha
mov
fs
xor
cwtl
daa
jne
add
cmp
push
lcall
inc
push
inc
or
mov
mov
dec
and
push
mov
xchg
nop
aas
dec
scas
test
std
cs
rcll
xor
push
mov
pop
push
mov
xor
dec
jg
fcoml
out
lret
icebp
mov
xor
movsl
int3
fistps
add
ret
jnp
adc
mov
pop
das
push
arpl
inc
and
dec
mov
es
movsb
push
loope
fistps
xchg
dec
rolb
sub
fdivl
xchg
popf
mov
loop
dec
jle
movsl
loop
dec
jnp
stc
scas
js
xchg
roll
stos
loope
dec
sahf
sub
jne
aas
icebp
rol
daa
push
lds
and
mov
sub
jo
xchg
imul
xor
mov
inc
xor
xcrypt-ecb
cmpsl
dec
jnp
xchg
scas
pusha
xchg
test
scas
and
lret
pushf
lods
and
fnstsw
sbb
out
xchg
fidivl
pop
leave
jle
lea
push
out
in
aaa
insl
inc
std
fisttpll
loop
pop
add
mov
nop
jp,pt
pop
or
sub
rcrb
dec
insl
mov
mov
pop
mov
xor
test
shrl
aad
pop
mov
pushf
mov
push
push
add
adc
sub
push
or
insb
mov
lahf
mov
lret
fwait
pop
shlb
es
fsubrl
or
sub
push
pop
call
lret
movsl
nop
stos
jge
andl
xchg
mov
andl
fs
lret
mov
push
jno
xchg
les
mov
stc
testl
out
out
sbbl
sahf
and
pop
lea
dec
dec
mov
dec
sbb
pop
cmc
imul
or
adc
mov
mov
lods
test
or
sbb
xchg
push
jnp
sub
lret
lret
push
lcall
push
jle
mov
jo
into
mov
fistl
sub
fcmovb
imul
aad
add
cmp
fldt
add
sub
call
xor
inc
xchg
das
adc
lds
jbe
xchg
inc
lock
mov
add
das
sti
popf
lea
fndisi(8087
fisttpll
push
lds
xlat
fcomps
and
push
adc
movb
inc
jecxz
in
cmp
mov
ret
jns
dec
das
nopl
mov
xchg
dec
testb
dec
mov
xchg
push
xchg
jns
xchg
insb
int
mov
add
stc
xorb
fimull
icebp
in
and
fldt
std
xchg
mov
mov
inc
dec
mov
mov
mov
stc
jns
push
sbbl
and
clc
mov
push
mov
lock
mull
sub
jb
fadd
popf
enter
hlt
and
sub
and
sub
or
jmp
fdivs
push
mov
lret
jns
push
jo
sbb
mov
rorl
in
aad
test
xchg
ret
pop
stc
mov
fdivrl
mov
mov
mov
rol
cmp
inc
inc
dec
mov
gs
xchg
ss
dec
hlt
cmpsb
sub
rolb
or
sti
push
xor
or
push
into
cmpsl
sub
inc
xchg
ret
stos
rorb
mov
adc
aad
test
js
sub
incl
xchg
rcr
or
xor
imul
fidivrl
mov
xchg
xchg
add
cmp
jno
repz
fidivrl
icebp
rorb
lret
mov
pop
ret
fmuls
add
cmc
jae
aad
dec
pop
cmp
mov
lods
inc
and
int
pop
sub
xchg
and
cld
jb
jne
fdivrl
iret
jg
adc
fcom
push
les
sarb
xchg
mov
push
lds
lock
mov
outsb
inc
ret
aam
xchg
jo
xchg
aaa
push
sub
arpl
loopne
or
pop
and
or
cltd
leave
mov
xor
sbb
inc
push
cmp
shr
push
xchg
and
adc
xor
repz
fcoms
hlt
lret
lods
arpl
les
incb
add
into
inc
cmp
mov
inc
or
imull
xor
adc
into
xchg
jp
dec
or
add
add
mov
jae
sub
aas
popa
sbb
mov
test
or
popa
inc
mov
jmp
push
sub
mov
je
pop
dec
sub
push
cltd
xchg
ret
pop
xchg
xor
dec
adc
std
das
pop
or
lcall
loope
push
jge
sbb
pop
gs
xor
push
int3
sbb
les
jge
pop
mov
cli
or
mov
mov
mov
popa
popa
test
push
push
arpl
jns
clc
mov
icebp
xorl
les
lret
or
rolb
inc
es
mul
cmpb
mov
test
mov
sub
xchg
and
dec
push
xchg
pop
stos
or
inc
mov
xor
out
xchg
dec
fsubs
ja
dec
cmp
in
scas
jb
jp
adc
lea
mov
fs
bound
sbb
jge
mov
sbb
aas
out
div
dec
xchg
mov
xchg
stos
aad
cmpsl
sub
cmp
jmp
hlt
dec
out
aas
in
pop
leave
int
adc
dec
cltd
lds
sbb
xchg
out
push
jae
out
jb
jg
dec
sbb
jge
xchg
out
les
call
ljmp
je
or
adc
mov
dec
scas
inc
or
shl
push
repz
jg
jns
aam
insl
rorl
mov
insl
jecxz
dec
js
xor
lahf
les
or
loop
xchg
mov
cmp
mov
das
and
mov
out
fwait
inc
jnp
loop
hlt
daa
movsb
push
mov
ds
pop
xor
stos
loope
sbb
fwait
call
dec
orl
dec
mov
push
ret
push
adc
dec
push
andb
int3
adc
mov
ljmp
cmp
add
add
cmp
and
jo
movsl
add
stc
je
in
and
subb
gs
cmc
sbb
add
imul
mov
jl
xchg
popf
or
into
mov
call
into
dec
xor
push
xchg
mov
push
mov
icebp
xor
xchg
scas
shr
sahf
imul
add
jle
hlt
lds
scas
add
push
pop
sysexit
out
jecxz
cmpsl
and
sbb
push
iret
mov
rorb
add
incl
jo
fisttps
ljmp
mov
or
mov
fcoms
int3
loopne
sbb
nop
hlt
mov
xor
sbb
sbb
sahf
shlb
into
jmp
xor
mov
lods
cli
pusha
dec
or
cmpsl
stc
and
cmp
pushf
push
insb
xchg
out
jns
inc
lock
xchg
mov
sub
les
mov
lock
test
stc
stc
ret
popa
add
sub
pop
pop
aam
rcl
fisubl
jns
inc
xchg
mov
sub
mov
and
jno
pop
divl
dec
fdivs
rcr
or
add
test
or
pop
fiadds
jmp
in
loop
mov
or
lea
out
and
cli
sbb
or
mov
cmpb
sub
mov
sub
jb
popf
das
mov
fildll
iret
mov
fadds
lds
adc
pop
sbb
xor
push
push
sti
ret
jmp
into
popa
loop
sarl
fidivs
mov
loop
mov
sub
std
sub
cmp
sub
int3
mov
rolb
mov
inc
xchg
or
jbe
sbb
stos
loope
xchg
aam
pop
js
cli
insb
jmp
mov
pop
fs
adc
xor
mov
fidivrs
shl
add
fwait
cmp
push
ret
movsb
mov
mov
mov
push
mov
fcoms
sbb
adc
jns
or
add
mov
sbb
out
pusha
mov
sahf
into
test
pop
sub
shlb
scas
sub
adc
push
fldt
js
mov
sahf
jecxz
mov
push
or
shlb
push
fs
push
adc
in
adc
mov
fsts
js
stos
lea
xchg
popa
adc
fucomi
push
out
xor
sub
jge,pt
clc
mov
sbb
mov
or
leave
push
inc
adc
sbb
data16
add
push
filds
adc
int
adc
lcall
mov
sbb
xchg
jno
lahf
ss
leave
dec
mov
jl
enter
mov
mov
sbb
and
sbb
mov
sbb
push
cmpsl
out
xchg
jns
out
cmpb
xchg
adc
jb
in
movsb
push
jp
mov
repz
stos
imul
data16
jb
fists
mov
pushf
xchg
pop
mov
loope
aam
jnp
adc
mov
mov
lds
sahf
pop
int
push
push
xchg
arpl
test
lds
ja
mov
cmpsl
sub
mov
lcall
icebp
push
in
add
sbb
push
ret
pop
mov
mov
mov
repnz
fildll
or
nop
inc
jbe
inc
lea
dec
or
gs
push
fwait
inc
rcl
xchg
jge
aaa
lret
push
or
push
sub
xchg
int3
fbstp
ds
pop
in
cmpsb
outsl
hlt
ljmp
pop
xchg
lods
mov
cs
outsl
inc
adc
xchg
jne
ret
mov
nop
and
xor
push
aas
pop
inc
xor
clc
cmp
das
mov
outsl
sbb
subb
xchg
xor
sub
dec
jne
in
sarb
in
imulb
xor
fnstcw
cmp
mov
das
mov
inc
push
and
std
bound
xor
mov
push
movsl
adc
push
inc
xchg
jg
dec
fiadds
aas
mov
dec
mov
jmp
clc
and
inc
cltd
stos
and
push
hlt
and
xchg
xlat
repz
xor
mov
std
pop
xchg
sbb
dec
xor
xor
icebp
enter
push
push
lea
ret
adc
shll
jp
int3
les
xor
std
sub
adc
cmp
lea
es
dec
push
jmp
or
lods
stc
test
in
rorb
mov
pop
test
push
scas
mov
stos
xchg
mov
xor
jb
cltd
cld
mov
ss
out
cmc
je
ficompl
pop
xor
stos
sbb
adc
pop
mov
notl
cmp
enter
sub
jb
out
ret
sbb
mov
cmp
shrb
mov
movsl
mov
jge
daa
adcb
pop
xchg
push
dec
fidivl
in
movsl
and
fwait
vpshufd
cmp
add
mov
movsl
sbb
inc
mov
je
jle
xchg
mov
sahf
sbb
shl
aaa
gs
jns
rep
xchg
scas
imull
add
mov
adc
stos
ret
pushf
nop
xchg
ret
cmpsl
into
xor
mov
mov
or
mov
xchg
pop
out
arpl
ja
pop
mov
pop
xor
dec
je
test
pusha
mov
xchg
mov
adc
in
cmp
out
and
test
cmpsl
pushf
mov
lcall
xchg
jmp
xchg
mov
loopne
jo
mov
xchg
in
mov
inc
dec
jno
and
inc
sbb
imul
aaa
lds
test
clc
push
repz
mov
cmp
jnp
jo
jnp
fnstcw
or
dec
pushf
cmp
adc
pop
loope
inc
sarb
pop
mov
lods
mov
scas
cld
ds
cmpsb
and
jbe
mov
addb
jo
les
scas
fwait
sarb
hlt
ss
add
iret
or
mov
cmp
xor
hlt
add
push
push
jbe
jbe
push
inc
ljmp
mov
pop
push
cmp
fldcw
rorb
jnp
adc
mov
sub
in
xchg
or
pop
mov
scas
addb
js
in
aad
in
xlat
sarl
pop
sbb
cmp
adc
mov
out
into
mov
xchg
lahf
aam
add
xchg
scas
stos
mov
xchg
mov
mov
shlb
add
lds
into
mov
bound
or
aas
mov
jo
scas
and
jl
pop
mov
repnz
and
and
mov
inc
pop
sahf
in
mov
xchg
fcmovnu
jae
and
gs
in
dec
mov
cmp
jne
adc
insb
lock
mov
lret
jbe
push
push
cmp
push
into
das
inc
xlat
add
or
lea
out
jae
repz
sbb
xchg
mov
xchg
iret
ljmp
dec
mov
pop
test
rclb
push
inc
mov
add
cltd
xor
push
inc
and
mov
jle
sub
and
fisubrl
dec
clc
divl
mov
and
add
ficoms
imul
xchg
push
add
adc
repnz
and
std
mov
xor
mov
push
add
xor
aam
inc
clc
out
ja
push
ds
sub
fcoml
cmc
call
xor
push
sbb
cmp
data16
add
aas
adc
mov
adc
and
mov
jno
shll
movsl
lcall
je,pn
or
sub
mov
fidivs
pop
sub
or
inc
push
shl
dec
jge
sbb
jecxz
aad
push
adc
xchg
mov
and
jae
stos
jae
add
jb
pushf
pop
fisubs
clc
aad
and
scas
test
iret
jp
mov
test
call
stos
sub
arpl
xchg
xor
xchg
lods
gs
dec
outsl
adc
shlb
mov
pushf
jg
ret
shll
test
mov
add
out
pop
repnz
jns
and
inc
cs
sub
cmp
leave
jmp
xor
mov
out
ret
sti
in
mov
cmpb
mov
mov
inc
scas
int
xchg
enter
or
dec
test
cwtl
lcall
imul
mov
pop
cmc
aad
mov
loop
sub
xchg
pop
adc
add
in
popf
setp
aam
mov
adcl
je
adc
jle
int3
cltd
inc
subl
adc
daa
and
enter
mov
cltd
fisttpl
and
jno
push
dec
lahf
adc
aas
das
ret
cld
ret
dec
inc
nop
loop
scas
push
and
iret
pop
mov
and
cmp
nop
adc
out
fmuls
jecxz
xlat
mov
jg
cli
pop
lcall
mov
or
shlb
into
je
lock
dec
cmpsl
cmp
aas
xchg
inc
push
adcl
test
shlb
mov
sub
insl
in
mov
in
rcll
mov
lret
xchg
sub
cmp
sbb
imul
pop
push
movsl
push
pop
pop
shl
jno
xor
xchg
outsl
pop
inc
fnstenv
pusha
je
xor
arpl
sbb
es
mov
dec
add
fidivs
daa
mov
stos
js,pn
sbb
dec
stos
aad
sub
and
xchg
mov
ja
sbb
sbb
pushf
push
mov
into
sbb
or
sub
cmpsb
pop
jp
mov
popa
and
fidivrs
cmp
dec
cwtl
xchg
xorl
ja
dec
mov
or
les
jnp
xchg
fistps
js
test
mov
pop
cmp
mov
test
call
jne
fidivrs
pop
mov
aad
adc
cli
push
xchg
data16
ljmp
pop
dec
cmp
dec
cwtl
xchg
imul
sub
sub
pop
xor
incb
adc
push
in
clc
or
cmp
iret
repz
sahf
out
shl
and
jne
sub
push
adc
inc
loop
popf
push
test
jle
out
daa
imul
push
pusha
and
add
push
mull
xchg
adc
cs
je
rolb
push
dec
xchg
cmpsb
xlat
popa
movsb
mov
lods
test
xor
jbe
mov
xor
pop
mov
cmp
shl
data16
imul
push
imul
xorl
xor
xchg
stos
jg
leave
mov
mov
outsl
pushf
pop
jb
cmp
ljmp
sub
cmpsl
adc
rcl
push
mov
lock
add
aad
mov
inc
jno
scas
pop
and
shr
pop
jge
sbb
addl
cmp
xchg
out
xchg
mov
push
mov
insb
popf
adc
stos
out
or
out
sbb
push
push
push
fcomi
or
pop
or
inc
xor
inc
fildl
es
clc
out
jl
mov
inc
add
inc
pushf
int3
in
dec
add
adc
or
push
hlt
rcrb
roll
dec
xlat
sarl
pop
cmp
adc
push
jle
xor
sti
jge
insb
mov
mov
cmpb
loop
push
and
cmpsb
xor
adc
xor
sub
mov
cmpl
punpckhdq
mov
outsb
inc
and
jno
adc
pop
pop
cmp
add
sbb
stos
ret
pop
fstpt
sbbl
inc
cwtl
or
jle
pop
cmp
out
xchg
jns
movsl
cmpsb
outsb
sar
cmp
cld
xor
out
adc
mov
lds
dec
test
ret
lods
cltd
sub
fisttpll
pop
pop
insb
in
push
push
jp
aas
iret
push
enter
inc
xchg
inc
push
xor
cmpsb
out
push
je
iret
out
icebp
test
cwtl
mov
sbb
gs
insb
or
mov
cs
or
inc
and
pop
dec
pop
scas
cmp
or
scas
out
mov
cmpsb
das
jp
lahf
xor
lods
sbb
pop
js
sbb
bound
mov
inc
cmp
mov
pop
lcall
adc
xchg
fadd
inc
jne
mov
rclb
xchg
sbb
imul
sub
gs
mov
inc
mov
xchg
cli
daa
int3
and
popf
popf
jle
cld
jns
push
push
lock
push
sbb
and
hlt
test
ror
and
out
arpl
push
mov
test
dec
outsb
sbb
mov
mov
mov
mov
iret
jo
pop
lea
ret
xor
xor
inc
sbb
push
decb
mov
or
int
add
pop
jl
sub
ds
in
data16
and
je
scas
mov
inc
or
mov
mov
jmp
cmp
js
add
je
dec
out
pop
and
push
adc
bound
jbe
add
shr
mov
xor
xchg
shll
test
dec
ja
les
cmp
out
push
lods
push
stos
cmpsb
mov
je
out
sub
jo
cmp
mov
or
test
sbb
iret
cmp
into
mov
enter
addb
les
mov
out
shl
rep
inc
les
insl
movsl
lret
or
pushf
cmp
sbb
mov
inc
cmp
adc
adc
scas
sub
rcrl
push
lret
pop
icebp
orb
cli
add
and
mov
fwait
and
adc
dec
push
xchg
xlat
scas
iret
add
mov
sbb
push
cmc
push
push
enter
cmp
push
cmpsl
add
pop
jmp
cmp
push
mov
inc
sarl
fdivrl
sarb
and
in
xchg
sahf
sbb
jmp
and
cmpsb
xchg
stc
jo
add
mov
mov
fidivrs
mov
and
pop
pop
push
fs
mov
out
cmpb
dec
xchg
enter
cmp
mov
jecxz
xor
clc
fisttpl
adc
sub
out
in
jae
pop
jl
lret
aad
lds
outsl
rclb
andl
ret
mov
dec
aaa
popa
pop
mov
adc
fwait
cmp
jecxz
movsl
pop
js
and
add
mov
inc
jae
add
sbb
sub
adc
mov
ljmp
inc
dec
int
sbb
shrb
int
or
push
in
insl
in
aam
cmp
dec
cltd
lds
gs
cmp
pop
and
sub
jne
inc
dec
mov
testb
js
adc
shl
std
aad
leave
xchg
fdivs
add
imul
jbe
in
popf
pusha
or
mov
adc
mov
pop
shr
mov
popf
and
pop
pop
imulb
leave
cmpsl
in
xor
fwait
mov
mov
dec
pusha
jo
fucomip
push
fdivl
sub
es
push
movsl
xchg
cli
xchg
andl
jb
mov
cmovnp
add
add
mov
fistpl
cmp
sbb
sbb
and
cmc
adc
adc
rorb
int3
insl
jnp
mov
add
cmpsl
jg
call
sbb
mov
cmp
or
test
sub
dec
sarl
jg
lahf
popa
sbb
sub
sahf
fs
jmp
jno
insb
cltd
iret
xchg
and
push
inc
inc
mov
pop
into
add
roll
adc
loopne
sar
cmp
ficoml
popf
ja
sbb
adcl
jno
outsl
mov
push
mov
jnp
inc
cltd
pop
add
sbb
adc
data16
xlat
xlat
scas
xor
mov
shlb
push
enter
es
jmp
cmp
jl
jne
sub
test
shll
jns
mov
test
rcrb
add
cmp
mov
sbb
test
fdivs
negl
mov
jne
inc
pushf
jbe
pop
push
add
mov
aas
add
arpl
mov
cs
scas
cli
add
inc
iret
dec
sub
aas
jmp
mov
jo
cmp
in
cwtl
mov
imul
xor
inc
xorl
sub
mov
xchg
call
inc
sbb
push
arpl
and
movl
push
scas
dec
mov
lret
xor
cltd
testl
cs
add
popf
sbb
in
cmpsl
incb
fmul
int
xchg
addr16
movb
cmp
mov
loop
ds
xchg
aaa
leave
pop
ret
pop
cmp
fimuls
dec
xchg
les
insl
je,pt
mov
shr
mov
dec
adc
cld
mull
xor
pushf
fstpt
pushf
ja
fwait
cmp
jb
add
jae
div
fsubp
and
mov
jnp
arpl
cmp
setp
inc
xchg
sub
mov
lods
or
sub
loopne
add
pop
subl
lea
adc
mov
imul
bound
and
ljmp
dec
lret
xchg
xchg
ljmp
leave
ror
popf
cli
mov
addr16
mov
lret
out
in
pop
or
mov
imulb
sti
mov
popa
sbb
push
lret
jle
test
inc
xchg
cld
pusha
jno
jbe
mov
ret
rorl
mov
adc
frstor
shlb
mov
and
mov
xchg
les
outsl
xchg
cmp
adc
bnd
outsl
push
pop
inc
xor
mov
xor
aam
rolb
mov
arpl
mov
out
pop
mov
pop
cmpsl
dec
sti
cmp
mov
and
mov
shlb
stos
jmp
sbb
xor
rcrb
fcmovne
dec
or
add
inc
pusha
lahf
sub
sbb
add
je
adc
loop
mov
jg
jg
gs
cltd
inc
out
adc
sbb
xor
mov
sub
stos
outsb
ss
bound
and
dec
pop
aaa
inc
iret
xchg
dec
dec
repnz
xor
nop
mov
mov
stos
sahf
push
push
loop
repnz
in
push
sbb
aaa
inc
movsl
dec
sbb
add
push
cmpsb
and
pop
in
or
sbb
push
ret
or
lods
xlat
push
mov
mov
int3
push
mov
pop
sub
or
pusha
mov
pop
xadd
lahf
es
ja
faddl
fimuls
xor
movsl
sbb
push
imul
in
xchg
cmpsl
dec
jl
mov
daa
fucomi
add
jb
and
cli
sbb
popf
add
outsb
or
jb
pop
mov
sbb
insl
fucom
pusha
mov
gs
jecxz,pt
and
mov
hlt
jo
and
dec
push
jg
push
inc
add
ljmp
rcll
idivl
jl
fimuls
mov
or
scas
pop
adc
mov
fdivs
and
dec
loop
cmp
cmp
jb
ficoml
stos
add
adc
and
jmp
mov
xor
pop
dec
ret
enter
pop
insb
pop
pop
mov
outsl
add
divl
pop
ljmp
cmpsl
test
js
fldt
or
pop
dec
dec
repz
mov
repz
pop
mov
dec
adc
iret
js
mov
add
xchg
test
mov
jecxz
dec
int
fdivs
mov
dec
lods
mov
jne
or
cwtl
mov
icebp
and
and
xor
testl
repz
notb
dec
stos
rolb
scas
fsubrs
add
dec
nop
inc
pop
cmc
outsl
scas
push
inc
mov
out
and
in
add
mov
cmp
cli
test
lock
cmp
int3
and
sti
ficoms
push
loope
push
mov
cli
cltd
js
push
scas
push
sbb
je
enter
or
inc
mov
rclb
mov
xchg
test
and
sti
lods
test
scas
fsubl
in
fdivrs
stos
ret
shrb
adc
insb
nop
lcall
inc
add
lock
mov
sahf
roll
dec
or
xor
int
rcrl
shrb
push
pop
lret
dec
add
sbb
cmpsl
test
insl
jae
popf
inc
repnz
loope
pushf
mov
pop
sbb
dec
adc
xchg
dec
cmp
jl
add
or
dec
les
jnp
cmc
lret
or
jmp
pop
int3
push
fsts
mov
mov
pop
jne
ljmp
repz
xor
mov
mov
sbb
cli
lock
mov
or
addr16
xor
jg
push
out
xchg
push
sub
mov
dec
mov
mov
add
or
cmp
cmc
ss
pushf
lods
je
jbe
call
cs
and
stc
add
push
mov
das
loopne
inc
loope
pop
sub
or
jecxz
dec
sbb
cmp
js
adc
pop
dec
fistpl
into
out
mov
adc
jl
add
push
mov
jle
mov
add
jmp
fs
outsb
sarb
xor
div
sub
mov
lret
or
cmp
push
adc
push
inc
push
inc
fxch
and
cmp
call
push
jecxz
push
sbb
mov
out
xchg
mov
pusha
or
sub
add
xchg
mov
ljmp
div
imul
jbe
lock
aad
cltd
mov
or
add
ljmp
repnz
sahf
out
fisttps
jb
xchg
iret
pop
rclb
jne
add
aad
adc
inc
dec
in
mov
mov
push
sbbb
inc
push
push
scas
add
outsb
push
cmpb
fnstenv
sub
fistl
enter
pop
add
scas
gs
jecxz
insb
mov
call
inc
repnz
xlat
into
arpl
inc
xlat
ja
iret
and
jns
incb
add
add
in
arpl
add
loopne
cmp
xchg
xchg
negb
lea
dec
test
mov
test
add
adc
mov
pusha
int
scas
ror
sbb
adc
gs
mov
mov
sbb
popa
in
and
sar
lret
aad
je
jae
and
adc
pop
xor
sbb
push
lret
or
jp
mov
xchg
jl
les
out
cld
xchg
adc
insl
sub
sbb
in
shrb
add
iret
ds
jle
ret
popa
pop
iret
sbb
jne
js
pushf
test
or
das
jbe
gs
arpl
mov
ja
adcl
push
sahf
in
pop
test
jns
in
mov
test
push
mov
stos
dec
mov
pop
in
cs
cld
cld
cmpsl
ds
lret
jne
lds
cmp
sub
mov
sbb
mov
aaa
cmc
rorl
inc
call
ss
add
lock
cmc
xchg
dec
cmc
aad
pop
mov
mulb
sub
insl
fnstenv
push
mov
sahf
inc
sbb
ss
movsl
cwtl
pop
add
xchg
in
jb
lods
loop
imul
cmpb
data16
push
je
jmp
ss
popa
fildl
mov
jo
jo
shr
sbb
dec
loop
int
mov
je
pusha
xchg
pop
bound
sbb
xor
fstl
aas
jo
pop
jge
mov
jmp
xchg
loope
clc
repz
add
cmp
mov
inc
fstl
mov
adc
jl
stos
inc
mov
pop
shll
xchg
inc
adc
xchg
add
ljmp
arpl
mov
xor
mov
sub
add
fisubs
vprotw
inc
dec
pop
test
shrb
insl
adc
ds
cmpl
mov
xchg
in
arpl
push
mov
mov
in
push
jbe
fdivs
push
inc
mov
lds
loope
sbb
sub
xor
sbb
xor
pop
in
jo
aas
aas
jo
pushf
imul
les
and
or
cmp
aas
pop
pop
xchg
hlt
loopne
mov
sbb
add
int
cmpl
mov
insb
out
nop
and
addr16
mov
das
cmp
gs
jno
sbb
test
jg
popa
inc
jle
rclb
push
cmp
in
inc
pop
mov
or
cli
mov
ds
or
pop
orl
loop
cmp
fs
mov
fildl
stc
sti
ja
js
fwait
rol
stc
vpaddb
mov
xchg
mul
dec
or
cmc
enter
cmp
call
test
cmc
jg
decl
sahf
imulb
xchg
ret
and
push
pop
ret
icebp
orb
aaa
rorl
xchg
daa
inc
jnp
fisubrs
cltd
daa
int
dec
rcrl
push
insl
mov
repz
sbb
xor
test
lea
ds
inc
mov
and
arpl
add
popa
leave
scas
fsubp
aaa
jge
out
sub
inc
cmp
test
hlt
iret
xchg
mov
in
push
adc
mov
in
xchg
loope
ss
pop
mov
imul
int3
sub
popf
dec
cs
fsubs
push
fwait
sbb
dec
cld
es
pop
pop
int3
adc
push
jl
cmp
push
inc
sub
imul
cmp
or
sub
fisubl
push
shlb
fwait
sahf
sbb
mov
xor
shlb
push
cmp
pop
adc
cld
int
repz
mov
cmp
test
push
pusha
test
cltd
or
out
jmp
ss
insl
and
xor
inc
sbb
push
imul
mov
ds
cmp
fildll
notb
punpcklwd
pushf
fmulp
mov
outsb
fwait
imul
pop
out
mov
les
pop
mov
sar
xchg
xchg
inc
loopne
fsubrs
sbb
insb
out
sub
dec
push
imul
pop
test
es
push
xchg
xor
lret
push
push
in
pop
cmp
cmp
in
or
push
push
das
sbb
stos
nop
xlat
ljmp
enter
mov
and
adc
aad
jae
insl
into
mov
add
jle
mov
leave
xor
mov
dec
out
push
cwtl
sbb
cmp
aam
cmp
mul
lock
aad
imulb
push
sbb
lods
push
cltd
adc
loop
loope
cwtl
aas
or
dec
shl
adc
adc
mov
xchg
stc
mov
mov
xchg
xchg
xchg
sbb
test
sub
cmp
jg
mov
test
sbb
test
mov
pop
xor
adc
dec
cmp
cs
jns
inc
adc
sbb
sti
les
and
xlat
xchg
lahf
jmp
add
aaa
aam
inc
xchg
inc
scas
or
aam
mulb
inc
aad
or
pop
mov
and
cli
cmp
cmp
fsubrs
push
cld
push
adc
outsb
inc
out
loopw
loop
sbb
sti
xlat
out
pop
jl
fadd
dec
in
jg
leave
rorl
xchg
sub
dec
fmuls
xchg
out
pop
test
nop
out
inc
lock
cmp
rclb
mov
cld
inc
aaa
inc
arpl
rcll
out
into
addl
add
pop
out
aas
dec
pop
xchg
pushf
bound
fs
mov
sub
adc
outsb
jmp
lock
mov
pop
xchg
inc
test
sub
inc
rorl
cld
dec
andb
daa
cmp
cmp
popf
sahf
lods
dec
fdivr
xor
clc
xchg
pop
sub
add
add
sahf
lods
pop
aaa
and
into
aaa
push
popf
mov
aad
inc
pop
sub
sbb
sub
outsb
push
dec
push
pop
xchg
jo
das
add
add
in
stc
loope
xchg
divl
mov
sub
ja
movsl
clc
call
ss
icebp
stos
xchg
push
inc
jns
mov
sbbb
sbbb
aam
dec
sub
popaw
jno
lret
pushf
clc
lret
sbb
push
cmp
sbb
and
sub
dec
stc
sbb
cmc
lods
ja
fwait
jmp
jg
das
mov
addb
in
and
nop
mov
mov
repnz
push
aaa
adc
sti
xchg
sub
push
lock
fimull
popf
cmp
push
sub
xchg
cmp
cmpsb
decb
mov
jmp
int
mov
das
sbb
fistpll
dec
addr16
sbbl
vrsqrt14sd
sarb
testl
leave
add
movsb
dec
outsl
lods
nop
loopne
ja
xor
popf
ss
push
jbe
aam
add
xor
mov
shlb
xor
clc
cmp
out
push
dec
movsb
mov
pop
and
ficoms
mov
jge
mov
mov
push
push
pusha
testl
and
test
jns
in
popf
movsb
mov
test
std
dec
mov
pusha
cli
fs
jge
xchg
or
pushf
jno
fldenv
jg
or
das
enter
pop
adc
mov
push
nop
lcall
sbb
sti
xlat
enter
fdivrs
and
mov
imul
mov
roll
cmp
aad
cmp
outsb
lahf
cmc
cmp
cmp
clc
dec
rorl
aaa
pop
or
mov
cli
pop
cmp
and
xchg
test
cmp
rorl
int
sbb
sub
clc
add
scas
pop
push
in
fsubl
mov
jne
repz
add
add
addr16
add
and
js
mov
pop
shll
into
addr16
jns
xor
outsb
sarb
scas
addr16
cld
sbb
lods
sbb
push
jbe
movl
out
roll
push
xor
orb
mov
sbb
xchg
jge
int
push
mov
shrb
xchg
add
sub
pop
add
test
add
sarb
jecxz
mov
int
addl
pop
insl
imul
dec
insb
sub
or
lods
loop
sub
aad
out
or
dec
rorb
push
or
ret
mov
loope
pushf
mov
sub
jo
popf
sub
jne
data16
pop
push
es
pop
imul
int
scas
push
dec
cmp
popf
movsl
stos
inc
adc
loop
xchg
in
mov
mov
stos
pusha
push
mov
mov
cmp
jle
adc
rclb
cltd
es
dec
push
mov
mov
jbe
pushw
jecxz
into
cmp
mov
sub
in
add
int3
push
cs
sbb
ja
sub
imul
pop
adc
rorl
jbe
orb
xchg
into
or
call
fadds
adc
mov
mov
dec
ret
repz
sub
xchg
adc
arpl
pop
loope
jp
adc
inc
lcall
loop
mov
mov
mov
mov
jp
dec
pusha
or
sahf
mov
fiaddl
or
out
jnp
out
fdivl
mov
xchg
adc
fistpl
iret
mov
test
or
cmp
add
jo
js
mov
cmp
sub
bound
push
push
mov
hlt
mov
test
adc
cmp
aaa
subb
pop
inc
out
cmpsb
hlt
xchg
loope
popf
pusha
fs
cmovno
pop
xchg
loope
notl
mov
and
jp
xor
jle
ret
add
fdivs
enter
sub
sahf
fucomp
mov
movsb
or
pushf
mov
insl
sbb
addr16
pop
push
xor
sub
in
and
dec
mov
jb
dec
gs
cmpsb
in
rclb
notb
cwtl
outsb
sub
and
outsl
ds
cmp
shlb
fisubl
cs
hlt
inc
cs
ret
jb
int3
jae
mov
aam
jae
lds
mov
inc
ret
lea
test
cld
jnp
daa
out
call
jbe
dec
arpl
outsb
xor
cmpsb
or
pop
sbb
xchg
mov
add
or
hlt
fidivrs
ja
pop
mov
insl
pop
mov
xchg
gs
mov
into
add
scas
add
repz
in
insl
and
dec
push
fmuls
xchg
xor
arpl
inc
jbe
mov
xchg
hlt
leave
mov
fisubrl
or
push
ss
cwtl
jp
pushf
inc
mov
inc
dec
movsb
xchg
in
lret
mov
mov
sub
cmp
jnp
shll
pop
in
pop
sahf
scas
out
or
insl
mov
mov
fcoms
add
push
add
arpl
lods
rcl
enter
in
adc
inc
push
fistl
adc
bound
cmpsb
xor
imulw
sti
jae
cmp
in
cmc
jns
push
clc
and
cmp
cmp
in
jbe
xor
std
cwtl
pop
scas
aad
xchg
scas
lahf
mov
fldcw
add
or
loop
push
aaa
and
mov
push
fs
orl
and
js
pop
mov
mov
xor
mov
cwtl
bsr
loopne
sbb
xchg
push
ljmp
mov
shr
loopne
fsubrs
sub
sub
stc
xchg
mov
sbb
loope
stos
imul
gs
xor
and
sub
pop
jb
cli
and
mov
dec
push
mov
dec
ror
nop
mov
dec
jae
scas
push
roll
loopne
xchg
mov
mov
fistpll
lods
inc
into
xchg
or
cmpsb
out
and
das
cwtl
sbb
test
sub
hlt
sub
add
pop
or
push
mov
inc
mov
inc
out
loope
icebp
pop
sahf
lret
cmp
add
mov
mov
sbb
xchg
movsb
cmc
inc
push
and
je
out
js
pop
jp
out
mov
jo
iret
inc
pop
call
int3
mov
notb
aas
cmp
jne
cmp
sub
dec
mov
into
add
pop
inc
faddl
adc
mov
outsb
jnp
in
xlat
mov
cmp
outsl
es
mov
ret
iret
pop
jmp
push
cs
xlat
sub
sti
mov
sbb
and
call
or
dec
leave
mov
jl
jg
lods
jnp
mov
lret
jg
lcall
add
dec
lret
pop
repz
repnz
adc
or
mov
mov
push
jno
or
xchg
mov
cmp
mov
sbb
dec
mov
push
or
cmc
jns
sub
aam
cwtl
leave
push
pushf
leave
bnd
and
mov
icebp
mov
or
stos
jge
push
xchg
mov
mov
add
adc
ss
sbb
push
decl
std
rol
add
aad
push
push
lahf
jbe
cmp
cmp
rcl
popa
outsl
out
push
in
in
lea
loop
mov
and
fildl
mov
or
sub
rolb
out
and
bound
lods
lahf
mov
inc
fldl
mov
aaa
jnp
mov
dec
jnp
xor
sbb
dec
pop
outsl
fnstcw
inc
aam
lods
or
nop
push
xchg
decb
xchg
xor
lea
fs
dec
adc
cmp
lcall
mov
ficompl
jae
les
mov
aaa
test
fs
cli
sarl
dec
js
mov
mov
or
and
lahf
xchg
pushf
mov
adc
jno
add
add
add
add
or
add
sbb
add
add
add
add
add
add
add
pop
add
xorb
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
les
add
movsb
popf
add
dec
arpl
add
add
add
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
dec
xor
add
add
add
add
add
add
add
movsb
xor
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
add
add
add
push
xor
add
add
add
add
add
add
inc
xor
add
add
test
add
add
add
lcall
xor
add
add
add
add
cmp
add
mov
add
xchg
xor
add
add
add
lcall
add
add
add
add
incl
xor
add
add
lcall
xor
add
add
mov
xor
add
add
fdivs
add
mov
add
mov
add
add
push
xor
add
add
add
add
jmp
xor
add
xor
add
xor
add
add
add
incl
add
xor
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
gs
xor
fs
insb
add
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
jbe
jo
xor
cs
insb
add
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
outsl
insb
gs
jne
xor
cs
insb
add
add
add
push
jns
inc
jb
gs
je
imul
add
imul
insb
add
add
add
je
jne
inc
add
jae
gs
insb
xor
cs
insb
add
add
gs
insb
inc
js
arpl
gs
add
add
add
insb
ja
jo
cs
insb
add
add
je
inc
imul
jae
add
add
outsl
arpl
xor
fs
insb
add
add
inc
push
je
jb
jne
add
add
ja
outsb
imul
insb
add
add
je
jb
gs
gs
outsl
outsb
outsb
arpl
push
je
je
add
add
add
push
inc
push
xor
cs
dec
dec
add
add
push
gs
outsl
insl
jo
gs
inc
jb
insl
add
add
inc
push
dec
inc
inc
push
xor
cs
insb
add
add
add
arpl
inc
jb
popa
je
inc
popa
jo
jne
gs
imul
add
add
add
add
add
int3
fdivr
mov
mov
xchg
iret
lcall
cmp
add
or
dec
add
xor
pop
or
in
jb
jne
cmp
or
dec
stc
cmp
addr16
add
rolb
pop
push
mov
push
inc
fcmovbe
jecxz
xor
jge
cli
add
mov
add
mov
loopne
dec
dec
push
jne
add
inc
or
pop
pop
ror
jge
push
call
sbb
xor
mov
push
jecxz
rep
aaa
mov
push
test
pop
enter
jne
pusha
push
or
mov
add
loop
or
pushl
sub
lock
cmp
sbb
xor
pop
pop
pop
leave
ret
jb
and
adcb
loope
add
or
xchg
jae
and
orb
xor
or
loopne
xchg
ds
out
or
or
cmpl
jo
test
sub
xor
sub
cltd
subl
dec
aam
jmp
inc
fmull
add
inc
add
imul
add
pop
lea
lods
or
insb
lahf
in
inc
lock
push
call
or
sub
hlt
shll
nop
push
push
jne
and
addr16
mov
and
xchg
cmpsb
inc
pop
jne
sbb
inc
out
mov
or
repz
fadds
decl
int
xchg
adc
mov
fmuls
adc
je,pt
sub
jae
sbb
jmp
jo
and
xchg
test
jne
ss
into
adc
sub
lock
pushf
outsb
sub
xor
lock
adc
in
and
add
mov
cmp
cmpsb
or
inc
jmp
xor
pop
insl
sti
add
mov
cmp
push
mov
rol
ljmp
push
cmpsb
iret
lea
xchg
mov
lods
incb
mov
xor
pop
push
xor
or
wrmsr
dec
js
xor
mov
push
nop
xchg
jmp
sub
inc
mov
ror
shr
repz
fcmovnu
or
push
push
lea
push
push
rol
adc
subl
mov
clc
xor
lcall
cmpsb
push
ret
mov
movsb
mov
mov
push
inc
push
jae
inc
push
mov
jmp
loopne
xchg
push
aas
inc
push
adc
jnp
leave
movsb
hlt
add
popf
rorl
mov
pop
or
mov
lea
or
jmp
cwtl
sub
popf
jno
sub
jo
lods
adc
repnz
adcb
jmp
adc
xor
dec
jp
in
nop
mov
xchg
pop
repnz
dec
out
jne
out
pushl
push
add
sbb
push
loope
sti
and
sbb
adc
fcmovb
outsb
and
repnz
pop
jecxz
and
insl
add
or
jmp
lods
and
add
adc
adc
popa
adc
mov
les
sub
jmp
in
test
leave
or
es
shl
int
push
sti
fcoms
and
add
idivl
andb
sbb
xor
xchg
jmp
repz
mov
insb
movsb
cs
mov
sbb
add
cli
xchg
ljmp
out
incb
mov
and
outsl
addr16
sbb
out
insl
add
jb
js
std
sub
cmp
push
adc
outsb
dec
xchg
mov
mov
and
shlb
mov
jne
sub
out
nop
jo
fimull
mov
shl
lret
stc
es
adc
add
ret
jge
pop
sti
popa
add
mov
adc
add
call
jno
push
sub
jne
lea
mov
and
or
jge
dec
test
adc
dec
adcl
mov
adc
jb
inc
aad
dec
data16
or
jl
add
sahf
push
and
inc
mov
es
adc
clc
push
push
jno
hlt
add
fidivs
and
sub
add
mov
pop
dec
hlt
mov
inc
xchg
mov
inc
sahf
mov
push
sbb
mov
sbb
subb
xor
inc
ret
lcall
out
jne
mov
inc
add
cltd
push
pop
divl
cmp
pop
jl
push
mov
push
xchg
cltd
mul
jge
mov
in
movsb
daa
or
xchg
add
add
push
call
xchg
push
mov
cld
lea
ds
ror
xorl
or
call
addb
or
pop
mov
cmp
push
dec
rcll
jo
inc
add
outsl
xchg
dec
pop
adc
adcl
mov
mov
cltd
imul
add
xchg
and
add
mov
push
xor
repz
jno
push
or
and
xor
or
pop
dec
sbb
nop
or
mov
push
adc
adc
pop
mov
and
sbb
and
push
lahf
sub
cmp
call
or
push
push
shlb
push
pop
sub
lea
add
add
sub
mov
fidivs
xor
lea
mov
stos
nop
add
add
jae
test
out
push
xor
and
aam
repz
out
pop
sbb
add
outsl
add
jge
ljmp
or
call
add
mov
mov
in
xchg
xchg
xchg
aaa
xchg
mov
call
mov
jae
insb
xchg
shrl
mov
or
rcll
add
lcall
mov
inc
inc
push
addl
je
mov
lea
mov
cld
mull
push
xorb
and
lea
push
and
das
orl
fs
loop
les
shrb
sbb
test
lret
mov
inc
or
aaa
ficoms
and
push
dec
inc
mov
movb
add
pop
int
and
inc
and
jecxz
dec
ds
xor
sbb
dec
cmpsb
cmp
adc
add
pop
pop
pop
pop
ret
les
and
cld
mov
pop
sub
loopne
push
add
adc
xchg
and
aad
push
mov
sbb
xchg
sti
sbb
push
push
negl
ret
push
enter
xor
pop
add
add
in
and
leave
push
addb
int
rcrl
adc
pop
add
lock
jmp
hlt
cltd
and
icebp
pop
push
or
rcrb
or
xor
pop
dec
add
inc
adc
jge
and
cltd
xchg
test
insb
mov
arpl
inc
pop
adc
add
clc
cmp
jge
xchg
push
inc
loopne
rolb
andnps
sub
shll
dec
mov
xor
sub
ret
data16
call
xchg
push
pushf
push
movb
addb
pop
pop
dec
mov
xor
gs
or
push
cmpsb
pop
popa
jmp
sbb
push
mov
in
add
pop
jbe
push
add
cmpsl
decb
mov
dec
aas
es
out
mov
in
inc
pop
out
fists
jb
fiadds
and
dec
xchg
loopne
or
jge
dec
pop
or
cmp
test
add
movsl
subl
push
cli
sahf
movsb
push
aam
sbb
stos
and
or
mov
cmp
ret
add
mov
adc
stos
inc
pushf
add
lock
push
push
inc
xchg
in
mov
mov
jge
in
es
dec
enter
push
dec
pop
and
pop
jns
mov
hlt
push
fs
or
cmp
test
mov
push
fistps
mov
in
mov
lock
and
adc
adcl
push
test
lret
sbb
sbb
stc
jmp
adc
out
inc
add
decl
dec
stos
adc
or
loopne
sub
pushf
dec
pop
jno
out
fisubl
or
inc
or
sub
lret
sti
inc
add
xchg
dec
andb
pop
sub
and
or
dec
or
push
test
and
push
push
push
es
call
sbb
mov
ret
adc
dec
mov
or
adc
mov
adc
mov
push
mov
hlt
in
test
cmp
jmp
and
fdivrl
mov
push
adc
test
add
repnz
push
outsb
daa
mov
fdivrs
jg
test
pushf
adc
push
jmp
pusha
add
inc
mov
push
jno
xchg
cmp
pop
push
dec
sbb
xchg
add
inc
xchg
lods
jmp
inc
popf
push
xlat
sub
mov
sbb
sub
mov
shr
push
add
sbb
dec
or
push
inc
jmp
pop
ss
pop
and
pop
jmp
sbb
rol
cmp
mov
jl
sbb
iret
shr
push
loope
push
lea
push
je
add
sti
add
add
mov
sbb
sbb
test
jbe
decb
imul
and
xor
scas
mov
xchg
insb
add
sub
xor
pop
lods
cmpsb
jmp
dec
add
jbe
lret
scas
add
mov
cmp
add
and
outsb
je
idivl
lds
fldt
adcb
jecxz
cmp
aas
fs
and
stc
in
fnstenv
pop
scas
mov
imul
inc
xor
sub
insb
and
push
jne
xchg
xor
popa
xchg
js
pop
ja
testb
cmp
mov
aas
inc
js
sub
aaa
dec
push
inc
cwtl
shrl
outsb
fs
add
xlat
mov
movl
mov
sbb
jl
pop
imul
hlt
arpl
je
dec
inc
cmpl
bound
and
dec
xchg
stos
pop
push
pop
cltd
cmp
or
adc
mov
imul
xor
mov
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
xchg
xor
add
add
add
js
add
jl
add
add
inc
add
add
je
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
cmp
inc
add
add
inc
add
inc
inc
add
mov
xorb
loop
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jmp
mov
nop
nop
nop
nop
mov
mov
add
mov
mov
mov
nop
jmp
pusha
call
jmp
push
ret
call
jmp
mov
add
.byte
.byte
add
add
cld
mov
add
clc
add
add
add
add
jae
push
dec
pop
inc
out
sbb
stc
jb
pop
mov
lcall
jb
incl
and
jmp
xor
push
jo
sub
lods
add
jmp
sub
xchg
ds
or
push
shrb
add
add
add
roll
movb
das
add
and
arpl
cmpsb
mov
jmp
js
movsl
inc
add
clc
jmp
cmp
fstl
sbb
lahf
mov
jmp
mov
cmp
subl
jmp
sbb
jmp
pop
dec
or
mov
ljmp
jne
jmp
cmp
add
jmp
mov
stc
jmp
ss
jb
jnp
mov
clc
jmp
insb
call
jmp
cmp
popa
clc
jae
repnz
jmp
jne
inc
xor
push
vpsubd
fwait
inc
xor
or
shr
inc
xor
shlb
mov
int3
inc
or
mov
std
cmp
cmpb
jne
shlb
inc
popa
repnz
lods
cmc
lods
mov
cmp
mov
jl
inc
shrb
lods
jb
cmc
repnz
or
jae
shrl
xor
inc
mov
cmp
or
test
subb
hlt
jecxz
cmp
jmp
xchg
mov
repnz
cmc
lods
mov
xor
inc
mov
out
or
jle
cmpb
pop
xchg
adc
in
pop
adc
cmpl
xor
test
in
fmulp
hlt
jecxz
cmp
imul
xor
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xchg
sub
clc
lcall
outsb
aas
aad
jl
insl
xor
jno
