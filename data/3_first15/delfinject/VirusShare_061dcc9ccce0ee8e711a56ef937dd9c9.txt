lcall
mov
out
clc
jbe
call
movl
call
movl
call
jbe
call
movl
inc
jbe
inc
jbe
inc
jbe
inc
jbe
inc
jbe
inc
jbe
inc
jbe
cmp
test
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
out
add
xchg
sbb
call
out
cs
xchg
call
mov
dec
imul
xchg
sbb
das
repnz
inc
sbb
leave
popa
push
loopne
lret
and
call
jmp
pop
call
out
cli
inc
xchg
call
cmp
xchg
incb
xchg
ljmp
xchg
call
cmp
xchg
decb
xchg
ljmp
xchg
call
dec
adc
sbb
or
sbb
pop
call
negl
pop
ljmp
xchg
call
pop
fisubrl
leave
jbe
test
xor
leave
das
push
jmp
cmp
out
cwtl
inc
stos
sub
dec
movb
or
push
dec
pop
jbe
inc
pop
dec
xchg
call
push
cmp
rorl
insb
add
inc
or
push
sbb
sahf
cmp
jbe
les
inc
xchg
jae
dec
xchg
call
ret
pop
or
lods
push
sub
jbe
test
or
mov
movsl
icebp
stos
push
pop
sbb
inc
shrb
call
int3
ret
mov
stos
sahf
iret
mov
push
or
and
inc
and
inc
xchg
fsubrl
and
rcrb
rcrb
call
mov
into
out
cmp
stos
rorb
orb
outsl
pop
adc
or
mov
cltd
jno
cmp
dec
es
ds
pushf
and
push
pop
xor
movl
test
ds
mov
pop
int
pop
jmp
sub
subl
das
cmpsb
out
inc
and
mov
jmp
call
lret
xor
rcll
test
cmp
mov
xchg
call
cltd
jle
lds
je
jb
in
mov
outsb
jae
xorb
popf
das
mov
enter
fidivs
jg
sarb
xchg
call
sbb
inc
out
inc
shrl
dec
pop
int
push
sbbb
rcrl
and
mov
or
sbb
push
out
inc
and
mov
jmp
call
push
pop
push
std
decb
mov
xorb
daa
movsl
icebp
stos
push
pop
jmp
loope
inc
xchg
je
rolb
xrelease
in
enter
or
lcall
inc
xchg
je
shrb
mov
into
xrelease
call
fwait
rcrb
xchg
inc
xchg
call
cmp
sbb
mov
pop
lods
rolb
call
push
pop
sbb
in
xchg
sbb
mov
out
idiv
push
push
push
pop
leave
mov
push
xlat
jp
je
call
iret
arpl
or
sub
or
xchg
push
sbb
lret
inc
dec
mov
jmp
aad
iret
gs
loopne
mov
movl
loopne
lret
push
pop
mov
dec
pop
or
dec
cmp
mov
or
mov
push
xchg
mov
jmp
addb
outsl
outsl
addr16
inc
in
js
mov
push
dec
fnsave
cmp
movsl
hlt
inc
mov
and
movl
ds
rcrb
pop
or
push
mov
aam
mov
dec
inc
mov
sar
push
dec
inc
rcrl
or
inc
mov
or
dec
inc
pop
fcmovnbe
mov
dec
inc
push
pop
adc
xchg
inc
cmp
sbb
cmp
sub
dec
xor
push
add
or
ljmp
sbb
cmp
push
sbb
or
or
xchg
scas
push
gs
mov
xchg
call
push
lret
jno
cmpsl
xchg
dec
cmp
aam
movb
rol
cmp
cwtl
pop
repz
or
jmp
dec
and
mov
cli
movsl
hlt
inc
mov
jmp
jmp
addb
shlb
out
pop
iret
scas
xor
iret
cwtl
inc
mov
jno
arpl
ret
lock
dec
stos
push
pop
and
push
or
stos
mov
and
movsb
int3
push
pop
lret
stos
push
pop
jmp
shr
inc
xchg
call
shlb
mov
bnd
push
pop
jmp
shrl
xchg
call
ret
inc
xchg
inc
mov
sbb
push
pop
sbb
mov
inc
sbb
leave
inc
xchg
dec
push
dec
xchg
call
aam
jle
leave
inc
xchg
insb
lcall
call
cmp
dec
ljmp
jmp
jb
repnz
js
cmp
repnz
imul
pop
lret
push
xchg
dec
outsb
xchg
mov
jb
mov
xor
inc
push
push
sbb
cmp
stos
jno
dec
sbb
sbb
int3
daa
movsl
icebp
stos
push
pop
jmp
scas
push
jge
aas
mov
or
dec
sbb
lock
je
call
mov
or
jle
dec
and
push
lds
mov
out
ja
mov
outsb
mov
lahf
xchg
test
push
and
inc
cmc
stos
push
pop
dec
call
push
pop
pop
jbe
inc
pop
jbe
inc
pop
jbe
inc
in
dec
push
jns
icebp
mov
inc
xchg
test
push
out
enter
movl
inc
sub
jae
inc
neg
mov
call
gs
inc
out
stc
sbb
xor
loop
scas
jno
dec
pop
sub
pop
lods
call
sub
mov
rolb
dec
xchg
call
push
xchg
jae
clc
pop
cmp
cwtl
xchg
inc
mov
xchg
call
movl
stc
cltd
mov
rcrb
fadds
int3
push
or
stos
push
pop
sbb
sbb
cmpsb
out
das
lock
mov
push
fadds
cmpsl
push
enter
enter
mov
xchg
xlat
xchg
xchg
sbb
xchg
cmp
cltd
ljmp
inc
xor
pop
cmpsb
cmp
jbe
lods
rcrb
ljmp
inc
xor
pop
cmpsb
cmp
jbe
lods
int3
sahf
pop
jbe
inc
push
fadds
popf
cmp
xor
movl
mov
pusha
and
leave
iret
sarl
push
and
pop
xlat
sub
inc
push
lods
push
pop
push
fadds
mov
sbb
xchg
cmp
xchg
push
enter
mov
xchg
xlat
xchg
xchg
sbb
mov
push
fadds
test
sbb
xchg
push
enter
mov
xchg
xlat
xchg
xchg
sbb
or
cmp
cmpsb
sub
jbe
pop
fcomps
dec
ret
out
push
out
mull
and
int3
dec
xchg
call
enter
add
out
push
inc
jle
les
je
push
out
test
xchg
call
mov
ror
inc
xchg
jae
imul
add
int
mov
test
pop
icebp
sar
pop
dec
call
in
dec
out
mov
mov
lret
pop
push
sbb
rcr
or
rcr
hlt
mov
pop
stos
push
mov
push
testl
sub
jbe
pop
fstl
call
loopne
inc
sbb
enter
cmp
sbb
int3
dec
jmp
cmp
sbb
mov
adc
inc
cmp
pop
stos
cmp
jbe
gs
outsb
jle
inc
xchg
out
inc
xchg
call
movl
dec
int3
or
xchg
sbb
fwait
shrb
inc
xchg
call
enter
mov
xchg
call
movl
call
shrb
sbb
movl
stos
push
pop
and
in
dec
lea
int3
dec
xchg
call
adc
sub
imulb
aas
sbb
or
call
mov
xchg
stos
push
pop
and
int3
dec
mov
imull
sbb
movl
call
enter
push
mov
push
and
mov
clc
ret
inc
xchg
sarl
inc
xchg
call
fsubrl
test
fldenv
xchg
call
or
and
inc
xchg
jae
inc
xchg
call
push
inc
xchg
call
scas
sbb
call
in
jb
test
stos
pop
icebp
pop
movsb
jle
lds
call
mov
jmp
push
dec
sarl
inc
push
push
push
inc
xchg
test
pop
or
dec
xchg
call
dec
inc
xchg
call
push
xor
in
cmp
sub
cwtl
pop
mov
sub
movl
ret
jnp
inc
push
pop
testb
roll
je
jmp
dec
das
rcrl
ret
xor
cwtl
xchg
xor
xchg
xor
lahf
xor
mov
xor
cwtl
xchg
xor
jmp
aam
jle
movl
sub
int3
dec
xchg
call
enter
add
inc
or
in
pop
das
pop
faddp
inc
sbb
enter
or
lcall
shr
or
mov
cmp
imul
sbb
mov
jecxz
push
and
rcr
add
and
rcll
movsl
insb
ret
call
dec
pop
movsl
insb
mov
xchg
call
cmpsb
inc
xchg
call
leave
jbe
mov
dec
xchg
mov
jg
xchg
call
push
pop
mov
call
or
ds
pushf
push
mov
dec
sbb
aam
push
in
dec
and
push
mov
pop
or
push
das
xchg
mov
and
xlat
jmp
loop
xor
flds
sbbl
in
jp
in
mov
pop
push
je
xchg
sbb
or
pop
sbb
cmp
dec
cltd
jecxz
and
jb
jmp
xchg
shrb
mov
adc
dec
ror
adcl
xchg
sbb
mov
pop
je
dec
sbb
sub
jbe
jbe
inc
pop
out
xlat
xchg
xchg
sbb
dec
stos
cmp
jbe
stc
jbe
xchg
sbb
ljmp
ja
xchg
sbb
lcall
dec
mov
shlb
xchg
call
dec
dec
xchg
sub
jbe
shl
cmpsl
push
cmpsb
scas
jae
pop
xchg
pusha
in
or
hlt
movl
mov
push
xchg
stos
push
pop
jmp
mov
xchg
jmp
enter
pop
inc
or
push
pop
pop
mov
push
das
xchg
mov
mov
shr
pop
dec
call
das
xchg
ljmp
fwait
sbb
pop
sub
jbe
fs
or
dec
test
clc
dec
pop
or
pop
mov
leave
jbe
cmp
rcr
clc
add
push
pop
into
xchg
jle
mov
jp
jmp
leave
mov
push
fs
or
scas
jl
call
cmp
sbb
loopne
xchg
sbb
mov
out
not
pushf
cmp
rcrb
in
push
xchg
call
mov
xchg
call
and
cmp
pop
dec
shr
inc
xchg
call
lret
xchg
call
mov
mov
movl
add
jbe
jae
cwtl
cli
jno
rcr
lock
lcall
cmp
mov
push
push
out
inc
and
pop
jmp
mov
in
aas
push
inc
and
push
pop
dec
icebp
movl
call
fmul
out
lea
leave
jbe
jae
dec
call
cmp
xchg
in
cmp
cmpsb
hlt
inc
and
pop
and
dec
sbb
add
inc
xchg
call
rclb
pop
rclb
movl
ds
or
mov
cmp
pop
in
movl
xor
xor
mov
jle
mov
dec
in
mov
pop
sbb
rorb
sub
das
out
call
and
push
fadd
inc
lock
mov
xchg
sub
into
cmpsb
insl
lcall
fs
loopne
cmp
das
push
movl
mov
rorb
jo
lret
push
loopne
ret
mov
icebp
push
mov
call
inc
imul
mov
leave
xchg
jle
mov
push
lds
imul
pop
sub
dec
xchg
call
mov
jmp
jb
shlb
shrb
call
push
push
sbb
cmp
pop
stos
push
aaa
jle
mov
das
and
inc
pop
and
movsl
icebp
stos
push
pop
call
call
movl
mov
sbb
or
andl
xor
mov
or
dec
or
sub
lock
inc
pop
jbe
inc
mov
push
fcom
dec
inc
xchg
call
sbb
insl
sbb
cmp
out
inc
mov
xchg
call
lcall
les
iret
roll
push
dec
jp
loopne
call
enter
push
pop
sbb
les
sbb
dec
adc
call
mov
insb
je
inc
and
les
and
dec
xchg
call
shrb
fcmovb
inc
cmc
inc
and
jle
lret
inc
xchg
jae
iret
aam
or
mov
xlat
lret
movl
lock
cmp
mov
xchg
call
fwait
shlb
mov
test
inc
xchg
jb
rcrb
mov
dec
mov
rclb
in
cltd
xchg
sarl
rclb
out
aas
jle
lds
dec
mov
mov
movl
call
pop
cltd
out
fwait
js
je
fldt
and
mov
push
je
fldt
jmp
inc
iret
mov
dec
out
mov
stos
jno
rorb
in
enter
popf
cltd
pop
adc
sahf
rcr
inc
xchg
call
or
scas
jno
int3
push
pop
rcl
fsubp
leave
adc
pop
mov
xor
inc
dec
inc
or
dec
sbb
in
xchg
mov
inc
inc
xchg
call
and
mov
jbe
inc
jmp
jb
andb
xchg
call
xor
xchg
pop
xor
fsub
push
sahf
xchg
adc
cltd
push
ror
mov
mov
mov
pop
and
int3
shl
in
add
or
or
loopne
stos
xor
int3
mov
mov
and
pop
into
in
and
jmp
test
jg
pop
out
inc
push
aam
shr
in
push
addl
add
or
incl
cmc
mov
cmpsb
test
cmp
movsl
icebp
stos
push
pop
sbb
rorb
lods
push
pop
sbb
jg
mov
testl
or
push
xchg
mov
cmp
jmp
in
dec
xchg
call
lret
iret
test
shrl
aaa
xchg
call
adc
mov
icebp
push
xchg
call
cwtl
or
movl
pushf
movl
insl
mov
sbb
cmp
loopne
jecxz
jo
out
imul
cmpsl
jmp
shrb
in
inc
cmp
push
and
lock
adc
call
or
ds
rcrb
sahf
shlb
push
xchg
call
cmp
and
les
adc
dec
inc
adc
icebp
aaa
iret
mov
dec
pop
mov
push
dec
lods
rorb
pop
pop
rcll
adc
das
ds
and
sbb
pop
pushf
pop
lods
push
sbb
call
jae
inc
in
lret
and
rolb
in
aaa
xchg
shlb
sahf
iret
sarb
and
not
fsubp
icebp
pop
xchg
stos
leave
jle,pt
mov
xchg
jb
shrb
es
call
mov
sbb
cmp
jmp
jb
shl
in
shr
in
mov
mov
xchg
cmp
sahf
pop
mov
cmp
pop
ret
lock
or
jno
jo
dec
mov
jmp
jb
js
outsb
lcall
pop
jmp
push
loope
mov
sbb
mov
test
lahf
sbb
cmp
in
int
adcl
ret
inc
xchg
jb
rcrb
jno
rcr
in
cmp
jmp
cmp
mov
xchg
jb
das
push
jecxz
inc
pop
and
movsl
icebp
stos
push
pop
jmp
jb
shlb
nop
das
loop
inc
sbb
inc
pop
pop
fnstenv
rcrb
shll
aaa
xchg
call
push
pop
mov
shl
jmp
push
mov
cmpsl
out
push
pop
and
int3
inc
outsb
je
call
clc
movl
scas
shrb
mov
sbb
enter
enter
sbb
insb
jb
js
jae
shr
jmp
add
or
add
or
push
or
push
or
push
movsl
insb
dec
inc
xchg
call
push
inc
xchg
call
leave
adc
call
movl
call
movl
push
or
roll
pusha
call
divl
add
mov
cld
xchg
call
mov
jmp
popf
shr
push
ror
outsb
in
and
jae
jne
jae
cs
movl
sub
dec
repnz
lret
rcr
inc
xchg
call
mov
pop
rorl
shlb
dec
xchg
call
in
outsb
jb
lret
scas
xor
call
mov
cmc
inc
and
sub
cmpsb
hlt
inc
and
pop
jbe
inc
inc
stc
mov
sub
or
jae
lods
sbb
lret
dec
dec
das
sahf
pop
int
jp
movl
mov
dec
sbb
imul
cmp
inc
mov
xchg
push
xchg
pushf
xchg
sbb
inc
xchg
call
mov
sub
or
cmp
sahf
out
mov
mov
icebp
rcrb
or
and
inc
rcrl
psllq
and
mov
push
ret
sbb
enter
push
adc
sub
inc
xchg
aas
stc
inc
ficomps
sbb
or
ds
iret
cmp
loope
lret
lea
dec
ret
mov
movsl
hlt
inc
and
cmp
mov
or
icebp
dec
adc
sbb
inc
xchg
xor
mov
mov
xchg
xchg
jae
pop
pushf
insl
lcall
mov
dec
and
scas
push
xchg
call
scas
int3
sub
or
filds
cmp
or
stos
push
pop
jmp
push
in
xchg
sbb
or
push
lea
add
and
frstor
mov
and
dec
sbb
testl
dec
xchg
cmp
sahf
pop
jbe
inc
jmp
mov
fcomi
dec
pop
or
cli
push
rep
pop
fisubrl
leave
jbe
stos
push
pop
jmp
mov
push
xor
xchg
sbb
mov
int
jmp
idivl
jmp
or
sbb
shlb
sbb
inc
and
pusha
pushf
xchg
sbb
mov
xchg
call
testl
dec
dec
into
cmp
jbe
shrb
fwait
in
sbb
cwtl
lahf
lods
pop
out
xchg
lcall
movb
cli
xor
jmp
movl
push
cmp
mov
aaa
mov
pop
xor
stc
adc
ja
and
jae
sbb
jns
sub
lods
add
sub
addr16
sbb
out
or
xor
movl
add
inc
xchg
stos
push
pop
jmp
call
cmp
sbb
cmp
xchg
sbb
mov
xchg
call
rcrb
mov
call
jg
xchg
call
movl
sub
jbe
shlb
xor
idivb
popf
xchg
sbb
jmp
out
stos
and
repz
xchg
call
mov
xchg
call
leave
jbe
shl
das
xchg
call
mov
sbb
leave
jbe
cmp
int3
push
pop
mov
dec
rorb
inc
xchg
call
mov
xchg
shlb
popf
xchg
sbb
in
jmp
leave
jbe
test
jmp
dec
xchg
call
leave
jbe
lods
mov
mov
mov
jmp
mov
push
xor
imull
mov
int
in
jmp
cmp
mov
jp
inc
and
stos
adc
jbe
shlb
cmp
stos
push
pop
sbb
dec
popf
xchg
sbb
or
jae
jp
xor
sbb
mov
int
in
jmp
and
loop
enter
aaa
xchg
call
push
pop
sbb
push
popf
xchg
sbb
or
jns
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
jmp
mov
pop
lret
enter
dec
daa
adc
cmp
movsb
pop
cmc
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
movsl
lahf
mov
jle
mov
sub
push
sub
call
mov
jge
or
cmp
xchg
jle
lds
lods
push
pop
out
sbb
into
in
inc
out
mov
xchg
call
movl
call
out
xchg
call
lds
ror
inc
xchg
call
mov
push
xor
sbb
mov
int
in
jmp
and
repnz
out
xor
stos
push
pop
sbb
push
popf
xchg
sbb
or
jns
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
jmp
mov
push
xor
imull
mov
int
in
jmp
and
lcall
xor
stos
push
pop
sbb
pop
popf
xchg
sbb
or
jae
rcr
lock
insb
jns
movsb
pop
jbe
inc
jmp
mov
fcomi
scas
je
call
or
jae
lcall
or
jbe,pn
movl
jbe
inc
jmp
mov
and
rcrl
adc
cs
movl
jbe
inc
and
mov
movl
jae
jp
aas
push
cmp
sub
jp
jb
jg
xor
int3
push
pop
repnz
adc
shr
and
cltd
stos
push
mov
in
cmp
idivb
mov
xchg
call
push
mov
jmp
adc
xchg
repnz
shr
dec
push
mov
jae
scas
movsl
sahf
in
movsl
sahf
cmp
xchg
test
push
mov
test
cmp
cwtl
sbb
in
int3
into
jno
stos
stos
dec
rol
sub
dec
mov
fwait
imul
jnp
je
stos
pop
std
rorb
push
push
mov
cs
jnp
je
mov
in
gs
dec
push
mov
clc
jle
test
jae
lret
dec
and
stos
pop
xlat
jmp
ds
mov
jecxz
sbb
sub
shr
dec
sti
bswap
test
xchg
sbb
nopl
shl
pop
dec
adcb
mov
xchg
pop
iret
or
xchg
call
movl
jmp
rol
adc
dec
xchg
call
movl
call
int3
dec
pop
in
mov
stc
movl
call
movl
call
int3
inc
xchg
call
int3
cs
stc
movl
call
lret
shrb
xchg
call
int3
inc
xchg
call
cs
movl
dec
enter
inc
stos
xchg
pop
fcmove
adc
mov
xchg
pop
into
leave
adc
mov
xchg
call
movl
dec
jmp
and
call
cmp
mov
xchg
call
enter
or
lock
cld
cli
nopl
jns
jb
arpl
in
lret
jno
xchg
and
ret
icebp
dec
setne
mov
lcall
push
push
pop
xor
scas
xchg
call
push
mov
cmp
lret
das
inc
xchg
in
scas
xchg
jmp
cmp
jle
lds
insb
mov
mov
xchg
fidivl
push
rclb
xchg
lds
je
mov
sub
shr
sub
lcall
in
jno
add
mov
jae
dec
shrl
lock
adc
shl
sbb
mov
push
lcall
out
inc
xchg
call
adc
sub
inc
xlat
add
lcall
or
loope
cmp
mov
imul
pop
fcmove
adc
enter
adc
jle
lds
je
mov
jmp
out
lock
loop
rcl
loope
repz
out
jmp
and
jae
rcr
pop
mov
movsl
call
sbb
fdivp
movl
je
mov
and
inc
xchg
sbb
mov
shl
push
xchg
call
xor
movsl
call
sbb
stos
test
lcall
push
pop
jae
arpl
cmp
mov
and
in
fadds
sbb
cli
mov
sbb
ror
push
adc
mov
orl
cmp
pusha
inc
push
push
and
addb
cmp
inc
sbb
je
and
mov
xor
fidivrs
cmp
xchg
or
fidivrs
cmp
xchg
fsubp
or
fidivrs
cmp
xchg
loop
and
jmp
pop
and
fimuls
lahf
div
jge
cmpsl
idivl
test
sbb
sub
ljmp
and
mov
cwtl
adc
adc
inc
cmp
jg
dec
sub
cmc
push
rcr
dec
push
lahf
or
jle
cmpsl
and
rorl
cmc
mov
call
mov
inc
and
jmp
je
int3
mov
dec
fcoms
xor
or
movl
xor
jp
je
stos
and
fcom
loope
mov
fwait
idivl
cmpsl
jmp
sub
jbe
cld
loop
leave
jns
je
aam
imul
pop
push
leave
int
push
je
scas
push
ror
imul
dec
rcl
jns
lcall
dec
shl
xor
add
fnsave
shll
cmp
inc
lcall
and
push
dec
in
xlat
iret
stos
imul
xchg
aaa
xlat
lret
add
inc
and
jmp
lods
mov
mov
jae
cmpsl
pop
inc
in
dec
cltd
inc
adc
repnz
rcr
dec
lret
mov
jmp
outsl
pop
xor
in
dec
and
in
push
andl
mov
in
lret
xor
add
push
or
shr
add
pop
sbb
repz
push
movsb
xchg
and
dec
or
or
fsubl
xchg
mov
xchg
and
mov
repnz
adcl
cmp
orl
pusha
fdivrl
shll
mov
sahf
jb
adcb
adc
mov
out
adc
call
daa
movsl
icebp
stos
pop
xlat
and
sub
fidivs
xlat
std
stos
repnz
xlat
sbb
mov
sbb
dec
or
mov
xchg
jno
jnp
ljmp
jmp
cmp
adc
mov
and
or
cld
enter
or
dec
sub
push
dec
pop
stos
test
shrl
or
repnz
and
or
in
inc
xchg
jmp
push
jnp
je
shr
pop
push
sbbl
int3
enter
adcl
je
stos
and
shlb
jae
movsl
sahf
int3
push
pop
sub
rcr
or
and
sbbl
iret
or
xchg
call
in
shl
push
push
mov
jae
dec
fdivs
movl
outsb
mov
cltd
pop
rcl
gs
rcrb
or
call
out
jmp
pop
rcl
loope
repz
lret
rcr
sbb
mov
jae
xchg
shll
mov
sub
shl
or
sbb
and
shl
dec
push
lcall
adc
cmc
inc
and
jmp
mov
and
push
push
xchg
jmp
lcall
jno
push
leave
mov
sbb
push
call
enter
pop
xchg
call
pop
rcll
je
push
and
rolb
jae
das
push
in
inc
and
rolb
lock
sbb
push
hlt
inc
and
xlat
jmp
mov
jmp
in
cmp
rcll
insl
mov
and
les
je
inc
shll
dec
and
les
ljmp
xchg
call
cli
inc
xchg
call
mov
jmp
jno
push
jle
ret
inc
xchg
insb
inc
jae
fstpt
sbb
shr
in
push
xchg
sahf
jae
das
jecxz
inc
xor
push
lcall
int3
iret
loope
push
mov
outsb
mov
sarl
inc
mov
and
sbb
cltd
call
inc
rcr
pop
pop
pop
sub
inc
lcall
mov
xchg
js
xlat
sbb
mov
lcall
jnp
loop
mov
or
dec
inc
cmpsb
pop
ror
sbb
add
pop
lret
leave
push
lock
jno
or
sti
nopl
hlt
jns
jb
ja
mov
xchg
jno
mov
test
xlat
jmp
xor
shrl
mov
push
add
into
clc
cmp
ret
sahf
jo
dec
sbb
addr16
push
or
fadds
jg
push
mov
stos
pop
xlat
jmp
fistl
and
jg
or
or
push
lcall
add
loope
push
mov
jmp
dec
xchg
jae
sub
movsb
icebp
stos
push
or
movl
cmp
shl
and
xchg
fidivl
jae
sub
inc
xchg
call
pop
xlat
and
or
sub
pop
pop
jns
xlat
jmp
fisttpl
call
push
sbb
xchg
call
add
pop
rcll
inc
xchg
call
clc
jns
jb
xchg
inc
mov
jmp
je
lret
cmp
in
movl
ret
add
addr16
cmp
lock
sbb
inc
xchg
call
mov
xchg
call
and
mov
leave
cs
ljmp
scas
out
inc
cmc
inc
and
jmp
je
lret
cmp
xchg
adc
and
sbb
cmp
push
ljmp
push
out
inc
leave
mov
movb
mov
mov
add
jmp
sbb
mov
or
call
ds
sbb
leave
cs
out
inc
push
ljmp
ds
inc
cmc
inc
and
jmp
jae
rorb
jb
push
call
sbb
lret
shll
mov
jbe
movl
in
repnz
sub
addb
enter
or
cltd
jno
push
and
orb
cmp
jns
je
das
out
movl
call
dec
sub
jmp
fcoml
test
adcl
mov
movb
leave
inc
xchg
call
movb
fsubrl
lods
mov
xchg
call
mov
pop
ss
sbb
ror
mov
movb
popf
rcrb
insb
mov
push
and
lret
enter
sahf
rcrb
mov
xchg
call
dec
or
call
mov
push
sbb
cltd
rolb
pop
leave
mov
lds
je
rcrb
mov
jle
movb
inc
pop
and
daa
movsl
icebp
stos
pop
xlat
jmp
je
shrb
mov
xchg
call
add
push
std
orl
shll
inc
xchg
call
stos
inc
xchg
call
jb
xchg
call
mov
jmp
sti
dec
inc
cwtl
pop
rol
xchg
pop
int
fidivrs
ds
sbb
mov
pop
loop
dec
xchg
call
stos
dec
sarl
cltd
call
adcb
push
ror
lret
pop
pop
rolb
jg
dec
pop
cltd
insl
xchg
mov
sbb
lret
imul
or
pop
mov
rorl
cwtl
insl
lcall
jae
enter
inc
xchg
cmp
sahf
pop
ss
jb
inc
and
fcom
adc
push
in
out
inc
sbb
leave
ret
rclb
jg
xchg
call
movl
adc
or
sub
jbe
ds
es
sbb
outsb
fadd
inc
sbb
xor
out
inc
xchg
cmp
rcr
in
or
sub
shr
in
sbb
call
adc
mov
or
push
ret
inc
dec
xchg
pop
int
fcomi
mov
and
inc
xchg
call
or
mov
lret
push
mov
insb
xchg
inc
pop
cmp
iret
out
push
push
sbb
inc
or
xor
cs
and
cwtl
jle
mov
push
dec
icebp
movl
roll
xchg
call
push
xchg
loop
sbb
xchg
call
sar
xchg
call
lret
inc
xchg
jae
aas
leave
test
lcall
mov
ret
iret
inc
xchg
pop
iret
add
in
push
lcall
rcr
rorb
scas
call
iret
call
out
push
mov
adc
jbe
inc
xchg
call
movl
sub
lret
cmp
shr
mov
xchg
call
push
lcall
movl
xchg
jmp
int
xchg
jmp
mov
add
out
inc
sahf
pop
aam
push
rol
xchg
jmp
sar
xchg
call
lret
push
enter
sbb
shrl
rol
xchg
cmp
movd
xchg
outsb
mov
call
mov
sbb
movl
clc
dec
pop
or
push
int3
jle
movl
hlt
dec
pop
or
push
int3
and
inc
and
sbbb
movb
into
iret
sbb
movb
or
and
int3
roll
mov
jp
call
enter
xor
jle
inc
xchg
call
mov
push
clc
dec
xor
call
movl
loopne
mov
je
dec
and
iret
fcmovnbe
dec
les
cmp
iret
jmp
dec
inc
cwtl
pop
fmulp
xchg
jmp
push
pop
data16
fwait
call
adc
mov
dec
ljmp
and
fcom
pop
jb
das
xchg
call
movb
enter
movl
sbb
rcr
rorb
xchg
pop
fcom
jmp
add
jecxz
add
push
jb
daa
leave
mov
gs
xchg
call
sahf
rcrb
jbe
xchg
call
sahf
shl
rclb
rclb
jae
das
and
mov
and
mov
and
mov
or
cmp
ss
xlat
clc
mov
cwtl
jno
das
xchg
call
sbb
iret
and
movb
enter
movb
leave
inc
xchg
call
rolb
push
mov
sbb
mov
rorl
inc
xchg
call
push
lcall
aam
and
dec
jecxz
lret
or
mov
push
xchg
insb
push
inc
xchg
call
or
dec
rcrl
mov
and
mov
inc
xchg
call
push
xchg
xchg
jecxz
mov
nop
call
psrld
push
pop
jle
inc
xchg
call
movl
loopne
inc
sbb
movsl
outsl
push
inc
xchg
call
sbb
les
je
das
sahf
loope
inc
push
jmp
mov
jle
movl
jae
das
loope
inc
leave
mov
roll
adc
loope
push
mov
jae
pop
shrl
mov
test
int3
roll
call
push
mov
call
movb
fidivrl
xchg
call
and
jnp
mov
jne
inc
jmp
push
lcall
stos
inc
and
adc
clc
dec
cwtl
testl
cltd
jno
dec
fsts
xlat
enter
inc
pop
sub
leave
arpl
stc
jno
jns
xlat
es
xlat
rcrl
movsl
imul
call
dec
stos
xchg
call
push
dec
fucomp
mov
orb
int3
push
sbb
leave
inc
xchg
jb
mov
ljmp
movsl
and
lcall
shlb
xlat
into
ret
jmp
cmp
sbb
mov
mov
movl
pop
out
xchg
ret
cmp
dec
movsl
imul
fdivr
mov
inc
xchg
call
lret
jmp
movl
test
in
dec
movsl
imul
push
dec
fsubrl
inc
movsl
insb
gs
xchg
call
movl
adc
and
clc
add
and
movl
cli
nop
xor
call
cmp
lcall
and
rorl
jno
roll
pushl
mov
ret
cmp
dec
or
gs
mov
inc
jno
mov
mov
pop
or
mov
fsubs
or
dec
or
call
push
inc
xchg
mov
xchg
sar
jmp
dec
sbbb
or
mov
push
lock
nop
or
mov
xchg
call
aas
insl
rcrl
or
jg
xchg
call
lret
mov
repz
push
fwait
mov
lods
shlb
rep
cmpb
xor
std
inc
xchg
call
xor
or
mov
rcll
xchg
inc
push
pop
and
cmp
out
sahf
xor
call
outsl
mov
sbb
jbe
sub
jbe
test
or
insl
lcall
jmp
cmp
and
outsl
mov
mov
or
jno
or
test
mov
nop
or
stos
pop
xlat
jmp
mov
and
pop
rcl
pop
sbb
xchg
mov
icebp
stos
push
or
movl
test
jae
xchg
sbb
jp
xor
call
sub
mov
int
in
jmp
and
xchg
sub
jbe
rorb
xchg
call
push
pop
sbb
pop
popf
xchg
sbb
or
ds
pushf
sbb
fsubrl
loope
ss
cmp
and
clc
rcrl
xor
call
push
xchg
mov
jae
jp
shll
xchg
call
pop
mov
jae
imul
push
push
sbb
lea
pop
loope
inc
sbb
in
dec
or
push
dec
pop
sbb
mov
jae
das
xor
movl
mov
dec
or
rcrl
xchg
call
mov
adc
movl
cmp
cmc
inc
and
jmp
jae
rolb
pop
sub
test
sub
popa
sbb
int3
mov
lcall
jae
mov
push
mov
add
push
mov
cmp
lcall
mov
call
dec
pop
or
mov
sbb
int3
rcrl
xchg
jp
rcrl
pop
and
xchg
das
mov
lock
push
jle
mov
cmpsb
hlt
inc
mov
jmp
mov
push
xor
sbb
mov
int
in
jmp
and
ljmp
sbb
rep
push
pop
sbb
pusha
popf
xchg
sbb
or
enter
movl
sub
jbe
call
movl
call
enter
movl
inc
jbe
inc
jbe
inc
jbe
inc
jbe
inc
jbe
inc
jbe
inc
jbe
inc
jbe
call
leave
inc
xchg
call
aam
xchg
call
loopne
xchg
call
xor
push
sub
sbb
icebp
dec
or
call
sti
sbb
scas
mov
push
clc
movb
push
or
jle
pushf
inc
xchg
dec
push
dec
xchg
call
aam
pop
inc
and
jmp
rcll
xrelease
out
inc
hlt
inc
mov
jmp
rcll
lods
mov
xchg
call
push
pop
jmp
mov
pop
loope
popf
in
sbb
cmp
cs
rcr
in
insb
je
jp
ds
fld1
imull
mov
or
inc
xchg
je
lret
inc
push
repnz
aam
loopne
sbb
rorb
xchg
call
mov
mov
insl
mov
out
inc
sub
cmpsb
push
jg
xchg
sbb
mov
scas
lods
jo
or
popf
inc
xchg
aam
cmpsb
hlt
inc
and
out
sbb
mov
push
pop
mov
in
inc
rcl
or
das
push
rol
inc
lock
dec
mov
cmp
inc
rcl
or
das
cmp
movl
imul
clc
movl
lock
or
das
cli
rol
inc
xchg
pop
in
dec
jle
mov
xchg
je
rcrb
mov
or
ds
cwtl
and
push
inc
and
dec
ret
cmp
mov
in
pop
rcr
or
das
movl
or
inc
xchg
call
int
xchg
rorl
xchg
ds
rcr
or
das
rol
inc
pop
in
jmp
rorb
mov
and
movl
out
data16
mov
xchg
jb
push
and
mov
lcall
lods
fwait
call
and
jmp
fsts
push
jmp
sbb
jle
mov
shrb
out
inc
and
cmpsb
inc
xchg
inc
and
jmp
je
rcrb
out
xchg
call
xor
mov
or
scas
int3
push
call
pop
das
or
movl
jae
pop
jle
movsb
inc
xchg
cmp
rolb
cs
cs
movl
call
push
xchg
jno
imul
int3
xchg
and
xchg
jle
mov
xchg
outsb
mov
call
fsubs
ds
aaa
add
sbb
jle
mov
xchg
je
int3
jno
rcl
pop
rorl
xchg
call
mov
xchg
call
sti
insl
xchg
call
mov
and
rcrl
and
jmp
rcll
les
shrb
das
cmp
movl
jae
lret
sbb
mov
aas
pop
ds
rolb
andb
mov
ja
jno
jns
jb
sub
jmp
mov
push
enter
enter
push
mov
call
movl
aam
dec
xchg
call
lret
call
mov
inc
xchg
call
push
and
les
outsl
add
push
mov
sbb
fcmovnu
sbb
fcmovnu
sbb
es
inc
xchg
inc
lods
lret
enter
adc
rcrb
aas
and
lods
sbb
cmp
addr16
or
mov
js
rcr
int3
add
aad
mov
cwtl
cwtl
leave
cmp
add
jp
inc
and
push
das
enter
mov
inc
and
les
into
mov
mov
xchg
call
mov
jmp
mov
pop
rcrl
popf
in
jno
aas
pop
ds
shrb
or
inc
xchg
sbb
pushf
inc
cmova
dec
ja
jno
jns
jb
das
add
das
xchg
call
enter
enter
push
mov
call
movl
jae
cmp
rorb
xchg
call
sbb
inc
xchg
jae
das
lret
inc
dec
jmp
lret
call
push
mov
call
push
mov
call
adc
dec
xchg
call
leave
cs
mov
call
push
mov
call
adc
and
aam
mov
inc
aas
xchg
pop
rcl
jecxz
push
pushf
xchg
jmp
dec
les
fs
or
inc
xchg
je
cmp
rcr
daa
xchg
call
and
fucomp
not
fnsetpm(287
mov
insb
call
cltd
inc
xchg
aam
cmpsb
hlt
inc
push
sub
stos
push
pop
jmp
mov
pop
aad
popf
leave
ret
push
movsb
xorb
pop
ss
in
pop
and
les
or
movl
xor
jbe
out
stos
pop
or
xorb
fadd
inc
xchg
je
xor
les
repnz
les
idivb
mov
dec
xchg
call
ljmp
cmp
push
jle
stos
inc
xchg
jbe
aaa
out
enter
orl
in
enter
aam
in
inc
cmpsb
call
movl
je
aaa
and
rcr
fdivs
dec
xchg
xchg
pop
rcl
fs
cmp
lods
pushf
mov
jle
sahf
inc
xchg
outsb
mov
pushf
imul
pop
arpl
inc
and
outsl
xor
jbe
cs
cwtl
call
popf
inc
xchg
jbe
inc
jle
popf
inc
xchg
lods
mov
callw
jns
and
jnp
mov
jmp
mov
pop
rcrl
popf
in
sbb
movsb
xorb
pop
ss
in
aaa
leave
test
scas
xorl
clc
stos
pop
or
mov
cmpsb
sbb
test
mov
in
movl
jecxz
inc
and
mov
sub
lret
enter
enter
inc
cmp
stc
mov
xchg
sbb
jle
les
aam
rcr
fdivs
rcrb
sbb
or
jbe
xor
jae
add
cs
inc
and
mov
fneni(8087
mov
insb
call
lret
and
imul
inc
xchg
insb
inc
inc
xchg
pop
rcl
popa
je
cmp
scas
pushf
xchg
and
cmp
out
dec
lds
ds
fneni(8087
push
inc
jle
roll
sbb
das
or
and
ficoml
inc
jne
das
push
in
movl
call
movl
jae
movsb
pop
jmp
movl
push
ss
xchg
call
mov
arpl
sub
lret
push
pop
rcll
xchg
sbb
rcr
or
or
jae
jp
xor
xchg
sbb
mov
int
out
jmp
push
sub
inc
and
loopne
testl
xchg
aam
movsb
pop
jbe
inc
sbb
hlt
sahf
xchg
sbb
mov
xchg
sbb
dec
cwtl
call
movl
jns
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
jmp
mov
push
xor
loopne
imull
mov
int
out
jmp
and
push
xor
jbe
rorb
aas
rep
push
pop
sbb
clc
sahf
xchg
sbb
or
call
movl
call
movl
call
enter
movl
inc
jbe
inc
jbe
inc
jbe
inc
jbe
inc
jbe
inc
jbe
inc
jbe
inc
jbe
ss
enter
jbe
cld
jbe
aaa
enter
enter
sbb
sbb
jbe
call
movl
call
movl
call
enter
movl
inc
jbe
inc
jbe
inc
jbe
inc
jbe
inc
jbe
inc
jbe
inc
jbe
inc
jbe
ss
enter
enter
jbe
cmp
jbe
aaa
enter
or
dec
xor
mov
xchg
xor
jbe
call
movl
call
movl
call
enter
movl
inc
jbe
inc
jbe
inc
jbe
inc
jbe
inc
jbe
inc
jbe
inc
jbe
cmp
jbe
cmp
jbe
ss
enter
enter
enter
enter
enter
adc
shr
cmp
xor
movl
call
movl
call
movl
call
enter
jbe
inc
jbe
inc
jbe
inc
jbe
inc
jbe
inc
jbe
inc
jbe
inc
jbe
cmp
jbe
cmp
jbe
cmp
jbe
cmp
jbe
aaa
enter
enter
adc
jmp
push
push
pop
jle
enter
movl
call
movl
call
movl
call
enter
jbe
inc
jbe
inc
jbe
inc
jbe
inc
jbe
inc
jbe
inc
jbe
cmp
jbe
cmp
jbe
cmp
jbe
cmp
jbe
cmp
jbe
aaa
enter
enter
push
mov
dec
sbb
jmp
je
lret
push
cmp
iret
lret
leave
xchg
jmp
mov
mov
movl
sub
jns
jmp
mov
push
enter
mov
das
lcall
jbe
jae
sti
inc
sub
jbe
jae
das
mov
dec
and
stos
push
pop
out
xor
xchg
call
mov
inc
xchg
call
xor
call
mov
xchg
mov
push
and
ds
cwtl
and
push
cmp
shll
and
push
lcall
mov
call
jmp
cmc
inc
and
jmp
loop
cmp
shll
and
push
lcall
mov
call
jmp
cmc
inc
and
out
enter
jb
xchg
call
mov
or
mov
sahf
out
pop
rep
rolb
imul
jmp
push
dec
xchg
cmp
iret
fimull
iret
ljmp
clc
cwtl
jae
rcrb
in
jmp
ljmp
inc
or
mov
sahf
out
pop
and
jmp
ljmp
or
icebp
pop
pop
jbe
inc
jmp
mov
pop
insb
inc
push
xchg
pop
rol
adc
movl
jmp
sbb
inc
or
dec
les
pop
int3
xor
lock
pop
and
and
sahf
call
pop
lret
shlb
rcll
add
mov
sub
iret
fimull
rcrl
xchg
xor
mov
jb
leave
aam
cmp
out
add
enter
push
mov
and
fmul
fimull
rcrl
sbb
and
leave
pop
add
push
pop
jmp
mov
pop
loope
popf
and
push
aaa
pop
rolb
or
xchg
call
cmp
inc
xchg
call
lret
imul
pop
rol
adc
movb
ds
addl
rcl
data16
shll
mov
scas
out
push
das
jb
aas
pop
ds
rcr
loopne
pushf
xchg
inc
and
xchg
jne
inc
jmp
je
rolb
jae
shlb
mov
out
dec
rol
daa
movsl
icebp
stos
push
pop
jmp
je
rolb
jae
shlb
mov
out
push
rol
daa
movsl
icebp
stos
push
pop
jmp
pop
ror
pop
fnstenv
rolb
sbb
rcrb
lret
call
lret
jno
xlat
add
int
xchg
call
push
push
cmc
inc
and
and
int3
cs
movl
sbb
cs
out
inc
sbb
mov
jmp
mov
pop
loope
popf
and
push
aaa
leave
mov
adc
ds
fsubr
scas
adc
cs
in
mov
inc
and
jmp
je
loopne
cmp
and
cltd
lcall
inc
or
mov
sahf
out
pop
rep
rolb
jae
lcall
mov
jle
mov
je
rolb
cmp
inc
leave
mov
enter
mov
jno
xlat
cs
scas
movl
call
push
or
lcall
cwtl
jmp
pop
ror
pop
fnstenv
rorb
rcll
dec
dec
inc
xchg
call
mov
xchg
call
lcall
call
sahf
rcrb
out
inc
xchg
call
push
or
movb
mov
adc
enter
push
or
fwait
call
mov
lods
daa
movsl
icebp
inc
and
pop
jmp
call
mov
pop
adc
scas
test
imul
lret
jno
iret
rcrl
or
call
or
cmp
iret
fdivp
mov
jmp
je
push
sbb
inc
imul
inc
and
jno
outsb
mov
les
in
lret
mov
lock
call
mov
leave
ficoms
cmc
inc
and
cld
imul
cld
out
mov
out
mov
xchg
cmp
xor
fcom
clc
mov
jmp
mov
push
and
int
je
das
out
inc
icebp
stos
push
pop
jmp
mov
jmp
call
imul
xchg
rorb
xchg
call
mov
dec
ja
jno
shr
in
or
movl
inc
sub
cmpsb
push
ficomps
xchg
shll
xor
mov
inc
sbb
push
pop
jmp
call
mov
inc
xchg
call
rcrb
or
lock
or
xchg
inc
and
jmp
je
das
cs
push
mov
clc
and
jmp
je
mov
push
enter
dec
inc
xchg
call
ret
inc
xchg
je
shrb
mov
sahf
out
lret
jno
aam
in
in
push
adc
mov
and
inc
mov
jmp
mov
jmp
jae
call
dec
ljmp
fnsetpm(287
sti
push
jmp
test
xchg
sbb
dec
push
and
pop
rcrl
xchg
call
and
call
in
fs
call
mov
aam
mov
jmp
jae
shrb
mov
sahf
out
pop
and
mov
out
inc
and
jmp
frndint
and
jmp
je
rclb
stc
push
sbb
xchg
call
add
adc
sub
sbb
lods
push
pop
xchg
cmp
movsl
hlt
inc
mov
jmp
call
add
mov
call
cmpsl
inc
xchg
jb
roll
in
push
adc
stos
and
mov
or
push
or
xchg
sbb
xor
insl
mov
mov
jae
cs
inc
and
stos
mov
jae
rcrl
and
stos
daa
movsl
icebp
stos
push
pop
jmp
ficoml
and
push
mov
insl
mov
dec
xchg
outsb
mov
adc
add
stos
rcl
insl
je
das
mov
fs
jmp
jae
shlb
add
call
mov
cwtl
sbb
or
jae
jp
xor
imull
mov
int
out
jmp
and
ret
jbe
rcrb
or
call
push
pop
sbb
cld
sahf
xchg
sbb
or
jae
jp
xor
sbb
mov
int
out
jmp
and
cli
cmp
jbe
shl
or
stos
push
pop
sbb
add
jmp
mov
push
ds
ljmp
shlb
jmp
and
xor
scas
or
stos
push
pop
sbb
add
xchg
sbb
or
jae
jp
xor
call
sub
mov
int
out
jmp
and
push
enter
jbe
xchg
call
push
pop
sbb
or
jmp
mov
push
xor
imull
mov
int
out
jmp
and
mov
sarb
or
stos
push
pop
sbb
or
xchg
sbb
or
jae
jp
xor
sbb
mov
int
out
jmp
and
fidivrl
push
or
stos
push
pop
sbb
adc
jmp
mov
push
xor
sbb
mov
int
out
jmp
and
adc
enter
into
or
stos
push
pop
sbb
adc
xchg
sbb
or
jns
xlat
es
pop
jmp
mov
push
ds
jmp
imull
mov
int
out
jmp
and
push
ds
mov
xchg
call
push
pop
sbb
sbb
jmp
mov
push
xor
call
sub
mov
int
out
jmp
and
mov
enter
push
or
stos
push
pop
sbb
sbb
xchg
sbb
or
jns
xlat
es
pop
jmp
mov
push
xor
imull
mov
int
out
jmp
and
lret
jbe
rclb
or
stos
push
pop
sbb
and
es
xlat
es
pop
es
xlat
es
pop
jmp
mov
push
xor
sbb
mov
int
out
jmp
and
adc
enter
into
or
stos
push
pop
sbb
and
xchg
sbb
or
jae
lret
sbb
and
push
push
jle
nop
inc
xchg
je
rcrb
dec
xchg
call
mov
push
call
sti
push
jmp
iret
popf
xchg
sbb
dec
push
and
pusha
call
sbb
inc
xchg
jae
rcr
in
sbb
xchg
inc
xchg
je
inc
jle
xchg
inc
xchg
je
rcr
loopne
adc
addl
mov
cmpsb
push
popf
xchg
sbb
mov
sbb
xchg
call
movl
inc
and
je
rorb
in
rcl
cmp
popf
in
jb
inc
xchg
sti
push
cld
mov
mov
adc
jae
repz
add
mov
popa
jae
cmp
andb
mov
es
rclb
jno
leave
pop
jmp
dec
inc
and
push
sbb
inc
xchg
dec
jne
shrb
dec
or
push
pop
fstl
lret
out
cmp
scas
repz
jns
xlat
pop
lock
cld
xchg
mov
inc
aam
shlb
movsb
mov
jae
lret
add
es
hlt
inc
aaa
add
or
cs
cmp
shrb
lret
mov
and
repz
jno
shrl
dec
fsubl
into
mov
pop
rep
mov
es
iret
inc
fisttpll
xor
mov
and
or
rorb
jo
rcrl
lea
xchg
cmp
and
push
inc
and
lret
push
and
lret
push
push
in
mov
es
rcrb
cmpsb
mov
es
add
or
push
xlat
es
xor
repnz
mov
es
push
push
sbb
mov
sarl
pop
xlat
sbb
lret
dec
push
push
cltd
mov
adc
fldt
testl
lods
and
dec
or
cmpl
jb
lods
sbb
mov
jae
push
jno
stc
es
add
roll
jns
xlat
and
cltd
sbb
movl
mov
and
inc
mov
icebp
jae
jb
xchg
lcall
mov
mov
es
push
dec
sbb
mov
jmp
lock
lret
push
out
inc
lret
pop
icebp
shll
or
inc
daa
movsl
icebp
stos
sbb
repnz
xlat
es
inc
xchg
call
lcall
fmull
or
dec
pop
lcall
inc
jmp
mov
push
xor
xchg
sbb
mov
int
out
jmp
and
push
inc
enter
fiaddl
xchg
call
push
pop
sbb
sub
jmp
mov
jmp
rcll
shll
push
jmp
nop
mov
dec
push
and
jle
movl
call
pop
pop
and
sti
push
lock
and
out
call
mov
pop
call
xchg
aam
rcrb
and
jae
lret
sbb
jmp
push
pop
and
les
es
inc
leave
test
scas
leave
inc
enter
clc
stos
pop
or
mov
push
mov
call
xchg
inc
xchg
outsb
mov
test
rclb
sbb
mov
cmpsb
push
add
xchg
roll
xor
cmpsl
movl
inc
and
jae
cwtl
jmp
je
rcr
in
insb
pop
call
xor
lock
sub
mov
or
inc
xchg
je
lret
inc
push
and
les
fwait
ss
cmp
lock
and
lock
mov
pop
call
xchg
aam
rcrb
mov
jmp
mov
pop
aad
popf
in
sbb
xchg
mov
inc
and
push
mov
call
jnp
xchg
sbb
dec
push
addr16
ret
push
pushf
xchg
cltd
and
cli
out
inc
and
dec
cmp
xchg
call
push
adc
xchg
call
mov
xchg
call
push
mov
out
dec
xchg
push
enter
enter
mov
pop
call
ds
call
push
mov
shrl
or
mov
popf
xchg
jae
inc
jle
mov
insb
inc
cmp
lock
rcr
hlt
pop
rcr
loopne
mov
push
enter
sbb
push
mov
inc
sbb
in
rcr
lock
rcr
hlt
pop
rcr
loopne
mov
jae
cmp
lea
cmp
cmpb
nop
arpl
int3
push
clc
pop
or
cs
jle
xchg
inc
xchg
sbb
mov
cmpsb
push
andb
rorl
or
roll
or
cmpsb
movl
inc
and
jnp
mov
jne
inc
jmp
mov
pop
rcrl
popf
in
sbb
xchg
mov
inc
and
push
mov
call
les
dec
push
addr16
ret
push
pushf
xchg
cltd
and
movl
jbe
inc
xchg
call
push
adc
xchg
call
xchg
or
call
xor
ljmp
jle
lea
cmp
das
push
mov
inc
sbb
movl
les
fisubrs
repz
aas
leave
rcr
in
aam
call
enter
mov
cmp
lea
je
aam
rcrb
mov
jne
aaa
out
enter
mov
jle
xchg
inc
xchg
outsb
mov
cwtl
jl
xchg
je
aam
rcrb
sahf
and
mov
rcr
aam
das
mov
movl
rolb
cs
into
jae
dec
and
mov
cmpsb
fwait
leave
xor
popf
movl
insb
jl
xchg
je
xor
shlb
xchg
call
and
repz
mov
push
call
mov
push
call
test
aam
rcrb
mov
sahf
call
mov
pop
fstps
popf
leave
ret
push
movsb
xchg
cmp
ss
in
aaa
and
rcr
in
nop
pop
call
mov
pop
call
xor
call
sub
mov
mov
popf
imul
and
mov
jbe
shrb
stos
movl
lods
movl
add
inc
xchg
sub
shlb
sbb
push
outsb
aam
rcr
fadds
shr
loopne
mov
rcr
fdivs
xchg
and
shrb
stos
movl
mov
pushf
xchg
je
das
and
inc
and
mov
leave
ret
sti
push
lock
and
repz
orb
cs
test
inc
pop
shlb
xchg
call
mov
lcall
inc
xchg
call
movl
call
movl
fstpl
jp
jb
cmp
ss
in
pop
and
les
out
stos
movl
stos
movl
inc
enter
clc
stos
pop
or
mov
push
pushf
mov
pop
or
roll
or
loopne
adcb
xchg
mov
push
pushf
xchg
je
das
shl
movl
inc
and
hlt
call
orb
and
mov
xor
lods
and
jnp
mov
call
movl
jae
lret
sbb
jecxz
push
pushf
xchg
je
rcr
in
or
jp
xor
xchg
sbb
mov
or
lcall
ds
rcrb
xchg
inc
xchg
call
and
in
inc
jne
inc
jle
xchg
lods
mov
push
call
mov
jmp
mov
pop
fstpl
popf
in
jae
shr
in
aas
and
les
imulb
sbb
jbe
out
stos
pop
or
and
scas
mov
push
call
sbb
fcmovnu
sbb
xchg
call
rcrb
inc
inc
xchg
call
xchg
mov
jmp
mov
pop
call
enter
mov
push
stos
movl
je
cmp
jp
xchg
je
aas
jle
jns
xchg
pushf
leave
jns
inc
and
xor
jbe
les
repnz
movl
call
daa
movsl
icebp
jae
movsb
pop
jbe
inc
jmp
mov
pop
fstpl
popf
in
jae
shr
in
aas
and
les
push
stos
movl
dec
enter
clc
stos
pop
or
and
scas
mov
push
call
sbb
fcmovnu
sbb
cwtl
call
rcrb
mov
pop
or
xchg
mov
jmp
mov
pop
call
enter
mov
push
movl
je
cmp
jns
xchg
je
aas
jle
jns
xchg
pushf
leave
jns
inc
and
dec
enter
les
dec
cmpsb
movl
call
daa
movsl
icebp
jae
movsb
pop
jbe
inc
jmp
mov
pop
fstps
popf
in
jae
shr
in
aas
and
rcr
in
pop
push
call
xor
call
sub
mov
or
das
push
cmpsb
movl
je
das
cmp
movl
in
bswap
jle
cmp
int3
mov
out
or
shr
in
push
jle
ret
inc
xchg
aam
jns
insl
mov
and
push
or
jmp
mov
push
call
or
das
ficompl
mov
inc
pop
cs
dec
leave
test
mov
icebp
sub
jne
inc
jle
test
lods
mov
dec
call
or
sarb
mov
jne
inc
jmp
mov
pop
fstpl
popf
in
jae
shr
in
aas
and
les
loop
movl
dec
enter
clc
stos
pop
or
and
test
dec
and
rclb
in
movl
mov
mov
call
fneni(8087
push
inc
pop
out
push
mov
call
and
jne
inc
jne
inc
jle
test
lods
mov
dec
call
mov
rep
push
pop
jmp
mov
pop
fstpl
popf
in
jae
shr
in
aas
and
les
bound
sbb
jbe
out
stos
pop
or
and
scas
mov
push
call
sbb
fcmovnu
sbb
cltd
call
rcrb
mov
xchg
call
push
or
mov
scas
mov
push
call
or
das
mov
shrb
xchg
movl
inc
and
clc
call
mov
push
call
jg
xchg
aam
rcrb
mov
jmp
mov
pop
aad
popf
in
sbb
inc
pop
ds
in
mov
call
test
dec
push
addr16
ret
sti
push
pop
lock
pushf
mov
movl
jbe
inc
xchg
call
push
adc
xchg
call
es
xchg
call
xor
ljmp
jle
xchg
cmp
xchg
cmp
int3
push
pop
cmp
fcmovnu
sbb
fneni(8087
mov
push
call
xchg
aam
jmp
ljmp
jmp
xor
cs
add
xor
cs
inc
xchg
outsb
mov
lods
mov
add
xor
cs
add
push
mov
call
sbb
pop
scas
movl
insl
mov
xor
lock
mov
call
and
rorl
jbe
cs
inc
jle
addb
mov
dec
call
mov
rep
push
pop
jmp
mov
pop
fstpl
popf
in
sbb
pushf
xchg
je
rcr
in
pusha
push
call
xor
call
sub
mov
mov
mov
xchg
je
int3
mov
aam
loopne
shlb
dec
xchg
call
mov
push
call
sbb
add
push
mov
call
mov
outsb
mov
jae
inc
jle
addl
nop
jb
jbe
dec
and
les
scas
cmpsb
movl
cmpsb
movl
rorb
pop
movsl
jl
rcr
fcompl
das
lods
movl
dec
push
push
cli
sub
jne
aas
push
jmp
inc
xchg
rcl
add
sahf
movl
inc
and
jnp
mov
jmp
mov
pop
rcrl
popf
in
sbb
movsb
xchg
inc
pop
ds
rorb
sub
pushf
bound
ja
jno
jns
je
inc
dec
jge
inc
sarb
add
movsl
insb
mov
mov
ljmp
jle
test
cmp
das
fisubrl
les
jmp
xlat
lret
pop
jmp
or
jno
xor
cs
mov
xchg
push
enter
enter
sbb
fcmovnu
mov
push
call
push
mov
call
dec
xchg
call
or
or
shll
xchg
call
mov
outsb
mov
lods
mov
sbb
cmp
shr
aam
pusha
push
call
xor
sti
call
push
mov
lret
inc
xchg
call
shr
rclb
xchg
je
das
xchg
out
inc
sbb
mov
push
fcmovne
inc
xchg
insl
mov
inc
xchg
aam
rcr
fcompl
das
fisubrs
les
fisubl
cwtl
pop
call
pop
or
test
mov
imul
inc
xchg
jbe
aaa
jle
addb
or
inc
xchg
lods
mov
dec
call
mov
rep
enter
movl
call
dec
or
fistl
and
jbe
xchg
je
rcrb
add
jmp
mov
jmp
mov
dec
icebp
movl
xor
inc
jmp
fcoml
mov
inc
and
shrb
movsb
movl
push
enter
clc
stos
pop
or
mov
call
xor
ljmp
jle
addl
push
mov
call
dec
cmp
call
leave
or
xchg
call
into
icebp
xchg
call
sti
and
lods
inc
lcall
mov
xchg
push
enter
or
rcr
rcrb
das
loop
movl
jmp
xor
lods
xchg
in
ds
mov
mov
pop
call
mov
inc
xchg
jne
xor
lods
das
push
movsl
movl
mov
push
push
and
lods
das
adc
inc
or
push
mov
aad
mov
call
orb
and
incb
call
adc
das
lcall
aam
enter
rorl
inc
xchg
call
test
or
mov
adc
das
jbe
movl
rclb
rcl
inc
xchg
call
inc
scas
xchg
sbb
bound
jle
movb
cmp
inc
jne
mov
mov
inc
xchg
pop
nop
scas
add
jbe
cs
pushf
call
addb
nop
inc
sbb
dec
or
push
mov
adc
das
push
mov
mov
jecxz
push
mov
call
inc
scas
xchg
sbb
push
je
daa
jle
movb
cmp
inc
out
and
push
xor
jne
xor
movl
call
mov
jne
add
ss
jmp
mov
dec
call
push
xchg
jb
or
inc
xchg
call
xor
jne
jmp
cs
push
out
inc
xchg
pop
subb
pop
movsb
scas
add
jbe
cs
pushf
call
addb
or
das
xor
mov
lret
movl
call
sbb
add
and
xor
jne
call
movl
call
jp
xchg
call
jb
xchg
call
push
xchg
call
movl
dec
mov
lcall
inc
cwtl
call
movl
call
movl
ds
cmp
ds
shrb
or
inc
xchg
sbb
pushf
lods
xor
dec
ja
jno
mov
jae
shr
in
or
les
je
jp
inc
and
bound
jbe
les
ret
inc
pop
sarb
xchg
call
mov
jmp
mov
jmp
ds
shrb
or
inc
xchg
sbb
pushf
incb
ja
jno
mov
jae
shr
in
or
les
je
jp
inc
and
mov
les
push
movl
call
mov
jmp
mov
push
xor
xchg
sbb
mov
int
out
jmp
and
out
push
enter
repnz
stos
push
pop
sbb
sub
xchg
sbb
or
mov
dec
adcb
scas
push
enter
mov
jb
leave
rorl
cmp
test
dec
leave
test
or
and
inc
jae
xchg
jle
mov
mov
lahf
xchg
sbb
xchg
add
not
cltd
cmp
ljmp
xor
jae
xchg
jle
mov
mov
xchg
sbb
mov
cltd
cmp
ljmp
xor
jae
xchg
jle
xchg
mov
xchg
sbb
mov
cltd
cmp
ljmp
xor
jae
xchg
jle
xchg
mov
xchg
sbb
out
jmp
mov
push
call
leave
jbe
mov
lret
xchg
jle
xchg
mov
xchg
sbb
pop
add
not
cltd
cmp
ljmp
xor
jae
xchg
jle
xchg
mov
xchg
sbb
aaa
add
not
cltd
cmp
ljmp
xor
jae
xchg
jle
xchg
mov
xchg
sbb
addr16
not
cltd
cmp
ljmp
xor
jae
xchg
jle
xchg
mov
xchg
sbb
push
add
not
cltd
cmp
ljmp
xor
jae
xchg
jle
xchg
mov
xchg
sbb
addl
not
cltd
cmp
ljmp
xor
jae
xchg
jle
xchg
mov
mov
jmp
mov
push
call
leave
jbe
jo
inc
jae
xchg
jle
xchg
mov
jmp
jmp
mov
push
call
leave
jbe
mov
lret
xchg
jle
xchg
mov
dec
icebp
stos
enter
or
add
movl
pop
aaa
stos
sti
pop
cmp
push
cmp
stos
sti
pop
cmp
pop
enter
cmp
add
sub
mov
sti
sub
inc
fisttpll
xchg
add
xor
sti
sub
movl
dec
cmp
mov
sti
aas
enter
cmp
add
xor
sti
sub
movl
dec
cmp
lods
add
push
aaa
mov
call
cmp
add
scas
jmp
pop
sub
mov
jmp
push
xor
adc
mov
or
aaa
mov
or
fisttpll
xchg
negl
lods
cli
xor
sti
sub
inc
fisttpll
mov
pop
xor
or
cmp
notl
mov
dec
cmp
sti
pop
xor
or
cmp
notl
mov
dec
cmp
negl
lods
cli
xor
sti
aas
enter
cmp
sti
pop
xor
or
cmp
notl
sahf
xchg
call
cmp
sti
pop
xor
or
cmp
notl
sahf
xchg
call
cmp
mov
dec
or
lcall
mov
fisttpll
xchg
or
lods
or
add
rcr
cs
call
mov
in
aas
push
inc
and
push
pop
jle
les
insl
mov
out
push
lcall
mov
leave
test
movsl
icebp
inc
mov
jne
inc
jmp
je
shrb
push
inc
xchg
call
push
popf
jmp
jmp
mov
jmp
mov
push
xor
xchg
sbb
mov
int
out
jmp
and
out
enter
cli
repnz
call
push
pop
sbb
xor
jmp
sbb
xchg
testl
push
enter
test
jb
leave
shr
lret
movl
jae
xchg
jle
test
mov
add
not
cltd
cmp
ljmp
ss
jae
xchg
jle
test
mov
add
cmp
ljmp
ss
jae
xchg
jle
addl
lods
lahf
xchg
sbb
arpl
cmp
ljmp
aaa
inc
jae
xchg
jle
addl
mov
xchg
sbb
popl
cmp
ljmp
aaa
inc
jae
xchg
jle
addl
mov
scas
add
cmp
ljmp
aaa
inc
jae
xchg
jle
addl
les
add
cmp
ljmp
aaa
inc
jae
xchg
jle
addl
int3
lahf
xchg
sbb
out
add
cmp
ljmp
aaa
inc
jae
xchg
jle
addl
aam
xchg
sbb
syscall
jmp
mov
push
call
leave
jbe
and
mov
out
jmp
cli
push
icebp
stos
js
icebp
stos
enter
cmp
les
xchg
call
sub
mov
push
xor
push
sub
xchg
call
sub
or
mov
pop
cmp
fimuls
mov
sbb
or
lods
push
pop
enter
sub
or
fimuls
mov
sbb
lods
push
pop
enter
aaa
mov
dec
xor
leave
sbb
lods
testl
or
sub
inc
out
aaa
stos
sti
pop
cmp
xor
out
aaa
stos
sti
pop
cmp
ss
inc
out
aaa
stos
sti
pop
cmp
xor
out
aaa
stos
sti
pop
cmp
ss
inc
ljmp
js
push
cmp
ljmp
js
dec
inc
mov
jecxz
sub
add
js
push
cmp
jecxz
sub
add
js
dec
inc
mov
jecxz
sub
add
js
push
cmp
jecxz
sub
add
js
dec
inc
mov
jmp
shll
push
pop
rcrl
jmp
sti
push
hlt
inc
mov
jmp
shll
push
pop
rcrl
jmp
sti
push
hlt
inc
mov
jmp
shll
push
pop
rcrl
jmp
sti
push
hlt
inc
mov
jmp
mov
mov
movl
cs
and
rclb
xchg
sbb
or
jae
das
mov
movl
cs
and
rclb
xchg
sbb
or
jae
jp
ds
push
jmp
sub
mov
int
out
jmp
and
inc
pop
enter
sahf
out
xchg
call
push
pop
sbb
xchg
lahf
xchg
sbb
or
jns
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
jmp
mov
push
xor
imull
mov
int
out
jmp
and
ret
jbe
rcrb
out
xchg
call
push
pop
sbb
fcompl
sbb
jbe
call
movl
call
movl
call
enter
movl
inc
jbe
inc
jbe
inc
jbe
inc
jbe
inc
jbe
inc
jbe
inc
jbe
inc
jbe
call
lret
call
int3
inc
xchg
call
fadds
call
faddl
call
sub
or
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
es
xlat
es
pop
jmp
mov
pop
rcrl
popf
in
sbb
movsb
xorb
pop
ss
mov
fs
xchg
je
aas
jle
ja
xchg
sbb
pushf
cmpsb
cmp
dec
ja
jno
jns
je
inc
jle
jne
xchg
je
int3
mov
add
cs
dec
ljmp
fnsetpm(287
mov
inc
call
push
pushf
mov
push
cmc
xchg
call
inc
cmp
notb
sahf
jae
aaa
jle
jae
xchg
aam
rcr
fdivs
xor
leave
inc
xchg
call
les
add
mov
fcmovnu
mov
inc
call
imul
xchg
jbe
xchg
call
and
or
not
fcmovnbe
orb
cs
xchg
movl
call
jae
xchg
lods
mov
cmp
xor
mov
lcall
mov
push
enter
enter
fcoms
xchg
outsb
mov
dec
call
addb
mov
jbe
inc
jmp
mov
pop
leave
sbb
fnsetpm(287
push
mov
call
xor
dec
push
addr16
daa
enter
enter
xchg
push
pop
out
push
xchg
jae
inc
jle
jbe
xchg
cmp
das
inc
out
inc
and
test
add
pop
das
adc
movl
call
and
or
not
fnsetpm(287
mov
inc
call
insl
inc
xchg
aam
mov
jmp
mov
pop
loope
rcr
in
mov
call
lods
mov
dec
push
addr16
daa
enter
enter
push
inc
xchg
call
leave
push
xchg
jae
inc
jle
jne
xchg
cmp
das
into
in
inc
leave
mov
sbb
xchg
jle
lds
cmp
cmp
inc
and
sbbb
les
mov
rcrb
xchg
call
and
jae
cwtl
jmp
les
push
xchg
movl
pop
enter
clc
stos
pop
or
xchg
push
enter
movl
test
movsb
inc
call
addb
sbb
xor
movl
call
and
or
not
fnsetpm(287
mov
aas
call
insl
inc
xchg
aam
mov
jmp
mov
pop
fstps
popf
leave
ret
push
movsb
xchg
cmp
ds
in
mov
call
mov
mov
call
stos
repz
call
adc
inc
dec
push
addr16
daa
enter
enter
cli
inc
xchg
call
push
mov
call
les
je
rcr
loopne
add
xchg
add
xor
jmp
push
mov
call
or
popf
jle
ret
inc
xchg
push
sub
xchg
sbb
mov
xchg
sbb
jecxz
jmp
orb
cs
xchg
movl
hlt
jg
xchg
call
movl
call
and
or
not
fcmovnu
orb
cs
movl
xchg
movl
call
push
sub
stos
rolb
call
movl
xor
cmp
pop
cmp
repnz
lods
or
inc
xchg
call
movl
call
movl
push
cmp
jmp
mov
pop
fstpl
popf
pop
ss
mov
les
dec
xchg
movl
xchg
movl
xchg
movl
xchg
movl
pop
enter
clc
stos
pop
or
xchg
push
enter
movl
jmp
xor
cs
inc
out
enter
das
inc
xchg
test
mov
call
les
cli
xchg
movl
call
pop
popf
and
mov
mov
call
cmp
and
les
mov
shlb
inc
xchg
call
and
or
not
fcmovnu
orb
cmp
fsubrs
push
nop
movl
call
push
sub
stos
aam
jmp
out
inc
and
push
pop
and
gs
xchg
je
rcrb
out
xchg
call
movl
jae
lret
push
mov
movsb
jb
xchg
sbb
pushf
fstpt
inc
dec
ja
jno
shr
loopne
mov
call
mov
cmpsb
push
ret
sbb
xchg
rol
in
xchg
call
movl
inc
and
imul
xchg
jmp
or
sahf
cmp
rcrb
sbb
lcall
jo
call
enter
mov
jmp
mov
sahf
icebp
movl
pop
rcrl
test
scas
sbb
out
stos
pop
or
xchg
push
enter
movl
in
push
sbb
leave
inc
xchg
jne
das
out
or
aaa
out
enter
push
int3
jle
movl
jae
inc
out
push
inc
xchg
call
xchg
call
outsb
inc
xchg
je
xor
insl
push
and
in
mov
push
int3
jp
movl
call
jg
xchg
push
push
or
xchg
sarb
out
xchg
call
test
xchg
call
repnz
xchg
call
movl
jae
add
xor
inc
xchg
call
jg
xchg
je
dec
jle
movb
jge
dec
call
enter
orb
cs
xchg
inc
inc
jne
sbb
shr
in
and
movl
push
mov
int3
outsb
mov
movl
call
movl
call
mov
xchg
call
jg
xchg
je
aas
jle
lds
call
scas
ss
enter
orb
cs
nop
movl
jne
cmovge
shr
in
mov
dec
mov
inc
xchg
push
mov
xchg
sbb
bound
movl
call
movl
call
scas
inc
xchg
call
xor
psubsw
rcrl
inc
xchg
call
aam
fdivl
scas
inc
enter
mov
xchg
call
xchg
call
movl
jne
or
movl
jle
outsl
inc
xchg
je
or
aam
faddl
das
into
movl
push
fadd
xchg
sbb
push
in
movl
call
xlat
lret
cli
out
inc
and
les
xchg
sbb
mov
cmpsb
push
push
rclb
movl
rcrb
xchg
call
xor
xchg
call
movl
jae
movsb
pop
jmp
movl
jmp
movl
inc
sbb
or
lods
add
or
add
mov
or
inc
xchg
call
movl
pop
enter
movl
xor
test
push
enter
movl
sub
mov
or
mov
call
movl
repnz
loope
popf
in
jno
aas
pop
ds
rolb
data16
xchg
call
loopne
in
dec
and
shl
in
dec
rcrl
inc
dec
rcrl
inc
dec
lods
cmpsb
hlt
inc
and
sbb
lret
leave
push
or
dec
pop
jbe
inc
jmp
lods
mov
loop
int3
roll
sub
loopne
fimull
xchg
jle
js
xchg
outsb
mov
pop
leave
inc
xchg
dec
dec
inc
scas
pop
fcom
arpl
lcall
ror
jns
clc
jle
lea
pop
jle
movl
gs
bound
das
lock
jg
inc
and
dec
and
call
out
inc
xchg
call
push
xchg
lcall
dec
cld
scas
or
call
cli
sbb
cmp
iret
push
std
cli
sbb
cmp
jns
jb
arpl
mov
lcall
jno
imul
mov
scas
or
lret
rcr
or
dec
pop
jb
imul
mov
push
enter
movl
insb
jp
xchg
call
movl
jmp
rcr
or
mov
cmp
mov
or
xchg
add
push
mov
or
xchg
jle
ja
xchg
outsb
mov
inc
xor
jbe
sub
inc
xchg
jb
imul
inc
xchg
call
scas
xor
call
push
sbb
sub
fwait
inc
xchg
je
imul
fsubrs
mov
and
lcall
or
shl
in
push
mov
call
fsubrs
mov
movl
push
enter
movl
call
movl
rcrl
fcoml
cmp
lret
and
xlat
jmp
call
xor
call
movl
jmp
ljmp
jmp
push
pop
jmp
mov
pop
loope
inc
xchg
cmp
jp
jb
aas
xchg
call
push
aaa
leave
test
scas
mov
jbe
out
stos
pop
or
mov
movl
je
aas
xchg
call
adcl
mov
inc
add
xor
jmp
inc
add
das
inc
xchg
call
mov
cmp
shrb
mov
inc
call
je
xchg
jbe
inc
xchg
call
inc
inc
cmp
lcall
mov
sub
movb
enter
scas
int3
cmp
jp
inc
and
xchg
gs
rolb
mov
aaa
call
mov
ss
fs
xchg
aam
movsl
icebp
jae
movsb
pop
jmp
movl
push
cmp
pop
xor
inc
jmp
je
jp
loopne
int3
push
inc
mov
push
sbb
mov
mov
pop
jmp
jae
sbbl
and
loopne
sbb
out
push
arpl
sbb
lea
mov
roll
add
std
xlat
cld
lret
lahf
and
insl
mov
mov
push
rolb
scas
ror
sbbl
pop
sbb
lea
mov
xor
mov
dec
lcall
dec
mov
inc
mov
jmp
mov
pop
movsl
movb
push
sahf
pop
ss
mov
pushf
imul
or
inc
xchg
sbb
pushf
jbe
inc
dec
ja
jno
rcrl
jmp
xchg
add
lock
inc
xchg
jbe
add
or
xchg
call
aam
stc
movb
xchg
add
movl
mov
add
or
xchg
imul
inc
xchg
call
test
call
enter
enter
enter
mov
cmp
xchg
and
les
into
mov
inc
out
mov
xchg
call
or
fcmovnu
push
mov
call
or
inc
xchg
jb
xor
mov
enter
cli
stos
pop
or
xorb
and
mov
pushf
xchg
pop
and
mov
dec
mov
movsl
lahf
inc
dec
in
mov
and
bound
popf
jne
loope
sub
cmp
pushf
mov
jle
jne
xchg
je
aaa
and
add
fcmovnu
push
xchg
sar
inc
xchg
call
or
push
dec
popa
into
xchg
sbb
cmp
lcall
pop
or
push
pop
xor
sbb
lcall
pop
xor
stos
jmp
aas
and
jle
xchg
call
or
sahf
jae
aaa
and
add
jb
movl
les
lret
rolb
add
xor
sahf
jae
aaa
and
add
dec
out
inc
cltd
sub
or
cmpsb
out
inc
popf
call
fadds
call
movb
mov
inc
call
sbb
out
or
xchg
and
inc
xchg
call
movl
call
sbb
fcmovnu
push
xchg
cmp
xchg
out
inc
out
fdivp
xchg
call
push
mov
push
mov
je
jnp
jae
inc
xchg
call
jb
xchg
jbe
sub
push
int3
rcr
fmuls
lret
mov
mov
jae
inc
xchg
call
jb
xchg
je
aaa
and
cld
shr
fmul
mov
outsb
fadds
call
movb
mov
inc
call
movb
mov
inc
call
mov
sbb
movb
mov
inc
call
dec
inc
xchg
call
jb
xchg
sbb
mov
cmpsb
push
cmp
xchg
sbb
cmpb
add
call
fcmovu
xchg
call
and
jge
inc
jne
cmp
gs
xchg
jbe
inc
jle
gs
xchg
lods
mov
cs
mov
lcall
rclb
shrl
pop
and
push
xchg
je
ror
insl
mov
xor
into
adcb
lret
jo
mov
xor
or
daa
movsl
icebp
stos
push
pop
jmp
call
enter
push
mov
clc
movl
rorb
or
mov
loop,pn
movl
call
xor
mov
push
sub
mov
jmp
call
cmp
and
cs
or
dec
inc
sarb
or
call
xor
mov
or
movl
call
xor
inc
jmp
rcll
lods
mov
push
call
push
pop
jmp
mov
pop
fstpl
popf
pop
ss
mov
shlb
je
aas
jle
addr16
xchg
je
cmp
addr16
xchg
sbb
pushf
push
dec
inc
dec
ja
jno
shr
in
mov
call
shrb
xchg
inc
and
dec
and
push
mov
roll
out
call
xchg
rcr
fdivl
shr
in
mov
call
inc
sbb
jmp
mov
xor
jp
inc
and
lret
push
jbe
cs
inc
jle
arpl
lods
mov
sub
inc
and
jnp
mov
jne
inc
jmp
mov
pop
lds
popf
in
sbb
pushf
jp
sbb
rcr
in
push
jmp
das
lret
sub
dec
push
and
fcmovnu
push
mov
mov
sbb
jmp
mov
cmp
shrb
mov
ret
mov
icebp
mov
rorl
movb
shr
fdivl
rolb
rorb
movb
cmp
lds
dec
movb
shr
fdivl
rorb
les
dec
movb
cmp
leave
or
sbbl
shr
fdivl
rcr
aam
pushf
jle
mov
push
fadd
inc
xchg
pop
mov
push
insb
enter
lods
rcrb
cmp
push
pop
lret
push
pushf
jbe
das
cli
fcmovnb
inc
xchg
pop
test
ss
enter
movsb
rcr
aam
cwtl
mov
movl
jmp
orb
cs
test
inc
leave
test
mov
push
dec
inc
jne
and
movl
call
movl
jae
movsb
pop
icebp
movl
call
sub
or
enter
movl
xor
mov
xchg
call
movl
pop
sub
inc
xchg
call
movl
push
sub
xchg
call
mov
jmp
in
mov
call
in
lret
sub
dec
push
and
xchg
shll
loope
call
cmp
les
xor
adc
mov
push
and
rclb
xchg
call
and
sbb
not
fnsetpm(287
mov
das
call
pop
inc
xchg
aam
mov
xchg
call
movl
jae
enter
inc
xchg
cmp
jp
jb
inc
xchg
call
mov
add
jmp
sub
mov
mov
push
add
add
sbb
inc
xchg
cmp
inc
jle
cwtl
inc
xchg
outsb
mov
xchg
call
movb
enter
scas
or
call
movb
fwait
das
mov
movl
dec
push
push
test
inc
jne
inc
xchg
call
movl
call
push
sub
stos
push
pop
jmp
mov
jmp
in
mov
call
cs
xchg
sbb
dec
push
addl
inc
int3
xchg
sbb
rcrb
or
inc
xchg
shr
jecxz
call
inc
int3
xchg
sbb
int3
push
pop
fwait
xor
jno
inc
shrb
xchg
call
les
xchg
call
fs
xchg
je
inc
dec
jno
inc
rclb
xchg
call
push
or
les
mov
and
push
dec
inc
jne
inc
jle
pusha
inc
xchg
lods
mov
sub
xor
jmp
movl
call
movl
call
mov
pop
cmp
inc
xchg
cmp
sahf
pop
cs
rcr
in
and
call
xor
sbb
imull
mov
dec
xchg
xchg
call
rcrl
cmp
inc
xchg
cmp
lret
movl
jmp
sbb
jbe
out
stos
pop
or
mov
xor
jl
inc
xchg
cmp
shl
loopne
mov
push
mov
call
ss
jp
movl
call
push
mov
push
enter
or
rcr
loopne
das
mov
lods
dec
xchg
call
lret
call
mov
mov
push
enter
sbb
aaa
call
sbb
or
and
xor
das
sub
leave
test
mov
jge
inc
jne
inc
jle
pop
inc
xchg
lods
mov
sub
xor
into
and
enter
inc
xchg
je
aam
or
xchg
xchg
call
mov
or
or
push
or
dec
inc
rolb
xchg
call
call
push
and
cs
add
inc
xchg
call
adcb
add
inc
xchg
call
andb
add
inc
xchg
call
subb
add
dec
xchg
call
enter
movl
push
xor
mov
aaa
mov
dec
cmp
call
movl
call
movl
call
movl
call
movl
imul
xchg
call
pop
mov
push
enter
scas
jl
call
pushf
add
test
inc
xchg
push
inc
xchg
call
or
imul
xchg
jmp
or
sahf
cmp
rcrb
sbb
lcall
shrb
in
enter
mov
sbb
rclb
xchg
je
imul
push
fwait
mov
jae
imul
or
jae
add
jmp
inc
push
ror
pop
xchg
call
mov
call
movl
sub
mov
sub
lcall
pop
xchg
repnz
or
mov
or
xchg
or
lods
or
repnz
and
idiv
cwtl
call
sahf
inc
xchg
lods
enter
movl
aaa
push
fwait
in
sub
mov
xor
cmp
call
mov
pop
call
mov
or
sub
mov
cmp
mov
pop
sub
jmp
mov
pop
fstpl
popf
in
sbb
aaa
leave
test
scas
sub
out
stos
pop
or
aaa
cltd
adc
rol
rcll
les
inc
jb
jbe
jmp
inc
push
sarl
xchg
call
outsb
fstl
jbe
aas
dec
in
movl
out
push
and
shl
loopne
or
and
sahf
mov
loope
inc
mov
mov
imul
rcr
in
mov
call
push
pushf
mov
push
or
and
sahf
mov
ss
je
inc
in
hlt
push
xchg
mov
orb
inc
das
push
rol
and
mov
inc
and
rcrl
or
scas
push
lcall
push
or
push
inc
xchg
sbb
mov
cmpsb
push
data16
shll
fistl
js
inc
sbb
lods
movsb
pop
jmp
movl
aaa
push
fwait
in
sub
mov
xor
sbb
call
mov
pop
call
mov
or
sub
mov
sub
scas
lcall
out
aaa
stos
or
cli
call
movl
aaa
push
fwait
in
sub
mov
xor
sbb
call
mov
pop
call
mov
or
sub
mov
cmp
mov
pop
sub
xchg
call
movl
sub
mov
xor
sbb
call
mov
pop
call
mov
or
sub
mov
xor
mov
fimull
lods
xchg
call
mov
call
enter
push
mov
clc
movl
shl
in
call
addl
jge
inc
pop
lods
enter
and
jmp
mov
fwait
call
xor
pop
rcrl
xor
and
imull
mov
or
in
call
cs
cmp
ds
dec
scas
mov
sub
push
or
push
inc
shrb
pop
and
mov
dec
scas
mov
sub
push
or
pop
inc
xchg
dec
push
mov
mov
push
mov
xchg
sbb
jp
jle
jle
mov
xchg
call
orb
cs
jge
inc
orl
push
inc
jne
daa
movsl
lahf
mov
into
rol
inc
xchg
pop
test
pop
mov
scas
cmp
call
les
mov
je
jbe
movsb
push
dec
scas
mov
sub
push
or
movl
call
xor
and
not
jmp
xlat
std
pop
shll
mov
cltd
call
pop
inc
xchg
sbb
mov
cmpsb
push
xchg
rclb
mov
scas
xchg
sub
or
push
inc
xchg
aam
movsl
icebp
jae
movsb
pop
jmp
movl
call
movl
sbb
inc
xchg
call
movl
jae
add
jmp
rcrl
xor
jmp
sub
mov
or
in
call
cs
cmp
ds
dec
scas
mov
sub
shl
aam
or
push
inc
rcrb
xchg
call
mov
dec
scas
mov
sub
shr
rclb
jle
pop
inc
xchg
dec
push
mov
mov
push
add
xchg
sbb
jp
jle
jle
mov
xchg
call
orb
cs
jl
inc
orl
push
inc
jne
daa
movsl
lahf
mov
jle
movl
mov
scas
in
sub
lods
and
lods
sbb
sarb
shlb
jbe
movsb
push
dec
scas
mov
jg
movl
in
movl
call
xor
jmp
xlat
std
pop
shll
xchg
call
mov
cltd
call
pop
inc
xchg
sbb
mov
cmpsb
push
out
xchg
sbb
outsb
mov
scas
inc
es
push
inc
xchg
aam
movsl
icebp
jae
movsb
pop
jmp
movl
call
movl
sbb
inc
xchg
call
movl
jae
mov
push
enter
sti
push
jmp
jl
xchg
sbb
dec
push
addr16
scas
in
call
mov
jg
movl
jmp
dec
in
call
das
xchg
call
mov
cltd
call
pop
inc
xchg
sbb
mov
cmpsb
push
adc
sbb
mov
scas
test
call
push
inc
xchg
aam
mov
xchg
call
movl
imul
sub
movl
call
in
pop
dec
imul
fcoms
pop
aam
pop
mov
mov
es
enter
mov
call
movl
push
cmp
cli
call
mov
add
jmp
dec
inc
xchg
mov
loop
call
arpl
insb
rorb
or
push
pop
lock
xchg
add
jmp
dec
inc
xchg
mov
loop
call
arpl
insb
rorb
or
push
pop
int3
jns
jb
mov
jmp
mov
pop
inc
movl
mov
movl
call
mov
inc
xchg
sbb
pushf
fstpl
dec
ja
jno
rcrl
aam
xchg
sbb
rcrb
inc
xchg
call
rorl
call
cmp
sbb
inc
or
push
or
pop
inc
shrb
xchg
call
cmp
sbb
inc
or
push
or
pop
inc
rclb
xchg
call
cmp
sbb
dec
or
push
or
pop
inc
sar
aad
call
cmp
sbb
inc
or
push
or
pop
inc
shl
aad
call
cmp
sbb
inc
or
push
or
pop
inc
ror
aad
call
movl
call
movl
in
xlat
daa
jmp
mov
xchg
insl
mov
data16
jbe
pop
les
and
data16
inc
andl
cmp
and
cs
int
jmp
rcrl
int3
fcoms
call
mov
mov
enter
push
inc
xchg
imul
inc
xchg
call
cmp
sbb
dec
or
rcrb
enter
dec
mov
lret
jbe
cwtl
push
inc
xchg
shlb
dec
or
push
or
pop
inc
shlb
xchg
call
lods
shr
lret
mov
or
jbe
insb
push
inc
xchg
sarb
xchg
call
pop
inc
sarb
xchg
call
rcll
pop
lret
mov
cs
cmp
and
fidivs
inc
andl
or
pop
inc
sar
aad
call
subb
jmp
movl
loopne
inc
jne
mov
pop
rol
sub
call
movl
jne
lahf
xchg
call
scas
sub
call
movl
sbb
push
out
movl
call
movl
mov
mov
and
jp
inc
and
xchg
jns
jbe
outsb
and
call
cs
les
xchg
jne
inc
pop
rorb
xchg
call
and
jnp
mov
call
movl
pusha
ss
xchg
call
movl
pusha
cmp
sbb
jbe
call
movl
push
ss
add
cmp
inc
xchg
call
movl
pusha
cmp
dec
cmp
sbb
inc
xchg
call
movl
pusha
cmp
push
cmp
xchg
call
movl
pusha
cmp
call
movl
aaa
push
fwait
in
sub
mov
xor
cmp
call
mov
pop
call
mov
or
sub
mov
sub
aaa
mov
sub
inc
xchg
call
movl
call
movl
call
movl
push
cmp
add
cld
je
adc
inc
xchg
call
movl
dec
call
mov
push
icebp
inc
xchg
call
movl
dec
sub
mov
push
icebp
inc
xchg
call
movl
dec
sub
sub
aaa
mov
call
movl
adc
mov
push
cmp
push
aaa
mov
call
movl
adc
lods
clc
or
mov
adc
inc
xchg
call
movl
push
sub
or
mov
push
cmp
add
call
movl
dec
sub
cmp
jo
call
movl
adc
stos
or
ss
sti
dec
call
lods
or
enter
movl
adc
lods
or
mov
xchg
call
movl
pop
sub
inc
xchg
call
movl
ds
pushf
sbb
mov
xchg
call
xor
jmp
imull
jp
movl
add
and
dec
inc
or
push
mov
push
pusha
inc
xchg
je
imul
or
scas
adc
cmpsb
jno
imul
mov
sub
push
rcrb
xchg
jb
imul
sbb
inc
xchg
jb
push
in
jmp
in
sarb
xchg
call
das
addr16
mov
mov
push
enter
in
pop
out
xor
jmp
movl
call
in
out
into
ficoms
or
rcr
or
xchg
and
mov
sub
or
xchg
in
shrb
ficoms
jg
inc
jmp
call
dec
or
inc
daa
movsl
icebp
stos
enter
sbb
jmp
mov
pop
fld
inc
xchg
cmp
jp
jb
aaa
xchg
call
mov
dec
ja
jno
rcrl
rclb
in
enter
dec
cmp
in
enter
dec
inc
xchg
call
inc
and
call
jge
outsb
mov
fcoml
out
enter
mov
xchg
call
movl
jae
add
mov
dec
inc
mov
inc
and
cmp
outsb
mov
cwtl
pop
call
dec
inc
xchg
aam
movsl
icebp
jae
movsb
pop
jmp
movl
repnz
cmp
push
jmp
rcr
sbb
dec
push
and
ret
inc
sbb
inc
movsl
jge
cmp
push
inc
and
xchg
jge
jbe
les
mov
inc
pop
rorb
xchg
call
and
jmp
call
cmp
and
cs
stos
push
or
pop
inc
rcr
iret
xchg
call
movl
push
cmp
cli
call
movl
push
cmp
fists
mov
cli
call
mov
pop
in
inc
xchg
cmp
sbb
jle
inc
xchg
call
sbb
jbe
out
stos
pop
or
inc
xchg
call
movb
mov
sub
aam
in
inc
xchg
jbe
inc
xchg
call
movl
je
inc
xchg
call
lods
fcoml
call
and
insl
jle
jbe
outsb
les
call
or
dec
inc
xchg
aam
mov
xchg
call
movl
jae
enter
inc
xchg
cmp
sbb
jle
inc
xchg
call
sbb
jbe
out
stos
pop
or
inc
xchg
call
movb
mov
sub
aam
in
inc
xchg
jbe
inc
xchg
call
movl
je
inc
xchg
call
cmp
xchg
sbb
jp
inc
and
stc
jle
jbe
outsb
les
call
or
dec
inc
xchg
aam
mov
xchg
call
movl
jae
add
xor
pop
rcrl
in
mov
call
out
ficoms
dec
push
and
rolb
push
inc
xchg
outsb
mov
mov
jne
cmp
movb
adc
inc
jae
inc
jle
mov
xchg
je
aas
and
les
inc
jo
inc
and
jmp
or
jle
push
inc
xchg
outsb
mov
mov
jne
xor
movb
adc
inc
jae
inc
jle
mov
xchg
je
aaa
and
les
push
jo
inc
and
cli
or
jle
push
inc
xchg
outsb
mov
ret
das
out
sbb
inc
xchg
rcl
xor
mov
push
mov
call
or
inc
xchg
je
inc
dec
gs
inc
sarb
rclb
adc
jbe
push
pushf
jb
mov
data16
inc
and
movsb
add
or
das
cmpsb
rol
inc
and
test
fnsetpm(287
mov
sbb
in
xlat
cs
movl
mov
lcall
jl
inc
xchg
je
sbb
pusha
inc
jae
inc
jle
mov
xchg
je
pop
and
les
pop
outsl
movl
or
inc
xchg
outsb
mov
ret
pop
out
sbb
inc
xchg
rcrb
xor
mov
push
mov
call
or
inc
xchg
je
shr
in
sbbb
jp
inc
and
ret
or
and
xchg
add
fmuls
xchg
lods
mov
pop
call
push
sub
stos
enter
movl
aas
adc
mov
call
movl
sub
movl
call
sbb
fdivl
adc
jmp
call
movl
cmp
xchg
mov
call
movl
sub
lcall
movl
sub
xchg
loop
or
fisubrl
sbb
mov
jae
lret
sbb
xchg
je
inc
jle
push
inc
xchg
sbb
pushf
daa
popa
inc
dec
ja
jno
lcall
inc
xchg
je
add
lods
mov
sub
scas
lcall
aas
out
or
mov
push
enter
mov
push
call
pop
inc
xchg
je
shrb
ret
call
inc
inc
xchg
sbb
mov
cmpsb
push
push
loopne
sbb
xchg
sarl
xchg
call
movl
into
and
lret
sbb
xchg
je
inc
jle
push
inc
xchg
sbb
pushf
mov
inc
dec
ja
jno
lcall
inc
xchg
je
add
lods
mov
sub
mov
push
enter
sbb
fcmovnu
sbb
xchg
call
mov
sbb
pop
pop
inc
xchg
je
shrb
xor
xchg
call
aas
inc
xchg
sbb
mov
cmpsb
push
sahf
loopne
sbb
xchg
shr
lret
mov
inc
push
mov
jmp
mov
pop
test
lcall
jb
or
mov
pushf
bound
sbb
movsb
shrb
mov
dec
ja
jno
add
call
mov
or
loopne
mov
js
inc
rcr
cmp
fsts
mov
into
pop
movl
rorb
xchg
call
mov
cmp
jg
leave
inc
xchg
scas
or
inc
pop
cs
or
xchg
call
movl
call
mov
xchg
call
sbb
fcmovne
sbb
fcmovnu
sbb
xchg
fwait
leave
out
xor
jbe
sbb
inc
xchg
jb
inc
and
test
sahf
call
ror
out
push
and
les
out
fwait
movl
je
dec
and
movsb
das
scas
insb
movl
arpl
inc
xchg
sbb
rdtsc
jmp
sbb
fstpt
inc
xchg
je
sbb
movl
call
movl
jmp
push
sbb
xchg
je
adc
ds
das
shl
movl
test
jbe
lods
orb
cs
insl
movl
push
test
xchg
sbb
push
in
movl
call
mov
insb
rcrl
mov
sbb
inc
xchg
call
arpl
jae
add
fmuls
call
push
inc
xchg
jbe
pop
jle
mov
pop
dec
arpl
jae
add
mov
inc
xchg
insb
mov
daa
enter
movb
mov
cmpsb
push
jg
xchg
sbb
push
mov
scas
lods
sbb
or
inc
inc
xchg
aam
cmpsb
hlt
inc
push
sub
stos
enter
movl
call
movl
or
inc
xchg
call
movl
jae
enter
inc
xchg
cmp
sahf
leave
mov
aam
out
inc
and
push
mov
pusha
dec
inc
xchg
sbb
pushf
mov
ja
jno
rcrl
sahf
enter
int3
push
out
inc
out
dec
call
enter
les
inc
insb
movl
call
xchg
jle
push
inc
xchg
je
lret
cmp
dec
ljmp
or
inc
and
push
fcoml
movl
jae
das
mov
movl
out
inc
dec
sub
inc
xchg
jae
das
mov
outsb
test
call
push
inc
xchg
outsb
mov
lcall
and
cs
push
inc
and
popf
jle
push
inc
xchg
sbb
mov
cmpsb
push
mov
int3
dec
out
inc
jle
dec
inc
xchg
jbe
inc
jle
dec
inc
xchg
lods
mov
adc
xor
mov
xchg
call
movl
jae
lret
sbb
jb
sbb
ds
in
mov
call
ss
xchg
call
push
in
sbb
dec
push
and
mov
movl
mov
and
cld
scas
or
mov
fs
sbb
xchg
shll
xchg
call
push
lret
xchg
call
or
inc
xchg
jb
sub
jle
jne
xchg
sbb
mov
cmpsb
push
push
in
sbb
push
ds
xchg
call
lret
call
or
inc
inc
xchg
aam
mov
xchg
call
movl
jae
lret
sti
nopl
mov
mov
call
call
inc
dec
push
and
mov
movl
mov
sub
scas
or
mov
cld
in
sbb
xchg
sarl
mov
pop
lret
push
mov
and
xchg
call
and
xor
not
fcmovnb
mov
adc
in
sbb
inc
inc
inc
xchg
aam
sarb
mov
call
movl
jae
lret
sti
nopl
mov
mov
call
and
sbb
dec
push
and
mov
movl
mov
sub
scas
or
mov
xchg
in
sbb
xchg
shll
enter
mov
leave
xchg
call
or
repnz
call
and
xor
not
fcmovnb
mov
adc
in
adcb
inc
inc
xchg
aam
sarb
mov
call
movl
jae
lret
sbb
pop
cs
rcr
in
fcompl
call
xor
xor
sbb
mov
movl
jp
push
mov
fs
inc
xchg
jb
aaa
and
lods
xchg
in
push
lret
dec
xchg
call
jg
xchg
outsb
mov
insb
inc
aas
xchg
pop
fbstp
xchg
call
push
dec
lods
sbb
mov
xor
call
aad
xchg
call
mov
dec
call
lret
leave
gs
push
scas
lcall
xchg
jle
jle
xchg
sbb
mov
cmpsb
push
pop
out
sbb
xchg
shrl
lds
movl
inc
and
jnp
mov
sub
mov
jmp
mov
pop
loope
sbb
ds
in
mov
call
iret
out
sbb
dec
push
and
jecxz
andb
imull
lcall
rcr
lock
xchg
nop
movl
dec
push
push
mulb
jne
aas
push
jmp
inc
xchg
rcl
les
movl
stos
enter
movl
push
xor
jecxz
ss
dec
cmp
xchg
call
mov
sahf
call
xor
pop
rcrl
in
mov
call
test
inc
dec
push
and
dec
ljmp
xchg
sbb
mov
sbb
shl
lds
jne
aas
push
ljmp
xchg
call
int3
jmp
push
call
mov
xchg
sbb
adc
aas
xchg
call
or
inc
xchg
shlb
xchg
call
mov
xchg
call
sbbb
imull
mov
inc
sbb
mov
call
or
inc
sarb
mov
jle
xchg
call
mov
jbe
mov
mov
call
push
pushf
jb
lcall
jbe
daa
push
in
movl
call
inc
inc
xchg
call
addb
push
xor
sub
inc
push
or
xchg
sbb
mov
push
xchg
call
enter
scas
js
call
sbbb
push
push
mov
orl
mov
jbe
shrb
mov
cwtl
xchg
and
xchg
xchg
dec
ljmp
xchg
sbb
mov
or
xchg
call
adc
inc
xchg
call
xor
xchg
sbb
mov
jle
inc
inc
xchg
cmp
rcr
faddl
cs
movl
je
aas
jle
ret
inc
xchg
je
cmp
imul
mov
xchg
call
mov
fneni(8087
mov
xchg
call
sbb
jmp
movl
shrb
push
enter
dec
rcll
mov
mov
adc
mov
and
shrb
in
inc
and
mov
jbe
addb
pop
sarb
je
aas
jle
les
je
cmp
imul
inc
lds
ljmp
cli
pop
movl
je
das
mov
lods
mov
inc
call
cmp
sbb
enter
lret
jae
das
adc
mov
sub
je
das
out
pop
movl
loopne
inc
out
aas
and
mov
cltd
call
inc
inc
xchg
je
pop
jle
les
inc
sti
push
lock
and
cmp
not
fldt
cs
inc
pop
shlb
xchg
call
lods
movsb
pop
jmp
movl
jmp
movl
pop
xor
or
movl
call
xor
loop
cmp
xchg
call
movl
jmp
movl
pusha
sub
inc
xchg
call
sub
inc
xchg
call
movl
dec
enter
movl
pop
sub
inc
xchg
call
movl
dec
enter
movl
dec
sub
stc
push
sub
inc
mov
dec
cmp
notl
negl
mov
xchg
call
movl
pop
sub
xchg
call
movl
push
aaa
mov
psubsw
inc
xchg
call
movl
pop
xor
inc
jmp
mov
pop
loope
sbb
ds
in
mov
call
or
xchg
sbb
dec
push
and
jecxz
sbbb
movl
lock
xchg
mov
inc
leave
test
mov
xor
jne
aas
push
jmp
inc
xchg
rcrb
xor
pop
movl
stos
enter
movl
push
xor
jmp
push
inc
inc
jmp
mov
dec
addr16
enter
cmp
inc
jmp
loopne
inc
pop
cs
rcr
loopne
cmp
call
scas
xor
call
scas
sub
call
movb
mov
dec
ja
jno
shl
fdivr
sbb
les
mov
cs
jbe
clc
inc
inc
xchg
pop
aad
fnsetpm(287
sti
sbb
cmp
das
addr16
movl
and
xchg
orl
xchg
enter
mov
inc
and
mov
inc
and
orb
cs
movl
in
pop
xchg
call
dec
mov
sbb
movl
add
int3
inc
xchg
jne
mov
call
mov
je
shrb
push
les
jbe
aas
jle
inc
inc
xchg
ds
int3
in
inc
and
rolb
xchg
enter
inc
inc
xchg
je
scas
xchg
call
movl
call
sub
xchg
call
sbb
inc
xchg
je
stos
xchg
call
movl
call
push
sbb
dec
cmpsl
xchg
call
orl
movl
call
imull
stos
arpl
inc
movsl
insb
into
dec
xchg
call
movl
jmp
inc
inc
xchg
je
mov
xchg
enter
inc
inc
xchg
clc
dec
and
call
les
jbe
jae
in
enter
sbb
xchg
call
movl
call
rcrb
inc
les
cmp
out
movl
ret
movl
call
movl
fadds
loop
enter
inc
inc
xchg
clc
dec
enter
pushf
in
jne
mov
call
movl
outsb
js
xchg
call
movl
call
addb
movl
arpl
inc
and
inc
xchg
call
fisubrs
inc
jmp
dec
xchg
xchg
call
sbbb
popa
movl
call
mov
xchg
jne
xchg
call
orl
popa
movl
call
imull
mov
inc
movsl
insb
mov
xchg
call
movl
jmp
inc
inc
xchg
je
mov
xchg
enter
inc
inc
xchg
clc
dec
or
and
push
jae
in
enter
mov
shl
movl
call
rcrb
sub
inc
xchg
cmp
into
in
inc
and
fsubrs
out
rol
and
inc
xchg
call
movl
fadds
loop
enter
inc
inc
xchg
pop
xor
xchg
call
movl
outsb
js
xchg
call
movl
call
addb
movl
movl
call
cs
insl
movl
call
sbbb
pusha
movl
call
mov
pop
call
dec
and
jle
dec
inc
xchg
insb
inc
push
xchg
testl
and
inc
xchg
call
not
jmp
mov
or
sbb
inc
xchg
roll
xchg
call
movl
clc
dec
rcll
adc
mov
push
mov
inc
xchg
call
imull
xor
inc
movsl
insl
sbb
call
movl
jmp
ds
xchg
je
outsl
xchg
call
enter
inc
inc
xchg
clc
dec
jo
call
les
jbe
jae
in
enter
mov
int3
mov
sub
rclb
mov
xchg
jmp
fcoml
and
aam
and
rclb
xchg
call
int3
inc
xchg
call
shlb
add
dec
addr16
call
mov
or
or
inc
xchg
je
rcr
in
rclb
jmp
loopne
xchg
call
movsl
inc
xchg
je
pop
xchg
call
enter
aas
inc
xchg
clc
dec
fcoms
std
ret
inc
xchg
jbe
jae
in
enter
or
stos
in
inc
push
sbb
jp
xchg
call
fadds
call
int3
inc
xchg
call
rcrb
stc
ret
inc
xchg
mov
mov
or
jae
pop
out
or
push
out
or
dec
xchg
call
orl
pop
movl
call
movl
pop
movl
call
les
data16
inc
in
cmp
int3
push
clc
dec
test
mov
xchg
sbb
mov
cmpsb
push
mov
xchg
sbb
sahf
in
inc
push
add
inc
xchg
rclb
mov
xchg
scas
mov
call
orl
pop
movl
call
and
jnp
mov
call
movl
pop
aaa
mov
call
movl
jmp
movl
pop
sub
sti
dec
cmp
rorb
enter
movl
call
movl
push
enter
movl
call
movl
dec
cmp
call
movl
cs
mov
dec
cmp
jae
lret
sti
sbb
ds
in
mov
call
fwait
icebp
xchg
sbb
dec
push
and
jecxz
subb
jmp
movl
lock
xchg
test
inc
leave
test
mov
inc
jb
jne
aas
push
jmp
inc
xchg
rorb
mov
ds
movl
stos
enter
movl
push
xor
jmp
push
inc
inc
jmp
mov
call
xor
pop
rcl
loopne
mov
push
ds
xchg
sbb
pushf
out
inc
dec
ja
jno
rcr
fcompl
add
std
je
jae
aas
jle
mov
je
cmp
cmp
xchg
je
mov
rolb
call
ds
xchg
je
cmp
jne
rolb
xchg
call
movl
lock
cli
sbb
les
loop
movl
pop
movl
inc
ds
xchg
je
aam
rol
inc
xchg
inc
mov
pop
call
les
jbe
das
xchg
call
movl
call
les
jbe
das
xchg
call
movl
call
sbb
fcmovnbe
sbb
sbb
les
jbe
das
xchg
call
movl
call
or
inc
xchg
insb
xchg
inc
and
les
pop
add
jmp
clc
repz
sbb
mov
ficoml
cmp
xchg
pop
fwait
xchg
pop
mov
jbe
outsb
pushf
inc
xchg
call
movl
jbe
pop
xchg
call
movl
je
pop
xchg
call
movl
inc
jne
rorb
xchg
call
pop
adc
loopne
push
sub
shlb
mov
inc
xchg
jbe
pop
xchg
call
enter
cmp
je
pop
xchg
call
movl
push
fdiv
xchg
sbb
push
in
inc
and
shrb
rol
inc
and
inc
xchg
call
movl
call
aam
mov
inc
xchg
mov
scas
aam
call
les
shrl
xchg
call
and
fwait
xchg
enter
mov
call
cs
cs
inc
jle
cmp
lods
mov
add
xor
lods
movsb
pop
jmp
movl
jmp
movl
dec
sub
xchg
call
movl
dec
cmp
xchg
call
movl
pop
xor
or
movl
call
xor
loop
cmp
xchg
call
movl
jmp
mov
call
movl
in
sbb
xchg
je
shrb
enter
scas
add
call
enter
mov
out
sbb
or
inc
and
jmp
pop
jbe
inc
jmp
out
inc
and
sbb
xchg
call
shrb
int3
inc
xchg
call
cli
sbb
lods
mov
push
call
pushf
add
push
cmp
cmp
sub
call
enter
and
jmp
fstps
das
mov
test
or
jmp
movl
jge
inc
shl
mov
call
movl
lods
sub
jmp
movl
movsl
jbe
rcrb
mov
xchg
inc
sbb
adcb
jmp
movl
call
push
or
jbe
shr
mov
call
movl
call
sub
xchg
call
movl
push
sub
inc
xchg
call
movl
pop
xor
xchg
call
movl
dec
sub
add
movl
call
call
mov
bound
inc
xchg
call
movl
push
xor
call
mov
call
movl
in
sbb
xchg
je
shrb
enter
scas
addb
enter
inc
xchg
inc
mov
jmp
mov
pop
mov
inc
xchg
cmp
jp
jb
adc
mov
dec
sbb
rol
xchg
jb
and
leave
ret
inc
xchg
jb
sub
rol
inc
xchg
jb
inc
pop
cs
lock
push
jmp
jno
xchg
sbb
dec
push
and
fcomi
scas
dec
pop
call
sbb
xchg
call
movl
xor
inc
xchg
jbe
aas
dec
ljmp
xchg
call
rcr
loopne
or
imull
mov
movl
call
movl
jmp
mov
xchg
call
movl
call
ret
inc
xchg
jbe
aaa
xchg
call
movl
jbe
sub
shll
inc
xchg
call
movl
call
cs
inc
xchg
call
lds
je
daa
xchg
call
lds
mov
scas
js
call
es
xchg
call
movl
je
and
fld
inc
xchg
mov
scas
push
add
sar
inc
xchg
call
mov
adc
rcr
fdivl
rclb
cmc
movl
call
movl
jae
inc
push
lods
jns
sar
mov
call
movl
call
lea
call
movl
call
movb
pop
pop
xchg
call
ret
inc
xchg
mov
scas
fadds
aam
mov
mov
push
in
inc
and
inc
xchg
call
movl
shlb
mov
call
movl
call
ret
inc
xchg
jbe
aaa
xchg
call
movl
je
das
push
in
inc
and
inc
xchg
call
shrb
mov
inc
xchg
jbe
aaa
xchg
call
movl
je
das
out
movl
mov
xchg
jb
cmp
cmp
push
xchg
call
ret
inc
xchg
mov
push
pop
xchg
cmp
leave
popa
call
and
inc
jmp
ret
inc
xchg
mov
scas
rolb
aam
loopne
dec
xchg
call
movl
call
mov
sahf
call
movl
call
mov
jmp
cs
rcr
in
call
push
xor
xchg
sbb
mov
leave
out
xor
jbe
shrb
xchg
je
das
out
movl
call
outsb
or
xchg
enter
inc
inc
xchg
sar
mov
mov
shlb
xchg
cmp
rclb
cmc
movl
lods
and
ss
movl
je
push
xchg
call
movl
dec
push
push
push
jp
jne
inc
jle
xor
lods
mov
std
out
xor
stos
push
pop
jmp
mov
pop
loope
shrb
sbb
rcr
in
cmp
call
mov
add
jp
xor
xchg
sbb
mov
jb
xchg
call
movl
je
aas
jle
mov
cmp
outsl
inc
jmp
mov
pop
call
inc
inc
xchg
roll
xchg
call
movl
call
and
xchg
fwait
enter
rolb
call
xor
lods
mov
cld
out
xor
stos
push
pop
jmp
jae
jp
aas
mov
psubsb
int3
push
pop
shlb
psubsb
das
push
popa
movl
ljmp
xchg
shlb
xchg
call
movl
rcrb
das
add
pop
pushf
jle
aas
inc
xchg
outsb
mov
push
call
inc
inc
xchg
push
enter
mov
xchg
call
movl
add
push
mov
push
enter
scas
pop
psubsb
mov
push
enter
leave
xchg
call
popf
jle
aas
inc
xchg
aas
mov
push
call
or
lcall
inc
xchg
shrb
push
xchg
pop
or
lods
and
jmp
pop
das
xchg
inc
pop
jbe
inc
add
xor
jmp
movl
ds
cmp
shll
add
push
or
push
call
lret
cmp
das
push
popa
movl
jae
lret
sbb
and
les
out
push
movl
popf
enter
clc
stos
pop
or
pop
jle
aas
inc
xchg
dec
mov
ficoml
mov
aas
sbb
inc
or
cli
sbb
scas
fcoml
in
jl
call
mov
inc
xchg
call
or
xchg
and
aad
out
movl
pusha
movl
xor
inc
xchg
and
popl
pop
roll
mov
shr
cmp
inc
stc
scas
push
pop
sbb
das
into
out
inc
and
imul
fsubrs
stos
out
inc
fnstenv
cmp
inc
or
cli
sbb
scas
pop
xchg
call
and
mov
les
xchg
push
movl
call
and
jmp
ljmp
outsb
push
enter
cmp
add
call
or
jae
enter
inc
xchg
cmp
jp
jb
aas
pop
ds
mov
call
ja
jno
clc
xchg
mov
xchg
sbb
rcr
cwtl
int3
mul
movl
mov
add
mov
inc
xchg
adc
inc
xchg
jne
iret
xchg
call
mov
push
call
ret
mov
scas
cwtl
or
jns
inc
xchg
jb
xchg
jmp
cs
pop
movl
insb
lods
dec
xchg
call
imulb
xchg
call
lds
sbb
rcrb
std
xchg
call
push
int3
movl
call
testb
xor
movl
call
movl
call
rcrl
push
movb
dec
xchg
call
mov
sbb
lds
jbe
pop
out
or
daa
out
or
in
or
int3
push
pop
fcmovbe
fcmovnbe
push
int3
loop
movl
cmp
inc
xchg
jbe
adc
push
rcrb
outsb
mov
fcmovne
inc
xchg
jne
push
enter
leave
rcr
mov
das
jle
movl
sub
push
pop
mov
mov
ds
das
jbe
movl
cs
xchg
and
mov
bound
mov
pop
call
loop
fldcw
mov
call
xchg
rcr
mov
das
stos
pop
movl
sbb
rcr
mov
push
mov
xor
test
pop
je
xchg
add
scas
int3
pop
call
enter
inc
call
loopne
pushf
push
rcr
mov
call
sbb
inc
xchg
jbe
pop
out
or
cmp
xor
cmp
push
cmp
mov
sub
fldt
cs
pop
movl
outsb
or
xchg
call
movl
out
rcr
lods
mov
lock
popf
jle
cmp
jbe
xchg
xchg
movb
int3
inc
xchg
call
rcrb
mov
inc
xchg
jb
fwait
xchg
call
movb
dec
mov
sub
inc
xchg
mov
push
mov
loopne
jmp
out
inc
and
mov
inc
sbb
movl
jle
inc
and
sbb
les
cmpsb
dec
movl
inc
movl
in
inc
xchg
sbb
mov
cmpsb
push
iret
xchg
sbb
dec
rol
lods
xchg
call
lret
call
or
sub
aam
movsl
icebp
jae
movsb
pop
jbe
inc
jmp
lods
lods
rorb
mov
scas
clc
dec
call
or
inc
jmp
mov
dec
call
cli
sbb
cmp
das
and
imul
and
sahf
cmp
inc
out
gs
rcrb
add
shrb
mov
add
inc
jmp
mov
dec
call
mov
xchg
insb
mov
inc
mov
jmp
lods
lods
rorb
mov
scas
orb
shrb
or
inc
jmp
mov
dec
call
cli
sbb
cmp
das
and
imul
and
sahf
cmp
inc
out
gs
shlb
aaa
in
sarb
xchg
call
movl
call
mov
xchg
insb
mov
inc
mov
jmp
mov
pop
loope
sbb
ds
in
mov
call
daa
add
dec
push
and
jecxz
cmpb
dec
movl
lock
xchg
ja
inc
leave
test
mov
decb
inc
jne
aas
push
jmp
inc
xchg
sarb
xchg
call
movl
stos
enter
movl
dec
cmp
jecxz
ss
dec
cmp
xchg
call
mov
fwait
call
xor
pop
rcrl
cs
rcr
loopne
sbb
out
jp
xor
jmp
sub
mov
or
inc
xchg
call
not
fneni(8087
mov
dec
call
mov
sti
out
rcrb
push
mov
call
rcr
faddl
jle,pn
movl
call
orl
mov
shrb
mov
mov
inc
and
orb
cs
mov
call
enter
mov
outsb
stos
movl
movsb
enter
mov
cltd
call
sub
xor
jne
sub
and
shlb
mov
push
mov
clc
mov
cli
out
shr
enter
dec
movl
shr
or
cltd
adc
rolb
mov
and
movsb
das
push
stos
movl
movsb
enter
sub
xchg
je
and
lods
mov
sub
rcrl
ficoml
cs
in
scas
pop
cli
out
rcrb
mulb
outsb
roll
or
mov
mov
cli
out
rcr
shlb
jle
ss
xchg
ds
mov
xchg
sbb
mov
push
in
movl
call
mov
xchg
call
and
lret
mov
pushf
add
shrb
inc
xchg
lods
mov
hlt
out
xor
stos
enter
movl
jmp
movl
dec
cmp
call
movl
pop
cmp
xchg
call
movl
pop
cmp
or
mov
push
enter
mov
pop
loope
sbb
ds
in
mov
call
cmpsl
add
dec
push
and
jecxz
cmpb
jmp
movl
lock
xchg
je
inc
leave
test
mov
dec
addl
or
inc
xchg
sar
test
call
movl
stos
enter
movl
dec
cmp
or
sbb
xchg
call
mov
sahf
call
xor
pop
rcrl
jb
inc
and
shrb
dec
movl
cmpsl
enter
clc
stos
pop
or
mov
orl
cmpsl
enter
shrb
sahf
movl
dec
movl
loopne
dec
xchg
call
movl
cmpsl
enter
sub
xchg
pop
out
fnsetpm(287
push
xchg
shrb
dec
movl
cmpsl
enter
sub
je
cmp
xchg
rolb
stos
xchg
call
movl
in
dec
mov
jmp
mov
adc
leave
inc
xchg
jne
aaa
push
in
inc
rolb
dec
aaa
cltd
adc
sarb
pop
and
mov
inc
and
mov
out
push
and
mov
mov
movl
cmpsl
enter
sub
je
xor
lods
mov
sub
rcrb
mov
xchg
call
rcl
in
dec
pop
stos
rolb
scas
into
cmpsl
enter
lods
das
jp
movl
cmpsl
enter
test
push
movl
cmpsl
enter
mov
fwait
call
sub
je
das
out
or
dec
shrb
mov
push
mov
clc
mov
mul
shr
shlb
mov
movl
shr
push
xchg
call
adc
sar
sahf
xchg
call
pushf
das
or
pushf
add
cmpsl
enter
sub
je
sbb
lods
mov
sub
rcrb
push
xlat
xchg
call
rcl
in
scas
pop
mul
rcrb
repnz
xchg
call
add
mov
mov
mul
rcr
mov
xchg
jle
xor
ds
mov
xchg
sbb
mov
push
in
movl
call
xor
and
fcmovnu
add
jmp
movl
cs
rcl
in
dec
pop
stos
shlb
xchg
call
xorb
imull
sahf
dec
movl
mov
movb
loopne
inc
xchg
je
or
rolb
test
call
push
mov
adc
inc
shlb
test
call
and
cmpsl
movl
test
jbe
cmp
inc
xchg
pop
fcom
fneni(8087
mov
dec
call
mov
mov
jp
inc
and
push
cmpsl
enter
test
cmpsb
call
daa
inc
xchg
lods
mov
lock
xor
inc
mov
call
movl
call
movl
dec
cmp
xchg
call
movl
dec
cmp
call
movl
das
sub
mov
cmc
rcrl
or
or
or
test
call
movl
pop
aaa
mov
cld
dec
enter
movl
pop
cmp
xchg
call
movl
pop
cmp
or
mov
push
call
addr16
call
movl
pop
cmp
or
mov
push
enter
movl
push
aaa
mov
xchg
call
movl
pop
sub
inc
xchg
call
movl
pop
sub
jae
lret
sti
sbb
ds
in
mov
call
roll
xchg
sbb
dec
push
and
jecxz
andb
imull
xchg
dec
movl
lock
xchg
jo
inc
leave
test
mov
cli
xchg
jne
aas
push
jmp
inc
xchg
rcl
movsb
xchg
call
movl
stos
enter
movl
pop
aaa
stos
sti
pop
cmp
pop
inc
inc
jmp
mov
fwait
call
xor
pop
rcl
loopne
mov
sbb
inc
xchg
sbb
pushf
js
inc
dec
ja
jno
rcr
fcompl
add
lea
aas
jle
jns
xchg
je
cmp
daa
inc
xchg
je
mov
rolb
call
sub
je
cmp
mov
rorb
cmpsl
xchg
call
cmp
inc
shrb
pushf
adc
cld
xchg
call
insb
or
shrl
cmp
jbe
aaa
push
out
movl
call
sahf
inc
xchg
call
orb
jmp
movl
stos
enter
daa
inc
xchg
pop
fcom
fneni(8087
mov
dec
call
mov
mov
rcr
faddl
cs
dec
movl
rcrl
xchg
call
cmpsb
cmp
rorl
xchg
call
dec
xor
jbe
and
movsb
inc
xchg
je
cmp
mov
rclb
xchg
call
shrb
popf
movl
je
cmp
mov
sarb
cmpsb
xchg
call
shrb
popf
movl
sbb
mov
cmpsb
push
pop
or
mov
scas
int3
repnz
or
pop
inc
xchg
aam
sarb
mov
call
movl
call
movl
pop
cmp
xchg
call
movl
dec
adc
or
inc
xchg
call
movl
call
movl
push
sub
inc
xchg
call
movl
push
sub
xchg
call
movl
dec
enter
mov
pop
loope
sbb
ds
in
mov
call
aaa
or
dec
push
and
jecxz
or
jmp
movl
lock
xchg
outsb
movl
dec
push
push
pop
mov
jne
aas
push
jmp
inc
xchg
shrb
xchg
call
movl
stos
enter
movl
push
ss
add
dec
das
lods
or
inc
jmp
mov
movsl
call
xor
pop
rcrl
loopne
mov
mov
inc
xchg
sbb
pushf
hlt
nop
inc
dec
ja
jno
rcr
fcompl
add
or
or
inc
xchg
je
cmp
and
xchg
je
mov
rolb
call
daa
inc
xchg
je
inc
and
rcr
faddl
cs
movl
call
not
jmp
mov
icebp
out
stc
xchg
mov
xchg
sbb
rolb
push
and
xchg
je
shr
loopne
or
mov
mov
or
inc
rclb
mov
jle
mov
add
inc
and
aam
int3
mov
dec
call
addb
inc
movl
inc
movl
call
sbb
xchg
sbb
aam
loopne
lcall
push
mov
call
sbb
xchg
sbb
push
sbb
enter
add
inc
sbb
loopne
xchg
sbb
push
sbb
or
shrb
inc
movl
sbb
mov
xchg
jne
xor
mov
subl
loopne
sub
rcr
aam
fdiv
out
rcrb
push
mov
call
scas
not
xchg
dec
and
mov
es
movl
call
dec
stc
xchg
call
movl
out
mov
rolb
xchg
call
orb
out
xchg
call
pushf
xchg
pop
mov
jbe
pop
mov
mov
pop
mov
dec
xchg
call
movl
out
inc
out
jae
aas
jle
and
outsb
mov
inc
movl
push
xchg
inc
rolb
mov
jmp
cmp
inc
sar
lods
xchg
call
sahf
clc
xchg
call
in
setbe
push
pushf
push
or
inc
xchg
call
movsb
add
push
or
inc
xchg
inc
push
mov
sbb
mov
mov
setbe
mov
cld
out
aam
mov
int3
inc
call
xor
jmp
sbb
cwtl
call
xchg
inc
jae
aas
jle
je
xchg
je
or
jne
pop
out
leave
inc
xchg
call
not
fneni(8087
mov
inc
call
push
xchg
pop
inc
mov
sub
inc
or
int
xchg
call
rcr
mov
mov
sub
and
pop
fdivs
jle
jns
xchg
cmp
rcr
faddl
loop,pn
movl
shrb
cltd
movl
call
jl
xchg
sbb
mov
fneni(8087
mov
inc
call
cs
xchg
je
cmp
xchg
inc
rcl
mov
add
push
mov
call
movl
mov
jbe
fsubs
inc
xchg
pop
fdivs
jle
js
xchg
cmp
rcr
faddl
cs
movl
shrb
cltd
movl
call
les
xchg
sbb
mov
fneni(8087
mov
inc
call
sub
cmp
xchg
inc
rcrb
xchg
call
push
mov
call
movl
mov
jbe
pop
and
pop
fdivl
cmpsb
jae
aas
jle
js
xchg
cmp
rcr
faddl
cs
movl
cltd
lret
push
flds
call
xchg
call
movl
mov
jbe
adc
inc
xchg
pop
aad
fneni(8087
mov
inc
call
movl
mov
jbe
hlt
and
pop
or
inc
push
or
or
inc
xchg
je
add
and
cmp
dec
cmp
add
shrb
xchg
movl
cwtl
movl
call
xor
xchg
sbb
mov
out
leave
inc
xchg
call
not
fneni(8087
mov
inc
call
add
jmp
movl
cmp
add
shrb
xchg
movl
xchg
movl
jbe
repz
lret
call
not
fneni(8087
mov
inc
call
mov
sub
rcr
faddl
fiaddl
inc
or
mov
cmp
add
shrb
xchg
movl
mov
jbe
or
inc
xchg
pop
jmp
fisttpl
inc
push
or
or
inc
xchg
je
jmp
shlb
shr
xor
jmp
push
inc
xchg
mov
push
mov
call
jbe
xchg
call
movl
mov
jbe
lods
and
pop
cmp
fildl
inc
push
or
or
inc
xchg
je
jecxz
gs
inc
shlb
xchg
call
pusha
xchg
dec
ljmp
xchg
sbb
mov
push
lock
call
push
cmc
xchg
call
mov
push
lret
jne
mov
subl
loopne
test
call
mov
inc
call
sub
xchg
je
cmp
xchg
inc
rorb
lahf
xchg
call
shrb
xchg
movl
jbe
xlat
jle
mov
xchg
je
cmp
xchg
inc
shl
sahf
xchg
call
shrb
xchg
movl
jbe
sarl
mov
xchg
je
aas
jle
jne
xchg
rorl
pushf
sbb
xchg
sub
jbe
iret
jle
pushf
inc
xchg
sbb
mov
cmpsb
push
fisttpl
xchg
sbb
sbb
scas
push
jmp
or
sbb
aam
cmpsb
hlt
inc
push
sub
stos
enter
movl
jmp
movl
push
xor
negl
xchg
call
movl
push
imulb
xchg
call
movl
push
sub
xchg
call
movl
pusha
adc
or
inc
xchg
call
movl
aas
xor
lcall
inc
xchg
call
movl
call
movl
push
aaa
mov
xchg
call
movl
push
inc
lods
xchg
call
movl
dec
inc
mov
push
inc
lods
xchg
call
movl
push
sub
xchg
call
movl
pop
sub
inc
popf
call
cmp
xchg
call
movl
dec
enter
movl
push
aaa
mov
xchg
call
movl
call
movl
dec
cmp
or
cmp
xchg
call
movl
push
sub
push
pop
xor
xchg
call
movl
dec
inc
mov
xchg
call
movl
pop
sub
mov
aas
xor
xchg
call
movl
pusha
ss
xchg
call
movl
jmp
movl
push
sub
or
lods
or
xchg
call
movl
pop
sub
dec
cmp
xchg
call
mov
pop
loope
popf
in
jae
shr
loopne
mov
les
push
aas
movl
aas
movl
mov
jbe
out
stos
pop
or
xchg
roll
xchg
call
shrb
cmp
cmp
sbb
pop
inc
xchg
je
int3
mov
add
cs
add
shr
in
mov
mov
aam
out
shr
loopne
fwait
mov
push
fwait
scas
out
push
and
or
fnstenv
cmp
mov
jp
inc
jne
aas
push
jmp
inc
xchg
rclb
xchg
call
movl
inc
and
jae
add
call
xor
pop
rcrl
in
aaa
and
les
push
movl
call
ja
xchg
sbb
dec
push
and
inc
xchg
call
stos
xchg
call
movl
cmp
inc
in
jne
sti
xchg
call
enter
les
jbe
movl
call
xchg
jle
and
lret
xlat
lret
movl
call
addb
dec
notl
enter
sbb
xchg
pop
rcl
fisttpll
leave
dec
jg
leave
inc
xchg
jne
repz
call
orl
cmp
inc
and
inc
xchg
call
imull
push
cmp
into
inc
xchg
call
movl
jmp
sbb
je
out
xchg
call
enter
sbb
xchg
clc
dec
and
call
movb
pop
jae
in
enter
jbe
xchg
call
movl
call
ljmp
out
inc
and
xor
jmp
fs
xchg
call
addl
call
enter
sbb
pop
iret
rcr
or
dec
andl
inc
and
lcall
cmp
inc
xchg
je
fists
enter
sbb
pop
and
sbb
inc
xchg
jbe
jae
in
enter
repnz
xchg
call
movl
shlb
xchg
call
push
inc
xchg
call
int3
inc
xchg
call
shlb
jne
inc
xchg
jbe
xlat
xchg
call
mov
call
jns
inc
xchg
je
das
mov
cmp
int3
push
clc
dec
xchg
xchg
call
and
sbb
mov
cmpsb
push
jle
xchg
sbb
and
movl
shlb
xchg
xchg
call
or
bound
inc
or
lods
movsb
pop
jmp
movl
call
movl
push
xor
mov
aaa
mov
dec
cmp
call
movl
call
movl
jae
add
jmp
rcrl
xor
jmp
sub
mov
or
mov
jle
pop
inc
xchg
dec
push
mov
mov
aam
std
pop
rcll
out
xchg
call
mov
mov
jbe
jl
inc
xchg
aam
shr
rcl
std
pop
shl
out
xchg
call
mov
into
cmp
inc
cld
jae
inc
cld
imul
or
jp
and
inc
jne
sub
nop
movl
mov
scas
or
out
xor
mov
jbe
ds
dec
scas
mov
cmp
leave
push
or
movl
call
cs
cmp
sbb
andl
shr
xlat
std
pop
roll
mov
cltd
call
sbb
aam
inc
leave
push
adc
xchg
sbb
outsb
clc
jle
jle
outsl
inc
xchg
call
orb
cs
mov
decb
xchg
inc
jne
pop
push
out
movl
call
movl
into
and
inc
xchg
call
movl
call
enter
movl
call
mov
fwait
call
xor
pop
rcrl
xor
xchg
sbb
mov
or
mov
jle
push
inc
xchg
dec
push
mov
mov
push
push
pop
xchg
sbb
cmp
or
xchg
call
orb
cs
cmp
inc
cmp
jle
jle
outsb
inc
xchg
je
das
and
lods
and
lods
sbb
sarb
cs
lods
push
dec
scas
mov
cmp
movl
in
movl
call
xor
jmpw
jmp
xlat
std
pop
rcll
xchg
call
mov
cltd
call
sbb
dec
push
mov
mov
push
pusha
pop
xchg
sbb
jb
jle
jle
outsb
inc
xchg
call
orb
cs
movl
mov
pop
movsl
lahf
mov
rorb
mov
inc
xchg
call
jp
inc
and
adc
mov
inc
jle
adc
dec
xor
inc
mov
call
movl
call
movl
call
movl
jae
add
jmp
rcrl
inc
leave
jbe
test
scas
enter
cli
out
stos
pop
or
push
pop
cs
aam
fcoms
xchg
ljmp
xchg
jbe
aaa
push
xor
xchg
xchg
call
or
inc
xchg
je
inc
push
rcl
iret
fnsetpm(287
push
mov
cs
rcr
in
sbb
cmp
stos
lock
or
mov
lock
aas
ja
in
and
adc
push
mov
pop
inc
cwtl
call
movl
mov
push
inc
xchg
je
das
and
mov
fidivs
aam
jmp
scas
xchg
xchg
call
adc
xchg
sbb
jbe
idiv
xchg
call
xor
xchg
sbb
jb
mov
mov
xchg
sbb
mov
scas
add
out
rcr
loopne
xor
out
xchg
jle
dec
inc
xchg
insb
nop
inc
jle
mov
jbe
cmp
mov
jo
xchg
fwait
leave
out
xor
jbe
in
or
je
rcr
fdivl
rcrb
sbb
jg
inc
aam
fstpt
shl
mov
sbb
inc
xchg
je
pop
and
rcrb
mov
int
lock
call
jp
inc
and
iret
mov
pushf
add
int3
adc
lods
mov
fucom
xor
into
and
inc
popf
call
sub
xchg
call
movl
pop
enter
movl
call
mov
inc
add
xor
pop
rcrl
in
aaa
and
les
xchg
movl
call
fwait
sbb
dec
push
and
inc
xchg
call
xchg
call
movl
xor
inc
in
jne
sti
xchg
call
enter
les
cmpsb
xor
jl
xchg
call
xchg
jle
push
inc
xchg
je
lret
xlat
lret
movl
call
jnp
xchg
je
notl
enter
adc
inc
int3
out
inc
and
inc
xchg
call
int3
inc
xchg
call
movl
push
aam
xchg
sbb
push
in
movl
call
rcrl
xchg
movb
pop
jae
in
enter
into
xchg
xchg
call
movl
sarb
xchg
xchg
call
movl
call
int3
inc
xchg
call
rcrb
movb
in
sbb
out
push
sbb
enter
dec
jecxz
call
orl
xor
inc
and
inc
xchg
call
movl
xor
inc
and
inc
xchg
call
movb
xchg
inc
xchg
call
movl
call
movb
rcrb
sbb
mov
or
push
int3
sub
movl
jmp
adc
call
scas
mov
scas
orb
shlb
inc
andl
inc
and
lcall
adc
inc
xchg
je
xlat
xchg
call
enter
adc
xchg
pop
and
sbb
inc
xchg
jbe
jae
in
enter
into
xchg
xchg
call
movl
sarb
xchg
xchg
call
dec
inc
xchg
call
int3
inc
xchg
call
shlb
insl
movb
dec
iret
xchg
call
mov
loope
shrb
jno
inc
xchg
je
das
push
movl
out
int3
push
clc
dec
push
call
sbb
xchg
sbb
mov
cmpsb
push
mov
int3
sbb
movl
rclb
nop
xchg
call
out
xchg
call
movl
jae
movsb
pop
jmp
movl
call
movl
push
xor
mov
aaa
mov
dec
cmp
call
movl
call
movl
call
movl
jae
lret
sti
sbb
ds
in
mov
call
dec
sbb
sbb
dec
push
and
jecxz
and
jmp
movl
lock
xchg
pop
movl
dec
push
push
jbe
inc
jne
aas
push
jmp
inc
xchg
rclb
xchg
call
movl
stos
enter
movl
dec
cmp
pop
cmp
inc
jmp
mov
mov
jmp
rcrl
in
mov
call
ret
and
dec
push
sbb
inc
or
push
mov
cs
inc
xchg
mov
push
mov
call
pop
nop
xchg
call
or
inc
xchg
rcr
xchg
xchg
call
in
xchg
sbb
push
sbb
inc
xchg
jae
aas
jle
push
setne
mov
xchg
xchg
je
call
mov
jle
adc
je
aam
cld
ja
jle
adc
xor
jae
aaa
jle
adc
je
shr
fcoms
stos
shlb
cmp
jae
aaa
jle
cmovbe
cs
xchg
push
lods
aam
aam
cmp
out
pushf
xchg
pop
mov
jbe
pop
mov
fcmovne
orb
cs
inc
and
test
or
movl
sbb
nop
xchg
call
fsubrl
mov
cs
jbe
call
daa
mov
shrb
mov
orl
and
shrb
add
and
movsb
das
inc
mov
inc
out
or
inc
xchg
call
not
fneni(8087
mov
xor
rcr
shlb
jle
sbb
xchg
xchg
call
movl
rclb
xchg
call
and
sbb
mov
or
xor
jmp
sbb
xchg
call
movl
insb
adcb
movl
xor
inc
xchg
je
cmp
movsl
inc
rcrb
nop
xchg
call
scas
jl
call
lret
jae
aas
jle
inc
xchg
cmp
das
cmp
movl
call
leave
mov
cs
jbe
cld
adc
pop
repz
sarb
inc
add
xor
jmp
sbb
xchg
shll
xchg
xchg
call
movl
rcrb
mov
sbb
mov
push
add
add
xor
jmp
scas
add
out
das
aaa
movl
call
leave
cs
and
mov
jbe
mov
inc
xchg
pop
repz
rorb
xchg
call
xor
jmp
sbb
xchg
sarl
jmp
pop
iret
mov
shlb
loopne
call
test
sbb
mov
fiadds
xor
jmp
scas
mov
out
das
push
aaa
movl
call
leave
cs
cs
jbe
adc
inc
xchg
je
cmp
movsl
inc
shl
mov
jmp
aas
jae
divl
push
movl
enter
cmovbe
aaa
movl
call
xor
mov
or
inc
shlb
pop
add
scas
add
call
movl
call
mov
jbe
mov
inc
mov
shlb
xchg
call
orl
and
shrb
add
das
incb
or
inc
xchg
call
not
fneni(8087
mov
cs
mov
xor
xchg
jle
sbb
push
enter
enter
shrb
ljmp
inc
add
xor
stc
scas
mov
out
das
push
movl
call
leave
cs
cs
jbe
adc
inc
xchg
clc
dec
loop
call
rcr
xchg
call
orl
and
shrb
add
and
xchg
das
outsb
test
inc
out
or
inc
xchg
call
not
fneni(8087
mov
sub
mov
add
call
sbb
push
enter
enter
shrb
pop
cmp
inc
add
xor
jmp
scas
cld
call
push
enter
enter
outsb
cltd
xchg
call
xor
jmp
sbb
rcl
xchg
xchg
call
movl
sarb
ficoms
mov
mov
fsub
mov
idivb
inc
and
mov
xchg
mov
push
mov
call
mul
xchg
call
sbb
xchg
call
movsb
inc
jae
aas
jle
pop
inc
xchg
je
pop
jle
arpl
cmp
mov
push
enter
enter
loop
xchg
call
xor
jmp
sbb
rorl
xchg
call
movl
shlb
mov
sbb
push
sbb
data16
inc
and
test
xchg
mov
push
mov
call
data16
call
sbb
xchg
call
movsb
inc
jae
aas
jle
pop
inc
xchg
je
jle
arpl
cmp
mov
push
enter
enter
push
cwtl
xchg
call
xor
jmp
sbb
push
enter
enter
lret
cmp
inc
add
xor
jmp
scas
movsb
out
das
push
movl
call
leave
sarb
inc
and
mov
jbe
sub
inc
xchg
pop
fcmovnbe
sbb
ds
xor
fs
cmp
cmpsb
inc
shl
mov
shrb
sub
inc
and
jl
movb
jle
or
jbe
sti
push
movsl
cmpsb
inc
rolb
pushf
dec
jbe
aas
jle
mov
mov
xchg
sbb
mov
push
in
movl
call
out
xchg
call
adcb
jmp
movl
cltd
adc
shrb
xchg
call
jo
movb
jle
or
call
cmpsb
inc
out
aas
and
je
cltd
call
or
je
repz
rcrb
jbe
xchg
call
int3
rcr
loopne
mov
pop
rcll
xchg
call
xor
jmp
push
mov
mov
scas
adc
out
rcr
mov
mov
jp
enter
or
xchg
pop
clc
rcr
addb
xor
movl
enter
rcl
test
and
inc
and
fs
mov
jp
inc
and
cwtl
and
pusha
add
adc
inc
xchg
jbe
xor
movl
call
movl
inc
mov
call
movl
call
movl
dec
das
lods
xchg
call
movl
push
sub
mov
xchg
call
movl
cmp
mov
xchg
call
movl
pusha
ss
xchg
call
movl
jmp
movl
dec
cs
sti
sub
mov
xchg
call
movl
push
cmp
inc
xchg
call
movl
ss
mov
or
call
movl
ss
mov
xchg
call
movl
push
xor
cli
call
movl
dec
xor
lods
or
push
jmp
movl
call
aaa
stos
add
ss
pop
enter
movl
push
sub
push
pop
cmp
xchg
call
movl
ss
mov
decl
inc
xchg
call
movl
ss
mov
or
lods
fsts
add
movl
call
cs
sti
sub
stc
push
enter
movl
dec
cs
sti
sub
mov
add
mov
call
movl
pop
sub
xchg
call
movl
pop
enter
movl
push
sub
xchg
call
movl
pop
sub
scas
sti
call
movl
dec
xor
or
inc
jmp
mov
pop
loope
sbb
ds
in
mov
call
adc
xchg
sbb
dec
push
and
jecxz
andb
sub
inc
and
rcl
lock
xchg
push
movl
dec
push
push
cmp
aas
push
jmp
inc
xchg
rclb
xor
and
inc
adc
enter
movl
popa
cmp
cld
push
cmp
gs
mov
movsl
call
xor
pop
rcl
loopne
mov
aam
inc
xchg
sbb
pushf
jl
inc
dec
ja
jno
rcr
fcompl
add
xchg
stos
inc
jae
aas
jle
pop
inc
xchg
je
cmp
pop
inc
xchg
je
mov
rolb
call
or
insb
inc
cmp
popf
stos
inc
rol
xchg
in
movl
movsb
jo
xchg
je
das
and
mov
pop
int3
enter
pop
inc
xchg
je
xor
movb
push
mov
call
aam
fdivs
add
inc
leave
jbe
add
jle
xchg
call
push
xchg
xchg
mov
aad
rcr
int3
mov
xchg
call
rcl
enter
call
xor
jns
not
fneni(8087
orb
xchg
movl
les
inc
or
xor
jmp
mov
ss
xor
jmp
enter
rolb
call
pop
inc
xchg
call
pushf
das
push
movl
int3
enter
rolb
call
pop
inc
xchg
call
cwtl
das
sahf
xchg
movl
int3
enter
rolb
call
pop
inc
xchg
call
xchg
das
push
nop
movl
int3
enter
rolb
call
pop
inc
xchg
call
das
cmp
not
fneni(8087
orb
fisubl
movl
mov
or
mov
cmp
not
fneni(8087
orb
cs
pop
rcl
lods
mov
aas
call
xor
jns
not
fneni(8087
orb
cs
aam
test
call
or
not
fneni(8087
orb
jp,pn
movl
movsb
mov
aas
call
xor
jns
not
fneni(8087
orb
cs
daa
movl
mov
movl
jmp
orb
cmp
movl
xor
inc
leave
mov
jl
adc
jl
mov
enter
rolb
call
push
inc
xchg
call
js
repnz
xchg
pop
js
mov
enter
rolb
call
push
inc
xchg
call
insl
inc
xchg
jbe
repz
pop
inc
xchg
call
stos
inc
jne
aas
push
in
movl
call
jp
xchg
call
and
xchg
call
mov
mov
call
movl
roll
mov
xchg
sbb
mov
scas
cmp
out
inc
or
xor
jmp
enter
rolb
call
add
aas
adc
inc
push
mov
mov
call
movl
shrl
fistl
push
mov
mov
call
movl
rorl
fistl
push
mov
mov
call
movl
shr
ficoml
push
mov
mov
call
movl
ror
ficoml
push
mov
mov
call
movl
shrl
mov
xchg
sbb
mov
scas
fs
movl
rorl
mov
xchg
sbb
mov
scas
inc
shl
pushf
xchg
pop
mov
jbe
pop
rcl
jo
dec
xchg
call
movl
in
inc
out
sbb
shlb
sbb
push
mov
scas
enter
or
std
inc
xchg
aam
sarb
mov
call
movl
call
movl
push
sub
xchg
call
movl
push
adc
call
movl
pop
sbb
pop
inc
inc
xchg
call
movl
call
movl
call
movl
call
movl
adc
xchg
call
movl
dec
xor
xchg
call
scas
clc
fucom
out
xchg
negl
jbe
inc
jmp
mov
fwait
call
xor
pop
rcrl
xor
xchg
sbb
mov
or
mov
pusha
add
dec
push
mov
mov
aam
std
pop
rol
fcoms
je
add
into
enter
add
aam
shr
rcl
std
pop
shll
pushf
jle
mov
jle
movl
imul
or
jp
je
inc
jne
sub
jp
inc
xchg
pop
lods
rcrb
lret
inc
xchg
call
xor
into
enter
test
dec
scas
mov
daa
call
push
or
movl
call
cs
cmp
sbb
sarl
not
jmp
xlat
std
pop
shll
fcoms
je
add
adc
inc
xchg
aam
inc
leave
push
pusha
sub
sbb
outsb
clc
jle
jle
pop
inc
xchg
call
orb
cs
mov
pop
lods
inc
jne
pop
push
out
movl
call
movl
into
and
inc
xchg
call
movl
call
enter
movl
call
mov
fwait
call
xor
pop
rcrl
xor
xchg
sbb
mov
or
mov
or
inc
xchg
dec
push
mov
mov
push
movsb
sub
cmp
or
xchg
call
orb
cs
inc
cmp
jle
jle
pop
inc
xchg
je
das
and
lods
and
lods
sbb
sarb
jle
enter
lods
push
dec
scas
mov
es
push
or
movl
call
xor
jl
not
jmp
xlat
std
pop
roll
xlat
xchg
call
mov
cltd
call
add
dec
push
mov
mov
push
mov
xchg
sbb
jb
jle
jle
push
inc
xchg
call
orb
bound
movl
fsubrl
pop
movsl
lahf
mov
cmpb
xchg
pop
mov
inc
xchg
call
jp
inc
and
arpl
enter
mov
inc
jle
incl
lods
mov
enter
addl
inc
xchg
call
movl
call
movl
call
movl
jae
add
call
xor
pop
rcrl
jae
push
and
jns
xor
sub
stos
xchg
sbb
mov
pop
lcall
mov
rcr
in
dec
xchg
call
dec
leave
cltd
call
enter
dec
mov
aam
es
push
int3
fdivs
xchg
call
dec
mov
mov
mov
int
aam
fdivrp
movmskps
movl
call
movl
call
addr16
push
mov
sbb
xor
push
hlt
xor
out
inc
and
inc
xchg
call
xor
movl
call
not
fneni(8087
orb
cs
and
inc
subl
movl
call
mov
inc
xchg
call
jp
xchg
call
sbb
inc
xchg
rcrb
jle
call
orl
call
shrb
and
inc
jle
or
and
out
jmp
leave
inc
xchg
push
and
xchg
sbb
dec
out
inc
jle
lds
call
scas
mov
enter
jl
xchg
call
movl
push
cmp
xchg
sbb
aam
cltd
movb
push
or
inc
out
inc
and
mov
inc
jle
incl
insb
add
inc
or
push
int3
inc
out
inc
and
mov
jbe
sub
inc
xchg
je
repz
call
in
lahf
xchg
sbb
lret
sub
call
movl
call
imull
push
pop
movl
call
not
sbb
mov
xchg
call
movl
jne
das
push
in
movl
call
push
jg
call
movl
pop
movl
push
dec
inc
xchg
call
xor
call
dec
jecxz
call
movl
call
movl
pop
movl
call
xchg
jle
pop
inc
xchg
je
mov
push
enter
mov
xlat
out
mov
jne
sub
push
int3
rcr
aam
lcall
enter
sbb
fcmovnu
mov
int3
out
xchg
and
mov
mov
daa
movl
mov
lahf
xchg
sbb
xchg
push
xchg
mov
sar
jl
call
leave
jbe
pop
in
rcrl
add
aaa
push
gs
rcr
jl
call
movl
jmp
movl
sbb
push
sbb
enter
dec
fistl
leave
jbe
cmp
inc
xchg
call
scas
es
jbe
outsb
pop
inc
xchg
call
movl
push
push
mov
int3
inc
xchg
call
rcr
shlb
xchg
jle
xor
je
aaa
jle
std
inc
xchg
jb
xor
jmp
mov
push
enter
enter
push
int3
push
out
inc
jle
ret
inc
xchg
je
iret
xchg
call
movb
sbb
inc
xchg
je
rcll
movl
call
xor
jmp
movl
cmp
dec
and
mov
jmp
call
lods
xchg
and
mov
inc
out
or
je
out
lcall
mov
cmpsb
push
xor
out
inc
push
test
jns
call
sarb
call
lret
call
ret
call
movl
dec
mov
mov
call
movl
call
movl
call
movl
push
sub
icebp
call
movl
and
mov
notl
enter
movl
dec
cmp
icebp
call
movl
fs
movl
dec
inc
xchg
add
gs
movl
push
das
mov
xchg
call
movl
call
movl
dec
adc
jmp
notl
cmp
push
jle
or
mov
lahf
xchg
sbb
mov
leave
jbe
pop
xchg
inc
add
scas
and
out
lret
and
call
scas
nop
shl
or
jae
lret
sti
sbb
ds
in
mov
call
pop
xor
dec
push
and
jecxz
xorb
sbb
inc
and
rcl
lock
xchg
inc
movl
dec
push
push
incb
inc
jne
aas
push
jmp
inc
xchg
rolb
xor
aam
mov
xchg
call
movl
push
das
lods
or
inc
jmp
mov
pushf
call
xor
pop
rcrl
in
mov
call
pushf
xor
dec
push
and
dec
ljmp
xchg
sbb
mov
ljmp
rcrl
jne
aas
push
ljmp
xchg
call
mov
inc
leave
out
mov
mov
leave
jbe
es
lahf
xchg
sbb
mov
xchg
sbb
lret
enter
orb
imull
and
inc
out
jae
inc
cmp
add
inc
or
push
mov
jmp
divl
mov
inc
and
mov
jbe
cmp
xchg
pop
or
adc
enter
cmpb
imull
cmp
movl
in
jmp
xchg
sbb
imul
test
call
movl
cmp
jp
mov
lahf
xchg
sbb
mov
mov
leave
out
mov
jle
clc
inc
xchg
jbe
xor
and
shrb
xchg
call
xor
xchg
sbb
shr
aam
mov
call
xor
test
testl
mov
scas
ror
rcr
shlb
mov
adc
enter
cli
inc
xchg
pop
inc
stc
xchg
mov
xchg
sbb
shrb
or
dec
rolb
js
call
xor
xchg
sbb
mov
push
in
movl
call
mov
decb
and
rcrb
or
cs
inc
and
pushf
xchg
pop
mov
jbe
pop
rcl
les
xchg
movl
out
inc
out
jae
cmp
mov
shlb
jns
call
cwtl
add
inc
leave
jbe
lods
clc
inc
xchg
call
mov
out
aas
and
pushf
add
pushf
stc
inc
xchg
je
sbb
mov
inc
leave
test
mov
inc
mov
jne
pop
push
icebp
movl
call
lret
call
or
repnz
xchg
aam
mov
xchg
call
movl
call
movl
jmp
movl
pop
sub
sti
popa
call
lods
or
or
lods
cli
call
movl
pop
aaa
mov
call
movl
pop
sub
sti
popa
call
lods
or
or
or
mov
dec
enter
movl
push
das
mov
xchg
call
movl
call
movl
dec
cmp
add
call
movl
dec
enter
mov
pop
loope
sbb
ds
in
mov
call
mov
inc
dec
push
and
jecxz
orb
imull
scas
sbb
inc
and
rcl
lock
xchg
inc
movl
dec
push
push
loop
inc
jne
aas
push
jmp
inc
xchg
shr
je
call
movl
stos
enter
movl
dec
cmp
notl
scas
sti
pop
inc
inc
jmp
mov
sahf
call
xor
pop
rcl
loopne
mov
xor
inc
xchg
sbb
pushf
push
mov
ja
jno
rcr
fcompl
add
gs
aas
jle
dec
inc
xchg
je
cmp
testl
rolb
call
stc
inc
xchg
je
cmp
mov
ja
call
cmp
inc
jne
xor
dec
inc
xchg
call
mov
inc
jle
testl
aam
inc
xchg
inc
push
mov
sbb
mov
jle
dec
inc
xchg
je
cmp
mov
jbe
call
shrb
push
inc
and
mov
jbe
fdiv
inc
xchg
pop
rcl
fneni(8087
mov
sbb
rcr
faddl
jb,pn
movl
call
orl
fcmovne
jbe
shrb
imul
xchg
and
lods
xchg
dec
out
movl
sbb
mov
jb
xchg
call
ds
xchg
call
sbb
pushf
call
mov
aas
jle
dec
inc
xchg
je
daa
jle
dec
inc
xchg
cmp
jb
orl
fcmovne
jbe
shrb
imul
xchg
and
mov
inc
xchg
mov
push
mov
call
push
mov
orl
fcmovne
jbe
shrb
push
pushf
mov
xchg
call
mov
fs
push
sbb
inc
xchg
jne
pop
out
int3
inc
xchg
call
not
fneni(8087
mov
push
call
sbb
inc
push
gs
aas
jle
inc
inc
xchg
je
adc
dec
inc
xchg
cmp
pop
cmp
add
fcmovne
jbe
shrb
push
nop
xchg
and
mov
xchg
mov
push
mov
call
push
mov
orl
fcmovne
jbe
shrb
push
mov
xchg
call
and
mov
not
fldt
cs
adc
inc
pop
rcr
insl
xchg
call
and
inc
xchg
call
movl
call
cmp
xchg
call
movl
jmp
movl
pop
aaa
mov
call
movl
dec
xor
inc
xchg
call
movl
push
xor
xchg
call
movl
call
mov
pop
loope
sbb
ds
in
mov
call
pop
cmp
dec
push
and
jecxz
sbbb
adc
rcl
lock
xchg
cmp
and
cs
aas
push
jmp
inc
xchg
rcrb
xor
push
movl
stos
enter
movl
push
cmp
cli
sub
mov
push
sub
or
inc
jmp
mov
ret
inc
add
xor
pop
rcl
loopne
mov
fdiv
inc
xchg
sbb
pushf
jecxz
inc
dec
ja
jno
rcr
fcompl
add
stc
mov
aas
jle
inc
inc
xchg
je
cmp
repz
xchg
je
mov
rolb
call
testb
or
inc
ror
jae
call
movl
jbe
jmp
inc
push
shll
ljmp
sbb
jmp
xorb
pop
movl
call
mov
inc
and
mov
adc
inc
and
or
inc
xchg
rol
je
call
testl
jmp
movb
lret
inc
xchg
call
shrb
popf
movb
adc
inc
push
shll
xchg
call
cmp
inc
jne
aas
push
in
movl
call
testl
jmp
movb
lret
inc
xchg
call
shrb
cltd
movb
adc
inc
push
shrl
mov
call
cmp
inc
jne
aas
push
in
movl
call
testl
jmp
movb
lret
inc
xchg
call
shrb
xchg
movb
adc
inc
push
shl
mov
call
cmp
inc
jne
aas
push
in
movl
call
testl
jmp
movb
lret
inc
xchg
call
shrb
xchg
movb
adc
inc
push
rcrl
mov
clc
mov
aas
push
in
movl
call
testl
jmp
movb
lret
inc
xchg
call
shrb
movb
adc
inc
push
rcll
xchg
call
cmp
inc
jne
aas
push
in
movl
call
ret
call
adc
inc
or
xor
jmp
push
int3
ss
inc
push
in
movl
call
movl
inc
push
mov
sbb
mov
xchg
call
fadds
call
aam
mov
xchg
add
call
in
xchg
jbe
push
xchg
call
xchg
inc
xchg
call
push
sbb
enter
dec
sub
rcrl
in
inc
xchg
cmp
dec
out
inc
out
enter
enter
enter
or
inc
xchg
cmp
inc
jle
cli
inc
xchg
je
cmp
rolb
inc
jno
call
les
call
movl
call
movl
call
movl
call
enter
cs
call
movl
outsb
lods
inc
xchg
call
push
int3
xchg
out
inc
out
dec
call
xor
jmp
xor
shrb
adc
inc
out
enter
movl
dec
push
push
ljmp
xchg
call
movl
jbe
pop
push
repnz
call
movl
stos
enter
movl
jmp
movl
push
cmp
xchg
call
movl
dec
cmp
pop
cmp
call
mov
pop
and
or
lods
add
lods
or
add
cmp
mov
xchg
call
movl
call
movl
aaa
push
fwait
in
sub
mov
xor
cmp
call
mov
pop
and
or
lods
add
push
lods
or
add
sbb
mov
xchg
call
movl
sub
mov
in
xor
inc
xchg
call
movl
push
sub
in
dec
cmp
xchg
call
movl
push
cmp
xchg
call
movl
pop
cmp
add
mov
xchg
call
movl
cmp
mov
push
cmp
or
mov
call
movl
repnz
call
xor
add
movl
call
xor
add
cs
movl
jno
inc
and
les
xchg
adc
inc
leave
test
scas
push
loope
jbe
out
stos
pop
or
push
add
xor
jmp
mov
mov
shl
ja
call
movl
inc
and
mov
not
fnsetpm(287
mov
mov
movsb
call
rcrb
and
jae
lret
sti
sbb
ds
in
mov
call
idivl
xchg
sbb
dec
push
and
jecxz
orb
inc
and
rcl
lock
xchg
aaa
movl
dec
push
push
push
roll
or
inc
xchg
shrb
xor
or
inc
adc
enter
movl
dec
sub
push
pop
cmp
inc
jmp
mov
pushf
call
xor
pop
rcrl
jb
inc
and
shrb
adc
inc
leave
test
scas
pop
in
jbe
out
stos
pop
or
xchg
je
dec
and
mov
inc
xchg
mov
push
mov
call
mov
xchg
call
or
inc
xchg
sarb
outsl
xchg
call
mov
xchg
sbb
mov
xchg
inc
xchg
sbb
jp
mul
xchg
call
or
inc
xchg
shlb
insl
xchg
call
stos
inc
xchg
call
cmpb
jmp
movl
call
lret
movl
jmp
lret
inc
xchg
shl
jae
call
movl
call
xor
add
inc
xchg
je
pop
xchg
call
cli
inc
xchg
ror
jae
call
faddl
call
stc
inc
xchg
cmp
inc
add
xor
jmp
les
shlb
mov
jle
hlt
inc
xchg
jb
pop
xchg
call
or
inc
xchg
cmp
push
lcall
inc
and
inc
xchg
call
movl
push
enter
movl
je
pop
xchg
call
stc
inc
xchg
push
enter
fsubrs
and
faddl
call
movl
sbb
shlb
std
movl
jmp
movl
adc
inc
shlb
rcr
fadds
outsb
push
movl
jmp
rclb
inc
and
inc
xchg
call
movl
stc
scas
insb
ret
rclb
std
movl
out
das
stos
adc
inc
leave
mov
movl
in
jbe
je
inc
xchg
clc
dec
xchg
adc
inc
sbb
push
sbb
leave
inc
xchg
push
enter
add
xchg
call
rclb
std
movl
out
aam
enter
call
subb
or
inc
and
test
xchg
movl
in
movl
je
pop
xchg
call
clc
inc
xchg
jbe
pop
jle
dec
inc
xchg
jbe
pop
push
dec
lds
rcrb
mov
subb
pop
and
movsb
das
or
inc
and
movsb
das
push
in
inc
and
push
mov
call
mov
lds
rcr
xchg
call
sub
xchg
sbb
rcr
mov
xchg
jle
hlt
inc
xchg
insb
inc
pop
xchg
pop
fcmovnu
mov
mov
jbe
pop
inc
push
mov
mov
aam
rcr
fdivl
rcrb
sbb
cs
inc
and
shr
fdivl
aam
mov
ljmp
jbe
xor
ljmp
push
movsb
inc
xchg
sbb
mov
push
in
movl
call
push
inc
xchg
call
cmpb
or
inc
or
push
mov
call
and
xchg
jmp
adcb
cs
movl
call
push
sub
stos
enter
movl
jmp
movl
dec
xor
inc
xchg
call
movl
dec
cmp
mov
call
mov
jmp
movl
pop
cmp
xchg
call
movl
dec
cmp
cli
call
movl
push
cmp
stc
pop
enter
movl
dec
cmp
pop
enter
movl
push
cmp
push
cmp
call
movl
sub
movl
pop
movl
jle
inc
xchg
call
movl
rclb
leave
test
scas
or
enter
clc
stos
pop
or
inc
xchg
sbb
mov
movl
mov
aam
aam
aam
loopne
das
ficoml
movl
cmp
xchg
push
mov
out
aam
jo
das
mov
inc
and
mov
mov
cs
test
mov
leave
inc
xchg
dec
mov
rcrl
popa
movl
cmp
inc
add
xor
call
das
xchg
jmp
mov
xchg
call
mov
shl
rcr
loopne
das
sub
movl
call
enter
sbb
fcmovnu
sbb
loop
movl
clc
movl
shlb
call
hlt
inc
xchg
jbe
and
jae
mov
jle
repz
xchg
push
and
insl
pop
inc
xchg
call
lcall
call
cmp
jmp
push
mov
stos
addr16
call
sbb
fcmovnbe
sbb
mov
jmp
xor
call
sbb
fcmovnu
sbb
ds
inc
sbb
inc
or
push
int3
push
call
adc
inc
xchg
jae
inc
jle
ljmp
call
movl
sbb
shrb
pop
movl
rcll
ret
lret
loopne
movl
call
data16
call
mov
mov
aam
das
sub
movl
dec
push
push
popa
movl
call
movl
jbe
das
jle
out
xchg
jbe
inc
jle
out
xchg
lods
mov
mov
xor
push
sub
stos
enter
sub
xchg
call
movl
push
sub
or
mov
gs
or
inc
jmp
mov
pop
nopl
mov
mov
lods
jmp
pushf
and
inc
dec
ja
jno
rcr
fcompl
add
cmp
inc
jae
aas
jle
cmp
je
cmp
out
xchg
je
mov
rolb
call
ljmp
inc
enter
sahf
addr16
call
push
mov
call
xor
dec
adc
mov
inc
xchg
sbb
mov
cmpsb
push
or
sbb
mov
scas
and
sub
inc
xchg
aam
sarb
mov
call
movl
call
movl
jmp
mov
jmp
les
sahf
or
inc
leave
test
scas
xchg
jmp
clc
stos
pop
or
xchg
mov
mov
mov
mov
xchg
push
clc
inc
xchg
sbb
mov
xchg
push
adc
xchg
sbb
mov
xchg
push
xor
sbb
mov
xchg
push
inc
dec
xchg
sbb
mov
xchg
push
and
xchg
jmp
mov
mov
or
loopne
xchg
aam
rcrb
and
call
movl
sub
jmp
cmp
xchg
ljmp
inc
cmpsl
call
or
cltd
call
cmp
movl
call
or
mov
xor
xchg
xlat
sub
nop
in
enter
movl
xor
mov
cmp
inc
xchg
call
movl
sub
fwait
cmc
sub
xchg
fdivl
cmova
jae
lret
sti
sbb
ds
in
mov
call
mov
xchg
sbb
dec
push
and
jecxz
orb
imull
mov
movl
lock
xchg
movl
dec
push
push
fmulp
inc
jne
aas
push
jmp
inc
xchg
shr
bound
add
inc
adc
enter
movl
dec
das
mov
pop
cmp
fisttpl
add
jae
add
jmp
rcl
loopne
mov
xor
inc
xchg
sbb
pushf
cmp
inc
dec
ja
jno
rcr
fcompl
add
dec
int
jae
aas
jle
aaa
inc
xchg
je
cmp
in
xchg
je
mov
rolb
call
out
xchg
je
cmp
int
shlb
gs
call
movl
jmp
inc
xchg
mov
push
mov
call
push
mov
orl
in
enter
shrb
push
movl
out
inc
and
mov
inc
xchg
ds
mov
xchg
sbb
mov
push
in
movl
call
jbe
xchg
call
sbb
cwtl
call
int
jae
aas
jle
ss
xchg
je
daa
out
or
inc
xchg
call
not
fneni(8087
mov
add
rcr
les
aam
fsubs
das
out
dec
movl
ss
jbe
xchg
in
xchg
je
pop
jle
movb
push
mov
sbb
mov
out
lret
call
not
fneni(8087
mov
add
rcr
mov
sbb
xchg
call
int
jae
aas
jle
ss
xchg
je
pop
jle
les
lcall
xchg
je
cmp
int
rolb
fs
call
xchg
xchg
dec
jmp
inc
xchg
mov
push
mov
call
push
mov
orl
in
enter
shrb
push
movl
in
inc
lock
cmpsb
xchg
call
mov
mov
mov
mov
out
lret
call
not
fneni(8087
mov
add
rcr
lods
sbb
fldt
movl
jae
aas
jle
xor
pop
jle
les
inc
mov
jmp
rcr
faddl
cmp
ret
inc
xchg
call
orl
in
enter
shrb
push
movl
pop
movl
jne
jmp
mov
subl
add
rcr
mov
xchg
and
jl
dec
jmp
inc
xchg
mov
push
mov
call
push
mov
orl
in
enter
shrb
push
movl
in
inc
lock
mov
out
out
xor
jbe
repz
int3
inc
xchg
call
not
fneni(8087
mov
add
rcr
xchg
mov
pop
call
jo
dec
in
movl
sbb
mov
mov
xchg
call
push
mov
cmp
add
in
enter
shrb
push
movl
cs
inc
xchg
mov
push
mov
call
incb
call
pop
inc
xchg
sbb
mov
cmpsb
push
pop
dec
xchg
sbb
mov
scas
or
out
or
faddl
aam
sarb
mov
call
movl
call
movl
dec
inc
mov
xchg
call
movl
dec
xor
sti
pop
inc
inc
xchg
call
movl
dec
adc
call
movl
dec
push
test
pop
sub
inc
lahf
call
sub
lods
psubsw
inc
xchg
call
movl
dec
push
test
pop
sub
lret
sti
sbb
ds
in
mov
call
pop
dec
xchg
sbb
dec
push
and
jecxz
sbbb
add
inc
and
rcl
lock
xchg
sub
inc
leave
test
mov
cs
inc
jne
aas
push
jmp
inc
xchg
rcrb
xor
sti
movb
and
xchg
call
movl
pop
cmp
jmp
push
inc
inc
jmp
mov
dec
out
movl
xor
lcall
push
mov
fsub
inc
xchg
je
push
jle
loop
xchg
je
dec
jle
loop
xchg
jbe
inc
leave
test
scas
aaa
repnz
clc
stos
pop
or
mov
rcrb
call
test
sbb
mov
push
xchg
lret
imul
pop
add
fcmovnu
sbb
xchg
call
roll
jae
aas
jle
xor
je
cmp
loopne
xchg
je
mov
rolb
call
jecxz
xchg
je
aas
and
scas
dec
xchg
call
inc
arpl
call
inc
dec
xchg
testl
jmp
push
mov
call
or
inc
xchg
xor
lahf
jmp
das
cmp
cmc
push
mov
int3
inc
xchg
call
rcr
shlb
mov
xchg
call
mov
xchg
xchg
jle
sub
shrb
xchg
call
orl
repnz
mov
inc
and
mov
inc
and
or
inc
xchg
sarb
popa
xchg
call
or
inc
xchg
je
sub
jne
daa
and
shrb
push
movl
loopne
inc
xchg
outsb
mov
movsl
jae
dec
push
cmc
roll
sarb
andb
dec
mov
sbb
movl
sbb
mov
xchg
sbb
mov
xchg
sbb
mov
push
out
movl
call
xchg
and
fcmovnu
mov
lods
out
int3
push
clc
push
xchg
xchg
call
scas
jo
call
push
pushf
mov
call
rcr
fcompl
add
jmp
or
inc
xchg
je
cmp
filds
je
lret
push
mov
call
aam
rclb
shl
mov
outsb
cmp
push
or
inc
xchg
je
sbb
shl
pusha
xchg
call
push
mov
sbb
mov
push
icebp
push
sbb
xor
jmp
das
cmp
cmc
mov
push
out
movl
call
ret
call
mov
lods
out
int3
push
clc
push
fwait
xchg
call
inc
rcr
clc
scas
test
call
push
pushf
mov
call
mov
inc
xchg
mov
push
mov
call
cs
xchg
call
lret
fadds
jle,pn
movl
call
fcoms
jecxz
push
pushf
mov
call
push
mov
mov
les
je
aaa
jle
fiadds
outsb
mov
sub
inc
sub
cmpsb
push
jo
xchg
sbb
bound
scas
enter
aam
lock
std
movb
mov
and
jnp
mov
call
movl
pop
aaa
mov
call
movl
jmp
movl
pop
sub
sti
dec
cmp
rorb
enter
movl
call
movl
call
movl
call
movl
dec
sub
notl
adc
movl
call
sub
sti
popa
inc
inc
jmp
mov
pop
loope
sbb
ds
in
mov
call
pop
push
xchg
sbb
dec
push
and
jecxz
sub
jmp
movb
rcl
lock
xchg
movl
dec
push
push
incb
or
inc
xchg
rorb
xchg
call
movb
and
xchg
call
movl
pop
cmp
jmp
push
inc
inc
jmp
mov
pop
mov
xchg
shlb
rol
xchg
jb
sbb
mov
push
and
int
inc
xchg
jb
daa
xchg
call
push
xchg
xchg
aas
pop
cs
rcr
loopne
enter
jp
ds
mov
sbb
mov
or
inc
xchg
call
not
fneni(8087
mov
cld
out
rcr
fdivl
rcrb
push
mov
call
rcr
faddl
cs
movb
push
int3
jp
movl
call
not
fneni(8087
mov
cld
out
rcrb
int
inc
xchg
cmp
jbe
movl
call
not
fneni(8087
mov
cld
out
rcrb
leave
les
shll
xchg
xchg
mov
out
pushf
xchg
pop
mov
jbe
pop
mov
inc
xchg
mov
scas
in
stos
out
rcrb
xchg
roll
xchg
call
adcb
jmp
movb
push
mov
call
push
mov
call
jb
xchg
call
mov
stos
out
shlb
dec
das
xchg
call
call
pop
xchg
call
les
roll
pop
xchg
call
movl
call
lds
shr
pop
xchg
call
movl
call
movb
rcrb
call
movl
ds
fnsetpm(287
mov
nop
call
push
mov
call
enter
lds
inc
sti
push
lock
and
mov
mov
into
inc
xchg
call
aam
fadds
cs
movb
stos
push
xchg
call
and
inc
xchg
call
movl
call
cmp
xchg
call
movl
dec
sub
xchg
call
movl
dec
cmp
xchg
call
mov
pop
loope
sbb
ds
in
mov
call
andps
dec
push
and
jecxz
andb
sti
movb
rcl
lock
xchg
and
inc
leave
test
mov
ss
jne
aas
push
jmp
inc
xchg
rclb
xor
hlt
movb
and
xchg
call
movl
sub
mov
pop
cmp
jae
add
call
xor
pop
rcrl
jb
inc
and
shrb
cld
movb
aam
aad
inc
xchg
sbb
pushf
inc
flds
dec
ja
jno
rcr
fcompl
add
inc
jae
aas
jle
sub
xchg
je
cmp
flds
je
mov
rolb
call
faddl
je
cmp
flds
rol
pop
xchg
call
movl
mov
or
das
es
movb
lret
inc
xchg
jne
aas
leave
mov
add
je
aas
push
cmc
flds
rorb
lret
movl
call
call
inc
and
inc
xchg
call
in
xchg
sbb
mov
push
movl
int
inc
xchg
je
aaa
push
adc
dec
pop
xchg
call
movl
cmp
shrb
das
inc
xchg
call
fiaddl
out
aaa
decb
jne
and
movl
sbb
adc
stos
xchg
call
movl
call
cs
movb
test
xchg
call
xchg
jle
cmovbe
lock
out
inc
xchg
aas
xor
or
xor
test
not
sbb
orl
cli
enter
mov
jp
movl
call
movl
rorb
pop
xchg
call
movl
cmp
shrb
das
inc
xchg
call
fiaddl
out
aaa
js
inc
jne
adc
movl
sbb
adc
test
out
inc
and
inc
xchg
call
cs
inc
and
inc
xchg
call
xchg
jle
push
inc
xchg
je
iret
fdiv
xor
out
inc
xchg
aas
xor
or
xor
test
not
sbb
orl
cli
enter
mov
dec
movl
call
movl
rcrb
xchg
call
movl
cmp
shrb
das
inc
xchg
call
mov
call
mov
sbb
rcrb
test
push
pop
xchg
call
movl
jne
add
movl
sbb
adc
test
call
movl
cmp
mov
push
enter
dec
call
adcb
jmp
movb
addb
mov
cmpsl
out
xchg
jle
or
iret
fdiv
xor
jmp
fiaddl
out
aaa
fcomp
inc
jne
notl
movl
call
dec
sti
xchg
call
movl
je
sti
xchg
call
movb
data16
sub
mov
push
enter
dec
repz
call
addb
imull
scas
test
inc
xchg
call
xchg
jle
or
iret
fdiv
jns
aaa
cltd
adc
shrb
pop
and
inc
xchg
call
aam
xchg
movb
sbb
inc
xchg
je
out
xchg
call
dec
mov
faddl
xchg
insb
ret
lock
aas
xchg
pop
loopne
cwtl
data16
pop
shll
mov
rcl
in
scas
call
pop
roll
int3
cmp
movl
jbe
jmp
call
mov
movsb
out
rcrb
movb
out
push
xchg
call
movl
call
adcb
imull
div
movb
push
movsb
xchg
call
dec
mov
sti
in
inc
sbb
out
xchg
call
in
xchg
sbb
jp
inc
and
ja
enter
push
pop
xchg
call
movb
mov
lcall
inc
xchg
lods
mov
popf
out
xor
mov
xchg
call
movl
call
movl
jmp
movl
pop
aaa
mov
call
movl
push
xor
xchg
call
movl
push
sub
mov
or
test
dec
sub
push
xor
xchg
call
movl
call
movl
dec
xor
or
mov
dec
call
inc
mov
dec
xor
or
enter
movl
pop
sub
dec
cmp
xchg
call
movl
pop
sub
addr16
call
movl
dec
sub
xchg
call
movl
call
movl
dec
lods
mov
movl
call
movl
call
aaa
mov
xchg
call
movl
fs
movl
push
sub
xchg
call
pop
pushf
sbb
movl
call
sbb
mov
movl
shlb
mov
lock
aam
or
xchg
and
add
call
movl
call
in
push
out
or
mov
add
inc
and
pop
popf
jle
filds
jb
push
or
adc
cmp
cltd
and
or
mov
jmp
movl
rclb
xchg
call
movb
ficompl
call
movl
inc
daa
movsl
icebp
stos
push
pop
jmp
mov
lahf
call
xor
pop
rcrl
inc
leave
jbe
test
scas
sub
enter
clc
stos
pop
or
mov
mov
mov
loope
pop
lods
jmp
enter
rolb
call
aam
xchg
call
fiadds
jne
cmp
jg
dec
xchg
call
movl
jbe
inc
cltd
call
movb
mov
jbe
mov
or
inc
xchg
shlb
mov
xchg
sbb
xorb
cwtl
call
movb
mov
fcmovnbe
push
fstl
test
inc
xchg
call
fiadds
push
cwtl
pop
xchg
sbb
mov
scas
hlt
mov
loope
lods
jmp
enter
rolb
call
roll
call
fiadds
jne
sub
das
inc
xchg
call
filds
push
cwtl
pop
xchg
sbb
mov
scas
mov
out
stc
xchg
mov
xchg
sbb
shrb
or
inc
xchg
je
shr
loopne
or
and
sahf
mov
call
or
inc
rolb
xchg
call
mov
cs
mov
xchg
out
mov
push
adc
xchg
sbb
xchg
lods
jmp
mov
cld
out
aam
les
cs
movb
movsb
das
hlt
movb
sbb
sbb
inc
jle
std
inc
xchg
imul
mov
pop
dec
lcall
inc
and
pushf
aam
rolb
out
movb
mov
jle
adc
adc
jg
dec
xchg
call
shl
mov
mov
sub
sbb
shr
mov
inc
das
push
movl
call
or
dec
xchg
call
shl
lods
push
mov
pusha
pop
xchg
sbb
shr
mov
dec
xchg
call
movl
call
adc
inc
mov
mov
fsubp
aam
test
scas
mov
leave
jbe
cs
jmp
out
xchg
call
or
dec
xchg
call
movl
mov
scas
dec
mov
movsb
sti
mov
les
push
movl
in
push
jecxz
sbbb
jmp
mov
xchg
sbb
mov
cmpsb
push
arpl
sbb
dec
mov
scas
enter
or
lret
aam
cmpsb
hlt
inc
push
sub
stos
enter
movl
dec
sub
cld
cmc
roll
call
movl
call
movl
repnz
call
xor
mov
call
movl
call
movl
push
cmp
xchg
call
movl
pop
call
inc
xchg
call
movl
call
movl
dec
xor
clc
dec
cmp
xchg
call
movl
dec
xor
clc
dec
cmp
xchg
call
sub
inc
xchg
call
movl
sub
mov
xor
cmp
call
mov
pop
and
or
lods
add
push
lods
or
add
sbb
call
movl
sub
mov
xor
cmp
stc
pop
xor
or
mov
notl
cli
or
mov
pop
aaa
mov
push
cmp
bnd
movl
aaa
push
fwait
in
sub
mov
xor
cmp
call
mov
pop
call
mov
or
sub
mov
aas
xor
add
sbb
mov
pop
enter
movl
call
mov
cmpsl
call
xor
pop
rcrl
rcll
roll
push
xchg
call
loope
xchg
sbb
dec
push
and
dec
ljmp
xchg
sbb
xchg
sarl
mov
mov
out
dec
xchg
call
or
inc
xchg
shlb
xchg
call
add
xchg
sbb
mov
and
les
loop
leave
jbe
sub
inc
xchg
je
xor
mov
or
testl
inc
call
dec
xchg
call
push
cs
in
inc
and
push
lea
pop
int
xchg
je
pop
pop
das
rcl
fdivr
push
pushf
xchg
shrl
dec
xchg
call
or
push
sbb
sbb
test
cld
lcall
mov
sbb
mov
into
pop
enter
les
je
aam
rcrb
add
sbb
inc
jae
inc
jle
and
je
das
and
int3
mov
lods
xchg
dec
jmp
inc
xchg
mov
push
mov
call
and
xor
cs
inc
sbb
dec
xchg
call
or
inc
shlb
dec
xchg
call
les
mov
add
xchg
jbe
daa
cld
mov
sub
je
daa
and
les
jp
movb
shrb
pop
aam
les
cs
movb
movsb
jp
je
das
mov
movl
or
jbe
in
into
inc
xchg
pop
aam
pop
je
inc
and
rcr
loopne
repz
imull
jle
movb
xchg
inc
xchg
call
fisubrs
outsb
cmp
push
or
inc
xchg
je
sbb
rorb
xchg
call
xchg
rcrb
outsb
jb
call
pop
inc
xchg
call
orl
call
les
lock
cwtl
add
leave
jbe
je
inc
xchg
pop
clc
rcr
mov
add
out
aam
mov
aam
lods
push
mov
call
mov
fwait
out
rcr
mov
xchg
bound
jle
dec
inc
xchg
aam
mov
push
mov
sbb
pop
mov
not
fldt
aam
test
aam
movsb
push
mov
call
mov
lcall
and
call
bound
movl
or
jbe
hlt
int
xchg
pop
jp
leave
jbe
pushf
xor
push
enter
xchg
call
enter
mov
fwait
out
mov
xchg
sbb
mov
push
into
cs
movb
rolb
or
jbe
mov
inc
xchg
pop
jp
leave
jbe
pop
xor
push
enter
inc
push
xchg
call
in
addr16
sbb
push
sbb
leave
inc
xchg
jne
jle
sub
jbe
jmp
jne
sti
and
les
push
push
movl
sub
inc
xchg
je
dec
mov
or
repnz
xchg
outsb
mov
enter
hlt
lahf
xchg
sbb
das
div
movb
das
pop
mov
imull
and
js
push
dec
movl
je,pt
fnsetpm(287
mov
jmp
shr
xchg
and
mov
movb
js
jbe
movb
mov
sbb
inc
jle
testb
or
or
pushf
cmp
jle
and
je
jmp
jo,pn
lret
jbe
in
lret
inc
xchg
je
out
leave
mov
or
repz
xchg
push
leave
scas
push
or
jbe
test
inc
jne
out
sbb
dec
rclb
dec
xchg
call
push
mov
mov
mov
cltd
out
shr
test
das
push
in
movb
push
inc
out
mov
sbb
inc
jle
testb
jmp
pop
rcrl
loopne
call
mov
push
leave
mov
mov
not
pop
rcrl
xchg
call
xor
xchg
sbb
mov
xchg
sbb
das
hlt
movb
das
pop
mov
imull
and
pusha
add
inc
leave
jbe
lods
lret
jbe
jne
fistl
and
sarb
xchg
call
mov
cwtl
out
rcr
xorb
lods
call
cs
movl
out
rcr
loopne
ret
mov
imull
mov
add
out
jmp
roll
rol
cmp
jle
aam
xchg
je
aas
push
jns
inc
shrb
push
mov
imull
and
les
sbb
movb
mov
sbb
inc
jle
cmc
inc
xchg
je
aas
push
mov
inc
sarb
xchg
call
movl
ljmp
xchg
sbb
xchg
shll
xchg
call
push
dec
xchg
call
or
inc
xchg
rcrb
inc
and
les
push
in
movb
subb
push
mov
shrl
xchg
call
xchg
push
mov
scas
sbb
js
aam
jo
ja
jmp
movb
push
xchg
and
dec
add
inc
leave
jbe
nop
leave
inc
xchg
je
lret
out
shlb
mov
inc
and
mov
inc
dec
ljmp
sahf
loopne
inc
and
push
mov
rorl
movsl
xchg
call
xchg
push
xchg
out
shr
push
cld
inc
xchg
je
das
mov
movl
jne
inc
jle
enter
mov
xchg
loopne
inc
and
inc
xchg
call
aam
movl
sbb
rcrb
movl
call
movb
shrb
pop
mov
jbe
pop
aam
popa
movl
call
shrb
popa
movl
rcll
xchg
call
test
xchg
sbb
mov
and
rcr
loopne
cmp
ljmp
xchg
je
das
mov
movl
or
jbe
and
inc
xchg
pop
rcl
jmp
push
or
imul
or
inc
shr
dec
xchg
call
rcrb
jp
xchg
call
or
sbb
mov
and
rcr
loopne
fwait
mov
ljmp
xchg
je
das
rorb
rolb
or
jbe
ror
xchg
pop
rcl
jmp
push
or
cwtl
inc
xchg
je
aas
push
insl
ljmp
call
rcrb
sub
xchg
call
imul
jae
inc
and
rcr
loopne
add
ljmp
xchg
je
das
xchg
ret
and
rolb
or
jbe
pop
leave
inc
xchg
pop
rcl
jmp
push
or
xchg
inc
xchg
je
aas
push
shr
inc
shlb
dec
xchg
call
rcrb
inc
jecxz
call
les
sbb
mov
and
rcr
loopne
pop
mov
jmp
push
pushf
xchg
je
das
out
lret
and
rolb
or
jbe
clc
enter
rcl
jmp
push
or
mov
xchg
je
aas
push
sub
mov
push
and
rcrb
inc
xor
call
and
mov
not
sbb
inc
xchg
mov
scas
push
xchg
out
aam
loopne
dec
xchg
call
movb
sub
call
push
sub
stos
enter
movl
jmp
movl
push
ss
xchg
call
movl
push
ss
adc
movl
call
aas
mov
pop
xor
xchg
call
movl
call
movl
push
cmp
mov
jmp
movl
push
aas
mov
pop
sub
xchg
call
movl
dec
enter
movl
call
movl
call
movl
push
das
xchg
cld
dec
enter
movl
dec
sbb
or
pop
xor
xchg
call
movl
pop
enter
movl
push
cmp
mov
call
movl
pop
sub
or
inc
xchg
call
movl
dec
push
test
push
inc
inc
xchg
call
movl
dec
push
test
push
inc
fwait
or
mov
or
mov
xchg
call
movl
pop
cmp
xchg
call
movl
pop
sub
xchg
call
movl
pop
sub
inc
movsb
call
cmp
jmp
push
enter
movl
pop
cmp
xchg
call
movl
pop
cmp
or
mov
push
enter
movl
push
xor
jecxz
ss
dec
cmp
call
movl
push
or
sti
call
movl
push
ss
add
dec
das
lods
or
movl
call
cmp
cld
push
cmp
jmp
movl
push
xor
jmp
push
enter
movl
pop
aaa
stos
sti
pop
cmp
pop
enter
movl
dec
cmp
notl
scas
sti
pop
enter
movl
dec
cmp
jecxz
ss
dec
cmp
call
movl
push
xor
cli
sub
mov
push
sub
or
movl
call
sub
push
pop
cmp
inc
xchg
call
movl
push
das
lods
or
movl
call
cmp
or
sbb
xchg
call
movl
push
sub
or
mov
jmp
movl
dec
das
mov
pop
cmp
fisttpl
add
call
movl
pop
cmp
jmp
push
enter
movl
pop
sub
add
pop
cmp
jae
mov
cmp
jp
xor
jmp
sub
mov
mov
mov
out
shrb
cmp
das
ror
frndint
push
mov
mov
mov
loop
movl
sbb
mov
fcom
pop
rorl
imul
les
je
das
ret
inc
sbb
or
push
pushf
xchg
je
das
neg
movl
mov
cltd
out
lret
movl
and
inc
jae
das
push
mov
in
lahf
xchg
sbb
inc
jae
das
push
mov
inc
and
rcrb
into
insb
xchg
call
mov
mov
cmpsb
push
repnz
sbb
xchg
rcll
xor
ffree
inc
sbb
mov
call
movl
push
lods
stc
pop
enter
movl
pop
aaa
mov
call
mov
pop
ljmp
fistps
lcall
lds
sbb
enter
and
jp
aaa
dec
or
rcrb
gs
call
int3
rcr
lock
mov
aas
int3
cs
loop
inc
and
lret
enter
leave
inc
xchg
jne
daa
mov
movl
jle
mov
xchg
jbe
daa
mov
movl
jle
mov
xchg
jbe
and
cmp
inc
and
cmp
faddp
inc
dec
call
dec
inc
xchg
call
movl
je
pop
mov
aam
leave
mov
inc
xchg
call
aam
mov
mov
jbe
movl
call
movl
rorb
inc
xchg
call
movl
je
pop
mov
aam
leave
roll
movl
out
das
inc
dec
movl
jecxz
inc
pop
jle
inc
xchg
call
rcrb
rol
inc
xchg
jb
xor
push
movl
call
leave
jbe
cmpsb
mov
lods
cmp
int3
fadd
inc
jle
and
je
adc
ffree
inc
xchg
mov
scas
or
mov
inc
xchg
sarl
xchg
call
movl
call
cs
inc
and
cmp
out
inc
dec
test
in
xchg
sbb
push
fadd
inc
jle
sub
xchg
call
scas
mov
outsb
mov
xchg
call
cs
movb
mov
xchg
call
movl
rclb
inc
xchg
call
movl
rolb
dec
aaa
cltd
adc
rclb
xchg
call
pop
daa
mov
movl
and
rcl
out
push
and
shrb
adc
inc
and
sbb
les
push
loope
inc
and
shrb
fadd
inc
and
cmp
mov
mov
out
shrb
mov
xchg
rcrb
sbb
call
les
je
das
rorb
movl
stc
push
pushf
xchg
je
das
push
fcmovb
inc
sbb
or
push
or
jmp
xchg
je
das
lret
inc
jo
inc
xchg
shlb
out
call
and
lcall
cmp
call
movb
les
mov
movb
inc
cmp
and
jnp
mov
sbb
js
sbb
inc
xchg
call
movl
call
movl
call
movl
push
sub
inc
jmp
mov
lcall
inc
fistps
cwtl
jmp
xor
mov
sbb
mov
shrb
aaa
gs
dec
cmp
shrb
imul
jle
lret
inc
xchg
je
lcall
mov
cwtl
out
shrb
mov
cwtl
out
rolb
jbe
inc
and
mov
xchg
out
aam
in
js
out
shlb
sahf
das
mov
ds
in
cld
out
out
shr
loopne
mov
call
or
inc
xchg
je
cmp
les
cmp
movb
les
loopne,pt
inc
out
or
inc
xchg
je
inc
inc
leave
jbe
shlb
das
imul
movb
and
outsb
mov
add
out
xchg
call
clc
mov
xchg
call
movb
mov
movb
jle
mov
das
and
mov
ret
inc
and
mov
movb
dec
call
fidivrs
jbe
clc
mov
mov
rcr
enter
rcll
mov
jp
clc
mov
xchg
call
movb
movsb
add
inc
leave
jbe
movsb
mov
and
rolb
mov
ret
out
jp
inc
and
push
adc
jbe
movsb
add
inc
mov
or
dec
mov
jmp
setp
jae
jp
xor
imull
mov
loopne
xchg
sbb
jp
inc
and
lcall
aaa
xchg
call
push
pop
mov
movl
adc
jbe
adc
jbe
bswap
jbe
push
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
movl
fwait
dec
aas
lods
jb
mov
fistps
lcall
imull
xor
movb
and
sbb
inc
dec
ja
jno
mov
cmp
cmp
imull
cli
ffreep
inc
out
enter
mov
call
imull
or
movb
enter
ret
jbe
rclb
xchg
call
movb
iret
xchg
call
incl
leave
jbe
or
inc
xchg
rcrl
inc
xchg
out
shlb
or
inc
xchg
je
xor
stc
inc
rorb
aas
xchg
call
jae
xchg
call
mov
sub
leave
inc
xchg
shlb
xchg
call
push
mov
pop
inc
cltd
call
movb
lods
lahf
jle
mov
das
jle
mov
pushf
jbe
mov
ss
inc
and
test
dec
ffreep
inc
out
lret
call
mov
push
rol
inc
and
movsb
xchg
and
mov
inc
xchg
rcrb
cmp
push
mov
pop
inc
cltd
call
movb
pushf
lahf
jle
mov
pop
out
rolb
lret
movl
call
leave
inc
xchg
mov
sbbb
jmp
movb
sbb
jmp
leave
jbe
cmp
dec
mov
scas
cmp
out
inc
lret
cmp
dec
push
int3
js
sbb
data16
das
xchg
rol
inc
xchg
pop
cwtl
scas
stos
sbb
jbe
loopne
inc
mov
orb
cs
ffree
inc
xchg
push
sbb
enter
jmp
sti
push
jle
scas
inc
xchg
call
cli
inc
push
sarb
adcb
call
mov
xchg
imul
imull
loopne
inc
mov
orb
cs
movb
sbb
enter
movl
jmp
leave
jbe
cmp
dec
mov
scas
mov
mov
xchg
sbb
rolb
sbb
rcrb
fstl
pop
je
inc
in
hlt
push
mov
sahf
xchg
xchg
call
xor
xchg
sbb
shr
lods
push
or
xchg
je
das
ss
inc
add
das
mov
or
leave
jbe
mov
cmp
movl
sbb
jbe
or
pop
jle
mov
mov
xchg
rol
fs
call
notl
xchg
mov
sti
movmskps
movl
call
idivl
mov
scas
cmpb
ljmp
adc
iret
movb
imull
xchg
call
leave
jbe
jmp
sub
push
clc
test
sbb
inc
add
xor
jmp
das
enter
inc
jle
mov
add
jne
jmp
jl
dec
xchg
call
shr
mov
movb
test
repnz
inc
out
mov
xchg
call
ret
inc
xchg
insb
orl
movl
call
testl
dec
jmp
inc
push
shrl
xchg
call
pop
inc
cwtl
call
movb
jl
and
js
sub
lret
rclb
pushf
inc
inc
mov
mov
rcr
pushf
push
pop
or
jbe
and
mov
clc
jmp
leave
jbe
je,pn
sub
leave
inc
xchg
shlb
xchg
call
or
dec
xchg
call
movl
jmp
movl
je
mov
and
leave
jbe
jmp
inc
push
shl
jbe
call
movl
call
push
ficoml
xor
jmp
jne
out
jl
dec
xchg
call
shr
mov
das
adc
movb
insb
xchg
and
pusha
aam
icebp
lret
inc
xchg
shl
aaa
xchg
call
or
inc
shlb
xchg
call
lret
push
movl
jmp
mov
xchg
call
push
mov
jbe
inc
cltd
call
movb
pop
lahf
jle
mov
jne
iret
and
xchg
call
shl
jo
mov
mov
mov
xchg
shr
je
dec
xchg
call
testl
test
add
out
rcr
insb
sbb
fldt
enter
shr
push
movb
jo
xchg
call
notl
xchg
fwait
leave
out
xor
jbe
shrb
aam
movl
call
movb
inc
inc
xchg
call
movl
call
movb
inc
inc
xchg
call
movb
inc
inc
xchg
call
jmp
xchg
je
das
jb
movl
mov
mov
test
rcrb
sub
dec
cmp
dec
rclb
xchg
call
movl
call
movl
inc
mov
in
mov
rorb
add
testl
sbb
inc
xchg
jbe
inc
cwtl
call
movb
cmp
call
movl
call
movb
xor
xchg
call
movb
cmp
call
leave
jbe
outsb
sub
xchg
call
movl
call
scas
out
sbb
jbe
outsb
xor
call
cs
fadd
inc
and
inc
xchg
call
inc
mov
xchg
jbe
mov
sub
int3
inc
xchg
rolb
ss
call
movl
call
imull
dec
fadd
inc
and
inc
xchg
call
inc
das
ficoml
movl
call
xor
xchg
sbb
push
jle
test
insb
adcl
movl
jmp
adc
xchg
call
not
sub
int
xchg
shlb
adc
inc
movl
call
leave
jbe
popa
sub
rclb
mov
out
inc
dec
sub
shrb
xchg
call
imull
jle
movb
or
push
dec
leave
jbe
ljmp
xchg
call
cmp
ror
sub
sbb
xchg
call
movl
mov
sbb
shrb
cmp
or
cmp
xchg
xchg
call
movl
sbb
clc
jmp
movl
call
rcr
lock
xchg
sbb
jns
sbb
das
push
aad
inc
pop
sub
scas
jb
movl
mov
xchg
sbb
int3
push
clc
push
imul
cs
xchg
call
xor
inc
sub
cmpsb
push
dec
js
sbb
out
movl
rcrb
xchg
call
movb
daa
movsl
icebp
rol
xor
movl
dec
cmp
enter
xchg
call
movl
pop
das
xchg
or
mov
dec
das
lods
xchg
call
movl
pop
enter
movl
dec
sub
cld
cmc
roll
call
movl
call
movl
repnz
call
xor
mov
call
movl
call
movl
push
cmp
xchg
call
movl
pop
call
inc
xchg
call
movl
call
movl
dec
xor
clc
dec
cmp
xchg
call
movl
dec
xor
clc
dec
cmp
xchg
call
sub
inc
ret
pop
enter
movl
aaa
push
fwait
in
sub
mov
xor
cmp
call
mov
pop
call
mov
or
sub
mov
aas
xor
add
sbb
mov
pop
enter
movl
call
movl
aaa
push
fwait
in
sub
mov
xor
cmp
call
mov
pop
and
or
lods
add
push
lods
or
add
sbb
call
movl
sub
mov
xor
cmp
stc
pop
xor
or
mov
notl
cli
or
mov
pop
aaa
mov
push
cmp
bnd
movl
cmp
clc
cmp
mov
xchg
call
movl
jmp
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
or
jne
inc
xchg
call
movl
or
enter
enter
enter
enter
enter
movl
stc
jbe
stc
jbe
mov
maxps
xchg
packsswb
mov
daa
ja
enter
or
or
enter
enter
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
test
inc
xchg
call
movl
call
movl
test
inc
xchg
call
movl
call
movl
test
inc
xchg
call
movl
call
movl
test
inc
xchg
call
movl
jmp
movl
test
inc
cwtl
call
movl
jmp
movl
call
movl
jmp
movl
call
leave
inc
cwtl
call
movl
lock
call
lret
inc
cwtl
call
movl
lock
call
inc
inc
ret
jbe
sub
jbe
call
movl
xchg
call
movl
call
movl
xlat
incb
ror
inc
jle
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
stos
pop
and
stos
pop
and
stos
pop
and
stos
pop
and
stos
pop
and
mov
pop
and
mov
pop
and
mov
pop
and
rcrb
dec
rcrb
dec
rcrb
dec
rcrb
dec
out
and
out
and
out
and
out
and
out
and
cli
pop
and
cli
pop
and
cli
pop
and
cli
pop
and
cli
pop
and
push
pop
and
push
pop
and
push
pop
and
push
pop
and
push
pop
and
and
dec
and
dec
and
dec
and
dec
and
dec
ss
and
ss
and
ss
and
ss
and
ss
and
dec
pop
and
dec
pop
and
dec
pop
and
dec
pop
and
dec
pop
and
pop
pop
and
pop
pop
and
pop
pop
and
pop
pop
and
pop
pop
and
jb
and
jb
and
jb
and
jb
and
jb
and
xchg
dec
xchg
dec
xchg
dec
xchg
dec
xchg
dec
lcall
dec
lcall
dec
lcall
dec
scas
pop
and
scas
pop
and
scas
pop
and
scas
pop
and
ret
dec
ret
dec
ret
dec
ret
dec
ret
dec
xchg
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
leave
jbe
js
jbe
sub
jbe
mov
jbe
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
call
movl
.byte
.byte
inc
cwtl
ja
daa
and
add
jb
add
add
add
add
pusha
cmp
add
add
add
add
add
add
add
add
add
insl
imul
add
add
add
add
xor
xor
xor
xor
xor
xor
je
add
add
add
adc
adc
add
xor
add
add
popa
jo
fs
je
and
je
jb
inc
jo
cs
jno
jno
ss
add
sbb
add
and
and
and
and
add
add
and
and
and
and
xchg
xchg
xchg
xchg
mov
mov
pusha
call
pop
sub
mov
mov
mov
cmpl
je
mov
mov
mov
ret
mov
mov
push
call
push
call
push
call
jmp
add
push
mov
add
pusha
call
pop
sub
mov
movl
mov
inc
mov
cmpl
je
mov
mov
incl
inc
jmp
mov
popa
mov
leave
ret
push
mov
add
pusha
call
pop
sub
lea
mov
movl
mov
rol
mov
inc
mov
cmpl
jne
movl
lea
lea
mov
mov
mov
rcl
mov
rcl
dec
jne
imul
inc
inc
mov
inc
mov
cmp
jne
popa
leave
ret
push
mov
add
mov
movl
jmp
incl
inc
cmpb
jne
mov
mov
mov
jmp
movl
jmp
movl
movl
jmp
shll
mov
shl
add
add
xor
mov
cmp
jb
cmp
ja
sub
jmp
cmp
jb
cmp
ja
sub
add
jmp
cmp
jb
cmp
ja
sub
add
add
incl
cmpl
jb
cmpl
jbe
mov
stos
incl
cmpl
jb
add
cmp
jb
mov
stos
mov
leave
ret
mov
lea
decb
inc
dec
jne
mov
mov
sub
add
icebp
mov
push
add
add
add
mov
add
add
jmp
pop
adc
mov
sub
imul
jmp
and
pop
mov
add
push
add
add
out
adc
mov
add
add
add
ljmp
mov
xor
xchg
lret
mov
xor
cmpb
pop
jbe
adc
cmpb
inc
add
jne
add
add
dec
in
in
nop
push
add
add
test
add
push
add
add
add
mov
add
add
mov
add
add
add
mov
or
jne
mov
add
mov
add
mov
in
or
mov
daa
mov
and
add
add
xorl
roll
aas
dec
pop
jne
sub
add
add
in
mov
add
addb
add
jne
in
jmp
add
add
mov
adc
add
adc
add
rol
mov
adc
add
add
pop
sub
mov
mov
pop
pop
xor
les
add
add
add
add
adc
add
rclb
inc
outsl
out
xor
or
jmp
xchg
stos
mov
mov
negb
fisubl
test
or
add
test
sbb
add
pop
bound
push
jmp
and
pop
mov
add
push
add
add
rclb
shll
sub
lret
aaa
add
add
adc
add
jbe
dec
inc
mov
lahf
movsl
repnz
inc
adc
pop
enter
add
add
adc
mov
add
adc
add
or
add
add
ljmp
jne
or
sti
xor
imull
push
adc
bound
or
push
jmp
and
mov
add
adc
push
les
adc
sbb
rcl
push
insl
jno
adc
push
les
fildll
xchg
push
add
add
mov
movl
add
add
mov
pop
in
sub
add
xchg
ret
fs
xchg
popf
ljmp
imul
aas
addr16
scas
cmp
repz
adc
jg
ss
jmp
insl
add
daa
fxch
sbb
dec
xchg
xchg
and
mov
lock
push
add
or
add
push
push
mov
inc
push
and
aas
adc
ljmp
stc
mov
xlat
in
push
test
add
je
dec
popa
addr16
adc
mov
ljmp
clc
cmp
jmp
ljmp
pop
testb
adc
pop
hlt
adc
mov
popa
add
add
sbb
std
fbstp
cli
cld
arpl
pop
dec
mov
pop
scas
test
jnp
add
mov
sti
mov
test
jle
testb
lret
mov
xor
test
pop
dec
loopne
add
gs
aaa
icebp
popa
adc
pusha
jl
sub
pop
dec
or
mov
push
sbbl
add
jnp
test
andb
fs
fcoms
in
mov
xor
aaa
push
fldt
mov
jl
xchg
jmp
dec
mov
pop
mov
cmp
ficompl
dec
ficoml
push
xor
sbb
push
cmpsb
scas
std
test
leave
jb
addb
or
ret
pop
sub
mov
and
pop
popa
ja
xchg
pop
dec
mov
xor
insl
mov
adc
icebp
lret
mov
xor
dec
add
jecxz
loop
pop
int
shll
andb
or
xchg
fstpl
int
orb
pop
dec
mov
dec
int3
leave
popf
popa
lret
icebp
test
mov
mov
mov
inc
ja
push
test
out
and
sub
leave
mov
push
loope
pop
iret
push
jb
mov
sub
test
jmp
aas
int3
add
gs
cmp
ret
cli
mov
dec
sub
enter
faddl
mov
cmpsb
sahf
xor
or
mov
fstpl
push
jp
sub
dec
mov
and
xchg
push
imul
mov
lret
outsb
mov
push
add
mov
pop
dec
sub
sub
fs
loop
mov
pop
dec
or
sbb
adc
or
and
mov
jg
add
fisttpl
int
jl
jle
mov
loope
pop
sbb
dec
mov
lret
or
ret
fistps
mov
mov
mov
mov
pop
lret
push
addr16
jecxz
fstpl
mov
mov
xor
push
icebp
xchg
ds
pushf
fs
loope
mov
pop
dec
mov
pop
iret
pop
add
subb
sti
ljmp
add
xlat
fmulp
pop
lcall
pop
mov
addb
xor
push
xchg
sbb
in
cltd
pop
dec
mov
xor
out
test
jo
or
int
outsl
andb
mov
xchg
in
movsl
mov
mov
cmp
scas
add
or
roll
fmul
dec
das
mov
inc
push
cmp
mov
je
push
lret
xchg
mov
ret
stc
outsl
fldl
mov
orb
pop
scas
sub
fucomi
out
fstpl
jbe
jge
orb
inc
sbb
iret
jbe
jbe
adc
pop
push
sbbl
cld
pop
ret
ss
xor
pop
imull
mov
inc
mov
pop
dec
mov
jmp
mov
dec
in
outsl
push
jg
mov
out
fstpl
or
pop
sarl
test
dec
es
pop
dec
mov
nop
gs
or
xchg
pop
inc
int
jl
addl
xchg
dec
add
pop
mov
sbb
or
bound
test
popa
mov
sbbl
add
mov
mov
scas
lds
sub
push
sub
addb
cwtl
mov
test
push
fwait
js
adc
pop
or
pop
dec
mov
lahf
cli
fstpl
mov
inc
int
mov
fsubrl
mov
pop
jbe
adc
addr16
popl
pop
dec
mov
inc
mov
insb
mov
or
dec
mov
pop
scas
addl
movsl
int3
add
fnstsw
or
mov
mov
ja
push
xor
fs
test
mov
arpl
fstpl
mov
das
jno
mov
ljmp
rorb
sbb
push
test
orb
repnz
stos
sbb
loope
pop
orb
andb
test
sub
jmp
rcr
pop
int
arpl
andb
sbbl
add
adc
push
mov
rorl
mov
frstor
pop
dec
imul
push
add
jmp
mov
repz
dec
xor
or
mov
fstpl
or
pop
stos
cs
or
int
pop
outsl
pop
xlat
pop
mov
loop
pop
rcrb
or
mov
mov
add
adc
mov
jg
dec
xchg
xor
pop
and
mov
mov
dec
push
jmp
adc
cmc
add
mov
faddp
inc
scas
xor
ficoms
mov
test
xor
add
arpl
test
mov
int3
lea
sbb
jmp
sub
sbbl
gs
push
mov
adc
cwtl
ds
mov
stos
into
add
arpl
pop
push
or
ss
jp
add
dec
xchg
inc
mov
pop
in
pop
jae
lea
fildll
outsb
fldl
mov
mov
inc
jmp
dec
mov
mov
dec
mov
mov
dec
mov
test
mov
fs
mov
pop
dec
mov
pop
dec
mov
mov
loop
push
gs
mov
mov
mov
cmp
in
mov
test
mov
cmp
jecxz
fstpl
mov
test
mov
repz
ds
mov
jnp
dec
jno
rcll
pop
outsl
jbe
mov
test
pop
dec
mov
iret
incl
pop
dec
mov
add
subl
in
or
jnp
xchg
rolb
in
mov
xorb
add
aaa
dec
mov
xchg
inc
xchg
xor
add
mov
dec
mov
mov
pop
or
jle
rclb
iret
push
mov
mov
mov
lods
and
dec
inc
rclb
pop
jne
jmp
dec
mov
cmpsl
cmc
out
sub
mov
pop
dec
mov
and
hlt
push
sbb
mov
jg
mov
mov
fnsave
xor
fs
inc
mov
jae
jp
jmp
out
pop
sbb
jno
mov
xor
add
in
mov
push
dec
dec
ds
xchg
inc
mov
aas
dec
mov
aam
pop
push
subb
leave
lea
xor
lods
in
gs
mov
lds
dec
fcoms
sub
add
jge
pop
pop
push
sahf
pop
dec
mov
movl
pop
dec
mov
test
mov
add
jbe
sub
mov
xor
pop
xchg
sbb
loopne
sub
sbb
and
shlb
sbb
and
shlb
fld
and
cmp
incl
aam
inc
mov
gs
movsl
sbb
pop
push
push
xor
cmp
insl
push
sbb
mov
test
sbbl
xchg
call
enter
mov
inc
mov
sbb
lahf
mov
add
xor
xchg
add
push
jne
xor
push
and
pop
popf
mov
jl
inc
lods
pushf
xor
jg
mov
pop
out
xor
inc
inc
mov
lcall
enter
pop
jne
rcrb
repz
scas
pop
xor
repz
scas
pop
aad
jbe
rclb
sbb
and
inc
call
filds
adc
fnstsw
pop
cmp
push
jbe
cmp
push
popf
adc
inc
inc
mov
add
jg
lods
pop
cmp
push
sbb
and
xor
mov
jmp
jl
pop
xlat
lods
pop
pop
push
mov
mov
cmp
or
cmpsl
rcrb
sbb
out
inc
mov
pop
ja
sbbl
fsubs
mov
xor
xchg
pop
jl
shlb
iret
scas
xchg
jg
shlb
jb
push
lods
or
jbe,pt
rcrb
or
adc
rclb
sahf
push
and
or
iret
scas
xchg
jg
shlb
jb
push
lods
or
idivb
rcrb
or
adc
rclb
fnstcw
and
add
out
add
push
out
adc
add
and
stos
shrb
stos
pusha
jl
scas
xchg
jg
shlb
jb
push
lods
or
shlb
mov
sub
add
jge
sbbl
sbb
xor
rcrl
shlb
pop
out
adc
add
and
stos
shrb
stos
pusha
jl
scas
xchg
jg
shlb
jb
push
lods
or
cmp
shr
aad
and
scas
xchg
dec
sub
and
pop
shlb
pop
out
adc
add
and
stos
shrb
stos
push
jl
scas
xchg
jg
shlb
jb
push
lods
or
cmp
rol
adc
sbbl
pop
inc
fnstsw
or
jp
sahf
xlat
mov
dec
test
add
out
add
push
out
adc
add
and
stos
shrb
scas
sahf
cwtl
sbb
pop
cmp
rcll
or
jne
rcr
add
and
mov
jbe
jge
or
xchg
xor
sbb
pop
cli
adc
std
push
shlb
sahf
std
pop
xor
sbb
jbe
mov
sub
xchg
rclb
test
test
shlb
sub
sbb
xchg
pushf
pop
popa
xor
pop
jle
xchg
sbbb
xor
out
jne
mov
mov
ret
stos
push
mov
cmpsb
push
mov
dec
icebp
mov
lret
scas
les
jmp
xor
dec
mov
stos
cpuid
adc
mov
jne
aad
std
idiv
mov
mov
push
or
setno
outsl
push
mov
jne
ficomps
cmc
adc
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
jne
iret
popf
lahf
iret
mov
notl
in
mov
adc
imul
stos
sbb
sar
mov
popf
lahf
rcll
mov
data16
pop
sarl
mov
ffreep
sbb
lret
inc
xchg
sub
pop
repz
movsb
dec
adc
jae
mov
dec
je
pop
inc
fildll
hlt
movsl
lret
sub
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
jne
loop
test
adc
loope
dec
or
or
mov
stos
sbb
clc
incl
movsb
into
test
ret
mov
mov
jo
mov
incl
push
shl
add
cmpsl
mov
pushf
ljmp
push
stos
fnstenv
imul
aad
fisubrl
cld
xchg
ljmp
jbe
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
hlt
ror
lret
test
adc
imul
jle
or
mov
jne
mov
test
test
xor
ret
fidivs
mov
dec
jle
push
sub
stos
adc
test
popf
mov
js
ds
ja
inc
push
in
and
inc
test
test
pushl
dec
xor
push
mov
mov
idiv
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
pop
je
adc
mov
sub
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
jns
and
mov
pop
mov
shlb
sbb
xor
arpl
mov
mov
adc
sbb
add
frstor
or
cmp
jbe
rcl
fnsave
enter
cmp
mov
mov
and
inc
mov
mov
cmpsb
enter
push
stc
fmull
scas
pop
shlb
mov
jns
shl
push
jne
arpl
fmull
scas
pop
shlb
shlb
cld
popaw
mov
mov
and
mov
inc
mov
sbb
movsl
and
jle
rclb
xor
mov
push
dec
call
mov
mov
mov
pop
sbb
movsl
and
ja
mov
xchg
imull
push
mov
mov
mov
jbe
inc
sbb
jbe
sub
fsubrl
psubd
mov
sbb
incb
shlb
or
push
jbe
rorb
inc
mov
gs
cmp
jbe
cmp
mov
cmpsb
rolb
shlb
jns
push
adc
mov
shlb
inc
addr16
sub
and
fs
xchg
mov
inc
mov
lods
add
adc
sbb
and
pop
std
in
cmp
cld
fs
jg
inc
xchg
dec
xor
jo
push
dec
outsb
inc
gs
and
pop
shlb
scas
in
xor
scas
mov
shlb
mov
shlb
pushf
mov
into
repz
or
or
add
pop
add
cmpsl
rcl
sbb
push
hlt
jns
jl
jns
shlb
pop
jo
jmp
sar
add
xor
mov
test
pop
aad
jbe
ror
int3
sbb
dec
xchg
and
mov
scas
cmpsb
push
scas
xchg
push
sbb
and
dec
aad
jbe
rclb
and
pop
mov
dec
scas
in
xor
dec
add
pop
ja
xor
les
sbb
shll
mov
mov
push
dec
xor
shlb
shl
loope
dec
jbe
sbb
shll
loop
sbb
add
mov
mov
adc
sbb
add
mov
add
rcl
fldl
and
xchg
lods
and
adc
int3
loopne
xchg
popa
out
or
push
jne
fisttpll
scas
pop
push
and
mov
inc
mov
sbb
test
jbe
jle
rclb
sbb
shlb
cltd
in
in
cmp
rol
sbb
popa
push
pop
xchg
mov
shlb
inc
imul
xor
enter
daa
jmp
mov
rcrb
jo
insb
lahf
shlb
sbb
dec
sbb
into
xor
lods
and
repz
and
stos
clc
push
xor
inc
dec
adc
in
mov
mov
jbe
cltd
into
psraw
out
fsts
jg
sbb
stos
dec
arpl
mov
out
sbb
test
popf
sbb
gs
xor
jl
jns
shlb
pusha
insl
push
mov
rolb
rcl
adc
pop
pop
mov
dec
fcoms
sbb
add
frstor
sub
cmp
jne
rcr
fstl
push
sbb
mov
incl
enter
and
rol
sbb
bound
xchg
cmc
jns
jl
jns
shlb
inc
push
dec
addr16
enter
sti
jmp
pop
aad
jbe
sar
mov
movsb
push
mov
push
adc
add
jbe
fcoms
sbb
add
frstor
or
cmp
jbe
rcl
frstor
rep
pop
xor
push
add
cmp
pop
sub
call
lret
jne
rcrb
sahf
dec
adc
add
jbe
aad
jbe
sarb
div
ret
int
shlb
cmpsl
ror
sbb
push
xor
insb
hlt
jns
jl
jns
shlb
pop
outsb
push
sbb
mov
jnp
mov
pop
arpl
push
jbe
cmp
jne
shlb
sbb
add
frstor
or
cmp
jbe
rcl
fnsave
into
add
arpl
lock
xchg
mov
cmpsb
rol
sbb
popa
push
pop
xchg
mov
shlb
inc
imul
imul
cld
jne
shlb
shlb
sbb
add
rolb
rcll
cmp
dec
ds
lea
loop
mov
rolb
xchg
pop
jl
push
and
cmp
shlb
mov
pushf
adc
pop
pushf
adc
sbb
and
xor
dec
mov
andl
inc
xor
xchg
jmp
enter
push
jbe
push
and
xor
mov
sbb
cmpsl
and
jnp
rorb
push
jmp
jns
and
push
sahf
add
and
jne
xchg
push
pusha
into
xor
mov
jbe
rorb
adc
mov
cmp
inc
cmp
imul
push
shlb
dec
outsb
int
or
mov
pusha
inc
adc
mov
mov
sbb
jo
mov
adc
sub
lock
in
mov
sub
xor
and
imul
push
mov
pushf
adc
pop
pushf
adc
sbb
and
mov
data16
mov
lods
pop
xor
out
cmp
add
rclb
das
xor
mov
sbb
cmpsb
and
jns
rolb
mov
add
xor
mov
pop
pop
push
call
jnp,pn
sarb
sbb
and
shlb
sbb
xchg
pop
push
push
aas
xchg
out
add
out
xchg
pop
imul
scas
in
xor
pop
inc
sti
insl
pushf
test
repnz
mov
mov
adc
sbb
add
frstor
or
cmp
jne
rcl
fldl
adc
xchg
pop
test
and
xor
add
push
gs
and
mov
push
add
xor
and
outsb
cmp
shlb
mov
inc
add
sti
pop
pushf
adc
sbb
and
sti
xor
es
xchg
repz
xor
push
call
and
mov
inc
mov
sbb
movsl
and
jle
rclb
imul
enter
loope
sbb
out
into
sti
mov
cmpl
push
mov
icebp
std
lds
lcall
inc
mov
test
and
xor
push
add
pop
mov
sbb
mov
mov
scas
in
insb
mov
and
dec
es
scas
jbe
shlb
jo
xchg
jbe
shlb
rcrb
dec
aad
jbe
shlb
test
es
scas
in
xor
pop
xor
jbe
mov
jmp
pop
nop
sti
aas
xchg
outsb
aam
push
add
sti
lods
in
lods
pop
mov
push
leave
adc
pushl
rorb
mov
adc
rorb
ret
rcrb
xlat
or
dec
xor
xor
mov
gs
rcll
sbb
sub
mov
inc
mov
sbb
cmpsl
and
jge
shl
test
or
push
jbe
rol
mov
cmpl
cmp
sbb
out
mov
mov
or
push
pusha
xor
repz
lods
pop
pusha
mov
lcall
sbb
lods
sbb
test
repz
jecxz
enter
xor
sti
cmp
incl
enter
and
rol
sbb
popa
push
pop
xchg
mov
shlb
inc
imul
inc
mov
pop
aad
dec
xor
pusha
inc
es
scas
in
xor
pop
shrb
dec
pop
cmovnp
inc
and
rolb
xor
loope
xor
cmp
shlb
mov
pushf
adc
pop
pushf
adc
sbb
and
dec
sti
pop
xor
sbbl
imul
jp
shlb
mov
mov
sti
pop
pushf
adc
sbb
and
pop
sti
inc
or
add
adc
mov
lods
dec
call
mov
dec
pop
rcrb
aad
jbe
rol
loopne
or
scas
adc
ds
lret
xchg
mov
scas
xchg
jbe
shlb
or
cmovnp
push
add
dec
call
adcl
sbb
xor
mov
cmp
inc
pop
jmp
cmp
add
rol
push
mov
and
arpl
imul
and
push
int
sbb
gs
xor
jl
jns
shlb
pusha
insl
push
fsubrl
dec
jmp
sub
ror
cld
adc
add
and
xor
and
push
xor
sub
xor
enter
add
sbb
push
out
out
les
xchg
xor
inc
mov
add
mov
jbe
shlb
nop
push
repz
mov
enter
adc
rcrb
imul
popf
cs
frndint
rcrl
add
and
cmpsl
fidivrl
pushf
stos
lea
std
cmc
lods
pop
aad
jbe
shl
add
hlt
outsb
inc
mov
scas
pop
scas
mov
shlb
cmp
dec
jno
sub
jmp
sub
arpl
mov
pop
sbb
mov
push
fcoms
sbb
add
frstor
inc
jl
popf
cmp
jne
rcr
frstor
sti
or
xchg
lcall
inc
rolb
mov
cmp
mull
xor
and
outsb
paddd
shlb
or
popf
dec
jl
add
ret
lds
push
jne
mov
lods
pop
fwait
jns
push
push
out
cmp
and
sbb
pushf
pop
sbb
movsb
and
ja
mov
sbb
lret
xor
jle
push
jne
push
and
xor
mov
sbb
mov
ret
rcrb
jno
out
lahf
shll
push
xchg
in
mov
andl
adc
cmp
mov
lods
out
add
cmp
jl
shl
int3
mov
sbb
xchg
arpl
push
add
in
clc
lods
pop
push
and
xor
mov
sbb
mov
ret
rol
movsl
fimuls
out
int
cmp
and
fistpll
popf
mov
int
mov
popf
enter
xchg
sbb
and
sub
fbld
cmp
jbe
mov
push
stc
pop
rorb
scas
shlb
xchg
xor
mov
rorb
sub
xor
adc
sbb
add
mov
stc
jne
rcl
fldl
mov
add
sbb
cmp
and
jg
xor
and
sar
outsl
data16
rorb
and
rolb
xor
mov
mov
mov
mov
and
xor
mov
sbb
test
ret
std
ss
xchg
lods
jecxz
ror
sub
popf
andl
test
sbb
das
xor
mov
sbb
test
jbe
jns
shrb
inc
aam
popa
or
push
test
jns
fs
mov
sbb
mov
js
enter
cmp
and
push
and
xor
mov
sbb
test
jbe
adc
test
mov
or
and
or
sub
jnp
aaa
daa
mov
jbe
jno
adc
and
cmc
jne
rcrb
mov
call
or
add
adc
mov
and
and
push
jp
shlb
mov
pushf
adc
pop
pushf
adc
sbb
and
sti
fldenv
jbe
mov
ror
sbb
push
xor
insb
hlt
jns
jl
jns
shlb
pop
outsb
push
inc
and
addl
das
xor
add
adcl
jne
shlb
sbb
add
frstor
or
cmp
jbe
rcl
fnstsw
inc
add
ss
fwait
push
call
das
sub
xor
mov
sbb
movsl
and
jnp
rcrb
inc
sbb
sbb
sbbl
and
das
and
xor
push
push
mov
cli
xchg
pop
push
push
sub
push
mov
push
mov
inc
sbb
inc
cs
movsl
cs
daa
mov
jbe
sti
xchg
clc
gs
jge
mov
push
add
mov
xchg
sti
out
push
dec
fndisi(8087
call
arpl
and
repz
call
addl
xchg
sbb
mov
or
inc
sbb
dec
lret
mov
mov
jbe
inc
push
sub
inc
mov
jbe
rol
sti
popa
in
pop
xor
sbb
and
xor
mov
sbb
test
rol
cmp
add
pop
outsb
xor
aad
add
push
cli
inc
ds
fcomps
outsl
lock
mov
mov
mov
pusha
in
scas
fdivrs
cmovnp
inc
cs
popf
dec
jl
inc
cmp
data16
sbb
sar
insb
dec
arpl
add
je
xor
xchg
cmc
out
pop
and
pop
das
test
pop
scas
mov
mov
adcl
mov
jbe
xchg
pop
aas
clc
push
int3
or
xchg
inc
iret
ret
push
out
and
enter
or
sbb
ljmp
cvttps2pi
pshufw
dec
pop
dec
xor
push
and
mov
inc
mov
sbb
test
jbe
jle
shlb
inc
cmpl
enter
into
popf
sbb
push
xor
insb
hlt
jns
jl
jns
shlb
pop
outsb
push
shlb
inc
or
sbb
mov
mov
adc
sbb
add
frstor
and
cmp
jbe
rcl
fnstsw
dec
inc
mov
cmpsl
sarl
popa
xor
mov
dec
fcoms
sbb
add
jl
popf
cmp
jne
shl
rol
push
xchg
xlat
into
push
pop
popf
movsb
loop
xchg
mov
scas
enter
xchg
adc
shlb
fmull
lods
pop
rorb
movsl
shlb
cmpsl
ror
sbb
push
xor
insb
hlt
jns
jl
jns
shlb
pop
outsb
push
adc
iret
inc
and
shlb
jecxz
scas
roll
mov
dec
out
xchg
or
subl
sub
jp
shlb
mov
mov
sti
pop
pushf
adc
sbb
and
pop
sti
loop
fcoml
push
pop
sbb
mov
sbbl
and
or
jbe
push
and
xor
mov
sbb
mov
ret
jmp
ljmp
mov
lock
cltd
enter
push
push
inc
pop
xchg
mov
mov
sbbl
xchg
adc
shlb
sub
jp
shlb
mov
pushf
adc
pop
pushf
adc
sbb
and
mov
repz
and
mov
xchg
enter
jns
mov
stc
faddl
ud0
and
rol
sbb
bound
xchg
cmc
jns
jl
jns
shlb
inc
push
sub
pop
loope
fs
fsubl
psubd
shlb
or
dec
push
xor
enter
sbb
pop
cmp
jg
push
jbe
cmp
jne
rorb
sbb
and
lahf
cmp
pop
xor
mov
cmpsb
mov
enter
and
test
aas
out
ja
jecxz
ds
fnsave
scas
in
and
push
jp
shlb
mov
pushf
adc
pop
pushf
adc
sbb
and
sti
insb
stos
outsl
mov
out
xorl
or
push
add
push
and
xor
mov
sbb
stos
and
jp
rcrb
notl
fcoms
jbe
rclb
cmp
mov
inc
inc
add
into
scas
in
or
jne
scas
pop
xor
and
jo
jp
shlb
mov
mov
sti
pop
pushf
adc
sbb
and
pop
sti
mov
cmp
test
out
addr16
jns
add
pop
popf
movsb
cmpsl
mov
sbb
gs
xor
jl
jns
shlb
pusha
insl
push
pop
pop
shl
les
test
out
xor
enter
adc
sub
jp
shlb
mov
inc
add
sti
pop
pushf
adc
sbb
and
sti
pop
dec
jg
movsl
or
or
xchg
jle
and
aad
jbe
rolb
jmp
or
mov
mov
push
and
jbe
add
in
lods
pop
mov
and
rol
sbb
bound
xchg
cmc
jns
jl
jns
shlb
inc
push
and
ss
sub
jp
shlb
mov
mov
sti
pop
pushf
adc
sbb
and
pop
sti
inc
data16
xor
mov
shlb
sbb
popa
das
mov
shlb
sbb
into
cli
daa
mov
js
data16
mov
adc
sbb
add
mov
sti
jne
rcl
frstor
je
adc
mov
sub
dec
sti
xchg
sbb
pop
gs
imul
fcoms
sbb
add
frstor
inc
jl
popf
cmp
jne
rcr
fstpl
orb
pop
stos
test
or
sbbl
sbb
jbe
push
and
xor
mov
sbb
movsl
and
jns
rclb
mov
jmp
enter
ret
shlb
jns
push
sbb
jl
jns
shlb
inc
push
dec
test
scas
ds
cmc
out
mov
sub
xor
cli
sbb
mov
adc
jbe
fcoms
sbb
add
mov
xchg
rcl
stc
sbb
pop
shrl
shrb
dec
aad
jbe
rcrb
aad
les
and
sbb
and
aad
jbe
sarb
push
out
or
mov
dec
sti
insl
pushf
inc
jo
push
mov
mov
adc
sbb
add
mov
mov
rcl
push
push
pop
adc
popf
lods
xchg
add
jbe
rclb
cltd
fistpl
jbe
push
call
cltd
mov
in
jl
cmc
add
pop
push
and
xor
mov
sbb
cmpsb
and
jns
shlb
cmp
scas
test
scas
pop
xchg
out
imul
and
out
xchg
cmpsl
cltd
gs
lgs
arpl
jl
cmp
xor
enter
xchg
jp
shlb
pop
out
call
aaa
xchg
mov
cmpsb
enter
push
stc
fmull
scas
pop
shlb
cmp
pop
xor
enter
pop
into
ss
stos
mov
xchg
mov
mov
stc
and
jle
push
add
xor
aam
push
jne
arpl
mov
aad
jbe
rclb
sahf
adc
xchg
mov
mov
sbb
arpl
xchg
mov
shlb
pop
imul
push
cmp
iret
popf
xorl
jbe
xor
cmpl
ljmp
and
lods
and
scas
popf
jle
shlb
or
and
sarb
pop
cmp
gs
icebp
jne
shlb
and
xor
enter
xchg
sbb
and
cmp
mov
leave
subl
push
stc
fcompl
lods
pop
rorb
ja
and
inc
stc
fdivrl
psubd
shlb
sub
push
pop
inc
leave
xchg
mov
xchg
enter
xchg
jae
shlb
sarl
lods
pop
cmp
push
call
adc
rclb
sahf
xorl
jbe
cmp
inc
stc
fcompl
lods
pop
rorb
jo
and
adc
rorb
sbb
jmp
mov
test
mov
ljmp
jns
sti
repnz
dec
fadds
jbe
shlb
fdivp
mov
ja
xchg
inc
adc
int
xor
xchg
sahf
andl
or
ret
or
xor
add
xor
fsub
push
jne
arpl
fmull
scas
pop
shlb
mov
fnstsw
mov
xlat
or
mov
popf
sbb
popa
push
pop
xchg
mov
shlb
inc
imul
push
std
mov
pop
push
mov
lret
mov
sti
rolb
mov
scas
xchg
rcrl
int3
out
pop
sahf
cmp
gs
push
and
scas
addr16
popf
add
test
and
xor
mov
sbb
stos
and
jge
shr
inc
mov
push
cli
jns
sbb
jge
pop
sub
out
imul
mov
xor
push
js
or
push
push
and
fsubrl
sbb
and
mov
push
mov
or
and
add
cmp
or
xor
sbb
sarb
pop
push
xor
gs
int
test
mov
lods
pop
push
and
xor
mov
sbb
cmpsl
and
jnp
rcrb
mov
or
adc
rclb
sarb
out
mov
lods
pop
cmp
movsb
add
lds
scas
pop
xor
jno
xor
xorl
mov
xlat
xchg
imul
sbb
pop
jbe
rcrb
insb
sahf
pop
mov
or
mov
push
jbe
test
mov
push
sbb
mov
push
test
subl
and
mov
push
lea
adcb
jp
ffreep
popf
roll
xor
push
xchg
shl
xchg
push
adc
xor
lar
shlb
dec
outsb
ud0
shlb
or
xchg
cmpb
pop
psubsb
out
or
mov
or
jbe
rorb
sbb
bound
mov
sbb
orl
xchg
or
mov
jge
mov
sbb
mov
xor
roll
cli
lahf
aam
es
btr
sbb
xor
jge
shr
push
mov
inc
test
call
or
push
jbe
rol
mov
fcoms
sbb
add
frstor
inc
jl
popf
cmp
jne
rcr
fstp
je
call
mov
loope
xor
shlb
inc
mov
pop
scas
pop
xor
push
mov
inc
mov
mov
lods
and
and
jbe
and
imull
push
jbe
sarb
pop
pmulhuw
mov
or
mov
aaa
fs
stos
sub
int3
fnstenv
jp
mov
push
or
jmp
enter
pop
xchg
mov
sbb
jbe
xor
push
add
push
and
xor
mov
sbb
mov
rol
ja
in
out
adc
or
and
fwait
jle
pop
jb
iret
mov
pop
rcll
xchg
lahf
fcmovnbe
xchg
sub
jg
sbb
sbbb
and
push
sti
add
mov
ret
sub
cmovnp
inc
cs
shlb
mov
xchg
jbe
shlb
test
dec
outsb
shrb
pop
outsb
cmovnp
outsb
cmovnp
or
and
push
shlb
xor
jbe
sarb
xchg
dec
outsb
xor
aam
outsl
loope,pn
fs
mov
ror
sub
or
and
mov
jbe
aaa
lds
in
jno
shrb
or
enter
filds
mov
out
mov
xchg
mov
mov
sbbl
and
mov
adc
rclb
mov
or
gs
adc
push
and
xor
mov
sbb
cmpsl
and
jp
shlb
inc
imul
sarb
push
scas
pop
fcoms
jbe
ror
es
add
push
jmp
pop
pop
mov
mov
add
push
and
push
and
xor
mov
sbb
test
jbe
adc
mov
and
xor
push
and
pusha
mov
shrb
mov
xchg
push
pop
out
data16
psubsb
and
pop
mov
mov
adc
sbb
add
frstor
or
cmp
jne
rcl
push
dec
mov
mov
sub
xor
aad
jbe
shrb
inc
fsubrl
add
hlt
sub
inc
push
cmp
add
inc
add
test
mov
cmpsb
rol
sbb
bound
xchg
cmc
jns
jl
jns
shlb
inc
push
neg
sub
xchg
lock
or
andl
and
arpl
xchg
mov
shlb
pop
imul
xchg
adc
shlb
sbb
xor
mov
sbb
cmpsb
and
adc
or
xor
repz
scas
pop
mov
gs
jbe
jbe
scas
mov
gs
xchg
mov
scas
enter
xchg
dec
sub
and
icebp
loop
pop
mov
push
and
imul
sbb
and
sti
mov
sti
pop
pushf
adc
sbb
and
dec
sti
mov
push
xchg
adc
inc
sti
and
mov
hlt
lods
pop
xor
push
shlb
dec
and
enter
adc
jbe
xor
push
mov
cmpsl
rol
sbb
bound
xchg
cmc
jns
jl
jns
shlb
inc
push
cli
popf
ret
xchg
std
scas
pop
stos
test
xchg
xlat
insb
xchg
enter
xchg
imul
mov
mov
adc
sbb
add
frstor
or
cmp
jne
rcl
fnsave
adc
aas
lsl
mov
adc
shlb
sub
jp
shlb
mov
inc
add
sti
pop
pushf
adc
sbb
and
sti
jmp
ret
mov
or
negb
jo
pop
cmpsb
ror
sbb
push
xor
insb
hlt
jns
jl
jns
shlb
pop
outsb
push
outsl
xchg
push
stc
adc
and
rol
sbb
bound
xchg
cmc
jns
jl
jns
shlb
inc
push
mov
xor
or
push
stc
adc
and
xor
xor
and
imul
sbb
and
sti
mov
sti
pop
pushf
adc
sbb
and
dec
sti
xor
test
mov
xor
lahf
jbe
rorb
push
shlb
cltd
xlat
push
stc
adc
and
cmp
adc
add
jbe
xor
jno
push
add
mov
mov
dec
fcoms
sbb
add
frstor
sub
cmp
jbe
rcr
fstl
imul
fnstsw
mov
sahf
in
jbe
jnp
shlb
xchg
inc
out
outsb
hlt
xor
scas
popf
sbbb
and
sti
cltd
test
cmp
pop
push
inc
call
sbb
sbb
mov
mov
adc
sbb
add
frstor
and
cmp
jne
rcl
fstpl
pushf
and
pop
mov
cmp
jbe
rclb
sbb
jns
or
push
mov
out
arpl
imul
and
dec
pop
mov
xchg
mov
jbe
rolb
shlb
jns
push
adc
mov
shlb
inc
addr16
dec
jb
repz
mov
gs
push
and
xor
push
add
jno
lods
pop
cmp
jl
cmp
jne
rol
test
xchg
mov
rcrb
sub
jp
shlb
mov
mov
sti
pop
pushf
adc
sbb
and
dec
sti
outsb
sti
jo
outsb
jnp
mov
jbe
shlb
aad
call
xor
push
and
sbb
pushf
pop
sbb
mov
inc
mov
pushl
mov
dec
fcoms
sbb
add
frstor
sub
cmp
jbe
rcr
fisttpll
and
xorl
fmull
int3
lods
pop
push
and
xor
mov
sbb
stos
and
jnp
rclb
jbe
cmp
and
sahf
dec
adc
push
and
push
and
xor
mov
sbb
movsl
and
jns
shrb
mov
aas
stc
clc
out
cli
lret
push
and
xor
mov
sbb
cmpsb
and
adc
call
js
or
or
sarb
shl
ret
sahf
enter
xchg
or
push
xor
dec
adc
add
jbe
push
and
xor
mov
sbb
stos
and
jnp
shrb
arpl
mov
or
push
mov
and
xor
enter
adc
test
and
xor
out
adc
pop
push
and
xor
mov
sbb
cmpsl
and
jnp
sar
xchg
and
xor
adc
cmp
mov
adc
and
and
mov
test
xor
sbb
das
xor
mov
sbb
stos
and
jns
ror
push
sahf
or
and
sar
iret
and
mov
xor
mov
orl
rcl
or
and
lods
js
push
jb
dec
xor
cmp
mov
lods
pop
push
and
xor
mov
sbb
cmpsb
and
jge
rcrb
sub
aas
xor
push
repz
lods
pop
pop
mov
sbb
xor
cmpsb
ror
sbb
gs
xor
jl
jns
shlb
pusha
insl
push
inc
inc
lds
aam
sbb
add
sti
das
dec
lahf
xor
jg
gs
add
jbe
ss
dec
or
and
mov
inc
mov
sbb
test
jbe
jle
rcl
inc
sahf
mov
shlb
or
pop
jbe
cmp
xor
or
pop
xor
push
mov
stos
mov
mov
mov
xchg
enter
push
xor
enter
inc
pop
xor
movb
call
cmpsl
scas
pop
mov
sahf
insb
jmp
jo
push
mov
mov
mov
jbe
cmp
cmc
pop
jbe
shlb
fxch
xlat
add
adc
scas
pop
shlb
mov
iret
out
imul
mov
iret
fnsave
mov
stos
mov
mov
sarl
pop
xor
mov
pushf
mov
addl
mov
mov
adc
jo
mov
sbbb
pop
mov
inc
and
fists
sbb
and
xor
lock
pop
rorb
insb
shlb
cmpsl
ror
sbb
gs
xor
jl
jns
shlb
pusha
insl
push
jnp
negb
sub
int
cmp
dec
jg
push
jbe
cmp
sbb
cmp
shlb
sbb
imul
call
into
jne
mov
gs
push
jbe
push
and
xor
mov
sbb
test
ret
shl
mov
lret
and
push
jbe
cmp
jnp
shl
inc
xchg
enter
adc
inc
mov
gs
cmp
out
nop
stos
enter
xchg
and
sub
jp
shlb
mov
pushf
adc
pop
pushf
adc
sbb
and
sti
mov
loopne
pop
mov
inc
mov
subb
jbe
rolb
jecxz
mov
sub
test
or
fs
xchg
push
mov
ror
sbb
sbb
or
and
mov
xlat
xlat
imul
sbb
mov
cmpl
ret
ja
push
sbb
mov
jmp
and
sbb
pushf
pop
sbb
lods
and
ja
mov
callw
add
and
movsl
xchg
js
cld
fistps
sub
in
rcll
pop
pop
test
dec
or
fwait
ret
popa
fistpll
push
jne
xor
xchg
add
push
and
imul
sbb
and
sti
mov
sti
pop
pushf
adc
sbb
and
dec
sti
fisubrl
pop
mov
jmp
add
lods
sbb
jp
shlb
aad
jb
shll
push
add
jmp
pop
push
and
fistpl
add
jns
lcall
out
mov
stc
inc
mov
xchg
fnstsw
mov
stos
rcrb
xchg
xor
push
sbb
mov
aam
cmp
enter
jne
xor
enter
outsl
sub
push
sti
es
jmp
xor
mov
mov
pop
sbb
cmpsl
and
jp
shlb
dec
add
popa
hlt
lods
pop
pop
mov
imul
in
push
xor
and
xor
mov
sbb
movsl
and
jns
shrb
mov
je
enter
sub
mov
mov
adc
sbb
add
mov
cld
jne
rcl
ffree
pop
and
cltd
xchg
xlat
pop
xchg
enter
and
push
adc
xor
shlb
shlb
xchg
xchg
mov
scas
xchg
push
shlb
sti
add
lods
pop
cmp
jns
cmp
sbb
adc
orl
mov
mov
subl
sbb
sub
mov
inc
mov
sbb
cmpsb
and
jle
shl
jne
out
sub
dec
pop
pusha
shrb
pop
outsb
cmovnp
push
shrb
or
shrb
or
mov
jbe
fcoms
sbb
add
frstor
xor
cmp
jbe
rcl
fnstsw
mov
cmp
enter
lea
mov
and
insl
cmp
shlb
mov
pushf
adc
pop
pushf
adc
sbb
and
dec
sti
inc
jno
inc
test
or
and
mov
push
push
jb
push
push
data16
inc
loopne
and
fmuls
jbe
shl
push
jecxz
jl
xor
jne
mov
push
mov
scas
pop
pop
inc
gs
mov
jbe
scas
mov
mov
lods
pop
aad
jnp
rcrb
daa
mov
jbe
inc
adc
rclb
mov
mov
mov
adc
sbb
add
frstor
and
cmp
jbe
rcl
fstp
mov
sub
shlb
cmpsl
ror
sbb
push
xor
insb
hlt
jns
jl
jns
shlb
pop
outsb
push
mov
cmp
sti
lds
pop
inc
pop
xchg
popf
dec
push
test
and
xor
inc
call
cmp
shlb
mov
mov
sti
pop
pushf
adc
sbb
and
dec
sti
and
hlt
lods
pop
aad
jbe
rcrb
popf
dec
adc
test
jbe
mov
out
cli
lret
aad
jne
rorb
add
and
mov
sub
sbb
mov
jbe
shlb
sbb
add
frstor
or
cmp
jne
rcl
fnsave
jnp
inc
adc
daa
inc
add
pop
out
lods
pop
test
jbe
ret
jmp
xchg
xor
sbb
and
imul
sbb
and
sti
mov
sti
pop
pushf
adc
sbb
and
dec
sti
aas
mov
mov
jle
xchg
jbe
fcoms
sbb
add
frstor
inc
jl
popf
cmp
jne
rcr
inc
addr16
leave
aad
adc
cmpsb
ror
sbb
gs
xor
jl
jns
shlb
pusha
insl
push
push
push
xor
pop
xor
pop
popfw
mov
jbe
pusha
xchg
dec
scas
enter
fimull
mov
gs
xchg
mov
scas
xchg
repz
and
mov
mov
sbb
arpl
xchg
mov
shlb
pop
imul
dec
pop
jp
cmp
jne
rorb
rol
and
push
and
sbb
pushf
pop
sbb
mov
inc
mov
sub
pop
pusha
sub
and
xchg
incl
enter
or
sbbb
and
push
insl
jle
lahf
out
cmp
adc
add
xor
inc
movsb
or
and
xlat
stos
push
inc
repnz
sahf
subl
test
popf
mov
pusha
shlb
sub
jbe
cmpsl
xor
pushf
mov
pop
push
push
aas
cmpsb
rol
sbb
popa
push
pop
xchg
mov
shlb
inc
imul
mov
in
enter
and
push
mov
mov
adc
pop
outsb
into
adc
or
jbe
rcl
mov
mov
jl
shlb
and
aad
jbe
rolb
sahf
enter
xchg
pop
fidivrs
add
scas
in
xor
scas
in
and
shlb
test
rclb
mov
ret
push
lar
and
add
shlb
movsl
push
rclb
pushf
stc
mov
scas
sub
xchg
out
xchg
mov
sbbl
xchg
arpl
mov
sti
mov
out
xor
lods
pop
push
and
xor
mov
sbb
test
jbe
jnp
rol
divl
mov
xchg
in
mov
subl
and
lahf
jno
fmull
and
cs
mov
jbe
int
ret
sub
mov
lods
pop
rorb
jle
and
jecxz
push
pop
mov
mov
xor
enter
imul
mov
ud0
shlb
or
adc
rorb
sarb
pop
jnp
call
fdivl
sarb
sbb
and
cmp
fmuls
test
mov
arpl
rcrb
adc
andl
mov
jbe
rorb
sub
pop
jbe
xchg
shlb
rcl
sbb
push
hlt
jns
jl
jns
shlb
pop
jo
sarl
ret
pop
lahf
dec
pop
or
xor
enter
push
xor
xor
popfw
mov
or
out
js
enter
pop
imull
push
jbe
cmp
sbb
and
test
cmp
roll
call
push
call
ljmp
fcoms
sbb
add
mov
mov
rcl
fnsave
cmp
xor
push
sahf
add
and
lret
dec
outsb
shlb
sbb
cmp
and
cmovnp
das
push
jbe
rol
mov
shlb
push
rcr
dec
sbb
aam
sbb
shlb
mov
aad
inc
cmp
gs
nop
stos
jb
scas
in
and
jo
into
insb
jo
dec
xor
dec
add
scas
mov
es
aad
jbe
sar
and
scas
movsb
or
sbb
push
add
jo
mov
pop
sbb
shlb
aam
dec
popf
jno
pop
lret
aas
test
xchg
lock
scas
in
xor
mov
jbe
push
inc
lret
imul
xchg
out
sub
mov
dec
sub
pop
mov
scas
pop
ss
test
lods
pop
dec
xor
call
dec
out
fcomi
mov
cmp
shlb
mov
mov
sti
pop
pushf
adc
sbb
and
pop
sti
mov
ds
add
push
and
sbb
pushf
pop
sbb
stos
and
ja
mov
lahf
repz
xchg
std
mov
mov
jbe
shlb
daa
lods
and
call
push
stos
mov
pop
xor
mov
xchg
mov
imul
cltd
incb
fldcw
and
jl
lahf
pop
sub
jbe
fadds
sbb
je
orb
pop
mov
in
divl
pop
jbe
shlb
fcmovb
fidivs
popa
or
push
add
xor
dec
repz
imulb
sbb
pusha
mov
test
shlb
pop
outsb
cmovnp
xor
orl
mov
fs
add
xor
movsb
popa
lret
cmpsb
enter
and
stc
fdivrl
movsb
addb
jecxz
fadd
and
mov
gs
adc
jbe
cmp
push
call
pop
lock
and
mov
sysret
cmp
dec
call
xchg
mov
imul
pop
leave
or
rorl
xchg
and
sarb
pop
xchg
push
call
pop
lock
cmp
stos
popf
cmp
vmread
jno
push
call
lock
pop
xor
test
jbe
rorb
xchg
mov
movl
and
jl
push
jnp
shlb
jecxz
or
pop
xor
jg
push
add
xor
or
rclb
sbb
adc
fsubl
scas
pop
shlb
mov
xlat
xlat
imul
xchg
push
and
insl
cmp
shlb
mov
pushf
adc
pop
pushf
adc
sbb
and
dec
sti
outsb
pop
in
test
mov
xchg
decl
inc
sahf
sbb
pop
push
adc
mov
shlb
inc
addr16
sub
adc
mov
dec
data16
shlb
sub
jp
shlb
mov
mov
sti
pop
pushf
adc
sbb
and
dec
sti
pop
leave
cwtl
push
add
cmp
std
push
inc
mov
or
inc
sub
xor
jns
ja
xor
xor
stos
xchg
xor
aad
and
rcll
and
sbb
sbb
mov
getsec
xor
sbb
mov
ss
push
in
and
sbb
stos
sbb
ss
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
shlb
sbb
and
call
push
jg
in
pop
xor
push
mov
fucomp
push
jno
in
mov
call
push
mov
adc
push
pusha
push
in
mov
in
call
jmp
push
jb
in
je
in
dec
mov
push
leave
jae
push
aam
call
push
push
call
push
test
sub
in
testl
call
push
test
stc
call
push
ljmp
push
dec
jb
push
and
push
sub
in
jl
in
test
jmp
push
icebp
vmovhps
call
push
mov
call
push
sub
sub
push
pop
das
in
test
call
push
cmp
in
rolb
push
jns
call
push
mov
jns
push
test
in
xor
in
arpl
jmp
pusha
in
sbb
in
ret
push
test
in
push
ljmp
sbb
in
xchg
sti
call
push
add
in
cmc
sub
push
pop
sub
push
add
call
push
ret
loope
push
cmp
call
push
inc
push
in
jns
call
push
mov
call
push
cli
shr
push
das
adc
call
push
movsb
call
push
orb
push
inc
push
in
cltd
loope
push
mov
push
in
fistpll
in
pop
jnp
push
jge
call
push
adc
push
leave
shr
push
dec
cs
sbb
in
lods
xor
push
test
in
push
out
push
pop
adc
push
inc
call
push
imul
push
or
in
idivb
in
mov
add
push
mov
sbb
push
in
js
push
cmp
call
push
stc
pop
in
loope
in
inc
pop
in
xchg
cld
call
push
xchg
mov
push
jle
call
push
mov
insl
in
outsl
pop
in
mov
fsubr
push
jge
call
push
mov
call
push
mov
call
push
adc
in
xchg
push
add
in
push
int
call
push
push
or
push
popf
xor
call
push
inc
sub
push
iret
push
in
std
iret
call
push
cli
add
push
test
push
nop
sbb
push
pop
or
push
icebp
call
push
cmp
in
xchg
push
insl
or
push
push
pop
in
movsl
push
in
lret
call
cmp
shlb
lahf
dec
sub
xor
pop
cli
xor
pop
mov
fcomps
and
rcll
jnp
das
loopne
add
int3
cmc
pop
xchg
adc
xlat
mov
pusha
xchg
rolb
inc
insb
inc
inc
ds
sbb
and
xchg
jbe
aad
jns
sarb
dec
cmp
mov
add
ret
icebp
dec
sub
mov
mov
aad
push
sbb
shll
ljmp
das
fdivrp
sbb
sahf
inc
mov
dec
mov
cli
insl
pushf
xchg
aaa
out
pop
inc
sti
das
xor
lret
push
mov
les
lahf
sti
adc
adc
into
clc
lret
pop
jl
jns
mov
jl
sbb
and
xchg
jbe
push
mov
and
inc
cld
pop
cmc
aad
imul
shlb
mov
and
mov
cmp
mov
and
or
or
ret
ds
jp
shlb
rcll
and
xlat
sahf
mov
push
jo
xchg
add
jbe
rclb
sbb
popf
mov
lods
jnp
daa
inc
jbe
sbb
push
mov
ficompl
sub
aad
sub
shl
dec
inc
or
push
add
mov
and
je
jbe
xor
jmp
pop
sub
sbb
aaa
push
mov
cmp
and
aas
adc
sti
dec
inc
nop
cmp
cmp
fnstsw
clc
pop
jge
hlt
pop
push
aad
das
sub
jecxz
jge
xor
sbb
hlt
dec
push
pushf
jecxz
jl
hlt
pop
sub
add
pop
cmp
sub
xchg
jb
cmpl
shlb
pop
call
and
vmovhps
jp
push
xor
sti
sub
mov
sti
ret
add
adc
add
cli
fnstsw
jne
pushf
inc
sti
fnstsw
ficomps
rcl
fiadds
mov
imul
add
mov
push
jp
movsb
jmp
sbb
mov
insb
jge
lahf
icebp
stos
cmp
sbbb
inc
jns
mov
daa
add
jbe
std
xor
idiv
xchg
nop
add
out
xbegin
jecxz
sarb
mov
negb
shlb
daa
mov
sbb
and
es
js
sbb
popf
nop
pop
adc
mov
add
and
push
daa
dec
sbb
xor
xor
mov
xchg
jbe
arpl
jbe
sti
adc
loopne
in
daa
xor
xor
sti
filds
sub
addr16
cmp
mov
in
enter
les
xchg
jbe
aad
jl
ror
fwait
mov
arpl
sahf
mov
mov
inc
jnp
push
and
aam
add
mov
mov
pop
mov
imul
jbe
push
pop
jbe
cmp
and
ficompl
push
adc
xor
aad
fxch
pop
cmp
stos
mov
push
mov
or
mov
rorb
mov
rcrb
dec
test
pop
aas
xchg
sbb
jbe
das
adc
xchg
jbe
sti
mov
jo
xor
and
daa
repz
xor
pop
sahf
cld
adc
jbe
xor
mov
xor
sahf
mov
mov
aad
jp
rclb
mov
mov
cmp
and
mov
pushf
xor
sti
ret
mov
std
xor
mull
divb
popf
sarl
add
fnstcw
rcrb
cmp
dec
dec
cmp
daa
in
jbe
cmp
adc
pusha
xchg
push
xor
pop
mov
inc
pop
jbe
jo
mov
mov
sahf
popf
mov
andl
rcrb
sbb
xor
test
das
movsb
xchg
ret
xlat
mov
mov
mov
pop
enter
and
addr16
inc
mov
test
mov
test
pop
outsb
outsb
jns
lock
pop
ficomps
xor
sti
xchg
mov
sub
pop
jp
shlb
sbb
dec
jl
xchg
push
jl
fstl
shlb
pushf
hlt
pop
int
hlt
icebp
sub
in
sbb
iret
mov
mov
xor
pop
stos
inc
aam
mov
fstpt
inc
sbb
shlb
adc
sahf
movsb
imul
xchg
addr16
mov
fimull
pop
jl
ss
sub
and
out
mov
std
fidivrl
add
call
ret
mov
test
mov
sbb
hlt
mov
mov
or
xchg
mov
fnstsw
pop
sbb
xchg
push
jl
aaa
xor
mov
das
sbb
lods
lcall
pushf
xor
mov
push
cmc
jns
mov
hlt
sbb
sub
sub
dec
cmp
mov
scas
xchg
pushf
pop
sbb
xchg
mov
scas
xor
pop
sahf
cld
adc
jbe
fsts
mov
mov
popf
movsl
or
cmp
sbb
mov
xchg
adc
into
rcl
scas
sub
jg
jbe
pop
mov
sub
xchg
dec
jl
pop
dec
jl
jmp
popf
mov
movsb
hlt
cli
fnstsw
neg
inc
inc
jbe
gs
jne
pushf
dec
sub
int3
movsb
shlb
daa
mov
call
ficompl
jbe
pop
adc
push
sbb
push
mov
and
js
shll
pusha
xchg
mov
sub
lret
fisubrl
loop
rolb
arpl
sti
xor
or
jmp
mov
mov
shlb
xlat
ss
rcll
adc
loopne
test
popf
pop
mov
pop
cmp
inc
jnp
xor
sahf
cld
adc
jp
cmp
and
dec
arpl
add
and
inc
mov
jbe
imul
jl
mov
pop
jge
cld
pop
sbb
hlt
jl
pushf
xor
mov
mov
and
int3
pop
mov
shlb
shl
test
add
mov
and
jp
bound
lahf
aad
imul
xor
roll
xchg
cs
ss
shlb
daa
cli
fdivs
cmp
shll
insb
mov
cmp
and
mov
mov
jbe
or
mov
jo
hlt
jns
movsb
hlt
cli
fnstsw
xor
sbb
sub
mov
jbe
mov
jle
fnstcw
je
sarb
cmpsb
shlb
add
xor
into
add
and
decb
subb
xor
xor
xor
rcrb
mov
movsl
sbbb
mov
add
jp
shlb
cmp
mov
sarb
add
scas
sbbb
in
imul
sar
and
into
mov
ret
shlb
rorb
add
jbe
mov
mov
outsl
sbb
jno
outsl
ret
fmul
jne
cmp
ret
arpl
fs
es
aad
hlt
sbb
sbb
mov
shlb
mov
arpl
mov
sbb
popf
xchg
jge
mov
and
fldl
test
cmc
fdivp
xor
xchg
mov
test
lods
jbe
aad
pop
sbb
pop
mov
mov
mov
sbb
gs
lds
or
sahf
cld
adc
shlb
hlt
add
pushf
cmp
aad
push
pushf
inc
mov
mov
jbe
add
mov
adc
and
xchg
hlt
add
outsb
xor
xor
mov
repnz
daa
lods
lahf
cli
test
arpl
mov
aaa
xchg
loopne
push
mov
out
jne
bound
jbe
stc
adc
mov
orb
fdivrp
fwait
sub
xchg
enter
xchg
mov
push
or
jo
hlt
mov
mov
dec
das
push
xor
sti
ficoms
xchg
mov
adc
mov
rcrb
mov
jbe
xor
and
mov
ret
sub
shlb
mov
pop
jbe
rcrb
mov
bound
dec
pop
bound
idivl
mov
cmp
bound
sbb
mov
mov
rorl
outsl
popf
test
cmpsl
shll
shll
enter
imul
sbb
jbe
xor
pop
sub
mov
jl
mov
xor
add
shlb
daa
rcrl
jbe
shl
sbb
hlt
or
xchg
mov
sbb
xchg
push
jl
aaa
sub
fidivrs
bnd
stos
mov
cmp
sbb
sbb
sub
dec
mov
push
test
mov
pop
out
sahf
test
aad
pop
sbb
popf
and
cmp
movsb
aad
inc
sub
xchg
bound
adc
iret
pop
aas
lods
cmp
cli
ficomps
pop
aad
sbb
shlb
add
and
or
sub
shlb
mov
and
mov
dec
xor
xor
pop
sahf
cld
adc
jbe
insb
mov
mov
pushf
mov
hlt
sbb
bound
dec
xor
inc
rorl
or
mov
jo
xchg
add
jbe
rclb
add
shlb
fs
xor
dec
insb
pushf
mov
xor
adc
jbe
in
ss
sbb
mov
hlt
sub
sti
mov
sub
push
add
xchg
mov
add
mov
popa
js
jbe
rorl
bound
jge
mov
ret
je
add
sbb
xchg
mov
jo
hlt
push
push
pushf
mov
pop
mov
les
lahf
std
adc
int
shlb
and
mov
sbb
aas
movsb
jne
adc
mov
add
mov
hlt
pop
mov
dec
cld
jne
popf
push
mov
mov
xor
mov
out
pop
dec
lods
xor
jnp
push
popa
sbb
xchg
mov
mov
dec
or
imul
add
mov
cmpl
xor
mov
or
mov
aaa
cld
ret
jbe
cmp
addb
arpl
and
out
sub
xor
or
movsb
mov
rcll
add
cltd
dec
aad
imul
mov
mov
mov
add
mov
xor
mov
rcrb
dec
xor
pop
sahf
cld
adc
mov
mov
rcrb
mov
adc
jmp
and
test
lock
fstl
jbe
xor
jne
jp
inc
sti
daa
inc
shld
push
sbb
mov
pop
cmc
aad
mov
rcrb
dec
aaa
dec
mov
mov
inc
stc
and
pop
sub
sub
xor
sub
sub
push
pop
sbb
iret
lret
sub
sarb
adc
pop
stc
shlb
cmp
cmpsl
pop
sbb
jecxz
jge
adc
outsb
mov
adc
cmc
aad
mov
rclb
jge
push
jp
addr16
cmp
sti
ret
mov
clc
shlb
mov
and
pop
sbb
imul
repnz
jnp
aad
inc
sub
ret
js
jbe
aad
jb
rclb
mov
pop
xor
rol
add
and
sarb
push
jle
and
mov
mov
mov
or
jo
push
leave
in
mov
in
sahf
mov
lahf
repz
cli
fisttps
hlt
jns
scas
negb
fs
jns
push
hlt
jns
scas
negb
or
or
mov
sub
pop
mov
add
sub
int
mov
rcrb
stc
das
dec
es
dec
mov
cmp
and
fnstcw
and
ret
movsl
push
in
xchg
cli
fnstsw
jp
notl
push
jl
pop
dec
daa
shrb
jbe
shlb
xor
pop
mov
lret
pop
shlb
adc
add
sub
mov
sbb
ret
insl
xchg
xchg
add
jbe
rclb
sbb
ret
sub
jbe
mov
sub
xor
fld
dec
xor
pop
dec
aad
arpl
sarb
add
adc
movsb
dec
xchg
mov
adc
xor
and
cmp
jg
adc
xor
out
cli
push
cmp
xor
dec
mov
dec
std
dec
mov
ror
add
and
stc
cmpsb
jnp
js
cmpsl
lahf
shll
sti
les
mov
and
rcrl
arpl
xlat
inc
sub
popf
mov
mov
inc
jnp
xor
xchg
mov
push
dec
pop
jbe
das
adc
xchg
xchg
popa
shlb
add
xor
aam
mov
aas
daa
loop
jbe
xor
pop
mov
xor
ret
mov
push
pop
sbb
xchg
push
xchg
pop
mov
lods
inc
sbb
loopne
push
and
jbe
xor
and
cmp
sub
jne
gs
jp
fs
in
sbb
mov
in
mov
push
jp
shlb
push
and
aaa
in
pop
mov
fisttps
ret
adc
mov
into
mov
icebp
sub
jbe
inc
mov
mov
inc
pop
jbe
aad
xchg
adc
and
sarb
or
mov
mov
push
bound
xor
shlb
mov
pop
mov
rcrb
daa
sbb
dec
outsl
and
repnz
sub
jge
dec
inc
cmp
lock
mov
xchg
xchg
mov
pushf
ret
ds
jp
shlb
ret
mov
in
sub
add
xor
and
mov
hlt
xor
rclb
sbb
std
mov
add
xchg
mov
sbb
mov
add
xor
add
jno
shlb
add
gs
shlb
rcl
es
mov
jbe
arpl
inc
jo
jbe
and
sbb
cmpsb
daa
stos
push
jbe
push
cwtl
xchg
mov
je
sub
xchg
mov
sbb
ret
xchg
je
mov
test
aad
lock
pop
push
je
mov
mov
aad
mov
rcrb
sbb
fidivl
shll
lahf
sti
xor
dec
sub
pop
sub
sbb
lret
jno
sub
mov
xor
xor
mov
shrb
mov
sbb
sub
jo
insl
aam
clc
mov
cltd
roll
icebp
sbb
insl
push
test
and
out
dec
lock
daa
push
jbe
cmp
inc
mov
add
push
jnp
push
adc
daa
aas
jecxz
sbb
sub
add
and
dec
adc
push
pushf
mov
xor
imul
insb
adc
add
aad
add
jge
xor
fidivrs
jp
shlb
into
xchg
jb
fs
mov
cltd
jecxz
clc
fcoms
xchg
add
mov
lds
mov
cs
push
mov
xchg
mov
mov
cmp
sub
sbb
pop
mov
sub
sbb
and
je
cwtl
mov
sbb
xor
aaa
xor
pop
mov
shlb
sub
pop
inc
lahf
dec
into
aas
push
ss
add
mov
add
pcmpeqd
cmp
cmpsb
lea
sub
fidivrs
add
xor
pop
sub
jbe
gs
push
shlb
sub
sbb
adc
shlb
and
push
jp
shlb
les
pop
mov
inc
ss
popf
mov
daa
je
jbe
outsb
bound
sbb
mov
mov
shlb
or
xor
sub
popf
sub
popf
inc
sti
inc
pop
xchg
fs
ss
fldl
pop
push
xor
sbb
hlt
mov
mov
push
lahf
rcll
xchg
or
or
sbb
push
aaa
pop
and
or
sub
sub
pop
jecxz
lods
cli
sub
ficoml
cmp
sub
jmp
sub
rcrb
mov
sub
sub
jbe
cmp
in
stos
cmp
testb
cmp
testb
leave
in
stos
arpl
roll
and
in
xchg
jbe
cmp
and
sbb
hlt
xor
cmp
and
les
add
rorb
sub
mov
mov
mov
jg
jne
xor
fdivs
mov
inc
and
shr
or
mov
ja
mov
jbe
xor
in
pop
sahf
cld
adc
jbe
aam
jbe
rclb
jge
sub
pop
dec
dec
pushf
mov
outsb
lods
hlt
xor
adc
add
cmp
aad
and
shr
test
clc
jne
xor
mov
mov
sahf
cld
adc
jbe
xchg
arpl
push
mov
sbb
leave
pop
mov
aad
sbb
sbb
and
fistps
movsb
push
cmp
jbe
mov
xor
sbb
nop
hlt
ss
and
popfw
mov
mov
popa
sbb
popf
mov
addr16
xor
xor
rol
or
mov
aas
cld
daa
aam
pushf
mov
std
sub
and
popf
das
aaa
daa
fisttps
or
pop
pusha
xchg
push
aad
loop
rcrb
dec
adcl
mov
xor
rcrb
pop
in
sbb
xchg
jb
andl
add
rorl
icebp
inc
sub
xchg
ljmp
sbbl
sbb
popf
mov
daa
mov
dec
mov
test
sti
xor
cwtl
lcall
bound
ss
xchg
shlb
cmp
daa
dec
xchg
jbe
data16
lods
daa
rcr
sbb
mov
sbb
and
jbe
add
mov
adc
sahf
test
ds
mov
iret
mov
daa
cmp
jne
mov
xchg
mov
xchg
jbe
aad
inc
sub
cmc
lea
mov
cltd
arpl
xchg
cmpsb
push
xlat
enter
xchg
ret
test
push
inc
jae
popa
ds
stos
xchg
sbb
cli
daa
or
mov
pushf
into
rorl
add
and
sbb
adc
mov
shlb
xchg
pushf
adc
sbb
mov
add
ret
and
jl
int
add
and
je
jns
mov
add
mov
jmp
sbb
in
jns
arpl
lds
call
and
xor
pop
mov
shlb
pop
imul
mov
sub
cld
jne
cmp
jg
mov
hlt
add
ds
jp
shlb
fnstcw
push
subl
add
xor
sti
sub
xor
cs
xchg
pushf
jbe
std
sub
adc
pop
cltd
add
push
dec
push
pop
pop
mov
mov
setge
mov
lahf
test
and
fnstsw
sub
bound
ds
pop
adc
adc
xor
std
jne
mov
mov
mov
sti
movsb
jbe
xor
add
sub
stc
jne
inc
cmp
shlb
mov
rcrb
sub
ret
stos
popf
cmp
cmp
jbe
adcb
pop
pop
mov
adc
sbb
insb
pop
sub
cli
adc
jae
sbb
popf
mov
mov
aam
test
aad
fstps
sarb
push
mov
cmc
and
add
mov
daa
test
sub
xchg
bound
xor
loopne
jmp
jno
jge
add
mov
xchg
xor
roll
aaa
add
sub
dec
jnp
popf
mov
push
adc
adc
jp
mov
popf
mov
sub
stos
jbe
xchg
aaa
pop
rcll
sbb
xor
lods
fs
jl
push
fsubs
jbe
shll
mov
loopne
adc
mov
insb
xor
sti
ret
mov
sbb
mov
pushf
or
hlt
mov
mov
cmp
and
mov
jne
mov
xor
push
jmp
add
mov
mov
rclb
outsl
ss
rcrb
sbb
mov
add
jp
mov
lcall
cmp
lock
int
add
dec
jl
in
out
inc
gs
mov
xchg
addb
push
xor
pushf
pop
mov
push
ss
xchg
mov
push
aad
push
sub
mov
cmp
and
shl
sub
jne
pop
mov
daa
xchg
pop
sahf
cld
adc
jbe
dec
scas
lea
push
popf
mov
mov
and
lahf
ret
cmp
mov
or
imul
sbb
cmpb
popf
sbb
mov
add
sarb
arpl
jbe
sti
adc
or
and
mov
pop
sbb
push
inc
pop
mov
jbe
aaa
fcompl
cmp
mov
ljmp
and
xchg
hlt
add
mov
and
dec
pop
dec
jl
insb
in
rol
mov
mov
adc
add
jbe
xor
jbe
xchg
mov
cmp
ret
cli
daa
rcrb
sbb
push
mov
mov
inc
xor
mov
cmp
sarb
mov
test
jbe
movsb
hlt
add
shlb
fidivrs
ss
pop
dec
or
xor
dec
pop
std
jge
rclb
sbb
jecxz
jge
mov
mov
adc
mov
std
imul
stos
aam
lahf
sti
jg
loopne
adc
negl
rclb
jge
mov
cmp
aad
in
rclb
sbb
mov
nop
movsl
xor
sti
and
pop
inc
sbb
shlb
fstl
inc
mov
or
jg
mov
pop
insb
scas
mov
scas
aad
add
sarb
dec
pop
sti
sub
daa
out
aaa
cli
cmp
ss
sbb
mov
mov
pushf
xchg
mov
mov
sahf
mov
sub
popf
mov
mov
aad
sub
rcrb
push
mov
jo
sbb
inc
mov
mov
ror
xchg
pushf
adc
mov
adc
fnsave
mov
and
lahf
xlat
pop
push
xor
sub
int
int
loopne
arpl
mov
sbb
pop
lahf
add
mov
adc
xchg
mov
sub
insb
inc
inc
push
pop
jle
rclb
sub
sbb
jne
cmp
shlb
mov
cld
adc
jb
aad
push
sbb
xchg
pushf
lahf
adc
mov
and
inc
jnp
cmp
repz
xchg
or
pushf
xor
std
add
sbb
jbe
fstl
outsl
pop
push
mov
lahf
aad
mov
rcr
mov
mov
iret
shr
ja
popa
sub
popf
cmp
es
jno
aad
and
rclb
push
mov
hlt
sub
shlb
sahf
std
adc
sub
test
inc
add
adc
mov
sbb
int
aas
dec
push
sub
popf
mov
and
ret
insl
gs
lods
mov
add
aad
pop
sbb
xor
shlb
rorl
sti
cs
add
xor
ficoml
sti
ret
cmp
enter
insl
lcall
sbb
sbb
popf
mov
lahf
mov
mov
jbe
movsb
hlt
mov
dec
xchg
outsl
jno
inc
sub
sub
sahf
lcallw
loop
imulb
pop
or
in
mov
aas
cli
ret
xchg
lahf
inc
xlat
xor
shlb
push
pushf
xor
cld
gs
in
or
pop
dec
jl
adc
mov
rcrb
sub
jne
pop
popf
mov
es
popf
mov
dec
lods
and
repnz
xchg
cmp
aam
jbe
rclb
sub
sbb
mov
xor
pop
sub
es
xor
pop
enter
movsl
and
fidivs
clc
std
shlb
adc
cs
xchg
cmpb
daa
dec
add
pushf
adc
dec
pushf
adc
daa
xchg
shlb
jo
clc
push
mov
mov
addr16
bound
xor
cld
adc
mov
mov
je
sbb
mov
push
mov
sbb
xchg
rolb
pop
mov
les
dec
shlb
test
jbe
movsb
hlt
add
shlb
lahf
aam
jbe
rclb
lods
push
sbb
fistps
and
lods
xchg
jbe
xor
push
xor
and
cmp
and
cmp
and
sub
jp,pn
pop
pop
pop
cmp
lea
ds
jl
gs
shlb
andb
popf
mov
test
mov
jbe
aad
sub
sbb
and
xor
dec
xor
and
addr16
jp
shlb
loope
pop
jbe
out
movsb
lock
addr16
sbb
stc
adc
xor
int
push
or
sbb
imul
add
popf
mov
sub
jbe
xor
dec
sbb
rclb
push
pushf
mov
cmp
and
xchg
dec
mov
shlb
mov
jb
xchg
lahf
aad
cmp
jl
push
jp
aad
std
add
xor
testb
mov
lds
and
mov
or
cmp
pop
outsl
push
sub
xor
xor
xor
and
call
popf
jbe
or
pop
sub
sbb
fadds
xor
testl
test
fsubs
xor
sub
pop
push
sub
xchg
bound
mov
sub
shlb
les
cs
pop
jge
fdivrs
iret
aad
jae
rclb
sbb
xor
sti
ret
xchg
jne
or
rcrb
shlb
cwtl
and
xchg
and
mov
dec
sbbl
sbb
xor
neg
pop
xor
mov
push
xor
adc
bound
lea
shlb
sub
mov
std
inc
jbe
pop
into
pop
mov
ficompl
xchg
mov
cltd
xlat
mov
jbe
cld
adc
jbe
xor
sub
xor
xchg
mov
jg
rorb
xchg
outsb
add
and
dec
jo
andl
cmp
and
loopne
and
cmp
aam
fidivrs
aam
push
pushf
dec
sti
fnstsw
adc
jge
inc
sbbb
and
aaa
adc
mov
cld
pop
sbb
cmc
jns
aad
aaa
sub
popf
mov
andb
dec
popfw
mov
sahf
adc
add
add
shlb
and
pop
mov
shr
daa
push
sub
mulb
jb
mov
sbb
std
mov
jmp
jbe
cmp
mov
adc
sarl
cs
pop
dec
or
xor
xor
sarb
dec
jl
xor
push
je
and
mov
sub
lcall
mov
add
xchg
mov
mov
test
add
int
push
or
jbe
xor
push
insb
inc
sub
repz
adc
rcrl
adc
xor
in
push
and
pop
xor
out
mov
mov
shlb
mov
pop
and
popf
test
insb
js
adc
sahf
rorb
mov
mov
fstps
xchg
xlat
xlat
cli
sub
pop
stos
outsl
xchg
cmp
pop
lock
push
test
flds
outsb
ret
fdivr
mov
sbb
leave
inc
std
sbb
cmp
jbe
aad
pop
clc
sub
loopne
pop
call
jbe
xor
in
jne
xor
fldl
sub
mov
xor
fidivs
stc
aas
xor
and
push
and
mov
mov
and
sahf
movsb
lret
jle
testl
mov
push
test
pop
sbb
in
lret
test
aad
out
sbb
xchg
bound
xor
les
push
adc
xchg
mov
fsubs
sub
mov
das
push
aas
pop
daa
inc
mov
cs
adc
xor
ss
std
ret
rcll
push
imulb
xor
sti
sub
cmc
pop
cmp
jns
sub
sti
inc
add
xor
bound
daa
call
ror
jl
loopne
loopne
pop
rcl
mov
mov
sahf
aam
add
jp
shlb
sub
cmpb
fidivrl
pop
mov
or
dec
lahf
xlat
stc
jb
shlb
mov
sub
xchg
xor
adc
daa
pusha
jne
inc
mov
and
mov
jbe
cmp
jmp
insb
mov
lods
pop
sbb
popw
dec
jl
xchg
mov
mov
mov
adc
sub
pushl
cmp
mov
jbe
stc
mov
imul
sbb
xor
daa
stos
sub
je
rcrb
xchg
adc
shlb
sbb
mov
pop
jbe
rclb
sbb
xor
jbe
pushf
dec
mov
mov
repz
and
and
sbb
int
adc
aad
push
sub
ret
pop
aad
out
dec
pop
data16
ret
pop
cmc
mov
xor
mov
shlb
and
leave
mov
loopne
adc
mov
sub
popf
mov
rcr
sahf
mov
sub
mov
sbb
and
rclb
daa
push
sub
sbb
xor
adc
jbe
mov
and
daa
cwtl
pop
jbe
addr16
mov
sbb
popf
rolb
jbe
xchg
movsl
jbe
push
xor
fs
pushf
adc
pop
pushf
adc
jbe
or
test
mov
sahf
aad
mov
mov
aad
mov
shr
mov
xor
add
mov
push
jp
shlb
cmp
test
sub
mov
inc
pushf
adc
hlt
xor
lods
orb
jle
shlb
shll
or
cltd
xchg
hlt
pop
xchg
push
sub
mov
je
xor
cld
and
cmpsl
test
outsb
data16
shlb
daa
cmp
lahf
dec
orl
jmp
ret
js
push
ja
aad
sbbl
cmp
pop
mov
lahf
inc
adc
jo
test
cltd
cmc
jne
or
dec
in
xor
nop
pop
push
int3
insl
xor
mov
mov
aas
sbb
js
aas
mov
jne
dec
movl
xchg
pop
jne
outsl
cwtl
push
cltd
cmp
sub
pop
xor
pop
mov
xor
mov
daa
mov
ret
inc
push
jne
xor
sti
sarl
jns
add
xor
or
daa
mov
xor
cmpl
je
pop
push
cs
jne
cmp
add
lahf
mulb
imul
and
mov
mov
pop
add
ret
adc
sbb
cmp
lea
fs
jl
adc
mov
pop
jne
mov
mov
test
negb
sbb
push
fwait
pushf
mov
dec
xor
sti
fidivrs
xor
stos
dec
repz
cmc
or
fs
sbb
pop
cmp
sbb
cld
push
scas
sub
xchg
dec
jge
xchg
and
push
push
es
xlat
xchg
cmpsl
insb
shrb
fildll
rcr
adc
mov
and
xor
or
xchg
and
xor
dec
repz
in
xor
xor
xor
in
xor
mov
xchg
and
jmp
dec
mov
xchg
and
push
xchg
and
cmp
ret
pusha
in
and
addb
mov
or
cmp
pop
xlat
xchg
dec
xchg
dec
xchg
and
push
push
es
xlat
xchg
aad
fadd
and
xchg
jbe
add
test
pop
xlat
xchg
lods
xor
sub
icebp
xlat
xchg
lods
dec
repz
popa
outsb
out
cmc
fidivrl
nop
lods
and
scas
sub
xlat
xchg
scas
xor
sub
in
xlat
xchg
lods
sub
cmovs
adc
push
repz
bnd
movsl
fwait
rcll
popa
mov
and
addb
pop
addb
ljmp
cmpsl
and
icebp
movsl
cmove
adc
les
rol
rclb
push
inc
inc
cmp
add
mov
mov
scas
cmpsl
hlt
xlat
xchg
stc
hlt
sbb
lods
pop
adc
pop
dec
call
and
nop
fisubl
pop
pop
call
imul
dec
pushf
sub
and
pop
nop
push
out
sub
pop
pop
loopne
or
call
inc
pop
xlat
xor
shr
ret
in
push
lock
fstp
pop
xlat
ret
fldenv
aam
pop
push
stos
add
loop
mov
mov
cmpsl
fwait
rorl
scas
inc
repz
aas
xlat
xchg
lods
pop
repz
dec
xor
pop
pop
fadds
or
mov
cmp
pop
xlat
xchg
movsl
test
xchg
and
scas
pop
rcl
or
pop
xlat
xchg
cmpsb
fwait
ror
movsl
subb
mov
pop
xlat
pop
xor
cmp
idivb
mov
scas
in
mov
xchg
enter
enter
dec
adc
xchg
and
ds
pop
repz
andl
and
pop
sub
inc
clc
or
pop
xlat
cmp
rcrl
adc
dec
dec
outsl
xchg
and
or
inc
xlat
ret
sbb
pop
mov
addr16
ss
and
lock
fcmovbe
lock
cmpsl
scas
xchg
adc
xchg
fsubs
sub
pop
push
scas
fadds
imul
jns
sub
mov
adc
xchg
and
lcall
pop
push
push
es
xlat
xchg
fldenv
and
pop
stos
adc
in
pusha
shll
pop
stos
sub
cli
xlat
xchg
lods
xor
shrb
xlat
xchg
lret
dec
add
imul
popf
aad
and
cmpsl
and
or
cmp
es
cmp
mov
xlat
shll
cmp
nop
fisubl
sbb
pop
add
push
xlat
cmp
push
push
lret
xor
pop
xlat
or
push
bound
pop
xlat
out
xor
push
movsl
adc
mov
mov
dec
cs
and
mov
pop
es
xlat
xor
jle
xor
shlb
movsl
xchg
enter
enter
repnz
nop
cld
pushf
dec
inc
leave
xchg
and
push
stos
sub
xchg
stos
and
cmp
jbe
xchg
out
cwtl
xor
clc
sarb
iret
pop
xlat
pop
outsl
bound
jl
lods
jmp
pop
and
fstps
stos
imul
lret
popf
rcll
aam
hlt
movsl
lcall
dec
popf
xchg
xchg
and
and
pop
cmp
sbb
push
xor
mov
dec
movsb
mov
nop
lods
xor
pop
psrad
cmp
or
test
and
xchg
stc
cmp
test
pop
xlat
xchg
lods
pop
repz
or
xchg
push
popa
mov
pop
and
xchg
cmpsl
arpl
femms
cmp
ror
popf
lcall
rcr
dec
loop
xchg
and
pop
nop
push
or
clts
cmp
pop
xlat
xchg
and
jg
pop
test
mov
dec
out
xchg
and
pop
mov
lcall
sub
xchg
dec
inc
inc
xchg
and
or
aad
inc
xlat
aam
add
or
push
scas
sub
mov
mov
pop
xlat
xchg
pop
repz
andb
push
dec
cmp
scas
call
and
popf
push
fnstcw
or
call
xor
pusha
cmp
pop
pop
loopne
fidivrl
nop
lods
dec
repz
mov
jne
pop
cmp
out
pop
out
xchg
and
loopne
fadds
push
scas
xor
pop
inc
xlat
xchg
and
shld
jns
out
lock
lock
loope
xchg
and
pop
fadds
pusha
jmp
cmp
and
xor
and
fcomi
movsl
fwait
rcll
pop
xlat
xchg
dec
inc
pop
xchg
and
cmp
fwait
pop
xlat
xor
pusha
inc
ret
cld
mov
xlat
or
aas
dec
hlt
xchg
and
sbb
mov
jmp
xchg
movsl
fwait
rcll
pop
ja
lods
pop
xlat
loopne
pusha
iret
in
and
xor
sti
xor
in
mov
pusha
fwait
mov
subb
push
and
jge
scas
pop
loopne
cmp
movsl
js
push
cmpsl
push
test
and
push
in
add
push
xlat
xchg
cmp
inc
movsl
pop
xlat
pop
insb
jl
lahf
int
nop
cmp
pop
hlt
lods
scas
and
adc
cmp
cmpsb
pop
xlat
les
xlat
xchg
and
cmp
jnp
xchg
and
sarb
std
push
xlat
xchg
movsb
pusha
fisttpl
leave
cmpsl
cmp
loope
xlat
pop
and
xlat
xchg
fadd
adc
xor
xchg
dec
add
and
jmp
add
push
mov
mov
jmp
pop
add
add
push
mov
sub
pop
pop
xor
xor
xor
jmp
mov
add
jmp
mov
dec
push
jmp
add
push
mov
xor
inc
neg
add
sub
jmp
pop
add
add
jmp
neg
and
dec
sub
sub
pop
jmp
pop
jmp
mov
shl
inc
shl
sub
xor
jmp
pop
add
sub
sub
sub
add
add
pushl
pop
add
xor
movzbl
popl
jmp
mov
add
mov
push
jmp
push
mov
movl
jmp
mov
mov
push
mov
sub
sub
mov
add
xor
pop
sub
mov
mov
sub
add
add
pop
xor
mov
add
sub
jmp
push
jmp
xor
xor
mov
or
jne
push
mov
push
mov
add
jmp
sub
mov
mov
dec
push
jmp
not
dec
xchg
jmp
add
add
not
sub
mov
jmp
or
mov
add
shr
add
add
pop
push
jmp
pop
mov
mov
add
mov
pop
add
mov
jmp
sub
mov
add
jmp
push
pushl
pop
jmp
push
mov
mov
push
mov
jmp
mov
push
mov
push
pop
add
sub
mov
jmp
sub
push
negl
pop
xor
jmp
pop
push
mov
sub
pop
add
add
pushl
pop
mov
add
push
jmp
mov
jmp
add
push
mov
mov
pop
jmp
push
mov
neg
xor
xor
jmp
xchg
mov
shll
pushf
jmp
push
sub
mov
mov
shr
push
mov
add
pop
xor
mov
jmp
jmp
pushl
pop
jmp
sub
add
pop
push
mov
add
sub
xchg
pop
mov
mov
push
mov
sub
pop
add
add
mov
jmp
sub
jmp
mov
add
add
jmp
pop
push
mov
add
jmp
push
mov
add
add
sub
push
mov
jmp
mov
jmp
or
je
pushl
subl
mov
add
sub
jmp
pushl
pop
push
mov
add
sub
jmp
mov
push
push
pop
add
sub
jmp
xor
jmp
sub
pop
xchg
mov
shr
jmp
sub
mov
push
pushl
mov
add
add
sub
mov
jmp
xor
add
sub
sub
pop
jmp
add
mov
add
push
jmp
xor
jmp
pop
add
push
jmp
xor
jmp
sub
pop
push
mov
and
or
sub
inc
xor
add
pop
xchg
pop
popl
mov
mov
movzbw
push
pushf
jmp
not
mov
pop
push
mov
shr
xor
shr
sub
and
mov
add
jmp
pop
mov
pop
push
mov
jmp
xor
jmp
sub
mov
mov
add
jmp
pushl
popf
pop
rcrw
pushf
jmp
mov
jmp
shl
push
push
pop
jmp
push
pop
shr
sub
shl
push
mov
add
pop
push
mov
sub
pop
xor
sub
sub
add
pop
sub
mov
mov
add
add
pop
pop
jmp
movzwl
pushw
mov
jmp
push
pop
add
add
xchg
pop
sub
mov
jmp
sub
jmp
add
add
sub
mov
jmp
mov
jmp
mov
mov
xor
pop
jmp
mov
add
add
jmp
dec
shr
push
push
push
push
pop
or
or
sub
mov
pop
mov
pop
jmp
decl
andl
jmp
lods
push
push
mov
not
shl
push
mov
or
pop
jmp
pushl
push
mov
jmp
pop
push
jmp
add
jmp
mov
add
mov
jmp
push
mov
push
pop
add
push
mov
shl
jmp
mov
pushl
pushl
jmp
sub
pop
shl
jmp
addl
mov
push
mov
add
jmp
push
mov
push
mov
add
pop
mov
add
jmp
mov
xor
pop
sub
add
and
pop
jmp
mov
jmp
mov
push
mov
mov
xor
pop
jmp
add
add
jmp
mov
sub
jmp
mov
pop
add
jmp
xor
jmp
xchg
mov
push
sub
mov
jmp
add
jmp
xor
jmp
pop
sub
sub
push
mov
jmp
push
sub
jmp
pushw
jmp
mov
jmp
mov
mov
mov
not
jmp
pop
sub
jmp
sub
pop
add
add
pushl
mov
add
add
jmp
mov
add
push
mov
shr
jmp
jmp
add
pop
xor
pop
jmp
push
push
mov
mov
pop
sub
pop
xchg
pop
mov
jmp
inc
add
sub
sub
add
mov
jmp
mov
add
jmp
mov
push
push
push
popl
addl
mov
jmp
pop
push
pop
pop
and
pushl
pop
add
shr
jmp
popl
mov
mov
jmp
add
pushl
pop
jmp
sub
pop
xchg
mov
jmp
mov
add
add
sub
jmp
add
pop
sub
sub
sub
sub
jmp
push
mov
jmp
push
mov
push
mov
jmp
sub
add
add
sub
pop
jmp
push
mov
add
add
jmp
mov
jmp
sub
xchg
jmp
add
jmp
pop
jmp
pushl
pop
push
mov
push
pop
jmp
mov
mov
add
jmp
add
xchg
jmp
add
add
push
mov
jmp
add
sub
add
sub
sub
sub
add
push
jmp
pop
add
jmp
add
add
push
jmp
add
push
mov
sub
add
push
jmp
shl
and
dec
xor
jmp
mov
jmp
add
push
mov
add
jmp
pop
push
jmp
xor
pop
sub
sub
jmp
push
push
jmp
pushl
popf
pop
rclw
pushf
jmp
mov
jmp
add
pop
jmp
add
xchg
jmp
not
push
mov
xor
xor
pop
push
mov
mov
sub
pop
add
pop
sub
jmp
mov
mov
jmp
mov
add
pop
push
pushl
mov
add
popl
mov
push
mov
jmp
mov
jmp
xchg
mov
add
sub
sub
sub
mov
mov
not
inc
push
mov
and
pop
xor
sub
push
mov
shr
jmp
and
shl
jmp
pop
sub
pop
pop
jmp
add
pop
xchg
mov
xor
jmp
sub
add
add
pop
push
push
push
pop
and
sub
push
pop
jmp
shr
xor
push
mov
jmp
sub
xchg
pop
mov
mov
jmp
pop
btr
pushf
jmp
push
mov
add
add
jmp
mov
or
not
add
or
pop
not
xor
push
mov
dec
neg
push
mov
jmp
or
pop
xor
sub
pop
add
add
mov
jmp
push
pop
add
push
mov
mov
mov
add
pop
sub
pop
push
jmp
mov
add
add
sub
add
add
sub
push
jmp
dec
push
mov
add
jmp
add
push
mov
addl
mov
add
push
push
mov
shr
dec
neg
shl
shl
push
jmp
mov
jmp
push
push
mov
mov
sub
pop
sub
mov
push
jmp
mov
mov
pop
pop
jmp
mov
add
add
sub
pushl
pop
pushl
pop
add
mov
add
jmp
push
mov
push
mov
mov
pop
jmp
xor
add
sub
sub
mov
add
dec
shl
jmp
pop
add
pop
or
jmp
mov
mov
push
mov
neg
push
mov
sub
pop
add
jmp
pushl
pop
jmp
mov
and
add
push
push
mov
jmp
jmp
add
push
mov
jmp
mov
jmp
add
pop
add
xor
xor
xor
mov
btc
pushf
jmp
dec
sub
jmp
or
add
jmp
cmp
je
push
push
push
mov
jmp
or
sub
add
pop
xor
sub
pop
mov
sub
sub
push
mov
add
pop
mov
add
push
mov
add
pop
push
jmp
mov
add
sub
mov
mov
push
mov
add
jmp
push
mov
sub
pop
mov
pop
push
mov
shr
sub
add
add
jmp
mov
push
mov
add
jmp
add
sub
sub
add
push
jmp
pushl
mov
push
mov
jmp
jmp
push
mov
dec
shr
jmp
mov
push
mov
push
push
jmp
mov
add
mov
jmp
inc
xor
jmp
add
add
xor
xor
xor
pop
add
add
sub
mov
pushl
mov
add
popl
mov
push
mov
push
mov
mov
mov
add
mov
mov
push
push
jmp
pop
mov
pop
add
add
jmp
pushl
jmp
and
pop
xor
add
jmp
push
jmp
mov
jmp
jmp
push
sub
mov
push
push
mov
mov
add
jmp
push
push
pop
push
sub
mov
push
push
pushl
pop
add
add
add
mov
pop
mov
pop
add
mov
add
push
mov
add
pop
xchg
pop
shrw
pushf
jmp
add
push
jmp
pop
xchg
pop
jmp
add
pop
sub
movzbl
mov
sub
mov
push
pushl
jmp
pop
xchg
mov
push
push
push
pop
inc
neg
xor
sub
mov
mov
mov
jmp
and
jmp
add
xchg
pop
push
jmp
push
mov
not
shr
inc
or
xor
add
add
pop
and
pop
or
je
push
mov
push
jmp
not
add
sub
add
pop
xchg
jmp
add
push
mov
mov
push
mov
push
mov
shl
shr
add
jmp
mov
mov
add
add
sub
jmp
shr
add
sub
jmp
add
push
pushl
pop
jmp
xchg
pop
jmp
mov
pop
add
pop
add
xor
xor
xor
mov
jmp
jmp
and
xchg
not
xchg
sub
jmp
xchg
push
jmp
add
jmp
xchg
mov
jmp
add
dec
push
jmp
not
jmp
mov
or
pushl
pop
add
add
sub
sub
mov
add
push
mov
sub
sub
pop
push
mov
push
mov
addl
jmp
mov
push
jmp
add
add
xchg
pop
add
jmp
mov
add
pop
add
xchg
mov
sub
mov
jmp
add
add
pop
push
mov
and
xor
sub
push
mov
add
pop
add
pop
xchg
mov
bts
pushf
jmp
sub
add
pop
add
xchg
mov
push
push
pop
push
mov
add
mov
jmp
push
pop
push
jmp
mov
add
jmp
xor
xor
xor
pop
popl
mov
jmp
mov
mov
add
add
add
sub
mov
add
xchg
mov
jmp
sub
pop
movzbl
pushl
push
jmp
mov
mov
pop
jmp
mov
push
jmp
mov
add
push
mov
mov
pop
jmp
add
jmp
xor
xchg
not
xchg
and
xor
or
pop
jmp
mov
sub
mov
jmp
pop
neg
jmp
mov
add
sub
xchg
jmp
pop
shl
add
mov
pop
xor
mov
jmp
push
mov
jmp
mov
push
jmp
mov
push
pop
and
jmp
xor
mov
shlb
pushf
jmp
xchg
pop
mov
mov
push
push
jmp
add
push
mov
add
pop
push
mov
pushl
pop
popl
mov
jmp
sub
add
jmp
pop
mov
mov
jmp
push
pop
xchg
not
xchg
xor
sub
pop
xor
xor
xor
mov
jmp
add
mov
pop
sub
add
pop
push
mov
push
jmp
push
mov
add
sub
xchg
pop
mov
jmp
mov
sub
pop
shr
shr
jmp
pop
or
jmp
inc
sub
push
mov
jmp
add
mov
pop
add
not
jmp
push
mov
mov
push
mov
mov
mov
pop
push
mov
sub
pop
add
add
jmp
mov
jmp
sub
mov
push
jmp
sub
mov
mov
add
jmp
pop
or
jmp
mov
mov
push
mov
dec
add
add
jmp
pushl
jmp
add
xor
sub
pop
push
mov
sub
pop
jmp
pop
and
mov
add
jmp
sub
pop
jmp
add
push
mov
sub
sub
push
mov
add
pop
pop
pop
add
xchg
jmp
neg
jmp
add
xor
jmp
neg
sub
mov
mov
add
push
mov
sub
add
jmp
mov
pop
mov
jmp
push
mov
sub
jmp
mov
mov
add
pop
pushw
mov
jmp
push
pushl
pop
popl
mov
mov
push
pop
push
mov
add
jmp
sub
mov
jmp
pop
neg
and
add
mov
pop
push
jmp
mov
add
addl
subl
sub
push
mov
addl
add
subl
mov
push
mov
add
add
xor
xor
xor
pop
push
mov
push
mov
inc
add
sub
pop
subl
sub
addl
addl
pop
jmp
pop
xchg
jmp
and
dec
sub
sub
add
add
pop
inc
push
mov
xor
add
add
xor
pop
add
pop
jmp
xchg
jmp
push
push
pop
sub
jmp
mov
push
pushw
pop
push
mov
xor
pop
mov
pop
jmp
push
push
push
pop
xor
inc
push
mov
xor
jmp
pop
xchg
mov
or
pushf
jmp
sub
jmp
add
add
pop
jmp
mov
jmp
movzbw
pushw
mov
jmp
sub
add
pop
push
push
mov
jmp
sub
mov
mov
not
jmp
push
pushl
pop
push
jmp
pop
shl
neg
dec
jmp
pop
push
jmp
pushl
pop
add
mov
add
jmp
xchg
jmp
mov
push
push
sub
mov
jmp
xor
jmp
shr
xor
mov
pop
sub
pop
jmp
push
pop
add
mov
push
mov
jmp
add
push
jmp
pop
add
push
mov
push
mov
and
sub
neg
dec
jmp
pop
sub
pop
xchg
pop
jmp
add
pop
push
push
pop
sub
jmp
sub
add
jmp
neg
jmp
mov
or
inc
sub
dec
push
push
mov
mov
jmp
mov
add
push
mov
sub
add
add
mov
push
jmp
pushl
jmp
sub
mov
mov
add
jmp
push
mov
mov
shr
xchg
jmp
push
mov
push
push
mov
mov
pop
and
sub
jmp
dec
shl
jmp
add
push
mov
mov
jmp
xor
jmp
mov
add
push
mov
mov
and
add
dec
shr
jmp
mov
sub
mov
mov
push
mov
add
jmp
subl
jmp
add
jmp
add
pop
push
jmp
addl
pop
sub
mov
jmp
dec
jmp
pop
jmp
pushl
pushl
pop
push
jmp
mov
push
mov
add
sub
xchg
jmp
mov
jmp
pushl
jmp
pop
push
mov
add
add
pop
mov
jmp
add
push
jmp
mov
shl
or
jmp
sub
jmp
push
jmp
xor
jmp
mov
push
mov
push
mov
not
sub
push
mov
xor
pop
push
push
mov
mov
pop
shr
sub
jmp
mov
add
push
jmp
xchg
pop
xchg
mov
bt
pushf
jmp
pop
add
add
pop
push
jmp
add
pushl
pop
push
mov
add
add
xchg
pop
push
push
push
pop
add
sub
add
mov
pop
jmp
mov
mov
push
mov
mov
jmp
mov
push
jmp
movzbl
popw
jmp
mov
add
add
xchg
pop
push
mov
jmp
mov
mov
add
add
push
jmp
mov
jmp
pop
mov
mov
jmp
pushl
subl
mov
add
push
push
jmp
add
add
jmp
xor
mov
pop
neg
dec
or
or
neg
jmp
and
push
mov
shl
add
push
incl
pop
jmp
push
mov
jmp
mov
jmp
pop
xchg
mov
movzbw
pushw
mov
jmp
mov
incw
pushf
jmp
mov
jmp
add
xchg
pop
jmp
shl
inc
push
mov
add
add
jmp
push
push
pop
add
push
mov
add
jmp
shl
shl
jmp
add
add
pop
push
mov
mov
jmp
inc
jmp
push
mov
shr
or
jmp
or
xor
neg
jmp
push
mov
mov
pop
pop
jmp
push
jmp
xchg
pop
jmp
xor
xor
xor
mov
pushl
mov
add
jmp
pop
push
mov
push
mov
addl
mov
push
mov
jmp
pop
mov
jmp
push
push
mov
mov
pop
mov
pop
push
mov
mov
jmp
add
jmp
add
xchg
pop
jmp
dec
jmp
pop
jmp
sub
jmp
mov
neg
jmp
pop
or
jmp
add
xchg
pop
xchg
not
xchg
not
push
jmp
pushl
jmp
push
mov
addl
pop
push
mov
add
pop
add
jmp
jmp
popl
jmp
dec
not
dec
and
xor
sub
pop
xchg
mov
mov
mov
add
pop
push
pushl
pop
jmp
add
pushl
pop
push
mov
add
jmp
mov
sub
jmp
xor
sub
mov
push
mov
mov
sub
pop
xchg
xchg
not
xchg
xchg
sub
mov
mov
dec
inc
add
push
mov
add
jmp
add
push
mov
mov
add
push
mov
sub
pop
jmp
add
pop
push
pushl
jmp
mov
jmp
sub
mov
jmp
mov
sub
jmp
push
mov
add
pop
dec
add
add
jmp
pop
dec
push
mov
or
add
add
pop
shl
xor
sub
jmp
mov
jmp
push
mov
mov
pop
dec
add
xor
jmp
mov
add
add
xchg
jmp
mov
add
mov
add
add
jmp
mov
mov
pop
sub
jmp
pop
pop
push
mov
sub
jmp
sub
add
add
pop
push
mov
add
sub
push
mov
sub
pop
jmp
mov
push
mov
jmp
push
mov
jmp
add
pop
push
push
mov
add
add
jmp
sub
mov
jmp
add
sub
xchg
jmp
mov
jmp
or
pop
inc
dec
xor
add
add
jmp
pushl
jmp
push
mov
jmp
mov
add
jmp
pushw
pop
popw
mov
push
jmp
and
add
add
pop
xor
xor
xor
pop
add
push
mov
xor
neg
add
sub
sub
pop
sub
add
push
mov
jmp
lods
push
push
mov
push
mov
dec
xor
mov
pop
sub
mov
push
mov
mov
mov
pop
mov
pop
pop
push
mov
add
pop
add
sub
mov
jmp
shr
xor
neg
sub
add
pop
push
mov
add
jmp
mov
mov
push
addl
pop
jmp
push
mov
jmp
push
jmp
mov
add
mov
pop
pop
jmp
push
mov
jmp
add
add
pop
xchg
jmp
xchg
pop
mov
add
jmp
dec
push
jmp
push
mov
shr
not
jmp
mov
inc
shr
shl
inc
push
push
mov
not
or
sub
shr
jmp
mov
push
mov
jmp
add
push
mov
add
shl
push
mov
jmp
mov
sub
jmp
pop
add
add
pop
add
xchg
pop
pushl
jmp
mov
push
sub
jmp
push
mov
jmp
add
add
push
pushl
pop
popl
mov
mov
push
push
pop
push
mov
jmp
push
mov
mov
shl
sub
neg
push
mov
xor
pushl
jmp
xor
jmp
mov
jmp
add
jmp
and
sub
sub
add
jmp
sub
sub
pushl
mov
add
add
sub
mov
mov
sub
mov
push
mov
mov
xor
pop
add
shr
inc
shr
neg
jmp
add
jmp
mov
jmp
negb
pushf
jmp
and
shr
inc
sub
jmp
inc
sub
add
jmp
neg
jmp
pop
add
jmp
inc
inc
shr
add
add
jmp
mov
jmp
add
jmp
popl
mov
jmp
pushl
pop
push
push
pop
jmp
push
mov
push
mov
and
pop
and
shr
push
mov
jmp
and
jmp
mov
push
mov
add
jmp
mov
xor
pop
sub
pop
mov
pop
xor
pop
xor
add
pop
push
push
jmp
pop
not
inc
shr
push
mov
xor
dec
xor
sub
pop
add
pop
xchg
jmp
mov
jmp
push
mov
jmp
mov
jmp
mov
jmp
xor
sub
sub
add
jmp
pop
xchg
jmp
push
pop
sub
shr
jmp
push
mov
add
add
xchg
jmp
push
push
jmp
jmp
add
push
mov
jmp
pushl
popf
pop
sbb
pushf
jmp
and
shl
jmp
mov
push
jmp
xchg
pop
not
jmp
pushl
jmp
mov
jmp
mov
push
mov
jmp
mov
push
jmp
mov
pop
pop
pop
jmp
mov
pop
add
pop
sub
mov
add
or
jmp
add
add
pop
jmp
push
mov
jmp
addl
pop
add
jmp
mov
shl
dec
shr
push
mov
jmp
push
pop
push
mov
or
add
add
inc
and
not
jmp
sub
mov
add
xor
xor
jmp
add
push
jmp
popl
pop
rolw
pushf
jmp
pop
mov
jmp
add
push
mov
inc
jmp
xor
jmp
mov
mov
pop
push
mov
add
pop
add
add
add
sub
jmp
xor
xor
mov
jmp
pop
jmp
mov
shl
jmp
add
add
push
mov
add
sub
jmp
add
jmp
push
mov
mov
sub
jmp
sub
mov
mov
jmp
xor
xor
xor
pop
mov
mov
jmp
sub
xor
pop
add
jmp
add
pop
push
push
mov
dec
push
mov
push
mov
xor
add
pop
jmp
add
sub
xchg
jmp
push
jmp
mov
jmp
pop
pop
add
pop
jmp
sub
jmp
popl
pop
xor
pushf
jmp
mov
sub
mov
push
mov
addl
jmp
add
jmp
pop
push
jmp
sub
jmp
pop
sub
jmp
push
mov
add
push
mov
add
pop
xchg
mov
jmp
subb
mov
jmp
mov
add
inc
inc
jmp
push
mov
shr
jmp
pop
jmp
add
neg
xor
mov
mov
add
mov
jmp
mov
add
add
jmp
push
jmp
push
mov
push
mov
add
add
xchg
mov
push
jmp
inc
push
mov
sub
dec
and
xor
sub
pop
jmp
add
jmp
add
mov
add
add
push
jmp
add
jmp
push
mov
jmp
push
mov
shl
or
jmp
push
jmp
push
jmp
pop
xchg
pop
push
mov
jmp
mov
jmp
pop
add
xchg
mov
and
pushf
jmp
mov
or
add
jmp
pop
add
jmp
mov
jmp
pop
mov
mov
jmp
mov
pop
add
jmp
push
mov
xor
pop
add
pop
push
mov
jmp
mov
add
push
jmp
add
mov
add
jmp
pop
add
pop
sub
mov
mov
add
mov
add
xchg
pop
movzwl
sub
mov
push
pop
add
sub
mov
mov
jmp
mov
push
mov
mov
pop
add
add
push
jmp
add
sub
sub
push
mov
mov
add
add
jmp
add
dec
sub
sub
pop
mov
pushl
jmp
pop
add
push
mov
mov
push
sub
jmp
push
mov
jmp
add
xor
mov
add
push
mov
mov
push
mov
jmp
pushl
jmp
push
pop
jmp
jmp
push
jmp
xor
xor
mov
or
shl
sub
mov
jmp
mov
jmp
and
pushl
pop
push
jmp
pushl
popf
pop
rcll
pushf
jmp
push
pop
push
push
push
pop
add
not
inc
sub
mov
pop
and
add
dec
jmp
mov
not
inc
push
push
mov
push
mov
mov
pop
pop
add
jmp
pop
add
push
mov
add
mov
add
push
push
pop
jmp
pop
pop
add
pop
add
xchg
pop
add
mul
push
mov
jmp
sub
sub
pop
sub
add
add
mov
add
jmp
inc
add
or
jmp
pop
popw
push
jmp
mov
sub
pushf
jmp
push
push
xorl
pop
jmp
xchg
pop
jmp
addl
pushl
jmp
mov
mov
sub
pop
sub
and
mov
add
or
je
pushl
jmp
push
jmp
mov
add
add
jmp
mov
add
pop
jmp
sub
pop
sub
mov
mov
sub
jmp
not
or
shr
xor
or
jmp
shl
jmp
shr
jmp
push
jmp
add
pop
sub
sub
add
jmp
pop
xor
jmp
add
add
pop
add
jmp
mov
jmp
mov
add
add
xchg
jmp
add
neg
neg
not
xor
jmp
add
jmp
sub
pop
add
sub
mov
mov
jmp
sub
jmp
sub
add
jmp
push
mov
pop
sub
mov
push
xorl
pop
xor
mov
mov
add
pop
mov
add
jmp
push
pop
jmp
sub
mov
push
push
pop
add
pop
pop
push
push
mov
inc
dec
xor
mov
pop
inc
jmp
mov
jmp
add
sub
mov
mov
jmp
pop
jmp
movzbw
pushw
mov
jmp
add
jmp
mov
addl
pop
jmp
sub
jmp
mov
mov
sub
mov
add
and
jmp
mov
jmp
mov
add
add
xchg
jmp
add
sub
jmp
push
mov
mov
sub
add
add
pushl
pop
add
push
pushl
pop
popl
pop
shr
xor
xor
xor
jmp
add
jmp
pushl
pushl
pop
push
mov
jmp
mov
jmp
not
and
xor
sub
mov
jmp
not
xchg
jmp
push
incl
pop
jmp
push
jmp
mov
push
mov
jmp
add
jmp
push
push
jmp
mov
mov
pop
mov
mov
pop
mov
add
push
jmp
add
xchg
jmp
xor
pop
jmp
push
mov
addl
jmp
mov
sub
pop
jmp
add
xchg
jmp
xchg
pop
jmp
add
pop
sub
push
push
jmp
or
je
pushl
pushl
jmp
add
mov
add
jmp
push
mov
dec
shl
jmp
pop
shl
shr
inc
jmp
add
popl
pop
mov
jmp
add
pop
xor
xor
xor
mov
sarl
pushf
jmp
mov
push
mov
jmp
push
mov
xorl
pop
push
mov
xor
pop
mov
mov
add
jmp
sub
xor
add
mov
add
add
and
pushl
mov
add
push
jmp
push
pop
add
sub
xchg
pop
jmp
xor
xor
and
shr
push
mov
jmp
mov
imul
push
pushf
jmp
mov
jmp
mov
dec
or
shl
push
mov
inc
jmp
push
push
jmp
mov
add
push
push
mov
push
mov
jmp
pop
jmp
mov
add
jmp
xor
mov
add
jmp
pop
add
mov
add
jmp
mov
add
mov
pop
sub
jmp
pop
push
mov
neg
shl
jmp
pop
xor
xor
xor
pushl
pop
jmp
push
jmp
add
mov
add
push
mov
add
mov
jmp
push
pushl
pop
popl
mov
push
mov
jmp
sub
mov
add
add
jmp
push
jmp
add
pop
inc
xor
jmp
dec
jmp
xor
pop
jmp
xor
push
mov
add
jmp
push
push
mov
xor
mov
jmp
mov
pop
mov
add
sub
mov
mov
sub
jmp
mov
jmp
add
add
sub
sub
mov
add
jmp
sub
pop
sub
pop
and
shr
add
add
jmp
add
add
sub
jmp
bt
pushf
jmp
pop
not
dec
neg
jmp
add
jmp
mov
push
mov
add
pushl
jmp
push
mov
jmp
mov
add
sub
neg
shl
sub
jmp
sub
xchg
jmp
push
mov
xor
mov
jmp
mov
add
add
add
jmp
push
mov
jmp
sub
jmp
mov
add
jmp
xchg
pop
jmp
pop
jmp
add
jmp
add
xchg
pop
jmp
mov
shr
add
add
jmp
mov
sub
pop
add
push
mov
push
mov
jmp
jmp
pushl
jmp
sub
pop
and
xor
jmp
push
mov
mov
xor
pop
sub
jmp
add
jmp
mov
jmp
mul
pushw
mov
push
pushf
jmp
push
mov
add
sub
xchg
pop
jmp
add
sub
push
mov
add
jmp
sub
mov
pop
sub
jmp
movzbl
jmp
jmp
push
mov
add
sub
xchg
pop
jmp
mov
add
sub
mov
mov
push
mov
jmp
xchg
jmp
pop
jmp
popl
mov
jmp
pop
push
mov
add
add
jmp
pop
popl
mov
mov
jmp
add
push
push
mov
mov
shl
push
mov
or
pop
and
push
mov
neg
neg
jmp
sub
jmp
xor
jmp
mov
shl
add
add
pop
jmp
sub
pop
add
push
mov
mov
push
mov
sub
jmp
mov
neg
add
jmp
mov
not
mov
mov
add
push
mov
or
pop
push
mov
jmp
mov
sub
mov
jmp
push
push
pop
add
add
xchg
mov
jmp
add
jmp
add
mov
add
sub
xor
xor
jmp
sub
mov
add
sub
jmp
xor
xor
jmp
mov
mov
jmp
add
add
xchg
pop
add
add
jmp
push
mov
push
jmp
not
xchg
jmp
push
addl
pop
sub
mov
add
push
mov
mov
mov
add
mov
add
jmp
push
mov
push
mov
mov
sub
mov
addl
mov
add
push
mov
add
sub
jmp
add
add
sub
sub
pop
sub
mov
push
mov
mov
add
add
push
push
push
mov
jmp
add
pushl
jmp
push
mov
mov
or
pushl
pop
jmp
mov
pushl
pop
popl
pop
pushl
pop
jmp
add
push
pushl
mov
add
popl
mov
jmp
push
mov
add
jmp
mov
inc
jmp
push
push
jmp
pop
jmp
mov
pop
and
xor
jmp
mov
add
sub
jmp
sub
neg
xor
xor
sub
add
add
sub
jmp
sub
mov
pushl
jmp
add
jmp
pushl
popf
pop
adc
pushf
jmp
pushl
pop
add
add
shr
xor
push
jmp
add
mov
pop
add
pop
add
add
sub
add
jmp
add
pop
sub
jmp
pop
jmp
popl
pop
push
mov
sub
pushl
jmp
add
pushl
mov
add
jmp
pop
jmp
mov
push
jmp
not
jmp
popl
pop
push
mov
push
mov
add
jmp
push
mov
push
mov
jmp
mov
mov
shr
jmp
add
push
mov
not
inc
push
mov
push
jmp
mov
push
mov
mov
jmp
pushl
pushl
jmp
pop
not
push
mov
dec
shr
add
add
jmp
push
jmp
add
pop
jmp
sub
pop
xchg
jmp
add
and
jmp
add
sub
sub
movzbl
cmp
je
pushl
push
mov
push
mov
sub
mov
jmp
sub
pop
sub
mov
mov
push
push
mov
push
pop
add
sub
xchg
pop
mov
mov
push
mov
mov
mov
jmp
mov
add
jmp
push
jmp
pushl
pop
push
push
mov
mov
add
jmp
xor
add
jmp
mov
jmp
sub
shl
inc
sub
dec
xor
jmp
mov
xor
add
add
add
sub
jmp
mov
add
jmp
add
pop
push
push
pop
jmp
sub
mov
push
mov
mov
add
jmp
push
sub
mov
addl
pop
push
push
mov
add
inc
add
dec
sub
mov
pop
jmp
jmp
push
mov
mov
jmp
sub
add
pop
push
mov
add
pop
xor
jmp
xor
sub
add
pop
jmp
sub
xchg
pop
jmp
sub
pop
push
jmp
mov
sub
jmp
add
jmp
mov
add
push
jmp
pop
push
mov
add
push
mov
jmp
push
jmp
or
je
pushl
pushl
pop
push
mov
add
jmp
pop
push
mov
push
jmp
inc
add
jmp
pop
jmp
add
pop
sub
xor
mov
add
xor
push
jmp
pop
push
mov
push
pop
jmp
xor
add
pop
push
mov
jmp
pushl
popf
pop
rclb
pushf
jmp
sub
sub
pop
sub
mov
mov
push
jmp
push
pop
pop
xchg
push
notl
jmp
sub
pop
push
mov
jmp
mov
mov
mov
jmp
mov
push
push
pushl
pop
jmp
xor
jmp
mov
add
pop
push
mov
jmp
push
mov
dec
neg
or
add
add
pop
jmp
add
sub
pop
push
mov
mov
jmp
push
jmp
push
jmp
sub
jmp
mov
addl
pop
add
add
jmp
add
mov
add
jmp
push
mov
jmp
add
add
or
shl
jmp
push
mov
add
add
xchg
pop
shr
or
add
sub
mov
jmp
inc
and
push
push
mov
jmp
sub
pushf
jmp
pop
add
pop
sub
push
jmp
shl
sub
mov
mov
sub
mov
push
mov
push
pop
sub
mov
push
jmp
mov
jmp
mov
push
push
pop
push
mov
jmp
sub
pop
or
pop
jmp
pop
push
mov
jmp
mov
add
pop
jmp
mov
jmp
mov
add
add
push
push
mov
mov
push
mov
inc
jmp
add
xchg
jmp
add
xchg
mov
jmp
pushl
mov
add
add
add
jmp
pop
shr
shl
jmp
pop
pushl
pop
jmp
mov
push
mov
add
add
jmp
pushl
pop
push
mov
add
add
xchg
pop
push
push
mov
jmp
pop
xor
sub
sub
jmp
push
jmp
push
mov
mov
shr
push
mov
jmp
mov
mov
sub
add
add
pop
add
xor
xor
xor
jmp
mov
push
mov
push
push
mov
mov
mov
xor
pop
jmp
add
pushl
pop
add
jmp
pop
jmp
push
mov
inc
shl
sub
jmp
mov
xor
pop
pop
xor
mov
add
and
pushl
pop
add
or
shl
sub
mov
push
mov
mov
add
pop
sub
pushl
pushl
pop
add
push
mov
add
sub
jmp
pop
add
not
push
jmp
pop
cmp
pushf
jmp
and
shr
jmp
mov
push
push
mov
shl
sub
sub
shr
and
push
mov
add
jmp
add
sub
push
mov
jmp
push
mov
add
jmp
pushl
pop
popl
jmp
push
mov
add
pop
sub
mov
pushl
jmp
mov
mov
jmp
mov
or
pushf
jmp
add
xor
xor
xor
pop
push
mov
jmp
xchg
pop
jmp
or
and
add
add
mov
add
add
mov
add
add
xor
xor
jmp
add
and
pop
or
je
pushl
jmp
mov
pop
dec
neg
shr
and
not
add
add
pop
xchg
pop
xor
xor
jmp
sub
push
mov
sub
pop
sub
jmp
push
push
push
mov
shr
dec
sub
xor
mov
pop
mov
pop
add
pop
jmp
notl
mov
add
xor
jmp
mov
push
push
jmp
xor
pop
jmp
add
jmp
sub
add
mov
add
add
jmp
pop
add
add
pop
xor
xor
jmp
pop
push
push
pushl
pop
add
push
mov
jmp
mov
push
negb
pop
jmp
xor
add
jmp
add
jmp
mov
push
jmp
mov
add
jmp
mov
pushl
pop
jmp
add
add
sub
pop
xchg
pop
push
mov
add
pop
add
xor
xor
xor
pop
mov
jmp
mov
jmp
add
pop
mov
mov
jmp
mov
mov
sub
pop
pop
add
pop
add
jmp
pushl
addl
mov
add
jmp
pop
pop
push
jmp
pushw
mov
pushw
jmp
mov
jmp
or
dec
jmp
dec
or
sub
add
pop
push
mov
add
jmp
push
mov
push
mov
jmp
mov
xor
jmp
sub
mov
push
mov
add
add
jmp
and
pop
xor
add
add
jmp
popl
jmp
mov
pop
push
mov
jmp
push
mov
jmp
mov
shr
neg
sub
sub
sub
pop
jmp
push
pop
add
add
xchg
pop
and
mov
add
jmp
shl
jmp
mov
push
mov
add
jmp
pushl
pushl
pop
add
push
mov
add
add
xchg
pop
push
push
pop
add
add
xchg
pop
sub
mov
push
jmp
pop
popl
jmp
mov
mov
push
mov
xor
pop
push
jmp
not
jmp
popw
jmp
pushl
pop
jmp
add
pop
neg
jmp
mov
xchg
not
jmp
pop
mov
jmp
mov
pushl
pop
popl
mov
shr
xor
push
jmp
mov
and
push
mov
mov
push
push
jmp
xor
sub
xor
jmp
add
pop
add
mov
add
xchg
pop
jmp
mov
jmp
popl
mov
jmp
pop
jmp
mov
add
mov
add
pushl
pop
add
sub
jmp
push
jmp
pop
pushl
pop
jmp
pop
add
push
jmp
sub
mov
addl
pop
push
push
pop
xor
sub
sub
jmp
push
mov
shl
and
shr
sub
sub
jmp
xchg
mov
jmp
mov
mov
sub
jmp
mov
shl
add
jmp
sub
sub
pop
xchg
mov
mov
jmp
std
mov
jmp
dec
add
sub
add
mov
add
pop
xchg
jmp
mov
add
jmp
pop
shr
shr
jmp
add
xchg
pop
or
je
push
jmp
pop
pop
jmp
neg
shr
dec
jmp
add
jmp
add
neg
jmp
mov
jmp
add
mov
jmp
mov
jmp
mov
jmp
pop
push
mov
add
jmp
add
jmp
pop
mov
sub
add
add
mov
jmp
push
pop
add
jmp
negl
pushf
jmp
add
pop
push
mov
add
pop
xor
xor
jmp
xor
pop
jmp
xchg
pop
push
push
jmp
mov
jmp
shl
push
mov
shl
not
or
inc
dec
push
jmp
add
jmp
add
add
push
mov
not
not
shl
not
xor
sub
jmp
mov
push
jmp
pop
mul
movzbw
push
mov
push
mov
jmp
shr
jmp
add
pop
jmp
mov
pushl
pop
push
jmp
pop
push
mov
mov
jmp
mov
add
pushl
pop
push
mov
add
add
xor
xor
jmp
add
push
mov
jmp
shr
add
sub
sub
jmp
pop
add
add
sub
add
add
sub
mov
mov
sub
add
sub
jmp
mov
jmp
pop
mov
xor
pop
add
pop
push
mov
jmp
lods
push
jmp
push
sub
mov
mov
jmp
add
add
jmp
shr
add
add
sub
sub
pop
jmp
mov
push
pop
jmp
push
mov
mov
or
jmp
mov
shl
shl
jmp
sub
mov
mov
mov
xor
mov
jmp
add
xor
mov
add
neg
xor
mov
jmp
xor
add
pop
jmp
xchg
pop
xor
pushf
jmp
and
or
shr
add
push
negb
pop
add
jmp
sub
mov
jmp
push
push
jmp
push
mov
mov
sub
pop
pop
pushw
jmp
add
push
mov
jmp
pushl
popf
pop
rcrb
pushf
jmp
mov
jmp
pop
pop
push
jmp
add
xchg
pop
jmp
mov
add
mov
add
add
jmp
mov
mov
jmp
mov
mov
add
jmp
pop
jmp
mov
sub
jmp
push
jmp
push
push
jmp
pop
push
mov
jmp
movl
jmp
push
addl
jmp
mov
jmp
push
xorl
pop
xor
pushl
jmp
push
mov
push
jmp
mov
mov
xor
pop
add
jmp
add
add
sub
pop
xchg
jmp
push
pop
add
jmp
test
pushf
jmp
add
add
pop
jmp
push
push
mov
jmp
mov
jmp
push
push
mov
sub
mov
push
mov
mov
push
mov
add
mov
pop
xor
mov
add
xor
add
not
jmp
pop
add
pop
jmp
xchg
pop
xchg
pop
jmp
sub
push
mov
xor
add
add
sub
jmp
pop
jmp
pop
sub
jmp
xchg
pop
push
mov
sub
jmp
pop
jmp
mov
shl
add
push
mov
or
pop
add
push
incl
pop
add
jmp
mov
push
mov
sub
mov
addl
jmp
add
and
jmp
mov
add
pop
push
push
push
push
mov
jmp
push
mov
jmp
mov
push
mov
sub
mov
addl
pushl
mov
add
add
push
mov
jmp
add
jmp
mov
mov
sub
add
add
jmp
push
mov
add
push
sub
mov
push
jmp
add
add
xchg
pop
add
pushl
pushl
pop
push
push
pop
push
mov
sub
mov
mov
shl
jmp
xor
pushl
mov
add
jmp
sub
mov
jmp
xchg
mov
jmp
pop
mov
add
jmp
add
pop
xor
xor
xor
not
jmp
pop
jmp
pushl
pop
push
mov
jmp
pop
push
push
jmp
jmp
sub
mov
jmp
add
xchg
pop
div
pushw
mov
push
pushf
jmp
popl
mov
push
jmp
pop
sub
add
add
sub
mov
push
mov
add
jmp
add
add
add
sub
pop
jmp
push
mov
jmp
sub
mov
jmp
push
mov
pushl
pop
popl
jmp
shl
sub
jmp
xchg
mov
pushl
pop
push
push
pop
push
mov
mov
xchg
neg
xchg
push
mov
inc
and
jmp
push
pop
sub
jmp
sub
add
pop
mov
push
mov
add
jmp
push
jmp
mov
shr
or
xor
shr
sub
add
pop
sub
jmp
dec
add
sub
pop
jmp
mov
mov
jmp
mov
pop
not
inc
not
sub
xor
sub
mov
jmp
push
mov
neg
jmp
push
mov
push
mov
add
jmp
mov
jmp
popl
jmp
pop
push
jmp
sub
add
push
mov
shr
add
or
xor
and
sub
add
pop
jmp
add
jmp
pop
shr
jmp
pushl
pop
sub
jmp
push
mov
inc
push
mov
add
pop
mov
pop
push
mov
shr
jmp
xor
mov
push
mov
add
jmp
sub
push
mov
and
pop
push
jmp
pop
jmp
xor
xor
xor
push
mov
notl
pop
xchg
pushl
mov
jmp
pop
add
add
pop
add
jmp
lods
xor
push
mov
mov
jmp
mov
jmp
add
shl
xor
mov
mov
add
xor
jmp
and
shl
sub
mov
jmp
sub
sub
push
mov
jmp
lods
push
mov
shl
xor
add
add
sub
jmp
and
add
add
jmp
add
jmp
xor
xor
xor
pop
shr
sub
mov
pop
shl
push
mov
add
pop
add
pop
add
xchg
pop
add
incl
pushf
jmp
sub
pop
pushw
addb
sub
jmp
mov
jmp
push
push
mov
mov
pop
push
mov
mov
pop
jmp
add
add
xchg
jmp
xor
sub
mov
jmp
sub
push
jmp
push
push
jmp
push
notb
mov
add
jmp
mov
push
mov
push
mov
push
mov
add
mov
add
pushl
jmp
push
push
mov
mov
sub
pop
sub
add
jmp
mov
push
mov
neg
add
add
pop
push
mov
add
pop
jmp
pop
sub
xor
xor
jmp
pop
add
sub
pop
jmp
popl
pop
popl
push
mov
notl
jmp
mov
push
jmp
push
jmp
push
mov
jmp
mov
add
pop
add
jmp
pop
sub
sub
mov
add
inc
jmp
shl
add
push
decl
pop
jmp
and
dec
xor
add
jmp
pushl
popf
pop
adc
pushf
jmp
add
sub
jmp
add
sub
push
jmp
mov
mov
shl
push
jmp
push
mov
mov
push
push
mov
mov
add
pop
jmp
push
mov
inc
jmp
mov
shl
shl
xor
push
jmp
push
mov
push
mov
jmp
mov
xor
mov
add
or
sub
jmp
push
push
jmp
pop
xor
not
push
mov
add
pop
add
mov
jmp
or
add
jmp
push
jmp
sub
xchg
pop
jmp
pop
popl
pop
movswl
push
push
mov
jmp
xor
or
mov
jmp
push
pushl
pop
popl
mov
mov
popl
jmp
sub
pop
push
push
jmp
push
mov
add
jmp
and
and
xor
sub
jmp
add
sub
push
mov
add
sub
xchg
pop
jmp
lods
add
sub
add
add
jmp
push
mov
add
sub
jmp
xor
xor
xor
mov
jmp
sub
mov
mov
sub
add
or
pop
push
mov
add
pop
xor
pop
inc
add
xor
pop
mov
mov
add
shr
shr
inc
jmp
xchg
mov
and
pushf
jmp
pop
add
add
push
jmp
add
pop
push
mov
add
sub
xchg
jmp
push
mov
shl
add
shl
shl
shr
xor
add
pop
push
mov
jmp
add
mov
push
jmp
push
push
sub
mov
push
pop
xor
mov
pop
xor
pushl
pop
add
pushl
mov
add
jmp
xchg
pop
jmp
pop
push
mov
mov
inc
neg
shr
inc
not
jmp
add
add
mov
sub
mov
push
pop
add
add
xchg
pop
xor
xor
jmp
xor
xor
xor
pop
jmp
mov
push
pushf
jmp
xor
pop
push
mov
jmp
pop
xor
add
jmp
push
push
jmp
mov
jmp
pop
sub
pushw
jmp
mov
push
mov
add
dec
xor
sub
add
add
sub
pop
push
mov
mov
and
jmp
mov
add
add
jmp
and
and
shl
sub
mov
push
jmp
mov
sub
mov
add
add
mov
add
add
push
pushl
pop
popl
mov
jmp
add
pop
pop
jmp
pop
mov
jmp
pop
push
mov
add
add
xchg
pop
sub
mov
mov
sub
mov
jmp
addl
jmp
pop
mov
mov
not
push
mov
add
mov
push
mov
add
push
jmp
add
and
mov
add
jmp
pop
jmp
add
jmp
div
push
mov
push
pushf
jmp
neg
sub
jmp
xor
pop
sub
jmp
xchg
mov
rorw
pushf
jmp
mov
add
jmp
lods
xor
push
mov
jmp
add
xchg
pop
add
push
mov
shr
or
xor
jmp
add
add
pushf
jmp
pop
xchg
pop
sarb
pushf
jmp
mov
push
mov
jmp
mov
mov
push
jmp
add
mov
mov
jmp
or
shl
jmp
shr
jmp
mov
mov
sub
sub
add
pop
sub
add
push
mov
push
mov
sub
mov
pop
jmp
sub
add
pop
jmp
add
xchg
jmp
push
pop
add
push
mov
push
mov
jmp
mov
add
add
add
sub
jmp
push
jmp
mov
push
mov
jmp
sub
pop
jmp
push
mov
and
mov
add
xor
jmp
xor
pushl
jmp
not
sub
jmp
mov
jmp
push
mov
add
jmp
add
inc
and
neg
push
mov
add
jmp
mov
addl
pushl
pop
add
jmp
mov
add
push
pushl
pop
add
jmp
push
mov
push
jmp
add
mov
add
push
jmp
mov
sub
pop
jmp
popl
jmp
xchg
not
xchg
push
jmp
pop
add
add
xchg
pop
add
mov
push
jmp
mov
add
jmp
add
jmp
push
jmp
xor
and
mov
add
shr
push
mov
push
push
jmp
shr
and
sub
shr
push
jmp
add
add
xor
xor
xor
jmp
pushl
mov
push
mov
add
jmp
shr
xor
jmp
add
add
push
push
pop
sub
add
sub
sub
add
pop
push
mov
add
sub
jmp
pop
jmp
inc
xor
add
pop
jmp
xchg
pop
push
mov
push
pop
push
mov
or
pop
shr
push
mov
push
mov
shl
not
inc
or
xor
add
pop
add
jmp
mov
mov
pushl
mov
add
add
and
pushl
pop
add
shr
push
mov
push
mov
jmp
pop
push
mov
neg
xor
jmp
not
xchg
neg
xor
xor
sub
jmp
lods
jmp
pop
jmp
mov
add
sub
push
pushl
pop
jmp
push
mov
push
pushf
jmp
popl
pop
pushl
pop
jmp
push
mov
sub
sub
pop
pop
xchg
pop
jmp
xor
xor
pop
mov
jmp
add
add
xchg
pop
add
pushf
jmp
push
mov
add
push
mov
sub
pop
xor
xor
jmp
pop
sub
mov
mov
add
jmp
xor
add
mov
add
add
xchg
pop
jmp
xor
pop
mov
push
mov
mov
add
jmp
add
add
xor
xor
xor
mov
test
pushf
jmp
push
jmp
pop
add
or
jne
push
mov
jmp
shr
xor
mov
pop
add
pop
push
mov
add
mov
jmp
dec
jmp
push
mov
jmp
sub
pop
push
mov
mov
mov
jmp
add
pushl
pop
add
mov
jmp
and
jmp
pop
jmp
and
shl
push
mov
xor
pop
jmp
mov
mov
mov
add
add
push
mov
jmp
mov
add
pop
push
sub
mov
pop
sub
mov
pop
pop
pop
and
pop
push
mov
and
shr
push
mov
sub
jmp
pushl
jmp
add
xchg
mov
jmp
add
xchg
pop
jmp
mov
push
mov
push
mov
shr
sub
xor
shr
xor
and
jmp
xor
xor
push
mov
push
push
pop
neg
add
push
mov
sub
pop
mov
pop
and
mov
push
mov
jmp
or
je
sub
mov
mov
push
mov
add
push
mov
sub
pop
push
jmp
or
shr
add
push
pop
pop
xor
sub
add
add
jmp
jmp
pop
jmp
add
add
jmp
push
jmp
xor
xor
jmp
sub
jmp
add
or
mov
add
jmp
push
popl
addl
pushl
pop
jmp
lods
xor
push
push
mov
add
shl
add
sub
jmp
xor
pop
cmp
pushf
jmp
mov
add
sub
sub
mov
jmp
push
mov
jmp
not
jmp
xor
jmp
and
dec
jmp
sub
sub
pushl
pop
add
jmp
add
mov
jmp
push
sub
jmp
sub
jmp
pushl
pop
push
push
mov
addl
pop
jmp
sub
pushl
pop
add
xor
jmp
xchg
pop
xor
sub
mov
jmp
mov
mov
jmp
mov
shr
jmp
neg
push
mov
and
pop
jmp
mov
add
push
mov
sub
pop
push
pushl
pop
popl
jmp
mov
jmp
mov
shl
sub
shr
jmp
mov
sub
sub
add
jmp
sub
mov
push
mov
add
pop
pop
push
mov
mov
sub
sub
jmp
xor
mov
pop
dec
push
mov
jmp
mov
mov
jmp
add
sub
pop
add
xor
xor
xor
jmp
addl
pushl
pop
add
add
push
jmp
add
jmp
sub
jmp
sub
xchg
pop
jmp
pushl
jmp
mov
btr
pushf
jmp
notl
jmp
and
pop
and
push
jmp
lods
sub
add
jmp
sub
mov
add
xchg
mov
mov
jmp
popl
jmp
pushl
popf
pop
sbb
pushf
jmp
pop
jmp
pop
shr
sub
jmp
mov
push
sub
mov
addl
pop
push
mov
mov
add
jmp
add
jmp
xor
jmp
add
jmp
neg
not
add
mov
jmp
sub
sub
pop
and
shl
jmp
pop
popl
mov
jmp
pop
xor
xor
xor
pop
bswap
jmp
subl
subl
add
jmp
mov
jmp
push
mov
shr
or
neg
xor
xor
pop
jmp
pop
push
jmp
mov
push
mov
pop
mov
add
not
xor
xor
xor
push
jmp
mov
sub
jmp
mov
add
add
push
push
mov
jmp
mov
add
pop
jmp
pop
shr
sub
mov
pop
add
add
sub
mov
add
jmp
add
add
jmp
add
add
jmp
add
pop
xor
jmp
add
jmp
and
pop
or
je
pushl
mov
sub
mov
push
mov
jmp
pop
add
push
push
mov
sub
jmp
pushl
pushl
jmp
push
mov
mov
mov
add
pop
mov
pop
jmp
push
mov
add
add
jmp
mov
add
pop
push
push
mov
jmp
push
mov
xor
pop
jmp
push
push
popl
sub
jmp
pushl
popf
pop
sbb
pushf
jmp
popl
jmp
add
add
push
jmp
mov
push
mov
add
pop
jmp
mov
sub
mov
jmp
add
jmp
pop
inc
shl
jmp
pop
push
mov
xor
pop
jmp
mov
add
add
push
pushl
mov
add
popl
jmp
jmp
pop
push
jmp
pop
sub
jmp
pop
or
mov
jmp
pop
sub
pop
push
mov
jmp
add
push
mov
jmp
and
pop
jmp
pop
mov
pop
sub
jmp
mov
pop
add
mov
push
mov
add
add
jmp
mov
push
jmp
neg
xor
mov
jmp
mov
sub
mov
add
xor
pop
inc
sub
mov
mov
xor
pop
sub
add
add
pushl
jmp
push
push
mov
addl
jmp
pop
add
add
add
add
sub
sub
sub
pushl
pop
push
mov
jmp
pop
jmp
sub
add
pop
xchg
pop
jmp
mov
jmp
mov
xor
jmp
push
mov
sub
xor
jmp
push
mov
add
pop
jmp
push
jmp
mov
jmp
xor
xor
xor
xor
xor
xor
xor
push
jmp
sub
push
mov
sub
pushl
jmp
mov
push
mov
mov
push
push
pop
jmp
add
mov
jmp
or
add
xor
jmp
push
mov
jmp
add
sub
add
add
pop
jmp
push
mov
inc
xor
mov
mov
push
jmp
pushl
jmp
pop
push
mov
jmp
mov
jmp
pushl
pop
add
pushl
jmp
push
mov
xor
and
or
xor
sub
pop
xor
add
mov
push
jmp
mov
push
mov
mov
jmp
pop
push
mov
add
jmp
lods
cmpl
je
sub
mov
push
push
jmp
add
jmp
push
pushl
jmp
sub
mov
mov
push
push
mov
jmp
pop
xor
add
push
jmp
add
xor
jmp
mov
jmp
add
add
pop
add
add
sub
mov
add
sub
mov
mov
jmp
mov
and
sub
shl
push
mov
sub
pop
jmp
add
xor
xor
jmp
not
xchg
not
inc
inc
and
jmp
pop
mov
mov
sub
pop
xchg
mov
mov
jmp
inc
jmp
sub
jmp
lods
add
push
jmp
shr
push
jmp
sub
push
popl
jmp
push
pushl
jmp
dec
dec
and
inc
add
push
jmp
sub
pop
push
mov
sub
jmp
push
mov
push
mov
add
pop
push
mov
jmp
mov
sub
pop
add
addl
jmp
inc
or
sub
xor
jmp
mov
pop
inc
dec
push
mov
jmp
pushl
pushl
pop
add
jmp
popw
jmp
push
mov
add
pop
jmp
add
add
add
mov
add
sub
mov
pushl
mov
add
popl
mov
jmp
push
mov
pushl
pushl
pop
add
jmp
push
jmp
movzbl
pushl
mov
push
push
pop
sub
mov
mov
jmp
lods
sub
jmp
push
mov
mov
add
push
mov
jmp
mov
add
add
xchg
pop
sub
add
jmp
mov
pop
pop
jmp
mov
push
push
pop
push
mov
mov
add
jmp
sub
mov
mov
add
sub
jmp
mov
jmp
xor
add
pop
sub
sub
sub
push
mov
xor
not
add
shr
sub
add
pop
add
sub
movzbl
lea
sub
mov
mov
push
mov
or
push
mov
xor
push
mov
jmp
sub
add
mov
jmp
pop
pushl
pop
push
mov
add
push
mov
jmp
add
push
push
mov
neg
jmp
pop
add
jmp
or
jmp
xor
mov
push
jmp
xor
pop
sub
add
add
jmp
push
pop
jmp
push
push
mov
xor
shr
sub
jmp
sub
add
add
pop
xchg
pop
xchg
pop
push
mov
push
push
mov
sub
or
xor
inc
add
jmp
push
mov
jmp
mov
mov
jmp
xorl
pop
xor
mov
add
or
pop
add
add
mov
add
jmp
jmp
add
sub
sub
pop
sub
add
mov
push
mov
jmp
mov
add
pushl
jmp
push
popl
push
mov
add
pop
pop
jmp
pop
shrl
pushf
jmp
sub
pop
push
mov
jmp
lods
add
sub
mov
jmp
xchg
pop
mov
mov
push
mov
jmp
pop
jmp
shr
jmp
xor
mov
mov
mov
add
add
xchg
mov
push
mov
add
sub
mov
mov
sub
mov
push
mov
push
jmp
xchg
mov
add
xor
xor
xor
push
push
jmp
sub
mov
pushl
pop
popl
pop
imul
pushw
mov
push
pushf
jmp
sub
jmp
add
add
sub
pop
jmp
mov
jmp
add
push
mov
mov
and
neg
push
mov
shl
sub
jmp
mov
add
add
and
pushl
pop
add
push
jmp
or
jne
push
push
mov
push
mov
jmp
and
mov
add
shr
xor
push
push
jmp
add
pop
xchg
jmp
sub
neg
jmp
inc
shr
jmp
mov
push
mov
jmp
mov
jmp
mov
shr
push
mov
jmp
mov
push
jmp
shl
inc
shl
add
jmp
add
add
push
mov
pushl
pop
popl
pop
jmp
add
pop
jmp
push
mov
and
or
sub
add
jmp
pushl
jmp
pop
push
push
mov
push
mov
jmp
push
push
mov
addl
mov
add
push
mov
sub
sub
mov
mov
and
dec
xor
xor
jmp
inc
add
jmp
shr
jmp
mov
pop
sub
xor
jmp
add
xor
xor
xor
pop
imul
push
mov
add
push
jmp
mov
mov
pop
jmp
add
add
xchg
pop
push
mov
dec
xor
add
pop
jmp
pushl
pushl
pop
push
mov
add
jmp
add
sub
sub
pop
neg
add
add
mov
add
jmp
neg
not
jmp
mov
add
sub
and
jmp
mov
add
pop
xor
add
mov
add
add
push
pushl
pop
popl
pop
shrb
pushf
jmp
xor
and
jmp
and
jmp
push
jmp
or
shl
add
xor
jmp
sub
xchg
jmp
addl
jmp
sub
mov
add
and
pushl
pop
push
push
pop
add
jmp
add
jmp
pushl
pushl
jmp
mov
pushl
jmp
mov
and
pop
push
mov
jmp
mov
push
mov
add
pop
jmp
jmp
push
mov
push
push
pop
and
pop
add
push
jmp
push
mov
mov
jmp
add
pop
jmp
mov
push
jmp
mov
push
jmp
add
sub
mov
push
jmp
mov
mov
push
mov
and
and
xor
add
push
jmp
mov
mov
pop
add
jmp
pushl
mov
add
jmp
pop
decl
pushf
jmp
push
mov
add
jmp
mov
mov
add
push
mov
shl
shl
jmp
push
mov
add
pop
mov
jmp
sub
add
jmp
xor
jmp
pop
xchg
push
push
jmp
mov
jmp
shl
and
sub
jmp
sub
pop
sub
push
mov
inc
add
shr
add
sub
jmp
add
jmp
sub
jmp
push
push
mov
jmp
add
add
xor
xor
jmp
mov
shr
or
jmp
or
je
push
jmp
push
jmp
mov
add
add
push
pushl
pop
popl
pop
or
shl
push
mov
push
mov
mov
inc
shr
not
dec
sub
add
or
mov
jmp
pop
add
jmp
pushl
pushl
pop
add
push
jmp
mov
push
mov
add
jmp
add
pushl
pop
add
popl
jmp
mov
add
pop
add
jmp
sub
or
mov
push
jmp
sub
add
pop
push
jmp
pop
xor
pop
jmp
sub
sub
and
pushl
pop
add
shr
jmp
add
dec
and
jmp
xchg
pop
add
xor
xor
xor
pop
bts
pushf
jmp
mov
push
mov
push
jmp
add
push
jmp
pop
mov
mov
add
jmp
add
push
jmp
sub
xchg
mov
mov
popl
mov
add
sub
mov
push
pop
jmp
push
jmp
lods
xor
push
jmp
mov
jmp
push
mov
dec
jmp
and
jmp
add
pop
jmp
mov
jmp
dec
inc
sub
jmp
shr
jmp
mov
add
jmp
push
push
mov
and
xor
push
mov
sub
jmp
pop
jmp
push
mov
jmp
push
push
jmp
add
pop
inc
inc
add
xor
xor
sub
pop
mov
pop
xor
push
jmp
shl
sub
mov
push
pop
push
mov
push
mov
xor
jmp
mov
and
inc
neg
xor
xor
xor
inc
xchg
jmp
push
mov
mov
pop
mov
jmp
mov
pop
sub
add
add
pop
jmp
push
jmp
mov
add
jmp
pop
push
push
mov
jmp
mov
push
mov
add
pop
add
add
sub
push
jmp
xchg
pop
push
push
sub
mov
mov
shl
inc
or
neg
sub
add
jmp
mov
mov
pop
mov
jmp
xor
jmp
pop
sub
add
add
pop
add
xchg
pop
and
pushf
jmp
pop
jmp
push
mov
jmp
mov
push
mov
sub
mov
mov
or
jmp
push
pushl
mov
add
jmp
add
xor
xor
xor
pop
push
push
push
jmp
xor
add
jmp
push
mov
add
add
jmp
sub
pushl
mov
add
push
mov
add
add
jmp
add
mov
jmp
xchg
push
xor
xor
xor
jmp
push
pushl
pop
popl
mov
mov
push
jmp
sub
xor
pop
mov
pop
and
pop
jmp
sub
pop
pop
add
xchg
mov
test
pushf
jmp
mov
push
mov
or
jmp
pop
add
push
push
mov
push
mov
xor
jmp
pop
add
push
jmp
push
mov
add
pop
add
sub
pop
add
jmp
mov
jmp
xchg
pop
jmp
push
jmp
lods
add
add
push
jmp
xor
jmp
add
add
push
push
pop
jmp
push
push
mov
mov
pop
and
or
xor
mov
jmp
pushl
mov
add
popl
jmp
pop
jmp
add
mov
jmp
push
mov
or
jmp
xor
or
jmp
add
sub
mov
pushl
pop
popl
pop
mov
movzbw
push
pushf
jmp
mov
neg
xor
push
mov
jmp
mov
jmp
add
pop
jmp
xor
push
jmp
xor
xor
xor
mov
jmp
sub
xor
add
mov
add
push
mov
sub
pop
sub
push
mov
push
jmp
mov
sub
or
add
push
mov
jmp
xor
mov
add
jmp
add
xor
push
jmp
mov
add
push
push
pop
jmp
push
mov
push
mov
jmp
pop
add
push
jmp
mov
mov
push
mov
add
jmp
xor
xor
xor
mov
push
jmp
add
xchg
jmp
sub
add
jmp
sub
add
pop
xor
jmp
jmp
inc
add
mov
pop
jmp
popl
addl
jmp
sub
jmp
pop
jmp
sub
jmp
mov
mov
sub
sub
add
pop
sub
mov
push
mov
mov
pop
push
mov
mov
not
inc
add
jmp
sub
xchg
pop
mov
push
jmp
add
pop
jmp
pop
shr
jmp
pop
sub
push
push
mov
mov
sub
pop
push
mov
jmp
mov
add
pushl
jmp
sub
xchg
jmp
push
mov
add
and
shl
sub
sub
push
push
pop
jmp
sub
push
mov
add
push
mov
sub
jmp
sub
mov
add
jmp
push
push
mov
push
push
mov
shr
jmp
add
push
jmp
mov
dec
jmp
add
push
mov
mov
add
mov
add
sub
add
push
jmp
push
jmp
sub
xchg
pop
sub
mov
mov
and
pop
sub
dec
push
mov
xor
add
pop
push
mov
add
shl
jmp
shl
push
mov
sub
pop
jmp
pop
xchg
mov
jmp
mov
push
mov
jmp
add
jmp
push
mov
add
jmp
xchg
pop
mov
jmp
mov
add
push
mov
mov
push
mov
add
pop
push
jmp
add
xor
mov
pop
mov
sub
jmp
mov
jmp
pushl
pop
push
mov
mov
jmp
pop
add
add
xor
xor
xor
pop
xor
jmp
push
popl
addl
jmp
add
sub
add
add
pop
add
xchg
jmp
dec
shl
shl
jmp
sub
pop
xchg
pop
mov
jmp
pop
push
mov
jmp
dec
shl
push
mov
or
pop
add
sub
pop
sub
add
pop
jmp
mov
shr
jmp
push
mov
shr
inc
or
xor
sub
pop
add
jmp
pop
add
xor
xor
xor
jmp
mov
neg
sub
add
sub
add
pop
sub
pop
push
mov
jmp
mov
jmp
push
jmp
add
add
xchg
pop
pop
mov
mov
push
mov
add
push
mov
jmp
shr
or
jmp
add
xor
xor
jmp
push
mov
xor
pop
push
jmp
mov
add
add
xchg
pop
push
mov
jmp
add
sub
pop
jmp
mov
jmp
push
jmp
mov
addl
jmp
sub
xchg
pop
mov
mov
xor
mov
add
jmp
push
jmp
xor
mov
jmp
mov
sub
mov
jmp
push
jmp
add
popl
pop
mov
push
pushf
jmp
add
jmp
sub
pop
push
mov
add
pop
push
jmp
xor
jmp
push
mov
jmp
mov
push
mov
sub
push
popl
push
jmp
add
pop
xor
xor
xor
mov
idiv
sub
mov
mov
add
push
jmp
pop
push
mov
add
jmp
and
add
sub
jmp
mov
jmp
pushl
jmp
shll
jmp
pop
push
sub
mov
mov
mov
mov
add
jmp
pop
mov
add
jmp
sub
push
mov
shl
shr
add
jmp
push
mov
dec
neg
jmp
add
jmp
shl
dec
jmp
sub
mov
jmp
pop
shl
shr
sub
and
add
mov
pop
sub
jmp
sub
jmp
push
jmp
or
jmp
pop
jmp
pop
jmp
mov
push
mov
sub
mov
jmp
xor
pop
xor
add
pop
push
jmp
pop
and
pushl
mov
push
mov
add
add
xchg
pop
add
shr
sub
mov
jmp
mov
push
mov
add
add
xchg
pop
push
mov
add
jmp
jmp
mov
jmp
push
push
mov
jmp
add
jmp
not
sub
xor
pop
mov
pop
xor
pushl
jmp
mov
sub
mov
pop
push
jmp
xor
jmp
xor
xor
add
add
jmp
shr
push
notl
mov
add
push
jmp
mov
jmp
mov
push
sub
mov
addl
jmp
add
mov
mov
push
mov
jmp
pop
shlw
pushf
jmp
add
add
push
jmp
mov
add
jmp
and
inc
xor
push
pop
pop
sub
pop
not
jmp
mov
jmp
shl
push
mov
mov
push
mov
jmp
neg
push
mov
push
jmp
add
sub
mov
pushl
pop
popl
pop
jmp
shrl
shrl
jmp
mov
add
sub
mov
push
jmp
pop
mov
jmp
xchg
jmp
mov
jmp
mov
push
push
jmp
mov
push
mov
push
jmp
lods
sub
sub
push
push
mov
add
sub
xor
xor
xor
pop
mov
jmp
sub
mov
pushl
jmp
pop
jmp
jmp
pushl
mov
push
mov
add
push
mov
mov
jmp
mov
pop
jmp
pop
push
mov
mov
sub
pop
xchg
pop
mov
push
mov
push
push
jmp
mov
xor
add
sub
add
push
mov
or
xor
jmp
add
jmp
shl
inc
or
jmp
xor
mov
imul
movzbw
sub
mov
mov
add
sub
push
pushl
pushl
jmp
push
pushl
pop
popl
pop
jmp
mov
push
pop
push
jmp
push
mov
jmp
mov
mov
sub
sub
add
add
add
jmp
pop
push
mov
jmp
push
popl
addl
popl
jmp
mov
or
mov
jmp
xor
jmp
sub
sub
sub
add
jmp
lods
push
mov
jmp
mov
pop
mov
add
add
pop
push
mov
jmp
and
xor
push
mov
mov
pop
pop
neg
and
xor
and
mov
add
jmp
pushw
addb
sub
jmp
mov
jmp
pushl
push
mov
addl
sub
sub
mov
mov
sub
pop
jmp
pushl
pushl
mov
jmp
add
mov
add
jmp
shl
sub
jmp
push
pushf
jmp
push
push
pop
jmp
xor
xor
mov
pop
add
jmp
pop
popl
mov
sub
pushf
jmp
add
add
pop
push
jmp
shr
push
push
push
mov
add
jmp
mov
mov
xor
jmp
sub
mov
addl
pop
add
jmp
xor
jmp
add
not
not
jmp
lods
xor
push
mov
dec
push
jmp
pushl
pop
sub
mov
mov
push
jmp
sub
shr
neg
jmp
add
add
jmp
add
add
xchg
mov
sub
mov
push
mov
push
jmp
push
popl
addl
pop
jmp
push
pushl
pop
popl
mov
mov
push
mov
or
jmp
add
jmp
pop
sub
add
push
mov
sub
pop
add
jmp
add
sub
jmp
sub
mov
add
xchg
mov
sub
jmp
and
pushl
jmp
mov
push
mov
shl
not
xor
jmp
cmp
pushf
jmp
popl
mov
mov
jmp
pushl
pop
popl
jmp
add
pop
add
add
pop
pop
jmp
pushl
pop
push
mov
add
add
jmp
jmp
xchg
mov
pushl
jmp
mov
jmp
sub
neg
push
mov
sub
jmp
xchg
push
push
mov
add
pop
not
jmp
pop
add
pop
pop
add
jmp
add
sub
jmp
mov
sub
jmp
mov
push
mov
mov
add
jmp
mov
not
neg
jmp
mov
jmp
pop
push
mov
xor
pop
jmp
mov
jmp
mov
inc
xor
add
sub
mov
add
jmp
sub
push
mov
jmp
push
jmp
push
jmp
mov
add
pop
jmp
mov
or
inc
or
neg
push
mov
add
sub
pop
jmp
mov
shll
pushf
jmp
mov
mov
push
mov
push
push
jmp
addl
sub
subl
jmp
sub
pop
xor
movzbl
jmp
pushw
jmp
mov
add
mov
push
mov
add
add
xchg
pop
push
jmp
mov
add
jmp
mov
shl
or
sub
add
pop
push
mov
mov
shl
push
mov
sub
sub
pop
xor
sub
dec
xor
push
mov
and
jmp
mov
mov
shr
jmp
mov
add
add
push
mov
jmp
mov
mov
and
pop
dec
add
shl
sub
mov
jmp
push
mov
mov
jmp
pop
mov
jmp
mov
mov
and
pushl
mov
jmp
mov
add
push
mov
add
pop
xchg
pop
add
sub
mov
mov
sub
mov
add
push
jmp
sub
mov
jmp
shr
jmp
xor
pop
and
pop
jmp
xchg
push
mov
add
jmp
neg
push
mov
push
mov
xor
jmp
xor
pop
jmp
shl
sub
mov
mov
jmp
xor
jmp
pop
add
sub
pop
sub
push
mov
add
jmp
push
mov
jmp
inc
jmp
sub
add
pop
sub
sub
pushl
pop
add
and
mov
push
mov
jmp
add
pop
jmp
push
mov
jmp
pushl
pushl
pushl
pop
push
jmp
push
jmp
add
push
mov
xor
pop
add
jmp
push
mov
xor
sub
add
jmp
mov
push
jmp
push
jmp
xor
jmp
notl
jmp
pop
xchg
mov
xor
pushf
jmp
sub
pop
inc
sub
xor
push
mov
mov
jmp
pop
or
mov
jmp
popl
jmp
push
mov
and
pop
jmp
push
mov
add
jmp
mov
add
xchg
mov
mov
jmp
push
mov
push
push
push
pop
push
mov
jmp
xor
add
pop
push
mov
sub
jmp
mov
jmp
pop
pushl
pop
add
push
push
jmp
push
pop
add
sub
xchg
jmp
mov
add
or
pop
sub
sub
mov
add
jmp
mov
jmp
push
jmp
mov
push
mov
push
pushl
pop
add
add
push
jmp
push
pop
push
mov
inc
and
neg
xor
add
pop
push
push
push
pop
mov
pop
add
pop
xchg
jmp
push
notb
jmp
push
push
mov
mov
pop
mov
sub
pushl
pop
jmp
pushl
pop
push
jmp
pop
push
mov
sub
xchg
pop
sub
xchg
inc
xchg
xor
add
sub
pop
sub
add
pop
sub
mov
pushl
jmp
add
xor
pop
push
mov
jmp
dec
inc
dec
add
add
pop
jmp
sub
jmp
pushl
jmp
mov
sub
mov
push
pushl
pop
add
push
mov
sub
mov
jmp
mov
and
sub
mov
push
jmp
xor
xor
jmp
push
jmp
mov
add
jmp
shr
jmp
pop
jmp
sub
add
jmp
mov
mov
mov
add
jmp
xchg
jmp
push
mov
mov
jmp
mov
jmp
pop
jmp
add
xchg
pop
push
push
pop
jmp
pushl
mov
add
sub
mov
push
jmp
push
push
mov
mov
mov
add
push
mov
jmp
or
jmp
sub
sub
mov
push
mov
push
mov
mov
pop
pop
push
mov
sub
or
or
shl
jmp
add
push
pushl
pop
popl
pop
mov
push
mov
push
pop
add
push
mov
push
mov
mov
mov
add
sub
not
xor
add
jmp
mov
push
mov
add
pop
sub
xchg
jmp
pop
or
je
push
mov
push
jmp
mov
push
push
jmp
notl
pop
xchg
jmp
push
mov
push
mov
add
pop
sub
xchg
pop
jmp
xorl
jmp
sub
pop
popl
push
jmp
sub
jmp
pop
xor
add
xor
pop
sub
pop
push
push
mov
not
and
dec
jmp
xor
jmp
mov
jmp
and
pop
jmp
sub
sub
add
add
pop
sub
jmp
or
not
or
inc
xor
add
add
jmp
sub
sub
add
pop
add
push
mov
push
pop
shr
sub
mov
push
mov
push
mov
sub
mov
add
mov
mov
add
xor
shr
push
mov
notl
pop
xor
sub
mov
add
sub
jmp
negl
pop
dec
shl
push
mov
push
mov
add
pop
add
add
sub
sub
push
mov
jmp
inc
push
mov
sub
pop
jmp
push
mov
mov
jmp
mov
push
pop
shl
dec
xor
mov
pop
mov
pop
sub
add
push
mov
jmp
and
pop
jmp
sub
dec
not
xor
jmp
not
shl
xor
sub
pop
sub
jmp
sub
mov
jmp
mov
jmp
add
sub
jmp
pop
shl
inc
xor
xor
pop
and
jmp
pop
add
jmp
mov
add
pop
push
pushl
pop
jmp
add
add
xchg
jmp
pushl
jmp
pop
mov
pop
jmp
sub
pop
sub
sub
add
pop
sub
add
add
pop
jmp
mov
add
jmp
pushl
pop
add
add
xchg
pop
incb
pushf
jmp
xor
xor
jmp
add
pushl
pop
jmp
pop
xchg
mov
decb
pushf
jmp
pushl
mov
add
add
jmp
push
mov
or
shr
push
mov
jmp
pop
pop
add
jmp
push
jmp
pop
xor
xor
pop
jmp
pushl
pop
add
add
jmp
mov
add
xchg
pop
sub
mov
push
jmp
notb
mov
add
sub
add
pushl
jmp
pushl
pop
sub
mov
jmp
shl
and
sub
add
pop
jmp
and
mov
jmp
add
push
mov
jmp
popl
mov
mov
push
jmp
mov
add
push
jmp
sub
add
add
sub
add
sub
mov
jmp
mov
push
mov
push
pop
add
push
jmp
sub
shl
jmp
add
sub
pop
jmp
xchg
not
xchg
jmp
push
mov
jmp
mov
jmp
mov
not
push
mov
push
mov
and
jmp
add
add
mov
add
sub
sub
pop
sub
jmp
add
jmp
add
mov
pop
add
inc
push
mov
sub
add
jmp
xchg
pop
shr
xor
sub
mov
push
pushl
jmp
add
add
jmp
lods
add
push
mov
add
mov
push
mov
push
mov
push
mov
add
jmp
mov
add
sub
pop
sub
sub
push
mov
add
mov
add
mov
add
xor
jmp
pop
sub
mov
jmp
add
jmp
mov
sub
pop
push
mov
push
jmp
xor
mov
add
add
add
pop
jmp
pop
jmp
xchg
pop
push
mov
push
mov
add
jmp
mov
xor
pop
add
add
pop
xchg
jmp
push
mov
xor
pop
inc
shr
push
jmp
inc
sub
and
add
xor
pop
add
add
sub
jmp
xchg
mov
rolb
pushf
jmp
pushl
jmp
mov
and
mov
jmp
jmp
pop
dec
xor
push
addl
pop
sub
pushl
mov
jmp
sub
jmp
jmp
pop
push
push
mov
mov
jmp
add
pop
inc
not
sub
xor
push
pop
mov
add
push
xorl
pop
push
sub
jmp
sub
mov
mov
xor
mov
pop
dec
shl
shl
sub
mov
pop
add
pop
sub
mov
jmp
jmp
push
mov
mov
push
mov
jmp
add
push
mov
push
mov
push
push
mov
push
subl
pop
add
pop
mov
pop
push
push
pop
add
jmp
push
mov
add
jmp
mov
mov
push
mov
and
xor
xor
push
mov
jmp
mov
jmp
pop
push
mov
sub
jmp
pop
add
jmp
pop
push
mov
sub
pop
jmp
push
mov
jmp
pushl
jmp
add
pop
add
subl
pop
jmp
mov
shr
xor
jmp
pushl
pop
sub
jmp
add
jmp
pop
jmp
mov
jmp
mov
jmp
mov
mov
sub
pop
push
mov
push
mov
mov
and
pop
shr
neg
push
mov
not
add
or
pop
push
mov
add
sub
jmp
mov
push
pushf
jmp
sub
mov
mov
sub
pop
add
add
pop
add
jmp
push
mov
xor
neg
xor
add
mov
add
jmp
pop
jmp
shr
jmp
add
jmp
add
add
xchg
pop
push
push
mov
mov
add
pop
jmp
sub
pop
jmp
pop
jmp
push
mov
push
mov
add
add
xchg
pop
push
jmp
mov
push
jmp
push
mov
add
sub
xchg
pop
mov
mov
add
jmp
pushl
jmp
mov
dec
jmp
push
push
jmp
and
mov
sub
mov
jmp
add
push
mov
and
and
push
mov
sub
shl
dec
push
jmp
mov
neg
xor
push
mov
jmp
pop
xor
jmp
add
jmp
add
sub
xchg
mov
mov
pop
push
mov
jmp
pop
add
jmp
mov
xor
jmp
mov
jmp
sub
sub
add
add
add
pop
jmp
push
mov
mov
pop
push
jmp
shr
jmp
push
mov
push
mov
add
add
xchg
pop
pop
xor
xor
xor
jmp
and
xor
jmp
push
jmp
pushl
mov
push
mov
mov
jmp
pushl
pop
add
push
mov
inc
add
jmp
mov
push
mov
add
jmp
mov
add
jmp
xor
pop
push
mov
add
pop
xchg
mov
push
mov
jmp
pushl
popf
pop
rcrl
pushf
jmp
mov
sarw
pushf
jmp
xor
push
addl
jmp
pushl
pop
push
mov
push
jmp
pop
pushl
mov
add
push
jmp
push
push
mov
mov
push
mov
add
pop
sub
jmp
sub
mov
jmp
pop
jmp
sub
xor
pop
add
mov
jmp
pop
mov
jmp
mov
xor
pop
shl
add
inc
jmp
add
pop
add
mov
pushl
pop
add
xor
pop
xor
movzbl
pushl
jmp
push
jmp
mov
inc
push
mov
not
jmp
xor
sub
mov
addl
pushl
mov
add
add
sub
pop
add
pushl
jmp
add
xchg
mov
push
mov
push
push
pop
dec
sub
add
pop
jmp
mov
push
push
mov
add
push
mov
mov
shr
dec
not
jmp
push
jmp
push
mov
add
add
jmp
shl
add
add
add
sub
jmp
mov
add
push
mov
add
mov
pop
jmp
neg
dec
not
shl
xchg
neg
xchg
add
add
mov
add
push
mov
add
mov
add
xor
xor
xor
mov
rorb
pushf
jmp
add
xor
xor
xor
pop
jmp
not
dec
sub
xor
pop
sub
pushl
pop
jmp
sub
and
sub
mov
pop
jmp
pop
push
mov
push
jmp
sub
jmp
pop
xor
mov
pop
add
mov
add
add
push
jmp
not
xchg
shl
sub
jmp
xchg
pop
add
push
mov
jmp
mov
sub
mov
mov
add
add
sub
pop
add
jmp
sub
add
add
jmp
mov
movzbw
jmp
jmp
lods
push
mov
mov
push
mov
add
pop
sub
xor
jmp
pop
push
jmp
push
mov
push
mov
jmp
mov
push
jmp
pop
push
push
mov
mov
pop
add
pop
xor
xor
jmp
push
mov
push
mov
addl
jmp
mov
sub
add
push
mov
sub
add
add
sub
pop
pop
xor
jmp
add
pop
add
sub
pushl
pop
jmp
push
mov
mov
jmp
add
jmp
pushl
pop
push
mov
mov
push
mov
push
jmp
add
pop
push
push
pop
inc
shl
or
push
mov
jmp
pushl
pop
jmp
mov
add
jmp
add
add
sub
sub
mov
add
pop
jmp
pushl
pop
push
push
pop
add
sub
mov
mov
not
inc
dec
jmp
mov
jmp
mov
mov
jmp
pop
jmp
neg
sub
jmp
push
mov
sub
xchg
pop
add
xor
pop
and
pushl
jmp
pushl
mov
add
push
mov
sub
mov
jmp
xor
pushl
jmp
mov
jmp
xor
xor
mov
movsbl
push
jmp
neg
push
mov
sub
jmp
mov
add
jmp
add
sub
add
add
add
pop
add
xchg
pop
mov
push
jmp
add
mov
pop
shr
push
mov
xor
pop
jmp
not
push
mov
jmp
push
jmp
xor
xor
jmp
neg
push
mov
xor
jmp
push
mov
add
jmp
push
mov
mov
add
sub
xchg
pop
mov
jmp
push
mov
sub
pop
xchg
pop
mov
push
mov
jmp
pop
add
jmp
add
push
mov
mov
add
mov
add
xor
jmp
push
push
mov
mov
jmp
xor
pop
mov
pop
jmp
sub
pop
pushl
mov
add
add
add
pop
push
mov
jmp
mov
jmp
mov
jmp
add
mov
add
dec
and
sub
add
mov
jmp
mov
add
add
sub
push
push
jmp
mov
jmp
mov
jmp
add
pop
push
mov
jmp
push
push
mov
mov
xor
pop
add
pop
add
jmp
add
jmp
and
jmp
or
jmp
and
jmp
add
jmp
add
pop
add
add
jmp
mov
dec
jmp
add
add
xor
xor
xor
pop
pushl
pop
push
mov
jmp
xchg
pop
jmp
push
sub
mov
mov
sub
jmp
shr
add
add
pop
push
jmp
push
mov
jmp
push
pop
push
mov
jmp
sub
jmp
mov
dec
jmp
push
mov
add
pop
xor
xor
xor
mov
jmp
xchg
pop
jmp
add
mov
add
xchg
jmp
push
jmp
sub
push
pushl
pop
popl
pop
mov
mov
push
jmp
pop
jmp
or
pop
and
push
mov
sub
pop
add
pop
add
sub
push
mov
sub
pop
sub
movzbw
push
mov
add
jmp
xor
xchg
jmp
or
add
xor
jmp
notl
pop
shl
shl
push
mov
mov
inc
dec
jmp
mov
jmp
sub
add
xor
pop
jmp
xchg
pop
xchg
jmp
pop
jmp
mov
add
jmp
push
mov
pop
pop
xor
xor
add
pop
push
mov
mov
add
pop
xchg
mov
idiv
jmp
push
push
pushl
pop
add
jmp
add
jmp
pop
pop
mov
add
push
push
mov
jmp
sub
mov
mov
mov
pop
sub
pop
mov
jmp
shr
or
xor
sub
mov
jmp
mov
add
jmp
sub
mov
push
jmp
sub
jmp
mov
push
fimull
xor
or
or
mov
or
cmp
or
mov
or
insl
fimull
and
fs
fimull
mov
outsb
fimull
mov
or
ret
or
jle
dec
and
or
fimull
or
fimull
fidivrs
fimull
xor
lods
fimull
aam
mov
fimull
dec
adc
or
fimull
mov
or
pop
out
push
aas
cli
adc
or
insl
fimull
cmp
aad
fimull
mov
outsl
fimull
sub
sub
dec
test
or
jnp
or
fimull
call
push
fimull
push
cli
pop
jns
or
push
fimull
cmp
sbb
or
enter
popf
sub
push
sbb
or
or
or
fimull
stc
fimull
mov
fimull
cmp
or
xor
sbb
aas
fimull
cltd
pop
fimull
mov
push
add
or
leave
xor
data16
fimull
out
fimull
fstpt
sahf
jae
or
mov
out
inc
fimull
shrl
or
mov
or
fimull
xchg
imul
or
add
or
mov
jl
push
fimull
sbb
fimull
test
nop
jo
or
pusha
fimull
jge
fimull
push
cmc
inc
pop
fimull
lahf
adc
or
xchg
fimull
or
and
or
fimull
and
sub
fimull
sub
clc
xor
or
scas
stos
push
adc
adc
or
pop
fimull
sti
and
or
and
or
insl
or
or
cltd
fimull
cmp
aam
dec
pop
dec
xor
or
sbb
into
jae
inc
xchg
mov
fimull
xchg
sbb
or
fimull
in
insl
add
or
jbe
or
push
fimull
lds
scas
movsl
test
pop
mov
or
jo
or
xor
or
pminub
mov
popf
xchg
add
or
jae
or
xchg
test
fimull
mov
int3
data16
pop
jne
or
fimull
lahf
stos
leave
pminub
cmp
or
cld
call
pop
sub
mov
add
cmp
jne
jmp
mov
mov
jmp
add
dec
or
jne
mov
mov
add
mov
xor
lock
jne
lods
jmp
sub
pop
jmp
xor
mov
and
pushf
jmp
mov
sub
mov
pop
sub
add
push
jmp
push
push
mov
jmp
add
jmp
pop
push
mov
jmp
sub
jmp
add
add
push
pop
jmp
mov
add
dec
dec
dec
push
mov
jmp
push
mov
add
sub
xchg
pop
mov
mov
mov
jmp
sub
add
add
pop
push
sub
jmp
pushl
pushl
jmp
shr
dec
push
push
mov
mov
pop
sub
sub
inc
push
mov
jmp
mov
add
pop
pop
jmp
push
mov
add
neg
push
mov
not
shl
shl
jmp
mov
add
pop
jmp
shr
jmp
shr
sub
jmp
dec
shl
xor
jmp
and
shl
jmp
mov
push
mov
mov
pop
push
push
mov
mov
jmp
push
jmp
mov
mov
jmp
push
mov
addl
pop
add
push
mov
push
jmp
not
shl
xor
jmp
pop
xor
add
mov
add
add
jmp
pop
popl
pop
push
push
jmp
sub
pop
jmp
xor
xor
pop
sub
sub
pop
mov
jmp
add
jmp
push
jmp
xor
pop
neg
or
jmp
push
negl
pop
sub
sub
pop
jmp
push
jmp
xor
pop
jmp
mov
pop
jmp
mov
add
pop
sub
jmp
mov
and
pushl
mov
push
jmp
mov
add
dec
sub
jmp
mov
jmp
push
pushl
pop
jmp
mov
mov
mov
add
jmp
pop
push
mov
jmp
sub
xchg
pop
mov
addl
pop
push
push
mov
jmp
lods
xor
jmp
pop
push
mov
mov
add
jmp
xchg
mov
mov
mov
push
jmp
push
mov
jmp
mov
mul
pushw
mov
push
pushf
jmp
neg
push
jmp
mov
push
mov
sub
or
pop
not
jmp
mov
notl
pop
not
inc
jmp
xchg
pop
jmp
sub
add
push
mov
jmp
sub
pop
add
sub
add
add
push
jmp
mov
dec
push
jmp
mov
add
add
xchg
pop
pushl
pop
jmp
add
sub
jmp
add
add
pop
xchg
jmp
mov
add
sub
pop
sub
push
mov
add
not
push
mov
or
pop
neg
jmp
mov
pop
jmp
add
shr
shr
jmp
pop
jmp
xor
mov
add
add
add
add
sub
sub
jmp
pop
jmp
and
not
not
jmp
push
push
jmp
pop
mov
push
jmp
push
mov
jmp
add
sub
sub
pop
jmp
xchg
pop
jmp
pop
push
sub
mov
push
sub
mov
mov
mov
pop
jmp
mov
push
mov
add
add
xor
jmp
or
not
add
or
jmp
push
mov
xor
pop
add
pop
push
jmp
add
pop
push
jmp
jmp
sub
jmp
xor
jmp
mov
jmp
add
jmp
mov
sub
mov
mov
or
pop
shl
push
mov
and
neg
sub
xor
jmp
push
mov
jmp
pop
jmp
pop
jmp
sub
add
add
sub
pushl
pop
push
mov
add
jmp
push
mov
push
notb
pop
push
jmp
pop
add
xor
xor
xor
jmp
add
pop
add
pop
add
xchg
pop
jmp
sub
mov
pushw
jmp
add
sub
push
mov
add
sub
sub
add
pushl
pop
jmp
push
mov
xor
add
mov
pop
add
jmp
xor
xor
pop
jmp
popl
addl
mov
add
push
sub
mov
push
mov
jmp
add
xor
jmp
pop
jmp
add
pop
jmp
xor
xor
pop
push
mov
sub
mov
push
jmp
pushw
mov
jmp
add
jmp
sub
pop
add
shr
push
mov
push
mov
jmp
mov
mov
jmp
xor
xor
pop
pop
neg
add
mov
jmp
add
jmp
xchg
pop
mov
push
mov
add
add
push
pushl
pop
popl
pop
jmp
sub
pop
jmp
add
sub
xchg
pop
mov
mov
add
push
mov
mov
and
jmp
xor
xor
neg
xor
jmp
add
sub
sub
mov
push
mov
push
sub
pop
jmp
mov
mov
add
jmp
mov
sub
mov
push
jmp
not
inc
push
mov
add
xor
sub
pop
jmp
push
jmp
push
mov
dec
sub
xor
pop
mov
pop
shl
add
jmp
sub
xchg
pop
mov
jmp
mov
push
push
pop
add
add
xchg
pop
or
push
mov
xor
pop
jmp
shl
jmp
xor
mov
idiv
sub
jmp
push
push
pop
add
and
neg
jmp
sub
pop
add
jmp
pushl
pushl
pop
push
mov
jmp
pop
and
mov
add
jmp
mov
add
add
xchg
pop
pushl
sub
mov
push
mov
jmp
sub
mov
mov
add
sub
push
mov
jmp
mov
push
mov
shl
jmp
inc
shr
push
mov
shl
not
add
push
jmp
and
or
neg
push
mov
add
push
jmp
inc
push
mov
push
mov
mov
jmp
add
pop
xor
add
jmp
add
push
mov
mov
add
push
jmp
pop
add
sub
xchg
pop
mov
jmp
mov
mov
xor
mov
pop
sub
pop
xchg
pop
push
popl
addl
pushl
pop
add
push
mov
jmp
mov
mov
pop
sub
xor
xor
xor
pop
jmp
pop
jmp
xchg
push
notb
pop
xor
xor
jmp
add
jmp
mov
jmp
add
push
mov
or
pop
dec
push
push
mov
mov
jmp
push
mov
add
jmp
push
mov
add
pop
sub
xchg
mov
push
popl
sub
mov
mov
subl
add
jmp
add
push
jmp
mov
sub
add
add
pop
push
pushl
pop
popl
mov
popl
jmp
pop
sub
pop
xchg
pop
jmp
xor
pop
add
pop
jmp
sub
sub
jmp
pushl
push
mov
jmp
sub
add
add
jmp
add
and
pop
xor
push
mov
sub
jmp
sub
add
pop
add
add
sub
add
sub
sub
jmp
add
pop
xchg
pop
add
sub
mov
pushl
mov
push
mov
add
add
xchg
jmp
add
add
push
mov
sub
pop
mov
add
push
mov
mov
add
add
sub
pop
xor
jmp
shr
push
mov
sub
mov
mov
shr
jmp
mov
push
mov
mov
add
pop
add
xchg
pop
jmp
pushl
mov
add
popl
mov
jmp
shr
push
mov
and
pop
sub
jmp
add
pop
pop
mov
jmp
mov
push
mov
add
push
mov
mov
xor
pop
push
mov
jmp
push
mov
dec
mov
mov
add
neg
push
jmp
mov
jmp
add
add
push
mov
add
pop
jmp
pop
jmp
mov
add
jmp
mov
and
push
mov
jmp
mov
jmp
sub
shr
push
mov
xor
pop
add
add
pop
mov
push
mov
add
add
xchg
mov
sub
mov
jmp
mov
sub
pop
push
mov
add
shr
sub
sub
mov
add
jmp
lods
xor
push
mov
jmp
mov
jmp
pop
jmp
push
push
mov
jmp
mov
mov
jmp
xor
pop
dec
xor
add
pop
jmp
pushl
mov
add
push
jmp
push
sub
mov
mov
shr
or
jmp
pushl
jmp
mov
mov
pop
jmp
mov
add
jmp
not
xchg
push
mov
shl
shl
jmp
mov
mov
add
pop
sub
mov
pushl
mov
sub
mov
mov
push
mov
add
jmp
sub
pop
jmp
shl
sub
mov
pushl
jmp
pop
push
jmp
mov
push
mov
mov
pop
pushl
mov
add
push
mov
mov
add
add
xchg
jmp
push
sub
mov
mov
jmp
add
jmp
sub
add
jmp
pop
push
push
mov
push
mov
jmp
mov
mov
pop
or
inc
dec
jmp
push
mov
not
shr
jmp
pop
sub
mov
mov
and
shr
not
push
mov
xor
pop
or
add
add
mov
add
push
jmp
xor
jmp
pop
neg
add
add
pop
add
xchg
pop
dec
xor
neg
push
mov
add
jmp
add
add
shl
or
add
mov
mov
add
add
mov
add
push
jmp
sub
jmp
sub
mov
mov
add
add
pop
jmp
xor
xor
xor
mov
pushl
push
push
push
pop
jmp
push
pop
jmp
sub
pop
inc
xor
xor
pop
add
or
jmp
pop
jmp
xor
pop
sub
mov
add
xor
xor
xor
pop
jmp
not
sub
add
pop
and
push
mov
shl
add
xor
pop
jmp
mov
mov
add
sub
push
mov
add
add
pop
sub
add
add
sub
push
mov
not
push
mov
jmp
xor
push
mov
sub
sub
add
pop
jmp
add
sub
mov
mov
sub
pop
xor
xor
xor
pop
mov
xchg
push
mov
jmp
xchg
pop
mov
pushl
pop
popl
pop
or
je
push
push
mov
addl
pop
push
push
mov
jmp
add
add
xchg
pop
add
sub
mov
mov
inc
add
dec
jmp
lods
xor
push
mov
add
sub
xchg
pop
mov
push
jmp
push
mov
push
mov
mov
pop
pop
mov
pushl
jmp
push
jmp
sub
xchg
pop
mov
mov
mov
jmp
add
pop
xchg
pop
push
pushl
pop
popl
jmp
pop
pop
xor
xor
xor
mov
jmp
sub
jmp
mov
jmp
mov
add
push
mov
mov
push
mov
and
sub
dec
xor
add
sub
add
jmp
add
push
mov
mov
add
add
jmp
mov
jmp
push
mov
sub
sub
jmp
pop
jmp
pushl
pop
add
sub
sub
jmp
push
pushl
pop
popl
mov
jmp
sub
xchg
jmp
or
jmp
mov
add
add
xchg
pop
push
mov
jmp
sub
xor
jmp
inc
xor
xor
jmp
pop
mov
jmp
add
add
jmp
add
add
pop
push
push
jmp
mov
add
pop
jmp
mov
jmp
push
jmp
mov
jmp
mov
push
mov
jmp
and
pop
dec
neg
inc
dec
xor
sub
pop
jmp
mov
jmp
add
and
jmp
push
mov
not
sub
add
add
jmp
push
push
mov
mov
sub
add
add
jmp
mov
jmp
sub
add
push
push
mov
add
or
jmp
push
mov
dec
neg
jmp
mov
xor
pushl
pop
add
add
pushl
pop
jmp
sub
mov
jmp
xor
mov
push
mov
jmp
mov
dec
xchg
not
jmp
jmp
add
sub
pop
push
mov
add
pop
pop
push
mov
mov
jmp
xor
xor
jmp
mov
add
pop
jmp
mov
jmp
pop
add
inc
add
mov
pop
or
jmp
add
sub
jmp
pop
sub
sub
push
mov
sub
pop
push
mov
sub
pop
movzbl
mov
push
mov
sub
push
popl
addl
pop
push
push
push
pop
neg
sub
neg
jmp
xor
mov
add
jmp
addl
mov
jmp
mov
jmp
push
mov
jmp
pushl
jmp
sub
pop
push
mov
push
pop
add
pop
push
mov
pushl
pushl
pop
push
mov
add
add
jmp
push
mov
mov
pop
jmp
add
sub
add
add
sub
add
jmp
mov
push
mov
push
push
mov
mov
pop
jmp
pop
jmp
xor
pushf
jmp
pop
jmp
mov
mov
sub
mov
mov
add
add
xor
xor
jmp
pushl
mov
add
push
mov
add
add
push
pushl
pushl
pop
add
jmp
mov
jmp
add
jmp
add
shr
add
shl
jmp
add
jmp
push
pushf
jmp
mov
add
jmp
mov
jmp
pop
pop
add
push
jmp
sub
mov
jmp
push
mov
jmp
add
xor
mov
jmp
push
mov
jmp
sub
pop
inc
push
mov
sub
jmp
add
add
add
push
push
jmp
neg
push
notl
pop
add
add
pop
add
sub
push
mov
mov
sub
pop
sub
add
add
sub
push
jmp
add
pop
jmp
push
jmp
mov
sub
pop
pushl
pop
add
push
mov
mov
push
jmp
mov
jmp
pop
jmp
add
add
push
mov
push
mov
neg
sub
add
add
pop
jmp
pop
push
sub
mov
mov
mov
pop
push
mov
mov
pop
pop
mov
push
push
pop
add
add
xchg
pop
pop
mov
add
jmp
xchg
pop
push
jmp
add
sub
mov
jmp
add
pop
pop
push
mov
mov
add
mov
jmp
sub
jmp
add
xchg
pop
mov
add
jmp
mov
shl
xor
neg
add
add
pop
add
push
mov
or
pop
shl
sub
jmp
sub
pushl
jmp
add
sub
pop
push
push
jmp
pushl
pop
push
mov
add
sub
jmp
add
push
mov
sub
jmp
add
mov
pop
shl
shl
sub
mov
push
mov
mov
mov
push
mov
push
mov
jmp
add
or
push
mov
jmp
push
pop
add
jmp
mov
add
push
jmp
sub
jmp
lods
xor
jmp
pushl
mov
jmp
add
add
sub
mov
jmp
shr
push
mov
not
jmp
add
add
push
pushl
pop
popl
mov
add
push
jmp
negb
pushf
jmp
sub
mov
jmp
pop
push
jmp
sub
add
and
pop
xchg
push
notl
pop
jmp
and
inc
sub
add
pop
jmp
pop
jmp
xor
pop
jmp
add
pop
add
mov
jmp
mov
jmp
pushw
mov
jmp
push
mov
dec
jmp
push
push
mov
add
push
jmp
add
jmp
sub
add
add
pop
push
jmp
xor
jmp
push
mov
add
pop
dec
add
sub
pop
sub
sub
add
jmp
add
shr
inc
push
mov
or
and
neg
not
inc
add
sub
jmp
add
pop
jmp
sub
xor
mov
add
sub
pop
sub
mov
add
jmp
mov
pushl
pop
push
push
pop
push
mov
add
jmp
neg
jmp
mov
push
push
pop
push
mov
add
add
sub
jmp
mov
add
pop
push
mov
mov
sub
xchg
not
jmp
push
jmp
sub
xchg
pop
mov
mov
xor
mov
jmp
add
jmp
add
jmp
popl
mov
jmp
pop
shr
shr
dec
jmp
sub
mov
jmp
mov
add
pop
add
xchg
jmp
pop
sub
jmp
shr
shl
sub
jmp
popl
jmp
add
add
pop
jmp
dec
xor
jmp
or
pop
jmp
mov
mov
push
push
mov
add
jmp
push
mov
add
mov
add
jmp
add
jmp
and
jmp
mov
add
push
mov
add
pop
xchg
jmp
sub
mov
mov
push
mov
shr
or
sub
and
xor
add
pop
push
mov
sub
pop
xor
xor
jmp
mov
add
pop
push
push
mov
jmp
add
push
mov
jmp
add
add
add
jmp
xor
xor
jmp
add
pop
xchg
mov
mov
push
push
mov
addl
pop
push
mov
sub
mov
mov
neg
push
mov
xor
pop
jmp
mov
push
push
mov
push
push
mov
push
mov
mov
jmp
not
xor
add
sub
pop
sub
jmp
add
xor
pop
add
mov
add
push
mov
mov
push
push
jmp
jmp
push
mov
jmp
pop
xor
xor
xor
mov
push
mov
jmp
add
xchg
pop
add
and
pushl
pushl
jmp
mov
jmp
pop
jmp
mov
jmp
add
mov
add
push
push
jmp
xchg
pop
pushl
jmp
mov
mov
pop
add
jmp
not
xor
jmp
inc
dec
add
jmp
mov
push
mov
push
mov
push
push
mov
add
add
jmp
add
jmp
mov
jmp
mov
add
sub
sub
pop
add
jmp
push
pushl
pop
popl
pop
mov
mov
subl
add
addl
pop
pop
push
mov
push
mov
jmp
pop
pushw
mov
mov
not
and
jmp
shl
push
push
pop
or
shr
add
xor
sub
pop
inc
xor
push
mov
mov
jmp
add
sub
jmp
mov
jmp
push
mov
add
jmp
sub
xor
add
sub
sub
jmp
sub
mov
add
jmp
mov
jmp
mov
push
jmp
pushl
pop
push
mov
add
add
xchg
jmp
mov
push
mov
dec
add
add
pop
add
push
mov
sub
mov
jmp
add
jmp
sub
add
mov
add
add
sub
push
jmp
mov
jmp
push
jmp
movzbl
jmp
push
mov
add
jmp
add
pop
add
xchg
pop
jmp
mov
add
inc
sub
mov
pop
sub
jmp
add
sub
shl
sub
mov
pushl
pop
push
mov
add
jmp
mov
jmp
add
sub
mov
jmp
mov
mov
mov
pop
pop
jmp
add
mov
pop
push
mov
jmp
pop
sub
push
mov
push
mov
mov
push
mov
push
mov
mov
pop
pop
push
mov
sub
sub
sub
push
jmp
sub
pop
jmp
mov
jmp
push
mov
shr
sub
xor
add
jmp
jmp
xchg
neg
jmp
sub
mov
jmp
push
pop
push
push
pop
add
pop
add
jmp
xchg
jmp
pushl
jmp
add
xchg
pop
jmp
mov
or
mov
sub
mov
mov
add
add
jmp
mov
pop
sub
pop
add
add
jmp
xor
jmp
lods
jmp
mov
mov
add
jmp
xor
xor
pop
and
jmp
sub
xchg
pop
jmp
mov
push
mov
push
push
popl
jmp
mov
add
jmp
pushl
pushl
pop
add
jmp
add
add
xchg
pop
add
push
mov
mov
sub
sub
jmp
pop
add
xchg
jmp
mov
mov
push
push
jmp
xchg
pop
xchg
mov
push
jmp
mov
jmp
addl
jmp
pop
add
push
mov
not
not
shl
push
mov
xor
pop
sub
pop
add
jmp
push
mov
xor
xchg
jmp
pop
jmp
mov
push
push
pop
push
jmp
add
xchg
pop
push
mov
jmp
push
jmp
shr
and
shr
inc
sub
jmp
push
jmp
add
push
mov
jmp
mov
sub
mov
mov
jmp
mov
add
shl
xor
mov
mov
add
push
jmp
mov
add
pop
add
sub
sub
pushl
jmp
push
mov
add
pop
pop
sub
jmp
pop
shl
shl
jmp
push
mov
add
pop
xchg
mov
xor
add
sub
push
mov
sub
pop
mov
add
xor
mov
push
mov
add
push
mov
add
jmp
push
mov
jmp
addl
jmp
add
push
mov
sub
pop
pop
not
jmp
pushl
pop
add
jmp
add
push
jmp
push
mov
jmp
push
mov
jmp
xor
pop
add
pop
sub
subl
push
mov
mov
jmp
sub
sub
add
sub
pop
push
jmp
push
mov
jmp
xchg
jmp
mov
add
pop
push
jmp
mov
push
mov
jmp
mov
push
push
mov
mov
xor
pop
jmp
push
jmp
mov
jmp
push
mov
push
mov
push
pop
jmp
xchg
pop
jmp
add
sub
push
mov
sub
jmp
mov
push
jmp
not
push
mov
xor
pop
xor
add
pop
push
mov
pop
mov
jmp
mov
pushw
jmp
sub
mov
pop
sub
add
add
jmp
xchg
sub
add
sub
jmp
add
xchg
pop
pushl
pop
add
jmp
push
mov
add
pop
xchg
pop
add
jmp
push
jmp
add
add
jmp
mov
add
pop
jmp
pop
jmp
sub
mov
push
jmp
pop
add
push
mov
sub
pushl
jmp
push
mov
add
push
mov
push
mov
push
jmp
push
mov
jmp
mov
jmp
xchg
jmp
add
jmp
sub
jmp
shl
xchg
add
xor
xor
xor
push
mov
add
sub
sub
pop
sub
jmp
add
or
push
jmp
xor
xor
xor
pop
sub
pushf
jmp
mov
jmp
add
sub
sub
pop
jmp
mov
jmp
pop
mov
mov
push
push
push
jmp
and
add
jmp
push
jmp
pop
add
add
push
mov
not
jmp
not
or
push
jmp
push
push
mov
shl
xor
mov
jmp
mov
mov
push
jmp
not
sub
mov
pushl
mov
add
jmp
pop
jmp
lods
push
sub
mov
jmp
add
push
mov
jmp
push
mov
add
pop
jmp
push
mov
push
push
mov
mov
pop
push
mov
jmp
mov
and
jmp
push
mov
mov
pop
mov
push
mov
add
add
xchg
jmp
popl
jmp
xor
neg
add
inc
xor
add
pop
sub
pushl
pop
push
jmp
add
sub
sub
add
add
push
mov
jmp
add
add
jmp
add
mov
add
pop
jmp
mov
jmp
pop
mov
mov
push
push
pop
add
jmp
pop
xor
mov
add
sub
add
jmp
sub
jmp
xor
push
mov
shr
shl
add
or
xor
jmp
push
push
mov
add
mov
pop
sub
pop
push
mov
xor
not
xchg
inc
xchg
shl
jmp
push
jmp
add
jmp
mov
jmp
add
jmp
push
mov
and
xor
jmp
pushl
pushl
pop
push
mov
jmp
add
push
mov
jmp
mov
jmp
pushl
pop
popl
pop
jmp
push
mov
mov
add
sub
push
push
push
pop
push
mov
shr
jmp
push
pushl
mov
add
popl
pop
sub
mov
mov
push
mov
add
pop
jmp
push
mov
push
pop
mov
add
jmp
mov
jmp
pushl
pop
popl
mov
mov
jmp
mov
add
add
sub
pop
and
add
sub
push
mov
xor
jmp
mov
sub
jmp
push
pushf
jmp
add
add
pop
push
subl
pop
jmp
add
mov
add
add
mov
add
xor
and
mov
add
or
je
pushl
pushl
mov
add
push
mov
jmp
mov
push
pop
add
sub
xchg
pop
mov
push
pop
jmp
pushl
jmp
push
mov
jmp
pop
and
pushl
jmp
sub
jmp
xorl
mov
add
xor
push
mov
popl
pushl
mov
add
jmp
add
subl
jmp
sub
add
jmp
sub
add
sub
push
jmp
pop
mov
mov
add
movl
push
mov
push
jmp
push
mov
or
mov
jmp
mov
not
inc
xor
add
sub
jmp
push
jmp
pop
mov
add
add
xchg
mov
decl
pushf
jmp
push
push
popl
sub
mov
mov
addl
addl
jmp
pop
jmp
xor
xor
pop
mov
jmp
shl
jmp
jmp
mov
jmp
pop
inc
xchg
sub
add
pop
push
pushl
pop
popl
jmp
neg
shr
xor
jmp
add
xchg
mov
xor
push
jmp
push
push
push
mov
jmp
add
mov
push
mov
push
push
mov
mov
sub
pop
add
pop
add
xor
jmp
push
pop
jmp
neg
not
shl
jmp
mov
add
pop
push
sub
mov
jmp
push
push
jmp
sub
mov
jmp
mov
push
mov
add
add
jmp
pushl
pop
push
push
pop
jmp
add
add
pop
jmp
add
inc
xor
and
pop
sub
push
addl
mov
push
push
pop
add
add
xchg
pop
sub
jmp
push
mov
add
add
xchg
pop
add
add
sub
pop
push
jmp
pop
push
mov
mov
add
pop
sub
add
add
mov
add
sub
sub
mov
push
jmp
mov
add
add
xchg
jmp
push
notl
pop
push
mov
add
pop
not
add
jmp
add
dec
xor
push
jmp
push
pop
add
sub
jmp
pop
jmp
push
mov
jmp
xor
jmp
movzbw
push
push
mov
jmp
mov
add
jmp
jmp
xchg
mov
shr
dec
sub
jmp
xor
jmp
popl
mov
add
pushf
jmp
mov
add
jmp
shr
or
dec
not
not
add
mov
jmp
push
jmp
and
pushl
jmp
mov
jmp
pop
add
mov
add
sub
mov
add
add
sub
sub
jmp
pop
jmp
mov
add
push
mov
mov
dec
jmp
add
mov
pop
jmp
pushl
pop
jmp
mov
jmp
push
mov
mov
add
push
mov
add
pop
jmp
mov
add
jmp
add
push
mov
jmp
mov
pop
xor
jmp
add
jmp
add
add
xchg
jmp
push
mov
mov
jmp
mov
sub
jmp
mov
jmp
sub
jmp
sub
pop
sub
push
jmp
push
mov
push
mov
sub
pop
jmp
mov
jmp
pop
jmp
inc
sub
jmp
push
jmp
add
jmp
xor
pop
jmp
add
push
push
mov
jmp
mov
xor
jmp
pop
and
neg
shr
push
mov
shr
add
sub
add
sub
sub
jmp
sub
sub
pop
xor
sub
add
add
sub
mov
push
push
mov
jmp
add
sub
xchg
jmp
push
push
jmp
xor
xor
xor
mov
push
mov
push
mov
jmp
lea
jmp
mov
jmp
sub
xchg
pop
mov
jmp
add
add
xchg
jmp
add
pop
push
jmp
pop
jmp
mov
add
sub
add
sub
sub
add
pop
jmp
mov
add
jmp
add
jmp
mov
jmp
mov
jmp
push
mov
add
pop
sub
add
push
jmp
push
jmp
mov
sub
pop
or
push
mov
mov
jmp
pop
push
mov
add
sub
xchg
pop
mov
push
mov
add
jmp
lods
xor
push
mov
push
jmp
dec
not
sub
and
neg
not
jmp
push
pop
jmp
xor
xor
jmp
pop
push
mov
push
jmp
mov
push
mov
mov
jmp
push
mov
sub
pop
xor
jmp
add
sub
pushl
pop
jmp
pop
mov
push
push
popl
addl
pushl
jmp
pop
shlb
pushf
jmp
add
xor
xor
xor
mov
rorw
pushf
jmp
push
jmp
xchg
not
xchg
shl
xor
shr
sub
sub
mov
jmp
add
jmp
push
mov
mov
sub
pop
pushl
pop
add
jmp
push
jmp
sub
mov
add
sub
sub
mov
push
push
mov
jmp
mov
sub
jmp
sub
mov
mov
add
pushl
mov
add
jmp
inc
jmp
push
mov
push
pop
push
jmp
mov
sub
mov
decl
pop
jmp
sub
mov
mov
add
mov
add
push
jmp
sub
mov
jmp
mov
add
and
add
push
mov
mov
pop
pop
add
jmp
add
add
jmp
push
jmp
mov
add
add
push
mov
jmp
mov
neg
jmp
add
xchg
pop
push
push
mov
jmp
pop
jmp
pop
push
mov
add
push
mov
add
pop
xchg
jmp
subl
pop
add
pop
add
add
sub
pushl
pushl
jmp
and
pushl
mov
push
push
pop
add
add
jmp
mov
push
pushl
pop
add
add
jmp
mov
jmp
pop
jmp
push
mov
add
add
jmp
add
sub
add
mov
add
jmp
mov
push
mov
add
add
xchg
pop
jmp
push
mov
add
push
mov
sub
pop
jmp
push
push
jmp
mov
add
add
add
xor
xor
jmp
add
xchg
pop
mov
push
pushl
mov
add
add
push
jmp
add
add
add
sub
mov
push
jmp
sub
sub
push
jmp
xor
xor
push
mov
mov
sub
pop
push
jmp
popl
sub
mov
push
jmp
mov
pushl
pop
popl
mov
decw
pushf
jmp
pop
push
mov
add
jmp
xor
pop
jmp
sub
sub
sub
push
jmp
sub
pop
xchg
mov
jmp
add
add
push
pushl
mov
sub
mov
push
pushl
pop
jmp
mov
mov
or
add
add
pop
mov
push
mov
mov
jmp
push
mov
sub
pop
jmp
add
xor
jmp
add
mov
push
mov
add
jmp
mov
sub
pop
jmp
add
sub
mov
push
push
mov
jmp
push
jmp
push
mov
add
add
xor
jmp
add
pop
add
add
jmp
add
sub
jmp
add
mov
pushl
pop
jmp
sub
add
push
mov
jmp
mov
pushl
jmp
add
jmp
xchg
not
xchg
pop
jmp
mov
add
sub
xchg
jmp
pop
push
push
pop
add
sub
xchg
pop
mov
push
jmp
push
jmp
shr
not
add
jmp
mov
push
mov
jmp
sub
mov
add
xor
pop
sub
shl
sub
sub
mov
mov
add
xor
mov
add
pushl
pushl
pop
jmp
pop
add
pop
push
mov
dec
jmp
shl
jmp
push
mov
xor
pop
jmp
add
push
mov
jmp
mov
mov
pop
and
mov
push
mov
add
add
jmp
shl
jmp
movzbl
popl
jmp
sub
mov
push
mov
addl
pushl
pop
add
push
sub
mov
push
pop
xor
jmp
sub
mov
jmp
mov
sub
jmp
neg
jmp
lods
jmp
push
jmp
add
push
mov
jmp
add
pop
jmp
pop
add
jmp
mov
add
pop
jmp
xor
pop
mov
pop
add
pop
xor
xor
jmp
push
push
mov
mov
pop
push
mov
add
sub
xchg
pop
mov
mov
add
pop
add
pop
jmp
mov
jmp
mov
not
shl
sub
push
push
mov
jmp
mov
add
mov
pop
mov
push
mov
jmp
mov
shl
sub
sub
pop
jmp
pop
pushl
pop
sub
mov
push
pop
add
add
xor
xor
xor
pop
push
mov
add
sub
xchg
jmp
push
jmp
sub
mov
mov
sub
jmp
sub
add
sub
sub
add
jmp
mov
jmp
add
sub
add
add
jmp
push
sub
mov
sub
mov
mov
sub
push
mov
sub
pop
jmp
mov
mov
mov
jmp
push
jmp
sub
sub
add
push
mov
jmp
sub
add
pop
jmp
pop
mov
mov
push
push
mov
push
pop
pop
jmp
push
mov
sub
pop
pop
add
jmp
inc
xor
add
sub
mov
add
jmp
lods
xor
jmp
pop
add
pop
sub
xchg
mov
jmp
add
or
je
pushl
push
mov
add
pop
pushl
mov
add
push
jmp
mov
mov
add
pop
jmp
push
jmp
mov
xor
pop
add
add
pop
sub
jmp
add
jmp
pushl
jmp
sub
jmp
mov
pushl
jmp
subl
mov
add
dec
sub
xor
pop
mov
mov
add
xor
mov
add
push
push
jmp
mov
add
mov
pop
sub
mov
mov
mov
pop
add
pushl
pop
add
sub
pushl
jmp
mov
jmp
mov
add
pop
pop
push
mov
jmp
shl
shl
push
jmp
pushl
pop
add
movl
sub
jmp
dec
shr
jmp
sub
xor
jmp
push
mov
add
jmp
pushl
jmp
xor
sub
pop
sub
mov
mov
or
mov
push
mov
jmp
shl
dec
xor
add
jmp
mov
mov
jmp
sub
add
add
mov
add
pushl
pop
push
mov
add
jmp
pop
add
addl
add
subl
pushl
pop
add
pushl
pop
jmp
push
mov
jmp
xor
jmp
dec
push
notl
mov
add
push
push
mov
jmp
push
pop
pop
jmp
mov
add
add
xchg
mov
jmp
pop
add
pop
jmp
mov
mov
pop
pop
add
pop
push
push
mov
push
jmp
add
push
mov
sub
push
mov
jmp
xchg
pop
push
mov
jmp
sub
push
mov
xor
shr
dec
push
mov
jmp
add
jmp
popl
jmp
pushl
pop
jmp
mov
jmp
mov
sub
add
pop
xor
xor
jmp
pop
popa
popf
ret
jmp
add
sub
sub
pop
push
push
mov
jmp
push
mov
add
sub
jmp
add
jmp
mov
sub
mov
push
pop
jmp
push
jmp
or
shl
push
jmp
mov
and
shl
neg
sub
jmp
sub
pop
pop
xchg
pop
mov
jmp
shl
jmp
pop
xor
pop
add
mov
add
sub
add
jmp
pushl
jmp
xchg
pop
sub
sub
mov
pushl
mov
add
jmp
push
mov
jmp
add
pop
sub
add
push
mov
add
pop
jmp
pop
add
pushl
pop
add
push
push
push
pop
dec
dec
jmp
sub
sub
add
pop
push
pop
pop
add
jmp
push
pop
push
jmp
push
mov
push
mov
pop
jmp
sub
jmp
mov
push
jmp
pushl
pop
jmp
shl
sub
and
jmp
sub
mov
push
pop
xchg
not
xchg
inc
inc
xor
jmp
or
je
pushl
subl
pop
push
mov
sub
mov
jmp
mov
jmp
shl
jmp
push
mov
add
push
mov
jmp
mov
pop
mov
jmp
push
push
mov
mov
xor
pop
inc
push
mov
sub
sub
jmp
push
mov
jmp
mov
add
add
jmp
mov
jmp
add
add
jmp
push
mov
push
mov
jmp
shl
jmp
mov
xor
jmp
pop
add
sub
add
add
push
mov
mov
jmp
movzbw
pushw
mov
movzbw
push
pushf
jmp
pushl
pop
popl
jmp
mov
add
add
jmp
pop
push
mov
add
pop
xor
xor
xor
pop
bt
pushf
jmp
mov
push
mov
push
mov
inc
add
neg
shr
sub
sub
mov
pop
jmp
pop
mov
pop
pushl
pop
add
push
mov
sub
add
jmp
sub
jmp
shr
inc
shr
sub
push
mov
mov
jmp
dec
not
xchg
not
push
mov
mov
mov
pop
push
jmp
mov
push
push
jmp
and
shl
add
jmp
mov
jmp
add
pop
xchg
jmp
add
pop
add
xchg
pop
add
sub
mov
mov
add
mov
pop
jmp
pop
xor
add
pop
sub
pop
mov
pop
add
jmp
sub
push
push
mov
dec
push
mov
add
shr
xor
xor
neg
sub
add
pop
mov
pushl
pop
jmp
shl
xor
jmp
mov
add
add
sub
jmp
mov
add
add
add
add
sub
jmp
push
pop
jmp
pushl
jmp
xorl
jmp
mov
mov
push
mov
shl
jmp
push
mov
add
pop
push
mov
sub
pop
xchg
pop
mov
jmp
add
jmp
pop
jmp
neg
sub
sub
add
add
pop
mov
pop
mov
add
sub
sub
pop
jmp
dec
inc
push
mov
jmp
add
sub
jmp
mov
add
pop
xor
xor
xor
mov
push
mov
push
jmp
pop
mov
mov
shr
push
push
jmp
mov
pushl
pushl
pop
jmp
xor
add
sub
jmp
push
sub
mov
push
pop
sub
push
mov
or
pop
xchg
inc
jmp
xchg
pop
sub
jmp
xor
pop
and
not
shr
jmp
mov
pushl
mov
add
popl
jmp
jmp
mov
sub
pop
add
add
jmp
push
mov
and
pop
shl
inc
xor
jmp
push
mov
xor
not
shl
shr
sub
mov
jmp
popl
pop
add
push
jmp
add
jmp
pop
pop
pushl
pop
add
sub
pop
push
mov
shl
xchg
not
xchg
xor
sub
pop
jmp
mov
push
mov
push
jmp
pushl
jmp
mov
mov
push
jmp
push
mov
neg
push
mov
or
sub
and
sub
sub
pop
add
pop
add
xor
xor
xor
jmp
mov
push
mov
jmp
mov
jmp
add
pop
sub
jmp
mov
add
and
jmp
push
mov
mov
add
mov
add
jmp
mov
pop
jmp
sub
xchg
pop
mov
jmp
add
pop
push
pushl
pop
popl
mov
and
pushf
jmp
push
pop
sub
jmp
sub
and
sub
not
add
shl
push
mov
xor
pop
sub
mov
mov
mov
pop
pop
push
mov
push
mov
jmp
pop
jmp
push
mov
sub
pop
pop
push
pushl
jmp
add
add
push
mov
jmp
push
mov
sub
add
sub
push
mov
sub
pop
mov
add
or
pop
push
mov
jmp
push
jmp
sub
jmp
xchg
pop
jmp
pop
jmp
add
pop
mov
jmp
sub
add
add
pop
add
xchg
mov
push
notb
mov
add
xchg
dec
xor
xor
xor
xor
sub
pop
jmp
shl
sub
add
pop
add
xchg
jmp
add
add
jmp
push
mov
push
jmp
mov
pop
sub
pop
add
push
mov
jmp
mov
push
mov
add
sub
xchg
pop
mov
mov
jmp
pop
inc
jmp
mov
xchg
push
mov
xchg
xchg
not
xchg
xchg
pushl
pushl
pop
push
mov
jmp
add
xor
sub
add
sub
push
mov
push
notl
pop
inc
dec
and
jmp
mov
push
addl
jmp
add
jmp
add
mov
pop
dec
neg
and
shr
jmp
push
jmp
xor
jmp
addb
mov
push
mov
add
add
xchg
mov
add
xor
add
mov
pop
and
push
mov
jmp
pop
or
pushl
jmp
push
push
mov
mov
pushl
jmp
lods
xor
pushw
jmp
and
pop
or
je
push
jmp
add
mov
add
add
push
mov
jmp
push
mov
xor
and
sub
jmp
push
mov
jmp
lods
push
jmp
sub
mov
jmp
xor
jmp
add
jmp
push
mov
add
pushl
mov
add
add
mov
pop
xor
jmp
push
mov
sub
pop
xchg
mov
jmp
add
popl
mov
test
pushf
jmp
pop
add
push
mov
push
mov
push
mov
shl
sub
not
add
shl
add
dec
jmp
push
mov
add
push
push
mov
mov
add
mov
push
mov
add
add
xchg
pop
push
mov
inc
jmp
pop
push
mov
jmp
dec
not
push
jmp
add
mov
push
mov
jmp
add
push
mov
push
notb
pop
inc
shl
shl
neg
jmp
pop
jmp
pop
shr
sub
mov
mov
add
sub
xchg
pop
mov
sub
mov
addl
pop
push
mov
shr
shr
push
jmp
add
add
pop
xor
pushl
pop
add
mov
add
push
jmp
add
pop
jmp
sub
mov
mov
jmp
pushl
pushl
pop
push
mov
push
jmp
mov
add
pop
jmp
sub
mov
mov
add
dec
jmp
push
jmp
pop
jmp
pop
add
neg
shr
xor
add
sub
jmp
xor
mov
jmp
and
pushl
mov
add
push
jmp
pop
jmp
mov
push
jmp
mov
mov
add
jmp
mov
mov
add
pop
jmp
push
mov
xor
jmp
add
add
xor
xor
xor
jmp
mov
sub
mov
addl
pop
push
push
push
pushl
pushl
jmp
add
mov
pop
dec
and
push
mov
add
pop
add
add
pop
add
sub
pop
push
pushl
mov
add
popl
mov
popw
sub
jmp
add
push
sub
mov
mov
mov
sub
jmp
not
jmp
add
pop
sub
xchg
jmp
dec
sub
add
pop
shl
push
mov
xor
pop
jmp
push
pop
jmp
xor
pushl
pop
push
mov
jmp
mov
pushl
jmp
sub
mov
jmp
mov
sub
jmp
sub
jmp
mov
push
mov
sub
and
jmp
mov
jmp
pop
pop
pop
xchg
pop
push
mov
add
jmp
push
mov
push
mov
dec
inc
and
or
dec
not
xor
add
pop
add
xchg
pop
push
mov
add
add
xchg
mov
jmp
sub
add
add
pop
xor
xor
xor
pop
or
pushf
jmp
pop
push
push
mov
mov
pop
mov
mov
jmp
add
push
pushl
pop
jmp
shr
and
push
mov
sub
jmp
mov
mov
xor
or
sub
jmp
jmp
shr
xor
inc
not
sub
add
pop
jmp
push
pop
add
push
mov
add
sub
jmp
sub
mov
mov
add
sub
xchg
jmp
add
jmp
sub
pop
xchg
pop
mov
mov
push
xorl
pop
xor
mov
add
pushl
mov
add
add
shl
push
mov
mov
jmp
mov
add
jmp
sub
or
xor
jmp
pop
add
jmp
xor
pop
jmp
mov
jmp
mov
test
pushf
jmp
push
sub
mov
push
jmp
add
xor
xor
xor
mov
mov
mov
push
jmp
sub
jmp
mov
add
pop
jmp
mov
push
mov
push
mov
mov
neg
shl
add
dec
jmp
push
mov
mov
jmp
push
jmp
push
push
mov
mov
jmp
pop
add
mov
jmp
xor
sub
mov
jmp
push
push
jmp
sub
jmp
sub
xchg
mov
mov
sub
mov
push
mov
add
pop
mov
jmp
mov
sub
pop
xchg
mov
jmp
add
add
pop
mov
jmp
addl
addl
subl
add
addl
push
mov
sub
pop
subl
sub
mov
jmp
add
jmp
add
add
push
mov
push
jmp
add
jmp
mov
jmp
pop
jmp
sub
xchg
jmp
pop
pushw
mov
pushw
mov
add
popw
jmp
sub
add
add
push
mov
jmp
add
xchg
pop
popl
mov
shlw
pushf
jmp
push
jmp
shr
add
jmp
xor
jmp
mov
shl
shl
add
xor
pop
push
pop
jmp
add
sub
mov
jmp
add
neg
shl
jmp
push
mov
jmp
push
push
push
mov
add
mov
pop
mov
pop
sub
jmp
sub
xchg
pop
mov
mov
inc
inc
jmp
add
push
mov
sub
mov
jmp
push
mov
add
jmp
sub
pop
sub
mov
mov
sub
mov
mov
xor
mov
add
shr
push
jmp
add
add
add
pop
jmp
xor
jmp
pop
dec
jmp
mov
jmp
pop
mov
mov
shl
shr
xor
sub
jmp
push
push
jmp
mov
mov
mov
add
add
jmp
popl
jmp
push
mov
add
add
xchg
pop
add
mov
add
xor
jmp
mov
sub
mov
mov
add
jmp
mov
add
add
xchg
pop
pop
and
pop
push
mov
jmp
add
shr
not
add
jmp
movzbw
push
sub
mov
push
jmp
mov
jmp
sub
sub
add
jmp
mov
push
mov
jmp
add
pop
xor
xor
xor
pop
mov
jmp
add
xchg
mov
rorl
pushf
jmp
mov
add
sub
push
jmp
pop
and
mov
add
sub
add
mov
add
jmp
mov
add
jmp
sub
add
add
pushl
mov
jmp
sub
mov
jmp
pop
shl
jmp
mov
jmp
pop
add
jmp
mov
jmp
inc
jmp
add
jmp
mov
add
push
mov
sub
add
add
jmp
popl
mov
push
mov
push
push
pop
and
sub
push
addl
jmp
inc
jmp
mov
add
sub
jmp
and
push
mov
xor
pop
jmp
pop
sub
mov
mov
push
mov
mov
sub
sub
sub
add
push
jmp
pop
push
mov
push
jmp
push
mov
jmp
add
sub
sub
mov
add
or
mov
jmp
xchg
mov
jmp
add
add
add
sub
push
mov
dec
not
neg
neg
push
jmp
xor
push
mov
jmp
add
jmp
mov
push
push
pop
add
sub
xchg
mov
mov
mov
push
jmp
mov
mov
jmp
pop
xor
xor
xor
jmp
sub
jmp
not
jmp
pop
popl
pushl
pop
push
push
mov
add
add
push
mov
mov
sub
sub
sub
add
add
sub
pop
xor
xor
xor
pop
push
mov
add
jmp
add
neg
jmp
lods
push
mov
jmp
push
addl
jmp
pop
jmp
mov
push
mov
push
mov
jmp
popl
jmp
pop
jmp
mov
push
mov
mov
sub
mov
add
xor
jmp
shl
push
mov
add
pop
xor
mov
pop
jmp
xchg
pop
popl
mov
pushl
pushl
pop
push
mov
jmp
neg
jmp
pop
push
jmp
mov
jmp
add
not
sub
and
or
push
mov
mov
sub
add
push
jmp
add
sub
jmp
xor
mov
jmp
not
push
mov
sub
pop
add
jmp
add
jmp
pushl
jmp
pop
jmp
add
xor
jmp
xor
add
mov
jmp
mov
add
add
xchg
pop
jmp
mov
mov
push
mov
push
pop
push
mov
mov
add
pop
push
jmp
mov
inc
sub
mov
pop
shl
shr
shr
jmp
sub
pop
push
mov
and
or
xor
jmp
mov
push
push
pop
push
mov
jmp
xor
jmp
popl
mov
push
jmp
push
xchg
not
push
pushl
mov
add
popl
mov
add
shl
push
jmp
mov
jmp
sub
mov
pushl
pop
jmp
shr
inc
add
jmp
mov
mov
pop
sub
pop
add
sub
sub
pop
jmp
mov
push
mov
add
add
push
mov
add
sub
jmp
add
add
xor
xor
xor
pop
jmp
mov
jmp
mov
jmp
sub
sub
jmp
mov
pop
shl
not
and
not
sub
sub
add
jmp
not
push
jmp
pushl
pop
push
mov
push
pop
add
jmp
add
pop
pushl
mov
add
jmp
pop
sub
mov
mov
jmp
pop
add
push
mov
mov
sub
jmp
mov
mov
pop
mov
add
pushl
jmp
add
sub
xchg
pop
mov
push
mov
mov
jmp
neg
jmp
sub
jmp
pushl
jmp
push
mov
jmp
add
xchg
mov
push
push
pop
push
mov
add
jmp
xchg
pop
mov
pushl
pop
jmp
sub
pop
xor
xor
xor
mov
mov
jmp
xchg
pop
jmp
mov
push
pop
pop
add
jmp
mov
jmp
add
jmp
push
push
pop
jmp
add
xchg
pop
jmp
push
jmp
pop
mov
push
mov
push
push
push
pop
dec
or
inc
xor
mov
pop
inc
push
mov
jmp
sub
mov
push
mov
jmp
push
pushl
jmp
pop
and
jmp
mov
jmp
xchg
mov
popl
pop
jmp
mov
btr
pushf
jmp
not
add
add
add
pop
add
xchg
pop
add
dec
push
mov
mov
xchg
push
xchg
not
jmp
addl
pushl
pop
jmp
pop
jmp
mov
push
mov
push
pop
add
push
mov
xor
push
mov
jmp
pop
shr
not
and
inc
jmp
pop
push
mov
shl
jmp
and
shr
inc
not
sub
and
pop
not
xor
sub
pop
add
add
jmp
add
add
jmp
mov
mov
shr
add
push
subb
sub
jmp
mov
push
mov
push
pop
push
jmp
pushl
pop
jmp
xor
jmp
pushl
pop
sub
jmp
mov
pushl
pop
sub
mov
push
mov
jmp
xor
xor
pop
movsbl
jmp
add
sub
jmp
sub
jmp
push
mov
add
sub
mov
mov
jmp
sub
xchg
pop
mov
push
mov
mov
jmp
neg
neg
push
jmp
dec
not
add
add
pop
sub
sub
and
pop
or
inc
sub
sub
pop
push
mov
push
pop
push
mov
push
mov
inc
push
mov
shr
shl
shr
jmp
xor
shr
xor
sub
pop
add
add
mov
jmp
sub
xor
pop
xor
mov
push
mov
mov
push
jmp
push
mov
jmp
push
mov
jmp
add
sub
sub
pop
add
jmp
mov
add
mov
add
add
xchg
jmp
add
jmp
push
jmp
push
mov
add
jmp
jmp
mov
push
mov
sub
pop
jmp
and
jmp
mov
add
and
neg
shr
jmp
dec
shl
add
xchg
jmp
push
mov
add
add
jmp
sub
dec
jmp
mov
push
pop
add
jmp
not
sub
sub
mov
pop
jmp
push
mov
mov
add
push
jmp
mov
sub
mov
jmp
push
mov
sub
push
mov
add
pop
add
jmp
push
mov
add
add
sub
pop
sub
add
add
sub
add
push
mov
sub
pushl
jmp
add
add
neg
sub
not
xor
push
mov
add
pop
xor
jmp
xor
mov
push
jmp
mov
add
pop
add
pushl
mov
jmp
mov
add
pop
shr
and
jmp
add
add
sub
add
sub
pushl
pop
push
jmp
mov
mov
add
jmp
not
push
push
push
pop
add
push
mov
jmp
pop
add
jmp
xor
jmp
push
mov
jmp
mov
or
sub
sub
pop
shr
add
sub
pop
inc
shr
push
push
mov
mov
mov
pop
add
mov
add
jmp
lods
add
push
mov
jmp
pop
add
add
push
pushl
pop
popl
pop
jmp
add
add
xchg
pop
jmp
sub
pop
and
mov
push
push
pop
push
mov
add
pushl
pop
add
add
xchg
pop
jmp
push
jmp
sub
pop
add
jmp
add
shl
sub
mov
push
mov
mov
pop
inc
shl
jmp
mov
pop
push
mov
mov
pop
mov
jmp
push
jmp
mov
xor
jmp
add
add
jmp
mov
jmp
sub
jmp
xchg
not
xor
xor
xor
jmp
push
mov
add
add
xchg
pop
push
mov
mov
push
mov
mov
jmp
push
mov
jmp
push
mov
add
jmp
mov
jmp
push
mov
jmp
mov
push
mov
jmp
push
mov
shr
sub
add
pop
sub
mov
push
mov
jmp
pop
xor
pop
push
mov
push
mov
push
jmp
neg
add
add
add
jmp
mov
xor
pop
or
jmp
push
mov
jmp
jmp
add
xchg
pop
push
mov
xor
pushl
jmp
add
pop
add
shl
add
xor
jmp
pop
push
mov
jmp
push
mov
dec
and
not
jmp
add
pop
shl
push
mov
not
sub
sub
mov
add
push
mov
mov
jmp
neg
sub
jmp
push
mov
jmp
add
jmp
add
jmp
push
mov
mov
jmp
mov
push
pushl
pop
sub
mov
mov
add
jmp
xor
sub
pop
pop
add
mov
add
pop
push
mov
push
mov
push
mov
mov
pop
mov
add
jmp
push
push
mov
mov
shr
neg
add
mov
pop
jmp
shl
sub
add
xor
pop
add
mov
add
add
xor
xor
jmp
push
mov
add
push
push
pop
jmp
add
add
pop
mov
add
jmp
push
mov
jmp
xor
push
mov
add
jmp
xchg
dec
not
xchg
sub
jmp
mov
mov
mov
push
push
mov
jmp
sub
xor
pop
mov
jmp
mov
sub
mov
push
jmp
xor
pop
push
push
pop
push
push
mov
push
pop
pop
add
mov
jmp
pushl
mov
sub
mov
mov
sub
mov
sub
mov
mov
shr
jmp
add
pop
jmp
add
jmp
add
xchg
pop
jmp
neg
jmp
mov
mov
sub
mov
mov
shl
push
jmp
xor
xor
xor
jmp
mov
shr
sub
sub
pop
mov
add
jmp
add
add
jmp
mov
jmp
add
xor
xor
xor
mov
shrl
pushf
jmp
pushl
pushl
pop
add
push
mov
mov
push
mov
inc
jmp
shl
jmp
add
sub
push
mov
sub
sub
add
add
pop
pushl
pop
push
mov
add
add
xor
xor
xor
jmp
push
mov
add
neg
add
neg
push
jmp
xor
mov
add
push
mov
mov
pop
pop
sub
add
push
mov
add
pop
pushl
pushl
pop
jmp
add
sub
xchg
jmp
mov
jmp
pushl
jmp
pop
jmp
sub
add
jmp
add
jmp
shl
not
shl
jmp
mov
shr
push
mov
or
jmp
mov
push
mov
mov
add
pop
sub
mov
push
mov
mov
add
pop
xor
pop
add
mov
jmp
mov
push
pushl
pop
popl
xchg
not
xchg
xchg
pop
sub
mov
jmp
xchg
not
xor
xor
xor
push
mov
push
mov
jmp
mov
jmp
shl
dec
not
jmp
push
push
mov
mov
jmp
push
pushl
pop
popl
jmp
sub
mov
mov
push
mov
add
pop
jmp
sub
sub
sub
add
push
mov
sub
add
add
pop
pop
jmp
mov
push
notl
jmp
push
mov
add
add
xchg
pop
popl
jmp
mov
and
pushl
jmp
mov
pushl
pop
add
push
mov
push
push
pop
push
mov
mov
sub
mov
add
jmp
pop
jmp
pushl
mov
push
mov
add
add
xchg
jmp
xor
jmp
mov
add
push
mov
add
mov
add
jmp
add
add
sub
mov
mov
add
shr
add
add
jmp
pop
xor
jmp
xchg
pop
push
push
jmp
mov
jmp
pop
jmp
push
mov
jmp
mov
mov
push
mov
push
jmp
shr
jmp
mov
push
mov
jmp
mov
pop
and
push
mov
shr
and
sub
jmp
dec
xor
jmp
add
push
mov
mov
sub
pop
jmp
mov
mov
add
jmp
mov
sub
mov
jmp
push
jmp
sub
mov
pushl
mov
push
mov
push
mov
push
mov
add
pop
or
jmp
xor
jmp
mov
dec
xor
sub
sub
sub
pop
push
mov
sub
sub
add
jmp
push
mov
mov
sub
jmp
mov
add
pop
add
xchg
mov
push
mov
jmp
push
jmp
push
pop
or
jmp
jmp
pushl
mov
add
add
and
mov
add
jmp
mov
push
mov
or
xor
push
mov
jmp
xor
pop
jmp
sub
add
add
mov
jmp
push
pop
push
mov
push
negl
pop
jmp
push
mov
pushl
jmp
and
jmp
mov
add
xor
movzbl
pushl
jmp
xor
add
pop
add
sub
pop
add
push
pushl
jmp
add
xchg
pop
push
mov
neg
jmp
add
add
xchg
pop
sub
jmp
sub
jmp
dec
sub
push
mov
push
mov
shr
xor
sub
xor
jmp
add
jmp
mov
mov
sub
pop
push
mov
push
push
jmp
popl
pop
popl
mov
idiv
push
push
jmp
mov
add
jmp
pop
pop
jmp
popl
mov
popl
mov
sarl
pushf
jmp
sub
sub
pushl
pop
add
push
mov
xor
jmp
push
push
popl
jmp
push
jmp
mov
sub
mov
mov
add
push
jmp
and
pop
push
mov
or
jmp
pushl
pop
jmp
sub
add
mov
add
jmp
push
mov
add
add
xchg
pop
std
push
mov
push
pop
sub
sub
mov
jmp
push
mov
push
mov
jmp
mov
jmp
inc
push
mov
xor
pop
dec
jmp
sub
sub
pushl
pop
add
push
mov
jmp
pop
or
je
pushl
jmp
add
xchg
jmp
xor
push
mov
sub
pop
sub
and
push
push
mov
jmp
push
mov
jmp
push
jmp
sub
add
add
jmp
push
jmp
xor
push
jmp
add
xchg
jmp
push
mov
not
sub
jmp
sub
mov
push
mov
jmp
pushl
mov
add
add
push
mov
push
mov
sub
add
push
jmp
sub
mov
mov
jmp
pop
jmp
add
add
jmp
pop
xchg
pop
push
mov
add
mov
jmp
sub
jmp
pop
shl
push
jmp
mov
push
push
mov
shl
jmp
add
jmp
shr
shr
shr
push
mov
sub
add
jmp
add
add
mov
add
jmp
lods
sub
mov
jmp
add
pop
jmp
xchg
pop
xor
pushl
jmp
pop
sub
sub
sub
add
push
mov
jmp
pop
jmp
sub
add
jmp
mov
jmp
add
or
add
push
mov
mov
add
pop
jmp
push
push
jmp
sub
push
jmp
pop
add
xor
jmp
add
shl
add
add
pushl
pop
add
mov
add
push
mov
sub
push
jmp
mov
jmp
mov
not
sub
push
jmp
sub
xchg
pop
mov
jmp
mov
jmp
add
pop
sub
sub
sub
add
pop
sub
add
push
jmp
neg
jmp
mov
add
add
push
sub
mov
jmp
mov
mov
push
jmp
inc
neg
sub
xor
pop
mov
pop
push
mov
mov
sub
add
sub
mov
jmp
inc
and
jmp
add
mov
push
jmp
and
pop
neg
push
mov
jmp
not
not
xor
add
jmp
xor
shl
jmp
add
xchg
pop
xor
xor
xor
jmp
mov
jmp
push
pop
push
mov
sub
pop
jmp
pop
inc
sub
mov
pop
jmp
mov
jmp
pop
xor
movzbl
pushl
jmp
sub
add
jmp
xchg
pop
and
mov
jmp
mov
sub
mov
mov
sub
mov
jmp
sub
add
jmp
push
mov
push
jmp
mov
add
mov
add
jmp
and
push
jmp
shr
xor
xor
xor
pop
add
add
sub
jmp
push
mov
mov
jmp
push
mov
add
mov
add
jmp
push
push
mov
shl
push
mov
jmp
pop
push
mov
or
pop
add
mov
jmp
pop
pushl
pop
push
push
pop
push
mov
mov
jmp
mov
jmp
pop
mov
add
add
mov
pop
push
mov
push
mov
push
mov
add
sub
xchg
jmp
push
mov
jmp
pop
push
mov
mov
xor
pushl
pushl
mov
jmp
inc
push
push
push
jmp
mov
mov
add
shl
sub
push
subl
pop
jmp
push
mov
add
mov
add
mov
jmp
push
mov
mov
sub
pop
and
sub
sub
jmp
mov
push
negl
pop
push
mov
add
pop
push
mov
xor
jmp
push
mov
add
pop
not
and
jmp
sub
add
jmp
mov
sub
jmp
xor
jmp
mov
add
jmp
pop
shr
push
mov
sub
pop
jmp
add
xchg
pop
push
popl
addl
mov
jmp
add
push
mov
push
mov
mov
jmp
sub
mov
jmp
mov
sub
jmp
xor
xor
xor
jmp
pop
mov
jmp
mov
push
push
jmp
xor
push
jmp
pushl
push
popl
pushl
jmp
push
mov
dec
push
jmp
mov
jmp
add
jmp
mov
or
jmp
pop
jmp
add
jmp
sub
sub
add
mov
add
push
mov
shl
xor
add
add
xor
or
pop
push
push
mov
mov
jmp
pushl
jmp
mov
not
or
shr
jmp
pop
xchg
pop
mov
add
pop
jmp
push
mov
jmp
sub
jmp
add
jmp
mov
mov
push
push
mov
mov
pop
mov
mov
add
push
jmp
pop
shr
push
mov
jmp
mov
jmp
and
neg
inc
not
jmp
inc
jmp
mov
pushl
pop
popl
jmp
pushl
mov
push
mov
push
jmp
xor
jmp
push
subl
pop
add
jmp
pop
add
xor
xor
xor
pop
jmp
mov
and
sub
sub
sub
neg
jmp
mov
push
mov
and
jmp
push
jmp
sub
sub
jmp
movzbw
push
pushf
jmp
mov
shr
jmp
xor
add
mov
add
sub
push
mov
pushl
pop
popl
pop
push
jmp
pushl
mov
push
jmp
sub
xor
neg
push
push
mov
mov
pop
xor
pop
mov
pop
and
xor
push
jmp
pop
add
pop
sub
add
add
sub
pop
add
jmp
add
pop
jmp
add
jmp
push
mov
mov
add
push
mov
jmp
pop
jmp
sub
jmp
sub
mov
add
or
pop
jmp
xor
jmp
add
add
jmp
lods
sub
push
mov
add
jmp
push
mov
inc
neg
jmp
mov
jmp
pop
shl
add
sub
pop
sub
jmp
lods
xor
push
sub
mov
push
push
mov
mov
pop
push
push
jmp
push
subl
pop
add
pop
xor
jmp
mov
jmp
pop
pop
sub
jmp
add
mov
jmp
add
push
mov
jmp
push
mov
jmp
popl
push
mov
jmp
pop
sub
mov
pop
mov
jmp
mov
sub
pop
xor
xor
xor
jmp
pop
jmp
push
mov
jmp
push
jmp
push
jmp
mov
add
pop
push
mov
sub
add
jmp
mov
add
jmp
shr
inc
push
mov
jmp
sub
mov
mov
add
sub
xchg
jmp
sub
pushl
pop
add
pop
jmp
add
jmp
xor
pop
jmp
pop
or
shl
push
mov
push
mov
add
jmp
pop
add
push
mov
jmp
pop
add
jmp
pop
jmp
and
pop
sub
add
xor
pop
xor
jmp
xchg
mov
jmp
add
push
push
push
pop
sub
jmp
mov
jmp
xor
jmp
mov
push
mov
add
add
xchg
pop
push
push
pop
push
mov
push
push
mov
jmp
sub
pop
sub
add
jmp
mov
add
jmp
mov
jmp
xchg
pop
add
popl
mov
pushl
mov
jmp
push
mov
jmp
pop
push
xorl
mov
add
xor
pop
mov
jmp
jmp
add
pushl
jmp
push
push
pop
xor
add
jmp
push
pop
push
jmp
pop
jmp
sub
jmp
xor
xor
xor
jmp
pop
jmp
mov
and
jmp
mov
or
push
incl
mov
sub
mov
push
mov
addl
pop
add
add
jmp
add
sub
sub
pop
add
add
jmp
neg
shl
xor
add
xor
jmp
shl
add
xor
mov
pop
jmp
mov
pop
add
not
jmp
pop
xor
pop
xor
pop
push
jmp
push
pop
push
mov
sub
jmp
push
mov
jmp
add
push
addl
pop
sub
pop
neg
shl
inc
add
add
pop
jmp
sub
mov
mov
push
pop
pop
add
mov
add
xor
xor
xor
mov
bts
pushf
jmp
mov
jmp
mov
jmp
push
mov
jmp
mov
mov
add
jmp
lods
push
mov
push
pop
push
jmp
xor
add
jmp
push
mov
mov
pop
jmp
pop
push
push
pop
add
add
push
pushl
pop
jmp
add
xchg
mov
push
mov
jmp
push
pop
jmp
add
sub
add
mov
jmp
push
push
push
jmp
inc
neg
sub
jmp
mov
add
jmp
push
mov
mov
pop
jmp
addl
mov
jmp
add
sub
push
jmp
xor
pop
add
pop
mov
pop
and
jmp
push
mov
sub
mov
add
add
add
add
push
mov
mov
push
mov
push
jmp
xor
sub
pop
pop
add
jmp
mov
add
jmp
mov
mov
pop
inc
jmp
add
push
mov
mov
sub
sub
pop
jmp
pop
add
sub
jmp
mov
mov
mov
add
push
mov
mov
sub
pop
sub
push
mov
mov
add
sub
xor
xor
xor
jmp
sub
jmp
mov
jmp
and
xor
and
jmp
push
mov
inc
add
add
mov
jmp
sub
jmp
mov
jmp
add
mov
jmp
pop
not
jmp
mov
inc
inc
shr
sub
neg
jmp
add
jmp
negl
mov
add
sub
add
pop
pushl
mov
add
add
jmp
mov
xor
pop
push
mov
push
mov
sub
pop
pop
add
jmp
add
jmp
mov
add
pop
jmp
mov
jmp
add
pop
add
xchg
jmp
xor
inc
add
xor
pop
sub
pop
pop
push
push
mov
mov
pop
add
pop
sub
jmp
xor
pop
xor
sub
mov
pop
add
jmp
pushl
pop
popl
pop
push
mov
sub
push
mov
sub
mov
pushl
mov
add
popl
jmp
push
mov
add
add
xchg
jmp
xor
xor
xor
mov
mov
jmp
or
shl
xchg
jmp
mov
mov
pop
add
push
notl
pop
push
mov
add
neg
add
push
mov
add
pop
sub
jmp
sub
add
jmp
push
jmp
pop
push
mov
push
mov
push
mov
mov
pop
mov
mov
push
mov
add
jmp
push
push
jmp
and
mov
add
add
push
jmp
add
sub
jmp
pop
xor
mov
push
mov
add
jmp
sub
sub
push
mov
add
jmp
mov
neg
shl
or
not
add
push
mov
add
pop
add
sub
pop
jmp
pop
mov
push
jmp
mov
sub
jmp
push
mov
mov
xor
pop
add
pop
neg
sub
sub
pop
sub
jmp
add
push
mov
sub
jmp
xor
xor
jmp
pop
add
jmp
mov
push
mov
mov
mov
pop
sub
mov
add
jmp
pop
jmp
neg
xor
add
mov
pop
jmp
add
mov
jmp
mov
pop
sub
sub
sub
add
push
mov
sub
jmp
xor
jmp
mov
jmp
push
mov
push
push
jmp
push
mov
push
mov
sub
mov
add
dec
push
mov
sub
xor
pop
sub
sub
jmp
xor
shl
shl
jmp
pushl
jmp
mov
jmp
add
mov
push
mov
add
add
xchg
pop
add
add
jmp
add
xchg
pop
popl
mov
shrb
pushf
jmp
mov
mov
pop
pop
or
jmp
push
jmp
add
xchg
pop
sub
mov
mov
add
pop
jmp
popl
mov
jmp
add
xchg
jmp
negl
pushf
jmp
mov
add
add
xchg
mov
roll
pushf
jmp
sub
mov
mov
add
pop
jmp
mov
push
mov
push
pop
pop
jmp
add
pop
sub
jmp
mov
mov
push
mov
mov
push
push
jmp
add
jmp
add
add
jmp
push
mov
sub
pop
push
mov
sub
pop
mov
jmp
xchg
jmp
push
mov
xor
pop
mov
jmp
xor
add
jmp
pop
sub
add
push
mov
or
sub
add
mov
add
sub
pushl
jmp
mov
not
jmp
mov
sub
jmp
mov
mov
push
mov
push
jmp
mov
jmp
mov
add
dec
xchg
not
xor
xor
jmp
mov
push
push
pop
add
push
mov
mov
neg
jmp
sub
mov
pop
add
sub
sub
pop
sub
add
push
mov
add
pop
jmp
mov
jmp
push
mov
jmp
add
pushl
pop
add
sub
sub
add
add
sub
add
push
mov
add
jmp
mov
mov
add
shl
push
mov
and
pop
push
jmp
pop
sub
pop
push
mov
xor
jmp
popl
push
mov
jmp
shr
add
add
pop
add
xor
xor
jmp
push
mov
addl
pop
add
add
xchg
mov
jmp
mov
mov
jmp
add
add
pop
push
mov
push
mov
sub
neg
neg
neg
neg
xor
mov
pop
add
pop
xor
xor
xor
jmp
push
jmp
dec
xor
jmp
add
xor
jmp
push
push
popl
push
mov
jmp
mov
push
mov
mov
pop
pop
pop
add
add
jmp
xor
pop
push
mov
push
mov
push
jmp
add
sub
pop
not
add
sub
pop
mov
jmp
sub
pop
pop
jmp
pop
popl
pop
add
pop
mov
push
jmp
pop
mov
add
sub
mov
push
mov
jmp
jmp
mov
add
and
xor
or
xor
sub
pushl
pop
jmp
pop
push
pushl
pop
jmp
pushl
pop
jmp
sub
dec
push
jmp
push
jmp
add
not
and
add
sub
pop
push
jmp
mov
push
mov
not
mov
pop
push
jmp
xor
and
pop
shr
xor
xor
jmp
sub
mov
push
push
jmp
shr
neg
push
push
mov
jmp
mov
mov
push
mov
jmp
sub
add
jmp
mov
jmp
mov
jmp
neg
add
jmp
mov
add
jmp
mov
jmp
mov
sub
add
add
jmp
mov
mov
add
pop
jmp
push
mov
sub
pop
jmp
add
add
pop
jmp
push
mov
add
mov
add
jmp
mov
mov
add
pop
jmp
add
pop
xchg
mov
movzbl
push
jmp
mov
jmp
add
mov
add
xor
pushl
pop
push
push
jmp
push
pop
push
jmp
pop
add
add
jmp
push
jmp
pop
push
mov
jmp
mov
jmp
add
pushl
subl
pushl
pop
push
push
pop
add
add
xchg
mov
jmp
sub
pop
push
mov
neg
neg
jmp
add
sub
sub
add
pushl
pop
jmp
and
xor
jmp
mov
push
pop
shr
push
mov
push
pushl
jmp
push
mov
push
mov
add
pop
jmp
add
pop
sub
sub
pop
mov
add
push
mov
add
pop
jmp
mov
shl
neg
sub
jmp
add
jmp
push
jmp
xchg
pop
push
mov
mov
sub
add
jmp
mov
add
add
xchg
pop
push
mov
sub
mov
mov
add
pop
push
mov
xor
and
jmp
pop
xor
add
pop
jmp
sub
pop
jmp
and
shl
xor
add
pop
add
xchg
mov
popl
mov
shll
pushf
jmp
subl
add
addl
jmp
add
jmp
mov
add
pushl
pop
add
add
sub
sub
pop
jmp
pop
mul
jmp
notl
pop
or
add
push
jmp
mov
mov
pop
mov
add
pop
jmp
pushl
jmp
push
mov
mov
add
pop
add
sub
jmp
mov
sub
not
jmp
add
pop
push
pushl
pop
popl
mov
jmp
push
jmp
push
push
mov
jmp
add
pop
jmp
xor
sub
dec
add
or
pop
sub
neg
xor
mov
pop
jmp
add
add
pushl
mov
add
push
mov
add
add
jmp
mov
jmp
add
jmp
xor
xor
xor
mov
sarb
pushf
jmp
add
mov
add
xor
xor
xor
pop
mov
push
jmp
and
not
and
jmp
pop
add
xor
xor
xor
mov
jmp
sub
not
inc
shl
push
jmp
mov
add
sub
jmp
push
mov
push
push
push
pop
inc
sub
jmp
pop
jmp
pushl
jmp
xor
xor
mov
jmp
push
mov
addl
mov
jmp
pop
sub
add
add
sub
jmp
add
jmp
xor
pushl
pop
push
jmp
push
mov
neg
push
mov
jmp
add
sub
mov
pushl
pushl
pop
push
mov
add
add
jmp
mov
push
mov
add
pop
jmp
xor
jmp
push
push
mov
not
neg
jmp
mov
jmp
and
push
notl
pop
sub
jmp
pop
push
push
mov
jmp
xor
xor
xor
jmp
and
or
shr
add
or
pop
xor
push
mov
mov
mov
add
pop
and
jmp
shr
push
mov
push
pop
jmp
push
mov
jmp
add
add
add
sub
jmp
xor
jmp
push
push
pop
push
mov
mov
and
sub
sub
jmp
pushl
pushl
jmp
pop
push
mov
jmp
pop
popl
pushl
pop
add
push
push
mov
push
mov
add
pop
jmp
xor
pop
sub
mov
push
mov
add
push
mov
mov
jmp
push
mov
push
jmp
add
mov
add
add
xor
jmp
add
add
jmp
xor
jmp
xorl
pop
jmp
push
mov
jmp
pop
add
sub
add
pop
push
notl
jmp
xchg
mov
mov
jmp
push
mov
jmp
sub
mov
add
and
pop
shr
push
jmp
or
shr
or
jmp
pop
push
jmp
pop
push
pushl
pushl
jmp
popl
pop
mov
push
jmp
push
mov
sub
pop
jmp
add
sub
pop
and
mov
jmp
sub
pop
xchg
mov
sub
mov
addl
popl
addl
mov
push
mov
push
push
push
pop
shr
shr
jmp
pushl
mov
jmp
push
mov
push
mov
push
xorl
pop
jmp
mov
push
jmp
add
push
mov
mov
add
pushl
jmp
pop
add
sub
pop
xor
xor
xor
pop
mov
jmp
push
jmp
push
mov
jmp
add
pop
add
pushl
pop
add
jmp
push
push
push
mov
jmp
add
push
mov
add
push
jmp
shr
push
mov
and
add
sub
sub
add
pop
mov
pop
jmp
pop
pop
xchg
mov
sub
pushf
jmp
sub
xchg
pop
jmp
mov
add
push
mov
mov
pop
pushl
pop
add
not
jmp
pushw
mov
mov
jmp
pushl
mov
add
popl
mov
movswl
push
mov
jmp
xor
mov
mov
push
mov
mov
push
push
push
jmp
xor
jmp
push
mov
add
add
pop
push
pushl
pop
popl
pop
inc
add
add
sub
sub
jmp
add
push
mov
push
mov
mov
pop
jmp
push
mov
jmp
push
jmp
add
mov
pop
mov
jmp
sub
sub
add
pushl
pop
add
push
mov
shr
inc
neg
and
add
add
sub
jmp
dec
sub
xor
jmp
pop
add
xor
xor
jmp
addl
pushl
jmp
xor
mov
push
mov
push
mov
push
mov
push
mov
and
jmp
pop
jmp
sub
sub
mov
add
sub
jmp
add
pop
add
xchg
mov
pushl
mov
push
mov
mov
push
mov
shl
jmp
jmp
push
mov
mov
shl
shl
and
add
sub
jmp
push
mov
jmp
jmp
add
jmp
notb
pop
mov
pop
push
jmp
pop
popl
pop
jmp
sub
mov
mov
sub
mov
jmp
mov
jmp
pop
jmp
pop
inc
jmp
pop
push
jmp
add
mov
add
jmp
pop
add
jmp
mov
pop
and
shl
and
shr
dec
add
mov
pop
sub
pop
jmp
mov
dec
dec
jmp
add
jmp
sub
sub
push
mov
add
pop
pop
xor
jmp
pop
popl
mov
add
jmp
mov
mov
pop
mov
mov
pop
pop
push
push
mov
mov
mov
add
shl
jmp
push
jmp
push
push
pop
push
mov
and
and
shr
add
sub
pop
push
pop
jmp
lods
sub
mov
push
pop
and
jmp
mov
add
jmp
add
pop
sub
add
sub
mov
mov
or
add
add
mov
add
mov
jmp
push
mov
add
add
xchg
pop
push
mov
dec
jmp
mov
add
add
add
mov
pop
jmp
not
jmp
mov
jmp
add
and
jmp
mov
add
pushl
jmp
jmp
dec
jmp
not
jmp
mov
jmp
sub
xor
mov
pop
add
jmp
not
jmp
push
mov
jmp
add
add
jmp
pop
add
add
xchg
pop
popl
mov
pushl
pop
sub
mov
mov
jmp
push
addl
jmp
push
mov
add
jmp
mov
add
shr
dec
push
mov
jmp
push
pop
xor
jmp
pushl
pop
add
sub
mov
mov
push
mov
add
sub
sub
add
add
add
sub
mov
add
push
jmp
pushl
mov
push
mov
add
jmp
shl
jmp
and
jmp
sub
pop
add
jmp
sub
xor
pop
shl
xchg
not
xchg
jmp
xor
mov
add
jmp
add
pop
xor
jmp
add
sub
jmp
pop
mov
pop
and
shl
shr
push
mov
dec
and
push
mov
shl
and
not
shr
add
xor
pop
jmp
and
shl
jmp
not
not
push
jmp
push
jmp
sub
sub
mov
add
push
mov
push
mov
mov
push
mov
xor
dec
jmp
mov
add
and
pop
xor
sub
pop
mov
add
jmp
shr
add
or
mov
add
xor
push
push
mov
mov
pop
jmp
mov
add
shl
push
mov
neg
jmp
mov
add
jmp
mov
inc
shr
add
dec
push
push
mov
push
mov
mov
mov
pop
xor
shr
sub
dec
sub
xor
mov
jmp
push
mov
push
jmp
mov
push
mov
push
jmp
pop
add
add
xchg
pop
push
mov
sub
jmp
sub
sub
pop
xchg
mov
jmp
push
mov
add
sub
xchg
mov
jmp
mov
jmp
mov
shl
add
jmp
push
mov
sub
pop
xchg
pop
mov
jmp
push
subl
jmp
add
sub
add
pop
push
pushl
pushl
mov
add
add
popl
mov
movzbw
jmp
mov
push
mov
jmp
push
pushl
jmp
inc
or
push
mov
mov
xor
pop
mov
mov
sub
mov
mov
add
add
xchg
pop
add
pop
push
mov
add
sub
jmp
sub
jmp
add
sub
xchg
mov
mov
mov
inc
shr
jmp
mov
pushw
jmp
imul
jmp
sub
sub
jmp
push
push
pop
jmp
mov
add
popl
mov
add
jmp
mov
notl
addl
jmp
mov
mov
mov
add
mov
jmp
pop
pop
jmp
shr
jmp
dec
shr
push
sub
pop
xor
jmp
mov
jmp
pop
pop
push
mov
or
pop
push
push
mov
mov
jmp
push
mov
sub
pop
add
jmp
sub
xor
xor
xor
jmp
xor
mov
mov
jmp
add
jmp
mov
sub
mov
subl
mov
add
push
mov
and
or
push
jmp
push
jmp
push
mov
jmp
sub
mov
jmp
push
mov
sub
pop
push
push
pop
sub
add
sub
sub
jmp
mov
push
pop
push
push
push
jmp
push
mov
mov
jmp
pop
mov
mov
add
not
xor
push
mov
xor
pop
add
add
push
mov
or
neg
neg
xor
sub
pop
pop
sub
xchg
mov
jmp
add
jmp
mov
mov
add
push
jmp
add
push
jmp
pop
jmp
mov
mov
push
push
jmp
mov
xchg
not
xchg
mov
add
xor
jmp
push
mov
jmp
push
mov
add
pushl
pop
add
xor
xor
xor
jmp
mov
mov
sub
jmp
mov
pop
push
mov
or
mov
add
push
mov
sub
pop
shl
sub
mov
mov
shl
sub
add
add
jmp
mov
add
push
mov
jmp
pop
add
mov
add
jmp
mov
push
mov
jmp
mov
push
jmp
xchg
pop
add
push
mov
push
mov
add
pop
jmp
shr
jmp
pop
subl
addl
add
subl
push
jmp
sub
jmp
pushl
popf
pop
adc
pushf
jmp
pop
pop
sub
xchg
jmp
mov
not
mov
pop
not
or
jmp
mov
mov
pop
pop
pop
add
jmp
pop
xchg
pop
mov
jmp
mov
add
pop
sub
pop
mov
xor
pop
shr
jmp
mov
sub
jmp
sub
xchg
pop
mov
mov
or
inc
jmp
mov
push
pop
not
push
mov
add
sub
jmp
mov
dec
or
sub
xor
jmp
sub
add
jmp
mov
jmp
subl
pop
jmp
dec
xor
add
mov
push
mov
jmp
pop
add
xor
xor
jmp
shr
not
xor
jmp
add
add
pop
xor
jmp
mov
add
jmp
add
shl
shl
add
jmp
xchg
pop
mov
jmp
push
mov
jmp
mov
jmp
or
sub
jmp
mov
add
push
mov
jmp
mov
add
jmp
push
push
jmp
mov
sub
mov
sub
jmp
xor
mov
pop
inc
push
mov
sub
mov
mov
push
mov
add
xor
pushl
pop
add
push
jmp
mov
pop
pop
push
mov
sub
pop
jmp
xor
xor
mov
jmp
push
mov
push
pop
shl
push
jmp
add
pop
jmp
mov
jmp
shl
sub
sub
sub
sub
pop
sub
sub
add
add
pop
jmp
push
mov
jmp
mov
push
sub
mov
addl
pop
jmp
mov
add
shr
inc
xchg
not
xor
xor
xor
push
push
jmp
push
jmp
mov
mov
add
push
mov
add
jmp
mov
inc
jmp
pop
push
jmp
add
popl
pop
shlw
pushf
jmp
neg
shl
dec
push
jmp
and
jmp
push
mov
xchg
not
xchg
push
push
mov
mov
pop
push
jmp
pushl
pushl
pop
add
add
xor
pushl
pop
add
movzbw
pushw
mov
jmp
add
add
jmp
xchg
xor
shr
not
xor
add
add
sub
pop
jmp
mov
sub
jmp
mov
jmp
push
jmp
add
subl
jmp
push
pop
sub
mov
jmp
pop
jmp
pop
pop
push
jmp
mov
or
jmp
push
mov
sub
sub
pop
jmp
sub
xor
jmp
push
pop
sub
mov
mov
push
jmp
neg
shl
push
jmp
mov
pop
add
add
add
sub
sub
pop
jmp
pop
jmp
sub
mov
mov
xor
jmp
mov
jmp
sub
jmp
add
pop
sub
xor
pop
neg
add
jmp
push
mov
shl
add
add
pop
jmp
pop
push
mov
mov
jmp
add
sub
jmp
pop
push
jmp
mov
add
push
mov
mov
sub
add
jmp
not
jmp
sub
sub
sub
pop
push
mov
xor
xor
mov
add
sub
pop
mov
add
jmp
mov
push
mov
add
add
xchg
pop
jmp
push
push
pop
dec
inc
or
add
mov
pop
sub
add
add
jmp
not
neg
sub
add
pushl
pop
add
add
push
mov
pushl
mov
push
mov
jmp
popl
addl
pop
add
jmp
mov
mov
neg
jmp
add
push
mov
push
push
mov
or
shl
add
jmp
pop
mov
mov
inc
push
mov
notl
pop
push
jmp
jmp
pushl
jmp
popl
jmp
mov
jmp
xchg
mov
jmp
add
push
mov
push
push
mov
mov
sub
mov
push
mov
jmp
dec
and
or
push
mov
jmp
mov
jmp
push
jmp
dec
add
jmp
pushl
popf
pop
rcrl
pushf
jmp
pop
jmp
push
jmp
add
jmp
and
jmp
add
pop
add
sub
jmp
mov
add
push
push
jmp
add
xchg
pop
push
mov
and
mov
push
push
pop
add
add
jmp
sub
xor
pop
jmp
add
pop
xchg
pop
push
jmp
sub
pop
jmp
pop
push
mov
add
add
jmp
add
pop
push
mov
pushl
pop
jmp
pushl
mov
jmp
mov
jmp
sub
pop
jmp
pop
imul
push
jmp
mov
xchg
not
jmp
add
xchg
jmp
push
push
mov
mov
push
mov
push
pop
pop
mov
push
mov
mov
add
add
xchg
mov
push
push
push
jmp
pop
jmp
mov
jmp
mov
add
sub
mov
pushl
pop
popl
pop
mov
jmp
push
mov
jmp
mov
mov
push
jmp
mov
add
pop
add
xor
xor
jmp
push
mov
shl
shr
jmp
xchg
pop
jmp
sub
push
mov
jmp
push
push
push
pop
and
xor
jmp
mov
jmp
xor
xchg
sub
mov
notl
pop
shr
not
push
push
mov
mov
pop
jmp
push
mov
pushl
mov
jmp
mov
jmp
mov
jmp
xor
popl
jmp
mov
jmp
add
mov
add
push
jmp
shlb
pushf
jmp
add
jmp
add
add
pop
push
mov
add
jmp
not
push
mov
pushl
jmp
pop
jmp
mov
add
pop
sub
mov
jmp
shl
xor
jmp
push
mov
push
jmp
pushl
pop
add
push
mov
sub
add
add
pop
xchg
mov
test
pushf
jmp
sub
push
jmp
popl
mov
mov
push
jmp
add
addl
mov
add
jmp
mov
jmp
xchg
pop
sub
jmp
mov
add
inc
shr
add
jmp
add
sub
mov
jmp
xor
xor
mov
div
pushw
jmp
push
mov
jmp
add
add
push
mov
sub
jmp
add
xchg
pop
push
mov
dec
sub
push
mov
sub
jmp
mov
push
mov
jmp
mov
add
sub
xchg
pop
mov
mov
add
pop
jmp
push
jmp
push
mov
sub
pop
pop
xor
xor
jmp
add
pop
sub
mov
mov
xor
sub
sub
add
pop
xchg
pop
push
jmp
not
jmp
add
pop
mov
jmp
xorw
pop
jmp
mov
add
pop
xchg
pop
xchg
mov
mov
push
push
push
popl
push
mov
mov
add
add
jmp
add
sub
add
push
push
mov
jmp
sub
mov
mov
push
mov
sub
pop
push
notl
pop
push
jmp
add
add
pushl
pop
push
mov
push
mov
jmp
add
push
jmp
pushl
pop
jmp
mov
add
jmp
pop
mov
pushl
mov
add
add
jmp
push
jmp
or
mov
add
jmp
add
add
jmp
pop
popl
mov
sub
mov
push
mov
jmp
pushl
jmp
sub
mov
jmp
push
push
mov
mov
pop
push
mov
mov
sub
add
pop
jmp
sub
sub
jmp
push
pop
push
mov
inc
and
and
xor
add
mov
add
push
mov
shl
sub
add
mov
add
sub
mov
jmp
sub
xchg
pop
mov
push
mov
push
jmp
mov
pop
sub
xor
sub
sub
mov
push
mov
xor
pop
jmp
rolb
pushf
jmp
push
jmp
jmp
push
mov
push
mov
and
xor
add
pop
add
xchg
pop
mov
add
add
xor
xor
xor
mov
push
push
push
push
popl
push
mov
add
jmp
mov
add
jmp
mov
add
sub
sub
jmp
mov
jmp
push
jmp
pop
xchg
pop
mul
push
mov
push
pushf
jmp
mov
add
pushf
jmp
add
pop
push
mov
mov
shr
jmp
pushl
mov
push
mov
push
pop
push
mov
mov
xchg
neg
xor
xor
xor
push
mov
and
pop
jmp
add
push
pushl
pop
popl
pop
shr
xor
xor
xor
xor
sub
mov
xor
xor
xor
jmp
sub
mov
push
pop
jmp
mov
mov
mov
add
mov
add
xor
pop
push
mov
push
jmp
add
mov
push
jmp
mov
push
mov
push
jmp
mov
sub
pop
push
mov
jmp
pop
add
push
mov
sub
pop
jmp
pushw
jmp
push
mov
jmp
push
mov
add
add
xchg
jmp
sub
sub
jmp
mov
add
jmp
add
mov
jmp
mov
mov
sub
mov
push
jmp
sub
mov
mov
mov
jmp
popl
jmp
push
mov
sub
shl
add
xor
pop
sub
add
push
mov
add
pop
jmp
mov
add
jmp
pushl
pop
jmp
mov
pop
add
add
sub
mov
push
mov
add
jmp
shr
shr
jmp
push
pushl
pop
popl
jmp
sub
mov
mov
add
sub
xchg
pop
jmp
xchg
mov
sub
jmp
push
mov
push
pop
or
jmp
sub
pop
push
mov
mov
push
mov
push
mov
addl
mov
push
mov
add
push
push
mov
mov
sub
pop
add
mov
add
xchg
jmp
push
mov
not
push
mov
add
jmp
push
jmp
push
mov
add
pop
jmp
mov
movzwl
jmp
or
shl
push
mov
push
push
mov
add
add
sub
xchg
pop
jmp
mov
add
add
xchg
pop
mov
push
mov
add
sub
xchg
jmp
add
mov
pop
add
pop
push
pushl
pop
popl
mov
jmp
push
mov
add
pop
push
push
mov
mov
mov
push
jmp
push
mov
push
push
popl
addl
pop
push
push
mov
jmp
add
sub
mov
pushl
mov
jmp
sub
add
push
mov
neg
not
or
sub
add
pop
pop
push
push
mov
jmp
mov
mov
pop
not
push
mov
jmp
not
sub
mov
jmp
push
mov
subl
add
addl
pop
mov
add
jmp
mov
pop
jmp
sub
jmp
push
pop
push
mov
jmp
pop
xor
xor
xor
jmp
add
pop
add
xchg
jmp
dec
jmp
mov
sub
mov
push
mov
add
jmp
push
mov
push
mov
mov
jmp
pop
add
add
add
and
jmp
sub
xchg
mov
mov
push
mov
shr
jmp
mov
push
mov
dec
xor
jmp
pop
not
push
push
jmp
dec
push
mov
shr
xor
push
sub
jmp
sub
dec
add
mov
jmp
push
jmp
push
push
mov
and
jmp
or
shr
inc
dec
jmp
pop
push
mov
push
notl
jmp
xor
xor
pop
neg
push
mov
mov
jmp
xor
add
pop
add
pop
sub
mov
jmp
mov
jmp
mov
add
add
sub
pop
sub
mov
push
push
pop
jmp
or
shl
add
add
pop
pop
xor
pushl
mov
push
mov
push
mov
add
add
jmp
pushl
jmp
pop
sub
pop
sub
mov
jmp
add
add
add
sub
jmp
pop
push
mov
mov
push
mov
add
jmp
sub
xchg
pop
mov
push
mov
push
pop
push
mov
inc
xor
add
jmp
pop
pop
push
pushl
pushl
pop
add
jmp
pop
sub
mov
add
add
add
pop
jmp
push
pushl
jmp
push
mov
sub
add
jmp
push
push
mov
jmp
mov
jmp
pop
shr
push
mov
notl
jmp
push
mov
mov
add
push
mov
jmp
xor
push
jmp
pushl
pop
add
sub
mov
jmp
sub
jmp
mov
jmp
neg
or
or
jmp
mov
add
xor
sub
push
mov
sub
sub
jmp
pushl
popf
pop
rclb
pushf
jmp
xchg
pop
popl
mov
jmp
add
mov
add
xor
xor
jmp
add
add
xchg
pop
popl
mov
mov
jmp
add
add
xchg
mov
push
mov
dec
neg
jmp
jmp
add
sub
pop
shr
jmp
pop
jmp
xor
jmp
add
jmp
mov
push
pop
add
push
jmp
add
sub
mov
push
push
pop
push
mov
xor
pop
add
mov
pop
jmp
pushl
mov
jmp
mov
jmp
mov
sub
mov
mov
push
jmp
jmp
mov
push
mov
push
mov
mov
jmp
push
mov
jmp
movzbw
pushw
mov
movzbw
push
pushf
jmp
push
mov
addl
mov
jmp
dec
and
dec
xor
xor
pop
add
jmp
sub
sub
add
mov
jmp
sub
sub
add
add
sub
add
pop
push
mov
jmp
shl
xor
xor
pop
mov
pop
sub
jmp
push
mov
push
mov
jmp
add
mov
pop
sub
pop
push
mov
jmp
pop
push
mov
pushl
jmp
add
mov
push
jmp
add
pop
push
push
mov
mov
sub
jmp
mov
neg
shl
shl
xor
mov
pop
mov
jmp
add
jmp
xor
add
add
sub
pop
sub
jmp
push
mov
jmp
push
mov
jmp
pop
or
sub
shr
sub
push
push
mov
mov
mov
add
pop
inc
push
mov
xor
xor
jmp
xchg
pop
sub
sub
mov
mov
add
push
push
jmp
add
jmp
xor
jmp
add
mov
add
jmp
add
push
mov
sub
jmp
jmp
add
add
mov
add
jmp
push
push
jmp
push
mov
jmp
push
mov
add
shr
neg
jmp
pushl
mov
add
push
mov
jmp
pop
jmp
mov
sub
mov
jmp
mov
jmp
pushl
popf
pop
rcrw
pushf
jmp
add
jmp
mov
add
pop
jmp
xchg
pop
push
mov
mov
jmp
mov
jmp
push
mov
mov
pop
jmp
xor
push
mov
xor
add
pop
push
mov
shl
dec
jmp
add
add
push
mov
push
mov
dec
and
dec
xor
mov
pop
jmp
pop
push
jmp
pushl
pop
add
jmp
mov
sub
pop
mov
add
pop
jmp
mov
or
pop
push
mov
sub
sub
add
push
sub
mov
pop
pop
pop
xor
jmp
mov
jmp
add
jmp
pop
jmp
xor
pop
jmp
or
jmp
push
mov
jmp
xor
xor
pop
jmp
push
mov
subl
add
addl
jmp
xchg
jmp
sub
pop
push
pushl
mov
jmp
and
sub
add
add
jmp
add
jmp
add
add
jmp
xchg
pop
mov
subl
pushl
pop
push
jmp
mov
sub
xor
sub
and
push
mov
or
push
jmp
inc
xor
dec
jmp
pop
jmp
xchg
pop
jmp
xor
and
jmp
push
mov
sub
push
jmp
add
add
jmp
mov
sub
pop
pop
push
jmp
xor
mov
mov
add
sub
jmp
xchg
pop
mov
push
pop
add
push
mov
jmp
xchg
mov
cmp
pushf
jmp
sub
jmp
mov
mov
sub
sub
jmp
shl
jmp
mov
add
pop
add
xchg
pop
push
mov
jmp
pop
add
add
push
mov
jmp
and
jmp
push
mov
jmp
or
je
push
mov
push
push
pop
neg
push
jmp
push
mov
mov
jmp
mov
jmp
pushw
mov
push
pushf
jmp
mov
add
sub
push
mov
neg
jmp
pop
xchg
jmp
xor
jmp
mov
jmp
sub
sub
add
add
push
jmp
push
mov
mov
add
xor
sub
pop
sub
jmp
mov
jmp
add
shl
push
mov
or
pop
add
jmp
add
push
mov
sub
jmp
mov
add
add
xchg
pop
jmp
pop
jmp
add
mov
push
mov
add
push
jmp
not
xchg
inc
sub
xor
add
mov
push
mov
add
add
jmp
add
pop
sub
mov
push
mov
mov
pop
add
pop
add
add
jmp
jmp
pop
push
mov
jmp
xor
jmp
push
pop
push
mov
push
push
jmp
push
mov
add
push
mov
add
pop
xchg
pop
pop
not
xor
xor
xor
neg
push
mov
push
mov
jmp
mov
pop
pop
add
mov
add
sub
sub
jmp
xor
jmp
sub
xor
push
jmp
pushl
pop
jmp
add
add
push
mov
jmp
push
mov
jmp
xchg
mov
xor
pushf
jmp
mov
push
mov
mov
push
mov
inc
dec
jmp
and
pop
sub
add
pop
pushl
pop
add
mov
jmp
pushl
pop
push
mov
add
add
xchg
pop
sub
jmp
xchg
pop
jmp
push
mov
add
pop
add
sub
pop
add
jmp
pop
add
push
mov
sub
sub
pop
jmp
mov
jmp
mov
pop
add
pop
pop
jmp
shl
or
jmp
mov
mov
add
push
jmp
mov
add
jmp
pushl
pop
push
mov
add
add
jmp
shl
sub
add
xor
jmp
mov
sub
shr
jmp
popl
pop
or
je
pushl
subl
pop
push
mov
push
jmp
pop
add
xor
and
mov
push
mov
add
add
xchg
pop
not
shl
add
and
pushl
pop
push
mov
add
add
jmp
push
jmp
sub
neg
jmp
add
jmp
add
jmp
shr
shl
jmp
mov
pushl
mov
push
jmp
mov
pop
push
mov
sub
pop
sub
jmp
mov
shr
and
jmp
mov
pop
shr
jmp
pushl
mov
add
popl
mov
cmp
pushf
jmp
pop
pop
push
mov
add
sub
jmp
add
sub
sub
jmp
sub
push
mov
xor
jmp
push
mov
add
and
or
push
jmp
mov
mov
pop
neg
add
sub
mov
mov
add
jmp
popl
pop
jmp
xor
xor
mov
sarw
pushf
jmp
sub
pop
mov
jmp
sub
xor
xor
pop
jmp
mov
add
sub
shr
jmp
add
xchg
pop
push
mov
xchg
jmp
pop
add
mov
jmp
mov
mov
jmp
mov
jmp
pop
push
jmp
add
push
mov
add
sub
xchg
pop
mov
mov
neg
xor
dec
xor
add
add
pop
jmp
mov
mov
jmp
addl
add
subl
pop
pop
push
mov
push
mov
mov
not
add
jmp
push
mov
add
pop
mov
add
add
push
jmp
pop
xor
pop
add
jmp
pop
xchg
jmp
pop
push
mov
jmp
pop
add
add
shr
push
mov
jmp
xor
pop
pushl
jmp
push
jmp
add
sub
jmp
add
pop
push
jmp
pop
push
mov
sub
mov
push
pop
push
jmp
xchg
pop
add
sub
sub
mov
add
jmp
pop
mov
mov
push
jmp
shr
push
mov
shl
jmp
pop
push
push
pop
push
push
push
pop
inc
not
jmp
popl
mov
push
mov
mov
push
push
pop
add
jmp
pop
sub
push
mov
jmp
xor
pushl
mov
jmp
sub
pop
xor
pop
jmp
push
push
mov
mov
pop
xor
sub
mov
add
add
add
push
jmp
xor
mov
push
popl
jmp
mov
sub
jmp
mov
jmp
push
mov
push
mov
jmp
pushl
pop
popl
mov
push
mov
jmp
neg
sub
sub
jmp
sub
mov
push
mov
mov
sub
mov
jmp
add
jmp
mov
push
mov
and
pop
not
jmp
push
mov
push
mov
jmp
mov
sub
or
shr
xor
mov
pop
sub
jmp
xor
mov
pop
shl
neg
push
jmp
mov
push
pop
add
push
mov
add
pop
xchg
pop
pop
jmp
push
pop
sub
jmp
pop
push
mov
mov
pop
pushl
pop
jmp
xor
xor
xor
push
mov
push
jmp
mov
mov
push
mov
mov
jmp
mov
mov
pop
push
mov
jmp
add
pop
pushl
pop
sub
jmp
add
push
mov
inc
push
mov
jmp
pop
add
add
pop
push
jmp
add
sub
mov
push
mov
mov
jmp
add
xchg
pop
jmp
xchg
jmp
mov
push
mov
push
jmp
push
mov
mov
jmp
xor
sub
mov
jmp
push
mov
jmp
pop
inc
xor
sub
mov
pop
jmp
add
push
jmp
push
jmp
push
mov
xor
dec
jmp
sub
xor
jmp
dec
jmp
mov
sub
jmp
sub
add
pop
sub
mov
jmp
lods
jmp
neg
jmp
pushl
mov
jmp
shl
sub
jmp
add
sub
mov
mov
add
sub
sub
push
mov
jmp
mov
add
xor
xor
jmp
sub
mov
mov
mov
sub
sub
jmp
mov
mov
jmp
add
pushl
jmp
mov
jmp
mov
inc
add
jmp
push
mov
sub
pop
jmp
mov
sub
jmp
push
mov
add
sub
jmp
sub
mov
add
xor
pop
pop
jmp
push
mov
add
jmp
push
mov
jmp
mov
push
jmp
or
pop
shr
push
mov
xor
mov
add
push
jmp
push
mov
jmp
push
mov
shr
and
xor
dec
and
jmp
mov
push
mov
mov
add
add
pop
add
xchg
pop
push
mov
inc
or
jmp
add
mov
mov
add
add
pop
push
jmp
mov
sub
mov
mov
or
jmp
pop
xchg
jmp
mov
add
pop
popw
jmp
pop
push
mov
jmp
mov
mov
sub
pop
jmp
mov
add
pop
jmp
xor
sub
pop
jmp
mov
add
jmp
push
mov
shl
and
push
mov
or
and
shl
and
xor
add
pop
sub
pop
sub
push
mov
mov
add
sub
xchg
pop
mov
mov
jmp
mov
mov
add
subl
add
push
mov
add
pop
mov
push
mov
jmp
push
mov
mov
pop
xor
sub
neg
add
xor
mov
jmp
mov
add
push
jmp
mov
sub
mov
push
mov
addl
pushl
jmp
push
pop
mov
push
jmp
mov
jmp
mov
mov
sub
pop
mov
add
jmp
add
push
mov
push
mov
jmp
xor
xor
pop
mov
jmp
xchg
pop
push
jmp
push
push
pop
add
add
xchg
pop
push
sub
jmp
xor
add
jmp
pop
pop
shl
neg
add
add
pushl
pop
add
add
xor
xor
xor
mov
shrw
pushf
jmp
pop
push
mov
jmp
push
notl
pop
xchg
pop
push
mov
add
jmp
dec
push
mov
or
pop
jmp
mov
push
jmp
shr
push
mov
shr
xor
sub
add
add
sub
push
push
pop
jmp
add
mov
jmp
sub
jmp
push
mov
dec
jmp
pushl
pop
push
jmp
pop
push
mov
mov
push
mov
add
shr
jmp
mov
add
add
mov
add
sub
jmp
xor
jmp
sub
mov
pushl
pushl
pop
add
popl
pop
xor
pushf
jmp
push
push
jmp
add
push
mov
dec
push
mov
jmp
push
mov
add
pop
xchg
jmp
xor
neg
add
mov
pop
shl
add
jmp
pop
jmp
add
jmp
push
mov
xor
pop
or
pop
add
sub
push
addl
pop
jmp
add
add
pop
add
pop
jmp
add
add
dec
push
jmp
mov
push
push
mov
add
sub
xchg
pop
mov
addl
mov
add
jmp
push
pop
add
sub
xchg
pop
jmp
mov
mov
mov
add
jmp
add
pop
jmp
mov
mov
jmp
rep
jmp
or
xor
sub
shr
or
add
jmp
not
and
sub
jmp
mov
jmp
mov
or
pop
sub
mov
pushl
pop
add
shr
push
mov
shl
neg
xor
jmp
mov
add
add
xchg
pop
popl
jmp
mov
pop
or
dec
shl
add
jmp
pushl
pushl
pop
add
push
mov
push
push
pop
add
sub
push
pushl
mov
add
popl
pop
mov
jmp
mov
add
sub
mov
sub
jmp
push
mov
jmp
mov
mov
add
jmp
push
mov
push
jmp
xor
sub
pop
jmp
dec
inc
add
jmp
push
pop
jmp
push
jmp
mov
mov
jmp
sub
sub
add
add
add
jmp
pop
add
push
pushl
pop
jmp
mov
add
jmp
add
add
pop
push
jmp
pop
push
mov
add
sub
xchg
pop
mov
push
jmp
mov
add
jmp
push
mov
dec
jmp
mov
pop
add
mov
add
jmp
mov
jmp
add
pop
pop
add
jmp
sub
and
pop
jmp
mov
mov
and
jmp
push
mov
push
mov
push
jmp
mov
mov
pop
pop
jmp
push
mov
push
mov
add
push
jmp
pushl
pop
add
jmp
add
jmp
add
jmp
pop
jmp
push
subl
pop
jmp
add
jmp
sub
pop
pop
push
push
mov
sub
mov
jmp
add
mov
jmp
mov
and
push
mov
inc
jmp
push
push
mov
jmp
pop
jmp
xor
add
jmp
pop
push
mov
jmp
add
sub
xchg
jmp
xchg
pop
push
mov
push
mov
xor
dec
sub
and
sub
xor
jmp
not
neg
push
mov
inc
or
shr
xor
xor
sub
mov
jmp
lods
push
mov
add
pop
push
mov
sub
jmp
sub
add
mov
jmp
shl
add
sub
add
pop
pop
pop
sub
add
sub
sub
add
add
mov
add
xor
pushl
pop
add
sub
mov
push
jmp
push
mov
add
jmp
mov
jmp
and
jmp
xor
mov
jmp
or
neg
sub
push
mov
add
jmp
add
jmp
or
shl
push
mov
jmp
push
mov
jmp
pop
sub
mov
pop
push
mov
sub
jmp
dec
jmp
mov
jmp
push
mov
push
push
pop
jmp
sub
jmp
push
mov
mov
jmp
add
push
jmp
not
xchg
add
xor
pushl
pop
add
and
push
push
mov
add
mov
add
sub
sub
jmp
add
xor
pop
xor
jmp
mov
push
mov
jmp
push
pushl
pop
jmp
push
mov
addl
popl
jmp
shr
jmp
mov
add
sub
mov
jmp
mov
pop
pop
jmp
push
pushl
pop
popl
pop
push
mov
jmp
xor
add
pop
jmp
push
jmp
inc
jmp
push
jmp
mov
pop
or
pop
dec
push
jmp
pop
sub
add
sub
mov
mov
add
mov
add
mov
jmp
push
mov
sub
mov
push
mov
jmp
add
push
sub
mov
push
mov
add
add
jmp
push
mov
jmp
pushl
pop
jmp
push
mov
mov
pop
jmp
push
jmp
neg
add
add
pop
add
mov
pop
jmp
xchg
pop
popl
mov
mov
movzbw
push
pushf
jmp
sub
jmp
pop
jmp
mov
add
sub
sub
pop
sub
jmp
shl
jmp
add
sub
add
add
sub
mov
add
push
mov
jmp
pushl
pop
add
add
xchg
pop
push
mov
sub
mov
mov
jmp
sub
mov
sub
jmp
pop
push
jmp
inc
not
xor
mov
pop
add
mov
add
push
jmp
pop
add
push
jmp
mov
jmp
mov
mov
add
jmp
push
mov
add
add
xchg
pop
sub
jmp
neg
or
xor
add
mov
add
xor
xor
xor
pop
push
mov
add
add
jmp
mov
dec
add
xor
add
mov
add
add
sub
jmp
pop
push
jmp
shl
not
jmp
push
mov
jmp
pop
add
jmp
add
pop
push
jmp
add
add
sub
sub
mov
mov
xor
add
pop
push
jmp
pop
add
jmp
xchg
pop
add
pop
add
sub
pop
sub
mov
mov
push
jmp
xor
add
pop
add
jmp
mov
push
mov
jmp
mov
xor
sub
jmp
mov
pop
push
addl
pop
push
mov
sub
pop
mov
add
add
add
sub
pop
add
xor
xor
xor
jmp
add
mov
jmp
pushl
popf
pop
adc
pushf
jmp
push
push
mov
mov
pop
add
pop
add
xchg
mov
not
shl
jmp
pop
push
jmp
pop
push
mov
mov
add
push
mov
jmp
pop
popl
jmp
pop
sub
jmp
mov
jmp
mov
push
mov
add
jmp
and
sub
dec
xor
add
jmp
mov
push
mov
jmp
mov
pop
inc
jmp
sub
push
mov
push
jmp
shl
push
mov
jmp
sub
jmp
push
mov
push
push
mov
add
jmp
xor
xor
xor
pop
add
push
mov
sub
sub
jmp
mov
jmp
pop
jmp
mov
add
add
jmp
shr
push
mov
xor
sub
sub
add
pop
sub
add
pop
sub
mov
jmp
mov
mov
add
sub
xchg
mov
mov
jmp
add
pop
add
xor
xor
xor
mov
jmp
add
jmp
mov
jmp
mov
push
mov
push
mov
mov
mov
add
sub
jmp
dec
jmp
mov
push
mov
add
add
xchg
pop
add
pop
add
jmp
mov
pop
push
mov
jmp
pop
add
mov
add
xor
xor
jmp
pop
add
add
sub
jmp
mov
push
mov
push
mov
shl
shl
jmp
mov
add
push
mov
popl
mov
jmp
add
pushw
mov
jmp
pop
push
push
mov
jmp
push
mov
add
jmp
add
jmp
mov
not
inc
shr
sub
jmp
push
sub
mov
jmp
popw
jmp
add
jmp
xchg
mov
sub
mov
mov
neg
jmp
mov
push
jmp
addl
pushl
pop
jmp
mov
add
jmp
pop
jmp
xchg
pop
mov
jmp
add
jmp
pop
pop
pop
jmp
pop
inc
shr
push
push
mov
mov
pop
shr
sub
and
pop
push
mov
shr
jmp
pop
jmp
pop
jmp
add
mov
jmp
xchg
pop
mov
xor
xor
xor
push
mov
xchg
not
xchg
jmp
mov
or
pop
xor
sub
jmp
xchg
neg
xchg
or
and
add
add
jmp
sub
sub
add
pop
sub
mov
push
push
push
pop
sub
push
jmp
pop
sub
xchg
mov
mov
jmp
add
push
mov
sub
add
add
pushl
pop
add
jmp
mov
jmp
sub
neg
push
mov
neg
xor
add
pop
jmp
pop
add
push
mov
inc
dec
shl
jmp
push
mov
jmp
mov
jmp
mov
xor
pop
jmp
xor
xor
xor
jmp
jmp
pop
jmp
push
push
pop
sub
xor
add
sub
sub
push
mov
sub
add
add
pop
push
jmp
push
mov
mov
add
jmp
inc
shl
sub
mov
mov
jmp
popl
jmp
pop
sub
add
push
mov
add
pop
add
jmp
xor
pop
jmp
sub
add
sub
jmp
xor
pop
mov
add
jmp
mov
add
add
pop
jmp
jmp
push
mov
jmp
jmp
push
mov
mov
push
mov
jmp
and
sub
push
mov
mov
mov
push
mov
jmp
pop
add
push
mov
mov
sub
pop
add
jmp
mov
pop
neg
jmp
pop
push
mov
sub
pop
xchg
pop
mov
mov
shl
neg
dec
sub
add
jmp
pop
push
mov
add
pop
sub
pop
pop
sub
xchg
pop
mov
mov
sub
mov
addl
pop
sub
pop
mov
add
jmp
popl
mov
jmp
push
pop
add
add
jmp
or
xor
add
add
mov
add
push
push
mov
xor
mov
pop
and
add
sub
sub
pop
xchg
jmp
pop
push
mov
add
mov
jmp
movzbw
push
mov
push
mov
addl
jmp
xchg
sub
sub
mov
add
sub
pop
jmp
mov
pop
sub
add
add
pop
push
push
mov
xor
jmp
sub
pop
neg
sub
xor
jmp
pop
xchg
pop
mov
jmp
or
xor
add
pop
sub
pop
mov
add
push
mov
jmp
and
mov
add
push
mov
jmp
push
pop
push
jmp
pop
jmp
sub
pop
jmp
add
pop
sub
jmp
pop
pop
jmp
pop
add
add
jmp
mov
push
push
pop
jmp
sub
mov
push
jmp
pop
dec
xchg
push
jmp
push
pop
push
jmp
xor
add
pop
jmp
sub
xchg
not
push
jmp
push
mov
push
pushl
pop
add
shr
sub
jmp
sub
mov
add
sub
jmp
pop
push
mov
inc
jmp
pop
sub
jmp
add
addl
addl
jmp
mov
sub
mov
push
mov
sub
mov
push
jmp
push
mov
jmp
mov
jmp
xor
shr
and
add
jmp
sub
mov
add
jmp
not
sub
and
pop
push
mov
xor
add
add
sub
pop
or
pop
jmp
add
add
push
jmp
xchg
pop
not
xor
sub
pushl
jmp
mov
jmp
xchg
pop
add
pushl
mov
push
mov
jmp
push
mov
inc
push
jmp
add
xchg
pop
add
add
add
sub
jmp
sub
sub
jmp
pushl
jmp
mov
jmp
sub
sub
and
sub
mov
mov
shr
jmp
dec
push
jmp
pop
sub
pop
add
jmp
xor
xor
pop
jmp
mov
add
push
mov
jmp
sub
add
add
sub
jmp
pop
sub
pop
mov
jmp
push
mov
push
mov
add
jmp
add
add
mov
pop
add
pop
mov
add
jmp
shl
sub
sub
push
mov
inc
jmp
pop
add
add
xor
jmp
mov
push
jmp
add
mov
add
mov
pop
inc
shr
add
push
mov
mov
sub
sub
push
push
pop
neg
shr
or
shr
sub
add
pop
pop
add
mov
add
push
mov
jmp
sub
push
xorl
pop
jmp
xor
shr
push
mov
mov
neg
not
push
jmp
mov
jmp
mov
push
pop
add
pop
xor
xor
xor
pop
pop
push
mov
sub
add
add
pop
jmp
push
jmp
mov
pop
mov
xor
pop
or
add
xor
shr
jmp
add
xchg
mov
push
mov
jmp
sub
push
mov
jmp
neg
shr
and
not
jmp
push
push
mov
sub
jmp
pop
sub
mov
mov
jmp
negl
pop
sub
mov
mov
add
neg
and
or
jmp
pushl
push
mov
push
mov
add
push
mov
add
jmp
pop
add
add
xchg
pop
popl
mov
mov
push
push
pushl
mov
add
add
add
sub
xchg
pop
jmp
add
jmp
add
sub
xchg
pop
jmp
mov
mov
pop
mov
add
mov
add
push
jmp
sub
mov
push
mov
add
jmp
push
mov
shl
sub
jmp
add
sub
jmp
shr
add
jmp
sub
add
pop
sub
sub
add
add
jmp
mov
sub
pop
push
mov
jmp
add
push
mov
jmp
and
sub
jmp
mov
add
jmp
or
push
mov
mov
jmp
and
shr
shr
shl
sub
sub
mov
push
mov
add
add
xchg
pop
mov
pop
sub
add
add
sub
push
mov
add
pop
mov
add
jmp
mov
pop
sub
sub
add
pop
pop
push
mov
push
mov
add
add
sub
pop
pop
push
push
jmp
pop
jmp
mov
push
mov
mov
sub
mov
push
jmp
push
push
jmp
mov
not
jmp
push
mov
mov
xor
pop
add
sub
add
add
push
mov
neg
jmp
add
shr
jmp
push
jmp
or
and
jmp
or
shr
jmp
add
push
mov
pushl
jmp
push
mov
push
mov
mov
pop
pushl
mov
add
jmp
push
push
mov
add
shl
push
mov
jmp
push
mov
push
jmp
mov
jmp
push
mov
add
pop
jmp
mov
add
jmp
mov
push
jmp
add
push
push
pop
add
mov
push
mov
add
add
xchg
jmp
and
jmp
xchg
pop
mov
jmp
push
push
mov
add
jmp
push
jmp
add
sub
sub
pop
sub
add
add
jmp
push
mov
add
pop
pop
push
mov
add
add
push
mov
sub
sub
jmp
and
pop
sub
jmp
pushw
jmp
xor
pop
jmp
mov
mov
sub
jmp
push
mov
shl
sub
sub
jmp
add
add
jmp
and
pushf
jmp
push
mov
dec
push
mov
and
pop
jmp
xor
pop
xor
pop
push
mov
sub
pop
push
mov
jmp
and
pop
xor
jmp
push
push
jmp
push
notl
jmp
add
pop
pop
jmp
add
pop
pushl
jmp
mov
push
jmp
pop
add
push
mov
add
jmp
add
pop
mov
pop
jmp
mov
jmp
xor
add
pop
push
pushl
pushl
pop
add
popl
mov
incl
pushf
jmp
pushl
popf
pop
rclw
pushf
jmp
add
pop
pop
jmp
xor
mov
pop
xor
pop
add
mov
push
mov
add
push
mov
push
mov
xor
sub
pop
add
pop
xchg
pop
and
pushl
pushl
mov
add
push
jmp
mov
jmp
push
mov
mov
add
jmp
shr
sub
push
jmp
push
mov
push
pop
push
mov
dec
add
push
jmp
add
push
pushl
pop
popl
pop
or
shl
push
mov
push
jmp
mov
push
mov
mov
push
push
jmp
sub
push
popl
jmp
add
jmp
add
sub
sub
push
mov
add
pop
pop
push
mov
jmp
and
mov
jmp
mov
jmp
sub
jmp
add
jmp
not
xchg
and
push
push
mov
add
mov
jmp
pop
sub
jmp
add
mov
jmp
pop
pop
push
sub
pop
shr
jmp
push
jmp
push
mov
add
jmp
sub
mov
jmp
shl
jmp
xor
pop
sub
add
add
mov
jmp
popl
pop
sub
mov
mov
push
push
mov
jmp
mov
shr
add
and
shr
add
add
pop
add
jmp
push
mov
sub
jmp
mov
push
mov
push
mov
jmp
pop
sub
add
push
mov
add
jmp
pop
jmp
xor
pushl
mov
add
jmp
add
push
mov
mov
jmp
mov
pop
and
and
xor
push
push
jmp
mov
pop
jmp
pop
jmp
and
jmp
mov
mov
sub
shr
or
or
jmp
pop
jmp
pushl
jmp
xor
pop
sub
pushl
pop
push
jmp
mov
push
mov
jmp
pushl
popf
pop
adc
pushf
jmp
add
subl
pop
pop
add
jmp
jmp
sub
sub
and
sub
jmp
add
push
mov
jmp
push
mov
mov
pop
mov
mov
jmp
sub
add
pop
jmp
mov
add
pop
jmp
xor
xor
pop
mov
push
mov
push
mov
add
jmp
pop
jmp
add
sub
add
mov
add
jmp
add
jmp
or
mov
push
jmp
sub
add
mov
add
jmp
mov
or
pop
xor
sub
jmp
mov
and
or
not
or
add
push
mov
xor
mov
add
sub
add
add
mov
push
mov
add
add
xchg
pop
push
pushl
mov
add
popl
mov
sub
mov
push
mov
mov
push
mov
push
push
mov
push
mov
add
add
jmp
popl
pop
jmp
mov
shl
neg
sub
jmp
mov
jmp
or
push
mov
add
add
sub
jmp
add
add
pop
jmp
mov
add
jmp
pop
sub
mov
mov
push
jmp
sub
add
jmp
push
mov
mov
add
mov
add
pop
sub
jmp
sub
mov
add
xor
xor
xor
mov
mov
push
pushf
jmp
sub
pop
xor
sub
mov
push
mov
add
add
push
pushl
pop
popl
pop
pop
push
mov
push
notl
mov
add
jmp
push
mov
add
jmp
add
mov
add
jmp
push
push
mov
sub
mov
jmp
pop
pop
push
mov
sub
pop
sub
add
jmp
pop
mov
jmp
push
jmp
mov
mov
mov
xor
add
add
sub
pop
or
pushl
pop
sub
jmp
add
add
xchg
mov
push
mov
push
pop
push
push
mov
jmp
sub
push
jmp
xor
pop
xor
mov
pushl
pop
add
sub
jmp
sub
mov
mov
jmp
mov
push
mov
mov
push
push
pop
jmp
push
push
pop
jmp
add
xchg
jmp
add
xor
xor
xor
mov
jmp
sub
mov
mov
jmp
xchg
pop
add
sub
add
add
push
mov
sub
mov
jmp
add
mov
add
jmp
sub
jmp
add
xchg
pop
shr
xor
jmp
jmp
mov
pop
shr
jmp
xor
pop
push
popl
addl
pushl
pop
add
jmp
xorl
pushl
jmp
pop
jmp
and
pop
jmp
add
jmp
push
mov
jmp
mov
add
jmp
mov
or
not
shr
xor
xor
jmp
add
mov
pop
jmp
push
mov
push
push
pop
jmp
mov
or
push
jmp
mov
mov
jmp
push
push
pop
jmp
add
push
mov
add
pop
push
push
pop
sub
jmp
push
push
pop
jmp
shr
add
xchg
not
xchg
not
jmp
pop
xor
xor
xor
mov
push
mov
push
sub
mov
pushl
pop
push
mov
add
jmp
or
not
dec
add
add
pop
jmp
push
mov
sub
mov
mov
mov
jmp
mov
mov
add
add
add
jmp
add
jmp
push
jmp
xchg
pop
shll
pushf
jmp
mov
jmp
xor
sub
pushl
pop
add
pop
mov
mov
jmp
sub
xchg
pop
mov
mov
push
mov
pop
jmp
pop
shr
jmp
and
push
mov
sub
pop
sub
mov
add
add
jmp
add
pushl
jmp
pushl
mov
push
mov
push
pop
push
jmp
push
mov
add
mov
add
or
pop
or
push
mov
xor
pop
or
pop
push
mov
inc
inc
shr
sub
and
xor
jmp
mov
add
add
add
jmp
push
push
pushl
pop
sub
mov
mov
push
mov
sub
xor
add
pop
add
xchg
mov
sub
mov
mov
jmp
pushl
pop
sub
mov
mov
sub
mov
push
push
pop
not
jmp
add
push
jmp
mov
mov
mov
add
push
push
mov
mov
jmp
and
and
add
jmp
mov
add
add
sub
sub
pushl
jmp
pushl
pop
add
push
push
mov
mov
sub
jmp
notl
pop
xor
sub
mov
add
xchg
mov
jmp
sub
pop
push
jmp
push
sub
push
jmp
mov
sub
jmp
add
pop
sub
sub
mov
add
push
mov
mov
dec
and
and
shl
jmp
mov
add
add
movzbl
pushw
mov
jmp
mov
jmp
pop
jmp
sub
sub
add
sub
pop
xchg
pop
mov
mov
jmp
pop
push
jmp
add
xchg
mov
jmp
add
jmp
mov
pop
jmp
mov
sub
add
jmp
mov
jmp
push
mov
xor
shl
inc
push
jmp
pop
sub
push
pushl
jmp
add
neg
push
mov
add
mov
push
mov
add
add
jmp
mov
add
sub
jmp
pop
push
jmp
mov
push
mov
add
sub
add
pop
add
subl
pop
mov
jmp
sub
xor
add
jmp
shr
add
sub
pop
add
jmp
xor
pop
jmp
pushl
jmp
push
push
jmp
xor
sub
pop
add
add
sub
pop
shr
sub
neg
xor
xor
mov
add
xor
movzbl
popw
jmp
sub
mov
push
mov
add
add
xchg
pop
jmp
sub
pop
mov
pop
pop
push
mov
mov
jmp
mov
add
xor
xor
jmp
add
mov
pop
pushl
mov
add
push
push
pop
push
jmp
not
shl
jmp
push
push
mov
dec
dec
neg
jmp
pop
and
pushl
jmp
mov
pushl
mov
push
mov
jmp
xor
pop
push
mov
sub
pop
push
mov
jmp
pop
add
jmp
or
pop
shr
sub
jmp
add
popl
jmp
imul
movzbw
push
mov
push
jmp
push
pop
sub
jmp
pushl
mov
sub
mov
push
pop
add
push
mov
sub
mov
add
xchg
pop
mov
mov
add
jmp
pop
jmp
sub
mov
add
sub
mov
push
mov
push
mov
push
mov
push
push
mov
mov
pop
sub
mov
mov
mov
pop
pop
pop
pop
mov
push
mov
add
pop
sub
sub
jmp
shr
inc
push
mov
mov
jmp
shr
jmp
pushl
mov
push
jmp
mov
jmp
mov
add
push
push
jmp
pushl
pushl
pushl
mov
add
push
jmp
add
jmp
push
mov
add
add
xchg
pop
jmp
push
mov
xor
pop
pushl
pop
jmp
or
add
and
mov
jmp
mov
push
pop
jmp
xor
jmp
mov
jmp
add
pop
push
jmp
xor
add
pop
jmp
add
add
jmp
push
mov
shl
sub
jmp
mov
add
sub
add
jmp
push
jmp
pushl
pop
push
mov
add
add
xchg
pop
and
mov
add
jmp
shl
or
dec
jmp
mov
add
push
mov
inc
xor
sub
mov
add
xchg
mov
mov
push
mov
pushl
pop
push
mov
add
push
mov
dec
push
negl
jmp
mov
add
sub
xchg
pop
mov
sub
mov
addl
pushl
pop
push
push
jmp
mov
and
jmp
mov
jmp
xchg
pop
sub
mov
mov
add
pushl
jmp
mov
sub
mov
mov
push
jmp
add
xor
xor
xor
pop
push
jmp
add
jmp
pop
push
xchg
not
xchg
pop
push
mov
jmp
mov
jmp
push
mov
mov
push
jmp
mov
push
mov
jmp
mov
mov
jmp
mov
push
jmp
add
xor
mov
push
push
pop
add
add
push
pushl
jmp
push
jmp
pop
add
xchg
pop
push
sub
mov
push
jmp
pop
shr
jmp
mov
sub
mov
mov
add
mov
add
jmp
mov
jmp
add
add
pushl
pop
add
jmp
xor
pop
jmp
shl
jmp
push
mov
push
mov
xor
jmp
shr
jmp
add
pop
jmp
mov
add
jmp
pop
sub
mov
jmp
pop
push
mov
sub
jmp
push
mov
add
pop
dec
jmp
pop
sub
mov
mov
push
push
jmp
add
add
xor
xor
xor
pop
jmp
add
and
jmp
push
mov
sub
mov
jmp
add
jmp
pop
xor
add
add
add
push
mov
push
push
mov
push
mov
jmp
pushl
jmp
shr
sub
sub
pop
jmp
mov
xor
sub
sub
and
add
add
add
pop
jmp
sub
mov
push
pushl
mov
sub
jmp
pop
and
jmp
add
pop
xchg
pop
xor
pop
add
add
sub
mov
jmp
mov
add
push
mov
jmp
inc
jmp
mov
jmp
add
jmp
dec
push
jmp
mov
push
mov
add
push
mov
sub
sub
add
add
add
pop
jmp
add
jmp
shr
jmp
xor
xor
xor
mov
bswap
push
push
pop
add
jmp
xor
dec
shl
push
mov
mov
sub
jmp
xchg
pop
push
mov
add
push
jmp
pushl
pop
push
mov
add
add
xchg
pop
add
sub
push
mov
add
sub
jmp
push
mov
pushl
pop
popl
mov
sub
mov
jmp
push
mov
jmp
add
jmp
push
mov
push
jmp
push
mov
push
jmp
add
pushl
pop
add
jmp
sub
mov
add
mov
push
mov
mov
add
jmp
push
mov
sub
mov
jmp
sub
sub
pop
jmp
add
sub
xchg
pop
mov
jmp
mov
jmp
push
sub
mov
mov
jmp
pop
pop
push
xorl
pop
push
mov
jmp
pop
popl
pop
pushl
mov
add
push
jmp
sub
sub
jmp
pop
xchg
pop
popl
jmp
pop
xchg
mov
push
mov
push
push
mov
jmp
pop
push
push
mov
mov
jmp
push
pop
sub
mov
push
mov
dec
shl
sub
mov
mov
neg
xor
inc
sub
jmp
mov
add
add
xchg
pop
push
mov
jmp
sub
mov
xchg
push
notl
jmp
shr
add
sub
jmp
add
jmp
add
pushl
pop
add
xor
xor
xor
mov
pushl
mov
push
mov
push
jmp
sub
add
add
mov
add
add
xchg
pop
push
mov
xor
jmp
add
pop
add
shr
dec
jmp
mov
div
jmp
pushl
jmp
push
mov
sub
jmp
add
add
add
jmp
mov
mov
add
add
sub
pop
xchg
pop
cmp
pushf
jmp
mov
xor
pop
push
mov
jmp
add
neg
or
xor
add
jmp
add
add
xchg
pop
sub
mov
sub
mov
push
pop
push
mov
add
jmp
mov
add
jmp
mov
jmp
mov
add
push
mov
add
add
xchg
pop
shr
xor
push
jmp
push
mov
add
sub
pop
add
pop
jmp
mov
sub
pop
push
mov
addl
addl
jmp
sub
mov
mov
jmp
add
jmp
sub
mov
mov
push
mov
and
jmp
pop
xchg
jmp
add
xchg
pop
jmp
or
sub
push
mov
xor
xor
xor
add
jmp
push
mov
push
mov
jmp
sub
add
jmp
push
push
pop
shl
jmp
push
mov
push
mov
add
push
push
push
pop
push
mov
jmp
xor
push
mov
jmp
mov
push
mov
jmp
xor
xor
xor
mov
or
jmp
push
mov
xor
pop
sub
sub
jmp
shr
push
jmp
not
jmp
dec
push
mov
shr
shr
push
push
mov
not
dec
sub
jmp
push
mov
mov
jmp
push
mov
mov
pop
pop
add
pop
sub
mov
pushl
pop
popl
mov
jmp
pushl
pushl
pop
push
mov
push
jmp
pop
shl
jmp
mov
not
sub
push
pop
mov
jmp
mov
jmp
xor
xor
jmp
add
add
sub
mov
sub
mov
mov
jmp
pushl
pop
push
mov
add
add
xchg
pop
jmp
add
jmp
add
xor
xor
xor
mov
pushl
pop
push
push
pop
sub
mov
mov
push
mov
add
sub
jmp
mov
push
jmp
sub
jmp
xor
pop
xor
sub
sub
jmp
mov
push
push
pop
jmp
add
push
mov
shl
dec
shl
not
sub
add
mov
add
jmp
pop
jmp
add
add
mov
add
push
push
mov
and
add
push
pop
pop
add
mov
jmp
pop
add
jmp
mov
pop
push
mov
mov
pop
jmp
xor
push
mov
add
pop
sub
sub
mov
add
push
mov
add
sub
xchg
mov
mov
sub
mov
jmp
mov
jmp
pop
add
push
jmp
mov
push
jmp
add
jmp
sub
jmp
add
mov
pop
push
mov
xor
pop
jmp
add
jmp
popl
jmp
pop
add
push
jmp
mov
pop
mov
pop
add
sub
sub
mov
add
xchg
mov
mov
push
pushl
pushl
jmp
pop
add
jmp
pop
mov
xor
mov
add
push
jmp
add
add
jmp
add
add
jmp
mov
mov
jmp
push
mov
add
mov
push
mov
add
add
xchg
pop
jmp
popl
jmp
add
add
jmp
mov
add
pushl
pop
jmp
mov
pop
add
pop
xchg
pop
pop
mov
jmp
or
jne
sub
mov
mov
push
mov
jmp
pushl
pushl
pop
add
push
mov
jmp
inc
xor
add
add
mov
add
push
mov
jmp
push
pushl
pushl
jmp
add
inc
add
jmp
shr
sub
jmp
mov
pop
add
dec
dec
add
add
pop
add
jmp
mov
add
add
jmp
add
add
xchg
pop
push
mov
jmp
jmp
not
jmp
mov
jmp
sub
jmp
add
sub
mov
mov
sub
add
jmp
xchg
pop
or
add
or
push
push
jmp
mov
add
pushl
pop
add
jmp
pop
jmp
pop
jmp
pop
xor
jmp
mov
sub
mov
jmp
pop
sub
xor
xor
xor
mov
mov
mov
jmp
sub
add
push
jmp
add
xchg
jmp
mov
push
push
pop
inc
push
jmp
xor
jmp
mov
push
mov
or
pop
not
sub
add
add
pop
push
mov
sub
jmp
mov
jmp
or
jmp
pop
push
mov
jmp
mov
push
push
mov
add
push
jmp
mov
mov
jmp
mov
xor
pop
xor
jmp
shr
sub
jmp
push
jmp
and
pop
jmp
push
mov
add
pop
pop
jmp
add
jmp
sub
mov
mov
jmp
add
jmp
xor
xor
pop
btc
pushf
jmp
push
jmp
pop
jmp
mov
jmp
mov
mov
jmp
add
jmp
xor
or
add
add
mov
jmp
mov
shl
or
push
jmp
sub
add
jmp
mov
pushw
mov
sub
mov
push
mov
jmp
pop
add
add
sub
mov
add
jmp
push
jmp
mov
jmp
pop
pop
push
mov
push
jmp
inc
jmp
not
push
push
mov
sub
mov
pop
sub
jmp
and
inc
push
mov
sub
pop
jmp
and
push
mov
jmp
mov
addl
jmp
dec
not
shr
xor
add
jmp
add
add
pop
push
mov
mov
xor
sub
jmp
push
jmp
xor
pop
xor
neg
push
push
mov
mov
jmp
xor
xor
pop
add
sub
push
jmp
pop
add
sub
mov
sub
mov
push
pop
add
jmp
push
mov
add
jmp
add
add
sub
dec
xor
push
mov
and
jmp
mov
jmp
lods
push
mov
mov
push
jmp
pop
popl
mov
jmp
pop
push
pushl
jmp
sub
mov
add
add
add
add
sub
add
add
push
jmp
shr
dec
add
add
or
pop
push
jmp
push
mov
mov
push
jmp
add
push
mov
sub
mov
jmp
mov
push
jmp
push
mov
pushl
pushl
pop
push
jmp
add
add
jmp
add
add
xchg
pop
jmp
add
add
mov
jmp
pop
add
jmp
mov
push
jmp
mov
add
mov
add
mov
jmp
push
pop
add
add
xchg
jmp
pop
sub
mov
mov
sub
mov
push
mov
add
inc
sub
shl
and
xor
add
add
sub
jmp
mov
add
sub
add
mov
push
mov
push
jmp
add
pushl
pop
push
mov
push
mov
push
jmp
add
popl
mov
mov
xchg
not
push
pushl
jmp
push
mov
add
pop
jmp
shr
jmp
xchg
pop
jmp
push
push
jmp
not
xor
xor
xor
add
pop
sub
xor
xor
xor
jmp
pop
jmp
add
pop
push
mov
add
jmp
not
jmp
add
push
mov
push
mov
add
jmp
neg
or
jmp
pushl
jmp
xor
sub
jmp
pushl
pop
add
push
jmp
add
jmp
sub
mov
jmp
pop
jmp
mov
add
pushl
pop
add
jmp
pop
add
xchg
pop
add
sub
mov
mov
sub
pop
movzbl
jmp
popa
ret
jmp
jmp
mov
xor
xor
xor
jmp
mov
jmp
mov
mov
jmp
xor
mov
push
mov
jmp
pushl
jmp
xchg
sub
mov
mov
sub
jmp
mov
mov
push
mov
xor
jmp
add
push
mov
jmp
add
pop
and
sub
add
mov
add
jmp
mov
add
push
jmp
add
push
mov
mov
jmp
add
push
mov
pushl
mov
jmp
add
mov
push
mov
mov
add
add
push
pushl
pop
popl
jmp
mov
addl
mov
add
push
mov
or
jmp
sub
pop
push
mov
add
pop
jmp
add
pop
xchg
mov
push
mov
jmp
push
mov
xor
pop
jmp
mov
mov
sub
pop
mov
jmp
mov
push
push
mov
push
mov
add
pop
jmp
push
mov
add
add
jmp
mov
jmp
xor
dec
xor
xor
pop
push
push
pop
add
sub
xchg
pop
mov
pushl
pop
add
mov
add
push
jmp
sub
mov
push
mov
jmp
addl
jmp
pop
or
jmp
add
add
jmp
mov
not
inc
push
mov
add
pop
not
xor
push
mov
push
mov
mov
push
mov
push
mov
mov
mov
jmp
add
add
push
mov
push
push
push
pop
xor
add
jmp
pop
jmp
push
mov
push
mov
jmp
mov
add
jmp
push
pop
mov
mov
jmp
push
pushl
mov
push
mov
jmp
add
add
sub
mov
add
xor
jmp
add
push
mov
sub
mov
jmp
push
mov
add
xor
pop
sub
pop
pop
movzbl
pushl
jmp
push
sub
jmp
mov
push
jmp
mov
add
add
add
jmp
mov
pop
xor
mov
jmp
pop
push
jmp
add
add
inc
not
jmp
pop
sub
not
add
xor
xor
jmp
pop
add
mov
push
mov
add
jmp
push
jmp
pushw
mov
push
mov
jmp
pop
movzbl
jmp
add
push
push
mov
xor
jmp
add
shl
sub
jmp
sub
pop
push
jmp
or
jne
push
mov
jmp
pop
add
mov
add
pop
jmp
push
pop
add
jmp
neg
jmp
mov
jmp
push
mov
mov
add
jmp
push
push
pop
jmp
add
push
pushl
mov
jmp
pushl
pop
jmp
push
push
jmp
mov
mov
xor
jmp
sub
pop
mov
add
and
pop
jmp
add
pop
xor
xor
xor
mov
jmp
xchg
jmp
push
mov
jmp
push
mov
add
pop
pop
xor
jmp
sub
add
pushl
pop
push
mov
add
add
xor
xor
xor
jmp
lods
add
push
mov
jmp
add
pop
add
sub
jmp
pop
push
sub
mov
addl
pushl
pop
push
mov
add
add
xchg
pop
add
push
mov
jmp
mov
mov
pop
xor
shr
jmp
add
sub
pop
sub
push
jmp
sub
pop
not
or
jmp
pop
add
shl
jmp
sub
jmp
sub
mov
push
mov
addl
jmp
add
push
jmp
shr
push
mov
push
push
jmp
add
pop
sub
add
add
add
sub
jmp
add
add
sub
push
mov
jmp
mov
jmp
pop
xchg
mov
jmp
shl
sub
jmp
mov
push
push
jmp
push
mov
shr
sub
dec
jmp
mov
pop
xor
pop
jmp
mov
add
pop
pop
add
push
pushl
pop
jmp
xor
pop
mov
pop
add
jmp
add
add
pop
add
jmp
push
mov
add
add
xchg
pop
push
push
mov
add
add
pushl
jmp
add
add
pop
pop
sub
jmp
push
mov
inc
shr
inc
push
jmp
push
push
mov
jmp
mov
mov
shl
jmp
shl
xor
add
pop
pop
jmp
push
mov
add
sub
mov
mov
add
sub
xchg
pop
mov
push
mov
mov
sub
pop
push
mov
add
jmp
sub
add
pop
dec
jmp
xchg
pop
push
mov
jmp
push
mov
sub
xor
sub
sub
mov
mov
jmp
shr
dec
not
dec
push
jmp
add
add
xchg
pop
jmp
xor
xor
add
jmp
xchg
pop
push
mov
jmp
add
add
sub
jmp
mov
add
pop
add
push
mov
pushl
jmp
mov
jmp
add
pop
push
jmp
add
sub
jmp
sub
jmp
add
xor
xor
xor
pop
bts
pushf
jmp
cmpl
je
add
add
add
sub
push
push
mov
jmp
pushl
pop
push
mov
jmp
sub
pop
add
pop
xor
xor
jmp
add
pop
add
jmp
sub
mov
mov
push
push
jmp
mov
sub
sub
mov
pop
neg
shr
dec
push
mov
mov
jmp
xor
not
jmp
sub
jmp
mov
mov
jmp
pop
jmp
push
push
mov
jmp
mov
mov
jmp
mov
add
pop
dec
push
push
pop
sub
push
jmp
pop
add
push
pop
push
mov
sub
pop
sub
sub
add
push
mov
mov
add
mov
add
mov
push
mov
mov
add
add
jmp
pop
inc
add
push
mov
jmp
mov
push
pop
jmp
mov
add
add
pushl
jmp
xor
jmp
mov
mov
add
sub
mov
add
pushl
jmp
sub
xor
pop
push
mov
push
jmp
not
jmp
push
mov
add
jmp
add
pop
and
mov
add
or
je
pushl
jmp
pop
xor
xor
xor
mov
pushl
jmp
or
jmp
push
mov
jmp
xor
push
mov
jmp
add
mov
pop
push
pop
pushl
pop
jmp
mov
mov
sub
sub
push
jmp
add
push
mov
add
pop
sub
mov
push
mov
sub
mov
pop
jmp
pop
mov
pop
add
pop
push
mov
pushl
mov
jmp
mov
push
pop
pop
push
sub
mov
mov
xor
mov
add
pop
jmp
mov
push
mov
jmp
add
sub
push
mov
jmp
mov
mov
jmp
mov
push
jmp
add
pop
mov
jmp
mov
sub
pop
xor
jmp
push
mov
push
jmp
mov
pop
and
pushl
pushl
pop
push
push
pop
add
add
xchg
pop
push
jmp
sub
push
jmp
pop
mov
jmp
pop
push
jmp
pushl
pop
popl
jmp
notl
pop
xor
xor
jmp
add
push
mov
jmp
add
xchg
pop
add
jmp
pop
push
mov
and
jmp
not
dec
jmp
mov
add
add
mov
jmp
mov
add
add
push
mov
sub
jmp
add
xor
mov
mov
add
inc
xor
sub
sub
add
add
jmp
mov
jmp
push
mov
jmp
push
mov
shr
shl
add
jmp
mov
add
push
mov
mov
shr
jmp
mov
add
jmp
add
push
incl
pop
push
push
push
mov
add
mov
pop
sub
pop
sub
pop
mov
pop
add
push
mov
add
mov
pop
pop
pop
jmp
pop
pop
pop
mov
pushl
pop
push
jmp
mov
mov
jmp
xchg
mov
jmp
not
sub
mov
mov
jmp
and
not
push
mov
jmp
ret
jmp
add
push
mov
xor
jmp
push
jmp
sub
xchg
pop
jmp
add
movl
jmp
add
add
jmp
xor
mov
pop
jmp
xchg
pop
jmp
pop
jmp
pop
sub
sub
push
mov
add
sub
pop
add
add
push
xorl
pop
jmp
push
pop
sub
mov
jmp
sub
xchg
pop
mov
jmp
shl
and
add
jmp
mov
pop
jmp
pushl
pop
add
xor
xor
xor
jmp
push
mov
mov
pop
mov
jmp
mov
mov
add
jmp
sub
pop
jmp
mov
push
mov
add
mov
push
jmp
not
push
mov
jmp
pop
mov
jmp
inc
dec
xor
xor
neg
jmp
push
mov
xor
add
pop
push
jmp
lods
xor
pushw
mov
jmp
mov
sub
pop
or
mov
add
xor
mov
mov
jmp
mov
pop
add
pop
jmp
pop
add
xor
add
add
push
mov
sub
pop
mov
add
xchg
mov
push
push
mov
mov
jmp
sub
push
push
pushw
jmp
pop
sub
jmp
jmp
mov
mov
xor
add
pop
or
xor
add
add
jmp
add
pop
jmp
add
pop
sub
mov
mov
shl
sub
sub
jmp
mov
add
push
jmp
pop
xor
xor
xor
pop
push
pushl
pushl
pop
push
jmp
jmp
mov
push
mov
mov
add
jmp
push
jmp
push
mov
push
mov
addl
pop
push
mov
add
pop
push
mov
add
push
mov
add
pop
add
sub
add
add
sub
push
mov
shr
xor
jmp
mov
push
mov
push
jmp
sub
add
add
pop
push
mov
mov
add
sub
sub
mov
jmp
pop
jmp
sub
sub
add
add
pop
push
pop
jmp
pushl
jmp
push
jmp
mov
jmp
subl
add
addl
addl
pop
jmp
push
mov
jmp
push
mov
sub
mov
add
jmp
add
xor
jmp
add
shr
jmp
mov
push
jmp
inc
inc
add
xor
pop
jmp
xor
xor
push
mov
push
mov
or
xor
jmp
mov
push
pop
add
sub
push
mov
mov
inc
sub
shr
xor
sub
pop
pop
xchg
pop
push
popl
push
mov
add
pop
pop
add
jmp
rolw
pushf
jmp
mov
jmp
add
mov
mov
add
jmp
not
dec
or
add
jmp
shl
add
xor
pop
sub
pop
neg
shr
jmp
push
mov
add
pop
sub
mov
mov
sub
mov
add
xor
jmp
xchg
pop
mov
jmp
pop
jmp
pop
push
jmp
push
mov
add
sub
xchg
mov
jmp
mov
push
pop
jmp
pop
jmp
add
pop
sub
mov
mov
sub
pop
mov
pop
jmp
mov
add
jmp
mov
add
push
push
mov
shl
xor
jmp
push
pop
jmp
pop
pushw
jmp
push
push
subl
pop
add
jmp
sub
pop
xor
xor
jmp
inc
xor
jmp
pop
sub
push
mov
sub
mov
push
mov
add
jmp
xor
pop
sub
jmp
sub
add
add
push
push
mov
mov
sub
jmp
mov
push
mov
add
jmp
pop
add
push
jmp
sub
add
add
push
push
push
jmp
shr
neg
shl
add
jmp
pop
pop
jmp
xor
add
or
inc
add
add
pop
jmp
mov
jmp
push
mov
add
pop
add
push
mov
jmp
mov
jmp
inc
sub
sub
pop
jmp
mov
push
mov
mov
pop
pop
mov
jmp
pop
add
jmp
and
push
mov
mov
sub
pop
jmp
push
mov
sub
jmp
mov
push
mov
add
jmp
mov
jmp
mov
jmp
xor
xor
xor
pop
popl
jmp
pushl
mov
push
jmp
shr
inc
push
mov
xor
pop
sub
mov
mov
jmp
xor
jmp
add
pop
sub
sub
add
push
push
pop
push
mov
sub
and
shl
inc
add
jmp
push
mov
add
sub
jmp
pop
push
mov
jmp
sub
pop
push
push
mov
jmp
pop
push
mov
jmp
pushl
jmp
sub
mov
jmp
push
mov
push
push
pop
add
push
mov
jmp
sub
add
push
mov
shl
sub
add
xor
add
pop
mov
add
push
jmp
sub
add
add
jmp
push
jmp
sub
mov
push
pop
add
push
mov
add
jmp
pop
push
mov
add
add
pop
jmp
pop
mov
push
mov
add
push
jmp
add
and
shl
add
jmp
pop
add
add
add
push
mov
add
add
sub
sub
jmp
add
push
jmp
dec
sub
add
jmp
push
addl
pop
sub
pushl
jmp
pop
jmp
push
mov
xor
jmp
mov
add
add
xchg
jmp
pop
jmp
mov
push
mov
jmp
decl
pop
add
add
pop
jmp
mov
add
push
mov
mov
add
pop
jmp
xor
jmp
push
subl
pop
add
jmp
xor
pop
add
add
sub
mov
add
push
jmp
add
jmp
mov
sub
mov
push
pop
push
push
jmp
push
push
mov
mov
mov
add
pop
mov
mov
jmp
pushl
pop
add
mov
add
push
push
push
mov
add
push
mov
add
shl
jmp
add
xor
xor
xor
pop
pushl
mov
jmp
sub
jmp
pop
jmp
add
push
mov
push
mov
not
shr
xor
mov
jmp
pop
push
jmp
mov
push
pushf
jmp
push
mov
neg
and
add
xor
jmp
add
sub
pop
mov
add
add
pop
xchg
mov
jmp
mov
add
or
not
jmp
xor
xor
pop
and
jmp
pushl
popf
pop
sbb
pushf
jmp
add
add
sub
pop
push
mov
add
pop
push
jmp
add
and
push
mov
sub
pop
sub
not
xor
add
mov
push
mov
add
add
xchg
pop
add
push
mov
sub
pop
jmp
sub
mov
mov
jmp
add
jmp
subl
mov
add
sub
mov
push
jmp
mov
sub
neg
push
mov
add
xor
add
shr
xor
add
pop
jmp
sub
pop
sub
mov
push
jmp
addl
add
jmp
push
mov
add
add
xchg
pop
jmp
neg
inc
and
push
mov
shr
jmp
mov
sub
mov
addl
pop
add
jmp
notl
pop
xchg
push
push
mov
push
pop
jmp
add
pop
sub
push
mov
not
mov
mov
add
sub
or
push
mov
push
mov
jmp
popl
addl
jmp
xor
mov
mov
push
jmp
xchg
mov
mov
sub
mov
push
mov
shl
push
notl
jmp
pop
jmp
add
push
push
mov
add
xor
push
mov
add
not
inc
jmp
mov
add
pop
jmp
add
add
mov
push
jmp
add
sub
pushl
pop
add
add
push
pushl
jmp
add
add
xchg
pop
sub
mov
mov
push
mov
and
neg
and
jmp
addl
pop
jmp
pop
jmp
xor
mov
bt
pushf
jmp
neg
sub
mov
mov
add
jmp
add
popl
pop
mov
jmp
xchg
pop
shll
jmp
or
add
sub
add
pop
jmp
mov
jmp
xor
mov
add
push
addl
pop
jmp
pushl
pop
jmp
add
sub
sub
jmp
push
mov
xor
jmp
pop
push
mov
jmp
mov
mov
pop
mov
pop
add
xor
pop
jmp
mov
jmp
sub
pop
add
mov
add
push
mov
sub
pop
jmp
add
sub
jmp
pop
pop
xor
add
pop
xor
xor
xor
mov
jmp
push
mov
push
jmp
pop
not
mov
pop
add
sub
jmp
pushw
mov
jmp
shl
sub
add
jmp
inc
jmp
sub
add
mov
push
mov
add
add
xchg
pop
xor
xor
xor
mov
jmp
push
mov
mov
neg
jmp
mov
push
push
mov
addl
mov
add
push
mov
add
jmp
mov
mov
pop
xor
xor
xor
not
xchg
shl
jmp
xor
jmp
addl
jmp
mov
jmp
push
push
popl
jmp
jmp
mov
add
jmp
mov
sub
mov
mov
jmp
sub
mov
sub
jmp
neg
and
sub
add
neg
shr
sub
push
mov
jmp
popl
push
mov
jmp
push
mov
add
add
xchg
pop
push
mov
push
pushl
pop
jmp
add
sub
jmp
mov
mov
add
push
mov
xor
jmp
sub
sub
jmp
push
mov
neg
not
neg
sub
sub
add
add
pop
add
jmp
xchg
jmp
pop
sub
mov
add
add
pop
shr
jmp
push
mov
neg
dec
sub
add
pop
xor
jmp
mov
jmp
add
add
sub
pop
push
pushl
pop
popl
pop
mov
push
pop
push
mov
sub
sub
jmp
push
mov
push
mov
mov
jmp
sub
mov
pop
sub
mov
add
push
push
jmp
pop
mov
sub
mov
jmp
push
push
pop
push
mov
mov
shl
add
jmp
mov
add
add
mov
add
sub
jmp
push
jmp
push
mov
or
not
xor
inc
dec
not
add
add
push
mov
jmp
add
mov
push
jmp
mov
pushl
pop
popl
mov
incw
pushf
jmp
negw
pushf
jmp
pop
add
mov
add
add
xor
jmp
add
push
mov
sub
pop
xchg
pop
mov
pushl
mov
add
popl
mov
xor
jmp
pop
add
push
push
jmp
mov
jmp
add
add
jmp
push
mov
shr
neg
jmp
push
mov
add
add
xchg
pop
shr
or
je
push
mov
jmp
pop
jmp
xchg
jmp
add
pop
add
and
mov
add
jmp
sub
jmp
push
mov
mov
jmp
mov
push
jmp
add
add
add
push
mov
jmp
mov
add
add
sub
jmp
add
jmp
add
add
sub
push
push
mov
mov
jmp
mov
push
mov
jmp
push
mov
mov
pop
pop
jmp
mov
pop
jmp
push
mov
addl
pop
jmp
not
push
mov
sub
dec
shl
jmp
xor
sub
sub
pop
push
addl
pop
sub
pop
push
mov
add
pop
jmp
mov
push
mov
add
jmp
push
mov
xchg
not
jmp
mov
jmp
mov
add
push
push
mov
jmp
pop
or
pushf
jmp
xor
jmp
sub
pop
jmp
decb
pushf
jmp
add
jmp
pushl
xorl
pop
push
mov
push
mov
jmp
xor
xor
jmp
sub
mov
mov
add
mov
add
xor
add
add
push
mov
sub
jmp
add
add
jmp
push
mov
push
push
mov
shl
push
jmp
xor
xchg
push
xchg
jmp
mov
jmp
inc
push
mov
mov
add
dec
sub
xor
pop
and
pop
shr
push
mov
sub
pop
shr
jmp
xor
pop
mov
push
mov
addl
mov
add
add
push
mov
sub
add
add
pop
xor
xor
xor
pop
imul
push
pushf
jmp
push
pushf
jmp
mov
push
jmp
xor
jmp
or
xor
jmp
lods
push
push
mov
mov
pop
push
mov
sub
jmp
pushl
popf
pop
rcll
pushf
jmp
add
jmp
add
pop
sub
pop
sub
add
jmp
add
pop
add
pushl
jmp
mov
push
jmp
shr
or
add
mov
pop
sub
pop
pushl
pop
push
mov
push
mov
jmp
sub
pop
add
pop
push
pushl
mov
jmp
add
pop
mov
pop
jmp
mov
add
push
mov
mov
neg
shr
not
add
add
sub
sub
add
jmp
mov
push
push
jmp
sub
push
mov
mov
subl
addl
sub
subl
addl
pop
push
mov
jmp
push
sub
mov
addl
jmp
mov
mov
xor
pop
push
mov
jmp
pop
jmp
push
jmp
mov
jmp
push
push
pop
sub
jmp
mov
push
jmp
subl
pop
pop
jmp
add
sub
pop
push
mov
inc
shl
xor
add
add
pop
add
mov
add
sub
mov
push
push
pop
jmp
mov
jmp
mov
jmp
add
pop
xor
pushl
mov
jmp
popl
jmp
pop
add
movzbl
jmp
add
sub
add
mov
add
mov
jmp
xor
xor
xor
pop
mov
jmp
push
mov
jmp
pop
xor
xor
xor
mov
btc
pushf
jmp
pushl
jmp
pop
neg
push
mov
add
sub
neg
shr
neg
sub
sub
pop
dec
add
xor
jmp
mov
jmp
and
add
xor
jmp
pop
xor
xor
xor
pop
push
jmp
add
jmp
pop
add
sub
jmp
push
mov
jmp
push
jmp
sub
jmp
push
mov
jmp
pop
push
jmp
mov
add
sub
xor
xor
xor
pop
mov
jmp
push
mov
push
xorl
pop
xor
pop
mov
add
and
mov
jmp
pop
sub
mov
mov
jmp
push
mov
push
mov
jmp
push
mov
add
add
pop
xchg
pop
pop
jmp
xchg
pop
xor
add
pop
push
push
mov
xor
jmp
xor
jmp
mov
jmp
sub
sub
mov
jmp
push
mov
pushl
pop
push
mov
push
mov
neg
add
sub
add
add
pop
jmp
sub
pop
push
mov
jmp
add
jmp
sub
pop
add
add
push
mov
jmp
pushl
pop
push
mov
add
jmp
popl
pop
add
jmp
mov
add
jmp
inc
and
sub
xor
add
pop
add
xchg
pop
jmp
mov
jmp
add
add
pop
sub
jmp
xchg
pop
mov
push
push
push
pop
inc
sub
push
subl
pop
add
pop
push
mov
jmp
push
jmp
mov
push
mov
mov
push
mov
sub
add
jmp
add
xchg
pop
sub
mov
jmp
add
sub
mov
mov
add
add
pop
jmp
add
pop
add
push
mov
and
xor
sub
pushl
pop
jmp
and
add
push
jmp
mov
push
jmp
pushl
pushl
mov
add
jmp
pop
add
xor
xor
jmp
or
push
mov
xor
mov
add
jmp
xor
xor
mov
push
push
push
pop
neg
shr
xor
jmp
mov
push
pushf
jmp
mov
idiv
jmp
mov
and
jmp
xchg
pop
push
push
sub
mov
mov
shr
not
jmp
mov
add
jmp
mov
add
jmp
sub
mov
push
push
pop
add
push
mov
jmp
mov
push
mov
jmp
sub
sub
mov
add
sub
add
add
pop
jmp
pop
jmp
push
push
mov
jmp
mov
decl
jmp
add
add
pop
add
subl
pop
push
mov
jmp
xor
xor
xor
pop
mov
pop
jmp
add
popl
mov
mov
jmp
shl
xor
jmp
add
jmp
pop
pop
push
mov
sub
mov
mov
jmp
pop
popl
mov
jmp
mov
sub
jmp
mov
jmp
add
jmp
add
jmp
push
push
addl
pushl
pop
jmp
push
pushl
pop
popl
jmp
pop
add
sub
jmp
dec
jmp
and
neg
shr
or
xor
jmp
pop
mov
push
push
mov
jmp
notl
mov
push
push
pop
add
jmp
not
dec
jmp
sub
pop
add
add
push
mov
add
add
sub
pushl
pushl
pop
jmp
push
mov
push
push
pop
jmp
push
jmp
sub
push
mov
not
shr
xor
xor
pop
mov
pop
sub
jmp
push
jmp
add
xor
pop
jmp
mov
mov
sub
jmp
add
add
pop
add
sub
mov
push
jmp
addl
pop
add
push
mov
dec
sub
push
mov
neg
or
jmp
shr
inc
shr
shr
xor
jmp
xor
xor
xor
mov
jmp
push
jmp
mov
jmp
add
jmp
dec
push
mov
or
pop
xor
add
pop
push
mov
jmp
push
mov
jmp
sub
sub
add
mov
push
mov
add
add
xchg
pop
mov
sub
mov
mov
add
add
xchg
pop
jmp
pushl
jmp
xchg
pop
jmp
xor
jmp
pop
push
jmp
push
push
mov
add
xor
jmp
pushl
pushl
pop
push
mov
add
push
mov
add
pop
jmp
mov
jmp
mov
mov
jmp
push
mov
push
mov
sub
pop
xor
jmp
add
mov
add
xchg
jmp
add
mov
add
jmp
add
sub
pop
sub
mov
jmp
sub
mov
pushl
jmp
pop
and
jmp
mov
add
add
jmp
pop
jmp
add
jmp
and
add
push
mov
inc
jmp
sub
sub
jmp
and
sub
inc
sub
sub
pop
pop
jmp
not
xor
xor
jmp
pushl
mov
jmp
inc
shl
jmp
mov
mov
push
mov
push
mov
mov
add
pushl
pop
push
push
pop
jmp
pushw
push
popw
pushw
jmp
mov
sub
pop
jmp
pop
push
mov
add
pop
add
xchg
jmp
pop
xor
movzbw
jmp
push
jmp
shl
shr
shr
push
mov
dec
push
mov
xor
and
sub
shl
xor
xor
pop
add
pop
xor
mov
add
jmp
sub
xchg
pushl
pop
jmp
push
mov
add
pop
jmp
lods
xor
push
mov
jmp
add
add
sub
mov
mov
not
push
jmp
pushl
jmp
mov
jmp
push
subl
mov
add
add
jmp
mov
xor
pop
push
subl
pop
add
pop
add
jmp
sub
add
push
jmp
push
sub
mov
jmp
lods
push
mov
mov
add
jmp
xor
mov
imul
jmp
pop
push
jmp
popl
jmp
mov
mov
jmp
push
mov
jmp
xor
inc
inc
inc
add
and
jmp
push
mov
addl
add
subl
pop
pop
jmp
add
sub
sub
jmp
incb
pushf
jmp
pop
sub
sub
add
push
push
pop
shl
add
push
mov
push
pushl
pop
jmp
add
jmp
mov
mov
pop
pop
push
mov
shr
jmp
add
pop
inc
add
jmp
push
jmp
push
push
pop
add
sub
xchg
pop
mov
mov
push
mov
add
pop
sub
jmp
shr
or
push
decl
pop
xor
sub
jmp
pop
sub
add
pushl
pop
add
xor
xor
jmp
mov
push
mov
jmp
mov
pop
jmp
push
mov
sub
xor
pop
push
mov
xor
pop
jmp
push
pop
sub
dec
xchg
not
xchg
xor
push
jmp
sub
jmp
add
jmp
xor
shl
jmp
pop
push
mov
add
add
jmp
and
jmp
xchg
jmp
push
mov
add
shr
not
shl
xor
jmp
push
sub
mov
push
mov
mov
mov
add
or
shl
or
sub
sub
jmp
add
mov
add
jmp
mov
pop
mov
add
sub
jmp
pop
push
mov
mov
pop
push
jmp
mov
mov
push
jmp
mov
mov
pop
mov
pop
push
mov
jmp
push
jmp
xchg
pop
jmp
mov
push
jmp
xor
mov
add
push
push
mov
mov
mov
pop
add
mov
add
push
mov
pushl
mov
jmp
mov
pop
add
jmp
add
pop
add
sub
push
jmp
push
mov
mov
xor
mov
jmp
pop
add
add
pop
sub
xchg
jmp
pop
push
mov
not
neg
jmp
xor
xor
pop
mov
push
push
mov
add
pop
jmp
push
pop
dec
sub
mov
pop
add
xor
add
xor
pop
and
mov
jmp
mov
jmp
mov
add
pop
sub
add
add
jmp
add
jmp
dec
not
sub
mov
pop
sub
add
push
mov
add
pop
pop
xchg
jmp
push
jmp
add
pop
jmp
mov
and
and
shr
and
jmp
add
sub
xchg
jmp
mov
add
mov
jmp
mov
add
pop
add
sub
add
jmp
shl
shr
dec
dec
jmp
pop
push
jmp
pop
pop
mov
xor
jmp
add
or
or
sub
shr
or
sub
mov
push
pop
sub
push
mov
jmp
mov
or
jmp
mov
push
jmp
sub
add
add
pop
push
push
push
mov
push
mov
mov
jmp
shr
not
add
sub
sub
pop
pop
sub
sub
push
mov
shr
sub
jmp
add
shr
jmp
sub
pop
push
mov
neg
sub
shl
push
mov
jmp
mov
sub
mov
addl
jmp
pop
pop
movzwl
pushw
mov
jmp
pushl
pop
jmp
push
push
pop
sub
mov
mov
jmp
add
or
pop
add
jmp
push
jmp
add
sub
jmp
sub
mov
push
jmp
add
xor
push
mov
pop
mov
jmp
push
mov
jmp
shl
inc
push
mov
push
mov
mov
sub
pop
push
jmp
pushl
mov
jmp
pop
jmp
mov
xor
pop
add
sub
sub
pop
mov
push
jmp
pop
add
add
push
mov
jmp
sub
sub
pop
push
mov
push
mov
push
mov
add
mov
jmp
pop
popl
not
sub
mov
jmp
mov
push
push
jmp
add
jmp
add
popl
mov
sub
pushf
jmp
mov
pop
mov
add
jmp
addl
mov
jmp
not
jmp
dec
inc
jmp
pop
xor
xor
xor
mov
btr
pushf
jmp
or
pop
shl
push
jmp
mov
jmp
add
sub
xchg
pop
mov
jmp
pop
jmp
mov
push
jmp
mov
push
mov
push
pushl
jmp
dec
sub
add
pop
or
jmp
mov
pop
jmp
push
negl
pop
push
mov
xor
pop
add
jmp
and
or
sub
mov
pop
sub
jmp
add
xchg
mov
xchg
jmp
and
inc
sub
xor
pop
jmp
pop
jmp
mov
add
push
pushl
mov
push
mov
push
mov
jmp
add
push
mov
jmp
push
mov
mov
jmp
sub
add
pop
jmp
shr
push
push
jmp
lods
sub
mov
push
mov
push
mov
shl
xor
jmp
pop
jmp
sub
pop
or
pop
add
jmp
push
mov
push
mov
push
mov
add
pop
pop
add
push
jmp
xor
pop
shl
push
mov
dec
not
neg
jmp
and
jmp
add
jmp
mov
shr
push
push
mov
jmp
pop
sub
sub
jmp
sub
sub
sub
add
jmp
mov
add
jmp
not
dec
sub
sub
add
pop
sub
mov
add
push
pushl
mov
add
popl
jmp
push
push
mov
mov
jmp
add
push
mov
jmp
push
mov
mov
jmp
add
mov
jmp
push
mov
add
pop
sub
mov
pushl
pop
popl
pop
jmp
sub
pop
sub
mov
push
mov
shr
or
and
push
mov
mov
not
add
shr
not
jmp
push
jmp
xor
pop
jmp
sub
jmp
inc
add
and
add
jmp
sub
xchg
pop
mov
push
mov
mov
pop
add
shr
push
jmp
push
jmp
not
sub
mov
jmp
pop
mov
sub
sub
push
push
mov
push
pop
pop
shr
sub
inc
sub
jmp
pushl
pushl
mov
add
add
add
push
mov
jmp
push
jmp
and
pop
shr
xor
push
mov
push
push
push
jmp
mov
mov
push
mov
add
pop
add
xor
xor
xor
mov
add
pop
push
mov
add
push
mov
add
pop
xor
mov
jmp
sub
pop
jmp
push
jmp
push
mov
xor
inc
xor
and
pop
push
jmp
and
jmp
push
jmp
sub
pop
add
add
jmp
push
mov
mov
jmp
xor
pop
xor
jmp
sub
jmp
pop
push
push
jmp
or
je
pushl
jmp
push
mov
sub
jmp
push
pushl
pop
popl
mov
jmp
sub
sub
jmp
mov
add
popl
pop
xor
jmp
add
sub
xchg
mov
mov
jmp
shr
jmp
mov
add
push
mov
xor
sub
mov
mov
jmp
push
mov
push
jmp
mov
jmp
push
mov
xor
mov
jmp
pop
xchg
mov
mov
jmp
push
jmp
mov
push
push
sub
mov
addl
jmp
mov
addl
mov
jmp
push
mov
xor
not
shr
inc
xor
or
pop
jmp
mov
mov
push
push
jmp
mov
jmp
add
jmp
pushl
popf
pop
sbb
pushf
jmp
sub
pushl
pop
add
pushl
pop
sub
mov
mov
add
jmp
mov
jmp
neg
xchg
push
mov
sub
mov
add
xor
sub
add
add
pop
sub
jmp
add
add
pop
xchg
pop
jmp
push
mov
pushl
pop
jmp
xor
xor
push
sub
mov
addl
pop
add
push
jmp
pushl
pop
push
mov
add
add
xchg
pop
add
add
add
push
jmp
push
push
mov
add
push
mov
mov
jmp
mov
add
pop
jmp
push
mov
push
addl
pop
push
mov
not
sub
add
sub
pop
mov
jmp
not
dec
push
mov
add
mov
add
jmp
mov
mov
xor
xor
xor
neg
xchg
push
mov
push
mov
sub
pop
add
add
pushl
jmp
xchg
pop
mov
add
jmp
mov
xchg
inc
jmp
add
add
xchg
pop
jmp
mov
jmp
push
mov
xor
sub
push
pop
pop
xor
mov
add
jmp
and
pushl
pop
jmp
add
sub
inc
add
add
mov
pop
jmp
sub
mov
push
mov
add
shl
sub
mov
pop
add
pop
pop
add
sub
jmp
pop
shr
xor
push
jmp
add
xchg
pop
popl
pop
jmp
add
xchg
jmp
mov
pop
jmp
pop
sub
add
add
pushl
pop
add
jmp
mov
sub
mov
add
push
mov
mov
pop
pop
sub
shl
jmp
or
add
add
add
jmp
pop
jmp
jmp
sub
sub
mov
add
add
add
add
pop
push
mov
add
sub
push
jmp
dec
or
shl
push
mov
dec
jmp
pop
add
sub
xchg
pop
mov
push
mov
xor
shl
sub
push
mov
jmp
mov
add
add
push
mov
add
sub
xchg
pop
mov
pushl
pop
popl
pop
push
mov
jmp
add
jmp
xchg
pop
mov
jmp
sub
add
jmp
shr
neg
push
mov
jmp
mov
jmp
mov
xor
jmp
add
add
pop
pop
pop
push
mov
jmp
pop
add
sub
push
jmp
pop
add
and
push
mov
inc
jmp
push
jmp
shr
sub
jmp
pushl
jmp
add
push
pushl
pop
popl
mov
pushl
jmp
addl
mov
add
jmp
push
push
mov
and
or
or
sub
shl
jmp
add
add
xchg
pop
push
mov
push
pop
jmp
mov
jmp
mov
add
sub
pop
sub
mov
push
mov
push
mov
push
mov
neg
and
or
xor
and
push
jmp
push
mov
mov
pop
jmp
push
mov
sub
inc
shr
push
mov
not
shr
sub
jmp
push
mov
jmp
mov
sub
add
add
jmp
mov
and
inc
not
inc
shr
or
push
mov
xor
pop
jmp
add
pop
pop
push
mov
mov
add
sub
jmp
sub
sub
add
jmp
mov
xor
mov
add
push
mov
xor
jmp
xor
add
sub
mov
jmp
not
or
add
add
pop
xor
mov
pop
add
and
pop
and
jmp
mov
push
mov
add
sub
xchg
pop
mov
mov
shr
push
mov
push
mov
and
pop
push
mov
sub
sub
add
mov
pop
shr
xor
sub
pop
mov
pushl
pop
push
mov
add
add
xchg
pop
add
add
sub
jmp
push
mov
jmp
push
mov
jmp
push
mov
dec
xor
add
shr
or
jmp
push
mov
jmp
add
and
add
add
jmp
pushl
pop
add
shl
dec
add
add
pop
xchg
jmp
sub
push
mov
sub
sub
sub
sub
add
add
push
mov
sub
push
mov
mov
shr
sub
neg
xor
dec
xor
add
pop
sub
add
add
pop
pop
mov
sub
mov
mov
add
add
jmp
mov
add
push
mov
sub
pop
add
addw
mov
add
jmp
or
or
sub
sub
pop
pop
sub
sub
push
mov
add
shl
shr
or
jmp
push
jmp
mov
add
push
mov
sub
jmp
add
pop
sub
jmp
mov
mov
jmp
mov
sub
mov
push
mov
jmp
mov
sub
push
popl
addl
mov
jmp
mov
addl
pop
push
jmp
mov
shl
xor
add
add
pop
sub
pop
sub
pop
sub
mov
pop
sub
mov
push
pop
neg
shl
jmp
add
push
jmp
push
mov
dec
shl
add
not
shl
sub
and
pop
add
mov
pop
add
mov
sub
jmp
pop
push
mov
sub
pop
jmp
push
mov
add
add
xor
xor
xor
pop
push
mov
mov
add
jmp
sub
sub
jmp
mov
push
mov
sub
shr
add
jmp
push
mov
jmp
add
add
sub
add
add
pop
sub
mov
push
mov
add
sub
add
push
mov
add
pop
pop
xor
xor
xor
pop
jmp
push
push
mov
mov
mov
jmp
mov
neg
push
mov
xor
jmp
pop
add
push
push
push
pop
jmp
mov
push
pop
push
jmp
push
mov
jmp
sub
pop
sub
jmp
mov
push
pop
add
pushl
pop
push
push
pop
add
add
xchg
pop
xor
xor
xor
pop
push
mov
jmp
or
pop
dec
add
add
add
sub
pop
add
xor
jmp
push
mov
jmp
mov
mov
sub
mov
push
push
pop
jmp
push
jmp
push
jmp
push
jmp
add
jmp
add
add
sub
sub
sub
push
mov
add
neg
shl
push
mov
mov
push
mov
sub
jmp
mov
pop
sub
pop
mov
add
push
sub
mov
jmp
mov
push
mov
add
add
xchg
jmp
push
jmp
add
jmp
add
sub
xchg
pop
mov
mov
mov
pop
neg
jmp
or
jmp
sub
xor
jmp
addl
pop
push
jmp
mov
push
mov
push
jmp
add
pop
jmp
add
jmp
xor
mov
pop
jmp
push
mov
mov
xor
pop
jmp
sub
sub
pop
add
add
pushl
jmp
and
jmp
xor
jmp
or
jmp
add
pop
jmp
xchg
mov
pop
push
pushl
mov
push
mov
push
pop
jmp
mov
mov
jmp
pop
add
xchg
pop
sub
add
push
mov
add
neg
jmp
mov
mov
sub
jmp
pop
push
mov
jmp
pushl
popf
pop
sbb
pushf
jmp
sub
jmp
push
jmp
xor
mov
push
mov
jmp
mov
addl
pop
add
jmp
not
push
mov
add
shr
or
shl
dec
jmp
add
push
jmp
push
jmp
push
jmp
pop
jmp
add
jmp
mov
mov
pop
jmp
pop
xor
push
push
mov
shl
shl
xor
add
mov
pop
jmp
pushl
pop
add
sub
push
sub
mov
jmp
add
pop
xchg
jmp
push
jmp
xor
jmp
mov
push
mov
mov
add
push
jmp
mov
xor
pop
sub
sub
add
add
pop
xor
xor
xor
mov
or
pushf
jmp
and
shl
and
inc
jmp
mov
jmp
add
pop
sub
jmp
sub
push
mov
mov
pop
jmp
dec
jmp
add
push
jmp
shl
shr
sub
push
mov
xor
shl
shl
and
shr
xor
sub
pop
add
sub
push
mov
jmp
add
pop
xor
mov
push
jmp
pushl
pop
popl
jmp
push
mov
push
jmp
mov
add
jmp
mov
push
mov
jmp
mov
sub
and
and
neg
sub
and
pop
sub
mov
jmp
add
not
push
mov
neg
not
add
sub
sub
pop
sub
add
pushl
mov
push
jmp
mov
and
jmp
and
add
add
sub
push
pop
mov
add
sub
jmp
sub
jmp
push
jmp
neg
add
add
pop
dec
xor
sub
jmp
and
shl
sub
or
sub
add
pop
pop
xor
jmp
add
push
push
jmp
mov
sub
pop
xchg
pop
jmp
mov
mov
mov
add
pop
add
mov
add
pushw
mov
push
mov
mov
pop
sub
pop
sub
add
add
push
mov
push
mov
mov
shr
shr
add
inc
jmp
pop
add
push
mov
jmp
and
not
inc
xchg
not
xchg
xor
add
add
sub
mov
add
push
mov
jmp
mov
push
mov
jmp
add
add
pop
xor
xor
jmp
add
pop
sub
xor
mov
jmp
pop
sub
mov
jmp
mov
mov
push
mov
and
and
push
mov
xor
jmp
not
add
xor
mov
mov
jmp
add
jmp
sub
add
jmp
push
jmp
pop
or
shr
or
push
mov
xor
jmp
pop
sub
jmp
pop
add
pop
push
mov
mov
push
mov
notl
jmp
push
xorl
pop
xor
jmp
xor
pushl
mov
add
add
push
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
push
mov
mov
or
push
mov
and
pop
push
mov
jmp
sub
jmp
mov
jmp
pushl
popf
pop
rcrb
pushf
jmp
pop
push
mov
jmp
mov
add
add
xchg
jmp
lods
sub
add
sub
push
mov
sub
pop
sub
mov
mov
push
jmp
mov
jmp
dec
xor
push
jmp
add
add
mov
jmp
pop
mov
mov
add
jmp
add
push
mov
jmp
pushl
pop
popl
mov
div
sub
mov
push
push
popl
addl
jmp
mov
mov
sub
add
add
pushl
jmp
mov
push
push
jmp
pop
mov
pop
jmp
push
jmp
shr
jmp
xchg
pop
push
mov
mov
mov
mov
push
jmp
sub
add
add
pop
xchg
pop
mov
jmp
push
popl
push
mov
add
mov
add
mov
push
sub
mov
addl
pop
add
add
xchg
mov
add
push
mov
mov
add
pushl
pushl
pop
push
push
pop
add
jmp
mov
sub
jmp
mov
add
pop
add
sub
sub
add
pop
xchg
mov
mov
push
jmp
mov
jmp
push
jmp
pushl
jmp
add
popl
mov
mov
push
mov
add
sub
xchg
pop
mov
push
jmp
mov
jmp
pop
add
sub
xchg
pop
jmp
sub
jmp
pop
sub
jmp
mov
push
pop
jmp
push
mov
sub
mov
pop
sub
push
mov
jmp
xor
xor
jmp
push
pop
xor
pop
inc
add
push
jmp
sub
mov
addl
mov
add
jmp
sub
push
mov
push
pop
add
sub
push
mov
sub
pop
jmp
push
mov
and
pop
sub
mov
notl
pop
add
neg
push
mov
add
sub
jmp
pop
popl
pop
mov
jmp
add
jmp
xor
xor
mov
movsbw
jmp
mov
mov
push
mov
jmp
neg
jmp
pop
popl
mov
jmp
mov
add
push
mov
jmp
sub
push
mov
mov
sub
add
sub
sub
jmp
mov
mov
jmp
pop
mov
pop
or
jmp
and
mov
add
or
jne
push
mov
mov
push
jmp
sub
jmp
mov
inc
neg
add
jmp
pop
push
mov
push
push
jmp
push
mov
add
pop
or
shr
push
mov
shr
or
sub
sub
jmp
and
pop
sub
jmp
add
pop
add
jmp
xor
sub
mov
jmp
xor
mov
sub
mov
mov
sub
pushl
pushl
pop
add
push
jmp
sub
pop
xor
xor
jmp
push
jmp
sub
jmp
xor
jmp
push
mov
sub
pop
mov
jmp
xor
add
sub
sub
pushl
pop
add
push
push
jmp
dec
xor
push
mov
jmp
sub
sub
sub
add
pop
xor
sub
jmp
mov
add
jmp
pop
jmp
pop
sub
mov
add
add
pop
xor
pop
xor
movzbl
cmp
je
pushl
pushl
jmp
mov
sub
sub
push
sub
mov
jmp
not
sub
add
pop
xchg
mov
jmp
push
mov
xor
jmp
add
inc
push
jmp
inc
jmp
sub
sub
sub
pop
jmp
mov
add
push
mov
add
pop
push
jmp
sub
xor
add
pop
sub
jmp
xor
jmp
pop
sub
mov
sub
mov
jmp
xchg
jmp
add
pop
mov
push
mov
mov
add
add
push
pushl
pushl
pop
add
jmp
add
jmp
mov
sub
pop
jmp
jmp
sub
sub
jmp
pop
jmp
pop
pop
push
mov
sub
mov
add
add
push
mov
inc
neg
xor
add
pop
pop
jmp
shl
jmp
pop
sub
add
jmp
xchg
pop
jmp
mov
jmp
pushl
pop
push
push
pop
add
add
push
pushl
pushl
pop
add
popl
mov
add
sub
jmp
pushl
pushl
pop
add
add
jmp
push
jmp
jmp
push
mov
jmp
push
pop
mov
add
push
mov
jmp
push
jmp
add
pop
add
jmp
xchg
jmp
push
mov
xor
jmp
add
add
xchg
pop
mov
mov
add
add
add
jmp
mov
add
neg
push
mov
sub
jmp
mov
jmp
pop
jmp
pop
sub
add
add
push
mov
jmp
add
add
mov
add
sub
mov
push
mov
mov
add
pop
push
mov
jmp
mov
mov
jmp
sub
jmp
add
sub
sub
jmp
xor
pop
add
pushf
jmp
add
sub
add
pop
jmp
push
mov
add
or
push
mov
shl
not
xor
add
pop
add
mov
add
jmp
push
push
mov
inc
dec
add
shr
or
push
mov
add
jmp
add
sub
jmp
mov
add
add
xchg
mov
add
push
mov
shl
xor
xor
xor
add
xchg
sub
mov
jmp
inc
xor
mov
jmp
push
jmp
push
pop
push
mov
push
mov
mov
pop
add
jmp
shr
jmp
sub
mov
push
push
jmp
push
mov
add
add
xchg
mov
mov
push
jmp
mov
xchg
not
xchg
jmp
mov
add
pop
add
jmp
mov
add
pop
push
mov
mov
pop
pop
and
push
jmp
push
mov
mov
mov
jmp
pop
sub
jmp
mov
jmp
mov
sub
jmp
sub
jmp
mov
pushl
pop
push
push
jmp
popl
pop
mov
push
mov
mov
xor
pop
pushl
mov
add
add
xor
push
mov
neg
jmp
mov
add
pop
push
mov
sub
sub
add
pop
sub
push
jmp
mov
jmp
mov
push
jmp
mov
push
jmp
pushl
pop
jmp
push
mov
pushl
mov
add
push
jmp
pop
add
push
mov
jmp
mov
jmp
mov
add
push
mov
jmp
pushl
jmp
sub
jmp
mov
xor
mov
jmp
pop
push
mov
add
push
jmp
shl
shl
shl
inc
shr
sub
add
jmp
pop
inc
xor
xor
add
sub
sub
pop
push
mov
push
mov
or
pop
shl
shr
jmp
push
jmp
addl
pop
push
push
pop
neg
jmp
sub
jmp
sub
add
jmp
push
push
push
pop
neg
or
jmp
pop
add
sub
sub
add
pop
push
mov
mov
mov
add
mov
add
mov
mov
add
and
jmp
cmp
je
push
mov
sub
mov
mov
push
mov
xor
pop
sub
mov
mov
add
pushl
pop
jmp
add
sub
pop
xchg
mov
shr
xor
jmp
sub
push
pushl
mov
add
popl
pop
jmp
not
or
sub
mov
mov
push
mov
add
add
jmp
add
mov
add
push
mov
jmp
pop
push
mov
add
push
jmp
lods
push
mov
jmp
shr
xor
sub
mov
sub
mov
addl
mov
jmp
pushw
mov
jmp
mov
xor
jmp
sub
mov
pushl
jmp
mov
pop
add
pop
push
mov
jmp
pop
sub
pop
sub
jmp
mov
push
mov
push
pop
jmp
add
pushl
pop
add
pop
pop
jmp
dec
sub
jmp
pop
xor
pop
add
mov
push
jmp
add
jmp
pop
push
mov
add
jmp
push
mov
neg
xor
jmp
pop
mov
push
mov
jmp
add
sub
add
add
jmp
shl
and
shl
push
mov
or
pop
sub
mov
mov
neg
or
neg
sub
xor
mov
push
mov
push
mov
add
jmp
add
sub
xchg
jmp
push
mov
push
mov
add
xor
pop
neg
shr
push
push
mov
mov
xor
pop
add
mov
add
add
push
mov
sub
pop
add
add
jmp
mov
mov
push
push
pop
add
push
mov
add
pop
xchg
pop
push
jmp
mov
rorb
pushf
jmp
add
push
mov
jmp
mov
jmp
push
mov
sub
mov
pop
mov
push
mov
add
add
xchg
jmp
add
sub
jmp
add
mov
add
push
push
mov
push
xorl
jmp
add
inc
push
mov
add
neg
sub
add
jmp
sub
inc
dec
not
neg
xor
jmp
sub
sub
mov
pushl
jmp
pop
xor
sub
pop
neg
add
add
mov
add
jmp
jmp
pmulhw
push
push
inc
push
xor
cs
insb
add
push
inc
push
dec
xor
cs
insb
add
inc
dec
dec
cs
insb
add
add
or
add
popf
fimull
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
mov
or
xchg
push
add
push
popl
fucomip
cmp
pop
inc
xchg
push
fcoml
dec
pop
lcall
xchg
push
pop
mov
insl
push
push
cmp
add
sbb
mov
add
jle
repnz
sub
push
dec
lret
sub
and
jge
mov
aad
idivb
or
sahf
jne
and
in
inc
mov
mov
mov
xchg
cmc
mov
neg
and
fstpt
in
jl
or
test
mov
out
gs
dec
and
stos
out
test
les
popf
sbb
aam
pop
mov
lret
pop
pop
xchg
es
stos
sbb
and
pop
or
fstpl
cwtl
jecxz
add
scas
jbe
mov
cmc
in
mov
bound
mov
jns
int3
pop
jmp
and
hlt
hlt
scas
mov
mov
mov
dec
ss
mov
addr16
jns
push
dec
inc
dec
xor
pop
push
push
out
cmpsl
inc
ror
cltd
add
negl
nop
add
push
jge
pushw
popa
out
mov
jp
movsl
nop
mov
sub
xchg
or
inc
jmp
push
dec
add
pop
rcrb
mov
test
out
dec
xchg
mov
test
nop
mov
xor
jl
xor
add
adc
add
adc
add
fistps
mov
vunpckhps
inc
pop
sahf
pop
aam
fmull
andb
pushf
pop
mov
xchg
nop
mul
mov
push
cli
cmp
jnp
mov
cmpb
sbb
jl
or
pop
dec
testb
mov
jp
ja
add
add
jecxz
xchg
cs
test
iret
sub
in
xchg
xor
out
add
sbb
xor
lods
ds
dec
dec
jmp
or
inc
leave
movsl
sbb
pushf
ljmp
frstor
jns
jb
popf
inc
xor
mov
fnstenv
fists
fiadds
pop
sub
add
jecxz
xchg
push
jbe
in
xchg
lahf
push
mov
or
cwtl
imul
or
aas
mov
or
or
cld
insb
cmp
lock
jle
xchg
add
push
inc
outsb
testw
inc
dec
push
lods
adc
flds
mov
shlb
mov
push
lods
adc
dec
xor
fldl
lods
je
cmp
sbb
add
dec
inc
xchg
push
int
sbb
dec
pop
sahf
pop
fistpl
aam
adc
adc
sbb
xchg
inc
bound
adc
cmpsb
pop
pop
ficomps
jo
fidivs
jecxz
xchg
push
jl
mov
xchg
or
pop
mov
mov
dec
mov
aaa
test
sar
incl
stc
mov
mov
mov
lods
sub
data16
mov
adc
push
fmul
push
dec
fscale
and
mov
jns
dec
outsb
sysret
test
cs
pop
gs
ss
inc
mov
jae
sub
push
lahf
xchg
jnp
mul
mov
outsl
call
add
push
fidivs
popf
addr16
xchg
sbb
stos
sbb
sub
iret
fimull
add
mov
cmp
dec
dec
jmp
iret
fbstp
sbb
gs
inc
inc
mov
add
mov
cmc
xchg
icebp
mov
das
mov
inc
ror
leave
imul
and
mov
test
cmp
call
testb
test
adcb
imul
pop
inc
insb
pusha
aam
rorl
mov
arpl
and
das
sti
lret
ss
adcb
lods
cltd
mov
cmc
mov
stos
adc
xor
inc
ror
into
mov
ret
popa
cmp
jmp
fwait
cld
insb
cmp
lock
mov
pop
test
ficomps
add
ss
loop
mov
jge
cmp
cli
ds
jmp
daa
je
jno
cmp
jl
es
push
mov
push
mov
jo
mov
mov
mov
gs
adc
add
or
orb
cld
stos
mov
mov
or
imul
cmp
adc
add
rorb
jbe
sarb
jmp
lods
ja
ffree
dec
dec
popf
or
mov
mov
roll
add
in
and
lahf
repz
cld
dec
stc
scas
mov
inc
aam
in
pop
dec
push
fmulp
out
mov
cmpsb
push
pusha
mov
jge
sbb
mov
cs
movsl
xorl
fisubl
add
icebp
mov
pop
push
nop
add
sbb
push
nop
and
push
xor
adc
mov
xchg
jo
add
cli
fdivrs
jbe
ds
dec
dec
jmp
inc
jl
jns,pt
test
es
pop
repnz
test
jbe
xchg
or
pop
xchg
or
dec
jecxz
mov
loop
mov
jmp
out
out
ss
adc
insb
mov
push
adc
mov
sbb
ja
adc
cs
loopne
inc
pop
pop
incl
lea
xor
int
lret
hlt
arpl
dec
mov
mov
sub
mov
lcall
push
aam
in
mov
xchg
xor
fcompl
cmp
es
jmp
xchg
mov
lcall
mov
sub
aad
xor
ret
xor
lods
ds
add
push
push
test
mov
or
jno
in
jecxz
mov
jnp
and
sub
inc
adc
cli
inc
lods
cmp
popa
sub
sub
inc
xlat
xor
push
dec
and
mov
inc
add
add
xchg
mov
adc
lods
or
adcl
sbbb
adc
inc
pop
fwait
pop
rcr
popf
sbb
mov
out
xchg
jmp
stos
jge
stc
sub
loope
pop
and
mov
jnp
jp
out
arpl
xchg
or
push
loopne
pop
cltd
sub
lret
scas
je
in
adc
loop
mov
jl
aad
lods
je
mov
or
adc
pop
inc
add
ret
add
add
xchg
test
push
add
push
popl
fucomip
cmp
pop
inc
xchg
push
fcoml
dec
pop
lcall
xchg
push
bound
mov
movsl
sbbl
xor
and
xor
cltd
add
jle
add
ret
xor
xor
sbb
cltd
cmp
out
addr16
cmpsl
xor
lods
in
rcrl
inc
mov
cltd
dec
and
ret
lret
incl
movsb
push
mov
sub
xor
lods
insl
add
clc
scas
mov
lods
push
lds
lcall
ud2
shll
xchg
fisttpll
scas
mov
add
stos
btr
mov
jecxz
adc
or
sbb
mov
jp
push
aaa
rorb
mov
imul
negb
inc
movsb
fcoml
enter
mov
rcr
iret
rcll
mov
xor
fmull
xor
inc
xor
js
stc
cmp
icebp
arpl
adc
fsubrs
and
sub
dec
push
mov
scas
data16
dec
fcmovnb
pop
xlat
inc
imul
rorb
push
popf
sbb
sti
jmp
add
xchg
or
xor
mov
pop
push
cmp
or
xchg
loopne
lods
push
icebp
and
xchg
xor
stos
mov
add
lea
clc
shrb
dec
dec
repz
int
jne
mov
adc
dec
int
jmp
cld
sub
pop
inc
xchg
push
mov
sbb
les
mov
jmp
adc
xor
int
lret
xchg
add
sbbl
dec
fcmovb
dec
push
loopne
repnz
dec
test
iret
jl
popa
loope
pusha
lahf
or
ds
sarl
test
cmp
out
mov
addr16
lds
inc
xlat
outsl
movsl
sub
pop
pop
mov
lods
adc
add
inc
loopne
lods
add
inc
push
ret
mov
jl
or
adc
aad
daa
fimuls
sahf
mov
mov
push
mov
xorb
and
mov
mov
es
push
lret
rcrb
fidivl
test
out
ljmp
push
nop
adc
pop
inc
xchg
push
mov
sbb
inc
fdivs
stos
popa
xchg
jb
dec
test
dec
fcmovnb
adc
inc
inc
mov
add
pop
rclb
call
in
mov
mov
js
push
lret
sarl
mov
add
and
pop
mov
cwtl
or
call
adcb
add
push
mov
sub
pop
xchg
pop
push
mov
add
sub
xchg
pop
mov
push
mov
sub
mov
mov
mov
xor
pop
sub
mov
addl
pop
push
push
mov
mov
xor
pop
add
mov
pop
mov
push
mov
add
add
xchg
pop
pushl
pop
add
jmp
jle
fldl
jecxz
inc
das
es
cmpsb
fimull
add
jmp
mov
add
aaa
bswap
or
aam
or
cmp
pop
lods
dec
mov
dec
int
scas
jo
adc
and
dec
or
push
popf
es
dec
mov
andl
push
mov
inc
pop
xor
push
push
jge
push
mov
imul
fs
and
lods
add
popa
jno
push
fwait
insl
in
in
dec
int3
add
xor
xor
cld
lcall
or
jecxz
inc
das
lcall
push
add
add
icebp
sarb
jns
fwait
xor
out
pop
pop
jmp
std
lcall
loop
jo
incb
add
jmp
arpl
inc
push
in
fildll
mov
or
incl
cmp
pop
popa
xor
movzwl
mov
mov
add
mov
add
mov
xor
call
mov
mov
add
add
addb
add
popa
pop
mov
call
pushf
pop
movsl
lret
jnp
inc
ret
add
pop
in
fstps
mov
adc
popa
sub
jae
cld
cmp
jne
jo
xor
pop
xchg
inc
fst
icebp
popa
sbb
xlat
cltd
inc
cmp
push
xchg
mov
xor
mov
inc
fstpl
mov
dec
or
ss
lahf
lds
push
xchg
inc
fsubrl
mov
loope
inc
xchg
inc
cmp
andl
xlat
push
pop
pop
adc
inc
mov
dec
xchg
inc
cmp
jbe
inc
cmp
sahf
inc
cmp
stos
addl
pop
sub
push
sbb
cmp
sbb
fdivrs
jo
cmp
test
push
pop
in
cmp
lds
xchg
sahf
pop
xor
inc
mov
dec
pop
adc
push
mov
enter
fcoml
iret
cmp
sub
fistl
adc
mov
mov
popf
mov
xor
mov
xor
nop
push
jmp
adc
jmp
or
hlt
push
xchg
push
jmp
or
int3
adc
dec
mov
xor
sub
mov
dec
xchg
mulb
and
cli
lahf
inc
cmp
je
cmp
dec
mov
out
adc
push
push
iret
cmp
cli
lahf
inc
cmp
je
cmp
dec
mov
out
push
int
outsl
iret
cmp
hlt
mov
adc
mov
dec
iret
cmp
xchg
inc
cmp
and
out
test
stos
pop
insb
jmp
xchg
or
mov
pop
dec
data16
dec
data16
sbb
cmp
dec
or
sbb
adc
rorb
adc
and
xor
sbb
inc
cmp
pusha
push
dec
sbb
mov
ja
adc
fsts
jmp
test
jp
test
cmpsb
ficompl
xor
fnsave
or
xchg
inc
cmp
xor
inc
cmp
push
pop
les
jmp
lea
cmp
pushf
inc
cmp
push
xchg
sbb
mov
push
sbb
and
mov
push
dec
pop
ds
xchg
inc
sbb
inc
jnp
mov
push
xchg
inc
add
aam
out
xchg
mov
dec
fs
lock
cmp
sbb
cmp
inc
cmp
sub
mov
and
lcall
stos
xchg
inc
cmp
sbb
and
push
and
inc
cmp
scas
and
push
rcr
call
inc
push
and
xchg
loop
and
push
sub
test
dec
cmp
dec
insb
sub
fdivrs
mov
and
xchg
push
mov
add
push
cmp
xchg
movsl
hlt
int3
popf
aad
pop
iret
cmp
dec
cmp
pop
ds
xchg
inc
sbb
es
mov
push
xchg
inc
jmp
fdivrl
lds
push
xchg
inc
cmp
and
out
xor
addr16
dec
adc
fstps
adc
dec
data16
sbb
and
aaa
cmp
xchg
sti
mov
fdivrl
inc
in
and
out
dec
data16
dec
data16
sbb
or
mov
adc
jge
icebp
ss
hlt
mov
pop
xchg
inc
cmp
push
xchg
loope
sub
andnps
inc
cmp
leave
push
es
rcrb
inc
addr16
inc
cmp
push
sbb
xchg
mov
xor
xor
je
xor
push
adc
add
out
xor
cmp
xchg
inc
cmp
xor
inc
in
and
xor
sbb
or
and
mov
xor
or
ficoml
rcrb
cmp
fwait
popf
imul
inc
cmp
mov
push
inc
test
fwait
popf
or
dec
sbb
xchg
pop
xor
inc
out
or
mov
dec
mov
push
sbb
das
stos
mov
dec
fdivrs
mov
and
xchg
push
mov
add
push
cmp
xchg
cmp
sti
push
jns
loop
adc
and
ret
cmp
addb
orb
sbb
inc
cmp
cmpsb
sahf
xlat
inc
xchg
mov
cmp
mov
push
mov
inc
push
bound
mov
sub
clc
mov
cmp
stos
xchg
inc
cmp
sbb
and
push
and
inc
cmp
ficomps
gs
adc
adc
movsb
mov
sbb
rcll
fdivrs
icebp
pop
aas
fwait
popf
fisubl
and
adc
xchg
inc
cmp
sbb
cmp
mov
xor
inc
cmp
mov
sbb
xchg
aad
loopne
bound
dec
roll
mov
stos
xchg
inc
cmp
sbb
push
and
push
and
inc
cmp
and
rorl
dec
push
outsl
sub
xchg
mov
sub
cmp
push
rorb
push
mov
pop
cli
pop
xchg
pop
and
add
and
mov
cmp
xchg
sbb
mov
mov
in
pop
and
loope
out
mov
inc
in
and
xor
sbb
roll
mov
sbbl
addr16
push
mov
scas
dec
and
test
mov
movsl
or
push
jns
enter
sbb
cmpb
jmp
shll
imul
ds
and
cmp
xchg
inc
cmp
orb
sbb
cmp
mov
and
xchg
push
mov
add
dec
cmp
xchg
cmc
add
ljmp
imul
shrl
std
mov
stos
dec
std
dec
sbb
push
xchg
inc
jne
adc
mov
push
and
cmp
test
dec
inc
or
sbb
mov
lods
dec
sbb
and
and
or
dec
or
and
inc
in
and
adc
orb
cmpb
push
xor
int
push
mov
mov
popa
jne
mov
mov
in
cmp
in
stos
xchg
inc
cmp
sbb
and
push
and
inc
cmp
add
inc
push
push
xchg
inc
cmp
cmp
fnclex
lret
loopne
repnz
push
or
push
cmp
inc
cmp
sbb
and
push
and
inc
cmp
xor
orl
test
mov
and
inc
fiaddl
inc
pop
das
push
xchg
inc
loope
sbb
test
inc
jecxz
scas
ret
mov
inc
cmp
fwait
dec
or
rcrl
cmp
push
mov
inc
mov
test
gs
cmp
pop
ds
xchg
inc
sbb
inc
jnp
mov
push
xchg
inc
add
aam
sbb
push
mov
lret
adc
adc
imul
and
adc
and
cmp
push
xchg
mov
and
mov
test
pop
scas
testl
or
rcrl
testl
mov
data16
or
mov
and
add
int3
cmp
dec
inc
cmp
push
sbb
cmp
push
xchg
inc
cmp
fcoms
add
addl
cmp
mov
mov
mov
dec
test
mov
cmp
in
push
inc
cmp
shll
cltd
sbb
sbb
xchg
inc
cmp
sub
loop
and
xor
sbb
inc
fcompl
push
ss
xchg
jne
leave
or
and
jge
xor
xchg
adc
push
xchg
inc
cmp
leave
sub
inc
rcrb
inc
pop
xchg
inc
cmp
in
cs
leave
jno
ror
mov
icebp
adc
pop
inc
cmp
lds
xor
sbb
push
js
cmp
and
adc
dec
and
push
xchg
cmp
inc
cmp
inc
loop
dec
data16
dec
data16
sbb
loope
pop
jnp
cmp
mov
and
xchg
dec
mov
add
push
cmp
xchg
sarb
cmp
sub
fisubs
pop
push
leave
or
mov
cmp
cmp
cmp
push
lds
iret
cmp
cmp
jb
int3
or
pop
sub
adc
xchg
inc
cmp
leave
xor
inc
rcrb
inc
pop
xchg
inc
cmp
jns
mov
xor
adc
push
xchg
dec
xchg
xchg
mov
dec
bound
loopne
xor
lcall
push
xchg
inc
cmp
leave
xor
inc
rcrb
inc
pop
xchg
inc
cmp
addr16
or
mov
cmp
cwtl
inc
cmp
push
xchg
inc
cmp
cltd
inc
cmp
stos
jbe
mov
sub
mov
dec
xchg
mulb
and
cli
lahf
inc
cmp
push
iret
cmp
dec
mov
out
adc
push
push
iret
cmp
cli
lahf
inc
cmp
push
iret
cmp
dec
mov
out
cmp
inc
cmp
sbb
push
and
push
and
inc
cmp
imul
mov
xor
push
int
insl
iret
cmp
lret
pop
xchg
push
xchg
inc
out
das
cmp
shll
and
fdivr
sub
sub
or
in
and
fnop
push
push
fcmovu
xor
out
es
adc
xor
fnsave
cmp
int
inc
fdivrl
ds
sub
iret
sub
in
sub
lock
inc
fdivrl
ds
sub
fiaddl
loope
xor
inc
add
ds
sub
stc
cli
push
inc
lock
pusha
adc
roll
cld
cmp
das
fnop
cmovp
cmp
push
pop
adc
adc
fsub
das
xchg
inc
cmp
push
xchg
inc
cmp
push
xchg
inc
cmp
pop
xchg
inc
mov
jl
addr16
and
and
mov
aad
xchg
inc
mov
pushf
popf
fsubs
shr
mov
mov
xor
mov
and
inc
gs
mov
and
scas
addr16
mov
and
pop
gs
aam
shrb
into
sbb
pushf
popf
adc
dec
inc
fidivrl
push
xchg
ret
push
inc
mov
dec
inc
fadds
xchg
mov
xor
mov
and
inc
gs
mov
and
scas
addr16
mov
and
pop
gs
aam
shrb
into
sbb
pushf
popf
adc
dec
inc
fidivrl
push
xchg
ret
push
inc
mov
dec
inc
fadds
xchg
mov
xor
mov
and
inc
gs
mov
and
scas
addr16
mov
and
pop
gs
aam
shrb
into
sbb
pushf
popf
adc
dec
inc
fidivrl
push
xchg
ret
push
inc
mov
dec
inc
fadds
xchg
mov
xor
mov
and
inc
gs
mov
and
scas
addr16
mov
and
pop
gs
aam
shrb
into
sbb
pushf
popf
adc
dec
inc
fidivrl
push
xchg
ret
push
inc
mov
dec
inc
fadds
xchg
mov
xor
mov
and
inc
gs
mov
and
scas
addr16
mov
and
pop
gs
aam
mov
xchg
mov
mov
inc
mov
in
inc
gs
adc
stc
leave
xchg
jg
std
in
inc
gs
xchg
cmp
dec
xchg
inc
cmp
fwait
popf
mov
jle
icebp
test
cmp
fwait
inc
cmp
push
iret
cmp
xchg
adc
cmp
push
xchg
mov
stc
xchg
mov
rorl
mov
aam
mov
xchg
mov
mov
inc
mov
in
inc
gs
adc
jmp
xor
lds
add
cmp
dec
inc
mov
xor
aas
inc
cmp
mov
mov
in
xor
cmp
lds
add
cmp
mov
popf
imul
icebp
mov
popf
inc
cmp
mov
mov
add
cmp
fs
addr16
mov
and
pop
gs
ss
leave
sbb
mov
mov
and
mov
sub
aad
add
cmp
push
and
pop
add
cmp
sub
fdivrs
sbb
pushf
popf
adc
jns
addr16
mov
sub
iret
cmp
dec
xchg
cmp
dec
xchg
inc
cmp
pushf
popf
imul
jmp
imul
aam
mov
jl
addr16
and
and
mov
aad
xchg
inc
mov
pushf
popf
fadds
sbb
mov
inc
mov
dec
inc
imul
or
fwait
popf
imul
or
fwait
popf
loope
xor
lds
add
cmp
dec
inc
mov
xor
aas
inc
cmp
mov
mov
in
xor
cmp
lds
int
in
mov
popf
imul
icebp
mov
popf
inc
cmp
mov
mov
add
cmp
fs
addr16
mov
and
pop
gs
ss
leave
sbb
mov
mov
and
mov
sub
aad
add
cmp
push
and
pop
add
cmp
sub
fdivrs
sbb
pushf
popf
adc
jns
addr16
mov
sub
iret
cmp
dec
xchg
cmp
dec
xchg
inc
cmp
pushf
popf
imul
jmp
imul
aam
mov
jl
addr16
and
and
mov
aad
xchg
inc
mov
pushf
popf
fadds
sbb
mov
inc
mov
dec
inc
imul
or
fwait
popf
mov
xor
mov
inc
dec
add
mov
int
dec
add
mov
sub
iret
cmp
xchg
ss
xor
sbb
pushf
popf
adc
dec
inc
fidivrl
push
xchg
ret
push
inc
mov
dec
inc
fadds
xchg
mov
xor
mov
and
inc
gs
adc
fs
iret
cmp
push
xchg
imul
or
mov
mov
or
fwait
popf
loope
xor
lds
add
cmp
xchg
inc
mov
dec
inc
mov
xor
aas
inc
cmp
mov
mov
xlat
cmp
dec
xchg
inc
cmp
pushf
popf
inc
cmp
push
xchg
inc
xlat
push
and
pop
add
cmp
sub
fdivrs
sbb
pushf
popf
adc
jns
addr16
mov
sub
iret
cmp
xchg
lahf
cmp
inc
adc
scas
addr16
xchg
inc
cmp
push
xchg
add
in
xor
xchg
inc
cmp
pushf
popf
imul
sbb
pop
add
cmp
push
lds
add
cmp
dec
inc
mov
xor
aas
inc
cmp
mov
mov
in
xor
cmp
lds
mov
popf
imul
icebp
mov
popf
inc
cmp
mov
mov
add
cmp
fs
addr16
mov
and
pop
gs
ss
leave
sbb
mov
mov
and
mov
sub
aad
add
cmp
push
and
pop
add
cmp
sub
fdivrs
sbb
dec
add
mov
sub
iret
cmp
dec
xchg
cmp
dec
xchg
inc
cmp
pushf
popf
imul
jmp
imul
aam
shlb
inc
mov
imul
or
fwait
popf
mov
xor
sbb
sbb
xchg
sbb
mov
popf
imul
sbb
mov
mov
out
imul
or
fwait
popf
mov
xor
sbb
sbb
xchg
movsb
mov
popf
imul
sbb
fwait
popf
test
xor
aas
xchg
push
xlat
imul
or
fwait
popf
mov
xor
sbb
xchg
pushf
popf
mov
xor
fwait
inc
cmp
out
gs
out
test
es
lods
aaa
dec
repnz
sbb
xchg
jg
or
in
sarl
dec
cmpsb
loop
add
lock
pop
xchg
inc
push
loope
insl
mov
inc
push
arpl
xor
je
rclb
sar
fnsave
fs
shll
mov
xor
shrl
rorl
sbb
int3
mov
test
inc
cmp
push
mov
andb
roll
and
cmp
mov
lock
lret
lods
rcll
cmp
mov
dec
xor
fs
and
fs
sbb
jae
xor
scas
jne
sbb
add
xchg
push
jge
adc
mov
or
mov
adc
adc
push
stos
adc
and
test
cld
pop
and
or
imul
mov
xchg
cmpsl
fildl
add
dec
jne
xchg
mov
dec
push
cmc
test
lock
adc
fs
dec
popf
jb
out
cld
dec
loope
and
sbb
mov
push
ss
cmp
orl
movsl
push
jae
push
add
gs
pop
pop
stos
mov
sbbl
pop
cmp
pop
xchg
fistps
out
scas
mov
int3
push
arpl
or
adc
out
or
dec
ss
or
insb
and
inc
fcomps
pop
enter
mov
lret
lds
xchg
push
mov
adc
and
add
test
add
repnz
ss
imul
pop
mov
int
mov
ficompl
adc
icebp
sbb
cmp
pop
mov
dec
repz
push
jo
fcmovb
jecxz
xlat
in
add
test
xor
jmp
dec
cli
ret
lcall
jg
pop
stos
repz
movsl
pop
popf
clc
repz
mov
mov
push
lret
sbb
cmp
xchg
or
stc
jecxz
jno
enter
push
loope
and
mov
imul
pop
mov
mov
es
test
lcall
push
rcr
test
lret
jno
or
les
loope
int
popa
lds
fbld
fsubp
push
jl
outsb
xlat
jae
push
inc
push
cs
fs
or
mov
jle
jns
sar
imul
jns
popa
hlt
jb
sarb
lcall
sbb
shrb
xchg
xor
repnz
mov
clc
fs
mov
jo
xor
fnsave
pop
lret
faddl
mov
jo
xor
icebp
cwtl
cmp
and
mov
popf
xor
xlat
mulb
adc
gs
data16
or
push
xor
dec
clc
fs
fdiv
popf
push
cld
stc
outsb
mov
xchg
sbb
cmp
cltd
xor
jmp
cli
mov
jo
xor
icebp
pop
cmp
pop
inc
lcall
test
mov
lea
es
lcall
sub
clc
xor
outsb
addl
jae
gs
clc
out
jecxz
stos
testl
popf
shlb
push
and
jo
xchg
push
fwait
add
xor
fisubl
insl
pop
imul
ds
fs
mov
mov
dec
xchg
subb
repz
and
cld
icebp
inc
comiss
addr16
rorb
stc
sub
popf
xor
test
pusha
cld
fs
xor
sbb
popl
cltd
pusha
cld
fs
xor
imul
push
cmp
adc
leave
cmpsb
enter
int3
adc
icebp
pop
cmp
fmull
or
popf
adc
hlt
xor
sti
jo
xor
outsl
popf
xor
fs
cmp
clc
cmpsb
dec
faddl
cltd
xor
sub
stc
ljmp
jge
xor
es
lcall
clc
pop
call
ja
lea
cld
shrb
mov
adc
cld
fwait
out
je
cmp
mov
cltd
or
nop
imul
loopne
inc
and
push
lret
cltd
xchg
mov
ror
mov
outsb
or
push
adc
or
xchg
mov
pop
or
xor
addr16
xchg
cmp
out
or
je
mov
pop
in
inc
inc
sub
push
std
fs
xor
adc
gs
cmpsl
loope
cmp
andl
jg
hlt
lahf
xchg
icebp
stos
adc
dec
sub
mov
push
jo
xor
icebp
xchg
cmp
push
adc
adc
mov
cld
fcmovne
push
mov
arpl
pminsw
jge
popf
addr16
and
cmp
cltd
xor
hlt
popa
cmp
fs
pusha
out
loopne
xchg
push
fwait
pop
lods
sbb
cmpsb
dec
faddl
sbb
xor
xchg
daa
cld
fs
xor
popf
xor
fs
xor
clc
xchg
and
adc
and
cmp
std
mov
es
lcall
fs
and
dec
mov
pop
hlt
out
leave
push
push
sub
pop
lcall
pop
insb
ja
mov
insl
clc
fs
sbb
gs
xor
test
cmpsl
jno
add
jo
dec
cmpsb
mov
pushf
clc
fs
xor
fstpl
cmpsl
sub
out
repnz
xor
fs
sti
pop
inc
cmp
jo
scas
cmpsl
data16
inc
mov
or
out
cmp
ja
mov
add
arpl
sub
mov
push
cmp
or
xor
mov
aad
stos
loop
repnz
pop
mov
jl
mov
insl
mov
sbb
gs
xor
mov
sbb
scas
inc
jnp
aaa
popf
xor
dec
aaa
icebp
sbb
cmp
xchg
cs
push
xorl
hlt
inc
scas
inc
jnp
repz
and
cmpsb
xor
xor
ds
fs
cmpsb
push
dec
cmp
jo
jbe
iret
rcrb
cmpsb
movsl
fxch
movsb
movsl
sbb
movsl
fsub
cwtl
xchg
inc
lea
movsl
xor
sbb
cmpsb
out
enter
lret
lcall
shll
jmp
bound
out
rcll
pushf
jmp
cmpsb
sahf
adc
bound
call
lret
nop
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
shlb
nop
lahf
add
cmpb
jo
cmp
jo
cmp
inc
push
inc
ret
lds
enter
push
and
adc
sbb
push
sbb
ret
jmp
cmp
mov
xchg
jmp
mov
sbbl
jnp
jmp
flds
mov
stos
in
out
int
and
jmp
mov
push
ret
mov
stos
mov
ret
dec
lock
inc
sbb
cmp
clc
lds
mov
aad
enter
push
and
adc
sbb
push
or
outsb
pop
rcll
mov
cmp
andl
lds
jecxz
xchg
pop
leave
lret
or
insb
sahf
cmp
sub
cmp
sbb
nop
and
cmpsb
inc
stos
and
jmp
mov
push
andb
jg
push
ffreep
jo
inc
ret
mov
mov
jo
xchg
xchg
addb
cmp
je
cmp
sbb
cmpl
ret
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
loopne
cmp
outsb
sub
dec
xchg
fidivrl
mov
bound
icebp
mov
mov
pushf
repnz
bound
in
nop
lret
pushf
fnstenv
mov
nop
xchg
cmpb
jo
cmp
jnp
rolb
fwait
xor
aaa
fwait
xor
aaa
fwait
xor
push
mov
xor
aaa
fwait
xor
cmp
mov
cmp
cmp
jo
cmp
lods
mov
ret
cmp
jb
inc
ret
cmp
jo
inc
ret
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
xor
cmp
jo
cmp
sahf
cmpb
jo
cmp
xor
cmp
outsl
cmpb
cld
cmpl
ret
cmp
jo
cmp
mov
cmp
jo
cmp
jo
cmp
mov
cmp
movb
ret
cmp
add
cmp
jo
cmp
inc
jne
ret
cmp
inc
jne
ret
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
mov
cmp
outsl
cmpb
inc
jne
ret
pop
divb
cmp
jo
inc
ret
inc
ret
inc
ret
dec
ret
das
ret
inc
ret
rol
jo
aam
jo
cmp
jo
ds
cmp
ret
inc
ret
cmp
jo
leave
shll
shll
shll
shll
shrl
lods
xchg
loope
cmpb
outsl
jne
ret
cmp
jo
cmp
jo
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
insl
ret
inc
ret
cmp
xchg
test
mov
outsl
in
iret
fidivl
cmp
xchg
fwait
cmp
outsl
add
xor
outsl
test
pop
sub
outsl
cli
iret
mov
lahf
mov
ret
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
outsl
cmpb
js
cwtl
rolb
cmp
cmpb
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
cmpsb
xchg
cmp
addb
enter
enter
enter
ret
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
icebp
dec
lret
ds
stos
xor
jo
cmp
jne
ret
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
jns
pusha
inc
xchg
popf
sahf
inc
in
gs
cmp
sub
outsl
cmpsl
rorb
cmpb
jo
sub
out
outsl
hlt
nop
jbe
ret
jns
imul
loope
roll
mov
cmp
inc
flds
jo
mov
adc
mov
xor
push
leave
sbb
int
ss
iret
movsl
sahf
mov
rcll
ficoml
mov
xchg
fwait
adc
movsl
sahf
repnz
xchg
cmpsl
adc
enter
int
movsl
cmpsl
jo
cmpsb
in
mov
lret
xor
int
mov
mov
xchg
inc
mov
xchg
mov
int3
movsl
mov
movsb
cmpsl
xor
lea
cltd
in
movsl
inc
mov
cmpsl
popf
jmp
mov
cmpb
ror
movsl
push
leave
mov
rep
xchg
mov
mov
jo
in
icebp
sbb
aad
insl
testb
addb
outsl
cmpb
mulb
jno
cmpb
jmp
popf
or
sbb
inc
lret
push
mov
stos
mov
xchg
sbb
sbb
mov
jo
cmp
loopne
addr16
repz
ret
add
pop
cmpb
pop
jne
ret
cmp
jo
js
insl
neg
mov
nop
mov
mov
cmpb
inc
stos
inc
ret
xor
pop
cmpb
push
cmp
inc
popf
inc
ret
cmp
jo
add
pop
bound
ds
pusha
cmp
jo
sbb
jo
cmp
and
ret
stc
pop
sbb
aad
xorb
iret
aaa
data16
test
adc
jo
cmp
cmp
dec
outsb
cmpl
jo
shll
pop
inc
ret
lock
sbb
aad
repnz
cmp
push
divb
ret
xchg
outsb
dec
stos
mov
pushf
push
adc
stc
test
inc
ret
lds
jo
cmp
out
jg
test
cmp
outsb
cmc
in
sti
sbb
aad
insl
idivb
ret
xorb
cmpb
xor
stc
mov
push
cmpl
jno
aaa
data16
test
adc
jo
cmp
es
dec
outsb
cmpl
jo
lds
sub
cmp
out
addr16
test
cmp
outsb
cmc
in
sti
sbb
aad
insl
testb
addb
outsl
cmpb
jmp
aam
stc
test
cmp
outsb
cmc
in
sti
sbb
aad
insl
testb
addb
outsl
cmpb
jmp
out
stc
test
cmp
outsb
cmc
in
sti
sbb
aad
insl
testb
addb
outsl
cmpb
jmp
test
cmp
outsb
cmc
in
sti
sbb
aad
insl
testb
addb
outsl
cmpb
jmp
imul
cmpb
in
sti
sbb
aad
insl
testb
addb
outsl
cmpb
jmp
fbld
test
cmp
outsb
cmc
in
sti
sbb
aad
insl
testb
addb
outsl
cmpb
jmp
add
xor
cmpb
in
sti
sbb
aad
insl
testb
addb
outsl
cmpb
jmp
cwtl
jge
test
cmp
outsb
cmc
in
sti
sbb
aad
insl
testb
addb
outsl
cmpb
jmp
lea
test
cmp
outsb
cmc
in
sti
sbb
aad
insl
testb
addb
outsl
cmpb
inc
cmpb
jo
mov
jo
cmp
cmpb
and
stos
jnp
xchg
add
decb
shll
mov
jo
cmp
inc
mov
mov
cmpb
outsl
cmpb
mov
mov
jo
cmp
mov
inc
sbb
stos
daa
mov
fnstenv
cmp
cmpb
outsb
cmpb
lock
fsts
jo
cmp
jo
xor
jo
cmp
cmpb
imul
ret
push
and
inc
lahf
inc
ret
das
aad
jo
cmp
xor
inc
ret
subb
jo
xorb
cmpb
lock
sub
stc
test
inc
ret
lds
cmp
mov
sub
xchg
jo
cld
cmc
xchg
xchg
shlb
out
lods
fiadds
mov
fistps
out
addb
shll
cmp
xchg
movsl
clc
jo
mov
mov
cwtl
mov
rol
inc
sti
shll
mov
sbbl
inc
shll
movsb
mov
rcll
lcall
cwtl
mov
roll
movsl
into
shll
sbb
xchg
lcall
movsb
cmpsl
in
adcl
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
int
movsl
sbb
movsl
jae
mov
cmp
jo
cmp
jo
cmp
data16
xchg
movsl
inc
ret
cmp
jo
cmp
mov
gs
jl
fadd
int
movsl
sbb
movsl
jae
jo
mov
shlb
movsl
sbb
movsl
jae
jo
cmp
data16
jl
cli
int3
shrl
out
mov
jne
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
cmpl
inc
aad
scas
xor
mov
lea
mov
sub
jl
inc
out
movsl
rcrl
out
cwtl
movsl
out
scas
in
jo
ss
mov
mov
cmp
cmpsb
xchg
cmp
jl
cmp
bound
cmp
jo
cmp
jo
cmp
jo
cmp
jo
cmp
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
and
xchg
jne
mov
xchg
cmpsb
loopne
shlb
xchg
jne
sti
mov
cltd
loope
xchg
cltd
lcall
stos
cwtl
int
cmpsb
fildl
xchg
out
test
lcall
jmp
loope
cmpsb
cltd
fnstenv
rclb
loopne
rcrb
loope
mov
adc
cmpsb
jg
mov
scas
xlat
mov
cmpsb
data16
xlat
mov
popf
out
mov
out
test
je
mov
sbbb
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
and
xchg
jne
mov
xchg
jne
mov
mov
out
mov
lods
aad
fsub
mov
mov
cmpsb
jg
mov
je
adcb
rcrb
jle
int
je
lds
test
xlat
mov
stos
data16
cltd
xlat
test
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
and
xchg
test
mov
mov
test
cltd
loope
xchg
cltd
xchg
mov
out
adc
mov
test
arpl
mov
stos
xchg
mov
mov
cmpsb
fnstsw
pushf
jl
sbb
je
int
stos
aad
rcrb
xlat
mov
popf
cwtl
aad
mov
cmpsb
fnstsw
mov
cltd
loopne
stos
je
mov
test
mov
mov
stos
arpl
pushf
je
in
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
int
fcoml
fidivrl
repnz
jns
repnz
jns
repnz
jns
mov
cmpsb
fidivrl
repnz
jns
repnz
jns
repnz
jns
mov
lods
aad
cmpsb
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
mov
ret
mov
adc
xchg
jns
repnz
xchg
jne
mov
xchg
mov
xchg
cmpsb
loopne
mov
aad
cmpsb
out
aad
out
mov
je
int
jg
mov
cmpsb
cltd
rcrb
mov
in
mov
loopne
pushf
lods
loope
popf
jne
sbbb
xchg
pop
xchg
mov
shrb
subb
loope
pushf
out
test
lods
aad
repnz
sbbb
test
pop
xchg
mov
shrb
subb
loope
pushf
out
test
lods
aad
repnz
xchg
fwait
aad
xchg
cltd
loop
xchg
stos
xchg
cmpsb
ret
mov
shrb
subb
loope
pushf
out
test
lods
aad
repnz
mov
mov
pop
fnstcw
mov
rol
cltd
mov
loopne
fwait
adc
xchg
scas
loopne
xchg
test
mov
lcall
andb
ret
andb
mov
mov
je
int
jg
mov
cmpsb
cltd
rcrb
mov
in
rcrl
mov
jle
adc
mov
popf
cltd
xchg
mov
jle
adc
insb
mov
fwait
je
lds
cltd
loope
xchg
cltd
je
ret
lds
icebp
cltd
test
jne
mov
pushf
stos
xchg
frstor
cwtl
xlat
mov
out
mov
sahf
out
mov
fsub
leave
mov
fisubs
loopne
xchg
fwait
xchg
mov
popf
cltd
aad
pushf
cwtl
lcall
cltd
xchg
mov
xchg
cltd
mov
jns
repnz
jne
repnz
and
popf
cltd
data16
fsubp
test
xchg
fdivrs
popf
jne
mov
out
mov
out
mov
xchg
out
mov
sahf
out
xchg
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jp
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
repnz
jns
shll
cmpsb
data16
loope
xchg
aad
repnz
gs
cmpsb
jnp
mov
pushf
sbb
xchg
sbb
jns
bound
jns
fs
fnsave
jae
mov
push
mov
sahf
ja
and
sbb
jns
inc
sti
push
mov
iret
push
aas
into
push
push
int
cmc
leave
bnd
mov
repnz
jns
int
enter
jne
mov
jne
repnz
jns
lds
sub
jae
xor
in
pop
cmp
dec
jnp
jb
dec
lods
dec
or
sub
sahf
repz
fwait
xchg
ffree
and
in
jnp
mov
mov
dec
push
sub
jb
out
sahf
je
add
lret
jns
jnp
mov
mov
dec
push
sub
pop
sbbl
pushl
repnz
cltd
into
xor
cli
test
lret
mov
repnz
mov
fidivl
jge
mov
cmpsb
add
jns
shrl
sti
sub
and
repnz
push
jno
push
push
dec
sahf
je
sti
dec
lods
xor
jb
fdivrs
lods
in
repnz
jns
popl
inc
ror
dec
lods
xor
jb
fsubrs
jns
repnz
iret
adc
xchg
int3
sbb
clc
scas
add
cltd
data16
xor
mov
repnz
jns
lret
or
sahf
mov
jmp
adc
ret
or
movd
mov
cld
dec
lods
dec
or
sub
sahf
repz
fwait
sbb
and
in
jg
add
dec
lahf
out
lret
imul
fwait
mov
shrl
repnz
decb
sub
fs
add
lret
jns
repnz
sub
push
loope
dec
sahf
sti
sub
insb
pop
sahf
xchg
ja
cld
cmpsb
repz
push
cld
gs
js
sub
jns
repnz
xor
adc
push
cld
gs
ret
in
repnz
jns
popl
inc
ror
and
or
jb
push
cld
mov
sbbb
and
in
daa
addb
sbb
add
pop
ss
mov
pop
aad
js
je
repnz
jle
repnz
not
popa
cld
jo
in
xor
sbb
sbb
xor
xlat
mov
jb
push
push
dec
sahf
je
sti
dec
lods
xor
jb
fdivrs
lods
in
repnz
jns
fwait
movsl
dec
cld
and
ror
inc
popa
mov
jp
push
dec
sahf
sti
sub
cmp
dec
sahf
popa
and
jns
inc
lret
pop
dec
in
cltd
loopne
add
push
outsb
hlt
dec
lods
dec
or
sub
sahf
repz
fwait
xchg
ffree
and
in
jnp
mov
mov
dec
push
sub
jb
out
sahf
je
add
popf
je
jnp
mov
mov
dec
push
sub
mov
in
rclb
nop
jmp
add
jns
mov
xor
inc
push
aam
cmc
jns
adc
aaa
push
inc
outsb
add
mov
sti
push
jp
js
inc
or
sbb
jb
pop
dec
sahf
fcoml
adc
pop
or
pop
add
dec
sahf
sti
cltd
cmp
push
push
jg
clc
jmp
sahf
fsubp
ret
pushl
repnz
cltd
into
xor
cli
test
lret
xchg
repnz
mov
ds
jns
flds
xchg
push
scas
add
jle
je
repnz
subb
push
push
out
sbbb
and
and
lcall
jns
sti
lret
cmp
ret
cmp
jns
mov
jecxz
lret
or
cld
and
popf
fisttpl
cmpb
jns
mov
sub
enter
jmp
sahf
call
in
repnz
jns
ja
sub
cld
jge
das
hlt
jb
hlt
dec
sahf
xor
mov
push
mov
scas
nop
loope
fdivr
mov
inc
outsl
push
cld
and
popf
fisttpl
sbbb
jb
push
cld
and
fdivr
and
repnz
pushf
xchg
outsl
mov
notb
std
dec
jae
repnz
iret
mov
cwtl
mov
push
mov
jb
dec
xchg
jg
adc
aad
inc
jns
imul
dec
jl
cmc
stc
lods
lcall
pop
je
cld
cmpsb
out
jl
push
push
cwtl
lret
jns
rorb
nop
jmp
push
enter
jbe
incl
hlt
loop
sbb
push
mov
xchg
inc
daa
pop
lea
cmc
shlb
in
jb
in
repnz
push
int
inc
add
adcb
divb
outsl
jbe
push
cld
sbb
mov
in
rclb
nop
jmp
or
jns
mov
xor
dec
daa
test
xchg
xchg
cld
jg
jecxz
jno
push
cs
add
dec
sahf
popa
push
repnz
jns
dec
shll
xchg
cmp
inc
ljmp
push
jmp
popa
jg
push
push
jnp
adc
dec
sahf
out
sbb
je
repnz
popa
stos
movsl
js
sbb
rorl
sbbb
sahf
cmc
sbb
inc
cmp
loop
sbb
fs
test
pop
ja
cwtl
mov
in
rclb
nop
jmp
add
jns
mov
xor
call
push
icebp
jb
in
dec
sahf
std
popa
jg
push
push
std
sbb
cld
xchg
jnp
push
push
sub
jns
aad
scas
lcall
inc
jl
jns
ficompl
cld
xorl
out
sub
push
imul
test
in
repnz
mov
imul
aad
dec
sahf
scas
sahf
outsl
ds
push
cld
jg
jno
dec
fsubp
ret
pushl
repnz
cltd
into
xor
cli
test
lret
in
repnz
mov
pop
int
nop
sti
jbe
out
jl
push
push
ret
in
repnz
or
into
push
pop
lds
mov
sarb
test
popa
jg
push
push
jnp
lds
out
cltd
mov
in
rolb
nop
jmp
pop
enter
lea
in
loope
mov
test
mov
dec
sahf
ret
int3
xor
aad
dec
sahf
fistps
cld
jg
inc
xchg
aad
jmp
ret
out
xchg
and
or
outsl
jb
push
cld
and
mov
addr16
mov
sbb
and
dec
push
cwtl
mov
in
rclb
nop
jmp
pop
enter
jp
clc
cs
in
bnd
push
cld
pop
sti
pop
fdivl
push
dec
sahf
fdivl
sub
lock
call
push
std
fs
cltd
ja
sub
incl
mov
or
cmp
int
ja
dec
push
pop
into
std
insb
aaa
sub
and
sahf
ja
xchg
push
cld
jge
push
sbb
das
bound
xorl
out
sub
push
loope
testb
test
in
repnz
ret
xchg
dec
or
repnz
jns
cmc
jns
sub
call
pop
in
and
fwait
xor
fwait
outsb
jge
repnz
mov
sbb
and
push
cmp
pop
sub
push
mov
xlat
sbb
jns
repnz
sub
push
rol
inc
mov
not
jns
repnz
sub
jb
ret
ljmp
repnz
jns
xor
push
adc
push
mov
xchg
mov
jae
mov
aad
pop
dec
and
cmp
out
in
dec
rcr
push
sub
pop
mov
rcr
lock
mov
js
fbld
pop
mov
or
test
outsl
and
cmp
adc
jmp
mov
dec
pop
arpl
arpl
mov
xlat
push
in
and
fs
fcomp
arpl
test
dec
and
aam
mov
sub
dec
fcomp
arpl
sbb
insb
jge
lret
adc
addr16
arpl
cmpl
fidivrl
lock
adc
into
pop
rcr
movsl
iret
xor
or
loope
arpl
rcll
cmp
cli
js
or
jae
fbstp
jecxz
sbb
push
and
aam
aad
cmp
loop
imul
loope
gs
lds
arpl
xchg
or
xor
fcomp
arpl
bound
push
into
adcl
loop
ljmp
pop
mov
xchg
jb
lock
fs
jae
fisttps
dec
dec
shll
flds
xchg
xor
mov
fucom
mov
fnsave
fcomp
and
push
in
and
shlb
or
jae
fcomp
mov
fldenv
mov
enter
lods
or
jae
lret
pop
out
fnstenv
scas
jae
push
xor
fbld
push
cli
bound
out
jbe
mov
xor
fldenv
das
mov
outsl
inc
pop
mov
sbb
fimull
xchg
leave
jmp
jle
jnp
movsl
inc
jle
loop
adc
testl
add
ljmp
jmp
imul
lock
cmp
push
popa
pop
jp
rcr
or
shll
flds
xchg
das
ljmp
fldl
pushf
xchg
ror
sub
insb
aas
fs
jle
and
into
arpl
adc
push
fucomi
cmc
adc
mov
fldenv
out
cmpsb
xor
or
fnstenv
xor
fldenv
clc
ss
popa
inc
inc
dec
pop
popf
inc
dec
add
arpl
das
test
test
outsl
mov
int
into
addr16
fsts
arpl
lock
out
divb
aam
movsl
push
pop
fidivrs
aam
imul
stos
imul
out
divb
and
aam
movsl
push
pop
xchg
aad
out
push
in
sbb
scas
sub
leave
jns
sub
or
and
aam
roll
mov
xlat
push
in
and
pop
mov
xlat
in
mov
push
cmp
lock
ret
push
popa
out
mov
fucomip
iret
pop
imul
js
fildll
fnstcw
xor
fldenv
clc
xor
dec
pop
popf
inc
dec
pminub
pop
sub
dec
hlt
outsb
add
ret
mov
sbb
jecxz
cmc
out
lret
or
arpl
and
je
pop
movsb
mov
out
mov
iret
push
fnstcw
sbb
out
rcr
lock
pop
loop
iret
fists
push
fdivrl
dec
or
dec
fcomp
or
shll
flds
xchg
xor
mov
fucom
mov
fnstsw
fcomp
and
or
sbb
fs
fcomp
arpl
out
loop
add
je
std
fldenv
popa
out
outsl
rcr
je
aam
arpl
adc
xchg
mov
fbld
pop
sahf
inc
and
sbb
mov
fcomp
arpl
pop
sahf
push
and
pop
sbb
fs
fcomp
arpl
jb
dec
fadd
insl
dec
fcomp
pop
mov
pop
mov
dec
aad
jge
arpl
adc
loop
lods
iret
pop
jb
push
arpl
push
ficompl
fbld
push
cmp
fdivrs
fimull
fcomp
arpl
lods
pop
jp
loop
je
adc
test
pop
mov
sbb
arpl
push
rcrb
loop
arpl
aas
arpl
fdivrs
or
aam
daa
outsb
aam
arpl
cltd
xor
enter
lods
inc
push
and
cmp
and
fcomp
loopne
ja
pushf
or
aad
arpl
push
jb
loop
out
or
rcr
pop
arpl
stos
mov
jae
bnd
loop
out
fdivs
arpl
bound
loop
fisubs
or
dec
fcomp
mov
fldenv
dec
jb
stos
inc
xchg
popf
push
iret
cmc
inc
mov
call
push
ds
and
pushf
lock
test
pop
inc
cs
frstor
fdivrs
or
aam
daa
outsb
aam
arpl
xchg
cmp
out
and
aaa
and
test
inc
and
aam
roll
mov
xlat
push
in
and
cmp
sub
dec
sbb
out
icebp
adc
fstpt
dec
inc
frstor
fmuls
push
iret
mov
mov
push
rcr
je
lret
iret
aaa
xor
fldenv
scas
jo
test
push
xchg
int
leave
inc
dec
leave
imul
aad
and
loop
notb
mov
xlat
push
or
mov
fwait
add
imul
loope
rclb
outsl
dec
fcomp
lods
ja
push
push
xchg
test
jg
out
xlat
mov
jae
scas
push
loop
xlat
adc
jmp
push
rcr
or
shll
flds
xchg
xor
cmpsb
hlt
fucom
mov
fnsave
fcomp
sub
pop
mov
push
gs
call
ja
mov
mov
inc
jecxz
fcomp
or
dec
inc
fldenv
pop
out
xlat
mov
lcall
ljmp
pop
push
js
fildll
arpl
rclb
fmull
ljmp
xchg
mov
dec
fisttpl
push
iret
fbld
out
xor
mov
pop
pop
fsubs
arpl
mov
stos
add
push
rcr
pop
sbb
arpl
arpl
fs
fcomp
arpl
fcomp
cmp
lds
loop
out
addr16
imul
pusha
mul
and
imul
fcomp
or
shll
flds
xchg
ss
fnstsw
fcomp
es
xchg
in
lea
fs
mov
fnstcw
fcomp
arpl
xor
test
pop
popf
inc
dec
adc
arpl
sub
loop
cmp
lcall
pop
mov
sbbl
push
fsts
jle
rcr
or
fnstenv
dec
clc
xor
dec
pop
popf
inc
dec
push
fisubl
and
add
xor
or
out
sbb
f2xm1
inc
pop
out
insl
dec
rcr
or
out
add
pop
fcomp
arpl
enter
cld
repz
aas
lods
push
in
or
ja
aas
arpl
fldenv
dec
sbb
inc
jge
lret
adc
addr16
fcomp
arpl
sbb
mov
fadd
outsb
dec
fcomp
ret
cmp
jo
adc
fldenv
inc
in
xlat
pop
pop
xchg
push
iret
filds
pop
sbb
fucomi
mov
rcr
lock
stos
gs
xor
inc
fsubrs
jnp
fldenv
enter
xchg
scas
imul
add
arpl
ds
mov
ljmp
clc
dec
adc
fnstenv
xor
fldenv
clc
xor
dec
pop
popf
inc
dec
add
arpl
sub
push
inc
arpl
out
lock
f2xm1
and
fldl2e
call
f2xm1
xlat
xor
adc
fnstcw
fcomp
arpl
xor
test
pop
popf
inc
dec
add
arpl
sub
xchg
push
iret
or
sbb
fisubrs
pushl
cmc
sbb
mov
pop
popa
fadds
imul
jo
arpl
out
fldcw
fucomip
push
fcmovnb
push
shl
dec
fsub
push
cwtl
scas
sub
stos
or
dec
fcomp
loop
sbb
das
out
iret
dec
add
push
or
insb
and
aam
mov
stos
dec
dec
fidivrs
xlat
pop
jg
push
or
jg
fcomp
mov
fldenv
mov
cmpsb
call
faddp
mov
xor
dec
xlat
adc
aam
testl
rclb
bound
push
iret
fisttps
dec
inc
shll
flds
xchg
xor
cmpsb
hlt
fucom
mov
fnsave
fcomp
sub
scas
arpl
dec
fcoms
jb
mov
add
fldenv
pusha
fsubs
xlat
fbstp
arpl
pop
stos
jp
pop
xchg
fcomip
xlat
in
mov
filds
pusha
fimuls
cmp
xor
fisubl
loopne
cmp
mov
cli
xchg
jnp
mov
xlat
push
stos
dec
and
pop
stos
lcall
or
sbb
fdivrs
arpl
fdivrs
or
aam
daa
outsb
aam
arpl
lcall
sahf
sbb
jecxz
or
dec
popa
out
dec
push
rcr
mov
fldenv
popf
add
xchg
pop
sub
roll
pop
mov
lds
loop
movsb
and
jmp
adc
or
shll
flds
xchg
ss
fnsave
fcomp
es
xchg
fs
shll
enter
lret
imul
lret
dec
push
jp
and
xor
add
fsubrs
mov
fldenv
push
sbb
rcrl
addr16
adc
addr16
fcomp
arpl
or
dec
fcomp
movsb
push
xor
insl
aad
ret
fcomp
push
and
mov
push
push
mov
mov
aam
imul
sbb
sbb
fldenv
push
es
and
out
push
mov
imul
into
addr16
fsts
popa
dec
sub
sbb
fldenv
push
es
and
out
inc
movsl
scas
imul
push
dec
and
aas
arpl
jns
or
aam
daa
outsb
aam
arpl
xchg
cmp
jb
insb
adc
fsubs
stc
adc
xor
stos
pop
popa
out
icebp
jle
fcomip
or
and
fdivs
arpl
in
arpl
xchg
repnz
rclb
xchg
fmull
push
rcr
out
iret
pop
xchg
mov
iret
and
push
inc
lea
nop
aam
out
mov
xlat
push
in
and
aam
rcll
push
and
pop
fisubs
mov
dec
gs
iret
dec
arpl
push
dec
out
or
arpl
aam
xchg
or
jno
push
jb
and
fisubl
fadds
and
lea
push
pop
pop
out
mov
fbld
pop
xchg
jo
fbstp
fldenv
pop
lods
out
xlat
test
sub
dec
fcomp
arpl
and
or
fcomp
arpl
xor
dec
pop
popf
inc
dec
adc
arpl
sub
stos
popa
push
cmp
filds
stos
pop
pop
testb
xor
bound
loop
cmc
inc
mov
push
cwtl
dec
jo
shl
in
or
in
iret
dec
imul
push
fildll
arpl
jmp
arpl
filds
arpl
lock
push
mov
fbld
fcomp
lock
icebp
arpl
ja
filds
inc
pop
push
cmp
iret
fbld
push
ja
dec
fsubs
fcomp
arpl
rcr
je
fcomp
arpl
pop
fmulp
adc
inc
dec
fcomp
lahf
xor
arpl
insl
arpl
lods
and
fnsave
lods
stos
shl
popf
into
imul
je
filds
loop
je
jbe
arpl
pusha
ficoms
pop
pop
inc
push
iret
fucomip
pop
push
fdivrl
dec
fcomp
mov
jl
pop
les
or
divl
fidivrl
lret
into
out
mov
aas
arpl
call
gs
imul
je
mov
mov
lret
aas
fistpll
fstpt
xorl
lret
in
dec
js
or
push
iret
fbstp
fldenv
or
fcomp
sbb
filds
loop
dec
fmuls
gs
es
inc
pop
fwait
stos
in
iret
dec
fld
push
pop
push
push
outsl
rcr
xor
fldenv
dec
sbb
dec
jge
lret
adc
addr16
arpl
xchg
add
std
std
movsb
and
insl
dec
fcomp
add
fucomi
xchg
adc
or
shll
flds
xchg
ss
fnstsw
fcomp
es
xchg
repz
jl
jge
mov
arpl
sub
bound
fdivs
arpl
sti
cwtl
add
xchg
arpl
dec
push
shll
flds
xchg
xor
hlt
fucom
mov
fnstsw
fcomp
sub
xchg
jno
jae
pusha
and
mov
out
cmp
mov
dec
xchg
rorb
loop
ljmp
lret
loop
mov
push
out
and
movsb
sbb
mov
sub
push
cmp
and
aam
xor
mov
aad
fiadds
loop
cmc
inc
mov
aad
ss
loop
out
fnstenv
andb
shll
fstps
xor
lcall
dec
fsubs
fwait
loope
imul
or
outsb
arpl
add
or
inc
nop
inc
ret
or
js
cmovnp
dec
dec
mov
rcrl
loope
sub
sub
mov
bound
fsubr
cltd
jae
fists
jne
mov
dec
iret
fcomip
pop
jb
mov
dec
iret
fbld
in
jle
push
pop
fwait
repz
xor
pop
scas
jb
loop
aad
fnstenv
fs
jg
push
pop
out
cmc
adc
add
rcll
bound
rcr
dec
fdivrs
or
aam
daa
outsb
aam
arpl
fwait
cmp
les
sbb
arpl
fdivrs
or
aam
daa
outsb
aam
arpl
lcall
movsb
ret
inc
fcomp
mov
mov
lcall
arpl
mov
stos
fisttpl
lea
fistps
and
mov
mov
rcll
jno
loop
fiadds
mov
xlat
push
push
arpl
fcomp
arpl
mov
jno
lret
jae
aam
xor
mov
jge
adc
loop
cmc
inc
mov
mov
sub
push
sbb
lret
adc
addr16
arpl
loop
into
dec
mov
fildl
rcll
bound
push
pop
arpl
clc
mov
lcall
arpl
das
test
popa
sub
inc
dec
push
fisubl
push
sub
in
lock
push
fisttpl
lea
fisttps
dec
dec
shll
flds
xchg
xor
mov
fucom
mov
fnstsw
fcomp
and
cmc
out
add
mov
out
fbstp
dec
and
adc
inc
jo,pn
iret
ljmp
xor
fldenv
clc
xor
test
pop
popf
inc
dec
adc
arpl
sub
jecxz
pop
sbb
loop
notb
aam
arpl
pusha
imul
pop
in
iret
pop
sub
outsb
lcall
imul
fnstcw
fcomp
arpl
xor
test
pop
popf
inc
dec
adc
arpl
sub
sar
jmp
fdivrs
dec
fcomp
arpl
mov
mov
adc
pop
push
dec
fcomp
or
shll
flds
xchg
xor
cmpsb
hlt
fucom
mov
fnstsw
fcomp
sub
and
outsb
and
pusha
repz
mov
stos
pop
push
cmp
iret
fbld
push
insb
arpl
loop
cmpsl
adc
arpl
pop
insl
dec
fcomp
ljmp
push
cli
push
rcr
arpl
das
arpl
aas
arpl
jns
or
aam
daa
outsb
aam
arpl
xchg
cmp
pop
int3
push
push
loop
rcr
arpl
arpl
aas
arpl
jns
or
aam
daa
outsb
aam
arpl
xchg
cmp
inc
and
jle
pusha
out
jnp
mov
xlat
push
jo
and
or
arpl
pop
insl
dec
fcomp
lock
mov
dec
fsubs
fcomp
arpl
jmp
fcmovb
push
inc
adc
cwtl
dec
dec
cld
mov
xlat
push
push
bound
fcomp
pop
jo
jmp
fnstsw
cmp
xorl
push
dec
mov
imul
imul
loop
je
pminub
scas
dec
outsb
aam
out
out
mov
mov
lret
shll
fsubs
aas
xlat
mov
xlat
push
out
and
mov
xor
js
jmp
pop
pop
mov
xor
arpl
les
jnp
mov
jecxz
jge
xchg
mov
mov
push
sbb
mov
fldenv
cmp
add
insb
jge
lret
adc
addr16
fcomp
arpl
std
pusha
mov
dec
fmuls
imul
loop
push
push
push
push
xchg
dec
rcr
arpl
cwtl
adc
iret
sbb
neg
add
fbld
xor
pop
out
mov
lcall
ljmp
negb
push
xor
mov
fsubrs
ljmp
movsl
test
mov
sub
add
negl
insl
dec
iret
fists
xor
fldenv
lock
enter
lcall
xor
push
mov
and
mov
sbb
push
and
popf
or
mov
dec
and
out
sbb
mov
and
pop
pop
insl
dec
iret
fbstp
xlat
push
push
bound
xchg
loop
push
fmuls
xlat
push
std
push
xlat
push
out
and
int3
fadd
push
dec
aam
sub
mov
int
imul
dec
loopne
outsb
push
pusha
stos
lret
stos
push
or
pop
mov
arpl
sub
mov
popl
mov
dec
xchg
es
loop
arpl
fdivrs
or
aam
daa
outsb
aam
arpl
lcall
fcomp
push
std
mov
shll
push
mov
fsubs
fcomp
arpl
lods
and
loop
out
mov
dec
fcomp
arpl
jecxz
test
mov
rcrl
jle
loop
mov
dec
or
insb
dec
fcomp
lock
sarb
push
push
push
cli
push
rcr
arpl
mov
fsubs
ja
mov
xor
fldenv
mov
mov
insb
mov
fcmovb
push
or
dec
fcomp
push
out
xchg
xor
fldenv
mul
jmp
iret
and
rclb
arpl
mov
cld
imul
push
pop
push
pop
cmp
out
fnstenv
imul
add
lods
mov
pop
pop
jb
push
fsubs
fcomp
arpl
lret
mov
ljmp
arpl
fcomp
jecxz
pop
ret
orb
xor
mov
xor
filds
mov
pop
shrb
push
fmuls
int
into
addr16
fsts
arpl
lock
out
divb
aam
movsl
push
pop
fidivrs
aam
imul
lods
imul
out
divb
mov
or
rcrl
push
push
call
and
pop
mov
addl
inc
push
ret
orl
or
aas
insl
mov
mov
push
jle
mov
push
or
push
push
push
call
and
pop
mov
addl
inc
push
ret
mov
cwtl
push
xchg
lea
or
push
call
and
pop
mov
addl
inc
push
ret
popa
jnp
jmp
test
adc
mov
fisttps
mov
test
add
add
or
or
shrl
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
jo
pusha
jmp
loopne
jb
cs
mov
out
adc
sbb
mov
popa
mov
push
push
mov
push
mov
push
pusha
or
jne
call
fwait
mov
sbb
push
loope
cld
mov
fwait
pop
popa
lea
push
push
call
and
pop
mov
addl
inc
push
ret
mov
std
int3
cmpsb
cmp
mov
call
push
pop
outsb
jbe
push
cld
sub
call
sbb
loopne
sbbl
jl
adc
add
cmp
or
cmp
movsl
push
movsb
add
test
pop
pop
push
mov
push
jo
pusha
or
push
pop
popa
push
and
push
push
push
call
and
pop
mov
addl
inc
push
ret
leave
inc
sub
movsb
mov
jmp
mov
loopne
ret
sbb
add
add
lea
pop
fmuls
cmpl
je
call
stos
test
inc
jb
pop
inc
lods
push
pop
mov
mov
pop
lea
push
push
call
and
pop
mov
addl
inc
push
ret
lcall
xchg
popf
fmuls
jmp
cmc
lea
push
sub
push
mov
sub
pushl
mov
call
pusha
add
sbb
popa
je
or
test
jne
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
push
mov
inc
cmpsb
out
mov
addb
add
cld
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
data16
and
pop
in
movsl
insl
mov
mov
mov
pushl
xor
call
adc
pusha
call
cmp
dec
push
icebp
push
test
mov
shll
mov
xor
or
lea
test
jne
mov
push
push
movzwl
pop
mov
cmpl
je
mov
lea
sub
jmp
lcall
push
pop
pop
jmp
movswl
lea
call
sbb
out
dec
adc
mov
mov
pushl
xor
call
push
push
call
and
pop
mov
addl
inc
push
ret
push
dec
jp
jp,pt
shrb
mov
jne
jo
sub
mov
sub
push
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
cmp
jnp
or
or
pushl
mov
mov
call
mov
test
jne
movzwl
pushl
mov
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
add
push
add
test
jne
call
inc
test
mov
stc
push
adc
xchg
add
push
cmc
push
mov
push
movswl
push
adc
push
mov
push
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
fmuls
mov
cmp
jne
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
xchg
xchg
sbb
or
mov
add
add
mov
or
or
push
call
and
pop
mov
addl
inc
push
ret
sub
rolb
xchg
in
call
pop
pop
psrlw
in
xor
loope
mov
pop
jge
jmp
ror
ljmp
adc
stc
insb
add
mov
xlat
cmpl
je
sub
lea
jmp
dec
sbb
daa
paddsw
pop
popf
call
mov
lea
call
push
push
call
and
pop
mov
addl
inc
push
ret
call
addb
add
mov
mov
add
cmpl
jne
cmpl
je
push
push
mov
mov
mov
lea
call
pop
pop
cmpl
je
push
push
mov
mov
lea
call
pop
pop
push
push
call
and
pop
mov
addl
inc
push
ret
xor
mov
mov
mov
mov
ja
mov
push
pusha
mov
popa
push
jb
call
push
out
in
inc
pop
cmp
dec
cltd
icebp
testb
pop
push
mov
call
mov
test
push
push
call
and
pop
mov
addl
inc
push
ret
out
or
dec
add
sahf
cltd
mov
mov
mov
sub
push
pusha
mov
mov
popa
cmpl
je
add
mov
pusha
mov
or
popa
mov
lea
pusha
mov
add
popa
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
dec
shlb
xchg
and
test
add
or
leave
das
fmuls
pop
jmp
dec
lods
scas
loop
sub
cmp
mov
and
or
mov
add
or
or
lea
xchg
testb
or
xchg
add
add
or
or
push
call
and
pop
mov
addl
inc
push
ret
repnz
cmpsl
movl
cld
cmpl
je
jb
lea
xor
push
mov
push
sub
pushl
mov
cld
call
mov
pushl
cld
call
mov
push
mov
cmpl
je
xor
lea
mov
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
mov
pop
cmp
mov
test
add
or
addb
add
add
sub
push
add
pushl
jmp
jae
dec
or
int
cmpsb
mov
mov
testb
or
xchg
add
add
add
or
push
call
and
pop
mov
addl
inc
push
ret
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
ret
sbb
push
mov
add
or
addl
mov
add
or
test
push
fmuls
pop
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
ret
call
dec
ret
pop
repz
pop
mov
jmp
ja
or
pushl
jge
push
mov
pop
call
movzwl
mov
mov
jmp
cld
lea
mov
movzwl
lea
jns
or
call
cld
push
or
call
dec
inc
stos
das
mov
ljmp
movl
or
lea
add
add
into
mov
push
push
call
and
pop
mov
addl
inc
push
ret
ja
test
fimull
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
jle
mov
adc
add
or
push
push
call
and
pop
mov
addl
inc
push
ret
fmull
mov
xor
or
xchg
lods
push
fmuls
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
cmp
xor
mov
cmpl
jne
cmpl
je
push
push
mov
mov
mov
lea
call
pop
pop
cmpl
je
push
push
mov
mov
lea
call
pop
pop
push
push
call
and
pop
mov
addl
inc
push
ret
shrb
fsubr
push
add
push
push
call
and
pop
mov
addl
inc
push
ret
test
mov
mov
mov
push
mov
mov
mov
mov
push
lea
mov
mov
mov
mov
lea
mov
mov
pop
sub
stc
push
push
push
call
and
pop
mov
addl
inc
push
ret
stc
pop
movsl
pop
mov
lea
mov
push
push
jnp
mov
pop
push
push
push
call
and
pop
mov
addl
inc
push
ret
cltd
xchg
sub
fmuls
call
in
jl
test
mov
pop
lea
jmp
lret
add
xor
inc
dec
stos
xchg
cld
into
outsl
ja
outsb
push
mov
push
jmp
gs
stc
lods
and
jg
inc
ror
add
gs
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
fildll
imul
add
popa
push
call
mov
call
or
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
or
mov
cmp
call
mov
lea
mov
sub
movl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
adc
add
add
cmc
ss
pop
sub
or
mov
cmp
or
or
je
or
cmp
jae
jmp
call
cli
iret
dec
into
mov
pop
stc
adc
cwtl
add
add
cmpl
add
or
or
add
mov
call
sub
lea
mov
add
call
jmp
inc
xchg
xchg
fsubrl
mov
mov
cld
cmpl
jne
cmpl
je
push
push
mov
mov
mov
lea
call
pop
pop
cmpl
je
push
push
mov
mov
lea
call
pop
pop
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
inc
ret
sbb
call
jmp
stc
dec
daa
push
jl
jmp
pop
in
inc
bound
mov
andb
xchg
add
mov
mov
or
cmp
jne
movzwl
movl
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
inc
jb
inc
add
add
push
call
and
pop
mov
addl
inc
push
ret
pop
subl
add
add
stc
cmp
jne
adc
jmp
adc
jmp
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
cmp
push
jmp
lods
fdivr
push
rorb
mov
add
cmpl
je
push
push
mov
mov
mov
lea
call
pop
pop
cmpl
je
push
push
mov
mov
lea
call
pop
pop
mov
jmp
inc
push
sbb
sub
sarl
nop
adc
icebp
jno
sub
mov
and
jmp
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
loopne
mov
push
push
call
and
pop
mov
addl
inc
push
ret
js
and
cmp
jb
mov
mov
jmp
or
lea
mov
inc
mov
mov
mov
push
lea
push
pushl
push
call
cmp
je
mov
test
jne
movb
push
pushl
lea
call
push
push
push
push
call
mov
movb
push
pushl
lea
call
call
mov
movb
push
pushl
lea
call
lea
push
push
push
call
test
jne
movb
push
pushl
lea
call
mov
movb
push
pushl
lea
call
mov
lea
push
lea
push
push
call
mov
movl
movl
mov
movl
push
push
push
mov
push
push
pushl
call
movb
push
pushl
lea
call
push
push
call
mov
test
jne
mov
movl
mov
push
push
mov
push
push
pushl
call
pushl
call
push
call
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
push
mov
clc
scas
dec
inc
xlat
mov
adc
ret
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
lahf
lret
adc
add
inc
and
or
sub
addl
mov
push
mov
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
adc
add
pop
or
mov
pop
jmp
bnd
sarl
cld
xor
mov
jae
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
pop
push
xchg
mov
pusha
out
jmp
push
punpckldq
outsl
daa
lret
lds
cmpl
jne
mov
cmpb
jne
mov
jmp
mov
xor
mov
xor
call
jl
lcall
inc
xchg
jle
add
daa
xor
jp
xchg
orl
inc
pop
or
add
add
add
stc
mov
mov
cmp
je
mov
movl
jmp
mov
imul
dec
repnz
mov
jbe
xor
aaa
add
add
push
call
and
pop
mov
addl
inc
push
ret
fwait
push
add
push
mov
pop
jmp
mov
mov
movl
addl
xor
ret
mov
push
call
pop
sub
mov
lea
mov
pop
xor
ret
mov
add
lea
cld
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
inc
fildl
clc
dec
fdivrs
pushl
call
int3
and
loope
cwtl
iret
jp
icebp
jb
xor
pop
mov
cmc
mov
mov
add
mov
mov
sub
in
cmp
jne
movl
popl
add
jmp
fdivrl
shll
jno
loopne
testb
add
sub
popa
sub
or
jne
push
mov
pop
cmpl
jne
jnp
xor
push
push
push
call
and
pop
mov
addl
inc
push
ret
push
add
mov
sldt
push
push
call
and
pop
mov
addl
inc
push
ret
in
jg
dec
popf
pop
mov
adc
or
je
cld
movl
sbb
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
pop
imul
cmpl
jne
adc
push
movzwl
sidtl
push
push
call
and
pop
mov
addl
inc
push
ret
jns
push
lea
adc
or
or
add
decl
xchg
add
add
mov
pop
pop
movl
mov
push
movzwl
pop
mov
mov
cmpl
jne
cmpl
je
push
push
mov
mov
mov
lea
call
pop
pop
cmpl
je
push
push
mov
mov
lea
call
pop
pop
sbb
mov
mov
and
movb
add
xor
push
or
pushl
jb
sub
lea
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
jo
jp
sub
xor
stos
jb
test
add
add
add
and
pop
mov
addl
inc
push
ret
loope
or
lea
jmp
lods
jae
xchg
jne
add
mov
sub
aas
jbe
mov
push
mov
call
mov
mov
add
lea
mov
push
mov
push
jmp
out
xchg
or
stc
sub
or
push
add
add
jle
jle
push
push
dec
and
jp
cmpsb
mov
lea
pusha
pusha
mov
mov
popa
movzwl
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
fcomps
nop
test
mov
or
add
add
add
xor
cmp
xor
mov
popa
incb
push
jge
xchg
je
in
js
gs
imul
outsl
jb
popa
je
outsl
outsb
add
gs
jae
sub
arpl
je
arpl
push
data16
popa
jb
and
gs
outsl
jo
jb
and
je
and
and
insb
insb
outsl
ja
outsb
and
fs
and
outsb
imul
outsl
jne
or
and
and
and
sub
gs
and
push
dec
sub
outsl
outsb
and
jae
ja
outsb
outsl
ja
je
and
jo
and
arpl
bound
jb
sub
and
and
or
jb
imul
and
push
dec
and
cmp
or
imul
and
or
dec
dec
and
and
or
dec
push
push
and
cmp
or
dec
dec
and
and
or
dec
push
push
and
cmp
or
and
and
and
or
and
and
and
or
and
and
and
and
js
and
cmpl
je
lea
push
lea
push
push
call
lea
push
lea
push
push
push
lea
push
pushl
call
lea
push
lea
push
push
push
lea
push
pushl
call
lea
push
lea
push
push
push
lea
push
pushl
call
lea
push
lea
push
push
push
lea
push
pushl
call
lea
push
lea
push
push
push
lea
push
pushl
call
lea
push
lea
push
push
push
lea
push
pushl
call
lea
push
lea
push
push
push
lea
push
pushl
call
lea
push
lea
push
push
push
lea
push
pushl
call
pushl
call
jmp
cmpl
je
cmpl
jne
mov
add
jmp
lea
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
cmpl
jne
cmpl
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
lea
push
lea
push
lea
push
call
add
push
lea
push
lea
push
push
call
push
call
mov
jmp
jmp
pusha
mov
call
pop
sub
popa
ret
jmp
pusha
popa
ret
jmp
pusha
popa
ret
jmp
pusha
popa
ret
jmp
pusha
popa
ret
jmp
pusha
popa
ret
jmp
mov
and
jmp
call
add
cmp
jbe
mov
mov
iret
pusha
popa
ret
push
mov
and
or
je
push
push
mov
mov
xchg
or
jne
pop
pop
pop
incl
ret
jmp
push
pushl
call
push
sidtl
pop
add
push
mov
mov
mov
pop
mov
and
or
je
mov
movb
pop
incl
ret
jmp
push
push
mov
and
or
je
mov
mov
xchg
or
jne
movl
mov
mov
mov
mov
mov
jmp
movl
pop
pop
incl
ret
jmp
pusha
cmpb
je
mov
mov
mov
jmp
lods
mov
add
xor
ror
stos
or
je
dec
or
jne
or
jne
popa
ret
push
mov
push
mov
xor
jmp
stos
cmpb
jne
pop
pop
ret
push
push
push
xor
xor
jmp
lods
xor
rcl
add
mov
rcl
dec
or
jne
mov
pop
pop
pop
ret
pusha
mov
mov
jmp
lods
xor
sub
ror
stos
or
je
dec
or
jne
or
jne
popa
ret
mov
test
je
movl
push
sidtl
popl
lea
lea
mov
jmp
lea
mov
add
mov
lea
mov
mov
lea
mov
jmp
push
mov
pusha
mov
mov
mov
jmp
add
xor
ror
inc
cmp
jb
popa
pop
ret
push
mov
pusha
mov
mov
mov
jmp
xor
sub
ror
inc
cmp
jb
popa
pop
ret
push
mov
push
push
push
xor
mov
mov
jmp
lods
cmp
je
add
xor
xor
rol
dec
or
jne
mov
pop
pop
pop
pop
ret
lea
mov
lea
mov
lea
mov
call
inc
int3
cmp
test
pusha
and
or
popa
add
sbb
sub
ja
pushl
mov
pop
call
dec
xchg
mov
loop
lods
cmp
add
add
adc
pop
sub
call
hlt
addr16
jnp
dec
out
mov
pop
roll
sarl
add
sbb
xor
pusha
popa
mov
movzwl
mov
sub
jo
movswl
dec
dec
mov
cmp
jne
jmp
mov
xchg
pop
or
xor
pushl
jo
push
leave
pop
out
js
or
nop
mov
hlt
push
loop
dec
jge
mov
aad
subb
test
lock
std
push
mov
pop
test
jbe
sub
push
inc
and
dec
stc
iret
lcall
cmp
and
jge
xor
dec
mov
aam
cmpb
cmovs
mov
and
or
lock
es
arpl
mov
jl
mov
fnstcw
cmc
inc
inc
or
cmpsb
rclb
ror
cmpb
cmpb
orb
pushf
mov
mov
flds
mov
popa
inc
or
xchg
jle
movl
mov
sub
or
cmpl
js
add
js
mov
cltd
xor
jg
pop
or
jge
xorb
pop
sbb
aad
mov
push
aad
mov
cltd
inc
or
stc
js
add
js
mov
cltd
mov
xchg
movsb
aam
mov
push
mov
fwait
mov
mov
mov
inc
xor
or
pushf
mov
mov
mov
jle
sti
and
xor
push
lss
pop
mov
pushl
inc
sub
jae
or
dec
mov
out
mov
mov
inc
mov
or
dec
lea
jl
mov
ss
fdivl
inc
mov
or
pushf
mov
mov
flds
mov
testl
lea
aad
cmpb
adc
dec
push
aad
sbbb
xchg
sbb
cmp
shl
mov
mov
aas
ss
mov
add
mov
lret
add
xchg
jbe
pop
dec
imul
les
mov
mov
jl
mov
lcall
mov
fdivrs
imul
mov
lcall
mov
aad
addb
mov
cmpb
adc
or
pushf
mov
mov
flds
jns
jg
pop
hlt
and
inc
push
mov
jl
adc
mov
aaa
xchg
xchg
dec
daa
add
jmp
cmp
jl
push
fdivrl
nop
mov
and
jl
mov
adc
call
mov
cltd
inc
or
stc
js
add
js
mov
cltd
movsl
sbb
xchg
sub
sbb
jecxz
push
sarb
mov
stc
inc
adc
int
call
mov
and
imul
mov
add
pop
and
mov
xchg
mov
cmpl
js
add
js
mov
cltd
fldl
and
jo
mov
sarl
push
mov
push
sub
xor
data16
jge
es
les
sub
lcall
jo
les
or
sbb
pop
cmp
lcall
mov
cmp
addl
jl
xor
xchg
mov
inc
mov
mov
add
mov
cmp
cltd
xchg
aad
cmp
ror
lahf
jae
push
lock
jl
mov
aad
or
clc
push
cmp
xchg
test
jl
inc
add
mov
aad
mov
adc
push
mov
mov
mov
leave
jl
mov
adc
cmpsl
test
js
leave
push
mov
inc
lcall
jns
jge
push
fnstcw
cmc
inc
inc
push
dec
pusha
cmpsb
rclb
sarb
inc
push
xchg
cltd
es
cli
cmpb
cmpb
imul
jl
faddl
je
clc
stc
loop
cmp
jge
mov
stc
dec
dec
xorl
int3
aad
or
dec
icebp
and
xorl
mov
jae
mov
jl
fsubrl
jge
push
jae
cmp
jecxz
xor
loope
ja
pop
or
xlat
dec
dec
sar
pop
inc
or
mov
imul
or
not
mov
xorl
xor
mov
iret
mov
cmp
jne
push
add
mov
inc
cmp
cmp
data16
xor
cmp
jne
lea
das
enter
inc
jmp
cmp
jne
mov
aad
fidivs
enter
mov
cs
mov
iret
aad
test
or
mov
or
test
inc
mov
scas
pop
data16
dec
push
nop
dec
lret
aad
movl
mov
cmpps
jne
ds
cli
mov
dec
mov
cs
mov
data16
xchg
cmp
jb
rcrb
or
cld
push
add
jp
sbb
push
and
mov
pop
dec
cs
dec
add
dec
mov
enter
xchg
mov
js
xchg
and
loopne
dec
cmp
mov
jne
popa
jmp
in
inc
stos
and
mov
fists
inc
dec
xchg
or
adc
pop
cmpsb
or
adc
pop
jno
mov
pop
stc
xor
shr
sub
stos
pop
mov
nop
cmpl
pop
fabs
or
push
sub
inc
xor
cltd
je
xchg
cmp
push
jge
push
push
adc
inc
sbb
push
xlat
aam
mov
and
add
imul
add
mov
mov
lods
mov
mov
cmc
lahf
inc
push
sti
icebp
mov
xchg
iret
movsb
ds
jg
xor
add
mov
xor
jle
outsl
add
lahf
testb
lea
mov
push
or
in
push
fdivrl
push
stc
mov
into
jl
int
add
ret
push
or
add
lret
or
pop
mov
sbb
aad
push
repnz
aas
pop
pop
pop
insl
and
add
mov
testl
push
js
pop
mov
jge
fisttpl
and
daa
mov
imul
mov
add
sub
fldcw
imul
sub
fwait
popf
xorl
in
sbb
sub
mov
loope
ss
mov
add
loopne
pop
and
sbb
int
pop
mov
icebp
fidivrl
mov
pop
push
movb
xchg
xchg
add
shll
mov
push
adc
xchg
sub
sub
or
mov
xchg
jmp
or
push
mov
js
sahf
dec
je
aas
insb
std
leave
jl
icebp
aaa
fiaddl
cld
inc
jl
jne
enter
jnp
jo
fmuls
xor
clc
aad
adc
cvtps2pd
pushf
insl
jle
xchg
popf
fdivrl
push
daa
sub
out
pusha
imul
mov
xchg
lea
and
jp
cmp
negl
in
ljmp
pop
fs
imul
loope
adc
adc
adc
xlat
imul
sbb
mov
addb
add
repz
xchg
nop
pop
pushf
inc
into
loopne
int
push
dec
lods
es
shl
fldl
subl
movl
cmpsb
shll
into
mov
out
stos
sub
loope
mov
push
adcl
bound
popf
push
pop
icebp
into
into
add
iret
mov
cmpsb
mov
fldenv
jecxz
xor
gs
jecxz
idivb
mov
mov
cmc
call
insl
lods
pop
fistpl
loop
jo
and
es
in
adc
jl
out
dec
sub
mov
mov
push
imul
or
push
mov
push
das
notb
dec
jmp
jno
mov
dec
les
xchg
push
xchg
add
and
dec
out
out
daa
pop
ja
scas
add
fnsave
xor
pusha
mov
iret
mov
adc
and
loopne
shlb
and
pusha
arpl
and
in
jbe
cli
insb
idiv
je
outsl
in
bound
fsubrp
lock
addb
jmp
ss
sbb
mov
cs
shll
jne
mov
and
fbld
inc
mov
sub
test
jge
mov
pavgb
les
push
inc
cmpsl
fdivrs
pop
pop
jp
and
push
enter
jns
ljmp
and
cmpsb
fwait
inc
into
loopne
ret
dec
cmpb
xor
mov
jmp
ds
dec
lock
push
sbb
push
sub
mov
int
das
pop
pop
stos
xor
js
mov
push
push
jbe
pop
dec
push
mov
sbb
notl
mov
pusha
pop
orb
mov
ljmp
and
adc
mov
xlat
cmpsb
dec
int
cmp
xor
out
sub
cmp
lock
sahf
gs
and
jbe
cmp
xchg
and
sti
ss
into
int3
mov
cmp
das
je
cs
jb
sarb
xlat
lcall
jl
in
hlt
popf
push
outsb
jb
lock
fsub
in
lods
bound
pop
cmpsb
outsl
jo
jnp
jbe
imull
mov
adc
jmp
mov
mov
pop
mov
inc
jecxz
and
fists
cmp
psllw
fldt
jmp
in
add
sti
mov
fsts
fwait
push
push
test
sub
andl
and
cmp
stos
dec
dec
jg
and
cld
push
xchg
push
push
sbb
mov
jbe
dec
add
xlat
xor
test
movsl
cli
sbb
call
or
dec
adc
aam
nop
push
push
mov
fldt
mov
rclb
xorl
pop
ljmp
shlb
xlat
popf
popa
cmpsb
jae
stc
or
lea
or
xor
je
push
imul
shl
and
cmp
roll
or
inc
or
negl
mov
ds
int3
scas
bound
sub
cs
xlat
jbe
mov
mov
cmp
jo
adcb
dec
adc
jno
adc
pop
lahf
cmp
enter
cwtl
mov
scas
mov
loopne
xchg
gs
rorb
daa
lds
xchg
dec
into
jl
std
sahf
loopne
add
xchg
inc
hlt
in
lds
push
lret
push
pop
fs
icebp
rol
xchg
push
xchg
in
fwait
and
aaa
cmpsl
fcomps
add
mov
inc
adc
cmc
mov
mov
in
push
stos
es
test
jp
movsl
pusha
ljmp
xor
call
into
lods
mov
lret
sub
cltd
fmulp
popf
xor
jne
out
lahf
sbb
push
fs
push
mov
iret
in
jmp
std
dec
mov
ror
xor
leave
sarb
aas
loope
enter
test
insb
mov
insb
ljmp
mov
xchg
mov
addr16
cs
push
sbb
sub
ljmp
xchg
pop
xor
mov
outsb
insl
jmp
push
lret
dec
xor
adc
lret
les
addr16
fsubrl
sbb
test
in
sbb
cmp
sbb
js
jl
mov
sbb
dec
xor
sub
std
pusha
dec
mov
dec
cltd
rcr
inc
aam
testl
inc
cmp
mov
mov
cwtl
dec
into
xchg
cmpsl
test
sub
sbb
cmp
mov
push
sarb
fistps
push
xor
loop
dec
dec
dec
jl
aam
push
add
jle
pop
cltd
push
push
idivb
iret
mov
insl
data16
mov
mov
jl
cmp
xchg
mov
cs
mov
add
jl
mov
aad
xchg
pop
rolb
les
fdivs
out
aad
adc
cmpsb
cmp
dec
sbb
cwtl
rolb
mov
rolb
movsl
test
pop
push
mov
pop
mov
inc
add
scas
loopne
movsl
rcr
mov
sbbb
add
mov
or
mov
stc
jg
test
pusha
cmpsb
xchg
push
lret
sahf
jl
mov
aam
dec
cmp
jl
mov
push
mov
xchg
push
mov
adc
or
stc
and
into
jl
jnp
xor
pop
scas
aad
movsw
out
es
mov
pop
or
enter
jl
mov
aad
cmpb
cmpb
cmpb
inc
mov
fnstsw
jno
cmp
push
addr16
xorl
aad
pop
cmp
push
leave
flds
loope
push
xchg
mov
notb
xchg
lds
sbb
cld
push
mov
orb
or
jg
sbb
int
fstl
dec
sbb
adc
mov
pop
insb
push
lods
addr16
iret
xor
fnstenv
inc
xchg
shl
popa
mov
pop
popf
mov
test
adc
pushf
mov
fcmovbe
daa
jle
stos
jle
mov
push
xorb
aad
pop
pop
xchg
dec
mov
gs
in
adc
ja
mov
mov
dec
testb
test
adc
pushf
cmp
out
push
jle
mov
sbb
lods
pop
adc
cmpb
push
add
movsb
mov
loope
mull
movsb
mov
pop
popf
push
cmpsl
div
gs
push
cmpl
add
jnp
push
sub
pop
mov
xor
js
in
rorb
test
cmp
repnz
popa
das
dec
push
outsb
push
test
push
clc
push
jo
imul
dec
sbb
ret
adc
insl
or
xchg
movsb
xlat
pop
jb
cld
sbb
cmp
push
jbe
xlat
jl
jecxz
mov
sti
insb
xchg
bound
lock
dec
or
daa
outsb
test
push
or
pop
shlb
inc
out
jns
cld
iret
lcall
cmpsl
lock
push
jecxz
sbb
xchg
movsl
xor
xchg
aam
shll
dec
testl
pop
xchg
xchg
mov
lret
sbb
jecxz
sub
clc
or
insb
cmpb
push
aam
pop
decb
ret
mov
add
mov
stos
mov
out
js
mov
std
out
outsl
add
mov
push
fidivrl
mov
out
clc
jle
jne
adc
hlt
push
xchg
les
sahf
hlt
jl
xchg
add
test
inc
add
data16
dec
sub
js
mov
xor
xchg
mov
mov
xor
xchg
push
cld
and
fisttps
jnp
dec
pop
lret
mov
imul
stos
sbb
or
push
xchg
push
pusha
push
xor
ja
inc
adc
mov
es
idivb
cmpsl
pop
cmp
ficomps
popa
xchg
in
sub
xchg
pop
iret
cmp
out
arpl
dec
adc
repz
rcrb
adc
push
iret
sbb
movsb
or
sbbb
pop
rolb
fidivrl
gs
and
pop
inc
es
push
lret
or
loopne
cmpsb
fmul
mov
push
xchg
sub
jp
xchg
imul
pop
shr
cld
or
pop
xchg
jb
dec
push
mov
pusha
inc
or
pushf
cmp
or
sub
xor
lods
and
int3
dec
mov
mov
mov
cmc
xor
addb
xlat
push
enter
jne
cmpb
adc
add
xchg
push
mov
push
cmp
dec
or
push
into
mov
je
hlt
bnd
fimull
mov
daa
sti
in
rcl
jle
call
adc
jno
pop
push
pusha
jae,pt
cli
fisttps
dec
leave
pop
in
cltd
pop
xchg
xchg
push
mov
lods
imul
push
xchg
lds
call
mov
int
xchg
xor
pop
jb
push
and
fiadds
pop
mov
sar
sti
dec
lahf
xlat
lods
inc
lret
cli
out
icebp
lods
addb
fistpll
jns
shlb
js
out
adc
aad
in
cmc
psrad
out
jecxz
fwait
scas
cmp
cmp
test
mov
jnp
cmp
leave
inc
test
nop
add
mov
xchg
inc
pop
dec
ficomps
xchg
rorl
sbb
sub
push
dec
inc
jmp
cmp
andb
sbb
test
adc
pop
cmpsl
sbb
stc
dec
mov
sar
sbb
mov
xchg
cltd
adc
push
cmp
or
pop
inc
shl
xchg
dec
push
pusha
mov
rcll
idivb
gs
mov
dec
dec
inc
jp
cmp
and
mov
xorl
bound
lods
xlat
lcall
sar
fsub
xchg
inc
push
sub
lds
mov
repz
mov
jbe
mov
faddl
or
fldenv
xlat
lcall
inc
jecxz
mov
or
lods
sti
mov
lahf
cmp
xchg
imul
fcmovnu
mov
pop
dec
scas
jns
or
rcl
insb
cmp
jge
dec
jmp
and
adc
movsb
insb
and
cli
mov
lods
cmpsb
jle
aad
mov
fs
and
push
push
lea
lcall
pop
mov
aad
cmpb
dec
pop
pop
mov
sub
dec
aas
and
xchg
int3
ret
or
fwait
cmpb
mov
decl
mov
mov
imul
jle
cltd
sbb
xchg
pop
addb
xchg
adc
cld
pop
ljmp
movb
test
pop
cmpsb
push
mov
xchg
pop
fcmovnb
mov
and
pop
mov
in
xchg
je
adc
in
jecxz
push
fisubrl
push
inc
push
sbb
and
call
add
pop
insl
rolw
jle
or
mov
movsb
cmc
mov
sbb
jmp
sub
pusha
jl
mov
pop
pop
push
xchg
sbb
or
xchg
sbb
fildl
push
push
lret
rorb
pshufw
mulb
popa
js
jmp
cmp
bound
dec
popa
push
arpl
dec
stc
test
loopne
jno
leave
aaa
jnp
dec
push
stc
int
or
sahf
add
ss
push
pop
js
mov
xchg
pop
lret
mov
sub
jno
in
sub
adc
add
cmpsl
mov
icebp
sub
push
jno
sub
icebp
in
jb
rcl
jl
mov
in
push
mov
or
testl
pop
popa
or
xor
gs
or
sbb
test
mov
inc
rorl
je
pop
mulb
xchg
js
mov
aad
adcb
inc
ljmp
cwtl
mov
mov
inc
rcl
cmpb
js
mov
add
jbe
or
push
or
cwtl
cwtl
mov
bound
and
pop
cmpsb
mov
aad
addb
notb
and
test
aad
andb
mov
mov
or
addr16
js
mov
pop
nop
cmpsb
or
lea
and
fdivrs
cmpb
push
in
mov
cmp
xchg
mov
data16
jnp
push
cmpb
cmp
dec
movsb
jp
jmp
jecxz
lret
add
inc
sarl
js
cltd
inc
push
pusha
adc
std
inc
imul
dec
outsb
push
jo
test
mov
jns
mov
sub
lahf
insb
fneni(8087
mov
loope
or
push
js
fisubs
outsl
push
aad
fmuls
add
mov
add
dec
insl
add
push
in
cmp
jl
mov
aad
clc
packssdw
repz
mov
and
and
jl
mov
adc
aam
pop
testb
in
data16
cmpb
loopne
cmpsl
sbb
out
andb
mov
cmpb
push
test
daa
cmpsl
add
add
xchg
loop
fstps
pusha
mov
and
enter
stos
loopne
movsl
xchg
loop
sbb
mov
pop
mov
rclb
mov
push
addl
sbb
addb
xchg
stos
popf
shr
sti
mov
cmp
inc
pop
sub
orb
xchg
sbb
call
ret
mov
cmp
adc
adc
push
xchg
insb
pop
add
or
and
xchg
gs
sbb
xchg
loop
or
loop
or
out
ret
loop
or
loop
or
loop
or
loop
or
loop
or
loop
or
loop
or
loop
or
loop
or
loop
or
loop
or
loop
or
loop
or
loop
or
loop
or
loop
or
loop
or
loop
or
loop
or
loop
or
loop
or
loop
or
loop
or
inc
or
in
push
ret
sub
fwait
andl
cld
popa
int3
add
idiv
cli
lea
lret
shrb
jbe
fwait
dec
and
loopne
std
sub
sub
fwait
aam
lcall
std
out
push
ret
sub
fwait
cmp
add
je
ret
push
jbe
fwait
or
lcall
std
and
ret
pop
jbe
fwait
adc
lcall
std
mov
push
ret
pop
jbe
fwait
nop
repz
cld
popa
xor
loopne
std
sbb
ret
pop
jbe
fwait
and
fwait
cld
popa
pusha
pop
loopne
std
jmp
push
ret
pop
jbe
fwait
pushf
inc
fwait
cld
popa
sub
loopne
std
add
push
ret
push
jbe
fwait
xchg
inc
fwait
cld
popa
sbb
loopne
std
mov
push
ret
push
jbe
fwait
aad
fwait
cld
popa
and
loopne
std
cmp
ret
push
jbe
fwait
xor
fwait
cld
popa
rolb
ds
ret
push
jbe
imul
cmp
mov
loope
xor
pop
and
int
sbb
pusha
xor
dec
imul
mov
adc
aas
sub
or
fadds
xor
dec
pop
mov
sub
adc
insb
and
jg
and
je
daa
rolb
add
pop
arpl
nop
ret
int3
loopne
push
xor
movsl
fsubrs
push
mov
push
cmp
sahf
jmp
loop
out
sbb
rcrl
pop
and
mov
jnp
cmpsl
push
push
ficomps
je
and
push
mov
push
cltd
cltd
fdiv
jecxz
imul
mov
push
mov
test
sarb
ds
divb
xor
push
fbld
sub
ret
ret
sub
sbbl
and
mov
aaa
lcall
lret
rcr
jp
in
pop
es
or
mov
jbe
adc
pop
push
es
fadds
and
push
movsb
inc
xchg
mov
dec
fnsave
lahf
dec
or
rclb
xchg
rcr
adc
lods
add
imul
jmp
sub
add
sbbl
mov
pop
inc
cmp
in
loop
insl
ss
mov
fs
mov
leave
push
das
xor
ljmp
std
adc
jl
and
xor
sub
rorl
dec
push
mov
sbb
sbb
pusha
sbb
rorl
pop
int3
push
and
daa
out
xor
mov
lock
lds
mov
mov
xor
gs
pop
push
xor
xor
in
sub
dec
add
cwtl
popf
emms
int
in
push
enter
outsb
ljmp
sbb
pop
adc
xchg
add
loopne
inc
aam
mov
and
inc
sbb
das
mov
int
daa
hlt
imul
xchg
cmp
push
mov
sub
fsubp
outsb
sbb
decb
or
pop
jne
icebp
or
mov
rolb
add
in
pushf
data16
push
add
lock
push
sub
push
int
lds
xor
cltd
mov
cmp
loopne
jp
jb
mov
cld
and
xor
bound
push
fstps
push
out
popf
sbb
mov
jle
inc
add
cmc
bound
adc
ret
jg
out
arpl
add
cs
xchg
pusha
jmp
out
shrl
lock
add
wrmsr
jae
mov
cmp
push
int
pop
mov
orb
jo
popa
popf
pop
push
test
lret
loope
cmc
cmp
mov
clc
cmp
cld
in
add
clc
jg
je
sti
adc
mov
stc
std
into
or
jp
dec
mov
in
lret
cli
inc
push
pusha
popf
clc
scas
add
sub
sub
or
lahf
popa
test
or
rolb
fstl
dec
sub
dec
jle
out
inc
or
inc
divb
jecxz
and
xchg
aaa
jl
int
adc
fiadds
push
dec
push
lds
mov
aaa
fidivl
xchg
mov
lock
cltd
or
mov
pop
and
mov
xchg
cltd
mov
adc
add
lcall
fwait
mov
sbb
mov
addr16
mov
cmp
sub
and
test
pushf
shrl
std
jp
jg
bound
aaa
lcall
adc
addl
and
fisubrl
bound
lods
fldenv
pop
jae
dec
shl
dec
fdivrl
xor
pop
notl
mov
fisttpll
and
pop
cmp
loop
sub
les
mov
jnp
ja
movsl
enter
and
push
cmp
test
xor
or
jp
test
add
xor
cmp
jge
sbb
inc
jmp
mov
int3
adc
push
add
shl
ljmp
popf
push
in
fadds
sbb
add
enter
push
push
add
mov
jmp
mov
vcmpss
cwtl
stc
test
ss
test
sti
mov
clc
enter
dec
cmpsb
and
xor
sub
sub
add
imul
fcoml
repnz
sub
add
iret
outsl
lcall
lret
out
sahf
aaa
cld
push
and
or
pop
or
popa
pusha
sbb
shl
adc
out
jle
fistpll
shlb
jg
inc
jmp
or
mov
xchg
loop
stos
rorl
pop
dec
lods
xor
cmpsl
xchg
jb
jnp
pop
xor
sbb
mov
lret
sub
dec
sbb
inc
and
js
and
mov
mov
dec
xor
and
pop
adc
into
pop
or
mov
xor
les
jno
ret
or
iret
or
lods
lods
push
ja
insl
mov
outsb
inc
cmpsl
addr16
fidivs
push
adcl
cmp
push
lcall
mov
movb
gs
enter
and
repz
insb
mov
jbe
or
js
ret
shll
jmp
sahf
das
outsb
pop
inc
mov
add
pop
psraw
lahf
fcmovu
jmp
movsl
movsl
xor
sub
cmc
pushf
or
jne
clc
pop
das
xchg
push
cltd
mov
jle
sbb
std
dec
sbb
mov
add
imul
divb
pop
loopne
xor
test
or
shrb
sub
inc
jnp
dec
push
call
sbb
orl
add
fcomip
mov
sbb
lods
stos
test
mov
sub
orb
les
mov
and
scas
push
jbe
sbb
inc
push
inc
xor
rcr
mov
cmp
rcrb
movsb
push
arpl
sub
jge
test
mov
mov
andb
testb
fistl
arpl
int
sub
xchg
pushf
out
loope
jae
add
mull
shlb
in
shll
loop
setae
mov
sub
cwtl
mov
push
pop
mov
cmp
nop
and
or
das
out
jae
cmp
aas
sub
iret
imul
inc
dec
push
enter
pop
cmp
push
pop
inc
xchg
mov
ljmp
cmp
pushf
std
mov
push
loope
mov
jmp
sub
pop
mov
cli
xchg
sti
push
out
imul
fwait
inc
dec
les
loopne
dec
sbb
dec
mov
sub
mov
cmp
and
xchg
ja
add
int3
fbld
xchg
popa
adc
mov
or
aad
mov
addr16
clc
jecxz
aas
sub
loopne
dec
and
scas
cwtl
push
lods
mov
test
jno
das
rcr
jp
mov
aas
idivb
or
mov
jbe
faddl
aad
mov
lret
movsb
sbb
add
push
rcr
std
out
imul
scas
cltd
cltd
mov
dec
xor
jb
in
xchg
inc
adc
movb
xchg
ret
daa
adc
insl
push
pushl
mov
subl
add
sub
xor
push
add
popa
lods
addr16
out
dec
cs
ficoml
sbb
gs
or
and
push
add
inc
mov
mov
lahf
test
inc
push
js
fldt
jno
test
ret
push
iret
repz
sub
mov
push
sbb
mov
xchg
lock
mov
loop
cmp
xchg
xchg
ss
mov
pop
iret
mov
movsb
add
or
ja
or
lea
lods
cs
imul
or
icebp
jg
fs
mov
call
jb
cmp
xchg
outsl
or
fldcw
xchg
pop
icebp
cmc
out
sbb
jne
das
iret
mov
or
cmp
mov
stos
adc
insb
sub
subl
xchg
mov
inc
outsb
jge
mov
cs
test
mov
push
nop
cltd
mov
adc
das
pop
xchg
cmc
out
fwait
loopne
sbb
mov
insl
dec
ja
and
xchg
daa
dec
xor
shll
sub
cld
cmp
jne
adc
sub
out
xchg
iret
cmp
sbb
xchg
mov
jns
xchg
mov
jbe
inc
cmpsb
out
cmp
push
add
test
adc
aas
adc
ds
jae
or
pop
filds
jmp
mov
dec
outsb
popa
sbb
cmp
push
push
xchg
hlt
mov
popa
pushf
icebp
mov
or
dec
cmp
sbb
mov
test
aaa
mov
loope
call
and
inc
sbb
out
jb
aaa
mov
cmpsl
out
movb
and
cmpsb
xchg
iret
js
cmp
test
sbb
out
hlt
push
pusha
test
pop
dec
popa
cwtl
pop
leave
popa
ret
lock
sbbl
mov
pop
ret
xchg
test
or
or
mov
lcall
cmp
mov
fidivs
mov
test
ret
add
xor
add
jge
loop
leavew
fwait
inc
fdivl
mov
out
jle
fisttpll
inc
pop
in
ja
push
pop
mov
xchg
stos
cmp
fisubs
mov
cmpl
sbb
pop
or
mov
scas
into
push
xor
daa
xor
repz
dec
sbb
xchg
pop
ds
mov
pop
clc
test
mov
lret
outsl
adc
pop
in
inc
cmp
dec
adc
loop
shll
bound
inc
inc
stc
inc
inc
cmp
inc
enter
xchg
lret
into
push
lret
loope
lret
xchg
jmp
incb
out
movsl
push
loop
dec
iret
cltd
icebp
mov
mov
add
cld
xchg
cmpsl
xor
ret
push
scas
mov
xchg
movsb
aam
roll
ret
sbb
andl
aaa
and
mov
cmp
xor
or
and
cs
mov
test
xchg
mov
cmp
ja
mov
call
sbb
push
icebp
mov
cmpsl
mov
in
cmp
imul
popa
ja
pusha
je
lock
or
xchg
mov
scas
xorl
cs
loope
mov
mov
pop
push
jbe
sahf
cmp
shl
ror
mov
jecxz
gs
ret
fwait
aaa
out
ret
jp
cmc
inc
and
xor
roll
push
or
cmpl
aaa
iret
movsb
daa
cltd
jg
cmpsl
jp
mov
xchg
cmc
push
pop
das
cs
adc
rolb
and
hlt
mov
in
add
jno
js
cmp
add
fsubl
call
adc
arpl
add
push
lods
jg
imul
mov
jp
into
fists
jnp
loop
add
add
mov
mov
inc
and
out
pop
sub
mov
cmp
adc
in
bound
or
or
mov
fwait
cmpl
inc
push
cmp
jecxz
adc
cmp
mov
mov
roll
movsl
aas
add
jno
mov
lcall
scas
mov
mov
shlb
divb
ret
or
push
jp
mov
mov
call
jne
push
addr16
enter
cmc
dec
add
rcl
pushf
ret
cmp
jge
stos
sub
adc
cltd
out
and
sub
mov
mov
push
adcl
into
jno
mov
lcall
dec
clc
test
cmpsl
aas
and
fldt
sbb
push
lock
mov
mov
push
cmc
xor
test
xchg
mov
mov
cmp
and
vhsubpd
mov
jmp
push
cs
xchg
in
adc
std
dec
cs
mov
popf
sbb
push
lret
pop
dec
sbb
out
or
sub
dec
cld
repz
arpl
dec
faddp
es
add
outsb
lret
mov
adc
dec
mov
sbbb
out
repnz
mov
mov
in
clc
adc
fdivrl
pop
mov
xlat
jne
pop
jle
push
add
xlat
in
sbb
dec
add
jbe
ja
in
into
pop
cmp
dec
cmp
and
fsts
sub
adc
xchg
push
in
or
dec
jp
test
in
pusha
jmp
push
mov
lock
cld
or
imull
aaa
sub
dec
sub
mov
loopne
cltd
cltd
mov
out
mov
adc
test
sub
pushf
ret
loop
iret
inc
mov
adc
adc
lods
jmp
in
fimuls
mov
rcrl
xchg
dec
xor
xor
pop
pop
mov
jns
push
int3
xchg
or
test
sti
xchg
movsl
insb
push
js
std
enter
jns
xchg
cld
cmp
rol
or
out
repnz
mov
fmuls
sub
xor
xor
dec
push
mov
testl
adc
fistl
lcall
and
xor
mov
popa
push
iret
idivb
into
repz
jnp
aad
cmpsl
and
ret
mov
aam
dec
outsb
rcrb
test
test
or
push
jl
sbb
and
popf
add
cmp
adcb
arpl
into
mov
mov
roll
movl
lret
xlat
add
cmpsb
pop
pusha
into
inc
int
and
repnz
in
push
add
stc
sub
mull
xchg
pop
push
in
ljmp
mov
sbb
add
ret
stc
push
sti
xchg
sub
sub
xchg
pop
mov
xor
outsb
je
add
cmp
leave
pop
jle
imul
hlt
movsb
mov
lds
rolb
xchg
jns
add
add
movsl
dec
adc
xchg
mov
mov
xchg
jle
jae
movsl
mov
adc
shufps
pop
sub
fucom
mov
sub
fs
je
lds
test
popf
sahf
cmp
push
sub
or
sbb
cli
dec
cld
repnz
loope
sbb
dec
cmp
and
aaa
cmp
int
aam
pusha
or
dec
stos
in
insb
dec
movsb
popf
test
leave
pop
cmp
inc
pop
jnp
or
mov
mov
cmp
repz
mov
rcr
mov
pop
and
xor
dec
aaa
mov
inc
fmul
aaa
cmp
mov
mov
enter
inc
mov
aaa
pop
out
mov
jno
aas
std
push
out
pop
out
xchg
or
into
lahf
outsl
int3
test
add
pop
xchg
andb
pushl
mov
pushf
mov
in
outsl
lret
lea
pop
enter
loop
or
out
cmp
scas
mov
js
dec
and
xchg
push
dec
into
movsb
mov
addr16
rcll
or
fsts
cmpsl
imull
inc
mov
int3
or
xchg
xor
xchg
loop
clc
js
sub
lock
out
sub
mov
jmp
sbb
and
cmp
ljmp
pop
inc
jne
cmp
xlat
xchg
push
pop
xor
fdiv
jns
sbb
cmc
dec
add
aad
sbb
in
sti
testb
dec
mul
loope
in
mov
arpl
std
test
cmp
inc
xor
frstor
out
jns
jns
ret
jae
lahf
ds
adc
dec
sub
ret
dec
loope
jns
sub
cmpsb
gs
lret
and
addps
mov
repz
add
out
imul
jbe
sbb
lods
add
mov
mov
js
daa
js
cmpsb
jle
test
movsb
test
rorl
inc
push
mov
jno
addr16
out
shl
in
and
mov
or
stc
sbbl
je
cmp
push
jnp
repz
push
fldenv
bound
sub
imul
jb
dec
pop
loope
int3
rcrl
imul
arpl
add
loopne
sbb
loope
mov
aam
leave
pop
lret
mov
cli
mov
lds
sbb
outsb
xor
je
mov
push
lcall
inc
ret
jp
push
aam
inc
and
ret
mov
lret
enter
inc
sub
int3
jge
fcom
jns
or
das
mov
jae
push
xchg
ljmp
int3
sbb
sarl
insb
sub
out
and
enter
inc
test
leave
stos
add
pushf
push
jnp
sbb
pusha
jns
imul
les
mov
or
xor
add
and
cmp
inc
xor
jg
jecxz
rcrl
push
adc
scas
daa
adc
cltd
movsb
mov
inc
fwait
outsb
daa
jno
stc
mov
sub
out
aad
pop
add
mov
bound
mov
lcall
xchg
inc
pop
sub
repz
cwtl
add
outsb
mov
xor
mov
dec
or
lock
mov
mov
adc
or
or
inc
dec
scas
out
clc
or
in
outsl
xchg
testb
pop
sbb
imul
dec
mov
stos
xor
cs
and
dec
scas
pop
xor
call
pop
inc
push
pop
bnd
in
divl
movsb
shlb
pop
dec
dec
dec
mov
jg
push
add
call
jo
out
push
js
ret
inc
adc
mov
and
sub
push
imulb
loop
cmp
mov
cli
xchg
lods
mov
js
jbe
aad
mov
jmp
cmp
sti
inc
adc
es
dec
call
dec
inc
test
push
cmc
addr16
ljmp
mov
mov
mov
in
imull
clc
mov
pop
mov
adcl
push
ja
les
xchg
test
push
enter
xor
ret
or
imul
rcr
ss
jae
xchg
pop
hlt
cs
icebp
mov
xor
pop
and
les
add
pop
pop
int3
jnp
cmp
popf
aas
add
jno
mov
lcall
xchg
and
dec
cmp
out
pop
sbb
cmp
xlat
mov
mov
sub
pop
xor
sub
xchg
and
repz
les
fiadds
adc
jg
stc
in
cmp
push
xacquire
mov
gs
and
push
xchg
gs
cmp
mov
and
mov
jmp
push
add
xchg
loop
stos
dec
mov
in
orl
push
iret
repnz
loope
fwait
jae
pop
sub
sub
popa
inc
xor
cmpsb
stc
adc
dec
adc
es
dec
jae
sarl
dec
sbb
ljmp
das
ret
or
push
xchg
inc
push
fwait
adc
nop
data16
cmp
lock
push
dec
imul
ljmp
pop
jge
pop
arpl
repz
inc
xchg
mov
dec
jmp
cmp
imul
add
push
dec
outsl
sarb
notl
jbe
pop
push
mov
push
cmp
sahf
fs
pushl
xor
pushf
add
cli
cltd
cltd
pop
xor
aam
cld
lcall
nop
pop
inc
repz
sub
xor
iret
xchg
test
and
or
lds
hlt
jb
jns
bnd
cmp
pop
and
jno
jecxz
lret
mov
fsubrl
and
push
push
push
mov
push
push
xchg
mov
ret
cmpb
shr
add
into
jns
pop
call
push
test
push
or
adc
loopne
jb
pushf
insb
aas
repz
call
cltd
aam
xchg
inc
xlat
shrl
push
push
xchg
or
loop
xchg
stos
aaa
lcall
push
push
push
les
insb
xor
imul
and
inc
sub
push
push
dec
lods
dec
in
inc
out
xchg
cmp
dec
lods
mov
pop
fucomip
adc
cmpsl
jp
inc
jg
mov
or
jp
mov
arpl
cwtl
loope
sahf
push
mov
jbe
mov
mov
jmp
aas
mov
sbb
int3
mov
or
fmul
xor
je
aaa
mov
out
mov
loopne
mov
call
scas
jbe
xchg
loop
imul
ror
add
mov
mov
cs
mov
ljmp
pushf
xchg
repz
fisttps
pop
stos
nop
push
inc
mov
iret
mov
lcall
lds
adc
inc
mov
inc
xchg
and
jmp
jb
sub
mov
mov
xchg
iret
and
lcall
insl
insb
jmp
add
mov
mov
pop
lds
fidivrl
push
in
xor
in
popf
aaa
dec
and
pop
popl
das
pop
ret
lret
cmp
push
cmpsb
mov
xor
jo
dec
xchg
jecxz
aad
mov
pop
scas
sub
xor
lret
cld
mov
fcmovbe
dec
pop
out
enter
je
fcomps
popf
dec
fisttpll
sbb
cmp
mov
push
incl
or
adc
push
loope
shlb
icebp
inc
mov
xchg
push
sbb
jne
jmp
movb
inc
shlb
call
lcall
test
lods
or
out
add
scas
or
push
adc
mov
js
jecxz
mov
imul
fdivl
daa
jns
popa
jne
repnz
inc
push
ds
subl
cmp
adc
outsb
push
push
icebp
rcrl
sub
int
and
leave
ja
pop
jnp
push
adc
gs
movsb
mov
pop
mull
sbb
out
mov
gs
cmc
stc
movsb
lea
inc
sbb
pop
loope
mov
out
test
fstp
mov
inc
iret
mov
rclb
pushf
shrb
dec
shrb
rcrl
sbb
mov
loope
mov
xchg
rcrb
adc
fsubrl
sub
lods
fmull
add
push
dec
in
flds
stc
adc
movsl
mov
int
push
adc
jg
repz
jnp
aad
test
out
icebp
xchg
mov
mov
out
or
iret
or
pop
ret
inc
lret
or
push
sbb
lods
out
sub
daa
data16
mov
notl
adc
mov
cld
mov
sbb
mov
data16
dec
cmc
loopne
pop
insb
jle
cmp
cwtl
add
adc
hlt
cmp
icebp
and
mov
ret
push
mov
mov
das
and
dec
push
xorl
pop
shlb
in
in
mov
xor
mov
int3
cli
mov
popl
cli
or
xchg
cmpsl
loope
out
adc
pop
or
cwtl
sub
dec
int
or
jle
js
mov
icebp
call
in
cld
or
pop
mov
cmp
cwtl
jb
cmp
and
cs
into
lds
movsl
mov
lcall
push
pop
loopne
cmp
ret
mov
adcb
je
xchg
out
insl
imul
xchg
jp
imul
adc
ja
and
xor
lcall
rcrl
xor
pop
adc
jo
out
lret
movsb
shll
inc
push
xchg
sub
mov
mov
inc
shll
xor
push
mov
xchg
or
xor
adc
popf
mov
sub
out
leave
add
jmp
mov
jl
and
sysexit
jae
fwait
loop
jl
lock
push
es
sub
xor
pop
xchg
mov
lds
cmp
mov
mov
jnp
xor
hlt
mul
inc
aam
add
mov
add
adc
and
out
mov
pop
adc
jb
fiadds
push
mov
or
dec
sbb
jae
mov
popa
ss
jg
pushf
mov
adc
nop
in
mov
inc
pusha
mov
sub
and
or
jbe
dec
add
push
dec
in
flds
test
icebp
dec
hlt
imul
inc
jae
inc
stc
jp
out
insl
out
pop
stos
or
and
mov
jae
cmc
sub
popf
int3
orl
xchg
and
int
enter
dec
jnp
mov
push
and
pop
out
imul
xchg
pop
mov
stos
shrl
add
cltd
daa
sbb
xchg
pop
hlt
add
stos
js
or
mov
std
cltd
dec
xchg
cwtl
movsl
dec
add
fwait
subl
cli
adc
xchg
out
scas
ror
cmp
xchg
out
insl
add
dec
and
sbb
jp
add
cs
fsubl
mov
cli
mov
jge
and
inc
sarl
pop
int3
pop
and
call
xlat
push
inc
fadds
fimull
jns
cmpsl
imul
loopne
mov
aad
jmp
push
pop
mov
xchg
loop
cmp
scas
lret
iret
inc
push
jae
or
mov
stc
into
mov
rcrl
mov
hlt
push
shl
andb
mov
xor
imul
pop
repz
bound
push
insl
lea
std
sbb
lcallw
sbb
shl
fidivs
sub
adc
outsl
sub
cmp
out
sbb
andb
pop
dec
mov
sarb
out
js
mov
sub
into
ud0
in
loop
jno
insb
roll
loope
ret
or
ss
movsb
lahf
int
loop
iret
pushf
xchg
mov
divl
mov
push
mov
xchg
subl
cmp
lds
cmp
push
inc
clc
rcrb
push
ficomps
call
shlb
sahf
dec
push
push
sbb
daa
les
cltd
cltd
imul
push
repnz
mov
clc
push
sbb
outsb
out
jg
enter
sub
add
repz
jnp
xchg
mov
dec
cmp
xchg
mov
hlt
inc
sbb
dec
mov
xchg
adc
mov
and
xchg
outsb
divl
fbstp
and
ja
incl
and
push
popa
loope
and
inc
and
popf
je
movsb
add
cmp
cmpsb
movhps
inc
imul
rorl
and
lock
sub
les
js
leave
xchg
adcb
aaa
lea
sbb
lret
in
add
popf
imul
das
outsb
fsubs
enter
rolb
sbb
add
arpl
lret
int
int
xchg
cmp
loope
shlb
mov
test
xor
xchg
lahf
incl
ja
sbb
loop
cmp
sub
xor
xor
mov
cmp
out
in
dec
inc
imul
enter
dec
imul
mov
sub
rclb
insl
jmp
icebp
out
and
sahf
data16
fwait
test
xchg
lret
popf
mov
rorb
add
loope
mov
das
mov
pop
cs
cmpsb
movsl
scas
add
insl
jle
xchg
loop
lods
rorl
xchg
call
sbb
cmp
ja
mov
cmp
xor
outsl
pop
ds
leave
test
jl
insb
loope
and
ret
sub
mov
xor
push
in
inc
push
mov
sbb
daa
push
adc
xorps
arpl
mov
test
in
xor
ja
jnp
arpl
push
cvtpi2ps
push
test
ljmp
jne
loop
xchg
stos
in
sbb
popa
ds
ds
subb
js
in
loop
shl
mov
inc
dec
push
loopne
ret
aaa
push
or
testl
pop
daa
cmp
pop
pop
pushf
mov
lahf
jno
sub
mov
aaa
xchg
inc
aaa
sbb
pusha
lcall
aam
es
adc
jecxz
lock
fdivrl
pop
adc
stos
iret
popa
sub
js
daa
mov
test
test
sbb
outsb
inc
fsubrp
imul
in
in
add
out
hlt
and
and
xchg
mov
push
ljmp
sti
add
ljmp
aam
setb
dec
js
mov
fs
enter
dec
push
xor
pop
mov
pop
sbb
xchg
mov
fistl
inc
xchg
mov
mov
xor
sarl
sub
les
pop
jl
in
sbb
push
fcmovnb
cmp
divb
push
sbb
pop
sbb
je
mov
jmp
repz
imul
bound
xchg
int
ret
addb
jecxz
pop
ja
add
push
mulb
dec
push
filds
fucomp
out
fwait
lea
cmp
jbe
imul
push
jmp
xchg
stos
shlb
jae
data16
xor
shll
or
dec
pushf
mov
jno
loop
jl
lock
insl
inc
mov
rolb
test
mov
lods
andb
je
mov
and
mov
adc
cltd
sbb
push
push
fdivl
cmp
stos
aad
or
push
cli
mov
addl
adc
cmp
cmp
daa
xlat
jle
add
sbb
push
mov
shll
jb
xchg
cli
stc
shl
jmp
cmc
cmc
int
mov
loope
cs
loop
test
push
repz
sub
hlt
and
out
dec
dec
outsb
stos
bnd
fucomip
hlt
cli
sbb
std
xchg
je
loop
inc
orb
pop
lds
fwait
xchg
mov
sbb
into
mov
test
jl
mov
mov
icebp
ljmp
outsl
push
icebp
mov
cltd
les
test
out
adc
popa
mov
mov
imul
xchg
test
pusha
push
std
dec
in
ds
dec
pop
stos
push
fidivrs
sbb
mov
rclb
sbb
or
sbb
cmp
bound
add
inc
pop
pop
push
shrb
xchg
loop
pop
inc
xchg
push
jge
lods
subb
es
pop
sbb
and
fcoms
insl
jle
xor
ret
mov
push
lcall
inc
jp
es
mov
mov
mov
lock
dec
adc
mov
mov
sub
mov
jle
dec
xchg
cmp
test
flds
sub
adc
inc
cmp
test
imul
xchg
add
or
in
mov
pop
incb
arpl
add
mov
push
lods
push
mov
push
mov
jle
nop
vptestnmd
jo
mov
rcll
inc
in
and
lret
jnp
jg
dec
shll
iret
lret
mov
lret
inc
int3
lods
or
mov
movsl
xchg
mov
pop
aaa
jne
mov
shlb
jg
jae
mov
stos
repz
out
mov
jno
cmp
lods
movsb
cmp
xchg
aas
push
adc
mov
das
inc
sbb
call
sub
xor
popa
addr16
cmpsb
cltd
mov
xchg
dec
jbe
mov
and
cmp
call
imul
fwait
cltd
inc
inc
adc
mov
mov
jle
adc
fucompp
ja
add
mov
popa
jecxz
jge
adc
jmp
call
jecxz
in
std
and
xor
push
int
lods
sbb
cs
push
cmpsl
popaw
xor
xchg
loop
daa
mov
cmp
mov
loope
xor
pop
and
int
sbb
pusha
xor
dec
imul
add
mov
sub
or
dec
dec
adc
fcoml
dec
sbb
leave
mov
arpl
pushf
cmp
pop
push
testl
or
mov
or
xor
inc
pop
lods
pop
dec
cmp
mov
hlt
fisubrl
dec
lcall
mov
push
cmp
dec
add
jge
and
pop
scas
xor
imul
in
jnp
jecxz
mov
jp
pop
mov
or
loop
cli
movsl
dec
je
or
pandn
outsb
sahf
mov
sub
mov
call
into
push
cwtl
push
adc
scas
cmp
mov
cli
and
mov
hlt
adc
inc
fcmovb
icebp
xchg
push
xchg
std
sarb
mov
mov
clc
jmp
cmp
cmp
cmp
fnstsw
adc
fistl
dec
clc
loope
in
test
mov
cwtl
and
popf
jmp
mov
cwtl
loope
push
add
ficomps
fcomps
mov
outsl
pop
loope
mov
xor
jno
enter
mov
cmp
mov
jns
mov
pusha
je
pop
mov
and
add
ss
pop
mov
out
je
push
cmp
cwtl
stc
xor
arpl
xor
push
mov
mov
mov
dec
scas
sahf
lock
fsubrs
scas
sahf
cmp
loope
lock
mov
ret
jno
xchg
sub
mov
mov
push
fimull
icebp
fsubrp
mov
or
xchg
movb
data16
fisubrl
aad
lcall
cmp
ljmp
mov
jne
inc
lea
mov
gs
xor
fnstcw
out
insl
fwait
jle
add
outsb
outsl
push
add
stc
jl
bound
call
inc
outsb
clc
std
ficoms
subl
pop
pusha
push
call
imul
cmp
pop
in
xor
mov
mov
push
cmpsb
fldenv
ret
jno
int3
push
xchg
or
les
cmovbe
sub
hlt
in
dec
mov
push
cli
pop
push
fnsave
aam
out
sbb
push
sbb
jp
lahf
test
dec
push
fwait
xor
inc
push
lret
mov
mull
sbb
cld
pop
leave
dec
lret
fwait
test
cmp
mov
push
icebp
std
and
jae
sbb
adc
sbb
dec
mov
pop
in
push
push
shl
jno
movsl
jmp
cmp
ja
std
jecxz
in
jb
leave
outsl
xchg
or
jge
test
sti
mov
jmp
and
jmp
jp
cmp
jl
mov
push
inc
mov
js
jae
loope
lea
inc
icebp
lret
cmovne
pop
adc
lcall
or
push
cmp
push
sub
mov
xor
movsb
push
jne
nop
adc
mov
jnp
cmp
aaa
lcall
jmp
mov
add
mov
hlt
adc
add
movsl
mov
test
or
stos
adc
xchg
mov
out
or
cmpsl
push
mov
pushf
js
out
inc
sti
mov
mov
gs
outsb
cltd
push
inc
ljmp
test
cli
dec
xor
push
nop
shrl
std
add
out
lcall
mov
xchg
lock
sbb
in
inc
or
mov
lods
test
inc
rcrl
adc
mov
dec
ret
pop
lret
iret
sarl
jmp
cld
dec
add
enter
dec
xor
jle
mov
aaa
xor
xor
or
and
lret
adc
sbb
mov
and
mov
dec
daa
push
sti
or
shrl
and
cmp
mov
lcall
cmp
add
and
mov
cli
push
cmc
xchg
lods
push
shll
iret
or
lret
xchg
ffree
cmp
movsb
aam
add
ljmp
mov
imul
es
inc
loopne
push
mov
mov
dec
loope
mov
int
add
jge
call
xorb
icebp
or
push
fwait
test
xchg
cmp
add
inc
icebp
push
jle
mov
leave
pop
test
mov
test
aaa
negb
pop
mov
dec
and
inc
arpl
sub
jo
iret
arpl
aam
lds
mov
xlat
mov
mov
mov
xlat
test
mov
pop
pop
dec
or
mov
imul
loopne
loope
xchg
xor
js
fisttpll
in
push
sbb
imul
scas
push
or
jb
fwait
std
imulb
or
daa
jns
and
jbe
jmp
aam
adc
test
lock
mov
pop
mov
inc
les
inc
int3
icebp
fisttpl
out
push
cltd
ret
sbb
mov
adc
aam
sbb
cwtl
mov
sub
ss
xchg
mov
pop
pushf
int
xchg
xchg
adc
jp
shll
dec
push
mov
daa
cmp
mov
pop
jg
dec
cld
icebp
iret
outsb
test
jae
jno
pushf
and
xchg
cmp
loopne
aaa
xchg
aas
lods
gs
pusha
rorb
insb
xchg
scas
in
mov
fcmovu
fsubs
jnp
jnp
aaa
out
mov
and
sub
cli
mov
pop
dec
and
call
push
aas
sub
sbb
and
negl
push
int3
pop
scas
clc
nop
imul
xor
add
pushf
ficompl
pusha
lea
stc
rclb
andl
das
and
sbb
imul
sbb
rcrl
rol
cmp
inc
xchg
jl
mov
jno
xchg
andb
adc
inc
fildl
mov
push
mov
imul
jge
and
fwait
mov
bound
fs
lock
enter
lds
or
loop
or
sarl
sbb
lods
popf
dec
in
ret
mov
jle
stos
adc
xor
mov
add
sarb
add
mov
mov
scas
pop
cmp
push
xchg
aas
add
jg
int3
repz
mov
pushf
aam
stos
movsb
mov
lock
mov
andb
xor
jle
sarb
cmp
mov
jmp
in
xchg
xlat
mov
cltd
pop
icebp
add
sub
cltd
push
add
dec
sub
in
and
jns
stos
pop
iret
enter
xchg
shr
mov
jp
adc
and
fistps
cmp
aaa
xchg
xchg
xorb
into
cwtl
mov
sbb
pusha
fs
adc
push
add
out
cs
ret
or
and
and
mov
pop
sbb
cmp
das
push
mov
xlat
lods
out
lods
nop
das
sbb
icebp
or
pop
insb
ds
or
daa
cmp
xor
and
jae
xor
mov
jne
aam
idivl
cmp
lret
or
dec
pusha
scas
mov
lret
scas
mov
insl
mov
test
push
ljmp
jl
lea
cli
sbb
ljmp
and
cmp
cmc
dec
jmp
pop
dec
lods
sti
dec
mov
mov
push
xchg
rorb
xor
mov
fwait
in
add
ret
je
push
daa
xchg
cli
rcrl
mov
test
jp
inc
adc
dec
dec
mov
mov
xchg
cli
push
dec
or
and
jbe
xchg
adc
inc
lock
out
jg
lock
ficomps
out
cmp
imul
call
xor
and
mov
lcall
imull
or
pushw
in
fcomp
jo
dec
aas
jl
jae
fcomps
mov
lahf
jmp
xor
loop
mov
pop
sbb
mov
sbb
jecxz
or
repz
xor
lret
push
or
sub
std
or
add
movb
out
push
mov
sub
push
push
adc
xor
jno
call
pop
sbb
je
out
inc
popf
std
rorl
lret
mov
fwait
mov
jmp
mov
jbe
adc
aas
mov
mov
xor
dec
push
scas
or
mov
sbb
ds
popf
sti
cmc
fwait
jge
jl
dec
dec
cmc
jmp
mov
xor
cmpsb
cmpsb
ljmp
nop
xchg
inc
xchg
xchg
iret
iret
orb
dec
jecxz
lea
stos
fstpt
xchg
out
jle
in
cwtl
xor
jmp
bound
fisttpl
mov
dec
les
push
lock
std
add
mov
repz
mov
je
popa
shrb
test
dec
mov
movsl
or
stos
icebp
jp
rclb
push
sbb
enter
mov
xor
mov
pop
clc
pushf
or
xor
cmpsb
shrl
clc
rcl
test
clc
pushf
insl
and
ds
pop
data16
hlt
mov
xor
repz
inc
xchg
sti
pop
repnz
sbb
stc
push
adc
notb
sub
negb
sbb
shrl
sbb
jns
add
gs
inc
xchg
leave
mov
mov
das
punpckhdq
jbe
and
popa
mov
sub
gs
lret
scas
mov
jae
xor
or
stc
lret
scas
popf
insl
lcall
dec
adc
xchg
imul
xor
insb
mov
int3
cli
mov
and
xor
push
dec
in
fnstcw
leave
sbb
lds
hlt
out
cwtl
sbb
lds
loopne
sbbl
cmc
rcrl
in
push
push
adc
xor
push
movsb
push
popf
push
jl
mov
cmc
xlat
cltd
jmp
je
mov
push
aad
sub
imul
cs
aas
sub
sub
movsb
aam
fisubs
sub
rcrl
jl
test
jno
dec
inc
push
inc
shrl
mov
mov
jmp
cmp
into
jecxz
sbb
push
jecxz
decl
sarl
or
fiaddl
das
das
dec
sub
jnp
cmp
pop
xor
push
cmpsb
mov
cltd
and
fs
jb
in
lcall
imul
pop
mov
or
data16
sbb
andb
adc
out
fidivs
insb
jecxz
hlt
arpl
loop
push
cmc
cmp
mov
outsb
ds
pushf
jecxz
jg
lcall
test
iret
imul
rcll
mov
lds
push
cli
dec
mov
fs
jb
or
sti
jno
inc
sahf
imul
outsb
cld
jmp
clc
ficomps
lret
adc
pop
inc
jecxz
shlb
shrl
push
and
scas
push
inc
jge
ljmp
jge
xor
jg
test
cwtl
jp
jb
pop
sbb
rcrb
popf
test
test
mov
pop
hlt
jno
add
xor
ss
push
nop
rcll
popa
movsb
leave
push
in
popf
mov
and
stos
xchg
jp
xchg
daa
and
dec
or
cmp
xchg
mov
pushf
pop
ds
mov
mov
pop
frstor
xchg
js
into
lret
xchg
xchg
pushf
fs
xor
inc
cmp
iret
xor
stc
cltd
or
adc
shlb
in
clc
ljmp
mov
inc
mov
icebp
in
mov
sub
sub
clc
or
jno
outsl
lahf
ss
icebp
jno
rcll
es
jb
in
push
sti
or
rcll
pop
adc
cmpsl
gs
in
xor
notl
mov
mov
push
jl
xor
add
icebp
jno
push
int
mov
sbb
mov
mov
cmp
out
mov
sub
add
push
sbb
test
sti
push
jnp
mov
lret
mov
rclb
cmc
cmc
adcl
mov
adc
and
push
repz
movsb
or
lods
sub
sbb
outsb
jg
outsl
stc
mov
ret
in
mov
test
ja
in
push
push
sbb
lock
nop
dec
mov
mov
fstpl
and
pop
adc
jb
stos
lods
add
inc
mov
ret
fcomip
pop
es
push
cltd
loope
sbbb
or
test
fistpl
leave
pop
fistpl
in
pop
aad
shl
fwait
imul
lcall
outsb
arpl
out
lds
aas
out
push
out
out
enter
movsl
and
inc
dec
call
out
sbb
in
jbe
mov
popf
fistps
je
xchg
lcall
push
pop
mov
cmpsl
xchg
lcall
subl
xchg
loop
in
mov
aaa
insl
aaa
jbe
jecxz
or
gs
nop
scas
in
or
or
mov
inc
hlt
sbb
mov
xchg
jo
cmpsl
or
lock
sub
aas
mov
arpl
adc
nop
xchg
push
add
and
mov
stos
and
xorb
mov
aam
pop
pop
pop
sub
mov
or
adc
jl
pop
stos
in
mov
js
push
loope
xlat
rcll
sub
lea
sbb
xchg
test
dec
in
cmp
jecxz
pop
cmp
fldt
push
daa
leave
xchg
push
scas
int
push
or
jbe
mov
dec
pop
lea
loopne
imul
roll
aad
adc
mov
arpl
lret
outsl
repnz
shl
or
mov
jae
xchg
pop
pop
icebp
js
dec
in
inc
imul
and
testl
sub
mov
pop
sbb
xchg
loop
mov
sahf
out
ret
popa
sbb
sbb
inc
or
loop
add
or
xlat
fdivs
jae
enter
add
mov
inc
dec
shlb
jp
xchg
inc
pushl
mov
mov
sbb
jbe
mov
in
ret
arpl
nop
scas
orl
nop
scas
addl
cltd
loop
or
xlat
flds
inc
dec
cltd
loop
or
movsl
testl
push
mov
sub
pop
jcxz
pop
cmp
jecxz
or
push
adc
mov
jae
lods
lods
testb
sahf
xor
mov
pop
aad
lea
ret
cmp
test
lods
shr
mov
leave
sub
sub
add
les
adc
rolb
mov
mov
mov
add
xchg
sub
loop
or
lret
jle
xchg
loop
or
lret
xchg
loop
aam
dec
jl
mov
out
mov
fcompl
sbb
or
inc
filds
inc
rol
or
jmp
or
fisttpll
testb
push
ret
or
loope
or
imul
cltd
loopne
or
jbe
mov
ret
aad
or
sbb
fs
sbb
ret
lret
lock
push
inc
mov
addr16
pop
dec
ret
fstpt
ret
add
shrb
sub
cltd
loopne
or
xor
cmpl
mov
dec
mov
jmp
pop
int3
sarl
sbb
xchg
loop
sub
mov
testl
jmp
mov
enter
ret
int
xlat
ret
rclb
popf
int3
lock
adc
loop
or
sub
lods
sbb
cmpsl
jmp
jmp
ret
test
inc
cmp
cmp
js
push
fwait
cld
jl
adc
or
mov
testl
call
pop
repnz
ret
div
popf
push
aaa
jmp
movsl
in
iret
xor
cltd
dec
sub
mov
repnz
jecxz
or
jo
or
xor
push
ret
fistpll
ret
add
sub
cltd
aam
or
adc
or
loop
popa
stos
loop
or
das
dec
add
cli
hlt
outsb
cmpsb
shl
pop
dec
arpl
add
outsl
orb
loop
or
lret
xchg
loop
aam
dec
jl
mov
out
or
xchg
arpl
sbb
lret
xchg
loop
xchg
ror
icebp
shl
inc
fs
sbb
jmp
ss
push
ret
and
loop
or
scas
sti
xlat
pop
loopne
mov
dec
out
fimuls
les
or
fs
push
ret
or
jle
or
loope
or
imul
cltd
ffreep
or
cmp
push
inc
in
ret
aad
or
popa
fisubs
les
or
loop
or
and
mov
inc
cltd
mov
or
or
ljmp
popa
fisubrs
les
or
lret
xchg
loop
rcrb
jl
mov
out
mov
fcomps
jns
lcall
push
adc
sbb
andb
xor
mov
add
negl
inc
sub
lcall
cli
or
fwait
cld
ljmp
sub
test
ja
xchg
loop
pop
sbb
aad
or
push
ret
fdivrs
ret
add
sub
cltd
fld
or
ret
fldcw
mov
cmpsb
mov
xor
sbb
shlb
loop
or
pop
jl
xchg
outsl
test
cmp
outsl
or
xchg
loop
or
lret
xchg
loop
pop
inc
jl
mov
out
lret
or
pusha
pop
loop
dec
xchg
jmp
roll
cltd
pxor
dec
lcall
xor
andb
ret
dec
mov
adc
mov
mov
add
aad
or
lret
icebp
or
mov
or
or
mov
out
lret
xchg
loop
xlat
pop
inc
jl
mov
out
int3
or
int
test
sarl
loop
mov
inc
outsb
repz
aad
mov
lret
xchg
loop
rcrb
jl
mov
out
lret
loop
ficompl
out
inc
or
or
inc
in
or
into
inc
cld
rolb
jecxz
adc
or
mov
testl
out
mov
cmpl
add
or
mov
push
cwtl
cltd
loope
mov
mov
mov
sbb
xchg
loop
xchg
jno
jmp
jnp
sub
cmp
into
push
mov
or
lret
xchg
loop
pop
inc
jl
mov
out
mov
ficomps
addr16
jge
and
mov
ret
aad
mov
inc
xor
ljmp
sbb
xchg
loop
mov
push
jae
adc
lock
icebp
or
mov
xor
push
adc
inc
xor
les
xchg
loop
mov
imul
stos
xchg
loop
jl
sbb
ret
mov
testl
in
mov
cmpsb
in
inc
pop
sbbl
push
push
ret
or
fnstcw
cli
lds
jmp
imul
stos
push
in
jmp
push
jge
push
ret
fnstsw
ret
add
sub
cltd
push
ret
or
mov
pop
xchg
gs
xchg
sbb
or
mov
testl
jmp
ret
or
lods
ja
push
js
sbbb
inc
push
ret
in
arpl
cli
inc
popf
or
lret
xchg
loop
rcrl
jl
mov
out
mov
fistpl
scas
je
mov
arpl
loop
or
in
mov
sahf
add
fcoml
cmp
xor
cli
imul
xchg
adc
or
mov
testl
call
inc
jnp
jg
fucomip
les
or
loop
or
adc
popa
xchg
out
inc
inc
push
in
arpl
ret
ret
jecxz
popa
cwtl
loop
or
and
push
sbb
xlat
push
xchg
loop
or
sbb
es
std
xlat
mov
aad
or
popa
les
xchg
loop
dec
push
jmp
ret
or
loop
cs
cmc
ret
lret
or
mov
rcrb
jb
cmp
mov
jecxz
inc
sbb
xchg
loop
bnd
push
mov
push
jmp
xchg
ret
or
outsl
jns
imul
xor
inc
movsl
rorb
outsb
rol
inc
xchg
push
fwait
cld
mov
popa
sbb
xchg
mov
loope
sbbl
cld
arpl
inc
outsb
mov
push
ret
aam
loope
or
imul
cltd
fld
or
mov
jb
mov
pop
in
mov
mov
mov
adc
repnz
imul
or
sbb
mov
cwtl
es
xchg
loop
mov
stos
icebp
mov
adc
and
xor
aad
rcl
outsl
add
icebp
ret
jp
add
inc
dec
cli
cmp
or
and
ret
lret
cli
or
mov
sar
lahf
add
aad
or
mov
inc
push
aad
add
aaa
push
jns
cli
or
outsb
stc
or
loop
or
arpl
push
leave
lahf
mov
mov
inc
std
push
push
testl
xchg
loop
or
mov
dec
sbbb
ljmp
loop
outsb
mov
cmp
movsl
out
mov
repnz
scas
inc
lock
outsl
jbe
je
repnz
imul
aas
push
sbb
stc
mov
and
adc
call
push
push
mov
sbb
inc
icebp
dec
stc
jge
push
dec
dec
add
rcrl
roll
xor
test
pushf
bound
jp
cs
jmp
scas
ret
in
mov
rcrl
mov
jl
jmp
cli
sub
mov
jl
stc
and
icebp
add
inc
push
push
in
mov
xor
sub
or
dec
in
inc
jp
fwait
scas
fidivrl
fimull
adc
add
dec
in
mov
cmp
inc
outsb
inc
sub
adc
in
pop
push
sub
in
adc
pop
dec
mov
daa
sub
or
inc
icebp
dec
les
icebp
dec
in
out
cmp
mov
sub
loop
jne
aas
es
call
test
iret
mov
aam
in
inc
push
sub
or
in
inc
icebp
cmp
dec
mov
mov
in
xor
js
sub
inc
icebp
loopne
xchg
and
std
mov
pop
xor
in
ja
mov
out
leave
xlat
lcall
jmp
fdivrs
mov
jge
inc
pop
in
inc
loopne
loopne
icebp
dec
insb
aam
cli
inc
sbb
mov
hlt
in
xchg
mov
xchg
call
inc
inc
push
dec
outsl
cmpsb
sti
cmp
sti
add
jp
add
gs
cmp
clc
add
pop
stc
push
inc
sti
in
lods
cmpsb
inc
out
outsb
das
aad
not
dec
jb
sti
clc
xchg
sarl
ja
cmc
inc
xchg
push
jmp
inc
icebp
ljmp
lock
push
icebp
sar
xchg
or
dec
jno
adc
outsl
imul
mov
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
hlt
in
inc
outsl
inc
hlt
inc
rcr
sbb
mov
xor
adc
adc
jl
mov
adcb
popl
xchg
push
das
testb
lret
jne
pop
hlt
shll
or
or
aam
hlt
sbb
inc
hlt
in
cmpsb
loop
jge
leave
adc
dec
hlt
in
add
lods
xchg
loope
out
push
cltd
shll
inc
hlt
in
mov
inc
out
sub
push
iret
inc
hlt
in
fistpl
out
mov
shld
out
push
ds
cmp
pop
fsubs
in
jle
out
mov
adc
hlt
or
sbb
pop
push
in
inc
mov
hlt
into
inc
and
cmp
sub
cmp
shll
push
cltd
in
mov
hlt
rcrl
hlt
in
data16
insl
push
int
popf
fiaddl
jo
inc
hlt
in
inc
out
mov
hlt
in
cvtps2pd
adc
jmp
sbb
jmp
inc
hlt
in
notl
pop
push
out
xor
push
ffree
xlat
mov
adc
imul
fnstcw
int3
mov
hlt
in
or
inc
pop
or
jmp
sbb
jmp
inc
hlt
in
hlt
push
add
pop
jecxz
fcomps
push
es
setge
std
hlt
pop
sti
inc
hlt
in
cmpsb
mov
adc
dec
hlt
in
pop
in
push
xchg
leave
push
push
jno
mov
hlt
outsl
cld
sti
test
lock
hlt
and
cmp
iret
aam
in
inc
shl
arpl
out
mov
adc
hlt
or
xchg
in
inc
aad
hlt
test
es
hlt
in
jg
in
inc
loope
jo
cli
adc
cmp
jnp
inc
xchg
xchg
lea
fmul
jne
pop
mul
mov
imul
cmp
push
cld
hlt
pop
sti
inc
hlt
in
cmpsb
mov
adc
dec
hlt
in
pop
in
xchg
sbb
jnp
mov
jb
sbb
mov
imul
inc
hlt
jl
inc
hlt
in
fabs
jae
pop
or
jnp
xor
dec
fdivs
add
loope
pop
outsb
scas
cmp
xor
insb
add
hlt
loope
mov
popf
fcmovb
sar
mov
jbe
in
fs
hlt
xor
out
mov
stos
mov
insl
inc
leave
int3
mov
hlt
in
add
pop
arpl
jmp
sbb
jmp
inc
hlt
in
or
mov
cmc
push
ljmp
clc
cmc
imul
cli
mov
sub
je
mov
dec
jb
adc
subl
cmp
push
push
hlt
push
or
pop
cmp
pop
enter
pop
icebp
push
test
mov
sub
or
mov
hlt
add
test
push
pop
cmp
jno
cmp
add
cwtl
test
jp
loope
mov
cmp
jge
into
int3
mov
hlt
in
add
pop
imul
push
sbb
jmp
inc
hlt
in
or
test
and
icebp
mov
xor
inc
hlt
add
test
push
ja
sbb
cmp
add
inc
hlt
push
cltd
test
lret
cwtl
fwait
rorb
fiaddl
adc
inc
hlt
in
cmpsb
mov
adc
dec
hlt
in
add
out
jge
sti
out
test
sbb
or
push
ljmp
outsl
hlt
fsubs
sbb
mov
hlt
aam
gs
inc
inc
mov
mov
push
test
hlt
icebp
decl
cmp
mov
hlt
add
test
jno
cmp
push
mov
hlt
and
test
cld
repnz
test
pop
pop
hlt
in
jg
out
mov
sub
pop
leave
push
jae
shl
cmpl
inc
hlt
or
sbb
pop
push
in
inc
mov
hlt
mov
push
testb
imul
lret
pop
hlt
shll
fbld
push
rcr
mul
mov
in
orb
dec
fists
sbb
hlt
in
movsb
inc
hlt
in
push
lret
cltd
vpmacsdd
cmp
add
inc
lea
cmp
pop
sbb
repz
pop
hlt
in
sti
mov
or
rol
arpl
aam
jb
je
mov
hlt
dec
rclb
idiv
hlt
icebp
decl
mov
xchg
push
bound
cmp
iret
and
dec
fdiv
dec
or
shl
arpl
out
mov
adc
hlt
or
xchg
in
inc
aad
hlt
aad
bound
inc
leave
int3
mov
hlt
in
add
pop
arpl
jmp
sbb
jmp
inc
hlt
in
or
lahf
out
sbb
xchg
icebp
push
test
enter
pop
lea
cmp
mov
inc
out
mov
hlt
in
cvtps2pd
adc
jmp
sbb
jmp
inc
hlt
in
notl
in
xor
adc
sbb
inc
hlt
in
cmpsb
jecxz
jle
rcll
cmpsl
fsts
cmpsl
dec
hlt
in
sbb
lods
js
jl
nop
mov
out
mov
hlt
add
test
jno
cmp
or
test
inc
xchg
fwait
stos
mov
or
pop
push
fdivl
mov
insl
out
mov
hlt
add
test
push
ja
sbb
cmp
test
ss
loop
jl
lds
jge
inc
hlt
in
or
cmp
push
sbb
jmp
inc
hlt
in
cmc
push
cwtl
pop
sub
add
pop
mov
cmp
shlb
sbb
inc
lock
xchg
in
push
cltd
das
rolb
xor
inc
hlt
add
test
push
outsl
cmp
jno
cmp
fnsave
test
stos
and
lret
inc
hlt
in
mov
jns
shll
nop
loop
rcr
adc
inc
mov
aam
es
hlt
in
data16
adc
test
mov
jg
in
inc
mov
adc
js
ret
or
or
mov
and
daa
and
cmp
jp
jle
cmpsl
fstp
adc
inc
hlt
in
cmpsb
out
sbb
fsts
cmpsl
dec
hlt
in
sbb
lods
or
push
stc
sbb
mov
mov
inc
hlt
in
out
ja
jp
pop
inc
pop
test
in
push
inc
pop
gs
inc
inc
mov
in
inc
cmp
lcall
sbb
fnstsw
sub
mov
push
push
jbe
mov
hlt
rorl
hlt
in
fsubl
cli
push
hlt
in
leave
repnz
pop
cli
dec
mov
in
cmovs
loopne
fisubl
jl
inc
cmp
pop
and
pop
xlat
loope
std
hlt
sbb
inc
hlt
in
cmpsb
jecxz
jle
rcll
cmpsl
fsts
cmpsl
dec
hlt
in
sbb
lods
nop
das
or
push
dec
cmp
pop
std
hlt
sbb
inc
hlt
in
cmpsb
loope
sbb
adc
dec
hlt
in
sbb
lods
jbe
popa
mov
adc
or
cmp
pop
ds
hlt
inc
sti
inc
hlt
in
cmpsb
out
sbb
fsts
cmpsl
dec
hlt
in
sbb
lods
push
inc
das
push
jle
in
inc
xchg
dec
xchg
jns
fst
stos
shll
inc
cmp
push
loope
pop
xlat
idivl
int3
shl
xchg
jle
out
mov
adc
hlt
add
xchg
in
inc
fistpl
hlt
dec
icebp
imul
les
or
push
mov
xchg
repz
xchg
js
mov
push
sbb
dec
in
pop
je
int3
addr16
movsb
shr
xor
orl
xchg
js
repz
movsl
fmuls
lock
mov
rcll
sub
daa
insl
cmp
pop
xchg
or
std
and
dec
jmp
dec
loop
call
out
mov
scas
mov
xchg
out
jbe
pop
xchg
pop
fcomps
in
test
inc
mov
mov
sbb
and
out
fs
shl
shll
sbb
iret
sub
repz
push
test
add
jns
popa
test
cli
shrl
xchg
or
mov
in
pop
xchg
in
in
pop
xchg
js
nop
pop
in
icebp
inc
jo
mov
pop
mov
cs
push
mov
adc
mov
test
lea
or
push
inc
or
pusha
cmp
loop
xor
mov
adc
or
loopne
cmpsl
pop
data16
pop
xchg
js
xchg
clc
lahf
test
pop
xchg
js
mov
mov
iret
jg
sbb
out
cmp
jbe
inc
fidivl
js
push
add
add
xchg
cs
push
test
adc
mov
pop
jl
cs
cmc
aaa
pop
xchg
jne
insl
cmp
add
insl
xchg
js
jp
repz
fisubrs
sbb
pusha
jne
js
scas
push
add
pop
xchg
js
cmp
xlat
jecxz
push
icebp
fstpt
icebp
pop
xchg
js
cltd
dec
aaa
icebp
push
cmp
sbb
cwtd
push
dec
or
cmpsb
js
pop
in
imul
xchg
in
dec
leave
and
mov
daa
imul
cmp
pop
xchg
in
mov
xchg
and
pop
xchg
js
insl
cmp
pop
xchg
mov
mov
jbe
pop
xchg
pop
xlat
sbb
roll
mov
mov
mov
sbb
in
in
xchg
js
pop
jmp
js
adc
subb
andl
outsl
xchg
js
jbe
pop
cmp
sbb
mov
lahf
bound
dec
lcall
ficoml
push
pusha
gs
cs
jbe
mov
scas
mov
mov
jbe
pop
xchg
pop
aad
pop
in
mov
mov
pop
in
pop
xchg
mov
pop
add
push
inc
in
roll
test
add
jno
xchg
cmpsl
push
lods
adc
sbbl
pop
xchg
movsl
aam
pop
test
mov
js
nop
pop
mov
xchg
out
jbe
pop
xchg
pop
fcomps
in
test
inc
mov
mov
sbb
insb
fsubrl
xchg
adc
adc
js
jp
ljmp
add
jo
bound
add
adc
mov
inc
xchg
loope
insb
fisubrs
jbe
hlt
pop
xchg
js
loope
rclb
xchg
js
jp
fwait
mov
xchg
jbe
test
mov
mov
jbe
pop
xchg
pop
aam
pop
in
leave
inc
mov
arpl
pop
xchg
mov
sbb
in
pop
jmp
adc
pop
xchg
js
xchg
clc
lahf
test
pop
xchg
js
mov
shrb
cmpsb
repnz
imul
js
pop
xchg
mov
pushf
mov
add
pop
xchg
js
add
adc
push
or
ret
dec
lock
insb
movsl
xchg
cwtl
jbe
lea
cmp
fildl
js
insl
cmp
pop
xchg
mov
xchg
out
jbe
pop
xchg
pop
fcomps
in
test
inc
mov
mov
sbb
dec
test
inc
push
push
pusha
es
or
mov
pop
in
popa
in
pop
xchg
mov
sahf
xorl
int3
out
sub
in
pop
xchg
test
jnp
test
insl
adc
pop
xchg
sahf
fldt
sysret
pop
xchg
js
inc
xchg
shrb
ss
cltd
aad
jno
rolb
ja
pop
mov
cs
push
mov
adc
data16
pop
jns
cmp
pop
mov
mov
pop
sub
iret
add
shlb
fwait
mov
sub
mov
js
xchg
and
mov
cld
nop
pop
imul
dec
imul
pop
lcall
adc
or
loopne
cmpsl
pop
inc
adc
pop
xchg
js
xchg
clc
sahf
test
pop
xchg
js
mov
pop
dec
inc
adc
test
and
decb
loope
pop
fisubrs
jno
ret
ja
pop
mov
cs
push
cld
shll
mov
popfw
js
pop
jnp
cs
and
orl
js
jecxz
xchg
repz
mov
xchg
out
jbe
pop
xchg
pop
fcomps
in
test
inc
mov
mov
sbb
popa
shll
inc
lods
mov
cld
out
ficomps
pusha
das
mov
mov
jbe
pop
xchg
pop
aad
pop
in
mov
mov
pop
in
pop
xchg
mov
or
repz
xchg
lock
xchg
js
popf
add
lret
shl
outsb
mov
xchg
addl
and
sbb
push
in
xchg
js
jne
test
cmpsl
fisttpl
out
cmp
adc
push
in
adc
mov
push
iret
push
pusha
cmp
mov
scas
dec
inc
sub
inc
jmp
xchg
test
fists
xor
loope
jmp
add
or
xchg
adc
mov
or
ljmp
cs
pushf
out
dec
xchg
shlb
insl
divl
addr16
or
fisubrs
add
cmp
mov
cltd
cs
push
pushf
shll
mov
data16
cmpsl
movsb
lret
jle
dec
scas
mov
mov
pop
mov
cs
push
movsb
shll
mov
data16
mov
xchg
ret
pop
test
into
dec
push
pusha
psllw
fisubrs
inc
adc
pop
xchg
js
xchg
clc
sahf
test
pop
xchg
js
mov
and
movsb
xchg
lock
pop
xchg
js
pop
and
xchg
jbe
push
add
js
pop
aas
aad
les
jnp
add
out
out
addr16
pusha
jo
faddl
mov
lahf
cs
push
lods
shll
mov
data16
pop
push
movsl
cs
jbe
outsb
xchg
js
mov
cltd
mov
push
add
call
rclb
js
add
cwtl
cs
push
movsb
shll
mov
popfw
js
pop
js
cmpsl
and
mov
test
js
add
sbb
lahf
fimull
fcoml
push
pusha
or
subb
test
cwtl
or
mov
repz
dec
fisubrs
pop
jb
mov
mov
lock
fisubrs
pop
inc
push
pusha
or
js
lods
push
add
add
lahf
cs
push
lods
shll
mov
mov
pop
push
movsl
cs
ficoml
pop
xchg
push
in
pop
xchg
repz
xchg
js
fcompl
cwtl
ret
js
pop
xchg
fwait
mov
sub
lcall
in
fs
pop
xchg
stc
xchg
inc
sub
clc
pop
sahf
sbb
in
dec
test
or
mov
in
pop
xchg
inc
mov
xchg
pop
mov
mov
jbe
pop
xchg
pop
sbb
flds
hlt
mov
mov
mov
sbb
fcomps
cwtl
pop
decl
loope
js
pop
in
arpl
pop
xchg
lea
push
aaa
popf
pop
shlb
push
adc
out
mov
scas
gs
xchg
js
insl
push
jb
pop
xchg
cwtl
lods
lret
mov
sub
mov
lea
mov
and
xchg
js
mov
icebp
icebp
cmp
pop
call
out
pop
xchg
js
pushf
clc
xchg
test
jb
cmpsl
pop
xchg
js
xchg
clc
lret
nop
jp
ret
dec
bound
add
js
in
outsl
xor
cmpsl
jbe
jnp
pop
fisttpl
out
cmp
adc
pop
add
mov
jbe
pop
xchg
pop
aad
pop
in
mov
mov
in
pop
xchg
mov
or
rcll
js
scas
push
add
adcb
in
cmp
fninit
adcl
push
icebp
pop
xchg
js
movsl
dec
aaa
dec
call
push
in
push
sbb
outsb
in
pop
xchg
in
mov
xchg
jmp
mov
in
leave
push
pusha
xchg
js
pop
sti
lock
pop
xchg
js
adcl
aaa
jae
icebp
fstpt
icebp
push
xchg
js
cmpsl
dec
aaa
sbb
fiaddl
mov
js
pusha
in
push
mov
aas
add
pop
cmpsl
les
mov
lods
adcb
in
cmp
jecxz
push
icebp
fstpt
icebp
push
xchg
js
movsb
dec
aaa
aaa
test
push
and
xchg
js
pop
cs
mov
out
xlat
sarb
inc
or
xchg
js
pop
jbe
inc
inc
or
lea
inc
in
adc
xchg
das
arpl
and
cmovl
add
jl
out
inc
fdivr
in
pop
xchg
mov
and
push
divb
sbbb
jns
out
cwtl
xchg
xor
outsb
scas
incb
nop
popa
xchg
fisubl
stc
outsl
in
fyl2xp1
dec
fsin
ja
adc
xor
nop
gs
inc
sbb
adc
pop
xchg
js
pushf
clc
xchg
test
jb
cmpsl
pop
xchg
js
xchg
clc
jns
adcl
aaa
fninit
adcl
push
icebp
push
xchg
js
movsl
dec
aaa
and
outsb
in
pop
xchg
insl
js
lods
push
add
repnz
fldt
fisubrs
mov
out
pop
xchg
js
lock
push
push
pusha
push
mov
mov
jbe
pop
xchg
pop
xlat
sbb
roll
mov
mov
mov
sbb
add
add
aas
addr16
faddl
mov
lahf
cs
push
lods
shll
mov
mov
movsl
sbb
rep
xor
jne
out
jbe
adcl
aaa
aad
push
push
icebp
fstpt
icebp
push
xchg
js
fwait
data16
pop
sahf
adc
dec
jne
or
pop
movl
les
pop
xchg
js
cmp
fsub
dec
push
icebp
fstpt
icebp
pop
xchg
js
cwtl
dec
aaa
mov
mov
in
and
adc
push
add
add
sahf
cs
push
mov
adc
mov
test
leave
inc
sub
mov
leave
sub
int
lea
push
in
pop
xchg
push
in
pop
jo
ret
add
xchg
cs
push
test
adc
data16
pop
jl
cs
test
mov
or
js
push
iret
popa
jno
pop
mov
xchg
and
ljmp
in
pop
sbbb
mov
int
push
lcall
xchg
js
sarl
dec
in
mov
xchg
jbe
aad
imul
js
insl
adc
pop
xchg
popf
jge
xchg
movsl
and
cmp
aad
push
push
icebp
fstpt
icebp
push
xchg
js
fwait
data16
mov
fldenv
and
pusha
roll
js
add
cwtl
cs
push
movsb
shll
mov
data16
js
pop
js
ja,pn
sahf
mov
sub
push
repz
cwtl
lea
lds
add
or
jg
dec
nopl
xchg
jbe
or
js
pop
xchg
hlt
out
pop
xchg
js
pushf
pop
insl
subb
jne
adc
push
add
xchg
out
jbe
pop
xchg
pop
fcomps
in
test
inc
mov
mov
sbb
pop
js
jne
hlt
mov
add
bnd
mov
pop
mov
cs
push
pushf
shll
mov
data16
pop
ja
cs
stos
filds
adc
push
sbb
insb
cmpsl
pop
dec
adc
pop
xchg
js
nop
clc
cltd
test
pop
xchg
js
mov
imul
pushf
out
js,pt
or
inc
push
sub
je
out
ja
ror
popa
je
jecxz
cmc
rcll
mov
pop
lods
cmp
dec
xchg
js
mov
sub
nop
or
cmp
fiaddl
cmp
push
add
pop
or
push
loope
push
push
mov
fisubrs
cmpsb
dec
push
pusha
lcall
repnz
jle
loopne
cmpsl
pop
dec
adc
pop
xchg
js
nop
clc
cltd
test
pop
xchg
js
mov
xchg
dec
fisubrs
xchg
mov
xchg
out
jbe
pop
xchg
pop
fistpl
gs
mov
inc
mov
scas
ret
sbb
fst
xchg
or
cmp
aam
aas
shlb
push
adcb
out
xchg
out
pop
xchg
or
push
clc
out
stos
jge
fiadds
xchg
clc
push
cld
lret
xchg
out
ja
pop
xchg
cltd
mov
cmp
inc
add
mov
js
mov
add
in
push
push
pusha
cld
ja
loope
mov
out
pop
add
push
std
sub
jo
pop
pop
add
ret
loopne
mov
adc
mov
xchg
out
jbe
pop
xchg
pop
fistpl
gs
mov
inc
mov
scas
ret
sbb
xor
cmp
inc
mov
xchg
out
jbe
pop
xchg
pop
ficompl
fs
mov
inc
mov
mov
sbb
xor
jmp
add
pop
mov
dec
lret
into
repnz
scas
adc
cmp
mov
dec
push
pusha
push
mov
insl
cmp
mov
outsb
in
pop
xchg
in
js
nop
and
xchg
out
jbe
pop
xchg
pop
ficompl
fs
mov
inc
mov
mov
sbb
mov
pop
rcll
mov
and
jecxz
adc
or
mov
cmp
icebp
repz
xchg
js
mov
jae
pusha
jne
in
pop
xchg
js
in
xchg
js
pop
xchg
out
repz
xchg
js
mov
xor
in
pop
xchg
pop
fistpl
gs
mov
inc
mov
scas
ret
sbb
and
xchg
cmp
dec
fisubrs
xchg
js
jg
cmp
ror
mov
in
jle
xchg
repnz
lea
jae
pop
xchg
mov
mov
jbe
pop
xchg
pop
aam
pop
in
leave
inc
mov
pop
in
pop
xchg
mov
sbb
push
or
mov
pop
in
push
pop
xchg
adc
inc
inc
js
xor
aam
nop
cmp
in
addr16
pop
xchg
sbb
int
ds
xorl
add
repz
adc
fistl
outsl
cwtl
xor
xchg
cmp
jno
mov
pop
mov
cs
push
pushf
shll
mov
mov
cmpsl
cs
and
popf
xchg
sub
xor
cwtl
out
ja
pop
xchg
cltd
mov
xor
maskmovq
divl
xchg
js
in
rcll
adc
jo
loopne
test
aas
js
pop
popa
inc
sub
pop
xchg
js
out
js
pop
in
gs
pop
xchg
andb
movsb
jo
in
mov
testb
jno
mov
pop
mov
cs
push
movsb
shll
mov
data16
mov
rcll
jg
out
xchg
js
pop
jbe
jo
xchg
js
jecxz
std
out
adc
js
pop
loopne
inc
daa
lea
jge
sub
xor
xor
jmp
js
arpl
adcl
pop
cmp
dec
dec
jp
or
loop
loopne
cmpsb
fwait
mov
gs
js
insl
adc
imul
in
outsl
in
pop
xchg
in
sub
jnp
lcall
out
jbe
pop
xchg
pop
xlat
sbb
roll
mov
mov
mov
sbb
aaa
adc
js
inc
fnstenv
iret
dec
add
nop
mov
cltd
mov
in
xchg
jbe
or
mov
cmp
pop
xchg
js
jnp
xchg
cmp
js
pop
std
xchg
test
in
pop
jo
rolb
ja
pop
mov
cs
push
mov
adc
data16
pop
jns
outsl
loope
data16
or
adc
dec
and
insb
or
out
dec
push
pusha
or
movsl
and
cmp
aad
push
push
icebp
fstpt
icebp
push
xchg
js
fwait
data16
inc
inc
cmp
xor
lcall
mov
jbe
pop
xchg
pop
xlat
sbb
roll
mov
mov
mov
sbb
mov
pop
sub
mov
jecxz
or
mov
movsl
aam
cmpsb
js
pop
jne
outsl
xor
xchg
pop
mov
sbb
clc
xchg
int
mov
xchg
jns
mov
in
xchg
out
jbe
pop
xchg
pop
ficompl
fs
mov
inc
mov
mov
sbb
in
mov
in
pop
xchg
pop
xlat
sbb
roll
mov
mov
mov
sbb
mov
fdivs
pop
add
pop
xchg
cwtl
or
mov
in
pop
or
insb
lods
std
dec
adcb
js
pop
in
addr16
pop
xchg
rcll
mov
sbb
mov
jo
pop
lcall
pop
xchg
js
lahf
push
or
daa
loopne
xchg
push
dec
push
pusha
or
insb
xchg
sahf
insl
push
pusha
or
insb
xchg
and
pusha
or
insb
xor
lcall
lahf
xor
add
out
cmp
xor
mov
outsb
mov
ja
lahf
test
das
bound
jne
pop
xchg
add
pop
xchg
js
nop
clc
cltd
test
pop
xchg
js
mov
or
adc
pusha
cmpsl
pop
dec
adc
pop
xchg
js
nop
clc
cltd
test
pop
xchg
js
mov
pop
jle
or
or
fs
js
pop
jo
ret
add
xchg
cs
push
test
adc
data16
sahf
cs
lret
mov
adc
inc
in
popa
in
pop
xchg
or
les
push
inc
mov
lahf
mov
add
fwait
test
mov
pop
jmp
imul
cmpsb
bound
outsb
xor
loop
and
inc
cmp
jmp
mov
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
out
cmp
xor
mov
outsl
sub
test
insl
xor
xchg
ret
cmp
inc
fptan
adc
push
add
pop
xchg
js
loope
lcall
dec
or
cli
lahf
mov
push
push
and
fisubl
mov
xchg
lods
jnp
je
xchg
mov
movsl
push
adc
push
add
adc
pop
add
pop
xchg
jo
loope
test
sub
lcall
lods
stc
or
pop
xchg
js
inc
aaa
fmul
jmp
jge
lods
std
out
push
loopne
cli
xor
mov
js
mov
add
pop
in
outsl
in
pop
xchg
filds
fidivrl
xor
or
xor
mov
shl
loopne
outsb
dec
mov
std
lods
jne
jno
push
add
fld
jbe
push
jbe
or
mov
loope
inc
fisubrs
mov
icebp
add
mov
push
xor
xadd
cmpsb
push
push
pusha
or
insb
and
xchg
js
mov
push
sbb
add
xchg
int3
xor
xchg
outsb
aaa
pop
mov
push
cmp
dec
pop
inc
mov
sbb
pop
fcomps
adc
sbb
pop
pop
or
leave
push
push
cmp
dec
pop
inc
mov
sbb
pop
fdivr
out
push
and
cli
xlat
push
into
cmp
pop
push
cmp
mov
scas
adc
cmp
inc
es
loope
pop
push
cltd
sbb
cli
xlat
push
into
cmp
pop
push
cmp
push
push
popa
xchg
dec
pop
inc
mov
into
cli
xlat
push
out
fildl
mov
das
dec
fists
pop
into
stc
lahf
xchg
aam
mov
adc
cli
xlat
push
into
cli
xlat
push
push
adc
sbb
pop
pop
or
leave
push
push
cmp
dec
pop
inc
mov
sbb
pop
fcomps
adc
sbb
pop
pop
or
leave
push
push
cmp
dec
pop
fs
imul
ret
mov
fiaddl
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
pop
xchg
js
add
in
pop
outsb
testl
add
inc
rcrl
add
repnz
xchg
rolb
cmpsb
mov
nop
cmp
repnz
movsl
aas
push
mov
cmpsb
xor
push
add
repnz
cmp
push
mov
cmpsb
dec
int3
push
add
repnz
sti
inc
push
mov
cmpsb
in
fistps
add
repnz
les
or
xor
or
or
or
xchg
jp
dec
out
out
inc
adc
or
jb
adc
mov
ret
rorl
mov
nop
jne
imul
xchg
int3
xchg
ds
pop
arpl
jp
loopne
icebp
insl
xchg
into
nop
push
js
push
cmp
cmpsb
inc
mov
les
ljmp
outsl
cmp
lock
in
sub
add
imul
xor
popl
xchg
jmp
icebp
loope
loopne
pop
add
lods
mov
dec
xchg
mov
and
ljmp
adc
xor
rolb
loop
fmuls
cmp
stos
jmp
icebp
cmc
aad
into
xchg
cmp
cld
mov
lcall
dec
fldenv
js
mov
sub
mov
push
loope
testl
pop
and
mov
movsl
and
mov
ds
call
inc
ja
into
sarb
stos
mov
out
add
add
jmp
push
sub
and
fcoml
lods
cmp
adc
mov
stos
dec
push
adc
ja
add
pop
test
fmuls
scas
xchg
repz
xchg
jle
mov
nop
jne
push
xchg
insb
lahf
jecxz
enter
mov
lea
pop
sbb
push
adc
sbb
adc
inc
dec
int3
in
mov
std
imul
lods
icebp
ss
mov
jmp
out
xchg
cltd
mov
xor
adc
ss
and
jnp
in
lea
push
das
xchg
push
scas
pop
dec
rep
xchg
mov
jb
xchg
mov
movsb
xchg
jp
lea
mov
es
dec
pop
xor
sbb
xor
mov
in
lcall
cmpsb
push
int3
setb
xchg
nop
sbb
mov
push
movsb
cmpsb
mov
fldcw
repz
sbbl
test
adc
cwtl
sti
stos
lahf
lds
mov
sbb
cmc
clc
jnp
xor
js
fwait
sub
idiv
test
rorl
cwtl
arpl
push
and
aas
sbb
fs
shrb
out
mov
ja
and
movzbl
nop
jne
insb
jmp
sbb
mov
push
fcoms
mov
aaa
int
cmp
pop
or
and
xchg
loopne
sbb
inc
hlt
mov
mov
out
push
push
divl
sti
push
sub
and
adc
add
call
jb
inc
sub
dec
jo
lods
dec
leave
mov
dec
lret
fldcw
push
imul
add
mov
sbb
jo
adc
inc
xor
push
push
cltd
mov
cmc
dec
xchg
nop
push
pop
pop
jle
lock
xor
add
inc
adc
imul
outsl
loop
dec
aas
or
push
xchg
je
test
pop
inc
cli
je
das
xchg
push
push
mov
fmull
inc
lea
xor
sbb
mov
cmp
add
ret
xor
fucomi
fldcw
pop
jbe
std
sbb
mov
in
out
les
cmp
dec
je
icebp
shr
icebp
imul
jmp
adc
addr16
movsb
sbb
jle
sbb
mov
cmpsl
ss
mov
pop
xchg
mov
sbb
data16
daa
jl
popf
lret
fnsave
mov
inc
rcl
cmpsb
das
xor
out
xchg
sbb
nop
mov
cld
jge
sti
sbb
pop
data16
mov
and
sahf
sub
sahf
mov
inc
and
push
sbb
pop
add
es
or
mov
test
adc
in
mov
inc
sbb
mov
repz
xchg
fists
mov
and
shrl
fisubrl
push
and
mov
mov
das
adc
ds
fisubs
imul
call
aaa
repz
pand
xchg
icebp
nop
js
stc
pop
sbb
xchg
cmp
adc
dec
in
fdivs
ljmp
fstl
test
orb
pop
clc
add
das
sub
add
pop
push
cmp
clc
pop
clc
daa
lret
fisubrs
xchg
sbb
mov
mov
pop
add
mov
hlt
in
jno
or
popf
inc
mov
pop
or
lret
loop
lret
or
xor
les
iret
ret
mov
outsl
pusha
negb
cmp
sbb
test
pop
cli
fwait
leave
xchg
dec
add
fwait
mov
push
and
dec
mov
xlat
pop
testb
cmp
pushf
movsb
sbb
fistpl
mov
fiaddl
addr16
inc
inc
add
mov
cltd
mov
arpl
push
mov
gs
insb
outsb
jle
pop
push
mov
cmp
ds
mov
nop
jne
push
and
gs
dec
or
pop
test
clc
adc
inc
scas
push
push
mov
subb
js
sbb
scas
pop
gs
fmul
push
out
stos
mov
push
adc
sbb
out
fists
push
add
push
jle
add
mov
outsb
xchg
push
dec
mov
mov
or
push
inc
push
int
stos
test
loop
arpl
push
mov
and
mov
push
sti
mov
sbb
lret
aam
xor
std
or
pop
andl
or
es
dec
push
in
pop
xchg
push
lret
pop
adc
pop
insb
dec
xor
and
mov
and
push
add
sbb
cld
xor
pop
pop
xchg
sub
cmp
aas
inc
jo
stc
mov
inc
rorl
ja
ret
stc
shl
adc
nop
test
jo
or
js
adc
insl
add
inc
movsb
js
rcrb
push
pop
cmpsl
dec
and
ja
push
and
addr16
je
mov
mov
mov
cmpsl
lds
push
xchg
subl
movsb
xor
mov
add
lds
repz
jne
jae
je
in
mov
sub
cmp
xor
inc
aaa
or
sbb
cwtl
ss
ljmp
jae
out
mov
mov
sub
sub
push
dec
push
shrl
in
push
lods
pusha
ret
add
pop
icebp
clc
push
imul
mov
sbb
lret
push
or
mov
lods
cli
sub
mov
dec
insb
popf
bound
jno
scas
mov
push
inc
mov
out
outsb
inc
pop
sbb
cmpb
gs
mov
jne
xlat
sub
mov
outsl
rorl
fimull
xor
pop
xor
cld
arpl
aas
insl
and
mov
and
cli
negl
inc
add
movsb
les
fdivs
push
addr16
enter
push
mov
test
add
stos
jge
addr16
lods
les
cmpsb
push
int3
mov
fimull
ret
lcall
out
inc
cmc
pop
outsb
repz
sub
or
ret
dec
insb
pop
push
jb
imul
imul
pop
pop
aaa
mov
pusha
jns
sub
pop
in
mov
mov
cld
jmp
movsb
subb
sbb
std
bound
push
sahf
fs
cltd
jp
cld
push
cmp
push
lods
fadds
js
sbbl
clc
stc
add
je
imul
je
adcl
negl
dec
add
inc
dec
pop
and
pop
dec
xchg
mov
jnp
mov
sub
arpl
add
pop
in
cmp
push
insb
push
jnp
repnz
repnz
sub
fsubrp
pop
xlat
mov
mov
cmp
pushf
sahf
inc
mov
xchg
push
clc
subb
jae
jmp
pushf
pusha
movsl
jmp
pushf
lods
loopne
cld
daa
pop
insl
cwtl
out
jmp
lea
or
int3
insb
inc
leave
shrb
bound
cld
out
inc
movsl
inc
sub
push
jp
sbb
cmc
mov
icebp
loop
movl
test
jae
push
je
push
mov
lds
stos
gs
js
cltd
gs
sbb
pop
pop
mov
int3
je
push
out
push
mov
dec
in
out
shll
mov
movl
fnstenv
mov
nop
jne
push
rorl
xchg
jnp
popf
and
add
loop
nop
sub
sarb
push
push
popf
and
rolb
cltd
ffreep
popf
xor
push
jnp
dec
pushf
mul
mov
and
stos
and
jmp
in
shl
jnp
sub
push
ds
pop
push
sub
or
sbb
cmpsb
push
int3
jge
xchg
outsb
leave
sar
push
cmp
pop
sub
lods
pushf
cmpsl
jmp
xchg
and
mov
sahf
push
dec
mov
pop
xchg
js
pop
cmp
test
mov
aad
loope
inc
fadd
cmp
mov
dec
mov
popa
mov
mov
mov
cmp
adc
inc
orb
movsl
loop
lods
scas
xchg
pop
scas
push
sub
scas
out
sbb
je
pushf
lcall
gs
out
adc
push
into
pop
in
mov
jno
fcompl
fidivs
cmc
push
aad
es
sub
mov
pop
and
pop
gs
movhlps
pop
mov
adc
inc
popa
mov
xor
xor
inc
je
or
cmp
cltd
lods
cli
dec
dec
sub
lods
into
cmc
or
mov
sar
in
icebp
pop
xchg
fwait
xor
movsb
sbb
or
sbb
rcll
leave
movb
iret
enter
xchg
enter
mov
jp
cld
dec
int
and
fdivr
push
imul
loope
mov
push
dec
xchg
jo
cltd
push
and
inc
popw
call
test
ret
and
or
mov
cmpsb
add
and
setg
xchg
xchg
jl
sti
in
daa
movsb
dec
jge
cmpl
or
xchg
bound
mov
inc
cmp
push
imul
movsl
jmp
push
je
add
nop
aas
pop
cltd
lods
cli
mov
loope
and
in
lods
pop
cmp
xchg
xor
dec
nop
bnd
rcrl
gs
cmc
lds
stos
shl
jmp
jne
out
and
or
hlt
sahf
cs
sub
cmp
cmpsb
mov
mov
outsl
inc
enter
jmp
orl
mov
in
xchg
lea
pop
call
inc
daa
cmpsl
pop
sahf
fucomi
cmpsb
cmp
pop
cltd
inc
repnz
jle
fstpt
jle
mov
xor
and
xor
out
sarb
jno
or
push
pop
in
mov
jne
shl
jg
popf
out
pop
loopne
mov
mov
adc
je
pop
shlb
xor
mov
dec
sub
fildll
add
and
xchg
insl
mov
adc
mov
push
pushf
ja
xorb
sarl
mov
lea
mov
push
int3
mov
js
inc
xchg
pop
xchg
cmp
punpcklbw
js
call
aaa
in
sbb
push
leave
movsl
fisttpl
pop
je
shrb
adc
add
jge
inc
dec
xor
xchg
cmc
mov
jbe,pn
shrb
mov
pushf
out
lret
xchg
inc
or
ds
fs
jg
sar
fadds
sbb
aas
push
ja
push
jp
jp
dec
push
lcall
jmp
idiv
fwait
in
jbe
lods
rolb
imul
mov
xchg
je
test
leave
mov
jl
cs
fnstcw
dec
pusha
inc
push
inc
fldenv
dec
js
shl
pop
insb
add
movsb
ficomps
out
push
jp
imul
stc
leave
mov
dec
xor
xchg
test
ljmp
scas
mov
sti
inc
fs
push
fnsave
pop
and
mov
inc
jmp
cmpsb
jo
out
movsl
dec
push
push
sbb
enter
inc
and
dec
xorl
or
cwtl
push
imul
add
les
stos
fists
dec
cmp
aad
lahf
stos
ret
add
push
add
cmp
in
jnp
jg
jo
inc
inc
jle
and
xchg
jg
xor
xor
sub
xor
xor
and
fidivrl
xchg
sbb
mov
add
cmpsb
xor
ljmp
xchg
lods
ljmp
mov
mov
inc
push
jle
cwtl
mov
pop
push
jp
cs
mov
xlat
shl
test
mov
add
insl
cmp
mov
lods
leave
rcl
inc
icebp
out
or
sbb
and
lahf
shlb
lock
addr16
inc
out
or
fsubl
aas
sub
les
push
or
jb
pop
jb
shrl
repz
test
jmp
js
jg
idiv
xchg
pop
bound
mov
outsl
push
xchg
in
adc
pop
mov
mov
dec
sbb
les
fidivs
cs
mov
push
andb
mov
dec
test
mov
rorl
mov
add
insl
mov
iret
jmp
cmp
and
test
pop
xchg
jmp
add
sub
push
je
jae
lods
stos
scas
inc
and
dec
in
or
nop
sbb
fsubrp
hlt
cld
mov
mov
sub
lret
das
mov
scas
add
adc
decb
or
push
push
jle
push
sub
rclb
fcmovu
clc
pop
pop
jnp
ja
jecxz
mov
int3
shrl
pop
jmp
cwtl
dec
cmp
loope
gs
scas
lock
jg
addr16
push
test
dec
xchg
test
dec
mov
std
push
sub
jbe
cmc
xor
jg
in
lea
insb
or
pop
out
test
jbe
out
fs
xchg
cli
cltd
jno
xchg
out
insl
adc
pop
inc
push
jbe
pop
adc
lds
fwait
jmp
shl
pop
scas
cmp
fsubl
addr16
or
sbb
loop
jo
int
scas
shl
dec
jge
push
cmp
imul
mov
sbb
sub
in
dec
mov
jbe
sar
sbb
loope
adc
mov
add
add
pop
icebp
pop
and
push
fdivrl
iret
inc
aam
rclb
push
xchg
sbbb
add
adc
and
push
out
mov
jl
rep
push
add
orb
fs
pop
xchg
sub
sub
jg
add
jne
adc
jb
out
inc
fwait
pop
xchg
mov
fs
lret
push
pop
xlat
es
jb
inc
js
sbb
push
jmp
popl
xor
int
push
shrl
xor
sub
sarb
cmpsl
stos
mov
push
cmpsl
mov
movsb
imul
test
and
call
in
dec
mov
xor
mov
test
mov
mov
cmp
xor
dec
mov
lret
jg
pop
es
xor
jle
cmpsl
movsl
clc
adc
or
mov
test
xor
clc
inc
push
std
imul
scas
mov
xor
je
pop
jbe
scas
cld
addr16
or
cmp
jmp
xchg
stos
fbld
int3
ret
jle
xor
push
push
cld
xchg
addl
mov
loop
push
pushl
sbb
insb
stc
push
xchg
repnz
imul
test
jecxz
adcb
xchg
jge
push
pop
std
inc
lcall
int
xchg
push
inc
ss
or
sub
js
jns
aam
push
mov
incb
test
mov
subl
inc
jbe
push
xor
sub
sahf
push
addb
iret
jg
xor
jg
xor
jg
xor
or
iret
shll
cmp
ljmp
shl
xchg
cmp
sarb
aas
clc
cs
xorl
and
hlt
test
mov
dec
push
loopne
data16
scas
or
imull
adc
xchg
shll
adc
mov
mov
mov
test
insb
movsb
sub
xor
inc
in
mov
lock
pop
in
subb
add
clc
jle
dec
and
mov
pusha
and
test
add
sbb
enter
cs
pop
adc
mov
andl
xchg
push
ret
pop
pop
mov
sub
push
sub
mov
and
dec
push
fisubrs
pop
stos
repnz
iret
jg
cli
jp
cmp
scas
jo
addr16
cli
lahf
xorb
jmp
sub
push
and
dec
aaa
jno
out
push
pop
mov
sub
dec
add
push
pop
jg
xor
popf
call
xchg
in
xlat
arpl
push
mov
lret
in
and
data16
test
mov
ss
jo
mov
loopne
mov
cltd
les
int
out
sub
adc
mov
xor
gs
cmpl
mov
cs
test
inc
sub
movsl
cmp
dec
ficomps
or
ret
jb
pop
cmp
xchg
iret
arpl
test
popa
arpl
inc
sbb
movups
dec
stc
xor
aad
lea
mov
cmp
adc
mov
inc
sti
inc
fildl
jg
xor
mov
les
push
insb
lea
adc
rolb
ja
rorb
stos
fwait
lock
aad
mov
push
std
andl
cmp
fists
or
mov
and
ja
push
std
xor
push
mov
lret
loop
push
sbb
adc
lret
push
dec
adc
jg
xor
lret
hlt
jecxz
sub
mov
jmp
pop
and
in
pop
in
pop
mov
cmc
ficomps
movsb
sub
cld
stc
xor
pop
pusha
jg
inc
or
add
and
stc
push
aas
mov
push
insb
femms
pop
fists
fs
jne
out
or
mov
sahf
pop
adc
sbb
xlat
push
dec
inc
leave
insb
adc
xor
jmp
and
imul
test
inc
push
jge
mov
mov
pop
push
pop
stos
sbb
fists
ja
jae
mov
inc
das
inc
rcll
jmp
in
ljmp
adc
add
pop
subb
rorb
ret
sbb
stc
mov
push
addr16
negb
stos
ss
xor
je
sbb
pop
hlt
jecxz
mov
sub
sbb
insb
sbb
jo
dec
adc
sbb
arpl
cmp
mov
add
ret
outsb
adcb
xchg
aaa
jo
out
xchg
je
jo
pop
shll
jo
stos
xor
decb
lods
jecxz
arpl
inc
add
fmuls
rcr
std
mov
dec
test
repnz
or
idivl
xor
arpl
jne
pop
xor
cmpsl
mov
mov
cwtl
sub
nop
leave
lods
xor
outsb
repnz
mov
idivl
or
mov
add
xor
mov
jns
imul
sub
addr16
cmp
loop
push
das
fs
jecxz
push
lods
jmp
dec
idivb
std
rolb
ljmp
rcr
and
xor
jne
pop
sbb
ret
dec
jae
shlb
xor
push
inc
sbb
dec
test
testb
in
adc
fwait
shrb
pop
mov
add
sbb
add
ja
enter
sub
and
fisubrs
sub
xor
ljmp
or
jo
test
outsb
mov
icebp
addl
jbe
lcall
aam
xchg
gs
scas
js
xchg
fdivs
jns
inc
cmp
xchg
mov
scas
adc
sahf
lcall
sbb
mov
test
ror
cmp
stc
test
jecxz
lret
inc
packssdw
mov
iret
inc
pushf
xchg
and
loopne
push
cs
cmp
iret
pop
icebp
mov
or
jb
xchg
xchg
mov
rorl
xor
imul
in
bound
xor
inc
add
les
std
out
push
push
int
aam
pop
test
cmp
cmp
popf
subb
xor
jg
idivl
pop
mov
jmp
das
cs
sbb
add
add
push
push
cmp
or
push
filds
xor
mov
mov
lea
dec
ret
iret
jg
or
add
push
or
or
out
sarl
xor
mov
mov
mov
push
fwait
sub
repnz
imul
ret
mov
pop
sahf
push
iret
jg
push
mov
or
push
scas
mov
mov
mov
das
pushw
push
push
mov
push
out
not
jg
xor
or
iret
jg
inc
mov
add
daa
xchg
rcl
rcl
int
mov
int3
ret
mov
pushf
xor
sbb
dec
xchg
mov
xchg
mov
fs
and
xor
push
scas
inc
fwait
lods
pop
sub
or
push
cmpsl
js
sbb
cmc
shll
dec
and
shr
cmp
rcrb
addl
iret
popf
dec
dec
ljmp
pop
dec
shl
iret
jg
mov
iret
jg
test
pop
push
pop
mov
pop
popa
push
mov
ljmp
rcl
cmp
gs
fstl
ds
and
loop
aad
repz
adc
test
lret
das
jle
adc
sarl
xor
lods
adc
cs
xchg
es
add
xlat
add
iret
jg
cmpsl
mov
jle
xor
xchg
cli
xor
push
add
cmpb
dec
mov
cmp
mov
push
xor
dec
add
mov
sbb
mov
cmp
xchg
jb
push
and
out
inc
sbb
sahf
lods
xchg
vmwrite
cld
lret
clc
xchg
mov
cli
dec
dec
out
das
mov
jns
outsb
pop
cmpsb
sbb
shlb
sbb
adc
pop
nop
mov
das
nop
mov
das
nop
mov
das
nop
mov
das
nop
mov
das
nop
mov
das
nop
adc
addl
mov
das
nop
sahf
or
scas
mov
and
inc
jl
mov
das
lock
in
push
imul
mov
das
pop
out
inc
pop
push
ret
rorb
nop
xchg
sub
mov
pop
or
pop
out
xchg
xor
inc
std
pusha
xchg
pusha
xchg
das
nop
mov
aad
es
mov
cmovg
test
iret
dec
mov
iret
dec
add
mov
lock
inc
pusha
cmp
jl
dec
shrb
push
das
nop
mov
das
out
dec
das
nop
mov
rcl
ret
stos
xor
xor
nop
mov
leave
rolb
stos
sahf
lahf
sahf
outsl
pop
adc
rcrb
bound
jl
mov
sub
mov
inc
xchg
mov
das
xor
or
sti
push
out
sub
daa
mov
das
pop
and
fistpll
sarb
dec
test
in
dec
aaa
jg
inc
aad
and
decb
addr16
push
iret
dec
mov
iret
dec
or
outsl
cltd
leave
pop
ljmp
adc
les
imul
mov
and
mov
inc
xchg
mov
das
xor
or
sti
push
out
sub
sub
or
or
imul
mov
repz
addr16
sub
imul
fdivrs
sbb
aas
xchg
mov
mov
arpl
out
sub
imul
out
into
mov
scas
pop
lret
insb
inc
and
jbe
and
decb
push
dec
mov
iret
dec
or
mov
mov
sbb
sti
addr16
dec
xor
mov
scas
fstl
sub
bound
mov
das
cmp
outsl
mov
stos
jo
inc
aad
and
decb
push
dec
mov
iret
dec
or
mov
mov
sbb
ljmp
dec
das
nop
mov
int
xchg
call
mov
inc
xchg
mov
das
xor
or
sti
push
out
sub
mov
or
push
movsb
or
out
nop
mov
cli
xor
iret
or
test
jecxz
mov
mov
jmp
inc
out
mov
sub
add
push
mov
das
nop
sub
sbb
pop
scas
dec
das
nop
lcall
mov
notb
cmpb
mov
jbe
inc
adc
fbld
loopne
ljmp
out
dec
das
nop
mov
mov
xor
cmp
nop
mov
rcl
lds
pop
adc
addr16
cmc
sub
mov
xchg
adc
sub
dec
mov
sub
mov
inc
xchg
mov
das
xor
or
sti
push
out
sub
mov
or
adc
xchg
xchg
jl
mov
sub
dec
xchg
fldenv
int
out
iret
imulb
nop
mov
dec
aad
and
decb
addr16
push
iret
dec
mov
iret
dec
or
loopew
cmp
jnp
fdiv
sub
inc
inc
xchg
mov
das
bound
dec
lock
dec
ljmp
int3
dec
dec
or
lret
stc
scas
adc
jae
out
adc
jle
jl
dec
das
adc
jbe
push
mov
lods
test
out
sub
fistpll
dec
iret
imul
lds
out
jl
out
adc
sub
jl
cmp
nop
mov
dec
xorl
pop
cmp
mov
cld
shlb
jp
jbe
out
xchg
add
mov
aad
sbb
decb
addr16
dec
iret
dec
mov
iret
dec
or
mov
mov
sbb
sbb
push
aam
sub
xor
xchg
imul
cs
xor
xor
rcl
dec
lock
mov
xor
mov
das
nop
mov
sbb
imul
push
and
mov
nop
shll
call
ss
xchg
stos
dec
das
nop
repz
cmp
xor
popa
mov
pop
scas
aam
inc
pop
pop
xor
push
dec
dec
das
nop
sbb
dec
das
nop
shll
jmp
ss
xchg
scas
dec
das
nop
call
out
adc
bound
pushf
sbb
mov
inc
xchg
mov
das
xor
or
sti
push
out
sub
xchg
mov
das
push
es
outsb
jle
ja
cmc
popf
inc
das
nop
mov
pop
mov
jo
pop
imul
push
pop
dec
jnp
fucomip
jne
push
jg
mov
xchg
xor
mov
sub
dec
outsl
adc
imul
cs
ret
stos
xor
aaa
das
nop
mov
leave
rorb
arpl
pusha
aas
ret
jl
fcomi
sub
dec
aas
ss
mov
iret
xchg
mov
aad
and
decb
push
dec
mov
iret
dec
add
ljmp
inc
push
mov
cld
cwtl
imul
mov
sti
fdiv
sub
adc
dec
push
pusha
insb
pop
daa
sti
mov
fsub
stos
cli
dec
daa
mov
das
dec
dec
or
xchg
shr
fwait
pop
mov
push
and
and
dec
das
loopne
jecxz
mov
ljmp
sbb
out
jbe
push
iret
dec
into
pop
mov
inc
xchg
outsb
jecxz
inc
and
movsb
jp
das
dec
into
fbld
int
xchg
jl
inc
mov
mov
das
ljmp
xor
mov
jle
jl
ja
dec
jmp
das
loopne
dec
das
nop
mov
mov
ljmp
xor
mov
mull
push
pop
jecxz
shrl
imulb
cli
mov
inc
xchg
mov
das
xor
or
sti
push
out
sub
and
dec
das
push
and
mov
lds
aaa
jg
mov
lahf
inc
test
sub
jg
aad
and
decb
push
dec
mov
iret
dec
add
ljmp
add
sahf
inc
das
nop
mov
jge
cli
jns
xchg
inc
mov
test
inc
aaa
jg
xchg
nop
jle
inc
cltd
scas
sub
cmp
adc
jg
push
das
nop
mov
rcl
ret
stos
xor
xor
nop
mov
leave
rclb
mov
jl
mov
das
pushl
mov
mov
adc
jle
jl
ja
dec
ss
insb
and
lahf
stc
mov
inc
xchg
mov
das
xor
or
sti
push
out
sub
sub
or
sarb
and
shrl
imulb
imulb
std
mov
aaa
adc
jg
dec
int3
ja
dec
das
nop
shrl
push
ds
fistl
cmpsl
dec
das
nop
bnd
sub
mov
cwtl
outsl
movsl
mov
xor
and
dec
int3
ja
dec
das
nop
shrl
push
ds
fistl
fisttps
nop
bnd
adc
mov
sbb
in
inc
jg
cwtl
fs
mov
jge
imull
nop
mov
test
mov
sub
xor
push
jle
aaa
jg
push
nop
xor
inc
loopne
ljmp
nop
mov
sbb
mov
push
scas
xlat
cmp
movsb
loope
lret
sti
xor
sub
dec
leave
ja
dec
das
nop
shll
ds
fistl
scas
dec
das
nop
icebp
jl
mov
pop
insl
push
int
fs
imulb
insl
inc
or
lds
scas
dec
das
nop
arpl
xor
mov
cmp
dec
push
jmp
les
das
nop
mov
ret
ret
mov
imulb
insl
movsb
xchg
or
adc
mov
inc
push
mov
jo
inc
dec
and
pop
aad
jmp
mov
in
ret
filds
lret
aad
sbb
dec
das
nop
shll
dec
ds
fistl
cmpsl
dec
das
nop
hlt
jns
mov
push
jg
loop
ret
xor
fwait
mov
das
adc
mov
sbb
int
mov
dec
lds
xor
and
shr
ljmp
mov
dec
das
nop
shll
ds
fistl
loope
das
nop
icebp
jl
and
push
dec
xchg
mov
das
xor
iret
cmpsb
or
pusha
or
dec
das
nop
dec
sub
js
pop
jl
mov
push
popa
lds
xor
ss
or
pop
or
aaa
das
nop
mov
xor
pusha
sub
push
pop
push
adcb
js
sbb
dec
das
nop
shll
ds
fistl
stos
dec
das
nop
icebp
jl
ret
lea
rorl
mov
insl
sub
cmp
mov
nop
in
adc
xor
imul
in
inc
jg
dec
das
nop
mov
dec
inc
xchg
mov
das
mov
push
aad
adc
jo
dec
data16
sub
shll
adc
and
das
lahf
lea
jae
lret
sahf
push
xchg
loop
inc
sahf
inc
das
nop
mov
cmpsb
popa
pop
mov
sub
adc
js
push
scas
sub
dec
dec
iret
out
and
dec
push
lds
mull
int
mov
ljmp
mov
xor
inc
das
nop
mov
aaa
xchg
ret
inc
sub
mov
int
in
jbe
pop
mov
loop
pusha
add
aad
sbb
decb
addr16
dec
iret
dec
mov
iret
dec
add
loopne
jmp
icebp
lcall
xchg
stos
sub
ss
shll
cmpsb
lcall
inc
dec
sbb
iret
mov
in
inc
jg
dec
leave
ja
dec
das
nop
shll
ds
fistl
stos
dec
das
nop
icebp
jl
push
ret
rclb
data16
jns
mov
das
jge
dec
das
nop
mov
cmpsl
mov
das
ljmp
inc
insb
pop
push
push
push
lcall
shr
ret
repz
cmp
nop
mov
rcl
mov
sub
cmpsb
jg
cltd
mov
das
mov
adc
outsb
ficoml
lea
insb
mov
and
out
and
xor
mov
das
nop
push
inc
loopne
popf
inc
das
nop
mov
cltd
lcall
in
aad
and
in
jbe
xchg
iret
push
das
nop
mov
ret
lret
xor
das
das
nop
mov
int
or
sub
mov
test
stos
lea
jg
xchg
or
imul
inc
aas
aaa
jg
push
xor
mov
mov
dec
bound
xchg
movsb
imul
nop
mov
shr
ret
shll
scas
lret
mov
nop
mov
int3
rcrb
aam
sub
add
imul
cs
and
decb
push
dec
mov
iret
dec
push
nop
mov
mov
dec
movb
mov
imulb
cli
scas
lds
adc
xchg
mov
das
sbb
stos
int
add
notb
inc
loopne
ljmp
nop
mov
mov
and
cltd
mov
das
pop
scas
dec
das
nop
outsl
mov
out
or
decb
addr16
jecxz
dec
mov
iret
dec
or
insb
inc
popa
aad
mov
mov
aad
and
decb
push
dec
mov
iret
dec
add
in
hlt
cmc
mov
xor
jmp
push
das
pop
das
nop
mov
das
loope
dec
das
nop
mov
rcrb
ret
ret
xor
ss
nop
mov
into
shlb
mov
das
nop
xor
scas
in
rorb
adc
inc
das
nop
sbb
dec
das
nop
shll
ds
fistl
loope
das
nop
icebp
jl
int
and
pop
xchg
sub
icebp
cs
and
decb
push
dec
mov
iret
dec
add
addr16
mov
ret
cmp
das
lcall
outsb
mov
mov
ret
jl
xchg
sub
mov
inc
xchg
mov
das
xor
or
sti
push
out
sub
sub
or
ja
pavgw
xchg
mov
aad
and
decb
push
dec
mov
iret
dec
testl
stc
xor
mov
das
jne
fistpl
and
or
stos
push
add
lret
dec
das
nop
and
test
dec
sub
and
and
and
jp
sti
jg
jne
mov
aad
and
decb
push
dec
mov
iret
dec
or
mov
mov
out
mov
cmp
ret
push
das
nop
mov
ret
ret
mov
xor
mov
ror
mov
das
nop
mov
leave
dec
push
jecxz
mov
pop
xchg
pop
in
mull
jle
cltd
mov
das
adc
rorl
xchg
std
mov
mov
arpl
push
push
imul
push
das
nop
mov
rcrb
ret
ret
xor
xor
nop
mov
into
shlb
aas
roll
xchg
jecxz
nop
mov
jnp
xor
divl
adc
xchg
stc
push
jbe
and
and
loop
into
dec
addr16
in
nop
mov
xor
push
leave
inc
inc
jge
es
nop
mov
das
loope
dec
das
nop
mov
rcrb
ret
ret
xor
cmp
nop
mov
into
rorb
jecxz
xchg
mov
xor
movsl
iret
xlat
mov
rcl
sbb
decb
addr16
dec
iret
dec
mov
iret
dec
testl
lret
leave
lock
dec
das
mov
das
jge
inc
das
nop
mov
mov
mov
das
ret
aad
es
mov
cmovg
test
iret
dec
mov
iret
dec
add
or
out
add
mov
mov
lret
insl
inc
xor
and
mov
scas
inc
out
jnp
mov
das
cli
mov
inc
xchg
mov
das
xor
or
sti
push
out
sub
mov
or
clc
out
cmp
imul
mov
scas
inc
faddl
adc
adc
insb
mov
pop
cltd
out
sbb
sbb
push
mov
sub
mov
mov
push
pop
aaa
jg
jle
in
inc
das
nop
mov
jne
out
imul
push
adc
jl
jge
out
adc
js
jmp
mov
das
push
cmc
loop
cmp
std
mov
mov
mov
scas
jo
inc
mov
fs
pop
mov
das
nop
out
cmc
call
inc
dec
aad
lods
inc
loopne
mov
jge
pop
vsqrtsd
and
sbb
call
mov
das
insb
mov
pop
sbb
xchg
xchg
popf
jmp
xchg
inc
addr16
xchg
stos
mulb
bound
and
decb
push
dec
mov
iret
dec
or
mov
mov
xchg
cmp
jg
and
jl
ja
dec
and
jge
dec
das
or
push
dec
rcl
hlt
lock
inc
stos
lea
or
inc
jg
aaa
sbb
jecxz
nop
mov
mov
mov
out
jbe
xlat
mov
in
das
nop
inc
lods
fcmovu
or
fptan
lcall
jmp
lods
dec
das
nop
sahf
cmp
nop
mov
jb
imul
test
cmc
add
xchg
test
push
dec
and
mov
mov
sub
jb
sahf
inc
das
nop
mov
add
add
xlat
sbb
xlat
jle
loope
jle
jl
ja
out
adc
jecxz
nop
mov
lods
mov
test
xlat
pushf
repnz
xchg
xchg
in
js
scas
sub
cli
test
mov
nop
mov
xor
mov
das
nop
mov
dec
test
iret
lds
sbb
iret
daa
push
xchg
sub
das
cltd
lods
sbbb
adc
sbb
sub
mov
das
cli
jecxz
nop
mov
aad
and
decb
addr16
push
iret
dec
mov
iret
dec
testl
adc
jl
push
das
nop
mov
lds
dec
fldt
xchg
ret
inc
gs
adc
insl
push
imul
dec
das
adc
lds
cmc
xchg
sub
mov
inc
xchg
mov
das
xor
or
sti
push
out
sub
and
or
das
nop
xor
shr
xor
and
jg
lret
cmp
jge
xchg
mov
das
xor
or
sti
push
out
sub
sub
or
sbb
imul
mov
and
xor
int
nop
mov
xor
mov
das
nop
adc
cmp
inc
loop
cltd
mov
das
test
sahf
jo
cmc
pop
mov
iret
add
out
dec
das
nop
mov
rcl
ret
stos
xor
cmp
nop
mov
leave
shlb
in
in
cld
lods
movsl
loop
dec
mov
mov
shlb
inc
and
sbb
dec
das
nop
shrl
push
ds
fistl
in
das
nop
bnd
test
ja
mov
inc
dec
xchg
mov
das
inc
aaa
and
add
jle
sbb
or
mov
jbe
xchg
iret
push
das
nop
mov
rcl
ret
stos
xor
cmp
nop
mov
leave
rclb
fs
mov
sub
xor
imul
cs
shr
ret
shll
scas
lret
mov
nop
mov
int3
shlb
iret
loope
ret
mov
outsb
sarb
shr
ljmp
fsubl
jne
sbb
inc
jg
dec
into
ja
dec
das
nop
shll
jmp
ss
xchg
cmpsl
dec
das
nop
call
push
movb
out
popf
ds
nop
mov
adc
fwait
jae
outsb
mov
bound
fs
int
xchg
fbld
loopne
ljmp
add
ds
jg
xchg
and
pop
addr16
dec
das
nop
mov
mov
ljmp
xor
mov
incb
lods
lods
jp
cmp
nop
mov
xor
jge
add
and
dec
das
cmp
xchg
mov
jae
iret
das
mov
and
jle
insl
xor
jg
push
sub
dec
xlat
addr16
jge
iret
dec
sti
mov
test
movsl
jbe
adc
addr16
jge
pusha
mov
das
add
mov
rorl
ljmp
orl
aad
sbb
decb
addr16
dec
iret
dec
mov
iret
dec
add
loopne
xorl
sub
mov
das
push
cmpsl
adc
jle
insl
inc
das
nop
mov
test
mov
aaa
jg
xlat
cmp
scas
imulb
sbb
das
out
dec
das
nop
mov
mov
xor
ss
nop
mov
rcl
cli
fimull
mov
sub
dec
ret
xor
fisubs
in
mov
das
nop
mov
das
nop
mov
das
nop
mov
das
add
pop
pushf
push
adc
ficomps
addr16
add
fsubrs
subb
mov
jp
add
imul
mov
mov
add
push
enter
decb
push
dec
mov
iret
dec
or
addr16
pop
xor
pop
mov
movsl
add
testl
lret
jle
insl
xor
jg
push
sub
dec
xlat
addr16
jge
iret
dec
xchg
sti
mov
jl
aad
sub
sub
dec
jmp
mov
sub
dec
xchg
sti
mov
jl
aad
sub
sub
imul
dec
jmp
lcall
shr
ret
mov
xor
mov
rcrb
cs
mov
out
mov
cmovg
test
iret
dec
mov
iret
dec
or
addr16
call
xchg
imul
das
loopne
imul
adc
jg
push
das
nop
mov
ret
lret
xor
xor
nop
mov
int
inc
pop
and
inc
mov
mov
sub
and
int
mov
pop
mov
or
add
jl
out
nop
mov
adc
adc
pusha
inc
push
xor
out
dec
push
addb
dec
das
xor
or
sti
push
out
sub
sub
or
add
mov
and
add
aaa
jg
dec
leave
ja
dec
das
nop
shll
ds
fistl
lods
dec
das
nop
icebp
jl
lcall
imul
lahf
inc
mov
push
and
imull
mov
sbb
push
dec
int3
ja
dec
das
nop
shrl
push
ds
fistl
scas
dec
das
nop
bnd
sbb
push
in
add
dec
aaa
jg
fst
stc
scas
push
das
nop
mov
ret
lret
xor
xor
int
jmp
mov
cmpsl
in
int3
pop
fwait
cmp
nop
mov
ja
adc
mov
mov
cmpl
push
movsl
out
pop
outsb
shr
and
dec
and
cmp
xor
inc
fidivl
dec
out
in
aam
clc
js
divb
enter
xor
mov
das
nop
xchg
push
das
nop
adc
loope
sbb
out
jecxz
nop
mov
lods
adc
jg
or
push
xor
inc
je
and
loope
inc
scas
mov
das
mull
cmpb
mov
jbe
sbb
sub
fistpll
dec
mov
out
lds
lock
xor
xchg
call
xchg
stos
hlt
sub
loopne
das
nop
inc
inc
adc
lds
pop
mov
aam
insl
jbe
lahf
enter
mov
loope
lds
nop
mov
xor
js
out
outsb
rcrb
dec
das
nop
adc
mov
jge
aaa
bound
hlt
fcmovbe
imul
outsb
cltd
push
fwait
cli
xchg
sbb
add
mov
dec
das
nop
mov
mov
insb
fisttps
mov
movsb
inc
jl
mov
das
xchg
bound
push
mov
sub
mov
inc
xchg
mov
das
xor
or
sti
push
out
sub
mov
or
mov
sbb
dec
test
test
inc
jg
push
cli
xor
imul
test
and
decb
push
dec
mov
iret
dec
push
nop
mov
mov
fldenv
ret
test
aad
sub
mov
inc
xchg
mov
das
xor
or
sti
push
out
sub
and
dec
das
push
sbb
cmp
adc
jg
pushf
xor
mov
adc
nop
mov
pop
int3
aas
sub
ljmp
repz
mov
dec
das
nop
mov
mov
ljmp
xor
mov
and
pushf
inc
das
nop
mov
pop
lods
iret
and
mov
and
aaa
jg
shrl
imulb
xor
xor
mov
cmc
sub
sub
addr16
imulb
insl
movsb
imul
nop
mov
rcl
ret
stos
xor
xor
leave
rorb
repnz
mov
sbb
mov
dec
shlb
das
nop
shll
dec
ds
ss
xchg
stos
dec
das
nop
idivb
addb
bound
scas
aam
add
jl
fdiv
sub
cmp
jl
in
sub
inc
or
sti
fdiv
sub
sbb
int3
ja
dec
das
nop
shrl
push
ds
fistl
stos
dec
das
nop
bnd
push
jae
cmp
mov
jle
dec
fs
imulb
clc
leave
out
pop
fldenv
cmpb
mov
xor
cmp
nop
mov
and
pop
push
outsb
ret
and
std
lahf
imul
xor
mov
das
nop
and
xor
xchg
mov
inc
xchg
mov
das
xor
or
sti
push
out
sub
mov
or
loop
pop
outsb
pusha
jg
mov
addr16
imulb
cli
mov
inc
xchg
mov
das
xor
or
sti
push
out
sub
mov
or
movsl
ss
cmc
xchg
add
lret
xchg
imul
call
aad
and
decb
push
dec
mov
iret
dec
add
mov
mov
dec
iret
mov
jo
xor
das
out
dec
das
nop
mov
rcl
ret
stos
xor
ss
nop
mov
leave
shl
cltd
sbb
mov
dec
das
pop
in
das
nop
imul
pop
js
adc
inc
mov
adc
jge
and
dec
pminsw
test
into
dec
mov
iret
dec
or
mov
mov
js
dec
das
nop
clc
or
addr16
mov
mov
das
pop
mov
das
nop
sbb
jecxz
nop
mov
cltd
dec
fcoml
es
in
jo
fwait
repnz
jne
push
iret
dec
xor
jecxz
das
nop
mov
dec
dec
fwait
mov
das
inc
cs
dec
cmp
dec
iret
loopne
je
fbld
jle
mov
das
jge
jnp
jmp
iret
dec
dec
xorl
xchg
push
mov
inc
cmc
out
pop
daa
jmp
das
jmp
dec
das
nop
mov
shr
ret
shll
scas
lret
mov
nop
mov
int3
rorb
ret
sub
and
add
aaa
jg
dec
mov
nop
shll
call
ss
xchg
loopne
das
nop
repz
movsl
sub
cmp
adc
ret
mov
lret
xchg
imul
enter
in
sub
aam
divb
adc
inc
aad
and
dec
pminsw
test
into
dec
mov
iret
dec
or
lea
mov
or
sti
fdiv
sub
dec
shlb
das
nop
shll
dec
ds
ss
xchg
loop
das
nop
idivb
cmpsl
xchg
addr16
add
xor
mov
dec
das
nop
mov
pminub
and
out
dec
das
nop
mov
rcl
ret
stos
xor
das
das
nop
mov
leave
sarb
pop
lock
lret
add
aaa
jg
or
dec
cmp
mov
lahf
inc
out
lret
aaa
jg
aad
and
decb
push
dec
mov
iret
dec
or
addr16
or
ds
sub
imul
xchg
dec
aaa
jg
pushf
sbb
mov
inc
xchg
mov
das
xor
or
sti
push
out
sub
daa
mov
das
push
es
dec
clc
pop
push
test
adc
in
inc
loopne
mov
rcr
mov
mov
mov
inc
das
nop
mov
jge
aad
jb
push
mov
aam
lcall
sbb
sbb
decb
addr16
dec
iret
dec
mov
iret
dec
add
loopne
aas
xchg
fs
xchg
imul
add
aaa
jg
dec
int
mov
das
nop
sarl
ljmp
fistl
cmc
cmpb
aaa
mov
lahf
inc
popa
subw
lcall
shr
ret
mov
xor
mov
mov
daa
ljmp
dec
das
nop
mov
mov
ljmp
xor
mov
je
movsl
pop
xor
add
insb
mov
adc
dec
mov
fdiv
sub
adc
mull
cli
push
adc
mov
mov
das
in
imul
sbb
in
dec
das
nop
mov
ret
ret
mov
xor
mov
rorb
sub
dec
das
nop
mov
insb
fcomi
cld
mov
xchg
pop
push
lcall
shr
ret
repz
aaa
das
nop
mov
rcl
jp
adc
mov
and
mov
movsl
inc
jg
int3
decb
jo
aas
ret
jl
mov
addb
dec
das
xor
or
sti
push
out
sub
sub
or
rcl
mov
dec
daa
mov
das
inc
rclb
cmc
in
mov
adc
cmp
xlat
mov
test
stos
sub
je
imul
and
decb
addr16
push
iret
dec
mov
iret
dec
add
rcrl
mov
cltd
sti
push
pop
xor
push
das
nop
mov
shr
ret
shll
scas
lret
mov
nop
mov
int3
rorb
sub
sub
pop
add
sarb
dec
aad
es
mov
cmovg
test
iret
dec
mov
iret
dec
or
addr16
jp
sbb
pushf
sbb
mov
inc
xchg
mov
das
xor
or
sti
push
out
sub
sub
or
cld
and
and
imul
mov
das
loopne
inc
loopne
and
xor
mov
out
lahf
imul
mov
fistpll
shrl
xchg
jmp
jg
push
dec
pop
inc
aad
es
mov
cmovg
test
iret
dec
mov
iret
dec
or
insb
and
add
aaa
jg
mov
sub
mov
inc
xchg
mov
das
xor
or
sti
push
out
sub
daa
mov
das
push
and
dec
adc
cmp
cmc
dec
psrlw
test
imulb
adc
aad
es
mov
cmovg
test
iret
dec
mov
iret
dec
add
mov
lock
xor
jmp
mov
pushl
out
fisubl
push
das
nop
mov
rcrb
ret
ret
xor
cmp
nop
mov
into
rcrb
dec
das
nop
mov
jl
lods
imulb
jge
cmp
nop
mov
add
lea
push
jl
shr
pop
jbe
das
xchg
sbb
shrl
push
lcall
shr
ret
lret
xor
cmp
nop
mov
int
jge
int3
int3
out
das
loop
dec
das
nop
mov
ret
lret
xor
cmp
nop
mov
int
add
pop
adc
xchg
pop
sbb
outsb
or
loop
aaa
jg
imul
imul
sbb
dec
das
nop
shll
call
ss
xchg
fisttps
nop
repz
cmp
lds
inc
imul
test
sub
sub
das
loopne
dec
das
nop
mov
mov
ljmp
xor
mov
jnp
push
push
dec
lods
pop
and
xor
push
mov
das
scas
mov
repz
dec
xchg
mov
das
lahf
imul
rcr
and
loopne
ljmp
loope
jne
inc
and
mov
dec
das
nop
mov
scas
dec
pop
lret
xor
inc
das
nop
mov
cmp
loope
clc
push
out
mov
ljmp
loope
xorb
in
jbe
inc
adc
out
inc
jl
mov
das
loopne
inc
loopne
ljmp
adc
dec
das
nop
and
dec
xchg
mov
das
fcmovnu
mov
imul
cmp
nop
mov
lock
adc
add
ljmp
out
adc
js
imul
push
das
nop
mov
mov
xor
cmp
nop
mov
rcl
cmpsl
outsb
inc
jnp
mov
dec
das
nop
inc
cmp
sbb
shrl
imulb
cli
mov
inc
xchg
mov
das
xor
or
sti
push
out
sub
sub
or
jle
dec
mov
sub
bound
push
add
test
mov
dec
mov
nop
shll
call
ss
xchg
lods
dec
das
nop
repz
dec
or
inc
cli
mov
jnp
xchg
mov
das
xor
or
sti
push
out
sub
mov
or
and
jne
jge
dec
das
nop
mov
ss
mov
scas
jnp
aad
jp
adc
testb
mov
sbb
jg
xor
imul
sbb
cli
xor
mov
mov
pop
inc
jg
dec
into
ja
dec
das
nop
shll
jmp
ss
xchg
stos
dec
das
nop
call
add
add
sbb
xchg
sub
mov
dec
jle
dec
das
xor
pop
pop
out
js
rcll
das
nop
mov
xor
or
mov
stos
pop
imul
and
sub
ljmp
out
mov
add
addr16
dec
das
nop
mov
ret
ret
mov
xor
mov
rcl
mov
sub
mov
inc
xchg
mov
das
xor
or
sti
push
out
sub
sub
or
es
cmpsb
sub
adc
xor
adc
stc
pop
jg
pop
inc
mov
dec
js
jge
call
sbb
dec
das
nop
shrl
push
ds
fistl
lods
dec
das
nop
bnd
in
addr16
imul
jg
outsb
dec
fwait
mov
das
xor
and
das
nop
mov
sbb
out
jbe
fistps
xchg
pop
mov
jecxz
cmp
add
mov
or
aad
and
dec
pminsw
test
into
dec
mov
iret
dec
add
mov
mov
push
xor
jno
add
in
addr16
imulb
cli
mov
inc
xchg
mov
das
xor
or
sti
push
out
sub
sub
or
jl
jmp
bound
and
aaa
jg
movl
out
mov
cmovg
test
iret
dec
mov
iret
dec
or
addr16
incb
sarb
aaa
jg
pushf
sbb
mov
sbb
hlt
mov
cmc
mov
fsub
mov
dec
mov
out
lret
sti
xor
dec
lret
dec
das
nop
shll
dec
ds
fistl
loope
das
nop
hlt
jns
or
jno
sbb
lret
sub
dec
das
nop
aas
nop
in
in
jno
add
lret
xchg
imul
cs
ret
stos
xor
cmp
nop
mov
leave
sarb
jge
ljmp
aaa
jg
lds
xor
clc
addr16
dec
das
nop
mov
shr
ret
shll
scas
lret
mov
nop
mov
int3
shlb
imulb
xor
push
sbb
aaa
jg
dec
das
nop
mov
or
push
jle
pop
mov
das
nop
js
nop
lock
loope
sbb
out
sbb
mov
das
packssdw
jle
mov
dec
inc
bound
pop
rol
jmp
mov
dec
dec
jl
dec
das
xor
and
pushf
mov
xchg
pop
cmp
sti
jl
sub
nop
mov
int
and
loopne
ljmp
nop
sti
pop
and
sub
stos
or
mov
pop
in
jbe
mov
dec
iret
in
inc
scas
mov
das
idivl
int3
or
mov
das
fdivr
orb
mov
stos
pushf
sub
push
das
nop
mov
ret
lret
xor
xor
nop
mov
int
xchg
xor
lahf
test
insb
lret
sub
aam
sbb
movsl
inc
jg
dec
leave
ja
dec
das
nop
shll
ds
fistl
loope
das
nop
icebp
jl
sub
and
inc
das
nop
mov
pop
xchg
fildll
inc
cwtl
out
nop
mov
xchg
push
or
nop
push
xchg
jg
cmpsl
mov
sbb
jg
jno
sbb
aaa
jg
dec
int
mov
das
nop
sarl
ljmp
fistl
cmc
cmpb
dec
mov
cwtl
push
sahf
aas
das
nop
mov
or
xor
jmp
and
adc
imulb
loope
dec
mov
nop
shll
call
ss
xchg
loope
das
nop
repz
mov
sub
sbb
std
lret
iret
and
loope
sbb
out
leave
das
nop
mov
shl
xor
pop
mov
xchg
mov
das
xor
or
sti
push
out
sub
and
or
xlat
addr16
imulb
jge
fwait
inc
das
nop
mov
js
inc
cmpsb
dec
jl
mov
lea
push
in
sarl
incl
out
addr16
cmc
sub
mov
inc
xchg
mov
das
xor
or
sti
push
out
sub
sub
or
sbb
imul
adc
jg
push
das
nop
mov
ret
ret
mov
xor
mov
shl
lds
imulb
js
dec
das
nop
mov
sti
lahf
and
jl
dec
das
nop
mov
loopne
and
loopne
ljmp
mov
into
jmp
out
sub
out
mov
dec
iret
idivb
dec
mov
out
lds
lock
jl
dec
das
nop
mov
xor
mov
das
nop
and
sar
out
sub
fbld
outsb
rorb
aad
and
decb
push
dec
mov
iret
dec
or
addr16
sbb
inc
jnp
mov
das
sbb
cmp
addr16
imulb
cli
mov
inc
xchg
mov
das
xor
or
sti
push
out
sub
mov
or
mov
mov
lahf
inc
aad
and
dec
pminsw
test
into
dec
mov
iret
dec
or
test
aad
and
decb
push
dec
mov
iret
dec
or
addr16
test
bound
aaa
jg
dec
das
nop
mov
movsb
dec
jbe
mov
nop
mov
xor
sub
mov
mull
das
nop
mov
rorb
pushf
sbb
mov
inc
xchg
mov
das
xor
or
sti
push
out
sub
mov
or
in
cmp
inc
xchg
mov
das
cmp
mov
add
sbb
addb
cmp
pop
jbe
inc
dec
jmp
in
jle
jl
cmp
nop
mov
xor
adc
jo
clc
sub
das
nop
and
mov
sub
cltd
js
mov
das
mov
xchg
adc
jl
dec
das
nop
mov
loopne
and
loopne
ljmp
jl
jge
jl
ja
jmp
adc
ss
mov
dec
xor
stos
push
push
cmpsl
iret
jecxz
mov
divb
push
ret
mov
cwtl
mov
das
out
xorb
in
jbe
out
dec
lret
dec
das
nop
shll
dec
ds
fistl
in
das
nop
hlt
jns
xor
call
test
mov
das
scas
in
pop
or
inc
test
mov
das
adc
and
add
aaa
jg
dec
leave
ja
dec
das
nop
shll
ds
fistl
stos
dec
das
nop
icebp
jl
out
sbb
cmp
inc
mov
movsl
inc
jg
dec
shlb
das
nop
shll
dec
ds
ss
xchg
cmpsl
dec
das
nop
idivb
cmp
mov
and
decb
push
dec
mov
iret
dec
add
mov
mov
mov
xchg
adc
xchg
fdivs
imul
sub
jg
mov
mov
std
inc
jg
std
mov
mov
fs
in
inc
das
nop
mov
out
int
adc
iret
scas
adc
ret
jl
add
js
fistps
into
mov
dec
cwtl
fmulp
lahf
mov
dec
cltd
push
pushf
adc
insb
pop
fucomi
addr16
lds
cli
mov
inc
xchg
mov
das
xor
or
sti
push
out
sub
mov
or
mov
cmp
cltd
lods
sbb
sbb
inc
jg
dec
shlb
das
nop
shll
dec
ds
ss
xchg
loopne
das
nop
idivb
imul
or
and
dec
jle
dec
das
aam
mov
in
mov
adc
push
jne
xchg
iret
enter
xorb
mov
das
nop
and
xor
or
mov
dec
das
sbb
test
push
jo
jbe
fbld
daa
nop
mov
adc
adc
mov
dec
iret
imul
jbe
cli
mov
inc
xchg
mov
das
xor
or
sti
push
out
sub
sub
or
and
ss
mov
insl
ss
sub
aaa
jg
or
imul
sbb
decb
addr16
dec
iret
dec
mov
iret
dec
add
lock
mov
inc
jg
stos
mov
xchg
push
dec
imul
stos
xor
jg
dec
das
nop
adc
inc
sbb
rorl
jle
jp
jg
jl
fdiv
sub
xor
add
mov
repnz
out
mov
popf
and
jg
xchg
mov
inc
pop
inc
mov
das
adcl
das
nop
mov
scas
nop
jne
das
sbb
sub
loope
dec
das
nop
mov
mov
jecxz
das
nop
jb,pt
pop
ds
and
xchg
xchg
in
aas
and
mov
xchg
mov
test
jge
aaa
jg
mov
rcrb
bound
fs
sub
cmp
xor
mov
mov
sbb
add
mov
cli
pop
jl
cmp
imul
sub
repnz
jl
dec
fwait
cmp
and
imul
nop
mov
das
in
dec
das
nop
mov
ret
ret
mov
xor
mov
shl
js
pushf
xchg
aam
scas
addb
adc
jne
notb
dec
das
insb
mov
dec
iret
shrb
daa
nop
mov
stos
jbe
jns
sbb
rcl
sbb
into
ja
dec
das
nop
shll
jmp
ss
xchg
cmpsl
dec
das
nop
call
outsl
repz
cmp
sub
inc
cmpsl
lcall
mov
nop
mov
jg
outsl
add
adc
imul
mov
sbb
insl
xor
jg
push
sub
dec
xlat
addr16
jge
iret
dec
xchg
sti
mov
jl
mov
sub
sub
dec
jmp
mov
sub
dec
xchg
sti
mov
jl
mov
sub
sub
push
rorl
ljmp
nop
mov
ret
ret
mov
xor
mov
rorb
inc
mov
mov
das
pop
loopne
das
nop
xchg
dec
sbb
cmp
xchg
jle
push
sahf
fisubrl
stc
sub
js
and
dec
into
ja
dec
das
nop
shll
jmp
ss
xchg
stos
dec
das
nop
call
insb
sbb
sub
iret
cmc
dec
cli
das
push
enter
decb
addr16
push
iret
dec
mov
iret
dec
or
addr16
jo
das
clc
xchg
imul
xor
jg
in
mov
das
cli
mov
inc
xchg
mov
das
xor
or
sti
push
out
sub
sub
or
das
nop
mov
gs
in
das
and
cmpsb
loope
mov
arpl
pop
add
sub
addr16
in
jg
mov
cmpl
xchg
mov
inc
mov
mov
das
dec
arpl
loopne
dec
das
nop
mov
mov
ljmp
xor
mov
insb
sub
imulb
cli
mov
fs
out
sub
mov
das
out
dec
das
nop
mov
rcl
ret
stos
xor
ss
nop
mov
leave
rcrb
bound
addr16
aad
and
decb
push
dec
mov
iret
dec
add
mov
mov
add
cmp
test
inc
dec
fwait
mov
das
addl
inc
cmpsl
es
das
jge
inc
das
nop
mov
stc
mov
out
xlat
cld
je
cmp
stc
mov
inc
xchg
mov
das
xor
or
sti
push
out
sub
and
dec
das
push
es
xor
mov
das
nop
enter
imul
dec
aad
dec
sbb
out
mov
psubsb
test
iret
dec
mov
iret
dec
testl
xchg
mov
das
jns
mov
cmp
ret
jbe
sbb
out
mov
psubsw
test
iret
dec
mov
iret
dec
testl
adc
rorb
fs
imul
pop
inc
aaa
jg
xchg
movsb
cltd
imul
cmpsb
xor
jg
scas
jecxz
lahf
inc
aad
and
decb
push
dec
mov
iret
dec
or
addr16
lods
pop
inc
and
dec
leave
ja
dec
das
nop
shll
ds
fistl
stos
dec
das
nop
icebp
jl
inc
aaa
and
add
nop
std
mov
ret
jl
mov
sub
fwait
xor
mov
dec
das
nop
mov
rcrb
ret
ret
xor
xor
nop
mov
into
shr
lock
je
mov
jecxz
nop
mov
xchg
insb
mov
push
dec
gs
fs
das
dec
das
nop
fwait
dec
das
nop
mov
mov
cwtl
ds
jg
popl
imul
mov
xor
pop
dec
das
nop
sbb
dec
das
nop
shll
dec
ds
fistl
in
das
nop
hlt
jns
sub
xor
sbb
psubw
push
das
nop
mov
mov
ljmp
xor
mov
ds
bound
in
das
xchg
mov
aad
and
decb
push
dec
mov
iret
dec
or
addr16
nop
fwait
inc
das
nop
mov
xchg
popf
pop
or
mov
sub
cmc
xor
decl
nop
adc
adc
movsb
add
mov
dec
das
nop
sbb
dec
das
nop
sarl
ljmp
fistl
cmc
cmpb
push
out
nop
mov
and
jnp
adc
sub
incb
fidivl
cmp
mov
dec
and
imul
test
es
mov
mov
das
jge
inc
das
nop
mov
and
jle
dec
das
out
and
rclb
or
in
sub
cmp
lds
imulb
pop
mov
das
nop
mov
daa
loope
cmp
das
nop
adc
daa
addr16
das
nop
mov
aad
es
mov
cmovg
test
iret
dec
mov
iret
dec
push
nop
mov
lock
negl
mov
inc
sbb
addr16
imulb
pop
jno
cmp
and
fisubrs
and
adc
sub
adc
inc
cli
mov
inc
xchg
mov
das
xor
or
sti
push
out
sub
sub
or
xor
xchg
mov
dec
aad
and
decb
push
dec
mov
iret
dec
add
jcxz
repz
sahf
mov
or
sub
rorl
dec
xbegin
std
mov
cmpb
mov
jbe
xchg
iret
insb
bound
aam
sub
dec
das
nop
xor
pop
nop
adc
aad
es
mov
cmovg
test
iret
dec
mov
iret
dec
add
mov
lock
jbe
cmp
mov
lods
cmp
nop
nop
mov
out
mov
das
loopne
dec
das
nop
mov
mov
ljmp
xor
mov
stc
rol
jl
mov
divb
lds
dec
aad
and
decb
push
dec
mov
iret
dec
push
nop
mov
mov
icebp
out
popa
ffreep
xchg
and
nop
inc
inc
fwait
mov
das
aad
aad
aad
mov
rcrl
lds
xlat
lcall
jg
fstps
xchg
mov
das
xor
or
sti
push
out
sub
mov
or
mov
ds
mov
imul
mov
dec
test
or
aaa
jg
jle
jl
dec
das
nop
mov
int
xchg
jl
insl
xor
dec
das
nop
sahf
inc
das
nop
mov
push
rcrl
push
shrb
and
fbld
int
xchg
jl
jge
jl
ja
jmp
mov
inc
sahf
pop
lret
mul
pop
ss
in
jbe
cli
mov
pushf
sub
dec
test
pusha
or
imul
test
cwtl
or
dec
sbb
bound
mov
add
int3
shrl
jb
sub
dec
test
pop
or
cltd
mov
push
sub
xchg
or
aas
insb
push
inc
xchg
call
cmp
loope
sbb
jge
push
dec
test
leave
fcomp
jae
inc
sub
mov
dec
clc
aaa
bound
shrb
mov
jo,pt
sub
sub
xchg
in
mov
xor
test
dec
test
gs
incl
or
sbb
cmpsb
imul
roll
icebp
sub
mov
push
sub
dec
fs
std
in
inc
add
sub
dec
adc
inc
repz
lds
test
test
sub
dec
fs
fisubrl
jne
inc
add
sub
dec
adc
jecxz
mov
cs
dec
and
sub
sub
xchg
xorl
xor
push
dec
test
pop
js
pusha
and
nop
test
xor
inc
icebp
jge
mov
sub
xchg
loope
sub
dec
fs
std
in
inc
inc
add
sub
dec
inc
jp
lret
xchg
js
adcb
mov
pop
insb
imul
dec
pop
adc
dec
test
inc
insb
xchg
out
dec
xor
test
dec
test
addr16
xchg
and
lds
cmp
ja
dec
test
dec
test
pop
or
cltd
jns
push
mov
and
test
xchg
or
cltd
movsb
jbe
add
jnp
mov
outsl
lods
das
es
test
call
loope
sub
dec
fs
std
in
inc
inc
add
sub
dec
inc
jp
rolb
ret
cmp
xchg
nop
dec
pop
adc
dec
test
inc
insb
xchg
out
dec
xor
test
dec
test
addr16
aas
jns
inc
lods
push
xor
test
mov
inc
mov
mov
test
pop
and
inc
xchg
nop
dec
push
adc
dec
test
inc
outsl
xchg
call
test
dec
test
fs
adc
pop
mov
int3
loope
sbb
jle
add
fimuls
es
movsb
stos
std
cmp
lods
xchg
addr16
test
xchg
xchg
and
dec
test
pusha
or
imul
test
cwtl
or
int
inc
test
das
pop
sub
dec
sub
mov
push
sub
dec
fs
std
in
inc
add
sub
dec
adc
mov
mov
sub
je
call
es
sub
cltd
loope
sub
dec
fs
inc
inc
add
sub
dec
inc
sbb
and
sbb
les
push
rclb
movsb
mov
add
push
jle
arpl
sub
imul
and
adc
and
test
andb
mov
xorb
movsb
lea
movb
xor
and
arpl
rol
and
dec
test
xchg
or
cltd
pop
and
push
shlb
mov
movsb
and
fnstsw
xchg
das
es
xchg
nop
dec
and
sub
sub
xchg
in
mov
xor
test
dec
test
gs
inc
or
shrl
mov
sub
add
rol
dec
icebp
jge
rcrb
shll
cs
jge
mov
xchg
pop
inc
or
cwtl
sbb
mov
pop
cld
arpl
sub
pop
mov
adc
and
test
mov
pusha
fwait
cmp
adc
lds
loopne
sub
dec
test
scas
inc
test
es
mov
stc
cs
test
into
aas
add
xor
lods
mov
and
fidivrs
popf
xor
dec
test
sarl
pop
cmpsl
cmp
dec
sub
dec
psllq
jns
jl
fimuls
movsl
sub
popf
repnz
jl
pop
push
rclb
add
aad
add
aad
add
jo
lret
icebp
bound
ja
dec
add
aad
mov
stos
rol
mov
aad
mov
sti
sub
insl
aad
add
add
aad
mov
lcall
stos
shll
add
aad
lods
push
xor
ret
cmpsb
or
lock
xor
out
xlat
dec
add
cmc
outsl
orb
lret
push
test
lret
fimuls
xchg
ja
out
lods
xchg
outsb
pop
rorl
adc
filds
aad
into
rcll
push
xchg
mov
add
pop
inc
and
inc
xchg
loop
out
adc
je
or
sti
aad
mov
int3
pop
mov
mov
mov
sbb
cmpsl
test
inc
aad
loope
sbb
xor
orb
dec
mov
dec
cmp
dec
cmpsl
mov
dec
loope
sbb
pop
icebp
inc
orb
dec
mov
pushf
push
movsl
movsb
loopne
mov
or
popa
fwait
out
dec
bound
jp
dec
add
aad
mov
pushf
mov
mov
aad
stos
push
loope
in
mov
adc
dec
dec
bound
jne
dec
add
aad
mov
lahf
mov
mov
aad
scas
push
aas
sub
jl
mov
cmpsl
loopne
aad
loope
sbb
jnp
inc
orb
dec
mov
add
jo
js
fdivs
dec
rorl
or
add
add
aad
xor
sub
stos
sbb
sub
shlb
mov
dec
rorl
push
mov
sbb
adc
scas
out
xlat
dec
add
cmc
jb
jge
je
lret
push
test
lret
loopne
add
xchg
jp
jle
xchg
dec
cmp
aad
add
dec
add
aad
mov
stos
rol
mov
aad
mov
mov
in
add
add
cld
cmpsb
das
iret
cmc
dec
inc
jno
out
aaa
test
push
inc
push
je
lock
and
add
mov
inc
jp
testb
dec
add
dec
add
push
xchg
test
dec
imul
int
sub
dec
add
xchg
or
int
cmp
xor
scas
dec
lods
out
xlat
dec
add
cmc
imul
dec
pop
push
test
lret
fimull
xchg
jae
out
fwait
jae
testl
scas
loopne
cmpsl
mov
loopne
and
test
aad
add
dec
add
aad
mov
stos
rol
mov
aad
mov
enter
loope
or
out
add
add
enter
nop
xchg
or
sub
testb
dec
add
aad
je
add
or
and
int
fsubp
cmp
adc
cmp
xchg
sahf
mov
ss
aad
sub
aad
add
xchg
and
dec
xchg
and
mov
movsl
or
aad
and
in
and
pop
dec
push
je,pt
mov
adc
rclb
add
aad
lock
aad
fldlg2
out
addr16
jo
mov
out
xor
jmp
and
out
clc
sbb
push
mov
repz
or
jae
aad
add
test
and
mov
mov
xorl
aad
add
mov
push
pop
fwait
push
sahf
inc
dec
mov
icebp
mov
or
es
add
scas
dec
mov
xlat
dec
add
cmc
jo
jg
test
lret
push
test
lret
xchg
js
cmc
inc
dec
mov
cld
sub
pop
mov
lea
insb
dec
fdivp
or
les
jbe
dec
add
aad
mov
mov
mov
aad
scas
push
jge
xchg
dec
mov
and
dec
xchg
dec
ret
push
leave
aad
add
bound
jl
dec
add
aad
mov
lcall
stos
shll
aad
lods
push
aaa
mov
or
sub
loopne
aad
loope
sbb
pop
icebp
inc
orb
dec
mov
rorl
push
adc
sbb
pop
push
dec
lret
scas
sbb
dec
add
aad
mov
stos
rol
mov
aad
mov
sub
ds
xchg
movsb
push
add
aad
cli
aad
imul
outsb
dec
std
lahf
addr16
js
rolb
jae
push
push
xchg
cmp
inc
int
div
or
popa
fwait
hlt
dec
bound
jp
dec
add
aad
mov
pushf
mov
mov
aad
stos
push
mov
mov
cmp
les
jne
dec
add
aad
mov
lahf
mov
mov
aad
scas
push
xchg
inc
jbe
orb
cli
lea
cmp
sbb
aad
add
mov
divl
stc
add
int3
leave
int
aad
add
sbb
dec
add
dec
dec
add
aad
xchg
jle
add
aad
lock
push
pop
xchg
int3
les
aad
inc
out
shlb
jbe
dec
add
aad
mov
mov
mov
aad
scas
push
xchg
dec
add
data16
mov
mov
cmp
inc
addr16
mov
add
xchg
repnz
inc
xlat
dec
add
push
iret
xchg
pushf
aas
test
icebp
or
aad
add
das
cld
dec
cli
aad
fwait
and
jle
aad
push
pushf
or
aad
add
jp
int
int
test
ds
or
xchg
je
fsts
dec
add
dec
stos
fdivrl
loop
cmp
cs
add
aad
xchg
xchg
fistl
shll
dec
and
mov
ret
sbb
cmp
pushf
and
imul
add
int3
lock
aad
sub
mov
mov
aad
dec
cld
icebp
lock
bound
jne
dec
add
aad
mov
lahf
mov
mov
aad
scas
push
push
leave
dec
rolb
stos
rorb
aad
out
aad
and
ds
inc
in
lds
and
outsb
cmp
cmp
enter
mov
push
dec
adc
lock
sub
dec
clc
cli
aad
jl
aad
add
dec
cmp
aad
test
aad
add
pop
dec
add
aad
jl
div
or
fcomi
dec
int
div
or
jae
aad
add
test
and
ret
aad
add
dec
je
fildl
dec
inc
call
insb
xor
lock
jl
jno
mov
adc
out
loop
int
add
dec
add
cs
aad
lods
push
mov
das
push
mov
lock
int3
les
aad
cmpsl
cmpsl
loopne
aad
loope
sbb
jnp
inc
orb
dec
mov
scas
push
lret
push
push
out
dec
int
add
lock
int
inc
rclb
add
aad
add
dec
add
aad
mov
stos
rol
mov
aad
mov
lcall
lods
xchg
mov
or
lods
dec
rcll
or
rorb
scas
dec
scas
out
xlat
dec
add
cmc
jno
jle
insb
push
test
lret
loop
add
cwtl
jns
cs
sub
fmull
cmp
hlt
outsl
cmc
das
adc
out
and
sub
rcl
sbb
stos
cld
aad
adcb
mov
push
pushf
div
or
int3
les
mov
dec
loope
sbb
jae
inc
orb
dec
mov
mov
dec
rorl
or
rorl
mov
mov
lock
les
jne
dec
add
aad
mov
lahf
mov
mov
aad
scas
push
dec
push
mov
int3
lea
dec
add
loope
add
dec
add
aad
mov
stos
rol
mov
aad
mov
inc
daa
aas
insb
mov
icebp
or
xchg
inc
int
mov
dec
loope
sbb
pop
icebp
inc
orb
dec
mov
out
out
add
fildll
cmp
inc
push
scas
sub
inc
mov
push
add
rol
push
xchg
mov
not
lock
pop
inc
fildll
xchg
jle
mov
jns
sub
dec
push
sub
scas
out
xlat
dec
add
cmc
jb
jge
je
lret
push
test
lret
xchg
jp
int3
movsl
push
fists
mov
inc
aad
fwait
dec
ds
add
aad
push
mov
shrl
addr16
add
aad
out
aad
mov
lahf
psubsb
fildl
mov
add
push
jb
ja
filds
aad
into
incb
mov
mov
jl
scas
xchg
cmc
bswap
jb
insl
aad
sub
aad
add
shll
aad
add
pop
xor
dec
inc
iret
adc
cmp
rclb
sarb
jle
cmp
dec
mov
cmpsl
cmpsl
loopne
aad
loope
sbb
jnp
inc
orb
dec
mov
repnz
jp
stos
sub
mov
jnp
loop
mov
dec
add
aad
dec
fstl
xchg
aad
add
js
aad
add
xchg
and
dec
xchg
and
ret
aad
add
ja
aam
pop
imul
imul
add
dec
add
scas
dec
mov
xlat
dec
add
cmc
outsl
orb
lret
push
test
lret
loop
add
xchg
ja
inc
in
mov
or
in
add
ljmp
idivl
fs
jl
add
aad
insb
mov
xor
mov
scas
dec
scas
out
xlat
dec
add
cmc
jno
jle
insb
push
test
lret
fisttps
cwtl
jns
scas
les
mov
push
xchg
xor
rclb
xchg
push
outsl
test
aad
loope
sbb
jnp
inc
orb
dec
mov
push
dec
shl
dec
movl
enter
dec
cmp
xchg
inc
aad
mov
inc
cmp
push
xchg
mov
not
dec
inc
mov
or
rorl
or
sub
out
repnz
js
addr16
mov
mov
mov
icebp
bound
ja
dec
add
aad
mov
stos
rol
mov
aad
mov
or
leave
lcall
dec
dec
mov
lock
repnz
bound
jne
dec
add
aad
mov
lahf
mov
mov
aad
scas
push
sub
lcall
inc
add
aad
xchg
adc
add
jbe
aad
add
shll
aad
add
iret
or
dec
mov
add
scas
dec
scas
out
xlat
dec
add
cmc
jno
jle
insb
push
test
lret
loope
add
cwtl
jns
leave
dec
ret
jl
sbb
je
rorb
pushf
mov
aas
pop
int3
aad
add
push
fcos
int
and
jne
aad
add
mov
and
mov
movsb
or
popf
daa
stc
and
cmp
rorb
cmp
sbb
es
adc
pop
cmp
je
test
inc
aad
loope
sbb
xor
orb
dec
mov
sbb
sbb
rclb
inc
adc
fwait
dec
ds
mov
int3
ret
in
aad
sub
and
out
pop
add
scas
adc
mov
decb
inc
icebp
cli
and
cmpsl
cmpsb
loopne
aad
loope
sbb
xchg
icebp
inc
orb
dec
sarb
sub
push
das
fwait
insl
aad
dec
clc
hlt
lock
repnz
js
addr16
stos
xorb
jg
aad
add
pop
jge
popa
pop
add
int
adcb
repz
cmp
scas
dec
lods
out
xlat
dec
add
cmc
imul
dec
pop
push
test
lret
loope
add
xchg
jae
adcb
ljmp
add
scas
dec
stos
out
xlat
dec
add
cmc
insl
orb
lret
push
test
lret
jecxz
add
xchg
jne
cmp
dec
add
dec
ret
clc
lds
dec
add
aad
add
dec
add
aad
mov
stos
rol
mov
aad
mov
ss
clc
insl
jge
dec
aad
rcr
adc
inc
inc
rclb
add
aad
push
add
lock
lods
dec
cmp
add
loopne
add
cs
out
orl
std
pop
shll
jge
add
aad
push
fidivrl
out
mov
dec
loope
sbb
pop
icebp
inc
orb
dec
mov
pandn
cmp
mov
sub
rclb
andb
ret
sbb
sbb
dec
add
dec
mov
fwait
and
test
cmp
scas
dec
mov
xlat
dec
add
cmc
jo
jg
test
lret
push
test
lret
loope
add
xchg
js
ja
xchg
pop
enter
addr16
add
aad
aaa
adc
xorb
movsl
jo
jg
mov
call
scas
dec
cmpsl
movsb
loopne
aad
loope
sbb
arpl
inc
orb
dec
mov
loop
sbb
loope
jge
aad
add
rorl
arpl
or
dec
add
fistpll
mov
enter
push
insl
test
xor
aaa
int3
enter
dec
mov
mov
add
movsl
js
rclb
aad
test
aad
add
push
ds
aad
add
cmp
mov
scas
dec
stos
out
xlat
dec
add
cmc
outsb
orl
fisttps
xchg
jbe
push
cs
leave
rcll
sbb
cmpsl
imul
adc
cmp
shrb
dec
add
cmc
jno
jle
insb
push
test
lret
fimuls
cwtl
jns
mov
xor
je
or
ja
aad
add
mov
mov
cmpsb
or
lcall
or
daa
aad
neg
sbb
xchg
loop
xchg
add
int
add
add
aad
mov
lcall
stos
shrl
add
aad
lods
push
cmp
lods
outsb
imul
fidivs
cmp
cs
or
aad
add
aad
mov
sub
add
bound
jne
dec
add
aad
mov
lahf
mov
mov
aad
scas
push
hlt
out
dec
jp
int
cli
aad
jnp
dec
add
ja
aad
add
mov
mov
cmpsb
or
into
and
push
inc
out
or
int
je
out
or
hlt
add
dec
add
jbe
aad
add
shll
aad
add
cmpsb
dec
add
inc
inc
rclb
add
aad
add
dec
add
aad
mov
fwait
mov
mov
aad
stos
push
loope
push
movsl
dec
mov
rcrl
imul
inc
jp
call
dec
mov
dec
stos
out
xlat
dec
add
cmc
outsb
orl
loope
add
xchg
jbe
shll
lock
lahf
add
int
fwait
dec
sbb
jge
cwtl
dec
add
scas
dec
scas
out
xlat
dec
add
cmc
jno
jle
insb
push
test
lret
fisttps
cwtl
jns
or
adc
dec
test
xor
ds
aad
add
inc
add
or
aad
add
jns
aad
add
cltd
and
dec
xchg
and
mov
test
mov
sbb
fsubp
cmp
adc
lret
movl
dec
push
cmpsl
jle
fwait
push
and
jbe
dec
add
aad
mov
mov
mov
aad
scas
push
xor
and
mov
hlt
dec
xchg
mov
inc
or
rclb
add
aad
push
je
lock
popa
xor
dec
mov
or
jns
jge
jno
lret
icebp
bound
js
dec
add
aad
mov
stos
rol
mov
aad
mov
jne
mov
int3
aad
add
mov
lcall
dec
stos
out
xlat
dec
add
cmc
outsb
orl
fimuls
xchg
jbe
cmpsb
lret
into
jae
data16
hlt
sbb
enter
dec
add
inc
in
imul
cmp
ja
aad
add
mov
ret
aad
add
mov
dec
scas
jmp
clc
imul
cmp
jg
add
aad
jl
in
lock
bound
jns
dec
add
aad
mov
fwait
mov
mov
aad
stos
push
cli
stc
rolb
bound
jl
dec
add
aad
mov
lcall
stos
shrl
add
aad
lods
push
push
push
into
xor
mov
shrb
arpl
cmp
dec
out
rclb
add
aad
or
xlat
xchg
hlt
sbb
dec
stos
out
xlat
dec
add
cmc
insl
orb
lret
push
test
lret
fisttps
xchg
jne
stos
les
mov
cmp
int3
lea
movsl
jp
jne
jb
cwtl
cs
aad
push
aad
test
cmpsb
repnz
inc
cltd
jge
cmp
mov
jp
aaa
add
aad
ljmp
xchg
dec
outsb
inc
sbb
jno
lock
add
xor
test
mov
fsts
sbb
sub
shrb
mov
iret
fildll
imul
pop
dec
xchg
cld
mov
aas
mov
popa
fwait
hlt
dec
bound
js
dec
add
aad
mov
stos
rol
mov
aad
mov
lret
ja
dec
cmpsl
movsb
loopne
aad
loope
sbb
arpl
inc
orb
dec
mov
push
cs
add
aad
aad
ret
fnstenv
push
sub
dec
fildl
xor
mov
jle
xlat
dec
add
jne
aad
add
mov
and
aad
add
sbb
inc
repnz
mov
insl
aad
sub
aad
add
mov
and
mov
movsb
or
jg
add
aad
add
dec
add
aad
mov
stos
rol
mov
aad
mov
and
push
xor
or
bound
jne
dec
add
aad
mov
lahf
mov
mov
aad
scas
push
pop
mov
adc
dec
rorl
dec
mov
aam
aas
fidivl
bound
jne
dec
add
aad
mov
lahf
mov
mov
aad
scas
push
sarl
in
xorl
mov
aas
out
pushf
bound
ja
dec
add
aad
mov
stos
rol
mov
aad
mov
mov
dec
add
test
out
pop
pop
inc
push
icebp
sti
rolb
push
lock
inc
add
cmp
aad
dec
push
aas
mov
jmp
pop
pop
imul
aad
add
jl
jle
aad
je
cmc
lock
dec
add
jne
aad
add
mov
and
mov
movsb
or
sub
fistpl
mov
fucomip
aad
loope
aam
mov
or
mov
lds
jp
aad
add
mov
and
mov
cmpsl
or
cmp
shrl
or
cmp
add
pop
clc
dec
pop
test
or
popa
xor
dec
bound
ja
dec
add
aad
mov
stos
rol
mov
aad
mov
aam
jns
or
inc
cmp
mov
dec
add
aad
mov
pushf
mov
mov
aad
stos
push
inc
adc
dec
adcb
dec
lea
test
dec
mov
xlat
dec
add
cmc
outsl
orb
lret
push
test
lret
loope
add
xchg
ja
mov
lods
pop
dec
mov
aam
int
add
push
cmp
aad
push
fstpt
out
aad
fwait
dec
and
and
loop
push
or
aad
loope
sbb
xchg
icebp
inc
orb
dec
sarb
repz
lahf
sarl
sbb
dec
add
aad
mov
stos
rol
mov
aad
mov
mov
hlt
inc
fidivs
fdivs
ret
add
inc
out
loopne
adc
mov
sbb
je
inc
aad
add
push
or
aad
loope
sbb
xor
orb
dec
mov
mov
aad
call
hlt
movsl
sbb
dec
add
add
scas
dec
mov
xlat
dec
add
cmc
jo
jg
test
lret
push
test
lret
fimuls
xchg
js
mov
sbb
das
rorl
movl
aas
call
shlb
lock
jg
dec
int
div
or
insl
call
dec
rorl
or
push
shrb
rcl
dec
add
mov
test
push
std
and
mov
sbb
out
cmpsb
cmp
shr
mov
rcrb
xchg
dec
insl
cmpsl
mov
dec
loope
sbb
jae
inc
orb
dec
mov
hlt
or
mov
mov
sbb
lea
subl
insl
orb
lret
push
test
lret
fimull
xchg
jne
push
mov
or
push
jp
lret
dec
rcll
or
rorb
dec
adc
fwait
dec
inc
insl
cmpsl
cmpsb
loopne
aad
loope
sbb
xchg
icebp
inc
orb
dec
sarb
mov
dec
and
dec
cmp
add
mov
dec
mov
or
mov
insb
shl
or
bound
jp
dec
add
aad
mov
pushf
mov
mov
aad
stos
push
push
fildll
dec
inc
cmp
rclb
mov
cmp
sub
jne
mov
mov
and
sbb
and
rcrb
or
rcl
loop
dec
mov
xlat
dec
add
cmc
outsl
orb
lret
push
test
lret
fisttps
xchg
ja
mov
mov
pop
and
shlb
pop
test
movsb
loopne
aad
loope
sbb
arpl
inc
orb
dec
mov
jns
pop
sub
mov
es
rorb
aad
push
loope
ret
loopne
sbb
stc
xchg
mov
push
movsb
lret
lock
mov
mov
aad
add
js
lock
dec
add
pushf
fs
sbb
or
rclb
std
rolb
jnp,pt
aad
add
addr16
int3
mov
sub
fcomi
pop
mov
clc
pop
push
popf
lcall
fsubl
imul
push
es
dec
xor
xchg
out
or
jg
mov
mov
out
xlat
dec
add
cmc
jb
jge
je
lret
push
test
lret
loopne
add
xchg
jp
pop
aad
aam
testl
pop
enter
fcoms
imul
xchg
add
rolb
loopne
aad
loope
sbb
jnp
inc
orb
dec
mov
jnp
sub
lds
xor
push
mov
or
jae
aad
add
test
and
mov
mov
leave
inc
int3
scas
dec
scas
out
xlat
dec
add
cmc
jno
jle
insb
push
test
lret
fimuls
cwtl
jns
xchg
ret
imul
or
aad
hlt
mov
scas
sbb
mov
mov
stos
dec
xchg
in
stos
sbb
dec
scas
out
xlat
dec
add
cmc
jno
jle
insb
push
test
lret
fisttpll
cwtl
jns
int
pushf
xor
aad
sub
cltd
fidivs
inc
sub
mov
in
add
cs
add
aad
ret
ss
jmp
cmp
cmpsl
cmpsl
loopne
aad
loope
sbb
jnp
inc
orb
dec
mov
xor
ss
mov
mov
mov
cmpsl
cmpsb
loopne
aad
loope
sbb
xchg
icebp
inc
orb
dec
sarb
frstor
and
dec
sbbb
dec
cmp
add
stos
hlt
sbb
bound
jne
dec
add
aad
mov
lahf
mov
mov
aad
scas
push
fcmovu
cld
aad
mov
fcomip
mov
push
xchg
add
int
add
dec
add
aad
mov
stos
rol
mov
aad
mov
lret
adc
mov
int
add
aam
add
lcall
insl
aad
sub
aad
add
test
and
mov
mov
cmc
inc
rclb
aad
mov
cwtl
push
andb
cmp
and
sub
aad
add
cmp
je
in
lock
jg
dec
push
dec
add
jp
aad
add
mov
and
aad
add
ss
aas
pop
movsb
pop
stos
gs
add
add
int3
enter
dec
mov
cmp
pop
mov
fwait
sbb
add
push
xor
aad
push
and
lock
decl
int3
sar
aad
add
dec
add
or
aad
add
cmpb
dec
fcomip
aad
add
dec
add
into
mov
cmp
xor
into
xchg
add
sbb
jnp
dec
bound
jl
dec
add
aad
mov
lcall
stos
shll
add
aad
lods
push
jl
orl
adc
cmp
add
sub
dec
test
scas
dec
scas
out
xlat
dec
add
cmc
jno
jle
insb
push
test
lret
fimull
cwtl
jns
jbe
inc
cmpb
mov
or
ds
int3
les
movsl
loopne
aad
loope
sbb
mov
inc
orb
dec
shll
xchg
daa
cmp
cmp
in
mov
mov
dec
loope
sbb
jae
inc
orb
dec
mov
and
push
cmp
movsl
push
sarb
jno
jne
outsb
add
mov
std
stos
lock
lret
sbb
dec
add
nop
jp
mov
jns
aad
add
cltd
and
dec
xchg
and
rcl
add
mov
sahf
jge
mov
sbb
je
xor
cmpsl
loopne
aad
loope
sbb
jnp
inc
orb
dec
mov
arpl
fldl
shlb
push
cmpsl
mov
dec
loope
sbb
jae
inc
orb
dec
mov
adc
pusha
bound
rolb
dec
jp
int3
dec
push
add
sub
and
cltd
fdivrl
cmpsb
push
mov
push
addr16
lock
movsb
loopne
aad
loope
sbb
arpl
inc
orb
dec
mov
ja
xor
aad
add
jne
aad
add
mov
and
mov
movsb
or
rcrb
in
out
lock
rcll
sub
inc
sbb
mov
ss
add
loopne
add
xchg
mov
jbe
inc
mov
repnz
xor
lock
and
shlb
dec
add
lret
and
adc
add
inc
mov
icebp
ja
dec
inc
outsb
mov
adc
mov
sub
shrb
dec
add
cmc
insl
orb
lret
push
test
lret
fimull
xchg
jne
push
std
xor
ds
xor
lock
pop
hlt
dec
cwtl
add
sti
int3
dec
inc
push
pusha
or
rcrl
int3
sbb
leave
mov
out
int
add
cli
cmp
cmpsb
out
xchg
or
cmpsl
cld
movb
xor
aad
jp
out
jle
mov
cmp
bound
dec
push
sbb
cmp
rclb
mov
cmp
push
loopne
imul
pop
insl
aad
sub
aad
add
mov
and
rcl
add
push
cli
adc
sbb
dec
mov
xlat
dec
add
cmc
outsl
orb
lret
push
test
lret
fimuls
xchg
ja
cs
cmp
jg
dec
stos
out
xlat
dec
add
cmc
outsb
orl
loopne
add
xchg
jbe
inc
push
aam
lock
mulb
sarl
cmp
add
cli
aad
cmpsl
movsl
loopne
aad
loope
sbb
mov
inc
orb
dec
shll
daa
and
inc
movsb
mov
or
aad
out
push
push
das
inc
mov
sar
cmpsl
iret
test
sbb
cmp
add
ja
aad
add
mov
aad
add
sbbb
pop
xor
inc
aad
fwait
dec
inc
test
scas
dec
scas
out
xlat
dec
add
cmc
jb
jge
je
lret
push
test
lret
in
add
xchg
jp
pop
push
negl
int
inc
lret
int3
les
push
push
inc
cmp
cmp
in
mov
data16
mov
jp
std
dec
and
out
lret
shlb
or
popa
xlat
cmpsb
xchg
cmp
pop
stos
jne
outsb
mov
cs
add
aad
call
dec
pop
adc
int
aam
int
add
push
mov
aad
add
dec
add
aad
mov
mov
mov
aad
scas
push
mov
add
sub
out
fwait
dec
dec
aad
sub
aad
add
mov
jnp
jnp
or
push
roll
jp
aad
add
mov
and
mov
cmpsl
or
push
aad
and
sbb
rclb
xchg
movsb
outsb
cmp
cmp
inc
std
loop
cs
aad
ljmp
xor
rolb
hlt
jecxz
or
bound
jp
dec
add
aad
mov
pushf
mov
mov
aad
stos
push
lahf
imul
mov
sbb
pop
sbb
sbb
rclb
hlt
movsl
sbb
dec
add
add
scas
dec
lods
out
xlat
dec
add
cmc
imul
dec
pop
push
test
lret
jecxz
add
xchg
jae
cmpl
cmp
push
mov
fisubrl
cmp
scas
dec
scas
out
xlat
dec
add
cmc
jb
jge
je
lret
push
test
lret
fimuls
xchg
jp
mov
stos
rorl
subl
or
dec
add
int
insb
xor
lock
jae
aad
add
test
and
ret
aad
add
jae
xchg
mov
jno
aad
sub
aad
add
mov
and
mov
cmpsl
or
sarb
push
push
filds
dec
sbb
mulb
out
xlat
dec
add
cmc
outsl
orb
lret
push
test
lret
loope
add
xchg
ja
jl
xchg
int3
rcrb
sub
rclb
insb
lods
sbb
sbb
rclb
cmpsb
sbb
push
sbb
cmp
fisttps
add
cmp
cmpb
xlat
dec
add
cmc
jno
jle
insb
push
test
lret
loop
add
cwtl
jns
pop
and
insb
adc
lock
fldcw
int3
aad
add
int3
lea
addr16
add
dec
add
mov
sbb
fs
aas
mov
fdivs
sbb
xchg
dec
aam
aas
push
lea
rorb
add
aad
orb
arpl
leave
aad
add
inc
ficompl
mov
lock
rorl
movl
lds
imul
ss
insl
sub
cmp
dec
add
mov
clc
sbb
xchg
dec
jnp
dec
faddl
icebp
or
int
xchg
scas
dec
stos
out
xlat
dec
add
cmc
insl
orb
lret
push
test
lret
fimuls
xchg
jne
mov
sbb
dec
loope
aad
add
int
add
dec
add
aad
mov
mov
mov
aad
scas
push
push
fbstp
repz
mov
mov
das
cmp
scas
dec
lods
out
xlat
dec
add
cmc
imul
dec
pop
push
test
lret
in
add
xchg
jae
int3
mov
ja
mov
mov
cs
add
aad
addr16
pop
fstl
sti
aam
adc
cmpsl
jb
jg
inc
jns
aad
add
cltd
and
dec
xchg
and
rcl
add
xchg
in
fisttpll
cmpsl
mov
sbb
mov
or
roll
bound
jne
dec
add
aad
mov
lahf
mov
mov
aad
scas
push
jmp
inc
sbb
mov
dec
adc
dec
leave
inc
int3
scas
dec
mov
xlat
dec
add
cmc
outsl
orb
lret
push
test
lret
fimuls
xchg
ja
pop
xchg
mov
xorl
push
add
movsl
jp
cwtl
lahf
jo
push
xlat
dec
add
mov
mov
aad
ret
jecxz
push
addr16
cmpsl
movsl
loopne
aad
loope
sbb
mov
inc
orb
dec
shll
ficoms
imul
int
add
jne
aad
add
mov
and
mov
movsb
or
imul
xor
lock
jae
aad
add
test
and
mov
mov
shl
pushf
rorl
dec
stos
aad
and
add
add
cmp
cmpsl
movsl
loopne
aad
loope
sbb
mov
inc
orb
dec
shll
jnp
gs
cwtl
gs
stos
push
lods
sbb
and
sarb
push
aam
aas
addb
outsl
mov
aad
add
aad
mov
sub
ret
cmp
add
jl
andb
cmp
and
mov
jmp
push
stos
insb
fwait
sbb
jmp
cmpsl
cmpsb
loopne
aad
loope
sbb
xchg
icebp
inc
orb
dec
sarb
or
inc
xlat
orb
fsts
rclb
add
aad
add
add
aad
mov
lcall
stos
shll
add
aad
lods
push
test
mov
inc
mov
push
sbb
aad
add
dec
add
aad
mov
mov
mov
aad
scas
push
mov
jae
dec
push
sbb
shrb
mov
xor
add
add
inc
add
aad
add
dec
add
aad
mov
lahf
mov
mov
aad
scas
push
adc
xor
adc
jbe
dec
add
jp
aad
add
mov
and
mov
cmpsl
or
pop
lea
add
dec
add
aad
add
dec
add
aad
mov
fwait
mov
mov
aad
stos
push
mov
faddl
push
lea
inc
bound
rclb
pop
xor
push
sub
loope
int
cmpsb
loopne
aad
loope
sbb
xchg
icebp
inc
orb
dec
sarb
fwait
push
and
cld
aad
sub
sub
dec
ds
int3
les
aad
add
dec
add
dec
mov
cltd
sbb
xor
shrb
dec
add
cmc
jno
jle
insb
push
test
lret
loop
add
cwtl
jns
dec
lret
mov
or
sar
aad
stos
addr16
mov
icebp
bound
jp
dec
add
aad
mov
pushf
mov
mov
aad
stos
push
pop
icebp
adc
into
dec
add
scas
imul
aaa
or
scas
out
rorl
mov
sub
lock
aad
cmpsl
test
inc
aad
loope
sbb
xor
orb
dec
mov
inc
in
xchg
dec
rorb
jnp
sbb
ffreep
push
fdiv
lock
aad
add
dec
add
aad
mov
lahf
mov
mov
aad
scas
push
sub
mov
popf
in
push
cmp
inc
cmp
mov
out
aad
ja
mov
into
add
push
push
pop
pop
rcl
add
fildll
in
lock
push
mov
sbb
dec
add
aad
mov
stos
rol
mov
aad
mov
popa
ja
push
outsl
pop
and
int3
push
leave
aad
add
sar
dec
sarl
jp
out
dec
pop
sub
scas
dec
mov
xlat
dec
add
cmc
jo
jg
test
lret
push
test
lret
loopne
add
xchg
js
and
pop
add
filds
mov
pop
fsubr
lock
cs
add
aad
push
lods
mov
jb
ret
icebp
inc
dec
sub
lock
subl
add
dec
add
aad
mov
lahf
mov
mov
aad
scas
push
cmpsb
es
xchg
aas
mov
xchg
adc
sub
shrb
dec
add
cmc
insl
orb
lret
push
test
lret
loopne
add
xchg
jne
jg
movsb
jno
xchg
leave
jns
dec
stos
out
int
add
int
xchg
insl
aad
sub
aad
add
mov
and
mov
movsb
or
scas
jbe
xor
add
xor
pop
sbbb
movsb
mov
pop
in
mov
cmp
jae
push
push
call
and
pop
mov
addl
inc
push
ret
pop
test
sarb
fsubs
repz
mov
shr
jns
jge
mov
mul
jmp
cmp
sub
ja
mov
adc
add
jmp
inc
and
or
mov
mov
add
push
mov
pop
mov
jmp
mov
and
and
and
add
mov
cmp
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
pop
inc
call
mov
sub
mov
test
je
mov
call
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
shll
sti
jno
add
xor
loope
fmuls
sub
push
push
call
and
pop
mov
addl
inc
push
ret
aas
cmp
pop
das
push
jge
cmp
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
fprem1
ljmp
mov
and
or
pop
add
add
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
ret
mov
mov
movl
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
inc
addl
push
add
add
xchg
lds
or
or
pop
add
jne
push
push
call
and
pop
mov
addl
inc
push
ret
loope
cwtl
iret
jp
icebp
out
inc
incl
push
push
call
and
pop
mov
addl
inc
push
ret
inc
mov
sahf
loop
cmp
daa
pushl
call
add
int3
fstpt
lds
push
mov
mov
mov
xor
call
mov
nop
push
push
call
and
pop
mov
addl
inc
push
ret
sub
or
add
or
iret
rcrl
add
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
in
test
cmp
je
and
fmuls
cmc
sub
jmp
aam
jecxz
adc
xchg
add
add
adc
add
or
movsb
aam
inc
aas
rolb
xchg
cmp
xlat
mov
or
add
or
pop
movsb
cmpsl
add
call
and
pop
mov
addl
inc
push
ret
cltd
dec
push
call
mov
inc
loop
sbb
add
pop
cmc
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
icebp
pop
dec
scas
xor
mov
mov
sub
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
and
push
inc
sbb
jp
rorl
push
add
add
xchg
mov
fmuls
jmp
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
popa
call
lcall
cwtl
clc
mov
pop
lea
nop
jnp
pusha
push
push
rdtsc
pop
pop
push
pop
popa
push
push
pusha
push
push
rdtsc
pop
pop
jmp
inc
jb
push
cltd
fwait
imul
add
add
add
and
pop
mov
addl
inc
push
ret
fsubrl
or
add
xchg
push
or
fisubrl
jmp
fucom
leave
enter
movsb
cwtl
pop
push
push
push
push
call
and
pop
mov
addl
inc
push
ret
in
sbb
add
mov
lea
add
nop
jmp
flds
push
pop
push
pusha
jmp
out
lea
sub
call
or
push
jmp
icebp
pop
jg
jle
push
outsl
rdtsc
pusha
popa
pop
pop
popa
nop
push
push
call
and
pop
mov
addl
inc
push
ret
fwait
adc
imul
or
or
push
push
call
and
pop
mov
addl
inc
push
ret
stc
lods
out
mov
inc
inc
sub
push
push
push
call
and
pop
mov
addl
inc
push
ret
inc
or
sub
adc
add
aam
sbb
ret
lret
sub
dec
je
pop
popa
call
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
adc
add
inc
sub
fildll
mov
shrl
or
or
or
shrl
push
call
and
pop
mov
addl
inc
push
ret
lods
adc
cmpsb
mov
sti
incl
push
push
call
and
pop
mov
addl
inc
push
ret
inc
adc
add
add
aas
inc
inc
dec
xor
add
add
add
pop
sub
mov
cmpl
jbe
mov
mov
mov
mov
and
push
push
call
and
pop
mov
addl
inc
push
ret
lea
aaa
sbb
addl
je
jmp
loope
push
sarl
out
lods
dec
add
add
or
jne
push
push
call
and
pop
mov
addl
inc
push
ret
add
or
or
je
mov
jmp
call
inc
mov
cli
daa
das
jno
mov
pop
movl
jmp
rcl
sti
or
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
push
push
mov
pop
movl
xor
lea
push
push
call
and
pop
mov
addl
inc
push
ret
lret
mov
subb
inc
fildl
jmp
mov
mov
pusha
movzwl
jmp
cmp
test
mov
test
je
movswl
call
jmp
push
les
push
pusha
push
push
pusha
popa
rdtsc
push
pop
pop
pop
push
pusha
popa
pop
popa
mov
mov
jmp
mov
mov
movzwl
out
ja
pusha
movzwl
push
pop
popa
mov
in
push
push
call
and
pop
mov
addl
inc
push
ret
and
enter
out
cmpsl
jmp
rclb
or
inc
dec
sbb
mov
xor
fsubs
out
loope
push
add
add
call
jp,pt
jb
mov
mov
mov
or
call
call
and
pop
mov
addl
inc
push
ret
fwait
mov
sbb
sub
mul
push
push
call
and
pop
mov
addl
inc
push
ret
insl
sub
push
push
call
and
pop
mov
addl
inc
push
ret
xor
push
push
push
push
jne
push
pop
rdtsc
push
push
pop
pop
pop
pop
mov
mov
pushl
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
lcall
mov
add
add
add
and
pop
mov
addl
inc
push
ret
mov
jmp
inc
xor
cmc
out
in
push
push
call
and
pop
mov
addl
inc
push
ret
push
inc
pop
and
sbb
shrl
fmuls
cmp
jae
mov
movzbl
push
push
call
and
pop
mov
addl
inc
push
ret
push
insl
repz
inc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
xchg
loopne
mov
or
or
add
sbb
rorb
fmuls
shr
mov
mul
push
push
call
and
pop
mov
addl
inc
push
ret
adc
scas
aas
mov
mov
sub
push
or
pop
pop
mov
sub
js
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
push
or
pusha
mov
jmp
push
call
popa
add
push
push
call
and
pop
mov
addl
inc
push
ret
fwait
cmp
xchg
push
pusha
lods
movswl
cmp
jbe
call
cmc
test
int
adcl
cmp
add
add
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lahf
mov
cld
test
je
push
push
call
and
pop
mov
addl
inc
push
ret
sti
pop
mov
add
mov
js
sub
call
call
fnstcw
sub
jp
out
mov
xchg
scas
and
pop
je
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
lcall
ret
call
cmpsl
cmp
mov
pop
or
cmp
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
rcrb
jge
outsb
lcall
fmuls
pop
pop
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
sub
fimuls
mov
jno
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xor
xor
dec
pop
pusha
xlat
mov
mov
psubusb
xor
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jns
icebp
sub
and
pop
movzwl
movl
push
push
call
and
pop
mov
addl
inc
push
ret
aam
test
rclb
cli
pop
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
or
dec
daa
dec
in
mov
mov
incl
mov
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
push
rcl
call
fmuls
or
nop
pusha
mov
push
or
jmp
jno
mov
push
mov
pop
inc
mov
aad
sub
sub
push
push
call
and
pop
mov
addl
inc
push
ret
aaa
or
mov
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
icebp
aam
sbb
mov
sub
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
pop
movzwl
mov
mov
jb
ja
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cwtl
addr16
jno
xchg
add
push
push
call
and
pop
mov
addl
inc
push
ret
cs
or
push
adc
pop
mov
jmp
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cmc
cmpl
jecxz
jmp
add
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
jnp
out
popf
in
lea
movzwl
nop
jmp
push
sub
mov
sahf
mov
fistpl
loope
push
jmp
inc
push
repnz
add
nop
add
push
sub
push
xor
lea
push
push
call
and
pop
mov
addl
inc
push
ret
cwtl
push
push
push
jmp
sub
es
repz
mov
pushf
in
mov
fstpl
add
stc
nop
push
push
push
push
pusha
popa
rdtsc
push
push
rdtsc
pop
pop
pop
pop
rdtsc
push
push
push
push
rdtsc
pop
pop
rdtsc
jno
pop
pop
pop
pop
push
jmp
js
enter
nop
pusha
call
adc
cmp
pop
ss
flds
xor
or
faddp
into
fisttps
push
mov
push
jmp
arpl
scas
cmp
inc
xchg
lods
adc
or
enter
add
add
add
and
pop
mov
addl
inc
push
ret
js
fldl
in
fmuls
pop
call
add
mov
incl
mov
jmp
call
pop
sub
mov
cmpl
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
bound
clc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xor
sbb
and
pusha
js
mov
mov
popa
and
call
xchg
inc
outsl
rclb
sub
popa
pop
or
jne
cld
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
inc
scas
or
mov
jmp
jbe
xor
movl
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
push
xor
jl
movl
push
push
call
and
pop
mov
addl
inc
push
ret
in
loope
sub
lea
push
push
call
and
pop
mov
addl
inc
push
ret
push
fists
mov
andl
mov
mov
jge
pusha
clc
movzwl
popa
test
je
sbb
call
push
push
call
and
pop
mov
addl
inc
push
ret
call
adc
xchg
xchg
pop
popa
push
pusha
js
pusha
popa
jb
jmp
test
ret
sub
lcall
add
push
push
call
and
pop
mov
addl
inc
push
ret
or
mov
xor
or
mov
add
add
add
and
pop
mov
addl
inc
push
ret
mov
mov
add
push
call
and
pop
mov
addl
inc
push
ret
pop
xchg
subb
push
push
call
and
pop
mov
addl
inc
push
ret
push
mov
scas
sub
and
in
mov
movzbl
push
push
call
and
pop
mov
addl
inc
push
ret
je
pop
daa
cli
mov
add
add
rcrl
mov
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
ret
ret
and
mov
shr
push
push
call
and
pop
mov
addl
inc
push
ret
fcmovu
fadds
jo
hlt
outsl
mov
mov
mul
push
push
call
and
pop
mov
addl
inc
push
ret
imul
out
decl
or
fmuls
or
add
push
push
jmp
ja
es
dec
mov
xor
pop
pop
push
push
push
ja
push
pop
rdtsc
push
jmp
push
xor
es
pop
pop
xchg
pushl
mov
call
mov
sub
out
mov
in
mov
cmp
jae
add
push
or
pop
movzbl
jp
clc
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
push
xchg
daa
loop
jno
popa
or
call
call
and
pop
mov
addl
inc
push
ret
addr16
pop
xchg
add
pop
cltd
inc
fdivs
jg
cld
movsb
inc
std
rcr
mov
mul
push
push
call
and
pop
mov
addl
inc
push
ret
pop
pop
ja,pt
scas
cltd
jae
mov
and
or
fadds
push
pop
movswl
sub
js
push
push
call
and
pop
mov
addl
inc
push
ret
push
test
add
push
call
and
pop
mov
addl
inc
push
ret
mov
ds
mov
push
roll
mov
or
or
xchg
add
add
push
call
and
pop
mov
addl
inc
push
ret
xor
lds
fmuls
mov
mov
test
je
movzwl
call
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
lret
or
sub
push
push
call
and
pop
mov
addl
inc
push
ret
xorl
xchg
fisubrl
or
cmp
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
xor
add
add
mov
mov
mov
mov
mov
sbb
sub
movl
push
push
call
and
pop
mov
addl
inc
push
ret
and
mov
mov
mov
or
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
out
shrl
mov
xor
test
jbe
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
xor
sub
addl
add
sub
call
push
push
call
and
pop
mov
addl
inc
push
ret
mov
adc
nop
ja
mov
mov
add
jmp
pop
int3
jns
cmp
scas
iret
sub
loopne
subb
pop
shrb
call
and
pop
mov
addl
inc
push
ret
mov
movzwl
jbe
cmc
and
push
push
call
and
pop
mov
addl
inc
push
ret
and
decb
or
jnp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jbe
mov
mov
int
mov
mov
jmp
jle
mov
mov
mov
xchg
aas
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
mov
pusha
mov
add
mov
popa
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
jecxz
xchg
enter
roll
stc
jmp
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
jl
mov
enter
push
mov
mov
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
int3
jmp
adc
sub
inc
outsl
out
and
mov
fmuls
push
push
push
je
push
push
rdtsc
pop
pop
rdtsc
push
push
pop
pop
pop
pop
mov
or
push
push
push
call
and
pop
mov
addl
inc
push
ret
addb
push
jmp
mov
outsb
jle
xchg
mov
and
push
lea
push
push
call
and
pop
mov
addl
inc
push
ret
popa
sbb
sub
add
add
das
pop
pop
dec
scas
dec
jge
push
incl
xor
or
jns
fmuls
popa
pop
add
jmp
imul
incb
adc
add
push
xchg
arpl
icebp
out
mov
xor
bound
adc
add
stos
pushf
fdiv
shlb
xchg
movsb
insb
add
ljmp
add
mov
dec
adc
mov
mov
push
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
or
cvtpi2ps
lock
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
mov
jno
fmuls
and
lea
push
push
call
and
pop
mov
addl
inc
push
ret
add
and
stc
mov
add
mov
fmuls
jmp
call
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
xor
mov
mov
cmpl
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
cltd
sub
push
or
mov
and
sub
or
jne
and
cmpl
je
pusha
mov
sub
popa
jmp
movl
push
call
aad
inc
mov
mov
jp
mov
pop
pop
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
lock
mov
and
adc
repnz
cld
lea
jl
mov
andl
mov
mov
mov
test
je
push
push
call
and
pop
mov
addl
inc
push
ret
mov
sub
xchg
adc
mov
push
pusha
pusha
jle
jmp
mov
cmp
lds
into
mov
jne
jmp
and
ja
outsb
push
shl
sub
and
add
mov
jmp
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
insl
out
mov
in
adc
movzbl
push
push
call
and
pop
mov
addl
inc
push
ret
inc
bound
repz
jbe
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
inc
insb
sub
push
lret
shr
push
push
call
and
pop
mov
addl
inc
push
ret
stc
sub
mul
push
push
call
and
pop
mov
addl
inc
push
ret
jb
xor
push
pusha
call
fwait
clc
ja
mov
mov
add
add
call
jmp
lods
and
or
fmuls
pop
sub
mov
call
xor
jbe
mov
icebp
xor
lds
add
mov
push
inc
dec
mov
push
or
or
push
jno
jmp
pop
test
and
inc
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
insl
xchg
jnp
xchg
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
lcall
call
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
cmpsb
out
push
push
call
and
pop
mov
addl
inc
push
ret
out
test
and
or
sbb
in
push
push
call
and
pop
mov
addl
inc
push
ret
jbe
pop
jg
mov
cmpl
push
call
and
pop
mov
addl
inc
push
ret
cltd
xchg
adc
shlb
movzbl
push
push
call
and
pop
mov
addl
inc
push
ret
jbe
dec
jp
mov
mov
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
movsb
dec
nop
test
out
xchg
mov
mov
mul
or
sub
cmc
pop
sbb
sub
js
or
mov
mov
mov
add
mov
cmp
jbe
movzwl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
ret
clc
test
je
push
push
call
and
pop
mov
addl
inc
push
ret
clc
add
add
call
push
push
call
and
pop
mov
addl
inc
push
ret
adc
shlb
add
sub
pop
mov
sub
push
push
call
and
pop
mov
addl
inc
push
ret
mov
test
sbb
clc
cmp
jbe
mov
jmp
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
mov
mov
mov
mov
movl
jae
mov
mov
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
cli
std
and
incl
mov
pushl
mov
call
mov
nop
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
mov
call
fsubs
int3
mov
ffree
or
dec
leave
xor
pop
jmp
rcll
push
sbb
jmp
call
and
pop
mov
addl
inc
push
ret
xchg
aaa
out
inc
xchg
pusha
clc
call
stos
jge
lahf
call
lea
fmuls
pop
popa
push
mov
jp
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
imull
dec
push
push
call
and
pop
mov
addl
inc
push
ret
hlt
xor
add
dec
in
cmp
xchg
push
jo
cmp
pop
daa
test
xor
pop
jae
adc
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
push
inc
and
xor
cmp
popf
pop
aaa
fmuls
jo
call
inc
js
mov
mov
and
or
add
mov
xor
mov
xlat
outsb
mov
pop
mov
mov
jmp
cmp
dec
add
add
ja
add
cmp
clc
cmp
call
jno
pop
xchg
jnp
cmp
std
stos
mov
inc
fmul
in
push
dec
push
and
jecxz
xchg
push
add
imul
dec
or
adc
pop
inc
mov
loopne
cld
inc
loop
xchg
push
aaa
loope
push
std
jno
movsl
mov
sti
sti
mov
sbb
pop
rcr
fmuls
insb
cmp
cmc
or
xor
inc
int
push
lret
adc
dec
fs
andb
push
inc
out
scas
sbbb
lcall
std
and
lcall
unpckhps
sub
int
cmp
add
add
jecxz
xchg
push
sbb
daa
lds
inc
dec
add
xor
mov
or
repnz
cmp
into
iret
fstps
inc
adc
mov
add
add
jecxz
stc
xlat
pop
int3
jmp
mulb
mov
arpl
add
mov
mov
push
adc
scas
dec
jo
push
xchg
leave
pop
inc
inc
dec
pop
push
mov
mov
gs
imul
cmp
lea
add
movsb
jb
dec
xor
mov
add
add
pop
sub
shlb
mov
imul
jge
xor
xor
push
loopne
add
add
nop
jecxz
xchg
sub
stos
pushf
pop
pop
out
adc
into
in
out
dec
mov
sub
fidivrl
push
popf
fs
movswl
data16
jmp
and
mov
notw
xor
mov
pop
mov
xorl
notb
ret
rclb
sub
or
stos
jp
sbb
pop
fwait
dec
je
add
sub
mov
sub
fcomps
fisubl
xlat
inc
subps
dec
lods
sbb
push
shrl
test
pop
dec
adc
cltd
adc
das
stc
lods
mov
mov
jmp
mov
jecxz
nop
outsl
ljmp
adc
mov
addr16
sub
mov
sahf
in
stc
push
jns
mov
mov
add
rorb
jecxz
xchg
imul
mov
hlt
push
mov
or
test
nop
repz
push
xor
rcrb
xchg
int3
fnstenv
cmpsl
test
pop
sbb
xchg
sbb
xor
push
jns
mov
sbb
dec
fidivs
mov
pop
aam
sub
add
jo
cmpsl
adc
inc
add
push
sti
cmc
pop
add
pop
icebp
pop
rcl
mov
lret
cltd
push
push
mov
addr16
arpl
fimuls
cltd
or
out
movsb
pop
xchg
test
dec
out
jge
add
std
loop
xchg
sbb
repz
movsl
or
xchg
out
mov
adc
loope
mov
and
mov
stc
repnz
add
int
push
mov
into
loope
test
adc
push
pop
and
add
lds
cmp
leave
mov
out
insb
cmp
dec
dec
loop
fisttps
or
push
sarb
or
es
lods
js
lahf
dec
ret
inc
loop
xchg
inc
jae
adc
add
mov
subl
push
cmp
cwtl
xor
pop
dec
cmp
fwait
mov
mov
add
das
xor
frstor
cmp
jb
pop
popa
jp
push
push
cmp
add
jbe
sub
lret
insl
pusha
imulb
mov
push
dec
dec
jmp
stc
cld
cmp
into
mov
push
dec
mov
out
or
cmp
inc
out
iret
jno
cmp
and
sub
xchg
pop
iret
fildll
fcoms
fadds
add
test
stos
jle
les
insb
adcb
mov
mov
jle
xchg
loope
mov
sbbl
cwtl
cmc
mov
out
jmp
aaa
adc
ds
xchg
imul
pop
test
inc
iret
sbb
adcb
rclb
mov
lods
in
out
mov
mov
xor
incb
mov
and
aad
mov
add
jbe
sub
cmp
sub
push
and
mov
push
fimull
leave
lret
ret
or
ss
rcrl
outsb
ds
push
inc
out
ret
int
add
outsl
mov
fwait
ret
stos
lret
sub
negl
das
fucomip
mov
jmp
inc
sbb
lea
mov
adc
mov
jae
sbb
movsl
pop
push
ljmp
mov
pop
jecxz
clc
and
rorb
mov
int
mov
movsb
and
inc
fiaddl
cmp
sbb
sub
cmpsb
mov
inc
int
cmp
testb
in
int3
mov
xchg
push
push
inc
out
inc
int
int3
rolb
jle
insl
scas
bound
scas
inc
shl
mov
lods
adc
xor
inc
ds
lret
sbb
push
nop
adc
stos
jg
das
sti
in
les
inc
jne
mov
or
rorb
add
or
ljmp
mov
js
push
lret
sarl
mov
add
and
pop
mov
cwtl
or
call
subb
add
mov
push
mov
add
sub
xchg
pop
mov
push
mov
add
sub
xchg
pop
mov
push
mov
mov
sub
mov
add
push
mov
add
push
mov
xorl
popl
xorl
pushl
pop
add
mov
push
mov
add
add
xchg
pop
jmp
mov
mov
cld
inc
cwtl
repz
mov
add
jmp
test
imul
pop
adc
shr
cmpsb
or
adc
mov
add
jmp
insl
xor
cmpsb
jb
daa
and
cmc
lods
mov
decb
mov
sbbl
lea
lret
repnz
sub
jecxz
xchg
push
add
push
lods
je
aas
cmc
xchg
or
jbe
mov
call
and
stc
out
in
fists
cwtl
movhps
fisubl
or
push
flds
cmpsl
fistpll
cmp
addr16
ror
les
out
mul
push
or
sbb
push
sbb
test
std
fcompl
inc
mov
inc
notb
mov
add
jbe
mov
push
inc
lret
out
push
mov
jo
pop
sbb
and
push
enter
scas
mov
stos
push
pinsrw
dec
push
stos
push
aas
scas
add
sub
mov
push
add
mov
add
add
test
mov
adc
stc
aam
pop
aam
fiaddl
push
test
pop
rcr
ss
std
adc
jg
cmp
loop
and
cmp
jmp
pusha
js
or
xchg
ret
push
mov
int
jecxz
mov
push
adc
mov
ja
dec
inc
popa
cmp
jmp
ret
mov
mov
bound
aam
add
negl
nop
push
ficomps
fimull
mov
js
or
xchg
nop
sbb
push
cmpsl
les
fstl
and
lahf
add
add
mov
iret
mulb
adc
cmp
lahf
roll
in
jmp
push
cwtl
or
mov
in
mov
arpl
out
test
mov
fistl
pop
pop
aam
iret
and
or
add
popf
cli
in
mov
sub
and
adc
inc
pop
mov
jmp
scas
lods
push
mov
and
xchg
push
add
add
xor
fisubl
andl
dec
pop
fnstcw
pop
test
pop
scas
xchg
pop
lds
adc
jo
jbe
adc
bound
sbb
test
and
mov
xor
into
leave
movsl
or
dec
push
mov
and
rcll
mov
shll
movsb
sbb
rorb
ljmp
mul
mov
fistpl
imul
outsb
mov
aaa
fiadds
ja
xor
push
push
pop
repnz
sbb
in
mov
aam
add
cltd
cmp
dec
imul
fnsetpm(287
mov
adc
mov
sahf
or
shlb
in
test
call
or
push
test
push
mov
jbe
mov
push
xchg
fidivrs
cmp
std
test
sbb
aaa
loop
adc
jns
cmp
xchg
xchg
or
sub
add
push
mov
lahf
aas
jl
imulb
iret
jns
cli
loop
sti
add
or
mov
sub
cmc
and
int3
aam
enter
cmpsl
mov
and
or
iret
out
jle
add
add
pop
outsb
jecxz
dec
lds
nop
or
dec
pop
xlat
enter
cwtl
test
ljmp
jmp
sahf
xor
xor
int
out
cs
push
jecxz
adc
push
fisubl
jle
addr16
loope
test
lods
sti
fldenv
cmp
mov
cwtl
dec
pop
push
movsl
fists
test
cmp
lods
dec
jmp
lock
pop
xor
and
adc
out
pop
ret
test
lsl
jge
xor
lcall
sub
popf
and
mov
jecxz
add
add
lret
aam
pop
mov
lods
insb
dec
sbb
in
sbb
fisubl
fadds
inc
fsts
mov
cmp
mov
dec
dec
adc
push
rol
cltd
pop
movsl
jle
movsl
insb
into
push
push
fimuls
scas
push
enter
aam
addr16
rclb
sti
out
cli
lods
mov
mov
dec
in
repz
aam
lret
mov
fldl
adc
and
and
jecxz
bound
dec
xchg
add
stos
push
or
int3
outsl
cltd
or
xchg
kxorw
pop
jbe
jnp
movsl
sbb
call
jo
jnp
bnd
outsl
push
or
xor
loope
out
mulb
mov
rcll
bnd
and
or
rep
ret
push
xchg
imul
lea
add
mov
aad
mov
inc
in
pop
mov
jmp
mov
lcall
or
mov
xchg
mov
push
inc
out
movsl
test
int
inc
test
jmp
cmc
int3
xchg
xor
inc
ficompl
xchg
insb
fwait
add
mov
mov
fiaddl
rorb
pusha
scas
add
cmp
ds
push
aam
scas
in
cmpl
in
je
push
pop
and
pop
dec
movsl
out
iret
outsl
ret
and
pop
mov
and
cmp
cs
inc
dec
xor
or
fimuls
lods
cmp
dec
mov
cld
sarl
mov
cmp
stc
adc
jae
int3
sahf
loop
aad
call
jg
rolb
cmpsb
jb
aad
mov
stc
cmp
clc
inc
out
test
jae
mov
jmp
add
xor
lods
mov
cli
mov
cmpb
push
jecxz
xchg
insb
mov
js
push
lret
sarl
mov
add
and
pop
mov
cwtl
or
call
adcb
add
sub
xchg
pop
mov
push
mov
add
sub
xchg
pop
mov
push
mov
add
sub
xchg
pop
mov
mov
not
or
xchg
not
xchg
sub
sub
push
mov
addl
pop
push
push
subl
pop
add
mov
pop
pushl
pop
add
pushl
pop
add
jmp
sub
mov
jb
or
or
push
imul
mov
outsl
pop
leave
push
pusha
fwait
mov
pusha
pusha
mov
stc
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
repnz
imul
add
fmuls
mov
and
push
push
call
and
pop
mov
addl
inc
push
ret
push
push
and
mov
sub
or
push
call
and
pop
mov
addl
inc
push
ret
outsl
outsb
jne
push
es
mov
mov
mov
mov
and
jne
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
fcmove
mov
and
jne
push
push
call
and
pop
mov
addl
inc
push
ret
pop
and
cmpsb
cmp
push
push
call
and
pop
mov
addl
inc
push
ret
aam
cltd
stc
mov
call
mov
fsubr
add
scas
xchg
xlat
test
addb
add
pop
pop
mov
mov
or
and
push
push
call
and
pop
mov
addl
inc
push
ret
mov
dec
dec
sti
mov
mov
and
push
push
call
and
pop
mov
addl
inc
push
ret
lahf
mov
add
mov
and
jne
mov
mov
mov
and
jne
mov
popa
jmp
jnp
fs
jmp
mov
lods
or
xchg
add
aam
lea
fucomp
xlat
inc
pop
cltd
pop
into
add
hlt
in
add
sbb
jo
sbb
jecxz
xchg
push
add
xlat
mov
movsb
arpl
idivl
xchg
pop
sbb
cmp
mov
sub
add
das
cli
out
aam
jge
xlat
ret
xor
mul
inc
add
sbb
test
xor
pop
mov
sahf
or
call
push
je
iret
and
lods
or
sbb
mov
rolb
push
cwtl
sbb
sbb
pop
hlt
inc
stc
cmp
shlb
outsb
fmull
sub
xchg
cltd
add
add
cli
mov
cmpb
mov
and
cmpsl
adc
cmp
mov
or
cmc
jp
inc
cmp
adc
in
sbb
mov
pop
into
pop
das
out
xlat
add
add
ret
nop
outsl
mov
mov
movsl
sbb
jle
sbb
pop
and
or
outsb
sub
sahf
repnz
dec
out
mov
inc
les
adc
cmp
leave
push
mov
xchg
not
sub
pop
mov
and
stos
adc
and
mov
push
gs
int
sub
inc
mov
pop
in
mov
cmp
movsl
add
lock
adc
inc
inc
mov
and
mov
lret
aad
cld
pop
fadds
add
cmp
mov
imul
fisubl
ret
iret
sbb
aad
pop
imulb
in
cld
stos
mov
mov
int
mov
jle
jl
jb
cmp
adc
inc
pop
mov
aad
or
in
insl
pop
jbe
pop
gs
insl
inc
mov
push
push
hlt
nop
mov
sti
lods
mov
xchg
add
lock
mov
gs
jo
data16
ja
testl
ret
inc
fisttpl
jecxz
mov
jecxz
xlat
mov
scas
mov
std
in
jmp
mulb
or
xor
loopne
xchg
sbb
push
lret
inc
andb
and
xchg
or
ds
inc
fcomp
cmp
fs
stos
jae
ret
addr16
lock
call
adcl
sub
call
ss
scas
aam
mov
cmp
int
and
dec
sub
arpl
icebp
jecxz
xchg
imul
lods
and
ficompl
fisubl
mov
fwait
push
sbb
mov
mov
mov
lret
pushf
cmp
andb
mov
adcb
push
or
das
mov
push
stos
jge
pushf
imul
outsb
into
mov
movsl
and
jne
addr16
mov
jecxz
adc
mov
xor
lret
mov
test
sbb
mov
ljmp
movsl
cmpsl
xor
cmp
cmp
mov
out
pop
inc
mov
stos
jo
fnsave
mov
xchg
insb
mov
push
ret
fstpl
into
pop
mov
inc
fs
add
add
mov
adc
xchg
loopne
pop
in
xor
ljmp
cmc
mov
popl
mov
mov
lock
divb
movsb
jl
xor
and
mov
jbe
loop
push
sub
add
add
cli
mov
cmpb
cmp
lods
mulb
fstpl
mov
test
add
lea
mov
orl
cli
push
int
mov
dec
fcmovb
pop
pop
mov
mov
jbe
jecxz
xchg
or
jmp
adc
test
mov
inc
xlat
xor
aaa
mov
fistpl
stos
cmp
rolw
mov
cmpsl
sub
cmpsl
xlat
push
fdivp
mov
sbb
adc
xlat
push
js
pop
popf
pop
pop
icebp
mov
xchg
pop
jl
push
ficoml
xchg
popa
mov
or
mov
jno
cmp
js
add
add
and
jl
mov
negl
fidivrs
fs
mov
scas
sahf
ret
push
scas
jge
xor
ss
andb
test
push
add
loopne
ret
xor
jmp
xchg
add
jo
dec
fdivrl
in
mov
and
pop
out
into
frstor
call
mov
out
mov
clc
push
inc
sub
into
cmp
pop
sub
inc
movaps
adc
xor
sub
jo
ret
push
sub
mov
js
jecxz,pn
pop
cmp
jno
inc
mov
or
pop
or
xchg
and
dec
mov
adc
mov
jne
inc
mov
sub
mov
xor
adc
cmp
push
comiss
push
fists
in
add
pop
ret
flds
dec
mov
fwait
push
xchg
loope
xchg
mov
sbb
mulb
out
push
jo
rclb
out
and
pop
and
shrb
int3
push
jo
sub
xor
dec
lret
push
dec
fsub
dec
sbb
or
sub
pusha
addr16
add
rol
arpl
sbb
imul
and
jg
cmp
int
ss
adc
inc
aad
sbb
xor
loopne
dec
push
mov
ljmp
ljmp
hlt
inc
scas
jne
rorb
jg
sbb
sbbl
add
pop
or
mov
js
push
lret
sarl
mov
add
and
pop
mov
cwtl
or
call
adcb
add
sub
xor
xor
xor
pop
push
mov
add
sub
xchg
pop
mov
push
mov
add
sub
xchg
pop
mov
push
mov
mov
mov
pop
push
mov
add
push
push
mov
xor
pop
popl
xorl
mov
push
mov
add
add
xchg
pop
pushl
pop
add
jmp
mov
popa
cmp
xchg
fmull
add
jmp
lods
in
xor
mov
mov
xor
cmp
pusha
push
push
call
and
pop
mov
addl
inc
push
ret
inc
mov
mov
xor
and
or
and
push
push
call
and
pop
mov
addl
inc
push
ret
loopne
mov
and
jne
push
push
call
and
pop
mov
addl
inc
push
ret
je
xchg
stos
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
fiaddl
push
add
add
or
push
push
call
and
pop
mov
addl
inc
push
ret
inc
sbb
lods
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
pop
sub
mov
and
push
push
call
and
pop
mov
addl
inc
push
ret
jnp
pop
add
add
les
or
pop
xor
and
push
push
call
and
pop
mov
addl
inc
push
ret
jmp
add
sub
add
add
add
and
pop
mov
addl
inc
push
ret
mov
lods
xchg
popf
fprem
and
jne
cld
call
jb
jge
lea
test
push
fmuls
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
data16
mov
andl
and
add
add
mov
and
jne
push
push
call
and
pop
mov
addl
inc
push
ret
inc
ja
add
popa
pusha
push
push
call
and
pop
mov
addl
inc
push
ret
cmpb
push
pop
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
stos
repnz
or
add
clc
loope
loope
in
xchg
je
pusha
popa
push
push
call
and
pop
mov
addl
inc
push
ret
ror
stc
movswl
jmp
popa
popf
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
test
dec
dec
jmp
mov
xor
xor
gs
push
fisttpl
push
push
call
and
pop
mov
addl
inc
push
ret
and
out
adc
loope
mov
mov
jmp
pusha
mov
test
je
push
pushl
lea
call
mov
mov
shr
push
push
push
push
push
call
jmp
movb
push
pushl
lea
call
mov
lea
push
push
push
push
call
popa
ret
shl
pusha
mov
or
cmpl
jne
cmpl
je
push
push
mov
mov
mov
lea
call
pop
pop
cmpl
je
push
push
mov
mov
lea
call
pop
pop
push
push
call
and
pop
mov
addl
inc
push
ret
shlb
inc
jmp
jecxz
xchg
enter
fs
push
call
and
pop
mov
addl
inc
push
ret
jnp
mov
add
add
movzwl
or
call
dec
xlat
call
add
pushf
add
jb
mov
and
call
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
add
call
push
push
call
and
pop
mov
addl
inc
push
ret
scas
mov
push
mov
sub
or
mov
adc
or
or
push
call
and
pop
mov
addl
inc
push
ret
cmpb
jl
or
call
push
push
call
and
pop
mov
addl
inc
push
ret
inc
int3
sbb
test
and
or
call
xchg
add
cltd
xor
dec
jb
inc
inc
push
pop
aam
lret
mov
pop
call
push
push
call
and
pop
mov
addl
inc
push
ret
push
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lret
stos
inc
movsl
jne
cmp
pusha
popa
call
mov
push
push
call
and
pop
mov
addl
inc
push
ret
js
bound
cmp
call
push
push
call
and
pop
mov
addl
inc
push
ret
bound
add
clc
jmp
and
or
push
call
and
pop
mov
addl
inc
push
ret
ret
fisttpll
out
mov
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsb
xchg
imul
mov
mov
mov
call
mov
mov
mov
call
add
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
pop
mov
fsubr
adc
add
pop
push
out
xchg
pop
inc
sub
mov
push
add
push
push
call
and
pop
mov
addl
inc
push
ret
jle
sub
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
in
mov
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
cwtl
jnp
sub
fmuls
or
mov
or
call
add
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
sub
cltd
sbb
or
roll
add
jne
cmpsl
xchg
test
leave
push
jge
mov
sub
call
push
push
call
and
pop
mov
addl
inc
push
ret
mov
add
add
push
jmp
mov
mov
jg
mov
call
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
out
into
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
mov
ljmp
push
mov
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
inc
clc
lods
insl
jge
mov
jnp
mov
movzbl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
pop
pop
pusha
mov
mov
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
fimull
sub
ret
call
in
dec
pushf
ficoml
jge
sub
rolb
add
or
call
push
call
mov
xor
pop
pop
popa
mul
push
push
call
and
pop
mov
addl
inc
push
ret
stc
mov
xor
pop
mov
sub
push
push
call
and
pop
mov
addl
inc
push
ret
popf
mov
fldenv
aaa
std
xchg
push
jmp
add
adcb
jo
push
push
push
pusha
js
jmp
mov
xchg
adc
mov
mov
mov
rdtsc
pusha
push
pop
pusha
popa
popa
pop
pop
xchg
jmp
sti
outsl
pop
mov
ds
pop
and
xchg
adc
add
add
add
and
pop
mov
addl
inc
push
ret
and
mov
mov
mov
pop
mov
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
push
pop
jmp
test
sbb
xchg
mov
sbb
push
call
and
pop
mov
addl
inc
push
ret
fisttps
push
call
and
pop
mov
addl
inc
push
ret
sbb
sub
lea
push
push
call
and
pop
mov
addl
inc
push
ret
rcrb
xor
fcmovne
jae
jmp
mov
pop
jne
xor
adc
xchg
dec
aam
push
mov
mov
mov
mov
mov
jmp
mov
xor
xchg
frstor
or
push
call
and
pop
mov
addl
inc
push
ret
ret
mov
mov
pop
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
xor
dec
dec
push
out
jmp
pop
push
push
test
xchg
fisttpll
or
or
add
cli
push
cmp
sti
push
xor
call
and
pop
mov
addl
inc
push
ret
sbb
ss
xor
mov
sub
popa
mov
stc
lea
push
push
call
and
pop
mov
addl
inc
push
ret
ja
bnd
pop
mov
add
mov
sbb
or
mov
add
lea
push
push
call
and
pop
mov
addl
inc
push
ret
push
int
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
adcb
dec
push
jmp
scas
into
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
nop
mov
scas
lea
push
push
call
and
pop
mov
addl
inc
push
ret
leave
push
mov
pop
mov
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsl
mov
fmuls
lea
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
addr16
adc
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
and
push
add
mov
add
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
or
push
push
call
and
pop
mov
addl
inc
push
ret
mov
adc
push
push
push
call
and
pop
mov
addl
inc
push
ret
cwtl
test
jmp
add
and
push
push
push
call
and
pop
mov
addl
inc
push
ret
push
xchg
xchg
and
or
push
call
and
pop
mov
addl
inc
push
ret
repnz
mov
pusha
mov
mov
popa
mov
mov
mov
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
xchg
and
mov
mov
fstps
fmuls
add
cmpl
je
push
push
mov
mov
mov
lea
call
pop
pop
cmpl
je
push
push
mov
mov
lea
call
pop
pop
push
push
call
and
pop
mov
addl
inc
push
ret
rcll
cmpsl
jmp
imull
aaa
out
subl
mov
push
call
and
pop
mov
addl
inc
push
ret
mov
adc
mov
lea
mov
nop
je
push
push
pusha
popa
rdtsc
jl
pop
pop
push
ja
push
push
jbe
rdtsc
jnp
pop
pop
nop
push
push
push
call
and
pop
mov
addl
inc
push
ret
movsb
repz
lea
xor
mov
add
push
push
call
and
pop
mov
addl
inc
push
ret
shl
mov
test
and
or
add
mov
inc
test
push
push
push
jge
push
pop
rdtsc
push
push
push
rdtsc
pop
pop
pop
pop
pop
mov
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
jnp
sbb
mov
iret
sub
push
or
jmp
xor
mov
cmp
mov
inc
mov
xchg
lods
adc
or
push
call
and
pop
mov
addl
inc
push
ret
push
add
adc
pop
fmuls
lea
movswl
call
mov
jl
add
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
aaa
push
and
pop
mov
push
push
push
pusha
push
pop
ja
popa
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xor
and
xchg
std
sbb
or
push
call
and
pop
mov
addl
inc
push
ret
mov
xor
jne
mov
jmp
call
pop
sub
and
push
push
call
and
pop
mov
addl
inc
push
ret
leave
push
xor
pop
mov
add
add
or
add
les
mov
xor
in
je
push
pop
popa
lea
mov
pusha
mov
jbe
mov
popa
push
push
push
jae
push
pop
rdtsc
jmp
pop
and
aaa
scas
fs
xchg
loopne
sbb
pushf
daa
xchg
lahf
pop
pop
mov
pusha
mov
sbb
popa
pushl
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
ja
mov
clc
incl
push
mov
pushl
jmp
hlt
inc
push
daa
lds
cltd
xchg
adc
shlb
fiaddl
xchg
xchg
cmp
or
testb
add
repz
add
or
mov
add
add
mov
out
mov
in
clc
pusha
xor
stc
popa
cmp
jae
mov
movzbl
pusha
mov
mov
popa
mov
mov
or
shr
sub
mul
mov
sub
add
mov
movzwl
jmp
movswl
mov
mov
add
jmp
test
push
or
pop
add
cld
cmp
jae
movzwl
jmp
movzwl
stc
mov
push
xor
pop
and
je
jp
mov
push
mov
pop
andl
cld
mov
mov
jmp
lea
jmp
cmp
mov
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
and
call
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
cld
ds
jmp
fimuls
lods
and
lods
test
movd
push
push
call
and
pop
mov
addl
inc
push
ret
add
stc
mov
and
not
cmp
push
push
call
and
pop
mov
addl
inc
push
ret
movl
add
add
popf
aad
fmuls
popa
mov
sub
mov
lods
xor
shr
add
sub
jne
push
push
call
and
pop
mov
addl
inc
push
ret
scas
aas
mov
add
add
add
and
pop
mov
addl
inc
push
ret
pop
dec
ljmp
loope
fmuls
mov
or
push
push
call
and
pop
mov
addl
inc
push
ret
pop
push
mov
mov
fmuls
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
pusha
jbe
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xor
ret
add
mov
mov
shr
add
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
mov
loope
mov
push
pop
push
push
call
and
pop
mov
addl
inc
push
ret
pop
xor
cmpl
je
mov
mov
mov
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
test
mov
jmp
clc
cmpl
je
jmp
sahf
loopne
test
or
cmpl
je
jne
xor
cmpl
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
push
mov
push
add
add
adc
push
nop
push
test
push
and
sldt
add
out
xor
xor
pop
mov
pop
and
push
push
call
and
pop
mov
addl
inc
push
ret
loopne
stos
pop
enter
cld
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
jae
pop
cmpsl
mov
test
ret
cmpsl
call
pop
xor
movzwl
mov
nop
jge
jmp
pop
mov
rcrl
pop
aaa
or
push
push
rdtsc
pop
pop
jg
popa
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
cmp
aaa
movaps
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
fwait
jl
inc
fnstenv
add
add
incl
pop
add
addb
add
pop
pop
push
push
push
jle
jae
rdtsc
push
pusha
popa
pop
pop
pop
mov
push
jmp
call
lock
xchg
int
ss
iret
lcall
add
adcl
push
jmp
ja
jle
rorb
push
push
rdtsc
pop
pop
pop
pop
mov
jmp
jne
lahf
or
xor
ljmp
icebp
sub
push
push
call
and
pop
mov
addl
inc
push
ret
popf
mov
inc
test
fmuls
call
push
push
call
and
pop
mov
addl
inc
push
ret
push
nop
cld
mov
mov
jmp
sub
mov
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
pop
mov
mov
clc
fisttpl
push
push
call
and
pop
mov
addl
inc
push
ret
scas
push
pop
inc
dec
mov
mov
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
aam
jmp
dec
roll
fmuls
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
add
sub
mov
xchg
jbe
push
jmp
pusha
or
pop
icebp
add
hlt
in
inc
mov
mov
jl
push
push
rdtsc
pop
pop
push
push
push
push
rdtsc
pop
pop
rdtsc
push
push
rdtsc
pop
pop
pop
pop
popa
xchg
add
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
testl
or
je
push
and
add
sub
out
fisubrs
fcomp
aas
addl
push
push
call
and
pop
mov
addl
inc
push
ret
nop
in
adc
sbb
lea
mov
nop
jmp
cld
push
dec
aad
and
adc
jmp
fnstcw
inc
jnp
jmp
mov
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
frstor
push
cmp
fmuls
mov
popa
mov
jne
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
dec
mov
clc
fisttpl
add
test
add
push
push
call
and
pop
mov
addl
inc
push
ret
add
or
add
std
sub
pop
scas
push
pop
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
push
sbb
pop
lods
xor
sbb
popf
and
fmuls
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
pop
fmuls
mov
call
push
aad
pop
cmpl
jne
mov
cmpl
je
ja
add
pushl
xor
call
sub
and
mov
push
push
call
and
pop
mov
addl
inc
push
ret
fs
add
push
call
and
pop
mov
addl
inc
push
ret
sub
addb
jmp
data16
shr
add
pop
popa
pop
push
push
push
jmp
sbb
add
loopne
popa
enter
xor
pop
jae
popa
pop
pop
xchg
call
mov
xchg
int
dec
sub
pop
cld
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
xchg
pusha
push
jl
pop
mov
popa
call
push
push
call
and
pop
mov
addl
inc
push
ret
ljmp
in
fmuls
mov
jo
mov
mov
mov
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
icebp
out
xor
add
mov
mov
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
xor
fnsave
fmuls
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsb
mov
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
jg
cmpsb
dec
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
cli
xor
mov
call
clc
xchg
push
jb
jbe
pop
push
push
jle
jmp
sub
out
pop
mov
mov
xchg
lret
or
in
inc
pop
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
sub
clc
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
xor
dec
fs
popf
jns
fmuls
call
jmp
inc
stos
sbb
push
cs
add
mov
add
test
add
mov
xchg
push
jmp
sbb
cwtl
and
aad
xchg
in
pop
push
ja
jmp
sarb
push
scas
inc
jb
pop
inc
lods
push
pop
mov
call
and
pop
mov
addl
inc
push
ret
outsb
stos
sahf
push
ror
pushl
xor
call
push
push
call
and
pop
mov
addl
inc
push
ret
imul
add
add
cmp
mov
clc
fisttpl
push
push
call
and
pop
mov
addl
inc
push
ret
push
cwtl
inc
pusha
sub
pusha
sub
mov
popa
popa
stc
call
jmp
cmp
mov
imul
push
add
add
push
call
and
pop
mov
addl
inc
push
ret
pop
dec
xor
mov
mov
movb
push
push
call
and
pop
mov
addl
inc
push
ret
jne
xor
sbb
movl
push
push
call
and
pop
mov
addl
inc
push
ret
and
adc
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
bound
in
xor
fmuls
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jnp
mov
xor
lea
push
jp
mov
pop
nop
push
push
jbe
pusha
popa
rdtsc
pusha
jmp
mov
scas
into
pop
xor
sbb
and
xor
in
rdpmc
push
push
rdtsc
pop
pop
popa
pop
pop
push
jno
push
push
push
push
rdtsc
pop
pop
rdtsc
pusha
popa
pop
pop
nop
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
mov
js
rorl
or
push
push
call
and
pop
mov
addl
inc
push
ret
and
pavgb
or
flds
push
call
and
pop
mov
addl
inc
push
ret
mov
xchg
imul
or
add
enter
int
xchg
stos
pop
push
jmp
clc
mov
enter
addl
mov
add
test
popf
icebp
or
or
add
mov
add
add
mov
and
or
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
add
popa
fmuls
call
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
fildll
jno
or
call
mov
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
fidivrl
fldenv
add
push
push
push
call
and
pop
mov
addl
inc
push
ret
adc
ds
in
or
mov
push
push
push
jmp
mov
pusha
mov
sub
jg
ljmp
jmp
mov
push
pop
iret
daa
ljmp
je
mov
pop
pop
mov
jne
jae
movzwl
mov
call
push
jbe
mov
pop
jmp
call
pop
sub
jmp
xor
adc
xor
es
push
call
and
pop
mov
addl
inc
push
ret
mov
or
adc
add
mov
sar
mov
xor
cltd
cmpsl
jne
sbb
popf
or
xor
lea
pusha
jmp
jo
lret
jge
sbb
arpl
lock
nop
push
push
push
push
pusha
popa
rdtsc
jmp
push
imul
inc
test
add
rdtsc
push
push
pop
pop
pop
pop
push
jle
push
pusha
popa
pop
nop
pushl
mov
mov
mov
incl
push
pop
push
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
dec
jmp
cmpsb
std
mov
pushf
push
or
mov
xchg
or
xchg
xchg
cmp
or
add
add
mov
mov
mov
mov
out
movzwl
in
jmp
sar
jp
mov
hlt
rorb
mov
or
add
mov
movzbl
mov
mov
jnp
mov
mov
call
sbb
mov
flds
mov
pop
shr
mov
mul
mov
sub
mov
ja
mov
mov
jmp
mov
and
mov
or
add
mov
add
sbb
cmp
jae
mov
jmp
mov
movswl
and
je
xor
andl
mov
mov
mov
jmp
lea
push
push
call
and
pop
mov
addl
inc
push
ret
in
test
sbb
fmuls
push
push
push
call
and
pop
mov
addl
inc
push
ret
adc
adc
add
int3
lret
mov
shlb
lods
sbb
push
call
and
pop
mov
addl
inc
push
ret
sub
js
dec
mov
or
or
push
push
call
and
pop
mov
addl
inc
push
ret
mov
jmp
xchg
add
push
add
aas
xchg
and
call
and
pop
mov
addl
inc
push
ret
xor
fmuls
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
add
stos
pusha
movzwl
mov
popa
sub
pusha
xor
mov
popa
lods
xor
shr
add
sub
jne
jmp
insb
dec
jne
xchg
push
push
push
call
and
pop
mov
addl
inc
push
ret
push
sub
jmp
arpl
push
dec
test
mov
or
call
sub
xchg
adc
aas
lods
cmc
hlt
jmp
push
sub
loopne
cmp
add
leave
repz
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
adc
fmuls
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jmp
popf
mov
fmuls
push
mov
mov
add
mov
mov
shr
add
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
lods
cwtl
or
adc
add
mov
test
outsb
out
xor
insl
cwtl
mov
fmuls
push
push
call
and
pop
mov
addl
inc
push
ret
fcoms
inc
sbb
or
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
fcmovnbe
ret
mov
mov
mov
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
leave
fildll
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
inc
inc
cld
cmpl
je
cld
push
mov
pop
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
into
sar
jb
test
sub
movzwl
cmpl
jbe
add
mov
pusha
mov
mov
movswl
and
push
push
call
and
pop
mov
addl
inc
push
ret
call
jnp
mov
xor
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
leave
sahf
fcoml
mov
push
push
call
and
pop
mov
addl
inc
push
ret
inc
movsb
sub
xor
sub
nop
pusha
jb
push
pop
push
push
jnp
rdtsc
push
pop
pop
pop
popa
push
push
push
push
jnp
rdtsc
push
push
rdtsc
pop
pop
pop
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
es
int
gs
push
push
push
call
and
pop
mov
addl
inc
push
ret
pop
xlat
sahf
subb
and
je
push
jmp
aam
mov
lea
lcall
fs
pop
addl
push
push
call
and
pop
mov
addl
inc
push
ret
addb
pop
sub
or
xchg
frstor
fmuls
push
push
call
and
pop
mov
addl
inc
push
ret
lcall
or
add
jno
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lock
sarl
add
push
call
and
pop
mov
addl
inc
push
ret
cmp
dec
pop
push
mov
jbe
jge
add
movl
add
mov
push
push
call
and
pop
mov
addl
inc
push
ret
stc
and
xor
ja
movzwl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
sbb
loop
mov
call
sahf
and
andl
aam
add
pop
mov
cld
mov
push
push
call
and
pop
mov
addl
inc
push
ret
enter
loopne
jbe
jmp
divl
add
push
fsubl
lret
pusha
jmp
dec
jecxz
and
lcall
lods
sub
or
add
cli
movsb
cmc
fdivl
or
add
es
push
push
push
push
push
pop
pop
rdtsc
pusha
jmp
dec
rcll
in
dec
test
mov
mov
lea
add
add
pop
xchg
pushl
mov
mov
call
incl
pop
add
jns
pop
push
jmp
lahf
lahf
or
inc
not
or
pop
popa
push
pusha
jbe
push
push
rdtsc
pop
pop
push
push
push
push
rdtsc
pop
pop
rdtsc
pusha
popa
pop
pop
popa
mov
jmp
pop
pushf
mov
adc
mov
punpckhwd
add
orb
je
adc
jecxz
adcb
and
push
push
push
pusha
popa
rdtsc
pusha
popa
pop
pop
pop
pop
push
push
call
and
pop
mov
addl
inc
push
ret
ret
inc
mov
pcmpgtd
cmp
fisttpl
mov
push
pusha
push
push
jle
rdtsc
push
push
rdtsc
pop
pop
pop
pop
push
push
push
pop
rdtsc
pusha
popa
pop
pop
popa
mov
sbb
mov
call
mov
popa
mov
xor
movl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
xchg
adc
mov
and
mov
clc
fisttpl
add
test
add
push
push
call
and
pop
mov
addl
inc
push
ret
pop
jmp
dec
or
js
loope
popa
inc
jae
arpl
inc
add
add
push
call
and
pop
mov
addl
inc
push
ret
cmp
mov
xchg
or
or
or
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
aas
mov
add
add
and
pop
mov
addl
inc
push
ret
movsb
xchg
xchg
arpl
fdivr
add
jmp
xchg
mov
add
test
add
push
push
call
and
pop
mov
addl
inc
push
ret
pop
xchg
popf
cmc
sbb
or
or
je
xor
sub
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
stos
pop
mov
mov
call
adc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
ss
pusha
jns
add
movl
mov
xchg
push
push
pusha
jmp
inc
sahf
push
and
or
dec
jge
popa
rdtsc
push
push
jae
rdtsc
jo
pop
pop
pop
pop
push
push
push
push
push
pop
pop
rdtsc
push
push
push
push
rdtsc
pop
pop
rdtsc
pusha
popa
pop
pop
pop
pop
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
rorl
pushl
sub
call
push
push
call
and
pop
mov
addl
inc
push
ret
lcall
add
mov
jb
mov
adc
mov
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
rol
cmp
mov
daa
fmuls
push
push
call
and
pop
mov
addl
inc
push
ret
orb
dec
or
les
add
push
push
call
and
pop
mov
addl
inc
push
ret
cld
cli
xchg
mov
mov
xor
add
jp
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
or
cld
xor
mov
mov
lea
push
mov
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cltd
jo
adc
gs
push
push
push
call
and
pop
mov
addl
inc
push
ret
repz
cmpsl
jns
inc
jg
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
std
push
mov
call
xor
xchg
push
jmp
inc
push
and
insl
pop
fistpll
cld
pop
pop
push
push
jmp
imul
add
sti
iret
inc
xchg
sbb
pusha
jo
mov
mov
popa
pushl
mov
call
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
or
sbb
pusha
mov
popa
xchg
jmp
orb
mov
push
cmp
cmp
mov
add
add
popa
jns
popa
xchg
pushl
mov
call
mov
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
jge
cmp
xchg
inc
add
or
push
call
and
pop
mov
addl
inc
push
ret
pop
cmc
cmpl
je
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
insb
push
mov
movb
pusha
or
jne
call
bound
aad
dec
pop
popa
call
lea
ljmp
arpl
movl
push
push
call
and
pop
mov
addl
inc
push
ret
jl
mov
mov
jmp
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
fsubrs
popf
sub
fmuls
sub
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
jp
mov
push
push
pusha
jp
jb
popa
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
icebp
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
jmp
ljmp
fmuls
lea
push
push
call
and
pop
mov
addl
inc
push
ret
loope
mov
jmp
xor
pop
dec
imul
dec
scas
lret
add
adc
add
xchg
xchg
xchg
adc
loop
sub
jno
push
fidivrs
or
add
jbe
adc
notl
pop
test
int3
jmp
out
js
out
xor
mov
inc
leave
scas
popa
push
push
push
jo
push
push
rdtsc
pop
pop
rdtsc
jge
pusha
popa
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
orl
or
add
mov
stc
xchg
pop
push
ret
pushf
xchg
push
and
call
lea
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
and
test
add
or
mov
pop
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
insb
add
mov
xlat
call
jmp
xchg
mov
icebp
aad
jbe
cld
pop
push
push
push
call
and
pop
mov
addl
inc
push
ret
roll
adc
or
push
push
js
rdtsc
pusha
popa
pop
pop
push
push
push
rdtsc
pop
pop
pop
popa
mov
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
in
mov
adc
test
add
add
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
cmp
aas
das
jns
add
lea
sub
push
push
pusha
push
push
rdtsc
pop
pop
push
pop
popa
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
jg
int
rorb
mov
or
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
std
repnz
sbb
mov
add
add
push
mov
pop
mov
pusha
mov
add
popa
incl
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
shrl
or
add
fwait
sub
jno
fnstcw
add
add
add
and
pop
mov
addl
inc
push
ret
or
sub
fisttpll
mov
pushl
mov
call
jmp
call
pop
jmp
pop
mov
mov
out
sub
in
mov
cmp
jae
mov
mov
movzbl
or
sub
mov
mov
mov
shr
mov
mul
mov
sub
mov
mov
mov
jmp
stc
jbe
add
mov
mov
add
mov
add
xor
cmp
jae
jle
movzwl
jmp
stc
mov
sub
and
je
sub
andl
mov
mov
mov
jmp
lea
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
jnp
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
loope
cmc
cmc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
insl
fidivs
jmp
xchg
xor
mov
sbb
add
add
add
and
pop
mov
addl
inc
push
ret
fdivp
dec
mov
sub
push
push
call
and
pop
mov
addl
inc
push
ret
idivl
mov
sub
or
mov
sub
push
push
call
and
pop
mov
addl
inc
push
ret
out
inc
inc
cmpb
rcll
test
add
add
or
lods
xor
shr
add
sub
jne
and
jmp
dec
aas
mov
rcll
sbb
stos
dec
dec
leave
out
mov
jecxz
lahf
mov
or
push
push
call
and
pop
mov
addl
inc
push
ret
test
rorl
or
sti
mov
jmp
mov
in
add
stos
std
sub
and
add
add
jae
xchg
sti
mov
add
cmpsl
in
push
mov
mov
add
mov
mov
shr
add
mov
pop
jmp
ud1
ret
int
xchg
or
or
je
mov
mov
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
pop
or
jmp
into
xor
fmuls
or
loope
add
add
add
and
pop
mov
addl
inc
push
ret
into
dec
stc
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
dec
mov
mov
sub
lock
mov
cmpl
je
sbb
pusha
mov
mov
popa
cmpl
jbe
and
pusha
push
push
call
and
pop
mov
addl
inc
push
ret
ss
sbb
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
adc
aas
add
jmp
xchg
inc
jo
mov
push
call
and
pop
mov
addl
inc
push
ret
loope
cmp
test
add
push
push
call
and
pop
mov
addl
inc
push
ret
loope
outsb
jnp
mov
mov
mov
movzwl
xor
jbe
mov
mov
nop
push
push
pusha
ja
pusha
popa
popa
rdtsc
jne
jmp
mov
add
push
pusha
push
push
rdtsc
pop
pop
jg
popa
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
jae
mov
push
mov
ja
mov
push
jmp
mov
testl
cmp
lahf
jmp
inc
stc
jns
mov
daa
fmuls
push
push
call
and
pop
mov
addl
inc
push
ret
fst
test
jmp
lcall
in
lret
and
jg
dec
fucomip
das
jmp
cmp
fisttpl
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
test
daa
push
mov
test
clc
fisttpl
push
push
call
and
pop
mov
addl
inc
push
ret
insb
pop
sbb
sbb
add
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
mov
mov
mov
mov
mov
mov
push
call
adc
iret
inc
dec
es
push
js
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
les
mov
jb
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
scas
lret
movzwl
mov
xchg
jmp
cmp
test
leave
pop
sbb
bnd
jmp
repnz
pop
bound
push
push
rdtsc
pop
pop
ja
popa
popa
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
insb
push
pushf
push
pushw
push
push
call
and
pop
mov
addl
inc
push
ret
test
xor
pop
add
add
mov
jno
pushf
call
incl
pop
add
push
pop
jmp
push
sub
mov
dec
aad
popa
pop
push
push
pusha
push
pop
jg
popa
pop
mov
jmp
nop
sub
push
bnd
sub
cmpsb
xor
into
mov
jmp
andl
arpl
jecxz
inc
and
jmp
lret
es
clc
mov
xchg
mov
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
clc
pop
add
nop
push
push
push
push
pop
rdtsc
je
pop
pop
pop
push
push
push
jmp
ljmp
jnp
mov
inc
pushf
mov
push
pusha
popa
rdtsc
jg
pop
pop
pop
pop
nop
mov
call
movswl
popa
push
xor
pop
movl
cmpl
je
or
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
mov
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
mov
adc
and
or
jne
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
roll
mov
pushl
mov
call
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lods
add
into
jo
movl
push
push
call
and
pop
mov
addl
inc
push
ret
movsb
mov
add
push
push
push
rdtsc
pop
pop
rdtsc
push
push
rdtsc
pop
pop
pop
pop
rdtsc
push
push
jmp
lcall
xlat
nop
sbb
rdtsc
push
push
rdtsc
pop
pop
pop
pop
pop
pop
push
push
push
push
push
pop
rdtsc
jmp
rcl
test
cmc
dec
pop
fcoms
int
pop
pop
xchg
je
mov
pushl
or
call
push
push
call
and
pop
mov
addl
inc
push
ret
and
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
or
adc
mov
and
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
mov
push
sub
or
or
push
call
and
pop
mov
addl
inc
push
ret
mov
cmp
lds
mov
jmp
xchg
pop
or
push
jns
mov
call
mov
sub
dec
dec
pop
imul
pop
mov
pop
lea
push
push
call
and
pop
mov
addl
inc
push
ret
imul
add
pop
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
iret
out
loope
ret
inc
xlat
call
std
out
xor
test
mov
add
push
call
and
pop
mov
addl
inc
push
ret
arpl
adc
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
and
dec
pop
push
call
mov
xchg
jmp
cmp
sub
add
cwtl
inc
push
push
shrl
clc
das
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
cld
loope
pushl
push
or
pop
call
stc
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
push
aaa
adc
add
mov
xchg
push
push
push
push
pusha
popa
rdtsc
pusha
popa
pop
pop
rdtsc
push
push
pop
pop
pop
pop
push
push
push
push
push
jae
rdtsc
push
push
rdtsc
pop
pop
pop
pop
rdtsc
pusha
push
push
rdtsc
pop
pop
push
push
rdtsc
pop
pop
popa
pop
pop
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
scas
push
out
in
mov
ja
jmp
add
fidivs
adc
cmc
sub
fisttpl
jl
add
call
push
push
call
and
pop
mov
addl
inc
push
ret
stc
pushl
mov
cmc
call
push
push
call
and
pop
mov
addl
inc
push
ret
imul
mov
fmuls
add
test
add
add
or
or
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
movb
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
bound
adc
xchg
or
mov
jmp
popf
mov
fmuls
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jl
shrl
mov
or
sldt
add
jno
sub
xor
mov
sbb
add
jmp
arpl
add
push
xor
cli
jb
repnz
or
js
push
push
rdtsc
pop
pop
pop
pop
push
push
pusha
push
push
rdtsc
pop
pop
jmp
push
xor
sub
and
mov
nop
push
push
call
and
pop
mov
addl
inc
push
ret
cmc
jae
cmp
cld
mov
or
push
push
push
call
and
pop
mov
addl
inc
push
ret
data16
out
mov
or
push
call
and
pop
mov
addl
inc
push
ret
or
testb
mov
xor
pop
push
jmp
lods
push
fdivrl
orl
adc
cli
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
repz
push
sub
push
push
push
call
and
pop
mov
addl
inc
push
ret
xlat
call
push
dec
jo
pop
jge
aad
dec
jae
stc
movzwl
pop
call
push
push
call
and
pop
mov
addl
inc
push
ret
loope
push
mov
pop
lea
push
push
call
and
pop
mov
addl
inc
push
ret
sar
shll
test
jle
movswl
cmpl
jne
stc
or
push
push
push
call
and
pop
mov
addl
inc
push
ret
jp
ljmp
nop
push
jbe
push
push
rdtsc
pop
pop
pop
push
push
push
js
push
push
rdtsc
pop
pop
rdtsc
jmp
movsb
push
scas
imul
mov
inc
push
push
imul
mov
sbb
or
push
call
and
pop
mov
addl
inc
push
ret
and
mov
dec
sldt
call
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
push
lcall
orl
ret
push
push
call
and
pop
mov
addl
inc
push
ret
mov
lds
mov
add
or
or
add
push
jns
cmp
add
decl
pusha
jmp
cmc
in
add
lods
jg
int
push
imul
add
add
mov
push
push
call
and
pop
mov
addl
inc
push
ret
out
imul
add
push
push
call
and
pop
mov
addl
inc
push
ret
jp
loopne
xlat
and
add
add
and
jns
icebp
dec
pop
filds
pop
popa
xor
lea
mov
pop
mov
mov
incl
push
push
call
and
pop
mov
addl
inc
push
ret
movsb
data16
push
push
je
mov
pop
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
scas
xchg
adc
xchg
xchg
cmp
or
lock
add
add
mov
pop
pusha
popa
popa
pop
mov
call
push
stc
pop
sahf
out
mov
cmp
push
out
cmc
pop
mov
out
jnp
mov
in
or
cmp
jae
mov
movzbl
sub
mov
mov
mov
cld
shr
mov
mul
sub
push
cld
pop
mov
mov
jmp
sub
mov
call
or
cmp
lret
adc
mov
add
mov
add
clc
cmp
jae
jmp
mov
mov
cld
and
je
mov
mov
andl
mov
mov
xor
jmp
lea
sub
push
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
call
mov
mov
mov
and
stc
cld
push
push
call
and
pop
mov
addl
inc
push
ret
mov
add
add
pop
push
loop
mov
add
push
call
and
pop
mov
addl
inc
push
ret
jnp
mov
fmuls
mov
sub
push
push
call
and
pop
mov
addl
inc
push
ret
out
sti
insl
mov
lods
xor
shr
add
sub
jne
push
push
call
and
pop
mov
addl
inc
push
ret
mov
or
or
push
call
and
pop
mov
addl
inc
push
ret
inc
ljmp
mov
or
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jg
mov
push
mov
mov
add
mov
mov
shr
add
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
sub
push
fmuls
cld
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
push
rcrl
stc
mov
mov
lea
jmp
mov
call
mov
cltd
inc
cmp
xor
jl
cltd
shll
cmp
sbb
test
fcompl
mov
add
test
add
xchg
sub
fmuls
pop
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
shl
lret
cmpl
jbe
mov
pusha
pusha
xor
mov
popa
mov
jmp
rcrl
mov
lock
cmp
and
mov
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
enter
mov
in
fmuls
mov
push
push
call
and
pop
mov
addl
inc
push
ret
andb
cmc
xor
or
test
stc
nop
push
push
pusha
je
push
pop
popa
rdtsc
js
push
pop
pop
pop
push
jne
jmp
cmp
jns
pop
hlt
jns
fs
ja
movzwl
sub
push
pusha
call
push
cmp
fldcw
movsl
sbb
outsl
jl
test
sbb
or
mov
sub
or
adc
add
inc
xchg
data16
into
dec
lcall
shrb
add
add
incl
pop
add
push
pop
push
pop
popa
jb
jae
popa
push
jmp
xor
mov
pusha
jmp
jb
jbe
jmp
pop
mov
pop
popa
popa
mov
push
jmp
push
jge
cmp
push
icebp
lcall
imul
and
push
push
push
jge
pop
rdtsc
jmp
sub
shlb
push
push
call
and
pop
mov
addl
inc
push
ret
push
adc
dec
or
jmp
mov
push
dec
lods
in
and
and
mov
add
add
popf
fisttpll
frstor
fmuls
push
mov
pop
mov
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
aaa
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
ficompl
add
add
add
or
or
or
or
push
call
and
pop
mov
addl
inc
push
ret
enter
cld
xchg
stc
push
add
jbe
pusha
call
aas
xor
cmp
std
push
adc
xor
push
aas
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sti
sahf
mov
mov
mov
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jns
testb
fucomi
or
add
nop
pop
out
xor
test
push
jmp
xchg
je
pusha
cmpsb
xchg
jle
xchg
rdtsc
pusha
push
push
rdtsc
pop
pop
push
push
rdtsc
pop
pop
popa
pop
pop
push
jmp
das
test
jmp
xchg
mov
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
add
into
cld
sti
pop
mov
pushl
ja
jo
or
push
push
pusha
jmp
jl
scas
and
push
daa
or
test
jmp
arpl
les
add
pop
ret
lea
pusha
mov
mov
popa
nop
jno
push
push
jb
rdtsc
push
pop
pop
pop
push
push
pusha
jmp
enter
xchg
popa
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
pop
orl
fmuls
call
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
add
scas
jl
cltd
sub
popa
push
push
call
and
pop
mov
addl
inc
push
ret
jb
arpl
lret
pop
sub
mov
add
add
or
test
add
add
xlat
or
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
out
push
pop
jmp
mov
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
jg
or
call
out
xor
pop
cmp
xchg
sti
insb
push
rorl
iret
fnstcw
xor
mov
pop
movswl
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
lret
stc
cmpl
je
mov
pushl
sub
call
push
push
call
and
pop
mov
addl
inc
push
ret
hlt
pop
cmp
pop
push
mov
mov
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
or
pop
jae
stc
mov
xchg
je
jmp
mov
adc
push
jmp
push
sub
ja
mov
xchg
xor
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
dec
fdivs
jmp
arpl
xchg
lds
fmuls
push
push
call
and
pop
mov
addl
inc
push
ret
fidivl
fistl
mov
mov
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
mov
popf
fmuls
call
jns
adc
scas
sub
andb
mov
les
add
push
push
call
and
pop
mov
addl
inc
push
ret
dec
movsl
les
sti
ljmp
clc
jne
push
xor
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
ret
jmp
add
push
mov
add
popf
in
sub
or
push
call
and
pop
mov
addl
inc
push
ret
jae
xor
lea
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cwtl
mov
fwait
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
adc
jmp
xchg
test
outsl
sub
add
push
xchg
dec
mov
pushl
mov
mov
call
sub
xchg
js
pusha
jae
jmp
test
jle
lcall
mov
pusha
jnp
jmp
adc
dec
mov
adc
push
rdtsc
pop
pop
pop
popa
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
loope
in
and
xchg
dec
and
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
loope
call
xchg
lods
and
or
adc
add
or
add
lods
int3
idivb
mov
or
jg
cmpw
je
push
call
in
addr16
jecxz
sbb
fimuls
mov
cmp
fmuls
pop
pop
push
pusha
push
jmp
repnz
test
sti
push
aaa
xor
lods
xor
push
pop
pop
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
jns
loop
repz
or
clc
fisttpl
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
ds
adc
cmp
fisttpl
call
ret
push
dec
push
std
nop
cs
inc
icebp
push
cld
mov
mov
pop
call
push
push
call
and
pop
mov
addl
inc
push
ret
andb
xchg
inc
stos
fucomp
sldt
add
test
mov
sbb
in
repnz
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
lock
jo
test
mov
lea
test
fmuls
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
lods
movl
push
push
call
and
pop
mov
addl
inc
push
ret
and
movsl
fisttpl
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
jne
mov
push
push
call
and
pop
mov
addl
inc
push
ret
scas
xchg
adc
mov
pop
test
cmc
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
push
mov
nop
pusha
pusha
jl
push
pop
popa
pusha
push
pop
push
push
rdtsc
pop
pop
popa
popa
push
ja
push
push
jns
rdtsc
jg
pop
pop
nop
call
mov
xchg
mov
mov
dec
scas
inc
mov
cli
pop
push
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
mov
add
push
call
and
pop
mov
addl
inc
push
ret
ljmp
movzwl
add
lea
push
push
call
and
pop
mov
addl
inc
push
ret
jae
push
aam
jg
rolb
add
add
pop
ret
pop
mov
addl
inc
push
ret
cmp
add
add
movzwl
nop
pusha
pusha
jmp
loop
std
je
sub
jle
sub
ret
pusha
jl
popa
pusha
pusha
popa
pusha
popa
popa
popa
push
pusha
je
pusha
popa
push
push
push
pop
rdtsc
jle
pop
pop
popa
nop
push
push
call
and
pop
mov
addl
inc
push
ret
fnstsw
xchg
push
mov
pop
pusha
mov
mov
popa
push
mov
push
jmp
leave
out
add
sbb
pop
call
push
push
call
and
pop
mov
addl
inc
push
ret
aas
adc
sub
test
mov
add
and
jl
mov
pop
lea
mov
call
push
or
pop
cmpl
jne
xor
push
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
adc
mov
sbb
push
pusha
jmp
popf
pop
inc
dec
sbb
pop
mov
jns
pusha
popa
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cs
pop
inc
xchg
fcmovnu
and
or
xchg
std
sbb
or
push
call
and
pop
mov
addl
inc
push
ret
xor
xchg
outsl
pop
out
mov
mov
jmp
call
pop
sub
mov
jmp
daa
mov
adcb
or
or
ret
mov
mov
nop
push
push
ja
push
push
rdtsc
pop
pop
rdtsc
jl
push
pop
pop
pop
push
push
push
push
pusha
popa
rdtsc
jno
pop
pop
pop
nop
pusha
jmp
or
wrmsr
or
xor
push
mov
pop
mov
jmp
inc
fists
das
call
test
add
add
add
and
pop
mov
addl
inc
push
ret
inc
adc
into
ret
pop
add
cmp
fmuls
push
push
push
call
and
pop
mov
addl
inc
push
ret
ja
outsb
push
shl
pushl
add
call
jmp
mov
mov
mov
out
call
out
mov
push
popf
call
lea
jnp
andb
in
aad
data16
pop
pop
in
jns
movswl
cmp
jae
mov
movzbl
mov
mov
sub
mov
mov
shr
mov
mul
mov
sub
pusha
push
jmp
rcll
mov
loop
sahf
sub
out
pusha
mov
call
lock
rcll
xchg
into
and
popa
mov
mov
jmp
push
mov
pop
sub
mov
pusha
mov
mov
popa
mov
add
mov
add
mov
cmp
jae
pusha
push
mov
pop
jmp
mul
mov
fldenv
inc
add
add
or
jmp
mov
fmuls
add
and
je
mov
andl
mov
mov
mov
jmp
lea
push
push
call
and
pop
mov
addl
inc
push
ret
inc
jmp
cmp
push
xchg
push
push
push
call
and
pop
mov
addl
inc
push
ret
shlb
jnp
call
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cltd
jmp
and
push
push
call
and
pop
mov
addl
inc
push
ret
push
in
lods
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cltd
lret
popa
mov
xor
shlb
mov
fmuls
sub
push
push
call
and
pop
mov
addl
inc
push
ret
and
mov
lods
xor
shr
add
sub
jne
push
mov
pop
xor
cld
or
mov
mov
mov
or
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
fcmovbe
sub
inc
arpl
lret
mov
push
mov
mov
add
mov
mov
shr
add
mov
pop
call
std
adc
stc
xchg
or
add
pop
call
fs
out
add
ljmp
adc
or
add
add
add
and
pop
mov
addl
inc
push
ret
in
popa
xchg
mov
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
in
insb
cwtl
lret
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
mov
or
adc
add
stc
mov
into
cmp
stos
pop
insl
inc
pop
jae
mov
mov
test
je
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
mov
pop
and
or
or
jbe
stc
pusha
mov
mov
push
mov
pop
and
pusha
add
call
mov
or
pop
or
outsb
daa
add
pop
popa
or
je
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
hlt
add
aad
xor
push
push
call
and
pop
mov
addl
inc
push
ret
cmpl
in
and
adc
je
pusha
push
pop
push
push
rdtsc
pop
pop
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
adc
sub
mov
aaa
inc
or
pop
push
or
push
push
push
push
push
rdtsc
pop
pop
pop
pop
xorl
push
push
call
and
pop
mov
addl
inc
push
ret
push
mov
mov
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
bound
test
clc
fisttpl
xor
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
sub
or
or
mov
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
xor
in
sub
dec
fsubr
lret
add
cmc
jge
mov
jbe
jmp
mov
icebp
dec
lods
xor
and
jge
test
sbb
or
or
and
fmuls
mov
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jno
mov
mov
mov
xor
xchg
pusha
pusha
jge
jmp
divl
hlt
lds
jnp
or
sub
pusha
push
push
rdtsc
pop
pop
pusha
popa
popa
popa
push
push
push
push
push
pop
rdtsc
je
pop
pop
pop
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
dec
pop
pusha
mov
movzwl
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
dec
jb
inc
inc
push
jo
jno
jmp
inc
lcall
xor
aad
add
test
clc
fisttpl
push
push
call
and
pop
mov
addl
inc
push
ret
inc
jge
nop
xchg
lods
xchg
inc
jp
mov
push
push
pusha
push
pop
pusha
popa
popa
pop
mov
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
or
shlb
add
add
and
pop
mov
addl
inc
push
ret
mov
cmp
jge
xor
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
lds
js
sti
fldenv
xlat
repnz
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
fcoms
xor
pop
mov
add
jmp
mov
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
call
decl
or
mov
add
add
popf
cmp
xlat
cmp
outsl
xor
or
jne
push
push
call
and
pop
mov
addl
inc
push
ret
in
orl
clc
pop
sub
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
push
test
dec
dec
int3
add
mov
sbb
popa
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
jno
mov
mov
jmp
add
inc
mov
stos
jns
push
call
push
push
call
and
pop
mov
addl
inc
push
ret
out
mov
mov
pusha
mov
or
popa
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
dec
sub
loop
pusha
jmp
xchg
inc
mov
fs
bnd
dec
insl
lcall
incl
aas
adc
push
pusha
push
push
jmp
xor
rdtsc
pusha
popa
pop
pop
jmp
pop
scas
faddp
mov
popa
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
mov
loop
popf
mov
mov
clc
fisttpl
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
arpl
fsubl
mov
sbb
or
fisubl
xchg
lds
fmuls
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pusha
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cltd
rcrb
pusha
mov
mov
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
or
mov
jle
sub
or
xchg
add
add
add
mov
mov
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
dec
inc
jnp
add
or
add
push
call
and
pop
mov
addl
inc
push
ret
cmpsb
mov
xor
cld
push
push
push
call
and
pop
mov
addl
inc
push
ret
sarb
xor
clc
fisttpl
sub
call
movzwl
push
pusha
jmp
dec
sti
in
push
mov
push
pusha
push
push
rdtsc
pop
pop
push
push
rdtsc
pop
pop
popa
popa
mov
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
rcl
sti
or
and
or
and
or
je
mov
xchg
js
jmp
adc
lods
test
mov
add
add
adc
add
and
lcall
das
pop
into
dec
mov
add
add
add
and
pop
mov
addl
inc
push
ret
dec
cmpsb
mov
repz
or
add
mov
rorl
pushl
sub
call
push
push
call
and
pop
mov
addl
inc
push
ret
mov
cli
insb
ljmp
mov
mov
pushl
mov
call
jge
cmpl
je
xor
mov
ja
mov
movb
push
push
call
and
pop
mov
addl
inc
push
ret
mov
xchg
pop
or
fbld
call
ja
push
adc
shll
or
pop
movl
push
push
call
and
pop
mov
addl
inc
push
ret
add
leave
mov
gs
mov
jmp
jmp
cli
fs
inc
icebp
test
xlat
push
xor
call
and
pop
mov
addl
inc
push
ret
fisubrs
cmp
fmuls
lea
movswl
push
pusha
push
je
pop
pusha
push
pop
jmp
xchg
cmp
pusha
sbb
mov
popa
popa
mov
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
testb
and
popf
int
fmuls
push
movzwl
lea
push
push
call
and
pop
mov
addl
inc
push
ret
jne
rolb
incb
xor
fmuls
pusha
call
rcll
and
push
ss
add
mov
fmuls
popa
push
pusha
jne
jmp
or
sub
js,pn
push
call
add
add
pop
popa
mov
or
push
stc
push
push
push
call
and
pop
mov
addl
inc
push
ret
adcb
fcompl
stos
and
call
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
xor
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
std
sbb
in
mov
pushf
ret
mov
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
lea
or
or
mov
nop
pusha
pusha
jle
jmp
push
add
and
fstpt
pusha
push
pop
jmp
push
sbb
loop
sub
adc
push
pusha
jmp
dec
lock
enter
jge
inc
jmp
rdtsc
pop
pop
push
pop
popa
popa
nop
push
push
call
and
pop
mov
addl
inc
push
ret
ficomps
mov
call
mov
jmp
call
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
andl
add
push
call
and
pop
mov
addl
inc
push
ret
movsl
lea
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
pushf
xorb
or
popf
aad
fmuls
nop
push
push
push
jp
rdtsc
push
pop
pop
pop
pop
push
push
push
jmp
push
jnp
scas
mov
dec
fiadds
mov
nop
push
push
call
and
pop
mov
addl
inc
push
ret
cld
pushl
sbb
mov
push
push
call
and
pop
mov
addl
inc
push
ret
out
mov
fmuls
push
push
call
and
pop
mov
addl
inc
push
ret
sti
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
sub
popf
aad
fmuls
or
pushl
pusha
push
mov
pop
mov
popa
call
jmp
mov
mov
out
or
in
cmp
jae
push
add
pop
sub
movzbl
mov
and
mov
mov
shr
mov
mul
sub
movzwl
mov
jbe
mov
jmp
call
inc
test
clc
cmc
enter
imul
roll
or
fmuls
pop
add
mov
pusha
mov
mov
popa
mov
add
mov
mov
add
mov
cmp
jae
push
cld
pop
jmp
sub
mov
mov
mov
and
je
andl
pusha
mov
jne
mov
popa
mov
jmp
lea
push
push
call
and
pop
mov
addl
inc
push
ret
sar
hlt
mov
add
push
call
and
pop
mov
addl
inc
push
ret
ret
in
xor
fmuls
call
ja
mov
mov
mov
and
push
push
call
and
pop
mov
addl
inc
push
ret
inc
test
aas
add
cmp
addb
add
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xor
jns
lahf
sub
push
push
call
and
pop
mov
addl
inc
push
ret
add
xchg
jbe
test
aaa
fmuls
lods
xor
shr
add
sub
jne
cmc
push
push
call
and
pop
mov
addl
inc
push
ret
iret
mov
sub
or
sbb
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
or
push
bnd
push
dec
mov
dec
xchg
jbe
mov
lea
mov
or
ret
add
mov
mov
shr
add
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
dec
fwait
shrb
push
call
and
pop
mov
addl
inc
push
ret
or
or
je
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jns
mov
sbb
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
mov
and
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
lret
mov
mov
sub
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
lock
xchg
es
mov
cmpl
jbe
mov
pusha
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
xor
add
adc
ljmp
or
mov
add
and
pusha
mov
ja
mov
popa
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
sarb
mov
xchg
stos
fadds
test
add
add
test
sbb
or
or
leave
repnz
jo
pop
popa
xor
push
push
call
and
pop
mov
addl
inc
push
ret
lock
mov
mov
mov
nop
push
jmp
or
push
xor
add
add
cs
std
outsb
pop
mov
push
add
add
or
mov
pop
push
mov
push
pusha
push
push
push
rdtsc
pop
pop
pop
jno
jmp
es
add
popa
addl
ja
mov
mov
call
call
jg
jnp
xor
test
mov
pop
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xor
add
sub
loope
add
push
push
call
and
pop
mov
addl
inc
push
ret
jmp
jo
notl
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
in
cmp
shl
mov
daa
fmuls
movl
adc
stc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
add
fdivr
jne
jmp
pusha
dec
into
rcrb
mov
mov
jp
mov
mov
movswl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
test
inc
add
add
add
add
and
pop
mov
addl
inc
push
ret
cmp
cmpl
push
rdtsc
pop
pop
pop
rdtsc
push
jmp
icebp
dec
lods
xor
and
pop
pop
pop
push
push
push
push
jne
pop
rdtsc
jg
pusha
popa
pop
pop
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
xor
adcb
test
fmuls
mov
pushl
mov
call
incl
pop
add
push
jge
rdtsc
pusha
popa
pop
pop
pop
push
push
push
push
jmp
sub
pusha
xchg
inc
rdtsc
push
pop
pop
pop
pop
mov
pusha
jmp
mov
sbb
xchg
js
jmp
adc
add
adc
in
xchg
dec
aaa
fsts
aam
aas
mov
mov
push
jmp
iret
sbb
ret
add
divb
jnp
fs
mov
push
push
push
push
jmp
and
xchg
add
jmp
push
mov
xor
mov
adc
pop
pop
rdtsc
jge
jns
pop
pop
pop
pusha
call
adc
sbb
aad
leavew
push
bound
sahf
add
or
jg
leave
adc
test
rcll
pop
popa
lea
push
push
call
and
pop
mov
addl
inc
push
ret
adc
pop
mov
mov
nop
jnp
jmp
xchg
fs
fidivrl
repz
pop
xchg
pusha
push
pop
jns
popa
pop
nop
push
mov
pop
call
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsl
scas
scas
int3
sub
jb
popa
push
push
call
and
pop
mov
addl
inc
push
ret
inc
mov
popf
aaa
orb
test
add
add
push
call
and
pop
mov
addl
inc
push
ret
fdivl
push
xor
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
xlat
popa
cld
pusha
mov
sub
popa
jmp
mov
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
and
push
push
call
and
pop
mov
addl
inc
push
ret
iret
sbbl
push
add
add
pop
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
shl
jne
mov
push
xor
pop
cmpl
je
mov
mov
pushl
add
call
mov
mov
or
movl
mov
push
jp
jmp
push
cmp
jmp
jmp
enter
mov
sub
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
movsb
leave
mov
or
fmuls
mov
and
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
add
sub
push
call
push
sbb
xor
loope
test
daa
fmuls
push
push
call
and
pop
mov
addl
inc
push
ret
and
xchg
add
add
mov
mov
add
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
rclb
mov
and
lea
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
cs
add
add
push
call
and
pop
mov
addl
inc
push
ret
iret
inc
xchg
sbb
mov
clc
fisttpl
push
push
call
and
pop
mov
addl
inc
push
ret
jp
cmp
or
call
push
push
call
and
pop
mov
addl
inc
push
ret
in
push
jns
jmp
imul
xor
jp
lahf
mov
xchg
push
push
push
push
push
rdtsc
pop
pop
pop
rdtsc
push
jmp
pop
dec
into
or
add
repz
pop
pop
push
jmp
nop
xor
sub
cmp
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
jno
gs
int
jmp
mov
pushl
or
call
cmpl
je
sub
push
jg
jmp
pop
gs
push
shrb
jne
iret
lds
mov
pushl
jmp
call
or
lods
xorl
and
add
add
add
and
pop
mov
addl
inc
push
ret
stos
or
mov
or
pushl
mov
call
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
frstor
add
push
mov
mov
or
jle
movb
push
push
call
and
pop
mov
addl
inc
push
ret
jbe
xchg
movl
cmc
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
push
jmp
and
clc
mov
mov
stc
lea
push
push
call
and
pop
mov
addl
inc
push
ret
test
inc
sarb
add
add
jns
xchg
out
push
call
inc
test
mov
stc
push
adc
pop
nop
jp
jo
pusha
popa
push
jmp
push
cmc
push
subb
inc
jle
inc
repz
and
mov
addb
add
movswl
push
mov
push
cld
lea
push
push
call
and
pop
mov
addl
inc
push
ret
dec
xchg
mov
add
push
add
mov
nop
push
push
push
jp
rdtsc
pusha
popa
pop
pop
pop
push
jge
jne
pusha
popa
nop
push
push
call
and
pop
mov
addl
inc
push
ret
fisubrl
or
mov
push
push
add
call
push
push
call
and
pop
mov
addl
inc
push
ret
imul
add
cld
ss
enter
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
ret
aad
sub
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
into
and
add
ret
add
pop
in
flds
push
mov
nop
pusha
push
push
pop
pop
jmp
jge
lret
cmpsb
mov
mov
popa
push
pusha
jbe
pusha
popa
push
jge
pop
popa
nop
mov
call
mov
jmp
call
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
ljmp
and
or
or
push
call
and
pop
mov
addl
inc
push
ret
dec
jg
mov
adc
xlat
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
pop
inc
push
fcomi
adc
adc
or
fcmovnu
pcmpgtd
jo
pusha
push
pop
push
pop
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sub
xor
inc
mov
pushl
mov
mov
jp
jmp
or
fisttpll
out
adc
aas
rcrb
xor
test
mov
push
and
stc
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
addr16
cmp
or
add
add
add
cmp
add
out
out
pop
pop
loopne
out
adc
in
mov
movswl
cmp
jae
or
movzbl
jmp
sub
mov
stos
dec
mov
fmuls
je
mov
add
add
and
test
scas
xchg
xorl
enter
add
add
sub
or
call
mul
sub
mov
mov
mov
jmp
mov
mov
mov
cld
add
or
add
or
mov
cmp
jae
pusha
call
roll
bnd
sahf
insl
ljmp
in
fstps
jmp
sub
jle
scas
push
xchg
orl
add
add
mov
xor
and
je
jno
mov
andl
mov
mov
mov
jmp
lea
push
mov
call
add
mov
jmp
mov
dec
or
loope
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
jae
mov
mov
mov
mov
mov
sub
mov
lods
xor
shr
add
sub
jne
push
push
call
and
pop
mov
addl
inc
push
ret
aam
fld1
in
xlat
popf
pop
inc
push
push
call
and
pop
mov
addl
inc
push
ret
add
jmp
add
mov
xchg
imul
push
sub
or
jge
mov
mov
add
mov
mov
shr
add
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
dec
cmpsl
push
mov
cmpl
je
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
int3
iret
mov
push
lea
call
sub
subb
lods
xchg
xor
addb
add
movzwl
pop
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
and
adcl
fmuls
add
test
add
mov
cmpl
je
or
cmpl
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
aad
xchg
icebp
ds
jle
sub
xor
push
inc
test
mov
add
add
adc
add
mov
lods
and
xchg
mov
pushf
cs
lahf
adc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
add
sub
and
push
push
call
and
pop
mov
addl
inc
push
ret
jns
js
mov
leave
je
push
push
call
and
pop
mov
addl
inc
push
ret
fisttpl
cmp
add
adc
gs
iret
mov
mov
test
or
add
pop
dec
outsl
roll
enter
inc
xor
mov
nop
push
jmp
fisttps
inc
pop
push
jmp
imul
inc
nop
push
push
call
and
pop
mov
addl
inc
push
ret
in
push
push
adc
pop
push
js
push
push
push
pop
rdtsc
jnp
pop
pop
addl
push
push
call
and
pop
mov
addl
inc
push
ret
test
es
sub
mov
call
mov
mov
mov
push
pop
jmp
clc
mov
jle
jmp
push
je
popf
pop
mov
mov
imul
add
push
call
and
pop
mov
addl
inc
push
ret
mov
inc
in
push
lods
jle
out
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cmc
dec
mov
adc
mov
mov
push
mov
pop
mov
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
ss
add
add
mov
push
push
call
and
pop
mov
addl
inc
push
ret
and
jp
hlt
and
xchg
jmp
pop
fidivs
push
pusha
popa
pop
push
push
jno
rdtsc
jae
pop
pop
popa
xchg
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
pop
and
xchg
jg
mov
push
jmp
add
lcall
test
push
call
and
pop
mov
addl
inc
push
ret
xor
repnz
mov
lea
mov
push
jmp
shll
push
inc
mov
dec
scas
cmp
lods
mov
push
push
call
and
pop
mov
addl
inc
push
ret
out
mov
sub
call
sbb
popa
push
push
call
and
pop
mov
addl
inc
push
ret
sub
jbe
clc
movl
push
push
call
and
pop
mov
addl
inc
push
ret
rcll
mov
add
test
add
push
call
and
pop
mov
addl
inc
push
ret
in
aas
and
push
inc
sbb
sldt
add
mov
jnp
cmpsl
mov
push
mov
pop
mov
jmp
mov
push
pop
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
adc
subb
icebp
add
or
mov
add
add
or
mov
or
mov
add
test
add
add
add
and
pop
mov
addl
inc
push
ret
add
clc
fisttpl
add
test
add
mov
pushl
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
mov
dec
insb
add
fisttpl
push
mov
pop
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
jae
pop
mov
push
jae
call
mov
push
es
or
popf
popf
adc
or
jmp
cmp
pop
sub
loop
mov
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
out
loopne
call
jl
mov
push
mov
pop
mov
mov
mov
js
mov
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
stc
xchg
xchg
xchg
cmp
mov
jmp
inc
cmpsb
inc
repnz
popa
mov
add
inc
mov
cmpsb
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jns
inc
cmp
adc
or
push
call
and
pop
mov
addl
inc
push
ret
leave
jns
mov
jge
mov
mov
mov
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
sub
enter
lods
jmp
inc
cmp
adc
addr16
clc
lods
insl
aaa
sar
mov
clc
fisttpl
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsl
loopne
dec
jecxz
icebp
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
test
push
scas
imul
leave
sub
or
add
pusha
jmp
jbe
adc
mov
fbld
mov
push
pop
popa
push
jp
pusha
push
pop
jmp
jno
fisttpl
xchg
jno
add
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
addl
or
xchg
lods
and
or
push
call
and
pop
mov
addl
inc
push
ret
mov
and
dec
push
ja
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
pop
mov
mov
sub
mov
mov
xchg
push
pusha
push
push
rdtsc
pop
pop
jmp
in
push
adcl
dec
loope
pop
push
push
push
jmp
push
loope
aam
xchg
fidivl
aaa
jne
pop
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
insl
subl
push
pop
pushl
mov
call
mov
mov
pushl
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
adc
inc
jne
push
rcrl
popa
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
dec
and
jp
mov
mov
movb
push
push
call
and
pop
mov
addl
inc
push
ret
call
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
test
push
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
jg
icebp
pop
xor
mov
mov
jmp
cmp
add
jmp
pop
ficompl
fiadds
andl
rolb
cmpsb
jg
test
call
jecxz
lods
inc
fs
stos
dec
xlat
mov
frstor
shlb
jecxz
xchg
push
int
add
cmp
adc
loope
lods
imul
pop
mov
xchg
adc
mov
dec
aad
cmp
mov
adcl
fiadds
adc
ficoml
cwtd
jo
jle
ss
nop
add
jno
dec
inc
fmull
test
xchg
pop
adc
into
lods
adc
dec
inc
mov
or
data16
jp
xchg
shlb
rorl
and
jmp
push
dec
call
into
mov
mov
xlat
xchg
add
into
jae
sub
xlat
dec
pop
mov
mov
lods
sbb
pop
lcall
push
dec
pop
fisubrl
add
pop
rcll
lock
xchg
cs
stos
mov
mov
in
into
ret
vxorps
cmp
dec
gs
mov
pop
mov
cmp
jle
and
mov
into
outsb
gs
gs
jmp
push
lea
std
dec
jnp
in
add
add
mov
sbb
push
inc
mov
inc
into
mov
cld
and
ffree
pusha
mov
cmp
add
pop
sti
mov
sbb
jecxz
movsl
sbb
jle
pop
adc
sbb
inc
push
ret
pop
dec
xchg
nop
bswap
fiaddl
pop
add
repnz
mov
add
add
aam
fidivl
rcr
mov
and
shrl
aad
ja
inc
call
add
add
jecxz
xchg
push
imul
pop
xlat
jo
push
das
pop
repnz
or
leave
mov
cltd
cltd
add
rorb
or
jle,pt
push
ret
pop
adc
and
cmp
pop
leave
push
dec
inc
pusha
cmp
ljmp
imul
jbe
inc
test
add
hlt
jecxz
xchg
push
fs
mov
mov
js
mov
sbb
into
pop
inc
stc
jmp
clc
xor
jae
ret
addr16
jmp
add
add
mov
mov
fcoml
insb
je
outsl
mov
int
inc
mov
add
add
jecxz
xchg
imul
xor
test
fisubl
fadds
sti
incb
js
pop
hlt
mov
vpsubq
sbb
push
fimull
sahf
pop
lret
and
push
add
fstpt
fcoms
xchg
aas
test
inc
fmulp
push
xor
xchg
mov
cmp
sub
jo
inc
pop
fwait
inc
movsb
fdivrs
or
cs
push
fidivs
call
and
sub
enter
cmp
sbb
scas
mov
add
dec
pop
out
adc
sahf
ret
outsb
shlb
sbb
pop
dec
jno
mov
mov
sbb
inc
scas
dec
imul
cmp
arpl
jge
inc
mov
push
shlb
aas
stc
in
jno,pt
addl
cli
in
out
incb
pusha
addl
jnp
inc
cmp
xchg
mov
sub
shrb
cmp
push
lods
bound
xchg
repnz
scas
test
addl
lds
xchg
jb
mov
pop
or
dec
gs
and
iret
les
dec
xor
leave
outsb
mov
sbbb
insb
in
sbbl
jbe
or
in
add
add
mov
data16
adc
lcall
jle
fists
mov
lods
or
cmpb
jge
sub
in
sti
popa
push
push
sti
popa
pop
rcr
fistps
lods
outsb
cmp
inc
aam
enter
cmpsl
xchg
push
cmpsb
jl
aam
or
cmp
or
and
pushf
or
out
adc
push
icebp
movsb
bound
sub
cmp
cmpsb
dec
push
xor
xor
mov
lea
pop
xchg
or
sub
xchg
rdmsr
jmp
outsb
movsl
insb
into
and
pop
xchg
sub
das
or
cmp
adc
sub
jmp
xchg
adc
fmull
mov
enter
dec
mov
sbb
sarl
mov
enter
mov
mov
lea
mov
push
and
ror
mov
mov
sti
mov
mov
clc
pop
sbb
mov
add
pop
mov
jb
stos
jns
cmp
shrb
stc
lods
mov
into
dec
sbb
lret
fstpl
insb
ss
lods
sub
out
aas
and
mov
imul
mov
cltd
pop
pop
fdivrs
xor
sti
fcompl
das
xchg
sub
mov
call
add
xchg
insb
mov
js
push
lret
sarl
mov
add
and
pop
mov
cwtl
or
call
adcb
push
mov
add
add
pop
sub
xchg
pop
push
mov
add
sub
xchg
pop
mov
push
mov
mov
xor
xor
push
mov
xor
pop
sub
mov
addl
pop
push
mov
add
mov
mov
add
pushl
pop
add
pushl
pop
add
jmp
push
jl
xor
dec
movsl
xorl
and
pop
push
rclb
bound
ret
push
inc
jle
pop
shl
outsl
out
das
sub
mov
pop
sbb
add
add
mov
add
add
add
add
jo
add
mov
loop
ds
cwtl
lock
dec
cli
lods
mov
jl
xor
lds
imul
out
movsl
add
cmp
and
das
mov
fmull
jecxz
mov
xor
inc
mov
sbb
aas
iret
aaa
pushf
lods
ret
sub
add
sbb
daa
rcrl
les
ja
fisubl
pop
jmp
scas
add
iret
lods
in
xor
pop
dec
fs
adc
imul
pusha
js
inc
mov
cli
cmp
fisubl
cwtl
pop
rcll
test
xor
decb
leave
pop
or
xor
leave
pop
lret
mov
data16
mov
mov
add
add
jecxz
xchg
cs
test
dec
mov
out
enter
dec
out
repnz
mov
xor
xchg
out
jecxz
ret
fists
or
cli
je
push
ret
fnsave
mov
sbb
adc
jl
lods
or
mov
xchg
push
add
add
aas
jecxz
nop
outsl
mov
or
sti
add
mov
mov
dec
call
aad
ljmp
repz
jo
jbe
adc
push
inc
mov
cmp
lock
mov
mov
sbb
lret
clc
scas
mov
aad
int3
inc
notb
add
add
mov
ret
fbstp
repnz
pop
mov
inc
loopne
scas
and
fistpl
fisubl
mov
mov
cmp
sti
adc
fistpl
dec
inc
dec
pop
sbb
ljmp
pop
mov
loop
mov
cld
int
jns
cld
fisubl
and
mov
sbbb
add
add
mov
add
negl
nop
pextrw
test
data16
jg
xchg
pop
mov
dec
cli
stos
jle
mov
sub
lea
iret
popf
add
repz
pop
sub
pop
jmp
push
adc
rorl
push
adc
int3
insb
jne
ret
and
add
add
out
jecxz
xchg
das
std
stos
popf
or
jmp
jmp
push
add
in
xor
xchg
int
inc
lds
pop
jns
cmp
pop
mov
loope
adc
push
cmp
pop
mov
and
cmp
sbb
mov
movsl
dec
cmpsl
pop
jae
js
stos
xchg
in
xlat
shrl
sub
ja
add
mov
dec
ficoms
notl
cmp
aaa
nop
add
aam
sbbb
mov
adc
xor
inc
pop
cwtl
dec
outsl
cmc
out
add
add
pop
imul
jle
xor
stc
add
addr16
les
pop
xor
int
push
lock
xor
dec
daa
aam
fildl
rclb
dec
mov
out
mov
arpl
xor
pop
fistpll
jp
push
je
pop
ror
pop
test
and
mov
xchg
add
fmuls
cmpsl
cmpsb
add
add
cwtl
push
popf
push
roll
add
aaa
mov
add
sbb
in
pop
mov
cmpsb
adc
rsqrtps
daa
cltd
pop
inc
ror
into
mov
ljmp
pop
mov
pop
orl
fdivrl
repnz
or
add
aam
push
fstps
cmp
mov
test
mov
cld
push
iret
xor
sub
imul
ret
loop
pop
nop
push
and
jmp
das
dec
and
or
gs
xchg
mov
inc
xor
nop
or
jl
dec
fildl
add
cmpsl
mov
xorb
or
add
les
mov
mov
in
fcmove
cli
xor
jne
movsb
push
iret
push
aas
nop
push
ficoms
cltd
or
mov
out
sbb
jmp
in
arpl
and
adc
imulb
int3
enter
inc
mov
icebp
out
int3
pushf
or
lods
das
std
icebp
out
gs
cmp
adcb
jne
arpl
and
push
dec
inc
jne
lret
ret
sarb
add
rorl
stc
icebp
and
sub
xor
and
pop
mov
mov
cld
inc
sbb
pop
inc
loopne
js
push
ss
ret
adc
inc
mov
jecxz
je
rcrb
pop
imul
add
jbe
popa
push
xlat
mov
frstor
pop
sahf
adc
sbb
and
cmp
jmp
mov
jg
jno
gs
gs
pop
aad
pop
mov
insb
notb
cltd
or
mov
jmp
pop
gs
ficoml
xchg
stos
mov
mov
xor
cs
lahf
das
std
cmpsb
mov
fisttpll
push
jle
push
cmc
imul
mov
lahf
or
xchg
adc
add
push
cld
nop
nop
aaa
jecxz
push
adc
mov
mov
aam
in
movsl
sbb
push
fdivrl
ret
test
mov
mov
int
inc
fxch
inc
loop
movsb
pop
xchg
xor
mov
jge
or
js
lahf
xor
add
add
xor
cld
pop
or
mov
js
push
lret
sarl
mov
add
and
pop
mov
cwtl
or
call
subb
add
mov
push
mov
push
mov
mov
push
mov
add
pop
push
mov
add
push
mov
popl
pushl
pop
add
mov
push
mov
add
add
xchg
pop
jmp
cmpsb
pop
fneni(8087
jge
xor
cs
add
jmp
ret
pop
jnp
inc
loop
add
cs
ds
iret
xchg
dec
out
mov
dec
sbb
sbb
mov
sbb
or
adc
add
fcoms
movsl
repz
sub
cmp
add
nop
push
push
push
push
push
pop
rdtsc
push
pop
pop
pop
rdtsc
pusha
jg
push
pop
popa
pop
pop
push
push
push
push
push
jae
rdtsc
jmp
pop
adc
xchg
mov
ds
push
pop
xor
xor
adc
add
pusha
mov
sub
jg
ljmp
pop
pop
nop
stc
push
push
push
call
and
pop
mov
addl
inc
push
ret
inc
xor
jg
in
test
orb
push
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
mov
cli
cmpsl
je
jmp
mov
and
dec
shr
cmp
lods
or
add
push
push
call
and
pop
mov
addl
inc
push
ret
pop
add
cmp
add
add
fildll
cmpb
sbb
mov
xchg
add
add
or
jmp
call
in
ja
cmp
push
push
push
rdtsc
pop
pop
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
push
sub
fmuls
push
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
enter
out
call
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
jg
icebp
pop
call
push
push
call
and
pop
mov
addl
inc
push
ret
les
xlat
sbb
cmpl
jne
call
addr16
and
push
fists
pop
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
or
ja
mov
push
push
jl
push
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
and
and
call
push
push
call
and
pop
mov
addl
inc
push
ret
jno
jne
shr
push
add
add
loop
or
repz
dec
push
push
mov
pop
pop
jmp
call
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
mov
xor
add
mov
and
lea
mov
nop
jmp
les
fistpll
out
and
add
push
rdtsc
pop
pop
push
pop
popa
nop
mov
pushl
xor
and
mov
mov
incl
push
push
call
and
pop
mov
addl
inc
push
ret
cltd
xor
mov
sbb
decl
mov
sbb
or
push
call
and
pop
mov
addl
inc
push
ret
sbb
popa
sub
add
fmuls
call
jmp
xor
mov
pusha
mov
popa
out
sbb
in
mov
cmp
jae
js
movzwl
movzbl
pusha
mov
mov
popa
mov
mov
mov
and
shr
pusha
push
sub
pop
mov
popa
mul
sbb
sub
mov
mov
or
jmp
mov
mov
mov
add
movzwl
add
xor
cmp
jae
mov
jmp
pusha
mov
mov
popa
mov
mov
and
je
push
pop
andl
jb
mov
cmc
jmp
lea
movswl
push
call
cmp
mov
pop
mov
fwait
das
in
imul
mov
add
popa
pop
call
jmp
cltd
sub
dec
js
mov
and
and
push
push
call
and
pop
mov
addl
inc
push
ret
inc
add
hlt
mov
cld
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
sub
push
push
call
and
pop
mov
addl
inc
push
ret
xor
mov
lods
xor
shr
add
sub
jne
push
push
call
and
pop
mov
addl
inc
push
ret
insl
mov
mov
test
lea
fmuls
or
push
push
call
and
pop
mov
addl
inc
push
ret
and
or
popf
mov
lea
mov
push
push
call
and
pop
mov
addl
inc
push
ret
and
mov
les
lea
push
call
and
pop
mov
addl
inc
push
ret
icebp
jle
mov
sub
or
ret
add
mov
mov
shr
add
mov
pop
xor
push
push
call
and
pop
mov
addl
inc
push
ret
call
dec
repnz
loop
jae
mov
mov
pusha
mov
popa
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
xor
lea
sub
jmp
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
push
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
nop
mov
int
xchg
mov
mov
mov
cmpl
jbe
jmp
lock
jmp
fdivrl
mov
mov
and
push
jmp
repnz
lcall
leave
je
push
push
call
and
pop
mov
addl
inc
push
ret
lock
rcll
add
mov
push
push
call
and
pop
mov
addl
inc
push
ret
call
movsl
add
or
test
add
add
add
and
pop
mov
addl
inc
push
ret
xchg
pop
sub
pop
sub
adcl
add
jmp
mov
ret
xlat
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
sbb
cld
push
push
push
call
and
pop
mov
addl
inc
push
ret
sub
jo
add
add
incl
pop
add
push
pop
pop
pop
push
push
push
jne
pop
pop
mov
jmp
stos
adc
or
dec
leave
jl
loope
out
mov
push
push
jmp
pop
std
adc
stc
xchg
or
adc
add
jmp
fstpt
cmp
pop
repz
pop
pop
mov
jmp
push
jmp
adc
aas
dec
pop
push
push
call
and
pop
mov
addl
inc
push
ret
adc
sub
or
call
movswl
mov
jmp
aad
xchg
fnsave
fsubr
xor
add
cld
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
fmuls
movl
push
push
call
and
pop
mov
addl
inc
push
ret
popa
rorb
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
mov
mov
jmp
xor
xor
loope
jmp
xchg
push
gs
push
test
mov
mov
mov
push
jne
push
push
pusha
popa
rdtsc
jns
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
icebp
sub
xor
mov
pushl
adc
pusha
and
mov
popa
call
incl
pop
add
push
jg
rdtsc
push
push
rdtsc
pop
pop
pop
pop
pop
push
jmp
jb
scas
jne
mov
push
push
jbe
jle
rdtsc
jmp
or
lahf
add
add
push
pusha
popa
rdtsc
push
pop
pop
pop
push
push
jle
rdtsc
jmp
cmpl
fs
lds
inc
and
pusha
push
push
jmp
loopne
adc
outsl
push
cmp
loop
dec
call
pop
pop
push
push
pop
pop
popa
pop
or
lea
movzwl
nop
jmp
lahf
jecxz
push
dec
enter
ror
push
in
adcl
add
add
mov
adc
jns
lahf
add
add
add
add
and
pop
mov
addl
inc
push
ret
dec
stc
jno
sbbl
xchg
frstor
fmuls
push
push
call
and
pop
mov
addl
inc
push
ret
movsb
imul
mov
movl
sbb
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
je
imul
add
add
push
call
and
pop
mov
addl
inc
push
ret
ds
lods
andb
decl
mov
and
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
and
lea
fmuls
sub
push
push
call
and
pop
mov
addl
inc
push
ret
bound
sub
test
das
fmuls
cmpl
jne
sub
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
jnp
dec
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
into
push
clc
dec
xchg
call
call
push
push
call
and
pop
mov
addl
inc
push
ret
push
imul
incb
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
daa
call
jo
loop
std
jge
mov
test
add
add
mov
xchg
pusha
push
push
pop
pop
jmp
mov
mov
ja
ftst
and
popa
push
jmp
fwait
lret
loope
cli
xchg
and
add
add
and
pop
mov
addl
inc
push
ret
out
sbb
outsb
jo
cmp
fisttpl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
stos
push
out
mov
push
push
mov
pop
jbe
call
push
push
call
and
pop
mov
addl
inc
push
ret
mov
or
or
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
jg
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
int3
add
outsl
das
imul
push
mov
xor
fmuls
popa
add
push
push
call
and
pop
mov
addl
inc
push
ret
lret
int
pop
nop
cltd
cmp
das
fmuls
mov
push
push
call
and
pop
mov
addl
inc
push
ret
outsl
jae
ds
movzwl
lea
push
push
call
and
pop
mov
addl
inc
push
ret
repz
daa
mov
cld
push
push
push
call
and
pop
mov
addl
inc
push
ret
daa
lahf
add
mov
clc
fisttpl
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
dec
pop
mov
push
jo
call
push
push
call
and
pop
mov
addl
inc
push
ret
jl,pn
pop
add
call
lods
lods
stos
aad
insl
mov
pop
push
push
jge
push
pop
pop
mov
mov
pushl
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
stc
out
addr16
mov
mov
cmpl
je
mov
sub
push
je
push
push
pusha
popa
rdtsc
push
pop
pop
pop
mov
pushl
mov
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
mov
sti
cmpsl
mov
jle
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsb
cmp
lea
fmuls
push
push
call
and
pop
mov
addl
inc
push
ret
aam
mov
test
add
add
or
or
je
push
mov
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
outsl
cwtl
movb
push
jmp
pop
mov
arpl
mov
ja
jns
sub
xchg
sbb
test
fmuls
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
sub
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
stc
pop
or
adcl
or
or
and
or
or
push
call
and
pop
mov
addl
inc
push
ret
jmp
jl
nop
jmp
sub
mov
pop
mov
fsubrs
mov
push
push
pusha
popa
pop
rdtsc
jmp
mov
dec
daa
mov
nop
push
push
call
and
pop
mov
addl
inc
push
ret
push
repnz
mov
push
outsb
xchg
pop
push
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
enter
das
xchg
mov
push
xor
lea
push
push
call
and
pop
mov
addl
inc
push
ret
xor
lods
xor
fmuls
add
mov
push
jge
push
push
jmp
imul
ja
jmp
cmc
sub
mov
in
loop
xor
adc
add
adc
lret
pusha
clc
push
adc
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
adc
and
sub
sbb
or
mov
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
in
call
sbb
lea
and
call
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
xorl
mov
add
test
add
add
push
call
and
pop
mov
addl
inc
push
ret
lods
adc
cmpsb
mov
add
push
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
nop
push
push
jmp
mul
fsubs
and
scas
mov
pop
mov
pop
pop
push
push
push
pusha
jmp
dec
mov
aad
fldcw
mov
pop
lret
jg
popa
rdtsc
pusha
jno
push
push
rdtsc
pop
pop
popa
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
lock
xor
jo
jmp
cmp
xchg
xchg
sub
push
jge
fstp
sbb
call
mov
jmp
call
pop
sub
xor
pusha
add
mov
popa
lea
push
push
call
and
pop
mov
addl
inc
push
ret
lcall
jmp
cmp
mov
pop
push
push
push
jmp
jnp
mov
arpl
jae
cmpsl
bound
push
add
add
xchg
add
add
mov
call
pop
pop
scas
loopne
dec
mov
sbb
pushl
mov
jge
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
sbb
lods
imul
sub
incl
jmp
shlb
jne
xchg
mov
testl
ljmp
push
call
and
pop
mov
addl
inc
push
ret
mov
add
xor
fldl
insl
mov
loope
fmuls
mov
call
jmp
adc
mov
mov
out
cld
in
or
cmp
jae
mov
mov
movzbl
push
mov
pop
mov
add
mov
mov
shr
mov
mul
mov
sub
mov
mov
je
mov
jmp
mov
mov
mov
cld
add
and
and
add
jmp
sbb
add
cmp
cmp
jae
sub
jmp
pusha
mov
jmp
test
add
decl
or
sbb
add
andl
mov
mov
sub
jmp
lea
ja
cld
push
call
lods
fiaddl
dec
ljmp
enter
push
push
push
jmp
shl
fdivs
cmp
sbb
fwait
cmp
ljmp
das
fmuls
call
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
add
or
and
push
push
call
and
pop
mov
addl
inc
push
ret
mov
sbb
add
add
or
xchg
sub
push
push
call
and
pop
mov
addl
inc
push
ret
outsb
push
jns
inc
scas
jmp
lret
jmp
dec
in
dec
jb
push
and
sub
sub
push
push
call
and
pop
mov
addl
inc
push
ret
shrl
ljmp
mov
fmuls
pusha
movzwl
mov
popa
lods
xor
shr
add
sub
jne
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
loop
mov
pop
pusha
mov
popa
or
jmp
xchg
mov
add
shlb
mov
mov
mov
cmc
push
mov
mov
add
mov
mov
shr
add
mov
pop
mov
mov
jmp
dec
fdivs
fmuls
add
test
add
mov
mov
and
lea
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
pop
inc
js
sbb
or
andl
or
je
add
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
inc
jl
or
mov
cmpl
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
out
popf
imul
pusha
js
jmp
test
push
incl
or
adc
push
push
call
and
pop
mov
addl
inc
push
ret
adc
call
mov
pop
and
push
push
call
and
pop
mov
addl
inc
push
ret
sub
mov
leave
je
push
push
call
and
pop
mov
addl
inc
push
ret
aam
in
push
ss
stc
mov
popa
xor
mov
call
aad
fsubs
push
add
add
xchg
xchg
andl
or
add
jge
cmp
insl
push
sbb
pop
pop
add
xor
call
pop
in
imul
pop
or
push
push
push
jle
pusha
popa
rdtsc
push
jmp
cltd
cli
xor
pop
jmp
or
pop
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
adc
shlb
push
push
call
and
pop
mov
addl
inc
push
ret
ds
or
push
pusha
push
push
push
rdtsc
pop
pop
pop
jp
pusha
popa
popa
addl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
loopne
repz
rorl
xor
test
clc
fisttpl
jmp
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
adc
dec
sub
or
movl
mov
mov
sub
mov
mov
movzwl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
out
cmp
or
popf
leave
sub
or
add
add
xor
push
cmpsb
sub
loope
and
adc
xchg
jne
jmp
push
jbe
and
in
aas
push
push
push
pusha
push
push
rdtsc
pop
pop
pusha
popa
popa
rdtsc
push
jbe
pop
pop
pop
xchg
mov
pushl
mov
mov
push
push
push
jmp
and
fidivl
movsb
mov
jne
pusha
popa
popa
pop
pop
addl
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
mov
mov
lea
movswl
nop
push
push
pusha
popa
pop
pop
push
push
push
push
pusha
popa
rdtsc
pusha
popa
pop
pop
pop
nop
push
sbb
pop
call
push
push
call
and
pop
mov
addl
inc
push
ret
fistpl
cmp
pop
add
add
adc
add
mov
xor
bound
push
test
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jae
or
jbe,pn
mov
movl
mov
cmpl
je
and
jmp
jbe
and
mov
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lahf
xchg
lahf
mov
mov
cmpl
jne
mov
movswl
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
fwait
imul
add
les
push
mov
sti
mov
push
add
add
or
pushl
movswl
call
jp
jmp
jle
into
pushf
pushf
or
mov
mov
sub
movl
push
push
call
and
pop
mov
addl
inc
push
ret
stc
pop
movsl
pop
mov
xor
mov
xchg
pusha
push
jg
pop
pusha
push
push
rdtsc
pop
pop
pusha
popa
popa
popa
push
jmp
mov
dec
jns
adc
scas
sub
andb
add
add
add
and
pop
mov
addl
inc
push
ret
mov
rcr
adc
ja
xor
pushl
add
call
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
leave
jge
hlt
stos
mov
mov
jae
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sub
jbe
xchg
cmc
xor
imul
xchg
add
or
sbb
out
ret
push
and
test
fmull
call
sub
gs
pcmpgtw
sub
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
scas
loopne
dec
mov
mov
push
fmuls
push
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
dec
cwtl
adc
sbb
xor
or
add
add
scas
sarl
mov
popf
jne
fmuls
pop
mov
call
or
call
jmp
in
xchg
cs
cmp
inc
shrb
inc
lret
mov
and
or
xchg
jae
push
push
pusha
popa
rdtsc
push
pop
pop
pop
push
jmp
lret
enter
sti
ret
inc
mov
call
and
pop
mov
addl
inc
push
ret
fwait
mov
mov
pushl
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
jl
leave
shlb
adc
cmpl
je
jmp
mov
sub
sub
ds
push
jmp
out
sub
lock
fisttpl
cmp
mov
or
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
adc
xchg
loope
sub
jge
fmuls
movzwl
call
jns
mov
pushl
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
jno
sub
call
sub
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
sub
test
fmuls
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
mov
and
mov
movb
movzwl
movl
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
xor
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
shlb
out
xchg
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
out
lea
xor
nop
push
push
pusha
popa
pop
pop
push
push
push
jge
jbe
rdtsc
pusha
pusha
popa
jmp
fists
das
call
nop
push
push
call
and
pop
mov
addl
inc
push
ret
pop
add
cmp
sbb
mov
push
call
and
pop
mov
addl
inc
push
ret
jle
cmp
mov
out
ja
fs
push
push
call
and
pop
mov
addl
inc
push
ret
adc
andl
add
add
or
mov
lea
and
add
push
push
call
and
pop
mov
addl
inc
push
ret
mov
add
add
adc
add
or
fisttps
and
lods
cld
rcrb
out
xchg
scas
nop
push
pusha
push
pop
pusha
popa
popa
pop
push
jns
jns
pusha
popa
nop
ja
mov
push
mov
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
test
xchg
lods
adc
or
or
or
push
call
and
pop
mov
addl
inc
push
ret
add
call
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
movzwl
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
and
pop
jns
dec
or
popf
lods
pop
fmuls
push
push
push
call
and
pop
mov
addl
inc
push
ret
in
fdivrs
movsb
xor
push
add
add
pop
pushf
cmc
fs
imul
jo
mov
push
push
push
push
rdtsc
pop
pop
rdtsc
jmp
ljmp
pop
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
aad
xchg
lea
outsl
mov
adc
xchg
std
sbb
or
push
call
and
pop
mov
addl
inc
push
ret
out
ds
mov
jmp
call
pop
sub
pusha
mov
popa
push
push
call
and
pop
mov
addl
inc
push
ret
pop
cld
call
jle
inc
adc
shll
fisttpl
and
nop
jmp
mov
aas
pop
inc
pop
lea
mov
jg
test
push
push
push
push
push
push
rdtsc
pop
pop
rdtsc
push
push
rdtsc
pop
pop
pop
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
shll
or
pushl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sub
mov
fmuls
clc
push
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
or
mov
test
adc
or
fistpl
xor
call
jmp
mov
mov
adc
out
mov
in
jo
mov
cmp
jae
js
mov
movzbl
call
pop
dec
hlt
adc
pop
fisttpll
popa
sub
popa
pop
mov
mov
mov
shr
sub
mul
call
or
xchg
movsl
cs
mov
push
push
leave
pop
jmp
lea
pop
incl
enter
sub
add
adc
jmp
stc
mov
pusha
or
add
popa
add
mov
add
pusha
mov
popa
mov
cmp
jae
mov
jmp
mov
jmp
xor
and
inc
insl
and
rcll
decl
xchg
add
add
push
add
add
add
add
xchg
enter
loope
je
pusha
xor
mov
popa
andl
mov
mov
mov
sbb
jmp
lea
add
push
movzwl
call
cld
mov
mov
and
mov
cld
push
push
call
and
pop
mov
addl
inc
push
ret
enter
push
xor
mov
pusha
call
and
daa
xchg
popf
test
or
lea
nop
mov
pop
push
and
pop
popa
sub
pusha
mov
pusha
movswl
add
popa
popa
mov
mov
mov
lods
xor
shr
add
sub
jne
pusha
mov
adc
popa
call
cwtl
aam
xchg
fisttpl
dec
jae
xchg
lret
push
andl
add
add
xchg
add
add
add
add
add
and
pop
mov
addl
inc
push
ret
fdivrl
jl
cld
ss
xor
and
add
or
or
lea
fmuls
mov
jg
push
mov
mov
add
mov
mov
shr
add
mov
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sbbb
sldt
add
xor
add
add
dec
add
or
mov
add
test
add
add
add
and
pop
mov
addl
inc
push
ret
push
mov
add
mov
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
arpl
or
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
rcrl
jmp
mov
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
inc
test
xchg
inc
out
adc
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
lds
outsl
mov
or
or
or
jbe
or
pusha
push
push
call
and
pop
mov
addl
inc
push
ret
push
add
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
inc
cmpsb
out
xchg
add
add
and
push
push
call
and
pop
mov
addl
inc
push
ret
push
jbe
mov
or
add
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
or
xor
and
test
popl
add
add
test
nop
push
push
push
jmp
sbb
aad
ljmp
add
add
pop
push
jmp
mov
in
add
fmuls
push
mov
push
push
jg
push
pop
pop
xorl
mov
call
mov
mov
and
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
pop
inc
cwtl
aas
loop
xchg
mov
jbe
je
mov
movl
pusha
mov
or
popa
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
inc
loop
cmp
mov
mov
mov
mov
pusha
mov
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
inc
stc
ljmp
shll
or
adc
add
rolb
xchg
cmp
xlat
mov
bound
mov
push
push
jmp
stos
aaa
push
push
push
lcall
jp
push
out
out
mov
jmp
adc
or
call
pushl
js
call
push
jl
xor
dec
movsl
xorl
mov
pop
jns
or
call
incl
pop
add
jmp
xchg
lock
add
sahf
mov
jmp
jne
sti
inc
add
rdtsc
jmp
or
push
cmpxchg
mov
inc
lcall
pusha
js
pusha
popa
pusha
push
push
rdtsc
pop
pop
push
pop
popa
popa
mov
push
push
js
jmp
cmpsl
and
ja
lock
sub
js
xor
pop
pop
pop
pop
mov
jno
pusha
push
pop
jmp
shrl
mov
inc
push
sbb
and
pusha
push
pusha
popa
pop
pusha
pusha
popa
jmp
lahf
or
xor
popa
popa
pop
push
push
call
and
pop
mov
addl
inc
push
ret
add
idivl
leave
push
fmuls
lea
jp
add
nop
jmp
rcll
mov
push
push
push
push
pusha
popa
rdtsc
pusha
popa
pop
pop
rdtsc
pusha
pusha
popa
push
push
rdtsc
pop
pop
popa
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
pop
jg
movsb
imul
inc
jmp
and
fisubs
sub
pop
xchg
add
lahf
insb
jb
insb
mov
call
or
popa
push
push
call
and
pop
mov
addl
inc
push
ret
scas
mov
adc
or
test
add
add
push
call
and
pop
mov
addl
inc
push
ret
mov
adc
cmp
xchg
mov
cmpl
je
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
xor
test
pusha
jnp
mov
mov
popa
cld
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
xor
add
add
or
or
jne
call
jmp
cmp
loopw
or
or
mov
add
test
popf
insl
xor
cmp
fisttpl
push
push
call
and
pop
mov
addl
inc
push
ret
jle
xchg
xchg
ds
or
add
xorl
out
call
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
arpl
pop
or
movl
or
xchg
jg
push
push
push
push
rdtsc
pop
pop
rdtsc
jne
pop
pop
push
push
push
jns
push
pop
rdtsc
push
push
pop
pop
pop
pop
xchg
mov
pushl
jmp
nop
and
add
mov
xchg
lds
fmuls
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
fbld
sti
mov
push
push
call
and
pop
mov
addl
inc
push
ret
enter
inc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
daa
ds
xchg
mov
mov
jmp
jecxz
sbb
jno
add
push
push
call
and
pop
mov
addl
inc
push
ret
mov
in
in
push
mov
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
addl
jmp
clc
pop
jl
mov
adc
or
push
call
and
pop
mov
addl
inc
push
ret
test
out
cmp
adc
add
push
call
cmpsl
popa
sub
test
sbb
mov
pop
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
dec
mov
mov
call
and
push
pusha
pusha
push
pop
jmp
inc
popl
int
push
in
cmpl
popa
jmp
jg
bound
or
xchg
pop
lods
aad
aam
mov
xor
push
mov
pop
pushl
clc
call
push
push
call
and
pop
mov
addl
inc
push
ret
xlat
into
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
les
xchg
add
add
or
add
push
sbb
pop
xchg
dec
std
cld
xor
test
add
add
push
add
add
clc
adc
push
or
cmp
sbb
lcall
add
sub
and
mov
clc
fisttpl
mov
call
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
inc
add
fcoms
stos
call
push
push
call
and
pop
mov
addl
inc
push
ret
add
adc
aam
sub
gs
or
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
jbe
cmp
addl
xchg
std
add
or
fimull
or
push
call
and
pop
mov
addl
inc
push
ret
jno
sub
push
add
add
mov
sub
or
add
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
out
push
inc
mov
mov
jmp
xlat
or
les
rclb
sarb
sbb
ljmp
push
call
and
pop
mov
addl
inc
push
ret
aaa
sub
lcall
mov
xor
lea
push
push
call
and
pop
mov
addl
inc
push
ret
adc
nop
or
mov
push
push
jmp
adc
mov
push
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
dec
test
fmuls
push
jmp
mov
repz
das
cs
mov
push
cld
jmp
mov
out
jnp
lea
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
dec
mov
add
push
push
call
and
pop
mov
addl
inc
push
ret
lds
mov
add
or
xchg
into
push
rorb
jmp
cli
fistpl
pop
xchg
xor
in
cmpl
push
push
js
rdtsc
pusha
popa
pop
pop
pop
pop
push
jb
push
jge
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
pop
in
stos
test
add
bound
mov
cmpsb
push
mov
mov
pop
push
jo
movzwl
push
push
push
call
and
pop
mov
addl
inc
push
ret
push
or
sbb
xchg
or
adc
xchg
lods
adc
or
push
call
and
pop
mov
addl
inc
push
ret
inc
in
test
xor
lea
fisttpl
pusha
mov
popa
call
push
push
call
and
pop
mov
addl
inc
push
ret
sub
add
add
lock
sub
js
mov
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
jle
lods
xor
daa
sub
pusha
movzwl
mov
popa
push
mov
jmp
insb
cmp
sub
fnstsw
or
adc
sbb
push
jmp
test
add
push
push
call
and
pop
mov
addl
inc
push
ret
jo
xor
sbb
add
call
lods
inc
insb
mov
aad
and
sbb
pop
call
jnp
jnp
call
out
mov
cmp
jmp
call
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
jo
inc
and
push
mov
mov
fmuls
push
push
call
and
pop
mov
addl
inc
push
ret
sbbl
or
or
add
mov
in
add
addl
mov
pop
nop
pusha
push
jmp
lcall
out
lods
cli
push
dec
enter
or
or
add
addr16
and
popa
push
push
push
pusha
popa
pop
pop
nop
xor
mov
pushl
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
stc
sbb
mov
incl
push
push
call
and
pop
mov
addl
inc
push
ret
jmp
popf
mov
xchg
add
add
or
push
push
call
and
pop
mov
addl
inc
push
ret
push
jne
test
call
push
add
add
pop
es
stos
xchg
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
and
fmuls
mov
call
jmp
push
jnp
jge
pop
mov
mov
and
out
or
in
jae
mov
cmp
jae
mov
movzbl
clc
mov
mov
mov
mov
shr
mul
movzwl
sub
mov
mov
or
jmp
mov
mov
xor
add
mov
jmp
js
sbb
push
lahf
nop
adc
add
add
mov
mov
cmp
jae
jbe
jmp
push
cli
shlb
pushf
bound
inc
add
add
xchg
lea
fmuls
pop
mov
or
and
je
pusha
mov
mov
popa
andl
movswl
mov
or
jmp
lea
jg
push
push
push
call
and
pop
mov
addl
inc
push
ret
sub
orb
popf
cmp
fmuls
call
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
jmp
push
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sub
or
add
add
add
and
pop
mov
addl
inc
push
ret
movsl
pushf
mov
fmuls
cld
mov
mov
sub
mov
mov
lods
xor
shr
add
sub
jne
mov
stc
push
push
call
and
pop
mov
addl
inc
push
ret
push
mov
iret
jmp
dec
fdivr
test
cli
mov
xchg
cmc
or
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
or
push
call
and
pop
mov
addl
inc
push
ret
push
add
xchg
call
add
fnstsw
in
jmp
and
mov
sub
or
lea
add
add
add
and
pop
mov
addl
inc
push
ret
sbb
dec
jno
add
aad
push
mov
mov
add
mov
mov
shr
add
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
add
mov
subb
push
add
add
xchg
xchg
sbb
or
xor
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsl
lea
pop
mov
jbe
jl
jmp
js
lret
jecxz
lahf
stos
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
stos
xlat
ror
cmpsl
jno
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
cmc
jns
mov
jnp
cmpsl
mov
fildl
or
je
mov
mov
cmpl
je
jb
jmp
fcoms
int
mov
mov
es
mov
add
xchg
popf
xor
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
test
cmp
leave
je
loop
loope
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
add
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
ljmp
and
and
mov
test
xchg
insl
sub
or
push
jbe
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
scas
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
inc
outsb
ffree
test
nop
mov
push
push
push
jmp
aaa
mov
or
fucomi
jmp
pushf
fs
out
pushf
fistpl
xorl
call
jge
movzwl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
dec
ds
push
mov
jg
add
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
mov
lods
in
jns
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
mov
cmp
add
push
call
and
pop
mov
addl
inc
push
ret
push
jge
mov
add
add
mov
pop
sub
mov
call
dec
cwtd
cmp
mov
lods
add
dec
das
sahf
sub
or
test
sbb
or
test
add
add
add
add
add
and
pop
mov
addl
inc
push
ret
mov
imulb
mov
popf
sbb
fmuls
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lods
scas
pop
lret
shll
push
call
and
pop
mov
addl
inc
push
ret
insb
xchg
push
push
push
push
push
pop
rdtsc
jmp
mov
lcall
daa
add
int3
addr16
push
xchg
repnz
pop
rdtsc
jno
pusha
popa
pop
pop
push
push
jp
jl
pop
xchg
mov
pushl
call
vpunpckhdq
sub
inc
jp
sub
notl
add
add
add
add
xchg
add
add
or
add
adc
lahf
dec
cltd
rcrl
jge
jge
push
push
rdtsc
pop
pop
mov
ja
push
push
jmp
call
icebp
ljmp
cmp
xor
pop
pop
mov
jmp
arpl
mov
in
and
adc
add
pushf
outsl
mov
add
cmc
ss
pop
sub
or
mov
pop
mov
lea
add
nop
push
push
pusha
popa
pop
pop
push
jle
push
push
push
rdtsc
pop
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
jo
xchg
call
mov
sti
or
les
mov
fistps
call
push
push
call
and
pop
mov
addl
inc
push
ret
or
dec
pushf
sbb
ljmp
xchg
popf
adc
mov
xor
xchg
cmpb
popa
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsb
popa
jge
jg
or
adc
movl
push
push
call
and
pop
mov
addl
inc
push
ret
adc
pop
mov
xchg
rclb
clc
cmpl
je
mov
jmp
movzwl
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
mov
push
clc
pop
push
push
call
and
pop
mov
addl
inc
push
ret
push
repnz
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
push
or
xchg
add
cmpsl
pusha
call
mov
daa
or
test
jge
inc
inc
cmp
jnp
stc
pop
popa
push
movzwl
pop
cmpl
je
mov
jmp
cmp
mov
pushl
jnp
mov
call
call
jmp
mov
sarl
fmuls
pop
mov
mov
movl
mov
push
push
jnp
pusha
popa
pop
mov
or
pushl
jnp
jmp
jno
sbb
adc
lcall
pop
mov
call
sub
call
jae
sbb
into
repz
pop
mov
push
sub
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
adc
sub
clc
mov
clc
mov
mov
add
mov
mov
mov
lea
mov
mov
and
push
push
push
call
and
pop
mov
addl
inc
push
ret
stos
movsb
add
push
jae
mov
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
push
out
out
cmp
stos
mov
movswl
call
push
push
call
and
pop
mov
addl
inc
push
ret
jns
scas
out
pop
mov
mov
mov
xchg
pusha
push
pusha
popa
pop
pusha
jns
jmp
adc
sbb
aad
leavew
push
bound
sahf
add
push
push
pusha
jnp
pusha
popa
popa
pop
xchg
ja
push
mov
pop
jmp
sub
loopne,pn
test
pushl
or
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
mov
or
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
aam
push
push
push
jmp
mov
mov
dec
adc
sahf
inc
cmc
push
mov
rdtsc
jae
pop
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jno
insb
cmp
pushl
mov
call
mov
mov
pushl
sub
call
push
push
call
and
pop
mov
addl
inc
push
ret
xor
mov
and
or
or
add
pop
outsl
jle
enter
scas
sarl
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
ljmp
add
cmp
out
mov
push
push
call
and
pop
mov
addl
inc
push
ret
out
ss
aas
xchg
icebp
das
mov
movb
or
movl
push
push
call
and
pop
mov
addl
inc
push
ret
lds
movsb
jmp
sbb
std
pop
mov
jmp
in
loopne
jbe
lret
mov
mov
and
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
ds
xchg
mov
adc
add
mov
sub
stc
dec
movsl
xorl
or
add
sub
loopne
jecxz
jecxz
dec
nop
push
push
call
and
pop
mov
addl
inc
push
ret
xor
push
movswl
pop
push
push
push
call
and
pop
mov
addl
inc
push
ret
iret
push
addr16
add
push
call
and
pop
mov
addl
inc
push
ret
pop
sub
stc
psubusb
lea
push
mov
pop
add
push
push
call
and
pop
mov
addl
inc
push
ret
inc
loop
arpl
pusha
js
jmp
cmp
jp
cvttps2pi
xor
sldt
add
cmp
push
dec
popf
or
pop
mov
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
inc
sarl
push
call
loope
repnz
pop
inc
out
movsb
or
pop
sub
fistps
xchg
lods
adc
or
mov
add
add
or
xchg
in
fmuls
lea
push
push
call
and
pop
mov
addl
inc
push
ret
scas
pusha
mov
call
cmpl
jne
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
dec
and
clc
aaa
divl
fisubl
jmp
iret
add
out
mov
xor
pop
fmuls
popa
nop
jns
pusha
jl
push
push
rdtsc
pop
pop
popa
push
jmp
lds
inc
pop
push
les
int3
or
ljmp
add
cli
and
mov
les
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
lods
push
mov
pop
jmp
call
pop
sub
pusha
mov
mov
popa
mov
cmc
lea
push
push
call
and
pop
mov
addl
inc
push
ret
push
sbb
add
add
add
push
push
pusha
popa
rdtsc
jle
pop
pop
push
pusha
push
push
push
pop
rdtsc
jmp
xor
cmp
out
lret
dec
jg
fcomi
leave
pop
pop
pop
jmp
je
out
js
sbb
subl
add
add
add
and
pop
mov
addl
inc
push
ret
shll
add
add
sbb
sub
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
xor
add
add
and
incl
push
push
call
and
pop
mov
addl
inc
push
ret
push
push
push
push
call
and
pop
mov
addl
inc
push
ret
lcall
add
and
xchg
mov
hlt
jo
add
test
mov
push
fmuls
push
push
call
and
pop
mov
addl
inc
push
ret
aad
cmpsl
jg
call
pop
in
dec
xor
push
add
call
jmp
mov
jge
sbb
out
mov
jmp
inc
popa
xor
jecxz
xor
jbe
push
lret
mov
push
clc
pop
cmp
jae
mov
movzbl
jle
jmp
pop
adc
divl
cmpsb
jmp
insl
inc
xchg
into
stos
ds
mov
sbb
cmc
shr
xor
mul
sub
sub
pusha
push
clc
pop
mov
popa
mov
mov
jmp
push
push
movzwl
pop
pop
movswl
mov
mov
add
or
add
xor
cmp
jae
or
mov
jmp
sbb
jmp
scas
icebp
jge
loopne
mov
add
fdivr
mov
je
jp
sub
and
je
xor
stc
andl
and
sub
mov
jmp
andl
loope
add
add
lea
jmp
adc
inc
pop
ret
cmp
call
push
push
call
and
pop
mov
addl
inc
push
ret
ret
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sub
xor
xlat
jg
lcall
push
call
and
pop
mov
addl
inc
push
ret
fcom
fldl2t
add
leave
cmp
sldt
add
sbbb
jbe
mov
mov
add
add
or
mov
mov
mov
sub
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
jmp
popf
daa
or
lcall
fs
test
sbb
or
adc
add
int
fwait
lods
adc
fdivr
or
fstpl
push
ss
mov
pop
lods
xor
shr
add
sub
jne
mov
mov
cmc
or
push
push
call
and
pop
mov
addl
inc
push
ret
jmp
add
xchg
add
add
js
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
es
push
mov
jmp
adc
and
jb
xchg
gs
push
mov
add
push
mov
mov
add
mov
mov
shr
add
mov
pop
xor
add
cmpl
je
add
mov
push
push
call
and
pop
mov
addl
inc
push
ret
ret
lea
push
fmuls
push
push
call
and
pop
mov
addl
inc
push
ret
and
loope
add
add
add
and
pop
mov
addl
inc
push
ret
scas
stc
sbb
jae
and
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsb
stos
pop
lds
roll
or
je
call
sahf
adc
mov
dec
cmovno
lods
xchg
push
jmp
dec
push
shrb
mov
mov
pop
pop
movzwl
cmpl
jbe
mov
pusha
push
push
call
and
pop
mov
addl
inc
push
ret
lds
xchg
add
jno
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cli
push
sub
pop
jmp
ja
in
push
cld
add
scas
cmpsl
mov
add
out
inc
je
or
je
jmp
inc
xor
mov
or
xor
or
push
push
pusha
push
pop
jmp
icebp
aad
jbe
rcrb
popa
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jae
xchg
add
fucomi
add
add
incl
pop
add
sbbb
add
pusha
push
push
rdtsc
pop
pop
jmp
mov
jne
scas
lcall
outsl
dec
add
push
push
pusha
pusha
popa
push
pop
popa
rdtsc
jmp
std
mov
inc
push
xor
pop
pop
mov
push
push
jmp
mov
ja
dec
loopne
or
jp
aaa
add
xor
jmp
and
sub
stos
or
cmc
outsb
and
rdtsc
pusha
popa
pop
pop
pop
pop
mov
jmp
stos
std
sub
je
inc
and
jmp
sbb
call
data16
test
add
add
add
and
pop
mov
addl
inc
push
ret
jbe
jle
jbe
inc
mov
rcrl
frstor
fmuls
mov
mov
mov
pusha
movzwl
or
popa
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
stc
mov
mov
mov
movl
mov
mov
sub
mov
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
fdivr
in
xor
mov
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jmp
out
jle
test
mov
sub
or
pusha
push
pop
jmp
cltd
sub
or
fwait
push
adcl
add
push
pop
popa
popa
mov
movswl
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
in
cmpsl
xchg
dec
fildl
ret
add
call
incl
pop
add
push
push
push
rdtsc
pop
pop
rdtsc
push
pop
pop
pop
push
push
pusha
popa
rdtsc
jle
pop
pop
popa
push
push
push
push
push
push
pop
rdtsc
push
pop
pop
pop
rdtsc
pusha
push
push
rdtsc
pop
pop
push
push
rdtsc
pop
pop
popa
pop
pop
mov
pusha
jns
jl
push
jbe
pop
popa
mov
jmp
lahf
fbld
std
inc
movsb
jge
fldt
mov
jbe
jno
push
push
rdtsc
pop
pop
pop
push
push
call
and
pop
mov
addl
inc
push
ret
inc
stc
out
push
sub
pop
jne
lea
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
push
pop
shlb
mov
mov
nop
push
push
push
push
pusha
popa
rdtsc
push
pop
pop
pop
rdtsc
pusha
pusha
popa
push
pop
popa
pop
pop
push
jmp
jne
xor
adc
xchg
dec
aam
push
dec
push
mov
or
fmuls
call
mov
movswl
popa
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
test
add
add
or
mov
add
add
popf
orl
cmp
fisttpl
add
test
add
add
or
add
dec
push
jmp
xor
push
add
add
mov
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
iret
sub
mov
add
add
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jge
jae
inc
movsl
push
xor
popl
add
add
fmuls
mov
add
add
test
jne
push
push
call
and
pop
mov
addl
inc
push
ret
jl
adc
fisttpl
add
test
add
push
push
call
and
pop
mov
addl
inc
push
ret
or
movswl
xor
jbe
mov
pushl
mov
call
add
mov
sub
mov
movl
mov
xchg
jmp
xchg
cltd
pop
aad
pop
xchg
inc
repnz
sbbl
add
push
jmp
cmp
xchg
loope
sbb
push
inc
push
mov
pop
xchg
mov
pushl
and
call
and
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lahf
sbb
call
fmuls
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sub
dec
or
or
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
or
push
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lcall
add
push
jbe
mov
add
xor
mov
lea
push
movswl
pop
mov
mov
push
mov
pushl
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
lcall
jge
popf
jmp
js
jmp
pop
xorl
mov
push
jo
pusha
jmp
mov
stos
pop
imul
popa
xchg
add
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
pop
call
mov
cmpl
je
jmp
pop
int
pop
leave
push
xchg
jmp
bound
add
xchg
mov
pop
out
test
jmp
pop
add
add
shl
fwait
out
sub
pop
jmp
xor
andl
add
add
and
pop
mov
addl
inc
push
ret
fstcw
sub
call
and
out
dec
ret
daa
cld
adcb
pop
pop
pop
mov
pushl
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
in
jmp
lret
mov
clc
fisttpl
push
push
call
and
pop
mov
addl
inc
push
ret
aaa
jne
cmc
call
push
push
call
and
pop
mov
addl
inc
push
ret
in
movsl
ss
imul
and
fmuls
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
jb
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sub
pushf
pop
adc
or
or
add
lods
or
lahf
jne
out
dec
movb
mov
call
pop
cmp
dec
mov
out
and
jno
pop
movl
push
push
call
and
pop
mov
addl
inc
push
ret
ljmp
loop
mov
call
sahf
fisubrs
xchg
fdivs
jmp
adc
fsub
daa
xor
jg
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
les
and
shll
xchg
testl
call
and
pop
mov
addl
inc
push
ret
pop
test
sbb
add
test
add
add
adc
add
mov
hlt
cmpb
fdiv
or
icebp
out
adc
add
fidivl
imul
push
mov
dec
jle
ret
popa
push
pusha
push
push
push
pop
rdtsc
jmp
ret
inc
push
and
mov
pop
pop
push
push
jb
rdtsc
jle
pop
pop
popa
nop
call
cmp
xchg
test
jmp
xchg
mov
insl
dec
rcll
pop
push
push
push
call
and
pop
mov
addl
inc
push
ret
sar
jg
bound
movsb
loop
sbb
push
pusha
mov
mov
popa
lea
push
push
call
and
pop
mov
addl
inc
push
ret
add
lahf
jns
rorl
push
sub
push
call
and
pop
mov
addl
inc
push
ret
xchg
jle
repnz
nop
jb
push
push
jmp
adc
jae
pop
mov
push
mov
scas
cmp
xor
pop
pop
push
jmp
or
lods
aaa
xchg
xchg
xchg
xor
aaa
cmpsb
out
popa
xchg
add
add
and
pop
mov
addl
inc
push
ret
adc
es
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
fisubrs
xchg
mov
popf
fmuls
push
push
push
call
and
pop
mov
addl
inc
push
ret
mov
lahf
add
mov
popa
jg
jmp
dec
lea
clc
lods
call
mov
lea
add
call
push
push
call
and
pop
mov
addl
inc
push
ret
lods
stos
insb
iret
scas
lods
jge
cmpl
jne
xor
push
push
push
call
and
pop
mov
addl
inc
push
ret
fstps
add
sbb
and
add
add
add
and
pop
mov
addl
inc
push
ret
add
repnz
pop
clc
call
mov
jmp
call
pop
sub
push
xor
pop
push
push
call
and
pop
mov
addl
inc
push
ret
scas
xchg
nop
neg
lea
push
push
call
and
pop
mov
addl
inc
push
ret
js
dec
mov
mov
nop
jmp
inc
pop
inc
cwtl
xchg
pop
xchg
stc
mov
jnp
test
push
jno
jmp
mov
mov
es
push
push
call
and
pop
mov
addl
inc
push
ret
lret
imul
popf
lea
fmuls
pushl
add
mov
sub
incl
push
push
call
and
pop
mov
addl
inc
push
ret
test
inc
or
push
jno
and
push
call
iret
repnz
sbb
or
mov
sbb
or
mov
pop
call
jmp
or
mov
call
xchg
nop
mov
sbb
out
xchg
mov
jge
out
mov
in
or
cmp
jae
mov
movzbl
movswl
mov
xor
mov
xor
shr
mov
mov
mul
jl
movswl
mov
sub
sub
mov
mov
call
inc
push
popf
add
xorw
movsl
or
or
mov
add
cmc
mov
xor
add
pusha
sub
mov
popa
add
add
xor
cmp
jae
cmc
jmp
mov
mov
mov
and
je
call
xor
insb
adc
in
jns
xor
pop
andl
jns
xor
mov
sub
jmp
lea
mov
push
mov
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
fnstcw
aaa
jmp
fidivs
jnp
rcrb
sub
and
jne
add
sbb
add
or
push
call
and
pop
mov
addl
inc
push
ret
xchg
shr
or
repnz
test
nop
call
push
call
and
pop
mov
addl
inc
push
ret
cmpl
rorb
mov
mov
xor
lods
xor
shr
add
sub
jne
cld
push
push
call
and
pop
mov
addl
inc
push
ret
andl
or
or
mov
mov
cld
mov
push
push
call
and
pop
mov
addl
inc
push
ret
out
idivl
push
pushf
sbb
push
mov
mov
add
mov
mov
shr
add
mov
pop
mov
add
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
das
in
push
mov
pop
mov
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
push
xor
xchg
mov
cmp
adc
add
test
sub
insl
loop
jb
out
mov
adc
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
inc
movswl
cmpl
je
mov
xor
cmpl
jbe
or
mov
pusha
push
push
call
and
pop
mov
addl
inc
push
ret
cli
add
xor
and
call
xor
xchg
pop
xchg
cltd
sub
mov
pop
and
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
ds
je
sub
jmp
mov
mov
or
jns
lods
enter
insl
and
pusha
jno
stc
xor
popa
or
je
call
adc
mov
movzwl
pop
mov
or
jae
movswl
xor
push
push
call
and
pop
mov
addl
inc
push
ret
inc
mov
or
push
push
pusha
popa
pop
rdtsc
jns
push
push
rdtsc
pop
pop
pop
pop
mov
jmp
incl
std
pop
pop
mov
movsl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pusha
cltd
sub
es
call
incl
pop
add
adc
add
mov
and
jae
adc
repnz
push
sbb
dec
add
push
push
push
pusha
popa
rdtsc
pusha
popa
pop
pop
rdtsc
jmp
mov
outsb
sub
shll
or
dec
pop
pop
mov
jno
jmp
sub
aas
dec
jne
mov
jmp
rcrl
inc
lea
cli
imul
popa
rdtsc
jmp
xor
pop
pop
pusha
jo
js
popa
popa
pop
mov
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
pop
test
fmuls
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
adc
xor
popf
add
jmp
mov
mov
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
dec
out
jno
mov
jmp
sub
mov
clc
push
test
add
clc
fisttpl
push
push
call
and
pop
mov
addl
inc
push
ret
enter
loop
movsb
pop
adc
call
jbe
xchg
fbld
cmp
mov
pop
mov
and
mov
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsl
scas
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
popa
fiadds
sub
mov
mov
mov
xchg
push
jmp
lea
loope
gs
mov
push
jmp
add
cld
fidivs
stc
sti
bound
call
and
pop
mov
addl
inc
push
ret
sbb
fimuls
mov
cmp
fidivrs
sub
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
jmp
xor
test
fmuls
push
jmp
lods
ljmp
popa
das
or
xlat
inc
lods
xchg
mov
add
pop
lods
pop
xor
or
or
push
jmp
push
ss
or
out
jno
es
jns
jnp
xor
push
rdtsc
pop
pop
pop
pop
pop
mov
and
and
call
jmp
inc
out
xor
sub
sbb
call
and
pop
mov
addl
inc
push
ret
aad
int3
addl
add
add
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
mov
mov
fmuls
jmp
mov
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
push
push
call
and
pop
mov
addl
inc
push
ret
test
movsb
pop
inc
or
push
mov
pop
mov
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
ljmp
and
pop
mov
cmpl
je
jmp
sbb
cmpsb
lds
mov
pop
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
or
adc
and
fmuls
mov
mov
clc
movl
push
push
call
and
pop
mov
addl
inc
push
ret
insl
sbb
sub
push
jmp
mov
insb
cmp
push
insl
sbb
out
adc
mov
or
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
repz
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
rcrb
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
mov
xlat
jae
or
popf
and
xchg
imul
push
call
and
pop
mov
addl
inc
push
ret
cmp
jmp
xchg
and
mov
aaa
fmuls
add
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
jo
lock
cli
lea
push
push
call
and
pop
mov
addl
inc
push
ret
pop
jl
mov
mov
fistpl
add
add
mov
xchg
fldenv
xor
into
fsubl
pop
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
adc
or
call
and
push
push
push
push
push
jmp
scas
out
fadds
insl
and
rdtsc
jmp
pop
push
loop
mov
xor
pop
add
add
das
mov
pop
pop
mov
pushl
mov
call
mov
cmpl
je
mov
xchg
pusha
jmp
in
ds
or
add
add
push
pusha
jmp
mov
mov
imul
push
dec
faddl
push
push
rdtsc
pop
pop
pop
popa
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
jbe
mov
ret
insl
std
pushl
jmp
cmpl
roll
sub
sub
jp
sbb
xchg
and
pusha
jmp
jg
or
jecxz
popa
pop
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
leave
or
mov
sub
jl
add
mov
call
xor
cmpl
je
jmp
inc
push
mov
push
arpl
dec
and
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sub
or
add
push
push
call
and
pop
mov
addl
inc
push
ret
push
jns
ret
movl
push
push
call
and
pop
mov
addl
inc
push
ret
jecxz
int
and
jmp
jmp
push
mov
adc
call
shrl
mov
test
sbb
or
mov
pop
mov
push
jo
pusha
jmp
fidivs
jnp
rcrb
sub
and
jne
add
sbb
add
xor
push
add
mov
pop
jg
mov
push
push
call
and
pop
mov
addl
inc
push
ret
imull
mov
push
jne
mov
lea
jne
jmp
push
dec
or
jg
sub
or
mov
add
mov
push
push
jmp
rcll
insb
icebp
repz
push
lcall
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
and
mov
pop
popa
push
xor
push
call
push
push
call
and
pop
mov
addl
inc
push
ret
jne
or
decb
or
push
call
and
pop
mov
addl
inc
push
ret
jbe
jmp
outsl
loope
mov
movzwl
mov
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
les
hlt
popa
jmp
stos
test
mov
add
add
mov
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
cltd
ja
inc
test
notl
add
or
push
push
jmp
scas
and
inc
add
push
fldenv
add
add
pop
pop
jno
pusha
popa
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
jno
stc
pusha
mov
pusha
or
and
popa
popa
sub
call
mov
jle
jmp
call
pop
sub
pusha
sub
clc
popa
adc
lea
push
push
call
and
pop
mov
addl
inc
push
ret
stc
dec
push
fucomip
jl
scas
and
push
push
push
push
push
push
rdtsc
pop
pop
rdtsc
push
push
rdtsc
pop
pop
pop
pop
pop
mov
mov
pushl
jmp
jb
sbb
sbb
mov
xor
incl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
fisttps
or
mov
jbe
sub
pushl
sub
call
jmp
mov
jmp
insl
out
or
mov
add
out
call
and
lahf
mov
ljmp
ja
mov
pop
in
call
pop
mov
int
icebp
jg
adc
call
mov
pop
xor
cmp
jae
mov
movzbl
pusha
mov
sbb
popa
mov
jmp
jmp
pop
test
push
and
addl
inc
mov
add
shr
push
jne
mov
pop
mul
mov
sub
mov
mov
jmp
mov
push
mov
pop
mov
mov
add
xor
add
mov
cmp
jae
jmp
movswl
mov
mov
and
je
mov
andl
mov
mov
jl
pusha
xor
mov
popa
jmp
lea
push
xor
call
push
push
call
and
pop
mov
addl
inc
push
ret
adc
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lahf
ret
ret
lcall
aaa
inc
push
push
test
mov
loope
push
push
call
and
pop
mov
addl
inc
push
ret
inc
rorl
cld
mov
sub
push
push
call
and
pop
mov
addl
inc
push
ret
xor
repz
and
sub
push
push
call
and
pop
mov
addl
inc
push
ret
insl
and
cltd
push
jp
or
pop
lods
xor
shr
add
sub
jne
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
add
adc
scas
dec
imul
and
mov
or
push
add
mov
mov
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
icebp
movswl
push
mov
mov
add
mov
mov
shr
add
mov
pop
mov
clc
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
or
xor
fwait
mov
jmp
jge
fstp
sbb
pop
mov
movsl
insb
adc
or
push
add
add
fwait
div
add
test
cmp
or
loope
pop
add
add
es
push
and
fmuls
add
test
add
add
push
call
and
pop
mov
addl
inc
push
ret
hlt
aas
scas
pushf
jl
or
cmpl
je
mov
cmpl
jbe
or
pusha
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
and
mov
and
push
push
call
and
pop
mov
addl
inc
push
ret
jnp
inc
ret
or
je
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
std
mov
xor
push
push
call
and
pop
mov
addl
inc
push
ret
mov
pop
push
xchg
push
pusha
push
push
push
pop
rdtsc
pusha
popa
pop
pop
push
push
pop
pop
popa
mov
pusha
pusha
push
pop
xor
popa
mov
popa
push
call
icebp
lret
je
inc
call
test
push
push
push
jno
pusha
popa
rdtsc
je
jl
pop
pop
xorl
push
push
call
and
pop
mov
addl
inc
push
ret
and
movzwl
call
push
push
call
and
pop
mov
addl
inc
push
ret
lods
and
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
fldt
cmp
lock
jmp
movswl
mov
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
fisttpl
push
push
call
and
pop
mov
addl
inc
push
ret
rclw
jmp
call
dec
add
xchg
or
pop
and
add
add
dec
popa
pop
mov
ja
sub
mov
jnp
jmp
in
inc
fs
iret
and
ja
mov
daa
cmpsb
xlat
out
jecxz
test
test
add
add
add
and
pop
mov
addl
inc
push
ret
adcl
adc
test
jmp
pop
push
ret
fildll
enter
in
fmuls
popa
mov
jmp
lock
or
jmp
mov
sub
sar
pop
scas
adc
dec
inc
pusha
jo
jns
popa
popa
mov
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
out
inc
mov
outsb
add
and
or
ror
jne
jmp
pop
out
pop
testb
lea
push
inc
jbe
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
mov
or
and
call
xchg
xlat
fcompl
in
cmc
pop
jns
jmp
in
rolb
mov
push
jl
pop
push
pusha
jmp
es
test
xchg
pop
adc
add
add
or
add
jl
aam
out
push
cmp
add
push
push
call
and
pop
mov
addl
inc
push
ret
je
repz
rorl
or
xchg
frstor
fmuls
mov
add
popa
and
movl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
adc
add
mov
cmp
push
nop
movsb
mov
pushf
xchg
insb
hlt
hlt
cld
stc
cmpl
je
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
in
mov
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
repnz
add
add
add
or
mov
fmuls
sub
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
shll
pop
mov
mov
add
add
sub
cmpl
je
or
pushl
call
push
push
call
and
pop
mov
addl
inc
push
ret
jl
out
jb
mov
mov
xor
movl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
stos
lcall
or
add
jae
jmp
jno
mov
push
pusha
jl
push
pop
pusha
push
push
rdtsc
pop
pop
push
pop
popa
popa
xchg
xor
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
outsl
lret
inc
mov
call
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jge
pop
jmp
cld
test
push
rorb
or
push
call
and
pop
mov
addl
inc
push
ret
fldl
jns
shrl
in
mov
push
mov
pop
mov
add
push
push
call
and
pop
mov
addl
inc
push
ret
or
xchg
bnd
mov
push
push
call
and
pop
mov
addl
inc
push
ret
ret
jecxz
and
loope
mov
or
or
or
push
call
and
pop
mov
addl
inc
push
ret
jge
inc
adc
cli
ret
and
pusha
push
pop
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
test
fmuls
xor
push
pushl
sub
jl
mov
call
add
xchg
jge
push
push
push
rdtsc
pop
pop
pop
push
push
push
push
push
pusha
popa
rdtsc
push
push
rdtsc
pop
pop
pop
pop
rdtsc
jbe
jmp
decb
xor
hlt
mov
out
lods
add
pop
pop
xchg
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
xlat
mov
call
adc
cmpl
je
mov
mov
push
pusha
push
push
push
rdtsc
pop
pop
pop
ja
ja
popa
mov
pushl
jp
jb
xor
call
push
mov
pop
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
pop
lods
pop
pushf
push
add
add
or
or
xchg
inc
add
or
push
call
and
pop
mov
addl
inc
push
ret
test
mov
clc
push
mov
xor
cmpl
je
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
aam
xchg
loope
pop
fildl
add
add
les
jl
aas
cmp
pop
das
push
add
push
push
call
and
pop
mov
addl
inc
push
ret
and
or
or
add
add
or
sbb
add
add
add
and
pop
mov
addl
inc
push
ret
js
out
arpl
mov
add
add
lea
push
push
call
and
pop
mov
addl
inc
push
ret
stos
cltd
notl
push
nop
nop
jmp
pushf
invd
pop
scas
dec
in
dec
jecxz
lret
add
push
pusha
push
jmp
mov
mov
adc
fs
adc
pop
push
jno
pop
popa
nop
push
push
call
and
pop
mov
addl
inc
push
ret
fnstsw
cmp
or
popf
mov
add
push
call
and
pop
mov
addl
inc
push
ret
jne
loop
inc
sbb
push
push
call
and
pop
mov
addl
inc
push
ret
jmp
call
adc
inc
fucomip
fwait
add
loopnew
or
add
insb
shll
mov
mov
lea
jmp
and
and
mov
jne
cmpsb
xchg
xorb
stos
add
jno
mov
jae
pusha
mov
sub
popa
nop
js
jmp
inc
jg
lods
push
inc
sub
jp
push
push
pusha
push
pop
jno
popa
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
enter
or
or
mov
push
or
jmp
mov
in
cmp
adc
fmuls
push
push
call
and
pop
mov
addl
inc
push
ret
mov
loop
cmp
daa
mov
fmuls
lea
push
push
call
and
pop
mov
addl
inc
push
ret
and
in
xchg
rcll
shrl
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
into
push
clc
incl
or
jne
push
push
call
and
pop
mov
addl
inc
push
ret
dec
sub
xchg
int
fmuls
mov
push
mov
push
push
push
jae
pop
pop
mov
mov
call
mov
jmp
call
pop
sub
mov
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
push
push
leave
pop
out
js
or
stc
push
push
push
push
push
pop
rdtsc
ja
pop
pop
pop
mov
pusha
mov
sbb
popa
pushl
push
add
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
rolb
bound
mov
incl
push
push
call
and
pop
mov
addl
inc
push
ret
adc
in
mov
push
jmp
cmp
lock
sahf
sbb
stos
cmp
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
out
shrl
add
or
or
add
push
ret
ljmp
xchg
xchg
cmp
or
inc
add
add
addb
add
mov
mov
jo
pusha
jmp
mov
popa
cmp
inc
adc
xor
popa
out
jmp
and
in
add
jnp
in
jg
movswl
cmp
jae
add
movzbl
mov
add
mov
mov
mov
mov
shr
mov
mul
mov
sub
mov
mov
mov
je
call
mov
ret
lret
cmp
sbb
or
add
dec
jo
xchg
imul
xchg
pop
jmp
mov
mov
add
jmp
repz
adc
cmp
and
push
add
imul
or
add
mov
cmp
jae
mov
jmp
jmp
and
push
shl
subb
decl
or
pop
add
add
stc
andl
mov
mov
mov
jmp
lea
push
push
call
and
pop
mov
addl
inc
push
ret
cmc
outsl
mov
sub
push
call
test
inc
dec
lock
dec
inc
pop
mov
pop
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
sub
lea
cmp
add
out
popa
in
das
or
loope
push
push
call
and
pop
mov
addl
inc
push
ret
and
psubsb
add
add
inc
lret
bound
int
adc
and
mov
pop
cld
push
push
call
and
pop
mov
addl
inc
push
ret
mov
fs
shrb
call
and
pop
mov
addl
inc
push
ret
mov
call
add
and
add
add
push
call
and
pop
mov
addl
inc
push
ret
ds
popf
sub
jbe
mov
lods
xor
shr
add
sub
jne
push
push
call
and
pop
mov
addl
inc
push
ret
or
test
push
call
and
pop
mov
addl
inc
push
ret
add
adc
add
in
cltd
movsl
push
in
divl
jl
dec
xor
fisubs
adc
pop
push
push
pop
pop
popa
add
or
push
push
call
and
pop
mov
addl
inc
push
ret
adc
das
fmuls
mov
mov
push
mov
mov
add
mov
mov
shr
add
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
imul
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
add
daa
xor
out
cmpsl
imul
or
fmuls
lea
mov
jmp
jbe
or
mov
cmpl
je
or
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
and
pop
test
cmpl
jbe
sub
pusha
push
push
call
and
pop
mov
addl
inc
push
ret
ljmp
mov
iret
xchg
movzwl
mov
jge
mov
and
push
push
call
and
pop
mov
addl
inc
push
ret
or
mov
add
call
mov
dec
in
inc
icebp
mov
popf
xor
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
enter
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
daa
mul
push
or
or
test
jl
js
jmp
gs
stc
stc
inc
sbb
repnz
jo
push
push
rdtsc
pop
pop
popa
rdtsc
push
push
jmp
or
cmp
test
cmpsl
rcl
paddb
popa
pop
pop
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
jnp
add
xor
inc
dec
push
push
push
call
and
pop
mov
addl
inc
push
ret
dec
rorb
xlat
adc
stos
pop
repz
cli
ljmp
sub
and
pop
ret
sldt
add
test
shlb
cmp
mov
pop
call
push
push
call
and
pop
mov
addl
inc
push
ret
fildll
mov
or
addb
add
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jns
pop
add
add
push
call
and
pop
mov
addl
inc
push
ret
and
mov
push
push
call
and
pop
mov
addl
inc
push
ret
in
cmp
xor
mov
xor
movl
pusha
sub
mov
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
stos
aad
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
jecxz
inc
dec
add
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
aad
xchg
xor
test
mov
add
add
add
add
and
pop
mov
addl
inc
push
ret
push
adc
ds
jnp
mov
xchg
pusha
push
push
push
pop
rdtsc
push
push
rdtsc
pop
pop
pop
pop
push
jmp
push
pop
push
les
mov
imul
sbb
jmp
test
add
inc
adc
aas
dec
pop
cmp
xchg
mov
pushl
add
call
incl
pop
add
pusha
popa
pop
jmp
testl
imull
push
push
jl
jge
pop
mov
jmp
pop
in
dec
nop
cmpsl
mov
mov
push
push
push
push
push
rdtsc
pop
pop
rdtsc
jb
pop
pop
pop
mov
push
push
push
push
rdtsc
pop
pop
pop
pop
pop
push
push
call
and
pop
mov
addl
inc
push
ret
sub
adc
lea
jbe
call
inc
dec
mov
nop
jp
jmp
xchg
in
cmpsl
xchg
dec
fistl
push
pusha
popa
pop
jno
push
push
rdtsc
pop
pop
popa
nop
push
push
push
pop
pop
pop
call
push
push
call
and
pop
mov
addl
inc
push
ret
push
xor
popa
push
push
call
and
pop
mov
addl
inc
push
ret
sarl
push
movl
push
push
call
and
pop
mov
addl
inc
push
ret
sub
out
pop
adc
loop
mov
cmpl
je
mov
mov
jmp
ja
mov
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
sbb
mov
jge
mov
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
out
jmp
into
mov
shl
sbb
lods
cmpl
je
movswl
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
ret
inc
pop
xchg
sub
mov
sub
or
xchg
and
fmuls
push
push
call
and
pop
mov
addl
inc
push
ret
and
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
neg
pop
stos
push
insl
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
and
imul
cmp
test
add
add
sub
push
jmp
lret
nop
insb
dec
aam
stos
jge
lahf
call
cwtl
dec
rdtsc
ja
jns
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jmp
loope
clc
call
clc
fisttpl
push
push
call
and
pop
mov
addl
inc
push
ret
dec
repnz
inc
test
lds
fmuls
push
jmp
and
fcmovne
mov
and
shll
dec
aaa
xor
mov
clc
fisttpl
push
push
call
and
pop
mov
addl
inc
push
ret
decb
adc
pop
lock
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
ljmp
cmp
test
xchg
imul
inc
leave
add
add
ja
mov
mov
mov
lea
js
mov
mov
mov
push
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
bound
or
or
dec
cmp
aam
rcrl
mov
mov
pop
call
mov
pusha
mov
call
adc
mov
mov
pop
popa
xchg
jmp
jnp
cmp
push
push
push
push
rdtsc
pop
pop
rdtsc
push
push
rdtsc
pop
pop
pop
pop
push
push
push
pop
rdtsc
push
push
rdtsc
pop
pop
pop
pop
popa
xchg
sub
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsb
sub
call
jmp
lock
mov
cmpl
je
add
xchg
jmp
repnz
mov
in
inc
jmp
jno
xor
mov
in
test
push
push
push
push
push
pusha
popa
rdtsc
pusha
popa
pop
pop
rdtsc
jmp
sbb
jae
pop
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
lea
adc
std
faddp
xor
fisttpl
push
push
call
and
pop
mov
addl
inc
push
ret
les
fwait
inc
aad
lret
and
and
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
test
stos
shl
lret
xor
adc
xchg
inc
add
or
add
pop
mov
popa
cmpl
je
mov
mov
mov
and
movb
mov
movl
jmp
int
or
jns
mov
icebp
decl
or
adc
add
cltd
ja
outsl
jecxz
mov
hlt
jae
imul
call
ja
or
mov
mov
mov
pop
lea
push
pop
push
js
jl
jmp
pop
cltd
inc
fdivs
jg
add
push
push
call
and
pop
mov
addl
inc
push
ret
cmc
pop
dec
and
fcmovne
mov
or
push
push
call
and
pop
mov
addl
inc
push
ret
or
popf
stc
add
or
push
push
call
and
pop
mov
addl
inc
push
ret
scas
lret
add
jmp
popf
das
mov
lea
into
lea
mov
add
push
push
call
and
pop
mov
addl
inc
push
ret
cltd
pop
mov
subl
fnsave
jle
jb
jl
jmp
mov
aas
shrl
sbb
test
jmp
mov
jnp
inc
jge
jle
mov
mov
push
and
push
add
call
mov
lea
mov
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
movsb
mov
cmpl
jne
adc
push
mov
nop
pusha
jbe
push
push
rdtsc
pop
pop
push
jmp
push
pop
xor
mov
sbb
push
push
push
push
push
pusha
popa
rdtsc
push
push
rdtsc
pop
pop
pop
pop
rdtsc
push
pusha
popa
pop
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
mov
and
xor
fmuls
mov
call
jne
jmp
cmp
fwait
mov
and
lret
ficomps
orl
add
add
add
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
mov
movzwl
push
push
call
and
pop
mov
addl
inc
push
ret
pop
xor
rcrl
mov
cmpsb
ret
push
push
call
and
pop
mov
addl
inc
push
ret
pop
inc
shll
xchg
add
add
add
push
pusha
push
push
push
push
rdtsc
pop
pop
rdtsc
pusha
popa
pop
pop
push
push
push
pop
rdtsc
jmp
sub
lahf
ret
xchg
out
jmp
mov
pop
popa
mov
pushl
call
ret
in
loopne
sbb
mov
or
or
fmuls
pop
mov
sub
or
incl
call
jne
loope
add
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
repz
mov
pushl
mov
call
jmp
xor
mov
mov
call
jae
popa
inc
and
dec
pop
push
loopne
sub
jo
and
mov
cmp
jae
or
movzbl
sbb
mov
mov
mov
jg
movswl
shr
pusha
sub
popa
mul
call
mov
insl
mov
jg
cmp
mov
sbb
or
enter
addb
add
pop
pop
mov
jmp
rcl
into
data16
mov
jmp
movswl
jmp
mov
mov
add
mov
mov
add
mov
mov
cmp
jae
sub
jmp
pusha
or
push
mov
pop
popa
movswl
mov
call
mov
mov
ss
push
andb
or
test
pop
and
je
mov
andl
mov
mov
jmp
lea
push
push
call
and
pop
mov
addl
inc
push
ret
mov
xchg
cmpsb
mov
pusha
mov
mov
popa
jmp
jmp
cli
jo
and
xor
js
test
push
sbb
call
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
add
push
push
call
and
pop
mov
addl
inc
push
ret
adc
jg
mov
sub
mov
mov
sub
pusha
movswl
mov
popa
and
lods
xor
shr
add
sub
jne
jmp
and
push
dec
and
movsl
jle
cltd
dec
push
xor
and
add
add
add
and
pop
mov
addl
inc
push
ret
lret
jb
pop
mov
loope
fmuls
or
push
and
pop
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
adc
je
mov
mov
mov
push
mov
mov
add
mov
mov
shr
add
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
or
pop
pushf
mov
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
inc
xchg
mov
push
push
call
and
pop
mov
addl
inc
push
ret
fbld
sldt
add
addr16
jbe
notl
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
inc
adc
mov
js
sub
jg
jmp
ret
inc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xor
mov
mov
jbe
mov
cmpl
je
jmp
pusha
pop
push
arpl
movzwl
cmpl
je
mov
cmpl
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
push
xchg
mov
mov
mov
pusha
movzwl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cwtl
scas
cmpsl
lock
sbb
add
mov
or
je
mov
jae
mov
mov
add
xor
mov
push
pusha
push
push
push
push
rdtsc
pop
pop
rdtsc
jmp
inc
rcrb
adc
pop
pusha
pusha
popa
jne
popa
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jmp
dec
sbb
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
out
mov
mov
and
lret
notb
popa
pop
rdtsc
pusha
jmp
push
lods
and
add
add
popa
pop
pop
addl
movswl
call
push
push
call
and
pop
mov
addl
inc
push
ret
mov
pusha
jns
movsb
add
lods
cwtl
mov
mov
jmp
mov
mov
push
adc
pop
movl
jmp
xchg
movsb
pusha
popf
adc
ss
fisttpl
push
push
call
and
pop
mov
addl
inc
push
ret
push
mov
cmc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jb
inc
mov
push
pusha
sbb
movzwl
popa
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
and
loope
decb
or
push
call
and
pop
mov
addl
inc
push
ret
pop
sub
lcall
fmuls
adc
and
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
jmp
mov
push
push
push
pusha
push
push
rdtsc
pop
pop
pusha
popa
popa
rdtsc
push
push
push
push
rdtsc
pop
pop
rdtsc
pusha
popa
pop
pop
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
addr16
mov
mov
clc
fisttpl
push
push
call
and
pop
mov
addl
inc
push
ret
lret
and
mov
push
push
push
jns
pop
pop
addl
jg
mov
sub
lea
mov
nop
ja
push
jmp
add
mov
xchg
inc
lcall
lret
pop
push
jmp
stos
test
lea
loop
imul
sbb
xchg
frstor
fmuls
push
push
call
and
pop
mov
addl
inc
push
ret
aaa
jge
inc
inc
mov
xor
popa
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsl
mov
popf
xchg
sbb
dec
push
movl
sbb
add
cmpl
je
xor
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
les
add
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
in
leave
bound
lods
call
loop
lods
cmp
pusha
sub
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
add
jne
roll
add
test
add
jne
mov
cmpl
je
pusha
clc
movswl
popa
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
jge
add
sti
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
fadds
pop
test
or
adc
add
aaa
popf
sti
push
loope
mov
dec
jns
adc
scas
mov
jmp
push
std
nop
cs
inc
icebp
push
cld
mov
add
add
xor
xchg
push
push
push
push
push
rdtsc
pop
pop
rdtsc
pusha
popa
pop
pop
pop
push
push
push
push
jno
pop
rdtsc
jmp
push
scas
pop
daa
mov
inc
das
mov
pop
xchg
push
movswl
pop
pushl
add
call
push
push
call
and
pop
mov
addl
inc
push
ret
push
lods
adc
clc
fisttpl
push
push
call
and
pop
mov
addl
inc
push
ret
inc
scas
loope
cli
sbb
sub
or
or
daa
fmuls
push
push
call
and
pop
mov
addl
inc
push
ret
icebp
xor
pop
lret
jmp
ds
sbb
add
add
push
call
and
pop
mov
addl
inc
push
ret
xchg
shl
daa
add
mov
mov
add
push
push
call
and
pop
mov
addl
inc
push
ret
inc
adc
lret
mov
xor
mov
call
outsb
dec
scas
inc
mov
in
cmp
adc
pop
jo
mov
lea
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
shl
aam
enter
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
icebp
rolb
ljmp
push
push
call
and
pop
mov
addl
inc
push
ret
stc
dec
xor
or
or
xchg
std
sbb
or
or
add
testl
sub
add
std
orb
jge
push
push
push
push
js
rdtsc
jns
pop
pop
rdtsc
push
push
push
push
rdtsc
pop
pop
rdtsc
push
push
rdtsc
pop
pop
pop
pop
pop
pop
xchg
sub
pushl
mov
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
or
hlt
or
adc
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
std
xchg
into
mov
stc
mov
push
jmp
fucomp
mov
cli
rorb
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
scas
push
incb
jb
clc
sub
call
push
push
call
and
pop
mov
addl
inc
push
ret
cli
push
fistpl
push
jnp
mov
clc
fisttpl
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
call
xor
cmpl
je
jns
mov
mov
sub
movb
push
push
call
and
pop
mov
addl
inc
push
ret
fldl
jecxz
inc
das
jmp
mov
lea
std
push
test
lea
test
movl
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
mov
xchg
or
mov
je
pusha
call
movsb
and
push
lahf
mov
loop
or
mov
pop
mov
popa
adc
mov
sub
add
mov
sub
lea
push
pushl
mov
call
pop
sub
and
cmpw
jne
movzwl
add
cmpl
je
sub
jmp
mov
mov
add
movzwl
mov
mov
mov
add
mov
add
mov
add
mov
popl
add
jmp
push
mov
subl
pop
xor
ret
cmpl
je
movb
push
pushl
lea
call
push
call
mov
mov
call
jmp
xchg
mov
divb
mov
inc
mov
pop
jmp
mov
dec
outsl
scas
mov
movsl
iret
add
mov
mov
mov
mov
mov
add
sub
jbe
mov
add
mov
push
mov
popl
push
mov
pop
xor
sub
call
inc
out
bound
sahf
push
cmc
push
subb
inc
jle
inc
repz
pop
dec
pusha
mov
jmp
lea
mov
insb
xchg
decl
test
mov
inc
cmpsl
imull
jbe
or
push
jnp
call
pop
mov
adc
out
icebp
and
out
icebp
mov
or
fiadds
lcall
mov
cli
popf
sbb
addr16
adc
mov
mov
int
lahf
mov
push
inc
les
in
lahf
mov
in
pop
cmpsl
movsb
push
test
arpl
push
sarl
lret
mov
data16
js
lret
mov
lret
imul
cli
mov
loop
test
mov
mov
fstpt
pop
xlat
nop
rcll
or
or
in
into
outsb
in
into
add
jnp
push
pop
lods
inc
pop
mov
nop
sarl
movsb
mov
xor
lret
and
int3
pop
leave
movsl
adc
push
pop
sbb
push
mov
and
sbb
icebp
mov
push
pop
xchg
fs
mov
pop
mov
or
mov
in
insl
sbb
mov
push
in
mov
mov
inc
imul
mov
adcl
mov
nop
xor
stos
int
lret
jp
dec
std
test
je
jns
push
aam
jmp
pop
add
scas
cmp
fdiv
pop
nop
pop
testl
jnp
push
xchg
fcoml
fcoml
mov
out
in
fdivs
add
jg
sbb
pop
sub
mov
std
lods
scas
jnp
push
lods
fcoml
fcoml
mov
loopne
xchg
sbbb
pop
adc
loope
or
lea
insb
mov
mov
mov
gs
nop
pop
testl
jnp
push
mov
fcoml
mov
aam
cmp
testb
sbb
mov
pop
sbb
loope
sub
rorb
into
aam
call
cmp
aam
pushf
mov
call
cmp
push
call
and
push
rcr
lea
arpl
sbb
ss
enter
dec
jmp
mov
fcoml
and
in
js
fsubrl
mov
loope
dec
seto
push
cmp
test
xchg
outsb
stos
sub
js
push
lret
and
in
js
fsubrl
mov
loope
dec
dec
pushf
push
mov
cmp
test
call
cmp
aam
pushf
mov
call
cmp
pop
xchg
repnz
sub
add
test
push
mov
inc
cwtl
xor
ret
cmp
js
push
or
jmp
popa
mov
nop
push
js
push
test
jmp
cmpsb
clc
rorl
scas
popa
scas
fidivs
push
into
add
cmp
js
push
xchg
ss
lock
or
icebp
push
mov
cmpb
mov
push
in
xor
xchg
sub
js
xlat
mov
lods
push
ret
cmp
js
push
or
jmp
popa
aad
push
imul
jmp
in
pop
es
mov
test
jl
push
call
add
in
stc
jo
in
xchg
lods
push
call
xor
callw
add
lcall
test
sub
push
arpl
call
js
cmp
js
push
or
jmp
popa
in
nop
push
imul
jmp
icebp
arpl
frstor
mov
loope
xchg
loopne
sahf
add
mov
xor
jne
mov
jge
xchg
sub
ja
xchg
sub
std
in
popa
insb
jge
push
call
push
mov
and
cltd
imul
lods
push
ret
cmp
js
push
or
jmp
popa
in
push
imul
jmp
sub
and
aam
jl
push
out
sub
push
mov
js
mov
xlat
xor
xchg
or
ret
push
call
stos
ds
and
pop
sub
call
or
insl
jb
xchg
ss
pop
xchg
xor
ret
fisubrs
fcomp
js
push
jmp
int
xor
mov
int
lods
push
ret
cmp
js
push
or
jmp
popa
int
push
imul
jmp
js
xor
cmp
insb
dec
aam
jle
out
fwait
push
call
ljmp
call
js
jae
cmp
aam
pushf
mov
call
cmp
or
stc
out
jbe
lods
push
jmp
pusha
stos
push
call
shll
xchg
or
lds
js
mov
fs
fnsave
lahf
sub
fisubs
push
or
xor
jne
mov
call
js
jae
cmp
lods
pushf
mov
call
cmp
mov
out
fsubs
fs
and
mov
jp
push
ret
cmp
js
push
or
jmp
popa
in
nop
push
imul
jmp
hlt
jnp
es
js
jp
stc
movsb
mov
insl
leave
lods
push
call
jl
push
call
add
ja
xchg
lods
push
call
and
aam
jle
nop
mov
mov
inc
jp
push
ret
cmp
js
push
or
jmp
popa
in
push
imul
jmp
adc
fisubs
fildll
fadd
js
push
add
orl
push
std
test
js
call
into
stc
fs
call
js
push
ret
cmp
js
push
or
jmp
popa
mov
nop
push
js
push
test
jmp
aaa
add
fistpll
push
ret
cmp
js
push
or
jmp
popa
cmc
nop
push
imul
jmp
jge
dec
mov
push
mov
call
js
cmp
js
push
or
jmp
popa
aad
push
imul
jmp
gs
clc
out
xor
stos
push
call
shll
xchg
or
leave
push
call
pop
sub
cmp
dec
test
dec
or
jecxz
cld
popa
xchg
inc
xor
out
sub
js
loopne
cmpsl
add
push
shrl
inc
jl
push
call
add
in
stc
jo
in
mov
mov
fs
fildl
lods
mov
call
cmp
aam
pushf
mov
call
cmp
mov
xbegin
xor
call
fildll
fsubs
js
cmp
js
push
or
jmp
popa
in
nop
push
imul
jmp
push
std
xchg
push
call
call
sub
bound
lods
push
call
js
pop
call
test
sub
lods
mov
call
add
in
stc
jo
in
mov
fcom
pop
call
flds
push
add
xor
mov
inc
test
push
push
mov
jmp
or
mov
shlb
push
leave
jl
bound
push
call
or
mov
js
scas
sub
xor
xchg
or
enter
imul
cltd
xor
pop
xor
mov
in
xor
cmp
dec
sub
pop
nop
pushf
cmpl
daa
cmp
push
sbb
mov
or
push
out
xor
bound
push
mov
js
lods
sub
xor
xchg
or
les
js
movsb
sub
xor
pop
mov
in
js
push
mov
sub
insb
out
push
call
jns
or
int3
add
ret
cmp
js
push
or
jmp
popa
aad
push
imul
jmp
cmpsb
dec
sbb
adc
fdivrs
xor
lods
bound
lods
push
call
jecxz
test
call
add
in
stc
jo
in
xchg
lods
push
call
push
cmpsb
jmp
arpl
pop
jbe
subb
aam
call
cmp
aam
pushf
mov
call
cmp
mul
clc
xor
cmc
add
loop
mov
sub
push
call
mov
iret
repz
add
lods
adc
xor
sub
push
mov
fcoml
and
in
js
fsubrl
mov
loope
dec
jbe
push
mov
cmp
test
xchg
outsb
stos
sub
js
push
lret
and
in
js
fsubrl
mov
loope
dec
bound
aam
ficoms
loop
movsl
inc
jl
push
call
add
ja
xchg
lods
push
call
std
subl
js
push
inc
xchg
out
popl
rol
in
out
in
cmp
js
push
mov
jl
sub
popa
call
cli
xor
mov
xor
cmp
xor
mov
cmp
push
mov
das
adc
int
call
das
call
mov
fcoms
add
mov
pop
aam
shrl
popa
scas
push
call
dec
dec
test
or
add
sub
sub
fisttpl
mov
aam
ret
int
dec
pop
xchg
es
loope
aaa
push
pop
outsb
xor
test
sub
xchg
mov
cmp
out
shr
pop
enter
xchg
sub
stc
out
ja
out
insl
adc
push
push
mov
mov
xor
push
xchg
pusha
ja
mov
in
mov
jo
mov
sbb
mov
inc
call
outsb
and
inc
aas
lods
adc
pop
ja
fbstp
push
cmpsl
sbb
movsb
pop
ja
sub
sbb
jbe
ja
sub
jle
mov
repnz
fidivl
lea
pop
ja
out
mov
and
cmp
mov
lahf
xor
jecxz
xor
push
inc
aas
lods
mov
call
ja
mov
mov
add
dec
mov
add
mov
pusha
ja
mov
in
mov
push
sti
testb
loop
mov
data16
mov
in
dec
inc
jns
adc
fwait
pushf
and
movsb
add
lcall
xchg
push
and
rol
sub
mov
in
pop
pop
jo
out
push
int3
sahf
mov
or
mov
shlb
cmpsb
ljmp
mov
mov
rol
push
cmpsb
cmp
iret
sarl
ljmp
inc
negl
popf
mov
sub
out
push
pusha
or
xchg
dec
cmp
idivb
pop
mov
jg
filds
fsub
ret
repz
inc
push
int
cmp
sub
cld
xor
push
jae
inc
loop
push
jae
dec
js
popf
mov
pop
je
mov
pop
fbstp
out
lret
pop
je
lret
fistps
mov
call
mov
xchg
in
push
jae
andl
adc
push
pop
out
jmp
xor
mov
xchg
xor
fidivs
std
das
mov
scas
das
fs
cli
sbb
iret
aaa
fildl
cs
xchg
and
inc
cmp
in
cltd
xor
push
xchg
mov
pop
int3
dec
jmp
icebp
mov
scas
and
pop
jo
icebp
inc
xor
fildl
dec
pop
jns
push
pop
stos
push
dec
aad
testl
push
insl
aaa
sbb
notb
xor
mov
sbb
sbb
shlb
pop
int3
add
lods
dec
cmp
xor
popa
jb
dec
aad
mov
mov
xor
int3
dec
aam
jg
jp
jp
mov
jbe
bound
lahf
mov
je
mov
iret
leave
and
int3
inc
mov
pop
test
mov
adc
lds
push
in
inc
mov
rorl
xor
movsl
ret
lock
mov
test
cmp
or
fsubl
mov
push
sbb
repnz
jp
repnz
add
push
lea
les
std
mov
jmp
cwtl
outsb
or
sbb
mov
test
dec
fnstcw
push
imul
mov
and
adc
pop
rclb
imul
push
sbb
mov
scas
stos
inc
inc
rorb
cmp
push
imul
cmpsb
stos
pop
movsb
cmpsl
jmp
sti
mov
out
sub
jnp
pop
lods
ret
mov
adc
push
mov
xor
mov
fsubl
mov
push
sbb
repnz
jp
repnz
xor
push
imul
push
add
mov
sbb
fs
pop
mov
fcomi
rclb
std
movsb
cmp
cmp
shlb
push
sarl
xchg
stos
sbb
mov
push
imul
movsl
stos
aas
inc
cmp
cmp
push
imul
filds
aam
push
dec
insl
push
pop
push
fadds
jl
mov
push
das
adc
push
push
cmc
mov
movsl
stos
aas
inc
cmp
cmp
push
imul
cld
outsl
mov
icebp
add
push
imul
pusha
jecxz
cs
push
lds
imul
jbe
cwtl
cltd
pushl
mov
jmp
and
xor
push
test
imul
push
dec
inc
sti
scas
rcll
adc
push
fcoms
je
mov
adcb
mov
cmp
xchg
loope
mov
push
imul
push
inc
mov
ds
push
repnz
push
ret
in
mov
inc
ret
adc
les
mov
push
imul
jae
adc
fnstcw
cmp
repnz
jp
repnz
mov
push
mov
jne
inc
jecxz
loope
jb,pt
std
out
xchg
stos
xlat
inc
lds
adc
fldt
push
rorb
cli
lea
dec
inc
sti
lods
rorl
adc
push
fcoms
jne
mov
xor
push
and
fsubs
inc
lcall
ss
mov
fsts
movb
ret
jp
mov
inc
lret
adc
dec
enterw
add
enter
push
fldt
inc
xor
push
fsubr
push
fwait
xchg
cmp
outsl
adc
into
mov
inc
lcall
cmp
insl
push
cmp
push
and
mov
cmpsl
stos
insl
inc
or
cmp
push
imul
fildll
lods
mov
pop
jae
fwait
lods
repnz
jb
je
pop
aaa
icebp
addl
xchg
leave
adc
and
popa
sub
sahf
push
inc
cmp
jne
iret
lock
jp
xchg
std
cli
mov
cs
test
sahf
imul
cs
push
roll
or
sarl
icebp
mov
sub
add
mov
arpl
push
pop
shr
repz
mov
push
sbb
mov
outsl
fistpll
add
cmp
fdivp
in
inc
jp
sub
mov
clc
xor
jmp
xchg
cwtl
dec
rorb
movsl
mov
pusha
std
mov
jecxz
jge
xchg
xor
pop
xchg
sub
xchg
cmp
int
fdivrs
adc
xor
call
mov
mov
call
sub
test
mov
fadd
push
ret
loopne
jns
fisubrl
xor
mov
sbb
call
pop
fldl
les
es
or
es
sahf
aad
lcall
fisubs
or
cmp
stc
fdivs
cmp
adc
pop
frstor
ret
es
cmp
aad
inc
popa
aad
into
mov
je
mov
ficompl
pushf
adc
adc
mov
lock
sahf
mov
enter
cmpsb
fisubs
bsf
cmpsl
daa
call
fcom
fstps
lahf
add
daa
adc
pop
mov
out
and
or
fbld
or
lret
arpl
and
mov
mov
mov
cmpsb
mov
rcrb
aad
push
or
push
sub
test
xchg
or
out
lea
and
and
mov
test
mov
dec
movsl
mov
jmp
ret
xchg
imul
xchg
push
mov
mov
pusha
mov
icebp
jb
outsl
xor
mov
inc
fs
test
inc
fwait
sub
adc
lahf
shlb
lret
xor
xor
pop
ds
loopne
sbb
lods
jnp
stc
inc
lock
sbb
ja
lods
jnp
fcoml
arpl
xor
mov
mov
and
pop
adc
dec
xchg
shrl
lcall
stos
pop
push
add
out
jne
lea
call
stos
popf
mov
cs
addr16
and
jnp
mov
pop
lcall
test
test
add
lea
pop
push
movsl
clc
mov
inc
fwait
mov
fnsave
mov
pop
arpl
fldl
mov
or
push
jne
cmpsb
mov
adc
xchg
lods
andb
or
pushf
jne
mov
xlat
mov
pusha
scas
ljmp
gs
inc
jae
sub
js
nop
sahf
pop
inc
add
xlat
sahf
int3
into
nop
push
jecxz
nop
sahf
int3
push
nop
inc
js
nop
sahf
push
shll
push
in
int3
mov
leave
push
or
lods
cmpsl
out
mov
pop
xchg
dec
mov
sbb
std
push
pop
mov
test
push
mov
mov
sub
sbb
std
push
pop
mov
pop
push
negl
push
dec
mov
sbb
std
push
pop
mov
js
inc
mov
push
int3
push
push
divl
out
sbb
out
and
mov
jne
pop
mov
pop
xchg
inc
int3
mov
leave
push
or
lods
cmpsl
out
mov
push
out
mov
mov
push
int3
push
push
divl
out
sbb
mov
rorl
or
sbb
std
push
pop
mov
inc
sub
mov
sub
xchg
sbb
std
push
pop
mov
adc
dec
int3
push
push
divl
out
sbb
cmc
lret
pop
test
push
int3
push
push
divl
out
sbb
cmc
push
icebp
cwtl
push
addr16
push
int3
push
push
divl
out
sbb
out
and
mov
jne
pop
mov
pcmpgtd
push
or
lods
cmpsl
out
mov
push
shll
push
in
int3
mov
leave
push
or
lods
cmpsl
out
mov
enter
mov
out
inc
call
flds
sahf
int3
into
push
and
fnstcw
sahf
int3
into
push
and
fnstcw
sahf
int3
into
push
and
fnstcw
sahf
int3
into
push
and
fnstcw
sahf
int3
into
cvtps2pd
fcmovnbe
addr16
shl
mov
test
cltd
nop
jl
push
lret
out
into
nop
aad
inc
loop
fnstcw
dec
int3
into
or
sahf
pop
jnp
dec
and
push
cwtl
pop
push
xchg
dec
xor
mov
push
int3
into
nop
in
int3
into
nop
in
lds
push
and
cmp
xchg
mov
jae
sahf
int3
into
stc
cmp
or
addr16
nop
sahf
int3
shr
and
leave
nop
sahf
jecxz
int
int3
into
nop
sahf
int3
into
nop
sahf
int3
into
nop
sahf
int3
into
nop
sahf
int3
into
nop
sahf
int3
into
nop
sahf
int3
into
nop
sahf
int3
into
nop
sahf
int3
into
nop
sahf
int3
into
nop
sahf
int3
into
nop
sahf
int3
into
nop
sahf
int3
into
nop
sahf
int3
into
nop
sahf
int3
into
nop
sahf
int3
into
nop
sahf
int3
into
nop
sahf
int3
into
nop
sahf
int3
into
nop
sahf
int3
into
nop
sahf
int3
into
nop
sahf
int3
into
nop
sahf
int3
into
nop
sahf
int3
into
nop
sahf
int3
into
nop
sahf
int3
into
nop
sahf
int3
into
nop
sahf
int3
into
nop
sahf
int3
into
nop
sahf
int3
into
nop
sahf
int3
into
nop
sahf
int3
into
nop
sahf
int3
into
nop
sahf
mov
jbe
mov
xlat
call
mov
cld
and
jbe
loopne
xlat
call
movb
jmp
and
jbe
test
pop
rorb
mov
jbe
into
sub
call
cs
ljmp
jbe
shrb
xlat
call
push
inc
test
fcomip
shll
pop
pop
cmp
mov
xorb
lret
lret
imul
jae
loop
sub
dec
sub
push
hlt
xchg
in
out
sub
xchg
icebp
sbb
xor
mov
int3
mov
xchg
test
mov
jne
cmpsb
lret
arpl
pop
dec
scas
pop
pop
pop
add
sbb
cltd
sbb
stc
sahf
adc
fptan
xchg
lods
and
or
push
jmp
xorb
daa
lcall
fnstenv
stos
data16
sub
out
mov
sbb
inc
jnp
sbb
hlt
imul
mov
xor
jg
andb
loope
mov
arpl
shll
cs
aad
lds
push
leave
xchg
xchg
dec
and
fldenv
pop
push
mov
pop
inc
outsb
fistl
outsb
out
push
inc
and
std
inc
xor
fidivrs
into
sti
push
test
int
adc
lmsw
mov
inc
push
or
push
roll
pop
iret
lods
jae
lret
pop
or
xchg
pop
cmp
lahf
inc
add
pop
jnp
mov
mov
icebp
xchg
mov
xchg
adc
pop
inc
mov
gs
sti
cmpsb
andl
or
mov
mov
push
mov
in
outsb
gs
and
jbe
push
repnz
lds
mov
lods
xor
fdiv
cmp
mov
loop
fnstenv
scas
test
xorb
nop
add
outsl
mov
cmpsl
mov
jmp
stc
and
cmp
int3
aad
roll
or
jns
cmp
sbb
sbb
popf
mov
xor
leave
sub
mov
outsl
stos
mov
adc
adc
cmp
out
jbe
push
inc
repz
jne
out
sub
in
pushl
dec
mov
xchg
push
ret
out
jno
sarb
mov
lods
stos
es
nop
or
pop
push
mul
xor
push
sbb
inc
mov
push
scas
es
add
mov
call
hlt
rorb
sbb
add
sbb
dec
movsl
daa
push
jmp
and
inc
fsubrl
ds
fcmovb
fcomip
mov
sbb
loopne
dec
inc
sbbl
xchg
jecxz
lea
and
fildll
push
filds
stos
inc
jg
pop
xchg
pextrw
xor
ret
popf
or
mov
add
ficoms
mov
add
and
dec
pop
cli
jmp
scas
pop
lds
push
lcall
jg
sbb
ret
mul
dec
fcompl
in
sub
mov
js
outsb
xchg
jle
pop
inc
div
xchg
js
pop
ljmp
pop
mov
pop
jl
rcrb
xor
cmpsb
inc
xor
sti
test
lods
adc
xchg
sahf
int3
repz
stc
scas
mov
rcrl
fisttpl
sub
dec
loopne
loop
pop
xor
xchg
inc
add
xchg
test
mov
scas
rcrb
add
xchg
jmp
sar
pushf
adc
das
out
inc
jmp
das
test
in
addl
jl
jo
jmp
mov
orb
fidivrl
jno
fadds
xchg
shll
cltd
orb
int
int
mov
sti
out
fs
or
in
iret
bound
popf
popf
push
into
jbe
shll
mov
add
cmp
mov
fnstcw
out
adc
sub
mov
bound
fisubs
sub
mov
sub
sbb
jmp
sbb
nop
sahf
int3
inc
cmp
leave
nop
fidivl
dec
pop
push
sub
aas
adc
outsb
dec
addr16
lods
adc
mov
enter
data16
int3
adc
push
inc
mov
fists
test
test
dec
push
xchg
push
fdivrs
lahf
cmpsb
fiadds
cmp
adc
jp
adc
arpl
cwtl
sbb
cmp
push
enter
adc
cs
pop
push
ja
int
stc
imul
xor
jns
xchg
sub
fs
dec
jne
stos
or
push
inc
cmp
xchg
js
lds
xchg
and
xchg
aaa
cs
jg
test
pushf
pop
push
mov
repnz
jns
adc
adc
int
outsb
fcoms
xchg
mov
cmp
pop
jl
jle
xor
adc
xor
xchg
mov
sbb
sub
pop
inc
dec
mov
mov
add
mov
icebp
mov
xor
cld
loope
idiv
in
mov
mov
mov
jl
push
add
leave
pop
cli
sub
lahf
xchg
xor
pop
mov
in
jb
ficompl
sbb
aas
xchg
dec
sub
mov
mov
pop
ja
push
pop
mov
lret
and
sbb
mov
aam
div
pop
mov
and
inc
ret
outsb
mov
mov
push
sbb
mov
std
inc
test
push
mov
test
jge
lret
add
push
shl
imul
test
xchg
and
pop
scas
lods
fisubs
or
sub
andl
and
jnp
mov
adc
gs
shl
lcall
aam
stc
xchg
sbb
sbb
push
das
aaa
daa
cmc
int3
sbb
fiaddl
sub
dec
xchg
mov
inc
lahf
mov
rcll
cwtl
lret
scas
sbb
push
mov
push
inc
mov
inc
add
cld
pop
insb
icebp
and
cld
enter
mov
xor
add
mov
push
movsb
sahf
test
popl
enter
pop
scas
jp
jne
xchg
or
mov
lret
pop
ds
cmpb
sar
add
nop
sahf
mov
push
cltd
loopne
push
sub
repz
test
adc
stos
out
mov
cmc
xchg
aad
push
mov
jge
addr16
scas
xor
xchg
into
fmuls
outsl
test
jo
insb
push
lds
cltd
into
xchg
insl
xor
int3
rorl
mov
push
icebp
cmpsl
pop
lret
je
mov
fwait
sub
in
push
jns
pop
dec
and
mov
xchg
into
in
mov
or
cs
cld
xor
add
bound
sahf
and
pop
push
sahf
inc
iret
jno
loopne
pusha
xchg
hlt
sbb
xchg
sbb
pop
addr16
shl
stc
jge
sbb
inc
sub
add
add
dec
repnz
subb
sahf
arpl
xchg
jno
aam
ss
idivb
push
lret
nop
sahf
out
cs
andl
subl
inc
pop
pop
or
mov
pop
lods
xchg
inc
cmp
push
jnp
addr16
jns
inc
mov
mov
sub
test
mov
imul
in
or
push
scas
push
mov
sub
push
add
jnp
cmp
pushf
adc
dec
jo
ret
push
xor
mov
cmp
and
jmp
sarl
xchg
mov
push
lods
stos
lock
fwait
js
xchg
pop
iret
movsb
jae
xor
add
pop
jbe
pop
fisttpl
or
movsb
lahf
mov
xor
and
movsl
pop
sti
pusha
data16
pop
fists
test
test
repz
adc
sub
and
xchg
jecxz
pop
icebp
mov
jbe
xchg
jns
aam
adc
int3
repz
stc
scas
mov
rcrl
fisttpl
sub
dec
loopne
loop
pop
xor
xchg
inc
add
xchg
test
mov
scas
sarb
add
push
ret
cmp
push
sbb
pusha
bound
fcmovnbe
push
lods
insb
mov
test
fsubs
loopne
daa
xor
test
sbb
ds
in
out
std
bnd
mov
sub
adc
xor
sub
and
push
inc
es
sbb
lret
and
stos
jbe
mov
xchg
mov
inc
insl
aam
fucom
mov
out
int
add
adc
pop
idivl
popa
xlat
ror
sub
jnp
push
bound
icebp
imul
sub
fistps
pop
scas
sub
nop
jnp
in
pushf
dec
mov
into
push
nop
sbb
xor
cmp
jbe
aam
cmc
test
mov
inc
push
dec
call
loope
nop
mov
lods
mov
aaa
mov
adc
inc
outsl
lock
leave
mov
ds
mov
fistpl
or
pop
pop
popa
xor
aaa
jns
inc
out
xor
xlat
cmp
inc
out
inc
rcll
xor
mov
adc
stos
inc
and
xchg
or
lret
sub
iret
push
pop
xchg
sub
or
xchg
ret
stc
loop
mov
mov
outsb
ss
mov
in
mov
scas
jecxz
jg
adc
stos
in
nop
sahf
int3
jl
addr16
sub
fcomi
jbe
lods
pop
cmp
je
or
and
adc
xchg
int
fstps
xlat
add
leave
inc
and
sub
lret
fadd
ds
into
rcll
lret
xor
xchg
cwtl
leave
lods
pop
jae
lret
or
sbb
jne
les
push
mov
insl
icebp
call
sahf
int3
into
push
sahf
xchg
fisttpl
xchg
push
loop
out
pop
icebp
data16
xchg
xchg
pushf
mov
add
aas
sbb
mov
xchg
mov
in
and
cmpl
mov
mov
mov
lock
repnz
xchg
add
mov
or
add
add
cltd
jbe
or
lcall
fcompp
nop
out
xor
sbb
nop
fbld
xor
sbb
rcr
sbb
inc
mov
ds
icebp
fildl
in
mov
push
add
jmp
test
pop
cmp
xchg
fisttpl
jmp
cmp
xchg
rcl
inc
adc
push
jbe
lret
or
xchg
bound
jle
testb
mov
adcb
lret
cli
mov
adc
inc
pop
cmp
mov
inc
pop
loop
inc
outsl
inc
xchg
test
int3
xor
and
call
outsl
jg
lahf
bswap
cmp
repz
jnp
icebp
and
mov
mov
movsl
mov
jnp
push
inc
loopne
sahf
int3
in
ds
pop
fistpll
imul
nop
aad
je
mov
add
shl
leave
sub
lods
and
mov
ds
sub
push
xchg
es
adc
mov
insb
fcoms
inc
das
add
js
sarl
stos
fdivs
push
dec
ja
out
jg
lret
mov
sahf
jp
inc
mov
xchg
sahf
int3
outsb
xchg
lcall
xchg
jno
dec
cmp
repnz
sbb
adc
dec
mov
mov
shl
insl
leave
mov
in
mov
mov
pop
pop
mov
fstps
sbbl
lock
leave
nop
sahf
jmp
repnz
divb
cmp
das
mov
xlat
test
fstpl
mov
add
pusha
push
hlt
xor
mov
mov
pop
and
sub
cli
xor
xchg
xor
pushf
xchg
loope
nop
sahf
jo
xor
cwtl
in
loop
test
push
push
imul
dec
out
pop
sahf
bound
pushf
xchg
dec
mov
sbb
mov
fldcw
nop
cwtl
fsts
and
inc
test
jno
add
mov
rclb
sub
push
mov
shl
mov
imul
jnp
adc
scas
pop
mov
jno
add
mov
sbb
inc
xchg
xchg
popf
jp
jne
sti
clc
adc
cmp
push
repz
mov
dec
jge
mov
jb
mov
enter
sbb
mov
fucomp
mov
es
shlb
sub
fimuls
mov
pop
xor
xor
mov
mov
mov
sbb
stos
inc
iret
aas
lret
push
jge
std
xchg
xchg
xchg
pop
xchg
xor
repz
push
inc
lret
mov
repnz
mov
xchg
and
push
cmpsl
dec
xlat
std
pushf
les
and
testl
pop
xchg
sahf
int3
cs
stc
push
mov
xlat
cli
sbb
push
jmp
pop
imul
cmp
sbb
jno
pop
sub
in
int3
push
cmp
dec
lea
das
dec
lcall
cmp
ds
cmp
jne
xchg
push
repnz
icebp
mov
cwtl
icebp
cmp
add
xor
mov
movsl
dec
mov
jno
mov
jne
cmpsb
fcomps
mov
out
push
jne
or
aas
xchg
cmp
cmp
sub
int
sahf
inc
test
mov
inc
pop
jne
mov
xor
enter
test
insb
sbb
xchg
rorl
xchg
jecxz
push
stos
cli
mov
je
imul
mov
loopne
dec
cmpsb
test
xor
shlb
push
clc
pop
cwtl
test
pop
movsb
adc
mov
shlb
inc
mov
sahf
lret
dec
and
sub
std
sub
pop
adcb
sbb
or
js
rol
ffree
fdivs
mov
cmp
das
lods
mov
imul
je
xor
pop
jg
out
test
sub
mov
mov
push
mov
push
dec
imul
aam
jae
mov
in
in
mov
xchg
pop
xor
sub
lods
mov
outsl
mov
test
fcoml
push
ror
mov
loop
in
mov
incl
cmpsb
xor
pop
int3
push
adc
push
clc
cmc
xchg
test
ss
pop
sbb
adc
aad
and
aas
mov
lock
jmp
rcrl
lret
sbb
popa
sbbl
or
sbb
xchg
mov
movsb
mov
add
inc
jbe
mov
dec
cmp
rcl
loop
loopne
adc
fisubrl
lock
sub
adc
ds
xchg
push
xchg
sbb
repz
sti
cmp
lret
fists
stos
lds
push
cmp
dec
sub
xchg
adc
sahf
shlb
rorl
aaa
ret
pop
cs
in
jb
jns
mov
xchg
adc
lods
inc
cmpsb
imul
push
cs
or
pop
in
popa
mov
popf
lret
jg
sub
adc
sub
es
push
or
int3
cmp
rorb
addr16
cmp
repnz
popl
pusha
insb
sub
mov
cli
loope
adc
cli
aad
int3
inc
sub
pop
je
fwait
sbb
mov
mov
jne
scas
das
lret
idivl
cmp
mov
mov
hlt
jne
clc
dec
push
xorb
ss
sbb
mov
mov
pop
push
mov
cltd
xor
pop
sub
fs
pop
jae
pusha
data16
shlb
sbb
daa
pop
loope
cld
add
mov
fsubs
dec
jmp
ja
pop
arpl
ja
jb
into
lret
stc
xchg
adc
or
mov
fwait
popa
pop
dec
fnstcw
leave
jl
dec
out
xor
lcall
scas
dec
movsl
stos
ljmp
call
idivl
pop
mov
ficoml
xchg
jo
push
jp
xor
and
out
dec
add
sub
pop
jl
lods
jns
adc
gs
or
or
divl
pop
in
fstl
adc
xlat
addr16
mov
out
adc
xor
test
and
mov
cwtl
pop
and
mov
dec
movsb
pop
movsb
mov
test
enter
xor
or
cld
inc
jle
arpl
sub
neg
mov
movsl
push
pop
hlt
jecxz
xchg
inc
push
outsl
fidivrs
mov
xchg
jne
pop
mov
adc
sbb
lea
andl
rolb
insb
iret
or
scas
pushf
lock
dec
mov
lock
and
int
mov
mov
int3
into
jb
xchg
in
out
sub
bound
pop
lods
push
mov
inc
pop
xor
mov
lcall
int
lods
imul
shrb
scas
shl
and
fiadds
pop
pop
loop
addb
push
jbe
loope
test
pop
and
dec
jo
xor
dec
sbb
sahf
inc
adc
fdivr
insl
xchg
popa
or
add
sub
cli
push
pop
flds
nop
popf
or
test
dec
addb
xchg
in
adc
popa
arpl
push
cld
inc
aam
fdivl
lret
inc
aad
rcll
sbb
loope
mov
lock
push
xchg
lret
pop
out
sti
pop
push
repz
sub
into
and
xor
outsl
ljmp
add
and
pop
sbb
dec
and
pop
adc
mov
ficomps
cmp
fs
and
jmp
push
push
or
or
ja
push
or
leave
popa
subl
enter
xor
jnp
aas
xor
jnp
cltd
lcall
lret
ljmp
popf
push
sarl
sub
test
lret
mov
cwtl
jae
outsl
or
adc
test
xchg
jp
adc
popf
xchg
mov
mov
adc
daa
mov
jp
jb
mov
int
sahf
int3
iret
or
ds
add
movsl
xchg
xor
imul
xor
fdivrs
repnz
pop
cli
sbb
lock
stc
cmc
push
cmpsb
daa
pop
cmpsb
or
movsb
pop
in
inc
add
pop
es
xchg
aaa
or
int
mov
std
lahf
mov
jae
cmp
inc
cmc
in
stc
divb
inc
pop
enter
sub
cli
inc
sub
push
lods
inc
fcomp
fisttps
daa
cmp
test
in
int
cmp
adc
inc
je
fs
test
fimull
add
jae
clc
inc
cmp
dec
mov
pop
adc
divl
ja
aas
push
fsts
not
adcb
adc
test
push
test
xchg
stos
cmp
test
idivl
sub
loope
mov
jne
dec
mov
add
std
mov
cs
fmul
xchg
jle
pop
push
rep
sub
or
inc
rolb
jg
sarl
cmc
movsl
leave
sub
mov
push
xchg
or
je
movsl
jmp
or
mov
je
test
jbe
popf
mov
stos
adc
mov
adc
testb
das
sub
inc
add
inc
mov
mov
or
int3
mulb
icebp
imul
test
outsl
cmp
sbb
inc
test
lock
push
push
bound
nop
out
cmp
lods
movsb
jecxz
and
lds
xchg
cmpsb
push
sub
push
push
repnz
mov
dec
jge
addr16
arpl
jb
mov
mov
add
sarb
xchg
ficomps
jns
adc
ds
xor
jnp
jnp
into
mov
push
enter
jae
outsb
nop
and
push
pop
cmp
insl
push
cmp
scas
je
fcoms
mov
push
cmpsl
mov
or
cmp
movl
xchg
push
stos
jge
arpl
in
lods
inc
pop
push
enter
push
popa
sbb
icebp
dec
and
and
in
jnp
pop
dec
icebp
addr16
into
in
test
mov
xor
into
in
test
xlat
push
xor
pop
outsl
nop
daa
rcrl
outsb
iret
pop
xchg
push
cwtl
push
gs
fs
int3
into
push
and
outsb
sarl
or
int3
into
nop
lahf
pop
dec
sahf
pop
out
push
pop
pop
std
test
push
nop
sahf
inc
mov
int3
into
jecxz
test
mov
test
push
loope
leave
nop
sahf
mov
mov
shr
pop
cwtl
nop
fs
mov
mov
addr16
mov
imul
repnz
jns
enter
push
movsb
popa
cltd
out
imul
push
into
repz
int3
push
ljmp
leave
nop
adc
pushf
adc
sub
adc
lret
dec
stos
dec
ss
adc
test
lds
fisttpl
adc
dec
sbb
sbb
xor
add
and
sub
pop
cmp
and
jge
test
pop
imul
int3
cmp
clc
adc
in
sub
punpckhbw
or
mov
cmp
xor
mov
inc
push
aas
jae
dec
cmp
mov
aam
sbb
rclb
pop
push
pop
jl
and
mov
jno
int
mov
adc
jle
movsl
sbb
data16
add
sbb
xchg
push
test
mov
stos
xor
push
imul
adc
mov
fsubs
push
mov
adc
movsb
lock
stos
add
sbb
xchg
cmp
clc
stos
inc
sbb
jl
test
movb
sbb
lret
gs
call
fdivl
ljmp
lods
sbb
lret
into
nop
sbb
mov
repnz
cltd
scas
mov
loop
pop
out
shll
xchg
cmp
dec
ret
nop
xor
cmpsb
or
daa
mov
int3
into
nop
jb
mov
int3
or
call
and
add
add
cmp
jbe
jns
outsb
jns
xor
cmp
int3
add
push
int3
adcb
add
push
rcr
rclb
pop
xor
dec
gs
dec
fildl
jge
xchg
or
inc
dec
loopne
lock
adc
push
rcll
ret
stos
xchg
test
adc
jecxz
imul
mulb
mov
nop
sahf
int3
repnz
mov
repz
mov
inc
lret
jle
cmp
enter
pushf
add
ds
mov
fsubrl
adc
clc
jle
cmpsl
cmp
push
pop
cld
adc
fisttpl
mov
sub
mov
cmc
popf
pop
int3
into
nop
shlb
inc
jns
adc
mov
add
add
inc
das
and
xchg
inc
and
ljmp
cmpsb
js
inc
jle
faddp
xchg
pusha
or
lods
mov
divb
pop
lcall
lods
rolb
pop
in
into
pop
sub
int3
sub
mov
jbe
mov
mov
mov
mov
adc
aam
jmp
adc
adc
pop
imul
xlat
mov
inc
pop
adc
sbb
shrl
xor
mov
sbb
xchg
and
adc
loope
adc
mov
fwait
js
les
bnd
and
movl
adc
jge
cld
jne
repz
insl
hlt
imull
jne
sbb
cwtl
jp
sbb
mov
leave
sti
lods
gs
dec
outsl
add
in
jae
jmp
or
pusha
sahf
mov
mov
into
stos
jo
test
popf
jge
pop
popf
hlt
in
adc
test
mov
insl
sbb
sbb
xor
mov
fld
mov
addb
int3
into
dec
pop
mov
les
dec
lods
rorl
adc
filds
idivb
xchg
and
dec
mov
pop
mov
adc
aam
push
fsubrs
mov
xchg
shll
sub
pop
jns
dec
pop
sub
adc
in
orl
test
fistl
adc
inc
movsb
jnp
cmp
and
cmp
and
pop
mov
or
pop
pop
mov
shll
aas
sbb
int3
into
nop
lcall
xchg
xchg
add
test
or
dec
popa
pop
push
xchg
lret
lahf
mov
xor
mov
addr16
test
pop
jge
aam
push
mov
lcall
not
mov
inc
out
movsl
mov
inc
jp
test
cmp
mov
iret
lret
into
nop
daa
shlb
or
push
mov
xchg
push
mov
insb
or
fwait
lds
sbb
push
add
int3
loope
mov
dec
mov
loopne
push
js
in
aad
add
pop
loope
ret
lock
pop
mov
adc
test
jae
fwait
js
les
fmull
cld
aaa
data16
cltd
outsl
adc
or
cltd
sub
and
jbe
out
testb
addl
sarb
push
sub
cmpsb
cmpb
sarb
pop
int
cmp
mov
es
and
sbb
push
ret
cmp
push
not
xor
sti
push
cld
add
js
incb
xor
cmp
bound
push
mov
push
dec
cltd
leave
loope
lcall
hlt
and
imul
adc
js
insb
or
mov
push
mov
aas
int
mov
mov
fidivrl
fisubl
in
adc
push
sub
cmpb
push
lahf
sub
xchg
sahf
mov
xor
cs
loope
pop
xlat
cmp
test
addb
ror
fwait
out
mov
sbb
subb
pop
movb
aas
xchg
sub
roll
and
lcall
testb
insl
loop
inc
push
cs
sahf
arpl
mov
and
leave
nop
sahf
fxch
mov
lods
inc
adc
sbb
pop
outsl
and
cld
cmpps
mov
scas
mov
mov
push
les
and
nop
sahf
int3
inc
fsubl
pop
std
test
mov
sbb
sub
int3
inc
jmp
jp
xor
jno
in
or
mov
pop
popf
nop
fistpll
enter
ret
imul
push
test
inc
std
test
inc
inc
xchg
pop
cmp
aad
fldl
es
into
mov
push
ret
test
or
inc
mov
int3
into
pmaxub
testb
rol
sbb
dec
sbbl
jecxz
outsb
push
xchg
stos
xor
and
cmovle
or
push
jp
iret
inc
xchg
loopne
inc
test
xor
jnp
mov
fsubrp
iret
movsl
push
cmpsb
or
push
in
rcll
sti
or
lock
push
in
lock
jg
mov
jnp
aad
call
cmp
add
cltd
lahf
cwtl
xor
mov
pushf
js
int
sahf
int3
lahf
icebp
add
sub
call
int3
ss
rcl
cmpsl
sbb
pop
imul
mov
repnz
into
or
fildl
test
sahf
int3
into
jns
mov
jg
add
outsb
sbb
popa
pop
enter
leave
nop
sahf
cmp
mov
outsl
out
jo
push
sub
dec
arpl
cmpsl
dec
jmp
jle
xchg
sbb
mov
jae
out
push
xor
out
pop
and
xchg
ror
inc
dec
jmp
dec
or
nop
sahf
int3
shll
xchg
pushf
sar
fisttpl
mov
xor
ret
sahf
test
dec
fmul
nop
sahf
cmpsl
xorl
lret
xchg
movsl
xor
stos
decb
into
nop
jae
out
or
sahf
flds
sbb
rcr
mov
mov
nop
mov
mov
pop
stos
pop
sarb
cmp
lock
mov
sbb
sub
cmp
xchg
mov
sbb
sbb
xorl
push
adc
cmp
in
jp
inc
push
xor
push
int3
cmp
sub
mov
push
mov
cmc
mov
fdiv
xchg
jae
mov
mov
jae
push
and
pushf
adc
repnz
adc
xchg
fistpl
xchg
sbb
sbb
stos
mov
ss
cmp
mov
jp
fldenv
xchg
les
js
aas
mov
adc
add
int3
insw
mov
outsl
mov
mov
dec
shr
aas
in
lahf
into
in
lea
jge
add
mov
mov
mov
sahf
sbb
cltd
mov
sbb
cltd
mov
sbb
cltd
mov
sbb
cltd
mov
sbb
cltd
mov
sbb
cltd
mov
sbb
cltd
mov
sbb
cltd
mov
in
inc
outsb
mov
sbb
arpl
push
mov
mov
lahf
jmp
push
mov
subb
adc
test
mov
test
mov
insb
in
mov
arpl
ljmp
jmp
repz
js
lret
mov
jge
repnz
call
mov
pushf
xchg
ret
sub
ret
aaa
rcrb
xchg
push
stc
mov
das
outsb
or
sub
pop
mov
iret
cs
mov
repnz
fsubp
pop
clc
ret
pop
mov
insb
jb
icebp
dec
push
push
cmpsb
fidivrl
loopne
xchg
fs
mov
ljmp
inc
mov
mov
fidivrs
insb
js
popa
test
sub
sub
shrb
add
adc
lods
mov
pop
test
imul
and
pop
das
test
dec
mov
fsubrl
test
nop
rcll
cmp
test
dec
insl
pop
pop
mov
jl
cmpsl
imul
xor
shrb
test
test
movsb
cmc
hlt
iret
pop
or
push
add
clc
fistpll
xchg
xchg
in
add
cltd
or
cmp
jle
push
test
cmp
xchg
dec
ljmp
cli
outsb
into
ss
mov
xchg
jmp
xor
mov
shl
push
stc
ja
push
push
and
lods
and
add
add
sbb
dec
mov
xor
cwtl
adc
mov
mov
lods
and
cmpsb
xor
mov
out
sub
xchg
sbb
adc
sarl
insl
rcl
aas
shlb
scas
jns
test
cmp
mov
mov
sahf
test
xor
push
and
jle
into
add
je
imul
ljmp
fistpll
enter
enter
lret
or
cmp
sbb
adcl
jl
std
adc
inc
jne
mov
mov
shll
scas
sbb
dec
ljmp
lcall
fdivrp
jle
push
aaa
imul
cmp
aaa
js
call
leave
and
push
push
mov
es
lods
jb
sbb
cmp
cmp
inc
or
jbe
pop
test
enter
and
movsb
add
subb
mov
call
and
sbb
add
mov
cli
loop
push
stos
fldl
mov
pop
dec
jge
das
stc
sbb
enter
adcl
jnp
dec
test
xor
orb
mov
cltd
adc
adc
pop
add
or
jmp
mov
push
jmp
jne
bound
ja
lods
adc
jo
movsb
es
sbb
fdivr
and
inc
loopne
jns
ret
add
pushf
cld
fdivr
xor
stc
icebp
ja
enter
cwtl
pop
xor
lea
aam
cmp
out
addr16
movsb
jno
mov
dec
xchg
es
or
mov
mov
shrl
jl
repz
pushf
shll
sub
repnz
loope
mov
or
popa
xor
mov
add
movsb
sbb
fidivrl
xchg
jb
pop
mov
shlb
jmp
and
icebp
xchg
cmp
xchg
push
mov
adc
sahf
cmp
or
mov
test
enter
inc
lods
mov
add
or
lgs
rclb
mov
in
and
icebp
cmp
mov
ret
dec
decl
int
outsl
aam
mov
enter
aad
in
cmpsl
push
and
dec
cmp
add
mov
xchg
jnp
call
jle
lods
ds
mov
mov
mov
loope
dec
xchg
stc
push
cmp
adc
mov
stos
xchg
add
int
xchg
outsb
mov
xchg
fsubrp
sub
jl
cmpsl
lcall
sub
lahf
jne
outsb
push
ljmp
jo
pop
mov
add
clc
mov
add
loope
mov
add
mov
test
sbb
add
and
out
lods
and
outsl
insb
fldl
lahf
push
lods
jmp
test
xchg
or
inc
in
popf
test
mov
dec
xor
call
stos
sub
fucomi
enter
leave
shl
sub
mov
popf
mov
xlat
xor
add
test
fisubrs
es
add
loop
adc
adc
jns
inc
out
inc
jno
enter
int
cmp
push
mov
push
jecxz
je
hlt
dec
adc
push
xchg
add
or
and
lods
lea
mov
and
inc
mov
and
push
adc
repz
add
jmp
cmp
stc
adc
or
jns
xor
add
xchg
cwtl
sub
dec
xchg
ljmp
adc
sub
sub
jle
imul
xchg
lahf
gs
mov
pop
mov
lret
mov
std
out
rcrb
rclb
sub
and
in
sub
movsl
stos
mov
inc
mov
adc
aaa
ja
loopne
xchg
mov
sbb
aas
xor
sub
and
inc
mov
cmp
sub
lods
push
mov
popf
mov
stc
out
and
pop
lahf
loopne
mov
and
cltd
mov
xchg
add
cmpsb
mov
mov
inc
icebp
mov
cmp
jb
jp
pop
imul
or
ret
lahf
or
mov
adc
push
mov
jp
dec
inc
lahf
jg
push
test
sub
jmp
xor
xchg
ds
sub
sbb
and
add
das
and
loope
test
out
add
mov
loope
pop
mov
loope
mov
mov
daa
xchg
mov
xchg
sub
andb
je
fcmovbe
mov
add
mov
xchg
stos
mov
mov
nop
fnstcw
pop
test
out
xchg
aas
into
mov
fnstsw
xchg
lret
out
pop
fwait
out
arpl
pop
add
loop
adc
cltd
sbb
dec
fcmovnb
repnz
ret
rcrb
ficoml
sbb
insl
call
mov
aaa
xchg
adc
xchg
icebp
shl
int3
adc
mov
pop
test
fadds
add
fisttpll
lods
arpl
ljmp
loope
lods
and
pop
inc
hlt
rolb
je
cmp
test
push
inc
mov
pop
mov
cmc
push
jl
mov
xchg
sub
les
jne
icebp
shlb
jecxz
fisttpll
gs
test
mov
cmpsl
loopne
movsl
lods
sub
sti
cld
stos
xor
xorl
dec
out
call
es
inc
lock
fidivrl
xchg
outsb
out
hlt
iret
pop
or
stos
dec
mov
mov
mov
fdivr
fdivr
push
pop
into
inc
sbb
sbb
test
hlt
pop
inc
jae
enter
cmc
adc
aaa
pop
dec
cs
lret
add
dec
jne
jecxz
xchg
call
sbb
cmpb
pop
cmp
inc
jno
pop
add
daa
popf
mov
push
dec
mov
gs
push
cmovo
das
ret
adc
jl
fcmovnb
pop
pop
xchg
adc
movsb
xor
mov
or
popa
jb
loop
test
dec
cli
dec
lret
xchg
xchg
sub
cs
subl
cmp
imul
sub
pop
mov
pop
call
sub
mov
fdivr
sub
sbb
test
bound
add
mov
movsb
xchg
cld
pushf
xchg
ss
test
lods
dec
mov
pushf
ret
jns
cltd
sarl
imul
jne
and
into
inc
or
cmc
test
insb
insb
and
repnz
jo
es
iret
dec
lret
scas
jp
iret
popf
cmp
lea
fsts
jp
sub
inc
dec
mov
push
cmpb
movsl
mov
pop
sub
mov
push
iret
jno
sub
xchg
addr16
push
sbb
fs
xlat
cmp
xor
push
and
add
jl
aad
pop
cmpb
jle
lret
jp
cmc
sarb
push
jns
loope
cmp
cmp
loopne
test
cmp
sbb
add
jl
adc
lret
ljmp
add
cmc
push
or
cltd
push
adcl
fadds
pop
inc
or
sbb
mov
in
push
lods
mov
cwtl
sbb
add
loope
mov
jecxz
mov
xor
adcb
fnsave
inc
pop
cmove
xor
es
fnstenv
push
add
push
cld
push
adc
xor
ret
mov
addb
inc
xchg
decl
push
push
dec
test
pop
rcr
clc
pusha
lret
mov
ret
ja
test
xadd
push
pop
xor
dec
int
mov
pop
adc
mov
mov
sbb
loopne
cmp
cmpsb
and
pop
ljmp
shrl
lcall
addb
add
xlat
stos
mov
mov
jecxz
shl
xor
imul
out
mov
idivb
das
lcall
cmpl
pop
sbb
fs
lds
adc
add
insb
sahf
push
data16
push
sbb
subl
ss
in
inc
int
cli
aaa
push
dec
mov
movsb
addr16
aaa
mov
mov
pop
xor
and
mov
loop
push
sbb
or
xor
cli
fisttpll
sbb
frstor
pop
jmp
jg
aad
out
mov
jmp
ret
add
clc
leavew
shl
sub
mov
cwtl
ror
pop
sahf
outsb
unpcklps
or
mov
xor
fstpt
or
xchg
xor
bound
nop
jl
mov
sbb
popa
and
fsubrl
outsb
inc
imul
cmp
mov
dec
pop
in
mov
test
int3
shrl
std
cmpsl
lcall
ficomps
mov
and
mov
sbb
inc
push
or
ficompl
rcrl
mov
mov
lcall
dec
cwtl
nop
cmp
push
mov
pop
ljmp
jbe
movsl
jo
cmp
mov
mov
out
cmp
nop
xor
jmp
xor
xchg
lds
mov
jmp
cmp
jmp
fistps
int
cmpsb
mov
sub
leave
mov
xor
ret
jg,pn
mov
iret
mov
xor
adc
frstor
stc
fmull
xor
gs
add
mov
cli
lret
pop
xchg
mov
pop
dec
je
and
lods
and
pop
dec
push
and
adc
xchg
call
sub
sbb
sub
add
hlt
mov
jnp
add
fcmovnb
add
gs
js
pop
fdivp
cmp
or
sbb
sub
call
sub
mov
pop
jb
cltd
fcomps
mov
xor
pop
push
stos
outsl
sahf
xchg
push
or
push
jae
push
scas
int
mov
mov
outsb
sbb
xorb
scas
jp
mov
jb
add
cld
cs
push
inc
aad
xor
popa
pop
inc
aam
jle
pop
push
dec
out
call
jno
xor
ja
fsubrs
inc
ficoml
fwait
mov
adc
add
pusha
insb
dec
pop
adc
pop
aas
cltd
sub
sbb
in
pop
and
xchg
inc
sub
mov
in
repnz
jo
jg
std
cmp
push
jae
jle
int3
push
stos
stos
mov
and
outsl
mov
sbb
dec
adc
pop
add
add
loop
mov
pop
mov
push
in
loopne
popa
mov
lods
and
mov
and
test
fldl
gs
cmp
push
repnz
xor
add
jbe
jb
xor
fstl
sbb
add
fs
xor
mov
jmp
sbb
leave
enter
insb
sbb
lods
xor
jl
sub
mov
jo
int3
dec
in
fnsave
gs
test
shll
clc
mov
sbb
or
aaa
and
out
wrmsr
xor
cltd
mov
and
xchg
cs
rclb
adc
jle
mov
daa
out
pop
adc
mov
inc
and
push
fisubl
sub
inc
cltd
cltd
mov
cltd
loop
xchg
daa
adc
imul
inc
mov
jmp
dec
div
xchg
pushf
adc
gs
div
mov
jbe
fistpl
ss
xchg
push
cltd
mov
xor
int3
pop
insl
add
lods
pop
addr16
sbbl
jns
jns
lret
mov
pop
xor
insl
mov
cmpsb
add
jl
adc
addr16
mov
xchg
loopne
xlat
adc
insl
cwtl
int3
jns
std
jbe
cltd
mov
sbb
sbb
xlat
dec
loopne
repz
jns
cli
fisubrl
mov
mov
out
pop
inc
and
push
loopne
push
lahf
mov
mov
sbb
in
push
push
mov
or
jae
sti
sahf
xor
inc
mov
pop
xor
cmp
std
mov
out
jae
ljmp
mov
mov
sbb
or
addl
push
pop
adc
das
push
aad
sarb
ljmp
mov
hlt
movsl
adc
in
fwait
cltd
mov
xor
dec
hlt
bound
jmp
pushl
fisubrs
mov
div
xchg
mov
mov
inc
ds
sub
test
cmp
outsb
lcall
cltd
int3
and
imul
jno
xchg
icebp
js
pop
mov
sbb
pop
outsb
in
clc
xor
mov
push
mov
pop
mov
icebp
lret
divb
adc
cltd
mov
mov
test
cmpsl
push
mov
lods
daa
and
and
sbbb
add
cmp
mov
bswap
cmp
iret
xorl
adc
sub
fmuls
sbb
push
test
xlat
fstpl
fwait
dec
out
sbb
std
jl
xor
sbb
cmp
sar
cs
clc
ljmp
outsb
dec
popa
pop
pop
xor
mov
push
shr
pop
mov
cmpsl
insl
lret
sbbb
in
out
cmpsl
pop
mov
lods
xchg
aas
mov
dec
popa
cli
mov
sbb
inc
cmp
xchg
dec
popa
fwait
xor
fnstenv
enter
dec
jmpw
cltd
dec
std
jl
xor
sbb
cmp
sar
cs
clc
ljmp
insl
dec
popa
pop
pop
xor
xchg
shrb
mov
test
call
push
xor
rclb
out
dec
std
jl
xor
sub
ljmp
push
clc
ljmp
outsl
dec
popa
pop
inc
inc
pushf
out
push
mov
push
js
xor
push
xchg
test
sub
cld
jl
dec
sbb
movsl
mov
outsb
loop
decb
jmp
add
push
mov
fs
push
add
fs
or
push
insl
test
fdiv
push
mov
fidivs
hlt
mov
mov
adc
hlt
repz
cwtd
lcall
mov
pop
cmp
outsb
push
movsb
dec
mov
lret
sahf
inc
stos
or
adc
gs
lea
adc
in
pop
test
adc
adc
push
mov
inc
scas
mov
cmp
dec
sbb
aaa
adc
rcrb
insb
pop
cld
or
lock
adc
cmp
insb
push
mov
sbb
sbb
adc
rcrb
idivl
cltd
dec
sbb
daa
adc
pop
lea
fldenv
daa
fists
mov
cmp
jmp
std
rolb
mov
rcr
mov
rclb
mov
mov
mov
enter
outsb
jmp
loop
out
mov
ret
insb
inc
sbb
pop
cld
shlb
int
push
repz
scas
test
sbbb
inc
lahf
pop
xchg
adc
ffree
xchg
repz
sub
rclb
shlb
std
stos
push
stc
push
sbb
out
std
and
dec
loope
xchg
jae
inc
add
sub
call
mov
enter
pop
jmp
xchg
sbb
sbb
insb
inc
sbb
and
shlb
push
xlat
push
out
jle
out
roll
pop
adc
mov
add
and
sbb
push
mov
mov
jne,pt
fs
dec
dec
iret
sub
jp
leave
rclb
xor
es
xchg
lret
mul
mov
sbb
add
rolb
pushf
jge
mov
jnp
into
mov
out
hlt
and
icebp
xchg
loop
ret
stos
movsb
add
fisttpl
sub
mov
xchg
rol
lock
adc
fcmovu
mov
dec
adc
test
insl
out
icebp
test
sbb
mov
out
add
xchg
xchg
lds
mov
lds
and
iret
cmp
push
cli
or
sti
or
lds
and
jo
mov
or
and
lds
xchg
dec
clc
mov
lds
and
dec
aam
adc
pushf
clc
cmpsl
daa
or
nop
xchg
out
dec
daa
or
loopne
inc
xor
cs
daa
fsubrl
repz
mov
and
lds
rorb
pop
lds
and
out
pop
lds
mov
mov
and
lds
cltd
or
xorb
sbb
mull
cmp
jle
icebp
aad
rcll
pop
pop
push
gs
push
push
negl
loope
and
vpsubsw
pop
in
cmp
test
mov
sti
mov
fwait
ret
pop
adc
mov
mov
je
lds
hlt
adc
lods
xchg
cmp
push
jnp
cmp
fs
pop
out
dec
daa
or
fdivrl
sub
cs
sbb
pop
addr16
orl
out
pop
loop
and
lds
push
arpl
insl
mov
clc
dec
inc
shl
push
scas
pop
lret
add
mov
add
test
mov
add
lret
rcrl
xor
lea
test
jle
repz
cli
roll
pop
insl
adc
xlat
sub
mov
mov
test
jle
add
aaa
pop
insl
mov
fmul
mov
sbb
sarb
in
dec
sbb
cwtl
out
pop
lds
sbb
sbb
mov
mov
ret
push
sysret
ret
lds
shr
int3
mov
and
xor
sbb
lds
inc
stc
jmp
fldt
lds
and
cmp
in
sbb
lds
and
mov
adc
and
sub
pop
ret
lds
push
cmpsl
loop
add
mov
addr16
and
add
scas
inc
repz
add
lcall
jg
inc
outsl
shll
jg
mov
xorl
sbb
in
add
jae
out
dec
daa
or
fdivrl
sub
cs
and
addr16
cmp
pop
push
xchg
ss
jne
sbb
and
push
xchg
mov
jno
mov
rorl
xchg
cmc
cli
pop
fsubp
inc
pushf
pop
ret
lds
cmp
roll
les
and
lds
and
sarl
push
sti
or
sbb
lock
rcrl
int3
mov
pop
sahf
lea
xchg
es
cmc
jns
pop
scas
xor
mov
pop
lds
jmp
lock
add
les
and
pop
xchg
scas
sub
lcall
fists
int
xor
push
or
mov
daa
or
loopne
inc
and
xor
fsubrl
pop
ljmp
vpand
lret
xchg
sub
in
mov
or
sub
sbb
rcll
lret
push
sub
xchg
adc
fcomps
sahf
inc
or
int
repz
pop
addl
sarl
sub
or
ret
lds
shrb
sub
jnp
sub
popa
aad
inc
daa
push
fs
and
cmp
ret
aad
mov
into
fsub
in
addr16
fstp
push
mov
cmpsl
cld
lret
rcrl
add
in
sbb
xorl
lds
mov
sahf
lea
mov
aad
sbb
lds
push
lds
mov
sahf
lea
out
pop
frstor
xor
and
xchg
sub
and
fmull
cmp
cli
popf
call
mov
insl
pop
ret
jno
jae,pt
lds
shrb
mov
ror
sub
fwait
les
cmp
outsl
jo
cmp
outsl
jo
cmp
outsl
jo
cmp
outsl
jo
lds
and
lds
and
lds
and
lds
and
lds
ret
and
pusha
fstpl
pushaw
fldl
outsl
lods
sub
and
add
add
pop
sbb
fldl
fisttpl
mov
test
ret
cmp
outsl
lods
pop
pushaw
fldl
gs
ret
lds
and
or
pop
ret
lds
mov
lods
ret
pop
cmp
outsl
lods
sub
and
cmp
outsl
lods
stos
outsb
lods
inc
outsl
lods
inc
outsl
lods
inc
outsl
pop
fwait
scas
jmp
and
fisttpl
add
dec
out
cmp
lods
inc
outsl
lods
sub
mov
cwtl
mov
or
je
outsl
lods
inc
outsl
je
outsl
lods
stos
outsb
lods
inc
outsl
sub
popf
adc
int3
aam
xlat
hlt
les
and
loopne
add
shlb
ret
inc
ret
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
loop
sbb
lds
hlt
les
and
test
sbb
insb
inc
sarl
lds
or
movntq
pop
fcoms
ret
lds
ljmp
leave
aad
shrl
xchg
addl
fisttpll
pop
lds
fsub
and
cwtl
test
or
sbb
sbb
add
mov
mov
or
or
xlat
shll
adc
mov
cs
fistl
and
lods
add
bound
test
cwtl
cmp
adc
out
sbb
cmp
xadd
push
add
lds
push
loop
outsl
sarl
into
dec
sbb
in
inc
ret
test
jmp
adc
hlt
filds
test
ret
xchg
test
les
and
aaa
mov
and
inc
jne
cmc
fbld
mov
sub
and
mov
jno
mov
mov
inc
mov
pop
repz
das
imul
fcomi
setp
loopne
test
iret
nop
ljmp
push
lret
inc
aaa
cmp
or
out
sbb
cmovne
sbb
xchg
or
test
sbb
pop
lds
and
sbbb
add
push
add
lds
push
pop
cmp
fcmovnbe
dec
sbb
xor
int3
je
lea
xor
mov
jno
popa
cld
mov
les
test
sbb
mov
xchg
xchg
lret
test
les
fnstsw
mov
subl
add
adc
hlt
setnp
lds
dec
aaa
inc
cmpsl
add
xchg
sub
jp
les
mov
scas
rcrl
pop
repz
xor
sub
push
ret
lds
push
add
test
les
and
loope
and
lds
xchg
lods
or
inc
lds
ret
lds
mov
cmp
ret
mov
xchg
and
inc
sub
shl
les
sbb
addr16
sbb
or
adc
xchg
or
add
push
sbb
lds
and
xor
sub
sbb
and
inc
or
in
sbb
pop
lds
mov
push
mov
fwait
movsb
hlt
les
sbb
sbb
push
or
adc
mov
adcl
inc
cmp
hlt
fists
aad
inc
sti
push
ret
lds
add
shl
sbb
jno
mov
and
inc
push
push
pop
lds
pop
ret
lds
imul
outsb
inc
pop
aas
sub
sti
or
mov
adc
and
std
scas
or
inc
mov
ret
stos
in
lds
and
loope
and
lds
and
loopne
imul
test
and
cmpb
xor
jb
cltd
shrb
inc
cmp
hlt
fbld
lret
xchg
mov
xchg
adc
pop
push
in
add
out
out
lcall
ljmp
lahf
das
mov
ss
maxps
adc
stos
sarl
xchg
mov
imul
sub
cmp
ret
lds
arpl
cmpsb
daa
imulb
xchg
in
ljmp
insl
ret
xchg
xchg
cmpb
inc
nop
jp
out
mov
clc
andnps
clc
and
mov
lcall
scas
popf
and
lds
and
pop
pushf
and
adc
mov
jne
cmp
ret
add
in
std
out
fs
je,pt
lds
mov
ljmp
pop
repz
negl
jo
cmpsb
and
adc
mov
add
addl
cmpsl
scas
clc
sub
mov
or
insl
mov
lds
movsb
loope
inc
and
jg
decb
in
xchg
add
std
in
mov
cmc
adc
xchg
jmp
sbb
rcrl
lods
xlat
fsubs
inc
adc
xchg
push
xchg
mov
lcall
in
jb
addr16
mov
adc
xchg
fistl
xchg
fistl
xchg
adc
cmp
daa
lcall
pop
jle
push
into
and
dec
mov
mov
fstpt
mov
add
adc
out
fidivrs
push
into
and
lcall
add
test
add
cltd
mov
adc
xchg
fildl
adc
jle
push
into
and
js
jge
mulb
adc
pop
pop
jp
out
and
lcall
daa
lcall
fistl
adc
test
outsl
mov
mov
or
push
movsb
inc
aad
jle
xchg
shll
xchg
pop
xchg
adc
xor
daa
adc
sahf
dec
jo
mov
lea
add
je
xchg
adc
xchg
pushw
pop
or
pushf
xor
cmpsb
inc
jo
mov
ss
xchg
outsl
mov
and
outsb
cmpsl
out
fidivrs
out
xchg
or
jns
jg
add
sub
push
jo
dec
mov
cmpsl
nop
push
sti
add
lahf
adcl
fisubrl
jo
jmp
adc
out
pop
jle
mov
and
mov
pop
push
mov
cs
shll
add
pop
adc
aaa
repnz
clc
call
fstpt
rcll
fnclex
mov
aaa
jo
jo
jo
push
mov
mov
add
shll
add
pop
adc
inc
test
xchg
cmp
add
inc
lea
xchg
fistl
test
adc
les
add
fnclex
mov
fcmovnb
cli
jg
call
fistl
jo
sbb
test
jge
push
into
and
pop
ja
imul
in
mov
and
pop
psubw
loopne
cmp
aas
fildll
loopne
xchg
xchg
shll
pop
cmpsl
sbb
xchg
daa
movsl
sbb
add
fistl
in
inc
jbe
enter
rcrb
pop
nop
inc
pop
add
lcall
pop
imul
mulb
adc
xchg
jp
add
fistl
inc
or
fcomps
cld
dec
xchg
fistl
ljmp
stc
xchg
mov
mov
es
stos
outsb
mov
andl
in
stos
outsb
mov
adc
cmp
jmp
sti
call
and
jns
cmc
pushl
cmp
mov
movb
fwait
jne
or
lahf
mov
pop
in
mov
mov
enter
aam
outsl
jns
xchg
jb
sub
js
xchg
xchg
sbb
popf
fisttps
sub
mov
mov
pusha
faddl
push
pop
xor
mov
mov
testb
jb
push
dec
pop
xchg
push
jmp
and
inc
or
pop
scas
push
cmpsl
sbb
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
mov
and
mov
scas
inc
hlt
pop
test
cli
sbb
sbb
hlt
outsb
xor
cmp
jne
test
push
stc
mov
pop
outsl
dec
loopne
sbb
test
nop
out
lret
pop
xchg
add
sbb
bound
outsl
lods
sti
pop
jb
loop
call
ret
jl
loop
xchg
xchg
push
iret
int
and
scas
hlt
pop
outsl
enter
shlb
andl
xorl
pusha
outsl
lods
nop
imul
cmp
test
lret
push
push
inc
dec
pop
push
and
pop
outsl
int
mov
shrl
in
dec
test
mov
jbe
scas
lods
scas
mov
dec
mov
fldcw
fs
cmp
adc
adc
inc
cmc
pop
outsl
jo
ja
lods
fs
sarb
pop
jp
cmpsl
sbb
mov
mov
cmc
ret
jl
lret
int3
loop
js
addr16
cmpsb
add
lea
jno
inc
mov
dec
jl
mov
xchg
push
inc
add
mov
dec
test
cwtl
hlt
pop
outsl
int
or
rcrb
clc
inc
adc
fs
mov
movsl
test
inc
xchg
cmpsb
sbb
clc
mov
pop
inc
add
cmp
lcall
outsl
lods
push
ret
ja
hlt
ret
jl
lret
int3
loop
js
out
cli
lods
hlt
pop
loope
dec
jb
ret
add
andl
sbb
mov
pop
push
xlat
xlat
int3
in
rcrl
shl
and
and
enter
pusha
outsl
lods
or
push
push
aaa
mov
dec
lea
lods
hlt
shll
hlt
pop
outsl
scas
sub
jle
or
outsl
lods
arpl
push
jbe
or
int
lods
hlt
xor
popl
inc
jne
nop
lret
shlb
add
ret
push
inc
ret
mov
lods
and
pop
stos
cwtl
iret
mov
mov
sub
insb
cltd
sahf
sub
into
cmpsl
loop
jl
cmp
shlb
subl
pusha
std
lret
inc
test
push
in
sub
and
leave
and
mov
cmp
and
std
imul
sub
lods
std
in
mov
jle
mov
loope
pusha
int3
jmp
hlt
pop
mov
pop
or
arpl
hlt
pop
cltd
cmp
call
js
push
outsl
fldt
sbb
hlt
call
sbb
xor
push
dec
std
sbb
icebp
lea
nopl
hlt
pop
outsl
int
and
sbb
outsl
lods
hlt
aas
sub
xchg
push
inc
add
test
pop
pslld
pusha
int3
jmp
hlt
pop
pop
lret
mov
xchg
sub
shll
leave
outsl
or
lods
hlt
cmp
nop
hlt
pop
outsl
cwtl
iret
push
inc
repz
hlt
data16
xchg
subl
push
push
xchg
leave
cmpsl
jmp
test
cmc
test
sub
adc
dec
mov
dec
nop
xchg
push
jb
lods
movsb
loop
jl
cmp
testl
sbb
hlt
jle
sub
mov
inc
mov
fnstsw
in
outsl
lods
hlt
pop
out
pop
cmp
sub
pop
fs
test
mov
inc
lea
cmp
inc
test
and
hlt
pop
outsl
enter
fnstsw
push
jno
lcall
outsl
enter
int
in
out
and
dec
sub
ja
sbb
hlt
and
stos
hlt
pop
outsl
dec
ja
outsl
lods
hlt
lock
mov
pop
lahf
jg
mov
lods
lahf
icebp
lea
adc
sbb
or
cmc
jo
dec
mov
sarl
push
scas
stc
push
mov
mov
sub
add
outsl
or
sahf
push
cmpsb
mov
mov
sbb
hlt
popf
sbb
xchg
jl
push
mov
pop
outsl
mov
ret
pop
and
cmpsl
adc
dec
mov
dec
test
hlt
pop
cmp
in
jo
lds
push
push
jno
pusha
outsl
lods
or
sbb
sub
jg
mov
ds
fidivrs
push
test
and
jmp
jecxz
inc
jb
in
inc
in
vmovaps
test
pop
outsl
lods
lahf
test
jg
and
push
mov
fwait
lods
sbb
lods
hlt
clc
mov
shlb
mov
dec
cmc
shlb
pop
ret
test
xor
in
sti
test
sub
xchg
ja
lods
hlt
fisubs
imul
sbb
hlt
decl
pop
mov
mov
outsl
lods
hlt
mov
sbb
and
inc
hlt
pop
outsl
int
mov
enter
pop
hlt
pop
outsl
xlat
dec
gs
fimull
outsl
lods
hlt
mov
or
lds
pop
imul
and
push
inc
loopne
sbb
or
dec
test
jmp
and
ja
cmp
outsl
int3
or
inc
cli
dec
int3
xchg
jg
mov
int
out
ja
mov
or
push
pusha
imul
js
pop
sub
sbb
test
lahf
xor
hlt
mov
lret
inc
jbe
sti
stos
mov
xor
mov
cltd
jl
pop
pop
jmp
and
aam
jae
outsl
lods
hlt
fs
addr16
aam
lods
hlt
pop
sub
mov
jb
lods
std
in
mov
jle
mov
loope
pusha
int3
jmp
hlt
pop
mov
jecxz
and
push
hlt
pop
outsl
dec
dec
or
sub
xor
movb
outsl
lret
or
add
cmp
inc
xchg
push
push
xor
inc
add
loop,pn
out
jp
push
aad
pop
xor
dec
outsb
or
push
add
lock
sub
inc
pop
cltd
leave
pop
js
hlt
inc
ja
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
outsl
lods
hlt
pop
test
clc
pop
outsl
cmc
inc
push
push
inc
insb
popf
mov
sahf
out
pop
sbb
cmp
cmp
dec
mov
xchg
xor
call
mov
leave
sub
dec
fstp
sub
add
push
mov
sbb
xchg
mov
xchg
cmpsl
fidivs
mov
sbb
inc
pop
scas
inc
shll
fcomp
repnz
test
pop
sub
mov
cmp
jmp
cmpb
push
in
mov
lock
mov
xchg
cmpsl
xor
ss
xchg
sahf
nop
mov
movsb
data16
lahf
cmp
adc
add
fadd
mov
xchg
xlat
subb
les
push
pop
jb
xchg
cmp
pop
iret
jo
sub
popa
xchg
xor
insb
repz
pushl
fwait
xor
fwait
sbb
ljmp
daa
or
mov
jo
pop
lods
and
into
jp
mov
jecxz
stc
cmpsb
jne
xchg
repnz
aam
inc
dec
xchg
insb
lock
xchg
xchg
xchg
add
fnstenv
leave
scas
loope
shr
pop
iret
out
aad
stos
sub
rol
cmpsl
mov
dec
test
and
pop
fistl
outsl
inc
jl
int
push
xchg
jbe
mov
dec
dec
push
dec
push
cmc
mov
fisubs
adc
fnstenv
loope
and
push
sti
stos
or
xchg
hlt
data16
push
pop
mov
test
iret
pop
clc
and
push
decb
xchg
sahf
test
out
push
lods
jae
mov
add
inc
popf
arpl
cmp
add
cmc
das
push
sub
add
fadds
add
mov
lock
and
pop
ljmp
and
cmp
shrl
lea
ljmp
mov
mov
xor
cld
bound
leave
jne
add
jne
sub
ror
loopne
ds
ds
shr
pop
mov
aam
adc
aas
sub
sahf
xchg
mov
add
jae
dec
loop
and
cmp
xchg
xchg
loope
jecxz
push
adc
pop
in
loope
negl
dec
ficoml
inc
mov
push
sub
sbb
xor
and
test
xor
cmpsb
jl
push
ljmp
inc
loopne
jo
dec
add
scas
pusha
inc
ret
mov
dec
jo
push
mov
stos
lods
xorb
cld
xor
int3
jle
cmp
clc
fcmovne
bound
cwtl
insb
out
push
les
sub
pop
icebp
fwait
sbb
push
leave
subb
dec
je
lea
adc
mov
scas
inc
pop
and
adc
push
adc
ret
mov
inc
pop
ss
aas
lea
pushf
or
dec
je
aas
pushf
xchg
pushl
push
pop
mov
push
xchg
mov
or
ret
out
leave
inc
push
push
dec
je
stc
xchg
mov
xor
xor
cmp
push
testb
leave
pushf
pushl
push
push
dec
je
adc
ret
adc
xchg
fildl
sarb
jae
adc
jmp
push
dec
je
cmpsl
xor
mov
and
fdivrs
pusha
push
fs
jo
fwait
dec
xor
ret
mov
mov
std
mov
jo
loopne
aad
pop
push
das
in
dec
outsb
scas
xor
dec
out
ds
aam
std
filds
sar
mov
mov
mov
xchg
jbe
jnp
sub
jmp
push
lock
imul
jmp
push
lret
aaa
shl
and
mov
pop
ret
adc
or
adc
int3
xlat
and
pop
in
int
mov
cmp
adc
pop
loopne
jne
fists
xchg
aam
inc
or
adc
ljmp
std
out
adc
xor
or
ret
aad
mov
adc
and
add
and
cmp
testb
and
sbb
add
mov
jae
ret
mull
add
mov
loopne
aad
jae
ret
and
add
and
movsl
dec
inc
mov
ret
lods
push
je
inc
dec
sub
mov
ret
clc
addr16
ret
and
lods
imul
lds
loopne
loop
imul
adcl
lea
mov
out
add
or
aad
rorb
push
fsts
outsb
addb
pushl
lahf
rcrb
inc
mov
jbe
fwait
sub
fbstp
cmp
or
clc
pop
adc
dec
clc
push
sbb
cld
and
je
daa
push
mov
addr16
imul
fldl
push
inc
popl
or
adc
in
rcll
adc
push
push
xlat
out
in
adc
shrl
and
push
popf
sub
loopne
push
xchg
lods
data16
and
sbb
sub
jge
ret
addr16
fisubl
repnz
pop
inc
push
pop
xor
das
icebp
aaa
imul
lret
andb
push
dec
je
adc
push
lods
mov
mov
mov
add
mov
xchg
pop
xor
fs
cld
js
leave
sub
adc
mov
rolb
nop
jle
mov
pop
push
imul
sbb
adc
test
imul
push
pop
add
jnp
stos
push
notb
xchg
lret
jge
mov
sbb
lahf
std
lea
jp
push
adc
xor
sahf
adc
jb
pop
jecxz
insb
ljmp
cmpsl
movsl
sti
add
add
push
xor
inc
push
dec
je
fisubl
out
push
mov
lret
inc
mov
mov
cmc
test
insl
gs
iret
shrl
roll
or
in
mov
sarb
out
pop
insb
pushf
sahf
dec
ret
push
adc
mov
push
pop
popf
push
insb
and
bound
shr
jp
ret
add
cwtl
lret
shrb
stos
xlat
mov
push
pop
nop
sub
pop
enter
adc
int
rorl
mov
dec
adc
mov
push
mov
jb
adc
sti
jg
sub
or
adc
lea
xlat
fs
mov
mov
push
popl
mov
movsb
jp
and
movsb
ret
jb
push
pop
mov
sahf
es
jo
negl
inc
ret
loop
mov
pop
je
mov
out
hlt
xor
idivb
lods
cmc
or
push
dec
jo
mov
bound
gs
aaa
movsb
outsb
dec
popa
sbbl
push
mov
fucomip
ja
add
dec
shlb
sub
inc
push
mov
sbb
ljmp
mov
xor
mov
leave
xchg
out
inc
mov
mov
sarb
adc
mov
aam
pop
imul
jnp
jb
in
push
cmpl
cld
push
sbb
push
inc
mov
xchg
test
andl
xchg
inc
call
jp
outsl
shl
jp
cmp
mov
scas
dec
fiadds
push
cli
int3
adc
jne
lcall
mov
sub
cmp
cli
addr16
inc
cmp
jge
bound
leave
sbb
mov
adc
adc
fidivrl
cli
jbe
xor
jnp
orb
pop
ja
sbb
inc
xor
stc
jb
push
mov
out
repnz
sbb
mov
data16
and
cmp
je
test
mov
sarb
aad
movsl
inc
mov
out
sub
in
or
xlat
pop
stos
fsub
rcll
mov
jne
test
jecxz
pusha
in
adc
or
mov
iret
mov
mov
mov
dec
sub
push
out
jecxz
add
dec
add
movsb
mov
jbe
jg
push
xchg
lods
cmc
repz
dec
xor
int
push
push
xor
lcall
ds
jo
push
jb
cli
xchg
push
fldcw
stos
mov
jle
sahf
lret
nop
rorl
les
outsb
mov
sub
out
pop
mov
jno
pop
and
fsubrs
out
xor
push
jae
in
pop
popf
dec
jae
rcr
wbinvd
xchg
jnp
cli
pop
and
sahf
clc
fstpt
xor
xor
negl
cmpsb
mov
aam
ss
pop
lret
mov
adc
xchg
aad
mov
sbb
shll
test
movsb
loope
jmp
popa
dec
xorb
enter
mov
xchg
aam
js
lock
xor
xor
cmpsb
or
lret
aam
mov
rclb
pushf
je
pop
push
pop
int3
xchg
mov
movsl
ss
mov
cmp
inc
cmp
dec
mov
ja
adcb
mov
adc
or
sbb
cltd
aad
aad
jp
push
cmp
xor
mov
add
mov
jnp
push
sub
mov
mov
pushf
iret
push
xorl
inc
addr16
mov
in
and
xor
sbb
push
xchg
in
add
mov
mov
xor
xor
movsb
daa
fsubr
dec
fcompl
sti
push
ja
ret
ss
mov
mov
sbb
int3
mov
push
push
xlat
pop
mov
mov
mov
inc
cmp
andb
mov
pop
push
ss
popa
mov
push
mov
clc
imul
xor
add
lock
push
out
hlt
in
jno
jae
xor
push
test
mov
mov
dec
iret
add
mov
lahf
lock
movsl
or
adc
add
xor
push
push
pop
stos
push
mov
movsl
lods
rcl
in
fcmove
iret
xor
sbb
mov
lea
or
mov
xchg
add
lods
mov
fsubs
out
dec
mov
sub
andb
or
cmc
cmpsl
roll
adc
je
pop
jle
insb
movsl
test
icebp
add
loop
jle
inc
mov
loopne
mov
dec
xlat
mov
mov
jecxz
ret
clc
gs
hlt
jge
loope
dec
adc
or
in
andb
push
fwait
in
repz
jg
ljmp
imul
ja
xchg
push
inc
popa
bound
xchg
and
inc
leave
sbb
lret
pop
lcall
sbb
xor
jge
sbb
push
and
push
dec
jns
leave
cmp
jmp
pushl
adc
mull
lds
xor
sbb
insb
ret
pop
jecxz
push
mov
gs
cmp
adc
rcll
push
shlb
dec
fists
xor
mov
and
in
repnz
dec
pop
jl
push
add
sub
aaa
or
sbb
push
ds
sub
inc
jle
jae
add
out
xchg
sub
fsubs
andl
es
clc
jb
ret
dec
rcll
addr16
push
and
std
movsl
pop
jl
xor
cmpsb
sbbl
leave
cltd
adc
or
jg
mov
insb
fistpll
and
adc
xlat
mov
stos
mov
push
pop
icebp
or
pushf
out
int
inc
cmp
dec
sub
mov
pop
ljmp
scas
and
push
fildll
push
inc
sub
sub
mov
test
xchg
and
xor
xor
mov
movsl
das
aad
dec
lds
mov
cmp
push
repnz
inc
daa
mov
pop
cwtl
pop
pop
cmp
std
outsl
pop
stc
lret
shr
inc
jmp
int3
inc
add
enter
movsl
dec
push
mov
aaa
jg
mov
cs
sahf
jno
mov
frstor
inc
les
pop
ja
out
mov
fcoms
mov
sub
std
insl
sub
out
fcoms
inc
dec
add
xchg
adc
jl
lods
sbb
mov
fisubl
inc
xchg
push
adc
xlat
mov
loopne
pop
adc
mov
mov
push
addr16
jno
movl
into
movsb
sub
roll
pop
test
and
adc
mov
mov
dec
mov
fidivs
sbb
push
mov
mov
jge
xlat
push
dec
outsb
hlt
or
punpckhbw
int
in
les
mov
pop
mov
mov
and
inc
adc
inc
ret
roll
insb
in
rorl
xchg
nop
es
cltd
add
jg
push
leave
mov
cld
outsl
pop
dec
pop
add
mov
and
cmp
dec
in
cwtl
mov
out
repnz
sbb
and
incb
sbb
sbbb
outsl
out
mov
enter
sbb
out
dec
fdecstp
test
mov
push
sbb
cld
jmp
dec
jp
pop
std
xchg
shlb
aam
dec
ret
ds
fwait
sbbl
lods
push
sbb
scas
mull
jne
inc
mov
fidivl
push
sahf
jno
jnp
int
ss
sbb
leave
fdivrl
inc
jo
push
push
xchg
adc
out
mov
add
nop
js
in
sbb
mov
lods
sbb
cwtl
push
test
test
fs
out
dec
or
out
pop
mov
and
pop
movsl
stos
orl
negb
out
sub
or
xchg
xlat
dec
xor
cmp
dec
pushf
push
mov
xchg
mov
inc
jae
stc
jo
insl
shrb
xor
cltd
into
jg
filds
or
pop
mov
addr16
loop
sbb
dec
in
std
lret
stc
cmpsb
and
es
pushf
dec
out
orl
shrl
das
pop
das
jno
and
popa
out
and
cmp
jmp
dec
jne
add
ret
pop
adc
inc
nop
dec
push
loope
aaa
sti
movsl
std
pop
xchg
xorb
test
add
addl
mov
inc
ret
xchg
and
dec
mov
out
lods
fstpt
ss
into
pop
and
lahf
ret
xor
xor
loop
lock
sahf
popa
cmp
pop
and
cs
jmp
loopne
add
shll
jae
pop
ljmp
nop
rcl
dec
js
jmp
rorb
push
daa
lods
add
sahf
outsb
cmp
jg
int3
jo
push
movsl
sub
stos
jge
dec
insb
in
cmpb
ja
dec
sub
and
pop
jg
repz
jl
sarl
push
in
mov
lcall
out
xchg
and
pop
icebp
jb
inc
jle
pop
xchg
xchg
mov
js
pop
mov
in
push
stos
mov
xchg
xchg
bound
push
cwtl
cmp
cmp
nop
lods
rorl
call
out
and
pushf
sub
roll
xchg
xor
and
xchg
or
mov
mov
push
rorl
jb
push
dec
hlt
add
sub
push
iret
xlat
cli
push
add
sbb
leave
pop
mov
jmp
popf
movsb
add
adc
cwtl
bound
sbb
xor
jnp
fs
xor
test
cmpsl
outsb
sbb
mov
out
sbb
fs
dec
jmp
xchg
rorl
add
test
xchg
fdivl
loop
dec
je
mov
movsb
and
sub
movsb
adc
inc
jnp
push
push
xor
lahf
mov
sub
sbb
decl
jae
dec
mov
mov
mov
pop
mov
out
inc
jmp
popa
rclb
pop
or
xchg
enter
mov
rolb
xchg
pusha
inc
negl
lcall
add
mov
adc
push
clc
gs
adc
and
adcl
movsb
lds
push
cmpsb
mov
pop
enter
call
xor
test
dec
fadd
outsb
cmp
lcall
jecxz
and
sbb
inc
push
in
jl
mov
dec
rclb
push
jae
leave
lds
sahf
jb
je
out
mov
popf
mov
arpl
out
lret
jl
aas
cmp
out
rclb
add
movsl
jecxz
in
aas
shr
xlat
lret
push
add
dec
fld
sarb
xor
test
imul
ds
addr16
fbstp
int
pusha
scas
mov
out
and
sarb
xchg
pop
aad
xor
not
aad
std
add
mov
ja
iret
popa
repz
dec
in
std
xor
pop
mov
scas
cmp
jg
xchg
jp,pn
fstpt
push
push
nop
lods
jo
pop
fldcw
push
in
popa
push
mov
jns
push
ja
push
ret
int3
jp
add
and
or
decl
mov
and
inc
ret
pop
sbb
movsb
mov
jle
je
inc
ja
ss
mov
loop
int3
es
repz
pop
out
lret
divl
incb
mov
push
sbb
pop
out
cld
repz
xor
jnp
mov
jns
rorb
push
lahf
data16
push
sbb
out
cld
in
sub
icebp
jecxz
jno
fildll
sub
push
loope
push
iret
inc
lods
test
sub
push
xor
jae,pt
fildl
add
add
sub
ds
imul
ss
lret
cli
or
loope
stos
stc
jns
loop
nop
cmp
mov
dec
call
loopne
std
ja
loope
ljmp
ret
jne
or
gs
xor
into
xor
or
mov
mov
push
mov
xchg
ljmp
cwtl
dec
and
fidivrs
fldcw
test
xchg
sub
pop
jo
popa
jns
jno
es
aad
mov
in
or
insl
sbb
pop
xchg
mov
hlt
cltd
xchg
les
and
cmp
loopne
test
aaa
jae
fucom
mov
xor
mov
xchg
jecxz
aaa
add
cwtl
cmp
inc
sahf
inc
jecxz
imulb
adcl
jl
add
sub
shll
xchg
xchg
insb
push
add
sub
or
xorb
xchg
xor
xorb
in
in
and
add
aaa
movsb
or
xchg
lahf
push
dec
movsb
stos
sub
pop
lret
fildll
cltd
sub
push
jecxz
jne
ljmp
aaa
adc
jg
jns
push
add
aaa
and
inc
ljmp
int
adc
rorl
fsubrp
add
push
xchg
sbb
shrb
push
jb
jns
inc
xor
rol
mov
add
and
xlat
popa
out
and
das
int
jge
lods
cmp
aad
xchg
aam
leave
lret
mov
es
in
int3
inc
mov
imul
add
jne
pop
jbe
sahf
xor
xchg
fsubr
lcall
jnp
xor
push
and
filds
nop
xchg
aaa
aaa
fwait
ss
sub
inc
adc
repnz
push
cld
fimull
sub
andl
cli
cwtl
sub
in
dec
inc
xchg
fndisi(8087
xlat
icebp
fidivs
icebp
fsubrp
adc
cmp
xchg
dec
pop
out
out
sbb
xor
int
in
aam
mov
jae
faddl
mov
fdivr
mov
lods
lret
leave
mov
and
xchg
xlat
icebp
ficoms
lods
xchg
jb
jo
xchg
xlat
icebp
ficomps
inc
int
in
aam
adc
jmp
mov
lahf
aas
jne
sub
sbb
jp
call
mov
pop
xchg
push
pusha
pop
dec
mov
xlat
adc
mov
daa
subl
lret
sbb
jne
cltd
or
sahf
xlat
icebp
fidivrs
aas
pop
xchg
push
pop
je
negl
adc
ret
jo
cmpsl
aam
fimuls
bound
jge
xor
push
mov
xor
mov
icebp
add
dec
lock
aam
ficoms
div
out
adc
and
lds
mov
xchg
cmpsl
aam
fiadds
pop
insl
sbb
das
fistpll
pop
inc
sbb
cmpb
pop
mov
outsl
pop
xor
lret
inc
pop
or
and
pop
push
ss
dec
push
lret
vandps
in
int3
negb
out
lahf
mov
add
xor
pop
mov
sbbl
shr
shll
mov
mov
sbb
jbe
add
pop
pop
pop
icebp
jle
daa
inc
insl
mov
jg
jbe
inc
jo
xchg
int
and
mov
dec
jbe
scas
or
cmc
cmpsb
leave
das
loop
cmpsb
dec
lahf
lcall
xor
repz
pushf
cmp
mov
call
jns
jbe
pop
scas
mov
mov
inc
out
call
roll
push
jl
xchg
jecxz
mov
ret
cmc
ficompl
dec
jecxz
mov
xlat
mov
repz
sub
xchg
adc
out
int3
dec
or
mov
js
cmc
insl
push
jmp
adc
lcall
mov
push
add
mov
xchg
fidivl
fs
inc
cmp
cwtl
cmc
jb
xor
psubsw
ds
daa
push
push
pop
cld
mov
or
sar
jae
add
fstpl
mov
sbb
in
add
ljmp
or
repnz
sti
test
xlat
loop
sub
xchg
adc
into
movsl
popa
fists
xor
mov
leave
addb
dec
rcrl
mov
out
incl
mov
jg
pop
repnz
sbbb
inc
outsb
xlat
xchg
test
pop
aam
in
roll
pushf
dec
cmp
pop
push
dec
ja
and
xor
mov
push
jp
xlat
sbb
fnstcw
adc
mov
ret
pop
repnz
fs
notb
rolb
inc
and
fdivl
js
jg
xor
addr16
iret
mov
push
mov
mov
sti
dec
or
enter
scas
xchg
xor
insl
sbb
aas
xor
sbb
sbb
gs
dec
ds
mov
xor
lods
lret
xlat
mov
mov
xchg
sub
xor
mov
inc
out
jg
scas
mov
shlb
cmp
sub
shl
fwait
or
int3
sarb
js
rclb
movsb
dec
cmp
xorb
test
mov
cwtl
and
sbb
cmp
stc
or
int3
popa
push
xor
int
lahf
in
dec
shlb
adc
stos
sub
xchg
jmp
lret
jmp
out
and
xchg
mov
leave
sbb
rorb
out
inc
push
jae
or
popl
aad
mov
popa
add
out
mov
mov
lods
cmpsl
popf
orb
sub
mov
arpl
mov
hlt
ret
pop
jp
fldenv
popa
sbb
sub
push
push
aas
shll
lret
jnp
adc
add
iret
in
stc
imul
inc
and
aam
and
in
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
jns
sbb
movsb
insb
sub
jns
jmp
int
mov
jle
or
les
cld
in
hlt
mov
xchg
xor
movsb
leave
sub
lods
cmp
int
mov
jle
or
les
icebp
ss
mov
or
les
dec
sbb
hlt
mov
or
les
mov
int
mov
jg
or
les
xchg
xor
hlt
mov
or
les
pop
lods
mov
mov
or
lea
icebp
and
stc
mov
add
sbb
xchg
mov
in
loopne
inc
dec
xor
push
pop
lods
add
push
sahf
and
or
rol
pop
sub
mov
push
or
lods
fldl
xchg
sub
xorb
aam
je
add
iret
pusha
shll
mov
dec
jae
fadds
jp
shll
dec
adc
or
movl
cmp
jmp
adc
roll
jecxz
mov
xchg
pop
xchg
jp
sbb
xor
test
inc
subb
arpl
gs
mov
aad
mov
push
pop
jg
test
js
add
lret
nop
jg
inc
in
xor
jmp
mov
and
cmp
ja
adc
fstpt
pop
push
rcr
jns
and
loopne
mov
clc
push
scas
fsubs
mov
nop
adc
out
dec
inc
jl
and
pop
mov
aas
ret
outsb
sahf
shrb
fs
cs
lea
or
mov
lods
mov
scas
int3
mov
add
or
or
out
adc
mov
jp
cmc
push
rorb
xchg
push
arpl
inc
push
dec
rcll
outsb
loope
insb
xor
std
inc
dec
int
push
mov
fists
addl
fdivrs
hlt
mov
je
cmp
popa
es
xor
pop
mov
daa
in
test
cmp
stos
bnd
adc
sub
pop
xor
into
fbld
je
sbb
push
adc
fildll
scas
cltd
pusha
xor
push
outsb
outsl
leave
xchg
arpl
lock
aas
mov
xchg
jmp
sbb
clc
jb
popa
test
cmpsl
movsl
push
sub
test
xor
jbe
aaa
fwait
xchg
ror
lcall
pop
xor
popf
in
sub
jns
loope
xor
adc
cmpsb
cmp
xor
outsl
jb
mov
gs
xor
and
pop
xchg
aas
cli
adc
ss
sub
jmp
pushl
jo
int
data16
jns
and
test
dec
mov
rclb
jnp
adc
mov
and
sti
or
clc
cmp
test
insl
sbb
fimuls
xor
cwtl
cvtps2pi
and
mov
xor
icebp
mov
jns
mov
pop
sub
sub
dec
add
sti
or
pushf
adc
clc
push
push
data16
sbb
jmp
int3
pop
movsb
fiadds
hlt
xchg
pop
mov
cli
mov
xchg
jp
and
and
push
mov
popa
or
jno
cmp
cli
push
inc
sub
orl
mov
movb
lahf
cmp
in
and
stos
jne
mov
mov
inc
fs
cmp
inc
std
out
sti
fcmovb
sti
filds
xor
icebp
ljmp
testl
popf
jne
push
sbb
push
pop
push
repnz
jl
jb
test
aas
pop
and
mov
call
mov
sub
ds
arpl
imul
pop
nop
outsb
outsl
outsl
inc
loope
ds
xor
aaa
int3
jbe
jl
inc
lahf
adc
stos
jl
sbb
cs
cmp
aad
call
fimull
pop
cltd
mov
pop
ret
je
push
jmp
mov
iret
cmpsb
out
repz
xchg
xchg
bound
sub
pushl
adc
mov
jl
jg
inc
jae
xchg
jne
jmp
stos
ffree
loop
out
mov
sub
lock
test
mov
cwtl
fcomps
add
mov
lret
loopne
xchg
testb
in
jp
pop
das
cmp
pop
sbb
and
jo
popa
lods
sbb
adc
test
hlt
ljmp
jp
sbb
jnp
pop
ss
push
repz
jae
jbe
jo
push
mov
outsl
adc
pop
mov
lahf
push
fistps
mov
add
sub
movsb
decb
pop
outsb
sti
mov
push
or
ds
fldl
loop
fildll
out
or
fcomps
out
mov
push
ficoms
jg
mov
push
sub
lret
daa
sarl
inc
xchg
pop
push
jo
jl
pushf
mov
mov
sbb
pop
cs
jae
add
jo
or
popa
jmp
jmp
int3
push
ljmp
fcomp
cmp
jecxz
add
cmp
push
pop
loopne
aam
lret
sub
mov
sub
js
jb
sti
int3
mov
in
and
inc
inc
xchg
add
fistl
pop
jb
out
cmp
mov
popf
imul
mov
rcrl
push
icebp
mov
out
sahf
adc
hlt
sbb
add
inc
daa
and
enter
jmp
xorb
jmp
and
pop
lcall
test
scas
jp
mov
test
jmp
jge
addl
lods
xor
in
pusha
jp
data16
add
xor
sub
inc
pop
jge
shlb
cmpsl
inc
cwtl
imul
xor
ja
dec
fidivs
sbb
sub
jae
in
adc
ficompl
in
or
mov
fstl
mov
xchg
sbb
push
mov
jnp
pop
mov
fwait
in
xchg
stc
jp
mov
pop
xchg
fisubrs
es
and
inc
fildl
pop
arpl
pop
jle
in
std
inc
xchg
das
mov
and
mov
aaa
ret
movsl
popf
into
inc
sbb
push
pop
in
loope
js
ss
jb
test
rclb
push
ret
stc
leave
pop
mov
xor
xor
outsl
mov
inc
dec
jae
in
add
movsb
cmpsb
test
inc
jo
call
inc
out
loopne
je
scas
or
mov
fdivrs
dec
push
ds
imul
ljmp
mov
insl
sub
jns
push
movsl
jg
ja
sub
shll
xchg
leave
adc
int
xchg
pop
orl
popa
xchg
cld
xor
xor
push
add
and
loop
push
jns
dec
test
jecxz
aad
sbb
add
xchg
jmp
fisubrs
js
pop
in
aam
sbb
idiv
fwait
jns
hlt
adc
mov
cmpsl
xchg
insb
push
xchg
jns
and
and
es
ror
lods
popa
test
loop
jl
mov
pushf
sbb
inc
dec
mov
xor
pushfw
fbld
fdivl
and
xchg
push
dec
mov
fimull
jl
sbb
fwait
sub
in
cmp
pop
shll
xchg
or
hlt
lret
pop
xchg
addr16
dec
xchg
pop
adc
sarb
mulb
sub
aaa
inc
cmp
push
adc
gs
add
movsb
lea
hlt
sub
adc
fwait
dec
pop
pop
ja
mov
inc
repz
inc
sub
lds
pop
int
mov
and
loope
dec
mov
sub
adc
in
jns
push
shll
rorb
in
fisubrs
cmp
psubusb
je
dec
mov
outsl
cld
hlt
fcmovne
push
fiadds
call
adc
jecxz
jbe
test
push
aaa
hlt
movsb
sub
cmp
xlat
lock
xor
in
cmc
adc
sub
mov
outsb
test
test
jb
jp
icebp
mov
mov
cmp
mov
dec
aas
addr16
and
adc
dec
mov
pop
push
and
pop
fdivr
loope
sbb
les
jle
or
popf
inc
cmp
neg
shr
and
loop
cs
push
add
dec
mov
lret
je
jns
push
insb
fwait
sbbb
aaa
or
movl
test
pusha
mov
loope
icebp
in
stos
mov
inc
jmp
or
sub
mov
jmp
sub
push
cmc
xchg
cmc
mov
rcr
jns
mov
mov
pop
inc
outsb
cmc
test
xor
imul
pop
push
xor
mov
mov
push
dec
dec
sbb
cmpsl
sbb
scas
in
js
xchg
adc
mov
rcrl
push
call
sbb
dec
fsub
xchg
mov
cmp
jne
push
push
lods
cmpsl
sub
rol
leave
push
in
iret
mov
cltd
sti
cmp
mov
cltd
pop
push
xchg
and
inc
push
sbb
into
je
outsb
insl
adc
test
sahf
lock
jbe
mov
add
scas
mov
sbbb
ror
xor
adc
ret
arpl
xchg
jns
call
add
mov
addb
je
mov
jmp
cmp
outsb
in
repz
mov
ljmp
or
imull
add
or
mov
imul
sbb
mov
or
pop
clc
addr16
pop
and
sub
xor
ret
cld
shlb
repnz
push
inc
aam
pop
ds
sbb
addl
sbb
push
xchg
mov
mov
xor
pop
lahf
pushl
and
xchg
and
insb
xchg
jns
sub
fidivrs
int3
jne
sbb
stos
mov
push
xor
dec
inc
movsl
mov
xchg
sti
shlb
cmp
sub
xchg
mov
xchg
cli
lea
sbb
icebp
jecxz
lcall
cmp
aaa
pop
and
push
icebp
dec
cmp
xor
test
sub
push
ret
aam
dec
mov
mov
mov
mov
inc
pushf
sbb
add
leave
shrb
adcb
aad
repz
mov
fisubrl
es
adc
int
test
nop
stos
mov
shrl
mov
cmc
and
ja
mov
jo
iret
inc
js
pop
push
imul
and
fisubl
loopne
jno
es
dec
or
lds
lds
stos
insb
rcrb
jp
lret
sbb
out
gs
cmp
outsl
jbe
gs
repz
mov
jg
push
push
in
insl
rcrl
sub
mov
pop
insl
hlt
mov
test
inc
fiadds
popa
nop
fs
mov
adc
lods
aad
aam
notl
movsb
inc
and
dec
dec
sahf
out
jns
stos
faddl
ja
mov
arpl
call
js
iret
scas
mov
js
push
nop
sbb
dec
jnp
xchg
inc
mov
lahf
shl
sbbl
jmp
mov
cmp
inc
or
push
mov
mov
cmp
xor
sarl
les
or
jecxz
call
out
push
fildll
rcrl
incl
test
sahf
add
pop
push
movsb
aas
icebp
jnp
stos
dec
pop
lea
mov
push
xorb
dec
iret
add
enter
push
outsb
jbe
insb
and
jle
sbb
call
imul
fisttpl
jo
pushf
das
fstpl
adc
stos
and
adc
push
mov
scas
jmp
or
ret
fcomi
out
inc
dec
sbb
mov
aad
lds
fdivp
add
dec
fisubrs
mov
or
ret
aam
adc
push
push
in
daa
stc
dec
and
js
cs
out
pushf
imul
and
mov
xchg
stos
mov
outsb
mov
xlat
lds
pop
jge
xchg
cmovle
lret
sub
sbb
or
outsl
jl
xor
push
sub
sbb
and
jno
fs
inc
add
ja
pusha
out
lahf
aam
out
incb
mov
fdivrs
adc
call
shrb
and
nop
jge
sahf
ror
mov
and
cltd
popl
add
dec
lock
cmp
mov
add
ret
sub
lods
scas
xorl
das
ljmp
mov
bound
call
out
push
pop
sub
filds
push
jns
and
xor
mov
outsb
loope
int
and
fadd
outsl
icebp
mov
aad
in
pop
add
sub
mul
insl
int3
add
jl
fcompl
fwait
stc
rorl
mov
outsl
call
movsl
test
sbb
sub
pop
sti
bound
scas
push
pcmpgtd
insl
pop
es
mov
cli
clc
bound
js
cmpsl
sub
std
dec
or
andb
lcall
mov
gs
xchg
fwait
mov
xlat
add
xchg
or
in
loop
jg
push
shrl
and
pop
xlat
jmp
or
andl
fcmovnu
xchg
xor
sbb
pop
xchg
push
mov
loopne
pushf
dec
adc
out
jecxz
adc
sub
int3
fs
imul
xchg
shrb
add
push
rcrb
mov
inc
xchg
or
outsl
into
pop
push
inc
mov
adc
jno
cmp
pop
pop
cmpsb
xchg
xchg
add
sti
pop
hlt
xor
inc
data16
out
iret
mov
negb
outsb
inc
pop
pop
loope
push
enter
inc
and
cmp
mov
rcll
jnp
stos
rorl
das
lahf
xchg
or
pop
les
out
pushl
nop
mov
sti
fnsave
out
pop
arpl
dec
or
ficoml
add
cmp
inc
fstp
int3
wrmsr
pushf
mov
inc
mov
rep
mov
out
add
repz
faddl
mov
and
xlat
jb
mov
test
mov
mov
pop
lret
push
sbb
call
sub
and
js
or
push
mov
lods
mov
inc
sub
pop
ja
lock
xchg
dec
fcompl
data16
inc
push
ja
test
addr16
dec
mov
jmp
bound
jno
push
loopne
adc
adc
inc
sbb
push
js
cmpsb
push
sub
movsb
test
mov
or
gs
xchg
decl
push
add
and
in
loop
jg
and
jnp
in
mov
pop
negl
fisttpl
bound
sahf
dec
addr16
mov
arpl
push
pop
setb
or
cmp
lods
pop
cmp
cmc
das
lahf
pop
incl
cmc
ss
popf
dec
test
mov
cmc
or
data16
and
jnp
mov
adc
cld
lods
inc
sub
pop
add
rol
hlt
cld
push
ja
pop
mov
sahf
add
pop
cmp
hlt
fiaddl
imul
inc
mov
and
aam
lahf
and
pop
or
fwait
mov
imul
aaa
ret
sarb
stc
sub
ficomps
in
outsl
push
mov
in
popa
repnz
fcomps
pop
cmp
and
pop
jecxz
xor
test
adc
adc
in
lds
push
cs
out
pushf
imul
and
mov
xchg
stos
mov
outsb
mov
xlat
lds
pop
jge
xchg
cmovb
fstps
lret
sub
mov
ftst
adc
add
out
cwtl
test
adc
icebp
popa
adc
adc
xor
add
jmp
or
mov
mov
or
std
add
xchg
mov
fisubrs
sub
es
inc
leave
out
cld
sbb
std
inc
cmp
aaa
mov
in
in
pop
cmp
mov
mov
mov
xor
dec
sarb
adc
cmp
pop
insl
les
lock
insl
xchg
es
push
sub
pop
jmp
dec
jp
mov
sbb
mov
mov
inc
outsb
mov
out
lock
test
push
jl
int3
or
sub
xchg
pusha
popf
jge
mov
push
mov
push
adc
mov
jge
jae
and
jmp
and
idivb
xchg
shrb
push
cmpsl
rol
push
mov
mov
cmpsl
or
xchg
xor
cwtl
rol
and
fisttpll
xchg
and
dec
xchg
divl
outsb
and
xor
xchg
push
pushf
imul
push
sbb
aam
stc
adc
scas
decb
mov
punpckhwd
lret
pop
sahf
sti
pop
mov
cmpsb
lret
adc
inc
cs
inc
cmp
sub
mull
pop
lds
push
lds
xchg
out
mov
push
pop
push
dec
fldcw
pop
pop
cmp
shrl
xor
add
cmp
andl
mov
cs
scas
cltd
mov
fidivrs
stos
lods
pushl
pop
inc
test
test
enter
lret
mov
push
mov
or
fadds
push
dec
movsl
dec
aas
in
xor
std
enter
rcrl
add
test
jae
dec
inc
flds
out
fildll
call
jle
js
pusha
mov
loope
jbe
mov
push
test
imul
sub
push
jns
ja
mov
xor
sbb
pusha
insb
cld
mov
push
or
push
shr
mov
je
mov
in
sub
popa
and
enter
iret
cwtl
pop
stos
inc
xchg
shlb
stos
pop
xchg
fcomps
sub
mov
and
jmp
cmp
cmpsl
mov
mov
pushf
and
mov
or
std
xchg
mov
aaa
out
das
das
int
stc
jp
ret
daa
xor
lods
in
adc
push
in
imul
mul
push
adc
mov
fdivl
xor
push
fidivrl
shlb
pop
lret
mov
sbb
jns
add
jp
xchg
hlt
enter
pop
into
arpl
cld
sub
mov
mov
cmpsb
or
insl
sti
stos
leave
imul
or
jae
je
jae
shrb
pop
jns
sub
xchg
mov
lea
testl
xor
jns
jb
jbe
add
pop
mov
addb
cltd
dec
jb
inc
push
fcoms
cltd
lods
mov
mov
je
inc
inc
cli
mov
lds
iret
mov
or
push
mov
test
inc
int3
xchg
sahf
add
mov
xor
fnstsw
jns
cli
sub
dec
xor
ja
add
xchg
rorl
scas
decl
mov
inc
or
push
mov
pop
push
push
lret
lahf
cmpsl
ficoml
clc
xchg
jge
fnstsw
clc
repnz
sub
sbb
push
imul
or
and
cltd
cwtl
daa
adc
inc
jl
loope
loopne
out
sub
or
mov
mov
mov
jl,pn
pop
sbb
inc
ljmp
inc
or
lods
sti
pop
sbb
cwtl
pop
int3
mov
clc
lret
or
icebp
mov
mov
shl
loopne
inc
jle
add
xchg
shrb
jg
jbe
xchg
adc
subl
fwait
jno
dec
fimuls
inc
cmp
enter
test
jo
xchg
dec
or
dec
push
jle
insb
enter
loopne
lret
gs
pop
sub
sub
enter
dec
stos
add
scas
jae
inc
sub
fldl
shl
xchg
cmp
out
enter
sbb
mov
or
arpl
cs
cmp
imul
dec
inc
stc
scas
pop
dec
call
push
mov
sbbb
add
mov
jge
pop
std
inc
dec
ljmp
das
mov
mov
mov
pop
sti
mov
dec
outsb
mov
leave
in
stos
lret
loopne
mov
lret
jmp
adc
mov
pop
dec
jns
mov
lret
sub
mov
call
dec
or
out
lret
in
lret
inc
mov
mov
nop
enter
push
clc
add
adc
jl
in
pop
mov
pop
mov
adc
xchg
push
cmpsb
shll
xor
lcall
push
push
fidivrs
pop
push
dec
inc
repnz
xor
icebp
push
out
jno
icebp
imul
jmp
pop
aam
imul
ret
inc
jp
jbe
cmpl
fbld
leave
jbe
movsb
push
lock
clc
dec
cld
stc
jle
shll
dec
sub
add
xor
mov
add
repnz
cmpsb
and
mov
loopne
pop
jo
mov
sbb
sub
xchg
xchg
stos
setno
mov
rorb
xlat
idivb
movb
mov
mov
sahf
dec
imul
les
das
jmp
cld
adc
adc
pop
mov
hlt
aam
add
fs
adc
ss
mov
cmp
loop
cmpsb
add
inc
clc
ret
push
dec
lods
xor
cmpsb
jmp
mov
dec
lods
sbb
icebp
xchg
faddp
xor
inc
inc
scas
jae
icebp
jns
pop
dec
insl
iret
rclb
in
mov
inc
imul
mov
pop
movsb
iret
stos
dec
push
test
xchg
loope
push
dec
fxch
sbb
stc
cld
insb
test
lds
jnp
in
pop
sbb
lret
push
nop
int
xor
sub
decl
out
push
insl
test
cmp
enter
pop
cmp
mov
sub
push
xchg
das
sub
into
lahf
push
repz
scas
test
lret
push
xchg
push
mov
push
ja
xchg
ja
adc
mov
popa
lods
mov
stos
je
mov
jge
push
mov
daa
dec
mov
xlat
sti
loope
fs
push
pushf
mov
dec
sbb
push
sbb
mov
lret
cmp
insl
call
clc
mov
adc
shlb
sub
mov
and
cwtl
xlat
jge
lahf
test
aam
shll
inc
loope
push
ja
xchg
sub
lds
outsb
mov
push
pop
sahf
shrb
inc
test
pop
or
insl
mov
mov
scas
test
in
jg
in
lods
mov
jne
fisubl
adc
cltd
mov
gs
sub
xchg
mov
outsb
in
jmp
push
js
push
inc
lea
cli
es
lock
mov
sbb
call
fs
mov
and
icebp
out
inc
push
mov
in
add
out
ret
pop
out
lea
rep
sbb
daa
xor
push
ss
imul
xchg
push
push
orb
push
jo
hlt
or
push
mov
fcmovnb
and
lret
out
loopne
cltd
cmp
pop
dec
repz
dec
inc
or
sbb
inc
dec
movsl
test
dec
pop
push
push
mov
ja
imul
aam
pop
xlat
test
push
ljmp
lods
scas
jns
adc
cltd
jg
inc
sub
mov
xchg
lcall
lods
insl
sub
dec
inc
push
cmp
inc
imul
push
mov
popa
lock
lods
mov
arpl
pop
stos
mov
jne
add
or
loop
push
in
sbb
add
pop
scas
std
adc
stc
mov
mov
mov
pop
sub
int
mov
xchg
outsb
push
jmp
inc
pop
mov
fisttpll
out
in
call
and
adc
imul
imul
fnstenv
ja
pop
fisttpll
popa
out
dec
dec
imul
jnp,pt
arpl
push
insb
sar
push
mov
mov
mov
out
adc
ja
int3
in
or
ficoml
sub
push
incl
pusha
sub
popf
add
sbbb
les
or
sbb
inc
lret
mov
test
pop
in
xor
int3
pop
fbld
icebp
sbb
ja
pop
xor
inc
mov
sahf
push
sahf
sbbb
mov
insb
hlt
filds
inc
fnsave
fcmovnu
cli
divl
pop
roll
and
push
adc
loop
ret
sbb
cmp
loop
ds
cmpl
add
sub
ret
stos
sahf
dec
dec
sbb
bnd
fcompl
adc
or
adc
cli
in
icebp
push
shrb
inc
mov
add
mov
lret
call
pop
mov
clc
in
add
mov
jg
arpl
test
lods
sbbb
dec
xchg
rol
lret
loope
dec
rcr
push
dec
mov
push
cmpl
ret
scas
aas
inc
rcll
xchg
stos
bound
imul
mov
pushf
pop
das
lods
cmpsl
daa
and
cltd
sbb
dec
sub
pop
jns
mov
and
push
mov
bound
cmp
xor
mov
push
push
fmulp
push
xor
sbb
movsl
mov
addr16
dec
movsl
lods
aas
cld
std
dec
ja
mov
les
stos
popa
inc
int
rol
and
jne
mov
jns
jl
xor
rolb
sub
fdivl
push
jns
int
push
mov
sbb
xchg
pushf
fstpl
pushf
out
gs
pop
inc
pop
and
push
out
outsb
insl
cmp
xor
cmp
jle
adc
or
mov
pop
xchg
movsb
jns
aaa
in
jae
ret
lret
lds
sbb
lods
and
lock
xchg
jmp
xor
jge
add
je
inc
in
jno
add
nop
push
or
sub
pop
pop
jo
inc
mov
fbstp
cmpsb
sub
popf
imul
jne
js
or
imul
addb
idiv
dec
popf
mov
cmpsb
push
mov
sar
inc
mov
inc
adc
push
xor
fbstp
stc
jne
repz
lods
lret
loope
xor
adc
add
pop
testb
rolb
insl
cmc
add
test
sub
jge
sbb
das
lods
lret
sub
sbb
pop
loop
xor
ja
sub
inc
mov
rorb
loop
xchg
inc
in
push
sub
movsb
xchg
xchg
pop
or
jne
sub
xor
xchg
sbb
popf
xor
push
mov
fiadds
and
sub
std
push
test
jo
sar
mov
jbe
mov
imul
rcll
loop
pop
test
cmp
scas
push
mov
push
jp
fs
and
aam
jp
dec
sbbl
test
repnz
jae
mov
jns
mov
xor
mov
mov
push
nop
packssdw
dec
and
fs
lods
xor
aad
jno
imul
or
ljmp
dec
and
inc
push
gs
sbb
dec
in
push
sbb
call
cmp
imul
push
xor
cmp
imul
out
ljmp
rol
or
inc
jecxz
aad
pop
aam
pusha
add
mov
cmp
mov
pop
jge
loopne
fldl
pop
pushl
and
jg
cmp
int
dec
scas
dec
sbb
jns
add
insb
mov
mov
or
loope
add
jns
add
jl
xor
push
jns
sti
cmp
sbb
aam
sub
mov
push
push
jns
cli
cmp
ret
mov
jl
xor
push
jns
cmc
cmp
sub
fldt
adc
sbb
nop
sti
rorl
and
or
add
jns
sti
cmp
ret
fdivl
jl
imul
repnz
popf
faddl
jmp
ljmp
imul
or
push
jns
lret
fistps
sets
jns
mov
call
cs
loope
insl
mov
mov
push
push
jns
pop
cmp
jl
xor
push
jns
fidivrs
cmp
inc
popf
movsb
ret
cmp
mov
push
imul
aaa
cmpsl
bound
enter
or
push
inc
inc
ljmp
mov
lea
pop
in
dec
sti
push
sbb
xchg
push
sti
sub
and
xor
push
subl
cli
sahf
xor
add
pop
imul
sbb
adc
inc
repnz
lds
ljmp
mov
or
xchg
lds
fsubs
mov
addr16
mov
addr16
mov
addr16
mov
addr16
mov
addr16
mov
addr16
mov
addr16
mov
addr16
mov
addr16
mov
addr16
push
stc
pop
das
pop
xchg
call
ret
mov
addr16
mov
addr16
mov
addr16
mov
addr16
mov
addr16
mov
addr16
mov
addr16
out
and
fst
lods
adc
or
add
pmaddwd
adc
shrl
movsl
push
add
pmaddwd
lods
push
or
add
pmaddwd
mov
shrl
adc
add
cmc
jg
fstp
shrl
mov
add
pmaddwd
out
fst
lods
ds
add
pmaddwd
sbb
shrl
mov
add
pmaddwd
sahf
lods
pop
aas
or
add
pmaddwd
int3
lods
jb
or
add
cmc
popl
aas
add
mov
cmp
out
xor
sub
jbe
xor
add
das
in
gs
es
aad
sub
daa
pop
xchg
jns
inc
inc
sbb
loop
mov
ja
mov
pop
rorl
shlw
addr16
or
insb
ds
jae
clc
or
outsl
ss
mov
mov
jle
push
or
dec
mov
fistpl
jle
mov
adc
mov
lret
bound
nop
dec
insb
sub
dec
pusha
loope
icebp
xchg
inc
fisttpll
mov
cmp
leave
jne
pop
cmp
out
jge
jl
mov
fcmovnb
sahf
pop
outsl
mov
enter
push
in
dec
imul
cmp
and
movsl
in
leave
leave
adcl
out
lcall
out
push
cmpsl
out
lcall
ss
pop
aad
sbb
mov
sub
cld
xchg
push
mov
ljmp
jo
xchg
out
iret
pop
xchg
pop
lret
popf
xchg
push
or
xor
mov
rcrl
pop
clc
push
incb
and
mov
xor
stos
mov
xchg
cld
loop
inc
inc
ss
mov
xchg
mov
call
insb
push
xchg
sbb
shlb
insl
lret
lcall
push
in
cmp
mov
lods
cmp
xchg
int
and
cwtl
call
repnz
loope
pop
dec
das
mov
ljmp
ret
adc
aas
inc
rcr
out
dec
insb
cmp
lret
lods
rcrb
xchg
imul
mov
fwait
test
push
jecxz
cmpsl
lahf
aas
sbb
pop
xlat
lret
stc
adc
sub
fdivs
adc
sub
push
inc
push
leave
mov
xchg
xchg
sar
sbb
mov
aam
inc
xor
adc
je
popf
insl
inc
int
dec
xchg
lods
sub
adc
scas
or
mov
and
inc
mov
fistps
cmp
cld
and
scas
fdivrl
enter
mov
pushl
jns
mov
add
dec
jne
dec
xchg
sub
fs
gs
mov
aam
pop
xchg
popa
adc
int3
mov
out
lret
fbstp
add
pop
sbb
jecxz
jb
ja
xor
xchg
jne
jle
jl
xchg
loope
repz
cmp
or
test
imull
jno
jle
sbb
cld
jmp
inc
xor
fldenv
mov
mov
fwait
or
push
aam
std
or
mov
xchg
jb
add
xchg
insl
push
cmc
pop
stc
xchg
xor
push
jle
outsb
fnstsw
and
xchg
hlt
sub
cmp
or
dec
xor
xor
inc
hlt
shl
and
sti
inc
and
orb
sbb
xor
cmpl
loop
dec
sbb
xor
pop
stos
js
cmc
je
pop
dec
cmc
cmpsl
iret
push
xchg
mov
cmpsl
xor
xor
out
pop
sbb
mov
lret
test
add
dec
sbb
dec
sub
std
sub
pop
add
lods
pop
sub
mov
data16
movsl
test
popa
fmuls
std
fisubrs
jp
ret
push
pop
lahf
sub
jmp
insb
adc
pop
pop
fwait
je
mov
pop
adc
in
cmp
push
add
scas
and
scas
adc
sub
stos
mov
sarb
negl
lock
in
pop
xchg
sub
leave
mov
and
gs
mov
push
pop
imul
js
stos
dec
xchg
mov
loope
js
push
cs
jl
push
inc
nop
xchg
insl
sbb
xchg
andb
rcr
test
dec
jp
mov
scas
mov
xor
adc
add
inc
sub
stc
xchg
jmp
sub
sub
negb
xchg
mov
sub
xchg
or
xlat
jae
fadd
jbe
outsb
orb
xor
cmp
mov
rclb
sbb
pop
cwtl
clc
add
imul
test
xchg
inc
in
mov
das
mov
pop
loopne
push
cmp
add
fwait
sbb
mov
adc
sahf
mov
adc
lcall
push
xor
sub
jno
jmp
mov
fstpt
or
das
loop
push
cli
out
jmp
repnz
adc
mov
mov
mov
jp
jae
pop
repnz
mov
int3
js
push
fs
repnz
sbb
pop
push
mov
outsl
jmp
mov
fwait
es
imul
out
mov
cmp
hlt
cmpb
cld
xchg
out
loope
outsb
mov
jb
out
and
js
mov
xchg
movsl
arpl
aaa
and
pop
jns
test
pop
in
xchg
sbb
sbbl
lds
and
inc
pusha
cs
cmp
ljmp
das
cwtl
xor
insb
dec
lods
outsb
mov
xchg
mov
cmp
sub
loop
cmp
mov
test
aaa
inc
pop
lret
out
pop
mov
andl
push
xchg
subb
loopne
mov
fistps
or
stos
popf
test
stos
mov
dec
cmpsl
cs
shll
mov
mov
scas
ljmp
mov
push
mov
test
and
imul
push
out
cld
xchg
mov
jae
and
out
mov
push
or
xchg
inc
sub
stos
loopne
js
jae
sub
ds
aam
xchg
mov
je
mov
sbb
dec
jg
mov
and
mov
or
mov
jge
mov
adc
adc
push
mov
xor
push
sbb
pop
fcomps
aad
mov
ds
mov
in
and
inc
pushf
inc
jecxz
lret
ja
jl
into
cld
xlat
mov
fildll
xor
shll
lret
jmp
jo
addr16
lds
xchg
ljmp
sub
lret
gs
adc
push
mov
dec
push
push
mov
fwait
aam
mov
mov
enter
and
and
cmp
mov
shrb
xor
mov
das
push
mulb
nop
adc
scas
and
imul
outsl
aaa
sub
or
cmc
jl
lds
and
in
pushf
jle
sbb
mov
dec
out
idivb
and
cmp
insl
subb
jo
cmpb
je
sbb
adc
dec
idivl
mov
mov
out
cld
and
pop
and
fbstp
push
lahf
adc
inc
daa
pop
iret
imul
jbe
or
jge
add
xchg
ret
cli
add
or
cld
mov
sbb
insl
mov
rcl
jno
cmc
int3
push
xor
inc
push
sbb
mov
int3
mov
cmc
pop
repz
mull
pop
and
ljmp
adc
sarb
and
fildll
mov
jb
xchg
or
iret
xor
iret
addr16
popf
adc
decb
pop
cmp
pop
lea
mov
pusha
mov
lea
pop
xlat
mov
push
sti
out
stos
and
xchg
pop
rorb
loopne
prefetch
inc
or
lcall
cmc
or
bound
insl
push
rorb
mov
mov
mov
xchg
push
push
xlat
dec
in
inc
push
sbb
data16
popf
sbb
add
push
xor
cmp
dec
jmp
in
pop
test
jg
fcom
mov
sbb
lret
mov
in
sub
push
and
mov
outsl
pop
and
sti
movsb
mov
cld
dec
ret
imul
xchg
mov
jo
cmp
xor
fbld
ja
mov
dec
int3
mov
jno
ud0
test
orl
imul
mov
xchg
add
add
jae
mov
or
mov
in
lods
sub
scas
xchg
into
sbbl
mov
sti
push
test
data16
daa
setp
das
or
cltd
lock
fdivrp
add
addr16
sbb
subb
aaa
sbbb
inc
adcl
and
or
pop
add
lahf
fistpl
and
faddl
fdiv
push
sub
mov
sahf
pop
mov
jb
popf
out
mov
imul
jb
lahf
les
xchg
dec
enter
inc
addr16
xchg
or
popf
sub
loopne
or
dec
add
stos
dec
push
inc
nop
sti
dec
loope
pusha
fwait
aad
aam
dec
adc
push
and
mov
stos
dec
outsb
fs
push
rol
pop
add
out
imul
fnstcw
stos
add
cmp
cltd
es
fcoml
adc
push
and
scas
fwait
and
pop
arpl
aam
paddusw
enter
fwait
mov
dec
dec
std
movsb
mov
lods
xchg
mov
and
imul
jns
iret
insl
inc
jb
sub
sarb
jge
and
in
dec
cmp
mov
sarb
cli
mov
mov
xlat
mov
sub
jne
push
insl
jno
dec
xor
loope
in
mov
jmp
dec
loope
fisubrs
fisubrs
push
int3
bound
ja
test
push
lret
imul
dec
mov
cmp
and
push
imul
mov
jne
pop
sti
out
ret
add
dec
daa
pop
std
or
je
push
ret
push
push
filds
sahf
inc
sbb
mov
mov
mov
cmp
addr16
pop
push
push
dec
clc
scas
int
cld
cld
jl
and
les
leave
stc
add
stos
les
adc
je
pop
lods
mov
bound
dec
loope
sti
aaa
imul
push
sub
mov
sub
or
and
xor
rolb
xchg
cmp
pop
addr16
out
xchg
mov
clc
push
dec
mov
lret
push
mov
in
jl
dec
jns
icebp
in
or
jne
test
fs
popf
adc
sbb
mov
daa
andl
push
adc
test
testl
loop,pt
pop
sub
jbe
aaa
stos
stos
and
cmp
out
pop
push
hlt
lret
push
jg
divl
sbb
jnp
popf
cmpsb
and
sbb
ftst
jo
lock
or
sub
int
ja
call
jge
lds
hlt
pushf
sbb
test
adc
mov
and
pop
stc
cmc
fwait
stos
push
ja
lods
cli
and
fbld
mov
test
push
pop
push
jne
push
outsb
cmp
aad
mov
jo
out
sbb
xchg
dec
xchg
or
cs
or
cld
sub
xchg
jns
add
pop
cmp
fnstsw
dec
pop
cld
movsb
and
mov
cmp
ss
cmpsb
sub
fsubrl
push
push
clc
sar
das
push
pop
loope
push
dec
mov
loope
mov
push
sarl
cmp
insl
ffreep
out
adc
mov
or
iret
test
jno
inc
cmp
xchg
insb
adc
lods
cmp
loope
roll
hlt
jg
cmpsb
loop
cmp
in
in
clc
out
sbb
push
fnsave
lret
pop
lods
inc
pusha
out
or
stos
ja
cli
daa
add
enter
je
inc
enter
icebp
xorl
shll
jbe
xor
fwait
sub
lock
xor
test
pushf
jns
test
jge
dec
cmp
ficomps
xor
jl
aam
mov
in
fisttpl
pop
aaa
ficomps
mov
imul
cmp
addb
pop
mov
adc
mov
out
jl
imul
sub
push
inc
orb
dec
into
sarb
inc
lea
or
out
add
pop
xchg
popa
test
mov
mov
icebp
setp
popa
cltd
scas
ja
cmp
ficompl
xor
stos
loopne
popf
cltd
out
xchg
mov
jno
adc
sub
pop
push
aam
and
adc
mov
mov
inc
mov
scas
sub
xchg
popf
mov
lods
pop
inc
enter
out
dec
xchg
pop
jg
adc
fdivl
or
jg
mov
je
test
jecxz
rcll
adc
mov
push
mov
out
sbb
mov
cmp
jp
adc
popf
rep
insb
xchg
cmpsb
int
mov
mov
cmp
push
out
jnp
dec
pusha
into
js
push
incl
sub
leave
lods
enter
dec
daa
dec
test
mov
cmp
test
das
data16
mov
cmp
jl
or
mul
repnz
out
add
nop
dec
pop
pop
xchg
js
add
adc
fbstp
imul
sub
addr16
cwtl
sub
jne
sar
adc
sub
lds
sbbb
inc
fwait
push
rcrl
nop
out
push
jecxz
adc
lods
pop
mov
leave
addb
cmc
daa
dec
gs
fbld
lods
ljmp
sbb
add
cmpsb
into
mov
shll
jp
push
les
add
test
mov
xor
sub
int3
ret
popa
subl
ret
out
das
sarl
dec
enter
lock
test
pushf
hlt
mov
test
add
xor
mov
and
movsb
repnz
aaa
push
cmpsl
call
rcll
sbb
or
push
dec
push
fsts
dec
mov
sbb
mov
xchg
aaa
cmp
movsb
adc
shrl
insb
and
data16
aaa
jecxz
les
cltd
adc
add
int
insb
xchg
and
je
mov
push
pop
and
icebp
cmp
dec
cmp
insl
xor
in
test
lret
lcall
outsb
fisubl
out
inc
xchg
dec
pusha
sbb
sbbl
inc
ret
and
push
test
mov
sub
push
scas
fldt
loopne
mov
dec
push
mov
sbb
mov
xchg
dec
inc
pushf
addr16
sub
outsb
mov
push
sbb
adc
cmpsl
inc
pop
ljmp
outsl
in
mov
jle
in
enter
push
hlt
and
nop
sub
out
cmovle
jae
outsb
cmp
pusha
xchg
push
mov
add
cmp
push
outsb
cmp
cwtl
push
and
arpl
jmp
mov
enter
adc
icebp
cwtl
gs
mov
adc
dec
push
out
pushf
sbb
pushf
sbb
mov
add
ss
lods
dec
adc
xchg
xchg
arpl
imul
in
mov
orl
add
and
push
int
test
sti
loope
pop
hlt
dec
mov
lods
push
scas
lods
push
xchg
dec
es
pop
xchg
pushf
leave
shr
mov
mov
lcall
jmp
mov
aaa
or
xlat
push
rclb
mov
out
inc
sbbl
sahf
mov
sub
sahf
sbb
push
out
stos
test
mov
int
mov
fnstenv
mov
out
shlb
stos
pop
scas
or
inc
or
fstpl
les
hlt
call
mov
lock
xor
loopne
and
fnsave
mov
imul
mov
xor
hlt
fsubr
mov
jae
fiaddl
adc
adc
dec
scas
lcall
popa
fstps
arpl
loop
ficoms
jae
das
sbb
add
pop
aad
ss
jmp
push
insb
outsl
popa
sub
call
jecxz
out
repnz
leave
inc
mov
cmp
push
jns
sub
loop
xchg
jb
out
mov
pop
mov
jecxz
dec
add
push
and
sub
test
dec
xlat
xchg
xor
loope
pop
pop
or
inc
pop
dec
fs
lahf
adc
sub
pop
das
int
push
lret
das
lahf
mov
jo
rclb
mov
pusha
loop
inc
aas
out
pushf
mov
stc
andb
add
nop
cmp
imul
imul
or
mov
repz
xchg
push
sbb
shll
scas
mov
bound
leave
leave
cmpsl
mov
mov
push
push
push
jbe
dec
mov
jne
out
loopne
and
xchg
mov
rclb
xor
std
sbb
std
adc
add
fmuls
push
adc
enter
jns
sbb
jb
jo
jnp
in
fildl
dec
mov
pop
or
stc
dec
sbb
int
outsl
xor
aaa
lods
mov
iret
add
mov
cs
jae
dec
xchg
mov
add
inc
sub
xlat
add
sub
aad
movsl
and
cltd
pushf
xchg
xor
lcall
aad
mov
pop
icebp
shlb
xchg
insb
in
rcrb
mov
sub
lds
sarb
inc
and
lods
dec
add
aas
jo
jns
add
dec
rclb
in
xchg
jae
xor
push
and
inc
push
push
inc
adc
jae
or
hlt
mov
andb
mov
sbb
adc
or
cli
notrack
add
pop
mov
add
add
cmp
cmpsb
imul
loopne
pop
adc
cltd
push
dec
push
sbb
sub
loop
pop
ret
cwtl
or
or
mov
jge
enter
mov
push
ret
cmpsl
fldcw
cmpsl
cmpsb
sub
push
shrl
sbb
lret
rcl
cmp
xchg
mov
scas
xchg
and
sbb
jg
je
xchg
mov
lret
fwait
std
push
shlb
lret
cld
mov
and
cmpsb
and
lret
std
push
jle
cmp
xor
sub
inc
outsb
and
cs
pop
fiaddl
inc
sahf
ss
dec
sahf
daa
popf
stos
fisubrs
adc
mov
lods
dec
xchg
test
cltd
arpl
fcomp
dec
jb
insl
or
pushf
push
sub
pushf
adc
add
jno
insl
cli
dec
movsb
ss
push
lea
pop
mov
adc
add
shl
lret
xchg
cmp
mov
push
aad
jo
shrb
ss
sub
jbe
filds
mov
fistpl
jmp
pop
fwait
push
cld
gs
mov
dec
xchg
pop
xor
test
outsb
or
cs
sub
sbb
andl
push
andb
hlt
dec
shlb
ret
mov
adc
adcl
jle
mov
fs
xchg
cmp
mov
and
jge
mov
pop
std
fdivrs
push
aad
shlb
xchg
push
pop
add
les
adc
dec
clc
mov
or
ss
push
xor
xchg
xor
les
stos
stos
das
mov
lods
xor
xchg
sub
loope
fistps
fcompl
scas
test
push
pop
lods
push
adc
enter
hlt
dec
or
and
mov
shll
aaa
mov
jmp
mov
jecxz
frstor
scas
cmp
xor
cwtl
scas
push
enter
movsl
cwtl
scas
enter
inc
cs
inc
test
addl
cmp
jle
negb
leave
cmp
push
mulb
in
aas
sub
push
scas
push
mov
lea
es
xlat
popf
and
imul
pop
and
mov
into
shll
cmp
jae
push
xlat
adc
rorb
push
mov
jnp
inc
pop
fstpt
cmpsl
int
xor
stos
pop
inc
fnsave
adc
lahf
dec
cmp
mov
rorl
pop
repz
adc
test
and
sarl
xor
xchg
rorl
test
setl
mov
push
movsb
adc
push
aaa
lods
xchg
xchg
inc
inc
push
mov
dec
push
pop
sub
sbb
pop
imul
pop
push
out
pop
lahf
call
mov
adc
pop
nop
xor
mov
cmp
std
jo
jp
mov
mov
std
test
mov
in
sub
popf
pop
out
cltd
scas
fimull
into
xor
mov
pop
out
jo
ret
jo,pn
jmp
fmul
mov
test
out
cltd
test
xlat
adc
push
inc
out
mov
or
sbb
es
mov
inc
dec
lret
stos
lcall
clc
cmp
or
dec
insb
movsb
dec
dec
inc
sbb
ror
push
es
enter
push
xor
shlb
or
lea
push
dec
push
lret
cmp
jne
mov
or
inc
lcall
jae
in
pop
mov
push
or
ret
xchg
and
loop
cs
sti
push
mov
push
mov
pop
std
mov
inc
adcl
gs
xchg
in
mov
cmp
aas
mov
mov
adc
pop
aas
mov
loop
mov
push
scas
aam
jp
pop
mov
mov
sub
imul
mov
int3
pop
movsl
lea
lock
mov
and
xchg
push
sub
in
push
ret
shrl
iret
push
dec
push
adc
ret
jecxz
in
jmp
cmpsb
sbbb
mull
xlat
addr16
js
jno
jbe
xchg
mov
sbb
mov
or
test
or
ficompl
cmpsb
outsb
sub
outsl
sbb
fwait
mov
mov
lods
push
cld
mov
lds
aam
iret
orl
mov
or
push
xchg
sbbl
sub
xchg
incb
cmp
imul
in
pusha
leave
dec
ficompl
inc
std
movsl
dec
or
pop
nop
stc
xor
stos
imul
mov
loope
jno
push
ds
pusha
mov
dec
lods
sahf
movsb
es
cmpsb
gs
lea
ja
fidivs
pushf
outsl
loope
iret
in
mov
adc
sub
roll
xchg
xor
insl
lret
push
mov
lods
sarb
arpl
ret
jns
iret
sbb
mov
mov
fcmovnu
sub
ljmp
shrb
push
sbb
loope
leave
enter
out
lcall
jno
dec
call
sbb
mov
pushf
outsb
push
jge
mov
pop
test
mov
jg
icebp
dec
dec
mov
ret
push
add
jg
xor
sub
fwait
in
fucomip
es
test
call
hlt
out
enter
les
in
int
and
in
mov
repz
fidivl
inc
aad
mov
jp
jns
int
adc
xchg
sbb
jnp
frstor
cmp
repz
mov
add
dec
add
mov
daa
inc
outsl
mov
out
pop
andb
xchg
popa
dec
jns
jp
fidivrl
inc
mov
mov
adc
or
js
sbbb
xchg
jg
jmp
cli
shrb
inc
pop
cli
sti
daa
inc
fisubrs
sti
movsb
aam
jae
jg
repz
std
xor
cmp
sub
dec
mov
das
jne
pop
popa
das
cmpsb
outsl
pop
fs
fildll
or
ucomiss
int
loop
je,pn
add
addr16
xchg
lahf
mov
dec
insb
jge
inc
loope
dec
insb
jecxz
enter
subl
pop
pop
mov
dec
outsl
in
push
mov
push
mov
pop
aas
sub
and
push
test
push
sbb
clc
push
stos
jle
ljmp
ljmp
push
dec
inc
add
ror
mov
out
lods
mov
and
psraw
xchg
jmp
xlat
jnp
mov
fistpll
push
push
jge
jb
and
jg
ds
xor
in
mov
repz
pop
mov
in
adc
sub
icebp
add
mov
or
jecxz
pusha
xchg
nop
je
mov
inc
mov
das
fldt
test
dec
mov
aaa
and
ljmp
push
xchg
lahf
test
xchg
testb
hlt
fstpl
mov
popf
jp
add
movsl
mov
dec
hlt
jl
pop
addb
dec
fldcw
add
xchg
push
xor
jl
loop
xchg
cmp
push
rcrb
mov
das
jg
pop
push
cmp
xchg
imul
push
lahf
movsb
sahf
mov
scas
xchg
mov
loop
mov
fdiv
jno
adc
fs
push
xchg
cmpl
out
push
mov
xor
int
js
push
add
cmpsl
fistps
in
sbb
popf
mov
ret
xchg
fisttps
dec
dec
lods
mov
and
movsb
and
jnp
inc
inc
cmp
inc
movsl
pop
push
icebp
jbe
loop
mov
dec
xchg
les
push
test
call
add
pop
cmp
add
push
mov
mov
mov
and
dec
or
cmp
dec
je
stos
cwtl
aad
push
imul
push
pop
jno
pop
push
xor
rcr
sub
jge
inc
add
lret
xchg
jno
xchg
pop
push
push
mov
cmp
out
inc
popa
jns
in
dec
mov
fld
jae
or
or
add
insb
inc
pusha
jno
mov
ja
cmpsl
shrl
in
inc
and
lods
and
jge
in
pop
fmull
sub
mov
loop
inc
movsl
mov
jmp
popa
push
adcl
xchg
push
arpl
sub
inc
int3
xchg
outsb
dec
jnp
in
or
jg
ss
adc
lods
and
cli
mov
fwait
aam
out
sub
sbb
pop
shr
pop
gs
jmp
cltd
subb
dec
mov
add
adc
dec
mov
mov
xor
out
pop
cmp
xor
sbb
add
mov
xchg
fcmovnbe
mov
jns
addr16
fwait
dec
int3
out
fdivrl
stos
test
sub
insl
popa
sub
mov
jae
in
pop
adcb
das
je
sub
imul
hlt
ja
xlat
dec
pop
xchg
pop
jl
cmp
cmp
out
cmp
loopne
pop
das
mov
mov
cpuid
stos
pushw
inc
xor
shlb
outsl
push
mov
jle
cmpl
mov
adc
push
sub
xor
pop
inc
iret
ret
push
repz
pop
mov
roll
bsr
dec
lods
mov
clc
repnz
pushl
in
repnz
aaa
in
dec
xlat
repz
ljmp
xchg
idivl
icebp
jno
xor
cmp
mov
dec
enter
cs
aaa
loope
mov
popa
aas
sbb
shlb
push
les
outsb
push
jge
xor
insb
in
push
repnz
sbb
addr16
sub
aam
lcall
icebp
in
mov
ja
sub
mov
inc
mulb
and
jbe
add
jb
or
daa
jo
sahf
sbbl
mov
mov
ljmp
push
dec
inc
adc
and
sub
sti
jno
test
cwtl
test
push
stos
shl
push
pushf
push
adc
cmp
xchg
xchg
and
sub
lods
or
xor
and
daa
add
rcrl
push
pop
sahf
push
cmc
xor
mov
cs
nop
fisubrl
mov
mov
mov
stos
cmp
cmp
dec
mov
orb
cmp
mov
mov
cmp
xor
cmp
test
daa
push
in
js
xor
jno
and
cmpsb
out
and
cmp
dec
mov
stos
sbb
adc
mov
jl
sub
out
out
lock
filds
jle
cmc
push
adc
lock
and
ret
pop
add
cmpsb
jno
lds
cltd
mov
dec
mov
das
test
lods
inc
or
int
xor
aam
mov
jle
sub
inc
xor
pop
lret
ret
shlb
incb
aam
mov
mov
lret
cmp
outsb
pop
sub
shll
nop
dec
shlb
or
xor
mov
pop
idiv
push
ds
mov
mov
sti
cmpb
sbb
dec
bound
pop
xchg
cli
fs
in
ljmp
mov
push
and
insl
insb
stc
add
cmp
or
out
aas
cs
cmc
fs
jge
jp,pt
cmpsl
ljmp
mov
stc
in
inc
inc
dec
mov
das
cmp
lock
inc
mov
dec
popa
sub
pop
arpl
or
add
into
cmp
fadds
pop
bound
sub
jp
cmpsl
ljmp
dec
cs
dec
sub
adc
cld
xchg
iret
dec
push
or
dec
or
mov
repz
jle
add
pop
mov
dec
mov
cmpsb
inc
nop
fidivrs
sbb
out
lret
jle
xchg
jle
inc
popl
sub
je
notl
cmp
xchg
or
adcb
mov
sbb
mov
stos
ljmp
stos
ljmp
stos
ljmp
stos
ljmp
stos
ljmp
stos
cvtpi2ps
stos
ljmp
xor
nop
out
ret
push
add
mov
cmc
add
fwait
mov
nop
out
ret
nop
jmp
mov
cmc
add
xchg
mov
nop
out
ret
pushf
in
push
mov
cmc
add
shll
nop
out
ret
pusha
adc
mov
cmc
in
pop
or
push
inc
adc
xchg
lds
pop
sub
push
jnp
jb
add
lea
test
jmp
cltd
sub
mov
cwtl
push
lea
mov
adc
add
frstpm(287
push
nop
pusha
dec
lock
push
mov
fwait
sub
pop
test
and
cltd
cmpsl
ret
xchg
adc
adc
shlb
les
lds
es
inc
ret
shrb
jg
int
or
les
xor
lock
inc
test
jp
sub
in
adc
xor
pop
test
hlt
jnp
fdivp
inc
mov
mov
mov
loop
mov
sbb
stos
ljmp
out
mov
xchg
inc
xchg
add
jmp
in
addr16
jmp
cmpsl
inc
pop
push
mov
fmuls
pushf
bound
and
aam
fbld
and
ret
jb
imul
pop
cmp
cli
or
dec
mov
sub
pop
push
cld
push
pop
xchg
push
or
sbb
scas
cmp
repnz
sub
dec
ffree
fs
fistps
pusha
mov
stos
pop
movsl
out
in
or
sbb
and
fstpt
ret
pop
mov
es
mov
adc
dec
rcll
inc
cmpsl
out
dec
frstor
cmpsl
mov
push
mov
es
scas
test
roll
fisubrl
pop
and
inc
jns
sbb
inc
nop
inc
test
inc
lods
push
xor
adc
pop
mov
test
outsb
dec
icebp
js
out
gs
xchg
jecxz
mov
addr16
inc
cmc
frstor
xor
mov
jo
pop
fistpll
push
cmpsb
mov
push
xor
or
push
sbb
cmp
xor
data16
adc
xor
dec
in
in
lods
pop
or
das
mov
add
sub
mov
xchg
hlt
jl
sub
push
sub
shr
mov
fwait
lahf
mov
inc
stos
enter
cld
adcl
push
xchg
add
dec
pushf
add
pop
mov
div
xor
pop
push
pop
shl
jl
lds
jae
es
add
push
daa
xchg
jecxz
inc
xorb
xchg
mov
mov
fwait
inc
mov
dec
rorb
lock
dec
cli
in
loopne
gs
pop
add
mov
roll
mov
aaa
jl,pn
push
jle
fs
insl
outsl
mov
mov
mov
jle
sub
add
push
lds
adc
push
cltd
pop
neg
pushf
fwait
gs
adc
ja
cmp
rol
fisttpll
inc
push
push
jmp
pop
in
pop
scas
test
ret
or
jl
jl
fwait
gs
std
stos
lea
sbb
fmull
mov
cltd
cwtl
jg
rcll
test
aaa
xor
inc
int
js
sbb
arpl
xor
cmc
xchg
arpl
lcall
lock
xor
jo
int3
gs
call
cmp
rcr
lea
stc
out
cmpb
call
in
stc
jle
mov
inc
xchg
jle
lret
outsl
div
jl
adc
lea
xor
movb
popf
stos
notl
lods
sub
inc
bound
lods
jne
ret
xor
mov
fs
mov
fisubl
cli
adc
xlat
movsb
outsl
mov
inc
in
and
mov
fst
loop
dec
mov
sbb
xor
je
lcall
int3
out
out
aaa
lahf
lret
fbld
gs
test
mov
xchg
out
aad
sbb
test
daa
dec
sbb
aaa
rclb
ja
arpl
sbb
xlat
pop
or
repnz
or
pop
rcrb
pop
stos
sti
or
loopne
setne
addl
fs
stos
jg
inc
mov
test
cmp
push
enter
aad
movsl
inc
in
fcoms
xor
mov
fcoms
jmp
arpl
mov
sahf
push
data16
jg
out
adc
push
sarl
xor
sahf
dec
cmp
shll
ficoms
push
int3
addr16
data16
movsb
lahf
jbe
mov
in
jecxz
mov
jge
push
push
dec
cmpsb
push
sbb
xor
daa
push
iret
pop
mov
clc
and
adc
es
xor
cmp
fwait
loope
dec
pusha
sub
popf
adc
push
cwtl
adc
xor
ds
cs
out
dec
icebp
jno
loope
add
fwait
cmc
push
xor
xchg
insb
test
xchg
fnsave
pop
adc
popa
jmp
push
sbb
das
pushl
mov
test
cmp
test
out
fnstenv
ret
mov
pushf
xchg
out
mov
fsubl
adcl
dec
and
mov
jl
jb
lods
push
cli
jns
dec
dec
pop
and
stc
in
adc
and
push
pop
lea
cltd
fsubl
mov
ja
push
pusha
dec
cmpsl
call
out
fsubrs
bound
lods
xlat
adc
xor
inc
mov
andl
add
push
push
movsb
pop
or
insb
rorl
lods
sub
sbb
xor
adcl
addr16
mov
and
xchg
sbb
adcb
clc
adc
or
lcall
popf
adc
push
xor
mov
add
lods
aad
fnsave
fs
adc
push
jp
dec
push
icebp
jnp
xor
adc
sbb
pop
lret
aad
rol
push
and
or
and
dec
sbb
push
cmc
jb
stos
jno
pop
jp
mov
sbb
ss
add
pop
std
nop
push
xchg
xchg
loopne
push
push
push
or
adc
sub
inc
in
pop
clc
pop
dec
xor
sti
ficomps
insl
andb
sahf
aam
jle
mov
pop
cmp
jns
push
shl
or
in
int3
xchg
push
lret
popf
in
out
lods
ljmp
add
mov
lea
or
dec
inc
je
xlat
mov
jb
mov
std
into
aaa
push
mov
cmc
dec
pushf
mov
and
mov
or
mov
mov
and
pop
test
negl
bsr
fsubrl
cmp
or
xchg
call
pushf
nop
sbb
inc
roll
adc
aaa
bound
pop
imul
jmp
or
stc
and
lret
test
lahf
mov
dec
xchg
cwtl
outsb
lea
aas
xchg
xor
fistpll
xchg
xor
xchg
mov
sahf
test
pop
fwait
insl
pop
push
loope
sub
clc
imul
push
loope
scas
xchg
jle
scas
scas
mov
imul
cwtl
iret
test
neg
jp
sub
in
arpl
repz
lret
mov
sti
xor
gs
add
add
mov
and
fimull
jl
push
add
xchg
stc
addr16
ljmp
lods
jne
ret
mov
jno
or
clc
xchg
jb
mov
xchg
in
mov
cmp
push
movsb
icebp
jge
lea
mov
pop
inc
push
rcrb
push
inc
xor
ret
fisubrl
adc
inc
pop
hlt
mov
out
mov
adc
pop
repz
sahf
push
imul
stc
in
cld
mov
sti
std
push
xchg
je,pt
adc
inc
out
stos
ljmp
insb
sub
xlat
aaa
xchg
sub
mov
testb
out
mov
lret
mov
aam
mov
out
jecxz
sub
sbb
fcomps
ss
xchg
les
out
pop
lahf
mov
or
cwtl
sub
shlb
lret
cld
dec
jns
repz
mov
out
out
dec
ret
cld
pop
xchg
jge
add
fsub
cwtl
cli
jne
arpl
jns
ss
push
xor
push
popa
fstps
rol
testl
push
or
sub
lea
stc
push
cmc
adc
icebp
jge
shll
outsb
lret
ret
mov
fld
pop
pop
adc
lods
mov
ds
inc
lods
and
inc
xchg
pop
into
jbe
jle
insl
adc
inc
fcoml
aam
jnp
imull
adc
div
adc
pop
lcall
xor
and
mov
adc
jno
cmpsl
ljmp
xchg
inc
cmp
sbb
out
pop
sbb
out
cmp
call
mov
cmp
es
and
pusha
aas
loop
sbb
mov
or
fstpl
push
inc
xor
mov
scas
jp
push
jl
addr16
in
or
aad
or
pop
in
fiadds
jle
add
add
std
jg
mov
sub
lret
mov
leave
and
addl
pushf
jecxz
pop
idivl
hlt
xchg
stos
bound
lods
mov
leave
adc
pop
dec
mov
fcmovnbe
pop
jge
adc
loopne
cltd
nop
arpl
dec
call
rcr
add
inc
pusha
adc
fisubrl
xchg
hlt
rcll
shlb
xchg
xchg
add
cli
jne
pop
les
cs
loop
and
shrl
xchg
es
rcrb
icebp
jbe
clc
shrl
les
cld
stos
ljmp
adc
or
scas
fidivl
fwait
popa
push
rcll
lret
jge
out
hlt
xchg
and
inc
movsb
loope
xchg
xchg
xor
ljmp
test
cld
ret
leave
popf
mov
popf
es
add
icebp
and
and
in
jbe
and
jge
pop
xchg
je
push
dec
arpl
jg
jl
sub
pop
addb
cmpsl
or
mov
in
stos
mov
fists
addb
bound
lds
mov
pop
mov
push
pop
stos
xchg
data16
sub
enter
stos
ljmp
das
icebp
dec
je
les
dec
popl
cmp
cmp
addr16
mov
nop
aam
inc
rcrb
mov
mov
xchg
in
fisttpll
out
adc
enter
lods
roll
xor
fldt
cwtl
lret
ljmp
adc
aas
cmp
aaa
gs
mov
dec
or
sub
test
imulb
rorl
cs
push
adc
sbb
push
adc
cmpsl
pop
sbb
fdivr
adc
add
push
pop
ja
leave
mov
jbe
xchg
jge
and
mov
sub
push
sub
inc
sbb
jge
in
ljmp
mov
sub
xchg
add
lcall
push
mov
jbe
xchg
xlat
lcall
push
cld
or
pop
bswap
ret
lock
mov
cld
fdivrp
pop
popf
mov
mov
imul
pop
adc
ljmp
in
movsl
push
mov
rcll
fisubrl
cli
insl
cld
or
sub
lock
or
test
ss
mov
enter
sbb
imul
out
mov
bound
iret
xor
mov
xchg
add
lods
psubw
push
gs
mull
outsb
inc
jge
jbe
xor
mov
loopne
xor
adc
mov
ljmp
lock
xor
lds
sub
adc
lock
aam
push
scas
movsb
pop
cmp
stc
daa
cmp
pop
dec
mov
into
sbb
push
mov
mov
cmp
dec
push
test
xor
mov
bound
aam
loopne
push
xchg
mov
shlb
push
lds
mov
outsl
dec
repnz
sub
fwait
sarb
repz
mov
in
aas
lcall
inc
adcb
ljmp
ljmp
cltd
call
ljmp
add
pop
icebp
nop
cmp
mov
add
push
aad
lds
nop
cld
pop
pop
dec
shll
pushf
mov
outsl
mov
enter
cmpsl
and
jae
stc
add
jecxz
orb
sbb
adc
jae
test
shr
jnp
inc
jns
dec
sub
outsb
cwtl
outsl
mov
hlt
dec
push
mov
inc
and
movsb
cs
lds
inc
jb
jl
mov
cmp
xchg
xchg
add
imul
add
addr16
outsl
jmp
ss
pop
fnstsw
ds
test
aas
push
adc
addr16
repnz
xchg
mov
jecxz
xor
dec
dec
cld
mov
call
or
ret
loopne
jnp
pop
mov
addr16
pop
gs
push
cmpsb
xor
dec
jo
add
cmp
test
add
gs
nop
push
and
cmp
xchg
cmp
out
mov
mov
adc
fisubl
mulb
icebp
pop
or
aaa
and
shrb
divb
fdivr
loop
loopne
in
ljmp
jmp
cld
xchg
aad
loope
pushf
xchg
loopne
sbb
lods
jne
ret
sbb
and
mov
or
add
push
ljmp
repz
int3
imul
in
sub
arpl
xchg
stos
push
sbb
sub
push
xlat
sti
xchg
add
push
insb
mov
stc
pop
sbb
cmp
jns
mov
sub
xor
rcr
adc
jns
rclb
cli
mov
jmp
lea
adc
je
flds
pop
mov
movsb
adc
sbb
cmpsl
adc
pushf
mov
pop
or
cmp
cmpl
ss
ss
outsl
dec
jle
add
or
mov
push
xchg
adc
push
fstl
loopne
add
in
fcompl
movsl
int3
test
lret
and
jo
mov
add
cmp
mov
lcall
jae
mov
lock
xor
sub
pop
js
je
out
push
lods
pop
jno
das
repnz
movsl
mov
mov
dec
cmp
xchg
imul
and
aas
es
fmuls
sbbl
xchg
dec
push
lods
or
lea
or
push
adc
and
stos
mov
xor
lds
jmp
adc
jp
imul
mov
stos
ljmp
sub
into
sub
lock
loopne
fwait
xchg
fmull
in
mov
cwtl
incb
in
cmp
mov
loop
adc
push
shlb
mov
cmc
mov
inc
add
xor
dec
ret
pop
jecxz
insl
in
pop
or
or
mov
push
shl
xchg
cmp
adc
lds
pop
push
mov
push
and
inc
rorb
mov
pop
mov
mov
cmpxchg
sub
jg
mov
jbe
loope
mov
adc
bound
and
adc
xor
mov
add
mov
xor
jb
pop
lods
cmp
int
adc
je
xchg
sti
in
xor
call
leave
and
jmp
fwait
mov
mov
repz
data16
repnz
pop
or
out
mull
xchg
mov
dec
xlat
or
nop
cmp
jl
into
mov
aam
inc
cwtl
push
js
aad
imul
cmpsl
enter
jae
sbb
out
or
dec
hlt
das
repz
dec
in
mov
insb
xor
ss
jbe
imulb
pop
test
stos
das
shl
dec
mov
mov
shr
out
xchg
mov
pop
addr16
dec
push
dec
data16
js
pop
and
xor
pop
mov
dec
fadd
inc
xorl
sub
or
mov
add
out
hlt
xchg
fmuls
inc
jno
stc
js
sbb
xor
lock
popa
imul
adc
sub
inc
in
stos
mov
enter
jecxz
sbb
xchg
xchg
jle
mov
scas
xor
in
aam
jmp
jb
adc
and
fdiv
mov
scas
sbb
movsl
adc
aam
insl
insb
stc
add
cmp
or
out
aas
cs
cmc
fs
cmpsl
outsl
stc
pusha
mov
jg
in
stc
in
imul
dec
and
jp
cmpsl
ljmp
lahf
ds
aaa
lea
xor
test
push
lea
push
clc
gs
xchg
popa
or
aam
in
outsl
inc
popa
sub
cmp
mov
ljmp
test
jp
fists
clc
and
scas
jae
ds
jge
addr16
add
stc
in
pop
push
popa
outsl
cmc
push
popa
outsb
and
lods
ljmp
adc
gs
ljmp
fwait
xchg
add
cwtl
sub
sub
adc
adc
xchg
shl
dec
push
rcrl
stos
add
mov
clc
in
ljmp
pop
fidivrs
pop
fimuls
stos
ljmp
lcall
shlb
jae
or
mov
mov
or
aad
cmpsb
ljmp
mov
pushf
loop
and
int3
mov
pop
aad
cmpsb
ljmp
mov
pushf
loop
and
sti
stos
ljmp
loopew,pt
loopew,pt
stos
ljmp
inc
mov
subb
in
dec
pop
jns
icebp
lea
jge
mov
pop
nop
mov
js
cmp
cmp
xor
lcall
jnp
xchg
mov
ljmp
cmpsb
ljmp
and
inc
add
or
test
pop
dec
orb
or
stc
in
ljmp
or
cmp
inc
add
push
inc
add
pop
cmp
ljmp
ljmp
stos
ljmp
stos
ljmp
pop
loope,pt
loopew,pt
stos
ljmp
lcall
cmpsb
ljmp
lcall
fs
lock
adcw
adc
ljmp
mov
loope,pt
stos
ljmp
fdivs
xor
mov
scas
sbb
ljmp
lret
adc
ljmp
mov
loope
loopew,pt
stos
ljmp
mov
xor
sub
push
out
adc
mov
popf
add
or
or
cmp
es
add
push
inc
add
ljmp
mov
lcall
fstps
add
sbb
inc
jae
or
xchg
and
add
pop
or
sti
ljmp
inc
inc
or
rol
push
jl
testl
jno
mov
jnp
jp
test
xor
ljmp
pop
xor
call
jecxz
ljmp
and
rcll
enter
jp
push
frstpm(287
cli
stos
ljmp
stos
ljmp
pop
fidivrs
pop
fimuls
stos
ljmp
lcall
xchg
xor
xor
ljmp
enter
repz
mov
or
sub
in
ljmp
mov
sbb
data16
lret
pop
sti
in
ljmp
lcall
dec
jno
sbb
mov
pop
mov
lcall
inc
jae
in
ljmp
stos
push
test
stos
ljmp
pop
loope,pt
loopew,pt
stos
ljmp
mov
push
fwait
mov
lds
jmp
cli
in
in
ljmp
loope
mov
movsb
ljmp
or
cmp
es
add
push
inc
add
ljmp
inc
push
popf
lcall
jae
out
in
adc
in
ljmp
pop
fidivrs
pop
fdivp
in
ljmp
push
aaa
idiv
and
stc
in
adc
in
ljmp
mov
push
outsb
outsb
addr16
in
ljmp
stos
cmp
lock
and
pop
push
out
in
mov
ss
jmp
mov
insl
outsl
adc
addr16
fdivr
in
sub
lcall
stc
in
sbb
fistps
enter
lahf
in
icebp
adc
in
ljmp
stos
ljmp
pop
fidivrs
pop
fsubrp
in
ljmp
sub
jmp
ljmp
stos
ljmp
stos
add
scas
xor
jnp
xchg
jg
out
lcall
sbb
inc
loopne
dec
fs
stc
in
sbb
test
sahf
pop
push
out
in
mov
xor
jmp
mov
jae
mov
pusha
cmpsl
int
in
sub
pop
arpl
cld
in
ljmp
and
add
std
sbb
scas
jp
lock
lods
xchg
hlt
cmp
mov
pusha
movsb
gs
das
dec
push
bnd
dec
repz
dec
mov
pop
rorl
mov
movsb
gs
mov
bnd
dec
repz
dec
mov
inc
add
mov
shr
lock
push
dec
pop
mov
sbbb
nop
push
cmp
sbb
lea
lds
cmp
in
test
xchg
dec
shrl
inc
addr16
sub
pop
in
xor
add
pop
es
enter
cmp
xor
inc
push
repz
iret
xchg
out
xor
push
int
sub
enter
mov
add
jns
mov
into
cmpsl
inc
push
pop
jl
jbe
push
sub
push
jecxz
frstor
inc
int3
cmp
popa
inc
repz
xchg
xchg
add
pop
pop
in
std
clc
jge
add
pop
outsl
jg
cmp
xlat
insb
lock
orl
fistl
jle
sub
inc
aam
mov
mov
int
mov
adc
push
fs
mov
pusha
stos
xor
xorl
xchg
xor
pop
or
add
scas
fists
jns
pushf
enter
xorl
enter
pop
repz
int3
lods
repz
pushf
inc
in
push
xor
and
mov
insl
jns
out
pop
es
enter
cmp
xor
add
add
mov
and
xor
lds
out
or
fadd
mov
push
fnstsw
xor
pop
pushf
ja
adc
inc
cmp
test
mov
or
fdivrl
jne
fisttpl
scas
cs
mov
sbb
ret
and
insl
orb
enter
lcall
inc
outsb
mov
ficompl
pop
lret
jge
inc
and
and
cmp
dec
jp
in
adc
xchg
sub
inc
out
rclb
outsb
mov
repz
int3
adc
xchg
test
sahf
icebp
mov
icebp
mov
adc
xchg
jo
sub
scas
pop
xchg
jge
adc
outsb
adc
xchg
inc
pop
jl
jno
or
jns
xchg
leave
adc
dec
jnp
sub
jle
mov
ret
xchg
ficomps
mov
pop
adc
mov
sahf
push
inc
cld
fwait
int
adc
xchg
push
lea
sbbl
mov
inc
aas
dec
in
mov
cmpb
adc
xchg
push
lea
sbbl
mov
inc
aas
repz
int3
adc
xchg
test
div
mov
icebp
mov
adc
xchg
push
jge
mov
or
syscall
popa
cld
or
xchg
leave
mov
int3
add
dec
sub
xchg
push
sub
inc
push
xchg
leave
push
cmp
cs
jnp
mov
push
jle
xlat
jb
or
test
adc
xchg
leave
adc
xchg
leave
adc
xchg
leave
adc
xchg
leave
adc
xchg
leave
adc
xchg
leave
adc
xchg
leave
adc
xchg
leave
adc
out
es
lret
mov
aad
push
sbb
out
dec
pushf
lret
mov
aad
push
sbb
out
cmp
aad
push
sbb
cld
leave
fsubr
inc
sub
test
sti
sbb
aaa
out
pop
jo
fbstp
pushf
mov
adc
cltd
add
mov
insb
das
enter
imul
or
mov
xor
xchg
fnsave
lahf
jbe
mov
insl
std
ja
sbbb
sbb
jns
scas
dec
jge
ds
push
sbb
sbb
loopne
xor
imul
repz
and
jecxz,pt
mov
jmp
xchg
xchg
or
adc
xchg
inc
insb
jns
xchg
push
adc
icebp
push
xchg
push
cmp
and
or
test
mov
mov
popa
repnz
sbb
adc
xor
ja
test
test
push
jo
pop
movsl
adc
xchg
and
push
leave
arpl
inc
cmp
js
aad
fwait
jo
in
shrb
xchg
leave
cwtl
lock
into
jno
outsl
sub
in
sbb
push
hlt
pop
jae
fistpll
xchg
jmp
mov
jae
lret
inc
ret
push
mov
inc
movsl
mov
mov
and
mov
add
mov
dec
mov
outsl
insl
imul
pop
xor
push
xor
sbbl
inc
sahf
stos
fs
mov
xor
lahf
lock
push
dec
out
xchg
popa
jl
xlat
test
adc
movsl
andb
scas
push
pop
xor
cmp
add
cmpb
pop
call
out
idivb
cmpb
mov
mov
call
mov
push
lret
std
sti
mov
mov
ja
pop
xor
fistpl
les
and
in
add
movsl
jp
aad
push
lds
cmp
inc
jno
mov
faddl
ficompl
push
xchg
aas
or
mov
test
std
dec
push
movsb
fidivl
aaa
dec
mov
dec
daa
inc
mov
jg
xchg
scas
and
inc
out
into
test
mov
in
bound
shrb
or
sarl
gs
cmpsb
xchg
cmp
fistps
xchg
enter
xor
jb
out
push
in
sbb
outsl
mov
in
xor
popa
add
mov
scas
imul
aad
adc
hlt
adc
jb
loop
icebp
mov
push
movsl
and
das
outsl
ret
mov
cmp
lret
xor
outsl
xchg
adc
lea
add
js
add
mov
jmp
pop
stc
lret
ja
jge
push
call
and
cmpl
shlb
gs
fsubrs
outsb
and
sbb
and
inc
jmp
lret
and
pop
std
loop
imul
cmc
push
inc
mov
cmp
jmp
push
lcall
outsl
push
mov
aaa
lcall
inc
cmc
nop
dec
stos
adc
or
call
pop
sub
push
sub
dec
hlt
imul
iret
dec
pop
pop
mov
mov
mov
cwtl
clc
jmp
sub
daa
inc
mov
js
xchg
lods
push
insb
sbb
arpl
and
movsl
cld
fldcw
push
leave
repnz
scas
jmp
loope
adc
pop
dec
mov
pop
adc
dec
into
jno
insb
xor
call
lea
cmp
adc
stos
bound
pushf
in
icebp
cmp
cli
insl
sbb
xor
outsl
repnz
or
les
push
les
sub
add
mov
jg
scas
imulb
cmp
jns
movsl
xor
add
sbb
pushf
pushf
add
sub
fisubs
jmp
xor
push
xchg
mov
mov
test
fisttps
mov
mov
xlat
outsl
xchg
clc
dec
dec
loopne
lret
int
cltd
enter
pushf
in
out
in
test
sbb
daa
popf
fistl
add
jmp
xchg
icebp
data16
daa
test
pop
adc
lret
xchg
inc
and
call
notl
ret
sti
in
stc
sub
and
scas
mov
sub
fsub
popf
call
pop
jb
inc
imull
pop
enter
nop
in
adc
addb
pop
jg
scas
pusha
dec
das
xor
cmp
out
ss
push
leave
cmc
inc
sbb
sahf
ret
fwait
lock
out
repz
les
stos
je
rolb
push
repz
in
mov
paddsw
adc
into
addr16
xor
es
insl
dec
mov
mov
or
pop
push
add
arpl
push
dec
sbb
xor
inc
gs
jg
or
push
inc
ljmp
adc
xchg
dec
adc
mov
stc
lods
jg
mov
fisttpl
int
repnz
lret
dec
sub
sti
stc
xchg
sarb
cmpsl
xchg
out
subl
sub
jae
daa
sub
popa
or
repnz
jbe
call
add
adc
sub
jp
cld
adc
sub
bound
or
or
push
jo
jo
les
ljmp
and
lret
adc
mov
gs
xchg
movsb
sub
data16
aad
test
jp
imul
inc
clc
stos
push
repz
imul
divl
out
clc
mov
or
mov
rorl
popf
xor
movsl
xchg
fucomp
andl
movsl
popf
imul
dec
push
inc
popa
mov
mov
cld
mov
roll
pop
lods
inc
cli
cmp
adc
das
std
test
pop
inc
pop
das
mov
jbe
jge
scas
icebp
cmpsl
shrb
adc
inc
adc
sti
insb
add
cmp
pusha
pop
movsb
aam
sub
mov
lcall
add
push
fdiv
js
repz
in
cld
popf
cmpsl
sub
mov
dec
aas
loopne
pop
cmp
inc
mov
scas
lock
hlt
or
xchg
fwait
fs
sbb
push
xor
nop
iret
std
into
cmp
push
mov
scas
push
cmp
repz
cmp
nop
mov
xchg
loopne
nop
jo
mov
cmc
sahf
sbb
jbe
ja
stos
lods
ficoml
or
mov
mov
sbb
notl
jmp
test
ret
cli
push
mulb
inc
mov
test
aam
fldt
outsb
addb
sbb
push
ret
ret
push
mov
xor
mov
pushf
stos
jmp
or
xchg
sub
mov
cwtl
imul
test
int
repnz
loop
test
int
es
lcall
add
icebp
xor
cltd
mov
mov
or
mov
bound
iret
shll
jns
mov
repz
fadds
lea
mov
push
mov
fistl
pop
and
icebp
xlat
popa
jae
ss
pop
cs
repnz
int
in
push
xorb
imul
mov
int3
popa
jl
adc
mov
cld
leave
mov
icebp
xor
adc
xchg
jecxz
push
mov
aam
push
mov
aas
enter
add
jg
clc
push
cmc
and
std
pop
sbbb
popa
cmp
ds
cwtl
orb
adc
and
dec
xchg
sub
xchg
loopne
jns
fwait
lret
mov
adc
sub
cmpsb
imul
push
lcall
fdivl
sar
shr
xchg
flds
bound
and
add
clc
mov
mov
sub
xor
mov
test
shlb
jbe
ret
xchg
sbb
leave
aaa
push
ljmp
outsb
out
xchg
push
push
loop
jnp
inc
enter
push
scas
out
pop
cmp
iret
push
stos
push
orb
dec
gs
push
sbb
inc
pop
cmc
and
shrl
shrl
aaa
or
xor
jne
sbb
scas
in
sbb
cmp
pop
pop
push
mov
jnp
fnstsw
xchg
call
or
xchg
jne
push
mov
mov
repnz
inc
jmp
mov
lcall
mov
xor
cmpl
pop
or
mov
addl
test
pop
push
adc
sahf
scas
dec
dec
jne
in
js
ds
sbb
pop
xchg
cld
cli
jl
out
xchg
add
stc
mov
lret
popa
insb
add
add
xchg
push
jg
adc
mov
rorl
xchg
jns
inc
xchg
ljmp
adc
cmc
push
in
add
cmp
mov
push
cmp
imul
mov
sbb
mov
jg
push
cli
adc
daa
push
xchg
outsl
jl
jae
xchg
add
or
sub
xchg
cmc
sbb
addr16
pop
mov
and
dec
les
dec
and
stos
dec
mov
nop
lea
dec
aaa
mov
sbb
cmpsb
cmp
adc
mov
jle
stc
mov
sbb
mov
test
adc
xorl
add
cli
mov
ret
ret
mov
hlt
mov
mov
arpl
nop
and
iret
aaa
in
cld
outsl
shl
lea
fsubr
icebp
fld
in
mov
jae
jecxz
dec
jns
shrb
das
add
push
jle
clc
inc
mov
pop
in
sbb
xchg
push
sti
imul
lret
shlb
sbb
loope
lret
shrb
in
mov
push
iret
addl
xchg
inc
add
in
and
arpl
lret
mov
sub
in
add
fidivrs
ret
fucomip
mov
lret
shr
cmp
daa
outsl
aas
xchg
and
inc
sub
lret
shr
mov
data16
addr16
fcompl
and
dec
popf
lods
sub
negb
rol
and
sub
xchg
cmc
aaa
int3
fwait
pop
jecxz
sub
push
shld
sbb
push
pop
int
cmp
push
jnp
jge
adc
ret
jb
xchg
and
clc
xor
cmp
cmp
jmp
sbb
stos
aam
adc
mov
dec
dec
lods
sub
push
adc
out
dec
shll
frstor
je
xlat
adc
and
xchg
adc
cltd
stos
sarb
sti
dec
cs
rclb
or
jno
or
adc
pop
js
mov
pop
and
mov
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
shr
lret
jns
leave
lret
rolb
add
xor
mov
push
hlt
sarl
and
mov
jecxz
xor
mov
push
hlt
sarl
and
sub
in
out
xor
mov
dec
hlt
sarl
and
cmpsl
jmp
in
jnp
xor
mov
or
sarl
and
mov
cmpsb
loop
insb
int
mov
pop
mov
mov
jge
icebp
fwait
test
or
mov
add
mov
and
cmp
sub
cld
or
add
repnz
sti
and
enter
xchg
xchg
insl
jae
imul
in
adc
aam
enter
lds
outsl
clc
inc
imul
bound
sbb
jecxz
mov
cs
js
outsl
out
pop
pop
cmc
add
std
inc
jno
dec
imul
and
adc
add
pop
mov
enter
mov
xlat
dec
ret
or
add
xchg
push
sbb
xor
xor
scas
adc
mov
or
ljmp
into
xchg
push
mov
lret
xchg
repnz
in
mov
andl
pop
aas
pop
xor
enter
xchg
arpl
into
and
imul
loopne
mov
rolb
pop
ss
movsb
adc
dec
in
ret
dec
lret
fwait
rcll
stos
dec
inc
adc
loope
xchg
xchg
jp
lcall
pushf
adc
cmp
in
mov
fcoml
imulw
cmpsb
mov
xor
dec
jecxz
sub
ss
icebp
sub
subb
incb
test
or
mov
std
pop
insl
stos
repnz
sub
popa
cwtl
inc
push
out
ret
push
xchg
arpl
std
les
inc
push
es
mov
shl
sbb
push
es
or
js
mov
xor
out
scas
adc
mov
xor
mull
sbb
mov
adc
rcrl
nop
mov
mov
stos
and
movsb
add
insb
pop
jb
shll
mov
xchg
pop
mov
lret
scas
subb
inc
mov
popl
xchg
mov
and
inc
push
xchg
inc
call
int
pop
mov
aad
inc
pop
scas
faddl
in
xchg
mov
mov
mov
push
add
add
arpl
iret
mov
pop
mov
ja
and
push
add
xchg
xchg
push
pop
aas
mov
xchg
js
callw
dec
iret
dec
inc
mov
lds
mov
rep
xchg
dec
lcall
push
and
aad
and
or
repz
adc
mov
fs
xor
jge
xlat
nop
rcrb
inc
cmpsb
push
insb
std
fiaddl
or
xchg
inc
clc
rorb
lret
pop
adc
cmp
adc
fs
shr
sub
pop
les
mov
push
es
cmp
xchg
mov
fildll
or
dec
out
outsl
jle
rclb
cmp
je
mov
sub
dec
repz
adc
mov
pop
mov
xchg
mov
push
mov
jae
test
enter
jle
mov
inc
fstl
pushf
sbb
or
lods
jno
pop
scas
pop
cmp
dec
inc
out
test
inc
popa
mov
jecxz
in
mov
loop
stos
push
popa
jle
mov
shlb
jmp
sti
lea
jnp
cli
fisubrs
xchg
push
pop
addr16
and
hlt
sub
sbb
pop
loopne
xchg
cltd
paddd
or
dec
xchg
in
jbe
mov
mov
pusha
enter
mov
popf
mov
push
pop
sahf
js
or
cmpsl
outsb
xchg
sti
mov
in
rorb
adc
out
or
das
jg
cwtl
repnz
cvtps2pd
cmp
and
adc
int3
ret
mov
jge
sub
adc
xchg
sbb
jl
ljmp
out
mov
int3
xchg
push
mov
mov
jmp
push
sbb
sbb
push
dec
ja,pn
aad
les
jle
roll
scas
mov
push
adc
cmp
inc
stc
gs
ja
test
dec
mov
outsb
push
gs
push
cmpsb
xchg
xor
jne
xor
mov
loope
or
fidivrl
pop
out
shrl
add
in
push
dec
scas
movsl
addr16
test
rol
enter
dec
mov
sbb
out
imul
mov
cmc
mov
push
lret
pop
popa
and
cmp
xchg
hlt
dec
xabort
mov
movsb
mov
sub
jo
add
push
mov
jo
hlt
insl
test
mov
dec
imul
outsl
iret
sbb
repz
jae
cli
add
mov
int3
or
inc
sub
jmp
xor
aam
in
mov
test
xchg
or
jne
jo
mov
mov
mov
into
pop
dec
aas
inc
out
lea
dec
or
je
mov
jge
add
jns
push
in
push
xor
aam
pushf
and
leave
or
fdivp
inc
dec
jg
mov
lds
dec
xchg
push
pop
jle
lods
adc
sbb
repz
adc
rclb
insb
ja
push
sub
movsl
std
or
pop
std
rclb
adc
out
test
cmp
sbb
loop
push
scas
mov
out
test
jecxz
dec
sbb
test
mov
scas
int3
mov
add
xchg
rcll
in
push
or
adc
out
jne
addr16
mov
cmp
jge
xor
jne
pop
xor
jmp
out
mov
ret
in
mov
or
mov
and
imul
out
xchg
pop
dec
cmp
mov
test
pop
movsb
push
pop
es
in
cltd
aaa
cmpsb
repnz
data16
in
jp
mov
mov
enter
mov
cmc
ljmp
lret
sbb
xchg
movsl
or
add
inc
mov
add
pop
cmp
mov
xchg
in
cmpl
aad
sahf
rcll
add
sub
pop
div
lret
push
sbb
pop
loop
cmp
nop
or
jnp
into
aaa
test
pop
add
shll
test
xchg
and
adc
sbb
rcl
lret
dec
mov
test
cmp
xor
fcmove
jae
dec
ljmp
and
mov
movsb
out
fnsave
scas
or
movsb
sub
adc
pop
lret
mov
cs
testl
lahf
hlt
shlb
dec
outsl
add
adc
and
cmp
cmpb
inc
add
or
fstpt
aam
mov
sub
sbb
mov
xchg
test
jecxz
and
sbb
fs
out
pop
sub
and
mov
sub
xlat
testb
test
and
push
sub
mov
adc
add
icebp
adc
pop
mov
fmuls
push
nop
imul
fdivs
ret
dec
fstps
lret
mov
aam
lods
push
pop
cltd
lock
push
mov
stos
in
rorb
ret
popf
dec
adc
jge
inc
loope
and
or
sub
loope
lods
jb
push
cmp
rcrl
jmp
mov
mov
dec
cmp
icebp
add
fstps
std
xchg
mov
jno
das
iret
mov
repz
push
sahf
adc
push
jb
pop
cwtl
xor
push
sti
cli
cmpsl
mov
out
repz
sub
xchg
cwtl
jne
inc
seta
adc
mov
push
out
pop
mov
xor
pushf
ljmp
pop
cmp
jae
inc
loope
adc
aad
sar
cmpsl
cmp
cmc
xor
and
pop
lahf
mov
fldcw
dec
jp
enter
add
xchg
push
mov
ja
lds
aaa
pop
ret
stos
jle
in
and
xchg
ds
arpl
push
insb
and
ret
jl
repz
mov
js
mov
pop
adc
ljmp
dec
mov
dec
fcmovb
pop
mov
dec
pushf
and
dec
orb
inc
dec
mov
inc
js
loope
adc
loopne
test
xchg
daa
ss
sbb
aaa
lds
xchg
push
adc
push
and
or
mov
loop
mov
hlt
mov
xchg
lods
xor
sti
roll
mov
add
cmp
inc
add
hlt
movsl
sbb
incl
enter
pop
mov
add
loope
out
inc
add
fistl
out
pop
mov
movsb
dec
pushf
inc
pop
pop
scas
push
movsb
cltd
pushf
dec
call
es
or
int3
stos
test
loope
mov
inc
lcall
wrmsr
stos
insb
pop
int3
clc
mov
inc
hlt
mov
xchg
stc
and
adc
adc
cmpb
clc
je
mov
cmp
frstor
shrl
movsb
push
pop
jo
jae
in
lods
mov
scas
lret
insb
jbe
sbb
cs
in
jp
mov
call
call
and
daa
cmp
aas
bound
pop
add
aas
inc
jle
jo
mov
sub
cli
sarb
jae
fcmovbe
lcall
lods
and
shr
mov
into
call
in
or
cwtl
adc
rolb
add
mov
jns
sti
lods
scas
sub
fsts
movb
stos
int
mov
dec
aaa
inc
lods
sbb
push
les
and
cld
jbe
je
jg
mov
stos
add
call
cs
push
and
push
pop
add
aam
stos
adc
sbb
cmp
mov
ret
rol
jno
addb
fwait
xchg
or
insl
lds
jg
mov
stc
xchg
out
mov
jbe
stos
outsb
sbb
scas
push
icebp
cmc
int3
ja
xor
sub
xchg
cmpsl
loop
addr16
adc
fsubrl
ja
cmpb
xor
cmp
jae
imul
mov
sbb
xchg
rclb
insb
sbb
nop
pushf
adc
mov
cmpb
mov
inc
jle
insb
sbb
push
xchg
clc
sub
lock
mov
or
das
adc
je
xor
mov
movsl
insl
addr16
lds
add
scas
push
mov
int3
rol
loop
sub
jns
das
jbe
ljmp
mov
mov
jg
daa
cltd
testb
sub
jmp
sub
loop
add
jg
ja
push
adc
les
pop
cmpsb
pop
mov
ja
leave
ja
aaa
mov
rcrb
imul
mov
mov
cmp
into
lcall
nop
ss
push
les
ja
jae
mov
lods
and
andl
pop
pop
jae
lea
dec
cmp
push
stos
xor
leave
es
sbb
and
push
xchg
rcll
inc
hlt
mov
fwait
xor
test
pop
outsb
push
dec
das
push
jmp
or
mov
call
pop
push
outsl
push
enter
or
fs
xlat
insl
adc
mov
rorb
daa
inc
mov
int
mov
popa
cwtl
cmp
jge
cmpsb
sbb
mov
xchg
push
leave
push
or
aas
mov
mov
hlt
mov
shl
cmc
sub
push
and
sbb
pop
sbb
loop
jle
lret
rcll
add
mov
lds
or
add
fcmovu
ja
cmc
cmp
xchg
ljmp
sub
jb
mov
jge
xchg
cmp
pop
ljmp
cltd
xor
lcall
adc
std
loop
adc
pop
mulb
ror
dec
inc
daa
test
pop
inc
sbbb
sbb
ja
icebp
xor
lcall
xchg
adc
lds
roll
and
jge
mov
ret
mov
sahf
call
mov
repnz
gs
cmp
hlt
mov
shll
insl
push
cld
push
adc
insl
aad
dec
in
sbb
popf
push
push
pop
sbb
cli
ret
js
add
cld
mov
iret
clc
stos
pop
lret
iret
sbb
pop
stc
addr16
jne
imul
jnp
xor
xchg
mov
sahf
aam
push
js
shll
xchg
aad
xchg
push
or
iret
cmpsb
sbb
xor
or
sahf
dec
outsl
imul
xor
add
sti
subl
loop
cli
pop
lds
jge
inc
ficomps
sub
mov
test
cmp
and
insl
jge
pusha
stos
adc
insl
jno
fwait
jg
loope
cmc
popa
jae
mov
cmc
xchg
mov
pop
lret
push
xchg
sti
lahf
insb
adc
adc
mov
mov
mov
xor
xor
mov
jb
dec
daa
mov
jb
into
xor
pop
test
int3
out
in
push
push
push
insl
iret
dec
das
mov
mov
ret
negl
ficompl
xchg
jnp
and
push
mov
sub
mov
and
pop
cmp
lock
stc
dec
fwait
clc
das
xchg
inc
lods
xchg
enter
xor
xchg
aad
imul
push
fldl
adc
mov
fistl
insb
mov
push
std
ffreep
push
push
lret
loope
cmp
jb
addr16
cmc
mov
jo
inc
dec
rep
leave
lds
pop
inc
leave
mov
fmull
jmp
pop
cmp
dec
fstl
aad
inc
aas
iret
add
mov
adc
daa
inc
xor
test
pop
int3
aaa
add
push
pop
scas
xor
sti
or
mov
pop
jge
pop
add
cs
or
push
xchg
or
and
shrl
repnz
sbb
fcmovnb
and
fildl
pop
fldt
shl
push
loop
stc
mov
xor
test
mov
cs
sub
rcl
add
sbb
cmp
shl
mov
sub
outsb
push
lea
or
repnz
test
dec
in
mov
clc
cmp
push
xchg
cmp
cmpsb
add
mov
clc
cmp
hlt
insl
fdivrp
mov
fldl
mov
push
jne
orl
mov
mov
ja
xor
repz
adc
push
mov
inc
hlt
mov
add
cwtl
push
fstpt
mov
stos
sub
sub
mov
aam
inc
loop
jmp
dec
hlt
mov
mov
push
pushf
adc
inc
hlt
sub
dec
lock
mov
int
jmp
jnp
testl
sbb
movsb
cltd
out
or
xor
xchg
clc
xchg
and
jmp
cmp
sbb
loope
jg
lahf
xor
dec
jg
lahf
xor
or
lahf
jg
sbb
pop
pop
pushf
sbb
sti
push
jle
inc
xor
call
sbb
mov
cmc
mov
add
into
sbb
in
mov
inc
and
inc
movb
adc
das
shlb
mov
inc
hlt
mov
mov
inc
hlt
mov
mov
inc
hlt
mov
inc
hlt
mov
gs
jg
ljmp
leave
arpl
push
imul
test
pusha
dec
or
cltd
sbb
mov
xor
inc
gs
ja
ljmp
int3
mov
lret
mov
jno
xchg
sbb
aad
imul
adc
mov
mov
inc
hlt
mov
inc
hlt
mov
mov
roll
sbb
std
testb
gs
jg
stos
insl
sub
mov
and
push
jns
xor
sub
pop
dec
ja
mov
inc
hlt
sarl
icebp
mov
mov
xchg
hlt
js
inc
sti
and
out
sbb
std
je
jno
sbb
std
sub
cltd
out
mov
sti
mov
lret
mov
in
scas
push
cmpsl
inc
mov
jg
loopne
or
cmp
fldl
mov
inc
hlt
or
imul
call
inc
sbb
sbb
cmpsl
ljmp
jb
push
and
mov
push
mov
jg
cmp
push
ss
xchg
sub
push
packsswb
test
jle
loop
and
cmpsb
jbe
jbe
sbb
jae
mov
sub
mov
into
clc
adc
xchg
imull
imul
cmp
mov
sbb
ffree
add
cwtl
jnp
or
mov
inc
hlt
mov
aaa
push
push
or
mov
in
jmp
sbb
cmp
push
bound
push
sbb
sahf
into
jno
push
xorb
lcall
jmp
xchg
les
popf
xor
inc
xchg
xor
mov
cmpsb
xchg
or
dec
jnp
cmp
push
out
imul
push
imul
cmp
test
cmpsb
aad
imul
push
cmp
pop
shl
cmpsl
xor
in
pop
adc
cmpsb
jo
ret
dec
icebp
sub
repnz
mov
ljmp
pop
sub
sub
shll
jmp
jo
ret
dec
lock
repnz
mov
ljmp
pop
sub
iret
nop
sbb
add
insl
push
imul
repnz
mov
and
inc
mov
jmp
mov
pop
cld
pop
inc
mov
mov
insl
push
mov
adc
push
jecxz
scas
xor
addb
jnp
pop
adc
mov
jg
mov
lods
ret
mov
outsl
sub
and
out
xlat
mov
movsl
sbb
dec
leave
mull
ljmp
mov
repz
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
xor
mov
or
out
psllq
xor
mov
fs
psllq
xor
mov
jb
sbb
push
out
psllq
xor
gs
sbb
or
psllq
xor
mov
jle
sbb
cs
fldl
dec
mov
mov
repnz
xchg
cmpl
das
xchg
add
fdivrs
mov
xchg
add
pop
mov
imul
bound
leave
or
xorl
cmc
or
aaa
daa
add
nop
mov
ljmp
jae
mov
sbb
imul
mov
aam
loop
and
mov
fmuls
xor
hlt
mov
in
sub
push
sub
push
repnz
add
jbe
add
sub
clc
xchg
adc
sarl
and
pushf
xchg
inc
jne
add
jns
out
fsubs
sub
icebp
stos
add
jo
fnstsw
jne
dec
pusha
cltd
sbb
fsub
enter
subl
mov
push
rorb
mov
insb
pushf
sub
cltd
test
push
add
push
mov
jge
aas
pop
scas
rcrl
pop
mov
jnp
test
js
icebp
push
add
and
mov
fwait
in
or
fwait
xor
mov
fs
mov
fcom
jmp
push
inc
lcall
xor
fs
dec
sbb
mov
mov
mov
push
cmp
cs
adc
cmpsl
loope
cld
adc
pop
or
mov
pusha
dec
incl
push
fisttpll
mov
dec
pop
cmpsb
fcompl
cmp
mov
sub
lods
jo
popf
dec
fstpl
push
imul
mov
aam
mov
in
sti
lock
insb
mov
push
popf
in
push
shr
lods
adc
cmp
repz
cmp
lret
or
push
mov
out
sub
roll
mov
aaa
pop
dec
dec
psllq
xchg
stos
push
test
fs
repnz
inc
hlt
push
pushf
mov
mov
rolb
xorb
sub
lret
aas
inc
inc
pushf
xchg
inc
jne
mov
mov
xor
jle
movsl
xchg
inc
inc
pop
and
inc
push
stos
lahf
jne
aas
es
icebp
sub
rcll
push
push
jbe
cmp
lock
mov
inc
xor
mov
mov
add
or
pop
cwtl
daa
jge
loop
scas
cli
mov
sub
ror
fsubl
lret
test
dec
mov
mov
popa
adc
aad
push
loope
cs
mov
hlt
jne
in
or
cld
movsl
jge
mov
cmpsb
scas
and
popa
adc
mov
or
push
and
jg
cmp
push
dec
and
aam
enter
push
in
sbb
or
pop
mov
dec
or
iret
pop
flds
mov
pusha
push
mov
mov
cmp
jo
sar
push
pop
pop
inc
iret
mov
roll
mov
cmpsl
hlt
cltd
or
stc
in
cmp
pushf
loope
in
dec
jnp
xlat
lahf
sahf
mov
imul
pushf
roll
lods
pop
xchg
jbe
adc
mov
mov
stc
int
xchg
test
sub
adc
cld
fs
xchg
out
sub
cwtl
mov
addr16
adc
scas
ss
call
in
adc
jmp
jle
nop
mov
mov
or
aas
and
iret
mov
jmp
push
sbb
jbe
je
loopne
into
and
test
xor
push
cmp
or
test
inc
addr16
in
jbe
mov
in
lret
add
xchg
mov
fs
sahf
mov
sbb
scas
pop
outsb
xlat
ret
call
mov
fwait
mov
popa
nop
jb
mov
add
pop
adc
fsubr
outsb
push
cmp
sbb
scas
or
push
dec
iret
ljmp
xchg
xor
cmp
bound
ss
inc
xor
dec
xchg
fimull
ds
jne
vpshlb
push
cwtl
shrl
jg
stos
jge
pop
lods
sub
sbb
daa
push
push
imul
ret
scas
mov
insb
dec
int3
adc
push
xor
jnp
cmpsl
test
lods
inc
sar
dec
out
jmp
pop
sbb
mov
xchg
add
bound
push
mov
sub
jl
loopne
push
cmp
cmp
cwtl
addl
loop
add
fcmovnu
sbb
jno
daa
pop
mov
cs
push
dec
mov
cmp
popf
ficomps
jno
push
dec
sti
mov
add
or
subl
inc
popl
xchg
mull
cmp
fsubp
ja
out
ljmp
dec
outsl
xor
inc
je
scas
repz
and
scas
and
cmp
sbb
xor
dec
int3
jb
dec
es
fnstsw
cwtl
mov
add
inc
jbe
pop
mov
inc
mov
cmp
test
rolb
jo
sub
pop
mov
sub
inc
cmp
js
mov
or
sbb
cmp
pop
movl
pushf
xor
fninit
jmp
or
jl
int3
test
push
insb
js
mov
in
shrl
pop
pop
aas
sti
rep
fdivr
add
cmp
adc
fdecstp
test
cmp
aas
mov
pusha
cwtl
jp
test
push
pusha
or
mov
cmp
movsl
add
or
sub
mov
cmp
pop
ds
xchg
stos
inc
fmuls
sbbb
in
sbb
incl
mov
repnz
data16
xor
ss
out
pop
iret
lock
push
loop
fwait
bound
dec
lods
stos
inc
sbb
data16
push
sbb
sbb
push
dec
out
jnp
orl
adc
cmp
pop
mov
fstl
enter
in
test
push
bound
adc
jg
mov
push
push
add
outsb
xor
dec
int
cmp
cmp
in
cs
mov
cmp
pushf
ljmp
leave
push
test
pushf
xchg
loop
iret
mov
xor
roll
jne
jg
pusha
jno
xchg
push
cmpb
cld
add
mov
arpl
fwait
imul
pop
shr
out
fs
ljmp
test
sub
test
imul
stc
xor
xor
xor
push
insl
xchg
xchg
call
dec
mov
js
push
popf
das
push
cmp
pop
into
fdivp
dec
out
fisubl
add
add
ud0
pop
outsb
sbb
sub
rolb
add
jmp
cltd
xor
aaa
and
xchg
jg
lret
mov
pop
inc
cmp
test
clc
data16
ret
test
movsb
mov
sbb
xchg
mov
sub
mov
or
test
shl
mov
cltd
add
and
cmp
in
lcall
orb
cld
and
xor
xorb
adc
pop
js
jp
popf
rol
mov
push
test
jmp
adc
mov
jmp
inc
or
imul
mov
in
fimull
mov
insb
xor
adc
inc
dec
add
aam
mov
push
inc
sub
ret
and
movsl
clc
je
pop
repnz
ror
xor
ficomps
xchg
ret
sbb
pop
pop
mov
out
lods
test
sar
push
enter
pop
aam
rolb
dec
push
sub
sbb
mov
shl
cmovp
mov
lock
imul
xor
push
insl
cltd
fucomip
jl
cli
and
fidivrs
mov
test
sti
mov
push
mov
jl
and
loope
ljmp
push
and
dec
mov
and
push
lahf
push
pop
inc
icebp
hlt
sbb
xchg
jmp
add
or
pop
lods
fldt
fldt
shrl
adc
or
cld
jge
or
cli
push
push
lret
xor
jo
daa
ja
fwait
loope
les
lret
push
js
fisubrl
out
push
jl
int3
lock
je
cmc
mov
cmp
inc
out
popf
push
pop
in
add
cmp
lods
cwtl
sarb
mov
bound
fdivl
sub
andl
data16
in
xchg
and
cli
jge
call
cmp
jp
popa
outsl
lods
push
pop
fdiv
int3
mov
outsl
mov
or
cs
dec
dec
jbe
int
pop
shr
adc
arpl
lea
sub
out
sub
popf
cmp
ds
in
and
mov
and
cmc
insb
and
jo
and
repnz
sub
xchg
and
push
mov
mov
xlat
jae
fdivrl
jle
minps
dec
push
push
adc
lea
mov
popa
icebp
jmp
nop
lret
jnp
push
testl
sti
sub
pusha
das
or
jb
lahf
ljmp
addl
cmpsl
jge
mov
pushf
les
mov
adc
fldcw
cmp
mov
add
arpl
push
adc
sub
pop
sbb
xchg
cli
jge
jbe
xchg
fisttpl
inc
adc
int
pop
sbb
sbb
outsb
xor
jae
dec
cli
mov
loope
cmpl
pop
xlat
gs
jmp
test
fstpt
pop
pushf
outsl
rcrb
faddl
jns
pop
lcall
flds
inc
std
ljmp
xlat
imul
dec
and
mov
or
xlat
ds
pushl
push
int
and
sbb
adc
push
push
lods
dec
stc
mov
out
call
cs
mov
mov
es
mov
dec
int
movsb
rcrb
aas
or
xchg
push
aas
xor
cmp
rorb
adc
mov
jns
lret
mov
fsubrs
je
out
push
xchg
pop
imul
push
xchg
and
xlat
fs
daa
push
sti
ljmp
or
mov
cmpsl
pop
lcall
xchg
in
adc
lods
cmp
fs
insb
repz
xor
les
adc
scas
test
ljmp
loope
push
inc
aas
add
add
es
push
xor
mov
shlb
scas
in
dec
lahf
in
sub
adc
mov
outsl
mov
out
stos
lret
scas
jp
sti
cmp
fcmovnb
and
jb
inc
loope
insb
xor
mov
arpl
mov
js
cltd
xchg
jmp
shl
mov
xor
fidivl
mov
push
pop
and
or
neg
out
repnz
add
cwtl
mov
ret
dec
nop
movb
jmp
jle
xlat
movb
mov
and
test
add
mov
clc
sbb
shll
xor
push
sub
movlps
sub
jno
test
pop
das
pop
es
repnz
call
pop
jge
pop
loope
cmpsl
les
insb
adc
movsl
fistpl
mov
mov
in
pusha
cmpb
jmp
pushf
adc
adc
cltd
jbe
sub
out
pop
in
inc
and
mov
int3
pushl
sbb
std
xor
shl
fdiv
push
loope
xor
mov
jecxz
inc
mov
out
mov
outsb
data16
call
dec
cmpl
lods
jle
xorb
repz
cli
push
add
cmp
mov
adc
mov
stos
pushf
das
push
and
adc
imul
sub
mov
jbe
pop
sub
dec
add
xchg
jnp
cmp
rcrl
out
outsb
adc
push
or
mov
pop
cmpps
xor
fwait
inc
jb
push
int
cmpsl
mov
jecxz
inc
les
push
add
fdivrl
imul
jno
jp
or
and
in
imul
mov
push
insb
test
mov
push
rorb
lods
jg
aad
and
push
rolb
in
pusha
fdivs
lahf
and
mov
jecxz
rorl
daa
or
mov
mov
jb
and
xchg
jmp
and
inc
sbb
sti
pop
push
loop
mov
fbld
inc
lahf
fcmovnu
push
test
lahf
jae
shll
ficompl
insl
out
push
jmp
cmpsb
ja
movsl
push
mov
insb
xor
sub
push
test
cmp
jl
or
push
lods
lods
mov
aam
lock
mov
xor
movsl
inc
sub
mov
sahf
cmp
and
test
leave
dec
cmp
imul
ret
int3
pop
mov
mov
iret
sbb
stos
fdivrl
pop
and
in
mov
pop
jbe
pop
mov
mov
daa
ret
aad
add
xchg
jmp
cwtl
pop
ljmp
lods
mov
xor
xchg
test
and
dec
mov
insb
xor
repz
incl
mov
cwtl
arpl
pop
pusha
das
pop
repnz
jo
popa
or
outsb
fildl
mov
cli
mov
je
test
mov
repz
mov
jnp
hlt
cmp
negl
cs
stos
fdivrl
pop
inc
sbb
xchg
mov
mov
fsubrs
mov
mov
xlat
movlps
jmp
dec
fdivs
lret
sbb
sub
xchg
jmp
fdivr
dec
xor
cld
dec
out
into
mov
ret
clc
push
xchg
sbb
mov
test
lahf
xchg
int
mov
cmp
and
cmp
out
in
mov
jne
leave
mov
addr16
lods
adc
cs
pop
insb
nop
mul
int
ss
pop
or
arpl
xchg
inc
inc
add
lret
stos
sbb
xor
inc
sub
sbbb
rorl
mov
dec
dec
negb
loopne
mull
dec
pop
sub
stos
fsubl
out
cld
sub
or
adc
jae
mov
xchg
push
sbb
push
or
js
mov
sar
push
inc
xor
lahf
and
movsl
add
repnz
stos
push
jno
mov
mov
mov
adc
sbb
jns
sbb
lea
mov
addr16
fwait
dec
imul
jge
sub
ja
pop
mov
xorl
xchg
xor
sahf
cmpb
enter
out
or
mov
sub
dec
lret
cmc
mov
add
add
adc
cmp
pop
mov
popf
das
mov
lods
push
fcomps
cmpsb
shl
ret
cmc
dec
cmc
mov
sbb
xor
mov
add
or
int
addr16
fsts
int
pop
pop
das
inc
stos
dec
cmpsb
lcall
pop
int3
in
mov
cli
sbb
push
pushf
out
jmp
mov
lcall
fucomip
icebp
mov
xchg
push
and
sub
push
stos
fcomi
ljmp
testl
call
test
push
pop
cmp
neg
mov
push
sub
pop
xor
fdiv
ds
sbb
clc
clc
ljmp
hlt
jno
clc
sub
pop
mov
imul
jo
dec
inc
hlt
dec
mov
jno
dec
pop
mov
ljmp
sbb
stos
fdiv
inc
adc
jno
jecxz
fimuls
mov
cmpsl
ds
arpl
fdiv
ljmp
fldt
fdiv
ljmp
hlt
outsl
inc
clc
pusha
xchg
ss
cmpsl
and
mov
adc
mov
je
pop
mov
stc
lods
test
sub
mov
pop
sti
adc
inc
scas
xor
mov
stos
fdiv
lcall
cmp
and
in
daa
or
adc
lods
lods
inc
sub
dec
inc
stos
fmul
adc
pop
jmp
clc
stos
fdiv
call
cmpl
clc
adc
adc
jae
arpl
sub
fdivs
loopne
pop
fs
pop
ja
ljmp
or
mov
arpl
ljmp
mov
push
sbb
arpl
fnsave
ret
sub
push
data16
xchg
lods
ss
fistpll
stos
fdiv
xchg
mov
mov
fldenv
lock
hlt
ljmp
hlt
ljmp
and
sub
cli
hlt
ljmp
xadd
repz
pop
scas
movsb
xchg
cwtl
fdiv
ljmp
cmp
fidivrl
scas
cmc
cmpsl
add
adc
repnz
fsub
push
sbb
adc
xchg
aad
or
cmpl
or
inc
mov
cmc
jecxz
mov
popf
scas
xor
mov
dec
push
dec
icebp
scas
or
add
xor
fcomps
je
gs
push
jg
call
addl
test
jne
std
or
repnz
xor
or
mov
mov
xor
inc
cmc
std
or
ds
mov
and
mov
inc
push
or
std
imul
into
leave
xchg
dec
subb
fsts
cmc
jle
out
std
or
inc
icebp
push
imul
lods
cmc
mov
cmpsb
or
and
sbb
stos
mov
out
cmpsl
push
push
stos
fucomip
insb
inc
fadds
fsub
mov
sahf
xchg
push
sub
and
xor
jle
sub
das
in
out
ja
scas
shlb
daa
and
stos
mov
enter
rorl
flds
inc
mov
cmpsl
gs
int
pushf
xor
jae
ja
pop
mov
mov
lahf
cmp
push
sbbl
loopne
ds
xsha256
cmpsb
push
setbe
ss
in
push
jp
push
push
jp
sub
lahf
push
inc
in
push
sub
mov
pop
les
outsb
pop
adc
seto
push
stc
lods
inc
adc
adc
mov
push
stos
ret
fs
add
xlat
sbb
std
setbe
pusha
push
gs
bswap
ja
sub
lahf
push
lret
xchg
popf
out
sarb
mov
mov
pop
rcr
mov
lret
add
jo
xor
push
fnstsw
pop
icebp
aaa
loopne
ds
test
sbb
jo
ds
nop
xor
outsb
pop
xchg
std
popa
fcom
scas
outsb
pop
out
mov
pop
dec
sarl
out
adc
icebp
outsb
aas
test
or
inc
jae
addb
and
cld
or
dec
dec
jle
pop
cwtl
scas
fnstenv
mov
adc
daa
enter
sub
pop
fsubl
js
insb
push
fwait
andb
lcall
xchg
sti
mov
loopne
into
xchg
pop
in
mov
cmp
rcll
fnsave
inc
out
mov
jecxz
mov
dec
lock
push
fwait
int3
je
xchg
mov
loope
push
push
lea
xchg
fisttpl
sbb
pavgb
fisttpl
sbb
int3
jmp
orb
pushf
rcr
and
imul
jl
dec
adc
pop
pop
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
xchg
sbb
in
into
and
xchg
les
pop
push
sti
stc
es
loopne
fdiv
loope
in
leave
call
nop
out
sti
out
xchg
aam
and
stc
in
jmp
and
clc
repnz
es
into
aam
mov
mulb
add
enter
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
fs
jl
pop
fnstsw
jle
pop
ficompl
or
imul
mov
mov
or
imul
adc
jo
pop
ficompl
or
imul
push
xchg
mov
ficompl
or
imul
adc
mov
pop
ficompl
or
imul
adc
mov
xchg
mov
or
imul
adc
mov
dec
or
imul
adc
clc
sahf
pop
ficompl
or
imul
fwait
pop
ficompl
or
imul
lcall
dec
ja
aam
mov
push
cld
loope
clc
andb
fnstsw
or
or
dec
pop
lds
bound
mov
push
dec
cltd
mov
sbb
push
lds
scas
fnstsw
push
and
gs
xchg
jns
sbb
xchg
dec
addr16
add
out
jns
cmp
dec
jo
xchg
xchg
jne
cmpsl
dec
jo
repz
or
jl
ret
insl
int
sub
test
insl
int
add
lret
sti
ja
push
jl
shlb
mov
jnp
adc
and
ja
mov
cmp
cltd
pop
push
dec
stc
ss
push
aam
mov
mov
std
sub
add
add
adc
insb
adc
push
loop
add
divb
sub
pop
gs
fstl
mov
and
lret
fidivrs
btc
pop
pop
out
out
dec
in
or
inc
push
sub
push
iret
iret
cmp
repnz
inc
push
push
cmp
mov
inc
aam
popf
cmp
dec
or
fiaddl
xlat
sbb
lock
stos
xchg
test
mov
push
in
jb
and
repz
ljmp
enter
lret
adcl
sbb
sbb
jge
mov
mov
out
mov
ljmp
dec
dec
cmp
xchg
push
ljmp
sbb
mov
repz
pop
lock
xor
inc
xor
push
fisttpl
add
fdivl
imul
aad
mov
or
cwtl
cmp
or
xchg
aam
roll
lret
mov
and
jle
data16
fs
and
std
xchg
dec
imul
pushf
lahf
sub
xchg
sub
je
in
fldl
in
adcl
pop
xor
js
insl
and
cmpsl
jnp
sbb
pusha
je
mov
lods
mov
fwait
sbb
cmp
cmp
andb
int3
dec
mov
ret
sbb
inc
mov
cltd
adc
pop
pushf
or
mov
cmc
mov
add
mov
pop
mov
jns
jbe
mov
mov
sbb
outsb
lods
xchg
orl
bound
loop
aas
push
fidivrl
and
push
sub
jo
shll
lods
cmpb
xlat
sti
mov
jl
pop
pushf
xlat
pop
push
sbb
add
mov
sub
sub
popf
lds
cmp
inc
sti
push
fistpll
xchg
cmp
push
mov
out
pop
mov
ret
rcrl
sub
add
xor
subl
pop
inc
std
insb
mov
mov
cli
cmpsl
dec
jns
xchg
iret
in
rol
in
xchg
mov
pop
cltd
lahf
or
inc
rorl
adc
icebp
test
insl
sbb
and
nop
js
mov
pushf
hlt
inc
sub
xor
popl
xchg
dec
push
add
out
rolb
cmp
jns
int
into
push
cmp
push
pop
stc
dec
stos
ficoms
or
xchg
bswap
add
shrl
imulb
cmp
das
mov
and
pusha
int3
mov
and
leave
loopne
pop
push
cmp
xor
mov
jge
fisubrs
and
mov
lock
stos
pushf
test
clc
mov
sub
add
in
into
fdivrl
sbb
mov
jbe
popf
arpl
xchg
mov
outsl
pop
ds
push
test
mov
push
and
aad
xchg
adc
push
dec
mov
sbb
push
loope
push
shlb
cmp
outsl
or
cmp
xor
popa
jle
mov
js
add
cmc
aad
das
fsubrs
sub
sti
adc
shll
mov
add
in
inc
mov
adc
movsb
xor
mov
jle
cltd
add
push
jle
xchg
mov
xor
aam
imul
dec
inc
push
dec
cmc
lcall
mov
mov
test
and
adc
daa
xchg
fisttpl
je
cli
and
cli
jnp
ljmp
dec
and
into
xor
iret
das
inc
jns
outsl
inc
mov
xchg
or
xchg
push
stos
stos
xor
lea
xchg
cmc
mov
sbb
mov
pop
or
bound
or
les
sbb
bound
in
rclb
and
push
sub
and
icebp
out
test
adc
or
test
test
dec
jnp
gs
fxch
dec
test
stc
hlt
je
std
mov
push
lock
mov
jns
test
js
vunpcklps
jecxz
shr
adc
ficomps
and
pop
test
xor
xchg
inc
fs
mov
or
scas
out
andl
mov
jo
mov
popf
lock
jae
sub
inc
ss
pop
cmc
sbb
int3
outsb
lret
pop
mov
cmp
or
jge
mov
pop
push
mov
jbe
mov
cmp
loope
adc
mov
cld
pop
loopne
cmp
pop
cmpsb
idivl
frstor
fwait
pop
inc
mov
push
inc
cld
jnp
mov
mov
sbb
int3
daa
jecxz
and
into
in
mov
sahf
adc
and
mov
fmuls
and
push
flds
loopne,pn
sub
jns
in
pop
inc
test
ret
and
mov
rolb
js
jmp
pop
jo
mov
leave
jecxz
pusha
test
jl
inc
push
andb
adc
push
clc
xor
sbb
jmp
add
sub
lret
divb
mov
and
stos
andb
faddl
cli
add
sub
push
scas
push
mov
cmpsb
fwait
mov
mov
sub
and
out
insb
nop
pushl
xchg
out
mov
push
sbb
jne
and
mov
inc
dec
in
mov
cmp
xor
cmp
sti
pop
sub
push
out
push
mov
or
in
jp
out
cmpsb
adc
arpl
or
jbe
cmpsl
jno
lahf
mov
into
pop
popa
mov
leave
es
push
scas
or
sbb
inc
push
adc
mov
mov
and
sbb
jne
in
sub
inc
repnz
ds
mov
aaa
and
popl
pop
adc
fnstenv
lret
jbe
cmp
xchg
xchg
sbb
out
int
cmpsb
sub
ds
or
adc
jg
push
das
xor
sub
cmp
int
mov
jb
jmp
or
or
and
imul
decl
jmp
inc
xor
sub
cmpsb
jp
xlat
sub
call
enter
xchg
ja
in
pop
jo
push
jge
popl
add
push
adc
insb
das
add
mov
js
xor
push
push
mov
insb
mov
lea
adc
xchg
sahf
aad
pusha
and
sub
or
cmpsl
push
pop
aaa
xor
js
sbb
fiaddl
scas
nop
subl
xor
mov
addr16
sbb
jl
jbe
xor
and
movsl
jl
cltd
notb
sbb
ss
mov
insb
jno
inc
cmp
les
filds
fcom
mov
pop
inc
imulb
mov
jmp
ret
out
jnp
cmp
out
or
mov
lret
jl
xor
cmpb
lock
in
push
pop
sahf
mov
and
mov
cli
mov
enter
sbb
lret
nop
push
int3
mov
adc
push
add
mov
jle
xchg
loop
and
repz
xchg
js
inc
xchg
inc
push
adc
add
test
adc
mov
dec
testb
or
xor
addr16
insl
cltd
mov
sbb
test
cmp
jns
jp
fistl
scas
dec
out
sarl
gs
shll
sbb
jnp
fidivl
mov
inc
adc
ss
enter
push
push
pop
jmp
std
dec
enter
int
jns
leave
mov
push
rcrl
rorb
cmp
jecxz
sub
rorb
inc
bound
data16
push
mov
mov
cltd
nop
movsl
adc
shrl
mov
addb
adc
loopne
inc
addl
in
ja
xor
push
mov
roll
lock
mov
movsl
div
sahf
mov
or
sbb
jae
xlat
dec
in
pop
lcall
adc
mov
out
popa
or
jmp
cmp
cmp
push
nop
pop
call
sub
push
das
fidivl
sub
sbb
mov
push
pop
jb
inc
jle
daa
lret
iret
sbb
sub
stos
std
lods
fcmovne
and
or
loopne
jne
push
xor
adc
cmp
fmul
jns
push
push
outsl
dec
notb
add
mov
pop
pop
xor
sub
shrb
sahf
int
mov
inc
mov
xchg
aam
dec
xchg
das
or
popa
cmp
jle
jmp
lret
pop
xchg
data16
rorl
jg
je
fstpt
test
nop
lods
outsb
aaa
in
xchg
mov
xor
sub
lock
fs
jg
dec
adc
mov
into
dec
xchg
inc
and
jp
xchg
mov
jbe
cwtl
repz
cld
inc
xchg
ja
dec
ret
sti
ss
into
scas
out
mov
adc
scas
out
loop
add
jg
imul
roll
das
je
and
inc
rorl
mov
dec
cmpsb
loop
scas
es
inc
lods
arpl
imul
sbb
and
xchg
dec
movsl
mov
test
sub
orb
mov
hlt
in
jns
movsb
aad
ja
adc
call
adc
and
lods
dec
fldcw
pop
xor
test
push
push
or
adc
fdivrl
add
push
ffreep
pop
pusha
jge
jb
cltd
std
mov
test
xlat
mov
mov
inc
push
jg
push
flds
ja
jmp
dec
cmp
and
jb
mov
jg
out
or
inc
cwtl
xor
rcrb
jbe
dec
inc
shrb
insb
addb
fcomps
jge
or
jle
dec
fsts
add
xchg
std
outsb
js
outsl
xor
out
cmpsl
int
mov
push
sbb
adc
aaa
int3
lds
pop
cmpb
jno
jbe
inc
pop
mov
stos
jbe
fildl
push
dec
pop
js
jmp
or
mov
notl
pop
test
mov
jbe
xchg
fcoml
ficomps
cltd
and
cmc
xorb
dec
dec
enter
out
pop
mov
lahf
push
insl
in
repz
push
ds
mov
ffree
mov
dec
push
adc
lret
jae
pop
jo
fcompl
lret
mov
fdivrs
decl
cmp
pop
out
stc
andb
mov
or
mov
rorb
nop
and
and
jns
push
rorl
inc
sbb
dec
and
pop
pop
xchg
cltd
les
pop
cmc
pop
jo
jno
shl
mov
adc
cld
sbb
pop
rcll
in
mov
dec
pop
ret
or
int3
jbe
rorl
ficoms
jno
xlat
xchg
xor
loop
sbb
pushf
lret
std
loop
pop
out
jmp
out
and
repz
daa
in
sbb
cmp
sbb
xchg
mov
imul
outsb
in
dec
fbld
aaa
mov
jle
jae
cmp
repz
bound
lret
sbb
mov
dec
jmp
mov
cltd
rcrb
inc
je
lahf
out
mov
xchg
jo
mov
adc
mov
jecxz
and
push
mov
movsl
pop
jl
xlat
leave
adc
sbb
sub
into
push
jecxz
mov
add
inc
adc
fldl
js
aaa
push
setnp
fwait
and
or
mov
lcall
fbstp
je
sub
es
scas
push
mov
jle
std
mov
repnz
testb
xchg
sbb
mov
ret
mov
repz
xor
mov
adc
stos
mov
orl
out
sbbl
pusha
cmp
xor
popl
je
adc
fisubrs
dec
arpl
jl
fs
fs
jl
dec
sub
outsl
adc
add
sbb
xchg
into
loope
enter
das
lret
je
pop
pop
mov
aaa
sub
lods
pop
sti
jl
push
pop
and
lds
andl
xor
outsl
pop
mov
sub
sbb
add
shlb
in
add
jnp
pusha
jb
cld
sbb
cmp
sub
negb
js
add
lods
jmp
pusha
push
push
inc
jno
xor
jmp
fucomip
loopne
sub
jp
adc
lea
sub
xor
fnstsw
fbld
inc
repz
push
fildll
cmp
ffreep
iret
push
or
push
aaa
and
sub
call
fs
out
push
xchg
stos
mov
sbb
push
in
addr16
push
sub
xchg
mov
cmp
fldenv
mov
dec
jo
mov
jl
in
jle
popf
jbe
xchg
fcompl
cmp
xchg
mov
js
fsubr
popf
pop
add
push
jae
ja
push
jo
ret
or
push
dec
or
sbb
mov
std
mov
in
jae
pop
xchg
adc
in
cld
enter
sbb
scas
mov
repnz
adc
stos
test
push
imul
shll
push
or
adc
adc
loop
and
sub
jnp
ret
addr16
pop
call
cmc
lea
xorl
adc
sbb
jecxz
divb
and
sahf
lret
or
xadd
xor
or
out
xor
mov
pop
inc
test
loop
aas
xchg
fildll
xchg
sub
add
or
fnstsw
inc
adc
push
pop
mov
mov
les
call
repnz
sub
or
push
inc
push
into
dec
mov
mull
leave
sub
out
push
pop
out
loopew
lret
cmp
repnz
push
fs
cmp
aaa
cmp
sub
xchg
xor
cmpsb
add
push
movsb
fbstp
mov
sbb
dec
arpl
mov
xchg
jl
cmp
xchg
lock
leave
mov
pop
ds
shlb
mov
sahf
fistpl
shl
jae
jp
and
shrl
or
push
dec
lcall
mov
xchg
pop
pop
xchg
das
push
jecxz
mov
sbb
lock
adc
xchg
subl
mov
nopl
aam
sub
sbb
xchg
mov
pcmpgtw
adc
scas
fsubrp
in
mov
lds
rcr
sub
add
adc
fidivrs
mov
cltd
mov
or
or
jmp
push
sti
mov
ret
sbb
or
jns
jg
add
in
clc
jmp
pop
sahf
outsl
push
sarl
outsl
xchg
jae
std
and
and
pusha
adc
dec
addr16
aad
pop
pop
mov
sarb
jp
xlat
fsub
ljmp
cmp
adc
rorb
xchg
jns
cmp
imul
int
sbb
pop
xchg
pop
push
fbld
adc
add
outsl
pop
push
mov
fwait
push
or
clc
inc
mov
cltd
sti
fwait
pop
sarb
in
test
sbb
insl
scas
loope
dec
jecxz
or
push
xor
lods
xchg
pop
lahf
ds
jb
mov
idivb
push
sub
cltd
loopne
aaa
cltd
mov
xchg
test
dec
popa
xchg
xchg
cmp
mov
push
outsl
adc
cvtps2pi
out
into
adc
and
shrl
sahf
adc
les
fs
andb
test
enter
jge
cmp
dec
sbb
inc
xchg
subl
inc
push
daa
aas
leave
inc
inc
lahf
mov
fwait
shlb
jl
cmp
cmp
scas
lcall
adc
or
pop
pop
stc
out
xchg
jo
mov
push
notl
cmc
ret
daa
loope
jbe
jl
jge
cmp
arpl
ret
adc
sbbb
adc
and
xlat
sbb
and
pop
inc
cmpb
xor
jne
xor
dec
or
arpl
xorl
cmp
es
adc
lods
pusha
jl
fs
imull
ret
xor
es
add
repnz
fdivl
pop
int3
pop
dec
stos
push
xchg
lret
mov
sbb
mov
addr16
sub
pop
push
out
fisubrs
adc
adc
outsb
insl
adc
mov
in
mov
jae
gs
mov
ja
mov
mov
cld
cmp
mov
jb
in
test
fs
and
inc
push
pop
test
jl
sbb
mov
aaa
cmc
add
push
pusha
adc
dec
int
or
mov
mov
sbb
xor
or
repz
push
adc
inc
fistl
push
mov
testb
pop
lock
sub
sbb
push
inc
dec
add
xor
imul
sbbl
xor
and
or
push
shrl
push
dec
push
jp
dec
jne
jecxz
aaa
mov
cli
jbe
gs
cmp
pop
fiaddl
jl
jb
mov
sahf
push
xchg
out
mov
jl
inc
sub
mov
inc
sbb
jle
mov
jge
cmc
mov
jb
add
out
inc
jp
jae
and
outsl
adcb
rcrl
xchg
mov
cmpsl
popa
adc
jge
inc
inc
add
add
ror
cmp
call
negl
mov
dec
leave
pop
cli
lock
je
and
shrb
out
sub
mov
rolb
into
imul
mov
cld
daa
int3
das
push
jmp
xchg
addl
or
pop
pop
lds
rorb
repnz
dec
or
adc
sbb
sub
in
pop
sub
movd
insb
cmpsb
xor
pop
mov
in
int
cs
ljmp
inc
and
mov
jbe
lods
out
push
add
outsl
aas
and
sti
dec
inc
and
stos
hlt
xor
jns
shll
cli
shlb
andl
fcmovne
ret
or
out
inc
jp
ret
mull
mov
call
push
jle
outsl
adc
dec
setl
in
rorl
mov
xchg
sub
pop
testb
push
xor
xchg
dec
iret
int3
fs
movsb
xchg
jno
cmp
mov
bound
xor
sbb
pop
mov
pop
pop
cwtl
pop
icebp
fisubl
iret
add
aad
jb
scas
pop
mov
aad
or
int3
pop
pop
pop
jne
enter
call
int3
iret
push
mov
push
popa
xor
mov
mov
in
test
push
popa
imul
pop
stos
mov
mov
push
xor
dec
sbb
andb
inc
sub
je
notl
inc
jbe
in
xchg
push
call
fwait
pop
imul
mov
loopne
and
push
xchg
in
ja
fidivrl
fs
mov
pop
jno
ret
mov
and
sbbl
rcll
cs
pop
das
fsubl
stos
pop
xrelease
imul
data16
fwait
mov
sbb
test
mov
push
aad
add
shrb
and
popf
ret
arpl
rclb
mov
sub
mov
or
ds
in
xchg
int
lea
lods
mov
sbb
out
or
jbe
push
roll
jmp
out
es
ficoms
sbb
mov
mov
mov
xor
jp
and
roll
sub
xchg
cld
add
out
fwait
push
xchg
jnp
ljmp
imulb
stos
jb
scas
mov
iret
scas
mov
cmpsb
pushf
hlt
dec
outsb
test
sub
daa
and
xchg
mov
fcoml
cmp
cmp
push
leave
vmread
das
mov
add
fs
addr16
mov
aaa
outsl
mov
loop
pusha
data16
pop
cmp
jl
hlt
ja
aam
sbb
push
or
xor
pop
das
or
insl
in
sbbb
arpl
xchg
pop
mov
popa
mov
dec
aaa
mov
push
and
aaa
push
test
xchg
cmp
add
pop
xchg
mov
mov
sbbb
lahf
sub
int
pop
pop
rcll
xor
rorb
push
mov
insl
pop
pop
cwtl
repnz
pushf
xchg
and
adcb
lods
add
and
scas
pop
fnsave
out
out
adc
lods
mov
mov
pop
jl
js
imulb
fs
lea
or
fisttpll
sub
test
mov
adc
clc
movsb
add
fstps
cmpsl
shrb
jno
add
mov
int3
rol
das
or
cmovnp
sahf
inc
test
jecxz
sub
push
mov
jg
dec
xchg
fimuls
fimull
sti
subps
es
mov
and
dec
pop
es
xchg
or
sbb
pop
mov
push
push
mov
dec
scas
lcall
pushf
sbb
stc
enter
insb
cs
add
lret
jl
sbb
dec
mov
rolb
daa
inc
cmpsl
jmp
mov
push
lret
insb
push
xchg
int3
psubsb
push
push
pop
sarb
in
imul
cmp
shlb
pop
inc
xor
mov
inc
and
push
inc
pop
sub
xor
in
and
jle
adc
lods
mov
push
fdivs
mov
bnd
push
mov
push
repnz
mov
mov
ss
sbb
xor
and
mov
jno
sti
jnp
out
mov
mov
movsb
jo
mov
lods
xchg
std
mov
arpl
sbb
leave
inc
test
ja
addb
dec
jl
insl
mov
dec
ljmp
jg
test
mov
out
aam
xchg
andl
pop
push
or
jae
lret
ja
test
and
add
cmp
ja
es
mov
test
cmc
inc
inc
dec
push
mov
ljmp
add
add
shll
jns
test
adc
xchg
xchg
loope
xor
pop
mov
sarl
cld
movsb
fs
lahf
adc
mov
inc
mov
test
adc
cmovns
in
fisttpl
jbe
ss
loopne
cmp
add
mov
pop
mov
fisubrs
daa
test
pop
mov
fs
push
adc
imul
mov
ljmp
pop
int3
jecxz
sbb
aas
xor
adc
repz
mov
mov
jecxz
insl
cltd
mov
add
xor
lds
push
inc
sbb
jbe
mov
lret
adc
hlt
jnp
cli
js
js
aad
mov
cvtps2pd
aam
xor
stc
and
in
inc
cli
sbb
adc
test
and
mov
dec
imul
aam
pop
xchg
adc
mov
add
xchg
push
mov
mov
sahf
jmp
dec
movsl
mov
shrl
fnstsw
jae
adc
xlat
pop
dec
aam
lcall
mov
adc
xchg
mov
adc
invd
movsb
mov
push
jo
pop
int3
adc
sub
push
imul
je
ljmp
mov
push
xor
insl
pop
in
sbb
fldt
jbe
fidivrl
push
out
pushf
mov
pop
in
pushf
mov
out
lret
arpl
lahf
mov
pusha
push
int3
push
bound
jp
mov
xchg
stos
jmp
cmp
jp,pn
pop
aam
sarl
aas
cs
pop
fistpl
aaa
je
ja
push
push
jecxz
ljmp
lret
add
mov
jl
imul
mov
inc
push
or
fwait
mov
add
popa
inc
jae
outsl
add
pushf
in
xchg
scas
or
jmp
pop
out
push
out
or
cmpsb
inc
push
aad
inc
mov
out
push
test
xorl
stos
lock
pop
dec
jecxz
xchg
mov
pop
jecxz
mov
ss
pushf
aad
jl
sahf
inc
fdivs
jp
punpckldq
sti
jno
cltd
mov
jecxz
fistl
inc
fs
sub
pop
lcall
xor
push
test
xchg
xchg
lret
into
insb
push
loope
sub
js
mov
out
vaddsubpd
xor
fimull
jnp
loop
in
add
hlt
mul
pop
sbb
stos
jmp
fsubrl
inc
insb
pop
xchg
pusha
pop
imul
jg
mov
les
add
addr16
cwtl
sub
movsl
clc
pop
mov
push
dec
lahf
or
jl
dec
mov
fdivl
fs
fsub
rcrb
pop
out
negl
cltd
inc
cs
lret
outsl
shrb
cli
xchg
inc
mov
or
and
lds
sbb
add
lods
idiv
mov
out
jne
sbb
or
cmp
xchg
jg
pop
adc
addr16
xchg
pop
xchg
sbb
nop
dec
adcl
jge
pop
or
dec
pop
into
test
call
dec
add
popa
or
cmp
sub
lock
xchg
mov
subl
fwait
mov
idivb
push
or
jl
lea
pop
jbe
shll
sbb
lret
test
sub
incl
ss
in
push
or
not
push
movsb
adc
movsl
dec
loope
std
shrb
mov
jmp
sti
je
xchg
and
ljmp
das
adc
jo
cmp
iret
cs
dec
inc
sahf
cli
xchg
daa
movl
fistl
xlat
or
xor
fwait
push
and
mov
int
stc
xor
mov
shll
sahf
push
or
aaa
cmpsb
scas
add
imul
stos
loop
ret
and
roll
popa
fs
mov
out
addb
fwait
shll
in
sar
dec
and
into
mov
mov
mov
mov
vpcmpgtw
addr16
mov
insl
popf
fcoml
std
repz
rcll
inc
test
shrl
jno
daa
fucom
into
sbb
lods
fcmovne
mov
mov
mov
dec
pop
sarb
jno
pop
mov
mov
repz
jbe
add
lea
push
add
mov
xchg
out
cmp
xchg
and
gs
jo
ja
mov
arpl
lods
or
xor
push
stos
mov
xor
movsb
jnp
sti
int3
ss
inc
enter
inc
sub
sbb
leave
push
sahf
lret
repz
pop
add
inc
aam
push
add
jl
js
sarb
xor
mov
dec
push
xor
mov
call
insl
dec
cltd
stc
popa
push
rol
loopne
sub
adc
mov
popf
adc
dec
push
repz
mov
add
imul
xchg
cmp
loop
jno
fidivrs
shlb
dec
sub
outsl
adc
mov
push
dec
inc
icebp
push
adc
mov
stc
lds
imul
imul
arpl
in
pop
or
jb
ret
aam
xor
inc
fbstp
adc
dec
push
outsb
in
mov
ret
xor
jmp
sub
mov
jl
in
jle
popf
jle
jo
push
and
xor
sbb
loopne
xchg
push
jo
push
and
cltd
push
inc
inc
icebp
push
cld
dec
or
nop
sti
jae
mov
jge
mov
fwait
stos
shll
fistl
mov
lcall
imul
js
in
jmp
cmp
sar
push
xchg
xor
push
add
scas
mov
lock
jns
jne
cmpl
adc
mov
lds
fs
pushf
jle
lret
push
test
repz
shll
mov
mov
sbb
jg
movsb
ficoms
inc
pop
aad
arpl
mov
jp
fwait
js
mov
mov
pop
addr16
add
push
pop
push
xorb
adc
movl
std
fsubrl
push
test
push
je
push
jo
mov
mov
jo
insb
les
fucomi
sbb
jae
inc
inc
fs
jl
daa
add
pop
ja
mov
or
adc
mov
aaa
mov
nop
inc
mov
sub
arpl
xor
mov
and
cmpsl
mov
inc
push
inc
jns
sti
lret
push
adc
vaddsubpd
sub
jg
jmp
fst
mov
fisubs
outsl
push
int3
lds
in
test
in
mov
sarb
or
cs
cmp
fstpl
adc
js
mov
pop
int3
loope
pop
jl
inc
repnz
xor
sbb
jb
stc
imul
jmp
lds
sub
mov
jns
xchg
push
sub
and
sub
sti
cmp
jns
jle
inc
insb
adc
pop
out
jp
aaa
xor
mov
fs
andb
test
enter
jge
cmpsb
mov
fs
jp
icebp
rcll
cli
adc
dec
imul
rolb
test
jecxz
dec
mov
jo
lods
jns
inc
add
hlt
mov
test
xor
adc
test
xchg
dec
jecxz
jbe
pop
pop
jl
repnz
in
ss
mov
jecxz
jmp
test
push
pop
and
adc
xchg
push
or
mov
repz
test
mov
mov
in
jle
mov
push
ja
sti
ja
test
pop
jl
ret
daa
imul
ljmp
push
xchg
inc
jp
pop
sar
sbb
lods
ficomps
xchg
push
cmp
int3
aam
lock
shrl
add
xchg
in
arpl
clc
lock
stos
shr
mov
dec
dec
mov
push
cmc
dec
push
in
adc
lret
ds
cmp
jnp
or
outsb
push
rorb
xchg
into
aam
jbe
cmp
js
inc
or
test
mov
xchg
pop
adc
mov
mov
adc
loop
mov
loope
push
scas
repz
test
sbb
test
js
sar
mov
sub
loopne
lcall
push
xor
and
jae
stos
mov
inc
jg
mov
sbb
xor
xchg
aaa
stos
push
pop
cmc
inc
jmp
push
dec
inc
filds
xchg
mov
mov
dec
in
rorb
or
or
pop
leave
jbe
add
fucomi
pop
repz
dec
jo
jne
ficoms
push
sbb
jne
fimuls
pop
out
xor
cmpsl
insl
stc
ret
dec
pop
cmc
mov
add
insb
lds
lods
push
icebp
mov
push
test
std
iret
sti
cmp
out
dec
jp
xor
jl
adc
push
enter
addb
lods
outsb
pop
int3
sub
xor
add
mov
jnp
fs
les
sahf
dec
lods
sbb
fdivrs
dec
fsubrs
hlt
push
es
inc
movsl
add
out
push
or
add
jp
lds
loopne
mov
clc
xor
jg
mov
cmp
adc
fsubs
push
xchg
add
shr
imul
push
movsl
mov
xchg
popf
test
jp
into
cmp
mov
dec
in
pop
lcall
cld
imul
inc
sti
sbb
out
pop
cmove
ret
sti
int
mov
lahf
call
popa
sub
dec
les
jo
ds
and
lahf
mov
imul
mov
xlat
lock
push
cmp
xor
jo
push
sbb
mov
inc
xchg
lds
xor
lods
aad
es
test
sarl
loopne
push
lcall
pop
ja
jae
cmpsb
ficoml
mov
dec
out
icebp
push
push
mov
loop
je
lahf
jns
jne
xchg
fldenv
lcall
mov
mul
dec
ja
int3
mov
addr16
adc
inc
mov
mov
inc
jns
arpl
imul
sbb
call
divl
mov
jae
cmc
dec
flds
fbstp
outsl
jae
daa
in
fisttpll
imul
xchg
mov
jle
sub
mov
movsl
icebp
xlat
cmp
xchg
inc
scas
out
lahf
or
mov
stc
xchg
xor
jne
xchg
mov
cmp
jp
mov
add
stos
or
mov
sbb
int3
mov
mov
lods
mov
jae
lea
fcmovu
jecxz
mov
or
xchg
loopne
mov
and
imul
imul
in
dec
xor
jp
adc
addl
pop
sub
jns
dec
fs
dec
js
push
hlt
fistps
in
pop
es
faddl
push
push
aas
pop
repz
pop
adc
cs
pop
xchg
and
dec
or
adc
imul
adcl
push
loope
inc
adc
enter
pop
mov
xchg
cltd
pop
sub
inc
outsl
inc
inc
push
in
xchg
cmpsl
sbb
cmp
xchg
out
scas
and
nop
sarl
mov
jp
mov
mov
mov
cld
cmp
lcall
push
and
pop
shll
mov
sub
je
cmpsl
adcb
inc
add
sbb
fdivs
insb
jge
jnp
cmp
push
bound
ret
sub
les
out
cmp
push
dec
test
adc
loop
jb
sbb
push
cmp
scas
jl
sbb
or
pop
jno
dec
in
test
fidivrl
mov
sub
les
add
jb
mov
xor
stos
pop
push
push
push
push
mov
jl
mov
aam
lret
stos
mov
jl
mov
xor
dec
push
ret
mov
dec
sub
jg
rcr
fsubs
ljmp
lret
stos
mov
sub
mov
out
or
out
imul
xorl
sbb
jl
fs
mov
shrl
adc
mov
out
outsl
or
mov
fcmovu
mov
sub
mov
aam
gs
sub
mov
popf
dec
popa
xchg
pop
cs
mov
out
pop
xlat
jl
popa
mov
dec
cmc
sbb
fcompl
lahf
pop
sbb
sub
xchg
jle
sti
mov
add
fs
jl
ds
js
ficompl
push
jbe
jl
xlat
jl
pop
and
jp
mov
dec
xor
add
data16
or
adc
cmp
lods
jl
fs
dec
sbb
scas
je
sub
or
push
fs
ljmp
out
inc
sbb
inc
jbe
mov
cmp
lods
mov
repz
scas
adc
sbb
popf
ret
or
xchg
pusha
pop
push
push
nop
add
and
pushf
xchg
mov
cli
stos
mov
xchg
loop
mov
pop
ficompl
enter
jmp
imul
add
ficoml
loopne
dec
sub
bound
jbe
cld
sub
and
inc
hlt
push
pop
inc
jg
outsl
fistps
ja
scas
jl
ja
jl
fs
test
loop
in
imul
jbe
bound
jmp
adcb
push
popa
ret
int3
sub
pop
outsl
jbe
pop
fdecstp
int3
repz
push
or
pop
jne,pn
mov
jg
mov
repz
stc
pop
bound
inc
orl
repz
mov
hlt
push
sarb
cmc
stc
sbb
jl
push
cltd
shrl
jl
scas
add
inc
push
rclb
mov
fstp
pop
pusha
pop
pop
push
and
jno
dec
and
lahf
in
imul
stos
fldl
add
fistpl
jno
fstpl
xor
fstpl
adcb
pop
addr16
cmp
fsub
loope
pop
jo
and
in
adc
adc
lret
daa
pusha
mov
jecxz
repnz
push
jo
push
cmc
int
push
icebp
jl
loopne
or
jl
jo
es
leave
push
xor
mov
pop
mov
add
lret
and
in
fadd
fcomp
loop
leave
xchg
xchg
lods
xor
push
mov
mov
test
xor
cltd
stc
loop
dec
insl
xor
mov
mov
adc
mov
or
add
dec
jo
scas
xor
cs
mov
mov
push
jns
imul
test
je
and
mov
sbb
jbe
xchg
cmp
out
fisubs
dec
adc
cmpsl
push
cli
lock
xchg
orb
xchg
js
loope
push
add
adc
fs
stos
out
int3
out
shll
in
orb
pop
jo,pt
inc
enter
aas
mov
sti
int3
in
cmp
pop
fistpll
flds
imul
jbe
mov
cmpsl
mov
mov
pop
or
push
cwtl
lret
mov
imul
aam
push
fildll
pop
push
data16
xchg
add
or
xor
daa
push
leave
cmpsl
mov
add
leave
xchg
lods
mov
mov
fiadds
dec
jnp
in
push
mov
dec
lcall
mov
lock
addr16
sbb
mov
rcrb
adc
insl
movsl
push
cmp
xor
imul
cltd
lods
add
mov
or
ficoml
leave
xchg
mov
scas
rcll
push
push
in
pushf
push
mov
rorl
mov
jno
bound
add
inc
orb
imulb
cmp
inc
xcrypt-cfb
cmpsl
es
fcmovnu
push
mov
movsb
xchg
data16
mov
out
xchg
pop
fisttps
sahf
mov
and
clc
or
mov
ret
cs
cmpsl
jg
and
push
mov
out
dec
mov
cmp
add
jo
cld
mov
pop
add
mov
adc
xchg
adc
mov
jnp
lret
jp
cwtl
push
mov
outsb
xor
mov
or
filds
loopne
add
aad
jle
in
mov
sbb
mov
std
and
xchg
adc
add
sar
aas
adc
xchg
cmp
clc
into
out
fnstsw
mov
stos
ret
jno
inc
fwait
push
mov
ja
lret
sti
xchg
add
ss
aas
pusha
sarl
fs
dec
xor
aam
xor
dec
lret
mov
fxch
aam
aas
fwait
mov
add
fcoml
sub
mov
dec
xor
inc
push
addr16
or
push
aam
mov
sbb
push
lcall
out
minps
repz
pop
push
mov
adc
testl
pop
mov
jl
sbb
inc
aaa
dec
xchg
mov
mov
movntq
jnp
stos
sarl
stc
pusha
lods
dec
mov
and
adc
dec
mov
repz
es
outsl
lret
stos
or
cmp
int
push
adc
or
std
cwtl
xchg
cmp
pop
adc
nop
pop
ljmp
push
test
mov
or
clc
mov
mov
xchg
pop
pop
adc
inc
jno
mov
repnz
dec
inc
mov
lcall
jne
aaa
and
cmp
addl
cmp
fcom
outsl
and
pop
outsl
inc
ret
sar
jb
insb
xor
sub
sub
pop
lds
mov
jno
add
adc
dec
sbb
cmp
mov
aad
sti
aam
mov
nop
ss
xchg
popf
ret
fbld
inc
lea
xor
out
mov
cs
stmxcsr
ret
testl
dec
in
push
jae
adc
or
adc
lds
mov
orl
rcl
lret
push
dec
enter
or
pop
cmp
mov
jmp
sahf
mov
adc
cmp
enter
int
mov
rcrb
mov
mov
xor
stos
in
xorl
sub
sbb
out
les
mov
clc
int
fisttpl
dec
adc
xor
jno
mov
add
sarl
cld
imul
jns
xor
mov
loopne
neg
inc
lret
mov
mov
sub
xchg
push
adc
jbe
in
inc
lea
in
jmp
jo
cmp
pop
into
ljmp
fs
jne
mov
leave
xchg
inc
xchg
mov
lcall
fs
popf
aam
leave
shll
lret
mov
push
cli
mov
and
adc
mov
mov
mov
and
lret
aaa
and
jl
test
jp
in
std
mov
sarl
push
test
dec
pop
sub
in
pushw
add
push
fldl
scas
xchg
dec
sub
dec
pop
sub
sbb
jp
jg
popf
sahf
inc
icebp
lcall
sub
int3
data16
mov
adc
jb
repnz
in
or
cwtl
dec
xchg
popa
add
fstpl
cmpsb
repnz
es
mov
cltd
lcall
push
fldenv
lahf
aad
cmp
cmpsb
adc
push
out
in
shl
in
jmp
addr16
cmpsb
bnd
dec
icebp
xor
sbbb
fstpl
ljmp
out
shl
out
incl
push
pop
loopw
sbb
jnp
jecxz
sub
pop
fstpl
dec
mov
dec
pop
mov
adc
loopne
pop
jns
dec
call
pop
pop
frstor
fstpl
xchg
mov
and
mov
sbb
jnp
mov
fstpl
ljmp
pop
dec
icebp
sbb
add
jno
adc
gs
outsb
xchg
and
arpl
mov
lcall
fdivrl
hlt
xchg
addr16
sbb
sbb
mov
pop
popa
fstpl
cmp
out
or
je
gs
dec
jne
adc
fstpl
jnp
lods
lods
shll
adc
jo
dec
bound
push
js
pop
fnstsw
mov
fldenv
push
fstpl
into
aad
jnp
lock
pop
mov
loope
adcb
fstpl
jmp
sbb
mov
cs
imul
imul
lods
pop
popf
in
xor
mov
js
pop
out
jbe
bound
pop
fnstsw
mov
fldenv
push
fstpl
mov
cmp
push
mov
ljmp
dec
pop
jmpw
sbb
mov
ss
imul
imul
lods
adc
push
fimuls
mov
fdivrl
lcall
cmp
jne
sti
sbb
aad
xchg
and
outsb
push
xlat
ljmp
cmp
iret
lock
xor
xor
xchg
lret
jae
js
inc
sub
pop
xlat
mov
push
adc
mov
xor
mov
cmp
mov
dec
mov
les
mov
and
xlat
add
mov
subb
arpl
mov
sbb
push
clc
sbb
mov
mov
push
jg
fistl
mov
jecxz
mov
cmp
mov
dec
mov
push
jno,pt
sbb
or
add
sub
lahf
fnstsw
pop
je
out
sbb
xor
or
call
pop
mov
mov
jmp
dec
mov
sar
sub
inc
mov
fstl
fstl
xor
adcb
out
pop
xchg
mov
mov
in
xlat
js
lahf
mov
push
fldl
mov
push
mov
js
dec
cmp
mov
lahf
fwait
mov
fstl
adcb
addr16
inc
ja
movsb
aam
jecxz
sub
xchg
lret
jae
out
push
xchg
lods
push
mov
aaa
sti
ficoml
aas
movsb
adcl
inc
push
jo
rorl
int3
jns
pop
bound
cmp
call
lds
std
push
push
push
fstpt
sarl
cwtl
adc
fistpll
sarl
cmp
jp
cmp
jp
cmp
jp
cmp
jp
cmp
jp
cmp
jp
cmp
jp
cmp
jp
scas
xlat
jp
dec
adc
push
sar
pusha
imul
test
adc
arpl
and
adc
bswap
xchg
mov
lock
adc
call
fs
rorl
pop
in
xchg
sbb
mov
dec
dec
test
mov
mov
mov
cmc
inc
sbb
add
std
xchg
sub
aam
adc
jns
cmp
inc
loop
xchg
push
shl
dec
loop
movsl
jge
inc
jge
cmp
mov
stos
idivl
mov
stos
lret
ret
mov
inc
mov
jmp
shl
aaa
das
sahf
fcoms
in
in
mov
in
jo
gs
ljmp
lea
pop
jmp
adc
pop
xlat
cli
and
inc
mov
ret
mov
xchg
fsts
divb
mov
scas
gs
dec
jecxz
or
popa
jae
ret
sub
js
flds
mov
ret
jl
cmp
mov
adcl
mov
mov
xor
aad
in
repnz
mov
dec
or
repz
pop
dec
dec
sahf
outsb
jle
rcrb
push
shl
neg
lods
fadd
aad
test
cmp
ljmp
cmp
xchg
push
cmp
adcb
mov
mov
pop
aas
lea
add
mov
or
ret
adc
int3
shll
lcall
in
stos
adc
fidivs
sarl
inc
mov
shll
add
ljmp
mov
ret
or
cmpsb
mov
mov
inc
adc
mov
inc
xorl
and
sarl
pop
pop
stos
nop
mov
adc
xor
or
out
arpl
ret
xor
or
xor
arpl
mov
iret
xchg
xor
aaa
cmp
pop
subl
inc
stos
jne
mov
cmpsb
into
jge
ret
inc
push
lds
pop
xor
jnp
add
add
dec
les
ja
jecxz
out
jnp
push
jge
out
jecxz
mov
outsb
cltd
mov
adc
inc
cld
popa
fistpll
sarl
pop
insb
in
test
cmp
xlat
push
mov
sub
lock
das
insb
sti
xor
mov
mov
test
mov
cmpsl
sub
iret
push
cltd
out
cmc
jg
rorl
push
daa
add
cld
and
mov
mov
xor
add
in
je
xchg
pop
and
jmp
movsl
push
push
push
popf
pop
pop
inc
lock
jae
push
inc
imul
sub
jb
insl
sbb
pop
mov
jbe
arpl
push
jp
pop
in
pushf
push
jle
bswap
aas
xor
sub
pop
mov
or
das
jg
cmpl
stos
js
inc
mov
outsb
loop
ror
stc
fcmovu
mov
ljmp
pop
into
mov
inc
fidivrs
int
bound
cmp
push
jg
je
cmp
andl
xchg
mov
cmp
fstpl
or
rcrl
push
mov
mov
sbb
jecxz
xlat
outsb
outsb
inc
sbb
cmp
cmp
testb
inc
es
jl
inc
mov
pushf
and
ds
xor
ja
mov
pop
pop
out
mov
idivb
xchg
aam
and
pushw
pop
mov
test
sub
or
rcrl
icebp
adc
jo
push
add
les
cmp
pop
mov
xor
call
sub
mov
xchg
jl
add
mov
push
jge
add
cmp
ljmp
mov
das
js
adc
popa
repz
test
adc
and
clc
pop
mov
and
xchg
jl
cmp
sbb
push
jmp
add
sub
cmp
jae
cmp
es
inc
outsb
mov
pop
insl
mov
fwait
pushf
xor
sub
insb
dec
cmp
lret
xor
movsl
push
cmp
or
push
or
dec
xor
xor
cmp
cmpsl
popf
and
xor
insl
sbb
in
fiaddl
mov
imul
lahf
or
cmp
push
and
je
loope
faddp
xor
je
es
xchg
and
neg
clc
mov
ficoml
cwtl
mov
sahf
outsb
gs
fisttpl
lcall
leave
dec
xor
enter
js
lds
iret
lods
xor
xchg
test
xchg
cmp
aam
or
xchg
mov
lcall
fstps
mov
sbb
ret
pop
mov
shll
je
scas
lods
sbb
into
mov
jg
cld
mov
inc
mov
xchg
cwtl
xor
das
push
push
sbb
pop
sbb
scas
ds
mov
pop
dec
jmp
hlt
in
or
jle
lcall
inc
clc
sti
test
and
loopne
lods
mov
dec
mov
lahf
cmp
push
in
fists
cmp
dec
shrb
dec
fdivs
fistpll
jp
lock
inc
adc
movsl
leave
std
add
mov
das
in
or
jae
lahf
imul
shll
cmp
sub
loopne
leave
shl
not
jp
insl
rolb
aad
xor
cwtl
popa
mov
push
mov
arpl
nop
xor
xchg
bound
shlb
insl
ss
jg
adc
mov
stos
int
outsl
fistps
cmc
jo
inc
hlt
ds
sar
push
popf
mov
out
xor
mov
rorl
mov
lcall
sbb
orb
sbb
fst
mov
fdivr
and
jmp
dec
inc
jmp
and
cs
adc
in
gs
cmp
cmpb
adc
leave
sub
or
xor
pop
add
push
mov
jecxz
sarl
sarl
daa
jno
sbb
das
test
adc
out
lds
inc
inc
ffreep
sti
stc
jmp
fdivrl
rorb
inc
test
insl
imul
fists
mov
lods
mov
inc
push
pop
jle
inc
jecxz
aaa
leave
push
dec
inc
and
push
jno
cmp
dec
mov
sarl
aaa
arpl
das
test
aaa
fmull
data16
adc
mov
cmp
mov
mov
jne
cmp
dec
fdivrl
sarl
mov
iret
jp
cmp
ja
adcl
test
inc
mov
cmp
dec
loop
push
js
cmp
pop
cwtl
imul
je
bound
ficomps
mov
cmp
jae
cmp
jno
push
inc
out
fsubr
pop
rcrb
rcll
jmp
pop
mov
xor
sub
movsb
jecxz
jnp
enter
test
in
sub
add
leave
cltd
mov
or
js
lods
pop
insb
pop
xchg
xor
lahf
in
xchg
mov
jp
roll
mov
add
mov
or
and
mov
dec
test
test
aam
sbbb
cwtl
mov
push
inc
mov
mov
mov
xchg
sbb
pop
test
pushf
stos
jg
push
stc
pop
in
xchg
jnp
mov
movsb
cli
iret
lea
iret
cmp
add
movsb
mov
push
stc
icebp
loopne
stc
icebp
loopne
stc
icebp
loopne
stc
icebp
loopne
stc
icebp
loopne
stc
sbb
mov
icebp
call
loope
rcl
fisubs
hlt
rcr
hlt
out
cwtl
cmp
loope
xchg
in
and
inc
mov
or
out
lds
in
cmp
mov
int3
rcr
hlt
ljmp
popa
fcmovnu
jge
ja
xor
dec
jmp
cmc
mov
pop
pop
inc
sbb
adc
lods
or
jbe
xor
jge
je
mov
pop
lods
mov
sbb
sbb
call
or
in
scas
jb
outsw
push
cmp
cld
or
ret
mov
arpl
push
mov
mov
in
test
insl
inc
sub
pop
and
pushf
mov
xor
mov
cmp
pop
add
fistl
mov
cmp
call
ror
imul
roll
push
jns
adc
jnp
leave
daa
sbb
test
insb
pop
lcall
loopne
jno
xor
mov
or
mov
mov
jp
dec
popf
add
dec
insl
arpl
mov
mov
pop
scas
mov
js
mov
and
mov
mov
dec
leave
and
adc
dec
sub
icebp
push
arpl
bound
ret
mov
lock
push
dec
xchg
mov
dec
lods
adc
xor
jo
les
adc
mov
popa
xor
and
call
ljmp
mov
cltd
nop
jne
movsl
into
loope
sbb
lods
paddsw
mov
pop
xor
xchg
mov
ret
loope
mov
inc
mov
or
out
push
inc
pop
out
xchg
js
jecxz
push
sbb
daa
cmp
fcmovu
push
insl
ds
xchg
aam
push
out
inc
mov
outsb
rorb
fdivl
push
cwtl
xor
addb
enter
std
stc
sbb
into
popf
sbb
in
lods
or
test
mov
and
xor
pop
in
loopne
sbb
int3
bound
cltd
in
std
repnz
mov
pop
pop
sub
js
insl
loope
inc
xchg
pop
in
adc
jge
add
xor
mov
popf
add
jne
inc
adc
adc
jne
mov
push
int3
pusha
je
lahf
jge
int3
out
add
test
fmull
dec
nop
mov
xchg
stc
sbbl
adc
cmc
cmp
cmpsl
push
lcall
sbb
sbb
mov
xchg
out
xor
pop
jnp
sbb
js
cmp
out
in
xchg
push
mov
mov
sti
ss
pop
mov
push
ficompl
mov
in
test
popa
jp
es
push
sbb
mov
xchg
in
rolb
or
repz
mov
add
pop
sbb
or
jle,pn
mov
leave
sub
xor
daa
rolb
cmpsb
and
addr16
insb
aad
adc
out
adc
mov
jmp
scas
xor
xchg
cmp
or
mov
loope
int3
or
ret
mov
inc
xor
mov
pop
push
loope
aas
inc
adc
cmpsb
pusha
pusha
fs
into
popa
jmp
adcb
ret
into
fwait
in
icebp
orl
add
orl
xor
js
mov
mov
stos
cmp
xchg
stos
or
in
popf
adc
sbb
imul
jns
stc
and
cmpsl
test
xor
cltd
scas
loop
notb
sub
js
or
pop
lea
fs
fwait
dec
lcall
in
punpckhwd
xchg
in
lret
pop
cmp
rcrb
cmpsl
jle
dec
sub
xchg
mov
push
push
mov
icebp
into
xchg
popa
mov
scas
pop
movsl
fiadds
movsb
out
je
xchg
in
dec
push
push
cmp
lods
loop
fsub
rcll
lock
mov
movsb
xor
loopne
out
addr16
movsl
jp
push
or
add
cmp
sahf
cmp
cmp
pop
dec
jl
daa
pushf
notb
mov
insl
dec
jmp
push
add
outsl
ret
mov
and
add
test
jns
ds
or
add
aaa
and
and
inc
sub
dec
and
mov
push
push
mov
pushf
pop
mov
aad
mov
cmc
fcompl
jecxz
rolb
lods
mov
fisubl
int3
push
ss
mov
divl
jno
mov
cmpsb
gs
mov
mov
cmp
adc
aad
sbbl
test
push
xchg
jo
pop
xor
fisttpll
aas
lret
lcall
mov
and
jnp
jge
and
xchg
sbb
dec
and
xchg
scas
sub
ret
cs
outsb
movsl
lcall
add
xchg
imul
das
movsl
sub
jle
sub
mov
loopne
push
sbb
inc
dec
xchg
das
clc
push
or
ljmp
or
fistpll
test
sbb
pusha
adc
push
js
cli
js
into
stc
push
jl
fmuls
sbb
dec
push
sbb
sub
sbb
or
bound
scas
pop
insb
push
filds
sbb
popa
mov
jbe
jb
jmp
jecxz
adcl
out
out
cwtl
sub
rcrl
jecxz
fstl
xor
dec
mov
sbb
mov
lds
aam
mov
subb
addr16
sahf
ja
ss
dec
ja
or
out
mov
cld
in
push
mov
pop
int
sbb
inc
and
sub
inc
and
ds
pop
sahf
jns
sbb
adc
cli
negl
cld
inc
cli
testb
or
xchg
ss
xchg
in
gs
mov
pop
les
rcll
inc
hlt
push
jb
out
mov
loopne
pop
mov
enter
inc
call
dec
dec
test
add
push
jge
or
pop
pop
mov
xor
or
clc
ret
mov
ret
dec
scas
pop
repz
inc
test
loop
sub
xlat
push
cmp
sbb
adcl
xchg
mov
xlat
sahf
out
popf
jbe
jnp
lcall
bound
icebp
pop
ja
aad
shl
test
stos
jb
shrb
rcrl
pop
sahf
cmp
mov
dec
cltd
lret
add
insb
std
sti
jle
dec
sbb
fwait
cmpsb
sub
pusha
cmp
cmpb
mov
inc
push
jns
mov
adc
cmp
inc
sbb
out
pop
cltd
dec
insl
sbb
and
xor
les
loop
ja
aaa
dec
data16
or
cmpl
xor
cmp
int3
jle
xchg
xor
aam
leave
test
mov
ss
cld
mov
cli
out
movsb
popa
dec
sarb
inc
loope
xchg
jg
adc
movsl
pop
xchg
push
push
addr16
or
sub
mov
lret
jo
div
loopne
test
pop
jae
loopne
aaa
cltd
and
jno
pop
repz
dec
pop
outsb
mov
dec
mov
inc
and
xor
test
out
call
fiadds
jge
sub
push
lahf
sti
dec
sub
jge
xor
rolb
scas
lods
push
and
push
loope
pop
pop
int3
xchg
jo
in
lahf
xor
mov
sbb
in
ljmp
lret
mov
push
lods
repnz
or
xchg
xor
dec
cmp
ds
aas
and
shlb
js
xor
lods
movsw
push
xor
icebp
loopne
frstor
or
lahf
loop
cltd
insl
insb
ret
addb
fstl
xor
fldl
mov
jp
mov
lods
hlt
in
in
fstl
cld
and
stc
cld
jp
fidivrs
push
stc
cld
mov
out
mov
imul
pop
pusha
pop
xor
push
xor
inc
ds
fs
mov
shr
push
stc
cld
sbb
inc
dec
addb
pop
mov
inc
sbbb
or
cli
sub
repz
inc
xor
icebp
jne
movsl
mov
ja
adc
es
xor
sbb
xlat
push
add
fwait
sti
data16
aas
outsb
ret
iret
add
dec
stos
ljmp
push
cmc
arpl
fcoms
push
ljmp
mov
sti
push
iret
inc
scas
in
rcrl
shrl
into
xchg
iret
imul
lret
std
ret
out
mov
loopne
xor
dec
adc
inc
push
jno
or
push
arpl
icebp
adc
lret
stc
icebp
loopne
jb
hlt
push
stc
icebp
pop
push
jno
fmulp
xchg
cmpl
sub
cmc
xor
inc
cld
mov
push
xchg
shl
cmp
loopne
push
jl
dec
stc
icebp
loopne
pop
pop
sub
repnz
jno
jo
mov
inc
xor
push
pop
jmp
add
lea
stc
icebp
lret
or
xchg
mov
rcll
mov
dec
rcrl
mov
jae
in
sti
push
sarl
add
xor
xlat
in
adc
xlat
in
pop
fsub
sbb
pop
fsub
sbb
jnp
in
je
test
pop
popl
fcomps
cld
pop
mov
ret
iret
pop
pop
inc
and
int3
cltd
jp
std
popa
and
jg
pushl
scas
pop
cmp
fstpl
insb
xchg
int
xor
movsl
inc
sbb
jge
jmp
or
mov
add
ljmp
pop
sub
call
mov
rclb
rclb
out
loop
adc
test
or
push
and
test
rep
out
loop
mov
sbb
sti
testl
cmp
stc
in
xor
pop
orl
loope
jp
fs
loop
shl
sbb
outsb
insl
mov
and
jg
ja
data16
and
mov
sarl
fsub
cmpsl
xchg
mov
pop
loope
shlb
xchg
push
mov
in
icebp
aas
or
fldenv
outsb
cld
xchg
fstpl
adc
mov
mov
aaa
out
push
sub
inc
fsubrl
inc
pushf
sbb
ret
mov
js
stos
inc
popa
inc
test
jo
jle
lahf
imul
or
in
sti
and
icebp
neg
in
and
sub
push
shlb
notl
jo
jno
mov
loopne
ret
pop
xor
push
iret
or
lea
scas
std
stos
dec
enter
pop
add
xchg
in
insl
dec
shll
aas
andb
adcb
or
adc
in
popf
mov
dec
jae
movsb
ret
sub
outsb
push
jb
loope
sbb
sbb
fisubrs
rolb
cmpsl
lods
loop
push
sub
add
mov
and
ja
mov
imul
mov
inc
sub
dec
jle
popf
cmp
pusha
xor
rcl
movsl
pop
repnz
shlb
mov
jo
xor
xchg
jmp
gs
xlat
in
test
inc
lock
shll
inc
negl
std
mov
and
cvtdq2ps
insb
xchg
fidivl
ljmp
jp
std
jmp
and
fmull
out
ja
mov
call
adc
mov
out
add
mov
jb
pop
push
adc
mov
sub
mov
xchg
test
dec
pop
shr
pushf
scas
mov
mull
add
out
sub
mov
fnstcw
fadds
fsubl
mov
dec
es
jbe
es
call
mov
xor
inc
ja
jl
out
adc
mov
movsb
lret
add
push
test
daa
ret
filds
jnp
lods
jnp
aad
daa
rolb
add
sub
sub
jp
or
cltd
pop
loopne
ficompl
movsb
inc
lret
jae
imul
nop
aam
mov
push
sbb
in
loopne
mov
xor
pop
leave
gs
sub
push
test
push
push
imul
cmp
data16
scas
inc
adc
insb
mov
in
insb
rcll
add
aas
jecxz
js
scas
xchg
cltd
xchg
scas
xchg
in
xchg
shr
subb
std
dec
into
aad
pusha
and
in
inc
adc
out
inc
ja
jbe
jnp
mov
popa
jg
test
scas
push
and
jb
out
xlat
jbe
aas
fmull
enter
outsb
mov
pop
imul
push
pop
pop
sbb
aam
pop
test
xor
rol
jmp
sub
jecxz
daa
and
xor
test
push
pop
xor
aaa
dec
aaa
pop
or
inc
xchg
push
out
into
in
fistps
call
call
lcall
inc
fadds
into
aas
cmp
xlat
in
lcall
pop
inc
dec
push
mov
xor
outsb
leave
out
lds
adc
ja
test
dec
mov
repnz
jge
sub
fcmove
ds
push
andb
sti
out
in
mov
jb
js
nop
cmp
repz
jl
fcmovu
and
std
or
in
pusha
loopne
jl
cmc
jo
xchg
repnz
into
sbb
xor
shrb
or
adc
outsb
cwtl
sti
int3
in
sbb
jle
push
movsb
and
jbe
push
fs
in
int3
test
sub
xchg
inc
in
or
pop
fwait
pop
fcmovu
imull
mov
and
push
mov
mov
mov
ficompl
out
adc
add
fidivs
push
adc
add
fbstp
and
pusha
ljmp
lahf
clc
cmpsb
inc
lock
jecxz
lret
adc
and
jb
xchg
ds
out
push
outsl
cmp
rcrl
jl
sub
pop
pop
lock
sbb
lds
adc
test
addb
movsl
cltd
jo
das
popf
aas
sub
sub
jle
sbb
mov
and
sbb
push
outsl
xchg
scas
sub
xchg
jle
fs
pop
mov
int3
or
shll
jae
stos
jp
test
into
mov
inc
sbb
lea
mov
dec
loopne
sub
mov
rol
roll
cmp
mov
mov
jbe
jle
cmp
sbb
xor
push
stos
jb
rorb
mov
test
repnz
jl
pop
call
in
lods
stos
out
ja
gs
loop
stos
mov
mov
in
pop
arpl
xor
push
lds
inc
inc
push
movsl
xchg
dec
jbe
in
and
lods
in
imul
push
test
pop
test
or
cmpsl
xchg
sbb
sub
add
stc
mov
lret
das
mov
popf
push
and
lcall
inc
into
sub
inc
gs
add
adc
xorl
pusha
rcll
stos
lds
add
jmp
cmp
push
jmp
aam
lret
inc
adc
lahf
jle
addr16
mov
hlt
or
aas
test
lret
inc
lret
mov
add
sbb
fs
adc
adc
dec
add
sub
cmc
push
fcomps
sub
jg
push
aaa
dec
adc
lcall
clc
stc
cmp
mov
pop
xor
inc
push
das
dec
mov
add
jmp
and
sbb
jnp
popl
mov
mov
inc
gs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
push
lret
loopne,pn
or
jmp
lea
jmp
jl
insl
cmpb
mov
or
jmp
das
xchg
push
das
lret
or
lret
fadds
lea
shll
xlat
sbb
jo
lds
push
xchg
shll
les
dec
mov
fldt
lods
nop
xor
mov
jle
push
das
xor
adc
fisttpl
das
lret
or
mov
dec
add
or
jns
ss
gs
mov
and
or
fcomps
imul
insb
insl
add
jmp
test
lret
jbe
aad
add
das
lret
into
push
pop
mov
sub
xchg
mov
inc
gs
jp
das
lret
sbb
sbb
jp
inc
lds
jbe
rorl
lret
sub
inc
gs
roll
das
lret
dec
lds
enter
mov
lea
das
lret
test
ds
add
in
jmp
adc
imul
incl
cs
lea
das
lret
test
add
enter
jecxz
paddsw
fnstcw
push
ja
mov
mov
cmp
aam
lret
mov
inc
gs
shr
outsb
rcrl
shrl
pop
int3
mov
test
sarl
mov
inc
gs
gs
addl
add
gs
sub
inc
sarb
cli
sbb
sbb
sbb
lret
mov
push
jmp
dec
add
inc
into
data16
das
lret
push
add
xchg
dec
outsb
lea
shll
xlat
jae
call
push
xchg
shll
les
dec
mov
shl
mov
jae
cs
xlat
out
dec
add
sbb
in
or
lds
xchg
sub
jp
sbb
cmp
sub
inc
sarb
xor
sub
outsb
stos
push
mov
sub
inc
jbe
fsubs
out
dec
add
aad
fldt
lds
cmpsl
shr
aam
sbb
insl
mov
movsb
pop
in
mov
sub
inc
sarb
ljmp
push
in
inc
ret
ss
out
mov
mov
pop
xchg
adc
popf
xchg
sbb
adc
mov
jp
xchg
xor
inc
xor
mov
inc
xor
inc
gs
insb
sbb
xchg
inc
xchg
mov
movsb
add
push
mov
or
lret
stos
in
pop
xchg
mov
push
xchg
cli
push
sub
pop
in
pop
xchg
push
pusha
xchg
xchg
data16
out
mov
xlat
push
adc
shll
arpl
lds
insb
cmp
pushf
xor
cwtl
or
lret
mov
movsb
inc
pop
lret
and
inc
gs
add
or
dec
pushf
cmpsb
push
lret
and
lds
das
dec
mov
cmp
cs
dec
jp
sbb
lret
adc
pop
dec
pushf
inc
sbb
lret
inc
adc
inc
in
and
out
mov
psubusb
lds
xchg
shlb
and
sbb
mov
sub
and
in
stos
lea
cs
mov
pop
xchg
adc
lods
push
sbb
scas
mov
push
add
insb
test
in
pop
xchg
jo
add
and
inc
insb
pusha
pop
int3
mov
int
jmp
loope
xor
push
lcall
sub
inc
rcrb
mov
aam
lret
sub
inc
rcrb
mov
aam
lret
add
jmp
push
xor
das
lret
pop
cmp
or
lret
nop
mov
push
sub
inc
add
mov
negl
mov
cltd
inc
gs
aam
lret
in
sub
push
sbb
sub
inc
in
jp
sbb
lret
adc
mov
and
mov
push
fildll
mov
jmp
mov
shrb
int
aam
lret
jne
loopne
mov
and
es
mov
out
mov
push
daa
les
gs
out
lcall
cs
aam
lret
mov
and
mov
aad
popa
xchg
sub
out
insb
and
inc
insb
jbe
pop
mov
mov
fwait
cmp
fsubs
out
dec
add
inc
jge
test
aaa
popf
or
cmp
or
lret
xchg
loopne
daa
loopne
daa
xchg
shlb
mov
inc
gs
push
sub
inc
mov
pop
daa
stos
loopne
daa
xchg
shlb
mov
inc
gs
mov
xchg
sub
insb
or
data16
das
lret
push
lret
xchg
push
cs
adc
lds
push
inc
jbe
mov
inc
inc
stos
lea
das
lret
test
lret
add
gs
lret
jns
or
cmp
push
or
lret
test
cmp
or
lret
cmpsl
adc
inc
and
stos
push
and
sbb
sub
inc
and
test
and
das
lret
mov
movsl
push
icebp
aam
lret
dec
adc
inc
mov
cmp
movsl
mov
pushf
sti
sbb
xor
das
lret
cmp
les
test
pop
daa
stos
loope
or
dec
or
pop
mov
xchg
in
sbb
jecxz
shl
in
mov
push
mov
push
shlb
sbb
sbb
mov
sub
and
in
stos
lea
cs
mov
pop
xchg
adc
lods
push
sbb
testl
aas
mov
adc
ljmp
jo
mov
adc
aad
rcl
aas
cmpb
xchg
mov
jle
cmpsl
insl
sarb
dec
mov
cmp
cmp
popf
mov
push
sbbb
stc
mov
gs
daa
enter
popf
mov
pusha
jo
cmp
jo
addr16
mov
pusha
jo
in
cmpsl
insl
sarb
dec
mov
cmp
cmp
popf
mov
adc
pop
pop
notl
pop
adc
push
jo
inc
adc
shll
pop
mov
push
enter
jo
outsl
or
test
mov
push
stc
pop
jo
int3
test
jo
mov
pop
adc
scas
sbbb
stc
mov
ret
jo
xor
jo
push
inc
aad
dec
jge
push
adc
call
xor
mov
pop
add
gs
aas
outsl
mov
fistpl
orl
stc
enter
pop
sbb
mov
xor
pop
jo
cmp
das
xchg
ds
jo
shlb
cmc
jg
add
pop
lret
call
xor
mov
sbb
jo
mov
mull
mov
pop
mov
jge
cmc
pop
pop
dec
clc
or
lret
jo
mov
pop
push
pop
inc
stos
in
aas
xchg
cli
std
cmp
cmp
orb
outsl
dec
test
dec
shl
sub
je
inc
leave
jo
cmp
pop
push
sub
jo
mov
jo
push
jg
cli
iret
jg
cmp
push
aam
sahf
fnstcw
popf
xchg
mov
pusha
jo
lahf
ret
jo
mov
xchg
mov
pop
jo
cld
iret
mov
mov
das
xchg
jo
jo
roll
movq
flds
jo
pusha
jg
lock
mov
dec
fptan
jg
inc
xor
rorl
mov
mov
outsb
push
mov
xchg
ja
mov
ret
jo
mov
pop
ficoml
pop
jo
call
adcb
mov
and
lret
lret
subl
inc
mov
dec
mov
dec
xor
jmp
mov
pop
clc
push
data16
fnsave
jns
imulb
rcrl
mov
rclb
jo
mov
dec
aad
jo
sahf
xor
repnz
and
mov
ja
das
pop
jo
aad
push
into
les
adc
push
push
mov
pop
xchg
mov
pop
jo
sub
push
clc
mov
cmp
inc
push
outsl
lss
inc
mov
xchg
aaa
mov
jo
shr
in
arpl
jg
rcrb
and
les
cmp
pop
xchg
cmp
jo
inc
sbb
stos
jo
pop
push
mov
popf
cmp
loop
xchg
orl
pop
xchg
mov
pusha
jo
sub
jo
stos
lds
mov
test
mov
cmpl
outsl
lss
pop
cmp
jo
loopne
aaa
loop
mov
in
pop
mov
pop
clc
pusha
mov
ja
mov
jo
mov
pop
int3
insl
mov
mov
aad
xor
rcrl
mov
rclb
jo
mov
dec
aad
jo
sahf
xor
and
mov
ja
adc
rorl
mov
jnp
outsb
xchg
or
pop
jo
cld
iret
jo
mov
fsincos
pop
jo
cld
iret
orl
pop
jo
mov
adc
xchg
test
jo
aad
adc
les
push
cli
std
cmp
cmp
das
xchg
inc
jo
roll
test
mov
inc
inc
pop
into
jg
mov
out
shlb
mov
pop
jo
loopne
and
mov
imul
jg
push
inc
inc
pop
or
mov
out
pop
cmp
jo
loopne
aaa
loop
mov
in
pop
mov
pop
clc
pusha
mov
ja
mov
jo
mov
pop
int3
insl
mov
mov
aad
xor
rcrl
mov
rclb
jo
mov
dec
aad
jo
sahf
xor
mov
and
iret
stc
shll
pop
and
dec
mov
in
js
mov
push
sub
test
pusha
jo
cmp
inc
fstps
jo
push
shlb
negb
jo
std
xchg
jl
rorl
mov
pusha
jo
mov
jo
inc
lods
test
mov
lcall
xor
test
mov
pop
test
pop
xor
mov
pop
push
pop
jmp
leave
sbb
adc
mov
xchg
insl
cmp
xchg
mov
inc
mov
or
rorb
add
sbb
mov
xchg
gs
cmp
push
dec
or
loopne
inc
xchg
jno
push
adc
lods
popa
mov
stc
ret
fidivrl
popa
xor
cmc
adc
shl
push
fsubrl
pop
jo
aad
inc
cs
adc
pop
aad
xor
inc
add
push
fmul
push
pop
in
mov
jns
imul
shl
push
fsubrl
pop
jo
aad
shrb
push
adc
xchg
inc
add
mov
mov
outsb
dec
or
in
mov
movsb
psubw
and
push
mov
and
jmp
mov
pop
orl
adc
push
mov
inc
push
test
cld
jl
outsl
gs
mov
jnp
adc
sub
cmp
jo
in
or
inc
loopne
repnz
push
inc
lret
fsubr
fsubrs
pop
notl
adc
insl
movsl
mov
adc
xor
jo
mov
jo
adc
dec
stos
stc
stos
test
jb
pop
pop
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
fxch
cmp
jo
push
mov
dec
fidivrs
repz
jb
and
cmc
inc
and
stos
subb
push
cmp
mov
sbb
dec
cmp
push
adc
pop
cmp
xor
jns
jmp
shll
gs
add
repz
test
sbb
rcr
push
xchg
adc
test
popl
mov
adc
jb
mov
pop
mov
imul
stc
push
mov
inc
mov
ss
negb
sarl
test
or
shl
add
ds
cmpsb
cltd
shr
lret
aaa
xchg
pop
xor
mov
int
ds
pop
and
loop
sub
jbe
add
xor
into
mov
lret
and
test
sub
push
test
imul
sbb
les
push
ljmp
push
push
fidivs
lret
mov
popf
add
sbb
sub
ds
daa
sub
mov
aaa
jbe
mov
stos
imul
xchg
sub
into
pusha
jo
fstl
xchg
add
lea
jg
int3
mov
std
andl
xlat
or
lods
add
es
cwtl
push
xchg
enter
fsubrs
rclb
roll
sub
add
into
imul
mov
sbb
xor
mov
mov
mov
pop
jb
jae
jecxz
shll
sub
cmp
lss
movsb
mov
cmp
xchg
pop
xchg
push
ja
outsb
xor
xor
repz
or
and
jecxz
adc
push
pop
lea
stos
nop
in
mov
lods
mov
push
fidivs
cmp
ja
ljmp
and
inc
test
push
imul
shlb
pop
inc
lds
or
jp
scas
sbb
mov
fdivl
cmp
and
sbb
sub
int3
mov
jnp
out
lret
cld
xlat
jmp
jne
ds
out
lret
mov
or
and
inc
push
xor
xchg
out
pop
arpl
cmc
sbb
mov
inc
ds
sub
adc
add
push
sbb
ret
daa
xor
test
dec
popa
orl
sahf
dec
pop
mov
jnp
out
lret
cld
int
or
dec
fldl
clc
testl
sub
adc
add
sbb
pop
mov
xchg
das
mov
imul
xchg
test
pop
jnp
adc
mov
pusha
mulb
aam
jge
bndldx
movsb
mov
pushf
out
jl
icebp
or
ficoms
sbbb
mov
rep
cmp
insb
icebp
cmp
mov
cmp
aad
push
movsl
faddl
mov
and
inc
and
dec
inc
pop
sub
xchg
mov
jecxz,pn
xor
mov
outsl
dec
pop
jae
mov
jbe
pop
pop
out
dec
les
fsubl
test
or
jns
xor
mov
fadds
int3
fldt
mov
dec
dec
push
into
popf
imulb
pop
iret
pop
ja
loope
fsubl
das
pop
sbb
cmp
and
imul
lcall
icebp
jp
adc
add
pop
mov
jecxz
mov
jns
insb
clc
mov
sub
mov
add
push
adc
js
pop
gs
lret
xor
and
in
ret
sub
shrb
dec
mov
adc
mov
inc
mov
dec
dec
call
inc
pusha
jb
pusha
jbe
mov
xchg
insb
jnp
mov
xchg
cmp
in
je
negl
inc
cmp
mov
js
mov
push
add
cmc
arpl
push
cmpsb
add
sub
outsl
mov
or
rorl
movaps
mov
dec
loop
lock
fisubl
sub
repnz
insl
pop
das
idiv
mov
mov
pop
jo
stos
jp
push
icebp
std
es
xor
lahf
push
add
out
mov
xchg
lret
imul
jl
inc
or
cmc
rorl
fwait
jae
pop
cmp
fs
jg
test
inc
popf
hlt
push
das
stos
jbe
mov
jnp
jle
xor
push
jnp
xchg
xchg
lret
xchg
adcb
mov
xchg
inc
push
jmp
nop
pushf
fildl
dec
iret
jge
inc
lret
imul
test
dec
cltd
mov
pop
inc
in
mov
inc
cltd
fs
sub
mov
xchg
das
mov
out
mov
adc
pop
cltd
mov
lock
push
mov
arpl
sub
nop
gs
fcmove
jno
sub
add
lcall
out
lock
pop
mov
shlb
ret
dec
aam
cmpb
mov
sbb
popa
das
testl
andl
sahf
jno
test
pop
xchg
dec
out
mov
or
loopne
outsb
fistl
and
iret
inc
aam
jecxz
mov
aam
pop
pushf
js
ret
mov
pop
pop
movsl
mov
jbe
pop
std
lods
ds
inc
and
iret
cmp
mov
push
scas
cld
sbb
and
lds
stos
mov
loopne
mov
cmpsl
iret
jle
lahf
cld
dec
xor
outsb
jns
insb
inc
aas
mov
jecxz
sahf
adc
jns
jmp
lret
mov
mov
xor
jb
stc
scas
daa
xchg
rolb
nop
add
lds
nop
inc
cmp
js
and
pop
sub
shrl
sbb
mov
sub
cmp
push
mov
cmc
adc
inc
shlb
jo
fdivl
pop
or
jo
push
stos
pop
add
mov
cmp
stos
add
shll
xor
mov
mov
adc
pop
pushf
aad
adc
ja
jns
adc
es
test
ss
and
fcompl
xchg
popa
jmp
adc
lret
jo
mov
xor
mov
mov
adc
outsl
loopne
jg
nop
mov
jo
inc
add
mov
pop
mov
xchg
sbb
inc
push
dec
cmpb
inc
push
dec
dec
sbb
and
lcall
push
inc
loop
mov
inc
dec
popf
int
ljmp
js
aam
push
xor
cmpsl
mov
pop
xchg
sub
jo
adc
mov
pop
cld
and
mov
aas
push
and
pop
mov
out
mov
aaa
imul
and
bound
mov
loopne
lcall
pop
inc
lret
fsub
fiadds
and
mov
xlat
jge
inc
ja
mov
jbe
or
xchg
xorb
and
mov
mov
or
jp
movsb
dec
dec
gs
clc
mov
icebp
add
sbb
pop
pop
incl
aam
nop
std
lahf
pop
add
hlt
adc
adc
pop
add
outsl
rorl
cmp
xchg
sbbb
xchg
jno
xlat
imul
pop
add
std
sbb
cmp
pop
mov
xchg
mov
sub
and
insb
pop
int
add
adc
sub
cmp
xchg
xorb
xchg
mov
sub
inc
or
xorb
jge
mov
cltd
mov
mov
inc
pop
mov
imul
movsb
or
mov
jne
jmp
addr16
inc
rcrl
push
adc
cmp
sahf
cmc
movsl
dec
lahf
out
fmull
and
popf
lock
mov
arpl
adc
mov
movsb
push
mov
ret
fstpt
out
inc
inc
adc
insb
adc
mov
cmpsb
das
ret
sub
add
sbb
push
add
sbb
push
add
sbb
push
add
rcrb
pop
mov
inc
mov
dec
and
lahf
testl
es
iret
xor
les
je
push
mov
and
and
or
outsb
xchg
mov
dec
sbb
add
mov
sub
dec
call
scas
mov
mov
xchg
fincstp
or
inc
in
jecxz
adc
imul
pop
cli
and
cmpsl
mov
mov
sub
or
je
and
clc
cltd
add
mov
push
data16
shlb
cs
and
mov
shl
hlt
mov
inc
xchg
call
inc
mov
mov
jp
lods
inc
loop
cwtl
std
mov
sub
das
jmp
aam
jnp
sbb
aas
push
push
add
jo
sbb
movsl
xor
popf
dec
stos
lods
popf
dec
bound
mov
incb
jg
dec
and
sub
xlat
mov
loopne
xchg
and
sbb
xor
jg
sub
and
pop
in
push
aas
test
in
push
sub
mov
xor
adc
xor
adc
push
popf
clc
sub
push
sbb
lea
out
loop
sub
scas
dec
xlat
dec
ficoml
js
daa
cltd
xchg
adc
mov
dec
scas
into
fldcw
and
sbb
mov
inc
stc
xor
dec
cmpsb
cli
shll
outsl
faddl
adc
lret
push
dec
andl
sub
jno
inc
aaa
popf
fsubrs
mov
ja
mov
dec
mov
lret
and
mov
mov
jns
outsb
mov
notl
inc
mov
and
mov
orl
dec
sti
into
adc
add
mov
mov
les
sub
mov
aas
adc
movsb
pop
mov
lret
aas
mov
insb
inc
pop
adc
push
and
xchg
aam
lahf
repz
mov
add
mov
scas
lds
aas
insl
pop
pop
or
cmp
loopne
call
pushf
adc
xor
xor
pop
jle
sbb
fdivl
jmp
sub
inc
mov
pop
mov
ficoml
jae
add
dec
lea
mov
mov
sahf
adc
mov
pop
pop
push
movsb
add
and
and
call
and
gs
sbb
xor
arpl
mov
cmp
dec
mov
xchg
scas
mov
push
mov
mov
sti
sub
out
popa
arpl
out
iret
mov
stos
je
mov
sbbb
dec
in
sbb
mov
and
sti
mov
mov
dec
rclb
aas
adc
out
sti
pop
pushf
cmp
loope
fs
add
dec
mov
outsl
pop
pop
into
mov
sarl
inc
test
movsb
ror
popa
pop
xchg
and
jbe
int3
and
out
and
ret
sbb
mov
fcmovb
fisubl
dec
push
push
cmp
jno
int
mov
out
in
jl
repnz
int3
xchg
pop
and
xchg
push
mov
int3
lcall
subb
insb
push
mov
icebp
shrb
dec
fcoml
jg
pop
push
sbb
ret
push
jmp
aaa
pop
outsb
mov
inc
pop
mov
iret
pop
out
jmp
lds
stos
inc
jne
data16
xchg
mov
inc
ret
int
gs
inc
jecxz
pop
sahf
push
lock
dec
jle
jmp
xchg
pop
ds
in
mov
cld
cltd
popa
add
outsl
out
sbb
inc
push
mov
rclb
scas
popa
dec
jbe
lock
cmp
xchg
mov
cltd
aas
xor
and
dec
xor
es
sar
dec
out
push
add
data16
xchg
pop
xchg
xor
mov
jle
cmpxchg
mov
test
jecxz
jmp
add
lret
in
mov
xchg
push
xor
or
cmp
pop
mov
inc
xor
sbb
jge
and
out
jne
add
add
adc
sub
lods
ss
sbb
pop
in
mov
or
sub
repnz
insb
jo
push
lret
mov
int3
shll
xchg
pop
or
outsl
pop
popa
xchg
ror
add
fucomi
and
sub
nop
enter
test
orb
loope
add
repnz
dec
add
adc
jbe
aaa
fildll
inc
mov
adc
daa
push
jmp
xor
iret
rorl
sbb
pop
mov
sub
mov
xchg
jae
pop
repz
and
or
mov
cmpl
int3
dec
int
mov
bound
or
sub
movsb
add
sub
dec
mov
outsb
inc
loopne
xchg
test
push
sub
sub
inc
mov
clc
dec
mov
pop
dec
andb
jge
push
imul
das
add
push
push
sub
inc
shlb
or
and
mov
push
rorl
or
and
rclb
xor
lds
cmp
stos
dec
lock
push
xchg
or
xor
add
pop
jns
int3
xchg
xor
mov
xchg
test
test
xchg
lea
test
push
aad
arpl
mov
cwtl
and
jne
push
pop
push
rclb
push
dec
inc
out
dec
xor
outsb
add
push
pushf
xorb
adc
test
fcoml
pop
push
rclb
test
repz
and
cmp
cltd
daa
sub
cmp
aaa
jl
cmp
xchg
mov
js
mov
sti
cmp
sub
outsl
push
sahf
mov
push
xor
cli
cld
loopne
pop
stos
loop
gs
and
push
imul
push
mov
sub
loop,pn
adc
jecxz
or
inc
dec
jnp
rclb
in
jl
jae
jge
jae
xor
xchg
les
aas
cmp
popl
xchg
popf
aaa
test
xorl
mov
daa
pminub
xlat
xchg
test
rolb
xor
mov
incl
adc
xorb
mov
push
xor
inc
cmp
sahf
imul
popf
aaa
jbe
mov
ficoms
cmp
mov
jle
add
test
inc
lahf
mov
test
cmp
add
fildll
xchg
addb
mov
pop
inc
scas
push
loopne
fwait
mov
pushf
cmp
fisubs
lods
sub
loop
outsw
les
push
sub
dec
add
faddl
test
test
xor
push
lea
cld
pop
stc
sub
test
arpl
sahf
push
lret
fcompl
popf
or
stos
loope
xchg
xor
das
out
jge
or
test
xor
ret
inc
inc
jae
in
fsubr
popa
dec
cli
adc
ja
popa
inc
fisubs
cmpsl
pop
pxor
add
loope
mov
or
sbb
fmuls
aaa
dec
icebp
mov
and
fnstenv
dec
icebp
mov
fdivrl
ja
pop
das
dec
movsl
fs
sub
pop
scas
fldenv
addb
xchg
cli
and
imul
loop
mov
jmp
jp
test
jp
test
jp
test
jp
test
jp
test
jp
test
jp
test
jp
test
jp
jnp
sub
test
stos
mov
jns
movsb
mov
dec
dec
test
insl
mov
dec
inc
and
jns
adc
negl
test
pop
loope
dec
inc
out
jns
jmp
push
jl
sti
pop
dec
test
popf
mov
jns
movsb
sub
pushf
and
mov
xor
sbb
lret
ja
mov
scas
je
or
jg
negl
mov
mov
int3
movsb
and
je
sbb
arpl
arpl
mov
lahf
test
mov
xor
iret
roll
mov
test
sub
adc
adc
push
out
fdivr
std
fnstsw
pop
xlat
negl
lods
lds
fdiv
pop
mov
icebp
mov
arpl
xor
popa
arpl
jns
xchg
sbb
aas
lret
sub
jle
out
sub
push
fcoms
ror
jb
clc
nop
sahf
pop
sarl
test
out
dec
xchg
rolb
cmc
std
scas
dec
and
stc
pop
xchg
and
xchg
jo
jg
and
mov
xchg
ds
out
pop
cwtl
xchg
fs
pop
or
data16
movsb
cli
rorl
in
xorl
pop
movsb
jmp
xor
cmp
mov
xchg
mov
mov
scas
xor
inc
sub
mov
mov
mov
cmp
dec
add
mov
ljmp
or
add
add
inc
std
in
decb
pop
stos
mov
jb
andb
dec
or
shr
xchg
cmp
xor
mov
cmp
jnp
adcb
add
and
cltd
ljmp
test
xchg
pop
push
lods
popa
or
dec
into
cmpsb
and
mov
shll
stc
mov
lcall
scas
jne
sbb
xor
lahf
and
push
mov
inc
jmp
or
xchg
mov
push
push
mov
mov
push
sub
adc
insb
inc
loop
imul
xor
lret
mov
adc
pop
scas
mov
pop
loope
jg
add
pop
push
movsb
inc
dec
mov
je
or
cld
js
pop
aad
add
mov
dec
sub
inc
cmp
sub
loopne
movsl
mov
inc
stos
iret
or
jae
outsb
loope
mov
fdivrs
les
pop
sub
ffree
push
fldenv
push
cwtl
test
and
cltd
mov
lds
jb
aaa
int
in
adc
mov
mov
ret
mov
xchg
xchg
repz
repz
movsl
lahf
les
aas
jle
movmskps
or
shll
cmp
aaa
or
adc
or
rcr
subb
clc
inc
ret
cmp
test
sub
inc
sbb
jne
cld
xor
arpl
ljmp
jnp
inc
jmp
iret
hlt
sub
or
or
mov
jg
stos
mov
jmp
xchg
add
jo
aaa
sbbl
and
enter
addps
ljmp
test
sbb
imul
push
pop
rol
jb
xor
pop
rol
subl
test
in
mov
daa
hlt
xor
xchg
add
pop
pop
lret
cli
xchg
rorb
and
xchg
mov
mov
js
cmpsl
inc
insl
xchg
mov
mov
mov
imul
or
xlat
mov
xor
add
jns
mov
cmp
dec
and
out
xor
cmpsl
cmp
jno
push
fiaddl
dec
outsl
ljmp
jnp
shl
les
jecxz
adc
fldenv
mov
test
sbbl
pop
int
xor
cli
hlt
xchg
pushf
sub
jns
mov
fimull
jae
and
and
sub
iret
xor
jno
adc
sarb
pusha
mov
push
mov
jo
mov
sbb
popa
aam
pop
and
addr16
aad
lahf
push
dec
jne
cld
dec
outsb
lods
adc
push
sbb
add
push
cmpsb
imulb
xchg
enter
adc
lea
cmp
xchg
sar
xchg
mov
lea
or
scas
adc
ret
lods
int3
mov
sti
mov
xor
add
push
jnp
mov
lods
cs
mov
enter
popa
push
and
xor
iret
loopne
push
push
pop
scas
jae
push
mov
inc
in
xor
pop
cmpps
mov
add
mul
xchg
fstps
ret
outsl
cmp
push
xchg
cmp
out
inc
jae
mov
jnp
cli
inc
push
or
cwtl
es
push
ret
push
add
test
xchg
adc
inc
std
pop
jae
pop
mov
aam
xchg
cli
fiadds
pop
jae
sbb
in
ljmp
lcall
js
xor
and
mov
mov
pop
add
sbb
adc
push
lock
dec
add
pop
sub
jns
or
and
mov
int
aaa
sub
in
and
mov
push
stos
xchg
bound
push
push
mov
aad
jp
mov
jmp
scas
push
bound
sbb
mov
icebp
fwait
cmp
and
cmp
jbe
jno
push
lods
cmp
bound
int3
cld
cli
push
ljmp
dec
jecxz
call
and
jbe
mov
jl
mov
rolb
jbe
and
pop
sub
out
mov
fwait
cmp
lds
repz
mov
gs
rolb
popl
out
xchg
call
mov
xor
push
jne
shrb
ljmp
js
pop
cmp
shr
sbb
xchg
mov
daa
loop
arpl
aas
scas
push
push
gs
sbb
stos
xchg
sub
dec
xchg
jnp
push
jns
sbb
fmul
jne
dec
cltd
stos
cmp
and
dec
test
mov
jecxz
test
pop
gs
mov
cmpsl
cmp
or
movl
pop
aas
roll
pop
mov
dec
xorb
fisubl
add
mov
enter
dec
mov
aam
mov
sub
cmp
dec
xchg
icebp
pop
add
je
out
cmp
in
cld
gs
jne
push
push
or
sub
mov
sbb
lcall
mov
xchg
push
xchg
xchg
xorb
mov
js
add
push
scas
sbb
dec
mov
pushf
imul
lahf
cmp
sub
inc
ja
mov
scas
jecxz
rorl
in
mov
fmuls
cmp
jne
cld
int3
lock
fs
xchg
add
xchg
shrl
pushl
mov
push
stos
and
dec
sbb
mov
loopne
fldt
mov
rclw
fdivl
pop
movsl
imul
mov
sbb
inc
in
fistps
ret
mov
push
and
mov
cmp
in
fxch
inc
mov
movsl
and
sti
xlat
aam
sub
outsl
out
idivb
arpl
fisubrl
jmp
xor
shll
push
stos
push
pop
push
or
mov
mov
dec
iret
stos
int3
sbb
dec
xchg
aam
mov
divb
sarl
ret
rcl
xchg
jle
push
pop
filds
mov
dec
pusha
or
dec
and
outsb
sub
sbb
sub
scas
jp
mov
daa
outsb
stos
arpl
inc
into
sar
xchg
mov
xor
nop
jmp
cmc
sub
xchg
out
test
lret
mov
add
or
mov
lods
adc
mov
inc
jg
lock
push
xor
arpl
lret
mov
mov
iret
cmp
adc
pop
or
aaa
push
cmp
mov
pop
shr
faddl
mov
xchg
cli
aad
mov
jge
sahf
adc
pop
shll
mov
xor
gs
push
pop
aam
outsl
lea
fldlg2
sub
out
enter
mull
psubw
cmp
jmp
adc
fistl
movsb
insl
push
xchg
dec
xor
int3
fdivs
or
aas
stc
pop
mov
test
stc
jb
pop
mov
xchg
lret
lcall
or
xchg
loop
mov
push
sbb
rcrl
sahf
push
mov
dec
fcmovu
sbb
inc
push
stc
ds
dec
sbb
daa
aam
cli
mov
ficomps
shl
push
test
fdivrs
dec
jno
ss
lret
xor
outsl
ljmp
add
test
test
scas
mov
push
fwait
sub
or
sub
mov
sbb
fisubs
sbb
sar
add
mov
adc
mov
push
sahf
clc
sbb
cmp
push
rclb
test
add
xchg
je
sbb
pop
daa
out
jmp
enter
add
sbbl
fwait
in
orb
stos
sbb
stc
inc
xchg
xchg
xchg
xor
jmp
mov
inc
sub
jo
imul
lret
jecxz
jmp
ja
ds
xchg
loop
nop
stos
add
mov
lock
out
add
push
add
cmp
mov
lods
sbb
mov
repz
cmp
cmp
insl
push
push
loop
hlt
sbb
ret
icebp
cmp
es
sub
pop
test
mov
dec
dec
jae
rorl
test
cltd
pusha
push
scas
mov
dec
xchg
loopne
mov
mov
sbb
out
xchg
xchg
xor
popa
cmpsb
lods
push
leave
pop
shll
out
in
inc
and
or
mul
xor
fisubl
inc
mov
jge
in
push
aad
movnti
push
mov
aad
and
inc
fisubrs
push
test
cwtl
adc
dec
mov
fucomp
mov
pop
cwtl
fsubr
or
addr16
add
call
cmpsl
and
out
sbb
jecxz
ss
and
gs
addr16
int3
fnsave
les
int3
and
jne
push
imul
rolb
shrb
jle
cmpsl
lcall
jecxz
jg
movsl
sub
pop
mov
subb
ljmp
sub
jno
and
sbb
js
push
cmp
stc
aad
pushf
sbb
dec
jl
cmp
pop
sbb
cmp
popa
call
dec
cmp
les
xchg
push
ret
cmp
pop
ss
pop
push
inc
dec
pop
inc
cmp
inc
loop
es
mov
test
mov
insl
push
mov
push
pop
fdivrl
lret
fisttpl
je
lock
lret
in
pop
xlat
ret
test
lret
inc
fstps
mov
es
fdivp
in
fisubl
cs
push
es
sahf
cli
mov
push
push
loop
jbe,pt
cmpsb
push
insb
mov
xchg
dec
cmp
push
dec
test
sbb
data16
ds
pop
mov
adc
iret
cs
push
jnp
sub
push
movsl
ja
insl
xchg
das
or
push
lcall
add
mov
mov
daa
js
mov
jmp
lcall
mov
dec
aam
xchg
mov
sub
or
jle
mov
add
sbb
outsl
ljmp
inc
insb
mov
test
aaa
addr16
sbb
mov
fwait
rol
andl
jecxz
mov
movsl
xor
clc
dec
adcb
sti
adc
out
sbbl
and
or
xchg
repz
cli
xor
push
enter
rclb
jb
vmwrite
and
clc
jp
xchg
jmp
xchg
clc
push
add
cli
aad
mov
addb
fbld
jno
jmp
fs
mov
add
mov
pusha
jmp
or
int3
sbb
sub
mov
xchg
or
lret
pop
inc
stos
ror
arpl
xchg
mov
lock
lock
cmc
dec
rcr
insb
sub
rolb
repz
fistl
adc
pop
shlb
divl
ja
push
and
jae
movsl
insb
mov
out
dec
mov
jge
cmp
mov
dec
xchg
jmp
rol
dec
bound
dec
dec
imul
dec
scas
adc
insb
in
out
rcr
sbb
je
cs
jne
cmp
ljmp
mov
mov
jp
in
adc
sub
pop
jne
sub
insb
sbb
out
out
mov
sub
sbb
loopne
push
int
or
mov
xchg
push
jp
inc
fdivrl
pop
daa
out
push
dec
lcall
repnz
shl
pop
jmp
in
fisubs
adcb
jae
cmpb
and
loopne
ja
jmp
ljmp
jg
push
mov
adc
pop
loopne
aaa
and
js
xor
or
fistps
in
test
in
push
xchg
test
ret
pusha
inc
ret
push
sbb
fisubs
inc
adc
pop
stc
push
imul
lcall
adc
popf
pop
fimuls
xor
xchg
cld
inc
jne
arpl
mov
xchg
jge
aad
push
push
push
test
cs
lea
pop
popf
and
jno
popl
mov
xorl
test
cmc
in
sti
pushf
arpl
bound
lods
cli
mov
pop
mov
test
jb
nop
jmp
cs
addb
xor
mov
ror
lock
mov
dec
mov
cmove
mov
stos
out
mov
mov
cld
gs
xchg
aad
dec
popf
cmp
std
popf
jle
dec
xchg
jmp
pusha
xor
sbb
dec
popf
push
das
add
xchg
jmp
adc
movsl
in
sahf
inc
sahf
adc
icebp
gs
xchg
cmp
cmp
pop
rolb
scas
das
xchg
scas
mov
inc
jle
push
addb
push
iret
mov
jno
add
lods
lret
jmp
bnd
test
fisttpll
mov
ds
call
mov
sub
nop
jmp
aad
xchg
jmp
jns
mov
jmp
hlt
stos
popa
scas
dec
xchg
jmp
cmc
mov
enter
xchg
out
invd
gs
dec
push
lods
call
gs
or
push
cs
or
stos
inc
dec
iret
cmp
dec
fs
pop
outsl
pop
jle
push
je
fs
dec
movsl
jmp
dec
mov
mov
pop
movsl
mov
xchg
adc
hlt
mov
arpl
out
mov
std
lcall
cmpsb
hlt
and
xorb
xchg
mov
mov
pop
popf
rorl
xor
mov
dec
sbb
test
insl
jl
mov
cmp
out
and
pusha
mov
lcall
lods
test
push
fldt
loope
mov
test
adc
leave
dec
mov
mov
xchg
icebp
xor
jl
stos
roll
repz
in
es
loopne
lea
mov
and
out
pushf
shlb
xor
addb
arpl
xchg
inc
add
and
insb
out
scas
faddl
xchg
sbb
ret
push
sbb
cmp
xor
mov
mov
and
stos
gs
in
je
daa
inc
fstpt
dec
push
imul
fstpt
inc
scas
cmp
jns
sub
fists
shl
pop
jmp
pop
dec
mov
sbb
inc
movsl
xor
ja
std
adc
dec
lock
xchg
mov
imul
imul
cmp
xchg
lock
sarl
push
lods
fiadds
mov
or
negl
das
xchg
dec
add
daa
int
mov
lahf
clc
fdivs
loope
into
pop
int
cmp
aas
jge
jecxz
dec
sbb
sbb
sbb
ss
xor
imulb
in
mov
sarb
fsts
cmc
or
push
xor
dec
test
clc
cmpsl
jl
mov
ret
ss
pusha
jl
div
test
cwtl
mov
popa
daa
push
popf
clc
or
das
push
stc
cmpsb
and
push
popf
clc
js
mov
ret
mov
mov
mov
movsb
xor
sbb
jb
scas
mov
repnz
pop
fdiv
outsb
inc
arpl
sbb
test
push
xor
jno
sub
sbb
lods
jns
sbb
adc
push
cwtl
adcb
dec
cmpsb
negb
lahf
pop
cmpl
cmp
out
hlt
lods
stc
dec
push
sbb
dec
ja
jge
push
cmp
test
jecxz
aaa
rcll
xchg
push
adc
aad
sub
or
or
sahf
mov
pop
jo
enter
sbb
xchg
dec
stos
inc
pop
cmp
or
or
sub
cld
je
sahf
inc
fnsave
enter
test
inc
sbb
and
ljmp
push
loope
dec
lcall
push
jno
movb
jno
sub
push
faddp
sbb
int3
adc
lds
jge
or
add
cwtl
test
and
xlat
aad
or
cli
mov
in
mov
dec
cli
dec
ljmp
push
addr16
mov
push
sbb
addr16
cld
incb
in
mov
in
mov
cld
xchg
fstpt
add
aam
xchg
jmp
add
pop
push
lret
push
jl
gs
or
pop
test
xlat
fistpl
hlt
std
add
outsb
cli
fwait
scas
mov
jmp
pushf
cmp
lahf
sub
push
mov
adc
mov
xor
rol
cld
mov
jmp
scas
push
sub
cmpsl
je
aad
sub
xchg
dec
aaa
rcll
sbb
jno,pn
jae
mov
movsl
jb
mov
mov
xlat
fsts
test
pushf
es
push
cld
aad
sbb
das
fbld
and
shr
je
das
sarl
lahf
adc
pop
or
das
stos
pop
loop
adc
dec
or
dec
inc
jmp
aam
lea
mov
nop
out
sar
aad
rcrb
add
scas
pop
fdiv
pop
int
sbb
ja
mov
push
mov
xor
mov
cmp
cmpsb
pop
and
sub
push
mov
dec
inc
or
inc
popf
and
pop
ljmp
jmp
mov
adc
pusha
jp
adc
shl
inc
pushf
lods
push
cmc
ret
pop
xor
test
test
mov
push
nop
xchg
inc
je
xorb
test
sub
stos
outsb
cmp
ret
iret
cmpl
pusha
mov
notb
movsb
inc
out
std
inc
pushf
adc
ret
adc
outsl
lcall
or
sub
out
mulb
sbb
pop
rcrb
inc
mov
inc
insl
cmpsl
dec
mov
mov
into
push
insb
ficoml
nop
sub
xchg
stos
jns
mov
mov
xchg
jl
push
jns
daa
in
inc
inc
pop
dec
sbb
ret
or
jmp
and
and
out
in
cld
jmp
jb,pn
ljmp
call
xor
mov
cmc
lds
int
push
enter
cmp
mov
push
jmp
fwait
negb
cwtl
in
data16
jae
outsb
cli
push
xchg
imul
push
pop
lret
cld
mov
fmuls
sub
and
dec
rcll
iret
xchg
fs
mov
push
add
xor
test
popf
push
adc
mov
outsb
test
sbb
fdivl
rcrb
push
push
insl
sub
cmpsb
cmpsb
mov
jne
jne
aaa
pop
inc
xor
mov
adc
sbb
and
addr16
scas
xchg
dec
push
ds
and
nop
lcall
mov
push
xchg
or
cli
loope
push
in
dec
fildl
sbb
adc
je
ja
adc
pop
or
fnsave
lret
jae
out
cmp
pushf
cmpsb
sub
lcall
in
outsb
jae
sbb
nop
mov
mov
mov
test
sbb
movsb
push
xchg
add
push
addr16
lahf
popl
xor
aas
shr
jp
xchg
aas
in
andb
add
sbb
cmc
sbb
mov
inc
xchg
push
mov
clc
mov
stos
outsl
lcall
dec
pop
lcall
inc
aam
dec
inc
ficompl
jno
out
pop
sar
testl
fs
mov
cmp
jecxz
add
rcr
cli
dec
pop
push
adc
add
push
loopne
rorb
xor
dec
pusha
xor
test
mov
mov
scas
or
push
leave
pusha
mov
and
jmp
in
test
add
int
pop
popf
dec
adc
jmp
sub
and
cmpl
and
mov
push
mov
xchg
xchg
clc
bound
push
push
fdivl
pop
push
pop
test
mov
testl
outsl
lcall
in
mov
daa
xchg
pop
push
or
inc
adc
clc
adcl
inc
test
mov
lea
and
adc
adc
out
mov
stos
sahf
mov
inc
dec
mov
jo
mov
es
and
dec
cmp
pop
push
mov
pop
push
mov
mov
inc
cli
add
inc
ret
les
mov
sub
addr16
cmpsb
jle
addr16
and
add
mov
hlt
jae
stc
pop
sti
hlt
cvtdq2ps
loop
leave
sahf
es
inc
loope
ja
popf
pop
xchg
dec
pop
dec
mov
push
insl
popf
push
inc
ja
pop
sbb
hlt
cmp
jmp
pop
add
icebp
cmp
enter
addb
sarl
lods
enter
inc
lahf
int
jo
pop
mov
mov
je
std
mov
outsl
dec
push
xor
movsl
xchg
mov
shl
lahf
xchg
arpl
jl
pop
mov
inc
sub
xor
cmp
js
mov
xchg
or
jmp
cli
push
jnp
mov
outsb
cli
or
test
in
jle
and
sti
sub
test
outsb
sbb
dec
sbb
outsb
ror
adc
addr16
push
jg
xor
inc
ror
xor
test
push
movsb
cld
enter
add
pop
mov
iret
dec
mov
fstpl
mov
pop
popf
add
jno
ljmp
push
adc
in
fcompl
mov
mov
jle
outsl
mull
addr16
outsl
jg
fistpll
inc
dec
dec
sub
push
addr16
and
fistpll
mov
stos
daa
ljmp
dec
shr
inc
sub
or
jge
fdivp
pusha
xchg
fwait
shrb
icebp
jno
jo
fisttps
sar
addr16
out
nop
arpl
out
mov
mov
inc
mov
sahf
jmp
movsb
cmpsl
mov
and
imul
sub
pop
icebp
pop
outsl
adc
add
js
inc
addr16
cmpsl
xor
push
pop
inc
cmp
mov
xchg
push
mov
aam
jle
outsb
jnp
pop
push
mov
jmp
mov
popa
mov
mulb
xor
into
notb
in
sahf
lret
sbb
movsb
fcoml
int
and
jo
ret
add
or
cwtl
leave
test
outsl
add
fists
std
addr16
out
es
or
ljmp
mov
imul
xchg
movsb
xor
int
repz
mov
cli
fimuls
lods
lea
mov
insb
in
xor
pop
add
cmp
and
mov
lret
in
jmp
jnp
movsl
scas
push
frstor
mov
gs
add
cmp
sub
push
fildll
lret
addr16
aam
ljmp
movsl
mov
mov
gs
add
cmpsb
ljmp
jno
xchg
inc
mov
cltd
ljmp
mov
jne
cmp
stos
ds
pop
outsb
popa
lret
cmp
lods
arpl
pop
pop
loope
pop
jp
cmp
cmc
popa
pop
stos
jo
mov
sub
out
sbb
fdivr
mov
ja
mov
pop
sub
cmp
mov
aam
cmovno
mov
jno
imul
add
hlt
sub
xchg
and
xor
out
mov
loope
fs
les
xor
dec
pop
xlat
dec
add
mov
and
jns
cs
or
xchg
aam
inc
xorb
inc
mov
pop
adc
cmp
pop
sub
and
into
scas
das
fcmovnbe
imul
in
int3
scas
das
in
int3
scas
das
in
int3
scas
das
in
int3
scas
das
in
int3
scas
push
push
sbb
rcrb
cli
gs
push
out
cmp
std
adc
jo
insl
push
push
js
loop
stc
or
lods
sub
je
sbb
jne
lods
pushf
adc
sub
jns
mov
push
or
pop
push
adc
or
lea
jecxz
sub
or
ficoms
or
push
cwtl
mov
cmp
lret
and
mov
add
idivl
adc
out
lret
lcall
push
cmp
movsl
leave
xlat
push
pop
mov
test
insb
mov
fwait
or
mov
cli
shl
dec
inc
mov
ljmp
pop
push
push
push
sbbl
cmp
jmp
scas
adc
iret
cmc
pushf
cmpsb
mov
insb
sbb
in
push
add
mov
xor
mov
les
jb
loopne
dec
sbb
push
push
mov
aam
stc
and
in
int3
scas
das
fimull
scas
arpl
jno
mov
and
push
insb
push
push
fstpl
mov
push
or
add
enter
icebp
jne
jno
mov
or
cltd
fiadds
inc
inc
out
imul
sub
push
dec
movsb
cmpb
lret
mov
mov
inc
jbe
mov
mov
xor
and
incl
in
or
or
ja
and
mov
mov
fsubrs
push
xchg
mov
jbe
ja
xchg
pop
mov
push
call
mov
and
int3
xchg
and
jnp
out
lret
jl
in
cmp
out
or
mov
loope
in
fldenv
push
mov
loope
mov
sahf
scas
lea
rolb
xchg
das
inc
push
adc
repnz
test
adc
lahf
sbb
xchg
pop
dec
adc
xchg
outsl
outsb
scas
ret
sbb
in
int3
xor
cmpsl
pop
imul
sbb
inc
dec
clc
sar
movlhps
cld
add
das
cmp
mov
test
sarl
xor
cli
movsl
outsb
or
add
inc
jnp
add
mov
repz
xchg
pop
jne
in
gs
jns
pop
mov
clc
gs
mov
or
and
xor
fld
das
in
int3
faddp
stos
stc
mov
cmp
adc
aad
adc
lods
sub
mov
nop
dec
cmp
add
mov
xor
pop
iret
test
pop
dec
lods
pop
cld
mov
push
imul
popa
arpl
sti
mov
push
sbb
inc
lods
xorl
testl
shll
jb
loope
ds
pushf
imul
and
ja
adc
cmp
cld
fdivl
mov
dec
xchg
outsl
adc
and
pop
cmp
xchg
or
scas
mov
mov
dec
gs
add
sbb
jecxz
ret
out
test
addr16
sub
clc
mov
adc
xchg
push
cld
popa
mov
jmp
sbb
pop
negl
mov
push
lock
sub
fsubp
in
mov
sbbb
mov
push
lods
decl
mov
scas
repnz
mov
lea
xchg
lret
adc
scas
inc
jbe
stos
add
sbb
insl
outsb
cmp
mov
cmpb
jbe
xchg
cld
dec
stc
push
adc
fs
push
imul
jmp
push
or
push
ljmp
jo
shlb
loopne
push
fidivs
dec
repnz
mov
cmp
roll
call
jns
loope
mov
mov
pop
pop
cmpsl
pop
adc
add
mov
outsb
pushf
imul
push
cmpsb
lea
xchg
add
popf
int3
mov
xchg
int
xchg
or
dec
or
rorl
subl
je
orb
in
adc
jl
jle
aas
inc
adc
dec
icebp
jmp
jge
lock
test
jb
pop
enter
test
dec
jg
xchg
out
sub
lods
mov
mov
jp
std
pop
xor
in
adc
or
jge
loop
rcrb
das
fistpl
loope
cmp
or
adc
lcall
test
aam
pop
xor
adc
dec
stos
mov
mov
inc
stos
scas
sti
nop
sarl
pop
cmpsb
add
mov
or
cmp
xchg
sbb
sbb
adc
adc
sub
sub
ja
push
push
lods
orl
ljmp
cmp
cmpsb
sub
pop
mov
xlat
sti
dec
stos
adcl
repnz
movsb
shrb
in
shrl
outsb
pop
arpl
movsl
lods
mov
mov
cmc
out
xlat
jg
push
lret
hlt
mov
js
xchg
and
mov
mov
cmp
ret
nop
rclb
cmp
cmp
pop
mov
jl
mov
in
and
faddl
xchg
jns
mov
sbb
test
and
pop
adc
and
scas
das
fnstsw
rcll
mov
dec
mov
cmc
cmpsl
jg
mov
stos
das
addr16
push
adc
inc
pop
dec
cwtl
in
xchg
push
in
fistpll
out
xor
mov
in
aas
inc
shlb
mov
in
int3
scas
dec
mov
jns
push
aad
fwait
cmp
jnp
pop
mov
jno
xor
dec
xor
mov
fisttpl
mov
push
inc
mov
xor
sbb
adc
scas
leave
lahf
jb
ss
and
sub
jg
mov
adc
sub
sbb
mov
das
in
inc
dec
pop
push
inc
jge
sbb
pop
xchg
stos
jns
push
divl
push
pop
loopne
mov
cmp
jae
imul
xlat
mov
and
ret
pop
aam
ret
sbb
mov
sbb
popa
shll
fidivrl
adc
inc
add
dec
loop
pop
xchg
inc
cmp
inc
cmp
loope
and
cmp
test
xchg
pop
mov
test
sti
dec
cmp
lret
dec
scas
pop
push
ret
mov
scas
das
in
int3
scas
das
in
int3
scas
das
in
int3
scas
das
in
int3
scas
das
in
int3
scas
das
in
int3
scas
das
in
int3
scas
das
in
int3
scas
das
in
int3
scas
das
in
int3
scas
das
in
int3
scas
xor
add
jl,pn
das
xchg
leave
lock
push
in
jmp
mov
sbb
addr16
ret
test
pop
shll
sbb
stos
push
test
int
out
test
pop
aad
lds
test
xor
xchg
int
inc
test
pop
mov
sbb
push
test
jne
jmp
cmp
sbb
xchg
push
test
pop
in
inc
test
pop
xorl
test
pop
in
inc
test
pop
inc
shll
or
and
movsl
push
or
js
xchg
add
iret
data16
xor
fiadds
lods
imul
jno
pop
mov
push
xor
cltd
push
pop
hlt
jne
aam
sub
sub
cltd
jg
in
rcrl
ret
bound
pop
test
pop
fildl
loope
mov
in
aam
cltd
adc
mov
testb
pop
fs
ds
arpl
aad
clc
xor
int
mov
sti
notl
jnp
sbb
xorb
inc
je
fists
and
sbb
pop
add
in
push
push
sub
mov
jo,pn
sbb
out
fisttpl
and
cmp
lock
test
ret
push
pop
pop
std
push
xchg
or
and
adc
aad
mov
lods
jmp
xchg
pop
push
inc
xchg
cmp
mov
cmpsl
push
into
scas
mov
adc
mov
lret
add
dec
jnp
sbb
mov
mov
inc
push
dec
mov
adcb
jmp
loop
mov
pusha
out
icebp
les
ret
in
cmp
push
sbb
and
in
mov
and
fstpt
andb
mov
dec
fisubrl
cmp
xchg
nop
pop
jb
popf
repnz
inc
mov
mov
pop
add
dec
test
fwait
add
mov
repnz
jne
mov
pop
pop
sbb
pop
cmp
sbb
xor
aas
jns
mov
mov
inc
aaa
lea
inc
out
dec
in
test
pop
mov
dec
mov
movsb
enter
mov
cmp
cli
mov
aam
xor
mov
xlat
les
call
lcall
pop
mov
pushf
mov
and
add
jo
dec
clc
inc
mov
push
pop
mov
xchg
in
xchg
add
rcr
dec
cmpsb
cmpsl
fadds
int
stos
les
xor
adc
pop
in
outsb
jl
xchg
mov
xor
jl
mov
rorl
mov
sahf
test
test
in
cmp
mov
insb
fidivrs
jg
loope
pop
pop
mov
fadd
pop
popf
adc
or
adc
notb
and
fisubl
dec
pop
cli
inc
imul
mov
jp
ss
push
sub
orb
adc
push
push
push
pop
movsb
mov
push
stc
jmp
mov
ficoms
inc
cli
hlt
cmpsb
ds
shlb
loopne
cli
jl
out
push
ljmp
push
xchg
and
stc
mov
or
aam
xor
pusha
jmp
push
mov
xor
mov
std
sub
inc
jmp
lock
das
sub
loope
cmpsl
int3
pop
pop
xchg
test
test
stc
jno
sub
cld
fadds
je
and
sbb
out
out
pop
and
sahf
push
mov
test
and
test
data16
cmpsl
cmc
mov
cmpsb
push
hlt
dec
pop
push
cmp
ja
cmpsb
adc
inc
pop
sub
in
pop
and
cmp
das
loop
fwait
sub
popf
ret
mov
mov
test
jno
mov
int
push
ucomiss
push
stos
mov
fs
addb
or
push
push
push
std
cwtl
fcmovbe
addl
data16
cld
add
pop
pop
out
mov
lock
out
pop
pushf
mov
mov
cmp
jle
mov
mov
stos
clc
je
adc
fistl
repnz
data16
or
fmulp
mov
dec
inc
mov
jmp
add
in
push
sub
std
stc
inc
fildl
push
lods
jne
stos
pop
sub
add
add
jo
pop
push
fisubs
test
data16
push
lods
add
test
sub
loop
xchg
dec
mov
pop
rcrb
ror
sahf
cmp
addr16
adc
jge
jecxz
dec
fcompl
or
jge
mov
lahf
mov
sar
pusha
sub
mov
push
add
lods
ljmp
ret
jne
shlb
mov
xor
sbb
inc
xchg
lods
mov
mov
and
lret
mov
adc
insb
mov
push
jo
jle
jbe
clc
jns
jge
lock
cli
jnp
bound
movsl
loope
test
push
inc
pop
inc
insl
mov
orl
mov
push
add
sti
dec
cli
and
gs
gs
add
push
and
mov
dec
subb
stc
push
lret
popf
jmp
push
mov
icebp
lret
pop
adc
add
insb
xor
push
mov
iret
push
loopne
push
xchg
out
leave
stc
mov
mov
cmc
mov
in
xchg
loop
ret
arpl
or
lods
push
pop
fxch
movsl
repnz
out
pop
xchg
outsb
mov
leave
arpl
push
bound
rclb
mov
mov
pop
xchg
mov
sub
adc
cltd
xchg
push
out
rolb
and
mov
sub
fcom
out
mov
scas
inc
pop
enter
push
mov
sbb
sub
stos
adc
mov
rep
jno
jb
inc
adc
xchg
xor
outsl
jecxz
vcmppd
inc
ret
push
cld
xor
sahf
cmpsb
push
mov
insb
rcrb
fldpi
icebp
mov
adcl
cmc
cmpsl
cmp
lret
inc
sbb
or
add
mov
jae
mov
mov
in
int3
mov
jmp
out
cmp
mov
push
xchg
lea
aam
add
or
call
push
xchg
mov
sbb
or
add
inc
repz
mov
addb
icebp
xchg
dec
pusha
addb
or
sbb
mov
sub
pop
bound
stos
setne
add
xlat
push
out
das
lods
mov
dec
xchg
and
lock
xor
in
cmp
scas
or
push
mov
imul
ret
scas
popf
aam
sub
mov
das
jae
fistpll
cmpsl
test
aam
sbb
std
test
and
notb
add
xor
ljmp
adc
pop
loope
in
call
xorl
popf
cmp
and
push
xor
ret
unpckhps
sarb
xchg
test
ds
cmc
and
sub
sub
scas
das
and
lods
rorb
xchg
int
adc
mov
jl
inc
int3
add
cmp
xchg
nop
mov
lcall
sbb
jae
jge
sub
std
jle
cmp
inc
int3
lods
in
icebp
imul
push
lret
in
test
and
add
sbb
dec
pusha
mov
xchg
lret
aad
adc
pop
test
mov
xchg
xor
xor
mov
in
shll
das
and
addr16
push
dec
mov
aad
es
nop
dec
jnp
enter
aaa
sar
enter
jl
loop
mov
xchg
sub
fwait
imul
jae
js
scas
das
xchg
rcrb
push
sbb
ss
sahf
push
pushf
xor
inc
sbbb
sbb
or
ret
dec
mov
or
jns
movsl
fcoml
inc
in
daa
fisttpll
rcrl
xor
int
fidivl
mov
mov
iret
jg
inc
mov
insl
sub
fistl
pop
lock
cltd
cmpb
cmpsl
je
pop
mov
pop
sbb
lahf
mov
xchg
add
stc
dec
sti
sub
adc
ljmp
mov
adc
int3
je
aaa
divb
sbb
in
and
pop
dec
push
mov
es
xchg
std
clc
cmp
ljmp
adc
pop
xchg
fisttps
push
lods
mov
or
enter
imul
and
and
xor
fldcw
xor
mov
inc
std
cmpsb
sbb
outsl
rcrl
pop
xrelease
sub
aad
jecxz
call
jnp
lea
push
xchg
mov
js
daa
cld
cmpb
cld
xchg
cmp
pop
das
sub
pusha
lret
rcrb
sub
test
jo
aad
comiss
fists
stc
mov
mov
cltd
push
xchg
mov
sub
xchg
cltd
mov
jae
jmp
stc
mov
lea
fidivrs
dec
cmpsb
push
in
xchg
sub
mov
sbb
inc
and
xchg
imul
cmc
mov
cs
push
jo
shr
jmp
cmc
mov
inc
add
inc
xchg
aam
lahf
adc
dec
ss
jmp
inc
lret
sub
les
mov
jne
mov
fidivl
mov
pop
ficomps
pop
and
movsb
dec
ja
out
push
popa
in
sahf
cli
jne
bound
movsb
lcall
add
dec
mov
push
sbb
jp
stos
cmpsl
dec
inc
fimull
add
cwtl
nop
lock
push
cmpsl
jb
stos
outsb
xor
lock
nop
lcall
out
adc
icebp
pop
sbb
cmp
pop
in
imul
sub
pop
or
pop
push
jp
movq
test
fcom
outsb
idivb
push
into
outsl
roll
mov
std
fsubrl
ss
fcompl
jecxz
out
or
jb
cli
aad
arpl
dec
dec
lock
inc
adc
mov
loop
mov
cmp
sbb
jmp
or
loop
dec
mov
loopne
repz
loope
jl
sub
sti
mov
repz
push
stc
ja
xlat
pop
cmp
jecxz
lea
lock
mov
sub
cmp
adc
fstp
in
adc
xchg
repnz
stc
das
xor
or
xor
je
push
out
push
jp
imul
pop
rorb
movsb
lahf
add
loope
int
jnp
mov
jmp
ret
lods
sahf
jmp
popf
push
xchg
xor
iret
repnz
xlat
pop
xchg
mov
test
stos
xor
nop
stos
aad
xor
dec
pop
and
stos
fucomp
outsl
inc
dec
in
insb
scas
mov
popa
loop
mov
ss
adc
mov
xchg
nop
into
int3
int3
jno
jae
inc
mov
sbb
push
repz
inc
cmp
jecxz
pop
push
scas
call
sub
dec
repz
and
adc
mov
stos
and
sub
xor
sub
lea
and
int
sbb
or
nop
addr16
ret
stos
and
add
in
int
stos
push
xchg
addr16
jb
jge
in
or
sahf
test
adc
mov
lahf
cmp
mov
cmpsl
js
sbb
mov
push
sub
iret
mov
add
mov
mov
fwait
push
sti
shrl
mov
cmpl
call
and
test
jmp
sahf
mov
or
aam
inc
popf
popf
inc
test
jmp
or
add
out
mov
dec
adc
push
aaa
iret
mov
in
nop
test
fidivs
and
xchg
test
testl
jo
std
jle
dec
ret
out
push
sti
dec
loopne
imul
add
mov
js
dec
or
fisttpll
pop
fistps
sbb
sahf
xchg
jg
mov
add
bound
loope
stc
lods
lret
jl
sbb
mov
jg
push
popf
and
xor
push
bound
lret
jbe
notl
daa
dec
xor
dec
pop
xor
jecxz
or
fidivrs
pop
mov
repnz
iret
mov
pushf
mov
mov
jae
jnp
xor
cmp
jae
dec
sub
sub
aas
inc
or
movsl
adc
in
jle
fsubrl
arpl
mov
push
mov
or
movsl
ljmp
mov
idivb
jae
and
xchg
mov
repz
mov
in
neg
or
push
lea
sub
xchg
cmp
in
sub
dec
xchg
fmuls
js
int3
sbb
mov
ret
ss
clc
mov
mov
xchg
daa
lods
lea
sbb
repz
fistpl
mov
mov
in
xor
mov
mov
shll
daa
cmp
jl
dec
lods
push
xchg
add
std
mov
addr16
mov
xor
ror
shlb
dec
pop
push
xchg
sti
jne
cld
shl
mov
mov
movsl
push
jns
int3
shl
scas
mov
sub
repz
rorl
cmp
in
add
xor
pop
enter
aas
leave
daa
into
push
add
pop
test
clc
outsb
sub
jge
cmp
sti
adc
insb
sahf
pop
roll
cltd
mov
mov
cmp
test
mov
xchg
ffree
or
mov
int
push
mov
mov
mov
add
mov
inc
outsl
out
add
jae
out
stos
out
cmp
xrelease
cmp
mov
fildl
mov
icebp
in
inc
mov
push
cmpsb
in
push
test
es
or
stos
ret
push
aaa
mov
dec
divl
adc
mov
jns
or
or
aaa
cmp
call
stc
out
add
stos
cli
or
inc
loopne
cli
cli
cwtl
lret
in
icebp
pop
xchg
ja
xor
adc
testl
jo
cltd
add
ret
jg
dec
gs
imul
push
inc
rclb
or
mov
and
ds
call
mov
jno
in
in
ret
xor
shr
sbb
stc
movsl
mov
mov
scas
loope
idivb
enter
push
test
gs
mov
xchg
popf
pop
testl
cmp
das
jle
xchg
scas
cmp
mov
push
xchg
stos
sub
lcall
and
lds
mov
cmpsl
testl
jle
aad
test
adc
lahf
mov
jae
jno
call
inc
loope
test
cmp
sub
and
das
jmp
lods
xchg
lea
xorb
or
push
sti
pop
cmpsl
push
sti
push
imul
sbb
aam
fldenv
loopne
and
jmp
push
xor
lock
dec
flds
and
inc
insl
nop
mov
mov
test
push
jae
mov
sub
xchg
push
ss
add
push
cs
enter
clc
fcompl
pop
push
shl
sbb
or
pop
dec
cs
stos
rorl
add
push
andl
add
aam
popa
dec
mov
sbb
mov
aam
lods
pop
fnstsw
jecxz
outsl
sti
dec
mov
push
sub
scas
dec
leave
fcmovbe
cmpsb
mov
outsb
test
cmpsb
pop
adc
adc
daa
adc
sbb
jmp
xorl
enter
mov
in
or
fwait
inc
push
insl
push
jmp
cli
mov
xchg
mov
aad
mov
dec
xorb
pop
addr16
cmp
dec
sbb
sub
or
jne
data16
push
jno
mov
xbegin
mov
mov
mov
ja
add
aas
lods
cli
int3
mov
stos
fsubp
xchg
mov
jnp
or
mov
add
adc
cmp
dec
xor
cld
jns
daa
and
pop
jnp
and
out
lea
push
insl
sub
and
movsb
add
inc
fbld
sbb
xchg
dec
loope
mov
xor
xchg
lahf
mov
or
ret
xchg
pop
lods
sbb
js
add
mov
xlat
xor
lret
dec
sbb
push
add
pop
aaa
mov
cmc
outsb
jle
sbb
dec
pop
lock
and
sub
adc
mov
push
gs
or
add
push
movsl
sub
or
mov
test
fs
lret
and
xchg
fs
test
sub
push
xor
jno
outsb
pop
pop
jge
dec
movsl
rcrb
out
dec
xor
mov
jnp
rol
fwait
inc
and
push
mov
push
loope
sub
lahf
cli
push
loopne
in
mov
ret
outsl
testb
out
sub
mov
push
ficoms
mov
mov
dec
pop
jle
in
stc
cwtl
xor
stc
inc
xor
jb
cmpsl
int3
jae
movsb
outsb
adc
inc
mov
pop
test
push
movsl
ss
cwtl
and
imul
outsl
mov
dec
lahf
sahf
cld
cmp
mov
popa
adc
loopne
cmc
cmp
jmp
xor
loopne
iret
xor
mov
dec
ja
xchg
inc
or
xchg
jle
xor
sti
push
insl
push
movsl
ss
xor
lea
adc
into
inc
hlt
jge
loopne
inc
addr16
cmp
mov
and
push
in
cmp
flds
dec
mov
xor
mov
dec
dec
inc
mov
andl
and
lret
enter
mov
roll
out
lods
mov
fs
xlat
xchg
add
sbb
stos
jmp
shl
push
dec
inc
hlt
jge
pop
testb
xchg
pop
scas
and
imul
movsb
dec
fnstsw
mov
ja
lahf
arpl
cmp
sbb
add
repz
xchg
add
push
into
out
push
push
mov
dec
push
jp
sbb
cli
mov
popf
mov
ficoms
int
outsb
loope
cwtl
sahf
iret
sar
cmp
push
ffree
inc
add
xchg
lret
js
adc
add
enter
dec
outsb
fs
shll
outsb
and
xor
mov
outsl
std
iret
jle
dec
lret
sbb
movb
or
mov
cmp
jg
ror
arpl
das
mov
xor
scas
cli
ja
lret
jo
int
push
cmp
adc
int
leave
push
mov
pop
daa
cmp
nopl
add
xchg
scas
cmp
add
pop
mov
daa
and
add
pop
cmp
mov
int
or
pusha
popa
mov
js
dec
mov
mov
push
pop
negb
cmp
jge
mov
ja
mov
out
insb
call
cmp
mov
lcall
and
or
into
pop
sub
inc
jmp
insl
lahf
movsb
pushf
add
inc
cmp
cltd
push
lea
in
push
mov
outsl
inc
sub
popa
dec
les
adc
fs
or
ljmp
push
pushf
ror
mov
and
pop
push
mov
push
or
push
fs
cwtl
popa
fists
mov
outsb
sbb
jmp
push
and
mov
pop
fcoms
mov
fists
sub
xlat
arpl
movsb
mov
cmp
mov
mov
scas
divl
push
jge
pop
das
mov
sahf
mov
cmc
jg
fdiv
mov
add
xor
pop
hlt
mov
xchg
mov
add
dec
xchg
iret
cli
or
fidivs
or
pop
insb
add
movsb
mov
sarb
daa
add
nop
pop
das
sbb
xchg
insb
sub
ret
adc
aas
mov
mov
data16
and
scas
out
push
fsubrp
jne
pop
mov
add
xchg
cltd
mov
xlat
mov
pop
loope
pop
lcall
sbb
push
fidivrl
adc
test
lods
jb
mov
mov
mov
out
mov
mov
sbb
loopne
jnp
mov
setp
mov
pushl
stos
mov
leave
push
xchg
not
pop
das
mov
cld
pop
lret
lods
dec
mov
imul
xor
lods
and
andb
daa
pop
loope
sbb
and
out
mov
dec
xor
or
insl
push
add
sarb
shl
nop
push
das
sbb
rcl
xlat
fnsave
cs
lock
adc
pcmpeqb
into
comiss
inc
mov
sbb
push
das
sbb
mov
cli
xor
rclb
sub
sbb
out
lret
das
test
lock
das
dec
sub
sbb
or
mov
mov
add
lret
das
sarl
xor
xchg
sub
xchg
lock
rolb
pop
push
sbb
or
mov
add
add
mov
or
mov
sub
mov
push
rol
cwtl
imul
adc
js
adc
iret
repnz
sbb
cmc
push
data16
pusha
adc
fbld
enter
sti
cmp
icebp
dec
and
aas
sbb
imul
lea
test
hlt
mov
xlat
cmp
push
int
push
and
ffree
nop
aad
andb
movsb
and
sub
mov
mov
inc
jle
dec
stos
lods
mov
lahf
jns
mov
fwait
sub
mov
push
ljmp
lcall
js
mov
shrb
hlt
insl
mull
jp
ret
mov
inc
push
mov
test
imul
dec
pushf
mull
xlat
cmp
cmc
adc
and
loop
lahf
adc
rolb
add
cmp
subb
into
into
clc
jb
dec
push
not
mov
mov
outsb
pushl
and
cmp
mov
popf
dec
and
inc
cltd
adc
hlt
mov
lret
and
cmp
mov
inc
jno
and
dec
inc
jge
call
cwtl
mov
xchg
dec
scas
outsb
int
sub
insl
mov
out
push
test
aas
testl
in
repnz
push
mov
pop
jno
xlat
dec
jge
aas
das
dec
or
clc
aad
or
les
and
xchg
cmpsb
push
pop
push
into
roll
das
push
and
icebp
clc
xchg
sbb
sbb
xor
mov
imul
jo
pop
mov
pusha
xchg
adc
inc
shlb
and
xchg
popl
and
xchg
ret
enter
xchg
sub
loopne
mov
sbb
decb
mov
mov
and
xchg
ret
lret
and
sub
xchg
test
loopne
mov
sbb
mov
cmp
leave
or
xchg
jecxz
mov
sub
clc
and
lods
lock
cmp
fldcw
les
inc
mov
add
add
mov
jle
mov
cmp
pop
mov
push
jg
or
insl
cmp
loope
rcl
mov
jmp
add
movsl
sbb
jecxz
sub
cmp
cmp
ljmp
or
lcall
ret
push
cmpsb
mov
rcl
push
imul
jp
pop
lret
icebp
jo
in
addr16
psraw
push
dec
or
inc
negb
jbe
mov
mov
lcall
mov
dec
outsl
pusha
mov
mov
das
insb
adc
shr
adc
decl
popf
xlat
sbb
mov
rorb
arpl
aas
sbb
lret
jns
lea
test
psraw
into
inc
mov
in
pop
fidivs
das
mov
subl
cli
mov
xchg
arpl
cwtl
dec
sbb
enter
adc
mov
xchg
pop
aam
push
mov
mov
inc
adc
movb
adc
in
movsl
dec
sub
nop
cmp
mov
adc
pop
ja
loop
or
dec
mov
push
jge
shl
test
fldenv
shlb
push
jb
mov
pop
pop
cwtl
and
outsb
jge
mov
je
inc
pop
mov
lret
cmp
and
repnz
cs
xor
or
out
sahf
arpl
sbb
push
ljmp
out
mov
js
mov
jne
leave
pop
inc
xchg
lods
std
in
jb
push
inc
clc
mov
jg
lret
cmp
or
dec
lret
out
dec
mov
lret
push
or
cmp
mov
sbb
fsts
mov
dec
inc
pop
dec
and
xchg
add
insl
lods
imull
cmp
xchg
jmp
add
outsb
cwtl
jl
jne
orb
jecxz
and
cmpsb
test
inc
adc
add
adc
cltd
mov
sbb
mov
stos
xchg
xchg
adc
push
or
mov
outsl
mov
outsl
mov
jne
sub
ja
pop
pop
inc
rcrb
push
sbb
and
jmp
pop
sbb
pop
addr16
push
es
std
iret
or
cmp
add
or
cli
das
pop
inc
rcr
sbb
or
inc
or
xlat
es
pop
stc
mov
aad
mov
mov
cmp
add
daa
mov
clc
ljmp
in
mov
and
pop
inc
shlb
xchg
dec
push
cmp
pop
xchg
sub
pop
inc
fs
aas
pop
gs
jne
test
or
dec
sbb
inc
rol
and
rolb
shl
iret
int
mov
mov
test
rcrb
enter
sti
ds
nop
jne
int3
dec
xchg
pop
pop
inc
xchg
mov
sbb
loopne
mov
mov
mov
pushl
mov
xlat
in
test
mov
dec
das
pop
inc
shlb
xchg
adc
or
repz
push
xchg
mov
cmp
adc
popf
cmp
insb
les
cmpsb
adc
sbb
pop
imul
pop
mov
sub
in
js
mov
pop
xchg
pop
hlt
sub
cltd
pop
pop
sub
mov
mov
add
popa
aaa
int3
loopne
xchg
xchg
clc
das
and
or
adc
jg
adc
mov
pop
xchg
fldcw
mov
addb
and
cmc
adc
out
inc
jp
inc
or
mov
xchg
cs
push
mov
es
sahf
pop
xor
in
jmp
sbb
dec
nop
xor
daa
xchg
jno
push
mov
fs
in
mov
clc
xchg
clc
cs
jecxz
mov
mov
inc
movsb
xchg
scas
out
add
sbb
dec
adc
jge
mov
orb
inc
sbb
jg
out
lods
out
cmp
mov
xorl
push
out
jno
fsubrl
les
popa
stc
addb
inc
push
sbb
int
pushf
xchg
push
adc
jecxz
xor
addb
insl
subb
jge
cmp
xor
into
xchg
cmp
xchg
xchg
lock
lahf
mov
inc
pop
xor
cs
lret
sbb
mov
xchg
ss
cmpsb
int
fwait
mov
or
dec
jle
mov
cs
loopne
cli
loopne
dec
inc
imulb
icebp
and
sub
insb
pop
dec
js
mov
add
fnstenv
jb
cmp
jecxz
clc
sub
clc
sbb
cmc
ljmp
inc
enter
lds
adc
dec
dec
adc
inc
daa
pop
adc
sub
cmc
ljmp
push
add
pop
ljmp
pop
sub
jb
fisttpl
lahf
sub
mov
mov
fdiv
ljmp
xchg
push
repnz
and
ja
mov
lods
jp
mov
pusha
dec
dec
mov
fldl
xor
mov
in
jp
mov
push
ljmp
in
jg
push
insb
mov
shll
sub
or
dec
into
hlt
movsb
pop
in
push
ljmp
gs
inc
pop
movsl
rclb
pop
insl
out
mov
xchg
js
push
mov
mov
xor
fstp
xor
fst
ja
mov
mov
scas
ljmp
ret
dec
out
xor
mov
dec
fs
pushf
test
stc
imull
cltd
or
jecxz
jbe
sub
int
dec
or
dec
cmp
cmp
pop
fadd
sub
jle
sub
mov
add
inc
mov
rcll
jl
cmpsb
pop
mov
xor
xchg
xchg
xor
inc
pop
jae
fstl
imul
subb
xchg
out
cltd
dec
scas
ja
mov
aas
ss
mov
rcrb
xor
test
xor
xchg
xchg
xor
in
push
or
imul
cli
lods
jp
mov
sub
imul
fists
pop
jns
lret
insl
scas
adc
repnz
lahf
jne
add
dec
adc
fs
sbb
dec
or
fcomip
mov
pop
outsb
and
pop
jp
mov
lods
push
flds
dec
cmp
aad
pop
repnz
in
lods
in
push
sub
sub
sub
jo
sub
jo
sub
jo
sub
jo
sub
jo
sub
adc
and
sti
insl
mov
ret
ret
push
xchg
stos
pop
inc
adc
adc
lock
add
add
jnp
xor
xchg
add
stc
movb
pusha
inc
push
outsl
leave
xchg
je
addr16
aaa
nopl
test
pusha
pop
ljmp
inc
or
inc
push
dec
dec
neg
cmc
xor
dec
cmp
pop
cmp
xlat
inc
mov
add
sti
jns
mov
es
mov
fildll
ret
adc
or
ret
imul
dec
sub
loope
ljmp
mov
hlt
xchg
pop
into
push
jns
sub
push
cs
dec
jge
std
in
sbbl
cltd
jno
leave
dec
stc
ds
pop
lea
in
adc
mov
fmuls
inc
imul
jae
mov
mov
jge
add
adc
add
mov
and
sub
gs
out
pop
lea
mov
sti
jno
clc
xchg
jmp
mov
jno
adc
andl
xor
or
aas
sbb
jo
jo
and
ficoml
mov
mov
mov
push
out
les
jmp
cmp
pusha
push
and
pop
mov
mov
hlt
pop
mov
and
rcrl
xchg
push
jl
cmp
push
cmpsl
arpl
cmpsb
jo
icebp
xchg
push
ljmp
push
mov
cmp
test
dec
sbbl
shr
out
pop
in
lahf
xor
movsl
sbb
dec
int3
sub
mov
sbb
rorb
xchg
adc
into
or
sarb
nop
pop
mov
jmp
shlb
movsl
pushl
pop
mov
cmp
pop
stos
dec
pop
js
mov
dec
xor
add
cwtl
mov
pop
jnp
fldl
xor
and
in
push
inc
fisttps
stos
adc
inc
stos
shrl
hlt
xchg
addr16
push
jo
cmp
aam
or
mov
in
mov
add
mov
mov
in
sbb
bound
adc
jnp
into
mov
sbb
dec
nop
je
repz
clc
add
add
js
fistpll
loop
sti
scas
scas
adc
sbb
inc
ret
push
fldenv
outsl
jmp
mov
and
repnz
inc
scas
xchg
xchg
shrb
sub
lods
lock
dec
mov
cmp
test
lcall
enter
repnz
fs
sbb
dec
sub
call
inc
dec
jno
inc
xor
in
in
mov
push
or
ds
loopne
pop
sbb
cs
xchg
mov
jno
inc
xor
xorb
mov
outsl
sti
fwait
or
inc
bound
push
xor
jp
fldl
or
in
les
xchg
popf
loope
nop
outsb
iret
mov
and
sub
lea
mov
inc
jg
pop
mov
push
incl
adc
insb
mov
loopne
stos
test
stos
cmp
sbb
and
lret
lea
addr16
imul
popf
xchg
cmp
aaa
xchg
add
lcall
ret
add
lea
and
and
repz
andl
pop
sbb
subl
mov
push
scas
jl
rorb
cmp
mov
and
int3
ret
adc
je
pop
and
int3
push
sbb
pop
leave
sub
icebp
mov
cmp
cltd
mov
mov
rolb
call
xor
shll
out
pushf
mov
cmp
and
nop
cwtl
stos
inc
int
mov
cmp
mov
push
addr16
mov
xor
stc
out
xlat
xlat
sub
lods
jg
sti
into
or
xchg
lahf
adc
mov
je
mov
test
mov
mov
sub
stos
repz
and
das
leave
jp
jns
out
je
cmp
in
mov
mov
or
mov
mov
push
pop
fsubs
lret
decb
arpl
xlat
jno
jne,pt
mov
enter
sub
loop
jge
test
mov
dec
cmp
arpl
lahf
cmp
and
xor
xor
fcoms
push
aam
inc
mov
ret
adc
jne
aas
cmp
or
je
out
sets
popf
movsl
xor
ret
wrmsr
push
les
xor
int3
in
mov
fmuls
lock
lods
iret
inc
jp
rorb
push
iret
lods
arpl
pusha
cmp
or
xor
adc
cmp
push
imul
or
mov
lock
cmpsb
sbb
lret
in
add
and
jp
fbstp
xchg
lock
pop
mov
cs
push
pop
inc
leave
ja
fistpl
iret
inc
cmp
mov
push
xlat
iret
sub
ret
inc
pop
mov
imul
dec
xor
mov
test
pop
push
push
xchg
add
out
sub
add
in
dec
or
es
lcall
shlb
fs
pop
repnz
std
xchg
add
add
outsb
inc
xor
inc
sahf
ljmp
cmp
dec
sub
mov
cmc
mov
out
inc
fs
fnstcw
xor
or
or
push
and
loopne
inc
fidivrl
xchg
xchg
jl
test
imul
leave
test
mov
sub
push
add
inc
jp
daa
adc
popa
ljmp
repz
icebp
in
mov
xor
test
jbe
cmp
cmpl
arpl
jmp
jbe
push
cwtl
pushf
data16
stc
or
mov
lea
je
xchg
outsl
xlat
stc
ss
push
mov
adc
pop
jge
xor
xchg
cmpl
mov
bound
sarl
cmpsb
neg
shrb
sub
insl
je
cmp
sub
stos
xchg
and
nop
sub
mov
repz
dec
lods
dec
outsb
pop
mov
and
or
cmp
iret
rcr
or
mov
adc
movsb
in
in
and
cltd
adc
push
adc
add
xor
mov
out
and
in
movsl
jns
jmp
mov
cmp
loop
xchg
add
les
hlt
inc
cmp
xor
out
test
xchg
cli
scas
mull
daa
xchg
dec
jmp
iret
test
jbe
outsl
not
rcr
icebp
inc
xor
dec
jp
out
jb
ja
pop
xor
xor
jmp
inc
loope
inc
push
aam
mov
mov
push
lcall
sub
and
shrl
popa
ret
mov
pop
push
jl
or
ljmp
xchg
cmpl
pop
xor
mov
sbb
xorb
jle
adc
ret
push
and
lcall
or
adc
push
scas
fyl2x
loop
ljmp
cwtl
cld
mov
dec
mov
sti
hlt
sahf
out
lret
pop
pusha
call
add
lods
notl
xchg
lahf
add
mov
sarl
scas
jbe
xor
sar
xchg
mov
jecxz
std
mov
clc
sub
inc
shll
inc
ja
mov
xor
decl
push
xchg
scas
and
mov
sbb
sti
test
sbb
in
arpl
add
jnp
andb
sub
rolb
out
jb
sahf
cmp
mov
repz
cmp
jbe
xor
pop
pop
cltd
mov
mov
inc
mov
push
xchg
icebp
xor
sahf
xchg
out
pop
ret
mov
xor
idiv
int3
mov
jecxz
test
subl
push
sbb
lods
mov
lret
fidivs
mov
and
pushf
mov
jne
add
lods
iret
or
jae
mov
sbb
adc
fistpll
imul
mov
arpl
sbb
cld
mov
mov
inc
pop
fld
in
xchg
jge
push
out
mov
notl
loop
icebp
xchg
fldl
sub
fldt
stos
jp
hlt
xor
mov
dec
sub
inc
adc
cmpsb
sti
push
movsb
pop
xor
push
cli
push
inc
and
ja
mov
dec
shl
sub
imull
int
and
mov
insb
push
push
mov
mov
je
xchg
jne
enter
call
nop
pop
push
rolb
popf
arpl
push
sbb
pop
ret
push
dec
loope
and
mov
in
cmpb
or
sub
sbb
movsl
into
out
lahf
and
and
insb
push
addr16
out
pop
cs
add
movsl
pop
jne
cmpsb
sbb
scas
inc
inc
sub
xor
jae
mov
push
insb
cmp
pop
pop
testl
jp
sbbl
inc
sub
in
pop
and
jae
lods
call
repz
add
xlat
fsts
pushf
pusha
xor
xchg
aam
cmp
repnz
mov
sub
push
add
and
bound
mov
xchg
sub
cmp
jae
push
aad
outsl
and
out
or
mov
outsl
and
xor
outsl
and
jae
in
sarb
xor
cmpsl
int3
cli
rcrl
xorb
or
adc
fistl
jo
push
xchg
daa
xor
hlt
mov
mov
jg
daa
pop
push
pop
mov
andl
loop
jo
xor
xor
imul
lret
mov
mov
imul
push
aam
and
sbb
jecxz
out
cs
and
mov
ljmp
imul
sbb
add
cmp
mov
sub
fiadds
lods
pop
and
push
iret
cmp
gs
push
ret
dec
jae
xchg
push
cmp
movsb
push
stc
loope
cmp
mov
sbb
ret
jbe
push
rolb
mov
xchg
add
xchg
mov
mov
push
mov
mov
pop
mov
je
xor
or
cmp
jae
sub
pop
push
pop
xlat
pop
insb
in
jae
inc
lret
mov
out
mov
add
jmp
outsl
or
and
add
es
aad
or
xor
into
or
sahf
ljmp
jecxz
rorl
pop
mov
es
mov
lret
jle
subl
lods
mov
ficompl
xchg
mov
sbb
dec
push
dec
push
xchg
addr16
xchg
rcl
and
jae
xor
movsl
mov
movsb
pop
stc
les
xor
adc
jb
test
mov
xor
out
loop
cmp
mov
test
push
in
hlt
or
and
andl
mov
movsb
lods
mov
xchg
outsb
push
sbb
sbb
cmp
sbb
xchg
sbb
das
jecxz
lock
inc
dec
mov
xchg
pop
movlps
push
sbb
sbb
rclb
sbb
xchg
outsb
push
jns
sbb
and
push
mov
fstl
pusha
xor
movsb
out
or
bound
iret
js
call
mov
xchg
outsb
cmp
push
mov
sub
testb
xchg
mov
fwait
test
xchg
mov
inc
mov
test
xlat
movsb
xchg
mov
dec
cmp
jmp
mov
mov
xor
loope
cmpsb
inc
rcrl
divl
xor
or
loope
rolb
adcl
insb
mov
sub
sbb
call
fsubrp
cmp
pop
sub
jecxz
pop
pushf
cltd
xchg
push
cmc
dec
push
pop
mov
out
movups
dec
sub
fsts
xor
xor
xor
dec
dec
xor
nop
cmp
scas
imulb
cmp
rcll
jle
xchg
mov
lods
jno
rcrb
adc
out
aam
sahf
repz
jmp
bound
imul
test
scas
lds
jb
in
dec
notb
fistpl
test
stos
sub
inc
es
xor
pop
mov
or
cmc
lahf
and
and
inc
and
dec
cmp
int3
push
scas
push
adc
in
push
pop
fs
jns
push
int3
xchg
gs
in
xor
sbb
iret
nop
lret
mov
inc
pop
push
add
cmp
add
inc
ss
inc
mov
cld
mov
mov
int3
mov
notb
ds
js
std
loope
aam
dec
cmpsb
fwait
jge
iret
lret
orl
int
adc
pop
movsb
inc
sub
xor
sar
loope
andl
loope
xor
xchg
push
pop
dec
xor
fstpl
mov
enter
jg
mov
cmp
jnp
mov
lods
pop
sub
std
loope
sbb
lahf
lods
arpl
sub
int3
std
adc
loopne
dec
inc
ss
jnp
jl
and
andl
inc
insb
scas
push
adc
nop
sbb
jb
lea
push
cltd
fwait
and
cmp
inc
aad
dec
xchg
push
into
fisubrs
frstor
mov
mov
dec
insl
fdivrl
cmc
jge
mov
mov
inc
push
mov
push
mov
lock
iret
inc
cltd
adc
dec
push
ja
int3
push
xchg
imul
adc
xchg
frstor
jge
dec
inc
inc
lahf
xor
xchg
xor
and
and
scas
mov
xchg
mov
aas
push
dec
inc
pop
xor
pop
shrl
mov
insb
mov
notl
shl
and
push
lret
stos
sarb
jecxz
inc
movsb
out
pop
dec
push
adc
inc
in
dec
dec
pop
das
scas
mov
or
mov
test
dec
dec
test
loopne
rorb
push
sub
das
pop
and
pop
lds
xchg
or
in
test
adc
jmp
adc
sub
push
or
jns
or
test
mov
inc
fs
test
adc
jg
ss
or
loop
es
outsb
pusha
popl
mov
cmp
int3
add
ds
xor
testl
in
or
mov
sbb
push
cmp
sub
xor
adc
clc
push
or
mov
xchg
xchg
lahf
icebp
pop
call
inc
sbb
push
cmp
sahf
adc
jbe
lcall
addb
loopne
sub
cmc
test
mov
cmp
mov
or
jno
or
mov
test
mov
out
adc
sti
mov
mov
aas
dec
adcl
inc
dec
mov
mov
bound
inc
mov
inc
dec
mov
push
push
aas
add
jno
inc
ror
pop
adc
das
ja
or
jnp
pop
push
push
in
xchg
enter
xor
xchg
push
xor
add
push
inc
rcll
dec
ss
push
pop
mov
mov
jg
pop
je
dec
ficoml
adc
sbb
dec
mov
mov
adc
add
scas
addb
mov
dec
cmp
mov
in
cs
mov
cs
mov
lret
insb
sbb
test
mov
lock
cmp
pop
pushf
in
aas
out
inc
sub
mov
aaa
sar
imul
xchg
in
pop
cltd
mov
insb
pop
sti
mov
xchg
out
int
adc
stc
imul
int3
mov
daa
add
xor
aam
add
mov
mov
leave
push
in
insb
mov
cs
sbb
jno
rclb
sub
dec
inc
adc
movl
mov
cmp
insl
xchg
fistps
lea
insb
jb
jp
in
pop
dec
jp
rorl
fcoml
sbb
aad
or
mov
inc
lret
xor
mov
lahf
lods
sub
into
sbb
sub
mov
movsb
roll
int3
push
ror
jp
push
xchg
lock
bnd
sub
push
int
loopne
pop
shrb
in
fwait
sarb
roll
int3
pop
fbld
inc
out
push
repnz
sub
stc
or
jmp
stc
shll
xlat
sarb
roll
int3
lret
addr16
loope
fwait
lret
sub
inc
push
cli
xor
incl
jo
mull
and
jae
out
imul
add
loope
fnsave
push
dec
push
cli
xor
mov
addb
inc
push
jge
repnz
push
cwtl
inc
and
push
mov
pop
push
stos
jbe
dec
daa
mov
sub
pop
xchg
lock
cltd
lock
sub
pop
sti
mov
test
mov
std
jae
xchg
inc
inc
push
jnp
fadds
sbb
test
aaa
cmp
pop
xlat
jb
test
mov
rcrl
aad
add
cli
addr16
push
cli
addr16
push
cli
addr16
push
cli
addr16
push
cli
addr16
push
cli
addr16
push
adc
inc
mov
push
xor
jl
cmp
and
xor
mov
dec
adc
or
add
push
sbbl
ljmp
inc
lret
imull
and
daa
sti
sub
and
int3
push
imul
scas
xchg
stc
cld
sarb
or
push
out
hlt
nop
insb
jo
orb
fstl
cs
add
mov
jo
shrl
bound
inc
xchg
cmp
mov
sbb
cmp
xor
mov
hlt
jbe
js
inc
hlt
or
imul
and
mov
dec
add
cmp
lcall
pop
add
scas
jae
xchg
insb
repz
aaa
mov
out
lret
shlb
hlt
sahf
pop
sbbl
repz
push
mov
jl
sti
ljmp
cmp
or
mov
je
dec
or
mov
pop
xchg
imul
aaa
repz
jns
sahf
mov
sub
rcll
add
aaa
cmp
cltd
jl
add
dec
jb
and
add
daa
mov
adc
mov
repz
daa
adc
pop
int
es
pop
inc
mov
sub
mov
jg
fisubrl
xchg
lock
aas
ficompl
sahf
jne
lea
das
inc
xchg
add
loope
and
mov
out
pop
int
lahf
fs
push
mov
leave
sahf
inc
out
add
scas
sbb
cmp
lar
xorb
sbb
je
xlat
mov
push
data16
jne
mov
and
push
inc
icebp
addl
or
add
movsl
or
jae
xor
push
in
mov
mov
test
popf
add
xor
mov
mov
in
in
push
movsb
mov
sahf
push
push
incl
adc
sbb
add
aas
mov
fisubs
int
push
lea
addr16
enter
lds
pop
mov
out
ficoms
icebp
cwtl
out
inc
dec
dec
push
cs
test
aaa
add
mov
lods
iret
mov
imul
jecxz
lea
jae
adc
aas
mov
out
lods
adc
mov
cltd
xor
jnp
xchg
leave
add
mov
call
aaa
xchg
sub
jp
fisubrl
inc
js
mov
les
xchg
xlat
jbe
gs
jo
rorl
inc
pop
mov
pop
pushf
stos
testb
fsubs
in
pop
lods
push
stc
push
xor
mov
out
xor
nop
jl
das
sub
sub
sub
adc
cmp
daa
push
out
and
sbb
and
test
push
cmp
in
adc
nop
dec
sahf
sarl
jae
or
cmp
lret
mov
jmp
cmpsb
mov
mov
cmpsb
xor
out
divl
inc
inc
push
daa
or
shrb
xchg
rclb
int3
pop
das
pushf
insb
mov
test
aas
pop
imul
fidivl
mov
jne
jne
jns
sbb
les
cltd
sbb
in
xorb
xchg
sbb
repz
stc
and
lods
fistps
iret
inc
repnz
out
mov
into
aad
stos
ret
cmpsb
aas
scas
xor
push
xor
jb
adc
sbb
imul
sti
xor
push
mov
mov
xchg
mov
paddq
cmp
lcall
out
xor
loop
or
push
sbbl
scas
mov
icebp
sbb
add
mov
testl
and
scas
sbb
in
push
pop
outsl
das
adc
mov
inc
pop
xchg
in
mov
daa
fnstenv
pushl
ja
stos
out
xchg
mov
mov
test
hlt
fwait
dec
dec
cmp
pop
add
xchg
adc
mov
nop
mov
mov
into
dec
inc
repnz
pop
imul
cmp
jnp
jno
xchg
mov
divl
stos
test
cmp
aaa
mov
addr16
cmp
addr16
ljmp
jmp
sub
lret
sub
adc
enter
dec
adc
sti
shll
dec
adc
mov
arpl
jmp
xor
or
cmp
inc
add
cs
mov
push
inc
in
repnz
stc
dec
inc
aad
loopnew
sbb
scas
mov
fisubs
cmp
mov
popa
add
mov
xlat
or
int3
cmpsb
or
mov
xchg
test
loopne
pop
and
lods
movsb
clc
sbb
mov
add
fildl
pop
lds
jecxz
js
lahf
lea
pop
lret
lcall
dec
jno
inc
push
faddp
mov
in
mov
ja
aas
jnp
pop
xchg
sahf
divl
jecxz
stc
cli
jb
mov
ret
sti
fdivrl
jp
dec
enter
jmp
inc
and
mov
andl
dec
lret
mov
iret
jns
push
mov
das
adc
gs
lods
aad
and
cs
jno
lret
push
cli
cmp
in
stos
movsb
sbb
lret
or
int
sub
add
inc
add
leave
mov
outsb
push
xchg
movsb
mov
stc
scas
pop
sub
stc
addr16
xchg
cmp
sbb
push
cmp
imul
in
dec
push
mov
mov
test
ljmp
push
pop
mov
cmpsb
push
sub
and
xor
enter
shlb
or
fldln2
xlat
or
adc
xor
cmp
int3
lahf
dec
push
cli
fbstp
shlb
out
cmp
mov
shll
push
inc
push
cli
sbb
sub
pop
pusha
bound
jbe
adc
inc
push
mov
cmpsb
sbb
mov
xchg
iret
jle
xor
xchg
pop
mov
mov
movsl
sub
mov
sub
bound
push
jge
mov
pop
insb
inc
mov
into
subb
in
cmp
mov
sub
add
jmp
scas
jo
jle
jbe
dec
jae
xchg
loope
push
bound
loope
imul
push
dec
push
cli
mov
inc
sbb
adc
inc
sub
mov
lcall
sub
sbb
imul
outsb
enter
pushw
and
outsb
add
cmp
repz
shlb
shlb
sbb
inc
cmp
pop
sub
les
pushf
cwtl
mov
and
mov
in
movsl
dec
popa
dec
inc
cmp
dec
addb
and
test
lock
jnp
inc
push
shrl
int
mov
imul
addr16
icebp
jnp
dec
test
dec
pop
pop
rcll
lods
inc
std
je
aam
cmpsl
rclb
aad
add
cli
addr16
cmp
int
pop
pop
pusha
dec
add
cmp
push
cli
xchg
enter
iret
out
out
shr
imul
daa
push
rclb
xchg
sbb
xchg
xlat
mov
inc
jmp
pop
testb
popa
dec
add
cmp
push
cli
xchg
ja
clc
mov
out
shr
rorl
dec
push
leave
fwait
add
clc
xor
gs
cmpb
ds
push
cli
popa
dec
adc
cmp
push
cli
xchg
aad
dec
mov
out
shr
imul
push
movsl
jmp
addb
mov
mov
es
das
push
pop
pusha
dec
pop
fstpt
push
cli
xchg
enter
insl
in
out
shr
dec
mov
cli
lods
sbb
int3
inc
cmp
test
push
icebp
jae
test
inc
xacquire
shrb
dec
push
pop
pop
iret
sahf
mov
bt
push
sbb
movsl
dec
fimull
and
adc
or
mov
cmp
xor
fimull
or
enter
clc
rcrl
push
gs
or
jecxz
mov
mov
shrb
inc
cmp
nop
fcmovb
stos
jbe
loop
stos
cmpsb
hlt
push
sahf
fisubl
ljmp
ja
in
cld
xchg
packssdw
xchg
shrl
push
outsl
scas
enter
mov
imul
aam
mov
sub
int3
inc
add
andl
dec
jo
ret
test
mov
orb
mov
xor
mov
jne
leave
pop
jno
mov
dec
mov
flds
or
add
jecxz
add
ss
add
stc
ror
ds
in
movsl
fsin
xor
inc
sub
out
std
stos
dec
sub
and
dec
decl
jg
pop
dec
mov
shll
and
ja
xchg
mov
sbb
jae
ljmp
mov
out
mov
and
pop
mov
jp
mov
mov
mov
dec
add
or
hlt
or
add
in
push
jecxz
lods
or
out
popa
loopne
repnz
mov
movsl
add
jbe
fcomip
xor
insl
orb
mov
jge
and
call
push
into
and
mov
addr16
lock
dec
jle
lods
inc
pop
fcompl
in
fwait
jl
jmp
inc
mov
add
repnz
push
cmp
mov
pop
xlat
jge
adc
hlt
sahf
hlt
pop
sbb
call
data16
sbb
imul
stos
xchg
push
loopne
ljmp
pop
jae
pop
adc
shll
cmpxchg
mov
mov
xor
xchg
idivb
push
inc
das
mov
pop
xchg
jbe
sbb
fimuls
andb
inc
divl
xchg
jae
and
mov
mov
pop
cmp
inc
loopne
dec
shll
push
rolb
or
sub
aas
xchg
sub
push
sbb
push
jns
hlt
sub
cld
cmp
aad
fs
hlt
int
xchg
xchg
mov
push
test
sub
in
dec
mov
mov
fldl
mov
jne
and
adc
popf
js
add
jno
xor
adc
stos
and
dec
push
addr16
inc
aas
vmread
fimull
mov
dec
stc
jne
ret
subl
mov
adc
dec
in
jle
or
lahf
ljmp
rcrl
daa
pop
aas
pop
mov
xchg
mov
and
ds
ret
rcrl
notl
pop
test
hlt
and
fadds
jge
cld
fcompl
inc
xor
xor
out
add
sbb
pop
aam
jo
cmc
pop
mov
and
call
and
js
add
lahf
and
js
shlb
sub
jo
inc
xchg
jae
daa
or
jno
adc
fimull
sbb
adc
mov
xchg
popf
fwait
cmp
jb
aas
nop
in
lret
or
mov
clc
adcb
cmp
mov
add
adc
testl
jecxz
popa
mov
pop
mov
mov
mov
and
addr16
iret
call
dec
push
or
and
rorb
fisubrl
cmpsb
jns
lods
cld
or
sbb
insb
mov
sahf
lret
sub
jle
cmp
xlat
imull
dec
add
xchg
sahf
xchg
pop
into
std
insb
mov
dec
pop
in
arpl
fsubl
adc
pusha
or
cmp
mov
jns
ret
mov
sbb
push
stc
out
mov
das
push
sbb
mov
sbb
fdiv
xchg
cmp
hlt
add
mov
pop
jle
stos
push
mov
and
mov
add
dec
or
inc
lods
decl
jle
sub
fisubrs
mov
or
and
jb
fcom
sub
insl
xchg
dec
cltd
roll
cli
mov
pop
jle
push
xchg
shr
mov
jno
nop
add
imul
ss
ja
cld
mov
fstpl
mov
addb
jecxz
adc
stos
notl
jmp
mov
loopne
adc
adc
daa
pop
mov
repz
inc
inc
push
sub
rclb
mov
filds
and
scas
outsl
adc
and
xchg
push
out
popa
cmp
dec
sbb
fsubrl
fs
adc
sahf
mov
cmc
push
inc
cmp
cwtl
dec
pop
fs
pop
push
mov
ret
pop
arpl
adc
dec
mov
movsb
cmpsl
in
cmpsl
xchg
fwait
test
arpl
cmc
push
lock
pop
pushf
pop
mov
add
pop
push
bound
lret
dec
in
ja
pop
pusha
adc
loop
fbstp
hlt
in
mov
xchg
mov
rol
les
add
rorl
aam
addr16
mov
add
pop
inc
xchg
addl
adc
repnz
in
push
dec
mov
mov
mov
pushf
push
mov
scas
fmuls
mov
jae
inc
add
sbb
sub
mov
stc
xor
cmp
cltd
pop
outsb
aad
mov
loop
je
test
jbe
sub
sahf
stc
loop
jmp
mov
sub
aas
push
loop
stc
cmp
mov
or
pop
or
push
cmpsb
insb
sub
icebp
mov
arpl
mov
outsl
lods
xor
rolb
fistps
pop
cmp
lock
mov
xor
jecxz
rcrb
insb
pop
fdivrl
jb
data16
outsl
sub
pop
push
adc
mov
imul
testb
shll
mov
sahf
outsl
mov
sub
and
add
fs
or
lret
data16
clc
or
ret
mov
add
add
mov
inc
ljmp
mov
add
cmp
push
and
mov
out
mov
inc
cltd
mov
push
cltd
stos
cmpsl
dec
push
and
movsl
push
in
add
cmc
and
movsb
bswap
int
add
cmpsb
insl
cld
xchg
dec
jmp
insl
idiv
mov
sahf
test
xor
fcoml
nop
mov
jb
ss
add
xchg
fldl
xchg
pop
lds
aas
es
fcomp
and
xchg
sub
xchg
mov
bound
mov
add
cmpsb
daa
mov
dec
rorb
adc
nop
push
xor
movsl
das
cld
divb
mov
enter
cmp
inc
mov
leave
ret
rol
out
test
hlt
add
push
push
imul
sub
lock
mov
int3
jbe
popa
ljmp
call
cmpsl
jne
pop
inc
popa
mov
or
jmp
repz
sbb
ftst
stos
out
sbb
stos
mov
jne
inc
cwtl
outsl
and
xchg
or
scas
inc
shrb
cmp
cmp
cmp
dec
inc
subl
xor
mov
add
push
or
into
data16
testl
sbb
dec
sub
sbb
mov
scas
mov
int
in
es
pop
outsb
cmp
xchg
sbb
push
xchg
push
mov
subb
pop
ja
pop
scas
fbstp
stos
xor
sbb
cmpsb
dec
aad
cwtl
ljmp
daa
out
orb
mov
jb
lock
jo
jmp
mov
out
test
push
jge
adc
pop
cmp
lret
fldt
test
rorb
cmp
jne
dec
je
lcall
mov
mov
insb
adc
jno
loope
imul
inc
lock
and
sbb
xchg
jl
add
add
data16
mov
push
and
sub
and
scas
sub
cmp
gs
sbb
je
adc
out
jmp
mov
inc
icebp
cltd
sbb
jae
inc
jns
shl
jg
mov
inc
xchg
jae
test
sbb
xchg
int3
icebp
mov
or
jecxz
insl
inc
into
xchg
dec
test
mov
movb
or
movsb
push
xor
push
cmp
jnp
pop
adc
ss
xorl
push
push
jmp
insl
sub
iret
xlat
imul
push
lret
jno
lret
cmpsl
and
jae
shll
push
mov
leave
adc
pop
sbb
adc
out
in
jne
jae
lods
out
in
pop
push
inc
ja
pop
sarb
mul
pushf
mov
sub
loopne
and
scas
xor
and
shlb
inc
xchg
jle
cmp
sbb
repz
stos
mov
push
cmpsl
repnz
stos
lcall
mov
jle
jo
and
sub
push
mov
cmpsl
jb
shll
addl
shr
mov
sahf
pop
ror
xchg
pop
sbb
cli
adc
add
cld
subb
jbe
dec
pop
jmp
arpl
in
call
aad
xor
or
push
inc
sub
cmc
mov
push
div
stos
adc
mov
push
js
add
stos
out
or
xor
add
mov
push
xor
in
push
mov
cmp
dec
push
aaa
stos
mov
jne
dec
gs
fstpt
lods
mov
not
mov
xor
jp
inc
mov
test
xchg
pop
sbb
mov
xor
add
data16
test
popa
movsb
int3
cli
mov
inc
cs
popa
insb
ss
leave
sbb
repnz
in
rolb
subb
dec
sbb
ds
int3
in
mov
add
and
insl
jg
xor
subl
add
loopne
cs
std
loope
ret
out
mov
dec
adcl
jg
int
shrl
and
outsl
pop
dec
mov
std
xchg
movsb
icebp
mov
push
mov
adc
mov
imul
jle
cmp
pop
cli
inc
imul
inc
mov
cmc
pushf
adc
leave
push
jge
xchg
mov
jo
hlt
xor
loopne
loope
pop
scas
insl
ljmp
repnz
adc
mov
out
and
sub
jmp
mov
sub
mov
cmp
xchg
cmp
pop
jg
fwait
or
scas
nop
mov
inc
add
cmpsb
or
inc
fistpll
mov
adc
div
sarl
pop
mov
xchg
cld
dec
insl
pushf
inc
adc
sarb
iret
cld
faddp
lea
fiaddl
inc
in
cwtl
test
rorb
pop
push
leave
cli
fsubrs
imul
jecxz
inc
inc
shrl
cltd
xor
movsb
xor
xor
sub
mov
subl
jo
lds
repnz
jmp
mov
ss
mov
or
movsl
nop
mov
pop
fidivrs
dec
fnsave
and
gs
mov
push
ficomps
mov
sbb
cmc
int3
pop
aaa
stos
inc
stos
mov
xorb
das
js
imull
add
popa
jecxz
rcrb
insb
pop
fdivrl
jb
data16
outsl
sub
pop
push
adc
mov
imul
ss
mov
add
call
arpl
push
cmp
loopne
add
ret
rcll
out
mov
adc
lods
sbb
fists
push
sub
leave
fst
or
movsl
push
in
and
inc
inc
and
aad
sahf
mov
fldl
call
xor
stos
jae
pop
pop
push
mov
xchg
and
ljmp
sub
pop
add
add
push
xchg
push
and
push
mov
sbb
stc
into
push
emms
outsb
xchg
pop
jbe
push
and
jb
ljmp
jns
fcomps
mov
ja
add
pushl
dec
jg
fimull
adc
xchg
mov
xchg
arpl
imulb
pop
cmc
jns
jns
mov
mov
mov
cwtl
out
fimuls
jno
outsb
sbb
and
and
sub
mov
pop
dec
test
and
pop
ja
mov
xchg
cmp
mov
fnstenv
mov
shrl
mov
rolb
and
push
es
cmp
fwait
test
daa
sets
adc
push
xor
dec
cmpsl
je
fdivs
pop
mov
mov
dec
into
movsl
ds
and
cmpsb
cltd
pop
cmpsl
fnstsw
lcall
in
ja
jmp
loop
insb
mov
call
hlt
add
lahf
adc
or
pop
cmpl
xlat
and
pop
sbb
popa
add
out
loopne
fs
xchg
and
mov
adc
dec
icebp
jb
pop
hlt
sbb
pop
in
cltd
insb
cmp
inc
add
loopne
add
loopne
in
cltd
or
cli
jecxz
scas
jmp
rorb
xchg
dec
cli
push
addr16
ret
mov
into
or
iret
loope
and
clc
jbe
dec
cli
or
and
jnp
stos
pushf
daa
jae
pushf
push
and
and
data16
inc
out
test
loope
pcmpgtw
cli
sub
adc
sub
push
jp
inc
pop
jmp
pop
test
sbb
loope
push
mov
jb
shlb
pmaddwd
lsl
dec
mov
inc
push
dec
in
push
cmp
dec
mov
xlat
add
xchg
fildll
dec
cli
sub
dec
mov
aad
sar
sub
adc
push
lea
or
mov
jbe
fbstp
adc
jl
ja
scas
jo
sub
mov
pop
push
sub
stos
push
mov
add
dec
push
jae
jns
mov
push
popf
mov
sahf
or
cld
outsl
scas
mov
movsb
out
cmp
sahf
cmp
adc
adc
fstps
lods
dec
xchg
cmp
and
adc
iret
jecxz
cltd
adc
arpl
push
add
mov
enter
subb
or
fidivrs
sbb
dec
push
dec
or
and
or
je
jg
ja
aam
push
push
xchg
inc
sete
aam
jle
pop
sub
push
cmpsb
ja
aam
mov
out
lods
sarl
lds
add
je
sti
test
testl
and
scas
fisttpll
ds
xor
test
inc
mov
fadds
jne
aam
clc
pop
dec
adc
scas
fcoms
lret
in
sbb
sub
or
out
mov
in
ret
repz
or
sub
fwait
adc
mov
xchg
div
dec
mov
mov
mov
fcomps
xor
xchg
aas
cli
imul
sbb
mov
xchg
add
xchg
shll
or
or
adc
bound
mov
int3
bound
dec
cmp
cmpsl
jge
cltd
in
cmpsl
int
repnz
jns
adc
rorb
jnp
or
jmp
lds
icebp
mov
xorb
ja
adc
mov
pop
mov
jb
and
push
shlb
sbb
aad
inc
imul
fnstenv
jne
adcb
test
cmp
loope
loopne
out
ja
inc
cmp
inc
jl
push
ficoms
fucomip
dec
out
arpl
sub
fwait
xchg
adc
negl
out
pusha
xchg
stc
cmp
mov
or
dec
scas
cwtl
filds
fdivl
ljmp
filds
es
andb
daa
ja
movl
lock
dec
fistpll
insb
and
aam
xorl
insl
lods
mov
jle
test
add
pop
mov
mov
es
xchg
out
lret
stos
jno
fimuls
or
add
les
jnp
fs
out
jmp
andl
push
dec
out
mov
pusha
rcrl
pushf
mov
movsb
mov
fdivrp
xchg
test
cmc
int
mov
test
push
testb
icebp
bound
mov
ds
mov
dec
aas
add
fcomip
lods
add
pop
add
jno
pop
sbb
and
ljmp
test
push
jno
xor
mov
out
inc
rcrl
insb
ss
mov
in
aas
das
mov
jge
test
out
or
adc
add
sub
test
sbb
sahf
sbb
pop
add
push
mov
jne
dec
sbbb
rorl
xchg
push
sbb
sar
es
add
push
shrb
mov
nop
test
jnp
pop
jge
adc
pop
add
sub
and
fcompl
movsl
sbb
cmp
adc
sub
xchg
loop
dec
pop
hlt
cmpsb
jnp
xor
xchg
add
popf
jae
in
push
adc
into
dec
inc
xchg
js
data16
xor
shll
cwtl
mov
data16
test
popf
mov
cmp
jmp
in
push
xor
ljmp
dec
cld
aam
data16
clc
outsb
mov
int
shlb
add
mov
inc
sti
imul
lock
push
mov
and
fs
dec
add
fmull
imul
mov
sub
push
bound
xchg
rcll
dec
cmc
imul
push
loop
jecxz
lret
xor
ror
sar
push
fsubs
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jp
cmp
cmp
std
imul
lock
inc
inc
scas
shll
rorb
movsl
not
xlat
inc
popa
pop
sub
sub
xor
mov
sub
sbb
ret
je
clc
ror
mov
mov
sub
scas
add
imul
push
out
and
shl
add
repz
cmp
rorl
pop
shrl
push
sbbl
mov
cwtl
adc
xchg
jns
scas
rcrb
xchg
iret
divb
icebp
movsl
jo
xchg
and
pushf
cltd
orb
dec
les
cwtl
andl
adc
push
sahf
jo
icebp
inc
nop
enter
fldcw
fstpl
fnstenv
mov
sub
jg
adc
lds
cmpsl
cmc
mov
test
xor
lret
xor
mov
in
mov
addr16
inc
push
add
or
dec
dec
fstpt
jno
addl
xchg
loopne
notl
mov
dec
clc
sub
and
mov
sbb
add
fisttps
adc
xchg
lcall
pusha
pop
jo
mov
sub
xor
sub
add
adc
lret
jmp
pop
repz
scas
sub
or
mov
jg
xor
test
stos
pop
scas
shrl
fwait
sub
xchg
jo
mov
inc
inc
xrelease
mov
movsl
sbb
jo
fnsave
push
jl
xlat
pop
sbb
in
out
xor
mov
xchg
xchg
mov
xchg
in
or
add
shl
fistpl
xlat
in
sbb
cmpb
lcall
jg
fiaddl
lea
test
mov
xchg
stos
call
sbb
pop
je
mov
je
sub
fwait
inc
jg
sti
movsl
mov
loopne
xchg
add
pop
popf
outsb
rcrb
adc
or
imul
stc
xor
pop
scas
and
xchg
inc
sbb
cmp
addr16
imul
dec
mov
bound
out
insb
mov
outsl
scas
stos
es
jbe
mov
adc
movsl
dec
mov
aas
xor
sti
mov
mov
dec
stos
xchg
add
cwtl
cwtl
out
popf
in
cmp
xchg
ds
sbb
fdivrs
pop
adc
xor
in
outsl
and
dec
js
sbb
les
sub
or
call
lcall
push
xor
shr
dec
movsl
imul
lahf
add
mov
mov
fwait
pop
and
shlb
xchg
push
in
add
jae
dec
mov
mov
imul
mov
aad
popa
adc
push
mov
lds
imul
inc
loopne
pop
jbe
movsb
jmp
int
pop
sub
scas
sbb
mov
sti
movsl
xor
or
cmp
notb
xor
leave
jo
pushf
imul
lea
or
fisubrl
push
arpl
adc
insl
jne
cwtl
inc
or
mov
pop
jbe
pop
dec
jae
shr
cmc
int3
stc
mov
fwait
adc
sti
and
jns
je
push
pop
mov
cmpsl
jae
xchg
cmp
sub
inc
inc
nop
enter
sub
sbb
repz
out
out
mov
pop
or
ds
popl
jg
test
adc
sub
sub
stos
mov
push
and
sub
icebp
fdivl
vsqrtps
mov
rcll
je
mov
es
je
and
lahf
call
or
mov
fists
mov
pop
ffree
rcrb
nop
enter
movsl
outsl
add
xorb
scas
dec
loopne
cmp
mov
adc
icebp
movsb
push
scas
inc
xchg
xchg
iret
fstl
popa
or
in
pop
fwait
pop
jle
cmpsb
adc
out
or
dec
cmp
fucomi
or
in
xchg
cmp
lea
notb
sbb
sub
mov
or
and
inc
dec
sbb
aad
movsb
dec
inc
or
std
or
mov
add
mov
jl
adc
sbb
adc
fadds
xchg
jae
sbb
iret
mov
cmp
jmp
ljmp
push
mov
in
insb
pop
scas
xor
or
fnstsw
popa
push
pop
cmpsl
mov
movsl
or
sub
add
xchg
mov
and
inc
out
mov
inc
add
lods
xchg
push
sahf
jae
lds
rorl
sbb
jbe
pop
adc
out
adc
jnp
push
inc
shlb
adc
int
push
ds
push
mov
dec
pop
jbe
xor
cli
ficomps
sahf
scas
xchg
test
call
divps
xchg
lcall
popa
les
inc
xchg
shlb
fsubl
dec
inc
aaa
hlt
int
je
inc
fcoml
std
add
in
push
jbe
andb
pop
add
testb
jp
pop
sub
push
dec
add
sbb
pop
loope
add
shll
pop
dec
outsl
int3
or
aad
inc
dec
lret
in
dec
addr16
in
cmpsb
adc
cmp
stos
xchg
loopne
mov
nop
stos
push
lods
xchg
dec
xor
clc
or
stos
xchg
loopne
mov
nop
stos
scas
jp
jecxz,pn
mov
lcall
push
or
push
rsqrtps
pop
leave
hlt
adc
idiv
sbb
xor
add
add
hlt
push
pop
cmp
cmpsl
lret
imul
stc
add
add
and
ja
loope
mov
cmp
dec
insb
mov
fsub
sub
outsb
inc
js
std
dec
pop
fidivs
addb
call
push
mov
fstpl
inc
aam
or
jmp
mov
xor
push
mov
inc
cmp
inc
and
pushf
das
mov
adc
and
cmp
loope
or
lods
fs
add
cs
movsl
xorl
fwait
xor
dec
jge
push
mov
test
imul
add
stc
pop
data16
xorb
outsb
dec
cltd
iret
pushf
and
lret
adc
das
test
xor
test
and
mov
cmpsl
gs
into
scas
lods
out
outsb
repz
push
cmpsl
xchg
cltd
mov
add
lret
adc
pop
jbe
dec
or
xor
cmp
gs
xorl
xchg
sub
push
add
cmpsl
dec
repz
stc
add
mov
cmpsl
jg
xor
loop
test
mov
insl
push
mov
fidivrl
jno
aad
adc
pop
mov
adc
addb
imul
mov
add
lcall
mov
sub
bound
jae
mov
int3
stos
and
add
arpl
mov
xchg
iret
pushf
jmp
xchg
pop
xchg
ljmp
xchg
mov
lods
dec
lret
and
sbb
sub
out
andb
jg
scas
out
jb
and
pop
data16
dec
andl
out
dec
mov
jne
rcl
movsb
outsl
stc
dec
adc
in
mov
mov
mov
pop
inc
xchg
add
pop
rol
xor
mov
std
call
cmpsb
enter
cmc
mov
mov
fistpll
dec
mov
xchg
ja
idivl
mov
repz
ret
fdivs
inc
xchg
inc
notw
pop
inc
xchg
pusha
mov
sub
hlt
rclb
dec
subl
and
mov
stc
nop
pop
std
mov
jle
push
call
nop
pop
push
cmpsl
adc
mov
arpl
hlt
in
cwtl
cmp
imul
xor
xor
pop
shrl
jno
cmpsb
out
push
arpl
fnsave
cmpsl
sub
popl
cmpsb
imul
push
es
mov
scas
xchg
jg
out
jae
push
push
fs
mov
mov
loope
fldcw
push
addr16
cmp
mov
inc
outsb
stos
mov
sbb
shr
in
add
arpl
adc
es
pop
mov
sbb
in
dec
sbb
leave
jne
flds
cld
shlb
inc
mov
in
rol
vpsubusw
cmpsl
sub
xchg
cmp
cmp
cmpsb
xchg
jl
mov
inc
jle
dec
cs
popf
mov
push
mov
es
jg
fabs
insb
mov
xchg
mov
mov
outsb
cld
and
push
ds
adc
mov
test
sti
cmpsl
ficoms
fadd
fsubrl
repz
pop
mov
pop
pop
cmp
xor
cwtl
subl
das
lret
repnz
jmp
imul
fcoms
pop
mov
call
aas
test
jl
js
cmc
push
cli
mov
sbb
jle
loopne
aad
loope
jo
jge
adc
sub
loope,pt
mov
xor
cld
cmpsb
inc
fwait
ret
xor
arpl
mov
add
cmp
sub
inc
and
nop
inc
or
add
cmp
mov
mov
enter
dec
xor
inc
or
dec
lods
xchg
xor
dec
shr
mov
xor
fadd
and
and
pop
adc
cmp
loopne
mov
insb
mov
into
mov
mov
push
cmp
clc
nop
test
jae
adc
outsb
mov
cmpsb
int3
rcl
movhps
lock
mov
jecxz
ficoml
sub
dec
add
or
xchg
sub
sub
adc
sbb
adc
ja
ljmp
scas
movsl
pusha
cmpsl
shll
js
cltd
in
sbb
pop
call
cltd
iret
flds
cmp
or
test
xchg
mov
ret
xor
std
sub
test
ljmp
dec
jo
push
mov
nop
sbb
sbb
notl
xchg
roll
push
mov
lea
jae
mov
iret
push
out
fsts
ja
aad
push
or
lret
add
xchg
imul
sub
test
mov
daa
clc
aas
sbb
sub
or
mov
jae
sub
jns
mulb
outsb
rorl
es
and
aad
cli
add
repnz
test
lods
aas
mov
testb
jge
negb
pop
or
add
mov
das
xchg
shlb
int
inc
push
popa
clc
dec
mov
push
lea
sub
push
ss
fisubrs
in
mov
push
addr16
cmp
inc
out
mov
imul
sub
mov
and
push
in
sub
cmc
push
inc
inc
jmp
mov
mov
mov
inc
and
jmp
cmp
sbb
pop
pop
rcrl
addb
mov
fwait
and
dec
cmp
insl
xchg
sbb
stc
ficoms
and
cmpsl
and
xchg
pop
cmp
xor
and
xorb
inc
jmp
inc
xchg
repnz
imul
jge
or
pop
ret
sub
test
fcmovbe
fisubrs
fsubs
js
dec
bnd
jecxz
inc
mov
imul
mov
mov
sbb
scas
jno
xor
test
scas
push
sbb
jp
scas
jp
adc
mov
pop
call
call
inc
fdivrs
sub
stos
arpl
lods
sub
xchg
and
fdivrs
pop
sbb
push
ret
not
fcomip
sti
lret
popf
sti
push
insb
jns
outsb
xchg
js
pop
mov
incl
push
rcrl
jbe
push
inc
ret
mov
adc
fs
and
jge
test
sub
iret
popf
bnd
fsubs
dec
or
cmp
push
jmp
inc
push
xchg
or
pop
mov
mov
dec
add
mov
xchg
in
das
jb
push
lcall
cltd
icebp
xchg
std
loope
popf
inc
mov
jb
ret
cld
movsb
cmp
scas
aas
mov
sbb
shlb
cwtl
rcrl
jg
sbb
clc
mov
incb
js
ljmp
lret
pop
jb
outsb
xchg
dec
jns
mov
xlat
outsb
popf
dec
dec
pop
adc
std
ds
dec
test
sahf
adc
shl
inc
test
jnp
shrl
test
dec
pop
xchg
and
mov
outsb
mov
data16
inc
mov
dec
dec
or
insl
or
mov
fnop
xor
aad
push
add
mov
loope
inc
cmp
add
and
push
add
scas
and
gs
inc
jp
into
fisubrs
inc
cmpsl
lcall
jbe
mov
int3
fildll
adc
cli
mov
jp
lea
and
cmpsb
jo
push
into
lock
jnp
cmp
fbstp
test
mov
mov
leave
cltd
cmc
sbb
pop
cmp
pop
int
imul
nop
push
das
ds
iret
test
fstpt
push
neg
in
and
arpl
and
cmp
dec
sbb
data16
cmp
or
or
mov
push
je
jbe
xlat
stos
or
dec
popf
fisttpl
dec
int
cmp
xor
mov
adc
test
fwait
pop
stos
sbb
outsb
xchg
dec
les
pusha
ror
mov
fisubl
mov
cmc
mov
in
sbb
dec
fbld
stc
mov
faddl
notl
shll
loope
sahf
mov
repnz
lahf
push
in
xchg
cmc
cmp
mov
jge
push
inc
movsb
jl
push
mov
mov
jge
cmp
dec
adcl
into
mov
outsb
cmpsb
nop
xor
inc
fstl
add
fstps
movsb
push
mov
nop
jo
outsb
test
and
xor
or
xor
mov
dec
fcmovbe
pushf
out
add
or
icebp
mov
dec
clc
js
or
fwait
cmpsl
cs
dec
and
arpl
adc
test
mov
push
mov
mov
test
movsb
adc
fbstp
jo
shr
fcompl
jle
cmp
inc
popa
ljmp
repz
sbb
mov
lret
stos
push
shrb
insb
xorl
cli
push
or
mov
into
out
arpl
pop
xchg
addb
out
pusha
push
pushf
fisttpll
mov
sbb
addb
lret
sbb
out
test
mov
dec
xor
aas
les
in
rcll
pusha
add
out
je
std
loope
push
push
cmpsb
stos
aad
add
ss
leave
xchg
les
scas
subb
or
and
and
inc
aam
sub
test
mov
jmp
mov
and
nop
mov
mul
push
and
sbbl
movsl
and
adc
pop
mov
les
mov
jl
jg
repz
idivl
testb
cmp
push
sbb
sbb
mov
fstp
shlb
jmp
sahf
sbb
or
mov
aas
les
call
cld
mov
and
loop
les
call
xlat
pop
bound
enter
dec
pop
push
push
xor
sti
or
fmull
mov
jns
jne
jns
scas
iret
xchg
ds
aas
push
cs
mov
and
daa
xor
pop
test
xchg
sub
pop
mov
inc
xor
sbb
jp
sub
clc
push
xchg
xchg
mov
and
icebp
mov
js
nop
icebp
xchg
ljmp
mov
adc
jp
ja
clc
mov
or
sahf
fmuls
jnp
and
fldl
movsl
push
lret
les
inc
movsb
sub
stos
push
ror
sbb
jnp
in
aaa
dec
cmp
xor
cmp
push
iret
dec
xor
and
mov
xor
and
ret
call
jp
xor
jnp
add
xchg
sbb
ficomps
cmpsl
pop
xchg
mov
xchg
dec
mov
and
sbb
cli
sbb
dec
unpckhps
pop
cmp
sti
xor
inc
ret
pop
push
mov
leave
mov
lods
call
jecxz
cmp
xor
std
shll
mov
lods
fldl
and
bnd
std
iret
lea
and
push
cli
sbb
mov
or
push
sarl
mov
in
jp
mov
insl
add
fimull
dec
out
inc
dec
sbb
inc
jbe
jmp
ret
in
ja
ljmp
fdivrl
jnp
in
add
pop
movd
jne
movsl
mov
sahf
mov
push
adc
xor
into
test
popf
test
jno
cmp
insb
aad
push
inc
fcmovnb
ficompl
push
mov
rclb
mov
mov
int
mov
xacquire
mov
les
inc
jnp
cmp
mov
outsb
dec
dec
mov
jmp
mov
jp
adc
adc
cmpsl
jge
mov
pop
cli
loop
cli
popa
lcall
jle
test
sub
mov
movsl
push
jae
or
pop
sub
enter
clc
cmp
sbb
icebp
mov
sub
jnp
jp
cwtl
mov
repnz
les
jb
mov
ds
and
jmp
or
dec
adc
arpl
shrl
bound
jl
enter
and
es
cmpsb
icebp
inc
clc
out
popa
or
lcall
xchg
scas
outsl
jb
xor
pop
xchg
mov
add
pusha
nop
and
inc
adc
xchg
mov
sbb
push
es
or
cwtl
sub
je
jno
dec
mov
jns
jno
stos
cmp
movsl
cld
mov
and
outsl
lcall
push
add
dec
xchg
imul
mov
or
aam
fcompl
enter
popl
or
aad
dec
cli
adc
outsl
fldt
jge
xchg
stos
rorl
adc
xor
movl
inc
movsl
add
loop
push
stc
out
dec
push
or
adc
test
cwtl
xlat
mov
cwtl
add
pop
mov
in
adcl
movsb
add
xor
add
mov
xor
cmp
je
orb
into
shrl
les
jb
popa
xchg
push
sub
cli
aad
pop
pop
sub
mov
fnstenv
mov
addr16
xchg
pop
lcall
cmp
hlt
xlat
bound
sbb
sub
xchg
add
sub
xor
loopne
fucom
mov
les
jp
pop
mov
stc
shrb
cmp
imul
sbb
mull
pop
stos
jmp
add
pusha
cltd
inc
pop
xlat
xchg
inc
xor
mov
ljmp
mov
or
or
pop
mov
mov
gs
outsl
insb
aas
dec
aam
cmc
mov
fwait
imul
xchg
jge
insl
cmc
pop
push
mov
cmp
nop
pop
ja
cmp
xor
cmp
mov
in
or
outsl
dec
mov
add
das
push
push
fwait
aad
loopne
pushf
dec
push
push
push
cs
fisubrl
ds
fmull
inc
ds
test
mov
test
fldt
sbb
lods
ja
sub
xor
les
js
outsl
sub
mov
aas
addr16
insl
lcall
stos
push
shrl
aaa
or
jne
mov
lahf
jge
jg
mov
adc
pop
leave
aaa
jle
outsl
adc
jg
mov
out
sub
inc
mov
xor
inc
test
or
in
inc
in
jmp
test
adc
adc
dec
dec
sub
test
jb
movups
xchg
outsb
cld
movsl
pop
lock
cmpsl
pushf
mov
int3
dec
cmp
in
mov
lock
adc
fnstenv
dec
popf
xor
add
pop
push
cmp
fcmove
inc
add
lret
jb
cmp
mov
nop
lods
xor
or
mov
jns
hlt
movsb
mov
rcl
cwtl
das
das
dec
in
pop
gs
inc
and
mov
and
sbb
inc
mov
idivl
mov
mov
xchg
push
xchg
mov
and
jmp
and
mov
pop
arpl
inc
or
cmpsb
add
add
repnz
cmpsb
cmp
mov
cs
sti
shrl
cld
and
lock
jae
out
inc
mov
xor
les
add
stos
shll
fmuls
adc
pop
clc
inc
dec
mov
or
bound
push
mov
push
cld
add
ss
popf
or
xchg
mov
push
std
mov
lahf
sbb
jae
subl
push
mov
jne
sub
mov
or
xor
add
fucomp
jns
jnp
xor
arpl
jae
movsl
scas
rcr
xchg
pop
sbbl
adc
inc
stos
adc
filds
push
mov
push
xor
pop
jge
pop
and
test
mov
mov
outsl
sub
stc
or
ljmp
add
fimull
pop
rcr
sbb
movsb
xadd
adc
push
sbb
movsl
mov
subb
jmp
icebp
push
push
pop
sahf
repz
lret
xchg
mov
call
xor
out
leave
sbb
enter
sub
or
inc
jl
adc
cmp
jo
stc
subb
fs
test
pop
push
popa
lcall
movsl
cwtl
adc
add
cmp
push
test
rorb
dec
insl
jbe
and
sub
call
nop
jmp
outsl
jmp
jge
mov
inc
adc
fistl
dec
lcall
lods
mov
sbb
push
jge
mov
mov
test
sub
lds
outsl
dec
sbb
xor
xchg
in
mov
inc
movsb
mov
mov
mov
mov
shlb
outsb
lods
fildll
or
cmp
push
das
inc
scas
sub
push
int
push
xor
test
bnd
inc
lret
add
movl
adc
or
inc
xchg
jbe
xchg
push
mov
aad
mov
repz
inc
inc
divl
adc
xor
or
sub
test
lcall
scas
pop
mov
jne
stos
iret
mov
dec
movsb
inc
mov
or
or
sbbl
mov
cld
and
sti
ss
cltd
xchg
pop
lahf
mov
shrl
cmpsl
lahf
mov
dec
mov
out
push
lock
xchg
fisubs
loopne
aas
loop
test
or
stos
lea
in
repnz
add
movsb
mov
sub
mov
mov
mov
dec
divl
jne
fisttps
mov
pop
andb
lock
jle
and
add
dec
push
jge
mov
insb
push
mov
sub
push
icebp
hlt
add
xlat
aam
sbb
movsb
int
sub
out
ja
shlb
bound
flds
divl
adc
mov
and
clc
push
xor
sub
mov
in
gs
int
inc
mov
dec
inc
lds
rclb
imul
out
fsubr
ljmp
adc
lahf
fwait
and
lock
cmp
leave
fwait
imul
sub
jge
pusha
fdivl
add
ja
inc
mov
out
cmp
push
jge
and
les
nop
cmp
fs
xor
add
xor
jno
inc
fs
lea
pop
inc
sahf
pop
leave
sbb
shlb
jg
test
ss
shll
loop
test
ljmp
inc
or
cltd
rcrl
in
mov
cmc
cmpl
sbb
hlt
fs
xchg
jno
xchg
or
dec
pop
mov
xchg
loop
jbe
and
ljmp
clc
lret
inc
ljmp
pop
add
mov
repz
fildl
jbe
mov
lock
jmp
push
dec
dec
cmpsl
xor
fs
fwait
mov
sub
dec
cltd
mov
jmp
jns
lret
sbb
cmp
es
jge
cmp
pop
and
loop
add
pop
add
push
sbb
pop
mov
or
push
jnp
adc
movsb
out
mov
stos
push
int
pop
data16
or
ljmp
ljmp
inc
shrl
push
imul
cmc
mov
dec
icebp
mov
adc
out
test
std
mov
xor
sub
inc
es
lock
push
mov
test
push
cs
rorl
mov
xchg
pop
sahf
ja
fadds
mov
pop
jb
pop
stos
arpl
dec
adc
out
std
out
into
stc
jno
jb
lcall
test
cmp
cmp
cmp
adc
pusha
aad
xchg
decl
aad
daa
cmp
pop
mov
and
ret
aaa
int
pop
inc
lods
inc
rclb
aas
lds
outsl
dec
sbb
or
movsl
mov
repz
xchg
es
hlt
lahf
xlat
add
xchg
xchg
mov
adc
cwtl
dec
jae
sti
xrelease
ret
jnp
push
xor
add
jb
or
test
mov
jae
jmp
daa
add
sub
iret
outsb
mov
popf
cmp
fstpl
cmp
into
xor
mov
les
sahf
ret
pop
arpl
out
lcall
push
scas
aam
lahf
int
data16
inc
push
outsb
out
fldcw
insl
push
aad
mov
out
cmp
insb
lret
push
outsb
popa
inc
inc
sbb
xchg
xchg
mov
rorb
test
cmpsl
add
add
dec
or
nop
sbb
jg
inc
jg
dec
adc
popa
decl
ffree
loopne
into
adc
dec
ja
orl
push
add
mov
outsl
lcall
push
lods
jge
cltd
xchg
out
pop
clc
sub
jl
shl
pop
mov
aaa
stos
lock
rol
aas
xor
jae
sbb
or
add
push
push
sbb
out
sub
mov
pop
push
jne
lret
mov
je
jg
or
enter
jo
scas
bound
in
mov
add
push
aas
mov
shlb
roll
pop
or
push
jo
lock
cwtl
and
mov
sbb
fwait
add
fmull
sub
jb
mov
push
lret
add
push
fnsave
cmp
mov
sbb
hlt
lea
cmp
emms
dec
stc
jnp
fildll
xor
fstpl
xchg
fistps
and
dec
rol
aas
xor
jae
int
or
sbb
adc
enter
mov
sahf
mov
or
pop
adc
mov
test
add
jne
sub
xchg
pop
sbb
pop
and
push
sbb
cmp
sbb
dec
mov
xlat
rclb
and
leave
in
outsb
dec
or
inc
lea
jno
adc
test
shr
dec
jne
rcrb
adc
xchg
jno
xorl
out
lcall
jle
pop
mov
aaa
movsb
push
subb
orb
xchg
ljmp
pop
pop
xchg
out
pushf
call
mov
out
push
aad
mov
pop
dec
mov
mov
out
test
enter
cmpsb
inc
mov
mov
cmp
lea
jo
jae
mov
lock
in
lret
push
sub
dec
enter
mov
popa
mov
cmpb
pop
mov
jge
jno
loope
sahf
jnp
dec
cmp
or
icebp
jbe
stos
in
mov
aad
cmc
dec
je
push
lock
push
rclb
mov
add
lret
popa
aad
stc
mov
jecxz
or
mov
aad
inc
outsl
adc
or
push
cmp
or
nop
sbb
lea
repz
stc
repnz
pop
aad
repz
lock
loopne
jmp
dec
cmc
fistpll
push
adc
xchg
pop
mov
leave
jge
in
pop
lock
lcall
imul
mov
repnz
aad
nop
pop
test
call
lock
dec
or
outsb
dec
or
outsb
dec
or
outsb
dec
or
outsb
dec
or
outsb
dec
or
outsb
dec
or
outsb
dec
or
outsb
dec
or
push
sub
aad
xor
sub
jle
lahf
popa
adc
jae
xor
cmp
xchg
xor
clc
cli
and
fsubl
pop
jp
loopne
loop
fstpl
xorb
repz
jno
sbb
clc
add
xchg
cmpsl
lea
cmp
jnp
leave
bound
mov
and
jmp
mov
push
popf
adc
or
nop
xchg
mov
mov
loopne
in
dec
or
cwtl
push
sbb
out
hlt
dec
sub
jl
enter
adc
inc
pop
sbb
imul
xchg
mov
and
or
mov
adc
repnz
or
xlat
clc
dec
rorb
mov
jge
jle
mov
sub
addr16
stos
sbb
stos
cmpsl
mov
pop
xchg
or
cmpsb
sbbb
cs
cmpsb
mov
xor
xchg
sbb
mov
rolb
daa
test
fsubrs
lret
add
mov
pop
sub
pushf
xor
push
add
in
add
lea
repz
sahf
je
add
sub
mov
hlt
sbb
xchg
das
cmp
mov
lods
dec
push
push
and
rcrb
mov
loop
pop
inc
ljmp
ss
sub
loope
les
bound
push
add
leave
or
lea
jbe
aad
xchg
inc
mov
int
dec
xchg
xchg
cld
subl
cmp
xor
repnz
scas
or
test
inc
xchg
out
jle
mov
push
outsb
pop
divl
adc
addl
cmpsb
inc
push
xchg
xchg
and
pop
call
and
lock
pusha
xor
push
sbbl
test
cwtl
ljmp
mov
lods
add
cmp
and
jle
test
push
xchg
enter
jl
push
jl
pop
pop
in
xchg
push
push
adc
push
dec
xor
leave
jbe
and
arpl
jmp
mov
lahf
mov
sahf
insb
pavgb
inc
mov
les
push
sub
imul
popa
xor
lret
push
test
dec
inc
sub
mov
in
ret
add
test
jo
dec
je
pop
pop
jb
je
push
push
sub
inc
mov
lods
and
dec
mov
dec
adc
pop
mov
mul
cltd
decb
mov
xor
lock
int
aam
adc
aad
xor
mov
insb
push
aad
pusha
jl
inc
rcl
mov
subb
mov
shlb
xchg
sub
in
dec
mov
loop
aaa
in
mov
jp
dec
push
adcb
cmp
lea
adc
shl
jmp
mov
repz
imul
sti
les
and
test
dec
adcl
mov
adc
xchg
jmp
movsb
pusha
xchg
mov
sub
cmpsb
push
ret
hlt
sub
in
test
repz
mov
sub
out
mov
lret
lret
xor
mov
sbb
or
aas
inc
setl
xchg
mov
loop
cmp
mov
cmp
frstor
bound
dec
mov
out
pop
das
xor
cmp
in
sub
add
pop
and
jle
pop
pusha
and
notb
mov
push
xchg
aam
dec
ret
fucomp
das
ret
call
mov
sbb
mov
cmc
jecxz
or
adc
sbb
subl
scas
xlat
fistl
pop
iret
mov
hlt
daa
ss
push
arpl
mov
scas
dec
adc
mov
out
lret
hlt
jmp
aaa
int
dec
out
pusha
dec
cmp
xchg
mov
into
movsl
lods
pusha
and
rol
or
into
mov
out
psllw
out
xor
sub
cmp
sahf
xor
outsb
pusha
push
push
out
sbb
iret
mov
popf
sahf
inc
es
push
das
cmpsl
dec
sbb
fnstenv
cld
mov
sub
jp
scas
test
xchg
adc
popf
sahf
inc
mov
negb
aas
or
mov
push
jbe
lret
sub
mov
dec
or
je
fsubrp
mov
xchg
es
cmc
out
xchg
push
lea
push
pusha
sub
test
or
xchg
fsts
test
xor
mov
jo
pop
xchg
sub
xchg
je
cmp
pop
hlt
loopne
pop
fcoml
or
je
xchg
dec
pop
fistl
mov
popf
inc
stc
arpl
lds
push
hlt
add
adc
cmp
imul
pop
pop
iret
xor
sbb
scas
jle
addr16
lahf
jne
adc
adc
divl
imul
and
push
popa
dec
mov
mov
sahf
sahf
movd
jns
imul
mov
stc
fs
andl
stos
das
dec
dec
popa
add
cmp
mov
add
add
xchg
mov
les
ds
inc
mov
cmc
addr16
sub
stos
mov
outsl
in
ja
mov
push
faddp
xchg
rorl
outsl
shl
sbb
stos
jmp
out
outsl
mov
std
ljmp
cmp
jbe
loope
inc
sub
fs
push
lock
out
pop
push
mov
xlat
push
in
push
mov
fs
sbbl
sub
test
ss
and
cld
adcb
jbe
cmp
mov
outsb
mov
mov
sti
and
out
aad
iret
fldcw
fstpt
push
ja
lea
and
sahf
test
jno
pop
pop
nop
adcb
fbstp
mov
lret
pusha
pop
and
lret
hlt
rcll
sti
jmp
add
loop
inc
rcrl
xor
sbb
pop
sti
inc
and
je
dec
stos
lods
add
fcompl
pop
je
mov
dec
out
push
inc
add
aaa
mov
mov
das
inc
cmp
mov
cmpb
add
fiadds
push
fbld
jmp
cwtl
clc
cltd
fildll
repnz
cwtl
mov
adc
aam
cmp
pop
je
push
dec
imul
and
in
push
pusha
adc
or
adc
xchg
push
add
xor
pusha
add
ss
movsl
dec
aas
pop
cmp
out
xchg
add
jns
aaa
jp
mov
sbb
std
ret
mov
cmpsl
push
inc
xchg
xor
pop
fcomps
jmp
jno
out
pop
ss
cmp
in
jecxz,pn
add
repnz
inc
sbb
out
cmp
xor
jg
repz
jge
lds
inc
repnz
and
jae
xor
jg
repz
jge
fistpll
add
pop
xor
jg
repz
jge
mov
es
xchg
loop
out
cmp
xor
jg
repz
jge
and
xchg
ret
out
cmp
xor
jg
repz
jge
testl
mov
jae
xor
jg
repz
jge
leave
test
mov
xchg
out
cmp
xor
jg
repz
jge
pop
iret
mov
icebp
xchg
bound
out
cmp
xor
jg
repz
jge
call
xchg
inc
dec
mov
pop
cmp
xor
jg
repz
jge
and
and
aaa
out
cmp
xor
jg
repz
jge
sbb
subl
out
cmp
xor
jg
repz
jge
inc
push
xor
icebp
xchg
loop
xchg
out
cmp
xor
jg
repz
jge
mov
mov
ret
out
cmp
xor
jg
repz
jge
pushf
aaa
mov
mov
cmp
xor
jg
repz
jge
shlb
inc
repnz
adcb
pop
xor
jg
repz
jge
rclb
and
pop
xor
jg
repz
jge
adc
inc
rcll
pop
xor
jg
repz
jge
lods
cld
scas
fdivrl
jge
sbbl
xchg
cmp
pop
cmp
xor
jg
repz
jge
lods
cld
scas
fdivrl
jge
adc
js
repnz
ret
loopne
cmp
xor
jg
repz
jge
arpl
ljmp
xor
jg
repz
jge
mov
xchg
andb
pop
xor
jg
repz
jge
push
ret
lods
mov
bound
jae
xor
jg
repz
jge
mov
cs
jo
pop
cmp
xor
jg
repz
jge
xor
lods
mov
xchg
and
jno
pop
cmp
xor
jg
repz
jge
imulb
add
jae
xor
jg
repz
mov
fcoms
ss
repnz
mov
mov
pusha
mov
jno
test
or
insb
mov
mov
test
sub
cmpsb
fcoms
loope
or
insb
mov
mov
pop
mov
mov
test
or
insb
mov
mov
imul
daa
clc
sub
es
insb
mov
mov
addl
loope
es
insb
mov
mov
into
addr16
mov
dec
lods
es
insb
mov
mov
cmp
fdivs
ss
repnz
mov
mov
adc
fcoms
ss
repnz
mov
mov
cld
sbb
movsb
imul
push
pusha
test
or
insb
mov
mov
loop
mov
xor
es
insb
mov
mov
push
cld
fs
sub
es
insb
mov
mov
xchg
adc
xchg
xor
or
insb
mov
mov
xchg
xchg
sarl
es
insb
mov
mov
jae
sub
test
es
insb
mov
mov
add
mov
mov
es
insb
mov
mov
scas
insb
mov
push
sub
es
insb
mov
mov
lock
popf
fisttpl
cmpsl
es
insb
mov
mov
lret
rorl
xor
mov
or
insb
mov
mov
mov
out
push
push
sub
es
insb
mov
mov
test
sub
es
insb
mov
mov
mov
das
fcom
xchg
repnz
mov
mov
or
mov
mov
scas
es
insb
mov
mov
ljmp
xchg
out
lods
es
insb
mov
mov
out
mov
fdivs
scas
es
insb
mov
mov
mov
sub
es
insb
mov
mov
jl
movsb
addr16
das
fdivs
lahf
fldenv
or
insb
mov
mov
push
or
sub
cmp
repnz
mov
mov
jle
les
pushf
cs
out
es
insb
mov
mov
lret
jecxz
pop
aad
iret
loope
or
insb
mov
mov
add
push
aad
cmp
repnz
mov
mov
sub
pop
aad
push
loop
or
insb
mov
mov
test
pop
aad
cwtl
loope
or
insb
mov
mov
scas
sbb
aad
cmp
repnz
mov
mov
shll
aad
inc
xlat
es
insb
mov
mov
into
stos
add
pop
aad
inc
stos
es
insb
mov
mov
cmp
inc
sub
icebp
outsl
scas
es
insb
mov
add
add
pop
sub
mov
adc
xchg
pop
leave
cwtl
call
lret
add
adc
fstl
add
cwtl
call
lret
add
icebp
ds
and
adc
xchg
pop
leave
cwtl
call
lret
add
fistps
jl
mov
adc
xchg
pop
leave
cwtl
call
lret
add
out
jno
call
inc
adc
xchg
pop
leave
cwtl
call
lret
add
or
mov
adc
cwtl
call
lret
add
lret
xchg
or
pop
leave
cwtl
call
lret
add
adc
gs
mov
adc
cwtl
call
lret
add
mov
cmp
or
adc
xchg
pop
leave
cwtl
call
lret
add
xorl
or
ret
leave
cwtl
call
lret
add
xchg
mov
mov
adc
xchg
pop
leave
cwtl
call
lret
add
dec
xchg
rcrl
insl
cmp
xchg
addr16
popa
adc
sub
mov
cmpsl
imul
or
or
pop
push
xchg
addr16
popa
adc
sub
mov
inc
rorb
mull
push
xchg
addr16
popa
adc
sub
mov
out
mov
dec
inc
pop
push
xchg
addr16
popa
adc
sub
mov
or
cmpsl
push
xor
pop
push
xchg
addr16
popa
adc
sub
mov
xchg
dec
sbb
cmpsl
popa
pop
push
xchg
addr16
popa
adc
sub
mov
cmp
cs
pop
push
xchg
addr16
popa
adc
sub
mov
cld
push
orl
into
ds
push
xchg
addr16
popa
adc
sub
mov
jge
jp
lret
and
pop
push
xchg
addr16
popa
adc
sub
mov
pop
or
mov
or
test
push
xchg
addr16
popa
adc
sub
mov
outsb
or
lods
xor
pop
push
xchg
addr16
popa
adc
sub
mov
inc
lahf
push
mov
or
jl
pop
push
xchg
addr16
popa
adc
sub
mov
es
pop
movsb
xor
pop
push
xchg
addr16
popa
adc
sub
mov
sub
shlb
or
fbld
push
xchg
addr16
popa
adc
sub
mov
pop
pop
shll
pop
push
xchg
addr16
popa
adc
sub
mov
mov
or
push
xchg
addr16
popa
adc
sub
mov
in
iret
mov
sbb
pop
push
xchg
addr16
popa
adc
sub
mov
pop
ror
or
mov
pop
push
xchg
addr16
popa
adc
sub
mov
xchg
xor
lret
out
pop
push
xchg
addr16
popa
adc
sub
mov
adc
mov
je
pop
push
xchg
addr16
popa
adc
sub
mov
fwait
jge
mov
pop
push
xchg
addr16
popa
adc
sub
mov
and
pop
bound
xchg
addr16
popa
adc
sub
mov
mov
or
rorb
push
xchg
addr16
popa
adc
sub
mov
jmp
mov
sti
or
push
xchg
addr16
popa
adc
sub
mov
sub
dec
push
out
out
pusha
pop
push
xchg
addr16
popa
adc
sub
mov
adc
mov
pop
push
xchg
addr16
popa
adc
sub
mov
cmc
cmp
dec
sbb
dec
or
out
popa
adc
sub
mov
adcb
aad
pop
push
xchg
addr16
popa
adc
sub
mov
sbb
xchg
mov
addr16
push
xchg
addr16
popa
adc
sub
mov
nop
rolb
out
cs
pop
push
xchg
addr16
popa
adc
sub
mov
popa
xor
xor
pop
push
xchg
addr16
popa
adc
sub
mov
dec
imul
addr16
push
xchg
addr16
popa
adc
sub
mov
je
sub
or
lahf
jp
sbb
incb
dec
adcl
mov
lahf
jp
sbb
incb
dec
adcl
subb
cmp
xchg
movsb
lahf
jp
sbb
incb
dec
orl
insl
xchg
adc
lahf
jp
sbb
incb
dec
orl
mov
lahf
jp
sbb
incb
dec
addl
pop
sti
pop
dec
addl
jb
insl
cmp
lahf
jp
sbb
incb
dec
cmp
and
add
sbb
incb
dec
subl
mov
lahf
jp
sbb
incb
dec
sbbl
mov
lahf
jp
sbb
incb
dec
subl
mov
lahf
jp
sbb
incb
dec
andl
mov
and
movsb
lahf
jp
sbb
incb
dec
adcl
sub
or
mov
lahf
jp
sbb
incb
dec
or
outsb
xchg
cmc
adc
lahf
jp
sbb
incb
dec
cmpl
mov
lahf
jp
sbb
incb
dec
xorl
sbb
or
mov
lahf
jp
sbb
incb
dec
andl
xor
es
lahf
jp
sbb
incb
dec
orl
out
and
movsb
lahf
jp
sbb
incb
dec
xorl
mov
lahf
jp
sbb
incb
dec
adcl
jge
pop
es
lahf
jp
sbb
incb
dec
orl
mov
lahf
jp
sbb
incb
dec
or
js
mov
adc
pop
hlt
xor
or
js
mov
push
in
in
daa
jp
sbb
pop
hlt
xor
or
js
mov
add
mov
or
js
mov
push
in
daa
mov
hlt
xor
or
js
mov
enter
pop
add
or
js
mov
addl
xor
or
js
mov
ret
sub
or
xor
or
js
mov
cmp
fisubl
cmp
mov
or
hlt
xor
or
js
mov
mov
lock
fidivl
rorb
hlt
xor
or
js
mov
xor
daa
jp
adc
or
js
mov
add
out
daa
sbb
or
xor
or
js
mov
ret
xchg
daa
mov
hlt
xor
or
js
mov
sbb
mov
or
js
mov
lahf
or
daa
cli
or
or
xor
or
js
mov
dec
and
daa
lcall
or
js
mov
cwtl
xchg
in
daa
cmp
outsl
or
int3
sbb
int3
mov
cli
or
daa
fcmovu
loopne
pop
hlt
xor
sub
mov
leave
push
inc
and
cld
cs
jmp
outsl
sub
mov
dec
addb
add
push
jmp
outsl
sub
mov
dec
addb
data16
jmp
outsl
sub
mov
dec
addb
ljmp
push
jmp
outsl
sub
mov
mov
mov
mov
shrb
out
loopne
in
mov
jne
and
jmp
outsl
sub
mov
sub
arpl
push
jmp
outsl
sub
mov
leave
push
inc
addl
mov
shrb
out
xor
push
inc
and
pushf
and
jmp
outsl
sub
mov
add
inc
fistpl
mov
shrb
out
lods
mov
ljmp
push
inc
jecxz
dec
and
jmp
outsl
sub
mov
lret
add
data16
jmp
outsl
sub
mov
xor
mov
jmp
outsl
sub
mov
notl
ret
shrl
push
jmp
outsl
sub
mov
sti
push
inc
arpl
mov
shrb
out
ret
mov
outsl
out
in
dec
into
cs
inc
and
das
push
jmp
outsl
sub
mov
das
push
inc
inc
lods
std
cs
jmp
outsl
sub
mov
sub
jecxz
std
cs
jmp
outsl
sub
mov
cmp
das
push
jmp
outsl
sub
mov
lret
jge
mov
jmp
outsl
sub
mov
xor
sub
push
jmp
outsl
sub
mov
cmp
cs
jmp
outsl
sub
mov
cmp
cs
jmp
outsl
sub
mov
aaa
addb
add
push
jmp
outsl
sub
mov
clc
push
inc
inc
add
cs
jmp
outsl
sub
mov
add
jecxz
sub
push
jmp
outsl
sub
mov
add
add
aam
push
jmp
outsl
sub
mov
cmp
cs
jmp
outsl
sub
mov
das
push
inc
ret
cs
jmp
outsl
sub
mov
outsl
out
mov
jno
add
cmpl
mov
shrb
out
cwtl
fcompl
mov
sub
dec
scas
mov
shrb
out
push
jle
lret
inc
inc
sahf
out
xlat
dec
scas
mov
shrb
out
ret
mov
outsl
out
jo
rol
lret
mov
aad
or
cmpb
push
loope
mov
push
inc
dec
xchg
mull
cltd
imull
jo
aad
or
cmpb
push
loope
mov
push
mov
imul
scas
aad
or
cmpb
push
out
or
es
testl
lods
mov
sbb
pop
jle
xor
rolb
pop
jle
pop
sub
xchg
push
add
aam
imul
orl
xor
sahf
hlt
daa
imul
orl
decb
ficoml
add
xchg
sub
lods
mov
sbb
pop
jle
push
lret
add
mov
cwtl
aaa
sbb
lods
mov
sbb
pop
jle
dec
sbb
sahf
push
lods
cwtl
aaa
sbb
lods
mov
sbb
pop
jle
jg
cli
sub
sahf
aaa
sbb
lods
mov
sbb
pop
jle
xlat
cltd
cmp
ljmp
lods
mov
sbb
pop
jle
cmpsb
and
sbb
sbb
lods
mov
sbb
pop
jle
and
sahf
aam
xchg
aaa
sbb
lods
mov
sbb
pop
jle
xor
rolb
pop
jle
aaa
xchg
inc
jge
sahf
xchg
arpl
rcrl
aaa
sbb
pop
jle
mov
sahf
mov
imul
lods
mov
sbb
pop
jle
xor
rolb
pop
jle
cld
pop
aam
je
inc
sub
rcrl
aaa
sbb
pop
jle
xor
rolb
pop
jle
out
xor
jnp
sub
rcrl
aaa
sbb
pop
jle
xor
rolb
pop
jle
daa
sbb
hlt
lahf
sahf
sub
rcrl
aaa
sbb
pop
jle
xor
rolb
pop
jle
adc
aaa
sbb
adc
mov
out
lods
rclb
lahf
cwtl
sub
js
adc
arpl
mov
sbb
mov
dec
test
mov
inc
xlat
mov
mov
push
fistpll
or
jmp
xor
notb
mov
or
mov
aaa
aam
dec
pop
mov
xchg
sbb
adc
aaa
sbb
mov
and
and
aaa
stos
or
pop
fdivrs
sar
xlat
mov
adc
pop
roll
adc
mov
call
sbbl
dec
stos
popa
mov
shll
outsb
outsl
in
stos
lcall
popa
adc
std
pushf
pop
cwtl
rorb
test
sub
leave
mov
mov
xor
mov
jno
sbb
jae
imul
sbb
shll
and
daa
jge
cmpsb
add
ror
push
pop
insb
add
cmp
icebp
mulb
and
jg
xchg
mov
mov
cmp
fldz
xor
test
push
xor
sbb
ja
pushf
int
sti
cmp
xor
mov
fcmovne
cwtl
mov
lods
mov
fisttpll
pushf
xor
pusha
sahf
jge
mov
pop
lods
cmp
cmp
fwait
ja
lret
cwtl
mov
xor
adc
mov
pusha
add
mov
pop
mov
mov
mov
bound
ret
add
add
stos
fadd
addb
cmp
cli
push
dec
mov
mov
mov
and
cmp
mov
or
fidivrs
enter
enter
insb
sbb
popa
fs
xchg
mov
cmpsb
imulb
inc
inc
andl
inc
inc
xchg
fs
or
call
or
mov
repz
xlat
pop
scas
cmp
jne
push
decl
mov
insb
adc
jmp
dec
and
xchg
mull
add
mov
cmp
rcl
mov
mov
mov
cmp
inc
insb
cmpl
cmc
mov
fsubp
adc
or
pop
add
movsb
shrl
mov
mov
subl
lret
aas
dec
pop
fdivrs
mov
outsl
add
mov
mov
imulb
mov
test
enter
sub
testl
fwait
mov
rcrb
mov
push
jo
inc
jle
mov
xchg
movsb
fs
fnstcw
mov
pop
mov
jecxz
xchg
jno
add
push
and
push
pop
pop
orl
xchg
push
bound
jne
aas
outsl
jns
idivl
cld
dec
dec
push
xor
push
adc
cmp
cld
dec
jae
sbb
pop
dec
mov
movsb
push
popa
lods
add
dec
fdivrp
mov
in
jge
sub
ja
scas
dec
in
push
cmp
imul
xchg
out
mov
hlt
sub
mov
incb
loope
add
mov
push
jecxz
mov
mov
pop
inc
push
sbb
cmp
dec
test
jmp
int3
pusha
cmp
sbb
inc
in
sbb
pop
icebp
adc
mov
jmp
pop
inc
out
xor
push
mov
nop
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
in
push
mov
in
push
mov
and
popa
and
leave
filds
push
push
mov
in
push
mov
pushf
push
cmp
rolb
mov
mov
jae
mov
mov
movsb
aas
cmpsl
fcoms
cmp
je
jecxz
nop
int
movsb
in
pop
dec
les
cmpsl
fcoms
cmp
dec
mov
add
inc
fistps
test
jmp
cltd
add
inc
fisttpl
adc
fimull
adc
fbstp
aad
mov
sbb
ja
rcl
cmp
int
movsl
push
shl
mov
jbe
push
out
int
loopne
in
sub
aam
mov
cltd
insl
push
push
cmpsl
clc
enter
je
into
add
jo
int
xchg
or
fbstp
shlb
mov
clc
sbb
ljmp
and
mov
out
outsb
mov
push
clc
test
lret
stc
es
jns
xor
ljmp
or
mov
lock
clc
test
in
iret
sbb
ljmp
or
pop
push
test
dec
cmp
push
aad
pop
cmpsb
clc
inc
jmp
or
fidivrs
xor
xchg
cmpsl
clc
xchg
add
fidivs
adc
xorb
fwait
pop
cmpsb
clc
inc
jmp
hlt
pop
xor
xchg
cmpsl
clc
xchg
add
fidivs
adc
xorb
fwait
pop
cmpsb
clc
inc
jmp
in
ret
or
clc
xchg
add
fidivs
adc
pushl
aad
pop
cmpsb
clc
in
cltd
adc
sbb
pusha
mov
or
flds
fbstp
aad
pop
cmpsb
clc
inc
jmp
sbb
jb
xor
inc
movsb
clc
xchg
add
fidivs
adc
fbstp
aad
pop
cmpsb
clc
inc
jmp
mov
sbb
xor
xchg
add
adc
jo
push
aad
pop
cmpsb
clc
cmc
jecxz
push
pop
rolb
xor
inc
movsb
clc
xchg
add
fidivs
adc
and
pop
cmpsb
clc
cmc
jecxz
xor
imul
clc
xchg
add
fidivs
adc
xorb
cmp
add
adc
mov
data16
mov
out
outsb
mov
push
clc
test
in
mov
push
push
xor
ljmp
or
jmp
lock
clc
test
in
sarl
fists
xor
ljmp
or
mov
lock
clc
test
in
sarl
ljmp
or
pop
push
test
mov
push
clc
test
in
ljmp
sub
test
mov
inc
or
pop
push
test
mov
push
clc
test
call
add
int3
mov
inc
or
cmc
push
test
mov
push
clc
test
jmp
pop
cwtl
xor
ljmp
or
out
push
test
mov
push
clc
test
jmp
sbb
test
mov
inc
or
ljmp
clc
test
jmp
push
xor
ljmp
or
ss
test
mov
push
clc
test
jmp
add
call
pop
js
jl
imul
fsubrl
inc
xsha256
cmpsb
adc
and
cld
push
mov
rcl
movsl
cld
dec
mov
push
subb
mov
pop
sub
cld
push
pop
sbb
movsl
cld
dec
mov
push
subb
mov
pop
sub
cld
cs
jle
xchg
cmpsb
ret
sti
movsl
cld
dec
mov
push
subb
mov
pop
sub
cld
sbb
repz
movsl
cld
dec
mov
push
subb
mov
add
adc
sbb
loopne
rcrl
sar
aaa
inc
jbe
rolb
ljmp
insl
lcall
rcrl
sar
aaa
inc
jbe
movsb
inc
icebp
ljmp
outsb
xchg
hlt
arpl
stc
add
jl
pushf
test
add
jge
pushl
inc
jbe
push
cmp
cmp
out
fwait
or
icebp
dec
negl
ljmp
idivl
mov
push
scas
mov
aam
add
dec
negl
mov
jno
jg
mov
push
scas
mov
and
add
dec
negl
lock
cmpxchg
jg
mov
push
scas
mov
sub
add
dec
negl
add
idivl
mov
push
scas
mov
pop
incl
popf
fwait
or
icebp
dec
negl
push
jno
jg
mov
push
scas
mov
cwtl
or
popf
fwait
or
icebp
dec
negl
or
cmpxchg
jg
mov
push
scas
mov
dec
incl
popf
fwait
or
icebp
dec
negl
popf
scas
cmpxchg
jg
mov
push
scas
mov
adc
add
dec
testl
es
sar
imul
cmp
push
sar
mov
test
lods
mov
push
es
sar
popl
push
rclb
mov
test
lods
mov
inc
or
call
mov
aad
ss
sub
or
and
and
pushf
or
dec
testl
dec
negl
leave
sub
or
das
mov
jo
pushf
or
dec
testl
dec
negl
leave
sub
or
mov
and
pushf
or
dec
testl
dec
imull
aaa
sbb
ja
fstl
in
jmp
add
pop
add
push
sbb
je
nop
mov
xchg
jb
and
add
pop
add
xchg
repnz
mov
nop
mov
xchg
jb
and
add
pop
add
pop
pop
stos
mov
je
nop
mov
xchg
jb
and
add
pop
add
push
orb
aad
mov
xchg
loop
xchg
add
xor
xchg
movb
mov
je
nop
mov
xchg
jb
and
add
xor
lahf
jns
jle
and
mov
xchg
jb
and
add
clc
xor
lds
je
nop
mov
xchg
jb
and
add
clc
xor
rol
shrl
mov
xchg
jb
and
add
pusha
add
xlat
jo,pt
and
mov
xchg
jb
and
add
pop
add
test
stos
mov
je
nop
mov
xchg
jb
and
add
gs
fstpl
mov
nop
mov
xchg
jb
and
add
xchg
push
insb
loopne
xchg
jge
and
mov
xchg
jb
and
add
xchg
push
mov
sub
jae
and
mov
xchg
jb
and
add
xchg
push
dec
mov
nop
mov
xchg
jb
and
add
push
xor
addb
mov
je
nop
mov
xchg
jb
and
add
xor
cmp
mov
adc
mov
pop
std
jb
add
xchg
push
lahf
cmp
xchg
mov
nop
mov
xchg
jb
and
add
xchg
push
sub
jo
and
mov
xchg
jb
and
add
xchg
push
call
mov
je
nop
mov
xchg
jb
and
add
xchg
push
repnz
or
outsl
mov
je
nop
mov
xchg
jb
and
add
xchg
push
stos
pop
sbb
jo
and
mov
xchg
jb
and
add
xchg
push
jge
pushf
and
mov
xchg
jb
and
add
push
xor
cmp
ja
mov
je
nop
mov
xchg
jb
and
add
push
xor
jno
in
mov
je
nop
mov
xchg
jb
and
add
push
xor
out
fdivrs
and
mov
xchg
jb
and
lods
cmpsb
dec
iret
push
sub
movl
fcomps
mov
xchg
jb
cmpl
cmp
fsts
xchg
into
outsl
lods
mov
seto
cwtl
sahf
pop
mov
je
popf
mov
xchg
jns
out
fstl
jecxz
nop
cld
cwtl
ds
insb
adc
mov
jne
cld
add
arpl
nop
and
outsl
inc
jp
mov
ds
in
sub
and
cmp
mov
cmpsb
inc
fwait
jmp
jb
mov
gs
inc
or
xchg
mov
inc
add
cli
jo
push
out
xlat
fucomp
add
adc
mov
xchg
jnp
or
jle
mov
mov
fsubrs
jns
loopne
sbb
rolb
pop
fldt
jmp
mov
push
movsb
gs
mov
and
sbb
add
mov
je
adc
adc
mov
loop
pop
js
arpl
cmp
loop
les
mov
xor
ljmp
nop
and
mov
add
testl
and
imul
mov
mov
lods
ret
dec
fsubrl
fcomip
push
dec
xchg
faddl
pop
jns
cmp
lods
ret
repz
test
sbb
dec
mov
ljmp
pushw
pop
sbb
ret
dec
fsubl
aas
xchg
or
mov
cmp
add
sub
xchg
adcl
clc
filds
dec
jns
mov
inc
sbb
dec
dec
incl
mov
sub
adc
push
pop
dec
stc
inc
jecxz
mov
pop
dec
sbb
flds
faddl
int
mov
ds
inc
into
aaa
gs
add
mov
fidivl
cli
mov
push
pop
dec
fmull
nop
into
cmc
out
pop
dec
arpl
int
push
pop
dec
sbb
push
pop
or
add
pop
sbbl
push
or
scas
hlt
lea
loope
mov
test
pop
aaa
pop
mov
dec
jecxz
jecxz
inc
cmpsb
pop
dec
arpl
int
pop
pop
dec
sbb
push
pop
or
add
pop
sbbl
xchg
insb
mov
add
mov
and
je
jmp
and
jmp
xor
dec
jp
sub
sbb
sub
aas
xchg
push
pop
dec
jns
inc
mov
or
lea
scas
pop
pop
dec
imul
pop
dec
imul
pop
dec
ss
dec
outsl
xchg
flds
mov
mov
ljmp
xchg
mov
faddl
pop
jns
jmp
xchg
and
loop
movsb
jmp
cmp
push
pop
dec
aaa
fld
ds
sbb
leave
test
and
das
daa
aas
xchg
das
filds
faddl
pop
iret
fildl
pop
dec
stc
les
aam
inc
mov
push
add
xchg
push
jg
lods
adc
mov
adc
sbb
sbb
adc
adc
dec
shrb
icebp
in
sbb
push
subl
test
bound
push
sbb
xor
add
mov
lret
rcrl
and
addr16
sbbl
out
pop
inc
stos
push
sbb
jmp
jle
dec
ljmp
in
mov
loope
jmp
pop
pop
lret
fisttps
push
dec
jno
push
dec
data16
lret
fisttps
jp
mov
dec
arpl
pop
sarl
push
in
movsl
pop
jp
push
sbb
mov
in
sub
enter
push
in
push
ss
movsb
jmp
push
test
lret
add
adc
sub
sbb
mov
adc
mov
push
into
jg
and
sbb
push
lret
fisttps
movsb
sbb
out
inc
mov
into
jg
js
sbb
add
mov
in
xor
xor
push
sbb
movsb
jae
xor
nop
push
jnp
mov
fldcw
in
xor
jle
xchg
aad
sbb
mov
jle
and
and
test
mov
popl
jne
dec
push
test
push
and
cs
jmp
push
inc
lods
pop
and
movb
pushf
push
pushf
pop
mov
mov
push
pop
mov
in
sbb
nop
test
stc
bound
mov
shrl
movb
sbb
sbb
xchg
inc
ret
aad
or
jmp
dec
push
test
test
and
adc
jbe
pop
lea
cmp
lret
and
aad
lea
outsb
pushf
mov
jmp
pop
mov
pushf
sahf
dec
or
out
sbb
pusha
jmp
out
pop
sbb
add
dec
push
test
test
and
sub
jbe
adc
lea
cmp
lret
and
dec
pop
lea
outsb
pushf
mov
jmp
or
adc
bound
outsb
pop
pusha
jmp
dec
lods
pop
push
pop
add
dec
push
test
test
and
adc
jbe
mov
cmp
lret
and
inc
insl
lea
outsb
pushf
mov
jmp
cld
aam
pushf
sahf
dec
or
cli
bound
outsb
pop
sar
and
cmp
and
movb
pushf
sahf
push
fidivrs
loopne
movb
pushf
mov
jmp
and
pushf
sahf
push
fisubs
sbb
movb
pushf
leave
ficoml
sub
fistps
pop
lea
cmp
lret
and
insl
lea
push
mov
jmp
inc
sub
pushf
sahf
dec
or
pop
bound
outsb
pop
pusha
jmp
mov
pop
push
pop
add
push
test
test
and
cs
jbe,pt
mull
push
cmp
lret
and
jns
lea
sub
test
js
daa
pushf
sahf
dec
or
push
bound
outsb
pop
pusha
jmp
in
pop
sbb
into
pop
and
adc
dec
or
in
sbb
pusha
jmp
ficomps
pop
add
sti
dec
push
test
test
and
in
jbe,pt
repz
push
cmp
lret
and
insb
pop
lea
outsb
pushf
mov
jmp
in
mov
pushf
sahf
dec
or
out
sbb
pusha
jmp
cmp
sbb
add
dec
push
test
aam
and
in
jmp
sahf
cmc
sti
sub
sbb
add
test
test
and
cs
jbe,pt
iret
pop
pop
lea
cmp
movl
push
test
test
and
in
jbe,pt
dec
pop
pop
lea
cmp
lret
and
inc
insl
lea
sub
test
add
sub
arpl
outsb
pop
sar
and
cmp
and
movb
pushf
sahf
dec
or
cmpsl
arpl
outsb
pop
sar
and
cmp
and
movb
pushf
sahf
dec
or
cmpsl
arpl
outsb
pop
pusha
jmp
bound
push
pop
add
fiadds
sub
dec
jbe,pt
arpl
push
cmp
lret
and
shll
inc
test
movsb
sub
test
pop
push
adc
sahf
dec
or
pop
bound
outsb
pop
pusha
jmp
jl
sbb
add
fiadds
int
dec
jbe,pt
mov
pop
lea
cmp
lret
and
pop
insl
lea
sub
test
fs
adc
pop
sbb
pusha
jmp
adc
push
pop
add
test
test
and
cs
jbe,pt
aas
pop
pop
lea
cmp
cld
test
or
dec
pop
aad
test
aam
and
cs
jmp
sahf
cmc
scas
sub
add
in
dec
push
test
push
and
sti
dec
jmp
push
ficomps
pop
loopne
and
shl
pushf
sahf
dec
or
push
bound
outsb
pop
dec
stos
es
push
fimuls
bound
and
movb
pushf
leave
ficoml
lret
and
test
xchg
inc
test
movsl
sub
test
pop
addr16
leave
fidivrl
movb
outsb
aad
or
test
and
das
dec
jbe,pt
add
push
cmp
cld
test
or
dec
pop
aad
test
aam
and
cs
jmp
sahf
cmc
add
pop
sbb
add
enter
test
push
and
sti
dec
jmp
push
ficomps
pop
loopne
and
adc
daa
pushf
sahf
dec
or
push
bound
outsb
pop
pusha
jmp
push
pop
sbb
add
push
test
test
and
cs
jbe,pt
pop
pop
lea
cmp
lret
and
adc
lea
push
mov
jmp
push
in
pushf
sahf
dec
or
pop
bound
outsb
pop
pusha
jmp
ficomps
pop
add
mov
dec
push
test
test
and
out
cmpsb
push
xchg
push
and
test
mov
popl
test
aad
and
dec
nop
pop
add
or
xor
push
lea
cmp
incb
push
lea
add
and
push
xchg
cmp
movb
pop
enter
sahf
cmc
pop
jl
sbb
into
fistps
dec
clc
cmpsb
pop
sbb
and
jns
mov
popl
dec
dec
push
or
pop
test
test
test
and
sbb
jmp
mov
jmp
sti
dec
clc
and
sbb
or
cmpsl
popf
in
mov
pop
sbb
mov
jmp
mov
adc
test
imul
and
popa
pusha
push
sub
es
rorb
sbb
jmp
roll
sbb
and
inc
push
test
test
and
sbb
sbb
pop
mov
pop
aad
and
xchg
adc
dec
push
add
test
and
mov
pop
mov
add
or
scas
mov
jl
rcrb
daa
add
pop
lea
sbb
push
or
pop
pop
sbb
and
pop
outsb
jmp
cmc
pop
sbb
movb
xchg
sahf
fcoml
mov
movb
pushf
push
scas
cmp
pop
push
push
scas
jmp
and
movb
insl
lea
mov
lea
cmp
movb
and
call
out
mov
add
push
repz
adc
sahf
in
cmp
pop
sbb
mov
sub
in
loope
inc
mov
ret
in
pop
daa
pushf
push
scas
imul
in
lock
or
movsl
in
dec
xorb
mov
hlt
or
adc
and
movsl
in
dec
mov
aam
dec
lea
jl
ss
imull
mov
pop
and
rolb
pushf
sub
jae
dec
inc
test
test
adc
daa
pushf
xchg
push
outsb
jae
dec
lock
push
loope
and
add
test
clc
pop
ss
enter
lods
pop
pop
push
sbb
aad
and
repz
and
add
mov
mov
pop
jb
jo
push
or
cld
pop
sbb
sbb
sub
lcall
sub
test
push
lea
sbb
mov
sbb
scas
inc
imull
stos
mov
scas
mov
pop
lea
adc
cmp
and
movb
and
pushf
cmc
sub
into
out
sti
dec
jmp
push
fiadds
mull
and
movb
pushf
sbb
mov
sti
dec
mov
insl
sbb
and
rcll
int
cmp
sub
ljmp
add
sbb
sbb
scas
mov
pop
lea
movsb
movb
adc
mov
and
scas
mov
pop
lea
in
sbb
shrl
aad
jnp
pop
sbb
enter
aam
and
lods
mov
test
aam
and
sahf
mov
mov
push
std
and
das
leave
jge
in
outsl
daa
pushf
cld
sub
cmc
test
or
sbb
jmp
mov
pop
mov
mov
mov
xor
ficoml
movb
fs
pushf
cmc
lahf
cld
pop
sbb
loopne
jmp
incl
and
roll
push
sub
and
xchg
loopne
mov
scas
subb
sbb
test
ja
and
dec
jmp
mov
pop
mov
or
popf
sub
adc
adc
and
sbb
mov
enter
cmpsl
mov
xlat
in
lea
pop
jecxz
sahf
push
jbe
dec
mov
and
ss
xor
jo
fistps
or
test
inc
ds
push
jbe
dec
push
cmpsl
je
in
dec
dec
js
jbe
adc
mov
and
push
subl
movb
jmp
into
adc
lea
dec
movb
fcoml
stos
cmpsl
adc
sbb
jmp
mov
adc
sbb
pop
add
mov
mov
pop
jne
and
pop
mov
cmpsb
fwait
adc
dec
cwtl
cmpsl
pop
cmp
int
pop
or
mov
movb
test
mov
mov
mul
xchg
push
movb
pushf
or
mov
jb
cmp
sar
out
push
push
push
mov
sahf
pop
jmp
lea
sbb
movb
pop
lea
mov
int3
cmc
iret
xchg
lods
pop
mov
and
test
test
dec
aaa
es
pop
pop
sbb
and
in
stos
sahf
push
sub
in
out
xchg
movsb
jl
mov
mov
loopne
outsb
pop
jmp
movb
pushf
jns
aaa
mov
push
dec
jmp
and
movb
fs
fsts
sbb
outsb
pushf
jns
popa
adc
cmp
or
dec
mov
cmp
pop
stos
test
mov
mov
push
xchg
xchg
les
or
push
mov
mov
mov
adc
negl
in
cli
push
cmp
adc
push
cmp
xor
test
sbb
mov
sbb
iret
sub
popa
cmp
push
mov
std
rorl
sbb
ds
mov
sbb
movsb
lret
std
jle
sbb
enter
mov
mov
fcomps
aad
negl
adc
xor
xor
mov
and
push
cmp
xor
sub
add
imul
pop
mov
stos
add
and
mov
cmpsl
sarl
imul
sub
outsb
jmp
ljmp
aas
das
jmp
test
add
jno
pop
hlt
xchg
add
add
hlt
sti
add
add
hlt
jne
inc
mov
mov
js
hlt
jbe
inc
ja
js
and
or
ret
stos
or
cmp
js
cltd
sbb
ljmp
adc
aaa
daa
popa
faddl
fidivl
aad
push
inc
mov
arpl
mov
incl
ds
aad
jae
mov
pushf
jae
pop
out
ljmp
dec
nop
movsb
test
test
and
or
push
xor
mov
pop
mov
in
repz
ret
stos
or
aam
sub
pop
jbe
jns
stc
mov
clc
popf
sbb
inc
arpl
clc
lods
and
pop
clc
sbb
int
add
xor
and
inc
mov
arpl
popa
or
les
or
js
fcmovu
cmp
add
fnstcw
inc
cmp
adc
repnz
cmp
mov
mov
push
fidivrl
icebp
add
jge
js
mov
in
push
js
js
adc
stos
pop
imulb
xor
add
and
loopne
movsl
icebp
pop
in
or
jge
mov
clc
sub
mov
clc
sub
pushf
jae
gs
ljmp
dec
adcb
scas
inc
cmp
mov
inc
icebp
or
push
xor
sub
in
add
xor
arpl
sub
push
stc
inc
fwait
inc
cmp
cli
add
ljmp
add
std
push
icebp
xor
push
stc
inc
fwait
or
inc
clc
mov
addr16
xlat
arpl
mov
incl
leave
data16
add
and
loopne
movsl
sbb
popa
sub
aad
inc
les
sub
fcmovu
cmp
aam
data16
sub
xor
mov
stos
or
jge
incb
cmc
mov
jmp
adc
sbb
jge
sub
xorps
std
push
stc
sti
jp
aaa
ljmp
rolb
inc
or
js
sbb
mov
or
dec
out
mov
inc
sub
push
cmp
jecxz
inc
inc
in
aaa
ret
stos
or
aam
sub
pop
jbe
jns
stc
mov
clc
popf
sbb
inc
arpl
clc
lods
and
pop
clc
sbb
int
add
xor
and
inc
mov
arpl
or
sbb
clc
aad
mov
sub
std
mov
sub
xlat
xchg
das
push
clc
sub
fimull
dec
mov
sub
lcall
mov
aad
fldenv
mov
or
incb
jae
js
clc
gs
mov
aaa
daa
popa
sbb
add
cmp
into
int3
jmp
xor
or
mov
pop
clc
sub
cmc
sti
sub
mov
or
pop
dec
cli
bound
out
xor
sar
sub
pop
cmpb
inc
inc
out
js
hlt
adc
js
hlt
push
sbb
out
js
hlt
outsb
add
pushf
js
push
adc
clc
sub
daa
imul
sbb
clc
inc
cmp
aaa
push
add
sub
push
adcb
mov
les
push
dec
adc
mov
pop
clc
sub
std
xor
cltd
fisttpl
inc
cmp
aaa
jge
inc
scas
pushf
js
push
adcb
push
arpl
dec
clc
sub
jp
cltd
xchg
push
and
outsb
idiv
xlat
arpl
xchg
movsl
mov
aas
push
clc
sub
sub
jno
adc
mov
inc
pop
add
push
stos
js
clc
sub
in
sub
xlat
ljmp
and
inc
jge
pop
clc
stos
out
clc
sub
pop
clc
sub
and
pop
jge
aam
mov
aad
lcall
and
arpl
pop
mull
add
pushf
js
ljmp
push
mov
sar
sub
dec
movsb
mov
dec
movsb
mov
clc
sub
inc
movsb
stos
sub
sub
popa
xchg
out
xor
stc
xchg
les
js
lods
pushf
js
hlt
push
sbb
sub
hlt
adc
js
push
adc
clc
sub
jmp
clc
sub
daa
cltd
mov
dec
add
ljmp
clc
inc
cmp
aaa
push
add
sub
push
adcb
inc
les
push
daa
in
cmp
sbb
sub
std
ds
clc
inc
cmp
aaa
jge
inc
scas
pushf
js
push
adcb
arpl
pop
clc
sub
cmc
add
js
hlt
mov
js
push
pop
out
stos
push
pop
clc
sub
orl
sub
inc
or
js
inc
stc
js
clc
pop
mov
sbb
aaa
lods
sub
test
das
call
jle
jge
jnp
and
movsl
inc
jge
push
movsl
jns
je
movsl
inc
jge
push
cmp
call
arpl
jb
testl
and
in
repz
pop
xchg
fidivrl
clc
xlat
data16
mov
repz
jns
add
cwtl
fcmovu
fisubl
leave
cld
fidivl
aad
out
clc
pop
clc
into
jns
popf
push
mov
jae
add
scas
stos
xlat
pop
mov
adc
rolb
xor
cmp
xchg
cmp
jmp
add
dec
sbb
pop
in
pop
fimull
add
mov
subb
call
aad
outsl
pop
xchg
push
add
aad
add
sub
rcrb
lds
shr
jnp
mov
push
and
int
pop
inc
inc
cmp
pop
clc
lods
lret
or
sbb
mov
lret
or
in
and
xchg
mov
jmp
add
mov
xchg
mov
aas
or
jnp
inc
cwtl
ret
popa
push
add
sahf
push
add
aad
add
sub
mov
add
jmp
js
mov
and
cmpl
cmp
pop
iret
jle
repz
or
dec
push
add
xchg
xchg
int3
outsb
sub
in
into
in
imul
sahf
xor
out
xchg
cmp
arpl
aas
push
mov
popa
inc
dec
xor
stc
js
ret
push
into
in
imul
sahf
xor
out
xchg
sub
arpl
aas
push
mov
int
aam
clc
sub
in
push
int3
pop
clc
sub
pop
clc
sub
pop
clc
sub
pop
clc
sub
pop
clc
sub
cmc
xchg
add
mov
jl
mov
jmp
or
aad
dec
test
scas
cli
mov
jmp
addr16
xor
and
xor
enter
xchg
jnp
stc
mov
cmp
push
cs
jle
push
fistps
sub
inc
and
inc
xor
and
adc
xor
cli
xchg
sub
or
aaa
sub
mov
xlat
inc
xor
or
dec
pop
das
pop
inc
pop
sub
ret
mov
mov
mov
jle
nop
stc
cmpsl
test
push
cwtl
fisttps
fidivs
scas
addr16
std
sti
insb
lret
pop
mov
pop
add
fdivrs
ficomps
rcrb
data16
dec
pop
add
adc
shll
adcb
xchg
stos
lods
jne
jl
jnp
pop
mov
xor
sbb
push
xor
cmc
roll
adc
inc
cmp
sub
daa
xchg
fbstp
mov
dec
or
shrb
andl
andb
lds
out
jp
xchg
lods
in
mov
shlb
popa
pop
adc
mov
mov
mov
hlt
sbb
mov
and
notb
jmp
mov
sbb
paddq
pusha
xchg
dec
test
test
mov
mov
sti
xchg
out
cld
sub
js
xchg
xor
adc
add
xlat
call
js
fnstcw
pop
inc
jge
mov
push
push
mov
pop
xchg
loopne
mov
adc
cli
cmp
mov
aas
sbb
icebp
add
flds
shll
insl
sahf
mov
js
jmp
movsb
mov
mov
aam
sbb
sbb
test
pushf
pop
movsb
sub
mov
dec
hlt
jg
xchg
cmp
sub
add
cli
xchg
xchg
pop
add
xlat
les
inc
enter
test
add
ss
cmpsl
pop
inc
pop
nop
add
xor
add
or
subl
mov
aad
test
bound
mov
fwait
stos
mov
jl
inc
fdivrl
push
sub
movsl
sub
loope
mov
and
or
jge
lret
sub
popa
push
push
xchg
pinsrw
cltd
push
xchg
or
or
mov
stc
jp
jle
fmull
lahf
int3
loope
hlt
orb
bound
and
sbb
test
xor
inc
outsl
sub
div
cmp
inc
pop
fcomip
aaa
stos
sub
ja
lods
ret
ljmp
cwtl
xor
and
scas
es
lods
jle
fimull
cmpl
inc
dec
fcmovnbe
cmp
in
mov
hlt
adc
stos
jp
shrb
lds
sbb
out
lods
cmp
mov
fistpl
xchg
ret
scas
arpl
mull
movsb
pop
stos
dec
mov
divl
ret
js
lcall
sbb
lock
rcr
imul
data16
jmp
sub
je
inc
pop
mov
test
aam
rclb
cmp
adc
adcb
rcrb
ret
inc
or
int
insl
sbbl
or
stc
mov
icebp
imull
in
mov
jge
fldt
adc
mov
loop
stos
je
lds
mov
loopne
mov
lahf
and
mov
push
fisttpl
jp
out
sbb
fbld
mov
cmp
xor
push
and
pop
mov
popa
sub
std
pusha
aaa
jb
or
mov
push
xchg
incl
and
and
andl
ret
push
pop
adc
and
movsb
mov
clc
pop
mov
mov
push
xchg
movsl
push
xor
sbb
cmp
xchg
push
shll
notl
test
push
mov
int
lret
lcall
loope
movsb
sub
loope
push
pushf
inc
out
inc
xor
or
lret
cmp
mov
xor
xor
cmp
pop
adc
lret
pop
xchg
dec
jg
into
ffreep
xchg
rcll
bound
mov
add
data16
shll
sbb
icebp
sti
sbb
xchg
pop
mov
jg
out
sbb
pushf
cmpsb
add
arpl
cld
add
inc
push
insl
or
adc
ds
bound
mov
in
daa
ret
rol
pushf
mov
int3
popa
ds
jo
push
mov
out
cmp
inc
or
loopne
cwtl
sbb
dec
outsb
cmp
hlt
xchg
imul
lea
clc
cmp
push
inc
mov
rcll
mov
out
push
std
xor
imul
push
mov
sbb
in
mov
ss
sarb
xchg
movsl
sub
hlt
xor
sbb
mov
bound
dec
xor
out
mov
fdivrs
int3
pop
dec
fldt
adc
fwait
scas
inc
xchg
fdivl
je
xor
test
cmp
or
addr16
rolb
jno
addr16
fwait
lahf
mov
jl
lods
sbb
cmp
rcrb
std
adc
ljmp
dec
js
shlb
sbb
test
repnz
pop
jge
scas
pusha
xchg
fdivl
imulb
in
xchg
fldl
lahf
or
in
xchg
stc
jne
push
dec
arpl
jl
mov
mov
shl
in
lea
jecxz
jnp
pop
pop
arpl
call
sahf
cltd
jbe
orb
dec
outsb
mov
dec
fcomps
out
xchg
jno
fadd
dec
jecxz
ljmp
mov
mov
and
push
jae
cmp
in
cmp
icebp
adc
cmpsl
lods
inc
dec
stos
xor
shll
mov
cmc
ja
pop
daa
in
lods
and
dec
outsb
adc
stc
imul
ljmp
out
jbe
orb
dec
outsb
mov
dec
fcoms
movsb
shl
xchg
cmp
leave
jge
pop
sbb
lods
adc
xlat
or
push
loope
test
movsb
and
aas
push
fstps
fists
fidivrl
sahf
cmpsb
add
rcll
fs
jl
dec
pop
sti
or
inc
xchg
push
or
jae
dec
ret
adc
dec
outsb
sub
sarl
fists
ds
push
stos
inc
fnstsw
sti
and
push
fldl
push
insb
mov
add
sbb
jno
sbb
and
out
outsb
mov
mov
inc
fdivrl
out
jmp
xor
cmpsl
mov
in
xchg
outsl
jecxz
and
test
outsb
mov
dec
outsb
pop
xchg
jo
insb
jnp
int3
lea
lcall
cmp
xor
cmp
imul
int
jle
inc
dec
outsb
mov
or
movsb
dec
inc
lods
out
cmpsl
mov
cmp
xchg
and
jecxz
out
jae
int
test
adc
jg
aad
rolb
xchg
jg
aad
rcll
xor
add
xor
js
jnp
ret
fildl
cmpb
sarb
jnp
popf
xor
jl
addr16
test
mov
xor
test
aaa
jns
daa
adc
xor
aaa
js
jmp
iret
mov
shrl
xor
inc
punpckldq
mov
pop
mov
bound
shll
cmpsl
sbb
push
and
dec
popa
movsb
jns
sbb
negl
xor
rolb
and
jecxz
scas
mov
jne
loopne
mov
shll
jmp
outsb
out
lret
or
xor
ljmp
xchg
sarl
jae
sbb
adc
shrl
push
sub
outsb
push
inc
punpckldq
jl
or
pop
out
outsb
add
push
pop
out
xor
js
cmc
stc
or
sarb
cmp
mov
jnp
mov
push
rcl
xor
mov
fsub
push
fcmovne
ficomps
fsub
pop
gs
sub
xchg
xor
js
cmc
inc
or
sarb
aaa
js
xchg
cmpsl
or
das
dec
lods
jb
mov
xor
mov
push
rcl
xor
mov
fcomp
push
fcmovne
lods
sbb
fadds
aam
xchg
add
push
jae
ss
mov
xchg
jo
pusha
jmp
adc
adc
adc
mov
mov
add
aad
dec
adc
pop
testb
lods
add
xor
es
mov
jg
or
xor
lods
jb
cmp
jmp
andb
cld
pop
pop
cli
loope
stc
fisubrl
nop
adc
cmp
sbb
les
dec
gs
stos
or
mov
stos
inc
shll
dec
stc
sbb
fbld
in
xchg
or
jo
lcall
sbb
mov
sbb
mov
cmp
xor
sbb
or
push
or
data16
sbb
imul
pusha
sbb
inc
pop
mov
cmpsb
data16
rorb
inc
cmp
pop
or
inc
pop
sub
sub
inc
cmp
pop
or
cmp
push
movsl
data16
mov
int
or
cmp
movl
pop
imul
pusha
dec
fwait
cmp
out
movsl
data16
jmp
inc
pop
or
cmp
sbb
adc
add
mov
jl
push
jge
pop
out
jg
fmulp
push
shll
test
sbb
jo
dec
inc
jae
inc
mov
repnz
dec
inc
add
dec
shl
cwtl
mov
leave
arpl
nop
mov
fwait
mov
in
xor
ja
mov
jno
dec
mov
shlb
dec
and
mov
addr16
xor
pop
loope
mov
jp
orl
xchg
pop
and
nop
dec
outsl
aas
daa
mov
xchg
std
mov
mov
inc
loopne
mov
sbb
outsl
stc
xchg
sub
jb
mov
inc
xor
mov
out
or
dec
mov
dec
cmp
mov
cwtl
sub
add
inc
xchg
push
jle
outsb
cli
les
sti
cmp
sti
adc
pop
push
sbb
mov
test
int
dec
xchg
xor
loope
and
and
or
sub
arpl
xor
push
fwait
adc
mov
cmp
dec
adc
lcall
cs
icebp
movsl
cmp
lret
mov
jmp
xor
xor
out
lds
mov
pop
xchg
add
andb
xchg
loopne
push
scas
inc
push
mov
mov
scas
dec
sub
or
xor
dec
adc
mov
jp
mov
or
pusha
test
inc
inc
mov
icebp
stos
int
les
mov
sbb
andl
add
cs
fadds
or
or
push
or
xor
inc
lods
pop
jb
mov
movsb
ja
push
sub
dec
mov
pop
insb
cmp
push
cmp
nop
pusha
clc
loop
aas
inc
mov
lcall
lret
add
loopne
jecxz
xchg
bound
cs
popf
add
cwtl
icebp
sahf
sub
mov
fstl
or
in
shll
dec
leave
sub
fmuls
mov
ret
es
fisttpl
adc
jp
cmpsb
and
sub
dec
jge
lret
add
lock
cli
popf
pop
adc
repnz
addr16
cmp
mov
or
xor
cld
test
adc
inc
cmp
and
pop
addr16
jnp
jecxz
enter
mov
bound
or
inc
inc
dec
xchg
and
out
popa
inc
push
imul
mov
into
push
inc
loopne
cmpb
mov
pop
enter
push
pop
cmp
add
adc
das
mov
cmpsl
push
stos
xchg
lods
loope
out
pop
adc
push
and
loopne
cmp
xchg
dec
push
icebp
in
outsb
fimull
test
sbb
or
nop
outsb
inc
test
pop
insb
push
jl
bnd
push
fsubs
iret
fiadds
dec
inc
out
aaa
adc
scas
hlt
fistpll
jae
xor
cmc
dec
nopl
push
mov
inc
mov
sbb
gs
add
lcall
negl
sar
lea
lods
sbb
xchg
icebp
pop
lock
adc
aas
cltd
dec
imul
into
lock
dec
xchg
out
mov
dec
xchg
mov
movsb
fld
inc
jb
sbb
loopne
insb
or
push
stc
hlt
das
into
or
or
jmp
mov
xlat
inc
cmpl
repz
es
ss
inc
inc
jno
divb
xor
add
iret
xlat
dec
push
pop
call
sbb
cmpsl
daa
add
shlb
fstpt
into
shl
lock
inc
clc
push
movsl
and
push
jmp
push
cmpsb
or
and
push
mov
mov
cld
movsl
xchg
jecxz
ret
jbe
lahf
mov
jns
or
ja
sbb
push
hlt
and
mov
ficoml
mov
inc
cmpsl
cmc
adc
dec
jmp
xor
cmp
mov
test
xchg
adc
xor
mov
roll
call
mov
push
cmp
out
das
inc
and
xchg
fsubs
bound
mov
xchg
shll
jae
outsl
pushf
fmull
cmp
stos
or
lret
mov
stc
repnz
cs
lret
mov
or
cmpb
inc
cld
and
outsl
jnp
iret
shlb
xchg
xor
adc
movsb
and
push
adc
movsl
xor
dec
rcrb
push
cmp
lahf
aas
stos
test
mov
aam
adc
iret
dec
mov
pop
scas
fidivs
pusha
test
pop
bound
loop
ficomps
cwtl
out
insl
lret
jp
dec
cwtl
cli
decl
lret
pop
mov
int3
pop
into
loope
jle
out
dec
fadds
mov
mov
ret
and
xchg
add
xor
mov
mov
add
adc
sbb
rcrb
and
shlb
divl
jae
push
stc
pop
mov
sbbb
loop
out
cld
fs
cmp
push
jno
nop
cmp
xchg
adc
out
sbb
icebp
pusha
mov
or
adc
add
fidivs
pushf
shufps
sbb
dec
jmp
add
mov
fxch
movsl
add
push
ret
mov
out
movsb
sbbl
and
rol
ds
scas
jo
out
inc
xchg
ror
jecxz
test
call
jmp
xorl
stc
xor
mov
fistpl
mov
sti
add
sub
out
mov
imul
fadds
xor
xchg
sbb
je
in
sub
and
test
or
imul
mov
add
sub
cmp
nop
mov
gs
sbb
data16
mov
in
scas
rcrl
shrb
inc
mov
ja
inc
pop
lret
inc
mov
icebp
daa
xchg
std
repnz
pop
adc
fidivrl
sub
mov
pop
xor
in
sbb
rcll
in
sbb
sahf
mov
test
and
decl
dec
inc
fsub
fs
jbe
js
aas
gs
add
cmp
lahf
bound
push
add
mov
push
and
jmp
jp
sub
mov
sbb
dec
cld
outsb
stc
jmp
outsl
sbbb
hlt
mov
leave
out
push
push
push
dec
out
rcrb
fmul
and
ret
jle
sbb
pop
mov
sbb
xchg
fadd
scas
pop
and
sub
add
mov
and
mov
sub
test
xor
sub
paddusw
or
insl
xchg
sbb
aam
insb
stc
stc
and
inc
enter
fisttpll
jmp
repz
inc
pop
leave
mov
mov
and
in
in
mov
in
test
aaa
fstpt
sbb
repz
inc
mov
mov
clts
and
aaa
push
mov
fidivs
lock
dec
jae
fstl
xchg
das
ret
mov
xchg
pop
rclb
loope
and
mov
orl
sbb
mov
dec
fcomi
sbb
xor
xchg
cmp
push
repnz
sbb
jmp
sbb
mov
hlt
sbb
push
incb
push
incb
cmp
lret
or
xchg
cmp
xlat
sub
imul
cwtl
mov
ffree
pop
inc
lods
xchg
and
pop
lock
dec
enter
repnz
out
mov
pushl
data16
and
cmp
jb
cli
adc
mov
xor
cmp
jge
and
mov
cltd
mov
dec
xor
in
mov
out
popf
or
outsl
mov
jmp
mov
aam
icebp
xchg
push
adc
and
dec
lock
cmp
popa
adc
adc
add
lods
dec
dec
mov
lahf
sub
fwait
scas
sbb
push
mov
fldl
add
into
sub
and
jo
cmp
push
daa
sub
mov
std
in
xor
jae
inc
adcb
push
lods
xor
cli
rorl
jle
adc
push
or
fisttpl
fsubp
xchg
mov
ret
xor
and
es
adc
movsb
int
sbbl
insb
jo
scas
push
lock
mov
in
fimuls
cmp
mov
mov
daa
shlb
aam
dec
lods
inc
jle
pop
daa
sbb
imul
loopne
decl
jl
inc
xchg
movsb
sbb
imul
cmp
or
ret
aam
or
xor
jbe
sbb
cmp
pop
inc
inc
sbb
out
sbb
mov
mov
out
adc
add
jl
dec
fadd
ret
inc
rclb
cmp
test
and
rorl
fcmove
xor
ret
pop
test
adc
xor
fisubrl
push
adc
dec
cmp
or
insl
mov
jbe
enter
mov
leave
xor
aad
in
jl
cmp
clc
call
cld
in
jl
stos
pop
stos
dec
shrl
xlat
jmp
in
push
push
or
sub
sub
sbb
jbe
inc
mov
mov
and
cld
imul
inc
roll
movsb
add
push
or
pop
lods
jl
rcr
dec
fmull
pop
jp
stos
pop
insb
mov
fimuls
pop
nop
insb
movsl
mov
dec
inc
les
xchg
loop
mov
stos
xlat
mov
shl
les
or
test
mov
out
add
xor
aaa
cmp
and
jmp
mov
sub
push
mov
movsb
pushf
dec
sub
into
dec
jo
loope
mov
and
push
push
fs
aad
xchg
xchg
mov
mov
sub
mov
es
jle
pop
mov
cmp
xor
pop
das
sbb
roll
ret
cltd
lods
arpl
aam
and
ljmp
cmpsl
loop
inc
add
in
add
inc
and
push
mov
sahf
adc
lea
dec
fists
jno
xor
cmp
cmpsb
mov
xor
in
cs
xchg
push
xchg
dec
stos
jb
ljmp
ret
dec
pop
pop
dec
pushf
mov
sbbl
jns
outsb
cwtl
xchg
pop
add
mov
cmp
xor
xchg
popa
orl
push
pop
adc
into
jbe
xchg
outsb
push
std
clc
jle
jg
sub
fistpl
jmp
mov
xor
sti
push
sub
aas
mov
jns
sbb
or
mov
add
mov
fninit
mov
bound
push
push
cmp
sbbl
push
fwait
xor
pop
xor
aad
mov
pop
incb
daa
stos
inc
adc
xchg
pop
in
adc
dec
je
stos
int3
or
outsl
ds
jmp
sub
xor
push
cld
sti
filds
xchg
ds
in
add
lret
gs
adc
mov
or
arpl
fwait
mov
inc
xchg
inc
mov
sbb
dec
jbe
add
adc
xor
int
jmp
pushl
sbb
mov
push
stos
mov
ficoms
iret
cwtl
inc
cmp
dec
paddsb
cmp
lcall
xchg
bound
and
aad
mov
sbb
add
xlat
add
subl
mov
fmuls
jae
and
xchg
popf
sbb
loope
fcomip
dec
outsb
jns
jle
out
cmpsb
jle
bnd
add
out
andb
pop
or
pop
or
xchg
repz
sbb
stc
test
ja
adc
leave
out
mov
jg
inc
xchg
shlb
adc
call
dec
cltd
lods
inc
jb
popf
nop
sub
cwtl
es
loop
cmpsl
jae
mov
bound
arpl
mov
or
lcall
jae
adc
or
inc
scas
pop
in
mov
add
fwait
into
xorl
mov
add
sarl
jle
rclb
xchg
sbb
add
aaa
or
mov
pushf
mov
js
scas
mov
mov
or
cli
popa
jo
pmullw
sub
int
lret
dec
dec
outsb
jns
mov
mov
loope
loopne
or
pop
movsl
in
scas
pop
sbb
jle
test
jae
cli
push
push
test
clc
xchg
outsl
negl
cmpsl
test
push
and
push
lods
lods
jo
xlat
roll
pop
sahf
das
test
push
imul
jbe
push
gs
cmp
lret
ja
mov
adc
cmp
sbb
je
sub
xor
imul
ret
and
pushf
jns
inc
mov
insl
in
data16
test
mov
mov
xchg
xchg
clc
cwtl
mov
enter
aas
repz
xor
dec
call
adc
int
bound
adc
sbb
cmp
insl
out
bound
adc
xlat
push
cmpsl
xchg
popw
leave
scas
mov
push
hlt
cwtl
test
mov
jle
or
and
pop
or
stc
aam
mov
cwtl
mov
mov
into
ret
mov
dec
rorb
sub
jae
loopne
ljmp
fcmovnb
sbb
jmp
notb
jmp
jns
xor
mov
cmpl
outsl
mov
dec
mov
xchg
in
add
xor
cmp
jo
sub
loopne
mov
mov
ret
insb
roll
add
jmp
xchg
pop
pushf
or
cmp
cmpsb
jo
daa
addr16
lods
xchg
js
cmp
clc
xchg
or
rcrb
mov
sahf
mov
inc
pop
out
bound
pop
mov
repz
arpl
pop
in
ja
iret
outsb
fs
hlt
fcomps
lock
add
pop
insb
jae
cmp
fistpl
bound
inc
pop
dec
push
or
cmpsl
dec
std
push
mov
fs
aaa
loop
ja
mov
mov
test
stos
sbb
jle
sti
lea
frstor
jns
call
stc
add
jecxz
imul
add
outsl
xchg
push
bound
dec
ffreep
loopne
push
sti
fmulp
mov
leave
aam
das
addr16
push
rorb
lds
fnstsw
xlat
sbb
out
fwait
rclb
mov
sub
inc
mov
call
push
fldt
xor
repz
add
xchg
pop
gs
mov
xor
mov
pop
sub
xchg
xchg
mull
push
inc
inc
xchg
insb
insl
fisttpll
inc
push
imul
mov
xor
mov
push
sbb
popa
js
insl
inc
addr16
jmp
loope
pop
xor
outsb
add
pop
imulb
mov
or
sub
aas
sarl
cmpsl
xchg
sbb
aam
cmp
push
add
xchg
adcl
lds
rcll
inc
or
pop
sbb
lds
push
and
mov
dec
inc
cmp
repz
ffree
jb
ret
sahf
and
xor
xchg
loope
pop
ss
rorl
mov
push
pop
cmp
insl
loop
arpl
xchg
sbb
out
jg
jno
push
jg
out
pop
push
and
mov
divb
lret
cmc
inc
jmp
jne
insb
repnz
stos
ret
pop
imul
or
ds
mov
sarl
mov
test
rclb
jno
xchg
fisubs
cli
pushf
popf
arpl
sub
daa
mov
into
aad
in
pop
add
insb
popf
adc
scas
cld
xchg
lock
dec
and
int3
inc
xchg
cmp
repz
adc
lcall
loop
hlt
mov
test
pop
fcoms
cltd
dec
int
andb
and
lds
ljmp
daa
arpl
lds
clc
jbe
sbb
cmp
imul
and
rep
pop
inc
jne
xchg
stc
push
test
test
or
sahf
int
jo
stc
cmp
pushf
cmp
sub
inc
xor
jo
jns
mov
push
pushf
cmp
and
jecxz
sub
jnp
movl
mov
adc
ret
add
jo
insl
stc
mov
popf
int3
rclb
daa
cmp
add
mov
and
mov
sub
fmuls
push
jge
jmp
xor
xchg
and
cmp
pusha
call
stc
cmovb
or
adc
addr16
push
mov
xor
shld
stc
cmova
ror
das
pop
test
jb
jge
cmp
cmpsl
push
cmp
mov
les
xchg
pop
lcall
enter
scas
test
pop
mov
fidivrl
sub
pop
mov
loope
bound
imul
imull
test
jo
and
fidivl
movsb
sbb
stos
inc
loopne
test
in
lods
addb
and
in
test
jno
and
pop
dec
jbe
stos
andb
cmp
mov
imul
cli
cmpsl
ret
xlat
movsb
adc
pop
mov
mov
repz
inc
cmpl
shrb
in
or
adc
sub
in
fisttps
add
or
mov
mov
nop
cmp
or
mov
pusha
push
inc
jecxz
movsl
jnp
push
mov
push
lock
and
and
inc
sbb
or
cmp
dec
and
mov
fdivrl
sarl
inc
adc
sub
fs
faddl
lahf
add
add
and
jne
cmp
mov
aaa
cwtl
movsb
sbb
xchg
fimuls
je
lcall
sub
test
adcb
dec
pop
imul
pop
mov
lods
adc
shrl
shll
loopne
popf
or
bnd
and
sbb
dec
out
mov
push
pop
das
inc
call
push
into
push
in
xchg
mov
pop
push
adc
repz
xchg
mov
jmp
jbe
rcll
pushf
ja
cwtl
rolb
or
jb
xchg
scas
adc
outsb
sbb
and
fistps
xchg
fidivs
jl
out
xorl
dec
ret
mov
add
add
jbe
mov
dec
pop
xchg
loope
call
sarl
pop
cmp
and
out
add
mov
fnstcw
lea
inc
jns
in
dec
sti
fldt
lock
call
adc
movb
inc
mov
dec
pushf
scas
clc
lret
addr16
enter
pusha
add
lods
cmp
push
mov
ret
ss
pop
adc
pop
rcrl
cmp
repz
jbe
dec
xor
and
cld
add
imul
loop
aas
outsb
rep
mov
je
fcompl
jnp
add
iret
and
push
fbstp
lea
fcoms
jg
add
jo
push
pop
out
repnz
mov
out
jae
mov
out
test
mov
pop
xor
scas
icebp
clc
xchg
jno
xchg
and
mov
sub
dec
stc
lea
pop
adcl
push
sub
outsb
sub
aad
daa
cmp
sub
inc
inc
push
adc
add
jnp
dec
mov
lods
fisubrs
pop
mov
lods
fsub
cmp
arpl
dec
mov
stos
or
lods
addr16
dec
repz
lahf
lods
imul
jo
and
aad
mov
rcrl
inc
xorb
into
mov
stc
pop
mov
xchg
loopne
jge
imul
or
jge
and
mov
mov
fiadds
xor
jecxz
fdivl
pop
inc
sbb
inc
xlat
sbb
lods
push
rcrb
int3
sbb
jmp
sahf
imul
bnd
lods
push
jmp
pushf
shlb
bound
or
push
dec
test
aam
inc
repz
call
mov
mov
sti
lcall
mov
mov
rorl
mov
and
inc
lods
or
cltd
addr16
ret
inc
mov
and
aad
repnz
jb
push
gs
mov
cli
lea
xor
dec
in
int3
insl
jg
std
dec
in
pushf
fists
and
orl
mov
ret
mov
mov
and
mov
mov
xchg
push
leave
insl
sti
flds
andl
jl
stc
xchg
dec
sbb
add
fisubrs
test
pop
std
stc
popa
pop
mov
xchg
lds
ja
imul
and
jecxz
jnp
les
rol
or
in
scas
sbb
lock
repz
stos
and
in
call
xor
movsl
mov
sbb
push
icebp
add
or
sub
push
or
mov
sbb
sub
sub
xchg
call
mov
jns
cmp
inc
jnp
dec
mov
mov
add
pop
cmp
mov
mov
and
jno
lods
or
jge
stc
mov
mov
dec
fldcw
aas
and
out
test
ficoms
aas
shrl
xlat
lds
push
sub
inc
sti
fs
push
pop
mov
add
mov
stc
mov
or
push
sub
fstl
inc
and
dec
xlat
mov
xor
arpl
in
mov
fisttpll
popa
pop
jns
pop
push
insb
jp
in
pop
cltd
enter
adc
sbb
xor
outsb
scas
push
xchg
clc
jb
add
stc
mov
cmp
or
stc
mov
insb
fildll
push
rcrb
lcall
lock
push
lds
idiv
cld
mov
insb
add
wbinvd
mov
jns
mov
loope
xor
jmp
stc
mov
dec
cld
test
imul
fisttpl
and
inc
out
mov
mov
pop
xchg
sti
pop
push
adc
jnp
sub
jecxz
fildl
dec
cld
pop
mov
jno
cmp
mov
jae
mov
stc
mov
test
stc
leave
push
pop
jg
in
cmpsl
sbb
jns
add
jo
add
cmp
jns
pop
aas
pop
cmpl
rcrb
mov
adc
xchg
mov
ret
lock
sbb
aas
cmc
lahf
rol
mov
fucomi
adc
mov
jg
jno
mov
scas
push
or
mov
jae
mov
stc
insl
cmpsl
mov
sbb
iret
inc
stos
mov
dec
das
mov
outsl
sub
mov
adc
mov
sub
pop
imul
mov
sub
cmpb
sbb
mov
adc
jno
xchg
ror
jo
jmp
adc
add
mov
xchg
in
mov
in
outsb
and
pusha
jns
ds
xchg
mov
jle
out
rcrl
stos
test
testl
push
adc
dec
jbe
jbe
jbe
push
in
pop
adc
adc
cmp
push
xor
push
addb
push
rclb
or
mov
icebp
jmp
adc
gs
fxch
jmp
movsb
xchg
cld
jle
lcall
jb
ret
rcrl
stos
test
lds
adc
dec
lea
mov
jne,pt
add
jnp
pop
adc
dec
xor
pop
in
sub
fsts
or
inc
into
add
adc
add
adc
inc
push
inc
movsb
jg
dec
dec
add
data16
daa
iret
jmp
adc
lods
inc
cli
out
sbb
lret
add
or
mov
xchg
jmp
adc
decl
popa
add
pop
add
or
mov
jp
push
adc
push
enter
add
cwtl
fistpl
push
ret
xchg
lret
mov
bound
sarb
adc
jg
out
jno
into
add
jl
cmpl
cli
lcall
add
or
push
jmp
jmp
xchg
pop
js
adc
lret
add
int3
add
xor
repz
popf
mov
adc
sbb
cmpsb
pusha
ljmp
bound
xchg
jae
add
in
lret
sbb
sbb
pushf
and
int3
jmp
shr
test
xor
sbb
push
mov
in
push
sbb
jp
xchg
adc
mov
arpl
lret
adc
lds
fwait
pop
pop
in
sbb
pop
pop
jmp
adc
popa
arpl
into
add
push
aas
pop
pop
out
les
call
add
and
xor
mov
xchg
adc
aad
push
test
xchg
xor
cmp
mov
fidivs
pop
testl
icebp
jg
insl
push
mov
xchg
xchg
adc
dec
cli
lret
xchg
ja
out
adc
mov
xchg
adc
mov
dec
pushl
sbb
sbb
or
mov
roll
aaa
jno
popa
xor
lock
adc
test
sub
popa
sbb
adc
inc
pop
mov
je
lret
movq
rcl
hlt
adc
sti
pushf
adc
add
stos
push
lret
stos
aas
adc
add
add
pop
sub
stos
jg
loope
repnz
lcall
add
push
jb
idivl
out
popa
fabs
dec
xchg
jp
xchg
or
aad
ljmp
out
mov
outsl
or
add
jmp
add
jae
add
pop
addr16
push
mov
movb
mov
in
inc
add
add
add
xchg
lret
bswap
add
xchg
push
mov
dec
adc
add
xchg
and
into
add
add
dec
or
mov
push
lds
cmpsl
push
ljmp
xchg
adc
mov
add
jg
xor
stos
ljmp
into
add
jbe
pop
popa
pop
aam
pop
stc
inc
adc
adc
imul
jns
add
mov
mov
xor
push
aam
mov
push
push
sbb
jmp
xchg
pop
or
addr16
jmp
cmc
xchg
imul
lcall
iret
add
out
loope
xor
mov
rcr
adc
xchg
lahf
push
or
pop
test
hlt
add
iret
add
out
loope
xor
fwait
add
lea
js
or
xchg
mov
xchg
adc
mov
pop
sub
lret
adc
mov
adc
rorl
sahf
rorl
aam
push
dec
mov
or
xchg
adc
ds
adc
add
or
mov
xchg
dec
lods
inc
or
push
outsl
scas
jmp
in
das
add
mov
xchg
adc
mov
pop
sub
lret
adc
mov
movsb
pop
mov
xchg
jg
into
xchg
ror
iret
add
scas
ficomps
into
incb
leave
outsl
or
testl
mov
mov
xchg
int
inc
lock
in
adc
sub
test
jbe
aam
dec
dec
xchg
out
lcall
into
sbb
dec
pusha
sub
inc
es
jg
xchg
xchg
adc
out
push
inc
xchg
sbb
add
sbb
add
jne
cmp
loopne
or
add
push
mov
scas
pusha
mov
lock
xchg
push
mov
xchg
adc
rorl
icebp
jmp
xchg
addb
popf
sbb
add
adc
xchg
lret
bswap
add
add
add
pop
sarb
mov
sbb
sti
arpl
push
dec
in
movsb
pusha
push
xchg
adc
add
mov
in
jbe
aam
inc
add
repnz
lcall
rorl
jmp
ds
add
cmp
into
add
sub
add
js
add
out
loope
xor
mov
xchg
adc
xchg
pop
imul
arpl
push
mov
addl
fidivs
xchg
push
xchg
lret
add
mov
arpl
add
fcmovnu
push
mov
rcll
iret
add
ds
add
test
iret
inc
cmp
sbb
cmp
mov
or
nop
xchg
jbe
out
and
dec
xchg
jae
add
inc
leave
adc
mov
cmc
sahf
test
pop
dec
fnsave
jne
fs
rcl
rorl
mov
adc
add
iret
add
and
xor
mov
xchg
adc
aad
into
push
mov
push
arpl
xchg
adc
insl
popf
and
xchg
or
fsubrs
into
add
or
push
sub
in
test
mov
test
push
adc
rorl
add
cmp
add
jns
add
and
xor
cwtl
add
lcall
jg
mov
adc
sti
pushf
adc
add
aad
lret
stos
push
lret
stos
cmp
into
add
nop
movsl
pop
pop
jge
int3
inc
xchg
dec
shll
test
adc
fs
jae
add
jecxz
sbb
mov
jecxz
xchg
cmp
sbb
ficomps
push
or
in
push
out
out
out
outsb
lcall
into
add
stos
push
lret
stos
incl
add
add
rolb
add
inc
jns
add
mov
mov
xor
push
aam
push
and
jns
add
std
mov
sahf
jae
lods
daa
mov
sbb
sbb
insl
lret
mov
sub
iret
outsl
or
std
inc
std
xchg
add
push
iret
add
lods
jmp
nop
fdivl
fcomps
shlb
cmc
add
iret
add
mov
mov
xor
push
aam
push
out
mov
fxch
gs
and
xchg
push
daa
mov
cwtl
icebp
adc
sti
pushf
adc
add
pusha
lret
push
lret
stos
incl
into
add
test
xchg
adc
xchg
into
add
into
add
xchg
mov
sbb
stos
test
push
xchg
or
repz
jmp
mov
popa
sbb
sbb
xchg
sbb
enter
mov
mov
icebp
adc
sti
pushf
adc
add
addr16
push
lret
stos
incl
into
add
pop
xor
shrl
pop
aaa
jbe
aaa
xchg
mov
scas
jg
jmp
add
inc
into
add
jmp
cli
or
and
push
adc
adc
mov
cmp
sti
mov
or
cltd
adc
add
lock
mov
enter
push
lcall
enter
test
jno
pop
jb
pop
dec
xchg
sti
xor
add
add
dec
xor
jmp
lret
adc
add
addb
sbb
mov
clc
push
add
xchg
or
push
iret
add
push
pusha
js
adc
add
addr16
adc
nop
fidivs
loopne
xchg
or
add
mov
xchg
test
push
ret
stos
jmp
repnz
add
cwtl
mov
mov
xchg
lret
fiadds
lock
into
cli
les
mov
xchg
jp
sub
sbb
jmp
adc
cs
add
gs
dec
in
pop
cld
in
and
rorl
or
mov
dec
or
sbb
pop
dec
push
xchg
adc
sbb
scas
insl
ljmp
jp
xchg
adc
mov
sti
sub
test
sub
into
ret
loopne
jge
add
xchg
sti
fadds
mov
jmp
dec
add
data16
daa
iret
jmp
adc
lods
inc
cli
out
sbb
lret
add
or
mov
xchg
jmp
adc
decl
popa
add
pop
add
or
mov
test
push
adc
cmp
xor
dec
in
aam
xchg
xchg
adc
inc
pusha
pop
add
adc
add
adc
cld
scas
push
into
add
lds
dec
shl
iret
cmp
dec
inc
dec
aam
dec
or
sub
rcll
lahf
mov
aad
rcrl
inc
push
in
imul
sbb
aad
aaa
pop
fcompp
stos
mov
stos
xchg
pop
and
fcoml
daa
sahf
scas
jle
mov
push
mov
jnp
cmpsb
pop
es
call
jmp
aas
data16
and
xchg
xlat
dec
push
sub
ss
idivb
mov
enter
in
xor
adc
cltd
cmpw
dec
sub
mov
aam
aas
cmp
aam
add
or
jae
lcall
dec
test
fmul
add
imull
mov
stc
stc
ljmp
iret
mov
iret
sbb
sbb
inc
lret
add
adc
idivl
cmp
je
add
adc
popf
out
push
inc
xor
cwtl
dec
xchg
dec
push
push
enter
xchg
xchg
jmp
push
aas
out
fcmove
sub
push
iret
xchg
mov
mov
pop
test
hlt
shll
mov
stos
pop
cmp
pop
or
fs
pop
lret
jae
mov
xchg
bound
sbb
sti
sahf
jge
xchg
mov
enter
cmp
call
loop
mov
sub
insb
mov
or
movq
pop
xor
jg
adc
fnstsw
dec
in
ret
and
call
inc
add
mov
bound
idivb
push
adc
dec
shll
test
inc
dec
pop
insb
jl
adc
fs
in
mov
jle
sbbb
bound
nop
jo
mov
sbb
movsl
aad
jg
add
and
and
cmp
test
jb
insb
stos
loop
sub
lock
enter
sub
sarl
push
leave
stos
leave
fcoml
imul
scas
mov
jo
ret
xchg
hlt
or
sub
mov
cmp
adc
pslld
ret
ljmp
xchg
dec
cs
movb
adc
xchg
ljmp
loopne
push
call
sti
push
xlat
and
add
mov
icebp
push
mov
loop
mulb
jg
insb
and
sub
and
in
inc
or
push
adc
scas
xchg
pusha
jmp
pop
addr16
lods
mov
add
xchg
int
xor
cmp
in
sti
das
inc
popa
aas
mov
fs
jns
mov
or
insb
mov
sti
lret
daa
lret
movsb
jge
nop
test
in
scas
jb
or
fdivrs
jae
mulps
lret
or
add
xchg
movsl
test
jns
nop
dec
mov
xchg
lret
inc
xorl
popa
xchg
insl
and
dec
xchg
dec
into
ret
cltd
jbe
xchg
mov
into
add
stos
in
jae
xor
xchg
jl
xor
pop
movsl
out
test
mov
sbb
xchg
push
call
mov
rclb
push
leave
xor
leave
mov
push
das
andl
hlt
clc
mov
js
out
movsb
adc
pop
push
xchg
or
jmp
lea
fwait
cli
mov
lock
adc
enter
jmp
call
pop
stos
sbb
sub
ss
dec
adc
call
xlat
mov
xlat
lock
add
movsl
sbb
iret
inc
mov
jl
adc
add
or
insb
call
push
xchg
and
add
add
pop
sub
fwait
test
mov
push
cmp
sbbb
add
or
adc
test
mov
jbe
leave
pop
mov
loopne
test
pop
adc
mov
jecxz
xchg
add
cmp
and
sbbl
lds
mov
dec
aas
out
mov
notb
or
test
mov
mov
popf
dec
arpl
xchg
sbb
incb
mov
lret
add
dec
mov
jnp
cmc
cld
in
cltd
pop
add
shll
leave
dec
xchg
mov
and
inc
and
movsb
ljmp
and
gs
sub
mov
lods
or
push
and
mov
mov
xor
pop
pop
stos
imul
ljmp
icebp
push
roll
fmuls
stos
clc
cmp
out
mov
mov
mov
and
pop
loopne
and
mov
into
ficompl
pop
test
jo
stc
sbb
mov
mov
fsubrs
sub
and
scas
cmp
xchg
xchg
arpl
mov
repz
push
aaa
jno
fimuls
inc
cmp
or
fs
or
in
jo
lahf
lahf
cmp
mov
add
jns
sub
dec
cmp
sub
int3
test
adc
dec
adc
push
jnp
aas
lock
fstpl
cmpsl
repnz
call
stos
mov
in
mov
lea
rcll
xor
add
insl
xchg
mov
pop
out
mov
sti
daa
inc
lcall
lcall
mov
xor
dec
bound
imul
or
mov
and
sub
xchg
stc
xchg
adc
test
cltd
ret
lahf
sti
xchg
adc
add
cmp
addr16
shr
push
fs
out
adc
into
arpl
sub
jno
ficompl
je
mov
fisubrl
cwtl
andb
sahf
lahf
repnz
lret
add
sti
dec
mov
dec
cmpsb
lahf
add
popf
fwait
repnz
addr16
insb
aam
stos
ror
jbe
inc
dec
adc
add
lret
jle
sub
fcomps
adc
adc
dec
scas
xor
ror
inc
pushf
add
mov
adc
inc
fbstp
mov
gs
gs
and
jl
jl
push
jbe
fsubs
js
in
shrb
pop
les
int3
stos
add
das
xor
sub
mov
mov
adc
xchg
call
fistpl
cmpsb
shrb
iret
sbbl
push
aad
mov
sti
mov
dec
lret
and
outsl
lcall
loope
retw
ja
lret
mov
adc
add
iret
add
mov
mov
xor
push
aam
sbb
add
mov
ljmp
aaa
jbe
pop
in
bound
icebp
adc
ja
imul
scas
push
lret
stos
decl
sti
mov
lods
jmp
adc
add
or
std
inc
std
xchg
add
push
enter
xlat
fiaddl
movsl
adc
data16
mov
xchg
jbe
mov
jae
add
lock
push
cs
cmc
add
inc
inc
test
adc
inc
jae
lret
mov
les
stos
pusha
ss
movl
std
xchg
pop
mov
in
mov
xor
jmp
push
pop
fiaddl
call
lret
xor
stos
add
xor
iret
std
std
dec
mov
fmull
dec
cwtl
push
adc
sub
js
or
mov
mov
jle
sbb
xchg
or
add
mov
xor
sbb
test
pop
icebp
mov
sbb
inc
push
inc
shll
into
lea
inc
sub
js
or
mov
mov
jle
sbb
sbb
dec
ret
adc
push
jg
inc
sbb
mov
push
adc
mov
jmp
std
dec
into
inc
jp
and
sbb
and
shrb
mov
inc
inc
sbb
mov
add
sbb
mov
ret
ja
cmp
rcll
out
mov
xchg
into
bound
ljmp
sub
cmp
inc
popa
aaa
test
pop
xchg
int
test
je
daa
daa
movl
outsl
mov
cmp
daa
ss
or
ljmp
inc
je
cmpl
pop
mov
outsl
cmpb
push
movsl
cmpsb
das
ljmp
mov
icebp
dec
and
int3
xor
pusha
push
andl
inc
mov
cltd
div
pop
jge
daa
and
fdivp
test
add
test
pushf
mov
ds
mov
inc
mov
ja
push
pop
inc
mov
jb
ljmp
inc
adc
cltd
jbe
ret
dec
fistps
xor
mov
popa
lds
or
sbb
mov
or
adc
xchg
test
gs
pop
mov
add
pop
lods
jle
repnz
cmp
xchg
cmp
push
ds
dec
dec
cmpsl
dec
dec
dec
scas
inc
cmp
jmp
xchg
pop
and
mov
outsl
sbb
mov
int
cmp
cmpsl
test
fwait
mov
bound
cltd
mov
cmpsb
mov
stos
clc
cs
popf
cmpsb
or
lds
fsubrs
in
lods
cmp
push
fiaddl
add
inc
xchg
xchg
setnp
lods
push
jg
adc
sub
dec
test
mov
jp
cmpsb
cltd
mov
cmpsb
mov
lds
cmp
xchg
das
inc
pop
repnz
ljmp
or
roll
inc
pop
addr16
outsl
pusha
xlat
mov
lret
push
pop
gs
lcall
in
rcrl
iret
xlat
xchg
push
cwtl
insb
sbb
rcrl
jge
cmp
mov
inc
fiaddl
mov
lock
xchg
mulb
add
xor
sbb
daa
js
mov
adc
adc
out
mov
lds
dec
and
loopne
into
inc
pop
jno
nop
cli
popa
push
xor
or
repnz
jae
jbe
adc
addr16
adc
fdivs
ret
dec
out
cld
and
cmpsl
lret
push
int
mov
jmp
fildll
push
adc
fs
add
lret
imul
call
xchg
insb
add
ljmp
mov
pop
push
pop
dec
leave
out
mov
loop
mov
leave
push
iret
movsl
fsub
pop
sbb
adc
pop
rorl
fiadds
adc
ret
cld
adc
aad
scas
push
lret
sar
jbe
add
pushw
test
call
jnp
and
fdivl
mov
cld
adc
xlat
mov
add
dec
in
xchg
dec
notb
shrl
outsl
push
in
push
mov
jmp
rcrb
jae
fstl
insb
mov
movsb
call
pop
jle
repz
mov
pusha
jg
jnp
mov
cmp
sbb
mov
inc
jmp
mov
int3
repz
xor
xor
movsb
in
push
jb
mov
push
inc
push
mov
cmpsl
jl
ss
mov
mov
and
xchg
sti
das
dec
popf
icebp
mov
loope
cli
ds
lcall
sbbl
add
mov
dec
add
dec
loope
outsb
xor
and
ds
dec
movsb
pop
mov
ret
push
dec
xchg
xor
mov
mov
inc
xor
or
es
push
subl
gs
jns
adc
add
cmp
pop
inc
sbbb
push
push
push
xor
outsb
mov
mov
mov
loope
xorl
arpl
xchg
mov
dec
push
sub
mov
jns,pn
mov
popa
insb
dec
lock
xadd
jb
mov
jmp
cld
movsl
lahf
test
jae
xchg
xchg
fs
int3
cmc
mov
mov
out
fdivs
and
mov
lods
lret
loope
repz
xlat
push
mov
cmpsl
or
push
fldcw
imul
mov
inc
mov
jae
ss
mov
fists
and
int3
sahf
push
sub
sbb
cltd
sbb
dec
aad
fmuls
jmp
shll
push
enter
inc
pop
xor
ja
jns
scas
mov
rol
mov
mov
mov
cld
mov
jns
and
cs
ja
clc
aaa
mov
cmp
cmp
loopne
int3
pop
jg
dec
jg
mov
mov
fcmovne
pop
and
aas
addr16
cmp
mov
push
and
movsl
sub
roll
add
pop
pop
jae
loope
scas
sbb
ja
jg
subb
vmaxpd
add
jmp
pop
inc
pusha
add
dec
loope
lahf
addr16
shr
pusha
add
test
jno
fwait
shrb
int
cmp
sub
outsl
dec
and
pushf
pushf
adc
aaa
inc
dec
mov
and
xlat
dec
pop
push
sub
fsubrs
mov
hlt
inc
mov
subl
sti
lret
adc
cld
xchg
dec
mov
out
cmp
cld
out
and
jo
cmp
xor
dec
cwtl
insl
mull
mov
sti
mov
xor
test
add
outsb
jno
jns
insl
jbe
adc
std
cmp
push
push
xchg
cmpsw
or
rcr
sub
mov
mov
and
xor
adc
out
out
fdivr
mov
sbbl
push
repz
popf
ret
in
call
rol
mov
movsb
lods
cmp
mov
xchg
sub
fsts
int
int3
push
xor
aam
stos
loope
scas
ds
and
jb
adc
movsb
cmp
push
stos
out
xor
xchg
ret
sub
cmp
cmp
add
mov
imul
out
xchg
lret
mov
pop
or
stos
adc
pop
push
fildl
aad
lahf
mov
les
lahf
mov
iret
xchg
iret
push
sub
push
in
lea
push
out
mov
shrl
mov
adc
mov
cmpsl
mov
jns
movb
mov
push
stos
shrl
xchg
cmp
dec
sbb
or
mov
ret
mov
xlat
pop
xor
xchg
dec
and
cmpsl
xchg
inc
je
inc
add
mov
popa
mov
mov
or
or
add
ljmp
in
mov
pop
test
aas
mov
fbstp
xchg
test
out
mov
xchg
add
sub
sbb
fildll
add
xchg
xor
push
lcall
mov
mov
mov
das
xchg
push
dec
sbb
jne
iret
mov
cmp
adc
test
hlt
mov
jb
push
sub
xchg
cmp
adc
xchg
stc
pop
xor
mov
inc
lahf
cwtl
imul
pop
ja
dec
xchg
notb
popa
mov
xchg
mov
xchg
movsl
in
aad
je
scas
loopne
stos
pop
lcall
daa
outsl
sbb
sub
fsubrl
nop
adc
sub
fimull
fidivrs
fs
xlat
and
add
scas
and
push
cwtl
xchg
xor
movntq
out
push
sbb
xor
push
fdivs
pop
mov
sahf
fcoms
inc
dec
sub
aaa
fists
es
int3
and
or
jbe
sub
loopne
insb
insl
out
sahf
insb
cs
cmpb
mov
stos
fisttpll
cwtl
jns
mov
push
push
mov
mov
lret
scas
push
pop
bound
pop
pop
in
and
ret
dec
outsb
ficoms
and
orl
cmp
dec
add
jmp
push
mov
mov
dec
sbb
pop
stos
jo
pop
mov
pop
add
xor
mov
pop
mov
push
gs
and
scas
mov
clc
ljmp
xchg
roll
xor
shrl
dec
push
mov
pop
mov
pop
push
outsb
lret
dec
mov
into
ds
xor
inc
mov
sbb
add
or
les
push
pushf
pop
cmp
dec
es
cmc
das
mov
xlat
movsl
clc
mov
and
decb
outsb
xchg
cmp
ret
loop
pop
and
cmpsl
adc
adc
decb
pop
and
push
fwait
mov
ret
rcrl
lds
nop
jbe
pop
out
push
pop
cwtl
inc
mov
icebp
cwtl
insb
repnz
cmp
or
mov
push
push
clc
movsl
int3
mov
fcoms
pop
inc
or
decb
fistl
out
sub
adc
stos
jo
or
hlt
jmp
lea
jl
or
and
pop
pop
lock
add
xchg
cmp
cltd
pop
hlt
hlt
scas
sub
and
arpl
xchg
cmp
loop
mov
cmpsb
or
or
mulb
inc
andps
pop
lcall
imul
cmpsl
or
sbb
mov
xchg
test
pop
andb
xchg
loop
dec
daa
imull
in
add
addr16
push
xor
adc
xchg
cmp
jbe
sbb
xor
adc
cmp
pop
arpl
sub
push
sbb
xchg
cmp
adc
dec
ss
addr16
xchg
aaa
mov
xchg
jne
xor
das
sar
push
hlt
gs
inc
sub
and
js
test
sbb
xchg
cmp
shlb
adc
add
pusha
adc
shll
loop
mov
or
adc
fsubp
cmp
fidivs
or
cmp
pop
push
arpl
out
aam
mov
mov
pop
push
mov
scas
jg
push
mul
xchg
cmp
mov
mov
stc
and
cmp
ret
jmp
clc
nop
mov
pusha
call
pop
pop
andl
mov
js
scas
mov
sub
cld
dec
mov
loop
push
jnp
outsb
cmp
mov
xor
pop
pop
mov
lret
mov
scas
enter
scas
and
ret
adc
mov
xor
dec
daa
cmp
aas
clc
lods
jle
push
jmp
mov
andl
pusha
cmp
and
adc
insl
mov
filds
pop
andb
sbb
jnp
or
sarl
arpl
push
sbb
xchg
cmp
adc
loopne
adc
pop
jp
les
mov
xchg
cmp
pop
ret
adc
in
fcomi
cmc
in
sahf
cmp
in
test
addr16
mov
sbb
xor
fcoml
mov
cmp
dec
sub
dec
xchg
pop
fisubl
mov
xchg
pop
add
and
test
xchg
cmp
ret
aaa
xor
ja
sbb
push
mov
pop
scas
pop
sub
push
add
sbb
jae
pop
clc
adc
pop
pop
xor
rep
adc
repnz
dec
adc
push
addl
jl
xchg
adc
cli
cmp
sub
pop
dec
push
scas
adc
nop
addb
mov
ret
jb
adc
cmp
lahf
jnp
sub
cmp
sub
sub
cmpsb
pop
stos
xchg
in
loopne
sub
out
test
imul
mov
xchg
out
pop
fsubrs
pusha
test
fisubrl
adc
lods
mov
xchg
cmp
stos
and
xchg
cld
dec
add
fmuls
pop
ficompl
arpl
adc
test
xlat
sbb
pop
mov
cmp
dec
mov
mov
outsb
iret
mov
scas
out
push
adc
xchg
cmp
pop
jecxz
push
push
xor
enter
cmc
hlt
xchg
cmp
pop
add
aam
pop
push
pop
xor
in
pop
add
lret
in
lcall
mov
mov
mov
xchg
cmp
sbb
icebp
das
add
popa
pop
fwait
dec
fcomps
test
hlt
lahf
cmp
repnz
push
ficoml
cmp
loop
xor
popa
lret
insb
out
hlt
pop
add
movsb
cmp
adc
and
jae
add
add
jne
adc
xor
loop
jbe
xorb
pop
in
pop
jg
pop
or
and
dec
inc
lock
arpl
ret
ficompl
cmp
loop
xor
jecxz
cmp
loop
pop
test
xchg
cmp
scas
xchg
push
ffreep
mov
mov
xchg
das
scas
dec
cs
xchg
push
daa
jb
push
outsl
or
cmc
in
mov
add
pop
aas
mov
shrl
ret
push
cmp
push
adc
xchg
cmp
dec
gs
mov
scas
mov
loope
cmp
xor
lret
dec
mov
es
dec
bound
mov
xor
pushf
xor
push
add
xchg
jns
daa
cmp
jno
or
fisubl
mov
xchg
in
sub
add
dec
lods
mov
add
mov
fsubrs
out
mov
xchg
cmp
and
pushf
xor
dec
arpl
fidivl
adc
loop
pop
test
hlt
dec
sub
imul
popa
pop
ret
dec
xor
mov
scas
xchg
in
lret
jbe
int3
adc
adc
inc
or
pop
xorb
cmp
jns
cmp
mov
movsb
xlat
cli
iret
movsb
ret
lfs
cmp
sub
in
scas
mov
pop
test
pusha
fdivl
sub
divb
adc
xor
jae
mov
pop
mov
xchg
cmp
fsubrs
test
fnstsw
cmp
pop
aas
enter
out
sbb
sub
out
cmp
int3
adc
cmpb
test
xor
filds
mov
push
subb
xor
sbb
enter
pop
ret
and
test
xchg
fcomi
ret
arpl
les
pushl
divl
jno
dec
pop
js
push
sub
pusha
insl
sub
cmp
sbb
xor
pop
fisubs
aaa
xor
mov
dec
inc
sbb
and
cld
and
inc
push
adc
xchg
cmp
call
jge
pop
jns
lret
sub
push
cmp
or
stc
cmp
mov
xchg
into
mov
inc
mov
lock
and
dec
mov
and
mov
or
dec
arpl
pop
mov
xchg
cmp
sub
cmp
mov
xchg
roll
movsl
scas
mov
xchg
sub
xor
scas
or
cmc
ja
adc
aad
push
in
xor
fstps
jnp
cmp
popf
iret
call
in
mov
push
scas
vpsadbw
sub
adc
mov
lahf
test
in
loop
xor
loope
scas
loop
push
sbb
outsl
inc
dec
orl
fwait
cmp
mov
sub
mov
sub
jmp
enter
and
adc
add
dec
xchg
outsl
sub
sub
gs
in
decb
xchg
in
mov
insb
repz
mov
cwtl
cmp
pop
fsubrs
sbb
addr16
adc
and
cmp
popl
lds
mov
rcll
jmp
push
loope
aam
adc
jecxz
xor
subl
cmp
inc
mov
imul
xchg
fwait
pop
rcll
lods
cltd
fs
loop
fnsave
or
sbb
mov
sbb
add
scas
jg
repnz
push
popl
xchg
mov
xchg
outsl
sub
jb
dec
xchg
outsl
adcl
cltd
cmp
xchg
mov
push
sub
sub
push
push
ss
mov
sub
sub
fs
mov
out
push
in
pushf
iret
pop
cmpsl
mov
repnz
iret
in
adc
dec
into
sbb
loope
loopne
test
lahf
and
pop
sub
outsl
pop
mov
pop
loop
mov
inc
dec
xchg
outsl
mov
fsubr
mov
xchg
outsl
sub
sub
xor
sub
dec
inc
jbe
push
das
out
mov
fdivrs
lods
xchg
outsl
sub
cmp
sub
stc
cmpsl
mov
sbb
stc
push
sub
cmp
outsl
push
sti
push
aaa
addr16
adc
jg
and
dec
xchg
xchg
xchg
and
pop
ficompl
in
xlat
aad
in
cwtl
mov
cmp
add
outsl
sub
cmp
xor
pop
jmp
in
xor
push
cs
sbb
sub
mov
push
adc
push
dec
in
cmp
loope
fisubl
sbb
stos
adc
in
cli
lods
pusha
pop
movsl
test
xor
outsl
pop
sub
cmp
pop
add
mov
inc
dec
xchg
outsl
mov
xchg
popf
std
sub
jecxz
xchg
or
xchg
outsl
sub
addr16
shr
xchg
mov
aas
sahf
push
and
outsl
mov
dec
xchg
sbb
or
push
cs
xchg
outsl
push
mov
add
jmp
pop
mov
dec
xchg
outsl
cmp
outsl
sub
mov
mov
cmc
inc
xchg
dec
inc
in
push
scas
and
jle
dec
xchg
adc
fprem1
outsb
gs
lret
mov
mov
scas
sbb
pop
outsb
mov
loopnew
adc
das
push
jmp
mov
mov
insb
jmp
inc
cmp
test
cwtl
pop
insl
lock
adc
xor
in
stos
dec
xchg
outsl
sub
push
dec
xchg
outsl
dec
inc
pushf
inc
scas
or
out
lock
out
dec
xchg
icebp
scas
adc
mov
pop
enter
jge
xchg
outsl
sub
add
xchg
out
scas
cwtl
mov
nopl
jo
imul
cmp
jbe
fldenv
add
xchg
outsl
sub
sub
sbb
sub
div
cmp
mov
push
xchg
jae
or
sub
mov
insl
lds
jbe
es
fistps
cmc
add
outsl
sub
jno
addb
roll
jg
xchg
sub
mov
xchg
outsl
sub
xchg
cli
lret
and
xchg
xor
jl
mov
sub
movsl
xor
xchg
outsl
sub
jmp
dec
xchg
outsl
sub
aaa
scas
sub
lret
lods
pop
popa
pop
adc
pop
ds
lds
push
fwait
inc
mov
adc
pop
repz
cmp
movl
jbe
mov
jnp
cmp
iret
adc
sub
mov
cmpb
inc
mov
outsl
enter
jp
and
sub
outsl
addb
dec
xchg
out
add
cmp
daa
xchg
scas
jo
rorl
mov
dec
outsl
inc
or
add
jno
pop
testl
pusha
pop
mov
adc
jo
pushf
adc
dec
xchg
outsl
adc
outsl
sub
int
jmp
dec
push
je
lds
dec
xchg
outsl
add
scas
xlat
stc
pop
dec
mov
out
nop
cmp
xchg
adcb
mov
push
int3
xor
outsl
sub
sub
xor
jbe
fwait
mov
push
ja
adc
ss
sub
pop
pop
dec
xchg
outsl
outsb
xorb
xor
mov
out
inc
adc
xchg
mov
xorl
dec
cmpsb
fisubl
xchg
outsl
sub
adc
scas
hlt
repnz
mov
dec
sbb
test
push
sahf
pop
out
repz
xor
push
sarl
inc
dec
xchg
outsl
aas
fldt
int
inc
and
push
fwait
add
lret
inc
in
fs
push
leave
push
cld
adc
xchg
scas
jl
pop
xchg
push
mov
mov
hlt
mov
cmp
sub
lcall
mov
sti
ja
adc
push
jo
xchg
jp
repnz
mov
cmpb
adc
outsl
adc
ret
jne
jo
jecxz
push
sbb
int
ja
lret
addl
dec
xchg
mov
xor
mov
sub
outsl
mov
shrl
push
inc
imul
xor
or
adc
mov
shlb
inc
pop
xchg
mov
push
inc
xor
jle
sub
out
leave
popa
das
cmpsl
or
dec
loope
int3
mov
push
sub
mov
int
add
out
mov
shlb
scas
sbb
cs
xchg
outsl
jmp
and
xor
sti
mov
pop
loopne
dec
xchg
in
les
outsl
sub
je
dec
xchg
push
ss
xchg
outsl
or
outsl
or
push
cmc
xor
dec
xor
in
xor
in
movsl
mov
dec
xchg
scas
jl
adc
push
sub
or
mov
jbe
mov
add
aaa
mov
imul
xchg
shrb
inc
movsl
fildll
and
ja
mov
inc
adc
xor
in
movsl
dec
xchg
outsl
sub
out
dec
xchg
repz
pusha
jns
lods
aas
and
add
repz
cld
push
sub
faddl
js
dec
xchg
push
xor
outsl
mov
aas
push
and
imul
mov
xor
mov
cmpsb
xchg
dec
inc
push
mov
sti
mov
inc
data16
movsb
aas
mov
hlt
xchg
mov
push
mov
insb
in
xor
jg
addr16
nop
adc
jmp
jmp
hlt
pop
xchg
scas
sbb
mov
in
mov
adc
dec
xchg
outsl
dec
dec
ja
out
addr16
movsl
adc
call
pop
repz
push
inc
dec
xchg
outsl
int
sub
pop
repz
pop
mov
stos
jnp
mov
outsl
sub
loope
add
ficompl
push
int
cmp
jle
pop
aad
jnp
fisubl
push
xchg
pop
mov
adc
ja
push
adc
and
jbe
mov
cmp
outsl
sub
cli
xchg
rcrl
xor
or
mov
xchg
stos
out
hlt
in
ret
sbb
orl
xor
aad
test
pop
adc
push
ljmp
movsl
adc
push
outsl
sbb
cmc
jno
sbb
xchg
out
add
imul
mov
cs
jns,pn
adc
dec
xchg
in
mov
dec
xchg
xchg
mov
dec
and
sub
scas
jmp
loope
mov
mov
cmp
sub
in
lods
dec
xchg
outsl
sub
xor
int
push
push
mov
xchg
outsl
sub
sti
adc
inc
lock
xchg
push
xor
outsl
popa
negl
jg
rol
inc
add
testl
jle
rcrl
xchg
mov
push
sbb
xchg
outsl
sub
sub
push
repz
loope
repz
enter
iret
clc
cmp
das
xor
inc
cmp
push
inc
cmp
aaa
scas
xchg
outsl
sub
in
or
dec
sahf
test
mov
dec
xchg
outsl
sub
lods
xor
jae
sub
inc
dec
mov
inc
xor
jp
mov
sub
dec
inc
mov
lods
jg
mov
mov
aad
loop
daa
clc
jne
or
xor
push
pop
dec
xchg
outsl
aas
jle
out
or
fiadds
bound
pop
sub
outsl
cmpsb
dec
sub
sub
test
aas
addr16
in
gs
repz
enter
int
jle
push
mov
bswap
enter
das
dec
in
cmpsb
dec
xchg
outsl
sub
xchg
mov
and
subl
xchg
push
inc
dec
xchg
outsl
data16
jle
mov
fdivrl
call
cmp
mov
jmp
mov
adcl
loope
rcll
mov
jge
xor
xchg
outsl
sub
out
and
das
in
mov
dec
xchg
loop
repnz
sbbl
es
scas
and
cltd
setbe
sahf
xchg
ja
mov
ds
sub
sub
sub
cld
aaa
adc
and
mov
or
jl
scas
xchg
outsl
sub
repnz
insl
nop
pushf
mov
pop
dec
xchg
outsl
imul
cmp
out
das
imul
sub
mov
sbb
jecxz
push
adc
xor
push
mov
mov
icebp
in
out
mov
aam
xchg
outsl
jge
leave
out
jg
jae
push
jecxz
xchg
cmp
mov
test
sub
pop
outsl
scas
lret
push
stos
mov
outsl
sub
mov
dec
mov
inc
sub
mov
cld
bound
sbb
fbld
ss
pop
inc
or
xchg
add
inc
mov
mov
pop
sbb
xchg
outsl
fs
insb
cmp
push
pop
lret
jmp
fsubs
pop
in
mov
xchg
outsl
sub
nop
outsl
sub
cmp
or
xchg
outsl
sub
and
pop
pop
xchg
mov
inc
xchg
mov
adc
mov
jno
ficoms
xchg
outsl
sub
xor
xchg
add
jmp
cmp
clc
out
lds
idivl
pop
pop
mov
fcmovne
fdivr
imul
adc
dec
inc
or
cmp
ret
popf
push
fdivrp
mov
or
jle
adc
xor
pop
jmp
cmp
cmp
outsl
sub
stos
adc
fdivrl
out
jno
cmp
jle
dec
jns
stos
repnz
push
ljmp
mov
insl
sub
pusha
mov
dec
leave
in
in
bound
dec
leave
push
ja
inc
cmp
xor
outsb
pop
add
inc
aas
xor
outsl
sub
out
inc
sub
xor
xchg
mov
and
adc
xchg
or
dec
dec
jno
test
in
xor
pop
jle
push
ds
xor
adc
sub
mov
dec
pop
outsb
sbb
and
inc
or
dec
xchg
in
cltd
jg
hlt
sbb
outsl
xor
jge
sub
lea
les
outsl
sub
jmp
dec
xchg
push
out
data16
jg
dec
xchg
dec
xchg
outsl
pop
jge
sti
inc
cli
inc
push
sub
jb
dec
xchg
outsl
dec
mov
mov
jecxz
adc
jno
xor
dec
dec
ds
lds
xchg
cld
scas
jg
repz
and
inc
pop
push
cld
mov
es
push
stos
mov
push
int
mov
scas
xchg
outsl
sub
xchg
outsb
sar
data16
jae
adc
mov
jge
sbb
sub
add
popf
or
inc
xchg
outsl
sub
push
jge
xor
data16
jg
stos
pop
push
sub
xchg
outsl
std
jnp
aam
sub
out
inc
dec
orl
fwait
inc
mov
lret
jno
mov
xor
outsl
or
dec
adc
dec
sahf
mov
sub
mov
adc
add
cmp
xchg
outsl
scas
push
fs
xor
xchg
mov
pop
add
adc
jno
adc
popa
cmp
xchg
jne
bound
aas
dec
xchg
outsl
or
add
gs
lcall
aad
call
xchg
outsl
sub
adc
hlt
sub
aaa
mov
outsl
sub
inc
js
gs
sub
outsl
imul
lds
aas
mov
cmpl
call
inc
aaa
dec
xchg
outsl
sub
cwtl
jl
ja
sub
dec
cmp
add
lods
jae
fs
dec
xchg
in
xchg
mov
cmp
inc
or
mov
dec
leave
jae
inc
adc
push
and
or
outsb
gs
ja
mov
pop
xchg
mov
sub
dec
leave
insb
adc
mov
xchg
outsb
mov
aam
and
outsb
xchg
and
xchg
insl
data16
sub
xor
addr16
xchg
outsl
scas
or
subl
xchg
xor
popf
inc
fwait
pop
jecxz
lds
decb
adc
sahf
outsl
arpl
xor
and
dec
jbe
sub
jge
push
jle
aad
popa
or
hlt
mov
mov
jle
adc
dec
xchg
outsl
xor
daa
outsl
sub
in
xor
push
mov
add
xor
cmc
cmpsl
adc
mov
leave
dec
sbb
test
xchg
outsl
lods
adc
mov
mov
inc
pslld
dec
xchg
in
scas
dec
xchg
outsl
sub
repnz
call
add
push
inc
dec
xchg
outsl
mov
adc
je
aas
out
repnz
pop
addr16
ret
pop
sbb
mov
mov
fwait
cmp
jnp
neg
pop
test
in
lds
cwtl
mov
outsl
sub
jno
dec
xchg
out
add
xchg
mov
clc
out
imulb
lock
outsl
cltd
push
jmp
or
cmpsb
xor
mov
lret
das
sbb
les
xchg
outsl
sub
push
dec
or
xor
xchg
mov
mov
orl
dec
xchg
in
mov
loope
push
sub
out
out
adc
fsubs
xchg
mov
cmp
in
test
inc
or
dec
xchg
pop
aam
xchg
outsl
and
mov
dec
andl
out
mov
jnp
scas
js
xchg
aaa
mov
outsl
sub
mov
fisubl
xchg
aaa
inc
xchg
outsl
sub
mov
ljmp
pop
xor
xchg
outsl
sub
push
stc
dec
mov
cltd
aaa
mov
push
jp
jp
sub
loope
sbb
mov
mov
pop
rclb
xor
push
out
stc
test
hlt
push
xor
outsl
mov
popa
sub
inc
movsb
or
in
mov
sub
dec
mov
mov
aas
out
pusha
repz
aas
pushf
adc
mov
mov
or
xor
in
lods
mov
adc
xlat
inc
cmp
aaa
mov
and
fcomps
ret
shl
add
xchg
mov
dec
insb
and
inc
dec
xchg
outsl
and
jbe
xchg
ret
fistps
pop
subb
aaa
mov
fs
sub
sub
and
push
or
lock
adc
adc
sub
test
in
negb
inc
ss
sbb
dec
xchg
repnz
std
ja
push
aam
xchg
outsl
cs
jle
test
jae
pop
lahf
pop
and
jnp
pop
int3
push
ja
leave
push
in
stos
adc
in
sbb
xchg
xchg
loope
jbe
outsb
xchg
pop
imul
dec
xchg
and
add
sahf
cmp
shrl
lods
js
repnz
pop
xor
jge
ds
in
add
lcall
out
loope
mov
adc
jbe
and
jnp
adc
pop
dec
jmp
imul
xchg
outsl
andl
cmp
mov
adc
inc
lock
dec
xchg
in
movsl
dec
xchg
outsl
sub
cs
mov
outsl
sub
imul
insb
call
or
shr
in
jg
sahf
movsb
mov
in
shrb
xchg
outsl
sub
in
fcomps
stos
sbb
push
outsl
sub
mov
jne
iret
mov
cmp
adc
outsb
jmp
jnp
out
mulb
xchg
fldcw
scas
dec
push
mov
sub
lahf
sbb
dec
inc
push
inc
xor
xchg
outsl
sub
xchg
mov
push
or
je
sub
outsl
jns
inc
rcl
rol
xor
xor
xchg
xchg
xchg
cmpsl
mov
jge
xchg
test
mov
bound
sub
outsl
push
pop
adc
cmp
adc
push
popa
imul
xchg
ljmp
sarl
mov
dec
das
push
mov
inc
xchg
outsl
sub
add
je
pop
mov
or
cmpl
pop
clc
push
pop
daa
pop
in
cwtl
inc
xchg
outsl
sub
fcmovnu
jp
mov
aam
xchg
outsl
sbb
fsubl
pop
gs
arpl
push
out
repz
xor
xchg
outsl
sub
sub
call
outsl
mov
or
pop
ss
inc
out
pop
aad
push
adc
mov
subl
es
cmpsl
inc
push
lock
imul
sbb
inc
pop
jno
dec
xchg
xchg
scas
or
outsl
cmp
in
mov
pop
mov
mov
pop
xor
xchg
mov
mov
mov
outsl
sub
mov
inc
inc
xchg
or
aas
ret
cmp
push
cmp
adc
sub
xchg
scas
add
jp
divb
ret
mov
jnp
mov
dec
xchg
outsl
mov
jmp
mov
xchg
mov
inc
xchg
outsl
sub
or
mov
sub
push
sub
outsl
loope
in
ret
jbe
sub
aam
mull
cmp
icebp
inc
dec
xchg
outsl
sahf
xor
adc
pop
lock
cwtl
rolb
out
cs
xchg
outsl
cmp
mov
enter
mov
jp
mov
add
dec
leave
pusha
mov
add
xchg
xor
jns
sub
xchg
scas
sub
or
adc
sbb
sub
out
push
push
outsl
into
dec
fiaddl
lcall
addr16
orb
xchg
jne
dec
xchg
mov
pop
enter
sbb
addr16
insl
sub
push
xor
xchg
mov
fistl
dec
xchg
outsl
nop
bound
sahf
scas
add
std
xor
xchg
jno
push
sbb
mov
add
sub
fs
pcmpgtb
mov
jno
push
pop
adc
test
pop
mov
xor
xchg
mov
dec
xchg
outsl
sub
xor
dec
sahf
sbb
mov
sub
les
add
xor
and
sbb
aaa
inc
xchg
outsl
sub
test
and
xor
xchg
outsl
sub
in
into
add
fwait
cmpl
mov
and
outsl
dec
jnp
push
jnp
mov
outsl
sub
lahf
fistpll
cld
cmpb
leave
xor
cmc
inc
push
repz
shlb
jnp
cmp
outsl
sub
sub
pusha
mov
sahf
dec
das
imul
movsl
lods
xchg
outsl
sub
mov
dec
sbb
repz
mov
adc
addr16
push
out
sbb
mov
adc
dec
leave
push
or
aas
aaa
and
mov
dec
fidivrl
enter
in
les
outsl
sub
adc
jg
subl
xchg
mov
mov
xchg
loopne
jb
data16
fcmovnbe
push
and
xor
outsl
test
in
lret
ja,pt
jne
movsl
sub
add
dec
xchg
outsl
aad
adc
paddd
pop
adc
pop
push
pop
je
in
mov
xchg
outsl
sub
in
cmpsb
dec
xchg
outsl
sub
xchg
mov
pop
sbbl
js
stc
xor
push
inc
fldenv
repnz
movsl
lahf
imul
xchg
call
shrb
xchg
cltd
jl
subl
xchg
mov
xchg
or
mov
push
dec
xor
pusha
mov
insl
mov
sub
fistps
inc
aam
pop
or
data16
mov
jmp
loopne
xchg
mov
jp
lods
loop
xchg
lahf
andl
push
xor
sub
ror
xchg
mov
mov
ficomps
mov
loop
scas
jo
push
push
pop
adc
outsl
sub
jbe
movsl
cmp
dec
inc
sbb
dec
inc
cmp
push
leave
in
add
into
xchg
sahf
icebp
jbe
adc
push
or
and
cmp
xchg
mov
iret
dec
dec
pusha
insb
jmp
dec
xchg
movsb
xchg
dec
in
adc
mov
test
notl
mov
lret
xor
xchg
outsl
sub
lret
xchg
xchg
scas
jp
imul
xchg
outsl
test
adc
call
xor
mov
pushf
adc
outsl
sub
mov
les
jmp
dec
xchg
outsl
sub
fs
insb
nop
xor
push
push
sub
outsl
lret
ja
iret
cmp
jnp
fisubrs
mov
inc
inc
push
adc
pop
add
imul
push
and
loop
xchg
outsl
sub
xchg
mov
bound
cmp
outsl
sub
mov
aas
fdiv
test
sti
mov
inc
hlt
test
xor
and
push
pushf
xor
rorb
jle
xor
sbb
in
cmc
sub
jmp
inc
xchg
outsl
sub
call
mov
les
push
popf
adc
lock
cmp
dec
xchg
adc
inc
arpl
mov
push
jle
adc
xchg
push
sbb
outsl
mov
test
hlt
scas
sub
jp
pop
mov
dec
xchg
outsl
dec
fidivl
jl
dec
xchg
push
xor
xchg
test
leave
pop
push
loopne
dec
ljmp
rclb
xor
xchg
lahf
lea
mov
or
xor
jp
into
pushl
sbb
fisttpl
push
push
pop
mov
divl
mov
mov
dec
xchg
outsl
enter
sub
enter
out
sbb
insb
aaa
dec
xchg
outsl
adc
outsl
sub
repnz
shrb
ret
addr16
pusha
repnz
add
out
aad
repnz
call
dec
xchg
sbb
push
iret
mov
jmp
xchg
insb
jle
dec
xchg
dec
dec
ja
push
sbb
xor
mov
hlt
hlt
shrb
sti
mov
adc
les
jge
jns
push
xchg
dec
shll
fs
mov
dec
xchg
outsl
mov
stos
mov
dec
xchg
outsl
xor
xchg
outsl
sub
out
dec
xchg
pop
dec
std
xchg
aas
mov
xchg
outsl
sub
lock
xor
xchg
mov
mov
and
dec
aas
cmp
pop
data16
insl
es
xchg
outsl
xor
jnp
cmp
mov
insl
inc
mov
aaa
mov
xorb
repz
icebp
pop
and
inc
mov
xor
in
dec
das
xchg
xor
outsl
mov
mov
test
adc
fwait
adc
inc
push
xchg
jge
mov
adc
imul
xchg
sbb
mov
pop
mov
fcmovnb
pop
xor
jo
sub
or
pusha
jl
aam
xchg
outsl
xchg
aad
push
adc
mov
icebp
repz
jmp
jno
in
lods
and
jle
dec
xchg
cmp
sbb
imul
repz
addb
mov
fildll
stos
mov
cmp
stc
adc
icebp
pop
stos
jle
mov
shl
aad
xchg
mov
lahf
fidivs
xchg
outsl
adc
jmp
xchg
lods
mov
xor
outsl
push
fwait
repnz
push
pop
lock
adc
cmc
inc
inc
adc
xor
xchg
mov
int
fwait
dec
mov
adc
pop
sar
pop
imul
dec
pop
andb
mov
cmpl
adc
cltd
sub
scas
loope
cmpsl
push
scas
mov
repnz
xlat
xchg
mov
out
imul
dec
xchg
mov
inc
jp
hlt
pop
inc
mov
jge
xchg
outsl
sub
push
cmp
incl
dec
xor
gs
push
cmp
jecxz
mov
adc
xor
out
testb
je
adc
scas
insb
subb
inc
cmpsl
xor
xor
dec
addb
mov
mov
jp
adc
cmc
pushw
xor
outsl
lcall
pop
std
ficompl
dec
jg
add
dec
xchg
outsl
into
out
inc
dec
or
aam
xor
fwait
xchg
mov
dec
repz
fldenv
insb
jmp
dec
xchg
jge
in
mov
stos
and
lea
sbb
bound
outsl
jbe
fs
or
sbb
jge
adc
in
cltd
add
sub
sub
or
enter
jns
mov
leave
ret
adc
mov
add
mov
aam
lret
mov
sub
filds
mov
mov
lock
aaa
mov
xchg
cli
sbb
adc
and
xor
push
xchg
pushf
outsb
pop
xchg
mov
imul
pop
adc
lods
mov
dec
xchg
outsl
xor
xchg
mov
mov
stos
cltd
hlt
xchg
mov
les
dec
aas
xor
or
aad
in
inc
mov
fwait
popa
sub
jl
inc
dec
imul
jmp
sbb
mov
dec
pop
inc
sbb
es
inc
jns
dec
dec
cmp
mov
xchg
outsl
sub
fstpl
scas
sub
ss
fs
mov
lret
fisubrs
pop
mov
out
loop
enter
dec
jbe
sub
or
xchg
mov
imul
xchg
push
lock
insl
jne
adc
leave
dec
mov
add
sub
adc
mov
das
loopne
hlt
adc
outsl
sub
adc
fidivs
mov
and
push
sub
fisttps
dec
sarb
dec
xchg
mov
cli
fsubrs
test
sub
fbld
fdivrs
mov
ret
pusha
mov
fldenv
cmp
mov
ret
ret
mov
jg
ds
out
fsub
and
cltd
push
mov
mov
dec
xor
sbb
xor
mov
aad
into
movl
je
xor
rcrb
ljmp
loopne
mov
mov
mov
mov
fsubrs
cmp
xchg
xchg
add
sbb
jl
push
repnz
popl
outsb
loope
mov
cmp
or
push
mov
push
shlb
push
dec
mov
inc
into
idivl
sahf
outsl
push
push
outsl
mov
rolb
nop
inc
repz
mov
icebp
lods
test
dec
jg
mov
ds
ja
jmp
cld
push
cmp
inc
jle
outsl
popa
mov
leave
mov
mov
dec
faddl
sub
mov
cmpsl
sti
aam
xchg
xchg
leave
mov
mov
imul
iret
addr16
dec
xchg
mov
repz
pop
lahf
cmp
lret
push
mov
adc
shlb
cmp
adc
lcall
sub
cmp
int
enter
push
lds
cltd
and
add
or
adc
in
sar
add
pop
mov
xchg
dec
mov
popa
mov
jmp
jns
sar
lcall
leave
xor
mov
ret
jle
ds
adc
pop
jbe
repz
ret
mov
mov
scas
add
xor
mov
mov
fbstp
add
xchg
sub
inc
push
push
mov
mov
xor
test
mov
mov
mov
in
daa
sarb
xor
and
leave
mov
shrb
rcl
out
and
pop
daa
jg
ret
pop
ret
mov
mov
ja
aaa
and
aad
xchg
mov
ret
mov
shlb
xchg
pop
push
jb
aas
cld
leave
mov
cmpsb
or
mov
mov
fists
imul
sarl
mov
out
enter
adc
shrl
leave
mov
xchg
outsl
aad
xor
cmp
rorl
lea
daa
jne
ret
mov
ret
mov
and
cmp
out
mulb
es
mov
xor
es
test
jle
inc
xor
sbbl
mov
jmp
mov
iret
addl
xor
add
jo
and
inc
in
inc
cltd
jmp
xchg
mov
xchg
inc
jno
adc
adc
lcall
rcrb
and
mov
mov
sahf
daa
es
mov
ret
xchg
inc
test
js,pt
mov
xlat
push
stos
pop
iret
pop
pop
int3
iret
and
mov
mov
mov
nop
inc
dec
pop
test
xor
mov
outsl
jl
subl
add
adc
lock
lret
add
subb
add
enter
dec
xor
mov
xchg
pop
aas
daa
adcb
add
lds
and
add
inc
mov
iret
add
adc
add
xor
lds
int
inc
stos
mov
lcall
mov
rclb
inc
and
jns
inc
push
orl
outsl
stos
jmp
mov
aad
pop
sub
mov
jmp
or
xlat
xor
xchg
push
adc
mov
cmp
lret
mov
test
jns
stos
mov
das
shll
push
inc
dec
push
int
imul
enter
xchg
iret
sbbl
sub
dec
std
mov
or
fnstsw
es
cmp
xchg
lock
mov
mov
sbb
push
cmpsb
inc
mov
hlt
cli
push
repz
in
or
jmp
int
add
inc
sbb
lods
ret
xchg
sbbb
icebp
scas
dec
xor
enter
inc
jnp
nop
inc
hlt
push
das
and
add
jne
pushf
push
lcall
je
imull
test
or
cmpl
add
mov
pop
pop
adc
dec
mov
adc
xorl
sahf
pushf
push
jb
and
fwait
mov
xchg
inc
jmp
cmp
mov
mov
jnp
pop
dec
lds
mov
dec
jl
in
push
aam
sahf
in
loop
inc
cmc
mov
dec
jo
out
jmp
xchg
and
mov
and
dec
test
enter
push
lret
add
lcall
in
mov
test
ret
sub
fs
inc
loop
adc
pop
xor
xor
mov
out
jmp
dec
daa
xchg
and
mov
jmp
ret
mov
mov
pop
and
cmc
insl
stos
jb,pt
jmp
mov
xchg
mov
and
dec
sarb
in
mov
in
movsl
xlat
std
pop
mov
lret
mov
pop
mov
inc
icebp
arpl
cld
cmpsb
std
ret
lret
mov
and
clc
jecxz
test
add
aas
mov
iret
cmp
inc
mov
mov
xor
adc
sahf
ret
mov
mov
jecxz
pop
dec
dec
repz
inc
into
lret
mov
mov
jmp
dec
ja
mov
cmp
outsl
xor
insl
es
ret
pop
mov
mov
js
jmp
lcall
jae
pop
dec
stos
mov
mov
lahf
jmp
shll
lret
adc
add
push
test
sbb
idiv
adc
xchg
lcall
push
repz
jb
stos
mov
leave
jb
icebp
repnz
cmp
inc
jnp
cwtl
shlb
orl
push
shlb
push
push
pop
rcll
mov
sub
pop
sub
int
cld
dec
test
das
push
mov
idivl
mov
mov
mov
js
cmp
aam
xchg
out
aaa
xor
cmp
outsl
sahf
inc
pop
fstps
add
mov
addb
and
mov
mov
sub
lods
jo
xorl
subb
fdivrl
icebp
adc
mov
mov
or
jne
mov
outsb
or
add
ret
pop
mov
stos
mov
hlt
push
jns
xor
adc
xchg
mov
xor
es
mov
iret
mov
mov
pop
mov
push
lods
xor
push
xor
inc
inc
out
cmp
and
daa
sarb
lahf
stos
sub
inc
loope
das
les
add
jb
mov
mov
mov
and
mov
mov
ret
cmp
xchg
fs
lcall
dec
cltd
or
test
cmp
or
xor
mov
mov
xchg
inc
jg
push
and
lret
mov
loop
jbe
loop
jle
pushf
daa
xchg
stos
int3
shll
sahf
or
and
ret
testb
mov
mov
cld
jns
ficoms
mov
imull
xchg
jns
pop
sbb
daa
xor
mov
mov
ds
xlat
mov
mov
sub
addr16
jo
and
iret
adcl
mov
pop
addl
xor
push
daa
test
inc
out
cmp
ret
ds
outsl
xchg
jne
xchg
fwait
add
mov
aad
xorb
add
inc
nop
ror
mov
mov
xchg
jo
pop
pop
mov
daa
add
pop
jle
outsb
pop
outsl
push
stos
push
fimuls
inc
jnp
enter
pop
mov
mov
lahf
gs
lret
adc
jno
adc
leave
stos
ret
sbb
shl
mov
out
bound
cld
xor
add
inc
sub
mov
fs
fsubrp
cmp
mov
mov
and
mov
pop
cmp
sbb
clc
addr16
icebp
push
sub
mov
mov
ret
mov
lods
mov
push
ja
push
add
and
jb
cmp
cwtl
add
call
push
jnp
add
mov
mov
mov
mov
add
int
add
mov
lret
mov
aad
lods
mov
push
cwtl
sbbl
jp
inc
or
scas
sahf
and
aaa
nop
inc
jl
mov
xchg
cwtl
pop
jmp
xchg
sub
cmpsl
xor
add
arpl
arpl
adc
sub
testl
addr16
cltd
jae
fprem
and
cmp
cmpl
push
mov
es
aad
xor
sbb
add
pop
js
push
jmp
jbe
ljmp
lods
mov
mov
sbbb
mov
xor
and
aad
in
js
pop
mov
adc
cmp
fwait
sub
or
push
or
pop
mov
mov
push
pop
mov
mov
rcll
hlt
repz
push
enter
xchg
jecxz
xor
jbe
popf
and
je
add
lea
idivl
mov
mov
roll
fdivl
cmp
test
insl
out
push
in
mov
sbb
loope
xor
iret
fs
cmp
mov
mov
pop
outsl
and
ds
mov
mov
push
mov
hlt
mov
cmovge
insl
mov
mov
and
iret
outsb
stos
xor
sbb
ret
sub
adcl
mov
mov
and
mov
mov
lods
lcall
mov
mov
mov
sti
loopne
icebp
popa
fwait
shrl
or
sbbl
add
mov
pop
mov
sbb
aad
cmp
mov
fwait
pop
leave
mov
stc
dec
mov
pop
xchg
pop
addr16
jmp
scas
shr
xor
xchg
mov
push
mov
pop
outsb
mov
pop
fsubr
push
add
cmpsl
test
sbb
cwtl
xor
out
cmc
jmp
mov
mov
ds
pop
xchg
jge
fcomps
cmpsb
pop
cmp
ja
insb
stc
das
nop
cmp
add
sub
jmp
test
pop
out
lret
push
mov
insb
lcall
test
leave
mov
arpl
repz
pop
sarl
inc
mov
popf
sub
inc
loop
mov
mov
cmp
mov
dec
repnz
pop
jae
dec
out
adc
add
les
pop
or
aad
pop
int
add
stc
or
in
mov
or
mov
dec
mov
mov
inc
jl
xor
mov
add
mov
dec
pop
push
mov
outsl
adc
mov
test
add
divl
ss
lret
jne
jmp
shlb
mov
nop
xor
ret
add
insl
in
aas
scas
add
pop
xchg
pop
loope
xor
mov
xchg
or
mov
fdivrl
push
or
mov
out
or
xor
repz
pop
mov
add
mov
fiaddl
idivb
or
inc
jmp
stos
ret
mov
mov
es
push
in
xor
pop
adc
jmp
push
cmp
or
test
fdivs
or
xchg
mov
ret
push
pop
mov
mov
outsb
pop
and
ret
jnp
mov
mov
add
add
or
and
or
incl
mov
cmpsl
out
cs
jo
inc
adc
mov
enter
mov
scas
add
pusha
inc
pop
mov
pop
rcrb
pop
es
or
mov
mov
fisttpll
popf
mov
jnp
nop
inc
call
stos
lock
and
imul
sub
shll
mov
clc
popl
and
xchg
push
stos
add
lahf
mov
mov
mov
std
notl
cmp
sub
outsl
lcall
ret
rorl
andl
mov
xchg
inc
ja
jecxz
repz
sahf
pushf
mov
ret
movsb
xor
mov
mov
icebp
pop
adcl
mov
femms
sahf
jmp
xchg
addr16
add
inc
aas
jo
dec
dec
or
xor
lods
fmul
pop
mov
ret
js
or
xchg
or
xor
lds
aas
or
push
xchg
lcall
movsl
push
pop
ljmp
add
xchg
mov
ret
and
xlat
mov
mov
ret
mov
and
add
sub
iret
stc
dec
shlb
cmp
mov
mov
adc
add
lret
lahf
and
or
cmpl
xlat
addl
ret
iret
fnstcw
jmp
int3
mov
mov
adc
andb
mov
mov
sub
xor
mov
sub
add
mov
ret
mov
xor
add
sub
and
rclb
jmp
test
and
add
leave
movsb
ret
pop
lahf
das
mov
ficomps
ja
push
push
and
jmp
int
add
mov
in
or
xchg
mov
ret
mov
sub
inc
int
fldenv
nop
mov
and
inc
call
cmpl
adc
ret
mov
mov
xor
cmp
mov
sti
inc
ljmp
decb
cmp
lods
ret
pusha
sub
rorb
inc
stos
sbb
jecxz
dec
divps
cmp
inc
scas
add
jle
xchg
sahf
inc
jg
std
jge
movsl
ss
inc
lcall
adc
add
push
sti
mov
xchg
inc
jmp
jle
cltd
push
dec
jge
jmp
test
add
ret
inc
lret
push
or
sub
xchg
cmc
and
ss
daa
addb
and
and
test
lcall
lds
add
in
xchg
and
dec
sarb
nop
sub
in
sbb
dec
icebp
insb
cmpsl
pop
mov
mov
cmp
push
jmp
ret
mov
mov
lods
xchg
jmp
cltd
shll
jbe
and
shlb
or
mov
mov
add
clc
in
mov
fldt
icebp
jge
adc
mov
or
push
ss
mov
sbbl
scas
mov
jbe
xchg
scas
mov
popa
xchg
push
incb
sub
add
mov
test
mov
outsl
lods
outsl
mov
lret
mov
scas
add
clc
repnz
inc
jg
sub
pop
inc
inc
scas
insl
add
in
sbb
and
and
or
ss
xlat
in
push
mov
sti
mov
mov
mov
jb
sub
repnz
adc
cli
sbb
cmp
mov
mov
pop
add
mov
movsl
xchg
xchg
cmpsb
ret
adc
mov
mov
mov
mov
adc
int3
sbb
and
xchg
mov
movsl
cmp
bound
mov
roll
mov
pop
sbb
inc
cmp
ret
cmp
mov
mov
test
mov
ret
ficoms
ds
xor
in
call
mov
aam
fldcw
inc
pop
shlb
sbb
cmpl
gs
xor
mov
popa
jo
enter
orb
add
fldt
movsb
gs
cmpsl
jnp
cwtl
xchg
and
stc
jmp
mov
scas
add
cmp
mov
mov
cmp
sbb
rcr
cmpsb
cmpb
cmp
mov
mov
nop
jne
inc
xchg
inc
jmp
mov
mov
mov
ret
int
xor
call
mov
lds
mov
ljmp
mov
psrlw
mov
inc
mov
imul
rcrl
lcall
outsb
loop
sbb
fisttps
cmpsb
sarl
mov
scas
add
fs
js
mov
cs
sub
mov
imul
mov
ret
mov
mov
daa
push
inc
fstps
mov
inc
dec
dec
xchg
pop
repz
stos
xor
imul
cmpsl
movsb
xchg
and
jmp
lea
and
stos
es
ret
mov
ret
jl
push
and
test
add
notb
ficomps
adc
sub
mov
shll
adc
leave
mov
add
push
pushf
lods
pop
lock
sub
lahf
lcall
aas
mov
roll
call
test
pushf
inc
push
aaa
or
add
xchg
inc
push
call
mov
and
jbe
jmp
inc
pop
lock
sahf
xchg
inc
adcb
int
add
and
lret
mov
rcll
push
dec
stc
push
fs
call
icebp
iret
test
sub
add
cmpsb
cmp
add
jnp
jmp
andb
movsl
ret
sahf
scas
mov
and
sub
clc
and
sbb
mov
mov
pop
lods
rcrb
push
mov
xchg
push
jl
sahf
inc
hlt
push
test
pop
and
or
and
sbbl
inc
jno
and
and
cmpl
leave
mov
jecxz
dec
std
loop
sbb
cmc
pop
andl
dec
nop
movsl
mov
xor
and
push
nop
je
movsb
popf
inc
mov
xor
mov
mov
outsl
aad
mov
ret
sahf
or
mov
push
shll
std
xchg
in
fucomip
stos
lock
sbb
ja
inc
push
xlat
ss
sbb
nop
inc
jmp
mov
and
mov
pop
negl
stos
dec
aad
mov
arpl
xchg
and
cmp
jge
test
lods
mov
and
cmp
addr16
sbb
sub
jne
shlb
push
adc
cmp
and
mov
pop
sbb
popf
out
push
or
call
sarl
mov
cmpsb
daa
cmp
repz
cmp
xor
cmpsl
scas
notb
xor
lock
int
adc
mov
movsl
lods
mov
and
cmp
stc
int
sbb
insl
push
mov
cmp
sbb
jne
ficoml
cmp
jmp
mov
and
xor
sbb
cmp
mov
cmp
mov
sarl
mov
xchg
cwtl
sarl
push
sbb
fldlg2
cltd
sarl
repz
ficomps
xchg
dec
mov
rol
sbb
mov
add
and
cmp
cli
mov
ja
ja
pusha
rcl
and
out
negb
ret
and
adc
jmp
cmp
xchg
call
pusha
int
mov
xorl
xor
cmp
movsb
repnz
xor
push
inc
icebp
loopne
pop
xor
and
cmp
sbb
orb
or
nop
lock
sbb
push
mov
cmp
out
call
jmp
sub
pusha
sbb
cmp
nop
jbe
or
mov
mov
sar
adc
test
mov
sahf
shr
cmp
mov
je
mov
push
imul
cmp
icebp
dec
sub
add
cltd
inc
aaa
mov
roll
mov
mov
shll
divb
xor
inc
jmp
or
sbb
jbe
xchg
dec
sbb
cmp
add
outsl
xchg
or
jge
sarl
push
mov
mov
fdivr
rorl
sahf
cld
adc
or
sbb
adc
jmp
loope
mov
mov
mov
aad
das
fistps
cmpb
lahf
mov
inc
jmp
cmp
lods
je
gs
cmp
xchg
cmpsb
lods
inc
leave
cmp
out
mov
aaa
rclb
fidivs
adc
sbb
aas
aaa
mov
shll
clc
adc
mov
lods
lods
ljmp
add
fisttpl
push
xor
cmp
mov
xor
add
pop
inc
mov
in
loope
mov
aas
cs
out
jo
and
push
sbb
aaa
sbb
cmp
push
cltd
scas
pop
jle
dec
test
sbb
inc
nop
loope
xor
pop
mov
lock
push
aas
arpl
or
sarl
cmp
data16
mov
and
cmp
adc
cmp
insb
test
push
js
or
sahf
pop
cltd
cli
idivl
outsl
or
shlb
cmp
loop
mov
outsl
xor
out
pushf
sarl
popf
gs
cmp
daa
mov
sarl
add
shl
scas
dec
data16
enter
std
clc
xchg
jl
pop
cvttps2pi
flds
inc
int3
cmp
scas
mov
add
mov
fidivl
mov
mov
shl
adc
pop
sbb
fisttps
mov
lods
xor
sarl
cvttps2pi
mov
rorl
ljmp
std
sbb
cmp
mov
cmp
push
arpl
cmp
lahf
loop
add
lret
in
fisttpll
outsl
pop
ja
out
jl
cmc
xor
pminub
jg
xchg
cltd
in
jecxz
inc
negb
sub
or
popa
mov
mov
bound
push
adc
cmp
in
fcmovnu
fistpll
add
fs
xor
sarl
cmovb
cmc
and
cmp
lea
loopne
movsl
mov
inc
push
ss
and
push
or
fsubrs
dec
pmuludq
jb
sbb
adc
or
roll
cld
jne
mov
mov
sarl
out
xchg
testb
popa
and
dec
mov
sbb
jnp
sbb
out
jmp
and
arpl
and
cmp
push
xchg
shr
inc
movsl
imul
and
cmp
add
mov
mov
cmp
cltd
sbb
and
cmp
jo
fstpt
dec
lcall
bound
sub
add
mov
shll
sub
xchg
cmp
cld
out
add
xchg
mov
mov
sarl
dec
popf
fwait
aas
pusha
xchg
inc
pmuludq
jecxz
arpl
testb
stos
hlt
and
cmp
or
or
test
insb
test
fisttpl
fs
negb
mov
mov
and
cmp
mov
popa
inc
pop
lahf
dec
imul
xchg
mov
or
add
pop
adc
mov
leave
and
mov
cmp
xchg
xor
jecxz
mov
movsl
mov
or
mov
pop
jno
jno
in
scas
push
lock
test
mov
jo
pusha
test
xchg
jp
xchg
nop
inc
test
hlt
stos
inc
or
mov
add
jp
or
mov
nop
stos
shlb
adc
ret
jb
repz
lock
pop
test
or
int
aad
push
das
pop
xorb
and
inc
mov
xchg
inc
and
fldt
movsl
dec
pop
inc
and
cwtl
add
add
arpl
push
dec
xchg
mov
outsb
fs
aam
das
and
je
lret
or
faddl
fbld
and
vmwrite
xor
or
mov
lar
add
jle
gs
js
inc
ret
ljmp
test
out
jae
outsl
inc
adc
out
pop
cmp
push
jno
inc
pop
add
ret
jp
or
mov
test
lds
stos
fcomps
mov
jmp
rorl
add
ret
cltd
ret
scas
adc
ljmp
out
sub
ror
stos
ret
xchg
and
repnz
or
lret
jmp
push
or
mov
add
stos
mov
sbb
pop
ret
cmpsb
adc
or
test
sbb
add
test
addb
ret
iret
add
fisttps
jmp
bound
sub
mov
mov
or
xchg
xchg
scas
and
mov
or
pop
xor
dec
popw
ret
sub
xchg
lahf
test
mov
sub
cmovnp
in
aaa
add
or
jp
or
mov
adc
cmp
imul
scas
ror
ret
jg
and
ret
loop
xchg
dec
pop
mov
addb
ret
leave
mov
and
jle
mov
dec
push
test
sub
stos
and
or
mov
mov
jb
sub
push
dec
dec
data16
and
aam
and
mov
add
ret
sbb
dec
pop
xor
jns
mov
or
test
xor
and
mov
or
das
mov
sub
cmp
leave
lods
ret
adc
jecxz
fdivp
repnz
or
mov
or
cmp
js
mov
or
jp
or
mov
jecxz
sub
jge,pt
mov
push
and
or
mov
pop
adc
xor
cmp
lcall
mov
or
test
out
out
js
mov
or
cmp
and
iret
mov
or
pop
test
imul
pusha
stos
test
ss
pop
push
stos
leave
mov
bound
add
inc
ret
jno
inc
xor
sub
mov
sub
cltd
ret
int
stc
cld
inc
in
or
stos
xorl
stc
mov
or
xchg
ret
dec
imul
and
add
fstpt
pop
les
push
shrb
adc
aad
outsb
jecxz
and
jp
inc
popf
leave
hlt
fsubp
iret
jge
and
js
stos
xor
xchg
stos
fdivl
xchg
pop
and
mov
or
into
fwait
xor
orl
sbb
or
jb
cmp
hlt
adc
jmp
sbbl
lret
stos
scas
jmp
rorb
mov
mov
mov
or
nop
add
add
mov
or
xchg
fucomp
pop
and
xchg
mov
ret
sub
stos
leave
mov
mov
test
xchg
dec
call
mov
repnz
and
add
inc
inc
and
xor
inc
and
addr16
and
test
xchg
and
xchg
lds
sarl
add
cs
scas
aad
lret
or
sbb
ss
repz
add
vmwrite
or
jle
cmpsb
xchg
xchg
sub
and
leave
shll
sti
loopne
lods
cmp
sub
cmp
xchg
scas
xor
lcall
xchg
add
xor
and
lock
pop
cmp
and
xchg
and
stos
mov
or
push
hlt
iret
mov
inc
and
mov
sbbl
and
mov
in
sahf
jno
and
fs
mov
mov
nop
std
jmp
or
mov
cmp
test
and
loope
into
adc
mov
mov
jnp
push
sbb
repz
sub
les
sub
adc
leave
xchg
ret
mov
jl
sub
and
mov
outsb
jp
or
mov
sbb
pop
jns
repz
cmp
outsl
mov
cmp
jle
sbb
imul
aam
jg
ret
jp
or
mov
push
orl
aad
push
int3
test
push
aaa
sbb
ror
movsl
add
jp
or
mov
xorb
repz
xchg
out
iret
jnp
shrd
cmp
and
lods
xor
lahf
ja
mov
cli
pop
lods
add
cltd
sub
jge
or
dec
and
in
push
repnz
lods
push
xor
js
out
push
pop
lcall
enter
pop
cmp
gs
sub
aaa
mov
push
in
and
xchg
push
pop
xor
aad
adc
jae
cld
add
mov
test
mov
fisubs
sbb
call
mov
push
pop
cmp
outsb
outsb
push
xchg
inc
popf
adc
mov
andb
cmp
xor
adc
xchg
shl
xchg
nop
jl
xchg
push
ja
sbb
pop
cmp
ficoml
xlat
mov
std
sub
push
mulb
push
rorl
fcoms
xchg
imul
filds
push
pop
fwait
ret
adc
cmp
push
xchg
test
std
jo
pop
testb
fsubs
ficoml
pop
inc
xchg
repnz
lea
fninit
std
xor
mov
push
add
pusha
add
lds
mov
outsl
outsl
jg
adc
cltd
pushf
jmp
adc
idiv
aad
call
sbb
les
cwtl
dec
adc
pusha
cli
adc
fisubrl
xchg
dec
adc
push
dec
popf
int3
adc
das
mov
push
dec
adc
outsl
outsb
nop
mov
pusha
add
ret
cltd
xor
fistps
jno
push
nop
cs
and
jecxz
jp
sti
mov
jo
outsl
loope
lds
subl
mov
andl
hlt
mov
xchg
imul
mov
ret
adc
add
pusha
cmpl
fisubrs
dec
adc
movsb
dec
pop
das
mov
inc
xor
xchg
dec
enter
inc
dec
pop
cltd
dec
adc
dec
in
jle
ret
insl
data16
mov
in
cltd
dec
adc
add
mov
mov
pusha
add
pusha
mov
imul
xchg
or
hlt
lahf
push
bsf
cmp
pop
cld
test
popa
adc
dec
or
sbb
inc
push
mov
xor
icebp
adc
dec
aas
mov
and
mov
push
push
dec
mov
dec
adc
cmpl
adc
pusha
add
aas
mov
into
lods
xchg
jb
pusha
add
cmpl
cmp
lock
dec
cmpb
mov
pop
dec
adc
pop
fdivs
jcxz
jmp
test
and
pusha
add
lcall
jno
testb
loopne
fldl
cwtl
dec
adc
push
sbbl
mov
ds
shll
jo
jp
adc
jg
dec
xchg
pop
add
sbbb
jbe
lahf
and
jno
mov
lahf
ret
pushf
mov
inc
cmp
sar
sti
jns
push
sbb
das
je
dec
xchg
add
mov
dec
sahf
imul
outsl
jmp
enter
jmp
jmp
arpl
dec
fsubrs
dec
std
outsl
add
adc
inc
cmp
pop
dec
dec
cwtl
xchg
daa
enter
adc
or
dec
adc
imul
cmpsb
xlat
push
mov
adc
aad
push
jp
andl
mov
mov
dec
adc
sbb
addb
and
adc
push
add
xor
push
pop
daa
into
aad
jp
movsb
jnp
iret
cmp
mov
dec
imul
jo
lahf
je
pusha
add
in
stc
push
sub
add
addb
sub
push
cltd
les
into
aas
sub
jge
add
lret
or
xchg
push
outsb
mov
outsb
outsb
cwtl
mov
andb
testb
adc
mov
mov
adc
out
push
cmp
push
xor
fisubs
dec
adc
push
sbb
lret
ds
mov
and
iret
in
ret
pusha
adc
dec
inc
jae
clc
test
mov
imul
andb
xchg
add
adc
jp
dec
adc
add
test
pmuludq
dec
adc
jecxz
into
xlat
add
dec
adc
xchg
out
xlat
or
mov
inc
xchg
inc
adc
outsb
cmp
or
dec
and
out
adc
data16
add
mov
fsubrs
adcl
stos
pop
cmpl
js
add
flds
cmpsb
dec
fists
jae
in
xor
pop
inc
bound
in
xchg
pusha
push
pusha
add
cld
mov
lods
outsl
in
les
daa
ficomps
or
dec
adc
lret
les
dec
cwtl
cwtl
dec
pusha
add
dec
xor
mov
test
jae
xchg
pop
sub
add
add
push
jae
add
push
mov
mov
dec
xor
test
or
add
data16
add
xchg
and
xor
imul
and
es
jae
call
adc
lret
inc
in
dec
or
dec
xchg
addr16
or
dec
loopew
in
mov
outsb
mov
cwtl
jg
inc
adc
out
add
push
imul
pavgw
dec
adc
loop
cmp
call
push
enter
fs
add
push
mov
mov
subl
xchg
nop
outsl
or
mov
call
mov
jmp
jne
addb
arpl
dec
jbe
mov
adc
adc
imul
arpl
popa
adc
dec
cmpsb
inc
std
clc
adc
adc
dec
ja
add
out
dec
adc
pusha
add
stos
push
and
pushf
jl
adc
add
xchg
jo
mov
pop
lods
pusha
add
add
mov
mov
cmp
pop
mov
outsb
loope
cmp
imul
pusha
add
stos
xchg
xchg
addr16
dec
adc
arpl
dec
inc
sbb
repz
add
outsb
add
pop
aam
lock
jmp
cli
xor
inc
imul
sub
adc
aad
aaa
adc
mov
nop
out
and
iret
xor
lock
sti
xchg
xorb
jecxz
adc
push
inc
adc
sbb
mov
in
jmp
cltd
inc
adc
mov
pusha
pusha
add
dec
sahf
push
imul
mov
mov
iret
pop
sub
cmp
arpl
dec
adc
xor
dec
sti
insl
add
xchg
gs
and
aam
or
daa
cmpb
stos
popa
dec
loopne
cltd
jae
pusha
add
xlat
dec
cwtl
cmp
imul
adc
aad
mov
mov
js
cmp
push
dec
mov
dec
adc
pusha
add
jo
into
rolb
add
icebp
iret
or
jecxz
hlt
jne
adc
mov
jo
lods
pushf
cld
or
pushf
jmp
daa
enter
dec
xchg
add
test
push
imul
dec
adc
daa
in
or
add
ret
mov
jle
sbb
mov
push
lds
imul
or
and
pusha
add
pop
out
jae
jne
mov
mov
cltd
dec
adc
add
add
movsl
stc
jbe
in
scas
cmp
jecxz
popa
add
stc
lock
pop
push
sbb
subl
pop
xchg
mov
outsb
jp
adc
add
pusha
add
jne
in
or
inc
int
sub
and
pusha
add
dec
jecxz
test
push
dec
adc
xchg
arpl
cltd
pop
push
stc
sbb
jecxz
dec
dec
mov
dec
adc
movsl
pop
pusha
js
add
and
xor
sahf
insl
leave
and
stos
fcomi
xchg
jge
jae
pusha
add
jb
enter
jb
outsb
jbe
jne
cwtl
pop
loop
push
dec
popa
add
or
dec
adc
cmp
xor
add
jne
xorb
sbb
xchg
test
into
ret
ja
pusha
add
lret
adc
lret
push
arpl
dec
xchg
xchg
mov
add
dec
dec
add
xchg
enter
outsb
das
repz
add
pusha
add
insb
stos
mov
enter
into
adc
dec
adc
jo
ficomps
inc
dec
jl
pop
dec
adc
dec
insl
push
fsubl
dec
adc
stos
cs
mov
jo
js
pusha
add
cli
jmp
loop
jmp
sbb
mov
daa
enter
dec
cwtl
xchg
push
dec
xchg
add
imul
pusha
add
cld
xchg
cltd
inc
adc
jge
std
and
cmpsb
ja
loope
pushf
mov
andb
mov
sbbb
add
and
mov
sbb
push
add
jne
int3
and
aaa
fsubr
mov
fstps
jmp
int
dec
adc
pop
fsubrp
sbb
adc
rcrl
arpl
dec
xchg
xchg
fisubs
fsubrl
dec
adc
xchg
and
jne
pop
jbe
pushf
jp
sub
dec
adc
arpl
dec
jbe
inc
data16
xchg
mov
dec
adc
pusha
add
enter
or
dec
loopew
xchg
xchg
dec
adc
cld
jge
dec
jp
mov
jl
imul
out
mov
mov
and
pusha
add
rcr
dec
push
pop
cmp
adc
nopl
mov
sub
lahf
ficoml
fmul
ds
and
sti
dec
adc
lret
out
push
xor
adc
lret
orl
mov
push
dec
adc
ret
cmc
or
dec
adc
xchg
ja
inc
iret
orl
sbb
lods
mov
rcrb
xor
enter
loope
or
dec
adc
cwtl
notl
pop
sub
jmp
test
pusha
xchg
cmpsb
mov
sbb
and
arpl
dec
adc
add
inc
jbe
divl
jne
outsb
insl
sub
mov
cmp
lcall
imul
movsb
lods
stos
dec
dec
xchg
jp
dec
adc
pusha
add
xor
inc
daa
cmp
enter
adc
cmpsl
push
enter
cmp
sbb
fcmovb
mov
daa
fnsetpm(287
ss
pusha
add
dec
push
inc
sub
loope
xor
and
cltd
push
popa
jl
add
cmp
jle
xor
jns
jecxz
fidivs
dec
adc
mov
or
xchg
mov
fisubrs
dec
adc
push
imul
xchg
add
popa
add
loopne
je
test
cmpsb
faddp
cmp
adc
add
pusha
mov
outsb
mov
xchg
pop
daa
fistpll
pusha
add
add
sarb
inc
and
or
dec
sbb
ret
popl
cmpb
arpl
ds
lret
decl
stos
add
scas
testl
push
orb
outsl
xorl
jns
adc
add
dec
adc
and
ljmp
dec
adc
das
aaa
inc
cmp
cli
dec
adc
test
in
in
sub
sbb
iret
or
dec
loopew
into
cmp
decb
pusha
out
add
out
mov
stos
mov
xchg
popa
js
add
jp
leave
and
stos
xlat
inc
mov
js
pop
lret
frstor
dec
adc
sbb
mov
dec
adc
in
mov
xchg
inc
adc
inc
mov
push
inc
int
mov
loop
jmp
ja
lods
jmp
inc
stc
push
push
jbe
test
pusha
dec
aad
push
xchg
mov
fs
loope
jp
inc
inc
adc
add
mov
arpl
fidivs
btr
into
ret
push
add
xchg
adc
mov
mov
mov
into
jns
dec
mov
mov
add
pop
addb
pusha
outsl
xchg
adc
push
aad
jp
push
loope
sub
xor
xchg
dec
adc
mov
subb
mov
adc
add
pusha
fcmovu
push
jnp
sub
pusha
fs
mov
mov
mov
jmp
cltd
dec
adc
mov
ja
lret
mov
dec
xor
jp
xchg
add
adc
ja
dec
xchg
dec
adc
sbb
xchg
add
jecxz,pn
sub
test
dec
adc
addb
mov
or
cmpsl
push
adcl
xchg
aas
and
in
add
dec
into
pop
dec
jp
cmpsl
mov
add
and
add
pusha
add
aaa
dec
dec
jmp
pushf
push
and
sub
adc
jge
jnp
xchg
inc
push
daa
loopew
dec
fistl
dec
leave
enter
adc
mov
mov
lcall
ljmp
cmpsl
mov
adc
sti
cwtl
test
dec
adc
mov
mov
cmp
test
xor
xorl
add
mov
add
adc
xor
or
sbb
leave
mov
addl
pushf
in
mov
cs
je
sbb
sarb
fstps
adc
xor
enter
mov
dec
xor
pop
aam
push
adc
mov
btr
jmp
adc
pusha
add
or
xorb
sub
dec
adc
dec
lods
sub
lret
pop
xor
push
sti
mov
js
pusha
add
xlat
jmp
jecxz
dec
scas
imul
mov
mov
clc
or
sub
sbb
bound
dec
xchg
pop
add
or
mov
or
mulb
jnp
push
inc
andl
jbe
mov
adc
shll
mov
aam
mov
pop
popa
js
add
daa
jl
inc
cwtl
xor
sar
sbb
add
pop
and
insb
jnp
paddsb
dec
adc
or
dec
adc
cmp
mov
loop
mov
stc
cwtl
dec
jnp
cmp
adc
dec
xchg
or
into
lods
sbb
testb
add
pop
daa
fistps
lods
daa
into
xchg
sti
xchg
adcl
adc
dec
and
push
rcr
sti
pop
pop
rorl
ret
cli
mov
fisubrs
adc
pop
popa
add
jb
mov
cli
cld
dec
adc
pusha
add
xchg
ja
fsubl
dec
adc
add
sbb
add
daa
into
fiaddl
push
enter
push
pushw
dec
jmp
jbe
outsb
inc
sub
inc
out
lea
sub
paddsw
dec
adc
pusha
add
xor
adc
lcall
popa
adc
dec
imul
adc
cmp
add
xchg
cmp
pusha
pop
push
adc
jno
dec
cwtl
jl
enter
adc
loope
dec
adc
pusha
add
aas
js
sub
sub
enter
addr16
sbbl
rclb
leave
sbb
jmp
dec
call
adc
xchg
dec
xchg
dec
adc
int3
and
outsb
jecxz
call
or
into
lret
add
dec
adc
jne
pusha
pop
mov
leave
pusha
adc
dec
cmp
cmp
mov
je
pusha
add
adc
loope
push
shrl
mov
xchg
inc
cmp
adc
add
sbb
hlt
in
popa
add
xchg
dec
adc
pusha
add
sahf
idiv
cmc
push
pop
fwait
add
mov
test
xchg
ja
pop
adc
iret
inc
notb
popa
js
add
or
mov
mov
pop
out
roll
mov
adc
or
dec
adc
lret
add
xlat
test
mov
xchg
je
cwtl
dec
adc
or
sbb
xchg
xchg
call
adc
int3
mov
je
pusha
adc
dec
pop
xchg
movsl
icebp
cmpl
mov
arpl
dec
loopew
sub
and
pusha
add
jp
cmpsb
push
insl
add
push
dec
adc
addr16
aad
inc
out
movsl
es
pusha
adc
dec
js
mov
pop
int
pushf
and
fcmove
add
loope
xchg
xchg
and
sbb
xorb
jnp
test
js
dec
sub
jmp
fwait
into
jle
std
pusha
iret
pop
or
xchg
loope
pop
pop
pop
sub
dec
lahf
mov
sbbl
out
stc
imul
add
and
sbb
add
inc
in
push
std
mov
roll
inc
pop
xor
sub
popf
out
or
pop
cli
sbb
mov
repnz
xorl
fnstcw
mov
lea
pushf
fwait
lret
add
pop
mov
mov
mov
js
xchg
cld
fs
addr16
loope
andb
js
jg
adc
cmp
jnp
mov
adc
pop
pop
mov
js
leave
int
jne
sbb
in
mov
pop
adcl
xchg
sbb
ja
cmpsb
inc
inc
xchg
dec
mov
lret
xor
inc
in
jnp
loope
xchg
pusha
fldcw
inc
pop
jp
xchg
cmpsl
lds
enter
loope
cmp
repnz
mov
pop
sbb
jp
xor
xor
cmpsb
jmp
xchg
pusha
fimull
dec
andb
js
das
pop
movsb
adc
fadd
pop
adc
loope
hlt
ret
jecxz
loope
sub
mov
and
jbe
ljmp
pop
mov
out
sbbb
xchg
push
pop
jl
xor
cs
insl
push
xchg
push
sti
xor
loop
sbb
js
aad
xchg
fistl
inc
bound
dec
push
adc
out
loope
cmp
in
adc
cld
mov
cmp
mov
scas
ljmp
stos
dec
nop
adcl
xchg
dec
xchg
leave
push
jne
jae
test
cmp
add
mov
hlt
ret
xchg
ljmp
movsb
sub
xchg
insb
pop
inc
xchg
fwait
icebp
das
idiv
mov
cli
adc
jmp
cli
dec
cmp
stos
pop
andb
js
ret
add
mov
mov
cmp
xchg
adc
sbb
js
pop
mov
rolb
dec
inc
mov
jns
sbb
mov
cmc
cmpsl
loopne
xchg
cld
lock
pushf
loope
xchg
enter
loope
nop
cmpsb
mov
clc
loop
loope
sbbb
js
pop
adc
mov
movsl
fdivs
mov
mov
lcall
mov
sbb
pop
jp
rorb
loope
xchg
mov
fmuls
sbbl
xchg
loope
test
and
xchg
adcb
clc
imulb
sub
jmp
dec
dec
mov
cltd
pusha
repz
pop
andb
js
jne
pop
stc
testl
rol
sub
jl
shl
mov
data16
push
fistps
sbbb
cltd
jnp
imul
movsl
push
jne
or
mov
mov
and
cmp
pop
ret
pop
shlb
aas
mov
fisubrl
dec
mov
push
ds
xor
xchg
inc
sbb
pop
nop
inc
sbb
inc
xchg
inc
sbb
jle
or
in
mov
fisubrl
jnp
imul
sub
test
rcll
push
inc
pop
pop
xor
and
sub
xchg
push
ret
and
xor
fisubrl
xchg
dec
dec
mov
xor
cmp
fisubrl
xchg
imul
sub
dec
out
bound
bound
push
xchg
mov
pop
into
add
push
icebp
cmp
and
or
aas
mov
loope
or
fucom
ds
adc
jge
pop
sbb
imul
aaa
mov
fidivl
jp
pop
pop
sahf
mov
cmp
adc
fisubrl
orb
adc
imul
pop
xchg
cmp
lahf
inc
sbb
jl
dec
clts
clc
push
or
jae
adc
imul
pop
inc
and
fmuls
cmp
xchg
jle
loopne
push
adc
imul
int3
cmp
out
jp
xor
dec
inc
jmp
lds
sbb
fisubrl
add
mov
outsl
sbb
ljmp
push
xchg
mov
ret
lret
jl
out
mov
cltd
inc
sbb
push
imul
jb
cmpsl
cs
ret
jmp
inc
sbb
fimull
xchg
dec
lcall
adc
imul
push
add
cltd
jae
or
cltd
xchg
and
cmp
lahf
pusha
bound
sbb
adc
push
push
sbb
and
inc
xchg
inc
sbb
sub
in
xor
adc
popa
in
bound
mov
adc
sbb
cld
imul
cld
imul
test
mov
jecxz
jne
aas
data16
imul
in
jns
setle
sahf
sahf
xchg
xor
das
inc
lcall
inc
repz
gs
imul
stc
imul
daa
leave
fldl
fxch
ds
clc
imul
lcall
gs
imul
cld
imul
popf
enter
mov
into
gs
das
dec
into
lret
out
in
dec
push
mov
cmp
imul
sub
sti
adc
imulb
gs
adc
rcrl
xchg
ret
push
mov
pushf
enter
lret
repz
gs
imul
pusha
mov
jmp
in
xchg
flds
gs
imul
add
data16
imul
xor
sub
js
cwtl
mov
gs
jle
lret
shlb
imul
cld
pusha
inc
gs
imul
ja
inc
xor
cld
imul
pop
adc
in
loopne
dec
push
add
inc
xor
imul
dec
add
push
ret
sbb
or
outsl
ja
loope
loop
mov
push
cmp
lods
ss
lcall
mov
adc
into
gs
mov
jno
cmc
and
aad
enter
leave
in
cld
imul
and
out
gs
pop
xchg
mov
mov
dec
cmp
imul
repz
data16
imul
cld
imul
test
mov
aas
outsb
test
xor
pusha
in
int
mov
out
gs
imul
pusha
dec
outsl
cld
imul
jge
into
gs
inc
cmp
imul
sub
dec
push
fiaddl
xchg
jle
push
jmp
pop
pop
out
sbb
into
pop
mov
and
jo
pop
call
adc
cmp
xor
insb
jg
mov
ret
push
dec
mov
pop
jb
cmp
ljmp
gs
divb
xchg
lret
mov
outsb
mov
jge
xor
mov
inc
adc
into
gs
sarb
push
and
jne
cmp
into
ja
scas
adc
into
gs
inc
aam
xchg
in
xor
or
test
mov
cld
mov
inc
jbe
jnp
cmpsl
bound
daa
ljmp
cli
arpl
gs
imul
jle
cli
dec
mov
xchg
dec
out
gs
imul
scas
cmp
out
cld
imul
fidivrl
adc
jmp
lock
cld
xchg
mov
test
pusha
jecxz
cltd
test
sub
into
gs
sub
fcomps
gs
gs
aas
push
fs
std
ret
inc
insl
mov
xor
call
outsb
cld
imul
xchg
sub
mov
sub
loopne
imul
daa
shll
cltd
jecxz
int
imul
inc
pop
push
jo
xor
sahf
push
or
sbb
pusha
pushf
pop
scas
pusha
pushf
lods
idivb
loop
imul
adc
stos
dec
fcmovu
pop
xor
icebp
fwait
fwait
dec
inc
aad
cmpsb
and
imul
push
cmpb
enter
push
dec
adc
into
fstpl
out
add
in
imul
jle
inc
lock
inc
aaa
popf
leave
xlat
jecxz
inc
ds
imul
inc
push
and
jg
or
mov
dec
xor
imul
data16
imul
stc
imul
andl
cmp
pop
fsubrl
and
pushf
pop
inc
outsl
cld
imul
int
into
imul
scas
adc
pop
cwtl
mov
xor
pushf
xor
jbe
imul
pop
push
mov
es
jl
sub
hlt
mov
xchg
cmpsl
sub
imul
into
inc
cwtl
mov
fs
inc
in
mov
sub
dec
cmp
inc
gs
imul
add
fcoml
shll
jmp
int3
cmc
imul
and
mov
int
dec
sub
ret
jbe
and
into
gs
or
xor
mov
popf
loope
lods
mov
into
gs
sbb
cli
out
mov
inc
push
push
push
scas
push
cwtl
xchg
adc
shl
cmpsl
pop
arpl
pause
int3
imul
ret
push
in
mov
movsl
jge
mov
arpl
gs
push
or
leave
xor
imul
out
mov
sbb
popf
fildll
popa
cld
imul
jg
stc
add
in
cmp
les
cld
imul
cld
imul
inc
insl
xchg
or
es
ret
xchg
fidivl
pop
addr16
into
gs
xor
in
imul
and
dec
enter
popf
mov
and
jnp
gs
fistps
aas
adc
add
sbb
lock
jmp
inc
cmp
imul
xchg
jl
aam
pop
push
xor
sub
gs
pusha
in
adc
gs
inc
shll
ljmp
jmp
push
mov
ljmp
gs
pop
movsb
mov
out
cld
imul
jnp
push
inc
dec
mov
fsts
inc
es
ficomps
repz
xlat
mov
stc
imul
and
cmp
mov
and
sub
mov
mov
leave
mov
rclb
into
gs
das
sarb
pop
xchg
out
cld
imul
lahf
cmp
and
inc
add
mov
jne
repnz
xchg
jno
xchg
hlt
xor
xchg
mov
ficoms
imul
stos
in
cmp
pop
ret
div
fwait
outsb
xchg
popa
out
dec
outsl
popf
and
fs
imul
xor
popa
jecxz
push
jge
push
into
push
fwait
arpl
jecxz
adc
inc
push
mov
mov
pop
dec
subb
dec
mov
imul
mov
les
imul
test
push
popf
xchg
xchg
lret
ds
imul
lcall
gs
imul
cwtl
xchg
pop
ljmp
mov
gs
imul
sub
out
cld
imul
fstpl
cmp
inc
sahf
cmp
ja
ja
jmp
iret
loop
leave
dec
sbb
lret
dec
repnz
out
data16
imul
cld
imul
in
daa
jp
inc
pop
out
push
popf
inc
cmp
imul
std
mov
cmpsb
inc
dec
sahf
lahf
lcall
pop
repz
gs
imul
imul
mov
inc
xor
pusha
mov
mov
jl
inc
mov
pusha
into
gs
enter
jecxz
dec
call
mov
mov
cld
imul
stos
dec
cmp
fildl
mov
ja
jg
adc
sub
int
leave
dec
into
cmpsl
cli
cmp
repz
adc
into
gs
dec
sbb
push
and
push
gs
fnsave
inc
xchg
das
insl
clc
out
cld
imul
scas
into
xchg
push
test
or
or
sub
iret
imul
loop
mov
loope
inc
or
fxsave
leave
and
push
inc
pushf
push
or
dec
and
dec
aaa
mov
imul
das
add
adc
jle
xor
movsl
pusha
jecxz
leave
mov
test
into
gs
mov
sub
iret
push
push
pushf
dec
jg
rolb
mov
cld
add
test
xor
sub
pop
nop
into
daa
mov
mov
xchg
inc
lds
imul
test
sbb
xchg
enter
inc
ret
gs
imul
insb
or
int
imul
rcl
xor
xor
ljmp
pop
inc
pop
lcall
scas
lcall
gs
sbb
sbb
leave
dec
sub
out
int
imul
lcall
loope
and
mov
push
rolb
sub
das
dec
leave
push
jp
fs
in
lods
inc
les
imul
mov
cwtl
std
jecxz
in
in
lahf
into
outsb
mov
cld
imul
and
dec
xchg
xor
pop
loope
iret
call
lcall
nop
add
test
cmp
xor
mov
mov
jge
nop
mov
lcall
gs
pusha
inc
fs
imul
popf
enter
cltd
xchg
in
adc
sahf
cmpsl
jecxz
addr16
into
gs
inc
shll
enter
mov
cmp
into
gs
jp
jmp
push
cmp
adc
mov
rcrb
std
daa
test
ds
imul
pushf
pop
inc
data16
imul
jno
hlt
popa
popf
enter
xor
imul
lcall
gs
imul
clc
imul
lcall
addr16
into
gs
pusha
inc
pop
cld
imul
xor
ret
gs
imul
or
cmp
stc
imul
lcall
outsb
cld
imul
repz
gs
imul
into
gs
dec
dec
sbb
xchg
imul
imul
and
inc
int3
jecxz
mov
add
scas
mov
push
xchg
bound
iret
stos
lcall
pop
cld
imul
jle
clc
sub
or
xor
outsb
addr16
into
gs
lret
insb
in
xchg
cwtl
cltd
mov
in
cld
imul
lods
pop
out
dec
mov
imul
push
and
cmp
add
cmp
mov
add
pusha
in
cltd
mov
imulb
rcrl
lret
dec
jmp
out
jo
push
xor
or
inc
std
leave
mov
gs
imul
pusha
mov
lcall
and
jmp
sbb
sti
imul
movl
inc
lcall
out
int
mov
sub
int
cmc
imul
inc
jne
adc
shl
call
gs
mov
xor
push
lcall
out
addr16
into
gs
pusha
dec
fs
imul
xchg
mov
ja
out
cld
imul
rcll
mov
mov
jmp
push
fnsave
xchg
in
cli
xchg
and
popf
sub
arpl
adc
xchg
jnp
call
push
fstp
mov
xchg
pop
jne
cs
loope
push
fldl
pop
jnp
idiv
jnp
insb
adc
mov
cs
arpl
lods
sbb
call
fisttpll
shl
pop
stc
sahf
stc
movsb
pop
fdivrl
push
mov
fmuls
call
push
fstp
xchg
and
mov
push
cmp
in
xchg
fisubs
mov
aaa
std
pop
xor
lahf
out
or
iret
imul
fstp
leave
insb
je
pop
push
inc
pop
int3
nop
jge
outsb
add
push
jbe
loope
push
xchg
jge
pop
mov
shlb
sbb
and
data16
fs
push
or
pop
mov
in
adc
repz
jnp
data16
and
xorb
pushaw
sbb
data16
js
frstor
jmpw
das
jl
sub
jne
and
in
mov
inc
jno
sub
sahf
add
data16
scas
xor
pop
inc
js
fisttpll
mov
xlat
inc
jg
stos
cmp
data16
adc
dec
call
rcll
ja
movb
push
aas
xchg
shlb
sub
mov
movsb
inc
sub
xchg
xchg
popaw
inc
xchg
sub
dec
aad
jge
data16
fildl
adcb
mov
idivl
push
movsl
ret
data16
js
add
sbb
data16
dec
popa
ja
out
jo
frstor
lods
stc
mov
sub
sub
in
mov
add
dec
cmpsb
pop
mov
inc
imul
int
ja
lock
push
data16
call
cmp
jmp
add
or
adc
jbe
sub
testb
push
outsb
dec
sub
imul
in
movsb
ret
out
gs
or
ljmp
ja
pop
mov
dec
aad
add
pushw
fwait
ret
data16
jg
mov
daa
data16
xor
movsl
xchg
cmpsw
jecxz
mov
pop
ret
and
xchg
leave
mov
cltd
add
ja
ss
sub
sbb
xor
dec
imul
inc
fucomp
mov
mov
push
inc
dec
mov
jmp
cld
int
dec
cmpsl
xlat
inc
cmpsl
add
adc
data16
or
jno
imul
mov
pop
inc
pushf
ss
cmpsl
fstpl
sbb
lret
jae
inc
pusha
ja
movsb
cmp
data16
cmp
leave
push
out
push
mov
movsb
push
pop
xor
lods
inc
cmp
data16
push
sub
iret
data16
pushf
push
and
loope
cmp
in
lret
dec
aas
push
pusha
sbb
data16
in
call
ljmp
xlat
inc
inc
xchg
inc
jl,pn
sub
inc
dec
movsl
imull
sbb
mov
ja
in
xor
cwtl
gs
pushf
das
pop
stos
pusha
lea
shlb
sub
outsl
roll
aad
jns
mov
push
out
cmp
fcomps
ja
sub
jne
sbb
data16
int3
data16
cmp
nop
ficomps
punpckhwd
push
mov
and
add
dec
test
aad
mov
inc
aad
jno
dec
xchg
push
test
loopne
sub
pushw
cltd
shlb
jae
fstpl
data16
fisttps
subb
mov
rcl
std
jge
data16
movl
jbe
sub
adc
push
mov
pop
and
sub
divl
pop
sbb
hlt
jg
ljmp
xchg
fidivrl
ret
in
dec
lods
out
out
cmp
jp
pushw
testl
jl
sub
and
loopne
shr
aad
ja
mov
sub
out
push
fldenv
data16
and
or
ret
pushf
pop
fisubs
data16
mov
lods
push
inc
inc
int
dec
outsl
ficomps
aad
add
data16
sub
xor
sbb
xlat
cmp
data16
outsl
xchg
mov
lea
add
rclb
movsl
inc
lods
pop
repnz
xchg
leave
dec
inc
nop
les
in
add
dec
lods
stc
mov
vpcmpgtd
jp
inc
inc
pop
cltd
sbbl
dec
mov
xchg
or
lods
lret
data16
das
jle
sub
sbb
jbe
dec
inc
cmp
or
ja
inc
jne
lret
ret
fdivr
dec
das
jnp
sub
es
xchg
or
xor
mov
dec
pop
cli
or
dec
jo
sub
xor
data16
xor
cmp
xlat
xorb
lock
pop
ret
sbb
bound
sbb
cmc
out
scas
sub
inc
mov
xor
mov
sbb
mov
jns
data16
data16
and
and
inc
xchg
push
dec
cmpsl
inc
arpl
sub
testl
ja
dec
mov
sub
inc
xchg
sbb
out
fldt
jge
sub
outsb
lods
push
push
jecxz
lods
test
adc
mov
aad
or
movb
and
jo,pn
sub
fsub
fdivl
das
push
ds
xchg
or
or
cmp
data16
push
ljmp
aad
jge
pushw
cmpsl
data16
lods
out
arpl
jne
and
data16
dec
cmpsl
pusha
sbb
jo
sbb
test
lods
inc
pop
sbb
xchg
aad
add
pushaw
es
data16
repnz
sbb
dec
ja
jne
pop
data16
xlat
data16
push
xchg
push
lret
adc
subl
sahf
or
data16
push
mov
mov
outsb
ret
les
sbb
sbb
jl
stos
push
inc
mov
pop
shrb
cmc
sbb
test
pusha
sbb
data16
outsl
pop
or
inc
dec
inc
pop
jno
neg
lret
sub
data16
fisubl
repnz
jge
or
popfw
hlt
jo
jns
scas
hlt
rcrl
or
xorb
sahf
push
sub
data16
cwtl
call
mov
je
outsb
jae
call
outsl
in
push
clc
cmp
stos
jae
cmpsl
sbb
sbbl
repnz
lods
in
je
scas
sbb
jo
sub
lahf
add
popw
cld
jl
insb
shll
hlt
out
out
inc
dec
outsb
and
sahf
jge
mov
sbbl
clc
les
jb
das
jp
sub
mov
mov
imul
mov
movsl
sbb
sti
add
ja
fists
jmp
adc
xorb
test
mov
jmp
xor
mov
jns
add
jne
in
das
jb
sub
inc
sbb
xlat
pop
add
cltd
adc
mov
stc
outsl
sbb
ja
sub
jne
sbb
data16
int3
data16
xor
xchg
fstpl
data16
iret
or
xor
ret
sub
movsl
insl
lahf
movsl
sbb
pusha
sbb
xlat
jmp
sti
in
jl
pop
push
lcall
outsb
dec
dec
mov
dec
cmpsl
or
ljmp
push
lahf
leave
data16
aad
jl
frstors
inc
andb
xchg
mov
pop
ds
ja
das
sub
jbe
mov
movsb
cmp
adc
data16
and
and
cmp
sbb
push
mov
clc
xor
call
data16
xchg
ja
or
scas
xor
fistps
xor
hlt
fstpl
ja
cwtl
adc
data16
data16
adc
inc
sub
pop
inc
jl
sub
out
adc
daa
arpl
into
mov
rcl
std
jp
pushw
out
sbb
and
data16
mov
inc
and
movsl
mov
aad
or
pushaw
pop
data16
es
movsb
mov
pop
xchg
push
test
add
bound
jne
xor
roll
pop
push
jo
dec
popa
ja
jne
in
cmpsl
stc
push
inc
inc
xchg
hlt
add
pushw
cmpsl
ret
data16
lods
out
inc
push
inc
inc
insb
inc
scas
inc
sbbl
mov
xorb
data16
aad
outsb
dec
lods
movsl
push
adc
push
lods
ret
data16
lods
out
inc
cmpsl
lahf
or
jmpw
sbb
xor
int3
setae
dec
repnz
subb
sub
fisubrl
jo
sub
test
aad
dec
sbb
dec
mov
pop
arpl
cmp
jne
sbb
data16
ret
data16
mov
sbb
test
add
adc
data16
fucomp
mov
fimuls
daa
daa
das
inc
mulb
lahf
or
data16
sub
mov
stos
lret
aam
lret
mov
mov
frstor
aad
mov
push
jb
pusha
daa
data16
mov
std
es
data16
inc
sahf
stos
lods
cmpsb
movsb
in
loopne
dec
lods
or
jne
sbb
data16
lods
scas
es
ja
data16
shlb
sub
push
mov
jmp
out
iret
jge
cmpsb
cld
mov
out
dec
pusha
ja
lods
push
inc
jle
stos
cmp
data16
or
sbb
ja
sub
jo
dec
adc
sbb
cmpsb
mov
push
pop
out
mov
jecxz
sahf
jg
in
pushf
push
pop
cmp
test
ficomps
js
mov
aad
ja
data16
data16
nop
push
ja
popf
sbb
cld
jmp
pop
das
jnp
sub
fwait
pushf
mov
ret
push
test
loop
sub
pushw
test
decl
lahf
int3
mov
stos
add
xlat
push
jne
sub
int3
data16
dec
xlat
and
in
outsb
stc
xor
incb
lods
stc
mov
push
cmpsl
jne
sbb
data16
inc
popa
ja
jne
sub
cmc
cvttps2pi
data16
cmp
data16
cmp
cmp
iret
movsb
pop
mov
cmp
push
sahf
shlb
ja
push
movsb
shll
inc
xchg
sti
ss
sahf
add
xchg
push
cli
xchg
jno
js
cmpsl
int
sbb
int3
sahf
sbb
add
sub
jle
sahf
add
data16
sub
mov
mov
sub
lret
cmp
out
aad
pop
pushf
daa
mov
adcb
data16
lret
sub
push
ss
outsb
lds
frstor
ja
repz
roll
jmp
ret
sahf
icebp
sbb
bound
or
mov
sub
pushw
lods
iret
data16
aad
jp
pushw
negl
sbb
sub
mov
out
sahf
jl
data16
mov
pushf
mov
dec
popa
ja
out
dec
cwtl
rcl
vpcmpgtd
lods
cmpsb
push
xor
jno
pop
jno
imul
mov
fisubrs
xlat
call
ja
out
jecxz
arpl
mov
mov
cwtl
mov
sahf
add
inc
xor
inc
int3
divl
add
data16
test
rorb
jne
sub
test
cwtl
pop
lahf
add
pop
fwait
jbe
in
aam
adc
xlat
data16
fldt
cwtl
sbb
lods
cmp
pop
pop
cmpsb
jne
and
data16
ss
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
add
je
add
adc
