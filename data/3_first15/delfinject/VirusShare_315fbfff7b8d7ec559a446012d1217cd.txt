xor
inc
ret
push
push
call
xor
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
call
cmp
jne
push
call
pop
call
push
push
call
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
add
mov
cmp
jge
push
call
pop
push
push
call
call
mov
mov
pushl
pushl
pushl
call
add
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
call
ret
jmp
jmp
cmpl
jne
jmp
push
push
pushl
call
add
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
jmp
push
push
call
pop
pop
ret
xor
ret
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
mov
lea
push
mov
call
add
mov
mov
addl
ret
jmp
jmp
add
ret
ret
xchg
xor
xchg
ret
push
addl
pop
ret
add
popl
push
mov
push
pop
pop
push
xchg
push
xchg
add
push
xor
pop
xor
push
popl
pushl
ret
jmp
ret
ret
push
push
push
push
push
push
push
push
push
push
push
push
call
add
pop
pop
pop
pop
pop
pop
pop
ret
mov
ret
push
pop
ret
xchg
popl
push
ret
xchg
xchg
xchg
pop
push
xchg
mul
push
pop
xchg
xchg
xchg
push
addl
pop
ret
push
xchg
add
ret
push
pop
ret
add
ret
mov
ret
add
push
mov
push
push
push
xor
push
mov
xchg
mov
push
push
call
call
push
push
push
call
push
push
push
push
call
push
push
push
push
call
push
call
push
call
push
call
call
mov
push
push
push
push
call
push
push
call
push
call
push
push
push
call
push
push
push
call
push
cmp
jae
ret
add
call
xchg
pop
sub
int
dec
pusha
fdivrp
inc
push
decb
fs
lods
adc
inc
jp
cs
mov
cmp
sub
push
push
push
insb
test
jno
or
jecxz
les
push
das
xor
rorl
jl
out
push
and
cli
popf
out
lds
xchg
and
dec
xor
rol
sub
gs
test
into
inc
fstp
xchg
sbb
orl
test
or
call
adc
or
or
cwtl
cmp
cmpsb
pop
out
ja
sub
dec
push
cmp
mov
dec
das
lock
lods
das
scas
into
mov
icebp
jne
add
cmp
push
shrl
mov
int
sub
aaa
pushl
lock
dec
lret
jno
lret
xchg
mov
jb
hlt
into
lcall
jo
out
es
xchg
adcb
dec
aam
mov
cmp
mov
cmp
enter
mov
es
cmp
out
and
adc
inc
xor
fs
imul
adc
outsb
xor
lcall
lahf
dec
arpl
add
push
data16
ficoml
repnz
hlt
dec
xlat
negb
arpl
dec
fs
inc
icebp
push
mov
inc
xchg
cmp
push
push
or
rep
popf
push
test
add
mov
xchg
xor
pop
in
mov
bound
iret
mov
pop
in
js
lods
cmp
push
adc
push
dec
rorb
and
mov
or
push
pop
loop
and
jge
decl
inc
cmpsl
fiaddl
mov
inc
mov
lea
mov
btr
xchg
rorl
pop
push
mov
mov
mov
js
arpl
lret
scas
xchg
inc
sub
pop
xor
testb
mov
push
sarb
adc
filds
pop
enter
push
push
xlat
jbe
xchg
in
xor
daa
loop
fisttpl
mov
xlat
lods
rolb
scas
out
testb
lods
int3
xchg
adc
int
and
adc
jmp
push
jne
mov
pop
lods
add
icebp
pop
ret
imull
inc
imul
add
jp
xorb
arpl
aam
push
es
lcall
inc
das
outsl
mov
xor
pop
mov
mov
ds
jnp
scas
js
je
sub
jge
mov
jno
and
sti
sahf
adc
jg
jle
lea
frstor
jp
mov
daa
les
std
dec
pop
cwtl
inc
mov
push
loopne
pop
dec
mov
loopne
shrb
push
sub
fwait
test
inc
or
sub
xchg
fcmovb
dec
and
xchg
rclb
std
mov
mov
pop
sbb
cmp
add
cmpsb
loopne
cmp
fadds
sub
repnz
push
push
das
pop
xchg
add
repz
push
xor
out
or
out
add
gs
or
mov
std
faddl
mov
es
fnstcw
push
ret
mov
movsl
jmp
aam
out
ss
shlb
mov
lods
xchg
loopne
push
mov
mov
xchg
setne
cmc
add
mov
cmp
inc
xchg
jg
psrlq
fwait
std
lds
addr16
popf
push
cli
sub
mov
mov
push
fs
rcll
add
popf
cwtl
dec
cltd
sbb
mov
in
and
lock
adc
jns
cwtl
loopne
mov
add
inc
mov
sarb
je
sbb
cmp
add
and
psllq
inc
jno
jp
ljmp
xchg
stos
mov
dec
icebp
adc
sub
xor
cmc
add
or
and
mov
flds
fsubl
mov
iret
xchg
sti
jbe
push
in
push
dec
xchg
adc
stos
sbb
xchg
cmp
jl
cmp
scas
loop
pop
sarb
rcrl
adc
adc
roll
addr16
push
pop
pushf
jns
lock
lock
insl
movsb
dec
sahf
mov
adc
das
ljmp
test
or
sbb
or
insb
push
or
nop
dec
outsl
popa
repnz
jmp
pushf
ss
inc
or
adc
push
sub
imul
inc
push
sub
popf
jle
pop
ljmp
sbb
mov
sub
call
inc
aam
mov
sbb
jae
shlb
aaa
idivl
push
cmp
xchg
test
xor
push
xchg
cltd
adc
cmpsb
push
sbb
andb
cmc
add
shl
lret
dec
xor
insl
sbbb
add
sbb
data16
pop
push
js
sub
mov
sbb
aas
sbbb
dec
inc
adc
pop
mov
aad
out
push
dec
cmp
push
imul
fbld
and
xchg
test
cmp
pop
aas
dec
xchg
fs
cmp
xchg
es
mov
outsl
jno
inc
repnz
jno
push
mov
ja
loope
jg
les
lret
test
xor
ret
fdivl
repz
mov
adc
xlat
mov
mov
incb
sti
mov
inc
mov
leave
mov
fldenv
addb
mull
push
adc
dec
loop
cmpsl
fsub
loopne
sbb
lods
out
not
ret
sbb
pop
iret
fidivrl
lret
lret
jns
or
outsb
outsl
aam
and
dec
rcrl
xor
push
inc
cmp
and
sub
mov
mov
adcl
cwtl
adc
lods
add
adc
xor
gs
test
add
or
cmp
push
stos
popf
andb
dec
movsl
push
nop
mov
popa
addr16
js
mov
adc
push
push
aam
cmp
sbb
loop
pop
dec
push
inc
das
jnp
mov
iret
cmpsl
outsb
mov
mov
cmp
in
leave
lods
dec
mov
int3
jb
enter
dec
stos
mov
popf
dec
add
dec
push
or
pop
dec
cmp
in
decl
adc
mov
jno
sbbl
dec
test
push
fucompp
insb
add
mov
les
jmp
std
outsb
lcall
xchg
push
adc
orl
loopne
add
and
xor
into
cli
clc
adc
rorb
jl
xor
inc
loopne
pop
mov
int
inc
adc
loopne
ret
clc
xchg
and
xor
nop
loopne
mov
roll
scas
mov
cmp
into
popa
xor
int3
dec
iret
inc
xchg
inc
bound
int
or
ja
push
test
out
xchg
mov
dec
in
sub
daa
or
push
jb
pop
scas
adcb
xor
sbb
inc
inc
test
fs
leave
loopne
outsl
mov
insb
mov
bound
lret
xchg
cmp
cld
pop
cmp
push
push
pop
movsl
aaa
xchg
getsec
int
imul
cmp
pop
xor
cmp
mov
mov
loope
xchg
ja
jl
mov
and
add
leave
mov
test
in
inc
adc
iret
mov
js
std
pop
insl
jno
clc
les
or
jg
push
and
and
mov
fildl
out
fdivs
or
iret
lods
je
sbb
jge
sub
sbb
addr16
mov
clc
andl
popf
adc
mov
pop
test
inc
add
pop
enter
lea
sub
stos
leave
nop
xchg
mov
test
lahf
cmpsb
adc
loope
add
xor
dec
pop
lea
aas
cmp
jle
sub
mov
cmp
mov
lock
cli
lods
mov
stos
or
sbb
mov
push
sahf
mov
sub
inc
subl
add
lcall
lret
lds
lock
int3
mov
aam
push
clc
pop
adc
stos
xchg
push
xor
xchg
nop
jne,pt
hlt
into
mov
cmpsl
pop
pop
je
gs
arpl
addr16
ds
mov
xchg
es
push
push
adc
movsl
jo
dec
pop
sub
xchg
enter
repnz
dec
std
lahf
adc
dec
shlb
fstpt
jbe
xor
call
push
dec
fs
and
or
leave
lret
sub
cmp
arpl
loope
ljmp
add
in
in
scas
jmp
or
sbb
jge
mov
xchg
ret
mov
ret
add
lds
ss
dec
int3
mov
int3
jae
addr16
cmp
cmp
cmp
mov
sub
test
sbb
fstpl
or
adc
pop
test
adc
ret
iret
xchg
mov
cmpl
sub
sub
mov
mov
mov
lret
add
iret
dec
push
xchg
and
punpckhdq
test
cmp
sbb
in
lds
cmc
pop
mov
mov
jl
lea
stc
arpl
rolb
mov
xchg
and
enter
imul
mov
sbb
pop
ss
ret
repnz
int3
xor
and
pusha
mov
cmp
push
pop
ds
and
or
adc
sti
test
daa
xor
xor
insl
inc
xor
das
ret
push
dec
cmpsl
mov
sbb
orb
sub
ret
jle
jbe
push
ficoms
mov
in
cltd
inc
ret
sbb
push
dec
inc
xchg
and
mov
cs
aas
adc
pusha
aaa
xchg
jmp
test
inc
scas
cmpsl
cmpsb
inc
int3
adc
adc
pop
sahf
ret
add
pop
arpl
xchg
sub
notb
xorl
mov
pop
sbb
subb
je
mov
adc
push
add
or
mov
mov
sbb
adc
call
aam
push
pop
add
inc
and
andnps
lods
jnp
ret
add
ret
sbb
sarl
push
mov
arpl
pushw
ljmp
out
push
insb
add
or
popa
popa
hlt
es
andb
inc
lods
jecxz
cmp
pop
popf
or
sbb
xorb
dec
add
popa
mov
test
aam
jnp
dec
xchg
jl
jmp
inc
mov
dec
rorl
jns
pushf
fwait
xchg
or
or
adc
pushf
pop
jecxz
fadds
add
out
js
into
sbb
out
fisttpll
xchg
adc
inc
sub
jb
loopne
daa
std
mov
sahf
sbb
xor
aad
decb
push
xchg
mov
lret
push
lahf
aas
ror
daa
pop
push
pop
cmp
mov
sub
cmp
pusha
jo
or
addl
std
pop
mov
push
mov
push
inc
js,pt
das
cmpl
stc
dec
pushf
push
rcrb
fwait
sahf
jecxz
xchg
cmp
xchg
das
mov
fidivrs
ja
std
lea
push
fdivrl
or
enter
mov
out
es
nop
movsb
loop
shlb
f2xm1
int3
mov
jl
stos
sub
mov
sbb
sbb
mov
cmpsb
fisubl
dec
out
test
enter
icebp
mov
jmp
ja
test
test
jae,pt
scas
jmp
xchg
jge
mov
mov
jp
into
pop
pop
push
and
cmp
cmp
mov
dec
mov
mov
mov
shlb
push
sub
fmulp
inc
push
add
jp
push
out
push
enter
movsl
aaa
inc
repz
int3
shlb
test
test
jbe
cli
dec
out
push
mov
aaa
dec
dec
and
imul
lcall
jp
mov
adc
popl
push
pushf
pop
lods
in
sbb
cmpsb
fsub
mov
imul
sbb
arpl
stc
cmp
inc
sbb
nop
xchg
mov
ficoms
jmp
in
jp
sbb
and
pop
jns
mov
pop
add
shrl
rolb
stos
xchg
into
add
loop
xchg
jno
sbb
not
test
sbb
add
sbb
adc
or
clc
cli
pusha
inc
or
xchg
in
mov
sub
ds
xor
aam
or
addr16
mov
insl
adc
jmp
dec
subl
and
out
loopne
adcl
aad
cmpsb
sbb
xchg
out
aas
jecxz
mov
mov
sbb
lds
add
jbe
push
and
or
cld
adc
and
in
mov
pop
in
mov
jno
adc
orl
iret
into
push
pop
sbb
test
push
pop
fcoms
notb
cmc
and
pop
fldcw
mov
xor
mov
xchg
push
mov
jmp
fcmovnbe
in
sbb
loop
sahf
jae
xor
mov
hlt
scas
test
mov
fnstcw
mov
js
aas
xor
js
mov
in
inc
mov
inc
imul
popf
cmc
sub
aaa
cmp
push
divb
push
bound
insl
popf
lds
push
push
arpl
and
or
mov
test
repz
and
gs
lcall
les
mov
mov
mov
jno
pop
icebp
or
mov
pop
cmp
lea
movsb
outsl
pop
cmp
lret
dec
arpl
jl
fs
push
je
push
and
bndldx
jge
add
and
loopne
xlat
mov
or
cmp
out
sub
fwait
int
divb
pushf
mov
icebp
clc
in
pushf
lods
and
aad
xor
push
int
and
adc
jbe
add
test
js
dec
dec
mov
add
dec
push
mov
movsb
dec
inc
dec
mov
ret
test
pop
cmp
lock
mov
sub
stos
xchg
pop
mov
jle
jge
fcmovnb
aad
push
mov
cmp
nop
inc
mov
lods
pop
push
mov
test
aam
sbb
cmpsl
int3
sub
outsb
or
insb
dec
fs
fsub
dec
inc
out
scas
ss
mov
sub
add
sbb
mov
pop
jl
pop
ljmp
outsl
scas
lcall
inc
lret
push
mov
adc
cli
cmp
ss
flds
fnstcw
outsl
xchg
cmp
in
call
out
leave
leave
cmc
push
xlat
mov
sbb
pop
xor
inc
cmpsb
xchg
loop
jp
inc
mov
rclb
sub
sbb
pop
pop
xor
fidivl
movsb
leave
fisttpll
lock
aaa
cmp
out
and
xor
es
jnp
push
mov
rcrb
into
xchg
stos
mov
push
shrl
jno
call
shl
ljmp
in
cmpsb
xchg
mov
inc
int3
fidivrs
movsl
adc
mov
pop
outsl
jne
stc
daa
add
xor
je
clc
movsb
push
dec
lds
mov
xorb
dec
dec
jl
mov
adc
jno
fidivrs
aaa
pop
adc
mov
jo
dec
and
cmpsb
mov
xchg
jge
icebp
cli
or
mov
sbb
ljmp
push
loop
repz
dec
jb
add
aaa
jecxz
add
or
jne
mov
mov
leave
mov
sbb
test
add
pushf
xor
sub
aaa
mov
push
test
mov
test
and
inc
cld
pop
in
test
jbe
cmp
pop
add
fldl
fisttps
cmpl
sub
or
xchg
gs
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
ret
sbb
out
repnz
inc
leave
into
mov
inc
and
push
fildll
mov
icebp
int
scas
pop
add
push
lret
ret
adc
clc
outsb
pop
xchg
jp
pop
push
in
ljmp
xor
cld
cmp
popf
cpuid
jp
sub
outsl
mov
sbb
into
je
scas
popf
sbb
xchg
punpckhwd
sbb
xor
jns
push
jg
loope
jne
cltd
xor
adc
pop
scas
jno
mov
nop
and
sbb
mov
cmp
sbb
scas
xor
je
cs
mov
mov
out
jg
subl
xchg
pop
or
push
imul
pop
xchg
scas
outsb
lea
jmp
lds
xchg
mov
push
sub
movsl
xchg
or
rorl
xchg
sub
std
mov
push
add
mov
cmp
add
cmp
lret
jnp
push
push
sub
mov
mov
cmpsb
sub
mov
xchg
sbb
rorb
ljmp
dec
enter
fdivl
cmp
aaa
test
fisttps
and
xchg
pop
jnp
pushf
lret
cmc
jp
mov
popa
jge
xor
in
js
sbb
loopne
daa
call
xor
lods
jae
mov
loope
jmp
pusha
ds
lcall
cmp
pop
inc
xchg
in
push
sbb
mov
aas
push
out
pop
lea
xor
mov
lds
fistps
or
push
dec
addr16
add
jmp
push
imul
insl
and
push
addl
div
mov
outsb
jp
jbe
fs
fdiv
leave
add
nop
adc
andb
mov
jmp
mov
lcall
in
fdivl
jb
movsb
cs
lret
pushf
push
jecxz
add
pop
sub
ss
lods
pop
push
es
loopne
xchg
in
cltd
inc
or
mov
dec
mov
cmp
jmp
xor
mov
sub
xchg
fwait
divl
add
fldcw
aam
test
push
or
adc
imul
inc
sbb
pop
push
and
bound
bnd
push
jns
cmpb
jns
mov
sti
add
shrl
xchg
pop
push
dec
inc
dec
mov
xchg
aad
enter
fs
faddl
leave
popa
cmp
push
repz
andb
lods
cmc
push
popf
or
adc
fnstcw
insb
jmp
lods
movl
push
jge
xor
push
push
jbe
xchg
lcall
inc
jbe
fidivrl
sub
adc
in
jnp
ret
push
cmpsb
call
loope
or
jmp
xchg
cmp
xor
loop
mov
pop
repz
out
cmp
inc
pusha
dec
stos
inc
mov
js
gs
sbb
mov
or
sbb
ret
sbb
loope
pop
lods
test
call
push
ss
lret
adc
dec
adc
repz
rorb
pusha
hlt
scas
cmc
jno
outsl
movsl
ret
dec
jae
outsb
mov
imul
jns
mov
push
es
jae
mov
add
stos
xchg
aas
call
pop
pop
cmpsl
jnp
cmp
movsl
hlt
sbb
rolb
xor
cmpsl
jae
fistpll
cmp
into
leave
jne
rcll
mov
jae
lds
push
dec
lods
fiadds
mov
lahf
xor
push
jnp
jg
jns
rsqrtps
daa
repnz
outsl
jbe
sahf
insl
cli
sbb
jne
sub
xor
lret
mov
push
std
push
cmp
mov
push
mov
mov
sub
xlat
and
dec
inc
jne
sub
int3
inc
imul
lds
push
stc
xchg
jno
sti
movsb
inc
jno
roll
or
inc
pop
xchg
lods
movl
mov
adc
jnp
sti
nop
inc
and
daa
icebp
jbe
leave
dec
xor
enter
lcall
movsb
mov
fdivr
or
pop
out
pop
sub
mov
adc
xor
daa
popf
jmp
sub
fistpll
pop
xchg
xchg
cmp
push
lret
lods
inc
pop
inc
add
cmpsb
cmp
xchg
mov
mov
jo
shld
jge
adc
jecxz
adc
aam
xchg
or
out
ret
xchg
out
xchg
xor
mov
mov
sbb
sar
or
lret
xchg
ja
mov
js
jp
loopne
mov
cs
cmp
mov
cltd
imul
fwait
adc
adc
fs
test
xor
shl
pop
fwait
sub
xlat
imul
sub
push
and
rcr
mov
mov
mov
jecxz
xor
bound
mov
sub
push
mov
mov
jne
xor
in
jbe
pop
mov
dec
movsb
test
mov
pop
mov
fcmovne
cmpsb
xor
jmp
movsb
pop
imul
push
outsl
dec
les
inc
mov
incl
loope
mov
loope
mov
pop
ds
movsl
sub
push
inc
scas
mov
cwtl
mov
cs
outsb
mov
enter
ror
cmpsb
enter
push
and
dec
sub
push
cmp
js
movb
fcoms
xor
inc
sub
add
fnstenv
push
and
mov
std
adc
shl
mov
cmp
inc
fwait
mov
aad
pop
jmp
insb
mov
pop
push
add
pop
fists
mov
addl
mov
adc
test
imul
out
inc
sahf
lcall
out
out
insl
insb
subl
xlat
pop
sahf
pop
loop
jo
pop
xchg
jp
pop
dec
xchg
or
fwait
push
shrb
jle
pusha
inc
loope
leave
mov
loopne
push
stc
cltd
stos
cmp
and
mov
stc
repz
lret
divl
pushf
pop
mov
dec
inc
jl
mov
xchg
xchg
mov
sbb
imul
test
jo
test
dec
sub
xchg
mov
mov
and
andl
mov
lahf
dec
ja
cs
lret
sub
iret
or
mov
pop
imul
and
pop
and
lret
sub
xor
and
sbb
jp
mov
test
test
mov
cld
jnp
sbb
ljmp
pusha
jle
pop
dec
inc
or
dec
or
stos
cld
das
fs
mov
mov
add
pop
and
and
icebp
movl
mov
aad
inc
mov
pop
ss
mov
data16
jle
sub
sbb
mov
mov
outsb
shrb
pop
add
sarb
or
push
jle
imul
xorb
xor
and
aaa
lcall
inc
aad
fwait
pop
pop
pop
daa
pop
scas
sti
jb
push
dec
cwtl
cmp
cld
mov
es
es
pop
xor
pop
push
in
mov
push
lret
push
in
mov
xchg
popa
inc
jae
repz
imull
aas
sbbl
xor
or
je
popl
cmpsb
mov
in
add
pop
or
push
dec
scas
aad
mov
ss
sub
sub
cli
cmp
lret
pop
xor
sbb
jae
into
pop
or
in
cmp
test
out
stc
movsb
iret
aaa
push
std
loope
adc
lret
dec
fisubrs
xchg
and
add
jb
es
jecxz
das
movsl
cmp
in
imul
movsl
fcmovu
loopne
neg
sub
mov
lods
xchg
ret
adc
out
pop
aad
sbb
mov
arpl
jecxz
loopne
jl
or
push
push
outsb
mov
into
pop
out
mov
xchg
rcrl
add
cmpsl
andb
xor
rolb
xchg
movsb
out
push
and
add
push
pop
fldl
ret
movsb
dec
outsb
sbb
pop
std
pushf
imul
jnp
cmp
inc
out
mov
test
pop
stos
pop
xchg
xchg
test
arpl
mov
pop
xchg
mov
cli
push
inc
sbb
scas
fidivs
and
cs
mov
xor
and
jecxz
mov
and
fisubl
fwait
outsb
pop
pop
daa
fisubrl
je
daa
mov
mov
out
inc
push
adc
inc
ret
push
out
addl
fwait
imul
pop
mov
jnp
ret
push
push
scas
xchg
dec
mov
sbb
sbb
mov
inc
lods
xchg
hlt
divb
push
fsts
adc
fs
hlt
push
pushf
fstpl
and
pop
sbb
test
jmp
loope
ror
xchg
jne
loopne
fnsave
xchg
sub
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
imul
inc
les
outsl
mov
dec
pop
adc
push
sub
fimuls
xor
scas
sbb
stos
insb
fsubl
push
cmp
fmull
mov
pop
sub
dec
icebp
mov
jae
mov
dec
mov
sbb
shlb
aad
scas
leave
lea
lahf
inc
sbb
mov
lods
test
mov
jge,pn
xchg
mov
sahf
aad
cld
dec
fnstenv
into
mov
outsb
fstpl
mov
sbb
dec
in
inc
sub
pusha
inc
pop
das
fdiv
imul
mov
in
inc
dec
add
push
not
test
add
pushl
cmp
jmp
pop
nop
cld
insl
lock
mov
adc
subb
sbb
mov
pop
jo
cmpl
sub
or
dec
out
gs
leave
repz
cmc
jge
lods
rcl
cmpl
pop
adc
shl
xchg
fistpl
or
jbe
sbb
add
imul
movsb
addr16
xor
movsl
and
push
mov
jg
shlb
xlat
aaa
push
push
js
lcall
rorb
adc
adc
xlat
lcall
xor
and
adc
inc
or
test
out
jno
fsubl
adc
pop
xchg
test
sti
and
sti
xor
sti
fcomps
dec
mov
je
loop
pop
push
sub
test
bound
fidivrs
lods
shrl
hlt
jmp
pop
xlat
stc
mov
das
mov
sti
inc
sub
movsb
dec
pop
xor
pop
dec
outsb
pop
jle
mov
mov
xlat
dec
aaa
or
outsb
out
jbe
jb
cmp
cwtl
dec
xchg
ror
and
and
rcrl
outsl
mov
sub
xchg
xchg
pop
push
jecxz
cmp
sbb
jo
cmp
or
jge
pop
jne
mov
and
adc
loope
add
es
stos
sahf
cltd
and
cli
pop
push
sbb
xor
dec
adc
call
adc
add
pop
inc
fdivrl
mov
popf
loopne
and
xchg
pop
mov
xchg
fs
mov
gs
shll
lret
lahf
cmpsb
cmp
xor
xor
push
pop
jl
or
hlt
mov
movsb
sbbl
subl
popf
loope
pop
lcall
mov
add
add
mov
scas
add
cs
jge
mov
popf
jg
leave
mov
jae
jnp
pop
sti
ret
push
mov
fwait
negb
jno
mov
pop
jnp
mov
jg
pop
mov
inc
jl
ds
inc
ja
clc
cmp
xchg
cmpsl
cltd
or
or
addr16
subl
fidivrl
inc
sti
xlat
or
orl
pop
stos
fstpt
pop
sarl
mov
ror
inc
xchg
js
adc
int
inc
pop
add
pop
aaa
jmp
popf
cmpsb
mov
js
repz
mov
addr16
xchg
mov
les
xor
movsl
add
popa
xchg
or
sub
fimuls
call
jecxz
and
and
xchg
inc
xchg
rcr
inc
mov
adc
xlat
mov
dec
cwtl
ljmp
jo
scas
push
lea
repnz
lcall
divl
xchg
sub
loope
fsubp
mov
lock
add
fimuls
cmp
aad
xchg
push
mov
cmp
mov
lods
mov
lods
or
data16
jge
orb
or
ds
mov
loopne
iret
arpl
add
xchg
inc
dec
mov
imul
add
repz
in
xlat
outsb
mov
cmpsl
add
add
leave
sub
sub
into
xchg
ret
sbb
and
je
incl
shlb
mov
fadds
xorl
movsb
pop
mov
and
ret
cltd
mov
cmp
mov
jb
dec
xchg
lea
scas
push
jbe
xchg
mov
shrb
arpl
dec
dec
mov
out
inc
push
xor
mov
enter
dec
jae
and
mov
mov
xchg
aam
leave
dec
gs
pop
inc
dec
out
push
int3
xor
data16
dec
popf
xor
dec
jb
rcrl
sub
out
and
cmp
xchg
lahf
pop
ds
fists
mov
sbb
and
xor
lea
call
fsub
push
sbb
clc
fs
mov
fwait
fwait
push
movsl
cs
xor
andb
mov
call
inc
push
mov
popa
call
mov
jb
jp
in
outsb
xchg
jno
bound
fcom
xor
adc
int
push
js
outsb
fwait
jb
ljmp
jae
stos
data16
out
loop
and
inc
rorb
scas
leave
and
rcrl
out
pop
add
cmpsl
leave
push
xchg
leave
or
mov
xor
ret
cwtl
inc
pop
fdivrl
fidivrs
outsl
jl
add
jp
sahf
mov
xor
xchg
sub
sub
int3
sbb
stos
fs
jp
cmpb
pop
scas
lock
push
sub
jno
arpl
adc
jne
aam
lret
lret
sbb
sbb
cmp
sbb
cld
sbb
mov
negl
hlt
pop
jp
hlt
stos
jmp
inc
faddl
ret
jne
push
out
int
push
lods
std
pop
sahf
sahf
or
addr16
in
and
dec
pop
cmp
pop
pusha
inc
icebp
add
and
enter
and
cmpsb
or
dec
es
bound
loop
dec
dec
lretw
mov
roll
and
std
cmp
xor
jnp
push
cld
dec
jmp
in
jne
xor
jle
push
test
mov
push
sub
xchg
adcb
and
sub
fidivrs
sub
sbb
dec
das
dec
insl
adc
sahf
pop
mov
or
adc
mov
in
cwtl
jl
sti
das
xchg
sbb
mov
loop
stos
inc
fiaddl
mov
xchg
dec
insb
imul
and
dec
xor
loop
sbb
lret
xchg
aas
ss
fwait
and
psubw
out
xchg
ss
fists
jge
outsb
shr
pop
jge
jp
jmp
insl
pop
add
adc
mov
outsl
loopne
pop
xlat
out
paddusw
add
scas
sub
addb
in
xchg
dec
iret
dec
push
mov
or
cwtl
in
and
push
dec
add
stos
cmp
gs
xorb
outsl
imul
scas
mov
dec
sub
in
arpl
pushf
inc
popa
in
cld
or
sbb
and
add
cmp
lock
xchg
xor
data16
xchg
adc
or
out
movsb
mov
inc
xchg
add
cmp
aad
aas
xor
mov
pop
test
and
add
mov
push
push
xchg
adc
mov
add
jo
sub
mov
in
and
and
mov
es
lahf
xor
dec
lcall
jbe
fnstenv
dec
aaa
in
insb
loop
jmp
mov
fdivrl
xchg
ret
cmp
sub
loopne
lret
mov
loop
xor
xchg
fdivp
mov
mov
aad
arpl
je
inc
adc
das
jns
les
mov
in
lret
sbb
cld
or
sbb
and
mov
ret
pop
xorb
xor
lds
sub
inc
cmpsl
das
pop
xchg
pushf
stos
lret
mov
pusha
les
lret
imul
clc
adc
int
sbb
outsl
mov
pop
test
das
xchg
sub
or
and
fidivrs
nop
sub
repz
mov
cltd
sbb
fildll
push
xchg
mov
and
je
jle
or
inc
inc
into
push
adc
lods
dec
jmp
shll
jle
stos
test
mov
stos
pop
xchg
icebp
pop
mov
clc
out
test
inc
roll
pop
lods
pop
enter
sub
enter
addb
stos
add
xor
and
je
hlt
fisubl
mov
xchg
and
mov
push
or
jg
jp
or
int
xchg
pusha
cmc
mov
cltd
outsl
and
aas
fdivrs
mov
jl
aas
in
setb
mov
not
lods
mov
and
daa
cmp
add
andl
add
xor
in
pushf
cs
in
mov
subb
cmc
andl
mov
mov
shrb
cli
pusha
outsb
aad
cmp
adc
add
push
arpl
cwtl
xor
push
pop
adc
mov
and
dec
stos
sahf
shlb
jp
mov
div
lcall
gs
out
loope
das
pop
sbb
cmpsb
nop
sub
lahf
addl
leave
imul
add
mov
push
jns
scas
pop
test
test
mov
pop
fdivrp
scas
sub
mov
in
sbb
in
mov
outsl
mov
sub
dec
push
int
jg
jmp
jbe
aas
dec
ds
mov
add
mov
xor
mov
jno
jae
mov
adc
mov
out
adc
xchg
cld
push
loop
not
jns
fndisi(8087
pusha
jecxz
xor
aad
cmp
loopne
das
ret
mov
clc
dec
es
js
aas
sbb
add
call
test
movsl
sar
lahf
cmpb
mov
mov
repz
jo
imul
and
xor
pop
push
push
and
and
loope
ds
xchg
jno
mov
loop
sub
je
push
mov
hlt
push
pushf
or
xor
jne,pt
cmp
sub
popf
xchg
es
and
and
rorl
outsl
pop
push
adc
mov
hlt
lock
negb
lock
pop
loop
addr16
push
dec
vpminsw
dec
xchg
insl
std
ret
stos
inc
adc
push
adc
pop
scas
mov
pop
dec
adc
mov
inc
outsl
fdivl
mov
pop
fld
loope
mov
push
in
repz
cmpsl
mov
das
or
loop
xchg
icebp
xor
addr16
sub
adc
or
mov
add
sub
lcall
fnsave
fldl
loop
cmp
push
aaa
mov
mov
mov
inc
sbb
xchg
lods
xor
cltd
aam
loope
mov
sahf
lea
jns
mov
mov
pop
bound
adc
jnp
cvtpi2ps
out
scas
and
or
mov
pop
pop
push
pop
lret
adc
jnp
movl
xor
sub
loope
hlt
mov
repz
jb
mov
rorl
icebp
stc
mov
fdivrp
xchg
in
jmp
out
lcall
push
das
xchg
inc
test
jl
movsl
mov
xor
lea
pushf
std
mov
inc
rolb
enter
mov
popa
outsb
dec
mov
xchg
rcll
inc
inc
dec
jbe
divb
mull
cmp
pop
dec
mov
dec
push
ja
shll
add
test
sbb
rclb
push
out
out
data16
or
xor
fiadds
cli
rorl
out
cmc
mov
sub
or
lret
and
xor
mov
dec
ja
das
inc
adc
imul
int
sbb
fadd
mov
dec
sbb
jnp
push
or
cltd
sbb
je
jbe
lea
das
mov
mov
sub
into
test
lcall
cli
xchg
subl
sub
sub
and
add
pop
push
cmc
push
sub
test
mov
pop
stos
shll
shl
mov
push
pop
insl
ljmp
testl
incb
dec
inc
inc
and
fnstsw
fmul
cmpsb
repnz
inc
ret
add
xor
mov
call
jb
add
cmp
into
leave
loope
add
mov
sub
cld
hlt
add
mov
outsl
fcom
data16
push
test
mov
shll
sahf
sub
leave
fists
cltd
pop
loop
add
jae
fcmovnbe
jmp
jp
mov
stos
fst
push
les
mov
push
sub
mov
or
ds
nop
mov
out
icebp
es
push
mov
int
sub
jb
xchg
and
adc
lods
push
dec
mov
arpl
cmc
ja
sub
xchg
push
add
mov
fwait
jg
nop
pusha
sbb
enter
and
lret
jb
daa
or
pop
jp
out
pop
jmp
mov
sbb
cmp
cmp
add
sbb
adc
jle
xchg
jnp
aam
lea
flds
mov
fsubr
push
scas
push
out
and
mov
aaa
adc
mov
push
sbbl
sarb
vpor
call
in
pusha
cmp
andb
or
fs
adc
decb
pop
fsub
mov
movsb
add
and
movsb
lods
repnz
dec
sbb
pop
out
cmp
aam
push
hlt
and
mov
stos
stos
mov
scas
lock
pushaw
add
ljmp
push
rolb
push
lock
xchg
inc
sbb
movsb
xor
push
mov
ret
test
scas
sbb
cmpsl
mov
mov
cmpsl
sar
filds
pushf
int3
aam
sbbl
dec
mov
jae
insl
jg
imul
clc
sub
iret
xchg
pushf
scas
stc
sub
sarl
jp
add
mov
movb
push
mov
test
push
hlt
rcrb
aad
or
mov
cmp
adc
mov
jno
add
movl
sub
imul
cmp
testb
dec
mov
shll
push
mov
enter
mov
imul
sub
inc
ficoms
fdivl
arpl
jmp
cli
lcall
or
loop
movaps
add
lcall
add
data16
sbb
pop
push
dec
push
inc
mov
addr16
pop
push
fbstp
flds
push
shrb
popa
call
int3
sahf
loop
sub
mov
iret
aas
push
cmc
daa
sub
je
sbb
xchg
je
mov
jmp
and
int3
and
pop
int
fildll
outsl
mov
push
inc
adc
mov
or
mov
xorb
or
rorl
cmp
mov
add
sbb
mov
movsbl
insb
jne
inc
fstp
pop
adc
inc
jbe
fbstp
imul
inc
dec
imulb
cli
jp
outsb
loope
jmp
mov
and
dec
call
xchg
sub
les
loope
add
stos
out
push
stc
mov
and
scas
xchg
clc
icebp
and
add
push
fists
fcmovnb
jnp
pop
xchg
dec
pop
sbbb
inc
arpl
adc
mov
mov
cli
cltd
repz
xlat
push
jae
and
aad
jecxz
mov
sub
cmpsl
sti
call
add
dec
cld
xchg
mov
dec
ficoms
cmpsb
idiv
adc
cwtl
cld
and
lods
push
cli
jae
out
pop
dec
outsb
add
cmp
cmp
jnp
xchg
sbb
adc
sti
pop
icebp
pop
xor
aam
adc
push
daa
jg
fs
sub
add
inc
inc
push
stc
arpl
fucomip
and
cmc
mov
test
aaa
arpl
shl
cmp
ds
lock
test
popf
movsb
adc
mov
das
clc
pop
push
bnd
in
xchg
add
jb
test
add
scas
insb
xchg
sbb
push
fstpt
dec
jae
scas
stos
dec
mov
jae
push
and
xchg
jle
inc
addr16
adc
adc
jbe
les
inc
mov
aam
sahf
ss
ja
xor
sbb
rep
or
cmp
outsl
mov
call
add
xor
test
push
mov
push
mov
mov
jecxz
mov
cmpsb
add
into
out
mov
pusha
dec
jp
aas
push
dec
pop
or
loopne
jnp
adc
dec
mov
inc
inc
aaa
aam
dec
mov
mov
xchg
mov
cld
cmp
pop
dec
inc
mov
push
fmul
push
stc
adc
repnz
or
mov
mov
gs
jmp
jbe
leave
xchg
xor
nop
add
or
xchg
cmc
sub
fs
pop
dec
inc
ds
pop
dec
adc
pop
mov
push
fnstcw
mov
pop
push
xor
dec
jns
leave
mov
ret
hlt
push
filds
mov
pop
data16
xor
ljmp
dec
arpl
add
jne
mov
xchg
sub
ror
mov
lret
mov
mov
pusha
sbb
dec
cmpsb
or
addr16
outsl
and
in
sbb
fadd
xchg
pushf
mov
push
lcall
loopne
mov
cli
pop
xor
dec
xor
mov
test
mov
mov
sub
mov
jnp
stos
cwtl
push
xlat
mov
mov
pop
xor
mov
or
push
je
cmpl
jns
es
into
rcrb
inc
test
ljmp
lcall
add
std
jo
pop
cmc
scas
mov
andl
rolb
inc
bound
or
scas
fiadds
decl
xlat
adc
jb
inc
lret
icebp
pop
fdivrs
jbe
fcmovb
out
and
fldenv
mov
or
mov
inc
ss
push
adc
push
outsb
inc
imul
jmp
test
insb
arpl
xchg
je
imul
js
cmp
loopne
and
dec
cmp
data16
add
xchg
test
test
mov
mov
mov
xor
daa
cmp
ja
aas
rorl
adc
lds
mov
inc
inc
lret
and
cmc
daa
jno
imull
subb
es
lea
lcall
int3
cmc
pop
cmp
scas
ret
pop
icebp
ja
aam
push
pop
sub
insl
xchg
fdivrp
andl
inc
push
and
mov
ret
fwait
adc
dec
jnp
sbb
dec
es
jo
jle
sahf
pop
ret
outsl
add
pop
dec
mov
push
mov
mov
add
cli
add
cmc
inc
jne
dec
inc
cli
xor
ret
dec
push
popa
pop
popa
xchg
mov
jnp,pn
pop
int3
xchg
mov
inc
or
or
pop
and
popl
push
push
cltd
add
dec
incl
add
push
cmp
test
cmpsl
or
inc
les
pop
xor
icebp
sbb
lahf
hlt
imul
std
push
ret
xchg
fsubr
cmp
sub
lods
in
adc
repz
mov
sahf
adc
xor
xlat
stos
sahf
and
add
dec
test
sarl
in
and
dec
mov
fmulp
mov
dec
and
mov
push
push
test
push
sbb
mov
push
push
mov
xchg
push
hlt
shl
mov
out
lds
repz
ror
mov
mov
lds
cltd
sbb
push
xor
sbb
scas
mov
jb
and
popf
jge
inc
neg
lock
or
cmp
sbb
lods
jne
data16
fs
mov
stos
loope
out
rorb
aam
inc
into
shr
push
xchg
push
pop
or
adc
test
pop
dec
sbb
jno
mov
mov
sub
adc
push
jmp
mov
jns
push
mov
fcompl
ss
inc
and
popf
shl
xor
pop
ficomps
add
movsl
jl
movb
mov
and
push
mov
lock
pop
mov
sbb
fsubrl
lcall
sbb
insl
aad
mov
pop
xor
or
add
pop
dec
pop
out
push
pop
add
scas
add
or
or
cmpsb
adc
inc
mov
jno
in
ja
cmp
add
inc
es
xchg
ja
inc
cmpsl
mov
sti
js
movsb
fistps
jo
insb
push
lods
mov
jl
add
pop
sbb
cs
fidivrl
icebp
mov
sub
in
push
test
addb
int
cwtl
sub
inc
mov
repnz
testb
outsb
movsl
out
lret
sarb
test
mov
inc
sbbl
fwait
push
cmp
adc
push
nop
enter
or
cwtl
pop
dec
cmp
mov
movsl
xor
nop
ss
cmp
xchg
xor
or
inc
mov
les
jl
data16
scas
out
inc
cli
jb
clc
adc
inc
sub
jg
push
xor
pop
js
xor
stos
sbb
fwait
into
xchg
push
mov
jl
sub
mov
dec
dec
test
fistpl
dec
fnstcw
stos
sub
loopne
lock
pop
jbe
clc
cmp
pushf
push
cmp
ljmp
ds
lret
and
cmp
fisubrs
dec
mov
mov
or
in
cmp
fstps
dec
or
mov
les
jg
enter
inc
dec
mov
jge
push
outsb
adc
aad
xor
call
test
int3
addb
jge
outsl
fdivs
sti
shlb
les
iret
jno
in
sub
out
mov
insl
push
ljmp
jle
mov
sahf
cmc
pop
adc
cld
sub
mov
add
jmp
xor
dec
mov
sub
fisubs
inc
ret
loopne
orb
jg
test
pusha
int
aam
aaa
pop
or
scas
pop
xchg
add
shufps
andl
mov
adc
adc
pushf
push
xchg
jae
lret
data16
jae
jnp
xor
sub
jbe
add
aaa
mov
xchg
sub
cmpsl
cmp
scas
mov
mov
pop
jno
push
mov
adc
xor
ficomps
mov
or
adc
fwait
imull
jle
pop
outsb
sub
cmp
and
in
xor
adc
lret
imul
mov
and
aaa
repz
cmp
mov
xor
call
in
lods
or
inc
lcall
loopne
inc
outsb
pusha
sbb
push
hlt
push
xchg
pusha
jne
inc
je
repz
xchg
or
mov
insb
std
mov
mov
or
stc
out
mov
jl
jg
mov
jl
insb
mov
sahf
fnstenv
bound
cltd
in
adc
xchg
xchg
sbb
mov
xchg
pop
push
icebp
jbe
test
pop
dec
push
jb
daa
mov
mov
push
jge
lahf
call
or
adcb
mov
adc
cltd
jnp
mov
test
mov
inc
imul
incb
push
jo
add
xchg
fstpt
mov
xor
rclb
incb
sub
push
sti
out
jns
dec
adcl
lret
int3
push
mov
jg
lods
or
mov
jne
push
dec
push
icebp
mov
pop
mov
push
jb
dec
incb
mov
popa
dec
out
pop
pop
push
stc
mov
mov
push
out
std
fiadds
or
pusha
repz
mov
cmpsl
lahf
or
jb
jmp
aad
clc
cltd
pop
insl
decl
push
movsb
pop
std
ja
lret
dec
out
fcmovbe
aad
xchg
into
and
insl
cmp
fistpll
out
adc
std
les
push
jns
loop
stos
je
pop
jno
xlat
add
jp
stos
adc
mov
out
sub
add
pop
pop
daa
push
fisubrs
add
jecxz
cs
dec
pop
lds
xor
das
or
add
loopne
cmovp
mov
in
or
in
xor
adc
daa
push
insl
jmp
cwtl
inc
cmove
stos
out
pop
mov
call
mov
dec
pop
lahf
dec
cmp
jbe
push
mov
movsb
and
dec
xor
sub
in
iret
scas
fidivl
pop
push
mov
adc
cmp
paddusw
jp
out
jg
cmc
loope
shl
jno
jl
push
out
adc
aaa
loope
nop
dec
cmp
ja
out
and
pop
call
loopne
inc
test
cmp
pop
jg
push
jecxz
mov
cmpb
xlat
daa
lret
push
jne
sti
mov
cmp
jns
cltd
pop
xor
or
fisubs
fsubrs
mov
iret
jns
jmp
jo
repz
sbb
sub
mov
sub
rolb
or
pop
add
mov
mov
and
mov
dec
dec
cwtl
pop
into
and
xor
mov
inc
arpl
mov
cli
xor
repnz
push
movsl
ss
iret
shlb
inc
adc
xchg
mov
ret
add
cmp
cmp
mov
sbb
adc
popf
sub
push
xlat
sbb
jmp
sbb
test
or
lock
inc
enter
xchg
jl
movsl
inc
pop
sahf
lock
cwtl
mov
iret
dec
xchg
dec
pop
push
dec
sbbb
subb
loop
or
jns
mov
ret
inc
lds
mov
out
leave
out
repz
cmc
daa
inc
jmp
and
jns
test
rolb
mov
inc
cmp
mov
pusha
addb
push
mov
test
mov
or
bound
push
sahf
loopne
orb
icebp
iret
sbb
lods
mov
adc
dec
cs
mov
pop
mov
icebp
adc
sub
sub
jne
inc
andl
je
clc
insl
mov
add
jp
jno
mov
cmp
mov
lcall
adc
jb
sub
pop
in
fdivrs
or
scas
fwait
push
push
or
test
sub
mov
popl
mov
cld
xor
enter
test
stos
or
daa
cmp
inc
adcb
cmp
scas
inc
movsb
pop
mov
scas
inc
stos
lds
mov
sub
add
ret
repz
and
jae
out
mov
push
jmp
jne
xor
cmp
mov
out
cmp
in
lret
lcall
in
repz
fcom
adcb
jmp
jecxz
push
fiadds
sbb
inc
lret
push
mov
push
dec
adc
incb
mov
addb
mov
sbb
jmp
int
and
add
push
push
test
sti
add
sub
xor
adc
sub
fidivs
and
mov
aas
out
outsb
sbb
push
dec
ljmp
and
outsb
or
negb
or
jo
aas
dec
cmpsb
negl
mov
add
sbb
cmp
cmp
clc
jo
push
push
pop
pop
scas
lcall
insl
jmp
mov
shll
sub
fdivs
push
sub
jb
push
loop
iret
lcall
add
mov
fs
repnz
outsl
pop
mov
fdivl
xor
sbbl
daa
xchg
jns
pop
push
lahf
pushf
mov
cmpsl
pop
out
adc
jmp
ret
xchg
pop
ret
mov
imul
std
fs
sub
xorl
inc
outsb
jmp
mov
mov
imul
mov
nop
pop
arpl
sub
or
cmp
out
adc
aas
in
push
sub
fnstsw
ja
push
mov
push
outsl
data16
iret
and
lock
in
cmpsl
pop
fmull
mov
fstps
dec
pop
ljmp
mov
xor
imul
xor
pop
pop
jg
push
sub
adc
cltd
or
ljmp
shld
enter
sarl
daa
jp
pop
lret
push
or
cmpsb
imul
std
or
jne
mov
adc
ss
loop
jge
mov
cmp
cmpsb
and
push
mov
sub
shll
stos
test
or
cmp
loop
cmp
mov
pop
fcmove
push
jg
push
push
and
sti
cmpl
sub
jp
push
dec
fidivrs
stc
dec
test
sbb
dec
lods
or
aas
es
imul
mov
loopne
jnp
sbb
rclb
mov
inc
jl
ja
push
notl
pop
pop
jne
das
inc
jb
push
jno
add
sub
xor
mov
fwait
xor
sarl
fdivp
fwait
push
pop
in
jo
jae
jg
inc
aas
mov
jecxz
push
int
divl
and
nop
jmp
pop
pop
cs
jae
addr16
test
inc
lret
inc
sub
pop
fimuls
daa
movsb
outsl
loope
stos
xchg
clc
sbb
shrb
es
sub
imul
clc
or
dec
sub
movsl
in
pop
jne
jnp
xor
adc
add
shll
stos
xchg
jnp
mov
inc
mov
sbb
incl
mov
les
adc
xorl
jle
or
cmpsb
imul
push
mov
mov
idivb
sti
out
out
lcall
ret
mov
adc
mov
clc
mov
mov
test
sti
lahf
xchg
pusha
inc
nop
aas
dec
dec
lods
mov
imul
or
or
sub
inc
mov
es
xchg
loope
stos
ds
movsl
in
pop
mov
das
cmpsb
and
xor
xor
and
popa
push
mov
xor
xor
inc
insl
rcl
and
mov
lahf
inc
push
dec
cs
inc
lret
inc
jp
aas
jnp
push
and
lret
inc
xor
push
pop
cmpsb
jmp
jo
out
mov
repnz
cltd
mov
fimull
mov
mov
push
cli
inc
cmp
sub
or
adc
adc
rorl
cs
enter
cmpsb
loope
sbb
mov
xchg
outsb
xchg
xchg
push
and
cs
std
inc
jno
test
lods
leave
mov
arpl
mov
stos
mov
push
cmp
sbb
fucom
xchg
movsb
pop
jmp
scas
push
mov
inc
ja
out
push
test
fs
aad
xchg
js
pop
jno
sub
jbe
enter
jns
cmpsb
dec
stos
adc
pop
push
mov
fstpl
cli
cli
loop
stc
popa
mov
int
mov
dec
and
xor
test
mov
movsl
jg
push
push
adc
sub
add
sbb
add
aas
popa
push
sub
ja
insl
fdivrs
add
gs
push
push
sbb
pop
jg
fidivl
lock
xchg
dec
fs
enter
pop
xrelease
cld
out
jg
loopne
xor
sub
dec
stos
mov
clc
in
xor
push
sbb
xor
icebp
rep
add
inc
subb
mull
adc
xor
dec
dec
xlat
xor
jp
cmp
jnp
adcl
test
mov
fsubs
lds
pop
inc
fldcw
fwait
lcall
cmp
cmc
sub
cs
inc
repnz
addb
jecxz
jae
push
xor
adc
aam
push
rcrb
mov
fsubr
inc
js
sti
ds
xchg
orb
rol
sbbl
cli
add
dec
mov
push
mulb
sbb
pop
gs
jae
adcl
bound
inc
jmp
mov
jmp
and
fnstenv
fstps
sbb
sbb
ret
ss
movsl
sbb
adc
leave
fcoml
inc
or
adc
xor
inc
xor
jbe
or
xchg
pop
mov
outsl
fdivrs
push
sbb
rcrb
jmp
mov
dec
jle
mov
pop
jae
test
notw
pop
dec
push
dec
sahf
out
dec
out
popa
and
push
xor
xchg
pop
into
js
sbb
mov
shlb
dec
ja
push
cmpl
aaa
neg
cmc
jbe
inc
lret
pop
fiadds
loope
sub
je
cmp
inc
sti
dec
jne
mov
xchg
mov
jp,pn
into
movsl
stc
xchg
sbb
add
jecxz
mov
in
jne
push
inc
sub
dec
push
mov
fsubrl
add
mov
and
lea
pop
jl
and
cmc
out
cmpl
sarb
popa
lock
sbb
adc
mov
rep
sub
xchg
sti
bound
xchg
dec
add
jmp
stos
mov
push
not
andl
addr16
xchg
push
jg
jp,pt
pop
ss
movl
mov
shrb
pusha
push
aam
or
mov
mov
das
mov
sbb
cld
jecxz
or
nop
pop
xchg
fildll
xlat
repnz
pop
mov
fcomps
sbb
imul
sti
jmp
mov
cmp
xorl
testb
inc
rorl
cmp
int3
xorb
mov
out
repnz
popa
data16
inc
jne
imul
lahf
testl
ds
fistpll
aad
cmpsb
fistpl
in
jge
daa
dec
mov
roll
cmp
sbb
inc
sti
out
and
pandn
mov
stos
xorl
dec
adc
jnp
or
jmp
daa
push
push
test
les
jecxz
xor
add
and
incl
and
add
mov
pop
xor
icebp
ficompl
adc
fcomip
add
scas
push
mov
push
test
mov
out
mov
sarl
lcall
adcl
lods
cli
mov
add
dec
and
jle
pushf
push
insb
dec
xlat
dec
loop
mov
xchg
mov
mov
pop
das
cmp
adc
cmpsb
or
filds
xor
mov
sbb
sbb
out
pushf
fs
xchg
pop
call
cmpsb
and
jne
repnz
out
mov
push
and
sub
lods
jmp
lcall
inc
outsl
add
call
or
std
data16
sbb
inc
push
and
mov
inc
pop
jae
and
dec
je
xchg
pop
inc
cmp
add
xchg
pushf
test
mov
pop
movsl
cmp
xor
shlb
push
out
out
push
push
je
add
cltd
stc
mov
scas
mov
inc
xlat
and
ljmp
mov
sub
cmp
rcr
sub
loopne
std
mov
flds
gs
add
arpl
rcr
loope
xor
movl
insb
cmp
lock
push
pop
fs
mov
mov
jns
scas
pop
imul
push
fstl
xor
ds
jp
xchg
sbb
and
inc
cmp
sahf
push
mov
dec
cmpsb
out
xchg
sbb
insl
jns
cmp
sbb
es
gs
cmp
xchg
push
sbb
jp
xor
mov
jns
aaa
in
in
adc
jo
jb
movsb
daa
sahf
test
ss
push
push
movsb
imul
xchg
mov
mov
add
pop
stos
dec
pop
movsb
repnz
pop
xchg
and
idivb
loope
add
hlt
jae
cwtl
cmp
adc
xchg
sub
pop
inc
push
push
pop
jg
inc
xor
adc
push
cld
insb
popfw
xor
lahf
cmp
pop
lcall
or
lcall
sbb
mov
lahf
or
pop
das
insb
repnz
lods
jp
clc
pop
inc
jmp
jae
mov
ja
and
loop
incb
stos
inc
pop
lods
jle
mov
lods
dec
mov
pop
jle
dec
bound
fs
rcll
inc
loope
data16
push
push
inc
mov
mov
out
aaa
roll
xor
adc
arpl
mov
pop
mov
addb
add
dec
pusha
lods
outsb
lret
mov
inc
imul
pop
fstp
cwtl
cli
int3
movsb
stos
jmp
dec
and
fidivs
ljmp
add
add
adc
mov
sub
xchg
pusha
push
cld
xchg
cmp
push
scas
cli
out
jmp
mov
sbb
sub
mov
add
and
xlat
mov
xor
or
fistpll
sti
cmp
loope
dec
cmpsl
xchg
aam
lahf
lret
xchg
dec
jno
cmp
popa
fdivrs
adc
mov
popa
add
xchg
jne
add
fidivs
or
sbb
and
insl
movsb
aad
sub
in
pop
mov
mov
pop
sbb
test
sti
cmp
jge
push
loope
pop
shr
fildl
aas
add
pop
js
xlat
jae
hlt
loop
inc
jno
xchg
in
cmp
cltd
int
enter
jmp
or
ficoms
adc
ss
test
imul
sub
or
cmpsb
sbb
cmpsb
int
clc
dec
lods
std
std
push
loope
pop
sahf
pop
outsl
test
das
xor
cmpsb
cmpb
sub
mov
repnz
clc
das
ss
ss
in
ret
rclb
jp
cld
push
jge
xchg
mov
hlt
mov
add
out
imul
jmp
or
int3
sbb
int
mov
and
xor
dec
shlb
idivb
andl
dec
stos
jmp
enter
xbegin
and
icebp
inc
xor
or
add
stos
imulb
mov
loop
out
imul
or
negl
into
push
push
cmc
filds
jle
pop
adc
mov
sub
mov
idivl
ss
adc
lret
into
les
push
imul
sub
ret
jo
aas
mov
pop
and
jbe,pt
fwait
sub
int3
jmp
and
addr16
inc
lahf
lea
push
cli
jg
mul
jbe
jecxz
sub
mov
inc
mov
push
ljmp
test
test
insl
dec
je
sbb
out
imul
add
mov
push
and
mov
xor
outsb
push
sbb
loop
jnp
into
jge
mov
ja
in
mov
push
test
jge
inc
xchg
aam
xor
in
lret
inc
lahf
imul
sbb
inc
mov
nop
mov
sub
jns
out
leave
inc
xchg
outsb
inc
shlb
js
scas
rcrb
aaa
jmp
lock
push
add
dec
dec
outsb
add
and
push
fldcw
inc
arpl
lods
pop
aad
or
push
rclb
dec
lea
sub
or
leavew
sar
inc
xor
mov
in
cld
and
inc
pop
xchg
daa
inc
xchg
test
lds
push
and
mov
xor
jns
sbb
in
mov
adc
xor
adc
mov
inc
iret
lods
xchg
dec
enter
adcw
cwtl
pop
xlat
pop
adc
cltd
jnp
add
je
in
xchg
scas
imul
cmp
icebp
sbb
loop
pop
call
out
adc
gs
xchg
ds
or
mov
mov
enter
cmpb
mov
hlt
sbb
pop
cmp
mov
xchg
pop
out
mov
enter
jne
test
fcompl
push
xchg
into
push
cmp
dec
add
ret
imul
popa
push
mov
fwait
jne
sbb
inc
xchg
dec
shlb
cltd
jge
xor
int3
sahf
mov
pop
pop
ljmp
mov
mov
push
push
mov
cltd
sbb
ljmp
and
leave
or
sub
jno
mov
ret
or
ljmp
stos
sub
mov
fisubs
cmp
push
mov
adc
or
sbb
sub
push
jle
lret
jp
jae
jnp
arpl
inc
lahf
mov
popa
add
sub
cmp
xor
xor
pop
push
push
fstpt
int
push
mov
dec
push
fwait
sbb
add
fwait
mov
in
stos
add
fbld
mov
inc
push
imul
cmp
push
mov
sub
cmp
xor
test
pop
sbb
pop
push
js
lds
mov
iret
adc
xor
mov
imul
loope
lret
jecxz
cld
xchg
push
xchg
ret
sbb
lret
xor
jno
out
jp
adc
inc
and
or
mov
insl
iret
ja
mov
xchg
jle,pn
mov
scas
push
mov
push
jl
iret
out
in
or
jbe
dec
push
std
cmp
popa
in
adc
out
and
fldl
icebp
pop
and
xlat
xchg
movsl
xchg
push
sub
shr
hlt
add
mov
repnz
iret
fs
cltd
mov
jno
pusha
fldenv
aaa
pop
jp
mov
bound
and
les
dec
mov
push
mov
fcomps
push
pop
cmpsl
fnstenv
push
arpl
nop
inc
cmp
adc
test
adc
cmp
icebp
sub
int
sbb
sub
push
and
stos
sti
pop
sbb
mov
fwait
dec
mov
popa
inc
jl
movsl
xchg
aaa
pop
cmp
test
pop
rolb
pop
out
push
ss
bound
fistpl
mov
insl
std
movsb
xchg
outsl
cmp
inc
push
mov
mov
or
push
ret
lods
xor
pop
and
sbb
rcrl
lock
mov
push
mov
inc
lods
push
xor
jp
dec
iret
mov
xor
push
das
add
pop
xor
scas
loope
sbb
pop
int
lods
jns
test
mov
push
or
jl
imul
jle
jne
sub
adc
or
leave
mov
xor
adc
testb
xchg
pusha
mov
add
adc
call
dec
jmp
and
jne
orl
daa
je
loopne
mov
and
sub
fwait
jno
loopne
decb
out
mov
enter
dec
pop
xor
mov
push
cltd
es
movsb
add
or
cwtl
jle
xor
outsb
sahf
cmp
jl
icebp
xchg
xor
rol
call
inc
rolb
mov
dec
xchg
mov
sbb
jae
push
sub
cmc
int
cld
jae
inc
imul
test
adc
scas
inc
or
cmp
test
jecxz
inc
fisttps
lods
jg
xchg
or
loope
ds
icebp
pop
test
mov
xor
xchg
test
stos
mov
rcl
push
sbb
jnp,pt
fs
mov
or
jb
mov
and
dec
push
add
pusha
loopne
sub
das
or
xor
push
xor
jecxz
mov
mov
and
xor
sbb
test
inc
fcomps
pop
push
fcmovnb
cld
mov
jne
daa
dec
cmp
or
lods
jo
lea
jge
and
scas
movsb
idivl
adc
adc
jb
es
mov
adc
ds
lds
unpckhps
adc
mov
mov
xor
out
xchg
scas
out
mov
sarl
dec
int
inc
cmp
cmp
out
mov
and
sub
test
push
ror
or
sub
push
cmp
faddl
xchg
jns
pop
test
add
cmp
int
jno
sbb
clc
movsl
in
cmp
ret
lea
inc
aam
xchg
clc
jb
sbb
jecxz
popa
xorb
add
add
jne
int3
cmp
cmp
mov
mov
sub
fildll
mov
or
out
loop
pop
add
jnp
rcll
scas
mov
fisubrs
lcall
mov
xorb
lds
dec
mov
in
mov
xor
or
mov
mov
scas
adc
in
cmpsb
leave
insb
into
dec
andb
jo
jp
jp
fsubr
or
hlt
or
imulb
mov
jge
mov
mov
rolb
or
sub
pop
jle
push
push
mov
lret
xor
sbb
rorl
nop
mov
cmp
mov
xor
mov
test
mov
insl
aad
jle
lods
cmp
movsb
jge
adc
dec
ss
mov
jo
rorb
fisubl
inc
push
mov
fdivl
sub
fimull
mov
sbb
mov
ds
int
mov
xor
rclb
sub
xchg
xor
mov
sbb
inc
mov
mov
mov
cltd
fldenv
popf
int
adc
jne
mov
por
cmp
outsb
push
fcoms
scas
rclb
stos
in
cmc
pop
popf
xor
popf
pop
mov
or
repz
mov
imul
inc
dec
dec
fwait
xchg
mov
sub
and
sar
inc
stos
jmp
cmp
mov
dec
cmp
je
pop
insb
sub
shrb
addl
lahf
sbb
mov
pop
cld
es
test
add
adc
shrl
mov
lahf
repz
xorl
push
ds
sub
adc
roll
xchg
sub
call
int
imul
adc
adc
push
insb
mov
push
xchg
jecxz
sbb
fildll
sbb
dec
mov
lods
dec
in
pop
mov
mov
and
pop
stos
sub
pop
cmp
mov
data16
sbb
add
pushf
test
mov
and
cmp
je
mov
movsb
xchg
push
gs
stc
scas
and
cmpsl
mov
mov
sbb
ja
movsb
inc
xchg
notb
fdivl
xchg
push
jb
jp
pop
jbe
es
cmp
movsb
lds
into
xchg
shrl
pushl
divl
cli
inc
subb
mov
sub
leave
inc
dec
xchg
sbb
dec
xor
scas
cwtl
cmpsb
jge
push
xchg
nop
mov
dec
xor
lret
aam
push
ljmp
or
fimull
xor
sub
addl
out
out
aam
sub
int
popf
lds
push
sub
sub
and
mov
push
add
je
je
pushf
fcompl
in
xchg
shlb
movsl
mov
imul
mov
cmp
add
adc
filds
in
push
xlat
lock
das
pop
xor
sub
int
scas
and
lahf
inc
and
pop
lea
stos
mov
lods
jnp
outsb
js
or
xchg
fwait
movsl
dec
loop
clc
addr16
shlb
mov
and
insl
xor
adc
inc
ss
xlat
and
sbb
mov
daa
rcrl
cmpsl
adcl
jp
xchg
ret
daa
je
mov
sub
sub
fsub
mov
aaa
mov
aam
xchg
push
add
sub
fwait
mov
rorl
pop
aam
imull
pushf
nop
and
rcr
stos
cmp
cmp
cmp
in
jb
jmp
icebp
and
out
repz
jp
mov
cmc
std
pop
xchg
repnz
dec
mov
xchg
int3
scas
inc
movsb
push
dec
aam
adcl
pop
lock
fldl
jmp
call
rcr
pop
das
inc
js
push
mov
jae
jl
mov
mov
ss
scas
jle
dec
mov
rcrb
add
pop
out
mov
push
dec
scas
push
mov
push
test
push
aas
in
int3
outsb
out
ja
out
mov
xor
adc
dec
in
xor
aas
sahf
pop
data16
aad
sbb
out
iret
mov
in
imul
sbb
inc
pop
push
popa
stos
or
sbb
lds
pop
fs
nop
in
into
test
je
xor
mov
in
out
pop
daa
subl
xor
push
rorl
sahf
mov
and
xchg
jno
and
shr
pop
xchg
gs
loop
jp
imul
xor
int3
cmpsb
scas
rcl
sub
mov
add
mov
test
andl
and
clc
ja
dec
enter
ficoms
pop
nop
bound
cmp
pop
and
jle
xorb
xor
lretw
lret
lock
xchg
popf
testl
pop
jb
xor
cmp
cmpsl
and
xchg
ret
inc
in
pushf
mov
xor
ljmp
jmp
fwait
ret
xchg
iret
or
sbbl
or
fadd
nop
aaa
hlt
iret
lret
test
cmp
xor
mov
fmul
ds
outsb
leave
xor
pop
movsl
push
push
add
pop
loop
insb
add
data16
arpl
iret
pop
xchg
pop
jge
test
fbld
rol
fsubr
lcall
ljmp
jmp
mov
jp
add
mov
outsl
enter
ss
mov
repz
bound
ret
push
dec
and
pop
mov
iret
jecxz
dec
sbb
xchg
sbb
lds
dec
xor
pushf
pop
jo
int3
leave
sub
bswap
sbb
fs
setns
iret
iret
mov
stos
xor
loope
jno
mov
outsb
mov
iret
push
movsb
imul
dec
in
add
scas
xchg
xor
imul
sbb
icebp
mov
aam
jl
in
dec
mov
test
mov
ret
cmp
fwait
jno
mov
lahf
lahf
es
jns
mov
xchg
sbb
pop
inc
insb
loop
daa
inc
mov
cmpsl
ljmp
es
sub
dec
lods
dec
xchg
mov
negb
movsb
mov
cld
fbld
mov
mov
mov
pop
sub
in
pop
jns
cmp
pusha
push
mov
sbb
sub
repz
hlt
inc
iret
fcmove
sbb
insb
xchg
dec
jnp
lds
das
or
loopne
jae
cmp
xor
mov
push
xchg
shl
aas
xor
imul
dec
sbb
xchg
pop
test
push
test
incb
into
dec
add
imull
inc
unpcklps
push
jb
sub
sbb
das
rorb
fcmovnu
lcall
daa
xor
lods
pusha
cmpsb
mov
inc
imul
adc
add
mul
add
sbb
mov
lock
and
cli
cli
push
xchg
pop
aad
dec
xchg
repz
cmpsl
dec
push
das
or
mov
clc
xchg
dec
loopne
push
cmpsb
stos
in
outsb
mov
xchg
fmuls
divb
insl
lea
mov
or
es
sbb
pop
jmp
fisttps
scas
xor
mov
mov
outsb
les
and
push
in
push
cmpsl
xchg
out
pop
xlat
xor
fistl
out
fs
jge
pop
or
out
sti
xor
jecxz
or
sub
aad
fnstsw
adc
inc
pop
mov
pop
adc
xchg
rol
out
js
or
or
push
or
inc
sub
pusha
scas
and
mov
sub
daa
subl
lret
call
test
xchg
out
jl
mov
es
stos
cmp
xor
cmp
xor
mov
jno
sti
pop
or
dec
cmp
push
insb
cmp
dec
add
pop
and
pop
pmulhw
jae
or
push
sti
xor
nopl
sbb
push
insb
or
pop
gs
xchg
pop
sahf
add
xchg
lds
sbb
jle
cmpsb
cmp
xchg
mov
push
ret
mov
outsb
testl
fwait
aad
in
insl
icebp
scas
cvtps2pd
test
data16
jns
xor
lea
imul
pop
cmp
cli
xchg
push
ss
je
lahf
jge
adc
lods
mov
push
inc
mov
add
or
jp
mov
fsubrl
movsb
mov
pop
sti
xor
mov
mov
adc
mov
ret
fcoml
lods
mov
sub
out
pop
lods
sbb
je
and
out
sub
aam
jb
imul
push
pop
pop
sti
lret
sbb
push
adc
and
je
loope
dec
mov
les
dec
shl
pushf
clc
jmp
or
sub
adcl
daa
push
xchg
fxch
cs
repz
es
add
push
pop
jecxz
xchg
sbb
mov
sti
dec
xlat
and
std
push
xchg
inc
lods
jg
loopne
inc
rcll
add
jnp
xor
inc
mov
mov
add
popa
xorl
mov
jne
xchg
daa
cmp
push
fwait
sub
out
cmp
sbb
mov
jae
popf
repz
cmc
test
pop
or
jg
rorb
test
and
mov
lcall
in
pusha
sub
sub
pop
sbb
push
out
sbb
shll
inc
ljmp
insl
and
jl
repnz
lret
pop
xor
ja
sub
xlat
lods
mov
pop
xchg
push
fisttps
aam
inc
mov
cmp
jmp
rcrb
or
pop
and
mov
adc
lahf
fcmovnb
adc
ficompl
mov
pop
orb
or
not
mov
fs
addr16
repz
cld
pop
pop
inc
push
outsb
mov
pop
cmp
subl
mov
xchg
repz
shll
xchg
xor
pop
fs
rcr
sarl
dec
mov
adcl
push
test
repnz
or
jae
sub
lret
lock
jno
divl
jmp
std
mov
mov
lds
sbb
sbb
mov
in
push
sub
jmp
into
jg
pop
adc
jnp
jl
int
mov
sbb
pop
pusha
clc
out
fdivrs
pop
cwtl
dec
cltd
je
xchg
and
mov
loop
or
and
xchg
sbb
roll
js
subb
jns
nop
insb
jmp
daa
sub
into
push
cmp
inc
hlt
adc
or
cwtd
pop
cli
sbb
lret
mov
movsb
jl
xor
in
sbb
inc
loop
inc
jbe
push
insl
dec
dec
cmpsl
rcrl
dec
jecxz
outsl
js
lds
imul
xchg
lret
lcall
lods
lods
lahf
cmp
ljmp
xchg
push
xor
sbb
add
or
dec
and
ss
xorl
mov
dec
sub
mov
aad
mov
and
xchg
cmp
shlb
and
shlb
sub
pop
popa
pop
fsubl
jbe
mov
sub
or
adc
mov
sub
decl
out
mov
insb
and
loop
push
sub
lods
mov
xor
xchg
scas
mov
stos
mov
inc
dec
je
orb
sbb
dec
pushf
dec
adc
in
inc
jle
ja
aaa
xor
jb
call
sarb
in
adc
jg
xchg
imul
jle
cld
inc
mov
inc
lock
sti
popf
mov
mov
dec
pop
shrb
jmp
xchg
or
repz
sub
mov
ss
dec
add
shlb
push
add
lea
and
inc
cmp
jae
inc
push
mov
push
mov
pop
push
out
pop
cli
pop
pop
sahf
mov
gs
and
inc
fcoml
sbb
mov
pop
into
mov
xchg
mov
adc
fdivrs
addl
lock
aaa
mov
jle
jp
mov
imul
mov
fucomi
jo
or
sti
outsb
les
in
jmp
pop
fwait
jns
xor
rcll
jg
push
enter
mov
lock
mov
push
stos
movsb
movsl
popf
jp
jl
push
cld
es
ss
or
push
scas
cmp
push
rcl
je
xchg
aad
scas
xor
lcall
sbb
xchg
adc
insl
inc
push
adc
push
stos
iret
and
xchg
popa
push
arpl
aas
test
cwtl
adc
dec
jns
inc
fstpl
out
mov
dec
in
ljmp
pop
lcall
pop
jecxz
cmp
loope
aas
pop
inc
jno
or
std
rcrl
or
dec
cmpsb
jno
out
pop
aaa
adc
sub
lret
and
mov
push
cmp
movsl
pusha
jns
xchg
ja
aad
push
mov
mov
dec
cmp
lahf
add
aaa
add
orl
ds
test
int3
sbb
sbb
hlt
adc
fisttps
stos
insb
push
iret
push
mov
mov
and
jb
jmp
out
jmp
rcrb
or
cld
mov
test
gs
js
or
pop
pop
pop
push
aam
lea
fisttpll
pop
push
sub
jecxz
sbb
dec
sbb
and
aas
hlt
pop
jb
retw
mov
xchg
loopne
pop
pop
addr16
xorb
mov
xchg
jl
ljmp
mov
push
inc
fldt
xor
mov
inc
je
add
xchg
lock
test
inc
leave
push
sub
xchg
cmpsl
mov
sbb
shlb
or
pop
mov
mov
or
lods
mov
or
divb
mov
cmpsb
sub
ja
les
pop
pusha
in
push
test
cltd
push
lods
sub
pop
mov
int
pop
sbb
gs
xlat
adc
inc
cwtl
jecxz
and
sahf
icebp
sti
mov
pushf
add
mov
out
scas
shrl
mov
xor
dec
xlat
and
imul
mov
lahf
or
rcrb
dec
sbb
cld
inc
xchg
imul
lods
mov
dec
dec
lock
inc
mov
arpl
int
sbb
mov
inc
cmp
test
int3
jmp
or
mov
mov
sub
and
jns
addr16
cmp
rcrb
push
mov
mov
mov
lea
dec
sbbb
xchg
lret
imul
pop
shrl
push
mov
push
dec
mov
andl
fsubrs
xorb
dec
je
mov
mov
int
inc
fsubrl
push
push
sub
dec
lcall
xchg
rcll
ficoml
xchg
ljmp
mov
push
les
ret
test
mov
shlb
aad
je
and
clc
cwtl
mov
and
add
int
xchg
loope
mov
rdseed
pop
inc
cmp
xchg
stos
pop
and
into
fistps
xor
ds
and
lret
fmuls
cmp
iret
adc
sbb
ficoms
bnd
add
xchg
jmp
pop
or
stos
add
movsl
pop
stos
mov
gs
pushf
in
jns
and
add
popf
mov
pop
sbb
sbb
in
aaa
sahf
mov
mov
sahf
out
push
mov
mov
inc
sub
shrl
pop
sbb
nop
imul
idivb
imull
lock
xlat
stos
lods
xchg
idiv
jmp
mov
add
scas
imul
out
mulb
push
xchg
mov
int3
je
pop
aam
lcall
push
fdivs
out
push
mov
mov
sahf
arpl
and
popf
fcomp
push
test
add
fcmovnbe
addr16
loopne
mov
jb
fistpll
sbb
mov
subl
xchg
sbb
xchg
push
mov
into
data16
mov
les
sti
lret
cli
jmp
dec
clc
push
sbb
in
cmp
mov
testl
stc
mov
inc
cmc
addr16
inc
fiadds
add
std
lret
and
arpl
mov
dec
add
xchg
dec
xchg
or
jecxz
pop
enter
dec
lods
or
ss
or
out
jne
and
cli
orl
jns
je
push
std
push
xor
mov
inc
jp
add
notb
mull
add
or
mov
fsts
imul
cmp
ds
or
insb
popl
sbb
outsl
cli
and
mov
add
sub
ja
push
insl
add
sub
sarb
dec
stc
and
lret
std
aad
jmp
js
jle
jmp
stc
mov
int
in
lds
mov
stos
push
cwtl
sub
adc
test
sub
lret
insl
push
lret
mov
pop
pop
in
fnsave
cmp
or
cltd
jae
mov
sbb
adc
xlat
jno
and
jecxz
jge
int
or
aad
insb
lods
cwtl
push
sub
inc
mov
jge
bound
adc
scas
push
pop
les
rol
dec
jns
cwtl
mov
daa
add
aam
add
mov
dec
lods
dec
push
shl
cmpsl
mov
outsl
push
adc
popa
xchg
add
fisttps
insl
cld
dec
out
mov
gs
out
daa
sbb
mov
inc
insb
imul
jp
dec
jnp
mov
mov
scas
ret
jl
push
push
mov
test
mov
push
outsb
push
lds
inc
mov
bound
dec
mov
ret
addb
xor
lret
push
les
push
push
inc
outsb
test
xchg
jb
icebp
xor
jmp
iret
shl
aaa
mov
mov
pop
xor
xchg
and
mov
andb
out
mull
imul
mov
ret
xchg
popa
out
mov
add
cmc
and
js
loope
scas
cmp
jbe
test
aad
mov
sbb
insb
xlat
mov
adc
mov
lock
fwait
pop
mov
mov
insb
xchg
pushf
mov
or
ret
imul
adc
pop
jg
jae
pop
cld
jecxz
xchg
fnstenv
jp
int3
lock
inc
mov
mov
ljmp
push
mov
call
xchg
les
sub
mov
fnstcw
add
sbb
out
jns
xchg
xchg
ret
xchg
and
mov
test
cmc
cmpb
jle
stc
jge
daa
sbb
jmp
push
pop
add
xor
cmp
or
adc
arpl
pop
mov
in
arpl
pop
xchg
inc
stos
dec
andb
mov
aam
repnz
inc
push
jbe
pop
cli
xlat
aaa
mov
enter
imul
out
in
pop
lea
jle
out
jmp
stos
add
es
outsl
fsubr
xchg
cmpsb
iret
mov
sarl
cmp
shll
cmp
sbb
das
mov
iret
roll
push
cwtl
imul
jbe
ss
and
enter
fs
lret
mov
mov
out
mov
leave
clc
and
xchg
outsl
test
inc
cmp
inc
ljmp
cmp
mov
ss
leave
lods
inc
into
bound
add
lret
out
sub
in
repnz
loope
xchg
std
adc
std
xorb
jo
call
gs
adc
sbb
or
inc
xchg
mov
rclb
or
or
mov
call
push
mov
sbb
xchg
mov
jbe
push
push
rclb
push
lret
push
mov
in
pminsw
popf
cmp
shll
dec
pop
mov
cli
outsl
addl
sbb
dec
xor
arpl
lods
movsl
test
gs
outsb
jo
stc
mov
pusha
test
dec
in
out
add
dec
push
loop
and
fnstenv
loope
ds
push
mov
push
jbe
push
jo
mov
test
les
inc
and
pop
and
into
lods
outsl
out
in
call
mov
push
pop
mov
mov
xchg
aaa
lods
imul
outsl
dec
testl
vcvtpd2psx
dec
rcll
loop
jns
lret
fistps
inc
dec
adc
dec
stos
xorl
incb
and
shll
sbb
pop
and
push
je
inc
push
stos
xchg
fwait
ss
insl
add
mov
icebp
sarl
adc
mov
imul
popa
mov
shrl
aas
add
jno
cmc
sarl
fistl
xor
subb
xchg
adc
push
inc
nop
test
mov
repnz
jns
sti
int3
fs
jmp
pushf
push
and
imul
add
test
jnp
stc
jne
out
xchg
cltd
xchg
xlat
shlb
and
push
and
je
popa
arpl
sub
enter
mov
jg
mov
in
aaa
dec
add
lret
and
ret
out
cmp
xor
in
cmp
xchg
lret
xor
cmp
inc
jg
sub
sbb
cwtl
cmp
mov
cmpsl
mov
in
jo
pop
add
outsl
out
and
xchg
sbb
daa
in
movsb
dec
adc
sub
pushf
inc
cmp
dec
push
sub
or
and
shll
push
push
fstpl
movsl
xchg
push
inc
int3
mov
xor
xlat
loop
cs
push
cld
and
mov
loopne
pop
jle
jne
push
add
hlt
mov
repz
aam
das
mov
mov
mov
mov
outsb
enter
fldenv
mov
xor
js
mov
aas
aam
imul
xchg
rorb
loop
sbb
loop
leave
lea
pop
scas
inc
sti
je
mov
push
inc
lods
rcrb
ja
fisttps
ror
add
xor
daa
call
pop
test
adc
ja
jecxz
and
mov
bound
popf
or
sbb
mov
adc
scas
add
and
lret
shl
dec
imul
xor
xchg
aad
pushf
add
mov
in
fisubl
lds
lret
pop
scas
inc
dec
arpl
sbb
sahf
pop
lds
push
xor
stos
nop
jno
jmp
rcl
movl
sub
arpl
or
mov
mov
cmp
test
jge
addb
ds
and
mov
jecxz
shrb
mov
stos
sarl
bound
loop
cmc
out
pop
xlat
insl
mov
mov
rcrb
cli
adc
sti
imul
movsb
push
add
fs
mov
jns
movsb
insl
jle
mov
cmpsl
mov
lock
iret
lods
cmp
lahf
popf
andl
dec
js
loope
adcb
push
loop
mov
inc
loopne
sti
fcoml
lahf
nop
sub
pop
push
pop
decl
mov
sbb
or
ret
int3
inc
mov
pop
inc
lds
sahf
inc
out
roll
xchg
or
cmp
addl
xor
loop
mov
popa
ljmp
cmp
push
fists
dec
dec
pusha
das
push
xchg
and
push
aas
xchg
repz
mov
shl
push
psubw
mov
adc
call
je
dec
dec
mov
and
mov
cmpsl
mov
cmpsl
add
push
cmp
enter
arpl
andl
cmp
shlb
aad
mov
mov
or
xor
cld
mov
jns
mov
or
cmp
and
std
sbb
adc
in
xor
mov
pusha
jge
das
or
out
mov
mov
pop
push
ss
fisubs
in
adc
pop
jp
out
jle
cmc
dec
in
adc
push
sbb
push
adc
int
scas
in
sahf
jl
cld
push
adc
das
pop
sbb
jae
dec
and
imul
xor
pop
adc
pop
cmp
int3
sub
dec
pop
es
sub
push
adc
ja
sbb
addr16
mov
bound
or
pushf
and
negb
jle
xchg
adc
jg
push
ljmp
push
lcall
sub
add
lret
or
cmp
es
push
mov
aas
cmp
decb
pop
jecxz
dec
push
imul
dec
mov
popa
sub
fimull
inc
das
add
add
frstor
cmpsl
and
inc
xchg
adc
jns
nop
pop
jbe
ret
jbe
std
mov
sub
incl
add
or
push
cmpsb
ja
pop
imul
add
stos
inc
stos
mov
mov
fmuls
enter
sti
jae
fdivl
and
xchg
jae
xchg
cmpsb
and
push
cmpsb
sub
cmpsl
dec
dec
dec
or
dec
ret
rcl
dec
inc
jo
int3
out
ljmp
pop
cmp
mov
jg
jmp
leave
and
aam
or
pop
add
loope
xchg
pusha
and
mov
lahf
imul
lock
daa
dec
inc
stos
lret
cmp
cmpsb
sbb
mov
push
jmp
enter
arpl
dec
xchg
and
inc
je
ja
ret
mov
mov
int3
xor
loop
pop
sarb
xor
aad
cltd
push
mov
mov
mov
fiadds
push
lret
scas
push
xchg
jnp
jg
jg,pt
imul
lds
pusha
xchg
movsb
pop
push
test
cwtl
mov
jbe
sbb
out
clc
scas
aas
add
in
ljmp
outsb
test
add
jbe
adc
cwtl
leave
subb
jg
lods
jmp
test
movsl
arpl
sbbb
jp
adc
push
pusha
aas
addr16
adc
insb
orb
xchg
loope
mov
mov
cmp
inc
xchg
pusha
das
jge
xchg
mov
cli
cld
repz
sbb
repz
scas
lahf
mov
subl
popf
cwtl
ret
mov
xchg
mov
sub
push
or
pusha
xor
pushf
add
das
clc
jmp
popa
lds
in
es
xor
mov
test
daa
sbb
sbb
or
mov
push
jge
ret
scas
leave
loop
dec
stos
insl
cwtl
cltd
test
xchg
sahf
out
mov
outsl
repz
popa
sarl
pop
aas
push
fisttpll
cltd
shlb
fistpl
outsl
scas
stc
out
repz
push
inc
xor
cmp
inc
sub
xor
and
cltd
and
cs
int3
subl
cmp
inc
mov
fmuls
xor
or
rorb
add
jb
jp
add
xchg
imul
add
adc
inc
inc
clc
mov
push
lcall
jle
push
fwait
movl
mov
out
xor
sbb
push
cld
mov
repz
cmp
int
sbb
ja
in
add
xlat
or
mov
lods
out
adc
mov
and
mov
mov
pop
push
dec
pcmpgtw
dec
mov
adc
test
cmp
mov
fisubrl
mov
cmp
mov
cmp
subl
sbb
es
dec
mov
jne
cmp
out
scas
or
fiadds
jge
xchg
out
stos
repnz
scas
imul
orb
cmpsb
loope
or
aaa
adc
test
outsl
push
cltd
push
addb
ds
les
bound
jnp
mov
cmp
nop
fwait
xor
dec
cmp
iret
xor
pop
and
cmp
sbb
sub
outsb
jg
dec
nop
loop
ds
das
sub
cmp
mov
mov
dec
vphaddbw
ljmp
adc
adc
mov
xlat
push
cmp
loop
les
add
push
lahf
ret
sbb
sarb
ret
push
out
jno
push
out
mov
movsl
and
or
fnstcw
data16
inc
and
mov
into
sbb
xor
jle
outsb
lods
push
scas
xor
sbbl
pop
outsb
cmp
cltd
push
mov
fs
dec
outsl
lock
pop
test
push
clc
xchg
pop
xor
mov
data16
mov
mov
add
fisttps
dec
shll
enter
mov
fsubrs
or
mov
push
movsl
ss
mov
ret
pop
sahf
sbb
sti
cmpsl
mov
inc
fimull
pop
mov
sbb
dec
fldt
and
sub
xchg
push
mov
not
imul
ljmp
fistpll
in
mov
shl
lods
adc
xor
xchg
insl
sarb
pop
add
sub
out
mov
mov
pop
sbb
lret
xchg
cmp
dec
inc
and
push
addr16
sbb
outsl
shlb
pop
call
scas
xchg
adc
pop
or
mov
imull
sub
add
loop
pushl
jle
cltd
ljmp
mov
or
gs
movsb
or
bswap
push
pop
or
outsl
lahf
stos
mov
test
enter
insb
mov
jmp
push
lods
push
les
mov
mov
insl
shlb
call
add
lea
lods
jb
inc
ja
jp
rcrl
push
dec
lods
aas
adc
imul
xchg
sbb
mov
mov
mov
imul
es
mov
mov
and
pop
sub
cld
shlb
add
fcmovb
cmp
fdivl
jg
mov
fidivl
push
or
mov
loopne
movsb
leave
pop
out
fs
lods
mov
out
clc
mov
test
mov
mov
xor
dec
fs
cmpsl
cmp
call
dec
mov
out
repnz
push
cmp
jg
push
scas
rorl
and
mov
mul
stc
ss
fildll
ja
out
mulb
and
ds
mov
or
nop
push
lret
cmpsb
and
jo
adc
sub
inc
and
sub
addr16
xlat
sbb
dec
mov
xchg
gs
std
add
ret
pop
add
mov
lock
test
andl
mov
popa
mov
xchg
jg
mov
je
push
fucomi
cmpsl
push
sub
insl
daa
out
fs
aas
mov
mov
mov
fwait
mov
mov
sub
jmp
fwait
xchg
in
push
push
bound
sarl
sbb
mov
push
aaa
gs
repz
adc
mov
mov
or
xor
pop
mov
pop
sahf
es
negl
rorb
outsl
aad
jge
leave
mov
stos
incb
popf
stos
pop
jp
or
fisubrl
jmp
push
ret
adc
scas
nop
sbb
cmc
insl
xchg
imul
hlt
insl
out
xchg
lret
cmp
ja
xor
jno
push
ss
and
inc
xor
xor
adc
dec
add
and
insb
mov
inc
gs
ss
and
dec
cmp
pop
nop
sbb
cwtl
lahf
gs
cmp
sub
xor
ds
icebp
fs
or
sti
mov
push
sahf
int
mov
ficoms
outsb
cmpsl
xchg
jns
je
xchg
jle
cltd
stos
sbb
mov
test
and
outsb
xor
pop
dec
xchg
arpl
js
pop
test
loope
insl
push
dec
add
outsb
cs
add
xor
adc
xchg
ud2
pop
insl
movsb
pop
adc
jnp
es
sbb
ljmp
add
lods
dec
into
sub
fidivrs
ss
fcomps
adc
cmp
mov
clc
sub
mov
in
push
outsl
xchg
imul
enter
jp
sub
xor
mov
and
cmp
jne
andb
mov
push
in
in
test
fidivs
adc
mov
out
ret
pop
adc
sbb
in
sbb
icebp
gs
push
pop
and
mov
icebp
xor
call
data16
pusha
cwtl
and
in
insl
ljmp
es
mov
and
push
add
in
cmp
sub
pop
out
loop
js
jmp
cld
rorl
into
dec
clc
xchg
xchg
lods
out
lcall
cmpsl
mov
xor
jecxz
test
xchg
ds
xchg
cmpl
jns
add
push
test
adc
in
stos
aaa
push
jecxz
jno
sub
incb
ret
or
push
sbb
add
mov
adc
push
inc
mov
subb
cmpsl
push
shl
pop
outsl
in
add
into
cmpsl
ss
jg
sbb
or
cmp
push
pop
or
pop
xchg
cmp
ss
cmp
inc
jmp
cs
ja
or
push
leave
loope
test
insb
pextrw
sbb
ds
pop
mov
sbb
scas
pop
mov
and
push
scas
outsl
xor
pop
je
push
or
ss
add
adc
pop
dec
mov
mov
mov
jbe
filds
subb
push
mov
in
pop
clc
pop
dec
pop
mov
jmp
sti
mov
mov
cmp
push
mov
ss
mov
sub
imul
icebp
test
adc
xchg
dec
mov
push
sub
pop
or
add
repnz
sahf
cmc
inc
sti
repz
sbb
test
mov
mov
test
mov
mov
fists
pusha
popa
jecxz
sub
cli
mov
push
cmp
push
bound
icebp
rcll
in
jno
lret
je
ss
jb
xlat
sarb
movsb
add
in
loopne
clc
push
mov
jecxz
pop
mov
cmc
and
jl
adc
sbb
pop
test
dec
push
inc
xor
mov
ss
jns
popf
ja
mov
xchg
lock
fistpll
mov
shl
mov
cmp
sti
fiaddl
stc
cwtl
xor
xchg
aas
data16
add
movsb
aas
insb
or
mov
popa
fsubrs
mov
sub
stc
jne
mov
lcall
mov
dec
int
sti
lds
lret
dec
lret
scas
xchg
sbb
fwait
mov
add
inc
xor
pushf
jo
inc
sbb
jmp
ljmp
int3
loope
lock
movsb
mov
mov
clc
scas
pop
in
jecxz
adc
lods
dec
push
mov
push
jmp
subb
ss
in
jmp
imul
xchg
sub
pop
add
sub
loopne
stos
mov
mov
mov
cmpb
imul
mov
das
xchg
mov
ljmp
lret
rorl
inc
mov
iret
les
out
add
add
push
repz
xchg
mov
jno
lret
clc
inc
rolb
add
std
jne
out
add
arpl
jae
add
rol
cmp
xchg
jns
cmovne
xchg
stos
testb
dec
or
mov
or
and
test
pop
push
mov
cltd
leave
xlat
pop
out
push
mov
cltd
in
xchg
push
addr16
lcall
popa
lea
add
in
xorb
inc
lea
scas
dec
outsb
xor
mov
outsb
mov
movsl
fxtract
imul
bound
lds
bnd
stc
mov
lea
adc
rcll
add
mov
mov
lock
fwait
rcl
add
in
inc
fstps
aad
shrb
aas
and
mov
sub
inc
jmp
je
adc
sarb
mov
stc
test
sub
push
pop
xor
pop
imul
push
ljmp
in
mov
rorb
sti
scas
mov
cmp
push
xor
cmpsl
dec
mull
and
test
mov
xchg
mov
fcomps
nop
pop
outsb
push
xchg
andb
pop
xor
pop
cmc
lret
loopne
in
mov
mov
xor
jl
in
ret
lret
int3
cld
push
pop
dec
nop
push
xor
dec
pop
sbb
mov
adc
lds
dec
imul
dec
lcall
push
push
faddl
sbb
fbld
jb
cmp
scas
je
lock
mov
jge
mov
or
cmp
fdivs
insb
sbb
dec
xchg
test
dec
call
mov
outsl
movsb
mov
push
pop
enter
test
or
into
push
mov
clc
cwtl
es
leave
insb
push
divb
popf
into
sub
sarb
inc
pushf
inc
lret
shlb
xor
jge
xchg
jmp
or
mov
lret
fidivrl
inc
test
nop
sbb
inc
dec
bound
sbb
aaa
int3
mov
mov
nop
jns
xchg
inc
push
test
mov
sbb
iret
xchg
loop
push
leave
test
outsb
loop
or
mov
loop
pop
mov
mov
cld
sub
xor
push
mov
push
stc
mov
imul
stos
xchg
in
mov
xchg
mov
stos
mov
imul
jbe
pop
or
xor
jne
insl
outsb
outsb
aam
adc
jecxz
daa
int3
roll
sbb
xchg
ds
ljmp
mov
mov
lcall
shll
ret
jo
ret
jle
mov
sub
in
xor
gs
mov
test
jne
inc
into
clc
fists
dec
ja
push
jo
inc
outsb
xlat
dec
dec
mov
fldcw
sbb
or
cltd
and
jno
sbb
in
scas
pop
popa
push
add
pop
leave
in
sbb
xchg
sbb
jbe
dec
mov
movsb
adc
les
add
imul
loope
jle
arpl
inc
adc
jecxz
repz
sub
xlat
stos
sbb
gs
daa
pop
movswl
clc
lock
scas
mull
mov
jmp
aam
clc
shrl
inc
mov
lret
jecxz
sbb
cmp
outsb
imul
das
pushf
test
sub
shlb
ficomps
pushw
cld
cmp
test
dec
scas
sahf
scas
test
dec
xchg
adc
inc
push
sbb
out
imul
sahf
icebp
outsl
in
int
adc
xor
add
std
xor
inc
mov
clc
sub
cwtl
ret
rcr
mull
je
stc
out
add
cmp
mov
jge
sub
repnz
jb
mov
cmpsl
cmc
xlat
int
ss
or
sub
fldenv
loope
jmp
ljmp
bound
xor
add
ss
xorl
or
add
cmp
xchg
out
mov
icebp
in
cmc
mov
xchg
mov
mov
das
insl
inc
outsb
mov
jmp
xor
popf
stos
icebp
or
out
into
pop
jle
inc
dec
imul
xchg
gs
or
aad
sbb
aam
in
out
clc
mov
cmc
sub
arpl
clc
into
pop
loopne
push
enter
xor
aam
dec
cmp
mov
push
cmp
sahf
dec
jns
into
xor
adc
pop
xor
les
lcall
jmp
filds
jmp
inc
lods
stos
mov
add
stos
inc
push
add
pop
mov
jmp
xchg
movl
in
dec
jp
push
cltd
add
aad
cwtl
inc
mov
leave
and
test
mov
push
jb
adc
mov
dec
add
xchg
mov
adc
jg
sbb
fiadds
aam
lret
push
call
jp
adc
inc
pop
cltd
dec
mov
movsb
cli
pop
push
fcoms
or
jnp
xchg
scas
add
sub
ljmp
dec
xchg
popf
jp
mov
test
mov
insl
data16
cmp
mov
add
std
xorb
jns
testl
popa
cltd
iret
adc
mov
loopne
mov
and
stc
paddb
fldcw
xor
test
call
push
sahf
clc
push
xchg
mov
jns
sbb
iret
sub
mov
negl
and
cmp
test
repnz
or
flds
sbb
and
pop
inc
lret
data16
pop
mov
std
pop
inc
add
insl
and
into
mov
sahf
insl
divl
add
push
cmp
jns
repnz
jecxz
stos
in
push
or
or
frstor
mov
jne
pop
add
mov
pop
xor
jmp
add
sbb
and
pop
adc
mov
cld
out
test
repz
repnz
jmp
jl
mov
mov
jne
lods
cmp
ror
add
cltd
push
pop
in
gs
nop
dec
nop
inc
xlat
shll
cmp
xor
adc
inc
push
orl
lahf
dec
inc
repnz
jl
push
es
push
insb
mov
insb
pop
push
addr16
fmull
mov
pop
sbb
out
mov
pop
dec
sahf
jne
push
lods
dec
inc
fisubl
mov
inc
out
test
push
cmpsb
or
mov
cmpsl
popa
push
adc
fs
push
mov
fdivr
in
ja
pop
outsb
dec
xchg
mov
iret
lods
insl
scas
mov
icebp
add
and
mov
mov
jns
xchg
inc
mov
test
mov
mov
lcall
mov
or
adc
into
mov
cmp
inc
mov
setae
dec
loop
push
adc
pop
inc
push
push
add
fdivl
push
inc
add
loopne
and
loop
mov
dec
add
xlat
pusha
or
jae
mov
cld
sbb
mov
jmp
cwtl
mov
test
pushf
loope
dec
cld
popl
add
xlat
stos
or
stc
nop
outsl
jg
es
fucomi
mov
sbb
sbb
aam
hlt
sub
cwtl
out
in
sbb
pop
and
adc
mov
lea
outsl
out
push
inc
lods
and
mov
test
add
stos
xchg
mov
xor
notl
xchg
xchg
pushf
in
cmp
push
outsb
push
adc
xor
testl
bound
pop
cwtl
add
icebp
addr16
adc
clc
lahf
sub
pusha
in
xor
out
sub
clc
mov
repnz
movsl
xchg
jbe
mov
mov
pop
fidivs
fdivr
out
inc
fisttpll
and
test
jecxz
adc
mov
pusha
rclb
fimull
or
push
int
push
and
push
jnp
arpl
jnp
dec
outsl
mov
mov
jp
jl
mov
fwait
jecxz
pop
aas
outsb
pop
dec
pusha
test
pop
or
jbe
test
fstl
aam
xchg
mov
mov
data16
push
mov
shlb
pop
xor
cmp
popf
mov
mov
das
add
stos
add
loope
shl
les
je
out
cmp
test
jae
mov
cmpsb
jl
out
and
out
dec
adc
push
in
rorb
pop
addr16
cmpsl
or
flds
mov
lret
mov
adc
sbb
sub
icebp
mov
iret
sub
stc
fistpl
mov
lcall
xchg
jp
adc
xchg
push
sbb
inc
add
mov
popf
mov
stos
cmp
int3
xor
sub
shrl
daa
lods
adc
lea
or
mov
mov
bound
or
popa
enter
mov
scas
lock
pop
arpl
test
test
mov
cld
xlat
pop
xor
or
mov
dec
pusha
mov
xorb
jp
mov
imul
fistpl
nop
dec
icebp
cmp
sbb
les
add
xor
and
adc
pop
add
outsb
lock
lret
addr16
xchg
cmp
stos
lret
movsb
iret
in
jb
xor
ja
adc
in
push
stc
jbe
int
jl
scas
lcall
cwtl
jle
lea
popf
fstpt
lahf
sub
add
in
cmp
sbb
lock
adc
mov
push
imul
mov
push
popa
push
xor
js
push
pop
aaa
inc
pop
adc
bswap
jg
adc
pop
mov
push
xchg
lahf
loopne
out
pop
mov
lahf
or
push
mov
imul
add
xchg
repnz
pop
jns
lea
jp
jecxz
cs
lds
aaa
repz
dec
add
sub
inc
adc
sbb
adc
test
loope
xor
test
mov
sbbb
loope
xchg
jo
cmp
push
enter
bound
xorl
fsts
pop
dec
shll
mov
ficoms
sbbl
adc
push
cwtl
test
mov
pushaw
scas
pop
inc
mov
test
andl
ss
add
popf
sar
or
pop
lock
dec
shl
cli
push
pop
cwtl
in
sbb
and
mov
xlat
stos
lds
ficomps
sbb
inc
xchg
imulb
in
js
jo
das
xchg
cmp
das
clc
popf
inc
cmp
push
fstpl
inc
add
cltd
pop
mov
inc
xchg
xor
pop
frstor
aas
or
test
ss
mov
or
test
lret
lret
add
add
cmc
decl
jae
mov
fiaddl
loop
pop
mov
ret
and
shl
jo
repz
adc
add
mov
into
out
jmp
rorl
out
add
es
mov
adc
pop
fs
inc
mov
add
fidivl
lret
jle
inc
cli
cmp
into
js
imul
mov
push
sub
fnstenv
mov
movsl
and
inc
sbb
xchg
inc
mov
test
dec
andl
aas
dec
imul
pop
pop
cmpsb
lret
mov
cmc
mov
test
sub
pop
or
jns
shrl
cmp
mov
add
mov
shrl
or
fcomps
repnz
repnz
outsb
add
sbbb
push
mov
sbb
mov
pop
or
dec
ret
dec
mov
sbb
pop
inc
mov
dec
xor
sub
es
rcll
jg
push
add
in
jle
mov
jo
pop
mov
das
adc
sbb
faddl
add
mov
std
enter
js
lods
movsb
xor
es
inc
data16
ret
fildll
push
fsubrl
cwtl
sub
push
movsb
cmpsb
sbb
or
scas
sub
or
fs
test
adc
adc
dec
orb
pusha
cmp
fdivr
cmpsl
fsubrl
fstl
jp
lds
mov
jle
xchg
test
push
mov
add
jns
adcb
aaa
jmp
pop
cmp
pop
mov
pushf
das
ss
xchg
fwait
or
or
shlb
cmc
xlat
or
xchg
inc
sbb
mull
pop
mov
add
sbbb
xor
inc
adc
mov
shrb
or
dec
inc
fwait
sub
or
push
outsl
pop
insb
faddp
xor
sub
out
dec
and
iret
push
or
sub
push
pop
sbb
fidivrl
or
pop
jbe
ljmp
repz
jno
jno
cmp
arpl
xor
enter
mov
aaa
add
inc
pop
shlb
mov
inc
xchg
bound
ret
jns
loopne
mov
sbb
or
mov
add
or
cmpsl
pop
xchg
orl
adc
in
cmp
inc
scas
sbb
cltd
mov
ja
aad
adc
movsb
sbb
cmp
dec
call
repnz
pop
jbe
pusha
pop
movsl
cmp
mov
and
pop
mov
ljmp
push
out
adc
arpl
cmp
dec
jl
jno
in
pop
pop
int
out
and
mov
jecxz
cmp
stos
mov
dec
cmp
addl
push
adc
loopne
in
mov
mov
ret
pop
out
add
adc
or
mov
adc
fs
sti
or
push
mov
ss
add
inc
jb
push
lret
mov
push
xchg
add
xlat
movsb
dec
sub
bound
pop
or
jne
add
cmpsb
xchg
sti
test
dec
subb
add
push
xchg
cmp
mov
dec
add
ret
xor
push
adc
or
daa
fdivrp
pop
pop
fistpll
imul
fldt
stc
dec
or
and
xchg
fistpll
inc
aad
dec
mov
out
mov
arpl
pop
mov
daa
jg
and
mov
xlat
shr
pop
imul
jnp
mov
fisttpll
inc
sbbb
stos
jnp
pop
or
sti
push
add
xchg
fs
ljmp
lea
jno
cmp
adc
stos
jbe
mov
sarl
cmpsb
or
in
insb
stc
in
adc
jb
fwait
arpl
popa
xchg
jmp
jl
fwait
gs
dec
ficomps
cld
mov
cmp
jbe
mulb
aas
add
lret
xchg
jno
mov
test
scas
cmpsl
lds
jl
sub
dec
jl
push
inc
push
and
call
lahf
inc
ja
mov
outsl
push
jge
cmp
inc
xor
fsubrl
in
shll
loop
mov
lods
mov
lods
ljmp
push
or
or
xor
je
stc
xor
push
pop
leave
pop
in
cmp
add
lods
fistl
scas
xor
xchg
lret
adc
scas
push
adc
fcoml
je
xchg
nop
lcall
loopne
add
lds
jp
test
jp
cmpsb
cmpsl
in
pusha
subl
jg
pusha
test
xchg
negl
das
xor
test
movsb
lcall
rcr
cmp
out
lret
push
stc
inc
pusha
pop
fwait
add
mov
lahf
aas
xchg
sub
xor
movl
out
popf
add
out
movsl
and
jecxz
daa
or
push
clc
or
mov
sti
cmpsl
push
jns
sbb
cwtl
pop
sbb
test
push
neg
mov
dec
mov
add
push
test
in
and
mov
outsb
lea
pop
and
mov
gs
lcall
jbe
enter
arpl
ds
fcoml
aaa
or
mov
mov
xchg
sbb
ljmp
push
in
cmp
into
sub
dec
jae
iret
jae
cld
int3
cltd
imulb
or
jb
sub
int
test
xor
ret
cld
xchg
fmull
or
inc
inc
cli
pop
pop
outsl
push
lcall
ds
lds
xor
cmp
push
test
jb
adc
cmpsb
adc
fcomps
jle
add
fidivs
lods
lods
adc
outsl
cmpsl
dec
imul
aaa
test
cld
rorl
mov
pushf
addl
cmp
sti
mov
add
sti
sbb
push
adc
and
fwait
sub
adc
shlb
push
mov
inc
push
jns
mov
dec
insl
mov
pop
or
push
sub
nop
subb
cwtl
inc
cmp
fwait
cmp
mov
cmpsl
mov
lahf
into
mov
add
pushf
jge
lahf
int
jns
movsl
xchg
cmp
xchg
mov
or
ds
gs
xchg
jg
sahf
mov
cld
sar
lods
dec
aad
add
mov
mov
inc
mov
insl
dec
push
je
rorl
ficompl
mov
aam
dec
xchg
jno
imul
cmp
test
mov
aaa
cmpsb
jno
fsubl
mov
inc
daa
inc
insb
clc
sub
stos
test
xchg
neg
outsb
mov
jmp
mov
repz
imul
inc
int3
cltd
in
push
std
enter
mov
push
inc
cmpsb
mov
fsubrp
inc
cmpsl
cmp
in
insl
in
dec
rcll
cltd
imul
inc
jg
xchg
incb
add
neg
cmp
jp
cmc
rolb
push
out
and
lcall
adc
arpl
jg
lods
loop
and
in
into
lea
aaa
or
stos
xor
cmp
das
xor
mov
inc
mov
cli
roll
mov
sbb
or
das
adcb
mov
std
pushf
lds
loop
pop
push
cmpsb
jno
js
xchg
cmp
stos
rorb
sbb
scas
push
test
lock
inc
adc
jae
mov
loopew
movsb
add
jae
sub
jne
push
data16
lods
mov
mov
pop
mov
xchg
dec
push
inc
dec
and
sub
jmp
inc
inc
jae
rorl
mov
and
loope
rcll
mov
adcb
into
sbb
inc
sbbl
daa
pop
and
jb
repz
sahf
cmpsl
add
addr16
into
adc
int
inc
fnstcw
or
pop
sub
push
jge
jno
lahf
sub
out
mov
imul
add
dec
out
jge
enter
into
inc
dec
add
test
xchg
and
sbb
push
mov
shll
inc
add
jle
cmp
xchg
cwtl
sahf
mov
mov
lods
fildl
and
insb
cwtl
fcmovnbe
mov
xchg
push
scas
mov
or
sbb
push
xlat
xchg
mov
test
mov
sub
or
shll
loopnew
dec
scas
leave
xchg
loop
push
inc
js
lea
mov
mov
jbe
out
sub
and
mov
inc
sub
test
out
mov
sahf
xchg
in
push
adc
push
mov
ljmp
in
sub
test
repz
pop
into
push
lock
cwtl
lret
aam
cmc
jbe
inc
jmp
push
mov
push
dec
insb
xchg
xor
lcall
xor
rcr
jns
xor
jne
out
mov
mov
and
adc
hlt
adc
je
pop
fisubs
jp
addr16
leave
addb
push
fdivl
add
mov
test
fsts
mov
lahf
push
ret
adc
xlat
and
inc
je
andb
mov
mov
addr16
adc
repnz
shrb
and
adc
jo
sbb
mov
out
orb
cmp
and
adc
dec
ja
pop
out
cmp
insl
out
mov
cmpsl
xor
aam
mov
test
jp
xchg
insb
sbb
pop
cmp
inc
jl
outsb
push
jbe
mov
and
dec
xchg
push
test
rcll
test
xchg
inc
enter
shlb
xchg
jns
sub
or
push
in
aad
jg
dec
dec
repz
mov
scas
loopne
jno
popf
sub
int
pop
mov
xor
inc
pop
repz
xchg
cmpsb
xchg
clc
cmpsl
hlt
sahf
pop
stos
into
cmp
or
sub
inc
push
lret
cmp
jo
cmp
shrl
mov
repz
cmpsb
lds
mov
stos
sbb
loopne
jo
lret
out
add
outsb
add
mov
cmp
out
mov
cmc
or
fistpl
xchg
mov
mov
mov
push
nop
addl
pushf
mov
sbb
adc
iret
jbe
xchg
mov
inc
mov
mov
xor
cmp
dec
fcmovnu
lahf
dec
inc
jl
xor
cmc
sbb
pop
mov
insb
and
andl
mov
sti
lahf
loope
pop
pop
mov
mov
ja
pop
jp
pop
dec
add
shll
cmp
repz
scas
inc
mull
push
stos
inc
cmpsb
adc
mov
push
add
adc
lods
inc
sub
das
xchg
loope
mov
jo
jl
cld
div
mov
jge
fdiv
pop
push
push
cltd
cld
dec
out
jmp
mov
add
cmc
jnp
jg
mov
int3
mov
inc
jle
cmp
rorl
in
fdivl
cmp
in
les
jbe
lods
shrb
cld
push
mov
inc
ret
out
and
scas
jnp
int3
lret
xor
push
icebp
jno
push
cmp
mov
push
aad
test
jecxz
xchg
loopne
mov
push
push
jo
dec
push
ret
mov
aam
sbb
sarl
sub
inc
mov
in
inc
imul
or
fisttpll
inc
dec
mov
shrb
xchg
stc
xchg
test
fs
xor
inc
xchg
adc
pop
xor
cld
dec
cmpsl
mov
fwait
xlat
mov
daa
loop
jmp
movsb
cmp
mov
dec
push
mov
mov
iret
and
sub
cli
dec
in
pop
push
and
add
stc
fldcw
lds
enter
cmpb
adcb
shrl
sbb
cmp
dec
ds
inc
add
lcall
fwait
add
lcall
inc
imul
inc
adc
mov
imul
add
pop
inc
mov
xor
loop
mov
cmp
cmp
xchg
insb
push
inc
sub
adc
shlb
std
ss
repnz
xchg
xlat
mov
mov
add
arpl
js
data16
jl
fistpl
xchg
aam
xchg
jge
adc
mov
dec
push
dec
repnz
mov
mov
jp
js
xchg
xchg
aam
dec
jae
stos
adc
mov
cltd
and
je
jp
out
shl
xor
shll
sbb
lret
insb
js
jp
cmp
xor
jne
xor
jge
mov
xchg
push
cmc
insb
and
nop
jo
cmp
jb
cmc
loopne
xchg
mov
add
push
dec
negb
and
fucomi
and
adc
jae
mov
lret
xor
mov
pusha
nop
push
jp
or
cld
jno
les
mov
add
inc
rcrb
pushf
fiadds
fisubl
out
push
bound
adc
outsb
inc
and
mov
loope
jno,pn
xor
int3
idivl
pushf
mov
test
iret
sahf
ds
xor
xchg
lret
add
cs
pop
push
dec
add
adc
push
dec
mov
inc
ja
in
outsb
xchg
lcall
cmc
data16
and
test
clc
jg
fcomi
rclb
jl
cmc
sbb
xchg
jbe
aas
mov
mov
push
sub
add
cmpsb
call
bound
mov
mov
cmp
fsubs
jp
xchg
mov
jecxz
add
sub
cli
outsb
popa
dec
out
scas
push
ret
stos
or
mov
pop
into
mov
cmp
mov
mov
jae
bound
loop
out
add
insl
test
mov
shl
fsts
bound
mov
and
mov
sub
outsb
mov
cmp
and
adc
push
fwait
scas
mov
or
push
xchg
cmp
push
pop
ffreep
sbbb
add
dec
outsb
mov
icebp
xlat
in
xlat
out
stc
rcrl
popf
fldt
push
ficoms
cltd
cmp
mov
xor
rorb
jae
sub
imul
pushf
adc
sbbl
insb
push
xchg
shlb
cwtl
jbe
pop
je
test
dec
movl
mov
and
ret
jecxz
mov
sbb
vpmaskmovq
addr16
sub
fcom
iret
sbb
mov
lret
imul
sub
fucomip
pop
or
jmp
push
sbb
addb
loop
out
xor
jecxz
mov
outsb
mov
pop
aas
mov
mov
or
call
hlt
mov
mov
jne
es
mov
and
mov
je
xlat
pusha
stos
inc
add
pop
es
jmp
loopne
add
add
add
inc
paddusw
int3
scas
scas
or
sub
rorb
mov
sbb
cmp
jmp
rorb
pop
xorl
mov
cmc
pop
xchg
dec
ljmp
mov
int
add
pushf
fnstenv
inc
mov
fistl
lret
bound
sbb
cmp
test
lret
lods
cld
cmp
add
add
pop
jle
stc
cltd
inc
push
nop
dec
std
movsb
xor
hlt
push
add
sub
fwait
test
mov
mov
adc
xor
jns
hlt
inc
mov
dec
or
jb
jae
gs
push
jl
xor
push
adc
out
cli
mov
sbb
jbe
outsb
dec
jns
mov
inc
in
divb
pop
or
pusha
inc
ja
leave
xchg
inc
cmpsl
pop
addr16
leave
mov
and
stc
divl
ljmp
scas
rdmsr
mov
js
cltd
ja
cmp
dec
pop
inc
loope
outsl
add
imul
mov
and
test
xor
popa
bndstx
inc
pop
lahf
insl
repnz
aas
push
jns
mov
mov
aam
mov
pop
sub
add
pusha
pop
cltd
push
fdivrl
dec
or
aad
push
pop
xchg
out
mov
sbb
daa
or
test
out
rep
inc
push
cli
repz
cmpsl
mov
insl
cmp
leave
mov
inc
outsb
sub
cmc
mov
or
stos
push
push
pop
jnp
ljmp
int3
popf
lock
push
cld
pop
inc
cmp
pop
mov
sub
xor
dec
mov
imul
pop
dec
jb
shr
or
cmc
or
xchg
fst
xchg
dec
adc
mov
jp
frstor
jo
es
js
mov
jp
sarl
xor
mov
dec
adc
mov
ss
ljmp
icebp
fwait
or
mov
dec
loop
cmp
pop
add
pop
sti
cmp
or
fiaddl
jbe
fstpt
ss
mov
xor
mov
cltd
negb
shll
inc
jnp
push
mov
xchg
lods
shl
sbb
xor
jo
aas
inc
push
inc
cmp
add
pop
and
int3
xchg
jmp
in
mov
pop
std
sub
test
pusha
adc
add
and
fsubp
popf
inc
cs
mov
andb
lcall
int3
or
stos
lcall
lret
sub
push
mov
and
in
xchg
pop
lock
xorl
lock
add
loopne
inc
add
lcall
mov
bnd
pop
mov
loopne
shlb
xchg
xchg
sarb
xchg
or
mov
or
mov
mov
add
pop
rcrl
jnp
pusha
and
mov
push
inc
mov
ror
mov
sti
pop
push
jns
mov
adc
dec
stos
popf
cmp
xor
int
mov
repz
sbb
mov
pop
shll
pop
dec
insb
stc
jnp
cli
push
inc
bound
cld
loopne
insl
stos
push
jg,pt
pushf
xor
mov
insl
es
or
jle
outsb
cmp
mov
test
fsubs
hlt
or
mov
aad
loop
or
mov
lods
repnz
test
cwtl
insb
xor
movsb
jns
push
fnstenv
mov
jle
mov
lods
mov
pusha
mov
rcl
jno
adc
fstpl
mulps
add
sbb
inc
and
push
stos
mov
cmp
movsb
jb
mov
hlt
cmpl
add
jge
data16
mov
outsb
movsb
mov
mov
xor
lcall
shrl
pop
xchg
loopne
cwtl
in
fwait
pop
mov
lea
xor
jmp
add
jno
es
inc
dec
in
fidivl
int3
loope
sub
jbe
into
xor
clc
dec
push
test
mov
adc
test
sub
into
in
sub
push
sub
pop
push
xchg
add
add
pop
or
pop
mov
je
dec
fidivs
pop
lahf
push
iret
adc
xlat
or
or
fdivp
mov
dec
sbb
rol
inc
in
pop
in
add
stos
and
test
xchg
test
dec
dec
arpl
shl
mov
adc
je
pushf
cmp
pop
mov
outsl
push
sahf
hlt
cmp
pop
sbb
mov
mov
dec
mov
mov
mov
push
push
inc
sarl
not
into
js
aam
sub
mov
push
out
test
add
push
dec
idivl
mov
pop
add
mov
add
cmp
orl
xor
icebp
sub
sahf
and
inc
and
sbb
clts
mov
mov
roll
xor
and
pop
mov
and
int
jle
das
in
mov
mov
cmc
cli
xchg
fcomp
ja
push
jbe
popl
stos
xchg
mov
mov
xchg
test
xchg
xchg
repz
mov
adc
dec
ret
cmp
ljmp
fisttpll
push
mov
fbld
push
mov
jne
inc
lock
dec
or
mov
or
iret
stos
js
in
into
jae
mov
mov
cmpb
jae
aaa
and
or
sub
clc
pop
rorl
lahf
lods
stc
call
dec
leave
adc
cmp
dec
in
lock
mov
pop
sbb
into
in
movsl
fdivs
sbb
inc
mov
or
xchg
xor
ret
pop
fs
jb
movsb
pusha
jp
jmp
movsb
xor
in
xor
mov
fdivr
test
push
or
test
mov
stc
pop
fisttpl
inc
shlb
add
dec
arpl
lock
inc
pop
adc
les
cld
xor
mov
gs
mov
mov
lret
test
int3
gs
repz
cld
dec
ja
pop
int3
vhaddpd
cwtl
mov
sub
add
fadds
cmp
inc
pop
jmp
cmp
pop
dec
ror
sbb
out
dec
sbb
jecxz
inc
test
scas
xchg
rorb
jmp
mov
lret
mov
or
sbb
dec
cmp
inc
jbe
jg
push
outsb
and
add
pop
and
loop
push
stos
sub
icebp
jo
cld
mov
outsb
ret
iret
mov
inc
cli
lock
jle
scas
ljmp
jle
xchg
inc
pop
movsl
cmp
mov
mov
fwait
push
in
repnz
mov
lcall
movsl
scas
rorb
mov
push
mov
mov
ret
mov
sub
clc
idivl
mov
adc
js
inc
popf
aas
dec
out
jecxz
test
sub
push
mov
adc
repz
push
xchg
mov
xor
xor
stos
iret
mov
add
fs
loopne
jge
cmp
fisubrs
imul
sbbb
movsl
fwait
jg
out
jns
inc
inc
mov
dec
adc
out
out
or
pop
int
fs
popf
mov
out
mov
cwtl
and
icebp
or
jae
popf
xor
ffreep
xchg
push
mov
mov
sbbl
xor
outsl
cmc
inc
xor
cld
push
push
mov
imul
out
pop
nop
xor
mov
out
sbb
jp
jne
xchg
dec
lock
mov
cmc
sbb
int3
pop
xchg
push
mov
dec
imul
out
lcall
pop
lret
lret
pop
xorb
pushf
or
jb
push
fisubl
adc
popa
in
adc
in
adc
mov
mov
pop
fstl
pushf
mov
sub
mov
scas
fsubrl
out
or
js
xor
fldcw
inc
sbb
notl
insb
sbb
jb
mov
xor
iret
out
push
aad
pop
lret
into
fs
sbb
add
insl
aas
inc
shll
or
mov
out
push
cmc
clc
xchg
pop
int3
pop
xor
jl
push
popf
jl
inc
sarb
jg
jae
fs
mov
pop
jno
adcl
lock
cmp
call
in
out
and
push
fcmovbe
jne
push
leave
insb
cmp
aad
sbb
jns
inc
pop
add
inc
xor
mov
je
fidivrl
cmpsl
ret
cs
scas
aas
jl
adc
mov
mov
cs
sahf
jp
or
or
shrl
jno
mov
pushf
add
nop
cld
sbb
pushl
lahf
lcall
cmp
cld
jns
jmp
js
inc
leave
sahf
xor
add
es
out
or
mull
adc
mov
in
lcall
dec
fs
or
mov
jmp
add
xor
add
mov
cld
jb
jns
das
test
cmp
outsl
xchg
sub
repz
out
mov
out
hlt
out
xor
mov
lahf
jmp
sti
push
ds
icebp
push
jno
scas
xlat
add
sbb
lea
push
push
push
adcb
les
mov
mov
arpl
or
mov
imul
frndint
mull
in
add
test
out
repnz
sub
add
adc
ret
xor
test
inc
lcall
mov
jg
mov
jle
popf
sbb
stc
ret
lock
sbb
or
fldl
out
cmp
cmp
pop
iret
push
shr
lock
call
inc
or
lea
loope
xchg
adc
xor
xor
insb
adc
int
adc
stc
aam
insb
push
mov
jbe
pop
add
pop
insb
inc
cmp
mov
cmp
sub
rcpps
xchg
test
dec
cld
pop
mov
xlat
imul
cmpl
insl
or
dec
sub
or
fistpll
mov
xchg
dec
mov
sbb
lahf
insl
xchg
xor
leave
testb
push
xchg
fbstp
xchg
mov
fdivr
das
cmp
std
jbe
inc
idivl
fadds
cli
je
jl
xchg
mov
jge
jp
dec
cs
inc
iret
jle
in
mov
push
lcall
pop
or
cld
and
std
std
cwtl
pushf
mov
ss
pcmpgtd
insl
mov
cmpb
jbe
sub
js
sub
mov
idivl
les
repz
lds
push
repnz
mov
push
mov
mov
dec
push
popf
cmc
shrw
or
sub
lret
not
jne
push
mov
lods
jae
pop
xchg
xchg
add
or
push
sub
inc
negl
inc
inc
push
lock
jbe
scas
cmc
pop
loope
std
test
movsl
and
jmp
xor
iret
int
std
cmc
jnp
dec
sub
out
lcall
insl
cmp
push
das
je
dec
cltd
push
xor
sub
dec
lods
shrl
dec
push
sub
std
sti
jo
xor
jb
mov
call
cmp
leave
xchg
movsl
jbe
or
sbb
call
cs
sarb
call
imul
xchg
imul
adc
lds
inc
jns
xchg
fisttpll
fldl
in
icebp
inc
lret
fstps
mov
add
mov
not
aad
in
xchg
push
sub
outsl
dec
xchg
adc
mov
in
sub
inc
cmpsl
cmp
pop
jb
push
test
loop
loop
lock
jnp
inc
mov
jge
dec
inc
mov
pop
lods
cli
inc
addr16
neg
ss
and
arpl
ret
adc
jp
imul
ljmp
dec
or
mov
jecxz
sbb
pop
pop
sahf
mov
fisttpl
insb
int
add
jne
outsl
xor
and
mov
in
mov
gs
xlat
cld
loope
test
cmp
cld
std
mov
add
pop
xchg
dec
jo
and
dec
outsb
mov
xor
push
push
rcr
loope
pushf
xchg
or
sub
xor
xchg
jns
addb
popf
enter
dec
mov
or
and
sarl
popa
data16
pushf
pop
out
pushf
lds
or
or
mov
pop
push
ret
mov
or
sbb
and
xor
hlt
outsb
test
adc
mov
addr16
lds
mov
ljmp
ljmp
out
or
iret
adc
and
dec
js
sub
mov
pop
popl
xchg
adc
xchg
pushf
push
cmc
test
imul
add
inc
push
push
popf
mov
pop
fildll
add
push
fs
pop
movsl
lret
clc
dec
push
xchg
jl
sub
push
dec
or
and
jecxz
aas
loop
jl
adc
popf
mov
sbb
pop
les
arpl
orl
shll
ret
ds
add
imul
sbb
pop
adc
stc
xchg
cmp
sqrtps
pop
add
in
ds
loop
lcall
leave
cwtl
mov
cmpl
adc
push
and
pop
dec
cwtl
into
push
inc
mov
jp
cmp
sahf
fnstenv
scas
movsb
idivl
out
sti
jle
out
xchg
sti
daa
pop
mov
mov
into
lods
xor
or
lea
mov
int3
xchg
call
push
imul
push
divl
orb
ret
mulb
push
jnp
ds
cmp
fmull
jbe
cld
js
cs
xor
ljmp
jg
adc
outsl
adc
shll
and
sub
test
sub
jmp
jne
inc
call
cmp
out
pop
mov
fwait
aad
mov
jg
repnz
adc
stos
xchg
adc
inc
gs
lret
jns
xchg
xchg
cltd
pop
push
jbe
sarb
inc
add
xor
add
pusha
cltd
mov
mov
inc
mov
and
test
in
outsl
repz
jp
xchg
mov
fsts
mov
add
pop
fistpl
and
xorl
mov
cmc
mov
pop
out
xlat
xchg
cmpsl
xor
add
imul
or
cld
mov
adc
xlat
cwtl
jbe
lock
scas
lods
add
scas
sbb
mov
mov
sti
nop
pop
dec
stos
ss
jl
shll
test
leave
xchg
add
rorl
push
sti
outsl
jbe
cmp
cltd
insb
xchg
or
dec
mov
add
jecxz
add
cs
pop
push
insl
stc
lret
pop
notb
pop
push
popf
iret
sub
cmp
lods
nop
es
fildl
sub
pop
xor
scas
out
clc
popa
push
mov
mov
cld
push
sbb
ja
or
cld
call
pop
sbb
lret
xchg
lods
push
and
xchg
sbb
sub
push
mov
nop
jge
jae
sub
std
insb
xchg
dec
jne
fwait
and
ud0
cmc
mov
pop
jmp
adcl
mov
pop
ljmp
dec
push
cmp
cld
xchg
mov
daa
fisttpll
xchg
or
out
ss
mov
mov
lret
enter
in
in
sti
icebp
aas
and
jecxz
pop
push
xchg
sahf
and
rorb
sahf
xlat
arpl
fimuls
outsb
mov
cmp
iret
sahf
push
insb
inc
js
daa
dec
sub
fcmovnb
popf
xor
mov
jno
insb
mov
and
or
mov
mov
out
lret
cmp
xor
mov
adc
mov
lret
pop
repnz
lret
andl
out
loope
push
in
mov
jbe
call
rcrb
test
push
out
xor
notb
stos
scas
aam
mov
ud1
filds
lcall
mov
idivb
imul
xchg
lea
or
lahf
push
xchg
mov
jno
in
xchg
jl
enter
cmp
lcall
cld
mov
aam
lahf
in
sub
adc
stos
cmpsb
shll
mov
hlt
mov
push
mov
add
aam
mov
int3
and
add
sub
sbb
stos
mov
dec
lds
xchg
rolb
divl
cltd
mov
inc
mov
jae
pop
lods
in
out
xor
imul
popf
adcl
push
push
pop
mov
scas
xchg
jle
scas
mov
daa
sub
inc
scas
mov
insb
jnp
je
sbb
adc
mov
in
pop
pusha
jbe
and
imull
lock
dec
mov
mov
push
shl
je
cmpl
mov
lcall
sbb
xchg
mov
lock
mov
pop
mov
and
jp
pop
cli
sbb
mov
pop
push
sub
hlt
or
mov
fmuls
jl
inc
xchg
jmp
mov
stc
outsb
cmp
and
stc
pushf
dec
call
mov
fisttpll
addr16
adc
cwtl
popf
xor
les
xchg
and
mov
dec
aam
mov
mov
cs
xor
cmp
dec
xchg
cmp
rorl
inc
dec
ficoms
push
popf
jmp
inc
pusha
icebp
lods
or
push
pushf
std
xchg
ss
sbb
or
idiv
nop
daa
fistps
hlt
mov
fstpt
jnp
sahf
mov
pushf
adc
lods
jnp
cmp
mov
sub
movsl
pusha
clc
and
add
push
in
inc
iret
cmpsb
orb
push
push
test
shrl
pop
jmp
test
je
xor
hlt
stc
icebp
mov
mov
lods
sub
xchg
xor
cld
add
push
or
and
xor
adc
insl
jg
sbb
mov
idivl
movsb
arpl
pop
inc
pop
push
cmpsb
jns
cmpsl
ret
aad
in
or
sbb
shlb
lret
fs
ds
push
xor
mov
jnp
adc
rcrb
push
sahf
aam
out
push
lret
loope
fcomps
addb
mov
mov
dec
mov
imul
add
push
jmp
push
out
repnz
mov
cmp
mov
sub
and
loop
add
scas
cmpsb
lds
popa
push
sub
xor
xchg
gs
test
adc
xor
pop
mov
xor
xchg
out
repnz
xor
scas
mov
icebp
jecxz
jnp
ss
xchg
jno
movsb
sbb
div
iret
lret
or
mov
dec
pop
mov
cwtl
sbb
xchg
xchg
dec
jo
jg
and
movb
mov
nop
js
adc
je
std
ja
mov
push
cmp
aad
or
sub
adc
pusha
sahf
mov
outsb
sub
xor
lods
or
push
add
lods
dec
jae
into
inc
jmp
fcoml
xchg
adc
mov
mov
jle
cld
push
xor
pop
sub
in
mov
lods
lea
fwait
cmp
nop
push
sbb
jno
fmul
xchg
fsubrp
jae
inc
xor
xor
inc
mov
push
pop
add
leave
mov
inc
inc
insl
xor
nop
imul
aas
adc
divl
inc
dec
imul
lret
aad
std
add
pop
imul
xchg
mov
jnp
xor
bound
or
out
loopne
test
test
cmp
adc
imul
sahf
dec
aaa
ss
insl
adc
pop
lret
adc
fistps
mov
add
test
mov
and
seto
not
mov
clc
negl
sti
or
add
mov
mov
xor
dec
jge
jnp
cwtl
and
inc
rorl
xchg
mov
pop
loopne
int
pop
xor
xor
mov
push
hlt
jo
cmpsl
scas
or
xchg
jecxz
loop
mov
in
add
inc
mov
add
loope
xchg
daa
lea
and
jne
add
add
xor
xor
xchg
or
insb
arpl
mov
add
fimuls
xchg
cmp
mov
cmpsl
shlb
pop
adc
xor
test
loope
mov
sub
pop
xlat
loopne
dec
adcl
mov
cwtl
and
icebp
xchg
insl
sarb
adc
fs
jno
fmuls
in
lods
or
xor
mov
adc
les
cmp
lahf
lods
sbb
mov
popf
arpl
dec
jns
mov
add
sub
mul
mov
sub
mov
pop
repnz
aad
dec
div
out
int3
cmp
sti
aas
out
pop
in
push
xchg
js
mov
inc
outsb
mov
mov
movb
jns
mov
jb
movsl
mov
aas
push
out
fwait
and
dec
xchg
mov
push
jmp
sbb
push
pop
popf
daa
sahf
jo
pop
arpl
mov
insb
rcl
xor
hlt
ljmp
or
jo
or
test
mov
lods
out
std
cltd
cwtl
jbe
cmp
mov
inc
aam
psubusb
call
xchg
shl
scas
out
and
mov
icebp
jl
cmpsl
mov
rorl
mov
pop
arpl
div
leave
mov
cmpb
sti
cmp
sub
xor
push
int3
sub
mov
test
bnd
adc
inc
sbb
ds
mov
dec
mov
lock
int
pop
aas
mov
dec
sarb
pop
cwtl
inc
sub
sbb
je
push
cmc
shll
imul
in
aam
cmpsl
add
mov
stc
insl
xchg
mov
mov
gs
stos
dec
jp
xor
push
ja
jnp
out
movsb
scas
loop
mov
sub
stc
movsb
mov
cli
xchg
jno
or
mov
cmp
mov
and
outsb
or
dec
inc
inc
push
mov
scas
sub
pop
repz
cmp
lret
loope
neg
sbb
jg
pop
mov
popf
in
mov
add
dec
mov
mov
pop
insb
sub
jl
xorb
mov
mov
add
pop
pop
mov
lret
pop
cmc
or
pop
arpl
and
mov
sbb
sti
inc
mov
sbb
pop
dec
setne
mov
lahf
subl
jg
out
sub
popf
xchg
and
adc
hlt
cltd
jle
xor
pop
xor
xchg
xlat
scas
sub
inc
inc
inc
and
and
pop
addl
shrb
int
subl
cld
mov
loop
adc
inc
mov
and
popf
add
stc
or
ds
and
dec
push
add
push
stos
sbb
and
cmp
jnp
push
lret
push
lret
data16
sbb
outsb
and
xchg
aad
sub
mov
aam
addl
push
insb
jg
popa
in
ds
or
jg
repnz
xchg
flds
xchg
aad
adc
icebp
sub
daa
jns
dec
iret
dec
mov
xor
into
jmp
jae
cld
ret
ds
lods
jmp
das
aad
mov
push
out
and
clc
jno
fs
mov
add
insl
xor
mov
and
aad
nop
and
add
into
mov
xchg
cmpsb
or
adc
push
dec
rep
xchg
imull
std
lea
mov
sarb
xor
pop
lds
cmpsl
adc
sbb
push
inc
inc
inc
dec
dec
pop
lahf
loope,pt
loope
sbb
xchg
popa
push
and
jge
mov
pop
in
push
loop
mov
lea
js
andl
jns
sub
pusha
jb
mov
jge
pop
cmc
mov
mov
xchg
mov
dec
xor
sti
fnstenv
xor
jbe
sub
and
lahf
push
aaa
arpl
movsl
and
push
outsb
arpl
xor
out
cmp
dec
imul
mov
pop
jg
rorb
jno
sbb
rsm
cld
mov
or
in
jbe
call
dec
test
or
repnz
rolb
add
mov
data16
mov
jmp
imul
xor
and
popa
mov
xlat
fmul
mov
leave
and
cmp
pop
cmp
mov
jge
mov
xor
push
sub
mov
cmpsb
test
testb
mov
push
in
inc
aam
pop
dec
bound
dec
jg
or
fisubrs
push
int3
shlb
test
mov
aad
decb
sub
ljmp
xchg
push
and
sbb
shl
jbe
mov
xor
mov
lods
popa
add
adc
popa
pop
add
xchg
add
mov
pop
add
lahf
mov
mov
mov
stos
shlb
sub
das
ret
insl
imul
rcrb
stc
mov
dec
int3
stos
cld
decl
push
sbb
insl
cltd
daa
rolb
lds
call
jmp
loop
jecxz
test
xchg
out
dec
clc
xor
je
mov
das
leave
movsb
pop
xor
sub
pop
push
outsb
xor
or
jg
and
dec
sbb
or
iret
imul
mov
cmc
lds
push
loopne
dec
or
js
mov
push
sub
ret
insl
adc
pop
xchg
repnz
in
shlb
icebp
sub
xchg
mov
ficompl
mov
roll
push
inc
inc
stos
add
mov
fcmovb
add
int
jle
cmpb
mov
xchg
lcall
xor
mov
ss
mov
incl
daa
sub
and
sbb
test
cmp
push
jg
cmp
clc
and
add
jne
std
xchg
sub
pop
sub
push
adc
xor
daa
inc
iret
or
sti
icebp
sub
sbb
cs
cmp
rcrl
out
inc
push
out
sub
mov
push
shrb
adc
lea
cmp
push
in
jp
push
cmp
dec
scas
cmp
sbb
cld
adcb
xchg
int
movsb
xchg
jge
ret
push
push
push
in
adc
push
pop
les
push
mov
adc
and
push
imul
sbb
mov
shl
aas
enter
push
xor
jne
out
or
sub
repnz
int3
das
mov
or
fstps
and
mov
inc
dec
inc
in
add
push
scas
pop
dec
mov
sbb
bound
dec
jecxz
ja
lret
sahf
and
mov
bound
fwait
lret
inc
fdivrs
push
sbb
clc
fildll
int3
push
dec
xlat
xchg
cmc
repnz
test
dec
lock
jne
lds
mov
mov
mov
xchg
mov
mov
mov
rclb
mov
gs
call
push
out
push
jecxz
hlt
pop
repnz
shr
das
xor
and
pop
arpl
mov
sub
or
mov
sti
out
in
mov
mov
pop
in
testb
push
pusha
in
or
shrb
lret
sbb
fstl
pop
test
cli
mov
cld
cs
dec
gs
stos
aaa
jp
sti
push
pop
in
lret
lods
sbb
mov
dec
mov
jnp
add
icebp
push
std
divb
ret
sbb
jmp
or
adc
insl
mov
ror
scas
lods
stos
and
std
push
xor
pushf
and
dec
cltd
jo
jle
adc
pop
dec
ds
lds
mov
mov
jp
ds
out
inc
xchg
and
pmulhuw
mov
jno
sbb
add
inc
call
pop
fisttps
sub
jecxz
sahf
hlt
xor
shl
leave
inc
mov
dec
lcall
sub
pop
imul
mov
push
into
pop
xlat
lea
leave
stos
fsubs
jbe
pushf
sbb
cwtl
dec
sub
jb
cltd
add
cmp
dec
add
push
xchg
fcompl
mov
mov
sub
das
mov
lret
fisubs
cmp
test
ret
cmc
or
movsb
out
mov
das
inc
adc
xchg
sub
mov
pop
mov
sbb
add
and
inc
inc
mov
mov
adc
loope
dec
cmp
nop
pusha
xor
fninit
xchg
dec
fwait
ret
cmp
repz
call
dec
aam
cltd
mov
daa
insl
movsb
cltd
xor
sbb
or
roll
mov
xchg
push
shll
lret
xchg
in
sbb
push
lret
jp
mov
js
out
cmpsb
sub
and
jb
xchg
cmp
ss
stos
cmp
xchg
test
cmp
shlb
out
add
fnsave
inc
adc
jns
ss
push
jo
pop
addr16
inc
cli
ss
mov
test
mov
sbb
mov
test
xor
stc
jbe
js
sti
call
inc
test
jmp
jo
push
loope
lock
cmpsl
sub
leave
xorb
lds
push
sbb
call
pusha
xor
scas
jge
je
dec
andb
lahf
mov
popf
mov
cmpl
test
fs
cmp
xchg
mov
shlb
cmpsl
sti
stos
cmp
inc
pop
negb
jmp
out
adc
mov
leave
jecxz
popa
or
cmpsl
leave
jnp
cmp
inc
add
loopne
mov
mov
push
lods
sbb
scas
popf
mov
xchg
inc
xchg
pop
inc
pop
xlat
or
mov
push
cmp
shlb
mov
repz
outsb
adc
movsl
pushl
sbb
mov
in
int3
push
sub
pop
mov
mov
int
fcompl
cmc
das
push
jno
insl
add
xor
pop
inc
adc
scas
mov
loope
movsb
and
out
ja
out
aas
ljmp
loop
stc
in
or
cld
int3
sbb
sbb
rorl
push
andl
pusha
lods
or
push
adc
or
ret
aad
inc
ret
outsb
pop
xor
dec
enter
shrb
inc
jecxz
sarb
xlat
loop
cmp
adc
jmp
mov
movsl
xor
or
dec
out
inc
cmpsb
sahf
pop
je
mov
loope
xor
jbe
std
insb
and
lahf
and
cmpsl
push
jp
stos
cmp
mov
or
push
notb
sub
jnp
pop
insl
outsl
loop
das
fwait
add
sub
leave
jo
stos
xchg
add
jp
sahf
and
dec
outsb
test
fdivr
std
jmp
or
mov
insl
hlt
or
jno
mov
cmp
sub
cmp
mov
xchg
sbb
insl
push
test
dec
in
clc
mov
fcmove
xchg
aas
xchg
ret
adc
xchg
cmpsb
popa
and
jbe
and
loopne
sbb
insb
div
sub
adc
adc
push
jp
adc
test
sarl
or
mov
jg
popa
cmp
fwait
mov
addb
push
daa
fwait
out
inc
mov
not
int3
or
fcmove
and
mov
fadd
mov
and
mov
int3
fdivr
xor
test
stos
adc
aas
repnz
sbb
scas
stos
int3
sarb
pop
mov
add
jmp
cmpb
add
adc
sub
gs
cmpsl
scas
pop
movsl
in
push
addr16
test
xchg
or
call
dec
jno
dec
or
ss
xor
out
lret
push
xor
mov
leave
push
jmp
mov
cld
dec
lahf
mov
ret
inc
insb
in
pop
inc
push
inc
cmp
jnp
rep
clc
or
mov
add
push
jmp
outsl
outsl
xor
mov
sbb
jp
cmpsb
pop
ficoms
mov
bound
xchg
sub
jno
mov
xor
sbb
mov
pop
movsl
cltd
movsl
negb
jbe
pop
je
pop
sbb
push
push
mov
movsb
lds
pop
push
rol
pop
sub
cmpsl
stos
cmp
test
inc
mov
or
scas
mov
or
leave
cmpl
dec
mov
divl
jmp
push
jno
push
fistps
loope
cmc
pusha
jmp
xlat
push
popa
jbe
sbb
mov
xchg
adc
mov
mov
aam
adc
mov
push
pop
sub
repz
shrl
hlt
sbbl
mov
outsb
filds
ds
rcrl
bound
pop
add
test
scas
pop
aas
mov
mov
xchg
sub
stc
pop
jns
pop
jle
jnp
insb
push
cld
xchg
test
inc
or
nop
mov
test
xchg
mov
ss
leave
ljmp
cmpsb
fs
leave
xchg
mov
in
pop
jle
out
mov
or
adc
dec
fnstenv
enter
dec
push
out
sahf
in
fwait
test
push
into
mov
sub
stos
icebp
in
mov
mov
and
pop
addr16
popf
fldl
int3
push
jge
fdivl
sarl
jmp
adc
cmp
fimuls
push
push
outsl
add
adc
sti
push
and
push
shll
mov
mov
jp
add
cmp
arpl
cs
in
mov
ficoml
int
mov
jp
fwait
nop
dec
add
xchg
mov
mov
mov
sbb
pop
sbb
fists
push
test
dec
arpl
fs
or
xchg
jp,pt
push
xor
jb
int
pop
cmpsb
outsl
xor
add
add
sarl
cmp
adcb
mov
imul
sub
jmp
movsb
rcrb
sub
jbe
aaa
popf
ret
sahf
mov
jbe
inc
lahf
cmpsl
mov
shrb
xor
ud1
sub
jb
xchg
loop
hlt
ret
scas
cmc
std
adc
fwait
movsl
sbb
outsb
adc
pop
inc
movsl
sarb
in
cmp
hlt
movsl
inc
push
xchg
pop
fisubs
es
xchg
bnd
inc
pop
lret
mov
dec
fstpt
xlat
shl
pop
sbb
pop
aaa
fs
fwait
cltd
jo
xchg
pushf
pop
sbb
adc
xorl
jno
xchg
dec
jmp
inc
xlat
out
and
inc
add
mov
push
mov
sub
adc
push
stos
adc
popa
add
inc
or
test
repz
movl
hlt
rdmsr
push
scas
jno
mov
movsb
adc
or
xchg
fsts
repnz
loop
dec
leave
outsb
jns
ret
data16
cltd
sub
inc
imul
pop
push
sub
popa
adc
mov
sahf
xchg
hlt
push
cmp
sbb
sbb
les
movsl
jmp
xchg
icebp
mov
jmp
dec
mov
mov
jno
push
cmp
mov
jno
call
negl
xlat
pop
sbbb
je
aam
and
cmp
out
xor
fistl
mov
int3
xlat
mov
xchg
sbb
jmp
mov
je
dec
notl
and
repnz
mov
out
shll
movsl
mov
dec
xor
pop
popf
cmp
loope
repz
jb
jmp
mov
addl
xor
jecxz
pop
sub
lock
enter
rorl
jle
fmuls
pop
cmp
movsl
imul
or
mov
adc
repz
fidivl
clc
cwtl
xorb
pop
sarl
xchg
lods
roll
ja
cmp
test
jne
pop
movsb
imulb
push
std
test
push
das
push
pop
ljmp
int3
inc
add
in
cmp
aam
imul
insb
xchg
lret
loope
in
aas
pusha
or
std
jp
loopne
xchg
fnstsw
inc
pop
jmp
add
cmp
cwtl
fcoml
mov
add
xchg
mov
bnd
mov
mov
scas
pushf
pop
ss
sub
mov
xor
mov
xchg
lret
inc
jno
movsb
aam
rcr
aad
ja
or
jne
xchg
movsl
movsl
aaa
aam
sbb
mov
in
out
jno
sahf
push
out
xor
and
movsb
rcl
sub
hlt
imul
std
jbe
xlat
jne
mov
nop
jle
adc
ja
leave
sti
pop
jns
lock
imul
xchg
pop
insl
aas
in
pop
mov
and
push
dec
mov
dec
dec
insl
nop
mov
test
mov
pop
in
insl
les
popf
inc
nop
scas
loopne
xor
mov
xchg
sub
pop
dec
popf
mov
adc
fbld
push
andl
xchg
icebp
add
out
aas
pushf
andb
popa
outsl
aad
iret
adc
sbb
lods
or
adc
push
in
mov
xchg
movsl
push
ss
add
mov
fs
dec
das
mov
xchg
cs
loop
shlb
insl
cwtl
dec
push
lret
mov
inc
and
xchg
jno
scas
xchg
push
es
sub
pop
leave
push
dec
pop
sti
mov
rol
test
adc
ficoml
adc
pop
mov
inc
cmp
inc
out
dec
cmp
add
test
mov
ret
fstpt
aad
repnz
outsb
jo
mov
add
lret
xor
xor
out
lods
cs
lahf
push
jge
xor
mov
iret
and
fisttps
push
xchg
lods
gs
xchg
mov
mov
insl
cmpsl
jecxz
xchg
inc
test
xchg
cmp
ret
pop
jne
lcall
cld
xchg
xchg
daa
xchg
mov
jnp
jg
call
cwtl
xchg
sbb
sar
lock
call
loope
cmp
sbb
xchg
ret
adc
and
es
imul
add
repnz
in
sbb
mull
pop
jl
pop
jmp
daa
dec
dec
sub
pop
in
outsl
pop
sahf
cwtl
ret
xor
jnp
icebp
aaa
sub
je
inc
fnsave
lock
jp
xor
lods
icebp
ret
jae
push
mov
enter
repz
rorl
test
inc
push
clc
mov
addr16
ret
icebp
lods
fwait
pop
popa
pop
mulb
or
test
rcrl
and
push
cwtl
iret
cmp
push
mov
dec
dec
loope
xor
pop
cli
jl
jb
or
jmp
dec
or
mov
xor
push
gs
add
pop
mov
push
andl
divb
sbb
leave
jbe
stos
ja
shrl
mov
add
movsb
icebp
mov
shl
xor
xchg
test
mov
dec
sti
or
and
dec
inc
jae
add
push
pop
or
lods
cwtl
adc
xchg
add
mov
nop
xchg
xor
pop
push
xor
xor
sbb
mov
sbb
and
adc
inc
add
pop
bound
xor
add
push
xchg
insl
jecxz
jecxz
insb
mov
sarb
dec
adc
enter
lods
pop
jg
jp
subl
add
jne
scas
or
xchg
rcl
les
sub
das
mov
outsb
dec
fs
push
sahf
out
push
mov
mov
cmpsl
shlb
pop
adc
xor
dec
add
inc
mov
fisttpl
jp
aam
sahf
add
dec
adc
mov
adc
in
xchg
mov
lea
ss
aaa
cld
stos
je
jbe
fildll
sahf
dec
sub
jle
lock
sbb
pop
test
ds
es
adc
fdivrp
pushf
in
sub
mov
xchg
and
andb
std
mov
arpl
out
mov
push
jg
mov
dec
addr16
nop
faddl
movsl
rol
jecxz
cvtps2pd
and
or
xor
mov
dec
lock
pop
jmp
push
sbb
aas
fdivs
jo
call
mov
movsb
dec
xor
cmpsb
test
sbb
imul
adc
pop
dec
mov
inc
insl
jle
push
movsb
push
addr16
and
inc
sub
fisttpll
movsb
aam
mov
in
inc
mov
add
stos
jmp
pushf
lods
adc
jg
jl
xchg
jno
cld
in
nop
push
jae
push
xchg
pop
fimuls
sti
mov
outsb
push
cmpsb
loopne
sbbb
xchg
and
mov
in
jne
jne
push
mov
or
inc
xchg
mov
bound
sub
lods
sbb
lea
mov
int
cmp
fisttps
ficoms
in
sub
pop
jp
inc
in
cmp
orb
cmp
xor
push
leave
insl
ja
aad
sbbl
mov
xchg
push
repz
push
mov
and
inc
sbb
push
jb
dec
test
or
sub
ret
cwtl
xchg
ficoms
std
std
dec
or
les
cld
push
or
sahf
aas
xor
cwtl
cmp
call
in
cmpsb
dec
dec
pop
inc
cmpsl
int
lea
ret
bound
lock
xchg
dec
fnsave
fstpl
mov
test
popf
add
mov
jmp
xlat
stc
popa
cld
sbb
insb
outsb
jl
pop
or
ljmp
cmpb
jb
loope
mov
sahf
lock
ja
std
cmp
jns
push
xor
lock
inc
mov
repz
stc
out
outsb
in
pop
fisttps
lea
sub
imul
shll
cld
mov
jbe
subb
inc
pop
sub
sbb
xlat
sarb
stos
into
hlt
mov
xchg
adc
push
xor
cmp
and
cmp
pusha
movsl
sub
pushf
dec
cwtl
test
test
and
orl
fnstenv
ror
sbb
dec
xchg
mov
mov
mov
ss
filds
loope
inc
dec
push
cmc
adc
dec
inc
pop
test
inc
push
xchg
sub
inc
fadd
popf
pushf
dec
jg
cmp
js
and
lods
sbbl
cmpsl
loop
push
mov
xor
ret
adc
xor
jb
xor
cmpsb
or
int3
jl
rorl
imul
repnz
inc
rcrl
xchg
shlb
pop
iret
xlat
std
jp
mov
js
outsb
mov
cmovns
ret
or
lahf
adc
xchg
sub
jmp
divb
popl
dec
xchg
movsb
inc
aaa
incb
aas
xchg
scas
lods
or
sbb
cmp
inc
and
pop
fdivr
push
xchg
dec
test
loopne
mov
adc
mov
push
fstpl
fmull
add
popa
jb
xchg
jns
dec
mov
mov
cld
pop
jno
in
shrl
insl
fbld
cmp
push
sub
xchg
lea
sbb
dec
shlb
push
imul
xchg
pusha
inc
sahf
mov
xchg
push
lcall
into
stos
dec
fcoml
fcmove
loopne
cli
push
mov
xlat
jge
aaa
xchg
mov
cmp
shlb
or
clc
ret
hlt
aas
cmp
push
mov
push
addr16
lods
sub
fldl
movsb
test
rol
mulb
mov
in
jl
insl
mov
fcoms
inc
sbb
inc
loopne
xchg
sbb
lock
outsb
push
pop
inc
mov
xchg
mov
sub
jb
popa
cmp
cmp
jge
loopne
or
add
xor
xor
clc
mov
add
es
loop
mov
pop
std
repnz
sub
push
jecxz
rcrl
sub
jne
les
loope
fs
cmp
lds
cld
mov
dec
ret
push
loop
jno
sub
out
dec
sub
inc
dec
inc
jle
sbb
cmp
int
or
mov
mov
or
or
adc
fildll
ror
sub
xchg
push
mov
cs
out
inc
fbstp
or
pop
int3
dec
movb
mov
fcmove
jne
pop
xchg
add
cwtl
or
mov
xchg
mov
nop
and
popl
sub
add
and
jmp
ljmp
inc
cld
movsb
loope
cmp
leave
jae
icebp
fidivrs
jmp
into
sbb
ss
sbb
dec
test
test
push
andb
dec
xor
xchg
cmp
lret
mov
pop
sub
jle
xorb
fsubrs
repnz
call
cmp
mov
test
imul
popa
xor
dec
cmp
inc
lods
xor
add
pop
loopne
and
cmp
test
cmp
out
sub
popf
push
xchg
cmpb
test
loope
sub
roll
jge
mov
lcall
lea
push
mov
adc
mov
shl
inc
lahf
sbb
pop
fs
lods
nop
cltd
pusha
xor
mov
add
stos
and
jl
sbb
stos
es
outsl
aam
js
or
pop
imul
pusha
sbb
out
int
fldcw
stos
sub
mov
das
xor
and
daa
in
ja
into
ret
icebp
pop
stos
dec
loope
jmp
scas
pop
call
push
adc
cmpsb
add
xor
push
lcall
sbb
ljmp
sahf
sti
test
jge
insb
mov
incl
es
les
push
shlb
arpl
xor
pop
adc
push
cld
fdivl
dec
out
and
repz
or
xchg
popf
imulb
adc
push
push
ret
shlb
adc
or
cli
andb
out
sbb
out
sbb
xor
ror
shrb
xor
dec
stc
rolb
mov
and
push
test
sub
jl
add
cmpsl
sub
xorb
sub
jmp
push
in
into
sub
pusha
mov
jo
mov
jmp
push
int
sub
and
lock
jecxz
xor
cmp
mov
sub
test
dec
test
arpl
arpl
fwait
rcl
and
fs
fsubrp
mov
sbb
sub
lock
pop
inc
rolb
mov
int3
xchg
sub
push
sbb
je
iret
and
sahf
pop
bswap
adc
sub
xchg
jnp
sbb
jge
inc
add
and
dec
scas
jecxz
arpl
stc
ds
bound
shll
addl
scas
in
pop
jnp
cmp
cmp
jp
and
mov
sub
mov
and
mov
adc
cmpsl
mov
fiadds
jne
iret
test
mov
add
mov
popa
push
cmpsb
adc
push
xchg
out
inc
adc
push
add
out
jle
ds
cmp
pushf
fimull
pop
fnstsw
dec
mov
lret
out
jmp
adc
and
pop
mulb
aas
or
lds
jmp
in
or
repnz
adc
sub
roll
xor
xchg
mov
fnstsw
or
sbbb
aam
push
push
mov
neg
data16
scas
mov
dec
ljmp
inc
fimuls
cli
or
dec
mov
jne
xor
cmpl
leave
loopne
adc
outsb
call
imul
xor
push
bound
adcb
shll
mov
mov
add
mov
call
sbb
movb
and
xchg
pop
and
jmp
adc
dec
mov
fdivrl
lcall
cmpsb
push
sahf
in
dec
jns
lcall
mov
and
aas
roll
xor
xor
mov
out
cmpsb
sub
sub
jle
push
xor
push
call
ret
scas
je
in
xorb
jo
xor
and
xchg
push
scas
fiadds
or
jne
jo
outsb
sub
sub
cmp
mov
jmp
sbbb
and
ror
ret
push
mov
jo
jl
adcl
push
mov
das
cmpb
or
inc
rclb
addl
rorb
xor
mov
dec
icebp
dec
inc
ret
push
fdivrl
jne
or
cmp
out
pop
dec
pop
jnp
mov
insl
cmc
xchg
aaa
inc
repz
aas
xchg
xchg
jmp
mov
jns
arpl
ficomps
mov
inc
pop
push
mov
int
sub
push
jo
int
and
scas
or
pop
inc
imul
repz
out
mov
cmpsl
adc
rolb
cmpsb
sbb
mov
push
dec
fisubrl
xchg
mov
mov
cmp
in
int3
repz
push
lret
sbb
mov
pop
subb
fwait
adc
mov
fwait
rcrl
lret
hlt
adc
out
pop
sub
xor
sub
lcall
lods
push
inc
ja
stc
icebp
mov
dec
cmp
jo
lock
add
fucomp
ja
jle
in
cmp
jno
popf
pusha
cli
mov
xor
sub
and
repnz
xor
add
sbb
pushf
sbb
push
std
jbe
and
push
pushf
in
in
push
jno
or
xor
pop
outsb
fidivs
pop
aas
add
nop
xchg
xchg
and
repz
mov
cmpsl
sub
cmp
pop
cmp
inc
sbb
push
push
or
scas
and
call
push
mov
mov
incl
jle
mov
ss
sbb
xor
xchg
mov
adc
fcompl
pop
cs
sub
and
xchg
push
enter
pop
ljmp
rcrl
add
das
es
adc
adc
pop
or
jbe
jbe
mov
fstps
call
xchg
sub
jb
decl
stc
inc
and
mov
push
or
sbb
mov
adc
mov
mov
dec
cmp
cmp
aam
aas
aad
mov
mov
jecxz
popa
xor
and
xchg
daa
ret
sbb
xor
aaa
sahf
sub
out
sub
lret
add
ftst
adc
ds
mov
sbb
lcall
fs
xlat
fistpll
dec
xchg
mov
es
pop
push
push
dec
ret
cltd
inc
mov
fs
mov
clc
std
dec
cmp
mov
and
jo
inc
mov
ret
popf
jp
inc
lret
mov
das
xchg
mov
mov
xchg
hlt
outsl
mov
xchg
mov
loopne
sub
sbb
leave
dec
in
and
push
clc
lock
jg
out
inc
xchg
imul
cs
dec
aam
rorb
imul
ljmp
xorw
push
outsl
dec
cmovl
mov
xchg
std
jae
ljmp
jmp
scas
and
inc
es
dec
popf
xlat
nop
inc
call
or
mov
mov
adc
mov
pop
cwtl
adc
lret
mov
ss
aas
inc
xor
test
mov
xchg
pop
xchg
dec
mov
fs
daa
mov
pop
or
cmp
aas
push
or
ret
hlt
cmp
and
xor
addr16
pop
xor
pop
lods
mov
jl
add
pushf
push
shr
fnstcw
into
and
mov
dec
push
dec
mov
loope
jmp
sbb
mov
movsb
fisubrs
lock
push
popf
in
jns
std
fdivrl
sub
pop
aam
orb
fsubs
push
jmp
and
mov
insl
fisubs
and
sbb
popa
imul
cli
pop
cmpsl
aaa
jle
push
mov
sarl
out
mov
push
mov
mov
test
sbb
sub
test
mov
lods
call
out
xor
pusha
fwait
dec
push
testl
ljmp
insl
jmp
out
mov
sub
or
in
inc
adc
bound
sub
cmc
or
dec
int3
pop
xor
mov
dec
fnstsw
les
cltd
jae
cmp
mov
xchg
popf
and
xchg
mov
or
mov
inc
mov
movl
fwait
mov
and
inc
clc
inc
jmp
pop
push
xor
enter
jno
aas
and
dec
cmp
adc
xlat
cld
pop
or
aam
cmp
rcrl
add
loopne
imul
cld
outsl
lods
sub
fwait
jp
insb
ficoms
lea
fisubrs
nop
adc
fistps
ret
mov
xlat
aad
mov
sub
mov
dec
scas
mov
mov
dec
adc
loope
mov
mov
inc
insb
clc
cmpsl
xchg
test
sub
shrb
fwait
xor
enter
adc
xlat
or
adc
xor
xchg
xchg
push
mov
xor
ret
jb
jno
inc
loope
xor
aas
icebp
stos
lahf
jo
test
add
mov
adc
dec
loope
xlat
and
stos
pushf
test
hlt
inc
inc
outsl
cwtl
jmp
out
jl
sbb
inc
jle
aad
add
add
jbe
dec
popa
daa
pusha
aam
dec
jmp
adc
xchg
adc
call
fcom
sahf
repz
cmc
dec
loope
int
fdivrl
pop
add
xchg
fidivrl
test
mov
pop
pop
sub
icebp
inc
mov
jmp
aaa
or
xor
insb
mov
clc
add
shl
xchg
inc
mov
mov
adc
jmp
mov
fs
xor
xor
enter
jae
mov
sahf
cmpsb
addr16
pop
push
popf
cltd
in
dec
fidivl
frstor
clc
cli
pop
pop
pop
jge
imul
lock
sti
cmpsl
xlat
mov
add
fcoms
or
mul
jmp
pop
fisubl
les
jno
gs
xlat
lahf
jle
movsl
mov
imul
push
adc
inc
loopne
ljmp
or
sahf
js
jns
mov
pop
push
xchg
into
int3
testb
fs
cld
repnz
sub
bound
or
pop
pop
xor
sbb
lea
mov
fbld
xlat
cltd
inc
pusha
sub
xlat
push
les
lahf
push
mov
lea
imul
adc
aad
punpckhdq
out
or
fiaddl
push
and
jne
or
jmp
sti
sbb
xchg
mov
insl
pop
inc
repnz
add
hlt
enter
add
xor
mov
std
mov
rcll
jg
xchg
cli
dec
cwtl
push
push
ficoms
ror
jl
add
dec
cmpb
xchg
cmp
aas
adc
add
lcall
in
popf
ret
mov
bound
mov
ret
jmp
mov
adc
ret
call
jb
inc
nopl
jo
pop
decl
xchg
jp
pop
mov
in
lret
in
and
adc
lahf
mov
nop
and
jge
mov
rcrl
popa
fwait
or
cmp
inc
cmp
and
cli
xchg
shrl
les
lds
cmp
jb
enter
or
add
mov
xchg
dec
sub
cltd
das
int3
cmp
cmp
mov
ja
push
lcall
push
in
and
xlat
push
stos
stos
xlat
push
out
pop
aaa
ret
pop
adc
add
cmp
jb
test
iret
cmc
mov
cmc
lods
mov
loope
sub
mov
js
idivl
xchg
lods
outsl
rcrb
mov
xchg
repz
out
in
out
inc
add
movsb
xor
mov
out
ljmp
das
jo
jno
scas
jnp
xchg
jae
xor
gs
or
cmpsb
add
push
leave
cmp
sbb
fldcw
call
fildll
outsb
jmp
ds
mov
push
ret
mov
sbb
xor
mov
dec
add
fstps
roll
aam
aad
mov
or
jbe
test
xor
pop
mov
out
aas
decb
fsts
xchg
es
fisttps
mov
add
in
in
call
xchg
mov
fisubrl
xchg
push
or
and
popf
mov
push
mov
sti
dec
insl
loopne
xor
lret
dec
mov
xor
jo
mov
inc
add
mov
fld
jo
push
fwait
lds
dec
adc
iret
dec
fidivl
jle
mov
add
add
nop
inc
or
pop
pop
ret
pop
sub
mov
sub
dec
inc
out
movsb
adc
mov
outsb
dec
adc
aas
dec
leave
mov
xchg
stc
cmc
in
pop
pop
les
xchg
cmp
pop
ss
lcall
mov
stc
ret
mov
and
jge
jns
dec
ss
sahf
fwait
insb
outsl
test
add
mov
jbe
sbb
mov
insb
fistpl
sub
jo
and
outsl
jle
adc
mov
xchg
into
popa
xchg
out
push
imul
sub
bound
fisubs
sbb
aam
or
sbb
cwtl
scas
cmpsl
inc
stos
add
int
adc
movsb
call
lock
repnz
cmp
ret
mov
push
push
push
lods
jne
push
rcrl
adc
fdivrs
cld
aad
scas
inc
negb
test
movsb
lea
dec
push
in
dec
jo
add
ss
and
mov
sub
test
xor
aas
push
divw
inc
mov
aaa
add
into
cli
scas
cld
jbe
and
inc
adc
repz
and
dec
sti
mov
pop
dec
fstp
aad
cli
adc
mov
sbb
pop
sti
stos
movsb
shr
aam
adc
cmpsl
sub
cmpsl
mov
xchg
adc
pop
pop
inc
pop
ds
cmp
dec
sub
ficompl
mov
xor
rolb
aaa
aas
sahf
pop
in
imul
sahf
cs
imul
outsl
icebp
stos
cwtl
mov
sarb
fadd
stc
xlat
movsb
pop
sub
and
dec
sbb
xor
cli
fisttps
jp
mov
mov
mov
movsl
jbe
push
movsl
xchg
in
cmpsl
addb
pop
cmpb
mov
push
push
push
mov
pop
jne
mov
mov
add
mov
sub
in
push
out
shl
jp
cmc
es
cmpsb
aad
std
mov
sti
stos
jno
rorl
add
roll
push
add
push
mov
leave
jp
cmc
add
or
cwtl
sbb
xchg
mov
push
push
aad
cld
jnp
dec
dec
push
inc
loop
loope
push
push
outsl
out
jno
sub
pop
iret
stos
and
jbe
adc
pop
mov
pop
mov
adc
jp
bound
rorb
xchg
fisubrl
dec
int
sub
aam
jns
mov
lret
test
push
push
sbb
and
bound
inc
and
das
ljmp
ror
mov
adcl
push
adc
inc
mov
lret
orb
mov
xchg
xor
mov
mov
dec
xchg
jle
pop
pop
aad
jge
cltd
xor
or
fstps
jnp
scas
cmp
mov
test
or
lret
fistps
lods
sarl
rorl
mov
pop
and
xchg
push
and
stos
fxch
adc
push
xchg
and
sub
or
fcmovnb
pop
push
in
mov
pop
stos
and
push
pusha
test
or
pop
shlb
xor
mov
daa
shlb
jno,pt
sub
xor
mov
jmp
test
call
fstpt
cmp
add
shl
lahf
leave
mov
scas
jns
dec
js
inc
scas
lock
jl
popf
fsubrs
in
fldenv
jno
scas
ja
rcr
mov
ss
enter
adc
mov
adc
push
jae
ds
rcrb
mov
or
sbb
rol
inc
push
outsb
hlt
mov
negb
xchg
insb
out
xlat
add
test
jl
jmp
jo
cli
mov
mov
mov
xchg
cmc
clc
dec
push
xchg
lcall
cwtl
stos
in
or
jge
adc
fdivs
mov
mov
cmp
pop
mov
cwtl
loop
sub
insb
jbe
aad
xchg
fs
xor
add
test
push
and
push
lret
pusha
jae
jg
cmpsl
shll
mov
or
xchg
gs
sbb
sbb
jle,pt
push
cmpsl
popa
sbb
push
and
push
jne
sub
dec
rolb
pop
and
mov
fcomi
out
push
push
xor
add
cli
fsts
cmc
fcoms
xor
div
lret
adcb
stc
and
inc
and
dec
inc
xchg
ds
icebp
popf
sbb
sub
addr16
add
jae
repz
xchg
inc
insb
insl
in
mov
mov
mov
push
addb
cmpsb
mov
enter
ret
outsb
or
mov
in
jge,pt
clc
jp
pop
sub
and
jb
xlat
ljmp
add
imul
mov
cmc
sub
push
pop
int3
xchg
fwait
pop
movups
in
fmull
push
inc
sbb
jmp
xor
push
sub
bound
cmpl
or
imul
dec
cmp
dec
and
adc
adc
sub
xor
inc
push
rcrl
insl
push
testl
xchg
pop
push
or
xor
scas
fstps
mov
mov
mov
xchg
scas
xor
int3
mov
stos
push
cmp
push
lahf
icebp
mov
jcxz
data16
mov
xchg
int3
scas
js
push
outsb
pop
stos
mov
aas
push
mov
push
sub
lahf
lret
movsl
jns
ja
repz
es
loopne
popa
mov
adc
mov
shrl
xor
cld
mov
aad
jae
negl
fldl
pop
mov
push
mov
add
popa
sbb
cli
sbb
mov
pop
pusha
aad
or
lods
out
pushf
int
sbb
sbb
cmp
mul
push
stos
jl
cwtl
enter
sub
dec
add
jp
aaa
xor
jb
dec
or
imul
or
mov
mov
test
js
cmp
out
mov
cmp
cmp
fbld
mov
pushf
test
movsb
or
ret
xlat
fsts
mov
mov
clc
outsl
inc
iret
push
daa
fldl
lea
fwait
xchg
popf
loopne
push
jmp
sbb
jecxz
imul
adc
pop
enter
je
or
sbb
insl
sub
in
push
shrb
iret
mov
fbld
mov
xchg
mov
bound
sbb
lods
mov
mov
xchg
jge
ljmp
lret
cmp
int
cltd
push
lea
sub
das
push
fwait
cmp
cs
add
icebp
pop
mov
or
mov
adc
add
js
push
push
jecxz
xchg
xlat
rol
pop
sahf
pushf
loope
insw
scas
jle
add
push
pusha
ss
or
xor
xchg
inc
jle
mov
cmc
add
pop
sbb
xchg
jnp
inc
movsl
out
xchg
pop
mov
rcll
aam
outsb
jp
jo
std
jns
mov
push
outsl
lock
mov
mov
out
add
push
add
dec
out
and
mov
or
in
mov
lods
jle
lods
sbb
jge
mov
cmp
lret
iret
mov
mov
and
or
sbb
sub
mov
adc
testl
sti
test
aad
push
mov
adc
cmp
in
sbb
dec
lods
xlat
loopne
xor
shll
jl
lock
das
cmp
mov
cmp
jmp
test
out
adc
dec
stc
sub
lret
dec
outsl
xchg
arpl
adc
pop
pop
mov
imul
and
into
clc
cltd
sbb
ret
ret
stc
jle
add
adc
jg
xchg
je
sbb
xlat
sbb
mov
fwait
test
xchg
iret
pop
adcb
test
in
cmpb
pop
cmp
cmp
sbb
and
sub
add
fwait
bound
jge
add
push
stos
aad
xchg
ret
fbld
cmp
imul
pop
das
ficoms
dec
notb
outsb
mov
add
dec
aad
cmp
lahf
and
imul
xchg
adc
clc
rol
ljmp
in
mov
dec
jo
hlt
test
jmp
dec
dec
ror
ljmp
adc
test
cmp
clc
test
rcr
loope
inc
fnstcw
das
push
inc
push
sub
nop
sbb
xchg
mov
enter
mov
mov
outsl
mov
out
push
or
mov
mov
fcmovu
test
aaa
mov
dec
push
imul
mov
mov
mov
jbe
jge
jg
and
push
xor
cmp
cmp
pop
mov
out
jl
dec
add
add
add
add
stos
xor
inc
int
pop
mov
movsl
sahf
pop
test
dec
dec
jne
cwtl
ret
sub
addb
in
test
cmp
int
xor
ds
mov
jl
or
cmp
cmp
mov
dec
aaa
sub
inc
fists
mov
test
add
mov
mov
mov
aam
mov
xlat
and
rorl
mov
mov
inc
mov
jmp
jae
rolb
sahf
jmp
imul
sahf
jae
sahf
fimull
int
adc
mov
mov
mov
pushf
or
or
xor
add
dec
shrb
arpl
xchg
adc
pop
popf
or
xchg
cmpsb
mov
test
push
xchg
push
lods
mov
into
mov
xchg
test
mov
pop
mov
sbb
dec
dec
fidivrs
movsl
sub
fsubl
adc
xchg
or
push
imul
ret
mov
jmp
mov
xor
mov
xor
pop
mov
cmp
add
jb
push
test
and
outsl
call
in
mov
cmc
cmp
cmp
aad
std
shr
xor
adc
mov
mov
pop
xchg
mov
mov
and
sub
push
xor
or
add
mov
movsl
ret
mov
dec
mov
ss
jbe
mov
push
dec
call
xchg
lods
and
scas
push
xlat
sub
push
pusha
mov
cmc
sbb
fmulp
lret
cmpl
xor
mov
into
je
or
lcall
scas
sub
mov
jmp
fisubl
push
mov
data16
in
xor
adc
dec
push
in
inc
adc
test
xchg
lret
mov
in
inc
pop
and
js,pt
add
pop
rorb
mov
dec
or
mov
or
ja
push
iret
jne
sub
jne
scas
shl
data16
ret
cltd
sbb
dec
outsl
shrb
sub
nop
jp
inc
sub
inc
pop
inc
pop
jmp
in
push
inc
xor
adc
jnp
and
mov
incl
and
pop
out
and
jb
or
cmpb
mov
jl
lret
pop
xchg
mov
pop
mov
cmp
out
movsl
cmp
into
xor
test
cmp
mov
lcall
add
lods
rolb
dec
testb
adcl
data16
out
rcr
pop
jbe
adc
fistl
stos
mov
repz
jl
or
pop
push
mov
mov
cwtl
xor
hlt
fcmovne
icebp
push
push
xor
pop
push
cmp
cwtl
loope
subb
outsb
call
jmp
rclb
mov
jmp
and
repnz
mov
jne
cmp
popf
sti
and
sarl
sub
aaa
xor
lds
add
and
mov
ljmp
cmp
stc
icebp
aad
mov
pop
mov
popa
mov
pushf
in
loop
mov
adc
scas
mov
gs
std
jno
cld
push
adc
idivb
xor
nop
inc
out
cmp
out
wbinvd
cltd
mov
lret
xchg
sbb
mov
pop
iret
cwtl
movsb
and
jno
roll
jb
xlat
nop
adc
push
in
cmp
imul
inc
rcrb
jmp
rcll
cltd
push
shll
jg
add
shll
shl
xchg
jae
cmc
rcrl
mov
lods
mov
or
les
mov
lret
test
mov
pop
and
leave
repz
fcomp
mov
call
ja
jo
fwait
jp
mov
pusha
adc
adc
js
cli
mov
add
dec
lcall
mov
cmc
add
cs
je
mov
xchg
sahf
mov
icebp
inc
jge,pn
pop
jae
inc
or
sarb
mov
lods
add
xchg
daa
pcmpeqd
cmp
push
stos
je
jp
es
mov
arpl
hlt
gs
jb
mov
jb
es
mov
mov
std
dec
mov
rclb
sub
je
mov
loope
push
ret
clc
push
sub
stos
inc
mov
and
dec
inc
sub
rcl
in
cmpsb
int3
jnp
adc
sarb
jg
or
mov
cmp
mov
pop
fwait
sbb
in
hlt
jl
stos
and
mov
cmpsb
dec
jp
push
xchg
mov
or
or
negb
in
or
insl
js
pushf
inc
and
jmp
xor
icebp
rol
inc
sbb
pop
aaa
ja
lods
jno
frstor
sub
insb
or
scas
push
icebp
xchg
mov
lods
cmc
push
fisttpll
cltd
pop
out
mov
and
shlb
rcll
ffreep
sub
loop
mov
fiadds
mov
lods
or
pusha
iret
pusha
fcompl
imul
push
lret
mov
rorb
shlb
mov
add
lcall
loop
mov
adc
dec
jge
jp
mov
rcr
add
pop
mov
imull
fidivrl
mov
dec
into
pop
lock
inc
loop
dec
idivl
orb
add
jne
stc
lret
adc
arpl
pop
jno
push
pop
sub
xor
aam
mov
xor
lcall
or
enterw
mov
imul
std
fdiv
cmpsb
shl
ljmp
mov
test
test
xor
pop
or
aaa
repnz
ja
jmp
cmp
adc
mov
or
jmp
lahf
js
and
incb
push
movsl
xchg
inc
out
dec
insl
mov
or
cmp
lret
and
cmpsb
mov
or
cmp
dec
pop
add
jge
pop
incb
mov
jne
leave
das
lahf
mov
outsl
lods
sahf
add
ja
dec
pusha
psubb
fsubs
mov
pop
movsb
negb
scas
mov
xchg
aam
std
pop
mov
xor
xchg
pop
int3
push
aas
dec
or
mov
and
outsl
jp
stos
mov
inc
mov
sbb
jmp
add
imull
and
dec
outsl
ror
test
pop
hlt
mov
xbegin
hlt
and
pop
rclb
stos
adc
leave
adc
push
inc
adc
cmp
jns
or
push
sti
push
les
or
addps
pop
dec
jecxz
mov
scas
test
cmc
int3
mov
addb
pop
or
movsb
cmp
call
xchg
and
dec
add
sub
cld
sub
shrb
mov
dec
lcall
pusha
pop
ret
cmp
inc
sub
xor
mov
cld
inc
jo
mov
xchg
push
ds
arpl
in
popa
imul
lods
sub
add
repz
ja
jne
pop
mov
fnstsw
repz
mov
mov
das
add
cld
sbb
dec
sub
hlt
cmp
sar
mov
fs
dec
jo
dec
xchg
scas
sbb
movsb
and
cmc
cmp
mov
in
and
or
jmp
push
sub
dec
mov
inc
out
sub
jge
inc
fisubrl
scas
pop
lcall
xchg
inc
xchg
loope
xchg
stc
cmc
ds
jg
sbb
or
dec
call
adc
pop
outsb
xor
iret
aam
data16
sub
add
aas
psubsw
add
push
in
ss
aad
mov
cmp
scas
add
dec
lret
xchg
push
mov
push
imul
loop
repnz
push
or
in
mov
in
jecxz
nop
shr
xor
ret
dec
sbb
mov
or
daa
jle
mov
sahf
jns
aas
sub
cmpsb
mov
mov
test
out
mov
loopne
pop
jo
std
fildl
adc
cmp
int
push
dec
sub
je
mov
dec
call
test
ja
and
and
and
inc
and
test
sub
divb
mov
mov
xchg
mov
lea
jmp
sub
adc
xor
cmp
fsubrs
cmp
jecxz
cs
or
movsl
adc
sbb
repnz
test
or
pusha
mov
outsl
aaa
mov
int3
imul
push
inc
sahf
sbb
jp
push
sarb
pop
aas
icebp
rclb
pop
or
std
and
cmp
inc
or
mov
push
test
push
push
fisubl
and
jge
sbb
lea
scas
sbb
sbb
rcpps
mov
sub
cwtl
clc
jmp
add
add
pop
fsub
pop
cmp
rcll
fs
rol
roll
add
inc
xor
cltd
add
loop
int
adcb
cmp
inc
sbb
push
jl
shlb
inc
loop
mov
jmp
std
cwtl
loop
imul
imul
mov
dec
inc
inc
sub
pop
adc
dec
imul
stos
lds
nop
inc
sahf
fisubrl
xchg
fdivp
aad
pop
and
cmp
push
pop
fwait
mov
dec
xor
lock
xor
insl
shlb
test
and
or
sub
sti
ss
add
inc
jae
adc
mov
push
push
xlat
xor
addr16
mov
or
add
fdivrl
ficoml
pop
mov
cwtl
xchg
leave
mov
sbb
fdivl
cmpsb
xor
in
push
cmp
cmp
adc
mov
or
inc
cmp
push
adc
ret
loop
xchg
clc
pop
out
xchg
out
sbb
adc
imul
and
mov
jae
push
test
add
lock
dec
imul
push
pop
sbb
add
in
sub
mov
inc
and
xor
inc
cli
mov
movsb
xlat
fstl
xchg
movsl
enter
jb
imul
mov
leave
push
mov
mov
xor
rol
aam
bound
es
fisttps
hlt
sub
scas
mov
inc
or
pop
aas
push
xor
jnp
insb
mov
lcall
add
mov
insb
mov
test
pusha
pop
inc
pushf
jnp
mov
into
push
fildl
adc
ficomps
out
mov
adc
inc
pop
xchg
mov
mov
pop
inc
ja
lock
mov
or
imulb
pop
or
jbe
or
cltd
and
sub
ds
insb
and
aaa
or
add
test
xchg
test
cmp
std
inc
std
pop
push
jbe
jb
xchg
in
stos
movsl
and
cmp
jp
jae
imul
mov
push
mov
mov
std
push
pop
lods
cmp
mov
xchg
pop
sbb
scas
stos
lock
xor
lea
jecxz
out
fiaddl
ret
popf
daa
push
cmp
aam
out
dec
int3
sbb
std
cltd
adc
mov
jp
jns
sti
in
sub
xor
test
scas
lock
pop
scas
add
xchg
shl
sub
push
cwtl
jae
or
inc
mul
xor
mov
mov
sahf
cmpsb
in
int
rclb
push
mov
rorl
call
pop
inc
shrl
push
add
ror
cltd
add
push
mov
ss
mov
and
push
add
adc
dec
pop
ss
and
jge
femms
dec
lcall
mov
push
xchg
clc
into
xor
popa
jge
loope
std
cmpsb
out
jecxz
mov
mov
xor
ret
sbb
dec
xchg
mov
pop
cld
adc
cld
adc
int3
xor
mov
xor
and
das
xor
cld
push
icebp
cmp
mov
pop
or
enter
xchg
xor
cmc
pop
jbe
out
dec
and
push
push
repz
shl
inc
mov
cs
xor
loope
in
aas
std
sbb
and
sub
test
les
stos
pop
cltd
push
popa
fwait
xor
int3
es
cltd
cmp
sub
or
push
xchg
lcall
inc
aad
sahf
xor
push
add
mov
jne
nop
and
pop
xchg
int
and
int
xchg
push
in
mov
sub
jle
fisubrl
cmpl
push
jl
inc
lds
inc
push
lea
stc
lret
or
movsl
adc
aaa
rorb
icebp
fs
ss
xchg
cli
jns
hlt
mov
jmp
je
stos
push
mov
pop
fsub
xor
add
mov
js
out
or
ret
adc
pusha
jae
add
repz
inc
scas
lret
and
rclb
movsb
xchg
inc
fs
adc
js
add
cmp
mov
lcall
popa
xchg
addb
xchg
pop
inc
cmpsb
cmp
adc
inc
push
or
aas
pop
or
pop
shrl
jnp
push
fstpl
dec
cltd
xor
call
or
outsb
mov
push
jl
push
xor
xchg
push
inc
les
mov
cs
int3
stc
ss
mov
lea
or
dec
lcall
inc
fcmovnbe
lods
mov
test
or
sbb
xchg
fldl
cmpsl
and
and
mov
cwtl
fidivrs
pop
aad
xchg
divl
in
in
lods
arpl
mov
es
add
ret
scas
mov
push
push
mov
add
xchg
mov
ljmp
jle
out
push
stc
out
les
jns
mov
lds
xchg
loope
bound
loop
sub
inc
aad
cmp
out
xor
jl
xor
jp
inc
jno
shrl
loope
mov
xchg
mov
jb
outsl
mov
mulb
stos
add
jmp
mov
pxor
pushf
addr16
mov
xchg
pop
jle
sbb
mov
ret
mov
fwait
incb
shll
push
repnz
push
lret
cmp
pop
mov
jne
loop
mov
mov
jmp
sbb
xchg
inc
sti
popf
std
pushf
xchg
js
inc
mov
movl
xor
xchg
adc
outsb
jo
addl
pop
sub
push
popf
stc
fiadds
fildll
jbe
dec
movsb
stc
shlb
and
dec
xor
jbe
outsb
lret
repnz
scas
mov
cmp
data16
std
sbb
hlt
aam
sub
cli
out
xchg
flds
in
or
mov
pop
lods
jo
stos
or
fstl
dec
ret
mov
dec
rcpps
mov
mov
pop
fcomps
mov
pop
rorl
cmpsl
mov
repnz
ss
aad
mov
push
ret
mov
pop
xor
mov
sbb
lret
idivl
mov
push
insl
push
bound
test
mov
rcrb
xchg
add
jg
stos
sbb
and
add
mov
jnp
sbb
mov
mov
in
cmp
jp
mov
or
insl
cmp
dec
push
call
xchg
sub
jp
loop
out
nop
xchg
xor
pushf
loopne
mov
push
ljmp
xchg
add
mov
mov
jge
push
jno
fwait
ret
mov
jp
lock
fstps
cwtl
setne
cmpsl
test
rcll
xchg
sub
std
shlb
ja
adc
jle
mov
aad
xor
pushf
out
cs
loope
mov
xor
lds
aam
mov
fstpl
dec
popa
cld
mov
jns
mov
mov
push
jg
pop
inc
add
cwtl
xchg
xchg
or
push
cmp
addb
adc
dec
das
shll
out
dec
jae
pusha
or
fisubrs
scas
adc
xchg
arpl
das
adc
pop
mov
aas
mov
dec
pusha
movsl
arpl
sahf
adcl
xlat
sub
push
and
pop
ror
call
iret
jl
push
cltd
xlat
dec
dec
pop
ror
mov
fstps
mov
test
je
and
mov
or
mov
push
cmp
cmp
outsb
sub
jle
cltd
jle
xchg
insb
xchg
jo
fisubrl
inc
shrb
stos
mov
rcrl
sub
push
cmpsb
shll
sbb
cltd
ret
xchg
filds
popa
popf
and
rcl
mov
outsl
or
sub
loopne
mov
rcr
push
mov
test
or
test
dec
rcrb
dec
mov
lret
cmc
ss
ljmp
negb
insl
loopne
xor
jo
mov
gs
cmp
inc
test
and
sahf
ja
bnd
mov
add
xor
and
outsl
sub
out
leave
jp
cmp
push
inc
pusha
pop
das
dec
push
inc
popa
psubusb
lods
adc
fsubrl
sbb
add
pusha
mov
inc
ljmp
mov
pop
or
or
push
adc
xchg
ljmp
or
dec
data16
sbb
inc
es
mov
xor
sub
outsb
cmpsb
push
mov
std
inc
mov
loope
xor
test
fcompl
ljmp
ja
sub
repz
cld
lea
xor
jno
xchg
sub
add
lea
jb
push
mov
hlt
leave
xor
movl
and
and
jo
or
pop
in
lds
mov
repnz
std
sti
fwait
push
stc
xor
out
sar
add
dec
xchg
cs
aaa
push
xor
mov
xchg
adc
or
ljmp
jge
iret
in
pushf
push
lds
subl
and
jle
adc
outsb
repz
adc
pop
xchg
jecxz
pop
subl
out
and
addr16
lods
mov
cwtl
pmulhw
out
cltd
in
lea
push
or
or
xchg
mov
push
add
mov
mov
stos
mov
mov
and
scas
incb
lock
pop
fiaddl
xchg
imul
push
arpl
jmp
sahf
loope
sub
in
int3
mov
pop
pushw
sahf
insl
stc
mov
fstps
in
inc
aad
cmpsb
jb
lods
adc
push
pop
jecxz
bound
push
loopne
push
lcall
or
inc
pop
mov
and
out
fbstp
pop
loope
lret
push
cmp
rol
push
xchg
in
repz
dec
out
ds
arpl
push
fcmovnu
or
lods
shl
sbb
lret
dec
stos
dec
lods
mov
test
in
cmpsl
idivl
popa
jbe
int
jbe
fbstp
push
add
cmpsl
add
pop
sbb
sbb
orl
jl
mov
rcrb
dec
dec
sti
pop
and
push
pop
pop
push
outsb
sub
adcb
xchg
pop
int3
dec
inc
pop
pushf
imul
sub
clc
aad
pop
dec
jo
sub
push
in
and
fsubl
mov
outsl
out
fcompl
jno
hlt
das
out
push
inc
adc
cld
mov
sub
adc
push
push
inc
test
sbb
add
cmp
xchg
lods
out
negl
pusha
ja
dec
adc
cli
push
popf
adc
dec
xchg
mov
dec
ficomps
shll
dec
jge
test
xchg
stos
or
push
push
push
xchg
cmpsl
fcoms
or
mov
xchg
or
pop
fs
cmp
sti
push
leave
pop
lret
inc
fistpl
adc
cs
jge
sbb
mov
push
xlat
mov
loop
pop
int
jo
pop
loopne
mov
das
imul
sbb
xor
push
fsubrl
into
sub
repnz
addr16
daa
mov
xchg
push
aas
insl
nop
repnz
mov
mov
out
out
cmpl
jbe
in
adc
sti
xchg
mov
jnp
stos
or
dec
lods
dec
movsl
jns
jp
push
mov
sub
xor
aaa
inc
mov
mov
and
adc
lds
call
cmp
lea
or
adc
loope
mov
adc
fisubrs
xor
dec
shrb
ss
inc
insb
inc
dec
dec
mov
rcr
xor
mov
das
xor
dec
cmp
roll
jmp
fmul
inc
mov
dec
adc
inc
or
mov
cwtl
xchg
cmp
jb
mov
nop
cmp
ror
jp
adc
cmp
gs
inc
add
push
inc
out
add
int3
std
xchg
inc
aaa
clc
icebp
in
je
cmp
sbb
push
xor
enter
shrl
test
cwtl
in
les
outsb
dec
or
push
in
into
lahf
dec
out
dec
test
mov
jbe
pop
cld
sarb
fimuls
scas
fistpll
mov
mov
stc
pop
jp
movsb
faddl
int3
adc
sbb
ds
lcall
and
decl
fs
sti
fmulp
pop
or
das
sar
stc
popa
sub
out
pop
loop
mov
jp
mov
mov
jg
sbb
or
or
mov
inc
dec
outsl
sti
push
lret
adc
adc
dec
int
mov
inc
repz
clc
dec
lods
scas
jbe
fidivrs
std
mov
outsl
mov
mov
sub
xchg
or
popa
jecxz
mov
aam
mov
cltd
arpl
pop
and
push
imul
jp
in
push
lods
pushf
fsts
sbb
test
pushf
repnz
inc
adc
and
pop
mov
xchg
insl
test
xchg
sub
shrb
pop
enter
mov
popa
test
xchg
popa
imul
out
ja
fwait
push
into
mov
and
fldenv
imul
das
icebp
int3
sbb
addb
push
sub
out
add
mov
es
ss
push
push
pop
inc
setno
or
and
xor
xor
pop
push
xor
fisttpl
xchg
sub
jae
out
mov
cli
mov
out
dec
jge
cmp
lds
shr
iret
lods
hlt
mov
movsb
outsb
add
and
enter
jg
xlat
shll
pusha
test
lock
filds
nop
sbb
add
xor
push
ficoml
clc
stos
dec
mov
ja
jg
fsubr
stos
fisttps
xchg
mov
cmpsb
push
jl
lock
jo
shll
test
mov
test
mov
dec
daa
xchg
mov
mov
cmp
shll
cmpsb
ret
arpl
loop
nop
test
iret
xchg
inc
lea
add
jg
mov
int
or
clc
inc
aam
daa
add
mov
stos
push
push
cld
rorl
popa
or
dec
adc
mov
outsl
addr16
leave
popa
jmp
jmp
jg
mov
jg
mov
dec
lods
dec
inc
adc
sti
ret
lea
jmp
stos
lret
pop
pop
popa
xor
or
pushf
jns
adc
icebp
je
mov
and
cmpsb
pop
clc
movsl
cld
les
cld
imul
jecxz
mov
rcrb
sbb
clc
fists
je
fwait
shll
sarb
dec
enter
out
test
aam
lods
add
adc
adc
mov
mov
push
repnz
xlat
repz
fistpll
xor
xor
or
test
xchg
xor
cs
push
fdivl
mov
scas
pop
loope
rolb
lock
jo
add
mov
lea
sbb
xchg
cltd
push
mov
dec
out
xor
and
pop
mov
fisttps
mov
cmpsl
xchg
dec
insl
enter
adc
xchg
in
sub
pop
mov
lods
out
push
repnz
xor
push
fsubs
lahf
cmp
test
mov
arpl
call
loope
mov
ds
push
push
aas
push
out
xchg
and
pop
jg
mov
mov
sbb
pusha
dec
mov
xchg
sbb
mov
mov
dec
push
add
cld
dec
xchg
adc
aas
mov
repz
mov
fdivs
or
sub
push
jp
push
lcall
jb
daa
cwtl
cs
xlat
mov
xchg
mov
and
and
mov
aaa
pop
xor
sub
in
into
cld
jns
popa
mov
lret
in
xor
dec
dec
hlt
mov
sahf
add
xchg
cwtl
pop
inc
mov
adc
xchg
in
in
sub
xchg
inc
cld
mov
nop
inc
jge
mov
data16
lea
push
lods
out
xchg
cmp
or
mov
ds
jae
cs
sbb
ret
nop
dec
mov
loop
lods
mov
sub
or
shlb
rcrl
sub
out
dec
lock
mov
jb
push
pop
mov
stos
dec
mov
jns
out
adc
push
sub
cmp
and
cmc
sub
mov
adcb
rclb
dec
rclb
push
imul
lea
cwtl
jle
pop
cmp
clc
xor
pushf
das
jl
pushf
mov
sub
shrl
push
fidivrs
lahf
dec
add
imul
mov
roll
popa
rorb
push
mov
loop
or
cli
and
outsl
out
and
sbb
push
add
cs
or
adc
cmpb
jge
cmp
mov
cmc
inc
pop
pop
adc
hlt
xor
dec
push
inc
dec
clc
test
lret
int
and
sub
cmp
adc
xor
cmp
cmovle
push
repz
cmpl
int3
xor
and
shll
fwait
xchg
stos
outsb
adc
cmp
add
sbb
mov
push
xchg
mov
mov
add
or
mov
push
sub
xor
or
push
xor
lret
fwait
sbbb
cltd
mov
and
adc
int
sub
sbb
jg
cmp
xor
sbb
sti
and
inc
stc
adc
and
out
daa
jb,pt
call
lock
cmpsl
inc
and
xchg
ljmp
popf
out
jnp
ret
adc
sub
mov
sub
xchg
cmp
pop
jge
push
inc
xchg
add
cmc
sti
cmp
lods
cld
or
sub
mov
and
popf
imul
lock
mov
mov
data16
jns
sbb
and
adc
addr16
mov
shll
faddl
mov
and
ja
sub
ffreep
mov
cmp
xor
lret
or
inc
mov
cmp
mov
pop
xor
test
pop
decl
mov
lcall
dec
fcoms
cmp
cmc
int3
sbb
leave
push
push
jg
aas
or
add
repnz
mov
or
pusha
popf
test
leave
dec
adc
inc
fisubrs
xchg
pop
adc
adc
iret
repz
mov
mov
jle
leave
into
inc
cmp
adc
jmp
rcll
repnz
add
mov
jge
sti
pop
test
mov
jnp
pop
cld
addl
push
sbb
out
sarl
or
sub
aas
cwtl
add
cltd
repnz
loop,pt
and
enter
stc
and
pop
repnz
rcrl
outsb
aam
sbb
test
mov
and
jae
push
ret
jns
jl
out
icebp
out
jae
add
mov
ret
lcall
cmp
sbb
mov
adc
imul
xchg
dec
mov
pop
inc
xchg
mov
stos
xlat
popa
mov
test
rorl
cmp
jns
call
xlat
icebp
sub
adc
mov
inc
adc
xchg
cvtps2pd
loopne
or
lret
push
jle,pn
dec
scas
in
sub
dec
mov
jle
adc
sub
cs
xchg
push
rcll
xchg
icebp
cmp
add
out
pop
lret
cmp
loop
xchg
std
xor
int
f2xm1
cmp
mov
fsubrs
cmpsb
rorb
jno
sbb
mov
and
aaa
sub
jl
pop
repnz
and
dec
cmpb
insl
dec
mov
js
jo
pop
popa
pop
sub
mov
orb
jge
test
xor
mov
test
pop
dec
xor
pop
or
in
xchg
mov
in
mov
mov
sbb
loopne
leave
out
mov
mov
sbb
mov
mov
jle
ret
pop
cmp
lcall
sub
popa
ret
lret
je
jmp
cmc
leave
mov
sub
std
sahf
mov
dec
jecxz
push
je
xor
cmp
loop
insl
pop
push
ret
shl
andl
loopne
mov
push
rorb
pop
add
pop
idivb
ret
leave
pushf
js
sbb
mov
int
mov
pop
or
push
dec
aas
add
popf
mov
in
sub
les
fnstsw
out
xor
mov
jp
and
jmp
push
cld
scas
pop
int
sub
scas
test
push
sbb
cltd
inc
xor
loopne
jp
or
inc
dec
sub
imul
pop
push
test
cmc
and
mov
sub
and
cmpsb
pusha
orl
jge
lret
es
fsubrs
pop
mov
je
daa
xchg
enter
adc
xchg
xlat
sbb
std
int
jmp
mov
push
mov
xor
and
xchg
cltd
shll
xchg
push
sbb
xor
arpl
xchg
jmp
mov
add
test
or
movsl
test
aad
add
lods
movsb
or
test
loope
mov
movsl
aad
inc
xchg
jae
loopne
in
jae
pusha
int3
mov
mov
or
fxch
imul
mov
icebp
cmp
loop
adc
sbb
insl
or
and
jmp
insb
inc
lret
push
insb
fst
repz
push
sub
pop
ss
jne
shlb
lods
out
cmpsl
cmp
or
insb
mov
outsb
shrd
popf
les
int3
push
xchg
mov
inc
enter
jns
jbe
mov
pop
int
test
cmp
paddsb
test
xor
pop
fs
adc
dec
jle
cmp
mov
pop
jmp
pop
xchg
xchg
sahf
into
popf
bound
mov
jg
lahf
ficoms
add
sbb
outsl
pop
cs
sbb
test
movsb
stos
mov
cmp
and
sub
movsb
xchg
cmc
dec
stos
pop
mov
mov
sahf
xchg
dec
jle
sub
mov
sub
mov
loope
dec
xchg
mov
arpl
pop
pop
adc
sbb
cmpsb
mov
test
test
cmp
inc
movsl
mov
outsl
or
lock
lcall
bound
pop
int3
ljmp
mov
add
imul
lret
cli
push
in
mov
jne
loope
xchg
das
insb
push
jle
jnp
mov
sbb
mov
sbb
pop
mov
cmp
lahf
mov
out
leave
cmp
cltd
subl
call
dec
mov
pusha
xor
ja
cmpsb
or
call
dec
jp
xor
or
mov
imul
pop
mov
xor
mov
push
adc
adc
jg
lods
ja
pop
lcall
mov
xor
stos
jecxz
stos
push
or
outsb
push
cld
adc
push
sub
outsb
pop
jae
icebp
and
les
and
or
push
or
shll
out
fldcw
and
cmpsl
psubusb
dec
pop
mov
and
add
mov
scas
push
mov
dec
or
outsl
cmpsl
pop
pop
xchg
lret
dec
cmpsl
mov
lahf
popa
dec
push
adc
or
lds
pop
dec
dec
aad
cmp
out
lret
mov
push
enter
ja
shll
adc
jge
adc
call
cmp
xor
outsb
cmp
daa
add
mov
and
inc
push
add
push
xchg
inc
jns
xchg
xor
rcll
jl
sbb
push
push
lcall
mov
xchg
js
popf
add
nop
jp
or
loope
ljmp
add
adc
adc
das
cltd
pop
adc
pop
rcr
pop
cmc
in
aas
subl
fidivrl
inc
or
mov
incb
push
add
xor
int3
mov
pop
mov
mov
mov
shlb
int
int
insb
adc
stos
js
popf
icebp
or
roll
js
xchg
cld
addr16
out
js
xor
lods
sub
sbb
enter
into
mov
mov
push
cmpsb
adc
cmp
movsl
mov
or
pop
mov
sbb
mov
jno
sbb
push
xor
cmp
enter
cltd
mov
sbb
push
cmp
sahf
and
xchg
sub
jge
out
jnp
sahf
insb
and
int
push
gs
insl
fs
scas
push
or
clc
jg
sahf
mov
loopne
or
cmpsb
ret
xchg
insl
dec
movsl
jb
xor
pop
movl
test
enter
rclb
mov
mov
dec
mov
stc
and
inc
je
clc
faddp
stos
push
aaa
iret
xchg
leave
xor
sbb
repnz
movsl
xorb
test
std
xchg
cmp
lahf
ss
mov
ljmp
not
inc
mov
xchg
cmp
jg
cmpsb
in
push
add
mov
arpl
loop
lcall
jo
outsb
sub
popa
jbe
int
push
ja
scas
mov
repz
pop
cwtl
pushl
dec
push
mov
inc
jns
push
notb
adc
ljmp
sub
cmpb
dec
xor
mov
popf
pop
shl
pop
inc
imul
in
lock
jmp
jae
icebp
jb
or
xchg
out
push
cld
jb
and
daa
loop
fdivs
add
jg
pushf
cmp
mov
pop
std
push
shll
jo
cmp
out
pushf
ret
jmp
inc
cmc
jno
outsb
mov
cwtl
and
mov
outsl
or
and
pusha
insl
add
inc
orb
push
jmp
fcmovnbe
push
mov
add
and
mov
mov
loopne
push
test
dec
mov
arpl
jo
xchg
cmpl
pushf
push
mov
lcall
sub
sub
sbb
cmpsl
imul
push
xor
mov
add
or
ret
scas
pusha
push
fimull
mov
movsb
jle
pop
lcall
sti
pop
pop
dec
cs
mov
jmp
xor
in
jle
imul
outsb
dec
sub
aas
adc
jmp
mov
cld
scas
leave
push
adcl
stos
fnstenv
sub
lods
out
cmp
xchg
mov
test
mov
adc
jnp
fwait
cwtl
fistpll
or
push
mov
mov
pushf
in
sub
stos
add
sbb
mov
cmp
scas
aam
xlat
or
or
jp
fildll
rclb
shlb
mov
ljmp
aas
ret
dec
inc
cmpsl
out
cmp
rclb
movsb
jge
imul
lret
repz
or
loop
shr
dec
iret
push
mov
push
stc
lods
push
or
test
out
pop
scas
cmp
jl
hlt
sub
add
mov
icebp
std
inc
pop
sti
scas
je
jno
sbb
bound
cmc
mov
push
sbb
jbe
std
jbe
loop
push
xor
sub
sub
out
xor
into
rorl
jecxz
popl
sub
add
cmc
or
stos
push
gs
xlat
xor
mov
inc
push
pop
xchg
push
rclb
adc
dec
jle
xchg
sbb
pop
gs
mov
cmp
jnp
jg
fucomip
cmp
add
or
and
int3
cmpsb
test
lds
jne
ror
jae
neg
sub
mov
insb
and
test
ja
and
xchg
and
xchg
add
and
insl
cmp
mov
xchg
fdivl
jl
andb
imul
iret
mov
in
cld
mov
fiadds
dec
ret
dec
scas
push
sbb
imul
xchg
inc
ficomps
jae
les
sub
pop
mov
jge
aad
inc
popa
mov
jae
xor
lods
dec
xchg
adc
imul
jg
mov
fwait
push
jo
call
mov
push
int
and
shrb
dec
add
fsubrs
adc
jno
jge
mov
mov
fcomi
iret
fstps
cmp
arpl
lahf
adc
push
insb
insb
orl
fs
sub
shll
inc
sti
sbb
dec
mov
outsl
out
sbb
and
nop
into
jecxz
adc
mov
cmovle
sbb
cmp
ret
mov
cltd
sbb
loopne,pn
je
mov
mov
cmp
jno
jg
jne
lret
outsl
int
popf
xor
iret
dec
imul
inc
jp
mov
lock
jecxz
insb
in
ret
pop
sub
jae
xor
add
mov
mov
repz
xor
insl
push
pop
jb
jl
mov
or
jae
cltd
sbb
push
mov
in
mov
ret
xor
popf
mov
mov
cld
lcall
sub
daa
pop
imul
jge
inc
sub
outsb
pop
cmpsb
xchg
pop
cmovp
cmpsl
jl
and
xor
push
loop
adc
test
insl
out
outsl
lcall
pop
in
movzbl
aad
fnstsw
dec
or
cwtl
dec
mov
fxtract
sbb
rcl
push
jno
cmp
call
in
push
add
imul
mov
or
out
xchg
rol
jbe
inc
mov
mov
adc
test
pop
adc
cltd
or
aam
xchg
push
xchg
cmp
mov
dec
into
push
pop
dec
sbb
sbbl
mov
fcoml
aam
jl
fsts
xchg
add
mov
lds
xlat
pop
popa
sub
add
sub
insb
jle
pop
jae
movsb
gs
pop
add
movsl
mov
mov
aaa
imul
inc
loope
les
aaa
cmc
ja
mov
cwtl
mov
out
mov
enter
sahf
pop
stc
nop
xor
mov
xor
ret
idivb
mov
cmpsl
mov
mov
pop
xorl
addr16
and
xchg
in
jle
out
test
fstl
inc
mov
repnz
ret
or
mov
xor
pusha
and
sub
pop
inc
das
loopne
push
push
jne
adc
dec
xor
clc
aaa
cli
xor
lock
or
or
stos
mov
xor
fdivs
mov
popf
nop
insb
push
ja
imulb
push
cmp
popa
scas
mov
in
or
jnp
mov
cld
inc
lahf
inc
call
jnp
jmp
mov
arpl
mov
stc
stos
test
or
jae
and
mov
sarb
pop
pusha
fiaddl
scas
pop
mov
sub
in
ja
pop
xchg
push
add
lahf
sub
aad
rcrl
repz
push
xor
mov
cwtl
cld
dec
push
movsl
sub
fs
outsb
cmpsl
fdivr
ret
enter
lea
sbb
stos
shlb
lret
mov
mov
and
jp
mov
pop
mov
jb
xchg
adc
repnz
fmuls
fucomip
ret
and
imul
ja
jno
std
lock
or
loopne
jb
leave
xchg
clc
push
int
mov
rcrb
daa
imul
inc
pop
mov
mov
mov
aam
jecxz
dec
fincstp
aad
jle
cwtl
sub
xor
sbb
sbbl
enter
adc
mov
add
and
xor
daa
inc
ljmp
cmp
pop
fdivrl
and
pop
movsl
sbb
push
clc
cwtl
cmp
jle
adc
cli
lock
push
xor
pushw
add
sbb
stos
mov
cwtl
fcmovbe
fcom
gs
pop
jp
jge,pn
push
push
adc
add
idiv
mov
std
imul
pop
xchg
test
mov
or
addr16
or
pop
dec
aam
pop
fs
and
fwait
mov
xchg
out
sbb
jmp
or
or
decb
sub
sub
pop
pop
out
in
jmp
mov
mov
push
push
push
add
in
insb
or
filds
jns
repnz
cli
add
or
movsl
cmpsl
adc
adc
sar
outsb
sbb
jp
sbb
mov
sub
mov
ret
and
sbb
xchg
and
pop
mov
jae
jo
pusha
mov
ret
imulb
or
shr
insl
or
sub
mov
pop
sbb
jne
dec
data16
test
and
icebp
cmp
fcoms
mov
inc
ja
dec
clc
jecxz
pop
movsl
xchg
popl
hlt
cmp
jge
cmpsb
jb
loopne
shll
adc
and
addr16
xchg
jae
std
cmovge
mov
je
dec
sbb
pop
lahf
mov
sbb
pop
pop
mov
add
jbe
or
jbe
insb
cmpsl
test
xor
cwtl
shrb
pop
xlat
add
pop
in
call
push
pop
add
lcall
add
jmp
ds
cmp
push
or
add
fwait
add
aaa
lret
iret
icebp
cmpb
cmp
mov
adc
aad
xor
or
aas
cmpsb
int3
add
inc
punpckhbw
cmp
rolb
test
sahf
and
jnp
testb
pop
push
sub
shll
loop
jmp
xchg
add
loopne
das
fwait
in
dec
subb
mov
lret
orb
test
cmp
mov
mov
pop
adc
push
mov
adc
movsb
mov
inc
mov
xchg
pop
sahf
sub
pop
inc
cwtl
in
mov
lods
addl
cs
into
daa
dec
pop
repnz
push
sarb
pop
mov
inc
imul
xor
mov
push
rcrb
push
outsl
jo
sub
icebp
xor
pop
adc
pusha
push
cltd
dec
call
das
mov
and
js
and
into
mov
loope
aaa
fsubs
pop
addl
ret
add
inc
rcll
mov
lret
fidivrs
fmuls
popa
loop
jge
jae
pop
in
dec
scas
leave
xchg
dec
fmuls
jae
lret
lahf
and
xchg
inc
jo
jmp
adc
in
xor
mov
bound
or
test
inc
scas
dec
sbb
aad
jno
mov
sub
lds
cmp
push
inc
add
adc
mov
loopne
out
mov
scas
rorb
pop
push
mov
mov
or
cltd
mov
xor
test
xchg
xor
jge
lret
and
mov
push
mov
aas
scas
bound
xchg
into
in
and
call
out
pop
push
dec
int3
jb
pop
push
mov
test
lcall
inc
dec
push
push
mov
jg
test
scas
lcall
int3
jb
shl
das
jp
fs
mov
sub
dec
ds
imul
push
xchg
mov
add
jne
adc
ret
mov
pop
lods
xor
add
sbb
iret
aas
loope
imul
inc
xchg
stos
imul
sbb
jp
fdiv
adc
dec
loopne
mov
jge
mov
mov
das
or
xchg
imul
in
aad
cli
arpl
fisttps
adc
in
int3
notl
insb
stc
mov
add
ss
inc
push
mov
sbb
push
add
add
mov
jg
nop
dec
jecxz
hlt
pop
xor
test
push
sarl
sbb
js
out
or
and
shrl
hlt
aam
insb
mov
sbb
pop
jae
sub
inc
push
jae
test
popf
scas
leave
test
fidivrl
or
jo
adc
push
roll
jns
mov
jl
rcrb
and
cmpsb
sub
in
push
jae
iret
pop
je
push
outsb
adc
aad
jmp
ljmp
push
mov
jle
mov
xchg
mov
fstps
fsubrp
mov
int3
js
lret
test
mov
jmp
jmp
inc
mov
xchg
loope
fs
movsb
mov
ljmp
sbb
dec
ja
pusha
mov
cmpsb
cli
cmpsl
push
cmpsb
add
mov
add
mov
inc
aad
push
testb
pop
mov
lods
mov
gs
lret
sbb
or
mov
add
jb
adc
lret
push
cmp
and
mov
mov
pushf
call
mov
mov
hlt
sub
cmp
test
popf
jg
scas
aas
xchg
dec
pop
outsl
test
movsb
into
out
jmp
sub
push
pop
push
cmp
sub
pop
or
and
cmp
cmc
negb
push
xchg
ja
les
fidivl
mov
fidivrl
outsl
mov
mov
add
sti
mov
shlb
jmp
stos
lret
fs
hlt
ss
fsubl
lcall
push
pop
and
test
cmp
imul
or
movl
lods
fcoml
xor
and
inc
push
into
cltd
leave
je
inc
push
inc
cli
nop
xchg
fstpt
push
fisttpll
pop
push
imul
xchg
int3
sti
scas
mov
adc
add
subl
inc
hlt
inc
shrl
xchg
push
push
sbb
repz
out
stos
lea
aaa
cmp
std
roll
pop
icebp
je
and
scas
inc
adc
xchg
xor
mov
sbb
add
movsb
into
dec
fs
dec
add
in
sbb
mov
mov
and
sbb
testb
xchg
cwtl
addr16
inc
mov
icebp
pop
loope
push
cmc
xlat
popf
add
inc
sbb
popf
stos
rorl
outsl
and
push
dec
adcl
lret
jo
popa
sbb
aas
ja
insb
adc
ror
cmp
popa
xchg
rclb
push
and
push
inc
ret
and
sahf
movsb
adc
fwait
mov
popa
mov
xor
add
pop
aam
pop
and
mov
imul
push
cmpsl
and
and
fistpll
cmc
pop
dec
lret
mov
ret
sti
enter
adc
out
sub
cmpsb
sbb
jae
fidivl
xor
and
pop
sub
notl
mov
mov
mov
fnstcw
mov
pop
add
sbb
mov
and
inc
pop
pushf
mov
push
dec
and
test
subb
cltd
idivl
into
jmp
adc
rol
pop
call
sahf
or
mov
jp
jge
stos
fdivrl
jge
fmulp
sub
repnz
add
jmp
cmpsl
mov
test
sub
or
jecxz
loope
aaa
and
out
sub
inc
add
xchg
aaa
pop
test
fnstenv
fdivl
out
xchg
mov
xor
cmovl
adc
push
mov
lret
and
iret
sub
adc
xchg
inc
mov
mov
jne
nop
mov
mov
xchg
xchg
inc
pop
bound
mov
xor
mov
test
jbe
mov
sbb
push
add
int
fisubs
xchg
and
movaps
mov
ret
cs
or
icebp
cli
mov
push
shlb
out
add
paddb
adc
fdivrs
and
xor
cwtl
inc
push
xchg
ficoms
das
adc
pop
dec
aad
sahf
ret
and
lcall
sub
or
adc
xchg
lret
cmpsl
popa
nop
imul
pop
jmp
incb
push
aas
push
pcmpgtb
mov
stos
lds
inc
pop
in
xor
jb
fstp
divb
pop
pop
inc
ret
das
arpl
test
lahf
pop
pushf
les
mov
lea
in
mov
out
jecxz
adc
dec
adc
sub
mov
and
cmp
cs
mov
dec
pop
lcall
xlat
cmpb
out
push
subl
adc
rcrb
dec
mov
jb
ljmp
dec
negb
shl
fsubs
pop
into
mov
leave
icebp
jns
sbb
ss
cmp
sbb
push
lods
push
mov
mov
stos
xchg
je
mov
hlt
push
push
cmpsb
daa
int
xor
inc
out
adc
pop
ss
in
in
stos
fistps
inc
out
adc
outsl
stos
call
push
arpl
in
cmp
scas
jle
pop
inc
inc
xchg
call
test
and
jmp
js
ja
enter
inc
pop
mov
fmul
xor
and
in
mov
add
and
adc
inc
inc
push
loope
or
rcl
jb
push
adc
add
mov
adcb
std
iret
cwtl
xor
pop
sti
xor
or
jae
aaa
out
cltd
cmp
add
mov
pop
push
test
push
xchg
lret
lahf
enter
cmp
int3
addb
and
add
mov
aam
cs
inc
push
movsb
add
mov
jge
mov
sbb
cs
push
mov
call
mov
icebp
mov
arpl
shl
jae
adc
out
daa
inc
xchg
sub
xchg
push
cwtl
fdivs
incb
mov
negb
add
sbb
pop
or
les
cmpsb
and
repz
ret
xor
fisubl
push
repnz
cli
xor
adc
roll
push
insl
jae
sti
xor
das
sub
mov
lcall
xchg
jle
add
iret
push
pop
adc
je
sub
shrl
outsb
add
fiadds
inc
aaa
cmpsl
int3
mov
mov
jnp
dec
pop
cmp
jge
jno
sbbb
cmp
cmp
scas
sub
pop
xlat
repz
insl
jbe
and
mov
or
xor
cmp
jle
mov
jbe
pop
jb
ficoms
cltd
daa
cmc
xor
pop
lds
rcrb
mov
push
arpl
pop
adc
mov
rcrb
xchg
adc
mov
icebp
fldcw
lret
inc
and
ret
in
or
pop
pop
push
fs
lock
popa
cli
pop
sarb
push
xor
insb
and
push
push
imulb
cmp
xchg
mov
inc
aas
stos
xchg
stc
dec
icebp
outsl
adc
addr16
idiv
sub
inc
xchg
loope
enter
neg
mov
insb
jns
loope
cmp
aas
movsb
pop
jae
imul
js
sub
cld
inc
lock
cmc
clc
xchg
lods
cmp
cmc
jge
push
shlb
add
push
lds
daa
in
ret
lahf
xchg
push
adc
sahf
cmp
out
jne
pop
daa
sub
dec
xor
mov
inc
dec
imul
jecxz
xchg
inc
adc
les
sbb
jbe
dec
sahf
int
or
leave
jp
data16
cmc
lock
xchg
or
sbb
insl
fdivp
mov
xlat
dec
pop
test
mov
jmp
fsubrl
stc
xor
and
inc
mov
or
aaa
push
sbbl
outsb
addr16
jle
or
dec
dec
out
cmpsl
xchg
push
mov
mov
les
mov
push
fidivl
mov
dec
mov
and
scas
stos
fwait
insl
xor
sti
hlt
sbb
scas
shrb
mov
sbb
adc
std
jp
mov
or
or
sbb
adc
add
sub
js
push
mov
leave
sti
sub
test
sub
cwtl
mov
jno
mov
in
xor
dec
loope
inc
sahf
icebp
loope
xchg
jno
inc
push
push
jae
pop
ss
pop
cmpsl
push
xchg
in
dec
adc
dec
loope
xchg
testb
mov
inc
cmp
mov
add
mov
dec
aaa
pop
push
pop
repz
ljmp
shl
inc
push
pop
pop
cmp
sub
in
repnz
or
mov
jbe
mov
push
dec
sbbl
in
subl
data16
mov
dec
sbb
xor
fstps
ret
cmpsl
xchg
and
stos
jp
pop
mov
psrad
insb
lods
lcall
outsl
dec
pop
push
mov
in
add
popa
cld
mov
cmp
push
fbstp
sub
cmc
and
in
enter
adc
push
lret
dec
hlt
cmpsb
and
stos
jg
into
pop
or
dec
xchg
adcb
pop
pop
cld
incb
cmp
fcmovnbe
jns
push
mov
mov
fstpt
shlb
inc
cmpb
pop
xchg
adc
jmp
mov
aam
pop
mov
inc
mov
mov
repnz
shlb
jns
xor
iret
mov
in
leave
lcall
repnz
clc
js
stos
sti
push
sti
imul
mov
fnsave
iret
mov
ret
cmc
add
add
mov
scas
pop
or
pop
in
mov
push
push
lret
push
dec
sbb
jl
rol
stos
push
fildl
repnz
pop
dec
and
cmp
sbb
cmp
repnz
mov
add
inc
inc
in
mov
push
out
aad
jmp
mov
orb
outsb
stos
mov
jecxz
or
inc
popf
and
or
mov
hlt
dec
sub
notl
test
cmp
fistpl
jl
mov
out
sbb
loope
inc
xor
pusha
cs
sbb
cmpb
faddp
popa
in
rcrb
add
or
inc
mov
cwtl
xor
insb
add
icebp
inc
in
jmp
mov
lret
push
push
fsts
cmp
data16
das
mov
out
cld
inc
add
xor
repnz
pop
adc
sub
jp
mov
sub
mov
dec
sbb
out
jmp
out
call
lock
mov
mov
cmp
int
add
adc
mov
je
push
xchg
mov
pop
shlb
dec
mov
and
push
outsb
jp
lea
aad
jae
inc
rorl
mov
or
shll
push
mov
jne
insl
mov
iret
mull
sub
add
rcll
mov
sbb
cmp
push
sbb
or
or
lahf
repnz
mov
pop
adc
fistpl
test
push
clc
daa
pop
clc
mov
pop
add
pop
cld
xchg
sub
rorl
aaa
sti
mov
ret
repz
add
cwtl
in
pop
in
jae
sarb
push
xor
lods
adc
push
pop
push
pop
mov
xchg
jp
enter
push
and
xor
stos
or
loop
xlat
std
cmpsb
mov
sbb
or
pop
outsl
and
andl
xchg
incl
push
jne
adc
xchg
add
mul
push
test
mov
jecxz
gs
or
out
cmpsb
xor
add
sets
pushf
jl
pop
cli
neg
lds
mov
adc
sub
stos
pop
jle
ljmp
xchg
sbb
stos
jbe
hlt
pop
mov
adc
dec
push
lds
lds
fscale
sub
loop
out
imul
cwtl
in
mov
mov
dec
jg
movsb
fdivrl
imul
adcl
xor
out
cmp
das
mov
mov
and
push
pop
out
fcmove
data16
sbb
movsb
loop
xor
mov
aaa
hlt
mov
ss
popa
xchg
pop
push
ror
pop
stos
jecxz
xchg
xor
sahf
jnp
mov
fstl
sub
mov
ljmp
mov
xchg
std
dec
add
or
movsl
cmp
and
aas
push
push
imul
and
test
sub
pop
jmp
xor
test
jg
fcmove
mov
mov
cmp
in
fs
adc
push
sub
dec
jp
lea
cmpsl
or
out
mov
jns
lret
imull
in
push
xor
xor
push
jle
and
insl
add
mov
out
mov
in
pop
out
mov
jb
aas
mov
adc
pop
arpl
inc
lods
je
adcl
jo
pop
rcrl
shrl
and
mov
xchg
les
outsb
shrd
cmpsl
and
mov
adc
sbbb
sti
insb
mov
mov
repnz
pop
repnz
adc
lods
or
push
or
arpl
cld
negb
mov
push
jmp
sub
or
mov
xchg
xchg
insb
cmc
dec
xor
push
push
in
pop
std
shlb
and
inc
add
push
lret
sub
loopne
inc
cmp
enter
lcall
cmp
mov
dec
cmp
jl
xchg
mov
mov
mov
sub
shrb
jle
fcomps
push
fisubs
mov
ret
or
pop
push
mov
mov
cmp
mov
cmp
mov
inc
je
push
jae
out
mov
xor
mov
fwait
or
ror
jne
nop
and
insl
xchg
cwtl
pop
mov
mov
sub
das
call
mov
sub
sti
hlt
test
daa
mov
mov
je
or
shlb
jbe,pt
call
jmp
push
mov
lret
das
out
scas
adc
ja
ja
dec
xchg
jle
in
mov
jb
pusha
ret
outsb
pusha
mov
jle
gs
inc
ljmp
sub
pop
int
test
or
dec
xor
les
jmp
mov
xchg
sarb
mov
jae
mov
mov
pusha
leave
xchg
div
ficompl
repz
data16
dec
cld
in
sub
or
pop
test
pop
fisubrs
ss
pop
pop
fcmovu
adc
rol
rcrl
cmc
cwtl
push
dec
std
pop
int3
sub
push
cmp
jle
xor
jge
gs
xor
mov
jl
and
fwait
repnz
sub
mov
and
orl
stos
fmul
ret
jo
jns
or
inc
jecxz
jno
stos
outsl
fcomi
mov
pop
add
std
and
xor
mov
inc
push
push
dec
add
or
test
xchg
xlat
sti
jmp
jns
dec
or
xchg
mov
sbb
xchg
xor
ret
jecxz
sub
sahf
dec
aad
negb
jmp
in
mov
rcr
out
stos
roll
and
aad
jno
repnz
sbb
mov
cmpsl
mov
daa
clc
mov
mov
jmp
cld
sar
jl
add
scas
roll
xor
lods
jbe
addr16
in
push
add
ficomps
pushf
loopne
cmp
imul
inc
inc
ret
xlat
in
lcall
jne
push
sub
arpl
aam
jno
inc
sti
mov
out
and
inc
in
sahf
dec
scas
cwtl
jo
repnz
mov
add
test
and
cmpsb
inc
cmp
add
movsb
push
mov
mov
or
ds
inc
jno
addl
push
hlt
in
stc
mov
mov
push
xor
lea
sbb
adc
inc
lea
jns
mov
dec
stos
cmp
aam
adc
inc
cmp
icebp
mov
adc
movsl
aaa
cmpsb
push
and
ret
and
inc
in
mov
mov
cmp
popa
icebp
push
add
dec
sbb
add
mov
popa
insb
mov
shll
push
lcall
in
ljmp
jge
pop
call
cmp
sahf
dec
and
insb
cmpb
mov
sbb
or
les
cmovl
sub
test
ficomps
stc
inc
cmpsb
dec
shlb
je
mov
mov
idivb
adc
mov
sbb
inc
in
pop
sahf
and
cmp
cmp
cmp
dec
mov
sbb
movsb
adc
inc
xchg
in
adc
insb
test
frstor
push
js
addr16
add
adc
mov
mov
push
adc
mov
enter
push
cli
mov
pop
loopne
add
addb
pop
or
ficoms
les
mov
mov
fcomp
test
pop
jbe
xchg
stos
ja
push
fldl
imul
setl
xchg
and
add
stc
adc
push
and
dec
lret
fsubr
mov
add
jnp
xorl
push
ja
push
in
and
jns
outsl
adc
and
in
cmc
jp
imul
je
rclb
scas
sbb
xchg
jne
movsb
mov
cld
xor
rclb
lock
shll
xchg
scas
loopne
out
push
roll
xchg
push
add
jp
lds
mov
jmp
data16
mov
mov
jge
arpl
divb
xor
inc
test
ja
sbb
lods
dec
jo
popf
lods
sbb
fimuls
stos
lret
add
pop
out
push
testl
inc
adc
xor
insb
and
out
xor
dec
add
push
push
sbb
loop
fiadds
and
adc
sahf
jne
aad
mov
int3
dec
mov
push
sub
jp
fwait
ja
and
cmpsl
push
adc
js
mov
jecxz
mov
xchg
cs
xchg
stc
leave
sbb
sub
nop
sub
lods
mov
push
movsl
mov
mov
arpl
mov
popl
add
daa
mov
jg
stos
and
cmp
int
cmp
mov
test
mov
stos
jg
je
cmp
inc
out
lds
mov
mov
xor
insb
and
push
std
mov
subb
jl
sbb
scas
ds
pop
andnps
dec
pop
or
mov
movsl
sbb
in
movsb
inc
sbb
jmp
fdivl
movsl
xchg
inc
mov
pop
sbb
imul
andb
sbb
test
aam
push
scas
jle
jmp
mov
arpl
leave
out
push
jmp
js
ret
mov
dec
fwait
mov
int
int3
cmp
sbb
rorb
fmull
sub
mov
jl
sbb
cmpl
mov
pop
mov
sbb
cmpsl
outsb
mov
inc
dec
test
jl
inc
mov
popf
es
addl
icebp
push
mov
rcrb
outsb
iret
ljmp
mov
push
enter
jnp
pushf
xor
mov
jo
push
push
aas
push
push
dec
cwtl
mov
shll
cmp
cmp
push
dec
je
sti
push
add
push
xor
ljmp
std
lahf
mov
pop
jecxz
sbb
pushf
mov
negl
inc
insb
sub
mov
sti
xchg
push
sahf
jnp
push
add
push
xchg
lcall
insb
xor
sub
test
ret
jmp
test
mov
pop
lret
sbb
or
orb
jg
aad
sbb
bound
add
mov
pop
dec
or
fs
mov
repz
xchg
xor
xchg
mov
shl
std
add
pop
fstpl
and
push
xor
out
std
iret
push
pop
pop
ds
push
mov
pop
sub
jmp
sub
mov
mov
dec
mov
testb
jnp
mov
and
pop
js
ljmp
loopne
addb
push
dec
mov
or
int
jnp
data16
stos
out
push
sbb
out
movsb
xchg
test
and
cs
mov
cmpsb
jmp
pop
mov
sbb
xor
imulb
popf
jle
test
dec
push
insl
repz
sbb
test
out
xchg
push
bound
xlat
into
dec
mull
sbb
mov
jg
sub
inc
cltd
sbb
pcmpeqd
inc
and
lcall
std
mov
xchg
out
addr16
out
gs
dec
sbb
jg
icebp
jb
pop
fildll
push
lock
cmp
jae
jne
gs
rorb
and
icebp
fsubs
iret
jae
xchg
mov
push
push
push
je
lea
je
addr16
pop
sti
jg
sub
jl
movsb
xor
repz
sub
in
dec
test
test
and
test
mov
jmp
jb,pt
in
jge
cmpsb
aas
and
in
mov
ficoml
xor
cmp
sbb
lret
dec
push
rol
andb
mov
test
faddp
push
cmp
je
push
xor
sub
push
xchg
xlat
mov
xor
fbstp
mov
sub
push
mov
call
mov
outsb
push
movsb
insb
add
pop
in
pop
imul
mov
mov
iret
scas
ds
push
adc
mov
inc
cmpsb
adc
dec
pop
add
imul
and
sarl
jecxz
inc
add
clc
mov
dec
push
data16
mov
insl
lods
adc
fildll
add
ja
xor
cmc
sub
out
adc
mov
es
out
popf
loop
mov
mov
adc
aaa
shll
lock
and
sub
imul
dec
mov
jns
xor
sbb
lds
dec
test
int
hlt
sub
xchg
out
jge
xchg
cmp
mov
adc
dec
fs
or
cli
and
mov
insb
in
mov
fs
les
push
icebp
roll
sub
and
sub
inc
mov
jecxz
mov
cmp
mov
fwait
or
inc
in
lret
cmpsb
ljmp
imul
sub
or
push
push
les
push
jns
xchg
xchg
fcomip
das
enter
or
jecxz
pop
test
rcll
insb
dec
mov
xor
lea
fidivl
jns
xor
sbb
xor
jno
sbb
mov
shlb
mov
push
xor
arpl
lret
cli
lods
push
mov
add
push
loop
in
xchg
aam
sti
cmp
enter
cmp
mov
and
cld
add
push
ret
sbbb
loopne
movsl
je
sub
or
inc
lods
lock
dec
and
push
mov
add
lds
decb
inc
mov
dec
dec
mov
mov
ljmp
adc
test
repnz
jecxz
out
adc
jno
mov
pushf
xchg
es
hlt
pop
mov
push
imulb
adc
xchg
pop
mov
fidivrs
and
pop
fwait
ss
leave
shr
cmp
dec
or
js
mov
movsl
pushf
in
stc
xor
mov
shlb
in
lods
jbe
cmp
cs
ljmp
dec
lcall
scas
sub
daa
pop
mov
stos
xchg
mov
jae
sub
clc
sbb
add
out
lret
mov
fcoms
or
dec
add
mov
pushl
movsb
into
stos
push
adc
in
push
adc
test
cmp
cmp
iret
or
getsec
sub
pusha
nop
mov
adc
ja
sbb
adc
sub
dec
lcall
sbb
rcrb
adc
inc
mov
pusha
imul
iret
pop
fmul
addl
add
cmp
jecxz
ja
enter
popf
dec
ja
jns
push
cmp
jge
shrb
ds
dec
jmp
lea
add
mov
mov
or
mov
ja
pop
sub
dec
mov
lods
divb
test
inc
pushf
mov
xchg
syscall
inc
scas
cmpsb
mov
push
movsl
adc
iret
in
lret
fnsave
into
add
jb
std
mov
in
add
arpl
adc
js
lock
js
rcrl
or
int3
dec
lds
outsl
mov
push
dec
add
mov
cmp
es
sbb
mov
dec
cwtl
fisubs
jbe
stos
in
dec
dec
stos
or
dec
xchg
imul
cmc
push
xor
aaa
sbb
mov
ds
std
lds
daa
mov
lods
add
scas
add
fildll
lahf
and
pop
aam
mov
loopne
js
adc
dec
inc
imull
insb
cmp
xchg
lret
test
int
js
stos
mov
std
cld
data16
inc
mov
cmc
dec
and
cmp
enter
mov
shlb
add
xchg
outsl
cmp
jne
test
in
fcomps
lea
cwtl
cmp
cltd
push
add
stc
jg
or
outsl
lret
cmp
dec
dec
fistl
xor
out
cltd
fsubrp
inc
imul
xchg
push
dec
xchg
xchg
mov
jo
pop
dec
popa
push
into
mov
pushf
sbb
adc
fiaddl
stc
out
fildll
cli
inc
subl
lock
pop
dec
xor
mov
mov
push
mov
inc
push
pop
enter
iret
xchg
icebp
ror
ss
xchg
jp
push
jl
lock
xor
hlt
lea
sbb
adc
mov
sbb
aad
movsl
jnp
jbe
gs
xor
cmp
dec
aad
adc
bound
icebp
inc
mov
sub
mov
paddb
push
pop
fstl
and
cmp
add
and
in
dec
pop
lea
mov
adc
dec
xor
mov
xchg
sti
dec
out
jmp
int
lods
jb
sub
sbb
std
pop
rorl
ljmp
mov
sbb
testb
clc
jns
lcall
nop
test
in
pop
push
fsubl
cli
jg
dec
push
fwait
aad
push
inc
inc
or
or
cmp
cmp
adc
xchg
stc
pop
jmp
bound
outsb
into
fldl
cltd
hlt
xlat
cmpsl
fcompl
mov
ret
out
lods
or
add
loopne
lods
gs
sti
loopne
fsts
js
fs
adcb
mov
jne
pop
movsl
mov
xchg
das
addr16
pop
push
sbb
in
pop
sub
adc
fstpl
fisubs
add
pop
repnz
sbb
fsubl
scas
dec
dec
ss
push
sbb
imul
pop
mov
das
pop
sub
std
sti
daa
xchg
mov
jmp
push
les
inc
mov
mov
mov
add
cmp
jnp
test
ret
test
push
jne
in
icebp
add
in
lcall
mov
call
es
fisttpll
push
and
ds
push
int
push
sbb
gs
xor
test
sbb
mov
rcll
insl
cmp
test
movhps
cmc
sahf
adc
and
daa
ljmp
lret
push
jp
mov
xor
and
sub
sub
mov
or
push
arpl
ja
repz
movsb
addr16
push
cli
and
test
xor
sbb
stos
enter
jmp
xchg
arpl
push
out
mov
jg
int3
scas
stc
loopne
cmpsl
addr16
outsl
lahf
sub
ret
xor
adcl
mov
xchg
sub
lock
or
cmpsb
push
xorl
aam
or
outsl
clc
or
gs
imul
popa
out
mov
push
fmuls
push
test
add
hlt
sbb
inc
aaa
mov
dec
xchg
std
pushf
mov
aas
out
jb
imul
pusha
xor
mov
pushf
push
xor
pushf
stos
pop
mov
pop
les
flds
xor
push
xchg
pop
roll
lahf
sbb
mov
out
scas
inc
push
adcl
fisttpll
jecxz
movsb
ja
xor
fldt
and
inc
in
pop
or
xchg
and
rcrb
mov
add
lods
jo
dec
push
or
hlt
test
ss
adc
cmp
jecxz
pop
dec
inc
dec
jnp
push
in
mov
les
push
push
into
xor
xchg
js
pop
mov
mov
sbb
rclb
stos
roll
stos
lods
cmpsb
icebp
add
inc
sbb
lods
cmpb
aam
jp
addr16
bound
ficoms
stos
std
and
scas
push
adc
push
xor
inc
imull
mov
rcl
out
nop
lahf
mov
mov
jmp
stos
cmp
xor
adc
or
sbb
pop
sahf
sahf
inc
dec
xchg
imul
mov
mov
dec
pop
or
nop
stc
or
imul
xchg
scas
jnp
stos
xchg
jmp
jbe
xchg
daa
xchg
cltd
jns
dec
lahf
mov
or
sbb
out
popf
push
pop
popa
daa
sub
outsl
pop
scas
out
outsb
cwtl
lcall
mov
jl
inc
sbb
pop
sub
and
cmp
in
mov
jmp
enter
lret
or
push
inc
push
int3
loopne
cmp
call
mov
mov
rcl
popf
fnsave
repz
xchg
push
lods
fnstcw
and
xor
ret
jl
pop
pop
sub
rorb
aaa
pushl
stos
icebp
cmp
sahf
in
xor
pop
inc
jno
int
mov
xchg
jmp
inc
fdivl
cmpsb
icebp
adc
mov
out
push
out
xlat
xor
pop
imul
or
and
adc
cmpl
mov
scas
and
pop
fidivs
add
test
mov
pop
and
outsb
hlt
mov
std
idiv
push
xor
iret
cli
mov
cli
mov
add
lods
stc
mov
hlt
push
loopne
xchg
mov
loopne
mov
ret
scas
inc
xlat
add
adc
and
shlb
pushf
mov
mov
data16
rcrl
dec
dec
mov
mov
aaa
push
mov
jecxz
push
mov
jmp
pop
out
aas
fstl
inc
push
mov
xor
jns
inc
fadd
push
sbb
dec
lock
out
sti
stc
add
xchg
xchg
pop
sub
dec
xor
aad
jp
inc
ret
fs
roll
mov
inc
xchg
inc
pushf
fbld
mov
sub
imul
pop
clc
pop
push
xor
adc
mov
hlt
fisubrs
dec
out
aam
cvtps2pd
sbb
jecxz
mov
push
in
push
and
and
in
cmpsb
cmpsl
jecxz
ljmp
popf
dec
xor
daa
aas
popf
aam
inc
data16
and
out
ret
out
pop
pop
mov
add
iret
push
movsl
jp
xchg
or
xor
adc
xchg
push
mov
das
das
mov
sar
xlat
nop
mov
mov
arpl
test
pushf
push
stos
ret
sbb
xchg
in
pusha
test
xchg
xchg
lret
adc
ljmp
in
dec
adc
jge
outsl
cwtl
adc
out
movsl
and
mov
loopne
add
pop
inc
jne
push
adc
lds
pop
sbb
lret
outsl
arpl
push
enter
cld
xchg
or
test
jb
push
stc
out
sbb
pop
ljmp
inc
add
fcoms
push
jbe
in
mov
add
jle
xor
daa
mov
aaa
adc
incl
mov
out
sub
bound
mov
pushf
movsl
and
sub
mov
push
cwtl
or
pop
ret
push
pop
data16
cmp
into
xor
dec
pop
insb
cmpl
adc
xor
cltd
pop
dec
cmp
mov
and
stc
push
hlt
jb
jnp
loop
adc
mov
adc
push
sub
stos
lock
mov
sbb
jnp
in
addr16
mov
insl
mov
dec
xor
sub
aaa
jp
lret
dec
cltd
xor
cmp
and
popf
icebp
adc
sub
stos
lods
aaa
insl
inc
sbb
and
loopne
dec
cmp
incl
iret
xchg
jnp
cmp
cmp
jae
push
js
sahf
data16
test
in
mov
filds
and
push
sbb
jge
popa
sub
ljmp
xchg
je
outsl
xor
nop
lcall
add
push
repnz
rorl
xor
sub
add
pusha
mov
adc
sar
dec
push
movsb
dec
mov
orb
pop
lea
hlt
pop
das
nop
in
cmpsl
test
aaa
lahf
jle
enter
mov
adc
add
ret
push
jno
and
call
sub
call
outsb
jge
push
sub
lea
std
les
or
lock
xchg
mov
insl
clc
jns
xorl
push
sahf
repnz
jl
sbb
ja
jmp
loop
arpl
ficompl
push
ja
fisttpl
cmpsl
mov
add
lds
xor
outsl
or
aad
mov
push
es
rcr
cs
sbb
leave
cmp
sbb
cmp
rcrb
cwtl
ja
popa
jg
push
sub
sbb
push
sbb
fldenv
mov
dec
xor
dec
push
popf
xchg
push
sub
add
adc
aad
mov
jne
cmpsb
sarb
in
adc
pushf
sbb
loope
loope
das
ljmp
mov
inc
pop
sbb
push
inc
mov
mov
pop
push
sub
xchg
or
das
cmc
lds
mov
fildl
inc
repnz
mov
xchg
jl
lcall
and
lcall
gs
and
add
outsb
cmp
cmp
adc
adc
ja
fists
mov
push
sti
cwtl
fistl
arpl
in
lret
inc
test
mulb
xchg
pop
xor
inc
lahf
fldcw
js
addr16
xchg
cmpb
xlat
inc
add
cmpl
outsb
sub
mov
scas
inc
add
insl
add
xchg
cmp
push
adc
dec
jno
jae
out
pop
or
xor
mov
add
jo
xlat
jns
sub
sbb
cmc
nop
xor
jp
clc
pop
cmp
nop
add
lea
int
jecxz
mov
cmp
lret
jbe
popa
push
jae
test
jbe
cwtl
and
nop
mov
sar
lods
push
mov
lahf
mov
ret
fwait
jo
out
push
fcoms
mov
jp
xrelease
push
stc
cs
dec
xchg
je
gs
push
pop
popa
gs
insl
lcall
mov
or
push
pop
int3
mov
jl
mov
and
shl
add
shlb
jl
lcall
repnz
push
jg
xchg
pop
pop
test
pop
pop
call
jae
dec
fsub
cmp
aam
mov
mov
ss
cld
mov
fnsave
enter
dec
add
cmc
mov
push
xor
cmp
lret
in
lahf
sub
xlat
sub
mov
add
loope
fneni(8087
xor
xchg
or
adc
test
cmpsl
jae
fldl
cmc
and
sti
mov
repz
jmp
mov
mov
mov
jp
jmp
rcrl
mov
push
ss
jb
pop
xchg
cmp
sbb
aad
jae
movsb
cmp
pop
and
testb
xchg
pop
pop
stos
xor
lcall
ret
repnz
pop
or
jge
test
cmc
add
mov
insl
stos
and
arpl
sti
dec
pushf
push
cmp
stos
push
out
fwait
hlt
enter
jg
mov
iret
add
sbb
or
subl
jecxz
insl
adc
mov
cmpsl
test
clc
inc
push
mov
rorl
cwtl
test
xor
sub
cmp
push
mov
gs
mov
mov
inc
clc
call
data16
fwait
into
gs
fs
cmp
insb
aas
cmp
cwtl
inc
or
pop
cmp
inc
dec
jb
pop
lds
bound
ret
clc
mov
push
fmul
test
loope
inc
mov
stos
push
dec
clc
mov
jl
movsl
scas
pop
fnsave
adc
lock
mov
js
test
or
ficoms
inc
dec
mov
adc
insl
loopne
movsl
aas
jg
clc
sub
or
adc
pop
push
aas
repnz
lret
sbb
sbb
jmp
inc
not
jne
mov
test
rcll
daa
mov
jle
mov
pop
sbb
fcomip
push
lock
xor
jecxz
andb
inc
nop/reserved
xlat
lcall
std
cld
cmpsl
movsb
push
adc
and
fmull
ss
mov
fisttpll
pop
sub
fimull
das
inc
les
dec
mov
loopne
adc
aaa
fcompl
shrb
inc
mov
dec
sbbl
insl
xor
push
ret
call
add
mov
sub
pop
and
mov
or
mov
and
arpl
jp
scas
mov
sti
cli
rcrb
cmc
shlb
lods
loope
push
fiadds
and
ficoms
stos
jge
xchg
roll
inc
sbb
adc
stos
pushf
stc
mov
jae
pop
call
jg
scas
cs
orb
lcall
ret
pop
aad
pop
bswap
out
xchg
jl
bound
and
das
push
bound
loop
xchg
in
lock
and
fwait
shrb
cmpsb
daa
fadds
mov
sub
and
imul
imul
mov
jae
inc
add
mov
aad
pop
jmp
xor
movsb
test
shlb
aas
xchg
mov
subb
sub
sub
jae
jne
pushf
xchg
push
sbb
mov
loopne
pop
jno
shll
cmpsl
sbb
xchg
sbb
adc
mov
or
pop
loope
dec
mov
outsb
adc
jo
sub
xchg
stc
adc
sub
push
je
mov
lret
adc
fmull
pop
pusha
push
pop
dec
pop
icebp
sub
fsubs
lods
pop
clc
in
std
bound
jne
and
inc
out
test
push
and
in
out
xchg
add
adc
cmpsb
je
jg
popf
movsb
cmp
or
movsl
lret
push
pusha
in
cmp
lods
push
das
gs
xor
cmc
arpl
mov
mov
dec
loope
push
test
divl
adc
fcmovne
outsl
inc
ds
aam
lret
ds
aam
fwait
sub
mov
stos
mov
push
roll
jl
addl
cmp
mov
jmp
mov
fiadds
andb
xchg
jb
xchg
inc
add
mov
dec
nop
mov
lds
cmpsl
inc
cld
ret
cwtl
outsb
aaa
lea
fsubrs
and
int
daa
cmp
std
sub
jge
adc
imul
fdiv
mov
aam
iret
jne
test
push
aam
jmp
ss
sub
mov
out
call
xor
cmc
adc
pop
mov
push
ljmp
and
dec
pop
mov
xchg
or
cmp
push
push
aas
negb
pushf
jle
sbb
cmp
push
mov
loope
jb
ds
xchg
pop
inc
test
adc
jb
pop
jnp
pop
xor
mov
fwait
mov
inc
loopne
push
dec
add
test
aad
pop
inc
popa
jg
and
cmp
sbb
call
add
out
mov
push
push
dec
popf
push
test
pop
pop
jl
movb
mov
inc
mov
test
cltd
stc
sub
and
aam
sti
lcall
fbstp
adc
jl
cmp
pop
dec
out
mov
inc
call
test
mov
cwtl
movsl
stos
pop
adcl
jle
push
push
push
xchg
cli
push
loope
pop
jno
mov
test
popf
xor
push
xchg
or
fwait
addr16
aaa
push
sbb
cmp
int3
xchg
mov
loope
fstpt
pop
cmp
insl
sar
movsl
xlat
adc
cli
mov
mov
xchg
rcr
jnp
inc
mov
mov
cmp
jbe
cmc
push
sbb
out
fwait
pop
in
push
xchg
sub
mov
add
aam
mov
sbb
stc
and
xlat
push
jmp
and
icebp
adc
fstpt
push
adc
lret
js
lock
gs
cli
inc
mov
adc
xor
mov
mov
and
push
mov
cmp
mov
sub
fidivs
neg
nop
push
js
shlb
movsl
leave
mov
out
mov
push
stos
in
xor
jl
jle
sub
sbb
out
or
fcomps
lds
and
xor
xchg
test
cmp
and
push
cmp
iret
scas
ret
in
pushf
in
in
jmp
mov
mov
into
sbb
lret
mov
xchg
dec
xchg
fmuls
testb
xchg
xchg
loop
push
jmp
hlt
push
cmp
cmpl
mov
dec
inc
scas
and
inc
add
add
inc
adc
xlat
mov
stc
jne
mov
stos
ret
mov
rcrl
fstpt
dec
hlt
xchg
neg
and
outsl
push
jnp
dec
xor
test
dec
sub
divb
mov
dec
mov
mov
iret
aaa
fidivrl
jno
cmp
jbe
xor
rorl
lret
cmpb
in
ljmp
push
out
dec
adc
add
lods
aam
addr16
scas
mov
push
mov
cmp
int3
fnstsw
adc
pop
movsb
fmulp
js
cltd
mov
lock
mov
jg
inc
imul
mov
push
out
inc
mov
clc
cwtl
movsb
andb
aam
scas
arpl
jb
rolb
xchg
and
int
sbb
aaa
xor
jo
xor
mov
or
or
fimull
test
xchg
sti
sub
shrl
mov
out
mov
inc
mov
insl
inc
cmp
ret
or
out
in
insl
xor
lahf
inc
mov
cmpsl
sub
rcrb
adcl
mov
mov
and
jbe
xor
dec
insb
data16
lahf
xchg
mov
cltd
mov
push
dec
push
sbb
adc
mov
dec
fisubs
sahf
xchg
pop
fdivrp
andb
inc
adc
and
inc
sbbb
fs
jmp
in
push
inc
mov
aas
ror
in
lods
dec
dec
lea
cmpb
dec
mov
jo
sbb
push
sbb
adc
rcrl
jo
addr16
fistps
ffreep
outsl
mov
call
popa
mov
sbb
sbb
test
mov
loope
sbb
and
add
adc
push
loope
leave
outsb
movsl
and
test
outsb
push
out
and
jae
loop
pusha
in
adc
pop
xor
mov
jge
out
fcmovu
jae
xchg
dec
int3
inc
cli
ret
push
into
mov
mov
sbb
sub
jg
inc
or
add
fs
ss
dec
push
sbb
adc
push
in
nop
pushf
cmc
lods
adc
imull
jle
ficoml
std
dec
fwait
push
mov
in
sub
divl
ret
mov
push
in
lock
cmpsl
adc
mov
gs
pop
fnstcw
push
pop
test
pop
sub
mov
xor
dec
or
and
adc
insl
pop
push
and
xchg
imul
mov
mov
xorl
sahf
movsb
pop
adcl
mov
inc
mov
mov
sti
sub
add
push
inc
jle
aas
aas
dec
test
test
lds
loope
and
mov
das
mov
inc
jecxz
adc
mov
es
movsb
arpl
lret
sub
scas
out
xor
in
jl
cmp
pop
mov
ss
mov
loop
leave
jnp
mov
or
sbb
mov
pop
repz
aas
bswap
scas
cmp
push
inc
data16
jo
mov
dec
jno
xor
mov
mov
jle
lock
push
dec
xchg
in
jne
cmc
inc
xchg
pusha
out
mov
shlb
aad
or
sarb
rcr
mov
mov
mov
je
stos
jo
movsw
outsl
lret
inc
sbb
fsts
xchg
cmp
ret
leave
arpl
and
lahf
adc
push
movsl
dec
cwtl
inc
sbb
xor
dec
pushf
mov
xchg
xlat
or
jecxz
or
push
mov
into
and
in
inc
popf
xchg
test
fsubs
fs
sbb
adc
daa
and
pop
mov
sbb
std
sub
pop
cmp
sub
lods
cmp
jle
lods
mov
mov
xchg
das
mov
xchg
movsb
sbb
mov
add
push
inc
inc
cmp
addr16
mov
cmc
pop
inc
lret
mov
mov
xor
sar
or
dec
push
xor
push
divl
js
add
mov
lods
xlat
shlb
inc
pop
add
lret
pop
xor
sub
mov
and
add
sub
aas
cs
mov
mov
jle
inc
mov
frstor
rorl
push
inc
sub
hlt
xlat
jmp
in
les
imul
mov
add
xor
and
and
mov
mov
or
mov
mov
dec
xchg
es
lds
cli
add
insl
test
adc
cmpsb
dec
adc
jg
push
cmc
js
dec
out
imul
pop
gs
movsl
leave
xchg
div
pop
icebp
das
shrl
leave
into
cmp
aam
cmp
push
rol
xchg
sbbl
push
fcoms
pop
ds
push
xor
int
cmpsl
mov
push
or
mov
stos
adc
test
in
jne
leave
push
jne
out
and
mov
cltd
cmp
dec
sbb
dec
mov
and
call
push
sbb
aam
cmp
push
movsb
fmull
jle
xchg
xchg
mov
sub
mov
mov
jecxz
outsb
rcl
aas
mov
ljmp
add
sub
in
std
lcall
xchg
movsl
pop
bound
daa
jecxz
cmp
stos
adc
push
xchg
mov
mov
testl
cltd
push
and
cmp
mov
loope
jmp
dec
xchg
pop
push
inc
fsubl
test
into
mov
sub
call
mov
xor
lret
pop
sbb
push
inc
stc
ja
loopne
test
mov
cmpsl
or
sbb
sbb
xchg
inc
and
cmpsl
pushf
lock
jno
and
int3
and
loopne
cs
fwait
popf
scas
jp
addr16
lods
divb
mov
inc
pop
mov
ret
loopne
hlt
or
sti
xchg
stos
stos
pop
jmp
rcr
mulb
inc
pop
mov
ds
pushf
cmpb
scas
test
arpl
scas
fists
int3
andl
stos
gs
clc
fsubrl
nop
pushf
adc
mov
fidivrs
xchg
pop
leave
test
push
call
xchg
andb
sahf
mov
xchg
rcll
icebp
out
test
lods
stos
cltd
jmp
and
adc
mov
fisubrl
adc
add
lods
xchg
popf
into
push
insl
fnstsw
pop
pop
outsl
adc
mov
mov
data16
pop
jns
mov
and
mov
and
xor
rol
or
ljmp
mov
lcall
mov
jne
sbb
sti
sbb
and
and
ret
xchg
adc
cmp
fstpl
or
das
lret
cmp
mov
test
sti
and
icebp
jg
push
xchg
idivb
xchg
imul
jecxz
xchg
outsb
sub
fwait
imul
iret
jns
ja
and
xor
mov
xchg
int
inc
xchg
popa
xchg
jbe
sub
hlt
mov
xorl
in
stc
data16
cwtl
cmpb
rcl
int
sbb
sahf
sub
repz
lcall
mov
xchg
out
xor
rorb
subb
adc
pop
push
stos
mov
into
push
sti
loopne
xlat
push
lods
pusha
pop
adc
in
xlat
sub
inc
lods
and
jmp
sti
test
es
cmp
sbb
loopne
repz
jae
and
popf
scas
or
hlt
and
addr16
stos
sbb
push
jo
xor
insb
out
lahf
add
push
lcall
push
scas
loopne
rolb
in
lahf
jmp
test
cmpsl
dec
adc
xchg
mov
mov
out
pop
xor
orl
nop
fsubp
das
cmp
shlb
mov
outsb
mov
adc
add
sub
mov
jmp
jae
dec
push
cmp
pop
cld
sahf
icebp
mov
sub
fidivrs
pop
aam
pop
lea
pop
lcall
xchg
pop
pusha
ficompl
inc
lods
loopne
test
shl
inc
sub
xchg
js
pop
mov
jo
xchg
xor
lahf
aas
aas
adc
mov
rcrl
gs
mov
scas
mov
lods
push
adc
jb
or
jle
push
cmp
cld
pop
lret
add
push
lods
sar
test
arpl
test
xor
orb
popaw
sbb
or
vpmacsww
xchg
out
cmp
notb
pop
das
jl
imul
push
add
call
or
cmp
jnp
imul
add
mov
fdivr
add
out
jle
imul
pop
insb
inc
sarb
addps
mov
jecxz
movsl
push
pop
hlt
jp
jne
orl
xchg
pop
add
xor
push
xchg
adc
int
xchg
xor
dec
mov
fxch
lea
jecxz
insl
and
addr16
notl
out
mov
pop
ljmp
xchg
shll
push
and
les
and
and
dec
aas
fsubs
xor
jl
imul
pop
es
xchg
ljmp
sti
enter
pop
out
sub
jmp
or
outsl
or
aam
xlat
jle
lea
mov
mov
pop
sbb
jg
pop
es
sbb
push
bound
push
mov
mov
dec
mov
cmp
sahf
cmp
lret
mov
sub
cld
sar
push
xor
call
movsb
push
add
movsl
cs
es
and
sbb
jecxz
in
sbb
jle
push
adc
mov
clc
pop
pop
insb
push
jne
in
cmp
das
push
or
dec
lods
pop
daa
gs
jle
int3
adc
sbb
and
inc
lret
daa
cmp
pusha
inc
aad
and
inc
sbb
pop
xor
pop
es
cs
cs
aam
insl
and
mov
sbb
xchg
orb
xor
movsl
mov
mov
loope
sub
xor
leave
or
pushl
and
lds
enter
xor
movsb
aad
inc
inc
shll
push
sub
mov
in
in
out
sbb
inc
mov
mov
call
sbb
and
insb
adc
ret
jl
xor
lea
adc
clc
jecxz
rcrl
or
ljmp
pop
or
and
cmc
or
push
jb
xchg
fdivl
loope
stc
pop
xchg
popf
jmp
dec
or
lret
lcall
push
adc
popa
and
jbe
cld
sub
ljmp
or
push
xor
pop
lods
lret
stos
pop
cld
pop
sub
push
or
ja
xor
adc
inc
mov
mov
mov
dec
xor
cmp
pop
hlt
pop
jns
imul
jae
mov
bound
insb
sub
jno
and
aam
mov
sub
mov
push
pop
mov
mov
test
es
push
fistps
aam
xchg
and
loopne
inc
mov
add
test
adc
inc
lods
sti
andl
cwtl
orb
xchg
iret
leave
xchg
cmp
mov
fwait
and
cwtl
or
fwait
clc
mov
dec
mov
xor
aaa
push
ret
lods
jne
pop
test
addr16
dec
lret
pop
push
mov
or
adc
push
mov
leave
jmp
cmpsb
jns
sbb
cld
mov
adc
adc
subl
ds
lahf
fsub
jmp
push
mov
xchg
fs
add
shr
out
fadd
jne
repnz
xchg
int3
push
cmp
test
sub
in
cli
repnz
sbbb
dec
leave
cmp
nop
insb
insb
xorb
jmp
inc
cltd
call
in
clc
mov
stc
int3
push
repnz
out
jo
xchg
cmp
dec
js
dec
pop
push
pop
std
xor
in
lahf
xor
loopne
mov
in
mov
adc
sub
out
arpl
fsts
xchg
mov
jp
mov
push
lock
add
pushf
lds
fsubs
sarl
pop
and
inc
mov
xchg
sarl
jle
hlt
pop
mov
pop
push
mov
xchg
sub
test
sbb
pop
arpl
sti
cmp
ffree
dec
scas
test
nop
inc
stc
shlb
jbe
xchg
xor
data16
mov
and
jb
imul
fxch
stc
push
dec
sbb
shl
push
mov
lods
adc
fstpt
adc
movb
mov
cmp
fwait
hlt
negl
es
sub
not
int
sub
push
cmp
xor
or
pushf
loope
test
out
movsb
pop
out
sbb
jae
pushf
cmpsl
ficomps
scas
pushf
cmp
inc
pop
pop
clc
lods
test
xchg
or
stos
or
popf
push
push
nop
xchg
jns
sbb
mov
movsl
stos
pop
xchg
fisubrs
xchg
stos
push
lea
clc
dec
inc
pusha
pusha
mov
sub
int3
pop
call
and
stc
add
xchg
jl
ss
scas
lret
push
notl
xor
lds
cmp
rorl
test
pop
mov
movsl
insl
adc
push
out
aaa
xchg
lds
lds
mov
mov
hlt
lods
push
mov
mov
push
test
fistpll
jo
and
ja
or
jb
cs
mov
movsb
adc
cmpsb
mov
mov
test
es
lds
gs
fcomip
es
outsl
inc
dec
shrl
mov
mov
push
mov
adc
aaa
imul
push
xor
mov
popf
mov
push
mov
dec
jmp
sub
push
sub
cmp
mov
idivl
leave
arpl
les
mov
cs
dec
in
fucomi
flds
cmp
aad
enter
xor
es
lock
or
mov
dec
xchg
mov
inc
mov
loop
push
in
jbe
movsl
lret
fsubrl
cli
sub
outsb
gs
dec
pusha
pop
rorb
andb
in
repz
add
stos
icebp
and
mov
arpl
mov
insl
int3
xchg
and
xlat
adc
sub
jle
andb
divb
pushf
add
lds
mov
outsl
add
add
adc
inc
cmpl
and
clc
in
es
fndisi(8087
mov
xor
mov
popf
out
test
es
iret
xchg
push
jl
mov
sti
lret
cmp
mov
dec
jmp
add
jle
sub
sbb
adc
jmp
add
mov
mov
lret
mov
in
sub
mov
fwait
jg
cltd
rorb
shll
movsb
lds
fwait
jb
iret
mov
adc
cmp
mov
mov
or
int
add
pusha
xor
mov
js
xor
jecxz
push
addb
jg
rclb
cltd
test
sbb
xor
or
movsb
xchg
sub
and
lret
pop
cmp
lret
mov
adc
and
cltd
xor
data16
xchg
jl
and
sbb
mov
or
mov
mov
andb
aas
mulb
leave
push
out
aaa
sbb
into
or
adc
dec
cmpl
jg
cmp
mov
fs
push
hlt
push
xchg
jne
prefetch
clc
enterw
aas
adc
stc
sbb
fs
cmpsl
dec
imul
bound
pop
in
fwait
mov
cwtl
inc
cli
cmp
int
jo
ret
addr16
mov
inc
jno
or
add
ficoml
repz
cmp
scas
out
ss
and
shl
jp
pop
jno
outsb
out
imul
imul
jne
bound
clc
push
mov
sub
test
dec
mov
lret
enter
lahf
rcrl
test
out
mov
cld
or
fdivp
and
lods
lret
xchg
lahf
cld
fwait
call
mov
aam
jecxz
add
mov
sub
and
push
out
push
mov
sub
add
adc
sbb
push
test
les
sti
subb
mov
mov
mov
popf
dec
enter
mov
cmpb
negb
cmp
push
or
cmpsl
ret
dec
jp
xor
outsb
ret
sti
daa
hlt
and
push
mov
adc
and
imul
pop
inc
xorl
pusha
jge
cli
enter
mov
fsubrl
clc
call
repnz
enter
mov
and
filds
in
outsb
dec
cs
jns
pop
dec
push
insl
ret
jp
loope
and
aaa
push
stc
add
pop
ret
sub
mov
inc
mul
out
add
xlat
outsl
out
arpl
xor
sti
lods
dec
in
jmp
mov
dec
das
pop
arpl
sti
dec
bound
or
cmp
mov
adc
xchg
pop
or
sar
sub
adc
into
js
ret
sbb
std
dec
aam
push
pusha
sub
or
inc
and
sub
xchg
int3
icebp
das
sti
and
inc
gs
bnd
aas
jne
sahf
mov
in
mov
stc
je
adc
pop
shrl
jns
inc
out
cmp
jb
adc
mov
push
and
add
call
dec
popf
sbb
add
dec
add
pop
ja
pop
std
push
cmp
pop
std
push
cmp
fists
mov
mov
test
or
xor
adc
not
fldl
mov
cmp
push
jle
nop
xchg
lret
lea
cwtl
pop
xchg
mov
iret
rcr
jbe
dec
xlat
jecxz
decl
push
cltd
in
push
mov
jns
pusha
mov
jge
xor
cmp
jae
shl
popa
js
jl,pn
ds
js
mov
cltd
xchg
sahf
mov
das
test
cli
sub
push
sub
jns
shrl
es
mov
xchg
outsb
dec
cmp
jp
insl
out
cmpl
in
loop
test
fists
sahf
jmp
pop
jbe
sub
add
ret
jae
mov
lret
jae
divl
push
mov
xor
push
mov
inc
test
ret
mov
iret
cmpl
sub
sub
out
xor
data16
push
out
iret
test
bound
or
sahf
jle
cmc
add
dec
xchg
popa
shlb
cwtl
jecxz
xchg
imul
mov
aad
mov
int3
fldpi
xor
cmp
ret
scas
adc
mov
push
mov
daa
sbb
imul
or
cmp
popf
cmpsl
push
jno
or
adc
or
cmc
data16
and
xor
pop
rcr
adc
adc
es
and
lret
and
stc
jp
mov
sub
cwtl
repnz
out
je
or
lcall
push
xor
iret
push
out
and
out
ficompl
scas
cmp
lods
adc
adc
sub
xchg
pop
add
das
sti
xor
push
lret
xchg
push
xchg
aad
xor
inc
out
scas
enter
rorl
xor
mov
out
push
pop
or
or
pop
and
fwait
clc
addr16
sub
dec
sbb
into
fwait
imul
push
ljmp
xchg
cmovnp
inc
adc
out
lods
sti
hlt
pop
jne
or
daa
mov
pushf
dec
jbe
mov
dec
clc
add
add
test
and
nop
lds
les
xor
mov
and
fstpl
dec
jnp
aas
mov
cmp
fists
and
dec
adc
lock
int
ja
cmp
cmp
mov
insb
jns
adc
ljmp
clc
fs
mov
in
xchg
mov
test
loop
add
mov
cmp
or
xchg
mov
sbb
cld
es
inc
test
aam
cmc
mov
ret
into
sbb
or
out
movups
sbb
jae
dec
les
insb
loopne
mov
jle
xor
cmp
outsb
jg
inc
dec
dec
cli
lock
les
aas
leave
lea
lock
les
aas
leave
lea
lock
les
aas
leave
lea
lock
les
aas
leave
lea
lock
les
aas
leave
lea
lock
les
aas
leave
lea
lock
les
aas
leave
lea
lock
les
aas
leave
lea
lock
les
aas
leave
lea
fs
xchg
mov
inc
dec
pop
call
jmp
push
scas
jl
mov
sbb
mov
notb
add
xor
jl
mov
movsb
stc
cmp
imul
push
inc
mov
add
sbbb
mov
adc
cmp
jmp
inc
mov
sub
cmp
aas
ja
inc
adc
shlb
stos
cmp
inc
fstps
pop
adc
mov
sbb
pop
int3
and
sub
mov
int
ror
out
aaa
mov
clc
lds
rolb
mov
pop
je
and
js
jbe
mov
or
inc
cltd
pop
sbb
shl
mov
ret
cmp
ljmp
xchg
fs
or
cld
jmp
add
sub
dec
and
nop
call
adc
jp
or
xchg
pop
dec
or
int
mov
add
inc
cmp
mov
in
adc
add
sbb
loopne
dec
repnz
aad
mov
cwtl
mov
dec
cld
neg
lea
fsubrs
mov
push
ljmp
jne
shlb
lods
add
icebp
sub
and
in
cmp
jnp
in
rclb
aas
out
sbb
mov
inc
cmp
xor
lcall
push
sbb
jno
inc
pop
cmp
cld
and
xchg
pop
pop
xor
or
roll
push
xor
addl
xchg
fs
sbb
in
ljmp
sahf
pop
sbbl
nop
fcmovne
mov
mov
cmp
sar
xor
push
jbe
fisubs
or
out
movsl
leave
lahf
scas
mov
fwait
xor
fbstp
pop
bound
mov
loope
jmp
pop
rorb
xchg
xor
js
loop
or
lds
xlat
adc
jp
push
out
int
int3
add
repz
test
cmp
mov
xor
inc
pop
push
push
cmp
fdiv
loopne
push
push
data16
dec
shll
test
loope
push
xlat
mov
in
adc
inc
lcall
cld
push
mov
leave
xchg
iret
add
fisttpll
push
out
aam
pop
cltd
mov
fldl
fwait
sub
mov
push
cmp
aad
xchg
es
into
xchg
add
andl
shlb
in
ret
or
mov
iret
lret
jns
sub
jl
mulb
fsubrs
pushf
xchg
mov
cmpl
arpl
or
add
lock
dec
fdivrs
mov
jecxz
sub
adc
push
sub
leave
pop
dec
dec
leave
push
push
scas
das
push
mov
pop
fists
xor
mov
call
inc
ljmp
xor
inc
cwtl
shlb
addr16
mov
xor
pop
arpl
mov
idivl
mov
sub
icebp
insb
inc
xchg
pop
outsl
incb
ret
pusha
push
cmp
mov
popa
sbb
add
sbb
mov
xchg
push
int3
les
fcomip
sbb
test
push
cmp
inc
mov
cmpsl
push
mov
je
repz
es
mov
add
gs
das
or
scas
je
std
xchg
push
mov
inc
add
ret
mov
fnsave
jg
inc
jnp
fs
xor
lcall
xchg
leave
enter
xchg
xchg
inc
cltd
sti
push
popa
mov
mov
arpl
mov
dec
stos
cld
jb
test
fsubrl
sahf
inc
dec
or
rcr
cli
mov
rclb
pop
or
scas
sbb
push
movsb
jae
xchg
sub
adc
aaa
mov
pop
jb
cmp
ret
or
push
int3
out
and
insb
ja
mov
adc
outsl
xor
inc
or
jge
mov
mov
repz
mov
push
lods
enter
add
ds
jg
add
jle
fidivrs
lea
cmp
jbe
jbe
jl
sti
cmpsl
aam
mov
jecxz
pop
jmp
cwtl
sbb
lock
mov
push
push
inc
pop
int
jnp
sbb
pop
mov
xorb
inc
leave
or
stos
or
mov
mov
or
and
enter
xchg
bound
jmp
sbb
push
mov
dec
jg
sub
dec
sub
sub
mov
mov
daa
xchg
sbb
add
imul
test
jnp
subb
xchg
xor
jb
pop
mov
test
mov
adc
sbb
aam
cld
dec
dec
push
sbb
mov
aad
jmp
mov
jbe
std
lret
addr16
mov
mov
les
mov
xchg
fldt
rorl
repz
sub
mov
mov
cmp
roll
mov
add
jbe
ja
lock
popf
lds
sahf
pushf
jg
loope
movsb
dec
test
inc
cmpsb
iret
fisubrs
mov
adc
out
pop
inc
out
cmp
js
jnp
iret
or
and
in
cmp
lret
leave
aaa
les
add
out
iret
pop
ds
mov
mov
subb
sub
pop
adc
cmp
push
jl
xor
jmp
sbb
imul
jge
daa
movsl
test
mov
dec
and
bound
xor
cmp
xchg
xor
fistpll
in
imul
call
cmp
sbb
jmp
lcall
xchg
movsl
fdivl
push
aaa
mov
sub
jg
cmp
xchg
lea
jmp
cli
push
jbe
xor
push
shlb
jl
movsl
cltd
mov
inc
movsb
mov
dec
and
push
xor
sbb
imul
inc
ret
ja
or
jg
fucomip
fcom
and
mov
push
lods
in
mov
stc
or
test
fadds
sub
pop
mov
bnd
cmp
mov
jae
repnz
mov
aas
dec
repnz
mov
mov
fs
je
frstor
lods
jmp
lahf
push
out
lret
lcall
pop
push
adc
sub
inc
pop
lock
fisttpll
xor
mov
out
or
ja
xchg
xorb
dec
fwait
or
and
adc
jns
lret
fnsave
pop
jp
add
xchg
pop
leave
cmp
stos
push
cmp
popf
iret
test
pop
xchg
mov
popa
and
outsb
pop
adc
mov
pop
sbb
cmp
add
fisubs
shr
cmp
and
pop
cld
rorl
andl
mov
jecxz
les
push
xor
cmp
aad
and
les
inc
call
cmp
dec
loopne
imul
pop
xor
adc
pop
sbb
or
jp
sbb
xchg
add
jnp
or
flds
test
std
movsl
pop
xchg
sti
mov
sub
xor
add
pop
fucomip
clc
mov
and
mov
cs
mov
cli
in
fs
dec
pop
dec
push
or
loop
icebp
scas
popf
and
mov
outsb
sub
or
xchg
dec
cmc
push
fsub
mov
inc
mov
arpl
ret
insl
mov
stos
jns
mov
mov
lods
sub
mov
or
mov
das
testl
jle,pt
leave
loope
cld
les
mov
dec
adc
outsb
mov
into
pop
dec
push
movsb
add
inc
dec
jl
sub
jle
dec
test
cwtl
int3
jge
in
jecxz
cmpsb
add
jmp
leave
int
fadds
cmpsb
add
push
ljmp
jle
jae
sbb
mov
or
cmp
pop
jnp
lods
dec
arpl
fwait
ret
pop
in
ret
and
rol
xor
test
push
push
xlat
sti
lods
imul
mov
adc
dec
dec
xchg
ficoml
ret
dec
adc
push
mov
sub
mov
lcall
fsub
insl
bound
xchg
cltd
jg
mov
mov
ss
ljmpw
divb
mov
lock
sbb
es
pop
jnp
jl
adc
iret
jmp
insl
jle
mov
mov
insl
cmp
test
fiadds
shl
sbb
shlb
cmovae
mov
stc
mov
pop
sbb
cmp
rclb
sarl
push
dec
data16
shlb
mov
mov
shrl
lcall
lods
jno
mov
loopne
inc
lcall
aaa
bound
adc
lds
fidivs
das
or
mov
fidivrl
push
adc
push
and
lods
push
pop
pop
fcmovbe
outsl
or
add
cld
into
or
ret
movsb
pop
std
pop
ja
adc
ja
adc
jno
cmpl
push
mov
mov
test
adc
pop
xor
lock
test
pop
sti
adc
push
push
std
mov
dec
xor
mov
push
xchg
push
jp
loopne
adcb
mov
jge
ror
imul
sbb
mov
test
dec
in
cmp
adc
adc
dec
add
pushw
pop
mov
in
push
fimuls
aam
push
mov
stmxcsr
mov
adcb
pop
dec
in
or
pop
xchg
adc
push
sub
dec
hlt
dec
sbb
scas
das
inc
shrb
orl
enter
push
out
cmc
and
out
aas
rol
pop
jecxz
in
pusha
cmpsb
mov
mov
lods
jl
sbb
out
cli
inc
cmp
sbb
scas
les
popf
ja
push
insl
enter
fldcw
popa
pop
mov
dec
mov
out
ret
jmp
insl
sub
fs
aas
push
adc
movsb
xor
cmp
mov
cltd
jae
movsl
mov
fidivrl
mov
jne
lahf
lods
sub
outsb
cmovae
rdmsr
js
int
test
lock
push
data16
cmpsb
cld
dec
arpl
int3
jecxz
xchg
xchg
mov
aam
fidivl
loopne
mov
in
mov
dec
lods
mov
cmp
sbb
inc
sub
ljmp
mov
adc
add
and
decb
cmpsb
insl
andb
pop
testl
lods
inc
dec
sbb
add
mov
lds
test
xchg
data16
ss
mov
push
ljmp
lcall
inc
fisubl
or
mov
dec
adc
pop
xor
cltd
lods
sbb
xchg
das
and
mov
mov
jnp
cmpsl
enter
adc
les
jno
aaa
scas
mov
xor
push
movsb
or
dec
xor
xchg
cmp
or
adc
adcl
popf
pop
in
shlb
push
push
add
dec
mov
xor
mov
jl
out
fidivrs
mov
xchg
or
and
jp
jne
or
add
jae
xchg
add
insl
enter
mov
xchg
aaa
jp
mov
iret
js
xchg
mov
insb
mov
and
mov
inc
ds
inc
push
xchg
xchg
notb
lret
cwtl
push
jno
fnstenv
lea
scas
push
inc
or
test
fimull
imul
mov
cmc
js
int
hlt
sti
movsb
rorb
in
add
lods
mov
xchg
add
pop
adc
loopne
jo
mov
ret
pop
fstp
mov
data16
push
sbb
mov
sbb
aas
adc
and
push
push
sbb
pop
fsts
lret
inc
mov
arpl
clc
lods
jo
mov
iret
aaa
jp
mov
adc
nop
mov
scas
popa
loopne
lcall
add
push
jmp
pop
or
mov
jecxz
sub
nop
lret
xchg
fs
mov
int3
div
movsb
clc
inc
sbb
les
and
out
xchg
push
mov
cmp
sbb
cld
je
cmp
scas
fcoml
movsb
pop
adc
aad
cmp
inc
std
jbe
or
sbb
clc
add
inc
cmp
jl
stc
mov
in
es
scas
ds
pop
sbb
pop
mov
push
add
lret
xchg
ds
mov
jl
ret
clc
sahf
es
adcl
jne
dec
aam
inc
mov
push
xorl
push
movsl
cmp
test
cmp
fstl
into
mov
sbb
push
sbb
inc
je
add
outsl
cld
add
cmp
mov
jae
fldt
cmp
sub
outsl
and
gs
xchg
loop
mov
pop
sbb
imul
js
loope
mov
in
jne
scas
or
mov
rcrb
cmpl
test
ret
xor
cmp
or
loop
movsl
scas
stc
lahf
int3
lds
in
pop
jo
orb
fdivl
icebp
cld
ret
mov
cmp
dec
xchg
mov
rcrb
das
or
mov
fiaddl
fimuls
mov
sub
lret
pushf
pop
cmpsl
test
fadds
fidivs
lret
lods
xor
and
fcomip
loop
sbb
cld
pop
add
rclb
cmp
das
inc
aas
push
in
mov
sbb
vmread
add
push
out
sbb
popa
sbb
imul
pop
mov
jmp
jno
pop
es
sub
ret
shlb
xchg
dec
mov
sub
dec
rorl
out
cmp
sbb
xchg
clc
pop
and
cmp
loope
cmc
in
lahf
cmp
push
mov
std
jmp
jp
push
jnp
out
inc
push
pusha
mov
and
imul
cmpsb
out
in
jo
scas
xor
shrl
sbb
repnz
sbb
inc
jg
jl
pop
stc
ja
jne
dec
add
pop
pusha
loop
hlt
lret
clc
sti
test
orl
inc
push
xchg
mov
imul
sarb
repnz
mov
insb
cltd
mov
push
sar
in
movsl
aad
ljmp
dec
sti
adc
outsl
je
sub
popa
xchg
xor
dec
shrb
mov
xor
push
out
test
jmp
popa
xchg
pop
mov
jle
pop
stos
shlb
push
fwait
mov
push
int3
aam
mov
cld
jmp
aam
repz
int
xchg
daa
movsl
cli
xor
adcl
sahf
mov
enter
fisubrl
aad
xchg
js
js
clc
fadd
lahf
or
ljmp
push
add
fnstcw
loope
sti
std
push
js
shlb
dec
hlt
xchg
pop
out
cmpsl
das
gs
pop
pop
xlat
mov
sub
bound
out
leave
push
mov
test
pop
sti
imul
leave
mov
or
aad
adc
add
scas
int
sbb
xchg
ss
lret
clc
bound
cmpsl
or
sti
or
lcall
ss
push
js
pop
cmp
pop
nop
and
mov
pusha
push
movsl
pop
inc
in
jo
sbb
xor
add
dec
insb
icebp
mov
dec
in
cmpsl
arpl
inc
push
pushf
lret
in
adc
lret
mov
enter
mov
jge
fwait
pop
sub
aad
adcl
int3
arpl
xor
sbb
mov
sub
mov
hlt
dec
dec
xor
dec
in
xchg
loopne
loopne
jne
lcall
js
push
clc
cltd
sbb
and
ds
xchg
lock
sub
cmp
repnz
fsubrs
or
out
shrb
jmp
xor
dec
xor
sub
faddp
loope
dec
in
mov
push
pop
lret
push
add
fs
xchg
inc
mov
shrb
pop
pop
out
sub
push
and
xlat
xchg
xchg
rcrl
jbe
int3
inc
shr
testl
sar
sbb
mov
pop
push
fiadds
pusha
push
mov
or
and
pop
mov
inc
xchg
xor
frstor
rol
cmpsl
pop
clc
into
iret
dec
add
push
rolb
mov
loop
inc
xorb
cmp
mov
jmp
adc
cld
icebp
and
popf
ret
shrl
ret
insb
inc
cmp
aad
mov
pop
adc
clc
xchg
fwait
ds
or
adcb
imul
shl
pop
loopne
jb
lds
xor
pop
les
test
inc
mov
filds
xchg
fisubrl
ss
mov
sbb
ret
outsl
lcall
mov
jne
and
or
xchg
xorb
sbb
aam
sbb
inc
adc
nop
mov
mov
sub
roll
jp
pop
mov
out
jge
lock
sub
inc
sub
js
xchg
push
xor
fsubp
mov
notl
test
icebp
push
in
maxps
mov
jno
pop
push
inc
or
sbb
push
addr16
pop
stos
nop
dec
mov
mov
mov
pop
shll
jecxz
xchg
movsl
daa
adc
scas
inc
xchg
repnz
aas
in
adc
insl
or
rorl
jp
inc
inc
scas
out
stos
sub
shr
es
sti
mov
mov
sbb
scas
pop
xchg
push
lret
sub
mov
pop
inc
xchg
daa
or
inc
or
popa
call
hlt
mov
pop
fmull
gs
aad
push
in
outsb
pop
fimuls
enter
cmp
xorl
ja
mov
push
inc
mov
mov
in
popl
xchg
mov
xchg
mov
mov
lds
aad
ret
nop
cld
sbb
daa
or
jecxz
push
pushf
jne
das
pop
xchg
aad
subb
scas
add
mov
mov
jp
ss
cmpsb
and
pushf
sub
cmp
lret
ror
je
pop
into
adcl
fs
sub
and
ds
aam
fwait
pop
aam
push
sub
and
call
popf
mov
pop
rolb
pusha
nop
mov
aaa
xor
xlat
lea
and
shl
insl
stos
loopne
lahf
pop
pushf
jl
repz
mov
hlt
add
arpl
ds
sbb
sbb
and
jo
and
pop
xchg
mov
add
sbb
ret
insb
fcomip
xchg
shr
pop
lock
push
lods
in
js
lret
mov
imul
enter
in
sbb
rol
fidivrs
test
popf
fistpl
xor
pop
js
mov
adc
cmpsl
or
rorb
and
or
xchg
jo
les
in
dec
xor
stc
test
pop
cld
mov
clc
dec
nop
adc
lss
mov
test
pop
dec
imul
add
movsl
mov
cli
push
movsb
xor
lods
jb
gs
mov
sub
rol
xor
clc
and
adc
xchg
adc
sbb
icebp
neg
stc
jae
test
ss
jmp
mov
cwtl
dec
jl
jge
mov
test
inc
jnp
sub
enter
xlat
sbb
mov
and
adc
fwait
mov
jle
xchg
imul
adc
or
xchg
bound
fsubrl
rolb
mulb
add
xchg
pop
fadds
pshufw
sub
adc
adc
fdivl
aam
popa
test
call
js
mov
aas
outsl
shr
mov
sub
push
lret
pusha
sbb
fistpl
hlt
jle
cs
mov
jo
xchg
roll
cmp
sub
inc
popa
je
cmc
adc
xchg
mov
ljmp
sbb
mov
mov
and
into
xchg
xchg
test
repz
jo
jl
daa
int
inc
in
test
add
dec
sahf
decb
repz
gs
int
xor
lods
fs
add
adc
xlat
cmp
or
mov
push
pop
mov
sbb
add
fdivr
out
clc
rclb
pop
in
test
pop
inc
add
mov
and
mov
mov
pop
cltd
ss
movsl
push
adc
jecxz
mul
dec
pop
sub
outsb
mov
pop
dec
int3
pop
and
mov
cmpsb
xchg
and
subb
push
incl
movsl
clc
mov
in
dec
outsb
enter
sbb
adc
test
dec
rolb
rclb
je
mov
dec
xchg
call
sbb
mov
out
mov
mov
sub
add
and
cmp
dec
inc
movb
or
sub
clc
adc
test
cmc
bound
sbb
jbe
and
mov
sub
dec
pop
mov
int
ja
cwtl
xchg
ret
xor
xor
fisttpll
xor
cld
mov
lcall
push
push
and
inc
aam
gs
jno
cwtl
lret
outsb
add
xchg
ss
dec
or
movsb
dec
pushf
shll
outsl
mov
mov
nop
ss
cmpl
imul
dec
cmp
adcl
std
das
xlat
lea
nop
jge
cltd
jecxz
mov
out
xor
fistl
adc
jb,pn
cmp
in
lock
stos
push
loope
lahf
inc
jnp
mov
dec
test
sahf
loopne
push
pusha
loope
loopne
sahf
fmul
out
jne
xor
and
push
jmp
dec
icebp
or
pop
cwtl
cmpsl
insb
dec
jge
popa
in
inc
pusha
lahf
stc
or
inc
mov
push
repz
pop
mov
mov
add
add
repz
aaa
repnz
dec
leave
add
sbb
outsb
dec
jmp
push
push
sub
addr16
cli
rorb
ja
shl
xor
pop
mov
ret
shlb
add
dec
add
shll
jno
inc
insb
inc
add
dec
fcmove
jne
aam
out
int3
stos
mov
push
fisubrl
hlt
sub
jb
inc
xor
mov
ja
jmp
pop
mov
imul
jae
adc
dec
jp
aad
addb
sub
xor
jle
aad
jge
popf
pop
xchg
xor
jmp
adc
add
jmp
or
ret
ret
pop
xor
lret
mov
pop
fs
dec
add
jnp
mov
jle
cmpsl
shrb
adc
push
adc
loopne
bound
js
roll
es
jns
xchg
xlat
and
push
fnstsw
or
jno
int
adc
sbb
mov
inc
mov
push
iret
es
pop
sbb
dec
sub
mov
push
nop
jp
jle
mov
mov
nop
adc
and
mov
in
mov
mov
jg
mov
dec
addr16
loopne
jbe
pop
mov
fidivl
mov
pop
mov
das
sti
jbe
mov
sub
adc
ljmp
lods
and
andb
into
cmpsl
push
rorb
add
mov
or
push
leave
inc
filds
dec
jecxz
jbe
xor
xchg
cmp
inc
mov
add
jne
add
sbb
aam
nop
xchg
jns
test
adc
jae
movsl
lret
sbb
rclb
push
and
jo
and
lock
test
and
sbb
jmp
push
aad
and
ficompl
lock
xor
xchg
adc
xchg
jo
rcl
fidivrs
jecxz
inc
or
rcrl
pushf
jl
push
gs
test
movsl
lcall
and
lcall
sbb
push
push
add
popf
shll
inc
push
adc
inc
stos
push
add
popa
ja
lret
inc
outsb
dec
in
sub
rcr
test
sarl
std
cltd
push
dec
push
lret
hlt
pop
jbe
jecxz
sbb
xor
or
loopne
xchg
or
test
xor
bound
and
icebp
test
sub
push
mov
out
inc
dec
or
sbb
in
shlb
idivl
out
stos
push
push
sbb
lea
mov
inc
or
xchg
sub
pop
mov
and
clc
das
mov
rcll
sbb
xor
mov
adc
or
xchg
or
imul
mov
aaa
xchg
inc
mov
pop
dec
insl
aad
into
jnp
lods
mov
lahf
cmp
adc
fcomp
cmpb
pop
ss
loop
xchg
stc
or
in
mov
and
sbb
shrl
cmp
sub
xor
add
lret
or
xor
shrb
lahf
mov
rolb
mov
mov
hlt
mov
xor
sbb
shll
lret
dec
movsb
int
mov
sbbl
xchg
and
or
inc
cld
adc
clc
inc
icebp
stc
stc
mov
in
pop
gs
xor
mov
repnz
or
sub
loop
xchg
aam
add
inc
cmp
jo
stos
xchg
ja
adc
ja
sub
fbstp
inc
and
mov
test
push
cld
inc
lods
sub
xchg
rorl
lret
inc
mov
out
or
jg
and
ss
repnz
mov
call
cmp
pop
ds
inc
mov
mov
iret
dec
aaa
leave
int
fisttpll
ljmp
lcall
std
mov
test
imull
das
push
adc
mov
sbb
pop
movsb
cmp
jb
out
xlat
xchg
jg
sub
call
and
mov
mov
daa
test
push
inc
andb
ret
add
sub
dec
xor
cli
sbb
shll
stos
or
arpl
xchg
xchg
cmp
pop
pop
or
lds
mov
rcrb
scas
jbe
push
cmc
xor
or
xchg
mov
xchg
jb
test
in
cmpsl
and
and
or
mov
mov
push
inc
out
push
js
mov
sub
and
cmpl
inc
dec
cltd
inc
lods
or
pop
and
push
daa
test
ret
push
add
mov
push
fnstsw
push
or
movsb
mov
rsm
ror
ret
pop
and
dec
sbb
fstps
ja
add
data16
adc
out
push
aas
ja
pushf
js
push
or
testb
pushl
jle
rol
lea
pop
cmp
xchg
or
fnsave
inc
add
jp
and
lods
outsl
rcr
rolb
push
loope
scas
dec
movsb
add
popa
cmc
shlb
ja
rorb
xor
leave
movsb
filds
jnp
or
les
inc
mov
mov
push
subl
xchg
sub
push
sahf
mov
push
sub
add
scas
bound
stos
add
repz
subl
adc
dec
add
ds
dec
or
cmp
fbstp
jo
addb
cmpsb
xchg
movsl
push
and
out
idivl
and
std
mov
mov
jnp
cmp
mov
dec
add
arpl
push
je
pusha
mov
push
mov
dec
aad
cmc
aam
push
push
cs
adc
out
mov
popf
movsb
fisubrl
dec
notb
push
pushf
mov
mov
cltd
or
dec
xchg
mov
and
jp
test
cmpsl
imul
pop
lea
adc
lods
ljmp
fldenv
inc
hlt
std
cmp
in
push
out
lods
and
and
push
enter
fsts
jl
mov
insl
dec
jno
test
jp
xchg
push
rcrl
or
rcll
jecxz
push
das
and
movl
bswap
mov
ljmp
cmp
dec
int
jne
out
push
push
push
xor
mov
hlt
mov
xor
pop
jl
cli
mov
in
sub
xchg
sbb
push
enter
sub
xchg
fisubrl
mov
cmp
jae
or
jb
lret
pop
inc
dec
in
cmc
clc
add
pop
sti
mov
add
repz
test
sti
aas
dec
push
jmp
push
ljmp
shr
mov
lods
jmp
inc
inc
dec
pop
pop
adc
mov
sar
sbb
add
sub
out
jp
call
fnstsw
enter
sub
into
pop
mov
mov
dec
dec
fistpll
in
pop
scas
mov
xchg
adc
into
popa
inc
test
add
call
dec
inc
xor
mov
pop
scas
lock
addr16
flds
sub
in
cs
jo
pop
stc
add
rcrl
or
cmp
inc
rcll
mov
filds
outsb
rcll
and
mov
call
outsl
subl
push
je
cli
testl
xchg
test
pop
push
test
fisubs
dec
cmp
stos
xchg
fwait
mov
jo
xchg
pop
and
divl
push
repz
popf
add
les
rcrb
lret
std
mov
sub
sti
js
mov
mov
jle
jle
orl
loope
out
bound
push
pop
push
adc
mov
cmpsb
adc
rorl
ds
loope
cltd
mov
sub
mov
out
adc
mov
testb
fdiv
add
pop
push
jp
push
mov
into
arpl
adc
aaa
pusha
stos
ss
xor
std
popa
lcall
jno
add
aam
std
inc
jbe
lods
mov
push
push
mov
or
ret
xor
jg
enter
insl
mov
fwait
stos
or
scas
pop
adc
arpl
mov
inc
lods
lods
jmp
test
sub
shll
bound
call
in
jl
mov
xchg
pop
int
jns
dec
dec
jge
test
xor
popf
pop
repz
popl
mov
dec
data16
adc
push
cwtl
int3
in
je
adc
inc
pop
mov
jp
inc
fistl
repnz
mov
fldt
stos
cld
add
inc
scas
dec
xor
sbb
gs
push
dec
mov
int3
cmp
je
sub
bswap
add
das
cmp
mov
push
arpl
mov
mov
inc
sub
jbe
rcll
inc
push
orb
pushf
or
pusha
jnp
dec
add
filds
dec
pop
jp
push
push
pop
jae
jne
test
cs
jecxz
mov
loope
shr
adc
test
cld
lea
repnz
stos
xchg
iret
inc
and
add
rorb
icebp
test
push
mov
cwtl
mov
push
mov
mov
pushf
inc
bound
adc
jno
xchg
push
dec
cmp
add
push
subb
mov
ljmp
fimull
cmp
cld
cmp
push
repz
lds
cmp
lret
cmp
mov
adc
insl
or
ret
pop
mov
incl
mov
int
jb
inc
repz
xor
out
sub
out
and
add
fcomps
inc
sub
int
push
ret
jecxz
leave
sti
je
cwtl
cmp
inc
fidivrs
mov
fisubrs
push
aas
push
dec
xchg
test
jl
lods
and
xchg
sbb
pop
xor
loopne
or
pop
loopne
cmp
push
or
xlat
in
popa
adc
cmp
sbb
inc
imul
and
das
shrl
lods
ss
jge
mov
adc
jl
aas
dec
or
lds
icebp
xchg
pop
jne
xchg
outsl
fstp
call
sub
cmp
mov
popf
jle
pop
jns
push
mov
xchg
lcall
and
lcall
test
dec
jecxz
mov
outsb
in
in
nop
jmp
imul
mov
cmc
jne
pushf
jb
jo
in
adc
pop
enter
sbb
pusha
or
xor
jns
outsb
fldt
mov
ljmpw
mov
pop
pop
into
pop
inc
dec
sti
testb
mov
stos
in
and
and
imul
pop
mov
scas
cmp
ret
cmp
inc
out
loop
popa
pushf
xchg
rcrb
iret
ja
into
pusha
rorb
cmpsb
shll
xor
pop
sti
ds
mov
add
xbegin
adc
xchg
outsl
dec
mov
stos
or
and
push
mov
jno
out
adc
movsl
test
mov
popa
dec
ja
push
jbe
jno
cmp
gs
ja
divl
nop
les
inc
or
xchg
cwtl
divl
cmp
jp
rolb
or
int
lahf
rcrl
and
lret
mov
fnsave
shr
cltd
add
or
and
dec
je
jle
sub
mov
fnsave
inc
adc
mov
sbb
leave
sbb
add
movsb
ficoms
das
or
lret
leave
std
decl
dec
xchg
pop
or
pop
repnz
xor
fimull
aaa
adc
pop
aas
mov
jmp
stos
sub
leave
cs
jno
les
dec
pusha
xchg
sarl
inc
cltd
push
xor
cld
pop
dec
stos
inc
fists
sbb
int3
adc
in
push
mov
inc
ds
cwtl
jecxz
mov
xor
add
pop
roll
inc
lcall
add
and
push
mov
adc
ret
les
cmc
fmuls
sub
adc
dec
cld
daa
add
jl
fldt
xor
sub
into
movb
push
pop
sbb
mov
in
bound
sub
inc
or
inc
or
xchg
mov
adc
sbb
sbb
out
fwait
ljmp
jge
dec
lret
jl
mov
daa
mov
fsts
sub
out
pop
push
fucomp
cmp
and
fbstp
shl
or
adc
mov
and
cmp
js
mov
add
pop
and
mov
addr16
pop
sbb
flds
cmp
stos
lea
lea
mov
lods
lret
hlt
cmpsb
test
loope
and
mov
xor
pop
push
rol
dec
mov
push
mov
jnp
std
outsl
leave
add
in
sub
jbe
xchg
fs
or
movsl
in
sahf
adc
mov
mov
xchg
mov
iret
push
ret
push
sbb
movsb
stc
notl
sbb
jbe
loopne
in
shlb
ret
and
imul
sbb
mov
loope
sub
mov
and
fld
jecxz
add
int3
movsb
pushf
or
loope
inc
lret
arpl
nop
loopne
mov
into
jbe
pop
inc
adc
mov
inc
ljmp
ja,pt
leave
lods
gs
or
xchg
pop
dec
pop
and
lods
dec
xor
pop
std
inc
push
imul
std
or
cmp
dec
jo
notb
test
sbb
stos
fwait
or
mov
and
movsl
leave
jne
subb
outsl
pop
sahf
test
out
push
mov
jmp
fisubs
jge
lock
sbb
pusha
test
movsb
pop
push
adc
pop
lea
xchg
jmp
pop
inc
je
fmull
sub
cmp
add
insl
pop
jmp
pop
shrb
and
add
movsb
cli
out
popa
out
or
in
in
xchg
addr16
mov
out
sub
cli
adcb
addr16
mov
hlt
cwtl
sbb
cmovge
test
sub
int3
and
outsb
jecxz
ja
or
incb
lcall
dec
in
aas
dec
jnp
mov
push
mov
faddl
push
mov
xchg
push
imulb
fisubrl
xlat
xchg
pop
sub
adc
or
inc
jo
and
and
mov
or
dec
out
test
ret
fwait
outsb
sub
mov
sbb
cmc
decb
imul
and
imull
cli
dec
mov
sbb
xlat
sti
cmp
mov
hlt
cmc
insb
push
rclb
cmp
mov
add
sub
cmp
in
pop
cld
loopne
gs
and
ja
xchg
mov
add
repnz
pop
push
mov
jge
mov
lods
sub
std
pusha
cmp
enter
pop
dec
mov
sar
dec
outsl
cmp
lret
adc
aad
std
fiaddl
rorl
hlt
fcompl
fbld
add
lods
pop
cmp
sbb
cmpsl
inc
sbb
jmp
nop
or
pop
gs
sbb
popa
lcall
mov
daa
loope
push
cli
xchg
bound
jl
cmpsl
test
lods
dec
repz
test
call
sbb
and
repz
imul
fs
pop
xor
shrl
mov
jns
push
dec
jnp
and
sar
mov
or
out
std
sbb
loope,pt
and
fcoml
int3
popf
inc
out
hlt
and
pushf
in
xchg
xchg
push
stos
lds
shll
cmp
pop
xor
mov
mov
test
sbb
mov
mov
push
cmc
push
les
push
test
sub
push
jmp
testb
xchg
adc
xor
enter
xor
lahf
in
iret
rcrb
pop
inc
jp
jl
mov
sub
ret
jecxz
dec
pop
add
popl
aad
mov
shrb
adc
pop
mov
add
xchg
cmp
adc
test
jl
cmp
lret
aaa
lret
mov
jns
jg
dec
mov
mov
gs
push
pop
fidivs
dec
mov
mov
ds
pushf
pop
stc
ljmp
scas
mov
or
mov
test
sub
scas
or
add
cltd
xchg
inc
push
pop
lcall
int
jne
push
jns
and
pop
test
jno
mov
xchg
addl
popf
dec
xchg
shrb
xchg
mov
inc
int
push
sub
add
adc
dec
lods
xchg
or
xor
jmp
or
insb
cmpb
test
dec
or
inc
and
add
sbb
dec
push
jb
jb
fistpll
jns
rolb
sti
out
daa
xchg
sub
movl
xchg
xchg
xorl
cwtl
stc
clc
sub
xrelease
fsubl
sub
xchg
lods
imul
ja
or
jge
lds
int3
js
data16
adc
mov
int3
add
mov
les
adc
mov
push
push
out
js
lahf
mov
jbe
jne
sbb
das
mov
mov
push
hlt
lds
sub
aad
adc
mov
inc
ds
sub
add
xor
loopne
dec
xor
xor
data16
xchg
test
gs
out
stos
or
and
adc
sbb
push
adcl
dec
lods
popa
nop
adc
jnp
pop
adc
jne
aas
jns
sub
cli
mov
sti
enter
aas
test
cs
in
and
mov
xor
dec
lods
mov
adc
int3
movsb
out
xor
fidivs
mov
mov
sti
outsb
lea
adc
jae
adc
pop
push
push
push
iret
dec
ret
loope
fnsave
lcall
cmc
sti
into
out
add
jo
aaa
and
xor
fs
lret
data16
mov
mov
mov
pushf
movsl
xchg
movsl
mov
fucomp
in
sti
loope
hlt
or
scas
leave
lds
test
or
cmp
shll
sub
or
inc
mov
inc
lock
xchg
cmpb
xchg
or
adc
and
cwtl
das
or
in
insl
fisttpll
mov
dec
cmp
lods
cwtl
xchg
jge
leave
lahf
jnp
add
fisttps
or
push
xchg
dec
int
arpl
xchg
xor
sub
mov
pop
push
xchg
dec
xor
jno
push
out
outsl
jg
pop
test
mov
mov
or
push
movb
subl
pop
cmp
xchg
cli
aaa
mov
fwait
lret
sbb
je
aaa
mov
sbb
inc
pop
adc
into
mov
push
test
jae
dec
push
scas
pop
ja
dec
fs
xchg
dec
pop
insb
pop
mov
movsb
in
out
jnp
lods
clc
jp
cld
test
pushf
data16
mov
jg
arpl
mov
roll
adc
in
fstpt
sahf
push
ljmp
and
mov
imul
mov
nop
adc
int
lds
dec
sbb
loope
in
je
xlat
icebp
push
test
jo
mov
stos
cmc
fmuls
add
cmp
cli
pop
rcrb
cmpsb
pop
fdivrs
mov
ret
push
sub
mov
jl
in
xor
enter
andb
xchg
div
iret
push
outsb
pop
lods
cmp
std
sti
loopne
jae
imul
icebp
mov
insb
xor
mov
jns
mov
jno
mov
push
xchg
pop
mov
nop
fisttpl
sbb
bound
pop
adc
jg
xlat
sub
add
or
aad
aas
jae
or
in
xchg
ds
ljmp
ret
pusha
and
xor
aad
das
mov
pop
pop
jns
cmp
fs
das
push
ljmp
icebp
imul
lret
aam
and
mov
cwtl
add
je
xchg
or
frstor
jecxz
mov
pop
xlat
out
enter
cmp
xor
xor
sub
pop
xor
call
jo
cmp
fidivl
lahf
cmp
cwtl
push
shl
mov
push
pop
sub
adc
jp
and
jnp
pop
arpl
out
add
dec
pop
pusha
testl
lods
mov
adc
lock
nop
mov
pop
jnp
cmp
test
and
add
push
leave
pop
jle
fnstsw
or
imulb
push
inc
cmpsb
mov
inc
ss
add
rorl
add
dec
jo
mov
push
mov
cmp
sub
push
nop
inc
jmp
inc
jns
repnz
push
incl
mov
sbb
mov
fwait
ljmp
adc
test
and
push
lret
fs
and
cmc
test
in
inc
loope
and
popa
mov
adc
inc
lret
jmp
cmp
test
dec
sub
push
fnsave
xor
mov
shlb
or
in
push
push
mov
or
and
inc
push
pop
push
test
lret
shll
lock
scas
daa
xchg
or
mov
add
div
mov
cltd
adc
lods
les
jecxz
or
stos
ja
loope
test
push
movsl
sub
loope
inc
or
or
and
fisubrs
sbbb
xchg
out
xor
movsl
xchg
imull
dec
lret
outsl
mov
pop
xchg
movsb
and
adc
clc
mov
xchg
clc
mov
inc
test
rolb
adc
xchg
ret
leave
mov
pop
mov
stos
shlb
in
sti
aam
cmp
stos
xor
sub
jmp
pop
dec
out
cmp
dec
pop
pop
xorl
movsl
inc
cmp
push
jnp
lret
mov
jge
loope
add
mov
ret
imulb
xchg
xlat
stos
jle
aaa
fists
bound
inc
in
pop
ss
sarl
cld
ja
shl
and
jmp
and
dec
rcrl
pushf
mov
and
loop
mov
push
arpl
and
data16
imul
jecxz
in
mov
xor
stc
mov
ljmp
fs
push
pop
mull
lods
in
mov
pop
sbb
rcrl
imul
clc
sbb
mov
imul
cmp
pushf
inc
push
jl
mov
divl
imul
cmp
in
ja
xchg
push
xchg
out
xlat
js
fistpl
adc
dec
inc
pmuludq
jno
cmp
or
fdivrs
fsubp
xor
push
and
sbb
fcmovne
ljmp
dec
mov
icebp
or
xlat
test
cmpsl
lahf
inc
insb
dec
sub
fdivl
cld
mov
mov
mov
lods
std
cmp
movsl
push
in
pushf
dec
lea
jbe
pop
push
fdivs
movsl
test
jbe
adc
push
jecxz
xor
movsb
bound
insl
flds
cmpsl
add
cwtl
mov
in
sub
in
mov
add
or
and
push
fiadds
cli
inc
in
mov
pop
movsb
sub
cs
adc
arpl
sub
mov
dec
push
les
pop
lret
xchg
lcall
cwtl
push
push
popf
xchg
mov
xor
jecxz
and
xchg
xchg
testl
test
aas
popa
push
ds
cmp
pop
and
inc
jmp
and
push
pop
xchg
das
mov
mov
mov
push
xchg
xor
scas
sbb
andb
mov
loope
movsb
out
cmp
shrl
inc
das
fsubr
dec
stos
and
test
imul
mov
test
xor
lods
sub
scas
add
mov
cltd
mov
clc
xor
sbb
js
outsl
lods
inc
dec
lret
dec
jle
insb
cmp
xlat
push
mov
dec
orl
loop
popf
jo,pn
add
outsb
sbb
testl
sbb
fbld
dec
icebp
into
cli
xchg
xchg
subl
cmp
and
sahf
les
cmpsl
pop
imul
mov
cltd
testl
scas
jge
xchg
scas
negb
pop
pop
add
pop
cmp
xchg
push
cwtl
inc
rcrl
les
ds
iret
pop
loop
jbe
cwtl
inc
pop
cli
out
pop
xchg
mov
loop
pop
pop
push
or
dec
test
jg
ficomps
jge
add
repz
mov
cmp
push
shrb
add
dec
cli
add
xchg
xchg
aad
insl
das
lahf
movsb
ret
lcall
push
out
aaa
mov
xor
mov
xor
xor
xor
fwait
push
cmp
mov
insl
and
sbb
inc
and
sub
xchg
ret
dec
or
xor
imul
fldl
sub
jbe
and
xchg
xchg
dec
leave
repz
das
pop
jp
sbb
adc
cmp
fstps
ret
movsl
in
pop
inc
lock
insb
pop
fwait
add
outsb
push
dec
loop
and
xchg
cmp
insl
hlt
int3
pop
dec
das
aam
aaa
aad
pop
in
dec
pop
aad
repz
pop
out
mov
lock
mov
push
rcr
dec
pop
inc
dec
stc
cmp
push
adc
js
jp
gs
mov
in
fcoml
xor
out
or
ljmp
cmpsb
adc
lods
andl
jmp
pop
mov
rorl
ss
mov
cli
mov
repnz
mov
stos
pop
enter
in
adc
popf
inc
aas
rep
pop
pop
mov
pusha
mov
jl
mov
in
push
push
mov
adc
and
jmp
sbb
rcrl
push
mov
inc
sahf
mov
icebp
add
add
push
xor
stc
pop
mov
jae
cmpsb
push
mov
sbb
push
incb
jno
mov
daa
push
test
sub
jl
cmp
mov
leave
inc
inc
xchg
jbe
or
ss
push
popa
jmp
jb
cmpsb
movsb
pop
dec
mov
mov
push
pop
mov
xchg
dec
dec
enter
stos
lahf
mov
and
out
loopne
fildl
pop
or
lods
inc
cld
add
ret
movntq
push
daa
arpl
pop
jo
xor
lock
dec
lret
fs
push
testb
enter
and
leave
insl
add
cmp
mov
bound
dec
lret
loope
scas
js
in
inc
or
sbb
push
adc
jg
iret
es
insl
mov
loopne
xchg
outsl
sbb
jp
adc
mov
out
lcall
movsb
js
pop
cltd
xorl
sub
and
lahf
daa
dec
and
addb
ss
mov
jne
mov
xor
mov
lret
insl
cmc
adc
fwait
pop
sub
push
shr
imul
xor
cmp
js
cmpsl
mov
jb
fsubrs
mov
dec
xor
cld
cli
fistpll
icebp
hlt
push
sbb
push
cli
movsb
lcall
xorb
fwait
das
lret
aam
mov
jl
sbb
push
mov
cmpl
cmp
in
lret
add
mov
in
sarl
filds
cmp
outsl
mov
shr
sub
mov
dec
int3
jecxz
mov
push
xor
adc
adc
pop
mov
xor
cmp
stc
je
jnp
sub
cs
insb
mov
inc
fcoms
push
xchg
mov
push
dec
xchg
in
inc
push
push
aad
push
mov
mov
adc
xlat
pusha
cmp
add
loopne
push
fcompl
add
in
inc
lcall
mov
push
js
scas
cmpsl
mov
rol
xor
pusha
mov
xchg
dec
pop
es
and
test
cwtl
cmp
push
xchg
sub
mov
sub
mov
ja
scas
fwait
mov
lahf
add
pop
popa
lods
callw
xor
enter
push
addr16
mov
flds
push
leave
inc
lcall
loop
sub
add
cmc
or
int
sub
cmpsb
arpl
sub
mov
push
sbb
cmp
push
outsb
jp
call
repz
sbb
sarb
mov
cld
frstor
and
pop
sbb
aas
aas
push
negl
out
fwait
pop
xchg
ret
mov
pop
pop
leave
mov
out
dec
test
dec
cmp
mov
mov
fidivrl
push
mov
pop
lcall
lret
hlt
or
clc
pushf
add
arpl
sub
leave
push
lea
movb
popf
push
add
bndldx
movsb
jp
mov
dec
cltd
sub
sbb
insl
stos
add
adc
mov
xor
fwait
or
mov
push
and
daa
inc
push
inc
ret
sahf
aad
jmp
icebp
xor
mov
cmpsb
cmp
push
movsl
loop
inc
scas
sbb
in
aad
repnz
lahf
or
dec
add
jl
pop
xor
mov
out
out
test
shrb
outsl
repz
sbb
and
lds
pop
mov
js
loopne
adc
cltd
in
push
jns
ljmp
sub
adc
push
movsb
ret
mov
outsl
testl
aam
inc
leave
fimuls
das
je
push
mov
xlat
cwtl
xchg
mov
mov
pop
test
jnp
push
mov
sbb
mov
mov
inc
loope
add
stos
insb
divb
into
jno
insb
push
sub
ds
and
call
xor
rolb
ja
adc
into
sub
mov
mov
ficoml
mov
and
xchg
test
cmpb
aad
loopne
mov
push
cmp
mov
lahf
out
mov
jne
sub
cld
test
test
pop
pop
adc
dec
imul
lret
test
xchg
nop
sbb
jge
cmp
aad
pop
je
mov
nop
sub
and
inc
jbe
pop
or
fisttps
sbb
mov
scas
inc
hlt
mov
pusha
pop
cmpb
mov
xor
jno
mov
lret
lods
popf
mov
lcall
xchg
xchg
jmp
sbb
dec
xor
push
sbb
or
push
adc
enter
jl
fldcw
or
stos
jnp
popf
mov
cltd
pop
mov
jbe
in
jecxz
or
add
fnsave
clc
add
pop
aas
sbb
bound
push
imul
push
cmp
in
pop
gs
in
xchg
clc
scas
into
dec
pop
testl
or
fucomp
xor
adc
ss
call
inc
jb
daa
pop
adc
pop
adc
bound
repz
lahf
insl
jle
scas
loope
sahf
or
or
ljmp
mov
adc
popf
mov
shlb
sbb
sub
rorl
cmp
call
pop
imul
lea
scas
mov
stc
xchg
cmp
sarb
pop
xchg
mov
mov
or
pop
xchg
jae
shrl
roll
add
push
xchg
cltd
mov
aas
out
loop
inc
in
mov
cli
inc
mov
add
xor
lods
push
jmp
daa
xchg
inc
clc
scas
jae
pop
test
jp
das
pushf
cli
pop
xchg
sahf
lret
pop
les
push
stc
lret
test
xchg
xor
lahf
add
jecxz
fwait
test
roll
sti
cmp
jb
outsl
stos
lds
arpl
and
or
add
adc
int3
cmp
cmp
dec
stos
idivl
fdivrs
movsl
adc
add
mov
inc
cmp
pop
or
mov
fcoms
mov
into
out
sbb
out
sbb
jmp
lods
xchg
scas
mov
lcall
xor
cs
cmp
push
lds
out
push
jle
addr16
int3
xor
mov
dec
mov
dec
jl
mov
addr16
add
sub
dec
cli
or
xchg
push
hlt
xor
cmp
jmp
faddl
or
and
add
pop
shl
fwait
inc
sub
cwtl
sbb
cmp
movsl
int
rcrb
inc
and
outsb
and
imul
xchg
enter
repnz
inc
jnp
or
hlt
scas
dec
mov
mov
push
test
lcall
push
dec
pop
push
insb
mov
inc
pushf
pop
out
out
sub
add
loope
mov
sti
push
sub
test
and
xchg
fdivl
adc
adc
fistpll
sbb
push
mov
ds
mov
pop
pop
sbb
sbb
adc
daa
outsb
repz
xor
sti
ret
push
push
pop
cmp
sub
inc
jmp
fwait
lea
pusha
ret
dec
jecxz
dec
pop
shlb
xor
cmc
jbe
shrb
shl
mov
xchg
rcrb
ja
or
cmpsb
pop
xchg
mov
subl
add
repz
jg
daa
scas
jp
adc
mov
and
in
rorl
lcall
sub
shll
fcmovne
cmpsl
test
and
jge
leave
hlt
dec
loope
js
jno
jae
cmp
jb
dec
xchg
xchg
push
pop
hlt
dec
lahf
push
sahf
cli
aad
repnz
mov
or
cmp
ret
sbbb
rorb
adc
out
iret
fldpi
jg
sbb
mov
or
aad
flds
fdivrs
sbb
sub
call
push
test
xor
pop
mov
loope
or
scas
cli
insb
insl
pop
jb
pushf
pusha
leave
jns
fs
repnz
iret
aad
hlt
mov
repz
lret
gs
dec
aad
insb
xor
arpl
scas
push
je
push
adc
rep
xchg
and
dec
jge
hlt
daa
sbb
cli
add
ret
test
div
mov
mov
push
inc
int
bound
sti
inc
test
sbb
arpl
out
and
push
and
xchg
pop
loop
xor
jp
ret
nop
and
add
gs
out
push
and
or
mov
or
push
movsb
fld
sbb
xchg
inc
pushf
mov
sub
imul
mov
dec
or
cmp
into
pop
mov
es
or
sar
mov
jne
imul
dec
add
inc
repnz
or
inc
dec
enter
loope
sub
inc
adc
stc
inc
jnp
sti
cli
push
repz
dec
xchg
lret
outsl
addb
inc
sbb
movsb
stos
or
shrl
inc
and
and
sahf
xorl
mov
repnz
sbb
cmp
int3
loopne
sub
mov
je
mov
out
cli
popa
clc
or
popf
sti
in
in
fwait
sti
mov
outsb
mov
cmp
clc
or
ret
or
push
mov
int
sahf
push
xor
sub
mov
test
or
or
mov
lcall
mov
mov
test
ud1
test
ret
sbbl
dec
adc
addr16
add
stc
dec
and
push
int
inc
das
add
aad
adc
ret
sub
lahf
dec
ficoml
icebp
xlat
and
xor
in
push
std
cmp
dec
imul
jge
add
adc
daa
std
lods
ret
push
es
jmp
aad
call
cmp
loopne
shlb
out
mov
pop
cmpsb
lahf
ljmp
test
pop
xchg
or
cltd
mov
dec
mov
push
inc
inc
jae
sbb
pop
inc
or
fldenv
aad
js
xor
sarb
inc
cmpsb
mov
sub
mov
sbb
bound
and
fwait
mov
xchg
mov
dec
std
sbb
es
outsb
dec
jnp
inc
dec
or
stos
adc
mov
sbb
aaa
fdivl
add
fmull
movsl
bound
cmpsb
dec
rorb
mov
test
push
sub
ljmp
inc
test
dec
xorl
sub
dec
push
lea
enter
jle
xor
hlt
cmp
xor
sbb
insb
imull
lods
and
sbb
lds
inc
std
jmp
adc
inc
cli
pop
data16
aam
and
cmp
sbb
sub
out
sub
sub
xchg
adc
pop
push
fcmovnbe
mov
loope
sahf
loop
daa
jo
push
movsl
aam
out
jns
xor
cmpsb
mov
adc
xchg
cwtl
mov
ss
jmp
call
pop
sarb
leave
cs
call
mov
icebp
std
call
adc
out
je
in
sbb
test
add
cmpsl
xchg
imul
lock
pop
leave
pop
pop
jecxz
or
mov
xlat
bound
or
jbe
dec
xor
and
cli
dec
mov
mov
mov
test
notl
out
jmp
test
fwait
sbb
fcomps
dec
cmp
adc
andb
pop
imul
mov
cmpl
push
jmp
or
js
movsb
or
pop
rolb
andb
cwtl
jo
dec
cmp
icebp
popf
pop
mov
sub
push
repnz
pusha
aaa
scas
jecxz
shll
rcrb
jb
fcoml
push
das
sub
mov
test
xchg
fcmovbe
push
in
jl
mov
and
daa
xchg
shrb
pop
fildll
lea
add
jns
ss
scas
lret
outsb
inc
lea
aad
cltd
inc
sbb
addw
shrb
jp
mov
ret
cltd
out
push
jle
sbb
test
push
daa
stos
out
rorb
test
pop
ja
mov
adc
divl
inc
hlt
popf
push
adc
lods
cmpsb
jbe
xor
mov
xor
dec
push
and
mov
mov
and
and
mov
pushf
push
pop
jmp
nop
push
dec
mov
inc
or
and
sbb
or
jge
dec
mov
xchg
popa
dec
sbbl
das
arpl
push
mov
adc
jp
sti
lods
nop
push
cmp
das
mov
or
icebp
jb
pop
in
jecxz
push
lret
jbe
data16
cltd
loopne
pop
ja
outsb
xchg
in
xorl
in
ret
mov
test
int3
jp
push
inc
insl
jp,pt
scas
and
repz
nop
cmovb
scas
cmp
jo
int
imul
jmp
stos
mov
mov
mov
enter
mov
push
inc
push
jle
or
ljmp
lret
jle
sahf
or
test
adc
insb
xorb
incb
lahf
cmpsl
mov
loope
cmp
dec
jmp
mov
cld
push
iret
fisttps
cmp
aam
es
imul
sub
xor
and
cmp
stos
inc
sbb
push
mov
movsb
data16
in
push
jo
cwtl
icebp
ret
adc
jnp
cmp
pop
in
cmpsb
sti
aam
mov
dec
rcl
jg
cmp
andl
stos
rcr
cld
out
int3
mov
arpl
mov
jl
push
jmp
dec
cmpsl
test
dec
jns
pop
or
outsl
in
and
cwtl
sbb
cli
sub
lock
fidivrl
push
jmp
in
push
scas
lret
std
adc
cmp
sub
test
xchg
lret
cmpl
xor
sub
sbb
inc
test
ret
aaa
pop
or
mov
dec
add
xchg
ss
fisubl
ja
add
mov
sbb
mov
push
adc
mov
dec
mov
push
clc
push
mov
stos
gs
inc
aam
into
loope
and
mov
popf
cmc
in
dec
insl
pop
aam
xchg
andb
pop
dec
movb
or
pop
pushf
xor
push
into
pushf
sub
in
xchg
fcmovbe
data16
push
hlt
je
test
xchg
mov
outsb
mov
sbb
mov
lock
and
insb
mov
mov
jmp
outsb
xor
dec
in
mov
shrl
sbb
xor
fwait
mov
sarb
cltd
dec
loope
das
outsl
or
push
mov
pop
in
push
cmp
sub
fldenv
stos
lahf
xchg
sti
sub
xchg
fwait
xor
int3
leave
les
aad
stc
in
hlt
lea
pop
in
inc
mov
jg
int3
loopne
jecxz
fimuls
push
popf
pop
dec
inc
push
cmpsb
jle
push
nop
aas
mov
inc
bound
or
lea
pop
mov
lds
fimull
out
sbb
orl
adc
dec
cld
nop
jae
fisubs
push
imul
repnz
or
test
out
lods
xchg
mov
jns
stos
data16
xor
clc
mov
adc
mov
cmp
loop
ljmp
jnp
cmp
and
dec
movsb
shlb
jge
xor
mov
and
sbb
fwait
jle
adc
inc
xor
mov
xchg
pop
add
rol
aam
mov
xor
sarb
rdmsr
cld
add
sub
mov
stos
bound
lods
lret
js
imul
jns
adc
adc
push
jecxz
jo
imul
stos
dec
es
pop
push
mov
fistps
push
dec
inc
test
loop
pusha
inc
jo,pt
fimull
ds
std
lret
lods
jmp
dec
std
or
jmp
sub
inc
cld
mov
gs
jno
idivl
push
xchg
or
push
mov
mov
and
shrb
fildl
dec
add
daa
daa
xchg
orl
loopne
mov
into
dec
mov
icebp
push
imul
fildl
push
pop
cmp
inc
les
mov
ja
pop
enter
es
sub
cmp
cmp
xor
mov
fs
movsl
or
sbb
inc
cmp
add
ljmp
or
dec
dec
insb
subl
test
dec
or
xchg
adc
cmp
popf
icebp
repnz
push
xor
mov
inc
sub
pushl
mov
mov
fldcw
fisubs
sub
inc
and
fisttpl
mov
mov
test
imul
inc
lret
push
fimuls
stos
into
shl
les
mov
fidivrs
xchg
ds
fildl
inc
dec
hlt
fiaddl
lock
std
or
pop
push
aaa
mov
rcrb
mov
adc
dec
in
cmc
into
mov
push
mov
nop
inc
outsb
lods
lods
les
cmp
gs
call
pop
mov
adc
mov
aad
fdivrp
add
pop
jmp
nop
cmpsb
popf
mov
pop
rcrb
jge
aas
fmul
pop
add
push
mov
test
push
jmp
pop
sub
fnstsw
sub
xchg
les
stos
add
nop
sub
pop
dec
imul
scas
and
cmp
adc
movsb
push
je
shlb
cltd
cmp
aad
incb
fadds
jne
cmpsl
xor
pop
adc
scas
xor
cltd
mov
mov
lret
and
xchg
fstpt
in
fnstcw
mov
scas
mov
push
lret
or
pop
test
and
and
dec
jae
jnp
cmp
mov
dec
punpckhwd
sahf
loope
iret
adc
sub
orb
and
mov
xor
push
add
xchg
push
cltd
jmp
cwtl
popa
mov
shrl
sub
push
cmp
sub
and
sub
test
dec
inc
test
sub
xor
outsl
push
push
lods
adc
or
jg
insb
cmp
mov
lods
mulb
adc
aas
or
xlat
and
xor
mov
das
shrl
stc
dec
mov
cmp
and
cmp
dec
je
pop
shll
stos
jo
test
add
bound
push
mov
pop
dec
movsb
pop
mov
and
push
cmp
cmpsb
push
add
inc
cmp
dec
inc
xor
dec
and
xor
cld
stos
and
fstl
pop
fsts
push
ret
jecxz
jne
sbb
dec
push
out
sbb
jmp
cmp
cld
lret
add
mov
mov
dec
clc
mov
out
cmp
adc
mov
out
sbb
or
mov
xchg
pushf
inc
les
rolb
mov
pop
dec
cli
mov
jo
sbb
xchg
adc
add
mov
ret
sub
int3
jle
daa
dec
lret
insl
lahf
or
movsb
mull
mov
sbb
sbbl
jge
es
pop
addr16
out
cwtl
sub
subb
cli
cld
imul
jg
push
mov
fwait
sbb
push
enter
test
cltd
adc
aad
pop
xor
into
cltd
es
mov
or
sbb
jo
jo
push
in
test
into
fisttps
xchg
ljmp
das
sub
loope
rcll
or
nop
xor
aad
fidivs
test
mov
and
mov
out
cmp
sbb
push
cld
or
xchg
xor
scas
andb
stos
add
sti
loop
add
jno
xchg
test
or
cs
std
mov
sbb
pushf
in
stc
sbb
adc
push
jnp
pop
divb
leave
shl
jns
test
cmovb
gs
or
xor
mov
faddp
mov
mov
fldl
je
data16
mov
cmp
fbld
jmp
hlt
adc
test
cmp
cs
inc
dec
cmp
xor
sbb
lock
imul
inc
sub
leave
notb
jne
inc
ds
fiaddl
rcr
imul
mov
ret
mov
sub
push
lods
pop
or
adc
imul
mov
repnz
div
jg
inc
pop
jns
hlt
ljmp
mov
repz
lret
das
pop
mov
cld
jo
pop
int
pop
ss
test
push
mov
add
or
andl
and
sub
daa
call
or
lods
pop
je
mov
cmp
loope
les
mov
xchg
iret
xlat
jg
mov
xor
jp
testl
push
ljmp
lret
aad
notl
dec
push
mov
mov
out
mov
pop
mov
jge
adc
pop
push
mov
int3
push
mov
into
dec
pop
roll
xchg
xchg
xchg
pushf
mov
fnstenv
inc
dec
enter
mov
movsl
inc
or
ficomps
jb
shrl
js
push
aaa
loope
jns
pop
sbb
inc
sbb
cmp
sbb
add
sub
cmp
lds
nop
or
aas
dec
call
aaa
cmp
gs
mov
rol
add
sub
clc
cmpsb
ss
hlt
or
imulb
pop
frstor
cmp
jno
mov
lret
adc
pop
sahf
stc
dec
adc
clc
push
jo
xchg
jne
mov
push
adc
mov
movsl
xchg
add
movsl
pop
pop
loop
xchg
fists
arpl
pop
popa
loopne
pop
adc
mov
insb
call
pop
fwait
xor
movsb
jg
rcr
push
adc
push
inc
cmc
adc
mov
dec
pop
jl
out
in
bound
into
or
xlat
insl
xchg
cmp
outsb
fwait
sub
or
cs
or
imul
inc
add
fnstsw
nop
lock
sbb
inc
mov
sub
call
xchg
aas
ds
xor
jno
out
inc
mov
sbb
loope
jmp
cs
scas
push
lret
cmp
imul
cmp
add
cs
pop
popa
sbb
and
dec
xor
push
std
lock
and
sbb
mov
rcrb
sub
es
lods
push
mov
jne
jecxz
and
or
ret
pop
inc
mov
jbe
popf
and
sbb
pusha
aas
or
repnz
scas
cmpsb
cwtl
dec
dec
push
sub
pushf
out
add
push
lcall
sbb
outsl
call
out
jl
notl
shll
std
sbb
sahf
hlt
dec
adc
cmp
vfmsubaddpd
mov
dec
pushf
sahf
leave
vpaddusw
lahf
mov
jp
mov
inc
shrl
fwait
mov
sbb
lret
js
or
call
mov
mov
lds
and
sbb
fsub
js
or
fcomp
mulb
fisttpll
ss
inc
fstpt
xchg
dec
cmp
xor
jge
lcall
or
shll
enter
bound
in
lods
push
ret
int
adc
mov
sbb
inc
xchg
js
mov
xchg
jbe
pop
icebp
je
cltd
jne
ret
outsb
sbb
mov
lods
mov
stos
sbb
xchg
xor
xorl
mov
leave
sub
lret
stc
and
clc
lret
adc
mov
cmp
inc
add
mov
pop
sahf
inc
jecxz
ds
stos
fnsave
push
out
inc
callw
stos
jno
int
and
pop
cli
mov
mov
or
jno
sbbl
mov
fistl
je
repnz
xor
scas
fs
cltd
sub
repnz
hlt
lds
shlb
jo
out
dec
push
repnz
mov
pop
loop
inc
mov
jae
jl
negb
popf
pop
mov
xchg
pusha
or
sub
jp
sub
mov
js
fwait
repz
lret
sysret
jmp
pop
and
out
add
data16
push
arpl
mov
aam
jb
pop
mov
jne
or
pop
in
inc
xor
and
pop
addl
repz
xchg
jecxz
in
es
xlat
adc
jmp
push
jmp
lcall
nop
scas
in
je
aam
aad
jg
das
pusha
mov
adc
out
mov
dec
xchg
pop
je
mov
jns
cltd
sub
xor
jle
cmpsb
test
or
xor
push
dec
pusha
mov
into
jge
ds
inc
fimull
xchg
xchg
adc
mov
out
ret
pop
call
jmp
mov
or
fs
imul
xor
test
arpl
dec
leave
int3
dec
push
jnp
mov
inc
mov
inc
lock
cltd
sbb
enter
and
dec
lahf
cltd
mov
hlt
lock
fidivs
mov
rorb
repnz
dec
int
dec
cmp
lcall
subb
shrl
jg
fprem
xor
lock
clc
sbb
jno
and
mov
xor
jge
rcll
mov
incl
fildll
xchg
mov
scas
pusha
aaa
xor
scas
movsl
add
sub
mov
rclb
sti
movsl
adc
scas
fadd
pop
test
sbb
lock
pop
and
rclb
lock
lds
frstor
push
mov
ja
aam
jp
and
dec
xor
xchg
lret
out
inc
cmp
gs
loop
pop
aad
sbb
hlt
mov
cmpb
sbb
mov
mov
cmp
les
pop
dec
jge
xlat
mov
in
dec
push
or
mov
pop
jp
call
or
pop
test
mov
adc
test
jp
mov
sub
adc
jbe
lahf
xchg
jb
push
add
jge
push
sub
add
lcall
mov
in
js
ja
add
test
jp
pop
mov
cmp
inc
shl
and
ja
in
jmp
push
or
add
and
lcall
aam
mov
cwtl
dec
mov
mov
sbb
xchg
sub
xchg
mov
push
int3
gs
call
lret
jno
cmpsb
test
int
xchg
aaa
les
push
loop
fildl
aad
or
push
frstor
push
add
xchg
mov
xchg
test
daa
imul
rorb
aas
idivl
test
inc
xor
ficomps
add
cltd
in
in
lds
leave
cmpsb
adc
out
mov
add
loopne
ucomiss
adc
push
inc
inc
push
leave
loope
xor
popa
fimull
sbb
sub
push
ljmp
mov
xchg
cmp
inc
mulb
loop
aas
adc
xchg
xlat
sbb
xchg
mov
xchg
sbb
test
mov
lcall
cmpl
mov
mov
notl
cmp
lods
cmp
jo
loopne
loop
add
sbbl
and
enter
sbb
shll
ss
sbb
push
outsl
ds
push
and
fsubs
fnstcw
push
dec
cltd
ret
and
adc
lock
faddp
mov
lret
outsl
inc
lock
mov
pop
adc
notb
int
arpl
add
out
incb
mov
scas
xor
jl
lds
mov
or
pop
cld
repnz
xchg
cmc
pop
jnp
fidivrs
call
test
inc
mov
je
dec
es
int
add
je
stos
sbb
fadds
mov
push
addr16
filds
leave
pop
mov
sarl
push
mov
enter
std
pop
fyl2xp1
inc
push
ficoms
push
jb
lret
jmp
cmp
les
test
mov
and
sbb
out
dec
ret
jo
or
mov
and
test
mov
jmp
sub
jp
pop
in
rcrb
loopne
mov
sti
jle
ljmp
cltd
push
mov
sbbl
rolb
sahf
enter
shl
inc
call
movsl
sbb
push
jl
push
daa
sbb
and
mov
pop
idivb
jbe
mov
ja
push
adc
out
xchg
push
mov
mov
adcb
iret
fcompl
cli
cmp
mov
clc
add
cmp
leave
cwtl
pop
push
out
push
pop
push
cmp
fbld
arpl
jmp
lock
lcall
mulb
dec
outsb
push
xchg
inc
fcoms
aas
jmp
mov
sbb
aad
mov
inc
xchg
ror
mov
cmp
lea
fcomps
fs
xor
out
sahf
or
add
and
jb
test
pop
fisubs
lret
insl
xor
rorb
add
pop
or
ss
add
aam
lcall
int3
sbb
xchg
std
sub
je
add
mov
mov
test
je
es
or
sbb
aad
dec
les
cmp
or
in
in
rcr
scas
mov
sub
test
dec
stos
lcall
sbb
arpl
add
popf
jge
mov
push
xchg
nop
pusha
data16
mov
jmp
sbb
push
push
in
cmpsb
mov
adc
mov
pop
pusha
jp
pop
cs
dec
insl
xchg
int
xchg
push
ret
sub
dec
mov
sub
jo
jo
popf
fstpt
popf
sub
pop
dec
add
mov
xor
dec
scas
mov
ss
sbb
cmpxchg
fmuls
jns
mov
cltd
repz
mov
repz
mov
out
pop
jp
pop
cli
pop
mov
push
lea
or
and
mov
rcll
xchg
div
jecxz
jecxz
rolb
das
jne
dec
jle
mov
mov
int3
aaa
mov
sbb
mov
xor
cltd
std
push
cmc
pop
fwait
push
stos
aas
leave
clc
inc
add
jg
lods
push
add
es
shr
addr16
fdivrl
dec
out
fwait
int
std
xor
push
mov
jb
xchg
clc
enter
pushf
push
sti
test
mov
xor
mov
add
cmp
ds
adc
or
shrl
jecxz
xchg
sub
mov
pop
mov
ljmp
sbb
mov
or
mov
stos
push
xorb
pushf
jbe
out
popf
test
mov
xor
ss
xor
sti
cmp
in
sub
mov
cmp
in
outsb
inc
std
pop
cmp
rcr
jmp
inc
or
pop
xlat
cmc
xchg
cwtl
mov
jbe
adc
sahf
adc
push
adc
xchg
or
lahf
push
push
in
pop
jmp
mov
in
push
jae
pushl
add
jge
sub
jle
scas
inc
int
rclb
je
aaa
sbb
push
movd
lods
negl
fisubl
or
push
push
and
push
negb
dec
rorb
scas
xchg
xchg
xor
insb
xchg
mull
testl
mov
push
and
sbb
fwait
das
xchg
repz
rcpps
mov
in
mov
jg
popf
daa
mov
out
bound
mov
jns
push
outsb
dec
adcb
pop
imul
and
les
pop
push
sub
mov
insb
imul
lret
push
cwtl
xchg
clc
mov
mov
lods
add
rclb
test
repnz
repnz
mov
pusha
or
scas
jo
ss
insb
add
sbb
xor
dec
mov
in
rorb
in
inc
cmpb
or
scas
jb
stc
jle
imul
push
mov
addr16
cmpsl
push
adc
arpl
add
cmp
es
pop
dec
cmp
in
cmp
pop
mov
jle
psubd
push
es
jns
jb
popf
cwtl
test
mov
outsb
mov
sti
adc
lds
adc
pop
fisubl
push
popa
add
xor
add
lods
daa
test
lods
jmp
push
adc
xchg
iret
add
and
sub
movsb
push
cmp
ficoml
lods
stc
leave
outsb
mov
movsl
sub
js
jg
mov
out
adc
adc
mov
sub
sub
cmpsb
xor
insb
enter
out
test
xchg
xchg
loopne
lret
sbb
xchg
jp
outsl
imul
jl
ljmp
leave
iret
mov
push
pop
cwtl
xchg
fwait
sub
lock
cmpsl
add
add
jo
cmpsb
sub
xchg
pop
push
test
fldcw
push
cmp
xchg
adc
push
popf
dec
or
cmc
sub
mov
jmp
ja
pop
in
push
dec
mov
lret
test
add
push
nop
fs
jle
loop
add
sbb
cli
stos
popf
jecxz
test
clc
pop
inc
jo
int
in
xchg
jae
push
icebp
pushf
mov
fisttps
sub
dec
lods
test
and
shr
iret
stos
push
leave
movsl
sahf
js
sahf
in
mov
scas
leave
cmp
adc
mov
mov
iret
sbb
ljmp
mov
xchg
dec
xchg
jle
dec
out
dec
cmc
cmp
repnz
jno
into
lcall
scas
test
data16
lret
test
addr16
inc
push
enter
hlt
aad
push
xchg
adc
lret
xlat
lods
inc
xchg
stos
mov
inc
jno
adc
movsb
cmp
test
push
das
andb
andb
cmp
sbbl
ljmp
cmpsl
dec
jge
aaa
push
out
cmp
movsb
fldt
push
montmul
cmpsb
inc
mov
push
int3
icebp
ja
popf
jno
mov
nop
pop
pop
cmp
in
loopne
sub
gs
jg
push
dec
sahf
sbb
push
fnstsw
fisttps
and
mov
outsb
jno
mov
sbb
call
push
loopne
lds
mov
adc
pop
int
fsts
and
mov
sbbl
and
jg
sbb
fsts
insl
lcall
adc
xor
int
adc
jp
out
fadd
cltd
test
adc
lahf
and
mov
push
jns
push
push
and
jno
dec
mov
ficompl
and
or
adc
sub
or
xchg
ljmp
sub
into
push
pusha
cli
mov
in
outsl
jae,pt
sub
aam
daa
push
jg
out
mov
lahf
stc
cwtl
loope
divb
gs
mov
xchg
jmp
xchg
repnz
push
push
jns
pushf
mov
push
pop
negb
jmp
inc
or
nop
pop
pop
xchg
dec
aas
in
xchg
decb
sbb
outsb
sti
mov
pop
mov
hlt
add
leave
inc
lahf
andl
dec
mov
jns
les
pop
jle
inc
jb
test
das
popl
cmp
outsl
pop
je
js
mov
xchg
inc
pop
sahf
adc
jb
jno
mov
sbb
lods
add
adc
andl
push
xor
jo
xchg
ret
lret
test
mov
jno
rcl
inc
cmp
sbb
adc
push
jnp
out
paddusb
loop
mov
cmpsb
jmp
pop
jno
jo
pop
cmp
or
xchg
or
mov
imul
mov
inc
je
stc
enter
dec
cmp
test
ret
mov
in
ds
adc
ss
arpl
or
jmp
test
xchg
lret
lcall
fnstenv
push
rclb
popf
imul
shlb
ds
imul
aas
mov
cld
mov
adc
fsub
loopne
nop
jbe
mov
dec
lahf
jo
fwait
adc
stos
and
inc
sub
ror
jns
mov
inc
xchg
adcl
lcall
or
pop
mov
ficoms
sub
fldl
scas
xchg
xchg
pop
xor
insb
shrl
pop
imul
mov
mov
arpl
jb
push
mov
leave
pop
lcall
rolb
imul
mov
ret
jne
stc
clc
pop
mov
int
push
mov
cmovp
scas
in
xor
aaa
idivl
jns
andb
in
stc
xchg
in
call
je
movsb
lret
lret
loop
add
adc
sub
out
adc
movsl
int
push
cld
sub
push
jecxz
in
stc
out
lcall
mov
clc
jne
mov
call
lock
std
sub
sbb
cmc
je
mov
push
es
negb
js
stc
push
push
push
push
bound
xchg
jle
pop
aaa
jg
iret
js
imulb
nop
jle
outsl
comiss
mov
clc
loope
rclb
imul
leave
je
shll
in
into
cld
int3
sbb
add
inc
dec
fiaddl
ds
cwtl
clc
aaa
pop
or
shll
mov
mov
iret
or
pop
add
cmp
into
dec
xchg
sti
pop
call
hlt
jge
pop
mov
add
jl
dec
add
mov
fsubp
pop
xor
faddp
mov
jecxz
jmp
push
in
cmp
fsts
xchg
cmp
push
std
test
test
ret
add
adc
sbb
divb
dec
pop
xor
mov
icebp
aam
cmp
jp
jle
dec
dec
repnz
add
movsb
jecxz
xor
das
and
inc
cs
add
mov
loope
andl
daa
xchg
mov
jo
into
pop
jnp
push
xchg
adc
or
out
mov
pop
push
clc
aad
cmc
mov
fcom
inc
jno
fidivrl
clc
mov
faddl
pusha
or
sbb
mov
add
out
jae
inc
test
sbb
mov
push
inc
jae
ja
sbb
cmpsb
sahf
push
sub
inc
in
pop
dec
lea
sub
movsb
cmc
pop
add
and
or
in
int3
xchg
mov
sub
jmp
push
enter
adc
mov
loop
push
popa
pushf
fxch
jo
sub
jmp
repnz
mov
movsb
aam
cli
pushf
rcr
add
jne
sub
inc
xor
ljmp
in
cs
outsb
mov
test
dec
cwtl
pop
mov
mov
ficompl
dec
mov
orl
xchg
mov
jg
arpl
xchg
adc
xchg
fistl
sub
fimull
mov
shl
xlat
test
or
mov
int
pop
lret
ss
jbe
dec
cli
add
out
aas
stos
add
in
lahf
out
arpl
adcb
arpl
jge
cmp
sub
pop
dec
xlat
test
mov
cwtl
dec
cli
or
or
mov
out
xor
leave
sbb
rorl
sbb
cmpsb
cmp
push
push
movsb
insl
insb
adc
push
mov
pop
mov
pop
push
out
aad
leave
lods
inc
cs
cwtl
add
sbb
xor
cmpsl
into
mov
test
pop
cmp
or
addb
jp
xor
out
dec
jns
dec
push
mov
add
fisttpl
add
xchg
xchg
adc
sbb
scas
ficoms
xor
pop
add
decb
rol
clc
repnz
outsl
sbb
pop
or
movsb
adc
scas
sub
aad
out
out
insb
daa
iret
es
mov
jne
fwait
xor
stos
cmp
out
xor
lahf
pop
add
popa
in
pop
pop
shll
jbe
adc
repz
ja
mov
nop
mov
mov
jae
push
movsl
mov
les
cmc
aad
lcall
inc
fcmovnu
or
push
adc
sub
adcb
xchg
lea
xor
fs
call
inc
add
sbb
xchg
jno
mov
pop
add
call
xor
cwtl
bts
ret
sbb
adc
cmp
int3
inc
and
add
gs
sbb
stc
testb
leave
pop
cmpsb
dec
xor
bnd
test
add
lds
cld
out
lods
fnsave
and
xchg
cwtl
nop
in
inc
adc
in
cmp
dec
push
pop
xor
mov
or
inc
enter
push
xor
negb
pop
and
sti
daa
xlat
dec
xor
jg
insl
add
outsl
sbbl
shlb
push
stc
movsl
adc
aad
sbb
mov
fidivrs
lds
faddl
daa
xor
push
mov
lret
stos
jl
xor
mov
outsb
or
testl
cmp
pop
lds
xorl
dec
xchg
xlat
call
loopne
imul
xor
add
jp
pop
cmp
pop
iret
push
mov
xor
pop
shrl
dec
popf
cli
jl
ljmp
es
jb
mov
xchg
insb
adc
cmp
push
jno
orl
or
sbb
js
or
add
inc
inc
xchg
and
and
aas
jmp
scas
stos
push
xor
or
les
cmp
cld
test
mov
shll
jo
sbb
xchg
cmp
adc
stc
jno
inc
loope
popf
out
adcl
sub
js
int3
movsb
stos
xchg
ds
mov
mov
jne
mov
popa
fimull
cmpsb
fnsave
adc
push
les
lods
cltd
xchg
mov
push
pop
addr16
fcmovbe
mov
mov
fisubrs
fisubs
test
scas
xor
movsb
xor
outsl
xor
adc
popa
dec
imul
mov
pop
cltd
roll
cs
out
dec
inc
dec
fimuls
dec
cmpsl
lahf
mov
cltd
sarl
mov
jg
inc
out
pop
nop
dec
stc
inc
inc
sti
and
pop
sbb
loop
ret
leave
dec
pop
dec
xchg
cmp
mov
add
jb
pop
mov
adc
std
and
in
scas
xor
add
add
cmp
sub
mulb
push
imulb
fcoml
jmp
mov
pop
jb
loopne
rcll
lods
mov
mov
int
or
push
divl
jle
sbb
xor
sub
sub
sarl
in
push
loopne
out
inc
shlb
pop
stos
mov
mov
cs
stos
push
icebp
inc
cld
sbb
outsl
add
sbb
adcl
or
fsubrl
addr16
out
pop
push
lret
jl
jae
in
fs
jmp
addps
in
stc
fsubrl
sub
hlt
push
pop
mov
sub
pop
mov
add
jle
xor
mov
subl
mov
jbe
fwait
out
sub
es
fnstsw
pop
sub
mov
xlat
lret
jo
inc
add
fdivl
mov
push
pop
iret
lods
lock
add
inc
mov
nop
dec
or
js
mov
or
jmp
sbb
stos
or
jae
inc
mov
and
test
ror
pop
ljmp
roll
arpl
pop
in
data16
ffree
adc
aaa
aad
lea
sbb
addb
jae
pop
mov
jl
leave
pop
mov
fidivrl
cltd
ss
subl
sub
and
xchg
xor
pushf
pop
pop
cmp
adc
cltd
cs
int3
ds
fdivr
subl
in
lods
bound
lock
std
daa
cmpb
mov
in
test
mov
pop
dec
xchg
bound
aas
repz
out
pop
mov
nop
xchg
aaa
iret
push
loope
repz
enter
in
inc
aam
cmpsb
aam
lret
mov
call
into
pop
xchg
dec
mov
sbb
jg
dec
call
shl
dec
sub
push
std
into
push
mov
pop
in
loop
lcall
pop
jb
xchg
mov
xchg
fwait
test
push
push
jg
popf
das
mov
sbb
mov
mov
stc
loop
insl
dec
add
sub
aam
xor
clc
sbb
jecxz
dec
pop
adc
test
pop
sub
add
add
sub
adc
jns
sub
jp
mov
sbb
lea
out
add
loope
divl
adc
popa
adc
rcl
ja
or
imul
rolb
roll
xchg
mov
ljmp
adc
pop
push
pop
push
mov
call
xorb
cld
cltd
sbb
in
lock
and
pop
inc
in
inc
jo
jnp
ds
pop
sub
xor
test
push
xchg
bound
lret
scas
cmc
je
es
xchg
push
mov
hlt
das
push
pop
add
mov
add
test
cmc
das
nop
mov
jne
or
out
shr
pop
mull
shll
test
sbb
adc
cli
ds
fists
xchg
dec
clc
test
push
jle
dec
dec
pushf
lea
push
mov
out
xor
pop
sbb
fadds
pop
test
mov
jbe
push
push
fsts
cltd
cwtl
dec
loopne
push
push
fcmovnu
adc
inc
pusha
mov
jnp
cwtl
imul
ret
or
pusha
dec
jnp
inc
and
or
aaa
add
inc
lea
xchg
gs
adc
push
insl
jl
pop
cmp
mov
jle
lea
xorb
jae
xor
jle
rcrb
loop
dec
sbb
jns
sub
repz
ret
mov
jns
push
popa
cld
or
cltd
add
jmp
push
es
popf
pushf
inc
mov
cmp
popa
addl
mov
push
popf
sub
jmp
pop
fwait
sub
in
push
jbe
cmp
cltd
int
xchg
in
stc
imul
fistl
add
add
add
add
add
adc
add
paddusw
leave
cli
add
push
sti
jecxz
mov
aas
paddusw
aas
paddusw
pop
rclb
rcll
dec
aas
paddusw
aas
paddusw
aas
paddusw
leave
fisubrs
or
dec
aas
paddusw
aas
paddusw
aas
paddusw
aas
paddusw
aas
paddusw
out
push
inc
les
dec
incb
lret
add
add
add
add
add
cmpsb
add
and
add
loop
add
push
dec
add
add
add
test
jns
inc
add
loopne
jo
add
inc
add
add
add
push
cmpsl
add
cwtl
sub
add
shr
add
add
stos
js
add
add
add
add
add
add
sahf
iret
add
insb
sbb
out
inc
add
loopne
rolb
add
add
add
add
sahf
iret
add
incb
add
mov
add
add
mov
lock
jo
mov
add
add
add
add
add
add
pushf
aam
add
cmc
in
xor
rcrb
add
push
add
add
add
add
add
add
pushf
aam
add
add
add
std
xchg
add
add
shrb
test
popa
push
cmp
add
loopne
lock
add
add
add
add
adc
add
je
mov
add
add
pop
int3
sub
add
loopne
adc
add
adc
add
add
cltd
call
add
jbe
push
incl
add
add
aas
mov
std
inc
add
loopne
and
add
and
add
adc
add
testb
or
add
pop
mov
mov
adc
inc
add
loopne
inc
push
add
adc
add
add
add
add
add
dec
andb
jg
dec
or
lods
repnz
scas
jmp
mov
cmp
shrl
dec
fldt
mov
xor
xor
and
lahf
leave
mov
hlt
dec
notb
dec
js
dec
subl
pop
std
cmpsb
add
es
pop
push
push
add
adc
mov
call
inc
jmp
inc
ss
lds
cmp
pop
loope
adc
mov
addr16
out
mov
faddl
dec
aad
divl
std
mov
out
idivl
pop
sub
xchg
lock
xor
iret
sahf
jecxz
adc
sbb
cmpsb
sbb
sub
mov
sub
out
mov
cmpsl
xchg
push
push
adc
mov
mov
xchg
xchg
into
movsl
mov
sbb
pusha
cli
test
push
xchg
mov
lock
mov
stos
xor
jp
arpl
xchg
fistps
add
pushf
pushf
in
scas
lahf
sbb
sahf
mov
sub
hlt
sbbl
out
mov
add
fisubrs
or
xchg
push
mov
jb
std
jae
lcall
inc
aas
pushf
or
xchg
movsl
pop
push
pop
imul
rcr
push
adc
xchg
jns
dec
out
mov
addr16
out
aas
sbb
or
xorl
scas
adc
into
lret
cmp
jecxz
pop
pusha
ss
loop
push
lock
inc
and
jb
ds
fsts
push
scas
in
std
and
shrb
test
add
ljmp
pop
xchg
flds
jne
inc
aaa
mov
daa
mov
daa
in
test
rcrl
test
clc
inc
lods
add
inc
sbb
lcall
inc
xor
repz
jno
lock
adc
pop
xchg
daa
xor
imul
jmp
mov
add
jno
and
dec
jg
cmp
imul
fldenv
in
mov
mov
xor
or
and
or
sub
pop
movsb
sbb
jae
or
cmpb
int3
cmpsb
mov
dec
cmpsl
sbb
dec
push
xchg
pop
sub
add
loope
dec
fisubs
xchg
fs
or
leave
mov
dec
xor
push
cmp
pop
sub
dec
push
push
out
ret
cli
inc
lret
ficompl
mov
and
mov
sub
xor
and
dec
mov
add
or
icebp
sub
adcl
xor
push
and
pop
pop
sarl
lret
adc
mov
ljmp
ljmp
mov
add
xchg
or
lahf
pusha
popf
fsubs
rcrl
in
cld
push
sti
and
jbe
lret
jg
out
sub
lds
mov
aaa
sbb
push
les
in
sarb
mov
pushf
fldl
rorb
pop
popa
dec
sarl
xor
add
cwtl
xor
dec
push
hlt
out
xlat
and
pop
push
add
mov
xchg
xlat
inc
mov
filds
das
popf
adc
sub
test
mov
rcl
rcr
xchg
scas
inc
cld
mov
push
ds
jle
xrelease
dec
insb
inc
mov
adc
ret
je
sbb
mov
dec
xchg
push
sarb
fistps
cmp
ret
sub
add
mov
add
stos
pop
addr16
push
mov
inc
ds
popf
stc
fistl
jbe
mov
and
inc
test
aaa
cmp
dec
cmc
outsl
insb
dec
pushf
and
xchg
daa
in
or
imul
cmc
insb
inc
push
mov
or
xchg
cwtl
add
push
push
push
ja
xor
sub
js
mov
fs
aam
fsubs
inc
fsubrp
cmp
xchg
inc
xchg
jnp
mov
push
mov
aad
in
push
fmull
inc
jmp
test
pushf
lods
push
lahf
popf
push
lahf
hlt
push
stos
sbb
inc
fsubrs
ss
cmp
sbb
push
adc
jmp
imulb
rorl
xorb
in
push
les
and
push
add
daa
xchg
sub
sarb
mov
loopne
xor
jmp
and
loop
inc
mov
mov
ret
das
xor
pop
jmp
aad
faddl
xorb
negl
pop
sbb
es
mov
jno
test
mov
inc
fcomps
adc
pop
push
fwait
sar
pop
sbb
lcall
push
std
push
inc
jno
sbb
test
push
test
lret
mov
cmp
clc
test
mov
mov
jno
sub
ret
push
dec
sub
and
pop
mov
cmc
les
adc
out
je
ret
mov
push
dec
mov
orb
or
call
mov
mov
stos
mov
cltd
xchg
in
or
in
pushf
push
lret
lcall
jg
aad
cld
and
das
fwait
xchg
pop
and
insb
mov
xor
clc
add
cmp
nop
sbbb
mov
mov
rol
jns
lds
adc
jp
pop
xor
int
adc
push
jp
ds
push
adc
sbb
sbb
and
scas
outsl
scas
xchg
push
mov
dec
sbb
lds
add
clc
dec
sub
pop
shrl
stos
jae
xchg
int3
in
aas
dec
sbb
sbb
or
adc
lods
sbb
popf
inc
insl
xor
test
fcmovnb
dec
popa
les
fdivrl
lods
add
stos
mov
push
mov
pop
sbb
jl
pop
sub
mov
in
xor
ret
in
push
cmp
in
add
pop
fscale
cmpsb
push
pop
insb
mov
ja
pop
adc
test
sbb
adc
mov
xchg
hlt
repz
pop
sbb
repz
cmp
cmp
insl
shll
xorb
xchg
out
ljmp
add
hlt
push
xchg
push
jmp
sbb
push
cmpsb
jge
add
mov
ficoml
inc
das
add
mov
cmp
fcompl
ss
addr16
testb
stos
mov
mov
mov
jp
inc
sahf
inc
imul
jae
push
jmp
fnstcw
rep
inc
lret
cmp
mov
mov
add
pop
push
popf
inc
or
mov
mov
pop
cmpl
xchg
je
adc
or
add
lods
pop
js
adc
sbb
cltd
cmpl
lea
shrb
into
sub
fldenv
xor
or
idivl
xor
fisttps
jp
push
inc
fstl
fs
popa
dec
and
adc
movsl
insb
dec
cmp
ret
rorb
aam
cmpsb
pop
jb
mov
loopne
xchg
incb
mov
test
hlt
test
sbb
mov
or
inc
or
fadd
jnp
push
adc
and
push
jbe
sbb
jo
test
sbb
ss
outsb
sbb
cmp
pop
push
fisubrs
push
lods
inc
cwtl
pushf
mov
adc
rorl
mov
loopne
and
jo
movsl
out
cmp
test
mov
test
call
rcrl
pop
and
ds
or
and
fidivrl
insb
cmp
movsl
dec
shll
aaa
push
jecxz
jle
sahf
add
adc
ds
orb
ret
adc
and
popa
sbb
dec
mov
out
jne
xor
faddl
push
dec
mov
jg
push
iret
cmp
xchg
push
leave
dec
mov
jae
pop
pushl
nop
pop
xchg
mov
lds
cmp
sub
sub
mov
dec
and
pop
or
mov
xchg
sub
rcl
cmpsb
mov
push
add
das
inc
dec
mov
outsl
flds
xor
ds
ret
ds
cmp
int3
fildl
stc
pop
add
jae
sti
add
cmpsl
adc
aas
imul
adc
aas
sbb
lcallw
push
sahf
scas
lds
adc
loopne
inc
cmpsl
dec
lods
pop
add
push
scas
sbb
mov
add
or
in
xchg
or
ljmp
sbb
mov
shrb
dec
and
cmp
mov
sbb
xor
and
add
push
or
xchg
xor
push
lods
or
sub
jmp
pop
dec
insl
fisttps
popa
fistpl
cmp
subb
sarb
es
ret
cmp
mov
mov
lea
fcmovb
push
addb
pop
insl
ss
sbb
dec
cwtl
cmp
in
jb
or
data16
test
lahf
sub
mov
ret
fldenv
or
xchg
lret
sub
jno
mov
fisttpll
and
fst
xor
dec
dec
aam
cmpsb
or
jp
xchg
mov
add
inc
movsl
pop
icebp
sti
xor
lret
pop
insl
out
pusha
adc
or
lds
xorb
arpl
sbb
and
jg
iret
imul
mov
cld
shlb
int
fbld
mov
adc
pusha
push
push
and
icebp
lods
shl
jg
or
addr16
loopne
push
jge
mov
iret
pop
pop
inc
dec
or
jmp
or
jecxz
lret
in
aas
pop
lcall
sub
dec
push
arpl
outsb
jge
xchg
das
lcall
mov
mov
lahf
imul
je
mov
movsb
ja
out
mov
lret
out
in
out
js
xlat
xlat
dec
repz
pop
cs
push
test
rcrl
imul
xor
ja
scas
fdivl
inc
jb
mov
dec
push
mov
jne
cld
ret
cmpsl
cmp
dec
jp
and
xor
lock
dec
sbb
icebp
jne
pop
cmpsl
jl
and
adc
adc
not
mov
inc
xchg
add
add
or
fucomi
fwait
jb
test
out
xor
call
test
jbe
push
mov
xchg
dec
xor
jle
cmp
mov
xchg
fimuls
pop
ret
jbe
nop
sub
orl
cmp
pusha
mov
outsl
mov
test
fldenv
pushf
dec
mov
mov
sub
adc
mov
scas
addl
inc
add
ffreep
stos
pop
outsb
nop
add
sub
stos
std
add
mov
mov
xor
repnz
adc
adc
sbb
das
add
cli
xor
test
fsubrl
iret
add
test
cmp
test
ds
jno
dec
and
cmpsl
pop
jmp
mov
and
push
enter
or
push
ja
and
cmp
xchg
adc
pusha
xchg
cmc
loope
les
push
fstl
mov
mov
push
rclb
les
add
stos
lods
lret
outsb
mov
out
das
mov
or
imul
fwait
iret
xchg
lret
cli
subb
mov
aam
or
inc
adc
add
jle
sub
out
ljmp
rorb
xlat
cmp
inc
cmova
out
idiv
rolb
xchg
lahf
into
or
mov
add
loop
jae
mov
inc
stc
xchg
mov
xchg
insl
sbb
inc
push
aaa
dec
ljmp
aas
std
add
insb
cwtl
sbbl
addl
sub
push
rol
push
scas
cmp
inc
xor
lea
andl
xchg
sbbl
inc
loopne
js
out
lock
sub
jle
cmp
popa
lock
mov
sti
xchg
sub
cltd
and
cld
aas
push
mov
faddl
jb
fisubrs
js
xor
push
jne
adc
sbb
sub
xchg
jge
comiss
iret
insl
scas
sub
dec
mov
js
xor
mov
movsb
xor
lods
pop
xchg
pop
xchg
inc
hlt
daa
and
xor
jmp
inc
pop
popf
lret
aas
lods
and
push
xor
mov
push
mov
jb
xor
repz
popf
pop
mov
fscale
mov
xlat
xchg
cld
mov
cmp
movsl
jnp
daa
jns
sub
mov
addl
shlb
fwait
pop
jmp
jmp
jbe
js
push
test
jne
out
mov
insl
shl
sbb
sbb
adc
shlb
push
xchg
outsb
adc
add
dec
lea
hlt
je
dec
arpl
xor
ds
cltd
insl
and
in
out
jl
loop,pn
pop
xchg
movlps
and
jg
in
loope
inc
shlb
cmpsb
push
popf
int
push
push
out
popf
fcompl
shrb
jmp
int3
aam
sub
xchg
out
dec
or
fisttpl
jl
lods
pop
stos
push
or
aaa
and
add
add
scas
add
inc
mull
outsb
mov
mov
div
adc
and
insl
cwtl
out
call
adc
sub
add
jne
sub
dec
movsl
dec
push
add
iret
pop
inc
push
xorl
into
and
pop
rol
loop
stc
xchg
stos
pop
aaa
data16
shr
mov
icebp
cld
lods
out
clc
test
xor
ret
leave
push
mov
mov
xor
addr16
mov
daa
sbb
inc
mov
sbb
add
fidivrs
dec
jp
push
or
xor
movsl
add
jb
jecxz
xor
pop
movsb
arpl
jg
repnz
xlat
xchg
push
sahf
addr16
ficoml
ffreep
lds
and
pop
fldz
sahf
js
jge
or
outsl
jl
jae
dec
fcomi
mul
stos
mov
ret
cld
in
lahf
sub
stos
pusha
jmp
mov
mov
dec
lods
cs
ja
pop
imul
pop
xchg
lahf
or
inc
jns
add
xchg
aad
pop
pop
or
lds
mov
mov
inc
inc
mov
sbb
and
scas
shl
pop
xchg
fadds
dec
push
push
cmp
mov
add
and
jp
and
outsl
js
arpl
shl
dec
inc
into
sbb
sub
lcall
xlat
mov
xchg
mov
pop
sub
mov
mov
inc
or
jbe
and
mov
or
out
jp
jbe
jbe
sbb
push
or
int3
incb
mov
test
aam
or
sahf
add
ficoml
stc
jmp
imul
icebp
jb
int3
cs
in
push
bound
or
into
out
je
push
push
cmp
int
insb
mov
cmpsb
xor
add
subb
mov
sahf
mov
mov
adc
sbb
xor
out
mov
mov
lret
or
in
inc
inc
mov
ljmp
adc
pop
insl
nop
insl
mov
push
das
cld
repz
mov
mov
stos
je
jge
jle
pop
or
mov
or
lret
xchg
cmp
hlt
test
cltd
sub
repz
lock
pushf
lods
loope
xchg
fstl
out
mov
idiv
sbb
dec
leave
inc
push
gs
push
dec
sub
sarl
push
add
inc
pusha
out
push
or
arpl
cltd
xchg
scas
shll
pop
and
sbb
dec
mov
aaa
aad
pop
popf
clc
xchg
push
aad
int3
inc
lea
loopne
lods
cmpsl
hlt
bound
adcb
shll
sub
cmpsb
dec
insl
inc
sbb
xor
lods
lods
sbb
sbb
ret
andb
cmpsb
addr16
test
jmp
shrl
and
out
dec
sbb
outsb
lret
lcall
cwtl
icebp
mov
cmp
pop
dec
or
mov
sub
incb
cmp
fmull
jmp
xchg
jp
mov
cmp
shr
push
adc
pop
sbb
addr16
test
jo
inc
in
bswap
sbb
not
lret
sub
xchg
hlt
inc
push
lahf
mov
lea
imull
xchg
lret
cmp
or
xchg
jg
leave
cmpsb
xchg
or
insl
loop
test
imul
mov
arpl
jecxz
push
dec
or
or
or
push
mov
xchg
out
pop
or
xor
mov
xchg
and
push
icebp
test
cmp
negl
pushf
ljmp
ss
jbe
cltd
and
add
xchg
inc
and
iret
je
push
out
jno
mov
sbb
andl
cmp
dec
mov
mov
and
outsb
mov
fistpll
add
mov
mov
mov
fisttpll
mov
dec
cmp
bound
stos
dec
shll
shr
push
outsl
ret
push
lods
mov
or
mov
xchg
pushf
push
cmp
lahf
pop
iret
inc
pop
clc
stc
sahf
cmp
out
or
mov
or
or
and
sbbb
xchg
sbbb
stos
repnz
cmpl
addr16
pusha
mov
ja
mov
xor
mov
or
sub
push
iret
pop
testb
fwait
mov
cmp
lds
das
adc
clc
mov
fs
outsb
cmpb
push
jl
pop
inc
bound
jb
add
lcall
fwait
push
enter
insb
inc
call
fwait
mov
cmp
repz
and
lret
fidivl
roll
jae
mov
les
aaa
shll
movsb
push
aaa
jp
ss
cmpsb
in
inc
jl
out
out
jbe
sub
out
cmp
lcall
xor
jno
sub
cld
test
adc
xor
dec
push
mov
hlt
lods
and
cmp
xchg
imul
pop
and
sbb
imul
frstor
in
stos
dec
dec
mov
shrb
sub
cli
stc
add
adc
inc
dec
inc
cli
add
ss
jns
mov
pop
xchg
sub
mov
fldt
scas
mov
and
xchg
mov
fisubl
pop
cmp
test
and
add
sbb
imul
mov
movsl
cli
or
pop
out
pushf
clc
xchg
je
mov
mov
sub
enter
ret
lret
shlb
xlat
push
pop
pop
out
sub
adc
jbe
add
and
lret
stos
decl
or
inc
imul
scas
adc
andb
pop
inc
bound
dec
pop
and
jl
imul
and
repz
loope
jo
or
sbb
fisttps
pop
pop
lds
adc
dec
aaa
scas
mov
push
and
test
pop
push
xchg
in
pop
pop
lea
call
inc
pop
xchg
pop
icebp
insl
inc
xor
inc
inc
popa
divl
xor
or
movsb
xchg
inc
dec
and
loopne
sub
xchg
aaa
add
mov
loopne
pop
jge
cmpsl
cmp
push
add
cwtl
xor
inc
cmp
xchg
out
cmp
cmp
ljmp
jecxz
in
aam
ret
dec
nop
ja
jns
dec
frstor
inc
test
ljmp
sub
jg
loop
fs
push
xor
dec
loopne
in
fimull
push
or
inc
int3
fneni(8087
imul
mov
rcll
jecxz
outsb
imulb
or
andb
pop
scas
mov
ret
cmp
push
xchg
pop
rorl
push
inc
stos
fnstcw
mov
jns
or
insl
cmpsl
or
sti
in
ds
divl
ret
cmpps
pop
cwtl
and
cmp
cs
xor
sahf
aas
inc
xchg
ffreep
clc
mov
inc
xlat
dec
fbstp
in
cmc
lret
push
jno
lock
cli
int
ja
loopne
pop
xchg
pushf
cltd
adc
inc
inc
in
and
mov
lds
add
in
sbb
mov
push
sti
clc
xorb
mov
inc
mov
pop
ret
fsubrs
out
outsb
cbtw
ss
or
les
mov
fidivrs
aas
lods
jecxz
pop
negl
cmpsb
add
sub
sub
rcrb
pop
dec
lret
inc
dec
hlt
fwait
and
aad
or
and
scas
mov
inc
pop
repnz
push
mov
sahf
nop
inc
int3
mov
insl
mov
arpl
ja
dec
dec
push
ret
sbb
in
fbstp
pusha
mov
adc
rcrl
push
xlat
xor
adc
sub
xchg
not
push
dec
scas
dec
jo
pop
scas
test
inc
push
in
ret
pop
sub
mov
xchg
test
out
mov
adc
or
cld
je
fs
pop
mov
enter
xor
jge
and
and
push
ds
jb
test
sub
call
push
pop
cmp
xlat
leave
push
jbe
stc
aas
adc
orl
dec
cwtl
aad
pusha
add
fiaddl
js
movsl
ds
lock
mov
inc
push
xchg
dec
mov
xchg
outsb
dec
aad
insb
loop
sbb
sbb
cmpsl
xchg
int3
pop
call
into
mov
repnz
in
cmpsl
ds
sahf
mov
pop
je
js
add
mov
mov
adc
jg
flds
xlat
ficoml
shll
inc
xchg
dec
ds
das
xchg
pushf
mov
addr16
or
iret
adc
data16
test
clc
jns
adc
pop
cltd
jge
xor
jno
andb
cmpsb
fsubs
test
insb
pop
ss
mov
mov
xchg
and
jmp
lret
movsl
pop
sbb
sbb
iret
loopne
ds
jmp
pop
dec
mov
fistpl
in
mov
mov
stos
lcall
xchg
inc
or
scas
dec
ds
mov
pushf
inc
outsl
sub
enter
fnstsw
rclb
adc
fwait
stos
enter
dec
jnp
jp
enter
aas
ljmp
xor
aas
sti
sub
xchg
jp
inc
mov
xor
mov
xor
add
popaw
mov
ds
xchg
pop
push
fsubs
lret
aam
mov
mov
imul
adc
cmp
divl
pop
push
cmc
notb
lods
pop
jle
xchg
dec
jnp
pop
rcrl
sti
sbb
and
xorb
mov
ja
lret
rcrl
stos
fsts
scas
fisttpl
pop
add
mov
dec
mov
fnstcw
lret
in
jns
cwtl
and
imul
lods
inc
xor
mov
add
fwait
cmp
out
test
push
inc
lret
movb
push
iret
dec
outsl
or
push
xor
mov
dec
sbb
and
scas
pusha
lea
push
hlt
inc
arpl
mov
jbe
mov
mov
sub
mov
inc
cli
pop
xor
pop
pop
inc
cmp
mov
stc
leave
dec
call
mov
pop
and
arpl
sti
dec
add
insb
popf
mov
pop
hlt
ficomps
pop
frstor
or
or
mov
les
ljmp
dec
loope
scas
or
aas
outsl
test
js
aas
add
jb
das
xchg
test
out
enter
movl
mov
inc
insb
jge
adc
addb
jo
movsl
xor
in
jmp
stc
or
decb
mov
lea
push
jo
fistpl
xor
xchg
pop
test
outsb
mov
orb
and
mov
inc
sbb
xor
mov
loop
sub
in
fyl2x
xor
imul
sahf
orl
jmp
xlat
lods
inc
decb
je
sub
nop
addb
pop
mov
cwtl
sub
and
incl
jecxz
ss
xcrypt-ofb
cmpsl
push
push
jbe
rorb
outsb
out
xchg
cmp
scas
adc
je
mov
xlat
fidivrs
ret
inc
inc
xchg
sbb
jmp
sub
stos
xor
repnz
ret
lods
xor
mov
adc
xchg
sub
add
ljmp
outsb
loopne
inc
cmp
mov
adc
int
mov
jns
push
ret
xlat
cmp
cmpb
out
ds
cmp
lock
cmp
jne
xchg
jl
pop
stos
mov
jge
test
push
fstpt
adc
xchg
shll
lret
int3
cmp
cmpsb
cmpsl
xchg
je
adc
fwait
scas
dec
popa
mov
xchg
xlat
mov
arpl
fidivl
fwait
lds
mov
sbbl
nop
sub
inc
mov
push
fwait
xor
mov
mov
push
add
clc
inc
mov
adc
loope
std
mov
fcomps
mov
mov
test
mov
outsl
test
add
jno
mov
mov
pushf
pushf
test
scas
les
aad
add
add
mov
sub
scas
jl
xorb
push
inc
in
and
sub
loope
push
fmulp
lcall
inc
shl
aam
cmc
fistps
sahf
mov
mov
pop
xchg
or
cwtl
and
pop
xor
mov
sub
mov
aaa
into
lret
inc
cltd
add
cmp
pop
testl
cmp
test
mov
xchg
mov
push
outsl
or
call
fbld
fwait
mov
mov
decl
mov
jb
repnz
jbe
dec
orl
ljmp
inc
jl
cmp
inc
and
ljmp
cwtl
loope
xchg
add
idivl
xor
cld
pusha
jne
cmp
pop
push
jecxz
cmp
test
mov
out
inc
dec
and
test
xor
push
cwtl
mov
bound
fwait
test
lret
cmp
lret
rclb
inc
xor
ss
push
mov
mov
repz
jle
arpl
mov
cld
gs
loopne
test
sub
cmp
inc
out
lds
mov
pop
sbb
push
adc
add
js
cmp
in
in
jg
inc
call
bound
test
jb
xchg
ss
ljmp
mov
push
pop
push
shrb
mov
aad
pop
push
mov
inc
cmp
sbb
jo
jmp
mov
pop
imull
inc
insl
aad
insl
cmp
movsl
scas
jge
cmp
gs
fdivl
push
cmp
inc
scas
adc
inc
je
pop
mov
outsb
sub
inc
adc
and
and
pop
cltd
dec
arpl
mov
jmp
sbb
cli
mov
negb
pop
mov
dec
movsb
cmpl
sub
sbb
movsb
jnp
dec
jle
adc
cmp
pushaw
mov
jnp
add
repz
pop
loop
mov
sbb
loope
ja
mov
cmp
xchg
mov
dec
outsb
hlt
push
sbb
out
sub
and
cmp
dec
mov
movsl
jns
and
push
push
mov
ret
out
sub
sub
add
ja
movsb
mov
mov
mov
sub
push
inc
andb
movsl
sbb
xchg
ret
pop
push
mov
stos
and
sub
fs
lea
das
adc
js
pop
je
cmp
lcall
push
inc
stos
mov
and
arpl
mov
test
shlb
jae
in
fucom
test
enter
xor
testl
push
xor
iret
test
fstl
or
push
cmp
lret
push
mov
mov
fistpl
push
popf
ja
nop
cld
cmp
push
sub
lods
mov
push
aam
ljmp
xor
pop
das
mov
outsl
inc
in
pop
lea
jae
cmp
aad
int
push
fadds
push
addr16
sbb
test
push
mov
leave
or
cmp
sbbl
cmp
add
adc
fmuls
notl
xor
out
repnz
xchg
mov
mov
mov
imul
test
jo
repnz
es
outsb
sbb
push
mov
xchg
sub
cmp
jge
int3
in
gs
mov
out
shlb
je
push
xchg
sbb
push
pop
mov
rep
pop
mov
jge
loop
sub
push
inc
outsb
in
cld
xchg
cmp
sbb
popa
inc
stos
mov
shlb
fcmovnu
ficompl
add
sub
cmp
lods
xchg
push
cwtl
in
inc
loopne,pn
pop
cltd
xlat
sahf
movsl
mov
lahf
jp
cmpsb
inc
in
or
lret
negb
jecxz
cltd
cmpsl
jmp
aaa
xor
imul
outsl
cmp
int3
xchg
shrl
ja
movsl
insl
in
hlt
rclb
add
mov
pop
pop
cmp
call
dec
lcall
add
mov
add
fs
sub
inc
mov
dec
or
mov
and
jp
jecxz
rclb
es
or
sub
cld
push
xchg
sbb
js
mov
inc
sbbb
jno
test
mov
sbb
dec
xchg
ja
sub
pop
insb
hlt
xchg
adcb
bound
cmp
stos
xlat
push
daa
out
jbe
jmp
pushf
jbe
cmp
clc
lods
adc
imull
cmp
cmp
pop
inc
dec
ljmp
je
cs
adc
outsl
mov
jmp
bound
stos
pop
jecxz
mov
sbb
inc
iret
cmp
sbb
bound
mov
dec
pop
xchg
cmp
mov
sub
adc
ror
push
mov
iret
les
roll
into
mov
jp
ljmp
aad
push
mov
jns
dec
mov
fnsave
adc
and
pop
insl
test
cli
sbbl
mov
cmpsb
xchg
sahf
test
sbb
bound
adcl
repz
shl
loope
cltd
lods
push
push
mov
sub
lahf
and
cmpsb
mov
rclb
mov
jne
pop
lret
gs
mov
pop
mov
mov
mov
in
das
pusha
sub
xchg
mov
fldln2
cld
push
jecxz
mov
into
lds
inc
mov
jmp
dec
pop
xchg
movsb
or
ret
adc
out
mov
mov
cmc
addb
sub
or
push
mov
mov
push
fnstcw
dec
push
fs
inc
repz
dec
sub
imul
cwtl
into
popa
lcall
js
xchg
imul
adc
xchg
mov
pop
cmp
movsb
cmp
pop
out
mov
cmp
jl
out
out
popf
aaa
mov
fdivr
call
sti
out
lret
dec
sbb
or
aaa
xchg
fistpll
outsb
inc
sbb
jmp
sbb
test
aad
jle
mov
xchg
push
xor
leave
and
or
or
stc
push
outsl
and
mov
mov
jo
mov
outsb
jbe
in
inc
sbb
mov
sbbl
pop
mov
dec
dec
dec
sbb
das
sub
pop
sub
xlat
enter
pushf
ljmp
dec
gs
jb
xor
pop
mov
cmp
mov
out
insl
jo
sbb
fidivrl
ljmp
into
xchg
jns
pop
lods
ret
aaa
js
sbb
or
mov
subb
push
adc
pop
mov
lds
addb
jg
and
repnz
jl
or
sbb
fsubl
mov
and
dec
mov
cmp
pop
sub
ljmp
stc
cmc
add
faddl
aam
addr16
jmp
mov
out
jecxz
mov
cmp
cmpsb
mov
lock
mov
mov
or
leave
scas
or
int3
arpl
add
cmp
mov
inc
mov
insb
gs
pop
jae
mov
add
repnz
or
sub
sub
inc
pop
mov
dec
mov
dec
inc
lahf
rolb
mov
sar
or
jne
lea
das
shlb
pop
xchg
rorb
inc
cmpsb
xchg
xor
das
je
loop
add
xor
loope
push
adc
sahf
filds
fnstcw
mov
or
imul
dec
rolb
adc
out
jge
or
sbb
pop
jne
jnp
rcrb
inc
push
xor
jns
je
lds
xchg
fisubs
inc
jae
icebp
popa
test
mov
loopne
aas
lret
andl
icebp
popl
cmp
scas
xchg
sbb
mov
sti
inc
addr16
out
mov
rcrb
in
cmp
int
mov
testb
dec
shll
pusha
jge
jne
inc
das
xor
push
ret
push
sbb
push
jne
dec
dec
in
adc
mov
xlat
xor
in
stc
aam
and
push
mov
mov
aaa
gs
dec
arpl
inc
sub
xchg
mov
not
adc
pop
mov
aad
inc
push
insl
xorb
rolb
shrb
js
pushf
add
pop
add
mov
push
cld
or
dec
jbe
je
dec
xchg
fldt
stos
pop
test
fwait
and
mov
dec
jg
mov
ljmp
pop
xchg
sub
sub
inc
cld
clc
push
mov
pop
mov
lods
js
mov
push
rorb
mov
sbb
imul
in
inc
mov
cmp
lahf
jecxz
jns
cld
or
sbb
in
dec
sbb
enter
cwtl
in
daa
adc
mulb
fmul
xlat
fists
icebp
pop
sbb
jmp
mov
emms
or
jecxz
ljmp
je
aam
mov
dec
enter
ret
sub
lret
rclb
out
aas
in
xlat
dec
dec
jae
test
cwtl
pop
out
aas
cmp
push
inc
scas
shlb
jne
xor
inc
push
lds
es
stos
cli
inc
lods
xchg
pop
leave
cmp
cmp
loope
xor
repnz
sbb
cli
lcall
imulb
and
in
jl
out
add
std
leave
test
adc
mov
xor
jno
movsb
aad
or
inc
xchg
cmp
and
mov
mov
dec
test
xchg
mov
std
ret
pop
cmc
jge
imul
scas
data16
dec
push
lock
xor
cmp
sub
les
dec
leave
pop
in
add
pop
jl
add
add
or
sub
jnp
cmp
movsl
std
cmpsl
cmpl
pop
rol
cmp
mov
pop
mov
std
scas
repz
jg
pusha
pop
divl
xchg
subb
ror
and
insb
iret
add
push
adc
inc
lods
pop
loope
test
push
lea
adc
or
lahf
movups
adc
jbe
add
push
setge
shlb
push
mov
mov
pushf
scas
sub
and
out
xor
adc
test
or
sbb
jg
inc
in
in
mov
sub
gs
cmpsb
sub
mov
iret
das
jl
mov
in
or
in
shll
xor
push
cs
mov
mov
push
rcrb
lock
cltd
ss
stos
jmp
jo
adc
rorl
xchg
pop
sub
and
mov
cltd
fldl
lcall
int
dec
fstpt
fisttpl
sbb
jae
stc
jb
rcrl
cmp
jmp
pop
mov
push
fimuls
cli
sub
adc
pusha
add
es
sub
xchg
push
fdivrl
and
adc
sbb
adcl
pop
sbb
mov
fs
pop
test
pushl
je
mov
or
mov
ja
outsl
cmp
adc
jl
popa
mov
out
cmp
inc
fcmovnu
scas
fs
scas
insb
sbb
push
in
mov
roll
mov
lret
cmc
lods
mov
mov
mov
mov
jno
gs
pop
shlb
pop
pop
je,pn
stc
roll
cli
popa
out
pmaxsw
and
xor
xor
cli
pop
jns
push
enter
adc
mov
or
cmp
ss
jo
bound
mov
sub
or
inc
insb
dec
jg
jo
pop
clc
fmuls
jb
push
xchg
dec
push
push
pusha
cmc
dec
test
mov
add
cli
add
jp
and
sub
inc
mov
pushl
jne
push
dec
cmp
mov
addl
inc
imul
fbstp
add
jbe
jle
mov
lret
and
mov
ljmp
out
mov
mov
and
pop
push
cmpsl
sub
add
mov
fidivl
scas
inc
and
mov
inc
imul
mov
lds
cmpsl
in
popa
fsubrl
mov
lahf
pop
dec
xchg
rclb
add
jle
xchg
push
stos
loop
lds
inc
lahf
scas
push
popf
cmpsl
rol
add
test
popa
xor
cmp
into
jnp
movb
and
movsb
jno
call
inc
aaa
into
in
gs
inc
jnp
sbb
mov
inc
je
inc
ficoms
scas
sub
call
std
mov
xor
add
mov
sbb
aad
data16
adc
cmp
int
dec
xchg
xchg
mov
inc
outsb
ja
mov
xchg
pop
popf
lret
pop
jns
loope
xlat
cmpsl
mov
stos
out
cmp
loope
imul
stos
pushf
pusha
inc
popa
shll
aaa
daa
cwtl
sub
dec
test
hlt
adcb
xchg
inc
xlat
inc
pop
and
mov
mov
or
xor
xchg
test
pop
lods
inc
inc
add
mov
xchg
push
mov
dec
lahf
mov
jb
popa
cmp
icebp
adc
decl
xchg
cli
cmpsl
fidivs
xchg
fstp
test
dec
adc
popf
push
insb
repz
push
pop
lret
inc
jmp
mov
gs
or
pushf
punpckhbw
ret
mov
add
jp
loope
or
mov
sub
rol
push
adc
and
test
cmp
mov
out
dec
and
test
ja
inc
inc
test
push
xor
pop
mov
pop
bound
push
int
dec
clc
ja
movsb
xchg
subl
adc
repz
push
test
les
lea
mov
call
mov
jp
test
aaa
jnp
mov
cmp
ret
jnp
add
mov
fimull
insb
fwait
jp
push
mov
out
sar
mov
lea
xchg
mov
sbb
cmpsb
movsb
inc
pop
adc
sbb
jecxz
cmp
xor
mov
dec
scas
ss
and
mov
mulb
push
mov
jp
and
jp
dec
les
icebp
sbb
lahf
pop
mov
ret
and
lret
xchg
out
cmc
push
adc
adc
out
lcall
call
dec
rcrl
fbstp
call
jmp
mov
xor
xor
cmpsl
inc
push
cmpsb
cs
pop
sbb
add
pop
lcall
shrb
shlb
fwait
pushf
mov
ret
lods
sti
add
pushf
insb
hlt
inc
or
insb
xorl
adc
ret
mov
pop
dec
gs
ret
push
pop
pop
adc
into
or
mov
clc
movsl
lahf
test
aad
in
sub
rcl
das
push
lahf
mov
std
std
mov
dec
mov
jge
jg
push
clc
or
lods
add
in
repnz
jns
pusha
lret
shrl
jle
push
jge
mov
dec
and
test
lods
loopne
add
ljmp
pop
outsl
lcall
and
mov
sbb
addl
or
jp
int
mov
cmp
aam
xlat
or
mov
pop
hlt
ds
cmpsb
push
and
and
lcall
xor
adcb
stos
out
icebp
push
mov
mov
inc
fbstp
int
lret
sub
popf
dec
sbb
aad
sti
sbbl
adc
pop
popl
add
arpl
mov
repnz
mov
xrelease
loopne
mov
cltd
jbe
sub
push
gs
dec
dec
hlt
and
ret
and
pop
mov
stc
iret
jmp
aaa
lods
push
daa
pop
ljmp
loopne
jbe
sub
ja
dec
sbb
cmc
test
mov
xchg
xchg
and
aam
cli
or
dec
sahf
add
push
cltd
xchg
and
ja
lods
sar
inc
ficoms
inc
mov
inc
adc
test
mov
cmp
rclb
pop
int
imul
jnp
push
xorl
jae
mov
sbb
popf
or
arpl
xchg
pop
xchg
gs
lgs
pop
out
loope
test
mov
icebp
pop
jle
fadds
sub
sbb
mov
sbb
ds
mov
cwtl
xor
out
mov
xchg
jle
popl
mov
xchg
and
insb
push
adc
imul
cmp
sub
fimull
sub
ljmp
push
fstpt
jb
std
mov
fdivrs
mov
icebp
and
mov
and
mov
leave
in
test
adc
rcr
pop
ljmp
dec
fldenv
imul
imul
push
mov
and
repnz
jns
in
aad
addr16
scas
loopne
mov
push
dec
lea
and
and
mov
and
nop
xchg
fs
out
add
xchg
rclb
aaa
movsl
std
lods
rorb
mov
jecxz
mov
daa
mov
xchg
enter
mov
add
aam
mov
lds
imull
adc
ss
ret
sahf
mov
inc
push
in
xor
xorb
pushf
mov
gs
imul
dec
mov
fs
roll
jecxz
stc
iret
call
rcll
mov
cmp
fs
pop
std
imul
dec
fcompl
les
jno
jae
es
dec
movl
jmp
or
or
ljmp
aaa
jb
mov
sub
jbe
add
cwtl
ds
repz
xor
fimuls
mov
daa
divb
push
and
push
jecxz
flds
in
imul
movsb
inc
filds
dec
jne
mov
cmp
insb
rolb
xchg
rep
mov
das
xor
sbb
cwtl
mov
pop
shl
movsb
cld
shlb
jo
lods
lods
xor
scas
movsb
es
in
or
or
xchg
dec
cmp
movsb
and
repz
fldl
shll
mov
mov
push
inc
adc
bound
fildl
loope
int
dec
pop
jle
stc
rcrl
cli
adc
insb
lods
sti
in
loope
mov
out
lea
arpl
mov
adc
lods
lret
jp
arpl
jo
add
mov
mov
mov
mov
int
lock
in
popa
pop
and
or
adc
lea
stos
in
stos
adc
clc
mov
jl
mov
mov
test
or
in
js
inc
adc
xor
in
sbb
pop
cld
loop
mov
loope
jae
or
push
cli
inc
shlb
inc
cmc
xchg
mov
mov
mov
and
inc
add
out
xor
mov
icebp
stos
sub
shll
hlt
nop
inc
inc
rcrb
mov
pop
aam
aad
ficoml
dec
stos
xchg
fisttpll
in
pop
ja
push
loope
in
or
mov
push
test
jo
shrl
pop
lret
repnz
push
pop
pop
xchg
or
sub
dec
inc
mov
mov
popf
lret
pusha
test
dec
outsb
push
add
dec
sbb
sbb
adc
sub
jbe
stc
fisttpll
rclb
xchg
lds
cmpsl
jecxz
jp
xchg
test
mov
xchg
stos
lahf
push
mov
out
mov
mov
fsubp
xor
psrlq
loopne
xchg
fiadds
stc
clc
jmp
pop
dec
jmp
push
mov
fcmovbe
movsb
ljmp
movsl
rol
in
xor
and
gs
xchg
loop
cwtl
mov
pop
mov
xchg
mov
xchg
int
inc
push
je
andl
jns
outsl
popa
leave
dec
adc
push
sub
pop
imul
add
ds
aam
inc
popf
in
mov
jecxz
ret
push
imul
push
mov
fidivs
mov
sbbl
sub
lret
adc
shll
mov
cli
ljmp
lock
xor
out
call
mov
push
mov
data16
sub
pop
mov
jg
jp
mov
push
push
out
cs
iret
push
sub
popf
lea
lcall
xchg
adc
mov
fbld
sub
ret
push
stos
pusha
xchg
lret
ljmp
xor
in
cmp
ljmp
pop
not
adcb
sub
jecxz
sahf
lret
pop
add
imul
xor
roll
sarl
xor
push
cmp
inc
lahf
add
loop
movsl
cmc
dec
cwtl
out
adc
jo
test
jb
sbb
insb
dec
jge
mov
mov
xchg
ds
mov
xchg
xchg
mov
pop
mov
stos
or
pop
repz
mov
shlb
jp
test
in
cli
sub
rclb
lcall
ret
jge
sahf
mov
dec
outsb
mov
jp
push
pop
cmp
xchg
xor
in
push
repz
xchg
jecxz
jecxz
in
pop
cmc
shll
sbb
push
aaa
push
xchg
and
sbb
out
mov
xlat
jb
pop
xchg
mov
dec
mov
mov
je,pn
mov
addb
das
dec
arpl
shr
adc
jp
outsl
mov
sbb
sbb
or
and
in
loopne
out
sahf
test
test
in
stos
cmp
xchg
and
push
push
xchg
cmpsl
movsb
repz
xchg
les
xchg
mov
push
lea
cmp
ds
loope
stos
jle
fidivl
ss
sbb
daa
pop
push
popf
adc
push
or
dec
dec
ss
or
icebp
repnz
hlt
or
push
jb
xlat
leave
push
mov
fwait
movsl
or
cld
xchg
xchg
inc
stc
sbb
fldcw
pop
test
bswap
or
enter
pop
add
adc
and
imul
sbb
jge
enter
xor
or
jl
mov
repz
cmp
sbb
addr16
mov
push
in
nop
inc
and
out
sbb
lret
sarl
sbb
sbb
cltd
xor
mov
test
loopne
in
adc
inc
sti
xchg
and
adc
push
lods
add
inc
mov
dec
int
filds
jnp
xchg
mov
mov
mov
mov
loope
push
push
mov
mov
cld
pop
repnz
or
and
or
mov
inc
mov
inc
mov
cmp
dec
ret
cmp
hlt
rcr
xor
adc
xchg
jp
pop
xchg
je
jne
cmpsl
or
dec
xor
add
push
adc
jo
dec
xor
xor
sarb
jae
inc
push
and
mov
push
or
xchg
mov
rol
cli
andl
inc
mul
push
imul
insl
cmpsl
push
sarl
scas
and
cmpsb
mov
mov
icebp
rolb
or
pushf
jno
icebp
outsb
mov
jno
je
xchg
dec
fwait
int
jns
xchg
repz
ficoms
jmp
hlt
pop
in
loopne
fcom
gs
out
inc
mov
mov
inc
and
scas
outsl
inc
rcl
or
sub
roll
cwtl
xor
fwait
out
test
xor
lret
mov
cmpsb
js
imul
roll
lods
loop
pop
rorb
rclb
jl
std
orl
into
loope
outsl
or
sub
pop
movsl
sbb
adc
popf
sbb
cmp
add
lahf
ljmp
loop
mov
stc
data16
jns
xor
cmpsb
sbb
aaa
cmp
lahf
icebp
rcrb
test
pop
into
jns
cli
cmpsb
jecxz
ficomps
data16
add
shl
jbe
add
int3
adcb
es
and
dec
sub
insb
in
leave
outsl
fdivrp
ss
decb
inc
push
xchg
inc
lcall
sarl
xor
out
outsb
mov
sub
fs
imul
insb
fimull
pop
jbe
push
sub
mov
xchg
adc
mov
fsubr
dec
iret
pushf
and
mov
pop
aad
cmpsl
aaa
arpl
leave
scas
dec
push
inc
insb
push
xor
cmp
cmpsb
int
std
ficompl
dec
outsb
inc
rcl
cmp
jo
dec
xchg
rorb
push
xchg
call
movsl
xchg
cld
adc
dec
sbb
loopne
mov
out
stos
dec
movb
mov
adc
fisttpl
pop
mov
in
popf
pop
call
xchg
lret
jno
mov
in
sahf
jo
mov
stos
xor
in
dec
shlb
mov
jo
mov
push
cs
lock
push
adc
jns
iret
jl
jmp
fistpll
pop
sub
pusha
mov
xorl
data16
fisttpl
push
pop
in
xor
orb
out
popf
adc
pop
pusha
fildl
incb
cmp
test
roll
filds
xchg
jb
sarb
insl
into
xchg
sub
cmp
dec
push
repz
xchg
mov
jbe
dec
cmp
or
jp
scas
push
or
pop
inc
mov
dec
mov
pcmpeqw
imul
or
xchg
lods
lock
into
aad
rcrb
rorb
in
xchg
or
popf
xchg
fldl
les
fwait
mov
loopne
mov
ljmp
iret
cmp
stos
in
xor
or
notb
push
test
icebp
xor
jle
adc
dec
out
xor
fwait
in
mov
inc
mov
outsl
xchg
jecxz
ret
cmp
pop
mov
rol
insb
test
int3
fwait
hlt
push
dec
orb
xchg
inc
cmp
mov
push
ss
jae
adc
inc
dec
inc
ja
add
popf
bound
mov
cmp
shrb
and
repnz
divb
repz
dec
sub
bnd
inc
sub
sub
mov
jno
repz
shrb
ljmp
push
stos
dec
dec
mov
mov
pop
xchg
cli
in
mov
inc
jg
movsl
pop
cmp
stos
cli
mov
cwtl
adc
xchg
mulb
mov
pop
bound
sbb
ja
mov
cs
iret
inc
mov
adc
cltd
jne
mov
or
sub
jb
cmp
push
inc
fcomps
or
sbb
ds
jno
push
xchg
inc
xlat
insl
repnz
test
pop
mov
into
rcr
test
testb
add
lds
xchg
into
test
cmp
sbb
enter
sbb
jmp
ret
or
add
subb
mov
mov
adc
inc
into
pop
fs
aam
std
mov
or
out
test
outsb
fiadds
mulb
adc
dec
aad
loop
leave
ds
js
add
movsl
and
pop
cmp
cmpb
pop
pop
in
mov
push
and
xor
xchg
inc
insl
daa
inc
inc
ljmp
out
int
adc
sub
sti
dec
or
loopne
les
jns
push
mov
mov
lods
inc
jno
bnd
add
mov
adc
ss
cltd
jne
xor
out
jo
ret
js
jmp
add
add
fs
repnz
cmc
xor
and
cmp
xchg
fdivl
leave
xorb
sbb
aad
pop
xchg
mov
fdivp
push
mov
das
jecxz
je
lret
mov
outsb
add
jns
pop
scas
shlb
push
xor
dec
mov
cmp
and
movsb
pop
out
xor
cmp
mov
in
dec
rcrb
inc
pop
fndisi(8087
sub
stos
imull
test
xchg
sbb
xchg
out
cmc
xorl
dec
mov
in
xor
arpl
jns
and
inc
or
mov
insb
rcrb
lret
pop
adc
jno
xchg
ljmp
dec
and
jge
mov
cmpsl
jp
js
mov
sbbb
cs
fdivs
aam
aam
enter
or
mov
inc
cld
cmpl
shll
cmp
call
mov
sbb
jecxz
cli
leave
fcoms
mov
mov
test
std
xchg
pop
fistps
jo
repz
sub
jnp
pop
rol
xchg
js
mov
jmp
jo
xchg
ret
inc
mov
push
jno
mov
pop
fwait
icebp
and
xchg
fwait
js
xor
roll
pop
hlt
mov
jmp
jecxz
jmp
fistl
sbb
int3
dec
stos
and
setge
rcl
cmp
out
and
sahf
das
pop
out
dec
int
hlt
insl
test
iret
mov
push
mov
out
das
mov
jle
or
ja
ds
add
daa
inc
mov
mov
xor
int3
mov
cmp
dec
push
jb
mov
frstor
insb
lret
add
cmp
jb
mov
dec
mov
js
lcall
push
xchg
jge
cltd
cmpsl
arpl
clc
cmp
mov
aad
dec
sti
ljmp
xor
add
imul
cmp
xchg
ss
shll
imul
xor
adcl
adc
in
arpl
addr16
xor
dec
call
mov
mov
nop
insl
pushf
into
sbb
dec
mov
stc
leave
imul
jne
jmp
loop
roll
fsubrl
rcrl
pop
pop
std
xor
cs
mov
sub
xor
mov
mov
sub
mov
pop
xchg
js
jb
xchg
adcl
es
in
cmpsb
sahf
lret
loopne
mov
icebp
add
fnsave
mov
xor
xchg
adc
lods
sbb
sub
mov
fnstcw
adc
cmp
ja
test
pop
enter
mov
adc
mov
lods
inc
jmp
mov
and
into
gs
nop
sub
mov
dec
sbb
mov
fsub
outsb
lret
loop
hlt
and
icebp
jecxz
ja
cli
rcrl
fs
movsb
hlt
leave
in
dec
push
movsw
mov
mov
or
leave
or
les
jmp
inc
xlat
outsl
iret
add
dec
pop
aaa
xor
test
stos
shl
iret
fs
mov
cmp
aam
mov
or
cmp
addl
pushf
enter
sbb
stos
sub
cltd
jp
lods
leave
fbstp
pop
sbb
clc
xor
jae
jnp
push
stos
push
movsl
std
jmp
mov
fldcw
cmp
inc
loop
push
mov
add
test
xor
mov
mov
dec
dec
xor
dec
mov
cmc
pusha
push
repnz
mov
mov
inc
cmpsb
cmpsb
mov
and
js
cmpsb
ds
adc
imul
dec
and
adc
jo
aas
cmp
pop
cs
aad
mov
push
in
loop
jb
mov
jns
aam
and
push
and
addr16
sub
lods
mov
aaa
dec
push
jl
inc
ret
call
lret
cmpl
cld
arpl
aaa
into
or
mov
inc
xlat
shll
sbb
push
movsb
repnz
add
outsl
outsb
dec
loope
pop
or
cmp
jbe
int
jb
xlat
jae
cmp
push
push
std
or
cmpsb
sub
xor
rcl
cmpsl
test
jno
mov
outsb
jge
clc
jmp
movsb
movsb
int
add
sti
push
add
pop
inc
xor
les
and
mov
push
lds
pop
mov
push
fmuls
ljmp
lods
xchg
test
mov
dec
cmp
addr16
repnz
sub
push
movsb
call
lods
push
int3
in
inc
clc
dec
aad
mov
xchg
lock
aaa
lret
fadd
ljmp
insl
sub
rol
push
in
add
pushf
ljmp
sub
push
mov
xchg
stc
pop
dec
out
push
fstpt
sub
adc
stos
popf
mov
add
icebp
pop
inc
adc
push
push
jns
gs
dec
inc
sub
rorb
lret
xor
mov
out
lret
adc
subl
cmc
or
imulb
push
dec
mov
push
mov
je
cmp
sahf
in
inc
jb
sub
sbbl
fisttpl
fisttps
fisubrl
pop
adc
stc
mov
jg
aas
sub
scas
out
bound
mov
lret
lahf
and
xor
out
mov
mov
adc
pop
mov
es
jge
ljmp
icebp
jne
or
fldt
std
test
mov
subl
pop
lods
ljmp
lods
cld
je
adc
mov
mov
lds
into
lds
nop
mov
mov
mov
xchg
push
or
pop
aam
sub
add
gs
lret
adc
sub
iret
add
lret
xchg
inc
repz
mov
fistpll
js
dec
repz
js
js
sbb
subl
xchg
pop
sbb
inc
insb
loopne
pop
sub
jbe
push
adcb
aad
inc
icebp
popa
jae
xchg
mov
mov
clc
sub
adc
ss
loope
jae
in
gs
jne
cmpb
popa
xchg
or
nop
pop
jne
mov
mov
insl
or
mov
adc
dec
xor
movsb
fisttpll
ret
mov
jae
cmpsl
pop
test
pop
add
mov
es
nop
loop
es
mov
push
daa
sbb
add
in
insl
aad
push
fwait
cmpsl
mov
jbe
push
cmp
mov
fimull
mul
leave
cli
inc
lods
pusha
adc
ficomps
push
scas
mov
sti
jnp
out
cmp
cmp
outsb
xchg
jl
mov
xor
js
es
xor
add
lea
mov
xchg
ja
jl
xchg
lods
scas
push
xor
fwait
lret
cwtl
push
push
cmp
repnz
xchg
out
test
ljmp
loopne
sbb
insl
std
mov
and
pop
jae
fneni(8087
orb
xchg
fxch
aaa
je
cmpsb
cld
xor
mov
push
js
cs
mov
into
mov
cmpsb
pushf
stos
or
push
stos
popa
cmp
inc
cld
dec
test
out
mov
sub
or
hlt
sbb
inc
ret
fsubrp
movsl
int3
inc
cmc
xor
je
sbb
out
cltd
mov
pop
lds
js
hlt
mov
xor
adc
cmpsb
xor
cmpsl
stc
jne
inc
sub
and
outsb
inc
pop
adc
lods
push
into
inc
enter
outsb
fwait
lret
or
cmp
imul
sbb
and
dec
bound
push
out
jne
ret
jb
mov
adc
xor
or
and
cmovnp
push
fimuls
inc
mov
lret
mov
les
cmp
sub
mov
fmull
ds
cmpsl
mov
mov
cltd
mov
pop
push
mov
cld
test
or
push
imul
pop
fstpt
stc
lods
sahf
add
xor
pop
jl
addr16
sbb
mov
dec
daa
inc
lods
sbbl
mov
stos
pusha
mov
in
cmpsb
inc
imul
ds
push
fstpt
andl
push
dec
aaa
popa
pusha
jns
or
aaa
loop
jp
jle
pop
adc
and
push
in
cli
iret
bound
pop
sbb
dec
mov
ss
xor
scas
xlat
or
sbb
int3
js
pop
ss
loop
test
enter
mov
push
nop
cmp
or
leave
int3
push
dec
jb
gs
push
jnp
clc
jg
lds
loope
imul
ljmp
repnz
std
cltd
mov
sub
es
xor
ret
or
sarb
jne
mov
repnz
sbb
adc
sbb
mov
adc
lods
mov
jne
icebp
lds
aam
inc
fbstp
mov
push
xlat
cmpsb
jp
xchg
push
mov
lea
sets
mov
fidivrs
mov
sbb
mov
out
inc
xlat
xor
inc
or
roll
sahf
or
ss
dec
mov
in
stos
stos
mov
adc
dec
adc
sahf
mov
mov
cmpsl
cld
xchg
popf
addr16
cmp
iret
jp
pop
mov
aaa
fdivrl
jne
ficomps
cmp
or
jno
xor
call
imul
sarb
out
pushf
ret
mov
inc
addl
pop
sti
dec
ret
or
sub
dec
fiaddl
bound
les
dec
insb
fists
xchg
into
stos
aad
xor
dec
repnz
mov
mov
std
pop
pop
fisubs
add
mov
jb
cmp
dec
mov
fucomip
push
subl
aaa
test
popa
outsb
lods
mov
ret
js
push
sub
and
or
idivb
adc
shl
stos
fstpt
scas
cmp
decl
cs
inc
xchg
nop
negb
push
stos
dec
jnp
jle
repnz
and
mov
sub
sbb
lahf
fs
sbb
cwtl
gs
mov
or
pop
or
pop
mov
lds
xor
jae
mov
jnp
stos
int
fildll
arpl
fwait
shlb
cmp
addr16
mov
in
add
leave
dec
mov
mov
stos
pop
or
pop
outsl
sbb
sbb
xchg
push
inc
xchg
dec
push
pop
fwait
call
jle
cmp
arpl
mov
repz
adc
sti
inc
gs
mov
xchg
jl
lds
out
loop
or
lret
outsl
mov
jo
cmp
inc
inc
iret
repnz
loope
mov
xchg
mov
mov
push
ds
sbb
std
cmpsl
and
ffreep
cs
inc
bound
imul
test
fidivrl
xchg
in
scas
mov
cmc
inc
jecxz
sub
push
sub
repnz
push
mov
add
hlt
in
mov
cmp
lock
decb
out
ja
jg
clc
out
lahf
stc
lret
cmp
icebp
insw
dec
dec
loop
scas
and
push
fsubl
mov
xlat
cmpsl
rorb
pop
or
cld
xchg
xchg
loopne
decb
add
imul
mov
jns
enter
cs
pop
pop
clc
std
xor
imul
or
into
test
lcall
sub
sbb
rcrb
or
shr
stos
ret
out
inc
xor
ds
sbb
push
or
mov
xchg
cmc
mov
add
int
or
lods
dec
mov
scas
in
mov
push
xor
icebp
xchg
mov
dec
and
sti
cli
stc
dec
dec
enter
out
imul
ss
fwait
xchg
fildll
xchg
cltd
dec
popf
mov
mov
repz
adcl
fs
cmp
sub
mov
fbld
lods
pop
pop
addl
jg
fcoms
lahf
out
pop
pushf
popl
xor
or
arpl
in
add
testb
or
lcall
jge
popa
ljmp
pop
add
or
pusha
loope
inc
std
enter
cmp
xorl
mov
xor
sub
inc
pop
ljmp
adc
mov
inc
insl
push
aam
lahf
out
jb,pn
aam
adc
pop
xchg
iret
push
jae
push
in
sbb
enter
clc
std
in
aas
jnp
xchg
fistpl
scas
fadd
adc
sub
mov
push
repz
lds
in
dec
xchg
stos
gs
mov
lods
mov
sub
arpl
aam
test
sti
xorl
jle
insl
data16
xchg
sub
pushf
push
fwait
push
jne
fwait
shll
jg
pushf
and
lret
test
dec
mov
into
cld
adc
mov
jns
mov
pushf
push
cltd
test
test
jp
add
stc
dec
std
insb
out
add
loopne
jo
or
dec
mov
cltd
clc
jp
rcll
je
push
pop
stc
outsl
inc
movsl
xor
sub
aaa
arpl
int
xorl
ss
scas
loop
ret
mov
lahf
movsb
leave
pop
add
add
scas
lret
dec
popa
xor
jle
es
pop
add
repz
hlt
sbb
or
test
cmp
in
es
mov
cmpsl
sub
cmpsl
xor
cmpsl
pop
xchg
inc
mov
dec
or
mov
shl
inc
ret
pop
xor
cmp
aas
sbb
and
xor
dec
or
fsin
adc
dec
lock
add
inc
push
lcall
out
stos
outsl
sbb
inc
daa
cmp
shl
mov
mov
out
sbb
jne
jmp
adc
insb
dec
sub
inc
jo
ret
mulb
push
jbe
pop
push
mov
repnz
xor
xor
push
add
rorl
mov
cmp
cmp
xlat
int
cmc
xchg
xchg
sub
rcrb
jno
pop
lock
sbb
sub
pusha
movsb
jmp
int3
cmp
out
ret
outsb
push
pop
daa
sarl
cmp
xchg
cli
mov
and
push
mov
lds
pop
xchg
loopne
sub
test
add
je
pop
mov
fnstsw
stc
pushf
adc
movsl
inc
fwait
inc
mov
icebp
or
mov
mov
xchg
ja
xchg
and
or
ret
js
lcall
shll
jmp
inc
movsl
je
cli
push
jp
out
push
imul
fnsave
icebp
sbb
stos
jae
sbb
fsubrl
jp
in
sub
fmull
jmp
cmpsl
jno
jns
xor
push
shrb
cltd
sbb
outsl
sbb
inc
movsb
jo
shrb
pop
mov
enter
in
xor
pop
sti
mov
cmc
andb
cmp
jnp
inc
and
add
icebp
aad
adc
pop
aaa
dec
cwtl
ret
movsl
ja
cmp
sbbb
add
push
imul
fs
inc
fcompl
dec
fwait
xor
mov
mov
stos
aaa
cmp
xor
clc
mov
xchg
movlps
js
cmp
shlb
int3
sarb
push
vmptrst
mov
mov
out
xor
ret
rorb
pop
mull
add
mov
aad
push
xchg
fcoms
dec
mov
aam
inc
repz
push
dec
mov
cmpsl
ss
out
mov
jge
adcl
psubq
movsb
fmul
imulb
push
shlb
xchg
sbb
mov
xchg
mov
lds
lods
mov
jnp
scas
lock
sbbl
mov
inc
jo
push
mov
and
adc
aas
pop
stos
test
ja
xor
insb
cwtl
cmpsl
pop
ss
or
dec
sub
cmp
jl
jmp
push
push
in
inc
pop
sar
pop
mov
jl
or
jb
mov
push
leave
inc
loopne
jp
arpl
push
pop
adc
dec
add
fwait
or
jl
add
aaa
push
mov
xchg
mov
mov
test
sub
jo
or
scas
cld
out
jns
call
push
shll
ret
dec
xlat
test
xorl
ss
pop
inc
jmp
in
outsl
mov
arpl
add
mov
and
adc
mov
mov
popf
in
jae
sub
das
notb
popf
xchg
mov
push
insb
call
push
cwtl
sarl
stos
pop
iret
scas
call
clc
aaa
fdivs
imul
jae
dec
clc
iret
xchg
fs
sbb
xor
out
inc
mov
and
in
xchg
lret
shr
cltd
push
and
and
sub
notl
inc
ljmp
in
sub
enter
push
int3
or
jecxz
push
dec
popa
stos
and
vucomiss
pop
inc
add
sub
popf
es
or
xchg
in
mov
jbe
fwait
sahf
sub
fcoms
jmp
push
sbb
mov
syscall
inc
xor
inc
in
cmp
into
or
shl
pop
sub
adc
ret
fadd
pop
xor
leave
dec
inc
xor
shlb
lcall
fbld
sarl
or
dec
jnp
jp
test
sbb
movb
cmp
sbb
cmp
jae
push
pushf
cmp
negb
xchg
jo
pushf
inc
pop
xchg
jne
xor
adc
js
dec
xchg
daa
bound
stos
sub
aam
dec
pushf
lahf
pop
shrb
jecxz
mov
mov
pop
cli
aas
popf
jp
mov
push
mov
mov
in
and
in
iret
neg
push
lods
rcrl
push
adc
outsb
adc
cs
add
cmovg
jnp
cmpsb
push
loope
dec
lea
mov
cs
fsubl
mov
stc
sahf
xchg
loop
rcrl
es
das
mov
aad
push
nop
cmpsb
movhps
lock
fdivrl
jmp
pop
cltd
leave
push
shl
push
jp
sbbb
arpl
xor
popa
mov
mov
faddl
push
roll
ds
cmp
mov
dec
push
cmp
pushf
inc
jo
dec
arpl
js
mov
out
js
xchg
adc
movsl
int
and
je
dec
adc
rol
xchg
shlb
addr16
lea
dec
mov
clc
xor
adc
cld
out
pop
push
inc
cmp
aaa
test
jns
add
cli
in
aaa
mov
mov
or
sub
pop
pop
cs
aad
sahf
jns
adc
fwait
lret
stos
jo
cmp
pop
cmp
cmc
sub
iret
adc
jo
clc
in
ret
jns
scas
inc
loope
and
mov
dec
cltd
sub
in
dec
cs
inc
dec
pop
fcoml
data16
pop
pop
ret
jnp
xor
jecxz
sub
mov
fadds
jge
add
fsubr
leave
in
adc
adc
xor
in
movsb
in
jo
sub
jg
pop
test
leave
pop
lds
add
cmp
push
adc
sub
pop
or
shll
mov
cmp
mov
lahf
lock
jo
and
pop
jle
andb
cltd
outsl
lret
cltd
loopne
mov
insb
sahf
or
push
xchg
cld
xchg
xchg
sub
cmp
ja
push
and
repz
xlat
sbbl
aaa
loopne
push
cltd
lea
xchg
aaa
filds
fisubs
mov
mov
popa
xchg
add
and
sbb
repz
xchg
lea
push
dec
dec
dec
out
xchg
sarb
add
or
sub
mov
add
adc
pop
inc
je
rorl
movb
loope
sti
jmp
and
dec
icebp
ljmp
mov
mov
ds
mov
fcmove
dec
addr16
xor
fdecstp
and
or
and
lahf
cli
andl
pop
popf
add
popf
mov
or
mov
fimuls
in
je
push
repz
lret
push
xorl
xchg
jo
sbb
and
leave
clc
mov
sbb
cmp
pop
mov
jbe
bound
push
jecxz
pop
push
jge
mov
push
xchg
mov
sub
jg
add
shrb
pop
cwtl
fistps
cld
sbb
cmp
add
dec
stos
jns
mov
subl
sub
xor
adc
outsb
cld
in
nop
cmp
mov
cltd
cli
xor
lods
xor
push
repz
inc
lret
notb
xor
out
dec
xor
xchg
pop
jne
fcoms
bound
mov
mov
in
add
loope
sbb
push
jbe
jge
adc
stc
call
int3
jecxz
lods
repz
out
jno
ljmp
adc
stc
mov
xchg
inc
add
ror
inc
xchg
dec
push
bound
in
adc
jmp
hlt
jecxz
push
cmpsb
mov
es
fisubl
xor
stc
or
push
pop
push
add
inc
enter
pop
sub
imul
mov
in
inc
cld
stc
push
hlt
and
leave
lret
movsl
lods
fidivs
adc
sbb
dec
ss
repz
test
call
pop
je
add
xchg
xchg
xor
aad
jp
push
aaa
movsb
call
mov
sub
or
clc
push
addr16
ret
clc
ficoml
pop
ds
xor
sti
ret
sbb
arpl
xchg
cs
pusha
push
push
mov
jge
cmp
cs
mov
test
dec
jns
pop
daa
jle
jno
scas
push
dec
std
mov
add
lcall
loopne
lods
add
aad
sbb
or
inc
pusha
rcll
lods
mov
pushf
or
xor
push
sub
sbb
mov
imulb
pop
orb
loopne
daa
shl
nop
andl
pop
repnz
sbb
cmpb
cwtl
movsb
insl
or
je
sbb
jmp
add
cmpsl
xchg
sbb
jmp
cmp
xchg
adc
loope
xchg
loope
loopne
sbb
pop
sbb
push
cmp
inc
enter
sarb
sub
mov
repz
lock
sbb
dec
jl
sub
cwtl
xchg
imul
xor
sbb
shlb
jl
arpl
xor
push
xlat
xor
dec
push
push
pushf
loop
xor
add
shl
and
jo
sahf
leave
jge
inc
mov
cmp
subl
movsb
pop
push
mov
or
pop
adc
stos
sbb
xor
jne,pt
ficoml
mov
insb
stos
popf
xor
jge
add
xor
cmpsl
cmc
mov
inc
pop
sub
es
mull
pop
dec
cmp
sti
lods
int3
fdivrs
int3
lods
cld
pop
or
addb
dec
adc
test
jge
pop
adc
xchg
shlb
testb
xor
adc
mov
jecxz
sti
xor
popa
cltd
movsl
sbb
mov
aad
xchg
repnz
dec
jg
aad
jb
dec
in
imul
iret
aaa
and
test
push
ja
movsl
in
sub
pop
lcall
scas
cmpsl
xchg
stos
sub
call
ljmp
andl
push
mov
xorb
iret
test
out
pusha
mov
or
div
jbe
add
push
daa
repz
pop
rolb
sub
pop
xchg
xlat
mov
cld
jl
std
jl
imul
sub
inc
and
sub
cmp
cmpsb
jg
mov
inc
xor
dec
test
js
add
repnz
cmpsl
jb
rorb
loope
stos
leave
sbb
fimull
outsl
js
pop
in
fdivl
in
pop
lcall
and
lods
pop
xchg
loop
mov
pusha
sti
inc
std
movsb
popa
pop
mov
shrl
sbbl
cmp
xchg
repnz
bound
inc
push
push
stc
cmc
mov
cmpsb
xor
fisttpl
mov
jge
sbb
inc
aaa
pop
xchg
or
sti
gs
cmp
cmp
or
dec
in
hlt
mov
repz
mulb
ja
dec
mov
outsb
sbb
pop
push
or
lods
jmp
push
imul
inc
fisubs
scas
xchg
rorb
adc
inc
daa
inc
mov
cmc
inc
repz
sub
inc
or
je
pusha
pop
cmp
mov
fcmovu
push
add
jge
xor
test
xlat
push
data16
fstpt
inc
inc
jae
add
shrl
inc
jmp
xchg
iret
dec
fiaddl
ret
sub
sahf
loopne
imul
mov
xchg
call
dec
pop
add
andl
fcomi
xor
daa
sbb
xchg
pop
dec
pusha
fwait
push
dec
int
test
mov
or
pusha
add
sbb
mov
dec
icebp
xlat
add
mov
out
inc
pop
lods
sti
push
lret
xor
jge
xlat
int
aas
pop
jb
hlt
lods
cmp
sub
jbe
xchg
cwtl
popf
xchg
rdtsc
aad
add
or
or
or
repz
jno
push
out
enter
leave
inc
addr16
stc
lret
mov
insb
cmp
dec
lret
fninit
out
mov
adc
out
bound
test
jp
fistpll
and
push
xlat
repz
dec
and
pop
inc
movb
fisttpl
call
stos
lar
xchg
loop
imul
imul
in
xchg
loopne
cmpsb
mov
pop
ret
or
insb
flds
test
cmp
xor
ret
test
fsubr
mov
ret
or
pop
mov
and
daa
jo
out
lret
fs
mov
mov
xor
arpl
push
popa
testl
popa
sbb
jge
sbb
idivb
cmp
loop
pop
sub
jno
add
inc
mov
das
cmp
dec
push
push
ret
loope
and
sahf
push
call
pop
imul
adc
mov
jecxz
subl
ljmp
scas
mov
inc
in
adc
dec
mov
push
in
sub
gs
mov
xchg
sarl
aam
std
xor
cwtl
es
lea
fwait
lahf
cwtl
xchg
cmp
pop
xchg
out
mov
in
push
and
jge
jae
push
add
insl
jp
loopne
in
roll
fmulp
mov
ljmp
int3
scas
mov
cli
ja
jl
filds
jne
push
stos
dec
aad
mov
out
sti
sub
fcomps
das
cmpsl
mov
cmp
out
ds
iret
repz
ljmp
scas
test
stc
test
in
adc
mov
adc
lods
xor
pop
jae
repnz
add
push
cltd
fnsave
cmp
xor
insl
cmc
pop
dec
push
mov
ljmp
jno
andl
inc
adc
mov
shl
dec
sahf
in
sub
mov
mull
jg
push
and
and
xor
shl
cmc
mov
push
sub
out
aas
fwait
lock
scas
add
inc
pop
sub
pop
into
cmp
ret
sub
sarl
push
mov
fistps
push
push
mov
dec
filds
mov
fidivrl
mov
stos
sbb
in
jnp
and
fwait
pop
shl
inc
push
in
dec
mov
push
sbbb
insb
into
inc
lds
and
mov
fmuls
pop
shrb
jl
fistps
push
push
dec
cmp
imul
cli
add
lods
lea
and
add
es
lahf
xchg
jge
cmpsl
shlb
cmp
mov
mov
orb
and
cmp
adc
lock
les
je
mov
adc
stos
jge
xchg
hlt
out
inc
push
push
mov
decl
notb
icebp
xor
sub
push
sbb
cmc
rep
pop
stos
in
xor
ret
scas
ds
adc
push
test
or
inc
leave
pusha
sub
pop
mov
mov
in
ds
pop
fsubl
loop
ret
ret
mov
lret
or
shrb
sbb
jl
test
ljmp
jmp
mov
push
jle
ss
scas
je
and
movsl
or
sbb
mov
stos
add
adcb
jp
cs
into
dec
out
cmp
test
hlt
mov
popf
push
mov
or
xchg
jne
xchg
xchg
jne
xchg
push
mov
daa
pop
adc
iret
subb
inc
call
call
cltd
and
scas
and
clc
jb
jmp
xchg
or
shrb
inc
inc
aad
negb
fwait
cmp
ljmp
les
sbb
mov
unpckhps
pop
mov
xchg
pop
out
imulb
repnz
aaa
shlb
lret
scas
push
pop
pop
add
orb
pop
pop
popa
lcall
adc
mov
cmp
xchg
mov
cmc
xor
clc
les
popa
ds
xchg
pop
rcl
fdivp
xor
lret
adc
pop
pop
xor
jns
inc
dec
mov
mov
pusha
popa
fs
inc
jo
lock
or
fwait
push
and
cmpsl
shrb
sub
push
cmp
pop
cli
addb
pop
jns
mov
xchg
mov
ret
mov
mov
adc
pusha
and
pop
xor
xor
xchg
insb
lods
or
repz
iret
mov
push
outsb
push
cmp
pushf
fidivrs
inc
in
or
mov
les
push
push
insb
adc
popf
or
or
mov
jmp
mov
lcall
ret
pop
sbb
insb
adc
mov
sbb
push
cmc
mov
mov
xchg
cwtl
into
pop
fsubrs
add
mov
call
jmp
lret
mov
sbb
sub
je
enter
int3
out
add
sub
cmp
popf
lcall
in
push
add
rorb
jecxz
and
mov
sub
cmpsl
mov
lds
mov
lea
daa
arpl
loopne
jae
bound
cmpsl
dec
xorl
fldcw
xchg
cmp
xor
sahf
divb
cmp
add
mov
fcmovnbe
sbb
fs
sub
xchg
jns
movsb
mov
imull
inc
xor
into
mov
out
sbb
ljmp
mov
ljmp
fimuls
sbb
and
inc
dec
lods
sub
data16
push
cmp
sub
imul
xor
push
int3
testl
pop
test
add
loopne
fs
and
mov
out
cwtl
aas
insl
xchg
int3
rcr
xor
push
xchg
inc
jns
les
int
in
dec
add
jmp
sbb
sbb
adc
fildll
mov
jns
xor
dec
mov
lds
mov
jmp
into
into
mov
add
gs
bound
sub
ja
mov
insb
xor
ret
movsl
sub
cmp
xor
inc
in
rcrb
mov
aam
incb
test
mov
arpl
fsubs
inc
mov
adc
nop
inc
mov
xchg
lds
sbbl
leave
sub
sbb
push
movsl
mov
add
hlt
push
sti
mov
roll
mov
sub
test
in
pop
xchg
push
xor
sbbb
ds
mov
inc
lock
pop
inc
aas
xchg
or
push
daa
mov
and
cmc
push
or
das
leave
shl
mov
cli
js
imul
mov
orb
fstps
xchg
jl
cli
jmp
xchg
cltd
push
pop
mov
leave
rcrl
out
jnp
adc
pop
xor
dec
mov
push
adc
fstpt
scas
adc
xor
aas
jbe
imul
add
xchg
scas
adc
idivb
sub
push
ljmp
mov
mov
shl
aad
jns
test
pusha
psrld
imul
dec
cmc
pop
cwtl
pushf
jno
add
xchg
dec
cltd
loopne
imul
lret
outsb
dec
jnp
pop
ljmp
cld
fsubrl
adc
push
xchg
lds
xor
dec
enter
outsl
stc
mov
jnp
mov
xchg
mov
movsb
in
stc
das
pop
add
push
ds
cltd
jb
scas
dec
or
jmp
testb
lahf
mov
sbb
je
sti
repnz
pop
xchg
jmp
push
das
loopne
bnd
xchg
les
xor
jae
mov
fs
or
mov
push
lock
cli
scas
sbb
cmp
loopne
xchg
push
test
sbb
add
fwait
inc
clc
mov
or
fisubrl
jmp
pop
pop
cmp
outsb
mov
into
fwait
sub
jae
jbe
repnz
roll
movsb
shl
xchg
lret
jae
clc
pop
dec
and
pop
mov
sub
mov
xor
icebp
std
mov
cltd
insl
cmc
fsubl
imul
in
push
pop
pusha
and
mov
pop
xchg
mov
xor
out
mov
sbb
mov
nop
es
ret
shr
cmp
pop
in
je
and
repz
fldl
lods
cmpsb
sti
mov
inc
xchg
sub
in
push
int3
lea
ffree
scas
movsbl
xchg
push
aas
dec
and
mov
inc
and
and
movsb
lret
inc
jnp
mov
push
add
lret
jmpw
pop
push
and
mov
pop
jmp
fildll
and
aad
outsl
mov
sub
mov
mov
pop
mov
std
add
outsb
rclb
imul
push
orl
icebp
les
jg
xlat
lods
adc
cltd
xchg
pusha
cmp
push
std
sub
shll
repz
dec
mov
pop
lret
cmp
iret
push
add
pop
xchg
das
in
ja
scas
sarb
ljmp
jae
imul
call
jge
movsl
lret
orb
js
addr16
or
fcom
lds
xchg
mov
cmp
jmp
test
fnstsw
mov
clc
push
jne
ja
dec
push
mov
cwtl
movsl
out
out
add
sahf
mov
jmp
loop
cmp
nop
insl
or
and
or
push
push
inc
sbbl
fnsave
jno
ss
imul
add
adc
in
dec
jb
lea
mov
ficoms
iret
imul
and
mov
xchg
mov
call
outsl
int
sahf
mov
repnz
lods
cmpsb
push
jl
adc
sub
pushf
lcall
sbb
pop
sub
push
sub
jp
stos
imul
fcmovnu
lock
adcb
call
enter
add
loope,pn
push
insb
inc
sub
xchg
jne
xorl
pop
pop
push
ss
lds
jg
mov
or
mov
xlat
sahf
xchg
adc
movsl
cmp
mov
jno
mov
loopne
mov
mov
int3
push
mov
sbb
sub
mov
sbb
push
jne
out
jle
xchg
pushl
cli
nop
in
adc
or
pop
fmull
stos
xchg
inc
jmp
popf
mov
scas
das
test
dec
loop
xor
mov
mov
push
into
and
test
mov
lahf
dec
mov
lahf
nop
ret
ss
mov
sbb
xor
sub
js
adc
mov
test
mov
sub
scas
push
dec
popa
jo
dec
ds
inc
sub
push
pop
pop
test
out
dec
outsl
clc
out
stos
mov
nop
add
and
add
mov
ja
and
add
stos
cld
movq
call
push
xchg
in
cmpsb
aas
mov
iret
sbb
subb
in
mov
mov
jns
test
fs
test
adc
jle
sub
je
mov
xor
ds
mov
push
loop
mov
into
clc
aaa
push
xor
or
sbb
jns
push
xchg
clc
hlt
dec
das
mov
aam
rclb
inc
lret
pop
shlb
adc
ret
jl
jg
es
sub
ss
adc
iret
mov
inc
div
mov
adc
jecxz
xor
inc
mov
xor
fdivl
pop
sbb
mov
fcmovne
push
arpl
jp
test
xor
andb
cmpsb
or
sbb
addl
and
or
mov
pop
jno
and
out
add
mov
mov
or
sbb
dec
jmp
jl
push
mov
data16
lds
dec
movsl
mov
jns
cmp
pop
adc
fdivs
mov
idivb
arpl
push
rorl
push
inc
xor
data16
mov
in
inc
or
movsl
dec
iret
ja
push
fst
rcll
divl
int
dec
lret
andb
cmpsl
inc
push
hlt
or
jecxz
jl
cmp
mov
jns
stos
jnp
hlt
inc
std
push
pop
mov
cli
inc
scas
mov
pop
xchg
aaa
mov
adc
fsubrs
int
xchg
jno
sub
pop
sbb
fwait
test
rol
adc
or
jne
pop
push
sarb
out
enter
cld
xchg
aad
sub
xor
sahf
icebp
inc
xorb
mov
mov
add
outsl
jnp
call
sbb
adc
jmp
xchg
popa
mov
cltd
aaa
adc
dec
fcompl
mov
in
inc
pop
sub
outsl
add
dec
and
mov
sub
cld
inc
dec
xchg
dec
negl
fadds
inc
imulb
or
or
js
ja
mov
lahf
js
push
mov
mov
and
mov
cmp
jmp
push
test
movsl
imul
pop
leave
mov
divb
pop
cs
lods
mov
pop
shrl
cmp
pop
fwait
das
out
in
mov
das
dec
mov
xor
ret
lret
add
sub
jae
iret
push
movsb
cmp
movsl
jp
push
fucomi
mov
cbtw
dec
mov
call
cmc
shl
and
lahf
add
sbbl
lods
jo
arpl
ret
dec
in
push
jge
push
cli
mov
fsts
out
iret
outsb
lret
xchg
push
fldenv
push
clc
mov
push
or
or
scas
stos
add
mov
inc
mov
mov
aaa
sahf
enter
jne
add
adcl
and
clc
fisubl
out
mov
cmc
sub
aas
sub
cmp
xchg
pop
pop
adc
inc
sti
in
daa
shlb
sbb
mov
lcall
add
mov
pop
push
cld
cmp
push
jno
inc
movsb
xor
push
mov
iret
mov
movsl
inc
in
cmc
bound
cmp
add
adc
mov
rolb
push
push
shll
dec
popf
sub
pop
pop
dec
pop
aas
push
rcrl
ret
int3
adc
xchg
lods
hlt
fldpi
jg
mov
xchg
std
mov
inc
cmc
addl
cli
rcrb
test
cwtl
aaa
adc
ds
lret
mov
lahf
push
cmp
or
test
loopne
inc
mov
mov
ficoms
sbb
ret
call
mov
iret
inc
stc
or
jns
incb
sub
out
dec
mov
and
pop
push
sbb
lods
in
mov
jle
sbbl
sub
or
ret
push
adcl
mov
js
inc
cmp
ror
in
repnz
mov
scas
jo
cs
pop
pop
data16
xor
jle
test
vmread
jnp
dec
stc
movsl
mov
cmp
push
test
or
dec
pop
xchg
sbb
sub
jmp
sbb
stos
jle
cmpsb
vpmacssdd
cmovg
sahf
clc
push
les
mov
cli
test
and
xchg
push
jns
sbb
and
sbb
sub
ljmp
andb
dec
ljmp
push
aas
or
cmc
adc
aam
repz
das
hlt
mov
imul
xor
ja
xchg
xor
and
fisubrl
and
xor
jl
jl
lods
push
push
cmp
test
scas
ret
lahf
imul
and
mov
cs
mov
lret
rorb
iret
inc
imul
xchg
add
je
or
scas
testl
lods
jge
sub
sub
push
std
pop
insb
aad
pop
popf
ret
loop
shlb
aaa
xorl
outsl
jnp
sbb
nop
push
push
xor
pop
jne
aad
jl
je
sub
mov
lret
in
mov
aaa
dec
imul
mov
jmp
addr16
mov
inc
push
and
mov
cli
sarl
mov
cmp
xor
sub
cmpsb
lahf
ljmp
pop
fidivs
lcall
lods
fistps
cmp
dec
mov
lea
ja
jle,pn
adc
pop
mov
lock
sbb
aam
mov
inc
out
insl
add
mov
xchg
popa
xchg
addr16
and
js
sub
stos
push
rclb
popa
xorb
adc
popf
test
test
dec
mov
and
push
adc
clc
or
adc
push
loop
divb
movsb
nop
insl
aam
mov
jno
jns
repz
call
xor
rcrl
sub
jbe
cmpsb
push
mov
dec
insl
push
cltd
xchg
push
mov
xor
add
mov
fstpt
jae
stc
repnz
mov
pusha
dec
inc
mov
add
inc
cmp
fnstenv
outsl
fwait
cmpl
xchg
bound
test
mov
mov
mov
xchg
inc
mov
adc
adc
sub
in
sbb
ljmp
push
push
movsb
xchg
mov
jne
cmp
inc
push
scas
ret
insl
insb
out
hlt
out
jnp
mov
inc
lretw
aaa
fs
fwait
mov
dec
push
mov
cmp
xchg
inc
xor
add
leave
prefetchw
or
aaa
loope
andl
push
mov
and
das
jb
aaa
push
ret
jo
shl
mov
mov
jbe
rolb
dec
test
inc
aam
mov
stos
bound
sub
lret
or
arpl
in
arpl
cli
push
aad
mov
data16
push
xchg
jecxz
dec
add
dec
lea
mov
test
loop
cs
aad
div
rclb
icebp
jecxz
or
adc
mov
stos
jo
cmpsb
mov
int
pushf
shlb
pop
xor
ret
lret
push
scas
push
adc
sub
cld
mov
punpckhdq
add
mov
mov
jbe
rorb
out
call
jns
or
jb
xchg
mov
pushf
insl
jge
pop
pop
in
out
cli
mov
stos
orl
sbbb
sub
clc
repz
jns
xchg
lcall
test
mov
lahf
jne
idiv
gs
mov
push
xchg
outsb
xor
loop
adc
fnstenv
push
jg
stos
aas
nop
or
js
outsl
jno
in
popa
addl
insb
adc
insb
das
dec
je
cli
in
scas
mov
mov
repnz
mov
pop
cmp
add
jns
cmp
mov
rorl
orb
jmp
mov
or
clc
adc
mov
rcl
jmp
andb
mov
mov
adc
gs
lcall
mov
xor
dec
mov
je
or
mov
sbb
sar
popf
pop
movsb
mov
leave
jo
mov
movsl
mov
dec
cmp
inc
or
cmp
sbb
cmp
dec
inc
movsl
or
mov
push
iret
add
in
icebp
cli
in
mov
jns
scas
mov
stc
push
fbld
and
cmc
sbb
jecxz
dec
js
lahf
je
pop
fmuls
cmc
mov
cwtl
nop
ljmp
mov
mov
rcl
cmpsl
xor
mov
aaa
push
inc
les
leave
push
xor
push
sbb
jmp
insl
lahf
out
jno
mov
add
cwtl
adc
lret
cmp
dec
mov
mov
fidivl
inc
out
pushf
ret
leave
aas
lock
sti
int3
sbb
xchg
lcall
mov
push
stos
sbb
adc
roll
lea
int3
mov
xchg
push
mov
sub
and
fcom
sub
mov
ss
push
mov
ret
fdivrl
or
arpl
je
adc
jle
mov
or
mov
fcompl
sbb
cmp
cld
xor
pusha
dec
xchg
xor
jno
cwtl
push
mov
push
shr
adc
iret
lcall
inc
or
out
rolb
fists
mov
inc
sub
bound
dec
fmuls
daa
scas
cld
mov
jno
in
and
ficompl
gs
and
pop
jnp
es
nop
scas
add
mov
mov
repz
outsl
push
xchg
rorb
jmpw
into
mov
dec
dec
and
je
inc
pop
inc
sub
addr16
push
es
out
mov
or
dec
adc
ud1
cwtl
repnz
xchg
mov
dec
mov
dec
jns
outsb
cmpsb
test
add
dec
dec
jecxz
push
mov
iret
mov
je
ret
mov
jno
jecxz
sbb
mov
sbb
mov
decb
nop
adc
enter
mov
bsf
test
testb
add
and
push
fdecstp
jno
repnz
pop
jmp
movsl
jle
xchg
lods
push
inc
push
mov
shll
out
jb
mov
jecxz
pop
push
gs
loopne
imul
xlat
mov
jne
add
cmp
rorl
lock
cmp
and
call
mov
push
sti
xlat
jae
cmp
push
fdivl
jmp
pop
mov
test
dec
or
pop
adc
add
mov
cmp
add
xor
orb
testl
sbb
inc
push
call
jp
mov
xchg
mov
pushf
mov
sub
imull
sti
mov
dec
mov
test
jecxz
mov
dec
rolb
cwtl
xchg
xchg
or
xchg
outsb
iret
sub
inc
pop
imul
negl
push
addr16
sti
inc
cmp
inc
pop
jbe
test
jge
and
or
or
mov
cld
pop
jmp
push
rorl
in
inc
lcall
cmp
stos
enter
mov
add
add
or
sbb
jae
dec
jae
xlat
adc
sbb
test
clc
jns
jg
lcall
cwtl
cmp
daa
scas
push
fwait
sbb
inc
cmp
mov
and
int
in
imull
push
mov
icebp
pop
xor
push
xor
leave
sbb
sub
lret
iret
imul
mov
lods
mov
adc
mov
sub
shlb
cmp
cmp
ljmp
enter
or
repz
mov
test
test
xor
xor
ss
lea
imul
jp
lods
mov
sub
pop
mov
adc
shlb
pop
mov
rcr
mov
adc
fnstenv
lcall
push
pop
adc
mov
in
scas
and
sahf
add
int3
aas
mov
loopne
aad
and
adc
push
pop
call
dec
sbb
fistpll
mov
and
shrb
call
cmp
pop
xor
or
cmpsb
orl
sbb
inc
cmp
cmc
aad
mov
inc
std
push
adc
data16
mov
xlat
jne
mov
sahf
inc
sub
adc
jl
xchg
push
xor
out
stc
sub
pop
or
xor
loopne
add
xlat
pop
dec
leave
add
lods
sti
stos
out
sub
sub
int
jp
jg
enter
in
xlat
jg
add
decl
add
xchg
imul
lea
ljmp
pusha
pop
push
in
lret
push
loope
mov
and
aad
jno
repnz
dec
sbb
xchg
jns
mov
in
xor
out
inc
repnz
sti
pop
stos
leave
test
ljmp
and
xchg
cs
sahf
sbb
daa
ret
or
imull
rolb
in
leave
inc
mov
into
fs
mov
fdivrs
jg
push
ret
xorb
ret
jmp
fiaddl
sub
sub
cmpsl
flds
mov
sub
js
dec
cmpsl
mov
lret
add
int3
in
jmp
int
repz
fwait
adc
or
dec
and
mov
loope
mov
pop
jae
insl
pop
pop
mov
jl
call
icebp
sarl
mov
popf
js
jno
dec
int
sbbl
imul
fistl
xlat
cmpsb
icebp
fdiv
repz
adc
sbb
movsb
xchg
out
mov
dec
outsl
jecxz
fwait
pop
sbb
and
dec
and
push
icebp
mov
cmp
pop
mov
mov
xchg
out
daa
xor
jmp
or
and
sbb
jb
mov
test
mov
cmp
imul
adc
movsl
pop
xchg
popf
mov
add
insl
xchg
out
adc
mov
mov
push
roll
jp
int3
jge
push
xchg
mov
add
or
mov
inc
rcrl
shlb
enter
test
xchg
jbe
movsb
lret
mov
mov
sbb
push
stos
in
cmpsb
inc
mov
cmp
aas
jbe
cli
pop
and
shl
call
adcb
das
dec
sahf
mov
mov
movsb
push
sbb
sub
addb
rcl
lods
xchg
int3
cmc
mov
test
fs
xchg
insl
into
pop
nop
outsb
test
sbb
inc
scas
fadd
or
add
pusha
testl
mov
leave
cli
mov
add
and
or
and
push
jp
ss
aas
aas
enter
mov
sbb
add
mov
jmp
xor
xchg
xchg
xchg
push
xor
sahf
out
bound
add
lret
and
mov
pop
sbb
push
sbb
lahf
mov
sahf
and
sub
scas
mov
enter
mov
test
sahf
insl
or
cltd
mov
push
xchg
jp
dec
dec
loope
dec
repnz
sbb
cltd
jmp
outsb
xchg
jg
call
fucomp
test
jl
call
push
xor
insb
and
iret
jne
push
push
pop
pusha
mov
test
xchg
mov
jecxz
jg
mov
or
pusha
sub
aam
iret
rorl
pop
je
and
movsb
inc
pop
xchg
dec
pop
add
lcall
push
inc
add
stos
leave
cs
or
ret
dec
lea
sbb
dec
or
or
pop
lret
enter
inc
dec
pushf
gs
push
addr16
xchg
adc
dec
sbb
js
add
leave
jno
sti
cmp
add
scas
dec
repnz
mov
dec
inc
jle
jecxz
andl
popa
cli
pop
push
sbb
push
stc
insl
das
adc
insl
mov
adc
jg
ljmp
or
out
mov
or
daa
xchg
add
hlt
in
inc
aad
mov
test
xchg
aam
sub
in
in
lods
outsb
iret
lea
push
or
fs
enter
xor
pop
pop
subb
jmp
adc
mov
fisttpll
clc
lcall
cmpb
bnd
cld
xchg
adc
test
adc
lds
mov
xchg
fucom
jno
scas
add
sub
mov
mov
push
test
int
pop
add
fcom
pop
test
std
pop
sbb
lock
repz
mov
gs
pop
inc
iret
xor
push
mov
test
sbbl
jb
jnp
xorl
mov
fs
fcoms
imul
insb
outsb
jno
jp
ja
add
fildll
mov
jno
ret
fisttpll
mov
add
mov
cmp
add
sub
sbb
mov
mov
xlat
je
bound
add
adc
add
test
ret
sub
inc
pushf
outsb
adc
cmp
cmpl
add
std
adcl
int
cmp
sbb
xchg
mov
mov
ret
jge
push
fmulp
mov
dec
mov
scas
ja
xor
sti
in
imul
cmp
inc
cwtl
inc
xchg
or
push
mov
rclb
shll
aaa
in
push
nop
or
stos
iret
ss
or
imul
adcl
jne
sub
jne
jnp
cmp
ja
mov
jle
xchg
aad
jecxz
jmp
gs
ljmp
push
lock
push
sub
jnp
rclb
movsl
xchg
lea
pop
les
xchg
lods
sub
and
jb
dec
dec
mov
fistl
mov
fildl
fsubrl
andb
cmp
and
clc
sarb
sub
adc
push
inc
shl
xchg
mov
add
aaa
setl
adc
xchg
fwait
xor
fwait
dec
push
sub
xchg
repz
je
inc
pop
mov
dec
push
add
std
fistl
xchg
sar
sub
ja
jae
std
and
mov
rcll
inc
pop
stos
xor
sub
lds
ret
ficoml
dec
shll
sbb
pop
into
and
leave
shlb
jo
jl
outsl
js
sbb
add
das
scas
and
in
adc
jne
inc
jae
sbb
daa
add
fistps
popa
dec
xchg
notb
xor
fisubl
pushf
inc
movsb
push
scas
fimull
sbb
leave
push
fwait
addr16
mov
xchg
dec
jns
jae
insb
inc
pushw
mov
sbb
aas
ret
stos
or
pop
xchg
push
das
inc
mov
mov
in
mov
or
stos
punpckldq
pop
adcl
sti
stos
cmp
lds
sbb
sbb
push
mov
dec
test
xchg
jge
data16
or
leave
mov
add
xlat
push
iret
inc
popa
add
xchg
sub
repz
adc
aam
test
out
jb
adc
pop
pop
shl
mov
lcall
movsb
insb
movsb
fcoms
lret
addr16
xor
sbb
lea
mov
add
in
jne
hlt
fldl
xchg
push
push
xchg
jg
ljmp
mov
in
daa
adc
fst
jp
pushf
test
lahf
jmp
or
enter
stos
je
push
outsl
std
imul
jno
dec
push
ret
push
dec
inc
pop
and
sub
inc
push
je
out
repz
icebp
xchg
xchg
aad
adc
xlat
subl
rcr
ds
jmp
cmpsl
shll
adc
enter
lahf
sbb
push
pop
pop
test
and
mov
cmpsb
adc
sub
aaa
movsl
repz
fsubr
jns
inc
mov
mov
push
out
gs
lock
jecxz
cltd
popf
inc
outsb
dec
and
pop
sbb
add
cld
adc
mov
rcll
mov
aas
fwait
pop
aam
xor
or
mov
psrad
xor
mov
out
xchg
jo
cmp
inc
scas
mov
adc
cmp
jb
les
sbb
cwtl
pop
scas
mov
pop
push
loope
push
inc
js
iret
loope
daa
mov
iret
ja
repnz
in
adc
rcrb
cmp
mov
push
mov
xchg
out
out
mov
add
std
adc
cmpb
mov
jecxz
push
adc
xchg
lods
inc
arpl
adc
adc
mov
xchg
and
pusha
mov
sbb
mov
fs
lds
repz
inc
inc
stos
add
ljmp
xchg
rorb
ror
and
fcomp
mov
outsb
je
mov
mov
cmp
sub
cli
mov
pop
sti
cwtl
mov
loopne
xchg
icebp
pop
mov
js
sbb
jge
add
inc
ljmp
xchg
int
xor
mov
xchg
pop
jl
add
into
cmp
mov
push
jb
push
jmp
cltd
cltd
dec
int3
push
push
fldenv
push
nop
mov
add
out
cltd
mov
inc
xchg
pop
outsl
sbb
pop
sbb
xor
out
es
mov
pop
pusha
push
std
jmp
cmp
das
jle
and
arpl
maskmovq
cltd
cwtl
mov
ds
push
dec
mov
imul
scas
cld
jmp
fdivrp
push
movsb
shrl
jb
sti
pusha
sub
fisttps
shrb
sbb
sub
or
mov
jmp
sbb
mov
mov
jmp
mov
mov
cs
dec
pop
add
mov
or
push
outsb
jmp
addr16
cs
shr
xor
inc
cmp
and
jle
pop
cmpsl
bound
js
pop
movsb
dec
sub
stos
leave
shrl
divb
jecxz
mov
push
adc
sbb
adc
dec
je
repz
add
mov
pop
jle
movsl
addr16
jae
lods
xor
jo
xchg
pop
sbb
xor
mov
mov
mov
push
test
adc
dec
mov
inc
out
push
xor
in
daa
jg
lahf
clc
nop
push
les
cmp
in
add
push
aas
pushf
movsl
dec
cwtl
pop
mov
sbb
xchg
ss
xor
xor
imulb
mov
insb
cwtl
inc
push
pop
cltd
xchg
sarl
sysret
mov
add
ljmp
adc
dec
sahf
jo
leave
mov
pop
lret
sbb
push
in
push
push
mov
iret
stos
push
jmp
xor
lods
mov
mov
mov
xorb
std
jl
mov
int3
aam
dec
jae
sbb
push
or
and
adc
aad
cltd
aas
fs
cmp
lods
mov
pop
pushf
xchg
sbb
call
jmp
fs
sbbl
bound
loop
pop
addr16
sub
iret
push
or
arpl
push
test
aas
aas
hlt
mov
in
imul
mov
dec
adc
push
dec
nop
rcrl
movsl
mov
cmp
inc
outsl
outsl
fdivrp
and
mov
xlat
clc
data16
inc
icebp
sub
jnp
and
andb
das
lds
mov
leave
mov
jbe
jge
jl
stos
dec
inc
ficompl
and
xor
jnp
add
cmp
jbe
loopne
inc
loop
adc
jl
scas
xchg
sub
mov
outsl
xchg
dec
jns
pop
push
int
or
scas
mov
pusha
push
pop
adcb
scas
insb
mov
push
push
movsl
pop
addr16
or
call
loope
sub
test
push
scas
iret
cmc
rolb
scas
xor
lcall
repnz
mov
or
int3
xchg
mov
inc
jbe
repz
xchg
push
sahf
leave
ds
ret
js
mov
xor
scas
stos
xchg
cmpsl
sbb
imul
jmp
fldl
inc
aam
repnz
je
pop
cli
inc
mov
jb
enter
cltd
test
fldenv
negl
dec
pop
cmp
sub
lret
imul
test
or
mov
mov
in
lds
push
and
push
cwtl
pop
sub
mov
imul
mov
dec
in
or
gs
push
jmp
push
push
sub
out
cmp
in
sbb
in
inc
orl
call
lds
mov
dec
daa
or
inc
outsl
fwait
inc
aas
test
adc
mov
ret
out
lods
cmp
jno
bound
xchg
push
push
clc
cmpl
sub
dec
jle
insb
xchg
jle
jg
movsl
add
test
ror
fwait
jmp
or
repnz
call
in
jb
not
inc
dec
fistpll
sbb
sar
or
aam
lret
test
fiadds
xor
inc
add
pop
inc
pop
fildl
cmp
mov
lea
shl
movsl
aam
mov
fldcw
icebp
xchg
lcall
cltd
jmp
dec
ds
xchg
mov
xchg
adc
or
scas
and
aam
stos
jp
jo
mov
xchg
lea
loopne
pop
sbb
or
icebp
stc
out
mov
pop
jle
mov
cmp
xor
mov
fdivrs
test
lcall
repnz
xchg
xchg
or
mov
insl
shr
fists
adc
add
xchg
sti
pop
dec
ret
mov
mov
sbb
push
scas
call
mov
insl
dec
icebp
push
push
int3
das
pop
and
subl
dec
pop
out
inc
sarl
pop
mov
ficompl
push
mov
pop
in
test
fimull
push
lret
in
sub
push
and
outsl
cmc
and
fsubl
mov
add
and
mov
ss
rcrl
divl
je
adc
mov
push
jp
push
xchg
mov
jg
in
shlb
add
rcll
shl
mov
pop
cmp
and
xchg
adc
stos
jmp
jg
dec
dec
push
fsubrs
dec
and
aaa
imul
mov
popf
sbb
push
out
inc
push
lahf
fldcw
xchg
add
dec
pop
lods
fucomp
jp
iret
mov
pushf
iret
scas
inc
pop
mov
push
inc
fisubl
jmp
pusha
push
es
pushf
ja
adc
xlat
xor
out
or
aam
inc
push
mov
pop
dec
and
sbb
inc
arpl
jecxz
dec
cmp
rolb
push
push
push
lods
mov
loopne
je
aas
jge
fwait
or
fdivrs
rcll
test
lds
inc
lret
in
sbb
mov
cli
or
add
dec
cmp
jecxz
outsb
sub
and
and
xchg
xor
jnp
stc
xchg
jne
test
xchg
mov
sbb
lock
mov
adc
outsl
mov
inc
ficoml
inc
mov
mov
push
adc
aam
ret
test
in
inc
add
push
repz
xor
call
xor
jmp
movsl
dec
xor
fs
loop
pop
mov
sub
or
cmp
fs
mov
cltd
jns
xor
push
das
xor
hlt
bound
cmpsl
adc
jg
pop
pop
mov
into
insl
pop
mov
mov
dec
mov
sbb
pushf
mov
out
mov
xchg
jecxz
adc
jbe
ficoms
xchg
icebp
or
fnstenv
enter
dec
pop
shll
mov
mov
dec
ds
outsb
fsubrs
int3
lret
xchg
mov
negb
movsl
dec
xchg
mov
xchg
jo
stos
roll
int
hlt
sbb
sti
sbb
jno
or
jbe
addps
decl
sarl
ret
mov
mov
pusha
mov
mov
and
js
add
mov
iret
push
mov
das
test
inc
subb
push
test
xchg
mov
outsl
dec
pop
std
mov
xchg
pushf
mov
imulb
push
xchg
sub
movl
sub
ret
jp
sub
cmp
jle
mov
inc
sahf
mov
repnz
loop
jmp
adc
mov
rolb
into
and
jns
dec
sbb
mov
fistpl
mov
adc
add
adc
pop
cmp
stc
adc
adc
adc
dec
jg
mov
stos
mov
out
sub
adc
fwait
das
lret
cmc
mov
jle
fsubrs
stos
adc
ds
push
and
cltd
sub
outsb
aas
cwtl
sub
lret
add
out
std
pop
into
out
push
xchg
mov
in
adc
push
and
mov
cmp
idivl
inc
iret
sti
lret
pcmpgtw
mov
fcomps
dec
push
lret
mov
jae
mov
or
faddp
std
sbb
xchg
scas
enter
lods
xlat
pop
jecxz
cmc
rcl
cs
sub
leave
dec
and
mov
or
inc
movsl
shrb
scas
movsb
push
sbb
pop
int3
inc
fildll
lock
inc
btr
jnp
inc
fdecstp
sub
int
outsl
sbb
and
mov
sbb
mov
adc
mov
and
nop
clc
out
add
inc
ja
cmp
or
mov
mov
xchg
mov
mov
push
data16
mov
and
mov
pop
mov
clc
jmp
lods
fbstp
push
cwtl
data16
push
rorl
loop
sub
mov
and
bound
decb
loopne
push
adc
fs
sub
int3
cmp
fs
in
adc
iret
pop
inc
addb
push
daa
xlat
outsl
call
xchg
repz
mov
mov
adc
gs
pusha
outsl
pop
xor
cs
jns
cltd
pop
mov
pop
adc
push
and
push
cld
dec
movsb
les
push
sub
and
adc
sbb
jne
sub
sbb
push
fwait
out
ja
addr16
mov
dec
mov
popf
sub
cmpsl
pop
je
push
in
or
es
adc
xchg
and
mov
adc
lods
aad
int
mov
repnz
mov
pop
frstor
arpl
inc
call
mov
ret
je
mov
jmp
mov
mov
pop
mov
pop
ficoms
cmp
fcoms
sbb
lods
xchg
aam
xchg
jg
cmp
cltd
xorl
clc
mov
aaa
ret
inc
lock
aaa
inc
jecxz
push
std
mov
fsubrp
mov
and
xchg
aaa
dec
pop
mov
popf
lret
jo
jmp
icebp
xchg
or
inc
mov
iret
into
arpl
fdivs
sub
inc
cmp
outsl
adc
rep
incl
pop
dec
call
mov
mov
jo
xchg
ret
data16
cmp
and
or
sbb
jns
cli
add
cmp
mov
mov
push
lock
ss
negb
int
xor
nop
jle
shr
fsubrl
lods
mov
mov
call
xchg
sub
out
shlb
aad
lret
jge
jb
pusha
pop
mov
cs
hlt
jmp
insb
or
add
movsb
cmp
mov
jmp
and
mov
ds
mov
inc
jecxz
mov
insl
addr16
jb
or
in
cld
push
and
push
sub
sbb
imul
jg
scas
loopne
sbb
in
sub
arpl
bndldx
jmp
out
notl
outsl
outsb
push
shr
mov
test
outsl
sarl
pop
les
sub
test
outsl
mov
aaa
adc
sub
xor
pop
cwtl
lods
movsb
test
into
outsl
stc
xchg
fsubs
notl
sbb
nop
rolb
jl
dec
call
jp
aaa
push
jb
sub
mov
sbb
jg
ss
pop
aad
fcompl
adc
iret
cmp
orb
sbb
xchg
xchg
or
hlt
in
fistpll
add
pop
add
cmp
push
dec
mov
push
mov
aas
out
add
push
add
aaa
inc
pop
dec
inc
mov
jmp
dec
nop
bound
out
adc
shrl
orl
jb
mov
or
mov
push
and
push
and
test
out
mov
pop
sbb
xchg
scas
pop
enter
clc
sub
jmp
jb
cmpsl
das
mov
pop
pop
out
test
mov
mov
scas
xchg
out
xchg
icebp
shll
mov
sbb
decl
ja
pop
outsb
mov
mov
lcall
sbbb
xlat
cwtl
cmp
add
cld
clc
add
lock
int3
popf
cmovp
inc
lcall
movsl
popa
shrl
dec
dec
lock
icebp
xor
lods
push
stos
xchg
ds
loop
movsb
dec
sbb
jp
mov
sbb
mov
cmp
pmulhw
aas
xchg
pop
mov
int3
icebp
ret
push
mov
sub
int3
pop
js
adc
dec
lret
roll
and
shll
push
fidivs
ds
loopne
mov
pop
mov
jmp
sbb
les
icebp
divb
cmp
lods
test
ljmp
jecxz
clc
scas
mov
lock
rclb
rol
cwtl
push
call
lea
loop
sti
adc
push
leave
subb
or
test
jg
cltd
mov
pop
mov
mov
cltd
rcll
shr
pop
mov
cmpsl
lret
fcoml
pop
fcmovnu
jle
jns
lea
inc
cmpsl
pop
imul
hlt
punpcklbw
add
mov
mov
pop
dec
scas
test
mov
adc
sub
scas
imul
test
mov
xlat
call
jp
in
xor
push
or
mov
sbb
lahf
mov
pop
cmp
fs
sti
cmpsb
dec
cs
fmull
fisubl
addb
lahf
mov
sbb
mov
dec
stos
pop
bound
ficompl
xchg
mov
inc
test
cmpsl
fldenv
and
scas
popa
mov
jg
fcomps
std
jbe
les
xor
jp
and
pop
xchg
and
sbb
cmp
fcmove
inc
out
ljmp
sbb
vmovntps
hlt
shrl
mov
shll
cltd
or
popa
push
jp
aaa
dec
subb
push
dec
and
xor
scas
cmpsb
arpl
out
or
arpl
dec
cmc
fldl
or
cmpsl
push
je
testb
sbb
gs
xchg
rcl
cmp
testl
and
movsb
pop
ficomps
xchg
push
leave
rcr
cmc
mov
mov
fsts
jns
mov
xorl
push
dec
sbb
adc
sbbb
push
mov
dec
mov
loope
fistps
adc
adc
int
jmp
movsb
les
gs
rcrb
bound
decb
mov
mov
xlat
inc
xchg
mov
ja
add
das
fwait
repnz
fidivl
pop
push
scas
xchg
call
rorb
int
xor
sub
xchg
push
fstpt
and
popa
xchg
pushf
jmp
fdiv
inc
rcll
cs
mov
pop
loopne
test
mov
inc
fs
xchg
std
scas
lret
dec
jp
pop
sahf
dec
dec
push
ja
cwtl
iret
mov
imul
xchg
lret
adc
inc
out
pop
ss
or
imul
roll
into
cmp
xchg
mov
cmp
pop
inc
jl
mov
jge
ret
dec
iret
add
pop
push
dec
xchg
pop
stc
add
pop
in
xchg
mov
fimuls
shl
subb
push
leave
loope
in
inc
mov
pusha
push
repnz
cmp
orb
ds
imul
dec
out
fldt
ljmp
fimuls
loopne
dec
jle
push
in
movsb
xchg
jo
xor
imul
push
pop
adc
dec
cmp
mov
jnp
call
stc
leave
loope
in
ljmp
int3
cmp
sub
ds
add
xlat
imul
insl
stos
arpl
mov
pop
adc
mov
inc
pop
xchg
push
xor
jbe
push
add
push
sti
cmp
push
pop
cmpsb
mov
jb
xchg
mov
jne
in
not
inc
in
scas
xchg
jle
fidivs
pcmpeqw
cs
loopne
ficompl
xchg
xchg
dec
cmpsb
rcr
shlb
and
lret
sub
int
loope
mov
sub
sar
fists
mov
js
sahf
jbe
xchg
insb
call
aaa
repz
ja
es
push
ss
mov
xor
imul
pop
in
push
ret
xchg
push
test
cmp
aad
pop
cmp
mov
addb
push
xchg
mov
fiaddl
adc
hlt
lea
loope
out
cmpsl
icebp
lcall
xchg
jnp
pop
add
pop
dec
jge
and
mov
and
mov
push
aas
xchg
jbe
inc
negb
adc
shrl
scas
popa
and
xor
je
fnsave
jae
out
xor
xor
sub
fiadds
std
ret
outsb
add
jno
dec
mov
inc
sti
mov
stc
dec
cmp
jbe
inc
stos
insb
mov
mov
negl
mov
cmpsl
ljmp
mov
jb
cli
sahf
add
ja
pop
adc
push
mov
addr16
sub
movsb
mov
jb
lahf
mov
dec
lret
pop
popa
and
mov
and
hlt
pop
mov
in
jl
pop
xlat
inc
pop
sbb
imul
stc
push
pop
xor
rorb
pop
lods
push
lret
cltd
in
push
push
je
je
ljmp
lds
pop
add
push
sbb
mov
xchg
out
or
and
fistpl
add
xchg
repnz
and
xchg
adc
gs
dec
int3
scas
mov
in
or
dec
cmpsb
push
add
push
adc
add
cmp
xchg
sbb
popa
mov
inc
jb
sub
daa
les
adcb
in
xchg
insl
inc
mov
xchg
imul
outsb
or
xlat
jg
xor
enter
out
leave
or
sub
xor
jns
cmp
shr
adc
jb
push
ret
imul
subb
cmp
mov
cmp
addb
aam
cmp
cmp
les
sub
add
push
ljmp
out
into
add
aaa
push
stc
sub
imull
test
bnd
mov
pop
test
and
stos
inc
andl
pop
fnstcw
mov
mov
sbbb
lea
push
ljmp
sarl
jge
outsl
sub
jecxz
adc
out
push
push
insb
cmc
icebp
jecxz
dec
lock
lahf
sbb
mov
out
jmp
cmpsl
popl
popf
pop
mov
inc
xor
outsl
out
jle
into
mov
test
push
in
and
call
and
adc
idivb
jl
lahf
lods
add
clc
xchg
rcll
push
scas
std
or
jl
das
sbb
ret
loopne
repnz
mov
repz
add
mov
xchg
lret
decb
jne
xor
push
lcall
cmc
cld
mov
add
scas
or
fs
jnp
popf
imul
repz
xor
js
int
xchg
mov
clc
mov
pop
jge
jne
test
or
imull
icebp
add
xchg
icebp
dec
lret
push
dec
adc
ds
and
cs
iret
es
iret
lea
pushl
mov
mov
xlat
les
ret
and
arpl
sti
je
shll
ret
jns
shrb
stc
mov
add
sub
cmpsl
clc
out
sub
add
mov
adc
ja
mov
mov
jl
cmp
jl
lock
add
das
clc
ss
std
jmp
aad
decl
daa
shrb
cli
sbb
dec
in
outsb
lcall
pushf
int3
mov
repz
xor
insb
scas
fs
les
mov
mov
cmp
shll
imul
sbb
mov
mov
scas
mov
jno
or
push
shlb
xor
aam
call
sarl
scas
xchg
cmp
pop
ja
mov
mov
jecxz
mov
mov
cmpsb
sub
jle
mov
cmpb
xor
xchg
int
stc
iret
in
insl
insl
scas
call
ss
ret
push
pushf
and
in
xor
pop
mov
fiadds
in
mov
in
push
or
pop
push
and
loope
sub
ret
imul
mov
ret
mov
xchg
dec
inc
pop
jae
aas
cli
xchg
arpl
es
jl
daa
sbb
inc
jo
xor
movsl
popf
ds
xor
stos
aaa
popf
std
cmpsb
outsl
lret
cmpps
or
inc
lock
jecxz
loopne
in
fidivrs
and
mov
iret
ret
mov
push
mov
outsb
loop
out
mov
mov
sub
xchg
fs
sbb
xor
jge
pop
clc
sbb
ljmp
push
mov
dec
sbb
add
jne
jnp
fidivs
fidivrs
mov
jmp
call
fnstenv
pushf
aam
idivl
nop
mov
popa
stos
mov
mov
gs
dec
out
mov
add
sbb
bound
std
in
xor
mov
push
in
mov
adc
leave
mov
xor
testl
xchg
rep
ret
testb
and
inc
xor
test
xor
pop
stc
cltd
and
je
and
jno
jae
cmc
mov
cmp
sbb
fldt
or
into
cmp
shrl
mov
inc
sub
cmp
pop
out
dec
aaa
xchg
adc
pop
push
sbb
sub
mov
inc
das
lods
fxch
mov
or
mov
roll
add
xchg
addr16
outsb
cld
adc
lahf
sub
cmp
lcall
pop
femms
jmp
lock
in
or
adc
stos
xor
pop
addr16
icebp
mov
pop
andb
inc
xchg
cmp
add
inc
lret
movsl
sbb
cmpsb
into
pop
push
loop
icebp
adc
lods
or
jne
mov
jnp
sbb
lods
and
xlat
lods
cwtl
fcoms
mov
mov
xchg
or
cmpsb
data16
lahf
push
addps
imul
ret
sbb
jg
mov
sub
ljmp
std
add
pop
pop
insb
or
sti
or
mov
push
mov
je
jae
and
xchg
iret
mov
sti
adc
add
cmp
clc
mov
dec
sbb
aad
ss
lds
sub
jae
jge
outsl
add
xchg
add
stos
adc
std
push
movsl
inc
int
data16
jle
out
jg
popf
in
sub
cmpsb
inc
sub
sub
popa
cmc
aam
push
into
jmp
mov
mov
jno
dec
xor
pop
mov
mov
push
jge
cwtl
jns
pop
cmp
xorl
pop
or
and
ficomps
imul
jge
push
div
test
and
push
pop
add
pop
adc
pop
popf
popf
xchg
ret
sti
lcall
rol
cmp
sub
push
call
or
sub
push
xchg
xor
roll
addr16
mov
push
sub
dec
adc
loopne
out
jns
lods
scas
fs
xchg
and
jnp
add
adc
imul
adc
lods
push
cmp
add
add
test
cmpsl
dec
inc
cmp
and
dec
mov
ficoml
lods
pushf
dec
push
lock
cmp
adc
je
sbb
xor
mov
movsl
cmp
daa
cwtl
fwait
push
add
stos
jno
add
jo
ja
std
mov
fisubrl
sbb
test
xor
addr16
ret
cs
inc
loop
xchg
xor
and
inc
mov
add
mov
in
add
or
cmp
mov
jp
mov
leave
pop
repz
cmpl
mov
jne
mov
jecxz
mov
sub
aas
mov
les
jg
subb
mov
ss
loop
jno
jnp
test
mov
lcall
xchg
arpl
test
into
dec
int
jno
call
sbb
in
jnp
add
cmp
andb
adc
push
movsb
jnp,pt
inc
inc
and
aas
in
mov
fnstcw
cmp
arpl
hlt
cmpb
add
and
xchg
push
loopne
sbb
negb
fsubrl
adc
test
scas
popa
fdivl
fiaddl
xor
push
dec
cmc
mov
inc
fs
push
push
outsl
xchg
fisubl
outsb
sbb
jl
cmpsb
and
xchg
xchg
aam
dec
lods
stc
push
mov
sub
das
lds
xchg
mov
fiadds
mov
mov
and
es
sbb
idiv
fimull
pop
ss
or
sub
or
mov
mov
pop
lods
xchg
cmp
xor
call
jae
incl
xchg
test
xor
imul
dec
movsb
fldenv
in
insb
int
or
nop
push
and
mov
sahf
or
push
js
imul
cli
dec
fs
inc
sub
icebp
lret
lods
outsl
push
push
in
and
cmp
mov
adc
sar
mov
mov
insl
or
repz
insb
jae
bound
lods
cmpsb
xorb
es
jnp
dec
push
cmp
or
cmpsb
mov
orb
sub
mov
frndint
addr16
dec
mov
insl
cld
bound
mov
lods
mul
adc
sbb
dec
xor
push
sbbb
push
jno
xchg
insl
inc
lock
data16
shlb
inc
pushf
pop
mov
push
xchg
cli
mov
sbb
inc
pop
fildl
push
or
pop
and
xor
sbb
adc
lahf
adc
mov
rcrl
xor
jle
pop
dec
mov
jo
aas
lock
push
xchg
cmp
mov
xchg
xchg
mov
push
les
sbbl
ds
testb
pop
loopne
inc
sub
hlt
lret
aam
out
sbbb
xlat
xchg
stos
scas
ficomps
sbb
sbb
and
arpl
shrb
in
das
add
inc
mov
push
scas
lret
lret
push
cmpsl
loop
inc
aaa
xor
pusha
adc
mov
and
int3
cmp
cs
push
repz
dec
bound
pusha
pop
lds
mov
push
inc
cmp
xchg
sahf
mov
addr16
mov
mov
mov
lahf
jb
mov
cmp
ja
pop
jb
mov
jns
int
repz
clc
stos
out
xchg
xchg
mov
xchg
jb
cwtl
jp
ret
lcall
das
lcall
add
jge
push
rcrb
in
inc
addr16
xchg
add
cwtl
test
mov
aad
or
popa
or
out
sub
or
cli
adc
dec
jecxz
pop
mov
mov
jge
add
adc
ljmp
xchg
leave
in
cmp
faddl
scas
adcl
dec
sub
fsubrl
mov
pop
add
lcall
pop
fnop
enter
mov
stos
add
ret
adc
out
sahf
iret
enter
imul
push
dec
out
sbb
mov
sahf
cmpsb
fidivrs
jge
popf
mov
mul
cmpsl
ror
lret
dec
push
js
cmp
jo
jg
daa
mov
mov
ljmpw
push
xchg
ds
fldt
cmpsb
arpl
push
int
jmp
movsl
and
jl
dec
dec
sbb
ret
xchg
lods
mov
lods
mov
dec
cmc
push
int3
mov
lret
scas
out
push
test
lcall
les
pop
arpl
movsl
adc
mov
pop
fstps
lret
xchg
or
push
add
pop
pop
and
ss
sub
xor
fldenv
xorl
test
pop
push
insb
jge
lds
dec
pop
mov
inc
inc
shlb
and
cmpsl
mov
ret
shlb
sbb
out
sub
pop
sub
js
or
dec
sub
mov
mov
sub
inc
icebp
xchg
in
iret
mov
xchg
sti
cmp
xor
add
adc
lret
jmp
sub
and
add
ret
ret
sti
dec
xchg
aad
addb
push
adc
mov
ss
or
mov
repz
sbb
lds
aam
mov
cwtl
inc
inc
mov
mov
mov
cs
or
dec
mov
enter
into
mov
int
js
mov
sbb
and
mov
fcomip
cmpsb
add
loope
push
add
or
decb
fsub
das
loope
filds
push
repz
xchg
jne
lods
pop
cmpsl
mulb
cwtl
jg
sbb
out
loopne
mov
sbb
adc
dec
mov
cld
popf
lods
fldcw
add
push
xchg
or
xchg
push
insl
in
rcrb
ficomps
jns
incb
mov
aam
and
mov
pop
adc
adc
in
out
mov
std
xor
fimull
pop
fsts
sbb
out
push
sbb
jge
or
cltd
pop
mov
adc
pop
dec
sub
clc
pop
and
xlat
out
xlat
adc
fnstsw
dec
stc
push
iret
lods
or
xor
fsub
mov
or
mov
pop
stos
pop
inc
xchg
cmp
adc
ret
jecxz
shll
adc
xchg
xor
dec
jbe
mov
ret
scas
shlb
idivl
xor
mov
push
adc
insb
pusha
push
add
or
sarl
fs
call
std
and
popf
jne
scas
sub
iret
out
mov
dec
popf
xchg
imul
push
jecxz
fldcw
dec
scas
or
cmpxchg8b
iret
mov
push
mov
out
pop
pop
imul
scas
push
jle
aaa
in
dec
idiv
out
mov
dec
push
outsl
roll
and
jo
aad
dec
sub
adc
loop
js
and
or
sub
lret
and
mov
jo
push
test
push
insb
pushf
and
pop
jle
iret
call
cmp
ja
jmp
pop
cmp
inc
loop
scas
push
fcompl
out
mov
xor
outsb
repz
inc
mov
mov
mov
add
sbb
pop
cmpsl
bound
lods
cld
out
test
loop
imul
in
inc
popf
sbb
sub
sbb
add
add
sbb
ds
mov
fs
push
nop
aad
dec
add
lods
push
inc
inc
jae
jmp
dec
rol
lods
int3
sbb
imul
nop
arpl
imul
sub
mov
adc
outsl
test
mov
mov
xchg
and
mov
pusha
arpl
mov
sub
push
cmp
cmovg
mov
mov
add
push
mov
daa
gs
cmpsb
mov
movsb
lods
xchg
and
ja
in
jno
jge
mov
ret
xor
push
and
or
pop
xor
les
les
dec
mov
jnp
jo
test
cld
xor
subb
cmp
jecxz
call
mov
test
push
ds
adc
les
inc
in
lret
dec
add
cmp
mov
mov
or
popa
nop
int
test
and
shr
jmp
mov
aas
sbb
pop
and
pop
mov
mov
mov
jl
and
shlb
jge
lods
dec
and
test
and
int
mov
or
std
test
out
test
repz
inc
push
sti
mov
faddl
push
rcrl
lcall
sarb
push
mov
lcall
or
mov
mov
mov
mov
test
popf
dec
jae
jae
jno
mov
push
test
stos
movsb
pop
mov
inc
imul
xor
pop
push
cmp
and
mov
or
and
xchg
sarl
test
insl
ss
push
mov
and
or
mov
icebp
mov
lea
adc
aaa
jp
xchg
adc
add
mov
mov
aaa
pop
sahf
xlat
scas
mov
loopne
leave
enter
push
mov
movsb
leave
inc
bound
adc
test
jg
dec
rol
and
scas
divb
xchg
sbb
xor
out
sbb
or
push
cmc
ljmpw
out
fwait
mov
xchg
jo
je
push
lea
push
pop
repz
or
inc
fcmovnb
mov
inc
mov
add
fwait
ret
cmp
stos
and
ljmp
or
add
ret
mov
insb
pushf
xchg
je
out
xor
mov
mov
out
movsb
inc
mov
test
jg
lret
dec
and
or
fs
xor
mov
sub
filds
ja
enter
aaa
nop
out
jb
cmp
shrl
cmp
lds
add
sarl
jns
popa
xor
aad
add
push
pop
sub
test
je
xchg
cs
lds
and
xchg
push
and
imul
fisubs
stos
sbb
dec
call
imul
or
jmp
ljmp
sbb
dec
inc
add
ficompl
test
mov
sub
inc
in
inc
dec
and
leave
je
cld
or
scas
loope
mov
cmp
and
add
insl
xor
scas
mov
cmpsl
call
in
mov
aad
add
arpl
jecxz
sbb
addb
jo
imul
and
adc
dec
inc
lret
mov
test
lds
fcomps
mov
cmp
jp
or
pop
mov
std
inc
xor
add
divb
and
sub
mov
aad
sub
fsubp
insl
adc
fisttps
and
mov
rcll
popf
or
jno
sbb
xchg
xchg
push
jle
daa
jns
fsts
es
sub
and
addb
inc
jns
xchg
push
cltd
inc
int3
jl
subb
mov
push
sti
sbb
add
ret
push
loopne
sahf
cmp
push
pop
sbb
inc
ret
int
loop
adc
sub
decb
xor
sbb
dec
sbb
insl
aam
out
inc
xor
loope
pushw
push
or
jmp
pop
dec
js
mov
in
sbb
mov
push
xchg
dec
inc
jo
das
pop
cmpb
lret
fbld
xor
xor
lods
mov
insl
or
outsl
mov
cltd
movb
and
and
cmp
fnstsw
pop
xchg
lock
jg
mov
push
xchg
mov
push
cltd
and
ljmp
fisubrs
ret
and
and
iret
aaa
es
push
daa
and
in
xchg
cmc
aam
jge
bnd
dec
es
andl
cmp
stos
push
pop
les
mov
or
mov
mov
jae
mov
mov
cmpsb
adc
mov
push
sub
aas
inc
inc
daa
fisubl
jo
add
testb
inc
ljmp
js
jns
jb
xchg
mov
xor
push
nop
or
fsts
adcl
aad
fists
cmpsb
mov
xchg
in
mov
and
rcrb
cltd
scas
xlat
mov
dec
lds
lret
xor
sbb
sahf
jecxz
add
aaa
pop
je
xor
mov
or
push
mov
out
jnp
dec
push
and
dec
push
addr16
sub
lods
cld
je
bound
ja
dec
add
fnstsw
hlt
in
cmp
sbb
loop
lods
jl
cmc
ss
mov
iret
movsl
inc
lret
dec
rorl
add
test
jae
int
aaa
inc
xchg
cmp
xor
sbb
dec
pop
daa
jbe
jl
pop
test
mov
daa
xchg
je
pop
lahf
add
lods
sahf
xor
mov
pop
addr16
mov
inc
movsb
neg
mov
nop
xchg
stc
mov
push
imul
jmp
add
add
ror
mov
dec
adc
ret
inc
popa
xor
leave
or
cmp
jle
rolb
sub
sub
test
negl
cmp
cmp
popa
sahf
dec
ljmp
xchg
push
fisubrl
popa
pop
fcoml
jb
lcall
inc
lea
sub
shl
insl
pop
push
cmpsb
jl
mov
jl
fdivs
dec
cltd
cs
push
scas
cs
dec
push
or
test
pushf
mov
imulb
add
jl
mov
cs
je
das
mov
pop
arpl
inc
aad
pop
mov
mov
xor
adc
jg
cwtl
pop
inc
addb
lods
inc
fistpll
pop
xchg
pop
rorl
mov
aas
dec
inc
addr16
in
xor
mov
or
gs
aad
lods
pop
cmp
xor
lock
mov
ds
or
inc
pop
jo
xchg
xor
sub
mov
inc
andl
xchg
hlt
stos
adc
std
js
xchg
jge
xor
push
push
pusha
ror
sbb
out
dec
pushf
xchg
and
aaa
jbe
hlt
inc
sahf
jae
stos
ds
adc
loope
jno
test
xor
jmp
fsub
bound
or
repz
cmp
in
rcll
loope
pop
sub
aam
adc
lock
xchg
mov
aam
push
mov
lods
inc
cmp
mov
jmp
push
push
sbb
sbb
int
mov
inc
sbb
adc
or
mov
push
ror
movsl
test
mov
movsl
sbb
dec
jl
add
xchg
aad
shlb
xchg
adc
movaps
inc
add
sbb
arpl
stc
in
pop
test
mov
ret
mov
mov
add
adc
imul
jg
cmpsb
inc
adc
and
and
inc
lret
jns
pusha
cmp
cld
fs
daa
cmp
pop
cld
jne
es
sahf
and
arpl
adc
popf
addr16
daa
lods
in
addr16
dec
dec
push
sbb
pop
aas
dec
cmp
cmp
mov
imul
or
iret
cmpl
roll
ret
cmpsl
xor
jbe
cs
fcompl
or
insl
je
data16
jbe
cmc
and
aam
cmp
pop
xchg
fnsave
mov
sbb
mov
aam
je
bound
mov
mov
push
lds
call
mov
jbe
ret
pop
jle
lods
fistps
nop
pusha
sarl
and
sub
adcl
fdivs
icebp
iret
cld
cmp
rolb
js
fcmovnbe
jl
movsb
andb
cmp
movb
jl
int
inc
cmp
mov
jle
push
pop
cs
pop
bound
sbb
sub
mul
shlb
cmp
mov
push
fiaddl
adcl
lea
lock
dec
loopne
enter
divb
pop
or
scas
mov
shl
lret
gs
lods
sbb
in
js
dec
cmpsl
scas
lret
jle
sbb
in
xlat
add
push
cmp
xchg
sbb
mov
leave
cmp
dec
rcl
jne
test
imul
pushf
cmp
sbbb
out
xorl
lds
push
mov
and
dec
or
cmp
gs
cmp
leave
jmp
test
inc
cmp
outsb
inc
movsb
and
pop
lods
add
push
dec
inc
sub
mov
je
mov
xchg
inc
cmpl
std
adc
mov
sbb
pop
lea
xor
push
mov
shll
push
insl
mov
test
adc
dec
loope
arpl
lds
mov
pop
lods
leave
sahf
rorl
and
push
inc
or
xchg
mov
fldt
fwait
mov
addr16
mov
dec
imul
push
mov
cltd
pop
jge
shrb
lods
or
xchg
cwtl
imul
jbe
add
scas
lret
in
lahf
xchg
rclb
rcrb
sub
popw
fisttps
js
xor
adc
popf
cmp
xchg
jl
mov
stos
daa
sahf
lock
inc
bound
cmpsl
push
out
sar
mov
cmp
add
jae
cmc
push
push
and
pop
hlt
cli
mov
mov
lcall
and
mov
jecxz
add
test
hlt
ret
inc
not
in
jmp
push
cmp
daa
rorb
mov
jmp
jo
mov
pop
movsb
xor
cld
mov
push
dec
cmp
xchg
mov
mov
xchg
push
pop
lret
jnp
inc
xor
xor
inc
mov
jge
sub
add
notl
sub
jnp
or
xlat
xchg
lds
addr16
fadds
cltd
sbb
movsb
lods
call
and
adc
dec
pushf
xchg
lahf
lds
sbb
lea
in
jae
cmpsl
inc
cmp
out
rclb
inc
shrl
xchg
andl
jo
xchg
cmp
mov
pop
cmp
js
sbb
xchg
pop
cmpb
sbb
and
mov
pop
jb
mov
fsubrs
pusha
and
mov
xor
popa
or
inc
jg
mov
rcll
fld1
jo
jmp
dec
or
int3
cmp
repnz
mov
stos
dec
adc
das
call
jnp
mov
xlat
scas
arpl
xor
pusha
or
sbb
enter
cmp
ja
push
into
xchg
xor
data16
mov
xlat
xchg
jne
arpl
subb
xchg
das
inc
daa
mov
sub
xchg
popa
test
je
outsl
sbb
xor
mov
fs
in
std
mov
mov
es
xor
mov
xor
mov
jne
lcall
js
push
mov
mov
roll
or
push
mov
and
in
sub
or
xlat
xlat
xchg
int
xchg
orb
aam
dec
adc
inc
mov
xor
lret
subl
mov
sbb
loop
test
sbb
je
int
ret
pop
lret
loope
and
test
xchg
xchg
lds
fstpt
lret
mov
sti
lcall
es
or
sub
addr16
mov
push
repnz
in
xchg
inc
sub
bound
and
xchg
lock
divl
mov
loope
jnp
repnz
or
and
adc
xchg
mov
sub
xor
cmpsb
mov
test
sbb
in
arpl
std
jns
mov
icebp
mov
inc
fistps
repz
or
xorb
shlb
xor
les
or
sti
mov
imul
jbe
sbb
out
imul
dec
push
xor
aaa
and
test
mov
add
ret
fldz
fisttpl
adc
push
xor
clc
jnp
xlat
mov
imul
dec
or
fdivrs
ja
out
data16
or
push
add
cli
pop
call
pop
cmc
pop
add
and
or
mov
pop
cmp
jle
das
jns
xchg
sbb
inc
cmp
in
xchg
sub
lods
iret
cmp
sarb
cmp
shr
insb
or
mov
pop
mov
pop
or
mov
pushf
xchg
xchg
in
push
movsl
stc
push
inc
jle
mov
mov
xchg
sub
sahf
clc
pop
sbb
fsubl
lea
icebp
rolb
pop
sahf
mov
push
fs
pop
pop
cmp
inc
mov
mov
bound
dec
xchg
daa
mov
shll
and
ficoms
mov
sti
aad
ds
pop
enter
pop
insb
push
jl
nop
dec
push
cmp
rol
mov
and
pushf
sub
lret
add
cltd
xor
mov
mov
icebp
jge
sbb
into
mov
int3
push
int
or
mov
cmp
ss
sbb
mov
mov
mov
mov
inc
push
xor
inc
mov
hlt
rcrl
jge
or
in
inc
mov
scas
fildll
cmp
pop
dec
int3
pop
sub
inc
sbb
outsl
out
popf
fcmovne
fnstcw
inc
jl
mov
sub
popa
or
sbb
nop
xchg
call
popf
push
xor
or
mov
lcall
push
mov
sarl
and
outsl
cltd
gs
sbb
mov
lret
nop
push
inc
xchg
dec
lahf
pop
sub
out
call
jp
mov
lahf
test
ljmp
insl
mov
sub
scas
sbb
add
adc
dec
xor
cmp
or
add
jae
cld
sahf
push
xchg
jno
or
inc
repz
hlt
mov
pop
call
add
je
rolb
in
gs
xor
pushf
add
push
inc
fbld
or
popf
shl
jge
lock
fsubr
sbb
mov
lea
add
mov
mov
cmp
and
push
scas
adc
hlt
testb
mov
dec
push
xchg
mov
push
xchg
inc
jne
cld
dec
daa
adc
dec
sub
inc
sub
out
push
sti
mov
push
push
dec
jo
mov
xchg
rcr
mov
enter
arpl
adcb
nop
sbb
cmp
jmp
or
stos
test
mov
inc
leave
mov
mov
popl
lcall
pop
lea
call
int3
and
and
push
ss
dec
jno
adc
jne
or
cwtl
mov
dec
xchg
wbinvd
sub
mov
add
jge
mov
fidivrs
sbb
mov
scas
jmp
dec
sub
mov
push
jo
clc
xor
lock
addr16
and
orl
mov
mov
mov
arpl
pop
shrb
inc
xchg
jmp
add
mov
mov
push
jns
je
and
fistps
in
aam
out
xchg
jno
inc
out
or
sbb
push
out
inc
xlat
scas
sub
nop
pop
or
sub
ljmp
and
sub
dec
and
in
jge
ret
push
or
mov
jne
aam
xchg
fadds
sub
js
loope
in
insb
outsb
outsb
pusha
sub
lods
lret
dec
push
fucomp
outsl
pop
cmp
sbb
push
sub
sub
loop
ret
push
add
movsl
push
mov
cld
les
outsb
mov
std
sti
cmpsb
cli
inc
cmp
mov
dec
and
mov
fiadds
nop
out
xor
mov
sub
sbb
push
stc
sub
inc
mov
lahf
outsl
xchg
inc
cmp
jne
enter
data16
je
pop
test
sti
mov
fs
popa
mov
cmc
push
jge
add
lea
or
imul
and
push
push
push
push
sub
dec
pop
push
adc
test
aad
pusha
xchg
or
adc
sahf
jge
xor
fcmovb
popa
outsl
sbb
push
sub
jg
lret
jns
mov
fidivrs
nop
je
outsb
push
inc
jns
outsb
pop
loop
jb
mov
loop
jo
popa
call
int
fnsave
xor
push
or
xchg
rcrb
stos
push
imul
subl
add
mov
cli
jns
cltd
push
jmp
add
mov
cwtl
hlt
outsl
mov
xchg
dec
or
lea
fwait
inc
push
icebp
mov
and
scas
adc
std
cmp
imul
fwait
repz
push
cmp
or
sbb
or
add
iret
sahf
iret
push
pop
arpl
sub
adc
dec
cld
imul
xor
mov
fldenv
add
jbe
push
pop
mov
mov
xor
mov
dec
ficomps
jo
ret
dec
dec
mov
es
mov
out
rorl
test
mov
mov
xchg
inc
std
sub
cwtl
addr16
stc
sub
int
cmp
insl
mulb
cmp
lods
sbb
mov
inc
sub
icebp
stos
dec
add
lcall
and
pop
mov
pushf
rcrl
lret
lahf
adc
mov
sbb
jge
ficomps
arpl
cltd
fwait
xor
dec
lods
cvtpi2ps
jne
xchg
sbb
sti
jae
test
arpl
dec
mov
lds
fildll
ret
add
mov
add
outsb
into
popa
adc
cs
cmp
ficomps
cmp
mov
lods
fidivrl
int3
data16
xchg
cmp
inc
xchg
xchg
xor
mov
in
ret
ja
ret
cmc
push
xchg
inc
adc
dec
cmp
cmpsb
fstps
dec
lds
popa
adc
mov
pushf
and
pop
leave
mov
xor
mov
imul
ljmp
mov
adc
roll
rcrl
and
and
sti
pop
mov
xlat
cld
test
in
je
sub
js
xlat
push
js
sub
ljmp
sub
hlt
iret
sbb
mov
or
or
lret
inc
pop
insl
inc
and
xor
mov
adc
iret
pushf
outsl
add
loopne
pop
js
mulb
pop
adc
mov
dec
or
stos
ret
bound
sbb
jns
mov
sbb
divl
jo
and
cmp
or
aas
rcrb
divb
inc
jle
dec
and
enter
shll
in
pop
or
inc
add
add
pop
mov
pushl
pop
icebp
mov
or
pop
fucomi
out
xchg
outsb
cld
lock
cmp
jns
rcrb
out
cmpsb
outsb
pusha
and
insb
out
enter
xchg
xorl
cld
int3
int3
clc
and
jb
dec
xchg
xchg
lods
jecxz
and
mov
sub
xchg
into
add
ret
push
inc
daa
push
imul
aaa
clc
mov
cwtl
mov
mov
pusha
lds
mov
test
lret
mov
mov
mov
jne
repz
popf
lock
or
mov
pop
pop
insb
jp
lds
cltd
xor
js
cs
inc
push
lea
stos
sub
pop
mov
xchg
sahf
jmp
push
sbb
fwait
jne
movsl
xor
sub
cli
dec
pop
add
push
dec
mov
aaa
cmpsb
aaa
add
in
mov
jg
sub
mov
add
lea
je
and
push
jns
cmp
mov
jns
adc
sub
sbb
xor
insb
push
inc
push
mov
dec
inc
pop
gs
and
roll
cwtl
push
adc
sbb
pushl
cmp
out
jae
andb
out
in
popa
dec
in
inc
jge
fstps
in
enter
repnz
test
mov
out
dec
mov
aad
mov
repz
ret
test
push
les
nop
pushf
xchg
ja
int
add
cmp
nop
popa
aaa
dec
aad
sbb
imul
nop
cmp
push
jbe
push
enter
jp
test
mov
loopne
outsl
sub
add
in
ret
bound
gs
test
mov
ss
sbb
lea
int
xor
jge
fwait
ret
mov
in
scas
mov
sub
bound
push
stc
mov
sub
cmpsb
cld
add
dec
outsl
loopne
rorl
cltd
cwtl
sub
push
test
movsb
push
aam
inc
and
idivl
inc
icebp
in
addb
pop
and
mov
adcb
ret
lret
bound
test
in
filds
fldenv
cmpsl
pop
cmp
push
test
div
xor
push
fistps
loop
mov
add
push
mov
xorl
movsb
mov
and
sub
out
psrlq
push
cld
pop
lods
sbb
and
xor
push
mov
imul
mov
stos
and
call
pop
xor
pushf
inc
imul
jb
mov
in
es
aaa
lods
adc
or
movsb
ljmp
bound
shrl
in
sti
jnp
mov
dec
xchg
cmp
in
xchg
mov
adcl
in
pop
add
cmp
push
js
inc
and
jl
sahf
inc
inc
out
call
cld
mov
xor
sbb
lret
out
jmp
sub
cmpsb
xchg
and
ds
emms
lret
mov
ret
mov
jge
shll
lahf
test
sbb
scas
push
pop
jmp
mov
test
mov
sbb
test
fsubp
cwtl
dec
int3
mov
ljmp
cltd
int3
xchg
ljmp
jae
add
movsb
xor
jp
dec
cmpsl
lcall
pop
xchg
lcall
xchg
cmp
cltd
in
shrl
mov
pop
data16
cmp
and
sub
test
inc
imul
cwtl
repz
popf
jmp
repnz
xor
mov
jo
test
cltd
lods
lock
jl
popf
pop
xlat
xchg
sub
dec
mov
xor
mov
mov
fs
test
cltd
jl
scas
xchg
jbe
test
sub
add
stos
push
in
clc
xchg
jbe
repz
push
sbb
rorl
fistpl
and
sbbb
sahf
adc
xor
xchg
xchg
sahf
mov
test
sarl
shlb
xchg
roll
aas
inc
dec
pop
mov
jl
or
fnsave
fstl
jb
cli
sub
dec
ss
sbb
ljmp
sub
cmp
jecxz
dec
jecxz
outsl
or
mov
jmp
sub
cmp
std
mov
inc
xor
test
mov
sub
rorb
in
pop
stos
xor
test
sub
xchg
int3
xlat
ljmp
std
add
inc
sbb
or
push
outsb
and
fisubrs
and
sbb
std
xlat
and
mov
add
mov
daa
aaa
popa
sbb
xchg
jne
inc
into
fildll
xor
jns
inc
xchg
pusha
pushf
mov
sub
xchg
pop
push
insl
xchg
lea
outsl
insl
negl
sub
subb
push
movsb
sbb
push
addr16
sub
adc
repnz
ss
das
movsb
mov
test
xchg
sbb
push
add
sbb
inc
fnstcw
stos
int
popa
lret
jge
loope
loopne
and
pop
lcall
pop
and
mov
mov
std
iret
test
sbb
in
sbb
adc
scas
xor
mov
fiaddl
fldcw
inc
lds
lahf
sbb
xor
pop
sbb
jge
xchg
in
inc
adc
add
dec
sbb
icebp
xchg
inc
jnp
cs
mov
ret
dec
inc
leave
stos
call
call
cmp
push
sbbl
push
push
pop
test
cmp
xchg
aas
adc
dec
data16
ficomps
dec
pop
enter
fwait
mov
test
stos
mov
aad
clc
loop
inc
mov
pushl
nop
xchg
imulb
adc
js
and
dec
lods
stos
stos
jo
clc
xchg
adc
push
cltd
pop
xor
aaa
fidivrl
mov
push
ror
cs
int3
roll
scas
jo
lcall
jb
mov
mov
movsb
mov
arpl
cmpsl
mov
ss
pop
call
add
ss
push
mov
xchg
out
sub
aad
mov
inc
fisttpl
fs
mov
mov
outsb
pop
int
and
lods
fimuls
xlat
ret
in
outsl
ret
dec
pop
loope
arpl
int
jno
dec
adc
pop
repz
cltd
push
cmpsl
or
mov
mov
and
jns
in
xchg
push
pop
rcll
push
lret
adc
sahf
add
mov
jle
jnp
lret
aas
aad
push
mov
add
adc
sub
test
out
iret
daa
inc
mov
xchg
mov
xchg
pop
loope
inc
sub
imul
test
in
iret
lods
fwait
mov
push
adc
lret
push
rclb
mov
jecxz
insb
test
cld
push
xchg
adcl
out
mov
push
mov
mov
outsb
add
or
out
cmp
mov
repnz
mov
fmuls
xchg
adcl
sbb
inc
aas
loopne
cmp
adc
popa
mov
lods
frstor
sub
add
gs
cltd
pop
push
jl
inc
shlb
addr16
cmp
cmpsl
mov
adc
cmp
push
nop
sbb
stos
sub
ficompl
and
or
lcall
insb
aas
mov
std
shll
or
fisubl
imul
outsl
idiv
mov
jae
xchg
mov
add
ja
add
mov
ds
and
pushf
gs
xchg
pop
clc
test
aas
jae
push
in
xchg
movsl
inc
rcll
sub
pop
sti
mov
lds
dec
mov
andl
jp
sbb
inc
jp
cmc
sub
scas
inc
in
inc
les
movsl
outsb
inc
dec
jl
ljmp
push
int
lahf
or
cmp
sar
inc
insb
enter
and
mov
mov
and
cmp
cmp
sbb
mov
stos
outsl
jbe
dec
fildl
mov
jbe
ljmp
ret
stos
pop
fldt
call
cmpl
adc
or
lds
mov
fwait
lods
lock
mov
dec
adcb
push
inc
mov
ljmp
add
or
mov
lods
push
inc
jmp
ljmp
arpl
mov
shrb
or
xchg
ja
clc
arpl
sbb
mov
out
enter
sar
xor
mov
xor
setg
test
push
push
push
fldcw
xor
inc
mov
add
rcrb
sbbl
mov
mov
cmp
test
and
push
fwait
xor
dec
shlb
out
testb
jae
dec
mov
jns
cmp
xor
pushf
pop
into
lock
xchg
mov
pushl
cmp
and
nop
lcall
movsl
and
daa
or
mov
mov
mov
fstpl
addb
mov
lods
mov
jp
shll
xlat
inc
aam
popa
in
pop
int3
iret
mov
jl
add
jnp
jg
xor
lock
shl
aas
fdivrs
mov
or
pop
and
mov
in
xchg
inc
fwait
rcll
pusha
in
scas
scas
outsl
pop
test
out
or
inc
xchg
jbe
std
shll
xchg
sahf
adc
push
push
mov
and
inc
aaa
cmovl
sbb
push
insb
mov
pushf
pop
or
dec
out
xchg
jp
inc
rolb
pextrw
adc
insb
ljmp
xchg
add
cmp
enter
fs
in
mov
inc
or
lahf
iret
and
ds
popa
cs
sub
and
dec
mov
rol
out
push
out
and
idivl
pop
lods
cmp
adcl
lea
xchg
stc
icebp
jne
lahf
cmp
add
ljmp
jae
and
into
les
aas
sub
testb
loope
jmp
pop
jecxz
bound
lret
sbb
rorl
inc
out
jne
inc
jb
jle
jb
fdivs
mov
lret
xor
clc
fists
pop
xchg
push
xor
or
push
push
mov
add
and
aam
mov
xchg
jl
cmpsb
stos
push
dec
inc
rcrb
rolb
sahf
fcomip
out
sbb
mov
enter
and
xchg
push
jg
inc
and
push
inc
or
gs
pop
dec
fdivrl
scas
aad
sub
test
xchg
ds
fildl
bound
repnz
inc
sbb
mov
or
jae
adc
jle
call
lea
inc
jmp
inc
xlat
stc
cltd
ss
push
mov
icebp
xchg
call
cli
sub
or
fwait
adc
movsb
dec
pop
fucom
mov
add
je
adc
push
outsl
pop
push
outsl
add
in
add
sbb
and
jns
sarb
mov
push
mov
add
fists
js
fsubrs
inc
mov
pop
fbld
cmp
jno
insl
test
enterw
pop
ja
sbb
lock
inc
jno
mov
xorb
lods
mov
lds
or
inc
lods
sarl
test
cmc
xchg
cmpsl
cs
insb
scas
jbe
push
add
or
add
gs
out
and
fisubrl
add
mov
outsl
fdivl
das
in
jnp
cmp
jl
in
mov
fs
jb
jge
inc
stos
sbb
adc
inc
cmp
sbb
inc
jno
pop
jge
bnd
imul
mov
pushf
sub
lock
pop
loope
mov
and
or
adc
loopne
test
inc
stc
sarb
fsin
push
loop
cld
dec
in
jns
mov
jp
lods
ret
jno
out
pop
lahf
mov
xchg
push
divl
clc
stos
mov
push
add
sub
pop
sahf
mov
std
adc
dec
lods
mov
daa
push
sbb
push
loopne
daa
mov
xchg
inc
rcr
pop
lods
fs
jmp
and
jnp
cmp
cld
pusha
out
jae
leave
mov
adc
and
ljmp
jb
push
out
shlb
ljmp
in
in
sub
push
xor
and
fisubl
neg
aad
inc
push
cmp
push
orb
popa
data16
das
test
dec
pop
mov
std
fidivrs
inc
dec
xchg
push
icebp
popf
mov
or
mov
jnp
testb
fmuls
incl
jne
jle
hlt
cld
sbb
pushf
jbe
gs
cmpsl
jb
fmulp
xchg
test
cmp
loop
rcll
imul
inc
push
rcrb
mov
clc
dec
pushf
lahf
ret
jecxz,pt
dec
shrb
out
pop
insb
fmuls
mov
stos
stc
push
scas
and
dec
out
add
push
pop
mov
xchg
xchg
xor
lcall
ret
sbb
das
call
mull
mov
pop
mov
shlb
jge
inc
adc
mov
test
jg
out
sub
and
test
mov
or
mov
jl
out
mov
dec
iret
mov
ss
cmp
mov
xor
ret
inc
jb
sbb
mov
adc
daa
dec
jne
inc
in
lds
pop
push
rcrl
pop
xor
jno,pn
push
inc
push
sbb
add
sbb
jb
add
xchg
pop
xchg
dec
xchg
dec
daa
jo
sub
movsb
sub
test
imul
inc
in
faddl
fs
jbe
sub
and
lds
sub
mov
xor
pop
sbb
fs
test
arpl
in
cmp
ds
push
std
xchg
dec
clc
test
cmp
adc
sbb
popf
clc
hlt
dec
aaa
data16
insl
xlat
leave
pop
lock
pop
push
jnp
orb
shl
repz
mov
push
loop
mov
les
sub
sahf
inc
rolb
jne
pusha
xor
pop
push
cwtl
xchg
mov
leave
fstpl
insl
sub
pusha
mov
mov
fimull
sub
jg
cltd
addb
or
ja
fst
rclb
push
cltd
push
mov
and
mov
lock
jno
sub
adcb
pop
ja
pop
mov
movsl
push
shrl
in
in
fistpl
cmpb
xor
stc
xor
mov
lea
cltd
jge
shr
sub
fisubl
loopne
mov
or
stos
jecxz
subb
in
xor
jo
inc
mov
out
mov
hlt
sub
lret
inc
xor
and
mov
test
xor
mov
daa
mov
int3
xor
or
xchg
fistpll
sub
ljmp
cmc
scas
add
sub
jno
push
shl
and
sbb
dec
rcrl
daa
add
scas
xchg
roll
out
adcl
mov
addl
cmc
xchg
fisubrl
adc
lods
les
xlat
mov
sbb
or
mov
or
mov
movsb
adc
push
inc
mov
add
fsubrl
arpl
pushf
out
push
rol
add
dec
and
imulb
jb
add
shr
push
ss
shrb
or
sbb
in
xlat
push
outsb
enter
mov
test
xchg
fcomi
jnp
cltd
je
sbb
rolb
mov
push
pop
jb
pop
outsb
pop
mov
aas
imull
jnp
movsl
adc
das
in
pop
pop
int3
jo
stc
lds
mov
daa
not
mov
jmp
mov
push
stos
aaa
ds
mov
xchg
aas
sub
sub
push
mov
push
iret
jo
fcmovb
or
lahf
dec
prefetch
or
imul
mov
imul
adc
dec
mov
xchg
xchg
sub
jbe
push
aas
adc
sbb
fs
fimull
and
mov
clc
push
rorb
or
stc
add
xchg
jle
inc
inc
dec
iret
inc
jl
add
jmp
repz
adc
in
loope
push
pop
sar
push
out
scas
test
cmpsb
pop
sbbb
dec
jb
mov
les
mov
dec
xchg
lock
popa
data16
popf
push
jge
jp
imulb
xchg
mov
or
mov
inc
dec
xlat
xchg
pop
push
pop
mov
xchg
jmp
push
iret
adc
in
cmc
dec
hlt
jb
dec
repnz
dec
push
dec
push
lret
xchg
cmpb
sub
stos
das
mov
shr
jecxz
sbb
xchg
xchg
sub
cmp
in
inc
fwait
mov
jnp
or
xor
inc
jmp
test
into
jg
orl
jl
std
and
test
adc
xchg
insl
outsl
jmp
aas
cli
mov
cmp
aam
loope
fnstcw
mov
lcall
pop
xor
test
mov
cmp
scas
sub
into
lods
xchg
dec
das
lcall
xchg
int
repz
loopne
xor
hlt
nop
out
insl
mov
ret
lods
mov
sbb
mov
shl
ja
xor
scas
test
xchg
sub
jns
arpl
and
mov
fwait
or
lcall
mov
and
and
repnz
mov
xchg
ret
aam
cli
aaa
pop
out
outsl
xchg
push
mov
dec
xor
and
jbe
jno
fimull
xchg
jbe
xor
mov
js
and
jmp
sbb
outsb
out
test
scas
jmp
mov
sti
pop
or
lods
lret
xchg
mov
sub
lahf
mov
lods
loope
fcmovne
shrl
sahf
pop
add
jge
lret
mov
jae
xchg
xor
or
out
sahf
xlat
ljmp
les
xchg
inc
pop
ret
cmpb
aad
adc
dec
fists
jae
jg
jle
lods
dec
adc
pop
xchg
dec
stos
stos
in
dec
lcall
test
loopne
int3
rolb
std
outsb
and
fwait
xchg
out
imul
ds
mov
lods
jmp
xor
mov
lahf
xchg
lods
add
or
jo
or
rol
je
or
cs
std
mov
jg
loop
popa
imul
fs
nop
mov
xor
lds
or
test
xchg
out
pop
fwait
bound
inc
repnz
insb
push
insl
xchg
push
aaa
fcmovne
gs
leave
stos
add
je
jecxz
adc
lea
push
aad
fmul
inc
mov
stos
cld
sti
loope
xchg
imul
jecxz
push
fimuls
xchg
push
aad
orl
inc
mov
xor
or
push
xchg
push
xchg
out
clc
nop
jmp
inc
mov
cmpsb
jno
jmp
bswap
and
scas
addb
xor
imul
add
xor
loope
xor
hlt
and
cmp
jmp
in
popa
push
je
shrl
inc
or
cli
jle
lret
aas
lock
mov
cmpsb
test
adc
cmc
adc
test
scas
sbb
mov
movsl
stc
push
mov
xlat
inc
xchg
and
adc
and
dec
mov
imul
add
les
cs
addl
sbb
xor
fdivl
mov
rol
fsubrs
xor
lret
push
test
aam
and
xor
and
cmp
jns
push
pop
mov
fwait
test
mov
ss
incb
adc
sub
or
dec
icebp
jp
nop
and
jp
mov
aas
adc
xchg
jp
pop
mov
stos
test
fs
stc
inc
lahf
testb
mov
cli
or
xchg
mov
ret
lods
jne
enter
mov
pop
pop
sti
hlt
dec
sarb
std
adc
das
inc
xchg
aam
xor
fstps
push
out
aam
out
jmp
bound
jo
push
adc
pop
push
popa
add
idivl
jbe
jns
leave
jg
fdivp
pop
push
outsl
mov
pop
rcl
mov
cmpsb
inc
cmp
xchg
mov
mov
fistpll
das
add
lahf
xchg
rcl
fsubrs
jecxz
stos
mov
cld
inc
bound
loopne
shlb
into
jg
subb
shlb
xor
dec
jne
fisubrs
jns
mov
scas
or
cwtl
push
outsb
mov
mov
adc
out
bound
jmp
inc
ljmp
mov
mov
int3
or
sti
jl
lret
mov
dec
adc
xor
les
movsl
mov
iret
test
enter
insl
daa
pop
hlt
cs
imul
jecxz
or
test
daa
insl
nop
int
inc
pop
xchg
xchg
cmp
lahf
sub
clc
cmpsb
lea
jl
or
push
mov
jne
addr16
fldenv
and
jmp
enter
iret
out
mov
iret
xchg
push
mov
and
icebp
fldl
mov
adc
imul
pop
loop
xorb
enter
adc
aas
shlb
stos
sarb
nop
lahf
popf
cmp
mov
adc
xchg
or
push
repnz
jle,pt
out
stos
sbb
das
xor
xchg
push
shrb
push
mov
sub
jp
sbb
cmpsl
into
jecxz
lret
mov
jns
xchg
cmp
je
xor
xor
mov
fstpt
shlb
sbbb
nop
pop
mov
hlt
cmpsb
pop
xchg
lcall
mov
adc
dec
lock
push
push
enter
sbb
movsl
xor
xor
push
shlb
lcall
adc
sub
or
arpl
cmp
dec
mov
js
add
inc
emms
test
pusha
inc
pop
xor
fdivl
loope
push
mov
adc
xor
ljmp
cwtl
aaa
sti
mov
pop
jecxz
jnp
fsubrs
mov
dec
and
ret
dec
xor
dec
outsb
lea
ljmp
imul
testl
push
loope
add
xchg
into
mov
sbb
imul
sub
adc
adc
pop
jae
movsl
popa
scas
fwait
out
pop
loope
std
sbb
sub
out
nop
and
jle
jbe
xor
popa
movsb
xor
iret
sti
push
in
imul
sbb
les
out
fdivrs
cmpsb
sahf
decl
stos
aas
je
push
rcll
loopne
fsubr
lock
jge
inc
into
adc
ret
jge
pop
scas
inc
xor
cmp
lods
out
cmp
jle
aas
das
mov
mov
enter
cs
jno
xchg
push
lcall
aad
ret
mov
dec
lds
leave
dec
popf
cmp
sti
dec
inc
cmp
inc
cmp
pop
jecxz
rorl
fs
push
or
pop
mov
in
into
mov
mov
cld
out
ss
mov
cli
test
mov
mov
sub
and
ret
sub
and
mov
xor
add
lods
jae
dec
lret
sti
inc
cmpsb
pop
mov
lahf
mov
sub
mov
xchg
gs
outsl
xor
call
mov
mov
mov
mov
jb
sub
in
jle
inc
adc
push
hlt
aaa
and
dec
fnsave
fdivrs
mov
adc
mov
fcmove
mov
int3
lock
sub
inc
test
out
xchg
and
push
sub
mov
testl
or
daa
adc
jle
lret
jp
cmp
insl
dec
xor
mov
sbb
cmp
nop
jbe
lahf
pop
sbb
sbb
push
jg
cs
pop
popa
mov
dec
dec
adc
clc
dec
xchg
sub
xlat
daa
push
xchg
popf
in
dec
cld
fdivrs
rcrl
cld
add
stc
ret
push
in
sbb
mov
je
or
mov
ljmp
jmp
repz
mov
sahf
jns
dec
in
inc
outsl
sbb
mov
pop
fld
lea
daa
cmp
outsl
es
ret
pop
pushf
fisubl
mov
sahf
in
arpl
mov
mov
jmp
fisubrl
pop
xor
cld
aaa
xor
cmpsb
lret
mov
add
sbb
or
into
push
repnz
arpl
in
sbb
add
sub
hlt
lock
scas
insl
sbb
xchg
jns
mov
sub
sbb
or
lcall
jp
mov
pop
mov
out
stos
mov
frstor
push
ret
or
jmp
repnz
dec
aad
js
movsb
mov
sbb
ja
sub
repz
push
or
xchg
mov
clc
and
dec
fnstcw
mov
outsb
mov
xchg
mov
mov
mov
rol
fnstenv
pop
cltd
mov
dec
and
jae
or
dec
loopne
jbe
aam
lods
mov
inc
push
fldl
jno
arpl
dec
frstor
ja
cmp
neg
out
repz
jae
jns
ds
add
sub
cmp
cmpsl
add
xchg
add
jg
pop
pop
sub
loop
fmuls
pop
pop
pop
or
lds
adc
xchg
dec
rcr
lret
daa
pop
jp
stc
fldt
and
lret
jg
mov
mov
out
inc
mov
stos
xor
mov
out
cmp
insb
sbb
inc
out
inc
xor
sbb
cmp
testl
es
mov
mov
pop
daa
pop
mov
pop
aam
test
mov
int
mov
add
dec
pop
mov
push
lea
iret
pop
or
jmp
sti
out
stos
ret
lcall
in
movsl
test
inc
jnp
jge
scas
pop
cmp
jbe
cmpsl
push
xor
addr16
outsb
dec
inc
mov
icebp
ds
pusha
cmp
fiaddl
inc
or
imul
scas
fwait
icebp
fisubl
sahf
sarb
mov
enter
test
loop
cmp
dec
cmp
leave
or
mov
out
jl
int
enter
dec
lods
movsb
imul
out
cli
sbb
in
sub
pop
jnp
sar
cltd
arpl
mov
incb
mov
jno
push
xchg
test
cmp
insb
jle
jne
fwait
and
inc
fbld
ss
lret
mov
inc
lret
xchg
mov
into
jg
xchg
cmc
sub
out
ljmp
inc
mov
faddl
test
and
int
jecxz
jge
aam
cmp
cld
push
mov
xchg
std
inc
pop
mov
xor
popa
pop
notb
ss
inc
inc
lds
les
shrl
lods
mov
divl
or
pop
vpcomuq
and
xor
scas
daa
mov
xchg
sti
add
xchg
sbb
test
mulb
aaa
add
mov
frstor
xchg
loop
xchg
je
sub
aam
or
fsubrs
pop
les
pop
add
mov
enter
dec
sub
js
mov
in
xchg
fadd
push
lahf
pop
cld
movsl
std
andl
or
lcall
fimull
lcall
mov
add
test
add
xchg
lcall
das
scas
cmp
xchg
push
rorb
test
js
cmp
mov
imul
inc
cmc
out
sbb
mulb
addb
iret
shlb
mov
inc
fwait
xchg
and
ret
push
mov
jns
xchg
les
mov
roll
setle
popf
fmull
adc
sbb
adc
xor
jge
lahf
push
repnz
mov
test
mov
je
out
dec
aas
bswap
mov
sub
mov
fdivrl
shrb
into
ficompl
cmc
mov
xor
pop
xlat
add
dec
dec
cli
mov
ret
fsubrs
fmull
cmp
ret
imul
mov
or
add
pop
mov
cmp
jecxz
loope
test
xor
adcb
popf
pop
dec
mov
inc
cmpsl
pop
popf
andnps
fimuls
and
addr16
sub
fisubs
lret
pusha
fs
gs
jo
jmp
fcmovb
mov
loop
loopne
outsl
lods
das
lahf
sbb
mov
mov
jecxz
ret
jecxz
int
mov
xlat
cli
data16
stos
inc
mov
dec
xor
adc
add
xor
out
push
ds
insl
jecxz
mov
ds
cs
add
cmp
cmp
ljmp
cmp
std
inc
outsl
inc
pop
roll
adc
fcoml
ret
push
ja
cmpsl
rcrb
mov
dec
xchg
mov
leave
xchg
int
stc
sub
aaa
sahf
maskmovq
push
cmp
add
aam
adc
add
push
cmp
sub
daa
jecxz
ss
jecxz
mov
xchg
icebp
je
jnp
addl
in
aam
fs
popf
xorl
mov
dec
xor
xchg
clc
or
xchg
pop
jmp
and
cmpl
in
js
js,pt
and
in
movsl
jo
add
inc
mov
inc
fistl
mov
pop
dec
arpl
aaa
push
fnstcw
idivb
jns
sbb
les
xchg
mov
stc
pop
shrl
popl
iret
push
ja
incb
push
jo
jl
jmp
add
pop
js
enter
into
fiadds
pop
pop
fcomps
daa
orl
and
xchg
fs
push
nop
sarb
push
xchg
addr16
ja
sbbb
cwtl
cmp
fldl
adc
inc
sbb
shrb
in
inc
or
in
fcoms
fucomip
add
pop
pop
mov
xor
cmp
adc
pop
scas
mov
popf
dec
push
fsts
mov
cmpsl
mov
adcl
adc
push
insl
lea
dec
js
dec
xchg
mov
and
xor
or
xchg
adc
sbb
cmpsl
pop
and
mov
shll
jbe
fmuls
add
arpl
cltd
lock
dec
jecxz
mov
imul
loope
mov
scas
adc
stos
jp
adc
mov
and
pop
cwtl
jmp
xor
mov
popa
ret
mov
in
sbb
sbb
cmp
int3
hlt
fstpt
aaa
lea
sahf
lret
jle
or
ljmp
cmp
test
push
sub
mov
add
daa
jmp
mov
fimull
leave
inc
adc
and
add
cwtl
std
adc
adc
test
adc
outsb
xor
xor
call
mulb
test
adc
sub
fists
mov
fwait
jmp
jge
mov
cltd
fs
push
xor
sub
jo
sub
jns
mov
xchg
into
pop
add
inc
cwtl
mov
mov
mov
in
mov
adc
jbe
inc
rcr
push
iret
cld
lods
mov
jge
adc
pushf
outsl
mov
cmpsb
aaa
scas
mov
sbb
sti
loope
fstpl
test
mov
pop
cmpsb
out
jne
stos
dec
mov
jb
xor
push
int3
sbb
scas
mov
inc
out
fisubrs
adc
clc
mov
add
xor
fists
pop
fdivp
push
out
imul
xchg
rcrb
cmp
xor
aad
and
stos
jge
add
sbb
xchg
sbb
xchg
in
jmp
mov
push
and
cmp
xchg
scas
sbb
cli
inc
pop
add
ljmp
push
xlat
int3
and
fbstp
bound
push
inc
xchg
push
dec
push
jge,pt
icebp
shlb
scas
out
mov
cltd
les
movb
lea
test
inc
mov
nop
mov
gs
inc
jecxz
arpl
push
call
orb
jb
lods
rolb
shrl
stos
push
add
adc
or
jae
add
mov
outsb
adc
ror
mov
dec
mov
jge
loop
cmp
jl
aad
out
rorl
int
push
fcompl
ret
sti
dec
push
jecxz
cmp
ss
mov
das
pop
push
in
adc
jo
mov
shlb
mov
pop
sub
insb
push
xor
jnp
into
popa
aam
fdivrp
bound
pushl
test
mov
jge
std
ljmp
iret
or
pop
jecxz
sbb
mov
push
in
cmp
push
incb
fst
roll
xchg
loop
fprem
push
xchg
sub
or
cmp
loopne
ds
adc
test
sbbl
mov
dec
xor
or
ss
dec
pushf
pop
xor
xchg
icebp
inc
lret
pop
aaa
mov
pop
gs
inc
sub
lret
loopne
icebp
loope
rclb
je
iret
and
les
xchg
push
jmp
in
mov
xchg
cmpsb
sbb
cmc
inc
sbb
or
mov
lock
adc
and
je
call
add
loope
lret
out
sub
add
into
sub
outsl
ds
adc
and
xor
and
in
fs
add
sub
jge
and
pop
or
inc
cwtl
add
sub
sub
add
pop
inc
lock
fdivl
dec
xchg
test
repz
inc
ret
and
std
inc
dec
or
push
xchg
mov
add
sahf
mov
sbb
pop
jl
cli
pop
or
iret
outsb
xor
cltd
cmp
or
mull
and
cmp
incl
cmp
fxch
adc
mov
ljmp
sub
and
mov
mov
pop
in
jbe
loop
imul
xlat
adc
pusha
inc
imul
scas
in
hlt
mov
or
lods
and
inc
cld
jnp
push
mov
jge
cli
mov
sub
sub
fisttps
iret
sbb
and
mov
lret
pop
xchg
inc
dec
frstor
jo
and
push
jb
hlt
cli
repz
scas
movl
xor
in
or
pushf
fs
lods
xor
sahf
mov
sahf
fidivrl
and
lods
outsl
lea
dec
fldenv
clc
push
and
sbb
sbb
mov
lea
push
rolb
test
negb
data16
js
lock
xor
fs
sahf
and
into
dec
mov
fldenvs
pop
sti
lret
pop
lock
clc
jno
lahf
push
mov
jmp
arpl
test
test
out
cmpsl
movsl
push
lock
divb
insb
insl
insl
iret
fiadds
popf
lock
popa
mov
sbb
cmp
subl
arpl
xchg
or
dec
fs
push
int3
and
out
test
call
roll
pop
cmp
pop
xchg
sar
stos
xlat
fs
mov
jo
stos
push
push
mov
xchg
ror
push
adc
mov
or
fisubrs
jno
pop
lret
test
push
jecxz
mov
lret
les
sub
mov
bound
mov
and
call
test
daa
ljmp
fdivr
adc
fisubrl
pop
adc
mov
sub
pop
and
jge
adc
imul
loopne
and
pop
ja
lods
mov
or
inc
lds
jnp
or
jl
aas
ret
jns
iret
jp
and
int3
cmp
inc
pushf
push
jl
sbb
push
inc
loopne
and
mov
popf
push
xchg
mov
xchg
add
les
adc
dec
or
sub
loopne
adc
sub
push
jne
pop
adc
push
insb
cmpsl
and
push
das
scas
or
push
or
test
jbe
rclb
xor
dec
push
fidivl
fisttpll
je
cmp
loop
inc
pop
push
insb
mov
int
into
ret
cmp
sbb
loop
cli
pop
and
in
cwtl
and
push
sub
imul
sub
int3
leave
mov
iret
sub
ss
and
sub
jmp
subl
dec
enter
mov
sbb
clc
push
repnz
test
inc
pushf
sarb
inc
pop
push
fwait
mov
push
mov
and
xlat
sub
xor
cs
loope
repnz
and
hlt
xchg
add
mov
arpl
jno
jb
out
inc
in
movsb
addr16
pop
pushf
mov
push
outsl
mov
xchg
loop
scas
inc
lret
sbb
sarb
popa
pop
xor
int3
mov
dec
dec
dec
push
ss
movsl
add
es
inc
movsb
in
or
mov
loop
lds
andb
inc
stos
js
ja
lcall
mov
out
mov
movsl
xor
in
mov
aaa
xlat
or
jae
rcrl
frstor
adc
mov
ja
lods
sub
cmc
sti
cwtl
stos
lock
shll
sbb
fs
inc
andl
cmp
pop
adc
xchg
stos
pop
add
mov
rcll
pusha
outsl
xor
xor
add
or
push
mov
push
cmpb
mov
xor
mov
cmp
fsubs
xlat
jge
dec
inc
enter
out
jne
iret
mov
sbb
popf
mov
stos
jno
dec
xbegin
inc
pop
in
testl
mov
jae
cmc
adc
xchg
jo
jp
fidivl
and
loop
cmp
aaa
push
stc
push
cmp
mov
in
jmp
jno
test
mov
inc
sub
xor
stos
jge
cwtl
xchg
adc
xor
ja
cmp
arpl
stos
cld
int
scas
jle
clc
cli
das
mov
scas
add
outsb
cwtl
sbb
aaa
scas
inc
inc
xor
mov
mov
loope
xchg
dec
add
cli
add
rorb
push
mov
lret
test
cld
push
push
test
insb
push
mov
int
inc
stc
movsb
movsl
sahf
mov
aas
mov
mov
sahf
adc
hlt
jge
cli
test
xchg
jb
mov
ljmp
insb
xor
es
mov
sub
push
imul
fdivl
cmp
shrb
popa
test
add
aaa
pop
test
dec
cli
scas
in
pop
xor
add
fidivrl
insb
pop
and
dec
dec
in
xchg
nop
jmp
jbe
and
xchg
cmp
mov
cmp
cmc
cs
and
out
inc
subb
adc
push
or
sahf
and
sub
pop
mov
outsb
jmp
pop
pop
lds
imul
sbb
jbe
out
rorb
cmc
mov
lcall
cmpb
lret
xchg
sbb
add
movsl
adc
cli
dec
mov
jne
into
adc
xor
mov
sahf
add
or
sub
sub
mov
lcall
das
and
popf
inc
fsubl
sbb
sub
fnstenv
roll
xchg
xchg
ror
xchg
js
loope
mov
dec
lds
or
loopne
sbb
jl
adc
testl
into
pop
xchg
es
jb
mov
popa
fistpll
mov
mov
fildll
popf
fwait
adc
addr16
mov
xlat
xor
cld
addr16
add
jae
push
int3
fiaddl
jmp
lea
sbb
sbb
jne
sub
lock
xchg
push
lret
lcall
inc
shll
fcmovnb
insb
sahf
andl
add
mov
repnz
bound
lods
mov
sbb
js
xchg
and
jg
rolb
inc
out
dec
pushf
cwtl
mov
adc
inc
std
jmp
sbb
xchg
daa
mov
js
repz
sbb
cmc
xor
and
and
inc
inc
sub
mov
out
push
jge
leave
mov
incl
xlat
cwtl
es
ds
fs
je,pt
or
xor
dec
test
fsubrs
ficoms
fisubl
mov
sbb
les
shlb
add
push
push
xor
into
ret
jl
cld
jmp
inc
push
mov
call
fwait
sub
mov
xchg
add
stos
xchg
jle
mov
xchg
mov
roll
iret
imulb
int3
jnp
xchg
cmc
pop
outsb
jae
pop
xor
cld
mov
rcll
inc
idiv
arpl
daa
mov
inc
cld
mov
add
mov
add
pop
test
andl
int
inc
xor
xchg
cld
movsb
out
out
sbbl
repz
pop
xchg
hlt
sbb
pushl
ds
adc
inc
mov
push
insl
xchg
shrb
clc
in
bound
repnz
push
push
fs
xchg
stc
aad
add
pop
pop
push
mov
xchg
inc
negl
test
cmpsl
and
dec
enter
fs
fstl
mov
popw
push
jge
stos
mov
jb
push
adc
imul
fs
inc
cmpsl
ficoms
out
out
shl
sub
push
jns
add
xchg
or
adc
movsb
dec
dec
jo
test
xchg
imul
outsb
adc
popf
daa
jmp
fsubp
mov
mov
lock
sub
inc
add
cmc
inc
and
mov
or
inc
push
inc
shll
xorb
outsl
shrb
ror
jg
fstpl
imul
cmp
pop
in
ljmp
cld
popa
ljmp
sub
mov
loopne
scas
xlat
ds
aaa
stos
add
cltd
imul
adc
ja
fsts
arpl
or
sbb
inc
xchg
pop
out
out
insl
pop
loopne
cmp
adc
ret
adc
test
push
pop
mov
or
xor
lods
jno
insl
pop
out
pop
mov
into
jge
mov
out
adcb
popa
in
clc
jno
loope
adc
js
and
neg
dec
cli
ficoml
cmp
inc
je
out
outsb
sub
icebp
pop
dec
hlt
push
cmpsl
sbb
std
pusha
mulb
xchg
js
shll
adc
bound
and
cmpsl
subl
shl
cmp
lret
mov
js
fadds
lret
mov
int3
dec
dec
in
je
sbb
push
xor
aam
push
ds
orb
iret
inc
jo
cmp
inc
push
sete
push
sbb
or
into
mov
std
add
fwait
cmp
xchg
or
leave
repz
mov
pop
fsub
shlb
xor
shlb
cmpb
lahf
mov
xor
xlat
mov
sbb
inc
adc
sub
clc
xchg
sbb
repz
fisttps
or
xor
fmulp
aam
mov
mov
push
jb
jnp
clc
mov
mov
jne
jb
push
sti
cs
outsb
cmp
data16
add
add
orps
mov
ja
test
inc
cmp
repnz
subb
push
xor
adc
sbb
inc
out
and
pop
mov
nop
xor
add
cltd
fsubrp
aas
dec
dec
pop
cwtl
cmpsb
lods
inc
dec
and
xorb
mov
pop
inc
inc
ss
rcrb
xor
mov
mov
fsubp
int3
ret
jmp
jp
push
iret
dec
popa
adc
mov
sub
push
jns
push
xchg
fs
jg
sub
in
or
add
cmpsl
and
aaa
testb
enter
stc
fdivrs
lret
into
xor
add
jg
lock
sub
nop
push
cmpsb
push
loope
fnstenv
mov
test
subb
xor
push
push
adc
enter
push
in
mov
loope
pop
pop
pop
push
mov
lret
adc
push
lcall
push
fadds
int
sarb
popf
or
add
lds
adc
in
and
mov
int3
pushf
shl
sbb
stos
jbe
mov
cs
sbb
inc
ds
outsl
cmp
test
mov
pop
push
fnstenv
xchg
sbb
out
sub
cmp
jns
cvtdq2ps
ds
into
insb
adc
loop
pcmpgtd
jno
cmpsb
mov
pop
sarb
gs
mov
in
cltd
icebp
fdivr
fadds
push
dec
cmc
push
pop
fiaddl
jle
jbe
cmpsb
xor
subb
adc
jno
pop
push
sti
mov
loop
inc
in
and
or
stos
jl
xor
push
jl
pop
arpl
cmpsl
sub
fs
pop
xor
rcr
scas
mov
ret
testl
pop
scas
leave
xchg
cs
orl
xchg
sti
fstps
jnp
mov
jmp
mov
and
dec
imul
movq
in
movl
loope
mov
pop
push
repz
adc
aas
imul
lcall
jo
fsubr
mul
fcom
mov
mov
push
sti
add
sti
xchg
imul
into
dec
mov
bnd
inc
fistps
dec
call
add
mov
insl
xchg
xchg
jnp,pt
xchg
call
adc
inc
adc
bound
les
pop
cs
mov
daa
xchg
sbb
cltd
jbe
popl
ficoml
sub
mov
imul
mov
test
cmpsl
outsl
and
sub
pop
xchg
testl
repz
imul
push
movsl
xor
adc
or
popa
fnstcw
xlat
aaa
push
or
test
aad
xchg
add
sub
cmp
inc
mov
xor
cmp
pop
cltd
mov
mov
xchg
iret
cmp
and
push
mov
in
gs
or
dec
cmp
pop
jne
xor
imulb
mov
mov
cli
sub
mov
xor
fwait
scas
xor
cwtl
test
je
push
jle
test
int
out
fidivrs
cmp
or
sbb
fs
add
sub
pop
xchg
xchg
lods
cld
pop
and
movsb
mov
push
adc
sub
imul
mov
mov
push
cmc
xor
mov
out
and
mov
out
mov
adc
pop
lret
mov
adc
push
dec
jmp
dec
test
scas
test
add
xchg
ret
dec
pop
dec
fidivl
sahf
inc
add
cmp
jns
cmpsb
sub
pop
outsl
pop
ljmp
int
sarb
jo
sahf
inc
roll
jle
add
lods
dec
lahf
ja
clc
pop
sub
jae
cmc
jo
lea
push
xchg
cmp
sbb
pop
daa
pop
jae
lcall
or
lret
shrl
dec
cs
mov
cmp
psrlq
std
out
jmp
aad
jns
push
mov
mov
bound
ds
ret
jmp
or
xchg
loope
stos
out
pop
lcall
jecxz
inc
xor
bsr
cmp
adc
push
into
pop
mov
xchg
or
adc
test
out
xor
xor
arpl
repz
mov
rorb
repz
jmp
push
fimull
dec
mov
test
in
shlb
or
pop
test
lods
add
arpl
rol
movsl
icebp
sbb
mov
mov
mov
or
mov
xchg
mov
jb
test
xchg
imulb
cmp
movsl
test
ret
les
movsl
into
pusha
mov
jne
and
ret
mov
xchg
and
mov
sahf
adc
fists
in
imul
imul
inc
outsb
dec
fstpl
stc
repnz
fimuls
adc
rorl
push
xor
mov
je
pop
pop
mov
shlb
xor
jecxz
leave
movsl
sub
mov
mov
rcrl
jb
push
inc
lock
ss
mov
dec
push
mov
sub
repnz
xchg
shl
outsb
fldenv
cmp
imul
das
outsl
imul
sbb
ds
mov
mov
std
xor
xor
cld
pop
or
cmpb
xchg
test
gs
addb
imul
out
jae
pop
daa
dec
push
push
cli
cmp
add
xchg
out
mov
aad
sbb
and
xchg
out
ret
pop
cs
mov
dec
cmp
push
xor
push
fwait
aad
shll
push
lret
xor
mov
insl
dec
sbbb
adc
dec
and
add
ss
adc
je
mov
lahf
fistpll
lock
lret
jbe
out
jg
shl
in
sbb
loopne
or
ficoms
cmpsb
test
rcll
or
adc
xlat
lods
repz
rcr
xor
loopne
loopne
sub
lds
xor
mov
sub
adc
ret
xchg
mov
mov
rol
or
jb
popa
sarl
inc
movsl
sub
sbb
sbb
inc
push
orb
push
in
std
mov
sbb
push
add
jo
jb
pop
cmp
or
and
add
xchg
cwtl
aaa
loopne
or
js
nop
cmp
dec
pusha
sbbb
adc
scas
movsb
leave
movsl
js
xchg
arpl
push
cmp
popa
cmp
sub
clc
mov
mov
pop
sti
pop
push
ret
adc
jg
cld
push
outsl
jp
mov
lret
mov
xor
mov
in
push
push
sub
add
xchg
pop
fsts
or
or
repz
mov
xchg
xor
inc
dec
ret
lea
mov
sbb
rolb
clc
les
xor
mov
pop
scas
pop
paddb
jle
sar
and
repnz
sub
sub
mov
sbb
cmp
pop
inc
in
pop
or
sbb
loope
stc
jge
cmc
popa
cmc
push
pop
dec
mov
test
rclb
jne
clc
clc
sbb
xchg
jns
andb
cmp
lea
cmpsb
sbb
mov
je
and
jo
cmp
or
and
or
jbe
sbb
pop
and
popf
aam
adc
jns
inc
push
jbe
fcos
lock
loop
popa
adc
jbe
das
xor
push
movsl
mov
dec
adc
roll
mov
pop
decb
xchg
sbbb
ret
pop
inc
cwtl
pop
pop
xor
and
cmp
call
insb
mov
or
add
adc
sub
adc
andl
shrl
push
inc
scas
mov
sbb
cmpsl
int3
jne
sub
dec
jmp
pop
lret
jo
mov
mov
jmp
pop
popf
iret
sahf
mov
sub
sub
adc
pop
int3
xor
push
leave
gs
mov
push
jbe
xor
add
clc
cmpl
cmpsb
adc
lods
mov
mov
jg
inc
je
out
pushf
add
dec
pop
pop
xchg
adcl
xor
es
repz
inc
mov
popf
inc
adc
scas
jbe
push
iret
out
int3
and
sbb
lods
iret
add
push
rdmsr
inc
sbbb
in
mov
cld
mov
mov
ds
in
mov
push
clc
imul
inc
cmp
push
pop
xchg
in
shll
addr16
arpl
js
inc
stc
jne
mov
ffree
rclb
mov
movsl
imul
mov
dec
push
mov
dec
push
lea
sub
stos
add
rol
dec
and
shl
adc
and
sbb
std
aaa
add
adc
fs
mov
iret
aas
fwait
cli
xor
mov
cmp
out
mov
cmp
out
lret
jecxz
lret
and
sub
mov
out
fs
popa
out
adc
pop
daa
pop
shrl
sbb
ret
mov
mov
lods
imul
test
sub
in
sbb
aam
int3
sbb
fildl
outsl
ss
push
pop
cmpb
out
push
sub
add
dec
scas
pop
into
push
scas
pop
cld
sti
jg
mov
dec
cld
sbb
add
loope
xchg
sbb
aam
shrb
push
shlb
jle
xchg
stc
jno
lret
das
mov
jbe
sbb
loope
inc
int
aas
or
cmp
push
cmp
cmc
ret
dec
int
sub
push
xor
push
dec
push
mov
jnp
in
popa
or
inc
cmp
or
dec
movsl
inc
daa
ljmp
xor
ret
scas
xchg
mov
mov
ds
outsl
fnstcw
xchg
pop
movsb
repnz
ja
fistpll
insl
cld
push
push
ret
add
testb
jae
push
cmovs
dec
jcxz
sti
bound
xor
pop
inc
data16
fisubl
hlt
sar
loope
pushf
js
mov
in
cmc
xchg
push
adc
adc
cmpsb
xchg
mov
lahf
addr16
cmpl
icebp
scas
stos
or
mov
dec
call
test
shll
xchg
loope
mov
scas
sbb
mov
add
cmpsl
mov
xor
add
fstsw
xlat
lds
imul
sbb
ret
sbb
lods
test
bound
test
fwait
mov
mov
lea
inc
insl
jns
pop
add
inc
fs
mov
xor
cld
loope
xor
xor
bound
test
out
xor
int
adc
lahf
bound
in
mov
xor
ficomps
mov
cmp
pop
jle
iret
mov
cmpsl
call
fisubrl
add
jmp
jnp
lret
jnp
repnz
or
insb
mov
out
out
enter
popa
fdiv
inc
mov
call
lahf
ljmp
or
add
lcall
add
jo
xor
aad
js
out
or
lret
or
mov
jmp
jmp
lock
xchg
or
scas
inc
imul
and
imul
idiv
cmp
sub
imul
sbb
push
fwait
jnp
into
xchg
push
mov
pop
outsl
roll
call
add
dec
mov
jecxz
xor
popa
and
xchg
push
les
inc
movsl
loop
fistl
mov
push
jle
and
push
not
shll
sbbl
add
xchg
lds
clc
and
ficoml
sbb
jo
jno
lret
ret
imul
mov
xchg
jne
sbb
testl
dec
into
add
lret
xlat
xchg
in
add
outsl
xor
push
pop
jge
pop
or
out
jl
cs
pop
scas
sbb
jb
cmp
mov
mov
add
dec
add
jle
cmp
lods
sbb
inc
and
dec
adcl
scas
out
pop
cmc
mov
fldcw
hlt
pop
lods
cld
cld
xor
out
fstpl
stos
mov
into
jno
push
std
mov
test
mov
and
mov
sub
cmc
call
cmc
rorb
mov
mov
rcl
sti
jnp
cmp
int
adc
pop
push
sbb
outsl
cld
xor
test
repnz
adc
push
bound
leave
fimull
lea
ret
lcall
cli
test
mov
jp
xchg
adc
rorb
fmuls
repnz
lods
jmp
jmp
push
call
mov
lods
fbld
push
or
inc
std
sbb
mov
pop
mov
arpl
cmpsl
inc
ss
push
jp
movsl
adc
jmp
lods
inc
in
mov
out
stos
xchg
clc
stos
push
sbb
adc
mov
and
push
cwtl
sbb
call
or
es
xchg
and
mov
add
arpl
adc
sbb
mov
adc
mov
mov
mov
sub
xchg
imul
add
test
test
and
mov
inc
jbe
mov
mov
jns
test
js
int
jno
mov
imul
rorb
test
inc
dec
sub
dec
dec
push
dec
sbb
sub
add
ljmp
xlat
test
imul
imul
adc
jmp
xor
ja
pmulhuw
and
das
mov
jl
in
insl
aas
sarl
arpl
xchg
add
fcoms
push
xchg
test
je
xor
pop
jbe
scas
adc
and
ja
xor
xor
add
ret
loop
mulb
and
insl
or
xor
test
add
push
push
bound
movl
rorl
or
fistps
imul
mov
stos
jne
outsl
cmp
jecxz
xchg
cmpl
imul
in
mov
aad
or
cmp
add
jbe
mov
loopne
mov
push
xor
scas
dec
push
mov
jp
jno
push
jb
jnp
and
loop
or
inc
iret
dec
mov
cli
mov
add
aas
outsl
sbb
cmc
mov
mov
sbb
mov
mov
xor
lods
cmpsb
lods
sbb
jbe
gs
or
rorl
jg
xchg
add
sti
xchg
mov
fwait
and
movb
or
mov
cmp
cmp
xor
sub
mov
pop
adc
lock
push
cld
into
cmp
lods
xrelease
fstl
lahf
sbb
cltd
lods
fmuls
dec
inc
shlb
xchg
xchg
mov
mov
push
ss
icebp
sti
in
je
inc
insl
fistpl
pop
ret
inc
push
fdivr
mov
movsl
int3
dec
repnz
pushf
lahf
push
cltd
add
add
pop
fmull
xchg
out
push
lret
nop
ss
test
nop
lret
lock
sub
cmc
xchg
cli
stc
xchg
lock
repnz
inc
and
pop
xchg
or
xor
sub
cmp
insb
dec
mov
xor
loope
pop
mov
inc
mov
fldt
js
jns
insb
rolb
call
lods
into
jp
push
mov
lret
icebp
stos
aad
scas
into
popa
clc
push
and
adc
or
mov
push
ret
pop
mov
xlat
pop
stos
sahf
mov
pop
and
add
pushf
sbb
inc
lret
imul
mov
shl
sbb
mov
dec
addl
leave
mov
dec
adc
or
jb
mov
mov
push
mov
outsb
test
add
jns
adc
sub
add
mov
jae
testl
es
and
jnp
add
adc
fisttpl
fs
jp
mov
mov
push
mov
mov
mov
dec
leave
lahf
and
outsl
je
xchg
dec
mov
cmp
jmp
divb
mov
add
jecxz
sub
dec
push
popf
mov
fwait
inc
dec
imul
or
lcall
and
add
push
lahf
out
mov
fstpl
pop
xor
or
jne
and
mov
inc
cmpsl
xor
push
mov
repz
cli
int3
push
gs
push
inc
std
xor
mov
mov
push
scas
dec
push
ss
hlt
sub
lods
adc
das
imul
in
push
adc
out
ja
test
scas
push
mov
jl
ja
mov
mov
sbb
es
hlt
jle
jb
scas
add
pop
mov
out
ret
or
xchg
mov
addl
cmpsb
stos
cmp
jno
repz
sbb
inc
sub
adc
pop
fdivrs
sar
xchg
adc
mov
xchg
sub
cmp
sub
lret
and
cmp
rcl
fidivl
pop
sub
test
mov
mov
push
cmc
xchg
pop
stos
popl
int
and
sbbb
into
jge
pop
dec
mov
xor
repz
outsl
inc
dec
aaa
mov
add
leave
js
bound
imul
push
mov
rorb
sbb
arpl
xchg
add
lods
fiadds
and
pop
cs
sub
iret
test
hlt
mov
or
pushl
mov
ficoms
sbb
add
jo
push
pop
mov
mov
add
rcrb
pop
adc
hlt
xchg
push
mov
int3
insl
mov
shlb
cmc
enter
cmc
jmp
inc
ljmp
mov
mov
mov
pusha
gs
int
je
hlt
xchg
push
cmp
lret
xchg
xchg
fistpl
shll
es
inc
fsts
cmp
sarb
lret
sub
popf
cli
sbb
fcmovnu
gs
mov
in
lock
popa
jns
js
data16
add
fstps
sbb
pop
iret
lods
inc
fdiv
in
jmp
sub
daa
adc
xchg
sub
add
push
sbb
mov
xlat
das
test
fiaddl
fsubl
fcmovnbe
shr
mov
inc
push
lods
xchg
ficompl
push
jno
imull
repnz
and
inc
in
pop
inc
ljmp
je
or
cld
jl
ljmp
mov
repnz
das
mov
das
fistl
pop
mov
and
sbb
inc
cld
sub
cmc
mov
dec
sti
push
lods
rorb
pop
cwtl
sti
data16
mov
inc
int3
mov
sub
push
dec
pusha
jle
and
jg
es
dec
xor
xor
dec
dec
nop
add
ret
cmp
cmp
jle
lods
iret
fisubrs
pusha
sub
mov
mov
scas
push
popf
std
xor
test
mov
jl
pop
stc
imul
popl
bound
cmp
rcll
jl
push
jno
adc
and
xchg
cli
scas
lahf
sahf
scas
pop
sub
xor
adc
or
enter
lods
movsb
sub
jp
aad
cltd
push
jmp
jns
and
aas
mov
dec
cmpsb
scas
inc
jns
lock
aas
adc
push
jmp
xchg
ss
lcall
sbb
idivb
xor
push
fldcw
xorl
add
pushf
pop
aad
mov
sahf
cmpsb
adc
xor
mov
stc
push
andb
sbb
jnp
inc
xchg
popl
jbe
mov
sub
mov
inc
mov
push
sbb
stc
aaa
pop
mov
roll
inc
fwait
movb
sti
mov
mov
dec
dec
xchg
jmp
sub
xor
dec
sti
dec
out
repz
pop
jno,pn
cmpl
ret
movsl
add
pop
aaa
out
sbb
repnz
int3
shl
call
insb
enter
dec
popf
aaa
lea
fwait
push
jge
repnz
push
inc
and
cld
sti
jns
dec
hlt
cmp
pop
sahf
jp
jbe
dec
fbld
daa
fisubrl
es
es
sbb
in
lahf
sub
cmp
sub
and
push
and
sub
js
push
std
out
lcall
mov
adcl
and
sbb
mov
add
jbe
sbb
fwait
sub
add
cmpsl
push
jo
loopne
pushf
mov
cmpsb
cmp
xor
orl
jecxz
out
dec
repnz
test
test
fisubrl
mov
mov
iret
cltd
cmp
arpl
popa
fdivrl
sbb
inc
adc
mov
and
mov
mov
add
add
inc
mov
or
ret
sahf
and
leave
xchg
push
maskmovq
divl
shlb
sar
dec
jge
mov
jne
loope
pop
mov
test
dec
repz
jae
push
inc
mov
pop
ja
lods
cld
clc
mov
cld
cli
scas
sub
daa
or
lock
rcrb
leave
aas
mov
in
out
test
aaa
jmp
jecxz
aad
sub
push
push
push
mov
icebp
inc
xchg
xor
aas
cmp
push
sahf
mov
decl
inc
out
test
sbb
std
test
test
data16
mov
mov
cltd
cmp
mov
adc
int
ja
jo
dec
add
shlb
mov
cltd
mov
inc
lahf
repnz
push
clc
inc
cli
outsl
xor
sub
loope
subb
cmpl
and
pop
sbb
movd
ficoms
xchg
test
xchg
or
and
mov
ffree
inc
add
jo
dec
arpl
mov
sti
dec
pop
and
mov
movsl
cmp
push
lock
xchg
cli
push
or
push
inc
stos
scas
dec
push
leave
sub
sub
mov
lds
mov
dec
test
pushf
jns
aas
jmp
xor
and
mov
ds
in
ljmp
and
ror
adc
mov
or
or
int
in
cmp
cli
add
mov
mov
push
mov
addr16
data16
loope
lds
dec
xchg
mov
cmp
ja
inc
int
jno
adc
adc
mov
jne
cmp
aaa
cmp
mov
inc
add
dec
adc
pop
dec
mov
pop
cwtl
stc
dec
mov
sub
fs
fdivrp
mov
add
jns
mov
and
sarb
fs
ljmp
ja
aad
cmc
add
pusha
scas
ljmp
dec
pushf
out
mov
inc
das
mov
mov
stc
inc
addl
mov
lret
or
sbb
xchg
sbb
in
imul
insb
cmp
mov
xor
loop
cmp
pop
xchg
mov
push
addb
ljmp
mov
xchg
and
sbb
push
loopne
lret
test
stos
out
push
jns
adc
mov
in
xor
cmc
pop
xadd
xlat
jne
mov
xor
les
es
jo
dec
inc
pop
xchg
xchg
cmp
test
cs
push
fnstcw
push
and
push
stos
lds
shrb
mov
cmp
xor
push
mov
scas
pop
xchg
xlat
gs
and
icebp
insl
xchg
aad
sbb
mov
pusha
mov
pop
xlat
cmp
jl
xchg
nop
arpl
mov
mov
sbb
inc
inc
fistps
pop
lock
lods
push
xlat
ret
cmp
pop
mov
jg,pt
je
divl
shrb
cs
sbb
add
fcoms
sarl
sarl
das
inc
or
cli
mov
adc
bnd
cmp
mov
les
insb
dec
and
adc
sbb
or
icebp
divb
dec
int3
lods
adc
mov
cmp
jae
ficomps
xchg
ja
push
repnz
push
xor
arpl
mov
je
xor
jmp
mov
cmpsb
inc
ja
sbb
dec
in
cltd
lods
push
imul
es
dec
or
inc
mov
push
cltd
jb
sub
jae
push
aad
jl
or
jo
psubusb
cmp
jae
les
dec
inc
bswap
lret
and
or
jae
xchg
out
lea
xchg
dec
loopne
addr16
or
out
out
sub
gs
out
enter
cmp
insb
cmc
pop
xlat
mov
jp
ficoms
pushf
imul
xchg
mul
inc
rcll
sub
aam
xchg
aas
adc
popa
fisttps
test
ret
shl
roll
jecxz
push
fimull
push
push
mov
in
sbb
xor
xchg
xchg
insb
mov
in
adc
or
repz
or
bound
test
xchg
sub
and
pop
stos
lret
and
and
cmpsb
inc
jnp
repz
or
aam
cltd
and
pop
pop
mov
in
shrb
mov
xchg
add
jl
push
jne
shrl
push
outsb
adc
or
sbb
inc
pop
imul
add
sarb
stos
add
jmp
dec
and
and
push
imul
fidivs
mov
adc
dec
dec
pop
xchg
xchg
pushf
imul
pop
push
dec
pop
dec
outsl
cmp
xchg
aad
movsl
ds
test
adc
movl
xchg
scas
insl
iret
sub
dec
or
lahf
and
insl
jns
or
mull
stc
xor
push
sub
push
fnstcw
push
fimull
sti
icebp
pop
gs
rorl
cmp
push
je
mov
lock
push
pop
mov
iret
mov
xlat
scas
aad
push
pusha
mov
out
adc
repnz
and
or
and
mov
mov
out
fdivrl
popf
mov
lea
loope
lahf
lret
jo
cmp
repz
je
sbb
mov
out
or
scas
insb
ficoms
sub
jge
cmp
stos
stc
lods
orl
mov
pop
rep
xlat
test
ljmp
rcrl
xchg
push
filds
mov
jp
lahf
sbb
das
fnstenv
pushf
mov
xchg
popa
xchg
lock
icebp
sub
fucom
loopne
jl
xchg
or
sbb
cmp
pop
xor
pop
or
ljmp
sbb
jns
repz
xchg
add
mov
push
clc
jb
pop
movsl
out
jle
mov
nop
sub
mov
pop
add
mov
inc
and
cs
rcrl
jno
push
or
jbe
dec
sub
and
add
and
xchg
ds
sub
test
cmpsb
pop
xchg
mov
adc
xchg
mov
faddp
mov
into
fs
fldt
jne
pop
jbe
btr
xchg
inc
sti
xchg
lret
fmull
xor
or
cmp
jp
shrb
scas
das
add
jp
dec
fwait
jnp
dec
mov
call
sbb
push
jno
insb
dec
inc
xchg
popf
js
fisubl
adc
cmpsb
fcoms
sbb
pop
inc
mov
cmpsb
ds
push
xchg
mov
pop
ss
dec
jno
idiv
and
jle
repz
sub
inc
dec
sub
xchg
gs
sbb
ss
push
inc
mov
cld
dec
roll
push
mov
or
stos
in
add
add
insl
and
jae
mov
sub
push
inc
dec
roll
andl
push
out
test
cwtl
or
adc
mov
ljmp
adc
sub
fisubrs
das
mov
repnz
in
in
jecxz
test
cmpsb
shlb
jno
jl
je,pn
xchg
and
jns
jmp
pop
push
notl
jae
sbb
mov
sbb
xchg
add
cmp
pop
mov
mov
dec
mov
pop
mov
fldenv
inc
mov
dec
fiadds
in
and
fnstenv
xlat
xchg
cmp
js
pavgw
push
gs
sbb
sbb
xchg
inc
jmp
mov
push
loopne
cld
sbb
jno
mov
sbb
xchg
inc
imul
pop
sub
in
es
pop
ror
dec
inc
aaa
dec
scas
rcll
push
clc
mulb
andl
in
xchg
xchg
cltd
add
insl
addr16
xchg
xchg
pop
addl
mov
push
jmp
insb
cltd
pop
cmpsb
loopne
popa
sbb
jl
dec
jge
pop
and
lcall
stc
push
test
or
inc
fisubl
icebp
rol
movsl
mov
lcall
mov
sti
pop
jo
lods
fnsave
cld
xor
aas
mov
mov
repz
xorl
dec
push
sarl
jne
sbb
test
mov
lock
inc
pop
stos
jo
adc
movsl
or
inc
les
dec
jge
inc
xchg
ja
dec
shlb
inc
test
add
aam
and
mov
xchg
add
add
jmp
jle
add
ja
lods
insb
fidivrs
push
stos
mov
jp
xchg
pop
ss
mov
loopne
enter
mov
fsubrp
and
or
cs
mov
jnp
xlat
mov
insl
shrl
lock
cli
add
mov
es
loope
movsb
lods
leave
xchg
pop
outsb
add
jl
mov
pop
sbb
test
or
dec
inc
and
das
iret
add
dec
inc
imul
inc
jl
add
cmpsl
push
fnstsw
mov
add
stos
test
add
and
das
clc
mov
mov
mov
popa
and
std
push
push
dec
lahf
adc
dec
cmpsl
ljmp
fbstp
mov
stos
popf
push
dec
out
test
xchg
dec
pusha
data16
or
sti
sbb
add
xor
adcl
xor
xchg
jp
adc
cltd
sbbb
incb
aas
fwait
and
out
mov
cs
test
mov
pop
lahf
int
mov
sub
mov
loopne
mov
jne
jns
xlat
into
pop
data16
loopne
sbb
in
stos
es
mov
jge
iret
sbb
fwait
sub
popf
xchg
scas
jae
rol
call
add
shll
mov
and
aam
les
ror
cmp
inc
xchg
inc
fcompl
sbb
cmp
dec
dec
dec
or
adc
jle
sbb
sbb
movsl
jbe
imul
mov
imul
dec
xchg
fs
popf
repnz
ds
dec
cmp
pop
jle
stos
xchg
enter
and
rcrb
xchg
shl
sbb
xchg
std
lock
jb
cmp
sbb
aaa
add
lods
mov
jl
sbb
mov
adc
mov
insb
add
xlat
dec
adc
clc
or
fsts
pop
mov
pop
sarl
lods
jp
xchg
jge
lcall
repnz
nop
jb
sbb
fsub
and
pop
ret
sub
popa
cmc
mov
jo
and
mov
ret
lret
xchg
into
pop
lret
or
xchg
mov
cwtl
lahf
roll
push
mov
ljmp
enter
jle
push
aaa
scas
mov
mov
dec
mov
roll
lods
mov
into
sti
inc
mov
jae
xchg
test
mov
fcmove
loopne
jl
mov
or
mov
repz
ss
mov
pusha
ja
sub
sub
push
hlt
dec
sbb
pop
cmp
pop
imul
sub
or
xor
fcmove
sbb
xchg
iret
inc
push
mov
gs
push
push
mov
mov
sbb
cltd
mov
in
std
dec
and
aaa
dec
hlt
fcomps
scas
and
or
mov
jno
in
out
sbb
divb
aas
jb
repnz
xchg
scas
int
cmp
hlt
mov
imul
inc
addr16
in
test
loop
cltd
xlat
xchg
dec
enter
pop
and
cwtl
lea
or
incl
mov
in
push
push
sub
je
dec
mov
xchg
mov
jno
dec
loope,pn
push
ficoml
insb
jno
mov
or
gs
cmp
imul
push
pop
cli
hlt
xlat
cmpsb
popa
jnp
jns
insl
in
mov
icebp
je
out
mov
icebp
mov
lods
es
pop
inc
cmp
stos
ds
call
es
or
sbb
lods
imul
adc
push
mov
xor
xlat
xchg
jg
insl
or
ljmp
lods
and
xchg
adc
push
testl
data16
sti
pop
sbb
and
shrb
mov
mov
adc
sbb
xlat
jecxz
jae
lret
push
jae
ja
rcrl
subb
scas
add
xchg
lods
sub
fisttpll
mov
lea
mov
and
and
out
sub
ret
jnp
leave
es
lret
fisubrl
imul
mov
push
cmp
inc
inc
leave
fstpt
jl
add
cmp
orb
iret
stos
repnz
insl
fnstsw
jecxz
fcompl
mov
mov
cmpsb
mov
and
push
shrb
outsl
mov
jge
test
into
test
and
idivb
test
xor
adc
iret
mov
xor
xchg
mov
in
mov
lret
xchg
cmpsb
sub
loope
movsl
in
cmpsb
cmp
pop
ficoml
seto
sub
jmp
xor
sub
mov
ret
add
shr
out
fldt
in
sub
push
or
arpl
mov
xor
andl
clc
mov
testl
jno
xchg
pop
inc
add
xchg
negb
add
jae
repz
and
dec
bound
outsl
xor
mov
movups
outsb
cmp
lea
and
out
leave
pop
xchg
sahf
or
jb
rcrb
cmc
jns
mov
push
iret
repnz
out
lcall
test
sbbl
lret
lahf
cmp
push
xchg
mov
fisubl
xchg
shl
mov
jecxz
mov
cmp
cli
cld
sahf
ret
shll
adc
ss
push
test
dec
sbb
aad
iret
push
ds
push
fucomi
movsl
fadds
outsb
addb
inc
inc
lds
dec
cwtl
mov
in
pop
cmp
mov
jcxz
imul
jno
pop
pusha
inc
nop
into
sub
movsl
xchg
loope
ret
out
popf
or
jmp
pushf
jae
dec
sbb
xchg
popf
jnp
lock
into
aad
adc
aaa
movsl
cld
add
sub
je
lods
xor
and
xorb
xlat
fisttps
jno
fxch
adc
cmpsb
inc
int
sub
test
lret
or
xor
sbb
ja
mov
mov
lods
mov
jo
out
sbb
dec
or
mov
insb
test
lret
dec
mov
cmc
call
ret
xchg
scas
cli
xchg
daa
fcomps
mov
xchg
mov
jl
out
stos
push
push
jle
push
dec
ret
or
fs
rorb
dec
nop
jge
inc
pop
jecxz
push
cltd
cwtl
outsb
ret
mov
ja
repz
push
popf
cld
fsub
mov
stos
pop
das
jecxz
mov
push
into
xchg
sub
xchg
jl
xor
xchg
fmull
xchg
sti
jae
das
cld
cmp
dec
push
xchg
enter
jl
mov
mov
fisttpl
xlat
je
add
xchg
outsl
pop
inc
mov
inc
mov
das
jle
out
in
or
pop
mov
add
mov
pop
cld
xlat
shlb
test
pop
jg,pn
or
into
cmp
mov
and
les
adc
sub
adc
push
int3
jle
xchg
fisttps
test
mov
xor
cmp
jo
rcrb
popa
loope
and
lock
fdivrl
inc
xchg
in
icebp
in
sbb
mov
stc
ror
sub
in
xlat
jp
jmp
les
movsl
daa
outsb
and
and
pop
cli
sti
cmp
push
adc
jae
fs
les
jmp
into
cmp
mov
mov
adc
scas
mov
fwait
add
or
sub
data16
mov
push
mov
bound
into
movsl
ja
mov
test
xor
dec
pop
pop
cwtl
cmp
and
insl
cmp
or
shl
push
mov
scas
pop
shll
mov
mov
cmp
cs
scas
ret
testb
sbb
fsubrs
in
pop
int3
push
aas
call
repz
dec
xor
incb
dec
sbb
aam
fnstsw
jmp
sbb
jne
js
stc
mov
lds
fwait
jg
add
ja
das
sbb
push
push
cwtl
popa
adc
pushf
mov
dec
xchg
das
jno
dec
xchg
jmp
push
fisubrs
js
roll
dec
lock
xchg
mov
cltd
and
cmp
add
xor
xor
xchg
imul
sbb
jb
scas
outsb
inc
push
cmp
mov
scas
push
divl
cltd
jg
stos
xor
pop
cltd
pop
fildll
sub
mov
daa
clc
adc
add
fsubl
into
xchg
dec
test
call
pop
adc
sbb
int3
xor
lahf
pop
jb
inc
mov
fcmovne
stc
or
mov
sub
jb
mov
jo
mov
out
loop
lea
ljmp
pushf
adc
mov
pop
sub
pop
sarb
xor
push
in
out
out
push
in
xor
enter
les
in
mov
aam
ja
mov
sub
enter
sub
mov
neg
ds
dec
je
dec
cmp
bound
mov
movsb
enter
rclb
or
fisttps
inc
outsb
sub
pusha
pop
lods
in
mov
inc
pop
push
and
aaa
dec
or
mov
mov
lods
xchg
fwait
mov
push
mov
fsubrl
lcall
mov
xchg
popf
pop
out
adc
xchg
enter
fimull
scas
das
xchg
lock
lods
jp
and
xor
rcrb
cmp
int
jne
fs
push
inc
cmc
in
mov
inc
rorb
lea
scas
inc
jbe
add
mov
lock
ret
mov
clc
imul
xchg
imul
mov
and
cmp
in
aas
ss
xor
lcall
push
test
push
xchg
inc
data16
mov
test
lcall
test
nop
sbb
or
shlb
dec
stos
xor
sbb
mov
ja
aas
jp
or
push
lods
pop
movsb
es
push
push
addr16
nop
or
sti
outsl
add
sub
adc
push
je
sbb
push
xchg
xchg
mov
sub
push
inc
nop
les
pop
lahf
sti
mov
out
arpl
pusha
inc
aam
sahf
outsl
fisubs
mov
shrl
xchg
sub
and
push
leave
add
push
rcl
push
xchg
fstps
dec
mov
sbb
push
test
cmp
mov
add
arpl
sbb
xchg
inc
call
arpl
inc
push
lahf
mov
inc
jb
sbbl
jno
push
xor
mov
sbb
or
push
std
xor
popa
ficompl
jg
jbe
ljmp
add
lcall
fwait
mov
cltd
mov
xchg
scas
xchg
or
mov
hlt
stos
lret
mov
xlat
xchg
pop
addr16
sahf
nop
push
loop
subl
sub
outsb
xchg
mov
xchg
jae
clc
and
sub
das
push
sahf
cmpsl
in
subl
loopne
in
add
and
add
mov
call
lahf
insb
jns
addb
xor
add
dec
adc
call
imul
xchg
inc
aad
scas
or
std
push
dec
leave
pushf
xchg
cmp
aaa
mov
je
xor
xor
and
sub
or
out
xor
sbb
add
lock
push
pop
ficomps
mov
xor
sarl
cltd
xor
xchg
loopne
push
and
popa
push
scas
xor
cltd
in
fs
jg
sbb
repz
jns
aam
cld
inc
fsubl
pop
add
inc
jge
rclb
xlat
dec
int
and
mov
es
sbb
aad
mov
jl
je
or
xor
or
adc
xor
xchg
lcall
mov
loop
outsb
dec
mov
sub
jge
outsb
push
xlat
jnp
or
push
pop
int
lret
jb
testb
xchg
push
xor
mov
lahf
cwtl
fistps
push
jp
pop
roll
cld
push
ret
test
in
lock
pop
add
ds
int3
cmp
fs
fldenv
cmpsl
and
mov
or
jnp
jle
cmpsb
sbb
icebp
movsb
dec
xchg
fstps
ds
mov
dec
adc
lock
and
sahf
mov
cmpb
jb
sar
notl
orb
xchg
subl
sbb
pushf
negl
add
scas
int
jmp
sbb
into
loope
scas
jl
fld1
test
mov
leave
lret
push
shrl
xchg
xchg
movsb
xor
adc
scas
xchg
and
inc
xchg
sbb
adc
and
lea
fwait
jg
lcall
mov
xor
clc
cmpsl
sub
nop
adc
rcll
incb
adc
mov
fists
jns
pop
mov
clc
call
sub
je
push
inc
mov
cmpsl
sti
ss
iret
add
mov
jl
inc
out
pop
push
aad
fmull
inc
and
leave
aaa
fidivl
adc
mov
outsb
jecxz
fsqrt
push
bound
inc
adcb
test
stc
jmp
mov
or
xor
mov
pop
test
or
push
and
cmc
jg
js
dec
loop
sbb
movsl
sbb
jno
adc
fsubr
es
negb
push
xor
in
into
mov
aaa
lret
pop
cmpsl
sbb
push
mov
jl
push
sbb
lcall
or
add
out
in
lret
jge
mov
loopne
popa
icebp
outsl
clc
adc
lea
fucomip
stc
cmp
lods
pusha
imul
loope
jno
xchg
or
fsts
addr16
push
andb
mov
ficomps
insb
ss
cmc
lea
push
rclb
into
inc
adc
sbb
or
fildll
jmp
insb
push
jge
jbe
lret
sub
je
lods
or
ds
mov
xchg
ret
cmp
orb
scas
aam
mov
scas
fwait
mov
pop
aam
cltd
js
pop
pushf
sbb
dec
sbb
rclb
sub
push
idivb
sbb
test
mov
or
in
sbb
cmp
cmp
lret
fnsave
iret
push
adcb
sub
xchg
imul
or
in
add
push
dec
sbb
fnstcw
pop
and
jmp
push
push
cmpl
test
fadds
cld
inc
mov
mov
dec
sbb
or
jl
stos
addr16
outsb
fwait
pop
divl
je
cwtl
mov
rcll
ret
fisttpll
clc
outsb
push
add
mov
fwait
and
pop
sub
adc
inc
jae
mov
mov
lcall
aas
push
dec
jnp
inc
mov
fmull
dec
aam
bound
cwtl
adc
cmp
sbb
gs
sub
rclb
dec
js
sub
cmpsl
test
inc
stc
jle
pop
jns
in
inc
mov
mov
imul
rolb
inc
pusha
inc
icebp
repnz
rolb
lods
shrb
cwtl
ret
bound
rcll
sbb
or
sbb
xchg
mov
mov
jecxz
lds
pop
jmp
dec
in
cmp
scas
enter
inc
pop
xor
mov
jbe
ljmp
enter
or
mov
xor
mov
mov
pop
xor
xor
insl
xchg
dec
imul
jecxz
adc
add
movsl
mov
jo
mov
jo
sbb
adc
dec
lret
icebp
stos
jae
cwtl
add
clc
rclb
cmpsb
push
xor
nop
mov
push
ret
jl
aad
sbb
shrb
std
mov
das
mov
sub
or
stc
jne
jecxz
and
dec
rclb
cs
insl
xor
int3
inc
daa
and
push
push
dec
and
test
sbb
mov
mov
xchg
xchg
cmp
cmpsl
insb
enter
in
fs
out
push
mov
add
jl
xchg
test
test
les
or
imul
cmpsb
cli
sarl
jmp
inc
pop
sub
sub
sbb
push
push
and
mov
adc
dec
push
ljmp
push
cmp
in
loop
mov
fwait
ret
shl
cltd
push
out
enter
fdivl
pop
in
add
cwtl
data16
add
jmp
inc
sub
inc
jge
repnz
cmp
movsb
loopne
int
dec
jo
fldenv
aaa
pop
cltd
push
lret
jno
mov
mov
int
and
sarb
shrb
and
fstl
testb
insb
pusha
test
dec
int
jp
fadds
inc
jge
push
nop
cmp
mov
repnz
or
sbb
in
inc
mov
mov
sub
movl
pushf
pushf
pushf
jg
fs
adc
mov
sub
inc
out
arpl
std
mov
xchg
ds
andl
dec
loope
fwait
test
adc
jp
notb
and
cwtl
dec
out
jb
je
sub
pop
test
adc
sarl
fcmovne
cmp
push
pop
movsb
mov
iret
lret
cld
decb
cs
popf
ds
mov
push
clc
gs
mov
test
or
dec
cmp
fwait
pop
and
pop
dec
enter
sub
jmp
fdecstp
mov
add
mov
xchg
mov
lcall
or
fucom
repz
jg
dec
fs
lds
push
xchg
cmp
loop
push
xor
mov
lock
mov
mov
or
jo
jge
dec
jg
push
call
pop
pop
dec
mov
add
loope
dec
jge
or
in
cmp
pop
ret
lahf
xchg
loop
and
out
xchg
add
mov
pop
clc
sbb
lea
lahf
es
sbb
fsubp
lahf
enter
xchg
pop
jb
push
enter
push
jno
icebp
jno
leave
or
sub
pop
cmp
and
mov
insl
bound
hlt
ja
insb
xor
data16
xor
dec
in
test
inc
insb
add
or
iret
lret
mov
out
and
into
xor
aam
push
js
nop
inc
cld
in
inc
mov
dec
mov
rorb
add
adc
rol
jb
sub
xor
movsl
mov
lock
stos
cmp
xor
roll
sti
div
inc
lock
repz
stc
imul
push
gs
sbb
adc
and
jmp
stos
scas
loopne
jl
jae
mov
into
sahf
adc
jmp
andl
mov
aaa
in
out
mov
jmp
clc
mov
mov
out
jno
popa
push
cmp
sbb
leave
movsb
test
imul
inc
inc
jnp
mov
mov
in
stos
subl
pusha
test
inc
inc
fimull
rorb
dec
jns
jbe
pop
xchg
and
jle
stc
rol
mov
out
stos
lock
mov
push
xchg
adc
cmp
enter
push
xchg
out
sub
movsl
cmpsl
shlb
xchg
fimuls
ja
orb
ss
sti
leave
pusha
jge
push
ss
sub
pop
insl
push
sbb
ret
adc
ljmp
push
or
and
out
inc
dec
or
cmp
mov
icebp
sub
int3
nop
outsb
mov
popf
push
stc
cmpsb
ret
push
inc
push
cmp
add
pop
pop
stc
or
xchg
in
push
mov
jae
push
aas
mov
testb
pusha
cld
andb
fcompl
in
jle
out
scas
ljmp
cmp
in
ret
or
mov
jmp
clc
or
inc
fsubrs
xor
sbb
sahf
fwait
getsec
test
aam
test
shr
and
and
loopne
pushf
les
adc
xchg
xor
or
repnz
mov
stc
inc
mov
xlat
pop
in
inc
pop
sbb
or
mov
pop
sbb
inc
das
loope
sbb
cltd
xor
inc
addr16
xchg
adc
popf
xlat
fists
test
lcall
mov
scas
mov
dec
pusha
rorl
jmp
mov
push
js
lret
add
sbb
mov
aaa
jl
mov
rcrl
pop
pop
jge
std
xchg
rorl
and
mov
cmp
mov
idivb
jecxz
lcall
mov
push
add
cmp
pushl
stos
ficompl
stc
mov
xor
sub
and
aaa
stos
stos
mov
pushf
xor
divb
dec
push
jp
pop
xchg
jg
adc
jge
mov
leave
dec
lret
xchg
jecxz
aam
mov
int3
imul
jmp
dec
mov
mov
adc
xchg
jp
out
and
adc
xchg
test
mov
rorb
scas
sbb
hlt
popaw
les
hlt
push
outsw
jo
jae
xchg
inc
xor
shll
sub
jo
dec
inc
jne
setbe
xor
inc
int3
shr
cmp
xchg
jb
lahf
rolb
leave
cmp
ljmp
sbbb
jns
jb
clc
and
push
sub
fldl
mov
clc
int
mov
dec
aad
dec
jecxz
iret
cltd
out
push
aad
mov
movsb
fs
pop
in
orl
aaa
pop
xchg
arpl
cld
aam
std
ffreep
jne
lret
mov
push
pusha
cmp
rclb
inc
subl
pop
enter
jae
mov
lahf
jge
das
push
mov
loopne
ficoms
icebp
cmp
lcall
ret
popf
jnp
dec
mov
push
xchg
loopne
movsb
and
inc
jo
jnp
rolb
test
xchg
cwtl
lcall
mov
ja
mov
adc
sbb
xor
movq
jmp
aam
mov
insb
jns
jb
mov
aad
xchg
xchg
pop
sub
jne
pop
in
cmpsl
adc
mov
addl
inc
int
shr
je
lods
sub
das
cmpsb
ljmp
in
mov
xchg
or
xor
sub
out
pop
push
dec
adc
lcall
and
ds
in
lcall
in
stc
hlt
push
imul
xchg
mov
fisubrs
fucomip
xlat
jno
repz
je
pop
add
jae
popa
stos
sarb
xchg
movsl
ds
rep
arpl
fcmovne
lock
jl
bound
mov
and
push
das
ds
sbb
cld
sub
jl
inc
mov
lcall
push
xchg
jp
jns
pop
xchg
out
or
aaa
ret
mov
or
ss
aam
adc
push
cmp
jno
mov
pop
in
jmp
jl
in
bound
pop
mov
sbb
cli
adc
pusha
cwtl
insl
inc
sub
cmpsl
ljmp
mov
or
into
scas
sbb
cmpsl
push
pop
fdivs
push
daa
pop
mov
inc
cmp
adc
adc
jecxz
xor
nop
icebp
ret
and
mov
lcall
popa
loope
xor
popa
mov
adc
rorb
test
fwait
fs
mov
repz
jno
rolb
pop
inc
lods
mov
imul
scas
mov
repnz
and
jecxz
je
call
sub
orl
pusha
in
cmp
leave
sub
out
mov
push
push
or
cld
sbb
jne
jle
jmp
adc
inc
je
lock
mov
push
aas
pop
sub
jecxz
repnz
shl
lods
je
jae
inc
in
dec
je
mov
cmpsb
inc
mov
push
push
imul
fs
cmpsb
sub
push
push
fdivr
mov
rorb
inc
stc
test
xor
mov
pop
sbb
add
mov
pop
insl
pop
inc
int3
xor
dec
sub
bound
lea
sbb
pop
xchg
sub
and
adc
leave
and
out
lret
sahf
test
add
adc
push
inc
pop
jb
dec
pop
sub
clc
adc
jmp
or
push
loop
pop
inc
push
cmp
adc
icebp
ss
cmp
outsb
mov
or
fcom
jge
or
sarb
call
sbb
pusha
fildl
aas
xchg
stos
mov
xchg
pop
imul
mov
lods
mov
fucomp
clc
push
and
cmc
mov
fisttpl
and
adc
sub
mov
cmp
fcmovnb
int
jno
fistpl
add
ds
pop
mov
hlt
dec
in
mov
iret
in
inc
jmp
sbb
and
mov
repnz
push
insb
pop
enter
inc
test
sub
mov
addr16
xchg
mov
bound
adc
add
sbb
data16
adc
std
arpl
mov
cmp
in
call
xchg
jecxz
in
add
mov
hlt
cmp
int
jne
andb
loop
dec
sub
and
or
adc
repnz
xchg
imul
mov
push
stos
mov
orb
push
aam
rcrl
add
ret
dec
mov
xor
repnz
cmp
mov
push
mov
sarl
getsec
or
mov
xor
outsl
mov
cld
mov
jge
ret
or
inc
dec
and
lock
jl
push
fists
lea
pop
mov
shll
sbb
mov
mov
xor
inc
jecxz
out
dec
xor
sarb
subb
xchg
or
lea
inc
sub
jbe
fwait
jo
test
rorb
mov
mov
out
popf
sti
push
outsb
mov
clc
sub
into
xchg
adc
add
pop
xlat
pop
dec
loop
inc
jl
repnz
test
ljmp
test
outsl
mov
lcall
arpl
mov
insl
cmp
sub
icebp
xor
sahf
in
pusha
inc
pop
jp
out
or
push
pop
out
dec
stos
insl
jge
and
adc
ds
inc
pop
das
ret
arpl
int
mov
pop
call
sti
aad
or
loope
sbb
xchg
cmp
xor
arpl
lods
fnstsw
and
mov
sbb
mov
test
add
adc
fiaddl
popa
data16
inc
adc
xor
popf
movsb
lret
add
or
int3
cmp
xchg
out
shll
and
mov
inc
and
xchg
cmp
xchg
xchg
lret
insb
es
loop
push
int3
mov
pop
test
xchg
xor
and
cmp
movsb
popf
sbb
pop
and
inc
jmp
je
xor
pop
push
adc
mov
push
fwait
arpl
add
adc
loop
and
jnp
sub
jo
sahf
sbb
xchg
lcall
mov
adc
incl
std
sub
popa
pushf
or
out
adc
fistps
xchg
in
test
fst
pop
jg
andl
dec
fs
repnz
out
add
in
sub
jl
ret
xor
mov
shlb
into
inc
lods
out
into
cli
push
and
es
outsl
int
push
pop
mov
mov
add
repnz
jbe
inc
mov
movsl
shrb
mov
lods
push
inc
add
movsl
cmp
sbb
ds
cmpsb
push
dec
push
push
sbb
mov
adc
push
adc
dec
mov
mov
out
and
cmp
cs
dec
sub
repnz
mov
insl
adcb
push
imul
ret
lahf
pop
or
lds
shll
test
mov
inc
and
dec
lcall
fidivl
imul
fwait
mov
adc
in
loopne
out
imul
xchg
fbld
cmp
gs
cmp
mov
nop
pop
cs
dec
iret
nop
add
aam
scas
add
test
cmp
add
int3
arpl
cmp
pop
jle
arpl
js
mov
lds
hlt
es
or
jp
lods
push
loope
repnz
clc
iret
pop
movsl
popa
mov
test
mov
or
hlt
or
mov
stos
cmp
js
pop
fidivrs
mov
cli
subb
fdivrp
xchg
inc
fiaddl
jno
sti
arpl
loop,pn
push
pop
add
fwait
dec
vucomisd
aam
xor
and
xor
lret
adc
stc
in
andl
cmpsb
sbb
clc
inc
add
lea
jp
stos
or
or
pop
lcall
sbb
pop
jecxz,pn
movsl
adc
arpl
push
add
mov
dec
push
fsub
cmp
sbbl
das
lahf
mov
imul
sbb
and
out
add
fildl
mov
ss
xor
lret
xor
out
or
push
iret
shll
icebp
clc
cmp
inc
push
jb
fmuls
in
repnz
cmp
sbb
push
fisubl
cltd
mov
movsl
dec
js
mov
imul
or
jnp
out
jns
and
or
adc
fmull
mov
lret
insl
loope
lret
push
sub
cltd
pop
arpl
sbb
inc
lods
aam
jp
xor
xor
stos
jae
out
aad
xchg
push
jno
mov
inc
std
jb
xchg
sbb
out
pop
xchg
ja
idivl
add
int
mov
into
sahf
mov
dec
fisttps
mov
das
pushf
mull
mov
dec
mov
fcoml
jmp
sbb
xchg
fistpl
inc
jle
fcmove
bound
sahf
pop
adc
dec
popa
gs
dec
lcall
xchg
imull
push
add
adc
pop
mov
sub
dec
jb
push
int3
pop
test
fcompl
dec
lcall
mov
cmp
push
mov
cmp
xor
andb
jecxz
or
push
loope
negl
adc
xor
aaa
mov
enter
mov
loope
ja
jb
push
mov
xchg
gs
xchg
mov
mov
adc
push
fisubl
inc
push
push
repz
jns
cld
sub
movsb
xchg
lret
and
cmp
inc
cld
mov
mov
sub
mov
mov
test
repnz
arpl
cmp
mov
pop
adc
out
rcr
jmp
popa
mov
imul
xlat
pop
in
lods
lods
xchg
cmp
xor
xchg
in
dec
xor
rdtsc
push
adc
mov
dec
or
arpl
in
lods
xchg
ja
and
inc
xor
dec
clc
enter
pop
cmpsb
xlat
fistps
mov
cmp
xor
pop
lea
imul
cmpb
push
arpl
dec
jge
push
daa
into
enter
sbb
jge
iret
bound
sub
lret
add
cmc
rcrb
sub
mov
mov
movsb
mov
mov
xchg
sub
push
xor
imul
jmp
sub
sub
sub
std
jl
inc
add
push
mov
cmp
xor
pushf
ret
sbb
popa
cmpsb
jg
mov
push
mov
rclb
and
adc
mov
or
in
popl
out
cmc
pop
lock
sbb
hlt
mov
inc
popa
ss
in
jo
adc
inc
inc
mov
pop
mov
in
idivl
inc
sbbl
outsb
dec
out
pop
dec
add
lret
cmp
jbe
xor
mov
mov
lods
imulb
mov
mov
push
popa
syscall
scas
mov
push
jae
jb
pop
mov
push
lods
call
fidivl
xchg
mov
cwtl
mov
and
and
ja
add
push
aad
mov
enter
stos
repnz
mov
mov
xor
into
fiadds
cmpsl
in
mov
jb
push
xor
addl
sarl
mov
inc
mov
loope
repnz
mov
insb
sbb
jb
shl
push
das
xor
adc
or
daa
into
mov
xchg
sbb
push
push
dec
sub
lret
mov
jecxz
add
test
ss
push
clc
int
or
dec
ljmp
dec
mov
inc
mov
js
or
fwait
sub
pusha
sbb
das
out
in
aam
jo
jecxz
add
jo
dec
shr
imul
shll
sub
enter
jl
jae
fldenv
jge
call
aas
lret
mov
popa
push
jo
cmpsl
jno
or
xor
jge
leave
sahf
movsb
icebp
inc
les
push
dec
xor
subb
popf
pop
push
scas
inc
fsubrs
sbb
xor
adc
ljmp
mov
and
cmp
mov
and
xchg
fistl
fnstenv
push
sub
in
cld
dec
daa
push
dec
pop
push
pop
jo
call
sbb
mov
movsl
cwtl
push
jl
lods
and
sub
pop
push
popf
push
popf
cmp
dec
push
loope
stos
or
call
dec
out
dec
shlb
ss
cmp
sbb
enter
lods
push
push
adc
add
or
mov
popf
mull
popa
fsubrp
outsl
cmpsb
outsl
call
xchg
jne
push
out
sahf
movsb
les
sub
dec
xchg
xchg
into
push
arpl
cmp
push
and
lds
jae
pop
loop
lcall
enter
stos
jp
or
repz
push
int
or
adc
cmp
js
in
sub
adc
push
addr16
mov
cmp
mov
subb
mov
inc
adc
xchg
or
loopne
and
int3
xchg
int3
sub
dec
sbb
mov
push
movsl
adc
insl
aaa
or
cld
cmp
rcrb
stc
iret
insb
stc
fwait
dec
stos
or
pop
dec
int
fisubrs
out
shrl
sub
pop
je
lock
push
jecxz
add
out
clc
int3
mov
dec
dec
pop
cld
add
test
jns
test
mov
lret
cmp
ret
dec
inc
and
test
fs
mov
ds
dec
std
and
dec
sbb
mov
scas
sbb
pop
mulb
sub
push
mov
stos
adc
push
addr16
enter
cli
sbb
jge
sti
hlt
addl
jge
dec
jmp
in
mov
and
add
pusha
dec
ret
xchg
jg
movswl
dec
jle
sarl
cmc
cmp
or
or
cmp
dec
aas
jmp
xor
loop
sbb
out
jb
jle
insl
adc
pushf
imul
rep
pop
jns
enter
jo
sub
repz
pop
xor
mov
mov
test
cmp
mov
push
dec
loop
rolb
cmp
dec
mov
ss
xchg
or
adc
xchg
cli
scas
add
sbb
fwait
into
test
jnp
mov
or
xor
icebp
lret
and
ret
sub
sub
cmp
or
push
mov
or
stc
mov
jmp
adc
out
adc
je
jns
sub
dec
fcmovnb
mov
jecxz
iret
lods
aad
or
pusha
cld
push
out
lds
pushf
mov
out
stos
adc
aad
mov
addb
test
adc
mov
scas
insl
rorl
push
mov
pop
and
push
dec
inc
es
jle
cwtl
adc
insl
imul
cmpsl
lods
bound
out
and
push
jge
adc
cld
stos
push
add
add
mov
in
bound
xchg
lahf
xchg
dec
push
xlat
add
sub
xchg
imul
daa
imul
ficompl
enter
cmp
adc
stos
cmpl
mov
or
insl
cmpsb
mov
bound
stos
sbb
nop
int
and
in
test
das
push
movsb
cmp
out
pop
xor
fdivr
push
aam
int3
and
fcomps
lret
mov
repnz
cmpsb
gs
inc
dec
mov
sti
mov
incl
xchg
insb
sbb
test
mov
in
dec
aam
inc
rcrl
mov
cli
fimuls
sbbb
shlb
mov
inc
das
push
mov
in
mov
mov
lahf
jmp
cmp
lret
ja
mov
or
pop
mov
mov
push
cmp
cmp
in
dec
leave
mov
mov
js
jne
aas
jge
sbb
adc
mov
sbb
push
imul
in
jl
adc
scas
aam
xor
test
shlb
jp
and
cmp
adc
push
mulb
pushl
insl
sub
shll
xor
push
push
lods
stos
stc
push
repz
leave
sub
sub
rclb
insl
incl
xor
imul
sar
xor
lahf
in
xlat
js
xchg
mulb
xchg
xchg
in
lea
scas
mov
repz
in
jp
mov
mov
jae
mov
inc
jmp
aam
movsb
outsb
and
sub
adc
inc
xor
xchg
and
repz
jmp
sti
dec
icebp
push
cmpsl
mul
movsb
push
inc
out
ffreep
ret
adc
stc
in
outsb
jbe
cmc
jle
sub
jbe
push
jg
lea
jne
adc
in
test
out
mov
adc
repnz
aaa
xchg
push
xchg
lcall
xchg
mov
add
and
mov
shr
push
imul
inc
das
or
mov
mov
popa
scas
into
dec
cmpsb
scas
xchg
repnz
into
icebp
int
ret
loope
hlt
inc
jecxz
push
fistps
push
rcl
test
dec
add
xor
imul
jmp
dec
dec
adc
mov
cltd
mov
xchg
jb
rorb
loop
mov
xchg
sub
dec
jbe
jns
jle
and
into
cmp
lahf
sbb
ljmp
push
cmp
or
jg
push
cld
in
push
iret
addr16
repnz
xchg
cltd
xchg
fldenv
mov
je
sbb
fcomps
xor
mov
fwait
loopne
jbe
push
in
mov
add
mov
repz
std
fbld
popa
mov
dec
mov
lahf
xor
out
je
fs
call
ds
mov
lds
sbb
mov
mov
sub
jecxz
jle
into
fsub
lods
sub
roll
ljmp
push
fdivs
inc
and
lds
int3
adc
lock
pop
mov
adc
add
or
xor
xor
stc
test
imul
std
adc
cmpsl
jnp
jne
lea
mov
test
sbb
int3
movsl
movsl
dec
jecxz
xchg
mov
jb
arpl
pop
es
jmp
or
cmpsl
faddl
nop
xlat
loopne
shll
daa
mov
jbe
fisubrl
repnz
loopne
pop
pop
mov
stc
dec
push
push
xchg
dec
inc
inc
mov
sbb
mov
cs
sub
mov
dec
pop
mov
sbb
lret
cltd
xor
inc
sbb
std
mov
jge
ret
subl
inc
popa
test
xor
adc
je
in
pop
mov
add
cmpsb
lcall
cmpsb
ret
mov
fimull
or
cmp
outsl
imul
imul
popf
inc
aam
hlt
stos
mov
mov
in
mov
jbe
xor
loop
pop
xchg
pop
cltd
mov
imul
cmpsl
or
mov
xor
jle
mov
sbb
pxor
fistpl
or
mov
inc
aam
jp
ret
test
xchg
aad
mov
in
xor
scas
push
addr16
jle
xchg
pop
lret
sub
cmp
jo
gs
sbb
mov
mov
cmp
sbb
test
cmc
js
andl
pop
inc
loopne
add
push
mov
sub
cmp
cmp
xchg
insl
mov
inc
fs
and
sbb
xor
push
nop
mov
sarl
bound
testb
cmp
lcall
and
mov
pop
push
sub
into
clc
add
xor
pop
jmp
enter
mov
dec
cwtl
cmp
lahf
mov
cmpsl
and
add
push
repz
pop
leave
scas
xlat
pop
loop
stos
orl
pop
imul
insb
xor
sbb
fsubp
push
sub
xchg
js
add
push
inc
xchg
rcr
std
dec
mov
gs
hlt
jl
sub
lret
sbb
xchg
fistpl
scas
xchg
pop
xor
adc
and
std
push
call
jge
andb
or
leave
push
sub
jno
jno
flds
adc
mov
xchg
inc
movsb
mov
data16
and
pop
xchg
cmp
xchg
movsb
cwtl
cs
mov
or
xchg
addr16
test
orb
xchg
xchg
rcr
fstl
pop
es
aad
jb
mov
mov
cwtl
xchg
pop
ljmp
cmp
mov
push
and
aam
popa
sbbl
push
outsb
repz
scas
pop
iret
xchg
stos
mov
andb
xor
cmpsl
ds
lds
popf
fistpl
fwait
movsl
fcmovbe
scas
push
jno
outsl
bound
pop
mov
in
fcom
lahf
cwtl
adc
cmpl
out
and
scas
negl
mov
pop
sub
daa
mov
sbb
enter
jbe
scas
sbb
outsb
add
mov
pop
lods
loopne
cs
inc
pop
insb
sub
js
and
inc
cmpsb
xchg
sbbb
add
xor
lea
sub
outsl
xchg
divb
or
mov
or
ficomps
iret
inc
orb
test
adc
jbe
push
push
cli
imul
insb
sbb
cwtl
mov
cmp
xor
je
pop
insb
loope
sbb
sub
cmp
mov
jmp
out
adc
xchg
mov
into
imul
inc
inc
and
inc
scas
ljmp
xchg
ret
bound
mov
inc
push
les
and
and
cli
cli
arpl
dec
xchg
fnsave
or
jecxz
ss
aam
test
out
jae
loope
jno
movsl
aas
and
fdivs
jbe
fsubs
jno
rorb
nop
imul
pop
xchg
and
sarb
out
test
xchg
mov
mov
xchg
fst
dec
iret
inc
or
or
std
ja
jo
out
pop
and
or
pop
mov
add
in
fnsave
pop
push
mov
out
imul
ljmp
repz
mov
das
mov
stos
push
sti
jl
cmp
sub
enter
aad
outsb
push
pop
lcall
bnd
ficoms
add
mov
imul
das
lahf
push
xor
cmp
push
cmp
cli
andl
pusha
in
jae
sbb
inc
sbb
fstpl
cmpl
xchg
mov
xchg
hlt
xor
jo
jge
lret
fdiv
jmp
mov
lods
sub
popf
fs
out
xor
fisubrs
lods
cmp
outsb
out
cmp
jbe
loopne
dec
dec
and
call
mov
data16
mull
xchg
imul
sahf
and
mov
into
stos
and
adc
dec
jge
scas
and
hlt
pop
push
subb
stc
ja
sahf
adc
shrb
insl
gs
mov
movsl
inc
in
sub
push
shlb
xchg
addl
out
or
push
stos
push
inc
push
ja
roll
leave
jmp
mov
dec
mov
cmpsb
test
mov
sub
pop
imul
mov
notl
sbb
sti
push
mov
sub
int3
sar
sub
inc
daa
sbb
pop
adc
push
into
add
movl
mov
daa
scas
jge
xchg
or
jecxz
imul
jne
xchg
ret
movsb
shl
pop
and
sbb
das
lock
jns
push
push
mov
xor
bound
mov
pop
mov
xchg
popa
inc
addr16
int3
sahf
cwtl
jmp
shr
nop
or
xor
jg
mov
xor
cld
push
fisubrs
jge
mov
pop
inc
cli
addr16
pop
dec
cmp
pop
xor
mov
mov
cmp
lret
pop
pushf
pop
jge
push
mov
or
push
movsb
fs
dec
mov
adc
push
sbb
rorb
daa
xor
inc
notl
je
mov
pop
jb
cld
add
mov
push
aas
push
pop
cli
sbb
inc
repnz
and
scas
mov
mov
sub
lods
aas
add
xchg
call
clc
jmp
mov
push
into
inc
ret
mov
xchg
mov
or
aas
sbbl
jne
sbb
test
mov
push
or
leave
cmpsb
adc
daa
push
push
icebp
cmc
shll
inc
xchg
jl
daa
test
jp
aad
orb
lahf
jp
mov
mov
push
pop
mov
and
repz
xchg
adcb
pusha
mov
jle
xchg
std
daa
notb
push
idivb
repnz
test
inc
ljmp
sbb
jbe
inc
out
cs
xchg
cmp
jns
xor
das
sahf
mov
sub
loope
inc
outsb
js
cmc
jecxz
andl
mov
xchg
fstpl
enter
fcompl
inc
cld
mov
push
or
fcom
dec
pop
inc
inc
sbb
xchg
add
pop
mov
jg
mov
scas
or
mov
inc
out
fsubl
iret
clc
pop
xor
cmp
adc
rcpps
adc
addl
jnp
aad
out
sbb
in
out
sbb
icebp
popf
add
cmp
push
mov
push
rcl
icebp
xlat
stc
sbb
outsl
cld
iret
or
int
xor
sbb
pop
xor
mov
nop
inc
sub
shll
inc
mov
out
repnz
in
aas
sbb
pop
mov
mov
call
push
push
imul
cmp
mov
mov
sbb
addl
sbbl
xlat
mov
ss
xor
mov
adc
cmp
je
mov
pop
test
sahf
dec
push
or
add
and
xchg
inc
or
inc
sub
faddp
jbe
sbb
push
lahf
push
adc
pop
jge
je
mov
and
mov
push
cli
mov
loopne
movsl
stos
cld
dec
push
dec
jmp
jp
dec
mov
std
dec
mov
mov
cwtl
pop
lds
sub
aam
aaa
cmp
xor
jp
sbb
inc
xchg
pop
sub
cmp
es
push
adc
cmpsb
dec
mov
mov
sub
xchg
jg
mov
sbb
dec
dec
sub
adc
lcall
out
push
dec
bound
and
mov
jl
push
jle
pop
add
jae
and
mov
int
push
in
daa
fsubrl
sbb
fstps
nop
xor
ret
inc
ficomps
jbe
mov
in
fisttps
xchg
push
cmp
and
sbb
inc
inc
mov
jae
add
sub
rorb
sub
loop
insb
mov
inc
es
xchg
shrb
imul
jle
pop
les
jbe
jl
add
push
pop
daa
mov
mov
movsl
roll
call
push
pop
mov
daa
xchg
adc
mov
pop
or
inc
pop
jno
xlat
xor
push
arpl
jp
add
test
adc
cli
not
adc
repz
fstps
cli
add
and
mov
mov
loope
jecxz
pop
mov
mov
pop
fisubrl
dec
xchg
mov
push
sbb
push
cmp
in
outsb
adcl
push
push
mov
imul
or
popf
dec
enter
data16
sarl
cmp
dec
arpl
sub
idiv
mov
xor
pop
xorl
insb
dec
insl
sub
cmc
fwait
xchg
aaa
mov
stc
out
sti
loopne
negb
mov
mov
notl
or
leave
mov
add
jp
pop
arpl
popa
mov
sbb
mov
mov
ficoms
mov
ret
lahf
xor
out
mov
sbb
repz
int
imul
sub
mov
ds
sub
hlt
movl
fsubs
inc
jl
scas
dec
pop
int
xchg
mov
xor
xor
pop
xor
pop
cld
pop
pop
cmpsb
sub
sbb
push
mov
and
rcrl
mov
jmp
lock
mov
popf
rol
jg
in
aaa
push
xchg
mov
adc
dec
ret
xor
sbb
and
xchg
pop
inc
inc
jp
sbb
dec
pushf
dec
sarl
cmp
dec
in
outsl
add
shll
xchg
lods
out
imul
and
push
inc
aad
ror
sbb
mov
dec
jne
xor
cs
out
aas
sti
jmp
les
fisubrs
pusha
call
lcall
push
push
fimuls
lods
les
jge
mov
add
fisubrl
divb
inc
addl
lret
loopne
pop
xchg
imul
mov
push
mov
push
fidivrl
shl
and
and
sub
push
cmp
rcr
enter
push
or
repnz
xchg
xor
lret
outsl
xlat
fisttpl
cmp
hlt
fnstenv
mov
adc
data16
xchg
jmp
push
ja
push
xlat
fsubl
lods
outsl
test
fdivl
jle
outsl
jp
ficoml
es
xor
xchg
inc
mov
shlb
pop
daa
mov
mov
push
gs
xor
scas
cmc
dec
or
dec
xor
cmp
push
popf
divb
inc
push
and
dec
jnp
and
sub
out
popa
sti
adc
sbb
inc
dec
out
inc
imul
pusha
mov
stos
test
mov
stos
pop
dec
in
mov
ds
int
pop
mov
adc
in
mov
mov
jg
pop
mov
popa
pop
scas
mov
cmp
icebp
inc
pop
ljmp
cmp
aas
pop
sbb
mov
icebp
arpl
std
xchg
lcall
iret
sbb
pop
outsb
jmp
mov
pop
xchg
repz
aas
jbe
push
mov
mov
mov
aaa
inc
sbb
jle
in
mov
lods
or
jae
mov
dec
cmp
cmpsl
inc
in
test
jmp
rcrb
push
dec
inc
pop
das
iret
sub
loopne
dec
push
jnp
pusha
notb
rorl
sahf
sub
fldenv
rolb
iret
sub
int3
mov
movsl
ret
mov
scas
das
and
dec
mov
ffree
mov
sti
scas
ss
adc
pop
or
adc
jae
mov
sub
jle
pushf
fcmove
lahf
into
shrl
add
repnz
cmpsl
je
push
pop
loopne
out
mov
xor
jnp
mov
and
inc
mov
sbb
sbb
inc
jbe
daa
outsl
push
and
push
push
les
add
in
ja
out
dec
jecxz
dec
xchg
insl
test
inc
jecxz
sti
xchg
aaa
sbb
xchg
jno
fdivr
pop
jne
mov
pusha
pop
loop
shlb
push
sub
insl
add
jb
and
out
xor
aam
fstp
inc
mov
cs
movsl
mov
dec
push
and
cmc
cmpsb
adc
cmpl
mov
mov
mov
stos
inc
call
jne
mov
jg
cmp
loop
sbb
orl
xlat
repz
cltd
mov
pop
ja
push
fstpl
ljmp
mov
add
cwtl
adc
call
sti
pushf
gs
inc
jp
cmp
lcall
mov
xchg
xchg
test
orb
or
jae
or
pusha
or
sbb
outsb
outsb
and
mov
aad
js
icebp
sub
mov
js
jmp
negb
mulb
aaa
push
mov
subl
add
and
jecxz
imul
and
pop
pop
jge
divps
jecxz
dec
fldenv
daa
and
add
pop
jl
stos
pop
popf
mov
dec
push
and
jp
mov
lods
mov
test
mov
jo
or
push
inc
pop
xchg
loop
push
sbb
shll
inc
testb
arpl
dec
inc
movsl
mov
aaa
adc
daa
addr16
outsl
stos
jae
pushf
andb
mov
out
stos
jecxz
lahf
inc
push
xor
add
in
push
jecxz
xchg
jge
test
and
mov
xchg
sub
movsb
jbe
aad
scas
or
pop
outsb
ffreep
xchg
movsl
addr16
dec
add
dec
jge
fwait
pop
js
outsl
aad
mov
outsl
arpl
dec
movsl
jp
adc
cli
outsl
sbb
jb
icebp
sub
adc
jae
movsl
out
lret
mov
pushf
inc
dec
jg
das
shl
sub
sbb
rolb
push
sbb
pop
out
jmp
pop
sub
outsl
or
cmp
mul
mov
sti
pusha
add
mov
xor
pop
dec
addb
mov
loop
ja
popf
repz
sbb
mov
fidivrs
sbb
lods
mov
dec
mov
mul
push
pop
mov
imul
decl
stc
xchg
lmsw
jp
xchg
xchg
cltd
push
jo
es
add
lods
mov
push
xor
fcmovbe
xor
dec
roll
xor
leave
mov
xor
pop
mov
insl
xchg
jo
mov
jp
loop
fsubl
in
sbb
push
out
stos
push
imul
popf
js
subl
jecxz
js
push
addl
stos
ret
adc
shll
test
and
cs
push
sbb
xchg
xchg
shrb
movsb
mov
jecxz
push
aaa
pop
aas
outsb
push
cmp
adc
mov
or
jbe
dec
xchg
xor
or
js
cwtl
js
inc
es
cld
and
cmp
push
push
jbe
data16
jae
mov
shr
jge
sti
ret
jle
jb
cmove
push
loope
arpl
adc
insb
lods
jecxz
pop
cs
out
inc
lock
rolb
inc
inc
inc
movl
push
loop
adc
ret
fadds
or
cmp
in
mov
jnp
pushf
cmpsl
jecxz
push
dec
mov
pop
cmpsl
mov
roll
sbb
pop
push
xchg
pop
je
mov
es
cmp
push
push
inc
out
mov
mov
and
and
pushw
dec
daa
jbe
pop
stos
xor
sub
clc
ljmp
stos
lock
cmp
add
mov
arpl
xchg
pop
mov
sarl
inc
es
mov
addr16
jl
pop
and
int
repnz
sbb
andl
xor
lret
cmpsl
loopne
mov
imul
sbb
shlb
gs
movsl
jl
insb
sbb
sub
aam
das
lds
fisubrs
xchg
cmp
fwait
cmp
les
pop
orl
movsb
xchg
icebp
punpcklbw
out
mov
dec
cmp
fs
mov
or
xor
add
push
cmp
outsl
test
inc
inc
mov
outsb
sub
test
mov
pop
and
jns
sub
daa
fsubs
mull
add
lahf
pop
cmpl
sti
mov
cs
mov
repz
hlt
data16
pop
inc
bound
mov
push
out
popa
test
jno
aaa
sti
push
dec
push
dec
xchg
jo
jmp
int
mov
fidivrl
or
iret
jb
sbb
adc
movsl
mov
sahf
jg
in
dec
sbb
cmp
scas
mov
sbb
repnz
into
in
ss
pop
pushf
xchg
out
and
shll
cmp
sbb
inc
inc
and
xchg
or
mov
idivb
mov
mov
mov
pusha
test
and
mov
or
ret
ficomps
cmpsl
cmp
mov
in
in
xchg
int3
xor
in
jmp
call
sbb
dec
push
sbb
gs
add
xchg
dec
mov
dec
mov
lret
dec
mov
mov
add
aam
jge
roll
sti
add
pop
rcl
ficomps
inc
cli
nop
and
mov
clc
push
stos
aaa
stos
push
and
dec
shrl
add
xor
int3
fdivl
test
adc
in
mov
cmp
das
cld
and
and
andl
or
stc
and
gs
mov
imul
loope
fimull
jo
or
fldt
mov
cmp
push
movsw
fwait
je
sub
cmpsl
mov
mov
jp
insl
int
sar
xchg
iret
cs
push
pop
pushl
insb
dec
mov
ljmp
or
and
cmp
rorb
test
xlat
jb
push
repnz
inc
test
test
pop
sbb
mov
xor
mov
mov
mov
sub
inc
imul
or
fs
rdpmc
inc
imull
stos
lds
and
xchg
mov
imul
por
movsl
mov
ret
dec
std
inc
mov
lcall
push
pop
jl
sti
push
xchg
in
push
orb
sbb
idiv
add
jmp
movsl
xchg
ret
lds
mov
inc
mov
xor
out
dec
in
cmpb
lea
sahf
xchg
cmp
popf
inc
fmuls
cs
add
lret
cmc
jg
mov
cmpsl
adc
cmp
leave
pop
and
mov
test
sbb
faddp
cltd
xchg
mov
sub
testl
sbb
sbb
test
xsaves
orl
sbb
call
lea
mov
add
mov
sarl
insb
sub
clc
pop
adcl
popl
push
sbb
filds
adcb
cld
loope
mov
pusha
negl
inc
js
leave
and
fdivl
xchg
and
push
and
adc
cmp
rorb
mov
cld
xchg
sub
and
push
mov
ljmp
xlat
sbb
lahf
mov
or
movsl
mov
add
aas
xor
stos
sub
lahf
cmpsl
mov
sbb
test
xchg
adc
and
sbb
orb
pop
in
pop
inc
inc
ljmp
jne
cli
pop
es
movsl
jnp
adc
je
cli
push
fists
ja
js
cmpsb
and
dec
out
pop
pop
imul
out
sbb
mov
adc
stos
adc
sub
loop
fwait
inc
mov
enter
in
mov
andl
pop
jle
shrb
data16
call
mov
inc
sbb
jg
xor
mov
sarb
daa
pop
push
sbb
loope
fwait
insb
jo
mov
push
adc
inc
test
icebp
rcl
shl
cld
mov
hlt
push
pushf
fisttps
insb
ret
xor
repnz
lret
jg
and
ficomps
xchg
nop
in
xchg
sahf
pop
inc
or
das
stos
cli
lret
xor
mov
pop
inc
lock
mov
push
or
popf
cmp
jb
cld
cmpsb
push
ss
lock
pop
ds
or
sub
or
pcmpgtw
dec
mov
cltd
and
pop
ljmp
lods
shrb
mov
nop
xchg
xchg
inc
pop
pushf
mov
sbb
jle
push
pop
push
xor
xlat
call
mov
out
fcmovu
lds
and
xor
dec
mov
ret
hlt
xor
push
test
and
std
push
icebp
sbbb
cmp
adc
test
cmc
popf
add
mov
imul
jmp
int3
sub
xchg
lea
int3
mov
xchg
lcall
mov
cmove
mov
inc
test
xchg
or
lret
pop
in
arpl
ficompl
and
std
dec
pushl
sbb
or
fwait
imul
adc
sbb
dec
jne
xchg
stc
xor
jne
and
fidivl
psubd
jl
cmp
lret
pop
sbb
test
adc
lods
dec
pop
cmpsl
push
pop
mov
add
fnstenv
or
int
push
xchg
sub
pushf
lock
cmp
jg
jno
or
pop
push
jl
fs
ret
cmpsl
in
in
aad
and
xor
dec
and
bound
lock
aas
ja
imul
mov
scas
movsl
pusha
lahf
dec
jmp
aam
mov
adc
ds
adc
loope
mov
test
jle
fisubrl
dec
icebp
jnp
push
dec
std
xchg
jnp
test
pop
sub
movsb
or
cmp
inc
pop
or
mov
xor
mov
cmc
es
xchg
push
pop
lea
in
ja
mov
out
cmpsb
sub
jmp
xor
dec
out
cli
sahf
repnz
clc
mov
cmp
daa
mov
lcall
insl
js
xchg
mov
and
jns
in
fsubrs
insb
out
jno
and
scas
xchg
xchg
arpl
cmp
aas
ljmp
xchg
xchg
mov
inc
mov
jecxz
dec
mov
sub
pop
inc
subb
lcall
lock
push
bound
xor
cmp
pop
cmp
bswap
jns
pop
leave
clc
inc
and
gs
pop
outsb
icebp
and
inc
repnz
mov
and
dec
lea
mov
nop
loop
inc
mov
std
es
hlt
cmp
mov
mov
call
xlat
dec
sbbl
mov
sbb
testl
xor
mov
bnd
add
xchg
pusha
repz
call
mov
jbe
push
scas
icebp
insb
sub
test
pop
scas
nop
mov
jecxz
insl
inc
lea
push
fisubs
repnz
dec
cmp
push
lret
pop
scas
mov
cli
inc
adc
lods
scas
cmpl
jne
xorb
rcll
xorl
push
mov
xchg
dec
pop
pusha
jmp
pushf
aad
bnd
andl
in
dec
xchg
cmpsl
mov
mov
ja
sbb
enter
daa
pop
jae
nop
jbe
push
shll
mov
sub
movsb
inc
in
stos
sbb
test
iret
aam
lret
mov
ds
gs
dec
push
gs
lahf
xchg
mov
add
pop
push
lret
movsb
sub
mov
test
and
in
cmp
fmulp
jle
popa
iret
sti
pop
hlt
in
sbb
jb
mov
push
fs
xor
into
push
and
lds
push
inc
jns
push
xchg
das
adc
mov
or
and
mov
out
adc
sub
test
outsb
rorb
ds
sub
push
mov
or
fldenv
cmp
push
inc
hlt
push
fs
jle
ja
jg
jge
stos
mov
fsubs
repnz
js
insb
int
les
lahf
pop
xorl
jg
outsb
push
xor
idiv
or
dec
or
stos
stc
inc
fidivrl
cli
shlb
outsb
and
imul
push
jo
cmp
pop
and
outsb
into
es
ficoms
ljmp
in
ret
int3
mov
outsb
pop
sar
inc
cltd
pop
sti
mov
sbb
mov
test
mov
pop
mov
aam
cmp
pusha
cs
adc
push
sarl
mov
or
insl
rcrl
push
mov
in
lds
in
aas
decb
or
mov
cmpsb
jns
test
cld
mov
mov
lods
ljmp
push
mov
pop
and
xchg
and
xchg
popa
fs
add
movsb
pop
sbb
mov
push
gs
mov
lods
cmp
adc
and
std
cltd
mov
filds
mov
sub
pop
push
out
inc
adc
ds
mov
mov
test
xchg
aam
aas
add
add
imul
dec
cmpsb
cmp
pop
pop
gs
std
cltd
add
hlt
xchg
push
stos
adc
jge
test
loopne
xchg
idivl
gs
test
xchg
inc
mov
jne
out
sub
jmp
iret
jbe
xor
scas
mov
in
dec
mov
data16
in
mov
daa
lds
pop
mul
inc
mov
mov
add
lcall
popa
mov
inc
jle
sub
jl
pusha
lret
push
adc
xchg
fs
and
cmpsb
dec
xor
ja
push
int3
cmp
in
jp
into
push
jbe
fimull
insl
aad
icebp
out
pop
add
and
pop
sub
mov
add
add
js
jmp
mov
jbe
add
je
inc
ret
xchg
fdivl
adc
add
jecxz
mov
mov
pop
sub
mov
insl
cmpsb
inc
dec
sbb
mov
aaa
push
push
xor
jnp
ret
xchg
lock
mov
fsubs
icebp
adc
sbb
es
dec
add
lods
imul
add
add
xor
aas
test
pop
fs
jns
inc
dec
mov
cmp
incl
jge
test
xchg
jl
popa
adc
sbbb
scas
jmp
mov
jno
push
sbb
or
mov
test
out
jp
cmp
add
dec
jmp
orl
cmpb
xlat
push
in
lcall
add
cs
push
out
lods
mov
loop
test
icebp
dec
inc
scas
lcall
jb
test
xlat
notb
fwait
mov
fs
sbb
xor
cmc
xchg
sub
fld
xchg
mov
sub
mov
xchg
mov
lcall
jg
les
pop
pop
sub
mov
movsl
cmp
push
test
gs
lock
mov
insl
test
insb
outsb
int
pop
iret
jp
rcll
cmp
dec
lods
pop
lock
aaa
or
sbb
icebp
xchg
sahf
out
and
jae
adc
dec
inc
sbb
inc
enter
inc
sahf
ja
jge
or
out
int
into
mov
cmp
mov
sbb
shlb
sub
xchg
insb
xlat
adc
mov
or
cmc
loop
cld
mov
lahf
mov
jb
jo
out
cmc
movsb
xchg
cmp
xor
add
das
add
xchg
xchg
mov
cmp
fwait
xlat
fdivrs
aad
in
arpl
insb
sbb
cmp
pop
pop
test
mov
mov
cld
adc
cmp
sub
addr16
cmp
add
out
jo
jmp
xor
pop
call
pop
ljmp
movsb
lods
jbe
inc
push
jne
push
lret
out
push
or
adc
cwtl
inc
addr16
pop
outsb
xor
dec
test
mov
jnp
xchg
mov
or
sub
lret
push
or
lods
jmp
mov
insl
repz
xor
add
popa
jae
xchg
jb
pop
dec
mov
push
add
imul
js
cld
movb
push
adc
in
jb
sub
or
add
lods
jg
fnsave
and
fmul
addr16
mov
mov
cmpsl
sub
or
dec
sahf
test
push
mov
jg
pop
push
mov
divb
pop
movsb
or
test
dec
mov
mov
dec
loopne
sarl
data16
adc
js
addr16
sarb
push
lcall
test
push
xor
imul
push
mov
outsb
mov
bound
push
fprem1
shlb
pushf
xchg
dec
add
mov
popa
icebp
sti
insl
pop
dec
adc
pop
jns,pn
or
test
push
push
dec
mov
add
leave
test
cli
enter
mov
sti
lahf
sub
inc
loop
lds
aam
ret
icebp
cmp
shll
bound
mov
dec
adc
cmpsb
aaa
push
xchg
mov
lock
add
mov
stc
in
cs
es
jae
lock
mov
sbb
mov
jle
daa
inc
in
cwtl
mov
pushf
fucomi
jecxz
outsl
jnp
mov
fsubrl
xor
clc
fcomi
mov
sbb
scas
lcall
pop
inc
mov
xchg
mov
pop
mov
lea
mov
xchg
scas
out
adc
push
imul
pop
imul
jbe
aad
mov
mov
mov
pop
jne
imul
mov
cmp
ljmp
dec
sbb
idivl
xor
and
repnz
enter
xor
mov
pop
out
jbe
and
mov
sub
test
add
push
scas
aam
inc
and
cmc
sbb
loopne
out
cwtl
push
repnz
mov
add
mov
dec
adc
cmp
xchg
rclb
cmp
pop
out
sti
test
sbb
ret
lock
mov
rcrl
adc
jne
xchg
fisubrl
push
add
ret
pop
add
sub
cmp
repnz
mov
adc
sbb
mov
stos
rol
adc
subl
aam
push
pusha
mov
stc
aaa
rorb
or
and
in
out
dec
pop
inc
push
mov
cmp
outsb
leave
adc
pop
testl
cs
mov
lret
repz
dec
movsb
cmpsl
push
jb
je
into
or
pop
cmp
inc
test
je
cwtl
xchg
je
fs
rcpps
ljmp
sbb
jnp
int3
into
and
push
fs
mov
push
xor
push
lcall
pop
and
sbb
or
mov
inc
int
mov
iret
jle
sub
stos
lret
add
add
xchg
pop
mov
sub
in
incl
adc
pushf
xor
aam
sbb
aaa
mov
stos
pop
xchg
dec
decb
xchg
or
adc
sbb
xchg
pop
mov
mov
lret
pop
lods
outsl
xchg
mov
repnz
sbb
fidivl
and
fprem1
push
mov
mov
movsb
icebp
fs
roll
push
inc
dec
xchg
fmuls
or
test
push
fldcw
adc
aas
fs
mulps
or
popf
adc
aas
popf
std
and
jae
push
inc
dec
or
pop
mov
mov
iret
xor
xchg
adc
rcrl
pop
xor
repz
inc
ret
imull
push
jo
ja
fwait
xor
xchg
les
sbb
mov
fwait
jbe
cmpsl
inc
clc
mov
fnsave
sub
out
inc
sbbl
aam
shll
sub
and
int3
pop
mov
mov
faddl
mov
dec
lods
add
insl
or
pop
imul
hlt
add
jmp
dec
lahf
pusha
sbb
cltd
mov
bound
or
and
dec
push
pop
xchg
sbb
xchg
test
mov
leave
push
dec
cmpl
shlb
ss
fcmovnbe
cmp
sub
js
jns
add
push
add
mov
lds
repz
gs
insl
sbb
adc
mov
imul
mov
dec
pop
stos
mov
xor
popf
fidivrs
mov
cmp
add
dec
pop
loopne
and
stc
xor
lods
lods
cmpsl
div
xlat
jl
test
int
or
lods
aaa
pop
sub
jmp
ficompl
xchg
dec
sbb
iret
rolb
pop
jbe
push
mov
pop
and
jne
fldenv
dec
and
cmpsl
insl
cmp
adc
orb
jne
dec
mov
pop
fsubs
insl
xor
cwtl
inc
mov
test
scas
gs
fucomp
mov
xchg
imul
lret
mov
xchg
hlt
jbe
jns
xor
bound
sub
cmp
jnp
mov
int
addb
dec
mov
lock
pop
cmp
pop
aaa
jge
cltd
lret
add
icebp
mov
hlt
fcoml
inc
rcr
xchg
in
pop
and
rcll
popw
push
call
ja
ds
in
int
mov
sub
cmp
inc
mov
adc
inc
test
add
xchg
aas
addr16
mov
mov
pop
test
or
aam
push
shl
sbbl
mov
ret
xchg
jmp
adc
sbb
cwtl
out
pushf
jmp
pushf
stc
aas
xchg
js
mov
in
mov
fnstsw
popf
scas
pop
xor
mov
pop
je
cmp
sub
incb
orb
mov
enter
pop
imul
fwait
ret
ret
cmp
xor
arpl
mov
bnd
jl
stos
in
outsl
jp
adc
aam
xchg
cld
pusha
cmpsb
xchg
xor
cmc
cmp
orl
pop
jg
andl
pop
mov
cli
in
cltd
and
push
imul
and
and
xchg
cmpsl
mov
mov
rorl
lds
and
cmpb
lret
sbb
out
and
sbb
or
push
dec
stc
ds
dec
mov
dec
push
pop
mov
dec
pop
jb
cli
data16
cmp
inc
inc
jb
push
les
aaa
popa
lock
xchg
jne
mov
xor
jmp
cld
push
mov
cmp
insb
addr16
ror
iret
mov
fcompl
dec
iret
pop
test
test
imul
lcall
jecxz
sbb
aaa
data16
nop
aas
inc
je
test
cmpsb
pop
imul
add
push
sbb
or
scas
pushl
sub
shrb
mov
push
shl
jno
push
pop
popf
loop
jae
dec
dec
sbb
push
pop
xorl
dec
add
fisubl
repz
into
push
xchg
jno
dec
imul
aam
adc
sbb
inc
pushf
push
and
ss
cwtl
int3
nop
imul
adc
std
insl
mov
js
mov
lcall
push
add
xor
mov
and
outsl
popa
mov
push
or
and
in
mov
ret
call
in
jne
gs
jbe
imul
xchg
jnp
orl
test
popa
fs
mulb
sub
adc
add
enter
pop
adc
iret
adc
or
inc
sub
je
xor
add
test
jbe
out
mov
adc
sub
dec
sbb
call
jno
les
ds
or
lcall
push
shlb
out
sub
mov
mov
jg
punpckhwd
fbld
lods
dec
data16
imul
mov
mov
mov
popf
shl
aaa
mov
mov
inc
pop
sbb
fs
lret
inc
push
adc
dec
mov
sahf
scas
call
and
aad
xor
cmp
dec
xor
xor
add
insb
xchg
repnz
sub
insl
stos
movsb
test
loop
adc
push
sti
test
push
repnz
decl
pop
insb
int3
nop
scas
mov
xchg
push
adcl
iret
add
stos
jnp
sbb
scas
add
scas
push
and
clc
shr
mov
movsb
cli
lcall
sub
clc
adc
aas
sub
sbb
mov
iret
and
dec
jle
cltd
mov
push
jg
add
cmp
repz
imul
call
lods
mov
lret
hlt
repnz
dec
jge
sbb
or
cmp
fwait
pusha
adc
adc
mov
xchg
cltd
stos
xchg
add
xchg
jns
mov
and
orl
andl
dec
inc
or
enter
outsl
sbb
popf
stos
cmp
divl
mov
add
xchg
test
dec
shrl
mov
mov
test
fcmovnu
mov
mov
mov
cltd
ret
pop
das
xchg
or
sbb
dec
loop
aas
sbb
xorb
cmp
dec
stos
rorl
cmp
or
xor
dec
sti
mov
fisttpl
jae
stos
lods
push
loope
xchg
fs
mov
sub
fcoml
imul
pop
cmp
mov
std
loop
adc
ficoml
enter
add
js
mov
movsb
mov
popf
fsubrl
push
rcr
stc
xor
push
lds
repz
daa
shl
outsb
repz
pop
push
mov
aad
fldt
cwtl
nop
mov
bound
rclb
mov
icebp
or
cltd
push
cwtl
mov
insb
pop
dec
mov
int3
sbb
jmp
dec
popa
xlat
stos
movsl
loopne
mov
push
sti
add
dec
pop
cmpsl
lods
jb
and
ficomps
cmp
push
push
cmpsb
adc
das
ss
inc
imul
insb
inc
int
data16
sbb
ja
stos
cmp
push
idivb
inc
hlt
adc
fnstcw
sub
sub
scas
adc
leave
addr16
cmc
js
aad
jl
jle
cmpsb
mov
insb
push
jno
nop
and
adc
repz
shlb
fldt
mov
jl
test
movsb
jns
dec
or
push
call
test
cmp
adc
fidivl
subb
and
add
les
sub
test
mov
loope
into
ss
jne
out
adc
xor
xor
ret
push
mov
aaa
adc
lret
fcoml
inc
pop
repnz
das
inc
dec
in
int
push
repz
or
icebp
push
bound
fcoml
fadd
and
push
sbb
or
sub
hlt
in
mov
cmpsb
fwait
out
cmp
mov
and
xor
daa
cmp
je
nop
lret
jno
andb
push
jno
insl
push
push
jnp
ds
mov
jle
insb
pop
popf
pop
push
and
sub
push
lods
dec
cs
jl
pop
push
cltd
cmp
jmp
sbb
shll
ror
cli
jp
lcall
stos
pop
xchg
inc
popl
sarl
xchg
sti
and
inc
jns
sbb
in
push
adc
rorl
and
cmp
imul
dec
push
mov
call
cltd
int
push
and
pop
mov
cmc
xchg
inc
pop
and
and
dec
mov
movsl
fadd
or
mov
int3
pop
ret
cmp
mov
mov
inc
jae
cwtl
mov
xor
add
stos
mov
pop
jmp
sub
or
adcb
mov
fs
fbstp
int3
cs
mov
sbb
mov
push
dec
das
or
jge
mov
inc
mov
jg
pop
stos
mov
roll
lcall
cmp
jns
push
xlat
sti
add
lods
mov
add
mov
and
pushw
in
loope
iret
xchg
pop
xor
cmp
mov
lods
xor
stos
in
pop
push
mov
cmp
mov
pop
or
and
push
aas
inc
loop
out
iret
and
mov
js
insl
jl
add
and
xchg
rcrb
jg
cmp
adc
cmp
add
mov
dec
subb
push
sub
scas
adc
addr16
mov
xor
lcall
fstpl
insl
sbbl
iret
inc
jo
pop
and
add
inc
xor
fiaddl
ficomps
xor
jae
or
or
aas
mov
xchg
or
out
pop
inc
out
aam
sarb
leave
ds
mov
fcmovbe
ss
cmpsb
sahf
lahf
ds
icebp
iret
or
push
cli
mov
mov
out
push
mov
xchg
mov
mov
hlt
xor
je
jb
jne
idivb
shr
cmp
push
js
mov
rolb
xlat
xor
xchg
mov
xchg
lahf
xor
jg
inc
dec
cmp
sbb
xor
ljmp
in
mov
mov
negl
xor
and
data16
cmpsb
gs
cmc
push
dec
test
insb
cmp
pop
xchg
adc
pop
iret
inc
push
aaa
rcrb
xlat
decb
imul
mov
shll
les
rorl
and
mov
mov
repz
cli
adc
sub
jp
jge
test
outsl
or
leave
xchg
pop
orb
sti
imul
jnp
in
shll
repz
mov
mov
xchg
outsb
out
sbb
push
push
jl
mov
mov
or
mov
mov
imul
mov
stc
jne
cwtl
movups
inc
xor
xorl
push
out
es
xor
mov
mov
loopne
scas
jle
jae
movsl
adc
sub
xor
aad
hlt
cmp
inc
loopne
and
mov
inc
ds
fistps
push
loopne
adc
out
xor
fcom
and
rol
and
mov
add
adc
ret
or
ret
jnp
cmp
push
idivb
and
and
shll
cmp
mov
stos
xor
test
pushf
ror
and
xchg
sub
loope
cli
push
inc
out
cwtl
out
loope
mov
dec
scas
jmp
mov
pop
cmpsl
es
enter
fdivs
and
loopne
mov
sahf
fnstcw
stc
lea
add
lock
sub
test
sub
dec
mov
out
cli
imul
testl
subb
sub
xor
adc
mov
sbb
test
gs
cs
and
xor
push
jnp
pop
jp
or
dec
ucomiss
leave
jmp
mov
mov
mov
loopne
es
mov
shlb
js
fdivrs
jnp
mov
dec
push
cltd
popf
pop
lret
ficoml
push
inc
insb
dec
out
and
jge
pop
xor
rcrb
fdivl
aad
lcall
adc
lea
sbb
pop
sub
adc
mov
jbe
mov
push
cmp
insb
add
pop
adcb
push
lahf
mov
mov
add
jp
push
repnz
push
dec
int
in
iret
out
enterw
cltd
jb
movsl
push
test
add
dec
push
xor
int
daa
xchg
dec
push
sbb
stc
jg
fwait
jecxz
dec
out
pop
pop
wbinvd
xor
stos
rcrb
or
push
rcll
cmp
push
inc
push
adc
push
mov
aam
or
std
pusha
and
jge
sub
mov
or
inc
mov
psubsw
sbb
mov
jle
sub
cmovl
pop
cmp
rolb
stos
inc
dec
mov
sbb
fs
fists
jmp
fucom
mov
cmpsl
in
dec
inc
and
xor
cli
stc
dec
vpmovsxbq
ret
lcall
pop
outsb
add
dec
jecxz
xchg
add
shlb
sub
xchg
inc
loop
frndint
add
sbb
imul
dec
jge
imul
mov
jl
ror
push
int3
mov
sbb
jno
pop
xor
xchg
fistpll
out
je
jmp
insb
inc
loopnew
and
mov
or
int
in
xchg
mov
and
in
ret
cmc
and
aaa
insb
adc
inc
sbb
and
mov
enter
inc
xchg
in
mov
sub
test
sub
mov
fs
loop
sahf
push
cmpsl
pushf
stos
xchg
xchg
or
shlb
sub
pop
sub
cmp
cmp
aad
cs
movsl
neg
mov
movsl
push
dec
and
ret
adc
sahf
enter
cmp
sbb
inc
shrb
mov
into
add
fwait
xor
test
pop
jmp
inc
xchg
xor
sbb
cmp
daa
sub
ret
xor
mov
dec
dec
mov
xor
stos
mov
in
mov
push
stos
lock
fcoml
cmp
inc
dec
scas
cwtl
push
add
outsl
pop
out
lods
icebp
out
lahf
fwait
ja
mov
xor
ljmp
fistpll
sbb
push
sub
rcrl
lahf
mov
and
mov
mov
fnstcw
sbb
aaa
add
popf
outsl
xlat
jae
push
pop
shlb
jns,pt
test
mov
sbb
ja
cs
mov
lods
sub
movq
push
daa
sbb
sbb
out
sub
push
xor
fwait
jp
push
aaa
int
sahf
daa
icebp
cmp
inc
fbld
stc
inc
repz
loope
jmp
xor
lret
in
jp
xor
popa
adc
retw
sti
sbb
outsl
jbe
pop
fimuls
fcoms
jl
mov
push
mov
mov
mov
xchg
sahf
rcl
nop
or
rcrb
daa
inc
adc
shl
cwtl
sbb
pop
adc
aaa
jecxz
cmpsl
lock
ret
sbb
xchg
sub
test
insl
in
jmp
dec
mov
add
punpckhbw
xlat
push
mov
lahf
movsl
sub
adc
mov
ja
jge
and
loope
addr16
push
cmc
jno
int
rcll
popa
jle
push
pop
pusha
into
jbe
or
cmp
in
mov
lret
out
mov
jg
int3
imul
dec
imul
push
fildl
ljmp
or
testl
and
sbb
lods
and
inc
lret
mov
adc
ss
pop
ljmp
push
sbb
cmpsb
fistl
movsl
cmp
inc
mov
xor
sub
mov
jp
fildl
fwait
pop
push
cli
hlt
add
sbb
and
call
out
cwtl
test
mov
fisttpll
jnp
sub
sbb
test
xchg
xchg
jne
jne
pop
and
js
jle
push
dec
mov
cli
subl
fdivs
in
arpl
test
ljmp
xor
nop
jmp
popf
pop
push
add
push
iret
insb
mov
sub
jg
mov
das
cmp
pop
cmp
xlat
iret
inc
roll
mov
dec
fdivl
xlat
push
mov
imul
adc
dec
roll
pop
andb
pop
push
loop
sbb
in
mov
xchg
fbstp
int3
mov
xor
pop
dec
jne
push
lret
pop
rorl
xchg
jl
push
cmp
mov
es
test
dec
ficoms
jl
stos
xchg
mov
jge
mov
sbb
movsb
test
inc
push
jb
test
sub
inc
dec
js,pt
fidivs
mov
sahf
bound
jg
and
push
push
push
dec
out
mov
xchg
mov
daa
add
fcmovbe
push
inc
fstl
sbb
call
es
movsl
test
cld
or
rcrb
mov
daa
dec
jp
test
ss
es
mov
je
jge
sub
add
pop
jmp
or
clc
idiv
cmp
mov
sbb
pop
dec
nop
les
ja
loope
pop
pop
dec
xor
push
jb
and
sbb
jmp
pusha
aaa
cmc
lahf
inc
adc
inc
adc
inc
xchg
movl
mov
mov
out
sti
addb
or
xor
gs
iret
lds
dec
inc
jae
repnz
arpl
lret
popf
push
fadds
push
xor
lods
addl
std
jnp
xchg
xor
into
imul
mov
add
adc
gs
lock
fimuls
jae
jge
sub
cmpsl
mov
sbb
cltd
cmpl
jge
and
sbb
or
stos
mov
pusha
mov
mov
in
push
cmpsl
lahf
movsb
push
xchg
inc
mov
jmp
dec
and
stos
pop
lods
and
mov
loopne
mov
std
loope
lock
in
and
out
test
push
or
adc
xchg
jae
jae
xor
arpl
into
fcmovu
bound
xlat
insl
mov
bound
in
popa
pop
sbb
inc
mov
sbb
pusha
addr16
xchg
arpl
sub
cmpsb
jecxz
lret
addr16
andl
mov
inc
std
dec
push
mov
pop
and
cmp
nop
dec
xchg
push
sub
xchg
imul
in
pop
mov
adc
arpl
pop
xchg
popa
mov
test
lretw
push
dec
fsubl
or
jp
loopne
mov
or
mov
nop
mov
hlt
dec
inc
pusha
mov
pop
imul
mov
cmp
mov
jae
gs
push
mov
das
fcmovbe
stc
sbb
adc
movsb
rcrl
int
mov
xchg
xchg
into
addr16
or
sub
and
aad
loopne
push
aad
sub
mul
jbe
or
mov
iret
rorb
in
mov
fisttpl
push
hlt
or
pushf
dec
pop
xchg
clc
mul
les
xchg
fstl
sbb
mov
mov
pop
mov
lret
aad
lods
addl
xor
and
adc
lock
fdivs
iret
mov
jns
xchg
jge
pop
pop
fwait
out
cwtl
icebp
ret
jge
cmp
fwait
jmp
jg
aam
fisttpll
cmp
mov
sub
movsl
push
mov
sub
loope
test
sub
fbstp
scas
and
sbb
cmp
sbb
add
mov
repnz
lds
mov
shll
rol
into
pop
insb
sbb
pushf
push
lock
scas
movsb
cli
ret
lahf
in
push
inc
iret
cmp
mov
adc
adc
pop
pop
ja
inc
fmull
ss
xor
dec
mov
cld
test
xor
push
push
cmp
xchg
fcompl
sbb
scas
lret
cmpb
cltd
je
jl
fwait
repz
lods
mov
sbb
test
xchg
sbb
sbb
mov
mov
push
daa
or
lds
pop
push
dec
insb
and
cmpsb
cmp
loopne
mov
scas
pushf
adc
fcmovnu
outsl
fdivp
xchg
jp
xchg
inc
int3
and
call
fsubrs
clc
mov
mov
xor
mov
adc
mov
cmpsb
pop
test
repnz
shl
or
pop
sub
out
into
decb
popa
hlt
rorb
fbld
add
xchg
fs
popa
pop
insb
lods
cmc
mov
dec
add
sti
mov
insl
adc
mov
aad
add
mov
mov
adc
inc
and
mov
fisttps
arpl
les
fstp
jl
lret
mov
hlt
test
push
test
add
repnz
aad
adc
mov
xor
hlt
inc
fwait
jle
ds
dec
imul
mov
mov
out
sub
lret
out
loopne
mov
cwtl
sbb
lcall
mov
pop
jae
add
mov
imul
inc
inc
std
bound
daa
cmp
sub
je
sbb
call
xor
xchg
scas
adc
stos
stos
mov
int3
scas
and
inc
iret
sbb
outsl
cmp
dec
addr16
mov
push
pop
jl
nop
sub
frstor
aad
mov
out
out
sahf
add
cli
shlb
subb
std
ja
aaa
or
stc
icebp
and
lcall
xlat
loopne
mov
pop
out
add
sbb
mov
scas
stos
imul
jecxz
add
and
out
rcrb
sub
shlb
inc
iret
and
and
adc
jbe
hlt
mov
in
jne
mov
inc
ret
xchg
pop
test
jo
stos
pop
xchg
push
cmpsl
xor
push
xchg
popa
jg
out
int3
jle,pt
add
int
xchg
jmp
jbe
aas
pop
mov
lods
insl
dec
xchg
push
xor
cmp
add
jp
push
mov
fistpl
xlat
pop
fldcw
xchg
dec
enter
lcall
inc
sbb
test
lds
lds
inc
mov
and
in
pop
jbe
bound
cwtl
mov
and
scas
outsb
mov
inc
fldt
pushf
aaa
adc
pusha
test
addr16
add
cmpb
adc
push
fdivl
ja
jne
mov
out
cltd
and
loope
cmpsl
lretw
testb
outsb
aaa
jb
sbb
adc
pop
lret
call
arpl
push
les
jno
mov
ficoms
add
mov
jae
or
xchg
dec
pop
cld
lahf
push
sbb
inc
aam
xor
cmp
mov
xchg
push
fwait
jns
in
sti
pop
cmp
mov
out
orb
mov
push
sbb
fimull
mov
data16
lahf
fnstenv
jp
mov
daa
repz
push
and
xor
outsl
and
cs
lds
fcmovbe
ret
arpl
mov
push
mov
lcall
into
das
jae
jae
inc
dec
pop
rep
lcall
add
pusha
enter
dec
shrb
or
cmp
test
fstps
mov
and
fstpl
sbb
cmp
das
hlt
lods
adc
push
popa
mov
rcr
cmp
push
movsl
popa
lret
adcl
pop
push
rol
arpl
fs
iret
jl
scas
lahf
int
dec
cmp
mov
or
aad
ja
je
mov
addl
fsubr
jecxz
xchg
fcmovb
adc
shll
ja
and
out
pop
aad
je
pop
clc
or
cmp
dec
add
inc
mov
inc
icebp
leave
cld
cmp
cmp
sbb
jp
sub
xchg
lcall
daa
xchg
adc
imul
xchg
repnz
ljmp
enter
movsb
sbb
dec
pop
clc
push
mov
sbb
sbb
sub
mov
test
mov
inc
adc
dec
insb
xchg
pushf
sub
dec
int3
test
clc
lock
dec
jmp
into
xor
mov
daa
jmp
fisttps
orb
add
xor
inc
inc
dec
push
inc
cmp
jl
add
mov
xor
dec
pop
xlat
cmp
cmp
fistpll
cmp
cmpsb
ret
add
cld
pop
sub
leave
popl
jp
repz
jns
inc
aaa
inc
push
loope
and
inc
xchg
jge
xchg
outsl
mov
cmp
clc
and
cld
jl
push
mov
div
fimull
or
addr16
pop
inc
jnp
push
dec
mov
dec
cwtl
or
and
jmp
fdiv
push
xchg
jbe
sarb
popf
cmp
push
and
divb
aas
jg
sub
lret
pop
jmp
shl
test
cmp
shll
jo
aam
les
dec
jno
cmp
jb
add
mov
push
push
xlat
push
loopne
cmp
cmp
mov
xor
ret
sub
mov
repz
jae
mov
jecxz
or
push
push
pop
sbb
ljmp
shl
push
mov
and
sbb
out
xorb
movsl
xchg
or
stos
loop
mov
xchg
outsl
int
jo
testb
int3
pushf
or
inc
pop
outsl
enter
and
dec
ret
out
pop
das
xor
je
ret
sub
inc
mov
movsl
insl
addb
sbb
into
lret
or
adcb
mov
cmc
push
inc
mov
lret
add
adc
pop
jmp
pushl
adc
cltd
jmp
push
lcall
icebp
cmc
and
into
inc
mov
mov
add
std
repz
ljmp
push
sarb
push
pop
insl
incb
cli
sahf
xor
pop
mov
mov
stos
ljmp
inc
adc
subb
and
jnp
out
cli
mov
adc
punpckhwd
xchg
lret
push
or
mov
sub
jbe
or
pop
xchg
xchg
out
aaa
push
lahf
adc
ret
int3
mov
outsl
xchg
xor
stos
ss
cmc
fsub
lcall
sbb
jno
adc
mov
bound
ret
pop
mov
imul
sbb
adc
fcoms
cwtl
xchg
leave
adc
nop
jp
sbb
enter
cmpsl
and
fiaddl
in
inc
std
mov
loop
push
nop
mov
dec
movsl
xchg
out
sub
test
cli
ficoms
or
or
mov
xor
add
xor
test
lahf
or
cmpl
jb
add
inc
fisubl
mov
dec
xlat
mov
or
push
ss
fmuls
iret
in
insb
adc
scas
repnz
xchg
sub
mov
lret
mov
pusha
fcmovne
daa
sahf
imul
push
dec
push
mov
loop
jae
and
ja
enter
xchg
frstor
xor
adc
jb
iret
pop
lret
jo
mov
mov
rolb
mov
dec
test
pop
stos
push
mov
fdiv
pop
xchg
xchg
rcll
out
in
lcall
mov
stc
sti
mov
cltd
add
fcmovu
ss
xor
rclb
mov
push
or
andl
jl
das
sbb
ds
add
inc
inc
mov
adc
cli
sbb
call
dec
ja
scas
fstpt
fists
push
mov
xorb
jb
movsl
jns
imull
imul
xor
movsl
test
and
addr16
pop
push
xchg
sbb
or
add
popa
mov
lock
rcrl
fidivrs
lock
arpl
add
xor
mov
mov
and
in
call
js
rclb
scas
test
fists
lea
icebp
in
mov
add
xor
xor
xor
add
jmp
aam
lea
fisttps
in
dec
cmp
std
out
cmp
xorl
cltd
push
fisubl
iret
adc
add
cs
cld
ret
popa
addl
sti
xchg
jno
dec
xor
and
pop
outsb
jmp
sbb
inc
cmpsb
movsl
inc
dec
pop
ljmp
mov
inc
add
popa
insb
scas
fisubrl
adc
sub
insl
stos
push
pop
mov
xor
jle
ss
mov
sbb
test
movsb
cli
xchg
dec
xor
mov
cmc
dec
test
imul
xchg
aas
out
push
or
repz
jns
sti
push
testl
repnz
fimull
dec
mov
dec
cli
adc
adc
mov
sub
out
cmp
dec
mov
movb
scas
fidivrl
out
or
xor
je
jnp
mov
sbb
divb
fsubrl
or
mov
call
push
xchg
push
je
cli
fcoms
mov
inc
aad
adc
add
mov
out
push
xor
or
sbb
scas
push
or
out
shlb
dec
fsubrs
ljmp
in
push
sti
or
or
subl
jg
jae
out
push
jnp
pop
sahf
mov
ret
inc
inc
sbbl
fidivrl
cmpsb
adc
jbe
xchg
lea
mov
arpl
mov
jmp
rcl
xor
adc
mov
or
push
fs
std
and
sub
mov
dec
xor
into
or
cmpsb
ss
push
sbb
jbe
push
or
xchg
lods
xchg
push
sbb
inc
dec
lock
cmp
add
aas
push
mov
fwait
push
mov
lret
xchg
adc
pop
mov
push
roll
addr16
push
in
push
xchg
dec
sahf
les
aad
sti
mov
inc
out
orl
push
xor
andb
pop
pop
cmpsb
lods
cwtl
push
xorl
push
jecxz
dec
adcl
fcompl
loopne
int
pop
inc
mov
popf
dec
inc
xchg
mov
pusha
push
cmp
stos
mov
loop
enter
and
les
or
outsb
inc
orb
data16
call
sub
imul
out
cmp
mov
xchg
pushf
icebp
shll
inc
xchg
ljmp
das
xchg
mov
pop
or
xchg
out
sub
stc
decl
inc
dec
mov
jb
mov
mov
xor
not
adc
push
and
std
xchg
in
mov
jno
ja
and
cmp
out
adc
aad
ret
addr16
xchg
call
pop
lods
mov
cmp
movsl
pop
push
cmp
mov
in
mov
test
sbb
insb
push
sbb
mov
or
push
and
sub
push
fimull
pop
ss
outsl
xor
pop
outsl
push
xor
add
aaa
and
stc
inc
dec
lcall
pop
adc
in
dec
testl
mov
movd
sub
out
and
jno
mov
sub
jecxz
je
fldcw
rcrb
push
and
add
sti
or
push
jmp
rcrl
sub
jbe
push
enter
enter
mov
pop
sarb
negl
out
mov
or
test
mov
std
mov
mov
xchg
push
enter
subl
loopne
jnp
mov
cmpsl
lea
sub
jp
sub
rcrb
repnz
mov
enter
icebp
push
dec
js
pushl
test
add
mov
out
cmpsl
jg
push
adc
cmp
test
enter
push
fucomp
sahf
out
inc
test
pop
jg
mov
fadd
cmp
pop
movsl
or
aaa
push
sub
mov
nop
in
mov
mov
int3
int3
pop
lahf
xchg
es
insb
push
arpl
mov
push
fidivrl
add
lcall
or
jge
xchg
add
mov
mov
out
pop
jg
in
jp
jmp
outsl
push
je
iret
fldl
push
fisttpl
lret
popf
add
xchg
cmp
ss
lcall
cmc
sub
repz
mov
xor
out
xor
sti
lret
xor
lock
mov
xor
mov
pusha
jae
gs
or
clc
out
mov
sub
mov
gs
call
fnstenv
pop
adc
test
mov
mov
pop
add
mov
dec
in
push
jle
ud2
push
push
bound
repnz
and
test
js
xor
ret
iret
inc
sub
lock
inc
es
pusha
scas
cs
jmp
ret
mov
xchg
sub
adc
subl
lahf
cmp
mov
leave
ret
scas
push
stos
out
push
addr16
in
lcall
scas
fcoms
mov
sub
mov
int
mov
out
cmpsb
test
jmp
lods
mov
inc
xor
stos
and
pop
mov
sbb
push
pop
dec
inc
mov
sahf
fdivrp
xchg
mov
pop
add
in
adcl
pop
cmpsl
es
mov
aaa
ror
rol
mov
in
jno
out
xchg
imul
out
xchg
mov
popa
cmp
daa
lds
scas
fs
xchg
dec
push
sbb
dec
stos
addl
adc
inc
jno,pt
test
incl
jp
sbb
stos
clc
push
outsb
cmpsb
jp
dec
ds
pop
pop
insb
lret
cwtl
and
sbb
loop
test
jnp
inc
push
je
iret
add
adc
sbb
lea
pop
ja
push
cli
and
jp
subb
test
outsb
cwtl
jnp
adc
add
cs
jle
test
iret
cmpsl
jns
xor
unpcklps
pop
cmc
push
add
iretw
push
inc
in
mov
out
fnstsw
pop
add
cmpb
pop
mov
sub
mov
xor
mov
mov
cwtl
lahf
imul
ljmp
adc
xchg
inc
imul
ret
jl
pop
icebp
cwtl
cltd
push
jle
sbbb
jno
xor
inc
sbb
stc
in
sbb
lret
sub
mov
in
pop
xchg
xor
and
loop
test
mov
rcll
jne
and
ds
daa
and
pop
loopne
mov
push
bound
push
jns
inc
jnp
add
lret
stc
jne
cmp
call
adc
dec
ljmp
jle
jns
adc
fimuls
out
lcall
xchg
sbb
xlat
push
inc
cmp
dec
dec
pop
sti
xchg
mov
pop
cld
not
jb
pop
cmpb
aas
pop
ds
cmpb
adc
pop
mov
cmc
or
jg
daa
add
push
int3
push
sbb
inc
outsb
movsl
jbe
add
rorl
pop
ds
lcall
mov
xor
js
mov
adc
pusha
loopne
mov
mov
mov
stos
dec
outsb
loopne
xchg
mov
mov
negb
add
sbb
xor
in
lret
sbbl
jle
push
jae
mov
cmp
cmpsb
mov
pop
pop
pushf
inc
subl
jno
sahf
outsl
fiadds
outsb
or
mov
or
mov
mov
sbb
call
lock
sub
add
fdiv
pop
push
ss
and
sub
stos
pop
getsec
rcrl
arpl
pop
into
test
sub
sub
sti
inc
lock
cmpsl
jnp
repz
mov
jae
pop
pop
dec
frstor
pop
das
cmc
adc
adc
rorb
pop
bound
or
adc
outsb
and
jo
push
inc
mov
cmp
clc
outsb
push
cltd
test
or
mov
push
dec
dec
mov
cs
out
or
int3
aam
sub
cmp
cmp
loopne
std
movsb
loop
cmc
dec
inc
mov
clc
fcomps
pop
mov
lcall
es
mov
jecxz
sbb
ja
and
popf
sub
jbe
or
cli
sbb
mov
add
mov
cs
inc
iret
ljmp
xchg
adc
xor
xchg
cli
pop
mov
dec
in
mov
inc
adc
pop
and
fidivs
inc
aaa
cwtl
add
in
sti
cli
mov
jg
loopne
add
movntq
push
jae
test
xor
fs
cmc
jae
jne
xchg
ffreep
movsl
aad
dec
mov
mov
ja
jnp
mov
mov
adc
xchg
pop
jne
cmpsb
cmp
jne
mov
xchg
gs
sbb
pop
andb
in
and
gs
imul
out
cmpsb
cmc
arpl
jg
outsl
and
cmp
lds
adcb
ds
ja
adc
cld
mov
inc
xchg
push
and
les
push
clc
std
jge
xchg
scas
mov
add
jl
sbb
push
ror
inc
sbb
lcall
jmp
add
jne
test
out
scas
cwtl
gs
xor
xchg
aam
mov
xor
insl
adc
addr16
in
inc
lret
iret
fisubs
shlb
movsl
clc
aam
sti
mov
sub
mov
movsb
mov
cmpsl
xor
fwait
sbb
sbb
mov
mov
mov
int3
sub
xchg
lds
cmp
fucom
mov
mov
jecxz
push
xchg
ljmp
outsb
adc
cmp
inc
icebp
gs
fwait
mov
sarl
aam
push
jmp
dec
sbb
std
sahf
jecxz
jmp
mov
mov
pop
xchg
popf
test
jne
ret
and
pushf
jne
lods
movsb
mov
pop
adc
push
pop
loope
cmp
ss
dec
sub
fs
push
jg
cli
les
mov
shl
hlt
or
cmpsl
dec
mov
enter
cmovb
mov
in
dec
inc
xchg
int
out
jp
mov
jae
jg
std
jbe
lock
mov
testb
sub
jae
mov
xchg
mov
leave
dec
jno
stos
lock
subb
jmp
adc
je
or
mov
sbb
add
outsb
dec
sub
je
pop
push
xchg
inc
popa
sbb
and
cmpsb
in
cmp
jle
fsubr
pop
dec
sarl
js
fidivs
aam
ja
jbe
jns
lods
sbb
add
or
xor
bound
popf
add
mov
inc
push
fsubl
out
mov
inc
cmp
inc
xor
inc
mov
adc
xor
dec
dec
aaa
push
test
xchg
xor
jbe
fisttpl
adc
out
in
mov
pop
jb
cmp
xchg
cmp
xor
imul
sbb
sarl
sti
mov
lret
cs
sub
mov
test
std
loopne
xor
xor
xlat
lds
lcall
adc
lret
mov
iret
sti
add
jmp
sub
pop
sbb
dec
jbe
dec
inc
repz
jmp
gs
jge
jno
mov
decl
jae
cltd
inc
inc
call
and
xlat
fstpt
lock
jnp
sub
add
iret
fldt
test
das
cwtl
jnp
cmp
rcrl
and
pop
sbb
or
or
push
and
loope
aas
inc
mov
mov
cmp
sub
shrl
mov
add
imull
jnp
loop
mov
into
repnz
dec
popa
adc
ror
addr16
mov
cli
push
dec
inc
inc
shrl
xorl
repz
xor
movsb
jmp
ficompl
in
xlat
mov
cmp
jno
outsb
leave
into
stos
fcompl
jge
aam
data16
xchg
jl
arpl
xchg
mov
push
mov
rorb
dec
pop
pusha
dec
jnp
mov
fsub
inc
fcoms
push
in
outsb
dec
ret
dec
jl
pushf
adc
mov
push
jae
inc
pop
dec
jp
mov
cmp
xor
xchg
movsb
mov
sub
sahf
cmp
or
movsb
fmull
sub
push
dec
inc
enter
inc
mov
loop
sbb
xor
mov
push
in
cmpb
inc
mov
loopne
cmp
add
out
ud0
mov
and
das
add
pop
daa
mov
lods
lea
jmp
icebp
xchg
sbbl
and
mov
inc
jns
inc
xorl
and
je
mov
in
cmp
mov
xchg
sbb
add
dec
cmp
cmp
stos
icebp
adc
fnsave
daa
mov
sbb
loopne
push
ljmp
ret
pop
clc
add
and
popf
mov
cli
shrb
jp
push
fmull
pop
aaa
bound
or
sbb
andb
push
or
out
ljmp
mov
dec
movsl
mov
cmp
mov
ja
cmp
ds
push
adc
xor
or
push
mov
sub
jge
inc
aam
adc
and
fiaddl
fwait
sub
into
mov
outsl
mov
ljmp
jecxz
in
notl
push
jo
pop
inc
aam
aam
ret
inc
pop
dec
add
shlb
ja
fcoml
add
and
sbbb
cmp
fcompl
inc
dec
enter
jbe
jnp
iret
cmpsb
or
filds
sbb
aaa
and
pop
loop
ret
pop
sub
scas
sbb
aad
dec
filds
int3
push
or
jecxz
inc
xor
dec
sbb
sbbb
movsb
xchg
dec
xchg
dec
dec
jns
mov
mov
xor
sub
sahf
pop
bound
cs
inc
jmp
jns
push
inc
xchg
sub
stos
jge
inc
lcall
cmp
test
out
push
stc
cs
lret
add
test
popf
mov
mov
and
sbb
shrl
stc
inc
mov
iret
aaa
adc
lds
in
sub
cld
sti
stos
mov
loopne
pop
fwait
in
mov
es
lea
sti
push
pushf
push
jb
inc
cmc
sub
jne
shll
push
sbb
add
xchg
sub
cmp
xor
aam
xor
mov
dec
pop
sahf
je
cmp
pop
mov
fisubrl
call
sub
bound
addr16
ret
inc
add
mov
mov
enter
ss
or
push
add
jae
or
mov
sarl
out
mov
pop
ja
mov
inc
xchg
inc
iret
pop
cmp
sub
in
lds
pop
push
mov
vmovhps
call
mov
xor
cmpsl
ficomps
shll
jne
ficomps
adc
sbb
scas
sub
icebp
icebp
inc
xor
pop
icebp
dec
lcall
movsb
mov
scas
pop
loop
push
jne
dec
adc
scas
out
jnp
andps
in
imul
ret
cmp
and
or
lods
orb
inc
mov
repnz
ret
add
call
das
call
std
mov
inc
push
xor
shlb
js
sahf
mov
in
stos
jecxz
and
push
jo
fs
int
mov
test
inc
leave
iret
mov
rolb
in
xchg
inc
jne
or
jl
xchg
lret
mov
pusha
inc
ljmp
inc
dec
push
cltd
jno
push
lret
arpl
mov
and
repnz
pop
popa
jl
imul
xor
mov
leave
aam
mov
movsl
or
and
enter
jno
rcll
inc
fbstp
or
in
and
arpl
lret
nop
add
out
dec
js
mov
cmc
stos
adc
sub
jecxz,pn
aaa
push
stc
sub
jo
ja
fwait
cmp
aaa
data16
mov
or
fdiv
rcll
and
mov
insb
jle
je
cs
orb
xchg
movsb
es
fs
fwait
cmp
fcomps
sub
cmc
and
rorb
and
lds
inc
jecxz
mov
div
enter
and
xor
daa
dec
sbb
pop
xor
mov
sbb
push
mov
jp
in
and
lcall
cli
add
movb
sbb
pushf
fidivs
mov
push
pop
mov
inc
push
adc
inc
lret
push
f2xm1
test
mov
jp
push
pop
jne
xor
and
popf
cmp
pop
lcall
loopne
sub
sbbl
push
add
mov
cmp
insb
stos
push
add
pop
fnsave
fmulp
cmp
inc
cmp
inc
jo
mov
inc
sub
in
mov
xor
les
icebp
jmp
dec
mov
adc
pop
pop
cmpsl
sub
xchg
ds
mov
xor
cld
insl
xor
cmpsl
adc
jecxz
jb
lods
inc
mov
mov
mov
dec
and
push
pop
xchg
jecxz
ficompl
mov
mov
ljmp
sarl
repnz
pop
mov
cmpsb
mov
mov
popf
xchg
xchg
fwait
xor
call
pop
xor
and
and
or
sbb
rcll
push
and
jne
mov
xchg
jmp
ja
xor
mov
scas
pop
jbe
add
xor
movsl
push
pop
mov
push
faddl
adc
or
jbe
icebp
imul
sbb
bound
stc
or
xor
outsb
call
jle
xchg
into
dec
pop
cmpsb
mov
lcall
mov
mov
fsubs
shlb
mov
cmp
xchg
mov
push
pop
mov
sarl
cs
iret
pop
out
push
test
mov
cmpsl
ljmp
iret
mov
mov
cmp
loopne
jle
ljmp
nop
mov
icebp
sbb
or
cli
imul
sub
ja
push
fsubs
leave
pop
or
repz
mov
loop
add
xchg
js
mov
test
test
cmp
mov
out
popa
push
into
fidivrs
loopne
lods
outsb
ret
push
div
divb
sub
addl
int
inc
jno
cld
movsl
add
dec
lods
mov
jb
dec
inc
cltd
dec
add
fldenv
or
mov
mov
ja
mov
adc
into
mov
xchg
lods
jb
cmpsb
out
jbe
cmp
shlb
lock
imul
iret
or
push
pop
pop
imul
out
sbb
pop
das
sahf
push
in
test
outsb
mov
inc
pushf
bound
movsb
insb
outsb
adc
jbe
into
pop
dec
sub
rcl
inc
xchg
fiadds
arpl
std
sub
lret
addr16
lods
and
jmp
push
inc
mov
ds
jne
sub
dec
xchg
xor
pop
fcoms
add
aaa
repnz
mov
add
xor
lret
add
subl
add
inc
inc
mov
inc
pop
nop
insb
mov
insb
fbstp
or
sub
dec
outsl
out
je
popa
insb
int
ljmp
lods
addr16
ja
js
or
inc
data16
or
in
shll
rol
das
mov
lea
arpl
jne
adc
mov
sub
mov
clc
ja
test
jns
xchg
xchg
push
sub
insl
outsb
rclb
test
inc
idivl
sbbb
push
out
arpl
bound
jne
jns
shlb
sbb
pusha
int3
clc
out
jmp
add
adc
repnz
lahf
and
sbb
mov
push
xor
arpl
call
cli
jne,pn
and
cmpsl
int
cmc
adc
lds
mov
pop
cmp
clc
test
iret
add
add
in
movsl
sbbl
fmuls
sub
frstor
cs
fmuls
cmp
push
lea
into
sub
inc
adc
das
dec
jae
jl
mov
pop
fsubr
and
fistpl
lea
mov
outsl
push
popf
sbb
ret
pop
sub
and
pop
inc
jae
inc
mov
daa
fcoml
and
or
mov
outsb
enter
jle
stc
push
push
das
push
adc
lret
push
xchg
inc
mov
mov
lcall
sub
dec
mov
xchg
xchg
loope
iret
nop
xor
mov
test
sarb
pop
or
fwait
in
ret
push
xor
push
clc
mov
mov
cmp
divl
inc
lods
jne
pop
jno
mov
push
hlt
cwtl
mov
outsl
in
push
add
cwtl
add
aad
sub
lret
adc
and
dec
pop
aad
stos
adcb
fisttpl
xchg
cmp
sub
rorb
inc
mov
sahf
test
stos
pminsw
push
outsl
mov
sbb
add
sbb
pop
jge
adc
mov
inc
mov
add
test
mov
pop
repz
mov
adc
imul
xor
jle
jle
data16
add
scas
ficompl
stos
xchg
subl
adc
test
mov
xor
rcrb
hlt
pop
cltd
jne
fwait
rep
jno
pop
dec
icebp
cwtl
lahf
ficoms
or
int
xor
les
movsl
add
addr16
jge
iret
jb
jns
test
mov
loope
jge
push
gs
inc
iret
push
pusha
ror
xor
aas
xchg
movsl
mov
add
add
andl
and
std
cmp
stos
loopne
fnstcw
stos
inc
inc
mov
and
push
pop
aas
inc
pop
mov
out
xchg
out
push
add
cmpsl
mov
mov
lret
in
outsl
test
mov
pop
lods
movsb
add
and
pop
xor
sbb
das
dec
add
hlt
lods
fdivl
jo
xchg
pop
mov
aad
push
test
mov
jmp
outsb
std
push
xor
clc
mov
dec
mov
lods
push
testb
cwtl
gs
lods
andb
or
mov
imul
and
pushf
sub
sahf
mov
mov
loopne
mov
in
aam
inc
ret
jp
lock
das
clc
js
add
xor
pop
inc
jo
dec
jbe
loopne
inc
xchg
and
rcrl
orl
inc
popa
addl
inc
cltd
inc
xchg
mov
xor
fwait
lret
rcll
xor
outsl
push
cmp
cmp
out
ja
popf
pop
and
xor
and
mov
push
jmp
jno
es
push
or
adc
call
mov
xchg
popf
xlat
sti
mov
lcall
repnz
push
mov
fcomip
cs
aad
hlt
mov
jl
in
je,pt
push
push
xchg
movsb
lcall
inc
out
mov
adc
inc
dec
cmp
jne
scas
int
cmp
inc
into
mov
fdivrl
loop
mov
inc
jmp
dec
add
mov
aam
popa
push
insl
mov
push
daa
and
lahf
pop
or
pop
bound
jns
jg
rorb
jae
nop
xor
push
js
push
add
sbb
jb
sub
push
or
push
out
inc
adc
pusha
push
sbb
movsb
or
stos
ja
jno
icebp
inc
lcall
sub
or
orb
int
push
icebp
jp
rorb
xchg
push
jp
dec
sub
test
push
ficoms
jne
xchg
imul
inc
or
subb
push
mov
cmp
in
cmpsb
pushf
push
test
and
cmc
insb
lods
and
lock
pop
es
sub
sbb
fcompl
incb
out
pop
jmp
xchg
stc
pop
jne
movsb
xchg
inc
xchg
mov
push
stos
adc
jle
sub
cmpsl
push
in
jae
aaa
push
pop
cmpsb
inc
jo
fwait
or
jecxz
leave
test
adc
rcrb
ret
repnz
shl
mov
ds
les
xor
outsb
mov
mov
sbb
dec
fcmovbe
mov
jnp
shlb
pop
pop
shr
ret
popa
jle
iret
xor
inc
adc
cld
pushl
shll
xor
popa
push
mov
cld
or
pop
adc
fldt
fiadds
sahf
enter
js
cmc
aad
std
sbb
jbe
lret
aas
mov
xchg
subb
pop
cltd
adc
lret
push
cmp
cmp
cwtl
dec
pop
cmpsb
mov
daa
testl
scas
and
fs
push
arpl
loope
cmc
jge
bound
add
push
rorb
out
arpl
or
dec
in
clc
popf
ret
lret
jg
push
and
dec
lods
insl
add
sub
cwtl
ret
test
xchg
xchg
dec
adc
and
cmpl
ljmp
mov
or
out
pop
jge
mov
stos
ret
imul
in
push
dec
cltd
inc
sub
call
cmp
mov
mov
lock
scas
jo
pushf
sbb
mov
sbb
fcmovb
mov
push
aaa
dec
mov
cmp
or
dec
or
mov
je
sbb
xchg
aam
pop
sub
inc
lret
pop
jle
mov
repnz
and
mov
outsb
pop
jns
in
repnz
movsb
sbb
or
popf
add
inc
adc
jnp
dec
inc
loopne
cmp
jne
or
loopne
pop
std
or
push
shl
add
lret
push
adc
mov
inc
xchg
pop
jge
mov
pop
loopne
in
cmp
cs
pushf
fs
es
adc
lods
jmp
insl
lret
push
pushf
mov
mov
in
mov
adc
push
or
dec
inc
jne
rcrb
bound
and
pushf
out
cmp
jae
pop
jbe
pop
xchg
aas
add
mov
enter
inc
out
cltd
ret
lcall
das
icebp
mov
cltd
and
inc
adc
mov
xor
push
mov
push
scas
insl
je
xor
ja
pop
ss
lds
xor
cmpsb
cmovg
out
dec
xor
jo
lds
sbb
mov
jb
push
sub
cmpl
in
cmpsb
nop
jno
fisubrs
cmp
xchg
jle
push
pop
sub
lea
loop
mov
bound
dec
inc
sbb
and
pushf
push
data16
adc
outsb
sbb
pop
pop
aas
mov
xor
add
lahf
mov
mov
cmp
popl
cs
or
xchg
stc
dec
jecxz
sbb
and
dec
lcall
insl
adc
push
gs
cmp
sbb
rol
sub
cmpsb
cmpsb
push
leave
lds
or
lret
ds
stos
or
es
int3
in
inc
lods
lret
shll
lret
fistl
inc
jbe
xor
neg
inc
inc
sbb
mov
adc
mov
mov
jne
jmp
outsb
nop
fistpll
dec
lret
mov
jmp
loope
fwait
cld
rol
sub
repz
mov
or
ljmp
shrl
ja
add
fdivrs
pop
lods
test
testl
mov
lret
test
je
movsl
movsb
movsl
dec
ljmp
outsb
orl
mov
adc
pop
bt
cwtl
inc
mov
adc
mov
sti
push
add
cmpsb
inc
inc
mov
in
shlb
and
insb
jno
sbb
push
jge
mov
mov
addb
inc
mov
cmp
dec
mov
xchg
scas
mov
xlat
pop
xchg
mov
call
xor
cli
sahf
xlat
mov
int3
ficompl
and
in
push
test
mov
xchg
divl
mov
mov
sahf
cmpsl
adc
mov
push
push
mov
add
leave
in
mov
xchg
jmp
cmp
add
das
push
add
inc
subl
cmpsb
std
jmp
xchg
xlat
mov
pop
push
lea
sbb
leave
xchg
and
xor
inc
xor
shrl
pop
rcll
addr16
negl
sub
push
loope
insl
add
xchg
xchg
popf
pop
mov
cmp
lock
shrb
add
insb
mov
cmp
fistpl
popl
add
or
pop
push
mov
mov
out
out
aad
dec
outsl
or
cli
push
inc
push
imul
jl
addr16
mov
pop
lret
std
dec
ror
mov
sbb
cmp
inc
sbb
test
loope
movsl
mov
inc
or
mov
loop
movsl
cmp
outsl
icebp
mov
mov
call
xchg
lock
lret
xchg
leave
pusha
adc
aam
pop
mov
sahf
movsb
or
sub
push
out
lock
pop
rorb
xor
jp
ds
popa
inc
popa
mov
mov
pop
or
or
aad
mov
or
jl
add
sub
xor
into
aas
jmp
cs
adcl
add
mov
sub
mov
inc
scas
in
mov
fldcw
inc
jle
sti
outsl
cmp
dec
cs
inc
cmp
add
mov
push
sbb
mov
mov
dec
in
or
push
imul
inc
fldenv
imul
or
mov
fmulp
je
push
incl
insb
dec
scas
mov
xor
xor
push
inc
dec
shlb
xchg
mov
or
add
daa
cmp
bt
xor
in
add
adc
and
ret
test
xor
int3
rcrb
xchg
stos
repnz
sbb
inc
inc
and
mov
push
popf
es
out
das
and
out
adc
jns
jo
jl
outsb
insl
mov
mov
movsl
lea
sub
push
popa
in
bound
sbb
xchg
and
push
sub
push
loopne
fld
int
pop
test
inc
dec
ljmp
xchg
cmpsl
in
jnp
mov
cmpsl
mov
xchg
stos
stos
fnstsw
mov
cmp
mov
nop
push
mov
in
cmpsl
inc
jg
scas
dec
mov
scas
cmp
shrl
mov
cmp
jl
aam
sub
movsb
push
lock
inc
push
scas
dec
ss
into
jo
push
cmpsl
xchg
and
insl
inc
int3
push
mov
shll
mov
clc
out
int
mov
stos
sbb
lcall
jp
push
mov
cltd
cltd
push
push
sbb
in
in
in
push
push
and
enter
sub
add
sti
pop
and
lds
lods
test
imul
sub
notb
mov
out
sbb
out
mov
adc
mov
pop
out
pusha
lcall
repz
aam
loop
or
fidivs
out
rolb
imul
lcall
cmp
aam
stos
mov
into
inc
sbb
adcb
or
test
mov
orb
add
mov
stos
and
shrl
call
and
arpl
mov
mov
mov
mov
sub
call
adcb
push
cltd
int3
mov
mov
cmp
icebp
sub
xchg
rcll
shlb
lds
dec
outsb
lea
or
push
sarl
sbb
mov
mov
fists
lock
lea
jp
dec
push
cmp
push
mov
xor
add
xor
cs
pop
push
rcrb
aas
stos
mov
xchg
or
icebp
pushf
sub
jns
add
inc
addb
mov
push
mov
out
mov
mov
mov
in
lcall
jbe
les
test
jne
cmp
nop
mov
mov
jp
push
mov
out
stos
push
imul
xor
sbb
push
ret
cltd
lds
pop
pop
gs
jge
sti
xor
lea
xor
cmc
dec
and
adc
inc
movsb
popf
pop
mov
popf
outsl
add
pop
adcl
jns
pop
pop
movsl
push
fsub
outsl
xchg
cmp
inc
roll
dec
cltd
rcr
sub
mov
or
js
cmpb
gs
jecxz
jecxz
cmp
je
inc
dec
inc
adc
sub
and
mov
ss
cmp
ficoms
push
dec
mov
and
inc
pop
cmpsl
cltd
push
hlt
shl
bound
es
outsl
inc
xchg
adc
out
int
out
rorb
push
insb
pusha
xor
call
andl
push
pop
shl
xor
test
jl
jbe
test
jo
xchg
mov
inc
lret
andb
mov
sub
test
sub
sbb
test
into
orps
jae
mov
adc
repnz
add
adc
or
pusha
mov
ret
jmp
out
pushf
adc
lock
ret
outsb
dec
xchg
imul
mov
jns
adc
adcl
cmc
mov
and
dec
sahf
ret
in
dec
jge
mov
push
bswap
roll
sub
add
out
push
lret
jo
std
xor
add
and
movsl
ret
push
xchg
pop
jge
fmul
inc
mov
dec
nop
sbb
jnp
xor
xlat
adcb
xor
push
cmpsl
in
andl
pusha
in
lcall
insb
jnp
or
sub
and
outsl
jb
fwait
stos
imul
push
jmp
mov
test
lahf
jge
dec
notl
pushf
pop
imul
jne
and
adc
jmp
outsl
nop
add
pop
jge
loope
movsb
jae
mov
outsl
aad
inc
mov
dec
mov
dec
push
sbb
jae
fwait
and
mov
iret
inc
add
iret
mov
sahf
repnz
sbb
jmp
stc
inc
dec
pop
mov
inc
lds
jne
adc
xor
cmpb
adc
or
cmpl
test
pop
inc
mov
loop
inc
or
mov
cmp
sbb
mov
xor
cli
test
and
inc
popf
sarb
cmpsl
test
or
adc
xlat
sbb
ret
in
js
pop
lds
mov
and
pop
in
imulb
sbb
push
int
dec
mov
sub
mov
icebp
and
mov
mov
cmp
sub
jnp
xchg
repz
insb
cmpl
sbb
cltd
fs
into
outsb
insb
jae
cmc
jle
or
adc
pusha
jns
push
ror
push
cmc
mov
cmc
xlat
in
pushf
xchg
xlat
repz
mov
adc
mov
dec
cmpsb
jnp
add
notb
sahf
repnz
outsl
jl
stos
inc
in
lret
and
int3
test
nop
jecxz
sub
test
std
pop
stc
jae
xor
jge
xchg
out
mov
inc
xchg
xor
xor
jmp
fsubl
push
adc
jl
mov
push
fcoms
jmp
sahf
repnz
mov
push
xor
sti
adc
and
push
mov
sbb
sub
sti
jl
out
jbe
xchg
lock
movsl
pop
loop
sub
sbb
jne
gs
xor
mulb
pop
test
outsb
insb
idivl
push
xchg
dec
int3
das
adc
clc
call
fsubrl
jp
jb
xor
iret
sbbb
sbb
or
stos
adc
aas
mov
pushf
pop
mov
cmp
pop
gs
movsl
xlat
pop
add
repz
inc
mov
jl
and
xor
test
mov
cs
xlat
mov
fsub
mov
pusha
aas
stos
push
out
mov
shlb
or
xchg
ret
xor
mov
xchg
repnz
icebp
mov
mov
dec
fsubrl
add
xor
bound
mov
jmp
cmp
pop
pusha
add
movsl
outsl
enter
dec
mov
andl
and
jmp
jmp
and
xor
sub
bound
pushf
fwait
jg
xor
dec
fstl
outsl
mov
cmc
and
sahf
rcrl
jge
pop
sub
dec
enter
std
jno
not
dec
orb
and
arpl
xchg
call
and
ret
or
sub
add
dec
xchg
test
add
repnz
daa
xor
hlt
inc
jle
xor
cltd
mov
pop
jno
sub
test
out
test
popf
sbb
rcll
movsb
stc
push
adc
or
pop
loop
add
dec
or
or
and
jle
fs
out
push
ljmp
cmc
xor
sbb
stc
inc
sbb
jns
push
and
sub
xchg
aad
in
mov
ljmp
loop
cmp
add
rolb
pop
cmp
rcl
sbb
sahf
adc
push
je
cmc
fisubrl
push
lea
inc
xchg
aas
inc
mov
inc
lret
aaa
jp
cmc
jb
add
enter
sbb
or
test
cmc
xchg
rorl
js
insl
xlat
lcall
pusha
xor
add
outsb
mov
scas
xor
and
jg
call
iret
ja
lods
cli
cmp
mov
outsl
add
jo
cmp
nop
mov
les
mov
adcl
daa
inc
lret
insb
outsb
add
jns
add
and
leave
sub
dec
or
mov
aam
sahf
outsl
lock
push
mov
xor
loop
dec
aad
fs
in
push
and
outsl
and
cmc
imul
adc
outsl
int3
xchg
add
rolb
and
cmpsb
fs
pop
xorl
xor
sbb
xor
cld
popf
jbe
dec
or
mov
sub
lock
ja
fldenv
aad
pop
mov
cwtl
dec
fstps
movsb
lret
xchg
mov
sbb
cmp
test
fstps
test
adc
xchg
incb
stos
test
mov
xor
xor
jno
icebp
or
shlb
loopne
test
aad
sub
pop
push
mov
push
ja,pt
addr16
mov
push
cwtl
adc
push
inc
xor
movsb
adc
xchg
les
ja
pop
pop
mov
fldl
sub
jmp
mov
int
movsl
movsb
xor
loope
cli
outsb
and
push
inc
mov
and
and
sbb
sbb
push
aad
test
jae
fidivrl
and
push
fiadds
test
jns
xchg
push
ja
xorb
cltd
pop
mov
mov
xchg
dec
add
cmp
loopne
adc
lea
js
xor
push
push
mov
nop
out
clc
cmpl
mov
cmp
or
xor
xor
push
pop
pop
popf
sbb
jmp
jbe
jmp
jp
lds
mov
adc
fidivrl
push
sub
inc
cmpsl
inc
xorb
pop
xor
jp
jecxz
and
nop
out
push
push
mov
inc
xchg
adcl
pop
enter
loopne
popf
rcl
iret
imul
xor
jne
mov
jb
ds
mov
outsb
out
jge
xor
cmpsb
lret
repnz
mov
packuswb
lods
stos
arpl
int
gs
cmp
cmpsl
fucomi
pop
cwtl
scas
mov
pop
test
xor
push
add
xchg
mov
xchg
aaa
or
stc
mov
cmpsl
lock
dec
mov
les
and
xor
lcall
and
or
bound
aad
jmp
pop
xchg
jns
push
ljmp
mov
pop
jbe
daa
adc
pushf
xchg
mov
pop
iret
cmp
stos
std
out
movsl
insl
mov
aas
or
jae
and
inc
xorl
inc
dec
loop
arpl
in
mov
mov
xor
or
and
out
inc
int
jb
mov
mov
or
adc
je
jl
or
rorb
jbe
sbbl
add
cmpsb
mov
into
test
ljmp
xlat
mov
dec
iret
test
loopne
mov
push
jns
adc
loopne
inc
fcoml
mov
in
gs
cmp
push
fsubp
bound
in
dec
enter
stos
int3
in
cmp
adc
fwait
inc
dec
sbb
dec
xchg
xlat
cmp
pop
pop
sbb
aam
pop
mov
cld
cli
fisubrl
movsl
lods
mov
sub
adc
mov
adc
jmp
out
mov
push
insl
mov
jg
and
dec
mov
cmp
es
out
sub
mov
xchg
repz
push
push
les
sub
addl
cmp
into
inc
cmp
jg
or
shrb
fwait
pop
sub
pop
ljmp
jns
adc
fstpl
cmp
inc
out
nop
call
and
jno
adc
out
xor
cmp
xlat
jb
aad
xchg
mov
stc
insl
and
in
js
fnstcw
jo
and
jns
jmp
sub
out
rcl
pushl
fmuls
sbb
and
adc
sub
cltd
and
cmpsb
jmp
cmp
and
adc
jo
mov
out
out
notl
popf
jg
push
pop
scas
dec
pop
dec
cld
dec
xor
fimull
std
mov
bound
pop
sbb
cld
dec
pop
mov
lds
cmp
clc
xor
pushf
xchg
adc
jge
aaa
sar
jge
ror
jmp
sub
xchg
xchg
gs
shr
popa
or
leave
or
push
push
jge
test
dec
popf
xor
inc
repz
xlat
subb
je
mov
or
mov
loop
and
pop
xchg
outsl
test
xlat
stc
xchg
lret
mov
lcall
or
or
test
or
xor
jmp
stos
sbb
mov
xchg
push
mov
push
es
sub
add
int
xor
adc
fbstp
jmp
daa
mov
jl
jbe
repnz
xor
jle
dec
pop
test
dec
sti
mov
cmpsb
stos
xor
and
scas
cs
push
rcll
xor
adc
xor
push
imul
xchg
out
js
test
push
mov
pop
sub
fstps
sbb
std
jle
or
xorl
or
adc
pop
repz
mov
jb
cmp
add
getsec
ja
in
pop
roll
nop
push
mov
push
or
xchg
sub
fdivrl
cmp
pop
and
xchg
aad
sbb
out
mov
scas
aam
lret
sti
loopne
mul
sbb
movsl
sub
push
xorl
mov
sbb
gs
cmpsl
or
sub
add
outsb
jecxz
push
insb
stc
dec
orb
loopne
mov
sbb
shr
decb
int
das
cmp
sbb
ja
cmpsb
jns
enter
insl
inc
pop
sub
dec
data16
jbe
daa
popf
xchg
cmpsl
xor
sub
inc
ror
dec
cmpsl
dec
scas
cmp
and
jge
inc
push
push
bound
inc
and
shlb
sahf
mov
arpl
dec
xchg
ljmp
mov
cmp
jmp
subb
mov
sbb
lea
sarl
leave
jmp
xor
js
jecxz
dec
add
test
test
lea
fdivs
mov
push
xchg
out
movsb
insb
std
adc
daa
shll
aas
push
aaa
dec
int3
sub
movsl
xor
mov
sub
inc
dec
cli
xchg
test
negl
in
sub
xchg
fcomp
imul
scas
sbb
sahf
cmp
pop
popf
mov
sbb
and
cmp
stos
add
nop
mov
xchg
sti
stc
cld
lret
jo
rcl
fimuls
ret
push
cli
in
es
add
icebp
idivl
nop
daa
push
test
test
cmc
pop
push
fcoml
mov
mov
xlat
andl
xchg
ret
xor
pop
jno
jle
scas
mov
inc
shlb
dec
lock
mov
and
jns
push
sbb
pop
sar
pop
movsb
std
jecxz
xchg
push
cs
sbb
sar
jl
lcall
mov
popf
adc
mov
test
out
mov
das
jno
test
movsb
sub
cmp
aas
stos
test
xchg
xor
cmpsl
cld
cli
loope
inc
cmpsl
fmull
pop
and
out
add
cmp
lods
test
pop
mov
xlat
sbb
inc
cmp
pusha
push
in
pop
leave
xor
enter
imul
loope
mov
loopne
int3
push
mov
inc
sarb
and
pop
pushf
sub
adc
mov
push
outsb
ret
push
push
mov
and
cwtl
push
fs
in
lret
pop
int3
inc
shlb
mov
cmp
mov
jnp
inc
push
mov
outsb
jns
loop
out
jecxz
mov
jbe
inc
xchg
mov
add
aas
mov
mov
xchg
mov
and
xor
inc
dec
jecxz
aam
add
imul
dec
lock
popf
fwait
shlb
enter
repnz
loop
xor
lods
mov
loop
mov
cmp
sbb
mov
or
daa
cmp
adc
xchg
inc
xlat
maskmovq
testl
cwtl
sub
or
mov
mull
scas
push
cmp
pushf
pop
xchg
jnp
add
jno
cmp
cli
xor
fisttpll
jno
fnstenv
repz
cmc
xchg
xor
sub
and
popa
outsl
add
arpl
mov
aas
int3
test
dec
mov
sub
mov
movb
inc
cltd
sbb
mov
movb
pop
sbb
pop
roll
cld
sbb
sub
icebp
xchg
mov
shlb
adc
xor
out
in
cmp
and
test
mov
aas
pop
das
les
hlt
sbb
mov
xlat
dec
push
fmull
and
shlb
shrb
adc
lret
jbe
cmp
test
jb
push
shlb
dec
and
push
out
and
dec
cli
adc
jmp
mov
inc
movsb
mov
xor
testl
in
mov
sti
mov
adc
xor
and
or
rclb
and
dec
or
sub
lods
mov
mov
cmp
mov
loope
or
pop
lods
mov
fistl
pop
adc
imul
mov
sub
out
inc
push
mov
inc
scas
enter
ret
cmp
es
in
push
push
in
fiadds
fdivrs
das
jecxz
cmpsb
or
inc
jo
incb
int3
xor
les
or
lret
ffree
mov
fidivl
add
fildll
pop
mov
add
jmp
icebp
xlat
push
sbb
pop
sarb
and
sbb
insb
xlat
jo
push
jne
rorb
push
sub
imul
lods
inc
daa
popa
jnp
cmc
dec
fldl
xor
lods
pushl
push
jne
loopne
ss
stc
shl
xor
push
mov
mov
dec
int3
cwtl
out
movsl
fwait
repnz
clc
inc
outsb
pusha
loopne
fbld
fs
lcall
xchg
inc
ficoml
int3
or
ljmp
push
arpl
mov
test
stc
push
mov
data16
movsl
push
shll
xor
aam
subb
into
loope
lock
sbb
ja
jmp
cs
enter
mov
daa
shll
lcall
mov
aam
ds
mov
mov
stos
aaa
mov
and
js
sbb
mov
aad
in
hlt
add
mov
jl
movsl
leave
clc
dec
and
add
pop
lcall
adc
inc
leave
sbb
cli
push
sub
add
push
lods
inc
mov
cmp
std
lret
cmp
cmp
es
mov
xor
js
fists
mov
mov
aam
mov
cmpsl
nop
xchg
idivl
adc
jl
inc
fsubp
iret
loopne
mov
pop
or
inc
mov
in
sar
ret
xchg
lods
hlt
cmc
movsl
jb
shll
push
loopne
daa
fwait
and
mov
int3
data16
sbb
test
and
inc
out
test
test
lahf
pop
cmp
stc
loopne
jg
rorb
ret
pop
mov
mov
push
dec
cbtw
sub
les
sub
cmpsl
mov
loopne
call
movsl
gs
nop
fiadds
in
lahf
mov
pop
mov
in
sbb
adc
xor
and
lea
pop
jae
pushf
repz
jb
push
mov
jecxz
fildl
nop
pushf
jns
fsts
loop
or
scas
mov
pop
lock
xchg
test
loop
xchg
cmc
out
pop
rcrl
clc
data16
push
adcb
push
jecxz
xor
cltd
cld
mov
lods
cmp
jmp
dec
aam
push
in
xor
inc
pop
icebp
jae
sub
ja
mov
movd
inc
lcall
jmp
out
call
inc
sbbl
shll
sbb
and
mov
popa
fisubrs
mov
xor
jb
inc
out
movsb
icebp
or
mov
and
and
hlt
addb
add
fistl
jl
jmp
mov
and
sub
popa
mov
daa
sbb
ret
jmp
in
in
sbb
add
pop
jecxz
addr16
cli
fsubl
outsl
push
mov
sub
out
cmp
test
xchg
test
sbb
push
and
or
mov
mov
in
jecxz
dec
rclb
mov
ljmp
sub
mov
cmpsb
and
inc
ds
cmc
lcall
aam
int3
jge
mov
subb
or
mov
int3
rorb
sti
lahf
pop
stos
mov
icebp
aad
jb
push
sub
mov
jno
insb
into
in
mov
jae
pop
xchg
lret
mov
mov
pop
mov
mov
mov
lret
mov
out
lahf
pop
and
cmc
xchg
xchg
stc
in
push
dec
xor
daa
adc
fadd
xor
sub
les
lods
lods
pop
xor
js
pop
cmc
mov
mov
cmp
push
ss
pop
call
out
xor
cmp
jb
call
xchg
mov
push
mov
mov
cmp
lret
incl
sbb
loop
movlps
pop
bound
mov
mov
push
cwtl
out
test
xor
mov
data16
add
adc
mov
sub
adc
mov
aam
fdivr
fmuls
dec
cli
and
rorl
dec
loope
add
push
dec
loop
aam
addr16
repz
push
mov
cltd
push
js
or
or
cmpb
xchg
cltd
xchg
popf
aam
rcrl
dec
nop
stc
jns
addr16
add
lds
pop
dec
aam
cwtl
xchg
xchg
fcoms
sahf
and
or
cwtl
pop
xchg
lock
mov
mov
jg
jle
push
push
adc
js
ja
shrb
and
inc
mov
push
push
and
das
mov
mov
clc
xchg
sub
cmpsb
mov
pop
out
in
xchg
pop
push
mov
cmp
int
cmp
jnp
fnstenv
mov
pop
addr16
or
ret
ja
test
cmpsb
jecxz
inc
jno
mov
fdivrl
cld
lods
sbb
loope
or
inc
icebp
les
scas
add
xor
outsl
sti
addr16
jle
inc
add
fimuls
xchg
sarb
push
push
out
fwait
cmp
lods
jl
leave
enter
mov
push
and
add
nop
xlat
mov
adc
jg
sbb
add
xchg
xor
shrl
mov
movsb
mov
mov
dec
shrl
scas
jmp
cltd
dec
push
pop
test
push
scas
in
and
leave
pop
shrb
jle
iret
add
rcrb
or
pop
mov
test
xor
cmp
sahf
mov
jns
out
or
dec
mov
xchg
punpcklbw
jne
push
pop
rcll
xor
lock
dec
into
mov
sub
cs
mov
loope
sti
stc
cmp
and
add
xchg
cmp
mov
shlb
pusha
loop
xor
xchg
lock
sbb
sbb
icebp
inc
out
lock
xor
ja
mov
push
lret
jb
sarb
std
mov
xchg
or
add
addr16
xchg
push
repnz
ret
arpl
or
add
out
xorl
pop
inc
into
insb
fwait
enter
aaa
jmp
pop
fstpl
sub
xor
or
and
cmp
inc
mov
pop
js
adc
xor
adc
xchg
testb
dec
inc
popf
and
push
pop
cmp
and
mov
out
out
adc
out
ss
or
out
ss
and
jmp
and
inc
inc
call
mov
ljmp
stos
xchg
adc
rorl
aad
jnp
push
stc
insb
jo
adcb
or
push
push
loopne
dec
or
cmp
mov
test
ljmp
rolb
cli
repnz
lock
icebp
mov
in
int3
repnz
lds
lcall
addr16
addr16
lock
pop
jnp
add
les
movb
push
pop
pop
push
shr
adc
push
aaa
pop
ss
cmpsl
ret
dec
dec
xchg
sti
ficoml
pop
sbb
mov
and
jmp
and
int
add
out
adc
mov
xadd
out
or
shr
ret
shlb
push
xor
pop
mov
dec
inc
loopne
push
pop
mov
sbb
mov
stos
out
pusha
loopne
sbb
ret
xor
dec
mov
stos
and
xor
nop
inc
or
and
cmp
or
pop
mov
pop
xchg
fbstp
outsl
jl
sbb
in
mov
imull
lods
shlb
xor
dec
xlat
shll
xor
cmp
xchg
cs
mov
xor
xchg
icebp
cltd
stos
fisttpll
xor
jnp
cmp
sub
ror
jl
adc
cs
in
mov
mov
xlat
sub
arpl
and
pop
out
cmp
lcall
sub
xchg
out
mov
sub
or
push
push
xchg
jne
stc
xchg
jno
orb
jp
bound
sub
lahf
or
jb
inc
pop
cmp
jo
loop
sti
or
into
loopne
jb
jecxz
cmp
sub
aaa
sarl
ss
dec
xor
inc
fwait
cmp
out
sub
xchg
orl
pop
cmp
mov
es
adc
cmp
sarb
add
jge
xchg
xchg
nop
daa
inc
sub
push
push
js
scas
adc
stc
out
mov
loopne
shlb
jo
dec
xchg
xchg
sar
jbe
pusha
mov
xchg
gs
dec
fnsave
in
call
test
xor
jg
xor
mov
cmp
inc
enter
jp
or
std
and
add
sbbb
push
into
dec
out
dec
xor
xor
rorl
icebp
dec
xchg
gs
push
arpl
fisttpl
fisttpll
iret
add
sub
xchg
or
lock
inc
add
sub
shll
imul
jp
pop
xor
sbb
and
negl
or
out
dec
adc
into
das
mov
mov
jle
idivl
iret
sbb
adc
rclb
icebp
addb
icebp
jb
mov
andb
out
sbb
pop
dec
mov
xchg
xchg
cltd
push
std
dec
mull
sub
arpl
xor
lods
daa
ficompl
add
mov
loop
repz
inc
push
iret
ljmp
fstl
push
mov
or
jg
lds
pop
lea
pop
mov
add
and
mov
notb
ljmp
mov
inc
sar
into
lcall
pop
fldt
fisubrs
add
inc
mov
dec
add
adc
in
lahf
cmp
lret
inc
adc
jnp
pop
cli
enter
mov
inc
xchg
pop
enter
clc
mov
adc
stos
jge
jl
mov
xor
push
mov
sub
popa
push
dec
rorb
xchg
fwait
scas
dec
inc
mov
pop
xchg
mov
stos
dec
push
mov
insb
sbb
jp
hlt
sub
sbb
jno
int
daa
shrb
insl
mov
sbb
jo
pop
lds
in
or
jb
ret
and
lret
push
pop
dec
dec
mov
pushf
mov
ret
sahf
cs
pushl
cmc
ja
mov
cmp
push
pusha
mov
lods
pop
and
std
inc
mov
or
xor
adc
push
testl
into
pusha
mov
sar
in
and
repnz
les
mov
int
dec
jmp
subb
movb
pusha
sub
in
xchg
sbb
pop
xor
inc
jnp
push
enter
or
push
inc
push
ret
jg
add
mov
out
mov
icebp
in
scas
in
cs
aas
les
jnp
insb
cwtl
mov
lds
push
cmp
mov
scas
ret
dec
adc
jae
std
cmp
js,pt
test
jb
mov
mov
cmp
adc
xchg
xor
fdivrs
shlb
cmp
and
out
and
int3
add
mov
arpl
adc
mov
loopne
pop
ja
shll
lret
je
into
sbb
xchg
aam
sub
inc
fnop
out
mov
sbb
cwtl
xchg
out
lcall
mov
push
pop
dec
loop
rorl
in
out
mov
and
mov
jecxz
pop
cmp
xchg
sub
lods
mov
sbb
lcall
jbe
xchg
loope
cmp
pop
or
data16
sub
push
adcl
jl
int3
stos
stos
cmp
mov
popf
in
xchg
add
adc
dec
iret
cmc
inc
ss
verr
sub
cld
fs
jmp
mov
push
xor
mov
sub
subl
xor
mov
cltd
xchg
push
pop
mov
int3
call
xchg
xor
sub
and
push
into
mov
scas
inc
jae
or
push
dec
pop
push
out
repnz
push
jb
call
imulb
cmp
aaa
add
cmp
push
fwait
daa
aaa
aam
push
scas
push
cmp
shrb
cld
nop
jo
add
out
mov
cmc
jb
es
int3
rep
jnp
adc
test
jge
dec
add
lea
xchg
jb
iret
out
cmpsb
lahf
ljmp
fucomi
sbb
test
xor
popf
lock
popf
xlat
gs
push
jle
push
nop
xchg
xchg
lock
xor
js
mov
push
adcl
sbbl
shll
fmuls
mov
cwtl
roll
ds
call
cmpsl
xor
das
cwtl
into
cmpsl
insb
add
mov
lahf
lahf
jae
jae
and
mov
push
push
lahf
xor
das
sbb
movsb
arpl
cmc
jo
movsb
mov
js
incb
arpl
aad
in
mov
push
dec
and
add
jmp
popa
mov
jno
fstl
xor
gs
out
dec
jo
popf
ja
mov
stos
pop
sbb
add
mov
or
mov
hlt
xchg
sahf
cmp
outsb
mov
bound
ja
popa
aaa
mov
or
ror
xlat
dec
sti
mov
sbb
inc
popa
iret
in
add
cwtl
les
xor
push
imul
sub
int
and
loope
in
xor
aad
or
mov
ret
add
mov
outsb
cmpsb
sbb
mov
pop
cwtl
mov
add
out
test
imul
lea
pop
mov
add
mov
out
fdivrs
sbb
sbb
mov
fimull
mov
xchg
xchg
sub
mov
and
test
mov
sti
jo
movsb
dec
repz
clc
pop
or
in
adc
xchg
mov
add
ja
push
inc
leave
adc
mov
sub
dec
xchg
aaa
into
scas
stc
movsb
icebp
mov
push
jo
mov
or
bound
xchg
mov
lods
arpl
addb
push
cmp
fwait
jecxz
mov
xchg
add
je
cmp
shll
xor
fstps
pushf
andl
pop
xor
mov
xchg
out
addr16
sub
sahf
mov
int
push
iret
mov
into
adc
lock
outsl
pop
sub
arpl
cmpsb
pushf
cmp
adc
int
dec
xchg
or
js
daa
add
sti
stos
adc
cmp
ja
js
xor
movsl
outsb
or
cltd
mov
jmp
xchg
jmp
xchg
sub
sub
push
cmp
loopne
mov
popf
or
daa
jno
dec
add
adc
and
push
jle
or
fdivrp
scas
sahf
or
jg
cmp
mov
ds
mov
mov
imulb
xor
iret
mov
addr16
repz
xchg
or
cmp
sbb
int
cmp
ljmp
sti
dec
mov
and
pusha
mov
fcomip
stc
or
adc
pop
lea
fdivrl
andb
outsl
aaa
shll
cli
jl
hlt
sahf
pop
js
mov
mov
dec
call
mov
mov
jg
jno
ret
sbb
mov
lods
jg
xor
pop
jb
fdivl
or
jno
xor
popf
nop
xchg
daa
push
arpl
cmpsl
pushf
push
pop
lret
lods
mov
aad
mov
xor
loopne
xlat
push
sti
push
and
mov
gs
ret
addl
xchg
mov
lods
pop
jmp
push
pop
ds
cmc
outsb
sub
sbb
jmp
adc
add
shlb
push
push
sub
fsub
hlt
sbb
test
cmp
push
push
sub
push
movsb
aas
popa
or
fildll
dec
dec
ss
or
scas
ja
inc
fadd
dec
xchg
lcall
xor
pop
push
orl
test
test
cmp
test
mov
adc
cmpsl
add
jg
in
mov
es
orl
or
ficoml
cs
aas
mov
cmc
xor
daa
dec
call
je
mov
jle
das
loop
scas
cmp
rcl
jecxz
std
mov
mov
insl
cld
inc
adc
jmp
mov
jnp
call
jae
jns
lret
mov
movsl
mov
je
hlt
inc
enter
cmpl
push
or
jle
xchg
xorb
test
and
aas
and
out
cmc
movsb
rolb
test
push
pop
fs
sub
mov
ret
or
lock
or
lcall
into
mov
mov
adc
stos
and
push
lds
or
out
xchg
repnz
shrb
out
xor
lahf
adc
dec
add
push
es
cmpsl
xlat
pop
sbb
xor
and
add
xor
pop
test
insb
mov
xor
and
xchg
xor
sahf
lahf
and
mov
aam
push
push
mov
pop
xchg
pop
sub
mov
lds
int
rorb
pop
lock
jne
aas
jg
dec
lock
push
insl
clc
jle
scas
add
insl
jno
arpl
xor
shr
sbbb
jmp
inc
and
je
lahf
adc
mov
xor
lret
adcl
pop
push
push
cwtl
out
and
lods
imul
in
mov
mov
in
push
aam
inc
lock
jge
mov
cs
out
int3
sub
addr16
adc
add
push
cli
mov
push
in
mov
push
jno
dec
fdiv
xchg
jo
nop
pushf
mov
dec
mov
sahf
insl
or
mov
mov
mov
imul
mov
pop
cwtl
js
mov
sbb
daa
or
cmp
push
repz
cwtl
scas
in
inc
or
int
sbbl
cmp
add
aaa
or
nop
add
adc
xlat
hlt
orl
lock
dec
push
dec
shlb
ficomps
inc
push
xlat
inc
out
inc
repnz
rolb
movsl
imul
sbb
xchg
fistpll
and
je
mov
mov
jae
and
dec
jno
lcall
das
push
cwtl
std
sbb
jmp
popa
in
mov
and
fisttpl
push
test
out
dec
std
gs
xchg
jns
movsl
fwait
mov
add
push
cwtl
fucomi
mull
pop
je
in
jbe
mov
das
into
std
and
or
aad
cmc
rcrb
fistpll
fdivl
in
sbb
sbb
inc
lods
and
imul
nop
pop
jecxz
nop
pop
je
mov
aaa
in
test
push
fstl
mov
jnp
div
js
or
xchg
inc
divl
xor
push
sbb
fstpt
ja
mul
push
iret
arpl
enter
scas
adc
rorb
xor
push
dec
adc
int
iret
sbb
outsb
add
mov
push
ljmp
scas
jae
add
push
or
xor
mov
inc
or
pop
pop
mov
mov
fwait
add
pop
dec
lods
push
adc
movsb
scas
out
or
cltd
data16
ljmp
xchg
ja
inc
mov
out
inc
or
jmp
add
adc
pop
inc
pushf
or
aad
push
es
sbb
push
xchg
lods
xor
push
lods
inc
push
pop
xchg
pop
repz
mov
add
fisttps
add
fsts
clc
dec
out
sbb
cmc
pop
pop
and
js
and
fwait
mov
rorl
cmpsb
sarb
push
pop
pop
adc
sub
arpl
lods
call
or
loopne
lcall
fsub
insb
rclb
aas
dec
ds
ljmp
int
movsb
jnp
popw
ss
inc
or
pop
pop
dec
incb
hlt
pop
jp
icebp
dec
jg
sbb
stos
jnp
in
or
lock
fldcw
mov
les
or
sbb
add
hlt
ror
or
loop
mov
push
push
data16
ljmp
mov
repnz
subb
ss
pop
xchg
mov
out
cmp
add
loope
sbbl
mov
fsubrs
fists
mov
mov
je
push
pop
push
iret
sarb
jnp
mov
mov
xchg
cmpsl
je
pop
dec
jne
cmp
fisttpll
test
mov
aad
add
xchg
sbb
pop
es
std
mov
jg
mov
and
call
or
pop
mov
xchg
mov
addr16
fs
push
out
pusha
loope
in
stc
aam
mov
sti
lods
aaa
fwait
pop
xlat
aaa
xlat
pop
inc
jle
add
mov
testl
andb
mov
fwait
in
jnp
sbb
test
dec
add
aam
loopne
mov
mov
xchg
data16
mov
xor
cltd
dec
pop
push
aam
jle
test
bound
push
scas
mov
dec
fsts
decl
rcrb
lahf
lahf
add
mov
adc
out
insb
pop
loop,pt
fidivs
pusha
imul
sub
into
cmpsb
imul
cmp
jl
lods
jnp
ror
dec
xchg
dec
jl
repz
xchg
jb
xchg
cli
pushf
rorb
jecxz
pop
subl
in
sbb
out
pop
inc
jecxz
jb
mov
out
popf
fld
mov
push
and
outsb
test
shlb
add
add
xlat
add
fs
sub
cmp
popa
bound
and
test
test
bound
adc
fwait
dec
add
cmpsb
cmp
jg
xor
inc
cltd
int3
jp
ficoml
jmp
xchg
push
icebp
loopne
dec
js
cwtl
mov
sub
push
insl
dec
loop
aaa
aaa
pop
aad
push
push
rclb
xor
mov
jne
ljmp
push
sub
pop
dec
cmp
cwtl
adc
jecxz
push
negb
xor
pop
ficompl
cli
push
rcll
fildll
mov
mov
repnz
test
insb
das
push
push
stos
mov
loope
fadds
add
sbb
imul
sahf
ds
push
out
test
jp
push
nop
loopne
push
adc
scas
xor
xor
shlb
jge
ja
dec
cltd
stc
lret
mov
dec
and
add
xor
sbb
call
add
out
outsl
cltd
xlat
or
loopne
andb
int3
sub
add
in
mov
inc
mov
cli
jne
jnp
loope
mov
movsl
fcoms
and
imul
push
lret
mov
push
add
out
xor
in
sbb
and
aaa
and
scas
in
insb
and
xor
push
mov
or
les
cs
sbb
rorl
leave
addr16
pop
xchg
fdivrl
pusha
test
out
dec
sbb
jg
sbb
scas
push
jmp
pop
addb
mov
xchg
mov
mov
out
js
insb
movsb
mov
dec
push
loopne
test
sub
jae
mov
adc
xor
push
xor
jns
lcall
dec
in
je
decb
imul
push
inc
ja
jl
dec
cwtl
loop
in
xchg
clc
adc
aad
call
addr16
leave
sti
popf
jmp
or
pop
outsl
adc
lods
push
shl
fdivrp
cli
inc
je
out
xorl
jae
repz
in
not
outsl
mov
stc
fdivs
outsl
jnp
or
fs
sub
imul
pop
andl
scas
gs
fst
lcall
pop
loope
shrl
push
adc
mov
inc
jns
out
cs
data16
jecxz
push
jo
sub
cmpsb
sar
popa
sub
sbb
orl
into
loopne
and
xlat
aaa
and
xchg
inc
in
movsl
repz
mov
dec
jmp
int
loope
mov
sbb
mov
fdiv
sahf
fiaddl
xchg
sahf
bound
lock
jecxz
and
stc
adc
mov
fs
and
and
js
adc
cld
loop
add
popl
sbb
and
in
dec
arpl
in
js
sub
push
addb
push
notb
icebp
sub
jb
nop
inc
xchg
adc
mov
cmp
xor
insl
lock
loop
es
pop
cmp
jns
add
cld
test
and
scas
loope
sub
fnstsw
testl
dec
xchg
cmp
rcll
adc
add
jb
popa
fwait
lret
mov
push
inc
dec
repnz
adcl
popf
mov
dec
outsb
or
or
and
rorl
add
stos
lret
pop
cwtl
xchg
dec
xchg
leave
fldenv
xchg
pop
mov
pop
sbb
test
aam
jecxz
int3
shr
fistpll
daa
pop
lds
mov
outsl
cmp
jmp
jne
xchg
call
jmp
jp
mov
pop
ljmp
jecxz
xor
rcrb
popf
aam
xchg
pop
imul
ret
sub
leave
loopne
jl
dec
dec
jb
adc
inc
xor
push
cmpps
jnp
pop
xor
je
jmp
and
ret
mov
icebp
jecxz
data16
repnz
outsb
cli
arpl
xlat
incl
in
aad
adc
pop
lret
jns
out
popf
cld
in
sbb
jns
sub
loope
cmp
ja
fdivrl
lcall
roll
and
dec
clc
add
sub
lea
fistpl
popf
jb
mov
jo
scas
pop
xchg
push
mov
imul
adc
mov
repnz
inc
and
out
mov
sbb
or
adc
jp
js
leave
ret
daa
mov
mov
andb
sti
and
and
push
pop
clc
sub
inc
sub
ror
xor
dec
inc
lods
clc
inc
mov
mov
sbb
sub
scas
inc
xchg
out
icebp
js
les
jle
push
sti
in
bound
push
adc
daa
pop
xlat
test
sub
sbb
arpl
xchg
out
mov
sbb
jmp
rorb
jge
ret
xor
lcall
outsb
pop
movsl
adc
negl
mov
repnz
xor
test
xchg
je
adc
or
addr16
sub
jo
mov
ror
pop
loope
mov
rorb
cmpsl
dec
hlt
and
fcmovb
daa
lret
sub
mov
out
and
or
inc
pop
or
jo
setae
scas
call
cmp
shrb
add
xor
clc
jge
push
cwtl
jmp
add
pop
fisttps
or
jbe
into
sbb
mulb
arpl
js
jmp
xor
cmpb
movsb
cld
sbb
cmp
mov
pop
pop
push
sbb
mov
movb
je
jo
mov
dec
xchg
fistps
lods
or
inc
pop
push
in
pushf
scas
subl
add
cmp
aam
or
lock
testl
fwait
mov
xchg
fadd
xchg
inc
adc
cltd
aam
cmp
and
mov
mov
stc
popa
jecxz
cmp
inc
xor
mov
loope
jmp
mov
es
jmp
cmp
cli
sti
leave
std
mov
push
mov
inc
cwtl
adc
or
xchg
out
dec
scas
pop
inc
mov
stos
fstl
ret
mov
ret
or
push
loop
adc
into
ret
int3
sbb
sbb
jo
movsl
or
in
stc
data16
out
xchg
dec
adc
mov
cmp
scas
sub
mov
std
adc
dec
or
aaa
repz
cltd
or
ja
aaa
mov
xchg
xchg
mov
orl
jns
std
mov
cli
popa
jae
or
push
sbb
repz
hlt
sbb
scas
mov
xchg
or
dec
cmpl
dec
and
out
shll
imul
pop
lahf
mov
adc
dec
daa
xchg
dec
aad
aas
jge
mov
sahf
jno
inc
fstpl
mov
or
mov
jbe
dec
jnp
adc
adc
pushf
jno
mov
mov
movsl
mov
adc
sbb
popf
jne
es
cmp
sub
ret
and
dec
out
lock
popf
popa
rolb
cmp
out
shr
lahf
inc
lcall
jnp
mov
loop
imul
sbb
adc
into
loope
repz
adc
aas
lcall
hlt
into
push
movsb
mul
shll
mov
fldt
test
pop
push
mov
data16
imul
ror
je
pop
icebp
or
popf
mov
inc
addl
dec
cmp
jl
xor
xor
sbb
push
out
mov
xor
pop
shll
pop
inc
enter
test
shrl
add
cli
andb
adc
sbb
xchg
imul
xlat
xchg
jmp
jo
pusha
cwtl
enter
mov
jnp
jle
mov
scas
sub
repnz
ss
pushfw
mov
enter
mov
dec
shrl
pop
scas
mov
mov
lret
aam
int
or
insb
xchg
push
aas
imul
gs
pop
jmp
cmp
ds
adc
in
jnp
adc
test
and
xchg
or
aaa
xchg
js
loope
pop
adc
shrb
pop
out
shll
popf
adc
mov
or
cmp
jp
mov
adc
cmp
mov
push
mov
fisubrs
xchg
out
sahf
sub
mov
mov
ja
add
mov
fdivl
push
or
mov
push
jp
pushl
gs
push
push
sub
outsb
pop
mov
push
rcl
xor
or
cmc
sbb
dec
call
jmp
enter
outsl
ret
or
xor
sti
pop
add
out
mov
ret
rcrl
imul
push
clc
adc
in
sbb
test
pop
inc
hlt
pop
imul
popf
imul
icebp
lock
inc
push
pop
mov
jg
pop
daa
xor
mov
xchg
clc
roll
test
lds
or
xor
mov
sbb
mov
jae
push
mov
xchg
adc
aam
repz
test
adc
movsb
push
xchg
pop
inc
push
das
mov
addl
sub
icebp
sbb
jmp
pop
jnp
stos
stc
adc
popf
jge
pop
rorb
jp
pusha
popf
jnp
cmpsb
sti
gs
sub
xor
js
std
mov
mov
mov
repnz
push
dec
xor
xor
dec
scas
sub
movsl
add
cmpsl
sub
xchg
mov
pop
sbb
imul
sbb
dec
jb
aam
int3
addr16
aaa
loopne
push
sbb
jmp
mov
hlt
aad
xlat
mov
add
push
andl
xor
push
sbb
mov
loopne
push
stos
iret
shrb
add
es
dec
pop
lret
jge
cmp
inc
sbb
adc
mov
test
xchg
push
addr16
mov
int3
repz
in
les
or
dec
dec
test
cmp
stc
call
loop
cltd
clc
adcl
jo
xor
sti
jl
xor
or
cmc
pop
add
ds
mov
decl
xchg
aam
mov
leave
jbe
sub
test
and
out
testb
sbb
mov
addb
and
shrb
rcrl
cs
mov
add
jecxz
andb
leave
stc
cmc
sub
es
dec
iret
inc
mov
sbb
fnstenv
mov
mov
add
mov
add
aaa
stos
adc
subb
mov
mov
lahf
insb
adc
mov
test
sub
mov
lods
clc
nop
cmpsb
mov
xor
mov
and
movsl
jmp
or
push
inc
xchg
out
and
icebp
dec
mov
add
xchg
mov
inc
pop
out
outsl
pop
lcall
pop
call
mov
inc
push
mov
outsb
call
hlt
jns
fisubrl
sbb
cli
stc
aam
cmpsl
ds
mov
orl
mov
or
js
and
mov
mov
push
dec
mov
jae
push
jg
dec
cld
addr16
aam
repnz
fwait
adc
mov
dec
andl
push
cltd
jbe
nop
in
out
mov
push
dec
dec
adc
sub
bound
mov
notb
and
jg
pop
repz
lods
cmp
ffree
fs
fldcw
fsubl
rorb
xlat
lea
scas
aad
out
mov
cmc
imul
sbb
pop
out
aad
rolb
mov
divb
test
shrl
pushf
adc
pop
stos
loopne
icebp
fistpll
gs
xchg
xchg
fwait
ja
push
or
jne
mov
fnstsw
out
inc
in
mov
in
jnp
xor
ja
fidivl
loopne
push
jo
xor
or
popa
add
mov
add
inc
push
cmp
pop
dec
ljmp
cmp
std
mov
pusha
cli
ljmp
sbb
fadds
scas
repz
subl
adc
push
mov
mov
push
pop
fcmove
sub
push
dec
and
popa
fisubrs
add
aaa
int
xchg
push
ljmp
and
aaa
ret
or
pop
das
pusha
mov
pusha
dec
icebp
sbb
mov
das
ret
sub
dec
cmp
out
into
inc
movsl
mov
dec
enter
js
cmp
ret
and
enter
notb
dec
test
loopne
pop
and
xchg
repz
mov
outsl
ja
push
cld
dec
mov
clc
mov
adc
out
push
dec
mov
sbb
push
rorl
bound
mov
pop
ljmp
loope
popa
inc
pop
lds
imul
or
je
cltd
ffree
pop
inc
movsb
pop
xorb
mov
loop
mov
pop
jecxz
fldl
cmp
sbb
test
or
scas
jno
dec
sub
mov
mov
jmp
je
xchg
and
pop
push
shll
insl
push
sbb
and
xchg
rcl
in
out
hlt
scas
stc
push
sbb
push
push
inc
fdivrl
sbb
nop
lock
mov
lock
push
inc
ja
pop
stc
in
jg
lds
xor
cmp
test
insl
xor
sub
sub
dec
adc
aad
in
pop
call
push
dec
sub
mov
mov
xor
lods
cltd
jo
ret
in
mov
adc
push
and
inc
pop
jo
test
fstpt
out
test
insb
stos
stos
insl
add
inc
inc
and
outsb
add
hlt
dec
push
cmp
cmpsl
add
gs
pop
pop
dec
sub
iret
mov
insl
adc
jb
outsl
fwait
jg
mov
cli
test
imul
arpl
iret
mov
cmp
jns
loopne
stos
adc
xor
jl
mov
in
imul
in
jl
mov
fnstenv
fisttpl
fwait
iret
inc
sub
lds
jns
jg
mov
ss
cmp
dec
xchg
lea
dec
xor
or
repnz
inc
mov
pop
outsb
out
inc
add
lcall
and
incb
mov
lds
mov
jmp
jg
xchg
jo
arpl
push
fmull
popf
in
icebp
mov
mov
stos
popa
decl
mov
push
les
jl
lahf
pop
fsts
les
push
inc
jo
mov
popf
push
dec
sub
and
mov
mov
jecxz
das
cmp
roll
mov
out
mov
mov
mov
out
test
jnp
jge
daa
int
pushf
clc
push
sbb
xor
lock
sub
mov
dec
fcmovb
movb
mov
push
jp
test
int
imul
sti
push
mov
push
out
movsl
stos
addr16
add
xorb
stos
or
pop
mov
sub
jmp
add
lret
test
shll
push
dec
fidivs
ja
dec
rcl
mov
jl
mov
roll
mov
mov
xor
inc
inc
aad
vunpckhpd
add
pop
jp
push
mov
das
and
mov
push
push
leave
movsb
push
mov
or
dec
xchg
pop
push
jae
loop
jmp
push
add
mov
add
xor
lret
jno
in
inc
dec
and
and
cwtl
repz
inc
mov
xchg
sbb
sbb
subb
or
lcall
jecxz
push
push
daa
or
iret
mov
fwait
movsl
popf
mov
xor
mov
push
push
lahf
out
fisttpll
fadds
sub
roll
pop
dec
dec
sti
push
sbb
pop
or
xor
in
in
push
jmp
js
jo
lcall
out
aas
sbb
imul
movsb
adc
push
push
inc
call
jne
xlat
cwtl
push
fcompl
cwtl
pop
or
dec
mov
negb
xlat
xor
ja
lret
cmpsl
cltd
repnz
mov
adc
mov
xchg
push
cmp
test
add
cli
out
into
xchg
idivl
pop
test
add
pop
mov
test
in
cwtl
cli
adc
push
test
jecxz
mov
adc
mov
add
rcrb
sbb
push
jmp
lcall
je
adc
data16
mov
cwtl
lcall
repz
ret
mov
and
dec
loopne
fldenv
sti
outsb
push
jns
loope
imul
or
pop
fwait
sbb
or
mov
xor
out
out
mov
in
adc
xchg
clc
int3
call
cwtl
or
jnp
insl
mov
cltd
subl
jo
addr16
mov
and
push
movsb
cltd
loope
out
leave
jbe
movsb
mov
adc
test
out
lret
xchg
adc
pusha
imul
aaa
jbe
movsb
test
in
pop
ret
xor
xchg
inc
fisubl
inc
js
add
mov
dec
adc
dec
imul
jl
rclb
mov
pop
pop
add
scas
jmp
ja
sub
jns
shll
sbb
pop
stos
nop
les
mov
push
cmp
imul
and
mov
or
popf
or
aam
add
les
sbb
fimull
cmc
fstp
add
mov
sub
jge
js
jo
call
xor
jmp
repz
movsl
fnstenv
xchg
arpl
pop
jo
fistpl
repnz
inc
mov
int
fdivl
add
mov
scas
or
pop
iret
jns
or
out
or
and
mov
and
clc
incb
add
mov
js
in
dec
or
cmpsl
xchg
pop
pop
loop
adc
outsl
stos
cmp
out
movsl
jns
adc
xchg
sahf
lock
mov
shll
stos
pop
out
mov
sub
pop
lea
sbb
out
pusha
dec
orb
loope
jne
cmpsl
arpl
and
pusha
jb
adc
add
sbb
push
lods
inc
int
jecxz
into
in
xchg
and
loop
shll
dec
jno
ss
add
hlt
mov
inc
mov
std
jb
jno
adc
js
movsl
ss
push
nop
push
push
xor
jp
lods
push
cltd
subb
cmovbe
stos
test
inc
pop
push
mov
shll
or
jne
xchg
add
xchg
aaa
fimull
cmp
scas
cmc
mov
jmp
int3
mov
fucomi
inc
xchg
jns
test
and
and
loopne
popf
fldt
insb
mov
and
insl
ret
fsts
pop
xor
xchg
jecxz
mov
jo
ljmp
inc
stos
push
push
push
roll
xorb
jae
jns
pop
jmp
mov
adc
xorb
push
sbb
sti
pusha
out
add
jl
bound
xchg
pushf
push
out
and
mov
jbe
xchg
scas
adc
push
or
xlat
adc
push
mov
xchg
jecxz
inc
hlt
outsb
sti
dec
fcomps
jne
push
xchg
ljmp
dec
pop
lock
lds
push
or
mov
adc
lea
pop
fldenv
shr
imul
lea
xor
arpl
inc
ds
sub
lds
mov
mov
outsl
insb
sub
mov
repz
lock
push
pop
bound
adc
jp
idivb
jge,pt
fidivs
xor
fdivrl
cmp
pop
lcall
in
add
out
dec
xchg
int3
pop
in
fiadds
bt
pop
inc
mov
out
loope
push
pushw
adc
pop
rolb
jmp
dec
push
mov
adc
sub
cmp
adc
imul
sbbl
add
pop
sbb
nop
xor
aam
cmp
xor
mov
mov
movsb
lods
sbb
xchg
out
mov
into
aam
test
xor
out
mov
dec
xchg
test
sbb
dec
subb
fimuls
push
das
sbb
call
dec
push
div
push
out
sahf
sti
mov
insb
mov
movsl
mov
hlt
rcrb
jp
mov
and
mov
dec
cli
repnz
in
xor
stc
mov
inc
fld
ja
aad
xlat
add
movsb
xchg
mov
in
pushf
xchg
shlb
test
push
inc
dec
add
lahf
sbb
inc
jae
shr
cmpsl
repnz
fstpl
xor
sub
xchg
cmp
fwait
sub
cmpsl
bound
shl
in
mov
mov
inc
adc
dec
push
fbld
xorl
enter
push
or
jno
push
xchg
dec
mov
push
push
pusha
jmp
xlat
pop
dec
xchg
movsb
lret
push
jns
adc
mov
pmaddwd
call
stos
sub
fwait
mov
dec
pop
je
push
jae
jo
or
pop
icebp
sub
cs
mov
push
es
gs
sbbl
mov
std
mov
mov
sbb
adc
stc
daa
stc
pop
sub
mov
sbb
sub
mov
mov
inc
add
inc
add
in
mov
pop
inc
jnp
cld
mov
enter
dec
xchg
idiv
jl
fs
xor
dec
sbb
sbb
pop
ss
je
adc
enter
jmp
cmpb
push
clc
xor
fldenv
imul
jo
pop
in
and
inc
and
sti
daa
jge
adc
lret
pop
fwait
jle
xor
hlt
sar
sbb
insl
lock
push
ret
iret
pop
jp
sub
xchg
adc
xchg
fildl
es
call
lock
mov
mov
or
or
mov
arpl
movsl
jl
cmpl
icebp
sub
clc
jp
dec
bound
sub
jbe
and
xchg
dec
pop
xchg
cmp
bound
sbb
mov
jae
add
mov
push
arpl
icebp
fxtract
out
sub
lret
xor
popf
movsl
fiaddl
insb
out
mov
pusha
push
dec
sub
mov
dec
jmp
push
insl
stos
ficomps
dec
lods
movsb
ret
xchg
sub
ss
shll
xchg
ret
nop
mov
jnp
sbb
scas
sub
lcall
inc
aas
sub
repnz
dec
dec
xor
andl
fs
loope
das
jmp
inc
call
test
icebp
jne
push
xchg
das
add
mov
adc
loopne
xchg
int3
xlat
jo
std
pop
pusha
sbb
adc
pop
sbb
sub
or
push
xchg
mov
test
cmp
loop
push
es
shrb
or
push
xlat
testb
dec
shrl
mov
sub
out
add
stos
fildl
or
cmp
xor
push
jp
pop
fldenv
pop
or
sub
rol
or
mov
sar
ss
cs
insl
sahf
mov
xor
nop
xor
xchg
inc
cltd
sub
mov
jp
dec
jno
push
cmp
xchg
push
pop
mov
in
xor
arpl
lret
jmp
dec
test
movsb
repz
rorb
or
or
pop
xor
add
and
js
inc
in
in
stos
add
jecxz
xor
into
push
add
test
push
jo
xor
lds
mov
scas
sub
xchg
rcrb
fwait
cmp
xchg
mov
out
or
pusha
mov
push
pop
mov
add
mov
dec
jo
push
shl
hlt
std
cmp
stos
sbb
pop
shlb
enter
ret
fidivs
ds
dec
jle
sbb
mov
lcall
jl
insl
ljmp
inc
xor
js
loopne
sub
mov
push
lcall
nop
add
aad
pusha
imul
in
push
pop
inc
cmp
or
and
sbb
cmp
and
lcall
inc
add
aad
aam
adc
ljmp
jno
imul
xchg
inc
lock
outsl
arpl
sbb
or
and
mov
and
adc
sarb
iret
mov
sub
pop
ret
out
add
mov
pop
or
pushf
rorb
ret
test
ljmp
enter
mov
sbb
dec
inc
mov
add
xchg
mov
movsb
add
dec
cmpsl
xchg
loope
ror
cmpsl
sbb
mov
sub
lret
out
adc
pop
mov
dec
mov
pop
or
enter
pop
fidivl
and
mov
xchg
xchg
in
fstl
jmp
xor
jecxz
pop
cltd
cwtl
sbbl
mov
sub
and
scas
mov
sub
sbb
pop
dec
inc
mov
mov
push
lds
inc
out
sarb
aas
sub
test
cmp
or
stos
test
mov
js
and
dec
add
xchg
aad
mov
xchg
lods
add
ret
pop
data16
sub
sub
repnz
lahf
xchg
test
mov
sub
mov
mov
dec
and
imul
xor
out
sub
imul
int
cmc
jmp
adc
cmp
push
ss
mov
test
iret
lock
sub
cbtw
cwtl
or
data16
fwait
out
mov
adc
nop
jno
jmp
sub
lods
fildl
mov
lock
jl
adc
xchg
adc
mov
icebp
rorb
popf
and
adc
sbb
sbb
sbb
fcmovne
cmovno
fistpll
psraw
and
repnz
cltd
jecxz
cmp
popf
jns
sub
adc
pop
int3
sti
cltd
lods
inc
sbb
xor
es
xchg
les
cmc
stos
repz
mov
pushf
push
xchg
shrb
gs
sbb
insb
fnstcw
or
cs
fnstenv
mov
jb
jle
les
adc
mov
xlat
dec
gs
add
xor
xor
jge
mov
ret
stos
ja
push
jmp
outsl
jnp
or
ja
jns
or
clc
jmp
fcmovbe
fisttpll
fwait
lods
in
xlat
cmc
sbb
inc
cmp
popa
add
xchg
leave
inc
lcall
pop
out
mov
ds
popa
inc
ja
cmp
sbb
pop
xor
das
dec
pop
and
or
fbld
in
or
in
mov
inc
int
xchg
lds
movsl
adc
int3
mov
int3
and
sti
popl
or
call
xor
push
in
arpl
lcall
call
sbb
stos
pop
jmp
inc
sarl
dec
fiaddl
push
xchg
xor
ds
popf
push
and
jecxz
int
ja
pop
pop
xchg
push
add
adc
outsb
xchg
and
mov
shl
repnz
dec
pop
das
dec
xor
pop
mov
cmp
mov
and
mov
jle
loopne
neg
add
cmp
shrl
cmpsl
loop
enter
jge
push
std
sbb
xor
insb
jmp
mov
jl
cmp
bound
popa
xchg
adc
sub
stc
dec
rcrb
push
push
sbb
pop
pop
push
pop
or
push
scas
add
data16
mov
or
ljmp
lods
in
call
push
adc
lret
xchg
jb
push
and
pop
je
push
clc
mov
loope
call
add
and
les
cmpl
test
mov
mov
push
cli
rclb
test
dec
ds
push
testl
add
cmp
dec
and
mov
test
inc
jne
es
jb
cmc
pop
fbld
dec
jge
dec
push
lcall
test
sbb
imul
jmp
stc
cmpl
add
lret
jle
ss
cld
cmp
movsl
cmp
adc
xchg
movsb
adc
shlb
mov
mov
mov
or
icebp
push
mov
add
jb
or
adc
cs
push
in
cwtl
xchg
cmc
pop
jg
xchg
pop
add
jmp
and
mov
cmp
mov
push
mul
bound
cmpsb
mov
clc
inc
xor
cmc
lods
mov
mov
data16
arpl
jae
icebp
push
add
out
clc
sbb
ss
mov
pop
add
stos
stc
pop
adc
stc
dec
xchg
pop
xor
mov
dec
scas
leave
in
push
mov
inc
sub
out
adc
push
mov
daa
jbe
sub
ja
outsl
cmp
sub
rcl
inc
xchg
es
cmp
iret
xorb
icebp
fwait
popf
add
fistps
insb
inc
stc
push
dec
int3
jge
shrb
imul
sahf
add
mov
es
add
mov
pop
movsb
call
mov
pop
mov
std
inc
fmulp
add
cltd
dec
inc
push
outsb
mov
nop
stos
aam
ret
sbb
and
xlat
call
sub
dec
mov
rcrb
push
pop
xchg
mov
cmc
sbb
ffreep
adc
or
aas
stos
repnz
push
daa
pop
insl
repnz
jns
dec
sub
adc
cmp
repnz
aas
ds
sub
mov
rcrl
cmp
jmp
loop
out
jmp
pop
sub
xchg
ja
jae
outsl
adc
int3
cmc
inc
inc
dec
stos
jns
cmp
bound
add
movsb
fcoms
hlt
insl
or
roll
stos
push
xchg
scas
lds
rolb
and
push
pop
xchg
data16
jecxz
adc
aad
movsb
mov
dec
jmp
pop
mov
push
add
fsubrl
xchg
push
xor
push
push
mov
call
test
jecxz
push
add
or
out
push
inc
lret
inc
sbb
loopne
negl
add
cmc
xor
rcrb
mov
mov
sar
add
mov
in
cmp
ds
stos
push
dec
mov
inc
jmp
outsb
in
pop
jo
pop
cmc
jge
mov
cwtl
pop
js
imul
add
gs
mov
mov
test
leave
dec
or
dec
pop
shlb
pop
repnz
jns
xor
ret
loope
mov
subps
push
push
loopne
lods
das
je
mov
stc
ret
add
adc
ljmp
xchg
sti
add
cmp
int
inc
xor
das
test
fiaddl
dec
sbb
rol
stc
xor
add
jmp
lods
sbb
and
add
and
lahf
sub
insl
into
cmp
mov
lcall
and
cmp
xchg
test
jo
and
das
jnp
sbb
lretw
hlt
ljmp
inc
sahf
mov
pusha
sarb
inc
push
stc
cli
jnp
push
fisubs
sub
sbbb
call
pop
data16
mov
decb
adc
aas
sbb
mov
int3
pop
repnz
mov
dec
push
cmp
jbe
jbe
sbb
dec
pop
lahf
add
dec
or
inc
jg
mov
lock
push
outsl
fwait
push
mov
lods
cltd
divl
fisttpll
sub
or
jg
movsb
sub
nop
pop
mov
push
mov
jl
inc
add
call
mov
xor
aaa
or
pop
mov
cs
jmp
mov
roll
inc
lods
js
add
scas
ljmp
pushf
pop
jecxz
jb
dec
mov
int3
clc
jecxz
sbb
rcl
stos
sbb
iret
shl
cli
pop
negb
inc
movsl
jo
outsl
mov
adc
loopne
pop
lods
dec
adc
or
cli
sbb
cmc
pusha
mov
push
mov
shll
lahf
xchg
jg
jmp
push
lahf
push
fidivs
jmp
sbb
cmp
sbb
cld
and
add
sub
push
xchg
cmp
out
dec
lock
shrl
push
jae
or
mov
sub
test
mov
sub
insb
and
imul
sahf
jmp
mov
pop
xchg
es
fmull
pop
dec
sub
jno
aaa
cmpsl
xchg
sub
test
dec
clc
jnp
pop
push
cmpsl
fiadds
aaa
jecxz
sbb
inc
or
mov
arpl
jbe
int
jp
inc
stos
jae
ds
adc
add
push
pop
jb
ja
push
xchg
outsl
scas
jg
push
outsl
scas
xchg
mov
jmp
mov
mov
inc
sarb
cwtl
ficoml
cmp
mov
or
out
inc
or
bound
add
aam
inc
push
jbe
in
movsl
mov
sbb
adc
fistl
je
sub
in
mov
hlt
fisubrl
mov
imul
pop
cmp
fmuls
int
fisubrl
test
pop
cltd
pop
add
mov
fdivl
repz
adc
addr16
and
movsb
call
inc
inc
jg
pop
scas
push
push
cmpsl
enter
push
cmp
pop
mov
in
adc
mov
adc
mov
xor
mov
dec
in
mov
push
fsubrs
jge
or
loopne
movsl
out
sub
pop
fbld
sub
rcr
cmp
and
imul
pop
pop
jg
add
hlt
mov
lahf
in
ss
adc
cmp
dec
sbb
mov
insb
out
jnp
aas
cmp
nop
pmaddwd
push
es
xchg
mov
and
ja
in
sbb
mov
jl
inc
and
lods
sub
mov
imul
sbb
outsb
cmp
xchg
mov
adc
cmp
cld
lea
mov
cld
loopne
and
pop
adc
int3
enter
mov
cltd
mov
movsb
js
mov
sub
stos
xchg
les
call
hlt
adc
xor
fmull
jb
lcall
lcall
out
cmp
mov
xchg
sub
jb
cmp
ljmp
test
mov
cmp
mov
mov
push
cmp
lret
fdivr
dec
mov
sbb
mov
cmp
adc
dec
and
sbb
outsl
push
loop
frstor
jle
xchg
or
test
add
sbb
loope
call
ds
lods
es
call
xor
push
mov
push
rcrl
and
mov
adc
fsubr
mov
push
lock
addb
or
call
shrb
popf
cltd
test
push
inc
repnz
sbb
cld
mov
sbb
out
hlt
push
les
xor
ljmp
cld
dec
test
rcrb
dec
xchg
mov
add
jecxz
stos
xchg
mov
fdivrs
aam
jae
repz
mov
movb
jno
xchg
js
dec
ljmp
inc
jecxz
hlt
pushf
mov
insb
ficompl
cs
aad
adc
fs
aad
push
int3
leave
out
jbe
xchg
daa
dec
in
int
dec
aaa
jg
std
add
scas
sbb
leave
inc
imul
pushf
sbbb
xchg
test
mov
xchg
ss
jg
dec
cwtl
mov
xorl
mov
ds
pop
xor
mov
in
mov
cli
xchg
mov
hlt
cmpl
cmp
cmp
pop
inc
movsb
mov
xchg
dec
sbbb
mov
inc
jno
jns,pt
xchg
fs
and
mov
xchg
aas
jg
fnstcw
cmpsb
push
jns
and
lods
push
or
dec
enter
add
aam
push
push
and
mov
cmc
hlt
aaa
out
cmp
loop
bound
adc
adc
rclb
shlb
dec
mov
or
cmpsl
jne
orl
ds
stos
jae
sub
mov
adc
jno
cmp
out
pop
imul
add
icebp
outsb
adc
sahf
mov
insb
add
mov
and
or
out
std
lods
xor
sub
inc
rorl
dec
push
jnp
repnz
sti
movsb
enter
xor
xor
lds
cmp
fwait
mov
xchg
pop
xchg
aaa
and
and
lret
jns
daa
pop
outsl
xchg
ficoml
loopne
sbb
lcall
push
mov
popf
sub
sbb
adc
cmpsl
shll
jnp
sub
lock
pop
and
scas
lea
cmp
mov
test
add
adc
cmc
fwait
outsb
jp
into
outsb
fcmovu
dec
repnz
sub
insl
jo
sbb
cmp
dec
mov
push
mov
sbb
je
in
les
imul
lret
inc
mov
mov
sub
insb
movsb
lea
xchg
mov
inc
jp
repnz
pusha
mov
xchg
pop
adc
adc
mov
or
adc
iret
orb
mov
xor
lock
gs
rolb
popf
sahf
sbb
notl
jns
hlt
test
push
fucomip
bound
xchg
adc
repnz
mov
sahf
pop
xor
push
mov
push
xchg
lret
jle
aad
cwtl
jp
dec
xchg
push
ret
push
fwait
mov
aas
addr16
mov
jnp
and
mov
int
mov
out
movl
imul
xor
xchg
jmp
jp
aad
or
and
sbb
loope,pn
out
sbb
adc
repz
ja
fdivl
stos
clc
push
daa
jbe
outsb
test
loop
jecxz
cmpsb
push
ja
jge
sahf
sti
and
stos
dec
mov
das
add
dec
add
roll
clc
cwtl
sub
and
pushf
xchg
in
test
scas
xchg
push
xor
or
mov
aaa
mov
cs
jnp
push
sbb
mov
xor
loope
mov
adc
cmp
loope
xor
or
inc
test
jb
insl
pop
xchg
or
lcall
xchg
lcall
ficomps
popf
out
mov
push
mov
pushf
icebp
orl
stos
push
scas
repnz
push
ror
lods
ret
adc
dec
xchg
push
xchg
or
fnstcw
mov
sub
sti
xchg
or
gs
lea
lret
pop
pop
dec
xchg
push
andb
mov
push
in
stos
xor
or
pop
and
push
mov
dec
insb
sbb
test
cmp
or
adc
inc
les
adcb
insl
mov
mov
fimuls
ja
jge
xor
xchg
push
inc
fs
mov
add
or
and
jmp
fwait
mov
out
jnp
push
pushf
inc
fisubs
test
popf
xchg
dec
xchg
sbb
imul
pop
sub
mov
aad
mov
mov
pushf
popa
jne
push
imul
lcall
xchg
mov
lods
sub
cmp
inc
pop
lahf
or
stos
mov
pop
jnp
mov
xchg
ja
cmpb
jbe
pop
test
inc
mov
add
sub
push
jl
dec
in
mov
and
xchg
xorb
cmp
mov
cmpsb
outsl
xchg
jg
sbb
push
arpl
pop
xor
pop
add
test
decl
inc
mov
std
dec
mov
inc
mov
pop
insl
in
cli
xor
cmp
das
or
xchg
scas
mov
dec
hlt
mov
arpl
add
cmp
notb
xlat
cmp
push
divb
xchg
xchg
pushf
or
test
aad
fcoml
test
mov
into
push
lahf
xorl
and
popa
push
push
mov
jle
xchg
cli
dec
in
mov
mov
sub
fldcw
js
mov
pushf
or
pop
mov
add
xchg
cmp
push
jbe
and
jb
and
rcll
cmp
je
test
add
loope
cli
movsl
or
cmp
scas
pop
pop
mov
pushf
mov
xchg
sub
jns
push
adc
or
mov
lahf
mov
fisubs
imul
push
lock
mov
aad
clc
cmpsb
mov
dec
mov
ret
loop
mov
ret
loopne
mov
jge
or
shlb
push
or
decb
mov
mov
sahf
mov
loopne
mov
jmp
xor
adc
fisubrs
mov
mov
add
cs
dec
in
push
or
pop
das
mov
addl
cmp
mov
inc
jo
and
outsl
add
insl
mov
dec
xchg
dec
jne
inc
fimull
jg
int3
insb
cmc
arpl
cmp
push
repnz
mov
std
sbb
xor
stos
or
or
in
adc
jno
push
mov
mov
lods
jae
loope
js
ss
cmp
gs
out
sahf
out
inc
mov
jne
lods
fwait
std
lds
jnp
xlat
pop
fstp
sti
xor
int3
cmc
rolb
cltd
loopne
movsb
aaa
cmp
adc
fstl
mov
cmc
pop
hlt
ljmp
or
push
inc
push
pop
mov
test
xor
neg
dec
leave
inc
call
and
dec
aad
stc
lret
cltd
push
test
fbstp
adc
push
or
xchg
xchg
mov
xchg
repz
or
imul
jp
and
repnz
xchg
jl
push
into
dec
dec
mov
mov
outsb
ret
inc
adc
cmc
add
in
popf
je
push
jno
mov
jo
push
mov
push
mov
mov
xchg
lock
xchg
es
aaa
leave
jmp
jb
dec
inc
xchg
test
xor
jae
leave
push
cmp
cmpsl
outsl
rcrb
leave
nop
adc
jp
dec
clc
rorl
ljmp
mov
shll
add
push
insb
sub
adc
xor
xchg
cmpsb
je
negl
scas
dec
das
ret
addl
std
mov
cmp
scas
sub
inc
cmpsb
cmpsb
and
insl
sbb
jmp
push
jns
add
pop
cmp
jg
cmp
mov
pushf
dec
test
push
lods
xchg
mov
sub
pop
mov
lods
adc
call
das
gs
loopne
dec
mov
popf
xor
xchg
add
cli
aaa
repz
loop
shrl
jnp
mov
mov
or
fldcw
stos
imul
cmp
xor
enter
xor
call
out
test
fsubrs
dec
pop
in
cmp
std
push
lds
mov
mov
sbb
out
xlat
cmp
in
icebp
xor
pop
pop
xchg
divb
aad
add
hlt
pushf
dec
repnz
inc
shlb
lahf
add
daa
icebp
adc
out
insl
cmp
jns
movsl
mov
rcll
or
sbb
nop
mov
shlb
xor
rolb
and
xor
xor
sbb
mov
xor
int3
mov
daa
and
add
mov
test
xor
cmp
dec
cwtl
ss
adc
mov
mov
mov
jo
push
and
xchg
fwait
icebp
push
or
test
xchg
or
push
imul
add
cmp
out
sbb
and
jo
arpl
push
andl
dec
sbb
mov
cltd
dec
insl
cmpsl
jae
neg
loop
bound
push
jnp
dec
jb
jg
sub
in
ja
daa
loope
scas
push
mov
outsb
adc
mov
and
add
jmp
pop
lods
jns
push
aad
fcmovb
idiv
inc
adc
inc
jno
xchg
lahf
sub
cmp
out
pop
lret
movsb
xchg
cli
insl
cmc
outsb
xchg
aad
daa
cmp
and
add
cmp
xor
mov
mov
pop
jmp
leave
test
mov
inc
mov
adc
xchg
xor
push
lahf
repz
mov
into
pop
adc
inc
adc
int3
sub
or
roll
loope
xor
xor
clc
lret
jns
push
leave
jb
mov
test
pushw
add
mov
xlat
xchg
sbbb
ret
cmpsl
pop
in
mov
cld
loopne
js
in
mov
dec
or
pusha
mov
pop
sub
push
das
dec
and
sub
jb
cmc
add
imul
sti
jg
ret
mov
push
fistps
jnp
call
push
sbb
aaa
push
es
pop
mov
jl
add
push
jno
mov
xchg
jl
sar
bt
dec
lret
imul
test
mov
jmp
stos
mov
lea
add
cs
aam
jbe
out
lods
lahf
and
and
add
xchg
mov
or
pop
jbe
cs
push
nop/reserved
and
pushf
lahf
lds
and
aam
fiaddl
and
mov
fisubrl
sub
mov
adc
mov
xlat
call
dec
mov
roll
jbe
mov
aam
pop
push
ret
ds
xchg
jno
cltd
push
rcr
test
jbe
das
int
jo
sub
insb
inc
scas
fsts
out
sub
scas
nop
mov
xchg
mov
cmp
pushf
mov
popa
mov
out
in
pop
sarb
outsb
and
testb
movsb
jbe
int3
rorl
nop
inc
aaa
fisubrl
inc
into
mov
fstp
adc
sbb
cli
clc
fs
or
lret
mov
sarb
pushf
jae
sub
sbb
scas
sub
inc
jecxz
cmp
insl
lds
fcomps
xchg
lea
jmp
sbb
pop
dec
adc
pusha
cmp
and
jmp
lret
ja
repnz
fwait
pop
mov
sti
xchg
mov
inc
loopne
push
add
rorb
outsb
sbb
cmp
sbb
jne
xchg
aam
inc
inc
pop
stos
lods
iret
fidivl
clc
hlt
pop
adc
js
fbld
mov
and
dec
dec
mov
fistps
sar
jmp
cs
jb
jp
ficomps
fwait
adc
js
daa
lea
dec
out
push
lea
clc
out
mov
add
pop
mov
dec
pushw
cmp
fistpll
loopne
daa
sbb
sub
dec
mov
add
popl
imul
popa
inc
hlt
jno
pop
ficoms
sub
test
es
in
mov
inc
mov
mov
loopne
mov
lock
inc
aas
and
es
mov
xchg
nop
and
mov
adc
mov
fistpl
push
and
enter
pop
sbb
jb
outsl
stos
cmp
mov
mov
sahf
scas
and
outsb
xchg
lods
imul
ss
jmp
sbb
mov
xchg
mov
inc
mulb
mov
cmpsl
lcall
jns
aas
in
jge
mov
push
cmp
cmc
gs
push
flds
pop
inc
jne
cltd
pop
movsl
inc
jmp
jmp
push
mov
cmp
jns
or
pop
jnp
movsl
insb
lock
mov
jl
popf
push
movsb
push
sub
imul
jmp
cmp
pop
adc
lret
inc
cli
pop
add
int
je
cmp
push
aad
cld
cmp
iret
ficomps
lds
mov
push
loopne
outsl
cwtl
and
lcall
push
add
aas
adc
pop
adcl
inc
test
cli
and
dec
lret
xor
pushf
cwtl
call
dec
push
inc
lahf
ds
adc
adc
loope
push
adc
mov
aas
sti
mov
out
scas
add
inc
sbb
cmp
jp
push
pop
fidivrl
or
mov
sti
pop
aam
sbb
xlat
pop
jne
ja
adc
jg
cmp
pop
icebp
jae
jne
pusha
jmp
out
icebp
mov
mov
filds
icebp
ja
push
inc
pop
mov
add
push
inc
pop
scas
sub
dec
in
add
loopne
lcall
out
jb
iret
aad
dec
push
xchg
daa
ret
mov
and
out
fisttpll
cmc
inc
sub
fs
and
sub
loopne
mov
hlt
data16
inc
fdivr
int3
cmp
ljmp
mov
mov
pop
ss
shl
push
sar
add
sub
inc
push
adc
pushf
push
pop
test
movsl
dec
push
inc
popf
dec
rcrl
dec
std
lret
mov
jl
cmpsl
out
das
lea
mov
pop
cli
mov
jecxz
cmp
inc
pop
neg
lods
leave
test
mov
mov
mov
push
icebp
repz
outsb
cltd
hlt
cmp
adc
or
test
rcrb
xchg
xor
jmp
das
mov
pop
mov
pop
leave
inc
sub
fdivrl
dec
mov
into
or
fsubrl
adc
add
mov
dec
pop
cmp
movsb
xor
movsb
in
rolb
jae
xlat
cld
inc
jmp
xor
jb
xchg
lret
cmp
mov
adc
cmp
cmp
imul
xchg
pop
and
cmpsb
xchg
pop
outsb
pop
shrl
lock
pop
mov
jne
mov
jo
add
outsl
and
out
inc
stc
out
xor
mov
cmpsb
outsb
xchg
dec
fcomip
out
add
xor
fidivl
mov
lock
sub
mov
notb
negl
mov
mov
jb
or
outsb
cmpsb
push
xchg
xor
lcall
movsb
xor
sbb
mov
test
lea
imul
sbb
lock
mov
mov
pop
jg
int
and
ja
ss
int3
test
ss
and
cmpsl
mov
cmpsb
mov
xchg
leave
dec
jge
test
sub
in
jns
mov
inc
insb
sbb
mov
mov
push
imull
xchg
jmp
adc
add
xchg
push
pop
pop
cs
inc
pop
std
aam
inc
mov
test
popa
xor
and
leave
das
icebp
fisubrs
cmp
mov
aaa
jle
and
xchg
sub
dec
fdivrl
shlb
jge
cmp
mov
jmp
push
push
cmpsb
mov
cmp
dec
add
ja
bound
xchg
xor
inc
mov
inc
out
jne
push
inc
jno
push
and
cmpb
scas
mov
scas
in
mov
mov
inc
adc
jnp
lods
mov
sub
sbb
xchg
fcomip
xor
jg
mov
cmp
sbb
mov
in
adc
shrb
cli
rclb
jle
lock
clc
loop
int
add
mov
shr
jg
pop
leave
xchg
mov
push
outsb
push
ljmp
mov
add
lret
push
push
cmp
sbb
cmp
jmp
gs
xlat
inc
nop
mov
ficoms
sbb
or
pop
rcll
or
push
test
in
cmpsb
xlat
out
in
cmp
mov
sahf
add
cwtl
mov
fiaddl
es
rclb
adc
jno
inc
in
inc
jecxz
into
mov
lods
push
ret
mov
cmc
and
push
push
loop
pop
insl
divb
mulb
movsb
jp
sbb
and
lea
push
lcall
xchg
xchg
mov
fldenv
xchg
addr16
dec
inc
js
jns
cmpsl
dec
sbb
fildll
mov
scas
arpl
inc
and
mov
or
mov
jne
aad
fdivl
stos
xor
icebp
leave
jno
das
add
jns
add
sahf
flds
dec
cmp
lock
adc
shrb
push
sbb
xor
test
mov
test
and
adc
clc
loope
fiaddl
addr16
push
les
jae
ss
daa
cmp
aaa
adc
or
enter
pop
loope
jle
adc
mov
stos
clc
repz
or
mov
lret
lcall
imul
cld
scas
xor
addr16
mov
jmp
shr
loopne
cmp
lea
jge
insl
mov
mov
shll
leave
pop
std
inc
fsubrs
lret
imul
std
mov
push
jae
jmp
mov
enter
jno
mov
test
xchg
mov
sub
fidivl
in
inc
xor
xchg
repnz
adc
int
or
rolb
mov
xor
sub
mov
popf
cmp
leave
scas
xchg
inc
pop
pop
cld
cmp
cmp
andl
ljmp
dec
ljmp
les
sub
ss
or
ja
mov
pushf
arpl
scas
cwtl
or
and
in
push
push
cmp
mov
sub
xorb
pop
outsl
out
cmp
push
jge,pt
lcall
test
push
push
cmp
ret
je
mov
mov
jge
xor
or
lock
repz
int
adc
dec
out
mov
lods
lcall
xor
cmp
cmp
testb
jg
and
iret
push
std
mov
test
xor
sbb
in
mov
and
call
sub
or
adc
std
mov
dec
sub
ljmp
ds
dec
iret
mov
mov
and
xchg
je
mov
mov
mov
add
scas
mov
fldt
mov
pushf
lcall
les
pop
mov
movsb
mov
sub
inc
call
jnp
mov
repz
adc
adc
test
push
scas
mov
in
imull
int
sbb
push
pop
repnz
mov
mov
sti
fcoml
push
push
cmp
out
loope
adc
pop
cwtl
adc
pushf
xor
push
repnz
mov
jp
sbb
xor
inc
lea
mov
sbb
sahf
xchg
daa
movsb
sbb
loopne
inc
xchg
sub
push
call
repz
sbb
xchg
add
push
adc
gs
test
jbe
push
xor
aam
data16
into
movsb
iret
xor
test
mov
adc
stos
add
xor
aad
mov
add
adc
ljmp
mov
mov
stc
sub
arpl
sbb
inc
push
enter
adc
mov
aaa
sti
pusha
xor
test
adc
rcl
imul
pop
movsb
rcr
clc
mov
lea
push
jecxz
sahf
mov
lret
xor
xchg
iret
js
push
push
xchg
in
fwait
mov
ret
mov
sub
shl
sbb
inc
insl
cmp
je
popf
push
movsb
inc
lret
mov
ror
mov
push
jp
repz
jge
jns
lcall
xchg
adc
daa
mov
dec
lock
fnstenv
xor
popf
mov
loop
push
jl
sbb
loop
fcompl
mov
stc
popf
fldcw
in
lret
sbb
fwait
cmpsl
std
shrl
std
mov
inc
jl
push
inc
in
add
sbb
lock
out
sub
sarl
cmc
mov
mov
es
xor
outsl
outsb
fwait
lock
xchg
cmpsb
mov
mov
sti
jmp
lods
mov
enter
fwait
stc
pusha
mov
mov
cli
adcb
test
cld
xchg
cmp
fistpl
mov
inc
inc
xor
negb
xchg
sub
pop
mov
xchg
adc
ss
xor
adc
ret
hlt
sbb
mov
jle
mov
movsl
xchg
pop
jb
test
fstl
js
sbb
and
frstor
xchg
stc
xchg
cmp
inc
or
loope
out
push
lret
adc
gs
mov
fnsetpm(287
test
push
stc
dec
pop
cmp
fbstp
mov
cmp
cltd
data16
enter
sub
pop
mov
sub
jg
out
adc
bound
rorl
dec
lret
xchg
sarl
inc
jnp
outsl
dec
leave
push
sahf
and
pusha
xor
loop
test
loope
inc
mov
pop
jle
addb
loopne
xchg
push
fstpl
xor
sub
aas
and
rorb
adc
daa
xor
cmc
adc
pop
addb
pop
rcrl
or
pop
cmp
push
aad
mov
cli
fs
mov
ljmp
data16
jb
xchg
not
shll
xchg
jmp
out
cmpsl
into
insb
and
xlat
mov
inc
frstor
jg
mov
int3
or
sbb
inc
lea
test
addr16
cmp
dec
lret
aas
xchg
sbb
cmp
sub
pop
mov
cmpb
xchg
jp
lock
and
in
and
mov
shl
fadds
push
test
ja
inc
adc
fnstsw
cmp
jae
fstps
adc
pop
andb
sbb
ret
adc
push
mov
inc
orl
and
add
xor
pop
fistpl
ss
bound
loope
fadd
nop
cld
mov
das
insb
sbb
mov
ret
push
xchg
adc
mov
shrb
shrb
jns
jl
mov
enter
sbb
xor
dec
push
sahf
sbb
pusha
std
dec
outsb
popf
sbb
pop
add
in
xor
stc
aaa
jmp
xchg
mov
mov
push
daa
jo
add
repnz
outsb
push
int
sub
mov
or
jnp
sbb
clc
pusha
jecxz
fistps
lods
add
pusha
mov
or
adc
mov
mov
push
dec
loopne
iret
das
fimull
dec
fs
sbb
scas
pop
das
iret
bound
scas
into
notb
mov
lcall
imul
orb
aaa
sbb
jmp
push
pop
mov
mov
inc
out
fadds
adc
xlat
cld
sub
inc
mov
out
mov
loop
mov
mov
jb
pop
cmc
cld
jnp
cli
mov
aaa
out
dec
fldt
xor
mov
lods
adc
push
inc
pop
cs
sub
fwait
push
sub
mov
loopne
cmp
pop
stos
in
in
jnp
pop
push
fwait
inc
and
lret
outsb
arpl
in
mov
cmp
push
or
pop
sbb
jae
mov
gs
mov
in
icebp
push
push
negb
insb
enter
xor
or
stos
daa
scas
inc
ret
mov
fs
and
sbb
faddp
rolb
jbe
xchg
data16
clc
ds
adc
lcall
dec
mov
xchg
dec
push
sub
add
and
xor
pop
sub
mov
push
jnp
sub
iret
cltd
inc
setns
bound
int
into
inc
pop
and
push
jne
jecxz
fwait
xchg
mov
in
test
jo
cwtl
out
inc
and
jo
mov
cwtl
push
mov
push
mov
add
and
out
popf
sahf
adc
imul
fdiv
and
sub
mov
and
jno
stos
fimull
test
fsubs
cmp
imul
addb
dec
int
inc
clc
rcr
dec
loopne
pop
mov
movsl
pop
mov
mov
adc
pop
add
jp
xchg
loopne
lods
jbe
xchg
or
daa
mov
in
sbb
nop
cli
inc
in
xrelease
mov
sub
data16
push
jecxz
imul
addr16
or
orb
pop
xorb
mov
cmp
sarl
lcall
sub
aam
insl
dec
pop
bound
inc
mov
pushf
xlat
shlb
push
push
pop
enter
cmpsb
push
cmp
jno
or
cmp
xchg
shlb
dec
xchg
loope
in
insl
adc
scas
sbb
mov
adcl
jbe
push
andb
cmp
xlat
mov
push
jge
mov
andb
pop
imul
fildl
lods
dec
loope
test
arpl
shll
mov
inc
daa
sahf
shlb
js
xchg
mov
sub
in
ret
xchg
cld
imul
push
je
mov
sarl
mov
add
pop
decb
and
int3
insl
sar
xchg
int
add
outsb
lret
enter
rcrb
xor
cmp
sub
cmovs
dec
jb
jb
repz
std
sbb
push
push
inc
adc
sub
pusha
imul
xor
popa
mov
fldcw
insb
fwait
xor
js
push
int
or
push
sub
mov
sarb
mov
mov
pop
cmpl
fnstsw
push
mov
repz
bound
sub
ljmp
and
adc
cmp
lcall
int
testb
in
or
jmp
add
cltd
jne
or
addb
out
fcomps
out
jnp
pop
arpl
popw
cltd
mov
mov
cmp
or
cltd
sub
enter
nop
add
test
jnp
enter
shrb
adc
sub
mov
cmp
or
mov
mov
sbb
fistps
lods
dec
movl
add
xor
outsb
push
pop
daa
cmp
test
cmc
enter
aaa
ljmp
inc
jbe
or
add
mov
and
fnstenv
sub
mov
and
sub
leave
repnz
mov
cmc
out
lods
fstps
aas
xor
sbb
or
shll
xchg
inc
mov
add
fcompp
test
pop
clc
lds
movsl
mov
pop
cmp
insl
inc
mov
jecxz
sub
pushf
inc
inc
in
mov
fmuls
loope
sarb
inc
xor
jg
loop
enter
mov
lcall
movsl
jno
pusha
out
sbb
fcompl
arpl
adc
jns
scas
jo
xchg
jo
xchg
fwait
pop
and
je
and
xchg
pop
mov
push
jae
out
mov
xor
dec
int3
leave
mov
fstps
std
xor
fwait
test
das
pop
sbb
mov
outsl
faddl
xchg
outsl
sbb
jge
cmpsb
ljmp
dec
push
jmp
cld
cmp
out
add
add
shll
fistpl
mov
popf
bound
mov
in
mov
out
fwait
int
push
xchg
hlt
xchg
sub
mov
pop
fcoml
mov
sub
adc
push
inc
cmp
push
add
add
es
testl
scas
xor
pusha
mov
fwait
shr
xchg
push
cmp
mov
jbe
sub
sbb
shl
clc
or
sbb
jp
fidivs
push
xchg
popa
dec
mov
fmuls
adc
sub
sbb
ljmp
or
lret
cli
mov
xchg
push
in
inc
fwait
in
fcmovnb
xchg
mov
mov
imul
push
adc
fimull
cmpsb
insl
into
subb
ss
mov
in
pop
loope
jbe
jo
push
pop
cmp
or
push
push
pop
sbbb
push
jno
sti
jge
imul
rcrb
pop
sub
push
cmp
dec
or
mov
pop
popa
aas
cmp
fs
lcall
push
push
cmpsl
cmpsl
rol
sar
repnz
fstpl
or
repnz
das
dec
xchg
shl
sbbb
ds
pop
data16
movsl
data16
call
in
mov
mov
push
jl
sbb
cwtl
icebp
lea
hlt
insl
adc
je
xor
and
scas
jmp
scas
xor
lock
xchg
arpl
xor
lods
push
mov
push
inc
xor
stos
ljmp
mov
xorl
mov
fisubrs
data16
int
push
mov
jmp
pop
pushf
lds
lcall
xchg
xlat
jp
pop
scas
test
rcr
xchg
push
outsb
fildl
push
push
call
adc
mov
fisubs
shlb
lods
pop
or
add
mov
cmc
xchg
lds
or
iret
jl
push
std
test
mov
push
xchg
imul
jbe
push
sbb
add
fs
sub
xchg
out
sub
push
inc
pop
jecxz
mov
cltd
out
mov
jge
push
dec
inc
jg
xchg
nop
sbb
sub
mov
loop
add
movsb
pcmpeqw
fcmove
aaa
xor
leave
andb
stos
and
fcoml
push
in
cmc
xor
enter
cmp
inc
jp
fcomps
enter
cwtl
and
stos
out
icebp
mov
fstpl
mov
xor
mov
stos
push
arpl
sub
jmp
cli
mov
into
push
jmp
fs
roll
mov
enter
mov
push
mov
mov
jmp
xor
out
or
jl
jne
xchg
pop
jb
aas
xorb
pop
jbe
sub
int
or
xor
mov
dec
push
popf
xor
jge
mov
scas
ja
jo
rclb
and
xchg
cld
mov
pop
addb
mov
mov
into
arpl
mov
lret
fsubrl
xchg
and
mov
xlat
mov
xchg
ret
and
in
shll
cmpsl
ljmp
lea
leave
push
mov
cld
xchg
sti
ss
sbb
xchg
inc
fcmovb
cmp
push
pop
or
adc
mov
add
or
push
mov
and
xchg
jg
adc
jnp
scas
nop
mov
outsb
sarl
cli
insb
sub
scas
outsl
jl
xchg
pusha
outsl
loope
sub
fldcw
dec
stos
mov
xor
ja
jno
sub
inc
fimull
aas
mov
mov
and
dec
bound
mov
mov
push
loopne
sbb
arpl
xor
jg
xchg
sub
inc
sar
aam
lcall
add
cwtl
dec
lahf
pop
sub
mov
dec
shlb
xor
fidivrl
cmp
lods
xlat
add
cld
mov
sbb
bound
test
outsl
cmp
outsl
pop
xor
adc
inc
mov
jnp
mov
push
in
cld
mov
mov
int
sbb
jb
sbb
mov
adc
gs
and
stos
and
mov
pop
jo
pushf
inc
xchg
loope
sub
pop
les
sbb
adc
cld
xchg
fcmovne
jge
nop
add
jg
add
outsb
scas
iret
mov
mull
sbb
xchg
pop
paddusw
cmp
adc
imul
sarl
xchg
mov
ret
sbb
idiv
loop
jnp
popa
scas
mov
mov
mov
add
cmc
adc
jno
add
mov
nop
mov
pop
xor
scas
pop
das
jnp
inc
sub
dec
sarb
insl
loope
fwait
sbb
aad
inc
mov
jl
push
imul
mov
out
xor
scas
xchg
out
es
mov
add
and
adc
pop
mov
cmp
sbb
imul
or
lock
sbb
sbb
scas
hlt
ss
in
or
sub
sub
outsb
call
int3
ret
stos
and
xor
ja
fstpt
jg
lret
sbb
and
add
and
enter
sbb
mov
test
fsts
xor
insb
sub
jnp
add
jb
add
loop
fdivp
push
ret
jnp
jb
mov
leave
pusha
mov
lods
mov
push
fstpl
movsb
mov
jecxz
addr16
push
inc
pop
jae
bound
inc
les
inc
dec
rclb
in
out
jnp
xchg
sti
sahf
pop
data16
hlt
mov
lods
das
aad
dec
add
pop
pop
mov
mov
es
movsl
test
popf
nop
rcll
mov
jnp
push
ret
mov
fwait
cltd
lret
adc
lods
pusha
mov
popf
cmp
cltd
fcoml
lret
mov
mov
cs
gs
sub
jae
sub
clc
mov
arpl
jge
add
dec
lahf
inc
gs
inc
ja
pop
outsl
or
inc
sub
push
imul
mov
ret
das
idiv
shll
jbe
in
jo
and
les
inc
data16
aas
jmp
add
imul
add
jb
pop
cmpsl
aaa
xchg
jg
xor
xchg
ja
and
or
mov
cli
stos
nop
or
pop
adc
xor
js
imul
mov
jb
stos
sbb
pop
pop
into
pushf
and
ret
push
test
inc
jmp
push
imul
jp
add
push
inc
sbb
daa
loopne
mov
in
xor
mov
cmp
push
addr16
xchg
push
scas
ret
sub
sub
psrlq
mov
xchg
adc
aaa
fnstenv
sarb
and
xchg
sbb
sbb
cmp
sub
sbb
push
mov
jmp
scas
mov
push
jb
sub
hlt
mov
stos
pushf
mov
rcrl
pop
imulb
movsl
jo
jns
mov
stos
adc
cltd
cmpsb
pop
lret
outsb
repz
and
xor
imul
mov
add
jl
push
loop
mov
add
imul
push
out
adc
pop
xchg
mov
shl
lds
std
out
jl
adc
sub
fwait
dec
push
jmp
inc
inc
stos
mov
add
call
test
mov
xchg
mov
test
fsubs
adc
xchg
lock
daa
adc
sbb
je
test
dec
pop
test
hlt
jno
test
sub
fildll
pop
mov
aam
and
sub
jno
rolb
inc
insl
ret
add
add
jge
lea
imul
jmp
sbb
out
or
loopne
xor
or
lret
xor
or
test
sbb
and
sbb
xchg
lea
addr16
iret
mov
cld
sbb
or
jge
or
testl
push
movsl
ret
add
insb
repz
push
adc
dec
jnp
data16
popa
add
js
xchg
mov
pushf
and
int
mov
fsub
out
dec
lahf
nop
inc
mov
gs
and
cmp
xorl
sti
or
and
pop
enter
cmp
nop
mov
xor
mov
clc
sub
ror
pop
inc
leave
repz
push
sarl
scas
sbb
jno
shrl
add
ret
fwait
push
fcomi
dec
or
decb
add
jbe
sbb
jbe
inc
xor
mov
push
sbb
es
in
add
in
and
jb
hlt
pop
divb
outsb
fmuls
insb
mov
bound
xlat
imul
cli
jns
xor
mov
outsl
cmp
cmp
inc
gs
push
jmp
ror
inc
push
ss
mov
sbbb
aam
and
call
sahf
ja
in
adc
cwtl
test
jmp
cwtl
leave
aad
push
mov
cmc
addl
fcmovne
and
mov
insb
sub
dec
mov
add
out
add
addr16
inc
add
stos
cs
ret
sub
mov
jne
mov
adc
push
imul
and
rolb
and
pop
clc
fs
xor
jae
orb
mov
shll
jnp
adc
aas
out
enter
jl
int3
sbb
or
cmp
dec
js
fildll
mov
shlb
fs
xor
pop
cli
or
mov
lods
pop
cld
out
out
ret
int3
popl
lcall
mov
pusha
xchg
sbb
push
dec
dec
pop
xor
mov
sti
loope
sub
xlat
pop
loopne
ljmp
mov
ljmp
popa
test
lods
cs
dec
fldl
or
mov
repnz
shl
inc
dec
xchg
je
jecxz
std
or
pop
xchg
out
aad
cmpsb
imul
adc
jb
aad
scas
lret
stos
test
repnz
push
mov
dec
cmpsl
cmpsb
jb
xchg
jb
push
cwtl
jmp
movsl
cmp
jne
data16
dec
cmp
mov
cmpsl
in
xchg
mov
jno
pop
mov
cmpsb
insl
inc
and
and
dec
xchg
aas
data16
cltd
pop
stos
pop
jl
sbb
sbb
xlat
pop
and
xor
dec
in
xor
push
fiadds
xorl
cltd
jmp
lcall
rorb
out
ljmp
icebp
incl
jmp
or
mov
xor
and
pop
jne,pn
loope
or
mov
lea
out
xchg
lcall
push
mov
inc
mov
add
stos
leave
les
rcrl
mov
push
xor
add
cwtl
jmp
cmc
movsbl
addr16
push
sbb
arpl
jge
pusha
push
je
cs
sbb
mov
cmp
ret
pop
ret
xchg
push
inc
add
jne
mov
or
jmp
pop
cltd
adc
aam
ljmp
or
lods
cmp
arpl
lcall
mov
in
loope
mov
push
sbb
jnp
es
fs
adc
js
cmp
repnz
ret
inc
push
scas
stos
je
or
pop
dec
adc
dec
faddl
xchg
mov
mov
sub
jno
dec
add
push
mov
jb
xchg
loopne
and
lret
stos
or
test
popa
call
rcrb
divl
cli
les
cmp
sbb
dec
dec
fsubl
pusha
mov
loopne
rcrl
lods
mov
xor
cmp
xor
clc
outsb
repz
sbb
inc
xor
fs
mov
scas
push
dec
mov
iret
stc
cmpb
mov
aaa
imul
push
out
cmp
ror
xchg
push
mov
cmp
or
daa
push
sub
repnz
insl
dec
incl
stos
and
mov
mov
repnz
add
push
mov
xor
sub
ret
sbb
shrb
repz
out
lods
aam
fiaddl
sub
jne
xchg
sbb
out
mov
bound
jns
inc
mov
jae
sub
mov
addr16
jns
nop
data16
pop
mov
sub
push
or
sarb
lret
jmp
jae
xor
imul
int3
and
mov
sbb
pop
daa
add
mov
fildl
xchg
jno
push
pop
dec
int
cmc
xor
pop
dec
cltd
ss
jbe
push
or
cmc
cmp
nop
mov
int
cmc
pushf
ss
fistps
dec
mov
mov
fiaddl
jecxz
push
loop
add
sub
stos
push
push
cmp
pop
push
pop
mov
sub
pop
ja
adc
push
add
jae
and
movsl
pushf
mov
ja
fadd
loopne
jb
cmp
js
cltd
cld
sbb
mov
mov
jbe
fwait
js
cmp
fiaddl
dec
mov
sub
outsb
and
shlb
sub
adc
mov
jo
dec
xor
cltd
aam
ror
pop
pop
pop
inc
clc
shlb
ljmp
sbb
lret
pop
pop
xchg
stc
fdivp
mov
fldln2
cmp
jne
dec
mov
xor
pop
xor
xor
adc
xchg
fcomps
sbb
aas
jge
xchg
in
popf
stc
xchg
push
decl
es
inc
stos
push
push
mov
or
ja
leave
or
out
mov
pop
mov
push
push
dec
mov
mov
mov
push
insl
loopne
mov
dec
adc
testl
out
int3
mov
rorl
outsb
mov
xchg
push
mov
mov
push
cld
push
jne
sti
adc
rcll
dec
fdivs
mov
fcomps
fstps
out
xchg
in
jo
addr16
or
repz
xchg
pop
stos
push
mov
sarb
insl
ljmp
fs
mov
push
jae
mov
adc
mov
sbb
shrb
in
imul
and
mov
int3
loop
testl
push
mov
sti
sub
int
dec
mov
or
xor
rolb
test
ret
mov
xchg
push
add
add
inc
lahf
mov
scas
mov
pop
repnz
inc
ret
aam
mov
add
add
ja
sbb
loope
mov
leave
stc
insl
mov
jae
xlat
and
mov
add
xor
cmpsl
and
ret
pop
pop
xor
jnp
aad
pop
dec
shl
mov
xchg
rcl
sbb
and
es
repz
scas
sti
xlat
cld
lcall
push
cmp
ds
adc
push
pop
adcb
push
inc
shrl
inc
pushf
push
adc
xchg
lret
push
add
cmp
enter
inc
loopne
orl
insl
push
and
push
sub
xchg
insl
shll
inc
or
jbe
loop
ret
into
test
fdiv
adcb
mov
dec
xchg
bound
loop
xchg
pop
aas
fistpll
das
inc
lods
pop
jp
js
xor
pop
sub
cmp
cmpsb
sbb
out
rolb
mov
inc
sbb
jbe
jmp
sbb
lahf
lahf
fwait
out
cmp
in
int3
inc
mov
dec
aas
incb
push
adc
cmp
int3
fs
mov
shl
push
jbe
jnp
push
push
int3
lods
mov
lret
flds
mov
lret
repnz
mov
lcall
movsl
mov
pushf
clc
sbb
ljmp
jbe
inc
clc
adc
xchg
in
dec
in
pop
dec
stos
mov
cwtl
pop
cmp
inc
pop
leave
les
add
loop
jbe
imul
loopne
sbb
and
ret
out
pop
nop
cmp
mov
mov
sti
push
push
fcoml
int
add
fadd
aaa
add
addr16
xor
sub
in
fsubrs
jle
xchg
mov
push
mov
nop
push
fldcw
dec
jmp
shlb
jbe
ffreep
pusha
push
dec
fsubrs
jle
dec
cmp
mov
shll
pusha
mov
lea
adc
mov
testb
adc
xor
jp
adc
sbb
mov
jecxz
popa
out
lahf
and
push
cmp
xchg
cld
lret
dec
les
int
aad
pop
push
insl
jl
xor
mov
cmp
xchg
flds
mov
push
or
and
fisttps
xor
repz
ficomps
and
dec
sbb
jecxz
push
jmp
mov
shlb
add
pop
fsubs
lods
rol
mov
inc
dec
aam
mov
aam
test
mov
outsl
cmc
std
jns
and
aam
jns
pop
nop
mov
xchg
arpl
cs
lock
sarl
mov
stos
aad
jmp
cmp
sub
out
loop
cmp
xor
popa
push
shl
pop
pop
cltd
fbld
and
andb
jnp
xchg
push
lds
js
dec
push
cltd
cmp
popf
jp
out
and
mov
ja
inc
pop
icebp
ja
or
mov
insb
add
push
enter
push
mov
decl
sub
sub
push
mov
imul
pop
mov
fnsave
mov
stos
std
push
xchg
cmp
adc
adc
or
ljmp
push
mov
stc
loop
cld
push
push
fs
push
inc
divb
test
dec
xlat
add
jp
out
stos
push
mov
test
jecxz
shr
fiaddl
iret
call
jbe
cmp
adc
ficoms
add
jmp
push
shlb
outsl
fwait
or
xchg
cs
push
pop
icebp
dec
vpcomuw
pop
pop
mov
and
sahf
jp
into
fstl
rol
sbb
fildll
and
cs
jno
fstps
popl
pop
sbb
dec
pusha
inc
pop
pop
hlt
cltd
hlt
std
ds
and
push
add
xchg
inc
xor
xorb
lahf
cli
pusha
push
cmp
push
and
sbb
cmp
loope
mov
outsl
gs
test
push
fistps
hlt
mov
dec
push
movsl
inc
repz
add
xor
aas
push
mov
scas
xchg
sub
adc
xchg
push
gs
lcall
inc
fstl
push
cmc
and
sbb
lods
mov
enter
and
pop
jno
pop
adc
sahf
dec
mov
xor
js
lock
xchg
mov
adc
test
sbb
xor
lret
out
das
and
inc
pop
inc
stos
fdivs
scas
lods
add
movsb
sub
insl
jmp
inc
xlat
enter
sbb
mov
or
and
inc
dec
mov
rolb
push
sub
repz
outsl
inc
push
mov
xchg
test
cmp
inc
out
lods
pop
push
jmp
fs
lret
inc
jle
xor
push
lds
in
mov
push
divl
add
stc
push
in
and
mov
push
cmp
push
jmp
jp
ja
xor
xor
arpl
subb
adc
sbb
add
stos
mov
fdivrl
stos
add
push
test
mov
test
test
xchg
cmp
sub
shr
sbb
sbb
rorl
ljmp
sbb
aas
daa
sbb
jle
cli
xor
pop
ja
in
mov
mov
lds
push
xchg
stc
pop
jae
xchg
mov
dec
pop
insb
pop
lods
jne
sarl
pop
movsb
test
cmp
jns
dec
cmpsb
cmp
fwait
cmp
push
and
mov
jg
popl
scas
xchg
jb
inc
xchg
outsl
push
jp
jno
inc
add
arpl
fistl
cmpsb
in
mov
ss
addr16
test
insb
pop
jle
xchg
scas
cli
pop
aas
lock
inc
and
pop
cmp
mov
ds
rorl
movl
out
sub
pop
imull
or
scas
dec
mov
pop
push
add
jo
psadbw
dec
ret
int
xor
js
inc
ds
sub
pushf
xchg
nop
mov
mov
dec
or
ljmp
mov
shlb
mov
sbb
cmpsb
fcom
sbb
cmpsl
enter
cmp
inc
xor
int3
flds
fwait
rcrl
adc
pop
mov
test
jl
ja
push
and
repz
push
imul
das
mov
xchg
test
imul
rorl
xchg
jp
jnp
ret
and
push
cmpsl
xor
and
xor
cmp
imulb
sub
out
xor
fnsave
ljmp
dec
int3
scas
pop
xchg
jbe
fldl
lds
mov
data16
hlt
mov
das
sarl
or
xchg
aas
insb
ljmp
dec
push
and
int3
es
fwait
jle
inc
sub
out
lods
pop
cltd
andl
insl
dec
push
inc
arpl
out
fdivs
rorl
rcll
mov
push
inc
shrb
xor
pop
popa
cmpsl
push
sub
pushf
ljmp
jle
inc
fwait
push
notl
jbe
add
xor
pop
leave
or
fiaddl
mov
icebp
loop
mov
fs
movsb
js
jnp
add
jl
xor
lods
cs
or
inc
in
imul
insl
das
andl
jg,pt
adc
in
dec
lds
cld
xlat
push
xor
push
push
jmp
jae
mov
jbe
xlat
iret
xchg
out
clc
push
mov
and
sub
mov
dec
jae
ret
addb
xlat
pop
mov
mov
mov
push
call
frstor
cmp
add
lret
jle
sub
insl
lret
push
adc
jno
dec
cmpsl
jnp
stos
int
in
and
mov
dec
mov
push
or
ret
shll
cmpsb
rcl
pop
jg
mov
xor
test
cmp
xchg
sbb
push
mov
pop
pop
outsb
fstl
lret
mov
inc
mov
push
sbb
pop
mov
mov
imull
mov
pop
icebp
out
test
sahf
shrl
scas
scas
imul
jl
inc
bound
mov
mov
pop
push
mov
push
lcall
cmp
stc
sbb
rclb
inc
fsubl
xchg
xchg
pop
xchg
unpckhps
dec
or
cwtl
cmp
stos
cmp
int3
jecxz
ret
add
lds
jge
dec
in
loopne
add
pop
mov
mov
imul
and
call
adc
dec
cmp
cld
cs
or
jmp
int
leave
add
ret
inc
repnz
jae
lods
mov
notl
aaa
sbb
dec
sbb
imul
jne
dec
push
stos
adc
mov
push
call
or
cwtl
loopne
sub
cmp
stos
inc
ret
in
test
cmp
fnstcw
lods
test
cwtl
fwait
push
shlb
cmc
rcrb
clc
mov
repz
jecxz
sub
aaa
cmp
enter
sbb
gs
fs
shlb
sub
adc
sub
into
adc
xchg
subb
and
xor
shrl
xchg
fidivrs
adc
sub
sbb
cmpsl
mov
testl
inc
andl
push
xor
adc
push
jmp
pop
push
inc
or
aaa
jne
lds
sahf
shll
dec
mov
mov
fnstcw
push
inc
xchg
mov
and
mov
xchg
inc
ds
rolb
jle
pop
add
sti
dec
and
jp
inc
loop
dec
sbb
push
xorl
enter
push
sti
test
cmpsb
or
mov
cmp
jl
outsb
mov
jns
lahf
lods
lods
jo
fisubrs
movsl
mov
movb
lea
jl
sahf
push
flds
stc
mov
sub
dec
movsl
je
add
out
sub
push
out
jno
outsb
clc
inc
pop
sub
dec
stos
sahf
xor
mov
std
js
mov
or
bound
sbb
jge
lret
jl
inc
arpl
scas
push
scas
cmpsl
popa
jmp
cwtl
xchg
orb
scas
sub
adcl
rol
push
dec
imul
jmp
jno
lcall
cld
and
fwait
imul
repz
or
sahf
dec
into
stc
data16
in
into
out
adc
imul
das
jp
jnp
leave
pop
cmp
dec
adc
pop
ds
bound
insb
lret
fnstenv
pop
dec
test
or
inc
imul
fldl
jo
repz
shlb
xchg
sbb
sub
mov
jne
and
sarb
and
or
insl
lcall
mov
in
fildl
xchg
lods
xor
outsl
push
or
mov
adc
pop
lds
in
in
mov
lahf
int
mov
and
push
bnd
aaa
push
xor
pop
in
das
push
jbe
jge
pop
xchg
movsb
push
xchg
mov
inc
jecxz
lock
mov
cmc
fistl
fnstcw
orb
push
mov
movsl
pop
movsb
xchg
sbb
pop
rcl
sbb
xor
movsb
add
xchg
dec
pop
jecxz
lods
cli
mov
inc
outsb
movsb
push
ffreep
cmpsl
daa
out
adc
xor
push
push
mov
cli
xlat
dec
sbb
dec
sub
or
mov
lret
dec
shl
sub
gs
xor
test
vmovmskps
cmp
push
pop
sbb
ja
cmpsl
rolb
repnz
cli
or
or
lods
pusha
cmp
push
jo
fidivl
inc
mov
andb
test
mov
lods
pop
out
sbbb
mov
adc
andl
and
enter
ficompl
mov
fldl
cmpsb
rol
mov
lcall
nop
add
jge
js
pop
sbb
popf
cmpsl
fbld
icebp
push
dec
call
push
push
hlt
test
mov
arpl
ret
sub
jg
mov
xchg
ja
cmpsl
je
icebp
jmp
daa
pop
adc
fldt
out
lcall
repnz
jecxz
xchg
xchg
cmpsb
mov
and
enter
sbb
push
fisttpl
pop
leave
leave
pop
outsl
roll
push
ror
je
add
pop
ds
xlat
pushf
dec
xchg
out
sbb
inc
rcll
aam
jb
test
jecxz
insb
xor
jae
push
lds
out
cmp
jo
add
decb
mov
stos
ss
fs
lock
jae
mov
lret
mov
mov
fwait
ds
hlt
pop
dec
or
mov
shll
add
popa
xor
lods
xlat
adc
jl
jbe
pop
adcb
add
in
mov
mov
adc
in
sub
sbb
hlt
adc
sti
push
pusha
add
cld
shr
sub
test
jno
or
push
xchg
loopne
int3
push
and
mov
cmp
inc
jno
outsl
cmp
inc
and
rolb
push
sbb
push
add
adc
pop
aas
jbe
adc
divb
shll
test
pop
lods
mov
popa
push
in
test
mov
rcrb
decl
cmp
lock
mov
imul
mov
out
pushf
fdivrp
test
or
push
and
rcl
loope
and
loop
subb
notb
cwtl
fnstenv
xchg
add
insb
pop
out
test
adc
lods
sub
hlt
push
jmp
loop
int3
jbe
mov
and
cmc
rclb
es
hlt
loopne
test
out
or
dec
xor
jbe
es
pop
mov
bound
lea
xor
fmulp
out
call
fcomps
and
jmp
push
std
pushf
testl
adc
arpl
jge
lcall
pusha
aad
mov
jae
test
cwtl
ret
xor
mov
sub
cli
pop
out
adc
cmp
mov
add
cmp
sbb
scas
mov
movsb
pop
cmp
jge
cld
adc
fisubs
sbb
ficoml
sahf
dec
cld
mov
lret
mov
sub
and
cld
jl
jno
adc
rcrl
fisubrs
push
pop
imul
loope
stos
mov
mov
pop
mov
cmp
in
mov
dec
jp
ds
iret
dec
mov
push
sbb
js
sbb
sub
push
mov
cmp
and
adc
scas
outsl
leave
mov
cmpsb
jmp
movsb
dec
pop
add
data16
sti
jns
popa
jmp
sub
daa
hlt
gs
mov
cmp
mov
and
push
add
or
testl
out
test
lcall
fsts
jb
and
jno
push
stc
ret
icebp
dec
sub
add
leave
int
or
adc
fisubrl
out
adcl
mov
mull
push
mov
push
add
arpl
pop
adc
pop
cmp
dec
xor
fucomip
sti
in
and
gs
pop
add
and
es
cmp
les
pop
pop
sub
push
sbb
outsl
dec
cs
cs
movsb
sub
jne
aas
sbbl
jg
fimuls
xor
cmp
shr
pop
cmp
fdivrs
pop
pop
push
cmp
dec
jl
in
push
mov
lods
fcmovnu
fsubrs
and
les
ficompl
mov
mov
popf
jge
mov
mov
mov
aaa
nop
ss
fisttps
imul
stc
scas
push
push
int3
lret
aad
xacquire
push
cmpsb
push
test
cmpsl
loope
mov
and
mov
cmp
insl
out
lea
das
cmp
or
mov
inc
cmc
enter
jl
fs
mov
jp
push
jae
adc
sahf
mov
pop
shll
mov
in
or
adc
sub
and
pop
ss
imul
outsb
inc
lret
mov
sti
ds
sahf
sbb
mov
mov
adc
cmc
mov
pop
test
xchg
cmpsl
push
repnz
inc
pusha
psllq
sarb
lock
test
xor
shl
push
sbb
pop
or
imul
sahf
cmp
inc
pop
push
sbb
in
cmp
nop
mov
cltd
aas
or
mov
inc
pop
adcl
idivb
loope
add
sahf
xor
adc
lea
test
mov
pop
lods
inc
xchg
pop
cmpb
ja
in
les
mov
sti
cmp
dec
out
mov
fmuls
lea
xchg
add
inc
xchg
mov
repz
pop
inc
sbb
sub
mov
mov
sbb
lds
cmp
pop
push
ret
aas
and
cltd
xor
test
fbld
jo
out
push
test
and
mov
push
sub
pop
jmp
xchg
or
sub
lods
cld
ds
fwait
rolb
insb
adc
movb
xchg
adc
sub
mov
xor
fstpt
mov
xchg
out
and
jbe
mov
sti
mov
test
dec
shlb
inc
push
jecxz
pusha
hlt
ret
xchg
jle
sarl
inc
fisttps
fs
pushf
mov
or
and
dec
leave
arpl
and
dec
outsb
and
decb
xorl
out
add
iret
push
push
xlat
into
sub
adc
int
mov
jnp
xchg
sub
mov
cmpl
add
xchg
arpl
ret
and
clc
das
les
call
adc
out
sbb
sbb
xchg
jl
jg
pop
push
ss
mov
cmp
ficomps
in
test
xorb
cmc
pop
jbe
inc
loopne
movsb
cmpsl
dec
adc
loopne
dec
stc
pop
lret
mov
pop
jp
and
sbb
adc
cmp
out
xchg
dec
cmp
divl
and
imul
xor
ret
lds
xchg
inc
inc
push
imul
lret
test
pop
daa
mov
xchg
jg
jbe
jb
cmc
push
cmp
sub
push
bound
jp
jmp
shlb
in
lods
push
aaa
push
lret
jle
xor
adc
pop
decb
mov
test
cmc
stc
cmp
mov
xchg
or
cltd
push
inc
std
pop
push
rclb
push
xchg
shll
sub
inc
xor
sbb
mov
jbe
mov
pushf
popa
dec
shlb
loopne
jbe
aad
rolb
in
jbe
jge
add
pop
call
sti
cld
ja
add
into
pop
adc
enter
pop
lret
lahf
stc
daa
xchg
mulb
std
mov
mov
cmp
aad
push
mov
dec
fcom
ret
add
fnstsw
cmp
ficompl
ds
fucom
mov
call
in
int3
jnp
jbe
jnp
les
xchg
push
add
xlat
mov
jne
inc
out
push
stos
dec
iret
inc
out
sbb
inc
cmp
outsl
and
mov
aas
and
fldenv
adc
jns
or
adc
clc
pop
lods
bound
jno
lods
repnz
xlat
jmp
aaa
mov
dec
cli
pushf
jo
xchg
stos
sub
sbbl
test
mov
stos
mov
shl
push
or
fistpll
mov
jnp
cmc
int
out
jmp
jmp
imul
dec
pop
imul
cld
pop
add
xor
neg
enter
and
mov
insl
arpl
fcoml
nop
push
sarl
inc
push
sub
daa
hlt
jmp
lcall
pop
pop
daa
jno
inc
pop
inc
cld
rolb
and
jnp
hlt
les
push
jns
mov
rclb
dec
mov
add
daa
jae
cmp
mov
add
cld
clc
and
popf
mov
sub
xor
xchg
add
xlat
pop
insl
lods
ss
push
add
jmp
dec
out
ror
mov
dec
sub
in
fsubs
lods
push
xlat
daa
or
notl
and
mov
or
xchg
push
jge
js
push
adc
pop
jmp
sbb
test
cltd
cmpsb
es
pop
int
mov
pop
inc
inc
sbb
jnp
add
jecxz
pop
add
sbb
pusha
gs
mov
mov
addr16
and
xlat
ljmp
sbb
nop
aad
in
hlt
and
or
cmovg
push
dec
nop
mov
lcall
mov
xchg
cmp
jno
aam
inc
insb
jnp
xchg
clc
insl
out
inc
fdivrs
sub
lret
test
mov
aad
in
add
jmp
lahf
mov
cltd
into
cmpsl
pop
je
mov
mov
subb
lret
outsl
lret
and
gs
or
sbb
mov
iret
sbb
fdivr
push
in
cwtl
mov
cltd
pop
jl
sbb
pop
cmc
dec
shlb
dec
insb
fsts
mov
inc
iret
sbb
test
inc
add
dec
sub
leave
push
js
aam
mov
inc
xchg
pop
or
pop
into
push
mov
lock
daa
mov
stos
inc
test
aam
call
ret
ret
mov
pusha
gs
nop
shlb
mov
fcoms
adc
xor
mov
outsb
stc
cltd
pop
cmpsl
push
mov
jmp
push
popa
int
push
repnz
jp
js
sbb
test
xchg
outsl
lds
loope
push
movsb
iret
xchg
and
xor
mov
clc
cld
jbe
jmp
imull
push
mov
fidivl
pop
out
jg
push
sbb
xlat
outsl
push
pushf
or
push
mov
jnp
sub
and
jno
add
cmp
xchg
mov
loop
pop
dec
dec
pop
xlat
xor
push
push
lret
jae
lcall
das
xchg
loope
loope
push
mov
aad
dec
ljmp
sub
inc
into
xchg
xor
or
adc
cltd
sbb
mov
popf
outsl
mov
das
xor
push
movsb
sub
sbb
cmp
push
push
cmc
mov
xchg
mov
cmp
gs
mov
icebp
dec
lods
repnz
sbb
mov
rorl
xor
jmp
aas
jl
dec
mov
orl
push
adc
sbb
aad
dec
jno
outsb
lahf
cmp
xchg
xor
xor
addr16
pop
outsl
jns
scas
fistps
loopne
cmpsb
add
xorb
adc
in
stos
cmp
in
push
and
jp
scas
int3
icebp
cmp
push
and
jecxz
movsl
popf
js
popf
xchg
sub
out
ret
push
gs
xor
push
clc
sbb
cmp
cmpsb
sub
and
push
dec
sub
dec
or
stc
mov
push
pop
aam
mov
sbb
call
sahf
inc
adc
and
lea
pop
adc
mov
out
std
mov
cli
push
inc
lods
and
mov
fmull
in
insb
rcll
jae
xchg
popf
inc
mov
xorl
push
mov
push
add
xchg
xor
inc
pop
dec
aam
movsl
ficoms
ja
dec
ficoms
divl
aas
pop
mov
fcoms
mov
sahf
popa
cmp
add
fidivl
out
adc
cmc
push
fwait
mov
sbb
in
dec
xchg
or
testb
rcrb
pop
mov
inc
pshufw
subl
jmp
sbbb
xor
in
mov
inc
push
call
loop
lret
xor
push
sbb
jg
mov
mov
arpl
or
fdivrs
xor
mov
std
das
adc
arpl
xchg
fdivr
jge
cmpsl
aam
arpl
jno
jno
hlt
repnz
cmp
mov
repz
sbb
dec
in
movsl
je
mov
gs
xchg
pusha
rorb
lock
je
sub
lret
fadds
sbb
pop
std
jmp
sbb
push
and
bound
insl
pop
add
mov
ljmp
mov
cs
mov
scas
mov
daa
sbb
dec
ja
sub
mov
pop
rcl
pop
mov
dec
sbb
xchg
inc
mov
and
lret
scas
icebp
fisttps
pop
lcall
adc
lock
pop
mov
ret
cwtl
fnstsw
das
mov
cmpsb
mov
push
push
mov
loope
jne
xlat
pop
mov
pushf
push
es
sub
ret
lret
push
dec
jo
mov
push
cmpl
and
mov
push
or
mov
dec
orb
icebp
mov
mov
and
bound
pop
fildll
sahf
outsb
adc
ljmp
repz
pop
stos
cwtl
ficoml
lret
loope
push
push
cmp
pushf
mov
aaa
jecxz
fwait
outsl
lret
fildll
jg
loop
decl
out
mov
jg
xor
xor
push
cwtl
inc
ljmp
arpl
sub
filds
xor
add
mov
xchg
fsubr
sbb
jae
in
mov
dec
out
jns
std
add
mov
cmc
mov
movsb
sub
sub
lcall
dec
adc
sahf
scas
add
aam
fwait
pop
push
hlt
aam
es
cwtl
mov
mov
mov
pop
es
fmull
xchg
jno
sub
adc
cmp
sbbl
jp
xlat
fsubrs
mov
mov
cmp
sub
sbb
push
or
mov
cmp
repz
rcr
lds
mov
or
and
cli
and
aam
add
insl
fidivrs
pop
mov
xor
rorl
add
adc
xor
xor
fwait
cmp
sub
cmp
dec
mov
movsl
je
jae
push
popf
inc
xor
fsub
pop
test
int
sub
ret
mov
jmp
mov
shlb
dec
sbbl
xchg
mov
mov
shll
inc
nop
stc
mov
in
sbb
pop
scas
nop
add
push
add
mov
outsl
xchg
ret
insl
scas
aad
fisttpll
adc
mov
push
add
cli
pop
arpl
add
and
and
adc
sbb
and
rcr
das
mov
insb
pusha
or
xor
cmp
imul
es
stos
mov
daa
jg
hlt
xor
ja
test
or
pushf
cltd
mov
mov
sarl
adc
cmpsb
loope
lods
xchg
xchg
xchg
loopne
mov
ljmp
cmc
in
dec
xchg
sbb
jno
fwait
push
loope,pt
mov
pop
mov
repnz
mov
sbb
inc
push
xor
cli
lea
in
sub
std
add
push
mov
xchg
xchg
xchg
movsb
and
iret
fmulp
dec
sbb
cltd
add
bound
fistpl
or
cmpsl
lds
or
cmp
icebp
inc
cmp
aaa
mov
loopne
int3
inc
mov
xchg
pusha
aad
jnp
fidivrs
popa
push
push
xor
xlat
jg
push
lods
and
fxch
dec
mov
xorl
xchg
clc
mov
fidivl
movsb
sub
sub
pop
inc
imul
push
jg
in
arpl
push
fsubr
sqrtps
push
jo
and
xchg
mov
mov
lahf
dec
and
imul
sub
pop
inc
je
jb
dec
scas
xor
loop
lcall
lock
ds
dec
insb
mov
orps
jb
xchg
pop
cmpsb
sahf
in
cmp
lcall
fildl
int
xor
dec
push
push
jecxz
aad
mov
aaa
mov
mov
mov
add
cli
shll
dec
int
jle
stos
mov
dec
push
jle
mov
gs
mov
mov
loope
mov
fstp
insl
lods
cmp
lods
das
insl
ss
cwtl
jne
clc
adcl
xchg
leave
js
data16
rol
xor
je
adc
js
cmpsb
jmp
push
push
inc
std
add
repnz
dec
push
sbb
inc
pop
add
xor
inc
cmc
jne
lcall
push
aas
mov
fisubl
mov
dec
and
das
stos
scas
jle
jmp
dec
aam
or
and
ja
cmp
inc
push
xchg
arpl
mov
xchg
pop
push
std
jge
pusha
in
data16
mov
ljmp
mov
cltd
orb
jo
scas
push
lods
out
mov
sbb
mov
and
scas
bswap
jns
sahf
testb
repz
jecxz
mov
mov
sub
fstpl
insb
push
add
cld
lea
repnz
arpl
xlat
cmp
cmp
xor
add
das
outsb
jl
mov
push
xchg
dec
je
scas
adc
cli
add
cmc
mov
popa
inc
or
icebp
movsb
pop
and
cmp
bound
bswap
int
fucomip
data16
inc
push
add
cltd
loopne
outsb
test
mov
pop
pop
rcr
imul
mov
adc
js
insb
leave
pop
std
scas
fstl
js
xor
fisubrl
push
daa
xchg
into
push
inc
add
je
mov
into
fists
xchg
and
jmp
cmp
or
bound
pop
in
xor
inc
jg
lds
out
addb
in
cmc
out
mov
iret
push
lcall
std
scas
mov
xor
sub
push
mov
mov
pop
jg
ljmp
and
repz
popa
mov
les
scas
xchg
es
int
cmp
aas
call
add
loopne
mov
jo
mov
fwait
leave
mov
sbb
mov
inc
mov
xor
pop
pop
dec
xchg
filds
xchg
in
idivb
jg
sbb
jp
ds
adc
pop
jno
loopne
mov
inc
out
sahf
shl
fwait
pop
scas
cmp
jo
xor
cmp
pop
fildll
std
push
sbb
adc
sbb
es
sbb
dec
stos
fwait
ret
pop
jno
or
inc
fwait
jo
xlat
fwait
stos
es
lods
mov
sti
int3
pop
movsb
mov
xor
push
in
mov
ret
mov
leave
nop
dec
andl
xchg
mov
fs
fnstsw
mov
sub
cmp
inc
fs
hlt
sub
imul
xor
stc
mov
and
dec
dec
adc
jle
outsl
pop
sub
push
push
lock
xor
loope
pop
sub
dec
cmp
mull
cmp
add
jl
in
cmp
insl
push
das
addr16
int
jbe
pop
shr
dec
nop
jle
arpl
repnz
jo
mulb
test
xor
gs
aas
push
loope
notl
mov
fcoms
lods
xchg
jbe
lcall
add
mov
sub
insl
cmpsl
add
cmp
lcall
mov
dec
sub
lds
ss
jo
push
or
pop
cmpsl
xchg
dec
inc
shll
mov
ljmp
inc
mov
or
xchg
dec
cmpsb
sarb
cmpsl
pop
adc
loope
clc
xchg
movsb
jg
std
aad
adc
jl
add
jae
add
xorb
ret
jg
add
ja
mov
mov
divb
shrl
push
jns
aaa
outsb
push
or
add
mov
addb
add
pop
dec
sub
push
je
or
mov
test
sub
mov
inc
xorb
dec
data16
add
xor
pop
push
push
sbb
xor
mov
inc
adc
mov
dec
in
inc
adc
je
sti
jp
mov
and
push
adc
add
aas
and
das
lea
dec
and
xchg
adc
aad
cmp
iret
mov
outsb
sub
setns
out
pop
movsb
sbb
push
mov
mov
cli
in
jmp
or
test
add
push
addr16
adc
pop
push
rcrl
and
sbb
fistpll
add
pusha
jmp
jecxz
inc
push
stos
mov
fsubs
mov
mov
push
xchg
aas
dec
adc
jmp
clc
cmp
lcall
ret
cmp
fcmovb
shll
xchg
dec
shll
popf
roll
dec
cltd
popf
cmc
push
sbb
sbb
mov
xchg
insl
mov
in
rcr
fdiv
cmc
movsl
inc
adc
add
or
dec
sub
dec
loope
inc
or
mov
adc
xchg
push
jle
mov
or
dec
xchg
lea
pop
mov
xchg
pop
or
test
or
fnstsw
shll
cwtl
jecxz
cmp
mov
xchg
sbb
je
cs
or
ljmp
pop
enter
add
loope
add
inc
nop
jae
iret
lahf
cmp
call
jmp
gs
xor
jle
xchg
jb
shll
xlat
sbb
xchg
int
add
lret
mov
adc
adc
inc
xchg
jg
sbb
frstor
paddd
pusha
or
rorl
sahf
add
shlb
outsb
call
lock
idivl
or
fsts
add
or
mov
mov
ret
and
and
lea
and
mov
or
sub
incb
jae
xchg
lods
xor
fcmovbe
in
xlat
sbb
pop
sub
cli
jno
xor
fadds
int3
pop
or
in
dec
mov
test
dec
in
jmp
and
dec
pop
cmp
std
inc
pop
sbb
lods
and
cmpb
xor
xor
cltd
iret
sar
xchg
cmpsb
imul
jno
out
mov
repnz
mov
aad
in
or
inc
mov
lock
fcomip
cmp
mov
pop
sub
sbb
insb
push
cwtl
adc
add
sbb
or
les
rcr
or
xor
fwait
cmc
outsl
call
ja
outsb
xchg
cmc
ljmp
jg
js
inc
fsubrs
les
sbb
adc
ds
insl
mov
jle
cmc
iret
out
sbb
inc
xor
imul
int
ret
or
jg
stos
xlat
mov
mov
mov
addr16
or
or
mov
adc
pushf
stos
push
mov
inc
sbb
pop
mov
mov
pop
inc
pop
xchg
int
xchg
imull
xor
lret
out
cltd
dec
adc
sbb
pushf
into
and
pop
pop
fwait
dec
xlat
aaa
push
mov
das
sahf
xacquire
jne
mov
cmp
adc
pop
bound
lea
outsb
ret
inc
xchg
rcll
aad
xor
or
push
inc
jno
adc
into
or
pop
int3
jl
sahf
shrl
lock
sbb
cmp
xchg
mov
lock
stos
add
xor
or
adc
dec
adc
jmp
pop
fmuls
mov
shr
inc
repz
pushl
in
dec
adc
out
xchg
ds
dec
mov
add
fwait
xor
jle
cmpsb
repz
pop
addr16
mov
xor
sbb
imul
jne
xor
in
dec
jmp
cmp
stc
lahf
pop
mov
call
andb
js
jmp
sbb
stos
fidivrl
push
rcrb
out
repz
out
mov
and
sub
xchg
push
pop
fucomp
mov
les
sbb
push
outsl
push
adc
fldz
push
ds
bound
sti
lods
sub
scas
frstor
ret
jp
dec
push
mov
jbe
jns
enter
das
clc
add
pop
fcmovnu
cmpb
out
jle
pop
insb
imul
fildl
int3
testl
adc
mov
sub
mov
repnz
call
lret
test
xlat
test
pusha
jecxz
iret
and
icebp
and
sub
adc
xchg
jnp
test
xor
mov
call
sub
sub
push
cltd
sub
jnp
mov
enter
cmp
insb
cmpsl
repnz
pop
mov
push
or
aas
pushf
leave
neg
pop
popf
jl
mov
outsb
ds
sarb
nop
mov
inc
cmc
cmp
mov
inc
outsb
xchg
pop
cmp
ss
lock
mov
jae
mov
xchg
lock
out
int3
incb
add
push
incb
dec
loopne
xchg
pop
ss
mov
sbb
jb
in
sub
inc
mov
addl
xlat
fnstenv
cwtl
mov
pop
lods
sub
faddl
int
push
mov
jb
pop
roll
jmp
mov
mov
and
jae
or
ds
mov
jge
dec
jne
xor
sub
sub
cmpsb
adc
mov
or
cmp
or
or
jne
icebp
and
leave
push
repz
mov
or
int3
jle
sbb
out
mov
jmp
aas
mov
add
addb
das
cmp
ss
popa
mov
ljmp
jb
ss
xchg
repz
sbb
or
jae
sti
mov
inc
cmp
cmp
mov
jae
and
mov
jae
out
mov
push
pushf
pop
outsb
dec
dec
cmp
shlb
lea
aad
js
sub
cmc
mov
out
loop
jl
add
lret
fidivrl
or
inc
js
mov
push
clc
subb
out
inc
xor
or
mov
test
imul
in
cld
insb
mov
hlt
aam
cmp
mov
aad
rclb
dec
popf
and
fdivrl
sbb
inc
rcll
mov
orb
jmp
dec
push
or
push
jne
xor
mov
mov
adc
setle
jge
mov
stc
test
and
xchg
fs
mov
imul
enter
inc
mov
bound
stos
xor
arpl
repz
jl
jmp
test
dec
xor
push
loope
loop
cli
dec
pop
aas
sahf
dec
sbb
sarb
psubusw
shrb
push
fs
sbb
into
lods
fisubrs
jmp
xchg
or
pop
push
testl
add
insb
je
dec
inc
inc
dec
pop
aad
arpl
sbb
lcall
bound
cmp
aaa
js
push
jecxz
cmp
xchg
rcll
mov
ljmp
cmp
mov
cwtl
mov
outsb
jmp
cld
repz
push
inc
cmp
lods
push
jg
insl
sub
xor
or
mov
or
leave
cwtl
push
xchg
pop
adc
jb
popa
xchg
cld
and
adc
ror
call
in
mov
jle
adcl
mov
outsb
cmpsl
mov
pop
dec
push
and
mov
cli
sub
mov
mov
xor
lcall
icebp
aad
in
adc
addl
inc
mov
mov
cmp
out
xchg
ret
fisttpl
or
sbb
aaa
rcl
inc
outsl
std
movsl
lods
cli
cmp
pop
cld
int3
es
sbb
notb
rorl
imul
dec
sub
xlat
sahf
cltd
aad
add
ds
xor
outsl
cmpsl
dec
ljmp
daa
aam
jmp
sti
xchg
pmovmskb
xchg
mov
mov
addb
jecxz
icebp
mov
xchg
xchg
xor
inc
jmp
in
inc
push
repnz
push
jns
inc
fs
xor
in
shrl
pop
mov
mov
fisubs
into
mov
push
mov
mov
imul
sub
out
sub
adc
push
jle
push
mov
cmp
fbld
xor
insb
sbb
loop
push
mov
push
xchg
sbb
and
gs
mov
ja
shl
inc
sub
pop
jg
lcall
jge
das
and
stc
cli
sbb
inc
daa
ss
push
je
xchg
cmp
es
ljmp
fcmovu
out
xor
sub
add
dec
mov
sti
pop
mov
clc
inc
or
mov
int3
test
or
mov
cmc
xor
out
cmp
cmp
outsb
cmp
stos
test
int3
pop
arpl
jne
sbb
xchg
and
pop
xor
xorb
xchg
sbbb
push
aam
jne
ss
gs
or
outsb
inc
pushf
loopne
adc
jne
scas
pop
dec
mov
mov
sbb
mov
popa
mov
pop
jns
into
pop
lret
sub
jae
test
fisttpll
mov
mov
rsqrtps
sub
out
repz
mov
sub
movl
jp
inc
rcll
inc
add
mov
jns
mov
out
lock
jnp
push
lea
jge
mov
es
adc
xlat
fstp
enter
and
ficomps
incl
xlat
in
push
or
outsb
xchg
mov
mov
loopne
and
icebp
in
dec
mov
ja
aad
outsl
and
fidivl
out
out
cmp
add
fsub
push
pop
jbe
fidivrs
sti
mov
lods
shlb
fs
inc
pop
ljmp
dec
sbb
xchg
and
add
mov
mov
jge
mov
xorb
jb
loope
cmp
fsubrp
in
int
xor
cs
fs
test
xchg
ret
inc
or
in
loope
pop
push
xchg
mov
out
rcl
out
arpl
lahf
out
ljmp
jno
xorl
mov
sarb
insb
outsb
ja
sbb
jb
sub
test
cmp
lahf
jp
insl
dec
test
mov
push
aad
mov
dec
out
add
inc
out
mov
sbb
inc
and
mov
call
aad
xchg
pop
test
mov
out
mov
and
stos
lcall
push
jno
cmpsb
mov
aad
sbb
dec
xchg
mov
inc
dec
dec
pushf
lret
loop
aas
xchg
pop
mov
and
pop
jne,pn
adc
jbe
or
test
test
shll
fstpt
cs
fstpt
pop
mov
add
xchg
std
push
aas
icebp
jo
ja
mov
jno
js
shl
loope
cwtl
dec
mov
xor
dec
mov
cmpsl
mov
call
mov
mov
xchg
add
bound
push
cmp
cmp
mov
xor
fiadds
je
testl
cli
lahf
pop
leave
xchg
mov
or
pop
jne
fldt
rcrb
rcrl
ja
sbb
cvttps2pi
jmp
incb
lea
jp
inc
ret
in
pop
ret
push
gs
movsl
lock
in
mov
pop
movsb
ja
or
arpl
ret
fisubrs
xorl
fdivr
add
out
movl
mov
popa
xchg
into
adc
push
jo
cs
dec
cld
pop
mov
jle
mov
lret
cmp
jl
or
add
sub
push
popa
and
pop
ret
lcall
mov
mov
test
pop
clc
mov
sub
adc
dec
int
or
loop
push
jbe
loopew
fmuls
adc
lds
fs
subl
out
andb
pop
in
outsl
ja
or
push
leave
movsb
cld
decl
push
xchg
lods
in
je
cmpsl
push
jmp
inc
and
or
mov
in
jbe
notb
imul
pop
fs
pop
mov
shl
mov
in
sub
lds
jmp
add
push
out
or
xchg
arpl
pop
gs
hlt
adc
inc
jmp
loop
xor
xor
out
cmpsb
mov
andl
add
clc
dec
gs
fistpll
mov
sub
jno
mov
ss
sbb
test
mov
jb
xchg
dec
mov
xchg
test
xchg
push
test
xchg
xor
mov
bound
cmp
push
pop
lahf
shll
fidivrs
aas
cmp
loop
inc
out
insl
cmp
imul
lahf
xchg
movsb
xchg
sub
call
sbb
and
mov
mov
add
rorb
and
push
cmp
into
arpl
std
cwtl
inc
cmpsl
xchg
sub
push
pusha
and
stos
aas
cmp
pop
jo
inc
xor
cmp
loope
mov
dec
adc
cltd
repnz
test
lea
xchg
pop
movsb
pop
inc
adc
xchg
pusha
inc
sbb
mov
movsl
pop
clc
push
call
pop
aas
pushl
sub
mov
dec
sub
stos
mov
arpl
movsl
mov
dec
sahf
and
push
repz
lret
inc
cltd
xchg
pop
shll
xor
loope
mov
fs
in
mov
sub
ja
pop
pop
adc
jge
mov
fsave
in
aad
pop
xchg
hlt
mov
pop
lds
lahf
push
aam
sahf
jae
pop
mov
inc
cmp
loope
daa
xor
mov
imul
lock
or
or
inc
add
inc
mov
xchg
cmpsb
dec
adcb
fistpl
push
jge
out
out
out
add
push
push
in
and
outsb
popf
in
fcompl
ror
fldt
lret
pop
insl
adc
and
push
int3
div
sub
dec
in
sbb
dec
call
or
sbb
push
mov
outsl
ljmp
jmp
sub
test
mov
jge
andl
or
push
sbb
std
std
dec
pop
insb
subb
shlb
bound
mov
push
xor
shrb
and
xlat
cmp
sub
subb
jb
dec
loop
frstor
xor
cli
nop
or
jl
popa
sarb
xchg
in
les
sub
and
idivb
aas
mov
ljmp
push
cmpsb
cmc
add
sub
test
test
mov
add
push
lea
lea
push
movsb
stos
addb
lret
mov
pop
xchg
iret
imul
mov
sub
and
inc
rcrl
jb
imul
push
jg
test
lds
int
xor
sub
movsb
ds
push
fsub
stos
mov
roll
aad
out
sbbl
mov
pop
dec
or
arpl
stos
jecxz
mov
pop
sbb
out
call
xchg
je
ds
andl
clc
test
out
lods
xchg
outsl
push
std
or
test
popf
xchg
test
cmpsb
xchg
pop
addl
pop
sbb
pop
sub
cmpsl
ljmp
sbb
mov
mov
push
inc
sbb
jle
mov
test
imul
insb
pop
push
sbb
mov
popa
sub
cmp
in
nop
cmp
xchg
mov
push
jmp
add
push
into
xchg
aam
pop
aaa
cmp
andl
pop
mov
jnp
adc
test
addr16
cli
and
hlt
ficoms
test
js
dec
jb
sbb
jecxz
cmovg
jle
in
and
imul
dec
fs
cmp
mov
add
je
outsb
lea
xchg
xchg
xor
jp
push
push
and
xor
inc
inc
jecxz
in
or
jle
mov
mov
rcrl
xchg
mov
adc
sbb
mov
mov
fs
rcrl
daa
jl
in
scas
mov
pop
cmp
adc
sbb
aas
xchg
or
cmpsb
adc
mov
insl
sbb
cmp
loop
fmuls
sub
push
mov
addr16
and
frstor
adc
jns
ss
sbb
aaa
dec
out
ss
loopne
and
pop
sub
cmpl
lock
or
insb
stos
dec
std
push
movsb
enter
insb
imulb
aaa
dec
sti
push
dec
cltd
sub
notb
in
add
mov
inc
leave
sbb
je
jae
mov
push
and
loope
test
push
lret
jno
shlb
ret
insb
add
fildl
lret
outsb
js
mov
loopw
outsb
fwait
xchg
jg
jo
mov
cmp
push
push
push
jb
pop
push
add
sti
pop
icebp
ds
mov
adc
testl
mov
xor
es
pusha
inc
cmp
mov
vmwrite
pop
mov
lahf
sbb
mov
or
stos
sub
ret
adc
or
sbb
jp
sub
add
out
pop
call
add
pop
xchg
data16
jmp
adc
lret
out
jo
pop
lcall
xchg
in
mov
mov
cs
pop
adc
xchg
push
in
xor
sahf
sbb
ss
jns
push
dec
adc
cmp
push
xor
dec
lret
sti
jmp
imul
lds
ret
or
xor
pop
fstpt
mov
push
sub
and
out
cmp
out
dec
jns
imul
and
loopne
add
in
cmc
xor
xchg
jns
mov
lret
dec
into
adc
aam
cld
and
jl
movsb
inc
inc
enter
jne
sbb
xor
rcrl
jb
jge
jo
add
fucomi
add
cmp
jmp
data16
and
mov
lock
addr16
aaa
cmpsl
or
mov
cmc
fistl
sub
decl
sbb
cmp
sub
aad
bound
pop
andb
adc
xchg
icebp
jp
jns
cwtl
in
dec
jae
stos
fsts
mov
jne
movsb
jb
lea
sub
ftst
in
adc
pop
jns
cmpsl
cli
jge
mov
dec
xchg
call
inc
or
pop
add
int3
ret
push
cmpsl
jbe
inc
push
mov
dec
jmp
inc
add
inc
dec
gs
push
pusha
mov
hlt
int
mov
lahf
pop
shl
add
fwait
jb
jmp
nop
sahf
test
adc
and
add
repz
js
shll
std
cwtl
xchg
or
cwtl
fmull
rcll
leave
and
sub
inc
inc
jb
stos
pop
sbb
aaa
movsl
cwtl
bnd
xor
mov
adc
mov
std
out
pop
outsb
mov
add
adc
dec
cmp
sbb
lret
ds
xor
loope
rcr
push
ds
add
cli
dec
insb
testb
cltd
outsl
xchg
sub
xor
sbb
inc
xor
ret
in
das
pop
mov
movsl
push
pusha
data16
inc
jle
or
rorl
jnp
inc
aad
out
shl
aaa
add
gs
aas
adc
and
fwait
push
std
xchg
arpl
push
mov
test
jg
inc
imulb
frstor
test
push
mov
adc
push
outsb
cmp
mov
add
es
movsl
sub
rcr
iret
cmpsl
ja
repz
ljmp
daa
ja
nop
lds
aad
adc
push
mov
pop
je
and
pop
mov
andb
rolb
dec
lods
pop
fistl
dec
sub
or
xor
aam
jge
das
aaa
mov
pop
mov
and
and
out
pusha
shr
adc
mov
shrb
mov
cmp
mov
orl
scas
int
lahf
push
xchg
gs
sbb
and
mov
jo
inc
call
mov
adc
loope
call
add
xchg
stc
scas
sub
cmp
inc
jno
push
insb
ljmp
pushf
imul
fstps
push
jge
sti
sub
dec
dec
leave
sub
add
push
inc
add
mov
dec
enter
mov
pop
test
cmp
in
js
ret
orl
js
lcall
mov
cmpsl
xor
aaa
mov
mov
arpl
out
cmp
aas
divl
jne
jo
push
ja
mov
cmp
mov
insl
dec
test
inc
add
mov
dec
inc
icebp
ss
push
and
mov
push
outsb
and
jno
out
jmp
int
rolb
cmp
ret
out
repz
js
iret
loop
cmp
or
inc
sub
arpl
aam
rcrl
add
nop
adc
test
movsb
inc
fs
xorl
push
call
lret
adc
adc
dec
pushf
in
jo
ljmp
pop
inc
push
add
sbb
xor
sbb
jp
sbb
adc
xor
inc
and
push
pop
or
pop
ljmp
in
lcall
pop
or
mov
push
lods
loope
add
xchg
cmp
pop
mov
in
dec
dec
leave
jb
mov
fadd
out
xchg
adc
nop
mov
stos
mov
jge
cmp
ds
sub
lret
push
fbld
mov
and
scas
mov
sub
sbb
enter
add
dec
mov
into
dec
out
mov
pop
dec
aam
jge
nop
cmc
jbe
in
xor
cmp
pop
jnp
push
fnstsw
xchg
mov
jge
dec
daa
cmpb
scas
shrl
in
xor
das
push
cli
add
repnz
ficoms
loopne
xchg
ss
test
lret
pop
jno
mov
repz
pusha
pop
ja
cld
push
into
dec
pop
sbb
in
and
pop
ja
cmp
lret
stos
es
xchg
jle
sub
mov
lock
mov
aaa
fwait
pusha
lcall
or
or
wbinvd
or
xor
into
and
sbb
testb
and
xor
mov
fadd
jge,pn
dec
stos
inc
xchg
push
addr16
repnz
in
pop
dec
loop
sub
inc
les
cmc
xchg
push
pop
inc
int
into
mulb
adc
iret
sbb
or
mov
mov
sti
pop
add
test
test
adcl
cmp
add
lds
inc
cmp
or
js
xor
add
xchg
fdivrl
cmp
push
dec
jl
mov
fbld
jmp
xlat
sub
daa
ds
xor
lret
xlat
inc
add
inc
sbbl
xchg
leave
lods
shl
jp
insl
lds
add
add
jmp
and
aaa
add
inc
inc
ljmp
mov
rorb
aaa
mov
lret
mov
div
sbb
mov
push
bts
stc
xor
sbb
dec
xchg
mov
pusha
int
mov
inc
or
les
mov
xchg
inc
dec
test
das
fisttps
jle
in
push
stc
imul
aas
stos
jmp
mov
and
sbb
push
xor
xchg
mov
out
dec
jmp
adc
sar
addr16
push
outsb
push
lds
dec
jg
push
icebp
and
jb
xchg
mov
or
hlt
sub
and
add
jmp
xchg
pop
add
push
mov
int3
popf
push
inc
pop
adc
sbb
ret
push
popf
pop
inc
lret
test
adc
mov
and
sub
cmpsl
inc
inc
sub
mov
mov
dec
cmp
adc
into
insb
ret
in
dec
xor
test
push
jge
push
pop
ja
mov
xor
lods
xchg
test
and
sub
push
adc
xchg
jns
sub
jmp
mov
stc
fildll
stos
inc
add
cmp
jae
push
adc
arpl
jae
sub
imul
dec
jge
cmp
sbb
mov
outsb
dec
sub
ljmp
nop
sbb
or
sarl
cmpsl
pop
add
inc
adc
sbb
sahf
ret
pop
push
fisubrl
shl
and
js
icebp
inc
jnp
stos
cltd
leave
pop
cmp
xor
sbb
xchg
push
sti
pop
out
add
aas
iret
jnp
imul
leave
shll
nop
out
push
inc
test
lret
xchg
cld
sbb
test
call
pop
cmp
and
scas
cmpsb
imul
adc
jo
xchg
lds
div
jmp
xor
add
icebp
or
mov
sub
xor
in
test
dec
gs
xchg
sahf
leave
ss
jmp
pop
push
adcl
shrb
je
scas
movsl
int3
inc
xorl
cmpsb
xor
ss
ret
clc
pop
mov
or
jge
add
adc
mov
into
add
push
into
mov
jge
clc
xchg
stos
test
pop
std
aaa
sbb
adc
mov
and
iret
imul
daa
mov
in
fnsave
sub
jns
mov
cmp
dec
mov
movsl
add
cmp
lds
stos
fwait
mov
pop
orl
stos
fldenv
xchg
pop
pop
fs
and
scas
mov
insl
sub
stos
xchg
pop
test
inc
gs
mov
mov
mov
dec
imul
sbb
jl
adc
stos
push
mov
jne
xchg
mov
ja
xor
push
test
push
je
fs
stos
add
and
imul
xor
push
icebp
mov
imul
aad
mov
or
xchg
or
nop
cmp
scas
dec
cmp
push
call
les
or
mov
mov
xor
fwait
xor
push
mov
adc
adc
pop
out
adc
fsts
mov
adc
xchg
pop
dec
sub
sub
sub
add
cwtl
iret
jnp
cmp
sub
inc
push
or
sti
xor
inc
dec
sarb
mov
cmpsb
rol
adc
leave
sarl
add
xchg
out
and
mov
stos
mov
or
daa
dec
lret
pop
fcmovb
add
cltd
mov
jp
sbb
mov
mov
in
or
push
stos
jp
push
sbbl
icebp
ljmp
inc
in
ficompl
pop
sar
mov
dec
rcrb
sbb
xchg
data16
pop
sbb
outsl
stos
jge
push
or
pop
stc
testb
out
movsl
sbb
fsubr
mov
sbb
xor
mov
cmpsb
sbb
dec
sbb
je
scas
lret
push
aaa
push
loope
sbb
add
jp
hlt
dec
mov
jns
cmp
add
and
mov
rcr
cmpsl
out
mov
cmp
stos
call
dec
mov
hlt
push
icebp
inc
inc
sti
jne
test
movsl
cli
stos
repz
sub
adc
sub
adc
push
je
add
fistpll
jae
ror
pop
adc
cmp
cmpsl
stos
loope
pop
mov
sahf
stc
aas
mov
lahf
addb
mov
aas
pop
in
xor
mov
adc
cltd
and
sbb
movsl
les
jecxz
cli
and
fnstenv
bnd
mov
jmp
push
nop
pop
cmpsl
push
pop
inc
pop
pop
sbb
xor
xor
mov
call
mov
enter
jecxz
loopne
xor
push
cltd
xchg
lahf
mov
ds
or
mov
inc
push
fucomp
bound
addr16
test
adc
test
andb
inc
aas
inc
filds
addr16
int
push
sbb
idiv
mov
mov
gs
push
xchg
into
mov
in
fsubs
std
cmp
mov
cmc
imul
mov
pusha
xor
mov
dec
in
filds
jl
movsl
sub
sar
scas
or
mov
fldt
movsb
into
mull
jg
xor
cmp
test
inc
cld
xchg
mov
jle
mov
cmpsb
fcompl
ljmp
repz
cmp
push
mov
rcrl
xchg
and
mov
mov
push
push
push
jp
push
xlat
js
xchg
push
aad
rcl
in
inc
scas
fldl
mov
ja
cltd
shrl
mov
outsl
lods
mov
mov
push
sub
out
je
test
pop
clc
sub
push
sbb
xchg
inc
mov
fdivl
mov
je
and
fnstsw
dec
or
cli
fsubrp
imul
rolb
inc
mov
fildl
add
ljmp
xchg
jno
aas
outsl
dec
and
mov
ret
mov
dec
movl
pop
stos
sbb
loop
stc
or
jl
jge
jmp
loopne
movsl
xchg
lock
dec
mov
mov
hlt
or
pop
sti
das
or
arpl
stos
ret
add
inc
gs
call
in
mov
daa
lahf
mov
rorb
ds
out
sbb
test
popa
dec
popf
idivb
fs
ja
lret
or
ss
mov
hlt
shl
xchg
js
imul
repz
or
pop
imul
mov
dec
add
dec
addl
movsl
lahf
jl
sub
notb
lahf
xor
rorl
dec
inc
std
mov
inc
in
mov
add
dec
adcl
or
mov
inc
mov
pop
sbb
popa
pop
cmp
outsl
cld
cmc
push
sbb
fbld
and
cmpsl
pop
jecxz
dec
sti
dec
out
out
or
pop
ja
and
repz
jns
or
xor
add
addr16
mov
sub
sti
shll
mul
cmp
sub
jg
sbb
rcll
dec
mov
jecxz
mov
scas
cmp
imul
into
adc
adc
in
mov
adc
faddl
sub
out
jecxz
sbb
or
pop
pop
cmp
jno
adc
push
cmp
cmp
data16
aaa
shlb
push
stc
daa
movsl
cmpsb
mov
jl
lock
and
js
jae
jno
xchg
mov
pop
cwtl
popa
push
mov
dec
mov
inc
in
scas
push
jno
imul
add
repnz
stos
nop
jmp
dec
clc
jg
jnp
fdivrs
mov
lret
nop
mov
cmp
mov
fdivrl
push
fists
pop
sub
dec
xchg
sets
or
push
inc
out
jb
adc
push
mov
mov
jmp
jno
sti
and
mov
xchg
out
jp
push
orb
scas
je
jle
mov
and
mov
js
jmp
mov
mov
mov
cmp
sarb
sub
sub
aaa
cmp
rcl
cmpsb
es
jmp
mov
mov
push
in
mov
stos
stos
xchg
test
rol
lds
pop
push
mov
addl
sahf
jbe
xchg
std
push
jg
inc
lock
js
push
jle
or
xchg
mulb
aaa
cmp
data16
inc
mov
nop
jbe
int3
fwait
in
cmp
dec
daa
lret
adc
jg
outsb
mov
lods
mov
call
inc
sbb
fstps
push
test
mov
jecxz
inc
std
xor
mov
add
jb
xchg
sub
mov
sti
sub
incb
lea
dec
push
jb
shrl
dec
mov
mov
mov
sub
mov
xor
fnstcw
cmp
lock
in
push
push
in
xchg
stos
test
cmp
fadd
pushf
or
fists
inc
mov
sub
and
mov
and
sub
iret
fnstcw
and
adc
adc
pop
aas
js
xor
mov
xchg
cwtl
dec
push
push
mov
mov
fmul
ret
cltd
mov
xchg
ret
dec
xor
aad
or
lcall
in
push
push
adc
insl
orl
fiaddl
pop
cli
pusha
and
popf
pop
mov
xchg
int3
das
insl
cmc
cmpb
or
lret
jo
pop
sahf
ficompl
inc
add
out
xchg
sbb
dec
mov
and
addr16
out
pop
cwtl
jb
inc
xchg
cmp
daa
xchg
sbb
xlat
mov
mov
inc
jnp
xchg
lods
daa
sub
loopne
and
pushf
or
je
cwtl
xchg
xchg
xchg
sbb
jo
stos
imul
and
and
push
and
mov
cmp
std
jo
in
ja
sub
enter
mov
ret
or
jge
adc
icebp
lds
xor
dec
lock
inc
and
leave
call
jp
rcr
inc
cmp
push
addr16
inc
cmpsb
mov
sub
hlt
cmp
dec
gs
pop
popa
xchg
fadds
data16
pusha
push
cld
fsubrl
lahf
push
xchg
mov
mov
cwtl
lods
cmp
test
mov
int
xor
cli
jl
xchg
negl
aaa
sahf
jne
or
push
or
dec
jmp
lds
push
in
ret
mov
in
imulb
mov
jae
xchg
jne
add
hlt
jbe
inc
rolb
mov
es
cmp
sbb
mov
int3
js
push
shll
jno
or
test
aam
jge
pop
imul
lea
fcoms
dec
push
push
rol
ds
or
out
gs
mov
dec
jl
ljmp
call
mov
dec
leave
fistpll
into
data16
or
loope
pop
fstpl
mov
sbb
pop
sub
scas
call
xchg
arpl
jp
insb
sbb
out
mov
incl
in
push
divl
nop
mov
mov
xchg
or
sbb
test
add
mov
and
xlat
cwtl
stos
stos
push
sahf
and
and
mov
cmp
and
mov
bnd
xchg
mov
inc
sahf
iret
lret
inc
xor
jae
pop
push
fst
lret
lcall
xor
in
add
outsl
insb
sub
sbb
das
cs
repnz
lods
sub
sbb
lods
pusha
adc
movl
enter
mov
lcall
jbe
fprem
sub
push
loope
scas
addr16
lds
fbstp
dec
dec
or
lcall
cli
fistpl
jo
repnz
xor
mov
jle
clc
imul
mov
inc
mov
fmul
out
jmp
push
mov
and
psllw
ret
push
int3
lret
testb
mov
lret
aaa
pop
lret
fs
fwait
or
pop
cltd
sbb
cmpsb
jg
jbe
dec
mov
pop
xchg
push
add
popf
push
out
in
or
pop
stc
jp
mov
rcr
lret
dec
ljmp
jg
les
out
mov
ds
ljmp
aas
dec
dec
addr16
sarb
mov
fstpl
xor
jg
fsubp
adc
out
outsl
adc
xlat
ss
std
js
xchg
pop
popa
stc
int
sub
cmp
cmp
pop
ret
dec
cmc
shlb
fdivs
push
aam
dec
cmp
mov
shll
push
sbb
mov
add
xlat
xchg
les
adc
push
popf
shll
mov
test
push
pop
and
inc
lret
ret
xor
rcrl
cmp
mov
mov
inc
movsl
and
pop
scas
jge
jecxz
cmc
xchg
jb
xchg
fisttpll
mov
adc
data16
xchg
rolb
fnsave
cmp
mov
pusha
lret
enter
add
pop
and
mov
in
iret
addr16
sub
fmull
mov
ss
sbb
dec
inc
sbb
cmp
push
and
js
xchg
jno
or
mov
div
sbb
inc
lret
pop
sbb
push
xchg
adc
push
add
mov
cmp
add
arpl
fcmovbe
lods
adc
add
adc
data16
pop
adc
dec
cli
fistpll
mov
mov
mov
cli
es
dec
adc
sbb
jmp
jbe
add
and
in
in
push
popa
mov
mov
pop
push
mov
mov
adc
test
push
das
in
mov
sbb
mov
ja
arpl
adc
lea
mov
add
pushf
pop
popf
push
iret
jmp
sbb
pop
mov
jp
jb
cli
sbb
or
adc
or
fptan
add
sub
adcl
push
sub
dec
sarl
xchg
mov
outsl
inc
xlat
xor
shl
xchg
mov
aam
jo
movsb
dec
nop
dec
dec
lock
repnz
es
out
fsubrs
iret
pop
subl
aad
xchg
mov
fbld
or
cltd
push
outsb
nop
bound
test
jecxz
pop
fs
sbb
and
aas
repnz
sbb
pop
jge
iret
inc
in
test
dec
leave
repnz
shrl
js
decb
mov
ret
and
xor
jmp
dec
out
icebp
test
in
mov
cld
lods
jmp
xor
sbb
movb
mov
out
push
jae
jo
jbe
mov
rolb
sub
pop
and
push
aaa
int3
dec
ss
cmp
in
push
and
cmpl
mov
push
test
call
push
adc
pop
hlt
out
xchg
scas
data16
lods
arpl
ja
loopne
aad
mov
ss
sub
and
cmp
ljmp
jl
mov
jo
in
movl
xor
dec
es
data16
mov
sbb
stos
inc
aas
cwtl
and
stos
jg
mov
mov
sub
push
mov
sti
cmp
insl
push
shll
pop
lock
dec
xor
jg
adc
call
pop
sbb
arpl
movsl
mov
inc
xor
bswap
outsl
pop
call
popa
into
jne
imul
sbb
push
out
out
push
pop
inc
push
add
xchg
or
adcl
not
int
jns
mov
scas
out
mov
jns
cmc
pop
xchg
xor
mov
add
mov
stos
scas
daa
dec
inc
sub
xchg
pop
dec
test
push
cmp
jo
xchg
pop
or
gs
cmc
pop
mov
lcall
aas
outsl
loopne
inc
arpl
sub
gs
xchg
sub
cmp
pop
daa
scas
mov
jae
push
les
aad
hlt
repnz
xchg
lds
push
out
sbb
roll
xor
pop
movsl
mov
cmc
mov
iret
push
push
jno
lret
jns
pop
fidivrl
out
pop
dec
shrl
std
and
vpunpcklwd
mov
mov
push
cmpsl
stos
mov
add
out
fmuls
ss
fs
xchg
jns
repz
je
jl
scas
or
loope
mov
arpl
ret
aad
push
jecxz
push
or
sub
shrb
xor
mov
js
lods
push
inc
dec
fdivl
cmc
cmp
mov
push
xchg
daa
or
xchg
cli
iret
sbb
stos
jecxz
cwtl
call
cmp
shl
jmp
pop
dec
xor
push
ret
in
in
xor
pop
dec
fstl
adc
popa
pop
ud2
xor
lods
popf
xchg
lcall
push
adc
shrl
shrb
xchg
scas
mov
sbb
call
cmp
dec
xor
mov
fcmovu
dec
push
jp
lret
out
and
inc
mov
cli
mov
inc
mov
pop
aas
aad
sbb
test
or
aad
sub
lret
mov
mov
sbb
adcb
pop
and
jb
orb
xchg
scas
xor
loope
cmp
stc
rorl
in
sub
adc
mov
mov
jae
inc
ss
inc
sahf
xchg
retw
movsb
dec
aas
xor
push
mov
jmp
sub
test
imul
or
push
dec
sub
clc
iret
int3
xor
imulb
out
icebp
inc
pop
or
repz
cmc
xchg
inc
and
xchg
int
clc
cs
jecxz
cmc
lea
in
cs
sub
mov
push
add
ficompl
ja
jo
sub
pop
and
ss
mov
movsl
mov
scas
jle
pop
or
dec
mov
imul
outsl
lahf
fdivr
fistl
adcb
mulb
cmc
nop
aas
sub
pop
testb
add
dec
push
dec
out
cmp
daa
inc
pop
pushf
mov
dec
aam
cli
jnp
cmp
pop
sub
mov
in
dec
fwait
cmp
lods
cmp
jo
inc
cmpsb
mov
or
mov
cmp
fldcw
and
fwait
pop
and
mov
notl
rolb
test
inc
repnz
out
rcrb
dec
shl
pusha
add
insb
mul
cli
jnp
jo
test
xor
ljmp
mov
scas
int
ljmp
inc
and
cmp
aad
mov
xchg
sbb
jns
aad
faddl
xor
dec
aas
test
xchg
test
ret
imul
mov
ljmp
inc
std
and
cli
sbb
lods
lcall
aas
mov
xrelease
jg
fildl
xchg
lods
addb
sub
sbb
jge
and
mov
adc
sti
xor
xor
sbb
push
inc
rcll
cwtl
sub
mov
xchg
mov
lahf
or
test
mov
mov
dec
fwait
push
jae
nop
and
dec
lret
and
cmpsl
adc
sub
call
xor
out
mov
cmpl
in
jg
and
jmp
popf
call
push
push
mov
fildl
ds
inc
xchg
idivl
inc
pop
loopne
enter
inc
mov
xor
adc
enter
int
int
aas
pop
jo
popa
divl
xor
inc
std
jae
mov
cmp
jns
xchg
dec
scas
popa
jns
movsb
xor
pop
mov
fs
jnp
insl
xchg
bound
scas
sahf
xor
aaa
test
xchg
pop
roll
mov
iret
out
mov
loop
inc
cld
xchg
orb
fnstcw
pop
dec
inc
xor
jne
pop
pop
pop
dec
jns
pop
jg
inc
push
movmskps
shll
mov
fsubl
jge
jnp
shrb
pop
insb
mov
inc
lahf
xchg
gs
test
mov
or
xor
fisttpll
mov
jb
stos
stos
mov
sbb
int
push
jnp
jno
xlat
mov
jbe
xchg
data16
mov
sub
or
shll
rorb
sbb
mov
mov
inc
xor
lods
in
dec
cmp
mov
jb
and
jg
loope
mov
mov
aam
mov
movsl
out
dec
mov
fwait
and
jb
aaa
shl
test
jno
stos
dec
lcall
mov
mov
sti
mov
push
sub
test
lret
jmp
push
sbb
mov
xchg
mov
lock
insl
mov
shrl
and
pop
add
clc
cmp
stos
add
adc
icebp
or
dec
dec
outsb
jge
inc
test
ret
and
cli
mov
dec
das
pushf
aas
stos
subb
jp
scas
mov
lods
icebp
xor
pop
test
sub
int3
mov
push
test
outsb
pop
mov
mov
ret
push
sbb
xor
pushf
das
cmp
push
inc
sbb
in
setno
ja
xchg
sarb
mov
stos
ss
testl
or
or
nop
inc
out
fisubrl
xor
out
ljmp
stc
mov
call
andb
cmp
mov
aam
cmp
sub
fdivl
mov
mov
sub
sarl
or
sbb
pusha
ds
jl
and
lea
shl
or
insl
pop
mov
jo
push
jo
sti
dec
lea
cwtl
push
and
inc
mov
adc
lret
mov
mov
mov
adc
testb
dec
repnz
push
arpl
pop
mov
jge
je
jmp
out
pop
mov
add
fsts
pushf
dec
scas
repz
lock
mov
fmuls
xchg
jae
cmpsb
or
jbe
jbe
arpl
mov
mov
mov
mov
addr16
and
add
push
mov
mov
cmp
and
xchg
dec
mov
shl
int
shll
and
dec
sti
call
ljmp
adc
or
cs
outsl
xor
in
lock
xchg
cmpsl
xchg
lods
mov
ljmp
fidivl
inc
lds
add
pop
ret
call
pop
movsl
mov
sarb
lock
mov
adc
adc
jno
gs
stos
pop
test
xchg
in
leave
bound
fidivrs
add
mov
push
pop
test
test
pop
mov
movsb
fisttpll
mov
add
scas
xchg
fucomi
xchg
rorl
sbb
sbb
pop
push
push
incl
xchg
mov
ljmp
stos
ficoml
lock
push
mov
jecxz
push
pop
mov
aaa
sub
test
inc
shll
shl
roll
xlat
cmp
cwtl
mov
push
es
jo
adc
mov
test
push
jmp
prefetchwt1
sub
rcl
or
mov
fisttps
jp
sbb
mov
ss
mov
mov
adc
in
push
js
or
loopne
outsb
mov
inc
movsl
push
dec
notb
xor
and
jmp
xchg
clc
jge
xchg
gs
popf
sub
incb
lea
rclb
cmp
out
ljmp
ret
mov
push
push
and
cmpsl
int3
jnp
push
test
jae
fldcw
movsl
sarb
cs
in
or
inc
sarl
or
sti
cmp
pop
jmp
mov
mov
xor
and
ret
out
xchg
cltd
lea
bound
aaa
cwtl
fwait
lds
mov
inc
mov
push
sbb
popf
pop
cmp
push
add
jl
shl
mov
mov
insl
xor
icebp
cmpsl
xchg
pop
inc
and
js
pop
pushf
icebp
mov
pop
push
lea
sti
in
add
daa
das
jb
movsl
jnp
sbb
mov
test
movsb
pop
jp
repnz
lahf
xchg
cmpsl
jbe
cmp
int3
dec
imul
imull
jne
imul
fcoml
notb
jecxz
fnsave
ds
inc
sub
lea
sub
fisttpl
and
lods
cli
clc
cmc
aas
and
orl
sbb
popf
inc
movzbl
sahf
mov
out
xchg
pop
cmp
sbb
fcomi
lcall
jecxz
mov
push
push
fwait
sub
test
addl
sbb
outsl
dec
ret
sub
iret
sub
pop
js
mov
outsb
sub
dec
fisubrs
loopne
inc
mov
popf
add
add
rcll
xlat
and
cli
jg
gs
stos
pop
cmp
jmp
fdivs
stos
pop
jle
cli
jg
call
add
cmpl
std
pop
inc
mov
sub
push
sbb
pop
inc
push
push
fldcw
jl
aas
xlat
sbb
mov
adc
stos
das
jl
cmp
xchg
add
cmp
xchg
popf
xor
push
out
mov
test
stos
dec
cmp
fldln2
sahf
fcmovbe
or
dec
dec
inc
repz
int3
sbb
adc
mov
cld
cli
lea
inc
movsb
mov
push
flds
mov
mov
jge
push
push
dec
test
in
fucomp
leave
push
insl
xor
sbb
pop
in
or
push
stos
jmp
mov
aam
mov
mov
add
push
cmp
out
daa
lret
das
inc
xchg
xor
out
pop
push
stos
mov
dec
jmp
jmp
inc
cmp
push
adc
sub
or
mov
fwait
cmp
dec
sbb
mov
lods
shll
mov
adc
xlat
nop
cld
fstpt
int3
jmp
jns
sahf
add
rorb
push
sbb
jbe
cs
jle
and
ret
fs
adc
or
in
cmp
ljmp
push
adc
mov
int
mov
mov
lcall
mov
call
or
xchg
or
aaa
sarl
movsb
out
in
lea
scas
clc
add
push
sbb
sub
sbb
inc
fsubs
enter
pusha
ja
iret
mov
dec
test
jbe
clc
out
shll
je
pop
xchg
sub
repnz
adc
jle
pop
dec
rcrl
or
inc
cmpl
add
inc
fdivl
jle
sub
xor
sbb
mov
daa
and
mov
outsl
adc
jne
xchg
mov
pop
clc
daa
stos
mov
fidivl
dec
mov
shll
scas
fiaddl
sbb
jo
int
lods
out
cmp
icebp
jne
ret
rclb
or
cmp
cmovs
and
aam
sbb
testb
and
add
lock
push
insb
ret
xor
in
inc
push
sbb
pop
sbb
mov
test
pop
icebp
push
xchg
sahf
lahf
incb
sub
and
pusha
nop
mov
mov
repnz
pop
xor
jg
ret
mov
dec
jg
outsl
xlat
inc
mov
dec
xchg
mov
jmp
push
or
flds
and
in
pop
sbb
add
aas
push
scas
cmp
mov
xor
push
popl
adc
and
sbb
dec
sahf
jnp
mov
stos
jl
or
push
jp
cmp
cmp
pushf
popa
sub
fldenv
pop
sbb
inc
insb
aas
pop
push
sub
pop
cs
loopne
mov
inc
sub
es
js
pop
in
pop
adc
fwait
les
popa
rol
cmp
jle
fcom
sub
xor
in
add
sbb
cs
out
bnd
fistl
xor
popa
call
mov
adc
les
add
and
outsb
pop
int3
push
negb
xchg
pop
les
sub
int
or
or
add
sub
imul
xchg
inc
jmp
jle
sub
sbb
xchg
loope
and
test
sar
or
shll
js
ret
out
xchg
pushf
jl
jne
js
sub
inc
mov
loope,pt
dec
rolb
jno
pop
aam
imul
ret
adc
cmp
push
sbb
icebp
jbe
into
aas
popf
fldenv
lods
mov
mov
pop
lds
jle
add
push
cmp
sarb
sahf
fbld
mov
call
aaa
pop
add
cmc
ret
dec
ret
stos
inc
js
inc
enter
mov
mov
inc
mov
or
mov
popf
mov
jp
xor
out
lcall
jns
cli
ja
or
adc
gs
fidivrs
repz
popf
repz
and
push
xchg
addr16
mov
ret
stos
daa
sbb
push
out
push
lock
scas
jae
mov
pop
xor
ret
fisubl
mull
shll
stos
cmpsb
sarb
dec
pushl
sar
fs
fbld
sbb
fdivrp
int
lock
cli
addr16
out
sbb
jmp
and
test
mov
testl
mov
sti
movsl
in
int
imul
shl
call
js
cmp
push
addr16
xchg
loope
mov
lods
imul
add
inc
mov
idiv
jbe
jns
and
inc
cmp
ds
and
shr
push
push
jge
jp
adc
and
test
and
xor
mov
loop
pop
jo
xor
push
xchg
xchg
mov
int
cld
sbb
dec
in
int
jnp
mov
test
xor
jecxz
cs
jae
inc
into
lock
and
dec
mov
and
ret
adc
dec
insl
psrlw
nop
cmp
lods
xchg
rcll
mov
pop
mov
fcmovnu
xchg
mov
mov
lods
addr16
xchg
pop
movsb
cmp
cld
pop
mov
fstpl
sbb
cmp
pop
pop
push
mov
mov
inc
test
adc
mov
outsb
stc
mov
xchg
outsl
mov
cli
inc
out
mov
sbb
jb
sub
jno
jae
icebp
jecxz
insl
sbb
lcall
inc
test
cld
int3
jmp
xchg
mov
icebp
xchg
jge
stos
call
and
push
call
pop
inc
mov
cmp
lcall
add
loop
sbb
jle
add
std
pop
or
in
out
and
sub
mov
mov
sbb
jno
xchg
gs
ror
push
sbb
mov
test
out
add
push
and
loopne
sub
xlat
ss
ljmp
inc
pushf
sbb
in
stos
test
cmp
mov
adc
mov
sub
and
sbb
inc
or
inc
sub
daa
sub
mov
in
add
add
pop
ret
and
mov
aas
mov
lahf
jnp
pop
push
adc
xor
clc
jns
aad
or
scas
sub
jbe
scas
push
push
sub
or
loopne
lds
clc
das
push
lock
jmp
jmp
mov
xor
mov
clc
jg
mov
mov
pop
adc
js
mov
imul
add
add
orb
data16
inc
lock
xchg
testl
add
jmp
fisubrl
fdivp
negl
jae
inc
jno
arpl
xchg
cmp
jle
imul
or
inc
ret
fildl
jle
iret
lock
and
dec
ret
lods
and
push
jle
sbb
dec
fsubl
les
and
fidivrs
pusha
testb
sub
push
test
jmp
lea
aam
pusha
jns
sbb
mov
sbb
pop
ds
pop
jp
fldt
fsubrs
mov
sub
out
xor
int
push
cmp
faddp
add
sub
mov
in
dec
and
lock
jae
arpl
fwait
in
pop
imul
dec
inc
pusha
aas
cmp
add
jb
push
push
push
test
lods
mov
or
pop
mov
lea
adc
xor
cwtl
jnp
mov
mov
cmc
pop
jle
pop
loope
xlat
dec
into
dec
mov
sub
xor
stos
cld
sbbb
aaa
jl
andl
inc
sub
inc
inc
inc
pop
out
mov
sbb
xchg
sti
mov
out
xchg
inc
cmc
jecxz
sti
scas
fwait
js
push
cld
out
pop
testl
push
das
inc
lods
insl
popl
push
mov
inc
mov
xor
popf
jmp
je
pop
pop
pop
or
lahf
pop
mov
xchg
lock
arpl
in
bound
cmp
cmpsl
cmp
push
or
out
sub
cmp
mov
mov
shrl
push
int
std
daa
fldl
push
add
popf
push
scas
cmp
std
dec
int3
cmp
fisttpl
jns
lds
cmp
sbb
pop
and
arpl
cli
sbb
jl
scas
mov
jmp
xor
in
and
mov
xchg
hlt
in
adc
mov
adc
jge
lret
jns
push
lock
into
pop
ja
in
sub
sahf
pop
lahf
and
fstpt
mov
mov
pop
test
push
jne
aas
and
add
aas
out
adc
jmp
lret
out
pop
push
mov
jmp
cmpsl
out
lcall
inc
mov
lds
out
shlb
cltd
popf
dec
dec
mov
inc
pushf
adc
xor
repz
dec
test
lods
adc
mov
pushf
pop
data16
jle
loope
mov
inc
or
subb
pop
and
and
movsb
test
sbb
roll
aas
pop
cmp
aaa
jno
and
pop
add
mov
jae
sahf
xor
jle
dec
mov
outsb
mov
or
sub
jmp
adcb
out
test
pushf
xor
adc
push
data16
ret
les
jle
test
add
add
fs
pop
icebp
in
std
mov
insb
jno
cmc
mov
in
dec
and
mov
mov
cli
out
add
add
int
leave
ret
lcall
ljmp
sbb
bound
xor
pop
mov
movsl
inc
shll
js
pop
in
mov
popa
lds
test
mov
or
jbe
sbb
xor
jno
out
mov
pop
cmp
loopne
mov
out
js
and
jns
mov
pusha
and
cltd
imul
cmp
ja
jae
jecxz
das
test
aad
popf
fdivs
fiadds
sub
mov
aam
sti
push
push
inc
stos
int
mov
push
or
xchg
pop
hlt
sti
sbb
jb
jae
ja
push
jnp
push
pop
bound
ds
mov
pop
andb
cmpsb
into
push
adc
adcl
sbb
and
mov
ds
out
sub
sbb
mov
xlat
fisubrs
cs
sbb
fmul
js
imul
jmp
mov
aaa
stos
jne
dec
ret
push
pop
mov
mov
add
push
fcoml
push
inc
stos
and
inc
decl
fidivrl
inc
loop
ret
mov
inc
mov
jb,pn
sbb
cmp
scas
fists
movb
sbbl
pushf
ljmp
aam
jno
iret
mov
inc
jmp
xchg
push
scas
xor
xor
lods
mov
dec
push
lahf
sub
scas
ret
mov
addb
xor
loopne
mov
aam
fwait
mov
rcl
cmp
mov
test
outsb
and
lea
add
xor
lahf
ljmp
inc
loope
push
xchg
cs
lock
aas
incl
iret
add
pop
xor
test
mov
lret
xchg
mov
addr16
ja
dec
jg
fxch
rcll
clc
push
adc
pop
iret
cmp
mov
out
pop
mov
inc
pop
insl
iret
or
and
sub
inc
stos
push
mov
ret
ss
cmpsl
jnp
mov
push
popa
push
mov
dec
iret
in
pop
sahf
divb
sub
imul
insl
out
int3
jle
push
clc
add
mov
push
ret
pop
imul
cmc
data16
sahf
out
lock
pop
sbb
inc
xor
insb
add
push
adc
xor
and
sub
mov
sti
adc
loope
xchg
add
out
ljmp
xchg
fisubs
or
mov
pushf
add
es
std
ljmp
je
pop
rcl
add
and
cmp
push
inc
push
mov
sub
sbb
add
lods
sbb
xchg
stos
and
pop
adc
push
mov
lds
xchg
jecxz
or
fmul
leave
pop
and
pop
and
cs
sahf
lahf
add
push
push
fisubs
cmp
xchg
lahf
push
sub
jo
hlt
push
push
mov
mov
das
lret
pusha
lods
sub
pop
das
xor
dec
adc
out
sahf
das
fwait
cltd
lret
iret
sbbb
lds
xchg
cmpsb
add
mov
aam
clc
fbld
iret
sbb
jp
pop
addr16
cmc
xor
mov
xlat
lock
into
ret
stc
cmc
pushf
mov
dec
mov
stos
pop
pop
and
ss
sbb
push
mov
out
mov
lcall
ffreep
xor
jl
dec
pop
pop
shl
cmp
inc
out
push
adc
mov
pop
sbb
mov
fs
repz
andb
pop
cs
sti
ja
popa
cmpsb
into
icebp
xchg
aas
imul
sbb
mov
movsb
fsubl
rcrb
mov
xor
sbb
push
xchg
add
push
daa
mov
shrl
mov
or
lods
mov
int
popf
daa
adc
leave
adc
bnd
mov
rorb
int
xchg
mov
imul
dec
ds
sbb
ds
mov
lea
fsubl
and
sbb
add
mov
dec
jae
and
js
xchg
lret
mov
jmp
shll
xchg
xchg
add
adc
adc
scas
pop
aad
lcall
rcrl
lods
push
lods
mov
sub
sub
dec
inc
and
dec
test
and
and
gs
cmpsl
push
or
aam
xor
push
inc
es
jl
mov
hlt
jae
and
mov
mov
sahf
repz
test
loopne
mov
test
stc
cmpl
xor
rol
iret
jbe
enter
mov
adc
xchg
mov
cmp
mov
mov
push
ret
mov
dec
loopne
jno
sbb
movl
push
cmpsl
dec
push
mov
ljmp
fimuls
jo
mov
pop
mov
jle
jle
jecxz
sbb
jo
mov
iret
dec
rcrb
out
sbb
mov
add
pop
fadd
lods
push
mov
fwait
loopne
dec
inc
xchg
ja
jnp
sarb
or
mov
movsb
popa
mov
inc
into
adc
pop
test
add
cwtl
and
xchg
xchg
insb
popa
ficompl
out
jb
jb
pop
sbb
jnp
cmp
xor
inc
aaa
and
push
mov
das
enter
sbb
mov
jbe
leave
push
mov
jnp
sub
ss
xchg
cmpsl
dec
sub
negb
push
in
ss
stos
or
icebp
insb
xor
cli
movsl
jo
pop
rcr
fstl
sub
incb
mov
sahf
shlb
add
leave
xor
out
sbb
jns
adc
sub
xor
dec
loope
dec
push
lds
and
sub
pop
imul
mov
jns
adc
pop
push
sbb
mov
cmp
movsb
loopne,pt
test
sbb
jg
std
jnp
imul
into
int
roll
jo
xchg
mov
adcb
pop
cld
sub
movnti
sub
jb
orps
popa
push
pop
jmp
pusha
ficoms
xchg
mov
rclb
push
cmp
ds
inc
jae
and
sub
scas
add
je
jg
iret
xor
ja
jae
push
mov
jp
mul
insb
xor
in
mov
sub
es
adc
dec
outsb
mov
loope
push
outsb
mov
lea
std
into
cmp
jo
cmc
jecxz
dec
shrl
movsl
sti
pop
mov
rcrb
lret
rclb
cmp
mov
pop
or
test
and
mov
adc
mov
fcmovb
cmpsb
pop
divl
mov
cmpsb
cwtl
inc
enter
dec
inc
imul
and
lods
mov
lea
repz
out
add
stos
jbe
xor
pushf
push
xchg
icebp
jb
push
repz
das
mov
cli
out
mov
inc
cmpsb
outsb
ds
xchg
dec
xorl
mov
lret
lds
dec
inc
inc
inc
dec
fsub
jno
mov
inc
fists
mov
cmp
bnd
pop
adcb
mov
inc
adc
dec
xchg
ja
loop
cmp
push
xchg
sub
ffree
xchg
xor
jnp
daa
mov
push
mov
lret
dec
dec
rorl
ja
pop
in
movsl
lret
or
pop
push
xchg
je
lcall
sbb
and
js
sbb
sub
test
adc
dec
ss
pop
shrb
jo
out
cmp
jge
push
fimuls
push
xchg
mov
or
pop
test
mov
je
xlat
sub
cs
xchg
gs
and
xchg
cmpsb
sbb
sbb
imul
aam
pop
push
stos
aam
clc
mov
xor
mov
cmp
mov
es
repz
sbb
fs
lock
dec
add
mov
inc
mov
push
jl
or
scas
out
andb
sub
adc
out
xor
adc
stc
mov
and
outsb
stc
xchg
push
pushf
call
xor
sub
inc
mov
sbb
mov
or
and
mov
inc
scas
sbb
bound
xchg
dec
ljmp
xor
sbb
icebp
inc
movsb
cmp
sti
push
test
daa
cmp
test
mov
mov
out
pop
pop
subl
or
add
mov
mov
cs
jns
jns
pop
ret
lea
mov
fwait
mul
xchg
les
pop
insl
add
jle
xlat
aas
mov
fdivrp
add
inc
mov
popa
fsubl
and
mov
hlt
pop
filds
jg
and
cmp
fs
hlt
jle
mov
inc
fcomps
jge
outsb
stc
adc
xlat
dec
mov
sub
movsl
js
test
jnp
inc
je
mov
mov
xchg
mov
stc
jno
dec
adc
sti
mov
sbb
in
imul
repz
addr16
sub
push
sbbb
sub
xchg
es
xchg
arpl
loop
xchg
repz
insb
insb
subb
inc
adc
xchg
xor
mov
nop
push
repz
xchg
mov
mov
ja
push
insb
xchg
int3
mov
xchg
mov
addr16
jne
pop
xchg
fwait
jb
xchg
and
xor
jns
xchg
push
sarb
or
xchg
mov
mov
loope
lods
mov
dec
mov
push
loopne
ret
cmpsl
je
nop
pop
sbb
lahf
dec
orb
and
xor
pop
pop
push
inc
rolb
fildll
test
lret
cwtl
sub
or
enter
ja
pusha
mov
lret
inc
or
xchg
push
fdiv
loop
movsl
push
adc
sub
jmp
mov
ds
lds
pop
inc
ret
int3
test
adc
sub
dec
xor
dec
fwait
stos
popa
pop
aaa
push
dec
gs
sarb
mov
pushf
out
int
sub
outsl
push
hlt
adc
xchg
out
mov
je
jnp
dec
or
hlt
outsb
fst
fs
sub
popf
pop
test
sub
push
push
test
imul
xchg
jg
sti
movsl
adc
rolb
inc
arpl
bnd
pop
outsl
inc
ret
pop
leave
cltd
jp
jbe
mov
mov
les
and
out
sbb
and
movsb
in
xchg
pop
mov
cmpsl
sub
push
mov
push
cmpsl
out
and
or
mov
aas
pop
xchg
pop
dec
xchg
xchg
repnz
pop
inc
daa
pusha
mov
je
xor
outsl
sub
jecxz
fwait
popf
and
or
or
popa
pusha
je
aaa
lea
inc
mov
dec
lods
xor
mov
dec
sbb
inc
aaa
loop
push
repnz
pop
jp
push
adc
in
and
add
shr
stos
push
jg
mov
inc
push
cmpsl
test
dec
xchg
cmp
xor
jns
push
dec
mov
rcr
add
sbb
idiv
cwtl
call
push
sbb
jno
aas
ret
lret
mov
pop
pop
shll
jmp
mov
cmpsb
inc
stos
sarl
pop
push
int3
loopne
aad
icebp
xchg
add
adc
sub
mov
int3
push
cmp
in
scas
cmp
mov
pop
inc
outsl
movsb
les
fiadds
sub
sub
int3
mov
xchg
mov
xor
pop
adc
mov
jp
pop
adc
pop
lea
ret
icebp
inc
dec
adc
into
push
xchg
cmp
in
sbb
pusha
jge
or
add
mov
sarb
xor
push
mov
and
pop
push
shll
outsb
fsts
out
jl
jecxz
pop
and
xchg
lahf
fldt
ds
lock
in
mov
or
ret
out
pop
pop
popf
cmp
mov
push
add
fdiv
cld
movsl
inc
loope
jne
imul
shlb
test
pop
sbb
mov
pop
js
pushf
aam
mov
cmp
adc
test
out
add
mov
adc
dec
xchg
ljmp
jo
sub
mov
subl
add
sub
aam
push
mov
jne
mov
es
int3
inc
pushf
cltd
mov
es
out
js
clc
int3
scas
and
push
mov
push
and
dec
repz
sbbl
mov
insl
arpl
mov
mov
or
gs
push
xor
mov
xor
stos
sahf
push
sbb
movsb
mov
out
push
jbe
out
jl
aas
mov
pushf
sbb
fists
loopne
or
add
adc
push
pop
stos
pusha
popf
xchg
shrb
mov
cld
and
sbb
popa
inc
add
xor
pop
jg
mov
pusha
movsl
sub
or
xor
dec
cmp
mov
lret
cli
xor
lahf
pop
addr16
sbb
sahf
rcl
insb
jl
je
mov
or
xor
gs
loop
add
test
lods
ss
inc
pop
fsubs
imul
addr16
and
jge
ficomps
clc
pop
or
cltd
lret
jle
sbb
push
sarb
pop
push
imul
mov
add
mov
jge
minps
addr16
inc
cltd
rcll
test
inc
jnp
out
out
in
mov
shrb
mov
enter
xchg
and
pop
push
lret
push
es
adc
out
ja
movsb
clc
fcompl
cmc
cwtl
inc
lock
push
cmpsl
push
adc
and
call
dec
jbe
mov
lods
and
ljmp
decl
dec
mov
cs
mov
imul
out
inc
mov
or
les
xchg
sbbl
push
pop
filds
rcrl
ds
loopne
orl
fildll
insl
adc
sti
test
or
enter
xchg
mov
repz
daa
pop
rorb
aam
push
jo
inc
push
mov
std
pop
aas
bnd
adc
jne
in
mov
mov
lds
bound
mov
nop
hlt
gs
loopne
xchg
sbb
imul
js
jp
ret
jo,pn
jecxz
pop
sbb
adc
inc
mov
push
push
sub
or
ljmp
mov
and
lret
dec
add
jb
cmp
shr
adc
movsl
movsb
and
inc
mov
jecxz
cld
jg
lds
jne
add
sbb
xchg
enter
popa
sub
mov
in
cmpsl
dec
cmpsb
sub
cltd
pop
lock
out
pop
mov
jecxz
cmp
mov
jecxz
sbb
insl
inc
pop
dec
push
add
and
ds
pop
adc
in
fisubrl
dec
out
pushf
add
and
into
std
push
js
and
pusha
cmpsl
repnz
insb
inc
cltd
mov
cmp
mov
addb
inc
pop
in
mov
lock
in
aad
shll
fdivl
addr16
enter
shrb
pushf
pusha
fstps
xlat
out
subl
mov
inc
rclb
add
call
into
enter
scas
pusha
lock
mov
fcmovbe
mov
lcall
mov
lods
icebp
pop
test
add
push
jl
sti
mov
mov
int3
sub
lahf
shrb
popf
test
sbb
incl
pop
push
mov
mov
xchg
inc
jb
xlat
xchg
xor
cmp
dec
or
loope
aam
scas
dec
xor
dec
popa
cmp
lock
push
xor
push
or
sub
jnp
inc
mov
stos
mov
mov
out
push
lods
rcrb
xchg
clc
inc
lods
mov
adc
mov
fcoml
fwait
push
sbb
or
mov
rorl
aam
sar
insb
mov
out
movsl
inc
bound
and
lcall
into
and
cmpsl
pusha
es
or
pop
jo
and
mov
or
inc
sub
inc
stc
jg
into
add
cmp
test
mov
xchg
clc
or
call
mov
dec
xchg
rcl
fcoms
lock
mov
xchg
cmp
lcallw
push
leave
fmul
mov
push
adc
shrb
adc
leave
jo
ds
jne
stc
ret
sbb
lea
dec
jecxz
lods
pop
incb
repz
xchg
or
pop
popa
pop
mov
inc
dec
mov
fcmovb
push
add
sbb
imul
or
xor
mov
jmp
dec
mov
stos
sbb
repz
icebp
or
jne
mov
mov
sbb
push
popf
pop
daa
sub
cmc
mov
or
cmpsl
push
in
aas
mov
push
or
daa
int3
ds
push
sub
sub
jne
test
or
ss
inc
dec
adc
jecxz
push
ja
test
imul
and
pop
jae
sub
and
pusha
in
dec
outsl
pop
shl
popf
ret
push
and
sbb
popa
mov
pop
popl
in
xor
adc
and
in
jne
out
cmp
sub
cmp
leave
into
lods
jno
ret
shl
sbb
mov
jmp
movsb
rcr
int3
ljmp
imul
mov
fildll
jge
lea
hlt
fidivs
and
mov
in
pop
xor
pop
loopw
shlb
jmp
pusha
ja
cmpsl
jmp
jmp
testl
dec
sub
pop
sbb
and
xor
data16
push
jnp
and
shl
xchg
pop
sti
out
and
js
mov
psrlw
pop
push
outsl
test
jbe
pop
in
mov
dec
pop
jl
int3
adc
pop
fimull
jo
shl
and
mov
jae
xor
lock
daa
adc
mov
sbb
orl
cmp
inc
dec
loop
nop
inc
lret
lods
fldt
adc
nop
xor
cs
pop
js
sarl
sbb
loope
divl
arpl
mov
pop
push
jle
out
stos
ds
and
inc
dec
mov
pushf
icebp
psubusw
jae
pop
mov
js
imul
inc
vmwrite
scas
jns
pusha
or
jb
sbb
repz
or
imul
jmp
out
jp
sub
jno
sahf
fistl
xchg
inc
mov
sbb
arpl
popa
loopne
nop
push
jmp
inc
in
mov
dec
mov
adc
aaa
in
xchg
pop
mov
jmp
cmp
loopne
push
test
movsbl
mov
sub
fstps
scas
mov
or
les
add
fadd
int3
movsb
cmp
xor
test
xchg
jno
scas
stos
inc
lcall
push
das
sbb
enter
dec
aas
add
push
mov
mov
sahf
insb
pop
push
mov
push
xor
and
jl
loope
iret
xchg
inc
pop
cmp
mov
lds
movsl
jge
cmp
jle
inc
dec
push
adc
xchg
push
into
mov
add
repz
mov
mov
sti
mov
cli
and
incl
inc
xchg
imul
movsb
mov
mov
lahf
push
and
push
xchg
fistpll
pop
sub
xchg
mov
sti
ret
mov
aaa
cmpsl
push
subl
popf
lret
in
mov
lods
push
cmpsl
dec
les
lods
sub
inc
movntps
jns
in
aas
cmp
shl
fsubs
inc
icebp
push
out
adc
out
pushf
dec
xor
push
cmpsb
jecxz
call
test
push
xchg
push
call
mov
jge
cmp
enter
pop
lret
mov
test
push
pop
out
sbb
movsl
sub
loop
mov
jnp
das
sbb
jecxz
sbb
fimuls
mov
ds
popa
jne
sub
dec
fsts
lcall
pop
fwait
xor
xchg
push
xlat
jb
pushf
fisubrl
xor
add
outsb
clc
inc
loope
cmpsl
jo
aaa
inc
ret
xchg
cmp
into
xchg
jge
xchg
pop
push
xorb
enter
mov
pop
stos
enter
rcll
int
arpl
and
scas
mov
imul
and
incb
shrl
cltd
or
inc
dec
sub
dec
lods
xlat
fcmovnbe
add
xor
popl
es
xchg
ja
in
add
lods
push
in
jp
cmp
mov
in
push
adc
sbb
and
nop
cmpsb
mov
in
jns
cmp
out
and
sbb
pinsrw
adc
and
jecxz
add
ljmp
inc
sbb
sub
fisubl
ret
cmc
into
testl
das
cld
cli
inc
lods
mov
movsb
sti
shrl
in
iret
iret
js
cld
mov
into
sbb
xor
pop
mov
repz
jbe
mov
or
in
xor
sbb
add
pop
popa
out
daa
orl
and
and
push
and
testl
pushf
cli
aad
or
add
std
mov
adc
jns
das
xlat
in
adcb
xor
ret
push
test
scas
jecxz
dec
or
lods
xor
pop
rcrl
stos
fldcw
loop
mov
aaa
inc
test
cmp
xchg
dec
rol
adc
arpl
xchg
je
int3
xor
jmp
mov
aad
stos
jnp
cli
mov
pop
sub
and
lahf
push
mov
nop
lret
mov
mov
mov
outsl
in
pusha
cmp
js
jmp
lret
push
mov
sti
mov
mov
inc
stos
mov
mov
sbb
cld
cmp
adc
out
pushl
jo
cmpsl
cmpsb
lods
out
mov
call
ja
cmp
pusha
sub
and
stos
mov
push
fmull
ret
xchg
call
fildl
push
sub
xor
imul
orl
cmp
cmp
push
cltd
loope
adc
je
dec
fcmovu
jne
neg
stc
ret
sbb
lret
and
call
cmp
add
pushf
cld
inc
dec
pop
aaa
addr16
pop
or
gs
cmpsl
xor
lods
je
mov
pushf
bound
mov
lods
clc
xor
xchg
push
orl
lea
push
mov
mov
sbbb
les
fnstenv
stc
or
daa
jne
pop
lods
in
aas
pop
cmpb
and
or
outsb
pop
dec
xchg
jb
fidivs
add
sarb
or
mov
push
adc
xchg
mov
orb
dec
mov
lret
test
mov
pop
adc
ds
add
clc
fwait
adc
push
inc
fidivrs
adc
mov
inc
aas
inc
mov
sbbb
jnp
jns
mov
cmc
ljmp
dec
in
mov
jmp
inc
stos
lea
cmp
dec
cmp
xor
adc
jno
sbb
pop
mov
out
test
adc
out
int
subb
jno
lcall
rcrl
dec
sbb
rorb
ret
xchg
add
fwait
jo
sbb
roll
xor
mov
sub
aad
pushf
out
and
neg
xchg
push
mov
dec
es
pop
addb
add
fdivs
pop
test
inc
mov
xlat
adc
sti
cli
add
adc
scas
or
cmc
pusha
test
xchg
inc
sbb
add
add
dec
push
stos
push
xchg
fsubrp
jg
fmull
mov
mov
lods
jne
out
stos
mov
ds
push
lock
dec
insb
adc
push
imul
inc
aam
jp
pop
adc
dec
fadds
xchg
mov
in
aaa
lds
in
dec
cmp
fs
pop
cmp
xor
cwtl
lods
out
sub
iret
mov
mov
neg
aas
loop
cltd
sub
jbe
or
in
dec
js
cmp
mov
mov
xchg
jo
add
and
fwait
popf
jb
mov
push
insb
add
pop
mov
cmp
arpl
int
xchg
sub
repnz
fidivl
lds
or
xor
sbb
popa
pop
xchg
int3
in
repz
or
mov
mov
mov
aas
test
or
cmp
mov
inc
lahf
inc
ret
pop
test
fistl
sub
movsb
mov
es
xor
mov
popa
add
aaa
test
inc
cmpsl
loope
or
sbb
push
int3
rclb
call
in
cmp
sti
in
and
adc
fadd
jmp
loope
aam
sbb
push
repnz
into
ljmp
sub
cmpsl
pop
jmp
pop
cmp
xor
bound
stc
mov
iret
fnstsw
adc
mov
filds
fldcw
int
out
daa
notl
cmpsl
inc
inc
sub
nop
shl
mov
adc
cltd
les
mov
fwait
dec
fs
inc
aad
sbb
push
cmp
jmp
cmp
xchg
lret
iret
mov
lock
mov
sub
push
repz
shll
inc
mov
and
mov
push
mov
cmpsl
push
insb
xchg
popa
push
and
jno
popl
sbb
hlt
fs
icebp
add
or
mov
inc
adc
jbe
ffree
call
mov
jo
cltd
xorb
xchg
test
and
cli
lret
cmp
push
or
mov
jb
dec
inc
les
push
mov
mov
out
inc
and
sbb
push
rcrl
das
xchg
sarl
lds
push
push
push
cmpsb
aam
shlb
sub
mov
movb
mov
xchg
add
jne
cmp
jno
fcoms
sbb
adc
inc
sub
adc
adc
adc
insb
pop
push
sub
in
shl
jl
xchg
insl
push
push
push
push
scas
gs
cli
shll
lea
dec
pushl
lock
cmp
or
sbb
dec
xchg
mov
or
out
jl
imul
into
inc
mov
lret
pop
and
dec
imul
dec
imul
sub
pop
dec
insb
push
pop
xor
inc
orb
out
and
ret
fsubs
dec
xchg
xchg
cmp
and
pop
cld
mov
arpl
dec
scas
and
sub
rorl
roll
lods
dec
mov
dec
xchg
loope
dec
and
jo
loop
jne
mov
jle
pop
mov
imul
sub
notb
sub
int
mov
cwtl
or
adc
shlb
or
cli
cmp
mov
push
pop
and
adc
pusha
mov
and
clc
cmc
ja
sub
rorl
rcl
nop
or
jns
jo
adc
hlt
imul
cltd
imul
push
shlb
sbb
outsb
leave
mov
jnp
out
stos
popa
gs
fcomi
jg
in
cli
rorb
notl
mov
and
mov
daa
lret
stos
movsl
dec
mov
int
xor
adc
insb
lcall
mov
or
inc
stos
cmp
out
dec
inc
mov
mov
clc
int
mov
ret
ret
mov
mov
pop
pushf
pop
test
rcrb
add
inc
pop
nop
inc
iretw
jmp
push
inc
mov
loop
rcl
xchg
and
mov
arpl
mov
aad
pop
dec
sbb
sarb
jp
cmpsl
xor
lret
pusha
lret
in
jnp
xchg
adc
repz
mov
cmp
adc
xor
fdivl
mov
or
aas
test
popa
jb
out
fbld
mov
dec
jl
sbb
mov
repz
sbb
sbb
xchg
icebp
pushf
mov
mov
in
imul
aad
lock
outsb
push
pop
mov
test
addr16
mov
ret
xchg
xchg
push
jge
or
int
mov
pop
scas
sub
outsb
orb
mov
fnstsw
dec
popa
xor
xchg
loope
push
adc
daa
jnp
inc
outsl
xchg
in
jecxz
and
push
push
xor
lcall
ret
pop
insl
mov
repnz
xchg
inc
mov
or
mov
xor
orl
ljmp
sub
mov
and
ret
imul
cmp
cli
pop
int
roll
inc
test
sub
test
rol
shlb
mov
stos
push
mov
ret
dec
in
ja
lret
int
inc
rclb
in
daa
cli
rcll
inc
and
pop
pop
aam
dec
xchg
scas
test
jns
lret
das
stc
xchg
adc
mov
mov
mov
add
sub
int3
xor
test
leave
mov
into
mov
mov
add
out
dec
cmpsb
iret
ja
mov
xor
in
lods
pop
repnz
fists
lahf
jmp
js
and
fmull
icebp
mov
insb
int3
addr16
lcall
mov
sub
sub
sub
jl
outsl
aam
adc
add
or
and
mov
stos
nop
xchg
lea
jb
aad
dec
loopne
cmp
sbb
mov
cli
imul
jnp
gs
rcll
sbb
mov
fmuls
rorl
cld
xor
rcrb
push
into
icebp
sarb
push
into
or
xchg
das
add
popa
pop
push
pop
sub
sbb
mov
cmp
fidivs
sarl
fcmovnu
sub
inc
shll
pop
cmpsb
sbb
dec
call
aaa
rorb
adc
test
cltd
int3
mov
dec
gs
push
into
cmpsl
xchg
xor
rclb
sahf
mov
scas
sub
into
pop
aas
shrl
push
jecxz
test
data16
repz
jl
pushf
fldenv
dec
jecxz
lds
push
or
mov
gs
mov
mov
aaa
pop
imul
ja
mov
jl
mov
fidivrs
inc
jne
xor
ret
cmp
popa
sub
jbe
in
pop
cmp
dec
add
adc
xchg
stos
sbb
push
lcall
aad
pop
fdivl
sub
push
and
adc
dec
iret
lock
push
loope
movl
scas
stos
outsl
dec
sbb
in
sbb
pop
jmp
nop
movsl
sahf
mov
sbb
xlat
nop
clc
push
dec
push
cld
and
inc
pop
in
dec
daa
adcl
jnp
adc
jns
xor
push
push
cmp
or
jmp
loopne
rcrl
out
xor
iret
lcall
fwait
mov
jmp
pop
icebp
inc
adc
xchg
jno
cmp
mov
test
push
ss
pop
and
lret
cwtl
dec
cmp
in
mov
pop
jle
test
addr16
outsb
insl
mov
jae
dec
mov
bound
xor
subb
jmp
in
ficoml
in
jmp
pusha
aas
sbb
movsb
adc
push
jle
sub
outsb
mov
adcb
sub
lret
adc
repz
repz
loop
push
fdivrl
push
mov
dec
dec
pop
stc
xor
inc
inc
stos
jmp
xor
mov
stos
push
xchg
xor
sub
ret
xor
mov
test
jo
aad
add
fidivrl
xlat
lea
mov
loop
imul
int3
in
cmp
xor
jne
cltd
pop
into
ret
inc
jne
dec
adc
xlat
cmp
js
scas
lret
xor
mov
popa
and
xchg
scas
into
sar
stos
cli
lock
add
xor
lods
xchg
pop
subb
mov
pushf
in
cwtl
test
cmpb
arpl
fisttpl
sub
jb
dec
gs
pop
int3
testb
rcll
lret
cmp
fs
xchg
mov
adc
and
shl
or
push
adc
stos
mov
les
pop
adc
rcrb
pop
sbb
test
orl
mov
lret
xchg
lods
jge
arpl
aad
push
xchg
cltd
in
scas
sub
rcl
lods
popa
or
push
push
mov
inc
mov
mov
jns
scas
push
out
or
mov
push
cli
cmp
lahf
loop
gs
adc
lret
xor
jns
das
lahf
dec
and
out
push
ljmp
push
lock
mov
cmp
mov
adc
sub
cld
dec
mov
xchg
jbe
pop
lea
adc
push
sbb
pushf
frstor
sub
mov
test
idivl
hlt
xchg
or
sub
popa
pop
lcall
mov
int
push
lea
movsb
xchg
pop
pop
clc
lret
scas
ljmp
adc
jne
jo
xor
data16
rorb
les
sub
jbe
jmp
leave
ret
fdivrs
push
adc
cmpsb
mov
push
adc
aaa
mov
or
jnp
mov
testl
adc
xor
arpl
fcompl
push
popf
in
push
mov
push
test
aaa
jo
nop
mov
lock
addb
cmp
xor
stos
sbb
xlat
lds
pop
pop
fwait
lds
aaa
hlt
popf
jb
bound
test
insb
test
jmp
shl
sbb
xchg
xor
push
xor
test
jmp
xor
lock
jns
or
inc
jmp
push
sbb
scas
test
imul
mov
incb
sub
jg
xchg
inc
aam
int3
pop
cwtl
mov
sub
xchg
lock
lods
arpl
sub
sub
sub
stc
or
xor
push
in
jmp
xorl
loop
negb
push
mov
int
insl
xor
mov
fs
inc
pop
cmpsl
and
push
sub
and
into
xchg
imul
lods
or
mov
cmpb
rep
les
fsub
cmp
push
pop
das
popf
and
iret
ret
sar
pop
scas
fiadds
shrl
lods
xor
inc
pop
inc
jmp
cmp
dec
jle
loope
sarl
lcall
icebp
sub
std
jbe
jge
xchg
mov
pop
daa
int3
jmp
xor
mull
push
jge
loop
mov
jo
repnz
mov
lods
popf
fwait
gs
xchg
std
icebp
cmp
lds
pop
mov
xacquire
jge
rclb
inc
stos
inc
scas
sub
loope
push
aam
in
dec
out
and
imul
jnp
adc
jae
pusha
inc
into
pusha
dec
or
jae
ror
call
adc
inc
lods
inc
push
push
pop
scas
dec
fwait
mov
fistpl
adc
xor
inc
std
shll
adcb
lahf
adc
push
sti
repnz
and
dec
mov
mov
push
and
ja
test
in
xor
test
insl
or
lds
xchg
repnz
fcomi
add
int
sub
sub
js
insb
sti
das
and
xor
clc
and
cmp
adc
xchg
leave
cmpb
adc
imul
jne
xor
jge
jg
scas
hlt
in
nop
fsubs
cmpsb
xchg
out
mov
sar
scas
imul
xchg
ret
inc
jge
dec
mov
jbe
sbb
in
pusha
mov
loope
xchg
enter
push
sbbb
mov
mov
mov
adc
jg
add
inc
stos
xor
lret
jge
lcall
stc
and
xchg
or
mov
adc
xor
das
push
xchg
sub
mov
push
push
or
pop
push
clc
stos
xchg
lock
sarl
ljmp
dec
nop
rolb
push
dec
jbe,pn
jmp
sub
xchg
cmp
iret
mov
push
popa
cmp
popa
cltd
cmpsl
ss
and
scas
push
fwait
sbb
and
std
inc
and
outsb
in
push
xlat
cli
adc
sub
sbb
push
das
xchg
fldl
dec
sub
std
push
out
test
arpl
jg
xchg
push
sub
dec
sbb
pop
lret
and
or
int
loop
inc
lret
ds
xor
and
mov
mov
into
pop
notl
add
inc
imul
imul
mov
fstl
mov
out
inc
and
sub
decl
imul
lods
sbb
xchg
sub
cmpsl
rcrb
pop
js
jp
ss
pop
mov
lret
mov
sti
jno
inc
imul
test
aas
sub
push
or
mov
mov
add
pop
mov
das
and
sub
les
popf
in
aam
mov
mov
jmp
cmp
xchg
scas
mov
mov
aaa
scas
popa
mov
jmp
lret
add
xchg
movups
pusha
xchg
int
jo
mov
test
inc
pop
or
push
cmp
loop
mov
sub
mov
enter
adc
pop
add
mov
sar
pop
mov
into
pop
mov
sub
add
mov
mov
popl
adc
adc
bound
cmp
mov
pop
xchg
ret
imul
adc
stos
inc
sub
dec
cmp
mov
pop
jg
pop
xchg
adc
mov
and
in
lock
faddl
sub
sub
mov
dec
pop
iret
jnp
into
jle
sub
mov
cmp
push
testl
mov
aaa
cld
add
push
xchg
jmp
gs
dec
lds
leave
xor
jg
mov
rcll
int
xchg
fsts
adc
push
mov
adc
inc
repz
xchg
in
repnz
adc
ja
push
push
add
and
add
daa
test
sti
sbb
out
mov
out
outsb
adc
jb
fisubs
call
repz
mov
cmpsl
lock
js
xchg
aaa
jmp
dec
add
hlt
nop
sub
push
repnz
and
sbb
mov
in
fldz
jo
push
inc
adc
mov
cmp
pop
pop
pushf
mov
ret
lret
lds
aaa
sbb
adc
mov
mov
and
xchg
das
fisttpll
pop
mov
fdivl
xchg
arpl
fldl
or
nop
lods
lods
cmp
sub
jno
bound
add
and
in
sbb
inc
fists
lods
inc
lahf
or
adc
cmp
push
inc
mov
adc
mov
push
mov
out
hlt
xorb
mov
jo
int3
xchg
sbb
dec
int
jne
cmp
and
push
lods
es
mov
xchg
call
ds
popl
inc
adc
nop
dec
add
mov
pop
sub
dec
pop
andl
ret
es
pop
sahf
ret
inc
iretw
sbb
clc
ljmp
iret
loop
inc
jns
aaa
mov
cmovle
scas
mov
aam
sbbl
ljmp
jns
mov
xchg
fstpt
adc
push
xor
mov
mov
pop
jmp
jmp
das
into
sbb
subb
add
push
mov
jae
xlat
cmpsb
push
add
pop
push
sub
cmc
push
cmp
sbb
dec
adc
xchg
hlt
mov
xchg
mov
dec
subb
shrl
mov
push
adc
mov
dec
sub
or
hlt
rorl
adc
add
fstpl
outsb
faddl
push
jne
jbe
sub
jbe
fs
jg
and
jp
es
mov
and
and
dec
mov
pop
sub
jb
loopne
push
lret
cmpsl
xchg
add
in
inc
jo
jle
mov
loope
lea
jle
pop
and
int3
ds
cwtl
cld
xor
out
sub
sub
jle
sub
in
inc
adc
and
into
jge
call
jg
movb
dec
xor
jne,pt
hlt
sbb
aad
scas
inc
test
inc
lret
adc
push
das
mov
mov
push
ror
cmp
negb
and
adc
jecxz
fwait
sub
xchg
fldenv
movsb
icebp
call
mov
pop
inc
jmp
jnp
mov
pushf
popf
sbb
dec
jge
jle
rclb
xor
loop
test
leave
push
xchg
or
es
mov
jge
aad
add
or
cmp
xchg
sub
jmp
loope
pop
ljmp
cmp
cltd
flds
inc
cmp
pop
js
mov
das
mov
or
repnz
dec
mov
stc
cmp
data16
icebp
dec
orps
xchg
sahf
sbb
stos
call
dec
cmp
int
daa
rolb
lds
xchg
pop
loope
leave
xchg
dec
loop
sarb
xor
pop
mov
jbe
xchg
jne
xchg
in
arpl
cmpsb
inc
negb
jle
inc
and
xor
cmp
stos
jge
pop
mov
xchg
jae
and
pop
in
cltd
clc
push
xchg
add
clc
popa
jecxz
in
into
cmp
sbb
testl
int
fimuls
sub
inc
mov
outsl
jo
inc
ljmp
and
sbb
std
jle
inc
aam
jl
cld
xlat
cmp
cwtl
mov
fimuls
mov
mov
sub
push
adc
jmp
or
inc
aad
ljmp
int
ja
ficomps
popa
or
mov
mov
xchg
data16
mov
fimull
pop
sbb
jns
mov
push
ret
arpl
sub
js
adc
or
jp
rcll
js
addr16
imul
and
arpl
push
test
repnz
jle
cwtl
cmp
outsl
test
in
dec
movsl
cmp
jle
leave
cli
andb
adc
cmp
test
lock
cmp
shlb
push
mov
and
push
xor
jl
inc
xor
mov
pop
orb
lock
xchg
push
cld
sbb
addb
inc
call
jle
push
enter
and
fs
lret
pop
and
fldt
cmp
mov
in
xor
dec
insl
fbld
cmc
mov
mov
xor
mov
data16
mov
popf
xchg
sbb
xor
cmp
adc
repz
cmp
fsubrs
mov
xor
push
sbb
xchg
ljmp
ljmp
jb
add
in
sbb
mov
add
jmp
out
addb
in
and
mov
lds
loope
jns
popf
repnz
mov
mov
fisttpll
inc
pushf
jecxz
jg
mov
fistl
jns
push
pop
fldcw
xor
idivb
add
mov
push
xchg
insb
xchg
jbe
push
js
pop
cmpsb
cmp
repz
mov
insb
mov
insb
gs
push
xchg
fisubl
lahf
cmpsl
in
cmc
and
mov
xor
fwait
jle
inc
std
hlt
xor
in
je
xchg
pop
adc
xchg
xchg
and
fiaddl
int3
mov
xchg
push
shl
dec
test
xchg
add
imul
mov
xor
mov
aam
movsl
adc
inc
int
daa
ret
testl
jp
mov
pushf
lcall
adc
add
push
mov
imul
fwait
ret
stos
mulb
mov
nop
sbb
cld
add
dec
mov
shlb
mov
loope
icebp
aaa
js
loop
pop
in
out
insl
xchg
or
mov
sti
cmpsb
lret
rcll
sarl
bound
daa
pop
cmpsb
or
mov
test
clc
in
into
jnp
iret
pop
fwait
dec
insl
mov
gs
dec
jle
loop
sub
adc
cli
add
mov
and
add
test
sbb
push
mov
fcoms
jge
popa
add
jns
mov
dec
sbb
dec
insl
sbb
popf
inc
call
test
xchg
or
nop
jp
cli
ljmp
dec
insl
mov
xor
sbb
or
dec
jns
test
int3
shrb
in
out
test
adc
movl
jecxz
inc
push
mov
or
pusha
shll
mov
mov
test
xchg
sti
push
mov
xchg
sub
lods
or
push
outsb
mov
sahf
sarb
in
jl,pt
aam
lret
lea
cmpsl
sahf
push
push
adc
mov
jp
lds
rclb
dec
ficoms
and
sar
pop
popa
call
in
lock
and
test
sbb
adcl
jns
or
roll
sub
mov
or
pop
std
sub
lock
aas
popf
loop
leave
jo
adc
mov
and
ljmp
enter
icebp
sti
and
mov
ret
adcb
clc
std
movsb
js
leave
inc
jecxz
fmull
mov
loop
rorb
pop
es
inc
dec
je
sbb
push
add
hlt
movsb
mov
call
push
test
jg
fidivrl
adc
cmp
inc
adc
lret
xchg
sub
aam
clc
sbb
aas
fcomi
jmp
loope
out
and
js
rcrl
xchg
mov
push
mov
test
inc
add
mov
xor
out
push
test
lahf
js
clc
mov
add
es
add
loopne
loopne
in
jp
add
and
pop
or
jne
cmp
dec
test
loope
lret
enter
adc
pminsw
and
mov
mov
push
popa
rol
loopne
scas
test
sub
sbbb
push
iret
mov
cmp
mov
insl
in
add
enter
out
add
sub
xchg
xchg
loop
inc
xor
in
lcall
lret
cli
int
jbe
shr
sub
push
clc
dec
pusha
sub
mov
call
mov
popa
sub
jbe
add
sbb
aaa
int3
xchg
mov
call
mov
cmp
mov
adc
sti
push
popf
inc
push
inc
pop
push
jmp
mov
scas
mov
lret
jbe
int
mov
dec
andb
inc
ret
cmc
js
and
in
sbb
outsb
add
mov
mov
mov
bound
jge
cli
in
mov
and
inc
jns
jno
insl
fcoml
fcoms
hlt
adc
inc
push
popa
ds
imul
pusha
add
xlat
dec
mov
shll
andb
cwtl
cwtl
pusha
js
enter
mov
adcb
testb
aad
jno
jge
sahf
xor
jns
rcrl
popf
test
mov
ja
mov
mov
sti
movsb
jbe
pop
push
aas
push
push
ret
out
cmp
pop
push
fistl
flds
dec
cmp
outsb
ret
data16
xchg
mov
adc
sub
hlt
fidivs
outsl
pushf
loopne
decb
jo
inc
lea
pushl
push
cmp
or
lcall
popa
mov
and
pop
popf
mov
add
in
mov
or
cmp
jge
push
and
aam
dec
arpl
mov
cmp
in
jns
sbb
and
inc
sub
cmp
les
jl
dec
movsb
xorb
cmp
leave
mov
jo
or
xchg
push
sbb
in
mov
xor
jmp
inc
sub
inc
into
lds
push
cwtl
imul
push
cmp
jb
iret
pop
cmc
or
add
das
and
cmp
pop
insb
int3
push
push
fistps
push
push
inc
scas
daa
lods
mov
mov
mov
popl
imul
xor
lock
mov
add
int3
or
cmc
jne
or
xchg
shrl
shlb
or
arpl
inc
les
in
push
dec
sar
outsl
gs
imull
push
cltd
sub
xchg
lahf
pusha
push
imul
mov
or
cmpb
dec
xchg
pusha
nop
jnp
or
ficoms
lret
xor
push
sbb
cmc
test
sbb
push
xchg
cmp
inc
pop
fisttpll
iret
mov
and
out
in
sub
dec
aam
pop
mov
jns
adc
xlat
push
jmp
cwtl
mov
lret
adc
bound
mov
xchg
pop
shld
aas
or
jl
sbbl
lahf
jns
call
sub
or
cmpl
cwtl
push
int
cmp
sub
xor
inc
dec
std
addb
insl
lods
out
mov
xor
mov
add
ds
scas
mov
xchg
xchg
in
mov
mov
jge
add
xorl
cmpsl
mov
in
imul
sub
pop
sbb
pop
mov
enter
mov
bound
dec
or
mov
mov
inc
mov
adc
push
inc
xchg
loope
mov
outsb
movsb
or
mov
dec
das
fimull
js
or
sbb
and
xchg
aas
pusha
jne
jnp
sub
arpl
adc
xor
repz
cmp
mov
sbb
cmp
pandn
js
sbb
add
stos
jo
inc
call
mov
gs
sti
and
jle
inc
push
xor
sbb
rsm
dec
or
pop
xchg
and
mov
movsl
out
mov
mov
out
sub
push
and
xchg
fbld
adc
insl
inc
push
faddl
mov
xorl
xor
repz
mov
xor
pop
ds
out
pop
jp
adc
fnsave
inc
cmp
jo
mov
fnstenv
add
outsb
adc
adc
xor
cmp
sbb
adc
push
aaa
mov
jle
les
addb
mov
dec
cmp
push
sahf
dec
cltd
loope
inc
add
adc
cmp
or
hlt
incb
enter
jae
xor
pminub
push
push
arpl
ljmp
push
and
or
mov
gs
jno
int
adc
insb
lahf
mov
push
sbb
push
stos
cmp
mov
fs
popa
clc
push
ss
sarb
add
imul
sbb
push
xchg
stc
dec
nop
push
fmull
negl
push
fsubrs
fs
dec
movsl
in
sbb
ja
aas
mov
cmp
push
pop
ja
xor
push
aaa
cmp
loope
lret
mov
pop
mov
mov
cmp
sub
jmp
hlt
dec
dec
mov
mov
in
inc
xor
mov
lret
add
sbb
lcall
pop
add
imul
int
ljmp
mov
rorb
fcmovnbe
xor
stos
lock
push
pop
cld
cmpl
mov
out
mov
imul
daa
pop
xchg
pop
test
mov
pop
adc
gs
adc
mov
mov
test
hlt
es
push
add
adc
sbb
push
les
clc
insb
pop
or
mov
call
fnstsw
mov
push
sub
popf
mov
dec
cli
jg
xchg
outsb
shll
cs
es
xorb
ficoml
and
jae
push
adc
cmp
ja
lods
out
jns
cmp
cmp
jns
imul
inc
lock
data16
imul
pop
pop
push
adc
push
xchg
outsl
jne
sbb
xchg
jns
shlb
ds
into
inc
loopne
test
icebp
in
aam
rcr
xchg
xchg
es
lret
mov
and
jno
inc
rcl
add
jns
aam
push
mov
test
sub
sahf
sub
jae
cmc
mov
in
adc
sbb
addr16
jge
xchg
aaa
scas
add
loop
shlb
and
aas
cmp
shll
push
jmp
push
mov
ss
add
mov
les
sahf
mov
inc
rorl
mov
scas
addl
stos
std
sub
cmpsb
fdivrl
clc
push
sub
cwtl
push
add
dec
mov
hlt
push
pop
or
pop
adc
inc
ds
jecxz
or
jne
mov
repnz
sbb
cmp
and
push
and
stc
ds
scas
inc
mov
cmp
lret
push
es
jge
xchg
dec
sub
shll
mov
movsb
push
add
mov
les
mov
ret
jp
fs
imul
jns
jle
cmp
imul
adc
sti
aas
out
jle
lcall
ret
loope
mov
and
xchg
inc
or
sub
lods
stc
pop
test
pop
xor
mov
xchg
or
adc
vpaddsb
js
rclb
dec
outsl
xor
pop
jl
call
stos
lds
jns
xor
sub
push
mov
sbb
outsb
mov
mov
cli
or
js
inc
aad
xchg
push
je
cmp
sub
outsb
lahf
das
cmpsl
mov
sub
adc
xchg
out
jmp
mov
testb
xchg
xchg
iret
movsl
shrb
inc
and
into
insb
je
cmp
stc
sarb
aad
lea
jle
pop
test
xchg
jns
ja
cmpsl
mov
imul
jle
aas
sbb
repz
xchg
dec
les
and
fcmovne
inc
cmpsb
mov
jecxz
mov
lods
cmp
and
cmp
jbe
pop
pop
jp
lret
loop
pop
or
jb
aaa
jecxz
cmp
or
es
and
ret
je
push
das
sub
fs
addr16
fwait
mov
nop
movsb
mov
popf
sub
add
lock
adc
add
fcompl
mov
jne
lods
xchg
movsb
testl
xchg
insb
incl
test
mov
lea
test
dec
fcmovb
push
loop
mov
lret
filds
loope
jle
test
dec
scas
adc
push
xchg
jne
out
mov
inc
xor
mov
lea
mov
push
dec
mov
fwait
mov
pop
xor
popa
cld
mov
aas
in
mov
cltd
mov
jne
jnp,pt
dec
fildll
call
int
adc
inc
je
andl
arpl
inc
xlat
mov
in
imul
xchg
jno
add
pop
cmp
push
fwait
mov
incb
stos
int
push
push
js
and
pushf
inc
adc
lahf
loope
push
pop
in
mov
sub
lea
jle
inc
repz
scas
arpl
xacquire
inc
mov
outsb
adc
or
or
ss
mov
mov
sti
ljmp
pop
add
jo
xchg
mov
push
iret
cli
mov
pop
or
stos
arpl
jl
cmp
cmpsl
negb
out
mov
lods
xor
out
jl
mov
cmp
cmp
and
sub
mov
std
shlb
push
int3
mov
jmp
sahf
pop
dec
mov
ret
stc
pop
les
xchg
mov
xchg
mov
je
ret
imul
int3
mov
les
call
lock
cs
jle
nop
cmp
test
adc
in
fidivs
mov
inc
inc
dec
cmpsl
aaa
lods
or
lods
loope
mov
fcmove
stc
outsl
iret
orl
add
cmc
js
repz
repnz
fcoms
push
out
jle
lea
pop
mov
xorb
xorb
inc
sub
jae
imul
fdivs
nop
out
ret
dec
and
je
ljmp
outsb
pop
repz
stos
xor
xchg
dec
decl
stos
lods
add
jbe
add
xchg
insb
movsb
sub
cmp
sbb
and
xorb
bound
in
rcrl
sahf
dec
mov
dec
sbb
out
in
dec
inc
mov
hlt
dec
lcall
cmpsl
ror
popf
mov
xchg
shlb
nop
cmpsb
cwtl
and
popf
cmp
mov
insl
inc
stc
pop
mov
add
sbb
inc
aad
loopne
out
fnstsw
lds
pop
repz
mov
stos
jecxz
xor
jmp
fmull
jne
test
sbb
xchg
sbb
pop
or
fadd
fwait
cmc
and
leave
into
in
out
jl
dec
lea
mov
add
pop
jae
mov
dec
std
mov
sub
cli
ror
cmp
or
dec
or
fnsave
int
jbe
mov
or
scas
mov
mov
scas
je
stos
test
and
fwait
mov
stc
inc
arpl
mov
out
int3
jl
in
pop
call
cmp
cmpsb
adc
lds
bound
xchg
cmpsl
fldenv
jle
or
ficompl
mov
and
cmpsb
daa
lea
pop
mov
mov
js
push
xchg
mov
mov
stos
nop
test
aas
push
loopne
ljmp
aam
movsl
stos
hlt
push
mov
jle
fs
in
mov
dec
pop
sub
pusha
push
push
outsb
sbb
addl
lcall
mov
jmp
mov
add
sub
sub
adc
jbe
cmp
dec
and
scas
and
jle
scas
cmp
push
insb
into
es
xchg
fld
push
sub
adc
or
jbe
jle
or
cli
push
mov
cwtl
and
jmp
test
cmpsl
push
or
sub
lret
aam
ret
aad
push
jno
add
cmp
imul
jecxz
stos
fistl
fnstcw
ret
xor
pop
xchg
out
push
test
jp
gs
or
sbb
push
push
lock
mov
sub
inc
push
subl
iret
mov
lods
ljmp
inc
push
jb
ja
push
test
dec
push
in
pop
inc
pop
std
pusha
test
dec
stos
lcall
cli
jl
pop
shlb
xor
int3
dec
pop
ret
inc
add
cmp
pop
fcomps
or
icebp
mov
scas
rcl
xchg
cmp
es
insl
inc
mov
ror
cmc
shll
jns
push
shr
movsl
in
movsb
jnp
mov
aas
dec
popa
inc
js
jno
fwait
repz
mov
sub
dec
mov
jns
cmp
lock
sti
dec
mov
bound
cmp
jo
pop
ds
push
aas
jg
fstpt
imul
or
iret
fwait
dec
aam
sti
add
pop
stos
test
fcomi
je
or
aas
loop
popf
mov
cmp
mov
test
hlt
addr16
imul
jg
idivl
ficompl
push
xchg
cmc
cli
hlt
rcr
aam
cmp
pop
lock
repnz
frstor
stos
mov
jno
push
dec
loope
xor
mov
jb
outsb
mov
mov
or
lods
outsl
mov
pop
xchg
xchg
or
xor
jecxz
and
fs
ret
ret
es
inc
sub
and
push
cmc
push
fcoms
add
stc
pop
cltd
mov
jge
mov
outsl
loop
lcall
and
fiaddl
and
clc
loope
fstps
or
fs
xor
jae
movsb
mov
in
daa
inc
scas
and
les
int3
scas
movsl
push
ret
scas
cmpb
in
mov
adc
xchg
jno
imul
push
lea
adc
xchg
je
mull
scas
push
pusha
mov
mov
xor
test
mov
xchg
mov
gs
add
mov
imul
addr16
insb
jno
jbe
mov
mov
cmp
dec
ljmp
sub
jmp
int
push
dec
cmp
cli
loop
iret
icebp
mov
sahf
cmp
mov
loop
inc
mov
pushf
and
xchg
in
jg
xor
xchg
add
cmpsl
and
pop
cmc
call
test
inc
les
pop
xchg
jb
fcoms
das
divb
sahf
in
enter
xor
jg,pt
loopne
xor
sub
push
adcb
xchg
or
faddl
and
call
sbb
adc
jae
jge
sub
fcomps
cmpsb
xchg
dec
aam
outsb
hlt
adc
addr16
mov
loop
push
push
out
adc
imul
stos
leave
adc
lcall
popf
cmpsb
add
andl
sbb
pop
cltd
or
dec
mov
sti
sbb
imul
xchg
cli
jnp
and
sahf
push
push
jmp
mov
adc
orb
xchg
dec
add
nop
les
retw
outsl
adc
cld
sbb
cmc
inc
cld
and
loope
cmp
sti
mov
inc
push
imul
test
or
daa
dec
lcall
ror
outsb
and
aam
cmp
dec
js
movsl
and
mov
mov
and
push
stos
mov
mov
mov
xor
pop
push
nop
inc
test
movsb
dec
nop
mov
orb
andl
mov
fmuls
das
cli
fisttps
jnp
xchg
and
jb
or
movsl
inc
cli
xchg
push
pop
mov
sbb
hlt
decl
mov
dec
scas
adc
aad
lret
adcb
jo
fwait
cmp
or
push
shr
into
push
adc
sbb
jg
rorl
pop
xor
fsubrs
pop
mov
sarb
adc
push
hlt
rolb
adcl
lock
loope
jecxz
cmp
xchg
inc
or
shl
out
inc
stos
mov
jp
out
dec
and
adc
sub
aam
ja
ljmp
fsubrl
fcoms
fnstenv
dec
xchg
sti
and
in
push
jno
pop
ret
hlt
or
pop
mov
jns
adc
cmpsb
push
js
sub
xchg
repnz
sub
mov
and
or
leave
inc
stc
insl
test
adc
lods
hlt
pop
test
xchg
shll
mov
jl
aas
cmp
push
cmp
mov
dec
lahf
fxch
inc
xchg
jno
mov
add
inc
mov
and
fadds
sbb
leave
ljmp
mov
lcall
clc
jle
mov
iret
fsubrl
and
or
iret
mov
aas
lock
fidivrl
aam
inc
bound
pushf
aaa
rep
push
or
js
test
out
fldt
sbb
outsl
push
cmp
mov
push
lds
movsb
adc
inc
cmp
fcomip
mov
cld
pop
jle
adc
dec
pop
icebp
add
icebp
stos
out
inc
mov
inc
xchg
mov
es
in
mov
lds
sbbl
jno
call
pop
or
mov
jg
test
cmp
jg
mov
or
sub
mov
scas
pop
xchg
test
pusha
inc
xchg
cwtl
dec
mov
in
and
mov
repnz
cs
mov
popa
sub
or
pop
push
jg
inc
add
pop
push
das
stos
inc
cmpsl
sub
xchg
enter
fiadds
movsl
xchg
int3
test
jmp
xchg
adc
and
mov
dec
jge
orb
ffreep
cmp
xor
stc
jmp
or
and
mov
fs
in
in
mov
imul
sbb
lods
push
daa
ret
stos
icebp
sbb
push
in
pop
pop
ret
loope
or
dec
jmp
out
test
jp
and
idiv
sub
rolb
and
adc
rolb
aad
pop
add
popa
imul
pop
mov
sbb
push
aas
add
or
fdiv
mov
cli
lahf
mov
pop
xchg
aaa
push
test
mov
imul
jns
mov
fwait
cmpl
mov
rolb
stos
imul
pushf
pop
pop
rol
loope
insl
jb
sub
mov
insl
and
push
ss
pop
movsb
ret
leave
xchg
mov
sbb
and
sbb
xchg
mov
lock
push
movl
cmp
mov
xor
mov
testl
dec
jo
fisttpl
xchg
mov
imul
jmp
lret
les
bound
js
pop
fs
es
cld
stos
ficoms
in
add
andl
je
sbb
pop
xchg
aas
iret
or
lahf
mov
xor
jmp
xchg
jecxz
mov
pop
loope
xchg
xchg
push
or
cs
jge
mov
dec
cmp
f2xm1
sub
xor
jns
cmpsl
shlb
insb
mov
subb
or
or
cwtl
xorb
push
in
inc
push
in
push
mov
cmc
rcrl
jp
sahf
and
cmp
cld
cmc
incl
add
movsl
hlt
xor
aad
xchg
sbb
mov
out
popf
cld
aam
or
xchg
cmp
test
mov
push
popf
xchg
inc
cmp
rcrb
adc
loopne
ss
inc
clc
xchg
xchg
add
sub
sbb
push
pushf
xchg
dec
movsb
mov
mov
or
push
loop
cltd
lock
or
gs
sub
adc
aad
das
pop
dec
enter
xlat
les
in
sbb
push
inc
mov
dec
ffree
and
ja
sbb
popf
clc
mov
ljmp
mov
insb
and
test
sbb
and
cmp
jne
xchg
and
cmp
stos
mov
jne
add
dec
jmp
dec
xorl
cmp
insl
scas
cmp
jb
xchg
scas
xor
jmp
cmpsl
aas
pop
cmp
jmp
xchg
jmp
outsl
lock
movsl
rclb
adc
xorl
movsl
mov
xor
pop
stos
pop
and
daa
mov
js
mov
add
movsb
repnz
aaa
gs
enter
mov
out
mov
enter
inc
iret
or
cltd
jns
cs
cmpsl
sti
js
push
mov
push
hlt
sub
add
xchg
ret
rolb
dec
ds
clc
icebp
inc
jns
xor
jmp
sub
xchg
pop
adc
negl
fnstsw
sub
je
add
push
mov
sub
and
je
stos
xchg
ljmp
inc
or
add
cmp
mov
push
xor
cmp
lret
ss
in
test
sti
cmc
ja
adc
out
aas
inc
and
adcb
test
xor
push
leave
shrl
sbb
data16
jae
jnp
andb
mov
mov
ret
stos
aas
std
mov
sbb
les
inc
shll
mov
push
out
cld
add
fisttps
stos
jecxz
imul
mov
push
mov
stc
and
fists
mov
jne
addb
pop
push
repz
xor
outsb
sub
outsb
push
adc
mov
xor
or
pop
bound
dec
lcall
pop
test
dec
inc
enter
cmpsb
mov
sbb
push
test
fsubs
out
cmp
xchg
or
gs
dec
cli
jb
aam
loopne
pop
cmp
mov
jg
ret
mov
test
push
call
ret
dec
inc
minps
or
cmp
mov
pop
xchg
repz
mov
hlt
pop
adc
xor
ss
ficoms
mov
xorb
cmp
mov
jmp
inc
push
and
jno
xchg
sbb
mov
repnz
pop
xor
xchg
test
stos
jg
mov
mov
xlat
xor
aas
test
shr
lods
pusha
dec
add
pop
mov
xchg
xor
mov
lcall
inc
stos
loop
lret
adc
jmp
unpckhps
xchg
push
aad
rclb
js
pop
enter
lods
sub
in
into
adc
pop
subb
ret
push
popa
ja
jg
loop
mov
insb
mov
js
sbb
rorl
pop
pushf
fbld
push
pop
into
dec
xor
add
ja
or
loop
cli
mov
dec
call
call
inc
xor
jecxz
mov
fcompl
pop
cmpsb
cwtl
sub
add
inc
jno
cmp
into
dec
int
xor
test
dec
enter
cmp
adc
cmp
in
push
inc
jl
push
inc
fucomp
jecxz
mov
repz
imul
addl
lods
imul
jl
sub
sahf
clc
dec
cld
mov
dec
daa
lret
lahf
sbb
mov
adc
fnstsw
sub
out
lcall
subb
nop
inc
ljmp
adc
js
push
adc
stos
aas
pop
je
jge
sub
sbb
bound
xor
push
shlb
mov
jp
sub
dec
out
lea
jg
fistpll
mov
xchg
test
rol
cmp
mov
push
sbb
pop
fmuls
repz
insb
cmp
nop
add
push
mov
aam
add
popf
aaa
js
jl
fnstsw
push
xorl
sub
cmc
push
or
and
or
stos
in
or
push
pushf
or
orb
repnz
mov
popa
popf
aam
sbb
add
cmp
repz
inc
in
sbb
outsb
fiaddl
cwtl
lret
dec
jmp
xchg
jb
pusha
mov
mov
outsl
mov
xchg
pop
sbb
dec
mov
lret
ds
incl
push
xchg
inc
loope
addr16
mov
daa
add
mov
dec
test
cmp
mov
pushf
mov
mov
pop
sbb
dec
stos
ja
or
idivb
push
push
lds
out
mov
jne
mov
inc
incb
push
outsl
or
repz
and
ss
jecxz
dec
mov
pusha
int3
xor
inc
mov
in
sbb
lcall
mov
adc
imul
mov
push
das
out
adc
sub
xor
fcomp
sbb
jmp
cs
fdiv
mov
sbb
sub
xor
in
cli
sbb
lods
add
jb
mov
bnd
adc
fisttps
rolb
ret
xor
loopne
dec
mov
mov
cmp
add
sbb
sbb
xor
mov
or
mov
xchg
xchg
jno
inc
out
xor
fwait
jmp
das
arpl
jae
outsb
mov
ljmp
loop
mov
in
addr16
icebp
push
das
hlt
push
in
cmpsb
push
or
xchg
xlat
inc
jle
sahf
sti
cmpsl
movsl
je
pop
add
outsb
fstpt
sub
mov
inc
iret
adc
repz
nop
cli
lods
sbb
and
or
cltd
repnz
push
out
jmp
or
cmp
daa
imul
inc
bound
adc
js
and
aas
sub
cmc
push
xchg
bound
fisttps
mov
jmp
imul
fisubs
and
mov
pop
xor
arpl
std
mov
in
outsb
in
add
cmc
ss
fsub
add
cltd
adc
adc
mov
jmp
pop
cld
in
mov
dec
imul
hlt
mov
scas
jno
or
xor
repnz
adc
xchg
out
xchg
mov
add
add
push
loope
mov
addl
aaa
imul
jmp
mov
mov
mov
call
mov
jne
sbb
cmpsl
add
lahf
cld
jo
cltd
js
add
mov
inc
jae
mov
ds
cltd
mov
xor
andb
jns
popa
outsl
inc
mov
mov
xor
add
shrl
popf
sbb
mov
pop
fdivl
jnp
mov
push
push
dec
or
loop
mov
in
and
mov
jne
leave
dec
dec
cmp
add
mov
mov
in
popa
pushf
cmp
xchg
aas
or
push
rorb
mov
and
je
sbb
dec
jmp
jns
pop
mull
test
and
mov
imul
sub
rclb
xchg
out
ret
or
and
subb
cmp
push
sub
cmp
test
dec
mov
out
stos
or
xor
jecxz
cmp
xchg
dec
jge
rorb
dec
pop
sbb
mov
sbb
sbb
mov
icebp
in
movsb
cltd
iret
bound
movsl
mov
adc
cmp
mov
adc
add
cmp
movsb
jecxz
out
adc
testb
xchg
cmp
push
mov
mulb
mov
mull
mov
mov
and
dec
popa
push
add
int
imul
pop
pop
ds
xchg
pop
sub
cmp
pop
push
fstl
arpl
icebp
rolb
add
add
shrb
adcb
jbe
int
je
lea
cmp
mov
setp
aad
psubq
popf
mov
and
xlat
test
cwtl
fistps
mov
push
idivl
adc
pushf
sub
pop
lods
add
fnstenv
mov
subb
mov
jb
jg
rorl
push
add
sbb
adc
mov
in
fcoml
push
mov
repz
sub
mov
bound
cmp
scas
into
or
inc
sub
out
inc
and
imul
jae
int
pop
mov
fisubrs
addr16
push
adc
push
leave
sub
dec
sarl
js
dec
or
test
add
test
lods
ja
dec
aad
popf
cld
jl
or
mov
dec
js
shlb
mov
or
adc
jg
jg
inc
mov
xor
xchg
enter
mov
les
mov
je
xchg
stos
frstor
data16
rorl
xor
or
fsubrp
or
and
aaa
xchg
push
add
xchg
jne
mov
inc
fdivr
pusha
decl
cmp
add
sti
add
pushf
mov
pop
movsb
adc
xchg
lretw
sub
test
mov
les
aam
pop
rcl
ret
insb
dec
adc
lret
aaa
repnz
jo
loope
sub
pop
gs
pop
adc
and
xchg
fwait
jo
filds
mov
gs
cmp
lock
loope
push
mov
ljmp
or
cmpsb
cmp
in
xchg
jle
add
ljmp
out
jmp
inc
or
imul
jne
jmp
xchg
daa
daa
out
in
hlt
int3
xchg
pop
push
loope
aas
movsb
add
mov
jge
pop
in
movd
imul
aas
push
pop
inc
in
push
push
out
xor
dec
aaa
add
cmp
push
ljmp
fisubs
aaa
jge
xchg
and
inc
inc
mov
cwtl
es
mov
inc
cs
and
adc
daa
test
xlat
jmp
push
mov
icebp
movsl
cmc
data16
popa
popa
pop
cmpsb
pop
inc
fs
mov
mov
mov
je
in
pop
push
lock
lcall
mov
and
cmp
xchg
popl
dec
subl
inc
les
movsl
lret
dec
mov
sub
push
bound
outsl
or
adc
ffreep
xor
test
sub
jne
adc
inc
scas
imul
xchg
mov
fs
addl
sbb
cmp
ds
xchg
push
xchg
push
dec
int3
inc
push
lcall
jg
inc
fidivrl
mov
mov
mov
hlt
stos
cs
push
cmp
loope
stc
shr
mov
fmuls
rclb
loopne
insb
dec
cmp
cmp
cmpsl
mov
mull
cmp
jmp
loop
add
add
mov
ja
xor
xchg
mov
dec
in
test
fistps
sbb
test
adc
dec
das
or
pop
dec
sbb
cwtl
fs
and
and
jo
in
out
ret
inc
das
sbb
adc
or
pop
out
cmc
sub
xor
movb
sbb
or
fcompl
sub
daa
sbb
xchg
add
fdivrp
and
pop
popa
inc
pop
loopne
imul
push
sub
imul
push
inc
xchg
xchg
add
movsl
orl
xchg
jnp
cwtl
pop
pop
aas
sub
ljmp
test
inc
sub
out
ja
or
dec
outsb
adc
and
and
jle
popa
xor
xor
test
mov
dec
pusha
adc
pop
xchg
outsl
lock
and
jbe
or
popa
test
and
and
push
pop
xor
into
out
in
test
xchg
clc
xor
push
pop
loopne
sub
shll
mov
mov
out
cmp
flds
push
rcl
add
iret
and
loop
and
fwait
repnz
rorl
leave
dec
cli
pop
in
loope
adc
call
mov
sti
inc
pusha
jnp
cmp
push
arpl
dec
xchg
or
pop
mov
in
fidivl
or
inc
xor
mov
add
jle
pushf
push
inc
test
xlat
jl
icebp
js
jmp
sarl
mov
or
pop
fisttps
aam
aas
sbbl
dec
fistps
rep
adc
jae
push
push
cmc
decl
movb
mov
les
adc
ljmp
cli
adc
and
mov
mov
fsubr
test
push
adc
add
adc
push
mov
or
mov
xchg
iret
test
jmp
push
mov
mov
outsb
xchg
add
inc
aas
rep
jecxz
test
xchg
clc
addr16
mov
push
push
inc
scas
rclb
nop
sub
push
push
cmp
lock
mov
sub
mov
pop
push
les
mov
sbb
mov
xlat
mov
mov
fiaddl
scas
insb
mov
dec
divl
ja
stc
pop
inc
mov
in
roll
iret
sbb
or
xchg
pushf
call
in
mov
cwtl
icebp
mov
dec
lods
cmp
jg
aaa
lret
dec
sbb
push
movsb
cmp
arpl
ret
adc
mov
sarb
inc
flds
into
cli
pushl
rcll
mov
in
xor
iret
inc
into
insl
sbb
lds
aaa
iret
pop
loop
inc
sub
ja
inc
loop
mov
sub
fsubl
pop
push
xchg
add
les
orb
pop
scas
jno
push
popa
push
jle
mov
addr16
sbb
arpl
out
lea
subl
add
mov
std
xor
bound
imul
xchg
call
mov
mov
ss
neg
scas
stc
dec
or
cs
add
dec
repnz
pop
lret
lret
adc
add
adc
add
mov
out
rorb
fmull
lock
or
adc
sub
andl
push
rol
enter
add
adc
xorps
xlat
aam
and
xchg
mov
cmp
mov
aas
nop
loop
mov
ds
pop
push
nop
mov
call
cmp
dec
negl
nop
je
js
lret
lock
or
push
xchg
loope
pushf
shr
dec
jg
fimuls
ja
rcrl
push
stc
mov
xor
xor
pop
xchg
movb
adc
and
add
pop
mov
adc
out
or
cmp
fmull
hlt
or
loopne
sbb
xor
cs
jne
andl
ljmp
inc
adc
push
mov
lret
fistpll
cmpl
jmp
js
dec
in
push
push
rcll
xchg
test
jns
mov
cmp
sbb
mov
jb
testl
mov
loop
xor
leave
inc
mov
inc
in
fldt
int
fbstp
aaa
das
and
xor
nop
mov
int3
sub
lods
inc
repnz
jmp
popf
shr
mov
xchg
addr16
loope
xchg
outsb
sub
aas
in
or
ja
xchg
mov
push
into
fs
scas
es
pop
inc
dec
mov
fstps
mov
lea
jp
inc
push
mov
addb
mov
movsb
incb
int3
mov
or
mov
je
xchg
pop
out
sub
std
mov
add
inc
push
push
jg
clc
sub
cmp
vpsrlq
hlt
add
fs
sub
repnz
push
xor
ret
cmp
in
xor
out
pop
inc
dec
shr
popf
mov
fidivl
cmc
loopne
dec
xchg
sub
icebp
js
cmp
jnp
mov
dec
fnsave
or
arpl
in
mov
orl
mov
shrl
mov
mov
ss
jns
xchg
xor
sti
mov
aam
pop
popf
jnp
mov
xor
sarl
jo
adc
aad
test
dec
shr
popa
outsb
dec
jae
jb
shl
cltd
push
pop
sbb
jb
mov
cwtl
std
jg
and
in
mov
push
outsb
je
fadds
movsl
popl
xchg
push
popf
xor
dec
call
test
les
fdivl
lock
test
cmpsl
rcr
test
sub
pop
jge
mov
dec
xor
arpl
pop
jle
shlb
cmc
in
adc
scas
push
pop
jae
pop
pop
jbe
push
cmpsl
mov
inc
loopne
mov
cld
nop
xchg
repnz
lods
sub
mov
imul
or
mov
adc
xor
xor
adc
mov
out
in
pop
addr16
fs
pop
dec
scas
pop
push
add
in
xchg
inc
movsb
icebp
xor
push
sub
add
fnstcw
pop
jae
ficoms
dec
cmp
insl
xor
dec
gs
lods
mov
mov
pop
mov
mov
jno
mov
inc
push
ret
iret
adc
lret
cmpsl
dec
pop
out
xor
pop
push
dec
jbe
dec
mov
ret
adc
xor
xor
or
jge
out
aas
mov
ret
xchg
or
mov
mov
cld
push
mov
xchg
mov
pop
addl
push
or
xlat
mov
cmp
pop
out
stos
sub
add
cmpb
pop
sub
es
imul
outsb
dec
nop
and
fistpll
pop
pop
inc
cmpsl
enter
ds
test
add
cmp
lea
dec
les
dec
jecxz
in
push
call
negb
mov
ljmp
or
pop
xor
xchg
movsb
xchg
adcl
mov
mov
cmp
or
fdivrl
cli
xlat
rorb
mov
lock
fsts
out
movsb
mov
mov
inc
stos
or
jb
and
and
push
call
jne
imul
lret
mov
gs
mov
mov
pop
sub
sub
aaa
dec
lret
jge
sahf
pop
aam
imul
call
pop
xchg
rcll
aas
lods
xor
les
add
push
add
arpl
stos
or
mov
xchg
insl
in
pop
and
and
xchg
mov
or
loop
test
cs
and
sbb
pop
add
popf
sbb
lds
jge
push
fdivl
jb
test
in
sbb
je
and
push
push
or
and
adc
push
push
scas
add
call
in
sbb
dec
inc
outsb
dec
lea
and
stos
jle
sub
push
fneni(8087
cmp
mov
jl
push
test
aad
add
add
rcrb
scas
fisttpl
push
adc
jbe
lock
mov
jp
xchg
mov
jecxz
popa
mov
xor
mov
lcall
jp
test
das
xchg
mov
jo
xchg
push
push
fstps
lret
mov
dec
cmpsb
add
or
adc
add
mov
xchg
pop
pop
pop
aas
inc
jne
inc
movsb
jbe
scas
popf
fnstsw
lea
pop
pop
mov
inc
sbb
jg
movsb
into
aas
jo,pt
mov
mov
jp
ljmp
and
xor
aam
lret
sbb
push
pop
imull
dec
je
mov
or
mov
rcll
jnp
out
mov
enter
sbb
nop
jle
fisubs
fstp
mov
mov
lret
popa
rcrl
xchg
sbb
std
fsubs
mov
jnp
test
mov
adcb
pop
data16
pop
pop
push
or
icebp
das
lods
sbb
push
mov
or
mov
pop
stos
fldl
inc
adc
mov
pop
cmp
sahf
ss
add
shrl
mov
jno
inc
cmp
test
out
dec
adc
add
sub
movsl
cmp
sbb
lahf
inc
mov
or
stos
cs
xchg
nop
subb
push
bound
sbb
and
xor
ret
push
sub
inc
outsl
or
test
test
in
popa
jmp
xchg
mov
mov
lea
bound
mov
xchg
and
js
inc
fsts
cmp
jg
add
sub
mov
ljmp
cld
mov
mov
add
pop
inc
ss
ror
mov
sbb
shl
cmpl
pop
jecxz
push
mov
cwtl
leave
add
jmp
xchg
rorb
jmp
pop
pop
lret
sub
loope
pop
sub
adc
cmpsl
cmp
inc
pop
out
std
adc
lahf
cmc
stos
test
push
jnp
outsl
pop
leave
cmp
imul
pop
jo
mov
or
pusha
adc
mov
lcall
popa
push
shlb
sub
cmp
push
mov
dec
sets
push
mov
cmp
or
lret
push
jns
and
push
cmp
es
cmp
test
test
arpl
stc
mov
stos
fidivs
js
repnz
pop
sbb
sarl
bound
mov
dec
bound
cwtl
adcl
fsubr
xor
inc
xchg
jg
sahf
fisubl
hlt
or
push
fsubrp
jg
iret
dec
arpl
clc
mov
aaa
out
loopne
mull
xor
push
adc
test
mov
cmp
sbb
and
push
xlat
xor
inc
sbb
imul
mov
cmp
pop
mov
in
gs
xor
je
adc
mov
xchg
xor
xchg
in
dec
dec
dec
push
fwait
push
push
mov
push
insl
inc
push
out
divb
inc
andl
pusha
rep
imul
mov
cwtl
sbb
imul
xor
pop
dec
rcr
dec
push
ret
inc
adc
dec
aad
jb,pt
insl
jb
xchg
loope
dec
xchg
das
insw
cmpsl
loopne
aam
lret
sub
sub
pop
add
shl
jp
aaa
outsb
xchg
das
lods
xchg
sub
inc
imul
iret
cmp
jp
mov
sbb
mov
icebp
mov
enter
xchg
aad
popa
mov
cmp
xchg
dec
insl
fbld
pop
jnp
push
push
shrb
and
pushf
push
and
cmpsb
jno
dec
xor
mov
shll
lock
mov
clc
pop
push
test
jecxz
dec
adc
xor
ret
mov
pop
in
sub
jno
push
mov
cmp
in
mov
and
ds
hlt
dec
je
sarl
cmc
adc
inc
lock
lock
cld
jge
sbb
and
xchg
adc
movsb
jns
cmp
pop
mov
inc
and
dec
mov
mov
xor
mov
std
sbb
scas
out
mov
scas
sbb
mov
xor
mov
ljmp
decl
cli
dec
stos
clc
arpl
pop
cmp
decl
ds
aam
jns
call
add
lret
bnd
js
xor
or
mov
subb
shlb
sub
xchg
fsubrl
push
nop
dec
out
lea
rclb
in
cmc
imul
xchg
xor
add
lea
rol
or
mov
cmp
and
mov
incl
cltd
dec
scas
lods
jg
mov
xchg
or
mov
dec
and
arpl
or
cmp
lods
mov
rorb
gs
sub
pop
hlt
push
jp
enter
test
xor
sti
imul
adc
xor
inc
fbld
and
sub
clc
mov
lahf
pop
movsb
stc
push
and
cmpsl
dec
push
push
push
lcall
pop
data16
popf
repz
pop
or
adc
call
sub
sbb
nop
adc
sub
popl
fisttps
jecxz
inc
pop
inc
mov
cmp
mov
cltd
outsl
xchg
lock
cmpsb
movsb
xchg
lret
imul
sub
xchg
pusha
jb
jbe
or
xchg
cltd
stc
add
jns
shl
adc
imulb
icebp
sub
in
mov
pop
dec
ret
sbb
xchg
and
clc
enter
cmp
ljmp
push
ret
mov
mov
int3
pop
jnp
addr16
addb
jnp
xor
sti
push
test
mov
cmp
inc
insb
cwtl
clc
xor
adc
imul
dec
pushf
or
pop
inc
int3
inc
fldcw
jae
inc
inc
ds
inc
lret
cmpsb
std
cmpb
and
mov
xor
aas
aas
and
xlat
sub
push
inc
loope
adc
jb
mov
insb
jmp
shr
imull
das
bound
and
add
push
popa
adc
in
std
nop
loop
jb
cmp
out
cwtl
or
sbb
repz
dec
icebp
outsl
lock
mov
fisubs
out
arpl
dec
sbb
push
ds
mov
inc
pop
pusha
jnp
scas
jne
icebp
loopne
gs
sar
cmp
and
mov
xor
and
xchg
cwtl
int
dec
movsb
sbb
out
sub
xor
lock
jp
movsl
sub
xchg
xor
je
push
xchg
in
xor
icebp
sbb
imul
sti
cld
lret
xor
mov
daa
xor
mov
ficomps
sti
dec
iret
cmpl
inc
xchg
jmp
or
adc
arpl
ja
jmp
mov
inc
in
push
xor
cmp
int
add
repz
lods
mov
cmpsb
mov
mov
clc
jmp
popa
or
fisubs
xchg
iret
call
cmp
pop
sarl
jb
divb
and
ret
add
mov
pop
jno
push
dec
movsl
jge
fwait
sbb
cmc
xchg
leave
mov
mov
cs
xchg
adc
jno,pn
data16
sub
cmpsb
push
pop
xchg
or
pop
cltd
or
nop
xchg
ja
fisubrs
xchg
xor
jmp
subb
daa
mov
pop
in
loope
lahf
stos
mov
pusha
pop
jmp
push
add
std
xor
adc
test
fidivrs
adc
pusha
cmp
aad
fimull
loope
push
sahf
ja
aam
jmp
xchg
into
in
loope
sarl
imul
cmp
mov
je
or
ret
fcoms
loope
nop
out
xor
loop
push
lret
pop
into
into
or
call
int
lea
cmpsb
lods
insl
outsl
sbb
mov
jb
stc
fbstp
pop
xchg
or
cmp
in
pop
or
sti
cmp
cwtl
mov
repnz
mov
dec
or
lret
or
and
push
aad
lods
stos
xchg
ret
call
adc
pop
mov
cmp
add
and
xor
push
jbe
ljmp
popa
and
inc
dec
adc
xor
cmpsb
fistpll
ret
sub
pop
xor
movsb
stc
cmp
push
in
leave
pop
jmp
inc
jl
xchg
xchg
mov
push
sbb
mov
jns
xchg
xlat
ja
out
std
jge
mov
cmp
cld
es
pop
xchg
and
xchg
mov
xlat
gs
add
add
jl
cld
jl
loope
xchg
flds
cwtl
jmp
lds
and
test
ret
jge
outsl
fdivrs
sbb
dec
and
pop
ficomps
int3
inc
pop
imul
insb
enter
mov
xor
test
out
push
test
jecxz
push
mov
testl
xchg
cmp
jecxz
inc
adc
push
jp
cmp
mov
cmc
inc
xor
pop
inc
push
jp
push
mov
mov
dec
inc
fs
push
aad
push
inc
std
xchg
sbb
mov
add
out
push
shrl
mov
inc
and
leave
push
ss
jge
lahf
rol
fstps
pop
sahf
stos
arpl
lret
dec
xor
push
push
scas
mov
outsb
inc
std
rol
cmp
rcrl
inc
loope
cmp
mov
fwait
subb
sub
and
sub
mov
popa
movsb
mov
lds
popa
outsb
dec
popa
cmc
mov
mov
nop
pop
pop
clc
movsl
push
cmp
sbb
popf
repz
incb
fidivl
js
popf
xor
xchg
sub
out
inc
aad
jmp
dec
sub
lret
jo
mov
bound
mov
adc
data16
movsl
out
mov
aam
lock
rcr
cmp
xchg
fidivl
cltd
jno
outsb
or
add
inc
xchg
gs
popf
sbb
cli
cmpsl
and
dec
sbb
dec
popf
inc
shlb
inc
int
lea
and
scas
sahf
push
push
add
inc
pop
outsl
stc
fimull
cwtl
cmpsb
jb
ja
or
shrb
scas
push
push
sarl
mov
xchg
fbld
or
pop
mov
dec
popf
jge
mov
adc
fs
andb
stc
sbb
push
movsb
arpl
jecxz
push
or
and
push
jns
rorl
clc
dec
es
testb
into
fnstenv
or
mov
dec
icebp
add
js
mov
lock
ljmp
lea
mov
imul
cmp
rorb
adc
loopne
popf
and
mov
or
and
adc
xor
sti
xor
mov
in
sbb
xchg
js
jne
dec
dec
xchg
nop
movsl
pop
adc
icebp
rol
and
push
daa
test
out
enter
and
sub
push
push
cmc
mov
mov
out
or
insl
sbb
adc
ljmp
sub
pop
cmp
std
leave
xchg
lcall
and
mov
push
or
cmp
popa
fsubrs
or
or
xchg
push
cmp
nop
test
pop
les
cmp
in
pop
lods
sbbl
das
cmpsb
enter
imul
lods
inc
rorb
pop
insb
pop
xchg
sub
adc
sub
mov
mov
mov
or
jb
jnp
enter
fs
push
mov
dec
divl
jecxz
cmp
push
xor
icebp
pop
inc
arpl
orl
cli
add
and
pop
add
sbb
call
notb
dec
cmp
xchg
fwait
sub
mov
inc
sbb
jne
jo
pop
rolb
push
test
dec
ds
movsb
rcrl
dec
int3
adc
lret
enter
aad
cmp
sbb
push
aam
stos
sti
mov
adc
scas
push
lahf
add
pop
cli
jg
mov
sbb
mov
in
fwait
cld
mov
lock
mov
sub
xchg
lahf
inc
int
push
pop
adc
xchg
bound
xor
jnp
jno,pt
repnz
xchg
xlat
adc
sbbb
and
inc
lea
js
into
xchg
dec
xor
jmp
repnz
and
mov
shrb
inc
idivb
fstpt
mov
aad
iret
and
xchg
clc
push
in
ds
xchg
ret
add
test
sub
add
in
in
mov
dec
push
out
jae
mov
adc
xchg
mov
int
insl
cmp
ficomps
add
or
mov
in
push
cmpsl
in
divl
rcrl
sbb
sub
arpl
int3
mov
repz
dec
mov
xchg
mov
dec
push
xchg
jnp
sub
int
jp
adc
leave
mov
xchg
pushl
iret
sbb
adc
dec
repz
call
dec
jae
loope
nop
and
es
or
or
jno
push
xor
mov
sub
stc
js
mov
or
push
push
dec
adc
clc
scas
xor
adc
or
pop
or
fistpll
rclb
add
sub
jns
and
add
sarb
and
mov
lfs
push
and
inc
mov
xor
shrl
hlt
scas
push
xor
js
push
loope
adc
cltd
jmp
mov
pop
movb
aad
cld
cmpsb
pop
out
ds
dec
sbbl
mov
into
scas
icebp
pop
mov
fcomps
ljmp
jb
add
jmp
pop
xlat
pop
adc
call
enter
jns
jl
iret
xor
pop
loopne
test
fdivs
test
stos
shll
incb
or
push
mov
dec
sbb
jno
mov
dec
loope
and
int3
push
addl
xlat
xor
aaa
jg
push
push
pop
stos
jb
inc
cwtl
sub
cmpsb
rolb
jns
lret
sbb
movsb
cmpsb
inc
ficoms
sbb
jmp
gs
fidivrs
xchg
add
pop
das
ret
cmp
push
js
sbb
mov
mov
inc
push
mov
and
dec
pop
test
pop
loope
rorb
cmp
xchg
sahf
and
mov
dec
adc
lods
sbb
jnp
adc
out
mov
jno
inc
mov
mov
pop
jl
mov
pop
sti
xchg
in
or
mov
repnz
loopne
aas
xchg
cld
mov
and
loopne
add
lods
jb
inc
lods
push
mov
sbb
mov
test
loope
xchg
out
scas
sarb
push
aam
jne
ret
sahf
lcall
je
pop
lea
jnp
xchg
or
pop
jns
fcomps
inc
inc
xchg
adc
cli
int3
inc
cmpsb
xlat
daa
or
in
mov
stos
cltd
pop
lret
sub
push
mov
sbb
imul
into
adc
push
mov
sti
dec
leave
ret
push
jle
ret
ficoms
xchg
int
push
out
dec
xorb
jl
fldenv
std
add
mov
leave
into
iret
jae
cmp
xchg
je
jo
subl
pop
insb
dec
dec
shll
fstpl
sub
faddp
in
push
cs
aaa
arpl
mov
adc
xchg
stos
xchg
out
dec
push
in
jcxz
fisttpl
cli
cli
lret
fstl
int
imul
adc
cmpl
sbb
es
in
enter
push
mov
lock
xor
xchg
and
sub
sub
test
repnz
outsl
cmpsb
cwtl
out
loopne,pn
popa
push
pop
clc
lods
dec
or
add
aaa
or
pop
sbb
in
pop
xchg
arpl
ss
shll
in
aaa
inc
jno
aad
mov
movsb
jle
lret
in
fnstsw
cwtl
sub
cmpsl
sbb
inc
or
mov
xlat
xor
dec
mov
arpl
xchg
mulb
xor
xchg
sahf
ja
xor
dec
xor
ds
and
sub
mov
mov
arpl
mov
loope
ror
fwait
and
cmp
inc
xchg
ja
and
out
test
jne
cmp
sbb
into
aad
ds
mov
outsl
cmp
test
lods
ds
sbb
cli
push
in
xchg
mov
popf
sub
fs
mov
pop
dec
out
xor
unpcklps
sbb
int
or
xchg
pop
cwtl
jmp
fincstp
adc
into
adc
std
cmp
cli
xchg
lock
sbb
iret
insl
les
inc
rorb
clc
jge
dec
sub
cwtl
mov
sahf
inc
shlb
ljmp
movsl
cmpb
fildll
popf
dec
xor
xor
loope
mov
inc
add
scas
hlt
scas
xor
cmovs
in
inc
jnp
xor
push
and
iret
push
ds
mov
aam
insl
cmc
hlt
dec
xor
mov
lds
xor
cmpsl
packsswb
lea
rolb
push
and
imul
xchg
push
das
jle
bound
sti
leave
mov
pop
outsl
inc
iret
sub
stos
movsb
mov
jnp
cmpl
mov
insb
cmpsl
xor
flds
stos
lcall
fsts
cmp
movsl
push
add
sub
xchg
enter
into
ret
cmp
adc
or
shll
mov
iret
sbb
lea
jmp
push
adc
or
out
pop
int3
jnp
pop
push
dec
outsl
in
lahf
out
scas
sub
and
push
loopne
inc
push
cmpsl
shll
jle
movsb
leave
sti
call
repz
stos
movsl
out
cmc
sub
sub
jo
out
les
cmc
imul
sbb
jae
add
jle
or
dec
js
mov
jmp
and
fdivrs
inc
cltd
lea
or
jne
pushl
jo
mov
outsb
jmp
fsubl
dec
dec
fidivrl
cld
cmp
pop
add
leave
add
push
pop
lret
adc
push
push
xchg
mov
mov
push
push
js
xchg
in
push
dec
push
sub
push
xchg
dec
nop
jmp
ds
out
xchg
adc
sahf
adc
loope
pop
daa
sbb
add
shll
xlat
daa
dec
add
mul
movsb
xchg
out
pop
push
jg
andl
pushf
clc
das
aas
mov
test
aaa
call
mov
scas
adc
jb
aaa
lahf
pop
faddl
out
mov
cld
pushf
mov
ja
jge,pt
fdivrs
test
add
jp
lds
imul
dec
es
imul
pop
movsb
and
lahf
inc
push
es
fnstsw
and
loope
ret
push
and
stos
inc
daa
cmpsl
ja
pop
or
jmp
in
mov
jmp
shrb
fistpll
es
sub
mov
inc
in
add
enter
jmp
and
xor
push
inc
cmp
int
dec
subl
repz
rcrb
outsl
pop
jmp
pop
add
jmp
lock
outsl
or
sarl
jnp
popf
adc
cld
lods
ja
dec
fdivrp
ja
aas
scas
fcmovb
mov
cld
mov
mov
mov
mov
cwtl
mov
sbb
daa
jle
xor
nop
xor
xchg
xchg
mov
jle
dec
sbb
xchg
ja
pop
int3
pop
fadds
push
cmp
mov
xor
ljmp
mov
push
outsb
push
testl
xor
std
cmp
leave
arpl
cmpsb
mov
xchg
xchg
mov
xor
xlat
shll
mov
sbb
cmpsb
loope
cmp
pop
mov
mov
icebp
and
push
rcll
cmp
push
stos
jo
inc
add
and
inc
fmull
mov
dec
adc
push
mov
cmp
push
movzwl
fwait
in
loope
jmp
mov
in
xor
call
pop
add
add
enter
sbb
push
adc
ror
jp
jae
jne
pop
je
popf
repnz
fcmovne
lods
std
cmc
xchg
pop
dec
xchg
test
mov
sub
fists
mov
sbb
insl
jo
mov
fsubl
lods
pop
mov
xchg
add
cmp
cmp
movsl
cmp
inc
pop
mov
das
std
add
adc
mov
sahf
xlat
imull
sbbl
mov
jmp
insb
lock
cmp
xchg
and
mov
ljmp
fwait
dec
ljmp
sysret
dec
repz
lahf
ljmp
mov
add
addr16
icebp
int3
inc
mov
push
je
lahf
cmc
cmc
xor
lods
in
push
jge
sbbl
adc
nop
mov
push
out
das
fidivs
or
clc
test
ret
dec
xchg
cmc
loop
add
inc
xchg
inc
leave
arpl
sahf
sti
jmp
shlb
int3
inc
enter
add
lods
pop
fmulp
xor
loop
mov
les
jo
and
mov
xor
pushf
fdivrs
jb
push
add
fisttpll
loope
mov
xchg
out
mov
test
sub
mov
aas
push
sahf
iret
mov
je
ja
mov
loope
or
sbb
es
and
sbb
jae
jnp,pt
fdivs
rorl
xor
push
push
fcmovbe
lret
aam
xor
mov
add
sbbl
roll
insl
mov
jae
jle
push
std
cmp
iret
rcrl
test
and
xchg
nop
stc
sub
cmp
jno
and
cmp
outsb
pop
inc
ret
mov
mov
and
push
clc
jb
cmc
test
lea
mov
nop
mov
andb
xchg
and
mov
lcall
lea
loopne
pop
push
clc
ret
dec
fs
cmp
lods
popf
push
fcom
shll
cmp
loope
cmp
xlat
stc
sarl
cmpsb
hlt
mov
adc
mov
sbb
jl
imul
mov
lods
jo
test
testl
aam
xor
lret
movsl
inc
xchg
adc
jne
mov
cmp
mov
or
bound
xchg
add
int3
outsb
mov
pop
push
sub
shl
jo
xchg
cmpsl
sbb
cs
pop
fistpl
lahf
sub
inc
add
push
push
pop
icebp
mov
pop
or
add
sub
xchg
jns
push
arpl
sti
lahf
popl
push
inc
cmp
jns
stos
adc
xchg
inc
mov
dec
loope
sbb
add
cmp
das
movsl
fldenv
adc
stos
and
mov
adc
xor
cmc
aad
stc
adc
leave
js
mov
loope
sub
in
push
xor
stc
es
or
jae
lea
daa
in
ror
mov
test
arpl
xor
mov
sub
lahf
rolb
lret
shrb
cli
ja
imul
push
mov
inc
cli
pop
mov
dec
jbe
sbb
cmp
xchg
or
repz
aam
dec
insl
pshufw
dec
inc
inc
rep
or
inc
subl
gs
test
stos
cmpsl
xor
pop
inc
inc
inc
mov
in
bound
sub
popa
hlt
mov
inc
push
in
sbb
mov
pop
sar
and
and
push
inc
sbb
or
dec
push
push
clc
mov
pop
and
mov
sbbb
push
loope
jge
sti
imul
xor
pop
xchg
loope
rcr
enter
popa
lods
mov
dec
xchg
jle
fst
cmpsb
mov
or
sbb
stos
jp
and
xchg
dec
out
bound
cmp
sbb
out
iretw
push
ljmp
outsb
sti
ljmp
mov
shr
stos
jmp
cmpsl
mov
fwait
mov
ja
jmp
sub
pop
mov
dec
jg
cmp
in
or
jmp
test
jb
jl
mov
ret
xor
push
inc
pop
ret
leave
mov
ljmp
jge
cmp
outsb
test
mov
inc
data16
inc
hlt
dec
inc
push
sti
test
xchg
inc
push
xor
mov
arpl
dec
mov
negl
fwait
mov
inc
cmp
jnp
mov
data16
outsl
pop
mov
fdivrp
mov
xchg
jecxz
neg
pop
push
shlb
xlat
hlt
jbe
jno
popf
pop
xchg
mov
outsl
cmc
pop
inc
or
pop
mov
adc
lods
in
adcb
pushf
insb
jns
shrl
xor
das
fsubrl
and
fwait
insb
repnz
mov
pop
outsb
inc
push
nop
outsb
test
repnz
push
movsb
or
sbb
or
xchg
scas
shrl
or
inc
test
iret
push
in
scas
jmp
fcomip
xchg
mov
cvtpi2ps
mov
aaa
add
pusha
push
jns
dec
mov
lret
xchg
insl
add
lret
arpl
lds
hlt
ret
mov
pop
pop
push
pop
in
sbb
pop
push
call
and
push
inc
xchg
out
addb
lahf
js
into
add
movsb
outsb
iret
sub
jno
or
leave
push
cmp
mov
arpl
cmp
lret
or
out
das
inc
mov
das
outsl
shll
push
or
pop
xchg
mov
pusha
mov
rorb
ss
push
sub
xor
mov
mov
data16
das
xchg
les
cmp
mov
inc
adc
sub
cs
mov
mov
sub
int3
add
sahf
sbb
pop
hlt
in
int3
std
je
pop
and
nop
jg,pn
lahf
fadds
imul
xchg
in
pop
aam
lret
shrb
dec
test
scas
cmp
xor
mov
sub
ja
mov
movsl
cmp
cmp
cltd
jecxz
lock
inc
mov
repz
mov
fwait
jg
fdivrl
mov
int
pop
xor
add
lahf
bound
ds
cmp
push
imul
test
ret
cs
jl
lret
add
adc
or
jo
adc
js
hlt
rorb
hlt
enter
aas
and
inc
push
mov
jge
or
ss
cltd
adc
push
dec
enter
loop
mov
sub
test
or
dec
faddl
or
pop
aas
iret
mov
pop
sbb
mov
es
xlat
push
sub
das
mov
adc
mov
dec
push
out
inc
xchg
das
mov
sbbl
or
gs
imul
enter
add
je
pop
add
icebp
test
mov
imul
and
shrl
gs
sub
mov
push
scas
jmp
dec
aam
or
mov
and
mov
test
xor
inc
loope
xor
arpl
cld
lret
aas
push
pop
movsb
cld
int3
in
xchg
dec
lock
test
mov
sub
mov
repz
dec
movl
lods
shlb
or
pop
in
enter
inc
jl
data16
cmp
fwait
stos
inc
xlat
mov
push
bts
hlt
inc
in
repz
push
push
mov
filds
clc
ficoms
icebp
push
popf
or
pop
das
xchg
or
xchg
fdivrp
cs
sbb
fsubs
lret
xchg
pop
xchg
xor
insb
add
sbb
mov
inc
pop
and
movsb
in
dec
sub
cli
sub
mull
popl
xor
sub
push
xchg
fs
cmp
and
je
lcall
adc
mov
in
test
imul
dec
xchg
dec
pop
cmp
mov
pop
popf
pop
lods
xchg
sbb
lret
hlt
xor
cld
push
mov
xchg
test
dec
popf
pop
repz
scas
add
xchg
idivb
mov
cld
push
scas
insb
inc
xchg
pop
ror
xchg
jns
lahf
xor
loopne
in
call
jl
sub
aas
dec
jl
cmp
and
xor
iret
mov
jno
and
loopne
adc
fmull
jns
movsb
pop
push
clc
inc
popf
pop
sub
clc
subb
scas
cltd
or
mov
sub
mov
pop
bound
mov
mov
jno
mov
mov
mov
add
in
lret
int
les
js
dec
rorb
inc
mov
icebp
bound
daa
iret
fistpll
dec
pop
les
pop
dec
jge
clc
shl
faddp
xor
push
pop
or
inc
lock
iret
int
add
push
rcr
adc
fs
gs
ja
fs
xlat
sub
out
mov
xchg
movsl
test
icebp
lahf
mov
popf
cmp
ds
cmc
repnz
sti
xchg
loope
roll
insb
ret
cltd
push
lcall
mov
test
adc
in
sub
lahf
dec
orb
lods
sub
les
std
mov
ljmp
mov
hlt
bound
cs
out
ja
mov
mov
arpl
rolb
xlat
loop
stos
imul
lods
ja
or
add
xor
bound
adc
fadds
push
rorl
push
mov
sbbb
loope
or
cmp
ret
leave
iret
jl
mov
rclb
sbb
lahf
push
repnz
adc
push
add
dec
cmc
enter
dec
andl
mov
sub
xchg
sbb
in
out
add
or
cmp
jmp
fsubrs
addr16
loope
lahf
sub
mov
xchg
xor
pusha
pop
jg
and
adc
jae
sbb
mov
mov
ret
jp
add
clc
xor
sbb
repnz
mov
insb
shlb
in
lods
cli
sub
xchg
clc
jbe
sbb
fcomps
and
xor
xchg
cmpsb
and
enter
add
fistpll
aaa
dec
adc
cmp
fidivs
mov
cwtl
jecxz
das
mov
testl
stos
lods
je
adc
fxch
dec
ljmp
pop
sbb
cmpsl
rcr
lret
into
imul
in
pop
ds
sub
cmp
lret
js
push
daa
adc
loop
fsubp
or
inc
pop
clc
lea
pop
flds
sub
adc
fld
enter
adc
flds
scas
shl
xchg
and
sub
inc
cmp
sbb
mov
fldcw
mov
jg
sub
xlat
and
mov
lcall
mov
ret
mov
aad
scas
in
repnz
xor
xchg
mov
and
add
adc
aaa
mov
lcall
mov
jecxz
stos
jns
arpl
dec
lcall
adc
inc
js
cld
gs
or
or
xchg
sbb
inc
jp
inc
mov
mov
mov
lods
and
inc
jp
dec
jnp
push
mov
call
dec
into
pop
leave
dec
orl
jno
adc
lock
ret
ljmp
rol
scas
ret
lcall
testl
addr16
mov
sbb
or
movd
mov
sbb
push
lcall
pop
ret
inc
mov
mov
sbb
pop
inc
ds
jmp
outsl
call
sub
and
getsec
xor
mov
add
out
cli
fcomip
cmpsl
add
mov
sub
push
dec
loop
sub
mov
cmp
out
popf
inc
dec
filds
sar
sbb
push
call
sbb
mov
cmp
push
ds
mov
adcb
jne
fstps
insl
inc
testl
mov
mov
fdivrl
loopne
rorl
mov
inc
ss
movsb
jns
xor
frstor
jle
jl
mov
pop
aam
sahf
lea
mov
setge
push
add
mov
fwait
add
je
sub
lcall
sbb
jb
inc
mov
fstpt
ds
cli
cmp
xlat
lods
pop
lods
js
lahf
inc
subl
cmp
mov
cmp
loop
lods
imul
je
fldcw
mov
fisttps
ljmp
inc
mov
sbb
jl
push
xchg
xchg
test
fcoms
outsl
daa
mov
test
sbb
jp
fwait
inc
clc
inc
fcompl
dec
lret
mov
push
xor
enter
cmp
xlat
cmp
dec
ror
cmp
std
and
push
jb
xchg
mov
sub
jae
stc
stc
cli
pop
pop
jle
dec
mov
pop
lock
cs
jo
outsl
xor
out
test
fisubrs
test
xchg
popa
stos
icebp
ljmp
inc
xor
and
mov
mov
into
xchg
jb
out
push
ret
aad
bound
lahf
lahf
and
dec
xchg
and
mov
repnz
das
push
call
js
dec
inc
mov
xchg
sarb
test
adc
rorb
divb
scas
mov
lret
dec
push
xchg
aam
mov
sbb
mov
mov
inc
cltd
lret
jle
jmp
imul
xchg
jecxz
jle
push
in
or
ds
dec
pop
jmp
rol
cmp
cmp
in
fsts
adc
test
push
adc
pop
aas
mov
jl
pop
or
and
cld
mov
les
scas
mov
out
test
cld
leave
pop
std
jae
or
add
shll
mov
add
sbb
xchg
cmp
pop
mov
fcomps
in
fcmovnbe
cmp
fs
and
int3
and
push
dec
add
jp
xchg
xlat
xor
pop
mov
out
xor
mov
mov
pop
xor
xor
jmp
enter
xchg
insb
push
mov
shlb
leave
mov
sbb
mov
dec
mov
and
pushf
sub
popfw
jae
out
stos
jge
push
sub
adc
jo
xor
dec
dec
pop
mov
sub
sahf
push
push
xchg
cs
je
and
arpl
rcrb
cld
mov
and
stos
mov
mov
push
daa
mov
dec
dec
lods
dec
mov
sbb
mov
xor
mov
fiadds
mov
fs
jge
dec
test
dec
mov
insb
add
sbb
xchg
sbbl
dec
sub
test
out
mov
insb
jae
add
mov
jle
lods
and
sbb
sub
mov
ljmp
mov
out
or
mov
aad
popf
xchg
out
movsl
inc
fwait
out
jb
xor
push
ret
mov
in
xor
movsl
ss
sub
mov
mov
cmp
pop
and
sbb
push
pop
mov
stos
jp
dec
adc
ret
push
ja
shll
stc
push
out
popf
int
sbb
fisubs
imul
cs
cmpsb
je
jne
fnsave
nop
in
lcall
cmp
xor
push
lcall
cmp
arpl
inc
arpl
mov
push
repnz
mov
call
insb
add
rorb
repnz
nop
fbstp
lds
es
shlb
icebp
add
movsb
outsb
adc
mov
mov
faddl
xchg
out
pop
push
push
imul
dec
sti
movsl
out
xor
lock
das
mov
inc
cmp
push
mov
cli
repz
ds
push
or
fstpt
gs
sti
icebp
xor
ds
fstl
fiadds
out
xchg
cmpsb
mov
lcall
les
mov
pop
cwtl
mov
leave
sub
push
stos
lret
fsubr
or
rcr
stc
mov
xchg
and
sub
imull
mov
and
outsb
dec
or
out
sbb
or
popa
mov
and
lods
mov
mov
mov
sahf
stos
addr16
iret
sbb
test
cld
int
dec
adc
out
fiadds
pushf
xchg
mov
push
sbb
enter
inc
test
lods
mov
cmpsb
push
fsub
cs
adc
cltd
or
mov
cmp
popf
clc
into
pop
sub
lret
mov
out
gs
xchg
adc
aas
into
push
out
mov
lods
jmp
cmc
cmc
imul
js
popf
out
flds
lret
daa
cmpsl
test
inc
xor
std
fists
add
and
lahf
fwait
mov
scas
push
out
out
add
clc
aad
mov
push
inc
xor
out
mov
or
out
jo
aam
and
test
pop
dec
fs
iret
mov
jo
pop
call
fmuls
notl
jl
lret
push
into
out
pop
push
popf
xchg
cmp
adc
sub
mov
cmpsl
sub
outsl
pop
pop
inc
xchg
mov
jmp
push
ljmp
sbb
pop
mov
mov
xor
lcall
mov
inc
pop
mov
scas
and
xor
mov
mov
dec
addr16
stos
js
shrl
mov
ds
mov
outsl
dec
leave
push
mov
in
lret
decb
leave
int3
setbe
aad
sub
or
je
mov
xor
push
xor
mov
jecxz
lds
pusha
aad
cmp
cmpsl
ds
push
jp
mov
pop
clc
and
pop
sub
xchg
xchg
gs
push
jno
xor
xchg
dec
rcl
shrb
and
cld
aam
adc
pop
test
jecxz,pt
js
arpl
mov
bound
or
mov
aaa
xchg
sub
mov
clc
loope
sbb
jbe
lret
or
and
daa
xchg
ljmp
push
into
shrl
sbb
xor
dec
sbb
xor
fstpt
cmc
and
es
and
int3
pop
ljmp
test
xor
jnp
mov
push
push
xchg
fmulp
icebp
cwtl
push
mov
mov
cld
jne
out
or
sbb
push
push
imul
push
push
sub
push
adc
mov
movsl
mov
xchg
aaa
addr16
shrl
dec
insb
or
sbb
daa
bound
xchg
pop
pop
call
outsl
mov
in
mov
jae
data16
and
xor
pop
or
cs
test
pusha
icebp
cmp
dec
inc
sbb
dec
fwait
int3
ror
inc
adc
inc
repnz
mov
outsl
lods
pop
nop
xor
shrl
loope
or
lods
lea
ror
pop
pop
dec
fsubr
cli
out
stos
jp
xchg
ljmp
rcrb
out
dec
jp
loope
adc
xchg
mov
test
stc
popf
cmp
cltd
out
test
sub
outsl
sbb
subl
loop
mov
cmp
test
add
lock
mov
inc
std
or
adc
cwtl
aam
pop
jbe
jno
aaa
repz
push
pop
adc
stc
sub
xchg
xor
mov
shll
movsl
sar
pop
mov
je
test
rcll
das
lret
cmp
aam
pop
push
movb
jne
inc
mov
xor
lfs
cmp
xchg
outsw
xor
std
shlb
and
inc
ljmp
into
cli
sbb
insb
enter
sub
lock
dec
idivb
es
mov
test
in
fwait
sub
es
pop
cmp
xchg
das
out
and
out
jmp
jecxz
mov
sbb
mov
subb
dec
sbb
shll
xchg
sub
int3
dec
in
lods
mov
jg
cmp
and
mov
inc
pusha
fistps
scas
inc
xchg
shlb
adc
pop
mov
sub
imul
dec
mov
arpl
ret
mov
repnz
or
sbb
out
xchg
jno
std
pop
mov
xor
jmp
mov
mov
sub
push
lods
mov
mov
and
mov
leave
adc
inc
xlat
popa
push
cmpsl
mov
popa
pop
call
mov
pusha
lock
dec
popa
or
fisubl
or
out
fadds
push
pop
dec
xor
aas
mov
mov
cmp
cmp
pop
dec
ret
dec
pop
lods
cmpl
call
mov
hlt
call
xchg
std
jle
cmpb
fidivl
cld
pusha
jmp
enter
in
cld
adc
and
das
aaa
fidivl
rcl
stos
adc
push
pop
xor
into
bound
insl
xor
inc
pop
cmp
stos
add
xchg
scas
adc
push
aaa
dec
add
lret
clc
xchg
pop
pop
jle
and
js
adc
mov
mov
fwait
loop
mov
inc
dec
dec
insb
xor
mov
ret
or
loopne
out
fcoms
and
dec
mov
in
das
test
in
xchg
movsl
das
jb
sbb
scas
fs
mov
xchg
out
push
and
fsubr
sub
jp
test
push
dec
or
lds
rolb
cs
sub
arpl
loop
cmpl
mov
stc
add
cmp
mov
cli
fwait
mov
cltd
xchg
mov
jge
nop
mov
pop
inc
movsb
lcall
inc
pop
sub
lret
add
pop
sub
cmpsl
cltd
xchg
and
ljmp
lods
mov
frstor
out
lods
fildl
xchg
xchg
lods
jbe
aad
inc
sbb
out
jecxz
nop
pop
imul
je
fs
pop
jecxz
mov
clc
pop
sarl
mov
jp
xor
pop
xchg
mov
jne,pt
pushf
lds
push
mov
jbe
dec
mov
call
mov
mov
mov
sbb
jne
aas
movsb
not
or
or
icebp
lahf
mov
pop
pop
pushl
jno
movl
push
pop
adc
aas
mov
movsl
mov
loope
add
push
add
add
cltd
movsl
rcll
sub
lret
scas
xchg
add
mov
mov
popa
pushf
roll
loop
mov
mov
lods
mov
fildll
sbb
addr16
fisubrs
stos
psrld
sbb
sub
loop
clc
incb
shll
mov
ss
sub
jae
addr16
or
es
jb
add
adc
fisubrl
stc
xchg
icebp
xchg
sahf
aaa
ss
mul
mov
testl
sti
pop
mov
jge
imul
inc
push
xor
addr16
imul
xlat
or
movsb
loope
mov
addr16
sub
xchg
sub
push
aad
insl
repnz
popf
mov
cmp
jo
mov
or
outsl
jne
arpl
pop
lods
popa
dec
scas
lea
jge
xchg
stos
jae
xchg
decl
push
test
sub
popa
loopne
pop
push
filds
outsl
fcmovu
es
xor
cwtl
dec
rclb
lods
push
arpl
loope
jbe
mov
jb
call
pop
and
pop
ss
xchg
fsubrl
jge
movsl
repz
stc
repnz
pop
lods
jns
cmp
andl
mov
mov
scas
call
pop
sub
lds
pop
repz
mov
sbb
inc
dec
pop
mov
adc
mov
mov
mov
inc
lcall
or
push
pop
aas
sbb
insb
jg
push
adc
ja
sarb
dec
in
adc
imul
out
addr16
jnp
and
rorb
mov
add
or
mov
or
mov
lock
sahf
pop
stos
sub
mov
std
movsl
pop
xchg
lcall
push
cmp
inc
ret
int3
jae
pushf
mov
rorl
xor
add
ds
cwtl
ds
jg
cmpsl
jecxz
push
mov
imul
icebp
mov
rolb
xchg
arpl
std
mov
mov
loop
add
dec
xchg
sbb
xor
jmp
popa
ds
mov
or
mov
or
fistpl
mov
rcll
gs
scas
out
dec
ss
dec
rorl
mov
shll
sub
repz
or
sub
dec
jnp
cld
mov
and
dec
push
lahf
jge
xchg
cmp
rcrb
andl
pop
int
fwait
stc
xor
leave
pop
xor
jmp
xchg
xchg
popa
and
and
xchg
std
ljmp
sahf
shll
fldl
loop
int3
nop
cmpsl
dec
mov
cmpsb
lret
imul
pop
lret
pop
adc
mov
jno
int
std
icebp
dec
test
sbb
out
and
xor
dec
mov
inc
test
jecxz
imul
jo
dec
mov
in
movsl
adc
mov
faddl
mov
mov
mov
pop
jne
jbe
ficoml
pop
jns
xor
xchg
xchg
or
jno
fldl
adc
mov
ja
les
lock
ret
out
mov
pop
jnp
xchg
insb
pop
pop
cmc
mov
xor
sub
lret
subb
mov
or
push
in
mov
jns
mov
cmp
clc
sbb
sub
inc
fldl
sbb
dec
and
out
cmc
jge
xchg
mov
sbb
out
cmpsl
popf
or
or
pop
mov
pop
movsl
add
fwait
and
dec
mov
add
popf
sub
sbb
add
cwtl
mov
popa
push
call
add
and
dec
mov
mov
icebp
fcoms
sbbl
add
je
inc
gs
jns
inc
inc
enter
or
lahf
xorl
in
and
lock
mov
cld
cmpsb
dec
pop
into
mov
cmp
mov
xchg
sarb
push
popa
xchg
shr
jo
stos
adc
push
loope
xor
js
cld
or
jl
adc
pusha
clc
adc
faddl
fstps
jle
rcl
into
notl
mov
mov
lret
dec
shlb
and
in
loope
js
stos
inc
adc
sbb
das
pop
aam
cwtl
xor
xchg
push
test
add
mov
mov
test
sbb
pop
adc
inc
mov
leave
or
pop
mov
jmp
mov
outsl
shrb
dec
xor
rcr
cmp
sarb
int3
in
add
out
xchg
jp
es
mov
pushf
xorl
cmp
ret
jmp
inc
mov
inc
fcos
outsl
inc
aas
or
in
dec
outsl
lds
push
jne
sar
pop
inc
inc
mov
repz
or
sbbb
sbb
test
lcall
lea
and
mov
repnz
cmp
ljmp
in
and
lahf
adc
jmp
dec
push
pusha
lret
inc
jns
das
stos
push
stc
xchg
fs
pop
cmpsl
xchg
push
nop
pusha
in
popa
pop
fmuls
mov
pushw
mov
idivb
or
jbe
ja
pop
add
js
arpl
insl
sbb
or
adc
bound
packuswb
xchg
add
add
add
mov
enter
fldt
pop
in
test
mov
cltd
mov
jno
in
and
mov
sub
lods
out
jbe
inc
and
cmp
add
jo
mov
mov
mov
dec
repnz
jnp
lods
or
dec
or
movsb
sarb
repz
xchg
repz
addr16
jmp
sbb
xchg
mov
into
stos
pop
add
xchg
mov
inc
push
or
pop
add
cmpsl
int
std
lock
mov
imul
and
lret
sbb
sub
sahf
adc
mov
nop
and
and
fadds
sti
addb
or
push
test
push
jmp
mov
vmovupd
sbb
sub
xchg
mov
fists
and
xor
push
imul
mov
in
mov
jecxz
push
jne
mov
pushf
idivb
mov
fisttpl
jno
mov
dec
inc
inc
enter
mov
lea
aam
in
nop
or
mov
in
cmpb
adc
pop
pop
popa
pusha
sahf
je
inc
inc
imul
call
nop
loope
sbb
and
adc
sbb
dec
cs
imul
in
add
repnz
pushf
out
push
popl
pop
sub
push
sbb
into
push
scas
xchg
popa
sub
mov
int
xchg
test
push
bswap
lcall
xor
mov
shlb
inc
and
cmp
fsin
dec
clc
cmp
jmp
and
sbb
mov
ror
push
fwait
loopne
out
xor
mov
cmp
sub
cmpsb
add
sub
sbbl
sub
or
lock
insb
dec
addr16
in
jg
mov
pop
clc
xchg
repnz
mov
adc
in
sbb
clc
add
lock
jns
gs
inc
pop
pushf
adc
lods
xor
push
scas
ja
push
jne
insl
loope
lret
jno
pop
inc
popl
jbe
xchg
or
stos
je
push
pop
test
mov
push
jbe
push
xor
rol
and
xchg
push
adc
outsl
gs
fldl
int3
fwait
or
or
rcll
or
insb
xor
test
sub
push
outsb
das
outsb
cmpsl
add
ret
ja
inc
mov
inc
fcmovnu
mov
sbbl
popf
clc
imul
fnstenv
sbb
lcall
inc
adc
cmp
xor
inc
mov
test
pop
pop
adc
xchg
into
fld
sub
sub
cmpsl
sbb
sbb
sbbb
in
stos
mov
sbb
in
jmp
cwtl
loop
xor
dec
in
mov
aam
aam
cwtl
cmp
jl
fs
xor
ret
sarb
popa
mov
push
test
pop
xchg
dec
push
stos
aam
imul
in
imul
test
roll
dec
out
shlb
sub
sub
cmp
test
inc
popf
popa
push
ror
lods
shll
xchg
test
push
sbb
mov
or
sub
cmp
or
jl
jle
jg
inc
imul
jp
dec
pop
pop
xor
fistpl
adc
imul
xchg
jo
test
cmp
mov
pop
stc
insb
mov
leave
jno
xlat
cmpsb
out
mov
cmp
cwtl
rcrl
test
aaa
lahf
mov
inc
mov
jo
jecxz
or
ret
xchg
add
inc
lods
int3
les
mov
add
lcall
repz
pop
clc
push
xor
rcpps
xchg
cmp
inc
add
inc
jne
or
adc
shll
loopne
xlat
pop
xor
jmp
and
mov
icebp
leave
ljmp
and
adc
insl
movsl
mov
mov
sub
mov
mov
jl
imul
inc
ja
mov
lds
imul
mov
stos
mov
mov
lods
jno
scas
jp
push
fnstsw
adc
scas
xor
and
sub
xchg
cmp
adc
cwtl
adc
rcl
inc
outsl
adc
int3
in
sbb
mov
mov
mov
adc
or
cltd
or
movsl
int
leave
fsubs
popa
mulb
aas
mov
dec
sbb
and
addr16
xchg
pop
imul
stos
jl
movsl
dec
mov
or
mov
jecxz
cwtl
push
sbb
jb
leave
and
pop
lock
jle
out
cltd
push
popa
fiadds
push
mov
dec
ds
rcr
cmp
sub
sbb
roll
and
pop
movsl
add
mov
orw
sub
je
cmp
je
sbb
xchg
leave
in
lret
jns
jge
fisttps
notb
rdtsc
mov
xor
push
sahf
xchg
mov
jno
out
test
or
loop
sub
and
addb
mov
jecxz
pop
test
je
xchg
jbe
jge
push
cwtl
icebp
pop
xlat
dec
ret
nop
out
insl
inc
add
shlb
mov
and
xchg
push
gs
loopne
push
xchg
mov
cmp
xlat
push
std
movsl
sahf
pop
mov
cmp
in
push
dec
xor
sbb
iret
lock
and
pushf
adc
movlps
add
or
or
mov
mov
iret
inc
or
sub
cltd
std
jmp
jle
and
mov
lret
mov
jmp
or
inc
jns
jmp
sub
adc
cs
jbe
jecxz
xor
jns
sub
sub
out
out
jbe
inc
fidivs
xor
add
lahf
or
das
sbb
repnz
orb
ds
cmp
mov
xor
fwait
pop
pop
shr
add
cmpb
mov
sbb
sbb
push
sub
sub
imul
add
xchg
jnp
mov
mov
insl
divb
push
jle
pop
repz
repz
test
xchg
push
pop
add
mov
out
jmp
xor
inc
pop
mov
sub
fbstp
mov
hlt
xor
inc
sub
in
mov
into
scas
mov
adc
push
sbb
aad
inc
stos
adc
sbb
sbb
mov
sahf
popa
je
and
stc
add
sub
pusha
xor
pop
mov
sbb
clc
rorb
and
data16
xor
ret
ss
adc
mov
xor
out
daa
imul
movsl
dec
xchg
cmc
push
and
mov
and
xorl
je
pop
pop
fwait
xor
int
push
pop
xor
cmp
fwait
pop
jns
test
je
adc
push
call
mov
cmp
das
cmp
add
push
fdivrs
rcrb
notl
nop
pop
and
movsb
cmp
sbb
mov
jae
and
xchg
sub
xchg
fmuls
sub
les
repnz
insb
dec
xchg
dec
loop
icebp
sbb
fbld
dec
in
call
xorl
aaa
sub
mov
add
js
sub
lock
push
pop
outsl
cltd
lret
mov
cli
cltd
and
scas
lods
push
ja
ret
cli
push
lods
shrl
xor
or
mov
and
and
pushf
push
das
lods
or
sub
les
scas
inc
mov
pushf
cwtl
inc
icebp
mov
dec
push
pop
mov
dec
lahf
xor
push
out
ja
dec
dec
mov
or
adc
inc
insl
mov
popf
pop
push
mov
test
cmp
faddl
call
xor
or
pop
insl
ss
or
sti
cmp
icebp
test
in
add
adc
mov
dec
cltd
arpl
jle
dec
das
insb
stos
in
jno
mov
dec
mov
mov
add
into
into
ret
lcall
pop
outsl
xor
mov
mov
stos
jp
xchg
shrb
mov
xchg
test
dec
pushf
out
mov
lods
test
xor
sub
daa
das
mov
pop
shlb
loopne
cmp
push
sbb
pop
xor
insb
and
shrl
ljmp
aam
sbb
stos
bound
lahf
push
pop
push
inc
inc
mov
jns
into
icebp
mulb
jg
dec
js
scas
xchg
lcall
fs
int3
xchg
inc
and
js
cwtl
sub
mov
movl
inc
jno
jmp
xor
or
aad
loopne
pushf
xor
push
xchg
sub
xchg
out
inc
jl
idivl
fadds
xchg
jns
gs
cmp
in
push
dec
cmpsl
push
inc
out
in
aaa
fcom
mov
jmp
add
cmc
aad
out
and
sub
lea
mov
shrl
rclb
lods
int
add
je
or
pop
movsb
add
cmp
xor
push
push
ret
sbb
push
cmpsb
lret
dec
sbb
pop
jno
xor
fcomp
rorb
cs
add
test
nop
stos
dec
in
xchg
adc
and
aaa
arpl
icebp
jo
mov
pop
shlb
mov
sahf
movsl
int
push
and
jp
cmp
les
movsb
cli
jbe
cmpsl
pop
out
xorl
fldt
xchg
jmp
push
mov
int
or
xchg
sub
pushf
xchg
bound
out
je
jge
or
fnstsw
mov
jo
scas
js
outsl
lds
push
mov
xchg
and
mov
in
loop
or
mov
pop
mov
mov
fsub
or
insl
daa
outsl
push
xchg
scas
rcpps
mov
dec
out
inc
pop
lret
repnz
mov
add
push
in
sbb
or
fsubl
int
je
mov
decb
mov
test
test
repnz
ljmp
sarl
mov
inc
mov
fnsave
sbb
lahf
jae
sbb
add
adc
mov
push
push
mov
out
lds
test
xor
ret
test
ss
fstpt
js
mov
adc
cmpsb
mov
scas
jnp
lret
jmp
inc
cs
lcall
ret
xor
xchg
addr16
mov
je
fsubl
lods
push
jo
xor
inc
rcll
dec
mov
cmpsb
out
jae
mov
adc
decb
push
add
in
pop
mov
jecxz
xchg
mov
outsb
adc
xchg
and
xor
add
sar
pop
mov
mov
sub
ret
push
mov
add
test
ficompl
xor
push
push
in
xchg
mov
add
pop
mov
push
xlat
jle
ss
fisubs
lret
sbb
mov
lock
xchg
dec
test
xchg
fsubrs
xchg
jge
jle
xchg
pop
fidivl
and
xchg
loope
push
js
ljmp
jnp
sbbb
add
out
jmp
sub
adc
cmp
cmpsl
das
cmpb
dec
in
daa
sbb
sub
jne
ss
xchg
pop
inc
mov
jbe
cmp
sub
and
andb
cltd
mov
in
push
out
mov
in
pop
or
or
mov
lcall
shl
cmp
loope
rolb
loopne
enter
scas
ret
stos
jbe
fmuls
int3
sub
add
sbb
daa
fiadds
insb
xor
push
call
leave
sub
fstl
outsl
and
mov
lods
test
mov
dec
jg
push
rcll
xchg
imulb
lahf
xchg
fstl
fs
mov
mov
into
mov
popfw
sub
jae
sahf
insb
in
pop
dec
add
push
jb
and
lea
lret
or
int3
jne
rcll
or
outsl
movsb
push
push
sub
add
and
imul
xor
popf
lods
iret
scas
loopne
push
daa
cmpsl
mov
aaa
sbb
xchg
dec
lret
jbe
jle
test
push
pop
mov
or
push
mov
divl
mov
inc
pop
adc
jns
pop
xlat
pop
pop
bound
out
and
std
hlt
and
xor
mov
jbe
in
insb
lods
add
and
push
idiv
jg
mov
jecxz
lds
cmpsl
pop
mov
lea
mov
mov
lods
sarb
aad
mul
popf
stos
xchg
nop
test
pusha
andl
push
push
movsb
cmpsb
push
nop
das
mov
cmp
pusha
shrl
xor
fwait
popl
ja
loopne
mov
jnp
movl
ja
dec
or
aam
les
add
xchg
dec
pop
or
outsb
incb
fisttpll
xchg
cmp
mov
sbb
cli
xor
inc
cmpl
and
dec
pop
sti
sbb
shrl
fsubl
mov
and
add
jp
ljmp
pop
jge
pop
aad
lea
inc
sbbb
stos
inc
int3
push
jns
pop
mov
jb
sbb
mov
jne,pn
adc
push
jmp
nop
mov
mov
idivl
ss
inc
mov
fdivrl
inc
sub
or
xor
imul
jae
mov
xchg
mov
fadds
sub
pop
fiadds
repnz
lds
fdivl
orb
subl
std
add
cmp
inc
dec
add
stc
shrl
das
je,pt
cltd
int3
je
push
hlt
jns
ror
lds
cmp
nop
ret
mov
out
add
mov
add
xchg
cmpsl
aaa
push
mov
add
and
cmpsb
jl
div
sbb
jb
jp
mov
xchg
jnp
xchg
sub
in
sub
inc
shlb
sti
fwait
and
sbb
sub
push
out
inc
ss
and
xchg
test
popf
sbb
or
notl
lods
push
call
fwait
andl
mov
sti
mov
scas
pop
fdivrl
les
mov
into
push
cmp
lret
loopne
aas
mov
imul
mov
jmp
inc
add
jg
js
jns
bound
fwait
loope
push
les
outsl
test
repz
mov
pop
int
push
nop
pop
insb
mov
inc
out
jne
adcb
insb
cmpl
negb
shll
xor
dec
mov
jmp
loopne
add
sbb
imul
push
or
stc
mov
dec
call
int3
aad
mov
fs
cmc
or
movsl
ja
push
adc
inc
cmpsl
nop
jmp
rolb
push
and
in
lahf
scas
mov
data16
dec
and
lahf
jge
pushf
xor
test
ret
adc
es
in
xlat
outsb
xchg
adc
dec
lahf
ljmp
enter
outsl
mov
dec
es
pop
push
xchg
es
xchg
add
cs
es
cld
mov
sbb
xor
and
jl
data16
inc
mov
jno
lret
xchg
scas
inc
lcall
stos
lods
movb
sub
pop
and
mov
inc
imul
push
orb
dec
jg
sub
inc
lds
inc
daa
lods
push
insb
cmp
fdivl
test
jnp
hlt
jp
sbb
cmp
dec
call
mov
ror
xlat
jnp
insl
je
call
ret
push
iret
or
inc
pop
pusha
ja
test
dec
push
test
movsb
lret
in
mov
pop
pop
mov
mov
loope
jbe
xor
imul
sub
and
imul
or
je
mulb
jle
daa
pop
imul
iret
jmp
jl
pop
in
inc
jae
add
adc
cmp
sbb
mov
pop
adc
bound
mov
scas
dec
lods
cmp
and
add
mov
push
aad
outsb
xor
mov
inc
push
jecxz
cmc
fs
lahf
lret
mov
jmp
orb
xorb
xorb
jb
mov
jb
add
sbb
xchg
lock
lock
insb
mov
jb
adcl
add
js
push
in
pop
jmp
hlt
adcl
mov
lret
and
test
mov
lods
jo
outsb
js
arpl
outsb
mov
iret
inc
pop
shr
mov
ljmp
movsl
in
and
sbbl
pop
orb
insl
in
mov
jbe
shll
mov
sub
push
dec
mov
loop
bound
js
push
je
jb
fisttps
sbb
or
in
pop
lahf
inc
or
test
add
inc
insb
pop
xchg
xor
inc
test
xchg
mov
pop
lock
mull
sti
push
idivb
leave
inc
xchg
sub
sbb
inc
mov
shll
and
lret
data16
mov
cmp
repnz
loopne
cmp
fs
ret
mov
or
out
dec
cli
mov
int3
mov
ds
and
sbb
leave
cld
cs
push
pop
clc
cld
in
pushl
mov
add
jge
and
jmp
jnp
out
popa
ljmp
arpl
xchg
les
pushw
in
stc
pop
rcll
and
sbbl
cwtl
xchg
dec
mov
xchg
fldenv
mov
adc
adc
push
jbe
rorb
add
jo
inc
gs
cltd
cmp
mov
aam
daa
push
jl
mov
fimuls
sub
lea
pusha
xchg
aas
sub
outsl
lea
jnp
aad
pop
or
inc
aad
mov
xchg
mov
scas
mov
lret
into
xchg
fidivrl
insb
sbb
pop
lods
imul
ror
push
test
inc
mov
leave
std
in
cmpsb
adc
test
jmp
inc
cmp
mov
pop
orb
jnp
bswap
xchg
daa
jl
cwtl
mov
pop
sub
pop
in
pop
out
jno
jg
and
or
pavgb
mov
lods
fbstp
imul
enter
push
in
loope
sub
xchg
das
out
and
pop
movsb
jmp
imul
push
inc
imul
gs
sub
pushl
or
cmpsl
sbb
ret
dec
lahf
pop
mov
inc
or
jp
jno
mov
mov
xor
jae
pop
sarl
repnz
jmp
out
filds
fwait
cmp
aam
rolb
mov
push
aam
fsubp
and
repnz
ds
loop
and
dec
xor
sbb
xor
lods
mov
push
mov
int3
adc
adc
int
fnstsw
loopne
ja
mov
lods
and
sbb
mov
sbb
iret
xor
xor
adc
movsl
sub
movsb
jl
scas
mov
dec
push
sbb
in
cmp
rorl
dec
lahf
aas
iret
mov
sub
push
into
les
inc
xor
pop
mov
inc
repz
insb
cs
mov
fnstsw
call
movsl
jb
ja
mov
cmove
jmp
ds
mov
sahf
in
les
mov
inc
popf
sub
adc
sub
fcomi
loope
in
push
aaa
out
pop
subb
lock
repz
mov
adc
mov
and
das
push
gs
mov
fcmovne
insl
cmp
int
dec
pusha
add
fcmove
push
inc
and
xor
rorl
push
sbb
ret
std
jbe
mov
lret
mulb
nop
mov
dec
sti
sub
in
insl
iret
adc
sub
enter
jge
lahf
sahf
mov
jb
pusha
stos
aam
ret
jecxz
push
ds
dec
or
test
xor
lret
js
mov
push
scas
pop
in
xor
xor
mov
fadds
out
push
fcmove
fldt
out
lret
jle
cmp
and
test
sbb
divb
adc
pop
mov
xorb
or
add
dec
add
cmp
dec
mov
aad
iret
mov
sbb
push
and
or
lea
stc
loopne
mov
add
decb
push
xor
nop
fcoml
pop
or
aaa
push
outsb
push
add
push
mov
scas
cs
push
movsl
mov
push
mov
test
sbb
adc
adc
aam
testb
inc
and
loopne
xchg
fmulp
inc
adc
out
icebp
lahf
and
push
sbb
push
push
pushf
dec
push
negl
jmp
jno
cmp
dec
popa
and
xchg
push
and
inc
dec
lock
lahf
outsl
sahf
push
imul
mov
mov
sbb
push
add
int
mov
mov
sbb
orb
scas
sbb
sti
dec
sbb
xchg
ja
or
pop
dec
hlt
add
jno
lret
shl
imul
dec
add
sub
jg
fsubr
mov
add
in
mov
mov
and
pop
xchg
inc
and
maskmovq
imull
sbb
dec
dec
out
push
pusha
pop
jo
loop
fucom
lcall
inc
int
jbe
and
push
pushl
adc
adc
in
or
sbb
xchg
popa
mov
xchg
cli
mulb
in
jl
dec
inc
mov
js
fdivrs
mov
addr16
popa
xor
in
dec
das
jp
das
sbbb
mov
pop
or
es
mov
jns
inc
cli
ljmp
mov
mov
sarb
pop
sub
int3
repz
xchg
mov
sbb
mov
call
or
imul
rcl
dec
mov
mull
push
and
cld
enter
jo
cmc
js
loopne
xor
cmc
rorb
sar
bound
ljmp
and
dec
sub
jle
mov
sahf
cmp
dec
pop
aaa
scas
xchg
stos
add
mov
addr16
pop
and
scas
scas
fists
sub
dec
add
add
lcall
inc
xchg
in
roll
or
push
and
add
and
andl
aad
insl
movsl
in
shll
inc
repnz
xor
outsb
pop
cmp
mov
inc
push
fwait
cmp
dec
int3
mov
ret
push
iret
addl
mov
std
dec
cmc
shlb
add
sbb
loope
mov
addb
fs
pop
mov
bound
int3
test
pop
scas
imulb
and
sahf
xchg
cmp
xor
inc
adc
dec
sub
jae
inc
xchg
push
aaa
cmc
sti
jle
cwtl
fidivl
pusha
xchg
scas
stos
mov
mov
arpl
cmc
add
mov
test
jo
out
loop
jmp
lods
xchg
push
mov
sub
ror
adc
xchg
add
cmpsl
daa
adc
imull
pop
mov
dec
test
mov
mov
popf
bts
roll
adc
pop
out
jmp
test
insl
fldt
dec
dec
js
data16
pop
sbb
aad
repnz
rcrl
inc
es
loop
push
repnz
xor
int
or
ja
out
in
lcall
mov
iret
test
mov
dec
sahf
xlat
pushf
add
xchg
shrl
push
push
subl
inc
aam
jne
cli
jp
lret
mov
ror
negw
in
ja
jns
pop
cmp
jg
andb
ja
fdiv
lods
and
rcl
pop
lcall
popl
shlb
xchg
xlat
pushf
xchg
pushf
loope
inc
cmovnp
push
sbb
and
cmp
sub
add
gs
pop
pop
mov
out
xor
scas
addb
mov
sti
xorb
fsubs
pop
jo
in
scas
pop
sub
mov
mov
es
push
inc
clc
mov
arpl
loopne
cmp
xchg
div
into
test
js
sub
loopne
sub
dec
xor
dec
sbb
dec
sti
xlat
or
fldt
mov
jmp
sub
fs
mov
cmp
fwait
repz
or
stos
hlt
adc
jmp
push
xchg
fisttpll
xchg
jl
jb
outsb
sbb
mov
movsl
pusha
push
out
fcmove
loopne
pop
jae
fisttpll
in
or
iret
insl
pop
xor
in
inc
dec
iret
jnp
cmc
rcll
ja
cmpl
aas
imul
mov
mov
addl
imul
dec
jbe
pop
in
sub
divl
pop
inc
loop
add
mov
add
lret
mov
sbb
cmp
push
dec
dec
call
lods
pop
cmc
jo
add
sub
out
add
or
pop
js
dec
sub
xorl
gs
jmp
ja
xchg
stos
jbe
test
push
mov
stos
shll
and
adc
pop
dec
ror
loop
push
cld
dec
mov
ja
and
insb
je
idivb
mov
in
jg
cmp
cmp
outsl
pop
sbb
test
cmp
mov
and
cmp
xchg
les
sub
shll
add
repz
dec
sbb
dec
out
adc
je
cmp
dec
sbb
mov
xchg
int
inc
dec
add
mov
cmp
jne
sub
mov
mov
scas
push
enter
push
pushf
es
repnz
xchg
rorb
jno
push
xchg
lods
dec
sbb
or
ret
mov
sbb
lcall
scas
or
dec
mov
sbb
inc
mov
dec
arpl
add
mov
xor
mov
mov
sub
mov
repnz
sbb
ret
ja
pop
xlat
adc
addr16
and
out
cmpsl
mov
jo
mov
je
ja
dec
imulb
inc
movsl
fs
adc
enter
inc
daa
fidivrl
call
cmp
lds
fcoms
rcrl
shll
cmp
jbe
call
cltd
test
lret
fistl
je
pop
nop
sbb
sbb
aad
rorb
fnsave
out
fistpl
jne
shr
daa
nop
dec
jo
pop
push
xchg
fsubrl
xchg
mull
jg
push
xchg
mov
jl
and
inc
repnz
cld
cmpb
aam
jl
scas
fwait
mov
xchg
push
int
sub
in
cmpsl
leave
lret
mov
fcoml
shl
loope
ja
leave
sbb
incl
and
jno
pop
outsb
lods
sub
fmull
cmp
shlb
pop
sbb
loop
add
mov
xorb
xor
dec
inc
fwait
adc
es
or
outsl
pop
hlt
es
sbb
pop
into
jmp
call
or
cmc
lret
test
shrl
dec
adcl
mov
popf
pop
pushf
cwtl
dec
fbld
negb
enter
stc
xor
ja
jg
aam
mov
mov
mov
and
pop
repz
sub
mov
xchg
fiaddl
fmul
inc
insb
sbb
sub
jp
lods
xchg
std
cs
mov
xchg
add
addr16
adc
dec
mov
xor
jae
dec
sub
mov
jnp
pop
push
imul
mov
xchg
xchg
and
push
lret
mov
movsl
rorl
pop
cwtl
push
lds
cmc
cmp
sub
rep
and
mov
int3
aam
or
xlat
hlt
jmp
add
aam
jb
lods
xchg
sbb
insb
in
nop
dec
outsb
pop
repz
insb
mov
es
mov
loopne
jmp
stc
pop
int
js
push
xor
xor
cmc
cmpsl
mov
jbe
mov
push
lret
das
jb
into
cmpsb
test
in
pop
pop
lret
jns
or
mov
sbb
lahf
aad
cmp
outsl
ds
jp
push
jnp
push
sbb
cmp
cltd
popa
aad
loope
fsubp
mov
cmc
stc
pushf
or
mov
aad
inc
movsl
es
mov
xchg
jg
inc
jne
and
aad
movsl
ret
cmp
out
push
add
data16
inc
jno
nop
xchg
out
jge
cmpsb
mov
lcall
xor
mov
out
mov
dec
cmp
dec
push
iret
sbb
out
and
add
add
cmpsl
adc
or
test
push
rcrb
jno
or
mov
popa
mov
gs
inc
aam
out
inc
nop
arpl
push
les
jne
cmp
andl
pop
int
movsl
movsl
add
push
pop
cli
push
lret
test
mov
aaa
fnstenv
call
addr16
leave
test
push
fiadds
push
cmp
shr
and
fdivrl
xor
insl
add
aaa
inc
mov
sar
out
inc
test
lea
decl
rcrl
xchg
mov
popf
imul
xchg
nop
xor
movsb
xor
mov
jecxz
pop
call
add
jg
push
pop
mov
adc
cmp
adc
mov
and
and
xorb
mov
fldenv
loop
aaa
mov
lahf
inc
jo
jp
push
dec
hlt
sti
adc
call
test
repz
sarb
mov
or
lahf
xchg
out
int
stc
pop
cs
pop
inc
pop
adcb
out
pop
mov
ss
xor
decb
daa
push
cmpsb
and
ja
sahf
popa
jo
xor
adc
jnp
fstps
cmp
outsl
cmp
sub
dec
lods
adc
and
xlat
in
jb
adc
repnz
movsl
fstl
jecxz
push
push
dec
stos
mov
adc
fnstsw
mov
frstor
cmpb
mov
lock
loop
push
imul
mov
loope,pt
loope
mov
jl
iret
mov
xchg
xlat
add
mov
enter
dec
ja
ret
push
jmp
std
jo,pn
inc
pop
pop
cmp
add
out
je
jle
outsl
lock
and
sti
out
sti
mov
inc
adc
xchg
jp
out
fdivrp
pop
into
mov
pop
ret
stos
sbb
mov
ljmp
nop
iret
sbb
mov
pop
cs
dec
jae
jmp
mull
sub
push
mov
movsb
int3
imul
stos
shr
xor
pop
pop
aam
push
icebp
bound
jmp
pop
sbb
bound
arpl
jo
cmpl
aas
ss
xchg
jno
loop
inc
jo
inc
and
xor
push
adc
xchg
test
insl
scas
shlb
insb
push
shrb
pop
dec
gs
and
rorb
mov
sbb
mov
pop
and
xchg
inc
pop
rcr
jle
enter
xor
imul
jl
sbb
mov
fwait
push
sub
pop
adc
adc
jae
test
and
pushf
addr16
jno
les
cld
sbb
loope
data16
cs
insb
pushl
fisubs
lods
or
jle
mov
pop
jb
addb
and
adc
dec
jecxz
and
jno
mov
jne
je
fsubp
adc
cmpsb
lret
leave
add
push
call
and
shrl
xor
cmp
nop
addr16
rcrb
or
or
push
popa
into
pop
mov
ja
inc
or
sbb
xchg
inc
jne
or
push
push
cmpsl
xchg
enter
in
insb
xchg
inc
or
sub
mov
dec
pop
or
mov
xchg
icebp
lods
cs
dec
add
and
mov
sbb
imul
daa
stos
insl
lock
imul
push
stos
add
push
lea
lods
out
add
testl
cwtl
and
xchg
add
stos
xor
es
aas
dec
movsl
add
cmp
shrl
xchg
aaa
shll
scas
jmp
dec
stos
sub
sbb
sbb
mov
pop
gs
push
pop
mov
pop
and
xor
and
outsl
xlat
or
push
aaa
xchg
int
and
sar
pop
in
inc
test
push
dec
jge
psrlq
sahf
dec
test
mov
push
xchg
insb
mov
dec
test
or
and
or
mov
stos
sub
scas
cmp
jp
sahf
aad
sub
mov
std
and
lahf
cmc
and
popa
ret
or
sbb
notl
aad
and
in
sbb
xor
dec
dec
cli
xchg
cltd
sbb
xlat
jnp
mov
loopne
pop
inc
outsb
add
and
ss
push
xor
mov
iret
jnp
cmp
fildl
cwtl
mov
and
rolb
jo
mov
popf
loop
out
stos
dec
cmp
push
push
insl
adc
test
shll
addr16
gs
jg
pop
adc
cmpsb
sbb
test
pop
popf
call
cmp
mov
out
ret
ljmp
loopne
mul
add
es
addr16
jmp
dec
js
fimull
pop
mov
outsb
mov
add
ret
mov
ss
push
lea
jne
iret
adc
adc
lods
jp
dec
call
mov
lock
dec
dec
cltd
mov
jo
js
push
push
js
inc
add
xlat
out
add
jnp
call
or
pop
icebp
adc
push
jg
lds
adc
jno
fcomi
or
ret
arpl
xor
mov
add
and
cmp
push
adc
lret
dec
inc
xchg
or
cwtl
mov
roll
movsl
out
pop
or
adc
xchg
sbb
cmp
inc
xlat
sub
inc
test
push
push
jbe
xchg
movb
mov
in
lea
mov
daa
stc
mov
push
cmp
jmp
fs
sbbl
xor
add
mov
cmp
inc
in
daa
add
inc
push
jl
arpl
add
pop
loop
outsb
adcb
fs
mov
add
stos
mov
xchg
push
int
and
push
ljmp
call
sub
push
pop
std
jne
aad
jno
mov
lret
test
enter
rolb
inc
and
pop
dec
mov
push
pop
inc
sbb
movsb
cmp
loope
test
lcall
inc
inc
inc
sub
mov
addr16
jbe
std
aad
popa
sbb
add
sbb
cmpsb
inc
and
inc
clc
sbb
cwtl
xchg
cmp
pop
mov
lret
cli
mov
or
fisubl
test
xchg
or
fscale
pop
mov
or
int
sub
stos
sbb
pushf
mov
cltd
inc
xor
sti
icebp
sarl
cmpsl
cmp
sbb
add
push
outsl
into
sahf
jnp
outsl
push
push
mov
int
es
push
mov
push
aad
lret
dec
rorb
aam
xorb
sbb
mov
jne
stos
cmp
rol
add
mov
and
in
dec
rolb
data16
pop
pop
popa
xchg
adc
and
enter
gs
or
or
adc
stos
pop
mov
pop
pop
mov
ret
jp
enter
lret
icebp
cld
xor
jg
add
aad
adcb
jmp
sub
xor
fldt
lcall
ljmp
cmp
and
pop
cmpsl
in
cmp
fidivrl
sti
cmpsb
cmp
cmp
daa
or
pop
add
mov
pop
fsubrp
xor
lret
or
cmpsl
adc
push
cmp
cmpl
repnz
les
mov
iret
rcl
xchg
sbb
dec
mov
out
mov
hlt
pop
dec
loope
adc
mov
sub
mov
sub
sub
insb
fmul
mov
mov
into
push
or
mov
test
lahf
push
lret
je
nop
push
mov
into
cwtl
push
add
and
icebp
mov
cmp
add
cs
lcall
xor
ljmp
out
popf
push
jb
and
loope
lahf
xor
sbb
add
aad
mov
push
sarl
pushf
xchg
mov
cwtl
out
in
loop
sub
sti
push
fbld
pop
mov
arpl
scas
cs
test
subb
sub
test
dec
das
push
arpl
and
cli
lret
mov
inc
mov
or
adc
mov
lret
addr16
clc
outsb
ljmp
inc
push
cmp
pusha
adc
or
aam
mov
popa
lds
fucomi
aaa
fldenv
add
inc
outsl
imul
andb
pop
mov
fiadds
cmpsl
repz
ja
sbb
aad
inc
lret
sbb
xchg
xchg
and
popf
adc
lds
mov
fucomip
gs
fldl
popl
daa
stc
adc
xchg
jge
fwait
aaa
or
out
loopne
inc
lret
or
rolb
pop
mov
jae
dec
in
inc
hlt
call
push
mov
add
xor
sub
pop
clc
pop
xor
push
shlb
inc
ja
pushf
mov
inc
pop
mov
daa
bound
dec
push
mov
adc
xchg
cmp
sbb
mov
lret
mov
mov
mov
xor
xchg
inc
or
adc
sahf
sbb
mov
arpl
mov
sub
dec
push
or
jge
add
adc
push
out
inc
xlat
jo
inc
add
shl
shll
cmp
xchg
in
sbb
orl
fcmovu
fs
dec
lcall
xchg
push
bound
out
outsb
sbb
mov
cmp
mov
or
adc
fwait
insl
jae
jns
adc
aam
mov
mov
xchg
mov
fwait
movups
mov
sarb
nop
adc
mov
add
add
inc
mov
mov
mov
mov
mov
add
cmp
mov
jae
push
fstps
adc
popa
nop
popf
imul
fwait
xchg
adc
jmp
add
push
pop
jo
ret
mov
jns
xor
dec
pusha
jg
addr16
out
arpl
jo
mov
push
sub
sbb
and
stos
cmp
enter
inc
les
test
mov
movsb
add
sub
or
pop
test
cld
or
fnstenv
out
imul
mov
mov
js
into
test
push
inc
test
xchg
outsb
or
jle
jns
clc
cs
inc
test
xor
pusha
cld
dec
xchg
lods
xchg
out
pop
mov
popf
or
mov
xlat
sub
stc
aaa
sub
xchg
xor
flds
push
out
cltd
pusha
xchg
push
xchg
sub
xor
xchg
sub
sub
xchg
push
stc
fs
lods
push
lcall
loopne
pusha
aam
and
adc
cmpsl
or
leave
jp
jmp
sar
pop
pop
dec
test
iret
jl
dec
sbbl
jno
pop
aas
in
ret
shll
pop
in
mov
outsl
push
addl
in
pop
jbe
imulb
inc
cld
pop
push
dec
inc
popf
fsubp
push
push
sub
inc
fistl
hlt
loope
add
jae
push
add
mov
dec
cmp
fdiv
mov
or
and
insb
ret
sub
in
addl
popf
mov
loope
call
or
mov
nop
stc
cs
loop
jl
lds
rcll
loopne
in
mov
pusha
ds
or
add
pop
shrb
hlt
clc
js
push
sbb
push
and
dec
iret
mov
push
pop
jg
lea
jne
fisttpl
lahf
push
or
or
in
jl
pop
out
repnz
hlt
xchg
jno
dec
call
mov
sti
icebp
clc
iret
rcll
mov
mov
xchg
push
out
mov
xorb
hlt
mov
pop
icebp
insb
sbb
sub
in
repz
add
xchg
out
inc
call
push
push
xchg
xchg
dec
jge
popf
sub
adc
fcoml
adcb
jns
cmp
xchg
push
push
int3
ret
cld
sbb
adc
jno
test
push
fadd
sbb
sti
fst
das
scas
adc
mov
popf
cmp
mov
ret
push
dec
addr16
lods
test
adc
lods
jb
sbb
mov
pop
mov
int3
pop
xchg
jns
mov
popf
sub
inc
gs
lahf
cmp
pop
cld
out
xor
xchg
mov
xchg
jne
aam
sbb
loop
adc
pusha
nop
aam
icebp
data16
lock
stos
gs
je
hlt
shlb
or
dec
lcall
es
loope
jp
lret
pop
lock
jnp
add
in
xchg
jle
xor
dec
cmp
lret
dec
cmp
inc
dec
fwait
mov
sbbb
cmc
and
push
stc
mov
xor
stos
rcrl
std
fbld
rolb
sar
cmp
adc
push
xchg
bound
jg
mov
insl
xor
jo
stos
mov
bound
pop
and
popa
dec
jl
and
aaa
fld
pop
xlat
and
stc
sti
mov
push
add
scas
popf
push
scas
imul
mov
loopne
stos
add
jae
push
int3
dec
push
adc
push
loope
fnstsw
stos
aad
dec
cmp
cmpsb
push
fbstp
jmp
xchg
add
mov
mov
sub
mov
loope
mov
sbb
lcallw
cld
xchg
mov
adc
mov
jg
xchg
push
add
xor
jno
adc
sarb
fisubs
rorl
inc
das
leave
cmp
arpl
sub
jle
lods
outsl
pop
xchg
xchg
jg
lock
push
pop
and
cmpsl
ds
stos
pop
aad
iret
jae
fxch
pop
mov
adc
mov
xor
push
mov
adc
loop
into
cmp
adc
sub
sub
sub
inc
aam
insl
cwtl
jecxz
clc
je
xlat
decl
scas
or
push
pop
sahf
xchg
mov
push
mov
xchg
testl
sub
push
inc
fistps
and
cmpsl
fsts
fdivrs
dec
mov
ret
mov
lods
ss
cmpsb
nop
sti
adc
or
lret
popl
xor
ficompl
enter
inc
sbb
imul
mov
pop
sbb
inc
das
mov
push
and
jo
mov
nop
lods
pop
push
lret
stc
aam
mov
pop
push
pop
bound
dec
addr16
pop
push
lods
or
mov
jb
lcall
pop
adc
aaa
adc
cmp
outsb
cwtl
clc
inc
lds
sub
sub
ss
ds
cmp
mov
adc
mov
inc
push
test
and
pop
rclb
mov
adc
jne
out
filds
fmul
push
cwtl
inc
push
rcll
jecxz
cli
or
push
pop
cmp
pusha
mov
ret
pop
mov
cmp
outsl
mov
xor
pop
mov
adc
push
sbb
int
xchg
ds
mov
jle
ss
fxch
out
and
std
dec
shrl
mov
cmc
add
jg
mov
dec
pop
push
push
adc
test
cmp
inc
leave
inc
add
xor
int
mov
sbb
nop
xchg
in
adc
hlt
loopne
mov
inc
lds
stc
jp
nop
leavew
push
push
movsl
stos
adc
popa
xlat
out
fimuls
jns
xchg
inc
inc
mov
and
jge
repnz
in
inc
jmp
dec
xor
ljmpw
out
in
inc
mov
cs
notl
dec
push
add
lds
mov
pop
popf
cmp
cli
ficoml
inc
jle
adc
shll
mov
dec
loopne
fisttpll
call
into
xchg
imul
aas
jo
cli
insl
filds
mov
inc
jl
lds
fidivs
out
cltd
add
sbb
cli
or
xor
leave
mov
mov
push
mov
dec
out
aam
push
mov
cwtl
jmp
cld
push
mov
repnz
ja
jb
or
jne
arpl
xor
lds
jb
or
or
jns
enter
dec
mov
mov
out
call
mov
fldenv
pop
test
mov
jno
push
icebp
mov
jge
inc
in
jmp
inc
scas
jg
imul
push
loop
das
loop
out
cmp
pop
into
aaa
push
adc
pop
dec
sbb
jmp
sbb
inc
cs
mov
or
lods
jl
jmp
jo
push
rcl
push
cmp
mov
lods
jb
mov
jmp
sbb
inc
xor
iret
icebp
jne
jecxz
jns
mov
sub
sbb
jnp
push
push
test
adc
pop
or
adc
and
inc
push
cwtl
je
dec
cvtpi2ps
add
xchg
repnz
mov
or
cmpsb
imul
sub
jmp
mov
inc
pop
incb
mov
xchg
daa
bound
sub
adc
xor
ror
lds
lods
shr
mov
jl
push
fsubs
leave
sub
bound
mov
push
not
or
jmp
cmp
pop
daa
ret
cmpsl
in
arpl
out
jae
jae
test
imul
inc
or
sub
in
push
or
lahf
and
jl
jg
fwait
push
dec
dec
iret
sbb
movsb
and
and
push
pextrw
mov
das
aad
inc
test
int3
das
xor
pop
and
inc
shrl
mov
sbb
jge
cmp
lea
bound
push
ret
pop
leave
arpl
insb
js
out
andb
dec
mov
mov
adc
aaa
mov
push
adc
xor
aas
push
jnp
pop
popa
clc
push
cmp
mov
lret
in
inc
mov
pop
gs
sbb
dec
adc
jge
jl
js
add
je
test
jp
sti
out
popf
or
fcmovbe
cld
shll
lcall
leave
lahf
out
or
xor
cmpl
pop
jno
push
insb
dec
sti
inc
outsb
sbbl
loop
imul
lret
mov
in
lret
pusha
adc
pop
aas
testl
scas
out
lcall
insb
xchg
sbb
cld
add
fsubs
mov
je
loop
mov
scas
jp
jne
fistl
je
insb
lret
push
loopne
sahf
pop
lret
mov
and
test
mov
in
arpl
aam
push
lods
fnsaves
inc
ficoms
out
gs
cmp
aas
adc
lods
pop
mov
call
hlt
ljmp
lcall
push
dec
pop
test
inc
ja
push
enter
cmp
cmp
pop
and
xchg
push
arpl
fidivrl
jnp
dec
and
lods
push
ret
adcb
test
xor
test
sarb
out
jbe
cmp
sbb
mov
aam
mov
ret
insl
mov
push
enter
xchg
inc
sbbl
pop
push
out
adc
scas
xchg
mov
or
and
test
roll
mov
dec
or
xor
sbb
sbb
mov
sub
shl
jae
pop
jg
mov
cld
sub
lret
sarb
clc
sub
pop
mov
repz
lret
or
dec
stos
sbb
mov
fistpll
and
push
pop
adc
and
and
test
inc
dec
xchg
xchg
arpl
adc
inc
add
int3
mov
ficompl
inc
mov
mov
inc
cmp
jb
into
pop
test
fidivl
inc
sbbl
les
mov
inc
pop
xchg
arpl
cmp
jp
push
inc
mov
sub
xchg
lds
cmp
cld
xchg
cmp
mov
popa
cltd
shl
mov
jne
cmpsb
dec
leave
sbb
mov
cltd
cwtl
in
int3
mov
push
mov
pushf
xchg
xor
mov
inc
vpcmpgtb
or
psraw
push
nop
mov
mov
jmp
stc
lahf
sbb
fdivr
stos
ficoml
stos
inc
xlat
stc
or
cltd
xchg
xchg
bound
xchg
inc
inc
cwtl
and
ret
scas
xlat
clc
stos
mov
bound
cld
push
test
xchg
pusha
xlat
rcrb
in
fldcw
jb
rcrl
jns
and
mov
pop
sarl
clc
cmpsl
dec
pop
inc
or
ja
movsb
loop
aam
jns
hlt
dec
mov
js
or
lcall
das
or
or
fsub
xchg
cmp
push
xchg
repnz
stc
pop
pop
daa
aas
dec
jne
and
dec
fcomp
xchg
pop
or
and
push
add
aad
adc
mov
cli
fdivrl
sbbl
add
pusha
mov
xchg
sbb
inc
test
int3
out
cltd
mov
int3
jmp
fcoml
mov
adc
add
xor
shlb
cld
hlt
inc
jnp
scas
or
mov
outsb
aaa
inc
mov
hlt
xchg
sbb
iret
sub
loopne
pop
xor
enter
cmp
adc
inc
mov
dec
mov
jmp
mov
mov
jbe
or
call
or
xor
cmpsl
and
imul
xor
mov
aam
lcall
scas
das
dec
push
inc
pop
cmp
mov
xchg
push
ficoml
movsb
notb
pop
in
ja
sbb
pop
das
push
xchg
in
pushaw
mov
aad
sbb
int
xor
inc
cmp
jbe
sbb
push
ljmp
mov
sub
inc
scas
lcall
push
jns
leave
cld
mov
or
ljmp
xlat
ja
movsb
xchg
mov
or
pushf
fs
mov
or
push
dec
fiadds
mov
dec
imul
out
addr16
cwtl
ret
sbb
add
and
scas
fcmove
jb
jg
popl
or
push
xor
outsl
shld
fs
js
mov
xor
push
mov
pop
dec
mov
cli
cld
decl
subb
xchg
cwtl
aaa
mov
xor
inc
jns
inc
out
jecxz
and
out
xchg
stos
mov
mov
clc
jecxz
pop
mov
bswap
push
lock
cmp
movsb
xchg
adc
and
daa
mov
xchg
xchg
into
rcrb
jb
mov
inc
mov
inc
push
ret
push
pop
xchg
stc
mov
cmc
lds
sub
fildll
sub
xor
pop
outsb
mov
outsb
push
int3
or
and
or
out
cmp
mov
stc
lret
push
aad
mov
xlat
jo
adc
std
je
popf
sub
test
add
xor
push
or
xchg
cmpl
loop
pop
test
jne
jmp
mov
loopne
cmp
add
xor
mov
jno
fistl
dec
pop
xor
and
fucomi
les
inc
int
out
cmp
leave
push
sub
xchg
ret
push
daa
cmc
cmc
mov
adc
dec
inc
mov
xor
cli
stc
push
mov
pop
enter
bound
lds
sti
aam
xchg
dec
sbb
out
adc
mov
mov
aas
aad
mov
fldt
mov
xchg
mov
xor
pop
sub
push
sbb
test
cmp
pop
in
lret
jecxz
popa
loope
shlb
sbb
push
fnsave
xchg
aam
sub
jae
aam
sbb
cld
pop
and
and
pop
pop
lret
inc
shrb
scas
sti
mov
ljmp
and
scas
subb
dec
enter
cltd
mov
jbe
imul
sub
add
icebp
sahf
mov
adc
sbb
cmp
out
jo
out
loopne
push
jno
aam
shlb
sbb
pop
lret
lahf
xorb
add
adc
and
cltd
fsub
imul
sbb
loopne
dec
xchg
adc
rclb
iret
lea
nop
mov
shrb
and
jmp
stc
add
ret
jns
ffreep
scas
ja
fists
leave
lds
push
xchg
add
adc
dec
repz
cli
fadds
pop
adc
sub
in
add
and
inc
aaa
call
sub
clc
hlt
and
adc
test
jnp
inc
cmp
femms
nop
lcall
mov
gs
cmpsl
xchg
jmp
lods
clc
or
or
mov
call
icebp
sahf
adc
push
jo
lret
aas
sbbl
stos
jp
imull
xor
mov
lods
loop
sbb
int3
pop
lods
cmp
fdivl
aas
lcall
divb
and
adc
jmp
dec
xlat
or
xchg
ss
in
js
scas
inc
lcall
jmp
es
inc
cli
mov
pop
stc
sbb
adc
lcall
cli
inc
pop
lret
loopne
into
cmp
addr16
push
outsl
fistpll
xlat
data16
sbb
lret
pop
leave
pop
pop
inc
pushl
jp
adc
dec
outsl
popa
pop
sbb
movsl
je
inc
push
sbb
movsl
inc
imul
rolb
inc
jbe
div
push
sub
cmp
imul
scas
std
dec
test
push
dec
cmpsl
push
push
pop
fs
or
xchg
fists
xchg
enter
movsb
data16
lock
fldt
notb
call
in
xchg
insb
mov
sub
or
imul
aas
add
enter
cmc
jecxz
pop
push
inc
cmp
call
dec
sbb
call
fisttpll
sarl
out
xrelease
divl
or
mov
jmp
and
add
mov
jno
mov
jl
ss
pushf
mov
inc
xchg
dec
xchg
and
repnz
arpl
pop
bound
pop
mov
pop
and
xorl
jle
fs
sbb
jmp
in
add
into
xchg
popa
mov
jge
mov
inc
in
add
jb
xor
pop
mov
lock
fistps
sti
push
inc
mov
mov
push
sbb
lret
sbb
shr
push
ja
mov
dec
nop
lahf
int
out
xchg
lea
pop
inc
loop
add
xor
fdiv
lahf
sbb
push
cmc
adc
adc
lods
pushf
aad
mov
mov
mov
or
push
ret
or
into
arpl
pusha
es
and
daa
mov
mov
cmp
jge
or
mov
arpl
adc
fadd
and
ja
int
add
jae
dec
outsl
sbb
inc
cmpsl
addr16
imul
jg
es
xlat
and
lea
aaa
and
cmp
test
mov
xor
in
imul
adc
es
scas
push
jge
mov
fmulp
not
imul
cmp
xlat
pop
mov
mov
in
cli
pop
paddsb
inc
frstor
arpl
mov
test
fadd
mov
inc
sbbb
jp
insl
and
and
test
lods
or
push
xchg
mov
stos
sub
stos
adc
js
es
lock
clc
aaa
das
jecxz
xchg
dec
bound
cmp
nop
gs
loop
rorb
dec
xlat
sbb
or
repnz
mov
fisubl
sbb
mov
aas
arpl
xchg
mov
sbb
pushf
push
stos
cmp
hlt
push
jns
jb
dec
sbb
outsb
xor
in
dec
mov
stos
jae
fdivl
jb
cmp
call
out
or
sbb
stos
fldl
xor
lcall
test
addr16
mov
arpl
sbb
dec
mov
adc
loopne
push
fucom
stc
aas
pop
mov
inc
test
mov
lret
cmp
mov
rcll
xchg
mov
xlat
es
adc
loopne
mov
ss
repnz
mov
call
notl
mov
sbb
ljmp
hlt
inc
orl
push
mov
std
push
mov
xlat
and
aad
mov
push
mov
insb
repz
pusha
push
xchg
jae
add
rcrb
lods
out
repnz
rolb
and
push
push
mov
cmp
mov
push
push
std
addr16
cmp
jmp
nop
dec
add
mov
icebp
imulb
out
pop
push
lods
cmp
nop
popf
mov
mov
js
sub
add
dec
cwtl
mov
lret
in
xchg
jg
jmp
pop
cmc
xchg
jo
jo
repnz
pop
sub
jae
sbb
ds
and
jns
mov
mov
lods
push
scas
int3
std
insl
push
bswap
les
sbb
lock
es
cmc
push
repnz
movsb
pop
arpl
inc
cli
sbb
jne
jnp
push
cmp
out
in
xchg
inc
dec
adc
mov
int
xor
je
loop
cmp
mov
sti
mov
ja
stos
repnz
out
add
add
dec
mov
jle
sahf
and
or
test
mov
ret
or
shrl
popf
xchg
pop
pop
lea
out
movsb
add
jnp
pop
jbe
mov
jecxz
jp
dec
sub
cwtl
push
enter
push
xchg
adc
into
push
clc
jg
fildll
mov
lea
lods
inc
gs
xchg
push
fdiv
mov
ret
test
rcrb
adc
fstpt
and
sub
add
and
nop
in
out
jnp
and
comiss
cwtl
cmc
inc
into
push
lods
sub
mov
scas
mov
jb
stos
add
cld
push
pusha
pop
stos
or
xchg
cmc
cmp
mov
adc
bound
cmp
aam
mov
scas
cmp
lret
lea
rcrb
adc
jnp
pop
fs
jb
add
inc
ss
lret
xchg
mov
jo
mov
inc
loope
pop
stc
mov
mov
fildll
popf
sub
dec
clc
or
out
push
jle
jmp
and
mov
xor
push
out
push
cmpsl
jns
inc
push
aam
push
mov
lds
std
push
or
mov
inc
jge
adc
inc
and
mov
pop
into
push
inc
add
xor
mov
call
inc
adc
mov
or
dec
rcrl
aaa
inc
cli
adcb
iret
mov
popl
inc
imul
xor
jns
cmp
lret
adc
fcmovnu
bnd
bound
xor
mov
add
dec
shlb
cmc
mov
sub
sub
scas
pop
notl
and
cmc
sub
mov
mov
stc
aad
lret
or
pop
push
imul
loope
xchg
xchg
cwtl
mov
xchg
sub
push
jle
orb
sbb
and
in
jmp
sub
sti
dec
test
push
mov
clc
in
jmp
int
fsubrs
sub
sbb
jno
jecxz
adc
sub
cmp
inc
fmull
pushf
xor
cli
sub
pop
negl
mov
ds
rorl
or
xor
pushf
push
xor
and
mov
mov
push
subps
push
imul
sbb
xor
inc
dec
pop
mov
test
xchg
pop
adc
cmpsl
sub
mov
or
mov
outsb
loopne
lret
sbb
out
mov
std
cmpsl
mov
rcrl
je
xlat
fiaddl
xchg
lods
or
add
sub
adc
sbb
xor
sbb
sub
pusha
xchg
dec
mov
aas
orb
pop
cmc
sbb
ficoms
test
sub
cs
arpl
gs
enter
aam
add
mov
xor
enter
mov
rcr
and
sti
xchg
cmp
or
sub
imul
test
scas
fwait
xchg
outsl
pop
std
sub
cmpl
add
loopne
mov
inc
pop
xchg
mov
fisttps
sahf
scas
push
sub
scas
pop
jmp
jbe
imul
jno
les
icebp
fdivs
lock
or
mov
popa
call
testl
push
jmp
add
roll
jbe
stos
lret
push
and
pop
dec
inc
or
or
je
lret
andb
mov
arpl
int3
cld
mov
mov
add
jb
movsb
pop
mov
out
and
jecxz
sti
mov
sub
mov
jne
xchg
shll
out
xchg
lea
add
sbb
loope
or
xchg
ss
lret
and
jmp
inc
xor
scas
pop
mov
mov
repnz
sbbb
xchg
pushf
xchg
mov
fsub
lret
adc
rorl
adc
cmp
pop
fiaddl
sarl
aad
into
pop
mov
sarb
mov
adc
mov
adc
sbb
xchg
pop
mov
cmpsb
jle
cld
mov
insl
clc
jge
xchg
stos
or
mov
sbb
and
inc
inc
xchg
cmp
mov
testb
cmp
orl
sub
and
adc
pop
repz
rcr
les
jge
push
es
adc
sbb
and
fs
js
xor
sbb
add
push
pop
inc
push
dec
mov
popl
insb
inc
or
iret
mov
iret
adc
dec
mov
push
ds
and
inc
mov
fwait
push
mov
adc
pop
jge
mov
cli
and
sbb
rorb
and
aad
es
fcoms
insb
push
jmp
mov
jb
xor
or
in
mov
mov
jge
fildll
push
pop
mov
dec
and
rcrl
jp
dec
push
out
jecxz
xchg
sub
add
jmp
into
push
jbe
iret
ja
cmp
loope
jle
idivb
loopne
out
dec
adc
js
stc
lea
jo
xor
mov
flds
orb
loopne
loop
shrb
mov
mov
int3
mov
inc
imul
js
les
xor
cmp
js
in
or
loopne
movsl
inc
pushf
pop
and
dec
insb
jecxz
push
in
dec
imulb
pusha
js
pop
lret
test
inc
imul
sbb
fldcw
fidivl
or
jne
or
xor
xchg
test
jnp
mov
pop
pushf
inc
push
stc
outsb
shrb
push
push
std
pop
ss
jb
push
pop
sbb
enter
push
or
out
mov
loope
sbb
popf
daa
sub
int3
sbb
and
sbb
push
ljmp
mov
mov
and
and
jp
cmp
add
or
fsin
jge
dec
cmpsb
mov
jo
push
int3
sub
es
test
push
xor
or
ja
add
cmpsl
cmp
data16
push
mov
pop
push
out
push
mov
or
mov
push
hlt
pop
xchg
adc
sub
push
adc
scas
inc
or
sahf
add
xchg
sub
xchg
jle
jnp
cmc
mov
adc
nop
or
sbb
mov
test
xor
pop
icebp
mov
dec
add
sbb
in
data16
cwtl
js
lods
mov
push
enter
inc
or
sahf
xor
loop
inc
icebp
fdiv
mov
pop
fs
pop
out
test
xchg
push
add
jle
and
clc
sbb
or
or
fnsave
arpl
add
jmp
test
das
jl
scas
dec
jae
sbb
and
and
inc
frstor
or
outsb
xchg
dec
stos
push
or
aam
mov
test
push
mov
scas
add
mov
or
mov
gs
xchg
lret
xor
mov
cmpsb
movsl
pop
cmc
lcall
push
adc
push
repz
loope
or
xchg
jg
jp
xchg
out
jl
call
inc
icebp
dec
jno
pusha
aam
jge
int
andb
imul
inc
clc
cmp
inc
or
addr16
loopne
ja
fisubs
sub
jle
fstl
jns
icebp
mov
cwtl
pop
cmp
xchg
daa
xor
aam
mov
jae
push
lock
xchg
pop
inc
jae
xchg
sbb
loopne
sbb
pop
sub
fstpl
jne
dec
cmp
and
mov
add
add
lds
sub
jns
aas
dec
nop
jmp
or
cwtl
fwait
sti
popa
loope
js
in
adc
scas
mov
cmpb
inc
adc
jb
lcall
sub
cmp
scas
adc
jmp
sahf
out
testb
scas
in
cwtl
or
loop
addl
stos
ret
insl
sub
sbb
jle
jecxz
push
shr
data16
cmp
cs
stc
loope
inc
pop
pop
and
pushf
nop
lret
xchg
mov
mov
cmp
and
in
mov
insl
es
aaa
lcall
pushf
xchg
lcall
testb
je
dec
fisttpll
push
mov
cmp
fldcw
nop
dec
xchg
and
cld
dec
loopne
leave
dec
push
pop
add
out
and
sub
testb
mov
xchg
dec
lret
ret
bound
test
xchg
adc
xchg
je
fdivs
jns
push
adc
loopne
jbe
mov
xchg
in
mov
gs
adcl
int
mov
lea
in
ficompl
mov
testl
test
sub
adc
jge
cwtl
push
int3
jecxz
xchg
add
push
sbb
inc
cmp
inc
pop
mov
pushf
loop
pop
pop
ret
mov
mov
jb
adc
mov
sti
fucom
lcallw
mov
xlat
repnz
lods
xchg
in
pop
sub
js
inc
loope
jg
pop
xchg
aaa
add
pop
nop
mov
mov
jo
push
sbb
in
pop
bound
dec
aam
icebp
nop
clc
sbb
jmp
in
fisttpll
cmpsl
int
sub
outsl
inc
jmp
cmp
or
mov
popa
ds
movsb
pop
in
xchg
sub
xor
daa
ljmp
inc
pop
push
aam
dec
mov
ljmp
mov
lods
mov
cli
pop
xor
add
xorb
push
mov
cltd
notl
stc
fnsetpm(287
hlt
mov
xor
pusha
adc
and
iret
xchg
loopne
loop
repnz
add
cld
adc
xor
mov
cld
das
xor
shll
jnp
push
cmp
sbb
rorl
call
add
mov
jae
fists
dec
push
sub
es
adc
jo
inc
xchg
push
pop
or
test
int3
mov
test
jns
dec
or
imul
cmp
mov
out
addl
cmp
mov
clc
fucomp
test
inc
enter
mov
ret
sbb
movsb
dec
das
add
lret
cld
loope
mov
test
hlt
cltd
or
popf
in
pop
push
xadd
sbb
mov
mov
jp
jae
bound
inc
xor
mov
leave
xchg
dec
loopne
and
and
sbbb
call
out
push
jo
fsubrs
mov
sub
push
insl
add
mov
jmp
or
call
add
cmc
lods
adc
movsl
in
orl
mov
int
xchg
je
jo
scas
xor
pop
sub
orl
pop
in
lea
mov
mov
pop
in
cmp
stos
gs
add
outsb
enter
addr16
add
dec
call
stos
cli
enter
into
bound
out
ret
pop
in
cltd
push
mov
inc
push
add
mov
xchg
test
data16
mov
mov
fscale
arpl
sub
mov
aas
movsl
cmp
pop
push
sub
test
enter
gs
psubsb
lods
mov
jg
push
jae
xor
in
iret
mov
add
xor
aaa
into
outsb
adc
fidivrl
jmp
xchg
jge
mov
mov
dec
or
jb
xor
xchg
in
xchg
pusha
inc
rclb
mov
lahf
adcl
test
stos
test
cld
insb
nop
xchg
loope
inc
push
scas
mov
fldl
push
arpl
push
xchg
movsl
adc
sub
lcall
and
dec
insl
cli
lret
out
repnz
fmull
push
jmp
jnp
fadds
test
out
xchg
sbb
dec
test
jmp
ret
out
add
push
fwait
pop
push
test
ret
add
sbb
das
xor
inc
fists
mov
test
imul
jo
test
sub
hlt
mov
jo
cmp
sbb
stos
and
pop
lret
aaa
pop
ret
jo
or
dec
pop
in
push
mov
pop
daa
pop
enter
adc
dec
in
fisubs
enter
sub
in
ds
mov
aaa
enter
mov
adc
mov
inc
adc
or
roll
xor
lcall
fimuls
or
imul
sahf
adcl
inc
icebp
jmp
je
mov
int3
ja
mov
push
mov
sarb
sub
insb
mov
pop
cmp
es
add
dec
sti
aam
jmp
popf
adc
mov
and
lock
in
adc
pop
bound
inc
jge
loop
inc
cmpb
lods
insl
lahf
insl
out
in
dec
insl
pop
enter
psrld
daa
int
lods
adc
out
push
adc
dec
pop
push
jge
cmpsl
mov
lock
das
mov
cltd
add
jnp
outsb
jl
test
repz
xor
dec
or
les
addl
xorl
adc
notb
lahf
int3
movsl
jge
lret
shl
add
dec
nop
mov
popf
jecxz
scas
push
lea
inc
push
push
mov
stos
or
dec
test
mov
xchg
pop
sarl
push
jl
movsl
cmpsl
cs
aaa
adc
mov
lods
inc
inc
push
ljmp
sub
pop
lods
and
lahf
in
sub
or
xchg
mov
push
bound
pop
dec
test
inc
add
ljmp
xor
xchg
or
insb
fsub
and
lods
out
insb
add
test
stos
rolb
add
xor
popa
ret
loope
sub
ljmp
mov
scas
test
clc
pushf
std
sbb
pop
or
xorl
fneni(8087
pushf
dec
cmp
imul
subl
dec
push
cld
push
mov
loopne
xor
jle
pop
in
jecxz
pop
jp
push
mov
wbinvd
decl
or
mov
xlat
inc
mov
add
in
mov
cli
fsubrs
jae
cmp
pop
xchg
pop
lea
mov
push
rol
sub
add
aas
adc
mov
das
mov
xchg
es
pop
and
cmpsl
sbb
sahf
sub
mov
sub
fadd
add
adc
mov
lret
in
and
test
ss
mov
mov
xlat
push
mov
aas
lcall
sbb
sti
je
xchg
mov
iret
aaa
adc
jae
xorl
test
inc
test
lods
test
dec
dec
pop
in
mov
jnp
pop
outsb
adc
mov
push
pop
xor
push
mov
mov
sbb
ljmp
push
pushf
mov
xor
repnz
loop
dec
clc
fsubrl
xchg
fnstenv
push
nop
lods
xor
and
test
jno
int
fisttpll
dec
dec
loop
scas
mov
pop
movsl
xor
dec
loop
xchg
mov
shrb
dec
aam
loope
cmpsb
ss
sbb
mov
cli
xor
xlat
sub
push
mov
add
out
testb
push
push
cs
mov
stos
mov
xchg
fsubrl
aad
mov
lods
sarl
test
or
push
mov
mov
mov
dec
mov
mov
inc
sahf
sub
rcl
sub
test
push
mov
dec
addr16
jp
xchg
xchg
push
jecxz
mov
inc
das
push
in
in
or
movsb
mov
sbb
and
mov
pop
lods
xlat
shll
fnsave
pop
cld
lahf
mov
adc
mov
ljmp
sbb
insb
movsl
in
cmp
scas
outsl
adc
jb
outsb
mov
mov
movsl
clc
loopne
jl
adc
stc
sarl
inc
add
inc
scas
int3
fwait
xchg
bound
adc
push
out
daa
inc
loop
lahf
nop
pusha
mov
xor
pop
or
sti
movsb
leave
scas
mov
xchg
mov
das
aam
adc
sbb
xor
sbb
mov
push
jne
icebp
fwait
lcallw
lcall
jbe
pop
pop
lcall
cmpsb
push
add
and
cli
dec
and
sub
jbe
jns,pt
cmp
lods
gs
mov
sar
sub
push
fsubrp
sbb
mov
xor
xchg
push
jle
pop
mov
rclb
sub
insb
lret
es
daa
inc
mov
aad
aad
lea
cmp
lret
insb
sti
jne
ret
sub
lcall
sbb
daa
mov
xchg
sbb
in
pusha
adc
scas
orl
pop
in
rolb
pop
in
outsl
jp
test
rcr
ret
call
add
pop
dec
inc
rcl
sub
xor
adc
fdivs
in
pop
sbb
loopne
adc
hlt
jp
addb
inc
ret
sub
daa
mov
xchg
mov
loope
movsl
and
js,pn
jmp
mov
pop
push
add
add
test
bound
lret
dec
push
mov
outsl
sbb
stc
in
fildll
loopne
lgs
push
push
xor
fiaddl
xorb
testb
daa
dec
xchg
xchg
int3
cmc
jb
mov
into
jle
sub
cmpsl
sub
cld
cld
fldl
adc
fadds
mov
jne
push
xor
aas
xor
lret
adc
lods
shlb
cmp
les
aam
into
mov
enter
sub
fisubrs
cmp
clc
repnz
xchg
flds
loope
pushf
ja
jp
cmc
sbb
lds
adc
cmp
pop
out
push
cmovle
jns
xchg
add
je
ret
adcb
rclb
push
scas
sub
lock
faddl
es
xor
adc
or
push
pop
add
dec
mov
outsb
sahf
cmp
mov
mov
cmp
sub
call
adc
mov
xchg
test
cmp
ret
pop
in
jae
scas
pop
into
sahf
pop
lea
cmp
jmp
sub
xchg
fldl
sub
into
mov
std
mov
jmp
adc
pop
cli
divb
sub
mov
shlb
inc
dec
out
cmp
pop
call
sub
cmp
cmp
sahf
into
sahf
lods
cmp
stc
push
sahf
push
or
getsec
repz
test
loope
mov
add
sub
fnstcw
and
movsl
add
fisubrs
pop
std
lahf
dec
mov
adc
push
fwait
sbb
icebp
xchg
loopne
pop
and
dec
xlat
inc
or
mov
push
imul
adc
cmp
shlb
inc
pop
inc
flds
test
fdivs
and
inc
daa
xor
jl
mov
std
sbb
jle
adc
xchg
pop
add
popf
or
pop
jns
pushf
cmp
xlat
imul
pop
sub
add
out
les
in
ss
lds
in
inc
leave
pop
dec
inc
stos
jo
push
nop
mov
int
movb
out
sub
sub
aad
iret
sub
dec
sbb
dec
cmc
jl
insl
ret
lret
ljmp
lcall
mov
and
xchg
add
loopne
pushf
inc
aaa
in
lods
stc
jns
movsb
and
loop
mov
add
lcall
and
test
and
jns
xchg
in
sbb
in
test
clc
mov
mov
mov
out
jb
dec
cld
dec
int
fwait
test
pop
mov
mov
fistpll
dec
mov
lcall
sub
mov
fsubrs
nop
cwtl
loope
push
in
sub
test
mov
or
in
mov
dec
push
daa
xchg
repnz
cmp
push
xlat
cwtl
dec
xchg
or
push
rorl
pop
and
fiadds
and
lock
mov
xor
cmp
ja
xchg
xchg
test
clc
int3
inc
push
inc
stos
fidivs
adc
imul
jg
mov
push
lret
movsl
mov
inc
or
pop
inc
pop
enter
enter
insb
add
mov
jns
or
fsubl
push
popf
and
aam
stos
loope
and
mov
jl
mov
imulb
ret
test
dec
xchg
cmpsl
dec
mov
imul
pop
scas
testb
orl
iret
push
outsb
dec
inc
cs
add
sbb
jo
xchg
jne
in
add
ret
and
shl
xchg
sar
cmpsb
cltd
or
xor
imul
sti
loopne
cmp
into
lret
jb
movsb
mov
mov
inc
les
sub
inc
xchg
cmp
push
out
in
pop
adc
std
out
in
jmp
add
mov
dec
jge
push
addr16
cmp
lahf
imul
sbb
jmp
in
popa
jle
pop
in
fsts
dec
js
push
mov
inc
jecxz
jp
inc
xchg
cmc
add
push
fisubrl
jo
cli
andl
frstor
push
mov
push
nop
dec
scas
adc
or
mov
aam
out
adcb
negb
inc
jbe
aas
sbb
cs
cmpsl
cmp
mov
enter
rolb
out
test
in
movsl
inc
lcall
stos
addr16
push
pop
cli
cmp
mov
inc
jl
nop
sbb
jb
cmp
bound
cmp
in
xor
add
pushf
std
adcb
add
pop
pop
mov
pop
sbb
aam
push
shll
mov
push
inc
dec
sahf
and
push
ret
lret
dec
ret
notl
gs
vmread
test
sbb
mov
lods
rcll
loope
imul
sbb
push
fdecstp
out
xchg
pop
insb
pusha
je
inc
loop
xchg
adc
aad
cmp
gs
movsl
xlat
inc
sbb
dec
cmp
mov
fdiv
adcb
sti
dec
xor
fmul
push
xor
pop
inc
push
pop
aam
sbb
lds
lret
sti
bnd
pushf
sub
das
or
inc
adcb
dec
jle
xchg
dec
mov
xchg
fcmovnbe
pop
ds
cmpl
ret
fs
repnz
and
xchg
push
rolb
push
mov
add
inc
sbb
rclb
xchg
cmpsl
xor
xchg
es
test
js
and
jmp
jb
jle
imulb
xchg
psllw
sbb
xor
or
sub
xor
xchg
lcall
and
or
bound
push
sbb
xchg
ljmp
pop
enter
pushf
lock
popa
adc
add
push
fisubrl
hlt
cli
mov
jne
sbbl
adc
dec
out
loopne
mov
inc
fstpt
push
lods
in
flds
cmpsb
mov
push
jnp
lods
lods
mov
fiadds
xchg
and
adc
adc
pushl
dec
jp
int
lret
cli
inc
andb
fcomps
decb
icebp
push
shll
lcall
adc
aaa
fildl
fimull
ret
stos
insb
aad
sub
cmpsl
arpl
adc
in
mov
addr16
push
and
hlt
aas
neg
int
or
in
or
pushf
sub
cmp
jb
sub
or
xchg
inc
cmp
or
add
push
or
or
jns
dec
call
mov
out
mov
ss
sahf
rcll
and
add
sahf
lcall
push
and
xor
mov
in
cld
aam
aam
mov
movsl
aaa
pop
in
bound
add
nop
pushf
pop
ror
xchg
xchg
add
bound
mov
cmpsl
sti
push
dec
dec
insb
sbb
or
mov
sbb
jnp
sub
mov
fwait
and
jb
in
in
inc
cld
cld
pop
mov
xchg
adc
and
idiv
shlb
add
movsb
jmp
push
fs
lods
mov
daa
hlt
push
es
aad
push
xorb
int
stos
ret
sbb
cmp
pop
inc
daa
inc
jge
cmp
jns
cld
js
and
xor
pop
mov
push
adc
xchg
sub
repnz
in
scas
mov
push
xor
cld
or
sbb
sub
das
mov
lock
xchg
push
xchg
push
cmpsb
adc
mov
repnz
push
cmp
inc
push
mov
dec
mov
adc
mov
fs
fiaddl
stos
pop
test
add
xor
fcompl
sub
clc
out
je
ficoms
dec
or
lahf
hlt
fcompl
and
sahf
aad
les
dec
inc
inc
ds
push
mov
sub
ds
daa
cmp
shrb
in
cwtl
and
sahf
jb
cmp
adc
add
mov
les
sub
cmpl
inc
and
ljmp
scas
inc
sbb
icebp
in
nop
sub
aaa
arpl
cltd
clc
and
and
out
push
aad
icebp
push
ja
lcall
pop
mov
insl
andb
dec
shlb
test
mov
mov
mov
mov
out
int3
jle
and
mov
stos
fists
dec
xor
call
cmp
ja
and
mov
or
test
dec
xchg
sub
ja
fisubl
enter
scas
insb
inc
shlb
or
popa
mov
into
mov
mov
cmp
or
pop
out
jge
and
arpl
jmp
pop
add
dec
movsb
mov
dec
lock
mov
mov
out
mov
mov
sbb
inc
mov
outsb
sub
cld
clc
pop
jae
loop
xchg
or
inc
xchg
test
mov
data16
cmp
sbb
mov
aaa
xchg
rcll
ret
or
stos
lods
daa
ljmp
stos
push
imul
ret
idivl
cmp
dec
iret
push
aam
mov
jb
mov
mov
test
inc
adc
mov
and
stc
dec
repz
ret
cmc
sbb
xchg
fs
aas
inc
imul
jecxz
cld
fldt
stc
add
cmpsb
loopne
pop
mov
ror
push
je
jns
jne
xchg
jmp
inc
adc
icebp
jle
lcall
ret
mov
mov
jnp
filds
mov
mov
test
test
cli
add
inc
dec
pop
add
jae
adc
loop
imulb
jne
jmp
lahf
jmp
test
shlb
adc
mov
xor
jb
cltd
add
lret
rcr
jg
int3
jae
pop
xchg
xor
mov
sbb
inc
adc
out
lods
add
adc
fcmovne
mov
inc
leave
lcall
mov
arpl
inc
icebp
inc
mov
ss
hlt
push
int3
sub
add
sbb
outsb
fisttpl
pop
test
inc
inc
hlt
jno
jo
ret
shlb
not
in
cltd
cli
cmp
loop
cmpsb
fs
adc
pushl
and
dec
lea
stc
and
mov
adc
inc
add
xor
add
sbb
cld
pop
repz
xchg
jmp
sub
mov
and
fisttpll
out
mov
mov
mull
les
jge
pop
test
aas
cs
lock
fdivs
mov
in
lods
adc
call
arpl
testl
stos
jge
in
push
adc
add
movsb
outsb
push
push
push
mov
scas
jmp
repz
sti
aaa
orl
lcall
imul
pop
stc
out
ret
or
cmp
fnstsw
stos
xchg
pop
imul
insb
cmp
jg
inc
push
stc
arpl
sbb
jp
mov
outsl
mov
jns
sub
shll
inc
jl
cld
clc
imul
and
loop
sbb
cmp
subl
xor
or
scas
and
jecxz
cmpsl
stos
lret
or
sub
hlt
fidivl
nop
sbb
adc
in
outsl
mov
sbb
add
lods
and
test
hlt
out
xchg
enter
stos
xlat
sbb
mov
jo
jne
ret
aad
mov
mov
mov
jl
ja
xor
jp
cmpsb
dec
mov
stc
lahf
test
sar
scas
sbb
inc
xchg
js
ror
push
adc
mov
int3
andb
test
jno
stos
cmpsb
cli
xchg
cwtl
cmp
js
xchg
loopne
out
add
es
arpl
inc
hlt
test
arpl
aaa
lds
aaa
sub
inc
in
add
addb
sbb
sti
subl
jae
insl
aaa
outsl
pop
add
xchg
cmp
push
fistl
mov
orb
xor
cmpsb
cmp
test
outsl
into
cmp
ja
mov
fldl
jb
jge
add
loope
repz
lahf
mov
xor
test
repz
or
or
ds
add
test
or
adc
lahf
movsb
insb
movsl
dec
lcall
addr16
jno
push
mov
jbe
nop
jle
lods
sti
mov
sbb
pop
inc
ja
and
fsubs
inc
mov
ret
out
cmpsl
imul
xchg
repz
andl
fs
movsb
scas
mov
fmulp
das
call
and
adc
dec
frstor
fisttpll
imul
or
xor
or
and
mov
adc
jl
mov
or
cmpsl
lds
lcall
push
ljmp
lock
cs
xchg
xor
pop
jp
lods
idivl
loope
xor
or
mov
mov
and
xchg
push
mov
mov
mov
mov
lds
sub
testb
mov
pop
xchg
imul
loope
jle
mov
aas
cmp
cs
mov
lea
aaa
and
cmp
add
aam
jecxz
cli
into
stos
movsl
popf
lret
xor
or
lcall
rclb
cmp
xchg
loop
cld
ds
loope
aad
in
xor
outsb
cmpl
mov
sub
rorb
push
inc
sbb
das
rep
mov
pop
cli
sub
jnp
xchg
je
loop
sub
mov
in
mov
outsb
mov
sbb
mov
icebp
movsl
pop
push
pop
lcall
aas
call
js
or
out
add
sbb
and
int3
mov
clc
mov
out
in
mov
sahf
repnz
mov
int3
push
loop
push
fimuls
stos
adc
mov
nop
push
fwait
pushf
ret
push
ds
mov
ret
xchg
cmp
jmp
sub
minps
vpsrld
mov
testb
cmc
xorl
push
shrb
inc
popa
dec
pop
jp
in
xchg
jnp
out
fstp
add
out
std
insb
xor
xchg
test
adc
dec
jno
stos
test
xchg
outsb
add
in
mov
push
divl
out
fiadds
cmc
push
jg
loop,pt
es
fs
jle
pushf
fdivl
out
movsl
hlt
pop
clc
sti
fdivs
mov
stc
xor
mov
sub
int
imul
xor
jbe
and
xlat
fwait
cli
rcll
mov
xlat
or
jg
xchg
inc
dec
arpl
pop
sbb
add
push
pop
and
test
push
cmp
push
adc
inc
sub
xchg
mov
insb
dec
daa
push
fstl
sub
jns
mov
xchg
lds
int3
add
repz
mov
ljmp
xlat
loope
out
lahf
mov
in
push
data16
jl
xor
test
sub
sub
leave
cmp
xchg
sti
cmc
jg
and
pop
or
pusha
inc
movsb
fstps
repz
pop
sub
pop
jmp
imul
lods
fistps
cmp
in
cmp
hlt
inc
lea
cmp
aaa
adc
scas
stos
lahf
mov
mov
and
test
sbb
lods
pop
fucomip
push
push
mov
dec
dec
or
or
adcb
int3
jmp
std
dec
add
dec
mov
or
lods
jae
jp
jb
call
popa
bound
insb
ret
stc
frstor
cmpsb
out
je
fidivl
addr16
xchg
ds
jae
cmp
dec
push
and
sbb
pop
xchg
cmpsb
add
mov
out
xchg
mov
push
nop
inc
sti
push
fimuls
stos
sbb
je
ret
adc
xor
adc
js
push
inc
mov
movsl
vcvtpd2psy
out
sub
jns
repnz
iret
stc
pop
jno
xor
sub
xchg
outsb
dec
push
sahf
shr
cmp
mov
jnp
pop
pop
shrl
ljmp
dec
and
scas
jecxz
out
fistps
mov
mov
ret
add
es
adc
inc
nop
jmp
mov
cmp
pop
jb
cmpsl
and
push
out
lahf
nop
xor
sbb
jge
and
inc
fimuls
js
arpl
lods
in
dec
jns
jb
rcrl
mov
adc
lods
lods
aaa
lods
mov
mov
pusha
jb
cltd
sbb
outsl
push
sti
jle
push
dec
cltd
xchg
in
dec
xor
jno
mov
mov
in
cmp
add
inc
add
pop
rcll
xor
div
data16
rclb
es
jecxz
stos
mov
ds
push
mov
test
or
dec
pop
dec
fsubs
push
test
je
push
shlw
jb
clc
ss
lcall
jl
rorb
repnz
negb
in
pop
movsl
popa
test
add
stos
mov
sbb
nop
ret
pop
push
mov
add
pop
in
daa
add
and
jne
in
fwait
pop
andb
imulb
sbb
jnp
adc
imul
mov
test
xchg
mov
xor
sub
xchg
cltd
sbb
mov
cs
cmc
aaa
dec
sbb
nop
bound
push
ret
xor
adc
mov
xor
fwait
sbb
lea
es
shll
jecxz
pop
cltd
or
mov
push
sbb
and
add
sub
les
into
pop
mov
jmp
jbe
repz
push
icebp
prefetchw
jp
lahf
pop
movsl
insb
jbe
hlt
cmc
movb
mov
fnstsw
fldenv
ds
jne
xor
sub
xor
cs
xor
hlt
stos
in
mov
mov
mov
pop
stc
cli
pop
in
faddl
std
inc
pushf
daa
xchg
test
dec
pop
shl
jns
fcomip
lods
dec
cmc
add
pop
lock
fdivp
sbb
int
cltd
mov
jge
mov
or
mov
in
pusha
scas
add
dec
cmp
shrb
xor
cli
ret
push
lock
pop
add
lret
and
dec
xchg
std
mov
push
repnz
aad
mov
inc
sub
aam
fcoml
xchg
push
rcrl
aad
mov
test
mov
loope
mov
and
fsts
push
nop
nop
cmovne
divb
add
loopne
jnp
out
ret
ds
cmp
loopne
and
ds
adc
sub
mov
rclb
and
cmc
push
jns
sub
mov
insl
xchg
sbbl
lods
sub
in
mov
and
adc
adc
sub
inc
fcoms
icebp
ret
push
lods
les
loopne
sub
je
adc
jl
pushf
sbb
jmp
mov
cwtl
imul
std
cmp
jns
clc
cltd
lret
orl
xlat
xchg
inc
push
xor
cmp
ljmp
insl
xlat
fs
inc
fimuls
clc
ret
push
lahf
shlb
dec
in
std
jmp
jae
nop
pop
jns
cs
cmp
adc
jg
push
xor
jmp
test
sbb
or
hlt
cmpsl
lea
jge,pn
das
jns
cmpb
push
xor
push
ljmp
dec
pop
test
mov
lods
loope
addl
movsl
andb
fs
andb
inc
sbb
fdiv
sub
repnz
mov
mov
pop
in
arpl
sub
ljmp
adc
aaa
add
cli
stc
outsb
imul
dec
je
notl
shrb
pop
fwait
ds
std
xchg
mov
lds
sub
and
pop
or
inc
clc
mov
bound
adc
inc
push
mov
dec
aam
inc
sub
outsl
mov
pop
sbb
outsl
xor
mov
pop
cmp
cmpsb
mov
stos
stos
arpl
inc
sub
xchg
nop
cmp
inc
mov
cmp
xchg
sbb
fadd
lcall
jg
repnz
int3
mov
pop
pop
push
lds
jecxz
jle
dec
repnz
mov
dec
fsubp
sub
scas
jae
and
scas
aam
adc
jg
dec
dec
clc
and
xor
sti
adc
jns
adc
ss
cwtl
lods
mov
jg
mov
pop
rol
mov
scas
scas
scas
idiv
stc
mov
sahf
jne
add
adc
jl
xor
dec
test
pop
ja
bnd
lret
jbe
test
mov
or
arpl
xchg
addl
add
jb
insl
dec
jg
lods
int3
mov
mov
inc
push
cmp
inc
or
dec
pop
dec
fcompl
mov
xchg
data16
or
push
call
inc
test
push
pushf
inc
shr
adcb
mov
jbe
cmpsl
mov
daa
fs
mov
nop
ljmp
dec
sar
dec
dec
adc
out
clc
push
mov
cmc
mov
fdiv
push
outsb
jecxz
xchg
scas
xorl
inc
pusha
enter
mov
shl
mov
shrb
data16
mov
movsl
inc
cmp
mov
sub
mov
inc
add
xchg
cli
in
dec
push
incl
jbe
add
xchg
mov
stos
cmpsb
cmp
or
aad
or
fidivrs
mov
inc
out
adc
pop
pushf
xorb
pushl
sti
loop
adc
nop
cmpw
popa
mov
push
xchg
addr16
xor
xchg
out
test
add
sar
or
test
mov
cmp
cltd
js
lea
mov
pushl
inc
lds
xchg
sahf
mov
pushf
mov
in
mov
inc
mov
xchg
popf
sbb
ljmp
adc
cli
dec
cmp
cld
sub
lds
imul
aaa
cmpsb
pop
ja
mov
xchg
xchg
cli
mov
cmpsb
pop
mov
dec
mov
pop
jns
dec
in
sbb
in
pusha
popf
arpl
mov
cmpsb
lret
fstps
call
sub
pop
jbe
cmc
mov
xlat
sub
sub
inc
data16
jae
mov
enter
sub
dec
push
bound
mov
dec
push
pop
cmp
dec
inc
or
adc
mov
cmpsl
add
icebp
xor
addl
or
jae
mov
push
push
dec
scas
addr16
inc
or
flds
dec
flds
fidivs
in
clc
aas
inc
aam
xor
movsb
adc
mov
mov
fcmovnu
xchg
push
cs
push
insl
cmp
movsl
push
pop
int3
pushf
gs
cmpb
leave
dec
pop
push
pop
bound
mul
les
daa
movb
push
jo
aad
or
mov
and
xchg
iret
loopne
ss
movsl
les
adc
ret
mov
ljmp
divb
test
jmp
dec
daa
sti
jae
mov
outsb
sub
mov
fdivr
insb
addr16
popf
mov
ret
mov
aad
out
fcomps
cld
into
stc
sub
adc
stc
rcrl
and
ffree
dec
cmpsb
lock
push
cmpsb
adcb
mov
lds
jnp
scas
pop
es
rorl
xor
push
cmp
stc
push
xchg
xchg
lcall
fstl
push
out
adc
sub
icebp
add
jno
cmpsb
rol
out
cld
insb
xchg
fisttpl
push
in
popa
mov
imul
push
dec
mov
movsl
mov
sbb
add
sub
adc
daa
test
fiaddl
push
sbb
insb
mov
inc
data16
and
inc
xchg
xor
sahf
pop
mov
outsb
cltd
pop
or
scas
mov
dec
ja
and
dec
mov
adc
test
jp
inc
xchg
stc
jge
in
mov
xor
jae
jnp
icebp
push
lret
pop
pop
push
jns
call
jecxz
out
aad
test
xor
inc
cmp
jbe
stc
imul
rolb
test
addr16
dec
mov
jl
fstps
cmpsl
cmp
pop
push
push
xchg
mov
xchg
add
sub
call
push
cs
ret
pusha
adcl
lea
jg
aaa
jns
jecxz
jno
loope
je
lcallw
in
mov
stc
outsl
or
in
fmul
test
out
aaa
out
rorl
or
test
lods
cwtl
hlt
dec
or
rorb
dec
sub
mov
and
insb
cli
pop
jge
push
adc
pop
and
xor
mov
out
or
jp
mov
insb
adc
jno
xchg
aaa
inc
shll
pop
pop
int3
sti
es
push
pop
cmp
out
mov
rcrb
call
inc
mov
rcr
pop
sarl
ja
popa
mov
add
or
add
shrl
ja
jp
out
lods
mov
andl
cmp
sub
cmc
dec
imul
inc
imul
imul
shl
in
js
mov
ret
push
cmc
push
out
add
das
loope
scas
lods
lret
xchg
xor
fdivrl
leave
sub
mov
aaa
imul
jne
ret
movsl
xchg
mov
sub
or
xchg
nop
adc
mov
and
jmp
test
inc
or
pop
lock
sub
int3
jg
cli
scas
dec
cmc
out
lods
outsb
lahf
mov
jb
push
into
dec
mov
jnp
fnstsw
lret
repnz
xchg
test
mov
mov
jge
lods
notb
shl
jnp
pushf
xchg
sbb
call
aaa
dec
or
fcmovne
mov
mov
pop
mov
outsb
sbb
iret
imul
in
sub
ds
jmp
je
sbb
dec
ljmp
mov
hlt
pop
repz
mov
lock
lcall
test
inc
adc
jns
xchg
movsl
xchg
les
add
jne
and
mov
xlat
sarl
sbb
xchg
add
xchg
fwait
stc
xlat
jecxz
fbld
jns
clc
ret
dec
pop
in
push
pop
sbb
in
mov
or
int
pusha
add
aad
imull
push
lds
sub
xchg
mov
in
test
mov
shr
fstps
fildl
inc
cltd
adc
scas
test
stos
and
cmp
sar
mov
testl
pop
add
dec
jg
shr
aam
jbe
push
sbb
pop
ret
lcall
push
push
mov
mov
cmp
or
mov
mov
pop
adcl
fiaddl
stc
mov
lods
mov
sbb
pop
cltd
cmc
lods
pop
loopne
scas
pop
notl
in
aaa
es
aas
jp
icebp
out
mov
mov
jo
sbb
orb
jae
pop
jp
rorl
jecxz
movsl
js
incb
and
dec
movsb
gs
push
adc
ss
pop
and
je
jp
arpl
mov
adc
or
and
mov
cwtl
mov
cltd
es
mov
pusha
icebp
add
bound
mov
outsb
test
test
mov
cmpsb
roll
xchg
xchg
mov
fidivrl
jle
dec
push
push
rolb
int
lcall
jecxz
dec
ja
lret
leave
add
xor
in
fwait
repz
popa
adc
and
sar
repz
hlt
mov
dec
imul
orb
inc
imulb
mov
sub
jae
jo
lcall
sbb
loopne
xor
mov
cmp
push
xchg
es
pop
dec
loope
pop
sahf
adc
cs
cs
or
jg
mov
mov
cs
iret
test
ret
test
nop
clc
pop
push
mov
nop
mov
imul
es
xlat
jle
push
nop
sbb
movsb
xchg
mov
add
xchg
arpl
and
jae
jl
push
movsb
xchg
insl
mov
push
sub
jg
xor
or
scas
mov
and
arpl
push
xor
mov
xor
mov
dec
xor
inc
in
inc
pop
fidivl
insb
pop
or
cmp
lods
mov
mov
adc
inc
push
arpl
insl
mov
aam
dec
out
mov
mov
or
nop
adc
push
push
xor
adc
inc
xchg
or
inc
testb
and
lret
and
pop
adc
or
popa
sub
cmpsl
or
add
pushf
in
sub
xlat
dec
lret
subl
push
pusha
stc
fists
lret
adc
jmp
pop
mov
in
orl
mov
mov
mov
adc
and
iret
rolb
icebp
push
adc
pop
enter
cli
and
scas
mov
xchg
js
mov
sub
mov
mov
mov
lahf
dec
rorb
rcrb
rol
loope
sbb
push
xchg
xchg
jns
repnz
mov
cmp
stos
fnstcw
push
cli
mov
mov
cmp
scas
test
dec
and
orl
out
movsl
daa
xor
shrb
popa
adc
idivb
mov
pop
push
cwtl
dec
dec
repz
xor
icebp
call
xchg
mov
test
jns
cwtl
cld
and
insb
xchg
out
fsubl
mov
adc
outsl
jne
shlb
fwait
inc
push
mov
iret
sahf
test
push
dec
orl
inc
xchg
ja
mov
or
dec
lcall
mov
push
add
push
roll
ss
xchg
imul
lea
cmpsl
dec
adc
dec
lcall
dec
and
bound
subb
jge
inc
aaa
imul
iret
pop
ret
inc
pop
push
jle
cmpsb
leave
add
inc
inc
packuswb
popf
imul
loopne
imul
mov
in
cs
xlat
add
and
pop
leave
push
add
mov
dec
mov
fwait
cwtl
dec
mov
mov
inc
movsl
sbb
cwtl
popa
sbb
sbb
xor
push
in
arpl
xor
or
mov
and
in
sti
enter
fsubs
aad
mov
mov
data16
repnz
inc
cmp
inc
std
adc
and
iret
xchg
lods
adc
push
and
mov
jp
or
dec
cmp
pcmpgtd
leave
mov
inc
and
adc
mov
sbb
xchg
mov
mov
mov
mov
push
pusha
sub
dec
out
mov
jnp
xchg
mov
push
pop
popa
addl
mov
insl
lock
into
std
cmpsb
hlt
clc
lahf
mov
stos
fcoml
xor
add
out
mov
cmp
rcrb
call
push
push
cmp
cmp
shll
movsl
pop
rep
cmpsb
stos
fwait
int3
enter
fucomp
mov
rcrl
cmp
add
push
mov
dec
jp
bound
push
imul
fstpt
int
stos
dec
popa
call
mov
lret
pushf
xchg
into
aas
adcl
or
sub
inc
mov
test
xchg
push
notl
ss
es
and
jecxz
or
das
bound
jae
jp
leave
fcomps
outsb
clc
mov
stos
test
pop
bound
pop
out
negb
filds
jns
sub
and
cmp
mov
jp
jno
lahf
cmp
iret
imul
xchg
cmp
cmpsb
xor
jg
gs
push
xchg
lock
jle
lret
mov
cmovbe
jl
popa
xor
push
adc
mov
cltd
clc
adc
rorb
fisubrl
lret
mov
rolb
out
pusha
dec
xchg
sahf
lcall
notl
sti
cmp
and
mov
fstpl
or
scas
inc
xchg
sbb
fs
stos
inc
ret
into
test
std
leave
out
adc
cmp
sbb
or
pop
ret
out
mov
andb
imul
mov
lret
add
mov
push
xchg
insl
imulb
mov
int
mov
xchg
cwtl
cld
jbe
popf
dec
cmc
aad
leave
or
inc
sub
shrl
dec
push
adc
jg
sub
iret
je
je
mov
jo
xchg
sbb
and
xor
mov
imul
jne
and
divl
popa
jbe
fistl
cwtl
dec
sbb
shlb
test
mov
push
push
ja
sbb
and
stc
xchg
mov
inc
sbb
dec
xor
sbb
mov
cmp
xorb
jecxz
pop
add
mov
pop
cmp
mov
out
or
jp
sbb
lret
mov
add
icebp
fs
ret
repnz
test
push
ljmp
shrb
cli
pop
adc
sbb
lea
xchg
stos
dec
lret
dec
push
adc
and
in
dec
ret
es
jle
pop
insl
jae
insl
adc
inc
data16
popf
jg
aad
lods
test
jmp
ret
sbb
push
add
imul
mov
pop
mov
mov
inc
dec
fcomi
pop
mov
loop
jno
shll
push
leave
idiv
mov
jb
xchg
pop
xchg
mov
fstp
jne
mov
ficompl
mov
and
es
fdivrs
pop
cmp
stc
cmp
fucomp
js
mov
sub
lea
lret
aam
jl
adc
push
in
mov
or
fdivrs
mov
jecxz
add
lret
push
adc
ljmp
push
cmpsb
xchg
push
sbb
add
test
xlat
xchg
push
lahf
fs
mov
push
out
pop
inc
ds
scas
pop
add
inc
mov
mov
push
sub
or
jmp
popa
add
jg
sub
cld
jp
lahf
xorb
add
push
fsubrl
out
sub
gs
loop
into
out
inc
mov
hlt
lahf
sub
dec
dec
and
jp
push
mov
mov
mov
pop
jnp
out
mov
or
aas
jns
aam
inc
sub
mov
adc
push
cli
cmpsl
cwtl
popf
notb
mov
dec
cs
stos
mov
cs
iret
jbe
add
sub
cld
das
push
adc
pop
inc
xor
aas
adc
sarb
in
adc
aad
shl
inc
mov
insl
ret
push
test
enter
xor
xchg
inc
in
jge
mov
hlt
rorb
cmpsl
hlt
leave
xor
adc
ficomps
jb
add
xor
xchg
inc
cmp
loopne
lret
or
push
cmp
test
mov
cli
sbb
orb
cmovns
imul
in
or
jle
int
jbe
shlb
mov
sub
pop
xor
shlb
inc
loope
or
js
mov
jnp
outsb
fwait
and
jmp
or
pop
test
sub
lcall
daa
xchg
in
int
addr16
mov
jle
adc
ss
je
sub
mov
into
shlb
in
repz
pop
fdivrl
fistpll
dec
lds
jb
lcall
stc
dec
inc
xchg
arpl
cmp
push
pop
icebp
mov
imul
pusha
in
adc
movsb
fists
push
mov
cwtl
or
aam
pop
or
jg
sub
pop
sub
idivl
dec
pop
in
inc
add
jmp
test
call
clc
mov
xor
inc
aad
push
sub
stos
lcall
fsubs
mov
ret
lret
inc
fnstcw
std
fsub
jae
mov
fdivrl
and
jbe
mov
stos
cmpsb
xchg
pop
mov
shlb
mov
sbb
data16
aam
in
cmpsl
aas
mov
hlt
jmp
fdivrs
clc
adc
sbb
dec
or
mov
xchg
jle
xchg
add
ss
movsb
sub
mov
popf
out
loop
pop
adc
imul
xor
jbe
and
add
sbb
cld
cmp
jae
xor
mov
stos
fildll
inc
jo
test
push
test
or
dec
icebp
cmp
add
push
decl
das
and
lds
xchg
stos
ss
out
sbbl
cmp
xchg
mov
jb
scas
sub
jns
mov
mov
in
aad
or
mov
arpl
adc
xchg
push
mov
int
shll
lea
inc
movsl
lds
xchg
xorl
leave
pop
pop
jl
jns
out
out
mov
icebp
push
or
add
mov
notl
mov
repz
popf
pop
jo
adc
xor
xchg
sbb
pop
jp
mov
mov
fcmovu
cmp
xor
sub
arpl
das
subb
and
push
mov
add
and
push
or
imul
scas
xchg
mov
fincstp
insb
pop
cmp
testl
fldenv
stc
pop
jmp
imul
dec
mov
fimull
sub
repz
add
loopne
and
dec
cwtl
sbb
ljmp
clc
cmp
and
mov
outsb
loopne
mov
and
les
push
pop
jp
xor
imul
nop
int3
inc
movsb
stos
cmp
and
mov
js
insb
aad
xor
iret
mov
sub
jle
jns
push
lds
and
jno
popa
dec
call
sbb
fnstsw
aad
push
jp
mov
adc
insb
nop
mov
push
dec
pop
mov
dec
in
adc
mov
pushf
mov
xor
aas
inc
lds
lock
add
movsb
mov
pop
add
jns
adc
pop
pushf
inc
mov
and
push
icebp
pusha
das
stc
push
gs
cmc
into
cli
dec
mov
imul
cmp
mov
lock
clc
jle
add
push
sti
mov
dec
loope
ret
and
in
mov
les
pop
push
pop
xor
inc
jmp
cmpsl
sbb
scas
jle
pop
lret
cmp
mov
mov
pop
sbb
cmpsl
or
and
int3
inc
or
xor
pushf
in
pusha
aam
pop
ds
imul
mov
jge
insl
rclb
jno
jmp
test
fwait
cltd
jg
sub
lods
in
cmp
std
or
inc
cld
scas
clc
leave
dec
or
stos
inc
dec
leave
pop
clc
pusha
jmp
push
or
gs
or
and
cld
pop
cwtl
jne
out
inc
popa
repz
mov
andl
push
fldt
out
stos
mov
loopne
mov
inc
fists
dec
pop
test
lret
sbb
push
sub
sub
xchg
mull
xorl
decl
jge
inc
mov
adc
inc
jecxz
jg
dec
lcall
mov
sahf
mov
test
adc
pop
cmp
add
decl
inc
in
jbe
aaa
pop
mov
dec
inc
rcrb
loop
jp
dec
fcomi
das
cmpsl
jg
cmp
mov
jne
sbb
sbb
jecxz
push
mov
adcl
outsl
loop
sub
adc
add
push
mov
mov
xorl
or
sbb
and
adcb
dec
imul
jg
xchg
xchg
lahf
arpl
mov
adc
lret
in
in
les
stos
add
pushf
paddd
xor
loop
pop
bound
adc
call
mov
out
adc
sbb
pop
hlt
arpl
jo
les
daa
lods
mov
and
mov
shlb
add
cs
ja
push
mov
pop
push
pop
pop
pop
jl
jmp
cmc
cmp
outsb
std
xchg
jne
or
sbb
divl
adc
pop
mov
mov
icebp
lds
fdiv
inc
dec
xchg
movsl
pop
popa
scas
dec
sbb
push
adc
mov
pop
jae
cli
nop
gs
fiaddl
push
xchg
xor
mov
xor
adc
into
cwtl
stos
mov
lds
fadd
xor
xchg
cmp
mov
cmp
mov
movsl
mov
sbb
jnp
cs
sbb
lret
adc
lahf
xor
iret
pop
xor
cmp
jns
push
mov
lods
sbbl
es
in
es
pop
insl
push
mov
mov
data16
adc
pop
mov
pop
dec
jne
add
add
stos
cltd
cli
movl
pop
sub
enter
xor
push
xor
cmpsl
je
cs
ret
sub
jb
mov
testb
inc
dec
lds
notl
ud0
pop
incl
rcll
imul
mov
sub
dec
jg
pop
lea
lds
xor
sbb
or
xchg
pop
dec
and
dec
mov
pop
sbb
xchg
sub
imull
pop
enter
mov
pop
fsubrl
fstps
or
pop
mov
sbb
sub
sahf
push
cmp
sarb
sbb
dec
jecxz
pop
jne
sub
lock
andl
ret
movsl
jle
fstl
mov
mov
adcb
jnp
out
xor
push
daa
in
pusha
cmp
push
sbb
popf
mov
fst
mov
rclb
stc
cltd
jne
push
out
push
push
mov
jb
aam
pushf
pop
aaa
or
and
push
hlt
mov
fwait
xchg
daa
fisubl
xor
and
das
push
jmp
sub
out
mov
pop
out
bound
jae
push
cwtl
mov
icebp
jbe
jne
or
xchg
iret
dec
popa
lret
add
push
cmpsb
push
adc
dec
inc
and
int3
pop
mov
jl
inc
in
lock
movsl
sbb
divl
sub
pop
clc
xchg
and
ret
pop
or
jne
mov
cwtl
mov
dec
sbb
loope
xlat
nop
sti
repnz
push
sub
in
sub
sub
or
notb
xlat
xor
add
lods
pop
repz
shrb
sbb
outsb
xor
in
fistpl
fistl
dec
lahf
outsb
xor
xchg
or
icebp
or
stc
sub
inc
xor
sub
ret
push
ret
out
ss
mov
add
sub
dec
jns
jbe
es
fisubrl
jb
in
fimuls
out
lds
inc
mov
mov
not
add
and
out
int3
xchg
adc
ret
or
sbb
jbe
xor
arpl
mov
add
ljmp
xor
lods
lcall
cmp
mov
scas
fwait
jl
adc
push
mull
mov
ljmp
pusha
inc
mov
add
stc
sti
inc
adc
mov
inc
mov
sbb
fldenv
and
xchg
xorb
add
mov
or
dec
imul
xchg
mov
pop
pop
les
in
or
pop
pop
inc
push
mov
mov
repnz
popf
push
aad
nop
or
sti
push
pop
data16
gs
out
sbbl
divb
dec
dec
std
daa
xor
and
stos
aam
iret
mov
in
sub
lods
ficomps
push
es
das
clc
cmp
cmp
enter
lahf
or
dec
cwtl
fisubl
pop
jno
adc
xchg
xchg
mov
aam
pushf
shl
push
jl
popa
mov
scas
mov
fsts
std
fs
pop
sbb
mov
shll
je
aad
mov
xchg
out
das
sbb
mov
stos
loopne
int3
and
fsubrs
mov
mov
push
and
sbbl
adc
cmp
out
out
mov
push
cmp
mov
imul
scas
movsl
pop
adc
js
xor
push
and
repnz
lahf
mov
enter
adc
lret
sbb
dec
addr16
enter
enter
jmp
mov
fidivs
fldt
flds
pop
fwait
sbb
fwait
sbb
scas
push
notb
sbb
dec
bound
lds
push
push
cmp
aaa
cmp
push
test
mov
lods
adc
addr16
aaa
clc
scas
js
push
sbb
cmpl
inc
xor
in
mov
cmp
cmc
fsubr
cmp
loope
and
xchg
aad
negb
mov
fidivs
cmp
add
xor
movsb
test
std
mov
sar
or
dec
rol
mov
xor
jmp
shl
sti
rclb
aam
cmp
mov
cmp
roll
sbb
dec
and
mov
pop
ja
cmp
outsl
add
imul
mov
nop
dec
inc
mov
mov
add
and
imul
dec
mov
cmp
xchg
test
lret
pop
dec
and
xor
jecxz
loop
adc
jae
push
aam
ret
mov
fcoml
push
jg
mov
out
je
dec
cld
push
out
xchg
adc
sub
inc
add
loope
mov
bound
lret
fst
jl
pop
out
in
loop
ss
push
mov
dec
sub
add
xchg
adc
movsb
shl
and
xchg
lock
icebp
data16
mov
insb
bound
lcall
push
shlb
mov
stos
aas
or
std
mov
push
cmpsb
clc
mov
adc
cs
cmpsl
xchg
test
or
scas
mov
scas
cmpsl
mov
rclb
adc
icebp
scas
shrl
push
les
jge
data16
and
mov
and
rolb
xlat
xchg
in
mov
xor
lcall
ds
lea
std
mov
jl
ljmp
sub
scas
or
or
sbb
icebp
adc
cmp
and
xchg
inc
subb
fwait
push
sub
or
repnz
xor
out
cmp
leave
insl
leave
call
int
mul
cmp
js
or
jmp
cltd
pusha
adc
jl
xchg
ret
sti
cmp
fwait
cs
test
mov
shrl
test
jg
push
pop
adc
sbb
or
mov
mov
in
in
pop
fidivrs
sbb
fcoml
ret
pop
call
pop
xlat
add
and
jae
in
stc
sub
sbb
push
add
pop
mov
test
push
rclb
cmpsl
push
mov
push
mov
xor
idivb
mov
out
cmp
ret
aas
dec
aad
insl
shll
or
insl
dec
in
mov
test
scas
fnsave
push
test
push
movsb
xor
shrl
xor
xchg
mov
sub
lcall
lret
hlt
out
jg
mov
fisttpll
hlt
je
sbb
orb
lahf
nop
inc
gs
or
dec
cwtl
push
fs
cmc
sahf
fcmovnu
shr
xor
jno
and
loop
out
sbb
jno
insb
jno
add
mov
pop
mov
add
inc
jmp
cmp
dec
pushf
xchg
dec
adc
fistpll
inc
enter
jle
out
les
adc
outsb
mov
cmc
std
data16
dec
test
call
push
fldcw
dec
dec
popl
mov
sub
mov
gs
mov
call
jg
cmp
dec
aam
je
mov
sub
dec
push
or
ret
cmp
stos
pop
xor
es
inc
lea
fwait
dec
int3
xor
xor
lods
mov
insb
idivb
cli
jg
push
jle
pop
imul
sbb
sub
xchg
xchg
xchg
ficomps
out
jne
iret
ja
pop
insl
add
push
jno
sbb
dec
iret
or
adc
sub
inc
adc
add
cmpsb
mov
daa
in
into
sahf
mov
mov
cld
ss
rcrl
jb
cmp
cli
adc
fistl
insl
pop
or
xor
leave
ror
cmp
push
pop
push
mov
push
rcrb
xchg
jle
rcrl
sub
aam
xchg
icebp
add
popa
cmpsb
push
dec
test
in
jg
incb
push
add
push
xor
frstor
lcall
and
aad
jno
sub
sbb
pop
mov
mov
jbe
and
push
mov
insl
xor
lock
jae
pop
push
dec
aas
enter
lret
cwtl
leave
popa
push
ffree
shrl
mov
incl
rcll
adc
add
mov
mov
jb
stos
mov
cs
mov
repnz
adc
inc
lret
setle
sbb
pop
sbb
dec
sub
add
sbb
pop
cmpsb
leave
ds
in
pop
ret
outsl
add
push
cmpsb
inc
lods
sbb
rcrb
lods
push
aaa
mov
rcll
mov
les
scas
cmpsb
push
add
les
into
jmp
xchg
mov
xchg
out
inc
jns
pusha
jno
in
sbb
xchg
dec
in
lock
hlt
cmp
mov
daa
ret
scas
dec
sbb
xchg
pusha
sub
adc
shll
push
test
enter
adc
int
out
popf
mov
xchg
je
aas
sub
leave
or
cmp
movsl
xchg
std
daa
jnp
in
daa
addl
hlt
popa
int
inc
mov
inc
fcoml
xlat
stc
sbb
cmp
arpl
rcll
call
faddp
mov
cwtl
stc
push
in
std
jmp
xor
cmpsb
pop
jmp
xorb
fsubl
sub
pop
dec
mov
bound
or
sub
inc
jae
mov
or
ljmp
aam
insb
or
mov
fldl
adc
adc
pop
jb
es
iret
xchg
push
xor
sti
adc
pop
cltd
lret
stc
mov
sub
adc
mov
push
je
sub
je
ljmp
xchg
add
aam
out
sahf
inc
xor
fucomp
push
ja
shrb
test
addr16
cltd
fidivrl
fucomip
mov
adc
getsec
mov
sub
cmp
ror
pop
in
xchg
pop
pop
fiadds
in
in
fisubrs
inc
jecxz
sbb
bound
in
es
sbb
fidivl
cmpsb
dec
dec
movsb
sbb
sahf
stos
mov
xor
push
adcb
mov
lret
adc
hlt
int3
mov
lret
push
in
xor
xchg
movsl
je
sub
mov
push
daa
mov
mov
arpl
ja
popf
mov
lods
or
sbb
jnp
add
dec
xchg
pushf
xchg
lods
lcall
data16
xorb
lcall
call
sbb
sub
lods
insl
fbstp
loope
jp
les
sub
int
mov
daa
xor
cmc
call
sub
fcmovnb
xor
lock
ss
pushl
push
repnz
jp
inc
jbe
rolb
cmpsl
cmp
cmp
imul
daa
sti
mov
popf
je
dec
push
pop
ss
in
iret
sbb
jae
cmp
xchg
jecxz
outsb
lods
movb
xchg
lcall
sarb
cmp
aaa
insb
jb
push
popa
cmp
shll
xor
scas
ror
scas
into
and
cmc
cmp
cmp
mov
test
mov
pop
mov
xchg
inc
mov
icebp
mov
mov
xchg
out
rorb
test
jge
and
std
fucomi
fildl
sbb
push
aas
inc
daa
xor
pop
add
lock
jmp
jnp
sub
xchg
fcoms
cmp
stc
inc
cwtl
lock
dec
mov
xchg
xchg
jbe
out
std
push
les
sti
pop
insb
adc
mov
aad
fmuls
xor
pushf
inc
inc
clc
pushf
push
lods
inc
push
pop
ds
fisubrl
jbe
rorl
and
fsubr
sub
or
mov
adc
dec
jg
jg
add
outsb
push
mov
fwait
outsl
aaa
mov
aam
int
faddp
and
push
push
inc
loop
push
inc
shlb
ljmp
cltd
mov
rclb
dec
mov
loopne
push
movsl
lahf
inc
ds
dec
cld
incl
lcall
mov
mov
xchg
repnz
loope
and
push
enter
int
pop
push
cmp
jle
mov
or
sub
dec
mov
sub
xor
cmp
mov
cmpsl
push
xchg
test
xchg
cli
mov
mov
adc
xchg
or
add
fs
ss
scas
out
pushw
cmc
popf
pop
and
and
lcall
rdtsc
cwtl
dec
push
gs
mov
xchg
bnd
mov
add
and
add
rcrl
adc
insb
push
sub
iret
das
dec
adc
xor
aas
repnz
lcall
sub
pop
ljmp
jmp
out
daa
jb
sbb
jno
push
xchg
je
cli
jge
mov
fstpt
lcall
sar
clc
pop
xchg
sbb
movb
mov
stc
xchg
mov
shr
and
mov
inc
dec
push
jge
xor
js
les
sbb
cmpsl
jnp
pop
shl
push
lret
cmp
loopne
jbe
mov
jp
and
andb
xor
xor
or
std
jg
sahf
stos
sbb
or
adc
mov
ds
mov
jbe
cmp
xchg
mov
push
daa
loop
xchg
in
lret
jne
mov
int3
jae
push
mov
pop
mov
incl
adc
dec
push
scas
orl
lret
mov
lock
cmc
add
lods
lcall
addr16
add
icebp
xchg
pop
mov
push
pop
mov
inc
inc
adc
fs
nopl
insl
in
push
push
mov
push
sbb
pop
and
lds
jp
and
call
rep
pop
loop
ret
dec
jbe
and
pop
mov
xor
cmpl
imul
lret
sub
and
xchg
neg
idivl
out
sbb
subb
cld
mov
ljmp
iret
outsl
test
movsl
loope
nop
push
jbe
cltd
and
faddl
push
sub
sarb
and
pushl
aam
pop
roll
mov
mov
or
pop
loopne
cmp
nop
clc
aaa
jbe
mov
adc
mov
sbb
mov
and
push
mov
push
leave
loop
sbbl
push
cmp
lods
test
scas
push
adc
mov
push
inc
daa
bound
sub
testb
xlat
and
das
adc
dec
cmp
fldcw
sub
std
inc
movsb
jmp
sub
xchg
scas
push
pop
mov
fidivl
stos
push
cmp
lret
popa
xor
loop
fisubrl
add
xchg
sbb
hlt
outsl
popa
xchg
cmpsl
out
mov
mov
add
orl
sbb
inc
pop
and
xchg
out
xor
es
inc
pop
and
xchg
dec
ret
add
fcomp
inc
jmp
push
xchg
aam
vcvttss2si
arpl
fnstcw
mov
lret
mov
jle
or
and
popf
test
inc
or
out
lock
daa
push
dec
jp
dec
sbb
xchg
cld
xchg
inc
lcall
mov
jl
xlat
jge
imul
cltd
xor
test
lock
bound
bound
cld
mov
xchg
push
lret
mov
xchg
and
hlt
inc
out
adc
lret
mov
loope
in
flds
mov
push
fsubl
adcl
loopne
sbb
and
in
xorb
sub
sbb
sbb
bsf
sbb
mov
jg
jno
notl
mov
pop
int
jecxz
xor
into
push
mov
cmp
cmpsl
pop
stos
aad
mov
aas
enter
xchg
ss
call
out
ret
xchg
mov
cmp
add
stc
aam
mov
xor
mov
shr
lret
sub
andb
push
stc
clc
test
dec
jle
ret
scas
js
in
loop
mov
cmpsl
and
jge
pop
sbbl
cmp
shlb
test
lea
sti
mov
jnp
push
jnp
cmc
mov
sub
les
pop
adc
test
jecxz
mov
add
xchg
xchg
std
loopne
or
mov
cwtl
pop
jne
mov
and
pop
add
loopne
rcrl
movsl
sbb
xor
pusha
mov
bound
outsb
aas
fldl
mov
sahf
loopne
dec
sar
arpl
call
and
movsb
clc
inc
mov
sub
mov
movsb
mov
es
lret
jnp
sbb
repnz
movsb
nop
int
dec
and
or
out
out
push
and
popa
sbb
out
dec
mov
push
scas
daa
jp
and
js
and
mov
int
jnp
cmp
adc
dec
loop
sbb
repz
in
rorl
addr16
mov
xor
mov
jecxz
sub
xchg
test
xchg
pop
and
and
les
aad
rcrl
rol
rcrb
sbb
or
add
pop
add
xor
sahf
js
scas
icebp
or
cmp
inc
jle
dec
dec
mov
xchg
inc
jp
mov
test
add
mov
out
jmp
cmp
mov
mov
aas
or
xchg
icebp
adc
fildl
frstor
ret
xor
cld
out
xchg
xor
test
out
jmp
xchg
dec
xchg
fxtract
insb
xchg
int3
imul
or
test
jbe
mov
mov
iret
pop
inc
ret
sub
repz
xor
mov
ret
cmp
mov
cli
pushf
add
in
push
test
pop
sub
aas
push
mov
push
xchg
or
lret
xor
mov
xchg
or
hlt
in
lea
inc
xchg
xor
xchg
cmp
pop
mov
imul
mov
pop
imul
jns
movsb
inc
shl
nop
out
int3
fnsave
int
fsubl
adc
push
psadbw
xchg
fstl
ret
pop
dec
mov
lcall
fdivrl
inc
push
clc
jg
dec
inc
push
jge
fcomi
subl
mov
add
cmp
fdivrs
push
pop
cmp
mov
mov
out
ret
icebp
jnp
ljmp
inc
icebp
mov
repz
roll
ja
pop
fidivl
inc
jecxz
adc
enter
xchg
push
inc
and
int3
push
outsl
cmp
cld
cmp
xchg
dec
imul
movsb
mov
jnp
fstps
pop
push
jb
pusha
dec
jg
out
jl
call
sub
daa
push
and
fidivrs
out
mov
adc
mov
sbb
je
mov
jmp
jmp
scas
out
ficoms
orl
insb
rcll
xchg
dec
jl
mov
lds
ret
addb
push
add
xchg
lds
leave
xchg
pop
into
mov
pop
mov
ret
or
mulb
out
hlt
scas
jecxz
mov
int3
test
and
ja
lea
imul
hlt
adc
xchg
mov
push
test
mov
dec
mov
cli
test
inc
outsb
lods
mov
push
and
lahf
test
mov
xor
fcompl
js
loope
add
and
push
xchg
orb
stc
mulb
pop
inc
dec
lea
movsb
mov
mov
ret
sub
mov
xor
jnp
pop
mov
popf
dec
out
and
push
pop
jo
pop
mov
jb
xchg
call
jbe
popf
push
xor
fwait
bts
divb
add
daa
fwait
xchg
cmp
div
loop
cs
mov
in
int3
sbb
ret
call
aam
inc
lock
popf
andl
push
movsb
je
insl
and
xor
xor
inc
test
pop
push
mov
fisttpll
sahf
cmp
repnz
movsl
jge
fbld
inc
cmp
out
sbb
popa
enter
adc
or
lahf
mov
inc
sub
sarb
xor
addl
repnz
jnp
xchg
push
pop
xchg
mov
js
pusha
pop
push
push
inc
loope
int
xchg
clc
cmpsb
add
dec
imul
loope
mov
fildll
dec
adc
cmp
xchg
and
adc
jb
mov
mov
jmp
in
inc
loopne
popf
sti
and
imul
push
or
nop
mov
cmp
repnz
es
icebp
daa
dec
xchg
inc
adc
jl
xor
lcall
leave
outsl
dec
aam
push
das
sbb
addr16
lock
ret
adc
mov
xchg
stos
adc
mov
jns
inc
adc
push
adc
repz
popa
cmp
inc
push
add
xlat
ror
mov
or
and
adc
jecxz
xchg
mov
xchg
loop
xorl
xor
push
aad
les
push
mov
cli
push
mov
divb
jnp
push
daa
or
jne
cmp
outsl
adc
and
lock
jnp
or
outsb
or
repnz
mov
or
shlb
sbb
popa
and
jo
stc
dec
mov
adc
movsl
icebp
pop
push
mov
sbb
divl
push
mov
jo
hlt
imul
dec
pusha
add
add
or
add
mov
negb
jne
xor
inc
repz
mov
adc
push
sahf
adc
push
mov
mov
or
popf
sbb
sbb
mov
cmp
pushf
ljmp
mov
push
push
or
cmp
repnz
xchg
mov
pop
out
xchg
xchg
jns
cmpsb
clc
adc
aad
add
jg
int3
push
mov
inc
sub
lods
mov
jg
lock
or
out
jp
sub
fiadds
enter
or
mov
sub
cwtl
out
scas
pushf
jle
add
and
inc
scas
test
push
fwait
aaa
test
push
inc
ficoml
inc
lock
jecxz
mov
sbb
inc
xor
pop
scas
js
xor
pop
inc
push
and
je
out
lds
or
adcb
mov
fcoml
inc
jno
and
pop
push
mov
pop
mov
xor
lods
sub
jns
mov
scas
arpl
fdivrl
cmpsb
push
orl
outsb
lahf
xor
insl
clc
bound
push
fs
and
push
jae
les
adc
or
mov
sarl
aas
cmp
mov
pop
andb
cmovp
daa
imul
xor
mov
mov
aas
je
aas
lahf
shll
adc
xchg
mov
in
mov
and
enter
push
mov
sbb
adc
dec
pop
mov
cmc
sti
lcall
cmp
imul
adc
jae
ss
out
imul
inc
sub
push
enter
and
shr
lock
bound
cmc
out
cmp
mov
mov
sbb
cld
es
insb
mov
jne
aam
ss
subl
add
pop
inc
mov
push
stc
aam
jmp
aaa
int3
mov
ss
into
xor
xor
xchg
hlt
add
inc
adc
test
jl
sti
loope
decl
andb
sahf
ljmp
icebp
pop
out
testb
xchg
sbb
repz
imul
add
jg
sbb
sub
cmpsl
xchg
pop
pushf
ja
fldln2
push
cmp
rorl
pushf
outsl
call
test
leave
std
pop
insb
pop
gs
sbb
cmpsl
shll
mov
cs
inc
divl
pop
daa
dec
and
xchg
scas
and
lahf
mov
icebp
sbb
cltd
rcrb
dec
push
jmp
pop
gs
sbb
inc
aad
mov
mov
stos
testl
mov
push
and
sti
adc
pop
outsl
mov
cmovns
idivb
jecxz
xchg
call
pop
adc
cmpsb
mov
das
xchg
or
ja
or
jnp
sahf
movsl
jecxz
add
bound
dec
pushf
mov
sbb
and
add
and
adc
inc
sbb
push
sbb
popf
in
mov
inc
push
movsl
inc
rorl
pushf
xor
cld
xchg
enter
jmp
jecxz
roll
inc
push
in
jmp
sbb
dec
pop
sti
ljmp
pop
jp
adc
push
sarl
arpl
mov
cmp
ds
jbe
mov
das
inc
and
cld
push
and
fdiv
push
adc
add
cld
aad
sub
repz
je
dec
test
aad
inc
lret
clc
mov
push
pop
out
pop
call
xor
cmpsb
inc
mov
and
inc
in
fadds
inc
bound
fld
pushf
xor
pop
mov
cld
mov
shlb
mov
fdivrl
push
aaa
push
dec
inc
gs
fcomps
cmp
inc
jle
jmp
pop
lods
pop
test
call
not
stc
daa
jo
push
shr
jae
mov
scas
mov
jbe
jbe
rolb
fdivs
iret
imul
mov
push
test
sti
lcall
movsb
icebp
in
pop
push
or
push
loope
push
outsb
loop
mov
in
lcall
aaa
pop
scas
mov
sarb
pop
mov
lea
movl
mov
sahf
xor
dec
add
add
dec
push
notb
paddd
push
add
push
ljmp
les
pop
loope
test
mov
jnp
xlat
test
cmp
out
loope
and
out
sub
mov
mov
xchg
adc
dec
mov
adc
push
repnz
jne
xor
push
adc
jge
inc
nop
xchg
xchg
jne
test
or
or
lods
xor
outsb
mov
mov
sub
aam
cmp
les
jp
in
adc
sarl
mov
fistl
and
hlt
clc
test
in
stc
mov
aas
movsl
lds
sahf
jmp
adc
stos
inc
fsubr
mov
pop
jp
bound
adc
cmpsl
xchg
daa
and
dec
hlt
shll
xor
std
cmp
push
les
add
add
sahf
inc
lcall
inc
pop
scas
leave
loopne
addr16
inc
ret
bound
aaa
dec
xchg
fsubr
fucomp
jne
imul
aaa
pop
fdiv
inc
cmp
mov
icebp
adcb
mov
xlat
dec
lock
jp
leave
shlb
push
jbe
jno
xchg
mov
dec
push
pop
mov
pushf
int
aad
sub
and
aas
outsb
jmp
inc
inc
xchg
mov
dec
pop
xlat
mov
fisubl
add
sarl
out
inc
lock
jmp
ror
fisttpll
and
out
xchg
adc
aad
push
cmp
and
iret
das
mov
adcb
jg
mov
shlb
jmp
sub
mov
hlt
icebp
int
iret
dec
jmp
testl
jnp
sub
adc
or
jo
je
imul
daa
cmp
dec
xchg
popf
dec
cltd
or
test
fistps
adc
in
cmc
hlt
repnz
sbb
and
repnz
xchg
das
je
mov
stc
sub
mov
cmp
adc
in
sar
mov
jns
int
cwtl
out
ljmp
mov
sbb
jnp
or
push
repz
pop
iret
cmp
mov
adc
enter
stc
test
mov
ret
inc
in
jo
cmp
outsb
jmp
push
in
ljmp
mov
pop
repz
shl
or
push
das
scas
loop
sbb
cli
repz
jge
into
leave
cltd
stc
pop
jmp
jae
in
dec
bound
call
add
scas
add
xor
stc
push
pusha
std
outsb
fwait
es
iret
cmp
sub
dec
adc
add
das
stc
ja
jnp
xchg
jae
adc
mov
add
jmp
adc
outsb
push
or
xchg
dec
and
and
rclb
xchg
and
enter
pushf
test
arpl
popf
movsl
add
cmpsb
mov
fldenv
cmp
xchg
into
xor
sbb
sbb
push
add
mov
mov
ss
cmc
in
movsl
mov
sahf
lock
rclb
mov
nop
leave
mov
mov
cmc
pop
mov
jbe
cmp
fdiv
sbb
push
or
or
mov
sub
dec
cld
aas
and
stc
repnz
daa
push
jae
push
cmpsb
dec
stc
xor
test
cmpxchg
mov
xchg
mov
xchg
filds
decl
sbb
or
mov
mov
inc
loopne
xor
sbb
dec
stos
pop
fistpl
xor
std
clc
lret
and
jge
clc
jo
cli
xor
push
addl
popa
aas
rolb
pop
or
xchg
std
pushf
pop
ljmp
dec
pop
jae
das
pop
sub
mov
shlb
int
sbb
pop
movl
jo
dec
push
int3
and
fcoml
xor
sbb
cmp
cmp
and
xchg
mov
xor
or
sbb
sbb
daa
lret
js
cmovl
sbbl
shlb
push
cmp
cmpsl
xchg
into
push
rorl
xorb
in
inc
xor
dec
inc
xor
pop
dec
mov
lock
mov
shlb
add
sti
push
movsl
adc
xchg
lret
es
insl
fisttpl
cli
cmp
jmp
mov
repz
iret
movsl
mov
std
cmp
ljmp
dec
pop
data16
inc
das
test
lahf
pop
loop
mov
pop
push
mov
pop
jae
hlt
js
add
mov
addl
xchg
aam
fcompl
adc
sub
or
fidivs
addl
mov
test
mov
in
xchg
push
sub
add
push
iret
aam
jnp
les
cmp
jnp
and
or
adc
mov
dec
ja
pushf
dec
mov
mov
aaa
test
in
pushf
ljmp
in
ret
rolb
daa
or
movsb
cli
gs
dec
pop
mov
mov
push
lcall
ret
push
xchg
das
test
push
xchg
push
sub
sahf
mov
add
jl
adc
rorb
scas
test
xlat
pop
push
addr16
lds
filds
pop
js
lods
iret
mov
inc
push
into
jno
fldt
xchg
out
mov
jl
jg
dec
imul
mov
inc
xchg
pushf
mov
xor
mov
pop
in
ds
xchg
cltd
pop
add
pop
sub
into
shl
dec
mov
outsb
daa
xchg
pop
cmp
pusha
xchg
sahf
sub
dec
loope
loopne
and
inc
mov
xchg
and
stos
add
sbb
push
aaa
out
mov
xchg
mov
dec
mov
or
stos
xchg
adc
mul
mov
lods
hlt
test
mov
inc
mov
xchg
fadds
fdivrp
das
into
test
sbb
aad
mov
sbb
inc
jbe
mov
mov
pop
cmp
insb
out
fisttpll
push
sahf
mov
or
mov
cmp
push
jp
inc
and
ljmp
mov
shrb
vpandn
inc
mov
or
out
pop
mov
shl
mov
scas
lods
jmp
insb
and
fs
pop
add
mov
adc
inc
adc
jge
jb
leave
aaa
out
jge
mov
mov
mov
cmp
xor
roll
mov
stos
and
cmpsl
cmpsl
enter
aaa
pop
aaa
mov
cmp
insl
cmc
sub
pop
xor
cmp
sbb
es
lods
jno
and
fucomp
pop
test
push
sbb
cmp
pop
stos
into
jae
pop
xchg
xor
xor
inc
cmp
aaa
jo
xor
addr16
out
mov
jns
xor
pop
imull
ja
test
push
stos
cmp
mov
xor
and
mov
and
leave
push
dec
mov
or
repnz
mov
xchg
cltd
xlat
fdivs
lcall
or
sub
lcall
outsb
xor
fwait
pop
rcrl
loopne
xchg
inc
jo
outsl
pop
dec
sub
sub
fdivr
sub
push
xchg
sahf
insl
xchg
xor
xchg
jb
mov
sub
iret
lret
sub
ds
adc
adc
mov
xor
lods
leave
sbb
xchg
out
icebp
pop
outsl
mov
and
mov
lods
xor
xor
jecxz
push
mov
lock
enter
push
ret
addr16
out
mov
fimuls
dec
mov
mov
inc
mov
jb
lret
decb
test
nop
inc
add
cmovl
jge
xor
aam
mov
adc
popf
leave
jb
ds
imul
push
push
movsb
xlat
inc
pop
dec
iret
lret
jg
mov
out
push
xor
or
out
pop
mov
cmp
mov
and
push
shlb
orb
sub
xor
ljmp
xorl
jo
push
jb
sub
je
sbb
arpl
fcoml
bound
mov
add
daa
adc
movsb
xchg
loope
jae
imul
inc
fisubrs
in
repz
dec
pop
loop
fidivl
cmp
lods
and
fldenv
loopne
in
push
lret
fstl
add
jge
dec
jbe
jo
pop
inc
fsubp
jg
icebp
dec
cmpsl
dec
stc
popa
stc
out
out
mov
aaa
sbbl
scas
mov
inc
fildl
mov
hlt
add
lahf
jnp
jbe
insb
aas
mov
rcr
cli
xorl
xchg
push
cmp
cmpsl
loop
test
jno
xchg
sub
subb
cmp
fdivrs
or
sbb
or
push
push
movsb
cmp
je
cmpsl
sbb
inc
jp
fstpl
cmp
popa
sub
sbb
dec
or
test
mov
loop
mov
dec
xor
sarb
inc
sbb
jo
push
addr16
dec
push
iret
xchg
in
cmp
xor
imul
xchg
sbb
push
imul
ja
push
or
out
stos
push
loopne
sub
fwait
adc
mov
xchg
and
inc
cmpsb
scas
in
clc
andb
cli
push
imul
push
mov
xchg
aaa
sub
add
dec
xchg
cmp
aam
sar
pop
sub
inc
out
daa
ss
push
inc
mov
inc
adc
cmp
mov
xchg
loope
inc
jl
aad
add
adc
dec
test
xchg
cmpl
fidivrl
mov
mov
inc
out
in
mov
pop
mov
and
cmp
cmc
mov
enter
loop
xor
mov
jp
out
lahf
or
jnp
sbb
mov
shlb
push
fwait
cmp
shrb
clc
loope
mov
mov
xlat
popf
arpl
pop
inc
inc
and
xchg
out
int3
loopne
clc
roll
movsl
add
loop
stc
xor
fsubrs
and
ja
icebp
mov
mov
or
call
loope
pop
data16
push
xor
addl
shrb
dec
sub
mov
fwait
shrl
jp
mov
or
test
aad
dec
jnp
ficompl
inc
shlb
and
mov
jp
arpl
add
iret
das
sahf
shrb
and
sahf
mov
imul
xchg
gs
cld
pop
inc
cmpsb
jb
pop
loope
movsb
xor
stos
mov
or
push
and
mov
xor
pop
push
mov
mov
mov
je
mov
inc
lret
lds
push
jecxz
or
test
cld
test
shrl
xor
sub
orb
or
push
jno
add
adc
mov
cltd
inc
into
in
imul
push
ret
jns
and
notl
mov
xchg
cmp
daa
dec
es
rolb
jns
mov
iret
inc
movsl
cli
scas
jbe
lcall
fdivs
imulb
jmp
fs
sbb
into
mov
xor
cli
sub
adc
adc
in
cld
call
cmp
cmc
cmp
push
outsb
push
and
fstps
push
mov
cmp
out
ret
nop
roll
mov
jae
push
pop
push
push
mov
enter
cli
dec
into
call
insb
fwait
pop
add
in
add
sub
add
push
cltd
lret
inc
out
inc
sarb
mov
hlt
or
into
push
cmpsl
mov
inc
std
pop
sbb
xchg
xchg
ljmp
push
or
fistps
push
je
hlt
mov
shl
inc
add
lcall
and
push
adc
pop
xlat
fmul
fs
jbe
cwtl
testb
xchg
mov
aam
dec
mov
lcall
xchg
adc
mov
lcall
inc
pop
or
push
jmp
ret
ds
sti
pop
push
ret
clc
into
jg
cmp
stos
jne
fwait
xchg
mov
stc
ds
inc
adc
stc
sbb
out
push
out
jp
lods
and
mov
mov
fcmovbe
icebp
cmpsl
or
lds
lahf
stos
xor
in
mov
cmpsb
push
or
mov
stos
ja
mov
jbe
rclb
push
inc
cmp
sub
adc
xchg
fadds
mov
push
mov
ds
mov
xor
pop
xchg
inc
dec
ret
loop
icebp
out
stos
mov
jne
std
and
inc
or
mov
mov
call
sub
stc
cmpsl
sub
and
movsb
dec
mov
imull
pop
stos
adc
adc
dec
pop
movsb
mov
repnz
or
fincstp
pop
cmc
lock
popf
jge
cltd
pop
es
loop
sbb
popa
and
cld
inc
testb
push
aam
subl
adc
out
and
cs
dec
popa
and
in
das
or
push
jb
dec
nop
or
ja
das
mov
outsl
lcall
repz
pop
mov
addr16
jae
ror
test
loopne
rcrb
adc
pop
sahf
xlat
push
pushf
lahf
dec
and
lods
ret
and
mov
inc
add
xlat
stos
in
xchg
add
jmp
inc
icebp
in
cmpsl
inc
rclb
repz
movsb
pushf
and
inc
sbb
add
sar
mov
pop
xor
push
ljmp
push
mov
dec
cwtl
bswap
mov
sub
stos
adc
sbb
roll
lods
push
sub
outsb
pusha
shlb
hlt
ret
adc
int
mov
int
fs
mov
cli
in
pop
sbb
repz
sti
adc
mov
scas
cmp
cwtl
or
aas
out
nop
out
push
mov
int
pop
fmull
div
and
rorb
insl
mov
push
std
xchg
xor
outsl
push
pushf
pop
cmp
std
cwtl
mov
sbb
lea
sub
xchg
cmp
xlat
stos
gs
js
lahf
sub
inc
mov
adc
call
out
pop
aad
jmp
popa
jb,pn
cmp
inc
outsb
cmpsl
repnz
mov
push
fs
arpl
cmp
adc
orl
push
sub
lret
das
mov
in
cmp
addr16
inc
daa
mov
in
insl
dec
or
jmp
dec
xchg
mov
dec
in
push
data16
int3
xchg
mov
mov
jb
fbld
sbb
scas
adc
jae
cli
rorl
lahf
ror
into
enter
jecxz
xlat
jns
jmp
popa
out
push
lahf
jl
jo
sbb
inc
lods
out
clc
add
ss
dec
ja
lahf
pusha
push
pop
scas
sbb
mov
jo
mov
sahf
popf
in
repnz
in
and
fistl
xchg
out
pop
pop
or
loop
sbb
add
out
scas
idivb
jecxz
lret
jecxz
loopne
icebp
dec
lods
sub
dec
dec
or
add
sub
fidivs
lret
add
shll
sarb
ret
les
or
shll
adcb
cmp
pop
jne
dec
push
adc
xchg
pop
inc
movq
sbb
testl
pop
xchg
mov
outsl
arpl
ret
sahf
mov
std
addr16
arpl
xchg
add
add
jp
xchg
out
in
cld
movsl
push
lahf
adc
daa
lret
xchg
test
or
mov
inc
mov
insl
mov
push
mov
mov
push
outsb
jnp
fadds
stc
mov
and
std
mov
and
loope
adc
jne
xor
mov
xchg
mov
enter
mov
and
ret
sarl
enter
pop
cmp
fisttpl
js
pop
in
repnz
or
mov
ljmp
loopne
loopne
mov
mov
mov
xorb
cmpsb
cwtl
add
scas
jl
xchg
xor
pop
les
orl
test
in
sti
push
je
sti
daa
push
mov
gs
push
push
dec
scas
movsl
test
and
xchg
xchg
fs
icebp
jge
pushf
add
fwait
js
lock
lea
divl
sti
test
les
lods
arpl
out
das
out
cmp
cld
mov
dec
dec
sub
mov
jns
push
cmp
ret
xchg
aam
xchg
lret
mov
imul
nop
insb
test
lret
sbb
xor
cwtl
or
xchg
adc
lds
cmp
les
cs
out
cmc
jmp
sarl
pushl
lea
or
xor
stos
ds
loopne
jge
flds
out
aad
cltd
inc
push
mov
popf
mov
mov
cmp
repz
mov
cmpsb
mov
leave
andl
lahf
inc
adc
dec
and
dec
mov
pop
js
call
aaa
popa
add
jl
leave
rclb
mov
xchg
mov
scas
sarl
out
cwtl
fcompl
shll
sub
cmp
stos
leave
jae
jecxz
stos
mov
icebp
lahf
mov
sbb
sahf
in
ret
subl
jmp
push
cmp
es
call
rorb
cmc
test
mov
push
fisttpl
iret
pusha
adc
dec
inc
in
pop
adc
mov
xor
data16
xchg
loop
mov
aas
mov
enter
push
cs
ret
insb
push
and
pop
shlb
add
jb
or
xor
mov
cmp
mov
lea
adc
sub
cmpsb
xchg
xorb
cs
adc
pop
into
icebp
add
lds
out
shll
jg
daa
sub
sbb
inc
fistl
in
push
xchg
add
inc
mov
aas
mov
sbb
mov
or
cwtl
imul
pop
pop
ja
enter
lds
jnp
lock
andl
subb
mov
lods
cmp
loope
clc
fstpt
jl
aaa
sbb
fnstcw
movsb
jg
xor
fwait
xchg
test
jbe
dec
out
call
or
adc
jbe
in
lds
in
rorb
xor
sti
in
xchg
js
xchg
dec
push
dec
jecxz
pop
movsb
push
cs
mov
xchg
mov
pop
jbe
mov
mov
popa
sbb
cmpsb
mov
lcall
popf
push
and
xchg
int3
push
jne
add
rolb
setnp
std
and
mov
bswap
out
lds
lret
in
ficompl
or
std
push
fisubrl
dec
push
push
inc
fwait
dec
scas
ja
pop
shll
decb
iret
and
lahf
mov
fistpl
stos
xchg
cli
lods
pop
sub
pop
loopne
jns
mov
xor
mov
xchg
lahf
push
push
and
or
pop
sub
push
push
popa
mov
cmp
sbb
mov
pop
push
rcl
ret
add
push
mov
mov
sbb
shl
cli
push
lcall
mov
sub
shll
decb
add
mov
rorl
lods
jae
mov
and
inc
lret
call
test
repnz
test
pop
std
dec
push
addl
in
add
pop
gs
fs
dec
xchg
jge
fwait
aad
mov
das
sti
jle
scas
mov
pop
imul
dec
push
sbb
insb
movsl
cltd
mov
mov
mov
dec
xchg
dec
add
or
movsl
incl
int
xchg
std
and
ja
les
push
cmp
cs
sbb
stos
or
pop
notb
adcl
jnp
xchg
mov
call
jnp
data16
test
ljmp
sti
mov
mov
mull
cmp
push
rcll
loope
clc
fists
jnp
and
cli
push
bound
imul
adc
xor
sti
dec
jbe
movsl
and
lea
subb
shll
insl
xchg
jle
loop
bnd
out
xchg
lea
xchg
popf
dec
sub
bound
xchg
hlt
sbb
add
xor
int
mov
testl
jno
dec
mov
imul
add
imul
push
mov
add
or
mov
and
cmp
inc
add
jnp
mov
sub
dec
fcmove
xchg
rol
pop
test
out
jb
push
xchg
jge
stos
sub
ret
cli
pop
scas
xor
mov
mov
data16
fldlg2
int3
push
test
cltd
jb
enter
inc
imul
inc
cmp
cmp
push
push
adc
mov
cwtl
lock
insb
xchg
push
cltd
push
sti
push
call
mov
fdivrl
inc
fcomi
jne
stos
enter
mov
jnp
jl
jmp
mov
mov
xchg
xor
cltd
das
xchg
ljmp
jno
rol
jb
or
mov
test
lods
jle
jns
mov
sbb
movsb
mov
fdivrs
ljmp
mov
into
ljmp
lock
fldenv
xor
cmp
mov
outsb
movsb
push
sub
fiadds
test
mov
inc
shrb
js
push
pop
mov
inc
cmp
mov
stos
jb
stos
mov
shrl
leave
pop
test
aad
mov
jp
mov
jmp
decb
push
lds
mov
mov
cmp
mov
out
mov
movsl
mov
scas
and
popf
mov
adc
jecxz
int
push
jae
shrb
mov
dec
cltd
xor
es
sub
les
push
xor
cs
push
sbb
imul
adc
mov
fucomi
lods
stc
loope
mov
aad
dec
adc
mov
bound
test
shll
sti
imul
cmpsl
mov
sbb
cmp
outsb
jmp
bound
pop
sub
bound
fs
loope
outsl
les
idivb
rorb
flds
or
scas
cmp
in
sub
jns
std
ljmp
mov
rclb
pop
out
xchg
sub
cmpsl
sbb
or
jne,pn
pop
cwtl
fidivl
repnz
ds
xchg
fiadds
loop
out
mov
ret
ret
clc
inc
inc
push
or
mov
rcll
push
ret
inc
jmp
insb
leave
lods
ret
dec
out
push
and
jae
jge
xor
imul
addr16
inc
inc
call
mov
repz
inc
pop
xor
adc
mov
sub
inc
fucom
mov
jae
adc
outsb
adc
imul
push
dec
and
ret
clc
fisttpll
jns
mov
leave
cmp
add
icebp
icebp
push
add
lea
mov
xchg
rorl
adc
sub
inc
lahf
sub
xchg
lret
inc
icebp
rorb
inc
push
fisubrl
inc
bound
xchg
aad
inc
fisubrl
fimull
mov
mov
mov
hlt
dec
ljmp
enter
cmpl
sahf
or
dec
lds
jl
das
loopne
aad
and
jg
loope
inc
lock
mov
in
ret
dec
push
aad
mov
push
xchg
test
repnz
aam
ja
mov
cmp
bound
xchg
movsb
mov
shlb
lret
xor
shrb
in
scas
das
clc
enter
sbb
sub
cltd
loopne
ljmp
xor
add
mov
mov
popa
mov
push
mov
adc
lahf
cmpsl
sbb
push
cwtl
inc
mov
xor
stc
mov
add
out
negl
inc
pop
fsub
scas
out
sub
xchg
mov
sub
pop
ret
ret
jmp
lds
push
repz
pop
mov
jb
pop
adc
test
add
imul
arpl
pop
inc
fcmove
insl
lods
mov
mov
mov
inc
xchg
ret
push
sbb
dec
test
xchg
pop
pop
inc
pop
outsl
pop
or
lss
insl
push
mov
dec
add
lods
rcr
dec
add
lods
dec
arpl
ret
notb
pop
adc
push
mov
add
and
les
and
loopne
adc
mov
ret
mov
negb
ds
mov
je
imul
ja
stos
xchg
hlt
es
add
pop
xchg
jmp
xchg
xchg
js
cmp
pop
jnp
pop
ret
inc
dec
pop
jle
mov
xor
dec
pop
add
add
pop
push
dec
sbb
gs
and
mov
cmp
fistpl
les
and
jmp
pop
in
je
pop
arpl
and
cmp
mov
lods
rorb
or
mov
push
add
cmp
mov
insl
jecxz
or
cltd
fs
cmc
fsubrl
flds
mov
xor
punpckhbw
rcrl
cmp
or
out
sbb
outsl
push
or
xor
int
in
sub
pop
pop
nop
push
jae
jo
bound
jmp
fdivs
xchg
lcall
orb
inc
push
aam
cmp
adc
std
pop
pop
mov
dec
test
enter
repz
fcoml
sti
insl
lock
lock
jl
loope
aad
pop
movsl
add
push
or
dec
enter
xchg
add
xor
ds
cmp
push
mov
lds
outsb
sub
or
cld
subb
ret
jae
jg
jge
cmp
inc
jecxz
push
mov
push
out
je
rol
fsubl
fcoml
jle
push
lods
test
pop
rcr
sarb
sbb
loopne
fisttpl
cld
push
adc
sbb
fisubrl
sub
out
daa
push
adc
fnsave
cltd
cmp
mov
adc
or
pop
inc
xchg
aaa
jp
add
dec
sbb
mov
jno
and
fwait
cmp
adc
xor
insb
std
pop
inc
xchg
ss
test
mov
cmp
xchg
mov
aam
adc
push
scas
xchg
adc
hlt
jl
popf
fwait
xchg
insb
mov
in
test
cmpsb
scas
adc
mov
shl
mov
mov
mov
aaa
jnp
push
mov
sub
es
call
jne
mov
jmp
mov
add
movb
pop
adc
nop
xorb
cmpsl
inc
in
out
setno
pop
pop
cltd
call
inc
stos
std
loop
add
sub
xor
push
adc
ljmp
sbb
jecxz
jae
in
xorl
cwtl
dec
out
mov
shl
mov
fs
ja
dec
insl
lahf
adc
pop
push
dec
pusha
inc
mov
push
js
dec
cmp
add
mov
stos
mov
add
xor
mov
inc
repnz
xchg
fs
dec
lods
pop
aaa
lret
orb
imul
cmp
or
jno
and
inc
out
sbb
adc
loope
and
jg
cld
inc
incl
popf
pop
xor
xchg
xchg
popa
mov
cs
mov
inc
adc
lcall
sub
in
aaa
xor
out
pop
movsb
inc
adc
adc
aad
mov
cmp
xor
data16
cmc
insb
xchg
outsl
pusha
mov
sbb
jmp
or
and
data16
ja
pusha
push
sub
aad
movsl
xor
lahf
iret
popa
idivl
dec
xor
mov
push
dec
pop
sar
test
mulb
adc
shlb
mov
jmp
shl
pop
lods
jge
fstps
adc
push
xchg
popf
jbe
sarl
sti
clc
sbb
pop
cmp
cmpsb
mov
jo
test
ljmp
cmp
hlt
ret
jbe
es
dec
addr16
push
mov
jmp
adc
and
leave
sbb
xchg
sbb
lret
jg
test
sub
sbb
jl
std
std
dec
sub
push
pop
xchg
xchg
sub
mov
xchg
in
adc
xchg
mov
and
mov
bswap
pushf
enter
arpl
xchg
lgs
enter
inc
test
xlat
sbb
xchg
pop
ljmp
hlt
dec
in
ds
out
imul
arpl
fstpt
pop
test
mov
je
mov
sarb
adc
cmpsb
push
mov
mov
pop
or
and
dec
dec
xor
mov
pop
les
in
and
cmp
and
mov
xchg
push
imul
fs
data16
push
shl
data16
or
push
addr16
int
sub
jo
xchg
xchg
fldl
inc
sbb
sub
outsb
cmp
in
xchg
push
lret
adc
xchg
ds
in
rcrb
xchg
into
lret
cs
scas
mov
hlt
and
xchg
add
inc
mov
testb
mov
inc
adc
cmp
xor
xor
jmp
jmp
call
gs
sti
xchg
push
fs
ficompl
ret
xchg
cmpsl
lock
add
shl
std
mov
and
inc
push
imul
out
cmpsb
lret
arpl
shl
cmp
arpl
lds
cmc
mov
or
into
cmp
dec
jb
xchg
shl
inc
negb
outsb
sti
or
pop
not
test
jb
jbe
icebp
inc
test
mov
int
jae
dec
jmp
bound
xchg
adc
rcll
mov
ljmp
call
push
mov
sbb
std
stos
jbe
pop
dec
dec
push
pop
or
cmp
je
shl
test
and
in
pop
add
mov
test
cmp
pop
or
dec
iret
je
stos
pop
stos
jo
lahf
or
das
xchg
push
jbe
out
pop
sbb
ljmp
mov
xchg
lcall
aad
adc
adc
fsubs
fstpl
adc
xorb
adc
jecxz
mov
cmc
jp
mov
enter
sbb
xchg
sbb
mov
pop
mov
xor
mov
mov
fadds
push
int
mov
fcomp
cmpsb
push
jecxz
cmpsl
inc
pusha
imul
pushf
xchg
adc
push
movsl
xor
mov
push
scas
call
push
mov
mov
pop
pop
ljmp
dec
add
inc
cmp
push
test
pop
movsb
out
jne
xorl
mov
ret
jbe
inc
int
mov
pop
roll
sub
leave
test
std
adc
ljmp
inc
dec
and
out
push
push
mov
jnp
xchg
push
sbb
push
push
pop
test
int
or
ljmp
ds
pushf
int3
sbb
inc
or
jge
push
xor
mov
cmp
dec
mov
sbb
popf
dec
mov
out
lea
ljmp
sbb
repnz
popa
adc
and
mov
mov
sub
into
adc
mov
mov
mov
std
cmp
push
jne
pop
fs
lcall
fildl
mov
hlt
insb
push
repnz
gs
sbb
insb
xchg
dec
mov
fsub
mov
jno
dec
cmc
adc
fldt
xchg
cmp
popf
push
inc
mov
insb
in
inc
das
jge
ljmp
es
insl
mov
xchg
xor
inc
cmp
inc
std
dec
push
in
cwtl
imul
inc
imul
dec
mov
popa
sti
sbb
inc
push
mov
dec
divl
jmp
icebp
rcrb
cmp
cmp
or
popf
insl
or
and
xorb
fldenv
andb
xor
aam
int
cmpsb
xchg
lds
adc
add
adc
icebp
push
xor
push
shlb
loope
rcl
mov
cmpsb
inc
jns
cmc
cmp
rcll
xchg
ds
repnz
adc
popf
je
xor
sbb
iret
adc
jp
pop
xlat
mov
jmp
lods
sbb
clc
loopne
inc
fs
xor
pop
adc
and
jmp
lret
mov
fsubrl
inc
cld
scas
dec
es
adc
js
cs
cmp
jno
push
into
lea
enter
mov
sti
rorl
xor
xor
or
sub
js
push
sub
or
mov
dec
xchg
or
daa
insb
lods
mov
jg
xchg
inc
gs
jmp
inc
or
lea
mov
or
ret
mov
and
nop
cwtl
dec
cli
xor
pop
xchg
stc
xor
fwait
cmp
inc
inc
fdivl
jae
pop
push
jno
mov
lret
mov
mov
sub
rol
in
push
lret
inc
repnz
lret
adc
push
fisttps
popa
dec
out
ss
mov
add
pop
jno
cmp
sahf
jne
shrl
fwait
mov
lds
fcomps
je
and
aad
les
das
or
fisubl
ja
sbb
and
add
cmp
stos
cld
adc
pop
ret
xchg
enter
inc
jns
push
fistl
and
movlps
dec
inc
inc
xorl
outsb
mov
nopl
nop
mov
push
aas
data16
out
ficompl
lret
adc
call
inc
daa
imul
inc
es
and
hlt
popa
adc
xchg
aaa
fstpt
popa
and
push
push
pop
xor
jbe
dec
mov
cmpsb
sbb
mov
mov
mov
push
push
jb
into
imul
jg
in
sbb
pop
stc
xor
test
fwait
lret
jo
out
mov
inc
and
fwait
in
notb
mov
bound
repz
and
mov
orb
xchg
test
dec
popf
mov
push
pop
xchg
out
mov
lods
mov
cwtl
push
sub
leave
jns
sub
xchg
fs
mov
or
sbb
mov
jge
pop
jns
sti
pop
xlat
loopne
add
push
mov
xor
pusha
push
mov
into
push
cmp
mov
lods
or
pop
in
nop
jge
pusha
jmp
or
imul
bswap
inc
jl
rol
inc
ja
adc
pop
mov
scas
scas
loop
jne
and
mov
mov
pop
adc
xor
push
jns
inc
lods
stos
movl
mov
pop
xor
dec
int3
mov
popf
push
iret
movsb
ret
adc
inc
adc
sub
lcall
cmp
push
cld
sub
rcr
pushf
cs
push
add
divb
inc
push
out
xchg
cmp
add
xor
fists
xchg
leave
inc
stos
adc
aaa
jb
in
mov
sbb
jno
shlb
and
xchg
mov
jb
pop
mov
lods
movsl
aam
push
pop
xor
mov
lock
xchg
gs
aam
in
jne
pop
pop
nop
popf
movsb
bound
enter
loop
loopne
mov
dec
aaa
adc
xchg
cmpsl
fdivrs
dec
stc
loopne
inc
cmp
popf
mov
sti
leave
adc
fdivrl
int
sub
add
sbb
lcall
xor
mov
testb
mov
in
xor
push
inc
sub
scas
xor
loope
mov
mov
and
adcb
cmp
sub
js
fdivrl
lds
and
test
in
sub
clc
ret
aam
jns
adc
outsl
push
and
push
out
and
adc
outsl
iret
mov
cmp
sbb
push
loope
ficomps
imul
std
xor
fidivl
jnp
mov
mov
adc
in
adc
pop
mov
pop
popf
decb
push
inc
imul
fnsave
push
sbb
int3
and
xchg
cmpl
movsb
jno,pt
movsl
and
imul
enter
rcrl
adc
push
out
or
dec
out
scas
lret
xor
sbb
inc
mov
inc
ja
js
or
pop
repz
in
int
push
neg
cld
fdivr
rclb
ret
data16
repnz
and
stc
std
adc
test
inc
sbb
push
jle
xlat
push
mov
test
cmpsl
mov
push
lcall
call
std
jecxz
call
addl
inc
ss
scas
jo
pop
es
adc
pop
mov
ss
subl
pop
loopne
cmovbe
icebp
sbb
sbb
popa
lods
repnz
stos
fnstsw
add
faddl
leave
insb
mov
enter
pop
mov
pop
jle
mov
mov
mov
pop
and
inc
out
andb
fiaddl
es
sbb
or
bound
jno
pop
subb
hlt
js
push
popa
shll
divb
push
je
test
call
fiadds
int3
inc
outsb
add
jno
pop
movsb
outsb
out
push
hlt
out
clc
push
aad
dec
fs
mov
xchg
stos
pushf
js
decl
cmpsb
add
push
int
inc
pop
pop
ljmp
inc
pop
push
call
in
push
inc
and
push
ret
or
insb
cmp
jb
pop
push
sub
xchg
jo
xchg
or
imul
dec
jno
push
ret
out
test
aam
cld
dec
mov
add
inc
xchg
adc
xchg
xor
xchg
mov
sub
ficompl
jmp
std
int3
popa
fsts
shrb
lcall
xchg
add
cmpsb
mov
sbb
xor
out
push
mov
ret
inc
jae
xchg
lods
xorl
outsb
outsb
mov
mov
mov
sub
stc
iret
mov
mov
xor
or
cmp
dec
and
rorb
sbb
imul
and
mov
sti
fdivrs
mov
push
cmpsb
mov
mov
shll
cltd
into
pop
lret
les
mov
sti
lcall
loop
sub
js
mov
into
and
nop
rcr
lcall
sbb
je
loop
jg
out
mov
push
cmp
push
pusha
test
rorb
shrb
cmpl
mov
sub
and
mov
mov
mov
je
cmpsb
jmp
out
daa
xor
test
jl
dec
push
push
adc
mov
mov
aaa
pop
sub
push
mov
or
jns
add
pop
cmp
jo
push
lcall
xlat
adc
fs
or
jb
xor
jl
hlt
pushf
and
cld
ret
mov
mov
aaa
test
xor
mov
adcl
imul
loop
es
sub
mov
mov
dec
add
outsb
dec
notl
jae
ret
test
cltd
negb
xor
and
sub
imul
in
stc
mov
aaa
imul
pop
shrl
push
testb
inc
mov
and
mov
mov
jl
fdivrl
sahf
testl
insl
pushf
out
lcall
lahf
loop
pop
xlat
xchg
pop
and
xor
mov
xor
movsb
and
mov
xor
xchg
sbb
bound
jne
mov
mov
lods
stc
into
clc
cltd
mov
and
pushf
inc
mov
push
ret
shrl
inc
mov
mov
flds
inc
cwtl
lds
cmc
pop
add
adc
es
test
inc
lods
inc
clc
inc
jle
inc
and
pusha
pop
adc
mov
call
mov
scas
cmp
call
les
pop
sub
sahf
adc
outsl
ffreep
and
xchg
out
cmp
jmp
lods
jecxz
xchg
and
push
out
dec
adc
dec
sub
popa
scas
mov
popf
pop
negl
dec
xor
in
mov
and
imul
mov
imul
lahf
clc
test
jle
mov
lret
bound
mov
jnp
or
dec
enter
fs
adc
fsubr
inc
mov
int3
cmp
mov
psrlq
repz
in
push
push
ljmp
cs
ss
les
jne
aas
les
fwait
jae
push
sub
mov
int3
cmp
push
lods
inc
dec
repnz
sub
mov
pop
sub
and
adc
xchg
cwtl
xlat
or
lret
fsubrs
mov
incb
loopne
sbb
push
cli
push
testl
xor
pop
jp
jle
lods
movsl
movsl
cmp
sbb
in
dec
and
outsb
leave
xor
imul
and
jmp
sbb
dec
adc
iret
mov
mov
adc
rcpps
jmp
xor
and
or
sbb
pop
cmp
or
xor
pop
push
imul
mov
test
jne
inc
sbb
fcmovnu
adc
stc
adc
mov
cmc
scas
jmp
stc
xchg
jl
add
push
inc
ljmp
dec
rol
dec
fildll
mov
out
mov
and
xchg
fimuls
cmpsb
mov
mov
daa
dec
cli
mov
jge
pop
mov
push
fsubrl
in
mov
dec
nop
aas
mov
add
dec
mov
mov
sbb
sahf
and
jo
insb
cmp
repz
inc
jge
mov
pop
inc
jecxz
fistl
lahf
ret
pop
rol
pop
sbb
dec
mov
lods
int
or
les
loopne
leave
flds
aad
jne
xchg
insb
call
movsl
dec
mov
jno
ja
adc
out
cmc
cmp
mov
jo
xlat
fisttpll
decb
arpl
mov
sarl
ljmp
imul
cltd
fildll
or
testl
and
jmp
adc
arpl
adc
jg
lahf
add
pop
sbb
lret
outsl
in
jae
pop
rolb
outsb
sti
jb
stos
lods
mov
inc
mov
pusha
ret
les
dec
flds
cwtl
mov
push
xor
psrld
ficoms
push
or
lock
call
negb
jo
lret
xlat
xor
jg
std
clc
add
sub
jecxz
das
fwait
jl
fcmovnu
mov
pop
jl
in
jge
cmpsb
mov
cmp
dec
cmp
cmp
ret
dec
xchg
inc
xchg
xchg
aad
pop
xchg
leave
and
pop
repz
bnd
pop
out
add
lods
sub
or
out
outsb
xlat
addr16
jecxz
dec
push
imul
sbb
xor
mov
inc
pop
lock
adc
test
clc
jecxz
enter
mov
jns
adc
add
add
fstl
xor
int
cs
jbe
mov
test
push
andl
mov
jo
mov
fisubrs
aas
gs
sbb
lods
jecxz
lock
leave
icebp
out
dec
movsl
dec
adc
inc
mov
jno
enter
push
inc
dec
xchg
adc
insl
in
lret
gs
clc
inc
aad
fs
clc
sti
shl
ljmp
pop
rcr
xor
mov
jnp
bound
femms
xor
mov
into
repz
ret
push
adc
gs
dec
push
je
sbb
divl
lods
push
sub
jo
push
sbb
out
cmpb
sbb
mov
mov
inc
xor
addr16
mov
xor
cmp
fs
jnp
lahf
cld
sub
lret
lahf
mov
pusha
repnz
inc
test
cltd
xor
bound
hlt
int
shrl
adc
and
xchg
mov
xor
sbb
je
mov
mov
jge
loope
repnz
std
or
inc
pop
insl
bound
add
popa
xor
jne
leave
and
push
cmpsl
mov
sbb
add
int3
rolb
movsl
inc
dec
push
or
es
addl
inc
inc
leave
adc
enter
or
popa
in
aam
push
aad
mov
mov
dec
in
sub
loop
adc
in
icebp
xchg
and
push
cmpsb
jno
cmpl
aam
jne
cmp
movsl
cli
dec
xor
insb
sub
movsb
or
mov
repnz
xchg
fisubrs
sbb
imul
pop
dec
rorl
mov
cmp
pop
jo
sub
mov
stc
fwait
mov
sub
insl
scas
fildl
xor
mov
pusha
cwtl
subb
push
mov
and
xor
stos
insb
mov
test
lret
mov
in
inc
mov
and
add
add
or
mov
out
pop
xchg
into
push
icebp
add
mov
or
push
cwtl
mov
jl
dec
arpl
clc
push
or
arpl
sub
enter
inc
addr16
or
icebp
pop
leave
jns
mov
xor
adc
pop
js
add
in
lods
or
jns
xchg
int3
mov
jmp
xchg
jnp
out
sbb
push
add
push
enter
sub
jns
sbb
lret
lods
repz
fwait
insb
stc
add
std
pop
negb
mov
negb
nop
push
mov
stos
test
xor
jg
add
inc
imul
xor
mov
sbb
dec
std
out
mov
push
stc
mov
pop
test
nop
mov
mov
mov
loope
jg
sub
stos
jns
jbe
jnp
xor
movsb
mov
inc
pushf
add
mov
jl
xchg
sub
in
or
add
push
orl
adc
in
add
add
xchg
mov
add
xor
ds
mov
lahf
jae
pop
or
repnz
pop
fimull
sub
insb
sbb
negl
inc
jns
jae
mov
fisttpl
and
push
ja
int3
rorl
xchg
mov
sbb
and
pop
shll
add
mov
jle
jne
add
or
mov
lock
sbb
andl
movsb
or
jb
negl
rcll
pop
fdivs
adc
mov
mov
jp
or
xor
mov
ficomps
adcl
dec
lods
inc
lret
xor
outsb
popf
mov
push
je
inc
in
out
adc
jbe
or
jp
mov
or
adc
sbb
movsb
loop
je
mov
sahf
push
in
lds
sbb
push
enter
mov
pop
stos
cwtl
mov
pop
stos
xor
push
fidivrl
dec
push
test
scas
cmp
repnz
inc
sahf
or
stos
in
push
push
or
xchg
aas
dec
in
test
movsb
les
pop
scas
push
jo
adc
clc
dec
call
lahf
inc
out
aaa
pop
pop
inc
mov
test
les
xor
inc
jns
les
push
add
pop
dec
out
mov
xlat
jg
sti
push
mov
sbb
int
pop
mov
sub
cmp
add
mov
out
xchg
push
std
fcmove
mov
add
mov
shrl
push
dec
aaa
cmpsb
vrcpps
ljmp
pop
xchg
dec
push
inc
push
hlt
cs
dec
xlat
xor
xlat
stos
addr16
xchg
outsb
add
sbb
inc
cmp
cmp
arpl
and
add
push
iret
sbb
xchg
loop
es
loope
ss
sbb
fisttpl
les
fnstenv
sbb
or
hlt
scas
psrlw
push
nop
adc
mov
inc
js
and
jnp
rcr
cld
out
iret
or
mov
push
sub
mov
fiaddl
scas
loop
outsl
loop
addl
mov
loope
mov
xchg
add
or
lcall
mov
jmp
movsl
mov
es
jnp
lock
aaa
push
jge
sbb
scas
xchg
pop
xchg
inc
mov
fildll
enter
xchg
insb
xlat
push
and
fstps
push
and
movsl
cltd
jp
adc
inc
decl
pusha
mov
dec
jne
push
sbb
lock
mov
cmp
addr16
lea
mov
adc
out
cwtl
jo
out
enter
out
jo
cmpsl
in
xlat
and
xchg
pusha
roll
and
mov
mov
pop
cmp
les
jae
hlt
sti
xor
in
mov
or
dec
iret
ja
iret
xchg
cmp
iret
jno
int
mov
stos
xor
aaa
lds
sarl
jge
inc
mov
int
xchg
sbb
test
shlb
fcoml
pushf
cli
push
mov
xchg
jp
mov
fcos
push
ret
mov
dec
add
enter
push
sub
inc
scas
pop
dec
subb
adc
add
das
mov
pop
mov
jb
shll
add
mov
mov
xchg
mov
cmpsl
cmp
addl
xchg
mulb
lret
lahf
push
cmp
cmpsb
rcrb
dec
fs
testl
out
lds
fmulp
cmp
scas
cmp
jns
dec
pop
jp
pop
pop
cmp
pop
pop
bound
or
lock
gs
je
aas
jne
push
pop
stc
add
cmp
pushf
sbb
inc
xor
test
jo
add
pop
jo
push
xor
push
mov
fwait
mov
fwait
movsl
mov
mov
iret
pop
lock
int
cli
lods
xor
sbb
pop
mov
jg
xchg
jno
fisubrl
xchg
lods
testb
cltd
push
inc
lods
adc
mov
sbb
or
add
push
cli
adc
into
push
jg
mov
mov
lds
and
call
adc
int
or
sahf
test
cmp
out
mov
mov
xchg
cmpsl
xchg
add
repz
lock
dec
push
insb
cmpb
adc
inc
inc
stos
xchg
and
pop
mov
pop
arpl
adc
mov
inc
movsb
mov
dec
and
out
or
lret
xor
clc
stos
push
adcl
ljmp
int
bound
and
ret
mov
iret
cmpsb
xor
sarb
fldl
xchg
mov
out
mov
imul
inc
cld
imul
cltd
lock
pushf
mov
shrb
push
in
insb
inc
clc
outsl
shl
xlat
jp
xlat
sbb
cmp
pushf
and
fdivp
cmp
or
mov
jmp
jae
push
das
insb
dec
add
cmp
add
leave
mov
insl
adcl
dec
adc
cmp
lds
cmp
mov
sbb
jge
inc
pop
jae
je
outsl
gs
pop
repnz
out
sub
orl
aad
aam
jo
pop
imul
jl
jge
mov
adc
daa
fcompl
xor
mov
sub
adc
sbb
mov
aaa
adc
mov
shrb
push
xchg
clc
mov
push
jp
ds
int3
lods
aad
jae
mov
fbld
xchg
pop
cmp
pushf
adc
out
lret
loope
mov
add
xchg
adc
adc
inc
xchg
jb
loope
xchg
sub
and
shl
in
das
cmp
sbb
adc
cmp
mov
mov
cmpsb
pop
movsb
insl
xchg
cmpsl
sbb
mov
insl
fdivrp
addr16
icebp
push
xchg
loope
cmp
push
rorl
cmp
imul
add
xchg
and
popl
lret
lds
stos
cmp
xchg
mov
adcb
xor
sub
push
or
rcrb
cmpsb
push
mov
ss
xchg
in
cwtl
lcall
clc
xor
jecxz
push
pop
into
daa
test
lods
ret
popf
pop
and
push
stos
fs
xlat
lods
imul
outsl
test
add
push
addb
rcll
les
mov
jp
rcrl
arpl
dec
js
popa
js
jnp
mov
inc
add
sbb
push
adc
aam
cltd
jae
mov
jne
pop
scas
mov
addr16
push
jo
mov
sbb
xor
popa
jne
popa
popa
in
mov
xchg
int
sbb
push
mov
imul
scas
xchg
add
dec
add
loop
jne
out
push
sub
inc
ljmp
pop
imul
xchg
pop
cwtl
xor
int3
pop
mov
ret
mov
mov
dec
mov
sub
insl
divl
cmp
ret
pop
into
xchg
jnp
outsb
jno
push
xchg
pop
adc
call
fs
add
push
std
push
xchg
pop
mov
sbb
jecxz
jl
xchg
inc
decb
pop
jb
fcompl
inc
push
lret
fisttps
pop
enter
aas
pop
mov
aam
sbb
adc
jp
sarb
jnp
mov
jecxz
dec
loop
xor
inc
lods
sbb
mov
fildl
loopne
rolb
lea
jns
or
movsb
mov
rcrb
out
pusha
xor
popf
into
idivl
push
out
inc
aaa
imul
in
leave
lret
jle
or
lds
sbb
ret
inc
clc
out
add
cli
mov
je
gs
adc
mov
jae
cmp
insl
iret
enter
mov
testb
mov
clc
loop
mov
sbb
ja
mov
popl
or
pop
sub
push
and
lea
imul
bound
mov
repnz
xor
int
adc
fs
pop
xor
stos
xchg
hlt
enter
call
loop
jl
push
push
jns
daa
mov
xchg
xchg
add
mov
mov
pop
cmp
sbb
js
sub
push
repnz
fwait
dec
mov
fldl
daa
xor
int3
cmp
movsl
outsb
inc
xchg
mov
cwtl
ret
push
pop
imul
popa
jg
sbb
in
push
ljmp
or
insb
daa
mov
sbbb
add
popf
lods
sub
adc
add
inc
shl
push
dec
fwait
adc
push
push
aam
movsb
lret
xchg
aas
movsl
mov
sahf
popa
fcoms
icebp
pop
ljmp
std
xchg
in
dec
scas
jno
push
inc
xor
lds
or
mov
inc
mov
daa
mov
out
push
and
test
and
xchg
aad
xlat
fbld
rolb
dec
aas
xchg
dec
ret
mov
xchg
orl
sub
or
stos
push
in
test
nop
push
add
sbb
fiaddl
push
loopne
les
jmp
push
ret
movsl
xchg
sub
mov
fwait
movsl
sar
dec
pop
test
cmpsl
fcmovnbe
mov
dec
dec
imul
inc
pcmpeqb
xchg
pop
call
cwtl
outsl
int3
push
daa
jmp
jb
mov
dec
add
loope
xchg
push
test
dec
mov
jb
push
mov
xor
mov
and
rclb
mov
les
out
jmp
jne
call
cmpl
fildll
jae
popf
inc
mov
shrl
test
in
jno
imul
je
imul
repz
jnp
mov
mov
loop
scas
xor
sbb
mov
cmp
pop
fwait
mov
or
ja
repz
xchg
das
pop
aaa
mov
pop
or
fisttpll
xchg
fbld
aas
cmp
rorb
or
jbe
or
ret
cmpsb
movsb
lcall
cwtl
adc
mov
out
mul
dec
push
lea
jne
sub
mov
xchg
aad
imul
cltd
mov
sti
xchg
arpl
loope
push
add
adc
aad
xchg
or
aaa
dec
movl
lahf
imul
imul
jae
and
call
inc
cmp
daa
jno
inc
or
lds
lds
lcall
nop
into
pop
xor
stos
bound
pop
adc
fucomi
in
mov
mov
leave
inc
in
adc
jb
inc
mulb
xchg
push
iret
dec
push
mov
push
adc
in
sub
out
push
in
push
clc
cwtl
clc
inc
cmc
mov
dec
mov
lods
and
ret
rorb
fsts
xchg
shl
mov
adc
int
nop
cmp
cwtl
repz
sbb
pop
xchg
lret
stos
and
inc
jns
mov
mov
pop
popf
pop
pop
xor
fdivs
mov
and
push
xor
dec
nop
mov
and
sub
pop
and
cmpl
js
mov
and
loope
les
in
daa
mov
mov
stc
jmp
lods
or
sbb
aad
xor
xor
xor
fsubs
sub
sbb
adc
and
test
cld
fadd
aad
dec
loopne
pop
jae
mov
pop
push
bswap
xor
push
fbld
in
pop
sub
cmp
adc
inc
addb
divl
lret
and
dec
ds
push
push
add
das
or
mov
popf
outsl
aam
sbbl
addl
lcall
cmp
fdiv
stos
jle
sbb
lods
cwtl
and
fstl
jl
jl
rcrl
sub
jnp
add
js
imul
rcll
push
mull
cmp
pusha
mov
or
push
xchg
gs
jge
ljmp
xchg
mov
and
mov
mov
ret
mov
jle
mov
xchg
adc
and
mov
stos
and
ret
jne
jge
pop
jns
int
loope
int
xlat
jl
jle
movsb
je
imul
add
aas
and
fists
insl
pop
mov
sub
into
jbe
lds
xorb
mov
mov
sub
xchg
lods
dec
or
dec
sbb
popa
inc
shlb
ret
insl
mov
loop
inc
jp
mov
jae
pop
push
mov
push
add
and
jge
adc
sahf
cmpsl
and
shrl
xchg
lods
fimuls
dec
push
xor
dec
js
mov
cmpb
or
pop
scas
lret
add
rcrb
mov
xlat
test
mov
xchg
mov
iret
cmp
xor
or
sub
xchg
xlat
imul
movsl
jbe
movsl
push
push
fs
sbbl
gs
movsl
inc
out
sub
push
inc
jge
adc
xchg
pop
dec
xor
mov
loop
sub
ds
dec
fisubrl
jae
enter
xor
mov
pop
add
pop
sarb
or
pop
pop
test
mov
sbb
push
pop
lea
sub
pop
mov
inc
movsl
aas
sub
arpl
call
testb
popf
imul
es
lret
and
xor
mov
movsl
inc
push
xchg
stc
sahf
mov
and
sbb
pop
in
dec
adc
mov
sub
gs
and
movsb
pop
lock
jno
push
jmp
into
dec
jmp
cltd
test
ja
xchg
cli
inc
pop
pusha
fdivs
pop
xchg
enter
sub
push
xchg
lcall
call
roll
stos
push
pop
ret
push
mov
mov
xor
sub
ret
nop
adc
sbbl
pop
and
cmpsl
lods
fdivrl
pop
or
jp
jnp
stc
in
adc
negl
push
ds
dec
add
imul
in
dec
lock
sub
push
add
test
mov
fidivrl
scas
mov
aad
xchg
mov
xor
addr16
add
lahf
orl
cwtl
xchg
xchg
adc
aam
xchg
fcoms
mov
sbb
mov
jle
pop
cmp
out
xchg
data16
js
cmp
add
jno
dec
sahf
mov
clc
xor
cltd
jmp
js
fdivl
mov
mov
cmp
sahf
xchg
or
sbb
insl
lds
add
push
sbb
out
aad
scas
pop
mov
push
or
sbb
mov
xchg
pop
sub
xorb
mov
mov
cwtl
popa
arpl
dec
fwait
and
jecxz
psubsb
pop
lea
dec
movsb
dec
add
sub
hlt
xor
push
popf
dec
roll
neg
push
mov
ret
je
adc
jnp
repnz
adc
int
dec
pop
mov
cwtl
in
mov
cmpsb
push
fs
mov
lea
push
fildl
pushf
push
cmp
arpl
xor
mov
jnp
mov
lds
xlat
sbb
sbbl
data16
je
push
push
mov
jnp
xchg
add
or
lds
js
pusha
imul
adc
in
xchg
fsubrl
inc
pop
jb
push
pop
pop
je
imul
fadds
sti
add
mov
mov
or
add
inc
cmp
lock
and
les
mov
pop
nop
jns
and
lret
xchg
jmp
dec
cmp
ds
dec
xchg
int
pop
pop
je
ds
sub
pop
sbb
fs
cmp
insl
pop
shlb
dec
push
add
or
lea
pop
jg
and
lods
inc
repnz
xchg
push
mov
push
daa
jns
mov
and
jl
push
mov
sbb
and
in
jg
adc
imul
jle
fsubrs
dec
es
lahf
cmp
mov
jae
and
lock
mov
sbb
loopne
inc
loope
gs
and
dec
int
pop
test
subb
icebp
js
je
mov
leave
xchg
cmp
ljmp
push
loopne
int
dec
dec
call
lahf
in
shlb
dec
idivl
ja
xor
movsb
cmpb
adc
fdivrl
sub
loope
into
jne,pt
pop
and
cmp
jnp
inc
sub
outsb
mov
or
xchg
or
iret
inc
cmp
cmpsl
mov
jne
out
add
mov
adc
push
call
add
sbb
imull
sbb
or
aas
pushf
aas
jg
and
mov
xor
aad
test
lods
pop
lea
fnstcw
jl
movsb
jo
sarb
mov
inc
fs
int
lret
add
jno
or
ficompl
cs
add
imull
jp
cmp
pop
pop
dec
movsl
xor
xchg
shl
ret
aas
imul
hlt
dec
cmp
cmc
inc
hlt
pop
xlat
mov
cmc
sbb
jae
mov
mov
push
mov
ret
jb
ss
test
frstor
push
fcompl
sbb
or
mov
daa
adcl
xchg
fistl
dec
outsl
cmp
add
mov
and
mov
mov
push
add
inc
and
call
ss
outsl
jne
mov
dec
mov
mov
lds
xchg
idiv
lea
in
out
insl
adc
cmp
or
mov
cmp
sbb
enter
and
push
xor
ljmp
jle
fwait
pop
push
mov
pop
shll
push
mov
lock
es
dec
cld
out
inc
cli
inc
cmc
or
clc
ficoms
mov
jb
add
jp
cmp
movsb
repz
lods
aaa
lods
negl
and
xchg
push
stc
loope
pop
pop
sahf
movsl
sbb
addl
fsts
shll
fcom
inc
pop
xchg
ret
add
push
cmp
inc
lods
or
je
pop
aas
ljmp
dec
push
mov
mov
out
adc
aam
aad
and
push
dec
lock
xchg
repz
shrb
and
mov
xor
fcomp
ja
fwait
inc
or
pop
xor
or
cmp
shl
sahf
mov
jnp
dec
incb
test
test
mov
cli
add
mov
and
rclb
cmpsb
fdivr
bswap
xor
mov
adc
push
lahf
loop
stc
sar
sub
inc
xor
test
shl
or
call
sub
jle
adc
jp
mov
mov
cmp
sbb
xchg
mov
cld
das
lahf
js
pop
inc
jl
shr
add
mov
test
xchg
sti
add
pop
mov
push
mov
fdivrl
and
fs
push
and
mov
jmp
sbb
and
popl
in
in
add
pop
jl
cmc
dec
incb
jo
insb
out
mov
test
cmpsb
mov
shlb
mov
out
sti
sub
jg
sbb
in
hlt
xor
pop
pop
filds
fdiv
mov
and
inc
cmp
aad
jmp
pushf
call
xchg
adc
mov
cmpsl
jmp
jle
lods
fisubrl
nop
jns
jl
xor
out
lds
cmp
add
xor
or
and
push
aam
jae
test
rcr
mov
cltd
sbb
lods
add
mov
add
mov
ljmp
leave
mov
pop
je
mov
in
add
sub
into
out
and
sbb
xchg
push
lods
add
test
data16
sub
arpl
je
mov
cmp
mov
movsl
jnp
rcr
fs
aad
cmp
add
mov
rcrb
adc
sahf
pop
in
adc
aam
bound
xor
mov
sahf
and
mov
pushl
outsb
add
pop
cld
rolb
xchg
inc
dec
rorb
sbb
sub
sub
lds
dec
cmpb
addr16
fisubrs
jne
insb
pop
icebp
cmpl
xor
pop
out
lods
push
out
rcl
push
jo
xor
add
data16
in
faddl
insl
stos
mov
xchg
popa
mov
push
sbb
ror
inc
outsb
jp
fstl
outsl
cmc
out
mov
mov
mov
fistpll
mov
nop
fisubrs
test
mov
lret
inc
aam
jno
pop
push
scas
enter
push
jno
adc
scas
insl
mov
pop
push
in
mov
aas
dec
add
xchg
or
mov
ret
and
test
inc
mov
hlt
cli
sbb
cmpsl
scas
movl
movsb
xchg
mov
inc
stc
jns
int
mov
dec
mov
mov
jp
in
push
sbb
int
dec
sbb
fldt
xchg
add
int3
sub
aaa
push
xor
sub
test
jae
mov
jns
pop
sub
shrb
mov
ljmp
mov
adc
test
aad
dec
test
repz
shll
loopne
popa
cltd
jmp
mov
ret
fsubr
sbb
xchg
push
int3
into
sbb
dec
lea
push
mov
inc
cmpsl
leave
and
mov
loopne
ret
dec
pop
shrb
scas
int3
cmc
cltd
rcrb
hlt
pop
aaa
pop
mov
mov
lock
cs
inc
mov
and
out
add
outsb
js
add
imul
cmp
frstor
add
jno
mov
mov
sub
inc
dec
push
out
decl
cmp
out
cmp
data16
int
mov
xlat
shrb
lock
push
bound
test
lock
in
repnz
fwait
sbb
mov
pop
cmpl
lods
xchg
inc
add
cmpsl
testb
das
push
xor
pop
rorl
rorl
int3
sub
or
fstpt
push
icebp
inc
lods
rorl
push
lret
in
ficoml
clc
shl
pop
out
ds
mov
mov
pop
pop
ret
scas
or
test
ja
dec
adc
and
cli
ljmp
popf
ss
fnsave
dec
int3
mov
cltd
cmc
js
jl
push
in
sarb
cmc
adc
pop
out
mov
mov
or
jno
lret
fsubrl
test
negl
repz
ljmp
scas
stc
repz
sti
ljmp
xlat
pop
adc
inc
cmp
cmp
outsb
out
mov
jmp
in
xor
stos
gs
or
or
jne
inc
ds
fsubl
int
arpl
clc
in
in
js
stos
in
add
lods
pop
and
adc
push
cmp
aaa
push
or
jnp
push
cli
and
clc
adcb
fiadds
pop
push
push
jl
test
adc
sbb
push
nop
push
mov
and
or
loopne
and
cmp
xlat
mov
and
dec
mov
add
cmp
adc
push
xchg
pop
add
loopne
shl
loop
cmp
incl
pop
adc
outsb
loope
push
popl
inc
int3
in
push
sbb
jnp
push
jne
bound
pop
clc
push
pushf
pop
push
dec
push
stc
movsl
mov
cmp
cs
in
adc
in
push
push
icebp
punpcklbw
add
nop
mov
repz
adc
inc
lcall
sub
sbb
xchg
mov
and
stos
test
push
lock
cld
add
xor
sbb
and
daa
aam
lcall
adc
aad
cmp
lods
mov
inc
lret
int3
fidivrs
in
jbe
aam
mov
in
jmp
push
test
cmp
dec
incl
mov
shlb
fxch
aad
lea
xchg
dec
dec
pop
cmp
lds
pop
mov
lahf
daa
mov
sub
push
es
js
mov
sbb
mov
xchg
pop
enter
pop
adc
test
inc
shlb
imul
jne
adc
daa
loope
pop
fcmovnb
rcll
roll
mov
cmp
ljmp
hlt
insb
xor
std
mov
sub
loop
jg
sbb
jbe
fisttpl
jmp
mov
pop
and
out
repz
mov
lea
jge
mov
and
mov
jb
mov
in
fcmovnb
sub
mov
pop
loope
push
insl
fldt
ss
arpl
dec
and
andb
sbb
or
jae
jae
mov
out
mov
jb
jnp
ret
mov
leave
add
or
es
and
jge
loope
push
push
sub
jo
ret
pop
lods
push
xchg
in
pop
lcall
dec
sub
ss
fstps
xchg
movsl
dec
push
mov
push
dec
in
or
adc
je
mov
or
hlt
cmc
stos
ja
add
xchg
jnp
cmp
stos
loop
xlat
adc
push
push
mov
pop
js
push
add
aas
pop
call
test
enter
sbb
inc
popl
stos
ss
adc
aad
cmovno
push
lcall
sub
movsl
repnz
mov
dec
arpl
mov
std
or
inc
mov
ja,pt
ss
mov
les
add
mov
movsl
mov
and
gs
mov
sub
mov
and
pop
data16
icebp
insb
insl
aam
dec
or
lea
push
inc
ja
in
push
xor
push
dec
das
or
lods
popa
leave
jo
mov
shll
rcr
fs
call
mov
mull
adc
xchg
shrl
ss
dec
push
jmp
jl
or
add
push
stos
push
int3
ss
neg
sahf
shlb
fwait
lahf
test
or
aas
aad
in
rorb
jo
mov
test
jo
cmc
and
and
xchg
mov
pop
pushf
mov
and
in
lret
xor
cltd
lcall
nop
xchg
mov
imul
xor
je
data16
xchg
mov
lods
out
jne
out
out
lods
mov
pop
pop
pop
xor
add
jno
cmp
mov
adc
xlat
loopne
mov
ljmp
sbb
call
test
or
lock
cmp
popf
ja
stc
xor
es
sub
ja
mov
fisubl
pop
jne
xor
xor
insb
push
stc
inc
xor
xor
int3
fsubrs
mov
imul
out
hlt
jmp
in
aas
in
xor
sbb
jb
ljmp
hlt
aaa
lods
shld
adc
jne
mov
cmpsb
popl
inc
jb
pop
xchg
mov
in
add
xchg
arpl
out
inc
ja
adcb
lods
leave
sbb
xor
leave
xchg
ljmp
out
out
dec
mov
out
pop
jo
cwtl
es
mov
push
sbb
dec
cld
rorb
adc
inc
mov
roll
dec
mov
inc
cmp
in
jmp
or
imul
push
sarb
cmpsb
pop
add
pop
add
int
ret
mov
inc
adc
jge
aas
test
jb
mov
or
popa
movsl
lret
sub
cmp
sbb
in
mov
idivl
pop
test
jnp
in
ret
xchg
addr16
xor
push
pop
xchg
sahf
repz
dec
jne
mov
or
decb
shll
in
sti
int3
inc
std
mov
inc
test
xor
gs
and
and
mov
out
xchg
add
xor
xchg
adc
inc
xchg
sbb
imul
mov
pop
aas
stc
push
xchg
rorl
jne
aaa
cmpsb
sbb
adc
jecxz
sub
aam
lret
sbb
mov
inc
pop
and
push
out
les
ss
ljmp
aas
inc
pop
adc
lret
xor
inc
mov
iret
aaa
ds
dec
ljmp
jecxz
stos
sub
cmp
punpckhwd
pop
lahf
pop
push
lret
pop
mov
test
xchg
pop
call
pop
sbb
or
inc
cmp
pop
sti
in
popf
or
outsl
lcall
jg
dec
lods
mov
xorl
sbb
popa
jge
loopne
and
or
xor
loop
dec
das
dec
ds
jge
out
stos
xor
fucomip
insb
sub
jb
ret
fadds
mov
pop
mov
adc
call
mov
sbb
adc
insb
fs
cld
outsl
in
sub
movsl
xchg
in
cld
push
pop
sub
pop
test
and
push
into
and
mov
or
test
fbld
sti
ds
mov
xor
jb
fildll
jl
push
sub
fstpt
ja
cwtl
or
cmp
jns
or
jb
dec
mov
imul
std
lods
or
andl
add
mov
rorb
dec
ss
and
ror
xchg
aaa
lds
enter
push
pop
push
or
mov
or
lret
into
jnp
pcmpeqd
dec
mov
cs
jg
ret
ss
int
imul
or
lods
pop
mov
test
mov
xchg
stos
pop
mov
lock
test
xchg
mov
int3
lock
stos
dec
push
lea
outsl
add
add
xor
mov
stc
lahf
aas
rcr
mov
cmp
mov
and
imul
fwait
pushl
push
xchg
hlt
xor
popa
iret
les
orl
sahf
les
jmp
push
popa
xchg
int3
jo
or
dec
cs
stos
int
push
mov
or
push
jns
adc
bound
add
jg
iret
push
gs
xchg
shlb
arpl
insl
repnz
int3
lods
movsl
cmc
stos
mov
push
stc
iret
pop
in
jle
ret
gs
fs
insb
sbb
pop
jbe
mov
xlat
jb
dec
adc
push
pop
in
add
cli
aad
inc
push
je
push
lret
sub
dec
xor
out
lock
inc
addb
sbb
sub
xchg
xor
jg
xor
jmp
icebp
push
cmc
fucom
lods
jmp
lods
into
out
lret
lret
in
xor
pop
dec
int
mov
jge
pop
push
cmp
rcl
out
cmp
pop
std
arpl
dec
mov
or
pop
adc
cmc
lcall
xor
add
push
pop
lea
das
inc
inc
sbbl
mov
inc
sbb
mov
pop
stc
outsl
sub
fsubrs
iret
loop
mov
sbb
into
lret
mov
jns
and
mov
popl
nop
mov
orl
mov
ret
jbe
xor
cmp
lcall
ror
dec
inc
outsb
inc
cmp
outsb
into
je
popa
lahf
jne
mov
pop
pop
sbb
sbb
imul
push
test
and
imulb
cmp
pop
sti
push
out
jmp
mov
in
dec
jmp
jnp
dec
mov
push
sub
testb
mov
xor
mov
cwtl
test
adc
and
push
aam
data16
hlt
push
or
pop
mulb
push
lock
ljmp
inc
insb
cmp
add
mov
stc
dec
mov
sbbl
inc
cli
imul
outsl
mov
inc
call
insb
int
lods
jne
enter
cltd
push
dec
pop
jl
std
sub
gs
mov
xchg
fnstenv
jb
dec
dec
sub
inc
pop
pop
pop
shr
pop
sub
push
insb
enter
xor
lahf
arpl
stc
cmp
setne
bound
aaa
lods
filds
call
in
in
fwait
fs
les
mov
movsb
lds
fwait
push
cld
cmp
mov
cltd
pusha
loope
call
std
insb
test
ror
fsubrp
daa
mov
xchg
outsb
pop
fmul
inc
lahf
adc
add
lahf
sti
and
push
pop
idiv
sbb
pop
arpl
mov
or
dec
inc
pop
pop
hlt
hlt
loopne
pop
in
inc
insl
fidivl
inc
gs
pop
dec
in
popf
scas
mov
ds
jae
sbb
lret
or
dec
addb
xchg
mov
jo
dec
lea
lods
scas
sbb
test
cmpsb
dec
fstps
lods
decb
jle
sub
and
mov
aam
jl
adc
jle
mov
popf
adcb
shr
movsl
leave
lods
ret
inc
mov
mov
push
lret
add
jle
add
xor
out
sub
mov
shrb
aam
insb
mov
scas
pop
sarb
pop
popa
roll
cmpsb
sti
pop
add
sub
push
sbb
mov
add
dec
inc
js
stos
dec
dec
enter
or
add
sub
rcrb
pop
dec
xor
mov
pop
adc
fldenv
test
adc
in
stos
lock
mov
lret
stc
lcall
iret
or
jge
adc
push
sbbb
les
inc
adc
frstor
jnp
subb
es
repz
daa
scas
adc
xor
mov
fs
test
ja
mov
push
xchg
xor
push
addl
dec
mov
clc
adc
push
jae
outsl
add
dec
repz
cs
jmp
sbb
fnstcw
push
sbb
lcall
mov
or
dec
aam
aas
movsl
pop
fldl
popf
ljmp
adc
stos
xchg
je
or
inc
into
push
shll
pop
pop
cmp
ror
fimull
stos
add
mov
imul
insb
les
ljmp
mov
mov
mov
dec
dec
sbb
les
dec
addl
cltd
aaa
mov
add
lcall
stos
sub
push
cmp
mov
cmc
lds
and
inc
cld
cmc
imul
cmpsl
lret
leave
cs
xor
inc
push
std
inc
int
sarl
sub
jns
dec
xor
shll
pop
xchg
pop
jo
push
ljmp
mov
adc
and
fbld
imul
pop
dec
mov
cmp
pop
lcall
dec
push
and
add
push
mov
orl
add
lods
mov
and
shl
enter
jecxz
xor
xor
mov
mov
bound
ljmp
movsl
adc
neg
push
cs
shlb
scas
fidivrl
cmp
fdivr
test
cmc
add
stc
inc
inc
mov
jp
xchg
lea
outsl
jmp
dec
push
rolb
enter
dec
enter
adc
ss
cmp
into
negb
lret
repnz
mov
lds
and
out
cld
lods
mov
fdivrl
add
lret
imul
out
shll
mov
mov
xor
pusha
jle
adc
scas
sub
and
sub
cmpl
add
mov
fwait
je
pop
xchg
iret
addr16
xor
sub
inc
stos
mov
aaa
test
push
cli
lcall
jmp
dec
xchg
mov
gs
mov
testl
rorb
dec
movsb
mov
push
fwait
mov
call
cmpsb
dec
shll
sbb
dec
inc
jg
ja
sub
and
pop
inc
xor
fisubrs
scas
dec
sbb
pusha
popa
pop
lds
xchg
negb
int3
daa
fsubrl
lds
in
mov
lods
mov
xchg
bound
xchg
lea
loop
mov
cmp
jnp
adc
pop
shlb
out
push
pop
out
inc
mov
inc
scas
mov
push
pop
push
mov
jp
in
xor
dec
jbe
mov
popf
inc
and
das
adc
lret
imul
cwtl
into
in
in
pop
mov
je
scas
lea
bound
test
aad
popf
bound
scas
and
jmp
jno
int3
mov
mov
jg
sbbl
or
incl
mov
jp
push
std
push
gs
pop
inc
push
fcmovbe
sub
into
sbb
stos
sti
jecxz
popf
or
lret
mov
in
push
aam
lds
xor
mov
rorb
repnz
push
in
dec
xchg
dec
pop
and
stos
xchg
cmp
test
mov
pop
sub
mov
or
mov
aad
mov
and
ror
test
dec
sti
or
movsb
add
test
inc
pusha
or
insl
mov
cld
fists
mov
test
xlat
add
pushf
and
mov
xchg
mov
fstl
enter
out
dec
and
aam
fistpl
ljmp
inc
mov
and
mov
aaa
movsb
jnp
jp
std
insl
cmp
push
pop
stos
mov
shr
dec
adc
sub
cmc
cwtl
lds
aad
ljmp
add
adc
fdivs
insb
inc
pop
push
sub
mov
das
pop
push
and
pop
sti
push
xor
xlat
xor
in
xchg
jns
cs
cmc
xor
push
clc
and
cmp
daa
and
ficoml
xchg
push
adc
jbe
dec
and
pop
mov
sahf
jne
sarl
dec
pusha
cltd
rorb
cld
and
and
mov
xchg
pop
subl
popf
xor
in
pop
stc
mov
dec
add
dec
fdivs
and
shll
and
mov
mov
ret
mov
adc
shrl
cmp
ljmp
loope
gs
mov
mov
and
out
inc
xchg
xchg
sbb
call
push
iret
in
clc
aam
push
add
or
lcall
aaa
fdivr
pop
aaa
and
sbb
jns
loopne
insb
fwait
push
je
or
loope
ret
arpl
jns
test
mov
mov
mov
dec
mov
fidivrs
or
mov
jbe
aas
ret
mov
aaa
cmpsl
dec
or
inc
sbb
mov
jmp
mov
push
dec
mov
cmpsl
jae
adc
loop
inc
cmp
jg
jb
sbb
call
imul
jl
shl
mov
test
adc
sbb
inc
dec
xor
and
gs
mov
mov
pop
ds
and
mov
and
sbb
pop
movsb
cmp
add
lea
or
ret
jecxz
shr
popa
stc
fwait
mov
mov
and
mov
jb
mov
test
sar
and
add
arpl
inc
mov
jmp
xor
add
call
in
inc
ret
pop
inc
inc
cltd
inc
leave
mov
cmp
mov
mov
add
fstpt
stc
or
mov
push
jl
and
mov
outsb
inc
jg
jge
into
ret
xor
jo
inc
mov
in
fidivs
shlb
add
pop
je
mov
inc
gs
jecxz
xor
xor
mov
repnz
mov
cwtl
into
mov
mov
mov
addr16
decb
inc
jb
imul
xchg
mov
imul
adc
inc
xor
xchg
shrl
notb
cli
sbb
out
out
push
or
adc
inc
jmp
sbb
addr16
rorb
push
shlb
jo
mov
jecxz
mov
aam
lcall
and
add
int3
sbb
std
mov
insb
sub
jle
cld
cmp
mov
cmpsl
popf
cmp
sbb
lods
pusha
ds
insb
xor
loopne
cmp
add
or
outsb
dec
hlt
jae
and
jp
push
lret
push
repz
mov
mov
adc
sbb
jns
mov
fsub
out
fstl
divl
mov
orb
daa
lahf
lods
xor
inc
out
xor
xchg
inc
xor
jno
imul
fnstenv
sbb
add
fiaddl
jl
mov
orb
or
add
fisttpl
xchg
xchg
gs
cmp
mov
sahf
xchg
adc
pop
xchg
push
hlt
pop
loopne
shrb
fs
icebp
loopne
jp
rcrb
push
mov
jae
idivl
mov
negb
mov
jl
or
push
test
test
div
fs
cld
int3
xchg
insl
sub
lock
je
mov
icebp
subl
sbbl
mov
call
jne
test
ja
xor
push
sbb
aas
test
xchg
data16
xchg
mov
or
add
mov
xchg
mov
iret
fs
or
dec
xor
xchg
adc
dec
pusha
xor
rorl
mov
dec
cmp
outsl
push
movsl
je
pop
inc
mov
jl
rorb
dec
outsl
sarb
xor
mov
add
mov
cli
inc
inc
ficompl
push
lret
js
adc
dec
int
add
into
xchg
andb
jbe
and
inc
in
clc
das
add
inc
daa
iret
jae
dec
shl
int
roll
loopne
in
mov
push
xchg
push
sbbl
in
mov
sub
leave
jo
lods
cmp
je
and
mov
pop
mov
das
divb
mov
jecxz
jae
xor
insl
sub
rolb
ss
mov
aas
adc
es
and
sarb
orl
std
push
aad
lahf
jb
mov
test
mov
or
jmp
pop
xor
pop
mov
xchg
or
fisubrs
push
mov
mov
push
sahf
xchg
loope
rcrb
cmc
jp
adc
in
je
scas
or
xor
test
mov
outsl
hlt
cs
cwtl
jecxz
icebp
adc
scas
ds
out
sub
inc
push
push
xor
pop
repnz
rcrb
xchg
lea
std
outsb
outsb
test
repz
lock
cmp
lods
mov
addr16
sub
je
add
jle
enter
cmp
inc
jmp
mov
imul
inc
add
inc
insl
sbbb
movsw
mov
insb
int3
mov
add
pop
or
sbb
leave
in
inc
shlb
scas
cmp
adc
lock
dec
inc
jle
ss
out
cli
lock
test
es
aad
jae
dec
into
jmp
scas
mov
test
movsb
lcall
ja
cli
jo
pop
insb
and
push
clc
add
inc
imul
push
sub
sbb
xchg
adc
xor
popf
notb
inc
cltd
pop
and
jb
mov
hlt
mov
or
repnz
xor
sub
lahf
sbb
hlt
push
dec
push
pop
cs
dec
cmpl
push
or
test
ljmp
mov
rorl
cmpsl
repz
ror
dec
ljmp
pushf
mov
and
in
dec
xchg
mov
cmp
inc
in
inc
mov
cmp
ljmp
ss
pop
pop
mov
loopne
cmp
jne
fadds
mov
rorl
rolb
mov
xchg
mov
loopne
jl
mov
repnz
lods
mov
lds
or
imul
jmp
jmp
out
mov
jg
jne
les
jl
fsubl
mov
outsl
inc
push
jns
daa
cmp
pop
inc
iret
xchg
xchg
outsl
jb
fadd
dec
add
test
icebp
movzwl
enter
int3
std
sarb
out
xchg
sbb
decb
dec
in
cmc
rorb
pop
das
xchg
mov
adc
pop
aaa
leave
cli
ds
add
shll
mov
cmpsl
dec
js
mov
cli
ds
ret
mov
ja
dec
cmp
inc
mov
dec
pop
insl
inc
dec
jle
sbb
add
sbb
adc
and
lods
addb
pusha
dec
xchg
insb
outsl
sbb
mov
pop
in
aam
or
jmp
mov
xlat
mov
xchg
xchg
and
movsl
repz
lods
sub
and
pop
xor
xor
ret
outsb
xchg
xchg
icebp
mov
cmp
mov
jmp
and
in
mov
dec
clc
fildll
inc
scas
popf
movsl
or
push
gs
rcr
cmpsb
mov
std
xchg
cmp
out
std
int3
test
ffreep
shlb
mov
mov
mov
fsubl
fadds
into
add
aaa
adc
cld
sub
mov
decb
pop
cwtl
ds
xor
lret
push
and
ss
enter
es
and
adc
xchg
or
not
daa
frstor
cmpsb
test
sub
pop
sub
jb
stos
lock
scas
push
sbb
cmp
out
loop
mov
xchg
ret
adc
ret
out
repz
es
loopne
mov
rclb
addb
jbe
sahf
sub
das
outsb
notl
xor
adc
hlt
pop
orb
adc
fcmovne
scas
pop
outsb
xchg
sub
in
push
lret
hlt
out
adc
xchg
lahf
xor
cmp
or
inc
insb
mov
fisubl
mov
lods
jl
push
popf
stc
mov
cmpsb
loopne
frstor
push
ds
jae
mov
mov
cmp
dec
mov
mov
ret
and
ret
test
push
sbb
stos
xchg
jns
sbb
dec
dec
scas
push
jbe
push
sbb
loop
and
cmpsb
sbb
jmp
sbb
jbe
push
adc
add
nop
into
nop
xchg
dec
mov
adc
push
mov
mov
add
cmpsb
lods
fcompp
sub
sahf
and
pop
inc
notb
in
jne
cmp
imul
into
jno
jae
dec
and
lret
in
mov
inc
jne
or
test
adcl
out
push
rolb
cmp
and
loop
push
xor
scas
fisttpl
inc
aad
fistl
mov
int
adc
fists
scas
push
scas
lea
js
mov
jns
xlat
cmp
lds
mov
insl
shlb
jecxz
push
dec
shrb
inc
jmp
jne
fs
scas
push
xchg
out
adc
mov
pushl
ror
arpl
sar
pop
data16
mov
aad
iret
inc
lea
outsb
jae
call
icebp
add
push
sbb
popa
popl
or
inc
cmp
stos
insl
xchg
mov
mov
cli
iret
out
inc
xchg
insl
sbb
mov
fstl
fxch
sbb
push
jne
sbb
subb
cld
in
inc
ds
cs
cld
testb
outsl
out
add
inc
pop
lahf
outsl
pushf
pop
lock
jnp
insl
sbb
clc
add
pusha
push
add
imul
inc
rorl
addr16
pop
mov
mov
pop
mov
aam
ret
repnz
aas
popa
mov
or
mov
repz
es
shll
push
iret
pop
addps
adc
insb
sub
pop
xor
pop
js
mov
jbe
iret
leave
lret
cmp
cmp
adc
pop
lret
xor
sub
sub
xchg
mov
dec
pop
mov
shld
inc
mov
stos
hlt
or
movsl
outsl
lret
jl
sbb
cmc
int3
leave
or
and
imull
mov
pop
mov
sbb
lds
out
je
dec
ljmp
inc
jge
pop
test
mov
ljmp
insl
pop
lock
mov
cwtl
pop
hlt
cmp
imul
inc
xor
cltd
dec
mov
pop
icebp
rclb
pop
into
xchg
cmc
push
mov
orb
xor
movsb
sub
ror
stc
int3
xchg
xor
nop
mov
loop
pop
enter
aaa
mov
mov
mov
ret
jp
jle
mov
shl
cmp
out
push
lds
int
int
addr16
mov
mov
inc
testl
mov
push
repnz
mov
mov
or
adc
push
push
sti
mov
xchg
dec
jg
popf
jmp
arpl
xor
jb
leave
add
xchg
xchg
loopne
popa
push
push
push
dec
push
jo
cmp
das
cmp
xor
inc
cmpsl
adcl
jecxz
lahf
xchg
cmp
dec
js
shll
xchg
mov
mov
std
sbb
ss
mov
ljmp
pop
je
idiv
ret
sahf
push
cli
xor
lock
jge
mov
jb
mov
inc
cmp
pushf
or
mov
in
cwtl
shlb
pop
ss
int
stos
fists
pop
adc
les
ljmp
out
fnsave
dec
rcrb
insl
jge
xor
cwtl
addl
add
sarl
push
int
xchg
popa
sub
jbe
loope
les
movsb
int
ds
mov
jg
xor
xor
lock
add
adc
sbb
mov
cli
push
insb
out
ljmp
cld
push
and
das
mov
cwtl
pop
popf
imulb
push
fcmovne
jg
mov
inc
inc
rcrb
and
sub
stc
int3
sbb
dec
repnz
and
aam
sub
mov
aas
sbb
xor
fisubl
inc
adc
fists
pusha
shrl
lret
pop
ret
mov
push
sub
pop
mov
out
inc
and
xchg
fmuls
out
and
call
das
pop
lahf
pusha
aad
lret
scas
jle
scas
outsl
push
faddp
mov
stos
xor
dec
ljmp
mov
repz
xchg
adc
cmc
test
shrl
out
push
shll
outsl
inc
xchg
inc
xor
fldenv
and
jb
gs
push
in
lods
add
push
arpl
popf
in
adc
adc
lahf
mov
je
and
test
fs
ret
loop
pop
sbb
jno
leave
push
test
lret
jne
imul
mov
adc
lahf
aas
and
sub
add
xchg
inc
pop
pusha
leave
ja
pop
loopne
jnp
and
out
out
rol
sahf
icebp
das
push
add
xchg
mov
stc
repnz
aas
and
xchg
test
mov
push
clc
cltd
fldenv
ret
inc
movb
mov
aad
lea
and
sub
inc
mov
ja
lret
pop
int
xchg
cwtl
dec
imul
pop
xor
shl
add
mov
jne
push
mov
lret
and
out
test
je
movl
xchg
popf
lods
add
pop
shr
mov
scas
cmc
push
mov
sbb
inc
shlb
out
sbbl
xor
outsl
xchg
cmp
mov
lret
xchg
pop
add
fwait
and
add
jb
and
dec
dec
cld
fsubrs
rclb
rcl
cmp
int3
int
adc
mov
add
fistps
rcrb
pop
jl
push
mov
jne
jmp
push
and
xchg
outsl
xchg
add
xchg
cmp
mov
adc
cmp
jne
popa
jmp
ret
inc
dec
out
pop
adc
cmp
out
xor
xchg
push
adc
inc
ljmp
xchg
pop
mov
push
xchg
orl
sbb
and
sub
scas
xorb
and
inc
gs
je
sbb
add
push
pop
push
pushf
push
and
fs
sbb
dec
jle
adc
mov
aad
mov
dec
add
dec
push
loope
mov
push
lret
insl
xor
inc
add
dec
lret
loopne
test
andb
sbb
out
xor
jo
jecxz
lahf
add
cli
sub
enter
fstp
jcxz
bound
and
and
orl
pop
dec
mov
jecxz
push
pop
lret
mov
leave
jo
mov
nop
inc
lods
jle
std
mov
cmp
mov
xchg
ret
xchg
les
push
xchg
lds
jae
imul
outsl
jnp
in
push
cmp
sub
cld
xor
add
and
daa
mov
dec
xchg
mov
pop
mov
pop
and
jg
aam
dec
lret
push
push
mov
mov
sub
popf
test
jno
sub
sub
mov
in
call
outsl
push
push
into
fucomp
imul
or
or
fs
pushf
inc
push
dec
mov
push
push
xchg
iret
jne
inc
sub
and
rcrl
xor
mov
pop
push
ficoms
mov
pop
in
sti
and
sub
jecxz
movsl
inc
mov
lds
lahf
test
aas
adc
fwait
mov
ficoml
jns
fisttps
adc
or
dec
and
inc
or
cltd
cli
in
push
xor
dec
push
sub
enter
sbbl
lds
into
ljmp
cmc
sbb
icebp
das
adc
cmp
cmp
scas
jne
sbb
rcrl
bswap
pop
adc
sbb
dec
sti
xchg
push
fnsave
mov
pop
push
or
nop
cmp
outsb
lods
xchg
sahf
lds
mov
pop
lcall
shll
in
add
dec
ficompl
adc
push
pop
ret
in
cmpsb
jmp
adc
mov
in
jo
jo
inc
adc
inc
dec
int3
dec
jo
and
mov
add
ja
mov
cli
scas
mov
stos
adc
push
dec
rolb
cmpb
dec
mov
xlat
cmp
cmp
xchg
jmp
xchg
stos
not
shl
cmp
pop
or
lds
push
inc
lods
les
outsl
pushf
jnp
xor
cmp
jmp
mov
or
jae
sbb
imul
rorb
inc
mov
and
cs
xchg
int
fnstcw
testl
fwait
mov
sub
jecxz
pop
mov
add
inc
cmp
int
fildl
push
cwtl
fsubrl
jle
shrb
sbb
mov
test
cmp
cmp
mov
xlat
adc
jae
aas
pop
push
repnz
lods
sbb
movsl
xlat
add
or
cli
sbb
pushf
jae
out
test
icebp
xor
out
lret
inc
and
mov
mov
fwait
imul
int
xor
xor
pop
mov
insb
lahf
cmp
dec
lcall
jmp
shrl
xor
inc
cmpsl
lds
sbb
and
daa
xor
or
shrb
push
sub
add
stos
cmp
stos
and
xorl
mov
orl
movsl
fwait
push
inc
test
pop
cltd
adc
out
jmp
mov
sahf
inc
and
dec
adcb
out
adc
pop
pop
out
and
pop
cli
in
mov
and
jne
pusha
mov
xchg
mov
push
ret
push
mov
and
inc
aas
cli
out
mov
mov
ljmp
mov
out
out
stc
sub
int
sub
popa
out
sbb
test
out
fchs
imul
in
and
add
lods
cmp
mov
dec
into
popl
or
dec
mov
cmpl
leave
stos
mov
or
scas
dec
xchg
sahf
jbe
xchg
test
add
js
in
mov
lcall
push
mov
sub
imul
ds
sub
push
movsl
jns
addb
jns
push
adc
lret
mov
std
dec
stc
or
ret
movsl
enter
aad
jp
or
js
jnp
pop
out
out
xchg
cltd
cmp
push
out
scas
lret
data16
and
jo
push
sub
xor
imul
mov
rolb
movntps
mov
inc
mov
sbb
push
dec
xchg
mov
sub
mov
cmp
nop
out
int
mov
sub
push
or
cmp
mov
out
sti
jns
xor
cmpsb
mulb
jbe
sahf
or
sbb
notl
and
negb
mov
stc
pop
sahf
and
orb
out
leave
sbb
mov
cmpsl
sub
or
bound
int
dec
outsb
jbe
int
rorl
mov
in
dec
mov
je
stos
jle
mov
jle
add
push
sbb
cli
sub
dec
push
and
lret
out
lea
enterw
mov
scas
or
jo
imul
popl
hlt
cli
popa
sub
out
push
cmp
fstps
add
ljmp
popf
clc
push
outsb
xor
in
add
fsts
sahf
lahf
sbb
fidivrl
pop
lret
pop
sub
aas
mov
adc
mov
push
or
out
sbb
aaa
push
xor
mov
scas
bound
outsl
pusha
jge
aas
adc
scas
xor
lods
push
fisubrl
xchg
idivl
js
lea
mov
lret
add
rcrb
sub
xchg
or
and
in
and
pop
sub
mov
inc
aam
and
cmpsl
xlat
push
mov
pop
mov
outsl
aam
add
adcl
icebp
call
jp
unpcklps
loop
test
pop
inc
lahf
sbb
ret
popf
mov
daa
pop
lahf
int3
cmp
mov
test
inc
mov
push
sbb
adc
popf
fildll
jb,pt
mov
jge
xor
dec
cwtl
test
popa
testb
aas
push
jbe
inc
lods
mov
scas
ss
fs
sbb
mov
jmp
iret
adc
mov
mov
sbb
lods
dec
mov
mov
mov
pop
sti
and
mov
sbb
out
test
pushf
cltd
pop
inc
sbb
insb
mov
into
ljmp
test
inc
insl
and
or
inc
and
jl
mov
cmpsl
sub
pop
dec
dec
scas
adc
dec
jg
pop
and
and
adc
scas
lods
popf
pop
add
addr16
mov
or
ror
push
or
outsb
mov
xchg
jecxz
out
xchg
orb
add
and
arpl
leave
sbb
adc
cmp
cmp
or
sar
mov
rcll
dec
jnp
cs
or
jns
adc
in
test
inc
xchg
mov
cmp
pusha
test
fstl
mov
jl
mov
fcompl
and
add
daa
or
dec
mov
into
mov
ja
mov
je
pop
shlb
push
mov
outsb
and
pusha
jnp
pop
clc
dec
push
pop
test
call
xchg
sti
repnz
and
hlt
jg
inc
stos
insb
out
out
xchg
sbbl
and
mov
and
faddl
and
cmp
es
add
test
push
insb
test
jns
lcall
add
scas
mov
mov
add
xchg
pusha
test
inc
popa
out
mov
adc
adc
adcl
leave
insb
inc
jns,pt
dec
sti
pop
and
xchg
jg
rcr
test
test
push
jnp
scas
sti
cmp
mov
iret
ret
cmp
mov
mov
test
pop
push
test
sbb
fadds
push
cs
cltd
inc
ds
imul
insb
nop
je
sub
stc
jbe
arpl
push
scas
stc
dec
out
inc
dec
mov
mov
imul
imul
test
int
lret
xor
sub
dec
xchg
rcrl
loope
add
and
sbbl
or
adc
jg
sub
xchg
xlat
mov
jae
leave
adc
cmp
inc
mov
jmp
add
jb
sub
jb
fsubs
add
into
mov
shrl
sarb
xchg
aam
xchg
adc
jg
xchg
inc
or
imul
stos
enter
in
std
or
insl
jg
or
in
push
cli
mov
add
movl
xor
loopne
shrl
mov
negb
imul
pop
out
push
cmpsl
iret
jae
andl
stos
adc
mov
rcll
mov
push
sub
scas
arpl
mov
sub
push
xchg
mov
dec
or
xlat
adc
cmpsb
inc
es
aad
xor
xchg
dec
sahf
xchg
sub
shrb
cmp
cmc
cli
test
aaa
push
orb
pop
pop
outsb
sbb
mov
cmp
ds
stos
fsubr
cmp
rorl
bound
cmp
bound
sub
test
push
stos
ror
mov
outsb
mov
or
daa
cmp
imul
add
bound
mov
mov
add
jno
pmuludq
int3
push
das
je
and
icebp
icebp
lods
cmc
cmpsb
jg
jno
ja
pop
test
or
js
addb
cmp
les
and
jbe
test
xorb
insl
xchg
mov
out
sbb
scas
push
jl
adc
mov
adc
xchg
or
add
cmpsb
jns
fs
lds
roll
push
jle
negl
sbb
add
aaa
in
lock
clc
movsl
sbb
outsb
mov
lret
pop
lret
popa
jge
pop
ja
xchg
into
call
insb
xchg
dec
enter
pop
push
sarb
inc
test
pop
stos
sahf
addr16
jge
cmp
lds
adc
jecxz
mov
mov
pop
cmp
add
daa
and
push
stc
roll
daa
js,pn
xor
xchg
rolb
repz
sahf
mov
loop
test
mov
or
mov
inc
mov
and
daa
fsub
adc
inc
mov
cltd
mov
jl
lcall
sti
mov
lret
jge
mov
daa
test
and
ret
and
out
adc
push
mov
xor
adc
test
ja
loopne
add
dec
sbb
ljmp
jge
mov
loope
lret
adc
inc
xchg
jg
mov
in
fsubrl
std
rcll
cmp
fistps
daa
lahf
dec
gs
xor
inc
mov
sub
sub
fiadds
movsl
push
gs
mov
mov
test
faddl
sti
cmp
clc
jle
or
leave
dec
or
xor
enter
lret
sti
sbb
fsubr
mov
cmp
cmpsb
lock
pop
dec
mov
gs
xorl
data16
sbb
pop
adc
lods
cmp
lret
outsb
lahf
sti
fidivrs
xchg
ret
mov
popa
loope
jo
outsb
mov
cli
idivb
mov
or
xchg
loopne
pusha
cmp
and
imul
jnp
mov
xchg
aaa
jecxz
call
sbb
dec
dec
rclb
ret
insb
out
jnp
xlat
mov
in
pop
mov
push
mov
adc
pushf
adc
mov
sub
scas
pop
je
lods
mov
xchg
dec
dec
sub
int3
in
faddl
pop
incb
inc
stos
mov
or
sarl
bound
inc
mov
aaa
xor
fs
repz
push
daa
outsl
ss
notl
fidivs
or
lret
mov
ret
mov
fisubrl
out
jmp
sub
xchg
jmp
xor
xchg
lods
push
gs
sbb
mov
push
jg
ret
mov
out
scas
pop
jle
add
push
mov
ljmp
pop
xchg
cmp
jno
cmpsl
imul
stos
xchg
push
lahf
js
cld
popa
pop
daa
add
mov
popa
scas
lcall
inc
pop
fsubs
push
sub
mov
pusha
pop
cmpsl
sub
add
pop
pop
cmp
in
push
stc
sbb
mov
and
nop
test
repz
imul
xor
test
shll
push
out
adcb
and
inc
cli
sbb
aas
loope
dec
dec
pop
mov
lret
mov
int3
je
sub
add
push
mov
push
sbb
loope
cmp
popf
fcomp
sbb
in
ret
lods
pop
ds
mov
adc
or
xor
mov
pop
mov
lret
sti
sti
or
mov
repz
or
es
and
push
movsb
out
fistpl
lock
sub
stc
int
inc
cmp
inc
decl
cmp
sub
lcall
and
add
sub
xchg
jmp
jo
jp
std
and
mov
mov
jns
dec
shl
push
sub
fdivrl
idivb
popf
cmp
jle
in
xor
or
sbb
mov
jge
in
rorl
and
add
and
pop
fdivrs
inc
repz
xor
pusha
mov
cmp
fildl
and
insb
imul
fwait
pushf
or
adc
add
sbbb
dec
mov
gs
dec
and
mov
lret
mov
out
pop
or
shrb
pop
add
sarb
jge
adc
imul
push
cmp
out
into
shl
test
lods
sbb
addr16
jb
push
out
mov
sub
mov
jle
repnz
dec
xchg
dec
add
int
mov
out
test
xchg
pop
xor
push
sub
fisubl
sbb
lret
sbb
adc
pop
push
stos
fsubr
lds
xchg
lods
cmp
or
or
cmp
ja
shrb
mov
push
repz
or
inc
loop
in
bound
mov
rcl
fldenv
push
addb
adc
xor
shlb
and
fisubl
mov
xchg
mov
cmp
mov
lock
push
orb
in
jbe
xchg
mov
xlat
cmc
sbb
or
hlt
xor
sub
mov
test
push
xor
lods
add
aad
mov
or
sub
fstpl
mov
jp
xor
xor
jnp
sar
push
inc
xlat
jecxz
push
sbb
bound
cmp
xchg
lret
xchg
push
push
add
rcl
lds
mov
mov
cmp
mov
xchg
sbb
jmp
mov
lock
pop
push
adc
add
and
pushf
pop
jl
mov
in
mov
repnz
ja
or
pop
xor
test
cmpsb
sub
xchg
mov
xchg
fimull
insl
fisubrl
push
adc
pop
and
xchg
leave
mov
sti
cmpl
jecxz
xchg
dec
dec
je
inc
push
mov
mov
pop
and
add
or
xor
dec
test
or
mov
sbb
dec
in
mov
mov
cld
jo
mov
xchg
iret
dec
mov
fwait
cmp
repz
scas
daa
enter
popf
sbbb
sub
adc
mov
push
cmp
xor
xor
lret
cmp
lahf
jb
in
sub
jle
js
outsl
out
pop
aam
orl
pop
scas
dec
lods
rep
cmp
dec
imul
mov
cs
mov
cmp
enter
mov
xchg
lods
out
inc
add
test
mov
pop
cmp
cs
sbb
hlt
sbb
mov
mov
sbb
mov
arpl
sahf
mov
mov
leave
out
movsb
jmp
xchg
add
and
xchg
neg
fbld
cltd
dec
cmp
jb
out
mov
xlat
test
sub
call
xor
mov
sbb
jbe
add
or
iret
fucomip
xchg
inc
inc
popa
shrb
repnz
shlb
lods
and
fists
cld
fmull
test
aas
sub
pop
negb
cmp
pop
push
push
adc
push
aam
ret
mov
add
testb
in
mov
test
xchg
push
stos
inc
inc
cs
push
mov
push
mov
or
or
xchg
mov
lret
mov
pop
xchg
test
neg
test
mulb
lahf
add
and
push
in
iret
push
scas
aaa
popa
fdivr
mov
and
sbb
fiadds
dec
jge
gs
sub
add
add
mov
out
inc
cmp
jno
pop
bound
stos
push
aam
push
loopne
call
mov
push
gs
push
mov
jae
leave
mov
jle
lods
stc
ficoms
repnz
imul
inc
adc
out
js
lock
jne
xor
cmp
lahf
xor
and
pop
and
pushf
mov
notb
loopne
jno
dec
jbe
and
fcmovu
jecxz
inc
test
fstps
mov
lock
out
sarl
fwait
popf
into
rcll
adc
jmp
mov
pop
mov
sbb
lahf
ficomps
icebp
jbe
mov
sub
xchg
jae
andl
inc
mov
add
mov
mov
fwait
inc
inc
les
mov
scas
lock
adc
jg
lahf
xor
and
sbb
hlt
xor
call
orl
lahf
push
and
mov
enter
lods
mov
into
std
aad
jl
lea
and
mov
xchg
pop
or
ret
lock
pushf
jmp
fsubs
lret
in
scas
mov
mov
scas
call
repz
cmp
jne
aad
adc
mov
xor
inc
inc
pop
ljmp
mov
and
pop
iret
jp
fldt
sti
xor
sti
xchg
and
imul
cmp
mov
pushf
lea
cld
dec
mov
pushf
mov
testl
stos
dec
dec
sbb
pop
ss
sub
cmp
lods
push
rclb
cmp
xor
pop
shll
out
sbb
stc
push
test
insl
dec
push
sbb
mov
pusha
sti
test
mov
push
ds
test
push
loopne
jg
roll
mov
lret
addr16
mov
inc
push
dec
add
mov
daa
stos
dec
cmpsb
pusha
xor
xchg
jg
jne
movsl
andl
add
aam
mov
xchg
push
dec
mov
icebp
inc
add
inc
cltd
rcrl
shll
push
in
cmc
loope
aad
xor
inc
fbstp
stos
or
fisubs
gs
scas
rcr
dec
ret
mov
mov
popa
mov
lahf
in
dec
xor
cs
xchg
add
adc
movsb
sbb
xchg
adc
enter
push
je
gs
and
pop
dec
roll
fimuls
pop
sarb
push
inc
xchg
pop
inc
lds
shr
xor
cmp
sti
jno
jl
testl
mov
pop
and
add
hlt
mov
test
out
out
lcall
or
adc
mov
push
and
hlt
lea
xor
out
dec
mov
hlt
jae
xchg
cmpsb
or
test
mov
pushf
cwtl
andl
sub
sarb
dec
or
push
pop
jg
cmp
jp
call
cmpsb
test
aaa
sub
fdivl
lret
mov
mov
rclb
pcmpgtd
adcb
push
pop
nop
mov
sarl
cmpsl
loopne
jbe
pop
xchg
sub
mov
pop
jge
cmp
shll
movsl
mov
mov
or
cld
inc
dec
push
aam
jl
pop
lods
pop
adc
popa
mov
das
sub
data16
sub
bound
mov
xor
and
inc
push
in
fsubrs
insl
jae
outsl
push
xor
ret
pop
mov
fisttpll
push
sbb
rolb
imul
jne
out
gs
loope
ret
cmpsl
mov
inc
add
cmc
ret
roll
mov
add
add
out
loope
lds
aaa
lret
stos
ret
jge
pop
loope
movsl
pop
mov
xlat
cmp
jae
adc
jecxz
in
lods
xchg
push
sub
fcomip
add
jmp
ds
popa
into
jno
mov
or
enter
popf
loop
fcmovb
inc
jmp
mov
testl
aam
fwait
outsl
sub
mov
cmp
sub
fnstsw
or
or
aaa
push
call
sbb
sub
outsb
mov
add
scas
cmp
out
pop
iret
in
fiaddl
cmp
jne
push
in
iret
push
push
and
mov
call
jns
or
mov
xchg
xor
pop
adc
jno
test
cmc
lcall
loope
fistl
fwait
xchg
ja
xor
insl
mov
push
subl
fs
and
pushf
and
jg
mov
lea
jne
fidivs
mov
scas
std
pop
push
cwtl
xorl
popa
pop
lock
cmpsl
aad
cltd
scas
xchg
add
or
stc
pusha
xorl
leave
push
add
mov
repnz
sub
fsub
xchg
sub
dec
inc
scas
adc
mov
pushl
testb
stos
mov
and
and
cmpsb
fs
test
das
cmp
aas
pop
adc
mov
sub
sbb
xor
push
sahf
faddl
sub
notl
lretw
mov
mov
push
xor
je
je
adc
push
cmp
aad
adc
add
or
fsubl
sub
sbb
mov
xor
fs
mov
jae
filds
mov
xor
icebp
fmuls
imul
cmp
inc
stc
or
sbb
jae
add
je
jno
push
pushf
inc
push
jmp
add
xor
fldt
mov
in
fisttps
mov
hlt
mov
sahf
cmpsb
push
adc
mov
jno
jae
das
ret
lret
or
inc
lds
cmp
mov
mov
push
sub
dec
pop
dec
xchg
adc
mov
ret
ljmp
add
movsl
mov
aas
sbbl
in
cmpsb
rcll
add
xchg
sub
mov
outsl
rorb
pop
inc
mov
test
fmull
sub
xor
aaa
icebp
mov
lcall
push
fisttps
jae
or
sbb
jb
mov
loopne
das
push
es
jae
inc
aam
mov
mov
fistpll
xchg
adc
push
je
hlt
das
mov
mov
lahf
out
rorb
or
hlt
test
aad
enter
adc
dec
data16
xchg
adc
mov
push
pop
in
jle
js
mov
aas
or
lods
fmull
add
clc
cmpl
dec
addr16
add
inc
jmp
fwait
jne
outsb
mov
imul
adc
ret
ret
leave
inc
fcoml
mov
pop
add
jbe
mov
enter
xor
sub
push
or
je
add
jae
adc
lock
sub
adcb
lahf
adc
jno
test
lcall
push
add
lods
pop
rclb
inc
iret
jl
in
test
pop
lds
mov
int3
lds
jmp
pop
or
sahf
mov
push
inc
pop
sbb
js
hlt
xchg
ds
lock
lods
mov
mov
mov
pop
shrb
adcb
call
adc
in
jmp
lcall
hlt
into
je
ret
shlb
dec
rclb
jo
aaa
in
pop
call
xor
movsl
cmc
inc
pop
jno
negl
mov
mov
aaa
mov
jecxz
outsl
pop
les
push
js
cld
cmpsl
aas
clc
xorb
mov
add
mov
insl
insl
xlat
or
xor
ret
adc
add
fsubrs
cmp
test
pop
jmp
scas
jo
lcall
test
data16
rclb
leave
sub
cmp
fucom
les
pop
outsl
sahf
orl
inc
add
xor
dec
mov
les
fistpll
mov
sbb
xchg
filds
xchg
mov
inc
add
movsb
push
inc
adc
cmp
outsl
outsl
mov
push
push
mov
and
inc
add
jnp
inc
loop
aaa
test
bound
mov
data16
loopne
push
imul
pop
mov
ret
je
add
int
orb
test
push
xchg
pop
xchg
fdiv
inc
ss
out
xchg
cmc
lods
cs
add
in
adc
xor
mov
aaa
call
cmpsb
jge
cmpsb
in
rcrl
cltd
flds
in
aad
sbb
push
movsb
outsl
adc
out
in
lret
mov
loopne
dec
rcll
cwtl
fs
xor
jne
loop
mov
or
cmc
pop
push
fwait
adc
add
cmp
jp
sub
iret
shr
cltd
bnd
dec
jbe
add
and
jge
outsb
sbb
out
cld
fisttpl
add
ror
scas
addr16
into
rcrb
mov
mov
arpl
int
or
pop
ss
aas
icebp
pushf
loop
mov
mov
xor
dec
cltd
and
xchg
insb
stc
jge
jle
sub
repz
xor
pop
rcrl
out
addr16
cs
popf
pop
jno
lds
in
lods
ror
and
and
ficomps
xchg
test
xor
xchg
ret
push
cmpb
adc
shrl
test
std
fnstsw
stos
enter
pop
lock
xor
xchg
xor
fwait
pop
xchg
gs
push
cmpsl
jmp
mov
enter
inc
cwtl
cmp
movsl
call
mov
test
add
push
sub
iret
sbb
add
fs
inc
push
inc
lea
wbinvd
jae
lock
ret
rorb
add
es
sub
cmc
pop
push
mov
add
mov
movsb
mov
stos
jbe
add
mov
pop
jecxz
and
push
jg
xchg
sub
mov
cld
bound
aas
jl
movsl
out
repz
adcl
movsb
xchg
jns
arpl
movsl
mov
popa
popf
cmpsb
out
sbb
add
adc
fldt
popf
ja
adc
gs
xor
call
pop
adc
test
ret
arpl
adc
jnp
je
imul
cli
push
xchg
mov
ret
xlat
fimuls
and
add
mov
xchg
mov
mov
xchg
mov
lret
push
imul
and
mov
mov
loopne
clc
mov
inc
jmp
dec
inc
xchg
sbb
xchg
or
pop
cwtl
lock
inc
jbe
xchg
div
test
or
cmpsb
and
pop
popa
ds
mov
pop
fmuls
push
js
outsb
jae
jae
cmp
data16
cmpsb
add
in
sub
fldl
mov
mov
or
xlat
adcl
in
dec
push
sbb
add
mov
mov
in
cmp
jne
push
mov
add
or
ljmp
add
mov
push
push
call
into
hlt
stc
lock
aaa
jmp
dec
push
mov
mov
dec
enter
adc
test
push
int
in
cli
out
mov
push
inc
out
push
dec
mov
cmpb
sub
jo
fbstp
xor
fprem1
imul
jbe
out
outsl
xchg
mov
push
popf
sbb
shrb
jns
movsl
mov
popa
sbb
mov
dec
iret
das
cmp
pop
clc
cmp
addb
mov
loope
data16
xchg
mov
and
mov
aas
iret
jp
in
push
lds
daa
pop
inc
mov
inc
push
mov
loopne
mov
and
push
push
add
sbb
push
movsb
mov
mov
jecxz
into
mov
add
fldenv
dec
iret
pop
inc
mov
push
cltd
insb
in
xor
inc
pop
sbbb
mov
std
mov
outsl
and
lcall
insw
pop
fwait
dec
mov
xchg
mov
scas
pusha
dec
jecxz
jno
es
fwait
add
push
shlb
movsl
leave
dec
scas
sbb
sub
out
cmpb
mov
dec
push
mov
adc
mov
std
lds
sbb
movsl
mov
jns
cltd
mov
loopne
aas
push
and
lods
jnp
dec
sbb
ss
push
push
and
mov
inc
xchg
dec
loopne
shll
sub
dec
lret
in
mov
imul
shl
aam
add
cmp
pushf
ss
mov
sub
test
adc
xor
jmp
inc
outsb
enter
adc
fcomps
inc
pop
mov
neg
push
xor
adc
jge
and
dec
or
out
cmpsl
ljmp
xor
stc
out
or
xchg
cmc
ret
sbb
adc
sbb
testb
or
insb
jp
insb
add
lods
push
or
popf
daa
scas
add
inc
xchg
out
cld
jbe
mov
in
lret
dec
aad
jno
cs
mov
jle
xchg
popf
into
stos
fidivs
add
shrl
je
xchg
int3
xchg
cmpsl
dec
mov
jge
jbe
in
imul
sub
add
rcr
jl
pop
and
ljmp
fisubs
loop
ss
lods
aaa
pop
cmc
aas
push
shrb
jne
out
xchg
xchg
and
inc
mov
cmp
jb
mov
inc
push
or
and
stos
sub
inc
add
mov
pop
and
fwait
hlt
push
stos
xor
in
pop
fidivs
cmc
insl
mov
ljmp
xor
loop
ds
xchg
xchg
outsb
repnz
jle
cmc
in
mov
lods
push
mov
push
ljmp
push
pop
and
pusha
xor
imul
mov
pushf
adc
mov
mov
sbb
aam
add
stos
and
les
jge
enterw
es
sub
andb
pushf
pop
jp
jecxz
ror
mov
xlat
fs
daa
test
mov
je
inc
stos
adc
lret
arpl
sbb
mov
addb
pop
inc
pop
sub
jns
sahf
and
clc
inc
fcoml
mov
popa
and
cld
sahf
push
fnstcw
stos
mov
xor
jo
stc
fmull
lds
test
aas
mov
pop
adc
cwtl
inc
cmp
jge
xchg
enter
popa
mov
aas
test
dec
inc
imul
stos
sub
dec
icebp
idiv
or
repnz
je
xchg
or
es
mov
add
movsb
jg
scas
sbb
push
repz
and
xchg
xchg
or
sbb
js
ja
mov
add
addb
xchg
and
rcrb
jge
lea
hlt
adc
rcl
xchg
sub
aaa
jbe
add
inc
out
inc
fsubr
push
cli
subl
pop
mov
dec
jg
shr
fs
pushf
jge
jmp
iret
cmpl
adcl
adc
scas
xchg
push
and
add
sub
mov
xor
push
pop
xchg
outsb
jmp
push
dec
iret
aas
test
movsl
cmp
mov
mov
popf
pop
mov
imulb
sbb
pop
xchg
mov
ljmp
dec
loope
xor
cs
jp
in
mov
pusha
xlat
inc
push
movsl
sbb
and
dec
shlb
mov
mov
push
sbb
aad
pop
je
stc
cmpsl
xor
inc
jne
sub
loopne
out
sub
aaa
les
std
adc
cmp
lods
movsl
aaa
jne
sbb
pop
xor
mov
test
adc
sub
lds
shll
jnp
imul
push
mov
jmp
ret
out
test
cmp
bound
mov
sbb
cmp
adc
jp
ret
rcll
ret
sbb
pop
push
mov
sub
dec
dec
jecxz
pushf
push
mov
test
mov
sub
cmc
adc
and
shlb
popf
adc
shlb
into
lret
xor
and
pavgw
cmp
popf
call
js
xor
imul
cmpsb
jg
out
faddl
ffreep
sbb
das
mov
xor
sub
sub
inc
mov
inc
mov
inc
push
insb
cld
repz
xor
cld
ds
movsl
popf
outsl
sbb
sub
adc
xor
scas
adc
push
or
adc
push
push
les
mov
cmp
adc
cmp
push
js
mov
les
test
inc
sub
cmp
xchg
cmp
push
repz
or
lods
jl
in
popa
aam
pop
cli
mov
pop
out
inc
mov
and
js
lods
jne
jb
loope
cli
inc
fdivl
imull
pop
jg
or
repnz
inc
cwtl
mov
xor
mov
and
mov
arpl
imul
or
movsl
and
mov
int3
inc
je
xor
mov
add
mov
mov
pop
testb
inc
cmpl
adc
test
stos
cltd
push
push
mov
ds
out
jmp
cmp
mov
pop
jmp
push
cmc
cld
adc
pop
adc
rorl
xor
cmpsl
pushf
jae
std
cmp
out
out
cld
jmp
pop
push
push
inc
in
cli
test
movb
pop
addr16
mov
xorb
lods
lcall
cmp
sarb
mov
dec
std
inc
int
int
aad
gs
lahf
fisttpl
pop
mov
mov
mov
pop
mov
adc
das
loope
les
int3
mov
inc
or
xchg
insb
mov
out
int
push
adc
sahf
or
push
xchg
lea
movsl
xchg
out
fidivrs
jmp
add
push
push
push
iret
sub
popa
lods
sub
dec
mull
insb
lods
jnp
ret
jg
or
ficompl
cmp
popa
and
or
sbb
sub
jmp
mov
sbb
dec
jp
call
sbb
mov
pop
lods
sbb
xchg
scas
xor
in
mov
adc
xor
movsl
sbb
dec
mov
and
or
in
inc
cmpsl
mov
mov
arpl
in
or
pushf
sti
adc
xchg
sbb
or
jge
mov
or
pop
js
cmp
xchg
sub
or
push
scas
bound
jmp
push
jnp
fs
xchg
test
mov
jnp
rol
mov
and
out
stos
outsl
jle
packuswb
inc
out
popa
jnp
outsb
clc
sub
mov
mov
shll
xchg
loopne
fs
shrl
xchg
out
mov
jb
xchg
dec
div
mov
popf
sbb
jo
mov
push
cmp
fsubl
cld
pop
xchg
xchg
jae
ror
pusha
dec
adc
decb
aaa
pop
cmc
aas
jmp
shrl
iret
sti
inc
mov
dec
int
mov
lcall
push
iret
jns
xchg
gs
cmp
push
lcall
popa
out
cmp
out
pop
les
in
adc
dec
or
loope
add
pop
pushf
jbe
or
mov
loope
xchg
sbb
fnstenv
lcall
mov
or
mov
test
push
add
iret
fcomip
dec
ffreep
movsb
es
push
jmp
push
mov
or
loope
dec
shlb
jo
inc
dec
arpl
fcoml
movsl
arpl
mov
mov
rol
inc
xchg
or
push
xorb
mov
ds
sar
repz
jp
lahf
jb
subb
xor
pop
inc
cli
hlt
xchg
jl
xchg
and
sbb
cmp
add
loopne
les
or
repnz
xchg
rorl
jo
mov
adc
sbb
fdivrp
in
mov
inc
popf
adc
jle
push
pop
dec
xchg
mov
ret
sbb
and
shll
sub
inc
cmp
stc
mov
sti
or
sbb
xor
mov
cmp
or
in
aaa
call
fldcw
scas
pop
mov
arpl
in
jo
mov
lds
repnz
or
xchg
sahf
jnp
sahf
data16
jae
out
test
outsl
adc
aas
loope
sarb
shlb
inc
mov
pushl
ret
xchg
leave
xchg
mov
push
dec
fidivrl
ror
mov
jo
cmp
repz
cmp
mov
or
xchg
jp
pop
lret
xchg
je
in
mov
cs
mov
xchg
addr16
out
or
sbb
mov
cli
shrl
popf
adc
pusha
sub
orl
outsl
jns
leave
mov
ficompl
enter
rcrl
push
adc
addr16
jo
insb
lret
jb
sub
inc
mov
xor
es
jge
rol
jmp
xor
sbb
jo
mov
add
xchg
push
fnstcw
xor
mov
jmp
sub
adc
outsl
and
xor
clc
nop
mov
lret
dec
lahf
out
jns
sbb
mov
cmp
aad
jl
fwait
sar
inc
lods
mov
dec
adc
lea
xor
xchg
and
push
cmpsl
jmp
paddsw
push
fistpll
adc
cmp
pop
call
outsl
add
or
push
sbb
rorl
dec
xlat
hlt
mov
mov
bound
int
jecxz
push
mov
iret
cmpb
fs
cmp
scas
fldt
push
push
aad
ret
fsubr
ret
xchg
dec
xchg
loope
stos
cmpsl
out
inc
movsl
scas
mov
test
push
rcll
and
lods
sti
cli
shll
jecxz
ds
std
add
daa
jecxz
cld
push
movb
sbb
data16
int
xor
mov
in
mov
outsl
out
mov
inc
and
jo
clc
mov
jno
sub
iret
jnp
lahf
or
out
xor
lcall
inc
inc
test
clc
into
sbb
ds
aas
test
in
mov
hlt
mov
pop
ret
pop
xor
mov
insb
in
jle
cmpsl
lods
out
sbb
cmp
cld
push
xchg
mov
add
jns
in
adc
popa
pushf
aaa
cltd
int3
or
fsubr
les
pusha
cmp
mov
outsb
mov
xor
arpl
cmc
adc
push
es
ret
jg
or
rcrl
and
aam
clc
sbb
stos
stos
jmp
jmp
jl
in
jnp
mov
outsl
std
xor
ret
push
add
cmp
or
cmp
cs
xchg
ljmp
xchg
ret
add
jbe
mov
lods
xor
inc
and
inc
test
dec
pop
xor
popa
pop
stc
adc
push
and
cmpsb
pop
sub
dec
inc
fs
decb
mov
and
std
push
add
imul
jg
push
fstl
divb
push
push
mov
cmp
sahf
iret
mov
pusha
insl
hlt
xchg
cltd
inc
xchg
add
loope,pt
xchg
repz
jecxz
sub
mov
pop
adc
and
sbb
inc
mov
lds
std
mov
ret
and
adc
lods
jnp
shll
lcall
loope
lods
popa
in
dec
fwait
mov
cmp
push
xchg
sbb
pop
mov
out
scas
xor
icebp
loop
enter
add
jne
mov
pop
adc
mov
or
jge
daa
mov
add
pop
insl
or
pushf
and
ret
cmp
pop
push
out
je
sbb
outsb
stc
add
in
mov
daa
lret
push
mov
ljmp
insb
into
jbe
push
inc
pop
mov
lods
mov
mov
mov
or
sti
sbbb
imull
pop
mov
mov
cmpsb
lds
xchg
rolb
xchg
ret
dec
xchg
out
sub
xchg
mov
lret
xchg
pop
icebp
sbb
negl
aad
xchg
pop
mov
ljmp
nop
jo
and
sarb
test
mov
sub
insb
jns
aaa
add
jne
aam
mov
xchg
pushf
xor
adc
sarl
in
dec
lahf
dec
jnp
adc
pop
and
jae
add
das
mov
add
sub
sub
sub
mov
mov
lock
popa
movsl
push
mov
jecxz
addr16
js
lds
sbb
int
je
into
pusha
repz
movsb
push
pop
popa
loop
mov
cld
ljmp
dec
test
mov
add
or
mov
popa
cmc
ljmp
mov
lods
add
cmp
dec
pop
out
jp
jno
cld
aaa
std
in
sbbl
mov
lahf
lds
push
push
sahf
pop
cmp
jp
jmp
mov
fisubrs
das
sbb
inc
cmpb
xor
lds
repnz
cmp
push
fistps
pop
movsl
cmpsb
mov
cmp
push
dec
into
dec
cmp
pop
push
xchg
enter
push
fstps
lds
xor
inc
gs
push
jno
xchg
adc
xor
cmp
add
mov
addr16
pop
stc
or
shlb
pop
jg
loopne
cmc
and
outsb
movsb
cmpsb
jno
es
std
mov
mov
sub
lahf
mov
cmpsb
cmc
xor
xchg
mov
enter
xor
jg
sahf
lds
jae
dec
mov
jg
xor
pop
lds
mov
xchg
lret
call
shlb
outsl
rcll
adc
xchg
icebp
movsb
sahf
mov
xchg
xchg
enter
cld
push
out
lods
lds
gs
test
jle
int3
dec
or
jecxz
mov
xchg
test
lea
push
pop
pop
xchg
cmpsl
shlb
in
fwait
outsl
loop
pop
add
sahf
fcmovu
icebp
mov
sbb
mov
lret
fsubs
arpl
mov
test
inc
mov
sti
xchg
cmp
cs
or
xor
inc
or
cmp
out
jae
mov
sub
jns
arpl
aaa
sub
push
dec
cli
aaa
sub
dec
cmpsb
sub
das
popa
cmp
mov
adc
mov
pop
icebp
add
out
jg
mov
mov
clc
or
int
inc
out
jmp
cwtl
adc
mov
cmp
das
repnz
lds
inc
push
je
mov
out
out
mov
add
aad
pop
pusha
and
pop
and
repnz
mov
icebp
aaa
ds
mov
dec
ds
adc
add
les
dec
cmp
fsubrs
jns
inc
fwait
orl
rcll
mov
mov
mov
inc
ljmp
ja
sub
mov
pop
jne
xor
jns
add
mov
dec
les
xor
cmp
inc
jae
shll
pop
jnp
sub
mov
mov
fdivr
es
xchg
lcall
mov
call
addr16
or
mov
lods
lret
inc
jbe
pop
outsl
das
xchg
jo
sbb
mov
or
sti
das
cs
test
cltd
cld
inc
mov
push
roll
mov
lock
daa
scas
xlat
stos
iret
fstpt
sbb
push
sbb
jl
lock
and
mov
add
and
pop
jnp
movsb
hlt
cli
push
pop
push
mov
jmp
and
popf
cmp
loope
cmc
push
jle
sub
push
mov
sbb
add
dec
pop
rorl
lcall
cwtl
lret
pop
dec
push
cmp
cmp
jns
pop
out
sub
ljmp
add
pop
rorl
cwtl
lahf
aaa
jle
sbb
xchg
or
sahf
out
and
popa
lds
repz
fcompl
or
enter
mov
adc
fs
jecxz
pop
nop
mov
repz
lods
adc
imul
movsb
ror
jbe
std
test
movaps
mov
mov
jne,pt
mov
inc
rcrl
cs
addl
inc
sub
shrb
lock
pop
outsb
insb
addr16
pop
add
scas
adc
and
mov
jl
ret
and
fs
pop
jb
pop
push
inc
mov
mov
sub
sub
mov
cmp
push
pop
in
sub
cmp
stos
dec
test
jo
jl
ds
les
scas
adc
fdivrs
dec
cltd
sbb
lahf
iret
add
jmp
sbb
je
mull
adc
pop
mov
in
sub
inc
lahf
je
mov
stos
cmp
test
cmpsl
insb
mov
jp,pt
cs
out
ret
into
xor
in
jbe
jmp
into
ficomps
xor
les
add
mov
insb
jmp
int3
cld
push
stos
jno
in
mov
cmovo
mov
pusha
lds
sti
loop
rcll
sahf
mov
outsb
inc
jne
pusha
cwtl
sub
pop
sbb
stc
sbbl
inc
fcmovb
add
xor
sub
cmp
data16
leave
sbb
cmp
fisubrs
mov
ret
out
ljmp
mov
adc
into
push
hlt
bound
aad
or
pusha
dec
daa
aam
std
fdivrl
out
mov
std
xor
xor
jmp
push
sub
out
mov
arpl
dec
out
jbe
adc
fbld
mov
jne
mov
out
dec
and
jl
bound
pop
jl
leave
and
push
jns
dec
adc
push
dec
or
push
cltd
mov
stos
inc
cmp
push
cmpsb
in
mov
mov
lea
aaa
pop
ja
xchg
cmpl
xor
sbb
ret
sahf
jl
sbb
or
pop
or
jecxz
mov
add
xor
jb
pop
in
cmpl
jg
pop
xor
subl
mov
or
or
and
mov
shrl
call
xchg
mulb
fidivl
in
je
fimuls
xorb
in
cmp
jb
test
cmpsl
xor
mov
sbb
cmp
push
inc
jnp
cmp
mov
fs
iret
ficoml
scas
sbb
test
imul
das
xor
push
cmp
cs
and
and
cmp
jmp
outsb
cwtl
lods
mov
insb
push
mov
incl
popf
push
cwtl
stos
or
xchg
cli
inc
dec
xor
mov
sub
lods
mov
mov
data16
ss
into
cmp
xlat
arpl
inc
sub
mov
lcall
pop
sbb
js
xor
aad
pop
xor
ror
ret
inc
cmc
test
and
in
push
pop
out
jb
cmp
out
loop
dec
pushf
pop
cmp
and
pusha
push
mov
loope
push
mov
in
mov
or
inc
and
mov
andl
and
insb
mov
loope
xor
and
subb
cli
std
xchg
inc
add
cld
mov
sbb
mov
jmp
jecxz
les
clc
xlat
or
sub
pop
jbe
lods
push
pop
or
lret
or
aam
pop
sub
xor
fsincos
popa
les
jl
lahf
test
xchg
mov
pop
outsb
fs
cmpsb
sub
stc
in
test
dec
jbe
testl
subb
in
inc
jne
subb
mov
aaa
fistps
rclb
bound
adc
popa
in
and
inc
out
inc
push
gs
pop
movsl
pusha
subl
lock
sbb
add
fbstp
sub
xlat
jl
out
cmp
ljmp
cmpsl
adc
cmp
leave
cli
test
int
cmpsb
and
xchg
push
jle
cmp
mov
rcl
cmc
in
push
fsts
arpl
je
stc
test
test
push
cmp
xor
imul
dec
sub
loopne
dec
imul
and
stos
sub
xor
dec
sti
push
test
mov
mov
dec
pop
call
std
movsb
stos
sub
lahf
fisubrl
test
jo
pop
gs
push
or
mov
icebp
add
pop
and
mov
sub
pop
push
xor
mov
dec
out
add
iret
in
out
inc
cs
mov
dec
decb
movsl
lea
cli
aam
in
sbb
in
movsl
aad
xchg
int3
pop
xlat
or
jmp
fwait
cmpsl
stos
frstor
out
inc
add
iret
xchg
lock
lret
test
inc
repnz
sahf
mov
enter
stos
cmp
bound
and
dec
lock
rcr
pop
mov
cltd
sub
cmp
xor
jecxz
add
movsb
or
ja
ret
mov
lds
loopne
lcall
adc
nop
lds
pop
frstor
in
jnp
testb
fisttpll
hlt
cltd
ret
mov
push
mov
xlat
iret
aad
ret
pushf
mov
hlt
jbe
and
inc
push
dec
shld
iret
sbb
cmpsl
sti
cmp
jbe
jno,pt
xchg
addb
mov
aam
fcomp
fstps
sbb
in
lds
mov
sbbb
inc
subb
in
test
jmp
sbb
loopne
add
cltd
sbb
mov
fwait
cmp
nop
sub
jl
fdivrl
cmc
cmp
adc
and
pop
in
lods
cmpsb
add
adc
xchg
xchg
bound
mov
sub
or
movsb
pop
clc
in
cmp
imul
pop
or
mov
call
lods
adc
lods
push
push
inc
movsb
in
mov
push
stos
pop
sub
lcall
addr16
into
push
stos
outsb
and
push
add
ljmp
inc
inc
vmaxsd
ds
add
and
xor
daa
scas
dec
and
mov
cmp
icebp
xor
jne
dec
sbb
repz
add
dec
shll
jae
pop
stos
cmp
mov
jne
mov
loop
pop
popf
add
jecxz
les
inc
aad
mov
fcomps
jns
xchg
adc
sub
jge
ds
or
sti
popa
in
clc
sub
jmp
push
dec
and
push
aas
jo
sub
add
out
in
inc
pop
cmpsl
jg
test
push
jns
in
sub
add
clc
cmpsb
mov
sub
out
sbb
ds
sbb
add
rolb
jbe
cltd
icebp
mov
jl
xchg
xchg
fldcw
xchg
pushf
sbb
and
push
mov
lret
out
mov
ds
pop
jle
dec
lea
bound
cmpsl
loop
sbbl
xchg
fs
push
jns
dec
cmpsl
leave
mov
xor
cld
ja
xchg
pushf
shr
dec
popf
out
inc
and
arpl
js
call
loopne
or
push
lret
add
cli
cmp
add
sbb
lret
lcall
cmpsl
mov
rol
push
jae
mov
aaa
mov
fsubr
call
nop
out
fisttpll
fs
imul
xchg
jp
xrelease
in
push
sahf
and
enter
pop
lcall
cmpsb
add
xchg
xor
xchg
mov
inc
fs
mov
push
push
jge
pop
das
test
subb
cmp
mov
mov
incl
js
adc
dec
fsubrs
loopne
out
add
jle
sub
mov
dec
push
out
xchg
cmp
sbb
fldt
popa
inc
shrb
cmc
add
inc
sbb
jmp
into
andb
pop
mov
pop
cmp
inc
lea
call
lds
imul
loope
sbb
dec
shr
or
pop
cltd
sbb
jmp
repz
stos
jge
rorl
in
test
inc
insb
pop
imul
mov
mov
daa
cmp
inc
stos
pop
ja
add
rcr
adc
cld
adc
mov
gs
pop
call
jmp
ljmp
add
inc
fucomp
and
cmp
popf
repnz
repz
or
push
cmpsl
jle
dec
mov
out
aad
lods
js
cmp
std
mov
xor
inc
dec
cltd
filds
xchg
sbb
fisubs
movsl
rorl
dec
inc
mov
shlb
jne
or
and
sti
xlat
rorb
ljmp
jbe
xchg
sahf
cmp
roll
mov
outsb
xor
jp
mov
inc
dec
jecxz
push
dec
clc
and
pop
test
mov
aas
push
mov
subl
mov
push
lahf
mov
mov
clc
rcrl
jne
push
les
pop
push
call
hlt
jbe
repz
lods
xor
cmpsl
mov
test
and
or
xchg
mov
dec
mov
inc
shlb
pop
fcom
sbb
add
xor
xor
cmpsl
outsb
adc
jmp
stos
inc
cwtl
lods
in
mov
cmp
xor
or
test
mov
call
push
mov
lods
sub
dec
inc
jp
sub
xor
int
pop
das
test
push
shll
or
lds
ficoml
stos
mov
push
mov
push
das
mov
int3
lea
out
lods
push
mov
xchg
cmp
mov
dec
ss
mov
jns
jo
or
and
mov
jne
into
add
xor
mov
adcl
enter
pop
xchg
outsl
scas
push
adc
mov
loop
lahf
or
fnsave
mov
pop
push
shlb
ljmp
jp
scas
lods
gs
cld
jbe
jge
mov
jle
gs
scas
xor
std
cmp
mov
gs
push
jecxz
insb
and
xchg
pop
mov
aas
mov
xchg
scas
decb
adc
loopne
je
sarl
push
and
mov
sahf
bnd
cmc
daa
pop
in
sbb
pop
adc
dec
mov
es
jg
xchg
in
fcomi
and
ljmp
int3
jno
add
daa
xchg
stos
mov
cmc
test
jne
fwait
pop
cmpsl
cmp
jle
inc
sub
je
jb
das
mov
std
jp
hlt
push
gs
adc
xchg
fisttpl
and
jb
push
hlt
fisttpl
sbb
les
sbb
push
add
mov
cmp
pop
iret
insl
pop
and
cmpsl
cmp
loopne
mov
push
cmpsb
adc
pop
cmp
movsb
scas
sbb
or
mov
call
lcall
outsl
test
jmp
inc
inc
into
pop
push
inc
dec
arpl
or
adc
out
mov
xchg
mov
push
shlb
enter
cmp
int
je
enter
xchg
mov
mov
ljmp
push
filds
aam
xlat
pop
cmc
cwtl
sub
cmp
sub
out
iret
inc
jecxz
pop
jmp
cli
out
inc
iret
xor
pop
int3
or
jl
fwait
popa
ds
push
cli
not
jge
mov
mov
repz
inc
in
gs
js
fisubrl
scas
icebp
outsl
adcb
addr16
fcmovnbe
cmp
stc
insl
inc
or
sahf
mov
xchg
jnp
cmp
sbb
leave
jns
sti
or
movsl
dec
dec
das
mov
xchg
xlat
mov
xlat
jle
or
into
cmpsb
lcall
inc
fidivs
cmp
jns
adc
pop
in
ds
test
mov
cmc
in
cmp
iret
pop
arpl
in
shrl
lea
rclb
sub
dec
add
jb
mov
ret
dec
add
push
mov
sbb
sub
repnz
js
iret
pop
ret
inc
lods
inc
outsb
movsl
cmp
in
icebp
insl
mov
test
mov
fstps
pop
leave
shrl
xlat
mov
push
push
decl
out
sub
imul
ds
inc
leave
orb
insb
mov
les
mov
mov
push
stc
jo
shrl
cwtl
popf
xchg
xchg
jns
movsl
mov
test
int
in
es
icebp
aaa
xor
mov
mov
sub
dec
sti
push
push
mov
fiaddl
cmp
subl
ds
iret
mov
inc
pop
mov
mov
movsb
scas
das
inc
mov
inc
and
add
test
addr16
insl
loopne
sub
stos
lods
ror
inc
mov
repz
cld
lret
xchg
scas
aad
sbbb
dec
add
dec
inc
lds
and
in
mov
test
in
mov
xor
xchg
fidivrs
jbe
stos
dec
aam
inc
pop
nop
test
sahf
jbe
sub
jmp
sub
pop
pop
xor
pop
mov
mov
popf
inc
nop
fimuls
fcmovb
adc
push
fildll
loope
push
out
lret
lds
mov
lcall
fidivrl
fldl
and
sub
inc
jge
push
stos
outsl
in
dec
fimuls
scas
or
sbb
sahf
mov
mov
mov
cs
sub
cmc
cmp
rcll
loope
push
add
jnp
and
into
aam
lods
mov
cmp
add
mov
sbb
shlb
dec
add
hlt
inc
fiadds
sub
push
cmp
inc
out
stos
leave
sbb
add
rcr
lret
shll
notb
fidivs
dec
push
xchg
loope
faddl
jg
outsb
mov
xchg
shr
es
bound
dec
iret
mov
dec
mov
push
fnsave
rorl
fs
inc
cltd
testl
dec
inc
mov
enter
mov
push
mov
es
push
fisttpl
mov
mov
inc
pop
mov
std
adc
pop
dec
add
add
sub
rclb
std
iret
mov
sbb
ret
imul
xor
pop
jg
cmpsb
imul
int3
jecxz
or
push
int
push
loopne
sbbb
in
popa
mov
addr16
ret
push
popa
xor
dec
jno
fs
vpunpckhqdq
push
xor
pop
pop
sbb
sub
inc
in
push
jne
mov
inc
nop
push
fsts
mov
imul
fsubr
ljmp
jecxz
sti
iret
push
ret
add
in
repz
push
je
ljmp
cmp
mov
shll
push
into
rorb
xchg
or
push
fwait
movsl
mov
push
fistpl
imul
roll
mov
add
jle
sti
mov
fsubs
dec
or
adc
pushf
mov
adc
mov
fstpt
mov
dec
mov
daa
push
imul
int3
add
loopne,pn
adc
outsl
or
jae
sahf
stos
mov
pop
test
in
mov
shlb
mov
inc
ja
xchg
mov
sub
cli
outsl
iret
in
mov
mov
mov
jl
fisttpll
sbb
in
outsl
adc
cmp
xorl
sbb
stos
pop
pop
lock
pop
mov
sar
clc
pop
ret
adc
leave
ja
and
or
or
scas
xor
mov
inc
out
setno
insl
cmp
mov
std
es
daa
adc
xchg
or
xor
mov
push
push
movsl
push
mov
ret
sub
test
xor
jae
xor
cmp
scas
dec
mov
xor
in
outsl
sub
jo
mov
dec
jae
in
daa
dec
sarl
or
rclb
mov
xor
pop
xorl
das
pop
outsb
dec
adc
out
add
js
dec
jp
aam
dec
aaa
gs
inc
test
int
imul
ret
ficoms
push
mov
mov
mov
xchg
ds
notb
mov
repz
xchg
xchg
jb
inc
pusha
out
ds
sub
push
movsl
jno
sbb
je
scas
std
loop
mov
push
xchg
nop
arpl
imul
sub
outsl
push
sub
outsb
insb
pop
adc
adc
leave
jl
decb
sub
xchg
cld
dec
ds
enter
mov
aaa
sbb
mov
mov
push
sbb
pop
or
jecxz
xchg
jno
js
ss
pop
inc
enter
dec
inc
orb
imul
stos
cmp
xor
jg
xchg
lret
bound
out
cmpsb
lahf
jne
pusha
sbb
movsl
mov
lds
fisubs
fistpl
out
lods
sub
lods
aam
cmp
sahf
mov
sti
movsb
mov
repnz
adc
xlat
xchg
decb
adc
mov
scas
mov
mov
mov
fbstp
rorl
push
mov
cmp
repnz
jns
out
mov
icebp
cmc
and
add
pop
fists
push
dec
data16
stc
lds
popa
je
ret
dec
cmpsb
inc
mov
sahf
pop
jmp
cwtl
inc
into
xchg
pop
into
fcompl
push
repz
enter
in
adc
sub
and
outsb
jge
adc
sti
into
jmp
adc
lods
in
ljmp
xchg
popf
jns
insb
dec
pop
jge
shrb
sbbl
mov
aaa
pop
js
dec
pop
scas
push
lret
or
pop
ret
sahf
dec
jo
pop
lret
dec
mov
cld
and
mov
jbe
push
orb
arpl
into
cld
stos
cmp
dec
les
dec
rolb
xorb
bound
push
aam
jmp
pop
mov
mov
aad
or
es
je
cmp
push
xchg
sub
xor
xor
cmpsb
xor
sti
outsl
jbe
pushf
mov
sbbb
mov
mov
jns
mov
cmpsb
stos
fwait
cmpsl
popa
dec
or
sahf
xchg
inc
xchg
mov
lahf
mov
push
scas
das
dec
sti
stos
movsb
loop
in
test
ja
loop
insb
inc
std
cwtl
xor
int3
cmpb
pop
push
scas
dec
icebp
adc
cld
int3
jl
cs
cmp
mov
pop
add
pushf
fcomi
popa
lahf
dec
pushf
adc
fisttpl
xor
cmpsl
out
push
push
jecxz
cmp
adc
xchg
ja
sbb
jb
sub
loopne
pop
push
fcomi
ja
dec
or
mov
xchg
mov
jle
leave
out
cld
mov
lahf
cmc
mov
nop
negl
popa
mov
ljmp
xchg
lods
jnp
in
xchg
mov
stc
enter
cmp
in
in
push
movsl
sub
js
dec
cmpsb
jbe
les
pushf
mov
jmp
xchg
push
daa
mov
icebp
xchg
ss
cld
sbb
add
rcl
or
jge
mov
cmc
jg
adc
sbb
mov
sarl
jp
pop
mov
dec
push
push
imul
mov
into
in
sbb
int3
insl
mov
cmp
je,pn
jle
push
rol
ss
insl
mov
int3
arpl
data16
mov
mov
jge
mov
inc
xor
gs
imul
cmp
mov
lret
das
fcoms
dec
mov
fs
cwtl
movsl
push
jae
in
push
imul
leave
cld
fbstp
jg
cmp
jmp
clc
stc
fisttps
cmpsb
mov
sub
out
mov
mov
add
add
lahf
pop
sub
lea
in
test
clc
adc
lods
insl
jle
int
popa
adc
shl
add
cmp
fadds
lods
ss
pop
insl
icebp
out
in
loop
mov
int
das
jecxz
mov
lcall
push
jle
sbb
mov
loop
roll
add
xchg
push
popf
jae
xor
fists
lock
mov
xchg
loope
lods
hlt
pop
mov
jge
shrb
sbb
popf
lods
jmp
add
aaa
pop
mov
sbb
or
in
sahf
ds
or
ljmp
repz
mov
mov
dec
fldt
cmpsb
mov
cmp
lret
rcll
xchg
insb
mov
cwtl
inc
or
repnz
sbb
aaa
loop
ja
pop
ret
push
daa
pop
lods
hlt
fadds
insl
int3
test
inc
mov
or
notl
insb
xchg
jge
lods
pop
fstl
call
push
sti
imul
das
adc
mov
mov
jecxz
in
xor
mov
mov
rcl
ja
fidivl
daa
movsb
mov
outsl
mov
mov
and
push
cmc
mov
scas
xlat
in
pop
xchg
hlt
push
jp
mov
rcrl
out
inc
or
ret
cmc
pop
jmp
sub
dec
ficoms
or
add
sub
inc
sub
movq
cltd
mov
jae
nop
test
pop
lret
jp
cmovns
push
mov
ds
stc
out
and
sub
and
or
ror
sbb
xlat
pop
or
pop
out
movsb
daa
jle
cmp
mov
mov
dec
cmp
dec
jo
call
push
mov
adc
cmpsb
movsb
jl
mov
sarb
rolb
and
jle
fst
jl,pt
mov
in
push
lock
jg
lds
mov
popa
fisubl
pop
inc
ret
and
xor
setb
cmp
adc
clc
sbbl
jle
pop
stos
leave
aad
jno
and
jl
sub
or
pop
insb
aaa
lret
in
pop
add
jno
cli
pop
sti
sub
and
lcall
es
xor
ret
insl
into
clc
inc
fnstsw
mov
in
cmpsl
mov
lea
push
scas
mov
mov
mov
xor
or
and
mov
ret
iret
js
ror
mov
cmpsl
mov
loopne
lods
cs
add
mov
add
cwtl
lods
pop
cmp
push
xchg
stos
mov
push
sub
xor
out
push
scas
nop
pusha
cmpsb
addl
pop
rcr
push
testb
ret
push
cmc
or
and
sub
mov
and
cmp
cs
add
sub
fbstp
loop
in
adc
adc
in
ss
es
data16
fcomp
pop
rorl
mov
xor
pop
dec
xor
andl
test
inc
les
dec
addl
jp
addr16
push
movsb
scas
mov
imul
cmc
jmp
daa
pop
shlb
ds
lret
mov
push
inc
arpl
sbb
ja
filds
cwtl
dec
enter
sti
jne
js
push
xchg
divl
add
cli
jmp
pop
sbb
nop
fists
lock
xchg
mov
xchg
clc
jae
pop
lret
bound
mov
aam
and
add
pop
jns
dec
dec
xchg
jmp
ret
xchg
out
mov
fsubs
aad
push
popa
imul
es
mov
mov
int
jmp
or
inc
aam
call
repnz
push
mov
add
jb
jb
cmp
int3
add
inc
lret
out
ja
sub
clc
arpl
rclb
sub
inc
adc
mov
xor
rorl
sbb
xchg
das
pop
push
push
ds
scas
mov
jbe
sarl
dec
enter
aaa
mov
mov
push
mov
xor
testb
fists
daa
add
movsl
and
clc
mov
xor
mov
leave
aas
insl
add
sar
es
cltd
cmp
add
adcb
dec
fcoms
icebp
inc
mov
inc
iret
cmp
mov
inc
sub
aaa
stos
dec
pop
aam
pop
fsubrs
cmpsl
mov
sub
subb
bound
inc
mov
or
push
inc
xchg
inc
clc
or
sarl
mov
mov
lea
andl
pop
xlat
inc
pop
mov
fiaddl
push
mov
xchg
int3
xchg
cmpsb
sub
in
mov
in
ret
jmp
gs
dec
mov
lods
sbb
sub
stos
mov
lods
aam
jmp
jno
jl
jmp
or
inc
mov
cli
lods
enter
lret
mov
dec
and
and
dec
dec
push
stc
imul
cs
sub
xor
roll
dec
sub
divl
fiaddl
aad
mov
iret
add
sarl
pusha
test
in
or
pop
push
add
fisttps
inc
fbld
ja
add
cmpsl
xchg
jno
test
rcll
xchg
fxch
ret
inc
jmp
add
gs
sbb
repnz
jbe
nop
inc
add
mov
hlt
push
mov
int3
push
mov
shrb
jae
int
ret
imul
fimuls
cmc
pop
rcrb
or
mov
outsb
cmp
scas
jge
test
or
or
mov
xor
cltd
jns
mov
push
ret
xlat
lods
je
mov
push
sahf
or
mov
ja
clc
pop
cltd
pop
inc
enter
push
out
sarb
repnz
mov
jmp
xchg
lahf
push
idiv
jmp
ret
dec
pop
dec
stc
dec
into
icebp
out
adc
test
rcll
stos
cmp
jno
loopne
out
ficompl
mov
pop
jae
jmp
and
xor
xor
iret
imul
movsb
sahf
cld
push
mov
mov
into
sub
movsb
aad
je
adc
mov
enter
cmp
mov
fists
lock
adc
sub
push
xor
push
jle
fsub
movsb
stc
mov
clc
pop
pop
mov
leave
mov
push
jge
aam
mov
imul
in
adc
cmp
sbb
dec
jmp
arpl
lcall
andb
clc
jp
lret
popf
cmp
sarb
pushf
and
add
jb
jb
leave
push
or
dec
mov
jns
jl
fsubs
sub
sahf
and
push
push
push
into
ljmp
cmpsl
jbe
cli
add
call
loope
aaa
dec
adc
mov
xchg
or
fimull
push
xor
fsubrl
xchg
ret
adc
sub
push
decb
loop
sub
xchg
add
dec
mov
sbb
xchg
dec
mov
xchg
push
push
ret
stos
sbb
es
push
scas
in
sub
inc
roll
scas
mov
jp
aas
sbb
push
jb
add
insl
data16
sub
lahf
add
and
mov
and
adc
les
mov
movsl
adc
sub
push
lock
cs
add
div
jge
loope
cmpl
push
sub
sahf
fs
in
ficoml
cld
xor
sarl
cmp
mov
adc
mov
and
inc
pop
mov
pusha
imul
stos
mov
repnz
inc
jg
push
je
out
sbb
or
hlt
xchg
imul
sub
xchg
movsl
xlat
pop
mov
nop
jbe
fldl
mov
iret
adc
pop
cmp
int3
into
mov
xor
cmp
dec
mov
sub
sbb
sbb
outsl
in
aaa
aaa
aas
adc
popf
mov
jae
sub
fdivrl
fdiv
outsl
int3
adc
fcomip
dec
mov
and
mov
hlt
xchg
dec
cli
pop
add
mov
or
jns
jmp
pop
cmp
dec
addr16
pop
fcoml
inc
outsb
cltd
add
lcall
outsb
push
je
push
testb
mov
or
xchg
xchg
mov
ret
sar
sti
ja
daa
add
cmp
repz
je
add
sbb
imul
je
sbb
mov
inc
add
cmp
dec
mov
ja
loop
pop
cmp
jae
or
jge
or
rclb
call
call
push
call
xor
xor
push
dec
mov
lret
out
daa
jecxz
add
cmpsb
cli
dec
fidivs
xchg
lret
aaa
cmpsl
cli
int
insl
insl
jae
fisttps
mov
aas
adc
or
ret
subb
xor
mov
pop
mov
mov
xchg
push
or
pusha
dec
testb
cmpb
inc
inc
inc
and
mov
orl
sbb
int3
sbb
cmp
icebp
push
enterw
inc
fsubp
jg
cmp
push
aam
push
mov
or
jb
inc
inc
or
neg
cmpsl
fcoms
test
ljmp
dec
jl
push
fsubs
loop
mov
sbb
add
xor
stc
testb
fdivrl
push
add
lahf
fsubr
jnp
out
mov
and
roll
daa
mov
sub
jecxz
push
scas
mov
sub
jl
jg
stos
scas
sti
push
iret
cli
in
mov
mov
mov
xchg
mov
inc
and
scas
inc
sub
mov
mov
mov
pop
sbb
outsb
daa
jne
add
add
out
out
mov
xchg
mov
or
es
push
mov
mov
lock
sbb
jo
addr16
sbb
es
ffreep
mov
adc
out
enter
ss
mov
add
js
dec
dec
gs
dec
inc
pop
sar
jnp
add
mov
call
jp
cmp
and
pop
loop
pop
incl
jge
mov
inc
and
insb
pop
imul
mov
mov
inc
push
push
xlat
mov
inc
sub
jp
and
imul
sub
and
pop
sub
sub
push
aaa
inc
sbb
adc
jbe
psubusb
adc
dec
mov
dec
fdivr
inc
cs
fcomi
jo
cmp
enter
imul
fwait
in
lods
xchg
ret
cmc
fsubl
or
test
cmc
fbld
xlat
jmp
addr16
xor
jle
mov
enter
call
enter
hlt
dec
sub
push
ljmp
dec
fiadds
xchg
mov
aaa
add
mov
push
rorl
xchg
cltd
mov
filds
inc
out
add
sarb
outsb
rcll
aaa
inc
add
dec
in
jg
inc
sbb
negl
sub
push
dec
lahf
inc
xor
mov
push
sbb
sbb
and
mov
xor
and
add
leave
mov
xchg
ja
sbb
inc
aad
dec
lret
cvtps2pd
mov
arpl
inc
fisttps
jmp
lods
out
sub
rolb
add
subl
rcrb
aam
ffreep
lcall
fs
fcmovnb
mov
mov
jns
fsubs
shrb
sbb
fisubs
in
adc
test
cmp
scas
test
inc
ret
jge
call
sbb
lcall
fwait
mov
out
jo
daa
and
daa
or
icebp
insb
jecxz
lock
mov
mov
sbbl
loop
push
bound
and
xchg
decb
xchg
push
xor
daa
mov
inc
mov
loop
cmp
cmp
jae
xchg
push
pop
mov
adcb
jg
mov
mov
int
cmp
fdivrs
aaa
nop
aad
jnp
adc
in
push
popa
cmpl
inc
mov
daa
movsl
cmc
or
inc
inc
int
int
lret
popa
adc
das
mov
push
xchg
inc
into
aam
jg
push
fldcw
pop
cmc
pushf
lods
loope
push
ds
pop
adc
pusha
ret
ljmp
pop
das
cwtl
add
in
and
arpl
int
loopne
dec
jbe
pop
cmp
imul
push
fsubr
lds
cwtl
dec
loope
pop
push
pop
mov
lahf
sbb
add
outsb
pop
jno
jbe
add
mov
bound
addr16
das
icebp
popf
out
imul
mov
mov
ds
pop
add
imul
into
sbb
sahf
add
shl
cmp
dec
loopne
movd
xchg
aam
cmc
jge
loopne
inc
and
adc
mov
inc
pop
imul
bnd
inc
mov
repnz
and
lds
mov
xchg
push
popa
es
push
xor
out
cmp
std
xor
push
adc
movsb
hlt
mov
jmp
sbb
add
or
filds
dec
mov
mov
filds
popf
insl
xorb
mov
jg
insb
sub
jp
jb
mov
xor
cmpsb
mov
ljmp
sub
cmpsb
jmp
mov
inc
es
fdiv
mov
sahf
dec
ja
je
lock
das
inc
movsb
loopne
into
sub
lods
push
adc
fs
jno
pop
mov
adc
cmpsb
imul
enter
je
iret
push
ficomps
ljmp
cmp
out
mov
ror
mov
inc
scas
popa
cmp
out
movsb
fidivrs
xchg
rorl
fstpt
lahf
loop
dec
lcall
add
cmp
daa
vmovdqu
inc
daa
enter
js
ljmp
inc
les
cmp
pop
inc
pop
addr16
xor
js
repz
adc
cmpsb
xor
pop
or
fwait
jb
outsb
sub
jecxz
int3
xchg
arpl
cmp
pop
into
icebp
pmaxub
or
add
add
lock
jmp
pop
mov
icebp
stos
sahf
je
enter
sbb
xor
add
lods
cmpsb
rol
mov
jg
fwait
xchg
cli
cmp
and
cmp
scas
adc
cmp
push
pop
lret
pop
jae
dec
movsb
jae
test
jle
pop
gs
pop
shl
movsl
pop
mov
loop
out
cmc
mov
mov
divl
fisttpl
mov
or
add
and
pop
xor
scas
inc
xchg
inc
enter
movsb
js
cmp
mov
or
test
sbb
lock
sbb
jge
das
mov
push
add
jmp
outsl
adc
push
decl
test
cwtl
mov
jne
gs
mov
aad
push
or
mov
or
push
loope
jae
cmp
pavgb
and
bound
cmpsb
jae
lcall
xor
call
push
xor
lret
sbb
into
and
incl
xor
xchg
pop
inc
mov
pop
pop
daa
cmc
adc
out
lcall
mov
cmp
movsb
sbb
imull
and
jecxz
inc
fisubrl
icebp
out
lds
int
or
push
popa
jle
roll
sahf
mov
pop
sub
or
in
sbb
xchg
clc
sbb
cld
jge
pushf
arpl
mov
es
mov
push
pop
pop
pop
ret
mov
dec
out
test
cmp
arpl
leave
sub
ret
fstps
test
out
push
adc
mov
movsl
ret
fildl
outsl
out
stc
push
fwait
stos
call
mov
xor
add
pop
loopne
cld
outsb
xlat
aad
aas
test
or
jne
mov
mov
hlt
cmp
xor
add
cmp
and
push
push
loop
cmpsb
jbe
push
jmp
jno
sub
std
xchg
ret
outsl
jg
adc
dec
lods
push
cmp
push
xlat
jg
in
or
stos
push
xchg
outsl
jl
mov
pusha
enter
popa
lods
cmpsb
xchg
insl
or
hlt
pop
pop
dec
dec
cmc
int
or
or
adc
jle
sbb
lods
cmpsl
mov
lret
push
cmp
pop
mov
ret
cmp
insl
les
imul
imul
push
or
loop
jg
xor
mov
negl
test
jge
mov
sbb
mov
filds
inc
mov
mov
sub
in
xor
fildl
in
stos
pop
mov
pop
mov
shll
xchg
pop
rcl
adc
outsl
or
xor
cmp
jmp
push
inc
adc
cmp
cli
out
sbbl
push
cmp
sbb
push
fcmove
pop
lods
xor
mov
hlt
xor
movsb
pop
mov
out
jg
xchg
cmp
cli
dec
lds
xchg
jbe
mov
mov
and
clc
daa
push
movlps
jge
mov
jo
or
inc
cli
mov
je
or
mov
adc
aaa
popl
ja
jg
dec
mov
jl
pop
sbb
cmp
test
add
sub
imul
lahf
fwait
idivl
inc
lret
mov
mov
xor
arpl
out
mov
cld
enter
daa
jp
ror
fidivrs
pop
adc
std
pop
mov
lret
loop
jp
filds
lcall
and
jb
mov
sbbl
mov
xor
pusha
ds
adc
inc
int
movsl
push
mov
lret
xchg
xchg
cmp
mov
lods
mov
pop
dec
fwait
das
pop
sbb
jmp
lods
pop
out
addr16
lcall
shll
mov
push
lds
jo
call
movsl
pop
push
test
loop
test
idivl
push
dec
sarl
cmp
push
gs
dec
cli
mov
sbb
inc
dec
jo
jle
push
enter
sub
and
loope
xchg
lret
subb
jg
pop
push
test
dec
add
or
in
sub
ret
pop
or
cmp
aaa
dec
outsl
lock
aam
es
push
xor
inc
mov
mov
sti
lret
lahf
sub
fisttpl
and
loop
js
mov
mov
push
scas
push
mov
adc
add
daa
xchg
mov
les
cltd
test
int3
sti
aas
stos
xchg
data16
iretw
fisttpl
ja
roll
in
jae
xchg
dec
pusha
aaa
loopne
fldlg2
and
sub
sarb
xchg
pop
pop
cltd
mov
fisttpl
cmp
es
out
adc
pop
daa
adc
mov
fs
insl
movsl
shrb
loope
jg
jae
push
cmp
mov
inc
frstor
dec
xchg
jno
nopl
iret
pop
mov
inc
negl
jo
dec
push
sbb
fisubrs
add
pop
inc
pop
jb
sub
test
je
into
enter
loope
dec
lea
push
sbb
mov
xlat
pop
das
mov
lods
jg
push
mov
add
arpl
stos
push
fcmovnu
mov
xor
in
testb
xor
xchg
xchg
mov
pusha
jmp
mov
insl
add
jno
mov
push
xor
outsb
popf
aas
addb
lahf
push
sbb
add
lahf
int3
testb
or
add
push
cmpb
dec
jbe
mov
cmp
cmc
xor
int3
faddl
xor
add
push
adcb
in
in
loop
lock
push
dec
mov
test
test
call
mov
sub
xchg
and
psubd
loop
sbb
loop
loope
inc
dec
bound
xchg
or
cmpsb
jbe
stc
inc
sbb
lahf
lahf
mov
sub
and
cld
inc
aas
cli
aaa
pop
add
mov
fdivr
lahf
sahf
mov
out
sti
mov
inc
inc
cmp
scas
sub
enter
push
jns
or
and
nop
aas
cmp
add
adc
cmc
or
pusha
stos
stc
jmp
add
dec
les
pop
adc
cmp
in
xor
in
sbb
and
aam
lock
sarl
fldt
lock
mov
vcvttsd2si
mov
push
mov
insb
mov
divb
sti
xlat
pop
pushl
clc
ret
jb
and
lahf
mov
psrlq
push
loope
jbe
insl
lahf
scas
lret
lock
faddl
or
or
or
mov
or
roll
pushf
clc
testb
sbb
jge
sub
pop
push
hlt
das
scas
daa
dec
mov
fisubrl
fisttpll
movsb
outsb
test
data16
mov
pop
insl
enter
cmp
xchg
xchg
fstpt
gs
call
jae
xchg
ja
pop
mov
movsl
repz
inc
jl
in
push
push
outsb
fisttpl
push
dec
push
xchg
scas
mov
test
cli
cmp
sbb
call
repz
jbe
add
add
xorb
cmp
push
aam
jp
cli
loope
pop
into
std
in
push
lcall
out
jo
in
lahf
enter
and
mov
mov
cmp
pop
xchg
sub
test
dec
push
clc
pop
jo
xor
jo
mov
jl
sub
push
in
push
mov
xchg
pop
lods
mov
lret
fisubrl
dec
add
repz
ja
inc
idivl
xchg
mov
mov
xchg
mov
mov
pop
sahf
test
in
xor
stos
es
and
fs
into
pushf
sub
push
lret
repnz
xchg
xchg
inc
iret
fsubr
inc
dec
insl
std
jne
sub
sahf
xor
mov
push
fdivrp
or
stos
xchg
inc
mov
mov
or
mov
jecxz
and
xor
test
xor
cmpl
jl
inc
dec
xchg
fsub
pop
xchg
and
push
stos
xchg
jle
clc
in
pop
jnp
add
je
and
push
xor
aam
fisttps
clc
lret
outsl
iret
int3
push
lock
push
pop
jns
cltd
ljmp
cmp
inc
jnp
mov
popa
shll
mov
stc
jbe
stos
fwait
adc
push
jmp
or
sub
mov
dec
pop
hlt
push
mov
xlat
push
movl
cmpl
mov
inc
fdivrs
adc
mov
hlt
fistpl
xchg
xor
jle
pop
mov
push
add
and
decb
testl
cmp
aaa
bound
sbb
roll
mov
ret
and
inc
cwtl
lock
mov
xor
mov
mov
mov
ds
mov
jmp
inc
and
mov
out
in
pushf
sub
arpl
dec
popa
rclb
mov
xchg
repnz
push
out
jge
mov
inc
xchg
or
jmp
mov
pop
loopne
xor
cltd
ret
sahf
push
lcall
cmp
adc
outsb
icebp
cltd
push
fidivrs
xor
incl
in
or
lods
inc
aas
or
je
cmc
mov
add
das
rcl
dec
arpl
inc
jg
mov
adcl
pop
out
lret
cltd
das
pusha
jg
testb
push
cmpsb
xchg
mov
fwait
pcmpgtd
push
and
or
inc
push
imul
lahf
in
cmp
arpl
je
idivl
pop
hlt
loop
inc
mov
imul
cmpsb
jno
mov
dec
and
add
lds
clc
jne
shlb
push
mov
in
sub
jmp
add
add
fdivs
inc
xchg
sbbb
mov
add
xor
xor
stc
or
pop
lret
aam
in
adc
mov
iret
cli
mov
and
andl
fsub
xor
movb
lods
lods
shll
arpl
stos
shlb
push
enter
pop
adcb
test
or
call
out
jp
adc
fsubs
pop
outsb
and
imul
in
mov
dec
dec
push
push
push
incl
inc
repnz
pop
aaa
loop
das
lret
in
cs
data16
popa
cwtl
adc
or
subl
iret
out
lahf
xchg
js
cwtl
shlb
mov
daa
aaa
ja
sahf
mov
mov
sub
andb
pop
addr16
enter
mov
cmp
fwait
or
int
mov
lods
dec
mov
dec
sub
mov
cwtl
xchg
and
push
cmp
mov
in
insb
mov
cli
add
inc
push
cmp
and
and
inc
pop
push
cs
loope
ds
out
and
ljmp
or
in
adc
in
xor
fsubs
sub
fdivl
shlb
into
out
xchg
pushf
call
popa
cmp
sub
pop
pop
jle
daa
xchg
ja
sahf
inc
out
jg
jne
loop
mov
jne
js
or
adc
out
cmpsl
fcompl
fdivr
adc
sbb
push
out
cmp
inc
repz
jecxz
sub
cmp
jns
cmc
push
fwait
pushf
add
test
cmp
lock
roll
sahf
cmp
push
jbe
cmc
inc
ja
int3
sub
aaa
xlat
scas
xchg
inc
in
xchg
xchg
cmpsb
lods
std
or
les
sub
jmp
mov
jae
sbb
mov
mov
int3
xor
frstor
mov
or
daa
jae
xchg
mov
sub
popa
out
insb
fwait
mov
imul
mov
lock
movb
push
mov
mov
stos
clc
mov
add
or
sub
cmc
xchg
lods
into
cmpsb
xor
test
and
test
mov
in
add
cmp
sti
cmp
lock
pop
dec
adc
int3
and
push
cmp
xorb
add
xchg
and
inc
dec
mov
sbb
shrl
adc
jl
mov
dec
push
lahf
mov
push
xor
test
push
jno
pop
fucomip
mov
pop
es
out
fs
lahf
push
push
xchg
cmp
pop
pop
pop
rorl
ss
jmp
push
add
movsl
mov
add
cld
pop
stc
sbb
divl
or
ret
test
andb
mov
jo
jne
in
or
jne
addr16
or
push
sbb
jnp
lahf
into
jecxz
int3
jge
jbe
mov
fiadds
xor
dec
daa
bound
lahf
sbb
pop
xchg
push
push
inc
mov
cltd
daa
cmp
sbb
loop
jno
pusha
lods
jnp
xor
call
mov
jae
shll
push
dec
mov
cli
jmp
sbb
fwait
mov
push
mov
push
mov
jne
les
jbe
push
imul
lret
jae
or
ljmp
je
jecxz
popa
mov
dec
jbe
mov
dec
pop
xchg
mov
add
adc
dec
js
imul
lahf
lea
fdiv
in
push
sbb
jb
adc
lea
sbb
jno
xor
jnp
pop
aam
sbb
dec
xor
mov
push
push
jge
jbe
pushf
pop
push
sarb
jnp
sarl
in
inc
xchg
int
sub
mov
out
xchg
inc
out
nop
stos
fs
test
nop
mov
adc
lock
jmp
sbb
mov
fimull
mov
mov
sbb
pop
jae
xor
and
lcall
dec
mov
cmpsl
mov
jb
mov
or
mov
sub
fucomip
ret
bound
in
cmp
int3
fstl
xchg
sub
adc
leave
ror
pop
jg
mov
das
hlt
movzwl
popf
sub
loop
xor
js
pop
movsb
mov
push
cmp
push
xchg
jb
and
add
icebp
out
adc
cmp
mov
xchg
push
and
fs
int3
leave
pop
fadd
clc
mov
mov
aas
inc
sub
loop
sub
mov
test
in
sbb
push
add
jae
sti
jns
fidivrl
lds
xchg
es
lcall
push
cmova
mov
test
es
cmp
xchg
push
inc
cmp
jge
xor
and
cli
sbb
dec
jne
enter
hlt
mov
lea
clc
adc
mov
jns
lds
into
mov
clc
ja
mov
test
add
sub
test
lock
stos
test
std
and
ret
cmp
fistpll
push
inc
and
iret
adc
sub
sbb
jnp
mov
fisubrl
xchg
push
jl
leave
dec
aas
adc
push
push
mov
jns
push
arpl
lods
ss
aas
xorl
mov
fstps
fildll
xchg
ss
mov
jmp
jecxz
pop
mov
or
scas
xor
or
test
jmp
pop
push
les
fiadds
cwtl
mov
pushf
mov
loopne
xchg
gs
sub
iret
lcall
xchg
inc
cmc
jle
ret
push
or
pusha
xchg
adc
fisttpl
cld
sub
jne
sub
and
lock
mov
stc
add
sub
rolb
lods
daa
test
test
xchg
mov
cvtdq2ps
mov
adc
jbe
or
adc
ds
and
mov
sbb
xchg
fdivp
lods
out
jle
jo
in
dec
adc
cli
jnp
bound
xchg
add
and
hlt
jge
aas
inc
mov
mov
movsl
sbb
adc
dec
cld
pop
or
mov
in
dec
stc
dec
mov
outsl
hlt
test
mov
out
pop
test
push
aas
jnp
test
fcomps
leave
mov
negl
lods
in
cmp
cld
pop
mov
add
jnp
das
sarb
out
int3
testb
leave
push
cmpsl
pop
shll
cmp
imul
imul
sbb
movsb
sahf
or
and
pop
xchg
xchg
sahf
out
push
fcomi
fstl
push
push
ds
push
mov
or
adc
mov
nop
dec
sahf
xlat
pop
sub
cmp
push
dec
add
xchg
lds
shl
aaa
and
xor
inc
filds
imul
mov
addr16
jge
jns
repnz
push
fstpl
ja
dec
icebp
or
sub
stos
jge
pop
imul
aam
pop
movsl
jne
out
jl
shll
jl
cltd
pop
or
loope
sti
cmp
push
jae
inc
jmp
jns
das
and
sti
test
xor
popf
jbe
arpl
xchg
mov
dec
xchg
loopne
ret
lods
fisubs
lret
js
jl
dec
mov
data16
push
lret
js
xchg
sbb
cmp
lods
sub
cmpsl
cmp
fmul
sub
movsb
faddl
fs
sbb
dec
xchg
sbb
mov
fucomp
mov
cltd
pusha
stc
fsin
xchg
inc
mov
enter
pushf
push
hlt
sbb
arpl
xlat
push
ljmp
loope
fidivrl
sbb
dec
jb
stos
jb
pop
fbstp
xor
pop
sbb
sub
jnp
jo
xchg
lea
aas
fisttpl
xlat
jmp
repz
inc
in
push
ficoml
cmp
mov
inc
mov
cmp
sbb
sbb
pop
ljmp
push
sar
cmpsb
pop
or
leave
or
inc
push
in
adc
mov
loop
or
add
cmp
xchg
mov
push
ds
imul
gs
pop
int3
xchg
adc
data16
pop
lods
add
stos
nop
inc
xor
jo
negl
add
or
stos
push
cmc
leave
fldt
fcompl
pop
push
mov
push
push
dec
cmc
mov
jmp
pop
lock
mov
test
pop
dec
pop
scas
sub
sti
xchg
jnp
out
mov
lret
add
in
lret
movsb
mov
lods
xchg
rcrl
gs
push
inc
movsb
in
loop
fldcw
jg
ja
pop
cmp
xchg
jmp
fwait
lret
out
in
or
and
sub
jmp
jmp
test
jns
leave
push
xor
lds
push
pop
sub
cmp
enter
mov
cmp
sahf
cld
lds
nop
nop
loopne
inc
ljmp
mov
cld
cmp
repz
xchg
mov
in
and
mov
add
cmpb
mov
cmp
int3
pop
and
popf
loope
hlt
pop
mov
push
jae
mov
neg
imul
xchg
xchg
ficoml
sbb
cltd
mov
xchg
inc
dec
andl
lcall
cld
sub
sahf
jne
cmp
jl
xchg
lods
enter
xchg
mov
test
pop
popf
jne
cld
xchg
int3
imul
pop
add
popa
das
in
int
fiaddl
sub
cld
or
in
mov
enter
sbb
sarl
fs
cmpsb
or
cmp
and
mov
or
repz
shlb
ds
xchg
mov
or
popa
stc
fimuls
testb
xor
inc
sbb
cmp
mov
sarb
mov
sub
bound
fwait
rorb
sub
es
aas
mov
fs
lret
jno
mov
in
cmc
add
mov
stc
adc
scas
lea
xor
cmp
add
in
popf
jge
jo
pop
je
loopne
fwait
aas
jns
mov
mov
jno
mov
add
out
cmp
jmp
int3
xor
outsb
insl
mov
ds
jp
shl
adc
sub
jge,pn
pop
mov
lods
sub
subb
jo
rcll
ret
cltd
jp
cmp
lret
jo
pop
pop
mov
jb
inc
mov
inc
lahf
pop
mov
in
sub
hlt
roll
xchg
push
push
sbb
test
cmc
or
test
loopne
gs
mov
je
or
pop
popa
lret
cld
mov
jmp
out
add
les
push
shrl
adc
das
add
fs
mov
jecxz
or
lcall
push
arpl
dec
cmpsb
lahf
ljmp
add
movl
pop
sahf
push
mov
cmp
arpl
push
pushf
shll
mov
xchg
addr16
sub
and
clc
daa
sub
dec
xor
mov
push
pop
sub
mov
xor
gs
xor
adc
ja
fldt
stos
cmp
lea
jo
mov
xchg
and
repz
aad
in
mov
in
mov
test
add
mov
sbb
fdiv
iret
cmpsb
repz
add
shlb
testl
mov
cld
mov
stc
pop
in
cmc
push
xchg
cmp
jne
fidivs
cmp
into
add
adc
int3
mov
leave
mov
xor
inc
shrb
repz
mov
xor
mov
jnp
iret
add
push
jnp
inc
inc
loop
and
push
cmp
ret
push
mov
aad
xor
aad
xor
inc
xchg
jp
push
out
cld
lock
mov
xchg
lret
mov
inc
and
and
lcall
and
inc
mov
dec
xchg
xor
pop
inc
cltd
ss
out
push
push
pop
out
rorl
sti
add
xchg
inc
sub
fisubrl
pop
xchg
sbbb
mov
add
cltd
xor
cmp
xchg
xchg
clc
and
lahf
cmp
push
sarb
mov
daa
fsub
imul
lods
dec
or
fnstcw
jo
pusha
unpckhps
sbb
dec
lcall
jmp
adc
arpl
jnp
loopne
mov
adc
cltd
push
xchg
call
fadd
pcmpgtd
addl
add
loope
mulb
xchg
adc
arpl
push
sbb
xor
xchg
in
mov
jbe
pop
xchg
sbb
out
in
or
sti
push
mull
imul
adc
sub
movsl
xorb
jo
mov
icebp
mov
inc
jno
inc
test
or
mov
scas
inc
xchg
loope
lret
fnsave
aaa
pushf
adc
mov
fisubrs
mov
mov
dec
pop
add
mov
sub
cltd
orb
xchg
icebp
pop
and
cmp
scas
out
add
clc
shll
pushf
jl
push
add
dec
cmpsl
pop
and
out
adc
leavew
xchg
mov
jns
sub
cwtl
adc
mov
mov
mov
mov
sub
inc
sub
mov
shlb
sbb
or
ds
adc
dec
pmaxub
pusha
xchg
jne
idivb
jns
mov
mov
adc
aad
pushf
out
push
dec
cmp
xor
mov
mov
aad
arpl
push
mov
and
fistpll
xor
jecxz
aam
sub
mov
sbb
out
xchg
fwait
js
call
xchg
mov
jge
mov
dec
jecxz
cmpsl
adc
out
adc
adc
test
ds
sub
mov
pop
xchg
loop
sbb
idivb
movsl
push
add
inc
sbb
pop
les
mov
mov
daa
cmp
adc
lds
mov
jle
or
sbb
subl
fsin
cmp
mov
test
clc
aaa
ret
jnp
les
xor
addr16
fbld
xchg
daa
push
ss
ja
jns
push
and
sub
cltd
push
ljmp
or
push
fstps
xor
xchg
xchg
mov
loope
sbb
loop
ss
jmp
cmp
or
test
add
sub
pop
pop
mov
clc
add
insb
dec
testb
dec
cmp
outsl
or
fs
and
sbb
push
mov
jnp
mov
repnz
mov
pushf
mov
dec
es
sbb
lahf
sbb
leave
js
push
xlat
ret
xor
inc
hlt
jno
lret
and
xchg
jno
jae
and
push
or
dec
data16
cmpsl
loope
mov
neg
test
xorl
scas
pop
jb
xor
or
xchg
sbb
leave
sub
mov
cmc
pop
lahf
into
rorb
fstpt
or
nop
pop
inc
out
test
jecxz
or
sub
jnp
fsub
push
std
sub
repnz
sub
ljmp
and
ss
mov
xor
push
xchg
lcall
jae
pushf
sbb
movsb
adc
mov
sbb
sbb
out
movsb
or
loop
shrb
fs
jns
sbb
xor
cmpsb
mov
insb
xor
popa
mov
aas
mov
jmp
sub
rclb
test
popa
in
sarb
lock
rcrl
ret
rcrl
jl
popa
out
les
or
nop
aaa
push
fmuls
mov
mov
mov
movaps
jne
fldt
mov
pop
std
imul
cmp
or
pusha
mulb
inc
test
std
std
inc
mov
mov
jns
rcrl
xor
dec
scas
mov
sub
stos
gs
sub
lods
sbb
adc
adc
rcll
mov
pop
push
sar
aas
mov
cmp
mov
mov
pop
pop
pop
aaa
mov
inc
pusha
jl
lret
and
push
aad
ljmp
mov
les
pop
sarl
int3
or
add
add
aad
and
inc
cltd
mov
add
pop
mov
push
mul
pop
push
push
cwtl
scas
hlt
ficoms
cmpsl
dec
mov
nop
clc
sbb
outsl
cmp
xlat
out
mov
sbb
and
out
mov
push
pop
and
stos
enter
push
mov
mov
adc
fisubs
inc
or
into
cmp
icebp
lret
daa
sbb
push
push
loope
and
repnz
adc
xchg
sub
loope
popf
jge
mov
push
cmp
in
pushf
inc
xchg
scas
inc
push
fisubl
lret
lea
in
popf
mov
aaa
stos
notb
pop
sub
stos
into
jg
mov
sub
push
jl
punpckldq
xor
mov
cli
and
ficompl
mov
cltd
mov
cmp
inc
push
lret
pop
xchg
dec
mov
dec
leave
cmp
pop
sti
jb
xor
push
mov
mov
push
notb
andl
daa
add
imul
sarb
orl
imul
cmc
pop
ljmp
fidivl
cmp
cmp
dec
rorl
pop
sbb
mov
sub
repnz
xchg
ret
mov
rcl
mov
outsb
outsl
and
sti
std
ficoml
pop
aaa
jmp
mov
add
ret
test
ret
mov
mov
cmc
scas
cmpl
mov
insl
sti
outsl
sbb
push
lock
outsl
stos
jae
jl
in
das
mov
data16
mov
int3
add
inc
pop
sbbl
lea
mov
add
lea
xor
xchg
pop
insw
test
loop
or
or
test
fstp
inc
add
sarb
mov
or
cmpsl
dec
divb
insb
jecxz
sub
pop
ret
cmp
mov
pop
mov
or
lret
adc
adc
divb
lret
xor
scas
adc
pop
or
dec
fstpl
adc
popa
pop
stos
cmp
or
pushf
fisubrs
leave
in
stc
cmp
repnz
cmp
sub
out
lock
mov
addb
jecxz
push
outsb
jecxz
bound
sbb
shlb
arpl
or
jb
dec
add
push
sbb
inc
inc
mov
cmpb
mov
cs
imul
lcall
xchg
adcl
adc
ljmp
xorl
lret
jl
pop
lcall
mov
inc
rorb
repnz
mov
adc
mov
ja
mov
push
inc
repz
movsl
repz
lods
inc
or
pop
stos
and
addr16
outsb
pop
cli
leave
jl
inc
dec
sub
push
out
push
stos
jg
jle
mov
ret
push
xor
fstp
out
mov
loopne
es
cld
lahf
into
je
lahf
fs
outsl
xlat
mov
jae
sbb
ret
sub
lret
in
lcall
outsl
daa
mov
in
pop
repz
sub
lea
pop
inc
push
jmp
into
adc
insl
imul
inc
rcl
movsb
popf
les
mov
in
in
in
not
test
jmp
into
push
ds
js
mov
cwtl
adc
inc
pop
lret
fiaddl
lods
repz
mov
insl
inc
add
adc
sub
icebp
add
push
fs
pop
add
test
popf
call
mov
dec
or
dec
adc
or
push
das
in
push
test
mov
ficoms
dec
jp
add
adc
popa
fldl
xchg
jne
cmp
fldpi
xor
push
mov
stc
adc
push
pop
adc
sub
and
fimuls
dec
adc
movsl
jno
out
testb
jmp
aam
mov
sub
push
sub
mov
popf
daa
jo
ljmp
push
jno
rorl
push
sbb
pop
stc
mov
or
jg
add
add
xlat
scas
fldt
and
sub
dec
aam
jecxz
stos
mov
imul
cmp
add
pop
pop
jbe
jno
jecxz
sbb
push
in
scas
cwtl
sub
xchg
aaa
push
addr16
aam
es
jecxz
xor
addb
jb
lock
inc
and
and
rclb
or
lea
jle
sub
dec
test
sbb
fdivrp
mov
mov
xchg
lea
xchg
test
shlb
pop
jae
add
sti
addr16
adc
insl
test
jnp
cmp
fwait
cmc
in
aas
pusha
sti
shrb
add
sub
cmpsb
lea
mov
sub
add
shrb
out
out
faddl
sbb
jbe
addr16
adc
lods
and
push
jle
dec
mov
ljmp
scas
xor
jns
movsl
jbe
loope
mov
adc
in
out
dec
stos
iret
loope
pop
cmc
sbb
addr16
daa
jp
and
outsl
std
jae,pt
pop
sbb
or
pop
lods
mov
test
sub
xchg
xor
test
loop
insl
std
pop
lds
filds
sub
popa
loopne
jmp
lds
movsb
add
mov
adc
std
int
mov
mov
ret
imul
xchg
mov
loop
subb
pop
rcl
testb
clc
mov
fwait
xor
lahf
enter
scas
push
xchg
leave
decl
std
fdivs
shlb
pop
xchg
mov
sbb
add
bound
aam
adc
enter
inc
lds
cwtl
imul
icebp
mov
sub
inc
fistpl
or
inc
shll
jge
mov
and
dec
fs
ffree
lea
sub
mov
jae
lods
cmp
jb
addr16
jno
add
mov
push
push
adc
mov
jae
cmp
leave
dec
jno
sbb
inc
xchg
lahf
gs
xchg
xchg
std
xor
mov
addb
add
and
cmp
mov
das
and
sub
inc
pop
jge
incl
bound
fwait
dec
cmpsl
pop
jns
xchg
push
mov
fildll
out
cwtl
mov
sub
insb
enter
adc
dec
out
repz
fldt
cwtl
add
rorb
sub
jge
dec
outsb
lea
cmp
inc
sub
sbb
mov
jb
xlat
test
jmp
or
movsl
inc
cwtl
mov
out
gs
dec
xor
jle
xchg
and
shl
sbb
repz
mov
shr
mov
dec
enter
xchg
push
inc
movsl
je
fstl
dec
add
aaa
cmp
jle
and
or
icebp
fldcw
sbb
cmpsl
push
xlat
pushf
fs
xchg
or
rcrl
jg
add
mov
in
mov
dec
cltd
rcrb
out
stos
int3
ljmp
jg
or
loope
jo
scas
negl
push
xchg
xor
bound
xchg
adc
icebp
data16
aaa
test
inc
sub
out
jmp
sbb
cmp
in
je
clc
sbb
popf
sub
pop
lods
pop
andb
lahf
mov
mov
sub
das
imul
xor
call
out
mov
mov
push
pop
or
inc
in
idivb
xor
dec
jnp
pusha
mov
push
adc
add
repz
sahf
cmpsb
pop
in
fmull
inc
mov
jp
and
dec
xchg
or
sub
rcrb
xchg
leave
jo
mov
mov
push
lds
jnp
sub
ljmp
aaa
hlt
xor
insl
cmp
or
xchg
out
lds
shlb
jno
sbb
jle
arpl
fs
mov
jb
fstl
xor
mov
and
add
cmp
test
testb
fs
in
or
gs
fildll
out
shlb
out
jnp
and
stos
imul
cmp
fiadds
cmp
stos
sub
push
je
rcrl
push
pushf
jne
cld
push
sarl
scas
fwait
test
inc
pop
cmpsl
js
sub
jne
int3
xchg
cmp
xchg
pop
xor
pop
mov
jl
cs
loopne
cmpl
cmc
push
mov
dec
mov
cmp
cmp
push
pop
push
mov
pop
into
cmp
popf
or
jle
adc
jmp
ficoms
out
cmp
aam
push
outsb
xchg
mov
mov
add
jns
aad
or
dec
pop
sbb
dec
nop
cmc
enter
lock
clc
bound
fnsave
or
and
push
lahf
cltd
outsb
into
sbb
and
jle
or
repz
mov
dec
cmp
cmp
cmpsb
lret
inc
cli
hlt
shlb
sbb
and
fcom
jle
gs
imul
mov
int3
add
lock
rcrb
cltd
loope
push
daa
xchg
hlt
add
push
int
fadd
mov
out
fwait
ret
test
pop
lea
es
call
jae
lods
push
sti
shrl
ljmp
inc
or
idivl
pusha
fcoml
les
and
scas
dec
daa
cwtl
fimuls
ja
test
enter
mov
subl
js
jbe
orl
mov
jb
pop
icebp
out
or
popf
cmp
out
adc
xor
jno
aas
pop
jb
divb
int3
sub
cltd
stos
sbb
pop
insb
push
in
imul
ss
rorb
inc
mov
add
outsb
sub
xchg
and
xor
xchg
insb
jg
scas
xor
loop
inc
fstl
sbbb
jbe
out
loopne
add
jp
test
add
push
jmp
jge
cltd
lods
aas
mov
adc
js
cmp
outsb
xchg
push
decl
sbb
mov
imul
mov
rcrl
lret
push
mov
pop
mov
lds
stc
enter
dec
testl
cmpsl
adc
bound
out
cmpsb
inc
xchg
xchg
push
repnz
add
addr16
fisubs
mov
jne
loopne
es
cmpsb
jb
dec
inc
mov
in
adc
cwtl
dec
push
int3
dec
dec
xchg
pop
rorl
mov
fldl
stos
divl
sarb
jae
adc
aas
popa
into
mov
shll
arpl
movsl
mov
hlt
adc
sahf
daa
ficompl
add
bound
cmp
mov
lahf
sahf
jns
es
pop
insb
fisubs
dec
xchg
mov
sbb
cmpsb
sar
rorl
gs
fiadds
cmp
push
pop
jnp
lret
sbb
addl
mov
loope
mov
adc
mov
push
pop
dec
lahf
andb
xchg
mov
mov
ret
sub
shll
bound
mov
push
sbb
out
push
pop
not
aam
popf
iret
or
dec
xor
insl
fdivrs
or
stc
and
sbbl
dec
sarb
fdivs
inc
mov
jmp
mov
cmp
lret
or
xlat
sub
xchg
sti
sbb
xor
xor
aad
ja
ffreep
cs
stos
push
cmp
loope
xchg
inc
das
mov
lret
fiaddl
cmp
adc
xchg
inc
mov
dec
into
cmp
cmp
out
mov
pop
and
negb
icebp
cltd
roll
rol
add
and
dec
push
cmpsb
addl
sub
xor
sti
test
xor
jmp
push
fidivl
and
cmp
add
pop
jp
mov
add
call
lahf
fnsave
lahf
dec
mov
inc
movsl
lahf
out
or
cmp
ret
ljmp
push
mov
and
aas
dec
cltd
jge
fwait
sbb
aam
dec
out
pop
sar
or
test
mov
lret
dec
sbb
lahf
or
dec
mov
sub
jmp
jle
cmp
ds
mov
xchg
adc
push
adc
ds
outsl
xor
test
test
out
adc
fisttpl
inc
jg
jns
mov
push
scas
test
add
repz
out
xor
dec
sub
pushf
insl
xchg
push
xor
jne
neg
mov
sbb
pop
lods
dec
add
not
cli
mov
push
mov
mov
push
push
lahf
xchg
mov
insl
std
gs
xchg
add
ja
pcmpeqb
mov
or
or
xchg
arpl
movsb
js
sarl
pop
push
fcmovb
xchg
push
adc
add
mov
mov
xor
add
sub
test
fdiv
leave
inc
jge
mov
jge
pop
sahf
add
ljmp
lea
mov
movq
enter
jne
cmp
jbe
cmpsl
out
das
or
out
pop
out
rorl
rclb
sbb
cld
clc
push
push
xchg
fsubr
test
js
cmc
shrb
fsubrl
rcl
sti
fcom
push
repnz
jp
mov
inc
and
shlb
sbbl
mov
scas
or
or
repz
cmovb
dec
repz
fsubrs
dec
fldt
xchg
mov
mov
andb
pop
xor
scas
mov
cmp
jg
fcomps
xor
push
pop
xor
loopne
jne
push
rorl
push
sbb
sbb
mov
adc
mov
push
cmp
es
xor
jnp
pop
inc
inc
adc
filds
ss
jno
repnz
rclb
outsl
or
xchg
add
jne
adc
jecxz
fists
mov
aaa
je
xor
stc
and
mov
lds
faddl
or
bound
jnp
pop
js
cs
adc
dec
pop
xor
loop
jl
pushf
pop
dec
mov
sbb
jle
xor
or
and
xor
ss
inc
mov
pop
aaa
push
sbb
jecxz
cmp
jmp
lcall
repnz
lods
xor
out
xchg
in
cmp
jmp
inc
cwtl
daa
mov
inc
insb
mov
xchg
mov
imul
xchg
add
jg
mov
in
mov
push
jno
jecxz
xchg
pop
xor
push
push
mov
mov
and
xorl
mov
int3
mov
push
xchg
mov
mov
adc
adc
push
mov
in
jo
dec
xor
cmp
sahf
jmp
cmpb
pop
pop
or
push
bound
sbb
aam
dec
cmp
enter
test
in
adc
rolb
xchg
or
notb
jecxz
cmpsb
movsb
nop
sarl
or
cmp
mov
mov
jne
and
insb
jns,pn
negb
xor
xchg
mov
xchg
xchg
rcr
pop
dec
push
adc
in
test
in
insb
and
add
subb
pop
lods
fisubrs
or
jb
adc
fisttps
into
outsl
in
inc
mov
seto
cmp
aad
add
xchg
sti
mov
fnstcw
sub
mov
cmc
pop
adcl
or
out
jle
adc
test
test
xchg
jns
pop
push
mov
inc
lds
jno
jnp
xchg
aas
xchg
js
pop
xchg
out
jbe
mov
test
push
cld
je
mov
adc
pushf
add
fnsave
add
sub
test
jp
scas
cmp
iret
je
ljmp
dec
inc
or
mov
jmp
lock
sub
jae
mov
push
dec
pop
lahf
repz
fstl
dec
fisttpll
addr16
mov
stc
jmp
adc
xor
or
out
xchg
insl
mov
nop
xchg
stos
addps
cli
jae
mov
mov
sub
mov
adc
das
xchg
xchg
sbb
cmp
sbb
pop
stos
mov
push
xchg
sbb
stos
push
aas
jle
sub
and
jecxz
mov
out
lret
mov
jmp
pop
jecxz
jns
and
bound
or
mov
popa
fildl
inc
xchg
jg
mov
mov
pop
scas
mov
imul
ljmp
into
mov
adc
jle
mov
xchg
jecxz
jg
js
add
mov
jmp
mov
aad
dec
mov
jmp
jl
test
int3
dec
iret
push
xor
rcrl
cli
std
test
dec
and
sub
mov
ret
sub
movsl
repnz
jo,pt
xor
mov
xor
add
add
call
clc
jbe
mov
pop
loope
mov
je
adc
xorl
aam
int
cmp
sahf
dec
xor
jnp
pop
xor
sbb
mov
push
aaa
mov
les
and
mov
push
arpl
mull
cmpl
jo
xor
nop
sub
jnp
ss
cmp
xchg
call
mov
daa
into
stos
cmp
pop
and
rcrl
push
xchg
xchg
jns
dec
addb
mov
je
testb
scas
sbb
cli
scas
sar
mov
fmul
pop
jno
push
mov
push
outsb
or
hlt
jb
xchg
sub
mov
fimull
dec
std
pop
mov
shll
hlt
mov
cmp
add
mov
pop
lds
gs
lods
pop
cmp
cmp
inc
mov
sbb
adcb
mov
push
imul
daa
fdivrl
cmpsl
es
lret
cs
jge
push
in
pop
negl
aad
pop
adc
cltd
mov
xchg
out
sarb
pop
stos
stos
xor
sub
bsr
cmpl
mov
mov
addr16
cld
mov
lret
movsl
and
and
dec
bound
sbb
pop
nop
mov
dec
cmp
adc
mov
test
push
cmp
and
xor
movsl
push
and
jnp
push
xchg
sbb
xchg
cltd
push
pop
inc
adc
mov
addr16
pop
fs
inc
imul
inc
xor
ret
add
leavew
xchg
jnp
mov
push
fs
push
out
pop
testb
es
loope
or
scas
shlb
push
xchg
jo
out
xorb
shlb
xor
cmp
leave
mov
cmpb
mov
add
mov
xor
pop
mov
sub
cmp
pop
je
jnp
ss
out
int3
idivl
stc
les
scas
jno
scas
jp
aam
push
and
ss
push
mov
or
iret
scas
and
push
daa
and
insb
xlat
loope
insb
adc
push
adc
std
cmpsb
pusha
ret
push
adc
xchg
push
xchg
sub
sahf
sub
mov
arpl
addr16
and
in
add
add
idivl
push
pop
jp
movsl
mov
icebp
lock
mov
loop
sbb
sti
mov
dec
int
or
mov
or
mov
and
and
or
xchg
xchg
ss
nop
gs
insl
movsb
xor
movaps
xor
insb
cltd
scas
or
push
pop
lahf
adc
pop
aam
imul
bswap
jno
repz
movsb
sbb
test
push
fidivl
enter
add
les
jge
push
in
pop
cmpsb
adc
imul
push
xchg
nop
arpl
pop
xchg
push
push
call
mov
negl
shl
xchg
xchg
or
xchg
test
dec
ret
xchg
inc
je
adc
in
pop
push
mov
out
stc
in
xlat
inc
in
jecxz
mov
push
mov
push
add
add
test
sti
mov
lock
xchg
imul
out
jbe
in
scas
jmp
leave
sbb
adc
xor
sbb
xchg
repnz
out
sbb
dec
stos
sbb
dec
mov
dec
xchg
mov
mov
inc
xchg
rorb
push
cmp
cmc
adc
scas
in
adcl
dec
jmp
mov
mov
cmp
jle
jb
mov
and
outsl
cs
cmp
inc
das
flds
out
push
call
imul
jns
dec
imul
inc
mov
scas
daa
push
cmp
jl
mov
int3
xchg
out
enter
jns
push
mov
xchg
sub
jae
cld
add
les
dec
or
loopne
sub
and
push
pushf
push
aaa
orl
jge
call
cmp
dec
pushf
mov
lods
sti
dec
dec
arpl
stos
lds
push
add
sub
dec
shl
jb
sub
aam
cmp
in
lret
xor
add
imul
out
rorb
pop
insl
adc
jne
scas
push
mov
pusha
dec
cmp
sub
inc
and
add
jb
rcrb
imul
cltd
mov
jae
aas
pop
pop
mov
dec
jg
sahf
inc
or
fistpll
scas
push
sub
push
dec
sub
jg
adc
negl
aam
and
or
insl
adc
pop
stos
scas
push
std
pushf
add
aam
cmp
and
jnp
dec
je
daa
out
push
insb
jmp
push
push
repnz
push
jae
jecxz
mov
flds
sti
pop
addl
xor
ds
fisttps
sub
jmp
sbb
sbb
fwait
test
sub
push
lret
movsb
xor
mov
cmp
xchg
in
cmc
sbb
mov
xchg
stos
jns
push
imul
lsl
push
push
in
sub
loop
popa
fs
jp
inc
repz
push
insb
sub
jae
push
or
icebp
ljmp
subl
addr16
and
mov
es
adc
pop
or
jnp
insb
std
imul
je
or
or
cmp
mov
popa
adc
inc
sub
sub
xchg
push
in
sarl
in
fstpl
nop
insl
or
iret
pop
or
fldlg2
vpshufd
cmpsl
lods
sbb
add
mov
adc
iret
scas
add
jnp
pusha
inc
mov
aad
addr16
push
popa
push
xor
aam
or
gs
in
or
test
cmpsb
lahf
ret
les
inc
movsl
or
dec
adc
mov
push
jge
push
push
stc
sti
mov
lahf
sub
mov
in
add
popa
jp
sub
or
ret
cli
pop
mov
mov
jo
push
mov
stc
movsl
cwtl
iret
jae
push
out
sub
mov
lret
je
jg
insb
jl
fs
repnz
outsl
testb
js
data16
scas
stos
subl
shl
cmp
dec
jb
insl
jne
aaa
mov
aam
fidivrl
fsubl
gs
push
push
inc
movsb
mov
cmp
das
add
addr16
pop
icebp
adc
daa
testl
sub
lds
das
shll
imul
sub
stos
mov
int3
or
inc
xchg
hlt
dec
add
dec
movsl
xchg
iret
mov
inc
int
push
push
add
cmc
cwtl
cmp
add
insb
enter
paddq
cli
add
les
push
leave
jge
std
jle
sahf
add
push
dec
data16
adc
jne
inc
out
test
push
lret
push
outsb
lods
add
mov
sbb
adc
lock
lcall
test
cwtl
pop
add
cmp
mov
lods
fidivrs
lea
jle
cmpsl
and
aam
and
xchg
lcall
xchg
leave
loope
pushf
fs
cmpsl
adc
mov
and
push
or
push
das
imul
les
pop
outsl
outsl
add
cmp
clc
mov
dec
add
shl
push
dec
inc
stos
fidivrs
sbb
lods
xor
pop
inc
imul
enter
sbbl
pushf
dec
push
push
rclb
xchg
or
ds
xchg
insl
shlb
ret
ss
les
adc
push
dec
js
shrl
mov
fisttps
sbb
stos
pop
out
cmpsb
insl
cld
xchg
cmp
mov
adc
pop
mov
add
adc
imul
cmp
cmp
stc
mov
pop
cmc
xchg
adc
repnz
xor
xlat
xchg
dec
jle
js
mov
movsl
and
in
xor
push
movsl
inc
ss
cmp
clc
fildll
lock
sub
or
jo
sub
push
aad
aad
aad
pop
cmp
xlat
lcall
cmpsl
cmc
pop
cmovnp
lock
jecxz
inc
fcmove
jl
jae
sahf
sbb
gs
sbb
or
insl
adc
jp
inc
xor
arpl
pop
xchg
dec
aam
imul
dec
and
add
push
test
fs
inc
mov
mov
je
adc
jae
dec
ret
in
in
jno
jl
or
push
divl
adc
or
mov
sti
out
and
sbb
andb
sbb
scas
js
sbb
xor
in
adcb
jnp
push
push
out
js
jb
out
jl
pop
pop
adc
push
push
popa
mov
lock
aad
add
or
mov
daa
mov
ds
jo
cmp
cmp
sub
adc
ja
out
add
ja
pop
dec
push
push
scas
xchg
cld
push
pop
out
pop
cmp
mov
std
mov
repz
stc
pop
and
je
cmp
inc
sbb
in
mov
outsb
xchg
sub
test
leave
scas
and
sub
or
pop
imulb
scas
inc
jl
mov
mov
clc
ss
loopne
mov
not
sub
inc
push
fwait
lret
xor
mov
cmp
pop
icebp
dec
out
ret
mov
inc
mov
mov
and
rorl
mov
mov
pusha
leave
nop
loopne
ds
mov
mov
sti
sbb
out
mov
xchg
add
mov
cmp
insl
sbb
and
pusha
cmp
jo
mov
sbb
das
into
test
mov
cltd
push
mov
rcr
dec
add
lods
fimuls
repnz
sbb
push
aas
movsb
jmp
test
pushf
xchg
jno
push
xor
or
ja
lods
xchg
out
cmpl
gs
sub
dec
fisubrl
jge,pt
inc
sbb
outsb
add
jne
loopne
fmull
inc
dec
imul
xchg
flds
dec
sahf
iret
insb
mov
xor
add
sbb
lock
or
cmp
lret
stos
xchg
sbb
jg
test
faddl
fcompl
sarl
inc
es
and
loopne
sub
divl
push
in
stc
and
mov
mov
cmp
pop
fcompl
mov
mov
es
js
imul
loopne
lahf
push
fidivrs
pop
jnp
adc
adc
leave
mov
push
adc
push
std
pop
pop
dec
sbb
and
dec
aaa
lsl
std
rol
pop
jg
sbb
xchg
movsl
adc
imul
dec
int3
push
and
fxch
and
jne
inc
mov
mov
mov
movsl
lds
js
and
in
in
push
jp
insb
test
scas
add
cli
cli
insb
js
push
push
cwtl
lock
and
js
mov
cmp
mov
push
or
call
inc
movsl
dec
jecxz
out
je
rcrl
insl
xor
jb
jmp
jb
aam
lods
jo
jbe
jb
add
shlb
aad
lahf
mov
dec
jb
loope
addb
orl
rep
scas
mov
idivb
and
push
lock
imul
inc
test
fstl
ss
dec
jl
xchg
push
aad
movsb
cmp
inc
notl
fimuls
pop
icebp
mov
push
nop
testb
or
lret
jae
xchg
add
les
mov
adc
pop
add
jbe
pop
fsubrl
dec
aas
sbb
push
int3
cld
adc
or
push
divl
pop
rcl
sbb
xchg
andb
mov
fsubl
mov
mov
sbb
fwait
sbb
negb
xor
jo
cmp
jle
push
rcll
mov
rorb
pop
add
test
cs
jbe
cmp
mov
pusha
imul
test
push
ss
lods
rcl
xchg
pop
push
xchg
push
sub
mov
rolb
jecxz
in
mov
fwait
aad
ret
cmp
inc
pop
or
cmpsl
mov
test
popa
gs
pop
pusha
cmp
cmpsl
adc
movsl
gs
push
sub
pop
outsb
aaa
and
fs
xchg
out
cwtl
test
adc
cmp
dec
sub
ja
scas
ds
dec
int3
sub
movsl
ficoms
roll
test
xor
ds
lahf
fistl
test
je
adc
clc
insb
add
std
adc
and
lcall
mov
add
xchg
stos
cltd
loope
mov
xlat
dec
lret
repnz
jbe
xor
sub
push
xor
pop
inc
andb
add
das
jl
xor
arpl
pop
mov
cmpsb
adc
add
add
mov
stos
sub
mov
insl
sti
cmp
addb
aaa
inc
iret
mov
in
and
cwtl
imul
lock
dec
loopne
mov
mov
loope
lea
aaa
xor
imul
xchg
xchg
adc
and
push
push
lds
or
test
inc
lods
xor
inc
mov
add
xchg
fnstenv
fmuls
sub
out
int
loop
nop
bound
mov
add
cmpsl
ja
xor
xor
xor
sub
xor
stc
mov
hlt
sbb
mov
lods
cmp
mov
mov
pop
into
jne
mov
das
popf
adc
mov
fwait
xor
lcall
mov
pusha
cmp
leave
mov
mov
jecxz
add
push
adc
sub
insb
xor
dec
hlt
dec
sbb
addl
insb
xchg
jl
sarb
xchg
mov
popa
into
jae
sub
jge
or
aam
ficompl
test
jg
add
jae
sbb
pop
mov
lods
mov
xor
clc
cmp
push
loopne
outsl
aam
fcom
das
push
fiadds
dec
xor
in
and
mov
push
xor
arpl
xchg
cmp
inc
fisttps
add
fldcw
adc
cmp
std
test
addb
xorl
xchg
cmp
push
cmp
loope
cmpb
jns
fisubrl
sbb
in
pusha
mov
adc
fst
cmpsb
gs
push
jae
ljmp
fiaddl
jle
clc
jmp
pop
sarl
xchg
in
sub
into
jb
call
pop
das
sub
jne
nop
jo
xchg
push
movsl
mov
clc
pushf
or
int
mov
mov
daa
inc
xchg
shr
scas
sub
outsb
daa
jl
add
dec
in
jb
imul
mov
cltd
popf
and
fld
cwtl
mov
xor
mov
sub
lahf
in
or
cmc
fs
xor
loope
jg
or
xchg
push
cmp
mov
pop
dec
sti
mov
movsl
jle
add
pop
rorl
je
jns
adcl
inc
mov
pop
xchg
xchg
shll
imul
in
cmp
rolb
int
or
push
test
dec
sbbb
lods
pop
aas
fisubs
dec
decb
hlt
lcall
incl
or
or
sbb
loopne
mov
fldz
loopne
stos
rorb
xchg
xor
xorl
fisttpll
gs
sbb
divl
ss
hlt
pop
inc
xchg
rcll
inc
ss
mov
mov
adc
xchg
jno
pop
add
lods
in
in
cmc
jno
sbb
adc
xchg
dec
and
ret
add
mov
dec
sbbl
fmuls
icebp
xor
in
aad
jle
movsl
fucomi
orl
push
adc
push
bnd
enter
in
mov
mov
add
add
scas
xchg
xchg
adc
push
mov
mov
mov
rorb
mov
jecxz
adc
sub
fildl
sbb
out
lock
inc
call
sbb
cmpb
and
xlat
push
adc
pop
jbe
xor
sti
push
fists
jae
adc
into
push
ja
pop
insb
cmp
mov
movsl
addr16
jl
loope
leave
popf
gs
mov
inc
rol
jae
add
pop
imul
cmpb
lds
vsubss
es
cmp
nop
or
pop
lods
movsb
add
and
jp
outsl
cmpsb
hlt
cmp
jb
pop
mov
mov
inc
sbb
mov
out
sub
call
cmp
mov
shlb
xlat
ret
and
xor
nop
jae
add
pop
xor
cmp
into
jnp
mov
mov
repz
ficompl
pop
pop
leave
dec
sbb
adc
scas
add
inc
pusha
pop
dec
out
sub
cltd
inc
xchg
iret
sahf
cwtl
loop
inc
ds
add
nop
xor
and
and
cmp
cmp
mov
inc
int3
and
mov
or
and
int3
cli
int
ret
fwait
xor
sti
mov
inc
cmove
outsb
pop
adc
aam
scas
cli
ja
test
push
mov
sbb
dec
or
sbb
or
dec
xor
xchg
call
jmp
std
push
aam
rolb
pop
icebp
dec
cli
scas
push
rorb
xor
sti
stc
cmp
inc
lea
hlt
shrb
loop
jns
jb
pop
pusha
into
fldcw
stos
mov
mov
pop
std
addb
pop
stc
sbbl
dec
ljmp
xchg
pop
add
je
rclb
dec
mov
rorl
pushf
fsubrl
pop
pushl
popa
xor
inc
sub
shl
mov
popa
aaa
inc
cmc
imul
mov
rcll
out
mov
sub
icebp
sbb
push
ds
loopne
les
push
in
lock
in
gs
nop
cwtl
aas
mov
insl
pop
lock
gs
clc
imul
add
mov
push
cs
or
pop
arpl
pop
cltd
fdivr
addr16
aam
adc
adc
and
in
push
push
jecxz
mov
jae
sbb
fwait
and
push
jge
jp
jnp
cmp
clc
std
imul
or
mov
sbb
ret
push
iret
sub
aam
pushf
gs
jecxz
pop
cld
lret
shrb
arpl
push
dec
rcl
xor
push
xchg
xor
xor
imul
imulb
sbb
push
and
in
fwait
loopne
test
sbb
xor
in
pop
mov
push
ja
push
sub
int
movsb
popa
mov
push
shl
add
gs
lcall
dec
adc
or
cmc
cmp
xchg
dec
sbb
outsb
push
xor
fnstcw
loopne
inc
xchg
jecxz
jno
fmull
stc
movsb
std
lret
cmc
cmp
iret
mov
add
jbe
pop
cmp
or
daa
pop
icebp
mov
stc
aas
popf
jb
mov
lret
push
jl
ret
neg
adc
negl
js
or
cmp
fstpl
test
fmull
ficoms
imul
mov
push
test
mov
dec
test
cwtl
dec
std
mov
mov
inc
cmp
aam
mov
adc
stc
clc
imul
in
xchg
lahf
subb
iret
sbb
jno
jnp
jecxz
es
sbbl
fs
fwait
cmp
lcall
cmp
push
cmpsl
mov
xchg
sti
dec
flds
aad
mov
test
aad
push
movsl
add
sbb
shrb
fstps
xchg
adc
pop
decb
mov
imul
insb
rcrb
repz
shlb
dec
xor
jecxz
add
mov
mov
add
pop
xor
aam
sar
imul
or
inc
loop
jp
xor
inc
aas
dec
mov
test
ds
xchg
pop
jl
mov
pop
add
mov
lock
push
test
mov
lds
clc
jbe
sahf
in
lret
sub
and
into
and
xor
mov
push
fnsave
out
in
ret
push
mov
xchg
insl
je
ljmp
lret
sub
daa
jno
push
adc
cmp
adc
sub
ja
loopne
pusha
inc
xor
in
in
mov
or
mov
cmp
push
nop
int
mov
xchg
sbb
adc
sbb
cmpsl
jb
sbb
cmp
mov
push
lret
push
repz
mov
outsl
and
subl
and
insb
mov
inc
mov
fbstp
in
sub
jl
cmp
cld
das
dec
test
dec
scas
or
and
clc
shll
sbbb
cmp
xorl
pop
cmp
inc
cmp
xchg
daa
push
in
dec
fdivr
dec
cmc
cmp
jmp
lret
jno
cmp
stos
movsb
shl
push
dec
iret
jo
mov
js
ljmp
jno
mov
and
and
cmp
mov
and
lea
roll
mov
mov
rcrl
pop
gs
mov
mov
and
mov
cmp
jb
sub
das
push
cmp
adc
inc
xchg
imul
adc
call
or
dec
ror
pop
insl
jb
nop
xchg
ret
loope
pop
or
movsl
sub
lret
mov
iret
mov
cmp
movzwl
fadds
andl
push
pop
addr16
sub
inc
aas
mov
rolb
push
and
test
aaa
outsl
loopne
xor
push
mov
mov
xchg
lds
sbb
enter
mul
inc
push
jo
sbb
out
mov
xchg
mov
mov
in
movsb
aas
sbb
test
sbb
gs
xchg
inc
xor
inc
lcall
call
fadd
outsb
out
jmp
lds
incb
mov
mov
pop
std
sahf
scas
lahf
in
push
jp
mov
stos
sbb
es
loope
leave
mov
dec
sbb
mov
mov
loope
test
mov
fs
push
and
arpl
out
cmpsb
loope
iret
add
sub
fcomps
dec
sar
rcll
jle,pt
jo
pop
lahf
jo
push
insb
call
push
push
jge
mov
shl
fwait
addr16
jne
jl
xchg
lea
rorb
sbb
sub
xor
movl
push
cmc
ss
jo
lods
cmp
jo
out
icebp
push
jmp
xchg
cmp
mov
pop
out
push
std
lret
cmp
loop
add
je
aaa
mov
std
mov
call
sub
cmp
and
fmull
add
sbb
stos
inc
lret
ljmp
jl
in
cwtl
nop
cmc
xchg
cmp
and
push
push
jno
mov
fldt
imul
jecxz
rcrb
pop
inc
sub
pop
add
jmp
in
orb
mov
pop
fstps
dec
sub
pop
dec
cmpsb
mov
jge
pop
les
movsl
jb
scas
loopne
vpunpcklbw
sub
or
cmp
mov
in
test
sbb
or
inc
loop
adc
out
insb
pusha
jle
fnsave
push
mov
sub
int3
into
mov
out
cmp
aaa
lds
mov
sbb
mov
ja
inc
shl
add
pop
jnp
pop
and
fnstenv
jmp
pop
cmp
lret
or
jbe
clc
loope
cwtl
movsl
xchg
mov
xchg
out
repz
das
jnp
and
movsl
sahf
jb
xchg
and
mov
add
data16
sub
mov
loope
bound
mov
mov
xchg
clc
aaa
sarb
or
fisubl
mov
lds
fcoms
mov
cmp
leave
push
ja
fcoms
mov
sbb
pop
test
je
lret
mov
mov
daa
insl
outsl
and
inc
fistl
pop
repnz
jno
push
bound
or
sti
sbb
jb
add
inc
push
cmp
add
shll
int
push
inc
pop
dec
sub
push
cmp
dec
in
or
fldl
cmpsl
cmp
fidivrs
inc
mov
ja
dec
daa
jge
xchg
repz
insb
cmp
pushf
push
add
ret
js
shrb
jp
ss
ljmp
rcrb
mov
jns
pop
dec
in
dec
adc
push
xor
jbe
inc
dec
mov
arpl
repz
pop
stc
mov
imul
idivb
pop
adc
pop
fwait
mov
fidivrl
dec
arpl
sbb
jo
and
sbb
sub
leave
shlb
lret
sub
jg
dec
xchg
std
fcoml
dec
sbb
mov
out
popf
paddsb
jle
cmp
in
lods
pop
xchg
cmp
and
js
imul
inc
xchg
test
push
lock
in
jno
pop
push
jl
das
cmp
cmp
insl
jge
js
and
inc
pop
push
das
pop
mov
gs
xor
popf
pop
push
rclb
lret
dec
inc
inc
int
shr
mov
cmpb
pusha
fadds
xor
jo
movsb
xor
jle
ljmp
mov
aam
jg
mov
push
out
rorl
repnz
adcb
dec
popa
pop
in
fldt
pop
add
call
or
cld
jl
adc
xor
rcrl
lret
cmp
lahf
xor
add
out
xor
jle
dec
imul
fists
jmp
lods
and
cmp
out
cmp
sub
pop
std
fimuls
add
rcrb
xor
inc
fistps
fildll
mov
int
cmp
jg
adc
adc
outsl
aad
repz
in
lock
mov
mov
push
push
inc
push
ficoms
insb
hlt
andl
push
movsb
cmc
insb
push
sub
push
in
cs
jl
aas
and
or
ss
jno
nop
inc
mov
pop
js
push
bound
andps
mov
fists
xor
sahf
inc
push
add
cmp
loop
les
leave
xor
push
test
pop
push
les
movsl
add
xchg
mov
xchg
pop
fbstp
pop
fldcw
jle
sub
ret
std
mov
mov
mov
inc
add
jno
mov
rcr
jmp
les
xor
lea
iret
mov
loopne
sub
adc
cltd
sahf
dec
cmpsb
clc
adc
xor
rolb
outsl
xchg
rol
mov
popa
int
mov
pop
out
push
out
sahf
cmpsl
imul
or
cltd
fmull
aad
dec
mov
push
test
aad
lret
pop
xor
scas
cmp
push
pop
xchg
cmc
aad
fdivr
xchg
sbb
mov
fcmovnbe
cmpsb
or
mov
cld
mov
adc
sbb
call
push
ret
enter
bound
mov
mov
inc
fisttpll
cmp
sub
inc
add
lods
sahf
sub
xchg
jo
lods
mov
xor
sbb
push
xchg
stos
jmp
sub
imul
inc
push
and
dec
addr16
test
push
xor
sbb
movsb
add
cwtl
insb
movsb
out
dec
and
add
dec
and
sti
gs
scas
pop
ret
sub
lahf
mov
adc
test
jne
adc
or
stos
inc
shlb
imul
daa
ret
jnp
jmp
movsb
movups
or
jl
mov
out
xor
mov
test
in
loope
test
mov
fisubrs
pop
cmp
lcall
stos
ss
add
mov
jg
mov
test
rcll
and
push
mov
ljmp
rcl
inc
repnz
push
push
iret
ret
frstor
inc
mov
sub
jb
cs
in
pop
jp
je
lock
add
and
sub
dec
xchg
jge
and
in
leave
adc
push
pop
ljmp
inc
jbe
shll
movsl
outsl
stos
mov
dec
add
mov
in
mov
or
enter
cmc
nop
mov
or
imul
jmp
cwtl
and
dec
pop
inc
cwtl
xorb
mov
mov
repz
aas
sbb
inc
cmp
decl
mov
aad
inc
loope
ljmp
lahf
jmp
arpl
pop
or
test
sbb
pusha
jns
push
movsl
push
mov
divb
inc
cmp
es
int3
lea
aas
mov
ret
push
rorl
popa
loope
cli
cs
mov
fadd
or
cwtl
fwait
call
xchg
xchg
cmp
fisttps
addr16
jmp
test
bound
out
enter
shll
pushf
mov
sbb
or
fisubs
out
out
in
and
push
cmp
or
call
or
sbb
popa
pop
pusha
inc
scas
int
mov
and
pop
fs
xor
adc
xchg
testb
sbb
jae
mov
pop
adc
xchg
lahf
mov
cmc
fnstcw
xchg
fwait
std
or
lcall
enter
xor
or
mov
or
push
into
mov
je
push
add
js
repnz
sub
ljmp
outsl
mov
hlt
clc
pop
xchg
movsb
push
int
out
pop
mov
lods
or
cmpl
mov
dec
cmp
sbb
dec
xchg
sbb
mov
popa
test
mov
nop
movsl
xor
jns
cmpsl
push
aaa
dec
cmp
out
or
mov
mov
cmp
cmc
arpl
and
jae
out
out
int3
sbb
daa
push
pop
xchg
cmp
mov
lret
xor
loop
xchg
mov
cmc
or
cmp
mov
sti
stc
cmp
jmp
adc
aam
jbe
inc
inc
std
inc
mov
mov
in
sub
aam
jcxz
sub
cwtl
jne
sub
gs
push
in
mov
sti
pop
cltd
mov
lcall
push
cmp
inc
test
leave
fsubl
in
jo
add
mov
dec
nop
ret
jbe
mov
lahf
imul
cmp
push
jbe
sub
xchg
xor
xchg
cmp
adc
mov
pusha
enter
inc
pop
fdivrs
xchg
dec
shrl
mov
sbb
fs
or
inc
js
ficomps
xchg
cmpsl
call
ljmp
jae
dec
xor
push
aad
dec
incl
dec
out
sahf
dec
dec
clc
inc
jnp
gs
popa
sarl
rcrl
add
sbb
pop
repz
cmp
sub
sahf
xor
sub
movsl
jecxz
pop
jmp
fstps
lret
jge
mov
push
add
jmp
mov
sbb
lods
jle
sub
sbb
adc
mov
es
push
ds
icebp
sub
xchg
scas
pushf
jno
nop
aas
in
add
fsubrs
sub
cmp
mov
sti
pop
call
and
xchg
xor
loope
xchg
add
fisubs
jb
adc
push
adcb
mov
pusha
push
jbe
mov
jg
dec
jl
lcall
mov
insb
fdiv
jecxz
loopne
fists
sbb
insl
js
xor
repnz
out
push
in
jns
shll
sub
push
jp
lret
out
mov
xchg
jnp
cmp
in
sbb
cmp
dec
xlat
push
adc
xor
aas
fstl
cwtd
mov
movsb
mov
lock
sub
inc
add
lods
push
test
cmc
add
repnz
enter
fstpt
hlt
sbb
imul
out
outsb
and
cli
pop
mov
push
out
jne
bound
sti
xor
ja
and
sbb
in
xchg
dec
mov
loopne
popf
push
pop
mov
dec
and
xchg
mov
mov
xchg
lods
sbb
aas
shr
cmc
push
or
xor
mov
popa
hlt
rolb
call
icebp
rclb
xor
out
call
stc
decl
cmp
sbb
adc
dec
mov
push
push
sub
fimuls
sbb
cmp
xor
push
xor
lock
outsb
out
mov
in
in
bound
cmp
jecxz
mov
mov
shr
cltd
ret
pop
cwtl
pop
push
xchg
jecxz
push
lods
mov
jne
rcrb
call
test
add
addl
mov
mov
int3
cmp
repz
cmp
inc
clc
push
dec
xchg
sbb
push
ds
and
mov
outsl
test
xor
aas
cmpsb
cli
adc
pusha
movsl
in
xor
push
push
add
enter
jmp
and
inc
insb
push
repnz
adc
lret
cld
inc
cmp
adc
and
push
jo
xlat
idivl
mov
add
mov
subb
jl
stos
fs
gs
lret
and
rolb
paddsw
xchg
ds
mov
dec
data16
mov
cli
shrl
mov
pop
test
cli
xchg
add
pop
call
jge
stos
or
xchg
icebp
mov
push
mov
cmp
fwait
dec
dec
jnp
rol
cmp
pop
ficompl
dec
xchg
pop
movsb
js
push
sarb
mov
cli
jge
cmp
fnstenv
hlt
cs
xor
cmp
int
int3
cmp
dec
cld
iret
push
cmp
sahf
cli
push
pop
addr16
inc
xchg
cmp
xor
or
in
sbb
xor
loopne
jb
pop
jns
es
shll
clc
fdivl
insb
push
std
jmp
mov
daa
lahf
enter
mov
pop
call
adcl
cmp
and
cmp
call
sbb
add
mov
and
xchg
jmp
or
dec
cmpsb
push
mov
rcr
push
push
dec
int3
mov
pop
dec
cmpsb
xor
or
hlt
sbb
inc
pop
fidivrl
cli
lods
adc
xchg
lods
ljmp
rol
inc
jmp
bound
mov
lods
sub
aaa
stos
pop
js
or
xchg
cmp
es
jmp
mov
push
fstpl
xlat
idiv
push
xor
sbb
movsb
xor
scas
sbb
mov
dec
mov
daa
mov
push
push
xchg
mov
mov
repz
mov
int3
inc
into
push
pushf
inc
insb
mov
jp
cmp
ror
aas
shll
mov
xor
loope
in
lea
and
dec
pushf
cmp
int3
sub
sarb
inc
aad
fisttpll
imul
popa
or
scas
iret
inc
mov
cmp
sub
mov
or
data16
aaa
adc
jne
cmp
scas
scas
add
dec
jns
test
pusha
iret
pop
dec
push
or
push
sbb
shll
wbinvd
pop
dec
das
outsl
sti
inc
out
in
xorl
push
add
fs
push
scas
mov
imul
imul
push
call
pushf
sub
out
and
cmp
cmp
mov
push
cltd
mov
ja
mov
jecxz
add
sub
daa
rclb
cmc
xchg
cmp
je
mov
es
sub
and
jne
pop
fcmovbe
int3
mov
xor
sub
xchg
lret
subb
push
movsb
push
pop
cli
lds
rorb
or
xchg
mov
sub
pusha
add
mov
pusha
inc
cmp
adc
mov
lods
sub
nopl
xlat
add
int3
dec
xchg
sub
dec
or
add
xor
mov
mov
in
jo
and
inc
aaa
add
cmpsb
arpl
jmp
inc
dec
pop
mov
xchg
lret
xor
push
cmp
lea
jl
cwtl
mov
xor
addr16
orb
push
in
in
pushf
push
inc
jb
or
or
je
shll
sbb
add
or
push
pop
stos
sti
add
xchg
mov
xor
rol
arpl
push
adc
adc
push
imul
sti
sub
inc
int
int
hlt
in
jnp
leave
test
sub
cmp
dec
push
mov
test
ss
xchg
inc
fldl2e
xchg
push
mov
imul
loop
pop
shrl
jns
sub
jl
xchg
push
shrb
clc
cltd
enter
arpl
ja
xchg
inc
push
negb
out
lock
lret
insl
cmp
mov
mov
arpl
aad
ljmp
xor
xchg
jno
xchg
lret
cmp
pop
mov
cmp
shll
aad
in
xor
inc
jnp
sub
xlat
mov
shll
outsb
aad
push
call
xor
enter
adc
test
pop
std
add
sub
gs
test
sub
loope
add
mov
lcall
int
test
or
and
aaa
iret
popf
pushf
xor
jecxz
ja
inc
out
jne
mov
cwtl
fwait
stos
add
fldcw
xchg
mov
lds
icebp
cmp
push
push
cli
shll
xchg
clc
cmp
cs
fdivrl
test
add
outsl
and
mov
xchg
mulb
imul
cmp
sub
fimull
sub
push
push
push
jp
movsl
sarl
jo
insb
pop
rol
sub
xchg
out
lds
cmp
divl
pop
pop
jp
fsubrs
inc
and
inc
ret
fsubr
sub
rol
mov
mov
mov
jo
pop
xchg
sbb
lea
fwait
jp
cmp
jo
fs
stc
insb
sbb
dec
loop
jae
test
dec
das
fmul
xchg
mov
xor
dec
sbb
sahf
js
lock
inc
fiaddl
jae
push
rorb
cmpsl
repnz
and
sbb
inc
mov
and
in
jne
xchg
jnp
push
mov
cmp
fcomps
jns
fdiv
xor
dec
lods
mov
hlt
scas
std
xchg
sbb
and
pop
lods
inc
rcl
iret
mov
push
jg
xor
js
fdivrs
pop
mov
pop
imul
jbe
jne
sbb
inc
jl
jge
xlat
insb
pop
outsb
jg
inc
and
jecxz
mov
in
fwait
pushf
daa
aas
jne
outsb
cmpsb
jle
bound
pop
xchg
imul
adc
and
and
dec
or
push
mov
mov
cmp
mov
lret
sti
pop
or
leave
repnz
fwait
aaa
jns
ds
rcrb
fiadds
xorl
adc
enter
enter
pop
and
inc
lds
mov
jns
test
pop
sti
mov
cmc
js
jae
mov
hlt
sub
mov
push
jmp
daa
mov
sahf
sub
push
xor
inc
lret
xor
mov
in
xlat
sbb
rcl
add
test
rclb
mov
sub
lods
pop
loope
sahf
push
pop
imul
test
xchg
rol
dec
mov
sub
daa
ljmp
sbb
test
mov
nop
ret
ret
sbb
ret
inc
sub
pop
cli
adc
popa
aad
mov
out
data16
xchg
ret
rorl
incl
mov
shll
cld
fdivr
shll
mov
aam
pop
gs
pop
mov
and
mov
cwtl
mov
jo
adc
dec
sti
jns
or
sbb
or
dec
mov
in
adc
icebp
lahf
test
call
xchg
faddp
mov
lret
std
clc
aam
repnz
aad
insb
mov
sub
inc
pop
cmp
addl
data16
or
nop
cmp
inc
scas
jns
gs
test
pop
nop
mov
loope
test
in
aaa
pop
mov
sub
loope
loopne
xchg
test
shll
sub
loope
push
insl
sbb
or
mov
popf
jmp
js
fsubl
aad
adc
std
mov
dec
mov
inc
decl
add
cmp
and
insb
jbe
stc
adc
adc
or
mov
stos
daa
or
lea
sti
sbb
outsl
arpl
mov
inc
add
inc
out
pop
stc
loopne
test
and
fisttps
jmp
sbb
or
add
arpl
outsb
insl
or
jg
and
lea
push
sub
fs
int3
push
jecxz
sbb
lahf
movl
lea
loop
lahf
rorl
mov
pushf
and
xchg
loop
ds
lds
jmp
pop
push
mov
sub
cs
inc
adc
jle
mov
dec
movsb
into
or
inc
and
xchg
stc
test
add
jge
iret
mov
push
dec
pop
dec
sbb
sbb
outsl
sarb
xlat
push
dec
mov
cltd
inc
jo
push
mov
call
sbb
not
add
ss
dec
jle
por
mov
repz
rorl
dec
add
pop
pop
fsts
xchg
in
xchg
cmp
mov
cmp
in
fmul
dec
pop
shlb
leave
fcoml
push
and
mov
loope
or
dec
stc
add
rorl
jmp
xor
test
jge
fwait
jbe
sbb
out
inc
or
or
xchg
out
dec
and
lds
mov
pop
stos
fmull
cmp
ljmp
xchg
sub
cmp
vunpckhps
adc
imul
jo
pop
sub
xchg
stc
cmc
or
fnstcw
leave
pop
js
popf
jo
sub
je
xchg
bound
pop
mov
xor
leave
imul
push
popf
lret
scas
gs
cs
pushf
int
push
rcrb
mov
test
or
jmp
pop
cltd
movb
xchg
and
jae
leave
hlt
jge
div
add
outsl
mov
lcall
adc
xor
cmp
push
push
jmp
lds
lcall
jmp
sub
shll
jg
push
mov
push
dec
or
pushf
or
mov
mov
lcall
out
insl
into
scas
shl
bound
ss
jae
stos
pop
ret
js
xor
stos
stc
push
or
sub
in
das
ror
loopne
leave
cmp
pop
add
mov
jg
insb
out
lret
push
cmpsl
scas
shrl
imul
sbb
mov
xor
xor
or
dec
mov
stos
adc
xchg
loop
lds
imul
movsb
jecxz
cmp
stos
test
and
cmp
xor
pop
out
fisubs
movsl
adc
sub
mov
sub
sub
jge
fwait
std
lea
xor
outsb
rclb
or
cmc
imull
xor
aas
mov
sbb
mov
jnp
clc
imul
pushl
loopne
test
mov
addl
push
jg
sbb
xor
fxch
cld
das
shlb
push
adc
pop
aad
test
bswap
dec
and
jp
xchg
jge
dec
mov
pop
sub
inc
loopne
pop
mov
dec
pop
xchg
ret
xchg
outsl
aaa
jo
xorb
and
lahf
mov
dec
mov
andl
je
nop
rorb
jp
incb
or
lahf
inc
push
dec
jg
test
dec
cmp
sarb
adc
mov
mov
lods
lods
notb
pop
xor
cmpsl
clc
or
daa
xor
in
pop
inc
std
ret
inc
adc
inc
cli
mov
shll
aam
test
imul
imul
dec
mov
xchg
push
les
sarl
add
dec
pop
jno
in
pop
mov
clc
pop
xchg
mov
and
push
sub
sub
pop
out
mov
call
shr
aas
orl
inc
in
pop
mov
aam
and
into
sub
pushf
ds
stos
imul
jno
sbb
add
push
or
insb
xor
xchg
sti
jne
mov
gs
jge
adc
sub
jne
es
inc
mov
jle
mulb
icebp
repz
outsl
repnz
mov
fdivr
je
test
mov
movsl
iret
xchg
jecxz
in
fwait
test
add
push
mov
and
movsb
jp
cmpsl
and
cmpsb
inc
and
xor
pusha
dec
jb
and
pop
cld
xchg
xor
inc
notl
mov
add
std
stos
aas
cmp
cmp
pop
lahf
xchg
jmp
mov
jae
cmc
insl
jnp
and
test
mov
or
imul
test
push
mov
push
aam
xor
daa
mov
ret
mov
cmp
push
and
sub
pop
fnstcw
mov
cmp
cmp
adc
push
inc
sub
adc
push
lds
movb
cs
outsl
push
mov
dec
mov
add
xor
sub
pop
mov
call
or
push
in
aas
enter
aam
ds
stc
mov
out
pop
mov
call
leave
dec
sti
sub
sub
inc
in
inc
jmp
imul
mov
enter
aad
out
sbb
fcmovb
mov
rorl
cmp
in
lahf
xlat
enter
sbb
jns
adc
jmp
mov
cmpsl
jmp
xchg
cmp
lods
rolb
std
sahf
adcb
shlb
xchg
sub
rorb
cmp
gs
mov
or
mov
mov
fsubr
roll
fwait
push
pusha
or
or
mov
push
ss
mov
push
std
sbb
in
mov
add
test
push
testb
popf
sahf
push
movsb
call
inc
aam
pop
pop
jae
fidivrs
mov
sahf
das
ret
jmp
mov
pop
cli
out
sbb
and
dec
pop
inc
in
loope
sbb
pop
cs
push
cmp
test
push
sahf
xchg
sti
and
cltd
push
xchg
and
mov
lcall
and
mov
lea
dec
sbb
sub
bound
fstpt
bound
stc
in
adc
add
push
adc
ss
push
push
push
leave
shrl
push
and
sub
popa
inc
negl
iret
pop
imul
pop
pop
and
test
jmp
testl
out
fistpl
xor
push
push
test
push
in
shrl
cmc
sub
jmp
cmp
fcomps
decl
mov
shlb
dec
andl
xor
inc
xorps
incl
adc
bound
rol
lea
fistpl
sbb
les
out
cmp
xchg
mov
add
mov
xchg
pop
or
or
push
cmpsl
in
mov
subb
sbb
outsl
fidivrl
xor
out
dec
xor
add
xchg
push
jle,pn
and
adc
sbb
imul
jp
or
push
out
pop
adc
mov
and
jl
dec
lret
movsb
cltd
dec
cmpb
lcall
xchg
lret
xchg
outsb
pop
fnstsw
js
sub
cmc
push
outsb
jns
lahf
jg
aas
rclb
cmpsb
das
in
std
sub
in
fadds
mov
fs
pop
loop
cmp
bound
notb
fdivs
hlt
jmp
repnz
in
call
mov
xchg
sbb
or
mov
add
fmull
loopne
or
lods
pop
xor
stos
pop
adc
push
xchg
call
push
dec
xchg
fiadds
mov
ja
cmpsb
pop
mov
cli
mov
sbb
xor
outsl
or
lret
mov
ret
js
xchg
ljmp
fbld
mov
cmp
je
repz
pavgb
or
xor
or
pop
mov
aas
lods
xor
mov
inc
push
lock
popa
cmpsb
mov
sub
loopne
xchg
xchg
pop
lahf
push
lds
les
pusha
xchg
cld
popa
or
aad
cltd
cli
daa
adc
push
jmp
repnz
xchg
pop
lea
inc
mov
repnz
add
xor
subb
lcall
divb
inc
pop
dec
and
push
and
test
test
add
lea
leave
notl
add
out
cmpsb
or
sub
jge
mov
jb
fdivrs
cwtl
xchg
fadds
add
cmp
dec
push
ret
js
shl
sbb
mov
cmp
mov
hlt
mov
or
jge
rcrb
adcb
loope
sub
rcrb
or
sbbb
dec
sub
xchg
xchg
cmpsb
fiaddl
mov
sti
mov
push
je
add
push
jns
push
mov
xor
mov
add
mov
mov
pop
or
call
fsubrl
add
add
adc
and
fs
lret
cli
mov
mov
loope
mov
popf
jno
pop
sbb
xchg
adc
and
ja
mov
nop
jle
aad
idivb
pop
add
cmpsb
and
popa
inc
inc
in
in
rorl
pop
pop
inc
or
pop
jl
mov
xlat
mov
fildll
add
dec
inc
pusha
in
xor
scas
pushf
mov
sahf
aam
sbb
and
test
push
add
sub
decb
popa
xchg
pop
dec
ror
mov
enter
repz
mov
jmp
push
lcall
stos
or
dec
sti
mov
es
and
enter
pop
aaa
cmpsl
and
or
jge,pt
dec
mov
adc
shll
jae
sbb
xchg
jnp
mov
jmp
adc
jae
loop
scas
repz
mov
jecxz
hlt
aam
push
into
pop
insb
mov
idivb
sub
dec
xchg
movsb
sub
bound
mov
inc
add
fistl
mov
push
cmp
push
je
pop
rorl
xor
jnp
mov
dec
hlt
dec
dec
push
femms
pop
into
pop
xor
icebp
or
push
jp
cmp
push
movsb
xor
and
inc
and
ja
jno
mov
inc
xor
push
sbb
pop
xchg
jns
mov
cs
out
pop
call
sbbb
arpl
pop
add
push
inc
xchg
clc
push
fucomp
xchg
lds
cmp
add
fisttps
jne
lods
mov
xchg
add
cmp
mov
daa
jmp
lods
and
rorl
push
dec
pop
mov
mov
lods
jae
push
imul
das
adc
sahf
loope
std
scas
negb
ret
sbb
jo
scas
or
stos
fldt
call
sbb
or
leave
adc
mov
pop
pop
sub
cwtl
mov
xchg
call
rcl
aas
sub
mulb
hlt
xor
int3
xor
mov
push
xor
mov
ja
js
cmc
pop
mov
sar
jl
pop
and
test
jge
ss
mov
enter
mov
addl
jno
test
pop
in
mov
ja
mov
pusha
xchg
adc
and
xchg
mov
jge
loop
outsl
or
pop
push
ljmp
add
out
data16
xchg
lea
jbe
sti
out
stos
mov
mov
dec
popf
in
adc
cmp
pushf
xchg
pop
aaa
out
aam
add
inc
loop
daa
daa
xor
xor
jl
rolb
loop
lret
pop
jge
lea
sub
dec
add
das
sub
adc
jb
mov
pop
mov
fcompl
test
pop
repnz
or
sub
scas
inc
inc
imul
mov
mov
fwait
lret
leave
or
stc
push
mull
mov
mov
loopne
ds
add
push
inc
pop
pop
sub
data16
cmp
inc
or
mov
nop
shlb
xchg
sub
xchg
xor
insb
cvttps2pi
sbb
fimuls
add
cli
test
mov
pop
add
call
push
roll
fistps
jp
adc
gs
les
mov
test
jmp
ja
mov
incl
movsl
outsb
sub
push
test
xlat
or
xchg
mov
jg
add
aas
inc
pop
lret
push
push
rcrl
iret
mov
js
shlb
dec
lret
dec
ret
pushf
cwtl
lds
loop
push
out
icebp
iret
out
outsb
cmp
into
add
test
mov
fcomps
test
das
loope
pop
or
sbb
inc
or
cmp
test
sbb
dec
mov
pushf
sbb
repnz
xchg
movsb
imul
push
and
dec
pop
push
jae
add
ret
mov
stos
js
xchg
cmpb
sti
in
xorb
push
fs
push
rcrl
xchg
mov
cmp
push
fwait
mov
inc
rolb
push
pop
jg
fdivrl
mov
mov
add
push
sbb
shlb
das
add
add
pushf
imul
push
and
cmp
shlb
es
shll
adc
sbb
shrb
mov
push
orl
adc
add
mov
ja
insl
lahf
mov
inc
xchg
out
and
cmp
mov
gs
test
cmp
repz
push
xor
xor
lahf
add
pusha
in
in
mov
xchg
jbe
sbb
and
sbb
push
pop
and
xchg
fnsave
pop
negl
mov
mov
inc
es
test
fstpt
sbb
fsts
fucomi
repz
movsl
sbb
or
cli
outsb
jge
xor
js
bnd
out
inc
pop
shr
ds
repnz
out
dec
pop
fucom
cwtl
idivb
daa
int
fcmovne
jmp
mov
repz
jnp
sbb
stos
xchg
xchg
lea
xchg
out
mov
mov
jge
aam
pop
jle
movq
sahf
aad
sub
aad
pop
aam
adc
inc
inc
fisubl
cmp
bound
call
stos
mov
xchg
inc
das
cmc
cwtl
lea
shr
cmpb
sub
push
and
jno
adc
inc
jg
sbb
cmp
xor
pop
xchg
mov
mov
int3
or
sar
cli
ss
xlat
stos
sub
push
sub
loop
add
pop
xchg
and
cmp
xchg
imul
nop
sbb
mov
lcall
shl
lcall
shll
icebp
mov
lcall
or
sub
mov
les
iret
xchg
jp
int3
push
fdiv
stos
xchg
scas
or
sbb
sbb
ljmp
sbb
pop
add
xor
and
mov
jne
mov
cmc
push
fnsave
fildl
rclb
pop
push
in
pop
stc
push
sti
in
inc
pop
push
push
mov
bound
loop
in
mov
cmc
out
add
pop
out
dec
pusha
dec
popa
pop
pusha
rclb
mov
fsub
pop
inc
out
mov
jmp
out
jge
maskmovq
imull
data16
dec
cmp
inc
mov
and
fstl
add
add
dec
xor
mov
jo
mov
dec
gs
jno
jg
das
ret
sti
xchg
mov
iret
andb
imul
cmp
adc
andl
jbe
ljmp
and
flds
in
sbb
xchg
data16
lcall
mov
lret
insb
sub
inc
jbe
xor
cmp
aaa
mov
rcrb
push
pop
lods
push
cmc
jg
imul
sbb
push
cmc
mov
cmp
jmp
fists
into
xchg
in
push
push
scas
xlat
arpl
ljmp
mov
adc
xchg
aam
cld
jmp
dec
pop
push
jae
dec
dec
push
dec
inc
dec
dec
jmp
rcr
popa
sub
stc
lods
cwtl
xchg
push
lret
xor
paddusw
aas
paddusw
lcall
mov
dec
imul
movsb
cmpsl
lds
paddusw
aas
paddusw
aas
paddusw
aas
paddusw
ljmp
aad
sub
xchg
cmp
insb
adc
aas
paddusw
aas
paddusw
aas
paddusw
aas
paddusw
aas
paddusw
aas
paddusw
aas
paddusw
aas
paddusw
aas
paddusw
aas
paddusw
aas
paddusw
aas
paddusw
aas
paddusw
aas
paddusw
aas
paddusw
aas
paddusw
aas
paddusw
aas
paddusw
aas
paddusw
aas
paddusw
aas
paddusw
aas
paddusw
aas
paddusw
aas
paddusw
aas
paddusw
aas
paddusw
aas
paddusw
aas
paddusw
aas
paddusw
aas
paddusw
aas
paddusw
aas
paddusw
lcall
