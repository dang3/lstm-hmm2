push
or
add
add
add
adc
add
add
add
and
add
adc
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
adc
add
add
jp
add
mov
add
pushf
and
add
and
add
add
pushf
and
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
add
add
add
xor
add
adc
add
adc
mov
pusha
call
pop
sub
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
inc
inc
or
inc
inc
mov
inc
pop
add
and
add
add
adc
add
jg
pop
or
cltd
xchg
cli
or
call
push
push
dec
je
stos
sbbb
outsl
pop
movsl
js
sub
cmp
mov
mov
mov
imul
sub
mov
push
jecxz
mov
add
push
hlt
pop
cmc
pop
pop
push
test
add
outsb
pop
stos
or
mov
stos
lret
sbb
test
inc
ljmp
add
mov
jge
repz
jno
xchg
fadd
lret
insb
jno
cmp
gs
loop
aad
adc
js
fdiv
jecxz
xchg
fldcw
jge
popa
cltd
mov
lcall
mulb
hlt
mov
not
rcrl
mov
movsb
jo
mov
inc
int3
sarb
ljmp
sub
jne
cmp
rolw
jge
mov
mov
ss
lea
jbe
iret
popf
rclb
cmp
pop
int
mov
mov
or
adc
cs
add
mov
pop
mull
jo
or
out
adc
or
pusha
sbb
sbb
sub
and
push
pop
pop
outsb
and
mov
out
ret
mov
aaa
push
and
pop
test
jb
xchg
and
nop
xor
dec
dec
xlat
pop
pop
aas
and
xchg
mov
mov
cmp
fucomp
sub
sub
lret
dec
int3
ss
adc
mov
je
cmpb
cwtl
into
mov
push
dec
xor
sub
aaa
adc
inc
lods
sbb
nop
dec
les
std
leave
mov
pop
mov
inc
push
xor
sub
das
cmp
mov
mov
decl
inc
inc
cmp
pop
sub
mov
and
popa
xor
push
add
pop
push
sti
mov
push
adc
mov
flds
push
sbb
sbbl
jp
int3
pop
leave
or
mov
icebp
mov
xchg
mov
aas
pusha
or
jnp
push
cmp
jne
loop
xchg
out
lret
into
ljmp
imul
scas
mov
imul
mov
int3
int
imul
xchg
pop
pop
push
push
nop
push
jno
test
mov
fs
jge
mov
sbb
imul
mov
sarl
repz
sbb
addr16
jb
out
cmp
leave
outsl
int3
insb
pop
arpl
xor
adc
pop
cmp
aam
je
lahf
jno
mov
sub
movsb
cltd
not
add
dec
mov
xchg
orb
shrl
sbb
scas
clc
pop
mov
std
in
xchg
ret
inc
dec
sysret
sbb
fcmovnbe
shl
sbbl
mov
cmpsl
pop
push
aaa
mov
stc
mov
hlt
repz
push
dec
test
dec
cmc
or
xor
xchg
jp
ret
cmp
xor
addr16
or
xchg
jp
sbb
add
push
insl
out
pop
mov
mulb
iret
mov
cmp
ret
imul
inc
cs
jo
clc
mov
adc
fsubl
arpl
dec
stos
cmp
call
mov
insb
hlt
pop
or
add
dec
int3
cmp
lea
pop
push
inc
enter
dec
and
in
repnz
jge
lods
gs
ret
inc
mov
inc
add
pop
sbb
and
push
lcall
idiv
add
push
mov
rcrl
cmpsb
push
inc
add
popa
fdivrs
stos
rcll
rcrb
clc
and
pusha
sub
call
mov
pop
stos
mov
fnstenv
dec
daa
mov
jecxz
push
xchg
and
gs
idiv
fistl
pop
scas
lds
sbb
cmp
sbb
cmp
xor
xchg
jecxz
or
lcall
lcall
mov
adc
inc
cwtl
in
stos
push
push
popf
out
in
xchg
daa
lods
xchg
inc
js
or
lods
dec
sub
cmpsb
sub
jge
pop
movl
push
dec
add
xchg
imulb
ljmp
adc
xchg
test
ljmp
add
xchg
mov
or
lea
cwtl
jmp
imul
mov
dec
push
pop
inc
insl
mov
out
jo
rcrb
les
add
jo
cmp
movsb
rcll
inc
pop
loope
inc
rcrl
inc
movsl
inc
push
jns
fdivr
mov
xlat
inc
inc
ljmp
mov
xor
cwtl
push
and
shll
cmp
aad
pop
lea
cmp
maxps
arpl
stc
xor
aaa
xchg
mov
mov
je
push
cmp
in
leave
jmp
aam
lahf
cld
cmp
push
xlat
out
xor
loop
push
es
fadds
popf
xchg
adcb
cmp
popf
xor
mov
add
in
mull
mov
daa
cmp
xchg
lods
in
sbb
cltd
cmp
xchg
or
ret
into
jae
sbb
jecxz
mov
imul
insb
cmp
lahf
mov
push
ret
in
xchg
or
lea
sbb
test
insl
add
nop
cltd
ljmp
loop
pop
fcmovu
roll
aaa
dec
jmp
loop
repnz
mov
cmpsb
xor
and
fistpll
push
ss
aad
jne
sarb
aas
mov
mov
gs
and
jle
push
jp
cmp
fwait
cmp
push
dec
daa
clc
push
xchg
insl
mov
sub
idivb
mov
add
stc
fmull
ret
jo
jle
xchg
pushf
mov
lcall
inc
fdiv
imul
rcll
mov
mov
and
insl
stc
js
lret
rorb
and
bound
adc
cs
outsb
imul
sub
fsub
push
inc
cmp
insb
int3
fbld
jns
test
movsb
stc
push
lret
dec
rclb
ljmp
xor
mov
or
and
and
mov
or
pop
lock
sbb
fisttpl
add
repnz
in
xor
sti
stc
in
push
ret
push
adc
sbb
subb
call
mov
sub
pusha
xor
int
adc
inc
mov
lods
dec
orl
and
sti
jb
arpl
test
pop
pop
xchg
out
shll
mov
xor
ds
int
pop
adc
int
not
inc
loope
dec
rcrb
loope
pop
adc
mov
dec
aam
jo
mov
sbb
mov
sub
xor
fwait
aam
fnstenv
loope
lock
adc
adc
and
inc
xchg
fmul
jnp
es
popf
inc
stos
dec
add
in
and
rorl
mov
test
pop
mov
mov
je
ret
fwait
popf
mov
jbe
movsb
loop
movsl
mov
lock
xor
loopne
dec
push
jmp
or
decb
add
sbb
xchg
xchg
add
add
loope,pn
out
fucomp
mov
fsubrp
out
lea
rcrb
arpl
pop
cmp
mov
dec
add
xlat
mov
mov
shrl
mov
ret
ror
icebp
test
mov
lcall
mov
add
pop
iret
std
fsubrl
lds
add
in
push
pop
pmuludq
inc
jl
pop
ja,pn
xchg
ljmp
lock
and
add
mov
cmp
mov
pushw
dec
inc
adc
scas
pop
jb
mov
jmp
adc
loope
rcrb
inc
and
adc
mov
xlat
bound
or
jae
push
or
inc
mov
sti
mov
cmp
and
and
roll
es
outsl
out
dec
jnp
ss
or
sub
xorb
sub
popl
mov
cli
cmp
js
test
ja
or
pop
and
mov
or
lret
jo
icebp
sarl
das
xor
out
adc
push
sub
fdivl
pop
repz
mov
push
jge
shrl
jp
mov
arpl
mov
pop
xchg
cmc
mov
stc
loop
mov
sahf
adc
mov
jae
cmc
xchg
inc
daa
push
pop
rol
nop
or
icebp
fidivrl
push
fstps
jge
fidivl
aas
std
adc
sub
lret
int
adc
fs
call
mov
mov
xor
adc
iret
add
or
mov
lods
inc
fiaddl
dec
pop
pop
jno
lods
pop
sbb
daa
or
les
inc
add
mov
cmpsb
cmp
addr16
cmp
enter
pop
lods
xlat
push
or
mov
in
hlt
xchg
jmp
ljmp
dec
mov
in
xor
movsl
iret
test
fs
xor
mov
push
sbbb
inc
lahf
cmp
out
push
testl
fidivs
mov
jg
fwait
and
fidivrl
call
fsubrl
aas
jb
jne
add
dec
xlat
jno
cmpsb
add
xor
or
mov
sbb
push
insl
sbb
fisttps
push
jl
mov
rcll
push
loopne
lret
aaa
jg
mov
add
scas
xor
sub
jge
xchg
xor
pop
mov
mov
add
inc
sub
fisttpl
test
adc
stos
insb
cmp
xor
add
push
and
sub
add
inc
out
gs
xchg
ret
shll
sbb
stc
jp
mov
repnz
and
lock
shll
jo
pop
push
jge
sarb
mov
subb
or
loopne
cmp
jo
mov
dec
push
fs
mov
push
or
xor
jle
sbb
es
inc
pop
loop
push
inc
push
loopne
mov
lods
lret
push
and
mov
or
jge
and
pop
xorb
push
sub
sbb
adc
lock
add
mov
ds
int
lahf
lcall
xchg
mov
sbb
pop
cmp
arpl
sub
jns
mov
stc
mov
cltd
or
mov
push
inc
mov
jecxz
sti
mov
dec
xchg
jp
inc
add
push
sti
lods
mov
cmp
rolb
cmp
test
rcrb
sbb
push
call
jmp
adc
int3
mov
add
out
cmp
ljmp
in
inc
push
aam
jno
jp
mov
ret
test
or
mov
nop
push
pop
es
test
xor
incb
xchg
and
mov
aas
pusha
mov
and
jge
adc
pop
sub
xor
insl
sub
pop
leave
test
outsl
and
scas
mov
fbstp
mov
aad
xchg
fidivrl
nop
xor
xchg
subl
mov
mov
mov
mov
cmpsl
sbb
xor
xor
inc
push
adc
mov
sub
aaa
clc
inc
test
adc
mov
stos
inc
mov
mov
cmpsb
sarl
scas
nop
xlat
pop
in
iret
pushf
xor
in
imul
ss
lea
push
insb
xchg
sub
or
jmp
fwait
push
mov
lea
imul
jecxz
add
movb
xor
addb
cmp
mov
add
pop
and
in
lcall
push
scas
xchg
push
addr16
stos
jmp
cmp
pop
add
push
push
jp
loope
test
mov
add
push
lahf
insb
or
ja
mov
jae
jle
lret
mov
lock
sarb
test
ds
lds
imul
add
jns
push
sti
mov
mov
fs
lret
sbb
dec
mov
xchg
xchg
push
lods
push
mov
out
ficoms
mov
nop
lods
xchg
das
sub
push
lahf
cmovbe
scas
push
lods
lods
jmp
test
hlt
lds
mov
xchg
dec
stos
xlat
jg
leave
jno
push
aam
mov
pop
xchg
jle
rolb
cmpsb
push
movsb
cmp
pop
xor
pop
pop
xchg
mov
iretw
daa
push
lds
sub
push
push
push
leave
in
add
mov
cmp
inc
pop
jge
cmpsl
dec
jle
mov
jge
cmp
shll
xchg
inc
aam
test
or
xchg
ror
adc
push
inc
fwait
push
inc
js
ja
pop
call
adc
test
std
lahf
arpl
sbb
mov
sub
and
icebp
shl
push
jmp
inc
jmp
insb
mov
push
mov
sbb
push
mov
mov
dec
sub
xor
fwait
inc
lahf
arpl
call
lods
add
scas
test
add
stos
inc
clc
int
jbe
iret
push
push
daa
add
push
daa
shrl
test
mov
or
and
shrl
movsl
enter
pop
cmp
sub
sarl
lret
test
add
dec
xor
push
cmp
aam
adc
mov
jmp
and
lahf
pushf
out
cs
mov
mov
ss
dec
les
nop
and
je
and
lahf
add
xchg
dec
add
mov
bound
shrb
xchg
jge
ret
and
dec
bnd
jmp
scas
lahf
fcoml
insb
movsb
aam
mov
xor
pop
mov
adcb
xor
pop
idivb
push
push
mov
mov
pop
jb
adc
push
stc
test
push
notb
xor
cmp
pop
loop
in
push
xlat
or
popa
dec
pushl
inc
stc
xchg
xor
sub
inc
push
in
cmp
xchg
xchg
jp
std
jp
es
das
aas
mov
xlat
shll
je
jbe
mov
popa
xchg
jmp
sbb
or
sbb
mov
mov
xor
pop
sarb
dec
inc
pusha
mov
repz
pop
out
outsl
pop
sysenter
mov
mov
out
lret
popl
call
cs
cwtl
into
daa
fdivp
push
adc
inc
scas
mov
cmpsl
or
adc
cmp
pop
orb
cwtl
jge
frstor
scas
out
repnz
mov
movsl
xchg
mov
cmpl
arpl
inc
mov
xor
repnz
scas
dec
mov
test
jge
cmp
sbb
out
pop
and
stos
loopne
outsl
leave
push
hlt
fisttpll
pop
leave
cmp
aaa
pop
mov
roll
inc
xchg
mov
mov
int3
jns
lcallw
ja
aad
int
test
xchg
movb
jo
add
aad
aaa
cmpsb
fldenv
dec
imul
mov
cwtl
mov
neg
sub
and
adc
add
ljmp
push
jmp
pop
dec
pop
mov
dec
stos
adc
push
out
adc
dec
pop
cmpl
in
into
out
add
cmp
test
cltd
mov
mov
insb
pop
es
dec
loopne
testl
movsb
push
rolb
das
movsb
das
fsubrp
arpl
in
mov
test
xor
sub
mov
pushl
cmp
xchg
insl
dec
and
cmp
lret
out
popa
xchg
cld
xchg
jecxz
imul
fyl2xp1
int
enter
lret
jp
arpl
lcall
outsl
add
cmp
stc
loope
or
ds
inc
xor
bound
dec
or
pop
fs
jge
mov
leave
cltd
out
in
pop
lock
xchg
jle
test
or
adc
dec
mov
xorb
dec
xchg
adc
add
mov
outsl
ds
xor
out
jmp
jns
pushw
in
enter
mov
jb
test
scas
push
dec
xor
cmp
jle
adc
das
in
fcmovb
mulb
mov
xor
xchg
push
inc
xchg
mov
push
pop
cmp
mov
mov
pop
push
jmp
jle
popa
daa
outsb
add
sti
js
jl
pop
push
and
push
divl
jns
push
inc
xor
insb
mull
fcmovb
cmpsl
xor
push
les
mov
enter
lcall
lds
testb
imul
sub
add
aad
arpl
push
aaa
mov
mov
es
and
xchg
inc
pop
icebp
pusha
ret
pop
outsl
out
stc
aad
jno
jle
xor
daa
fxch
sub
mov
add
pop
cltd
inc
mov
ljmp
js
jmp
inc
popa
lret
push
jp
sahf
pop
les
xlat
negl
in
jp
or
movb
or
jl
aaa
mov
ret
fucomi
sub
insl
xor
stos
outsl
push
std
test
xchg
xchg
push
add
fsubrl
xchg
xchg
sub
cmp
cmp
or
stos
cli
mov
outsb
lods
sete
cmpsl
cwtl
sbb
lcall
nop
aam
fwait
stos
push
jg
stc
inc
fcomip
lods
sbb
sahf
jg
mov
jne
push
sub
shll
repnz
int3
mov
cli
out
in
add
test
xor
or
mov
sbb
push
xchg
xchg
jo
outsb
pop
popa
fmull
dec
sub
add
dec
sub
sub
jle
hlt
aas
lret
int3
jae
adc
iret
sbb
nop
jge
loopne
xor
cmpsb
ss
out
add
repz
pop
arpl
sub
mov
rcr
sub
pop
mov
inc
inc
popf
adc
cmpsl
sarl
ret
in
jne
cli
mov
outsb
add
in
dec
shrl
loope
pop
mov
sub
adc
or
xor
lret
das
jno
in
inc
mov
fnstcw
mov
dec
sbb
in
sbb
fcomps
cmp
and
lock
push
loope
lock
fdivs
fbld
aaa
xor
data16
fbld
fsubrl
in
mov
pop
xor
pushf
inc
mov
or
int
imul
jo
lods
dec
pop
icebp
push
fists
jb
inc
sub
insb
or
adc
repnz
sub
cmc
cmc
pushf
ss
ja
sub
mov
jns
ja
jne
and
sub
daa
dec
loop
mov
test
sbb
xchg
cmp
dec
fists
stos
sbbl
jg
adc
xorl
pop
push
fsubrs
stc
mov
test
xor
push
fdivrl
shlb
cmp
stos
mov
rclb
call
xchg
sarl
jo
fnstenv
insb
fcoms
sbb
movsb
cmp
popf
lret
pop
jns
gs
in
cmp
push
mov
sub
and
sbb
lcall
mov
enter
adcl
mov
out
lods
adc
dec
jle
adc
pop
icebp
jb
scas
lds
jae
and
xor
imul
in
ret
fdivl
push
scas
sub
mov
enter
mov
sub
lds
pop
mov
pop
mov
mov
push
ret
jmp
in
fwait
ljmp
les
movsl
stc
and
mov
or
mov
inc
cmp
pusha
xor
jp
xchg
mov
loop
fcomps
inc
lds
pop
out
dec
jnp
jo
sub
scas
push
sub
dec
mov
push
push
xor
mul
insb
push
xor
cmpsl
push
int3
cmpsb
ja
out
or
imul
enter
aad
xor
pusha
insl
enter
scas
or
lcall
and
xor
int3
jp
imul
or
mov
jo
popl
xchg
in
adc
jae
call
sub
popa
pop
inc
push
xor
lods
sub
rcr
inc
lock
inc
shll
inc
cld
push
pushl
push
ds
mov
xchg
dec
sub
xlat
sub
cmpsb
or
xor
loopne
pop
arpl
test
insl
out
popf
stc
out
imul
mov
test
clc
sbb
dec
and
rorl
pop
cld
rcl
push
stos
mov
pop
xlat
push
pop
iret
pop
add
repnz
sahf
out
xor
jl
cmp
aam
sub
jecxz
jg
add
aam
sbb
xor
push
ljmp
dec
mov
push
shrl
mov
xchg
outsb
and
mov
dec
xlat
push
scas
pop
imul
pop
popf
out
lcall
adcb
fisubrl
cmc
mov
sti
das
mov
fcoml
loopne
stos
insb
push
jne
mov
sub
rorl
ds
lea
pop
in
in
cmp
cmc
xchg
jmp
pop
nop
pop
test
outsb
inc
inc
enter
xchg
push
or
jae
pop
push
jae
movsl
xchg
mov
jmp
mov
aaa
fcomps
mov
sub
sub
or
push
scas
enter
mov
pop
fiadds
sti
es
pop
arpl
inc
sub
mov
cmp
js
loopne
pop
inc
lahf
jmp
lret
xor
lods
lret
test
out
push
or
inc
add
pusha
enter
cld
lcall
sub
les
dec
push
daa
sbb
in
test
xor
adc
cld
sub
imul
cltd
pushf
inc
inc
add
cltd
xchg
je
sbb
enter
shrb
test
jnp
insl
lea
mov
scas
in
enter
ror
int
cmpsl
dec
pop
shll
in
mov
pop
ja
lea
mov
jno
cmpsb
fdivs
jae
mov
bound
cld
jo
scas
mov
cwtl
je
das
mov
fidivl
into
loop
push
mov
lcall
pop
cmc
leave
pop
enter
popa
roll
ret
clc
pop
or
or
jb
push
jmp
xchg
add
test
and
cmpb
cltd
push
mov
and
inc
cmp
sbb
leave
inc
jae
scas
fldcw
in
rcll
and
cmp
cmp
or
sub
fnstenv
dec
mov
mov
in
or
or
cmpsb
mov
inc
mov
sbb
pop
sbb
mov
mov
hlt
inc
sub
mov
or
fsubrs
push
repz
adc
push
dec
adc
cs
add
mov
push
das
dec
test
and
fmuls
scas
arpl
pop
mov
or
pop
mov
iret
jae
in
pop
rcrb
inc
imul
test
pusha
jl
mov
mov
clc
xchg
mov
mov
mov
mov
scas
xchg
jno
xchg
lods
cmpsl
shrb
add
jbe
cmp
lock
aaa
stos
lods
call
mov
mov
push
add
dec
mov
aad
into
cmpsb
lahf
cld
fdiv
rorb
push
xor
jle
pop
lret
nop
sub
add
icebp
and
mov
dec
fildl
ja
and
cs
xchg
and
iret
sbb
fnstcw
addr16
pop
mov
movb
sub
cmp
pop
adc
das
int
and
stos
adc
lock
jmp
inc
in
jae
lea
xchg
sbb
dec
lret
push
das
lcall
mov
loope
xor
mov
or
jle
sbb
int3
push
scas
pop
repnz
fildll
iret
dec
xchg
sub
adc
cmp
or
add
adc
mov
mov
sub
xchg
call
xor
xchg
cmp
inc
xor
push
adc
add
dec
add
je
or
mov
scas
shlb
cmp
pop
jo,pt
call
leave
ret
data16
scas
dec
ljmp
out
xchg
sbb
leave
inc
xchg
mov
int3
pop
push
inc
aaa
or
pop
push
aaa
xor
pop
adc
cmpb
imul
insb
lcall
add
out
inc
mov
mov
add
adc
in
inc
clc
cli
mov
in
lcall
lds
sbb
out
inc
pushf
or
aam
mov
in
and
xor
xor
mov
imul
shrl
push
mov
adc
jle
push
ret
sbb
lock
rorl
sbb
movsl
or
aas
cmp
push
mov
or
gs
cmpsl
xchg
mov
xchg
dec
mov
fwait
or
cmp
sub
add
in
dec
sub
sahf
pushf
lods
jp
inc
cltd
sbb
push
fucomp
pop
aaa
in
in
push
pop
cli
jne
mov
in
leave
fistpl
xlat
outsl
icebp
leave
cli
or
loop
lret
xchg
or
ja
jl
pop
fwait
popa
pop
mov
add
aam
pushf
ret
es
pop
sbb
dec
xor
xchg
adc
push
lret
cmpsb
sub
std
idivl
xchg
dec
shl
sbb
ljmp
push
mulb
cld
pop
mov
fcompl
lahf
shll
jo
sub
jb
xor
das
jne
fdiv
fucomp
mov
subb
adc
jne
pop
jmp
mov
clc
mov
dec
pop
aaa
call
inc
xchg
adc
adc
icebp
sub
inc
and
fimuls
jno
mov
fstpl
in
inc
or
xchg
subb
mov
xchg
add
je
incl
jg
dec
sbb
or
addr16
mov
cmp
into
fnstcw
pop
loope
adc
adc
mov
popa
jl
mov
daa
xor
jl
sub
mov
inc
shll
sub
shll
pop
in
and
push
mov
or
cmp
negl
cld
sub
pop
push
mov
add
inc
stc
adc
rolb
int
sahf
int3
add
add
scas
jecxz
jecxz
mov
pusha
mov
push
sbb
push
in
mov
mov
bound
xor
cmp
icebp
leave
dec
jno
dec
add
jbe
inc
jb
pop
popf
push
sahf
xchg
dec
push
xlat
lcall
jo
xchg
push
mov
or
xchg
cmc
sub
adc
or
mov
mov
shlb
std
jne
xchg
sub
mov
aam
imul
es
lahf
mov
xchg
fiaddl
xor
out
in
loope
adcl
xchg
dec
jl
lahf
insl
sub
push
loop
mov
push
fmulp
mov
insb
fchs
adc
inc
decb
mov
xor
and
xchg
and
adc
dec
insl
leave
test
ret
popf
and
fistl
inc
lea
jle
xchg
dec
mov
pop
mov
decb
loopne
mov
push
addr16
mov
and
addr16
mov
and
mov
xlat
mov
or
lea
or
xchg
stc
pop
loopne
dec
jnp
mov
pop
mov
cmp
pop
mov
loope
jo
inc
lret
or
addr16
sbb
stc
and
stos
imul
movsl
push
clc
mov
or
popa
shlb
mov
mov
sahf
xchg
or
incb
and
push
int
leave
clc
imul
pop
mov
jmp
popa
and
mov
imul
push
pop
std
sub
pop
iret
adc
popa
fmull
sarl
mov
mov
mov
add
xor
lods
pop
or
call
ljmp
jg
and
scas
push
aaa
fcmovnu
mov
add
sbb
out
out
add
testl
mov
int
aaa
pop
daa
movsl
inc
push
neg
outsb
mov
jmp
and
inc
clc
ret
push
adc
or
cmpsl
rorb
insb
lret
scas
popf
push
loope
adc
mov
or
jmp
loopne
jle
mov
sbb
lods
pop
push
sbb
adc
mov
cmpb
cmp
lret
in
dec
daa
int3
mov
arpl
lea
outsb
int
and
popa
inc
lock
cltd
add
dec
rclb
push
xor
cmp
push
lcall
fidivrs
pop
mov
testb
js
aam
fidivs
fistpll
test
dec
je
fisubrl
mov
adc
shl
lods
out
hlt
push
in
subb
or
mov
mov
dec
sahf
shrb
inc
sub
cmp
pop
mov
mov
mov
les
jp
jae
and
pop
std
mov
mov
insb
lods
sub
loopne
xor
repnz
mov
imul
into
outsb
out
imull
icebp
ja
lcall
dec
test
mov
mov
pop
sub
cwtd
rcrl
shll
out
xchg
add
punpckhwd
jle
inc
jl
cwtl
and
aas
pop
mov
orb
jle
lock
push
nop
or
arpl
and
adc
cmp
mov
mov
sbb
in
or
cld
pop
cmpsl
sub
aas
push
gs
cmp
mov
pop
repz
test
loope
push
pop
lods
push
and
out
repz
test
sub
mov
push
fcmovnb
jp
sub
jne
jg
sahf
adc
mov
push
addl
lods
dec
movsb
in
push
jg
pop
xor
add
xor
mov
les
daa
nop
jne
insl
push
mov
out
jne
sbbl
es
sbb
insl
push
int
scas
push
mov
lods
cmp
sarb
cmp
in
cmp
xchg
mov
lods
loop
mov
mov
ret
stos
int3
in
dec
dec
in
mov
stos
lods
xchg
out
jle
addr16
ds
ret
cwtl
leave
sub
xchg
xchg
pop
cs
insb
cmp
xor
xchg
mov
jno
leave
repz
sub
inc
add
mov
push
loop
pop
add
test
dec
xor
jne
roll
push
mov
loope
inc
add
pop
adc
mov
aaa
xor
test
sub
jno
icebp
fists
xchg
pop
xchg
pusha
add
sbbb
xlat
js
popf
xor
pop
jns
dec
xchg
negl
xor
fisubrs
dec
outsb
add
fnstcw
roll
out
xor
xlat
pop
inc
inc
mov
pop
fs
ret
push
cwtl
out
dec
loope
in
add
inc
lods
sbb
or
cmp
repnz
mov
jecxz
push
ja
iret
cwtl
out
push
cmp
sbb
aaa
xor
mov
push
lds
sarl
ljmp
ljmp
pop
jmp
repz
cmp
shrl
pop
push
push
push
mov
cmp
xchg
sub
push
imul
aad
shlb
and
add
cmp
mov
pop
jp
es
mov
jge
mov
test
fnstsw
xchg
lret
jle
int3
xchg
xchg
adc
or
lock
inc
push
sub
lods
mov
pop
outsl
or
adc
push
xchg
les
outsl
push
insl
inc
xchg
mov
dec
bound
jp
dec
add
pop
shll
xor
xor
sti
bound
push
add
addr16
push
loopne
scas
stos
mov
mov
push
and
xchg
rorb
cmp
int
inc
sbb
lea
out
gs
jecxz
into
icebp
sahf
cmp
movsb
insl
pop
adc
mov
xor
mov
pop
cmpb
ret
sahf
data16
push
sbb
gs
scas
cmp
dec
scas
mov
jge
xor
lods
pop
and
pop
or
fdivrs
cwtl
rcrl
sub
push
sbbb
rcrl
mov
and
inc
mov
xor
jb
popf
adc
lret
cld
pop
sub
xchg
xchg
mov
pop
outsl
cmc
xlat
mov
je
pop
dec
cwtl
push
and
push
xchg
sahf
xor
cmp
sub
mov
pop
sahf
jnp
loopne
lret
mov
adcl
pop
jmp
insb
xchg
ret
xchg
inc
push
mov
jg
rolb
fdivr
cld
das
pop
adc
jne
loopne
lcall
mov
push
mov
int
out
pop
add
aad
insb
cli
bound
sti
ja
loop
mov
jge
push
cmpsl
js
xchg
lods
add
push
inc
scas
ss
jb
cmpsb
rclb
and
test
stos
xlat
sub
cmpb
pop
inc
ror
fdivs
adc
dec
cmp
xchg
jmp
aaa
les
insb
test
mov
stos
push
imul
xor
pop
jnp
adc
xor
inc
mov
add
gs
sbb
into
in
dec
bound
std
aad
ret
mov
sbb
outsb
rcll
inc
stc
mov
and
cmpsl
mov
jl
std
xchg
arpl
inc
gs
cmp
mov
call
test
stc
and
jp
jl
push
mov
xor
pop
xlat
lahf
jno
push
gs
fisttpll
div
call
in
sub
lock
jae
mov
outsb
lods
cmpsl
or
xchg
xchg
je
lea
inc
jo
xsavec
or
sub
leave
adc
imulb
shrb
mov
das
cli
push
and
inc
mov
jmp
inc
xor
push
fucomi
popf
sub
sbb
add
cmp
lahf
pop
push
jecxz
iret
mov
mov
jle
ret
xchg
dec
cli
adc
cmpsl
hlt
xchg
out
mov
cmpsb
mov
cmp
scas
cmp
cmp
fcoms
clc
cltd
pop
out
repnz
push
lret
push
daa
pop
adc
jo
push
xlat
shr
data16
xchg
xchg
mov
xchg
jbe
cmp
fists
push
mov
je
ret
mov
push
inc
imul
or
mov
lods
sub
mov
insl
mov
jp
mov
add
aad
mov
mov
mov
sarl
je
ds
lret
and
xchg
int
mov
pop
clc
popf
rolb
fwait
dec
push
mov
cmp
cli
movsb
sbb
cmp
inc
ss
jo
dec
stc
jns
mov
mull
lea
jmp
fcomp
sub
add
sub
shlb
inc
ds
dec
fcoms
fstl
push
xor
inc
in
and
in
xchg
call
sti
mov
fsubs
inc
fwait
adc
push
jmp
cmp
shrl
mov
loop
sub
and
add
jns
sbb
mov
push
xchg
cmc
and
and
dec
cltd
lret
add
fildll
push
cmp
lods
shrl
hlt
int
dec
mov
scas
xor
push
test
sub
insl
sahf
enter
inc
loopne
xchg
push
pop
arpl
sbb
jmp
int3
and
stc
jb
mov
inc
push
mov
loopne
in
popa
insb
cli
gs
mov
jp
xchg
cmpsl
stc
call
cmp
rclb
cmc
xlat
and
jp
loop
sbb
dec
addr16
call
cld
fwait
dec
repnz
ret
stc
dec
test
sub
mov
mov
xor
or
push
rolb
cmp
sarl
test
add
daa
lahf
sub
mov
xchg
and
aaa
dec
lods
inc
leave
dec
orl
insb
dec
xor
and
aam
loopne
mov
cmpsb
jge
iret
dec
and
dec
cmp
sub
jae
lahf
jl
cmc
bound
sub
bound
packsswb
add
hlt
ss
jmp
int
or
push
ljmp
or
cli
das
stos
gs
push
es
icebp
mov
scas
or
fildl
jo
rcll
add
lcall
sbb
mov
out
into
xchg
aaa
mov
int3
mov
sbb
adc
fwait
aam
mov
jg
jl
dec
call
inc
or
cmp
pop
fdivs
ss
mov
aaa
sbb
fwait
sbb
inc
mov
ja
loop
in
mov
dec
xchg
mov
mov
ret
mov
rorb
push
test
cli
outsb
jmp
jecxz
jo
in
lods
add
pop
insb
add
mov
stos
ficoml
adc
sahf
test
push
mov
fdivrs
push
test
and
mov
sti
int3
mov
insw
adc
xchg
inc
and
jge
mov
outsb
mov
in
repnz
stc
jnp
andb
mov
gs
cmp
mov
and
dec
cmp
stos
std
insl
in
repz
inc
outsb
sahf
mov
punpckhwd
popf
mov
jnp
pushf
sbb
bound
in
mov
jecxz
mov
dec
out
dec
fstpt
mov
sub
xor
js
jnp
sub
out
ljmp
loope
xchg
or
jae
push
aad
bound
mull
xchg
and
popa
jbe
daa
mov
mov
mov
add
out
mov
xor
dec
loop
mov
stc
pop
xchg
nop
les
aaa
pushf
les
xlat
mov
in
pop
add
inc
js
fimuls
or
sbb
push
jb
push
lahf
cltd
clc
xor
xchg
stc
pop
cmp
call
mov
sahf
nop
psubusb
mov
js
jo
mov
and
mov
lods
ljmp
or
in
cmp
mov
hlt
lahf
cmp
mov
xchg
aaa
fildll
add
inc
inc
roll
stos
call
xor
enter
fst
mov
and
andb
jp
push
xlat
fistpll
out
cs
lods
xchg
in
jge
sub
iret
push
insl
pop
test
add
sbb
lret
xchg
xchg
mov
mov
scas
mov
stc
mov
mov
jo
cmp
movsl
fs
pop
roll
out
inc
nop
stos
pop
dec
rcll
insb
bound
fisubs
leave
js
ljmp
mov
inc
cltd
push
mov
ja
scas
stos
mov
pushf
sub
mov
lods
xorb
lods
cs
pop
jns
js
ret
add
mov
add
fldenv
cli
lods
mov
neg
fcmove
cmpsb
inc
or
xlat
sbb
xor
inc
push
je
mov
hlt
cltd
mov
cli
xchg
inc
sti
cmp
inc
pop
das
rcrl
insb
sbb
sub
aam
mov
xchg
and
inc
inc
loopne
mov
lret
push
jge
loop
push
addb
pop
sbb
arpl
adc
or
push
leave
push
rcr
inc
inc
jnp
push
or
ret
out
inc
mov
sarl
popa
stos
mov
push
inc
aam
aas
and
and
sahf
pop
mov
call
jge
cli
cli
and
inc
aas
outsb
pop
sti
sub
das
outsl
xorb
ds
clc
sti
or
push
cmp
mov
jl
push
inc
inc
into
push
je
push
jg
andl
mov
dec
lods
insb
cmp
mov
and
pop
jg
ljmp
inc
divl
pop
das
cmp
outsl
inc
cmpsb
cmc
sub
flds
gs
scas
jmp
loopne
arpl
out
lods
push
sbb
out
dec
adc
xor
out
and
push
cwtl
pop
jns
mov
adcb
pop
ss
push
or
in
or
add
movsb
ljmp
mov
es
lock
inc
daa
add
push
out
ja
nop
fcmovbe
pop
add
inc
mov
testl
js
lret
jmp
cmc
mov
rorb
and
out
or
rcrb
es
mov
mov
jle
ficoms
push
test
jae
cmpsb
sti
push
mov
add
sbb
iret
jno
cltd
sbb
popa
adc
call
dec
mov
dec
stc
xor
mov
insl
xchg
int
fdivs
or
mov
pop
pop
jmp
mov
pushf
cmp
push
scas
stos
sbb
pop
or
inc
data16
inc
lret
and
pop
ds
mov
repnz
aas
mov
or
iret
test
mov
push
mov
cmp
aas
adc
ret
jg
jg
dec
cld
rorl
adc
jp
in
jns
scas
mov
and
cli
sub
adc
ja
lcall
cli
iret
cmp
sti
imul
int
xchg
sub
or
mov
in
adc
dec
ja
mov
inc
imul
fcmovb
dec
rol
mov
fists
aam
iret
std
sbb
aas
push
mov
xlat
scas
adc
xor
xchg
cmp
repnz
mov
sbb
imul
call
pusha
stos
jmp
je
ds
lahf
fidivrl
xor
repz
xlat
std
divb
repz
pop
test
sbb
inc
daa
mov
lret
iret
das
push
pop
repnz
pushf
pop
dec
dec
and
add
dec
xchg
adc
js
iret
sub
bound
insb
mov
pop
push
mov
lds
sbb
xor
fadds
sbb
mov
int3
pushf
rorl
sub
push
add
jle
xchg
dec
pop
mov
pop
frstor
pop
popa
inc
std
outsl
idivb
hlt
sbb
fdiv
lea
dec
mov
mov
push
cmp
mov
sub
mov
fsubs
bound
inc
push
mov
popf
loop
mov
push
or
dec
or
xchg
repnz
pushf
shrl
dec
repz
cwtl
mov
adc
cmp
es
mov
add
bound
daa
je
rorl
andb
out
mov
mov
insb
mov
xor
dec
dec
push
xor
lods
xchg
cmpb
push
std
repz
or
daa
aam
sahf
jbe
cmp
sub
mov
jns
sbb
pop
xchg
sub
je
dec
push
pop
and
xchg
xor
ret
jnp
add
scas
xor
pop
in
mov
lock
in
mov
cmpb
dec
mov
enter
adc
lcall
push
xchg
sbb
je
in
or
setnp
test
xchg
xorl
mov
int
outsl
mov
fwait
test
sarb
sub
mulb
and
int3
shlb
xlat
xor
mov
mov
add
xchg
sar
mov
cli
ss
mov
out
sbb
repz
clc
shll
ljmp
cmp
es
sub
push
push
and
jecxz,pt
sbb
push
lea
je
movsl
into
jne
adc
loopne
pop
xchg
sub
in
pop
std
fiadds
mov
ljmp
jmp
add
call
sub
incl
jae
add
cmp
adc
add
js
add
in
adc
or
add
xor
roll
push
enter
cs
fs
mov
enter
rcrl
in
mov
adc
mov
inc
add
sbb
divb
pop
incb
push
mov
scas
adc
popa
mov
cld
sbb
rol
jo
xor
push
stc
jmp
cmc
pusha
lods
xchg
mov
dec
mov
cmp
insl
fwait
jge
bound
popa
jae
stos
sub
pop
add
outsl
jae
in
sbb
and
stc
lret
sbb
push
js
jbe
mov
aaa
push
dec
sub
or
inc
xchg
into
adc
mov
aam
add
inc
xor
xchg
mov
les
cmp
or
pop
adc
jp
jnp
repz
pushf
sti
movsl
xor
adc
xor
dec
aam
add
shrb
push
sbb
cwtl
inc
sti
int3
lret
pop
or
pop
paddq
mov
imulb
fimuls
inc
mov
imul
jno
outsl
mov
insb
xchg
orl
fcoml
lcall
cld
push
and
mov
icebp
xchg
or
jl
jne
push
mov
cli
jp
ds
push
ret
fisubrl
iret
xchg
and
push
dec
xchg
xchg
jl
xchg
int3
int3
xor
fs
push
lahf
sbb
lahf
out
mov
push
shll
fmull
ljmp
mov
decb
mov
inc
pop
sub
subb
dec
cmp
inc
adc
mov
aad
jne
jo
dec
xorl
adc
test
adc
add
mov
leave
pop
mov
add
aaa
loopne
or
and
push
inc
sub
imul
arpl
cmp
push
in
cmp
or
push
and
repnz
inc
mov
sbb
mov
inc
add
out
mov
add
arpl
call
push
cmp
cmc
lret
js
mov
scas
inc
jg
and
lods
sub
lret
lret
aad
loop
sahf
ror
pushf
cmpsb
fwait
lcall
pop
add
jbe
pop
arpl
xchg
movsl
aad
pop
adc
mov
jp
dec
mul
cmp
add
mov
lock
adc
sbb
adc
data16
mov
rolb
mov
loope
cmp
pop
and
pop
jno
sub
in
jb,pn
pop
clc
jo
inc
mov
sbb
inc
cmp
push
pop
fcomps
dec
sub
ret
add
push
push
imull
pop
adc
fmuls
sbb
insl
aam
cs
test
cmpsl
mov
xchg
jle
stos
sub
add
inc
cmp
adc
xor
mov
shr
sub
in
pop
inc
and
es
inc
addr16
iret
insl
dec
jnp
jnp
pop
outsl
gs
xchg
mov
mov
mov
adc
adc
cmp
mov
inc
lret
sbb
adcl
mov
das
repnz
jo
xor
lcall
sub
int3
cmp
int3
mov
repz
out
arpl
xchg
js
inc
push
inc
dec
dec
xor
mov
arpl
mov
ljmp
jno
or
in
sub
push
addl
nop
cmp
sbbb
cmp
insl
mov
add
jno
cmpsl
xor
test
test
xor
pusha
cs
scas
ds
pop
pop
mov
pop
test
inc
jecxz
push
scas
xor
pop
repnz
dec
outsl
stc
mov
jle
insb
mov
inc
or
nop
bound
and
or
lock
out
inc
pop
jmp
scas
test
mov
adc
pop
mov
int
cmp
or
ja
inc
mov
lahf
gs
ja
inc
and
xchg
int3
rolb
fwait
pop
insb
stos
pop
scas
sti
xchg
adc
jb
fucom
das
movsb
pop
push
imul
jb
das
jecxz
jb
cmpsl
jae,pt
xchg
test
rcll
sub
jne
repnz
jnp
scas
cmpsl
mov
iret
decl
mov
mov
shlb
enter
push
mov
shll
adc
sub
rcr
loope
or
mov
stos
xor
sub
sbb
sub
in
movsl
mov
mov
scas
fidivrs
cmpl
mov
sbb
mov
jb
pop
stc
xor
mov
movl
cmpsb
sarl
pop
mov
dec
test
dec
dec
sbb
xor
jge
les
push
pop
inc
movsl
test
inc
adc
outsb
cld
ret
sub
inc
call
mov
iret
andb
mov
ret
das
addb
leave
pop
aaa
dec
mov
mov
jmp
popf
push
mov
add
pop
scas
lock
push
popa
js
adc
hlt
outsb
dec
sub
sbb
adc
mov
push
cmp
push
push
push
js
imul
add
xchg
pop
je
fiaddl
mov
jbe
ror
xchg
aaa
popaw
ljmp
sub
cmpsl
cmp
pop
into
pop
or
inc
inc
sub
lret
in
mov
adc
cli
xor
sar
cltd
fimuls
das
js
and
pusha
fldcw
and
mov
inc
ret
mov
ja
mov
inc
jae
test
adc
jno
fstp
add
and
pushf
xor
jmp
cmpsl
or
mov
ret
movsl
and
pop
xor
or
jb
cltd
mov
mov
orl
add
fstpl
add
push
nop
stc
clc
push
out
mov
out
or
adc
repnz
xchg
inc
out
adc
ds
inc
sbb
dec
xor
mov
jecxz
cwtl
js
sbb
add
inc
clc
test
movsl
jae
or
jle
dec
push
aaa
jo
push
add
jmp
inc
and
cmpsl
cmp
ficoml
fiaddl
adc
xor
sbb
mov
out
adc
pop
sub
add
mov
ds
jns
test
sub
leave
movsl
inc
pop
inc
dec
add
lods
les
add
aad
adc
test
jmp
stos
pop
xchg
fstpl
xchg
mov
pop
cmc
inc
movsb
pop
ljmp
mov
add
add
out
rclb
cmp
out
roll
pop
and
push
fcomps
pushf
dec
repnz
jecxz
or
push
lods
data16
ret
test
gs
sbb
xchg
pusha
aam
in
mov
je
push
lahf
push
fnstenv
cltd
sbb
mov
mov
dec
xchg
sti
jp
dec
imul
stos
sti
data16
mov
push
addr16
in
push
adc
outsb
or
lock
or
push
in
sbb
push
mov
mov
push
jb
imul
jae
cmp
push
pop
outsb
pusha
fisubrs
test
mov
mov
js
and
pop
cmp
inc
out
lods
dec
mov
or
shrl
jbe
call
or
movsl
pop
insl
xchg
xchg
repnz
cmovle
into
sub
cld
sahf
mov
mov
inc
jne
xlat
dec
xchg
jae
inc
mov
sbb
or
jecxz
cmp
cmp
jl
cmp
dec
push
ficomps
addb
pop
xchg
lret
iret
js
dec
mov
sub
aad
popa
inc
outsl
push
jnp
mov
dec
inc
dec
stos
repz
icebp
leave
divb
inc
dec
mov
fnstenv
xor
mov
iret
rcr
jmp
inc
mov
cld
cs
ret
pop
cmp
cmpsb
mov
enter
xlat
and
popa
das
sbb
or
notb
mov
iret
fcompl
cmp
xor
xor
rcl
cmp
in
xor
adc
add
push
add
mov
add
xchg
loop
xchg
mov
xor
dec
nop
and
testb
push
je
mov
lret
lea
sub
dec
pop
sbb
lods
sub
loopne
popl
pop
imul
js
cmp
fildll
sti
pop
jg
mov
adc
add
mov
out
imul
jno
shrb
push
mov
add
cltd
xor
shl
popf
adc
xchg
adc
jmp
lods
and
addr16
push
pushl
shl
cmpsb
sbb
pop
lea
in
fisubs
xchg
add
dec
repnz
hlt
inc
test
fistpl
int3
jnp
cmp
and
sarb
jno
jl
imul
inc
cmp
repz
out
out
mov
sbb
add
and
fwait
or
addr16
pop
loope
aam
lods
mov
jmp
fwait
push
in
test
ror
adc
add
and
inc
test
inc
push
mov
std
cltd
in
aad
adc
stos
clc
aad
jnp
out
fdivl
je
mov
sbb
xchg
jmp
bound
xor
ret
stos
nop
or
sbb
addr16
mov
aaa
imul
lea
sbb
jbe
loope
mov
jo
scas
push
sub
movsb
int
push
push
cmp
sti
mov
stc
pop
iret
mov
test
adc
into
insl
shlb
int
das
in
xchg
or
jne
cld
xlat
cmc
icebp
je
cs
popf
add
cmpb
dec
daa
mov
xor
mov
add
sbb
jb
repnz
cmp
js
lods
into
fwait
adc
push
jae
or
ljmp
adcl
sub
xchg
xor
add
mov
inc
add
jne
inc
xchg
or
and
jno
push
pop
rorb
inc
aam
outsl
mov
sub
push
pop
xabort
pop
push
out
dec
inc
cmp
ret
daa
mov
andl
sub
jl
mov
xchg
pop
push
repz
test
xchg
jecxz
or
gs
xor
stos
leave
loope
inc
add
or
and
mov
outsl
imul
lret
scas
cmp
add
lcall
rcr
lods
roll
adcl
ss
sub
ret
sbb
push
mov
in
mov
stos
repnz
push
repnz
js
dec
into
aaa
sahf
cmp
dec
or
mov
pop
and
inc
ja
gs
xchg
enter
jmp
insl
fsts
or
jns
sbb
ficoms
hlt
adc
out
popa
inc
fisubs
insb
jo
mov
mov
ja
adc
and
or
lret
xchg
stos
cmpsb
xchg
es
ret
pop
addr16
sub
rolb
cmpb
add
cmp
arpl
jmp
ret
mov
outsb
scas
mov
shll
jnp
and
in
andl
das
in
xlat
push
and
cld
lods
dec
fdivl
and
xor
xor
dec
pop
adc
aam
mov
outsb
arpl
icebp
mov
pop
dec
xlat
cld
mov
xor
divb
es
inc
std
mov
push
xchg
stc
add
aad
subb
lcall
xchg
sar
data16
inc
mov
pop
mov
js
lds
std
std
loope
xor
pop
fildl
sub
sub
mov
push
out
inc
imul
pusha
lcall
adc
loope
cmp
lods
push
mov
dec
or
rorl
sbbl
sbb
sbb
mov
aaa
mov
pop
mov
das
ja
mov
test
movl
xchg
push
rorb
push
aaa
imul
jecxz
mov
dec
jl
mov
push
fistl
or
aad
sbb
pop
movsb
jne
mov
inc
jo
rcrb
imul
test
lods
xor
pop
stos
mov
out
or
lds
je
fimuls
test
xchg
or
cmp
sbb
add
call
dec
sbb
cmp
sub
gs
inc
mov
outsb
inc
cmp
xchg
or
neg
ss
add
mov
mov
push
push
adc
mov
xchg
sub
mov
cmp
icebp
shrb
xor
dec
je
cmp
mov
jmp
sub
mov
pop
push
shlb
repnz
mov
dec
jnp
push
cmc
jg
fstp
pop
sarl
sub
add
jle
mov
shrb
arpl
lcall
je
xchg
dec
imul
out
pushf
insb
fs
andl
sarb
cltd
out
dec
repnz
and
mov
push
push
subb
js
out
fisubs
adc
je
mov
stos
jo
call
mov
adc
insb
sbb
jno
addr16
cmc
xchg
add
mov
ja
fcomps
mov
fdivs
mov
ficomps
dec
mov
sub
pushf
push
pop
es
pop
add
lods
movsb
cmpsb
sbb
loope
sbb
popf
cld
divps
gs
mov
ret
or
fmull
jecxz
inc
or
pop
cs
jnp
cltd
push
cmp
inc
mov
or
daa
adc
sbb
icebp
lret
or
in
stos
or
repnz
lock
cmp
jle
cmp
imul
negl
sub
mov
es
out
pop
test
sbb
or
mov
mov
mov
xor
cwtl
ja
lods
jo
in
out
xchg
cwtl
cmpsb
mov
mov
mov
cmpsl
cmp
jg
push
xchg
xchg
stos
sub
in
aad
movsl
cmp
sub
pop
fcompl
lods
adc
pop
loopne
sub
xchg
gs
int
pop
dec
popa
aaa
pop
dec
sub
push
imul
cmp
mov
js
jnp
adc
mov
leave
movsl
imul
xor
pop
ds
test
ret
jnp
cmp
clc
jmp
cs
gs
and
dec
cmc
and
int3
ss
out
outsl
mov
lock
mov
aas
mul
mov
mov
repnz
mov
or
mov
adc
lret
aad
cmp
arpl
sbb
cmp
pop
pop
inc
and
pop
push
lea
cmp
pop
test
clc
mov
cwtl
testb
out
and
orb
popa
aas
jp
inc
xor
fsub
dec
mov
push
or
and
in
fcmovnbe
or
adc
and
jg
sbb
cmovl
insl
or
scas
in
cmp
or
jne
ret
add
shrl
lea
ret
push
inc
sbb
notb
mov
jge
aam
stos
jb
cltd
xor
test
inc
dec
adc
xchg
ret
dec
mov
std
in
hlt
in
je
ret
and
dec
testl
mov
jmp
subb
pop
movsl
sub
mov
jmp
sub
and
sub
cmp
aaa
outsl
movsb
jecxz
adc
sub
xchg
repnz
xor
xor
push
insb
lcall
cmp
add
mov
nop
pusha
scas
movsb
and
adc
lds
cltd
loop
test
push
mov
xorps
mov
mov
add
add
daa
repnz
test
fucom
outsb
push
sub
mov
lods
rorb
cltd
push
mov
dec
cs
sbb
out
mov
fsubs
mov
es
or
decl
and
ret
inc
dec
push
out
and
push
ja
adc
mov
nop
mov
push
push
enter
push
call
add
mov
pop
inc
movsb
push
pop
xorl
or
sbb
ss
ret
push
jb
div
jge
arpl
imul
jb
popa
or
dec
mov
aaa
insl
jae
sub
xor
xchg
and
pop
lahf
fcomip
in
icebp
and
push
xchg
mov
pop
dec
inc
xchg
lods
cwtl
dec
and
cmp
aaa
mov
add
lahf
cmp
adc
jnp
insb
xchg
add
sbb
sbb
jle
sub
out
push
sub
movsl
ja
pop
xchg
lds
rdmsr
sbb
lret
test
loope
sarb
lret
pusha
mov
int
add
lcall
sub
mov
shrb
push
pop
add
popf
xor
test
imul
mov
insb
jle
andl
loopne
sub
pusha
and
arpl
jne
cmc
sbb
cmpsl
lea
jl
pop
bound
xor
dec
fisubs
insl
pushf
ss
call
sti
dec
enterw
pop
fildll
mov
out
stos
arpl
pop
jmp
cmp
xchg
je
push
sub
add
out
inc
mov
movsl
mov
xchg
inc
xor
cmp
out
push
cltd
addb
hlt
test
leave
push
pop
jns
fsubl
sbb
add
adc
dec
push
add
dec
cs
rol
sahf
gs
fstpt
xchg
js
add
in
adc
fcomi
dec
cmovae
adc
xchg
lahf
and
pop
sub
xchg
mov
scas
adc
aad
ljmp
push
and
lods
insb
mov
repnz
mov
pop
imul
mov
adc
dec
jmp
lcall
and
xchg
adc
aaa
mov
shl
jg
jle
adc
xchg
jg
sub
fcmove
or
cmc
jns
xchg
orb
pop
or
repz
sbb
lds
insl
sub
aas
push
scas
add
xchg
int3
ret
pop
dec
les
dec
stc
sub
mov
dec
sbb
xchg
mov
ret
push
sbb
fmulp
stc
xchg
pushl
shl
fsubrp
and
ljmp
popf
in
stos
or
mov
aam
push
aad
dec
stc
loopne
stc
imul
fsubr
push
cli
aam
cmp
clc
dec
pusha
adc
and
pop
sub
sbb
sbb
out
inc
pop
test
in
sbb
repz
mov
cmp
inc
inc
push
xchg
inc
sub
stos
repnz
jne
xlat
ljmp
mov
jae
xchg
xlat
outsb
pop
cmpsl
jle
xchg
das
ret
insb
xlat
stos
lds
imul
inc
sbb
mov
push
stos
lds
dec
and
xchg
push
addb
xchg
pop
mov
sub
scas
push
imul
out
xor
pop
sarl
mov
mov
testb
jg
push
push
pusha
aas
repz
imul
sub
shr
jecxz
add
jle
out
sbb
jge
sbb
dec
jl
aas
cld
and
adc
adc
mov
dec
dec
pop
stos
inc
cmp
enter
fwait
pushf
push
and
dec
pop
jbe
icebp
cmp
dec
sub
imul
aad
mov
jecxz
in
repnz
jns
mov
pop
dec
adc
jg
lcall
loop
sub
daa
ds
daa
iret
lods
dec
rolb
cmp
mov
pop
in
movsl
dec
repnz
clc
or
and
xchg
mov
popa
orb
jnp
sbb
mov
test
inc
inc
int
sbb
repz
enter
mov
adc
xchg
in
mov
mov
inc
xchg
push
or
mov
dec
xchg
mov
imul
xchg
mov
mov
inc
and
and
inc
xor
dec
xor
leave
or
js
ljmp
cltd
test
push
dec
mov
fcoml
rorb
mov
push
jp
pop
cld
out
mov
sbb
scas
icebp
notl
not
dec
ja
jecxz
and
sbb
inc
adc
pop
pop
push
sbb
ss
xor
cmovbe
aad
cld
addb
sbb
jb
out
adc
push
bound
pop
dec
push
clc
adc
xlat
mov
mov
popa
fwait
gs
jne
mov
fs
fnsave
pushf
dec
aam
shlb
lret
sub
mov
data16
jns
shlb
pop
sbb
mov
lods
in
and
lahf
xchg
jbe
popf
adc
cmp
pop
sbb
leave
xor
fwait
mov
push
movb
push
pushf
xchg
mov
roll
jb
les
data16
test
xchg
cltd
mov
int
daa
pop
imul
ret
sub
ret
ffreep
sub
pop
cmpsl
lahf
dec
mov
je
mov
sarb
jecxz
aas
jno
cmp
movsl
rcrl
pop
insl
push
sub
iret
int
inc
jge
adc
push
mov
push
pop
sahf
cmp
in
mov
imul
xor
or
or
sbb
mov
pusha
testb
push
movsl
inc
outsb
stos
jle
pop
in
jmp
and
mov
incb
std
add
out
loop
inc
sarl
push
aam
fs
or
movsl
test
sbb
sahf
xchg
mov
mov
mov
mov
lret
fst
or
movsl
lock
aad
in
and
iret
fdivrs
pushf
aam
adc
in
mov
mov
add
jbe
pusha
sbb
lea
nop
inc
stc
mov
push
in
dec
adc
lcall
add
aad
sub
popa
add
xlat
jge
sbb
inc
adc
or
push
add
adcl
push
xchg
dec
dec
neg
dec
outsl
add
mov
cs
xor
stos
mov
test
insb
sub
rcrl
xchg
cs
outsl
cmp
pop
popa
lods
xor
jo
mov
stc
les
or
pop
es
push
out
jne
js
iret
fstps
mov
push
test
dec
and
cmp
mov
mov
xchg
lods
outsl
xor
lcall
jg
jmp
flds
imul
addr16
inc
pop
mov
jb
jle
in
and
sbb
stos
cmp
mov
sbb
push
jo
movsb
xchg
test
ret
stc
fstp
clc
es
mov
aad
movsb
jne
sbb
mov
inc
jmp
xchg
fcmovnbe
adcb
xchg
adc
leave
out
add
cmp
mov
pop
loopne
fucomp
xor
jno
sbb
mov
push
inc
cmc
adc
stos
xchg
xor
movsb
out
pusha
daa
sbb
bound
xlat
mov
lea
inc
outsb
xor
pop
push
push
inc
ret
dec
mov
push
jmp
cwtd
lock
fnstenv
inc
ret
movsl
enter
xchg
sub
mov
push
fsubr
shl
mov
mov
icebp
ret
les
ret
dec
fwait
repnz
push
cmp
xlat
mov
scas
cmp
xor
mov
mov
addr16
in
sahf
mov
inc
jns
adc
mov
dec
das
inc
stos
fmuls
jns
inc
pushf
xor
movsw
mov
sub
pop
test
cmp
or
adc
mov
mov
daa
aas
dec
or
stos
mov
ds
out
xchg
in
out
test
jb
push
cmpsb
push
fistps
movsl
pusha
stos
xor
call
fimuls
fwait
repz
outsb
ja
hlt
andl
loop
adc
leave
loop
jo
addr16
lcall
xchg
adc
dec
jmp
cmp
inc
lret
add
pop
adc
outsb
inc
js
mov
jo
adc
pop
iret
cmp
in
mov
nop
sub
cmp
cmp
dec
daa
xchg
daa
movsl
push
nop
cmp
ljmp
shr
insb
fstl
jg
or
pop
adc
movsl
out
insl
jne
lcall
cmp
and
sbb
mov
lods
add
and
xchg
or
inc
test
dec
inc
add
loopne
sub
xchg
xor
jns
mov
mov
stos
mov
cmp
dec
cwtl
sahf
in
jge
popf
test
notl
mov
mov
pop
jl
cmp
icebp
inc
addr16
mov
sub
mov
fcoms
fistpl
cmp
into
lea
push
imul
stc
and
xor
mov
pop
out
stos
test
in
xlat
jle
xchg
cltd
add
jle
push
adc
dec
push
pop
mov
leave
rolb
leave
sti
xor
cmp
outsb
inc
pop
cwtl
inc
jbe
jne
lea
clc
sbb
push
dec
lcall
mov
pusha
sub
mov
sbb
bound
adcb
sbb
mov
mov
mov
or
xlat
jecxz
fstps
loope
cmpsl
sub
pop
cmc
pop
stc
inc
arpl
adc
arpl
push
and
mov
cli
mov
adcb
aas
in
outsl
stos
je
inc
and
sub
push
jae
xor
nop
xlat
adc
or
sub
jge
adc
push
mov
sbb
add
cld
sbb
mov
jg
push
popa
testb
das
mov
mov
mov
inc
add
or
or
mov
mov
cmc
pop
dec
cld
or
pop
test
call
scas
push
cmp
rcll
sub
pusha
shl
inc
ret
lahf
stc
or
fidivl
sbb
pop
enter
out
cs
hlt
cmp
sbb
pop
roll
adc
lea
xor
in
int
arpl
iret
stos
xor
ffree
mov
xchg
idivl
add
jo
push
push
push
stos
jns
leave
mov
jbe
aam
mov
fs
daa
xor
lret
jb
or
jns
add
xor
ret
lock
test
jecxz
inc
cmp
sub
mov
repz
adc
movsb
leave
loop
cmc
push
out
mov
xor
xor
xchg
cli
adc
notb
mov
cltd
rorb
mov
inc
and
lea
aaa
cltd
dec
aaa
imulb
xor
ficompl
mov
add
cmpsl
aam
push
in
mov
je
dec
add
mov
or
sarl
lods
push
pop
xor
dec
rcrb
fs
hlt
rcrb
xchg
push
dec
xchg
adc
rcrl
mov
add
xchg
popa
cmpsb
xor
pop
push
ret
sub
jb
mov
push
idivl
outsl
pop
sub
sub
add
outsl
mov
ds
pop
or
push
mov
mov
lret
cmp
or
push
push
lahf
movb
mov
mov
add
js
adc
jg
scas
push
fdivrs
das
sub
clc
scas
push
adc
push
jb
aaa
sub
inc
lds
add
test
jecxz
jnp
adc
add
mov
leave
pop
loopne
add
out
mov
jb
xor
sbb
sbb
push
sbb
je
inc
sub
arpl
int3
mov
int3
adc
je
mov
stc
pop
cmp
mov
push
adc
ret
pop
stos
lahf
push
lret
aaa
testl
in
xor
shrl
loop
int3
inc
cmp
cmp
stc
aaa
inc
iret
popa
js
adc
push
cltd
pushf
in
xor
or
add
mov
dec
popa
aam
scas
cmp
jmp
dec
test
sub
jne
mov
lds
or
cmp
push
mov
xchg
xchg
sub
add
sub
ret
cmp
xor
mov
js
xchg
fdivs
ret
inc
divb
push
mov
jmp
dec
lea
or
and
enter
push
shl
mov
and
push
or
loope
dec
test
imul
xchg
adc
xchg
xchg
dec
movsl
mov
data16
or
pop
xor
in
and
sub
arpl
pop
test
xchg
popa
add
dec
popa
mov
add
mov
sub
jns
fldlg2
cs
test
out
pop
push
inc
add
mov
cli
or
movsl
fwait
std
xor
inc
test
sub
rol
adc
sbb
jle
xchg
iret
fldenv
inc
ror
and
inc
sti
mov
imul
lods
test
inc
mov
into
js
or
mov
sub
xlat
or
out
ret
add
and
movsl
lahf
xchg
dec
jp
jmp
jmp
gs
push
mov
sbb
jne
mov
les
sub
inc
xor
cmp
pop
aad
outsl
scas
xchg
push
jnp
imul
lock
lea
xor
sbb
out
js
cmp
cld
icebp
mov
negb
bound
sub
lock
stc
outsb
bnd
jg
lds
les
pop
and
add
loope
mov
adc
daa
ret
xor
fsubr
lret
mov
mov
les
in
or
pop
xchg
pop
mov
repz
mov
rclb
push
repz
xchg
fidivrl
lret
pop
cwtl
repnz
ss
sub
pop
roll
jl
push
pop
bound
or
aad
cmc
ret
idivb
xchg
or
test
inc
fdivp
add
and
fisttpl
push
pop
push
inc
xchg
call
dec
mov
test
ret
neg
or
xchg
push
inc
xlat
inc
xlat
lock
lret
jecxz
inc
mov
adc
jae
stos
cmp
loope
jno
dec
push
cmp
push
lret
sub
enter
add
adc
xchg
lds
pop
sbb
cmp
jl
ds
imul
sbb
pop
aas
lret
mov
or
andl
xor
out
lods
sbb
xchg
add
repnz
mov
out
ret
ljmp
inc
xor
bound
mov
dec
sahf
mov
out
mov
movsl
out
aas
mov
in
mov
dec
mov
inc
outsb
mov
add
in
pop
sub
into
pop
out
mov
push
and
add
aaa
aaa
mov
loop
xor
adc
inc
stos
js
outsb
fs
hlt
push
or
mov
mov
fsubrs
fsubrl
fcomps
call
cmpl
inc
jmp
add
cltd
cmp
jne
mov
cmp
push
lcall
fists
and
jmp
jo
sub
mov
call
push
insl
andl
mov
aad
lea
jle
in
dec
pop
dec
mov
or
xchg
xor
mov
fcomi
imul
xlat
or
popf
lcall
pop
mov
lock
adcb
incl
cwtl
mov
pusha
pop
sbb
sub
lock
sbb
out
jle
sbb
mov
jo
xchg
xchg
add
adc
xor
inc
xor
rclb
push
cmp
add
fs
fldt
movsb
lret
leave
xchg
sub
stos
fldenv
mov
loop
pusha
popf
mov
xor
test
push
cltd
ss
xchg
mov
adc
fisubrs
rolb
imul
sub
bound
mov
in
test
lods
stos
cmpb
es
mov
jmp
push
cmpsb
push
in
daa
cmp
push
sub
outsl
js
pop
mov
scas
pop
or
loopne
jg
or
in
pop
dec
leave
int
cli
fwait
insb
add
xchg
das
sbb
clc
dec
jne
jl
and
sbbl
scas
in
sbb
mov
lea
outsb
inc
shrl
add
lret
xorb
es
je
jge
mov
jns
xchg
arpl
jmp
mov
jecxz
mov
addr16
xor
lea
enter
pop
add
dec
pandn
fstpl
test
lock
lea
xchg
xor
or
hlt
cmp
repz
std
repz
push
push
xor
push
cmpsb
push
fstps
ljmp
push
sub
lahf
pop
cmp
sub
adc
mov
cmp
push
push
xchg
and
adc
movsb
mov
jno
jg
jg
mov
dec
xchg
stos
leave
hlt
mov
das
jb
dec
lock
xchg
mov
popa
lret
lret
mov
shlb
mov
push
jecxz
inc
cs
push
push
rol
shl
adc
lods
mov
lahf
out
push
addr16
and
inc
inc
iret
and
aad
xor
repnz
aad
in
mov
aaa
mov
push
gs
negl
jno
cmp
ja
mov
iret
scas
jmp
jo
jp
ss
lret
xchg
cmp
out
lds
es
icebp
fbstp
aaa
ljmp
dec
xchg
movsb
pop
lret
inc
into
call
push
int
push
std
xor
in
popa
sbb
add
xorl
rorb
mov
dec
xlat
loope
push
or
popf
xchg
inc
jle
mov
loop
inc
insl
or
movsl
push
jb
in
stos
push
jmp
mov
repnz
cmp
int3
psrld
cmp
push
xchg
xor
cmp
inc
xlat
mov
insb
xlat
dec
and
jmp
jmp
jl
jg
pop
nop
popf
adc
adc
mov
add
aaa
xchg
insl
pop
out
out
loope
fdivl
xchg
sub
dec
cmc
jl
jge
pusha
addr16
fs
sub
scas
inc
movsl
std
pop
enter
or
xor
fwait
ror
xor
fisubl
mov
jecxz
ja
mul
jecxz
addr16
mov
mov
mov
adc
cmc
mov
mov
xlat
ret
std
fcomps
test
xchg
cmp
inc
out
add
or
jb
inc
fmul
xor
rolb
std
outsb
pop
loop
sbb
lcall
pop
pop
mov
out
or
jne
test
xor
mov
dec
mov
push
lret
popf
lcall
push
icebp
xor
enter
in
and
popa
mov
sub
pop
and
aam
out
and
inc
mov
in
xchg
insb
cmpsb
xchg
mov
dec
int
stos
js
sahf
mov
iret
mov
dec
int3
mov
hlt
in
popf
pop
lahf
scas
inc
aas
mov
int
and
fisttpll
data16
add
xchg
data16
mov
pop
xor
aaa
inc
or
and
fimuls
das
imul
jge
std
shufps
jl
mov
xor
data16
adc
jns
push
outsb
mov
xchg
icebp
inc
and
add
jbe
neg
pop
xlat
loop
and
mov
and
jecxz
test
or
push
call
jg
xchg
aas
adc
fisttps
and
mov
movsb
cmp
lods
sbb
cld
and
daa
icebp
sub
and
sub
fcos
mov
cmpsb
out
outsl
inc
scas
sub
fcmovbe
js
jno
out
mov
xor
lcall
pushf
rcl
push
rorl
and
in
pop
dec
cltd
leave
int3
and
pushf
or
iret
and
movsl
xor
jg
int
and
or
cmp
lret
mov
sub
hlt
je
push
jns
outsl
and
jae
mov
inc
mov
mov
popl
sbb
push
popa
fs
fucomp
rorb
push
les
mov
addb
in
mov
repz
dec
sub
or
fsubrl
bound
add
les
inc
mov
je
out
xor
adc
push
jle
jb
lods
sub
call
loopne
sbbb
push
js
pushf
xor
mov
xchg
dec
jl
inc
imul
lods
cmp
add
mov
lods
popf
and
jmp
out
jge
cmp
mov
scas
stc
cmc
cmp
pop
jnp
cwtl
xlat
cmpsl
insb
dec
jne
mov
sub
clc
mov
loope
jl
sbb
arpl
insb
call
es
in
add
sub
xchg
mov
mov
test
mov
adc
aaa
and
jmp
sbb
jmp
aam
mov
pushf
les
test
loope
xchg
fcomps
mov
pop
and
mov
andl
repz
dec
sub
adc
enter
jle
push
leave
imul
xchg
daa
popa
aaa
jnp
imul
lcall
jg
xor
mov
out
dec
int3
jmp
xchg
dec
mov
push
cmpsb
daa
push
ret
cmp
lret
push
sbb
pop
jge
je
imul
fimull
les
dec
jge
ja
shlb
push
enter
out
notl
adc
lods
pop
xchg
mov
std
jle
xchg
mov
cli
push
je
pop
out
clc
movsl
ja
mov
dec
sub
jb
test
dec
repz
push
add
test
sbb
and
push
std
into
pop
jae
jmp
inc
sub
cmp
lahf
xor
test
dec
jl
fldenv
jbe
mov
aad
jbe
sub
addb
out
push
outsl
xor
xor
inc
cs
hlt
js
movb
adc
enter
adc
stos
xchg
inc
sub
sarl
mov
iret
cld
aad
jo
cwtl
mov
xor
arpl
nop
mov
lret
jge
movsb
cmc
or
mov
mov
lcall
xchg
sbb
imul
and
repz
data16
je
pop
jg
push
push
and
movsl
or
imul
mov
cltd
into
aas
pop
aas
lahf
dec
int3
sar
in
jg
fwait
cmp
xor
xor
out
xchg
lods
jecxz
rol
adc
mov
jge
mov
enter
call
dec
mov
inc
push
mov
pop
rolb
frstor
incb
lret
loopne
and
and
inc
enter
mov
sbb
pop
jb
popf
sbb
pop
ja
loopne
rcrb
cmpsb
insl
add
clc
adc
cmc
jbe
inc
cmp
mov
int
jge
jp
push
jno
xor
es
int
and
pusha
cltd
arpl
popf
xor
dec
inc
sub
pop
jmp
je
pop
or
push
mov
mov
inc
nop
jnp
push
cmpsb
push
ret
repz
cmp
divb
add
out
std
es
fs
mov
mov
flds
aad
dec
mov
imul
test
in
cmp
push
mov
data16
jo
mov
fiaddl
loope
inc
imul
inc
in
cmp
popf
inc
add
shrl
setle
pushf
pop
add
sbb
pusha
mov
lds
jmp
je
sbb
ret
test
nop
mov
xor
xchg
sub
adcb
xlat
gs
dec
mov
dec
sub
int3
and
js
fdivs
and
ja
ret
mov
stos
cmp
lret
push
or
xlat
repnz
mov
nop
pop
rol
subl
icebp
mov
fidivl
dec
sahf
cmc
pop
mov
aas
xchg
mov
addr16
dec
ret
mov
fidivrs
and
inc
inc
in
stos
arpl
add
mov
mov
mov
mov
mov
pusha
in
mov
jns
orl
cmp
cltd
add
stc
or
test
lcall
fnstenv
cmp
dec
imul
jnp
xor
and
inc
adc
sbb
out
jl
mov
mov
mov
push
xchg
unpckhps
jae
push
js
adc
dec
jb
xchg
lds
repnz
inc
dec
jmp
inc
popa
jmp
inc
aas
cmpsl
loope
test
out
push
je
xor
sub
je
dec
jmp
shll
jmp
inc
in
out
les
mov
data16
pop
xchg
movb
iret
inc
xor
inc
xchg
xor
jo
jge
mov
ja
cld
mov
sar
fwait
jnp
mov
aas
mov
adc
pushf
jp
or
xor
cmc
negb
inc
int
cwtl
add
jbe
jb
ret
jbe
fisubrs
lahf
rcll
js
stc
and
lcall
sti
adc
pushf
mov
cltd
mov
pop
hlt
and
lcall
inc
jge
jb,pn
xor
stos
pop
mov
imul
mov
adcl
js
addb
sub
jecxz
sbb
lahf
dec
xchg
xor
gs
sti
pop
dec
aad
leave
les
int
sub
xchg
or
loope
imul
cmp
js
mov
fwait
push
inc
lret
dec
lods
add
jg
in
mov
cmp
shl
enter
test
dec
inc
mov
mov
adc
call
dec
loop
ret
enter
dec
jns
lods
inc
subl
adc
movsl
and
adc
cmp
cmp
out
push
mov
push
xchg
mov
lock
lods
flds
sbb
paddusw
mulb
idivl
mov
xchg
sahf
clc
dec
push
loopne
adc
orb
inc
push
testb
cmp
push
ror
mov
inc
jnp
push
aad
mov
or
out
out
test
test
adc
mov
loope
fsts
push
lahf
lahf
cli
stos
fsubs
pop
fiaddl
cmp
mov
jp
call
arpl
push
in
sub
ljmp
shrl
mov
jb
arpl
repnz
jno
in
jl
mov
adc
cmp
lcall
add
dec
lock
sub
outsb
dec
inc
loope
frndint
mov
push
loope
sub
dec
push
lahf
add
dec
ja
in
lea
cmp
leave
mov
push
iret
cwtl
jle
or
mov
mov
das
aad
icebp
enter
rclb
mov
sarb
sbb
or
cld
bound
or
popf
jmp
hlt
in
mov
ficoml
lret
cmc
ret
push
mov
cmp
imul
arpl
lds
std
push
jecxz
ds
js
adc
xor
dec
lret
add
ret
pop
fmuls
sub
aaa
cld
cmp
adc
add
adc
dec
pushf
jp
pop
mov
test
andl
and
outsl
test
ficoms
lea
sub
add
and
in
adc
mov
stos
cwtl
pop
xchg
push
fdivl
out
mov
aas
orl
out
push
add
cmp
leave
xorb
jne
test
jb
sti
or
mov
mov
add
cmp
xor
movsl
out
scas
ficomps
cmp
ret
and
xor
stc
pop
mov
push
lret
xlat
push
mov
mov
jle
sub
xor
test
vmwrite
lea
add
xchg
cmp
imul
test
xchg
and
jmp
sub
or
pop
pop
je
xor
nop
cwtl
or
pop
sahf
icebp
add
mov
sti
or
adc
fidivrs
bsf
stc
push
loop
cmp
lcall
push
cli
lahf
inc
fcmovne
lea
into
xor
repz
xchg
or
xlat
jge
ret
dec
jp
stc
roll
push
insb
mov
incb
arpl
fcmovbe
call
and
cmp
icebp
sub
call
out
sar
pop
flds
imul
adc
inc
pusha
cmpsl
popa
repz
push
repz
es
out
inc
xchg
xcrypt-cfb
cmpsl
loope
or
jne
pushf
jl
jmp
jecxz
fstpl
push
test
sub
not
imul
mov
stos
jg
aad
imul
mov
into
pusha
or
jo
mov
loopne
inc
inc
jae
je
out
dec
sbb
mov
xor
stc
int3
dec
xchg
xor
dec
lods
addr16
sti
sahf
fbstp
sbb
shl
fstpl
nop
xor
push
shrb
push
sbb
push
shrl
add
cmp
sbb
outsb
jl
ret
aam
out
ds
into
ficomps
jmp
arpl
dec
xacquire
aas
jge
int3
scas
rcrl
cmp
nop
ja
cmp
stos
jne
cmp
ret
pop
cwtl
jbe
loope
mov
mov
jp
bound
mov
add
sub
or
sbb
adc
sub
cmp
xor
jp
mov
adcb
push
dec
xchg
push
sub
in
adc
imul
add
lcall
scas
jo
call
incb
sbb
xchg
xor
ja
push
and
mov
mov
imulb
dec
mov
mov
jg
adc
and
dec
int
cmp
leave
aad
inc
mov
or
out
arpl
insl
dec
xchg
scas
jne
jns
out
jecxz
sbb
cltd
dec
movsb
leave
push
neg
stc
push
das
or
dec
testl
xchg
dec
jo
adc
xchg
inc
jae
inc
dec
push
leave
mov
pop
dec
call
cld
push
mov
dec
loop
inc
jo
cmp
adc
repz
aad
sub
loopne
jb
int
ret
pop
popl
fcmovnbe
inc
mov
mov
sub
xor
loope
or
fldenv
xor
dec
scas
push
sbb
and
adc
sti
mov
xchg
mov
cmp
repz
dec
lret
sti
sbb
adc
inc
negl
int
jecxz
xchg
stos
dec
cmp
mov
iret
add
scas
sti
mov
das
sub
push
mov
mov
sbb
leave
daa
daa
mov
lahf
mov
fistpll
jnp
xor
out
insb
sbb
stc
sub
push
pop
ja
dec
mov
inc
push
add
inc
lods
aam
xchg
jmp
dec
repnz
imul
aaa
hlt
or
sahf
mov
push
pusha
push
inc
pop
sbbl
inc
in
gs
in
movsb
push
jp
push
mov
jge
jbe
sbbl
fistl
mov
mov
or
inc
or
mov
push
xchg
mov
adc
dec
adc
pushf
mov
push
inc
or
mov
xchg
clc
jns
cmp
aas
add
in
dec
fildl
cmp
xchg
ljmp
inc
popf
or
sub
cwtl
or
mov
sahf
popf
cwtl
mov
jo
ret
mov
cmp
lods
mov
push
cmp
and
loopne
jmp
int3
jnp
cmpsl
stc
pop
enter
push
shrb
xor
xchg
shl
call
push
jge
push
sbb
mov
cmc
cmpsb
lahf
ljmp
arpl
jge
jg
shrl
movsb
sub
adc
adc
xor
inc
popa
xchg
test
les
pop
dec
push
fdivrp
out
add
mov
push
popl
out
bound
mov
stc
fnstsw
pop
xlat
int3
adc
pusha
mov
push
xor
jo
mov
loop
cmp
inc
cmp
vpaddusb
sbb
rcll
out
sub
pusha
xor
fstl
out
sub
or
scas
jnp
add
not
clc
inc
lahf
into
adc
xor
rcrb
mov
das
xor
in
sub
jno
and
les
adc
jb
xchg
push
sete
stos
cs
jmp
dec
out
push
rcr
adc
movsl
cmpsb
xchg
in
and
sub
sub
sbb
sub
test
push
iret
push
mov
push
mov
add
sub
in
pushf
pop
or
mov
jb
adc
in
jge
mov
xor
jbe
fs
cmpsb
push
push
inc
or
cltd
push
push
add
mov
arpl
cmp
adc
add
bound
cmp
out
cwtl
ljmp
pop
or
xchg
inc
sbb
loop
fisttps
or
sahf
test
mov
xchg
adc
sbb
cmp
xchg
adc
shrb
add
aaa
add
dec
fnstenv
inc
inc
hlt
sbb
repnz
xor
hlt
fidivl
imul
xor
int
xchg
inc
add
pop
imul
mov
clc
adc
and
lret
pop
cmp
test
fdivrl
lds
inc
ljmp
aam
stos
sbb
jmp
and
xor
rcpps
test
clc
stos
mov
clc
mov
shrl
cwtl
push
mov
cwtl
outsb
push
popf
pop
fucomi
fstpt
push
call
adc
jl
out
sbb
int3
in
xorb
push
lds
or
fstl
inc
hlt
dec
cmpl
sbb
jbe
adc
or
xlat
psubd
pop
mov
mov
in
testb
scas
andb
imul
jmp
mov
nop
cmc
and
sub
shl
es
lret
loopne
push
pop
sbb
push
daa
xor
adc
jle
sub
pop
fsub
inc
imul
add
shrb
out
xor
add
sbb
insb
ficompl
loop
mov
bound
mov
out
jnp
mov
sbb
jl
pop
sqrtps
popf
xor
std
xchg
ljmp
jbe
fildl
mov
inc
call
and
test
and
loope
ret
or
mov
dec
fbstp
mov
xorb
lds
mov
jmp
movl
sbb
jmp
and
call
xchg
jbe
sbb
aaa
fmull
mov
negb
or
xchg
and
mov
mov
dec
pop
subl
out
leave
test
mov
cmp
xchg
mov
add
.byte
.byte
.byte
.byte
