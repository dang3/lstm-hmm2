rorb
fnstsw
mov
xlat
xorl
dec
sarb
call
dec
fists
mov
cmp
push
pusha
enter
fdivrl
cltd
shlb
std
xlat
fwait
push
lods
fmulp
sbb
xchg
int
mov
icebp
mov
test
dec
mov
out
mov
ss
xor
insb
jp
sti
xchg
sub
xchg
int
sub
push
pushf
movsb
daa
in
out
mov
ds
dec
adc
xor
pop
lods
mov
stc
sarb
mov
fldl
cmp
test
sub
push
ret
out
mov
push
mov
push
and
je
clc
ljmp
movsb
mov
jmp
mov
add
cmp
pop
mov
hlt
fistpll
scas
dec
sbb
out
xor
inc
ds
in
in
push
cmp
xorl
mov
xchg
lret
popf
cmp
pop
mov
rcrb
movsb
adc
xor
sbb
pop
enter
fisttps
mov
lods
addr16
loopne
cld
pop
imul
incl
and
sub
movsb
incl
loop
iret
and
shl
xorb
xchg
aad
ret
mov
cmc
sbb
pop
arpl
xchg
cmp
scas
stos
dec
mov
mov
pop
jbe
mov
out
jp
out
pusha
es
iret
adc
inc
in
ret
sti
out
in
fcoms
xchg
jecxz
pop
dec
fstps
pop
andl
adc
enter
xchg
aam
shrb
in
test
jle
mov
sub
in
imul
cwtl
iret
xchg
clc
fnsave
movsb
push
jne
inc
scas
push
aas
mov
stos
fxch
fidivrl
mov
out
aam
add
cmp
xlat
enter
sub
cmp
mov
cmp
mov
add
loop
lret
dec
pop
xchg
mov
dec
mov
mov
mov
lods
add
pop
mov
pop
xchg
imul
push
in
pusha
out
aaa
jge
cmp
inc
sub
sahf
jns
ret
pop
jg
pop
push
loop
sub
xchg
in
mov
mov
mov
ret
and
pop
xor
mov
inc
daa
test
sub
rclb
scas
dec
mov
cmp
scas
je
dec
lcall
ror
jo
xchg
adc
sub
cs
mov
push
je
ret
push
ja
bound
mov
pop
mov
in
into
jb
pop
outsl
or
mov
out
mov
xchg
imul
rcl
fwait
aad
cmp
aas
rcrb
pop
addr16
popa
mov
or
jle
pop
lahf
hlt
cwtl
mov
sub
lods
clc
cmp
xor
jne
mov
cmpsl
jnp
xor
jo
dec
pop
inc
push
imul
jecxz
mov
dec
xor
repnz
add
adc
popa
xchg
and
cmp
mov
lret
cwtl
sub
cld
jae
mov
cmpsl
add
mov
aas
push
mov
sbb
movsl
mov
sti
xchg
aaa
xchg
insl
xchg
ja
nop
insb
out
addr16
enter
popf
pop
jecxz
lds
xchg
pop
into
call
dec
and
test
pop
cmp
dec
xor
jl
repnz
aas
lret
xlat
sub
mov
std
ret
pop
fistpll
add
out
mov
leave
inc
aas
xlat
lea
not
pop
xlat
outsb
mov
sbb
lret
loope
pushf
cld
sub
cmp
outsl
sbb
repnz
cmpsb
pop
arpl
in
ljmp
loopne
pop
push
add
data16
dec
lock
lret
aas
xchg
insb
xchg
hlt
mov
pop
dec
pop
leave
in
test
negl
sbb
es
xchg
xchg
insb
loopne
pop
adc
aas
sti
xor
inc
movsl
mov
or
icebp
cmpsl
mov
loopne
cld
cmpsl
int3
push
rep
loope
clc
jg
pop
call
mov
push
pop
jo
jo
sub
aam
repnz
fimull
scas
push
push
mov
pop
mov
mov
iret
leave
jg
and
xchg
adc
dec
sbb
stos
je
test
sahf
shrl
test
dec
ljmp
jl
jp
or
xchg
lret
dec
loop
mov
into
inc
iret
jnp
test
mov
movswl
xchg
xor
xor
mov
sbb
adc
pop
xor
cmp
mov
lock
mov
and
icebp
popa
jbe
test
mov
out
push
push
push
xchg
mov
outsb
sahf
jecxz
jecxz
cmp
in
aas
loope
bound
adcl
and
pop
or
fnstcw
orl
or
les
sub
es
dec
ret
inc
inc
adc
mov
mov
sbb
out
in
mov
cli
sbb
loop
mov
into
dec
out
or
mov
xchg
stos
pop
jge
movsl
pop
push
ljmp
dec
jo
les
pop
and
cmp
mov
add
sbb
popf
sub
arpl
inc
cmp
roll
out
pop
dec
fmulp
and
cmp
subb
sahf
mov
xor
mov
jmp
push
cs
fisubrl
loop
cmp
fs
cmp
popa
dec
mov
sub
enter
outsb
cmp
jne
cs
jae
daa
fnstsw
pop
or
idiv
cwtl
sbb
nop
lret
jl
mov
mov
pop
adc
mov
push
insb
popl
test
sbb
shll
stos
mov
leave
jae
sbb
aad
fs
mov
fsubrl
xchg
test
and
inc
orb
jle
dec
leave
inc
sbb
jns
das
daa
pop
pop
lods
mov
push
mov
adc
divb
aas
cmp
cld
sub
sub
xlat
cmpsl
mov
xor
pop
add
data16
dec
sahf
mov
lahf
xlat
es
pop
mov
or
mov
cmc
sahf
dec
bound
jb
iret
lahf
shlb
fwait
sub
pusha
sbb
mov
call
loop
sub
je
xchg
les
fnsave
inc
aaa
cmpsl
mov
jne
scas
mov
xchg
push
sbb
aas
sub
mov
je
popf
aad
imul
pavgw
and
into
dec
dec
xchg
insb
xchg
not
xchg
cmp
sub
inc
cs
push
js
xor
movsl
jo
aam
orb
push
repz
in
push
je
test
sbb
iret
mov
push
push
fidivl
jge
xchg
movsl
push
xchg
enter
or
jge
nop
mov
jge
xor
cmp
sbbb
sbb
es
adc
addr16
cmpsl
pop
mov
jbe
pop
loop
add
lahf
fldl
lret
or
movsb
push
pop
rcll
loopne
xor
out
stos
aaa
xchg
stos
imul
in
push
mov
cmpsl
jg
push
test
pop
lods
sbb
fldz
adc
push
xor
lahf
sub
push
cltd
adc
adc
dec
jmp
jl
and
out
mov
pop
jecxz
shr
shll
xchg
aam
test
les
loop
cmpl
push
pushf
mov
mov
inc
pop
incb
shrb
insl
lcall
je
gs
fistps
int3
push
sbb
mov
outsl
adc
scas
leave
inc
fisubs
xlat
cmc
fdivs
imul
mov
jge
sbb
mov
xchg
mov
xor
shl
sbb
fimull
jae
leave
test
xlat
int
mov
jl
loopne
insl
mov
dec
into
jge
lds
dec
lods
jp
rorb
ret
enter
mov
mov
out
cwtl
lea
mov
xor
fs
dec
lret
push
sub
xor
test
mov
mov
jo
loop
mov
lods
rol
fcmovb
dec
sub
mov
push
sub
push
leave
aas
inc
nop
cmp
ljmp
notl
sbb
clc
aas
and
inc
imul
nop
pusha
push
mov
mov
dec
xor
mov
mov
and
mov
mov
pop
insl
push
mov
pop
cli
pop
add
fs
lret
inc
rol
repnz
stc
out
dec
pop
negl
ds
sub
rorl
jmp
in
imul
dec
fstl
loopne
jge
lds
movsl
add
ds
sahf
push
mov
out
xlat
clc
fildll
addl
push
int
sub
inc
xchg
aam
xchg
jb
sarb
ret
movsb
jbe
pop
int3
std
test
jb
add
fucom
mov
ja
sub
xor
pop
mov
xchg
loop
in
and
xchg
mov
gs
mov
arpl
xlat
stos
testl
pushf
sub
cmp
fcmovbe
dec
insb
pop
mov
andb
jne
hlt
ljmp
and
cmp
cmp
imul
jge
jae
lods
out
arpl
mulb
addr16
into
push
mov
cltd
popa
push
sar
imul
scas
rorl
push
aad
jge
jo
fbstp
jge
cmp
in
mov
xor
dec
mov
xorl
pusha
pusha
mov
loop
push
sbb
mov
lcall
fdivl
test
lods
shr
outsl
jmp
gs
push
iret
negl
mov
stc
cmp
mov
dec
or
fs
lea
push
push
pop
fstps
loopne
jmp
test
lret
and
clc
idivb
push
sub
stc
mov
xchg
aad
data16
inc
pop
jns
shr
jge
dec
call
stos
cmp
xor
mov
cmp
xor
adc
xchg
inc
xchg
mov
movsl
cmp
push
and
sbbl
js
jnp
pop
push
pop
jecxz
dec
jge
push
xlat
ja
jns
repz
sbb
sub
test
dec
dec
rolb
cmp
pusha
xchg
mov
mov
ret
notb
in
mov
arpl
dec
mov
cmpl
jno
inc
in
mov
and
aam
test
nop
jbe
ret
int
mov
and
aaa
pop
pop
xor
push
xor
sti
and
ret
std
in
mov
into
add
xor
jecxz
out
mov
cmp
jo
pop
sti
push
push
mov
int3
xor
mov
sbb
or
enter
enter
mov
sbb
in
pop
movsl
jmp
in
adc
xchg
aaa
pop
aas
sbb
repz
repnz
sbb
dec
idivl
aaa
fsubl
js
in
sbb
scas
cmp
aas
gs
imul
repz
fcmovnb
int3
iret
hlt
push
dec
jmp
inc
scas
sub
iret
and
pop
cmp
lods
fisttpll
xchg
repnz
mov
aaa
stc
insl
cwtl
ret
sar
aas
pop
push
cmpsb
cwtl
rcrl
shlb
test
mov
aas
ret
pop
cmp
mov
inc
imul
fstps
fmuls
icebp
das
scas
cli
fsubp
cmpsl
and
pop
inc
mov
fcompl
pop
inc
lret
dec
jl
nop
movsb
adc
push
fisttps
mov
and
jo
negb
aad
pop
ljmp
call
decl
insb
cmp
lock
outsb
inc
xor
xor
jne
leave
test
or
test
pop
inc
lcall
out
push
rcrb
jl
add
shrl
test
fstpt
sub
mov
mov
inc
loope
fwait
sub
insl
xor
mov
adc
mov
xchg
sbb
js
mov
lock
es
push
fstpt
roll
push
cmp
int
fldcw
pop
jl
push
lods
shrb
stc
cmpsl
pop
in
jns
push
das
das
roll
jne
inc
enter
sbb
shl
inc
ficomps
in
icebp
imul
loope
sub
cmpsb
cltd
fs
and
and
pop
pop
xlat
xor
aaa
jp
jle
pop
inc
jno
xchg
jns
into
icebp
xchg
dec
xor
jne
into
cmp
ss
cltd
mov
adc
cmpsl
outsl
rsqrtps
gs
aad
and
and
ljmp
jg
mov
sub
lcall
pop
cld
xchg
lods
add
pop
mov
push
dec
and
pop
lahf
ljmp
int3
fs
mov
sti
fdivl
jmp
push
and
cmp
popa
loop
jmp
xor
dec
push
mov
jecxz
or
and
ficompl
aam
or
aas
loope
jbe
ret
xchg
enter
and
mov
push
push
scas
dec
and
sbb
inc
ficomps
pop
push
dec
lds
scas
bound
fs
hlt
mov
push
ds
fidivrs
jb
mov
push
mov
les
fdivl
adc
cmp
inc
sub
jmp
dec
mov
xchg
dec
repz
aas
cwtl
ret
stc
xchg
lods
jb
mov
cmpl
push
ficoms
vcvtss2sd
lods
fbstp
adc
xchg
cli
xor
add
mov
mov
incl
pop
mov
out
sub
or
hlt
and
mov
mov
clc
sti
scas
test
test
outsb
testl
das
pop
call
cmp
aas
imul
and
mov
mov
out
inc
push
fldcw
jb
lods
cmp
jnp
sub
add
mov
jns
cwtl
mov
xchg
pop
stos
nop
out
adc
inc
cmp
ret
movsb
aaa
and
jecxz
xchg
mov
sbb
loope
iret
mov
sbb
aaa
cmp
push
icebp
mov
mov
imul
orl
pop
pop
add
sub
outsl
shrb
fwait
jns
xor
cmp
or
lret
outsl
or
arpl
scas
aam
movsb
add
cmp
ljmp
jle
add
gs
shll
lock
lret
aas
xor
mov
mov
push
sti
daa
adcl
mov
push
or
les
push
test
lock
adc
mov
or
ret
push
pop
sub
in
inc
cmp
push
adc
pop
xchg
cs
and
int
insb
into
stc
inc
daa
xchg
aam
cltd
outsl
das
mov
loopne
flds
xchg
cwtl
dec
sub
shll
xchg
jmp
inc
sub
aas
out
fsubrs
cltd
int
out
fimuls
dec
das
mov
cmpsl
mov
xchg
mov
vaddsubpd
ljmp
inc
mov
and
pop
shlb
out
inc
add
dec
push
and
cli
mov
jnp
into
iret
cs
mov
sahf
jo
scas
popa
xchg
aaa
out
cli
add
dec
cmp
pop
mov
dec
and
sbb
scas
xor
sbb
add
or
inc
enter
and
jecxz
xchg
daa
stos
push
out
inc
xchg
lds
loop
adc
or
stos
adc
int3
notl
aam
jnp
sub
int
roll
test
dec
cmpsl
test
sub
loop
repnz
fucom
or
xor
pop
test
cmp
mov
int3
adc
mov
dec
ss
insb
dec
in
leave
std
pop
mov
out
adc
pop
lods
mov
hlt
push
xchg
cmp
into
ret
mov
push
call
mov
push
mov
aam
push
lahf
push
jl
cmp
mov
ucomiss
xor
dec
fs
jmp
test
sarl
xchg
or
xchg
mov
cli
xor
jge
or
and
mov
cli
mov
xor
or
dec
rorb
xchg
inc
in
shlb
imul
lods
lds
aam
sub
lret
mov
add
loope
dec
dec
adc
fnstenv
out
jno
mov
shl
mov
lea
push
jne
xor
inc
and
push
lds
pop
outsb
test
into
push
lods
cmp
fdivl
xchg
xchg
add
test
cmp
jge
das
cltd
in
imul
fs
jp
icebp
adc
testb
cmp
rclb
ja
aaa
inc
push
dec
jl
and
fnsave
in
pop
paddsb
dec
loopne
movsb
jbe
lods
pop
addr16
ljmp
sub
mov
lcall
int
fcompl
xor
ds
adc
adc
mov
cld
push
and
cmp
lods
shlb
movsb
mov
add
push
pop
pusha
lret
out
xor
hlt
mov
ret
pusha
xchg
loop
jl
jg
mov
ret
aam
cwtl
in
add
out
mov
sahf
push
dec
adc
cmpsb
mov
iret
bound
and
cwtl
std
cmpsb
fsubrs
arpl
jnp
cmc
call
adc
cmp
sub
jl
add
mov
or
push
test
sub
bound
out
aam
xchg
sub
xchg
std
xchg
and
mov
int
cld
stc
iret
nop
inc
push
sub
stc
inc
les
sti
nop
xchg
inc
out
jb
dec
out
daa
dec
cpuid
cmpsl
inc
loope
add
cltd
arpl
mov
jecxz
subl
inc
test
adc
mov
data16
mov
jns
call
in
sub
and
icebp
into
enter
cmpl
cmc
pop
scas
int
pop
jg
or
mov
pop
movsl
ret
inc
sbbl
iret
add
int3
imul
enter
in
sub
movsl
push
sub
enter
dec
inc
xchg
iret
arpl
dec
or
pop
call
mov
xor
mov
mov
loop
in
jne
pop
mov
insl
sahf
lods
or
fs
fs
test
fsubp
mov
fimull
subb
mov
sbb
movsb
cmpsl
out
sti
fisubrl
xor
aaa
cmp
into
dec
stos
sbb
rorl
jb
jo
mov
smsw
mov
insb
sub
mov
ret
push
lock
mov
ret
sti
cs
shlb
push
cwtl
mov
arpl
pushf
jmp
sub
aad
or
ret
lods
leave
and
mov
sub
pop
inc
shl
pop
adc
xor
push
mov
jae
or
dec
xchg
cmp
inc
call
cmp
xor
mov
nop
divb
bound
mov
in
testb
add
jbe
pop
scas
stc
sub
lock
lods
mov
lcall
movsb
cs
icebp
mov
mov
stc
fdivl
sets
rorb
mov
in
mov
inc
stos
in
pop
push
test
fmull
xorb
pop
or
bound
mov
testl
or
mov
cmpsl
das
out
std
addb
rcll
mov
hlt
cmp
xchg
add
adcl
mov
xchg
cmpsb
popa
js
add
cmp
cmpsl
mov
dec
cmpsb
push
add
cwtl
test
fldt
and
dec
fsubrl
xchg
in
adc
sub
push
mov
sub
sub
cltd
add
bound
fs
fidivrs
in
mov
repz
orl
aaa
scas
sbbb
xchg
push
pop
adc
std
xchg
xchg
jg
cmp
in
pusha
cmpsl
outsl
sub
je
mull
lret
mov
push
or
int3
cmp
jg
push
loopne
mov
fldcw
repnz
dec
cmp
inc
cmpsl
push
add
test
cltd
ror
out
test
adc
imul
push
lcall
icebp
jnp
test
repz
insb
fnstcw
cmp
cmp
aad
adc
lahf
push
cmp
adc
ljmp
testl
sti
aaa
cs
outsl
imul
or
pop
sub
cltd
sbb
jmp
sarb
daa
lods
jle
mov
call
sbb
push
pop
ret
mov
or
xor
scas
xchg
mov
or
pop
and
cmp
push
xchg
pushf
pop
ss
fisubs
lds
push
pop
enter
ja
cltd
popa
out
or
les
bound
push
pop
sysexit
sbb
dec
out
in
rclb
call
repnz
lcall
mov
gs
shlb
test
hlt
cmc
push
ss
loop
mov
jl
lods
jmp
adc
push
mov
shrb
sub
ds
loope
popf
lcall
sbb
ljmp
ret
jmp
sub
test
in
out
xchg
jp
push
mov
fucom
adc
imul
mov
in
xor
jge
jns
aas
cmpsb
imul
jle
add
and
and
sbb
sbb
dec
stos
hlt
push
and
and
pop
jp
xchg
movsl
out
jbe
sub
popf
xchg
sub
lds
shlb
mov
in
fidivrl
aam
jp
leave
in
or
fcoml
aam
mov
mov
inc
aaa
push
jb
mov
xor
xchg
repz
repz
mov
insb
and
int3
dec
jmp
xchg
push
fldl
mov
testb
inc
push
aaa
pop
jmp
aam
fbstp
pop
pop
sbb
pop
lcall
inc
adc
ficompl
in
xchg
xchg
push
xchg
nop
test
jp
xchg
leave
xchg
testl
mov
pop
cmp
push
jmp
aam
sbb
ficompl
repz
sbb
outsl
push
repz
sub
inc
sbb
data16
sbb
mov
or
leave
fdivl
mov
inc
ret
pop
push
cmpsb
xchg
and
inc
cltd
xchg
cltd
movsl
int
out
notb
fnstenv
xchg
sub
dec
loope
cwtl
sub
loopne
cmp
jecxz
lock
pusha
aad
mov
pop
popf
pop
into
shll
pop
jnp
call
ret
insb
stos
test
ret
arpl
in
scas
arpl
push
addr16
sub
xor
adc
inc
cltd
fstps
pop
add
adc
test
pop
add
push
push
xchg
xchg
loopne
and
in
mov
dec
or
mov
fistpll
leave
xchg
daa
pop
jmp
fcmovu
jbe
add
ds
dec
sbbl
int3
mov
push
enter
mov
imul
nop
cwtl
inc
mull
xor
mov
in
inc
inc
out
jg
sbb
js
pop
push
out
sub
lret
dec
push
aam
pop
fisubs
lahf
cs
iret
movsl
xchg
aam
add
add
mov
and
shl
fwait
pop
pop
and
arpl
xchg
pop
jbe
sub
or
jnp
sub
mov
rcrl
push
push
stc
cmp
and
addr16
int3
popa
push
mov
cltd
push
push
fwait
push
daa
adc
push
dec
xchg
cmp
sub
cmp
xchg
movsl
les
es
std
notb
fdivs
mov
nopl
idivl
sbbl
sbb
lcall
out
push
ret
dec
shl
dec
std
jmp
test
sahf
pop
sti
inc
xor
popa
xlat
std
cmpsl
les
xor
clc
sub
data16
lds
test
mov
movsb
pop
cmp
mov
push
dec
mov
pop
pop
inc
aas
ror
sub
mov
dec
cmpsl
inc
cmp
jb
mov
mov
sbb
mov
add
repnz
adc
pop
jg
mov
dec
popf
mov
stos
lahf
pop
iret
add
in
cmpsb
stc
ss
ret
push
xor
push
das
popa
sub
shll
fcmovbe
lret
push
iret
test
pop
sbb
stc
arpl
mov
mov
adc
fisubrs
push
cmp
mov
cwtl
and
push
xchg
sbb
pop
sub
sarb
insb
or
xor
mov
aad
adcl
jb
sahf
pushf
outsb
cmp
dec
inc
outsl
xor
scas
iret
mov
outsl
movsb
rcrl
xor
jmp
xchg
out
adc
mov
cmpsl
in
sub
xor
lcall
inc
jb
dec
inc
hlt
enter
sub
in
pop
out
or
pop
xchg
pop
insb
pop
repz
sub
and
jno
test
pushf
cmpsl
push
xchg
push
push
mov
iret
jmp
test
push
dec
push
mov
idivl
jge
xchg
pop
cld
scas
aad
xor
faddl
push
push
mov
call
decl
mov
pop
repz
and
popf
jns
sub
mov
js
sub
adc
arpl
stos
inc
sbb
repz
xchg
cmp
mov
pop
enter
cli
and
cwtl
or
fcmovnu
repz
push
mov
inc
in
mov
jl
adc
push
xchg
sbb
divb
fsts
or
mov
std
sub
lret
cli
mov
ljmp
jecxz
insl
mov
mov
xchg
mov
cltd
fdivl
gs
sahf
dec
stc
mov
adc
fimuls
push
pop
jne
mov
push
pop
cwtl
jne
iret
or
mov
push
rolb
shl
push
adc
loopne
push
inc
aas
fiadds
adc
repz
repnz
cmp
xor
pushaw
fldl
pop
mov
mov
hlt
inc
in
sti
add
push
jbe
imul
lock
enter
ret
mov
push
lock
mov
sahf
popa
or
add
jmp
lds
lods
push
mov
sub
out
push
fmull
iret
je
jne
cmc
mov
xlat
popa
and
add
loope
sub
sti
out
sbb
mov
out
rcrl
push
add
cmp
mov
mov
cmpsb
jo
sahf
cmp
cltd
jecxz
fwait
push
cmp
repz
fisubs
dec
mov
movsb
mov
xor
sar
dec
sbb
cmp
inc
loopne
lret
cmp
push
mov
cmp
xorb
jg
enter
lret
pusha
enter
es
or
addb
xchg
scas
prefetch
mov
cmpsl
xchg
and
sub
jo
inc
xchg
or
mov
dec
sti
into
mov
sub
and
mov
push
inc
fistpll
pop
xchg
cmpsb
mov
jb
mov
cmp
adc
sbb
aaa
push
jns
inc
xchg
adc
cmc
es
movsl
or
ret
cli
xchg
xor
aam
cmp
adc
data16
cmp
dec
cmp
stos
sub
mov
cmpsb
and
fiadds
inc
je
lahf
sub
jl
mov
xchg
mov
cmpsl
xor
ret
inc
xchg
fucom
popa
mull
imul
and
cli
les
movsl
sub
push
xor
add
jmp
cmp
sahf
and
movsl
ds
call
imul
sub
jne
jbe
sub
daa
xchg
xchg
jge
idivb
nop
enter
orl
in
xchg
and
stc
in
cmp
inc
fprem
and
push
stos
inc
dec
pusha
aas
dec
mov
js
outsl
cmp
jmp
mov
jmp
xlat
jo
pop
sti
dec
arpl
or
loop
push
adcl
addb
stos
and
dec
xchg
inc
cltd
ljmp
mov
add
cmpsb
test
shll
jo
xchg
xor
xor
xchg
hlt
xor
cmpb
das
and
cmp
dec
call
aad
orb
pop
in
and
push
mov
clc
sub
insl
ret
jmp
xor
cmp
lahf
adc
daa
inc
mov
aad
ret
push
and
out
lods
pop
mov
cmp
int3
adc
out
xor
or
aaa
adc
fwait
cmp
cmpb
pop
not
dec
xchg
xor
test
or
inc
or
lret
imulb
dec
out
rcrb
and
arpl
stc
scas
test
dec
dec
pop
fdivr
inc
mov
jbe
mov
daa
shll
js
jns
mov
push
es
jns
in
lock
rcrl
imul
inc
mov
xor
rorl
add
clc
pushf
test
cs
dec
clc
shrl
roll
pop
dec
sbb
dec
cmp
dec
mov
inc
cltd
xchg
in
addb
push
jbe
mov
leave
fsubl
sti
xchg
ss
push
xchg
dec
insl
mov
jae
lahf
je
sub
pop
cmp
mov
mov
rol
mov
out
arpl
mov
push
cli
dec
daa
mov
xor
jb
cmpsb
pop
mov
mov
inc
fnstenv
xchg
imul
adc
rol
out
and
cwtl
jp
and
jp
adc
iret
add
cld
leave
int3
pop
stos
xchg
cmp
fdiv
xchg
f2xm1
push
sub
clc
mov
scas
xlat
sarl
xchg
in
cmc
sbb
cs
in
xchg
mov
mov
fbstp
pop
xchg
test
cmp
mov
mov
push
inc
out
ret
popl
jecxz
and
cmp
push
sub
out
js
lods
es
imul
sub
cmpsb
mov
cli
enter
std
adc
jecxz
loope
pop
xlat
jno
mov
imul
das
xchg
cs
shlb
dec
sbbb
push
cmp
xchg
lods
shl
fisubrs
fldenv
push
add
cmpsb
lcall
sbb
sti
dec
jne
cli
in
sbb
cwtl
outsl
add
sbb
flds
xor
movsl
cmp
mov
loopne
outsb
in
mov
lea
jns
mov
loopne
fwait
lock
sbbl
arpl
xchg
jmp
xchg
call
popf
xchg
mov
pop
jno
arpl
scas
mov
pushf
jl
inc
inc
and
cld
mov
cmp
imul
fld
stos
daa
jl
icebp
cmp
out
sub
aas
adc
mov
add
std
and
push
push
aas
jnp
out
cmp
fcomp
movsl
jne
daa
dec
cmc
add
mov
mov
sarb
out
std
add
aad
and
mov
addl
jmp
ja
and
xchg
cmp
icebp
dec
je
xchg
in
xchg
scas
dec
push
into
sti
rcl
shlb
xchg
js
mov
jnp
jne
bound
push
pop
dec
add
popf
cltd
stos
scas
lret
ret
lret
xchg
test
xchg
mov
icebp
sub
cltd
or
jecxz
or
fnstenv
out
mov
mov
into
jge
nop
push
in
jns
lret
cmpl
les
pushf
shl
lret
add
aas
mov
lret
das
mov
cmp
jl
mov
lret
mov
pop
jl
js
sub
jmp
cltd
mov
cli
push
and
fwait
push
stc
xchg
shrb
sbb
dec
mov
xchg
int
mov
mov
inc
lcall
push
mov
cmp
xchg
adc
scas
pop
sbb
fwait
mov
jecxz
xchg
mov
xchg
mov
adc
data16
lea
ljmp
mov
aam
pop
cmp
push
mov
add
ds
in
das
and
cld
testb
push
sub
mov
push
outsb
scas
xchg
add
adc
jge
nop
clc
cmp
inc
xchg
mov
sub
rclb
out
repnz
lahf
and
or
out
ds
sub
pop
lahf
iret
scas
popf
stc
inc
shr
xchg
mov
jle
jge
arpl
lea
mov
push
mov
jmp
lcall
adc
lea
mov
cmp
push
out
mov
call
hlt
add
int
roll
push
fbld
xchg
outsl
icebp
or
loopne
adc
lcall
mov
jns
sti
loop
sarb
add
push
mov
repnz
xchg
inc
or
pushf
jecxz
cmp
enter
test
or
lret
sar
and
clc
dec
aam
pop
leave
sub
pop
cmp
pop
lret
mov
jl
pop
xchg
imull
mov
push
stos
xchg
fnstenv
xchg
cmp
je
xor
je
inc
mov
aam
hlt
nop
xor
or
stos
loopne
fsubrl
pop
xchg
fstps
inc
iret
addr16
cmpsl
in
dec
mov
dec
rclb
mov
clc
outsb
fsubr
loopne
pop
and
cmp
xchg
sub
sbb
jnp
add
out
xor
jno
lods
cwtl
leave
pop
mov
fnstcw
cltd
arpl
fisubl
xor
mov
and
movsl
cmpsl
ja
lret
call
xchg
popa
movsb
popf
or
jl
lea
int3
dec
in
cmc
in
test
pop
fstl
lcall
jle
mov
push
div
mov
inc
out
xchg
cmp
add
movsb
jnp
leave
push
rcrl
ds
cmp
mov
mov
xchg
movsl
sub
out
loopne
cmc
mov
cmp
mov
fs
sbb
andb
cmp
push
adc
xor
add
ljmp
aam
in
flds
dec
pop
aaa
repz
and
xor
mov
xchg
and
data16
pusha
add
sarl
and
imul
scas
jo
sbb
cmp
or
xchg
int3
dec
xchg
mov
les
jo
in
cmp
movl
pop
arpl
dec
fidivl
stos
les
xchg
cltd
xor
rolb
pop
into
int
movsl
out
in
icebp
mov
inc
xchg
jo
mov
sbb
rorl
fistps
sbb
mov
movsb
into
and
repnz
repz
and
loopne
cmp
add
ret
jecxz
jns
mov
fmull
adc
fiaddl
fcmovb
adc
xlat
les
push
pop
test
lock
notb
data16
mov
cmpsl
xchg
addb
ss
fucomp
out
nop
mov
mov
inc
push
in
add
les
dec
scas
dec
jb
pop
imul
xchg
mov
cs
push
mov
shl
mov
pop
in
mov
jmp
dec
enter
je
and
jne,pt
loope
cwtl
mov
aad
mov
xor
fistps
test
test
imul
shll
mov
int
mov
scas
imul
enter
aam
ljmp
mov
int3
mov
loop
mov
dec
or
xchg
xor
icebp
push
cmp
pop
mov
int3
mov
sub
dec
push
jmp
sti
rorl
iret
fwait
jnp
push
jno
mov
jns
jns
adc
sub
xor
adcb
out
jns
shl
cmp
imul
add
aad
xchg
fs
lock
in
and
arpl
into
aad
sbb
adc
fcom
sbb
jns
loope
xchg
mov
or
call
xor
cmpsl
pop
popa
xor
xchg
push
pop
test
xor
loopne
jbe
inc
xor
mov
int3
jno
adc
loope
xchg
cmp
adc
jge
ja
inc
lds
dec
cli
mov
mov
lcall
mov
outsl
add
fidivrl
mov
je
loopne
cld
sahf
cltd
movsl
cmp
add
push
into
ret
and
out
mov
xchg
aam
aad
ds
adc
mov
inc
sub
aad
add
cmp
lods
fimuls
scas
xor
lea
mov
inc
adc
jle
sti
cmp
xchg
push
sub
test
mov
add
inc
ja
fcom
movsl
jno
in
mov
mov
aad
aam
jo
mov
imul
ds
in
dec
imulb
jnp
xor
addb
negb
cmp
jg
pushf
or
mov
pop
cli
xor
aas
inc
out
add
cmpsb
xchg
ss
data16
movsl
dec
mov
or
add
mov
repz
adc
into
lods
xchg
ficoms
jge
scas
mov
out
cmpsl
pushf
aaa
sahf
xor
je
lods
repz
in
gs
cli
and
stos
outsb
leave
xchg
sbb
cmp
fmul
sub
add
in
inc
pop
jg
rolb
mov
xor
pop
stos
leave
std
xchg
loopne
jl
loopne
rclb
pushf
jns
mov
xor
push
pop
adc
xchg
inc
cwtl
jp
sbb
pop
xchg
in
push
jnp
mov
insb
cmp
xchg
or
fldl
mov
das
pop
movsl
xor
lea
xchg
fsubl
xor
mov
add
pop
mov
jmp
iret
fildll
test
adc
scas
and
mov
sbb
mov
jno
jg
xchg
enter
test
lds
mov
jp
lret
sub
mov
outsl
jle
mov
jg
repnz
mov
lds
stos
mov
mov
mov
call
sahf
inc
popf
out
daa
icebp
imul
and
fildl
outsl
shrl
enter
mov
mov
neg
hlt
loopne
fsubl
cmp
fxam
jbe
sub
les
mov
push
push
add
cli
inc
lds
jbe
pop
jnp
shl
movsl
rcrl
mov
add
push
push
xor
xor
popa
sbb
mov
lcall
ficompl
fimull
sti
push
out
loopne
or
cmp
ja
sar
stos
pop
pop
int3
dec
lahf
out
ds
mov
aad
aam
add
test
xchg
push
jl,pn
add
push
addr16
icebp
fiaddl
mov
gs
mov
mov
test
xor
mov
fadd
mov
cmp
xor
mov
or
pop
rcll
popf
cwtl
jno
movsb
ret
inc
push
mov
stos
mov
sub
cltd
inc
or
js
pop
gs
xorl
repnz
shll
mov
cmp
cmp
call
jb
add
push
mov
pusha
aas
out
rolb
sti
mov
xchg
bound
fiadds
test
cli
bts
xor
mov
ss
imull
inc
daa
cli
sub
mov
aas
out
cli
sahf
cltd
mov
xchg
hlt
in
dec
fldcw
enter
fbstp
inc
into
repz
jne
adc
in
loopne
sbb
mov
imul
fcompl
adc
pop
mov
lods
lods
sub
cltd
xchg
mov
lods
fdivrs
add
xchg
sbb
adc
xchg
insb
pop
cmp
inc
test
pusha
cmp
fadd
out
icebp
out
push
jnp
xchg
aas
mov
lahf
jne
nop
and
cs
adc
fnsave
stos
cmp
push
loope
and
cmp
and
cmc
jae
or
xchg
and
cmpsl
insb
xchg
out
cmp
xchg
sub
imul
popa
pop
repnz
push
jne
rcr
aam
jp
aad
js
mov
xchg
pop
jge
out
fildll
push
test
fildll
cmp
subl
fwait
mov
inc
adc
stos
ja
push
dec
jle
in
jae
mov
and
mov
xlat
mov
ljmp
or
cmp
mov
lds
mov
repnz
cmp
xor
mov
out
sarl
jno
mov
mov
lcall
mov
sub
popa
hlt
addl
sarl
mov
and
aaa
loop
cmp
arpl
xchg
or
mov
adcl
jg
xor
dec
pop
decl
ret
cpuid
imul
pusha
mov
mov
cmp
mov
xchg
mov
mov
test
mov
dec
cmpsl
dec
imul
inc
and
lret
mov
into
push
mov
shrb
ja
aam
test
add
sarl
mov
pop
ffreep
xlat
out
sub
addr16
mov
inc
gs
jmp
xor
sub
mov
arpl
sbb
nop
aam
imul
xchg
xchg
pop
repz
mov
cmpsl
cmpsb
es
in
adc
bound
mov
mov
movsb
loop
mov
lahf
and
pop
adc
cmpl
dec
jno
dec
xor
ljmp
pop
fxch
test
cmp
or
xchg
jnp
jl
jge
in
cmpsb
test
repz
mov
mov
add
cmpsb
test
int3
mov
mov
sbb
cmp
jp
dec
xchg
xchg
add
mov
repz
pop
repnz
sbb
mov
arpl
lahf
xor
loope
xchg
stos
mov
leave
test
xchg
aad
and
dec
pushf
loopne
fisubs
repz
xor
sbb
out
adc
jl
jo
leave
movsb
into
jbe
les
add
inc
or
xchg
pop
dec
mov
jnp
cmpsl
adc
es
and
inc
notb
jg
mov
xlat
dec
xchg
cwtl
mov
in
sahf
fcomps
cmpb
push
mov
subl
or
das
mov
stc
push
gs
decb
push
repnz
shll
scas
test
mov
or
add
sbb
mov
sub
jnp
mov
iret
roll
push
mov
cmp
popa
shrb
adc
mov
pop
inc
pop
lods
add
xchg
test
pop
jmp
shrl
add
repnz
fnstenv
push
popa
loope
push
dec
mov
in
xchg
adc
nop
call
mov
popa
fsubr
push
mov
xchg
stc
pusha
fcoms
dec
loopne
int
lock
sub
cltd
cltd
mov
repnz
push
cmpsl
loopne
js
in
incl
pop
mov
pop
ret
push
xor
mov
xchg
int
clc
sub
lret
mov
mov
pop
ja
xchg
loop
sti
out
sub
inc
lret
sub
add
inc
repz
jp
nop
cmp
lret
aad
jb
push
sub
mov
loop
in
cmp
in
xor
push
xor
insb
adc
jne
in
call
out
mov
das
int
sbb
push
adc
clc
fcmovbe
pushf
js
jg
mov
sbbl
in
mov
jo
xchg
out
lods
jp
scas
adc
add
mov
inc
pop
test
xor
jl
pop
imul
scas
cmp
mov
sti
outsb
pop
mov
out
js
test
cmp
jge
leave
sub
lret
stos
dec
push
icebp
jge
push
or
pop
aas
pushf
in
cmpsb
and
cs
mov
pop
sub
mov
jle
dec
lret
fcoms
daa
jl
loope
in
sbb
sahf
icebp
rcll
cwtl
test
sbb
mov
mov
test
cmp
mov
or
lret
jmp
jae
lods
mov
adc
inc
jne
xchg
enter
xchg
xor
cmp
push
sbb
cmp
jl
lds
mov
mov
dec
xor
xchg
je
mov
test
rcrl
arpl
jns
xor
arpl
sbb
mov
jne
cmp
push
pop
aad
daa
mov
sbb
ds
and
cltd
inc
jge
xchg
push
jne
mov
push
stos
mov
sub
test
in
divb
subb
repz
add
arpl
repnz
iret
outsl
pop
lods
cmp
addr16
fcoms
ljmp
xchg
pop
les
jno
hlt
pop
imul
push
lret
cmp
sbb
fimuls
fldenv
clc
xlat
arpl
or
das
lret
cs
aaa
pop
dec
fdivrs
sti
in
mov
cmp
jge
or
popa
mov
add
cmp
pop
addr16
lret
iret
out
jge
fwait
xor
or
adc
out
es
push
jo
gs
sbbl
xor
nop
jns
mov
push
mov
xchg
cmp
and
pushf
xor
add
xchg
sub
lea
sub
adc
lods
pop
lret
vhsubps
ds
cltd
fistps
in
mov
jo
xorl
aaa
dec
push
icebp
out
in
aad
aad
int3
mov
mov
cwtl
sarl
int3
add
mov
pandn
fdiv
out
push
outsb
mov
stos
int
aas
dec
pop
ss
sbb
test
repnz
push
dec
cmp
xchg
lcall
cmp
leave
dec
ljmp
push
dec
repnz
adc
mov
mov
ja
stos
push
sbb
movsb
aas
fdiv
cmp
or
pop
jmp
ds
cli
pop
sub
imul
addr16
add
int
aas
sbbb
out
sbb
mov
and
std
inc
and
cmp
and
xor
add
mov
inc
push
adc
dec
cmp
and
jecxz
jg
jbe
ror
in
and
jg
dec
mov
mov
fsubl
pop
popa
ja
push
test
push
xchg
xchg
pop
pop
push
and
pop
inc
inc
std
mov
jmp
loop
and
and
mov
leave
sti
mov
dec
push
and
cmp
mov
mov
sub
cmp
inc
inc
icebp
andb
scas
push
ljmp
lret
std
xor
cltd
call
les
jbe
aad
popf
in
push
cmc
add
jbe
jle
outsb
ret
pop
xchg
popf
jns
xor
cmpsb
jne
and
lods
sti
mov
scas
push
mov
pop
pop
cmp
xchg
cld
jmp
ret
inc
mov
sbb
mov
lea
cmc
imul
out
mov
adc
lock
sub
das
imull
mov
xchg
int3
stos
sub
lahf
sarl
xor
mov
sbb
mov
mov
in
in
addr16
ss
adc
shlb
mov
rorb
jge
nop
vpunpckhwd
push
and
mov
scas
mov
dec
loope
mov
mov
inc
cltd
xor
dec
popf
push
std
adc
cmp
push
jae
jnp
xchg
aad
mov
xchg
test
push
inc
fwait
jge
ds
mov
repnz
mov
xchg
stc
dec
cmp
pop
inc
iret
mov
rcll
sub
clc
mov
inc
inc
or
pop
dec
loopne
adc
stc
fisubrs
js
cmpl
xchg
fsts
push
cmp
movsl
aad
adc
mov
in
xchg
pop
push
subl
test
xchg
mov
jmp
out
mov
std
idivb
cmp
aaa
rorl
push
insl
leave
inc
in
fstpl
cmp
add
adc
mov
fistpll
lcall
xor
ret
pop
jecxz
fwait
aam
loopne
cltd
ds
outsl
push
pop
outsl
enter
jl
push
and
adc
aaa
pop
cmpsb
and
sbb
shl
sbb
call
fiaddl
aaa
loop
pop
adc
jle
shlb
lret
dec
lds
dec
mov
jge
fst
loop
nop
push
dec
add
call
ret
lods
daa
sub
shlb
cmp
lds
repnz
mov
sti
xchg
lahf
out
out
int3
push
das
mov
xlat
pop
fld1
cmp
negl
testb
sarb
mov
movsb
test
dec
inc
sub
and
push
mov
mov
mov
jg
dec
aad
jae
xchg
into
pop
in
lcall
lea
std
inc
mov
dec
movsb
std
mov
aam
dec
lret
xor
fdivrs
pop
pop
or
fcoms
adc
inc
push
mov
int
cmp
or
shrl
adc
das
push
lcall
sub
pop
leave
mov
call
cmp
cltd
sarb
jecxz
sub
clc
inc
rcll
sti
or
inc
or
lret
cpuid
jecxz
dec
fstps
mov
cld
repnz
dec
xor
lret
hlt
scas
shrb
aas
push
jb
adc
sub
dec
jo
js
push
adc
mov
hlt
xor
xchg
jb
mov
es
xchg
push
mov
sub
xchg
loope
or
or
and
dec
or
notb
scas
mov
sub
clc
rcrl
push
adc
shr
xor
rep
xor
testl
rol
dec
cmc
pop
dec
out
sbb
pop
ret
jge
stos
push
add
cmpsb
cwtl
jecxz
pop
mov
dec
dec
or
mov
push
jl
pop
push
nop
mov
out
les
cmpsb
add
jl
sbb
leave
in
loop
xchg
fnstcw
dec
xchg
into
mov
ljmp
rcr
and
and
push
mov
aam
scas
scas
push
fcompl
fs
sub
dec
xor
adc
adc
add
mov
xchg
cmpsl
cld
cmp
enter
pop
rol
sub
xor
jb
shl
leave
jb
fnstsw
sub
adc
shl
cs
inc
mov
xor
pusha
fs
xchg
pusha
mov
es
jnp
push
cmp
push
aam
fdivp
inc
mov
jl
js
pusha
or
ret
jp
pop
arpl
sbbb
cmpsl
fiaddl
add
pushf
adc
jae
repz
sbb
aaa
fisubrl
popf
mov
adc
ljmp
ljmp
push
bound
popa
xchg
cltd
mov
xchg
xchg
lods
mov
outsb
mov
cmpsb
xor
test
mov
jecxz
and
out
adc
aad
test
stc
ret
dec
mov
jo
into
mov
jae
rorl
xlat
add
mov
adc
mov
cli
jg
xchg
add
lea
decb
fldl
adc
fwait
sbb
div
or
mov
xchg
xor
mov
fsubrs
cmp
imull
sbb
loop
jecxz
xchg
mov
add
cmpl
out
pop
pusha
xchg
xchg
das
fcom
push
jo
stos
mov
dec
insl
mov
sub
popa
dec
push
scas
popa
push
push
shll
lods
lea
les
arpl
mov
imul
inc
and
add
xchg
dec
pop
push
pop
stos
scas
imul
inc
push
adc
lret
push
xchg
xlat
xchg
inc
fsubr
out
imulb
mov
sub
mov
xchg
scas
push
inc
bound
sbb
gs
test
xchg
fiaddl
inc
repz
adc
jns
pushf
adc
mov
cmpsb
mov
sub
out
ljmp
and
enter
cmp
inc
jae
cmp
pop
mov
jo
rcrb
dec
mov
loopne
jge
loopne
dec
jne
daa
inc
lret
cltd
jno
fwait
int
mov
mov
mov
xchg
cs
pand
pop
aaa
insl
repz
popf
mov
int
jecxz
lret
mov
in
jle
repnz
mov
pop
xchg
dec
popa
ret
in
sub
sbbl
adc
shlb
negl
stos
repnz
cmovl
and
repnz
xchg
jp
out
aas
jl
mov
mov
mov
jmp
shl
add
pop
fisubrl
xchg
rorb
icebp
jl
aaa
hlt
or
cli
push
xchg
divl
test
lret
push
loopne
and
nop
push
cmpsb
jl
setbe
pusha
repnz
jne
roll
call
or
in
xor
mov
lcall
xor
mov
sub
xchg
adc
push
jmp
test
mov
pusha
jne
mov
dec
sub
testl
xor
fwait
jne
push
lret
cli
cmp
mov
sub
jb
lret
jle
mov
fs
inc
mov
adc
fmul
or
push
jns
sbb
adc
push
mov
add
out
inc
cmpl
inc
cmp
xlat
dec
rclb
fistps
add
jns
or
scas
mov
pandn
stc
or
mov
fidivl
lret
mov
xor
mov
hlt
add
xchg
roll
cmp
and
sti
cmp
jae
in
adc
fisubl
cli
inc
stc
mov
aaa
scas
xchg
in
dec
movsl
sub
lods
pop
mov
in
mov
xchg
push
xchg
int3
pop
add
sbb
iret
push
cltd
dec
imul
mov
nop
sub
mov
sbb
test
lret
pop
xchg
std
inc
scas
shrl
js
into
dec
test
imul
ficomps
popa
sbb
xchg
sti
and
jne
inc
xor
push
sbb
mov
mov
push
cmp
pop
inc
outsb
sub
jae
jbe
int
push
mov
call
ja
jge
sbb
sub
fisubs
rcrl
cmp
cli
xchg
sti
mov
mov
mov
adc
in
fdivs
mov
rorb
mov
arpl
push
loopne
orb
fnstcw
dec
int3
stos
mov
fwait
xchg
lock
mov
jecxz
outsl
mov
adc
jp
fstps
adc
popa
and
or
aam
jbe
in
inc
idivb
jmp
cmovs
js
stc
pushf
push
push
push
mov
mov
fmul
into
fsubp
jge
popf
insb
jne
sbb
xlat
fldcw
mov
jmp
jne
push
movsl
stos
rcrb
pop
ja
clc
lock
cmpsb
push
mov
mov
xor
in
jnp
add
push
xchg
ret
and
cmpsl
ds
test
mov
cmpsl
test
dec
loope
push
add
push
push
cmpsl
sbb
adc
test
xchg
stos
pop
cmp
add
xor
leave
push
pusha
inc
cmp
lds
or
xchg
cld
nop
inc
pop
movsb
call
addr16
mov
je
pop
adc
jmp
mov
lcall
sahf
jmp
fsub
jmp
dec
mov
inc
add
fisubrs
pop
fidivrl
testb
fwait
adcl
cmp
filds
movsb
push
mov
iret
outsl
shrl
fldl
loope
inc
push
push
adc
sub
out
cmc
xor
lahf
imul
push
mul
subb
sbb
or
xorl
pop
movsb
clc
out
rorb
popa
lds
lods
dec
push
xchg
push
add
lahf
push
movl
xlat
data16
xchg
movsl
pop
inc
divl
mov
fldl
adc
jo
int3
fnstcw
orb
out
xchg
adc
add
nop
jo
jns
rorb
iret
clc
cwtl
xlat
jge
cmp
push
cmp
out
test
mov
push
inc
mov
jb
or
lahf
mov
movsb
aaa
mov
add
sti
add
data16
fmul
in
pop
mov
and
jmp
scas
popa
jns
lock
push
cld
pop
icebp
sub
or
int3
lcall
xchg
cltd
mov
pushf
and
cli
addr16
mov
imul
jbe
cmp
mov
and
loope
lods
stos
fdivl
bound
xor
call
cmc
xor
lret
xchg
mov
xchg
xchg
loop
ror
outsb
mov
push
loopne
shrb
adc
jmp
dec
xlat
je
sub
xchg
dec
dec
push
dec
jb
cmpsb
xor
jge
mov
jg
out
push
and
and
loop
subl
inc
insb
push
mov
into
fcmovu
add
mov
roll
insb
mov
repz
in
jmp
adc
sbb
outsb
mov
jmp
push
inc
cmp
cmp
mov
push
or
push
adc
sub
cmova
mov
pushf
notl
idiv
fidivs
pop
aas
fstpl
mov
cmp
adcb
scas
xchg
lcall
mov
mov
lods
into
cs
dec
les
divl
pop
sbbb
push
xchg
push
push
pop
cmp
push
rcrb
loopne
pop
hlt
iret
add
xchg
out
cltd
jnp
sahf
adc
stos
shrb
lcall
orb
outsb
addr16
sub
outsb
mov
mov
data16
int3
pop
pop
pop
lock
testb
xchg
insb
pop
or
in
jge
cmpsl
jg
xor
mov
mov
jmp
and
call
xchg
shl
xorl
sub
out
sbb
out
scas
sub
ficompl
iret
pop
sti
daa
add
jp
ss
out
int
xchg
xchg
ljmp
jp
pop
mov
push
repnz
inc
xchg
cmp
inc
out
loop
or
mov
cmp
mov
lea
loope
mov
inc
rorl
mov
sub
xor
in
jno
mov
add
and
xchg
fcom
xor
add
push
xor
sbb
mov
bound
sarl
int
inc
insl
aam
sub
out
xchg
fbstp
faddl
jg
push
imul
in
test
cmp
push
sub
jl
dec
cs
lock
push
adc
movsb
jae
jb
pminsw
nop
sub
lret
pop
mov
sbb
rclb
stc
cmp
xchg
jge
int3
jnp
pop
popa
xor
sub
dec
dec
jb
imul
and
cmp
rcll
sbb
idivb
insl
lods
in
repz
sub
jecxz
pop
and
xor
fildl
push
sbb
or
int3
lock
mov
stos
mov
xor
stc
mov
dec
fiaddl
shlb
mov
fiadds
pop
dec
add
adc
sub
mov
mul
push
pushf
rorb
xor
fisubrs
xchg
dec
add
loop
repz
jne
push
pop
pop
add
adc
fstpt
lahf
ds
jmp
pcmpgtb
stc
xchg
dec
lret
jbe
enter
repz
mov
add
xlat
ficomps
hlt
lock
and
out
std
push
inc
les
inc
stos
ficompl
fistl
scas
js
lods
mov
das
add
mov
into
lret
jg
repz
or
das
lea
add
ret
or
es
xchg
dec
cmp
test
mov
mov
add
adc
and
in
cmp
dec
or
and
mov
adc
cmpsl
hlt
fisttpll
mov
sti
xchg
inc
push
xor
mov
pop
and
repz
xorl
cmpsl
ficomps
fcomp
jmp
sub
or
jo
movsl
leave
xchg
xchg
jns
inc
mov
in
push
cli
das
fwait
sbb
addr16
pop
es
std
jbe
xlat
add
xor
insl
ret
int3
inc
mov
cmpsb
jl
mov
cmp
movsl
movsl
ljmp
mov
push
and
fisttpl
push
js
xor
push
pop
aad
pop
push
repz
push
jnp
dec
mov
aad
hlt
and
shrb
in
or
ret
jbe
lret
add
sahf
int
stos
or
out
je
mov
aad
inc
add
call
stos
daa
xlat
push
and
sub
adcb
cmpsl
fisubs
xchg
addr16
cwtl
xchg
sbb
xor
imul
mov
fnstenv
iret
sub
sub
lock
jb
imul
mov
adc
mov
cmpb
fcmovnb
mov
dec
dec
les
and
sbb
jp
mov
data16
adc
and
adcb
stc
mov
inc
mov
dec
movsl
imul
mov
int3
inc
subb
aam
movsb
cli
jg
ds
fdivrp
mov
inc
fiadds
jmp
sbb
ficomps
das
aaa
xchg
xchg
sub
push
xchg
and
mov
and
push
add
aaa
test
lock
hlt
jno
cmc
mov
call
inc
fadd
cmp
and
out
inc
or
test
rol
cmpl
mov
push
add
pop
outsb
daa
dec
sub
jo
add
sub
sub
in
aad
xlat
xor
dec
xchg
push
imul
jo
shll
inc
jp
mov
mov
xlat
dec
cmp
cmp
xor
mov
adc
movlps
mov
xchg
fwait
repz
cmp
sub
cmp
and
xchg
std
inc
and
js
push
pop
jge
dec
leave
stos
stos
sub
cs
fdivrp
xchg
lret
ret
dec
insl
push
jns
add
stos
adc
dec
lods
js
fisubrl
jle
loopne
inc
addl
push
pushf
lret
mov
imul
pop
clc
mov
jecxz
xchg
lahf
inc
mov
jnp
fwait
es
pop
dec
enter
dec
add
lds
daa
pop
jle
test
rcl
in
jl
pop
mov
pop
mov
cmpsb
xchg
jmp
dec
inc
sub
dec
mov
fisubs
mov
sub
add
mov
jecxz
push
xorb
cmc
in
dec
mov
imull
lahf
adc
jle
cmp
push
std
xor
sahf
icebp
jne
gs
int
sti
clc
repnz
movsb
lahf
loopne
lret
ret
ja
cmp
pop
hlt
pop
push
and
imul
or
pop
std
and
ret
pop
aad
mov
pop
xlat
mov
jne
ficoms
mov
jns
test
std
adc
std
imul
and
sub
outsb
icebp
rolb
sahf
xor
in
mov
sub
push
cltd
daa
add
and
push
into
push
daa
roll
xchg
mov
rcl
ljmp
mov
je
sbb
pop
inc
and
push
out
mov
scas
mov
adc
adc
aaa
push
add
fnstenv
or
pushf
xor
adc
sbb
mov
test
dec
mov
mov
jbe
or
mov
adc
or
sbb
or
pop
jp
add
jecxz
push
cmc
jb
mov
and
and
aam
hlt
xchg
test
or
fs
mov
jmp
ljmp
mov
jae
xchg
out
xor
test
dec
push
jne
aaa
or
mov
stc
fwait
xchg
dec
shrl
mov
jns
test
cmpsb
std
ror
xlat
xchg
pop
sub
test
pop
xchg
mov
sub
inc
mov
pusha
fs
pop
stos
arpl
shlb
out
fsubs
mov
inc
add
mov
roll
inc
roll
inc
mov
lret
push
lahf
pop
xchg
pop
or
fistl
aaa
add
cwtl
pop
push
rclb
fisubrs
push
fmul
mov
xchg
xor
cmc
pop
xchg
xchg
push
or
out
jl
inc
aam
fldcw
xchg
into
sbb
jecxz
and
xchg
stc
cmpsb
mov
sub
mov
xorb
mov
dec
out
jae
std
pop
adc
push
xchg
rep
insb
and
push
les
add
pop
fcmove
loopne
cmpsb
iret
int
cli
jb
scas
mov
je
xchg
icebp
out
std
adc
jl
cmp
and
fildll
cli
push
sbb
cmp
enter
jno
adc
rcll
or
mov
pushf
fdivr
dec
inc
dec
jne
stos
cmpsb
xor
fwait
and
xchg
jne
popa
xchg
push
cmp
mov
mov
sbbb
dec
out
and
lods
xor
lret
int3
clc
add
mov
lcall
iret
pop
mov
mov
mov
jbe
or
xchg
sub
hlt
mov
cmc
xchg
jmp
cwtl
jecxz
loopne
or
ret
scas
or
fldcw
mov
je
cmp
fmul
xchg
and
mov
iret
xchg
stos
jns
cmp
rcrl
mov
test
adc
ret
mov
xor
inc
popa
dec
int3
push
in
mov
in
stos
and
ljmp
cld
add
xchg
adc
imul
lock
mov
inc
xchg
lock
pop
fdivr
aam
and
lods
ret
dec
pop
stc
pop
imul
out
out
ds
jl
sahf
add
cmp
ret
jle,pt
scas
sbb
std
mov
sub
loopne
push
pop
fwait
dec
mov
mov
jnp
jns,pt
hlt
mov
mov
into
mov
push
xchg
push
lds
lret
outsl
pop
ljmp
lcall
out
fnstenv
inc
subl
sbb
mov
cmp
xchg
repnz
jecxz
rcr
adc
lret
push
je
sbb
ds
repnz
jecxz
insl
mov
lret
xor
add
xlat
inc
std
mov
lret
insb
in
inc
adc
xchg
sub
gs
or
dec
mov
push
sbb
into
or
lret
sbb
lods
jns
jecxz
pop
hlt
fadds
hlt
into
mov
aad
data16
mov
movsb
cmp
xlat
sub
in
add
and
pop
or
mov
fimull
sub
lea
pop
jae
inc
fisubrs
xor
dec
fwait
jae
sbb
lods
lock
loopne
lds
fmul
cmp
mov
popf
fucompp
and
mov
mov
xchg
jnp
mov
sub
sub
sbb
gs
push
sbb
xor
rcl
imul
xchg
xchg
jecxz
xor
in
cli
cltd
jge
or
xchg
dec
xchg
cmp
sub
pop
cltd
int
xor
or
pop
push
out
out
dec
xchg
es
or
lret
jns
cli
test
imul
add
cmovle
push
inc
push
mov
fs
mov
and
dec
inc
mov
in
cmc
outsb
sti
repnz
and
jge
add
xor
add
daa
daa
inc
test
pop
fstps
xchg
sub
xchg
dec
sbb
lretw
jb
out
push
jmp
arpl
rcll
jae
mov
sub
or
pop
push
mov
mov
or
jp
icebp
test
enter
repz
dec
aaa
inc
ljmp
jne
pop
mov
and
fs
dec
mov
or
mov
adc
shll
mov
cmpsl
pop
pop
jle
leave
stos
xchg
xchg
popa
movsb
pop
and
das
test
mov
sbb
pusha
jecxz
fbld
push
aam
lahf
xacquire
stc
leave
jb
shl
jle
and
test
xchg
adc
lea
sub
shrb
mov
add
sub
outsl
dec
scas
jne
mov
and
mov
jmp
ds
adc
js
cltd
pop
popf
adc
cli
fcmovu
pop
jnp
cmp
cmc
jmp
outsb
xlat
cli
mov
stos
repz
pop
push
push
adc
mov
jbe
mov
ret
ficoml
and
cmp
fcompl
mov
popa
sarl
push
out
mov
rcrb
iret
cli
adc
lret
sbb
mov
rcrl
rclb
loopne
cmp
push
sub
loopne
xor
mov
sti
aas
xor
pusha
or
xchg
jbe
aas
cmp
cmp
lahf
bound
adc
cwtl
and
sub
push
jg
or
testb
mov
inc
in
push
pop
repnz
or
xchg
je
adc
xchg
lods
inc
add
add
jnp
cmp
repz
add
imul
inc
and
pop
push
dec
aam
cmc
or
or
dec
mov
fiadds
dec
pop
cli
jmp
sbbl
jno
and
pop
cmpsl
mov
aas
dec
push
cmp
sub
aad
jle
inc
inc
cmpsb
scas
push
push
stos
xor
fdivrp
xlat
and
lds
xchg
pop
test
add
cmc
les
xchg
xor
fadd
xor
lods
push
xor
imul
pop
bound
dec
mov
iret
mov
test
ret
mov
mov
push
or
pop
test
and
xchg
and
jle
lret
xchg
push
aaa
loopne
lret
and
sbb
push
clc
adc
push
test
or
mov
jno
in
mov
pop
lods
pop
arpl
mov
ret
aad
mov
jns
push
sbbb
dec
mov
xchg
in
out
xchg
push
inc
les
sub
lcall
inc
jne
xor
adc
enter
jae
push
mov
repz
push
xchg
in
aas
scas
sub
loope
inc
pop
and
push
xor
mov
xchg
call
jnp
or
ret
pop
xlat
dec
rcr
fstps
add
dec
mov
inc
stos
lahf
outsl
jecxz
lock
add
fldenv
and
cmp
je
dec
dec
dec
inc
jg
push
cmp
mov
pop
movsl
out
jmp
push
jge
fcoml
inc
inc
cmp
cld
pop
shrb
mov
ljmp
aad
cld
insl
mov
inc
mov
es
xor
fisubs
into
mov
add
mov
mov
mov
imul
xlat
outsb
sub
sub
push
repz
and
jne
in
dec
cmp
insb
and
leave
jno
jge
pop
pop
mov
ja
cmp
mov
jnp
mov
sbb
and
imul
ret
inc
cld
pop
cmp
mov
jb
mov
bound
mov
xor
lahf
mov
pop
fcom
cmc
lret
push
in
int
pop
add
int
out
popf
sbb
adc
mov
movsl
push
mov
push
test
ffree
mov
js
cmp
cmp
cwtl
dec
insl
mov
xchg
lock
mov
mov
xchg
rcrl
jns
ret
in
loope
idivl
divb
sbb
call
adc
lods
adc
mov
xchg
call
adc
sbb
cli
cmp
jmp
addr16
mov
mov
add
js
cmp
mov
and
lahf
pusha
mov
or
dec
mov
jns
sbb
aas
or
je
push
ret
ss
rcrb
xor
adc
rcl
call
lret
cmpsb
fildl
js
push
call
dec
sarl
shr
adc
xchg
and
nop
sbb
stos
aad
sub
jmp
pop
lret
lods
add
loop
jmp
pop
push
aam
mov
bound
jge
xchg
xchg
decl
sbb
or
ret
stos
out
mov
int
icebp
imul
mov
xor
mov
push
cmp
out
dec
test
or
fs
rol
xchg
inc
repnz
shll
repz
xchg
in
stos
sahf
push
rol
push
jne
ljmp
mov
sbbb
iret
icebp
insb
cs
ret
adc
mov
daa
jb
mov
mov
into
cmp
movsb
movsl
adcb
out
lea
rorb
int
xor
fldcw
decb
dec
mov
pop
roll
dec
push
cmp
jle
add
mov
add
cli
rcrl
cmpsb
test
fnstenv
xchg
jg
int3
inc
pop
lret
cmp
xchg
and
pushl
mov
hlt
test
push
clc
mov
pop
mov
lods
adc
outsb
cmc
sbbl
clc
jae
fs
jnp
jbe
xchg
mov
popa
ljmp
iret
sub
mov
jg
adc
cmp
mov
shlb
xor
xchg
icebp
fdivrl
jbe
int
push
fwait
jg
mov
shl
jle
nop
sbb
scas
sti
sbb
jmp
sarl
nop
dec
ds
cltd
pushf
add
jns
xorb
pop
outsb
inc
sub
sbb
xlat
jp
fimuls
iret
jno
pop
ss
mov
pushf
test
hlt
mov
xlat
rcrb
push
icebp
out
mov
xlat
lret
sub
jl
mov
pop
stos
pop
xchg
sti
mov
or
repz
sti
mov
push
es
xchg
fs
cld
clc
outsl
std
jbe
test
mov
test
mov
sti
cs
xlat
mov
sti
cmp
hlt
aam
test
scas
cmc
xchg
xchg
fwait
in
cwtl
testl
fisubrl
orl
and
mov
arpl
xchg
adc
cltd
jl
sub
sar
lret
dec
add
hlt
outsb
in
jb
lods
fwait
ss
mov
icebp
mov
adc
xchg
mov
gs
or
movsb
fldl
test
jnp
pop
je
xor
mov
inc
sbb
das
pop
data16
jbe
inc
add
cmp
push
or
pop
cmp
mov
fldcw
loopne,pt
dec
psadbw
movsb
loope
lock
shll
hlt
aaa
pop
ret
add
jle
sub
ljmp
std
insl
dec
int
mov
insb
mov
adc
and
data16
outsl
pop
call
adc
sub
repz
notl
lret
sbb
insl
cmp
cli
int3
mov
lret
aas
enter
lods
call
xor
pushf
xchg
ss
int3
cmp
out
lods
cmp
inc
jbe
fmull
ror
das
jl
sub
lock
adc
sbb
in
fnstcw
inc
ret
stos
add
sbb
pop
add
ss
fcoms
mov
mov
inc
push
lods
dec
jo
cmp
sbb
clc
cmpsl
aas
and
call
jae
xor
ret
jmp
pop
cli
fdivl
pop
fsub
mov
adc
mov
data16
stc
fistps
mov
pushf
aam
icebp
xchg
sub
orl
dec
dec
fwait
ret
xchg
repnz
adc
pop
push
inc
js
jae
adc
lret
jp
xchg
xchg
dec
cmp
cltd
inc
cmp
ftst
pop
push
cwtl
fwait
jge
lcall
std
cmp
xor
ds
jge
ret
iret
push
jg
es
cs
sbb
dec
je
jno
orb
dec
pop
in
ss
fs
mov
pop
and
mov
fld1
xor
out
fnstsw
and
roll
mov
or
mov
outsb
dec
xchg
stos
xor
repnz
mov
inc
fnstenv
nop
inc
mov
mov
add
daa
fsts
xchg
cmp
cmpl
and
mov
mov
mov
roll
pop
pop
push
fstpl
js
add
pop
nop
fisttps
xchg
jb
mov
lock
adc
inc
jp
cli
add
mov
test
jbe
xchg
add
cmpb
ljmp
push
fwait
int3
addr16
ret
out
sbb
mov
cmpl
push
cmp
cmp
lahf
inc
stos
xchg
stc
out
hlt
shlb
cmp
in
cld
int3
sbb
out
cmp
aas
sbb
push
or
add
add
stos
jbe
mov
push
inc
mulb
xor
xchg
xchg
xor
xor
enter
dec
inc
loopne
inc
dec
dec
jle
push
pop
pop
xchg
xchg
dec
inc
cwtl
rcrb
sbb
faddp
sub
sarb
push
jne
pop
jne
movsb
lods
xor
daa
cmp
cmp
jns
mull
xchg
ljmp
xchg
or
roll
std
pop
test
shrl
cmp
pop
and
scas
fdivs
sub
fmull
and
pop
xchg
lds
fs
aad
das
pop
dec
and
repnz
lock
loop
icebp
fs
orl
lahf
lods
jae
sbb
das
cltd
or
dec
icebp
inc
mov
fistps
xlat
rcrb
rclb
mov
sub
ret
pop
adc
test
int
out
js
inc
sub
les
ret
cwtl
test
fdivrl
cmp
jl
or
jmp
sbb
xor
jmp
cltd
in
out
or
cmc
cmp
jnp
mov
jmp
lock
cltd
adc
mov
scas
shl
lahf
lock
mov
nop
fdivrs
mov
movsb
insb
mov
push
mov
dec
out
push
mov
in
mov
xchg
pop
or
test
jmp
fcomi
dec
negl
sbb
test
les
xor
ret
jb
jns
lret
popf
push
mov
pop
jl
pop
daa
xor
mov
mov
aas
aaa
sub
shlb
dec
jle
movsb
es
mov
mov
xchg
adc
dec
xchg
jo
and
call
jecxz
pop
inc
fisubl
pushw
fdiv
add
clc
movsb
pop
inc
mull
push
jns
sbb
cmc
je
nop
cld
add
popf
call
rcrb
scas
hlt
shr
sti
or
mov
std
xchg
xor
popf
cmp
cmp
das
and
inc
in
pop
xor
xchg
dec
mov
cwtl
pop
xchg
mov
int3
pop
inc
inc
mov
addl
fiaddl
mov
pop
pop
in
loop
ljmp
jno
xor
add
aad
je
fsubrl
pop
roll
ret
mov
push
cmp
mov
fadds
push
pop
in
call
dec
jne
ds
xchg
ljmp
and
xchg
stos
ret
movsb
out
push
test
inc
movsb
xchg
loop
lret
sub
loopne
mov
or
add
insl
adc
or
mov
or
dec
cmpsb
jo
sub
mov
inc
ljmp
dec
cmp
ja
les
push
jae
call
sbb
dec
scas
gs
int3
inc
xor
mov
cmpsb
aam
shll
sbb
mov
mov
pop
repz
sub
pusha
shr
adc
sti
mov
and
and
push
into
add
ret
mov
sub
jne
bound
jo
shll
loopne
lds
lcall
aad
sti
ret
jl
sahf
jbe
data16
ret
pop
inc
lods
mov
mov
cmp
mov
or
gs
xchg
sar
out
mov
sahf
mov
fsubrs
cmpsb
mov
mov
andl
and
loope
cltd
call
fdivrl
and
lods
sbb
mov
inc
fdivl
fs
push
push
lds
mov
mov
pop
inc
xchg
mov
outsb
sub
and
cmp
mov
sbb
bound
mov
hlt
rcll
decb
adc
pusha
mov
scas
xor
pop
mov
mov
lea
aad
push
test
pop
xchg
xchg
jp
stc
shll
fisubrl
inc
shl
fnstenv
mov
and
mov
jmp
aas
or
jmp
scas
js
sahf
fisubrl
cmpsb
mov
movsl
push
mov
cmpl
or
add
lods
jb
pop
inc
push
cmp
in
push
fsubrs
pusha
pusha
sbb
stos
mov
xrelease
cwtl
xor
sbb
cmpsb
sub
leave
mov
arpl
mov
clc
jns
aas
cwtl
or
xor
cmc
loop
xor
icebp
pop
pop
aad
dec
pop
mov
dec
rcl
push
fidivrl
mov
mov
xor
jg
mov
or
push
cmp
ret
shrb
cmpsb
lea
add
outsl
pop
fidivrl
les
cwtl
sub
inc
fldenv
xchg
fwait
bound
mov
sub
cld
out
repz
lcall
xchg
fistpll
xor
insl
pop
inc
adc
dec
push
das
xor
stos
xor
xchg
mov
and
in
xor
leave
subb
cmpsb
sbb
std
ds
adc
xlat
iret
notl
mov
shlb
push
xchg
cmpl
mov
into
out
in
mov
scas
xor
add
sahf
mov
dec
das
pop
movsb
aam
int3
jns
or
and
mov
pop
out
mov
push
dec
ljmp
cmp
cmp
xchg
cmpsb
sbb
dec
fdiv
inc
and
sub
hlt
push
xchg
push
jl
sbb
xor
insb
push
sbb
xchg
sbb
popf
push
sub
jno
adc
or
sub
pop
mov
mov
jmp
jmp
jg
jmp
mov
and
incl
adc
jb
xor
cmpb
sub
mov
int3
cmp
cmp
and
scas
jecxz
cli
je
fwait
sti
rcll
cmpsl
cltd
test
and
fwait
dec
pop
pop
loop
in
in
sbb
sub
mov
cld
and
fisttps
dec
inc
push
mov
mov
cmp
into
fisttpl
sub
dec
mov
and
js
stos
sarb
xchg
ret
pop
mov
rcrb
into
add
pop
lds
scas
iret
loope
mov
push
adc
and
and
rol
std
repz
add
scas
lea
pop
add
xor
in
scas
and
stc
ss
cmp
or
jo
push
pop
clc
jmp
or
cli
les
rcl
mov
in
push
ret
sbb
cmp
lahf
cmc
icebp
test
sbb
pushf
sbb
jp
pushf
ret
fcmovnu
sbb
aam
jne
pop
pushf
mov
pop
xor
inc
test
adc
shll
test
sarb
xchg
mov
or
clc
pushf
insb
into
pop
jge
adc
movsb
mov
cmp
mov
mov
test
dec
adc
loop
fisubrl
cmpl
popa
loop
cwtl
adc
dec
xor
aam
mov
jecxz
jmp
jnp
stos
xchg
cmp
stos
hlt
lods
hlt
xchg
mov
fimuls
sub
dec
mov
idivl
hlt
out
dec
pop
mov
fldcw
and
scas
inc
nop
imul
add
loopne
fidivl
out
pop
mov
xchg
enter
xchg
test
pop
adc
int
fdivrl
pop
std
mov
subl
xchg
cmp
dec
mov
das
in
xor
loope
call
movsl
int3
rolb
loope
in
xor
xchg
in
fidivrl
xor
pop
popf
cmpsb
and
jl
xor
mov
lret
push
jbe
test
sbb
mov
push
cmp
mov
call
loop
sub
and
ficoms
mov
xchg
loopne
jl
fsubr
gs
jp
ds
adc
push
std
je
or
shrb
push
repnz
sbb
or
push
xchg
nop
inc
mov
icebp
cwtl
rclb
dec
add
jecxz
pop
xlat
sti
outsl
ret
lahf
mov
loope
mov
and
ret
adc
dec
testl
xor
pop
iret
test
jne
push
je
call
rcrb
stos
mov
mov
pop
out
lock
mov
mov
pop
in
xlat
ret
inc
mov
out
fwait
and
jne
je
js
iret
jne
repz
mov
dec
mov
inc
sub
jg
insb
cmp
inc
jp
push
jae
or
mov
mov
dec
cli
in
xchg
lahf
arpl
dec
and
rcrb
xchg
mov
sbb
lods
xchg
push
xor
js
or
repnz
sub
xchg
mov
das
xor
es
xor
add
mov
fistl
adcb
iret
jge
xor
jbe
loopne
sub
jp
fdivrl
push
ja
dec
adc
fistpll
lret
xchg
pop
out
pop
jne
and
mov
cmp
out
popf
jne
sbb
test
or
inc
int
jp
jle
sub
call
mov
cmp
xchg
mov
outsb
sub
loopne
xchg
xor
ret
fstl
cmp
movsb
add
push
mov
jl
add
xchg
subl
sub
mov
int3
loope
mov
insb
mov
adc
fdivrs
mov
cwtl
leave
push
mov
mov
dec
sbb
stc
jns
test
sbb
dec
call
xchg
mov
cmp
loopne
arpl
negb
mov
pop
imul
in
jbe
cmp
xchg
mov
imul
jecxz
adc
mov
adc
dec
sbb
jno
mov
iret
mov
movsb
inc
jecxz
jmp
insb
mov
and
xor
push
outsb
mov
inc
cli
jne
leave
mov
dec
jg
add
xor
testb
mov
jl
jle
in
and
adc
push
cmc
ljmp
push
xor
pusha
dec
mov
in
and
cmpsb
add
mov
or
hlt
mov
add
cmp
pop
jmp
push
arpl
xor
push
jnp
stc
cmp
mov
mov
rorb
mov
je
pmulhw
jns
dec
popl
arpl
scas
cmpsb
pushf
test
xor
sbb
mov
mov
xor
movsb
repnz
inc
xor
dec
add
fwait
out
cmp
jge
jne
and
adc
cmp
scas
cld
cmp
lea
jg
shl
gs
test
adc
adc
imul
call
sub
decb
adc
jl
push
sti
int
loopne
test
add
lret
adc
les
mov
outsl
std
sti
xchg
leave
xchg
add
sbb
xlat
cmpsb
mov
in
outsb
xchg
enter
into
adc
lods
iret
in
push
movsl
leave
lret
cmc
sbb
adc
xchg
addr16
dec
rcl
rcll
mov
xchg
xor
xchg
popf
sbb
jecxz
xchg
mov
shrl
scas
stc
orb
jnp
mov
push
js
and
and
gs
xlat
pop
ret
gs
lcall
xchg
pop
in
jnp
arpl
dec
ficomps
mov
xor
xor
xor
inc
lret
xor
rolb
mov
pop
xor
push
ja
loop
std
cwtl
stc
mov
xchg
lods
aaa
mov
jle
gs
shll
in
xchg
push
cmp
aaa
dec
lock
fisttpll
int
and
ja
ret
fidivrl
es
mov
mov
cmp
cmp
cmpsl
and
inc
cmp
into
scas
jne
sub
sti
aam
call
mov
adc
repnz
sbb
ret
mov
stos
test
enter
pop
int3
cmp
das
into
lds
test
jo
sbb
aam
mov
push
sbb
mov
popf
aaa
xchg
daa
jns
arpl
enter
test
sbb
jp
xchg
jo
cmp
lods
inc
insl
adc
pop
xchg
fdivl
push
xlat
adc
xor
test
jmp
pop
aam
add
mov
shrd
mov
in
imul
push
fdivrl
clc
cwtl
test
shrb
push
les
push
sub
sub
imul
das
das
ljmp
sbb
stos
stos
rcrb
xchg
call
xchg
push
cs
cltd
mull
xchg
sub
xlat
testb
mov
addr16
lret
xchg
mov
mov
push
jae
jle
mov
dec
push
mov
iret
push
fstpt
cmpsl
gs
push
add
test
scas
mov
push
ret
dec
xor
push
dec
xchg
lock
fnstcw
repnz
and
ret
dec
inc
add
gs
add
add
xor
cwtl
fisubrl
cld
pop
je
xchg
mov
jp
paddusw
xchg
pushf
jmp
test
aaa
jecxz
fs
std
mov
dec
jg
idivl
ja
lock
imul
cli
sbb
mov
adc
push
nop
mov
popf
out
repz
loope
stos
test
and
xchg
mov
mov
mov
pop
pop
imul
add
xor
sbb
iret
bound
mov
sbb
pusha
jmp
xchg
xchg
cltd
sub
aam
mov
mov
hlt
dec
stc
jmp
cmp
add
popa
cmp
dec
dec
movsb
cmpsb
xchg
and
push
sbb
mov
dec
mov
enter
fwait
sub
push
lret
ljmp
xchg
xchg
cs
imul
pop
pop
cmc
fldt
mov
xchg
add
into
pop
cmpsb
xor
test
sbb
mov
xor
inc
adc
mov
dec
and
xchg
mov
sahf
arpl
dec
and
adc
pop
adc
jno
sbb
jns
scas
nop
popf
jg
sbb
aas
incb
out
pop
mov
adc
das
mov
call
movsl
in
popa
movsl
sbb
fsubrs
mov
call
and
xchg
ret
test
pop
mov
and
mov
fnstenv
dec
pusha
in
lret
dec
pop
sbbl
pop
in
sbb
mov
cmp
dec
movsl
cmp
lods
bound
incl
out
lock
movsb
shlb
pop
dec
xchg
inc
nop
push
inc
int
aam
xchg
push
adc
sbb
jle
push
pop
pop
fdiv
sub
mov
fistpll
jnp
sarl
fwait
and
mov
pop
into
add
push
mov
sub
dec
mov
movsb
mov
gs
aam
jl
inc
add
lcall
cmpsl
mov
add
or
daa
mov
stc
push
mov
pcmpgtw
or
imul
xchg
xchg
pop
lcall
xchg
adc
cmpsl
pop
out
push
les
arpl
pusha
andl
mov
pop
adc
adc
ror
test
in
xchg
cmpsb
imul
add
mov
xor
pop
loopne
xchg
sbb
jp
push
push
enter
rorl
add
jg
cmp
pop
push
shll
pusha
mov
mov
inc
ljmp
stos
sub
pop
ja
les
xor
pop
inc
cmp
mul
xor
xchg
xor
or
xor
lods
dec
int
mov
sub
push
add
shll
inc
inc
es
cltd
lods
jnp
xlat
mov
pop
hlt
lcall
test
dec
xor
jne
push
aad
in
or
rclb
shlb
xor
ret
int
cltd
imul
lahf
movb
rolb
xor
out
aas
popa
cwtl
in
mov
or
inc
ja
push
cmp
or
xchg
scas
mov
divb
push
std
mov
mov
xorl
dec
nop
jg
inc
lock
xor
and
lods
fnstsw
adc
das
dec
jmp
jne
cltd
xlat
loope
int3
hlt
aam
and
mov
xor
sub
push
cmp
jmp
test
jnp
jg
ret
and
xor
lods
ret
jne
and
fldenv
adc
add
das
subl
in
sub
lds
subb
push
scas
dec
mov
repz
inc
adc
and
mov
ljmp
adc
inc
adc
mov
xor
dec
fbld
push
mov
xchg
cmp
jno
pushf
pushf
test
jns
mov
push
fidivrl
jo
call
mov
aam
loope
mov
xchg
and
xor
pusha
jge
shlb
pop
dec
xchg
inc
adc
adc
inc
negl
stos
xchg
sub
sahf
notl
lods
jle
outsb
cmp
or
sti
push
xchg
xchg
bound
pop
and
ja
jnp
pop
out
dec
addl
mov
aam
inc
and
sarl
cld
js
pop
inc
or
repnz
mov
cld
fsubs
mov
or
jns
out
pop
mov
ret
sub
sub
adc
sbb
test
pop
xchg
daa
ret
cmpsl
push
sub
popa
rep
adc
adc
out
in
es
push
lret
pop
xchg
add
and
pop
sahf
into
cmp
pop
inc
pop
add
sbb
and
sbb
ds
cmp
loopne
mov
mov
cli
or
mulb
mov
daa
and
test
jg
clc
dec
mov
loope
xchg
rcr
and
xchg
pop
mov
cmp
fsubs
mov
cmp
mov
inc
sub
sbbl
push
nop
lods
nop
xchg
outsl
fcoml
cmp
push
ret
xor
loop
ss
or
in
inc
lahf
push
push
cmp
sahf
push
pop
cltd
and
fxch
cmc
fwait
adc
sub
in
add
js
movsl
and
jo
jo
lods
or
push
inc
pushl
dec
mov
xchg
jmp
cwtl
push
push
mov
rorl
mov
fwait
stos
out
mov
add
cmpl
xchg
or
add
inc
mov
pop
out
pop
out
nop
aam
xchg
sbb
push
adc
ret
xor
mov
mov
leave
xchg
loop
int3
fcompl
lahf
gs
fcoml
dec
pusha
jb
and
cmpsb
pop
inc
in
ja
and
and
pop
add
sti
mov
pop
out
mov
rcll
jbe
add
pop
jecxz
inc
add
xchg
xchg
sub
gs
dec
sahf
jp
mov
aam
cmp
cmp
mov
sub
enter
stos
adc
jge,pt
fnstsw
add
mov
push
sbb
sub
insl
insb
jecxz
xchg
sub
cmp
cmp
or
sub
pop
push
daa
pop
stos
scas
jle
mov
aam
add
push
jle
add
incl
ret
aam
push
loope
sbbb
and
mov
xchg
sbb
mov
outsb
outsl
mov
test
pop
jle
sub
jge
xor
adc
das
test
lods
mov
fs
lea
mov
ss
lret
mov
pop
push
insl
xchg
ret
repz
clc
jecxz
into
loopne
fisttpll
pop
cli
dec
lahf
or
cwtl
sbb
incl
aad
push
call
das
and
je
mov
xchg
xor
sbb
pusha
mov
lods
out
rcrb
xchg
daa
sahf
dec
mov
test
sub
or
push
mov
movsbl
xchg
test
xor
sbb
inc
sub
call
lock
inc
idivl
adc
stc
xor
xor
mov
je
lock
xchg
insl
xor
mov
pushf
xchg
test
inc
psubw
scas
pusha
push
jp
push
xchg
in
mov
lret
xlat
or
jg
nop
jl
jmp
loope
scas
cmp
int
mov
add
jle
je
lret
fidivl
cmc
or
cltd
xlat
xor
mov
xchg
add
test
and
in
pop
clc
pop
mov
not
in
push
jp
or
xor
mov
fsubs
push
es
xor
ret
jge
clc
xchg
lea
stc
and
sbbl
xlat
mov
xchg
negl
ffreep
aad
inc
mov
adc
xchg
inc
sbb
mov
push
aam
adc
insl
cltd
sub
outsl
in
inc
imul
cli
ljmp
cmc
push
sub
sbb
and
or
test
jbe
cli
lea
mov
lods
pop
pop
call
mov
iret
iret
pop
test
imul
pop
ret
sti
and
imul
or
xor
or
into
xor
mov
and
or
xor
popa
mov
stos
xor
test
das
sarb
loope
frstor
std
stc
add
sbb
xchg
ja
bound
cmp
or
mov
dec
inc
sti
rcrl
lea
jmp
test
xchg
sti
push
adc
pop
xchg
pop
push
ret
aaa
adc
cltd
xchg
lea
cli
pop
cld
mov
cmp
jne
inc
xor
test
dec
xchg
push
movsl
add
xchg
into
imulb
jge
inc
int
orb
pushf
push
in
add
clc
sbb
push
and
test
lods
inc
xor
push
cwtl
out
jmp
ds
xchg
sbb
insb
ret
loope
pop
iret
or
ja,pn
roll
xchg
mov
repz
in
or
addl
test
push
cltd
divb
push
sub
leave
aaa
xor
lcall
lods
xchg
pop
nop
pop
bound
leave
popa
inc
shl
xor
xor
xchg
ss
adc
out
or
repz
add
sti
mov
dec
xchg
and
xchg
mov
jnp
sarl
mov
cli
test
pop
xor
nop
push
dec
xor
sbb
insb
jp
xchg
jg
pop
cmpsl
jg
push
testb
ficoml
les
mov
sub
aad
push
popa
add
das
adcl
jge
js
jae
pusha
dec
movsb
sbb
repz
push
js
addr16
popf
call
dec
push
push
xchg
xchg
test
lcall
popf
inc
rcl
dec
cld
loopne
mov
into
mov
cli
out
movsb
popa
adc
out
cmp
scas
lcall
push
cmpb
xor
xchg
stos
xor
jmp
mov
inc
aas
cld
das
fidivl
stos
push
stc
cmp
adc
pop
and
mov
bound
fwait
ja
cli
inc
jmp
mov
xchg
mov
sbbl
in
push
fiadds
push
pop
or
fucom
cmp
pop
jecxz
dec
or
xor
hlt
lds
stos
int
cmpsl
mov
push
sub
rorb
inc
jae
mov
adc
mov
push
jb
mov
cwtl
sbb
icebp
ret
cwtl
std
push
dec
popf
scas
mov
arpl
adc
mov
and
ret
pop
frstor
adcl
pop
imul
jae
cmp
dec
lahf
andb
int3
mov
aad
mov
lret
jmp
inc
stos
xorl
out
sbb
ret
mov
out
pop
xchg
sbb
in
cwtl
inc
fnstcw
cmp
mov
pop
or
lret
ret
jp
test
push
xchg
or
popl
xchg
jge
mov
mov
xchg
mov
jmp
cmpb
xor
lret
sbb
inc
out
iret
jge
jmp
sub
lock
mov
dec
pop
lret
dec
fcomi
je
idivb
in
ficoml
jb
and
jl
adc
mull
push
jno
xor
scas
mov
arpl
pop
add
inc
xchg
cltd
jno
mov
in
cmp
das
cltd
inc
add
loop
push
mov
sahf
sahf
dec
roll
jle
mov
aaa
sub
xor
enter
js
ss
and
pop
xchg
popw
and
popf
les
jmp
pop
loop
xchg
push
and
push
jmp
cmp
std
lds
dec
loop
scas
inc
aas
adc
lock
nop
xchg
xchg
xor
xchg
sti
mov
popa
xchg
fs
mov
mov
es
mov
int
daa
mov
bound
aam
test
push
gs
fisubrl
add
xor
shl
stc
sti
push
lea
add
repnz
mov
ret
jmp
adc
fsubrs
xchg
push
lds
stc
and
hlt
aad
into
fcmovb
je
cli
add
stos
rcll
ljmp
xchg
sbb
dec
hlt
out
imul
arpl
jbe
in
sti
xchg
jge
int
jbe
sti
sub
xchg
arpl
dec
jp
sarb
leave
ja
mov
mov
push
mov
rorb
mov
lret
jns
sub
xchg
xchg
fcoms
negb
sub
testb
imull
xor
nop
xchg
dec
hlt
mov
sub
mov
pop
push
push
popf
test
ret
clc
cmp
add
in
pop
dec
movsl
setnp
fwait
push
add
fldcw
sbb
aam
test
inc
mov
jb
push
mov
xchg
inc
or
and
mov
push
rorb
xor
push
lret
daa
test
shrb
imul
xchg
mov
sub
hlt
int
adc
inc
clc
mov
xchg
mov
insb
xchg
add
jmp
aas
sub
and
add
ficoms
shlb
adc
jp
jge
subb
mov
divb
sub
or
imul
push
dec
negb
mov
or
repnz
adc
ret
jg
jo
pop
cmp
pop
push
daa
adc
jge
lahf
pop
adc
xchg
stos
int
sarl
push
mov
fidivrs
and
mov
inc
pop
xchg
adc
and
inc
push
inc
arpl
mov
fs
xchg
roll
test
out
cmp
into
out
shll
mov
in
iret
fisubs
push
enter
add
xor
jns
xchg
lock
aas
xchg
rcll
push
movb
bnd
ljmp
jge
sbb
sbb
mov
fwait
pop
and
call
leave
mov
jns
lock
mov
xchg
xor
cwtl
lret
cmp
adc
sti
sbbb
pop
add
dec
fstps
lods
add
in
cmp
add
test
push
jle
pop
jecxz
aas
or
jo
jo
ds
ficoml
dec
sub
pop
mov
inc
lret
cmpsl
out
mov
fcom
push
sbb
mov
mov
mov
inc
sbb
sbb
rclb
lret
fstpl
ljmp
xchg
in
mov
jp
loopne
mov
add
lcall
pop
sub
aam
fisttpll
ljmp
sahf
dec
add
xor
push
mov
jbe
mov
popa
jno
sahf
lds
mov
mov
fs
lock
cs
xchg
bnd
hlt
scas
dec
aad
xchg
push
push
je
push
mov
mov
xchg
lock
jle
cwtl
sub
repz
sbb
mov
push
jge
push
inc
xor
inc
pop
cmp
lret
icebp
cmp
cltd
inc
xchg
mov
sub
mov
cwtl
xchg
call
and
fcmovnu
mov
das
push
cli
xor
sbb
push
mov
repz
push
mov
incb
jecxz
jmp
or
or
mov
add
pop
mov
mov
cmp
mov
pop
xchg
sbb
fwait
stos
pop
xchg
jg
arpl
movsb
into
mov
inc
outsl
mov
and
jecxz
std
push
xchg
negb
push
xchg
jns
xchg
arpl
sbb
mov
incb
ss
into
andb
sbb
loop
test
jmp
ss
sahf
lahf
loope
repz
ficomps
add
leave
dec
pop
or
addr16
mov
xchg
lcall
sbb
sbb
sbb
adc
outsb
cld
aaa
lock
into
mov
testb
test
das
lret
mov
sti
pop
xor
pushf
dec
xor
sbb
lea
jge
inc
cmp
icebp
scas
jae
mov
lods
ljmp
idivb
dec
mov
xor
dec
das
mov
mov
adc
movsb
das
out
mov
lock
or
xchg
popf
mov
test
push
inc
dec
scas
fsincos
je
lods
pop
mov
out
dec
mov
in
mov
test
jne
cmp
jns
das
jle
mov
push
lret
mov
xlat
jge
or
mov
popf
cmp
inc
shll
hlt
sub
out
xchg
cwtl
iret
icebp
xchg
add
data16
out
xchg
mov
outsb
xor
imul
enter
inc
outsb
fmull
jbe
and
dec
xchg
jge
fwait
pop
pop
inc
loop
mov
rorb
sub
push
cltd
add
repz
mov
mov
and
sti
movsl
mov
data16
pop
or
out
add
or
mov
test
adc
outsl
push
push
int3
xor
cmc
sbb
or
jae
adcl
xchg
mov
xor
and
mov
adc
push
and
xorb
mov
mov
mov
sbb
cltd
xor
sub
and
stos
in
inc
and
fcoms
fidivl
cmp
or
fcoml
mov
adc
pusha
sbb
lds
pop
cltd
mov
and
test
and
idiv
mov
cmp
ror
and
xchg
cltd
inc
aam
inc
dec
call
repnz
js
out
jmp
pop
push
add
inc
pop
jg
sarl
xor
adc
repnz
arpl
push
xor
clc
shl
loop
mov
xchg
fisubl
dec
sub
cmp
mov
dec
dec
sti
mov
lea
lds
aas
and
jecxz
test
popl
in
jle
fxch
xchg
ret
push
push
mov
mov
lods
dec
jge
rcrb
jne
je
repnz
sub
push
mov
int3
dec
cmp
sub
jge
inc
test
pusha
das
and
pop
pop
out
rorl
jno
in
leave
inc
test
out
scas
stos
or
cmpsb
jmp
mov
pause
xchg
int3
std
and
jae
rorl
mov
adc
gs
mov
xchg
stc
js
and
pusha
pop
ss
pop
inc
lock
adc
jbe
adc
push
pop
jnp
pop
mov
adc
sub
or
jmp
shlb
cld
cld
xor
push
pop
loopne
cwtl
fwait
xchg
lcall
adc
cld
cli
dec
dec
hlt
lret
je
clc
sarl
dec
xchg
push
hlt
lcall
lret
shlb
mov
push
jle
or
dec
enter
adc
sub
xchg
dec
arpl
fistpl
imul
clc
mov
xchg
jg
mov
sbb
cmpsb
testb
adc
pop
mov
aam
and
and
in
aaa
push
out
out
add
cmp
pop
or
in
pop
fucomi
call
arpl
dec
andl
add
ds
and
iret
xchg
mov
outsb
arpl
mov
gs
mov
pop
xchg
inc
dec
mov
scas
cmp
dec
jne
or
mov
cmp
xchg
inc
andl
sub
jmp
xchg
fmulp
xlat
jno
pushf
xchg
mov
iret
pop
mov
inc
fnstenv
and
shl
insb
inc
push
scas
sub
jns
mov
jge
mov
fwait
stos
xchg
mov
test
rorb
aad
aam
jge
clc
loopne
inc
test
leave
and
scas
dec
cli
int3
sub
repz
mov
mov
js
int
or
stos
mov
rolb
les
shll
add
fnsave
fcomip
test
jmp
push
shlb
aam
cs
xor
test
xor
imul
adc
test
xor
mov
das
jnp
test
cmpsl
clc
rol
enter
sbb
mov
add
jecxz
mov
mov
fldenv
lods
sub
nop
ljmp
xchg
and
stc
or
out
aad
out
xchg
pop
dec
pop
lcall
repnz
jmp
inc
jbe
and
loopne
xor
fwait
inc
mov
lds
push
iret
outsl
mov
and
or
es
dec
xor
dec
mov
dec
dec
nop
leave
and
and
lcall
push
dec
dec
rcl
hlt
fbld
clc
lret
jns
mov
xchg
negb
sbb
clc
imul
pop
les
rcll
push
in
push
es
fisttpll
loopne
xchg
cmp
popa
test
sub
std
out
fs
mov
dec
lcall
int3
ror
out
xor
stos
pop
pop
daa
shl
add
xchg
cmp
pop
push
ja
aaa
popf
add
sub
inc
out
mov
insl
add
add
fisttpl
enter
int
daa
out
dec
jmp
stos
sub
ror
lds
in
xchg
add
dec
push
dec
xchg
sbb
xchg
hlt
xor
mov
pusha
mov
push
imul
insb
mov
dec
repz
loop
shll
test
cmpsb
popf
cmpsl
shlb
incb
repnz
or
xchg
xchg
or
push
jae
sbb
cltd
dec
add
xor
jbe
pop
sbb
push
je
mov
mov
or
adcb
sbb
inc
push
xchg
dec
sub
mov
jno
jb
hlt
lods
pop
pusha
and
icebp
cld
mov
test
push
sbb
daa
nop
loope
and
push
mov
fnstsw
les
sub
mov
sub
xchg
sarb
sub
mov
fidivrs
push
in
xchg
arpl
out
jns
test
hlt
and
xchg
push
mov
xlat
flds
push
movsl
jb
loope
add
bound
mov
or
sahf
cwtl
xor
lds
add
test
repnz
adc
pop
xor
mov
dec
xchg
aad
hlt
cld
test
sbb
mov
mov
sbb
cmp
nop
mov
je
xchg
push
xor
into
or
cmpb
xchg
loopne
pop
mov
pop
push
jg
add
iret
mov
jnp
pop
orb
std
sarb
cmp
cld
iret
aam
xchg
nop
leave
mov
std
xchg
repz
pop
or
xchg
testl
and
xchg
lds
cmpsb
mov
lock
orb
jl
pop
jl
push
popa
adc
lods
das
push
adc
lcall
cwtl
jns
push
movl
pop
int3
out
and
shll
inc
scas
sub
aad
das
push
lret
sub
mov
dec
lret
iret
add
xor
fsts
xchg
jnp
xor
lahf
fcos
imul
xchg
pop
mov
fisttpl
stos
jnp
scas
jl
ss
cmp
adc
pop
or
in
mov
ret
pusha
inc
mov
inc
sbb
leave
lods
shl
add
aad
movsl
fld
int3
xchg
loop
jnp
loopne
xchg
repnz
and
lods
cli
sub
push
pop
sbb
jg
xchg
ret
cld
das
mov
and
inc
add
nop
mov
mov
dec
daa
cli
xchg
mov
loope
adc
jmp
jge
aam
cmpsl
movsl
mov
loope
mov
movsl
test
jnp
repz
jns
addl
xor
mov
lods
arpl
add
pop
jp,pt
fwait
sbb
cmp
jg
mov
mov
outsb
xor
ds
jl
dec
cmp
xchg
dec
mov
xchg
negb
ret
xchg
mov
aam
popa
call
ss
pop
xchg
or
xor
xchg
fimull
pop
mov
cwtl
sub
sar
pop
int3
cmp
ljmp
xor
lret
xor
or
aas
mulb
fwait
int3
sub
repnz
fcmove
and
cmp
push
movsl
mov
push
fwait
xorb
shll
xor
into
or
inc
mov
adc
fstps
or
cmp
push
add
outsb
repnz
mov
inc
lcall
push
adc
adcb
inc
lahf
es
inc
ja
xchg
cmc
gs
xchg
aad
out
sbbl
insl
orl
lds
xor
js
loopne
inc
pop
addr16
mov
push
sbb
push
aam
push
cmp
push
in
orb
sub
movsl
lea
mov
lcall
and
mov
arpl
pop
sub
ja
push
les
cli
mov
pop
js
jae
out
sub
les
push
sub
popa
loop
iret
mov
xor
pop
jge
jmp
or
pop
js
xchg
dec
rcrl
fbstp
cmp
push
jp
dec
xchg
stc
fidivrs
add
popa
repz
out
jp
cwtl
inc
add
cmpsl
cmpsb
add
mov
pop
inc
shll
js
adc
ret
sbb
mov
inc
std
call
cwtl
sub
xchg
movntq
cs
out
sarb
xchg
fdivrs
out
push
pushf
sbb
aad
ds
sub
loopne
out
mov
out
loop
or
sbbb
outsl
movsl
movsl
sti
out
cmpsl
jg
adc
fcompl
rcr
icebp
dec
ja
xor
inc
lcall
jecxz
mov
xchg
or
or
repnz
sub
xor
loope
bound
cmp
pop
sbb
dec
subb
loop
dec
lahf
cmp
mov
xchg
cs
jge
adc
ja
xchg
pusha
xchg
insl
jg
loope
xchg
inc
jne
pop
gs
out
mov
and
cmpsb
xchg
xor
cmp
lret
mov
mov
insb
adc
xchg
sarb
mov
int3
pop
mov
pushf
imul
orl
lahf
ffreep
cltd
mov
pop
dec
stos
sbbb
mov
scas
jbe
add
testb
lahf
int
loopne
stc
cmc
stos
orb
rcll
ret
add
mov
add
add
adc
test
mov
ret
mov
call
pop
iret
in
hlt
add
dec
pop
push
mov
push
les
shll
loope
pop
push
int3
xor
pop
cmp
xchg
sti
mov
jle
sarl
iret
movsb
push
imul
ret
mov
imul
rclb
lret
int
aas
stos
inc
mov
jae
cwtl
das
adc
dec
nop
xchg
pop
nop
iret
cmp
rolb
lahf
stc
sub
notb
and
or
mov
pushl
stos
adc
inc
xor
shll
in
sbb
inc
pop
ret
gs
shrb
aaa
pusha
cmc
test
pop
jmp
repnz
mov
cmpsl
popa
subb
push
jl
mov
xor
pop
mov
test
cmp
test
pop
repnz
xchg
inc
popf
dec
icebp
stc
imulb
xchg
fdivrl
mov
add
jmp
popa
mov
cmpsb
sbb
xlat
das
and
and
hlt
xchg
adc
xchg
mulb
mov
or
add
push
enter
lret
call
mov
outsl
icebp
aad
xor
cmc
jae
loop
jmp
xchg
pop
add
xchg
movsl
mov
dec
mov
fistps
cld
lock
fidivl
xchg
cld
dec
xlat
jb
daa
or
xor
cltd
sub
mov
pusha
pop
cmp
je
dec
shr
jbe
cli
push
movsb
test
clc
icebp
ret
mov
out
mov
das
les
mov
mov
into
loope
push
ljmp
mov
into
lods
dec
shl
dec
xchg
clc
cs
mov
in
cli
add
mov
cs
xor
mov
dec
xchg
andb
push
push
in
pop
cltd
cli
out
dec
fisttpll
sbb
dec
push
and
in
xor
sub
xchg
dec
enter
fs
shrl
mov
dec
loopne
aam
pop
push
fisttpl
movsl
xchg
push
jl
lods
sub
mov
and
out
mov
hlt
pop
mov
or
loopne
ffreep
lods
mov
pop
popf
fdivs
jnp
inc
movsb
in
enter
xchg
and
iret
insb
jecxz
jne
cmp
cwtl
adc
aad
cmpsl
inc
add
fdivrs
mov
shll
adc
push
cmp
fisttpl
jecxz
imul
lds
inc
mov
jb
mov
jp
pushf
and
push
cli
fstp
ja
movsl
mov
adc
repz
test
jp
jae
pop
mov
xchg
push
jecxz
aaa
leave
add
loopne
fcmovb
fdivrl
fistpl
adc
cltd
lock
cmp
jge
pop
aad
loopne
leave
iret
dec
inc
sti
sti
movb
xor
mov
nop
cmpsl
shr
icebp
mov
sbb
jo
pop
xchg
ror
mov
cwtl
mov
into
pop
cltd
jle
movsl
aam
sbb
jns
jle
xor
jb
add
mov
jne
int
mov
fnsave
call
push
lret
bound
and
mov
test
data16
data16
xchg
adc
pop
iret
incl
jb
test
mov
inc
xchg
scas
push
sahf
int
adc
push
mov
cmc
test
mov
gs
sarl
js
daa
cmpsl
enter
jne
and
test
js
in
cmpsl
jo
in
sbb
adc
jne
dec
push
mov
mov
xchg
push
test
gs
sar
mov
mov
mov
cmp
jmp
jo
mov
sbb
std
out
aad
cltd
or
sbb
mov
add
insl
aas
add
enter
jnp
and
out
jo
fisttpll
xor
rorl
das
pop
push
cmpsb
addr16
int
int
or
ja
outsl
mov
sub
push
aam
icebp
data16
xchg
or
addl
dec
mov
jg
inc
or
or
repz
bound
ret
mov
cltd
jp
lods
push
and
cmp
sub
icebp
iret
orb
push
inc
imul
mov
jns
add
cmpl
addr16
xchg
dec
nop
and
in
push
cli
pop
gs
aad
lahf
pop
pushf
cmp
xchg
ficoms
lods
inc
pushf
lret
lret
sub
xorb
push
imul
mov
movsl
das
sub
sub
xchg
out
add
test
std
in
rcr
push
pop
fcmove
and
aad
lods
sar
add
repz
sbb
out
jae
ja
fsubrs
hlt
or
jmp
xor
cld
cmp
xor
repz
fcomp
cmc
outsl
jnp
stos
adc
jecxz
mov
rolb
js
ret
jl
sbb
mov
jbe
mov
mov
scas
jge
outsb
cmp
jp
jge
pop
lret
mov
cld
out
movsl
test
pop
test
cli
fistps
shlb
int3
jo
and
xor
adc
je
xorl
insl
iret
je
lret
dec
repz
shlb
into
and
xor
jmp
jns
cld
aam
xor
jp
cltd
mov
fstl
test
or
sub
loop
lret
add
mov
ss
mov
or
fistps
inc
sub
movsl
test
inc
adc
mov
test
jge
jg
pop
inc
xor
cmp
sarl
dec
popf
cmpsl
adc
inc
test
pop
jl
mov
pop
insb
and
jb
push
jg
xlat
dec
fnstenv
jne
aam
mov
daa
lods
jmp
mov
stc
in
movsl
sahf
dec
outsl
hlt
call
stos
adc
dec
repnz
pop
mov
cltd
jge
mov
mov
loope
jo
in
ss
jge
xchg
pop
lcall
movsb
das
fsts
inc
xor
dec
iret
jmp
push
fimuls
xchg
repnz
jp
fsub
dec
in
push
sbb
pusha
fsub
sti
test
sub
and
lcall
bnd
push
lret
pop
les
dec
fnsave
rcrl
jge
je
xchg
jge
dec
push
iret
mov
inc
dec
xchg
sub
imul
test
mov
sub
jnp
jecxz
push
mov
lods
mov
push
in
cpuid
lahf
mov
pop
adc
inc
mov
movsl
inc
fdiv
lods
push
mov
jo
ret
ret
loope
or
data16
xor
bnd
jae
sbb
push
lahf
movsl
negb
das
mov
iret
fs
mov
je
cmpb
sar
or
pop
lret
data16
aad
dec
loope
je
dec
mov
sbb
hlt
out
arpl
lods
sub
aam
int3
add
repz
jp
aam
or
lods
inc
popf
sub
xchg
outsl
push
cmp
adc
fstpt
fnstcw
mov
cwtl
or
orl
ja
dec
addr16
and
shll
adc
adc
ja
or
sahf
dec
xchg
jmp
adc
popa
mul
jp
and
roll
popl
and
or
and
push
inc
and
xchg
and
vrsqrtss
in
pushf
dec
mov
sub
ret
cmp
pop
hlt
out
or
jle
les
faddl
inc
call
pop
lods
jl
outsb
rorb
jg
xchg
aad
test
xchg
xor
xor
inc
mov
mov
cmpsb
xchg
movsb
push
ds
out
cmp
mov
shl
daa
cmc
xchg
mov
int3
jb
jp
imul
mov
mov
out
repz
sbb
rorb
inc
repnz
ret
pushf
push
adc
add
mov
push
jb
and
mov
dec
sub
mov
fcoms
push
sarb
cmpsb
add
xor
insb
dec
int
gs
stc
inc
jecxz
addr16
push
xor
sub
cmp
comiss
loop
jb
mov
mov
fdivrl
rol
ds
es
xchg
ljmp
push
std
push
inc
fwait
in
cli
mov
fisubrl
cmp
jb
lret
lahf
fidivrs
push
outsl
adc
divb
ret
aam
dec
jnp
push
pop
fisubrl
mov
jl
scas
sbb
cwtl
in
xor
jns
std
mov
mov
mov
xchg
testb
out
mov
adc
pop
xchg
cmp
pop
push
mov
in
mov
mov
out
xchg
aad
les
repz
andl
out
cmp
cmpsb
test
cld
into
out
xor
push
pop
int3
je
hlt
pop
icebp
pop
cmpsb
push
sub
popa
and
scas
pop
popa
xchg
mov
clc
in
aam
dec
mov
cmp
xchg
jmp
sbb
enter
aaa
pop
sub
pop
pusha
adc
in
enter
lock
loope
aaa
dec
sub
inc
dec
lret
fdivp
inc
inc
push
mov
add
mov
push
fimull
mov
loopne
pushf
jmp
cmp
push
fs
cmp
push
mov
mov
or
call
hlt
mov
add
jle
inc
pop
lods
inc
lock
mov
into
cmp
sub
inc
movsl
and
xlat
pop
in
and
cwtl
push
jno
jle
outsl
xchg
faddl
int3
dec
in
test
mov
lret
movsb
mov
jbe
cmp
inc
and
hlt
icebp
divl
pop
add
cld
fmuls
mov
loopne
push
dec
orl
cmp
sar
pop
adc
add
jle
jle
cld
scas
repnz
jb
push
cltd
push
pop
cmp
mov
je
push
jb
jb
push
cmp
ret
add
cld
mov
xchg
sub
jg
sahf
mov
fdivl
jecxz
sti
ret
bound
push
shrl
push
aad
add
dec
or
xor
mov
rorl
aaa
imul
mov
pop
xlat
inc
stos
lcall
adc
int
xchg
mov
lahf
mov
pop
insb
mov
insb
mov
cmpsl
fsubl
lret
and
mov
or
repz
or
in
cmp
inc
and
mov
into
adc
lock
sbb
test
ret
popa
add
sbb
jbe
mov
ljmp
imul
fsubr
faddl
inc
int3
xchg
cmp
sub
daa
add
xor
mov
outsl
lock
jle
mov
data16
jmp
aas
push
adc
cld
mov
insb
inc
je
jecxz
cmp
adc
mov
outsb
dec
mov
xchg
data16
insb
mov
dec
jecxz
xchg
sbbb
nop
jl
fsincos
mov
push
ret
ret
mov
aaa
scas
mov
dec
bound
movsl
sti
pop
adc
xor
mov
dec
je
sbb
pop
cmp
pop
pop
mov
adc
cli
roll
rcl
inc
fcomip
cld
and
cltd
xor
xlat
push
fwait
pusha
push
in
cmp
int3
push
and
fsubs
dec
dec
lret
mov
out
daa
cli
pushf
or
xor
mov
nop
outsb
cwtl
xchg
cli
cmpsb
dec
push
lret
jle
lock
xor
sbb
lea
inc
into
jmp
pop
jecxz
test
scas
out
cmpsb
mov
xor
stc
mov
dec
lds
xchg
or
mov
mov
clc
rcrl
je
jg
jnp
sbb
fdivrs
jne
inc
pop
loopne
int3
xchg
and
and
sbb
sub
js
lds
mov
push
jge
xchg
jge
lds
lds
push
call
fdivs
sub
mov
adc
enter
in
pop
mov
movsb
ret
cmpsl
pop
std
push
inc
and
add
pop
inc
pushf
es
mov
imul
call
hlt
cmp
mov
adc
movsl
and
lods
lods
popl
js
fmuls
in
jae
mov
jo
or
pop
gs
cld
ret
mov
push
push
push
fcoms
xorb
push
mov
mov
sbb
or
xchg
repnz
rolb
jo
aaa
lret
cmp
lock
inc
mov
pop
sbb
into
add
icebp
ror
cs
jl
out
pop
es
push
scas
std
rcrl
out
mov
lahf
sbb
sub
or
jg
dec
repz
orl
shrl
xchg
clc
hlt
or
xchg
adc
jge
push
jae
into
lahf
dec
fstps
cld
sbb
xabort
loopne
outsl
inc
mov
fbstp
adc
ja
jle
clc
cwtl
sub
test
adc
cld
mov
jmp
es
mov
test
mov
mov
or
inc
mov
jle
pop
or
sti
xchg
xchg
insb
push
mov
movb
pop
cwtl
imul
pop
jns
mov
lock
jmp
loope
pop
pop
sub
bound
lods
xor
sarb
jl
aam
mov
mov
addr16
aam
sahf
lods
sarl
lock
push
lock
sti
hlt
fnstsw
enter
jbe
pop
inc
pop
jmp
push
lods
iret
clc
ret
fbld
or
test
jne
xchg
or
mov
jl
dec
pop
test
inc
mov
lock
gs
hlt
addr16
push
aaa
jecxz
cs
daa
call
pop
dec
push
das
aad
mov
mov
add
sarb
inc
test
mov
aam
lds
data16
je
push
sti
mov
jo
xor
call
in
cmpsl
das
pop
ror
jmp
stos
pop
lret
out
jl
xor
sub
icebp
dec
outsb
popf
or
mov
shr
push
inc
xchg
in
insb
test
cmp
xchg
loope
lahf
enter
sbb
sub
sub
jmp
mov
shr
pop
dec
add
imul
pushf
out
call
adc
sbb
lds
lds
sub
or
das
mov
inc
call
cmc
cmp
or
xchg
dec
test
add
mov
adc
in
aam
aas
outsb
je
shl
shll
das
cmp
inc
or
xchg
cmc
adc
aas
insl
xchg
lret
inc
sub
mov
add
mov
andb
mov
pushf
test
pop
loop
outsl
gs
out
in
aam
cmp
dec
out
xlat
push
cltd
sbb
test
imul
cmp
jmp
sar
add
pop
inc
arpl
inc
nop
popa
repnz
filds
dec
jmp
mov
mov
jae
add
jnp
stos
mov
or
faddl
and
out
jge
dec
push
and
inc
dec
sub
shll
adc
adc
loop
xchg
sub
cmp
xchg
mov
xor
shr
and
add
call
fcoml
aaa
test
xchg
pop
lds
test
or
push
movsl
push
ficoms
fists
mov
scas
pop
push
je
xchg
adc
add
inc
cmpsb
pop
mov
clc
adc
jmp
nop
mov
test
mov
fmulp
pop
mov
dec
fldt
mov
lret
xor
std
das
call
dec
dec
stc
mov
lods
fldenv
pusha
xor
iret
xor
and
outsl
loope
aaa
cmp
ficoml
sub
jno
out
fistpl
mov
or
filds
sti
rcl
sti
mov
pushf
repz
inc
test
in
pop
and
out
jge
xorl
rol
inc
mov
push
lcall
cld
mov
mov
inc
imull
lret
sub
inc
std
xchg
xchg
shlb
orb
cmpsl
fsubr
sbb
jl
out
push
icebp
cmpsl
mov
and
mov
xlat
nop
add
pop
mov
dec
call
xlat
mov
add
fisubl
imul
sub
cmpsb
xor
jbe
es
sub
imul
inc
push
repnz
inc
call
mov
movsb
aad
sub
divb
jmp
arpl
xchg
adc
adc
inc
gs
adc
repz
iret
or
xchg
adc
jno
cltd
adc
in
fimull
dec
xchg
and
out
adc
sub
cltd
inc
je
notl
push
data16
lahf
sbb
lahf
fwait
xor
mov
and
jae
dec
movsb
cli
iret
push
xchg
aas
cmpsl
adc
lret
ret
sub
jns
mov
push
pop
cmp
movsb
push
lods
mov
push
fucompp
inc
into
shr
xchg
gs
lahf
xorl
jno
dec
add
cld
test
cs
movsb
mov
int3
push
shlb
loopne
mov
leave
mov
cmp
mov
xorl
js
pusha
xor
and
sub
xchg
and
call
xchg
mov
xchg
add
fdivrl
mov
fsubp
xor
mov
jp
insb
aas
rclb
test
cli
data16
not
lret
xor
push
mov
adc
pushf
aad
in
in
hlt
push
sub
xchg
fstpt
xchg
std
sub
or
jle,pn
xor
insl
sti
lods
fidivrl
jl
jne
bound
stos
test
mov
dec
xor
fisttpll
xchg
fisubs
jb
jb
hlt
push
jmp
orl
ja
pop
and
add
cltd
leave
cmpsl
pop
aaa
mov
lcall
pop
pop
daa
clc
xchg
outsl
cmp
movsl
addr16
pop
test
in
mov
mov
dec
ds
push
cmpsl
popa
cmp
out
fs
xchg
cmp
das
popa
add
xchg
or
push
imul
imul
mov
jb
xchg
imul
movsb
es
mov
fistps
cmp
popa
sub
pusha
out
jmp
xchg
push
dec
scas
pusha
lret
add
xchg
dec
mov
mov
ret
mov
and
jmp
aad
push
sub
loop
sbb
hlt
xchg
jp
pop
stc
ja
std
mov
call
dec
xchg
in
adc
fildll
adc
fdivr
lahf
push
mov
inc
mov
sbb
dec
sbb
push
jl
dec
add
call
loope
notl
daa
dec
jns
js
pop
mov
in
or
mov
je
movl
roll
mov
iret
and
push
in
inc
test
out
fisttps
clc
jns
hlt
fwait
in
aaa
movsb
hlt
push
mov
xlat
xchg
and
shl
sti
fwait
dec
fstpt
add
jmp
adc
cmpsl
xchg
jecxz
outsl
mov
sub
cld
and
sub
lods
cmpsl
int
leave
jo
hlt
mov
out
push
or
fidivl
fdivr
adc
sub
lahf
or
or
scas
jmp
push
pop
cld
mov
sbb
xchg
mov
outsb
rcl
es
in
jo
or
mov
add
or
pop
or
in
mov
cmpsl
sbb
imul
dec
jmp
pop
stos
mov
out
js
fwait
popa
movsl
add
or
movsl
sbb
fstpt
push
clc
popf
jae
inc
pop
lds
data16
sbb
push
out
xor
in
sti
std
loop
shlb
jnp
push
divl
mov
daa
inc
adc
push
int
jnp
cltd
mov
outsb
inc
adc
mov
mov
jmp
dec
test
xchg
jmp
hlt
mov
xchg
std
mov
xchg
push
mov
xchg
cmc
push
lock
loop
lock
jmp
lock
push
lock
pop
int
jmp
mov
loopew
outsb
clc
pop
cwtl
lods
push
dec
xchg
stos
mov
lea
in
fcmovb
test
jbe
dec
push
test
lcall
mov
or
test
sub
mov
xchg
scas
inc
cs
push
xor
fistps
mov
cmpsb
xchg
mov
jge
scas
stc
adc
xor
movsb
mov
out
or
xchg
inc
int3
test
sub
repnz
push
je
cltd
push
cltd
pop
shr
pop
and
iret
xchg
in
jle
popf
adc
xchg
mov
loopne
negl
xor
xchg
xchg
mov
aas
lods
stc
leave
sbb
rorl
paddq
jnp
xchg
in
ds
adc
inc
sub
popa
das
push
cmp
insb
cwtl
xor
pushf
push
mov
jmp
cmp
and
pop
dec
ljmp
das
lods
push
and
dec
fcmovne
xchg
insb
sub
addr16
aad
jae
test
mov
cmpsb
adc
sub
sarb
xor
shlb
xchg
xor
les
xchg
xchg
loope
pop
divl
lds
sarb
or
addr16
mov
icebp
mov
jp
aam
jb
pop
mov
test
and
out
lock
push
daa
daa
xor
push
xchg
xor
ss
inc
and
hlt
dec
enter
das
mov
jle
add
xchg
loopne
aas
roll
xchg
cmp
pop
stc
ret
cli
cmp
pop
aaa
jmp
cwtl
iret
fwait
mov
sub
cltd
adc
push
ret
adc
pop
rolb
popf
pop
roll
pusha
pop
pushw
mov
adc
aas
test
dec
mov
je
mov
cs
lds
cltd
mov
adc
cmp
movsb
cmp
out
shll
ret
push
or
fs
cmp
xchg
movsb
rorl
lret
repz
push
dec
mull
add
ds
pop
push
test
adc
roll
sub
and
bound
adc
ljmp
ljmp
lret
clc
sub
cmp
movsl
add
mov
sub
add
push
and
push
mov
imul
out
mov
dec
dec
out
dec
das
sahf
mov
stc
fisubrs
pop
sub
xchg
lods
rcll
pop
jge
cmp
or
mov
sub
cmp
sub
inc
ja
push
pop
jge
insb
push
cmpsl
icebp
mov
rorl
dec
fistpll
cmpsb
inc
nop
sub
call
push
pop
cli
hlt
rorl
movsb
inc
stos
test
repnz
push
jp
and
pop
fcoms
jns
orb
xchg
mov
hlt
mov
es
aad
movzwl
mov
jbe
pop
xchg
leave
dec
das
icebp
hlt
lea
xchg
adc
addr16
mov
push
mov
mov
scas
sbb
mov
dec
out
cmp
out
push
orl
sbbb
pusha
roll
cmp
mov
cltd
mov
fstps
add
cmp
ret
mov
and
dec
mov
sbbb
clc
cmp
push
mov
or
cmp
add
stc
cmp
fistpll
and
mov
loop
lret
or
adc
lock
mov
push
lods
test
xchg
push
dec
outsl
sahf
xchg
daa
and
cmp
xor
sub
jne
mov
shr
mov
repz
das
mov
jecxz
cli
push
adc
cmpsl
or
push
adc
fisubrs
xchg
mov
rorb
jmp
das
dec
ds
sti
popa
and
fsubl
inc
in
lret
cmp
shrl
sub
mov
in
lods
push
push
daa
jno
cmp
jne
jo
hlt
cmp
push
xor
dec
push
cmp
xor
add
cmp
and
mov
mov
push
xlat
pop
jmp
push
xlat
psubsw
orl
outsb
test
adc
xchg
adc
adc
outsb
xchg
push
repz
mov
pop
jle
mov
jb
mov
and
sub
cmp
cs
jge
jg
gs
xlat
dec
jmp
out
push
mov
mov
mov
fisubrs
enter
les
sub
mov
xchg
push
cli
add
xchg
jnp
or
push
rep
dec
mov
inc
dec
inc
loopne
pushl
ds
cmp
mov
add
sub
mov
pop
lcall
clc
xor
ljmp
mov
jo
std
xchg
and
and
sbb
jmp
hlt
jns
shl
dec
xchg
and
addr16
lock
adc
jnp
cs
jo
push
not
mov
jae
test
popa
ljmp
push
pop
mov
pop
cs
xchg
pause
cli
push
pusha
clc
lahf
sub
mov
cmp
mov
xchg
int3
icebp
aad
cmp
push
shrb
or
and
xchg
stc
cli
mov
orl
xchg
into
fsub
mov
push
enter
or
fs
mov
fiaddl
insb
or
dec
adc
fmull
xchg
xor
inc
add
int
dec
fcompl
mov
push
mov
sarb
xchg
lahf
jo
pusha
and
ret
and
adc
cld
iret
movb
lcall
les
bound
pop
popf
popa
add
adc
sub
ret
mov
iret
loopne
out
ds
pop
sub
mov
pop
repnz
push
jo
dec
ja
sti
jg
cltd
ror
and
outsl
popa
into
pusha
cltd
mov
xor
popf
cltd
xor
lret
lret
adc
fcmovbe
jmp
inc
mov
cli
sahf
dec
jecxz
xchg
rclb
sbb
in
nop
sub
mov
or
std
roll
xchg
sub
cmp
add
mov
jmp
mov
xchg
or
jne
and
outsl
je
push
loopne
repz
mov
mov
in
test
xor
clc
scas
dec
lods
ficomps
je
mov
stos
inc
add
gs
pop
lock
mov
sub
scas
stos
aaa
dec
mov
push
or
xchg
or
sub
pop
insb
pop
es
mov
jecxz
das
nop
frstor
mov
jl
test
in
aaa
loop
js
stc
inc
mov
sub
out
and
lret
add
jno
lret
popa
lahf
xor
and
ja
xchg
sub
pop
cltd
add
inc
sub
lds
add
les
xor
mov
mov
dec
pop
fidivrl
pop
jo
fwait
repnz
fildll
xlat
test
jns
xor
std
and
hlt
mov
dec
inc
mov
pop
jge
mov
pop
movsl
lret
jns
mov
push
jp
insl
or
push
mov
push
cmp
pop
hlt
mov
push
dec
xor
imul
dec
cmp
adc
jge
sub
test
mov
shrb
push
mov
in
movsl
loopne
mov
jl
sub
pushf
add
lea
xchg
sarb
mov
fisttps
lods
fwait
call
push
je
je
mov
out
nop
push
cs
imul
pop
popa
sub
ljmp
sbb
pop
ficompl
adc
test
mov
loopne
ret
jmp
into
sbb
jmp
mov
pop
inc
fsub
mov
pop
sti
mov
pop
and
mov
mov
mov
mull
add
or
imul
xchg
fisttps
inc
in
adc
xchg
mov
gs
mov
test
jb
push
repz
rcrl
sbbl
shlb
bnd
inc
inc
sbb
add
mov
out
push
cmpsl
sub
mov
out
repnz
hlt
rcrb
jg
xchg
or
movsb
hlt
sub
cmp
daa
bnd
inc
inc
sbb
pop
xchg
pop
shl
mov
loope
insb
xchg
mov
jmp
idiv
stos
sahf
xchg
dec
lret
hlt
lahf
mov
cmp
adcb
mov
ds
and
jle
inc
inc
push
stc
add
mov
in
push
mov
in
icebp
ljmp
rcrl
jg
xchg
or
cmpsl
hlt
sub
leave
and
jns
inc
inc
sbb
add
pop
ret
mov
loop
outsl
xchg
mov
call
sahf
xchg
dec
enter
mov
cmp
adcl
mov
cmp
xchg
inc
inc
sbb
in
mov
out
imul
scas
jne
jecxz
inc
cmc
dec
jl
les
sar
pop
mov
and
and
pop
cmpsl
xchg
cld
popf
les
sar
inc
mov
and
and
dec
cmpsl
xchg
cld
les
sar
push
mov
and
and
push
cmpsl
xchg
cld
xchg
les
sar
dec
mov
and
inc
cmpsl
scas
in
cmpsl
xchg
cld
add
dec
pop
mov
and
inc
mov
xchg
cld
cltd
les
sar
inc
mov
and
inc
scas
scas
in
cmpsl
xchg
cld
mov
push
mov
clc
dec
push
mov
and
jp
popf
sub
pop
mov
xchg
sbb
xchg
cwtl
mov
into
mov
mov
sub
aam
jns
in
pop
sahf
les
push
xor
xchg
xchg
sbb
cmc
adc
les
fwait
inc
in
stos
mov
aam
jns
mov
dec
jg
mov
int
fcoms
dec
fcomip
ret
movsl
stc
fs
outsb
pop
mov
xchg
push
cmpsl
data16
ja
aad
jnp
inc
and
addr16
push
arpl
stc
jns
test
in
mov
jecxz
xchg
xchg
mov
mov
inc
rcll
adc
sub
push
dec
dec
and
scas
ds
repnz
mov
ret
xor
xchg
lods
dec
lea
pop
xchg
bound
jnp
mov
fidivs
aam
inc
out
dec
xchg
xchg
stc
mov
xchg
bound
adc
mov
lret
nop
shrb
mov
insb
sarb
aam
inc
sub
hlt
mov
sub
xchg
sar
faddl
push
xchg
mov
aad
cmc
mov
enter
fdivrs
cmpsb
adc
test
je
and
xchg
int
aas
jno
js
xchg
jb
mov
or
sbbl
xchg
dec
jl
mov
in
ret
js
xchg
shrl
mov
orl
fimuls
ss
inc
fiadds
cmp
push
fwait
inc
or
push
mov
enter
mov
mov
fnsave
jecxz
push
cltd
jns
cwtl
int3
std
ljmp
dec
scas
leave
push
pushw
adc
jp
insb
addr16
push
push
fistps
mov
aas
sub
push
fcmovbe
cmp
dec
adc
push
rcrb
xchg
loopne
sub
scas
ficoml
