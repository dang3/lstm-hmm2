fsubrs
add
pop
add
or
add
dec
test
and
mov
cmc
cmp
mov
fs
std
data16
mov
mov
pop
sbb
pusha
mov
adc
insl
inc
rolb
mov
mov
and
dec
insb
ds
pop
cmp
xchg
inc
fnsave
and
cwtl
lcall
test
ss
icebp
mov
mov
mov
insb
ret
jmp
xor
inc
or
and
cmc
arpl
stc
movsl
cmp
and
pushf
mov
and
loopne
sbb
jle
stos
test
mov
dec
mov
cwtl
cmpsb
ffreep
and
mov
mov
ret
repz
les
roll
mov
fs
pop
mov
xchg
add
fldenv
add
dec
xor
jns
lret
dec
ds
adc
imul
leave
out
popf
mov
jne
inc
lcall
mov
stos
cmp
repnz
pop
sub
adc
lret
imul
orl
sub
movl
pop
inc
fstl
call
sub
sub
test
aad
jnp
fstl
popf
aas
and
sub
test
or
insb
gs
and
xlat
out
ret
sbb
ret
in
outsb
pop
pop
jle
xchg
mov
fiadds
sbb
push
jle
fistl
push
xchg
lods
rolb
jno
jno
test
jmp
data16
in
mov
arpl
jmp
cmp
nop
out
negb
out
shll
nop
jns
daa
cmp
gs
outsl
lcall
xor
inc
pop
push
test
xor
sub
lahf
rorl
scas
mull
fsubs
jae
out
shlb
subl
cli
hlt
xor
rcrb
fldcw
in
dec
dec
mov
xor
add
loopne
mov
dec
cmp
and
lods
mov
imul
jmp
jp
insb
push
in
incl
cmp
xchg
jge
sub
cmp
and
shll
sbb
xor
insl
push
out
mov
push
cli
xor
cld
mov
cmpb
fnstsw
iret
or
pop
dec
out
loope
roll
dec
pop
loop
mov
cmp
pop
or
daa
lock
mov
sbb
jmp
imul
xlat
inc
js
pop
dec
hlt
mov
movsb
or
popa
xor
push
std
pushf
ret
notb
data16
lcall
movsl
sbb
lds
fcmovu
push
std
cmp
xchg
jnp
xor
inc
out
xchg
mov
out
movsl
mov
mov
insb
jae
jl
lret
hlt
pop
mov
mov
fcoms
push
push
imul
stos
jbe
xchg
movsb
das
push
pop
fistl
pop
loope
jne
mov
jnp
daa
enter
push
mov
cmc
add
out
push
pop
enter
fsubl
stos
mov
cmp
adc
push
cmp
jae
mov
fiadds
int
push
notl
push
push
mov
xor
fptan
push
pop
ret
xchg
fucomp
xchg
fwait
mov
cmp
sbb
xchg
mov
inc
mov
testl
int3
cld
mov
mov
ss
mov
leave
push
xchg
mov
sahf
mov
pop
js
sub
movsb
mov
in
bound
pop
jg
scas
repz
pushf
aam
rol
add
add
out
test
ja
hlt
push
add
cmp
shrb
ficoms
pop
sub
mull
stc
or
mov
scas
insl
pop
adc
cmp
lds
addr16
test
mov
push
xor
cmc
call
in
fidivl
mov
and
dec
jmp
adc
imul
inc
stc
int3
jae
and
sbb
out
xchg
sbb
cs
stos
dec
pop
fisttpl
shll
pusha
mov
xchg
test
fwait
cmp
mov
and
mov
scas
movsl
or
mov
popf
subl
mov
cmp
pop
lret
mov
out
mov
fwait
test
add
push
aad
popf
push
jmp
vmovd
movd
mov
repz
popw
adc
stos
adc
out
adc
and
fwait
dec
push
mov
mov
and
jne
jo
jb
ret
pop
ss
jb
xchg
imul
scas
cmp
lret
ds
jmp
stos
fcompl
ror
and
test
imul
pushf
xchg
pop
inc
sub
sub
mov
scas
mov
pop
stos
pop
iret
mov
sahf
lock
lds
and
mov
fsubrp
mov
mov
inc
pop
pushl
test
data16
pop
cmpsl
fstl
jae
sbb
fmuls
popf
push
lods
mov
cwtl
or
dec
pop
xor
ret
pop
test
aas
out
out
cld
push
ja
daa
dec
mov
lock
loope
in
pop
aad
add
push
push
arpl
pop
sub
addr16
add
movsb
sbb
jnp
mov
sbb
je
jmp
pop
cwtl
out
push
inc
je
cwtl
out
lahf
cmp
into
shlb
sbb
mov
mov
subb
mov
cmc
fidivl
xchg
sahf
cld
inc
xchg
sti
mov
jl
lahf
sbb
dec
lcall
fdivrs
hlt
and
push
lret
cmpsl
mov
sub
int
pusha
das
sub
bnd
shl
jae
arpl
or
jmp
ret
cmp
call
call
int
pop
push
out
je
sub
stos
js
mov
arpl
stc
aaa
in
clc
sub
dec
rolb
aad
add
cmp
movsl
xchg
fdivl
ret
adc
cmp
jo
xor
mov
xor
repnz
pop
adc
adc
push
or
js
fistpll
or
adc
and
ret
dec
ret
xor
jne
shll
mov
rorb
dec
lret
aaa
xchg
in
mov
pop
lahf
sbb
jne
lret
stos
mov
popf
push
mov
movsb
dec
cmpl
dec
adc
fldenv
push
fidivl
fidivl
in
jnp
popf
jecxz
insl
js
add
push
shll
popa
movsb
cwtl
leave
daa
mov
fcomi
ret
sub
pop
gs
sub
sub
bnd
inc
add
ja
mov
mov
mov
lahf
in
outsb
mov
dec
mov
imul
push
dec
ficompl
xchg
subb
or
mov
icebp
xchg
jb
xor
jno
cmp
mov
cmp
inc
push
push
aad
jle
lock
xchg
cmc
fnsave
and
pop
mov
mov
fmull
test
xchg
xchg
mov
jnp
adc
aam
fmull
pop
aam
insl
add
dec
sub
pop
push
in
aam
out
sti
jecxz
sub
fcoml
inc
leave
adc
rcrb
aaa
lret
in
clc
enter
lcall
or
xor
mov
dec
data16
sbb
jmp
lret
lret
in
jecxz
fsubr
pop
xchg
mov
mov
or
sbbb
lcall
jle
stos
cmp
xchg
cmp
fimull
aam
add
stc
push
jne
int3
mov
movsl
push
rclb
imul
aam
in
jl
sbb
add
clc
insl
add
repz
cltd
sub
stos
ja
dec
or
bswap
add
sbb
jle
imul
mov
mov
xchg
jne
xor
jns
inc
add
jne
mov
xchg
mov
andb
cmpsb
test
das
cmpsb
orl
push
popf
cmp
pop
or
push
insl
int
xchg
shlb
cld
mov
int
jecxz
sbb
dec
aaa
int
movsb
insb
popa
and
sbb
lahf
push
sub
dec
push
fcmove
push
out
inc
pop
sarb
mov
xchg
fldcw
jp
lret
popa
popf
push
lods
sbb
adc
enter
iret
pop
mov
in
jo
xchg
xor
or
repnz
mov
push
push
inc
sahf
push
mov
or
test
pminsw
insl
push
aad
stos
and
jnp
rcl
cmp
out
push
stc
pop
int3
andb
daa
inc
jle
fidivs
add
jne
inc
jno
lods
cmpsb
jb
notrack
pop
push
mov
mov
pusha
mov
sub
pop
movsb
stos
pop
in
jmp
adc
adc
mov
xchg
scas
sbb
sti
mov
outsb
ss
ffreep
mov
push
jl
or
rol
dec
xor
mov
mov
out
jmp
pop
dec
xchg
pop
icebp
movsb
push
sbb
popa
push
xor
lret
mov
sahf
mov
sti
das
fcoml
jl
repnz
sub
fidivrl
leave
sub
cltd
arpl
aas
leave
aad
sahf
push
dec
xchg
test
scas
sub
add
stos
and
push
std
popf
jp
idivb
sub
and
adc
xor
mov
sub
imul
outsb
arpl
cwtl
scas
scas
add
and
xchg
adc
mov
out
jmp
mov
lea
pop
jp
jp
dec
cmpsb
pop
and
or
jne
dec
jns
xchg
push
push
inc
cmp
cmp
cmpsl
cmp
gs
icebp
push
bound
cmp
sti
lret
xor
or
lret
clc
lods
shll
adc
incb
xor
test
pop
stos
pop
cld
cli
shlb
gs
sbb
in
iret
cmpsl
cs
ds
inc
inc
and
dec
cmpsb
push
repnz
movsb
jg
xor
mov
out
sub
mov
int3
and
pop
aam
rcll
fxtract
adc
xor
lcall
insl
scas
mov
jae
test
scas
xchg
pushf
testl
or
lods
xchg
sub
incl
daa
mov
test
jae
xlat
add
pop
inc
sti
mov
jne
shr
pusha
test
mov
insl
mov
sbb
mov
adc
daa
inc
sub
daa
push
push
cmpsb
dec
mov
xchg
int
xor
push
mov
adc
outsb
xor
je
movsb
xor
jecxz
xor
ljmp
vpshab
call
test
dec
sbb
xchg
jp
int
jge
xor
pusha
inc
mov
mov
cmp
or
stc
mov
lret
aas
xor
jnp
icebp
sbb
adc
pushf
clc
and
xor
xlat
jno
cmp
dec
insl
dec
jae
push
lock
cmp
fwait
push
mov
lcall
in
xor
push
mov
xchg
aad
ror
push
sbb
mov
cwtl
mov
cmpsl
mov
jl
lea
movsb
out
fisubl
push
jns
sub
fs
push
mov
shr
mov
sahf
sbb
notl
fiaddl
enter
inc
adc
dec
and
xor
movsb
adc
sub
ljmp
push
aaa
enter
ffreep
add
add
pop
cmc
xchg
push
jecxz
inc
push
adc
pop
and
push
in
sub
ficompl
add
incl
insl
in
lret
mov
or
push
mov
push
mov
pushf
ds
mov
repz
xor
sub
pushf
mov
jle
sub
push
inc
je
es
leave
cwtl
inc
bound
inc
cmp
mov
add
gs
sub
lea
sub
scas
sbb
stos
lods
insb
cli
es
mov
sbb
sbb
jmp
jns
fnstsw
push
add
mov
pushf
ret
mov
inc
or
jb
daa
in
jecxz
addr16
mov
and
dec
mov
mov
xor
dec
add
inc
mull
cs
adc
sub
pop
jmp
jo
fcoms
sahf
mov
xlat
mov
leave
jae
lret
mov
xor
or
push
pop
lods
or
push
das
mov
inc
fldt
cs
mov
sub
je
enter
push
mov
cltd
cli
movsl
mov
jae
rorl
aad
and
out
stos
in
clc
jp
xchg
gs
in
out
mov
in
vpsubd
pushf
adc
lcall
jbe
push
sbb
dec
mov
aaa
cmpsb
xchg
sub
or
fsub
or
or
fimuls
adc
lea
loop
insb
dec
xchg
fldz
loop
add
aas
mov
push
add
push
pop
sbb
inc
fucomi
negl
push
sbb
or
insb
nop
fstp
dec
add
add
push
outsl
jg
or
adcl
int3
inc
or
mov
call
out
push
es
sub
stos
stc
xor
push
mov
ret
cmp
insb
insb
jne
rorl
mov
daa
decb
negl
xor
lock
push
xchg
repnz
mov
loop
xchg
mov
xor
fistpll
xchg
mov
mov
xchg
mov
lock
fdivrl
jne
xor
testb
enter
rcr
mov
adc
mov
pop
add
inc
inc
ja
push
out
lret
fwait
xchg
sub
sbb
jae
add
scas
sub
in
aas
sub
inc
sub
dec
std
sub
aam
sub
pop
dec
clc
adc
arpl
or
dec
cmp
jo
es
into
out
push
push
push
jns
xchg
inc
xchg
jno
roll
sbb
cmpsb
cmp
push
push
scas
dec
mov
popa
outsb
xor
filds
mov
cld
ret
leave
gs
adc
mov
insb
fcompl
pop
jb
mov
movsb
pop
outsl
sbb
hlt
cmc
adc
or
jae
sub
xchg
lcall
testl
mov
mov
les
sub
mov
loop
push
in
add
xchg
inc
mov
mov
js
jmp
sub
cmp
lds
jb
adc
nop
push
push
jne
adc
sbb
cwtl
mov
scas
adc
test
sar
mov
test
sub
mov
xchg
ret
inc
dec
idivb
repz
lcall
jnp
insl
dec
adc
xor
lahf
lret
inc
add
incl
gs
push
pusha
push
xor
adc
cmpsl
mov
ds
incl
insb
out
ret
clc
test
jne
mov
movsb
imulb
push
add
sbb
shrl
sbb
int
insb
in
inc
lcall
loopne
add
std
test
pop
inc
pop
or
aad
mov
jl
fmull
push
aam
fldl
mov
movsl
ret
pop
call
pop
ret
in
imulb
mov
inc
ret
sub
and
shlb
test
std
push
xor
sub
notl
rorb
push
dec
repnz
ret
out
std
add
pusha
leave
xor
testb
mov
push
xchg
ljmp
call
pop
mov
shlb
push
dec
insb
mov
data16
rolb
rcl
mov
pop
cs
imul
call
xchg
push
sahf
sbb
mov
cmc
pop
fisubl
mov
xchg
xlat
ja
lret
xchg
xchg
mov
add
dec
sbb
adc
loop
sti
mov
imul
sbb
fildl
aas
popf
fwait
mov
mov
sub
addb
jp
shrb
jmp
xor
fildl
mov
dec
cmp
cmp
cmpl
push
stos
or
sahf
loopne
and
aas
into
and
jl
out
pop
movsb
push
jp
ds
or
inc
mov
xor
in
add
add
mov
and
jmp
stos
xchg
fildl
es
dec
mov
outsb
inc
out
inc
les
cmc
jne
test
andb
lods
cld
loop
dec
cmp
stos
mov
jae
sti
dec
pop
jmp
int3
sbb
in
popa
push
outsl
fistps
jo
or
nop
and
pop
enter
pop
or
mov
mov
ja
push
mov
icebp
lods
aas
in
scas
icebp
in
sbb
dec
movsb
and
jb
lock
mull
sbb
mov
push
ljmp
add
sbb
mov
dec
outsl
cmc
gs
mov
frstor
scas
adc
mov
xchg
xchg
in
sub
mov
in
jge
mov
mov
lcall
scas
push
test
sub
in
mov
dec
dec
addr16
push
sbb
in
fucomp
push
movsb
in
push
ret
adc
mov
cmp
fwait
out
jle
aad
xor
pop
sbb
mov
int3
jle
test
and
test
and
mov
or
aaa
adc
push
cmpsl
stos
pushf
xchg
sub
daa
sub
mov
push
cld
scas
ss
fwait
lcall
mov
inc
out
xchg
mov
ja
sbb
xchg
push
jle
imul
cmp
frstor
or
or
xchg
pop
jo
insl
shrb
jo
mov
sub
in
inc
arpl
jb
not
xor
negl
filds
push
sub
push
mov
out
and
cs
loope
adc
or
jo
out
fcomps
iret
jbe
bound
jb
jecxz
addr16
adc
ds
inc
das
rorl
out
lods
inc
cltd
imul
dec
cltd
iret
adc
fisubrs
mov
loopne
jmp
lods
pop
test
scas
xchg
mov
out
enter
ret
aam
push
and
nop
sti
andb
clc
lret
pop
addr16
pop
jne
xchg
push
dec
stos
xchg
mov
rcll
push
and
fnstcw
and
pop
ljmp
int
pop
xlat
mov
xchg
outsl
jae
fsubl
enter
movsb
bnd
sub
mov
dec
add
scas
ss
addr16
cltd
adc
aaa
sbb
jno
imul
dec
adc
int3
mov
insl
int
aam
shll
push
xchg
add
bound
or
shl
mov
and
jp
push
and
call
jge
xlat
xchg
adc
in
pop
lcall
imul
sub
xlat
push
push
shll
jo
andb
add
bound
and
pop
jnp
les
push
mov
dec
push
das
out
lcall
cwtl
mov
outsl
cmp
sbb
jle
inc
and
repz
adc
xchg
loope
bound
and
stos
lea
jg
cld
mov
repnz
cmp
mov
lods
std
xchg
es
mov
ret
pop
inc
push
push
clc
adc
mov
push
add
pop
jmp
cmp
shrb
jge
arpl
dec
sub
pop
outsl
push
repz
push
jge
stc
movsb
sub
ljmp
pop
lods
pop
inc
shlb
add
clc
lods
mov
mov
mov
out
movsb
repnz
mov
cmp
push
inc
call
out
jnp
test
pop
dec
sahf
and
jl
jo,pt
outsb
sub
pushf
xchg
push
es
xor
jns
lea
xchg
or
and
movsb
jg
repnz
push
push
into
sti
andl
mov
lock
fstpl
pop
enter
add
cltd
mov
push
es
hlt
stos
xchg
hlt
cmp
jmp
push
sbb
jnp
std
lahf
js
dec
push
loop
jbe
jbe
leave
or
dec
stos
lock
outsb
std
std
loop
mov
clc
adc
add
lds
inc
int
movsl
scas
bnd
mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
leave
loope
mov
ret
aam
ret
add
inc
mov
fisttpll
dec
jmp
cmp
xor
push
sbb
stos
addr16
loopne
or
orb
test
rcrb
push
jg
add
push
add
jg
aaa
push
xchg
adcb
cld
add
dec
outsb
je
xchg
pop
imull
xor
mov
repnz
shrl
stos
jl
and
jb
jmp
sbb
fdivr
and
jp
xchg
mov
std
pushf
shl
and
sbb
inc
jecxz
in
ret
cmp
adc
xlat
mov
or
aas
bound
mov
jg
leave
fstps
lahf
push
and
clc
outsl
push
sbb
cmp
testl
adcl
xor
ljmp
inc
mov
mov
inc
cld
push
xchg
inc
sbb
packssdw
inc
cs
sub
and
fwait
push
pop
jns
orb
adc
cmp
and
std
out
sbb
jg
arpl
stos
jnp
nop
ja
xchg
jne
pusha
xchg
mov
es
add
out
aam
and
mov
outsl
mov
iret
popa
es
push
mov
inc
popl
sub
mov
adc
outsl
and
sbb
fwait
adcl
add
adc
iret
orl
adc
dec
lods
xor
dec
es
cs
mov
data16
xor
aad
loop
iret
fcoml
rorl
xor
mov
push
into
and
rorl
mov
dec
in
fmuls
mov
rorb
adc
mov
sbb
cmpsl
sbb
and
gs
mov
popa
mov
insb
and
mov
dec
and
test
aas
movsl
ljmp
clc
mov
pop
push
sbbl
xor
adc
adc
cmp
cmpsb
out
sub
mov
push
sbb
rcr
call
aam
dec
bnd
inc
mov
stos
jmp
pop
test
sub
xlat
xchg
lods
stos
gs
dec
test
out
lret
and
inc
push
incl
jne
jbe
lods
xchg
rcr
dec
xlat
sbb
jg
dec
xchg
mov
cmp
clc
cmp
subb
mov
and
pop
inc
bound
cld
mov
ja
or
jmp
jbe
int
cs
xorl
xorl
jl
rcll
jno
into
lret
lock
lock
in
pop
popa
or
cmp
dec
xchg
loopne
ljmp
cmp
ss
nop
sub
xorb
pop
xchg
jo
out
mulb
popf
mov
adc
xchg
fsubs
xor
iret
cmp
insl
push
sbb
sbb
xchg
inc
mov
and
unpckhps
out
push
push
adc
jae
arpl
adc
jle
in
pop
inc
inc
push
test
cmovb
popa
loope
clc
cmpsb
mov
pop
mov
pop
mov
push
add
fstps
decl
or
pop
cmp
sub
int
int3
andl
adc
lcall
pusha
xor
cmpb
nop
xchg
dec
lods
dec
sub
inc
das
repz
lock
sub
aam
inc
fisubs
xor
aas
out
jl
ljmp
and
xor
xor
push
push
pusha
mov
cmp
pop
xor
stos
aad
gs
cmpsl
das
jbe
stos
fidivs
inc
mov
mov
or
out
lcall
xor
and
nop
aad
movsb
push
adc
mov
and
aam
push
lea
mov
xchg
test
mov
lods
pushl
and
mov
adc
cltd
cld
push
sub
jmp
ds
negb
inc
inc
cwtl
loope
pop
lahf
dec
into
lds
int
aaa
push
cli
jae
es
idivl
pop
imul
or
mov
inc
arpl
mov
dec
daa
ror
imul
movsb
mov
lret
orb
and
add
testl
pop
lcall
inc
dec
hlt
sahf
mov
add
push
sbb
sub
mov
pop
aaa
pusha
pop
or
push
inc
adc
and
xor
mov
and
neg
pop
pop
out
pop
sti
fisttps
scas
or
mov
mov
xchg
jne
movsb
mov
ja
jg
push
fsubs
inc
fidivl
adc
cli
lret
fistpl
mov
push
cld
mov
jmp
rolb
inc
or
lea
mov
and
ret
xor
imul
scas
xchg
add
mov
xchg
daa
out
mov
enter
lock
cmp
les
test
jge
jne
mov
addr16
out
push
xchg
fnstcw
adc
inc
lds
xchg
stos
in
into
add
xlat
repnz
rcl
sbbb
fistps
in
imul
sub
nop
mov
mov
inc
xor
pslld
clc
test
mov
xchg
xor
mov
in
cmp
push
cmp
lret
out
vsqrtsd
mov
ljmp
movsl
mulb
xor
push
loope
notl
cltd
lock
aaa
in
xor
adc
rolb
push
mov
add
adc
or
cmc
in
test
daa
add
push
dec
sub
mov
movb
stos
jnp
adc
inc
shrb
mov
lods
jno
movsb
dec
pop
jp
cmp
and
mov
or
xchg
test
mov
inc
call
pop
mov
in
pusha
or
fnstenv
pop
adc
test
loopne
hlt
jne
ja
cmp
js
mov
mov
cmp
jg
xor
push
adc
add
pusha
inc
test
push
not
push
xor
inc
fnstcw
xchg
jns
pop
sub
push
pop
sarl
add
and
adc
in
pop
lahf
subl
lret
in
xchg
mov
sub
push
jae
mov
js
cmp
pop
stos
out
pop
aam
sub
cld
icebp
cmpsb
pop
inc
inc
nop
fcoml
push
mov
add
lods
jl
mov
test
repz
adc
scas
push
ret
addr16
into
mov
sub
add
jne
cmp
out
loopne
adc
mov
loopne
shlb
insl
cmc
inc
mov
stc
inc
in
push
dec
mov
dec
and
pop
fstpl
inc
sub
int3
or
and
aad
imul
addr16
xchg
pop
sbb
adc
bound
adc
fwait
leave
repz
mov
or
push
cmpsb
jb
in
cld
aas
js
mov
popf
daa
sub
adc
jbe
enter
pop
inc
mov
jno
out
push
repz
mov
shll
sbb
ret
adc
fadd
lahf
insl
repz
lea
mov
jle
pop
jl
aad
lret
xchg
dec
mov
mov
addr16
les
push
pop
xchg
sub
xlat
xor
pop
enter
ja
iret
sub
lea
fstpl
cmpsb
iret
sub
lods
stos
xor
pop
add
popl
je
mov
outsb
pushf
pop
sub
cmpsb
jge
dec
pop
mov
inc
mov
mov
rcrl
stc
out
data16
mov
mov
sub
ficompl
add
mov
mov
sbb
add
lahf
lret
test
shl
xchg
int
fisubl
pop
fs
dec
dec
mov
pop
in
sbb
inc
mov
cmpsb
sub
insb
sbb
shrb
dec
int
mov
adc
cltd
mov
jo
gs
mov
pop
rorb
xchg
insl
sbb
fcompl
cmpsl
mov
mov
outsl
stos
push
inc
add
fsts
repz
int3
cltd
push
sbb
pop
xor
pop
mov
mov
mov
inc
ror
push
movsb
mov
xchg
mov
cmp
enter
jecxz
xor
sahf
adc
jmp
out
stos
push
adc
xor
mov
rcl
arpl
icebp
in
mov
cmpl
inc
pushf
lret
scas
dec
sti
pop
or
fdivrs
jno
in
xor
jne
test
dec
adc
xchg
xchg
inc
xorl
lret
cltd
lcall
rcr
or
sbb
aam
iret
adc
push
mov
in
and
and
dec
push
shlb
rcll
in
xchg
jo
xchg
js
out
aad
jno
push
pop
cmp
cmpsb
adc
cmp
sti
or
bound
pop
mov
insb
or
test
lods
or
div
mov
aam
xchg
mov
test
push
mov
leave
lods
mov
dec
mov
jne
push
addl
sub
jbe,pt
push
add
out
mov
add
movsb
in
je
push
adc
and
jle
dec
insb
cli
adc
push
imulb
xchg
sub
xchg
mov
adc
ja
pushf
jmp
inc
and
pop
xchg
fimuls
subl
add
mov
and
lods
cmp
inc
fwait
shll
sub
stos
test
out
rclb
lea
mov
push
daa
clc
mov
pop
xor
jl
rolb
sub
roll
xchg
add
andl
cli
push
mov
popa
fwait
mov
mov
adc
jge
mov
adc
push
lods
mov
adc
push
fdiv
cltd
fmul
mov
add
mov
mov
push
js
clc
push
add
dec
and
sahf
lds
daa
inc
and
adc
and
adc
xchg
loopne
add
push
mov
xor
std
addl
cmp
mov
push
push
das
xor
imull
out
xor
add
daa
aaa
dec
jg
ret
inc
adc
mov
sbb
push
repnz
fwait
in
je
ret
test
or
xor
mov
pop
sti
mov
jg
push
out
pminsw
mov
inc
jbe
add
pop
mov
in
ljmp
insb
sbb
push
rcrl
push
xchg
inc
or
stos
scas
sbb
stos
outsl
dec
int3
hlt
sub
adc
lea
gs
pop
jns
fiaddl
ret
and
or
jmp
sub
cs
xchg
fs
es
ds
loop
aad
push
bnd
aas
hlt
icebp
mov
inc
fnstcw
ljmp
in
fwait
sbb
sti
popa
pop
add
sub
dec
cmp
in
sti
push
adc
fs
mov
ficompl
push
popf
popa
mov
addb
sub
out
mov
bnd
xchg
xchg
push
addl
jg
stos
imul
dec
adc
xor
loope
jmp
dec
cltd
int3
mov
outsb
jle
inc
cld
push
psubsb
shl
into
jle
mov
xchg
dec
rcrb
aad
mov
arpl
fistpll
cmpsl
mov
push
stos
mov
push
in
fistpll
scas
dec
ret
daa
mov
xchg
cmp
xor
jl
popf
jl
push
jo
mov
inc
out
cli
ljmp
push
inc
xor
frstor
or
jb
outsl
cmp
dec
inc
cmpl
sub
enter
push
mov
jb
dec
and
outsl
or
push
xchg
xchg
mov
xor
sub
sahf
mov
sbb
sub
sub
test
sbb
movl
jne
rorl
pop
andl
inc
sar
rol
push
cmp
test
sub
push
push
jo
inc
inc
and
popa
mov
frstor
lret
int3
sub
jmp
cmc
pushf
mov
mov
pusha
mov
mov
mov
pop
imul
in
shrb
xor
cmc
stos
nop
rorb
inc
nop
sub
mov
sbb
bound
insl
mov
sahf
popa
lahf
or
xor
popl
ret
mov
hlt
add
sbb
into
pop
fwait
push
push
xlat
mov
dec
cmp
and
mov
push
or
mov
mov
push
jnp
nop
push
inc
cli
add
testl
pusha
rorl
pop
scas
lea
mov
mov
push
jl
jns
lds
out
push
pop
loop
mov
insl
inc
stos
or
int3
movsl
bound
mov
mov
fs
add
call
mov
mov
adc
mov
lret
lret
fwait
jmp
push
shll
addl
inc
popf
inc
mov
mov
xchg
je
push
mov
jmp
outsl
pop
gs
stos
ljmp
adc
mov
add
js
sub
mov
push
sahf
mov
mov
lds
mov
sarl
into
dec
sub
stos
xor
ret
repnz
cmp
push
xchg
cmc
inc
leave
mov
sub
negl
mov
pslld
stos
xor
stos
fistl
loop
sub
inc
dec
jbe
pop
and
stos
xchg
loopne
icebp
imul
sub
ljmp
jns
stc
int
fistps
outsb
in
lret
ret
ljmp
adc
outsl
xchg
inc
mov
sbbb
sbb
inc
cmpb
sahf
int3
lea
mov
push
jne
xchg
mov
test
daa
stos
xor
mov
inc
fsubl
mov
std
and
pop
push
cmp
in
ljmp
xor
lret
mov
in
dec
jge
repnz
lret
mov
push
jnp
imul
ret
fildll
adc
test
xchg
cltd
sbb
ret
shrl
std
scas
mov
and
xchg
mov
push
pop
sub
adc
sub
call
addr16
test
adc
cmp
inc
movsb
cmpsl
js
lods
jns
sub
imul
xor
cmpsl
push
inc
shll
cmp
sub
xchg
push
flds
je
and
jnp
ds
ljmp
das
andb
ja
inc
mov
pop
int
movsl
insb
and
inc
hlt
cmp
adcl
aam
outsb
roll
mov
shlb
out
jecxz
and
mov
in
push
hlt
test
sbb
xchg
fwait
dec
aaa
popa
in
or
xchg
push
js
ss
pop
adc
pop
mov
sub
ss
lret
lcall
addb
push
push
out
test
imulb
cmp
mov
gs
mov
mov
inc
call
leave
lds
cmp
sahf
pop
mov
fmul
fisubrl
insl
jne
fildll
arpl
or
mov
pop
or
adc
jle
clc
call
fcmove
lock
mov
call
loope
adc
adc
dec
push
sahf
xchg
jns
jns
xor
mov
push
mov
cmp
int
adc
or
les
sbb
es
out
imul
pusha
sarb
pushf
xchg
xor
adc
cli
push
jl
xor
fwait
js
test
xor
xchg
cmpsl
mov
std
pop
ret
int
mov
jmp
cmc
outsb
cld
ret
insb
xchg
fidivrl
dec
out
test
jl
lahf
sub
les
push
pop
and
ret
shll
jl
icebp
aad
lock
xchg
lods
ds
xchg
xchg
in
cld
les
call
jo,pn
push
sar
sbb
jo
mov
aam
fdiv
rcll
push
jnp
sbb
fs
xorl
push
neg
inc
jbe
mov
mov
cmp
int3
jmp
mov
dec
in
in
js
push
inc
test
xchg
jge
sahf
jbe
call
test
lret
loopne
xchg
xchg
mov
jns
fcomps
dec
and
cmp
and
push
push
pop
sbb
popf
lret
call
xchg
mov
sub
lcall
or
cli
out
in
pop
imul
pop
repnz
xchg
mov
test
idivl
push
mov
insb
jle
jbe
test
movsb
mov
xor
ror
int
jmp
enter
push
cmp
in
mov
adc
inc
loopne
mov
sti
call
pop
push
push
bound
or
cmp
out
inc
cli
sub
jmp
test
leave
cmpsl
movsb
jno
cwtl
mov
sti
sahf
pusha
pushf
ds
mov
or
xchg
inc
jl
mov
cli
mov
jle
insl
pushf
repnz
test
repnz
mov
push
insb
xchg
xor
or
xor
arpl
mov
sbb
daa
or
ja
jle
inc
add
add
mov
data16
lea
gs
aad
jae
stos
lods
sbbb
sbb
or
push
in
mov
jo
iret
dec
aad
lock
xor
out
sbb
fwait
jnp
dec
add
fcompl
or
fcoms
cmovo
dec
pop
shll
push
dec
dec
mov
add
or
dec
xchg
pop
push
jnp
mov
and
ljmp
ljmp
sbb
stc
push
add
dec
in
cwtl
sub
lcall
or
xchg
sbb
sub
lea
dec
out
fucomip
sbb
cmp
fcmove
bnd
push
sbb
out
sub
leave
push
in
lds
mov
mov
aas
inc
xchg
fldenv
pop
imul
enter
mov
push
sbb
mov
mov
cmp
pusha
lods
push
scas
inc
cltd
inc
adc
cltd
pop
popf
jmp
jne
jae
mov
enter
pop
xchg
leave
fisubs
adc
pusha
imul
dec
decl
add
dec
fistps
mov
out
mov
dec
jb
out
in
arpl
jp
mov
mov
jno
push
es
das
mov
lods
inc
inc
ljmp
push
inc
and
cmp
imul
cmp
pop
out
mov
mov
push
mov
xlat
jns
and
mov
cmp
imul
mov
xchg
mov
sub
bound
and
push
iret
addl
dec
pop
arpl
sbb
ljmp
push
mov
mov
lock
jae
jge
and
adcb
add
shr
jns
loopne
jo
fistps
sbb
jbe
stos
inc
pop
push
add
jo
pop
dec
in
int
jp
and
stos
ficomps
dec
hlt
sbb
xchg
jb
mov
mov
add
les
mov
push
stc
jmp
jg
mov
data16
cs
jp
enter
cltd
add
dec
out
jnp
sub
pop
sbb
or
push
or
loop
loop
les
or
flds
and
xchg
push
aam
in
xchg
dec
push
lret
push
push
push
mov
adc
push
xor
lret
dec
dec
and
in
fsubl
sub
mov
ds
popa
add
mov
jp
mov
add
push
mov
iret
jle
cmp
cmp
push
outsl
pop
js
mov
inc
stc
xchg
aas
out
in
jne
aad
pop
jae
mov
dec
fmull
mov
andb
dec
rorl
imul
mov
jecxz
add
nop
mov
xor
push
repnz
adc
mov
cmpsw
mov
mov
pop
add
sbb
inc
pop
aaa
jne
sub
push
les
leave
or
pop
inc
push
sbb
pop
testb
ffreep
sub
sbb
jmp
std
jae
lods
push
cld
fldl
sbb
jmp
mov
mov
addl
ror
int3
mov
sbb
mov
xchg
repnz
mov
pop
ja
aas
adc
pop
std
and
mov
ds
out
mov
jle
das
insb
out
sbb
or
mov
outsb
jp
std
enter
xchg
test
divb
xor
adc
loop
adc
jecxz
inc
sbb
xor
sar
imul
aaa
mov
sub
pop
jns
add
xor
xchg
adc
ja
xchg
je
mov
jmp
shlb
aaa
jb
rcll
sub
xchg
jo
pop
inc
in
fcmovu
in
scas
mov
pop
push
add
mov
clc
int3
pop
sbb
fisubrs
mov
mov
js
les
mov
adc
loop
or
cmc
xchg
sahf
adc
jp
jbe
mov
add
femms
sar
rol
push
or
cmc
add
in
out
and
jmp
or
addl
inc
mov
mov
out
sahf
andb
hlt
cmp
mov
xchg
mov
mov
hlt
sub
sub
pop
inc
inc
lret
stc
je
mov
in
test
mov
pop
repz
mov
out
mov
jp
cltd
sbb
cmpsl
mov
outsl
idivl
sbb
xor
stos
test
inc
out
adc
imull
mov
sti
int
clc
jle
or
xchg
inc
stos
pop
jae
add
cmp
adc
inc
fwait
jle
mov
sbb
pusha
push
enter
xchg
nop
pop
ds
jns
test
cmpsb
xor
je
mov
loop
sub
sub
icebp
xor
xor
inc
inc
push
repnz
lret
pop
jge
insl
dec
aaa
push
gs
pop
ror
inc
push
xchg
into
or
mov
fadds
out
jb
and
daa
inc
mov
push
jg
mov
push
dec
and
mov
and
mov
add
xchg
imul
dec
adc
out
fdivrl
pusha
lds
add
and
push
dec
aam
stos
stos
lea
push
cld
or
cmc
lcall
xchg
xbegin
pop
adc
dec
popf
push
mov
dec
les
mov
mov
dec
lret
and
pop
jo
push
dec
ss
loop
cmc
rorb
lock
push
fstp
dec
test
data16
rol
xlat
mov
mov
shlb
adc
push
cmp
lods
pop
mov
fsubrl
push
ret
push
jo
nop
add
dec
cltd
outsb
push
inc
sub
push
jp
loop
insb
jnp
and
adcl
aam
insl
jge
mov
xchg
cmp
sti
adc
add
aas
cmp
mov
dec
mov
mov
hlt
sbb
pop
adc
or
cltd
mov
iret
pusha
mov
fucomp
fimull
mov
push
fcompl
in
cmp
sbbb
nop
sahf
pop
push
dec
add
in
cli
stos
fidivrs
xchg
out
int
sub
mov
cmp
xlat
push
push
jno
mov
aas
pop
dec
lds
std
and
add
mov
es
sub
mov
mov
push
cmpsb
bound
stc
pop
add
xchg
dec
sbb
jp
out
loopne
pop
push
or
jmp
and
roll
add
fmull
in
push
decb
test
pop
jne
arpl
pop
mov
mov
rorb
sbb
push
int
and
addr16
jge
mov
push
mov
push
inc
push
int
pushf
hlt
or
dec
mov
jne
mov
aam
cmpb
sbb
ds
xchg
jl
in
mov
mov
dec
inc
les
mov
dec
in
lret
xor
cmp
jmp
mov
out
scas
sub
jae
mov
adc
ja
inc
dec
daa
dec
push
push
aam
mov
inc
push
nop
dec
js
inc
jns
call
mov
adc
push
and
mov
mov
jnp
iret
push
dec
dec
jnp
lret
data16
nop
mov
movsb
test
and
mov
iret
test
mov
test
sbb
sbb
mov
call
jnp,pt
push
pusha
fwait
xchg
jg
push
fcoms
cli
out
and
mov
jno
rclb
stos
ljmp
pop
sbb
cltd
add
notl
scas
mov
push
jmp
jecxz
std
push
fbstp
jg
pop
int3
leave
fwait
sahf
xchg
push
std
scas
addr16
xor
jg
xor
rcrb
pop
sub
dec
rcrb
movsl
sar
movsb
fwait
jo
test
std
and
out
outsb
xor
push
ss
ret
fwait
icebp
xchg
popa
scas
xsaves
fs
xor
lds
jp
cmpsl
pop
push
fs
int3
mov
push
add
dec
push
or
popf
or
push
push
test
inc
mov
clc
jne
cmc
xchg
lods
neg
push
mov
or
mov
adc
pop
dec
sbb
jne
pop
insb
lret
into
outsl
pop
fisubrs
fisttpll
enter
lahf
insl
sti
mov
or
pop
or
test
mov
pop
movsl
fcom
mov
cmp
loop
xor
mov
hlt
rclb
cld
mov
div
jg
xchg
mov
dec
test
jle
inc
jle
jge
mov
rorb
mov
cli
icebp
pop
lods
dec
push
dec
cmpsl
sub
jmp
xchg
cs
pop
adc
fstpl
add
div
cmpsb
or
popa
dec
mov
loop
out
pop
jg
rolb
pop
xor
and
imul
pop
push
test
shlb
ljmp
sub
outsl
loopne
daa
pusha
or
jmp
cmp
dec
imul
sbb
jb
xchg
dec
cs
cli
sarl
mov
sbb
test
test
in
fwait
pop
push
jb
enter
mov
rcll
scas
and
xor
mov
clc
dec
pop
out
mov
aaa
fsubs
mov
pushf
add
adc
adc
insb
aad
ds
lock
cs
insb
sti
rolb
push
subl
wrmsr
mov
out
mov
jp
test
dec
int
sbb
pop
ja
jne
jae
xchg
pop
lock
or
pop
pop
inc
shl
call
and
in
mov
dec
cmp
pop
jmp
or
fldl
mov
fmuls
and
outsb
sub
mov
and
jns
xchg
mov
push
rcrl
popf
dec
add
icebp
xchg
shlb
aaa
jge
xorb
and
imul
mov
stos
mov
int
add
out
pop
data16
outsl
int3
fwait
in
js
cltd
sub
into
loop
cwtl
inc
cmc
add
mov
sub
bound
push
pusha
adc
leave
nop
or
xchg
test
loopne
out
and
js
inc
shr
cwtl
js
mov
xor
mov
shll
adc
mov
std
stos
add
fucomi
adc
xchg
inc
stos
aas
out
dec
pushf
cwtl
inc
jae
movsl
mov
aas
sbb
ja
lahf
mov
in
out
sub
andb
adc
mov
mov
jnp
cli
das
push
stc
mov
pop
pop
movsb
imulb
orb
push
xor
les
clc
push
lock
les
xor
and
sbb
lret
jae
jb
jns
icebp
jle
cld
arpl
je
pop
push
loopne
jns
add
test
loopne
scas
push
in
jae
and
sub
setnp
jl
and
xchg
add
sub
inc
and
lea
dec
aad
iret
mov
push
xchg
lods
push
popf
pop
test
xchg
and
pop
jbe
test
sbb
cltd
fwait
jg
cmp
xchg
sbb
ret
xchg
shll
jne
and
dec
adc
jo
int
cwtl
nop
dec
mov
xchg
fstpt
jge
xor
xchg
sub
push
cmpl
jl
pop
and
adc
and
sub
sbb
mov
into
mov
fmulp
popa
sbb
xor
sub
jne
inc
into
cmpsl
subl
xor
mov
ret
call
inc
lret
mov
in
bound
jg
out
loop
mov
adc
shlb
ret
test
xchg
jl
es
imul
adc
jns
loope
mov
insl
stos
pop
lods
repz
mov
mov
imul
popa
mov
dec
jnp
mulb
sahf
or
push
pop
pop
or
jne
sub
push
inc
mov
pop
xor
fld
xor
fs
xchg
xchg
les
dec
in
mov
in
into
push
pop
mov
psllq
and
imul
push
jb
xorl
fsubr
push
add
sub
mov
lock
mov
sbb
dec
mov
test
jmp
and
lock
cmc
addr16
jns
lea
pop
faddl
pop
test
mov
xchg
nop
add
stos
hlt
aas
or
sahf
shlb
sub
mov
pop
inc
scas
stc
mov
mov
pop
repnz
jp
mov
ret
ffreep
inc
push
or
stc
repnz
icebp
ficoml
cmp
inc
jp
imul
imul
and
jle
xchg
mov
xchg
dec
ss
cmp
lea
movsb
mov
push
cmp
or
mov
clc
jg
mov
and
cli
adc
jb
jmp
hlt
mov
mov
push
addr16
outsb
leave
sbb
adc
sarl
cmp
les
aas
lods
loopne
push
pusha
xor
inc
mov
inc
mov
mov
xchg
js
sbb
jp
lods
push
and
adc
xor
lock
cmp
cld
xchg
push
jl
nop
mov
dec
pusha
xor
mov
pop
adc
jle
mov
cli
dec
cmp
or
ljmp
and
shrb
cwtl
rorb
outsb
and
jb
sbb
mov
cmp
pop
or
mov
jns
or
movsb
cld
mov
or
sub
shlb
movsb
cs
pop
data16
cmpb
jbe
cmpb
add
ljmp
push
iret
mov
aad
daa
gs
push
pop
mov
or
btc
aas
mov
sub
in
jp
test
and
or
fcmovnb
mov
pop
movsb
shll
enter
aad
jbe
int3
shl
push
mov
sbb
in
mov
adc
fsubrp
adc
stos
aam
add
mov
shr
cmp
xor
mov
js
outsb
pop
mulb
imul
data16
fimull
or
fists
mov
dec
test
lcall
inc
outsl
sbb
out
orl
movsl
jecxz
aad
add
dec
push
in
push
mov
lea
jo
ss
lock
rol
lret
xchg
hlt
out
add
mov
pop
pop
sbb
subl
fidivl
mov
psllw
arpl
xchg
or
sbb
sbb
dec
sbb
inc
es
dec
cmc
inc
loop
mov
pushf
jge
lret
xchg
mov
xor
stos
push
shlb
pop
push
in
cwtl
adc
ds
jle
stos
cmpsb
pusha
repz
push
fcoml
mov
push
jp
jmp
ljmp
insl
dec
sub
or
xor
cmc
fadds
jg
and
ja
cld
dec
sbbb
ret
and
lods
lods
mov
xchg
arpl
sub
jg,pt
int
andl
mov
jmp
push
lcall
js
imul
xchg
sub
jl
jo
adc
mov
mov
sbb
jg
daa
leave
ja
mov
popa
lock
xor
loopne
xchg
shlb
dec
data16
push
xchg
lods
out
cmp
push
ret
out
dec
mov
loopne
cmp
mov
cmp
mov
insb
push
add
push
or
pop
push
inc
gs
add
mov
push
mov
and
dec
jnp
je
xor
mov
gs
cmpsb
inc
mov
push
jbe
repnz
mov
cmp
ds
push
mov
push
sbb
ret
xchg
push
xchg
push
daa
adc
mov
sub
in
cmp
sub
mov
inc
pop
inc
add
mov
pop
mov
cmp
mov
repnz
push
outsl
or
mul
mov
mov
jp
mov
jl
sub
je
cwtl
jnp
sbb
ret
leave
sarl
movsl
in
sub
cltd
mov
mov
pop
jmp
mov
call
adc
xor
stos
jne
xor
insl
gs
cld
add
push
mov
jl
fs
pminub
sbb
cmc
out
push
cmp
mull
scas
cmpsb
xor
cltd
aas
call
test
aaa
or
and
jnp
inc
insl
mov
inc
rcll
pop
cmpsb
or
lods
mov
repz
es
daa
ja
pop
bound
lds
lcall
add
xor
sub
dec
out
jg
sbb
pusha
sub
idivl
es
jp
bound
hlt
cmp
xchg
xchg
add
mov
mov
lods
cmp
sub
fidivrl
in
mov
mov
pop
faddp
shlb
int3
sbb
sarl
in
fimuls
push
cwtl
popf
pop
mov
fidivl
push
movsb
lds
outsb
pop
into
cmp
push
xchg
mov
mull
adc
sbbl
inc
out
ljmp
mov
pop
mov
clc
xchg
inc
sti
mov
fisttpl
pop
sub
cmpsl
lret
sub
mov
mov
push
jno
andb
or
js
jle
push
mov
push
dec
pop
sbb
inc
imul
out
out
mov
push
lahf
mov
loop
test
andb
lret
push
lea
test
popa
scas
jb
push
or
fld
add
mov
xor
nop
leave
jmp
int3
cmpsb
sbb
out
in
jb
int3
pop
pop
out
sbb
enter
xchg
xadd
pop
add
stos
add
sbb
aad
dec
scas
push
push
mov
mov
jmp
jge
ret
push
popf
dec
push
or
pushf
lcall
es
push
in
sub
out
jns
mov
shll
in
or
ret
sub
in
fsubrp
loop
mov
pop
mov
inc
inc
shll
ljmp
out
hlt
mov
repz
mov
leave
mov
repz
dec
pop
push
or
or
add
divl
adc
cli
mov
stc
call
adc
shl
loope
and
mov
movsb
cmc
mov
pop
lea
es
enter
jg
adc
ror
rcrb
xchg
out
clc
or
push
outsl
lcall
inc
lret
xchg
jnp
pop
shll
push
jp
push
lret
mov
mov
xorl
xchg
mov
sub
fwait
hlt
pop
add
or
mov
jl
es
mov
mov
xor
mov
or
cmp
sub
and
xchg
clc
sbb
daa
enter
pusha
ljmp
mov
sub
jns
add
xchg
out
push
push
idivb
push
add
in
jne
push
cwtl
insl
movsb
jae
dec
lods
int
add
adc
mov
push
int
inc
dec
xor
push
lcall
loope
and
aam
xchg
lea
dec
add
mov
idiv
shlb
fstl
rcll
mov
xchg
data16
push
and
jle
in
add
dec
xlat
gs
ja
repnz
stos
scas
test
push
jmp
or
roll
mov
ret
ss
out
or
sbb
std
data16
dec
mov
xor
mov
cmp
push
dec
dec
inc
xchg
add
push
popf
ds
xor
xor
pushf
xorps
in
pop
mov
mov
xlat
mov
orb
xor
addl
shrb
sub
push
xchg
arpl
sbb
and
test
imul
sbb
lahf
sbb
movsb
aad
jo
fimuls
sbb
dec
lock
add
cmp
push
sub
or
hlt
es
push
sahf
dec
cli
fucomi
lret
mov
lahf
imul
adc
add
push
enter
sbb
jno
inc
or
cmpl
stos
outsb
ds
cmp
test
ret
bound
lds
add
loop
mov
mov
orl
iret
insl
nop
inc
loopne
in
pop
pop
xchg
jecxz,pt
mov
pop
xchg
loop
cmp
aas
lods
in
fidivrl
inc
xlat
mov
pop
mov
ljmp
xchg
pop
dec
jg
xor
mov
xor
add
or
mov
je
pmaxub
aam
movsb
or
sub
xor
pop
push
outsb
mov
pushf
cmc
xchg
jecxz
xchg
clc
fimull
hlt
aam
and
dec
dec
mov
push
lods
hlt
test
je
xchg
jmp
clc
call
cwtl
or
loope
das
movsl
push
xor
mov
jns
nop
jge
dec
lods
pop
iret
outsl
push
fisttpl
test
jge
in
idivb
xchg
loop
xchg
ret
xcrypt-ctr
cmpsl
popf
mov
or
sbb
push
shlb
outsb
xor
cs
sbb
mov
mov
cs
jno
adc
pop
cli
or
dec
dec
and
mov
and
mov
push
ss
lret
xchg
arpl
dec
pop
push
jge
repnz
enter
stc
scas
mov
cwtl
and
and
pusha
dec
push
cs
xchg
out
pop
out
jp
je
arpl
mov
ds
cmp
scas
stos
jge
int3
mul
fidivl
call
cld
jno
popf
push
cmp
or
aad
leave
sbb
into
imul
push
stos
xor
add
xor
mov
lds
arpl
gs
out
into
mov
push
pop
add
jg
cld
adc
sub
jo
aaa
ljmp
xchg
cmp
mov
movsl
cmc
dec
rcrl
iret
jno
orb
dec
mov
nop
add
jmp
sub
cld
mov
mov
push
out
into
fsubl
and
jnp
push
iret
mov
or
sti
mov
sub
lods
pusha
daa
iret
sbb
les
or
cmp
jp
popa
fwait
or
adc
xchg
or
push
cli
daa
mov
aad
into
jbe
stc
pop
out
test
adc
xor
dec
xor
mov
fbstp
push
mov
mov
fs
xor
shl
jmp
stc
push
dec
inc
xor
push
scas
in
nop
mov
shll
sti
lret
jae
shrl
fisubs
jle
sbb
ret
nop
and
fistps
stc
insl
xchg
jle
xor
ficomps
imul
out
sub
mov
cltd
jb
lea
xor
push
inc
push
jb
mov
addr16
fsubp
pop
mov
stc
clc
popa
cmc
aad
push
std
xlat
sarl
or
jmp
sahf
mov
mov
jb
cmpsb
out
sbb
push
fcomi
pushw
mov
push
loop
cld
sub
cmpsl
and
scas
cmpsb
push
cld
push
insb
inc
decb
xchg
inc
jmp
loop
push
push
movsb
lea
jmp
dec
mov
mov
jne
sahf
jne
or
fildl
pusha
mov
mov
loope
mov
out
and
jo
mov
ret
shr
lcall
add
mov
cmp
mov
lods
shrb
lods
pop
cmp
xchg
divb
cmp
aaa
cmp
sbb
int3
mov
mov
in
mov
jns
lret
mov
mov
xlat
push
arpl
mov
xchg
pop
adc
jne
lods
mov
and
push
pop
mov
imul
push
out
mov
movsb
outsl
aas
lods
adc
sbb
fmulp
lcall
jnp
movsl
fidivl
repnz
xchg
jge
fiadds
mov
jbe
js
inc
inc
loop
int3
scas
imul
xchg
sbb
aad
mov
cmp
popf
cmp
into
jnp
add
xor
and
or
mov
scas
inc
into
popa
mov
pop
movsl
pop
in
xchg
mov
xchg
dec
push
cmp
loopne
push
xor
es
pop
addr16
sahf
mov
jmp
arpl
jb
mov
push
jmp
mov
rorl
and
fucomp
jecxz
sbb
inc
xchg
mov
clc
test
adc
test
mov
scas
mov
mov
push
sbb
enter
cmp
and
adc
pusha
pop
jne
insb
lret
loop
mov
rclb
sbb
loope
and
mov
pop
push
in
stos
mov
mov
add
sub
leave
ficomps
flds
fistl
sub
loop
pop
addr16
cltd
mov
inc
nop
xor
jmp
imul
les
jge
adc
movsb
and
pop
pushf
imul
inc
mov
stos
xchg
movsl
negb
sahf
push
lahf
loopne
mov
xchg
cwtl
mov
push
enter
xchg
mov
lds
lret
lods
and
pop
or
clc
or
push
mov
push
sub
jg
les
bound
pop
add
cmp
inc
dec
cmp
fs
ja
sar
out
or
add
sub
shrb
stc
sub
iret
mov
mov
jp
ljmp
insb
or
fsub
stc
inc
mov
sti
mov
loopne
iret
push
cwtl
and
add
movsl
cmp
xor
mov
sub
lods
mov
lea
out
daa
xchg
mov
or
adcl
mov
ja
pop
sub
xchg
xor
push
loopne
ss
icebp
aas
les
leave
insb
daa
and
and
sub
dec
pop
inc
addb
in
xchg
aam
xchg
mov
cmp
ljmp
sbb
pop
xor
std
stc
pusha
adc
ret
cld
jp
jns
leave
aas
les
xor
jnp
cmp
mov
xor
inc
and
xchg
pop
in
pusha
test
inc
jl
xchg
sub
jno
push
pop
shlb
aas
mov
je
fdivr
jmp
addb
and
push
mov
sub
cmp
mov
inc
jo
jg
insb
mulb
jbe
dec
dec
sub
lret
insl
ds
pushf
aam
push
test
push
add
fsincos
bound
push
ret
sub
cmp
xor
aam
jmp
adc
fcmovnu
arpl
pop
sub
lds
lret
arpl
lds
and
in
enter
mov
sbb
push
loop
add
add
add
ss
adc
pop
out
movsl
or
push
mov
xchg
pop
fcmovnb
jne
mov
in
outsl
dec
xchg
movsl
lret
inc
arpl
sti
mov
stos
jnp
ss
push
out
cmp
popa
pusha
hlt
mov
jo
dec
fmul
insb
gs
daa
pop
insl
inc
push
adc
int
es
jl
or
js
jno
aaa
filds
dec
jecxz
or
push
insl
cmp
xor
adc
mov
js
inc
push
add
dec
fisubrs
push
popl
sub
out
in
adc
dec
das
insl
orl
jmp
add
or
dec
sbb
pop
das
outsl
pop
and
dec
mov
push
mov
stos
mov
fidivl
pop
shlb
into
popf
pop
jno
push
jmp
aad
mov
icebp
ljmp
mov
inc
dec
jns
imul
in
push
inc
pop
adc
jmp
push
xchg
fs
adc
ds
or
and
sti
cmp
and
ret
jg
test
xor
jge
imul
sbb
mov
idiv
xchg
sbb
rolb
xor
push
out
inc
into
pushf
or
push
sarb
or
clc
ffreep
cs
test
mov
jne
dec
mov
jb
imul
sahf
sub
fs
repnz
jl
ror
jnp
pop
mov
cmpsl
fisttpll
adc
and
add
rorb
clc
pop
aaa
insl
loopne
ret
add
test
and
and
pop
xor
push
mov
adcb
mov
test
das
cmp
bound
ljmp
shr
inc
adc
lods
jecxz
mov
jo
pop
pop
fs
shlb
xchg
loopne
xchg
push
push
inc
fists
je
sub
stc
push
xor
or
xchg
mov
xor
lahf
mov
outsl
mov
add
lret
cmp
cltd
cwtl
sub
addr16
inc
xchg
ljmp
xor
sbb
icebp
xor
ss
pop
pop
mov
cmc
fsts
dec
shr
sub
push
test
mov
pushf
mov
pop
mov
cmp
sub
aad
jne
dec
movsb
xchg
xor
push
test
iret
outsb
or
xlat
pop
dec
xor
dec
iret
movsl
adc
iret
mov
jmp
dec
and
call
arpl
pop
mov
scas
pop
jp
xchg
dec
xorb
add
mov
mulb
ficoms
pop
or
pop
dec
outsb
xorb
xor
inc
push
test
push
int3
out
aas
pop
xchg
sub
jle
sub
std
repnz
aam
loop
aaa
fsubrs
inc
mov
cmp
rcrl
push
fldcw
inc
sub
inc
pop
js
cmp
dec
sub
push
jne
lret
inc
cmp
lods
cltd
std
mov
ljmp
mov
add
test
inc
inc
jnp
les
call
loopne
mov
mov
cmp
test
push
mov
push
nop
in
ja
cmp
jno
in
aaa
xchg
mov
callw
inc
inc
js
push
and
sub
pushf
sub
add
lds
jo
ja
mov
mov
enter
cld
mov
jnp
mov
cmpsl
test
aaa
pop
aas
pusha
mov
or
movsl
sbb
sbb
je
outsl
xlat
mov
js
imul
mov
push
fisttpl
daa
xchg
pusha
inc
mov
add
mov
push
rolb
pop
push
xchg
xor
sub
jp
or
ret
gs
loop
mov
loop
loopne
fidivrs
mov
and
addr16
loop
mov
pop
xchg
mov
jnp
stos
pop
stos
arpl
xor
bound
add
inc
in
add
pmullw
inc
sti
repz
fxch
sbb
test
dec
add
cld
sbbl
js
pop
je
flds
in
sbb
push
sbbb
andl
call
addr16
out
mov
scas
or
and
sbb
insl
aad
jl
orb
in
jle
and
jne
xorb
sarb
ja
and
jecxz
mov
cmp
ret
push
xchg
into
sbb
arpl
sbb
mov
sub
mov
lcall
std
scas
ret
mov
lods
xor
testl
push
xchg
mov
jl
adc
mov
mov
add
cmpsl
jmp
popa
jmp
lahf
imul
mov
pop
hlt
cli
and
into
jno
cmpsl
jb
repnz
and
in
lea
call
jg
sbb
mov
lock
movsb
test
and
pop
mov
add
jbe
icebp
xchg
jo
cmp
bound
ds
jne
jb
shll
mov
jp
imul
xchg
inc
hlt
push
sub
imul
or
mov
mov
mov
and
or
sysexit
test
jle
cld
and
mov
mov
lods
adc
xor
xchg
push
adc
xchg
mov
cs
movsl
js
and
and
insb
lret
arpl
fsubrl
out
ljmp
sahf
add
dec
bound
mul
leave
mov
add
ds
test
pop
insl
push
out
add
aam
push
addr16
cmc
shrb
xor
sbb
add
lods
test
inc
mov
cmp
jmp
adc
cmpsl
jl
xor
and
cld
or
fs
xor
cli
shlb
xor
repnz
outsb
lds
shr
push
fwait
es
jg
mov
iret
mov
mov
ret
and
lcall
xor
sbb
jo
jge
inc
jae
mov
loopne
imul
out
push
or
aam
lahf
fdivs
mov
push
inc
inc
or
pushf
xchg
inc
mov
push
jno
jbe
xor
xchg
mov
cmp
ss
mov
mov
sub
or
pop
add
popa
aad
xchg
dec
cwtl
jp
sti
sbb
dec
out
cmc
int
xchg
sti
push
push
movsb
and
jno
push
sub
mov
out
add
lcall
notl
and
pop
out
cwtl
sub
mov
adc
push
jecxz
lret
pop
insl
out
jbe
dec
cmp
mov
leave
fadd
mov
in
imul
adc
ljmp
mov
adc
sbb
test
and
jo
clc
push
hlt
xor
ss
mov
adc
mov
ds
sub
adc
cli
mov
test
push
add
pushf
ljmp
mov
inc
stos
into
popa
mov
pop
dec
aad
xor
mov
imul
les
test
loope
add
dec
cmp
pop
movsl
push
sub
mov
xor
popa
repz
stos
sbb
push
les
sbb
and
xchg
gs
out
rcll
pop
sub
test
push
add
push
push
inc
arpl
push
pop
pusha
in
loopne
dec
cmc
stos
add
insl
inc
mov
icebp
or
xchg
cmp
or
sub
mov
push
fwait
stos
cmp
mov
xchg
cwtl
sti
push
lahf
adc
jo
sub
lahf
out
adc
in
fdivs
cmp
xchg
xor
sbb
push
jmp
addr16
movsl
scas
jecxz
or
push
dec
cwtl
das
cmc
shrb
jg
inc
xor
mov
aad
adc
mov
xchg
mov
jg
bound
insb
adc
xchg
in
xchg
mov
int3
push
lcall
push
arpl
mov
lea
fildll
mov
gs
pop
xchg
test
icebp
pop
inc
shrl
sub
push
push
xchg
sbb
pop
push
ficoml
push
dec
outsb
fldl
leave
test
lret
fsubrs
pop
stc
arpl
stos
push
mov
inc
and
iret
and
xchg
pop
repz
jp
imul
sarb
mov
movsl
push
and
lret
sbb
pop
arpl
rorb
dec
adc
or
and
div
push
sarb
in
test
arpl
imul
adc
icebp
repnz
push
xor
int
pop
and
or
adc
mov
fldl
movsl
int3
cmp
mov
xor
pop
inc
shlb
xchg
out
fmull
test
loopne
fdiv
insb
pop
mov
cmp
dec
cmp
pop
jb
cmp
inc
ds
pop
andb
xor
xchg
clc
pop
movsl
cld
subl
cmp
int
fimuls
sbb
outsl
sbb
push
rcrl
mov
fldt
jb
xchg
sahf
or
pop
jo
scas
aas
ret
jmp
stos
add
add
mov
ljmp
cs
outsl
jecxz
pop
pop
out
out
push
inc
dec
mov
lea
ja
jo
sarl
mov
shlb
hlt
loop
shrb
sti
pusha
stos
xchg
and
call
add
dec
iret
mov
cmp
inc
mov
push
jg
cwtl
inc
mov
dec
and
push
rorl
aad
jmp
js
xchg
jb,pn
inc
insb
sbb
mov
mov
xor
scas
fnstsw
pop
xchg
jne
inc
cmpsb
mov
adc
fst
mov
fs
xlat
leave
sub
call
fsubrs
jg
pop
sub
push
jge
sti
or
imul
lods
add
jmp
ret
sbb
mov
xor
loop
sub
push
push
pop
sub
ljmp
js
bound
push
xchg
lret
rorb
cmc
aad
data16
ss
push
out
xor
dec
movsb
inc
lahf
push
cmp
or
push
outsl
test
mov
addr16
push
dec
sub
cmpsb
push
stos
ret
clc
xlat
xchg
sbb
cmp
cli
clc
cltd
loopne
cmp
movsl
aas
inc
mov
dec
cld
mov
xlat
inc
dec
cmpsl
mov
or
pop
lea
mov
jbe
pop
mov
mov
out
push
fmull
push
mov
pop
dec
cmpl
jle
loope
neg
pop
pop
test
test
jmp
out
and
repz
lret
nop
push
jl
mov
mov
testb
stos
add
ja
xchg
cld
mov
imul
loope
outsl
movsb
in
adc
insb
pop
mov
ljmp
jmp
mov
out
sbb
and
inc
es
pop
stc
in
xchg
adc
inc
dec
sti
cmp
int3
sub
lret
into
pushf
mov
ss
mov
mov
in
sbb
sub
das
aad
inc
or
stos
cli
aaa
aas
fldcw
add
cmpsb
mov
push
mov
push
or
xchg
repz
push
cwtl
jl
sbb
mov
mov
rcll
jbe
shlb
enter
push
js
sbb
push
ljmp
test
dec
jecxz
push
fidivs
mov
mov
push
sahf
shlb
fimuls
inc
xor
xchg
fists
sub
sbb
std
pop
in
in
andl
rcrl
jle
loop
xchg
sub
sti
xchg
sub
and
inc
push
add
and
inc
push
xlat
xchg
dec
adc
pop
push
sar
xor
test
mov
imul
push
sbb
inc
or
jmp
arpl
xor
scas
cmp
movsb
add
jns
adc
das
sahf
mov
sbb
add
movsl
movsl
aaa
push
insb
cmp
lock
out
stos
jge
adc
mov
mov
jl
and
icebp
cmpsl
mov
pop
mov
mov
sbb
shrb
mov
mov
jle
dec
movd
cs
rorb
sub
clc
xor
stos
ret
inc
pop
lods
popf
jb
jb
and
nop
clc
xchg
cmpsb
mov
cmp
fs
xchg
cmp
inc
cmpsb
push
loop
pushl
or
jb
mov
xor
das
pop
inc
fstpt
pushf
movsl
cld
insb
xor
out
popa
mov
or
test
cli
mov
cld
lods
mov
addl
outsl
push
mov
pop
sbb
jae
fsub
cmp
push
add
push
jo
aas
add
and
push
mov
xor
lcall
jmp
mov
hlt
int3
jmp
ret
out
js
jle
xchg
or
pop
sub
ja
idivl
lahf
aam
sbb
push
cmp
mov
stc
dec
adc
filds
movsb
sar
sub
pushf
inc
mov
pop
dec
jge
dec
adc
stc
or
je
loope
scas
jmp
sarb
aas
out
push
mov
test
cmp
stc
sub
mov
or
or
cmp
cmpsl
scas
xchg
or
add
insb
divb
adc
or
imul
adcb
push
lea
fs
cmp
push
jg
shrl
pop
xlat
lea
jl
push
nop
pop
push
push
cmp
pusha
notb
pop
sbb
sub
xchg
je
sbb
test
pop
gs
rcl
mov
add
pop
jle
or
in
cli
test
mov
aad
push
lahf
aaa
nop
mov
aas
push
mov
imul
adc
mov
inc
pop
repz
xchg
les
and
pusha
js
out
push
int
sub
int3
dec
dec
int
push
sbb
cmp
xchg
imul
jl
jbe
in
xor
cmp
data16
inc
loop
mov
add
mov
iret
sub
arpl
std
xor
aam
pop
mov
inc
hlt
or
push
cmp
ficoms
xchg
outsb
ljmp
cmp
je
or
gs
or
jge
push
jns
pop
mov
cmpsb
jle
aad
movsb
in
push
out
sub
leave
cmp
scas
add
in
pop
push
out
cli
add
cli
push
pop
dec
jp
pushf
bound
daa
adc
fwait
and
mov
popf
movsb
xchg
aam
mov
xchg
jbe
lea
repz
shll
ret
stos
or
hlt
add
cltd
mov
enter
cmp
dec
data16
aas
enter
lcall
out
lods
fprem
jbe
lahf
and
mov
fidivrs
xchg
cmp
pop
adc
pop
cmpsl
into
lods
inc
cltd
test
jnp
jno
lret
adc
fcomp
dec
inc
cmp
popf
ret
fwait
dec
and
xchg
dec
fbstp
out
clc
mov
sub
fs
or
mov
mov
das
fwait
xor
lock
xor
mov
mov
stos
mov
jp
mov
xchg
pop
imul
or
mov
rcll
and
sbb
jp
cmp
pusha
push
lret
xor
and
sub
pusha
adc
lcall
adc
xorb
popf
sub
and
in
in
mov
test
cwtl
mov
in
std
and
sbbb
cli
rcl
add
and
mov
xor
inc
clc
cmpsl
movsl
ljmp
sub
xor
gs
xor
insl
and
push
cmpsl
dec
mov
mulb
pop
xor
cmpsb
pop
jb
out
and
in
mov
dec
adc
and
in
sahf
and
scas
push
dec
sub
scas
sub
inc
ret
mov
xchg
or
jae
lret
mov
sbb
pop
cwtl
mov
dec
push
movsl
dec
insl
mov
dec
insb
mov
outsl
add
push
popa
mov
call
push
sub
mov
push
stos
inc
pop
mov
data16
push
in
xchg
dec
fistpl
add
sbb
ret
outsb
xchg
aas
adc
cmpsb
and
mov
mov
fistps
xlat
adc
mov
lret
scas
sub
mov
dec
test
in
xchg
adc
pop
data16
movsl
out
fsubrl
mulb
out
subb
imul
push
or
fidivrs
les
mov
push
add
mov
lcall
or
mov
enter
leave
mov
pop
pop
jno
or
mov
lahf
cld
repnz
pop
mov
adc
out
stos
shrb
and
cli
cmp
or
std
into
xchg
pop
mov
push
es
sub
xchg
sbb
jns
add
dec
dec
jno
pusha
cmpsb
xchg
pop
cwtl
scas
push
popa
and
push
aad
push
ret
orl
or
enter
into
sti
pop
imul
movsl
mov
adc
arpl
popf
sbb
gs
push
cmc
jl
mov
cmp
push
cmpsl
xchg
mov
jo
inc
pop
mov
cmp
add
jb
push
sub
arpl
fisttpll
xor
popa
decb
popa
or
rcl
mov
lea
mov
sub
test
imul
scas
xchg
insb
sbb
push
es
ljmp
mov
stos
mov
mov
jo
repz
and
fisttpll
ljmp
sahf
fisttpl
jmp
cli
bswap
movl
fwait
enter
into
adc
jge
notl
repz
xor
ret
jbe
push
jbe
psllw
xchg
out
call
cltd
inc
insl
lock
sbb
mov
and
jmp
and
dec
jl
mov
mov
push
daa
dec
push
inc
jno
jo
jno
mov
mov
mov
enter
push
int
jl
or
fists
loop
inc
dec
and
cmp
frstor
and
fidivl
add
lcall
outsb
fnstenv
mov
scas
aas
inc
jmp
test
popa
xor
mov
in
jge
mov
jge
xchg
ds
push
add
inc
mov
test
pop
ds
fists
clc
adc
out
pop
pushf
mov
sub
mulb
shl
sbb
stos
push
cmc
mov
cmp
inc
mov
test
repz
cmp
mov
jecxz
push
dec
imul
cmp
test
scas
jb
xor
sub
imull
jmp
notb
sub
loop
add
std
ljmp
movsl
adc
dec
andl
cmpsl
cmp
jae
and
mov
ret
or
into
aaa
and
clc
aas
cmp
jnp
sbb
or
test
add
push
cs
xchg
xchg
push
ror
mov
inc
fstps
jle
mov
jp
or
cli
scas
pop
cmc
cmpl
cmp
shrl
stos
pop
filds
fdivrs
shrb
jb
sbb
push
jl
stc
mov
mov
cmp
inc
sbb
push
jno
or
fimull
popf
and
inc
loop
xorl
dec
int3
dec
push
leave
arpl
cltd
push
sub
arpl
adc
popf
pushf
loope
lret
jle
outsl
fdivp
mov
ljmp
push
aad
add
sub
push
js
xchg
push
mov
and
jge
aaa
out
jl
std
sub
mov
jle
mov
mov
in
pushf
rolb
jb
jle
pushf
lea
in
or
xor
cld
inc
pop
push
mov
fsubrs
and
adc
in
jmp
mov
cmpsb
add
cmc
scas
sub
mov
adc
cld
imull
es
xor
lock
dec
dec
roll
and
aam
rep
lock
cmpl
out
scas
inc
cmp
pop
mov
rorb
imul
xchg
jo
inc
js
add
pusha
scas
daa
jmp
mov
inc
mov
ljmp
shrb
add
cmp
sbb
jns
enter
or
lods
lods
mov
cmp
fsubrl
pop
test
jg
and
scas
shl
xchg
sub
xor
or
or
aaa
shl
cmc
and
sub
push
out
in
xor
fcmove
hlt
mov
lret
fisttps
cli
in
arpl
mov
mov
insb
inc
jb
and
pop
popf
js
mov
push
sbb
fisubrs
js
xor
dec
mov
lcall
gs
sbb
out
add
mov
or
daa
mov
mov
cmp
mov
and
xchg
lret
jo
movsl
adc
mov
pop
cmp
jge
mov
mov
test
push
jns
mov
call
and
inc
mov
push
mov
shll
mov
stc
fisubl
rcll
add
ljmp
aas
pop
jmp
push
xlat
movsb
mov
in
dec
loope
out
adc
fsubrl
fucomp
dec
test
and
shr
cmpsl
jb
jl
and
fs
stc
adc
mov
ja
sbb
mov
in
enter
push
call
repnz
incl
mov
pop
outsl
xchg
rcl
sbb
je
sbbl
and
inc
test
mov
fdivl
xchg
fiadds
xor
dec
push
arpl
jns
sbb
int3
lds
sbb
xchg
pop
inc
and
cs
jg
sarl
xor
cmp
repnz
add
or
mov
into
sub
lahf
out
das
sub
jge
pusha
mov
std
repz
jb
cmc
nop
lods
cmp
xor
in
adc
fwait
sbb
xor
inc
inc
or
nop
in
scas
dec
loopne
pop
rclb
rorb
sub
scas
mov
imul
mov
push
jp
cmp
lods
sbb
and
adc
test
sbb
mov
adc
fmull
sbb
fimull
loopne
movsb
pop
mov
xlat
mov
xchg
jne
stos
out
push
xor
repnz
cmpb
or
test
pop
sahf
mov
sbb
and
lods
aas
inc
out
movsl
in
or
cmp
leave
adc
pxor
cmp
mov
jge
adcb
lret
jb
leave
test
out
gs
xor
jp
cmc
inc
cwtl
mov
ret
mov
shll
lcall
enter
rcrb
in
test
hlt
leave
adc
jo
std
sub
dec
mov
mov
sbb
xlat
inc
adc
cmp
jns
ss
pop
fdiv
in
lock
es
push
xor
sti
add
sbb
inc
inc
xor
or
dec
sbb
aam
popf
adc
les
std
jns
dec
idiv
not
lahf
lret
jl
sub
xchg
imul
loop
sub
dec
nop
inc
lcall
loop
inc
fwait
xchg
adc
shl
xchg
jmp
into
call
pop
mov
roll
ss
pop
test
scas
repz
loop
cmp
push
push
xor
data16
dec
fdivrp
mov
stos
popf
mov
and
inc
mov
mov
xchg
insb
or
jl
sub
sbb
cmc
dec
ds
cli
push
pop
pop
js
es
dec
jno
pop
cvttps2pi
out
and
lods
loopne
add
lea
stos
or
repz
rolb
cmp
stos
stos
insl
add
sahf
into
lahf
push
jne
inc
jnp
js
and
cwtl
bound
xor
push
adc
or
add
or
ret
mov
dec
je
pop
std
fwait
push
cld
lret
insl
gs
rclb
call
inc
pop
shrb
addr16
in
fcom
lahf
mov
jp
icebp
push
stos
je
adc
into
jo
lods
je
inc
in
test
mov
or
stos
push
mov
shl
xor
fildl
hlt
dec
sbb
cmp
mov
insl
pop
popa
fs
lret
pop
inc
rcrb
jge
out
xchg
mov
add
mov
push
out
enter
push
mulb
mov
lcall
mov
roll
stos
icebp
mov
mov
xchg
sti
imulb
pop
out
in
out
in
sub
enter
mov
ss
inc
or
pop
rorl
jo
xchg
add
adc
adc
ja
mov
ja
adc
cmp
lds
jmp
sub
notl
movsb
sbb
jecxz
dec
xor
xchg
repnz
cli
add
aas
stos
xchg
jmp
jecxz
push
aas
jle
inc
rorl
cmp
adc
push
sub
outsl
ficomps
movsb
add
nop
bound
std
dec
push
mov
mov
ret
cmpsl
pop
rcr
add
jbe
cmc
jmp
mull
mov
fisubs
addr16
repnz
das
fwait
lret
bound
stos
add
dec
cmpsb
push
dec
repz
mov
inc
shll
sub
daa
adc
add
ljmp
std
xor
jnp
lret
add
lock
lea
mov
fildll
or
jmp
sub
or
out
fists
pop
ljmp
fwait
xchg
mov
daa
mov
mov
in
js
pusha
xor
clc
jne
enter
std
pop
sti
scas
mov
pushf
mov
mov
cmp
jg
cmp
sub
loope
xor
icebp
lods
xor
pop
jmp
addl
mov
leave
mov
mov
in
adc
into
out
xor
pop
dec
xor
loop
fs
js
adc
xchg
outsb
xchg
cmpsb
xchg
test
js
movsb
inc
mov
push
and
adc
mov
and
sbb
push
add
fs
lods
xor
inc
push
jmp
leave
push
movsb
lods
stc
enter
call
ret
lock
jecxz
testb
jg
push
pop
mov
xlat
inc
pop
mov
ret
add
gs
outsl
lahf
mov
sub
mov
jl
xchg
imul
push
mov
or
test
insl
mov
loopne
sbb
cmp
das
mov
mov
lods
pusha
roll
clc
cmpsl
bound
push
fnstenv
lock
out
mov
xchg
xchg
fdivl
movsb
dec
mov
scas
adc
inc
dec
jmp
mov
mov
xor
fdivl
out
gs
roll
stos
cs
lea
enter
jl
ds
and
std
ja
loop
cli
inc
cmpb
mov
sub
in
les
mov
mov
add
dec
mov
xor
inc
or
ja
pop
mov
jl
scas
mov
sub
mov
cmp
rorl
rcll
xor
mov
or
xor
icebp
inc
xchg
cmp
hlt
mov
in
arpl
push
fsts
imul
cwtl
movsb
sbbl
mov
add
mov
movsl
jl
inc
movsb
add
lock
jmp
cmp
cmpsl
lods
or
pop
xchg
fmuls
sbb
or
mov
sti
inc
mov
scas
mov
aaa
loopne
shl
dec
outsb
or
and
mov
push
mov
loop
or
push
outsb
lahf
mov
inc
mov
aad
adc
cmpsl
mov
push
and
sbbb
inc
or
fwait
iret
js
pop
movsb
popa
clc
addr16
das
dec
repnz
mov
in
insl
jp
mov
mov
cmpb
mov
mov
mov
jle
add
mov
lods
pusha
fsubrp
in
inc
movsl
xchg
fisubrl
shll
and
xlat
jmp
xor
sub
jg
xor
and
push
loop
cld
push
andb
jne
insl
int3
aad
nop
inc
pop
out
sub
jno
mov
cmp
xchg
addr16
ss
outsb
push
mov
les
popa
das
leave
rcll
inc
test
push
push
inc
push
inc
push
inc
cmpsb
jp
push
in
lret
icebp
data16
cmc
cmpsl
shrl
jo
push
push
mull
frstor
leave
pop
fs
jnp
cmp
negb
add
pop
cmp
push
cmp
in
test
cmp
mov
ds
push
sub
lods
dec
sbbl
xor
cmp
push
mov
ja
sub
andl
push
push
cmpl
cltd
add
std
cmp
in
imul
cli
fs
daa
or
xchg
inc
rorl
push
hlt
cwtl
pop
loope
out
fldl
xchg
jecxz
mov
imul
sbb
aas
jge
loop
rclb
ret
lcall
loope
inc
ss
movsl
shlb
add
push
std
stos
fwait
ret
mov
rcrb
and
adc
xor
js
fs
add
fwait
sub
imul
xchg
mov
fdivr
popf
xchg
movsl
mov
mov
in
jp
mov
cmpsb
xor
mov
call
rsm
jno
movsl
aaa
rcr
jo
std
aam
push
lret
cmpb
push
mov
addr16
jecxz
repnz
xor
xor
imul
mov
push
adc
cmp
mov
movsl
mov
mov
mov
xchg
dec
loop
or
mov
and
mov
ret
mov
mov
inc
mov
bound
xchg
push
or
dec
cltd
fisubrs
enter
fnstenv
sbb
out
dec
mov
in
pop
and
outsb
fmuls
add
mov
insb
movsb
lret
loope
pop
mov
pop
xorl
jl
mov
mov
mov
jns
inc
aad
jb
mov
inc
imul
stos
mov
lock
adc
aaa
add
xchg
das
cmp
out
js
inc
push
mov
out
test
std
xchg
jg
sbb
arpl
nop
and
pop
sbb
enter
cmp
jl
fstl
dec
psubd
imul
mov
mov
push
xor
mov
fnstenv
push
pop
or
mov
sub
pop
stos
daa
lods
mov
lds
nop
mov
nop
add
jne
inc
ljmp
xlat
fistpll
inc
data16
jne
add
hlt
aad
movsl
xor
push
push
out
pop
adc
dec
push
stos
out
mov
lret
rorb
sub
int3
data16
mov
rclb
and
movsb
mov
scas
dec
out
jae
mov
jb
sub
fistps
jnp
push
adc
or
inc
dec
xchg
jle
xor
and
aas
fmuls
movsb
stc
jns
inc
inc
xor
pop
mul
xor
ds
std
pop
ds
xor
cs
cmc
xor
mov
data16
adc
cs
xchg
push
dec
gs
sub
xchg
sbb
in
add
lret
or
fbld
jbe
mov
jmp
imul
add
dec
fucom
andl
jo
mov
and
imul
jecxz
inc
pop
add
inc
test
shlb
add
into
movb
in
mov
cmp
dec
sub
pop
jmp
pop
loopne
add
scas
add
xlat
mov
lds
or
lret
cld
and
cltd
pop
xchg
sub
pop
lds
fwait
sub
decl
arpl
mov
fildll
test
les
mov
std
mov
sbb
popa
xchg
pop
sbb
or
jnp
xchg
cs
adc
movsl
sub
pop
pop
xchg
je
addr16
push
mov
inc
hlt
aas
push
bound
xor
mov
ret
daa
inc
mov
inc
jns
mov
daa
ficoms
dec
cmp
sahf
ds
movsb
jb
lret
and
mov
fs
push
push
or
dec
or
adc
shll
shrb
pop
xchg
iret
push
cltd
hlt
or
xchg
push
mull
add
xchg
imul
ret
jp
jge
fucom
add
push
inc
cmpsl
clc
loope
loop
push
adcb
out
dec
jl
popf
add
inc
xor
mov
testl
test
les
popa
inc
pop
test
daa
push
std
jmp
std
or
mov
mov
leave
mov
mov
adc
jmp
data16
push
pushf
xchg
in
sti
out
loop
and
push
xchg
and
fstpt
repz
sahf
xchg
loop
lcall
mov
sub
push
or
jmp
inc
in
pushl
lods
dec
pop
fisubrs
enter
cltd
inc
in
inc
into
mov
xchg
lcall
fistpll
shl
mov
enter
iret
mov
push
lcall
lods
inc
lahf
and
inc
jne
xchg
call
jne
imul
loopne
or
mov
mov
add
in
out
sub
push
sbb
bound
fdivs
jmp
test
sarl
rcrl
jns
cld
aam
inc
sbb
mov
inc
push
cmp
mov
int
aam
pop
rcr
mov
lret
shlb
rorb
add
jae
jmp
cld
xor
pop
push
repz
fs
inc
mov
jno
sbb
cld
repz
and
pop
push
fcompl
xlat
fcmovnb
cltd
jl
xchg
insb
mov
pop
mov
pop
shlb
sbb
ds
iret
cmp
or
stos
rorl
adcl
filds
sub
daa
repnz
adc
sub
mov
pusha
or
fsubrs
imul
fsts
out
dec
jb
imul
xchg
jae
push
mov
out
mov
shll
lret
xlat
push
push
mov
push
jge
fildll
ljmp
repnz
in
or
mov
ja
call
lea
sbb
psrad
mov
repz
sub
pop
sub
insl
dec
jns
pop
jns
fnstenv
addr16
das
or
xchg
clc
pop
jmp
dec
push
or
fisttpll
sbb
stc
dec
sbb
inc
dec
stc
es
pop
mov
icebp
jnp
sbb
cmp
fwait
cmp
fs
xchg
xchg
inc
lea
sti
inc
mov
xchg
lret
enter
jb
ret
ss
or
xor
mov
popf
shrl
jae
cmpsl
lea
sub
adc
aam
jle
insl
ret
loope
pop
add
les
icebp
push
mov
cmpsb
movsl
sub
or
stc
popa
outsb
popa
jno
xchg
and
or
daa
insl
lret
lret
movsl
xor
dec
xchg
das
pcmpgtd
sub
scas
sbb
inc
adc
outsl
data16
xchg
test
je
cld
add
cltd
mov
insl
cltd
imul
xchg
cmp
cld
fcmovbe
mov
inc
fwait
xor
out
aad
mov
imul
add
mov
shll
popf
mov
jo
sub
or
mov
test
stos
mov
dec
xchg
add
mov
lds
shll
pop
and
inc
loop
lret
jl
out
clc
stos
mov
jnp
cmp
jp
pop
push
jl
jle
cmp
sub
dec
jb
xor
push
cmp
lcall
cmp
fists
sub
mov
shlb
dec
xor
enter
lock
outsl
insl
icebp
sub
jb
mov
push
ljmp
enter
test
in
cmp
sub
mov
sti
sub
nop
mov
jp
rclb
xor
fdivs
sahf
test
insb
lea
outsb
xchg
mov
cwtl
xchg
lods
mov
jecxz
mov
add
ja
adc
mov
or
sbb
cmp
bound
test
xor
pop
and
xchg
pop
bound
stos
adc
sbb
mov
xor
scas
fdivs
fnstcw
sub
shl
and
mov
jnp
mov
in
inc
xchg
cmp
jne
cmp
mov
outsb
jge
lods
aaa
or
aaa
jb
or
sbb
cmc
test
stc
fsubr
or
outsb
push
in
addr16
jnp
mov
pop
stc
popa
mov
jp
and
jae
sbb
push
hlt
js
xchg
adc
push
fisttpll
mov
and
xor
sbb
add
out
cmpsb
lret
cmp
mov
aad
fidivrl
out
cs
push
and
xchg
jb
rorb
jno
out
cmp
mov
adc
test
mov
out
adc
lahf
mov
test
jle
addr16
std
sbb
outsb
cltd
imul
xchg
jl
jno
sbb
add
in
icebp
in
mov
jg
cmpsb
or
into
jo
fs
pop
mov
imul
pop
clc
fcomp
add
cmp
or
out
mov
mov
loopne
mov
dec
ja
rcrl
push
into
pop
or
inc
jo
pop
out
int3
pop
pop
xchg
jl
icebp
push
add
imul
cwtl
rorb
jns
cs
inc
dec
jo
scas
sub
jbe
dec
ja
cmp
ficomps
and
cmpsl
inc
jnp
stc
nop
aad
dec
lods
test
sbb
sbb
das
jg
sbb
mov
sub
jg
dec
arpl
add
dec
jmp
stc
insb
call
rorb
insl
mov
arpl
and
jbe
or
jnp
test
addr16
push
scas
lret
mov
dec
mov
xchg
adc
loope
push
mov
cmp
xchg
mov
outsl
mov
insl
test
sti
rcrb
notl
jp
pop
inc
lret
adc
mov
pop
cmpsb
pop
outsb
loopne
scas
sbb
mov
xchg
repnz
dec
inc
push
arpl
mov
xor
push
jp
pop
adc
loopne
push
add
insb
addr16
ret
xchg
inc
hlt
dec
adc
pop
adcb
and
dec
pop
dec
adc
clc
inc
test
stos
add
lock
lock
out
iret
push
inc
lea
sub
gs
jne
xchg
and
cmpsl
out
int
mov
sub
add
mov
nop
mov
aaa
dec
push
fcmovne
loop
pop
ret
mov
rcl
xchg
cmp
mov
adc
cld
mov
outsb
std
stos
push
xchg
cs
rcl
push
ret
fdivrs
addb
mul
mov
and
and
fwait
aad
add
push
test
mov
js
cltd
mov
and
adc
gs
into
push
mov
sarl
push
dec
into
in
js
pop
loop
jno
shll
popf
push
jae
cmp
sti
jo
test
mov
clc
or
mov
negb
jae
pop
xor
lods
pop
imul
sarl
sub
subb
xchg
loopne
push
push
xchg
pop
push
jmp
and
bound
pop
ljmp
push
sub
cmp
in
dec
push
dec
mov
push
xchg
push
scas
pop
fdiv
jo
jg
test
fs
jnp
sbb
inc
out
jp
xor
fidivrl
rcl
nop
or
mov
cmpsb
ja
mov
cmp
sahf
push
leave
call
repnz
fistl
cld
xchg
out
xlat
subl
pop
je
or
ds
out
jl
pusha
mov
hlt
lods
mov
lds
pop
enter
stos
dec
fsubrl
mov
fdivp
into
jnp
ret
push
add
mov
popf
xor
cmp
xor
adc
or
mov
mov
shll
shl
add
add
jmp
cmp
insl
inc
inc
cmp
push
lods
adc
add
jne
jb
rcrl
frstors
lds
cmp
push
xor
dec
sbb
pop
mov
cmp
loopne
mov
and
mov
int
sbb
sub
push
repz
call
lock
dec
xchg
lock
xlat
jle
inc
or
xchg
dec
movsl
mov
icebp
out
dec
jae
push
mov
ret
sub
cwtl
hlt
imul
sub
lea
je
cltd
or
and
sbb
pop
xchg
or
repnz
out
call
sub
or
fists
pushl
or
insl
inc
das
jb
fmull
or
inc
mov
xchg
int3
outsb
fstp
std
pop
in
jmp
push
enter
cmpsb
mov
hlt
jne
mov
lock
or
mov
lea
sub
xchg
push
lea
or
push
cmp
in
imulb
imull
sub
sub
outsl
imul
bnd
and
sub
in
rcrb
hlt
lds
mov
sbb
and
loopne
jge
cs
cltd
shrl
jmp
mov
arpl
jno
jbe
and
call
and
loopne
sti
add
xor
lds
cmp
ljmp
add
movsb
pop
xchg
or
xchg
popa
mov
scas
sarb
outsl
stos
sbb
mov
pop
je
cltd
xor
mov
idiv
shrl
adc
dec
out
and
mov
enter
mov
cmpsl
cmp
lds
fistpll
lock
nop
std
cli
movsb
mov
in
sub
imul
and
cmp
mov
mov
testb
insb
jl
rclb
out
cltd
filds
movsl
fcmovne
repnz
mov
push
hlt
cmp
fldl
into
cld
fdivs
mov
icebp
popf
sub
sbb
or
out
mov
sarb
or
xor
add
mov
inc
aam
mov
adc
jbe
in
xlat
mov
sbb
xor
imul
mov
mov
push
pop
rclb
mov
fcompl
rolb
xor
je
dec
adc
jns
xchg
popa
cli
jg
in
outsl
inc
lahf
push
sub
std
inc
insl
cmpsb
push
daa
in
ror
ljmp
in
loope
mov
shrb
cmc
and
inc
scas
sub
jns,pn
add
ret
and
xchg
das
dec
sbb
cmp
xchg
loopne
push
stos
ja
xchg
arpl
inc
adc
shll
jne
jbe
sbb
sbb
out
xchg
addr16
test
xchg
dec
push
das
or
inc
nop
lcall
insl
movsl
push
orb
jp
fwait
lret
dec
cmpl
push
sbb
adc
jp
jp
fwait
xchg
xor
ds
orb
outsl
arpl
nop
in
nop
adc
push
xor
test
jge
dec
or
loopne
sbb
lock
xlat
leave
stc
jnp
mov
test
push
push
push
mov
mov
pop
out
clc
xchg
lock
in
fdivs
pop
push
mov
adc
aas
out
inc
mov
pop
xchg
stos
adc
movsl
inc
mov
out
sub
jbe
cmp
jge
cld
mov
in
pop
aas
sbb
or
inc
and
fildll
mov
mov
push
mov
adc
cmp
inc
inc
dec
inc
scas
adc
push
inc
pop
xchg
les
jmp
fwait
cmp
jl
data16
aaa
fadds
fisubrl
mov
fs
sti
adc
sbb
xchg
pop
daa
sub
pop
jo
adc
or
push
jbe
jmp
sub
jmp
stos
mov
inc
leavew
cmp
insl
or
cmp
push
push
push
mov
xorl
adc
push
stc
les
sub
adc
jl
popf
add
mov
push
xor
sub
mov
out
cld
stc
stc
add
repnz
lret
call
fcoms
adc
push
dec
fwait
jmp
adc
lds
cmp
fs
cmp
roll
push
ret
sbb
add
enter
in
jmp
repnz
outsl
popf
lret
jno
pusha
mov
jmp
push
sub
lret
loop
add
mov
sar
xor
jl
cmpl
ja
jmp
popf
cmpsl
out
lods
and
cmp
add
shrl
jecxz
lea
cmpsl
repnz
outsl
dec
pop
clc
mov
pop
std
das
mov
mov
aam
and
aad
cld
jnp
pop
cmp
xor
push
dec
mov
dec
loop
dec
inc
sub
sbb
or
mov
jbe
mov
js
mov
sahf
outsb
sub
pop
mov
sub
icebp
inc
and
idiv
jns
xor
clc
jb
mov
lock
ret
test
or
movsl
and
dec
lods
insl
jp
mov
jno
mov
ret
addr16
in
mov
mov
mov
nop
rcrl
jecxz
ljmp
add
pop
std
stc
sti
fistps
sbb
shrl
incb
leave
rorb
mov
sbb
sbb
aam
out
cmp
mov
hlt
mov
mov
jp
jmp
cmc
xchg
stc
lret
imul
scas
testl
lods
lcall
push
mov
pop
push
push
icebp
aaa
repnz
sti
mov
and
ja
jne
les
inc
push
dec
sub
leave
cmpb
fidivrs
int
inc
sub
lods
dec
xor
in
adc
add
add
in
ja
into
xchg
rolb
sub
fwait
sahf
xchg
cmp
test
mov
fs
push
xor
popa
cli
cmp
cmpsb
jo
sub
ds
pushf
xorb
mov
nop
xchg
cmp
fnstenv
xchg
cmp
add
add
mov
push
in
jg
jae
jg
lds
sub
sbb
insb
adcl
insl
out
aaa
adcb
fdiv
stos
mov
or
fs
outsb
imul
sbb
mov
bound
movsl
and
jbe
mov
or
das
or
lods
rcll
ljmp
hlt
idiv
push
idivb
lds
nop
insb
addr16
out
hlt
dec
fistpll
sbb
int
popf
jo
add
sub
mov
jle
lods
sbb
insb
lcall
stos
sbb
aas
or
xchg
repz
movb
mov
push
notl
movups
mov
xlat
and
lcall
jno
inc
mov
outsb
mov
push
sub
sub
leave
popf
sbb
cmp
mov
adcb
andl
cmpsb
imul
push
mov
jnp
mov
lahf
movsl
clc
repz
mov
aaa
sbb
xor
jo
scas
fbstp
mov
scas
sbb
mov
lret
jne
mov
mov
incl
cld
clc
filds
mov
insl
in
fidivrl
in
mov
or
sbb
or
icebp
popf
cltd
mov
pushf
or
sub
clc
nop
xchg
mov
xchg
mov
xchg
cs
mov
mov
or
test
jmp
jge
sub
cmc
push
xchg
aad
and
pop
dec
push
lret
ja
rcl
mov
fnstsw
mov
aaa
in
and
lods
sbb
je
iret
pop
mov
int
iret
or
pop
test
in
repz
or
push
imul
test
test
sbb
or
stos
pop
add
inc
lods
neg
dec
adc
gs
mov
jecxz
mov
filds
push
jl
daa
add
daa
loopne
adc
iret
pop
or
insl
push
jg
and
cli
xchg
loop
dec
and
mov
lret
push
mov
arpl
adc
ljmp
lcall
add
xchg
mov
ret
lcall
fidivrl
inc
cmp
cltd
adc
orb
mov
mov
pop
shlb
shlb
push
pop
sub
dec
push
xchg
mov
fnsave
mov
in
dec
xor
inc
xor
stos
push
gs
lahf
addb
mov
mov
jns
inc
insb
mov
sbb
sahf
xchg
loopne
xorb
cli
adc
pop
sbb
push
jo
mov
pop
fistl
mov
jmp
push
das
mov
xchg
pop
sub
stos
dec
lea
enter
mov
insb
adc
aam
ds
int3
ret
sbb
sbb
outsb
pop
and
cmp
int3
mov
sbb
push
loopne
dec
pop
outsl
xchg
jg
mov
leave
fcoms
sub
mov
rolb
inc
jle
fwait
aas
rol
mov
jnp
loop
int
jle
xor
mov
ljmp
sbb
push
sub
sbb
inc
fimuls
jl
xchg
pop
push
add
cmpsb
repz
or
in
int3
or
repz
aad
cmp
icebp
clc
mov
loop
clc
in
js
test
scas
mov
stos
sbb
xor
dec
dec
in
out
mov
cmpl
pop
and
hlt
clc
or
push
mov
pop
les
dec
sahf
mov
in
inc
data16
jmp
scas
push
je
pop
mov
mov
pusha
addr16
pop
imul
insb
ljmp
jmp
clc
mov
sbb
movsl
ret
mov
cmp
inc
mov
xorb
lret
dec
mov
outsl
testb
pop
movsl
arpl
or
std
mov
xor
mov
test
cmp
dec
rorl
movsl
loopne
or
xchg
jo
das
sahf
and
cwtl
test
mov
movsb
jno
and
cltd
gs
mov
push
cmpsl
or
call
lds
xchg
out
je
inc
cmp
mov
sbb
and
xlat
sub
jb
and
push
cmovle
mov
es
inc
sub
lahf
call
dec
int
into
data16
cltd
shrl
inc
pop
cltd
stc
ret
cbtw
addl
sti
mov
jo
inc
xchg
movsb
push
dec
jle
sbb
add
incb
std
push
inc
sahf
leave
int
add
lret
stos
push
push
pop
das
push
cs
stos
loope
cmp
cmpsl
pop
xchg
pushf
mov
stc
or
std
aam
mov
inc
icebp
push
clc
jbe
or
hlt
pop
pop
inc
int3
push
or
outsb
dec
add
mov
push
jmp
add
inc
jmp
popa
lret
jns
scas
dec
scas
rorb
clc
aaa
xchg
aad
mov
jnp
test
popa
mov
out
jp
mov
adc
dec
push
addr16
stc
decl
pop
sbb
shlb
cli
clc
andl
test
sub
insb
mov
mov
arpl
ficoml
test
cld
push
ret
cmp
and
repnz
cli
cltd
movsb
adcb
xchg
cmp
push
xchg
inc
lret
jp
sahf
pop
or
out
sub
nop
stc
dec
iret
mov
addr16
pop
mov
cmp
stc
xorl
clc
fimuls
push
rorl
pop
in
jg
enter
xor
pop
popa
fwait
cli
repz
cld
arpl
bound
fs
and
and
push
add
sub
addb
sub
int3
sahf
in
inc
add
js
das
lds
cmpsb
out
ljmp
cwtl
xchg
icebp
mov
arpl
push
add
popa
mov
ljmp
out
xchg
jnp
sbb
pop
cmp
lock
sbb
inc
and
jne
cmp
rcrb
push
popf
in
jb
lahf
inc
pushf
pop
outsb
std
insb
sub
cwtl
cli
in
mov
sbb
sub
mov
aaa
pop
test
pop
jp
adc
mov
jl
pop
mov
mov
in
dec
jle
xchg
sub
inc
jle
outsl
jb
lock
push
or
cmp
mov
shrl
sbb
outsl
dec
in
add
imul
rcrb
movl
in
in
xbegin
fmuls
inc
cmpsl
cmp
pop
sbb
inc
insb
inc
int
movsb
loope
fdivs
mov
movl
sub
shlb
xor
push
mov
lcall
add
addr16
xor
xchg
mov
fs
mov
jge
fldt
mov
or
xor
push
outsb
ljmp
pusha
test
sbb
nop
lock
cltd
jne
movsl
aad
ret
sbb
and
movsl
inc
movsl
js
dec
pop
mov
inc
lods
mov
push
repnz
or
fucomi
out
jo
add
mov
jns
lea
das
mov
loopne
and
cmp
mov
out
jle
sbb
imul
loopne
sti
inc
inc
dec
pop
push
xchg
pop
xor
dec
xor
sub
push
nop
test
clc
push
negl
daa
mov
test
out
cmp
loop
fsubrl
pop
sub
xor
push
rorl
das
push
leave
mov
cmp
das
sub
pop
or
push
in
jmp
mov
fimull
adc
sub
pop
inc
pusha
sub
lcall
cli
fcomps
xchg
jecxz
cmpl
ljmp
int3
dec
pop
sub
cmp
mov
imul
arpl
mov
pop
bound
or
or
jmp
in
jb
xchg
gs
js
adc
aaa
cmp
mov
sbb
imul
pop
push
cmp
pop
mov
cmp
xchg
sbb
shrb
iret
shrl
adc
scas
ret
icebp
dec
in
mov
mov
xlat
cld
jae
andl
adcb
shlb
adc
jge
push
fcmovu
aaa
xor
xorb
push
sub
pushf
xchg
pop
cs
sti
mov
lret
dec
lods
jmp
out
sbb
dec
push
lock
mov
pop
mov
enter
add
adc
or
fstps
lock
jmp
ret
lret
ja
pop
icebp
imul
shl
or
push
cmp
ljmp
cmpsb
fisttpl
fstpt
orb
test
ret
rcrb
into
outsb
orb
shl
inc
out
mov
out
mov
ja
ds
movsb
leave
xchg
pusha
cmp
add
xchg
shl
dec
mov
xchg
int3
scas
imul
lods
adc
and
cmp
aaa
jno
jne
mov
push
andl
pushf
jbe
lock
insb
outsl
dec
jge
pop
lcall
push
movsb
jecxz
cld
fucomp
or
gs
mov
mov
ja
pusha
je
inc
in
aad
shll
imul
inc
pop
outsb
imul
call
icebp
repz
scas
imul
add
stos
cmpsl
repz
loop
sbb
gs
aam
sti
popf
or
in
aam
mov
add
pop
jno
stos
movsb
les
cwtl
cmpsl
xchg
cmp
cmp
ret
fs
pop
or
aaa
pop
xchg
inc
adc
inc
lahf
cltd
arpl
cmp
sbb
pop
adc
data16
add
or
pop
mov
aam
in
cmp
add
mov
notb
add
stos
xchg
repz
jbe
jle
mov
popa
dec
add
hlt
aad
jno
mov
test
faddl
xchg
jae
sarb
mov
mov
sbb
add
addl
or
stos
dec
faddl
push
imul
add
or
ja
adc
nop
fwait
jno
sbb
mov
imul
dec
fisttps
add
test
nop
fwait
dec
inc
mov
ret
mov
push
idivb
ds
add
lret
das
pop
mov
mov
jb
ljmp
cmp
pop
into
sbbl
xchg
in
jnp
mov
push
adc
xchg
into
jo
or
out
dec
add
jmp
add
sbb
fisttpll
inc
jge
pop
and
push
mov
pop
jo
xchg
enter
xchg
inc
push
sub
sub
fstps
out
dec
push
out
movsl
mov
mov
pop
xor
popf
imul
push
mov
movsl
pop
add
xor
sbb
push
insl
pop
loope
std
and
faddl
jns
sub
xor
xabort
sub
inc
xchg
fsubrs
int3
adc
movsl
xchg
sysexit
aam
shlb
gs
cmc
inc
stos
test
mov
pop
cmp
jno
sbb
cmp
inc
inc
insl
mov
ror
sbb
dec
int
adc
push
frstor
mov
pop
sahf
rorl
out
mov
mov
sub
or
add
xchg
mov
loop
sbb
dec
sub
mov
lahf
add
add
inc
inc
lret
xchg
fcmovnbe
or
stc
or
and
bound
xchg
out
push
fmuls
jge
pop
bound
ja
jbe
stos
pop
pop
inc
push
je
push
sub
inc
aas
out
aam
test
push
dec
lcall
into
cmp
movsb
or
lods
adc
int
rcrb
mov
inc
lea
or
aad
ss
push
mov
sarl
divb
push
sub
pop
add
cmp
adcb
xlat
sbb
and
jle
lcall
clc
fisubl
nop
lahf
dec
jl
or
lahf
dec
mov
push
and
xchg
fucom
mov
sub
adc
out
movsl
mov
lods
mov
or
lea
or
jo
std
adc
shrl
dec
xor
mov
jecxz
inc
mov
dec
xchg
lods
jb
xbegin
pop
lret
sbb
lock
fldz
scas
lcall
popf
insb
fwait
lock
pusha
push
nop
bound
lret
pop
orl
scas
popa
gs
cmp
push
xchg
sub
fwait
xchg
sub
adc
pop
cmp
iret
shll
test
lock
aad
sub
add
xchg
ds
arpl
fisubl
pop
cmp
mov
mov
jbe
pop
into
cmc
mov
xchg
pop
adc
loopne
pop
fwait
sti
insb
push
sub
std
push
mov
jmp
lock
push
xchg
aaa
xchg
push
mov
push
push
movsl
call
vpsllw
push
sub
das
mov
sub
insl
stos
repz
sbb
pop
lret
push
xchg
and
stos
popa
adc
pop
mov
test
mov
inc
pop
cmp
add
adc
lods
xchg
idivl
mov
in
inc
fcoml
or
out
sub
dec
inc
mov
push
les
fsubs
push
pop
cmp
dec
fmuls
jne
mov
sub
pop
add
out
repz
xor
xlat
mov
cmp
mov
rcr
push
and
xor
add
push
out
out
jge
adc
lds
add
lcall
test
mov
rcr
movsl
fimull
daa
je
jp
shl
jmp
mov
cmp
inc
cmp
mov
stc
jnp
lock
pop
add
lock
movsl
addr16
aad
out
push
and
push
jl
cld
cltd
mov
jb
sarl
popa
out
mov
xchg
inc
and
ret
pop
je
mov
sbb
cmp
jecxz
cli
imul
xchg
add
xchg
jne
cld
test
pop
jl
pushf
sub
push
mov
jp
bound
leave
cs
adc
rcrl
push
inc
mulb
xchg
enter
cmp
inc
hlt
pop
mov
rorb
loop
jge
mov
pop
mov
add
jle
xchg
pop
or
sbb
dec
adc
out
hlt
outsl
and
xchg
and
fidivrl
sbb
pop
pop
and
mov
mov
std
add
pop
adc
stc
dec
mov
ret
cmpb
inc
dec
cmp
push
cmp
bound
stos
jbe
daa
ljmp
stos
push
shrl
pop
mov
and
push
loop
and
roll
insl
jle
adc
shlb
pop
stos
cmpsb
or
dec
dec
dec
pop
shr
cmc
andl
fidivl
addr16
shl
test
ljmp
cmp
jg
aad
loop
arpl
dec
mov
jbe
jge
stc
pushf
push
shll
mov
fcomps
mov
mov
ljmp
cld
enter
fstpt
push
nop
add
shll
inc
mov
popa
sti
orl
jne
lahf
mov
dec
inc
inc
lcall
ret
stc
cmp
ret
inc
cs
dec
cmp
aam
xchg
dec
lods
test
sbb
or
xor
sbb
jg
cmpsb
xlat
lods
or
test
xchg
rcr
sbb
mov
in
mov
shlb
mov
mulb
jo
or
inc
aas
es
sub
mov
push
icebp
lea
pavgb
filds
sbb
repz
push
pop
mov
sub
scas
insb
push
fadds
push
mov
shrb
pop
mov
aam
jnp
out
mov
mov
mov
jg
lcall
inc
inc
mov
icebp
lds
pop
push
enter
mov
repz
fcomps
push
lret
mov
cmpsl
jp
add
addr16
adc
add
shll
and
sub
and
lret
inc
js
xchg
in
cmp
sub
cmp
cmp
pop
fistpll
clc
and
sub
jmp
fwait
mov
and
int3
cmpsl
movsl
popf
sti
mov
in
sub
mov
xor
mov
mov
fisttpl
scas
mov
rorb
std
repz
jp
xchg
mov
mov
push
sbb
sbb
lret
xlat
adc
inc
mov
mov
add
jl
dec
mov
xor
xor
push
dec
jno
sti
and
jl
inc
jg
xadd
out
cmp
cld
adc
sbb
inc
rcll
jb
or
pushf
imul
inc
fldcw
dec
daa
clc
add
push
dec
int3
enter
and
out
je
lea
dec
adc
test
aas
les
pop
xor
mov
sbb
xchg
mov
test
shr
add
out
xor
int3
push
pop
cs
inc
mov
mov
sub
scas
mov
xor
test
cmpsb
jmp
sub
push
push
aaa
cmp
in
push
in
cmp
xor
dec
cmp
mov
in
add
lods
inc
sbb
gs
aas
movsl
or
pop
xchg
push
inc
into
sub
cmpsb
sbb
dec
cs
cmp
dec
loope
pop
leave
dec
icebp
and
xchg
out
xchg
nop
dec
mov
sub
icebp
sub
shr
cmp
jle
lcall
cmp
adc
stos
aad
xchg
adc
out
inc
fwait
loope
cwtl
sub
add
push
mov
rcrb
incl
sub
mov
push
or
push
fsubs
int
gs
loope
cmpsb
stc
inc
or
lcall
incb
stos
pop
pop
cs
mov
outsb
wbinvd
je
cmpsb
cwtl
lods
add
jecxz
xor
xchg
xor
cmp
mov
ret
xchg
pop
or
lea
shlb
outsl
inc
popa
sbb
ja
lea
and
call
dec
aam
scas
xor
jmp
pop
mov
jmp
dec
xor
sub
push
fmuls
dec
add
sti
in
sbb
data16
rorl
jmp
push
sub
cmpsl
daa
movsb
mov
mov
push
adc
mov
fnstcw
mov
in
jnp
call
ffreep
popf
ss
mov
add
or
pop
add
inc
pusha
and
imul
xor
repz
cmpps
sbb
sbb
es
cmpsl
scas
push
push
les
ds
sbb
xor
movsb
lcall
nop
mov
cmpsl
cli
inc
push
in
ret
sarb
inc
and
ja
pusha
fisubs
mov
inc
and
outsl
push
inc
xlat
pop
ds
and
mov
add
testl
xor
sub
push
push
fstpt
bound
adc
cmpsb
push
mov
inc
or
mov
mov
cmp
out
jle
loop
jecxz
sub
js
jae
cmp
fmuls
loop
mov
inc
movsb
shl
cmp
rcr
popa
mov
mov
pop
jg
nop
mov
pop
es
xchg
rorb
daa
in
out
inc
mov
jno
jno
adc
jno
movsb
sbb
rcrb
ss
bound
jmp
adc
in
lret
xchg
xor
or
fnstcw
movsb
dec
pushf
fstpt
mov
mov
adc
lcall
xor
loope
mov
fs
int
addr16
push
sub
pop
fnstenv
mov
ja
xchg
dec
aam
xor
mov
jge
dec
mov
cmp
adc
xor
je
add
pusha
pop
adc
add
loopne
push
aad
xlat
inc
cmp
leave
loop
push
fdivrl
sub
jmp
and
int
test
mov
jle
das
lds
push
movsl
add
mov
imul
pop
test
push
mov
pop
adc
add
rolb
pop
cmp
lcall
dec
jns
mov
call
and
xchg
add
iret
sbb
stos
sti
jno
xor
cmp
mov
jmp
cmp
rolb
dec
jb
xchg
inc
fstpl
ljmp
mov
mov
lahf
push
and
fldcw
cmp
sub
lods
mov
insb
mov
sbb
loope
out
mov
das
loopne
mov
bound
bound
dec
and
in
psubusb
add
xor
mov
stos
loopne
ljmp
lea
ja
adc
fcomps
cmp
cmp
add
dec
adc
xor
sti
cmc
cli
mov
xchg
test
or
scas
mov
mov
scas
and
inc
cmc
gs
fcmovu
sub
aam
jo
xchg
loopne
add
xor
mov
push
cs
loop
es
mov
sbb
mov
gs
imul
pushf
pop
add
sbb
jb
xchg
push
pop
add
jp
push
mov
sub
lret
into
mov
mov
insl
pop
adc
loopne
shll
std
cmc
adc
inc
push
int3
lds
xor
and
mov
push
leave
or
lods
xor
jae
and
ret
sarb
lods
push
int
xchg
or
fbstp
pop
inc
es
mov
test
cmp
mov
andb
out
ds
js
in
sbb
and
sahf
or
mov
pop
test
popa
push
xor
imul
cmc
sub
sbb
outsl
lods
push
lock
sub
imul
xchg
xchg
sbb
xor
jmp
push
cld
sub
lahf
out
les
inc
push
mov
push
dec
pop
add
pop
xor
xchg
mov
scas
lret
imul
xor
stc
add
mov
ret
or
mov
mov
mov
xchg
in
fistpl
sbb
jnp
sub
cmpsl
out
inc
fimuls
adc
push
pop
push
push
fcomps
fwait
shrb
dec
mov
mov
sti
outsl
pop
sti
cmc
pop
sbb
into
xchg
and
dec
ret
bound
sbb
lret
sub
pop
push
mov
pop
mov
das
mov
stc
xchg
bound
dec
bound
push
dec
dec
sbb
test
sub
inc
jo
jg
mov
fwait
scas
jg
pop
push
into
dec
sti
outsl
mov
adc
out
shrb
inc
jns
jl
push
or
orb
dec
lods
mov
xor
into
push
mov
in
inc
push
push
push
std
jne
lcall
lods
insl
push
cmp
in
in
cmp
push
mov
clc
sbb
test
loope
jb
fldenv
and
gs
xor
add
dec
mov
push
sahf
call
ja
test
clc
cmp
in
jg
inc
lret
and
cmp
xlat
and
unpckhps
inc
decl
dec
imul
push
jbe
insl
flds
inc
add
xchg
adc
lcall
fbld
clc
idiv
pop
pop
int
test
or
xchg
pop
stos
push
pop
cmpsb
notl
pop
movsl
mov
cld
xchg
pop
pop
mov
icebp
lret
mov
stos
test
sbb
enter
jnp
testb
aas
mov
stos
bound
leave
loope,pn
jecxz
test
push
sbb
data16
enter
sub
sbb
jp
ret
xorb
or
inc
and
xchg
cmp
rcrl
movsl
pop
mov
fs
dec
pop
add
shrb
sub
sbb
mov
sbb
ret
imul
gs
int
iret
fxch
notl
dec
fsubl
sbb
jp
frstor
jb
inc
or
mov
cltd
jmp
mov
adc
clc
jae
test
inc
cmc
data16
popa
das
sti
push
push
les
fisubl
cwtl
mov
imul
pop
fistps
jo
aad
leave
adc
fstl
cmp
in
push
fbld
int
mov
loope
cmpsb
add
mov
out
adc
mov
adc
and
and
xchg
push
lods
ret
aad
stos
cmc
iret
outsl
loopne
xorb
and
push
jnp
iret
adc
out
or
adc
scas
pop
idiv
push
adc
push
imul
pop
cmp
test
cltd
popf
xor
stos
mov
xchg
xchg
cmp
and
jmp
loope
and
enter
sub
jg
sbb
dec
cmp
scas
test
cmp
cmpsb
ret
roll
cmp
pop
cmp
or
xchg
inc
imul
in
xchg
push
and
mov
add
fcompl
lods
push
adc
fcompl
js
cli
test
das
insl
cmp
mov
lods
sti
or
sbb
lods
addl
push
aad
hlt
lea
test
test
pop
dec
xor
out
stos
aas
jno
rcrl
mov
xchg
xchg
inc
fs
mov
push
mov
fwait
into
leave
xchg
insl
mov
xchg
inc
cli
cltd
jmp
aaa
pop
push
jnp
idivb
add
fisttps
mov
popa
sub
and
enterw
jle
push
push
jne
cmpsb
cmc
int
add
ljmp
pop
popa
lcall
popf
push
inc
jmp
ret
lret
mov
and
fsubp
cs
jo
movsl
inc
add
jno
enter
nop
and
push
mov
outsl
sub
inc
cmp
cld
sbb
stos
inc
sub
push
mov
xor
or
mov
adc
sarl
imul
xor
and
test
je
gs
lahf
jl
mov
icebp
daa
mov
xor
aaa
mov
dec
push
cmp
xor
fwait
mov
sbb
popa
std
addb
iret
les
pop
mov
jl
push
mov
jns
mov
loope
push
mov
inc
lock
xor
das
dec
or
test
outsl
jg
mov
xor
mov
adc
test
cli
dec
int
jecxz
movsl
movsb
or
jp
add
cmp
xor
xchg
mov
adc
in
jle
das
add
je
testl
movsb
cmpsb
sub
inc
movsl
orb
call
sbb
bound
xlat
repnz
adc
add
adc
int3
push
or
loope
movb
cmpsl
test
pop
aad
arpl
popf
aam
lcall
pop
jae
mov
cmp
les
jo
sar
test
in
pop
push
fadds
cmp
xchg
mov
arpl
inc
test
lret
xchg
frstor
xor
fs
mov
cmp
adc
bound
loopne
xchg
jle
pop
faddp
and
dec
jnp
insb
lods
cltd
sti
arpl
adcb
mov
or
jmp
shrl
add
in
sub
mov
jmp
mov
xchg
xor
adc
push
or
dec
and
mov
sahf
bound
xchg
fsubrs
mov
cmpsb
and
lret
push
sub
push
loope
mov
shrb
lock
gs
xor
sub
and
or
mov
add
jecxz
and
jmp
pop
push
dec
add
gs
in
mov
xor
add
iret
sarb
push
faddl
jae
lahf
jae
sub
lahf
jb
fsubrs
stos
imul
cbtw
out
inc
cmc
xchg
mov
cmpsb
mov
stc
add
sbb
xchg
mov
xor
xor
lock
enter
push
inc
movsl
cwtl
pop
pop
jle
jnp
stc
mov
dec
jle
jle
mov
xor
mov
jns
imul
sbb
rcl
das
xchg
mov
dec
mov
divps
dec
dec
mov
mov
nop
cmc
loopne
push
lea
jp
shll
hlt
arpl
arpl
daa
sti
or
xor
je
mov
jg
adc
lods
jecxz
inc
ljmp
jno
pop
jg
and
jno
push
rorl
add
pop
dec
cmp
jmp
mov
add
imul
inc
sub
std
loope
adc
das
aas
push
xchg
and
fisubrl
jge
ss
push
out
mov
mov
cli
repnz
sbb
jb
mov
and
cwtl
ss
adc
bound
jb
insb
mov
add
hlt
lds
mov
cmpb
and
lds
test
push
rcl
in
pop
fucomp
or
repz
inc
fldt
dec
lahf
hlt
mov
clc
mov
repz
subb
out
sbb
mov
fidivs
inc
decl
sub
xlat
stc
mov
imul
dec
dec
call
aam
and
lods
dec
test
jp
rorl
xor
ds
cmpsb
cmpsw
xchg
dec
mov
mov
cmp
out
pop
push
arpl
aad
out
push
cmpb
cmp
inc
push
adc
sub
clc
mov
sub
iret
das
rcr
push
inc
adc
mov
hlt
mov
jnp
jle
sub
dec
inc
pop
dec
imul
aad
adc
jbe
mov
cmp
cli
test
data16
and
ret
dec
jecxz
cmpsl
ds
pushf
lret
inc
scas
cwtl
sti
and
sbb
js
fisubrs
ds
cmp
mov
mov
pcmpgtd
push
push
roll
xor
mov
fcoml
popf
jmp
in
nop
lcall
jl
test
add
xor
movsl
and
mov
jae
in
mov
sbb
hlt
les
mov
mov
ljmp
mov
test
daa
or
ret
push
rep
push
adc
pop
jbe
jp
xor
shr
pop
mov
pop
jns
out
xor
stc
or
popf
sub
fldt
xchg
inc
std
mov
sub
push
lret
js
adc
arpl
mull
xor
adc
stc
push
mov
xor
inc
xchg
mov
imull
add
dec
or
in
ror
cli
add
cmpsb
or
and
mov
and
push
adc
ja
pushl
push
xchg
adc
mov
jp
inc
stc
jg
negl
push
popf
enter
cmp
cli
sbb
or
push
test
and
cmp
cmp
fdivl
pop
cltd
fisttpll
add
lods
or
ja
xor
sub
jo
xlat
inc
xchg
repz
xlat
adc
movsb
loope
add
cltd
mov
ret
xor
cmc
shl
adcb
adc
rclb
arpl
loopne
mov
fistps
pop
xchg
roll
cld
inc
sbb
push
cli
add
xor
out
popa
sti
mov
movsb
outsb
mov
incl
push
dec
dec
jo
imul
test
pushf
test
lds
imul
popf
xor
or
loopne
je
cld
orl
jb
cmc
xchg
es
in
xor
es
push
bnd
add
jbe
adc
pusha
insl
iret
sub
mov
inc
or
sbb
in
sbb
imul
add
jp
or
jae
push
sub
mov
into
dec
xor
adc
dec
xchg
jg
inc
push
mov
les
lahf
fisubl
in
sbb
mov
jge
mov
int
enter
jge
push
adc
andb
out
dec
les
dec
call
jno
inc
int
pop
cmpsb
mov
add
sarb
icebp
int
or
add
pop
jns
hlt
xchg
cmp
loop
ljmp
inc
pop
lods
stos
imul
rcrl
jae
decb
cmp
pop
jae
mov
in
jnp
mov
lret
sub
inc
test
inc
loope
nop
lcall
std
icebp
fsubrs
push
aas
rorl
inc
neg
add
shlb
mov
or
xor
loope
sbb
ret
fnsave
xor
loopne
fmulp
gs
pop
fnstsw
in
int
dec
inc
jl
fistl
jns
xchg
pop
or
jne
mov
mov
pop
sbb
xor
das
sbb
sahf
dec
jp
push
xchg
es
dec
pusha
jmp
mov
jg
in
in
jno
lods
dec
outsb
lods
js
inc
sarb
mov
pop
mov
add
mov
aaa
fs
inc
ja
cld
andb
push
rclb
push
loop
xchg
cmp
jne
dec
int
lcall
cld
and
inc
adc
imul
mov
pop
push
add
xor
imul
xlat
mov
mov
add
test
rorl
aam
push
sub
and
jae
clc
fidivl
cwtl
jns
and
sbb
cli
je
icebp
ja
or
clc
xor
shrb
movsb
mov
dec
and
dec
mov
mov
lret
dec
xchg
in
in
jle
and
insl
push
aad
mov
jge
mov
arpl
mov
jge
lahf
dec
dec
xor
in
push
pusha
jae
adcb
in
jbe
out
sub
jae
xor
aad
outsl
pop
cmp
jb
rcrl
sbb
pop
dec
orl
xor
sbb
adc
lods
sub
shlb
sti
xchg
pop
dec
flds
repnz
stc
addr16
shl
mov
cmp
jge
cmp
jg
arpl
in
inc
xchg
icebp
fiaddl
out
mov
sbb
out
or
dec
mov
das
in
outsl
pop
cmpsl
lret
mov
pop
data16
or
test
hlt
xor
push
pop
jle
and
bound
mov
jb
mov
and
test
adc
adc
cmp
std
movsb
sbb
mov
mov
pop
fs
ds
add
outsl
insl
or
sbb
test
mov
ret
jmp
out
pop
aas
sub
mov
pop
vorpd
cmp
cmp
stc
push
mov
stc
lods
xor
push
fs
fldenv
cltd
pop
push
sbb
lds
movsl
ja
and
mov
xchg
jge
pop
pop
add
aas
cmpb
dec
pop
mov
loopne
jns
push
or
jg
nop
dec
shrb
mov
icebp
paddsw
shll
or
shl
or
dec
dec
push
sar
xchg
rcrb
in
xchg
sub
dec
cmpsb
adc
and
stos
pop
dec
mov
cmp
pop
leave
xchg
dec
jge
xchg
or
xchg
pop
cmp
cmpb
or
dec
jnp
adc
mov
dec
popf
test
mov
repnz
aaa
push
fwait
lock
sub
xchg
mov
sub
mov
sbb
fdivp
fsqrt
into
stos
or
xchg
fiadds
scas
xchg
scas
push
les
mov
scas
jo
test
lahf
cwtl
enter
xchg
sbb
pushf
mov
xchg
or
sbb
xorl
pop
imul
popa
mov
mov
inc
cmp
movsl
xor
lock
pop
daa
xchg
pop
js
aad
jne
mov
mov
pushf
adc
negb
das
mov
je
dec
cmp
push
mov
mov
in
lret
gs
imul
sub
cmp
jo
push
pop
rcrb
sbb
mov
js
dec
and
pop
aad
push
cmp
add
sbb
cld
fstps
mov
or
loopne
sub
rcl
movsb
loop
cmc
subl
jns
inc
iret
cwtl
mov
push
fwait
outsb
js
cli
nop
sahf
std
into
inc
dec
and
push
in
cltd
mov
nop
out
imulb
into
sti
push
mov
mov
adc
ljmp
dec
mov
xchg
ljmp
lods
or
ret
ds
sbb
xchg
jp
xchg
and
and
arpl
xchg
cmp
pop
rolb
jae
ds
xor
mov
xchg
sub
leave
sbb
cli
test
mov
mov
sub
mov
add
pop
imul
dec
imull
mov
mov
and
enter
cmp
fsubp
bound
ret
outsl
inc
shll
repz
xorb
ja
icebp
push
jge
mov
mov
sub
mov
mov
xor
mov
movsb
mov
movsl
mov
es
sub
jecxz
imul
xchg
mov
xchg
pusha
ljmp
std
and
repz
das
das
add
ret
mov
lods
xchg
iret
jae
dec
test
push
mov
imul
xor
data16
test
xchg
mov
in
mov
push
push
insl
mov
jno
enter
imulb
mov
jmp
xorl
rol
mov
or
fwait
out
aam
pop
aaa
test
sti
inc
lock
xchg
jns
int3
pushw
mov
xchg
clc
inc
sbb
shlb
sbb
je
mov
jns
push
ds
rclb
jnp
hlt
cld
fistpl
inc
push
fcmove
push
iret
cmp
rcrb
jno
cltd
es
inc
and
adc
cmp
push
in
or
ret
jmp
test
push
dec
jle
mov
repz
imul
lods
xor
inc
arpl
and
xchg
mov
or
cmpsl
rcrl
int3
adcb
sbb
test
dec
mov
mov
or
inc
fisttps
add
and
aaa
jnp
rcl
stos
mov
dec
jo
filds
push
shlb
test
sarb
flds
repz
xor
pop
adc
jnp
sbb
pop
fcomps
mov
push
add
add
jmp
xlat
push
mov
sub
push
in
xchg
mov
push
add
ljmp
ja
dec
mov
test
jns
mov
sti
test
lret
xchg
cwtl
and
or
cmpsb
xchg
mull
lock
popf
mov
or
loope
dec
movsl
fbstp
sbb
inc
xor
push
mov
sti
inc
inc
stc
mov
sahf
jge
cmc
cltd
cmp
gs
repnz
dec
xchg
xor
adc
adc
sub
inc
jae
imul
or
xor
pushf
ljmp
jmp
adc
jmp
sub
sarb
cmp
mov
stc
add
out
mov
adcl
and
je
xchg
popa
gs
sbb
mov
pop
xchg
scas
mov
adc
in
pop
inc
pop
push
dec
lahf
sub
into
dec
cmpsb
mov
mov
lcall
xor
mov
xlat
lahf
aam
std
cmpsb
es
xchg
ret
jno
popf
loopne
jbe
add
xor
sub
out
lock
inc
push
stc
mov
add
test
dec
in
in
or
xlat
push
sbb
fwait
int
lods
fnclex
add
into
dec
sub
js
sbb
push
push
mov
adc
pop
js
mov
push
cli
fwait
adc
ret
sub
out
repnz
enter
dec
pushf
jge
adc
xor
xor
aaa
lahf
imul
repnz
adc
xlat
in
adc
and
mov
aaa
fsub
in
and
roll
aad
out
outsl
aad
bound
pop
lcall
cs
lods
outsl
cmp
aad
mov
into
xor
jnp
sub
push
mov
sbb
je
fisubl
lods
hlt
ljmp
rcr
pusha
fsubs
out
cmp
push
pop
sbb
inc
insb
jp
lods
or
lahf
rol
pop
xor
add
sub
mov
dec
cmp
sub
and
push
clc
bound
adc
push
test
sbb
xor
repz
add
pop
xchg
sub
jno
sarl
flds
mov
inc
mov
cmp
push
mov
lock
lret
in
jecxz
lock
xor
xor
mov
sub
dec
mov
lods
fisubrl
cmc
mov
sbb
scas
pop
xlat
xor
leave
cmc
out
out
arpl
sbb
push
dec
movl
scas
ljmp
or
dec
in
nop
push
jno
adc
xor
or
imul
xor
pusha
sahf
bound
ret
inc
xchg
jb
mov
jns
lods
sbb
orb
je
xchg
inc
cmp
pop
adc
stos
pop
inc
jle
xchg
inc
sbb
test
movsb
mov
mov
test
inc
loope
fsubrs
in
dec
mov
subb
out
dec
fldpi
xlat
pop
sbbb
add
mov
mov
or
or
push
jb
xchg
iret
fs
andl
repnz
jp
dec
sar
cmp
aaa
or
out
dec
fimull
push
mov
mov
scas
sbb
and
sti
fnsave
inc
jbe
add
mov
mov
inc
and
mov
jnp
ds
sbb
cli
cmp
cmpsb
cs
lods
or
fwait
xchg
jecxz
aaa
enter
jno
and
or
pop
lea
cmp
mov
movsb
push
xor
test
mov
push
inc
jae
mov
mov
mov
orl
sbb
imul
pusha
cmp
bnd
cmp
inc
add
movb
jge
lret
scas
notb
out
out
xchg
cmpsb
or
scas
mov
adc
arpl
push
or
popl
mov
xor
mov
addl
gs
imull
jo
and
je
add
stc
flds
sub
inc
jo
cmp
negl
xlat
inc
daa
idivl
mov
scas
outsb
mov
sub
lcall
fcoml
push
pop
ret
test
inc
mov
pop
lret
inc
addl
dec
outsb
xor
pavgw
icebp
sti
cmpsl
pop
sub
push
ljmp
lock
mov
fistpl
subb
sahf
fwait
cmpsl
lea
clc
mov
sbb
mov
popa
je
hlt
sahf
rcrl
cmpb
insb
test
xor
popf
lahf
jecxz
in
adc
out
mov
sub
adc
push
movsl
cmpsb
xchg
jne
popa
pop
push
sub
enter
and
sbb
fldt
xchg
out
scas
jno
daa
cmpsb
push
pop
dec
xchg
mov
outsb
adc
cmp
or
xor
mov
xor
fimull
insl
in
hlt
clc
or
mov
lcall
aam
xor
testb
icebp
movsb
call
repnz
stos
pop
cmp
int
test
loope
aaa
add
mov
imull
sub
icebp
data16
pop
xor
jns
pop
cwtl
push
push
push
pop
xchg
icebp
mov
popa
xchg
rclb
insl
pop
es
jmp
mov
add
jo
mov
outsb
fisubrl
sbb
out
cs
dec
push
int
mov
fildll
cmp
cli
xor
pushf
call
enter
inc
flds
pop
nop
push
jne
jnp
or
adc
cmpsb
fisubrl
repnz
jno
jl
rcll
testb
fnstcw
ljmp
mov
mov
lahf
push
in
es
daa
sub
jns
in
xchg
lea
jecxz
das
or
xchg
mov
mov
mov
or
xlat
mov
mov
in
outsl
mov
gs
outsl
dec
cs
loop
xchg
inc
fs
xor
test
icebp
fidivl
add
fimuls
sub
js
dec
pop
mov
lock
stos
xor
sub
add
enter
cli
sti
test
call
cmp
push
mov
xchg
jge
xor
sbb
sbb
scas
cmpsb
in
pop
sub
dec
aas
mov
jg
pop
push
xchg
inc
xchg
push
fwait
sbb
pop
mov
popf
mov
aad
jbe
mov
mov
out
or
int3
mov
dec
scas
mov
inc
int3
fcompl
adc
sbb
fdiv
fisttps
out
in
ret
jnp
cmc
pushf
subl
cmp
push
lret
mov
push
pop
repnz
sbb
in
shrb
mov
repnz
imulb
sti
insb
cmpsl
xor
push
adc
popf
and
add
mov
leave
mov
adcl
stos
sbb
pushf
mov
lret
sbb
or
into
xchg
lahf
aad
int
jo
outsl
pop
push
out
dec
lds
jecxz
leave
aad
cli
adc
enter
inc
fldcw
jmp
js
pop
ss
das
cmp
cwtl
xchg
fcomps
cmp
push
fwait
xor
xchg
outsb
inc
dec
lcall
rcrl
sahf
les
jl
mov
fucom
dec
xor
mov
dec
sbb
cmp
ljmp
fisttpll
xor
addr16
cs
cmpsb
fs
sahf
push
addb
stos
or
or
and
rcll
mov
enter
and
js
test
xchg
and
ljmp
nop
lcall
iret
jb
movl
and
insl
imul
insb
repnz
dec
pop
das
dec
ds
ret
inc
fcmovbe
push
mov
lret
sub
das
sub
jb
or
xor
cmp
mov
pop
mov
out
or
xchg
or
inc
test
decb
xchg
or
mov
mov
fiadds
scas
jge
dec
sub
and
stos
repz
sarl
insb
push
fstpl
mov
push
mov
xor
mov
inc
push
cmp
or
jne
out
inc
mov
mov
popa
rorl
mov
push
test
add
inc
clc
cli
cmp
cmpsl
mov
into
sub
popa
daa
jmp
mov
xchg
pop
lcall
pop
push
in
sub
pop
push
dec
divb
lret
inc
pop
icebp
not
adc
push
adc
sub
or
mov
fwait
dec
mov
push
push
dec
movsb
ss
lods
cmp
adc
dec
dec
movsb
mov
jle
leave
mov
dec
dec
jge
jne
mov
popw
sub
sti
mov
jns
xor
and
cmpb
and
repnz
shl
xor
out
push
das
xlat
push
jb
repnz
loopne
cmp
jecxz
sub
hlt
out
fnstcw
cmpsl
dec
and
rcll
mull
add
fs
shlb
mov
jmp
xchg
adc
jnp
ret
std
fs
shl
bound
push
inc
mov
into
add
enter
and
push
xor
mov
fistps
xor
std
js
push
inc
cmc
shlb
out
or
aas
lods
inc
rclb
inc
pushl
test
arpl
call
push
es
push
clc
ss
in
jmp
mov
cwtl
leave
push
pop
in
sub
lods
and
addr16
into
sbb
or
movsl
adc
inc
movsb
outsb
repz
mov
aas
stos
mov
pop
mov
push
mov
je
jno
test
push
pushf
adc
dec
cld
frstor
cmpb
sub
lahf
inc
cmpsb
and
test
xor
in
sbb
push
mov
lods
pusha
je
dec
fbld
test
jnp
xchg
xchg
xchg
fld
outsb
ror
imul
sbb
in
loope
daa
add
mov
test
aam
ret
dec
mov
mov
es
mov
push
nop
add
jae
adc
cmc
jae
cmpsl
aas
jbe
mov
in
mov
outsl
push
pop
xor
in
mov
inc
mov
xchg
xchg
push
fldt
das
dec
mov
std
outsb
aad
add
push
pop
push
pop
lock
pop
mov
or
pop
enter
into
inc
jae
repnz
pop
std
inc
sti
mov
and
lods
sarl
mov
ja
xor
fsubrs
or
daa
add
bnd
inc
imulb
mov
pusha
lods
lahf
loopne
jno
sbb
cmp
cld
add
in
stos
jl
or
loopne
cmpb
cld
inc
cmc
ljmp
sub
fistps
and
std
mov
iret
imul
adc
adc
adc
js
inc
ret
dec
movsb
stos
fisubs
sbb
push
sbb
outsb
jecxz
aad
xchg
cld
int
pop
rorb
xchg
mov
lods
pop
xchg
mov
and
repnz
into
jb
mov
lods
and
push
dec
xchg
pushf
add
popf
add
jb
add
or
cwtl
add
lea
leave
pop
jmp
xor
dec
jo
loopne
aas
cmp
adc
xchg
out
cmovle
repz
sarb
sbb
dec
adc
out
sbb
shr
mov
popw
inc
leave
cwtl
pop
add
aam
imul
or
mov
mov
movsl
mov
cmc
loope
jmp
in
mov
icebp
push
pop
shr
adc
shl
fiadds
ljmp
mov
push
sbb
stc
and
stos
sbb
xorl
push
jmp
movsb
aaa
xchg
repz
mov
xchg
mov
imul
sti
out
mov
xor
mov
fs
fs
rorl
das
mov
test
add
sub
mov
mov
shrb
imulb
stos
dec
xor
cs
inc
sub
mov
fistl
testl
inc
pop
xchg
dec
gs
or
loope
jb
pop
mov
ret
dec
jb
imul
movsl
fistps
mov
push
inc
test
xchg
inc
shll
pop
cmc
dec
push
loope
add
movsb
xlat
ljmp
insb
pop
mov
je
shll
fstpl
xchg
lcall
in
ja
popa
mov
push
testb
stos
pop
pushf
loop
push
pushf
jle
out
in
outsl
aad
xor
in
iret
mov
jno
push
mov
and
mov
pop
xchg
dec
ret
imul
ret
fildl
jge
jp
mov
sbb
mov
outsb
test
ret
xor
mov
cmc
stos
pop
jge
test
in
pop
mov
aad
adc
ljmp
pop
out
mov
jae
lods
jno
and
xchg
call
cmp
cld
mov
mov
jne
ja
test
mov
imul
or
sub
xchg
scas
gs
aas
pop
or
jae
ss
ds
push
sahf
jmp
pop
jge
out
out
push
inc
cwtl
sub
mov
push
pop
xchg
ss
mov
rolb
xchg
add
orl
mov
add
clc
dec
cmp
lret
clc
push
mov
stos
jo
movl
lret
adc
movsl
pop
roll
inc
fs
je
xor
lods
lods
addr16
aas
push
sub
adc
mov
ljmp
dec
loopne
jnp
pop
pop
and
loop
ficoml
sbb
mov
cmp
push
neg
int
push
lahf
mov
mov
lods
das
pop
pop
cmp
movb
fnsave
in
jmp
out
out
cmp
dec
sbb
push
pop
scas
xchg
popa
popl
xor
test
in
mov
mov
daa
xor
pop
push
dec
ret
push
call
sti
pop
push
insb
rcll
inc
sub
dec
aaa
lcallw
mov
sub
and
and
sti
fs
fs
out
mov
jb
lock
dec
test
imul
loopne
mov
dec
mov
dec
sbb
ret
add
scas
xchg
int3
push
jo
sub
shl
dec
push
cmp
lds
das
aas
incl
clc
out
fdivrs
lahf
fisttpll
mov
mov
movsb
jbe
inc
andl
pop
adc
push
shrb
add
jo
adc
lods
repz
xchg
rolb
loopne
and
scas
popa
insb
inc
mov
jb
ja
inc
ret
sub
add
inc
pop
sub
stc
loope
shlb
mov
gs
repnz
mov
popa
jp
jg
pop
daa
push
xor
pop
scas
adc
call
mov
clc
adc
pop
cltd
fwait
add
fstp
leave
into
nop
mov
stc
dec
test
cs
push
js
mov
jnp
insl
movsl
clc
and
xchg
adc
mov
cmp
cs
stos
out
ss
xor
mov
adc
cmpl
mov
cmp
sbb
xor
stos
lret
mov
jne
fisubl
js
fucomi
scas
mov
cmpsl
mov
push
sti
fdivr
mov
jo
lahf
sbb
inc
icebp
sbb
in
and
addr16
push
xchg
dec
jnp
cmpsb
inc
jg
sahf
push
aaa
push
ficoms
mov
adc
sub
mov
dec
cmpsb
int
sbb
mov
popf
and
int3
sbb
sbb
push
add
mov
push
jne
pusha
test
test
gs
jl,pt
mov
push
inc
es
push
sub
jecxz
or
out
or
data16
sub
sahf
movb
popa
and
cmp
div
fsubrl
jae
punpckhbw
cmp
cwtl
push
leave
leave
ret
add
cmpsb
xor
mov
cwtl
mov
sub
push
push
adc
aam
das
sti
and
xchg
jne
enter
test
pop
arpl
cmp
mov
mov
push
push
lret
lcall
sbb
xor
ret
ja
xchg
shrb
cs
mov
mov
call
or
fstps
leave
sub
cmp
sbb
cltd
addr16
in
lock
jle
jb
and
push
loop
push
std
and
dec
xor
inc
lock
scas
in
ja
jb
les
pop
push
testb
adc
pop
push
popa
out
pop
sub
push
cmp
clc
outsl
in
test
insb
pop
push
arpl
int
adc
roll
icebp
inc
inc
adc
sub
jle
out
xchg
in
xchg
add
or
loop
popf
jnp
mov
aam
mov
adc
imul
cmp
in
imul
in
mov
and
lods
psubq
clc
mov
in
adc
aam
mov
in
aad
scas
push
ljmp
jp
pop
pop
imull
js
mov
xchg
mov
nop
je
jp
bound
inc
into
imul
adc
mov
push
jb
stos
cmpb
mov
adc
adc
xor
insl
xchg
repz
insb
mov
cmc
lcall
jbe,pt
sbb
jne
pop
popf
inc
cmp
mov
leave
push
cmpsb
call
xor
data16
push
pop
scas
movsl
ficompl
xor
jnp
ret
data16
xchg
lds
jae
outsl
adc
negb
mov
fmul
gs
hlt
stc
jecxz
stos
xchg
and
stos
fidivrl
sub
jno
cli
push
out
loop
repnz
or
cmp
sbb
xchg
enter
les
inc
ds
push
sub
fiaddl
jne
fstl
xchg
iret
jg
into
mov
or
shll
mov
sarl
sub
lods
pushf
jecxz
std
or
mov
ret
jns
xchg
push
fisubs
xchg
jmp
mov
dec
movsl
je
mov
push
sbb
popa
subl
into
loopne
mov
cli
repz
sbb
inc
pop
fwait
lds
push
or
pop
repz
pop
mov
int
xchg
lods
push
sarl
andl
bound
mov
mov
into
push
ret
mov
rcrb
test
adc
std
ror
sub
scas
fwait
dec
fisttpll
stos
sbb
gs
les
dec
test
dec
lret
lods
push
incb
push
sbb
jb
xor
fildl
inc
or
ss
inc
pop
mov
shlb
cmpsb
jbe
sbb
inc
int3
add
or
pop
inc
test
aaa
dec
xor
and
xor
mov
and
push
test
out
sub
inc
xor
out
lds
or
lcall
call
pop
mov
push
add
cwtl
mov
jg
pop
aam
adcb
push
loope
orb
jae
ljmp
cmp
and
mov
sbb
add
pop
addr16
jnp
xchg
aas
gs
cmc
scas
shlb
mov
out
and
daa
ja
jle
mov
mov
xchg
push
repnz
jae
xchg
popa
scas
or
adc
add
int
adc
sbb
and
cmc
jno
fimull
mov
in
aad
push
and
push
mov
and
jns
repnz
xchg
sub
push
lods
divb
mov
push
jecxz
jbe
test
pushf
sbb
movsb
gs
fists
stc
or
shlb
jge
adc
mov
push
mov
xlat
mov
mov
pop
out
jo
or
dec
add
add
outsb
popa
imul
pop
or
movsl
shrb
sbb
pop
xchg
mov
stc
cmp
jmp
dec
add
hlt
sub
mov
xlat
loope
fcoms
pop
cli
movlps
pop
pop
adc
rorb
pop
bound
notl
mov
add
xor
xchg
popa
mov
int
arpl
pop
pop
rep
sub
leave
and
mov
stc
int3
scas
cli
stc
lcall
mov
scas
les
mov
call
rorl
dec
add
pop
mov
mov
lea
stos
mov
in
dec
or
mov
pop
int
cwtl
push
xor
movsb
xchg
mov
mov
insb
add
and
call
add
jno
inc
lret
test
xchg
aas
leave
and
sbb
fwait
arpl
cmp
scas
inc
mov
loope
popa
ss
ret
mov
cmp
add
je
pop
lods
sub
cmp
mov
or
dec
mov
daa
adc
scas
sub
std
stos
andl
mov
jno
jmp
and
lret
xor
pop
xor
loope
sub
dec
adc
mov
inc
clc
xlat
icebp
xchg
jmp
jno
movb
jne
mov
add
shl
jg
add
lods
jo
sbb
out
shl
sbb
rorl
aad
cmpsb
add
xor
jp
jmp
inc
or
jns
int3
iret
mov
cli
rol
mov
cmc
fwait
cmp
lea
inc
pop
scas
mov
imul
jae
test
inc
mov
and
lea
cmp
cwtl
pop
push
push
daa
dec
push
sbb
jno
pop
mov
cmp
inc
mov
aam
mov
out
cmpl
jg
mov
imul
xor
cltd
shll
movsl
add
pop
add
cwtl
cmp
add
inc
in
aam
popf
int3
int
jns
call
into
sarl
xchg
mov
popf
sub
ret
mov
ret
sahf
dec
xchg
popa
test
mov
cmpsb
xchg
pop
pop
cld
mov
cmpsl
test
jl,pt
xlat
jp
cs
int
sbb
repnz
sbb
cld
je
repz
adc
and
push
inc
and
and
das
cld
dec
jbe
notb
inc
outsb
outsl
sub
sub
push
inc
or
cli
xor
mov
mov
mov
je
lods
ret
push
dec
dec
jnp
mov
fnstenv
dec
daa
adc
push
sbb
addr16
add
insl
ds
clc
stos
sbbl
jge
sub
jno
push
in
stc
scas
mov
sarl
xor
test
jne
lds
xor
push
add
push
in
mov
inc
mov
push
or
inc
inc
jne
mov
stc
fldcw
jmp
fwait
push
mov
leave
movsl
inc
lcall
mov
cmp
fs
daa
inc
cmp
push
lea
test
push
ret
xor
push
stos
repz
incl
xchg
lods
mov
stos
imul
cmp
bound
les
mov
lret
pop
test
shlb
push
jo
jle
or
cmp
cmpsb
cmp
jp
adc
jecxz
aad
push
adc
cmp
outsl
xchg
idiv
lds
insl
push
xchg
mov
ret
setbe
and
add
sbb
dec
jo
and
dec
jg
adc
mov
cmp
push
add
sar
mov
fwait
scas
push
das
xchg
sub
mov
mov
cmpsb
dec
fcomp
fstpt
js
fwait
xor
mov
lods
inc
roll
sarl
xlat
fadd
jmp
jae
adc
jnp
dec
mov
lret
shrb
mov
mov
pop
js
orl
cli
and
repnz
cmc
pop
and
clc
jecxz
push
add
movsl
mov
movsb
push
jnp
xlat
push
mull
cli
push
sbb
dec
cmp
or
rcll
xor
and
hlt
pop
sbb
add
cmp
dec
inc
in
jge
pushf
js
dec
fs
lock
jno
jl
pop
out
ret
xor
sbb
dec
mov
push
cmp
jp
inc
ljmp
in
fsubrl
or
and
xor
dec
fldenv
pop
ss
dec
jne
test
or
into
xchg
cld
xchg
sub
pop
and
jbe
add
pusha
ljmp
divb
into
out
xchg
sub
daa
and
outsb
movsl
mov
lock
adc
xor
mov
daa
insl
int
xor
arpl
int3
adc
dec
xchg
cli
and
mov
mov
repnz
sbb
push
cmpsb
add
cs
mov
fsubs
movsl
xchg
movsb
cmp
or
stos
sbb
jge
jno,pn
enter
cmp
es
push
test
sahf
pop
pop
inc
push
dec
cmp
and
rcrb
dec
fwait
and
outsl
adc
push
repz
popf
push
in
out
call
mov
aad
adcb
loope
and
pop
add
in
outsl
daa
test
stos
test
adcb
cmp
outsb
into
sarb
mov
add
push
add
adc
jmp
xlat
cld
aad
aam
add
out
shrb
and
hlt
clc
mov
scas
clc
loopne
xchg
lret
xor
ljmp
adc
cmp
jecxz
and
cs
call
push
loope
repz
mov
lods
fs
xchg
xchg
lret
xchg
sti
rcrl
or
in
push
mov
popf
sub
xchg
popf
push
adc
std
mov
or
inc
mov
xchg
icebp
aam
adc
mov
lcall
or
in
pop
or
xchg
push
adc
out
jne
add
insl
xchg
xlat
push
push
cmp
cmp
mov
repnz
pop
fs
jl
or
daa
rorb
dec
cmc
xchg
add
jnp
loope
imul
fwait
je
adc
sahf
cmp
fcmovnu
xchg
sbb
mov
jne
lret
xchg
inc
pop
dec
adc
jb
xchg
cmp
and
inc
mov
push
mov
or
cmp
add
mov
lods
and
lahf
dec
adc
mov
dec
inc
fldl
mov
lds
jo
jo
aaa
in
dec
xor
adc
push
mov
and
data16
outsb
lods
ljmp
and
or
jbe
lcall
and
in
mov
repz
or
mov
sub
xor
xor
mov
or
iret
push
cmp
or
push
sbb
shlb
lds
imul
inc
jp
mov
or
shrb
gs
ret
jmp
movsl
insb
adc
icebp
repz
pop
loop
divl
loop
sti
jns
pop
cmp
setne
mov
call
inc
scas
insb
test
adc
pop
cmp
mov
divl
xchg
jne
pop
pop
arpl
jns
mov
and
outsb
cmpsb
push
push
scas
jne
adc
enter
data16
hlt
push
dec
mov
movsb
mov
mov
inc
out
sbb
pop
movsb
jno
inc
loop
std
and
push
sbb
mov
cld
cmp
loope
loope
popa
lea
mov
mov
outsl
push
inc
out
xchg
mov
fldl
in
fwait
leave
add
inc
cltd
mov
cmp
aas
jp
xor
out
push
lods
sbb
clc
jno
repz
cs
push
inc
sub
sbb
adcl
aaa
dec
idiv
xorb
add
or
loop
xlat
mov
push
jne
cmp
out
push
push
dec
es
jno
sub
push
push
shl
shr
daa
movsl
jne
mov
mov
mov
and
cmc
jmp
inc
push
pop
shlb
pop
sbb
pop
popa
mov
fdiv
sti
mov
inc
repnz
sti
fistpll
test
pop
pop
cmpsl
push
and
sbb
or
push
jbe
mov
pop
in
push
jg
adc
sub
nop
inc
and
enter
dec
and
movsb
and
ret
mov
data16
push
or
adc
xchg
mov
dec
nop
cmp
insl
loopne
jb
sbb
xchg
add
mov
cmp
rcr
jle
loope
loope
insl
mov
mov
xor
out
lods
jns
in
daa
mov
inc
mov
lds
jmp
ds
xchg
xor
mov
pusha
out
lret
and
dec
adcb
dec
mov
stos
insb
movsl
pop
dec
cs
mov
cmp
push
pop
mov
mov
pop
flds
popf
jae
repnz
lret
jnp
mov
lea
test
addr16
out
cmp
outsb
in
add
push
adc
lret
pop
and
popa
mov
sbbb
jecxz
aam
int3
std
sbb
xchg
sbb
adc
inc
adcb
mov
sub
push
cmp
inc
sub
ljmp
loop
push
out
mov
push
cmp
loopne
das
mov
cmp
mov
insl
and
insl
push
imul
lret
mov
bound
dec
insb
stc
clc
jae
scas
loop
push
shlb
mov
mov
mov
in
sbb
push
icebp
clc
adc
aad
cmp
fwait
cmpsb
in
addr16
flds
pop
dec
xchg
xchg
adc
test
outsb
dec
lock
and
int3
push
dec
xchg
test
in
and
xchg
jne
or
rclb
xlat
dec
jae
arpl
sub
lcall
add
neg
jno
pop
jge
jnp
imul
mov
mov
int
movsb
xchg
dec
pop
mov
lret
dec
stc
loopne
pop
mov
in
jne
gs
arpl
sbb
mov
insb
jge
or
jbe
insb
push
or
mov
mov
into
mov
mov
inc
imul
shll
inc
lods
test
fdivr
cmp
dec
ss
cmpsl
test
lcall
jl
adc
fs
fsub
push
fisttps
fisubrl
or
js
repz
jmp
adc
movsb
adc
mov
rol
rcr
pusha
xchg
add
in
sbb
shll
mov
sbb
xchg
push
insl
ret
ss
and
movsb
rcrb
lret
pop
arpl
and
inc
adc
dec
inc
jg
lcall
cmpsl
in
mov
push
fnstcw
pop
add
add
pop
lock
sbb
mov
stc
mov
or
scas
into
push
inc
pop
ss
cmc
sub
sub
xor
mov
and
mov
cmc
cmpsb
in
jle
fidivrs
rolb
sub
push
orl
sbb
push
inc
and
ja,pt
cmp
dec
or
adc
sub
inc
subb
jb
lods
jl
repnz
cmp
popf
and
add
mov
sbb
dec
jo
sub
mov
test
daa
lock
sbb
out
andb
cwtl
pop
and
mov
jecxz
insb
inc
enter
out
repnz
pop
shlb
push
fs
sub
ret
xchg
ret
outsb
add
xchg
aam
int3
lret
out
add
jae
int3
cmpsb
ret
ret
out
mov
cltd
push
dec
pop
filds
mov
in
mov
sub
dec
in
cli
icebp
ror
pop
mov
or
mov
inc
pop
mov
fwait
lods
sub
test
cli
orb
iret
mov
clc
jle
in
push
xor
bound
out
sub
frstor
pop
test
jnp
pop
sbb
lcall
mov
xchg
cmpsb
pop
pop
out
inc
popa
loope
mov
mov
filds
xchg
sti
fiadds
aas
pushf
push
sub
lahf
jp
xor
push
loop
fucomip
loopne
jae
dec
ljmp
sub
inc
mov
sbb
lods
xchg
insb
add
in
stc
dec
add
insl
cld
pop
mov
push
xchg
mov
sbb
popa
and
out
push
orb
or
push
xor
lods
cmp
mov
mov
jge
loope
data16
adc
adc
inc
loop
mov
call
cmp
pop
jb
cli
lahf
jns
clc
clc
sbb
add
aaa
xor
mov
add
pop
adc
test
leave
out
mov
js
or
shll
add
sub
mov
imul
lods
sarb
cmp
dec
add
mov
enter
in
lock
call
jecxz
adc
subl
mov
jne
outsl
sbb
and
cmc
dec
aaa
jns
sbb
mov
sbb
add
jno
jmp
push
pusha
dec
fnstcw
mov
repnz
add
push
push
orb
idiv
and
outsb
pusha
push
xchg
sbb
and
adc
sbb
xorl
insb
mov
sahf
js
fimuls
iret
pop
aad
and
ljmp
push
cmp
push
imul
mov
cs
cmp
fwait
sbb
mov
into
jge
into
scas
out
inc
fsubl
test
sbb
scas
inc
and
imul
adc
push
jns
ja
fistl
xchg
cwtl
sbb
mov
push
push
leave
xchg
shrl
cmp
popa
push
or
js
cmp
in
push
test
push
xor
jmp
loope
pop
jb
call
bound
imull
jae
jbe
cmc
jg
dec
lea
xchg
jo
push
cmpsl
mov
xor
sub
sub
mov
lods
push
pop
fistpll
xchg
stos
lock
mov
jge
push
loop
nop
mov
and
push
fnstcw
pop
jno
lcall
or
rcll
mov
imul
adc
inc
imul
xor
pop
xor
fisttpll
insl
mov
pop
add
mov
pusha
xchg
mov
and
je
out
mov
cmc
fisubrs
mov
test
stos
js
in
mov
pusha
daa
xlat
cmp
divl
mov
mov
dec
aad
clc
adc
movsb
adc
ret
xlat
cmc
inc
xchg
mov
adc
call
popf
sbb
call
aaa
xchg
xchg
pop
mov
cmpsl
add
cmp
or
lods
cmp
inc
aas
and
mov
int3
cmp
pop
push
ljmp
mov
insl
sbb
movl
xor
inc
sbbb
pop
mov
add
ficomps
jp
xor
dec
mov
xor
mov
aas
sbb
add
push
jl
stos
imul
mov
jmp
xor
add
sub
add
jns
add
test
push
and
ret
or
jae,pn
push
insl
jnp
testl
pop
outsb
dec
scas
insb
sub
sub
lret
ret
jnp
add
mov
mov
test
push
cltd
xor
xchg
jg
or
std
outsl
int3
ljmp
and
mov
out
inc
out
xchg
clc
nop
jl
lods
pop
jo
ss
test
sbb
pop
ret
sub
sub
out
out
dec
lods
xchg
mov
out
and
dec
pop
jle
fisubs
arpl
push
jmp
mov
pop
sub
dec
xor
adc
jae
push
jmp
test
sbb
dec
xor
in
pop
xor
hlt
xor
adc
mov
out
ja
movsb
push
jle
flds
bound
pop
int3
nop
mov
mov
pmaddwd
sahf
pop
jbe
xchg
cmpsb
inc
push
mov
pop
or
mov
xchg
in
mov
jge
pushf
cld
into
fisttps
jge
mov
dec
mov
adc
lods
add
cmp
inc
cmpsb
repz
mov
cmc
add
jns
in
fcoms
xchg
mov
int
sub
in
pop
add
int3
xchg
mov
push
pop
nop/reserved
push
add
je
and
leave
mov
dec
add
push
je
mov
lret
scas
add
pop
mov
inc
adc
mov
lahf
fisubrl
nop
iret
cld
pop
lcall
jbe
push
sbbl
sbb
pop
aas
cmc
vpunpckhdq
lock
iret
sbbl
bound
mov
lahf
and
mov
insl
ret
or
or
inc
push
rclb
mov
dec
andb
push
push
repnz
loop
xor
lcall
shll
sub
ret
xchg
jmp
fadds
pop
out
out
mov
xchg
test
inc
fucomip
mov
and
mov
ss
dec
xchg
xchg
incl
mov
sbb
ja
and
jae
out
sub
jl
imul
mov
inc
add
push
pop
lea
mov
ds
je
jbe
faddl
mov
lcall
mov
jae
icebp
sub
andb
mov
in
lds
subl
insl
stc
push
sbb
adc
xor
lock
mov
xor
cwtl
and
adc
ret
mov
sarl
jno
mov
imul
subl
xchg
mov
cmp
in
push
and
jge
mov
stos
pusha
shrb
jp
mov
pop
mov
adc
shlb
push
pop
mov
outsl
lahf
daa
mov
pop
mov
and
orb
cmpsl
out
ficoml
xchg
xor
movsl
arpl
push
cmp
adc
xchg
adc
adc
outsl
imulb
sbb
stos
lret
sbb
and
js
push
scas
rclb
in
pushl
sbb
pop
jo
call
sub
out
pop
push
add
insb
jae
xor
imul
or
jl
fdiv
out
pop
dec
fstpl
fwait
loop
adc
xchg
out
push
shrb
adc
add
adc
aaa
lahf
xchg
call
xchg
insl
xchg
push
fistl
pusha
fbstp
ss
or
fmul
mov
sub
enter
int
push
mov
jl
cs
xchg
pop
and
clc
mov
xchg
add
xchg
mov
xchg
xor
fidivrl
je
pop
stos
sbb
xor
lds
inc
inc
scas
mov
push
in
repz
cmpsl
fstpl
stos
aas
imul
or
mov
call
imul
sarb
mov
scas
push
fists
dec
sbb
dec
jmp
jb
sbb
mov
lods
push
movsb
jae
mov
push
nop
jle
cwtl
ds
test
mov
inc
cmpsb
inc
xchg
jge
push
cmc
lods
pop
daa
inc
push
push
enter
xor
xchg
fs
imulb
js
pop
jecxz
push
xchg
jmp
xor
pusha
inc
xchg
pop
mov
aas
lods
mov
dec
loope
andb
push
mov
ret
cmp
xchg
fldcw
outsb
mov
jne
fnstenv
mov
pop
mov
imul
add
pop
mov
and
push
push
leave
shll
fwait
or
dec
push
sahf
sbb
and
sbb
fiaddl
pushf
clc
in
sbb
jns
jp
sarl
aad
mov
adc
xchg
loope
ss
insl
arpl
or
ds
jb
nop
push
fs
and
dec
mov
cs
and
sbb
jnp
shlb
jbe
nop
cmp
sarb
in
dec
adc
stos
pop
out
pop
cli
rorb
push
lea
mov
xor
ja
pop
sahf
jge
into
pop
ljmp
jmp
jo
or
push
jbe
push
jmp
jb
push
push
add
hlt
jl
push
push
mov
sub
cmp
mov
call
cmpsl
mov
pop
nop
fucomip
rcl
repz
push
adc
mov
pop
and
sti
jae
jns
sahf
inc
xor
jno
xchg
sbb
xlat
aam
cmp
push
fildl
mov
aaa
xlat
or
xchg
pop
insl
imul
xchg
shr
outsb
and
push
cmp
jno
aad
mov
cmp
sbb
inc
outsb
adc
adc
lahf
scas
and
roll
fcoms
mov
daa
scas
mov
and
ljmp
dec
dec
inc
add
inc
push
mov
xor
lret
js
shll
xor
xchg
in
xlat
jle
push
adc
inc
addr16
sahf
cwtl
xor
ret
popa
xchg
xor
xchg
fnstcw
in
sbb
lods
jp
sbb
pop
push
mov
adc
stos
sub
rolb
dec
cmp
dec
das
jl
mov
pop
mov
cmp
ret
in
or
mov
in
stc
mov
mov
xchg
test
and
call
or
push
scas
sub
or
inc
push
call
test
jg
xchg
push
xor
ret
scas
pop
imul
test
add
insb
cmpsb
jno
cmp
aas
inc
xorl
call
or
cs
ret
fisttpl
and
lret
dec
ficoms
cmp
mov
out
in
shl
jecxz
adc
or
popf
fwait
sbb
dec
jmp
lea
popa
lds
or
repz
inc
cld
popa
inc
call
push
jb
sbb
or
loope
ljmp
adc
loope
dec
fisubrs
in
insb
movl
dec
outsl
xchg
push
imul
stos
call
adcl
jecxz
push
jne
cli
in
test
sub
outsl
cld
pop
hlt
or
das
mov
es
iret
jmp
inc
pop
rcr
jns
loope
mov
xor
test
mov
ja
fwait
mov
mov
lods
push
xchg
xchg
loop
sar
sbb
mov
das
cmpsl
fmull
dec
mov
mov
ss
aad
mov
sub
dec
jne
icebp
or
pop
sbb
test
pusha
loope
cmpsb
mov
ljmp
mov
jle
movsl
xor
rep
mov
addr16
cltd
lock
jnp
add
sbb
mov
or
daa
call
sub
xchg
adc
xchg
imul
loop
mov
inc
add
inc
inc
push
pop
or
insl
mov
mov
push
daa
aaa
jl
sub
xchg
daa
mov
dec
push
pop
mov
cmpsl
stc
addl
lods
je
xchg
dec
push
pop
test
xlat
jmp
pop
xor
mov
inc
xchg
add
and
push
mov
shll
in
inc
pop
popa
pop
push
out
mov
incl
pop
pop
dec
jne
push
loope
arpl
jmp
cld
mov
cmc
mov
ja
adc
sarl
out
in
je
sbb
loop
clc
cmp
inc
jnp
xor
imul
out
xor
test
and
mov
sbb
int3
lret
sahf
cmp
fnstcw
adc
jno
fisubs
call
pop
jecxz
and
aas
pop
in
sub
std
roll
shrb
sub
cmpsb
mov
pop
dec
es
pushf
sbb
dec
push
and
dec
insb
mov
push
call
shlb
xchg
out
imul
and
test
movsl
inc
pop
mov
adc
mov
fstps
add
lret
inc
lcall
ljmp
xchg
rcl
or
lods
jge
in
jp
sub
sbb
push
jbe
lods
fdivr
sbb
mov
or
mov
xchg
sarb
pop
xchg
push
jecxz
jns
outsl
or
mov
push
adc
cmp
fmull
ret
repnz
out
call
dec
fs
jge
test
int
repnz
out
sbb
mov
or
sub
xchg
xchg
lret
sub
call
xor
outsb
repnz
pop
jecxz
dec
call
jmp
sbb
jo
or
movsl
repnz
mov
mov
mov
jmp
mov
int3
mov
or
daa
mov
pop
push
bound
jns
pop
pop
sub
dec
inc
xchg
sti
jmp
sahf
sub
push
mov
inc
inc
pop
in
mov
fdiv
ja
je
xchg
jg
cmp
inc
jecxz
adc
mov
pop
jmp
lods
mov
testl
lea
in
insl
jmp
inc
push
sbb
cli
or
and
sbb
xor
adcl
add
xor
in
xor
pop
cld
out
sub
pop
mov
adc
ljmp
je
pop
pop
and
ss
xor
call
add
rorl
loop
insb
xchg
push
pop
mov
adc
dec
mov
push
cmp
fidivl
ljmp
mov
fs
lret
adc
pop
add
data16
ret
push
jns
or
aam
insl
icebp
das
dec
fcmove
adc
sbb
adc
les
mov
testb
add
mov
xor
push
sbb
fldl
frstor
adc
push
add
lods
lahf
fdivs
mov
jae
into
mov
mov
arpl
add
pop
add
mov
ds
outsb
adcl
cmp
inc
and
imul
iret
xchg
fwait
mov
jmp
aaa
sub
mov
inc
inc
leave
das
gs
or
inc
adc
mov
movsb
int3
es
jne
aam
clc
pop
jnp
add
inc
mov
mov
mov
or
mov
or
xchg
shrl
pushl
jae
pop
push
outsb
repz
cmpb
imul
inc
pop
fs
mov
flds
lock
jl
dec
jb
push
push
into
dec
outsl
mov
mov
shrb
dec
mov
add
daa
or
addr16
insb
rorl
out
ss
push
dec
push
push
or
outsl
sti
push
adcl
adc
clc
adc
lahf
sbb
adc
sbb
stos
mov
sub
pop
xchg
lock
mov
and
push
sar
test
push
mov
sub
psraw
lret
pop
sub
and
add
out
icebp
cmp
cmc
cwtl
adc
lahf
pop
or
nop
fwait
stos
mov
es
fistpl
jno
inc
rcll
cmp
adc
push
adc
jl
mov
inc
sub
mov
shrl
mov
cmpsb
lcall
js
out
pop
lcall
inc
sahf
push
mov
add
mov
es
jmp
and
pop
xor
adc
inc
jmp
mov
fcompl
scas
push
or
jmp
mov
aaa
jle
in
ljmp
notl
in
std
dec
xor
mov
add
ds
dec
mov
insw
out
repz
int3
xchg
jle
ret
int
nop
lods
push
xchg
xor
pop
js
pop
dec
dec
adc
scas
adc
add
add
repnz
jne
pop
push
jge
mov
fucomip
mov
sbbl
mov
pop
roll
cltd
mov
enter
mov
jmp
cmp
mov
mov
jl
add
mov
sbb
push
lahf
lods
jns
mov
aas
lds
in
out
inc
jae
fcmovnb
pop
sbb
in
mov
dec
or
psubsw
mov
cmp
cmp
cmp
mov
and
and
lret
cmp
mov
inc
sbb
lret
jg
test
out
xor
jmp
filds
inc
adc
push
cmp
pop
fdivrp
push
lahf
xor
into
mov
push
ljmp
and
xchg
mov
and
movsb
mov
cmpsb
test
mov
pop
and
or
inc
push
push
push
push
xor
subb
daa
jge
xor
push
xchg
inc
or
lcall
rcll
sub
scas
push
cwtl
xchg
sbb
xchg
add
inc
add
jle
sahf
xor
xchg
outsb
adc
jae
mov
adc
test
lods
or
orl
mov
out
xchg
aam
jecxz
sub
mov
xchg
out
aam
sbb
cmpsl
ljmp
dec
scas
cwtl
cld
mov
add
cwtl
jp
or
cmp
jns
cmpsl
and
iret
jbe
dec
sahf
and
enter
movsl
stos
lock
mov
mov
cmpsl
or
scas
push
cmp
cwtl
sahf
ret
cmc
ljmp
cmp
mov
dec
ret
jle
popf
or
rorl
and
movsb
lea
aam
outsb
pop
rcll
jecxz
mov
xor
xchg
and
jne
das
mov
lods
enter
iret
nop
and
lcall
loope
mov
jne
adc
fldl
shll
lret
es
shr
mov
sahf
cmpps
xor
dec
shr
sbb
clc
add
ljmp
sub
sti
mov
filds
and
xchg
pop
lcall
mov
outsl
xchg
loop
mov
sti
xchg
in
and
cmp
daa
lock
lret
rcl
inc
add
add
daa
add
pop
rep
mov
dec
imul
andb
sti
mov
pop
fs
std
sub
inc
out
fistpll
sub
lret
lods
rcrb
movsl
pop
pusha
push
test
popf
pop
mov
loop
popl
pop
xchg
pop
insb
jg
cltd
bound
xchg
repz
mov
xchg
mov
test
shrb
jg
pop
mov
xchg
ljmp
xchg
pop
push
mov
rorb
sub
adc
out
push
push
imul
repz
mov
mov
or
cmp
jecxz
pop
xor
data16
fucomip
nop
enter
sahf
sub
cld
jb
lahf
je
push
fcompl
jl
dec
lock
scas
adc
flds
jbe
rorb
sbb
pop
or
push
pop
lcall
mov
fxch
xor
push
or
hlt
pushf
flds
xor
sahf
xchg
pop
push
incb
mov
test
push
and
xor
push
adc
cmp
jle
mov
mov
mov
test
mov
nop
xorl
fistpll
cmp
shl
cmp
out
daa
movsb
aad
testb
lds
push
jae
sub
repz
cmpsb
rolb
push
pop
jge
pop
sbb
ret
or
loopne
aam
test
arpl
cmp
addl
lcall
lea
mov
out
fnsave
add
lea
mov
jg
sbb
fs
mov
aaa
shrl
fisttps
loope
add
inc
push
adc
mov
popw
out
test
jns
orl
adc
fistps
aad
pusha
mov
dec
pusha
inc
cmpsb
ja
in
fistpll
mov
je
out
jge
addb
push
ficoml
out
cmp
arpl
mov
test
mov
mov
ja
fcmovbe
sub
mov
ds
mov
insb
jo
or
in
sub
stos
jmp
mov
push
sub
push
mov
mov
xor
push
dec
sub
add
cmc
je
cmp
fnstcw
addr16
subb
mov
xor
jnp
je
jecxz
sub
mov
sbb
xor
push
scas
mov
pop
mov
icebp
sub
es
and
inc
das
rcrb
jbe
scas
cmp
sti
in
es
fldt
in
push
mov
std
das
orb
je
addr16
push
inc
and
aam
notb
add
pop
cmp
call
cld
mov
outsb
push
push
fcmovnu
mov
sub
adc
push
xor
inc
cmp
into
mov
sbb
xchg
and
dec
pop
cli
or
push
cmp
xor
cmpb
push
mov
enter
pop
lcall
andb
rcrl
xor
cmp
shl
jmp
loopne
loope
or
sarb
xchg
jns
loopne
scas
outsb
fwait
jno
sahf
fwait
dec
sbb
insb
cmp
mov
arpl
dec
add
mov
xchg
sbb
jmp
xchg
sbb
in
repnz
das
test
scas
jmp
dec
pop
inc
test
mov
push
xchg
pop
sti
sub
mov
in
das
jmp
dec
jge
filds
cmp
insb
xchg
xor
fld
mov
aad
adc
xor
loop
rolb
push
bound
popa
mov
in
gs
inc
into
or
negl
in
ficoml
aaa
jne
rcrl
jbe
jl
sbb
dec
arpl
imul
or
xor
mov
enter
arpl
cmp
mov
ficoml
js
shrb
enter
arpl
cmp
sbb
jns
aaa
sti
xchg
mov
mov
sti
xchg
and
cmp
je
push
out
aam
push
and
insl
dec
adc
clc
out
das
push
xchg
aas
lret
xor
push
inc
push
insl
inc
rcrl
xchg
inc
pop
xor
sub
push
mov
in
jbe
je
or
orl
shll
sbb
out
jno
sbb
mov
xchg
xchg
jp
xor
pop
cmp
mov
fdivp
loop
cmp
jae
cmpsl
gs
pop
fdivl
fstpt
dec
sbb
xor
push
pop
incb
fwait
push
test
jbe
cmc
jae
dec
cmpsb
lods
out
testb
out
stos
and
stos
out
sti
cmp
fisubl
or
mov
cmovl
sbb
adc
sbb
es
shll
test
in
popf
xchg
mov
test
mov
aad
movsl
mov
sbb
push
jbe
fs
sbb
in
lret
inc
mov
nop
mov
dec
iret
pop
add
cmpl
shlb
fildll
lods
rclb
flds
test
loop
sub
lock
xor
mov
and
mov
jle
cltd
add
mov
jl
cmp
mov
mov
jecxz
lods
rcll
pusha
xchg
add
mov
daa
jno
mov
xor
out
pusha
mov
dec
add
xorb
xor
inc
jge
stos
roll
fildl
sub
jnp
loope
pop
out
dec
ss
arpl
lret
sub
idivl
imul
into
jb
mov
xor
jns
pop
sarb
and
inc
aaa
mov
popa
je
jmp
das
jge
push
dec
int3
daa
xchg
shlb
arpl
int
in
cld
mov
cld
sti
jecxz
sbb
xchg
insb
fstps
pop
dec
or
xchg
xchg
std
std
push
and
cmp
add
in
stc
sarl
inc
out
push
xor
das
movsb
cmpb
fsub
inc
add
out
sahf
sbb
mov
cmp
mov
mov
out
out
imul
sbb
bound
int3
loop
sbb
jmp
sbb
sbb
jge
sub
mov
jne
sbb
xchg
js
out
stc
add
daa
dec
push
mov
out
push
test
leave
adcb
gs
les
cmpb
lods
lahf
lods
jbe
into
ljmp
mov
pop
aaa
imul
in
leave
push
addr16
add
popf
sub
stc
pop
imul
sbb
pop
jl
inc
mov
mov
mov
pop
out
subl
js
inc
mov
fistl
jmp
or
sbb
and
push
cmp
sub
shrb
lock
cmc
repz
fidivrl
ds
sub
cmpsb
xor
xchg
addb
lahf
sbb
xor
push
xchg
xor
cmpsb
cmc
sahf
ret
mov
xor
dec
imul
xchg
subl
or
dec
int
and
xor
adc
dec
cli
mov
sbb
push
sub
mov
mov
popa
nop
test
inc
out
ljmp
xorl
cmpsl
jo
inc
sbb
popa
repnz
mov
sbb
xor
sbb
adc
hlt
jp
xchg
or
jb
sbb
cmpb
add
enter
add
enter
mov
adc
inc
in
bound
mov
stos
test
pop
sahf
and
inc
ss
scas
cmp
cld
cmp
jns
adc
rol
xchg
and
out
repnz
rolb
les
pop
loop
sbb
rcrb
int
and
cmp
fstps
xchg
imul
and
arpl
cmp
and
rclb
ret
sub
orl
and
cld
in
xor
insb
ret
push
lret
sbb
out
lret
jge
fcoml
push
pusha
cmp
in
inc
and
loope
pop
xlat
je
xor
fmuls
lcall
popl
cmpsl
sub
push
hlt
movsl
xor
cwtl
dec
sub
pop
sub
cld
sub
pop
adc
rolb
push
mov
adc
mov
add
cld
or
fnsave
cmpsl
ret
sub
test
test
out
imul
add
xchg
lods
mov
sbb
mov
pop
outsb
add
out
test
add
test
imul
adc
and
push
lds
loopne
and
pop
xchg
cmp
add
jl
rcll
jns
iret
mov
cmp
jb
xor
leave
add
int
shlb
pop
add
rolb
mov
push
dec
pop
nop
ja
push
test
divl
dec
insb
jmp
mov
inc
push
fcoml
insl
aam
pop
mov
jno
not
hlt
cmpb
cld
mov
dec
sahf
flds
cltd
mov
cmp
mull
mov
jg
in
or
jno
mov
xor
xchg
xchg
in
mov
sbb
mov
pusha
jp
in
mov
orb
add
xchg
jbe
mov
cmp
adc
sarl
rcrb
int3
test
pop
mov
sbb
stos
push
ja
sbb
fdivs
addb
mov
adc
mov
fsubl
loopne
decb
dec
mov
inc
dec
pop
adc
cmp
lret
icebp
frstor
xor
add
js
mov
std
xorb
rorb
cltd
xchg
mov
outsb
adc
rclb
push
or
pop
push
mov
pop
sub
dec
test
in
adc
mov
sahf
mov
fstl
test
mov
sub
es
movl
sbb
jg
movsl
clc
popa
jmp
les
ret
into
push
repz
pop
sub
cltd
add
pop
pop
and
inc
call
pop
pop
je
test
loope
push
jno
mov
cmp
gs
ljmp
sub
sub
sub
cli
mov
push
or
jge
xor
stos
add
bound
lret
repnz
bound
notb
movsb
add
sub
mov
icebp
ljmp
pushf
pop
inc
and
jl
xchg
stos
popa
mov
sub
in
push
out
pop
inc
sub
test
cmc
xchg
shr
mov
jbe
mov
sti
data16
sarl
push
pop
ret
pop
push
inc
fidivs
push
push
repnz
mov
and
out
outsb
mov
mov
mov
hlt
mov
pushf
xchg
rcll
mov
sub
xor
daa
dec
xchg
adc
xor
dec
cmp
scas
ret
cmc
jo
push
inc
fwait
shll
add
xchg
adc
dec
enter
into
mov
add
mov
fmuls
dec
sahf
sbb
paddw
inc
push
mov
orb
jb
xor
andl
decb
ret
ljmp
push
mov
fbld
rep
cmp
fildl
pop
fsubrs
pop
pop
xor
test
iret
sub
or
sub
out
in
and
int
xchg
and
add
pop
jno
test
jns
leave
rol
jmp
xor
and
mov
lret
jg
and
dec
sti
mov
pop
in
stos
popa
xchg
adc
xor
sbb
adc
jge
push
aas
sbb
push
daa
fidivrs
movsl
pop
pop
test
fs
inc
adc
out
es
sbb
push
mov
jl
mov
rorl
jle
iret
rcrl
fwait
dec
mov
int
adcb
idivl
mov
sub
mov
sbb
sbb
or
jp
pushf
cltd
mov
cmp
stos
das
popa
fidivl
out
incl
mov
ret
dec
rclb
jp
cmp
dec
dec
sarb
bnd
push
mov
movsb
mov
leave
inc
sbb
xchg
cli
inc
mov
mov
jbe
outsl
lret
push
jb
mov
not
mov
sbb
cmpl
lods
lock
in
mov
fiadds
mov
stc
jo
int3
or
cli
mov
data16
into
inc
shr
out
xor
pop
and
ret
out
popf
pop
rorl
out
fisttpll
xor
xchg
dec
scas
adc
arpl
je
jae
sbb
pop
dec
lods
cmpsb
pop
xchg
sub
xchg
mov
incb
jns
push
arpl
loop
mov
jns
xor
daa
insl
leave
bound
adc
imul
enter
push
add
rorl
dec
xchg
dec
fdivs
push
jno
aam
aam
negb
popf
or
into
adc
repnz
inc
andb
aas
mov
ret
mov
fldenv
in
stos
std
sub
cli
mov
add
jae
popa
mov
xchg
adc
test
xor
popf
jmp
pop
and
xlat
test
sub
or
xchg
test
stos
fbld
arpl
mov
add
adc
or
xor
cmp
aas
repnz
and
outsl
push
pcmpeqb
adc
cmp
push
arpl
loopne
inc
sbb
jnp
add
pop
jl
outsb
xor
and
pop
cmp
out
mov
xor
nop
jecxz
inc
dec
xchg
jp
adc
inc
jmp
dec
hlt
push
mov
xchg
mov
dec
sbb
lcall
mov
sarl
cmp
mov
bound
ret
rcrl
mov
xchg
dec
mov
mov
xchg
fdivs
cli
sub
rolb
cmp
dec
test
data16
xchg
fdivs
mov
into
inc
push
stos
inc
cltd
add
int
roll
pop
movups
push
dec
push
mov
xchg
sub
sbb
xor
dec
test
dec
cmp
jae
shll
dec
loop
cs
iret
movsb
jae
shlb
in
pop
scas
jle
in
push
cmp
push
push
push
lock
push
scas
inc
dec
add
push
shrl
sbb
loope
jb
ret
lea
xor
out
or
pop
mov
negb
scas
jmp
inc
fisubs
jp
icebp
jge
scas
inc
gs
lret
jecxz
loop
jae
pop
in
xor
push
jb
lods
add
xor
dec
sar
pushf
int3
shll
outsl
push
xchg
xchg
or
xor
lds
hlt
cwtl
fs
sub
je
cmp
pop
inc
repnz
mov
push
lret
inc
add
and
sbbl
int3
mov
xor
inc
lods
aam
and
mov
sahf
ja
cli
sbb
pop
les
adc
into
dec
clc
push
mov
add
gs
stc
test
out
push
scas
dec
xchg
test
dec
jo
inc
and
sub
pop
imul
pusha
in
mov
mov
or
inc
cmp
mov
xorl
xchg
std
xchg
dec
adc
sbb
pop
cli
popa
das
sub
imul
mov
mov
sti
ljmp
je
or
mov
mov
iret
push
push
insb
dec
inc
push
mov
inc
sub
pop
jnp
mov
test
push
inc
lcall
cld
add
imul
mov
jnp
adc
pop
mov
or
or
xchg
insl
stc
push
jns
pop
pop
pop
push
repz
jns
dec
dec
imul
cld
pop
mov
xchg
shlb
push
movsb
jl
imul
push
les
out
in
mov
ljmp
and
push
in
out
sbb
out
leave
sub
in
jmp
add
shlb
adc
adc
aas
mov
push
test
mov
push
out
mulb
add
outsl
or
mov
fldl
jp
xor
mov
fsubs
xor
cmc
fidivrs
insl
mov
shlb
xor
xchg
sbb
in
pop
jmp
cmp
jno
xor
cmpsl
push
fsubr
lret
loope
pop
pop
dec
lret
push
dec
jne
movsb
in
cmp
lock
imul
insl
jmp
jge
aam
mov
pop
and
sub
pop
fistpll
fnstsw
insl
sahf
inc
fisttpll
jmp
filds
test
jp
aaa
popf
mov
inc
cmp
push
or
scas
popf
mov
rcrb
loopne
or
adc
add
ret
mov
dec
out
xchg
push
repnz
add
rcll
int3
or
and
pop
mov
dec
out
xlat
or
or
les
pand
sub
mov
and
xor
sarb
sbb
mov
cmpsl
pcmpgtb
or
js
push
mov
inc
and
push
pop
dec
mov
outsl
lea
sbb
push
pop
mov
rorl
rol
sbb
jge
out
shll
sbb
pop
jmp
add
mov
rclb
repnz
dec
imul
and
hlt
sub
add
sbb
iret
icebp
les
push
jmp
lcall
inc
sbb
pop
jmp
or
cmpsl
jae
lret
ret
lahf
sub
xchg
lods
push
jae
inc
push
mov
xor
scas
or
jecxz
or
in
and
repz
jp
das
test
push
jg
popa
je
and
mov
fwait
xchg
jp
or
imul
subl
mov
xor
test
mov
mov
mov
rcll
push
add
inc
mov
js
pop
pmulhw
addr16
adc
jg
push
out
pusha
xchg
lock
popa
and
bound
xchg
xchg
xor
lea
incl
pop
push
push
cmp
loope
fiaddl
cmp
lods
lds
sahf
mov
mov
pop
sbb
cli
ficoml
lret
dec
test
push
pop
xchg
hlt
bound
cmpsl
xchg
jg
jg
shrb
mov
xor
and
inc
dec
mov
push
pop
sub
jle
dec
sbb
and
les
push
jge
push
lock
aaa
adc
jnp
lock
mov
cmpsl
lret
das
repnz
roll
mov
jp
adc
clc
lret
cmp
push
fiaddl
fisubl
or
test
push
pop
outsb
cmp
or
out
sbb
pushf
cmp
icebp
inc
sub
add
mov
pusha
lret
sbb
sbb
push
leave
pop
pop
jl
stos
xchg
mov
jo
aaa
mov
insl
fcoms
repz
addr16
push
insl
stos
das
ja
out
notb
mov
sbb
shrb
pop
mov
xchg
adc
orb
jno
call
adc
addr16
add
push
jge
adc
js
push
out
dec
or
and
jnp
loopne
xchg
nop
scas
mov
sub
ret
into
push
mov
or
cltd
cmpsl
out
sti
mov
icebp
cli
in
insb
imull
loopne
dec
clc
or
sub
mov
xor
ja
xor
xchg
jae
leave
xor
and
insb
lcall
push
push
mov
loope
testb
pop
ret
jp
xor
mov
jne
xor
rcl
and
jb
mov
jns
xchg
cmp
inc
mov
mov
outsl
pop
add
push
push
out
lahf
xor
ret
jge
pop
rclb
push
adc
xchg
or
leave
outsl
xchg
pop
aaa
xlat
inc
aam
lods
sbb
jmp
jmp
xchg
push
push
push
inc
sub
push
pop
jmp
test
loop
shrl
test
sbb
into
cs
repz
cmpsl
icebp
jle
test
dec
adc
int
mov
iret
js
hlt
lds
mov
leave
or
daa
mov
xchg
loopne
inc
pop
mov
mov
jns
mov
out
loope
pop
sub
lret
jle
xchg
xchg
or
in
adc
xor
pop
cltd
movsb
add
mov
loope
lock
cmc
xor
pop
mul
and
pop
int
adc
xchg
test
fldt
jle
cmp
add
sahf
xchg
insb
xor
push
mov
hlt
and
test
arpl
or
sub
aaa
mov
imul
adc
cmp
in
and
mov
fnsave
testl
pop
bound
js
pop
fnclex
or
ret
ror
sahf
adc
xchg
fcoml
add
xchg
ds
data16
in
test
wrmsr
ljmp
lret
lret
lahf
loopne
inc
adc
mov
adc
sbb
stos
and
mov
lods
sbb
sbb
sbb
xchg
adc
dec
sub
lret
mov
gs
int3
jnp
mov
add
rolb
pop
insb
ret
xchg
in
cmc
cmp
add
push
enter
leave
sub
add
fadds
jno
sbb
fldl
or
test
and
mov
imul
subl
incl
hlt
neg
push
imul
xchg
push
mov
xor
jb
dec
out
aad
dec
and
push
jo
mov
adc
in
arpl
cwtl
jbe
insb
push
nop
mov
jo
call
or
xlat
out
rorl
jno
xchg
mov
cs
divb
lods
inc
or
push
dec
dec
icebp
bound
and
lahf
rcl
mov
xchg
pop
je
and
or
push
jl
sub
mov
push
out
and
pop
cltd
mov
jecxz
pop
icebp
lret
fldenv
out
call
setae
imul
out
adc
and
les
jae
mov
or
loop
scas
cmp
int3
mov
jns
push
push
sub
adc
push
jb
or
aaa
dec
jb
cmp
mov
push
int3
mov
jmp
xchg
push
jle
adc
lea
lock
outsb
inc
popa
inc
jns
lcall
add
ret
jge
xchg
nop
loop
shll
xor
nop
out
in
cmp
ret
in
jb
cmpl
fcmove
dec
sti
lret
and
into
cmp
aas
ss
sbbb
cmp
insb
xor
sub
aas
push
add
je
push
mov
ret
shrl
jle
jl
dec
lret
dec
xor
push
jg
test
rcrb
ret
and
lods
cmp
insl
fwait
sbb
std
loop
fs
inc
push
add
pop
fstps
mov
dec
xchg
jbe
push
pop
insb
xor
fistpl
mov
push
xchg
in
pusha
or
aas
orl
ss
mov
loope
mov
fsubp
mov
push
sub
mov
sti
insb
or
out
rclb
inc
dec
mov
nop
or
clc
push
push
int
loop
or
scas
pop
push
jae
cmpsb
push
inc
iret
sti
cmp
push
push
and
push
mov
das
enter
cmpsl
aaa
out
or
test
cwtl
sbb
add
cmp
mov
inc
jmp
into
stos
inc
enter
and
sbb
outsb
dec
and
cmpsb
cld
and
filds
mov
push
out
in
adc
cs
in
cmc
mov
mov
inc
data16
push
in
jl
add
adc
mov
shll
es
arpl
out
in
hlt
cli
out
in
cmp
mov
fisttpll
inc
scas
push
sub
jo
xor
push
pop
sub
cmp
cli
jno
sbb
push
push
add
xor
fnsave
adc
repz
mov
enter
add
neg
das
gs
xlat
test
mov
push
or
cmpsb
loop
dec
jbe
cmp
sahf
in
inc
stc
mov
push
pop
mov
jmp
outsl
pop
lcall
push
lcall
add
dec
outsb
stc
ficomps
hlt
push
add
je
sti
sbb
push
push
xlat
mov
mov
dec
fmuls
mov
arpl
adc
dec
fdivl
jnp
xchg
mov
mov
and
xchg
mov
in
push
sbb
dec
mov
mul
jbe
xchg
jo
xor
mov
cmp
lods
add
popa
in
cld
mov
orb
sarl
ret
sub
pushf
adc
sub
push
ret
mov
jo
es
leave
and
idivl
sub
cs
mov
mov
cld
clc
pop
sarb
and
in
mov
repz
jge
pop
push
cmc
outsl
mov
out
cmc
nop
aas
test
adc
adcb
and
inc
out
nop
lret
frstor
dec
dec
icebp
jo
imul
and
mov
sub
dec
inc
sub
mov
mov
push
jae
shll
into
inc
jnp
scas
aaa
jmp
mov
pop
add
push
test
push
and
inc
test
sbb
dec
cmpsb
sbb
cmp
insb
push
test
and
jb
outsb
mov
inc
mov
jg
push
pop
mov
pop
sbb
test
inc
xchg
inc
push
dec
pop
rcrl
pop
test
les
dec
xor
lret
popf
adc
adc
sbb
or
sbb
xor
loope
into
shr
enter
pop
es
cmp
xor
cmc
cmc
lods
popf
in
jnp
imul
cld
je
jne
cmp
mov
jns
xchg
gs
test
mov
loop
imul
pop
sbb
imul
lds
jbe
lods
movzwl
mov
adc
sbb
ss
repz
ret
lret
hlt
or
xor
fisubrl
scas
in
push
and
loop
pushf
mov
push
jl
push
push
cld
repnz
test
pop
das
mov
inc
cmpsl
pusha
push
mov
mov
inc
popf
mov
repnz
mov
xor
lahf
add
pop
mov
fistpl
sub
notl
push
pop
fs
xchg
add
mov
add
cld
mov
aam
int3
xchg
or
inc
jge
mov
dec
push
cwtl
cs
inc
or
iret
fisubl
jnp
loop
stos
push
in
jb
sub
ds
jecxz
jp
out
stos
mov
sbb
jo
mov
stos
mov
les
repz
inc
pop
in
cmp
push
mov
xchg
ss
sbb
add
jnp
or
add
rorl
inc
jb
mov
and
mov
std
mov
cwtl
mov
fdivr
loope
cmpsb
popa
jmp
or
inc
call
inc
insl
mov
mov
add
stc
cmpl
or
mov
cmp
pop
cmp
in
mov
push
push
push
xor
lods
inc
lcall
mov
gs
push
sti
jns
push
test
repz
mov
sbb
daa
mov
push
insb
mov
xor
sahf
call
ljmp
fadds
adc
mov
nop
dec
xchg
mov
mov
xchg
shll
test
xlat
jmp
aad
xor
and
je
fisubs
imul
ss
rolb
add
scas
xchg
lcall
mov
mov
mov
inc
mov
inc
adc
sbb
das
call
pop
loopne
imul
fwait
gs
jmp
mov
mov
loope
clc
dec
sub
mov
repnz
jnp
sub
pusha
sub
out
in
ret
mov
mov
pop
mov
icebp
cltd
xchg
aad
orb
lret
dec
fnstcw
mov
xor
xchg
mov
iret
bnd
sub
bound
push
mov
loope
data16
insl
pop
pop
inc
fsts
mov
mov
outsl
sbb
push
mov
cltd
cmc
mov
xor
mov
ss
mov
inc
shll
data16
notl
btsl
ds
imul
jmp
dec
clc
xor
rcrb
bound
cltd
js
test
fidivl
lret
icebp
adc
imul
mov
mov
jbe
inc
cmpl
and
mov
mov
and
push
cmpsl
mov
and
cmp
adc
out
jmp
pop
inc
lret
imul
es
bound
divb
jb
loop
sub
outsl
bound
bound
mov
mov
push
stos
in
inc
pop
adc
lds
les
out
and
ds
cwtl
mov
ret
cmc
xor
pop
cmc
dec
mov
pop
push
lock
sbb
xchg
scas
mov
and
into
mov
sub
mov
cltd
pop
fnsave
mov
or
adc
inc
mov
add
int
movsl
mov
jb
les
out
dec
cmp
stos
fucomi
and
fwait
mov
mov
dec
mov
push
jmp
out
in
cmc
insl
fld
fnsave
or
stos
add
pop
push
sbb
adc
repz
insb
push
clc
add
add
jmp
and
fldl
mov
dec
gs
mov
lcall
sub
xor
lret
mov
add
clc
imul
mov
push
xchg
cmp
xor
push
in
sar
lret
ret
and
push
das
mov
sbb
lods
ljmp
push
loopne
lea
or
je
mov
xchg
rcrl
cmp
test
cs
scas
cld
addr16
sub
call
sbb
out
jge
fsubl
xor
dec
je
subl
inc
cmp
cld
or
sbb
insl
xor
add
lret
out
call
sti
cmp
sahf
push
mov
movsl
or
cmp
pop
mov
or
movsb
shll
push
mov
inc
or
cmp
sub
push
lds
dec
xlat
mov
cmp
xchg
lea
adc
mov
adc
lret
jl
inc
imul
xor
stc
xchg
pop
repnz
mov
or
jg
jge
push
jp
mov
outsl
dec
sub
ret
int
push
imul
add
fisubl
neg
repnz
cmp
fldcw
inc
addr16
pushl
push
lock
pop
outsb
inc
dec
adc
repz
xor
sub
fldt
loop
push
scas
dec
rorb
and
stos
push
les
test
xlat
mov
in
push
mov
gs
or
or
scas
sub
out
mov
jg
lahf
mov
lock
pop
push
lret
in
jnp
jp
sti
push
add
adc
xor
cwtl
and
cmp
ret
or
fistpll
pop
repz
and
sti
cmp
adc
or
push
jecxz
and
and
and
ljmp
cmc
dec
in
fiadds
push
lret
dec
sbb
stc
stc
out
jg
sub
and
out
cmp
mov
fdivrl
inc
mov
mov
inc
lcall
fldenv
xchg
adcl
sbb
insl
ja
std
adc
jo
push
roll
std
nop
sub
int
sbb
pop
cmp
cmp
pop
loop
push
jecxz
rolb
or
push
les
add
out
aaa
mov
hlt
outsl
or
shr
mov
dec
je
pop
jns
mov
push
iret
xchg
hlt
mov
sti
cli
repz
push
pop
insl
fisttps
stos
sub
pop
loope
mov
out
push
xchg
aam
push
ret
sub
pop
pop
je
mov
je
rcrl
es
cmp
rcll
and
push
push
sti
das
jb
mov
sbb
jge
add
fsubrs
xchg
jns
pop
out
loopne
cmp
hlt
movsl
shl
aas
xor
inc
jae
adc
xor
or
test
and
cltd
mov
test
lods
mov
mov
pop
jbe
into
add
sbb
stc
testl
push
mov
rcrb
xor
push
dec
frstor
rcrl
sbb
iret
insb
and
into
dec
fildl
leave
mov
pop
decl
cld
xchg
popa
repz
cmp
sbb
add
inc
rcll
pop
mov
iret
adc
sbb
mov
jno
popf
or
pop
inc
popa
fwait
mov
push
lea
clc
pushf
dec
je
test
xor
dec
ret
fsub
adc
adc
xor
iret
jne
mov
popa
cmpsb
sbb
mov
pop
push
mov
popa
cltd
out
sub
mov
arpl
inc
sbb
push
inc
pusha
lds
or
movsb
and
push
jb
cmp
lcall
jge
ret
add
inc
or
scas
xor
ret
push
aad
mov
jae
in
push
push
movsl
jo
xchg
test
dec
jge
ret
cwtl
rclb
xchg
iret
loopne
push
ret
xchg
jle
sbb
fadds
and
sub
push
fadds
and
push
mov
movsb
jle
sar
and
sbb
mov
scas
inc
rcrl
xchg
icebp
mov
pusha
insl
dec
jmp
xchg
jnp
sub
mov
movsb
stos
ret
mov
mov
orl
fistpl
fcmove
cmp
scas
cmp
out
rclb
jmp
xor
or
sbb
jns
scas
test
adc
das
mov
xchg
leave
sub
mov
iret
add
push
pause
jo
cmpsl
adc
mov
lds
jl
cs
mov
test
clc
mov
clc
cmp
bound
sahf
adc
push
xor
sub
mov
popf
add
out
cmp
imul
jmp
push
pop
clc
lds
in
mov
or
enter
js
or
and
aaa
out
enter
cli
cmp
stos
aad
enter
xchg
scas
ret
int3
mov
pusha
xchg
jo
cmp
push
das
in
add
sbb
push
cld
pop
sub
das
xchg
mov
sbb
adc
lret
dec
mov
movb
adc
pop
into
in
mov
jno
or
adc
cmp
or
test
loopne
mov
stc
adc
xlat
and
push
mov
ljmp
lahf
pushf
test
lods
out
pmullw
cmpsl
enter
jecxz
mov
cmpsb
sub
outsb
sbb
pushf
fwait
lea
push
es
mov
jmp
test
mov
fidivl
movsl
ss
leave
or
push
fcmovu
fnsave
cs
sbb
cmp
ds
mov
scas
and
xchg
dec
sbb
cld
push
cmp
mov
fimull
test
es
ljmp
rcll
orb
pop
xor
pop
inc
aam
and
push
pop
mov
stos
outsb
push
popf
iret
or
mov
repnz
repz
leave
jmp
xor
lret
xchg
mov
or
adc
adc
pop
shlb
loopne
inc
cmp
in
idivl
sbb
test
sub
mov
mov
mov
mov
stos
and
push
or
pop
out
mov
sub
jge
cmp
mov
dec
push
cmp
in
call
pop
stos
addl
fcmovnbe
ret
enter
push
and
into
xorb
testb
mov
mov
sbb
ror
sbb
mov
inc
addb
out
movb
xchg
push
mov
pop
sahf
daa
lods
dec
mov
cld
stos
cmp
or
ret
xor
push
hlt
js
aas
je
xor
aad
pop
ja
loop
ss
cmp
in
call
mov
and
sub
mov
aad
pop
jp
cmp
jo
mov
test
inc
pusha
ss
push
mov
pusha
testl
movsb
iret
add
pop
lret
clc
adc
add
adc
loop
sbb
aad
cmp
test
push
xchg
ret
leave
mov
int
jl
lds
cmpsb
add
add
push
gs
cltd
popf
mov
into
xchg
call
xchg
cmp
bound
cmp
inc
mov
mov
or
xchg
fcomps
xor
pop
mov
add
mov
add
mov
inc
inc
push
mov
pop
mov
push
lret
mov
int3
lods
xlat
dec
pop
dec
jne
dec
add
push
out
or
or
dec
fcoml
out
out
addl
clc
xor
push
cmp
mov
mov
testb
je
enter
std
popf
sbb
xor
sahf
fisubrs
aas
adc
jnp
add
ja
ljmp
or
jbe
in
mov
out
jbe
sbb
ljmp
mov
mov
or
xor
popa
adc
jg
addl
enter
outsl
fwait
repnz
push
movsb
cmc
out
push
dec
incl
cltd
shrl
adc
into
push
push
arpl
lcall
nop
icebp
or
mov
out
adc
call
cmp
and
cmp
adc
fs
jns
cmp
in
cli
pushf
outsb
aad
lods
andb
adc
imul
sti
fldt
push
inc
in
mov
js
push
sahf
das
fsubl
popf
bound
fldcw
jecxz
aaa
cld
packuswb
lds
dec
int
lds
jno
push
pop
sbb
push
pop
in
jge
adc
and
inc
fadds
shll
or
ljmp
sbb
jns
pop
es
or
leave
push
call
test
repz
test
xchg
call
or
mov
mov
cmp
mull
hlt
test
leave
call
cwtl
push
jo
jo
enter
daa
aam
mov
enter
jle
loopne
pusha
mov
ss
call
or
scas
mov
sbb
xor
sub
jmp
mov
mov
pop
jecxz
out
sar
orb
fnstcw
mov
push
add
sub
dec
inc
sub
jnp
inc
push
xchg
int
cwtl
jmp
ljmp
adcl
data16
push
pop
jl
push
cmp
push
gs
out
add
dec
xchg
push
pop
daa
pusha
sahf
mov
pop
stos
or
repnz
jbe
push
hlt
and
inc
lock
cmp
fdivl
xchg
mov
popf
insl
stos
mov
jp
in
or
lcall
cmp
cli
mov
sub
cmpsl
loopne
jg
inc
inc
jg
cmp
mov
cwtl
lock
sahf
jge
pop
jo
or
sbbb
jbe
filds
rep
mov
adc
pop
sub
jnp
push
js
cld
mov
std
add
je
fmulp
movsb
dec
cmp
mov
pop
dec
cmp
stos
sub
cmp
pop
mov
jle
popa
cmc
fcmovnbe
mov
or
rcrl
adc
cmp
lds
test
cltd
or
pop
ror
daa
push
pop
cmp
xchg
xor
int3
dec
inc
dec
test
add
dec
or
push
pop
pop
inc
enter
es
mov
pop
mov
xor
cmp
push
add
testl
scas
out
jle
outsb
dec
addl
mov
cwtl
popf
pushf
push
in
and
mov
push
mov
xor
lock
loope
std
test
les
push
bound
repnz
cmpsl
aas
cld
xchg
out
mov
aaa
push
mov
mov
cltd
pop
mov
aaa
mov
lock
mov
or
ljmp
cmp
je
fsubr
jo
push
mov
bound
and
loop
add
int
sub
out
mov
outsl
subb
mov
das
out
add
cmpsl
popf
fsub
mov
adc
repnz
fs
pop
push
loopne
jl
push
inc
fwait
or
push
push
xchg
fwait
call
rcl
movsl
lret
fsubl
outsl
test
mov
adc
mov
mov
push
pop
stos
mov
xor
out
jg
repnz
pop
jbe
xor
jecxz
mov
cmp
ret
cmp
xchg
jno
mov
movsb
add
dec
in
rol
stos
in
repnz
adc
mov
gs
cmp
or
mov
add
push
xchg
fmull
pop
xchg
jle
sbb
int
fstl
pusha
std
stos
shlb
outsb
repnz
popa
pop
sub
xor
jge
cmpsl
add
jno
adc
inc
or
loope
or
mov
jg
pop
and
adc
gs
pop
imul
mov
cli
loop
dec
shll
stos
pop
mov
xor
fcomps
cmpsl
test
mov
cmc
rcll
lahf
repnz
out
test
xchg
or
outsl
cltd
sbb
stos
repz
insb
aaa
xchg
cli
jmp
xchg
ss
sub
test
les
hlt
or
mov
out
pop
filds
loope
cmp
cmpsb
mov
or
test
aas
add
iret
out
sbb
push
sbb
shl
popa
sbb
aaa
imul
sbb
icebp
jl
push
sbb
scas
mov
push
dec
adc
out
mov
add
pop
cmpsl
xor
or
and
sbb
sbb
rolb
fadd
sbb
es
and
xchg
aas
add
cmp
cmpsb
aam
cmc
cmp
iret
sbb
mov
bound
repz
mov
xchg
xchg
movsl
in
loop
fsubl
xor
sub
sub
adc
je
les
cltd
out
push
test
popa
sbb
cli
pop
movq
xor
mov
jecxz
fimull
dec
adc
out
cli
cmp
movsl
xchg
insl
leave
std
fwait
adc
jb
movsl
dec
push
ds
ljmp
sbb
leave
sub
int3
cmp
pusha
jge
push
mov
adc
rorb
negl
imulb
jo
mov
mov
bound
mov
xlat
jmp
add
sub
ja
adc
jno
inc
and
aas
call
lock
mov
xor
xchg
inc
js
scas
sarb
out
das
sti
ret
roll
mov
xchg
sahf
xlat
xchg
fimuls
add
pop
mov
push
int
rol
adc
arpl
rclb
xchg
inc
imul
jns
mov
jne
sbb
js
mov
pop
clc
nop
iret
fidivrs
xchg
dec
pop
push
inc
lds
js
inc
cli
mov
push
orb
dec
mov
mov
data16
inc
cld
aam
fwait
pushf
push
repz
insl
lds
cmp
lret
repz
data16
mov
das
pushf
popl
push
mov
lret
jmp
shll
out
jo
imulb
fstpl
lcall
ret
insl
xlat
in
imulb
es
xlat
jl
out
and
fcmovnu
lods
imul
scas
loope
mov
les
pop
mov
push
push
rolb
and
xchg
push
lret
in
xchg
xchg
lret
or
out
pop
in
es
mov
mov
addr16
sbbl
xor
xchg
lods
dec
popf
adc
inc
push
ss
mov
dec
int
lret
sbb
push
mov
mov
mov
imul
sub
int3
adc
lcall
adc
filds
dec
dec
inc
idivb
or
icebp
shlb
icebp
test
push
insb
stos
jb
jne
jg
cmp
shll
mov
in
cmp
pop
mov
push
and
or
daa
mov
mov
rcll
sbb
arpl
popa
push
pop
insb
push
jo
mov
js
xor
ds
out
xchg
mov
loopne
icebp
aam
sbb
mov
loop
push
push
inc
int
push
or
xchg
pop
mov
ret
and
add
push
xor
rol
in
es
inc
je
jg
sub
aaa
inc
jae
loop
cld
hlt
add
bound
mov
aas
dec
pop
cmpxchg
pop
mov
das
fstpt
jmp
das
pushf
imul
lds
mov
xchg
movb
sub
scas
stos
fisubs
mov
jb
cmpsl
mov
idivb
popf
and
or
sbb
dec
stos
sbb
push
lods
cld
push
jmp
aam
out
pop
mov
mov
or
call
jb
sbb
hlt
or
lock
sbbb
dec
push
mov
jne
add
arpl
push
repnz
arpl
loopne
cmp
shlb
aam
test
mov
pop
das
push
fbstp
fwait
subl
push
aad
repz
stos
addl
addr16
mov
shlb
cmc
add
data16
xor
ret
mov
mov
icebp
and
lea
xchg
rol
stos
lcall
mov
adc
lea
push
jmp
je
lods
cwtl
out
xor
mov
pop
addb
out
fnstcw
lahf
pusha
test
insl
mov
adc
mov
mov
loope
les
dec
in
mov
scas
ss
int
cli
loop
icebp
loopne
cli
enter
sub
popf
dec
call
imul
xchg
lea
shlb
jno
ljmp
push
scas
cld
adc
lock
lahf
sub
into
and
push
inc
mov
es
movsl
je
lret
mov
jecxz
rorl
push
lock
inc
add
data16
mov
add
push
xor
dec
mov
sbb
fistl
pop
sub
aas
std
insb
testl
shlb
xchg
lret
aam
push
lcall
bound
bound
adc
inc
outsb
pop
push
cmp
sahf
lret
mov
in
jge
xchg
cli
bound
ret
out
mov
pop
movsl
pop
mov
fimuls
or
dec
xor
addl
out
scas
jle
aas
xchg
lods
imul
stos
enter
jle
push
movsb
and
pop
and
pusha
lods
pop
push
into
aas
pop
stos
sbb
fadd
mov
push
jg
jg
rcr
fcmovu
insl
mov
lds
cs
es
jg
and
dec
cmp
mov
lcall
cwtl
in
dec
ds
cmp
lcall
cltd
sub
push
cmpsb
and
shl
into
idivl
or
cmp
xchg
pop
adc
xchg
fmuls
fwait
dec
pop
and
loope
or
cs
mov
nop
sub
jo
mov
in
call
test
mov
cmpsl
sub
roll
xor
nop
repz
pop
mov
jecxz
mov
rolb
xchg
adc
sti
int
inc
lret
mov
mov
daa
pop
cmp
dec
dec
sbb
iret
nop
or
push
mov
jo
xchg
lahf
xchg
scas
add
cmpsl
push
idivb
mov
mov
sub
or
jecxz
sarl
push
adc
enter
aaa
repnz
in
pop
jle
out
sub
mov
fs
cmp
and
stos
cmp
movl
mov
shrl
add
or
lret
mov
push
sbbl
ret
mov
out
lret
mov
test
sub
push
pop
pop
in
jns
ja
cmp
fnstenv
push
adc
aam
mov
pushf
insl
ja
add
sbb
inc
and
adc
fbstp
lret
pop
icebp
jl
or
mov
fnsave
hlt
dec
sub
int
cmc
mov
inc
sbb
jge
mov
clc
rclb
adc
out
or
xchg
mov
jns
mov
scas
or
add
shr
sbb
scas
jl
push
adc
ret
lret
pop
mov
iret
outsl
ficoml
enter
lods
ror
pop
mov
xchg
int3
mov
scas
imul
pushf
movsl
in
mov
mov
fs
dec
addr16
test
sub
pop
mov
xchg
and
sbb
inc
mov
sti
add
andb
cmp
repnz
lock
lods
and
int3
jo
fnstcw
xor
int
jp
insl
adc
out
loope
inc
jae
sub
repz
subl
call
sarl
xlat
or
mov
sti
xchg
test
xor
xchg
fwait
jns
aam
or
adc
mov
pushf
and
lcall
mov
xchg
add
jb
clc
gs
sahf
jge
mov
repz
stos
data16
sbb
fmuls
and
sti
and
xor
mov
es
cltd
imul
jecxz
movl
inc
add
pop
mov
out
jne
out
pop
or
cltd
adc
stos
jle
jo
add
int3
xchg
sbbl
sub
in
mov
push
fldl
jge
notb
dec
cmp
pop
adc
je
xor
adc
mov
push
hlt
movsl
mov
iret
dec
enter
pop
repz
jmp
fildl
gs
cld
pop
lods
pop
xchg
lahf
pusha
push
es
repnz
scas
dec
pop
cmp
and
pop
push
fcmovnbe
adc
cmp
idivl
or
and
add
and
addr16
push
rolb
jl
test
jp
xchg
mov
mov
xchg
sub
or
pop
or
adc
push
pushf
popf
test
sarl
xchg
mov
jae
pop
rcrb
jp
sahf
test
jge
xor
pop
mov
loopne
xchg
les
popf
push
sub
int
cmpsl
dec
int
stos
dec
mov
daa
cmpsl
xor
adc
cmp
scas
jg
faddp
pusha
adc
hlt
cmp
or
idivl
xchg
stos
cli
cmpsb
lahf
test
aam
mov
push
fsubr
repz
stc
lds
xor
cli
pop
add
inc
or
pop
test
cmp
push
cli
icebp
mov
push
add
xchg
into
cmp
mov
adc
imul
mov
mov
push
daa
pop
pop
stc
and
jnp
add
xchg
push
testb
shr
mov
sahf
pop
bound
mov
ss
xchg
rclb
sar
arpl
jno
push
dec
jnp
int
jns
sti
ret
lret
lods
dec
iret
outsl
insl
das
cmpsb
shll
add
jp
pop
xchg
fidivl
pop
test
test
push
pusha
mov
mul
lds
cmp
test
or
inc
ret
imulb
mov
sub
aad
cs
adc
xchg
adcl
cmp
sub
pop
mov
daa
adc
cwtl
and
and
jmp
out
and
fwait
mov
test
sbb
push
mov
mulb
sub
mov
sbb
int
loope
pop
dec
ret
fadd
fcoml
cwtl
adcl
int3
into
jp
js
mov
loope
pop
mov
stc
lcall
mull
cli
and
xchg
leave
pop
dec
sub
out
bound
pop
jne
add
fisubrs
test
pop
jmp
jne
pop
jnp
cmp
pop
cmc
push
mov
stos
mov
dec
shrl
test
imul
rcrb
ljmp
xor
imul
cmp
aam
ret
push
jne
add
xlat
iret
push
cwtl
or
sbb
lcall
decl
insl
push
lods
jl
lcall
add
pop
dec
mov
sbb
int3
xor
jge
sub
xchg
pop
cwtl
lret
out
push
les
js
pop
cmp
lock
insl
jmp
pop
sbb
mov
mov
adcl
mov
sbb
jle
inc
scas
imul
js
push
cwtl
das
jge
sbb
sub
call
out
out
xchg
jge
inc
gs
jle
mov
pop
xchg
pop
add
dec
repz
loope
std
push
imul
insl
pop
dec
mov
mov
sahf
int3
dec
adc
xchg
hlt
mov
ds
inc
xchg
jno
pop
in
popl
rcr
pop
scas
cmpsb
push
ss
push
jle
in
mov
add
jecxz
xor
mov
inc
hlt
rorl
xor
or
push
pop
pop
mov
sub
outsl
sub
jno
cmpb
and
or
icebp
jg
pop
jle
inc
and
sub
adc
scas
movsl
loope
nop
loopne
push
adc
jno
mov
pop
inc
lods
dec
lcall
push
mov
xchg
add
adc
mov
and
cs
mov
ret
jne
xchg
fidivl
mov
arpl
mov
xchg
hlt
addr16
push
outsb
addb
xor
test
cs
cmpsb
push
xlat
sub
jbe
cmpsb
adc
xor
or
lret
mov
lret
aas
push
xor
push
stc
lods
les
xchg
jno
pop
cmp
jo
rcll
stos
shlb
rcl
sti
xchg
mov
test
adc
lds
shll
jae
push
xchg
dec
push
repnz
xchg
icebp
push
xchg
and
xor
call
mov
xchg
mov
loop
xchg
and
aam
dec
mov
push
add
icebp
stc
cmp
iret
pop
push
pop
adc
enter
mov
in
idiv
push
sbb
mov
lock
push
clc
pop
or
notl
jne
shrl
mov
adc
mov
pop
adc
adc
push
xor
jmp
pop
sub
jb
and
mov
pop
or
rcrb
sub
outsl
mov
pop
push
cmp
icebp
into
movsl
gs
push
sub
test
test
mov
xchg
daa
jnp
aaa
or
cmp
lcall
movsl
xchg
subl
cmc
cwtl
mov
sbb
mov
sub
xor
inc
push
insl
push
add
jno
jle
or
fs
imul
inc
shr
movsb
add
test
push
bound
fwait
imul
js
negl
out
popa
mov
mov
stos
repz
and
test
fwait
jo
add
fadds
loop
mov
inc
stos
roll
mov
rclb
sub
fldenv
or
mov
mov
out
jne
add
add
in
cmc
mov
jo
mov
cmp
pop
dec
pop
addr16
in
adc
fcmovu
mov
stos
rcll
xor
icebp
push
dec
jb
sbb
cmp
jecxz
loopne
lock
jge
pop
aaa
push
xor
mov
fucomip
dec
movsb
push
in
ret
mov
mov
cld
dec
out
adc
ss
push
hlt
xchg
stos
mov
jecxz
mov
and
fs
es
addr16
scas
mov
adc
int
mov
pop
sub
dec
xor
push
or
cmp
jle
jo
scas
push
mov
shl
sbb
scas
and
js
js
mov
cmp
loopne
insb
lea
fsubl
stos
mov
jnp
jb
in
icebp
lea
shll
insl
jb
mov
xor
rcrl
mov
iret
test
insb
repz
test
fdivrp
pop
mov
test
or
sahf
add
xchg
addb
dec
adc
lods
mov
sbb
mov
adc
ret
fistpll
mov
dec
jnp
flds
adc
dec
ds
loope
pop
scas
xor
inc
in
fdivl
mov
imul
inc
lea
movsl
xor
pop
and
movsb
pop
in
xor
sub
fnstcw
test
outsl
jae
xchg
and
pushf
insb
pop
cmpsb
pop
outsb
addr16
cmc
sti
jl
jne
rclb
mov
push
loop
sub
daa
cmp
aaa
gs
mov
jns
loopne
lock
imul
inc
mov
insl
pop
xchg
in
icebp
sbb
lock
mov
loop
push
cmp
sar
ret
xor
mov
cmp
add
cmp
outsb
stos
mov
mov
lods
test
sahf
cmp
in
xorl
enter
dec
push
ret
shr
jae
rolb
pop
push
in
sbb
addr16
nopl
out
mov
inc
pop
lret
cmp
mov
push
adc
fmulp
dec
in
sub
pop
lret
fisubs
jge
fs
aad
cwtl
lahf
arpl
add
sbb
lret
lock
mov
andl
xchg
clc
test
push
push
movsl
cs
push
out
imul
mov
xor
faddl
push
popa
test
fmul
aam
xor
fimuls
stos
testl
int3
ljmp
mov
push
and
orl
data16
repnz
cmpsl
test
shrb
xchg
sub
std
mov
xchg
xchg
or
jl
fnstsw
push
mov
aad
sbb
pop
gs
xor
shll
or
js
mov
sub
popf
pushf
xlat
fdivl
pusha
and
cmc
lods
out
jb
out
adc
xor
mov
mov
inc
mov
lea
xor
sub
pushf
ds
int
sub
insb
push
jne
scas
je
xor
or
jno
repnz
push
rolb
aas
mov
popf
adc
pop
and
push
sahf
jb
scas
fcomps
cmp
cmp
push
push
dec
mov
shll
mov
mov
cmp
fimull
cwtl
jmp
xchg
push
cltd
das
jp
adc
in
sub
jl
mov
sbb
and
or
mov
add
sbb
inc
subl
xor
aas
pop
mov
mov
js
jnp
out
push
int
pop
je
stc
popa
push
mov
pop
repnz
push
cld
push
push
dec
in
cmc
fimull
cmpl
cltd
repz
jecxz
imulb
mov
and
sub
test
cmp
hlt
loopne
ret
pop
enter
test
or
add
mov
addsd
push
mov
push
stos
rolb
sbb
sub
sbb
addl
cwtl
int
arpl
andl
sbb
inc
ds
mov
ja
push
nop
jns
and
sbb
insb
mov
pop
aas
cmp
add
cmp
fistl
jbe
mov
inc
xchg
int
jmp
jmp
ds
dec
cmpsl
bound
mov
mov
or
int
lock
daa
push
rcrl
sbb
es
es
inc
shlb
outsl
dec
sahf
in
xor
pop
mov
push
inc
pop
sbb
popf
mov
add
xor
call
and
sbb
cmp
pushf
xchg
adc
mov
call
inc
dec
nop
mov
cmpsb
mov
repz
add
mov
rcr
arpl
or
xor
dec
cmc
in
aam
xchg
bnd
cmp
ret
addr16
cmpsb
fdivrl
iret
add
jns
or
ret
bound
incb
jmp
daa
pop
insl
push
aad
sbb
popa
jp
or
call
jno
dec
jmp
inc
int
jp
mov
imul
and
es
movsl
jmp
or
int3
mov
sub
xchg
add
ret
sub
pop
enter
jbe
and
push
adc
idivb
inc
xor
repz
repnz
addps
hlt
addr16
push
filds
dec
cmpsb
loop
sub
stos
lahf
out
in
jne
xlat
clc
xchg
popa
clc
outsl
jo
dec
test
orl
mov
push
imul
add
dec
lcall
fists
pop
jecxz
jb
and
stos
test
xrelease
xchg
insb
lock
jno
stos
lret
stos
inc
mov
mov
mov
lock
movsb
jp
decl
or
sbb
push
insl
push
js
pop
aaa
pop
xchg
push
out
repz
in
or
ret
fisubrl
mov
clc
rolb
loopne
add
mov
push
sub
stc
cs
pop
pop
inc
sbb
aad
mov
pop
pop
jle
or
popf
sub
or
pop
xchg
mov
es
shl
dec
aam
cltd
in
inc
cmpsl
or
mov
mov
out
inc
cmpsb
outsl
jbe
shll
inc
pop
sbb
cmp
and
in
lcall
push
arpl
pop
jg
add
addr16
sub
add
enter
or
jmp
push
or
aaa
or
stc
ret
sub
lcall
or
push
int
clc
out
xor
xor
pop
rolb
subl
int
scas
push
lods
mov
fisubl
repz
sbb
inc
pushf
test
jg
enter
or
adc
adc
push
addb
xor
out
inc
sbb
aam
cs
gs
stc
int
arpl
gs
inc
push
pop
cmpsb
mov
in
jmp
xchg
mov
nop
stos
dec
js
mov
test
pusha
fcoms
sbb
out
int3
xor
xchg
lods
lret
xor
adc
fcmovnu
jns
mov
das
iret
mov
insb
lret
stos
sub
js
dec
ljmp
inc
sbb
mov
and
add
adc
lret
fbld
push
jp
test
mov
and
jne
dec
push
or
in
ud1
xchg
loope
push
adc
and
cmp
sbb
pop
mov
insl
mov
nop
xchg
mov
arpl
sub
push
xchg
sbb
adc
mov
test
sbb
push
push
rcrl
inc
popa
enter
in
sbb
mov
jb
cs
mov
mov
add
repz
push
je
js
push
int
mov
test
inc
mov
scas
movsb
fwait
imulb
or
inc
push
test
mov
dec
xchg
cwtl
or
bound
pop
inc
add
and
pop
pop
call
pusha
mov
push
insl
pushf
mov
mov
cmpsb
cld
jb
movsl
inc
mov
clc
lea
fldt
cmpsl
pop
dec
pop
jo
adc
mov
xchg
and
dec
dec
iret
push
jmp
push
push
arpl
repnz
arpl
ret
aas
mov
lret
ret
fnstsw
mov
inc
inc
dec
jb
movsb
fwait
adc
aas
cmp
adc
or
lods
inc
sbb
lret
insl
mov
jecxz
jno
ffree
mov
xchg
fiadds
add
scas
push
inc
repz
mov
xchg
mov
cmp
aas
sbb
fldl
div
add
cmpsb
ret
popf
subl
cld
call
jmp
jl
addb
mov
add
lods
cli
cld
out
add
mov
dec
ss
and
movsl
push
dec
data16
cli
cmpsb
jno
in
and
jo
pop
cmp
fs
movsb
sub
call
adc
sub
pushf
lods
push
sti
frstor
data16
push
std
xor
xchg
jmp
and
ret
addb
xor
and
ret
cmp
cltd
adc
mov
and
in
mov
xchg
fcomps
inc
insb
aam
data16
xchg
mov
and
push
ret
fstpt
jae
cmp
push
js
pop
test
mov
loopne
mov
ret
mov
outsl
fcoml
ja
add
adc
mov
jb
pushf
into
scas
shlb
xchg
aad
lock
dec
ret
mov
sbb
stc
clc
pop
push
lea
les
call
xchg
out
es
faddl
cld
pop
fdivrl
or
into
cmp
ret
lods
mov
xor
aas
movsl
jg
xor
lods
inc
push
mov
daa
xchg
mov
mov
xor
cmp
and
lahf
pop
jae
scas
sbb
xchg
loope
push
sub
add
pop
sbb
cmp
mov
mov
xchg
int3
push
jno
cmp
inc
mov
int3
cmp
jno
mov
inc
cmpsl
fstps
shrb
jb
inc
mov
and
imul
jnp
xchg
sub
cmp
push
push
iret
shl
mov
cmpl
ret
and
insl
add
icebp
cwtl
jo
jl
out
cmp
data16
outsl
and
xchg
jne
sbb
xor
roll
les
int
push
push
push
cmpsl
int3
cmp
xor
jp
dec
mov
dec
jg
loopne
sub
xchg
xchg
and
xor
push
js
out
data16
jne
stos
sarb
jmp
imul
push
sub
jns
and
rol
sti
fcom
repz
int3
add
clc
test
fld
mov
add
leave
sub
test
add
cmp
fnsetpm(287
jecxz
repnz
pushf
mov
jnp
rcr
push
fbstp
popf
outsl
test
mov
nop
and
cmpsb
push
and
test
pop
jno
pop
adc
cmp
xchg
mov
imul
popf
or
adcl
jp
and
bound
shll
dec
ficompl
mov
xchg
test
arpl
pop
scas
sub
sub
cs
cltd
ret
int
out
xor
fdivs
jns
mov
lret
into
and
dec
insl
inc
add
out
add
or
or
push
movsl
xchg
outsl
mov
or
inc
and
jae
fildl
jno,pt
pop
lret
push
aam
adc
imul
sbb
mov
outsb
pushf
push
or
jmp
sbb
pop
orb
xlat
subb
out
sbb
lret
mov
ss
lret
push
sbb
out
jle
add
fists
aaa
mov
int
mov
in
addr16
and
adc
and
and
gs
xchg
fidivs
inc
jns
jg
icebp
data16
call
into
pushf
or
and
and
leave
and
fcomp
lret
in
leave
mov
cli
sub
lock
fnsave
mov
loope
cld
mov
outsl
and
std
pop
xchg
mov
fadds
stc
shrb
xchg
lahf
push
dec
cmp
inc
sub
add
in
jg
shlb
cwtl
jo
mov
fwait
stos
lcall
jbe
jns
push
push
nop
jmp
push
adc
push
inc
es
loope
arpl
mov
rorl
stos
dec
adc
push
jecxz
mov
mov
xchg
and
test
push
mov
mov
and
nop
fildll
js
jo
and
mov
push
movsb
repz
pop
jmp
pop
sbb
pushf
add
pop
mov
loop
dec
repz
lret
mov
mov
sub
push
mov
shrl
es
in
dec
nop
mov
enter
xchg
inc
cmp
movsb
adc
das
mov
pushf
adc
ret
jge
or
inc
or
sbb
sub
push
cmp
out
scas
cmp
jle
ss
arpl
ds
push
adc
fdivl
fidivrs
popf
fidivs
ret
stc
lods
xor
push
scas
push
xor
xor
ret
stos
sub
pop
xchg
jne
and
sub
jns
out
dec
insl
xor
ret
and
adc
js
in
sahf
shrl
es
stc
cltd
aaa
or
call
xor
push
pop
xchg
lahf
pop
or
aas
or
pop
aas
scas
push
push
cmp
lea
data16
pop
inc
xlat
lret
push
xor
repz
das
insb
pop
mov
out
call
int3
pusha
hlt
lcall
jl
fnsave
and
or
cld
sti
cmpsb
xchg
fidivrl
adc
cmp
popf
ljmp
sub
jns
xchg
mov
les
mov
inc
lahf
xchg
sbb
out
sbb
mov
leave
jae
stos
iret
cmpsl
sub
icebp
bound
mov
and
test
fadds
cmp
xchg
je
mov
adc
mov
cmc
lret
sub
pop
add
and
add
jo
sbb
lock
or
in
mov
cmpb
std
mov
xor
imul
jl
test
push
adc
sub
fucomp
push
insl
jno
push
cmp
pop
cmp
shl
xchg
loop
jbe
inc
cwtl
mov
mov
nop
movsl
pop
sbb
cwtl
imul
stos
push
mov
cwtl
test
push
icebp
push
xchg
fwait
pop
dec
sub
popa
sub
push
shll
leave
xchg
jg
and
fistl
pop
icebp
xchg
negl
jns
jo
fildll
cmp
sub
rcll
dec
imul
xchg
dec
loopne
lret
mov
cmp
aaa
pusha
imul
aas
sbb
int3
bound
bound
dec
push
xchg
sbb
inc
rcll
mov
sub
test
add
xchg
mov
push
pusha
lahf
jae
pop
ljmp
loope
ss
rorb
mov
loope
jns
mov
rcrb
test
push
mov
lock
dec
xchg
aam
lahf
rclb
xchg
into
or
scas
jb
add
arpl
imul
cltd
add
scas
mov
loop
lds
roll
ds
xchg
hlt
das
imul
popf
movsl
jns
ret
push
dec
and
icebp
lea
pop
jge
scas
cld
or
lods
enter
subl
pop
bound
sub
fsubl
jno
hlt
mov
addr16
pop
or
dec
add
pop
dec
or
add
mov
or
sbb
sbb
rcl
jo
int
sub
fs
and
lock
rcr
dec
fidivrl
icebp
rcrb
mov
inc
dec
mov
iret
sub
or
fsubrs
test
jne
or
imul
test
call
mov
ja
leave
adc
jecxz
lods
add
mov
test
mov
negb
enter
push
ss
aaa
pusha
nop
aam
pop
std
loopne
dec
adc
repz
inc
pop
cmp
add
ja
idiv
push
cs
dec
cwtl
jle
hlt
xlat
push
mov
out
fimull
in
xor
sarb
mov
sbb
cmp
vpunpckhwd
into
es
fldenv
mov
lcall
mov
dec
mov
pop
lds
sub
out
mov
in
dec
dec
ss
add
push
mov
or
mov
lahf
cld
fadd
ja
or
loope
or
cmc
pop
and
mov
call
push
pop
fstpt
pop
inc
mov
jb
or
rolb
inc
cmp
cld
add
xchg
cmpsl
outsl
insl
ret
xchg
int3
insl
daa
mov
fucomp
pusha
sub
dec
cmpsl
xor
or
pushf
aad
add
jmp
movsl
inc
mov
loop
mov
fsubs
adc
insl
out
sbb
dec
cltd
mov
hlt
cmp
push
inc
in
xchg
sub
jbe
mov
ret
lahf
fcoml
stos
xchg
sub
xor
push
in
clc
dec
pop
mov
mov
jg
xor
mov
fwait
dec
arpl
mov
or
inc
adc
sti
and
inc
int
mov
or
mov
xor
adc
cmp
dec
dec
mov
pop
inc
cmpsl
xchg
sub
in
sbb
lahf
aam
hlt
scas
jmp
fwait
cld
in
stc
inc
dec
lcall
cmp
imul
shl
inc
jae
int
xchg
inc
fdivrs
dec
arpl
test
mov
xchg
out
hlt
adc
jnp
sbb
cmp
sub
jnp
pop
int3
lods
push
mov
int
sbb
xchg
cmpsl
dec
sub
mov
shll
test
cmp
aad
mov
in
test
outsb
pop
push
inc
xchg
sti
lcall
out
xchg
lods
mov
mov
xchg
gs
les
int
jb
dec
push
add
dec
cwtl
lods
and
roll
cld
sub
mov
adc
xor
or
push
add
lea
in
mov
adc
xor
add
dec
jecxz
les
jno
mov
adc
fs
repz
push
dec
dec
lcall
sbb
xchg
cmp
cmp
movsl
lods
sahf
insl
arpl
scas
mov
mov
and
dec
inc
and
xchg
nop
pushf
cmpb
enter
inc
sbb
cmp
inc
mov
cmp
jecxz
xchg
or
jno
imul
xchg
sbb
daa
shrl
jmp
ja
mov
inc
push
subl
dec
rcrb
cmp
push
jb
add
sti
mov
fwait
cmpsl
xor
scas
punpckldq
loop
ret
cmp
scas
mov
subl
xchg
test
add
push
cli
js
and
decb
sahf
int3
pop
insb
sub
ret
lret
je
dec
xlat
test
sub
push
sbb
sub
xor
or
jb
sbb
mov
pusha
repz
cmp
xor
add
popa
or
leave
lods
pop
mov
adc
loop
ret
add
xor
adc
sbbl
cmpsl
pop
lods
dec
repnz
sub
int
mov
push
pusha
add
or
or
cmp
jne
loope
jmp
push
jae
add
call
aas
push
xor
xchg
shld
pop
pop
les
jg
scas
push
xchg
mov
or
jae
out
imul
sub
xor
test
jecxz
pop
pop
pop
test
dec
mov
roll
fst
mov
adc
shl
push
push
jle
xor
mov
mov
jmp
pop
test
mov
out
pop
push
scas
inc
inc
pop
in
xchg
lock
mov
push
mov
mov
lea
aam
iret
dec
insb
jbe
mov
bswap
das
xchg
pop
jg
push
outsb
push
adc
aas
in
testb
cmpsb
addr16
rolb
test
and
pop
sarl
and
mov
adc
ss
sbb
sub
mov
sub
cmpsl
cmp
lret
xchg
sub
jmp
cmpl
aam
sbb
ret
iret
daa
es
in
xchg
xor
push
jnp
or
fdiv
sbb
mov
cld
ss
xor
test
fmul
and
sub
mov
js
jl
dec
lcall
sbb
popf
cli
lds
stos
das
insb
and
shl
xchg
inc
stos
shl
pop
pushw
sbb
ret
mov
mov
ss
ret
jp
sub
ret
sub
int
mov
dec
ss
dec
sbb
xor
xchg
test
mov
out
nop
jno
mov
adc
and
dec
cmp
mov
popf
pop
adc
xchg
or
gs
movsl
or
inc
out
push
sbbl
inc
loop
scas
add
mov
lods
fbstp
xor
add
aam
pop
cmp
dec
or
clc
cmpsb
shl
sub
addl
sarb
scas
mov
decl
and
inc
lcall
mov
aas
ds
outsl
mov
sub
movsb
daa
sbbl
shll
mov
repz
xlat
mov
cmpsl
add
mov
shrd
or
inc
pop
xchg
ret
aad
jle
mov
mov
jl
push
jp
jecxz
orl
into
into
icebp
enter
pop
and
mov
cmp
les
jle
stc
bound
xor
cli
popa
rcr
lahf
imul
push
lret
jmp
mov
mov
xchg
dec
mov
push
jo
stc
push
cld
mov
mov
inc
pop
mov
in
lgs
cmpsb
mov
mov
pop
jb
sub
std
and
inc
mov
popf
into
in
sub
lret
clc
es
repnz
mov
movsl
mov
xorl
ja
dec
test
mov
dec
add
scas
nop
bound
lods
lods
ficoms
fwait
xchg
mov
scas
add
testl
rolb
inc
jb
add
mov
jl
mov
cwtl
loopne
mov
mov
lret
and
xchg
xor
mov
dec
hlt
adc
mov
mov
pop
sbb
cmc
das
in
mov
jecxz
movsb
or
lds
ret
xlat
bound
repz
jmp
pop
mov
sbb
ret
lahf
in
cmp
mov
es
cmpb
cld
xchg
xor
add
sbb
mov
pop
iret
pop
jb
inc
mov
fdivrl
jle
mov
in
sub
mov
push
mov
aas
inc
push
mov
sbb
test
or
iret
or
fcompl
lahf
hlt
inc
fwait
nop
ljmp
icebp
scas
lods
mov
sahf
xchg
and
mul
mov
adc
les
imul
outsb
int3
ljmp
cwtl
ja
sbb
pop
push
xchg
sbb
in
loopne
shl
loop
subb
jp
pop
test
xorb
add
loopne
dec
lahf
add
stos
sbb
or
xchg
jno
outsl
sub
pop
push
xchg
ret
mov
mov
jp
into
lret
mov
pop
add
mov
dec
inc
movsb
mov
int
fdivrs
xorl
and
or
jmp
ret
fisttps
test
push
push
inc
mov
sti
into
out
addr16
sub
sbb
xlat
xor
pop
mov
pop
repz
mov
loop
sub
in
or
pop
push
push
xchg
dec
pop
jle
sbb
and
and
jbe
xor
movsb
push
jnp
addr16
mov
mov
pop
lods
jl
out
in
adc
lock
bound
int
lock
fsubl
inc
js
and
cmp
mov
push
mov
pop
xchg
pop
mov
add
ret
ds
or
jnp
cltd
xor
sub
and
icebp
cmp
outsb
std
out
push
movl
inc
stos
scas
data16
inc
xor
mov
jmp
sbb
repnz
addr16
adc
push
dec
stos
std
mov
pop
add
dec
mov
lods
adc
ljmp
xorb
push
stc
xchg
pushf
sub
lea
sar
ss
shrl
ds
das
cmp
popa
out
pop
and
inc
jge
dec
jmp
aaa
fcoms
test
sub
xchg
xor
jae
out
inc
mov
xor
adc
mov
fidivs
bound
cs
fiaddl
cwtl
and
jnp
jns
adc
xchg
les
out
movsb
adc
or
xchg
or
and
xchg
dec
pop
test
pop
sub
adc
inc
lahf
xor
lock
fisubrs
pop
xchg
mov
hlt
insl
clc
fstpl
add
cmp
ja
xor
call
insb
push
lods
fisubs
add
push
xchg
rorl
lret
dec
bound
push
sarb
jmp
xchg
inc
pop
cmp
inc
lret
push
mov
xchg
xor
out
pop
adc
mov
addr16
ret
dec
cs
iret
insb
pop
jl
add
imul
xchg
shll
aad
daa
pop
jns
ja
dec
and
mov
push
push
lock
or
sub
aas
in
xor
sbb
insb
sbb
cld
into
dec
int3
jecxz
jl
sbb
shr
add
ror
pop
cs
cmpsb
adc
push
mov
cmp
lods
movsb
lret
fwait
inc
xchg
jecxz
pop
xor
mov
xor
out
xchg
inc
enter
sbb
leave
jno
or
sub
jnp
ret
aas
jp
imul
clc
mov
pop
cltd
outsl
jbe
lret
jns
ss
fisubl
hlt
adc
jmp
pop
xchg
dec
sub
mov
into
fucomi
and
loopne
xchg
movsl
movsl
push
mov
dec
xor
pop
not
cmp
jne
xor
cmc
push
add
lock
repz
lock
fbstp
call
sti
jae
vmaxsd
ret
adc
or
or
sub
aas
out
sub
stos
in
aam
push
cmp
lods
pop
cli
mov
xchg
int3
clc
sub
lret
ja
jp
cwtl
xlat
ficoms
int3
pop
cmc
adc
fwait
das
mulb
in
adc
mov
mov
jl
js
subb
out
add
loop
imul
movsb
xor
push
faddl
jl
aas
sub
add
in
inc
callw
push
sbb
inc
mov
jl
cmc
jmp
mov
ja
pushf
mov
fistpl
pop
mov
lea
aas
xchg
ds
stos
adc
push
repz
dec
inc
dec
xchg
push
jp
pop
mov
es
stos
inc
fdivs
cmc
pushl
sbb
push
call
imul
lahf
dec
mov
mov
pop
fbstp
leave
cmp
sub
mov
and
idivl
cmp
out
adc
scas
pop
lret
out
stc
mov
jge
dec
adc
push
add
push
cmp
inc
ja
push
add
jo
enter
fisubrs
push
xlat
imul
clc
sub
cmp
mov
jb
fucomip
dec
jle
push
ss
pop
ret
cmp
adc
push
fs
push
or
outsl
push
daa
push
mov
inc
inc
sub
dec
dec
ljmp
push
inc
dec
gs
outsb
adcb
into
out
and
dec
push
lock
inc
fwait
dec
adc
add
xor
into
hlt
and
push
in
mov
sarl
dec
and
push
inc
inc
jmp
lods
jle
push
leave
inc
mov
dec
lcall
dec
pusha
xchg
cmpsb
or
dec
xlat
stc
pop
pop
or
cmp
sahf
inc
jae
das
jbe
lahf
mov
pop
cmpsl
sti
movsl
or
call
and
push
shll
lahf
or
aaa
std
orl
pop
ss
nop
enter
lea
jb
aas
inc
nop
enter
repnz
shrl
popf
rcr
sub
pop
inc
sar
std
mov
mov
cmpsb
xchg
mov
push
aas
outsb
mov
mov
dec
out
dec
bound
or
into
cld
xor
movsl
pusha
mov
jg
push
ret
loope
stos
pop
or
sbb
xlat
push
imul
mov
popa
daa
dec
sub
shl
jnp
lods
in
sub
jnp
xor
arpl
and
xchg
jns
lea
or
dec
mov
int
push
mov
inc
pop
xor
jo
aam
mov
fdivrs
sub
or
aam
push
cmc
cmovge
shrb
xchg
inc
xchg
xor
mov
aam
lahf
icebp
push
fldt
xchg
test
fldl
xchg
jle
fcompl
stc
xchg
sbb
add
lods
jnp
dec
pop
xor
ljmp
sub
pop
xchg
out
cmpsb
call
fwait
pop
movsb
push
arpl
in
cwtl
and
je
xorl
push
push
xchg
clc
lds
fildl
sbb
xor
inc
outsb
jle
cmpsb
mov
inc
jbe
mov
les
mov
leave
mov
outsb
std
loop
adc
shl
inc
sub
gs
mov
lock
and
ret
lcall
les
xchg
pushf
mov
jmp
movl
or
test
aam
mov
mov
push
hlt
mov
addl
leave
add
or
mov
loope
stos
dec
leave
imul
jne
out
xchg
mov
xlat
lcall
divl
movsl
mov
mov
scas
scas
loop
push
sahf
insl
and
pop
shll
mov
fisttpll
xor
and
cwtl
mov
dec
sbb
les
sbb
in
hlt
jmp
cli
aam
push
and
pop
jecxz
push
xor
jmp
pop
add
or
push
adc
sub
sub
push
cli
inc
pop
idivl
push
jmp
stos
xchg
cmpsl
jmp
xchg
aaa
sarl
pop
out
pushf
mov
or
les
jb
xchg
shr
sbb
leave
push
mov
subb
sti
in
mov
sarl
push
out
inc
or
adcb
or
call
and
cmp
xchg
inc
jne
test
push
rcrb
inc
xor
jnp
push
cmp
mov
xchg
add
jb
sbb
pop
pop
inc
fwait
and
stos
stos
call
push
mov
sbb
insb
fadds
mov
push
repz
ljmp
outsb
xor
in
loop
cmp
jae
addl
test
fistl
pop
and
pop
mov
cmp
scas
xchg
pop
fcoms
rorl
mov
or
pop
inc
or
dec
gs
dec
shll
mov
lret
loopne
rcrl
pop
cmp
inc
jg
xchg
jl
ds
jmp
or
jb
mov
cmp
ficompl
arpl
or
inc
xor
test
sub
ficompl
in
jae
lock
and
pushl
dec
sub
jmp
mov
jns
ja
out
call
lcall
pop
out
into
mull
cmpsb
out
push
aaa
add
int3
dec
pop
jp
and
push
and
fbld
into
xor
repnz
cltd
aam
lret
sahf
addr16
sbb
cld
out
mov
insl
cmpsl
ljmp
and
cmc
pop
repnz
sar
mov
scas
das
inc
cmp
fwait
test
lret
or
xor
minps
in
mov
dec
loop
dec
xchg
shl
cmpsb
and
sbbl
jbe
add
in
mov
xor
dec
dec
inc
js
dec
test
jecxz
lds
push
xchg
fwait
sbb
xlat
sbb
shr
jle
loop
cmp
xchg
jle
or
mov
xchg
jns
je
jl
xlat
js
fwait
push
xchg
lock
cmp
enter
in
xor
sub
imul
sub
loopne
lcall
shlb
les
hlt
fldcw
xorl
mov
in
fcmovnb
jnp,pn
nop
das
das
subl
shl
fisttps
dec
xlat
pop
sti
ds
inc
jae
arpl
inc
cmp
aad
unpcklps
adc
inc
and
out
and
adc
xchg
adc
sub
cmp
and
and
jb
imul
pop
mov
lcall
cltd
mov
sbb
lods
jge
ss
out
repnz
pop
clc
rol
xchg
jbe
fcom
push
std
lods
mov
pushf
addps
arpl
out
and
push
dec
lea
dec
movsl
roll
xchg
int
xchg
pop
adc
lcall
cmp
test
gs
mov
mov
inc
repz
sbb
out
inc
flds
mov
sbb
test
jecxz
aam
movsb
dec
jg
xor
xor
cmp
int
sub
dec
sahf
sbb
and
jnp
mov
mov
jp
mov
test
cmp
pop
sub
jl
inc
mov
js
sub
aam
rcll
and
jbe
bound
dec
cmp
pop
inc
addr16
adc
jge
lahf
inc
in
and
adc
mov
jbe
mov
adc
mov
lock
shrb
and
cltd
movsb
pop
stc
cmp
roll
out
pop
jb
aad
push
pop
mov
jbe
sbb
and
subl
pop
inc
repz
adc
faddl
scas
scas
das
mov
adc
xchg
rcrl
lret
or
lock
stos
cmpsb
mov
iret
fidivs
pop
adc
cmc
loopne
ror
mov
mov
fstl
dec
cmpb
sbb
das
mov
cmp
icebp
nop
inc
push
int
or
rcrb
xor
sbb
fildll
xor
pop
dec
jb
call
cmc
lock
mov
and
mov
jns
cmp
je
loopne
mov
testl
sahf
subb
xor
sub
xchg
pop
loope
pop
cmp
lahf
popa
mov
sub
mov
xchg
sbb
add
mov
adc
shll
mov
xor
adc
lods
mov
lcall
cmpsb
sbb
loope
add
xchg
jmp
adc
daa
pop
jne
xor
sub
mov
sub
or
movsl
fsts
push
inc
loop
xchg
mov
xchg
mov
rorb
fidivl
lahf
test
movl
fwait
out
lar
out
movsl
push
mov
pop
lock
and
dec
incb
push
bt
jne
stos
mov
sbbb
dec
or
cmp
jg
outsb
icebp
jne
ja
or
inc
shrb
popf
fldl
add
test
pop
jbe
jl
hlt
and
in
xchg
lea
ljmp
jmp
sub
cmp
mov
arpl
inc
mov
mov
push
insb
add
lret
lret
mov
adc
jg
mov
xor
mov
cmpsb
out
jge
adc
test
scas
ret
push
cwtl
fucomip
ror
jmp
rolb
lcall
loop
stos
enter
adc
mov
in
add
xchg
pop
adc
push
iret
das
cld
ficoms
cmp
rclb
mov
out
popf
in
out
cmp
xor
push
lret
enter
add
adc
mov
cld
ret
pop
iret
mov
test
or
aam
js
xchg
cmp
bound
add
pop
icebp
add
aaa
adc
mov
lock
mov
aad
cwtl
push
lods
add
in
int
outsb
mov
cs
int3
xchg
fidivrl
xor
mov
push
lcall
mov
enter
mov
popa
aad
in
movsb
xchg
add
stos
data16
je
pop
call
cmpsl
cmc
lret
mov
addl
push
xchg
fistl
cmp
mov
lods
sbb
mov
push
mov
mov
xchg
xor
add
je
add
in
lods
jmp
adc
movl
stos
inc
xchg
inc
dec
fistps
add
mov
mov
roll
xchg
mov
xor
xlat
scas
out
mov
xchg
xchg
jnp
push
cmp
push
jg
add
and
lahf
inc
popl
mov
jnp
mov
out
mov
push
mov
sbb
out
xchg
sub
mov
xchg
insb
dec
cli
mov
xor
and
in
xchg
push
adc
push
and
bound
cmpl
fldenv
inc
out
sub
outsl
mov
jge
data16
or
jo
sahf
jmp
jnp
lods
pop
cs
scas
jns
sub
clc
mov
sub
and
jae
aam
divps
fcompl
movsl
push
loop,pn
sbb
mov
inc
lcall
in
mov
cmpsl
mov
sub
ljmp
xchg
pop
xchg
mov
ds
dec
addr16
mov
push
scas
clc
dec
rorl
push
sub
aam
cmpl
fisubrl
cmc
lcall
negb
mov
adc
lea
repz
push
clc
popf
rcrl
sti
sbbl
into
pop
scas
loop
popa
call
scas
dec
aad
repnz
daa
sbb
int
leave
std
shrb
jecxz
jp
push
fldl
out
cmp
xchg
jnp
push
inc
frstor
fldt
dec
call
jbe
adc
mov
cmpsb
test
xor
mov
mov
jno
cmpsb
adc
pop
mov
adc
push
inc
and
inc
jno
gs
xchg
in
lea
dec
dec
jl
inc
dec
gs
outsl
mov
mov
popa
test
stos
cld
popa
inc
inc
ficoms
nop
int3
std
push
xchg
shlb
and
fxch
pop
cmp
pop
dec
pop
lock
jne
add
insl
in
jge
jg
lea
cmp
rcll
shld
int
push
sbb
mov
adc
fildll
lds
das
arpl
in
mov
mov
scas
xor
cmp
sahf
ret
mov
jmp
pusha
sti
push
mov
push
scas
roll
mov
mov
int3
xchg
pop
icebp
arpl
push
cltd
loop
movsl
sub
bound
iret
lock
fimuls
jae
mov
sbb
jp
inc
jo
and
stc
mov
flds
jp
pop
xor
repz
cmpxchg
in
and
mov
dec
ds
loopne
mov
mov
adc
xchg
add
ds
sub
insb
cmp
and
mov
in
sub
sbb
jb
cmc
or
xor
daa
ljmp
lock
jge
cltd
xchg
inc
lods
dec
movsl
pop
jb
cltd
cmp
loop
jecxz
dec
mov
shr
int
jle,pn
push
mov
cmp
fiadds
aad
jp
jb
xchg
push
lods
mov
fimull
lods
movsb
incl
sub
and
loopne
decl
xchg
push
xor
xchg
adc
push
fs
cltd
clc
jmp
pop
stos
sbb
xchg
imul
rcrl
leave
ret
mov
out
push
sbb
idiv
sub
add
add
and
xchg
inc
test
mov
stc
scas
mov
jb
xchg
pop
add
and
std
add
dec
or
jnp
nop
and
xchg
dec
dec
jb
addr16
out
mov
push
insb
push
cs
xchg
cmc
sbb
data16
nop
mov
mov
cld
add
fdiv
jmp
scas
iret
fldl
out
inc
or
xor
test
jge
or
decl
lock
push
jae
jl
pop
lcall
gs
test
adc
and
sbb
dec
arpl
out
bound
sub
scas
out
int3
adc
adc
subl
cmp
das
out
add
popf
add
outsb
insb
mov
bound
imul
add
and
data16
enter
lods
xor
roll
mov
pop
jge
jecxz
lret
bound
add
outsl
adc
xor
stos
jg
popa
lea
cmp
divl
push
das
or
out
mov
pop
adc
in
add
xor
mov
jl
inc
xchg
rorb
test
out
lods
mov
push
imul
aad
xor
pop
sub
mov
push
test
and
and
or
ljmp
and
call
xchg
adc
test
add
push
sbb
jnp
jmp
fsub
in
ret
stos
ljmp
int3
lea
push
sbb
insb
fstps
hlt
pop
jae
jg
add
outsl
xbegin
xchg
mov
lret
jo
push
sti
aad
cmp
pop
clc
xchg
mov
adc
inc
lret
dec
or
pusha
fcmovnu
sbb
stos
adc
ds
loopne
mov
loop
cmc
lds
outsb
call
das
js
cmp
movsb
sub
icebp
mov
repz
adc
adc
sbb
push
divb
shrl
jns
push
icebp
and
xor
adc
xor
or
ror
jbe
mov
adc
xor
movsl
icebp
pop
lea
fsts
or
and
mov
cmp
cs
stos
push
cmp
stc
lock
insb
xor
out
and
xchg
loop
jle
cmpsl
fldl
xchg
add
mov
push
mov
int
jle
insl
pushf
push
cmpsb
jbe
loope
jmp
fadds
ds
out
idivl
es
fwait
sbb
pushl
mov
adc
lahf
xor
popfw
mov
mov
dec
xchg
inc
out
and
pop
mov
cmp
jl
lcall
cmp
mov
lahf
cmp
arpl
sub
ja
pushf
in
stos
aas
into
out
jge
or
and
sub
push
sbb
fsubp
sub
dec
jb
cmp
stos
icebp
les
inc
mov
ljmp
xor
mov
adc
add
jmp
sbb
test
mov
cmp
sar
sahf
cmpsl
sub
scas
pop
adc
xchg
mov
dec
aam
pop
cmp
mov
fs
dec
mov
jo
insb
sub
mov
push
lea
lods
je
in
jae
movsb
fs
jno
ret
hlt
jno
cmp
fcoms
pop
repz
lea
or
sub
loope
lret
lock
and
sub
pop
imul
movsb
jbe
mov
inc
sub
mov
xor
sbb
cmc
sar
scas
dec
mov
xchg
loop
xlat
je
adc
stos
or
sub
mov
pop
mov
sub
mov
mov
mov
or
lock
mov
mov
sub
scas
and
int3
test
bound
cmp
cmpsl
inc
cmp
jno
iret
mov
stos
xor
or
into
pop
mov
inc
xchg
sbb
mov
insl
cmp
pop
cmc
cmp
enter
adc
mov
push
jns
push
sub
test
or
stos
sbb
jne
sub
icebp
test
pusha
lea
insb
mov
push
adc
xchg
mov
into
call
cld
ret
push
rorb
mov
sbb
xor
idivl
ja
and
mov
dec
xchg
test
mov
pop
sbb
adc
mov
cmp
mov
cmc
or
test
cmp
fsubr
sbb
mov
inc
push
movsl
push
mov
adc
out
sbb
sbbl
insl
out
adc
mov
pop
sbb
mov
and
jge
cmp
andl
fisttpl
add
je
repz
popa
test
stos
xor
mov
pop
addr16
out
aaa
sarl
jb
or
sbb
ds
mov
adc
push
dec
in
call
lods
fidivrl
aaa
mov
xor
in
clc
mov
xor
push
push
sahf
xchg
rcl
jne
enter
inc
mov
pop
jge
ds
xor
mov
cmp
roll
dec
inc
rclb
sub
movsl
int3
shrb
in
pop
sbb
das
add
jno
add
adc
cli
or
cmp
sbb
inc
fimull
lahf
out
push
xchg
scas
push
and
xor
sub
jge
xor
mov
and
and
outsb
push
bound
jns
xor
mov
sub
fsubr
adc
xchg
or
xlat
test
xor
orl
fsub
adc
add
inc
mov
int
ljmp
popa
test
sahf
jge
addr16
outsl
bound
imul
xchg
dec
inc
sub
test
int
lds
jmp
repnz
and
arpl
xchg
xchg
addr16
aaa
adc
push
pushw
out
push
loop
jmp
mov
test
les
cmpsb
incb
pusha
jle
iret
adc
mov
clc
aam
lea
repz
xor
sbb
push
cmp
loopne
cmp
xchg
es
lret
js
ret
loop,pn
addl
lea
das
pop
push
es
or
jb
sahf
insl
mov
xchg
movsb
insl
das
or
aad
scas
fstpt
decb
movsl
push
and
outsl
xchg
stos
or
divb
ljmp
decl
mov
stc
and
jl
cmovae
fstpl
add
enter
and
fucompp
iret
aas
or
es
cmc
lods
push
sub
push
movsl
ds
xor
jo
movsl
add
pop
ljmp
xchg
or
inc
pop
sti
cmpb
cmp
sti
jo
xor
sub
daa
fs
imul
xor
inc
sub
int
sahf
jno
mov
push
pushf
fcmovnbe
insl
stc
es
mov
pusha
xchg
mov
test
outsb
mov
cmp
fld1
push
incl
and
adc
jge
test
fucomi
roll
jle
cmpsb
sub
mov
xchg
inc
test
rcrb
mov
jmp
sub
in
js
cmpsl
insl
xlat
lea
fmul
xchg
shll
mov
push
out
and
jno
std
xchg
mov
scas
or
ljmp
xchg
test
fistl
cmp
rclb
mov
jns
add
clc
sbb
sti
in
xchg
inc
add
ret
test
fcoml
xchg
loope
lods
and
sbb
cmp
mov
std
cmpsb
jno
jle
ja
pop
xorb
push
imul
xor
add
es
mov
xchg
lea
repz
test
movsb
push
jle
mov
test
lahf
jb
ffree
xchg
cltd
sbb
mov
cmc
call
jp
mov
pop
lock
inc
push
jno
xor
cmp
pop
in
lret
test
pop
pop
aad
pop
movsb
arpl
aaa
fwait
xor
push
popa
pop
mov
mov
cmp
cmpsl
aam
lods
jne
call
inc
je
sarl
xor
add
and
lret
sti
cwtl
dec
sbbl
test
and
inc
ret
cmpsb
sbb
fnstcw
sub
xlat
jne
sub
push
aaa
add
repz
loop
out
sub
repz
add
mov
adc
test
bound
out
in
jmp
out
push
push
pop
popa
mov
fdivrl
pusha
scas
mov
mov
adcb
test
in
sbb
jae
mov
call
sbb
shll
add
sbb
adc
sub
dec
jne
rclb
mov
cmpsb
xor
mov
sub
out
mov
sub
test
lret
mov
mov
call
aaa
lock
lods
cmp
out
pop
fwait
cmp
ds
ljmp
mov
sub
shl
nop
cmp
pop
aaa
dec
push
jnp
test
in
cmp
xchg
add
sbb
inc
mov
addr16
rcrl
ljmp
adc
fdivl
fmull
orl
icebp
pop
cmp
jbe
push
and
mov
xchg
xchg
cltd
lds
mov
mov
loop
popa
or
std
sarl
fnstsw
cli
add
test
dec
adc
and
lahf
dec
aas
outsb
push
insb
fistps
in
les
cmc
mov
fmuls
mov
mov
leave
fidivrl
pop
lock
add
cli
pop
mov
insb
ss
outsb
clc
mov
mov
dec
int
addr16
adc
scas
cmp
add
adc
ficompl
jg
jl
ljmp
cmp
push
ret
dec
dec
push
arpl
pop
js
sub
bound
idivl
leave
mov
sub
mov
and
sub
adc
std
lea
out
xor
xchg
scas
dec
cmp
xor
adc
xchg
mov
test
clc
negl
cmc
jmp
jecxz,pn
nop
addr16
pop
pushf
push
rclb
pop
adc
ficomps
inc
and
mov
mov
icebp
hlt
and
and
and
lds
dec
cwtl
bound
sub
jmp
add
in
dec
dec
repnz
shld
xlat
mov
mov
leave
in
jecxz
pushf
pop
sbb
hlt
jns
and
cmp
shll
mov
sbb
mov
push
das
jg
adc
jne
leave
xlat
push
popf
iret
lret
jno
adc
mov
out
or
or
push
mov
pop
ds
lahf
dec
pop
pop
stos
adc
mov
mov
pop
push
pop
dec
inc
inc
xor
push
dec
push
cwtl
iret
push
adc
sbb
icebp
loope
cmp
inc
hlt
in
cli
pop
insb
or
dec
stc
mov
cmpsb
ret
mov
leave
jbe
imul
and
and
xchg
lea
jg
push
int3
ja
cmp
test
outsl
xchg
int3
adc
push
lahf
xor
mov
decb
test
add
rcrl
xor
in
fadds
and
test
outsl
cmp
test
push
icebp
fbld
out
call
mov
jb
test
push
xchg
scas
scas
add
imul
push
sub
mov
out
add
adc
push
mov
es
ret
icebp
test
push
dec
lods
mov
nop
xorb
in
shll
xchg
push
adc
mov
and
pusha
push
fstpt
stc
mov
mov
out
rcr
mov
or
mov
rcrl
push
push
data16
push
ret
dec
pop
cmp
cmpsl
pop
jnp
repz
lret
sti
cmp
mov
pop
cltd
jl
jg
int3
mov
insb
imul
scas
rclb
xchg
fs
arpl
out
pushf
bound
mov
inc
std
xchg
fwait
cmp
jg
shrl
inc
sbb
shll
inc
fstpt
sarl
mov
add
lahf
fwait
mov
lret
xchg
movsl
sub
ficompl
lods
mov
cs
push
and
jno
xchg
in
test
lcall
test
xor
shlb
icebp
bswap
sbb
cltd
inc
notb
pop
sbb
pop
push
jecxz
mov
lods
je
pop
push
ret
jnp
sub
cld
and
rclb
pop
mov
xchg
or
pop
pusha
and
in
shll
add
mov
inc
xchg
sub
sub
mov
pop
sub
shl
inc
inc
and
insb
mov
aaa
dec
xchg
xchg
add
dec
sahf
mov
mov
or
xchg
push
test
into
xor
xchg
xchg
arpl
jp
jns
inc
scas
fistl
cmp
repnz
out
sbb
jg
loopne
stc
mov
xchg
cwtl
inc
fwait
repz
push
mov
inc
imul
out
add
in
sbb
mov
dec
cmpsb
mov
out
aad
inc
outsb
and
shrl
ret
push
nop
fisttps
out
test
pushf
or
jbe
mov
adc
lret
lea
jl
jp
mov
push
mov
call
cmpsb
jge
xchg
mull
sub
bound
adc
jbe
popf
enter
fiaddl
popf
add
pop
fsubl
adc
fldenv
mov
mov
mov
sub
mov
mov
mov
xchg
xchg
push
aad
mov
sbb
push
sbb
fidivl
insb
push
jo
sbb
xchg
pop
inc
and
and
inc
dec
jle
push
push
cmpsl
testl
adc
dec
jne
in
jl
mov
dec
jo
push
cmp
lret
jl
jp
xchg
xor
fildll
cmp
dec
and
mov
mov
iret
scas
jne
out
test
insb
loop
xchg
add
test
flds
add
out
mov
sbb
and
imul
mov
adc
dec
popf
aaa
mov
xchg
xor
lods
fmulp
cld
inc
mov
std
loop
mov
xor
rolb
xchg
push
push
inc
fdivl
mov
cmc
ljmp
mov
inc
scas
mov
ja
ret
xor
dec
add
rol
aas
inc
sbb
pop
cmp
clc
cmp
leave
je
daa
enter
dec
sahf
sbb
mov
lahf
dec
outsl
sub
lret
outsb
add
mov
mov
aaa
jecxz
push
jb
lahf
sbb
ss
pop
mov
mov
iret
lock
shrb
jle
icebp
stc
jg
mov
test
movsb
xchg
pop
cmpsl
and
mov
xchg
stc
fidivrl
test
push
notl
xchg
ljmp
aaa
mov
pop
cmpsb
loop
dec
mov
ljmp
loope
push
mov
ficoml
mov
cld
add
je
lcall
mov
cmp
roll
fcmovu
scas
jp
je
outsl
sub
sub
outsb
jbe
mov
repnz
in
cli
out
adc
hlt
mov
xor
pop
jl
sahf
ds
insb
cs
outsb
test
fisubrs
je
fwait
dec
mov
scas
fcoml
std
mov
xchg
jge
ljmp
into
mov
jecxz
fwait
in
sub
mov
aas
movsb
les
and
lds
dec
xor
push
lret
cmp
cmp
push
adc
shl
push
or
xlat
subl
rcll
sub
xor
xchg
mov
cmp
push
aas
inc
dec
xor
xorb
pop
aad
ret
stos
sub
gs
adc
pop
mov
fimuls
cmp
xchg
decb
xchg
lock
sbb
aad
jb
js
iret
out
or
xlat
popf
int
cs
mov
data16
cwtl
rcr
fwait
in
lcall
lret
push
dec
gs
jns
xchg
into
pop
cltd
add
sbb
mov
mov
and
push
negb
xchg
js
in
jbe
adc
mov
and
in
mov
sub
jle
xor
mov
and
movsb
push
inc
mov
or
into
pop
idivl
xchg
subl
mov
notl
or
cs
test
cmp
adc
xchg
push
push
addl
inc
mov
xor
and
mov
movsl
mov
jae
ja
mov
sbb
out
in
test
xlat
xor
clc
xchg
sbb
sub
push
mov
add
movsl
add
jne
xor
add
int
rol
ds
dec
vpcmpgtd
movsl
add
outsl
push
sbb
jae
mov
adc
adc
xor
xchg
inc
sub
pop
push
in
rorl
or
add
push
lcall
inc
jecxz
or
mov
popa
testb
ffreep
or
lods
and
add
lods
sub
add
or
pop
and
and
jno
xchg
emms
jecxz
rol
inc
mov
sahf
mov
movsb
andl
push
or
test
mov
lcall
and
xchg
incb
lds
mov
pushf
mov
mov
mov
and
enter
mov
pop
jl
sbb
add
cmp
data16
dec
mov
jne
mov
fistpll
mov
sbbb
iret
push
in
sti
aaa
movsb
push
in
addr16
inc
clc
sub
fdivs
jge
in
fnstcw
out
xchg
mov
inc
fcmove
popf
aam
mov
sub
mov
sub
or
cmp
out
cmp
stc
jbe
rolb
shl
mov
pop
and
inc
outsl
mov
sbb
lea
dec
dec
outsl
jmp
add
cmp
cmp
rclb
cmpsb
sub
adc
push
loop
cld
dec
fwait
sbb
ret
mov
je
scas
addr16
test
pop
mov
lods
arpl
leave
inc
in
lret
popf
mov
xor
jnp
jns
dec
cmp
sbb
inc
inc
dec
ret
mov
cmp
gs
cltd
loop
jecxz
stc
popa
add
fs
loope
jns
inc
sbb
ljmp
sub
ja
xchg
fsubr
xchg
dec
dec
xor
fstps
in
sub
push
outsl
xor
push
adc
ss
and
fiadds
shl
repnz
pop
das
jp
xchg
mov
inc
jg
xchg
dec
cli
aam
push
fisubrl
and
jns
dec
pop
fnstsw
pop
add
cld
stc
mov
pop
push
gs
lcall
movhlps
mov
sbb
mov
rorl
sbb
jp
test
xchg
mov
repz
lods
sbb
jnp
mov
and
push
xor
adc
add
or
inc
xchg
fdivrl
inc
and
mov
jb
mov
dec
shrl
mov
or
test
or
xchg
add
cmc
outsl
xor
decl
imul
add
test
lods
sti
jge
dec
sub
or
notb
dec
test
sbb
lea
repz
int3
insl
stos
xchg
ror
aad
pop
movnti
pop
xor
add
mov
or
sahf
shlb
mov
lret
jecxz
loopne
leave
push
sub
xchg
das
sub
mov
mov
roll
xorb
dec
insl
xor
call
inc
inc
push
sbb
or
xchg
xchg
in
xor
nop
fldt
mov
dec
ret
in
sbb
ds
push
repz
cmc
lret
mov
mov
lret
repnz
xchg
adc
arpl
cmpsb
ss
ret
or
test
xchg
loope
loop
pushf
cltd
loope
out
loop
jbe
nop
in
inc
push
outsb
test
test
cmp
dec
jo
stc
arpl
inc
sbb
cmpsl
in
xor
repnz
fldcw
arpl
int3
mov
pop
or
rcrb
mov
cmp
dec
pop
and
jp
cwtl
rol
mov
in
lock
ret
cld
je
std
aas
jno
add
gs
inc
imul
bound
les
cwtl
loope
stos
push
in
add
cmp
sub
push
lods
ss
sarb
sbb
or
jp
xchg
mov
negb
enter
add
jno
mov
shr
lods
sbb
and
xor
xor
shrb
cmp
xor
insl
mov
cld
mov
sahf
lret
cmp
adc
lahf
cld
xchg
mov
andb
inc
xor
rorb
movsl
xchg
or
movsl
jg
mov
out
repnz
adc
add
mov
or
fistl
les
xchg
test
shll
inc
mov
push
xchg
in
ss
mov
jecxz
add
sbb
daa
sbb
mov
sarb
xor
dec
mov
stc
push
cwtl
mov
fldcw
xor
insb
xor
out
dec
je
xor
xchg
push
sbb
loope
push
jne
imul
iret
movsb
sub
adc
mov
out
add
inc
mov
xchg
shlb
insl
adc
sbb
inc
jbe
dec
mov
stc
or
roll
mov
ret
xchg
das
sbb
dec
inc
cmp
aad
xor
push
push
push
mov
sbb
mov
rclb
fidivrs
arpl
inc
repz
mov
cmp
mov
jno
or
jmp
cmp
int3
fildll
in
loope
push
xor
lods
inc
add
jge
movsl
inc
xor
ret
lods
inc
cmp
mov
and
pop
lahf
in
inc
pop
dec
and
mov
enter
cmpsb
outsb
sti
sub
fldcw
dec
in
flds
imul
jns
add
lods
fldenv
data16
fwait
cmpsb
ss
mov
cmc
lods
ret
mov
jmp
test
lods
cmp
sbb
fadd
or
adc
dec
data16
push
pop
lock
lds
mov
xchg
out
sub
mov
imul
cwtl
hlt
call
or
in
nop
push
movsb
insb
dec
pop
enter
mov
pop
jo
hlt
add
aas
dec
push
jo
fnstsw
xchg
rcr
xchg
and
mov
das
mov
add
adc
das
imul
and
mov
mov
jmp
mov
cmpsl
adc
add
mov
adc
lods
pop
std
mov
push
into
cltd
xor
push
xchg
mov
icebp
das
addb
xor
mov
repnz
pop
lret
inc
jge
mov
xchg
dec
cmp
sbb
cmp
test
jns
and
mov
pop
lahf
xorl
shrl
and
cmp
test
sub
push
icebp
sub
dec
in
aad
in
push
shll
cmc
mov
and
xchg
insb
aaa
test
cs
or
lret
pop
sub
mov
dec
and
adc
pop
jnp
das
sub
in
aaa
pop
fs
stos
cmp
mov
ljmp
aad
arpl
push
pop
in
inc
fdivrl
xor
dec
mov
mov
mov
cmp
into
and
mov
test
and
and
leave
mov
and
dec
cmp
cs
into
popa
pop
push
mul
lods
popa
jae
xor
mov
xor
call
repnz
adc
mov
in
mov
jmp
vdivsd
push
jle
lcall
mov
jg
ret
jnp
test
pop
std
lods
call
arpl
mov
in
push
mov
mov
pusha
mov
push
lods
xchg
outsl
pop
pop
pop
xlat
test
sahf
ja
out
mov
pop
inc
movlps
mov
inc
inc
test
test
test
lahf
xchg
mov
dec
lods
add
mov
mov
testl
xor
aam
sbb
mov
cmp
mov
movsl
out
out
sbb
js
adc
sub
pop
xchg
stos
in
xchg
mov
mov
cwtl
sub
loop
sahf
fdivp
push
stos
add
sbb
cs
pop
stc
je
adc
hlt
dec
and
aas
pusha
mov
es
xlat
sub
fcompl
mov
cld
ret
ja
rcl
cmc
out
enter
test
push
dec
and
lcall
xor
pop
mov
mov
cltd
outsl
int3
mov
push
faddl
add
cmp
xchg
out
dec
pop
and
sti
jne
lahf
rorb
xor
lret
sbb
lcall
enterw
xchg
roll
sbb
or
add
jo
mov
scas
push
and
mov
movsb
stos
inc
cltd
xor
fdiv
add
fcoml
sbb
sar
fldenv
sub
mov
sti
sti
dec
dec
outsl
stc
xor
into
mov
or
stos
sbb
mov
sti
add
aas
xchg
sbb
push
insb
xor
cmpsl
mov
loope
mov
cmp
sub
xchg
push
dec
xchg
daa
mov
cmp
lods
and
mov
outsb
out
adc
fildll
push
push
mov
orb
jo
notb
mov
scas
jp
jecxz
jne
fcmovbe
popf
cmpl
test
in
stc
add
jae
outsb
xchg
add
dec
cmc
ljmp
xchg
adc
dec
mov
dec
sub
outsl
jmp
popa
outsb
dec
jg
mov
test
add
stos
xrelease
fnsave
cmpsl
imul
add
jmp
enter
sti
out
jne
movsl
inc
pop
cwtl
arpl
dec
mov
cmpsb
and
push
jns
rdtsc
andb
xor
ljmp
lea
xor
loope
sahf
add
mov
mov
adc
int3
ja
cmp
push
loop
dec
sbb
hlt
movsl
adc
mov
dec
scas
mov
cmp
inc
es
pop
sti
mov
sub
out
mov
sub
addb
adc
adc
ret
call
je
int
pop
dec
mov
mov
fcom
cmp
icebp
mov
sbb
xor
mov
mov
ret
mov
jnp
fsub
sbb
mov
pop
scas
stos
leave
call
sbb
andl
outsl
push
das
lea
stos
outsl
jne
stc
or
dec
outsb
pop
in
in
cmp
sbb
int
nop
jae
or
cmc
xchg
mov
dec
and
stos
aad
sbb
cmp
out
dec
sub
xchg
ljmp
call
and
arpl
mov
fdivl
jnp
cmp
fs
mov
cmp
lret
xor
push
test
cmp
and
fistpll
cs
mov
or
test
mov
jp
add
add
popf
push
xchg
mov
jge
jnp
scas
lods
out
pushf
inc
lods
stc
sub
popf
or
sbb
in
scas
out
sbb
shrb
push
mov
ss
in
out
loop
jecxz
inc
lahf
fnstenv
xchg
sbb
pop
lds
push
xor
dec
pop
fwait
pop
cmpb
mov
aaa
or
shlb
cmp
xchg
lret
cmp
pop
xchg
jb
pop
mov
mov
test
mov
and
pop
sbb
clc
int
es
push
xchg
les
imul
nop
push
arpl
cwtl
jge
mov
loope
mov
sub
movsl
cmp
stc
test
xor
sti
daa
sti
sub
in
jecxz
xor
cmp
lds
pop
sbb
hlt
pop
test
push
xor
scas
jecxz
mov
fildll
cmp
cs
popa
xchg
fbld
and
cmp
cwtl
gs
pop
cltd
dec
mov
xchg
xor
and
and
in
ret
jno
sti
cmp
je
gs
cmp
cwtl
xchg
cwtl
movsl
xchg
xchg
dec
pushf
inc
mov
out
and
push
aam
dec
dec
or
pop
incb
aas
std
mov
push
je
insl
repnz
std
into
add
cmpsb
sbb
adc
sbb
aaa
sub
mov
sub
sub
out
sarl
nop
mov
clc
sub
push
out
cmp
xchg
adc
fwait
xchg
cmc
xor
addr16
dec
push
pop
push
sti
mov
das
adc
sarb
or
add
icebp
jno
jne
arpl
outsl
xor
out
insb
adc
pop
sub
pop
or
cwtl
or
in
push
mov
test
xchg
xchg
jecxz
loope
or
inc
and
jne
inc
jge
push
lods
jae
jge
add
aad
xor
xchg
jp
mov
mov
cwtl
out
leave
adc
ja
fwait
or
movsb
xchg
pop
or
lock
mov
adc
mov
loop
or
fidivs
out
xchg
or
std
pop
flds
insl
leave
test
lret
mov
iret
clc
mov
sub
cld
mov
add
adc
and
pop
jmp
mov
lret
sbb
mov
and
jae
aad
cmpsb
mov
daa
lahf
xlat
mov
adc
dec
mov
xor
pop
mov
sub
movsl
push
lret
insl
or
sbb
ljmp
out
adc
jmp
fidivl
pop
sub
out
xlat
xchg
push
dec
push
add
fs
out
insb
pushl
xchg
ret
pop
sbb
push
jg
sbb
pushaw
pop
add
lea
pop
in
cld
int
adc
or
jmp
gs
and
or
lret
leave
push
xor
sbb
push
xor
jno
jns
les
push
push
aam
sbb
iret
fildll
pop
mov
stos
lods
mov
add
adc
ret
stos
xor
jp
lahf
mov
xchg
divl
mov
mov
mov
repz
out
leave
jae
popf
arpl
cmc
int
rolb
mov
lret
loop
jl
add
imul
push
test
xchg
pop
jae
xchg
fistpll
push
push
aam
shll
test
pop
fldenv
cmpsb
cwtl
dec
mov
aaa
xchg
bound
out
jp
sbb
lahf
push
add
ja
push
jmp
xorb
loopne
cmp
mov
add
or
popa
pop
loop
cmp
adc
mov
push
insb
orl
sahf
mov
or
mov
daa
dec
mov
mov
outsl
jg
xchg
sbb
repz
lahf
jg
inc
jbe
or
xor
loopne
and
cwtl
mov
dec
push
xchg
push
ljmp
insb
dec
popa
movb
sub
or
stos
adc
stc
iret
pop
or
mov
xchg
icebp
sub
jg
and
lds
lahf
fisubl
fs
fldenv
pop
jle
mov
xchg
addr16
and
ret
or
out
adc
aad
lcall
imul
leave
addr16
fyl2xp1
mov
ret
js
xor
dec
xchg
jns
mov
loope
sbb
insb
es
sub
jo
cmp
mov
sbb
or
test
stos
icebp
iret
fsts
xchg
or
cmpl
jge
insl
pop
ss
imul
cltd
outsl
cmp
sub
out
fs
fnstsw
stos
xcrypt-ecb
cmpsl
mov
inc
cmp
cmp
movsb
push
jge
and
adc
xchg
cld
jmp
clc
loop
mov
lret
scas
cmc
mov
aas
sub
arpl
cmp
sub
pop
loop
arpl
lret
pop
loop
mov
xchg
stos
pop
int3
sbb
and
movsb
xchg
cmp
mov
fldcw
addr16
xor
int
aam
sbb
jns
bswap
sub
aad
sub
arpl
negb
lret
pop
and
loope
jb
push
gs
arpl
push
mov
out
mov
cli
ret
adcl
add
inc
fiadds
mov
in
shrl
sbb
cli
mov
and
push
ret
jo
enter
dec
mov
roll
adc
dec
int
dec
fmuls
push
leave
lea
sti
popf
shll
mov
pop
bound
sbb
aas
stos
jl
add
ret
inc
xor
mov
lods
push
inc
fisubs
xor
sbb
orl
adc
jbe
addb
sbb
jae
ljmp
xchg
sbb
and
sbb
nop
out
aas
and
adc
and
adc
dec
pop
cs
in
jae
xor
pop
aam
int
rclb
pop
cmp
xchg
in
sub
cmp
hlt
pop
cmp
inc
nop
testl
shrb
pop
push
es
lock
imul
pushf
pop
mov
add
stos
sbb
dec
mov
dec
sti
mov
in
pop
movsb
fnsave
bound
xchg
addr16
mov
xor
loop
xchg
xchg
in
movsb
mov
je
rolb
dec
adc
in
ficoms
adc
lret
xchg
addr16
clc
mov
inc
in
in
or
mov
or
xchg
lock
push
in
or
push
out
xchg
repz
rcrl
inc
or
ja
sbb
mov
cmp
xor
cmp
jne
sbb
fildl
mov
lock
xchg
inc
inc
dec
xchg
mov
pop
push
mov
ror
rorb
bound
nop
mov
cs
xchg
arpl
jg
xor
mov
and
mov
xor
pop
sahf
lahf
repnz
outsb
pop
out
inc
aam
cmp
and
cmp
add
ss
sub
loopne
xchg
ja
mov
pop
jmp
mov
insb
xchg
xchg
cmp
fisubl
xchg
in
fidivs
addb
divb
iret
mov
and
fisubrs
cmp
mov
sbb
xorb
sbb
push
into
enter
xchg
cmpsl
movsl
and
cmp
inc
or
sbb
push
add
fwait
push
xor
pushw
sub
hlt
jns
jmp
ficomps
nop
out
testl
mov
test
ljmp
xchg
daa
leave
and
inc
pop
fmuls
ljmp
dec
out
jnp
push
repnz
fisttpll
out
jmp
or
div
or
movsl
ret
push
shll
aam
sbb
nop
not
mov
testl
repz
adc
fisubrs
test
sbb
je
xor
ficoms
stos
xor
adcl
push
sub
testl
imul
jns
int
xor
lret
sarl
jge
iret
adc
sbb
neg
xchg
or
mov
add
jle
dec
push
adc
bound
xchg
add
cmp
dec
add
lahf
cmp
cmp
icebp
movsl
jne
add
and
xor
daa
adc
jb
push
or
cmc
jge
leave
lcall
test
mov
mov
in
ss
adcl
push
addb
push
pop
push
movsb
cmp
jg
mov
or
sub
sub
data16
cmpsl
xchg
jno
stc
cmovns
aas
stos
repz
jecxz
hlt
xchg
loop
sub
leave
fucomip
repz
dec
lret
lret
cwtl
lods
fsubr
push
lods
adc
sub
add
arpl
push
imulb
lcall
icebp
adc
int3
loope
inc
add
mov
rcll
cld
les
xor
lret
stos
fs
test
or
aas
pop
jae
mov
stos
push
dec
leave
xchg
stos
clc
inc
dec
aas
push
inc
out
mov
jge
mov
outsl
cmp
lahf
insb
shl
adcl
mov
xchg
cltd
scas
sbb
gs
dec
test
dec
test
push
jne
inc
mov
lret
movb
mov
fs
shr
pop
pop
cmpsb
dec
call
std
and
imul
mov
dec
loopne
push
sbb
push
test
mov
sarb
subb
cmp
jg
and
lcall
or
cmp
sarb
push
jno
fldt
push
cld
mov
adc
xchg
aaa
popf
pusha
lock
lods
push
cwtl
mov
int3
test
mov
sti
jg
mov
cld
push
inc
push
pop
or
popa
bsf
and
enter
rcr
push
sbb
fmull
int3
sub
or
cltd
dec
dec
mov
push
mov
out
jle
mov
jle
sahf
jle
xor
add
xchg
sub
aad
movsb
or
xor
subb
int
adc
insl
lock
cs
inc
fwait
jns
fisubl
scas
lods
test
mov
cmc
fwait
cmpsb
jle
lods
jno
unpcklps
and
daa
or
inc
in
scas
push
pop
dec
lds
jo
test
stos
jl
mov
out
xchg
pop
ljmp
in
pop
stc
jle
and
shll
sub
out
in
mov
icebp
mov
mov
fsubrl
add
movsl
and
pop
insl
or
xchg
and
int
sbbl
mov
aad
lret
leave
pop
rcrl
jns
push
test
adc
icebp
iret
movsl
push
sbbb
imul
rclb
in
xchg
xchg
dec
fstl
and
loop
lahf
aad
aas
and
rolb
pop
mov
insl
and
dec
fidivrl
hlt
loope
push
movl
aaa
jns
and
ret
aad
movsl
nop
mov
repz
dec
mov
lods
mov
pusha
xor
leave
push
push
dec
mov
ret
sbb
loopne
jbe
insl
outsb
jl
psllq
test
sbb
push
pop
repz
jg
int
sbb
loope
test
push
outsb
push
jg
imul
mov
and
mov
rorb
mov
inc
cmp
xor
mov
mov
sbb
lods
pop
inc
mov
int3
bound
sahf
xor
push
cmp
cwtl
sbb
test
sub
loop
lahf
jo
scas
imul
std
sbb
jmp
adc
xchg
adc
sub
dec
sbb
jo
cmp
pop
rcrb
or
mov
iret
fiadds
cmp
xchg
sbb
test
sub
out
push
lcall
rorb
sbbb
and
dec
lods
xchg
adc
sbb
out
xor
mov
jg
incl
sub
mov
outsl
scas
hlt
xchg
dec
sbb
mov
dec
pusha
movsl
mov
cs
int
mov
xchg
mov
dec
mov
insb
or
insl
push
loop
mov
mov
movsl
dec
inc
cs
adc
das
xchg
push
push
cli
ret
mov
xor
lds
mov
dec
or
dec
cmp
popa
rcl
and
rcl
test
xor
cwtl
dec
xchg
repz
cmc
or
mov
dec
sahf
loope
xor
sbb
sbb
sbb
in
stos
fldt
push
jg
arpl
into
clc
xor
push
addr16
dec
jp
push
pop
rorl
out
into
dec
and
sti
inc
filds
test
ja
or
cmp
dec
adc
fprem1
jmp
shrb
xchg
pop
push
sub
in
push
lock
push
push
aas
jb
dec
out
pop
push
add
dec
sbb
push
in
aad
mov
fstp
ljmp
cmpsb
movsl
xchg
adc
outsl
cmp
jb
mov
fldl
jae
inc
mov
repnz
and
dec
cmp
negl
cmpsl
stc
push
inc
insl
or
xor
sub
mov
add
lods
paddsb
sub
sarb
mov
adcl
jmp
mov
jg
roll
inc
not
movsl
fs
dec
test
test
dec
jae
xor
stos
outsl
shll
arpl
adc
fimuls
sbb
mov
or
xchg
outsb
cmp
push
iret
ja
inc
dec
jmp
xlat
mov
out
lcall
lock
or
inc
inc
pop
ret
mov
fsubl
jl
and
fprem1
push
and
fwait
and
dec
inc
mov
roll
pusha
mov
sarl
pop
sbb
aam
js
xor
loop
pop
mov
sub
cmp
sarl
pop
fisttpl
loope
mov
scas
mov
and
test
jl
shll
popa
addb
push
mov
jb
inc
pop
rorb
jno
sub
inc
lds
mov
jl
push
inc
sub
addr16
movsl
jno
loopne
loopne
lods
dec
stc
lret
stc
inc
icebp
fidivrl
shlb
pop
sar
shll
mov
add
pushw
das
sbb
arpl
and
push
xor
mov
fwait
or
xor
adc
sub
mov
mov
repz
xchg
sahf
scas
xlat
adc
push
lods
or
mov
pop
mov
fsubs
idivl
fsts
mov
test
jno
xchg
in
inc
mov
inc
and
dec
pop
add
test
mov
repnz
add
pop
mov
or
add
imul
mov
mov
loopne
fisttpl
stc
or
into
mov
rorb
rcrb
lcall
or
xchg
or
sbbb
pop
cltd
or
popa
outsl
or
dec
repnz
fnstsw
sbb
movsl
cli
stos
push
aad
sahf
mov
mov
sahf
sti
adc
cmp
ds
int
pop
cmpsb
lret
iret
jb
inc
rcrb
sub
ret
or
in
lock
in
dec
cs
and
popf
sbb
jle
xchg
imul
out
xor
test
dec
xchg
mov
pusha
xor
or
enter
cld
xor
push
add
jecxz
lock
int
mov
div
xor
sub
mov
jp
outsl
in
and
clc
in
mov
cmpsl
bound
mov
mov
popa
adc
aam
push
xor
stos
cld
mov
push
dec
and
mov
enter
pop
adc
sub
out
ffree
sbb
mov
or
xchg
cmp
fbstp
mov
aaa
push
mov
mov
pop
lea
cli
fs
mov
ret
cmpsl
mov
adc
xor
dec
vdivsd
adc
sbb
inc
shll
test
jl
ss
inc
adc
fdivp
jno
loop
inc
mov
add
inc
idiv
sbb
inc
xor
adc
cmp
mov
lods
lret
inc
add
scas
outsb
mov
movsl
fmul
lods
aad
cltd
orb
dec
mov
mov
daa
outsb
push
add
dec
cmp
mov
inc
add
inc
sub
sbb
aaa
cmp
mov
mov
push
testb
cmovg
add
imul
and
out
adc
push
sbb
adc
test
sbb
hlt
ljmp
cmc
fiaddl
in
sbb
or
cmpsl
repnz
sahf
lahf
mov
sbb
lods
inc
xor
pop
data16
stos
imul
insb
fisttps
mov
je
nop
inc
jle
mov
sti
sahf
inc
nop
fcoml
test
pushf
push
mov
and
cmc
mov
cmc
cmpsb
cmp
mov
push
push
in
sub
mov
flds
arpl
jno
or
sub
adc
scas
sbb
out
insb
es
bound
lods
call
mov
lcall
std
out
pop
aaa
push
dec
pop
out
jo
gs
adcl
inc
sbb
jne
lods
insb
aam
jmp
jmp
sbb
lods
int
iret
je
pop
test
nop
movsl
pusha
sub
sbb
cld
adc
xor
ror
xor
pushf
js
in
add
mov
add
cmp
xchg
aam
iret
jo
dec
ljmp
cmp
or
push
add
add
mov
incb
dec
dec
imul
out
popf
pushf
cli
ss
insb
jae
lock
mov
fwait
add
push
sarl
jp
adc
lods
popa
repz
jge
sbb
mov
inc
adc
jecxz
mov
push
and
mov
mov
xor
clc
sbb
hlt
adc
xchg
sub
dec
gs
stos
pushf
cmp
cmp
cmp
ljmp
imull
cmp
adc
insb
pop
mov
jo
ret
std
enter
out
clc
aad
in
xchg
gs
movsl
push
lock
lods
rcll
sahf
call
flds
es
push
out
jmp
popa
imul
int3
sub
xchg
xchg
fldcw
aam
sbbl
sub
out
inc
dec
popa
ret
sbb
cmpsl
xchg
mov
adc
xor
or
cwtl
subb
sti
hlt
sub
addr16
push
mov
and
mov
pop
les
inc
or
xchg
jp
inc
cli
sub
push
mov
pop
test
jle
dec
pop
jmp
add
pop
bound
adc
mov
in
xchg
push
fs
jbe
imul
dec
ljmp
stos
aaa
inc
data16
pop
loopne
mov
pop
lret
mov
ljmp
add
pushf
pop
mov
jl
sub
and
jnp
loope
lods
xor
and
jecxz
aam
sbb
or
ljmp
pusha
or
sbbl
dec
adc
fisubrs
sbb
call
mov
pop
pop
or
xchg
and
icebp
nop
pop
hlt
clc
out
fisttpll
outsb
and
dec
pushf
nop
popf
jb
or
xor
push
sub
mov
sti
xchg
mov
fsubr
push
pop
cld
or
popa
lret
test
xor
cs
push
in
pop
lods
mov
xchg
add
xchg
std
xor
sub
das
or
mov
daa
add
jno
adc
bound
fildl
inc
adc
mov
cmc
xor
push
ss
cld
mov
fnstcw
push
shl
subb
cmp
dec
mov
movsl
push
push
out
int3
or
test
out
dec
bound
add
and
inc
jle
fdivs
enter
inc
sbb
push
jae
dec
popa
add
sbb
adc
hlt
fsubrs
fsubrs
notb
add
add
pop
sbb
add
push
iret
mov
lea
repnz
js
fs
push
call
fsubrl
test
mov
test
jmp
testl
sti
ja
sub
repz
arpl
clc
lock
bound
push
xor
shl
push
and
lahf
sbb
sbb
int
push
mov
inc
cmpsb
jbe
pop
mov
dec
or
jp
imul
jae
ja
les
rcll
inc
mov
mov
leave
aas
fcmovnbe
mov
lret
dec
ss
fadds
imul
mov
adcl
leave
adc
sbbb
movsl
jmp
mov
and
pop
loop
loope
inc
mov
jb
or
addl
or
call
nop
sbb
jle
xor
loop
inc
pushf
jg
testl
movsl
cmp
rorl
mov
mov
push
xor
repnz
shlb
test
ret
mov
xchg
dec
push
adc
mov
shrl
cmp
notb
pusha
adc
pop
xor
dec
lahf
jecxz
sahf
bound
das
mov
dec
fisubrs
mov
filds
push
lret
xor
lods
mov
aas
cmpsl
mov
xor
aaa
jp
jl
mov
loop
push
mov
das
inc
jge
add
add
and
cmp
ret
icebp
test
ret
xor
mov
cmp
mov
pop
sub
push
cltd
adc
xlat
jle
ret
adc
xor
sub
mov
fcmovu
sub
dec
fidivl
mov
in
insl
les
xor
in
lock
dec
iret
add
inc
mov
pop
gs
cmp
out
adc
xchg
ror
mov
pop
ret
js
sysexit
aam
in
jl
or
dec
push
jnp
cmpsb
gs
pop
idiv
fnstsw
popf
push
jle
xchg
push
xor
dec
lods
pusha
aas
mov
sbb
movsl
dec
dec
adc
popa
data16
out
aaa
mov
into
cmc
pop
xchg
pop
or
lret
shl
dec
cmp
enter
jne
fs
dec
jae
add
cmp
xchg
xchg
add
xor
in
pop
push
sub
mov
test
adc
push
dec
mov
insl
mov
imul
loopne
jae
fs
xor
addr16
sub
lret
fs
jbe
xchg
roll
lea
xor
lahf
jae
mov
push
movb
mov
jl
inc
cmpsl
mov
jnp
add
or
out
iret
iret
jae
mov
xorl
dec
insb
jnp
adcl
xchg
adc
jg
cmp
test
push
pop
aam
js
add
ds
xchg
xchg
movntq
out
lret
pusha
push
lret
aad
adcb
add
repnz
jb
add
or
repnz
xchg
adc
dec
das
xchg
cmp
sbb
xor
fst
scas
in
clc
sub
dec
in
mov
sahf
into
iret
or
mov
fidivl
pop
dec
cs
pop
mov
shrl
mull
mov
mov
mov
xchg
push
jge
rclb
mov
aaa
sbb
mov
jnp
and
jns
xchg
or
mov
jp
fidivs
inc
mov
sub
in
cmp
cmc
cmpsb
jl
std
sarb
sub
xor
jo
jle
mov
mov
imul
aas
je
clc
add
rcrl
test
lea
jbe
xor
jmp
and
sub
out
lret
lods
pop
std
mov
rol
mov
push
out
xchg
cmc
fldcw
xchg
jb
rcrl
das
push
or
cmp
leave
pop
enter
cmp
rorb
push
test
jns
xchg
lahf
jno
gs
fdivrs
dec
mov
imull
mov
data16
ret
sub
cmp
stc
je
mov
movb
or
out
adc
add
mov
repnz
pop
mov
addr16
out
inc
in
loop
push
jecxz
mov
in
and
stc
push
js
daa
arpl
out
cmp
xchg
push
shl
push
push
inc
jmp
in
icebp
loop
sbb
push
icebp
lods
stc
pop
pop
or
imul
push
adc
mov
fwait
gs
lahf
jnp
es
sbb
popa
cs
push
xchg
mov
mov
xor
fstps
push
mov
mov
jae
mov
push
lcall
ja
jg
cld
push
aam
mov
sbb
decb
add
cmc
repnz
or
add
lock
cmp
xchg
ret
inc
fiadds
enter
ljmp
dec
add
push
mov
jnp
in
not
adc
mov
test
push
sahf
jecxz
idivb
rclb
scas
fisubl
sbb
push
fildll
mov
jmp
sub
pop
xchg
push
dec
clc
push
dec
jo
xor
pop
fs
stos
cmp
cmp
stc
mov
mov
inc
xor
sar
sub
mov
add
call
jb
xchg
xor
stos
lret
js
fucomp
je
pop
jmp
jge
cwtl
js
xlat
test
jg
jmp
loop
lods
pop
les
or
push
or
imul
jg
mov
movd
add
repz
mov
jae
mov
inc
push
pop
out
push
sub
inc
push
pop
stos
mov
pop
cmp
dec
ds
add
mov
xor
lds
pop
pop
cltd
sbb
pop
adc
outsl
in
pop
or
cmp
or
lock
leave
test
shl
arpl
scas
sahf
xchg
xchg
fnstsw
nop
push
and
and
fs
xor
inc
pop
nop
in
sbb
adc
das
cs
ja
cmpsb
mov
push
and
inc
pop
xor
pop
add
loope
bound
clc
mov
mov
aam
lods
cmp
addr16
push
sar
cli
lods
notb
scas
or
pop
adc
mov
inc
mov
sub
sbb
cli
add
dec
call
inc
lcall
push
aad
pop
add
mov
les
mov
sub
insb
rcrl
or
push
pop
out
adc
setae
mov
mov
pop
sbb
jo
nop
and
movb
mov
scas
call
push
push
aad
pop
sbb
sbb
rcll
mov
popf
out
adc
in
add
sub
pushf
add
out
cltd
jb
inc
hlt
movsl
out
add
sqrtps
mov
push
sbb
or
loope
mov
cmp
decb
mov
lcall
cli
scas
xchg
pop
in
popa
jo
jp,pn
lahf
into
aam
and
jle
inc
cmp
add
jo
sbb
cltd
mov
cbtw
sub
imul
mov
xchg
pop
sub
pop
dec
out
andb
jg
sbb
lods
lock
dec
stos
jae
in
inc
pop
aam
cld
push
arpl
fucomip
test
out
cmpsl
cltd
subl
dec
in
sbb
fsubl
ds
subl
mov
sub
leave
hlt
fisttpll
dec
push
std
nop
and
add
jg
and
in
jns
clc
mov
or
or
pop
inc
mov
insl
lret
ret
xor
pop
cwtl
and
mov
sub
add
stos
stc
jae
add
clc
std
les
mov
xchg
lret
subl
fnstenv
test
push
fs
add
cmp
add
inc
test
mov
stos
shl
mov
ss
mov
ret
fsubl
mov
xchg
sbb
in
cmpsb
and
push
jecxz
xchg
lods
jg
inc
ss
les
rcrl
mov
jge
jbe
sbb
repz
lods
dec
mov
pop
inc
lret
and
inc
inc
mov
inc
decb
and
sbb
sub
cmp
xor
repnz
das
add
enter
sub
mov
loopne
lods
jp
outsl
inc
push
rcrl
data16
aas
push
popa
cwtl
xor
pop
imul
add
pop
cmpsl
sbbb
lret
jle
insl
inc
jnp
adc
mov
aaa
decl
mov
xor
push
ljmp
ds
xchg
adc
xor
mov
clc
pop
cmp
fsts
or
adc
add
lods
mov
cmpl
dec
sub
cmpsb
outsl
add
add
mov
fimull
lea
icebp
pop
inc
pop
and
out
adc
or
add
test
popf
mov
test
insb
repz
fnstsw
xor
xor
mov
xchg
cli
es
xchg
lea
je
mov
and
push
aaa
push
mov
rcll
es
pushf
test
fcoms
xchg
xchg
popa
cmp
fisubrl
mov
jle
xor
test
ja
inc
stc
add
push
pop
cmp
xor
icebp
outsb
xchg
aas
je
adc
and
jmp
or
xor
fstl
clc
xchg
in
xor
sbb
mov
mull
lret
add
jmp
stc
cli
fldt
sar
push
adc
int
mov
in
cmp
or
xor
dec
cmp
mov
mov
ds
jb
fbld
pop
and
push
dec
and
out
addr16
arpl
lahf
push
mov
aaa
xor
pop
mov
inc
mov
xlat
ret
xchg
push
cmp
mov
xor
adc
fcompl
push
pop
fimuls
jg
pop
repz
test
jl
lcall
jp
pop
sub
and
cmpsl
inc
mov
push
mov
loopne
clc
sti
dec
mov
fcompl
adc
sub
dec
push
adc
aaa
cmp
outsl
dec
adc
adc
pop
fs
cmp
mov
jb
mov
in
jl
lahf
cmp
aad
mov
ljmp
cld
sub
push
pop
lahf
sbb
xchg
jp
int
mov
lock
clc
out
pusha
imul
lret
cmp
aad
clc
into
cltd
and
test
cmp
insl
cmp
leave
or
inc
pop
jl
inc
push
mov
out
aaa
sahf
sarl
mov
inc
addb
subl
add
push
or
sti
adc
out
dec
loop
ss
jo
push
inc
jbe
inc
mov
mov
add
outsb
scas
hlt
aaa
xchg
out
fisttpll
out
loop
jg
cwtl
add
inc
inc
insb
and
lds
cmp
mov
mov
push
js
xchg
lods
xchg
outsl
push
sbb
pop
pop
jp
jl
imul
adc
push
call
mov
mov
int
dec
popf
xchg
sbb
lds
dec
or
std
cld
sub
push
add
loopne
clc
fadds
jl
jg
scas
into
xchg
cmp
dec
adc
cltd
dec
jo
jle
lods
inc
jo
mov
aad
push
lods
std
add
dec
add
add
cs
xchg
pop
xchg
loope
ret
fmull
jge
dec
pushf
inc
mov
push
mov
pop
gs
and
adc
iret
clc
push
negl
lea
xor
xor
xor
mov
inc
xchg
mov
cmp
fisubrs
mov
arpl
push
aad
sti
push
pop
or
ror
sub
cmp
stos
mov
sarl
test
dec
add
aas
mov
lods
and
pusha
xor
add
mov
int
addr16
pop
mov
adc
push
inc
or
push
test
jecxz
test
out
in
lahf
push
movsb
lret
into
pop
int3
xchg
movsb
inc
pop
inc
add
mov
fsubrl
or
mov
or
inc
dec
jge
movsb
jnp
leave
repnz
out
sti
lods
sub
push
shll
push
in
popl
or
xchg
sub
popf
mov
push
ljmp
xchg
dec
imul
insb
dec
lods
fs
lahf
sub
gs
out
inc
mul
cmp
add
outsl
sti
pop
mov
xor
mov
repnz
lret
add
sti
mov
rclb
es
pop
jecxz
cld
mov
inc
stos
ret
insb
mull
insb
ret
in
in
movsb
rcrb
enter
fldt
ds
lcall
or
fadds
xchg
jl
mov
sub
or
pop
test
loope
repz
inc
sahf
sbb
aaa
jle
lds
or
dec
dec
stc
outsl
notl
xchg
std
data16
and
aaa
sub
push
filds
sub
sti
aad
ss
add
es
fwait
add
repnz
and
sub
mov
sub
insl
lock
xchg
pop
loopne
repnz
sbb
xchg
add
loop
sbb
fwait
dec
es
iret
arpl
aam
inc
in
stos
pop
cmp
imul
inc
adc
pop
and
hlt
fildl
outsl
mov
aam
jp
xchg
sub
leave
and
aad
xor
aas
movsl
mov
cli
in
push
adc
ja
bound
mov
mov
xchg
out
and
inc
dec
inc
subps
jae
fsubrl
push
pop
sti
aad
jle
sub
pop
xor
test
mov
cld
jnp
enter
xchg
fiaddl
jne
inc
sub
cmc
aam
dec
shll
in
divb
xchg
adc
jo
jns
push
push
repz
pop
push
sti
sti
js
insb
push
aaa
aam
outsl
push
lea
and
xchg
or
ja
push
jb
push
xchg
in
lcall
push
gs
leave
sub
add
ret
iret
out
out
pop
jecxz
les
mov
jns
shll
lea
inc
dec
xor
pop
pop
xchg
dec
lods
sbb
jnp
gs
jg
xor
cmpsl
shlb
in
push
insb
inc
pop
in
out
jecxz
test
lds
es
fildl
or
cmc
xor
inc
mov
std
cmp
xor
add
sub
xor
and
sbb
lret
int3
ja
inc
jb
mov
out
and
rorl
lahf
stos
fcompl
push
pop
in
sub
ret
std
jno
adc
xchg
jae
outsb
ffreep
xchg
jo
or
xor
xchg
jns
repnz
popf
repnz
cli
int3
xor
loopne
loop
mov
ret
out
popa
push
push
cmc
xchg
sub
test
repnz
in
rcrb
daa
pop
jmp
fidivrl
cmp
daa
mov
daa
loopne
push
xchg
pop
jmp
pop
xor
and
cmc
cmp
push
cs
or
insb
test
leave
insl
adc
insb
and
pop
xchg
xchg
clc
enter
dec
in
add
enter
aam
sbb
mov
mov
in
les
sbb
mov
out
adcb
mov
jb
mov
scas
iret
lahf
lea
add
pop
mov
xor
popa
add
or
dec
adc
mov
sub
repnz
cs
loop
cmp
fwait
push
cmpsb
sbb
clc
push
in
xchg
xor
idivl
push
loop
lock
mov
mov
int
aas
pop
mov
out
out
pop
divb
aad
sub
test
inc
xor
inc
or
xor
leave
mov
xor
inc
mov
rcrl
lods
orb
fadds
sub
add
mov
addl
js
in
jbe
pop
jnp
push
mov
jmp
push
inc
je
inc
mov
sahf
icebp
hlt
or
mov
das
mov
jbe
xchg
ret
enter
mov
adc
aad
jle
mov
imul
loope
xchg
test
ret
ds
lcall
mov
outsb
jp
push
push
pop
sbb
xchg
cmc
push
pop
not
les
aaa
ds
mov
lods
mov
lods
repnz
stc
sub
jo,pt
xchg
inc
adc
cltd
shlb
outsb
fsub
dec
mov
inc
dec
pop
inc
fnsaves
sbb
stos
imul
jl
jp
or
xor
addr16
dec
cmpsb
imul
scas
dec
test
movsl
push
jae
imul
out
pop
mov
mov
pop
hlt
mov
insl
jo
fcmovb
mov
fld
add
loop
dec
leave
fsubs
jae
add
rep
fwait
xchg
rorb
mov
jns
push
cmp
and
pop
or
sbb
sarb
repz
rorl
ja
cwtl
je
mov
push
or
shlb
xchg
lods
fistps
and
in
in
jmp
mov
scas
outsl
cmp
sub
add
mov
ss
out
inc
subb
mov
fadd
inc
lcall
sub
sahf
leave
in
stc
andb
loopne
jecxz
mov
mov
out
inc
mov
in
cltd
sub
stos
subl
shrb
cmp
test
jnp
mov
insb
std
sbb
mov
cmp
push
outsb
lcall
adc
xlat
add
stc
push
data16
mov
pop
xchg
sbb
pop
ja
mov
cmp
pop
sub
and
pop
mul
call
cmp
int
mov
mov
call
or
loope
push
pop
inc
dec
inc
fwait
sahf
out
push
xor
mov
jmp
jno
repnz
jo
add
stc
or
inc
int3
jecxz
and
addr16
cwtl
jnp
cmp
push
sbb
cmp
sti
and
sahf
outsl
push
or
jo
pop
sub
dec
mov
pop
ds
fisubs
and
insl
sti
pop
out
fwait
sahf
add
sbb
push
xchg
mov
lret
and
jl
jno
xchg
test
pop
push
push
push
lds
test
mov
testl
xchg
add
bound
mov
data16
mov
xchg
mov
add
fcoml
jbe
pop
mov
cmpb
add
lea
cmp
aas
sbb
jl
adc
and
and
dec
jmp
movb
push
dec
mov
ficompl
aaa
adc
rcrb
int
mov
mov
out
xchg
out
sahf
mov
insl
roll
int
popf
xchg
cmp
add
push
repz
enter
mov
sbb
mov
pop
cmp
imul
fbld
lahf
test
mov
mov
jnp
adc
or
fwait
repnz
ds
insb
fdivs
sahf
aam
stc
sub
push
fs
mov
push
popf
mov
push
lret
jae
lods
inc
xchg
jns
and
pushl
mov
jl
imul
sub
adc
enter
cltd
aam
sbb
and
cmp
fisttpl
into
add
xchg
jecxz
dec
aas
xor
mov
sbb
add
mov
pop
leave
mov
add
xchg
xchg
jb
sub
xchg
loop
cmp
mov
or
std
pop
fs
mov
bound
lcall
fwait
sub
loope
jle
xlat
pop
pop
and
pop
mov
pop
fistpll
xchg
pop
testl
inc
jmp
pop
pushl
shll
andl
popa
pop
pop
sub
data16
fwait
movsl
xchg
popa
frstor
insb
jb
inc
cmp
and
es
pop
cmpsb
and
fstps
and
mov
push
lock
and
test
pop
mov
push
xor
ja
ss
push
daa
lcall
mov
shlb
lds
push
es
push
lods
pop
cmpsl
cmp
pop
push
aaa
loopne
inc
cmp
push
cmp
add
scas
pop
and
jns
movsb
mov
xchg
mov
test
insb
test
pop
pop
xchg
test
inc
jp
addr16
ljmp
scas
dec
shrl
daa
int3
nop
mov
inc
mov
dec
push
or
fidivl
and
adc
push
jecxz
subb
insb
fmul
repz
fbstp
lds
cld
inc
loop
imul
jmp
addb
cmp
daa
jle
sbbb
pop
add
fwait
out
xorl
xlat
inc
lock
add
repz
and
jns
bnd
insl
mov
add
lret
mov
lahf
aaa
mov
inc
xchg
sbb
fcomps
mov
sbb
fists
dec
stos
leave
out
add
cmpsb
aad
lret
call
and
clc
lock
adc
inc
or
rcll
scas
push
inc
fmull
push
out
cld
lcall
gs
inc
ljmp
aaa
dec
fs
bound
jg
dec
xor
aas
jle
movsl
mov
lret
jae
imul
xchg
loopne
push
in
or
xchg
xchg
pushf
lret
xor
movsb
cmpsb
jp
mov
and
xor
dec
inc
mov
pop
stos
cmp
or
jbe
stc
scas
mov
arpl
sbb
hlt
lcall
fs
testl
or
push
sbbl
mov
add
shrb
movsb
out
test
jae
lods
and
cld
xorl
cmp
push
aam
nop
sbb
into
lods
jp
lods
cld
lret
loope
cs
pop
sbb
jp
push
pusha
test
fldl
insb
xor
mov
test
movsl
inc
jae
test
into
popa
lret
cmp
leave
or
pop
enter
fdiv
scas
cmp
adc
jecxz
mov
sbb
or
repz
inc
mov
dec
cmp
stos
rcrl
cmp
push
test
mov
xchg
fcmovu
shll
jg
xchg
loopne
inc
xchg
pop
mov
lret
lods
mov
outsb
sub
shl
fistps
jecxz
push
iret
in
xchg
cmp
pushf
add
xor
mov
jo
les
add
jo
or
enter
adc
loope
shll
fisttps
loopne
push
int3
adc
xchg
popf
or
popa
leave
adc
pop
push
iret
xchg
in
mov
inc
addb
or
and
es
push
adc
sub
je
lcall
sub
lods
mov
bnd
add
sub
orb
test
rolb
xor
testl
ss
xlat
les
mov
mov
sbb
mov
push
cs
ja
shll
jb
popa
repnz
and
mov
or
adc
mov
add
iret
loop
xchg
inc
outsl
notb
imul
clc
lea
xchg
mov
adc
cltd
stos
lock
lahf
pop
loop
int3
jl
inc
inc
xor
popl
sbb
xchg
call
iret
push
jb
cmovb
das
rcll
jl
adc
dec
lcall
inc
test
adc
arpl
mov
lcall
inc
jno
add
inc
lcall
aaa
mov
jnp
mov
pop
mov
mov
adc
pop
rol
add
je
cmc
jg
mov
out
mov
in
xchg
test
inc
dec
and
popf
sbb
repz
and
or
xchg
xchg
scas
cmp
dec
dec
push
sbb
aaa
sarl
sub
les
and
lahf
or
iret
aad
mov
xor
mov
cli
pop
xchg
loope
jecxz
data16
xor
and
xor
sbb
push
fists
xchg
scas
xlat
inc
repnz
jmp
adc
mov
movsb
sbb
rolb
mov
pop
std
mov
push
xor
imul
jbe
outsl
sar
loopne
lret
in
adc
push
fsts
inc
xchg
jle
test
mov
orb
bound
mov
sbb
cld
ss
rcrl
popa
pop
mov
movaps
mov
bnd
cmc
into
mov
ds
repz
mov
jl
mov
mov
dec
dec
outsb
sub
mov
sub
iret
sub
xor
inc
dec
xor
adc
push
sbb
jbe
xor
popf
ja
mov
inc
clc
rolb
incl
mov
push
jno
jae
mov
fcmovnbe
cwtl
int
dec
cmp
add
aas
imul
in
or
lret
out
pusha
mov
rcl
sub
or
lods
fdiv
xor
outsl
sbb
and
rol
cs
sti
popa
push
xchg
sub
out
insb
mov
xor
mov
xchg
out
ss
pop
push
cmp
add
daa
and
lret
pushf
mov
test
shll
shl
insb
leave
pop
fstps
and
add
sub
push
mov
test
fbld
stos
iret
jmp
imul
adc
std
loopne
jecxz
or
adc
add
push
stos
idivl
mov
mov
ja
mov
jg
jnp
popf
add
fwait
stc
repz
out
xchg
aad
jbe
loop
loopne
sub
in
add
addl
mov
in
arpl
jae
ja
repnz
les
adc
mov
mov
outsl
sub
fldcw
out
stc
inc
mov
pop
cltd
fnsave
lods
ds
sub
loope
mov
jnp
movsl
add
fdivs
outsb
xchg
ret
sbb
pop
pop
and
out
test
adc
and
popf
add
xchg
jp
sub
fwait
rcl
pop
jae
jmp
add
shll
lcall
mov
xor
mov
cmc
popa
mov
call
movsl
pop
es
and
xchg
scas
sub
cmpsb
push
add
inc
popf
sub
faddl
icebp
int3
dec
data16
or
push
sub
outsb
rcll
js
punpckhbw
adc
push
push
cvtps2pi
jmp
pop
in
jns
adc
pop
cmp
mov
cmp
or
in
mov
jge
imul
xchg
ljmp
jge
jno
push
inc
stos
xor
or
dec
addr16
jno
mov
fdivrp
jno
inc
adc
mov
and
jnp
xor
mov
data16
fimull
mov
push
xchg
push
jp
out
xchg
jmp
insl
xchg
jns
mov
jge
mov
icebp
push
jnp
mov
movsl
inc
imul
cs
mov
movsl
pop
mov
lret
or
in
incb
pop
mov
sbb
sti
cltd
inc
add
cmpsb
in
imul
addr16
pop
leave
stc
out
cld
repnz
loope
push
dec
bnd
aaa
xchg
mov
fcoml
mov
inc
jl
sub
add
ds
movsb
scas
push
mov
cli
jg
ds
push
imull
call
addb
add
jne
orb
or
add
push
shl
adc
aad
dec
jecxz
xchg
daa
push
xor
into
imul
jns
sbb
add
xchg
testb
or
xor
inc
push
jnp
inc
fcmovnu
cld
popf
lods
xor
mov
cmp
inc
pop
push
mov
ja
es
movsb
add
pop
je
clc
pusha
imul
xchg
rorl
jno
ds
pop
popa
sbb
aas
nop
dec
cld
jns
out
adc
sahf
mov
add
cmp
in
pusha
jbe
sbbb
mov
jbe
sbb
add
push
sbb
add
les
scas
sub
jg
add
cmp
jb
leave
adc
pop
fsubrs
je
xlat
fwait
aas
jp
mov
xor
lahf
adc
and
xchg
jo
cmp
mov
aad
out
sbb
xor
ficomps
or
fwait
mov
fcmovne
and
and
push
cmp
test
and
lahf
sahf
push
dec
sarl
ret
add
fcmovbe
cmp
and
nop
or
and
ret
add
xlat
hlt
movsb
ljmp
aad
movsl
out
dec
inc
ficomps
dec
repnz
cli
sub
lods
hlt
push
or
sbb
dec
or
sub
sub
xchg
mov
cmp
jb
push
mov
pop
stos
inc
fnstsw
js
ljmp
or
or
inc
int3
pop
fstl
and
xlat
dec
cli
fistps
mov
call
out
ret
jmp
and
jno
fwait
cwtl
jnp
inc
dec
les
xlat
xchg
sarb
stc
dec
mov
testb
scas
lea
dec
ficomps
rcrl
add
adc
or
push
iret
mov
mov
mov
mov
fstpl
inc
leave
je
lods
daa
sub
cmpsb
mov
mov
out
int3
add
sub
add
in
xchg
hlt
cwtl
adc
push
dec
push
aad
fdivrl
data16
test
jae
inc
outsl
lahf
push
inc
adcb
out
incl
cmpsl
lock
fisttpll
ja
sbb
ss
fadd
jecxz
shll
push
jl
mov
mov
aaa
icebp
adc
icebp
mov
mov
fdivp
cmpsb
sarl
outsl
mov
sarl
add
cmp
mov
pop
bsf
inc
jecxz
add
and
dec
mov
hlt
flds
jl
movsb
testl
pop
fmulp
jl
dec
adc
jg
and
inc
mov
or
pop
ja
xor
xchg
pop
mov
sub
cmp
addr16
rcr
cwtl
lahf
imul
in
push
jb
call
mov
inc
mov
cs
mov
fsubr
and
movsb
and
or
mov
rorl
inc
add
std
dec
loopne
cmp
fstpl
push
int3
dec
cmp
mov
mov
in
xchg
fstpt
jl
gs
jbe
add
xor
insl
sarl
shll
mov
push
out
mov
xchg
sahf
mov
cli
inc
and
sbb
dec
push
push
push
leave
ret
mov
pop
ds
fimull
into
pop
cmp
aad
lds
rorb
jp
insb
ret
add
notb
adcb
sub
ljmp
or
push
sti
dec
aaa
inc
leave
shlb
pop
aam
shll
out
inc
cltd
leave
lods
mov
add
shl
cmpl
pop
or
test
add
xor
sbb
xchg
sbb
mov
cmc
jns
push
das
jnp
inc
pop
cmc
pushf
addr16
flds
add
xchg
cld
nop
or
sbb
sahf
mull
push
jmp
test
or
xchg
jmp
jne
inc
lock
lret
pop
mov
scas
rcl
repz
inc
fcompl
mov
je
xlat
clc
fistpl
sbb
call
cwtl
jle
adc
pop
push
adcl
jnp
rorb
pop
inc
ja
stos
adc
shlb
cmp
jnp
rorl
mov
stos
loope
std
push
shrb
pop
mov
das
jecxz
or
add
adc
movsb
jns
pushl
cmp
mov
push
pop
push
roll
sub
push
rcrb
stos
daa
js
jl
imul
insl
mov
jb
loope
loop
dec
jg
add
dec
dec
push
pusha
add
in
adc
popf
push
fadd
in
dec
enter
mov
bound
daa
and
jb
xor
jge
and
in
out
pop
scas
push
jmp
fists
cs
push
cltd
arpl
pusha
fistps
sbb
push
push
fucomip
pop
movsl
das
dec
fwait
in
idiv
sub
or
mov
or
push
adc
add
int3
dec
pop
loope
push
cld
dec
add
pop
scas
negl
push
sahf
in
jmp
xchg
xchg
jbe
sub
and
js
outsl
mov
jae
sbb
popa
dec
adc
mov
sbb
dec
mov
loope
daa
dec
mov
pop
scas
push
fiaddl
xchg
int3
sub
inc
xor
push
imul
test
js
aam
jl
xor
mov
xchg
lock
test
inc
out
adc
fbld
sub
jmp
cmpl
ljmp
fadd
mov
ret
pop
arpl
cmp
pop
xchg
pushf
xor
jecxz
fwait
xchg
jmp
xchg
push
divl
jmp
and
out
push
cmp
aaa
mov
add
sti
xchg
mov
dec
sti
scas
xchg
lds
into
dec
mov
lods
add
fcoml
xor
mov
ret
idivb
js
mov
test
mov
insl
inc
clc
cld
les
lret
ljmp
mov
addr16
add
and
xor
int3
or
inc
mov
push
adc
mov
and
in
or
xorl
sbbb
scas
xor
add
cmc
xor
orb
dec
daa
cmpsb
mov
xor
sub
loop
jnp
sub
fnstsw
addb
popa
lahf
fldl
rorb
mov
stos
stos
xchg
gs
std
fisttpll
add
cmp
aas
test
outsl
callw
lea
stos
inc
cmc
movsl
insb
aaa
or
rorl
jecxz
or
int
cmp
sti
mov
xchg
inc
daa
cli
dec
cs
adc
adc
pop
js
inc
sarb
clc
popf
je
mov
push
cmp
sbb
cmp
mov
or
js
pop
xlat
mov
mov
jmp
and
push
inc
je
leave
mov
mov
jnp
aam
out
push
outsl
pop
jmp
mov
sub
push
mov
cmp
xchg
and
xchg
out
lahf
xlat
inc
aam
fcom
std
pop
pop
hlt
and
xorb
repnz
push
add
push
dec
push
mov
mov
outsl
dec
pop
shr
lret
jecxz
inc
ret
mov
cmpsl
jmp
fldenv
rclb
pop
ss
add
movsl
fistpl
sbb
push
dec
jae
std
sbb
div
and
mov
inc
mov
adc
jo
loope
pop
sahf
fbld
xor
mov
ffreep
pop
rcll
outsb
imul
test
sbb
cmp
fimuls
xor
cwtl
outsb
in
or
pop
call
int
stc
pusha
mov
cmp
and
test
lea
pop
js
scas
jge
mov
pop
fcos
jnp
jmp
jno
pop
dec
add
aas
ficoms
repnz
jne
imul
fs
addr16
mov
les
cmp
fcoml
leave
push
loope
mov
fwait
jb
or
icebp
push
jno
mov
shll
mov
jb
call
pusha
adc
add
sbb
repz
sbb
pop
cmpsl
in
sbbb
popa
pop
mov
insb
sar
test
push
or
lds
enter
mov
or
and
dec
xchg
adc
mov
adc
scas
aaa
jo
lahf
fwait
ss
loope
cmpsb
fldcw
or
push
cwtl
mov
lea
sub
leave
stos
not
outsl
cmp
cwtl
pop
daa
into
out
rcl
test
adc
xchg
push
cmpsb
cmp
sub
sbb
sbb
sti
inc
sar
inc
sbb
mov
popa
fnsave
lds
push
pusha
xor
mov
mov
mov
scas
inc
dec
bound
decb
xor
push
fwait
jecxz
fisttpl
into
cmp
lret
cmp
fs
scas
or
mov
mov
xor
and
call
sub
test
test
out
test
cmc
into
dec
fldt
jno
cmp
in
fildll
pop
repz
mov
sarl
mov
test
jge
or
aaa
movsl
std
or
dec
pop
sbb
hlt
sbb
or
jb
pushf
jne
dec
adc
mov
mov
jbe
cmp
scas
pusha
mov
cmpb
in
rorb
pusha
add
subl
adc
jo
mov
sub
out
fiadds
lea
int3
xor
cmc
xchg
inc
test
pushf
movnti
test
loopne
out
push
or
ss
adc
int
nop
mov
fdiv
xchg
jp
lds
out
xor
and
xchg
dec
daa
dec
cld
jmp
adc
push
sbb
xchg
nop
sbb
aam
pop
sub
push
sub
loopne
fdivp
inc
pop
mov
pop
adc
les
xor
xchg
pop
in
or
out
cld
lahf
imul
imul
mov
call
outsb
call
adc
mov
mov
dec
lcall
leave
inc
in
jg
ret
movsb
mov
adc
add
loopne
push
insb
jbe
mov
mov
and
in
out
cwtl
mov
ljmp
arpl
inc
ret
fs
xchg
mov
xor
xor
jnp
scas
pushl
or
out
jl
mov
inc
mov
xor
or
lds
dec
int3
rcll
divb
mov
je
insl
cmp
dec
mov
pop
fwait
add
or
adc
fldl
addr16
cli
sub
sbb
mov
xchg
jmp
cld
xchg
outsb
inc
inc
jmp
mov
add
cltd
pop
sbb
cmpb
inc
push
adc
sbb
je
pusha
mov
mov
jbe
pop
in
push
test
cltd
sbb
push
fisubrl
loopne
addr16
mov
addb
pop
scas
in
push
jne
shl
lock
cmpl
mov
mov
shl
imul
xchg
into
sbb
sub
mov
arpl
test
insl
push
outsl
addr16
cmpsl
sbb
xchg
inc
or
lods
pop
adc
xchg
insb
jo
loopne
cmp
inc
aaa
and
daa
pop
jmp
fldenv
dec
pop
mov
fcmovnu
test
out
cli
add
push
mov
xchg
test
rorb
sarb
mov
pushf
nop
ljmp
pop
cmpl
enter
das
fs
icebp
lds
push
push
stos
fnstsw
xchg
mov
adc
inc
xchg
fwait
hlt
out
and
adc
mov
adc
mov
leave
aad
sub
inc
shlb
cmpsb
fadd
pop
test
push
test
addr16
enter
cmp
jo
or
ss
lds
jns
nop
aad
repz
mov
scas
jge
xchg
in
out
xchg
ds
scas
push
test
sti
stos
mov
pop
jnp
jg
pushf
test
jmp
mov
lock
test
and
jnp
rolb
lods
lahf
ds
sub
xorb
jp
push
mov
ss
out
repnz
cmpb
pop
dec
es
divl
loop
pop
lea
cmp
fisttps
xchg
sub
scas
std
ror
pop
mov
in
sbb
out
mov
xchg
icebp
inc
mov
mov
clc
test
pop
jmp
mov
mov
mov
out
push
cli
test
dec
std
stos
add
dec
and
aam
pop
and
int
lret
ret
imul
push
inc
jo
insl
xchg
push
test
push
out
and
inc
loope
jmp
adc
cmp
mov
sub
mov
test
add
xor
xor
lret
dec
enter
jle
adc
xor
sahf
and
je
call
jmp
sub
mov
push
dec
movsb
mov
icebp
call
add
jle
mov
mov
scas
push
xchg
icebp
loopne
loope
mov
aad
dec
cmc
jmp
pop
cmpsl
fnsave
test
cmp
imul
adc
std
test
add
xchg
cmc
inc
xor
sbb
lahf
cmp
clc
pop
jge
fnstcw
ja
movsb
mov
mov
aad
dec
ja
pop
or
cmp
mov
in
repz
pop
in
int
mov
test
out
push
sahf
scas
adc
bound
mov
adc
rcl
fnstcw
int3
mov
leave
mov
in
imul
push
sbb
push
or
pushf
stos
mov
push
ss
jge
lea
sbb
xchg
push
push
test
and
mov
adc
sub
add
jnp
pop
jnp
test
mov
in
cmpb
push
imul
je
mov
cltd
repnz
xlat
adc
hlt
jb
ljmp
cld
sbb
jae
sarl
jbe,pt
pop
ffreep
inc
pop
push
and
gs
popa
pslld
frstpm(287
ret
dec
dec
or
xlat
popf
and
jne
int
prefetchnta
cmp
push
xor
fwait
mov
cmp
mov
inc
popa
addr16
xor
das
cs
mov
rorb
cld
enter
pop
iret
outsb
fs
fisubrl
fcomip
aaa
dec
jge
int3
mulb
mov
xchg
scas
hlt
mov
cli
es
and
mov
pop
jnp
sub
stc
rcr
rcrb
es
lods
dec
cmp
sbb
ds
jg
fsts
mov
xlat
rcrl
enter
push
shrb
popf
or
imul
lcall
mov
sbb
xchg
fwait
out
push
xor
adc
ds
cltd
pop
push
rcr
push
adc
xchg
sub
cmp
out
insb
andb
inc
push
cmp
add
sbbb
xor
mov
push
xchg
dec
push
divl
mov
or
sbb
jne
or
dec
icebp
dec
mov
testl
pop
sub
or
je
add
sarl
test
lods
mov
fimuls
nop
and
xchg
jae
mov
jl
add
mov
dec
jae
push
out
hlt
dec
je
imul
out
ja
lds
xlat
lahf
jge
cmpsb
pusha
test
pop
sbb
xchg
popf
pop
repnz
add
leave
pop
int3
dec
or
in
pop
mov
jbe
sbb
enter
or
xlat
inc
clc
mov
outsl
jle
out
popf
dec
jb
jae
sbb
arpl
dec
cmc
push
adc
xor
repz
cmpsl
mov
inc
shr
xchg
push
cmp
in
xchg
sbb
dec
pop
sbb
stos
cli
push
sbb
sbb
movsl
enter
das
dec
pop
shll
cwtl
mov
sub
mov
jns
ss
xorb
fidivrl
pushf
or
es
mov
cmpl
pop
mov
movsb
xor
movsb
in
jecxz
mov
cmpsl
pushf
fisubrs
pushf
fisttpl
add
loopne
and
jb
dec
popf
in
mov
cmc
popf
roll
popl
rclb
and
sub
xchg
xchg
call
or
lcall
inc
mov
lock
or
in
mov
popa
dec
xor
test
dec
sti
pop
insb
pop
adcb
pusha
popa
divl
push
cwtl
adc
pusha
cltd
push
cmpsb
cmp
and
cmp
sub
outsl
mov
xor
lods
lods
and
pop
xchg
inc
lock
hlt
sbb
ds
aam
aad
cltd
andl
data16
cmpps
popf
mov
scas
xchg
inc
push
dec
push
popa
into
xchg
pushf
addl
dec
sbb
roll
stc
lea
mov
pop
add
inc
pop
jnp
sub
push
dec
push
mov
test
xchg
sub
pusha
rcrl
sti
xchg
xlat
add
jnp
ja
xchg
sbb
outsb
and
js
push
xchg
filds
inc
mov
aaa
filds
in
pop
stc
loopne
rol
out
cmp
je
and
xchg
int
cld
mov
add
jo
fisubs
jnp
in
sbb
pop
pop
mov
rol
filds
push
fs
cmpsl
filds
outsb
xchg
fcompl
lret
jge
sti
lods
jne
push
lods
test
sti
mov
pop
xor
xchg
and
inc
out
fwait
in
push
fstl
or
pop
cwtl
dec
lods
lret
lahf
cmp
cwtl
xor
repnz
push
xchg
sahf
pop
cmp
xchg
imul
xchg
and
daa
xor
xchg
inc
arpl
xor
jne
repnz
pop
inc
cwtl
jg
enter
test
addb
mov
sub
push
and
dec
dec
shl
ja
test
mov
xor
shll
aaa
enter
cmp
inc
add
cld
jge
fcomps
icebp
xchg
and
xchg
cld
shll
js
mov
movsl
je
dec
fwait
loopne
and
mov
out
or
cmp
dec
ffreep
pushl
scas
shrb
mov
push
or
pop
pop
and
adc
mov
mov
mov
das
shr
push
jge
hlt
inc
or
pop
sbb
sbb
cmp
mov
ret
je
cs
pop
mov
out
sbb
sbb
inc
sbb
dec
push
xlat
stos
add
or
pop
in
fnsave
or
mov
xchg
mov
jo
sbb
mov
xchg
pop
in
ret
or
mov
dec
sub
push
call
add
xchg
inc
fsubs
iret
icebp
inc
and
pop
mov
pop
subb
mov
pusha
sahf
lods
xchg
in
push
and
xor
add
jmp
mov
in
sti
addr16
nop
xchg
jge
outsl
test
xchg
dec
lcall
data16
scas
cli
cmp
aad
dec
xlat
add
ret
arpl
gs
push
pop
jl
scas
lock
test
pop
inc
push
nopl
leave
out
cmp
or
test
sbb
ret
jo
iret
cmp
push
or
shll
pop
xchg
push
add
or
push
in
sahf
mov
sbb
xchg
cmp
subl
xor
jbe
xor
pop
int3
or
into
sahf
lahf
xchg
repz
sbb
push
je
mov
into
ljmp
test
mov
fmuls
pop
jp
sbb
movsb
ja
push
adc
sbbb
dec
adc
es
cld
movsb
mov
push
jbe
mov
pop
mov
mov
mov
stos
or
fwait
mov
dec
pop
out
dec
fwait
aas
mov
pop
dec
jg
fimull
cltd
jb
clc
cmp
fildl
mov
adc
movsl
jp
pop
cmpsb
cmpl
pop
insb
add
int3
test
fildll
ljmp
sarb
cltd
sbb
add
cli
bound
shlb
dec
push
pop
push
imul
sub
cli
call
sbb
xor
or
fstpt
gs
sbb
call
mov
sbb
out
rorl
repz
mov
gs
jp
icebp
or
push
adc
and
daa
icebp
mov
lret
jecxz
dec
jae
inc
iret
cmc
scas
in
add
fldt
mov
cmpl
push
dec
push
repz
xor
sbb
sbbl
lods
jl
pop
movsb
or
adc
push
jno
adcl
push
daa
adc
mov
inc
pop
sarb
hlt
outsl
stos
lods
jmp
jbe
adc
sbb
xchg
cltd
sub
ret
mov
insb
sahf
jne
cmp
orl
ss
shll
jmp
aad
nop
aas
mov
je
dec
ja
adc
jb
lret
int
cmp
lea
pop
das
popa
imul
repz
pop
leave
push
cmp
mov
jb
popa
dec
push
cltd
adc
add
imul
dec
loope
repz
mov
and
cmp
add
into
dec
int3
in
into
xor
lahf
scas
fcoml
xor
mov
decb
data16
mov
or
xchg
arpl
fyl2xp1
add
add
cmp
cmp
mov
jp
jnp
adc
mov
fisttpll
rcl
adcl
mov
jecxz
shlb
pop
js
xlat
sbb
xchg
cltd
fldl
hlt
mov
lds
or
sahf
mov
stc
pop
pop
dec
and
shl
fwait
repnz
push
outsb
or
xor
out
clc
and
js
add
test
out
add
pop
or
xor
add
inc
mov
jnp
adc
mov
jns
jns
sbb
enter
xor
cmpsb
imul
in
iret
lods
iret
xor
dec
shl
mov
mov
sbb
aam
fsts
insl
mov
pop
mov
orl
cs
cmpsb
flds
test
xchg
test
xor
mov
pop
add
jecxz
dec
mov
mov
sub
jge
pop
cld
call
je
fisttpll
lahf
sbb
icebp
sub
rclb
fimull
out
or
or
inc
add
ret
jmp
xor
mov
call
int3
or
mov
dec
pop
inc
sub
cmp
rcrb
push
adc
push
into
sbb
js
fwait
dec
dec
sub
push
or
and
aas
xor
lock
sub
pop
pop
test
mov
sbbb
enter
cmp
pop
push
outsl
push
cmp
imul
pop
xchg
outsb
add
lea
inc
xor
vpor
cmp
add
sbb
xlat
movsl
int
ud2
ret
fiaddl
mov
mov
cmc
jbe
dec
jl
shlb
dec
add
cmp
mov
sub
sbb
insb
in
mov
lods
lds
mov
mov
and
cmpsl
lds
sti
adc
fisubrl
jmp
add
mov
xor
inc
or
jnp
mov
jl
cmp
bound
mov
lods
arpl
cltd
mov
xor
and
jnp
leave
dec
fnstsw
clc
mov
out
fnstcw
cwtl
or
negb
pop
push
fdivrs
push
std
sbb
cmpsb
push
in
and
adc
push
addr16
sahf
pop
repnz
insb
adc
iret
xor
xor
in
mov
andl
pushf
jnp
aaa
fisttpll
aas
mov
push
inc
cli
clc
push
add
pop
mov
iret
rcrb
adc
imul
and
xchg
cmp
shll
in
push
rcrb
rorl
stos
sbb
ja
jle
pop
aas
hlt
dec
push
std
fcom
insl
jmp
cld
jbe
or
push
imul
int
xor
cmpsb
adc
lahf
iret
nop
in
int3
out
divb
adc
mov
inc
mov
out
ja
ret
in
sub
or
not
int3
shrl
add
xorb
outsl
stos
jns
jae
pmaxsw
push
loopne
dec
mov
mov
daa
ja
or
fsubrs
pop
adc
jle
fldenv
js
adc
or
pop
sbb
subb
into
mull
fisubrs
and
pop
lods
adc
pop
stos
dec
pmulhuw
and
mov
push
push
mov
fstp
mov
lret
inc
scas
nop
pop
push
cmp
push
lods
mov
ja
and
pop
pop
mov
add
mov
cld
push
insl
imull
and
into
add
cwtl
stc
push
adc
cltd
cwtl
xchg
cmpsb
push
fnstenv
aam
fwait
and
or
sahf
repnz
fcoml
loope
lahf
cmpxchg
sti
test
push
ficoms
mov
push
leave
add
sti
les
and
dec
jmp
mov
xchg
leave
xlat
push
adc
or
in
rcl
ds
in
orl
sub
iret
cltd
add
pop
dec
push
jecxz
mov
fnsave
sarb
enter
mov
out
pop
fimull
fwait
call
pushf
dec
cld
outsl
jmp
call
cmp
gs
call
mov
adc
inc
add
leave
mov
loop
dec
adc
inc
pop
arpl
jne
rcrl
cmp
out
scas
test
fwait
adc
cmp
adcb
push
push
outsb
popf
hlt
fmull
cmp
jmp
outsb
dec
mov
adc
shlb
adcl
cmp
int3
sub
fisubs
inc
cmpsb
dec
sbb
sub
dec
push
mov
push
sbb
lea
jne
jmp
js
sarb
adc
repz
push
adc
cmpsb
je
cmp
push
lea
and
jge
sbb
lods
pop
bound
xchg
xor
scas
push
int
jno
es
mov
sysret
mov
mov
imul
ret
pop
sbbl
ret
mov
dec
mov
adc
scas
add
popa
ret
xchg
jl
mov
mov
cmp
mov
push
dec
lret
inc
subb
mov
bound
fmuls
imul
pop
lret
pop
lods
sbb
xchg
sbb
cmp
lret
pusha
sti
dec
outsb
jl
cmp
mov
mov
ja
loope
lods
ret
int3
jnp
hlt
ret
sbb
call
sub
shrb
lret
mov
cwtl
mov
jo
test
xor
call
shld
data16
mov
pop
in
pop
dec
leave
adc
test
ret
addr16
xor
lods
jg
or
inc
mov
ret
jecxz
ss
lds
out
in
sub
push
push
mov
push
test
dec
pop
and
jns
mov
clc
add
pop
jg
stos
sub
adc
scas
faddl
xor
pop
mov
cld
aam
inc
or
popa
data16
jne
push
addr16
sbb
push
mov
jbe
pop
inc
jnp
jecxz
jmp
dec
loope
mov
lods
lods
clc
xchg
cmc
xor
aaa
adc
inc
in
fs
xor
dec
lcall
sbb
xchg
dec
jle
and
mov
imul
outsl
int
daa
fs
mov
dec
jmp
mov
incb
sub
scas
gs
jb
inc
cmp
push
inc
stos
cmp
ret
jmp
arpl
lcall
leave
ret
cld
and
inc
call
lret
pop
mov
and
pop
sub
jp
lea
push
sbb
aas
test
sub
mov
cmp
inc
push
stos
clts
mov
jg
mov
outsb
jge
mov
imul
insl
pop
rcr
icebp
pop
mov
loopne
pop
lret
sub
sub
aam
mov
ds
outsb
and
mov
add
xor
cli
out
mov
ffree
sub
ja
cmp
dec
push
pop
xlat
jae
repnz
loop
in
insb
shlb
into
subb
test
pop
pop
inc
or
aad
sub
hlt
pop
fldt
dec
jg
enter
pop
stos
cwtl
push
sbb
cltd
iret
xchg
pusha
adc
aaa
sbbb
dec
jmp
and
push
sar
addr16
out
out
dec
out
mov
mov
mov
pop
pop
sbb
jne
loop
fistps
lock
xor
add
and
outsl
and
mov
and
cmp
mov
call
mov
sarb
iret
call
out
sbb
or
les
jecxz
or
mov
xor
cmpsl
or
push
jb
lcall
lods
jmp
jnp
mov
or
test
bound
test
xchg
shrb
cmp
or
lahf
sbb
sbb
ret
movsl
lods
xor
mov
popa
push
xchg
sub
lods
inc
aad
pushf
sbb
shll
push
aad
popl
pop
bound
cli
xor
add
pop
sub
xchg
add
ss
xor
stc
jl
cmpsb
inc
pop
fwait
ss
leave
sbb
in
call
lock
lods
jge
iret
mov
pop
jp
mov
push
mov
pop
inc
imul
pop
push
sub
out
pop
add
in
popa
push
xlat
ss
ret
push
mov
aam
rclb
mov
sub
lock
movsb
push
add
xchg
std
mov
jno
inc
mov
sbbl
iret
xor
adc
test
stos
mov
lcall
popa
mov
jge
imul
dec
sti
insb
mov
cmp
and
lahf
sbb
rorb
xor
and
icebp
or
out
lods
mov
sub
lods
and
and
cltd
inc
scas
add
aas
push
add
pop
cmc
stc
mov
sbb
lods
sub
mov
cmpsb
addl
pop
inc
inc
jl
mov
pop
loop
xchg
mov
shlb
push
arpl
jl
xchg
push
gs
lods
aam
and
notl
xchg
fmuls
sbb
test
in
mov
inc
xor
jp
push
cmc
adc
scas
xchg
sbb
data16
or
mov
sbb
ret
cltd
insb
push
pop
jo
mov
mov
ljmp
jae
push
cli
fmuls
mov
mov
ss
inc
lahf
cmp
loopne
lock
adc
ret
dec
jno
call
fcomps
push
sub
lcall
and
loopne
sbb
subb
xchg
aam
inc
and
ss
or
adc
mov
push
idivl
sbb
es
push
out
jno
les
into
fmull
out
xchg
pop
or
jle
shrl
sti
test
dec
shl
pop
inc
loop
scas
mov
sti
pushf
xchg
adc
mov
cmp
push
je
loopne
fistl
push
xchg
and
fcmovbe
mov
shll
cli
in
jge
pop
jmp
mov
loopne
dec
decb
sarb
sub
add
jne
mov
sti
aam
daa
jp
loopne
mov
mov
mov
and
inc
xchg
add
mov
jbe
adc
mov
inc
mov
xor
es
mov
or
pop
bound
dec
lret
imul
jne
lret
movsb
ret
pop
and
test
push
mov
cs
push
test
cli
sub
pop
test
in
nop
cmp
xor
mov
test
movsb
or
xchg
outsb
adc
ljmp
jg
out
sub
mov
cltd
addr16
test
ret
xchg
iret
clc
repnz
scas
xchg
cmpsl
mov
push
push
push
jae
push
int3
dec
xor
push
xchg
push
pop
sbb
test
test
sbb
hlt
lcall
push
repnz
lods
mov
out
out
cmpsb
xor
push
stos
movsb
push
jmp
push
cmp
jae
inc
fldcw
pop
xchg
fisttps
mov
js
sbb
repnz
sar
mov
add
jg
push
dec
mov
cltd
mov
push
sbb
notl
jne
mov
add
pop
imul
adc
push
ret
or
or
add
fstps
fucomip
lods
inc
mov
xor
xor
mov
push
sub
jbe
jae
nop
mull
lods
lret
filds
inc
aas
or
pop
cmpsl
into
nop
cmp
pop
pop
add
jnp
int3
xchg
in
xchg
jecxz
and
jns
mov
ja
cmp
xchg
mov
and
mov
clc
sub
jo
xchg
ret
pop
jne
mov
xchg
repnz
jbe
mov
fcompl
mov
push
mov
ja
push
arpl
ret
mov
subb
and
out
xchg
fstpl
fldcw
insb
xor
mov
jns
mov
ficomps
pop
popa
cltd
nop
in
insl
and
loopne
mov
inc
fs
xchg
pop
xchg
inc
and
in
imul
ljmp
lock
pop
insl
push
push
sbb
rcrl
out
lock
mov
pop
aad
cld
in
add
mov
dec
sbb
mov
sarl
jg
push
les
jae
into
popf
add
xchg
jmp
sahf
ds
pop
push
add
orb
imul
adc
fiaddl
jns
mov
test
sarb
incl
sbb
dec
sti
adc
jb
inc
fcmovnb
xchg
movsb
push
sub
insl
fnstcw
xchg
imul
leave
into
sahf
rolb
sub
mov
gs
leave
idivl
jge
mov
pop
and
stos
inc
mov
pop
cmp
jno
and
and
test
sub
out
sahf
pop
mov
pop
insl
cltd
ret
jecxz
cmp
add
negb
mov
dec
push
xlat
xor
adc
lret
push
xchg
mov
push
add
jg
pop
stc
imul
mov
lea
addb
pop
mov
orl
xchg
sbb
jmp
push
mov
jle
fisubrs
push
outsl
mov
xchg
sti
mov
pop
stos
cmp
rclb
jnp
or
dec
pop
sbb
mov
mov
rcr
fwait
push
add
ss
cmp
notl
sbb
adc
loope
mov
shlb
fstl
loopne
int3
ljmp
or
and
jae
cli
mov
sub
mov
sub
mov
mov
lods
adc
inc
into
jno
mov
mov
in
adc
imulb
icebp
pop
dec
das
mov
jecxz
cmc
xor
gs
rorl
sub
or
sub
xchg
cmp
add
int3
sub
fs
jno
dec
and
dec
sahf
push
fdivrl
xchg
pusha
test
ret
jmp
cmp
jp
pop
pop
cmp
imul
js
and
xor
mov
pop
pop
sub
dec
mov
ds
push
sub
imull
mov
lahf
adc
loope
test
sub
sub
xorl
mov
lret
outsb
xchg
js
cmp
cmp
push
or
jecxz
xor
mov
or
and
into
sub
in
add
add
mov
mov
test
mov
jne
cmp
push
sub
jo
loopne
call
movntq
out
sbb
stos
pop
lahf
or
xchg
imul
pop
add
pop
cmc
dec
ret
mov
mov
pushf
lret
sahf
imul
xor
add
mov
gs
testl
pop
ss
int
subl
sbb
orl
orl
jmp
into
movsb
popa
sub
mov
bound
sahf
push
mov
fdivl
fldenv
jae
jno
push
adc
jno
lahf
test
push
or
clc
lods
icebp
sub
cltd
clc
sbb
sub
call
sub
imul
xor
pop
addr16
cltd
ds
mov
outsb
mov
mov
add
sti
and
outsb
cmc
pop
cmp
jae
sbb
cwtl
and
sub
icebp
pop
pushf
outsb
cmp
mov
and
and
lock
cmpsl
and
jg
mov
xor
popf
mov
mov
dec
push
loop
push
out
xor
pop
lock
outsl
scas
aad
xchg
loope
mov
rorl
imull
sub
outsl
push
adc
lahf
sub
fcoms
loope
xchg
jl
cmpsb
pushf
jle
xchg
in
mov
cmp
mov
ret
cmp
push
xchg
xchg
cmpsb
jmp
xchg
in
jb
repz
or
and
jmp
int
dec
cmp
cmp
jmp
cmpsb
inc
arpl
jp
test
rorb
jge
flds
mov
aad
nop
cmp
daa
stc
pushf
inc
aad
xchg
mov
jno
cmp
je
repz
add
ret
in
icebp
lret
pop
lret
jmp
xor
aaa
scas
xor
adcl
add
adc
clc
jae
jl
mov
xchg
jnp
cli
outsl
xor
pop
mov
cmp
push
or
push
inc
aas
test
ljmp
add
push
sub
xor
push
flds
loop
xchg
jecxz
mov
mov
lock
out
or
xor
lods
sti
sbb
mov
ret
inc
pcmpeqd
cmpb
pop
icebp
cmp
cld
or
xchg
mov
xchg
repnz
add
pop
scas
dec
popf
fs
shll
sub
and
or
mov
adc
ret
push
jge
adc
xchg
ss
std
movsb
shlb
scas
daa
ljmp
mov
push
fisttpll
clc
inc
jae
lcall
mov
push
test
fwait
lds
fnstsw
sahf
cwtl
aas
ljmp
inc
push
test
hlt
stc
or
pop
test
fnstsw
jg
mov
sub
or
in
addl
mov
lcall
jnp
nopl
fidivs
ja
jne
jp
and
std
jbe
and
mov
into
loopne
rcl
add
jno
pop
fcoms
jnp
xchg
xor
mov
cmpsl
sub
adc
adc
ljmp
aaa
test
sti
adcb
test
out
jmp
mov
cmpb
sbb
incb
pop
in
test
add
sub
lahf
popa
ret
mov
mov
xor
pushf
inc
dec
mov
loopne
sub
and
into
in
mov
fsubs
test
sahf
ret
push
imul
sub
ja
stos
xor
xchg
dec
mov
fwait
mov
scas
testl
rol
subb
leave
outsb
lds
or
mov
xchg
and
dec
aas
movsb
sbb
mov
pushl
gs
inc
pop
in
push
movsl
mov
cltd
sbb
dec
inc
adc
pop
sub
pop
xor
cwtl
inc
mov
shlb
test
testl
jle
jae
out
sbb
hlt
mov
push
lock
pop
xchg
jle
stc
sbb
repz
cmc
imul
mov
mov
gs
out
lret
addr16
inc
pop
cld
and
xorb
sbb
pushf
xor
mov
push
into
sub
push
jnp
arpl
jge
test
movsb
les
adc
shrb
subl
ja
outsl
popf
sub
fidivrs
dec
push
or
mov
xchg
test
cmpsl
clc
mov
adc
add
nopl
push
cwtl
dec
xchg
aaa
sub
adc
and
and
inc
incl
jae
in
dec
pop
inc
sbb
test
mov
jne
sbb
or
mov
int
cltd
popa
in
jmp
arpl
push
mov
outsl
btr
push
mov
xchg
bnd
fldt
rcrb
popa
dec
stc
add
outsb
inc
mov
and
ljmp
jo
data16
aaa
jge
scas
push
loop
cmpb
enter
jno
and
bound
mov
jnp
jp
add
xchg
push
push
xor
loope
dec
aas
mov
xor
ret
pop
inc
and
fdivp
testl
pop
xchg
cmc
inc
push
adc
pop
mov
daa
push
adc
and
scas
sbb
jno
cmp
mov
adc
push
adc
cwtl
rdpmc
cli
pop
into
and
push
mov
nop
sub
mov
cmpb
jp
aad
push
fucomi
stos
add
daa
clc
testb
out
hlt
out
repz
jmp
add
add
outsl
mov
mov
cld
pop
push
dec
mov
mov
icebp
jge
fs
cmp
cli
mov
inc
lcall
inc
lods
sbb
cmp
sbb
pushf
pop
cmp
xor
and
mov
or
adc
jmp
popf
or
and
sub
adc
js
dec
out
inc
adc
xor
in
mov
lret
jnp
xlat
aaa
adc
rclb
fiaddl
xchg
lcall
jle
cmp
out
lea
mov
daa
jp
xor
fisttpl
jb
lods
cld
popa
cmp
add
mov
div
adc
inc
inc
cli
loopne
mull
inc
cmp
cmp
jge
jge
add
insl
dec
dec
or
pop
or
movsl
shlb
sub
xlat
cld
cli
add
insl
lret
sbb
dec
es
lds
jmp
add
out
mov
push
sub
mov
jb
mov
pushf
push
mov
fwait
push
jne
and
jae
clc
cmpsl
xlat
imul
fldt
sub
cmp
loop
mov
arpl
or
push
stc
inc
mov
jl
divl
sbbb
out
jmp
push
scas
mov
out
sti
insb
jne
outsb
sqrtps
ljmp
add
cmpsl
fwait
aas
inc
sbb
fbstp
mov
xchg
sahf
adc
addb
sbb
std
jecxz
jns
or
and
leave
clc
pop
mov
aam
mov
repz
xchg
mov
dec
mov
jne
ja
out
jg
fsubl
fnclex
ja
jle
xchg
cmp
imul
lds
aam
gs
cmp
or
adc
dec
clc
jmp
pop
sbb
lds
jle
jg
pop
ret
fs
sub
adcl
test
mov
pop
mov
testb
inc
sbb
aam
orb
popl
hlt
rorl
into
xor
into
mov
mov
cmp
aas
add
stos
arpl
dec
mov
adc
ficoms
insl
repnz
mov
adcb
pop
insl
push
test
iret
movsl
mov
shll
push
sbb
sbb
cmc
loop
rcll
bound
cmp
stc
pop
icebp
out
inc
or
mov
jae
stos
or
ds
stos
subb
cld
fld
pop
and
mov
cmp
xor
lahf
imul
add
sbb
ret
rorb
sub
inc
jnp
ret
leave
xor
sahf
dec
mov
out
pop
mov
xchg
mov
aas
add
movsl
and
arpl
stos
cmp
or
sub
xchg
push
aad
adc
cmpsl
fcmovne
inc
sub
pusha
push
xchg
xor
je
mov
clc
xchg
scas
vunpckhps
sub
jge
sbb
mov
mov
rcl
pop
xor
pop
fnstenv
push
lock
imull
outsb
xor
aas
addb
test
je
sub
loope
pop
into
inc
bound
sub
out
or
push
clc
xor
xchg
bound
out
lds
data16
sarb
pusha
lock
push
mov
mov
add
lds
out
std
iret
xchg
xor
pusha
lret
int3
aad
clc
pop
cli
ljmp
orl
arpl
insb
fdivl
gs
xor
jl
jno
mov
jnp
out
sbb
jge
or
mov
lods
sbb
mov
iret
mov
nop
pop
xchg
popa
add
in
mov
jmp
fcomp
lret
adc
dec
sbb
lds
jo
jnp
and
push
dec
xor
or
xchg
cmp
jno
mov
nop
jns
xor
stos
adc
cmp
and
adc
and
and
jle
adc
pop
in
addl
dec
jns
fidivl
cmpsb
ja
sbb
gs
xor
lret
add
sahf
stc
push
addr16
std
or
push
test
ss
or
sub
ret
xor
xorl
mov
mov
test
in
sub
aas
dec
sahf
fstpt
mov
mov
adc
mov
xchg
orb
movsl
fsts
fistpll
or
add
aam
lea
fistl
adc
fisttpll
pop
cli
pop
pusha
les
cmpsl
xor
push
add
in
pushf
rcrb
xor
mov
cmp
cmp
in
adc
cwtl
fstps
and
and
cmp
cmpsl
cmp
sub
mov
or
jge
lods
mov
jne
aaa
xlat
ds
stos
pushf
popf
je
xlat
jmp
or
iret
pop
sbb
outsl
cmpsb
jp
mov
fiadds
pushf
push
test
pop
popa
pop
mov
fnstsw
cmpsb
jecxz
ss
or
movsl
jmp
mov
jns
jne
faddp
mov
pop
inc
jne
fsubs
xchg
mov
mov
loopne
push
pop
movsl
inc
cltd
xchg
movsl
push
int
test
cmc
ljmp
and
and
xchg
insb
mov
sbb
push
jns
out
xor
imul
cmp
mov
lcall
or
xchg
popa
lahf
pop
std
mov
repnz
jmp
jmp
inc
push
shll
or
je
ljmp
cmpsl
jg
clc
jp
cmp
lock
test
test
mov
fstpt
sub
popa
rorb
frstor
int3
imul
inc
ds
inc
cmpsl
adc
push
in
test
jmp
dec
cs
mov
pushf
mov
inc
or
fcompl
lret
fstps
add
jmp
cmpsl
fistpll
and
cli
lods
fwait
and
scas
stc
pop
das
and
loop
sar
in
loopne
and
pop
outsl
insb
hlt
lods
jle
xchg
adc
push
lods
or
jo
lock
cltd
and
iret
jl
jg
cmovg
into
dec
or
outsl
inc
push
leave
cmc
jp
jno
jne
dec
dec
pop
and
adc
push
in
pop
cltd
inc
cmpsl
push
cmpl
call
xor
imul
push
aas
push
xchg
jge
mov
lret
jl
pop
wrmsr
insb
int3
imull
mov
popa
bnd
je
ja
mov
mov
insl
popa
arpl
les
test
xchg
bswap
dec
imul
sti
mov
and
xchg
popf
xchg
insl
stos
setns
mov
insb
push
fimuls
rcll
jmp
jl
dec
jl
test
xchg
xchg
cmp
movsl
movsb
jge
pusha
ljmp
dec
pusha
mov
in
lds
fcoms
pop
jbe
dec
test
adc
xchg
jne
pop
imul
pop
in
sub
inc
dec
je
stos
mov
push
xor
call
nop
inc
cmpsl
shlb
jno
enter
lret
les
sub
leave
lds
std
imul
jo
xor
lahf
jge
cmp
ret
mov
add
std
jo
sub
mov
shrb
imull
lods
inc
adc
rorl
jbe
dec
jecxz
cmp
xor
stc
inc
mov
rcr
nop
pop
test
cmp
in
and
and
pop
sub
pop
jnp
xchg
lcall
out
out
push
test
mov
pop
mov
leave
push
fdivr
arpl
add
rol
movsl
push
push
pusha
mov
mov
jle
movsl
dec
mov
inc
mov
sub
push
scas
sahf
loop
dec
inc
pop
loopne
gs
dec
cli
es
pop
or
jg
jbe
fwait
cld
sub
outsb
gs
sub
jg
lahf
mov
insb
push
sbb
repnz
ljmp
aam
pop
or
adc
dec
mov
add
lret
add
xchg
push
in
cmp
xor
in
das
xor
jbe
std
jns
enter
mov
add
out
push
fwait
add
xchg
mov
push
cmpl
std
pop
ret
xchg
jmp
push
sahf
movsl
inc
rcrl
push
orl
or
rorl
ljmp
dec
mov
inc
push
ja
jle
ljmp
jmp
cmp
mov
sbb
sti
xchg
enter
cld
out
lds
lods
dec
jnp
dec
or
aam
cmpsb
adc
mov
sbb
pop
mov
addr16
leave
push
sbb
repnz
or
jbe
push
jnp
and
in
mov
and
push
rcrb
lock
pop
testb
xchg
movsl
pusha
stos
jne
push
xchg
rcl
xchg
or
and
xchg
repnz
mov
lret
clc
push
stc
cmp
bound
mov
stc
adc
sub
and
loopne
jae
add
mov
add
movsb
outsl
clc
and
adc
ret
in
ret
ljmp
shlb
shll
xor
enter
sub
scas
xor
cmc
lods
pop
sbb
fdivl
jge
inc
out
out
xor
cmp
jge
cmp
or
lods
sbb
inc
and
shlb
sub
xlat
test
rcl
mov
sub
xchg
fisttpll
push
cmp
mov
adc
lds
push
push
adc
daa
and
push
out
adc
movsb
sub
cltd
and
enter
jo
sbb
es
xchg
hlt
jmp
sbb
mov
out
aam
or
jnp
cmp
pop
push
imul
sub
pop
jb
and
inc
push
push
push
aas
fs
fadds
xor
test
xchg
push
iret
mov
mov
push
xchg
repz
xor
fdivs
stos
mov
imul
pop
jmp
pop
xchg
add
fisubs
scas
daa
lcall
add
int3
sub
fmull
jmp
sbb
sbb
lds
xchg
and
jb
xor
xor
cwtl
fcoml
lret
fidivs
stc
jne
dec
sti
mov
dec
movsl
jmp
out
jmp
jl
mov
inc
dec
xchg
sbb
jle
cmpsl
mov
ret
das
addl
pop
ljmp
xor
mov
inc
push
je
js
adc
cli
and
sub
insb
push
cmp
es
out
in
sub
sbb
movsb
push
lock
and
mov
leave
js
ret
pop
es
jle
daa
das
mov
xchg
fstl
enter
adc
cld
popa
pop
cs
mov
aam
xchg
arpl
or
rcll
stc
movsb
inc
or
xchg
fstl
sub
inc
test
push
dec
xchg
inc
push
aam
hlt
push
ficoms
xchg
les
push
jmp
mov
out
xchg
push
add
add
int3
stos
mov
inc
inc
sub
arpl
mov
mov
jg
or
lods
push
jge
mov
sbb
lea
jne
js
ja
jo
xor
cmp
fnstsw
mov
outsl
outsl
jno
div
mov
jl
popf
in
mov
inc
xchg
adcb
adc
cmc
inc
sbb
dec
push
mov
sbb
push
jmp
and
nop
xor
mov
push
cmp
daa
cmovno
sub
pop
inc
push
sbbl
xlat
rorb
bound
aas
push
jb
gs
jle
dec
cmc
adc
pusha
cs
mov
push
pop
cmp
aam
gs
cmpsb
cmp
xor
or
mov
cli
subb
xchg
dec
dec
enter
aaa
jo
cmpl
cli
jecxz
and
pop
jne
xchg
mov
call
rcll
inc
arpl
aam
cmp
or
loopne
fisubl
jno
aas
push
js
in
jp
and
adc
mov
mov
add
adc
je
negb
cmp
repz
push
mov
dec
repnz
hlt
jp
mov
aad
ja
push
inc
ret
mov
dec
dec
sti
pop
push
test
or
dec
mov
cmc
mov
pop
test
test
aam
push
fstps
fidivrl
jbe
sbb
outsl
ficoms
fdivl
outsb
scas
add
jle
std
cmp
adc
sti
sahf
xchg
inc
enter
lods
sub
js
jg
mov
and
jl
inc
mov
out
xlat
aam
sub
stc
inc
pop
mov
xor
ret
inc
pushf
mov
pushf
addl
insb
dec
jne
xor
jns
jae
cmpsl
pop
pusha
aas
cmp
jns
or
andl
mov
rcl
in
sbb
inc
loope
imul
movsl
aaa
sub
popf
fisubl
fs
clc
or
xchg
out
in
stc
or
and
xchg
push
mov
inc
cwtl
fmuls
fimull
arpl
and
inc
jbe
pop
loop
cmp
pop
je
subl
add
inc
xchg
dec
or
adc
repz
push
xor
test
mov
nop
add
xchg
test
or
mov
mov
mov
mov
repz
inc
pop
cltd
pop
int3
and
mov
cmpb
bound
movsb
mov
push
push
pop
mov
lret
lods
jg
insb
iret
not
fisubrs
repnz
fimuls
mov
fsubs
jmp
push
aas
adc
mov
sbb
sub
cmc
cmpsb
xchg
pop
dec
mov
mov
inc
push
pop
xchg
and
adc
jo
mov
xchg
sub
add
inc
mov
shrl
aaa
and
dec
das
fdivrp
outsl
and
inc
es
mov
incl
xchg
xor
test
subl
je,pn
xor
lods
inc
stos
mov
and
mov
add
enter
pop
leave
push
insb
test
popf
cmp
stos
push
pop
js
and
jo
ret
mov
mov
pop
jp
add
stos
mov
xor
lods
push
fs
testb
test
mov
pop
addr16
lret
testb
jg
outsb
lock
push
cwtl
xchg
pop
sub
and
mov
sub
aad
out
mov
roll
push
imul
mov
lds
mov
adc
add
add
filds
and
jl
dec
mov
loopne
xlat
jg
pop
cmp
jb
xor
mov
jl
cli
test
dec
imul
imul
cmpsb
outsb
jo
cs
xchg
call
mov
std
fdivr
cmpsb
ja
mov
push
dec
or
ljmp
test
or
jle
inc
cltd
aaa
mov
cmp
pop
int3
mov
cltd
xchg
and
xor
push
dec
adc
mov
icebp
aaa
cmc
sbb
mov
jp
imul
fmul
dec
mov
jl
push
xchg
adc
push
xchg
cmp
jl,pn
ds
enter
cld
int3
in
mov
lcall
xchg
scas
cwtl
sti
cmp
xor
mov
ret
das
outsb
lcall
mov
xchg
push
mov
out
jp
jl
pop
cmp
dec
fdivrs
das
xor
ja
sbb
ljmp
in
int3
add
jns
repnz
mov
jmp
mov
jnp
inc
cmp
das
jo
and
adc
push
ja
fdivr
lods
jge
push
sarl
pop
xor
stos
aas
or
adc
inc
push
lret
sub
lret
jg
pop
sahf
xlat
mov
xor
icebp
mov
in
xchg
xchg
lea
popa
loopne
xchg
fs
jecxz
pop
arpl
fdivp
dec
push
out
mulb
mov
out
xchg
jnp
enter
mull
or
or
mov
jae
adc
cld
fdivr
sub
iret
icebp
lea
and
cmp
xchg
inc
jge
fdivr
pop
insb
sub
push
jbe
xor
arpl
cmpsl
adc
rclb
mov
out
and
sbb
and
aad
int3
in
iret
xchg
xor
aas
push
inc
sub
out
sbb
aad
xor
out
and
shrl
cwtl
ss
adc
inc
adc
xor
mov
inc
mov
dec
push
cld
xchg
or
in
lahf
cmp
add
clc
pop
pop
or
movsb
dec
jo
ss
rclb
sbb
das
mov
dec
push
inc
imul
or
in
pushf
fstl
adc
imul
aas
sbb
cwtl
xor
xor
push
roll
aad
popa
insb
mov
test
mov
pop
mov
jp
test
inc
popf
jnp
cmp
inc
pop
test
stos
sarl
mov
aam
cltd
loope
sub
sbb
pop
cltd
out
inc
inc
std
out
jb
adc
js
add
sti
jne
cli
mov
cs
test
mov
xchg
testb
or
push
dec
insb
mov
dec
lods
push
repnz
stos
mov
test
and
push
mov
es
xchg
jmp
int
xchg
mov
cwtl
push
push
push
adc
negb
imul
sub
xor
mov
add
adc
test
cld
aad
cs
sti
pop
and
cmc
test
mov
dec
jmp
mov
xor
cmpsb
shlb
es
mov
sbb
fisubrs
std
xor
push
mov
jmp
mov
mov
jns
lods
insl
inc
xchg
rorb
or
push
xlat
mov
cs
clc
test
test
add
sahf
rorb
fmul
add
xchg
sub
mov
push
lret
leave
adc
adc
idivl
les
mov
mov
mov
mov
xlat
ja
or
sbb
out
loope
fisubl
cmp
xchg
and
push
ret
sbb
filds
clc
jns
xor
pop
mov
mov
add
arpl
movsb
lahf
jae
aaa
ljmp
stc
xorb
ret
sub
dec
ja
out
xlat
dec
lods
into
shll
push
xchg
sub
test
enter
sti
fabs
pop
mov
cwtl
cld
inc
mov
in
iret
cmp
stos
inc
push
sbb
in
je
in
enter
sbb
push
mov
jns
xchg
mulb
fistpll
in
adc
das
ficompl
pop
pop
mov
nop
sbb
in
sub
bswap
mov
scas
or
jp
xor
lds
add
and
frstor
ficomps
mov
mov
sbb
inc
aas
mov
rcr
std
rcl
sbb
xchg
and
fisubs
push
mov
inc
cmp
sbb
ret
cs
not
pop
mov
div
icebp
lock
orl
sahf
in
dec
jl
push
or
pop
mov
mov
cs
test
inc
fs
lock
mov
fistpl
test
gs
and
add
sub
movsl
pushf
adc
adcb
aad
pop
xor
stos
fnsave
movsb
or
pop
in
lret
pop
sub
lea
inc
pop
mov
and
daa
cmp
mov
aaa
leave
push
dec
lods
shr
jle
push
jl
rcrb
push
xlat
daa
jae
jecxz
and
dec
cld
shlb
jmp
aaa
nop
test
add
pusha
stos
aad
add
mov
push
add
and
into
ljmp
mov
popa
ret
rclb
or
out
inc
sbb
inc
lock
pop
ret
out
stc
dec
mov
jb
mov
aaa
int
pushl
inc
movb
dec
inc
outsb
jbe
mov
push
cwtl
fs
mov
scas
call
pop
loopne
inc
loope
jbe
cmpl
sbb
xor
into
leave
into
dec
fsubr
nop
mov
mov
dec
incl
ljmp
mov
rol
iret
jg
loope
mov
lods
adc
sarl
xchg
enter
mov
imul
stos
test
loopne
push
sbb
mov
int
into
mov
loope
std
mov
test
add
inc
push
fnstsw
inc
xchg
cmp
sub
les
std
pop
dec
lds
movsl
dec
jno
iret
xorb
das
cli
dec
inc
in
sahf
dec
mov
mov
ret
mov
and
add
pusha
xchg
cmc
xor
mul
and
xor
sbb
jbe
inc
imul
shl
pop
add
dec
push
andb
mov
mov
icebp
mov
push
or
xor
fs
cmp
or
rorb
int
sbb
lahf
out
push
lret
dec
inc
sbb
jge
push
mov
imul
test
and
cmp
jecxz
testb
loop
xor
nop
int
dec
jle
int
fldcw
mov
std
js
push
sti
xor
mov
mov
add
pop
or
xchg
std
jl
and
sbb
push
rorb
pusha
mov
pop
jecxz
into
ss
lods
call
fdiv
out
aad
test
mov
orl
repz
cltd
fisttpll
aad
lcall
inc
cmp
out
add
fldenv
or
ss
enter
lret
lcall
repnz
sub
data16
cltd
push
sub
arpl
cmp
sub
hlt
pop
mov
jb
cmp
or
and
jnp
jge
add
out
loopne
cltd
arpl
mov
sti
push
pushf
xor
push
sarl
and
sub
je
fistps
push
xchg
jl
add
lret
enter
sub
fcompl
pusha
stc
push
sbb
or
aad
jne
push
dec
repnz
fwait
movsl
or
mov
cmp
fisubrs
jo
mov
inc
pop
or
mov
adc
dec
std
into
xchg
pop
adc
sahf
out
lds
sbb
or
out
out
fildl
leave
test
ja
jbe
adc
stos
mov
jbe
sub
movsl
add
cmpsl
mov
idivb
arpl
jne
mov
or
shlb
mov
outsl
or
mov
add
add
ret
push
insb
jns
jo
mov
xchg
adc
pop
jno
cs
out
das
in
xlat
stos
push
push
xor
mov
je
jle
pop
xor
dec
sahf
jp
iret
jp
rorb
stos
jbe
adc
cld
mov
int
jmp
mov
scas
cltd
ror
cli
dec
push
adcl
cmp
sub
or
adc
nop
mov
loope
ret
mov
mov
mov
mov
imul
sub
mov
push
inc
dec
fcomp
mov
cli
idiv
fnstcw
cwtl
and
jnp
inc
je
pop
int
hlt
aas
mov
push
scas
mov
aas
mov
scas
cmp
sub
dec
out
in
xchg
faddl
pushf
repnz
subb
pop
test
and
push
xor
mov
cs
imul
sarb
minps
cmp
ds
cmpsb
int
lods
movsb
inc
sbb
icebp
xchg
jl
adc
or
mov
and
pop
dec
stos
cmp
test
or
orl
add
call
popa
push
add
in
mov
data16
scas
shrl
outsl
push
xor
xchg
ljmp
dec
mov
xor
pop
sbb
mov
rcll
movsb
stc
xchg
push
in
xchg
fcomi
ss
fwait
mov
ror
jp
arpl
test
xchg
gs
mov
xchg
movsl
push
out
cmp
pop
lret
call
fisubrl
in
out
into
imul
cmp
lcall
fwait
sub
xchg
push
jg
cmpsb
adc
pushf
xchg
sbb
jne
ret
ss
dec
repz
jl
adc
sbb
lods
int3
mov
jno
push
and
cmp
sarl
jle
popa
scas
fwait
repnz
xchg
fdivrs
sub
jl
push
jbe
mov
mov
aaa
add
dec
aad
lock
rol
cmpsb
std
sbb
lret
rolb
pop
sbb
fwait
add
arpl
xor
pop
push
xchg
sub
in
mov
sbb
out
xchg
popa
stos
int3
xor
subl
xchg
fstps
dec
insb
daa
pop
or
ret
pushf
out
xchg
repnz
mov
enter
xchg
leave
aas
mov
fcmovnb
or
pop
push
jo
jbe
pop
lret
loopne
push
addr16
add
js
ja
push
mov
push
mov
icebp
push
pop
inc
test
ja
fs
fs
mov
mov
lods
add
fs
adc
push
hlt
dec
aam
insl
xchg
stc
repnz
fistpl
imul
push
iret
adc
ret
and
mov
xor
ljmp
or
daa
daa
fmull
in
dec
xchg
mov
xor
lods
cmp
mov
iret
out
inc
sbb
iret
push
mov
push
and
ljmp
das
adc
fstps
cwtl
pop
jb
loop
push
fdiv
pushf
jl
dec
cmpsb
int
test
popa
mov
xchg
xchg
mov
push
popf
push
mov
loopne
cmp
mov
std
or
imul
push
sbb
imul
lds
push
lcall
mov
outsl
popa
mov
ja
sti
pop
inc
xor
subb
fdivr
sbb
or
or
shl
xchg
arpl
lahf
pushf
arpl
cli
and
mov
mov
and
lods
daa
es
jbe
add
insl
and
out
fwait
aas
rorl
push
nop
jo
into
sti
call
stc
lock
mov
jbe
jecxz
hlt
push
add
push
sti
or
cld
add
aad
push
xor
int3
sub
jg
out
nop
xchg
mov
enter
and
rorb
arpl
xchg
sub
or
imul
mov
xchg
iret
push
mov
hlt
scas
jnp
dec
lea
mov
das
pusha
sub
mov
out
fwait
push
mov
cmpb
jge
add
adc
push
insl
sub
popa
fisubrs
dec
jne
jno
nop
fucomp
stos
dec
xchg
scas
xchg
fsub
push
sbb
push
test
je
xchg
movsl
fcmovb
rcrl
mov
icebp
cmpsl
pop
sbb
lds
jl
rcll
push
push
xor
add
sahf
mov
and
int3
inc
push
lret
mov
sbb
xor
out
or
cli
test
punpcklwd
pop
or
popa
mov
xchg
stos
push
shrb
mov
pop
jl
add
lock
xchg
pop
mov
sub
xchg
cmp
xchg
adcl
out
lea
aad
xor
les
cmp
sbb
and
push
push
lock
push
pop
pushf
or
paddusw
jne
scas
bound
and
aas
lds
enter
cmp
std
fldcw
pop
xchg
gs
xlat
int
inc
mov
shl
or
loope
inc
mov
test
arpl
push
rcrb
push
loope
out
mov
mull
je
sbb
aaa
jle
jmp
stos
cmp
mov
dec
out
mov
stos
sbb
and
mov
shlb
mov
and
cmpsb
repnz
and
cli
aaa
inc
or
add
mov
or
push
mov
mov
jmp
aad
dec
push
inc
jecxz
in
gs
cmp
std
jb
into
aas
pop
in
pop
push
lret
inc
cmpsl
push
daa
push
mov
jnp
jns
cs
sub
inc
icebp
movsb
push
fldt
sti
push
mov
shl
lea
xor
loopne
pop
out
cwtl
inc
and
xchg
push
out
and
cltd
loope
inc
filds
hlt
pushf
popa
outsb
pop
mov
ret
subl
push
xor
add
cltd
sti
xchg
cwtl
lret
faddl
pop
in
lret
rorl
clc
ret
subl
push
arpl
test
mov
adc
sbb
sbb
dec
mov
lds
add
es
pop
out
pop
sti
movsb
push
ja
jno
sbb
out
push
int3
xchg
jbe
mov
out
or
xchg
test
inc
sub
cltd
dec
movsl
xchg
hlt
sub
adcb
test
mov
sub
int3
xor
add
cwtl
in
xchg
mov
rolb
adc
cwtl
jmp
pop
mov
xchg
xchg
int
out
jl
clc
inc
cmp
out
xor
push
int
jl
les
js
and
inc
xchg
add
adc
sub
aas
pop
stos
lds
cmp
sub
xchg
shlb
adc
imul
mov
movsl
mov
adc
sub
decl
adc
fnstcw
mov
inc
inc
push
add
mov
jo
cld
and
sbb
addb
adcb
scas
or
inc
std
lret
sub
mov
ret
xchg
pop
jle
fdivs
loope
sbbb
repz
xchg
sahf
nop
nopl
pushf
movsl
inc
popf
jb
or
divb
mov
test
pop
xchg
jecxz
test
loop
mov
mov
daa
mov
test
push
push
mov
sahf
cli
in
jmp
pop
xlat
cmp
scas
ljmp
out
int3
loop
cmp
lea
dec
mov
faddl
shll
push
mov
not
mov
mov
aad
mov
data16
fcomps
mov
mov
push
mov
cmpsb
int3
daa
cli
imul
mov
out
xorb
and
leave
shrb
and
imul
mov
je
xchg
pop
cld
loop
clc
mov
in
adcl
dec
and
stos
sub
dec
popf
dec
mov
add
jecxz
das
mov
daa
mov
cmp
xchg
lahf
mov
add
lret
pop
add
push
pop
pop
or
xlat
mov
loopne
adc
or
cmp
add
cmp
push
push
ja
pop
dec
fimull
push
mov
shlb
jne
push
jecxz
movsb
mov
cwtl
cs
in
loopne
push
xor
clc
xchg
sbb
iret
out
mov
shrl
sbbb
jmp
movsl
ret
je
ret
mov
xchg
xor
mov
push
into
sbb
push
mov
push
add
test
mov
mov
leave
pop
push
std
mov
xlat
pop
push
jns
xchg
jecxz
mov
clc
dec
jb
lds
lahf
movsb
cmp
mov
jle
daa
ffreep
xchg
mov
pop
push
in
ficoms
icebp
jns
jb
pop
xor
pop
into
dec
loop
popl
sub
cmp
push
sub
test
stc
jo
mov
push
push
dec
jge
not
enter
inc
pop
pushf
add
lock
or
lods
inc
mov
cmpb
sub
pusha
mov
add
adcl
inc
sub
mov
inc
out
pop
adcb
bound
out
push
push
push
lcall
ret
push
inc
sub
mov
in
in
add
cmp
xchg
cld
xchg
in
mov
dec
fsubl
gs
xchg
cmpsl
sbb
out
imul
pop
outsl
xchg
je
ss
inc
lcall
dec
das
ss
test
adc
arpl
popf
je
js
ret
inc
adc
test
cld
pop
xchg
roll
pushf
test
xchg
cltd
test
dec
in
pop
sbb
jmp
divb
xchg
cmpsb
lret
or
pushf
lret
pop
xchg
cmp
adc
stc
ds
xchg
mov
pop
iret
rcrb
data16
jl
jns
das
push
mov
adc
xchg
cli
and
pop
dec
push
sbb
ja
cmc
and
jecxz
sti
pop
sub
mov
xchg
xchg
cmpsb
sahf
sbb
lock
add
lea
sub
sub
push
cmpsb
add
ds
fimull
ja
in
dec
pushf
mov
loop
mov
mov
cmc
movsl
pop
add
sbb
cmpsb
icebp
jmp
mov
lea
cmpsl
jbe
or
loope
repnz
pop
aam
jg
sbb
pop
ja
and
pushf
mov
mov
xchg
sub
iret
sarb
insb
lds
ret
cmp
xchg
jecxz
repnz
cmp
add
fs
test
loope
cmp
inc
mov
popf
test
hlt
mov
fwait
dec
jl
pop
hlt
adc
mov
sbb
iret
and
jl
mov
test
out
fadd
lahf
xchg
mov
in
xchg
push
gs
aas
jbe
test
imul
repnz
icebp
and
add
pshufw
je
pushf
add
sub
aam
sub
inc
bound
add
xor
movsb
repnz
and
sbb
push
sbb
mov
xchg
rolb
dec
fwait
test
scas
xor
imul
dec
sti
push
mov
sahf
nop
mov
and
pop
sub
or
data16
and
mov
xor
ss
sbb
and
push
in
lcall
shrb
test
add
mov
std
aam
adcl
movsl
jmp
aaa
daa
pusha
add
inc
pusha
jle
jmp
jno
insb
mov
test
xor
add
std
les
cmp
fimuls
xor
inc
inc
movsl
mov
sub
aad
shr
pop
shll
inc
and
outsl
das
lret
mov
xor
mov
in
arpl
mov
ss
mov
mov
cmpsl
ret
sbb
iret
adc
xchg
and
cmp
or
xlat
and
data16
xchg
mov
add
addr16
out
mov
dec
fwait
push
andb
xor
xchg
pop
js
or
mov
xchg
cmpsb
mov
mov
sarl
stc
insb
hlt
jno
pop
das
aam
mov
jne
lods
test
lcallw
leave
std
test
cmpsl
in
addr16
xchg
in
lret
xchg
inc
jo
out
int
adc
imul
in
inc
cmp
mov
adc
jb
fs
lcall
mov
shlb
pusha
jle
push
mov
push
push
cli
push
pusha
lret
xchg
jmp
out
and
sbb
clc
lret
aam
in
jge
in
cmpsb
and
pop
dec
ljmp
popf
int3
xor
repz
jp
dec
pop
mov
and
pop
jecxz
pop
inc
addl
fcomps
jmp
mov
pop
popl
push
dec
mov
cmpsb
shll
fistps
loope
movsl
mov
jo
cmp
push
cs
scas
cmp
mov
sahf
xor
jae
inc
xor
movsb
fcmovnbe
xor
fdivr
cld
add
add
dec
shlb
adc
lret
inc
push
pusha
enter
push
inc
sub
stos
sbb
cld
push
push
popa
add
arpl
dec
enter
pop
or
sub
pusha
repz
push
xchg
fld1
ja
xchg
repnz
inc
mov
scas
pop
dec
mov
les
fdivs
es
mov
add
jl
and
xchg
and
pop
jl
sbb
lea
int
push
jge
mov
cli
leave
pushf
mov
pop
lods
stos
mov
dec
pop
pusha
xchg
insb
and
sub
pusha
fidivl
pop
lods
mov
jne
iret
add
mov
add
mov
das
sbb
in
into
adc
cli
cmc
jmp
adc
mov
mov
movl
das
movsb
cmpsb
sub
sbbb
and
lock
sub
inc
sbb
pop
pop
jbe
xor
add
pop
ljmp
flds
ljmp
lods
and
pop
sbb
and
into
or
lcall
inc
ds
shlb
mov
and
xchg
sbb
aam
xchg
popf
leave
and
jo
lret
fcomps
cli
shl
dec
dec
fdivrs
xlat
fldl
shll
bound
xchg
mov
mov
movsl
shl
mov
lds
cmove
pop
in
pusha
out
aad
stos
inc
add
xor
fcmovne
scas
pusha
sub
das
cmc
adc
ss
xchg
add
adc
push
mov
push
je
dec
mov
push
aam
imul
push
and
mov
lret
negl
cmp
fsubs
xchg
cld
dec
movsl
sub
leave
movsb
inc
pop
dec
testb
add
xchg
ljmp
gs
fldt
mov
sbb
insb
mov
scas
fadd
lods
ds
outsl
xchg
fstpt
mov
fs
ds
pop
inc
fcmovnu
cld
fwait
pop
push
cmc
jne
jmp
mov
cmp
or
pop
jecxz
dec
adc
ret
cmpsl
and
inc
push
xchg
outsl
jbe
mov
mov
int
mov
push
cmp
cmp
jns
adc
cmp
push
inc
xchg
pop
pushf
fimull
jne
xor
jmp
loopne
in
sbb
nop
adc
shll
fwait
mov
xchg
dec
cmc
push
mov
inc
mov
mov
aad
fildll
arpl
inc
leave
jmp
mov
repnz
push
push
insl
mov
inc
push
sub
jl,pt
outsb
adc
sbbb
cmpsb
pop
mov
mov
adc
fdivl
repnz
push
and
dec
push
jbe
sbb
mov
mov
hlt
insl
int
sbb
jl
pop
andl
jle
jb
or
cs
mov
fstpt
mov
push
xchg
dec
push
shlb
jmp
dec
movsb
sub
sbb
pop
mov
push
popa
insb
aam
movsl
push
push
mov
dec
and
inc
sub
scas
lods
xchg
scas
dec
mov
loope
and
pop
shlb
xor
out
push
clc
dec
aad
test
cld
shrb
in
push
out
mov
aam
add
jns
popf
ja
xchg
and
pop
or
cli
leave
inc
lods
loop
gs
loop
je
cmp
jno
lret
push
xchg
je
push
js
roll
cmp
and
stos
es
mov
xorb
aaa
in
int3
mov
andl
enter
jno
mov
fcompl
js
cmpb
dec
int
sub
enter
dec
jecxz
inc
insb
add
jns
sarb
gs
scas
mov
inc
popa
push
mov
xchg
mov
cs
idiv
xchg
pushf
sub
jle
shrl
fldenv
adc
pop
ds
addr16
jle
call
dec
aas
xchg
mov
popl
aas
inc
test
jecxz
and
adc
lock
mov
or
int
stc
push
jb
push
sbb
xchg
push
jp
lods
movsb
add
inc
push
push
loop
adc
or
fimuls
and
jp
cmp
or
mov
daa
cmp
rol
aas
mov
xor
imul
push
inc
std
mov
xchg
pop
test
inc
outsb
push
jnp
push
ja
movsb
das
mov
push
imul
cmp
movsl
mov
les
sti
dec
push
or
aas
or
enter
mov
xchg
cs
rcll
push
outsb
pushf
cmp
int
inc
or
mov
fistpl
pop
push
fsubrl
jns
or
and
cmpsb
jo
push
je
int
inc
hlt
cmp
mov
cmp
push
out
jle
fs
dec
mov
cld
emms
sahf
xchg
jle
or
sub
xchg
dec
sub
push
mov
fsts
dec
push
je
pop
or
aam
push
xchg
sti
xchg
ja
pop
xchg
xchg
adc
inc
xchg
jb
dec
push
lret
fs
adc
stos
jmp
dec
xor
dec
sahf
rcrl
mov
test
dec
xchg
pop
into
lahf
negb
dec
cmc
dec
xor
jb
sub
mov
testb
cmpsl
mov
dec
xchg
fst
int3
or
sbb
xor
rcrb
inc
xchg
loop
sbb
cmpsb
push
or
push
rcrl
cmp
mov
or
out
leave
rcrb
or
stos
or
pop
lret
test
int
pop
arpl
scas
test
aaa
stos
shlb
jne
dec
xor
mov
fcompl
sub
jne
pop
push
push
enter
fadds
add
jb
aam
out
jno
jno
popf
lahf
aaa
fs
popa
out
ret
push
imul
mov
ljmp
mov
es
cltd
fadds
loope
xchg
repz
add
or
add
xlat
popa
add
xchg
jge
pushf
add
adc
mov
xchg
mov
push
jg
mov
cmpl
inc
push
xlat
mov
lea
aad
enter
mov
cmp
mov
jbe
fs
into
movsb
sbb
aam
sbb
xchg
jne
in
pop
jbe
mov
cmp
idiv
addr16
pop
aas
sub
push
mov
cli
daa
mov
mov
shlb
adc
mov
std
lea
and
cld
sub
insb
xlat
ds
in
xchg
stos
dec
filds
adc
shrb
fwait
call
inc
sub
jnp
fidivrs
xor
mov
adc
sti
or
idivb
pop
sub
ljmp
inc
sahf
cltd
into
notl
push
stos
add
insb
mov
movsl
lahf
mov
rolb
mov
mov
and
add
popa
cld
lds
inc
enter
in
cmp
in
inc
out
mov
lret
or
fwait
push
int
xchg
mov
xor
jmp
inc
sub
lea
xchg
imul
fisubrs
and
adc
pop
ficomps
call
and
in
sbb
scas
lea
nop
mov
stc
mov
mov
js
mov
jg
add
adc
gs
or
pop
int3
xchg
jl
rcll
sub
lods
into
or
stc
call
pop
xor
mov
add
scas
inc
jle
dec
ficompl
cmp
scas
out
insb
mov
loope
fiaddl
inc
mov
cld
rol
mov
xor
add
pop
sub
xor
fidivrs
or
add
pushf
daa
dec
rol
or
js
fcmovb
data16
dec
enter
enter
dec
clc
out
jae
icebp
jae
mov
rorb
mov
lods
inc
lods
insb
and
mov
aas
stos
mov
jg
or
sti
xchg
out
cmp
inc
xchg
stos
into
pushf
test
mov
stos
add
inc
pop
clc
aaa
push
xchg
xor
daa
icebp
sub
fs
add
enter
in
fidivl
inc
adc
cmovs
push
icebp
je
jae
inc
stos
pop
push
js
daa
and
add
cmp
movsl
subl
sub
push
daa
mov
push
inc
divl
jne
mov
int3
aaa
mov
push
push
xchg
cmp
lret
ss
out
cmp
inc
mov
xchg
push
sahf
sub
mov
int3
lcall
add
jg
cltd
xchg
lock
adc
insb
popf
pop
out
xchg
mov
mov
mov
adc
pusha
pushf
push
inc
sbb
add
jp
fistps
mov
jb
out
std
and
in
ret
dec
fs
popf
mov
push
jmp
push
cmc
push
jecxz
pop
andb
or
int
push
aam
mov
push
lods
jl
data16
in
xchg
sbb
pop
and
pop
test
stc
ret
mov
cmp
jle
sub
mov
jmp
xchg
add
adc
aam
push
lcall
adc
cwtl
jmp
dec
jp
xchg
sub
xchg
outsb
jno
fs
dec
insl
jne
std
ss
pop
sbb
mov
jbe
es
sub
sbb
cmp
pop
dec
pop
pop
in
fs
jmp
sub
loope
jno
or
inc
call
imul
adc
push
xchg
pop
xchg
lret
aam
shl
lods
cmp
xchg
mov
mov
jmp
or
inc
jne
pop
xchg
jae
jbe
adc
or
xchg
xchg
add
mov
aad
shll
or
adc
sub
insb
movsl
aam
dec
cmpsl
dec
xchg
sub
in
in
xchg
mov
xor
gs
mov
lods
xchg
xchg
ljmp
lods
out
mov
pop
or
lods
xchg
jns
push
push
rcr
lock
rorl
cmpsb
sti
pop
cmp
sbb
adc
and
mov
leave
scas
cltd
mov
jg
sub
fdivl
mov
mov
rcrl
insb
call
pop
aas
sub
mov
ss
into
and
lret
mov
mov
out
adc
jne
or
and
lcall
out
cmp
cmpsl
mov
or
push
inc
push
fimull
das
sar
xchg
xor
push
and
xchg
test
cmpsb
sbb
stc
xchg
sbb
sahf
sub
imul
push
movsl
sub
cld
out
rorb
mov
and
mov
sbb
adc
sbb
jo
push
sub
pop
mov
adc
sti
mov
fstpt
xor
cmpsb
aaa
inc
pop
int3
mov
movsb
enter
iret
iret
pop
rcrb
cwtl
cmc
dec
stc
lret
inc
pushf
mov
into
test
mov
pop
shlb
nop
scas
mov
mov
sbb
data16
arpl
push
call
int3
mov
mov
push
xor
mov
pop
ss
or
push
inc
movsl
cltd
adc
stos
out
or
aas
and
mov
mov
dec
xchg
sub
daa
inc
xchg
sub
arpl
jmp
xor
cmp
inc
xchg
mov
mov
mov
scas
popa
inc
and
jbe
or
inc
push
xchg
mov
jmp
dec
mov
add
js
leave
adc
or
push
loope
ljmp
fidivs
xchg
adc
mov
out
inc
outsb
ljmp
adc
repnz
aam
jge
mov
mov
repnz
sub
jle
pop
loop
sub
xor
gs
push
lds
dec
sub
test
fiaddl
mov
js
mov
xchg
inc
sahf
jb
pop
mov
jnp
sub
pop
or
in
inc
pop
cwtl
fstpl
inc
cmp
jae
add
jl
andb
mov
or
mov
cwtl
push
mov
mov
mov
adc
pushf
aaa
bound
adcb
ljmp
sub
pop
and
test
cmp
popa
sahf
xchg
shll
in
cli
lahf
jns
loopne
iret
xchg
notb
mov
nop
mov
ror
cli
xor
mov
ror
jns
pop
adc
ret
xchg
adc
cmp
push
mov
dec
mov
push
fwait
mov
adc
dec
loopne
xor
or
mov
cmp
mov
movsb
std
push
mov
cli
adc
or
adc
lock
add
or
sbb
jmp
ja
sahf
xor
das
adcb
xchg
mov
addr16
int3
orl
pop
dec
test
test
fstps
fucomi
sahf
into
ficoml
addb
mov
mov
cmp
sbb
xchg
jb
int3
fcmovb
mov
les
lret
shl
mov
jbe
jp
add
rolb
mov
sbb
push
test
or
test
xor
add
mov
mov
rcr
or
cs
dec
fwait
mov
mov
out
sahf
xor
aas
mov
pop
adc
jp
lods
outsl
push
mov
out
pushf
and
jecxz
les
cmp
insl
adc
push
adcl
jno
lret
add
fldenv
mov
dec
sbb
mov
dec
mov
es
adc
cmp
push
fidivs
jo
jge
mov
adc
pop
push
dec
mov
sbb
mov
jno
jl
mov
rol
loop
mov
jl
leave
shrl
sbb
mov
outsl
cwtl
sbb
mov
xchg
fisubl
scas
mov
push
negb
fimull
sbb
ret
ficomps
mov
xorb
and
sub
inc
push
adc
popa
pop
cmp
mov
jbe
mov
mov
inc
sub
rcrb
sub
push
sub
cmp
nop
repz
inc
sbb
or
js
out
gs
push
jne
dec
mov
es
sbb
or
jb
fwait
add
sub
ljmp
push
ret
add
ljmp
mov
jecxz
rcrl
fiadds
inc
test
out
aas
and
pop
xor
and
push
mov
dec
mov
xchg
mov
xchg
in
push
sub
mov
je
jp
enter
in
pop
mov
loop
shll
pusha
out
add
lahf
xchg
jns
xor
repnz
cmp
inc
mov
loopne
jne
loop
mov
jl
scas
jno
das
jae
xchg
add
addr16
cs
sbb
mov
loope
mov
push
pop
scas
xlat
enter
or
or
ret
add
and
push
jbe
mov
sub
test
or
test
fnstcw
push
push
jbe,pt
mov
adc
lahf
pop
sub
jns
xchg
imul
mov
gs
push
mov
int3
cmp
mov
sti
jbe
inc
sti
xchg
insl
enter
sub
jmp
cld
or
add
es
mov
jae
and
xor
out
int
fmulp
add
in
mov
cmp
jl
in
fwait
cwtl
xchg
mov
xchg
je
pop
pop
xchg
inc
and
dec
stos
or
lods
xchg
xor
out
outsb
out
sbb
push
or
fisttps
lods
lods
stos
add
loopne,pn
pop
push
aam
roll
scas
xor
test
lock
in
jbe
pushf
add
jge
push
iret
sbb
rcrl
mov
fidivrs
pop
aas
and
lods
or
add
popa
cli
dec
icebp
repnz
jno
inc
mov
out
ss
aam
rol
test
mov
test
jge
lods
rcr
push
pop
sbb
xor
cmpb
mov
sub
xchg
inc
or
jbe
and
std
rcrl
lret
push
push
pop
popa
add
push
setne
out
repz
adc
out
add
stos
add
jo
and
cmp
sub
push
cmp
rcrb
pop
push
inc
pusha
loopne
leave
push
adc
fistl
push
pop
ds
dec
idivb
and
add
filds
hlt
je
mov
addr16
stos
mov
inc
mov
lret
jmp
mov
mov
inc
adc
mov
data16
lock
push
cmp
sbb
push
pop
repnz
inc
push
add
fnsave
mov
sbb
js
push
das
cmp
hlt
dec
test
xor
outsl
mov
scas
iret
jne,pn
adc
inc
aad
xor
loop
in
xorl
test
std
roll
and
icebp
xchg
loopne
mov
push
test
imul
pop
insl
call
aas
fcmovb
dec
popa
and
jbe
or
je
push
cwtl
clc
sahf
push
and
stos
sbbb
js
std
ficomps
pop
mov
xor
repnz
test
mov
mov
pop
mov
sub
hlt
shll
fstpl
jbe
xchg
adc
add
hlt
pop
xchg
adc
mov
jl
mov
in
loop
test
inc
or
cwtl
mov
xor
or
insb
dec
stos
dec
add
test
inc
inc
imul
adc
jmp
xchg
sbb
inc
mov
and
xor
lret
aaa
cmp
adc
push
ds
xchg
jg
lds
lods
dec
mov
icebp
and
into
xor
mov
adc
sub
inc
sub
sub
jnp
mov
int3
dec
shll
sbb
ret
shl
in
movsb
ja
jl
enter
inc
push
mov
cld
push
lret
inc
leave
addr16
shll
stos
les
jl
lret
rcr
test
movsl
rol
fisubrs
push
xchg
addr16
mov
imul
fists
ds
pop
outsb
icebp
cmp
bound
cmp
ss
sbb
sub
ja
mov
jae
pop
pop
test
adc
int
push
loope
pusha
into
lret
xlat
xor
es
add
dec
je
fwait
stos
jno
das
add
jp
jg
test
sbb
mov
xor
jle
negl
outsl
or
and
mov
mov
mov
loope
mov
cmp
jp
inc
popa
mov
mov
cli
fidivs
filds
xor
pop
adc
bnd
popf
push
fucom
dec
loope
inc
xor
sub
jecxz
adc
icebp
mov
repz
and
push
sbb
stc
stos
insl
or
ja
mov
and
mov
loope
loopne
aas
imul
jecxz
push
das
and
push
push
scas
mov
std
pop
lds
jae
xor
xor
bound
dec
adc
sbb
ljmp
xlat
les
rcrl
xchg
std
aaa
lock
mov
dec
jmp
xchg
mov
jb
mulb
dec
push
sbb
jmp
out
or
fcoms
mov
pushl
or
xor
cmp
sbb
clc
shlb
addr16
xchg
data16
jnp
dec
cli
cmp
pop
pop
or
sub
lret
ss
negl
sub
shrl
sub
scas
int3
arpl
in
cld
or
stos
das
lret
and
aad
dec
and
dec
fdiv
movsl
jl
sub
fsubrl
mov
push
hlt
mov
mov
aas
and
test
mov
in
shll
sbbl
cmp
out
inc
push
jae
das
pop
es
aas
rclb
push
push
jae
mov
outsb
push
movsl
inc
ror
mov
fs
dec
inc
aas
ljmp
mov
inc
sti
in
fs
sbb
inc
mov
test
jl
aad
shlb
dec
cmc
xchg
test
leave
bound
inc
mov
inc
popa
inc
cmp
les
les
xor
push
mov
lea
fs
cli
lods
xor
mov
adc
ret
fistpll
cmp
lar
rcrb
inc
jmp
pop
stc
pop
out
sahf
jmp
and
out
iret
pop
ret
fldl
lods
aaa
jge
fdivrl
adc
mov
inc
jne
mov
mov
lahf
imul
push
push
push
repnz
push
lea
test
mov
pop
inc
ja
mov
jno
push
inc
pop
lods
mov
rcll
ds
out
inc
add
mov
jb
or
pusha
cmpsb
fstl
arpl
shlb
test
jge
adc
fcomi
fisubs
add
add
sbb
shrb
push
lock
sbb
ljmp
outsb
sbb
sub
add
or
rol
mov
repz
cmp
sub
push
lds
andl
jae
jle
ficomps
jns
sub
inc
xlat
inc
imul
mov
sub
into
test
scas
mov
sub
loopne
fs
data16
and
idivl
fisttps
sub
inc
add
and
jae
sub
jne
ss
add
dec
jno
dec
lods
adc
and
negb
adc
test
sbb
cmpsl
mov
xchg
stos
je
mov
fsubs
jno
mov
es
mov
jne
ret
imul
and
sti
lret
jmp
xor
out
dec
cmp
in
popa
clc
mov
ja
leave
push
sbb
push
aas
push
mov
ret
lret
sub
mov
lahf
out
mov
mov
sub
ret
sub
inc
xchg
dec
lcall
iret
in
daa
xchg
rcrl
dec
insb
mov
arpl
popf
mov
push
fcmovnbe
or
daa
and
pop
ja
xchg
adc
in
outsl
mov
cld
mov
xchg
pusha
and
pop
popa
data16
or
dec
mov
mov
sbb
dec
adc
sahf
or
mov
repz
rcrb
jno
out
push
in
test
hlt
add
aas
ljmp
dec
pop
mov
mov
or
add
stos
fstps
jg
addr16
addr16
lea
push
push
dec
addr16
jg
mov
daa
imul
jge
mov
or
jns
add
push
jmp
jb
xchg
fstpl
popa
push
or
mov
cmpsl
mov
lret
mov
lods
rolb
shlb
pop
cmp
out
jl
repz
mov
cmp
jg
sub
into
fdivl
rcrb
sub
push
out
jg
test
in
imul
jne
jmp
les
dec
or
pop
cmp
in
push
sub
lods
inc
into
repnz
push
cld
mov
mov
sbb
mov
cmpl
mov
pop
mov
cmp
call
sbb
dec
lea
dec
ljmp
nop
sbb
popf
fstl
loop
and
push
lcall
fmull
xor
mov
das
and
sahf
jg
sahf
mov
lcall
test
mov
nop
jp
jmp
popf
fxam
add
cwtl
mov
in
push
mov
shll
inc
ljmp
push
adc
mov
push
nop
in
or
dec
dec
xchg
pop
mov
sbb
mov
dec
lret
cmp
int
adc
and
lods
pop
movlhps
iret
pop
mov
xor
xchg
dec
addl
in
adc
pop
fidivrl
popf
mov
lods
lahf
ret
addr16
out
mov
mov
jb
insb
mov
cmp
mov
jno
sub
or
aas
repnz
sti
xlat
sbb
push
pop
pop
mov
stc
dec
sbb
ret
test
dec
insb
push
mov
into
cmp
test
bound
jnp
out
lods
cmc
mov
imul
add
adc
ja
bound
mov
dec
leave
add
sbb
and
sbb
adc
jno
test
sub
push
jne
out
cmp
push
pop
jl
dec
cli
test
push
loop
mov
imul
inc
cld
mov
xor
sbb
hlt
pusha
ds
inc
jb
enter
jp
fisttpll
dec
xchg
xchg
gs
notl
sahf
and
sub
and
sub
add
dec
bound
add
and
sbbl
xchg
pushw
cltd
cmp
imul
inc
fidivrs
imul
cmp
test
or
pop
or
add
dec
push
in
pusha
icebp
xorb
enter
out
les
add
pop
pop
push
dec
mov
clc
dec
sahf
shll
cld
mov
and
mov
bound
mov
jo
or
loopne
in
movsb
push
inc
mov
mov
enter
jl
dec
cli
jo
xchg
iret
adcb
xor
movsl
cltd
mov
cmp
or
das
repz
add
adc
dec
mov
and
sub
cmp
jae
fdivs
outsl
mov
push
ja
addl
add
mov
xchg
pop
sub
subb
cmp
jne
sub
mov
xchg
pop
mov
and
jns
cmp
cmpxchg
iret
xor
aaa
or
pop
outsb
jne
lret
fsubr
push
addr16
out
xor
movsl
out
inc
std
mov
in
sbb
inc
lret
pop
addr16
or
stos
sub
xor
jg
mov
pop
mov
sti
outsb
ljmp
js
jno
repnz
push
outsl
insl
sub
xor
or
mov
lret
lods
or
xchg
aam
movsb
stos
cmpb
shr
mov
repz
adc
pop
push
test
jmp
cmp
xchg
mov
cmc
and
lds
cmpsb
dec
movntq
out
jno
out
lock
and
je
push
sbb
and
xor
test
and
out
cmpsl
jmp
or
ljmp
add
jmp
dec
cwtl
and
imul
out
jg
inc
je
scas
push
adc
shrb
imul
mov
jb
and
into
repz
sbb
clc
pop
fidivs
mov
add
mov
bound
or
add
xor
mov
cmpsl
mov
inc
sub
rorb
or
orb
ss
mov
inc
cmp
xchg
enter
cmp
and
mov
repz
jae
pop
notb
sahf
jle
jp
cmp
add
adc
cltd
xchg
insl
push
mov
sbb
push
and
leave
jnp
sub
mov
xchg
adc
lcall
or
or
sub
lret
sbb
dec
dec
mov
cmp
test
sub
movsl
cmpsl
adc
mov
ret
loopne
cmp
pop
cmp
xor
jne
filds
jecxz
or
adc
pop
cmp
fstpt
mov
push
push
mov
lods
push
mov
lcall
dec
cli
push
bound
inc
inc
repz
shlb
out
mov
insl
faddl
sti
push
pandn
and
sbb
js
xchg
add
inc
pop
xchg
add
and
sahf
xor
lock
adcl
and
fisubrl
fnstcw
dec
cwtl
int
test
sbb
jns
add
nop
mov
pop
jo
sub
jnp
in
mov
inc
pop
mov
push
and
pop
adc
rcrb
sti
fisubrl
inc
loope
fstpt
inc
mov
outsb
mov
mov
aas
in
movsb
lods
popf
jae
xchg
or
lret
adc
fstps
push
mov
sbb
mov
cwtl
jg
cmp
stos
arpl
aas
clc
fs
cmp
aaa
inc
shl
pop
lret
inc
jmp
cmp
lds
pop
test
imul
add
adc
imul
test
mov
pop
ljmp
push
roll
cmp
les
ret
pop
xorb
dec
pop
iret
arpl
mov
imul
mov
jge
rclb
in
sub
stos
xor
push
cmp
push
loopne
mov
xor
mov
mov
repnz
popa
xchg
or
sbb
inc
dec
ss
cmp
or
sbb
pop
iret
mov
sub
mov
pop
fbld
pop
jno
sbb
dec
dec
cmp
loop
pop
mov
lret
mov
push
add
lea
mov
int3
adc
lds
into
mov
stos
sbb
sub
jl
outsb
push
loopne
gs
mov
add
and
mov
pop
dec
xchg
push
arpl
imul
scas
aad
sub
inc
push
push
push
and
cli
xor
mov
mov
insl
inc
add
insb
es
pop
call
pusha
cmp
scas
add
jnp
mov
push
or
lcall
pusha
add
lret
data16
xor
push
fnstcw
cmc
jge
pop
dec
xor
ret
mov
sbb
jmp
decl
andl
cmp
rorl
sbb
aam
lods
outsb
jno
shrl
icebp
movsl
int3
mov
je
adc
in
xor
test
in
aam
pusha
cmpsb
cmc
out
cltd
xchg
push
movsb
iret
sub
int3
jae
into
sub
mov
adc
fstpl
or
jmp
and
mov
adc
jecxz
xlat
pusha
cmpsl
in
cmp
aaa
cwtl
int
lods
je
outsb
fisubs
outsl
xchg
add
ds
lret
adc
xchg
sahf
imul
mov
or
stc
scas
mov
fs
fdivl
or
cmp
sbb
fs
fldl
mov
arpl
fiadds
cmp
out
addr16
test
in
jl
mov
cmp
and
fdivr
push
sahf
jp
pop
xor
pop
cmp
xchg
aam
push
sub
dec
xchg
cmp
pop
pop
mov
jecxz
fistps
mov
jmp
cli
sub
xchg
repnz
loope
dec
das
mov
jle
dec
mov
pop
xchg
jne
and
fs
rcll
cld
mov
sahf
cmp
push
jne
fs
cli
nop
cmp
jb
sbb
movsb
mov
into
mov
test
ret
sub
adc
and
cmp
daa
hlt
jnp
es
xchg
pushf
inc
ret
inc
sub
mov
xor
enter
push
ss
mov
cmp
mov
imull
rcrl
loopne
test
sbb
xchg
xor
or
cmp
pop
adc
shlb
testb
movsb
add
or
cmp
lds
sbb
adc
fwait
mov
addr16
mov
inc
je
lods
and
xchg
cmp
pushl
cmc
pop
mov
mulb
push
enter
jae
inc
push
jb
xor
adc
aam
inc
imul
mov
mov
out
and
xor
xchg
xchg
cld
sbb
aam
imulb
dec
addl
in
mov
dec
xorl
jne
ss
data16
xchg
aas
jns
les
out
ja
dec
inc
inc
or
push
push
mov
mov
adc
es
repnz
or
jb
and
mov
int
sbbb
sti
rorb
xchg
cmpsl
loop
adc
aam
clc
les
int3
repnz
mov
pop
or
cs
mov
outsb
push
inc
pop
cmp
dec
lods
fsubrl
sbb
das
pop
xlat
pop
das
pusha
adc
cmpsl
mov
lea
scas
jg
imul
jno
mov
enter
dec
xchg
cmpsb
cld
inc
les
pop
or
cltd
mov
sub
aam
loop
fcomps
inc
lock
pop
test
jbe
sti
aaa
jo
mov
pop
rcrl
popf
lea
mov
sub
xor
cld
inc
inc
mov
es
xchg
mov
lret
jp
jmp
les
lret
xor
insb
sbb
add
popa
test
in
imulb
out
xchg
pop
pushf
shll
scas
push
inc
jge
sbb
shll
inc
inc
int3
iret
cmpsb
ja
or
jno
pop
push
adc
xchg
aas
push
jne
inc
jbe
add
shlb
repnz
cs
sbb
jne
lods
mov
cmp
mov
inc
std
xor
lcall
daa
cld
mov
fimull
imul
imul
test
movsb
push
data16
js
inc
ds
mov
sub
bound
cli
movsb
repnz
pop
int
shlb
lcall
loopne
push
hlt
jns
push
cmp
cmpsb
sahf
jl
jo
sub
lock
out
dec
xlat
pop
push
xchg
cmp
std
and
jb
mov
mov
nop
pop
lock
dec
inc
dec
mov
negb
lcall
popa
inc
in
sbb
cwtl
mov
fdivl
jb
inc
popa
lea
add
inc
cmpsl
in
push
ja
aad
cmpsb
sub
mov
cld
lret
ret
mov
sbb
sbb
loope
pushf
cmp
sahf
inc
outsl
not
fucomip
and
xchg
ret
ljmp
pop
xchg
sub
daa
in
cwtl
in
jns
xor
lret
adc
or
mov
dec
mov
loop
cmp
push
scas
test
push
cs
pop
orl
push
add
cld
shrl
sbb
mov
add
clc
rorb
or
lods
repz
in
fistl
mov
cltd
daa
xor
roll
and
fsubrs
mov
movsb
ret
mov
mov
or
idiv
xchg
gs
pop
aaa
add
test
dec
insl
adc
loope
or
arpl
push
cmp
jp
cmp
pop
daa
js
lock
push
lahf
xchg
push
mov
ret
loope
xor
mov
in
aad
sub
stos
sbb
push
dec
imull
mov
cmc
mov
arpl
fadd
xchg
mov
push
pusha
mov
pop
pop
int
sub
fdivp
loop
sti
or
lods
clc
ljmp
xchg
sti
jge
icebp
loope
out
sbb
mov
test
sahf
sub
shlb
pop
ret
daa
or
pop
xchg
icebp
mov
ds
inc
pop
and
push
out
inc
in
inc
insl
ficoms
jg
inc
mov
lods
outsb
ds
cmp
sub
adc
mov
jne
stos
cwtl
push
xor
pop
and
out
jae
fcmovnb
jl
in
notb
mov
pop
fldl
les
imul
push
jns
pop
insl
push
jns
pushf
scas
shlb
lods
repnz
int
xor
sbbl
iret
pusha
cmpsb
ds
xchg
lea
pop
inc
push
and
jne
repz
xchg
sarl
shrl
jle
pop
mov
cmpsl
loop
cli
imul
and
testl
jbe
cmpsl
ret
out
sti
inc
add
adcb
and
dec
mov
ret
dec
outsl
mov
mov
pop
jl
or
mov
and
adc
push
sti
and
test
test
outsb
cmp
js
insl
bound
xor
aas
pop
icebp
lcall
mov
daa
inc
push
mov
bound
adc
push
lock
and
ret
sbb
lahf
mov
push
fiaddl
es
fcompl
inc
cmp
cwtl
dec
push
je
aad
cmp
cmp
fnstsw
xor
subl
inc
or
test
mov
inc
mov
lods
add
mov
repnz
pop
lea
sbb
icebp
mov
fiaddl
test
movsl
jecxz
test
test
inc
addr16
mov
outsb
pop
addr16
adc
xchg
xor
aas
cmp
lods
xchg
cmpsb
inc
or
sbb
mov
negl
cmp
fcmovbe
push
push
push
adc
pop
lea
mov
out
pop
xchg
imul
rorl
jmp
xlat
jg
icebp
xor
mov
mov
dec
or
out
add
xchg
test
inc
mov
dec
pop
or
scas
lock
inc
loopne
and
cli
inc
push
aad
insl
scas
mov
or
repnz
sub
repnz
rclb
jp
int
dec
adcb
inc
xchg
or
jb
aam
xchg
icebp
mov
xor
push
scas
arpl
jle
ljmp
xchg
outsb
int
jne
cmp
inc
pop
add
out
push
push
inc
push
jnp
cmp
sub
add
std
jmp
fs
or
add
xor
dec
mov
shrb
scas
fs
jle
xlat
repnz
cmp
xchg
out
pop
jo
roll
lcall
inc
or
dec
xchg
rol
pop
cmp
insl
sub
notb
shrl
stos
ja
adc
cmpsl
in
xchg
adcb
int
cs
xor
inc
add
scas
out
push
shrl
icebp
cmp
adc
sub
test
or
mov
dec
push
test
cmp
shrl
jle
pop
sub
call
mov
rclb
add
fstps
sub
xlat
inc
xchg
push
lahf
pop
adc
and
mov
xchg
test
test
movsl
dec
xor
jge
loopne
fisubrl
jno
mov
jnp
xor
clc
shll
shlb
in
cs
dec
les
test
insb
jmp
loope
in
lods
sub
adc
push
lods
imul
rorl
outsl
mov
dec
sub
idivb
pop
test
adc
sub
inc
push
dec
push
push
ds
or
sbbb
or
adc
adc
inc
inc
cmp
shrl
and
mov
xchg
add
push
mov
test
jae
es
ret
inc
iret
mov
xlat
and
add
mov
or
xchg
aam
fwait
shrb
mov
fnsave
add
stos
jg
or
mov
push
pop
iret
stos
lea
sub
insl
xchg
hlt
add
rorb
outsl
push
add
cmpl
lcall
insb
scas
dec
aad
dec
shrl
clc
or
mov
int
daa
lcall
adc
insb
mov
mov
push
adc
pop
fsubrl
add
pop
mov
test
lock
pushf
or
stos
xchg
sub
shll
aaa
das
pushl
int3
xchg
xchg
test
inc
pop
jge
aam
push
sub
add
sbb
in
jne
in
pop
xchg
std
je
xchg
lock
in
adc
dec
cmp
xchg
nop
jns
dec
inc
push
sbb
idivb
xchg
fidivrs
pop
jmp
push
mov
hlt
rolb
aaa
lcall
lret
movups
jae
mov
out
mov
inc
xchg
jb
test
inc
das
cmc
mov
jmp
shll
scas
sbb
cmp
sbbl
inc
dec
adc
stos
jnp
sub
sbb
cmpsb
adc
add
fildll
jne
jl
nop
pop
xor
dec
stc
test
inc
jp
lret
inc
das
add
notb
xchg
xchg
dec
cmp
inc
and
daa
jge
adc
or
adc
xchg
es
cmp
imul
fldl
fucomi
cs
xor
pop
ret
and
mov
cmc
mov
outsb
xor
xchg
ja
mov
ja
inc
inc
adc
out
and
fsubrs
cmp
or
mov
inc
adc
mov
hlt
inc
inc
bound
andb
fldl
fnstcw
add
dec
xor
nop
fwait
adc
add
das
xchg
push
das
jge
je
ret
or
inc
mov
repz
aas
sahf
movsb
mov
jl
cmp
cld
jnp
loopne
mov
divb
mov
mov
into
in
cld
xchg
jge
into
push
and
mov
pop
dec
inc
clc
pushf
lds
xor
inc
clc
adc
xchg
fimuls
pusha
jb
orl
pop
sbb
xchg
xor
adc
mov
sti
push
shlb
add
ljmp
mov
loop
cwtl
inc
push
sbb
xor
mov
inc
loopne
pop
fs
jbe,pt
push
imul
mov
xor
outsl
jns
add
imul
sbb
push
loopne
shlb
jno
ss
insl
imul
shlb
clc
jb
shrl
xchg
add
mov
sbb
aam
mov
scas
ret
call
fs
xchg
ja
add
jnp
dec
imul
xor
push
adc
pop
xor
add
inc
cmc
nop
sub
pop
addr16
add
ret
inc
jp
jmp
mov
lock
inc
orb
mov
jle
out
stc
sub
lods
pop
fstpt
fwait
stos
addl
xchg
add
and
xchg
popa
pop
mov
push
daa
push
std
mov
push
xor
push
jmp
shrb
mov
pcmpgtw
xchg
mov
out
in
mov
mov
jns
mov
push
mov
xchg
in
inc
push
mov
test
in
xor
jnp
mov
xchg
subb
sub
and
pop
in
popl
cld
inc
or
mov
cltd
adc
push
xor
add
lcall
cmp
adc
jne
cmpsl
inc
push
mulb
mov
sbb
mov
out
and
out
pop
adc
pop
sub
pop
lret
mov
add
cmp
or
pop
xchg
roll
icebp
notl
out
negb
mov
into
mov
test
push
xchg
inc
xlat
xchg
adcb
jae
ss
jne
mov
cs
inc
push
mov
push
lods
lods
mov
jb
jno
outsb
ds
push
cmp
fnstenv
es
nop
cli
pop
sbb
out
push
xchg
push
inc
inc
add
push
jecxz
push
sub
xlat
ljmp
push
lret
loopne
fisubl
xchg
mull
mov
fldcw
or
mov
sub
lret
addr16
outsb
insl
sarb
rcr
out
cli
popf
or
sti
imul
gs
mov
xlat
aas
adc
or
push
cmc
test
push
rorl
adc
jne
lock
or
dec
popa
bound
sub
add
push
adc
fld
out
wrmsr
bound
pop
inc
popf
xor
push
fistps
push
dec
icebp
jno
mov
or
jno
push
sbb
icebp
loopne
jae
push
sub
movsl
adc
out
mov
jbe
lds
bound
mov
cli
testl
fisttpl
push
inc
jns
push
daa
pop
pushf
adc
ljmp
repnz
pop
stc
mov
scas
mov
inc
sbb
mov
adc
and
mov
cmp
bound
xchg
inc
dec
push
jo
mov
xor
pop
js
repz
pop
mov
pop
xor
std
je
xchg
out
imul
std
jl
pop
std
std
sub
fldenv
ljmp
cltd
sub
and
jl
shrb
sbb
push
hlt
ljmp
fisttps
or
mov
movsl
outsb
lret
pop
pop
ss
or
or
xor
cmc
xlat
pop
dec
or
sti
pop
xchg
in
jp
in
out
int
inc
fstpl
push
push
aaa
pop
mov
mov
sarb
cld
mov
mov
in
lahf
xchg
insl
dec
push
pusha
outsl
add
sub
cmp
lcall
aam
xchg
les
jo
inc
dec
xor
mov
mov
mov
add
sbb
mov
dec
push
pusha
inc
dec
fstl
ret
push
dec
cltd
stos
mov
xchg
iret
movsl
dec
cmpsl
rclb
mov
cmp
sbb
cld
scas
xor
leave
and
or
cmpsb
xchg
dec
int
dec
dec
leave
decl
mov
inc
push
lods
sbb
pop
or
mov
popf
add
add
sub
js
and
popa
leave
push
sbb
or
jp
les
add
and
cmp
popa
cli
imul
out
gs
data16
adc
pop
dec
and
out
rcl
lea
jno
je
lret
jecxz
int
dec
mov
xchg
ret
mov
dec
pop
lret
xlat
pop
clc
int3
mov
xchg
stos
mov
mov
pop
cltd
mov
out
adc
popa
lods
pushf
cmpsl
xor
icebp
je
aam
cmp
push
dec
cmc
in
add
clc
and
sbb
outsb
xchg
mov
popf
mov
inc
mov
sub
add
ret
fisubrs
xor
insl
dec
jg
scas
test
xchg
cmp
lods
jg
push
cmp
cmp
jge
and
mov
dec
sbb
pop
idivb
jmp
mov
sub
int3
mov
xchg
les
into
adc
sbb
test
or
outsl
test
bnd
lods
adc
mov
aam
xor
lcall
push
mov
pop
rorl
add
sub
jns
fdivs
lock
loop
jne
and
cmp
cmp
lahf
js
lcall
aad
sbb
mov
or
jae
jecxz
and
cmp
sti
loopne
test
sbb
cld
shl
mov
out
xlat
cmp
cs
fs
jge
loop
add
inc
clc
mov
xor
lods
mov
or
cmp
mov
in
les
in
shrl
sub
cmp
push
dec
leave
cmp
lahf
jle
inc
jns
inc
or
jmp
mov
dec
dec
fadds
adc
sbb
jae
inc
inc
inc
jo
xchg
fistpl
jl
xor
shlb
loope
nop
lret
push
ljmp
cmp
inc
add
add
jb
cmp
mov
inc
stc
mov
xchg
clc
push
popa
lods
mov
adc
mov
pop
mov
in
outsl
mov
ss
pop
insb
sahf
in
jne
jnp
push
pop
jae
xor
mov
icebp
lret
test
mov
ljmp
mov
xor
cmc
fistl
shl
cmpsl
rcrb
jne
jge
mov
and
movsb
fadds
lock
mov
loopne
or
inc
pushl
pop
jmp
stos
fisubs
inc
das
stc
daa
pushl
and
les
loope
nop
cmpl
mov
pop
sbb
insb
fbstp
add
or
rcrb
lds
dec
sbb
sub
adc
loop
movsl
repz
imul
mov
stc
adc
das
dec
out
cmp
adc
add
pop
pop
jbe
cmp
mov
push
mov
insb
push
in
jns
mov
push
xor
in
inc
es
xchg
in
dec
xor
add
xchg
arpl
lods
mov
std
mull
loopne
jmp
xchg
xchg
xor
cld
push
int
fdivr
sahf
pop
repz
pop
call
lods
inc
hlt
loope
push
or
xchg
popa
push
js
push
or
cli
jns
int3
aam
test
cmc
std
int
xor
xchg
loopne
jne
out
cmp
fisttps
mov
lds
dec
stos
xchg
sub
mov
mov
movl
sub
xor
sbb
mov
outsl
mov
iret
mov
fdivrs
lret
iret
ret
mov
aam
lret
mov
jmp
jecxz
xor
jecxz
fwait
adc
jno
pop
xchg
mov
cltd
or
shrl
mov
push
xchg
test
jb
orl
jmp
xor
jge
iret
sub
push
dec
fs
dec
enter
orb
aam
and
outsb
mov
mov
in
loope
jne
sti
lea
push
repz
pusha
rcrb
pop
inc
les
fimull
dec
cld
cmc
subb
ds
or
sbb
xchg
mov
or
sub
arpl
in
and
sbb
mov
mov
add
lahf
inc
movb
rclb
jb
pusha
xchg
int
mov
jbe
xchg
pop
push
scas
loopne
add
sbb
inc
adc
aad
mov
fs
jno
add
mov
fcompl
daa
xor
in
pusha
mov
add
icebp
mov
push
sub
pop
jne
shr
xor
ret
cmc
pop
mov
xchg
push
mov
adc
sub
sub
clc
repz
push
jp
jmp
adc
mov
cli
inc
pop
pusha
pop
push
cmc
pop
das
test
ret
movsl
xor
mov
add
rclb
jmp
ret
mov
icebp
out
dec
add
in
fiaddl
xlat
loope
sbb
add
nop
mov
adc
inc
cmc
popa
xor
rcll
test
dec
xchg
lea
das
sbb
imul
jge
icebp
addl
jge
movsl
out
and
mov
insl
add
push
dec
jnp
add
jo
lret
inc
in
in
jno
outsb
cmpsb
lods
xor
mov
and
lds
shrb
mov
test
or
cmp
or
sbb
imul
push
xor
fsubrl
out
xchg
jne
scas
fistpll
ja
jo
in
in
mov
xchg
xchg
sbb
lock
adc
xchg
fnsave
fs
shr
test
mov
es
sbb
test
mov
mov
lock
clc
aaa
cld
nop
shlb
dec
adc
inc
push
test
xor
adc
jno
and
in
cmpsl
and
xor
cmp
out
inc
mov
je
push
ds
cmp
daa
shrb
dec
aaa
test
xchg
jo
fiadds
jmp
outsl
int3
or
enter
jb
or
stos
pop
pop
xchg
rclb
lcall
jl
or
inc
les
inc
push
xchg
dec
mov
mov
ss
testb
mov
inc
in
test
pop
jno
arpl
push
iret
fisttps
sub
sbb
add
push
mov
sub
jecxz
test
sub
push
out
dec
imul
insl
dec
pushf
inc
or
add
cltd
dec
test
pop
or
or
ja
xor
jle
mov
and
int3
dec
cmpb
mov
xor
xor
jp
cmpsl
in
dec
cmp
enter
xchg
adc
mov
xchg
cmpsb
push
adc
test
imul
add
orl
inc
lret
test
mov
mov
sub
jnp
jns
repnz
inc
mov
je
and
pop
xchg
daa
scas
mov
cld
out
push
mov
mov
adc
push
out
clc
enter
lds
xor
mov
addr16
xchg
sub
xchg
fdivrs
insb
mov
cmc
mov
loope
jecxz
cwtl
fadds
push
sbb
sbb
pop
imul
scas
dec
data16
jge
outsl
mov
mov
mov
inc
pop
cmpsl
dec
mov
faddp
mov
pop
scas
fstpt
jae
popa
add
push
mov
jae
movsl
test
adc
sub
dec
jp
dec
cmpsb
and
aam
iret
shl
pcmpeqb
mov
int
in
xchg
pop
cmp
daa
push
xchg
adc
movsl
push
mov
aaa
stc
test
daa
movsl
xchg
shl
push
mov
mov
xor
insl
pop
mov
sti
and
jae
das
mov
out
adc
mov
icebp
and
mov
sbb
nop
js
cmp
cwtl
mov
data16
sar
stos
mov
mov
enter
mov
or
jmp
pop
fnsave
out
xor
ss
pop
adc
sbb
stos
add
mov
mov
push
insb
jle
push
mov
subl
xor
int3
fcmovu
dec
in
xchg
and
lds
mov
push
ss
xor
mov
movsl
cld
movsl
inc
sbb
cmp
mov
mov
ret
ret
shl
add
pop
mov
sbb
aaa
out
xchg
jnp
sub
adc
das
scas
jne
mov
cmp
aam
push
movsb
scas
mov
inc
std
imul
or
repnz
fldt
ljmp
xor
mov
cwtl
push
cltd
and
gs
jb
lcall
pusha
aam
fisubl
add
pop
jle
xor
mov
adc
cmp
push
jge
movsl
dec
sbb
mov
mov
jge
dec
xchg
mov
out
stc
fst
jo
in
sbb
out
movsb
adc
mov
aad
mov
cmp
mov
jmp
out
repnz
js
repnz
scas
outsl
cwtl
pop
or
out
jne
lock
je
add
test
gs
sbb
or
jne
sbb
adc
push
mov
mov
std
shlb
ljmp
int3
or
mov
lods
sbb
fiadds
insl
aad
enter
xor
lods
outsl
push
sti
dec
push
lods
fdivl
fsincos
insb
push
sbb
addr16
fidivl
repnz
xor
mov
int
and
pop
cmpsb
rcll
sub
in
clc
lods
insb
ds
je
das
mov
std
aas
fcmovb
add
inc
test
lret
daa
ret
jnp
cmp
dec
inc
das
push
inc
adcl
fwait
stos
cmc
loop
in
stos
mov
loopne
jl
and
call
cmovge
mov
add
call
leave
jno
xchg
jmp
stos
xchg
xor
imul
xchg
or
push
outsb
add
stc
popa
mov
jne
loop
js
jp
shlb
daa
jns
leave
xchg
outsl
lahf
cmp
ret
pop
or
jge
cmp
adc
mov
movsl
cmp
movsl
and
call
dec
or
das
lahf
add
mov
imul
ds
in
cmp
pushl
stos
leave
insl
aad
xchg
mov
lds
hlt
jo
jg
inc
sbb
or
xchg
iret
repz
mov
add
jbe
push
loopne
pushf
ljmp
push
andl
and
fistpl
or
pop
push
mov
jecxz
jno
cmp
xlat
lods
ret
fsubp
mov
xchg
jle
repnz
out
in
sub
push
test
out
mov
xchg
jmp
data16
cmp
loop
shlb
stos
fists
das
fisubrs
fimuls
jg
fidivrs
test
mov
xchg
in
xlat
xchg
out
xor
ds
pop
icebp
pop
rorb
push
xchg
dec
mov
mov
fwait
out
orl
mov
dec
mov
testl
les
pop
mov
pop
push
fiaddl
fldt
or
or
xchg
mov
cmp
inc
push
nop
inc
adc
neg
leave
jecxz
jp
sarb
xor
fcoml
push
ja
arpl
insb
dec
daa
dec
sub
and
lcall
sbb
iret
ret
cli
out
test
outsb
sub
aaa
loope
movsb
xchg
adc
cmpsl
fldcw
icebp
inc
sub
aad
daa
inc
icebp
ljmp
mov
pop
sbb
lds
sbb
mov
or
daa
push
stos
test
push
inc
ljmp
test
mov
cmpsl
add
jnp
jne
popf
fistpl
mov
adc
pop
pop
test
jmp
sbb
add
aas
adc
push
dec
mov
cmpsb
pop
rorb
insb
cmpsb
in
pop
les
mov
test
popf
lods
add
jmp
into
pop
not
cwtl
mov
pop
out
jnp
std
jb
mov
mov
rcrb
les
sub
mov
das
adc
scas
popf
dec
and
bound
test
in
sbb
sub
fidivrs
dec
cltd
push
icebp
mov
and
test
dec
inc
adc
in
xchg
dec
push
or
sub
xor
pop
int
mov
xor
test
stos
aaa
sub
mov
jp
mov
pop
mov
fnstsw
dec
inc
jne
sbb
cmpsb
outsb
xchg
xor
neg
inc
into
lret
pop
imul
fcmovnu
add
aas
fsubl
mov
jp
or
add
sub
adc
pop
adc
mov
ret
pusha
jno
xchg
orb
xor
leave
jge
out
dec
mov
lret
adc
enter
in
and
dec
sbb
adc
cmp
mull
jecxz
dec
mov
add
bnd
lds
inc
jne
fisttpl
mov
dec
icebp
xor
lret
data16
rclb
mov
test
mov
pop
loop
inc
test
xchg
push
test
mov
jg
decl
cmpsl
sbb
jo
arpl
dec
push
mov
aam
mov
sti
cltd
jmp
rorb
ret
lea
int
dec
xchg
mov
xor
adc
mov
jbe
mov
or
push
cld
loop
and
jge
repnz
jmp
bound
popf
xor
mull
and
xchg
jns
pop
jle
inc
push
add
in
lret
xlat
dec
outsl
pop
adc
pop
fmulp
pop
out
cmp
sbbb
outsb
test
stos
push
adc
inc
jo
xchg
pop
sbb
push
in
sbb
scas
mov
mov
pusha
out
adc
ljmp
jb
xorb
es
pop
jp
jl
sub
sub
lods
add
out
rorb
imul
fdivs
jmp
dec
insl
mov
or
fcompl
cld
in
sub
mov
iret
inc
mov
ljmp
dec
xchg
xor
cld
ss
xchg
nop
adc
insl
fcomps
lahf
or
es
int
jno
pop
jns
cmc
sub
jne
les
movsl
enter
xchg
xlat
je
xchg
int3
into
adc
dec
test
imul
cwtl
sbb
or
lds
push
enter
dec
test
js
lret
rclb
ficompl
cmp
pushf
loope
js
test
mov
stc
fsubrs
sbb
adc
ss
arpl
xor
out
jne
pop
scas
andb
push
test
scas
inc
inc
jbe
sub
adc
je
or
mov
in
fucomi
fwait
ljmp
mov
adc
into
fadds
xchg
lods
enter
les
out
mov
subb
or
mov
push
iret
xor
stc
das
cwtl
fstpl
ss
xchg
fsub
or
mov
mov
pop
nop
enter
dec
lds
sub
scas
lahf
je
push
je
fld
lea
lret
test
sub
or
pop
xchg
fs
xor
clc
jb
das
ret
lds
in
mov
scas
out
lahf
sar
sub
idivb
sbb
loop
fldt
fs
sbbl
divl
jmp
aaa
pop
add
lahf
sub
test
ss
pushf
sbb
mov
sub
jbe
imul
and
jl
jle
mov
xchg
xor
pop
and
mov
jns
jle
xchg
ja
dec
repz
xchg
mov
lea
pop
cltd
sbb
push
subps
mov
add
in
add
xlat
pusha
xor
adc
ss
pop
and
aas
lret
pop
negb
adc
daa
mov
mov
mov
pop
loope
test
pop
in
pop
cmp
jae
mov
cmpsb
test
test
push
xor
ret
push
jno
pop
mov
xchg
in
loop
call
cmc
xchg
in
lret
call
cmpb
xor
dec
pushf
out
arpl
lret
mov
fsubrl
popa
out
xchg
mov
mov
lock
sub
outsb
fsubs
push
add
jle
fcomps
pop
pop
add
or
test
xor
aaa
fwait
notb
mov
jns
dec
imul
push
cmp
pop
repz
mov
ja
repz
pop
push
out
icebp
fsubp
lea
mov
xor
adc
jo
pop
push
movsl
push
inc
hlt
jne
mov
mov
jo
sbb
popf
sbb
mov
xchg
rcl
mov
adc
shr
cli
xacquire
fs
js
sbb
pop
jp
cmc
or
int
mov
and
mov
icebp
add
push
inc
add
inc
mov
repnz
xchg
shlb
enter
ljmp
xchg
mov
pushf
enter
aas
fxch
dec
dec
daa
push
mov
outsb
xor
mov
xchg
jo
push
cmp
lds
add
push
in
out
in
out
and
rcrb
lods
xchg
sbb
or
insb
pop
scas
loope
xchg
jnp
cmp
jbe
mov
sub
aas
cs
xchg
rorb
pop
pushl
cmp
and
lock
clc
out
sbb
lods
outsl
dec
fmuls
jne
push
push
or
jl
jl
repnz
popf
pop
sbb
or
mov
aad
popf
add
jge
xchg
repnz
jg
or
mov
mov
or
pop
aad
leave
rclb
into
push
jbe
mov
cmp
adc
mov
xor
cmc
xor
inc
jne
mov
mov
movb
sbb
stos
mov
jl
imul
rclb
leave
inc
in
mov
pop
test
mov
int3
mov
push
pop
xor
sbb
cwtl
xor
xor
mov
cmpsl
cwtl
repnz
or
inc
shll
and
sub
loop
insb
jecxz
sbb
cmpsb
and
cmpsb
cli
mov
stos
dec
enter
and
or
sub
add
cwtl
sbb
fsubr
cmp
loope
inc
lds
xor
jmp
rcrb
mov
mov
pop
sbb
bnd
idiv
and
mov
pop
push
cmp
das
mov
out
cld
or
addb
int3
or
shll
xchg
iret
leave
fnstcw
and
pop
sub
test
lock
xlat
sarb
inc
int
leave
dec
jecxz
cmp
push
es
inc
outsl
mov
or
xlat
dec
and
repz
inc
dec
popf
cs
imul
shr
loop
lcall
mov
pop
lods
nop
lcall
cmp
mov
sbb
stc
inc
or
xor
ret
mov
pop
stc
ret
push
addr16
shl
sbb
imul
adc
sub
mov
and
int
lahf
pushf
lret
stos
outsb
mov
scas
js
loopne
adc
cld
xchg
enter
not
out
jne
jne
lret
sub
repnz
xchg
pop
mov
or
js
stos
add
and
pop
push
sahf
push
push
inc
gs
sbb
push
push
add
mov
cmp
ret
scas
push
pushf
stc
out
outsb
sbb
das
xor
jne
lret
jge
out
pop
cmp
out
imul
mov
or
push
scas
push
cmp
lods
mov
adc
lcall
jg
lcall
sub
adc
lret
or
fisttpl
mov
adc
jg
jg
lcall
cmc
or
test
dec
dec
dec
mov
daa
cmp
lret
movsl
inc
xor
rcl
push
add
mov
fidivs
add
xchg
push
in
cmp
iret
jnp
sub
mov
xchg
mov
shl
loopne
jbe
mov
jg
out
cmp
popl
ja
pop
les
xchg
repz
scas
lds
scas
aad
pop
out
push
add
call
xor
std
mov
mov
add
sub
push
pop
adc
push
dec
jmp
dec
xchg
das
sub
lahf
pop
cmp
fwait
xor
adc
ret
mov
dec
add
dec
cli
mov
mov
aam
aaa
fnstcw
jns
push
xor
jae
mov
and
xchg
xchg
xor
push
sbb
xchg
stos
mulb
push
xchg
jge
cltd
and
push
xchg
pop
dec
out
mov
pop
pushf
and
cmc
incl
das
outsl
jmp
or
iret
pxor
cmp
nop
push
xor
sub
je
or
mov
mov
stos
stc
movsb
or
jle
fsubrl
sbb
popf
lock
movsl
ljmp
lea
test
lret
ret
cmp
and
jmp
scas
mov
ret
and
cmp
jb
ss
sbb
insl
pop
inc
adc
fisttpll
popf
cmpsl
lret
cltd
cmpsb
cmp
lahf
jae
out
xor
push
adc
cli
je
lock
neg
addr16
xor
push
psllw
fdivrl
lret
push
pop
sbb
inc
pushf
loopne
and
push
les
mull
jns
sbb
test
mov
jns
pop
mov
xor
xchg
pop
ds
addb
ret
into
aaa
mov
out
std
rcrl
push
cmp
in
xor
sub
sbb
out
fistps
add
les
xor
out
clc
or
incl
sub
es
jmp
and
rorb
jnp
or
iret
in
cli
out
lea
xor
mov
cmpsb
cmp
jo
jbe
inc
insb
fwait
push
fdiv
or
jae
fwait
nop
addr16
ljmp
add
shl
sub
push
cmp
inc
push
jnp
add
out
xor
adc
in
ja
out
cmp
pop
cmpl
push
repz
loop
dec
imul
push
jge
mov
dec
sub
xchg
dec
int3
cltd
push
push
loope
xchg
pop
mov
adc
pop
call
mov
iret
movb
mov
lods
subb
pusha
imul
or
xor
outsb
mov
aaa
rclb
fdivrl
adc
pushf
mov
jmp
es
adc
insb
or
cmpsl
cmpsl
push
xlat
test
outsb
mov
inc
pop
cmp
jg
shl
outsl
test
cltd
outsb
outsl
iret
xchg
in
sar
xchg
and
sahf
fistps
sbb
roll
sub
dec
fildl
rcll
stos
xlat
gs
ljmpw
or
les
decb
mov
cmp
jmp
push
jns
mov
cmpsl
mov
outsl
pop
jno
mov
sub
fcoms
cwtl
mov
dec
nop
sbb
sub
inc
xchg
dec
mov
inc
cmp
test
xchg
add
cmpsl
xchg
cli
aam
inc
mov
in
daa
stc
or
jmp
cmp
call
sahf
inc
add
nop
cmc
fs
jg
push
push
ss
lea
pop
loopne
jae
ja
pusha
icebp
xchg
sti
mov
fimull
dec
bound
inc
add
scas
sarl
daa
dec
push
adc
sub
hlt
clc
or
pop
pop
mov
stc
push
pop
in
ds
pop
testb
inc
shll
lret
cmp
pusha
jne
xor
xor
push
stc
dec
inc
dec
mov
jecxz
and
and
enter
lret
inc
mov
lods
push
sarb
pop
and
dec
mov
xor
ret
mov
lcall
stc
inc
fmuls
shrb
inc
nop
imul
jns
lods
sahf
jg
orb
aaa
lcall
or
or
dec
add
push
adc
fidivl
ret
cltd
adc
jno
push
cmp
js
pop
and
jecxz
mov
or
cmpsl
les
cmp
xor
ret
dec
add
rcrl
jg
adc
jg
sub
jo
in
push
call
jae
push
stos
mov
not
push
mov
mov
call
mov
cmc
int
fcomp
jge
je
mov
aaa
mov
add
fidivl
push
imul
data16
push
ret
pop
inc
mov
shrl
or
inc
movsb
jne
call
push
clc
xchg
movsl
inc
sbb
cmc
repz
int
in
scas
popf
mov
dec
cmp
test
cmpsb
or
mov
popa
iret
lret
add
test
mov
nop
xchg
sbb
xor
and
dec
scas
loop
dec
jb
mov
jns
lods
jno
cwtl
mov
stc
mov
xor
fstpt
js
sbb
cmp
enter
sbb
popa
sbb
add
test
jnp
push
dec
lea
xchg
movl
fpatan
lods
lahf
xlat
cmp
jmp
test
and
jne
push
pop
jl
js
mov
cmp
cmp
xor
and
ror
daa
push
xchg
daa
cltd
mov
lret
dec
sbbb
sti
dec
ss
push
fildll
dec
dec
add
inc
jp
jo
je
outsb
rorb
or
or
cmc
inc
mov
outsl
fldcw
or
into
cld
inc
add
pop
inc
daa
mov
enter
inc
xor
mov
xchg
daa
into
mov
pop
inc
jecxz
repz
cltd
hlt
rorb
insb
mov
xor
xor
enter
aas
push
jmp
inc
mov
lea
ficomps
leave
fstpt
mov
mov
mov
push
pushf
adc
jp
addr16
das
cmp
in
jecxz
jge
pusha
pop
inc
add
js
ss
jmp
xor
mov
xor
rolb
das
cmp
mov
pop
xor
and
orl
clc
sub
mov
aam
jns
lret
jle
pop
mov
or
inc
jle
je
mov
xchg
cmpsb
scas
imul
xchg
fs
mov
pop
push
addr16
int3
xor
add
pop
jo
movb
loope
sbb
push
jge
jg
jp
xchg
jl
pushf
add
xlat
sbb
cld
loop
ror
push
jmp
or
pop
sbb
testl
adc
mov
push
rorl
loope
inc
jg
xchg
call
std
xchg
pop
clc
cmp
and
es
loopne
cltd
popa
jo
test
push
hlt
adc
scas
ret
cmp
cmp
mov
or
out
xchg
aam
xchg
iret
and
fdivrl
les
adcb
rorl
cmp
jbe
aad
aaa
lock
add
rcll
jbe
sub
sarb
xchg
sbb
addl
in
iret
mov
scas
push
cltd
test
lock
push
push
push
xchg
add
push
add
sub
out
mov
and
mov
pop
fsubl
aad
setnp
rorb
dec
aad
and
add
push
jle
jl
leave
roll
ja
out
sahf
cli
fs
sub
cmpsb
mov
mov
cmp
add
push
in
cmp
imulb
jne
fs
push
dec
or
and
cmp
dec
mov
test
into
adc
pop
mov
inc
jae
mov
imul
ja
imul
push
hlt
mov
xor
pop
jp
pop
sbbb
inc
stc
cmp
pop
imul
enter
fdivl
addl
ja
mov
bound
outsb
or
sbb
sub
fisubrl
aam
in
xchg
inc
stos
sub
sbb
movsl
sbb
daa
jb
push
xchg
sti
pop
out
scas
lret
iret
imul
sub
fistpl
mov
ljmp
out
test
xor
xchg
pop
mov
sub
xor
outsl
mov
xorb
pextrw
pop
mov
int3
pop
lds
pusha
ljmp
inc
aaa
inc
or
sbb
add
mov
out
mov
push
sbb
cmp
mov
or
hlt
push
adc
std
sub
scas
sub
inc
fnstcw
sbb
jge
int
bound
mov
jp
mov
loope
movsl
cmp
push
adc
ljmp
mov
xchg
push
rolb
mov
add
and
cmpsl
jecxz
mov
jge
inc
mov
enter
mov
push
xchg
pop
imul
out
sbb
xchg
and
xchg
lahf
fimull
pop
jp
push
test
clc
push
xchg
outsb
dec
orl
es
sbb
cmp
mov
adc
mov
js
mov
inc
pop
mov
add
repnz
test
leave
adc
lcall
lahf
js
xor
cmc
mov
mov
movsl
cmp
mov
xor
xchg
dec
fs
mov
mov
cs
outsl
iret
jecxz
push
fldl2e
daa
push
adc
mov
repnz
and
shrl
or
fldenv
sbb
aaa
sbb
xchg
je
inc
add
insb
fisttpll
jne
and
xor
sbb
les
or
and
mov
fwait
insl
pop
lcall
in
gs
lea
stc
push
int
inc
sarl
insb
push
loopne
ror
push
outsb
jb
outsl
xor
sbbb
cmpl
jo
testb
and
fdivl
test
imul
pop
scas
jae
pushf
jecxz
inc
xchg
sbb
stos
mov
jo
mov
andl
aas
jmp
xlat
pop
dec
out
sbb
jmp
iret
add
sbb
mov
mov
mov
out
ret
repz
cmp
cmpsl
inc
repnz
test
fadd
popa
movsb
sbb
inc
dec
std
shll
cmp
insl
adc
dec
sbb
adc
in
jns
xchg
lods
outsl
test
and
stc
xchg
dec
nop
inc
daa
mov
cmpb
test
loop
repnz
fs
lock
push
out
lcall
sub
divl
fucomp
cld
hlt
in
out
mov
pop
rolb
sahf
fistps
dec
lds
mov
sbb
push
pushf
adc
push
push
and
sub
and
or
jecxz
addr16
add
inc
or
std
stc
outsb
cmp
loop
test
jb
fsts
jne
test
sbb
stc
jg
lods
gs
push
loop
adc
sbb
shl
push
add
mov
inc
add
lret
icebp
push
in
outsl
and
iret
js
mov
or
rclb
jle
mov
mov
pop
jmp
sub
xor
sub
inc
aad
in
test
loopne
test
push
ret
lods
jg
ja
fs
push
out
or
into
mov
mov
aad
lahf
cwtl
std
cmpsl
sbb
mov
xchg
iret
lods
sub
add
sahf
sub
mov
cs
rcll
xor
xchg
loop
sbb
aam
outsl
sbb
jb
mov
cmp
push
xor
jbe
xchg
pop
clc
fidivrs
popl
jmp
js
dec
or
loop
mov
and
cmpsl
out
push
fnstsw
mov
mov
test
fsts
mov
movsb
xchg
mov
iret
push
cltd
jl
pop
lea
stos
leave
push
jl
mov
or
sahf
gs
jae,pt
and
mov
inc
loope
push
mov
or
stos
mov
pushl
mov
lret
icebp
lahf
stos
testl
cmpsb
outsb
por
mov
popf
mov
mov
sysenter
mov
in
adc
test
mov
pop
mov
dec
testl
inc
lret
loop
punpckhbw
xor
inc
in
pusha
cs
pop
mov
out
hlt
les
scas
test
or
xor
mov
orb
mov
mov
mov
xor
fscale
add
je
testb
nop
and
inc
and
cs
aad
in
add
dec
outsl
fwait
cld
fcomps
pmullw
add
pop
adc
clc
inc
out
insb
ss
and
push
or
clc
jo
das
into
push
sub
push
lock
xlat
outsb
clc
cli
xor
movsb
out
push
xchg
sub
mov
pop
lds
cmpl
jmp
dec
push
pop
daa
les
outsl
inc
push
test
lods
sbb
cmp
sub
dec
and
adcl
dec
leave
adc
push
test
out
jno
negb
inc
icebp
cmp
adc
in
inc
xor
inc
mov
sbb
push
decl
dec
dec
push
call
enter
pop
out
sub
xor
jb
jns
inc
mov
pop
pop
inc
inc
lock
lahf
in
inc
mov
push
enter
pop
xchg
sbb
cld
push
fdivs
or
fsts
mov
scas
outsb
and
jg
insb
dec
xchg
mov
mov
mov
xor
jecxz
je
out
pop
clc
jmp
cmp
ja
imul
and
ret
and
ret
jne
and
mov
jle
movsb
pop
sub
sbb
pop
pop
shrb
rol
pop
and
push
lcall
and
ss
push
push
mov
mov
mov
push
sti
fs
imulb
test
jno
sbb
mov
nop
stos
in
rcrb
popa
fldenv
mov
and
push
jg
lea
addr16
pop
push
push
insb
ds
mov
xlat
mov
jae
fsubrl
and
and
sahf
cltd
imull
test
jo
cld
sub
cmp
add
lea
aam
push
inc
mov
xchg
pop
out
pop
mov
andb
nop
ja
shll
xor
pushf
test
insb
dec
add
and
lret
stos
je
fldcw
push
clc
push
dec
sbb
out
or
insb
add
add
pop
adcb
or
call
and
adc
int3
aad
xor
inc
mov
jbe
aam
test
gs
addl
mov
sub
or
aas
xor
fst
add
xlat
cmpsb
cld
sar
sbb
add
sbb
data16
addl
xor
sub
notl
push
pop
jnp
insb
sbb
in
inc
mov
mov
cs
xchg
mov
imul
mov
add
shll
dec
sbb
xor
xchg
mov
mov
pop
pushf
lods
cmp
adc
pop
int3
xchg
sbb
or
push
outsl
fldt
insl
xor
jns
inc
insl
repz
mov
pop
test
mov
mov
mov
daa
popa
lock
adc
sbb
push
dec
cmp
stos
int
adcb
sbb
in
pop
jb
popf
fistl
mov
jns
ret
mov
rorb
pop
lahf
add
loop
lret
mov
fistps
push
test
int
pop
mov
out
and
mov
xor
out
outsb
aad
sub
mov
mov
mov
rclb
shrb
jmp
adc
aaa
rcrl
mov
jl
mov
push
xor
xor
shlb
sbb
jecxz
sbb
lea
adc
jle
jle
add
mov
mov
push
jnp
dec
nop
dec
imul
je
add
mov
fwait
xchg
xchg
jg
stos
or
adc
add
mov
jbe
pop
stos
repz
xchg
out
cmp
pop
adc
fdivp
mov
xchg
mov
pop
mov
int3
cmp
nop
xchg
stos
and
jb
ret
adc
mov
xchg
dec
mov
jg
aam
or
movb
push
out
clc
jp
scas
mov
pop
mov
xchg
jne
mov
lds
push
jnp
in
fdivs
dec
mov
mov
outsl
movsl
decb
dec
xchg
outsb
xchg
mov
outsb
mov
ficompl
sbb
mov
shr
and
pusha
cmp
lock
dec
enter
std
adc
and
xlat
sahf
repnz
mov
idiv
jnp
push
jmp
and
inc
fdivl
popf
ret
and
nop
dec
shl
jmp
div
cmp
mov
lds
mov
sub
push
aas
xchg
jecxz
in
out
mov
pop
adc
xchg
cs
mov
adc
add
adc
int
cwtl
xchg
ret
test
pop
bound
xor
bound
cmp
mov
das
sarl
mov
push
js
dec
shll
fldt
cli
cmp
es
fadd
add
std
xor
fstpt
scas
xor
inc
jae
adc
loope
push
movsl
push
aaa
cmpsb
nop
lcall
add
inc
dec
mov
mov
cmp
in
inc
in
mov
test
popa
jg
aam
shlb
xor
jp
mov
les
ficoml
testl
popf
mov
pop
rcll
or
dec
dec
cmpsb
dec
xor
push
adc
push
in
pop
in
das
push
movsb
pusha
jns
or
dec
inc
sub
aad
ja
add
jo
out
ds
arpl
stos
adc
pop
xchg
mov
jecxz
sti
mov
jo
mov
ss
repnz
gs
cmpsb
mov
sub
loopne
inc
pop
push
pop
push
sub
or
pop
and
insl
jge
xor
pop
mov
daa
and
ret
xchg
sbb
and
mov
jbe
push
mov
orb
aad
repz
push
rcrl
push
jb
shlb
rcll
sub
jae
dec
insb
sahf
repnz
adc
lods
pop
popa
push
pop
sub
mov
pop
mov
pop
mov
mov
cmpsl
mov
jns
arpl
xchg
mov
jae
sub
lret
dec
push
dec
sub
jmp
xor
cmpsl
ljmp
mov
adc
movsb
jge
pop
cmc
cmpsl
and
das
loop
pcmpeqb
repnz
not
jle
daa
fcoml
insb
arpl
adcb
shl
xchg
xchg
pop
xchg
xor
xchg
icebp
flds
mov
lcall
pop
xchg
inc
inc
push
pop
jb
jo
xor
notb
jmp
adc
cmp
jnp
and
add
push
xor
leave
mov
loopne
mov
mov
gs
cmp
sub
xor
fcoml
mov
lret
xor
inc
jne
shr
mov
mov
cmc
dec
push
stc
mov
nop
mov
test
mov
pop
adc
pop
cltd
popa
arpl
cs
and
fldl
push
fisubrl
pop
mov
int3
jnp
out
mov
arpl
clc
dec
sbb
pop
mov
lcall
pop
movsl
in
xor
fwait
inc
je
flds
sbb
jb
dec
ss
andb
xchg
push
out
pop
stos
rorb
inc
jg
add
rcrb
push
pop
jno
jne
test
push
in
sbb
or
and
sbb
test
clc
xchg
in
outsb
fiaddl
jae
cs
repz
outsb
cmp
xor
loopne
push
inc
xchg
mov
xchg
pop
ja
mov
mov
mov
data16
into
sbb
push
iret
jno
loope
adc
arpl
sbb
call
mov
iret
sbb
hlt
xchg
outsl
aad
cmp
jl
push
js
ss
shlb
repnz
pop
jns
dec
mov
lods
test
sub
xor
ja
inc
movsb
out
mov
xchg
enter
insl
cmp
cld
add
movsb
jg
mov
jp
gs
sub
mov
pop
mov
pop
sbb
jmp
jle
sub
xor
mov
nop
xor
cs
push
sub
shrb
or
dec
mov
adc
dec
jmp
push
js
movsb
or
out
and
mov
jge
and
push
push
lock
mov
test
jno
jne
xchg
cwtl
sub
outsl
xchg
or
fs
mov
rcr
sbb
insl
jl
jecxz
push
stos
movsl
movsl
out
lods
adc
cmpl
sub
test
cmp
xchg
in
sbbl
jo
jp
or
rcr
xor
outsl
sbb
jmp
das
inc
jecxz
orb
sub
jge
jp
imul
mov
mov
mov
jmp
jo
pop
mov
xchg
arpl
imul
cmc
shlb
pop
outsl
cmpsl
lds
callw
push
xor
pop
outsb
aam
in
stc
ljmp
cltd
ja
jae
cmp
aaa
mov
mov
push
nop
mov
mov
je
mov
outsl
lods
sub
and
jg
cmc
movsl
jle
jle
mov
cmp
inc
sbb
inc
aam
or
fs
dec
jae
data16
out
psubusb
jle
add
mov
or
imul
dec
push
cmp
xor
lcall
xchg
adc
sti
sbb
xor
adc
lods
imul
addb
lret
push
xchg
inc
popf
cmpsl
shll
jle
ss
data16
and
lods
mov
and
fisubl
lods
push
adc
insb
lods
xchg
mov
nop
sub
mov
cmp
scas
mov
xor
xlat
lods
add
push
scas
pop
adc
popf
xor
jle
xor
or
clc
jne
pop
jno
push
dec
and
aaa
jno
push
mov
cmp
lods
popa
push
orb
dec
pop
repz
jnp
xor
jne
sahf
call
jae
mov
sbb
add
out
jmp
jne
mov
mov
xchg
test
imul
adc
iret
sahf
loopne
or
jg
jae
inc
inc
popa
std
push
mov
rol
ret
orb
sbb
inc
adc
dec
mov
movb
rolb
add
mov
mov
jp
xchg
mov
sbb
pop
rcr
std
cltd
mov
mov
and
push
cmp
cmc
pop
cmp
iret
arpl
or
cmp
dec
inc
ja
sbb
mov
jae
arpl
ret
add
movsb
sarl
rcll
imul
xchg
out
lods
sti
enter
repz
mov
bound
adc
mov
les
sub
mov
pop
imul
jl
sahf
or
insl
xchg
rcrl
bound
enter
mov
mov
call
cmp
mov
or
notl
pop
cmpsb
inc
adc
add
test
addr16
cld
std
lea
mov
push
icebp
out
enter
leave
ljmp
mov
xor
lods
cmp
sub
dec
mov
sbb
mov
sbb
mov
and
mov
pusha
lods
cmp
sub
and
icebp
jle
pusha
mov
inc
jecxz
cld
leave
notb
mov
fsubl
mov
inc
divl
adc
jns
sbb
mov
cmp
cli
data16
push
inc
addr16
in
cld
push
sub
not
push
fstl
jns
add
mov
sbb
adc
je
lret
dec
fistpll
mov
adc
scas
dec
adc
test
ds
in
jns,pt
pop
andl
arpl
pop
jmp
outsb
pusha
decb
shll
fnstsw
test
xchg
dec
push
cmpsl
xor
fs
call
lods
lcall
jp
dec
lods
mov
jp
mov
leave
ja
inc
frstor
xchg
or
mov
movsl
mov
test
pop
bt
fistps
das
pushf
or
mov
inc
aam
add
xlat
sub
jnp
dec
jbe
and
sbb
mov
aad
push
adc
lds
mov
aaa
pop
dec
int3
push
adc
cmp
and
cmpsb
and
mov
mov
jle
test
call
jmp
or
adc
in
cmpsl
loope
decb
mov
scas
inc
jg
xor
jge
jl
mov
lock
mov
stos
sbbl
and
pop
jns
and
pusha
int3
sub
sbb
insb
aas
mov
sbb
data16
cmp
cs
mov
orb
xor
cmp
adc
jmp
and
and
pop
or
paddusb
imul
movsl
push
rcll
dec
inc
or
dec
xor
push
pop
cld
pop
jp
out
scas
sbbl
outsl
pop
push
push
jmp
mov
sbb
and
in
and
or
push
out
decl
int
mov
mull
and
xlat
out
mov
xor
test
outsb
out
inc
jmp
sbb
in
fisubrs
rorb
mov
bound
movsl
stc
shrl
adc
mov
or
add
call
mov
inc
sbb
jbe
cmp
sbb
test
dec
xchg
test
cmp
sbb
pushl
call
jge
adcl
jp
std
xchg
mov
mov
and
pop
sub
mov
jmp
inc
test
mov
lds
lods
popf
cmp
pop
popa
jge
pop
je
push
dec
push
inc
inc
aad
jbe
pop
sub
jle
out
xor
pop
jge
push
sbb
icebp
bound
stos
jge
and
mov
mov
js
cwtl
decb
leave
out
xor
cmc
lcall
xchg
daa
add
cmpsb
in
mov
pop
sub
lcall
mov
mov
cmpsl
in
and
pop
shl
pop
insb
orb
add
ret
mov
cmc
ret
dec
ret
xchg
lea
mov
push
inc
inc
rcll
xchg
and
cmp
mov
mov
add
pop
scas
xor
fcomi
pop
lret
push
mov
jo
mov
pop
and
xor
aad
inc
bound
add
dec
adc
push
and
jo
fucom
call
sbb
dec
insl
rcrb
hlt
pusha
mov
bound
mov
push
lret
test
out
adc
les
inc
loope
jne
std
in
mov
adc
mov
fcoms
mov
fcoml
dec
adc
xlat
cmp
xchg
rcr
rcll
dec
fs
stos
dec
rcl
pop
cmpb
movl
stos
in
outsb
pop
adc
add
jle
push
adc
ror
popa
adc
daa
sub
sbb
testb
lods
push
push
fsts
sahf
mov
pushf
mov
iret
pop
andl
xor
in
push
je
cmpsl
leave
hlt
push
std
fldt
adc
hlt
fisttpl
incb
cmc
or
outsb
add
test
mov
mov
bound
pusha
cmp
in
ja
cmp
js
push
pop
push
and
loop
push
xorb
imull
pop
push
stos
aad
stos
cmpsl
jae
mov
fmulp
add
sbb
cmp
jns
jb
jg
movsb
lods
jg
cld
fcom
loop
push
or
ja
dec
cmc
ljmp
lds
push
repnz
cwtl
pop
enter
das
je
jo
jmp
inc
mov
sub
leave
push
jae
lret
xor
js
push
and
lcall
repz
outsl
mov
lret
in
cs
stc
je
inc
icebp
div
outsb
dec
pop
and
sbb
xor
pop
xchg
cltd
daa
jno
sub
sbb
cmp
push
pop
mov
jo
dec
faddl
cmp
pop
clc
in
jo
in
enter
sti
fsubrp
into
cmp
inc
mov
push
ja
mov
inc
repz
shlb
dec
dec
xchg
adc
test
sbb
clc
ret
ds
add
mov
gs
sub
stos
call
mov
mov
stos
dec
hlt
sbb
xchg
pop
mov
nop
shlb
fbld
pushf
xchg
sub
and
jb
sbb
fnstcw
in
jae
andb
out
and
or
mov
fdivr
xchg
shrb
mov
imul
mov
mov
sbb
and
lahf
mov
cmpsb
ljmp
pushf
inc
cmpsb
pop
stos
aaa
js
test
adc
xchg
out
repnz
icebp
push
cmc
mov
adc
xor
inc
inc
mov
mov
push
xor
push
in
cld
negl
sbb
ret
fldl
test
out
in
movsb
or
insb
adc
popf
jno
inc
dec
mov
sbb
push
in
sbb
sti
push
jns
sub
mov
mov
jmp
in
mov
aas
lret
ret
mov
add
movsb
cmp
pop
push
add
movsl
push
ljmp
les
pop
scas
idiv
ljmp
repnz
stc
arpl
pusha
nop
lcall
jno
add
inc
andb
xchg
outsl
repz
mulb
mov
sub
jnp
adc
add
or
fwait
xchg
aad
les
add
sbb
and
xlat
pop
es
addr16
cmp
pop
jmp
or
xor
or
push
mov
int
jmp
sbb
andl
maxps
mov
inc
jmp
xchg
cmp
push
rorb
mov
lahf
imul
les
pop
push
cltd
push
mov
xchg
out
xchg
pushf
icebp
cmpsl
cmp
fidivrl
daa
jb
add
sbb
sahf
mov
ljmp
movsb
test
xchg
xchg
or
xor
loop
bswap
and
xchg
xchg
jbe
pop
inc
outsb
push
aad
push
out
decb
fwait
bound
mov
pusha
inc
or
jle
subb
imul
orl
push
xchg
inc
inc
inc
out
inc
je
iret
pop
xchg
push
in
lea
xor
push
add
mov
dec
mov
vpmadcswd
jo
cmp
jl
aas
stos
add
push
mov
je
nop
xorb
pop
and
mov
shl
push
sub
sar
es
icebp
xchg
jo
in
movsl
addr16
pop
dec
cmc
lods
or
out
xorb
push
insl
sub
hlt
movsl
in
outsl
scas
mov
cwtl
jns
fcom
push
out
sbb
stc
repz
sahf
inc
loopne
xor
xor
ljmp
xchg
mov
aad
js
add
test
cwtl
scas
xchg
iret
jne
cmpsb
pusha
adc
cmp
in
or
sub
jb
loopne
aad
into
mov
std
dec
mov
ja
jle
je
movsl
ds
mov
and
mov
int3
scas
sbb
into
sbb
rclb
mov
pop
sbb
and
dec
mov
xor
and
mov
lret
sbb
daa
mov
mov
fwait
aad
mov
push
lods
je
sti
enter
add
negb
xchg
scas
out
and
pusha
out
mov
lds
fndisi(8087
dec
je
out
push
loope
push
xor
mov
jo
je
jb
stos
jbe
mov
pop
cltd
cmp
out
in
cld
mov
mov
ret
cmp
mov
mov
je
mov
std
outsl
cmc
inc
in
sbb
dec
xchg
add
mov
mov
cmpsb
das
pop
insl
sarl
xor
rcrb
mov
lret
add
mov
cmpsb
mov
int3
test
scas
cmp
and
jno
push
jmp
dec
push
add
movsl
in
repnz
pop
cmp
pop
ret
jb
cwtl
mov
sbb
scas
mov
cwtl
adc
xor
lret
pop
inc
push
push
mov
xor
fwait
cmp
js
shlb
cld
loop
mov
jnp
cmp
xlat
xchg
icebp
jo
cmpsb
lret
seta
cmpsb
push
out
lahf
xchg
mov
xor
and
insl
ss
lock
int3
shlb
fadds
inc
subb
imul
ljmp
leave
mov
add
pop
xor
out
stos
fldcw
push
jns
jl
aad
push
jns
out
or
xor
insb
and
ds
push
je
inc
jnp
cmp
clc
mov
mov
xchg
mov
jp
insl
fcomi
or
or
xorl
into
cld
xchg
dec
js
ficoml
or
or
sub
outsl
pop
or
pop
test
or
push
or
adc
clc
sub
mov
lods
out
cmp
cmp
mov
pop
stos
push
clc
pop
xor
push
push
cld
jne
mov
mov
mov
movsl
sbb
stos
es
ja
mov
pop
movsl
sub
mov
mov
push
mov
push
imull
out
dec
adc
popf
stos
lock
clc
cmp
arpl
add
xchg
movb
xchg
inc
xlat
push
outsb
cmpsb
or
push
in
sahf
test
fcoml
pop
aad
popf
pop
lret
shrb
stos
xorb
push
loope
stos
push
xor
hlt
nop
dec
mov
insb
push
jge
lcall
iret
dec
cli
pop
loope
push
mov
leave
and
leave
bound
enter
xchg
ret
sti
pushf
inc
ja
xchg
jns
hlt
push
in
lahf
les
cmp
fs
sahf
adc
or
sub
mov
in
pop
dec
fists
xchg
test
add
and
iret
add
aas
xchg
int
das
dec
mov
sbb
pop
mov
jmp
lret
inc
push
mov
sahf
ljmp
and
jne
push
push
test
addr16
mov
push
mov
adcl
push
repnz
fwait
cmp
xor
fs
xchg
lea
sti
pop
cmp
sarl
arpl
push
cld
shll
pushf
test
loopne
imul
jne
xor
sub
add
mov
ret
jmp
mov
aas
shl
mov
add
ret
xor
sbb
adc
fsubrl
fnstsw
mov
xchg
ljmp
js
pop
mov
xchg
xor
mov
vorps
insl
nop
and
xchg
sub
int
out
lds
cmp
incl
je
xor
movsb
push
in
lahf
test
mov
cmp
xchg
jp,pn
mov
mov
adc
mov
push
into
or
cmpsb
into
stc
rcrb
sbb
cmp
outsl
jne
sbb
or
fcoms
push
jno
jge
push
xor
mov
add
inc
inc
inc
or
pop
cwtl
push
jecxz
cmp
ljmp
xchg
lock
fidivl
and
sub
movsl
mov
sahf
ja
cmp
xchg
cmp
inc
mov
enter
movsl
daa
mov
inc
mov
adc
insl
xlat
lods
test
aad
lcall
ss
add
mov
jo
adc
gs
icebp
lock
insb
lds
fistps
inc
clc
aas
and
xor
cmp
jg
sbb
sbb
mov
sub
adc
out
jl
movsl
dec
fbstp
sub
notb
sahf
lock
iret
pusha
movd
add
dec
mov
cmc
inc
lea
rep
les
sbb
sub
push
enter
mov
loop
and
push
insl
xchg
xchg
cwtl
cmp
pusha
pop
fs
adc
fwait
dec
mov
dec
inc
loope
and
sub
cmpsl
aad
rcr
mov
push
push
mov
xor
sub
mov
imul
pop
data16
jge
xor
xor
in
pop
mov
cmp
or
repz
je
int
sbb
push
dec
cmp
aas
mov
inc
dec
add
mov
iret
cmp
xor
inc
pusha
mov
movsl
imul
js
out
jmp
xor
push
clc
cmp
aaa
push
mov
sub
addr16
popa
stos
inc
mov
or
lea
mov
xchg
loop
fdivr
cmpsb
jl
insl
xchg
dec
sbb
mov
aad
mov
xlat
push
xor
std
lods
cltd
mov
insb
pop
out
cmpsl
sbb
inc
dec
out
in
push
js
cmp
or
pop
les
out
inc
jns
push
add
scas
lcall
aaa
mov
xchg
sub
je
push
jg
repz
mov
dec
xchg
jo
loop
cmp
ss
sub
push
sbb
jns
aas
jae
jp
pop
pop
ljmp
sub
mov
mov
loop
out
add
adc
fiadds
es
call
es
jbe
xchg
jp
fidivs
ret
sbb
push
sub
sub
xchg
aam
clc
xchg
outsl
inc
jb
ss
push
jmp
mov
sbb
xchg
out
into
in
les
mov
pushf
aas
sub
hlt
pusha
xor
testb
lahf
or
fwait
dec
sub
jecxz
clc
or
test
jge
or
mov
scas
pop
adc
in
test
sub
adc
sbb
dec
mov
xchg
mov
cmp
add
loopne
push
ds
sahf
leave
sub
mov
push
pop
gs
pusha
loop
mov
and
dec
cmp
outsb
iret
loop
loope
push
sahf
and
or
int3
test
ja
mov
inc
pop
dec
lock
dec
pop
lea
jg
cmc
fiadds
xor
mov
pop
xchg
pop
or
iret
test
pusha
adc
cmp
jg
and
dec
les
mov
fxch
adc
mov
imul
mov
out
cltd
sub
mov
addr16
push
xchg
cmp
mov
adc
scas
vpmaddwd
sub
xchg
mov
bnd
mov
sahf
fs
fldenv
mov
jmp
xlat
mov
fmuls
fcomps
fisubrs
mov
dec
jl
je
xchg
and
sub
fwait
aad
xlat
mov
inc
andl
jecxz
repnz
into
jmp
jns
fnsave
jge
pop
mov
mov
es
or
repz
adc
test
in
in
or
js
popa
jge
xchg
fdivp
in
test
lock
and
mov
push
fildll
xlat
push
test
mov
cmp
movsl
std
lcall
xor
sub
mov
rcrb
clc
or
push
add
jge
mov
jmp
sbb
js
cmp
xor
enter
fwait
inc
sbb
add
mov
je
enter
in
scas
aaa
jo
and
shlb
jo
or
data16
inc
sahf
aad
movsl
dec
push
shll
jno
int3
jnp
imul
adc
lods
stos
dec
int
jmp
inc
es
stos
sub
hlt
cmp
push
hlt
mov
inc
jb
mov
inc
stc
jne
pop
loop
movsb
cmpsb
in
dec
mov
std
ds
push
add
mov
push
frstor
outsl
cmp
ret
cmp
inc
xchg
mov
decl
fsubs
inc
ss
stc
movsl
add
mov
cld
adc
or
add
push
loop
dec
add
rcl
xchg
jp
push
pop
and
jecxz
xchg
loope
rclb
adc
cmp
xchg
mov
ret
flds
movsb
pop
mov
pop
cmp
outsb
inc
add
mov
and
mov
rorb
clc
push
pop
sub
scas
mov
mov
and
mov
and
jmp
and
or
push
out
int3
ja
popf
adc
in
or
push
ss
arpl
mov
push
loope
repz
in
leave
pushf
fldt
pusha
pusha
adc
ret
frstor
popa
cli
in
jnp
mov
jns
mov
dec
inc
rorb
xchg
pop
jnp
aad
mov
or
add
adc
cmpsb
mov
mov
int3
int3
sub
sub
pop
xor
adc
and
das
jae
test
sub
fimull
inc
cmp
sbb
lahf
fstpt
ret
lds
inc
cmpsb
cli
sahf
xor
js
xchg
cmpb
movsl
sahf
fnsave
xor
or
xor
test
sub
out
cli
stos
mov
fwait
jno
or
addr16
daa
mov
push
cmp
out
dec
xlat
sbb
sbb
je
clc
push
push
scas
or
in
jle
push
xchg
scas
js
lods
mov
pop
stc
inc
cmp
push
pop
add
lret
pop
sbb
inc
mov
ror
movsb
inc
or
xchg
push
inc
jo
sub
or
and
cmpsl
stc
dec
inc
jnp
jmp
pop
adc
js
negl
dec
das
rorb
dec
cli
cs
lock
xchg
adc
jp
pop
in
fsubrl
xchg
dec
arpl
cmpsb
jecxz
mov
fimull
mov
sub
loop
aas
cli
push
fistl
fiaddl
stos
test
fs
add
sbbb
pushf
pop
dec
lock
and
sbb
imul
push
stos
out
ljmp
sub
cmp
fdivrl
sub
pop
dec
sub
decl
mov
sbbl
lods
pop
int
cmp
lock
sbb
bound
popa
fwait
test
push
out
jno
push
pushf
push
inc
into
js
ret
cmp
hlt
je
pop
sbbb
movsl
jle
rorl
mov
add
in
imull
adc
pop
mov
mov
push
call
adc
je
cmp
xor
xor
or
leave
cmp
pushf
xchg
inc
jle
adc
clc
adc
sbb
mov
adc
lcall
inc
and
andl
xorb
add
adc
out
inc
sub
mov
jp
imul
icebp
and
mov
sub
adc
add
jle
sbb
or
jae
sbb
xor
mov
test
addb
jb
sti
sbb
xorl
jno
fcoms
or
mov
adc
pop
add
add
cmp
inc
fadds
out
dec
or
adc
cwtl
xchg
mov
sarb
mov
push
push
pop
mov
cmp
sbb
jg
and
pop
pop
jle
or
icebp
int
adc
sub
xchg
ss
loope
idivl
dec
sbbl
mov
mov
xor
add
dec
es
mov
mov
mov
stc
out
popf
call
das
inc
rcrl
adc
jbe
inc
xchg
sub
mov
xchg
int3
lea
cmp
inc
xor
lods
mov
mov
inc
add
mov
in
out
ret
jp
imul
mov
sarl
int3
ret
jmp
xchg
aad
nop
push
test
inc
mov
cmp
xor
enter
sub
push
mov
pop
incl
mov
xor
adc
pop
daa
rol
jnp
divb
out
jl
lea
scas
nop
push
dec
xchg
sahf
fists
lds
xchg
mov
mov
stos
and
inc
sbb
lds
fidivrs
inc
andl
fidivrs
sahf
push
inc
xchg
js
pop
test
fs
lods
lret
sub
mov
fwait
lods
std
cmp
sub
inc
jnp
shll
cmp
outsb
dec
es
jns
push
jecxz
stos
movsb
and
sbb
xor
xchg
adc
xor
outsl
mov
push
mov
jecxz
std
leave
int3
add
xor
mov
jb
lcall
mov
cmpsb
sarb
jbe
aas
imul
inc
loopne
sbb
adcb
mov
xor
bound
cmpsb
out
push
test
push
adc
lock
mov
jae
jb
jl
insb
jge
mov
push
repz
jae
or
mov
dec
lcall
stos
add
pop
mov
aad
das
fiadds
mov
sub
add
inc
mov
scas
cmp
jo
dec
jne
ret
dec
add
dec
xchg
addb
ds
fsubl
fists
outsb
leave
out
xor
and
sahf
xchg
adc
inc
stos
inc
adc
int
pushf
fsts
inc
cmc
cmpsl
in
movsl
push
clc
mov
mov
popf
or
shl
push
movsb
push
pop
and
push
rep
cwtl
fs
fsubp
enter
mov
sti
cmpsl
mov
mov
adc
imul
mov
cmp
cmp
andl
outsb
dec
std
mov
mov
mov
shrl
jl
sbb
roll
ret
or
mov
cmc
push
test
test
adc
rol
xchg
jl
dec
sub
lds
mov
scas
dec
sub
ficompl
in
cmpsl
fs
dec
stos
lods
jb
xor
mov
inc
jno
pusha
into
jmp
ret
sbb
mov
or
mov
hlt
int3
adc
pop
lds
sub
lret
fisubrs
xchg
jno
loop
bound
adc
scas
dec
xchg
pop
lock
or
xor
mov
shr
clc
fstpt
xor
fucom
clc
out
sbb
sti
test
sbb
adc
cmp
xchg
sub
push
sbb
push
scas
pop
adc
rclb
lock
xor
fisubrl
rcrl
std
sbb
xchg
mov
roll
mov
add
lcall
adc
add
loope
xor
xchg
jbe
mov
cwtl
std
jle,pt
xchg
push
pop
das
sbb
dec
push
jo
sub
or
jo
pop
pop
mov
xchg
in
sbb
jle
add
mov
adcl
ret
imul
mov
nop
das
rcrb
popa
dec
roll
jmp
add
mov
cmpsl
pusha
mov
mov
and
mov
sub
sahf
mov
into
nop
sub
push
pop
inc
mov
jae
push
push
lods
pop
xor
mov
cltd
sahf
jle
or
push
daa
inc
inc
jl
xchg
jmp
push
jmp
cmc
cmp
aad
mov
mov
add
cltd
push
xchg
fiadds
shlb
sbb
jbe
mov
sti
and
lret
xchg
shll
mov
arpl
lods
nop
jns
test
pop
outsl
fisttpll
inc
daa
dec
loope
jl
mov
jnp
fucomip
lea
mov
sbb
sbb
lcall
lahf
pop
jae
outsb
nop
stos
stc
sbb
mov
dec
loopne
add
push
xor
sub
out
inc
dec
out
push
shll
aad
pop
das
lock
nop
sbbb
aad
sbb
cmp
and
inc
cmp
mov
je
push
subl
mov
jl
cmc
xchg
cmc
test
mov
push
and
js
xor
inc
fimuls
xchg
push
mov
in
test
mov
jge
dec
les
inc
js
or
ljmp
sub
subl
icebp
mov
aam
pop
push
rol
mov
mov
dec
sub
sbb
int3
enter
loope
and
test
mov
fcomip
or
cld
push
es
insl
int3
imul
sbb
and
pop
movsb
loop
mov
dec
dec
lret
mov
jle
call
clc
pop
sub
add
sub
out
fdivp
repnz
cli
ret
roll
repz
adc
dec
bound
cmp
lcall
xor
sbb
js
popf
in
mov
adc
jl
add
mov
mov
add
and
xor
mov
mov
xchg
lahf
outsl
adc
xor
pop
cmpb
pop
cltd
sbbb
lods
mov
mov
push
fstpt
loope
arpl
mov
cmpsl
aad
imul
lcall
rorb
mov
or
mov
loopne
fdivs
inc
cld
inc
pop
mov
adc
mov
in
push
mov
jno
pop
ret
dec
mov
fwait
cmpsb
xchg
std
pop
decl
lea
pop
inc
cmp
jmp
sub
and
xchg
sub
rcrb
sbb
mov
mov
xchg
enter
add
and
cwtl
daa
fstps
xor
mov
popa
mov
mov
add
adc
jne
pop
push
push
leave
mov
or
or
or
adc
xchg
mov
sarb
call
cmp
lcall
cmp
ds
arpl
ficoms
movsl
adc
les
mov
lds
push
fists
xchg
jp
rol
mov
outsb
fimuls
sbb
sbb
add
or
divb
mov
mov
dec
aad
or
mov
jp
jno
in
ret
fistpll
xchg
nop
pushf
js
sub
add
sub
dec
clc
add
or
sbb
popa
popf
adc
ret
loope
cmp
out
xchg
cmp
gs
adc
imul
lret
pop
fs
mov
fucomi
and
jnp
rcll
sbb
mov
scas
cwtl
nop
packsswb
jns
decl
add
daa
scas
lea
iret
pop
jns
pop
cltd
xchg
inc
loopne
fsincos
mov
clc
cmp
xchg
vmovlps
push
dec
sub
dec
xor
jecxz
push
arpl
and
aas
fwait
xor
or
or
xchg
mov
clc
sub
push
mov
pop
push
mov
arpl
push
out
push
sbb
sub
mov
and
pop
stos
xchg
inc
xchg
pop
dec
jecxz
xor
cmp
xor
pop
js
add
shr
sti
fldl
inc
bound
rorl
ss
lret
les
add
lret
pop
jge
cmp
and
xchg
leave
loopne
lahf
dec
gs
and
popa
sub
sbb
cmp
xor
inc
in
sti
enter
sarb
add
daa
sarl
lret
jp
test
jbe
fcmovnb
adc
fstps
popf
dec
frstor
idivl
addps
cmpsb
mov
ret
sub
or
or
mov
fstpl
gs
and
pop
in
test
push
sub
repnz
loopne
sahf
pop
in
int3
notl
and
sarl
adc
inc
cmc
sub
mov
pop
push
mov
and
mov
mov
out
xchg
push
lret
sbb
mov
decb
lds
lahf
nop
sarb
mov
mov
lret
mov
ficomps
dec
aas
mov
xchg
addl
xorb
mov
sahf
hlt
mov
mov
aam
scas
mov
mov
loop
lret
out
xchg
xor
std
dec
dec
mov
and
mov
mov
rorl
mov
gs
push
xrelease
nop
lods
add
sub
jbe
rorb
cmp
repnz
push
lds
jecxz
mov
mov
sti
gs
inc
shrl
aas
xchg
sbb
sub
sbb
arpl
lods
scas
push
adc
jnp
xchg
mov
sub
test
inc
mul
inc
lods
pop
insb
fistpll
loop
fdivrs
sbb
outsb
pop
mov
ds
dec
divb
flds
sub
mov
and
inc
xor
adc
lahf
sub
mov
mov
sbb
imul
lds
incb
dec
inc
inc
jecxz
popa
inc
rcrl
fistpll
push
cmpsl
imul
leave
jne
ss
mov
mov
add
add
sar
fs
xor
mov
cltd
fstps
push
imul
out
test
cltd
fidivl
push
mov
shrb
jo
push
ljmp
ljmp
ds
dec
mov
fwait
popa
sub
movsb
not
adc
cwtl
push
es
xor
js
cli
jge
mov
movsb
aam
sbb
adc
adc
push
int
rcrl
repnz
push
dec
jge
xchg
push
std
push
push
out
xor
xchg
pushf
cmp
mov
push
lcall
cld
cli
hlt
pop
lea
fwait
mov
jle
mov
xor
popa
andb
int3
out
pop
adc
out
xchg
inc
dec
fisubl
and
rcrb
cmp
jnp
dec
arpl
sub
mov
cmpsl
dec
adc
jb
jae
cmp
loopne
inc
testl
arpl
xor
inc
xchg
inc
lods
jecxz
mov
icebp
and
outsb
outsb
add
cli
sti
cltd
and
push
mov
xor
call
add
repnz
imul
sub
idivb
jno
push
add
fbstp
lea
outsl
jo
dec
movsb
cwtl
or
mov
mov
mov
das
pop
cli
shrl
daa
or
inc
push
inc
xchg
push
dec
mov
les
bound
adc
pop
cld
cmp
loop
xchg
and
and
rorl
shll
jnp
xchg
mov
pop
into
test
imul
cwtl
call
mov
inc
add
lahf
cmpsl
jge
xor
test
jle
jnp
rorb
cwtl
fwait
jo
pushf
xor
jnp
mov
pop
or
fbstp
pop
push
out
mov
in
aas
call
test
sub
mov
xor
push
shl
cmpsb
shll
mov
jbe
cmp
cmp
push
mov
cmp
push
enter
jbe
cmp
mov
sub
push
mov
jle
lea
adc
push
adc
sub
popa
idiv
out
mov
rcll
ret
mov
call
sbb
lods
or
jo
xchg
push
int
push
lods
ret
or
dec
xchg
sub
push
icebp
in
inc
and
inc
bound
enter
and
add
sbb
mov
cmp
mov
popf
lea
push
lods
stos
xchg
test
xchg
clc
addr16
xor
sub
test
jle
loopne
rcll
or
mov
xchg
aas
mov
inc
add
mov
pusha
aaa
push
pop
lds
cmp
and
cmp
adc
in
push
pop
or
xlat
stc
pop
push
repz
inc
cltd
mov
lcall
xor
and
inc
sub
cltd
roll
test
inc
jns
xor
jbe
push
fnstsw
inc
mov
inc
adc
cmp
sbb
call
out
testb
jmp
movsb
rcr
int
jo
lods
icebp
adc
outsl
fcoms
adc
cmp
jp
mov
loop
leave
inc
arpl
fmul
addr16
push
aas
popa
add
orl
mov
inc
addr16
fwait
sar
scas
out
jl
out
scas
pop
jmp
sub
rcl
insl
arpl
and
testl
and
pop
add
cwtl
ds
aam
adc
out
jmp
inc
mov
loopne
sahf
ret
ficompl
div
xlat
jecxz
sub
sub
in
fistpll
nop
adc
inc
test
adc
lret
jne
push
nop
push
andb
inc
roll
mov
test
aam
pop
and
cmpsb
loope
adc
sbb
hlt
pop
ja
test
lods
insl
xorb
jne
out
orb
xchg
mov
sub
add
pop
mov
adc
add
and
fisttpll
xchg
inc
subb
jecxz
stc
cmpsl
jp
popa
pushf
iret
jno
fwait
jns
lea
cld
lods
xchg
into
cld
push
test
xchg
xchg
inc
sub
or
pop
lods
dec
lods
int
out
sub
addr16
inc
push
jmp
xchg
cmp
mov
and
test
cmp
daa
das
sbb
movsb
mov
dec
mov
fldenv
sbb
adc
adc
cmp
mov
mov
cwtl
iretw
fcmove
sub
cmp
push
mov
lret
inc
loopne
icebp
xor
popl
mov
cmp
inc
mov
and
sbbl
lods
in
or
mov
dec
js
int3
mov
add
and
je
push
ds
cli
test
sti
imul
lret
add
cmp
adc
idivl
sbb
mov
decb
mov
jg
gs
fcmovnu
or
add
xchg
jne
xchg
std
loopne
lcall
out
add
insl
pop
or
mov
cmp
and
lcall
ja
mov
or
or
popa
mov
or
test
push
push
add
lret
imul
pop
aas
shlb
sub
js
bound
icebp
mov
outsl
xchg
jo
or
subl
adc
call
sub
xchg
jbe
jecxz
pop
xor
fcomps
xor
cmc
xchg
imul
jl
inc
insb
leave
and
pop
push
stos
arpl
lret
cltd
mov
cmp
or
adc
das
or
divl
dec
sahf
enter
push
jb
nop
rorb
sub
shl
fwait
jne
jp
bound
jb
mov
pop
hlt
mov
jns
loope
test
scas
into
pushf
inc
pop
test
lret
pop
jne
lahf
push
loop
test
cs
fs
mov
movsl
std
outsl
xchg
imul
inc
into
xor
jnp
sub
jae
pushf
pop
jecxz
jg
add
stos
mov
fildll
or
sbb
pop
inc
mov
xor
cmpsb
mov
xor
jmp
in
lret
scas
mov
mov
ja
addl
add
sub
and
xchg
insb
repnz
stc
test
rcll
stos
pop
je
pop
push
test
inc
lcall
adc
daa
push
jno
or
aam
sbb
add
and
xor
dec
push
jnp
pop
popa
inc
es
jl
pop
mov
test
loopne
mov
add
lds
mov
cld
jne
into
das
push
in
inc
adc
or
sbb
dec
daa
das
mov
mul
jecxz
imul
sbb
sbb
jne
and
das
ljmp
insb
dec
jmp
lahf
sub
nop
lds
arpl
repnz
mov
and
lcall
js
sahf
dec
dec
popa
ds
pop
jns
fbstp
fldt
aad
jmp
iret
out
fwait
inc
inc
jb
das
pop
repz
jge
cmp
fbstp
cmpsb
movsl
jmp
push
cmp
cmc
scas
mov
xchg
inc
stos
push
jmp
icebp
addl
mov
mov
insl
sahf
mulb
mov
cmp
jno
movsl
mov
ja
iret
inc
jnp
adc
xor
jae
mov
in
cmp
or
cmpsl
pop
cmp
sbb
sti
dec
fcoms
ds
mov
into
loop
jl
addr16
daa
ja
fisubrl
fistpll
xchg
jp
pop
xchg
inc
push
xchg
sbb
mov
aad
sbb
frstpm(287
push
idivl
mov
outsl
mov
repz
scas
adc
flds
or
mov
pop
gs
mov
push
loop
xor
mov
and
cmp
xchg
and
xchg
out
xchg
daa
xor
sbb
xchg
adc
push
iret
iret
cmp
xchg
push
adc
jb
mov
xchg
cltd
lcall
test
jo
jg
enter
aad
test
mov
cli
daa
das
ljmp
aaa
cmp
pushf
stc
lods
adc
push
insl
out
fsubrl
push
pop
mov
push
nop
lods
inc
imul
pop
filds
mov
pop
shrl
sti
and
adc
jp
in
cmp
cmpl
mov
iret
rcl
jae
push
cltd
or
popa
in
adc
cmp
jmp
lds
ljmp
in
xchg
test
je
outsb
fists
xchg
lcall
cmp
and
icebp
or
pop
jle
xor
test
mov
push
pop
pop
sbb
inc
mov
mov
mov
into
fdiv
mov
push
ljmp
mov
repz
imul
xchg
cmp
xchg
pop
add
sub
mov
sbb
sub
pushf
aaa
out
xchg
or
lret
dec
mov
jmp
mov
push
xchg
lods
ds
sbb
add
cmp
jne
ja
and
scas
clc
or
xchg
dec
cli
js
aaa
inc
inc
out
adc
or
dec
loop
or
add
pushf
dec
jecxz
add
sahf
xchg
or
popf
loopne
mov
pusha
dec
mov
pusha
jecxz,pn
mov
addr16
cmp
fildl
int
push
push
xlat
mov
add
pop
inc
sarb
dec
mov
enter
repz
mov
in
dec
sbb
pop
push
or
cwtl
daa
ja
dec
stos
jl
adc
xor
lret
cld
stc
out
cmpsl
cwtl
stos
addr16
mov
add
cmovl
pusha
push
cmpsb
and
sbb
rorl
jp
sbb
add
lods
sbb
xchg
xchg
mov
and
jecxz
push
cmp
ficoml
pop
mov
fs
push
add
mov
or
int
xor
ret
jbe
out
push
scas
mov
ja
addr16
xchg
sbbl
les
cmp
xchg
jl
and
lea
xor
push
dec
xchg
out
loop
xlat
jle
inc
sub
or
fdivl
cltd
lods
ljmp
pop
out
aam
inc
ja
popa
in
push
cmc
mov
lods
aaa
fisttpll
pushf
testb
cmp
and
js
mov
add
and
movsl
mov
fidivrs
insb
nop
add
pop
inc
dec
iret
sub
lods
iret
in
fs
xchg
add
pop
scas
es
test
add
pop
in
cmp
mov
in
xchg
jl
out
mov
or
movsb
std
jge
pop
in
inc
inc
xor
gs
in
sub
scas
jbe
mov
or
adc
push
mov
mov
icebp
not
sti
insb
jmp
cli
mov
es
sbb
cmc
jb
fabs
lcall
mov
cld
pop
xchg
jo
aaa
out
mov
inc
jb
jns
loop
or
fcmovnbe
icebp
dec
lea
adc
pop
push
xchg
cmc
scas
sbbb
pop
push
xchg
adc
jg
int3
mov
jmp
mov
mov
mov
mov
and
int
cmp
outsl
in
jge
insb
aam
inc
xchg
pop
movsb
sub
scas
orb
push
andl
mov
clc
push
daa
ret
rcrl
inc
mov
shlb
add
std
stos
xor
outsl
stos
shlb
addr16
leave
nop
es
ds
movsb
js
js
sbb
in
lods
je
sbb
mov
cli
popa
pop
shlb
and
es
or
fimuls
aas
xlat
lods
cli
lret
and
gs
xchg
mov
in
sbb
movsl
shr
icebp
sbb
add
repnz
stc
loope
jmp
sbb
sub
es
scas
mov
and
psubusb
insl
sbb
lods
sbb
add
loop
pop
xorl
jp
sub
fsubr
mov
pop
outsl
push
cli
add
mov
insb
inc
add
inc
add
loope
xor
ficomps
popa
or
inc
inc
mov
xchg
in
pushf
mov
inc
test
or
enter
jp
les
mov
xchg
mov
rep
outsb
mov
loop
aad
inc
inc
js
push
lret
popf
mov
cmp
and
mov
mov
repnz
mov
loope
movsl
mov
lcall
xchg
cs
push
mov
sub
aaa
fistps
ror
pop
pusha
add
inc
cltd
lret
lock
aaa
xchg
leave
icebp
xor
cmp
dec
jge
daa
int3
fcomi
sub
cmp
lahf
fcoms
stos
or
out
pop
jno
sar
outsb
scas
jecxz
or
ss
mov
pop
stc
imul
out
jge
and
sbb
imul
pop
jmp
mov
adc
pop
adc
gs
inc
mov
cmp
dec
clc
lods
fiadds
add
mov
cltd
lods
imul
jmp
pop
sti
fcoms
fcoml
mov
std
add
and
pop
out
out
adc
cmp
ds
mov
frstor
outsl
cmpl
jb
jp
pop
in
mov
dec
mov
std
popa
cmpb
dec
add
jle
jmp
mov
insb
push
stos
cmp
sbb
add
mov
jle
lds
inc
icebp
cmp
popf
cmp
or
jns
push
rolb
cmpsl
xor
rcr
and
dec
call
lcall
mov
lcall
jne
pop
cs
jns
lock
inc
pop
mov
jns
out
loopne
mov
es
inc
ret
fdivr
mov
adc
clc
mov
xchg
mov
push
mov
addr16
pushl
fcomps
push
sbb
adc
addr16
inc
cmp
mov
sub
mov
inc
outsl
adc
test
pop
ja
adc
test
cmc
xor
cmp
dec
lcall
xchg
arpl
xchg
hlt
pop
test
add
fildl
cmpsl
xchg
push
add
cmp
xor
pop
mov
lock
pop
popa
shrl
fs
sbb
test
or
test
xlat
push
insb
sub
push
pop
aaa
push
jg
pop
or
gs
stc
std
add
in
ja
cmp
push
cmp
testl
aas
fnstenv
data16
mov
addr16
movsl
cmp
fistps
test
mov
daa
push
jp
and
cmc
lock
sub
out
xor
xor
mov
and
or
mov
jecxz
sub
jo
xor
xor
test
aas
aas
xor
sbb
mov
mov
scas
cmp
dec
ret
push
aam
mov
mov
add
bound
push
pop
dec
adc
lret
push
lods
add
fs
cmpsb
pop
and
or
sbb
sub
mov
mov
add
data16
daa
jno
sbb
and
popa
cmp
push
cld
xor
roll
sti
fisubs
imulb
shr
es
xlat
inc
mov
ret
or
pop
pop
mov
mov
lret
in
dec
std
mov
out
mov
int
adc
adc
les
gs
clc
jp
dec
test
xchg
pop
jb
push
push
jbe
push
dec
mov
outsb
ss
cmp
dec
jecxz
push
ficompl
and
adc
repz
scas
xor
dec
ljmp
stc
shl
and
xchg
xorb
mov
mov
fs
lahf
pop
jg
dec
dec
lea
jnp
add
and
or
jmp
add
repnz
into
das
shlb
pop
ficompl
ret
cmpsl
sahf
or
mov
dec
dec
ds
bound
xchg
push
cmpsl
jae
iret
push
popa
insb
jle
mov
testb
sbb
mov
dec
sbb
mov
icebp
fcoml
sahf
stos
lods
jecxz
bound
in
push
lret
adcl
loope
rcll
add
xor
mov
ficomps
push
xchg
aam
push
xlat
mov
js
mov
lea
fwait
pop
add
sub
pushf
jge
loopne
xlat
mov
negb
mov
dec
int3
mov
fwait
aaa
aad
jae
pop
pushf
movsb
dec
shrb
fwait
xchg
fistpll
jecxz
clc
sbb
and
adc
cmp
ja
push
insb
adc
loope
add
lods
loope
cmp
cmp
arpl
aad
xor
or
pop
aam
imul
jl
imul
mov
mov
dec
repz
out
sbb
push
xor
inc
pop
xor
xorb
fiadds
jmp
scas
pop
cld
xchg
into
pop
xor
testl
fldt
mov
adc
cmp
adc
gs
pop
out
lods
mov
inc
mov
push
pop
jae
xchg
hlt
inc
es
dec
xor
aad
cwtl
aam
fdivr
fcoml
or
xchg
push
mov
movsl
pop
imul
cmc
hlt
movsb
imul
mov
ror
pop
shlb
add
mov
arpl
cwtl
je
pop
cld
in
jne
mulb
shlb
cmpl
lahf
xchg
inc
pop
xchg
pop
fsubs
or
int3
fwait
mov
and
dec
mov
push
int3
cmp
pop
movsb
shl
add
fistpl
cmp
fldt
in
or
jle
mov
movsb
ss
imulb
dec
das
inc
sbb
and
and
icebp
fadds
aam
sbb
xlat
rcll
xchg
sbb
aad
testl
scas
fldt
outsl
mov
add
pop
sub
xchg
lea
or
pop
dec
mov
mov
faddl
inc
push
pop
hlt
adcl
dec
jae
in
pop
fcoms
xchg
or
xchg
mov
lret
test
mov
outsb
sub
or
ror
incl
dec
xor
icebp
xchg
test
sub
xchg
shlb
push
cmp
or
mov
xor
mov
xchg
add
pusha
jp
adc
inc
jge
nop
xchg
test
out
stos
test
adc
mov
inc
and
and
into
ljmp
iret
push
outsl
sar
adc
cli
les
in
mov
xchg
pop
cmc
or
loop
mov
xchg
jne
jae
loopne
sbb
lds
mov
cmp
nop
enter
sbb
dec
das
icebp
out
jnp
ret
sbb
push
adc
sub
mov
push
loope
add
mov
aaa
mov
jne
jmp
nop
cmc
mov
dec
shlb
lahf
cld
insb
cmc
adc
movsb
xchg
mov
dec
in
and
xchg
cltd
mov
pop
std
jns
movsl
cmp
mov
aam
dec
xchg
add
adc
xchg
mov
dec
xchg
faddp
jnp
movsb
loopne
adc
sarl
dec
push
inc
test
popa
test
popa
int
push
cld
cmp
inc
dec
cmp
mov
sub
or
fdivl
std
imul
mov
pop
mov
movsb
and
jnp
mov
cmpsb
mov
push
shrb
cvtps2pd
xchg
pop
loopne
pop
mov
testl
fs
inc
mov
mov
jbe
adcb
sbb
jns
add
rcrl
mov
aas
addl
out
inc
push
mov
repnz
scas
inc
lcall
xchg
push
and
mul
gs
adc
movsb
in
mov
mov
mov
mov
sbb
mov
xor
int3
inc
push
sub
inc
xchg
sbb
mov
loopne
add
gs
lods
sub
jge
pop
es
and
sub
addr16
inc
lods
aad
or
mov
ficompl
push
les
push
push
les
pushf
ljmpw
aam
cmpsb
mov
sarl
push
sbb
and
lcall
out
push
pusha
dec
test
mov
shlb
gs
xchg
test
pop
dec
test
mov
sub
lds
pop
and
ffreep
pop
push
mov
adc
add
inc
and
test
ljmp
xchg
xchg
sub
mov
xchg
std
iret
aaa
adc
jbe
ret
pop
mov
stos
dec
sub
pop
adc
add
psrlw
mov
mov
stos
mov
pop
data16
rclb
add
cmpsb
std
nop
pop
mov
pop
sbb
fisubrs
pop
mov
push
xchg
adc
fcomp
or
xor
add
xchg
leave
rcll
push
and
xor
stc
jae
fs
cli
adc
cmp
vpunpcklqdq
push
aam
cmp
xlat
in
aas
dec
mov
inc
les
jp
pop
popa
rorb
sahf
and
addr16
js
sub
in
pop
test
icebp
sarl
popf
inc
mov
shll
stc
out
in
cltd
or
lods
pop
ds
out
push
cmpsb
sub
cmp
pop
jno
bound
mov
jb
and
repz
sub
dec
cmpsb
xchg
sub
mov
sarl
push
mov
and
sbbl
rcl
dec
lret
jp
test
adc
xor
push
xor
pusha
mov
cmp
xchg
push
sub
mov
cmp
jge
pushf
scas
and
xchg
sub
out
inc
in
outsl
add
ja
outsb
push
subl
push
inc
pusha
lock
adc
cs
subl
xor
daa
hlt
clc
repnz
cmp
pop
cs
jne
dec
xchg
push
test
push
sub
jno
scas
cld
mov
add
mov
iret
int
jge
adc
jmp
shlb
imul
jo
mov
movsl
adc
divb
push
dec
and
push
push
jg
mov
jne
test
pop
and
pop
adc
cwtl
pop
int3
adc
inc
pop
sub
dec
dec
subb
dec
leave
arpl
and
inc
push
jecxz
adc
lahf
shrl
pop
cli
xchg
test
or
shll
jp
xchg
mov
test
movsb
mov
adc
xchg
lock
les
jbe
pop
cld
mov
jecxz
dec
pushf
int
jle
or
or
sub
xlat
incl
push
xchg
scas
xchg
pushf
iret
inc
adc
jno
mov
icebp
pop
dec
sub
fbstp
mov
mov
xchg
mov
inc
sub
fnstenv
ret
cltd
inc
lods
mov
rclb
adc
jo
mov
mov
dec
test
push
mov
cmpsb
add
add
xor
sub
or
lods
mov
std
xor
mov
js
xlat
adc
adc
inc
xchg
aas
adc
fdiv
sbbl
fildl
rcl
dec
test
inc
xchg
pusha
inc
movsb
icebp
test
cmp
shll
dec
lahf
daa
push
lods
popf
fcoml
ss
jge
std
xchg
rcr
clc
fmulp
mov
icebp
sub
lock
mov
les
pushf
loop
jp
fmul
mov
clc
aam
adc
push
sub
sub
mov
lret
loopne
sbb
mov
fcomp
stos
dec
ja
jg
add
and
leave
mov
hlt
je
test
scas
hlt
gs
cmpsl
mov
xchg
push
mov
pop
push
sbb
push
add
movups
or
popf
aas
int
push
mov
cmp
jb
jbe
xchg
and
call
sub
out
clc
cld
cmpsb
inc
les
jnp
cld
popa
mov
mov
adc
ss
pop
outsl
std
and
mov
mov
sbbl
cltd
push
fmuls
pop
mov
inc
hlt
jle
outsl
dec
or
or
out
push
out
mov
dec
pusha
sub
cwtl
mov
sub
test
cmp
fs
pop
cs
xchg
mov
cmpsl
inc
push
scas
or
cmpsl
popa
into
cmp
xchg
add
mov
test
andb
mov
dec
dec
out
cltd
jb
outsb
pop
add
aad
add
cmp
fidivs
adc
cld
loop
inc
das
dec
xchg
xchg
fwait
lret
cmp
mov
or
lahf
lahf
dec
loop
fisttps
sahf
out
mov
inc
cmpl
popf
fstl
gs
or
add
xchg
sub
call
aas
les
dec
fmull
mov
aam
pop
mov
jl
sub
push
jle
adcl
inc
push
jne
fcoms
dec
ret
lahf
xlat
mov
movsb
inc
test
jb
sbb
iret
ficoms
jl
jo
mov
jb
pop
sub
orb
stos
je
mov
enter
mov
and
dec
jbe
mov
jl
clc
test
add
pop
mov
pop
outsb
add
mov
inc
in
push
jns
cmp
xor
js
cmpb
jnp
stos
mov
pop
add
ja
test
inc
icebp
int3
inc
push
movsb
fwait
jo
or
inc
ror
sub
inc
xchg
cltd
xchg
dec
outsb
sub
push
jg
adc
roll
fstl
das
loope
mov
xchg
fucomi
arpl
pop
orps
test
mov
mov
xchg
add
fisttps
fildll
movsb
or
or
cmp
xor
neg
inc
stos
out
or
loop
mov
cwtl
xor
cltd
jne
cmp
stos
pop
push
mov
popf
jno
xlat
adc
repz
loopne
notb
movsl
mov
xchg
jle
cmpsl
add
aam
pop
mov
and
icebp
daa
int
stc
in
test
shlb
cmp
xchg
mov
stc
movsb
es
call
outsl
rclb
scas
out
push
mov
xor
jbe
test
pop
cmp
lods
cs
mov
cmp
add
sbb
xchg
xchg
sub
dec
and
jp
cmp
mov
repnz
sbb
pop
pusha
lods
adc
dec
add
fcompl
mov
push
push
jo
out
inc
mov
xor
leave
dec
mov
inc
pop
mov
jle
mov
incb
sbb
ja
cwtl
push
popa
xchg
inc
dec
stos
push
shll
xor
ljmp
jl
jge
in
mov
jne
ja
jb
sub
or
xchg
pop
sahf
test
jp
stos
add
push
lahf
test
xchg
mov
sub
xchg
repnz
mov
bnd
xchg
cmp
or
inc
cmpsb
fstpl
mov
int
es
adc
call
and
inc
or
insb
xor
dec
pop
jo
sbb
jp
movsb
stos
cld
lret
pop
sar
sbb
mov
ljmp
arpl
add
jp
ljmp
pop
repz
outsl
stc
mov
mov
mov
xchg
loop
push
xor
jbe
inc
dec
sub
adc
movsl
out
adc
fwait
jne
mov
push
adc
inc
cmp
mov
dec
movsl
ficompl
rcrb
fstpl
mov
ss
lea
xchg
fdivl
in
cmp
push
lret
scas
fidivrl
cmpsl
xlat
jns
mov
adc
lret
jmp
pop
mov
and
jno
sbbl
push
stos
in
hlt
in
and
mov
ror
dec
lods
pop
clc
jmp
fs
jle
fstps
dec
or
jbe
les
gs
sub
adc
dec
in
ds
stos
or
mov
jmp
out
inc
pop
or
pop
enter
xor
sub
cmp
mov
cmp
insb
push
add
lahf
adc
lret
dec
stc
push
popf
lea
push
pop
outsb
or
adc
movsb
inc
dec
leave
cwtl
jmp
gs
stos
or
xorl
lds
pop
fidivs
mov
sbb
add
dec
push
lock
or
call
rcl
jo
test
push
xor
pop
fnstsw
jmp
adc
popf
ret
xchg
rorl
mov
pop
sbb
dec
fidivl
int
push
xor
popf
ret
fs
fnstsw
cltd
cmp
and
lea
add
pop
clc
mov
pop
enter
inc
out
aas
push
fwait
jbe
xor
inc
push
dec
rorl
sahf
or
add
add
mov
or
jns
scas
mov
push
jnp
sbb
sbb
push
andb
cmp
idivb
pushf
push
out
sub
and
cmpsl
sbbb
mov
push
pushf
das
pop
add
xor
sub
cmpb
cwtl
fmull
ret
sbb
arpl
lahf
mov
dec
insl
adc
and
cli
mov
in
ljmp
sahf
mov
jns
jl
cld
add
adcb
sti
or
mov
insb
sahf
xor
movsl
insb
das
inc
or
or
cmp
das
pop
add
popf
push
cmp
jbe
mov
adc
popa
out
pop
aaa
bound
jb
stos
int3
mov
add
jle
xchg
xchg
scas
push
lea
xor
pop
insb
out
sarl
push
pop
sbb
jb
lods
mov
movsb
sbb
add
add
movsb
shl
xor
lret
mov
mov
dec
cli
and
lods
adc
test
cmc
cmp
cmp
jp
repnz
fsubrl
mov
ret
push
and
call
xor
stos
or
mov
dec
xor
lret
adc
scas
test
out
or
cmp
cmpb
add
leave
cltd
mov
lds
and
dec
xlat
adc
mov
hlt
popa
adc
mov
mov
add
sub
cmp
in
pop
gs
ljmp
xor
nop
or
into
std
dec
pop
repnz
lcall
jno
inc
add
dec
insb
xchg
and
test
push
aad
mov
mov
hlt
cld
call
mov
cwtl
fwait
mov
das
push
fwait
mov
jmp
lahf
or
xchg
jnp
adc
cmp
and
cmpsb
out
loope
and
cmp
lret
dec
mov
jne
mov
daa
std
sbb
cwtl
lea
daa
subb
lahf
adc
push
fwait
jo
mov
cmp
mov
and
gs
inc
cmpsl
jp
sub
mov
xchg
dec
pop
mov
je
xchg
mov
and
aam
inc
mov
lret
lret
xchg
mov
jb
in
add
cmp
fwait
and
xchg
jp
fidivs
dec
jno
mov
pusha
inc
inc
test
or
es
pop
aam
or
sbb
adc
mov
xchg
repnz
sbb
adc
xor
sbb
or
ss
pop
or
sub
jle
dec
mov
lock
inc
loop
sub
and
cli
insl
std
daa
dec
sub
sbb
sbb
adc
inc
in
mov
rcl
mov
inc
sbb
das
mov
pop
cli
sti
mov
fisubrl
in
cli
sub
cltd
repnz
or
jge
rolb
aas
dec
mov
or
adc
sbb
sbb
repnz
stc
mull
inc
mov
sub
int
shlb
jbe
dec
inc
mov
lods
lea
xchg
dec
out
ljmp
jbe
inc
je
push
mov
sub
push
lock
imul
test
int3
mov
divl
icebp
fs
push
pusha
xchg
int3
jae
sub
cmp
cmp
inc
mov
lret
mov
jbe
aam
add
loope
iret
imul
xor
rcrl
sbb
xchg
sbb
mov
dec
jle
xor
out
add
aad
lret
adc
sbb
jbe
mov
popa
lock
clc
mov
rclb
sbb
test
mov
movsl
cwtl
xor
sub
neg
dec
add
or
mov
jnp
xchg
es
enter
mov
cs
hlt
data16
xchg
lret
lods
rcl
ret
addr16
xlat
add
xlat
xchg
sbb
xchg
pushf
movsb
stc
into
inc
add
repnz
mov
inc
es
sbb
pop
lods
mov
scas
cmp
dec
mov
mov
adc
xchg
lods
mov
xchg
xchg
push
cmp
ret
cmp
popa
push
push
sub
dec
es
inc
pop
fisubs
sub
lods
mov
sbb
scas
push
shr
mov
cmp
add
and
adc
sbb
repz
lahf
pop
pop
test
xor
sbb
jecxz
cld
and
sub
cmp
push
xchg
mov
outsl
int
sbb
jge
jb
push
stos
and
jnp
sti
mov
add
or
repz
cmp
push
rorl
push
imulb
lods
pop
lahf
inc
xor
cwtl
ret
sub
scas
mov
jmp
popf
pop
cmp
hlt
dec
cli
dec
pushf
add
stos
jge
into
and
mov
add
mov
outsl
add
scas
jp
or
jp
sarb
mov
outsb
out
mov
adc
in
insb
dec
xorl
enter
sub
enter
jecxz
sar
inc
xchg
loopne
ja
rolb
jle
push
dec
pushf
cmp
mov
je
icebp
or
sarb
jmp
xor
dec
or
adc
sbb
or
cmp
xor
jmp
addb
cld
cli
pop
lret
mov
iret
repz
cmpsb
mov
add
ret
push
fsubrl
xchg
ja
cmp
mov
aaa
sbb
xchg
das
xchg
mov
adc
inc
xor
jmp
fistps
adc
stos
orb
xchg
xchg
xchg
sahf
insb
push
or
lock
cmp
add
jae
jne
mov
inc
testl
scas
xor
pop
mov
cmpsb
inc
sahf
jecxz
popa
pusha
xor
aas
ljmp
pusha
xchg
rolb
in
or
pop
adc
jns
ror
xchg
jle
loope
mov
add
sbb
pop
jl
mov
mov
out
push
lock
ss
test
jp
fisubrl
adc
dec
hlt
test
cld
out
ret
ljmp
test
mov
xchg
ss
ret
add
pop
xchg
iret
pop
les
xor
xor
jge
sbb
daa
lret
shll
mov
mov
cli
aas
sbb
mov
inc
lret
adc
or
lahf
pop
ret
xchg
dec
push
xor
push
stos
icebp
add
or
lcall
out
orb
popf
ss
adc
xchg
psadbw
stos
dec
sub
mov
push
push
test
push
insb
or
jne
imul
mov
sub
pop
adc
pusha
outsb
pop
mov
les
cmc
pop
test
lret
fimull
push
sbb
xlat
das
in
mov
mov
lods
sub
and
dec
mov
sub
lods
pop
orl
jge
xchg
rol
inc
gs
jo
ficomps
or
push
pop
jl
sbb
lods
push
shr
leave
inc
xchg
or
sbb
mov
and
repz
push
push
push
cmpsl
pop
out
fstpt
inc
nop
mov
data16
ss
sub
adc
pop
test
shrb
jecxz
sub
ficoms
sbb
dec
stos
insl
retw
inc
mov
and
pmaxub
mov
pusha
and
add
inc
cld
jbe
sub
cmp
mov
cmc
cmpsl
lds
repz
stos
and
sub
sbb
mov
xchg
cmp
adc
loope
les
mov
xor
xchg
or
cmp
xchg
fists
push
push
xchg
fs
mov
ds
fcmovne
enter
pop
arpl
sub
lcall
xchg
aas
sub
mov
cmp
or
jnp
dec
dec
inc
out
adc
loop
das
sub
jne
sbbb
enter
xchg
jno
lock
inc
xlat
adc
sbb
stc
das
fildll
sub
ret
pop
sbb
cwtl
and
out
jae
pop
rcrb
in
mov
mov
jo
gs
push
jne
cli
sbb
push
out
inc
sub
jmp
shrb
mov
sti
jae
mov
iret
pop
popa
mov
repz
shlb
out
jl
inc
or
andl
movsl
sub
and
rclb
jecxz
push
orl
cmp
mov
push
dec
push
push
or
jne
leave
daa
dec
mov
fs
sbb
mov
dec
jno
ljmp
mull
in
sbb
pop
push
jns
jge
xchg
jns
mov
fmull
sbb
adc
adc
jp
cmpsb
aas
fbstp
cltd
test
inc
adc
idivb
dec
jae
sbb
outsb
aad
inc
push
and
add
sbb
inc
fldcw
sbb
in
imul
jb
push
out
bound
loope
mov
sbb
pop
jne
push
arpl
stos
ljmp
xor
adc
fldenv
scas
xlat
inc
or
in
hlt
test
cmp
cmp
pop
mov
adc
hlt
outsl
leave
subb
shlb
xchg
xchg
xchg
dec
sti
dec
movsb
pop
add
js
shlb
push
popa
out
loopne
xchg
pop
mov
mov
mov
int
test
pop
sub
popf
xchg
pusha
je
inc
jg
cmc
sbb
sbb
test
mov
sbb
cmp
jns
in
insl
inc
repnz
cmp
pop
dec
inc
sbb
push
adc
add
sti
imul
fnstsw
or
std
sbb
lods
jge
movsb
mov
mov
repnz
fwait
jnp
pxor
inc
push
jle
jae
stc
andl
fldenv
inc
test
jb
inc
adcb
movsb
xchg
repnz
jmp
mov
dec
arpl
sub
mov
pop
or
or
cmp
xchg
aam
stos
int
punpckhbw
jmp
dec
and
imul
ss
in
xchg
dec
sub
stos
jle
cmpsb
popa
call
je
push
cmpsb
xor
idivb
mov
fsubrs
lods
and
imul
pop
jnp
ja
dec
xchg
out
add
or
mov
das
imul
mov
cltd
sbb
or
scas
and
repz
lahf
pop
dec
mov
and
sub
sub
mov
cmpsl
add
xchg
aaa
pop
mov
pop
adc
cld
out
pop
bound
inc
add
es
pop
test
in
xchg
ret
or
je
fidivs
or
sbb
js
orb
mov
roll
fnstsw
insl
mov
ret
push
xchg
sahf
sub
inc
lods
outsb
xor
fsubl
fisubrl
sbb
add
rolb
fs
and
add
adc
fistpl
rorl
jo
and
lcall
mov
add
mov
aaa
daa
pop
push
mov
add
loop
jns
lret
adc
mov
xchg
movsl
mov
test
push
and
push
or
addr16
sub
enter
mov
bound
imul
out
push
fs
cmpsw
test
jae
or
or
out
adc
mov
jmp
and
dec
push
mov
adc
dec
mov
mov
fs
test
repnz
test
inc
cmpsl
iret
cmp
movsb
mov
push
xchg
leave
mov
sbb
cmpsb
lods
or
mov
jnp
add
insb
addl
push
jp
pop
aas
int
sbb
jmp
jb
cmp
push
jg
push
xchg
outsb
push
adc
test
loopne
mov
addb
std
or
push
mov
gs
leave
neg
and
push
xor
cli
fs
les
adc
or
mov
stos
jo
xlat
call
loop
sbb
mov
lahf
notb
cmpsl
push
hlt
inc
sub
in
loope
xchg
fyl2xp1
or
out
push
cltd
xor
mov
and
or
aad
scas
push
ret
dec
mov
cmp
pop
sbb
push
mov
into
cli
pop
adc
jbe
lea
jecxz
lahf
rolb
xchg
lret
test
shrb
cmp
imul
mov
jge
mov
push
lahf
push
jae
lcall
test
sub
lret
test
push
xlat
subl
insb
pop
adcl
xor
testl
nop
jne
sub
movsl
sub
add
inc
cmp
mov
sub
adc
int
sahf
mov
movsl
or
xchg
test
add
jb
loopne
mov
pop
stc
lock
lret
mov
push
inc
mov
dec
stos
xchg
lods
dec
jns
push
dec
jo
cmpl
movq
push
pop
lods
mov
push
mov
xor
mov
je
sti
es
cld
lock
pop
xor
movsl
xchg
jl
xor
adc
pushf
sub
movsb
insl
jne
sarb
mov
jg
cmpsb
int3
aas
imul
imul
jo
sbbl
test
pop
scas
cmp
out
sub
dec
jbe
cwtl
push
adc
dec
lock
xchg
mov
fistpll
dec
mov
or
xchg
cmpsl
xchg
push
dec
in
lret
jg
mov
out
sbb
jp
in
jmp
or
stos
popa
in
int
rcr
xchg
xor
les
jb
lods
inc
orb
sub
pop
adc
xchg
repnz
int3
insl
sub
adc
lods
ret
scas
dec
sahf
and
jno
out
xor
xchg
lcall
pop
fistl
mov
test
push
insb
ds
inc
sahf
pop
fdiv
adc
fs
jnp
mov
inc
cmp
mov
push
aad
ljmp
leave
inc
lahf
aaa
scas
es
push
fs
mov
iret
in
cmp
jbe
adc
cmp
sbb
stos
mov
mov
idivl
loope
jno,pt
mov
popa
jbe
dec
and
pusha
inc
in
and
mov
jg
adc
movsl
sub
repnz
into
adc
inc
pop
mov
dec
imul
push
nop
jl
sub
insb
inc
outsb
hlt
iret
inc
cmp
popf
push
jecxz
loop
adc
dec
pop
mov
popf
mov
int3
add
jbe
pop
push
add
add
loopne
cmp
insb
stc
jge
mov
xor
cmp
dec
pusha
cmpsb
mov
mov
cmp
push
adc
iret
and
push
jns
cltd
rolb
cmpsl
repz
aas
mov
mov
loopne
mov
pop
call
push
xor
test
cs
mov
adc
inc
push
pop
pop
test
mov
ror
jl
cmp
mov
sub
cmp
sub
mov
sahf
ficoms
push
push
xchg
clc
xlat
mov
dec
mov
mov
push
imul
cs
hlt
pop
lcall
and
or
inc
jg
xor
int
enter
mov
xor
jle
ret
push
mov
sub
stos
jae
stc
xchg
inc
and
xchg
and
gs
inc
push
mov
mov
mov
in
mov
mov
xor
cmp
mov
add
xchg
jl
out
dec
or
dec
jnp
std
push
adc
push
and
shll
jbe
cmp
fs
insb
test
push
lahf
insb
scas
out
lret
jbe
cltd
pop
sbb
mov
push
or
push
iret
cmpsl
nop
testb
fwait
arpl
or
sub
mov
dec
xchg
in
xor
fs
xchg
fildl
fwait
gs
mov
in
movsb
js
test
adc
hlt
daa
clc
mov
push
ds
mov
daa
push
jmp
in
mov
mov
add
mov
je
mov
ret
or
sbb
cli
inc
andl
or
imul
jns
xor
aaa
repnz
mov
popa
sub
dec
ss
repnz
lods
js
in
sub
int
sub
cmp
sub
add
mov
fists
cmp
out
add
lret
repz
pop
pusha
and
popa
test
aas
inc
sbb
out
adc
push
inc
mov
inc
mov
pop
data16
je
lock
mov
xor
scas
dec
adc
lods
xor
lret
mov
or
fadd
dec
xor
imul
sahf
ds
rcll
insb
shll
xchg
sbb
in
sbbb
lret
fwait
sub
imul
filds
popf
aam
xor
cmp
mov
stc
out
sbb
inc
cmpsb
inc
jnp
mov
xor
sbb
sub
adcb
mov
aam
movsl
xchg
jle
or
adc
test
les
stos
pop
jmp
ret
cmp
mov
imul
sub
jle
fildl
or
xchg
sub
inc
lods
mov
cmp
add
mov
lods
and
jmp
xor
mov
test
jp
sub
pop
flds
cmp
jge
dec
pushf
les
mov
mov
sub
ret
arpl
xchg
mov
test
in
jp
movl
and
lock
xchg
ret
xchg
mov
add
cmp
test
fcomi
aas
es
lahf
adc
aas
mov
mov
das
shl
push
pop
push
fisubrl
mov
sbb
push
out
xor
adc
inc
out
pop
mov
pushf
xchg
add
adc
mov
push
rcrl
mov
xor
cmc
or
in
cmc
push
and
negl
mov
jo
std
orb
hlt
push
dec
mov
fistpll
push
leave
mov
andb
rol
std
out
cmp
int
les
xchg
out
hlt
js
adc
lret
xor
push
push
sahf
mov
mov
out
arpl
neg
clc
icebp
sub
dec
jg
and
or
hlt
hlt
ljmp
sbb
sbb
add
pand
push
int3
jl
mov
pop
out
rcrl
cmp
es
in
sbbb
inc
mov
dec
adc
leave
dec
repz
rorb
cwtl
out
cwtl
scas
hlt
aas
xor
fsts
adc
jg
movsb
mov
ss
jns
mov
js
jb
daa
xchg
sub
cs
insb
int3
pop
pop
ficoms
pop
dec
mov
adc
hlt
jnp
outsb
cmp
ljmp
and
outsl
pop
test
ss
push
dec
jnp
mov
cmp
orl
icebp
mov
mov
pop
add
scas
xchg
ljmp
inc
jmp
jb
pop
les
add
ljmp
cmp
inc
mov
inc
sbb
ljmp
loop
test
int3
push
pop
js
and
jne
fs
pop
sub
mov
adc
test
pop
ror
fisubl
loope
push
movsb
pop
push
popa
mov
scas
lcall
ret
adc
lods
aas
mov
in
mov
cmp
pushw
mov
add
ljmp
pusha
sbb
mov
and
pusha
xor
int3
or
pop
sub
adc
jbe
rol
lcall
jmp
cwtl
out
push
sub
out
cmpsl
mov
jo
pop
nop
imul
cmc
fstpt
pop
mov
fdivrs
outsb
xor
dec
sahf
xor
hlt
mov
mov
push
dec
pusha
ss
sarl
notb
aam
loopne
pop
clc
pop
loop
mov
rolb
or
cmp
mov
fsubrs
adc
insl
xchg
xor
mov
in
ret
cmp
or
jl
and
outsl
or
sbb
insb
hlt
mov
call
and
pop
sti
addb
orl
loopne
fisubrl
cmc
jp
rcll
jae
cmpl
mulb
out
push
xchg
out
notl
cmc
out
inc
xchg
aas
aam
clc
mov
aas
mov
push
inc
or
js
xchg
pop
leave
sub
cmp
lea
outsb
inc
cmp
mov
push
xchg
test
xor
je
mov
mov
lods
cwtl
xor
cmpsl
sub
cmc
push
and
or
xchg
lods
push
shrl
js
add
popa
and
adc
adc
out
testl
lds
sbb
testl
idiv
lahf
insl
popf
mov
dec
cmp
jmp
cli
sub
lds
cld
hlt
sub
mov
movsl
xchg
sub
add
mov
or
xor
test
xorb
sbb
add
enter
mov
subb
inc
sbb
inc
fidivl
mov
arpl
das
jns
add
sub
lahf
jge
loopne
sbb
add
fldt
mov
popf
lret
movl
rcl
pop
sbb
dec
pop
mov
push
cli
fwait
lds
xchg
pop
inc
sbb
xor
sub
cmp
jmp
stos
arpl
adc
lea
xchg
movsb
stos
mov
addr16
psadbw
test
or
out
jmp
loopne
je
punpckhwd
dec
dec
addb
push
lahf
popa
repnz
add
sbb
push
add
lahf
xchg
aad
xor
test
or
mov
lret
aaa
inc
pop
pop
push
xchg
and
mov
push
test
or
lahf
push
nop
inc
je
lods
cmc
push
sub
and
xor
xchg
jmp
pushf
pop
mov
nopl
das
cmp
scas
inc
and
adc
ds
loopew
stc
data16
das
mov
push
in
pop
sbb
cltd
dec
mov
add
dec
jg
mov
mov
jmp
xchg
sbb
or
loopne
xchg
ljmp
jnp
clc
xchg
loopne
ss
je
or
cmc
pop
jle
xchg
push
push
xchg
sti
lods
push
js
cmp
jge
insl
xchg
pop
cmp
dec
add
xchg
jae
frstor
and
sub
jb
xor
loop
arpl
pusha
sti
enter
jle
adc
outsl
xchg
jne
mov
mov
imul
xor
hlt
cmp
fs
icebp
or
adc
lock
sbb
loop
daa
mov
cmp
jle
or
aad
test
mov
imul
mov
mov
pop
xorl
mov
outsl
js
and
pop
leavew
dec
pop
insl
mov
adc
call
fucomip
idiv
ss
testl
add
sti
sub
xchg
pop
mov
mov
bound
add
shll
aad
pop
sub
mov
or
mov
rclb
sub
xor
nop
negb
xor
jo
xor
popf
xchg
jnp
shlb
jmp
xchg
stc
pop
dec
mov
add
arpl
iret
cs
mov
in
pop
push
mov
int3
mull
jno
into
xchg
scas
xchg
xchg
push
outsl
movsl
inc
mov
add
rcrl
shr
insb
jns
dec
outsb
enter
adc
push
dec
push
mov
mov
adc
nop
test
cltd
cmp
add
cmp
xor
mov
in
outsb
in
cmp
lea
mov
jp
push
les
sbb
test
fwait
xor
fiaddl
and
movsb
lock
fsubrs
out
int3
popf
jg
mov
movsl
adc
xchg
cmp
out
popa
je
xor
es
cwtl
ja
push
mov
fstpl
mov
push
sar
aas
orl
xor
movsl
sbb
xchg
dec
jmp
xchg
cmp
subb
imul
cmp
inc
icebp
push
inc
cmove
filds
mov
add
push
adc
sbb
adc
jne
fildll
mov
loope
rcll
fidivs
pop
cli
add
push
mov
fwait
lret
cmp
mov
test
or
pop
fdivrl
add
inc
pop
outsb
inc
sub
pop
ja
out
push
or
sbb
loopne
mov
iret
fidivl
pop
in
out
push
fisttpll
add
jnp
or
push
xchg
mov
enter
pop
sbb
dec
iret
es
cmp
cmpsb
xor
dec
rorb
das
sbb
mov
push
jne
xchg
dec
lahf
adc
test
pop
inc
or
ss
js
aaa
add
mov
mov
addl
mov
mov
fwait
and
push
repz
mov
fs
fistps
cltd
inc
inc
sti
js
sbb
rorb
jl
pop
repnz
in
pop
jg
mov
push
jge
mov
je
mov
repz
adc
jmp
cli
pop
sub
cltd
fisttps
insl
adc
jno
jo
ljmp
sbbb
mov
or
cmpb
mov
clc
xchg
pop
xchg
lcall
cmp
notl
adc
pop
pusha
ret
sbb
cltd
adc
adcb
loopne
lret
loope
xchg
add
mov
aad
jp
ret
in
xchg
movsb
jbe
cmc
fbstp
ja
roll
loope
xchg
mov
or
fldl2t
ss
mov
push
sbb
aad
push
dec
inc
test
cmp
xchg
scas
inc
rcrl
mov
jbe
mov
cmp
cmc
or
scas
mov
sbb
xchg
mov
inc
dec
jge
xchg
xor
xor
out
mov
xchg
mov
pushf
push
mov
aam
loope
mov
xor
in
adc
daa
pop
add
leave
or
fprem1
mov
and
cmp
push
dec
cmc
xor
lea
lods
jmp
add
jno
aam
or
es
mov
in
add
xor
pop
or
mov
cwtl
fbld
mov
aas
and
ret
shlb
add
sti
pop
push
push
ljmp
cli
jns
cmp
jl
in
fwait
mov
mov
jecxz
pop
test
popf
xor
cltd
rorl
dec
sbb
sti
cmpsl
cli
dec
sti
aam
mov
ss
popf
enter
and
add
cmc
pop
cli
popf
loop
or
fwait
das
in
test
loop
dec
cmp
mov
mov
xorb
imul
call
push
andl
pop
shrb
filds
int
add
stc
rolb
xor
fistpl
lea
push
mov
into
arpl
gs
cltd
mov
xlat
rcrl
and
fists
ljmp
dec
addr16
sbb
mov
sub
rcr
test
jp
fnop
cmc
mov
movnti
dec
out
mov
and
lods
pop
gs
lods
sub
arpl
sbb
cld
pop
scas
dec
mov
ja
xor
sub
inc
stos
mov
or
xchg
out
xchg
xor
dec
outsb
rclb
jb
loopne
cld
aam
mov
jecxz
pusha
mov
mov
sub
inc
xor
inc
xor
push
push
mov
inc
addl
fwait
mov
daa
rcrl
mov
mov
in
and
data16
xchg
xchg
and
pusha
mov
dec
xorb
adc
xchg
xchg
adc
clc
push
cmp
add
je
push
and
mov
cli
pop
adc
sahf
sarb
cld
test
mov
mov
cltd
clc
shlb
in
dec
pop
call
jo
add
lret
fildl
or
jb
mov
aad
pop
fiadds
fsubr
mov
ds
xchg
xchg
fwait
mov
dec
xor
scas
cmp
arpl
mov
xor
xchg
cs
push
xchg
mov
adc
pop
mov
out
test
xchg
lcall
sbb
sub
iret
sub
outsl
std
stos
out
mov
xchg
jnp
test
push
in
jo
rcrl
imul
adc
push
xchg
and
adc
sub
mov
cmp
lcall
pop
mov
sbb
loop
jle
add
push
outsb
or
mov
test
inc
sahf
add
sti
arpl
into
arpl
jecxz
popa
push
gs
repz
sub
out
in
in
fcmove
cltd
pop
addl
jg
add
pop
imul
clc
ja
jmp
shlb
es
lods
aaa
mov
jo
sti
imul
out
xchg
sub
dec
pop
sbb
push
jp
add
andl
je
jg
mov
mov
popf
fsub
into
loopne
jb
add
jo
cmp
mov
mov
mov
outsb
int
or
leave
mov
outsl
stc
cmp
cmp
mov
jg
sbb
pop
and
js
dec
dec
jbe
repz
pusha
fsubrl
cmp
push
sti
test
jecxz
ficoml
lods
and
out
cs
or
xchg
add
test
xorb
dec
pop
out
push
sub
jp
mov
test
clc
aad
dec
mov
dec
ja
xchg
or
inc
sub
and
xchg
adc
jne
pusha
pop
pop
in
aad
leave
jb
adc
pop
cwtl
inc
adc
xchg
das
lcall
and
inc
or
je
call
sbb
aam
fdivrl
push
ss
pop
xorl
dec
cmp
mov
add
out
push
imul
add
addr16
add
and
dec
xor
push
mov
fadds
xchg
sbb
dec
jo
sbb
pop
cli
fnstenv
stos
push
movsl
and
dec
pop
jnp
lock
xlat
scas
aaa
data16
lods
insb
xchg
jb
and
cmp
insl
pusha
push
aas
push
cs
imul
and
xor
xor
nop
dec
push
leave
and
movsl
lahf
rcll
inc
call
dec
hlt
cmc
les
daa
lods
aas
or
jg
adc
nop
sub
lret
xor
cmc
clc
and
lods
call
pop
cmp
pop
jns,pt
xchg
shrl
pop
xor
not
or
jg
xchg
loope
pop
repnz
mov
jle
mov
rorb
dec
cmp
fisubrs
cmc
loopne
scas
ja
sub
sub
mov
das
fwait
stos
hlt
add
jbe
fdivs
adc
ss
fisubrl
int3
sbb
jecxz
in
mov
cmpsl
push
lods
shrb
aam
out
aad
inc
ret
clc
pop
jns
jmp
dec
in
mov
xchg
xorl
test
popf
mov
cs
dec
adc
sub
add
rorl
out
fldl
and
mov
icebp
out
jl
call
out
push
outsl
push
daa
adc
and
cmc
jns
mov
fs
popa
mov
cltd
mov
scas
and
loope
andl
notb
data16
inc
sub
rcr
xchg
insl
cmpsb
sbb
fwait
or
out
insl
dec
pop
xchg
jne
pop
adcb
pop
push
dec
mov
ja
fsubrl
mov
pusha
xor
adc
scas
repz
incb
mov
test
jle
loopne
dec
push
xchg
pop
jg
pop
jecxz
mov
pushf
and
sub
jo
pop
push
xchg
mov
inc
inc
cmp
xor
neg
cwtl
add
xor
les
xchg
jmp
adc
mov
pop
fcmovu
cmp
enter
inc
push
jle
cmp
cmp
subl
cltd
xor
pop
out
cmpsl
pop
push
jns
adc
out
add
and
mov
cmp
adc
cmp
cwtl
cmp
jnp
sub
mov
imul
xchg
mov
xchg
adc
f2xm1
mov
push
das
cmp
dec
cmc
cs
jnp
sbb
sbb
int3
pop
sarb
ret
out
int
or
or
sub
clc
sub
and
enter
pop
sbb
pop
sbb
lcall
gs
or
aam
dec
mov
jmp
shr
pop
js
pop
movsl
cmpsl
hlt
std
mov
xchg
or
sub
mov
xorl
pop
jb
enter
xchg
xor
xor
pop
cmp
mov
mov
shlb
xlat
das
lret
and
pusha
lods
cmovbe
ds
sahf
in
or
add
xchg
dec
push
cmc
mov
fldenv
pop
push
movsb
cwtl
add
cmpsl
fwait
adc
hlt
inc
lock
in
cmp
dec
test
and
jmp
add
sahf
stos
les
jge
stc
xchg
and
dec
movsb
in
arpl
sub
mov
lods
je
outsb
push
fiaddl
aad
or
xor
lods
fbstp
or
std
mov
push
or
pop
adc
fisttpl
pop
fbstp
and
in
cmp
xchg
pop
add
pop
xor
cli
rorb
js
call
or
int
dec
lret
ss
into
loopne
or
mov
push
jmp
js
add
sbb
push
aad
les
scas
push
insl
in
xor
xor
xchg
out
and
ja
adc
jmp
jns
daa
nop
jl
cmpsl
or
idiv
inc
call
pushf
popf
mov
loope
mov
cmpsl
jle
movsb
pushl
jge
pop
fbstp
jg
fnstcw
bound
add
jg
cli
push
hlt
dec
idivl
add
pop
in
jp
rcrb
adc
mov
xor
fs
jne
hlt
and
adc
adc
mov
dec
scas
jecxz
push
jo
push
fnstsw
push
mov
jno
out
push
cmp
cltd
inc
jle
pushf
xchg
mov
insl
or
pop
stos
cmpsb
mov
dec
pop
xor
inc
dec
daa
adc
out
loope
dec
shlb
clc
and
dec
scas
loope
inc
xor
cli
inc
testl
cli
in
pushf
mov
xor
sbb
sbb
mov
test
push
jmp
hlt
mov
sbbl
lods
mov
repnz
out
lahf
cmp
mov
dec
inc
mov
push
fisubl
and
dec
imul
inc
mov
es
push
xchg
or
pop
push
mov
push
fistps
fadd
dec
dec
ja
mov
test
mov
fmul
sti
scas
sti
aas
xchg
test
sahf
and
sbbb
cmc
fisttps
xor
test
or
push
loop
sub
xchg
insl
mov
xchg
repz
sbb
out
aam
sti
xchg
rolb
lods
insb
adc
mov
into
mov
sahf
sbb
cmp
aas
xor
aas
push
jno
dec
lcall
and
adc
clc
sbb
xchg
xchg
sbb
pop
ja
and
mov
dec
fwait
stc
popf
aaa
lea
int3
in
mov
imul
and
shll
pop
xor
cmpsl
rcrb
test
mov
mov
mov
mov
lret
jnp
xor
out
cs
dec
mov
sar
mov
sbb
mov
daa
daa
push
rcll
push
cmp
cmp
in
cmc
inc
dec
xor
xchg
sub
cmc
add
pop
in
nop
out
adc
and
stc
inc
sub
xchg
or
arpl
bound
jmp
vcmpss
pop
jo
mov
int3
pop
xchg
stos
xchg
lret
xor
leave
add
dec
xor
push
mov
leave
add
mov
mov
mov
sub
lods
push
mov
push
les
cmc
mov
lret
pop
mov
bound
pop
test
popf
pop
cmp
out
leave
arpl
mov
arpl
mov
aas
daa
popa
mov
scas
xor
aam
sbb
push
or
mov
push
fnsave
out
xlat
vpsubq
pusha
sahf
nop
push
int
mov
mov
fisttpl
mov
cmp
mov
jnp
cli
sub
scas
add
sub
cld
inc
jbe
push
push
js
arpl
insb
mov
faddl
aaa
pusha
cwtl
pop
pop
ror
xor
jle
lock
add
movsb
inc
dec
test
sub
adc
test
xchg
fildl
outsl
rcrl
jge
ss
add
mov
push
sbb
inc
enter
int
cltd
sub
jo
lcall
xlat
cli
into
sbb
push
jmp
add
je
repnz
sub
out
mov
lahf
cmp
sti
push
push
sar
cmp
inc
jno
push
mov
jnp
popa
je
mov
jnp
stos
and
mov
mov
cmc
outsb
add
imull
sub
cmpsb
lods
inc
pop
popf
mov
xchg
jle
pop
pop
xchg
and
push
fs
dec
and
sbb
sub
sbb
out
jle
cmp
mov
push
mov
fwait
popa
jecxz
les
add
mov
rol
add
call
cmc
stc
jbe
xchg
mov
mov
lods
inc
jmp
lahf
sar
and
test
test
push
cmp
lret
cli
out
cmp
stc
jbe
xorb
jecxz
mov
add
dec
rcrl
jl
mov
sahf
in
sbb
dec
cmp
js
adc
mov
cmp
push
add
js
in
sub
gs
ror
out
sub
outsl
sbb
or
int3
xchg
stc
fistl
add
jge
insl
icebp
mov
popa
sub
cmpsb
mov
jle
jns
sub
out
pushf
xor
mov
mov
fs
inc
jmp
stos
iret
cli
cmp
cmp
mov
test
jae,pn
out
jge
mov
jmp
sub
jge
sbb
aaa
icebp
add
sub
sbb
sar
inc
lock
and
in
std
pop
cmp
popl
mov
or
imul
inc
mov
stos
cs
fimuls
xchg
jbe
sti
hlt
xchg
mov
lds
sbb
test
fisubrs
pop
ds
aas
pop
outsl
ss
jnp
cwtl
andb
add
fcompl
insb
and
and
imul
add
add
mov
int3
mov
pop
inc
dec
test
cmp
push
xchg
test
xor
adc
or
divl
test
push
xchg
mov
dec
stc
repz
jnp
xchg
or
pusha
inc
sbb
ljmp
add
sahf
mov
cmp
fsts
adc
repz
adc
push
sbb
adc
aas
push
cmpsb
es
dec
sbb
add
aad
ret
popf
sbbb
lods
in
mov
insb
mov
xor
jle
sbb
or
or
imul
les
or
cmp
jg
xchg
adc
cmp
in
mov
popa
sbb
imul
xchg
mov
imul
sti
cli
imul
mov
jae
mov
notl
pop
mov
pop
sahf
in
lods
inc
js
shl
sbb
mov
roll
mov
ret
pop
dec
clc
add
xchg
popf
ret
ds
mov
or
lret
out
pushf
mov
inc
pop
push
aaa
in
sahf
push
add
pop
popa
or
jmp
aam
ljmp
jg
push
aam
aas
mov
pop
pusha
xchg
jae
jg
add
jnp
jo
inc
int
jnp
push
nop
fbstp
xor
sarl
mov
xor
pop
lahf
idivl
clc
sub
arpl
imull
cmc
mov
dec
jns
xchg
or
pop
sahf
div
mov
pop
stc
xor
mov
lea
cmpb
xchg
in
inc
sub
cli
int3
jl
pop
add
sub
fadds
cmp
stc
pop
jg
into
sbb
push
in
sub
in
xor
aas
stc
inc
pop
mov
int3
out
test
push
lds
stos
mov
cmpsb
aam
pop
sub
add
xchg
mov
out
pop
push
ret
sub
mov
jmp
mov
lcall
imul
cmpb
mov
mov
std
inc
call
adc
xor
dec
xchg
ficoml
hlt
fisttpl
mov
scas
sub
movsb
lcall
clc
cmp
mov
jne
psubw
add
cmpsb
test
cltd
or
aad
mov
outsb
mov
nop
mov
bound
inc
add
jmp
ret
bts
mov
outsb
lcall
les
jnp
stos
fldenv
leave
aad
or
adc
push
dec
fsubr
sbb
xchg
pop
xchg
dec
lahf
jbe
lock
add
arpl
fcompl
jle
add
repz
push
mov
int
lret
mov
lock
in
xchg
stc
push
lds
dec
push
ret
nop
stos
nopl
fisttpl
popf
scas
ficompl
fstpt
in
or
xor
stos
gs
pop
pusha
adc
jns
test
xchg
cmp
or
jae
repz
mov
adc
or
adc
dec
and
dec
insl
sti
dec
cmpsl
mov
fcom
cmp
add
es
jl
das
inc
stos
jb
sbb
pusha
sub
sbb
roll
cltd
repnz
popa
push
push
gs
push
ja
fisubl
dec
jne
sub
add
aaa
mov
test
xor
add
shrb
sbb
test
pop
mov
cmpsl
jg
scas
ss
sbb
and
cli
dec
jge
jge
mov
cmpsl
push
negl
jmp
mov
mov
lahf
rcr
and
mov
jecxz
jnp
stos
adc
sub
shlb
imul
stos
fdivl
mov
dec
jl
jmp
or
loopne
cmc
loop
or
push
adc
movsb
push
stc
fbld
cmpsb
or
int
arpl
pop
lcall
lock
sbbb
adc
stc
jl
and
xlat
sbbl
push
jo
jae
add
pushf
cld
or
mov
dec
loop
jnp
les
lret
ljmp
pop
jbe
push
sub
fnstsw
das
lret
cli
jae
mov
repnz
test
dec
jge
cli
ret
xchg
xchg
jae
mov
sti
cmpsb
loop
test
wbinvd
aad
pop
mov
loopne
testl
clc
push
adc
dec
push
and
xchg
repnz
rcrl
jb
dec
ja
adc
dec
adc
daa
mov
and
repnz
idiv
add
lahf
ss
cmp
push
xor
shll
shlb
push
loope
shl
add
ljmp
insb
daa
leave
std
test
rol
sub
push
xchg
and
rcrb
push
lods
notb
or
es
push
or
mov
and
mov
push
shll
in
dec
pop
xchg
dec
dec
xchg
or
jecxz
ljmp
aas
adc
cmp
mov
pusha
pop
mov
cmp
pop
out
lret
jl
int3
jno
inc
imul
repnz
sbbb
repz
insl
andl
scas
cmp
cmpsb
loop
repnz
cld
mov
xchg
loope
loopne
fwait
adc
jge
notb
jnp
dec
les
or
xor
test
dec
sarb
add
add
cmc
ficomps
or
andl
dec
mov
imul
gs
jp
stc
mov
pop
stc
and
xchg
cmp
rolb
leave
rcl
inc
add
icebp
jg
imul
ret
inc
movsl
fstpt
or
int
and
jecxz
shl
mov
sbb
push
mov
sbb
jb
adc
xchg
push
jle,pt
js
or
rclb
aad
mov
dec
stos
lret
mov
scas
pop
cmp
insl
wbinvd
inc
lock
lods
loope
ja
je
je
mov
mov
mov
std
xor
push
mov
mov
imul
les
mov
ss
inc
dec
mov
mov
sbb
hlt
or
inc
sahf
sub
nop
sub
jno
ljmp
sub
test
xchg
pusha
pop
mov
mov
sbb
imul
std
xchg
mov
and
xor
dec
xchg
jo
or
jno
cmp
stc
mov
xor
je
and
mov
push
fdivs
jl
dec
aas
in
xlat
push
dec
fsubrs
xchg
pop
jb
fs
dec
stc
jno
fnstcw
imul
pop
cmpl
fisubrs
mov
scas
pop
sub
test
pop
add
push
xor
popa
or
fstpl
mov
into
cltd
cmc
xor
pop
in
push
adc
jbe
adc
mov
lods
lret
or
mov
xchg
inc
ret
cld
jp
clc
and
adc
dec
inc
and
inc
or
pop
jg
mov
not
fcomps
jle
shlb
loop
pop
fs
push
sbb
mov
adc
xchg
dec
or
mov
inc
pop
add
push
mov
jnp
mov
lds
inc
lret
pushf
dec
mov
cli
stos
jb
mov
jae
inc
int
aam
rclb
inc
mov
cmp
mov
stos
inc
loop
int3
mov
fadds
mov
outsb
lods
sbb
lds
mov
aaa
out
fwait
xor
and
jae
test
pop
jns
fcoms
jp
popa
shlb
sub
popa
insl
xchg
bound
orb
in
test
enter
repnz
ret
sbb
or
or
push
ret
jp
daa
cmpsb
in
add
sub
lret
rolb
cmc
sarl
sarl
jecxz
jne
jo
and
clc
popf
adc
rcrb
in
jl
mov
lcall
xor
call
jge
hlt
cmp
scas
scas
nop
pop
pop
cmpsl
call
movsl
mov
jbe
or
cmpsb
cld
cmp
jp
clc
push
push
lea
pop
std
sbb
and
lods
mov
push
rcll
addr16
in
xor
jno
mov
dec
dec
push
mov
add
mov
push
or
hlt
xor
fxch
xchg
mov
mov
ds
sub
aaa
sarl
jle
nop
mov
cmc
mov
xor
je
addr16
fildl
adc
add
pop
cli
push
dec
cmp
mov
lcall
mov
iret
out
pop
xchg
dec
nop
and
sbb
ret
push
sbb
mov
fldt
stos
hlt
cmp
lcall
data16
int
adc
mov
pop
into
shlb
fs
mov
jge
push
xchg
out
adc
rorl
xchg
pop
cwtl
pop
in
or
sub
ret
les
or
stc
and
fs
iret
gs
push
inc
dec
lahf
ret
mov
aas
dec
mov
movsb
fdiv
pop
cld
jbe
jmp
mov
xchg
stc
idivb
pop
sub
aam
and
jns
push
lret
repnz
dec
sbb
jbe
inc
mov
push
les
mov
mov
and
inc
push
neg
loop
lret
jl
cs
jnp
addb
xor
test
out
add
fidivrs
rol
mov
mov
repz
arpl
in
in
fistps
push
mov
mov
mov
mov
sub
mov
out
and
icebp
jno
cmp
pusha
mov
nop
sbb
add
sub
sub
mov
stc
in
fsts
cwtl
fildll
xorb
fs
incl
stos
sbb
aam
mov
or
and
or
mov
ret
or
fmull
lcall
sbb
xor
or
test
andb
int
sarl
xchg
iret
add
scas
pop
arpl
sbb
add
je
int
lods
inc
push
ret
cli
sub
inc
in
movb
mov
popa
in
mov
inc
ss
les
loope
mov
aam
insb
addr16
add
or
inc
jl
mov
popa
lret
in
jae
mov
fstpl
push
repz
add
xchg
jle
jo
pop
loop
popf
jmp
pop
or
adc
loope
adc
loop
stos
test
add
or
testl
add
dec
adc
aam
test
addr16
pop
in
and
xor
les
ljmp
fsubr
xchg
mov
jnp
or
cli
jmp
jb
std
mov
lods
push
call
rcrl
fstpt
mov
mov
jns
icebp
arpl
sahf
arpl
sbb
xchg
jle
cmc
and
pop
in
adc
and
dec
mov
shrb
and
pop
sub
mov
mov
push
aaa
sti
jno
adc
out
addr16
daa
cmp
ss
out
repnz
cmpsl
mov
insl
ds
scas
popa
xor
inc
sub
sub
xor
or
pop
cmpsb
insb
sbb
dec
or
call
cld
xchg
stos
rolb
sbb
nop
fists
or
test
xor
dec
cwtl
lock
add
sub
sbb
mov
lret
jbe
xchg
dec
pushf
jmp
cmp
jecxz
jns
adcl
and
push
and
aaa
lcall
inc
subl
fs
fdivs
andb
pushf
outsb
aaa
cmpsb
iret
dec
mov
mov
loopne
rcrb
imul
loope
push
sbb
dec
xchg
dec
push
lret
mov
addr16
bound
push
inc
in
push
push
adcb
in
or
out
jne
stos
fstpl
outsl
add
push
mov
fsts
cltd
mov
aas
aas
pop
mov
or
ja
jnp
leave
pop
inc
sub
test
scas
addr16
pop
pusha
mov
pop
sbb
js
xchg
dec
sti
aaa
pop
mov
mov
mov
outsl
sahf
mov
sub
pop
pushf
mov
jecxz
leave
push
inc
jl
lcall
inc
adc
push
push
mov
mov
cmp
movsl
push
mov
xlat
cld
mov
dec
cld
push
jp,pt
jg
and
xor
fiaddl
xchg
xchg
ret
icebp
pop
jecxz
mov
mov
mov
cmpsb
pushf
adc
daa
scas
imul
enter
adc
pop
sbb
loopne
scas
jae
jnp
adc
mov
mov
test
jl
sbbb
shlb
jns
ljmp
dec
xchg
jl
scas
sub
push
lods
xchg
nop
mov
xchg
pop
imull
loop
pop
or
jmp
fwait
test
or
jns
rcr
dec
sbb
and
stos
jo
mov
dec
test
test
dec
mov
aaa
xchg
in
daa
cmp
pop
test
cmpsb
and
xor
add
test
sbb
popf
stos
or
sub
xchg
push
or
inc
negl
cmp
imul
jl
scas
dec
lret
and
aaa
cwtl
shll
pop
cmp
xchg
fs
xchg
or
int
add
and
dec
ljmp
mov
aam
mov
pop
dec
mov
xor
or
mov
les
jbe
jns
in
lcall
nop
lock
mov
mov
add
pop
dec
sub
xchg
negb
xor
bound
stos
loope
jmp
push
push
mov
cmp
std
jecxz
loopne
aaa
imul
mov
xchg
sub
mov
and
adc
xchg
popf
gs
ljmp
dec
les
jnp
call
test
push
cli
test
adc
cmpsb
inc
push
add
xor
jl
lds
dec
lahf
outsl
mov
iret
loop
fcomi
push
dec
loop
jb
jle
ljmp
pop
fabs
inc
mov
out
mov
lds
adcb
jb
add
std
xlat
inc
push
xlat
or
out
pop
adc
mov
dec
add
dec
jo
add
mov
inc
mov
pop
jae
inc
cli
shrb
out
jp
aam
insb
mov
outsl
cmc
shrl
ficoml
cmp
out
or
fbld
loop
pop
dec
push
mov
xchg
test
pop
sbb
addr16
jle
cmp
iret
sbb
int
push
lret
xchg
push
inc
mov
xor
gs
cmp
sub
mov
mov
enter
cld
gs
out
imul
push
pop
mov
and
stos
in
andl
mov
xlat
xor
aaa
jns
sbb
mov
enter
cld
jge
adc
gs
scas
test
dec
push
ss
jbe
xchg
in
and
daa
sbb
inc
and
icebp
xor
and
mov
out
mul
mov
cmp
pop
xor
stos
xlat
adc
push
dec
pop
movsb
clc
int3
xchg
pushf
xor
push
popl
add
xor
out
roll
lea
fisubl
pop
pushl
mov
test
stos
mov
cltd
mov
adc
inc
scas
imul
repnz
dec
loopne
and
test
daa
orb
inc
xor
aam
lcall
daa
insl
pop
insl
out
push
int3
mov
push
mov
mull
movsb
emms
jmp
daa
cwtl
mov
add
pop
inc
leave
sbbl
cs
sub
xchg
and
out
adc
mov
mov
xor
jne
mov
xlat
xchg
dec
int3
jns
daa
aam
les
imulb
cmpl
sbb
sub
lods
dec
mov
and
mov
test
cmpsl
test
xchg
shrb
add
mov
jmp
fistl
push
push
mov
lea
sahf
cs
mov
jns
adc
sbb
sbbb
rclb
repz
rdpmc
lods
js
loope
pop
jmp
pop
xor
rcrb
lea
dec
sbb
mov
ljmp
xchg
sbb
out
pop
push
mov
add
fdiv
adc
mov
sbb
sbb
mov
pusha
mov
bound
or
cmc
jp
add
jl
dec
xor
lods
push
ds
mov
sbbl
daa
clc
mov
push
lods
mov
xchg
jmp
and
dec
push
ret
enter
pop
in
adc
ret
movb
cmp
ja
cmp
popf
arpl
add
add
in
loop
inc
sub
shlb
stc
or
insb
and
adc
mov
sarb
pushf
cmpsb
mov
lcall
pusha
mov
inc
fimuls
ret
and
mov
repz
jb
pop
scas
cwtl
iret
mov
jmp
popl
jae
fimuls
test
cld
jmp
xchg
and
fistl
mov
jmp
and
adc
lea
mov
inc
sub
fnstenv
lods
mov
insb
and
jne
sbb
lret
ds
push
sub
imul
icebp
xor
ret
lahf
out
adc
jg
sub
fs
lods
stos
fs
call
sub
pop
out
icebp
inc
sti
test
rcrl
jb
fcmove
lahf
push
xor
inc
sub
aam
ja
jno
xor
lret
pop
add
imul
shl
fadds
out
push
xchg
jae
daa
sub
pop
dec
lods
arpl
jp
int3
pop
mov
jo
mov
mov
adc
out
stos
add
push
les
sub
xor
ljmp
mov
xchg
pop
mov
fmul
inc
orb
std
sbb
mov
fcompl
sub
daa
in
add
dec
out
cmpsl
dec
mov
scas
in
and
xorl
jmp
xor
fcmovnb
ret
mov
mov
push
sbb
mov
pop
jo
fsubrl
sub
inc
data16
insl
mov
cmpsl
cmc
cmp
cltd
xchg
mov
and
inc
loopne
outsl
movsb
fwait
xchg
lret
jne
loop
and
push
and
xchg
lods
xor
ret
ds
scas
inc
xor
xchg
in
cmpsb
add
enter
mov
xlat
xlat
addb
pop
xor
mov
add
jo
dec
sbb
push
lea
add
test
inc
mov
and
ss
scas
pop
fimull
call
outsl
adc
xorb
mov
xchg
lcall
daa
mov
popf
cmpl
stc
mov
pop
scas
lret
aad
or
insb
mov
xchg
call
scas
inc
into
rorl
sbb
jmp
pop
mov
movsb
sub
shlb
and
mov
lret
xchg
shll
add
shl
divb
pop
int3
daa
scas
dec
sub
outsl
out
mov
test
mov
xchg
mov
cli
sti
or
les
pop
inc
fildll
inc
jle
add
cmc
fidivrl
mov
mov
mov
aad
cmp
scas
aam
imul
arpl
jmp
iret
std
int3
sub
jne
stos
dec
int3
mov
aad
fcmovb
pusha
cltd
fstpt
adc
jp
lret
or
jbe
in
hlt
popf
mov
movsb
repz
jmp
dec
push
scas
jae
mov
pop
mov
adc
iret
arpl
jo
cltd
xor
pop
jl
push
and
rolb
in
enter
xchg
jnp
das
mov
in
ja
subl
js
lock
sbb
jno,pt
jns
dec
aaa
neg
inc
cs
xlat
dec
je
pop
xor
scas
xor
inc
sub
push
inc
filds
inc
aad
icebp
fdivrs
and
daa
sbb
push
cmp
mov
ss
adc
dec
fidivrs
cmpsl
pop
fadds
in
inc
adc
in
incb
mov
fnstcw
pop
jp
shl
dec
xchg
std
cmp
xchg
lahf
jo
mov
int
imul
mov
subl
sub
sub
in
cmp
jle
jl
into
inc
add
sub
pop
fisttpl
inc
push
lret
loope
iret
lock
stc
jecxz
out
mov
stos
scas
call
lret
add
mov
add
mov
xchg
inc
into
mov
cmc
cmp
int3
adc
push
idivb
mov
mov
cmpsb
mov
or
out
sub
xor
adc
seta
cmp
sub
push
ljmp
mov
jp
ja
jle
cmp
addr16
cmp
xchg
bound
sub
scas
call
inc
or
and
dec
or
fdivs
pop
jle
push
leave
xor
aas
sub
jae
push
jbe
and
xchg
push
lea
fistpll
outsl
add
movsl
mov
aas
push
daa
mov
orl
mov
xor
mov
sub
and
push
mov
les
mov
fadds
pop
sub
and
arpl
into
andb
cmp
cmpsb
cmpsb
xor
mov
nop
nop
lcall
and
cmp
mov
mov
add
stos
jecxz
pushf
cmpsl
leave
in
mov
rol
adc
or
faddl
es
movntq
nop
stos
mov
call
inc
fsubrp
push
mov
sbb
cmp
repnz
jge
aaa
test
sbb
pop
or
jge
imul
sahf
rcl
popa
jl
gs
pop
rcll
adc
xchg
dec
inc
adc
aam
lahf
push
and
imul
ds
inc
cld
xchg
push
jb
popa
hlt
test
mov
adc
aas
inc
aam
or
out
outsb
gs
sbb
xlat
push
stc
sbb
mov
push
sub
notb
out
aaa
mov
cltd
ficoml
sahf
in
fwait
push
inc
leave
mov
fidivs
jbe
cmp
mov
xchg
sbb
jbe
outsl
scas
test
dec
mov
add
mov
lahf
xor
aas
lret
sbb
fistps
sub
jp
stos
pop
dec
lret
imul
mov
call
seta
pop
mov
outsl
mov
sub
push
test
xchg
popf
sbbb
dec
das
push
cmp
mov
fldl
mov
inc
ficompl
xor
inc
dec
mov
cmp
fs
xchg
mov
jg
push
test
fsubs
add
aas
int
xor
sub
sbb
jmp
es
push
jno
and
fmull
inc
into
mov
sbb
pushf
push
iret
dec
popf
dec
sub
ja
into
dec
in
insb
js
sub
pushf
sub
ljmp
mov
cli
nop
push
lret
or
std
sbb
sti
rcrb
dec
pop
sub
loopne
inc
bound
sbb
mov
push
push
fdivp
jmp
and
xchg
xchg
std
pop
cmpsb
loop
inc
push
dec
lock
mov
cmp
fs
into
movsb
jp
sub
shll
fsubs
shll
loop
adc
push
add
and
test
mov
jmp
mov
jg
mov
inc
and
push
movsb
or
mov
divb
pop
sbb
sbb
mov
aad
or
sahf
aaa
sbb
fcoms
es
mov
or
mov
repnz
push
fs
aas
dec
cwtl
push
lcall
mov
xchg
insb
popf
mov
jl
and
xor
adc
sbb
fcmove
mov
data16
or
xchg
sbb
jmp
sub
lea
jb
sub
jp
inc
sbb
repz
arpl
mov
out
sbb
and
fidivrs
data16
push
fdivl
adc
jmp
adc
leave
push
repnz
pop
pop
bound
pusha
lahf
aaa
mov
adcb
inc
cmpsb
sub
jl
add
fisttps
js
mov
loope
dec
fdivs
mov
and
sarl
inc
aad
sub
insl
add
sarl
and
cltd
sub
in
jo
xchg
cwtl
inc
cltd
xor
inc
adc
loop
add
lods
cmp
aad
lret
jle
fldenv
shl
loope
sub
xlat
inc
ja
insl
jnp
adc
and
pop
pop
sub
clc
inc
dec
sub
cmp
lods
in
mov
mov
pop
fwait
adc
inc
push
xchg
cli
jl
in
push
push
push
loope
xchg
xchg
dec
in
inc
mov
in
jge
inc
mov
lds
dec
lret
jg
lods
mov
cs
sbb
fcompl
lock
out
cmpsb
xlat
fnstenv
inc
push
and
sub
pop
mov
ffreep
sub
mov
aas
icebp
mov
loop
bound
pop
cmovs
add
in
dec
cld
mov
jo
dec
pop
push
movb
test
xor
adc
jo
lcall
dec
push
xchg
pop
fldt
je
stos
repnz
popa
jle
movsl
loopne
mov
loop
mov
rol
sbb
inc
sbb
ljmp
lods
or
xchg
scas
fisttpl
dec
mov
mov
jno
divl
loopne
xor
in
test
mov
mov
push
out
dec
push
cwtl
pop
or
fcomps
insl
insl
add
in
sub
movsl
pop
xor
sbb
rorl
add
stos
xor
or
aas
mov
cld
pop
sbb
ret
add
out
mov
inc
adc
inc
das
lahf
rclb
xchg
popf
pop
mov
fidivrl
cs
adc
mov
gs
and
xchg
jl
movsb
das
ss
add
les
pop
test
add
shll
jo
fdivrs
mov
loope
jnp
jo
pop
jmp
mov
sub
loope
outsl
pop
xchg
imul
stc
adc
pop
jl
shrl
mov
int3
xchg
cli
push
test
pcmpeqw
mov
aaa
mov
clc
leave
lea
push
cmc
push
andb
lret
mov
and
sbb
mov
or
iretw
call
pop
dec
fstpl
adc
mov
mov
jo
aas
fcoms
aaa
dec
push
and
pop
in
cmp
xchg
pushf
pop
popa
pop
bound
jne
xchg
lods
daa
add
xchg
mov
mov
bound
pop
add
pop
push
add
fmulp
in
insb
push
repnz
bound
fnstenv
fdivrl
pop
stos
lret
addr16
jle
hlt
icebp
dec
mov
sub
mov
adc
fstl
jns
xor
loopne
and
popa
adc
or
adc
mov
jo
gs
fstpt
test
xchg
mov
lods
cmpl
das
insb
pushf
aaa
xor
adc
push
call
ret
ret
dec
fldenv
mov
repnz
scas
cmpsb
sub
xchg
pop
add
add
arpl
dec
xchg
xchg
insb
add
testb
jb
sbb
aam
addl
inc
lds
cltd
lock
es
add
sbb
mov
adc
mov
adc
xor
or
pop
jecxz
test
dec
push
aam
idivl
or
sub
sarl
in
mov
jmp
sbb
xchg
dec
pop
out
xchg
mov
in
and
ret
cmpsl
rol
xchg
jecxz
pusha
and
ljmp
lret
mov
bound
cwtl
mov
cmp
sub
push
dec
adc
xchg
mov
xlat
ljmp
push
push
cmp
sbb
sbb
cmp
rclb
cmp
add
ficomps
xor
arpl
inc
fisubl
das
in
out
fstps
mov
mov
je
pop
sbb
mov
xchg
fistps
inc
test
sub
lea
clc
xor
sub
mov
fldenv
mul
lods
xor
outsb
xor
mov
xor
push
mov
jae
inc
popa
jge
sub
lret
repnz
pop
cli
out
inc
xchg
sahf
mov
ret
scas
lods
mov
pmaddwd
mov
sbb
cmp
inc
jg
loop
dec
es
mov
repz
roll
mov
cld
aam
add
dec
ds
sbb
bnd
sub
mov
test
mov
pop
jecxz
aam
fwait
inc
xchg
ja
mov
fnstsw
out
jmp
cmpl
fcmovnb
mov
or
fdivl
imul
mov
cmp
adc
and
sar
mov
push
cmpsl
in
call
fdivs
ret
or
xor
int3
ss
pop
sub
inc
mov
dec
lods
jg
or
lods
popa
pushf
lcall
int
ret
pop
mov
push
and
in
dec
push
add
push
mov
loopne
or
mov
movsb
in
mov
cmp
xchg
bound
out
rorb
adc
push
mov
lret
sarl
pop
ss
stos
sbb
outsb
aam
mov
dec
dec
sbb
into
aad
fdivr
cmp
in
es
mov
sbb
daa
pop
dec
mov
lock
fidivrs
jecxz
pushf
add
adc
js
mov
adc
scas
sub
mov
es
fadds
sub
cmp
dec
stos
xchg
lds
lock
jl
pop
or
xor
push
icebp
adc
sub
add
and
push
ja
rcll
cmpsl
aas
jb
and
xchg
ret
jbe
in
cmp
inc
test
rclb
test
int
inc
fnsave
push
outsb
fstp
repz
cltd
mov
pop
imul
movsb
inc
fsubl
ret
jp
pop
insl
ljmp
jge
sub
cld
loopne
xchg
jmp
push
aas
outsb
mov
test
mov
mov
adc
add
ss
es
cmc
xchg
mov
jmp
xchg
test
or
jp
lcall
mov
sbb
xchg
xchg
outsb
sbb
scas
or
addr16
adc
add
jae
or
ja
rcll
sub
cmp
add
jo
sub
std
cmp
and
and
mov
shll
pop
std
out
xchg
xchg
jg
jo
sbb
sub
imul
aas
shrb
mov
loope
and
lahf
mov
fistl
scas
scas
les
xchg
add
mov
add
and
mov
push
fucomi
into
pop
imul
jnp
sub
jecxz
jl
pop
push
out
test
std
jge
jno
sbb
dec
xor
and
inc
andb
adc
aaa
fdiv
test
and
mov
and
sbb
or
and
jge
pop
and
lret
or
xor
inc
xchg
adc
scas
lds
frstpm(287
push
fmuls
dec
insl
loope
cmp
fmull
lret
inc
daa
add
sub
in
hlt
inc
jne
push
bound
ljmp
lods
shl
imul
sti
xor
iret
sbb
sbb
cld
es
cmp
and
pop
sbb
out
sahf
test
test
push
shlb
adc
out
roll
decl
popf
ret
gs
out
in
xchg
notb
pushf
pop
push
pop
enter
les
test
dec
inc
push
jge
out
in
aas
rcll
int
je
push
cld
je
cmp
xchg
and
aaa
int
rcll
push
add
and
xor
test
inc
jns
mov
fldt
mov
lods
js
leave
test
push
adc
dec
adc
push
cmpsl
push
cmp
jno
out
out
xchg
push
in
or
test
sub
mov
sbbb
xchg
add
imul
xchg
jo
xor
mov
inc
scas
mov
inc
out
fldcw
outsb
ja
jmp
inc
aam
arpl
xlat
xchg
shll
mov
sub
sub
jmp
cmpxchg
fdivrs
sbb
cmp
and
push
adc
imul
es
es
and
rcll
xchg
xor
jne
rcll
jge
cld
cmpsb
push
cmp
pop
dec
pop
loop
and
sbb
push
idivb
test
add
jmp
out
dec
jns
xor
les
cmp
testl
les
ret
and
in
and
jp
inc
adc
pop
shl
dec
std
sub
imul
jb
cmpsl
mov
fcmovu
cmc
sbb
int3
pop
xchg
sbb
mov
clc
ja
sub
fwait
repz
pop
and
mov
inc
cltd
movsl
repnz
lret
cmc
inc
mov
popa
cmp
adc
fmuls
or
and
inc
adc
mov
outsl
pop
jbe
jbe
mov
in
subl
dec
inc
cmp
cwtl
dec
xchg
ds
test
inc
call
inc
inc
pop
adc
mov
dec
loopne
xchg
stos
add
adc
inc
inc
cmp
dec
in
lret
mov
push
jmp
or
test
clc
dec
decl
imul
xchg
sbb
push
mov
aam
sti
xchg
daa
push
dec
pop
out
push
stos
in
and
outsl
icebp
insb
push
insl
jmp
xor
inc
pop
mov
es
xor
push
jge
lret
imul
pop
mov
mov
adc
fmull
data16
pop
imulb
sub
xor
jb
es
into
dec
fcomps
mov
sub
scas
ficompl
sbb
je
outsl
jns
mov
addr16
int3
in
test
sbb
jne
divl
outsl
or
sub
jae
dec
js
mov
jns
mov
aas
out
inc
xchg
inc
mov
dec
mov
rolb
add
repnz
cmc
pop
pop
int
mov
or
shlb
into
push
out
lods
or
sbb
sbb
mov
mov
subb
xchg
and
push
lret
iret
nop
inc
mov
add
pop
fsubrs
jg
pop
mov
out
cmp
int3
mov
sbb
shr
and
insb
sub
dec
pop
gs
push
inc
sti
xchg
jae
int
or
movsl
cli
xchg
xor
mov
adc
or
jg
sub
aaa
pop
je
pop
xor
and
push
repnz
xlat
int3
mov
daa
push
inc
adc
aam
xor
sahf
cmpsb
popf
add
or
mov
lcall
cmc
fucomp
stc
push
sti
adc
cmpsb
jg
mov
test
jmp
push
cmpsl
sub
mov
jo
push
ret
fsubrl
mov
xor
insb
jnp
data16
mov
xchg
pusha
repnz
int
fucomp
fucomip
mov
or
xor
xlat
xorl
mov
push
aas
mov
clc
andb
mov
daa
sbb
mov
push
test
sub
leave
stc
imul
add
xor
loopne
test
ds
cmc
fwait
sbb
shlb
pop
cmp
ret
xor
scas
shll
sbb
imull
lods
mov
loop
inc
ljmp
in
mov
cmp
outsl
subb
nop
or
xchg
mov
fistps
mov
inc
out
or
ds
xchg
mov
scas
scas
test
lods
les
jge
sub
xchg
jg
sub
mov
adc
mov
call
xor
lea
xor
leave
and
pushf
into
lret
out
sbb
in
xchg
jns
jae
scas
ss
aaa
movsl
scas
fnstsw
xchg
pop
into
lods
out
dec
dec
movsb
aad
or
mov
notb
movb
pop
xchg
pop
mov
cmp
movsb
fmuls
inc
mov
mov
stc
jbe
and
xchg
push
std
orl
push
scas
fwait
outsb
pop
sub
and
pop
divl
cltd
out
mov
out
mov
fstpl
push
stos
sbb
lea
shll
pop
push
pop
jg
sbb
push
and
xchg
loope
pop
sbb
mov
lcall
xlat
sbb
xchg
shll
inc
push
sub
lahf
or
imul
sbb
xor
pop
xor
leave
insb
push
xor
lock
add
stos
cmc
cltd
hlt
dec
mov
ror
cmp
push
leave
out
or
fistpl
movsb
inc
lock
in
enter
pusha
loopne
add
and
lahf
mov
jne
addr16
dec
pop
jo
out
cmp
out
mov
les
mov
aad
mov
mov
dec
xchg
jbe
pop
in
lock
std
and
cmp
movsb
push
jp
sub
mov
cld
inc
jle
je
cmp
add
xchg
lods
mov
stos
inc
int
mov
mov
emms
lret
or
add
sti
ljmp
mov
int3
jb
outsl
ret
dec
out
test
inc
xchg
sbb
or
sub
cmpsb
cli
mov
stos
dec
mov
scas
and
push
jb
add
cmp
inc
mov
lds
sub
out
mov
ss
data16
push
mov
ljmp
cwtl
inc
lock
out
into
jae
out
inc
push
mov
sbb
dec
out
dec
stc
aas
sarb
mov
pop
add
mov
push
lods
pop
fcomi
rclb
fsubrs
rolb
sarl
lock
add
popf
out
call
lret
out
dec
add
iret
fdivl
loopnew
in
shrb
fisubrl
out
sti
mov
inc
outsl
pop
pop
les
sahf
xor
and
xor
loope
popf
daa
xor
xchg
jl
ss
xchg
push
cmp
jnp
sub
fisubrs
pop
jecxz
bound
mov
aaa
xchg
push
push
pop
sub
loopne
bound
xchg
popf
dec
push
movsl
push
idivl
in
aaa
mov
pop
data16
jmp
push
fstps
cmp
and
xchg
adc
adc
fwait
loopne
fisubrs
push
mov
sbb
jne
les
push
mov
inc
fstps
pop
cld
mov
mov
out
jnp
dec
mov
push
sub
or
or
subl
testl
jno
enter
movsb
and
mov
mov
cmpsb
cwtl
out
mov
and
push
sub
dec
orb
fwait
or
mov
mov
jg
outsb
inc
out
mov
mov
mul
mov
inc
jae
shrb
adc
ficoml
das
in
adc
cs
dec
out
sti
push
add
cwtl
xor
out
adc
xchg
sub
cmp
das
outsb
adc
mov
jle
cmc
jge
pop
add
je
jae
adc
mov
cltd
xor
or
into
leave
fdivp
dec
pop
adc
mov
je
or
cmpsl
jmp
call
jl
leave
adc
sbb
jno
mov
jns
xor
xchg
and
push
inc
iret
rorb
test
stos
aad
mov
movsb
mov
stos
or
xlat
xchg
fcoms
jmp
aaa
and
jb
jns
push
dec
cmc
shrb
in
jge
push
pop
movsl
aas
stos
dec
and
sbb
inc
in
cli
jmp
aaa
mov
inc
lods
ret
je
dec
push
mov
or
dec
leave
push
pop
sahf
and
int
xchg
adc
cmpsl
mov
and
cvtps2pd
sub
push
std
push
adc
adc
jmp
mov
dec
inc
mov
sub
jge
push
jne
xchg
int
push
xchg
outsb
mov
xlat
pop
jecxz
mov
arpl
mov
xchg
xor
add
dec
sbb
aam
fwait
push
orb
testb
cmpsl
test
out
nop
jno
aas
loope
icebp
xor
dec
pop
add
and
mov
std
push
ja
fs
push
repz
mov
arpl
jb
fmuls
mov
and
stc
jp
adc
sub
adcb
jle
xchg
add
and
std
mov
fptan
cmp
loop
jne
mov
sub
scas
call
mov
cmp
push
loopne
push
add
aas
jl
sub
mov
adc
stc
stc
int3
out
mov
scas
fldt
or
pop
xor
ss
aad
jge
test
sbb
jo
inc
fistpll
xorl
jp
sbb
xchg
cmpsl
cmc
inc
outsb
mov
popf
jns
nop
dec
ja
test
pusha
aam
call
add
sbb
sbb
fsubs
cmpsl
repz
mov
xchg
bound
loope
push
mov
in
in
loop
test
adc
subb
daa
add
mov
add
jnp
icebp
pop
jecxz
push
int
fstl
adc
mov
inc
lds
xchg
addr16
es
fs
pop
xor
inc
out
movb
daa
out
sar
loopne
mov
push
sbb
mov
cmp
sbb
js
sarb
jnp
dec
adc
add
pop
scas
lret
push
or
xor
xor
push
sub
sub
cli
mov
inc
dec
in
mov
test
nop
mov
adc
sahf
xchg
push
mov
jge
jge
gs
ja
pop
pop
nop
push
mov
mov
and
fwait
or
stos
xchg
sub
repz
mov
xor
inc
cmp
mov
int3
pushf
push
imul
cmp
xchg
repz
scas
sub
xor
aaa
sbb
mov
cltd
out
in
inc
push
lret
xchg
sub
xor
sub
mov
xchg
adc
or
jns
fisubrs
mov
pop
leave
popa
fisubl
sti
push
jae
pop
pop
mov
out
loope
push
push
movsl
in
movsb
jo
ja
cs
sub
mull
xor
sub
iret
or
sbb
sbb
sbb
cmp
xchg
scas
loop
aam
ds
dec
jle
add
push
jecxz
shrl
pop
push
dec
pop
cmp
pusha
xchg
cmp
xchg
cld
or
lret
xchg
cwtl
mov
jp
mov
lahf
movsl
pop
add
inc
sub
nop
add
shrl
les
inc
cmp
mov
rcrl
xor
in
jae
or
scas
cmp
pop
call
test
fisttps
inc
pop
or
das
xorb
pop
adc
sbb
aas
js
push
add
adc
jmp
lret
adc
int3
fld
and
inc
jns
or
sub
xchg
fcoml
fsubrl
inc
js
sti
dec
sub
adc
loope
popf
jecxz
mov
xlat
adc
insb
cmp
stos
mov
push
push
and
add
and
sub
xchg
cmpb
dec
into
fistps
faddl
popa
xchg
jo
sbb
lods
mov
aaa
in
push
sub
call
stos
mov
sahf
std
inc
cmp
push
lret
mov
adc
movsb
bound
mov
inc
mov
push
mov
sahf
imul
dec
fnstenv
aaa
idiv
fisttpl
fucomp
sub
xor
xor
cmpsl
xchg
call
in
cwtl
popa
xchg
sarb
inc
inc
or
imul
pusha
int
jmp
push
dec
mov
jl
sub
sub
lods
dec
rclb
insl
mov
popf
xchg
jmp
push
cmp
cli
mov
or
repnz
jle
jne
mov
fsubl
xchg
dec
imul
std
popf
shrl
pop
push
orb
jmp
adc
push
sti
mov
cmc
vmovupd
xchg
shll
jb
lahf
mov
out
lahf
stos
mov
mov
scas
bound
inc
clc
sahf
jne
leave
jne
test
cmpxchg
jg
lahf
insb
xor
mov
cmpsl
mov
lcall
sub
push
or
fsubrs
icebp
dec
fwait
lret
iret
sbb
sub
sub
mov
clc
add
adc
push
pop
movsb
data16
mov
xor
repz
jl
xchg
insb
mov
ds
sub
jl
movl
add
shlb
cmp
push
adc
or
ffreep
mov
push
dec
je
stos
dec
adc
mov
add
arpl
mov
mov
lds
ja
sub
addr16
xchg
dec
rcl
add
mov
lds
push
clc
cs
sub
fnstsw
adc
inc
loop
inc
fwait
pop
subl
cwtl
pop
push
cmpsb
stos
cmpsb
and
fwait
out
and
ret
fwait
aas
inc
lds
in
in
scas
mov
mov
jb
sbbl
aad
frstor
cltd
lods
add
shlb
or
add
js
jbe
xchg
orl
rcl
nop
push
in
push
jnp
xor
popf
xchg
dec
add
mov
mov
and
pusha
in
lock
fnstsw
movsb
movsl
sahf
inc
std
xchg
sbb
add
dec
call
cmp
enter
fcomps
outsl
jl
xchg
mov
pop
pop
mov
imul
push
insb
jmp
add
notb
loopne
push
mov
push
add
inc
mov
aad
pop
jg
sub
stc
mov
inc
push
mov
scas
mov
mov
in
loope
cld
test
sbb
sbb
inc
or
cmp
mov
pop
cmp
shr
sub
xor
stc
push
repz
lret
jbe
jl
sbb
xor
sbb
adc
pop
insb
mov
stos
call
mov
xor
and
insb
inc
ja
shr
rorl
fistpl
movsl
push
gs
mov
das
hlt
std
lock
inc
mov
rorb
in
enter
mov
xchg
sub
lods
add
cmp
movsb
ret
adc
mov
mov
imul
mov
stos
shll
pop
into
sub
add
push
inc
mov
jecxz
icebp
bound
popf
adc
or
adc
roll
cli
add
sahf
mov
pop
xchg
dec
loope
cmpsb
and
loope
push
stos
outsb
add
mov
push
push
or
in
dec
mov
dec
sbb
fmul
dec
shl
pop
frstor
add
in
sarb
out
outsl
mov
out
fwait
repz
jo
push
int3
lret
pop
or
mov
int3
sub
dec
adc
leave
jnp
les
xor
test
cmc
xor
in
sub
inc
xchg
lahf
add
sub
es
lcall
push
cmp
push
pop
sub
out
add
rclb
sbb
dec
add
addr16
sub
mov
adc
cltd
insb
mov
inc
or
lret
mov
fsubr
sub
dec
ret
lock
mov
lret
cmc
test
leave
jbe
sti
adc
add
imul
dec
push
std
bound
sbb
mov
lods
adc
jns
mov
xchg
bound
popf
mov
or
cmp
adc
es
jmp
jl
or
nop
inc
mov
xchg
cmpsb
dec
shr
jbe
imul
das
lods
insb
cltd
call
sahf
jne
push
cld
mov
imul
mov
data16
cmp
adc
loopne
addr16
pop
push
mov
out
or
in
lock
enter
jg
xlat
imulb
mov
movsl
xor
shlb
xor
mov
loope
adc
mov
inc
jne
adc
jo
jmp
stos
dec
data16
das
and
gs
pcmpgtd
push
inc
push
ja
cmp
mov
dec
inc
pop
insb
inc
in
cwtl
inc
sub
push
inc
ret
jbe
in
pop
jl
or
fcmove
or
xor
mov
leave
int
je
nop
mov
pusha
hlt
fbld
ja
aam
dec
stos
int
cmp
cmp
fsubrs
inc
pop
jg
cmp
mov
inc
jae
push
and
cmc
icebp
movsb
scas
pushf
pop
cmpsl
xor
mov
insb
leave
test
je
fisubrl
pop
mov
push
add
sub
jb
mov
ss
cmp
loope
sbb
mov
inc
fcoms
arpl
inc
fwait
pop
mov
dec
lret
imulb
xlat
loopne
pop
dec
fisttps
xchg
shrl
mov
aam
pop
mov
test
mov
fwait
jmp
add
test
in
lahf
mov
xchg
ljmp
pop
hlt
jae
fistpll
jo,pt
inc
in
pop
imul
xor
adc
jns
sbb
sbb
out
push
push
shrb
das
lods
xchg
push
nop
in
hlt
lcall
fidivl
test
movsb
loop
sub
ljmp
jmp
jnp
add
repnz
push
jo
rcrl
mov
sti
loop
insb
pop
mov
pop
jno
cli
push
pop
cwtl
mov
dec
jl
gs
jnp
sahf
inc
adc
or
int
mov
mov
and
into
fistl
cltd
add
inc
mov
std
cmc
or
dec
or
pop
popa
mov
sub
push
lret
jecxz
mov
or
test
lcall
cmp
test
fwait
leave
mov
fldl
pop
dec
jne,pn
leave
pop
xor
xorl
mov
mov
pushf
and
jle
xchg
pop
pop
pop
xchg
subb
test
xchg
shrb
fstl
popa
pushw
jbe
out
fwait
jno
fadds
ss
mov
rolb
arpl
or
push
xchg
mov
js,pt
bswap
or
jmp
jmp
les
andl
mov
cmpsb
mov
inc
push
jle
mov
or
pop
jge
xor
jnp
push
bound
push
mov
jo
and
pop
xlat
iret
popa
jmp
hlt
in
add
fidivrs
std
xor
test
push
je
cmp
inc
cmc
inc
jne
sub
jecxz
call
popf
push
xchg
addb
push
scas
nop
pop
mov
or
fidivs
fmull
adc
xchg
fistl
xchg
cmpsb
hlt
pop
cmc
cmp
mov
in
jmp
jge
or
movlps
jne
sbb
pop
data16
push
insb
sahf
mov
cmp
dec
nop
mov
xchg
lock
cmp
mov
test
adc
sub
mov
out
xlat
fs
orb
test
or
lods
push
outsl
add
outsb
call
sbb
mov
add
repnz
sahf
inc
dec
push
mov
mov
arpl
nop
add
add
out
xchg
inc
and
pusha
mov
and
jp
fstps
push
out
ds
dec
dec
arpl
mov
inc
dec
ds
lds
xor
pop
lret
pop
test
scas
dec
mov
jecxz
mov
push
xor
pop
jge
fnsave
or
ret
outsl
fnstcw
xchg
fbld
lods
in
cld
inc
mov
jmp
or
pop
push
sbb
pusha
xor
add
push
or
pop
or
aas
in
gs
popa
lds
jbe
inc
imul
mov
mov
add
sarb
inc
lods
jmp
pop
loop
out
hlt
xor
pushf
clc
mov
lea
int3
stc
orb
sahf
ficoms
dec
dec
loop
jge
dec
inc
insb
mov
mov
mov
dec
insl
sub
inc
cltd
lahf
sub
hlt
aam
and
mov
out
enter
mov
rcrl
and
dec
mov
push
dec
push
adc
jp
cwtl
movsb
dec
sub
jmp
jne
inc
or
mov
lea
mov
insb
into
aas
test
fcomp
xchg
lret
sbb
dec
lds
dec
add
lds
xor
push
mov
jmp
nop
fidivrl
add
in
push
adc
mov
inc
fidivs
addb
fidivrl
ror
testl
sub
jmp
dec
mov
cmpsb
mov
fwait
push
fsubrl
mov
clc
push
insb
lret
push
lods
repnz
shlb
lods
mov
or
aad
leave
xchg
aad
inc
mov
dec
sbb
inc
cltd
xchg
xor
jl
stos
xchg
adc
movsl
inc
lahf
faddl
test
push
dec
mov
test
inc
sub
js
lock
scas
jle
fcoms
and
lcall
sbb
jne
leave
cmpsb
pop
ss
xor
insb
stos
mov
repz
pop
cs
call
je,pn
je
xchg
mov
push
mov
movsb
out
inc
stos
shr
and
and
fcoms
mov
aam
pusha
xor
daa
pop
ljmp
bound
aas
dec
lods
mov
cmp
enter
sub
movsl
mov
mov
inc
fsubr
movsb
xor
xor
fs
sarb
jmp
fs
int3
call
call
mov
inc
lods
or
mov
call
and
inc
aam
cmp
insl
andb
movsl
cmp
cld
sbb
mov
bound
mov
pop
stos
loop
or
mov
call
mov
push
decb
adc
inc
pop
sbb
cs
stos
mov
icebp
mov
icebp
lret
add
adc
xor
xor
inc
ret
xchg
rclb
cmp
rcrl
fisubrl
clc
cli
or
pop
sub
cmp
js
ss
lods
jb
and
lret
push
xor
subl
repz
add
mov
and
and
test
mov
cmp
mov
cmc
iret
rolb
imul
jle
or
repnz
and
sarb
insl
dec
out
shrl
enter
sbb
pop
pop
adc
addr16
mov
mov
daa
ds
mov
into
std
mov
loope
sbb
cmc
add
inc
push
sti
inc
dec
mov
mov
cmp
push
pusha
stc
or
cmc
jecxz
and
icebp
push
mov
inc
int3
dec
jmp
xor
mov
add
outsl
sub
add
jb
adc
inc
jnp
aaa
dec
out
in
stc
ja
mov
cmp
rorb
mov
pop
or
cli
xor
adc
sub
mov
or
xor
lock
in
jno
mov
push
sbb
push
or
xchg
mov
lock
xor
push
shrl
push
sahf
and
movsb
outsb
popa
stos
and
es
jl
mul
addb
xor
rol
fwait
lock
cmpsl
cmp
and
daa
in
pop
sub
sub
cmp
jnp
imull
les
push
sbb
sub
outsl
daa
push
mov
enter
movsl
pslld
std
subb
sbb
cli
sbb
ljmp
addr16
movsb
inc
dec
mov
mov
pusha
test
cmp
gs
test
and
out
sbbb
lods
imul
in
sahf
inc
pop
pop
jmp
xchg
jns
lods
out
xchg
mov
adc
aam
adc
jb
sbb
sub
pop
xor
lock
repz
sub
jne
jge
aad
scas
jl
jg
pop
mov
mov
pop
push
repnz
add
jecxz
lods
inc
repz
out
js
add
inc
sub
ds
dec
mov
push
sub
or
push
aad
push
sbb
dec
out
int
notl
jecxz
cmp
ja
incb
cli
imul
lret
add
push
rclb
arpl
mov
mov
adc
mov
aad
jp
sub
cmc
mov
call
stos
cld
arpl
popa
push
fmuls
into
cmp
xor
sbb
sbb
scas
out
xor
pop
fs
hlt
ss
pop
jae
xor
mov
xchg
jge
cmpl
cwtl
iret
jns
das
js
stc
cli
xor
add
call
push
insl
sub
jl
or
cmp
or
jns
arpl
adc
mov
popa
sbb
mov
in
mov
push
rolb
fmuls
cmpsb
jb
fadd
stc
iret
dec
sub
stos
cmp
mov
xchg
bound
add
decb
xor
sub
inc
dec
dec
test
inc
mov
das
or
sti
lods
imul
xor
je
divl
repz
fwait
int
mov
adc
jne
dec
dec
loop
xor
ret
inc
cmpb
jle
pushf
lret
adc
loop
mov
push
stos
and
or
popa
mov
popa
sub
jle
cmp
mov
mov
ljmp
mov
enter
inc
cmp
xor
cld
cli
int
mov
aaa
jmp
aaa
mov
stos
add
dec
daa
mov
sub
inc
adc
jecxz
fstpt
mov
and
sti
sarl
in
xlat
popl
or
mov
out
in
pusha
lds
push
xchg
xor
aaa
ficompl
fldcw
out
cmpsl
hlt
mov
dec
fsts
in
push
subl
and
outsl
cmp
add
adc
jmp
jae
jl
cld
inc
mov
xor
pop
rcrl
lcall
js
or
imul
std
movsb
jle
add
jp
cli
idivb
add
int
iret
int
pop
fs
push
fildll
dec
add
push
ss
pop
inc
sahf
mov
mov
lods
out
sahf
pop
jle
inc
sbb
xchg
inc
imul
dec
fwait
dec
lahf
jae
enter
cltd
xchg
iret
stos
sbb
sbb
push
sar
xor
lret
sub
ljmp
leave
repnz
xor
jmp
xlat
in
ljmp
xchg
out
sub
repnz
jb
dec
fnsave
and
aaa
pop
subb
mov
sbb
in
add
ds
fcomps
js
sub
add
mov
adc
cltd
outsl
popa
mov
inc
pusha
sti
out
imul
popa
xchg
jo
andl
lret
mov
cltd
test
sbb
aam
shll
pop
xchg
mov
jbe
lahf
ret
pushf
mov
lret
sti
fdivs
xchg
adcb
xor
enter
or
sub
pop
xor
push
test
jo
sub
cmpsl
mov
cmc
jbe
shl
xor
pop
sub
cld
out
sti
pushw
adcl
shr
or
xlat
fistl
sbb
push
sub
sbb
rcrb
dec
mov
jne
scas
cmp
inc
addr16
lods
dec
fsubrs
push
xchg
ss
xchg
adc
scas
test
pop
mov
orb
xchg
rolb
jns
jge
mov
sbb
mov
rolb
call
mov
push
sub
or
and
mov
xor
roll
mov
xor
enter
mov
enter
insb
rcrl
das
dec
pop
notb
mov
or
mov
repnz
adc
fildl
sbb
pushf
inc
in
sub
fimull
xchg
mov
push
mov
test
inc
fnstenv
sub
out
fistl
mov
mov
loopne
call
push
mov
mov
rol
rorl
loope
xchg
les
shrl
and
int3
sbb
sarl
xchg
sbbl
and
stc
push
and
jnp
jmp
inc
lods
lahf
in
ss
mov
jns
fstps
lret
jp
inc
popa
jmp
or
lea
int3
mov
mov
dec
stos
add
mov
inc
sbb
and
call
fcmovb
daa
push
jb
sahf
addr16
mov
outsl
mov
hlt
sbb
rclb
add
or
sahf
std
pop
jnp
dec
pop
cli
in
push
movsl
popf
and
dec
jbe
stos
jne
andl
mov
mov
out
sub
test
fxch
inc
mov
lods
pop
sti
arpl
pusha
sarb
jbe
test
xorb
js
les
xchg
loope
cmp
pop
cwtl
sub
xor
aas
jbe
sar
xorl
sahf
sub
jmp
push
lret
iret
inc
out
in
stos
push
and
lcall
insb
mov
mov
push
pmaxsw
lock
lods
aam
inc
sahf
mov
pushf
sub
xchg
movsb
pop
insl
enter
jns
sub
dec
xchg
das
xor
insb
dec
jbe
cmc
lock
je
cwtl
cs
js
xor
mov
jp
iret
cmpl
lret
mov
mov
imul
cltd
lods
jecxz
aam
hlt
push
xor
sub
lods
cmp
jb
mov
adc
subb
cld
shlb
enter
fnstcw
rcll
push
xor
cwtl
call
in
cmp
cmp
and
xchg
inc
jg
push
mov
mov
xor
pop
fldl
adc
cmp
pop
sbb
dec
testl
xchg
xchg
and
fildl
cwtl
out
je
sbb
stos
sahf
dec
iret
dec
stos
ret
pusha
adc
stos
jae
movsl
mov
adc
mov
xchg
sub
mov
aad
cli
xchg
ffree
cmp
and
jne
iret
xor
call
enter
mov
xchg
xchg
shrl
leave
jge
lods
dec
sbb
mov
push
sbb
fistpl
in
ret
fisttpll
mov
jnp
cmp
iret
dec
push
cmp
jbe
adc
push
push
sub
push
cmc
pop
mov
jno
enter
mov
sub
sub
dec
xor
jg
mov
out
insb
stc
dec
mov
mov
addr16
loope
mov
add
int
je
pop
sub
es
jl
pop
mov
popa
js
popa
mov
mov
pushf
mov
popf
or
cmp
xchg
sub
xchg
mov
pop
jnp
sbbl
push
arpl
icebp
sub
test
nop
adc
jle
scas
in
int3
das
sbb
test
loope
inc
or
push
sbb
xchg
pop
jmp
aaa
fdivrl
ret
mov
cmp
rclb
mov
lods
stos
ljmp
cwtl
mov
outsl
push
pop
cld
mov
pop
inc
das
lcall
int
or
mov
push
mov
dec
add
and
in
jnp
jae
aas
add
stos
mov
stc
xlat
loop
adc
roll
dec
xchg
xchg
bound
sub
lea
out
mov
adc
test
int
aaa
sbb
loop
add
or
popf
cld
push
jg
mov
adc
mov
mov
daa
in
arpl
push
les
adc
sbb
ds
push
imul
dec
or
xor
movsl
fidivl
aad
jecxz
xor
sbb
sub
push
clc
fsts
mov
mov
mov
jmp
mov
jne
cvttps2pi
stos
sub
sbb
add
xorb
mov
lds
xchg
loope
add
dec
jno
out
mov
or
or
push
cmc
cmp
mov
or
or
push
inc
shlb
adc
inc
mov
out
push
jge
das
adc
mov
cmpsb
jecxz
jae
dec
aad
pusha
rolb
rcrb
add
mov
xor
mov
js
inc
mov
test
outsb
sahf
xor
jo
adc
imul
cwtl
lea
or
xchg
fildl
nop
movsl
faddp
add
fnsave
push
lcall
test
aaa
daa
mov
or
cld
int
mov
mov
rcll
rcrl
push
ficomps
cmp
icebp
push
pop
jle
sub
push
add
pop
in
adc
nop
cmp
inc
mov
fildll
fildl
dec
into
inc
in
or
push
stc
pop
push
dec
jae
pushf
lret
add
sbb
pop
arpl
std
aas
inc
call
add
sahf
in
fmull
inc
add
rorl
xor
or
lfs
inc
mov
cmp
leave
mov
pop
mov
sbb
push
dec
or
out
jl
sub
mov
lods
xor
cli
test
inc
cld
movsb
idivb
jle
push
pop
aaa
les
xchg
iret
adc
sti
cmp
lret
xchg
mov
dec
xchg
push
xchg
int
xchg
cltd
xchg
xchg
enter
mov
aam
inc
aas
jecxz
mov
push
or
xchg
or
jo
popf
cmp
mov
test
jl
jp
jne
push
sbb
test
sahf
pop
rcrb
shr
addr16
mov
sbb
rorb
add
mov
add
add
mov
jo
pop
mov
pop
pop
pop
aas
jno
inc
aaa
or
aad
mov
ljmp
lret
push
sbb
sbb
shll
test
sub
push
outsb
xchg
mov
dec
movsl
jae
aad
pop
fchs
sub
xchg
lds
mov
scas
and
pop
push
dec
mov
shrl
or
icebp
cmp
orl
adc
cmp
cmpsl
fidivl
daa
cmp
fistpl
clc
cwtl
pop
mov
rol
cmpsb
ds
push
pop
xchg
xor
add
rorl
jns
imulb
fwait
test
stos
xor
lea
and
lock
loope
cmp
bound
out
xchg
dec
std
icebp
cltd
lret
xchg
push
mov
push
sbb
popa
mov
dec
push
add
jno
jle
imul
push
pmulhuw
cltd
mov
cmp
aam
xor
into
ds
lea
lret
ds
cld
inc
aaa
mov
sub
stos
sbb
mov
sbb
jl
jge
dec
sti
bound
ss
ja
sbb
mov
andl
pushl
aad
mov
push
sbb
mov
mov
dec
andb
les
int
andl
sbb
testb
push
mov
push
push
adc
pop
mov
cmp
add
out
mov
flds
bnd
ja
inc
or
jbe
sahf
fwait
xor
es
jmp
adc
pop
lcall
add
mov
mov
dec
dec
pusha
inc
jmp
xchg
mov
or
push
std
gs
lods
xor
movsl
sub
xchg
cltd
sarl
mov
xor
popa
inc
inc
xchg
pxor
aaa
sbb
cmp
loopne
adc
or
loop
cmp
test
mov
mov
outsl
sbb
enter
stos
cltd
lcall
dec
mov
out
mov
fcomps
inc
xor
xchg
adc
add
fadds
cmpsb
dec
jno
test
pop
sarb
fisubrl
inc
lods
pop
std
out
push
xlat
dec
push
sti
mov
outsb
push
mov
mov
aam
push
stos
mov
push
mov
testl
stos
out
mov
stos
push
ljmp
out
repz
xchg
pop
add
mov
inc
aad
clc
adc
push
jge
xchg
sar
inc
sbb
lds
jbe
rcrb
pushf
xchg
mov
and
mov
out
cld
sbb
inc
sbb
push
in
movsl
xchg
and
pop
fs
lret
int3
test
outsl
push
push
lret
push
bound
mov
dec
push
cmp
xor
pusha
inc
ds
into
bound
push
sbb
cmpl
jb
int
mov
sahf
in
data16
adc
and
push
jae
add
arpl
mov
add
test
mov
pop
sub
aam
pop
or
xlat
mov
xor
xor
out
dec
scas
jl
cmp
fs
insl
and
lds
loop
movsl
mov
jecxz
cmp
cmp
jnp
mov
lret
sub
mov
in
mov
fsts
gs
dec
xchg
and
repz
xor
lods
fs
int
push
push
test
push
inc
ljmp
daa
std
imul
jne
sub
sbb
or
jg
cmp
dec
push
in
hlt
mov
pop
push
xor
shr
mul
lea
test
and
lods
dec
fldlg2
test
add
push
mov
adcb
push
adc
xchg
inc
imul
aas
jne
mov
fwait
inc
sti
adc
jl
jns
cltd
into
pop
scas
mov
jge
inc
push
mov
inc
iret
movsl
jle
cmp
mov
cli
inc
mov
jge
sahf
test
mov
adc
sbb
call
shrb
fisttpl
add
cmpsb
mulps
mov
movsl
addl
sarl
cwtl
out
jo
aaa
mov
in
and
push
ss
jp
xchg
add
pop
ret
mov
add
cmp
ror
jmp
sbb
dec
push
mov
and
sarl
imul
fs
sbb
jno
into
imul
pop
or
mov
sarl
mov
cmp
aam
mov
pop
dec
sbb
outsl
mov
ficoml
and
jecxz
mov
movsl
xlat
rcrb
in
lcall
leave
notl
mov
dec
push
std
add
sti
fidivrs
rorl
mov
sub
and
gs
pop
neg
subb
xor
xor
test
mov
push
cmpb
cmpsb
mov
push
iret
jne
ficoms
adc
adc
jo
xchg
xor
movb
or
scas
xchg
adc
jns
scas
push
sbb
sub
pop
lahf
cmpsb
jmp
xchg
subb
in
pop
out
ja
scas
pop
cs
xchg
push
imul
int3
sub
mov
lahf
enter
lds
adc
stos
lea
addb
push
daa
je
lods
in
push
loopne
push
int3
popa
xchg
sbb
jnp,pt
add
js
fwait
loop
movsb
nop
mov
jno
das
mov
hlt
inc
sahf
push
sbb
cmp
cltd
into
push
gs
mov
add
scas
mov
movsl
sarb
pop
cmp
pushf
xor
idiv
iret
jl
lods
loop
push
mov
mulb
cs
insb
jp
dec
sub
add
enter
jbe
push
cmp
xchg
popa
fstpt
fildll
dec
ret
or
add
repnz
add
cs
push
test
jmp
inc
icebp
xlat
movsb
mov
sub
adc
aas
pop
stos
dec
ret
popa
fwait
int
inc
dec
cmp
ret
xlat
mov
in
xchg
cld
xchg
pop
jmp
fiadds
out
lahf
dec
push
dec
sbb
adc
sub
aad
scas
leave
mov
sub
sbb
push
cmc
pop
lret
popl
jg
dec
push
movsl
popa
cmpsl
enter
movsl
mov
mov
outsl
jmp
sub
push
imul
fiadds
cmp
jns
dec
cmp
add
adc
dec
cwtl
repnz
in
stos
add
fs
das
or
notb
pop
rcr
push
nop
xor
shlb
loop
outsl
int3
jns
stos
les
mov
lcall
mov
and
andl
and
aam
ja
fs
cli
pop
add
jo
jge
fdivs
js
push
stos
sbb
cmp
scas
xorb
jmp
arpl
and
loope
stc
lahf
mov
dec
es
nop
adc
and
test
push
insb
sub
xor
jno
in
lea
movsb
scas
ret
sub
pop
and
jp
xchg
jo
adc
push
or
pop
jnp
fisubrs
xor
xlat
sub
es
jmp
jbe
imul
dec
xchg
sub
adc
ror
test
sub
vmwrite
inc
push
lods
jbe
mov
fistpll
cli
les
loopne
jnp
sarb
fstpt
repz
sub
bound
iret
in
jle
pop
lret
inc
pop
dec
fisttps
mov
and
stos
popf
out
popa
cli
push
mov
lahf
lea
stos
roll
outsl
dec
mov
imul
or
sar
ret
jle
jae
test
pop
popa
arpl
push
sbb
and
xchg
push
xchg
in
cmp
cmp
jecxz
add
daa
test
enter
mov
mov
aad
or
addr16
lds
je
dec
dec
aam
mov
xchg
das
cmp
sub
jo
inc
dec
ret
movsb
dec
shrb
test
outsl
dec
insl
lea
xchg
mov
mov
push
movsl
bound
and
iret
xchg
lcall
pop
sahf
sub
jmp
fisubrs
and
loope
data16
insl
lret
fs
xchg
sbbl
loope
cmp
push
lock
jecxz
leave
and
adc
push
mov
in
fmull
cs
in
cmp
mov
aaa
fstpl
push
lock
loope
mov
adc
dec
jle
mov
push
fld1
int3
jp
mov
mov
mov
inc
mov
pop
stos
add
cmp
out
in
pop
out
out
inc
test
inc
aaa
pusha
xor
sbb
test
jno
mov
negb
in
push
pop
dec
xchg
add
sarb
mov
or
out
or
push
std
ja
dec
loope
mov
adc
mov
push
sahf
pop
bound
gs
pop
aaa
pop
aam
aaa
mov
mov
rorb
mov
scas
mov
jae
inc
inc
sbb
pop
sbb
aam
inc
aam
pusha
outsb
dec
sbb
aad
inc
mov
or
clc
xchg
cltd
add
ja
xchg
sub
divl
lahf
add
pop
mov
call
fsubrs
in
add
jmp
sti
jno
mov
loope
dec
jb
sub
pusha
cmp
imul
leave
adc
push
pop
push
loopne
fs
push
je
dec
int
outsl
gs
cmp
dec
lea
pop
mov
lret
jbe
cmp
scas
mov
loope
out
mov
out
mov
mov
loopne
mov
jl
mov
jo
rorb
lahf
dec
cmc
testb
loopne
mov
sub
loopne
jp
add
mov
xchg
and
in
adc
add
test
shlb
aas
scas
jae
pop
and
mov
shlb
mov
fiadds
sub
inc
or
sbb
ficoml
add
decl
faddl
out
adc
or
xchg
jb
in
fstpt
push
sub
call
push
outsb
or
inc
aaa
mov
cltd
cli
cmp
jl
jne
jmp
pushf
mov
mov
push
adc
hlt
cltd
insb
mov
push
push
adc
fcom
pop
add
and
sbb
jmp
cld
cmp
or
cli
sbb
imul
es
mov
rclb
xor
out
mov
mov
lods
xchg
dec
decb
fisttps
test
xchg
cmp
mov
fdivl
iret
cmpsl
cmp
and
movsl
pusha
inc
mov
push
outsl
and
add
or
ja
lds
pop
mov
lods
adc
xor
pusha
loope
fwait
mov
cmp
test
outsl
inc
aam
imul
clc
fisttpll
push
ds
clc
addr16
subb
in
or
adc
aam
je
lea
clc
xchg
jnp
outsl
or
ss
dec
dec
int
inc
jae
add
fsubrl
repz
jmp
dec
addr16
jb
in
mov
ret
inc
xor
mov
push
adc
xor
ds
push
pop
test
adc
mov
sahf
add
xchg
int
mov
sbb
test
mov
xor
adc
mov
pop
sbb
or
lcall
out
int3
adc
je
adc
std
repz
std
icebp
inc
push
pop
xor
sub
dec
lret
adc
subb
pushf
icebp
sbb
sarb
cwtl
cmp
xor
mov
in
ds
jl
repnz
hlt
dec
cmp
xor
sahf
icebp
clc
jg
lahf
sbb
movsl
and
push
xchg
test
insl
mov
cmp
dec
or
xchg
dec
ss
movsb
cmp
xlat
add
sub
icebp
cld
dec
movsb
push
call
xchg
jnp
inc
fldcw
loop
xorb
lret
adc
pop
ljmp
and
out
loope
ret
jp
pop
fcmovnu
inc
cmpsl
sub
aam
js
mov
jle
loopne
add
mov
mov
xchg
jecxz
dec
pop
repz
mov
dec
mov
lcall
mov
movnti
pop
cld
mov
mov
or
sbb
pop
cbtw
dec
in
frstor
mov
xor
cmp
rcrl
orb
cmp
shr
jb
mov
xchg
push
jbe
push
push
lds
xor
test
fistpl
cld
push
and
cmpb
ds
xchg
hlt
call
cmp
pop
sub
imull
lods
add
push
sub
pop
aam
pushl
sbb
js
inc
inc
jmp
inc
and
clc
scas
xor
xor
ja
sub
stc
and
mov
pop
dec
roll
movsb
aaa
and
je
jne
xchg
xor
lods
push
cli
cwtl
pop
cwtl
sbb
xor
mov
push
jno
test
sbb
xchg
scas
xchg
test
arpl
int
mov
xchg
push
ret
cmp
or
hlt
shll
lods
push
arpl
cmp
aam
cmpsb
pop
mov
jmp
and
sbb
add
push
inc
cld
jmp
add
push
cmp
js
or
pop
pop
das
mov
mov
leave
roll
mov
test
and
cmp
mov
outsb
jmp
test
xlat
push
int
push
shlb
cwtl
imulb
aas
jne
pop
and
jecxz
rcll
sbb
cmp
repz
xor
daa
adc
aaa
out
in
rcll
das
push
in
dec
sbb
push
mov
sbb
subb
mov
mov
mov
sbb
decl
lds
pop
push
xor
in
sarb
fnstsw
add
out
movl
xor
jmp
notb
jle
sbb
cmp
and
xorl
mov
lahf
xor
test
dec
lret
int3
outsl
hlt
mov
push
lcall
or
mov
movsl
scas
xor
test
call
cmp
movsb
repnz
pusha
xchg
js
ret
cmp
leave
pop
pushf
insl
xor
aas
out
push
mov
cmp
pop
loop
sbb
fdiv
or
mov
add
xorl
xor
jle
mov
subl
mov
in
mov
and
loop
inc
outsl
pop
mov
jmp
loope
adc
sbb
repz
xchg
leave
jmp
hlt
jns
mov
scas
sbbb
clc
or
loopne
ds
fidivl
sbb
pusha
mov
negb
aad
movsb
push
test
mov
fwait
pop
pop
add
sbb
xchg
divb
xchg
push
inc
mov
test
push
scas
adc
fptan
mov
shr
dec
push
add
ja
dec
stos
adc
loop
ftst
test
push
insl
push
pop
movsl
sti
mov
pop
and
sarl
jns
jp
insl
lahf
repz
lcall
jno
leave
inc
rcll
push
shll
adc
adc
jns
xchg
or
adc
and
sbb
movsb
sbbl
and
xsavec
pusha
stos
lods
jmp
insl
sbb
or
adc
lcall
or
movsb
inc
dec
test
sbb
es
mov
or
sub
movsl
mov
ror
mov
dec
cwtl
js
mov
sub
out
std
test
imul
mov
xor
call
jae
into
rcll
lock
mov
xchg
dec
sub
cmp
mov
push
inc
adc
push
ja
fsubrl
mov
imul
inc
mov
in
inc
cmp
iret
jecxz
pop
jnp
out
mov
ret
rclb
outsl
or
test
add
psubusb
or
cld
pop
xor
movsl
push
mov
dec
push
mov
and
mov
repz
jecxz
mov
test
cmp
int3
icebp
roll
cli
sub
xor
in
loope
jbe
mov
sbb
lds
inc
fs
sbb
jmp
push
inc
dec
call
inc
lea
adc
out
lds
cmpsl
add
test
dec
mov
clc
stc
adc
rcl
movsb
cmpsl
mov
rcrb
xchg
xchg
bound
leave
xchg
repz
scas
ljmp
orb
xchg
xlat
pop
or
mov
pop
inc
mov
add
push
pop
mov
stos
mov
mov
dec
dec
fcoml
inc
push
in
stc
push
rol
push
cmp
into
sub
aaa
iret
cmp
in
or
dec
and
inc
dec
mov
in
les
or
jmp
aas
out
into
mov
dec
push
out
mov
lahf
roll
jg
dec
iret
enter
sbb
mov
fsubl
mov
dec
sahf
sahf
sarl
and
adc
mov
gs
dec
int3
test
or
xchg
push
xor
xor
aaa
outsb
add
shlb
push
std
mov
test
mov
mov
in
ret
mov
leave
inc
inc
jo
sbb
cwtl
mov
lds
sub
les
out
shll
and
lret
fnstenv
push
out
mov
mov
mov
mov
out
cmp
loop
fdivr
movsb
out
sub
mov
jge
push
cld
shlb
push
sub
adc
ret
or
adc
cmp
and
mov
pop
cmp
inc
imul
fidivrl
sub
jbe
les
les
pop
pushl
fwait
lcall
jecxz
sahf
inc
pushf
mov
add
es
testl
mov
and
sub
mov
inc
inc
cmpsb
imul
xor
movsb
movsl
sbb
cmp
or
jg
int3
mov
mov
in
dec
ljmp
out
cmc
ja
jnp
inc
cmpsl
cwtl
sub
enter
push
push
sbb
das
xchg
ret
push
leave
adc
in
xchg
adc
pop
pop
add
adc
and
fsubrl
cmp
dec
adc
test
cltd
dec
test
dec
pop
and
and
ror
xchg
inc
rcll
jbe
gs
loopne
push
test
imul
and
andl
lret
nop
add
repnz
adc
insl
stc
pushf
es
add
and
pop
mov
aad
popa
lret
leave
jnp
and
cld
mov
jno
rsqrtps
loop
testl
imul
icebp
lea
xchg
shr
or
mov
jecxz
fisubrs
lret
jmp
or
imul
sub
and
outsl
sub
and
cltd
mov
sbb
insb
in
stos
popa
aas
and
leave
jno
lods
push
fbld
fistps
inc
adc
enter
ss
sub
dec
and
mov
aam
mov
bound
push
and
sbb
shlb
push
xchg
pushf
jae
fdivr
aaa
in
mov
out
xor
add
adc
out
bswap
pop
inc
sbb
nopl
push
add
shlb
cli
fadds
adc
push
cmp
testb
fadd
out
and
inc
cmp
lds
sti
jbe
into
test
loop
stc
xchg
jae
mov
and
out
add
add
in
loopne
sub
pop
jp
mov
jns
xchg
dec
rclb
movsb
insb
jg
inc
jb
jnp
imul
xchg
add
hlt
inc
fsts
sub
sub
sarb
or
nop
pop
jno
movsb
mov
jbe
daa
pop
or
test
cmpsl
fldt
sbb
fwait
cmp
and
push
lds
jb
mov
jae
push
mov
test
andl
daa
repz
inc
and
clc
nop
adc
push
call
call
lahf
lock
jbe
icebp
jbe
xchg
rcll
xorl
lret
lcall
push
jno
push
cmp
dec
shrb
cmpsb
popa
sub
in
stc
pusha
pshufw
arpl
std
shrb
pop
inc
ljmp
and
out
gs
addr16
int
ficomps
sbb
ss
jg
ret
inc
xor
and
xchg
mov
lret
xchg
es
sar
adc
pop
sub
test
test
xlat
cld
mov
sub
mov
nop
hlt
test
sbb
je
dec
loopne
clc
repz
or
push
add
push
mov
add
pushf
orl
sbb
popf
push
loopne
and
mov
es
add
cwtl
adc
rorl
rorl
mov
lock
sub
icebp
mov
or
outsl
fcompl
movsb
or
dec
insl
push
jnp
cmp
xchg
lds
mov
imul
or
xorl
jle
jge
xchg
or
mov
inc
push
cmp
inc
jne
sbb
jae
mov
lea
insl
mov
popa
insb
and
frstor
aad
mov
pop
pop
pusha
dec
jge
push
in
jne
add
pop
push
mov
inc
data16
inc
cmp
and
and
cmp
mov
pop
movsl
jecxz
test
imul
mov
enter
lea
inc
loope
dec
dec
jmp
dec
push
sbb
je
test
push
stos
mov
push
icebp
movsl
and
add
outsb
fadds
outsl
and
in
xchg
add
jns
in
popa
push
cmp
pop
loope
das
aaa
mov
lcall
sub
stos
hlt
push
mov
cmp
mov
clc
adcl
popa
call
push
fsubrs
mov
stos
iret
je
aam
push
mov
xchg
sti
or
outsb
cmpsb
imul
rcr
sub
andl
mov
jnp
lds
jbe
jae
jge
ljmp
popf
sar
sahf
xchg
cli
ljmp
imul
xchg
jb
pop
dec
mov
pop
fdivl
fucom
js
cmp
push
rcrl
cld
mov
sub
int3
and
jle
push
mov
mov
jno
mov
add
jmp
test
fwait
cld
dec
inc
lret
cmp
in
xchg
pop
push
mov
adc
outsl
std
cwtl
cltd
mov
add
dec
int
lret
jns
fidivs
and
addr16
test
sub
cmp
mov
aaa
push
mov
pop
and
faddp
mov
mov
dec
sub
adcb
push
and
push
bound
loopne
out
dec
mov
out
jge
xor
in
mov
sbb
xchg
dec
test
sub
ljmp
inc
arpl
jbe
pop
lods
pop
mov
inc
cld
and
push
mov
lret
mov
adc
outsb
sub
jnp
test
jno
nop
rcr
add
subl
ljmp
adc
das
jae
mov
xchg
and
sarl
shrb
xchg
dec
add
cmp
call
pushf
dec
or
sub
jo
or
and
mov
in
arpl
ds
cwtl
dec
daa
dec
std
push
repz
icebp
xor
je
leave
xor
mov
test
sarb
scas
out
mov
mov
inc
mov
xor
xor
sub
and
fcoms
pop
mov
mov
mov
fs
dec
test
stos
xchg
xchg
mov
sub
das
cs
loop
cmp
pop
les
std
or
aad
shrl
shrl
call
pop
lea
push
jns
fidivs
call
stc
adc
jl
pop
arpl
data16
push
push
mov
dec
mov
xor
inc
or
or
adc
pop
dec
ret
mov
out
inc
push
loope
loop
daa
test
aas
scas
das
notl
outsb
fbstp
xlat
or
and
add
test
sbb
lret
jmp
cmp
outsb
dec
cwtl
fucomp
es
xor
push
sub
xchg
sbbl
pop
mov
movsl
ljmp
inc
jns
mov
add
pop
iret
mov
mov
and
adc
movq
pop
push
jb
sub
outsb
sub
jno
orl
out
lret
ja
dec
andb
movsb
setl
loop
jmp
inc
insb
jg
sbb
add
lret
mov
jecxz
xor
or
nop
ja
push
adc
xor
xchg
jns
cmpsb
and
adc
test
test
dec
je
mov
insb
and
pop
push
clc
push
dec
or
inc
shrb
jmp
jns
xor
mov
daa
dec
fstps
gs
je
xor
stc
xchg
xchg
xor
xchg
inc
mov
mov
inc
aaa
or
js
pop
cmpsl
jbe
xor
xor
js
dec
scas
jnp
push
pop
ja
divl
xchg
pop
testb
fs
or
outsb
jnp
aam
in
dec
sub
push
add
js
pop
mov
testb
mov
mov
adc
xor
cltd
and
aaa
lds
sbb
icebp
dec
std
push
in
mov
mov
adc
inc
rcr
mov
in
fwait
addr16
pop
int
fisttps
inc
and
mov
lock
pop
lcall
dec
pop
mov
inc
out
int
mov
fiadds
leave
adc
std
jns
add
cmp
shlb
lds
shl
push
stos
xchg
inc
setbe
int
ja
and
xchg
pop
dec
mov
loopne
push
enter
aam
or
add
jmp
push
fildll
pop
jns
stc
into
push
jne
lcall
mov
xchg
stc
scas
pop
and
sbb
xchg
push
pushf
dec
fnstsw
add
jge
icebp
dec
xor
movsl
movsl
aad
mov
in
xchg
sti
dec
push
and
and
rcr
mov
dec
lcall
or
xchg
aas
cmpsb
js
xor
mov
jge
stos
lods
jae
mov
cmpsl
stos
mov
popf
pop
and
mov
adcl
sbb
push
jno
push
jo
push
jb
or
loop
push
pop
ret
in
dec
push
inc
fimull
xor
cmp
lcall
fimull
in
clc
xor
jbe
fcomip
lds
mov
dec
xor
nop
cmp
pop
dec
pop
xor
push
xor
or
out
stc
push
les
and
popa
inc
jbe
in
jp
push
in
mov
jecxz
jge
mov
mov
int3
cmp
push
sub
mov
lret
out
dec
dec
scas
jnp,pt
mov
mov
repnz
mov
add
push
loope
pop
in
push
lea
das
xchg
cmp
adc
sbb
sbb
push
sbb
cwtl
jo
push
mov
sahf
fisubs
mov
mov
inc
add
ds
inc
int
xchg
fldl
sbb
adc
pop
push
jno
xor
sar
sub
push
mov
popa
jl
or
xchg
fucomi
cmp
mov
fwait
jg
jnp
mov
mov
cmp
les
sub
std
bound
cmp
or
sub
sub
addb
mov
test
mov
push
sbb
mov
in
push
jg
fnstsw
ljmp
mov
mov
enter
pop
and
push
in
jns
or
inc
add
or
mov
jge
out
arpl
jae
lds
mov
cmp
push
mov
dec
add
data16
and
xchg
das
mov
cwtl
add
inc
mov
imul
ljmp
cld
cmp
ret
mov
into
push
add
and
mov
cmc
sub
dec
sub
repnz
ficompl
or
push
lock
adc
inc
pop
les
xchg
in
outsb
es
pop
sub
lds
lahf
les
jp
xchg
pop
mov
xchg
aas
enter
dec
mov
push
ret
lods
das
cmp
data16
iret
mov
cwtl
decb
push
insb
pop
inc
push
gs
mov
push
shlb
add
mov
push
dec
and
or
mov
pop
pop
test
mov
cmp
es
inc
subl
add
fldenv
cmp
ret
xchg
push
xor
call
xor
fstpl
push
adc
xchg
ss
lret
in
jmp
and
push
xor
imull
add
xlat
and
xchg
cmc
ss
cmpsb
cmp
adc
add
ffree
aas
mov
sbb
outsb
loope
or
sbb
jp
scas
xchg
and
out
lcall
cli
inc
lret
orb
push
outsl
jge
jno
pop
sahf
mov
jmp
or
fisubs
adc
mov
lahf
repnz
mov
mov
mov
gs
or
dec
push
cld
xor
push
out
adc
jge
inc
sbb
pushf
add
int
sbb
lea
dec
lahf
sahf
es
adc
mov
pop
rcll
repnz
jb
fists
imul
sbb
or
pop
jns
test
mov
cmp
xor
push
lret
adc
mov
lods
js
fnsave
les
lcall
add
je
and
push
ljmp
nop
jns
push
cltd
sub
outsb
shll
adc
pusha
mov
out
mov
cmp
dec
and
ds
cmp
imul
and
js
mov
cs
ret
xor
xlat
inc
mov
jle
xor
dec
mov
movsb
pop
clc
jne
mov
or
movsl
push
repz
mov
imul
xor
fldcw
push
push
push
push
cmp
and
mov
push
lods
gs
add
mov
lea
pop
nop
sub
ds
push
shr
stos
test
cmp
cmpsb
lret
and
xor
outsb
xor
lods
cmpsb
pop
dec
push
pushf
mov
cld
jno
call
xchg
jge
test
add
fucomi
dec
jle
push
hlt
pusha
jl,pt
mov
lock
addl
mov
je
int3
inc
je
mov
mov
fistps
daa
pop
ja
jae
ret
adc
pop
stc
outsb
pop
shlb
decb
pop
inc
data16
cmp
outsb
filds
mov
movsl
aad
sbb
mov
loope
push
mov
jecxz
mov
mov
hlt
push
xchg
movb
xor
inc
cmpsl
add
fisttps
jno
in
jns
pop
cmpsb
insl
pop
outsb
xchg
adc
jecxz
push
test
je
int
ljmp
rorl
andb
ljmp
jo
xor
out
ds
sbb
rclb
sbb
add
stos
call
aad
mov
nop
test
xchg
cwtl
jnp
push
shlb
call
gs
loopne
aaa
addr16
add
cwtl
ret
sbb
cmp
cmp
je
mov
push
dec
mov
xor
mov
insl
out
push
stc
fldt
out
pop
movsb
mov
cmp
orb
mov
mov
loope
dec
loop
cli
fisubl
sub
mov
mov
jne
bound
stos
lret
dec
and
stc
and
repz
sub
hlt
sub
hlt
or
fldenv
jmp
pop
jbe,pt
add
outsl
fstps
xchg
cmc
jecxz
or
js
inc
inc
loopne
jbe
cltd
fdivrl
insl
aas
push
ja
mov
mov
xchg
loope
jecxz
in
inc
push
push
loope
addl
jb
or
cmp
lods
xchg
push
xchg
sbb
cmp
push
push
fwait
clc
add
mov
outsl
fdivr
das
ljmp
and
fisubrs
cli
in
out
push
jae
loope
xlat
popf
dec
inc
cld
push
pop
arpl
aas
shll
lret
ljmp
inc
test
adc
or
xchg
mov
jnp
cmp
stos
mov
in
out
push
jno
adc
jns
call
xlat
fadds
inc
pop
ljmp
fucomi
push
ds
cmpsb
bound
xor
push
inc
xor
test
push
push
jmp
adc
mov
cwtl
rclb
outsl
cmp
xor
push
or
xor
add
test
out
push
mov
jbe
ret
or
data16
and
xchg
adc
adc
dec
outsb
negl
adc
insb
cltd
jg
cmpb
pop
out
scas
out
cmp
fldl
xlat
sbb
icebp
jae
cld
xchg
lods
daa
cmp
lock
ret
xchg
hlt
sahf
push
fnsave
xor
in
les
dec
cmp
fnstcw
or
cltd
mov
sbb
je
aas
mov
mov
outsl
jae
mov
imul
inc
cmc
jl
lea
pushl
xchg
xor
cmp
aam
jbe
ret
dec
cmp
xchg
xor
lret
popf
nop
adc
or
lea
push
add
jo
enter
pop
fwait
or
adc
pop
jbe
das
test
push
movsl
mov
decl
xor
mov
fimull
cmp
mov
icebp
sub
dec
sahf
je
stos
dec
data16
adc
xchg
dec
test
mov
adc
push
jg
stc
clc
mov
in
aad
or
push
push
sti
mov
orl
fisttpl
scas
and
mov
sub
or
mov
jmp
pop
mov
push
inc
enter
imul
cmp
cld
mov
add
stos
jmp
hlt
lock
push
orb
jae
bound
stc
jns
inc
insl
push
dec
add
and
mov
sub
push
sar
jecxz
dec
lcall
lods
ss
movsb
adc
out
sub
push
add
mov
ret
mov
dec
repz
lods
aad
stos
bound
sub
mov
pop
into
mov
pop
or
clc
stos
xchg
cmp
and
ja
les
outsb
mov
pop
add
or
int3
call
das
les
jns
enter
clc
inc
addr16
je
fcoms
mov
push
jge
jmp
or
mov
sahf
sub
rclb
adc
push
push
add
rcl
je
cmp
lds
loope
in
loopne
and
sti
cli
aad
xchg
cmpsl
mov
in
js
leave
cmpsl
adc
jl
aaa
hlt
fiadds
dec
arpl
or
cwtl
mov
sbb
cmp
outsl
gs
mov
incl
dec
mov
dec
pop
xor
lods
push
lahf
fwait
push
sub
cmp
dec
or
int
xorps
cmp
sbb
jne
ss
or
icebp
loopne
lahf
dec
test
ljmp
or
or
inc
wbinvd
cmp
xchg
sbb
pusha
jnp
imul
push
dec
mov
fildl
cld
pop
daa
sub
inc
je
and
ds
pop
pop
ret
pop
mov
lods
ds
push
je
push
lock
jl
jl
sbb
sub
adcb
outsl
jb
scas
jns
cld
sbb
add
ret
out
rclb
insl
mov
ret
add
xor
pop
dec
cltd
push
aam
movsb
mov
lock
pop
lea
and
pop
jns
loope
xchg
lcall
stos
xchg
inc
mov
movsb
bound
and
mov
enter
add
loopne
add
sbb
fnstcw
jmp
add
mov
ds
push
popa
jnp
or
repz
or
stos
inc
and
shrl
sbb
mov
test
jo
into
daa
fisttpl
repz
nop
inc
xor
lcall
das
ja
cltd
adc
sahf
movsl
cmp
addr16
lods
xchg
jne
jg
push
and
adc
arpl
cmp
cli
fldcw
imul
es
inc
push
aaa
xor
push
out
mov
adc
and
mov
imul
jnp
xor
or
inc
mov
adc
aad
daa
imul
pop
out
push
mov
sbb
cmpsl
and
ret
iret
mov
cmp
mov
ja
mov
sub
inc
xor
xor
mov
jg
aaa
push
push
sbb
es
add
das
push
push
mov
mov
adc
mov
pop
sub
mov
jl
mov
out
pop
ret
ljmp
test
jb
cmp
addr16
xchg
arpl
clc
cmp
mov
sbb
cmp
lret
jnp
xor
mov
das
mov
xor
insl
xor
aad
or
pop
test
negb
inc
outsb
xchg
jo
adc
xchg
aaa
icebp
adc
testl
cli
hlt
mov
xor
push
mov
out
mov
repz
mov
test
scas
call
aad
or
and
jg
push
pop
loop
stos
mov
rcrb
xchg
or
lds
pop
jle
and
inc
nop
popa
fcoml
push
cltd
lods
xchg
dec
sbb
andl
sti
mov
cld
jmp
adcl
or
push
mov
pop
in
arpl
negl
fldenv
in
xor
or
nop
addr16
push
call
std
movsb
data16
cmpxchg
ds
adc
push
or
push
xlat
dec
outsb
fistpll
mov
test
jle
cmp
pop
xor
jle
add
fimull
mov
ret
mov
xor
popf
ljmp
xor
outsb
xchg
cmc
fmuls
xchg
mov
dec
fsubp
lret
inc
iret
cmp
test
or
pop
enter
add
push
loop
cmp
jp
sahf
jecxz
incl
clc
inc
test
adc
jmp
sti
adc
out
lock
sahf
xchg
xchg
sub
xchg
pop
jp
mov
sbb
lea
mov
push
shr
adc
sbb
fnstenv
lahf
dec
pusha
pop
std
sbb
cmp
mov
test
addl
sbb
push
or
call
xlat
dec
pop
in
les
sub
fldenv
aaa
add
inc
inc
sub
lret
xor
stos
mov
in
cwtl
pop
mov
add
stos
stc
push
xor
push
dec
mov
adc
ficoml
push
je
js
and
orb
ss
sbb
mov
mov
in
cwtl
lds
je
or
andb
cmc
push
icebp
jae
inc
stos
xor
adc
xlat
jmp
sbb
inc
and
mov
sbb
movsl
pop
lahf
add
jno
pop
lea
js
and
adc
and
rorl
stos
push
neg
inc
into
mov
jb
lcall
subl
mov
xchg
call
sbb
cmp
add
jge
sub
mov
ret
lea
mov
scas
fnsave
stos
cmp
imul
shr
adc
mov
lds
sbb
and
push
cmp
fimuls
adc
cmp
repz
data16
push
jns
or
and
shl
mov
subl
mov
cmp
mov
lea
push
les
mov
xor
mov
or
adc
mov
roll
push
lahf
push
lock
stos
cmp
bound
test
ljmp
and
jmp
add
ljmp
in
cmp
scas
lods
pop
jae
sub
rol
stos
inc
add
and
sti
fstp
and
shlb
pop
push
cmpb
lcall
insb
and
icebp
fs
cli
mov
mov
sahf
popa
call
lock
sub
pop
sbb
lods
out
jae
cmpsb
je
sub
scas
push
xor
jecxz
push
popf
ja
mov
ror
sub
cmp
mov
dec
xor
push
movsb
mov
icebp
repnz
scas
or
movsl
call
cmpsl
addr16
call
out
into
cmp
push
cld
mov
push
rcrl
inc
test
pushf
fisttps
mov
rclb
aas
call
mov
mov
stos
out
push
stc
sar
arpl
mov
pop
divl
js
enter
dec
rcl
xchg
push
int3
inc
or
jns
mov
repz
aam
cmp
jne
mov
and
jl
mov
add
outsb
jg
fdivrs
test
fistpl
test
iret
pop
bound
and
fisubrs
jmp
xchg
xchg
shlb
jg
jno
loope
pop
and
dec
jge
ret
lret
addl
mov
test
dec
add
mov
cmc
out
cmc
add
lock
lock
and
mov
mov
xor
mov
sub
or
sti
insb
sub
int3
and
mov
jge
mov
mov
jb
pop
mov
pusha
test
je
pop
push
ror
xchg
mov
jno
jg
inc
adc
sub
hlt
pop
addr16
popa
cmp
into
jae
cmp
inc
or
orb
xlat
lods
loopne
dec
add
xchg
jl
pop
popf
inc
mov
jg
cwtl
sbb
das
testb
inc
sbb
sbb
clc
xlat
push
fildll
add
pop
repnz
movsb
dec
or
cwtl
inc
mov
mov
subb
push
loopne
data16
pushl
dec
sub
lods
mov
push
xchg
test
cmp
mov
shrb
jno
push
popw
sub
sbbb
lcall
mov
mov
sub
data16
xchg
fcoml
ss
mov
pop
cmp
fldl
mov
jg
ljmp
lods
push
in
or
adc
test
fcmovnbe
and
mov
jmp
mov
cmc
add
cmp
orl
rcl
pop
icebp
int
int3
scas
nop
repz
loopne
or
test
ss
scas
mov
or
lea
aam
sub
push
mov
imul
cmpsl
cli
fistpl
js
rorl
cmp
mov
xor
popf
xchg
cmp
rol
fcoms
cwtl
jns
out
cmp
xchg
jl
mov
xchg
add
and
jg
jae
rcrl
xchg
imul
jae
lock
sbb
xlat
or
rcrl
loope
ljmp
sub
jo
andb
insl
xor
mov
popl
push
fsubs
dec
lret
xchg
loop
into
loope
inc
and
or
push
rcr
mov
or
adc
iret
arpl
cmp
insl
stos
push
mov
push
movsb
pop
adc
shr
mov
mov
lods
sbb
mov
mov
xor
push
mov
sbb
adc
outsl
or
iret
or
push
lahf
mov
xchg
mov
std
dec
js
jo
mov
mov
mov
mov
push
js
cld
and
push
add
cmp
fdivrl
adc
pop
js
push
dec
out
dec
sub
push
adc
jge
push
aam
call
out
decl
mov
sub
int3
and
pusha
cmpsb
aam
out
sub
loopne
sub
mov
aam
aam
pop
lahf
push
xchg
add
and
mov
mov
mov
lods
pop
xchg
inc
xchg
test
cmpsb
fimull
nop
dec
pusha
pop
xchg
iret
sub
rcl
sub
xchg
icebp
cmp
repnz
inc
nop
rorb
lods
push
shll
xor
or
int3
mov
push
out
dec
mov
or
imul
pop
and
sub
test
cmp
nop
popf
dec
fimuls
push
sub
mov
outsl
leave
nop
aad
pop
push
leave
mov
das
in
pop
push
and
jnp
pop
fldl2t
je
inc
xor
movsb
std
add
sbb
cli
orl
pop
clc
dec
cwtl
lea
push
nop
stos
jbe
mov
push
data16
sub
enter
xchg
es
xchg
in
mov
lods
lods
add
push
frstor
int3
std
sub
xor
push
popf
rcrl
pop
mov
out
fmull
shll
or
cmpsb
inc
aad
mov
sbb
and
mov
shlb
call
xor
add
sahf
and
mov
sti
aam
out
dec
test
fs
adcb
in
imul
out
push
pop
loop
hlt
pop
mov
lret
adc
jae
push
pop
sti
xor
clc
mov
add
xlat
vmovd
mov
mov
sbb
sbb
loopne
cmpsl
add
dec
test
push
fisubs
push
adcb
adc
dec
test
cmc
aad
cmp
cmp
jnp
push
mov
xchg
mov
cmp
mov
sbb
dec
inc
and
dec
inc
push
lahf
jp
jmp
stc
xchg
jbe
mov
push
xchg
inc
cmp
add
fsts
lea
lods
loopne
jg
dec
or
repnz
pop
pop
testb
loop
pmovmskb
shrb
call
or
jnp
or
outsl
jno
stos
cs
dec
push
jge
cltd
mov
sub
xchg
xor
cmpsl
pusha
add
xor
inc
dec
mov
aas
leave
lcall
mov
negb
and
loopne
pop
jae
adc
aas
int3
loop
dec
pop
in
aas
lea
iret
movsl
cli
iret
xchg
lahf
xchg
pop
mov
test
fwait
or
out
insl
cmp
inc
test
std
shlb
mov
add
js
mov
jle
and
lea
lds
xchg
sbb
mov
pusha
mov
jmp
inc
hlt
stc
int3
xor
addr16
sub
and
add
pop
add
sbb
icebp
jo
mov
pop
pop
mov
jae
sub
into
clc
lahf
repnz
jge
int3
sti
jns
in
or
in
fidivrl
dec
push
movsb
pop
or
cmp
popa
mov
aas
imul
xor
loopne
adc
push
icebp
push
out
add
das
scas
call
into
and
lretw
add
jmp
sbb
xor
sub
push
test
inc
xchg
xorb
fxch
jmp
lods
into
xor
inc
int3
rcll
and
jecxz
xchg
mov
test
add
insl
and
insl
pop
mov
call
lcall
sbb
push
xchg
cmp
dec
cmp
lret
scas
and
cltd
add
ficoml
aad
dec
add
or
xor
cltd
int3
adc
inc
add
lock
cs
leave
xor
cmp
mov
sbb
sbb
push
jbe
cld
xchg
adc
mov
imul
cli
out
or
mov
movsl
xchg
xchg
push
xor
ljmp
push
mov
out
cld
jnp
imul
pop
lock
jns,pn
cmp
jmp
jg
pop
aaa
xlat
lret
mov
mov
jecxz
fadds
adc
push
mov
sub
repnz
lea
and
fiadds
mov
xor
out
add
jmp
popa
lcall
adc
mov
xor
jae
mov
adc
sub
mov
out
fnstsw
mov
xor
lcall
inc
fldt
xlat
outsl
jne
xchg
int
lahf
mov
pop
mulb
add
mov
lods
shl
lcall
jb
out
lock
pop
push
cmp
mov
inc
or
xor
addr16
fdivl
jo
jmp
stc
mov
ja
rcrb
fsubs
lcall
adc
pop
pushf
or
push
aam
push
add
gs
rorb
push
mov
xchg
lea
pop
mov
repnz
pop
jmp
hlt
dec
jecxz
push
mov
pushf
mov
or
dec
ret
addr16
pusha
add
call
loope
dec
ficoml
or
sub
or
or
lahf
stc
aaa
test
icebp
mov
push
xchg
jg
cmp
sbb
outsb
pusha
movsl
out
xchg
outsl
mov
out
lods
lods
rcr
mov
mov
dec
mov
les
dec
loope
cwtl
and
je
sub
out
insb
inc
cmp
inc
mov
pop
imul
mov
aaa
mov
testl
int
xchg
lahf
dec
jbe
fistl
mov
mov
loopne
jbe
jne
push
inc
pushf
push
or
jmp
sub
outsl
jnp
adc
mov
lods
push
add
lea
cwtl
aas
and
cld
push
push
outsl
popa
pop
jge
repz
inc
mov
js
adc
jmp
xor
es
xchg
in
mull
jbe
arpl
pop
iret
xorl
in
scas
rcl
mov
and
sub
les
xchg
iret
add
cwtl
mov
mov
scas
and
pop
mov
xchg
mov
mull
push
pop
mov
mov
jb
int3
sub
inc
mov
mov
sbb
push
notb
pop
push
push
ja
ds
or
stos
ror
adc
call
stos
jbe
notb
nop
mov
sbb
insl
imul
or
fnstenv
mov
in
dec
pop
pop
clc
cmp
xor
aas
in
xor
sarl
pushf
lcall
lret
pusha
cltd
loopne
xchg
push
adc
js
imul
cs
repnz
out
dec
movsb
cwtl
lcall
nop
subl
pop
data16
push
pop
insb
out
imul
lret
push
lret
pop
cs
or
cmc
and
xlat
pusha
lods
ds
sbb
aam
jp
mov
xchg
mov
inc
lods
loopne
xor
add
jmp
cmp
pop
sbb
hlt
in
testl
sub
inc
add
shll
imul
outsb
push
icebp
loop
leave
lret
fistps
mov
lds
push
xlat
add
test
in
push
pushf
das
jo
arpl
and
push
decl
sbb
jnp
or
sub
outsb
test
aas
inc
pushl
cld
es
insb
iret
xchg
or
lock
adc
clc
es
fcoml
pop
out
test
rcll
inc
les
push
dec
xor
pop
out
dec
out
mov
repz
lcall
stc
andl
or
dec
aaa
xor
mov
or
cmpsb
in
xchg
and
in
xor
test
cltd
push
call
or
mov
lcall
cmp
mov
psllq
fs
and
or
inc
rcrb
movsb
jmp
std
push
xchg
out
push
cmp
xor
in
fisubl
mov
clc
mov
add
adc
cli
push
mov
gs
mov
cmpsl
dec
cmpsb
rolb
outsb
sbb
xor
test
cmp
out
or
jbe
imul
ss
dec
mov
data16
mov
inc
test
mov
leave
call
mov
jmp
outsl
pushf
mov
aas
mov
lcall
std
xor
and
ss
dec
inc
call
xchg
jecxz
push
or
mov
test
dec
arpl
pop
xchg
pusha
and
jnp
adc
push
xchg
ret
lret
adc
add
in
test
addr16
leave
int
mov
filds
inc
inc
gs
lahf
das
out
add
sub
cmpsb
out
mov
movsb
pop
and
push
lret
roll
aad
mov
imul
xor
push
cmp
xor
and
js
int3
adc
mov
in
xchg
jae
ds
lods
add
mov
jmp
adc
cli
adcl
aam
sbb
mov
mov
in
mov
fdivrs
addr16
cli
inc
ret
inc
pop
rolb
rolb
rolb
rolb
add
add
rolb
add
add
decl
add
rolb
add
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
ss
xchg
adc
je
or
out
orl
dec
push
fdivr
into
mov
insb
out
push
and
cmc
mov
or
dec
add
pusha
pusha
adc
sbb
dec
add
push
mov
jecxz
add
push
cmp
shl
mov
inc
add
mov
loopne
in
sub
or
add
sbb
insb
or
sbb
mov
adc
je
sbb
or
sti
adc
or
rep
pop
dec
rorl
jno
orb
add
out
or
add
add
xor
int3
enter
mov
rcrb
add
rcrb
xor
push
sbb
leavew
and
jle
stos
and
add
lret
lea
adc
add
push
sbb
repz
pop
push
mov
daa
fsub
jmp
imul
cmp
sub
xchg
add
sub
shr
add
cmp
lods
inc
mov
and
ret
lret
insl
or
out
inc
xor
sbb
or
mov
imul
std
pop
lea
movb
sub
sbb
sahf
push
lcall
mov
and
add
scas
cmpsb
movl
lods
and
insb
mov
mov
sub
push
clc
sahf
adc
jae
stos
mov
inc
rorb
je
imul
sbb
movsb
icebp
mov
mov
xchg
pop
add
inc
mov
xchg
push
inc
cmp
mov
ss
mov
mov
cmp
iret
mov
push
xor
add
xchg
cmp
push
pushf
and
cmpsb
and
and
jl
jmp
mov
dec
lret
or
adc
cmp
in
add
cmpsb
sbb
fucomip
and
adc
cmp
push
jb
stc
roll
inc
push
jmp
sub
nop
repz
nop
rol
lret
mov
dec
xor
ret
lods
out
shrb
shr
pop
sarl
bnd
xor
cs
popf
xchg
sub
lods
dec
or
shlb
int3
setl
cltd
mov
sbb
adc
lea
xorl
add
jmp
xchg
dec
sub
dec
repnz
jns
lret
and
or
sub
xor
or
cmp
xchg
push
push
mov
jne
push
lea
add
add
pushf
xchg
sub
cmpsl
jmp
xchg
shl
sbb
in
or
sbb
test
and
mov
dec
adc
hlt
adc
add
test
aad
xchg
inc
out
popf
ret
or
dec
enter
sbb
adc
cmp
mov
outsl
push
and
pop
and
in
cmc
sar
std
lret
sub
roll
xor
inc
adc
xor
sbb
inc
and
and
sub
push
repz
inc
push
jns
mov
mov
movsb
mov
adc
lret
mov
sub
ret
inc
and
loope
in
or
daa
adc
lods
adc
push
inc
mov
mov
xchg
cli
and
dec
mov
or
loopne
lea
or
in
scas
cld
dec
add
inc
and
adc
adc
add
enter
jns
xchg
mov
xor
fs
pushf
popa
iret
mov
adc
pop
lds
mov
orl
cltd
jns
push
pop
aaa
cs
fisttpll
jmp
outsb
jae
pop
lea
mov
jne
mov
sub
add
fldl
and
pop
jns
adc
jl
cmc
adc
sahf
lret
add
lea
movsb
push
insl
shlb
mov
xlat
and
loope
in
int3
jne
ljmp
jbe
ficoml
jle
aas
sar
xchg
in
push
sti
int
sub
push
mov
jge
sarl
in
dec
inc
leave
and
mov
jmp
xchg
sbb
cwtl
add
les
cs
call
jb
lret
ret
adcb
jle
jmp
xor
movsl
adc
clc
push
xchg
test
fs
sbbl
xor
sub
movsl
clc
jmp
dec
sbb
add
jmp
or
std
add
inc
in
dec
add
inc
lret
test
pop
cli
sub
jb
pushf
xchg
rcrl
lahf
jmp
and
adc
in
dec
adc
pop
push
scas
js
rolb
inc
add
mov
stc
mov
sub
cmp
xor
pop
lret
rcrb
in
sbb
add
mov
add
mov
add
sbb
push
call
mov
les
push
push
jb
cld
call
push
ficoml
mov
lahf
xor
sub
fimull
ds
push
lahf
rcrl
sahf
inc
cltd
adc
ret
add
mov
xchg
add
sbb
pop
add
dec
rclb
fdivrs
xchg
sbb
xor
mov
mov
test
sub
in
xor
add
rorl
mov
xor
jmp
mov
and
sub
pop
xor
pop
mov
or
push
and
sub
pop
mov
icebp
hlt
sbb
fiadds
pushf
push
sub
push
sbb
mov
rcrl
shlb
push
push
call
sbb
dec
adc
pusha
inc
or
nop
or
in
push
or
jbe
mov
repnz
stos
movsb
add
nop
cmpl
je
stos
jae
cmp
and
inc
or
pop
sbb
add
push
in
jg
ljmp
sbb
call
add
dec
sub
xor
sub
daa
push
xchg
xor
daa
ret
call
jb
sub
insl
xchg
rcll
xchg
xor
xor
pop
jp
jnp
xor
push
inc
inc
push
push
outsb
push
je
mov
push
mov
mov
mov
clc
test
push
push
orl
lea
push
aas
inc
das
add
addb
bound
shrb
or
stos
sbb
ror
xor
and
mov
mov
cwtl
mov
inc
add
add
movb
lock
jae
dec
mov
push
and
jecxz
pop
push
lea
sbb
in
pushl
cmp
pop
pop
pop
pop
ret
push
imul
cwtl
cmc
dec
cld
mov
or
aas
pop
loopne
push
add
push
and
xchg
test
mov
mov
popa
rcr
add
push
jne
ret
mov
inc
xor
add
jne
popa
lods
push
jne
lcall
cmc
call
shll
inc
enter
dec
mov
or
fs
movsl
xor
push
and
ds
cwtl
pop
push
cmp
or
or
inc
xor
dec
pop
rorb
inc
adc
fisttpll
movsb
outsl
xchg
or
cld
pop
inc
pop
adc
add
cmp
cmp
xor
push
inc
movzbl
add
cld
sub
iret
shll
enter
arpl
cmp
mov
sarw
or
push
push
add
mov
jae
inc
jmp
pop
pop
nop
mov
xor
mov
pop
ret
std
lock
pop
push
mov
cmp
add
in
add
jbe
adc
call
lds
push
push
cmp
pop
std
cmc
daa
aaa
push
sub
int
inc
in
bound
jae
pop
jge
sub
xchg
clc
rorl
sub
decl
cli
movsb
push
in
roll
stos
loop
adc
cmp
cmpsb
ret
add
mov
adc
stos
inc
pushf
add
lock
push
push
inc
xchg
in
mov
mov
jge
in
es
dec
enter
push
dec
pop
and
pusha
lret
xor
dec
push
hlt
push
fs
or
cmp
test
mov
push
fistps
mov
in
pop
lds
inc
je
mov
inc
jne
adc
adc
fildl
mov
lret
sbb
nop
cli
cmp
jne
push
stc
jmp
fidivrl
inc
lock
loopne
sub
pushf
dec
dec
mov
in
in
pop
inc
mov
sub
lret
ljmp
xlat
repnz
dec
cmpb
pop
mov
xchg
je
add
out
inc
xor
jp
lcall
and
push
or
push
call
sbb
mov
adc
lds
aad
mov
mov
adc
mov
jmp
out
mov
aas
dec
inc
dec
test
ret
and
jmp
dec
push
and
fdivl
mov
add
test
roll
jmp
mov
adc
inc
mov
mov
jg
jno
or
and
jmp
sub
dec
pop
inc
dec
ds
push
inc
xor
cmp
mov
push
ret
stos
xchg
add
mov
sub
lods
popf
lea
push
pusha
in
repz
xor
sub
mov
dec
call
dec
or
push
inc
sub
repz
pop
sub
test
inc
sbb
mov
add
lea
add
daa
push
iret
shr
push
loope
push
lea
push
je
add
sti
add
add
mov
sbb
sbb
test
jbe
decb
imul
and
xor
scas
mov
xchg
insb
add
sub
xor
pop
lods
cmpsb
jmp
dec
add
jbe
lret
scas
add
mov
cmp
add
and
outsb
je
idivl
lds
fldt
adcb
jecxz
cmp
aas
fs
and
stc
in
fnstenv
pop
scas
mov
imul
inc
xor
sub
insb
and
push
jne
xchg
xor
popa
xchg
js
pop
ja
testb
cmp
mov
aas
inc
js
sub
aaa
dec
push
inc
cwtl
shrl
outsb
fs
add
xlat
mov
movl
mov
sbb
jl
pop
imul
hlt
arpl
je
dec
inc
cmpl
bound
and
dec
xchg
stos
pop
push
pop
cltd
cmp
or
adc
mov
imul
xor
mov
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
rolb
daa
add
xor
add
xor
add
sbb
add
sbb
add
add
add
rolb
rolb
test
sahf
adc
adc
and
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
call
int
jo
int
jo
int
jo
push
mov
push
push
push
mov
push
mov
add
push
push
push
add
mov
jmp
nop
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
es
outsl
cmc
test
add
cmc
add
jmp
push
cmpsl
fiadds
push
scas
cmpl
clc
jmp
outsb
das
sbb
je
stc
jmp
xor
loopne
mov
jb
adc
outsl
add
jmp
jbe
test
mov
jmp
xor
imul
sti
dec
add
clc
jmp
inc
adc
or
jmp
in
dec
subl
jmp
addr16
out
add
jmp
das
sbb
add
jne
jmp
sub
or
add
subl
stc
jb
jb
jne
jb
push
adc
mov
push
add
add
add
add
jmp
mov
add
cmpl
jle
mov
mov
mov
add
decl
jmp
mov
push
sub
test
je
add
push
push
push
call
add
pop
pop
mov
sub
je
mov
add
mov
cmp
jle
mov
add
mov
sub
push
sub
shr
add
xor
cmp
je
mov
add
test
je
and
add
add
dec
jmp
pop
jmp
ret
push
mov
mov
xor
mov
add
add
cmp
jle
push
pushl
pushl
push
call
pop
add
pop
dec
add
jmp
mov
pop
ret
push
mov
mov
mov
mov
test
je
pushl
push
and
add
push
call
jmp
add
mov
shr
mov
add
cmp
jle
subl
add
dec
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
in
out
add
insl
js
xor
aam
push
sahf
push
inc
ret
inc
fsts
jecxz
cmp
lret
mov
