add
inc
jb
popa
je
inc
imul
in
xchg
push
notb
clc
or
arpl
in
out
icebp
cmpsb
and
pushf
add
add
xor
negl
cmc
sbb
jno
adc
out
add
insl
imul
insl
push
gs
popa
jb
add
add
gs
bound
add
add
gs
shlb
in
loop
jg
popa
lahf
in
in
adc
into
inc
jne
adc
mov
repz
int
mov
or
cmc
mov
add
jae
mov
push
hlt
or
fildl
outsb
push
or
add
add
negl
jo
popa
rclb
or
fs
ja
call
inc
inc
dec
xor
cs
insb
add
xor
lea
je
jmp
jmp
add
inc
outsb
fs
outsl
arpl
push
lea
call
pushf
mov
pusha
pusha
push
lea
jmp
pushf
call
jmp
sub
ss
mov
mov
xor
iret
rcrb
cmpsb
or
cwtl
aad
mov
frstor
aas
xor
mov
shl
addr16
jmp
loope
insl
leave
outsl
pop
aam
fists
push
cmp
push
mov
insb
gs
inc
inc
add
call
add
inc
gs
outsb
jne
cs
xor
mov
xor
mov
push
popf
xchg
js
mov
aam
pop
inc
fiadds
int
push
dec
ficompl
movsl
dec
mov
loope
popf
andl
adc
cltd
adc
daa
push
int3
es
dec
inc
aad
fsubs
and
and
mov
pushf
sub
adc
push
imul
clc
int
pop
rorb
leave
and
lcall
fwait
cli
sub
fsubrl
and
push
enter
repz
les
and
cmp
push
lahf
jb
negb
lods
xor
mov
sbb
scas
jecxz
sub
and
pop
rorl
inc
adc
mov
mov
jle
cmp
int3
rclb
push
sub
sub
cs
pop
jne
enter
xchg
insl
and
lods
adc
jp
jg
js
clc
xchg
cwtl
leave
ret
repnz
xor
aas
or
mov
or
sbbl
add
popa
dec
clc
xor
hlt
fwait
ja
jo
jno
jbe
imul
mov
lea
ja
bt
stc
pusha
cmc
imul
clc
clc
pushf
stc
add
mov
pusha
push
mov
lea
jmp
add
dec
jae
arpl
imul
cmp
scas
in
add
pop
push
push
add
leave
add
add
add
jbe
dec
jne
push
gs
je
add
push
gs
jae
addr16
add
testl
ljmp
mov
cmpl
dec
xor
aaa
pop
xor
scas
ret
push
xchg
btc
rol
shr
pusha
xchg
or
movzbl
bsr
shl
mov
rcl
bsr
cmp
mov
add
cmp
jmp
add
push
imul
add
rcrb
or
cmpsl
push
call
repnz
mov
gs
insb
addr16
je
insb
dec
inc
add
rcrb
call
aam
lahf
jmp
rep
not
bswap
mov
mov
movb
lea
jmp
test
call
not
inc
mov
push
pushf
and
push
pushl
jmp
xchg
js
sbbl
add
cmpb
add
or
sti
lret
int
jnp
add
jae
mov
jo
add
clc
es
xchg
inc
sub
cmp
adc
adc
jns
bound
cs
mov
lds
arpl
xorb
or
ss
insb
or
sahf
sub
outsl
add
fwait
into
test
stos
xlat
lock
and
cmp
int3
or
negl
mov
jg
cli
add
add
push
jge
xchg
sbbl
cmp
fildll
xchg
xchg
ja
dec
mov
jecxz
jecxz
mov
push
pusha
punpcklwd
enter
push
arpl
sub
push
or
loopne
add
cmpsl
pop
cmpsl
or
push
cmp
xor
push
pop
dec
stos
xlat
add
sbb
sub
cli
jmp
imul
je
icebp
mov
xchg
adc
sub
or
addr16
xor
xchg
xchg
in
cmp
sbb
cs
cmp
and
adc
and
push
and
cli
xchg
cmp
push
mov
enter
or
aas
jbe
xor
rorb
push
cltd
dec
push
mov
xor
lea
je
push
lea
jmp
adc
inc
es
mov
cmp
mov
clts
xor
cltd
mov
push
stos
in
aaa
test
xchg
mov
in
fstl
out
cmpsl
cmp
push
jecxz
stos
mov
dec
xor
cmp
out
je
out
stc
add
je
add
insl
je
mov
lods
fsubl
setb
les
mov
jle
mov
sti
adc
call
xorl
insl
adc
enter
pusha
jno
clc
mov
and
mov
mulb
lea
je
push
push
test
test
add
push
pusha
pushf
push
lea
jmp
movl
pushl
call
mov
dec
mov
aaa
dec
mov
xor
xchg
xchg
inc
push
push
lret
in
mov
negl
sub
xor
in
popf
leave
outsl
sbb
cs
rolb
outsb
add
add
call
insb
arpl
push
arpl
cli
add
add
std
xchg
out
adc
mov
fisttps
adc
nop
inc
push
imul
insl
mov
in
loopne
scas
in
cmp
push
pop
int
xor
inc
or
xchg
loop
mov
repnz
sub
rclb
popa
xorl
jmp
adcl
lds
mov
xchg
into
pop
push
mov
mov
fsubl
dec
mov
jnp
inc
or
and
mov
roll
add
je
imul
outsl
jb
add
push
gs
jne
jae
jb
outsl
jae
push
call
sub
add
pushf
pushf
pusha
lea
jmp
add
inc
insb
outsl
jae
dec
popa
outsb
fs
add
add
outsb
fs
imul
gs
add
xor
in
add
loope
out
lcall
jno
jno
lock
loope
xchg
cmp
in
leavew
outsl
sbb
mov
ds
sub
push
mov
mov
cmp
pushl
add
push
movb
lea
jmp
pusha
movw
lea
call
pusha
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
dec
outsl
imul
inc
add
xlat
int3
int3
call
push
push
call
in
add
inc
gs
gs
dec
outsb
jne
loope
mov
in
xchg
insl
adc
lods
push
pop
or
imul
adc
cmpsl
xchg
xchg
push
jmp
in
fwait
ss
sub
push
sahf
repnz
negl
pop
subl
mov
dec
sbb
xchg
jp
pusha
or
mov
ljmp
inc
insb
popa
jae
dec
outsb
outsw
inc
add
add
imul
add
inc
gs
inc
add
shlb
call
notl
pushf
sub
cmc
test
call
mov
movsbw
pushf
not
mov
mov
not
mov
pushf
movsbw
push
mov
pusha
movzbw
jmp
jns
xor
dec
mov
xor
into
aad
jae
dec
dec
sub
sub
or
fnstenv
shlb
adc
inc
pop
ss
mov
cltd
add
push
sbb
repz
out
xchg
cmc
push
cmp
jecxz
mov
or
int
ficoms
test
dec
pop
sti
sub
xor
lea
popl
adc
push
je
jbe
xchg
xlat
cmp
mov
aad
jno
jge
cmpl
sub
dec
mov
xor
stos
inc
lret
lcall
dec
push
sbb
ljmp
into
rcr
inc
sub
scas
cmovbe
or
lea
mov
inc
xor
push
add
adc
aaa
push
or
inc
jo
int3
mov
xor
fbstp
les
jbe
ljmp
cmpsb
push
mov
or
sahf
in
mov
lea
jbe
cmp
rcl
sahf
cmp
mov
pop
fidivrs
mov
mov
mov
or
out
jmp
xor
or
out
lods
jmp
imul
jns
mov
sub
sbb
mov
fnstcw
jg
xchg
orl
in
add
xor
mov
inc
and
movb
mov
movb
pushl
ret
lea
je
cmc
cmp
jmp
sub
stc
repnz
push
lea
jne
test
test
bsr
mov
shl
btc
sub
bts
mov
cmc
bt
call
add
inc
dec
push
dec
inc
inc
jb
insl
push
je
imul
jb
ja
fs
add
insb
insb
push
outsb
add
out
add
bt
addl
pusha
pushf
lea
jmp
jmp
cs
mov
mov
mov
mov
mov
jp
daa
inc
std
sub
pop
test
sbb
rclb
stos
addb
fadds
in
call
cs
shlb
ja
mov
out
mov
pusha
and
fsts
mov
rol
test
push
call
sbb
and
pop
mov
dec
mov
mov
repz
lods
pop
lea
outsb
or
push
es
lods
mov
mov
add
mov
jo
mov
pop
push
les
mov
jnp
imul
int3
ds
mov
sbb
sub
pop
xlat
xchg
adc
data16
adc
xchg
sbb
xor
sbb
jecxz
loopne
bound
adc
pusha
cmpb
cld
add
cmp
and
push
das
dec
test
roll
imul
iret
sarb
mov
sub
jmp
and
cld
or
inc
jae
cmp
data16
adc
fdivl
or
or
insb
cmp
sub
mov
adc
adc
rorl
lret
daa
dec
mov
cs
test
ss
pop
inc
pop
mov
add
sbb
out
adc
push
test
test
jp
adc
mov
int3
or
in
or
push
lcall
dec
movsl
dec
and
mov
scas
push
sbb
cmp
cli
lcall
jb
inc
scas
inc
add
push
gs
arpl
insb
gs
add
add
imul
je
jo
gs
bound
arpl
add
inc
gs
jne
jb
outsb
je
push
dec
add
xchg
shl
and
mov
ror
test
cmc
bsf
add
push
movl
bsf
mov
jmp
add
jae
jb
push
aad
add
test
jmp
add
push
gs
arpl
gs
imul
mov
test
stc
push
movzbw
push
cwtl
cmp
inc
ror
push
lea
neg
push
ror
shr
shrd
movsbw
lea
pusha
bsf
mov
clc
jmp
pushf
cmc
push
add
bt
jmp
add
inc
gs
insb
imul
test
neg
pusha
call
pusha
shrb
push
scas
xlat
dec
stos
rorl
les
push
sub
inc
ss
cltd
or
nop
fisttps
xchg
sbb
jnp
adc
cmp
sbb
cmp
xor
int
arpl
mov
and
bswap
insl
adc
js
fs
loop
addr16
add
push
imul
cmp
sub
sub
scas
push
scas
xlat
sub
fst
out
cmpsl
dec
dec
cmpsb
mov
cmpsl
ja
jbe
mov
adc
pusha
mov
or
cld
int
movsb
push
in
and
dec
inc
icebp
dec
test
fwait
push
jecxz
dec
push
sbb
dec
in
pop
insl
adc
in
std
nop
aad
les
shrl
xchg
cwtl
sub
loopne,pt
test
cmp
push
mov
mov
outsl
pop
stc
fwait
dec
inc
arpl
nop
pop
mov
sbb
xor
inc
dec
push
pop
push
inc
stc
fwait
dec
xor
pop
mov
mov
into
xor
mov
push
mov
dec
xor
fisubrs
jle
xchg
pop
mov
outsl
popa
push
adc
ret
push
xchg
test
cltd
jbe
lock
xchg
push
sbb
cmp
popf
sub
sbbl
xor
into
add
sub
xor
xor
mov
adc
arpl
daa
ljmp
dec
std
in
add
push
sub
sub
dec
jecxz
add
rorb
or
test
dec
xor
test
add
out
sub
push
cwtl
lret
mov
cli
lret
sarb
or
jne
xor
call
in
xor
testb
xchg
xor
stc
lret
inc
je
push
mov
xor
scas
mov
adc
test
cmp
incb
orb
out
add
mov
pop
adc
xor
popa
into
cld
mov
arpl
lea
pusha
or
push
popa
pop
arpl
jnp
fisubrl
rorl
sub
lods
and
pushf
lds
push
mov
test
cltd
add
add
inc
fimuls
gs
push
xlat
mov
add
ljmp
imul
push
fwait
or
or
push
gs
mov
mov
jne
inc
in
push
mov
out
lcall
jno
adc
scas
mov
and
push
pushf
in
push
fidivs
hlt
add
pushw
jl
jnp
pinsrw
mov
mov
imul
rcll
pop
sbb
mov
nop
sub
dec
std
mov
mov
lods
jg
ret
push
dec
jge
lea
aad
push
mov
xor
lea
jae
stc
shrd
dec
mov
btc
or
and
dec
mov
inc
ror
neg
pushf
mov
movb
clc
call
add
inc
jb
popa
je
inc
arpl
insb
gs
je
jb
popa
bound
add
test
dec
add
pusha
pushl
pusha
adc
push
pushl
movl
lea
jmp
add
inc
jb
popa
je
push
outsl
jne
fs
arpl
outsb
add
enter
add
dec
dec
add
stc
pusha
add
stc
add
pushf
push
call
add
insl
imul
insl
push
je
jo
movl
call
add
pop
inc
dec
jo
ja
call
add
insl
imul
insl
dec
jne
add
jecxz
fistl
mov
pushf
jmp
add
inc
gs
gs
inc
outsl
insb
outsl
jb
add
push
arpl
outsb
push
outsl
inc
insb
imul
adc
cmpl
jge
push
push
push
lea
je
push
mov
pushf
bt
sub
dec
shrd
shr
btc
or
sar
mov
rcr
not
add
movsbw
pusha
call
add
inc
gs
jns
inc
outsl
insb
outsl
jb
push
call
testl
add
pop
movsl
cmp
fisubl
mov
mov
xor
call
sbb
mov
adc
cmp
inc
stc
stos
fwait
scas
dec
fwait
icebp
pop
push
push
mov
mov
pushl
mov
mov
pushl
ret
add
dec
jo
outsb
push
jb
outsb
je
jb
add
add
outsl
dec
push
add
add
outsb
inc
insb
imul
add
or
add
pushf
test
cmp
clc
add
pushf
pushl
movb
lea
jmp
lea
jae
cmp
xor
jmp
inc
dec
sub
push
shrb
push
lods
shrb
sti
jne
inc
cs
ljmp
mov
cltd
lret
cmp
sub
push
fs
mov
sarl
sarb
push
cmp
pusha
pusha
lea
jae
test
stc
test
cmp
call
mov
mov
lea
jae
jne
shrd
shr
test
mov
and
add
add
clc
sub
or
sar
mov
stc
sub
pusha
pushf
clc
cmp
pushl
popl
pusha
cmc
cmp
push
lea
ja
pusha
bt
shr
sub
bt
shl
shl
test
sub
add
dec
mov
neg
cmp
inc
mov
cmp
cmc
clc
call
repnz
push
push
lea
jne
not
pushf
jmp
xchg
ror
bsr
xchg
cmc
shr
mov
or
mov
push
neg
sar
mov
stc
inc
and
mov
shr
xor
or
shl
xor
lea
pusha
setl
lods
not
call
cmp
test
push
pushf
mov
push
lea
je
shr
dec
rol
mov
not
cmc
mov
jmp
add
inc
imul
dec
gs
popa
addr16
add
add
outsl
jae
inc
insb
imul
add
add
gs
push
movw
push
pushf
lea
je
shl
test
mov
shl
movsbw
mov
jo
cmc
add
call
xchg
xchg
pushf
mov
pusha
mov
movsbw
pop
pushf
mov
call
mov
test
add
lea
pushf
jmp
add
inc
gs
insb
imul
inc
popa
je
add
roll
sbb
mov
pushf
lea
jmp
add
inc
gs
gs
popa
addr16
add
sbb
arpl
push
out
push
dec
add
inc
cmpl
mov
ljmp
or
mov
inc
xor
sbb
arpl
fisubrs
inc
pusha
daa
bound
mov
dec
xlat
cmp
mov
dec
add
push
outsb
fs
gs
popa
addr16
add
add
je
jne
jb
outsb
je
imul
jns
add
inc
dec
dec
xor
cs
insb
add
jg
jns
jl
jns
sti
sbbb
add
sbb
sbb
sahf
add
jae
stos
adc
lods
dec
cmp
ficompl
lea
out
scas
lds
add
clc
iret
push
or
cmp
jecxz
ret
ss
lea
xchg
mov
lods
mov
in
test
loopne
dec
icebp
cmp
and
test
enter
dec
jns
sbb
sub
xchg
lahf
cmp
in
pop
xor
addr16
pop
jle
jnp
loopne
add
add
add
cmpb
dec
cwtl
sbb
cmpsl
mov
or
jne
enter
cmp
scas
push
cs
ss
adc
outsl
and
xorl
xor
xor
inc
sub
sub
sub
test
scas
les
out
xchg
jmp
imul
jb
fistl
icebp
and
mov
dec
ret
xchg
pushf
lods
cld
hlt
insl
out
pop
insl
loope
adc
call
adc
sbb
lea
pop
sti
sbbb
mov
loope
lahf
adc
shl
jmp
call
dec
mov
xor
cmp
cltd
xor
sti
push
sahf
stos
imul
dec
daa
int3
es
and
test
mov
dec
ret
xchg
fnstenv
mov
cmp
sbb
in
and
lds
fcmovnbe
mov
movb
mov
mov
movb
pushl
ret
add
inc
gs
imul
je
add
inc
insb
outsl
bound
dec
outsl
arpl
mov
test
bt
push
pushf
mov
jmp
add
push
gs
arpl
sti
add
cld
call
inc
gs
imul
addr16
js
add
inc
gs
outsl
jo
imul
je
inc
jmp
add
push
outsl
jne
fs
arpl
mov
adc
je
testl
lea
jle
out
or
sbb
dec
rcl
sbb
js
mov
jo
loop
arpl
gs
jbe
or
lea
je
pusha
stc
pushl
pusha
add
cmc
cmp
jmp
push
call
xlat
test
pop
test
sbb
sbb
loopne
nop
pop
jmp
ret
push
fsubs
in
cmp
mov
mov
jg
stc
jg
sub
xchg
dec
cmp
ret
les
fsubrl
hlt
inc
lods
inc
jne
int3
jb
xor
cmp
lods
and
sub
arpl
and
push
sarb
pushf
test
jg
xchg
mov
dec
and
cmp
push
fisttps
mov
sub
xchg
mov
aam
lret
mov
sub
test
add
jbe
dec
jne
push
outsb
jo
gs
jb
dec
gs
fs
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
shr
inc
push
add
xor
xor
fs
insb
add
add
insb
arpl
imul
test
mov
add
sbbl
add
pusha
cmpsl
cmp
fs
jmp
add
jae
arpl
data16
cmc
add
movb
lea
jmp
je
pushf
movl
lea
jmp
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
inc
outsl
insl
jo
je
bound
inc
add
clc
repnz
mov
push
lea
jne
pusha
bswap
movb
call
add
insl
imul
insl
push
jb
jo
jb
jns
add
push
je
jb
push
popa
add
add
je
jbe
outsb
je
test
jmp
and
stc
add
test
push
mov
bt
push
stc
shr
test
cmp
pusha
lea
jb
pushf
push
lea
je
cmc
jmp
pushf
xor
clc
call
add
push
gs
jne
jae
jb
call
push
call
add
inc
insb
outsl
bound
push
outsb
insb
outsl
arpl
pushf
inc
lea
call
jmp
pusha
shr
movw
rcl
sub
lea
call
add
inc
gs
jne
jae
jb
outsl
jae
add
push
gs
jne
jb
push
popa
insb
jne
inc
add
rclb
or
jae
jb
arpl
add
cmp
bt
jmp
lea
je
bt
mov
neg
sub
clc
add
sar
shr
sete
rol
bt
mov
bsr
add
seto
bsr
dec
bsf
add
sar
call
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
add
inc
gs
jb
jns
arpl
insb
gs
je
jb
popa
bound
push
lea
ja
jmp
jmp
pushf
movl
pushf
mov
pushf
pushf
mov
push
pushl
ret
inc
testb
testb
mov
gs
or
jbe
xchg
call
fistpll
add
clc
add
nop
cld
into
movsb
dec
cmpsb
dec
and
movsb
dec
mov
hlt
adc
xlat
cs
inc
out
xchg
popf
dec
stos
fcmovnb
stos
cmc
cmp
cmp
add
clc
mov
cmc
bt
test
jmp
add
inc
gs
arpl
insb
insb
push
popa
outsb
add
sub
xchg
movsb
mov
test
pushl
pushl
push
lea
je
clc
cmp
cmc
test
test
jmp
sbb
cmpb
add
lahf
aam
or
sub
test
mov
sub
inc
sub
hlt
dec
in
pop
inc
enter
jg
jb
stos
loopne
and
movsb
dec
and
pop
push
loope
andl
outsl
add
sahf
lods
pusha
mov
imulb
push
mov
cmp
jp
cltd
stc
add
in
mov
adc
in
jle
mov
push
test
sbb
scas
pusha
push
pusha
stos
ljmp
xchg
call
out
dec
jmp
out
and
or
dec
xor
sub
and
pop
pop
ljmp
push
mov
adc
push
enter
int
mov
lret
jge
popa
insb
pop
push
add
push
dec
inc
inc
sub
mov
into
xchg
ds
lret
out
inc
repnz
ljmp
pop
push
popa
push
int3
lods
das
fs
mov
cltd
jae
lea
adc
mov
adc
xor
xor
cmpsb
xlat
dec
inc
adc
sub
jb
sub
mov
stos
sarl
cmp
and
jb
negb
lock
adc
outsb
mov
clc
ja
push
fdivl
pop
insb
insb
mov
lcall
imul
fisttpl
sub
inc
adc
push
sbb
push
in
xor
jge
call
push
cltd
push
loopne
pop
shll
add
or
mov
dec
movsb
test
push
dec
xorb
mov
mov
call
adc
cwtl
lret
fs
cmp
inc
aad
lods
and
fucom
push
inc
pop
nop
ja
movb
jnp
fdivs
mov
xor
stos
pushf
movw
movb
lea
jmp
add
pop
pop
jae
je
jae
jb
popa
je
gs
add
inc
and
xor
add
clc
sbb
neg
setg
mov
jmp
push
call
popa
mov
mov
pushf
pushl
pushl
lea
jne
jmp
add
enter
dec
xor
aaa
dec
xor
xor
insb
add
repnz
ret
icebp
sti
sbb
mov
push
out
jae
insl
loopne
incb
leave
add
out
push
movsb
daa
dec
adc
push
mov
mov
add
out
sbb
in
push
mov
adc
cld
adc
dec
push
sbb
mov
bound
mov
mov
sbb
inc
rcl
mov
xor
insl
loope
push
shlb
sbb
adc
outsl
add
inc
gs
outsl
fs
gs
imul
add
xor
pushf
lea
jne
call
repz
jmp
xchg
or
idivb
out
shl
mov
les
je
js
xor
in
jg
dec
out
in
sbb
test
pop
cmp
push
jge
inc
mov
insb
jne
adc
in
mov
in
add
jp
pop
mov
je
jbe
imul
mov
nop
std
hlt
movsl
ljmp
into
inc
jae
in
add
stos
in
add
fsubrp
pop
shrb
ficoms
mov
js
addl
idivb
ja
and
mov
nop
lds
lret
jne
dec
push
pusha
or
notb
add
sbb
xchg
inc
dec
js
lods
in
adc
mov
push
mov
mov
rolb
pop
mov
mov
xor
add
insb
insb
push
arpl
popa
rolb
or
lret
aaa
dec
mov
xor
sub
mov
sbb
mov
xchg
in
in
scas
xchg
or
verw
sarb
mov
arpl
in
gs
mov
add
je
imul
outsl
jb
add
push
gs
gs
jae
push
gs
popa
jo
outsl
jb
add
iret
mov
mov
mov
shlb
int
call
lcall
lock
push
sahf
cmc
sbb
add
ret
out
add
in
out
pop
jp
subl
cmc
cltd
jg
sub
movw
jmp
add
inc
outsl
insl
bound
gs
outsb
add
rolb
add
add
ja
jbe
dec
jne
push
popa
jne
gs
shr
lods
mov
mov
add
je
arpl
insb
insb
push
outsl
jae
lea
pusha
pushf
call
mov
lea
jb
pushf
pushf
pushf
pushl
ret
add
push
imul
jb
je
arpl
and
mov
pop
and
es
lds
ja
enter
int
push
fimuls
push
fisttpll
sti
adc
test
ja
jbe
mov
clc
dec
pop
call
mov
or
sbb
push
mov
mov
and
into
movsl
lret
rcl
rorb
pushf
mov
pushl
ret
mov
pushf
jmp
push
call
or
and
cmp
testl
in
leave
cld
mov
scas
mov
stc
out
shlb
pushf
lods
push
mov
movsb
aam
daa
in
xchg
fdivrp
inc
in
push
lcall
mov
push
ds
shlb
in
in
mov
adc
insb
fadd
jmp
sbb
xor
sbb
rcrl
insb
fs
mov
inc
call
and
les
pushf
sbb
in
jae
std
lock
adc
in
pushf
xlat
xchg
or
push
inc
cmp
sbb
lea
out
nop
imul
add
add
add
mov
js
push
fmuls
cmp
push
add
push
gs
imul
inc
and
lea
pushf
call
add
inc
outsl
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
xlat
cmpsb
pusha
call
adc
stc
test
mov
inc
fbstp
jl
mov
hlt
cmc
adc
adc
repnz
ret
scas
push
jns
jo
adcb
fcomip
push
inc
int3
jl
call
movsb
not
mov
inc
jle
and
movsl
dec
les
mov
je
jns
je
insl
dec
gs
imul
popa
insb
insb
outsl
arpl
add
dec
outsl
arpl
inc
jb
add
pushl
call
push
call
dec
cld
outsl
movzwl
sub
mov
pushf
clc
add
bt
clc
call
dec
test
das
push
stos
shrb
lods
movsb
push
pushf
popa
int
mov
es
and
push
mov
je
pushf
test
test
add
cmp
pushf
pusha
cmp
mov
jmp
lea
ja
dec
sub
push
pop
sar
dec
add
rol
pusha
mov
add
rcr
jmp
add
dec
outsb
jbe
insb
imul
je
add
inc
gs
insb
imul
je
ja
xor
sub
setle
add
stc
mov
bswap
mov
clc
rol
mov
call
push
bt
cmpb
movb
mov
push
jmp
add
pop
imul
add
inc
adc
sub
adc
mov
mov
pop
add
insl
adc
sub
add
pop
add
push
adc
push
jg
add
adc
push
in
add
push
adc
cmpl
add
adc
and
adc
fsubs
adc
shll
adc
call
xor
loop
adc
push
lods
adc
fs
adc
dec
cmp
add
add
pusha
adc
adc
add
ja
add
adc
mov
adc
pushl
add
adc
outsb
inc
adc
add
ja
add
adc
cld
pop
adc
add
add
or
adc
jp
adc
divl
adc
fldenv
pop
add
jb
add
adc
xchg
inc
adc
hlt
cmpsl
adc
mov
xchg
adc
jmp
adc
xchg
mov
adc
out
adc
xor
push
adcl
add
ja
add
pop
adc
mov
adc
aaa
mov
adc
push
sbb
adc
pop
pop
adc
jns
adc
mov
add
adc
pop
das
adc
xchg
add
push
adc
jb
adc
mov
adc
jmp
and
add
pop
adc
imulb
adc
dec
test
add
adc
out
adc
dec
jecxz
add
js
add
arpl
add
mov
adc
lds
add
adc
ret
movsl
adc
jmp
xor
pop
adcl
or
mov
adc
test
adc
in
push
adc
xor
adc
outsb
mov
adc
aas
jno
add
push
adc
push
inc
adc
push
xor
test
adc
mov
inc
adc
shlb
mov
add
inc
adc
add
add
adc
xchg
mov
add
cmp
and
add
cmp
add
je
add
adc
push
jae
add
dec
adc
add
add
jp
add
test
add
jne
add
mov
adc
inc
arpl
add
adc
mov
adcb
add
add
jo
adc
out
adc
add
adc
sarb
add
rclb
jp
add
pop
adc
andb
or
add
mov
push
add
cmp
push
adcl
add
imul
pop
cmpsl
adc
mov
adc
shll
add
pusha
adc
mov
push
adc
rclb
add
jb
add
adc
insl
adc
mov
jb
add
mov
adc
aaa
mov
adc
divl
add
sub
pop
stos
adc
jbe
adc
push
push
adc
sti
insb
adc
out
adc
les
mov
lods
adc
inc
pop
adc
push
jns
add
xchg
adc
jmp
push
adc
pop
adc
mov
adc
pop
nop
adc
and
add
inc
adc
xchg
push
adc
add
add
push
pusha
adc
dec
aas
adc
nop
mov
adc
jecxz
adc
sarb
adc
or
add
jns
add
movsb
adc
add
adc
shrb
pop
add
adc
fwait
and
add
pop
adc
xor
add
adcl
add
jb
add
adc
xchg
adc
add
add
mov
cmp
jmp
add
add
cmp
add
xlat
cmpsl
adc
aaa
movsl
adc
out
push
add
add
add
add
andb
add
lret
or
adcb
orb
add
xor
add
inc
add
addb
add
lods
add
or
add
popf
pop
add
das
or
adc
add
inc
sbb
adcb
add
adc
adcb
add
lahf
or
xorb
add
xor
add
sbb
add
movsb
pop
add
mov
adc
orb
add
mov
add
cmc
adc
orb
add
insb
push
add
icebp
push
add
or
push
add
icebp
pop
add
test
add
lcall
or
add
jecxz
add
xor
add
push
or
subb
add
sub
add
dec
or
adc
add
lahf
push
add
ret
orb
add
hlt
add
subb
add
lcall
adcb
cmpb
add
mov
add
pop
or
orb
addb
adcb
andb
adc
add
xchg
add
mov
add
mov
add
out
add
pop
add
xchg
adc
cmpb
sbb
add
xchg
adc
addb
add
loope
add
js
add
out
add
and
add
sbb
add
sub
push
add
fwait
or
sub
add
sub
add
test
add
pop
push
add
mov
sbb
addb
andb
orb
xorb
add
add
andb
add
and
add
pop
add
addb
add
xor
add
lret
adc
and
add
pop
add
sbb
add
jns
add
sub
add
outsb
or
cmp
add
push
or
andb
add
push
add
subb
add
arpl
add
stos
or
add
nop
add
andb
add
dec
add
and
add
dec
push
add
and
add
or
xor
add
test
add
testb
jp
add
sub
add
outsl
or
subb
xorb
add
icebp
or
sub
add
mov
add
inc
adc
add
popf
or
xorb
add
mov
push
add
mov
push
add
push
or
xorb
add
popf
push
add
out
sldt
aaa
adc
cmpb
adcb
subb
add
add
add
push
add
pop
adc
sbbb
addb
add
movsl
push
add
mov
adc
orb
add
cmpsb
or
orb
cmpb
add
mov
or
orb
add
testb
xor
add
pop
or
xor
add
dec
adc
xorb
add
fisttpl
add
sbb
add
cmc
or
add
xor
add
xor
add
xor
sbb
cmp
add
xchg
or
subb
add
repz
sbbb
add
xor
add
sbb
add
xchg
push
add
pushf
push
add
add
testb
xorb
cmp
add
imul
and
add
adc
add
decb
add
lcall
subb
add
fildll
adc
mov
sub
push
stos
adc
divl
push
add
test
adc
pop
ss
test
pusha
adc
jle
adc
fsubl
pop
add
das
adc
cmp
adc
lea
sub
adc
test
adc
stc
cs
jnp
adc
sub
adc
jl
adc
mov
adc
sbbl
sub
adc
xchg
add
xchg
adc
call
add
pop
adc
dec
and
add
jnp
add
adc
loopne
adc
cmp
add
das
adc
dec
sub
add
xor
add
jno
add
add
add
add
andb
adcb
add
add
add
je
add
or
add
fs
adc
xchg
adc
xchg
nop
adc
add
add
add
add
add
push
outsl
jae
dec
gs
popa
addr16
add
in
add
lock
incl
add
imul
outsl
ja
jb
insl
push
outsl
imul
test
addr16
jge
js
jle
cld
arpl
sbb
in
pop
xchg
shl
xchg
push
sbb
jle
aaa
pop
mov
iret
std
adc
nop
stc
xchg
pop
jmp
cmp
lods
xchg
pop
fwait
out
pop
mov
mov
add
gs
je
push
arpl
outsb
add
add
arpl
inc
imul
and
jmp
add
inc
jo
outsb
fs
outsb
jne
add
movsb
pop
mov
les
pop
scas
movsl
jno
xchg
call
fnstcw
and
out
lock
xchg
jnp
jle
loopne
in
push
pusha
cltd
cmp
fnstenv
push
sub
scas
mov
dec
xor
inc
outsb
adc
mov
adc
jp
call
pop
cmp
mov
jno
dec
mov
das
scas
dec
mov
dec
xor
das
ret
jge
add
pop
xchg
lds
notl
and
xchg
mov
mov
mov
xchg
imul
enter
iret
xor
addr16
adc
in
js
rcrb
or
xchg
clc
xchg
cld
lock
xchg
and
addr16
push
sbb
dec
inc
xchg
push
and
aas
add
add
add
inc
gs
jne
jb
outsb
je
bound
arpl
popf
push
call
add
rol
test
cmc
pushw
popfw
movb
inc
movb
call
call
add
add
push
add
push
push
add
push
add
add
imul
ja
jb
insl
push
outsl
imul
xchg
les
pusha
pushf
pusha
lea
jmp
add
inc
js
je
jb
arpl
jae
xchg
mov
neg
push
jmp
lea
je
test
pusha
cmp
call
test
mov
aaa
lret
dec
xor
mov
or
jbe
sbb
pop
inc
pop
push
jae
int3
lock
mov
mov
sbb
notb
daa
push
inc
repz
mov
mov
inc
out
imul
cmp
push
addr16
addb
add
lret
mov
nop
inc
icebp
jae
inc
and
in
shrl
jnp
jge
jl
js
add
sbb
scas
inc
outsb
cmp
push
loopne
or
shrl
push
lods
shrl
shrb
push
dec
movsl
scas
je
sbb
inc
pusha
jge
ss
outsb
insl
dec
xor
lret
sub
or
or
xchg
or
xor
fimull
in
jl
mov
xchg
inc
jnp
imul
stc
pop
jp
stc
adc
lcall
push
jmp
or
insb
jl
jge
test
test
mov
mov
jg
cld
cmp
add
sbb
decl
dec
sub
adc
es
cmp
rolb
add
pop
outsl
outsl
insl
gs
fs
call
push
pusha
pushf
lea
jae
bt
cmc
stc
xor
push
pushf
lea
call
jmp
ljmp
cmpsl
pop
cmpsl
fsubl
fisubl
cmp
gs
cmp
bound
xchg
push
inc
cs
es
mov
mov
cmpsl
cmp
lahf
out
fisubs
nop
cmp
cmpsb
clc
ja
xor
out
and
push
jnp
sarb
test
sub
pushl
xor
cmp
pop
std
mov
jg
inc
repz
or
imul
pop
out
add
arpl
mov
ss
pop
inc
sbb
and
aam
mov
jb
popa
packsswb
repz
pusha
jmp
add
jae
jb
arpl
add
add
insb
insb
push
imul
push
popa
je
push
outsl
push
imul
add
pushf
pushf
lea
jae
push
pushf
lea
jne
call
add
insb
outsl
outsb
addr16
jo
add
inc
jb
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
rolb
or
fs
jae
cmc
cmp
push
lea
ja
ja
jmp
rol
bsf
sete
bsr
mov
cmp
stc
and
cmc
stc
jns
stc
add
pushf
lea
jmp
pop
mov
cmp
movsl
inc
pop
pop
xor
sbbb
mov
out
mov
sub
notl
xchg
lret
mov
negl
push
push
imul
add
aam
jmp
sbb
add
add
add
add
add
add
xchg
adc
cld
xchg
adc
cli
xchg
adc
add
add
add
add
xlat
aas
ja
aas
lock
push
xchg
lods
or
clc
lret
mov
rep
xchg
sub
sbb
call
sbb
xor
pop
jecxz
test
inc
mov
les
push
icebp
mov
add
and
dec
dec
cs
xchg
pop
pop
dec
jne
jns
test
dec
adc
lret
pop
xchg
lds
xor
ja
cwtl
dec
in
add
mov
in
mov
cmpsb
mov
je
into
cmp
mov
in
or
lret
add
cs
incl
cmc
jae
in
imul
cwtl
or
mov
or
sub
mov
pop
and
pop
aaa
inc
insl
mov
pop
pop
jl
call
cmp
repnz
adc
cmp
int
fnstsw
into
inc
aam
movsb
popf
insb
jno
and
mov
adc
push
jns
ret
mov
fisubrs
std
push
pop
je
pop
cmp
pop
jl
clc
lods
add
push
inc
mov
aas
inc
cli
xchg
sti
jno
pop
inc
ja
pop
orl
push
addl
dec
push
and
jge
lods
adcb
or
and
ficomps
out
sub
stc
push
pop
mov
xchg
sbb
push
shll
sahf
ret
push
mov
insl
rcll
les
lods
pop
mov
cmp
inc
mov
out
fnstenv
xlat
push
mov
dec
add
dec
rsm
jecxz
dec
cmc
xor
js
mov
mov
xchg
ss
sub
out
jne
push
rorb
cmp
clc
adc
xor
mov
cmp
mov
shlb
ret
out
lock
daa
cmp
rcr
ljmp
rol
out
xchg
jg
mov
add
or
test
in
push
fwait
xchg
inc
mov
lcall
mov
mov
bound
push
movsb
jecxz
negl
mov
and
repnz
cmpl
pop
inc
clc
jecxz
je
lahf
add
cmpsb
add
xchg
pop
sub
insb
cmp
lds
pushf
sub
es
adc
mov
dec
push
push
je
call
jne
pop
cmc
and
push
shll
mov
and
mov
xor
shrl
movsb
sbb
add
rclb
fildll
lret
mov
pop
inc
adc
cmpsb
stos
bound
daa
in
xlat
xor
mov
insb
lret
xor
das
mov
mov
loopne
or
xchg
lods
jno
add
sbb
iret
mov
popa
dec
aaa
mov
ja
xchg
dec
mov
loopne
push
and
pop
pop
ret
xor
test
push
jmp
fnstsw
adc
sti
imul
cmp
repnz
fwait
add
fbstp
out
mov
push
lcall
push
add
cmp
ret
repz
lret
and
mov
inc
mov
xchg
sub
mov
scas
cmp
andb
stos
add
xchg
in
ds
sub
ror
push
push
je
or
lock
nop
dec
pop
add
cli
push
xor
lret
test
stc
cs
pop
jle
int3
pop
pop
cltd
int3
xor
push
icebp
ss
or
sbb
fdivl
lea
in
adc
jg
fisttpl
js
jecxz
xchg
js
ljmp
pop
sarl
sub
aam
das
jmp
aam
nop
adc
ljmp
and
xchg
in
xorb
scas
jp
cs
lock
cmp
push
das
dec
push
jns
mov
push
xchg
bound
fnstsw
sbb
sbb
out
inc
sbb
iret
push
stc
addr16
jnp
fstpt
dec
test
fistpll
and
jecxz
fmuls
mov
loopne
call
out
sub
and
mov
dec
mov
loop
adc
xor
push
jmp
jmp
mov
mov
sbb
aaa
orb
negb
sbbl
data16
mov
dec
imul
mov
jno
push
shlb
rorl
nop
mov
in
xor
mov
add
fstpl
push
jmp
sbb
inc
out
ss
cwtl
incb
cld
fdivp
or
inc
or
fimuls
aas
inc
stos
jge
punpckldq
icebp
aaa
lahf
fneni(8087
mov
ss
sahf
xorb
pushf
push
out
sbb
rolb
adc
or
sti
sbb
add
rcrb
cmpsb
sbbb
pop
jo
jl
mov
fidivs
or
adc
jmp
cltd
nop
fs
mov
mov
testb
mov
pop
and
test
testl
xchg
sub
outsb
aas
popa
push
test
clc
mov
fldenv
int
mov
movsl
repnz
insl
sbb
xchg
pop
xor
mov
xor
fidivrs
push
aad
iret
in
outsb
and
repz
stos
addr16
sbb
and
jo
sbbl
out
mov
mov
xor
lret
rcll
cmc
push
aas
fistpll
test
xchg
mov
jno
cmp
ret
mov
sub
aam
mov
pusha
jbe
lods
sbb
pop
fistpll
sbb
xchg
push
scas
sbb
outsl
fsubrs
jns
mov
mov
les
push
imul
sbb
sub
shll
jecxz
lahf
pop
jne
imul
jne
inc
mov
aaa
jle
mov
pop
sti
mov
pop
push
pop
mov
lahf
nop
dec
add
mov
xor
cmp
xchg
test
xor
data16
jae
xchg
mov
mov
dec
mov
xor
lock
in
mov
mov
xlat
stos
xor
mov
xchg
js
xchg
or
dec
xor
push
fisubs
cmpsb
push
or
es
push
xchg
sub
pop
push
movsb
ja
add
and
pusha
nop
dec
mov
cmc
imull
xchg
inc
sub
pop
shl
rclb
stos
dec
aaa
fwait
gs
cli
xor
push
sbb
movsb
addb
mov
lcall
ljmp
and
inc
int
icebp
xchg
fwait
mov
push
sub
out
jb
shll
fsubl
cmp
cli
ror
arpl
cmp
inc
ret
xchg
test
adc
dec
decl
xchg
add
movsb
pop
push
pop
cltd
push
xchg
or
fldcw
inc
cmpsb
mov
roll
lods
inc
pop
adc
mov
test
dec
cmp
pop
jmp
hlt
xchg
sbb
loopne
loope
inc
mov
add
aas
shlb
inc
iret
je
inc
push
pop
cltd
fcmovnbe
subl
sub
hlt
dec
loope
pop
sub
xchg
mov
sbb
mov
daa
dec
cmp
jbe
and
cmpsl
xchg
clc
inc
imul
subb
or
fdivrs
test
jge
into
mov
or
cs
scas
data16
mov
mov
jp
cli
xor
clc
add
adc
icebp
mov
cmpsl
testl
sbb
push
scas
mov
pop
adc
xor
dec
inc
cwtl
loope
or
repnz
jb
mov
ficomps
jecxz
mov
mov
rcrl
das
xchg
imulb
pop
add
xor
or
or
arpl
pusha
cmp
icebp
mov
mov
dec
push
jl
ds
and
mov
pop
jne
mov
fmuls
sbb
dec
inc
div
push
mov
lock
mov
inc
mov
cli
movsl
decl
add
push
out
pop
mov
push
dec
test
repnz
xchg
add
mov
loope
lahf
daa
push
jle
ficompl
aam
call
maxps
test
popa
pop
xor
xchg
pop
pop
in
xlat
xor
dec
dec
mov
push
ficoml
outsl
mov
sbb
mov
add
orb
or
ss
xchg
es
xor
adc
iret
cmpsl
or
cli
iret
mov
in
orb
iret
mov
orb
daa
ljmp
enter
mov
add
ss
cmc
mov
out
or
outsb
push
push
sub
in
pop
test
pusha
pusha
pop
sbb
dec
stos
movsl
stos
test
xchg
jae
push
orl
cmp
sub
jb
ret
cmc
xchg
sub
cmp
pop
sub
leave
dec
pop
sbbl
in
out
rcrb
sbb
pop
add
mov
cmp
mov
out
push
and
xor
mov
lods
in
jno
inc
pop
repnz
movsl
jle
mov
inc
mov
enter
std
in
movsb
jae
pop
cmp
stos
sarb
movsb
arpl
fsubrl
xchg
mov
shrl
shrl
je
or
int
mov
jge
dec
insb
cmp
mov
in
or
mov
insl
fs
xchg
imul
lods
mov
popf
xchg
mov
lret
ljmp
dec
rorl
out
fwait
cmp
addr16
xor
push
push
xor
stc
in
xchg
xchg
inc
lock
jns
jno
std
push
xchg
es
adc
jo
jbe
test
sbb
in
fiadds
into
pop
sahf
inc
mov
out
push
pop
dec
or
ss
es
lahf
stos
dec
insb
mov
mov
xchg
push
dec
fucom
pop
in
in
lock
xor
lea
xchg
in
pop
dec
jns
xchg
in
shlb
pop
push
pop
xor
adc
push
sub
cmp
xor
mov
fucomp
shrl
mov
inc
push
fbld
jnp
cltd
pop
sbb
inc
cmpsb
jmp
out
mov
pop
pop
cld
hlt
and
sbb
clc
popa
jle
push
mov
push
mov
rorb
sub
xchg
addb
std
mov
insl
pop
cmp
mov
loop
inc
out
into
xlat
mov
rclb
subb
pop
or
mov
push
mov
and
jecxz
push
sbb
xor
xor
xchg
insb
add
aam
stc
push
and
lcall
mov
cmpsl
adc
and
stos
mov
daa
sahf
cmp
mov
mov
adc
jl
push
pop
pusha
mov
into
jbe
out
shrl
jmp
in
dec
bound
add
bt
pusha
pushl
popl
pushf
cmp
call
add
dec
data16
je
arpl
inc
push
dec
inc
dec
xor
cs
insb
add
mov
bound
jmp
add
inc
gs
dec
push
xor
push
test
call
push
call
or
decl
add
pop
pop
jo
pop
insw
outsl
fs
fucomi
mov
add
add
inc
jb
popa
je
inc
jbe
outsb
je
add
inc
mov
inc
aas
rcr
mov
xor
jae
mov
imul
mov
imul
out
imul
aas
scas
outsb
out
cmc
ret
pop
shlb
fisttpll
cmp
cmp
mov
ja
mov
rcr
sarl
sub
dec
push
scas
pop
mov
test
call
out
out
jg
pop
push
mov
aam
inc
in
fmull
pop
adc
aas
or
sbb
xchg
lods
mov
mov
inc
hlt
mov
push
movsl
mov
movsl
xchg
mov
pop
leave
and
enter
lret
mov
cmp
push
push
pushf
push
lea
je
pusha
lea
jmp
add
push
gs
gs
jae
inc
popa
jo
jne
add
add
outsl
ja
imul
add
gs
je
inc
insb
insb
imul
outsb
add
icebp
mov
push
adc
push
ds
lea
push
ret
cmp
mov
ds
lock
xor
dec
fists
das
pop
imul
test
push
ficoms
jb
idivb
mov
imul
push
push
sbb
mov
inc
cmp
sbb
push
fadd
lods
rep
test
add
add
jp
loope
pop
lret
mov
leave
outsb
fbld
jae
push
cmp
outsb
repnz
adc
push
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
imul
arpl
outsb
add
inc
and
into
ret
pushf
mov
pushf
mov
pushf
pushf
pushl
ret
out
lock
jne
jno
xchg
jbe
imul
add
push
shll
bound
daa
adc
loop
xchg
call
outsb
bound
pushf
lods
xchg
sbb
loope
bnd
mov
lcall
cmp
jle
and
rcrb
cmpsb
mov
and
jg
pop
int3
fcoml
stos
in
rcl
outsb
mov
movsb
cmp
and
mov
imul
orb
negb
das
in
sbb
sub
lea
xor
bts
mov
call
xor
icebp
or
or
xchg
fidivl
cmp
out
inc
xchg
daa
repnz
cmp
mov
icebp
sbb
test
dec
xchg
mov
das
inc
sub
dec
pop
xor
gs
je
push
outsb
add
aam
aad
scas
shrb
push
lret
dec
cmpsl
insl
fcoms
pop
stos
push
adc
insl
and
sbb
shl
add
push
xchg
rorb
loope
pop
out
fmulp
test
mov
outsl
sahf
insb
mov
dec
lock
daa
xchg
out
ljmp
fisttpll
add
inc
push
adc
cmp
in
inc
out
les
sub
imul
sbb
inc
rcl
adc
xor
push
mov
dec
and
push
sub
dec
scas
aam
xlat
sub
xor
adc
ja
data16
mov
xchg
jmp
clc
and
adc
loope
popl
in
and
in
gs
imul
movsb
inc
icebp
mov
imul
iret
mov
cmp
sub
psubq
mov
xchg
inc
sbb
decl
mov
pop
mov
dec
pop
push
shrb
and
mov
stc
sbb
cwtl
rcl
sbb
repz
jg
pmulhw
and
decb
arpl
pop
jp
xor
jl
clc
jb
mov
callw
add
add
ja
jbe
dec
jne
push
jb
jo
jb
dec
gs
fs
lea
jne
mov
lea
xchg
pusha
mov
pushl
call
push
call
push
fsubrl
push
call
and
imul
insb
gs
outsb
imul
imul
xchg
ret
xchg
shrd
aas
mov
clc
mov
dec
setb
mov
test
mov
cmp
mov
jmp
shld
movsbw
shr
shr
xchg
adc
shrd
bsf
mov
rcr
jmp
pusha
jmp
dec
pushl
stc
stc
clc
not
pushl
ror
rol
not
stos
pushf
mov
lea
jmp
add
inc
gs
jns
je
insl
dec
outsb
jne
pusha
testb
mov
jno
adc
fs
mov
push
pop
push
jp
repnz
cld
lea
lods
sbb
in
je
xor
mov
xor
lret
jecxz
sub
adc
divb
fwait
dec
and
icebp
and
add
cmp
jns
out
jecxz
mov
sub
mov
pop
arpl
clc
adc
mov
push
xor
in
pop
mov
xlat
fisubl
pop
mov
or
sub
mov
aaa
push
xor
add
fstpt
daa
fcmovne
mov
inc
std
xchg
jnp
and
xor
mov
es
pop
mov
dec
pop
sbb
add
and
push
mov
dec
and
xchg
mov
icebp
push
arpl
jbe
adc
lods
pop
add
jmp
incl
add
outsb
fs
gs
inc
imul
gs
jo
gs
insb
insb
outsl
arpl
ljmp
rorl
push
add
add
push
lea
cld
in
and
pop
enter
leave
aad
add
pop
xchg
ret
lock
int3
nop
cmpb
arpl
dec
pop
sbb
add
fstpt
dec
and
adc
stos
xor
addr16
insb
sub
ret
outsl
in
rol
test
jns
js
loope
add
je
insb
je
aas
shrb
scas
push
sub
test
jmp
pop
pop
pushf
adc
ljmp
mov
outsl
add
push
push
int3
jge
fdivl
mov
mov
fimull
push
lock
push
clc
dec
pop
push
pop
adc
outsl
xchg
add
movb
rol
bt
add
jle
shr
call
add
dec
insb
gs
outsb
imul
add
add
jb
je
push
add
dec
outsl
popa
fs
imul
add
jae
popa
addr16
outsl
js
add
pusha
cmp
jmp
pushf
lea
je
cmp
mov
sub
mov
rcl
sub
call
add
aas
aas
xor
gs
imul
inc
inc
inc
pop
pop
add
mov
cmp
rcr
cmp
jecxz
fwait
jae
nop
cmp
test
loope
or
xchg
jge
jle
mov
cli
push
jge
mov
xorl
fldenv
out
ds
mov
mov
adc
xchg
jecxz
jmp
dec
out
dec
mov
cmc
sahf
negl
jb
outsl
add
pop
fnsetpm(287
dec
sti
out
fwait
xchg
mov
jge
cwtl
fs
adc
adc
mov
and
rcrl
jae
or
or
das
test
jae
loope
loopne
jp
jmp
sub
add
test
lahf
in
xlat
lret
dec
xlat
adc
jnp
subb
jmp
dec
sti
hlt
xchg
mov
fnstsw
orl
jo
jbe
add
sbbl
in
cli
in
sub
mov
stc
sub
jge
in
xchg
out
lock
es
add
xchg
push
shll
fcomps
sub
fwait
jmp
add
popf
xchg
xchg
jg
inc
push
xor
pusha
xor
dec
xchg
add
pop
insl
bound
insl
jo
add
popa
je
imul
stos
push
sub
lods
push
sub
aad
jbe
mov
addr16
xor
pop
pushf
outsl
inc
pop
stos
jnp
dec
ret
icebp
sbbb
sbb
es
fisubrs
push
loopne
inc
dec
ffreep
sub
sbb
rcl
popa
mov
mov
push
shll
fidivl
test
add
addr16
outsb
jbe
add
inc
gs
imul
je
js
pusha
lea
ja
mov
dec
inc
dec
inc
call
call
push
call
ds
je
fcom
call
out
bsr
adc
add
add
dec
shld
not
shr
mov
stc
mov
pusha
repnz
push
lea
jne
push
movsbl
movb
movsbl
pop
push
push
pusha
lea
call
dec
push
push
inc
push
push
cs
insb
add
add
je
imul
add
leave
pushf
lea
jmp
add
insl
imul
insl
dec
jo
outsb
add
add
je
popa
jo
jne
add
add
inc
push
push
call
movsb
ret
imul
push
stos
mov
test
inc
xchg
inc
or
mov
sub
call
popa
add
aaa
adc
lock
fbld
mov
jge
pop
or
enter
mov
add
xchg
test
ljmp
mov
lds
into
testb
sub
xor
add
mov
ret
stos
sub
xchg
out
pop
dec
js
xor
dec
stc
jp
sahf
cmc
cmp
pop
jb
dec
xorl
and
mov
push
mov
lcall
test
mov
out
jg
jb
movsb
pushw
sbb
sbb
push
xchg
pushf
sbb
addr16
loop
pop
aaa
pop
sub
inc
sub
int
xchg
xchg
jns
leave
jae
fsubrl
xlat
lea
std
xor
out
leave
and
rcl
call
pushf
movzbl
mov
movb
pushl
ret
add
inc
jb
gs
imul
lds
testb
imul
imul
add
pop
shrl
orl
dec
add
fcomip
adc
into
cld
mov
lcall
push
push
faddl
sub
xlat
xlat
jp
xor
adc
es
dec
push
pushf
adc
cld
das
lds
inc
sub
add
je
jb
arpl
arpl
scas
ss
pshufw
adc
loope
mov
loop
add
mov
mov
xlat
cltd
dec
enter
cmp
cmpb
test
mov
fistl
adc
pop
mov
enter
cmp
in
fwait
push
and
add
adc
sub
rol
mov
or
incl
sub
out
xchg
in
test
nop
hlt
mov
mov
jnp
xor
stc
ja
xchg
out
lods
add
xlat
mov
mov
sbb
mov
dec
xchg
jmp
rcl
fildl
enter
rcrb
cmp
inc
sarb
mov
cld
hlt
cmp
hlt
jmp
inc
int
jo
lret
inc
mov
mov
add
gs
je
inc
dec
inc
imul
gs
fs
lcall
ja
mov
cwtl
test
inc
dec
sbb
mov
outsb
fs
add
subl
loope
push
pop
repnz
outsb
shrl
lea
int
mov
xor
push
push
dec
dec
dec
cs
push
push
add
xor
clc
cmp
mov
pushf
push
lea
je
call
mov
movzbw
not
not
mov
pushf
mov
mov
call
add
pop
imul
insl
add
add
jne
inc
imul
gs
imul
add
movsbw
jmp
gs
sbb
stos
jno
jge
lock
xor
inc
add
sbb
lock
scas
in
inc
and
test
pop
or
sarb
sbb
in
outsb
cmp
mov
add
loopne
add
xchg
pop
add
mov
jnp
pusha
cmp
cmp
mov
loope
fisubs
sub
mov
mov
ja
subl
pop
xor
inc
adc
sbb
and
rorb
cwtl
orb
enter
pop
sarb
pop
xor
mov
mov
or
xorb
pop
sbb
sub
cmp
jle
jle
sub
adc
adc
call
lock
repz
mov
iret
adc
scas
xchg
sub
adc
inc
or
sahf
ret
adc
rep
xor
xor
ss
pop
popa
and
mov
insb
rolb
pusha
sub
cmp
jo
add
push
or
loopne
sub
popf
sub
int
add
adc
mov
sbb
dec
add
loope
nop
sbb
ljmp
lods
and
sub
hlt
scas
cld
orl
adc
andl
and
cmpsb
push
into
or
std
pop
int3
adc
ljmp
jge
push
mov
and
cmp
ljmp
xor
ret
and
call
inc
leave
inc
int3
sub
inc
mov
inc
sub
sub
add
lahf
mov
sbb
jo
test
add
sbb
and
add
lcall
testb
push
push
enter
jle
notb
in
enter
mov
popf
jg
jg
out
and
lret
outsl
and
sub
adc
adcb
jg
adcb
mov
add
nop
sar
push
add
sbb
xor
sbb
mov
or
push
dec
lods
dec
scas
fidivl
push
push
mov
test
test
fs
add
cltd
pop
repnz
adc
add
mov
add
adc
and
cmc
nop
adc
pop
dec
push
addl
pop
rorl
fmul
sub
fcoml
data16
roll
fmuls
stc
into
cmp
cmp
mov
xchg
add
fsts
lahf
xchg
xor
mov
push
push
dec
dec
sub
repz
imul
push
iret
pop
add
mov
pop
dec
loop
dec
pop
mov
and
xchg
dec
mov
xchg
dec
cmp
inc
add
mov
jmp
cmove
adc
loopne
insl
outsb
mov
out
push
add
or
test
mov
mov
mov
add
daa
inc
xchg
and
js
scas
in
and
arpl
pop
decb
mov
scas
out
inc
inc
decb
test
sub
inc
repnz
adc
sbb
inc
mov
gs
pusha
xchg
push
rol
sahf
pop
clc
iret
js
inc
cmp
and
mov
xor
jae
jl
popf
and
int3
xchg
adc
adc
xchg
inc
jge
xor
clc
test
mov
cltd
lock
push
add
push
mov
push
pop
xor
dec
or
dec
or
js
test
es
xchg
push
or
dec
cmpsl
in
loope
into
push
popa
add
push
jno
enter
mov
xor
add
dec
sbb
addl
stos
pop
out
dec
bound
aam
xor
inc
rcrb
sbb
inc
aas
dec
add
or
sahf
xchg
and
or
arpl
loope
or
xor
scas
push
sbb
movl
push
loope
mov
dec
popf
add
stc
es
cltd
scas
popf
xchg
pop
shlb
sub
shlb
pop
inc
stos
dec
sqrtps
sub
jb
sahf
bswap
adc
fsubl
test
add
inc
es
daa
or
mov
aas
daa
ljmp
int
aaa
and
das
jno
pop
lahf
insl
fsubs
pop
fmuls
stos
jbe
adc
mov
test
dec
dec
rdtsc
inc
lahf
pop
imulb
sbb
pop
sub
shl
push
xor
pop
push
adc
std
or
pop
dec
repz
jg
push
sub
rcrl
rorb
adc
pop
cmp
mov
xor
or
nop
call
sub
mov
jb
xor
insb
mov
xchg
in
nop
cmp
inc
outsb
sbb
or
in
lds
subl
dec
or
sub
mov
test
jo
rcrl
mov
enter
flds
mov
dec
pop
jns
add
cmpl
pop
rorl
loope
sub
cmpsl
mov
sti
sub
add
mov
lahf
add
sarb
and
nop
out
cmp
fsub
movsb
or
xlat
icebp
cwtl
enter
pop
test
pop
lret
divps
popl
add
jo
pusha
mov
xor
roll
dec
ret
enter
mov
pop
jge
cmp
and
addr16
ror
fadd
into
sbb
lret
push
sbb
cmp
hlt
icebp
in
leave
loopne
ljmp
cmpl
xchg
fisubl
jns
jo
call
dec
mov
push
mov
sbb
ja
ja
add
cmp
pop
push
mov
cmp
cmp
sbb
cltd
out
adcl
int
add
mov
sbb
jns
cmp
mov
push
and
nop
xchg
pop
loopew
scas
jno,pt
push
fistps
sbb
pop
jo
xor
mov
inc
sub
lahf
jmp
xorl
add
jge
mov
sub
gs
sbb
adcb
cmp
sbb
outsb
and
ljmp
ret
adc
lds
add
and
mov
add
sbb
mov
test
mov
filds
mov
loopne
fsub
orb
cwtl
inc
lea
or
xor
mov
aaa
bound
pop
test
and
imul
rcl
and
shlb
call
mov
dec
mov
imul
adcb
rcl
jb
loopne
imul
test
jecxz
wrmsr
or
inc
mov
mov
aaa
inc
lcall
ficoml
xchg
mov
inc
pop
pushf
push
or
mov
mov
andl
scas
inc
cmc
mov
inc
adc
mov
inc
cmc
movsb
call
imul
rcrl
or
add
inc
ljmp
ret
xchg
outsb
sub
sbb
add
pop
test
jo
add
pop
sbb
push
mov
lcall
sbb
dec
cltd
in
pushf
mov
lcall
aas
or
cmp
xlat
das
add
cmp
sbb
inc
push
mov
loope
popf
outsb
mov
pushf
add
jo
inc
dec
or
pusha
mov
jno
sub
arpl
inc
rclb
sub
push
or
les
inc
fisttpll
add
mov
pop
pop
add
mov
dec
lods
lcall
add
inc
fs
add
fidivs
int3
cwtl
xor
popa
xlat
fidivl
xor
mov
cmp
jle
mov
mov
mov
and
mov
xchg
dec
adc
or
inc
nop
scas
cltd
int3
in
inc
sbb
push
push
dec
jle
push
mov
jmp
rol
jno
test
lods
loopne
adc
push
repz
jmp
test
outsl
sub
stos
lahf
dec
rcrb
inc
jno
inc
test
xchg
or
sbb
jecxz
in
inc
rol
bound
mov
rcrl
in
xchg
adc
pushf
xchg
add
das
mov
and
call
test
cli
dec
mov
mov
in
es
movsb
mov
dec
inc
loopne
xor
dec
pop
nop
mov
ficoml
dec
mull
adc
les
movsb
xor
enter
cmp
scas
mov
push
or
lea
jnp
mov
push
fwait
mov
sbb
sbb
mov
stos
fimuls
nop
mov
or
push
pushf
andb
or
cmp
dec
mov
dec
mov
outsl
xor
test
js
pushf
in
inc
xchg
xor
sub
mov
fs
call
sub
adc
lret
inc
cmp
or
jne
fists
es
inc
sub
sub
mov
fwait
add
or
andb
and
inc
inc
incl
fwait
xor
dec
test
icebp
adc
xchg
xor
dec
sub
push
dec
push
dec
mov
pop
out
dec
cmpsb
xor
fsubrp
pop
add
out
ss
xchg
arpl
xor
sbb
sbb
pushf
xchg
or
add
and
xor
roll
adc
dec
loopne
dec
movsl
and
dec
std
test
and
mov
jle
std
ljmp
xor
jno
xor
or
loopew
jmp
cltd
test
dec
jmp
mov
and
popf
jecxz
or
and
inc
sub
repz
pop
in
outsl
mov
pop
adc
dec
and
fdivrs
pop
pop
push
out
or
sbb
das
loope
xchg
push
lock
aas
inc
pushl
pusha
in
arpl
scas
add
in
mov
popl
sub
inc
cltd
rorb
mov
movsl
lods
dec
add
lea
dec
shrl
and
stos
icebp
cmp
add
jge
leavew
sbb
cmpsb
imul
into
push
int3
xor
in
push
outsb
leave
jbe
mov
xchg
dec
xor
pop
movl
and
inc
xchg
pop
mov
inc
imul
mov
sbb
jl
stos
out
jbe
mov
add
daa
aam
jmp
in
mov
nop
dec
loop
fidivrs
add
mov
sub
mov
dec
stc
add
aaa
out
ja
addl
ja
mov
lret
repnz
nop
push
mov
add
outsb
or
xchg
cs
int
and
stos
cwtl
xchg
dec
les
jb
stos
lcall
or
sbb
cmpsb
fsubs
das
inc
ja
cmp
or
or
cmp
pushf
jp
push
dec
addb
jge
arpl
lds
call
test
inc
clc
or
sub
inc
fs
or
sbb
scas
and
add
jecxz
stc
or
adc
mov
enter
cmp
pushf
pushf
mov
fcmovbe
orl
jns
add
movsb
imul
xchg
add
lcall
cmp
test
xor
movsb
lock
pop
in
push
add
pusha
mov
clc
add
inc
pop
dec
mov
sub
cmc
test
cmp
push
or
mov
adc
pop
xchg
fs
jge
mov
aad
cs
in
aas
movsb
push
inc
mov
push
shrb
inc
cmp
popf
mov
cmpsl
push
inc
or
mov
push
sub
fs
or
jmp
mov
push
sub
out
jg
inc
mov
mov
pushf
pop
inc
popf
xorl
cltd
cmp
mov
loopne
ljmp
and
push
or
dec
mov
movsl
push
shl
imulb
pop
pop
jb
pop
or
dec
or
pop
cmp
out
mov
xchg
mov
mov
or
cmpsl
and
loop
aam
lret
jae
in
jl
add
mov
jle
add
cmp
cltd
loopne
add
dec
movsl
xor
push
mov
rorb
ret
xor
mov
push
or
pop
cli
dec
lahf
daa
push
jae
add
ljmp
cmpsb
xchg
sbb
jge
popf
test
sbb
push
rcrb
enter
out
sbb
movsb
sub
dec
mov
roll
sbb
mov
shrl
orl
clc
cmp
adc
icebp
adc
gs
sbb
pop
cli
push
xlat
xor
add
mov
imulb
push
and
mov
and
out
test
dec
and
pop
or
mov
ret
int3
out
adc
aaa
insl
rcl
cmovne
and
cs
sub
inc
in
mov
or
mov
xor
mov
pop
jnp
inc
push
sbb
faddl
mov
mov
sbb
cmp
sbb
pop
add
call
aas
loop
jp
xor
leave
pop
and
into
jb
dec
or
shrl
jbe
lea
ss
push
cmp
fdiv
cmpl
adc
mov
xchg
rorb
mov
out
ss
inc
test
or
adc
lcall
inc
out
sbb
lahf
mov
add
xor
clc
push
aaa
in
lea
sub
stc
fadds
inc
pop
fwait
shrl
adcl
aam
popl
adc
loop
push
rcrb
xorb
push
repz
cmp
out
sbb
sbb
sub
push
popa
lahf
sbb
icebp
movsb
rolb
mov
xor
clc
cmp
or
fwait
push
jns
movsb
ds
push
cltd
adc
xchg
push
adc
sbb
xor
cwtl
iret
dec
imul
iret
add
ss
loop
movsb
push
and
test
mov
dec
loop
bound
or
xlat
mov
xor
and
sub
mov
adc
and
ret
add
incl
icebp
push
sbb
mov
dec
xchg
sub
push
ljmp
rcll
rorb
nop
gs
xor
ret
xchg
add
xchg
je
lahf
cmpsb
add
adc
xlat
ret
cmp
inc
xorl
jne
jns
movsb
add
sub
outsl
dec
lds
xor
pop
fsub
mov
sbbl
outsl
or
cwtl
sub
fwait
lods
jnp
mov
sbb
ficomps
enter
xchg
dec
xchg
mov
in
outsl
fdivrl
shll
lods
gs
xor
ds
xlat
or
push
cmp
pop
orps
popf
mov
xchg
fwait
dec
pop
divb
inc
push
pop
cwtl
sbbb
fidivrl
in
bound
adc
hlt
insl
adc
dec
cmp
adc
nop
or
xchg
push
mov
sbb
test
das
pop
pop
mov
lahf
xchg
push
mov
ror
sub
test
mov
mov
or
addl
push
push
sbb
int3
xor
xchg
cmp
movsb
adc
call
imul
adc
into
stc
lret
push
sbb
imul
cld
leave
aas
push
cli
lret
or
pop
push
mov
jo
mov
push
fisubs
dec
push
xor
popf
jmp
jno
ret
push
dec
jle
xchg
leave
nop
xor
and
mov
mov
pop
adc
mov
cmpsb
shrb
xchg
jns
fcomps
push
out
fidivl
xor
pop
pop
dec
cmp
lock
push
ret
outsb
icebp
sub
mov
dec
mov
bound
mov
push
jmp
sbbl
call
shrl
mov
or
adcb
pop
int
scas
adcl
jno
movsl
mov
push
fsub
or
push
imul
shl
clc
mov
mov
in
int3
cmp
xor
lods
and
and
rorl
mov
pop
mov
and
jbe
lahf
popf
stos
jbe
imul
pop
push
jbe
enter
inc
pop
lahf
push
movzwl
movsb
add
xor
sbb
pop
push
sbb
push
add
jg
xor
faddp
mov
mov
loop
xchg
xchg
mov
movsb
and
mov
andl
jnp
mov
in
and
inc
adc
fs
test
mov
mov
iret
and
mov
mov
jle
mov
frstor
roll
ret
add
filds
mov
jo
testl
nop
in
fwait
repz
mov
sub
mov
mov
mov
jp
or
push
stos
lods
es
xlat
loop
je
and
fnstcw
mov
loope
xor
dec
pop
lods
or
lret
inc
outsb
dec
pop
adc
jge
pop
in
dec
sbb
inc
lahf
shrb
enter
jle
inc
xchg
xor
loopw
notb
fnstcw
cmp
aas
in
ret
mov
je
cmp
mov
dec
xor
xorb
inc
add
push
outsl
bound
movsl
dec
inc
sub
lahf
lods
dec
or
xor
and
or
lahf
or
add
jge
lcall
inc
jno
int
xor
iret
sbbb
mov
aam
sbb
adc
or
lods
inc
imul
jl
test
fstl
adcl
push
mov
adcb
pop
and
test
cmc
and
push
sbb
and
addb
mov
dec
mov
sbb
cltd
sarb
lret
aad
imul
xchg
mov
mov
cmp
mov
ret
mov
adc
fcmove
mov
icebp
repnz
pop
push
pop
adc
sbb
add
xchg
loope
daa
int
pop
shlb
lahf
lea
push
in
mov
test
les
xchg
sbb
movsl
iret
ja
pop
xchg
push
dec
iret
mov
mov
movsb
add
inc
mov
loopne
scas
pushf
sub
mov
pop
mov
cmp
andb
sbb
test
and
xchg
adc
or
or
sbb
pop
sbb
xchg
lods
popl
sahf
shr
mov
scas
jbe
popf
pop
add
divl
lds
and
rcrb
and
daa
nop
pop
pop
test
cmp
test
fs
out
stc
push
add
add
dec
adc
add
inc
movb
sbbl
into
leave
push
movsb
outsl
aas
adc
add
adc
fistpll
les
ja
into
sbb
nop
inc
add
out
xchg
jbe
mov
pop
sbb
movsb
stos
sahf
int3
adc
mov
lds
cltd
rcrb
or
inc
mov
sbb
pushf
adc
push
lock
lods
push
icebp
ret
sbb
sbb
dec
loope
scas
or
subb
pop
add
push
outsl
shrb
mov
clc
xchg
inc
fwait
mov
ret
nop
into
sbb
mov
test
ret
stos
mov
or
jbe
fwait
xchg
iret
pop
adcl
mov
pop
hlt
nop
xchg
dec
sbb
sbb
jbe
dec
fiaddl
mov
sbb
cmp
sbb
mov
cmp
add
jbe
adc
push
neg
push
and
call
out
mov
pop
es
sub
inc
imul
xor
mov
nop
mov
nop
pop
in
xchg
inc
fs
xlat
js
mov
mov
dec
add
mov
shll
cmp
addl
mov
js,pt
jbe
fstpt
das
inc
or
mov
incb
sahf
test
subb
nop
aaa
add
or
paddb
push
dec
sub
cmp
jne
loope
add
sub
repnz
and
mov
loope
pop
shlb
cmp
and
adc
mov
les
sbb
mov
mov
stos
pop
pop
sbb
xchg
xor
mov
mov
clc
outsb
add
insb
sub
pop
fmulp
int3
jmp
jl
sbb
and
push
ljmp
pop
movsb
shll
mov
repz
mov
popa
imul
sarl
xchg
ret
sub
adcl
mov
mov
inc
or
cltd
shll
add
jge
pop
add
mov
push
mov
and
adc
mov
ret
mov
out
push
and
lret
clc
cmp
and
roll
ljmp
lahf
pop
aad
add
sub
addr16
inc
jno
gs
fisubl
rorl
xchg
mov
xchg
push
pop
and
pop
or
ror
pushf
xor
aaa
test
dec
mov
lret
bound
ret
pop
add
xchg
add
jecxz
pusha
loope
dec
jns
incl
lret
fadds
sbb
jbe
mov
sbb
fcoms
movsl
xor
aas
sub
dec
addl
and
add
fidivrs
aas
mov
dec
fsubrl
and
jge
xchg
dec
hlt
mov
mov
sub
inc
dec
dec
cmp
or
sub
mov
leave
add
dec
dec
test
dec
orl
decb
int3
and
popl
es
or
push
pusha
inc
test
lret
cmpsb
add
sar
xchg
gs
add
mov
and
cmp
push
push
jbe
xchg
and
sub
sbb
adc
mov
mov
dec
xor
cmp
jge
adc
jnp
fmull
push
jne
and
iret
add
or
add
jns
mov
cmp
fidivs
push
ja
addb
fsubr
lret
add
adc
sbb
sar
jge
leave
adc
sbb
leave
or
push
arpl
mov
xchg
cmp
and
mov
xorb
jg
and
push
xor
adc
addr16
or
push
enter
cmp
pusha
adc
ja
orl
inc
or
rolb
subl
enter
add
jp
pop
push
dec
mov
mov
andl
pusha
add
test
cmp
or
mov
pop
divb
mov
dec
xor
bound
xchg
aas
cwtl
push
and
jno
test
scas
mov
xor
lret
xchg
inc
iret
add
enter
mov
cmp
xor
add
jo
scas
popa
jmp
or
data16
inc
or
stos
scas
addl
mov
out
pop
sub
jno
cmp
mov
mov
stos
xchg
xlat
inc
jno
mov
jns
loopne
cmp
lds
sub
cmp
sbb
push
outsb
loopne
repz
pop
or
inc
andl
fnstsw
sub
aas
shlb
out
js
or
js
scas
lret
mov
inc
push
sub
dec
idiv
adc
push
outsl
mov
ljmp
jle
jnp
cmp
popf
xchg
inc
add
int3
cltd
dec
or
mov
shll
push
mov
and
dec
dec
aaa
js
xchg
orb
xorl
stos
sti
mov
mov
dec
stos
cmpsl
push
ljmp
pop
sub
add
dec
test
rcl
add
inc
jno
jmp
fsub
jo
mov
xor
mov
and
inc
sub
lret
incl
jecxz
xchg
ljmp
pop
fsts
in
sub
pop
orb
addb
adc
inc
movsb
out
push
sarl
mov
mov
in
xchg
ret
or
push
int3
sub
dec
into
mov
sbb
addr16
ret
push
mov
orb
daa
push
and
pusha
inc
mov
fisttpl
xor
cmpb
adc
jg
das
add
add
pop
addr16
bound
pop
push
mov
rolb
dec
ret
and
aad
and
sbb
loopne
fstps
lret
xor
jo
paddsw
sbb
sub
xor
sbbb
aam
enter
add
cmp
mov
cmpsl
xor
sub
mov
or
push
fistps
divl
leave
ret
mov
lock
and
push
mov
pop
push
test
jns
ljmp
daa
imull
xorb
cmp
cmp
pop
dec
gs
push
popa
movsl
mov
shl
jae
or
mov
sbb
push
mov
iret
add
dec
jg
stc
das
push
or
fisttps
ljmp
cmpsl
push
xor
xchg
dec
movsb
test
clc
faddl
pop
into
lock
dec
movsl
sub
das
dec
popa
pop
scas
insb
or
mov
pushf
js
std
fs
and
int3
ja
mov
sbb
or
or
sbb
sub
loop
pop
pushf
push
sub
arpl
ja
inc
movsl
sbb
inc
adc
push
mov
lcall
lods
cmp
inc
mov
cmpsl
les
test
and
sub
xor
repnz
stos
add
ret
jge
mov
add
add
mov
test
test
les
orb
stos
gs
test
inc
pop
push
mov
dec
loop
ljmp
inc
lret
stos
repnz
out
shll
fldt
stos
cmpsb
inc
mov
push
and
fsubs
cwtl
add
scas
dec
rolb
ljmp
add
decl
sbb
push
les
stos
sub
ret
sbb
or
cmp
test
outsb
add
add
iret
cmpsl
addr16
mov
popf
push
push
rolb
sbb
pusha
out
fadd
cmp
mov
jmp
out
les
lret
inc
add
aaa
adc
nop
mov
js
mov
mov
jmp
addr16
cmpsl
mov
and
and
mov
xchg
push
sub
add
gs
imul
testb
push
ret
daa
mov
pusha
mov
aam
dec
scas
add
inc
cltd
add
pop
jge
pushf
cmp
ret
add
test
fildl
je
insb
or
popf
and
or
inc
call
add
mov
inc
in
loop
scas
test
and
pop
addl
mov
xor
add
add
pop
add
pop
cmp
mov
cmp
adcb
outsb
mov
or
push
add
sbb
popa
hlt
bound
dec
out
or
scas
mov
frstor
gs
cmp
ret
sub
push
arpl
cmp
jmp
movsl
out
testl
dec
sub
xchg
lods
roll
adc
rorl
ret
sbb
pop
pop
pusha
pop
int
imul
sbb
cmp
mov
and
mov
push
js
inc
js
test
fs
ret
int3
lods
adc
les
test
loope
mov
and
mov
dec
out
aas
sbb
mov
fdivr
push
inc
inc
xor
clc
and
loope
sub
aas
inc
inc
inc
test
rorb
iret
jne
pop
adcb
xor
daa
or
xor
sub
movsb
js
add
pusha
subb
mov
cmpl
nop
pusha
inc
sbb
push
dec
sub
fsts
or
or
mov
dec
dec
sub
addl
jnp
xchg
mov
nop
mov
in
jo
inc
mov
jl
and
sbb
test
pop
cmpsb
add
in
clc
nop
int
andb
sbb
jno
addr16
sbb
fcomps
inc
adc
decl
mov
xchg
xchg
xor
pop
dec
je
and
lret
cmp
dec
inc
ljmp
adc
pop
mov
lea
shrb
jmp
xlat
in
enter
fsubs
stos
pop
out
pop
and
and
lds
push
loop
insb
and
test
jp
cmp
sub
ljmp
lea
call
xchg
push
mov
sbb
lcall
jg
xchg
sub
orb
and
ljmp
inc
cmpsb
nop
js
shr
test
sub
mov
sbb
xchg
inc
sub
in
mov
mov
and
inc
popa
dec
test
adc
fnstenv
push
xor
jmp
cmpsl
push
dec
or
dec
loope
xor
cld
jb
or
pop
mov
push
push
mov
les
push
cmpsb
xchg
jge
rorb
loope
lret
mov
insb
add
jle
or
in
pop
popa
add
inc
inc
sub
pop
mov
in
dec
jp
pop
adc
stos
push
xchg
mov
mov
and
or
and
and
add
ret
sbb
call
xor
ds
inc
cmp
push
call
or
sub
cmpsb
lret
js
mov
xchg
sub
inc
adc
mov
inc
inc
pop
out
stos
movsl
mov
pushf
bound
test
insb
sbb
stc
cmp
dec
jge
andl
cmp
push
mov
add
sbb
xchg
and
fmuls
or
sbb
lock
out
dec
int3
shrl
pop
test
mov
movsl
decb
cmp
fadds
lret
jmp
push
ljmp
leave
or
adc
xchg
add
mov
jge
adc
mov
pop
xchg
je
jb
addl
mov
lcall
enter
call
js
mov
and
lock
add
stos
js
clc
outsb
cld
mov
iret
orb
or
mov
jmp
jge
sub
lods
push
clc
and
mov
das
jne
cs
pop
cmp
pusha
jns
xor
mov
inc
pop
pop
dec
aas
or
mov
xchg
cs
mov
pop
aas
dec
daa
or
and
inc
addl
and
sarb
lcall
imul
ds
mov
pushf
xor
mov
sbb
mov
cmp
repz
inc
mov
aaa
sbb
adc
dec
fiadds
ret
and
mov
inc
mov
hlt
sbb
cmp
dec
dec
mov
pushf
test
inc
sbb
xchg
ficoms
add
scas
fsubs
add
push
js
orl
bound
out
sarb
push
jmp
mov
mov
aaa
in
aas
mov
push
iret
adc
mov
dec
cmp
add
ss
call
into
sbb
fimuls
xchg
add
jmp
lret
xchg
sbb
fmul
or
add
rclb
mov
mov
mov
or
sub
push
ret
jmp
sbb
mov
pushf
fbld
or
out
push
sub
mov
push
iret
iret
and
cmp
mov
lret
rcll
sbb
test
mov
orb
dec
mov
test
jb
cltd
imul
aas
push
notb
mov
pushw
nop
mov
sarl
jns
clc
nop
pop
mov
outsb
lret
xor
ljmp
push
jecxz
mov
lock
loopne
imul
cmp
jmp
cmp
and
push
jno
scas
sub
fcmovbe
loopne
dec
jecxz
or
and
xchg
fcoms
shl
jb
sub
and
cmp
pushf
repnz
inc
add
or
xor
push
xchg
sub
stc
ljmp
call
and
or
test
enter
aas
dec
add
xchg
les
jp
cmpsl
fwait
cld
cmpsb
js
add
sbb
or
add
add
xchg
and
add
rcrb
mov
mov
test
inc
push
int3
idivb
or
xchg
dec
fs
push
xor
or
fsubrs
dec
xchg
push
lret
lods
pop
sub
pushf
ds
xchg
into
inc
inc
fildl
xchg
mov
mov
mov
mov
inc
inc
scas
xor
rorl
cmpxchg
push
ljmp
jae
push
es
push
pop
cmp
into
inc
xor
ljmp
ss
mov
test
mov
mov
xor
dec
jno
adc
sbb
cmpsb
inc
cld
lds
sub
bound
sbbl
leave
pop
sbb
pop
pusha
out
sbb
mov
pop
sub
push
test
dec
or
es
add
inc
or
mov
sbb
mov
mov
pushf
xor
ljmp
sbbb
mov
stos
mov
xchg
xor
or
lret
adc
cmpsb
ret
and
push
mov
outsb
gs
push
xchg
push
fwait
sub
data16
jo
and
xchg
cmp
es
dec
and
cwtl
push
dec
lret
inc
ljmp
inc
push
js
sbb
adc
div
add
ljmp
in
sub
andb
dec
jne
xchg
addb
adc
xorl
mov
aas
mov
bound
xor
bound
push
dec
jmp
or
inc
test
rcll
ja
aad
sub
push
mov
jb
dec
int
lahf
test
add
orl
lds
addr16
xchg
ja
xor
mov
inc
jle
xchg
imul
sbb
scas
testl
inc
and
unpckhps
or
test
mov
dec
sbb
push
dec
aaa
jp
pop
sbb
pop
or
push
fimuls
pop
xchg
mov
ss
push
xor
or
lret
sub
test
imul
mov
inc
dec
sub
mov
pusha
pop
push
xor
in
add
iret
stc
inc
sbbb
nop
scas
sbbb
or
inc
push
dec
nop
daa
into
inc
sbb
je
xchg
mov
mov
in
push
movsl
mov
or
mov
sbbb
pop
sbb
popa
loope
in
ds
add
mov
xor
cmpb
inc
loope
xchg
dec
scas
cwtl
dec
test
mov
inc
pop
mov
and
mov
out
inc
ret
cmp
jl
push
or
loopne
or
iret
adc
loopne
jge
ret
into
push
xor
lahf
hlt
push
mov
pop
out
lds
push
out
movsb
push
xchg
mov
pushf
or
mov
or
outsl
cs
jge
imul
sub
loopne
les
or
lahf
ljmp
adc
inc
xchg
mov
popa
sbb
nop
inc
add
fsubl
mov
rcl
mov
sbb
cmpl
adcl
xor
jge
movsb
leave
mov
pop
imul
scas
and
pop
jbe
call
xchg
mov
fsub
and
popa
mov
push
test
xchg
cmp
sbb
popf
xchg
popf
adc
movb
push
popa
adc
and
xorb
mov
pop
xorb
push
push
les
mov
inc
mov
add
xchg
xchg
xchg
fisubrs
push
jnp
push
sub
adc
pop
or
or
outsb
push
jbe
pop
jmp
lock
pop
cltd
cld
add
sub
lea
add
sti
and
sbb
add
jmp
test
test
mov
mov
jno
xor
test
aas
clc
mov
push
adc
pop
sub
dec
ret
mov
pushf
icebp
dec
lret
popa
fwait
arpl
inc
adc
lock
pop
das
ljmp
fiaddl
bound
sub
add
sub
push
or
push
adcl
and
es
dec
in
adc
adc
lcall
cmp
sti
xchg
mov
jp
dec
jmp
rcrl
cmpsl
and
jmp
mov
jp
sub
and
and
dec
xor
xor
mov
push
mov
sbb
pop
add
or
xor
cmp
out
pop
shrb
movsl
leave
nop
inc
xor
fdivl
add
hlt
push
xor
push
or
nop
mov
inc
cld
rdmsr
pop
push
orl
sbb
pushf
adc
popl
sub
or
mov
xor
adc
and
dec
push
and
or
mov
jae
sbb
orb
sub
daa
mov
ret
cmpl
xchg
pop
add
lret
mov
shlb
loop
ret
or
xor
xchg
push
in
mov
xchg
mov
outsl
jge
js
add
add
data16
shlb
dec
outsb
dec
fidivrl
rolb
xorl
add
sbb
inc
cld
pop
push
sbb
lods
or
cmpl
mov
add
popa
jecxz
popl
fnstsw
sub
add
xchg
cmp
and
xor
pop
mov
fisttpll
dec
sub
dec
popf
add
jo
sub
push
lret
sub
lret
or
adc
adc
xchg
cwtl
and
imul
dec
or
and
push
jo
sub
ret
push
xorb
push
lahf
sub
adc
in
add
xchg
mov
rolb
mov
in
iret
add
out
addb
inc
and
pop
pushf
xchg
sub
inc
ljmp
jno
fisttps
mov
sub
dec
mov
das
push
popa
adc
push
mov
test
sbb
jns
pop
enter
inc
xchg
aas
inc
push
xor
xchg
xor
and
and
inc
jbe
xchg
mov
xor
cli
scas
cmp
aas
sub
and
push
or
or
add
popf
push
fs
add
cwtl
or
sbb
jge
ret
sbb
in
inc
sbb
xchg
shlb
nop
xchg
sub
pop
add
inc
sarl
push
ror
lds
add
lret
push
push
add
pushf
andb
ret
das
clc
xor
cmc
inc
xchg
mov
sub
leave
sbb
xchg
and
inc
or
lock
inc
or
sub
and
adc
jbe
push
inc
insl
mov
or
push
xchg
shrl
jo
xor
mov
mov
pop
adc
jmp
shrl
jbe
inc
or
and
rorb
adc
and
cmpb
and
or
addr16
mov
in
dec
in
xor
out
shlb
cltd
bswap
lods
jnp
sub
and
sbb
xchg
mov
mov
iret
mov
fwait
mov
mov
mov
dec
les
arpl
push
aam
fbstp
jg
xor
out
divb
mov
and
sub
xchg
out
or
push
xlat
outsl
xchg
aaa
divl
lods
fcoml
inc
sub
mov
fistl
dec
dec
push
mov
or
iret
test
jecxz
pop
inc
aas
inc
in
in
dec
cmp
mov
jb
mov
or
pusha
xchg
dec
sub
cmp
fldenv
loope
cmc
popf
sbb
addb
pop
inc
dec
lock
mov
cmp
xor
xor
cltd
cld
aas
dec
ret
test
dec
pop
xor
sbb
fldcw
pop
and
xor
stos
dec
lret
out
and
push
or
push
or
fs
mov
pop
xor
pop
test
add
xor
aas
sub
das
in
sub
xchg
adc
pop
call
xlat
lds
and
es
cmp
cmp
mov
inc
dec
pop
dec
hlt
sbb
mov
jbe
push
or
es
lret
mov
sbb
add
lahf
les
jp
mov
aad
pop
add
mov
xor
es
xor
inc
rorb
mov
add
cmc
adc
mov
pop
dec
lods
or
fisubs
mov
xchg
lods
mov
mov
cltd
jl
adc
dec
iret
test
or
mov
xor
mov
js
int
pop
shrl
add
mov
mov
adc
sbbl
add
in
xorl
pop
inc
adc
mov
push
add
aas
mov
in
or
out
aad
out
sub
dec
in
sub
negb
stos
clc
and
sub
stos
arpl
mov
dec
xchg
cmp
cmp
sub
scas
sahf
cmp
dec
or
outsb
add
dec
inc
xor
cmp
jl
out
cld
add
pop
inc
mov
or
repnz
mov
dec
inc
or
dec
jmp
mov
and
jg
cwtl
fxch
addb
xor
in
orb
xchg
cwtl
call
aaa
and
addr16
inc
dec
fsubrl
pusha
mov
addr16
inc
pusha
jno
adc
xchg
push
sbb
test
rclb
dec
dec
inc
js
xchg
notb
test
jno
sbb
cltd
cltd
push
xor
add
mov
pop
mov
mov
arpl
divl
adc
ds
and
xchg
dec
adc
repnz
mov
inc
xor
and
xchg
push
cmp
es
mov
sbbb
cs
inc
and
fimull
nop
fsqrt
inc
and
test
and
ja
push
daa
repnz
or
jno
punpcklwd
cli
pop
fprem1
sub
mov
movsb
mov
sub
mulb
mov
add
mov
int
and
rol
sbb
xor
push
loop
bound
jne
daa
dec
pop
scas
dec
mov
or
push
add
xor
les
sub
or
xchg
push
fs
mov
or
xor
dec
repnz
add
jno
mov
add
xchg
and
xchg
push
push
jmp
sub
or
dec
jge
les
in
movsl
sbb
rclb
jge
mov
inc
cmp
adc
xlat
adc
adc
cmpb
lret
xchg
xchg
mov
test
xchg
add
inc
add
pop
dec
aad
inc
inc
enter
xchg
movsb
mov
cmpsb
xchg
and
sub
out
daa
call
addr16
subl
xchg
sub
and
test
shrb
pop
sub
mov
xchg
gs
adc
or
xchg
add
jge
imul
test
xor
jb
xor
das
insl
iret
jecxz
inc
mov
popf
dec
repnz
mov
push
dec
mov
sbb
jae
inc
int
pushf
sahf
mov
inc
xchg
and
add
and
imul
inc
xor
loopne
inc
pop
popa
sbb
es
and
push
inc
or
mov
ja
lods
adc
push
adc
xor
gs
push
adc
mov
push
and
xchg
loop
mov
sti
add
push
and
fwait
negb
xor
and
call
in
mov
lds
inc
mov
pop
dec
mov
push
pop
insl
andb
jecxz
pop
and
xchg
enter
sbb
jb
addr16
lock
stc
push
test
in
and
or
ret
mov
or
fldt
test
popf
push
adc
sbb
push
add
or
and
sbb
xor
fistpl
mov
negb
mov
push
sbb
inc
adc
inc
int
rolb
orb
cld
mov
xchg
inc
pop
rcll
les
lret
aam
or
dec
jno
imul
mov
imul
fildll
lcall
pop
aas
and
xor
mov
jp
cmpb
push
and
andb
lods
out
dec
sub
and
pop
mov
loopne
repnz
scas
cmp
or
mov
sub
xor
pop
add
xchg
or
pop
push
jbe
dec
push
sbb
addl
outsl
lods
xchg
mov
push
dec
or
cmp
push
pop
and
cmp
sbb
or
cwtl
inc
and
mov
shlb
leave
nop/reserved
mov
imul
into
xchg
nop
stos
mov
mov
dec
cmpsb
imul
sub
mov
sub
inc
bound
data16
fisttps
rolb
loopne
mov
xor
push
rolb
dec
and
and
push
and
mov
and
cmp
and
insl
mov
outsl
mov
adc
xor
add
push
test
pop
jnp
popa
gs
jne
inc
sub
push
rorl
enter
cmp
fs
mov
add
jge
adc
xorl
loop
adc
stos
or
xor
loop
jge
jb
mov
ret
mov
dec
pop
lcall
inc
loopne
call
add
add
xchg
and
jecxz
pop
dec
sbb
adc
xor
pop
dec
aaa
inc
cltd
mov
xorb
in
cmp
and
sbb
pushf
flds
or
cltd
out
dec
sub
mov
jne
lret
daa
sub
lret
jb
sbb
ds
stc
imul
bound
scas
xchg
fildll
mov
push
sbb
xlat
mov
loope
dec
add
insl
adc
fcoms
mov
lds
xor
xchg
dec
je
cmp
bound
loop
jno
movsl
or
jne
push
lods
mov
je
sbb
nop
es
or
cmp
push
and
sbb
xchg
jge
and
mov
xlat
dec
mov
push
or
loope
insl
arpl
test
shlb
mov
add
movsb
mov
dec
or
inc
mov
in
add
or
inc
fnstsw
pop
and
cmp
add
pop
std
stos
inc
xor
sub
in
push
mov
mov
jbe
sbb
push
add
xor
into
mov
xchg
jg
or
fwait
add
sub
stos
rorb
jge
inc
dec
xor
lret
mov
ds
sub
sbb
cli
mov
add
xchg
fistps
fists
xchg
inc
dec
push
and
push
shlb
sub
mov
sbb
jns
xchg
sarb
sbb
add
or
gs
lds
and
sbb
or
ret
adc
mulb
or
xor
add
fwait
rcrl
and
nop
call
xor
ljmp
push
inc
into
outsb
or
packuswb
add
jae
mov
pop
lods
add
or
sbb
inc
sbb
add
dec
push
xchg
push
gs
ss
arpl
data16
mov
jl
rcl
or
mov
or
fnsave
mov
notb
add
cli
sbb
lss
jns
clc
push
out
cmpxchg
cmp
enter
inc
push
jmp
adc
cmpsb
pusha
jno
mov
lret
jnp
sbb
sbb
popf
sbb
sub
test
add
pop
lcall
mov
adc
out
sbb
xchg
loop
pop
jbe
inc
subl
xor
and
or
int
ja
aas
sub
inc
cwtl
jno
shll
mov
push
fisttpll
je
mov
jg
loop
mov
mov
inc
ljmp
lock
aas
push
mov
out
push
pop
scas
and
fwait
push
jge
js
je
xor
pusha
cltd
popa
bound
add
daa
in
or
adcb
mov
movsl
dec
ror
insb
rolb
sbbl
fiaddl
mov
xor
jmp
inc
dec
stos
or
and
xor
test
or
sub
repnz
inc
and
test
inc
and
push
add
sbb
or
mov
and
rorl
add
mov
sub
jno
xor
orl
jmp
lahf
int
push
lret
enter
inc
ljmp
nop
xorl
add
pop
ret
lahf
adc
mov
mov
pushf
mov
gs
or
add
comiss
andb
loope
ficomps
rep
and
js
mov
test
dec
adc
stos
sbb
jge
sti
adc
adc
adc
cwtl
in
inc
rcll
add
adc
nop
pop
jp
xchg
push
loope
pop
jmp
adc
imul
nop
cmpb
cmp
sub
sti
and
and
push
jl
lcall
push
adc
cwtl
add
push
mov
inc
lock
and
pusha
mov
adc
add
pop
cmp
pop
loope
or
adc
add
sbb
sbb
leave
xor
mov
adc
sbb
movsl
call
lock
sbbl
std
not
push
shlb
and
pop
and
jp
mov
pop
mov
inc
stos
xor
mov
scas
dec
in
and
loope
xorl
mov
jne,pt
add
dec
fisubs
and
sbb
cmpsl
xchg
cwtl
jmp
sub
cmp
lods
scas
test
xor
mov
jle
push
aad
stos
push
xchg
out
cwtl
xor
scas
repnz
add
push
divl
call
jecxz
push
sbb
adc
xor
enter
iret
rcrb
lahf
mov
movsb
xchg
cwtl
and
adc
or
adc
adc
add
ljmp
cs
into
add
call
scas
mov
jge
roll
or
adc
mov
mov
mov
cmp
xlat
and
push
cld
inc
bnd
mov
pop
and
mov
into
fs
dec
loop
mov
dec
and
lret
cwtl
enter
or
lea
mov
popf
adc
cmp
les
pop
fcmovb
and
movsb
lds
push
pushf
dec
movsl
and
add
faddp
push
mov
mov
les
fsubl
add
add
mov
add
jnp
mov
and
in
sbb
xchg
roll
sahf
cmpsb
imul
jo
adc
scas
xchg
daa
jmp
lahf
sbb
cmp
jno
test
movsl
adc
or
mov
and
or
mov
imul
aam
shlb
sub
push
push
aad
xchg
std
fmuls
push
or
mov
out
jno
pop
outsb
out
ja
or
scas
dec
jbe
dec
cwtl
and
jmp
push
popa
movsb
lret
or
and
stos
add
aam
out
jne
popf
sub
add
cmp
adc
lcall
adc
xchg
mov
push
imul
mov
push
xchg
add
sbb
push
incb
and
adc
mov
imul
push
mov
dec
fistl
fcom
out
inc
pop
test
adc
sub
imul
test
int
or
cmpsl
add
popf
pusha
dec
or
test
dec
mov
mov
testb
push
push
sub
push
and
mov
sahf
jns
add
hlt
inc
inc
mov
mov
mov
mov
call
and
ja
jno
leave
movsl
sbb
or
test
xor
ljmp
sbbb
int3
xor
adc
mov
stc
sbb
push
orb
les
mov
add
sub
movsb
cld
jno
daa
pop
mov
and
cs
or
dec
sub
sub
in
stos
dec
ja
dec
test
inc
daa
adc
lret
dec
push
lret
and
mov
into
adc
imul
test
nop
mov
dec
xor
jp
pop
mov
movsl
inc
mov
add
in
test
jp
pop
fs
cli
in
xor
jle
fwait
sub
repnz
jle
loop
jecxz
sub
push
mov
push
jb
lret
repz
mov
mull
pop
mov
cmp
add
ss
sub
push
jmp
dec
or
mov
or
scas
push
dec
cmp
adc
adc
sbb
add
in
adc
mov
jo
dec
adc
xchg
or
test
xlat
add
sbb
fdivs
enter
or
xrelease
mov
sbb
xchg
repnz
ror
dec
and
mov
imul
iret
mov
add
lock
lock
inc
jle
lds
xchg
clc
gs
fildl
imul
sbb
mov
mov
addr16
inc
divb
dec
adc
jge
and
push
mov
dec
push
pop
jbe
and
mov
lods
dec
movsl
add
xchg
xchg
cmpsb
lods
add
sti
inc
mov
or
sbb
xor
pop
inc
or
add
testl
es
data16
push
jg
cwtl
gs
cli
inc
xor
inc
inc
jns
cmp
roll
cmovne
push
pusha
xor
inc
adc
fwait
dec
pusha
or
inc
or
dec
mov
xchg
jmp
and
scas
shr
aaa
or
xchg
dec
sbb
mov
cs
scas
add
scas
dec
idiv
int3
out
add
gs
push
cmp
jle
inc
and
push
push
add
and
fisttpll
jo
pop
loop
addr16
fistpl
xchg
incb
sbb
and
dec
call
or
lock
lret
add
xorb
xor
dec
dec
mov
sbb
out
lret
cmp
cmp
lret
or
subb
add
sbb
or
mov
xor
lret
xor
test
popa
ss
push
addl
daa
mov
arpl
addl
lcall
mov
sbb
cwtl
scas
arpl
js
call
cmc
or
sbb
pop
inc
gs
pop
pop
dec
lods
add
ljmp
les
dec
ljmp
jo
filds
lock
pop
jo
pop
scas
cmp
sarl
add
sbb
pop
add
mov
xchg
push
call
inc
adc
sub
lret
xchg
adc
push
dec
or
pop
test
lea
andb
add
mov
dec
dec
pop
xor
dec
int3
mov
dec
mov
add
add
shrb
lods
add
adc
xchg
cmp
push
jnp
inc
fisubrl
and
stos
xchg
lret
jp
andb
fucomip
call
jmp
adc
test
inc
xor
adc
xchg
ret
mov
outsl
pop
cmp
add
adc
lret
stc
sbb
adc
or
ljmp
xor
add
ljmp
adc
and
sti
push
in
aaa
loop
fbld
and
mov
jae
or
cltd
ljmp
add
inc
cmpl
sub
sbb
jb
dec
push
loop
inc
insb
push
mov
pusha
inc
cs
int3
push
cmp
push
ljmp
aaa
add
mov
add
dec
or
aam
pop
jmp
shrb
mov
jb
push
fwait
rorb
pop
sub
fwait
test
mov
push
movsl
xchg
jmp
cli
jb
notl
clc
mov
ficoms
mov
pop
aaa
mov
jb
ds
test
mov
jle
add
or
or
push
sub
in
dec
rolb
jmp
lret
sbbb
sub
or
jle
lret
aam
cmp
rcrb
stos
add
and
mov
xchg
add
test
sbb
mov
out
push
shr
add
pop
adc
add
sbb
dec
ja
jo
inc
das
sub
mov
sbb
into
inc
xchg
inc
push
cld
xchg
aam
add
or
mov
mov
cmpsb
adc
jae
sub
shlb
push
push
or
push
mov
push
or
dec
push
cld
loopne
sahf
mov
jo
or
push
mov
add
dec
scas
ret
xchg
and
cmc
pop
pusha
sbb
xchg
or
fwait
clc
add
mov
lock
mov
gs
push
xlat
mov
dec
pop
xlat
daa
cltd
cmpl
push
xor
rcrl
add
jle
dec
mov
jge
push
jo
icebp
cltd
dec
stc
push
ret
push
xlat
sbb
add
mov
pop
lcall
pop
movb
imul
aam
push
xchg
pusha
jecxz
mov
jge
push
ljmp
push
mov
cmp
push
xchg
xor
sbb
mov
cwtl
sbb
adc
xchg
in
mov
scas
sbb
rcrb
pop
pusha
inc
rcll
jb
push
dec
inc
filds
or
or
nop
jbe
or
pop
aas
add
mov
or
xor
mov
adc
mov
pop
add
adc
nop
hlt
push
inc
adc
push
mov
mov
add
shll
sbb
jecxz
push
std
stos
mov
push
mov
popf
pusha
mov
rcrl
fcmovu
call
and
pop
adc
mov
es
mov
pop
mov
xchg
adcb
stc
jge
gs
push
lret
mov
sub
cli
sub
push
leave
es
out
sahf
inc
add
push
dec
pop
add
sub
sbb
adc
or
adc
mov
adc
testl
push
dec
adcb
out
sahf
roll
out
pushl
cmc
add
or
movsb
in
int
and
hlt
lods
js
push
xchg
jge
adc
cmpsl
out
pop
clc
sbb
or
mov
cmp
lds
or
addr16
xor
mov
nop
fistpl
adc
adc
add
lock
adc
xchg
mov
and
inc
add
sbb
pop
out
cld
mov
lea
lock
cmp
inc
add
das
fmull
mulb
mov
lcall
rcr
dec
lcall
xor
pushf
mov
or
xchg
addr16
sbb
inc
sbb
pop
movsl
das
adc
loopne
mov
or
fs
dec
mov
fs
ss
sub
or
or
push
mov
push
mov
or
xchg
adc
jno
mov
push
cmp
nop
push
pop
mov
lock
push
jmp
fucomip
mov
mov
jo
add
data16
pop
mov
mov
movsb
enter
fstl
js
negb
jae
lds
jo
jmp
adc
clc
mov
in
scas
in
push
mov
pop
jo
cmpsl
mov
loop
add
add
push
andb
pop
mov
dec
xchg
pop
mov
jmp
pop
popl
jecxz
sub
sbb
pushf
pusha
test
shll
inc
mov
cwtl
and
add
scas
dec
gs
pop
and
dec
adc
mov
testb
outsl
push
daa
xor
movsl
lods
sti
pop
xor
adc
mov
jb
add
sbb
lods
add
xchg
dec
call
cmp
dec
testl
je
in
mov
sub
pusha
rol
xchg
les
mov
sbb
cmp
add
roll
add
sti
arpl
mov
aas
sbb
stos
scas
mov
add
pushf
pop
scas
inc
loopne
mov
pop
rolb
xchg
fs
pop
cmp
sub
and
testb
inc
jge
addr16
fisubs
or
lods
mov
dec
mov
jo
inc
and
mov
shr
xor
cli
jae
mov
xor
notb
mov
repz
cwtl
adc
enter
lahf
outsl
add
lahf
es
add
pop
lahf
cmp
enter
enter
xchg
out
cwtl
and
fwait
add
push
adc
xchg
ss
pushf
orl
repz
ss
repz
mov
pop
rorl
mov
xor
fwait
and
cmp
push
pop
push
jl
int3
xor
loopne
jmp
je
addl
inc
loopne
and
lret
cwtl
dec
dec
shlb
push
and
xchg
in
push
cmpb
xchg
or
je
dec
mov
push
adc
clc
mov
dec
push
pop
nop
addb
add
jecxz
or
mov
and
mov
xchg
call
sqrtps
nop
pushf
adc
adc
xor
xchg
fs
pusha
aad
inc
adc
push
push
xorb
pop
adcb
loopne
pop
cmpsl
inc
cwtl
add
cltd
and
push
fisubl
sbb
imul
push
nop
pop
ss
bound
xorl
adc
mov
movsb
lock
enter
inc
cmp
sub
cmp
rolb
jns
xor
pushl
ficoml
add
enter
loopne
xorb
mov
jbe
pop
test
fucomi
xchg
mov
jbe
insb
push
push
sbb
and
add
mov
pop
je
lret
sbb
shll
or
cmpsb
add
cmp
mov
xlat
dec
xchg
or
loopne
test
push
hlt
cmp
movsl
mov
repnz
andl
jp
and
and
fwait
pusha
dec
inc
xor
arpl
int
cmpsb
or
mov
adc
fisttps
pop
xchg
or
lcall
mov
add
cmp
pop
mov
inc
mov
je
lret
xchg
jg
cmp
outsb
addb
loop
sbb
sbbb
nop
jb
push
scas
mov
dec
mov
fcompl
stos
lods
adc
push
sbb
add
jnp
push
lahf
mov
lret
fistl
sbb
decl
outsl
add
sbb
add
out
int
xor
movl
add
sbb
dec
xchg
or
jle
mov
popf
arpl
addr16
xchg
push
inc
rolb
push
push
inc
mov
add
or
popa
je
adc
lea
and
cmp
ja
xor
jne
mov
mov
xchg
mov
test
push
cmp
cli
jae
js
xchg
lret
pop
sbb
dec
mov
sub
adc
add
dec
xchg
rclb
rcl
lret
mov
dec
dec
lret
inc
add
inc
addr16
mov
aam
mov
jns
xchg
pop
mov
sbb
ficoml
sahf
adc
cmpsl
imul
leave
or
fldenv
out
sub
xchg
shll
rcrb
dec
and
in
add
mov
ret
push
push
into
push
pop
rcll
xor
fstl
imul
imul
ret
js
or
subl
mov
xor
push
les
ljmp
int
cld
add
out
push
xor
push
rcr
int3
add
sub
push
sbbl
ret
pop
pushf
lahf
add
mov
cmovge
dec
add
pop
sbb
and
jmp
sbb
add
inc
xor
push
ljmp
nop
shrl
adc
daa
ret
push
or
test
add
or
pusha
int
and
and
ret
push
sbb
mov
repz
shlb
adc
and
xchg
pop
mov
lret
mov
inc
add
cld
and
sbb
mov
cmpsb
hlt
iret
push
mov
mov
idivl
adc
dec
adc
clc
movsl
addr16
ret
or
add
sbb
addr16
mov
insl
inc
loop
inc
or
cmp
xor
test
cmp
movsb
daa
or
add
pusha
gs
mov
dec
jle
scas
xor
and
lods
inc
mov
xor
js
jno
inc
mov
lea
loopne
gs
scas
mov
sbb
inc
sbb
in
jmp
cli
test
xchg
imul
stos
push
fmul
and
sub
std
sbb
cmp
add
sbb
or
push
pop
sbb
add
nop
mov
sub
xorps
mov
fiadds
mov
test
mov
adc
mov
cmp
enter
sub
ret
xchg
dec
hlt
mov
pop
ljmp
dec
fdivrs
pusha
in
cmovne
jmp
je
cmp
pop
jecxz
cltd
lds
pop
or
nop
lret
or
or
sub
push
popa
mov
clc
leave
nop
leave
sbb
cs
fcmovbe
idivl
mov
aaa
pop
mov
push
and
or
sbb
sbbb
and
dec
dec
xor
xor
inc
pusha
sbb
popa
add
push
addb
push
mov
add
cmp
fisubl
pop
pop
mov
int
and
jge
adc
mov
xor
or
fwait
cltd
js
xchg
add
push
and
or
cltd
lds
movsb
ja
rcll
mov
cwtl
mov
cmp
lods
enter
cmpsb
jmp
loope
push
push
add
cmpsl
push
or
lcall
mov
hlt
nop
xchg
orl
test
data16
push
pop
xchg
jo
sbb
inc
sbb
rclb
cwtl
stos
dec
int3
jne
cld
add
push
xchg
adc
xchg
sub
es
xor
test
mov
and
sbb
aad
adc
and
mov
pop
hlt
filds
xor
pusha
cmp
movsl
lods
inc
movsl
negb
lret
ficoml
push
neg
mov
loop
fwait
sub
or
add
arpl
adc
mov
idivl
and
je
add
cwtl
push
mov
pop
add
inc
sbb
xor
fcmovnbe
dec
sbb
pushf
and
inc
pop
pop
pop
xor
lahf
ljmp
test
adc
mov
xor
dec
add
test
add
movsb
pushf
out
lds
xchg
pop
mov
xchg
test
mov
or
mov
or
movsb
mov
inc
mov
mov
add
and
adc
lret
push
cmovl
xor
adc
add
push
xor
aam
push
xchg
enter
add
mov
dec
inc
fdivl
add
adc
xor
xchg
dec
scas
adc
nop
enter
orl
sbb
cwtl
adc
cwtl
cltd
inc
sbb
lcall
sbb
inc
mov
and
add
or
add
adcb
add
push
addl
mov
andl
test
add
and
xchg
mov
xchg
or
or
mov
adc
inc
or
rorb
and
add
adc
and
xchg
and
adc
adc
push
popa
cmp
pop
mov
nop
jnp
hlt
insb
rorb
loop
loope
xlat
mov
orl
cmp
loope
adc
aam
inc
clc
cmpsl
jle
test
xchg
into
shlb
out
lahf
addr16
cmpsl
sbb
rcrl
dec
jbe
rcrl
repz
mov
xchg
sbb
push
rcrb
mov
js
push
flds
and
inc
mov
mov
jno
js
scas
adc
in
pusha
jo,pt
jmp
pusha
lret
and
adc
insb
push
mov
inc
mov
xchg
inc
enter
adc
sub
aas
push
mov
sub
sbb
cmp
in
fsubrs
loop
aaa
add
sbb
js
adc
cmpb
add
sub
imul
xchg
pop
xchg
subl
clc
rorl
add
xchg
roll
addl
jo
sbb
popf
sbb
addl
or
sub
inc
add
stos
in
or
xchg
inc
inc
bound
scas
inc
out
fwait
cs
inc
xlat
psrad
decl
xchg
add
dec
push
jmp
dec
inc
mov
js
jecxz
mov
jge
adc
mov
loopne
or
in
call
mov
movb
sub
jbe
rol
sbb
mov
xchg
enter
mov
rorb
fs
xchg
ljmp
jo
mov
pop
fwait
mov
iret
or
adc
cmp
adc
push
mov
lds
dec
mov
xchg
mov
pop
stc
call
xor
addr16
mov
xchg
scas
mov
sbb
and
and
add
adc
jmp
pop
dec
or
xchg
mov
ret
cmp
cmpl
pop
push
jl
mov
imul
or
fisubrl
lea
cltd
mov
mov
movsl
mov
and
mov
jb
les
or
jle
add
dec
or
or
addr16
add
test
sub
lret
shrb
scas
bound
xchg
sbb
lret
insl
push
push
pop
je
jns
add
stc
sbb
loop
xor
in
push
mov
aad
adc
xchg
jb
or
lahf
pop
movsl
sbb
outsl
push
sub
mov
pop
adc
cld
pop
nop
mov
cmp
imul
add
ds
nop
in
sbb
mov
adc
pop
dec
push
jle
and
addl
inc
push
fiaddl
repnz
sbb
jne
push
sbb
ficoml
add
mov
sbb
mull
in
xchg
ja
nop
rcrb
mov
int
ret
in
xchg
js
inc
and
cltd
insb
add
cltd
in
fsubrp
into
nop
sbb
push
cs
mov
push
xchg
mov
dec
sub
and
mov
add
adc
clc
inc
ret
sbb
sbb
into
jmp
aaa
sbb
cmp
cmc
cmp
dec
mov
inc
and
data16
iret
inc
sub
push
adc
sbb
enter
sub
inc
and
sub
push
inc
and
pushf
clc
push
stos
xchg
cmpsl
push
add
and
mov
fistps
bound
sub
mov
and
lret
mov
movsl
push
cmp
lds
lret
pop
jg
mov
and
hlt
lret
fcoml
pop
xor
nop
jbe
jmp
dec
insl
inc
push
jnp
cmp
jg
outsl
lods
popa
mov
out
imul
ljmp
scas
pop
ficoms
dec
gs
es
sti
mov
iret
ret
push
pushf
rcrb
in
stos
mov
repz
or
or
jae
loop
or
repz
sarl
into
mov
mov
sbb
daa
dec
jmp
jbe
and
push
dec
nop
gs
jecxz
or
shll
fcomp
jge
movsl
lds
push
iret
jle
sub
add
hlt
push
mov
lock
pop
movsl
jle
mov
push
test
mov
push
das
or
scas
add
cwtl
repz
mov
outsb
add
sub
add
add
push
or
add
adc
mov
dec
aas
mov
bound
icebp
and
movsb
cbtw
stc
dec
jmp
or
push
test
out
xor
xor
xchg
xorb
aas
and
inc
cmp
sbb
xlat
xchg
jb
and
inc
sbb
inc
and
mov
pusha
in
loopne
pusha
pop
jp
jecxz
movsl
orb
mov
frstor
jns
pusha
mov
adc
sbb
sbb
out
xchg
loop
or
aas
add
andl
lret
mov
dec
inc
lods
andb
cmp
dec
push
jnp
or
mov
pop
movd
jmp
and
fsub
push
pusha
stos
sub
rolb
out
cmovs
in
lret
les
ja
adc
sbb
addb
xchg
push
mov
mov
and
add
pusha
mov
add
ljmp
enter
and
mov
jno
add
pop
inc
loop
scas
adcl
and
cwtl
clc
loope
or
mov
or
and
sbb
push
xchg
mov
loopne
adc
lcall
shrb
mov
and
rolb
cmp
pop
call
shlb
adc
add
add
dec
outsl
gs
add
or
jnp
loopne
lret
pop
out
pop
lahf
std
icebp
fdivrs
xor
or
sahf
pop
or
stos
xchg
iret
dec
and
add
shrb
mov
mov
xchg
aam
dec
lds
xor
pushf
testl
jmp
cld
nop
or
ljmp
xor
cmpsb
push
es
cmpsl
or
add
mov
stos
inc
les
or
jg
scas
inc
pusha
mov
aas
mov
cltd
adc
scas
inc
movsb
scas
sbbb
pop
popf
jp
pop
push
mov
xchg
mov
pushf
lret
test
xor
pop
std
xchg
daa
in
jmp
dec
movsb
iret
jbe
adc
or
imul
jecxz
jns
mov
mov
repz
test
enter
cmp
js
sbb
adcb
loope
sub
mov
mov
or
shrl
loopne
push
or
ds
dec
push
add
xor
jns
pop
lret
movsb
clc
sub
adc
js
orl
mov
pop
mov
or
arpl
inc
adc
stos
sub
push
iret
push
jge
loopne
cs
flds
cltd
or
aas
adc
out
or
pop
or
je
pop
scas
inc
inc
sub
xchg
fs
xorb
andb
adcb
call
insl
shll
push
fisttpl
pop
lret
adc
scas
add
add
add
cmp
xor
xchg
dec
inc
jae
movsl
add
and
sbb
loop
scas
shl
decl
enter
dec
mov
cmp
mov
addr16
xchg
addr16
xchg
scas
inc
xor
push
fstps
cmpb
adc
out
sub
fs
jle
cmp
inc
xor
lret
loopne
and
add
mov
cmc
imul
mov
adc
push
stos
mov
je
jno
pop
jae
lcall
loop
fildll
adcb
fstpl
negl
das
movsl
xchg
cmp
stc
ljmp
orl
cmp
lahf
or
testl
imul
or
sub
mov
jno
sbb
pop
imul
jne
adc
fs
or
adc
cli
clc
pop
fsubrs
add
das
stc
lret
repnz
mov
jo
gs
cmp
mov
insb
add
jo
int3
sub
test
jae
add
js
scas
imul
inc
out
dec
mull
adc
or
xchg
xor
ljmp
shll
orb
dec
push
scas
popl
and
pop
sbb
andl
push
into
push
dec
cwtl
jge
leave
cmp
mov
cmp
push
sbb
add
jns
dec
push
int
stos
jo
or
xchg
test
jecxz
mov
cmp
adc
adc
mov
out
adc
addb
cs
repnz
and
dec
mov
test
pop
or
cs
adc
inc
jo
orb
jnp
enter
inc
into
mov
push
das
gs
push
ja
mov
xor
inc
adcl
es
mov
cmp
in
add
andb
and
fnsave
fmuls
sub
cmpb
jmp
dec
add
xchg
pusha
push
or
in
bound
mov
xor
mov
mov
cmp
aaa
imull
adcb
add
imul
outsl
aam
ds
fsubrs
add
imul
movsl
sub
ror
sub
test
mov
lods
adc
loopne
xorb
scas
fs
xor
ljmp
or
and
bsf
cwtl
sub
inc
decl
iret
into
xor
frstor
jecxz
les
mov
add
sub
dec
jmp
jle
movsb
lret
stos
push
rorl
jns
cltd
mov
push
dec
and
pusha
fcoms
jmp
xchg
adc
push
data16
lret
ljmp
es
xorb
fcoml
test
adc
shr
xchg
pop
inc
adc
pop
inc
stos
mov
inc
and
cwtl
lds
out
andb
bound
add
dec
xorb
popf
push
lret
lret
scas
add
fldt
movsb
jbe
cmc
pusha
pop
mov
cmpsl
scas
mov
stc
push
mov
inc
fisubrl
xor
or
adc
pusha
dec
dec
jne
std
es
jmp
cmp
out
or
ljmp
or
lea
and
pop
mov
mull
shrb
add
icebp
lret
fdivrl
int3
or
sti
cmp
add
xor
add
adc
gs
out
jae
daa
sbb
incl
roll
fs
xor
fidivs
push
mov
adc
inc
adcl
movsl
add
sub
sub
imul
mov
dec
or
or
test
js
sahf
xlat
push
pop
inc
push
stos
pushf
dec
and
sbb
sbb
dec
out
mov
lret
fmull
shlb
outsl
sbb
insb
jo
cmp
inc
xchg
leave
cmp
and
mov
jg
xor
lods
adcb
push
es
sbb
push
pop
sahf
and
iret
icebp
hlt
inc
pop
rorb
call
add
xchg
rcrl
imul
pop
push
cld
sbb
push
ljmp
nop
mov
push
std
aaa
push
cmpsl
push
pop
push
int
mov
icebp
pop
arpl
mov
sub
jbe
and
jge
mov
inc
and
out
inc
cmp
mov
mov
es
cmp
test
aas
lcall
mull
sbb
jbe
pop
nop
sub
xchg
adc
inc
sbb
adc
adcb
dec
into
sbb
adc
add
lea
xchg
sub
xchg
in
and
adc
mov
jge
in
adc
xchg
mov
jne
lret
rorb
sbb
in
gs
ljmp
xor
cs
xchg
iret
or
cld
xchg
add
scas
push
xor
add
popa
xor
pop
test
or
sub
mov
dec
mov
mov
add
jge
cwtl
es
pop
xchg
mov
push
or
lret
aaa
sbb
inc
dec
jp
les
jb
cmp
pop
push
lcall
add
sbb
push
bound
data16
jo
mov
cmpl
ret
xchg
inc
ja
inc
inc
jno
enter
inc
pusha
add
mov
fdivr
les
dec
shrb
dec
push
sbb
pop
sub
inc
add
loopne
dec
leave
sbb
stos
push
in
xor
dec
mov
aad
ljmp
cmp
and
dec
xchg
mov
inc
sub
repz
pusha
push
sub
jle
mov
cmc
and
xchg
pop
fmuls
sub
xor
repnz
mov
clc
jg
lock
jns
orb
mov
cmpsl
fs
and
xor
push
cwtl
ret
stos
and
daa
shlb
push
in
inc
add
loopne
out
aas
insl
add
mov
sbb
loopne
adc
lds
out
push
push
fxch
sbbb
orb
movsb
shl
lods
stos
push
add
adc
addr16
sub
lret
clc
sub
or
lock
sub
subl
cs
dec
mov
inc
jo
add
das
mov
fdiv
jp
mov
xchg
ss
mov
or
or
dec
xchg
scas
lods
and
jg
dec
dec
dec
in
in
sbb
out
sub
sbb
adc
mov
dec
sbb
cmp
loopne
ljmp
xchg
mov
xchg
sbb
andl
rcrl
das
clc
in
sub
es
add
sbb
testb
inc
add
sbbl
or
sub
rcll
xor
imul
in
mov
lods
incl
pop
lock
xor
push
or
cmp
std
nop
inc
jno
stos
neg
or
push
adc
in
jno
sbb
pop
test
sbb
mov
jge
imul
ficoml
lret
inc
jg
fwait
loop
dec
add
clc
inc
leave
mov
xor
or
outsl
sbb
pushf
inc
mov
sub
sub
add
inc
mov
push
sbb
daa
sub
dec
xor
std
movsl
adc
lea
frstor
out
dec
mov
js
sbb
push
nop
adc
xchg
dec
add
mov
mul
fiaddl
lods
jp
orl
inc
jbe
es
xchg
and
loope
in
or
cmp
bound
clc
mov
sbb
push
and
mov
enter
adc
imul
cmp
dec
js
add
imul
lahf
mov
leave
xchg
inc
test
jp
leave
adc
fdiv
and
mov
jmp
inc
or
aam
fxch
mov
push
les
add
xor
sbb
add
pop
test
cli
imul
stos
cmpps
cmp
jo
ret
aas
adc
mov
faddl
jno
mov
dec
mov
inc
orb
daa
daa
sti
mov
mov
inc
inc
mov
es
add
fcoms
mov
adc
xchg
and
push
clc
enter
popa
mov
data16
push
mov
out
pop
add
jb
inc
add
jge
rolb
jno
popa
sbb
bound
xor
jo
mov
sub
loopne
sbb
jo
fadds
arpl
mov
outsl
add
mov
mov
imul
pushf
add
mov
fstl
dec
shrl
ret
inc
dec
dec
mov
scas
sub
adc
dec
add
and
bound
sbb
inc
ret
xor
adc
mov
and
leave
imul
or
adcl
adc
push
aam
sub
flds
sub
mov
add
xor
mov
mov
or
aam
push
xlat
cwtl
or
rcrb
cld
stc
repnz
aaa
test
xchg
in
jno
inc
mov
inc
pop
add
pop
in
popf
or
fwait
sbb
xor
add
cwtl
pop
xchg
inc
sub
jns
enter
in
pusha
sahf
in
cmp
ljmp
xchg
enter
xor
and
mov
sbb
sbbb
sbbb
mov
and
clc
rolb
mov
adc
mov
pop
addr16
pusha
push
or
pop
xchg
push
xchg
xchg
push
rolb
sbb
xchg
push
or
rcrl
loope
sbb
jge
inc
add
and
inc
pop
rcrl
loopne
test
xchg
inc
rorl
out
sbb
cs
movups
adc
cmc
and
sbb
das
mov
add
sbb
ja
dec
lods
shrb
sub
sarb
adcl
add
fs
xchg
push
mov
stos
xchg
dec
ret
jno
test
sbb
push
lcall
cmp
xchg
out
cmp
cmove
mov
lods
pushf
dec
inc
sbb
cwtl
pop
or
rclb
cwtl
adc
xchg
and
adc
rolb
mov
test
sbb
cltd
adc
pop
pop
xchg
mov
ljmp
sahf
cmp
fs
sbb
movsl
or
les
in
jo
add
dec
push
scas
sbb
mov
in
pop
jp
pop
inc
imul
mov
int3
adc
test
xchg
and
sub
inc
ficomps
mov
cmp
fs
jo
imul
hlt
pop
jmp
add
subl
jne
sbb
pop
jg
mov
add
daa
divb
jbe
cwtl
sbb
repnz
push
out
out
test
sub
cmp
inc
push
sbb
sbb
rorb
mov
pop
subl
sbb
test
rorb
adc
imul
add
adc
xchg
imul
or
adc
add
mov
xchg
lods
and
daa
aam
mov
call
or
mov
daa
addb
bound
js
add
inc
sbb
in
lahf
sbb
mov
test
imul
and
pop
mov
and
aas
adcl
push
xor
inc
or
and
add
int
pop
pushf
loopne
or
test
and
add
loop
test
jge
jno
adc
lret
xor
add
bound
sbb
mov
insb
xorb
jbe
fsubl
je
fsubrl
mov
mov
add
mov
and
test
aad
sub
insb
dec
dec
fiaddl
xor
adc
lret
insl
orb
stos
subb
xor
inc
add
data16
add
js
mov
sbb
mov
adc
clc
xlat
add
dec
sub
mov
sbb
push
mov
pop
pop
js
les
lds
daa
insl
insb
es
daa
int
scas
movsb
jbe
mov
shr
push
xor
dec
testb
lret
sbb
xchg
nop
jns
icebp
pushaw
or
or
inc
mov
mov
je
pop
rcrl
sub
idivb
movb
push
dec
sahf
jle
mov
enter
and
loope
stos
data16
cmp
aaa
fisubs
add
mov
cli
test
add
popw
xor
les
cmp
mov
sub
shlb
and
movsl
repnz
daa
aaa
xorl
xlat
mov
pop
sub
xor
shl
xchg
pop
xchg
inc
imul
xlat
adc
leave
xchg
sbb
or
xchg
xor
pop
fisttpl
test
sub
sbb
cmpsb
xlat
cmpsb
mov
fadds
adc
sbb
push
jle
and
xchg
aam
sbb
cmp
lahf
pop
jno
lahf
mov
and
or
cmp
ja
sbb
mov
xorb
xor
mov
and
dec
lods
out
test
jo
mov
nop
test
lds
jo
loop
xchg
movsb
les
mov
or
bound
imul
call
dec
lea
and
add
test
in
bound
push
push
add
cmp
and
sub
dec
cwtl
adc
addr16
mov
sbb
xchg
clc
in
mov
rdtsc
pop
mov
daa
and
pushf
mov
xor
adc
and
clc
addb
inc
cmp
daa
or
dec
sbb
scas
cmp
cmc
movsl
daa
roll
clc
shlb
push
pop
or
in
movsl
out
xchg
push
jmp
cs
mov
pop
shrb
outsb
arpl
lcall
fiadds
xor
bound
add
fnsave
xor
push
loope
xchg
sbb
lahf
movsb
sbb
sti
inc
jle
sbb
add
out
sbb
push
add
loop
mov
mov
pop
loopne
xchg
cmp
ret
mov
in
and
jmp
in
mov
cmpsl
push
push
dec
sbb
inc
lcall
jnp
push
hlt
mov
pushf
dec
push
movsl
push
mov
es
mov
jbe
inc
xchg
mov
dec
sbb
sti
test
daa
daa
mov
adc
add
loop
push
mov
xor
adc
loopne
bound
jae
inc
push
xchg
and
ljmp
mov
cmpb
js
jb
outsb
andb
and
in
dec
fcomps
inc
or
in
jl
int3
hlt
adc
loopne
mov
mov
xor
cmp
cmp
ror
ret
arpl
or
jno
rcl
stos
mov
add
sub
or
bound
lea
pop
and
ret
sbb
cmp
xchg
aaa
ret
jbe
add
lret
pop
insl
leave
test
mov
xor
mov
cwtl
or
adc
dec
adc
cmp
lods
fs
in
jbe
and
mov
or
inc
pushf
sahf
add
ljmp
add
mov
add
jns
xchg
rolb
out
fisttps
mov
or
mov
pop
or
ss
lcall
sub
in
scas
pop
sbbb
repz
lock
adc
xor
fwait
and
jle
test
dec
mov
xchg
in
insl
nop
jo
push
arpl
push
cltd
xor
mov
jno
leave
add
lock
ljmp
ret
cmp
jg
add
js
lahf
test
mov
push
jns
ds
ret
pop
in
pop
mov
jo
xor
call
adc
add
popa
mov
call
push
pusha
rolb
sbb
popl
imul
nop
test
and
inc
jle
push
test
or
pop
dec
or
dec
pop
sub
or
push
test
sub
cmpsl
arpl
pop
int3
std
ljmp
outsb
in
cld
or
iret
and
cmc
shlb
popa
bound
cld
roll
sub
std
mov
test
pusha
jb
es
scas
inc
insb
mov
sbb
cmp
aam
inc
cmc
xor
push
cmp
adc
in
sub
addr16
add
es
xchg
lods
icebp
add
dec
inc
mov
ret
adc
mov
test
inc
push
fs
popa
and
push
add
aad
gs
repz
repnz
pop
test
push
dec
dec
rclb
bound
adc
inc
sub
xor
dec
incl
fbld
cmp
pop
xor
pop
push
outsb
add
mov
push
xor
push
fidivl
sub
out
addb
cmp
int3
mov
sub
mov
gs
popa
xorb
insl
xor
add
sbb
mov
push
add
test
cld
add
pop
orb
inc
xchg
addr16
pop
add
dec
add
or
cmp
into
test
inc
jnp
xchg
sbbb
or
add
cmpsb
cmpsl
and
push
stc
add
lock
cmp
sub
push
test
gs
push
cmp
cmp
and
adc
mov
push
out
ds
xor
jge
repz
push
leave
mov
pop
test
stos
std
bound
insl
test
ds
dec
inc
mov
pusha
fistl
sbb
xchg
sub
and
sar
movsl
subb
xrelease
ret
mov
orl
inc
lret
sbb
lahf
fistpl
cmp
fiaddl
or
addl
xor
cltd
pop
pop
jmp
mov
in
repnz
stos
pop
divb
mov
add
jno,pn
lock
xor
addb
add
lret
push
rclb
dec
subl
mov
cs
fwait
xchg
subb
mov
sbb
and
or
mov
xor
jbe
andl
xchg
subl
addr16
mov
adc
call
icebp
jnp
mov
jg
rcr
xchg
and
cmp
test
and
xor
or
xor
inc
jge
pop
sub
orl
sbb
add
fildl
pop
mov
xor
xchg
test
mov
push
inc
lahf
add
orb
shlb
mov
sbb
xor
cmp
inc
push
test
fnstenv
cwtl
and
dec
xor
scas
movsb
jbe
cwtl
mov
repnz
ja
out
scas
jp
cmpsl
mov
adc
bound
xchg
xchg
es
inc
mov
inc
stos
insb
inc
cwtl
and
cmc
sub
call
subb
cmp
dec
push
add
xchg
xchg
mov
ret
filds
test
mov
adc
cltd
mov
leave
stos
mov
roll
mov
les
jae
and
mov
push
mov
xlat
popl
js
and
subl
data16
pop
cmp
jge
add
cmp
daa
mov
pop
add
add
repz
and
mov
and
cld
inc
popf
push
mov
add
sbb
sub
add
push
jae
cli
lret
and
mov
jecxz
cmp
dec
dec
pop
xor
inc
sbb
mov
mov
xor
xchg
jo
out
loop
add
pop
adc
adc
js
jmp
mov
test
test
push
ja
daa
pusha
lods
push
cmp
js
jecxz
stos
sbb
test
cmc
xor
fcomps
popf
xchg
xor
sbb
test
popf
jb
xlat
mov
push
or
jp
and
mov
std
jns
orb
outsl
js
push
jmp
lods
mov
bound
sbb
and
cwtl
adc
adc
jae
sarb
and
or
push
jge
xchg
or
adc
xchg
bound
popa
or
scas
fstpl
cmp
leave
or
sub
xor
inc
jo
add
sbb
insb
inc
ret
lret
cmp
jmp
addr16
outsl
or
mov
add
inc
push
addl
push
mov
iret
mov
adc
fadds
push
int3
inc
fcmove
dec
or
lock
cli
movsb
pop
dec
xor
add
clc
out
or
add
xchg
lret
scas
sbb
testl
push
inc
jbe
dec
jae
push
stos
sbbb
inc
repnz
jns
and
jno
adc
lahf
or
or
out
or
and
das
mov
leave
push
jne
sbb
loop
nop
inc
ja
dec
stc
sbb
stos
scas
jecxz
jge
icebp
jecxz
sti
xchg
movsb
fwait
js
das
dec
inc
ja
vmread
xor
stos
lret
mov
push
jmp
rcll
pop
movsb
or
xor
sbb
cmpsb
repz
dec
nop
add
cmp
sbb
add
xor
or
sbbb
xor
data16
imul
mov
pop
dec
mov
das
les
adcl
arpl
xchg
mov
cmp
iret
sahf
sub
pop
fadds
mov
mov
sbb
test
or
call
rclb
aaa
xlat
mov
add
cltd
or
sub
and
jo
in
movsl
imul
pop
xor
mov
mov
fldt
int3
popf
hlt
lods
movl
nop
in
call
stc
inc
ljmp
and
mov
or
subb
pop
cmp
mov
xchg
fisttpll
orl
xor
lret
mov
rcll
sub
ret
jnp
iret
in
xchg
dec
inc
jmp
or
xchg
and
xor
jae
fucomi
bound
jmp
sbb
xlat
pop
inc
int3
orl
arpl
dec
xchg
or
outsb
add
test
in
loope
xlat
dec
test
jg
xchg
xchg
fists
fs
ljmp
imul
addb
imul
mov
mov
imul
or
jecxz
push
xor
sbb
xchg
add
push
and
scas
push
cld
outsb
lret
xchg
mov
xchg
lds
lods
test
adc
xor
sbb
jge
cmc
ret
adcl
push
sbb
cmp
jo
mov
pushw
sub
test
push
enter
gs
in
bound
push
dec
xchg
add
pop
xchg
enter
cmpps
mov
or
mov
xchg
pop
sarb
lods
rcr
mov
lds
insl
mov
xchg
aad
pop
mov
push
and
jmp
xchg
stos
and
mov
movsb
mov
loope
cwtl
xlat
xor
shll
or
dec
ficoms
dec
addl
test
mov
and
insl
or
cmc
mov
xchg
rorl
leave
stos
xchg
popa
mov
lds
addr16
stos
or
push
xchg
push
cmpsl
out
imulb
jle
test
and
leave
lcall
pop
imul
xor
in
in
push
dec
repz
sbb
mov
or
dec
or
push
jmp
shrl
or
out
scas
xor
push
and
arpl
sbb
mov
icebp
dec
mov
push
or
mov
aad
std
jne
or
imul
nop
jmp
jle
dec
xlat
test
jns
std
sbb
add
out
mov
icebp
loop
fs
fdivrs
gs
mov
cltd
dec
inc
nop
mov
add
outsl
jp
sub
jo
jge
in
add
fdivl
mov
dec
xchg
subb
cmpb
add
inc
xor
and
add
dec
inc
int
sbb
cli
imul
sbb
lods
xchg
pushf
js
mov
arpl
cmpsb
rcl
dec
in
xor
fists
insl
mov
ljmp
test
test
push
lret
sbb
inc
shlb
iret
dec
add
and
xchg
jl
orl
in
mov
adcb
outsb
mov
cmp
or
test
jg
fists
xchg
add
pusha
cmp
or
push
or
test
fwait
hlt
sbb
insb
lret
iret
pop
jp
mov
shr
jge
in
movsb
in
adc
int
enter
fwait
repz
xchg
aad
cmp
scas
cmp
cltd
mov
pop
std
out
push
push
jge
adc
lcall
inc
xor
dec
sbb
mov
enter
push
or
outsb
frstor
clc
lret
pop
ja
mov
test
daa
push
adc
and
push
mov
xchg
call
xor
add
xchg
jg
inc
scas
clc
xor
lret
xlat
sub
xchg
or
aad
or
cmp
mov
bound
cmp
ret
mov
dec
jge
lretw
fisubs
das
mov
mov
int3
mov
inc
inc
jns
sbb
inc
mov
mov
push
movsb
inc
popa
xchg
or
jmp
pop
out
xchg
xor
sbbb
mov
mov
xchg
test
stos
push
movsb
push
nop
ret
xor
loopne
jno
pop
int3
movswl
dec
add
sub
adc
outsb
out
js
pop
or
sbb
jno
cmp
fs
lods
stc
sbbb
pop
inc
pop
and
shrb
stos
mov
jmp
scas
shll
mull
mov
imul
iret
test
inc
push
pop
pop
mov
sub
popa
fistps
rcrb
jo
fisubrl
xchg
mov
call
fisttps
mov
adc
xor
movsl
dec
int
fadds
mov
or
inc
stos
mov
lods
adcb
jb
add
xor
mov
aad
xchg
out
in
mov
xchg
dec
cltd
loopne
sbb
sbb
in
jae
fistpl
aaa
push
jbe
sub
mov
xor
push
clc
nop
lods
pusha
out
inc
add
xchg
cwtl
dec
int
orb
arpl
scas
xchg
lock
add
movsl
int3
jb
lods
lods
xlat
pusha
push
aaa
or
dec
leave
jb
mov
fs
sahf
fisttpll
xchg
addr16
in
push
jg
test
gs
xlat
and
cmpsb
mov
adc
pop
jns
addr16
push
shrb
sub
lahf
adc
stos
idivl
add
addr16
xchg
test
and
dec
xchg
jge
dec
shlb
scas
mov
add
les
cwtl
jmp
fistpl
pop
sti
adc
sub
mov
jecxz
and
or
cmp
push
ja
fisubs
cmp
mov
fadds
mov
add
into
jecxz
and
pusha
dec
ljmp
sti
out
gs
add
stc
loopne
nop
rolb
add
adc
out
dec
lret
mov
scas
sub
xlat
scas
lock
mov
inc
mov
or
mov
add
adc
pop
adc
sub
into
or
subb
cmp
cmpsl
xchg
cmp
aad
scas
arpl
mov
aas
mov
je
insb
mov
and
push
scas
xchg
xor
dec
jmp
fisubl
xor
mov
mov
adc
jno
mov
push
pop
mov
jp
cmp
pusha
gs
and
pop
sahf
mov
stc
adc
shlb
leave
xchg
stos
xchg
fidivl
xor
fmulp
mov
mull
sahf
outsb
bound
in
mov
xchg
adc
mov
push
enter
lea
es
cld
sahf
inc
test
std
rorl
stos
gs
dec
push
sbb
inc
mov
sarb
fwait
dec
mov
test
rolb
es
out
popa
mov
sbb
push
pop
cmp
fcmovnu
ficompl
das
xlat
cmpl
cmp
lds
push
je
mov
out
inc
ret
lret
mov
mov
mov
jl
es
popa
mov
push
mov
and
sub
imul
adc
lahf
mov
inc
sbb
and
mov
or
mov
cmpsl
xchg
in
mov
es
ret
cmp
and
mov
sahf
mov
push
cltd
popf
shl
mov
mov
repnz
dec
cltd
movsb
ljmp
mov
sahf
mov
dec
sub
xchg
pop
dec
roll
mov
push
mov
gs
push
sub
ja
cmp
or
mov
loop
add
out
adc
jnp
and
int
mov
gs
cmc
add
dec
push
xlat
adc
xchg
add
rorb
or
and
test
pop
dec
adc
jne
icebp
inc
xor
aaa
ss
bound
roll
ret
test
addb
in
pop
pop
sub
loop
sub
or
outsl
mov
daa
repz
mov
mov
gs
jae
data16
mov
out
pop
inc
pop
call
or
es
aad
out
xchg
xor
lea
subl
cmp
dec
pushf
mov
push
mov
cmpl
jno
cmpsb
test
add
mov
repnz
add
dec
push
sub
sbb
in
mov
lds
xorl
aas
or
lret
repz
pop
bound
jne
add
nop
mov
lcall
mov
ss
xlat
or
mul
ja
repnz
repnz
fs
and
popf
push
push
mov
mov
stos
sub
repnz
call
and
push
xchg
jno
test
xchg
shrb
or
mov
ret
pop
bound
decl
mov
imul
inc
ljmp
add
dec
add
cli
xor
add
js
lds
pop
cmp
mov
add
and
or
in
mov
push
dec
lss
inc
nop
push
dec
jae
outsl
inc
int
mov
orl
das
pop
xorb
xchg
dec
push
jne
mov
add
out
or
jl
les
mov
mov
or
adc
je
dec
inc
sbb
mov
lods
loop
fbstp
mov
and
stos
cmp
inc
sti
adc
or
scas
ds
mov
mov
ret
test
mov
jl
imul
or
rolb
cltd
lret
mov
out
adc
inc
xor
mov
jp
bound
pop
dec
loope
fwait
jmp
add
cs
pop
repnz
loopne
dec
test
mov
cld
lret
jbe
popa
and
je
movups
imul
scas
inc
mov
enter
out
lret
push
pop
cli
fstpt
mov
hlt
divl
imulb
jl
or
pop
clc
out
jo
jbe
out
and
xchg
jno
es
add
or
ret
and
rcrb
daa
stc
add
xchg
sahf
cmp
out
sub
loope
out
mov
mov
inc
dec
mov
mov
movsl
pushf
dec
in
adcb
add
xchg
por
push
cs
sbb
sub
imul
test
inc
mov
mov
push
push
sub
movsl
scas
mov
dec
in
inc
inc
leave
orl
ret
mov
jne
mov
mov
mov
sub
inc
sbb
sbb
mov
inc
loope
daa
xor
and
and
ret
push
pop
inc
pop
dec
jbe
lock
xchg
mov
fcoms
xor
addr16
cmp
fwait
jo
cmp
xlat
jno
cwtl
push
testb
lock
lahf
imulb
pop
sub
scas
mov
pop
stc
test
xchg
adc
fs
scas
xorb
push
movsb
addb
inc
inc
rorl
mov
jno
cmp
lret
lretw
xor
sbb
pop
test
inc
push
dec
ret
out
jae
dec
or
das
repz
and
jmp
js
leave
imul
leave
or
repnz
adc
scas
leave
push
mov
test
xor
adc
xor
or
repz
mov
cwtl
xor
lret
mov
int3
push
andb
inc
jp
add
movsl
or
negl
cmp
lock
sahf
pop
lret
lods
cmp
adc
push
inc
sub
jecxz
sbb
sub
push
mov
addr16
xchg
icebp
lods
and
int
sub
sbb
imul
add
unpcklps
scas
or
jns
push
mov
lea
leave
xchg
int
sub
mov
data16
xor
and
lret
dec
jo
inc
nop
sub
xor
dec
pop
adc
pop
inc
addr16
pop
scas
int3
pop
adc
xor
mov
sbb
jno
stos
mov
subb
addr16
ja
cmpsl
enter
cmpsl
cmp
pop
repnz
or
or
jo
xchg
mov
mov
lret
mov
or
inc
stos
dec
xor
shll
cmp
push
test
movsl
out
adc
scas
push
sbb
test
or
mov
jb
aaa
cwtl
cltd
pop
or
addl
pop
icebp
out
push
stos
pushf
jp
sub
fs
sub
mov
adc
jb
mov
dec
adc
adc
dec
orl
inc
icebp
popl
push
test
cmc
cmp
xchg
imul
ja
add
lcall
jo
nop
pop
mov
pop
xchg
adcb
fists
mov
in
xchg
ljmp
scas
pop
shrl
pushf
scas
insl
pop
or
loope
data16
mov
test
clc
sub
rol
movsb
dec
cmp
andb
inc
mov
or
test
sub
xor
sbb
cmp
nop
dec
mov
xchg
or
inc
imul
adc
inc
and
push
cmpsl
xor
sub
mov
aas
addb
fistl
popf
ret
dec
ret
nop
add
inc
andb
popa
mov
mov
outsb
and
and
shlb
adc
sbb
test
in
adc
pop
mov
ror
xchg
fistl
sub
call
out
fcomps
pushf
sub
xchg
in
adcb
jno
loopne
faddl
pop
cmp
addr16
mov
xorb
fnstcw
pop
xorb
mov
cmpl
test
mov
inc
in
xchg
ljmp
pop
inc
mov
mov
adc
mov
mov
cli
adc
dec
adc
push
dec
test
mov
pushf
mov
jno
jge
in
lret
sub
ljmp
fistps
imul
mov
mov
daa
fs
mov
test
jo
mov
jmp
out
adcb
jge
xor
je
xor
jo
push
jmp
push
or
and
sbb
xor
push
add
sub
jns
int3
sbb
repnz
add
jno
mov
sbb
leave
pop
jbe
out
loope
jo
sbb
cmc
clc
dec
scas
or
fsubs
push
pop
mov
push
dec
jns
movsl
cli
out
faddl
dec
cmc
lods
or
dec
stos
xor
adc
inc
push
loope
dec
add
jmp
pop
add
jge
cmp
dec
loope
lret
psubd
faddp
scas
inc
repnz
pusha
mov
out
xchg
xchg
subl
inc
sahf
adc
dec
xchg
fcom
jb
loope
js
ljmp
lds
and
stos
sbb
lock
into
adc
outsl
add
filds
sub
cmp
lahf
sbb
in
and
in
insl
inc
test
cmp
jp
stos
pushf
lock
pop
sarb
adc
inc
pushf
or
test
dec
dec
test
sbb
nop
and
mov
rclb
jo
cmpsl
or
adc
fnop
sbb
sbb
jae
ficoms
les
ss
sbb
add
sbb
xor
push
sbb
ret
dec
add
mov
repnz
test
xchg
bound
add
push
xchg
push
and
cmp
imul
or
lods
test
add
sbb
movsl
pop
push
cli
dec
lcall
sahf
cmp
jbe
inc
sahf
out
push
xor
mov
cli
add
sbb
jge
or
add
imul
fwait
add
fmuls
scas
inc
push
pop
data16
and
cmp
push
and
movsb
orb
mov
pop
lcall
jmp
sbb
push
add
and
idivl
mov
adc
pusha
ret
cwtl
adc
pop
push
pop
les
and
addr16
pusha
clc
loope
xchg
data16
movsl
jns
pushf
jl
movsl
lods
xchg
out
xchg
fcompl
cwtl
mov
adc
adc
cmp
scas
and
jns
add
test
and
add
ror
xchg
in
out
cmp
cmp
mov
pop
dec
lds
xchg
add
push
xchg
stos
in
mov
or
neg
pushf
testl
cmp
ljmp
popa
push
cli
xchg
fcmovu
sbb
cmp
insl
stos
sbb
add
jbe
xorl
insb
mov
adc
cmpsb
sarb
xorl
test
or
cmp
bound
push
mov
loope
jmp
inc
xchg
jmp
dec
out
push
xor
lahf
daa
ficompl
sbb
mov
loop
insb
imul
or
rolb
adc
cld
jo
sub
dec
rolb
push
xchg
sub
inc
push
addr16
test
mov
adc
clc
push
add
jl
pusha
or
push
movsb
xchg
xchg
popl
xchg
push
popf
adc
adcl
je
loop
sbb
test
add
bound
clc
xor
insb
or
and
jge
mov
test
sbb
shll
xorb
xchg
inc
push
scas
movzwl
lret
mov
jno
fidivrl
xor
nop
dec
enter
mov
sub
mov
cld
incb
mov
scas
outsl
outsl
mov
enter
outsl
mov
mov
ret
or
push
mov
loop
pop
pop
js
mov
sbb
and
fsubp
jmp
mov
pop
add
lods
in
add
pop
xchg
xor
add
mov
bound
sbbl
jp
jecxz
jp
add
sbb
orl
or
enter
leave
cmp
mov
add
arpl
adc
popa
xorl
inc
and
mov
dec
cmp
adc
jnp
xchg
jo
add
daa
shll
cwtl
in
rorb
or
iret
push
out
cmpsb
test
daa
inc
rorl
cmp
and
mov
or
scas
push
inc
add
jo
push
xchg
adc
cmp
adc
adc
xor
push
adcl
fsub
repz
iret
xor
and
addb
xchg
adc
or
add
fisubrl
lds
xchg
jo
test
pop
sbb
lods
adcl
sbb
jle
lds
mov
popf
mov
cli
scas
pop
fisttps
cmp
lahf
jns
into
or
scas
rorl
or
cli
add
add
popa
adc
mov
repnz
pop
jmp
pop
jmp
cmp
adcl
mov
bound
inc
xor
inc
mov
orl
lods
out
xor
inc
pop
or
dec
lcall
lret
dec
add
or
and
add
push
adc
imul
sbb
test
jo
dec
ljmp
push
xchg
mov
dec
sbb
and
movsb
andb
or
mov
cmp
fs
or
icebp
mov
sbb
mov
xorb
mov
xchg
ret
push
mov
ljmp
sbb
popf
sbb
dec
xchg
cmpsb
cmp
inc
sub
or
adcb
xor
fwait
pop
insb
in
inc
and
adc
jbe
dec
daa
into
and
adc
movb
sti
and
pop
adc
out
and
or
inc
add
mov
dec
push
pop
ret
cs
or
pop
in
jle
loop
mov
sbb
sub
jmp
sbb
jo
jmp
movsb
outsl
push
lods
ret
adc
or
stos
jecxz
xchg
push
stc
jmp
sbb
cmp
push
mov
in
cmc
fwait
leave
pushf
dec
pop
sbb
cwtl
inc
or
lods
aas
pusha
rcl
jle
out
add
out
sub
ret
ja
mov
cmp
lods
repnz
int3
or
in
cmp
decb
adc
dec
shrb
aas
cmp
or
sbb
jg
sbb
mov
adc
iret
xchg
mov
loopne
mov
mov
mov
jb
inc
loopne
das
rcll
cld
imul
mov
mov
xchg
stos
inc
jno
pop
arpl
add
push
xchg
sub
push
jo
orb
ret
dec
cmp
ljmp
frstor
adc
jg
adc
addb
add
inc
scas
enter
adc
inc
scas
sub
fwait
cmp
cmp
jnp
xlat
icebp
mov
lock
cwtl
andl
add
inc
mov
out
adc
add
add
addl
sbb
fstpl
mov
inc
scas
lret
and
inc
mov
cwtl
mov
adc
push
movsb
mov
mov
mov
push
inc
jns
mov
and
mov
inc
inc
add
push
pop
imul
ret
enter
out
out
dec
repz
xlat
cwtl
jno
pop
mov
stos
shlb
inc
and
xor
arpl
fs
aas
ret
inc
sub
in
shlb
pop
ret
jge
inc
inc
sbb
test
lock
ja
fmull
ret
xchg
pop
and
cmpsl
jo
pop
dec
aaa
lods
and
mov
test
adcl
mov
rcrl
cmp
dec
mov
jae
mov
bound
jns
imul
xchg
pop
ljmp
pop
cmpl
cmc
and
add
mov
je
pop
mov
movsb
ljmp
fcomi
fisttps
mov
js
sbb
pop
push
adc
faddl
sub
sub
dec
fstl
enter
scas
enter
sub
xor
xlat
mov
pop
lret
mov
ljmp
loop
leave
xchg
pop
jo
jg
decl
push
sti
bound
jge
pop
adc
mov
or
imul
frstpm(287
repnz
xchg
xor
nop
add
pop
push
pop
adc
fldl
lcall
mov
js
arpl
dec
aam
movsb
scas
mov
movsl
xchg
mov
add
dec
ljmp
aam
dec
dec
movsb
sub
int3
xor
cmpl
adcb
pushf
pusha
add
sbb
add
out
test
mov
or
test
push
icebp
jo
push
int3
lret
xor
adc
mov
movsl
ljmp
loope
xchg
int
add
jno
test
jge
scas
dec
add
mov
aam
or
cmp
shrb
push
std
add
add
inc
xor
and
mov
scas
inc
pusha
cmp
cmp
cmp
lcall
enter
cmp
sub
aas
push
int3
gs
push
adc
or
iret
sub
push
sub
test
pop
or
ja
mov
lods
dec
shrl
push
inc
jno
and
mov
iret
mov
pop
xchg
mov
in
mov
jge
pusha
dec
jg
xchg
mov
enter
nop
and
ljmp
js
rcll
jne
lcall
inc
jecxz
dec
xor
xor
leave
cmpsb
cmp
pop
cmp
mov
pop
shld
xor
mov
ret
push
inc
mov
hlt
pushf
movsb
ret
add
inc
scas
add
jge
inc
add
clc
mov
jne
and
push
dec
cwtl
or
mov
sbb
mov
mov
shlb
pop
push
fisttpll
cmpl
mov
add
mov
or
xor
add
in
and
dec
inc
daa
pusha
subb
shrb
adc
and
add
mov
and
divl
lcall
aaa
push
ss
pop
mov
pushf
mov
or
lret
ljmp
or
daa
mov
xchg
push
add
dec
xor
lahf
popa
pop
das
shll
addr16
adc
or
sub
aad
add
inc
movsb
mov
insl
and
cmp
add
or
loopne
sbb
subl
lret
rorb
xchg
push
or
fs
out
push
or
shrl
mov
repnz
sbb
add
fildl
adc
add
mov
or
sub
adcb
lcall
push
mov
push
ljmp
xchg
inc
or
sub
subl
cmpsl
and
mov
or
sbb
adc
push
push
dec
outsl
es
jmp
xor
add
loope
sbb
push
ljmp
pop
sub
xor
negl
inc
jae
aas
jmp
cmp
push
fcomps
sbb
clc
andl
mov
mov
push
jmp
inc
orl
fcmovbe
shrb
sub
outsl
add
push
loope
shll
mov
dec
sbb
call
adc
mov
inc
cmp
xor
lds
mov
aas
jb
or
movsb
clc
popa
sub
xor
and
sbb
adcb
dec
mov
add
test
xor
loop
push
inc
sub
xchg
dec
cmp
jo
mov
ljmp
out
repnz
jo
sub
sbb
loop
and
sbb
popa
push
mov
cmp
push
mov
xor
mov
lahf
sahf
imul
jge
aaa
push
leave
sahf
lcall
jne
in
enter
pushf
jbe
jb
push
or
jmp
outsl
mov
daa
pop
scas
sub
push
jge
dec
enter
jle
cmp
xor
mov
jmp
repz
adc
push
fs
insl
or
addl
jge
test
mov
mov
lahf
ja
or
mov
cmpl
push
ret
lods
push
jne
and
cmp
cmp
push
cmp
or
jb
pop
fmul
inc
mov
xor
dec
adc
lret
dec
loop
add
xchg
jl
repz
dec
cli
dec
cwtl
ljmp
jae
repnz
and
push
jo
inc
ds
sbb
mov
imul
push
add
and
mov
sub
test
fwait
movsb
mov
sbb
mov
insl
ret
pop
pop
inc
mov
push
inc
test
iret
inc
divl
mov
dec
mov
rcrl
loope
rorb
sub
rol
lret
inc
ficoms
xlat
lret
xor
cmp
mov
dec
scas
cmp
xchg
andb
pushf
movsb
cmp
lods
repnz
or
repz
sbb
inc
pop
add
loop
inc
adcl
imull
adc
xor
sbb
lret
rcrb
inc
mov
or
les
lods
lods
add
lods
out
add
pusha
loope
movsb
sbb
or
push
jno
push
inc
lcall
sbb
lret
xlat
sbb
push
push
ss
int3
or
aam
loop
cltd
xor
or
gs
lret
loope
aad
push
inc
pop
mov
mov
or
mov
stc
outsl
loop
mov
dec
sbb
movsb
imul
mov
sub
pop
aas
adc
subl
orb
jg
sub
mov
pop
cmp
leave
pusha
popa
and
cwtl
dec
in
inc
lret
sub
stos
and
inc
inc
rclb
leave
movsl
subl
mov
fsubrs
jae
shll
xchg
adc
add
lock
leave
popa
jbe
bound
adc
mov
xor
das
adcb
test
sbb
lret
pop
jmp
mov
lahf
pop
and
out
inc
and
xchg
inc
mov
inc
repnz
ret
out
jb
lock
inc
and
movsb
sbb
cld
mov
and
cmp
pop
mov
adc
xchg
nop
xor
loope
add
xorl
pop
ret
xchg
ja
adc
lea
sbb
in
fmuls
jno
dec
lds
popf
lods
mov
or
gs
cs
ja
adc
mov
fdivrp
pop
add
shrl
ret
xchg
jne
push
repnz
mov
iret
sbb
gs
mov
cmp
lahf
loope
mov
xor
mov
jge
mov
pushl
clc
dec
and
aam
pusha
push
push
lret
cmp
and
mov
jne
cmp
add
ds
leave
push
enter
ret
add
iret
sbb
sbb
ljmp
dec
inc
scas
ret
out
cmp
out
pop
or
push
popf
sbbb
xor
out
inc
push
or
push
addl
jb
iret
inc
shrb
aaa
shrl
and
ljmp
pusha
sbbb
push
icebp
sub
sub
movsb
rcrb
jns
add
imul
mov
nop
ret
mov
pushf
orl
fwait
shrl
xchg
mov
add
and
sbb
mov
add
cmp
cmp
xor
add
xor
stos
sbb
data16
cltd
sti
adc
mov
jne
shll
sub
dec
pusha
aaa
xchg
nop
sbb
pop
test
out
xchg
mov
xor
outsl
hlt
xor
movsl
jmp
fiaddl
xchg
xchg
dec
mov
nop
test
pop
mov
mov
mov
pop
pop
movsb
xchg
jg
mov
push
clc
mov
aad
fwait
xchg
and
push
lea
sbb
add
in
xor
cli
enter
adc
jecxz
dec
dec
push
outsl
loop
sahf
pop
loopne
jecxz
mov
cwtl
les
daa
iret
inc
sahf
and
mov
fdivl
leave
ret
movsb
scas
jp,pt
add
lret
or
cli
cmp
dec
sahf
and
xchg
or
insl
loopne
mov
ror
lods
mov
leave
xchg
sbb
cld
mov
dec
mov
sbb
dec
add
sub
xchg
or
mov
lret
xchg
inc
clc
xchg
xor
push
cmp
or
out
lods
cmp
inc
imul
das
shrb
xchg
mov
mov
ds
sub
add
popa
loope
jno
lahf
mov
ljmp
or
sbb
jp
sbb
or
jnp
mov
sub
imul
out
push
mov
inc
dec
pop
push
add
subb
sahf
dec
aam
lds
jno
dec
adc
xor
dec
inc
push
and
jno
rolb
jp
rcrb
or
stos
pop
pop
xchg
add
push
xchg
stos
sub
xor
jbe
jb,pn
push
incl
mov
ret
jge
into
movsb
add
mov
mov
pop
cld
mov
jne
adcb
cmp
dec
test
jge
mov
int3
popa
aad
rcr
mov
and
leave
cmp
sarb
xor
xor
push
nop
add
mov
lods
roll
cmp
nop
dec
or
pushf
mov
cltd
rolb
cmp
lret
dec
adc
adc
jp
push
shlb
nop
in
popf
icebp
movsb
mov
add
dec
addb
jle
pop
dec
scas
addr16
ljmp
nop
dec
ss
out
cmpsb
cmp
cmp
dec
icebp
lea
lods
in
cwtl
popfw
xor
xchg
xor
sub
cs
test
jbe
inc
dec
pop
into
adc
loop
lea
add
xchg
bound
stos
push
rcrl
es
fs
jb
shl
add
dec
adc
dec
dec
adc
stos
mov
dec
cmp
rcll
fxch
xchg
sub
push
shll
mov
dec
mov
scas
and
sub
push
cltd
pop
mov
roll
mov
lock
popf
repz
mov
or
dec
lock
sub
or
leave
dec
mov
mov
scas
bound
mov
dec
shll
ret
cmp
dec
mov
out
add
add
imul
jns
mov
mov
push
repz
test
aam
mov
and
jae
and
imul
pop
shrl
popf
nop
iret
and
std
pop
jp
movsb
popf
scas
incl
sbb
mov
pop
xchg
adc
adc
inc
add
adc
enter
dec
nop
and
add
adc
add
and
jp
mov
movsl
mov
mov
add
sub
xor
lock
in
stc
push
mov
dec
add
out
and
sub
add
sub
ss
dec
test
shlb
enter
mov
loope
push
decl
mov
mov
into
adc
ljmp
mov
pop
lods
mov
rcll
jecxz
xor
and
ret
test
jns
mov
scas
xchg
xchg
cwtl
xor
inc
es
mov
mov
adc
xor
shr
mov
rolb
out
lret
iret
mov
push
dec
mov
rcll
sub
std
cli
mov
pop
or
lret
cmp
lret
hlt
push
or
out
add
outsl
imul
add
enter
mov
andl
gs
stos
and
push
adc
xchg
adc
or
or
and
out
push
inc
rorb
out
pop
push
shl
nop
rclb
sbb
inc
aas
fistl
mov
jne
scas
add
out
jno
scas
add
andl
mov
cmc
movsl
mov
fadds
mov
add
emms
mov
dec
aas
push
push
sbb
sbb
mov
or
rolb
loope
lea
mov
add
mov
jg
fwait
daa
out
loop
push
mov
jns
int3
push
mov
adc
mov
push
add
cmp
inc
inc
cmc
fbld
pop
xchg
loop
imul
aas
mov
xor
pop
addl
mov
cltd
sbb
and
orl
mov
and
popf
inc
dec
add
std
xchg
fsubs
pop
dec
xorl
xchg
outsb
pop
test
jb
and
stos
popf
xor
mov
adc
and
mov
and
xor
inc
out
adc
push
test
dec
adcb
push
dec
lret
jp
dec
pop
xor
pop
cmp
shrb
call
xchg
mov
push
push
adc
out
xor
jne
mov
sub
stos
push
sub
xlat
add
dec
inc
xor
mov
pop
sub
or
cld
or
jno
daa
test
inc
orl
mulb
lock
popa
adc
bound
push
addr16
adc
test
or
sbb
into
push
pop
xor
sub
ja
adc
loop
dec
mov
lret
adc
cwtl
jne
mov
pop
loope
push
bound
scas
mov
cmpb
andb
cwtl
dec
clc
mov
jb
inc
stc
cmp
xlat
repnz
repz
xchg
dec
sub
adc
gs
insl
aam
test
and
and
jg
add
push
clc
sbb
ja
cli
and
aam
cmpsl
shl
xor
aad
es
and
into
lahf
std
push
rclb
and
cmp
xor
cmp
fcomps
pop
sarb
inc
repnz
pop
shll
pop
rclb
mov
pop
adc
xchg
pop
out
xor
mov
xchg
push
mov
shll
addr16
jmp
aaa
arpl
pushf
test
test
ret
push
cs
rclb
sub
pop
in
adc
subl
xchg
xchg
repnz
test
pop
sub
and
or
jo
lods
jp
jne
cmpsl
into
popf
notl
sbb
scas
xlat
imul
scas
or
or
cmp
sbb
pop
cmp
sbb
push
es
fisubl
xor
mov
and
or
int3
or
or
jmp
dec
sbb
inc
or
rclb
cld
push
test
sub
dec
xor
mov
movsl
xor
xchg
cli
xchg
rcll
out
push
movsl
andl
out
stc
dec
scas
test
and
aas
or
dec
jle
andb
scas
mov
in
sbb
lret
jmp
ljmp
push
lahf
repnz
mov
pop
mov
fwait
dec
cwtl
dec
push
sub
sub
jb
jg
rolb
xor
dec
and
inc
jnp
insl
fucom
aad
fwait
aam
xor
mov
xor
movsl
pop
cmpsl
and
pop
add
sbb
or
add
inc
test
bound
sti
sbb
addr16
sti
xor
xor
mov
or
scas
add
inc
xchg
dec
lcall
in
jmp
xor
cmp
inc
cld
rcrl
jg
mov
push
fisttpl
mov
mov
mov
cmp
sbb
pop
mov
addr16
cmp
xor
loop
outsl
sbb
mov
xlat
cmpl
test
mov
pop
push
add
sub
les
lret
dec
flds
adc
movb
pop
lret
lea
lea
pop
out
movsl
scas
pop
in
pusha
mov
dec
rorl
and
xor
cmc
xchg
and
inc
pop
cmpsl
add
add
add
jp
or
pop
shl
in
movsb
pushf
or
sbb
jg
popa
pusha
std
and
movsb
sbb
and
in
sub
les
xchg
test
call
inc
sarl
cmp
inc
sub
jo
jmp
pop
and
jecxz
mov
jp
xchg
mov
or
adc
and
mov
mov
lods
imul
inc
push
pop
popa
rcl
dec
mov
push
std
push
jecxz
into
ljmp
movzwl
pop
shrl
les
jns
call
and
cwtl
out
ret
ficompl
push
leave
ret
mov
and
jp
adc
sub
push
mov
cmp
sbb
lods
or
xor
mov
or
jge
mov
in
cmpsb
mov
jmp
iret
mov
out
imul
push
pop
and
pop
in
inc
fsubrl
jno
xchg
sub
push
ficoml
adcb
pushf
out
xchg
mov
lock
aas
push
movsb
das
sub
add
pop
pop
mov
adc
stos
inc
lods
test
xchg
xor
cld
test
sarl
lret
enter
pop
xchg
mul
imul
stc
test
inc
shlb
inc
or
loop
cmp
imul
aam
jns
or
sbb
dec
out
xor
mov
addr16
dec
inc
push
cmpl
mov
fdivl
aas
fnstenv
dec
mov
loop
xor
shrb
adc
push
jae
loopne
leave
out
mov
pop
inc
inc
shl
mov
imul
rol
xchg
mov
inc
arpl
xchg
mov
loope
mov
xchg
mov
add
xchg
add
xor
imul
inc
sti
xor
jmp
mov
out
cli
jecxz
lret
orb
xchg
fisttps
xchg
add
mov
push
ds
push
sub
add
xlat
push
push
stos
cmp
push
jmp
addb
mov
jmp
add
cwtl
in
dec
roll
stos
mov
inc
sbb
popf
stos
inc
xor
mov
das
or
push
ja
jecxz
out
pop
or
test
xchg
or
push
mov
mov
add
mov
xor
mov
pushf
inc
out
les
jmp
xchg
sbb
test
movsb
adc
mull
mov
push
sbb
xchg
dec
adc
inc
push
flds
inc
jle
lea
inc
mov
call
or
add
xor
or
add
movsl
das
bound
mov
bound
xlat
cs
scas
shl
test
mov
mov
adc
add
movsl
inc
divl
mov
clc
push
xchg
stos
mov
stc
mov
add
addr16
push
mov
out
mov
mov
mov
mov
xchg
mov
lods
shlb
push
insb
les
nop
das
test
xsave
mov
test
enter
pop
mov
dec
dec
cmp
xchg
push
lods
mov
fists
and
mov
adc
mov
push
imul
mov
lret
movsl
imul
add
add
xor
inc
xor
jmp
pop
ret
pop
pop
xchg
xchg
rorb
xchg
adc
mov
xchg
je
movsb
add
sbb
fsubrl
push
in
cmp
icebp
xchg
mov
popf
adc
testb
sbb
xcrypt-ecb
cmpsl
or
mov
jp
aad
mov
cmp
pop
cmc
push
sti
iret
push
popa
mov
repz
jle
mov
sbb
inc
adc
in
das
mov
mov
mov
cld
cmc
repnz
inc
rolb
mov
xchg
inc
aad
pop
push
je
lock
data16
and
xchg
icebp
scas
icebp
sub
lods
std
inc
je
cmp
adc
inc
sbb
dec
sbb
xchg
sbb
xor
and
insb
xor
mov
jns
cld
add
lods
add
int3
mov
xor
mov
add
inc
push
adc
or
aaa
jecxz
loopne
mov
xor
xor
xor
pop
cmpsb
loopne
std
cmp
sub
shlb
test
jecxz
sub
sbb
sub
xchg
iret
enter
stos
ss
or
test
mov
xchg
lds
enter
sub
jecxz
out
add
xchg
mov
mov
stos
imul
sahf
and
ljmp
or
sar
jmp
test
clc
push
inc
push
data16
jno
push
inc
dec
jns
jecxz
pushl
lret
fs
xchg
mov
add
xchg
mov
inc
fs
and
pop
fmuls
mov
xchg
push
or
inc
push
rclb
adc
cwtl
mov
lock
das
mov
mov
insb
sbb
scas
xor
inc
mov
stc
and
dec
les
pop
inc
dec
test
inc
ds
insl
mov
xor
or
test
inc
jl
shrl
adc
mov
movsl
test
mov
jle
in
lock
mov
clc
mov
bound
cmp
fwait
adc
lcall
adc
mov
popa
xchg
mov
adc
jle
das
or
lods
sbb
repz
xorb
in
popf
and
adc
test
or
mov
and
jmp
dec
mov
sbb
mov
ret
cli
popa
in
stos
lahf
nop
shll
scas
adc
cmp
andl
pop
add
xchg
scas
sarb
repnz
enter
lock
adc
inc
ret
es
and
je
and
or
and
add
scas
cs
mov
ret
sti
pop
dec
inc
jae
inc
movsb
shll
inc
ret
sbb
mov
sahf
sub
fadds
lds
stos
adcl
xorl
xchg
mov
add
in
loop
rorl
nop
and
mov
and
inc
nop
and
mov
lock
pop
mov
add
adc
mov
cmp
es
mov
xor
add
in
jg
push
clc
shlb
inc
cmc
iret
fmuls
cmpsb
es
scas
xchg
or
adcb
adc
pop
repnz
pushl
mov
push
adc
dec
movsl
dec
cmp
push
arpl
mov
and
mov
test
lods
mov
add
xchg
adc
and
negl
shrl
movsb
subb
sbb
mov
push
inc
dec
sbb
fistl
imul
add
mov
and
jnp
and
fwait
add
in
add
inc
mov
movsl
jno
mov
rorb
mov
cmp
sbbb
mov
jl
movsl
add
push
add
fiaddl
mov
into
ja
push
jo
cs
mov
xor
adc
inc
inc
inc
sbb
test
add
dec
cmpl
sbb
mov
fldenv
in
sbb
and
addr16
iret
jle
mov
mov
sbb
pop
or
sub
lret
or
or
pushf
mov
rolb
loopne
or
inc
cmp
ret
and
cmp
in
xchg
test
test
inc
cmp
ds
adc
fwait
subl
rcll
xor
loope
dec
test
push
pop
add
pop
imul
xor
sbbl
xor
imul
movsl
mov
dec
add
xlat
adc
mov
mov
mov
or
xchg
mov
andl
pop
cmc
lcall
mov
in
mov
sbb
xor
xlat
fwait
and
mov
add
testb
sbb
push
adc
sbb
xchg
xchg
rclb
inc
sbb
push
sbbl
mov
xchg
add
outsl
test
sbb
add
cmp
lds
push
adc
scas
pop
dec
movsb
sub
xchg
mov
loop
imul
gs
bound
jge
sbb
inc
loopne
divb
sub
movsl
inc
test
data16
jbe
or
inc
pop
jns
xchg
js
lret
loopne
addr16
xor
stos
cltd
nop
lods
gs
lret
add
sub
ljmp
xor
pusha
insl
add
push
add
dec
inc
addb
push
or
inc
movsb
pop
les
sbb
lds
icebp
fwait
dec
add
hlt
les
dec
push
out
or
push
inc
sbb
xlat
fwait
lods
mov
add
xchg
pop
inc
and
cwtl
xor
add
rolb
pop
jns
push
mov
jno
not
cmpsl
insl
mov
or
add
fildl
imul
and
sahf
ret
add
mov
or
rcrb
mov
inc
repnz
aam
aam
out
add
xlat
test
pop
lods
fdivs
mov
rorl
arpl
movsl
jmp
cld
ret
popa
cmc
fwait
pop
add
and
sbb
in
mov
cmpsb
push
push
push
in
ret
ret
adc
and
push
or
nop/reserved
pop
xchg
xor
pusha
ror
iret
and
outsl
scas
call
inc
pop
xor
mov
cmp
sub
dec
xlat
fwait
cmpsb
and
cmc
mulb
pushl
add
aaa
ret
out
bound
jle
mul
jp
or
add
add
mov
cmc
pop
imull
xchg
add
push
ja
jl
cld
bound
push
sbb
dec
inc
jge
arpl
adc
adc
jb
pop
sbb
sti
icebp
mov
xchg
fsubrp
or
aad
pushf
or
ss
mov
and
pop
push
in
mov
and
xchg
scas
data16
das
or
pop
cmpsb
push
ljmp
scas
dec
and
mov
popa
inc
dec
and
mov
js,pt
sub
dec
repz
cmp
push
xchg
push
shll
sub
mov
fwait
mov
mov
sub
nop
mul
aas
add
popa
xlat
xchg
add
add
iret
mov
fadds
xor
inc
ret
pop
scas
daa
jle
push
jl
add
das
js
cmp
and
or
xchg
or
movsb
mov
pop
lret
or
andb
or
loope
pop
add
cwtl
mov
or
addb
test
xchg
sti
push
lods
mov
scas
fldenv
out
mov
or
pop
test
add
pop
out
ret
pop
mov
pop
sbb
cmpsb
sub
jmp
ljmp
sbb
adc
jo
sti
pop
pop
push
inc
cmp
outsb
inc
outsb
pop
daa
gs
or
ljmp
cmc
gs
adc
dec
andb
movsb
or
mov
jmp
pop
and
inc
sub
dec
std
inc
bsr
shll
scas
inc
inc
sub
xor
cmpb
push
adc
sub
xorb
leave
xchg
mov
jno
popf
cmp
fsubrs
lds
scas
sub
inc
mov
je
xchg
jmp
push
enter
jmp
rorl
mov
add
xor
scas
test
add
ljmp
and
sbb
adc
add
dec
insl
lahf
inc
jns
stos
nop
and
push
jl
add
pushf
jle
lods
mov
jno
lcall
dec
mov
stos
sub
sbbl
or
xor
jge
lret
stos
add
sub
or
jnp
adcb
cs
mov
jo
cmpsb
mov
ret
xor
adc
xchg
add
sbb
movsb
mov
cli
aad
jmp
or
push
pop
movsb
xchg
aas
push
sub
and
lret
stos
lea
test
xchg
or
inc
mov
or
loop
pop
dec
cmpsb
inc
sbb
mov
push
jle
imul
sbb
mov
aaa
loope
mov
mov
jae,pt
lahf
cmc
fstpl
mov
not
xchg
pop
xor
scas
in
mov
movsb
movsl
push
stos
push
in
push
fdivrl
fstps
je
sub
into
sbb
jo
or
sarb
out
and
test
and
cmp
push
xchg
cmp
ljmp
movsl
adc
mov
xor
or
pcmpgtw
lea
punpckhdq
pop
dec
xor
dec
lcall
mov
mov
cmp
sahf
pop
xlat
pop
repz
aaa
pop
and
jbe
xchg
pop
cwtl
lret
sti
fdivrl
rcll
orb
pushf
clc
dec
dec
sbb
or
mov
xor
jnp
mov
sbb
cwtl
mov
flds
mov
addl
ljmp
jno
dec
mov
fldt
xchg
xchg
or
fisubl
testl
das
into
mov
testl
xor
js
mov
hlt
mov
lock
xchg
mov
cmp
mov
or
cmp
push
jge
loope
test
xor
mov
add
addr16
jmp
dec
sub
stos
add
out
rclb
iret
insb
sub
lods
and
jno
or
mov
push
push
inc
pusha
nop
push
jg
pop
cmc
incl
js
jle
mov
or
sbb
xchg
test
fisttpl
lahf
xor
push
mov
push
fsubs
and
mov
push
add
in
adcl
ds
test
add
and
fistpll
dec
popf
mov
notl
lret
daa
lds
mov
popa
jge
pop
push
out
add
add
jmp
jo
flds
or
test
inc
addr16
bound
jno
gs
xchg
mov
scas
out
insl
pop
push
and
sbb
or
shll
lret
fs
inc
cwtl
or
movsl
xor
fwait
and
addr16
ljmp
aas
dec
mov
fidivrl
rolb
push
adc
dec
es
out
xchg
inc
repnz
xchg
fs
jecxz
cmpsb
in
stc
pop
mov
in
repnz
fstl
cwtl
lods
cmp
add
adc
fwait
inc
mov
fidivrl
ret
fldenv
jbe
or
jnp
xrelease
andb
cmp
lcall
push
or
mov
fildll
sbb
popf
or
negl
js
pop
repz
mov
fsubrl
ds
jae
xchg
xchg
sbb
dec
sbb
sbb
imul
imulb
mov
mov
cmp
dec
cmpsb
imul
adc
outsl
pop
adc
js
inc
lret
testl
test
bound
leave
lret
arpl
icebp
ret
enter
outsb
and
cltd
in
aaa
sub
js
or
jecxz
cld
xorl
cmp
sbb
xor
leave
imul
mov
xchg
add
repz
movb
cmp
scas
and
dec
fwait
inc
test
mull
rolb
jmp
out
and
movsl
mov
loop
push
jae
imul
sbb
lock
scas
dec
stos
int3
mov
push
ss
and
stos
adc
dec
stc
jp
fcmove
inc
mov
scas
lock
repz
mov
outsl
push
mov
inc
jge
and
in
push
std
pop
lods
leave
pop
sarb
mov
mov
adc
dec
subb
das
mov
jb
test
cmp
ja
or
outsb
je
scas
sbbb
dec
sbb
xchg
cmc
loop
sbb
lahf
insl
xchg
sub
dec
adc
loopne
lahf
movsb
sbb
jmp
sahf
int
pop
mov
sub
in
dec
aaa
mov
xchg
pop
loope
nop
cmc
mov
jmp
jecxz
pop
cltd
mov
int
cs
add
enter
xor
dec
aam
mov
bound
mov
pop
enter
and
sub
jb
push
test
mov
leave
inc
cmp
idivl
popa
jno
popa
inc
or
dec
aas
push
es
and
push
inc
sbb
xor
pop
int
or
mov
fwait
cwtl
jmp
cwtl
dec
imul
cmc
mov
cwtl
out
jne
or
arpl
pop
or
leave
or
mov
xor
add
cmp
shrb
cmp
mov
jno
jmp
push
pop
mov
fisttpl
pop
scas
mov
push
cmp
mov
xor
imul
mov
xor
jle
dec
std
mov
sub
or
ret
mov
dec
push
gs
orb
sbb
lcall
out
mov
fldz
push
or
nop
adcl
scas
adc
jno
jbe
jo
sti
pop
insb
dec
mov
dec
mov
add
andl
scas
int3
inc
sub
mov
enter
sbb
jnp
jge
add
ljmp
cmp
cmpsb
movsb
mov
cltd
dec
dec
jmp
movsb
addb
and
pop
jmp
inc
bound
fstps
leave
mov
xchg
dec
ljmp
and
mov
rcr
out
cmpl
mov
pop
in
rcl
int3
lea
test
mov
aad
pop
add
and
mov
fs
lods
arpl
jle
test
in
adc
jg
push
pop
std
repnz
adc
loop
adc
jno
das
pusha
and
in
insb
jo
call
les
repnz
xor
stos
push
in
adcb
and
jnp
dec
push
xor
mov
add
mov
and
mov
lret
mov
push
lret
adc
pop
jmp
pop
mov
xor
xor
data16
jno
dec
sub
cmpsb
mov
inc
jno
mov
mov
sbb
mov
add
ffreep
mov
add
sub
in
lcall
pop
stc
in
movsb
or
ljmp
and
gs
andb
inc
mov
mov
add
addr16
mov
js
mov
jae
lret
test
mov
xlat
jmp
lret
sbb
inc
or
lds
cmp
mov
mov
repnz
push
adcl
insl
adc
jb
fbstp
adc
pushfw
mov
mov
leave
jnp
pushf
mov
data16
xor
inc
jmp
lret
iret
aam
pushf
xchg
cmp
nop
loop
add
js
adc
dec
ret
cmp
jb
adcb
adc
adc
fdivrp
cmpb
outsb
and
int3
aam
add
push
call
push
dec
push
inc
sbb
arpl
mov
pop
mov
sbb
mov
push
loope
and
add
sbb
or
mov
xchg
dec
iret
lret
leave
ret
cmp
addb
sbb
mov
movsb
xor
mov
popf
sbb
cmpsb
or
xor
or
xor
jmp
mov
mov
mov
sbb
push
and
movsb
xchg
insb
xlat
adc
in
mov
movsb
cwtl
xchg
and
mov
cmp
mov
shrb
decb
out
out
clc
xchg
or
jmp
add
cmp
jmp
jo
faddl
scas
fnstsw
stos
or
ljmp
in
jnp
mov
imul
adc
sbb
lods
inc
inc
or
xchg
test
xchg
and
daa
test
loope
pop
pushf
bound
sbb
leave
das
pusha
push
cmp
jno
lahf
or
in
test
stos
add
sbb
push
rolb
jb
cmp
insb
test
and
and
push
mov
in
adc
adcb
dec
adc
dec
push
push
or
inc
mov
shrb
adc
sbb
and
push
mov
bound
jg
les
mov
inc
jns
jae
nop
jmp
sbb
inc
pop
jns
cmpl
lret
jg
lret
stos
movb
cli
movsb
mov
loope
or
aad
add
mov
push
negl
add
mov
add
adc
pop
sbb
sub
mov
cmp
rclb
test
aas
test
xor
inc
and
popa
mov
cmpsl
inc
test
or
jmp
rclb
mov
jb
nop
les
movsl
dec
ficoms
insb
xor
mov
jne
popf
adc
ret
cmp
sarl
add
aam
scas
ljmp
lock
dec
scas
ds
lock
jno
ss
test
stos
pop
sbb
stos
dec
mov
lcall
loop
insb
jmp
add
shrb
mov
int
dec
mov
stos
mov
mov
sbb
xchg
insl
xchg
add
mov
cli
sbb
nop
pop
mov
ret
push
rorl
lods
cmp
pop
movsl
iret
add
mov
lds
add
jmp
incb
orb
mov
add
xor
lcall
push
orl
xor
mov
inc
or
jl
push
pop
mov
sbb
jo
std
cltd
push
jb
jno
lcall
aas
sbb
jg
sbb
popf
sbb
xor
mov
test
pushf
inc
dec
push
loop
add
jl
std
xor
testb
xor
fldenv
loope
add
in
pop
pop
jle
daa
negb
xor
inc
arpl
sbb
lret
cltd
mov
mov
out
xchg
mov
mov
mov
sub
pop
push
mov
rclb
add
loopne
incl
sahf
movsl
xchg
cmp
fisttps
dec
loopne
jo
lret
xchg
or
and
lods
dec
cs
mov
out
mov
cltd
pop
aad
pop
add
loope
xor
mov
stos
int3
mov
push
nop
xlat
addr16
add
or
add
popf
push
scas
test
dec
repnz
jmp
cmp
loop
jmp
add
or
add
xchg
je
adc
adc
mov
or
lret
stos
jo
shrb
or
and
popa
clc
mov
sbb
xor
mov
scas
inc
xchg
aaa
popf
test
outsb
ficoml
movsl
add
mov
test
lds
test
arpl
in
dec
mov
scas
or
movhps
test
leave
pop
inc
add
les
in
jmp
ja
addr16
roll
test
sbb
in
push
divl
pop
mov
jle
enter
mov
dec
stos
dec
inc
out
pop
dec
sub
mov
lahf
arpl
scas
int3
pop
mov
cmp
sbb
xor
in
jne
jmp
outsb
xchg
fs
push
add
fnstenv
sarl
jmp
movsb
lret
jle
dec
or
xchg
dec
jbe
mov
and
bound
adc
dec
out
add
imul
push
or
subl
imul
test
movsb
push
xadd
inc
mov
test
jno
sbb
push
mov
inc
mov
addb
add
mov
dec
or
mov
xor
lds
inc
add
xchg
fwait
bndldx
loope
ss
fsubrs
loop
xchg
scas
movsl
orb
push
adc
push
xchg
xchg
jl
cwtl
imul
scas
jg
cmp
scas
jbe
cmp
lods
popa
and
mov
mov
inc
sub
es
mov
jg
ficomps
xor
push
aad
sub
and
repz
and
sub
dec
popa
jb
test
inc
rclb
xchg
mov
or
cltd
int
jb
and
inc
push
push
inc
ss
or
jmp
out
imul
inc
or
mov
scas
or
bound
fs
sub
or
adc
xor
addb
adc
inc
inc
repz
out
and
sti
xor
mov
adc
or
adc
cmp
nop
sub
adc
dec
dec
repnz
roll
sbb
push
or
mov
mov
fisttpll
push
rcl
jns
les
jns
andb
test
xor
xor
shll
loop
and
and
pop
sub
mov
sbb
jo
inc
icebp
icebp
add
and
and
adc
push
mov
push
or
mov
dec
mov
pop
mov
scas
sub
mov
adcb
lret
inc
imul
mov
dec
jns
out
in
push
popf
mov
dec
loop
adc
fsubs
lahf
pop
test
loop
loop
popf
sub
push
xchg
adc
nop
mov
data16
rcl
dec
call
push
sub
fists
sub
cmp
outsb
sub
fcmovne
inc
dec
inc
lret
adc
jbe
adcb
mov
mov
mov
lds
dec
mov
lahf
and
add
clc
into
popa
pushf
inc
cltd
lds
outsb
mov
mov
adc
test
add
add
movsb
sbb
cmp
in
sub
xchg
mov
jg
movsl
cs
cmc
or
and
enter
int3
cmpsl
in
inc
inc
addl
or
dec
ja
fsincos
insb
out
cmp
push
adc
push
pusha
xor
push
add
jne
jl
pushf
jmp
hlt
into
push
pop
dec
adc
xchg
stos
xchg
or
out
add
shlb
mov
arpl
loope
cmp
dec
dec
es
push
jns
push
bound
dec
inc
enter
cmc
shlb
mov
hlt
hlt
out
push
push
insl
shlb
scas
sub
sub
sarb
sbb
in
xor
loop
sbb
icebp
inc
enter
stos
push
hlt
in
sbb
and
es
popf
in
mov
sbb
jp
inc
push
call
inc
fstl
mov
movsb
stc
sti
mov
sub
mov
inc
sarl
mov
wrmsr
jno
add
jmp
dec
lret
jecxz
cmp
inc
imul
xlat
stos
push
xchg
js
xchg
cmp
xchg
popa
or
ljmp
lret
outsl
and
inc
jle
jecxz
lds
out
orb
andl
cli
pop
andl
mov
mov
cmp
stc
jbe
test
fidivrs
ds
push
jge
push
mov
mov
dec
jecxz
xor
mov
push
adc
stos
dec
mov
lods
idivl
jnp
rolb
mov
test
lahf
comiss
movsl
pushf
pop
mov
or
lcall
mov
or
jl
out
xor
rcrb
jge
add
repnz
aad
shll
scas
push
push
xchg
popf
adc
pusha
in
fstps
dec
nop
sbb
push
mull
rcrl
xchg
add
mov
mov
mov
adc
divl
fistps
aam
cmp
jge
push
sbb
push
inc
in
icebp
jmp
stos
jne
ret
in
adcb
fs
cmp
or
mov
scas
into
out
outsb
adc
out
orl
inc
je
aas
shl
adc
aaa
rolb
lods
movsb
dec
adc
dec
dec
and
sbbb
xor
pop
and
mov
fcoml
xor
sub
pop
pop
adc
mov
test
push
push
inc
inc
mov
addr16
hlt
loop
outsl
and
jmp
mov
popl
inc
iret
pusha
mov
xchg
push
out
lods
fsubrs
mov
inc
mov
push
lds
leave
push
fsubr
cs
mov
inc
xchg
push
cmp
sbb
ret
test
scas
jbe
mov
test
mov
mov
sti
sbb
loope
and
mov
ja
lds
adc
inc
mov
jo
pusha
ljmp
stc
sbb
or
pop
enter
adc
sbb
pop
jge
popa
int3
mov
addl
pop
mov
mov
pushf
mov
test
inc
push
adc
xchg
inc
cltd
jmp
or
mov
xor
push
mov
loopne
dec
mov
xor
mov
mov
enter
int3
fsubrl
inc
loopne
in
and
call
fdivr
dec
mov
rorb
mov
pusha
jno
or
fdivrs
andl
fbld
mov
cmp
xchg
inc
outsb
scas
jnp
pushf
andl
bound
inc
addl
push
sbb
imul
push
cld
xchg
and
cmp
add
repnz
aad
mov
xor
test
push
mov
push
repz
xor
mov
pop
stos
sahf
cltd
pusha
push
jecxz
add
mov
adc
xchg
ja
xchg
je
mov
loope
and
push
mov
rclb
xor
pop
xchg
negl
and
loop
mov
add
shll
jae
arpl
and
adc
dec
add
push
jo
nop
test
and
fistps
aas
sbb
nop
in
fs
pop
or
loopne
inc
popa
add
das
testl
dec
sahf
adc
insb
jl
pop
xchg
add
ret
xchg
dec
jns
test
testb
jnp
loop
cmp
dec
cmp
aaa
sub
in
jbe
dec
lahf
or
fbstp
outsw
loop
cwtl
nop
sbb
and
arpl
add
dec
mov
and
sbbl
inc
mov
or
leave
out
mov
fiadds
mov
jmp
add
test
cs
lods
jno
sub
aam
iret
dec
and
lea
jb
add
xor
pop
leave
adc
pop
adc
jg
adc
cmp
inc
inc
js
rolb
daa
mov
dec
test
and
cmp
xchg
imul
sbb
out
lret
mov
sbb
xchg
sub
add
cmpsl
in
fidivrs
pop
inc
sub
inc
xchg
add
xor
mov
xchg
sbb
push
stos
outsl
movsl
inc
in
es
ds
cmpsl
inc
xchg
add
adc
cli
iret
push
dec
mov
xor
inc
add
ja
sbb
push
andb
mov
mov
add
mov
and
imul
pop
add
mov
cmp
std
lahf
push
xor
pop
addr16
mov
out
inc
xchg
gs
cmp
pop
sbb
push
dec
dec
pop
adc
imul
test
jge
fs
sub
leave
bound
ret
mov
push
bnd
pop
adc
outsb
xor
mov
sbb
pop
addr16
in
in
clc
pop
sar
sbb
arpl
jnp
adc
test
dec
ljmp
fisttps
adc
xor
sbb
ja
sub
insl
mov
push
andb
add
loop
sbb
mov
in
faddl
bound
mov
cld
xchg
repnz
inc
je
fcmovnb
outsl
stc
add
pop
insb
push
pop
adc
adc
dec
jl
fadds
movsl
jno
sub
dec
ret
test
mov
std
je
pop
loop
outsb
negb
sbb
repz
cmpsl
mov
cli
adc
popa
pop
repnz
inc
cmc
scas
pop
push
ljmp
adc
pushf
push
adc
inc
jg
stos
enter
dec
pusha
cmp
fcmovnbe
mov
pop
mov
inc
lret
add
aaa
leave
and
dec
push
cmp
cli
sbb
mov
jno
cmp
mov
inc
add
sub
stos
out
repnz
pop
inc
jmp
jbe
jmp
dec
mov
xor
movsb
add
jo
add
mov
iret
push
lcall
and
inc
jne
lret
mov
rorb
fs
hlt
fwait
push
les
and
inc
pop
int3
in
adc
add
shl
popf
test
pop
movsb
cmpl
cmp
mov
sbb
movsb
sub
fucom
aas
push
repnz
push
xchg
subb
add
push
dec
inc
sub
fdivrl
nop
jne
stos
jg
fwait
xor
sbb
dec
adc
js
stos
js
jmp
jp
dec
add
add
sbbb
call
push
das
loop
test
pop
xchg
inc
mov
clc
xor
and
push
nop
adc
fistpll
pop
in
adc
ljmp
xor
inc
cmp
cmp
ret
xchg
mov
clc
adc
jo
inc
inc
pop
jo
push
xor
mov
xchg
shl
xor
xchg
fs
sbb
mov
in
lret
sbb
imul
nop
outsb
daa
add
fiaddl
or
sub
popa
jae
stos
pushf
rcrb
xor
popa
aam
arpl
dec
add
test
pop
movsl
lahf
aad
bound
push
add
add
and
xor
mov
sbb
jnp
iret
add
nop
mov
loop
popa
lods
adc
outsb
jmp
xor
dec
mov
inc
cs
out
dec
fs
jo
push
xchg
push
enter
xorl
mov
jbe
mov
inc
out
inc
adc
mov
sub
les
ljmp
and
and
sahf
stos
sahf
cltd
mov
inc
sbb
fadd
in
or
orl
pusha
stos
pop
xor
add
imul
popf
cltd
add
pusha
cmp
sbb
sbb
xchg
lods
into
call
sub
add
push
sbb
xchg
sbb
sub
sbb
mov
mov
xor
es
test
lock
mov
adc
xor
add
or
sahf
int3
cld
mov
mov
cmp
add
sub
js
sbb
scas
xchg
pop
cmp
out
and
enter
or
add
cmpl
inc
add
jecxz
adc
aam
test
lahf
jg
out
lahf
jge
iret
mov
fdivl
das
or
scas
mov
jge
fsubrs
syscall
push
add
add
daa
sbb
outsb
mov
pand
add
sbb
mov
and
jmp
stos
bound
inc
push
out
into
inc
test
push
sub
fwait
rclb
ret
push
adc
or
or
adc
sbb
shrb
pop
adcb
pushf
fsts
sahf
sbb
sbb
jbe
add
add
or
repnz
push
mov
xor
movsb
add
sub
int3
sahf
sbb
mov
out
inc
in
push
fdivl
push
pop
dec
dec
mov
lret
fcmovne
shlb
pop
xor
add
sub
mov
push
adcl
outsl
jo
or
fdivs
sbb
jo
inc
xor
add
out
testl
lret
lds
cmp
cmp
sub
jns
adc
imul
push
sub
add
sub
add
jo
lahf
test
ljmp
pop
gs
or
jmp
jb
pop
loop
inc
sbb
outsb
mov
fcoml
push
cmc
incb
dec
mov
jle
adc
xor
push
pop
sbb
sub
fisubl
or
mov
js
or
fimuls
imul
sahf
aas
clc
sbb
iret
in
add
add
inc
or
dec
cmp
aas
push
xchg
scas
popa
scas
mov
dec
nop
cmp
jb
icebp
inc
sbb
inc
jno
pop
loopew
mov
push
jg
or
sub
out
mov
shrb
lahf
lds
add
and
or
inc
and
iret
test
pop
ds
shlb
neg
mov
inc
add
lret
add
outsl
push
repz
or
scas
adc
xor
and
jp
lret
stos
mov
push
scas
and
xor
or
shlb
inc
or
pop
inc
mov
adc
jae
sub
int
xor
fwait
in
cmp
inc
and
mov
xlat
ret
or
mov
push
or
mov
shlb
dec
sub
xor
sbb
jp
cli
lret
lock
mov
push
push
stos
and
adc
fcmove
out
lods
scas
loopne
mov
inc
jge
in
int
sbb
hlt
repz
jmp
or
jno
ljmp
mov
in
iret
loopne
pop
loopne
insb
inc
in
mov
popa
xor
cli
adc
and
nop
dec
and
adc
std
mov
les
mov
loopne
xor
loop
mov
dec
faddp
xor
adc
and
sbb
adc
push
repz
xorl
and
sbb
mov
lahf
or
xor
sub
jg
or
adc
repnz
fbld
push
push
loopne
sbb
xor
dec
dec
and
sbb
orl
pop
dec
scas
inc
lcall
push
or
enter
fs
or
ret
add
andl
inc
mov
or
test
call
dec
mov
mov
dec
js
cmp
hlt
push
fisubl
sbb
inc
sbb
sbb
adc
out
loope
fwait
xor
push
mov
fdivrs
adc
push
xor
gs
ret
inc
sbb
pop
cmp
or
in
scas
inc
jge
push
test
int
push
popf
mov
enter
adcb
jge
mov
mov
mov
add
inc
add
jns
push
xor
jle
mov
inc
fwait
mov
lcall
or
xor
mov
add
imul
jecxz
cmp
or
fstpt
dec
jecxz
ret
adc
hlt
mov
xchg
dec
sti
cmp
and
popf
cs
andl
fisttps
lcall
dec
pop
or
mov
sbb
lret
cmpsb
push
xlat
fidivrs
pop
les
inc
pop
and
cmp
dec
cmpsl
adc
jge,pt
add
push
iret
lret
test
or
mov
sbb
sbb
in
jbe
jae
int
push
repnz
mov
mov
mov
inc
adc
sub
outsb
cmpb
into
add
mov
jb
js
inc
or
sub
call
push
addl
inc
hlt
lods
fsubrs
cli
mov
xchg
jge
sbb
or
sub
in
mov
cld
pop
add
inc
jno
cmp
jl
mov
push
popa
movsb
or
add
xchg
movsb
outsl
push
call
outsl
push
xor
add
cmp
or
testl
imul
add
pop
sub
push
xchg
or
sarb
xor
or
dec
or
jge
add
jmp
jbe
cmpsb
cli
lods
sbb
lods
mov
jmp
mov
push
mov
jg
jecxz
sbb
loopne
cmp
sbb
inc
mov
roll
jmp
xchg
out
or
and
push
insb
outsb
and
inc
movsb
xor
xchg
mov
mov
inc
inc
mov
test
push
add
jge
out
mov
addr16
push
xchg
xchg
adcl
popa
scas
xor
mov
adc
dec
xchg
pop
fstps
add
jnp
fbstp
inc
mov
in
xor
inc
inc
leave
or
movsb
mov
cmp
fwait
dec
hlt
or
out
xchg
or
cmp
inc
bound
pushf
jnp
jg
and
outsb
add
jnp
nop
cmp
or
inc
daa
out
cmp
sbb
in
xor
daa
cmpsl
jecxz
dec
jmp
pop
iret
jle
push
mov
inc
inc
movsl
cmp
sbb
inc
lds
xor
xor
and
mov
loopne
sbb
mov
jae
mov
jl
and
and
repz
jecxz
inc
mov
scas
add
and
push
or
push
cmp
pop
mov
rclb
inc
iret
cltd
or
dec
inc
test
arpl
mov
lods
ja
mov
in
loope
pop
roll
das
ja
popf
adc
sub
ret
cmp
in
inc
test
and
pop
aaa
in
lea
push
jmp
stc
in
ljmp
mov
mov
dec
aad
xchg
dec
mov
push
sbb
movsb
mov
push
jg
jne
mov
mov
jecxz
icebp
test
cmp
xchg
add
inc
scas
xchg
jno
mov
stc
pop
dec
scas
pop
mov
xor
sarl
js
das
and
ds
leave
pop
sti
adc
ljmp
mov
test
push
fs
not
gs
and
push
sbb
sbb
xchg
hlt
icebp
dec
xchg
data16
int3
mov
scas
aaa
leave
jbe
dec
lds
sbbb
jmp
js
subb
inc
sbbb
lds
xor
sti
cld
or
adc
fimuls
adc
fmul
repnz
dec
mov
push
pop
mov
and
or
xor
cmp
jo
ljmp
jmp
jge
or
sub
xchg
call
or
xor
loopne
scas
and
iret
js
incb
add
fst
cmpsl
std
mov
mov
cld
or
cmp
add
ljmp
xorb
js
sbb
xchg
adc
fs
add
jge
movd
ffree
or
sub
jo
inc
adc
push
inc
mov
mov
pop
rcrl
lock
scas
mov
shlb
jge
pop
js
dec
out
or
iret
jbe
lock
push
addl
lea
loop
or
jp
cmpsl
push
push
mov
mov
je
add
adc
or
mov
jns
inc
add
adc
push
jl
mov
orl
xor
pop
jmp
addr16
mov
sub
lea
add
adcl
scas
inc
loopne
sbbl
imul
mov
add
pop
pushf
inc
addr16
fnstsw
nop
or
pop
shll
aam
in
ds
lret
add
pop
pop
les
enter
outsb
insb
push
int
insb
push
lret
xorl
stc
add
sbb
add
sahf
and
addl
in
mov
cmp
mov
fwait
fwait
subb
sub
mov
addb
mov
test
test
sub
popf
xchg
adc
jle
xchg
std
or
fimuls
repnz
pusha
faddl
cs
sub
and
das
xor
fistpll
mov
les
and
lret
data16
fwait
lret
ja
lret
mov
and
repnz
inc
jo
or
pop
gs
stc
std
xor
mov
dec
fisubrs
xor
add
xchg
aaa
sbb
dec
inc
cltd
fwait
pop
xorl
daa
ja
sub
sahf
lods
je
scas
jae
xor
sbb
dec
sbb
mov
aaa
xlat
xchg
fs
adcb
cmpb
test
jmp
xlat
and
sbb
mov
or
clc
out
sbb
shr
lea
jl
movsb
add
pop
sbb
sbb
xchg
push
mov
xorb
test
cmp
cltd
fcomps
jne
push
jne
sub
add
pop
loope
sahf
dec
push
xchg
cmpsb
sbb
out
mov
gs
or
push
adc
repnz
jmp
xlat
dec
xor
cwtl
enter
inc
subl
sbb
sbb
sbb
mov
xchg
iret
stc
pop
jg
aad
xchg
add
xchg
test
aaa
push
pop
pop
inc
lea
inc
clc
and
pop
cmp
dec
xor
add
sbb
pop
xchg
idivl
sbb
daa
xchg
inc
sbb
dec
add
pop
or
sbb
loop
mov
jg
add
aaa
and
daa
es
or
sahf
pop
outsb
jbe
sub
cli
imul
pushf
or
ret
add
sbb
pop
loopne
and
fsubrs
jae
lret
std
adc
loop
addr16
mov
mov
ret
pusha
mov
test
scas
mov
pop
sti
pusha
jno
add
nop
lahf
cld
mov
or
addr16
roll
dec
in
adc
cmp
shl
sub
mov
or
adc
xor
lret
clc
pop
in
or
pop
ss
inc
pop
rcr
mulb
orb
cmpsl
loop
pushf
and
xor
mov
jg
dec
dec
divb
and
pop
icebp
xchg
mov
push
add
inc
adc
push
incl
dec
pushf
mov
or
push
jo
pop
cmp
pop
sbb
and
test
or
xor
ja
or
inc
arpl
mov
xchg
adc
subl
cmc
mov
jo
addb
rorb
add
into
loop
out
outsb
bound
sbb
adc
lock
adc
enter
xchg
inc
int3
jg
or
dec
enter
add
mov
push
adc
and
sub
push
cmpb
xor
int
mov
and
pmulhw
jp
jae
dec
add
movsb
movsb
mov
js
add
or
sbb
mov
popa
cmp
adc
pop
aaa
dec
sub
ds
cmp
bound
popf
mov
mov
je
or
or
fdiv
mov
xor
cld
jbe
cmp
and
dec
test
jg
sub
mov
push
stc
add
and
in
or
mov
mov
daa
cmp
cmp
inc
push
gs
leave
lahf
popa
cmp
jno
sti
cltd
jbe
les
pushf
ljmp
pop
int
inc
push
subl
out
jle
bound
dec
adc
clc
mov
cmp
dec
scas
mov
inc
adc
in
out
loope
inc
test
inc
inc
mov
stos
xor
addb
xor
in
push
andl
xor
and
sbb
in
jbe
mov
les
dec
inc
inc
movsb
call
add
mov
sbb
mov
mull
xchg
out
jb
jle
inc
add
fsubr
xlat
add
cmp
mov
push
cltd
pop
stos
inc
fs
mov
cmpsb
or
dec
add
push
push
jle
jne
inc
mov
xorb
xor
fbld
aas
push
or
stos
pusha
test
pop
out
gs
add
pop
mov
or
mov
push
mov
fwait
movsw
jg
dec
stos
lea
ljmp
push
cmp
dec
sbb
jle
xchg
and
pop
fcmovu
inc
int3
dec
aad
dec
outsl
popf
adc
imul
dec
inc
or
mov
pop
lcall
mov
add
in
dec
cmpl
lock
into
lret
stos
push
push
insb
inc
cmp
jmp
sbb
dec
adc
movsl
xlat
mov
mov
push
xor
leave
pop
aaa
bound
imul
push
je
or
loopne
into
dec
jle
addb
outsl
bound
sbb
dec
fisubl
cmp
dec
pop
mov
push
loopne
stos
rclb
imul
cmp
out
xchg
lock
xor
inc
in
scas
stc
sbb
sub
in
imul
and
add
xor
imul
pop
scas
inc
loopne
adc
fmull
imul
out
sbbb
subl
repz
xchg
sub
in
fwait
add
int
jb
inc
scas
adcl
fisubrs
cmp
xchg
push
out
adc
add
arpl
outsl
fadds
mov
pushf
mov
das
xchg
sub
cmp
sub
mov
dec
xor
push
clc
dec
and
out
out
or
call
push
or
fbstp
iret
mov
push
stos
incb
lcall
into
xor
pop
push
lock
push
icebp
adc
adc
lock
stos
xchg
jg
adc
or
fistpll
mov
ret
sub
mov
test
mov
dec
movsl
sti
inc
pop
lcall
faddl
adc
scas
jnp
xchg
fisttps
xchg
nop
test
cmpl
add
push
loopne
lahf
cld
andb
hlt
push
push
in
pop
mov
xor
test
xor
mov
jge
sub
ss
push
xor
ret
and
add
add
gs
iret
arpl
arpl
xor
add
imul
xchg
mov
test
inc
mov
fwait
fldcw
cmp
lcall
pop
sbb
and
and
sbb
jg
dec
or
mov
jb
adc
sbb
adc
xor
lock
imul
sub
jl
add
inc
sahf
lds
leave
sub
test
add
push
les
fs
jmp
sub
sbb
mov
test
push
in
rorb
dec
add
push
push
inc
mov
pop
xchg
lret
add
and
push
add
enter
jne
pop
xchg
push
push
iret
mov
mov
and
xchg
pusha
sbb
jecxz
sahf
loope
nop
xchg
psllq
cmpsb
shll
lahf
andl
or
idivl
dec
iret
test
mov
movsb
incb
xchg
sub
movsl
inc
pusha
or
xchg
std
shr
mov
or
jb
stos
or
inc
mov
mov
adc
add
push
xchg
inc
lcall
xchg
imul
push
inc
or
rorb
andl
sub
or
test
add
add
subb
mov
scas
inc
rolb
mov
inc
inc
push
dec
bound
into
adc
lods
pusha
add
loope
pop
inc
je
xchg
sub
mov
ds
fisttpl
sub
nop
xor
lret
mov
xchg
pusha
fcmovnbe
push
pop
and
fstpt
mov
mov
cmp
xor
lret
dec
pop
leave
xchg
lahf
adc
fmuls
movsb
stc
fisubl
sahf
repnz
push
push
mov
hlt
lods
movsb
mov
movsl
add
les
mov
or
inc
push
jge
cs
fbld
jmp
xor
mov
jmp
jno
fcomp
mov
mov
xor
add
inc
stos
or
lcall
cmpb
jns
sub
xchg
stos
adc
negl
leave
jns
rolb
dec
in
cli
mov
add
or
std
or
repnz
popf
pushf
test
cmp
roll
dec
lea
jmp
xor
mov
sbb
push
xor
add
lods
ret
out
pop
xchg
stos
cli
inc
hlt
test
push
xor
insb
lcall
popa
lcall
test
xor
dec
and
cmp
push
xor
pop
and
imul
mov
add
add
inc
adc
rcll
clc
inc
and
cmp
xor
repz
adc
data16
ss
sbb
cld
call
jmp
rclb
fmull
jecxz
add
cmpl
gs
lea
sub
xor
fidivrs
int
fists
nop
pop
sbb
mov
out
jg
pop
jle
sbbl
popa
cmp
mov
daa
outsl
or
mov
out
push
or
sbb
outsb
sbb
jp
cmpsb
mov
xor
push
test
ljmp
pop
mov
leave
cmc
sbb
gs
leave
mov
scas
xchg
jne
sbb
sti
rorb
adc
iret
rol
pop
inc
mov
sub
push
movsl
js
push
hlt
xchg
aas
lock
repnz
shrl
or
movsb
sub
sbb
pop
sub
fisubrs
std
xchg
fmuls
sub
mov
sub
lds
and
jmp
pop
mov
lret
push
adc
sbb
pusha
push
push
rolb
mov
repnz
in
mov
push
loope
cmp
fdivs
cmpsb
add
pusha
jp
std
in
jle
mov
outsl
cmpsb
xchg
xchg
and
lret
xor
pop
int
sub
scas
andl
jle
pop
test
mov
inc
add
jbe
inc
or
aad
add
xchg
outsl
xor
jg
ret
popa
enter
dec
fs
cmp
imul
push
mov
inc
xchg
sbb
or
xchg
ror
sbb
mov
sbb
jno
lea
jno
and
pop
and
pop
sbb
add
or
sbb
lea
popl
mov
or
or
xchg
sbb
rclb
sub
loopne
fbld
mov
or
xlat
insb
int3
add
out
cmp
add
inc
ljmp
repz
xor
fmuls
and
xor
imul
push
aam
test
pop
inc
insl
or
push
mov
fs
mov
sbb
aad
mov
inc
cmpsb
push
xor
pop
fdivp
stos
pop
insl
xor
add
data16
imul
mov
inc
adc
add
xor
inc
xchg
dec
dec
lock
adc
test
aad
add
imulb
mov
and
fldz
cmpb
aad
pop
test
test
sbb
icebp
test
addr16
sbb
inc
pushf
loope
jo
jno
insl
add
xchg
or
xor
fstps
sbb
popf
adc
dec
jne
popa
call
call
jnp
jno
or
sbb
push
dec
cmp
lahf
cltd
fadd
lahf
inc
popf
dec
add
sub
cmp
push
mov
mov
loopne
nop
and
dec
inc
and
and
mov
mov
cmp
mov
int3
sub
push
inc
loopne
mov
xchg
inc
and
cltd
pop
mov
cld
add
mov
pop
out
neg
jnp
inc
dec
aaa
push
pop
ret
sub
fwait
cwtl
bound
sbb
jno
mov
dec
ljmp
xchg
dec
arpl
push
push
push
dec
scas
subl
int3
mov
and
inc
jge
or
push
and
and
push
imul
cmp
hlt
add
mov
ljmp
push
in
scas
cmp
clc
pop
jo
popl
sub
pop
cld
stos
cmp
pop
and
jle
cmc
bnd
nop
adcl
ljmp
mov
jge
ds
xlat
and
mov
aaa
dec
cwtl
in
subl
addr16
mov
ljmp
xchg
icebp
jo
js
sbb
add
sbb
push
pop
sarb
loopne
aad
pop
es
lcall
dec
or
popa
loope
nop
dec
rolb
popa
pop
push
test
sub
loope
push
hlt
sbb
scas
in
cli
inc
clc
popa
cmp
dec
inc
lock
loope
sahf
xchg
outsl
pop
mov
iret
mov
dec
jno
sub
adc
adc
cmp
call
ror
sbb
mov
icebp
sbb
fiadds
das
ja
out
cmp
pushf
mov
cmp
cmp
insb
push
inc
adc
rolb
lods
push
stos
pusha
pop
push
jno
add
loope
push
scas
or
adc
mov
inc
mov
or
push
pop
hlt
push
and
rcrb
dec
lock
dec
fiaddl
sub
adc
adc
test
or
xchg
xor
icebp
insb
ja
xorb
adc
aas
orl
adc
fimull
sbb
adcb
xor
mov
jne
jge
or
sub
or
cmp
out
jecxz
roll
dec
mov
pop
and
add
stos
shlb
or
repz
cli
pop
sbbb
sbb
cmp
test
bnd
imul
or
cli
sbb
sbb
lds
pop
push
fnstenv
icebp
mov
sbb
faddp
sarb
xor
in
jne
pop
fbld
pop
or
push
dec
mov
pop
cwtl
test
mov
xacquire
sbb
mov
rdmsr
xchg
insb
mov
loop
xchg
std
mov
fiaddl
fwait
dec
add
sbb
adc
or
pop
pusha
sbb
pop
scas
adc
xchg
xor
mov
cltd
jecxz
pushf
in
shlb
add
outsb
das
mov
and
lea
xchg
in
xchg
ror
test
xchg
and
fsubp
pop
pushf
fldenv
lods
inc
cmp
dec
negb
outsl
sub
dec
mov
sbb
lahf
xchg
inc
out
xchg
cmp
addl
xchg
int
xchg
adc
dec
adc
ret
mov
lea
test
xchg
xor
sub
mov
adc
leave
addb
pushf
sbb
mov
sub
sbb
push
lock
int
lcall
fistps
adc
ret
bound
xlat
sub
dec
pop
lret
pop
mov
xchg
cmpsb
movsb
push
jnp
xor
mov
and
xor
ret
in
fadds
sub
dec
test
cmp
aad
or
loope
and
add
adc
inc
push
push
stc
aaa
vrsqrtss
push
idivl
test
mov
mov
negl
mov
or
clc
mov
mov
mov
push
pushf
adc
or
add
and
push
jb
pushf
inc
xchg
add
add
inc
in
daa
movsb
lds
xchg
cmpsb
add
addb
cmp
lods
dec
mov
xchg
mov
push
sub
add
test
and
and
jno
cmp
loope
pop
loop
ja
cmpsl
pop
icebp
sub
mov
jmp
cs
vshufps
inc
popa
push
cli
push
fisubl
je
sbbb
mov
rcrb
jmp
aas
xacquire
pop
stc
ficoml
jne
loope
dec
xchg
ret
push
pop
push
loope
push
mov
sbb
movsb
inc
sub
adc
add
add
popf
xchg
xor
fdivr
xor
lods
sub
jo
enter
jmp
jno
inc
fldcw
push
xor
repnz
lret
pusha
pop
mov
sbb
loope
data16
ficomps
inc
lret
cmp
jecxz
xchg
es
dec
aas
fildll
fistpll
inc
xchg
add
popl
pop
enter
ss
sbb
fcom
push
cmp
les
sbb
push
test
sbb
push
dec
mov
xchg
inc
andb
mov
iret
inc
cmp
and
and
mov
fwait
mov
iret
adc
shlb
icebp
mov
cmp
push
add
test
dec
je
andl
add
rcrl
adc
mov
add
sbb
leave
or
push
adc
bound
rclb
sar
push
xor
or
and
mov
push
mov
nop
dec
pop
xchg
mov
fisubrs
mov
cmc
in
mov
inc
mov
adc
enter
inc
add
lock
cmp
xchg
cmp
imul
mov
inc
dec
and
pop
bound
jnp,pt
stc
or
ja
mov
iret
add
mov
sbb
pushf
hlt
clc
nop
stos
repnz
push
enter
mov
fsubl
xchg
cmp
jae
enter
cmpl
mov
dec
movsl
mov
negb
sub
movsb
cltd
jge
rcrb
out
popa
into
popa
mov
or
mov
xor
addb
sbb
push
jb
mov
inc
ret
sbb
sub
sbb
loopne
cmp
xchg
pop
sub
sub
jp
addl
jmp
xor
push
aaa
xor
push
xlat
inc
mov
pop
push
xchg
push
or
adc
or
pop
in
loop
cmpsl
push
pusha
or
loop
loop
mov
scas
or
loop
mov
aas
sti
mov
pushl
movl
adc
mov
pop
popa
mov
lds
mov
pop
iret
sahf
pop
addr16
lret
mov
cmp
jae
ss
xchg
loopne
push
xchg
mulb
xor
shlb
xlat
repnz
add
dec
adc
fildl
sti
dec
mull
enter
or
mov
xchg
xchg
add
stc
push
jmp
and
xor
cmp
jp
fmuls
movsb
js
pushf
cmc
mov
cmpsl
mov
aam
sbb
fisubrs
movsb
stos
pushf
push
mov
lds
sub
mov
mov
scas
js
xor
lea
mov
add
jne
dec
pop
dec
jne
stos
xor
or
scas
addr16
insb
sub
addr16
test
cmp
dec
or
jmp
lods
sub
sbb
fisubs
addb
or
lods
dec
inc
rcrb
cmp
sub
xor
cmp
js
and
and
popa
into
or
sub
or
sub
dec
sbb
movsb
adc
mov
mov
movsb
or
cmpsl
adc
subl
xor
aad
cmp
sahf
dec
test
leave
or
add
cs
and
inc
xlat
adc
dec
inc
inc
inc
pop
nop
push
clc
loopne
mov
je
xlat
cwtl
add
pusha
and
jns
mov
sub
in
popa
add
movsb
rolb
scas
aaa
adc
movsl
fsubrs
stos
pop
pop
test
sbb
aas
repz
cmp
inc
inc
imul
iret
mov
inc
ljmp
adc
lret
dec
inc
ret
test
push
xchg
or
pop
in
dec
into
or
cmp
repz
sbb
xor
nopl
xor
mov
iret
movsl
jno
mov
adcb
mov
xchg
cmp
push
xchg
ret
xor
leave
test
xor
daa
in
enter
js
pop
or
mov
xchg
add
mov
cmp
xor
mov
jecxz
jmp
mov
bound
inc
inc
jno
push
cs
push
sbb
cltd
jecxz
cmp
xchg
fisubl
iret
test
cld
and
or
dec
jns
xchg
jnp
push
filds
push
insl
pusha
nop
xchg
out
pusha
scas
mov
les
bound
add
add
ret
sbb
jmp
cmp
lock
int
lahf
dec
out
lds
inc
dec
adc
nop
inc
add
test
out
mov
dec
movsl
mov
xor
pop
das
xchg
lods
xchg
pop
add
pop
dec
ljmp
mov
or
nop
pop
mov
mov
ds
lret
cmpsb
add
cmp
xlat
int
leave
ja
pushf
pop
add
inc
mov
pop
cmp
mov
jb
mov
add
push
dec
adcb
call
cwtl
mov
xchg
lret
stos
imul
mov
mov
in
add
repnz
mov
push
and
jge
cmpsb
xchg
lahf
std
iret
mov
jae
gs
test
xor
sub
dec
mov
mov
pop
test
jp
loope
jecxz
or
enter
dec
repz
add
scas
cmpsb
dec
mov
cmp
lcall
mov
add
rorb
and
push
mov
jns
pusha
jno
ror
xor
sahf
adc
rorl
inc
shl
movsl
mov
or
or
pop
in
pop
xchg
in
xorb
movsl
sub
jbe
adc
clc
lock
test
inc
push
jno
sbb
repz
inc
lock
mov
and
or
mov
mov
xor
daa
addr16
lret
repz
push
rolb
imul
test
std
mov
test
stos
sub
dec
mov
inc
sub
lock
lret
ret
or
mov
gs
sub
sbb
add
ljmp
cmp
mov
mov
movsb
pushf
add
inc
sbb
in
jo
sub
pop
nop
and
gs
movsl
fwait
xor
cmpsb
imul
add
push
push
dec
adc
in
dec
fs
sub
or
sub
jp
pop
fwait
sbb
mov
add
test
sbb
sbb
push
fisubrs
ret
push
ja
cmp
mov
out
push
dec
cli
sub
movsl
testb
sti
pop
loopne
cmp
xchg
and
and
mov
mov
push
sbb
xchg
lods
jecxz
mov
and
in
add
shlb
lret
cmovs
xchg
fcoms
pop
cli
push
push
fwait
clc
lea
repnz
enter
clc
incb
xor
loopne
scas
pushl
push
aas
aaa
dec
mov
add
xchg
sbb
les
fcomps
xchg
sub
sbb
adc
scas
push
jmp
mov
adc
sbb
adc
jg
inc
xorl
addr16
mov
mov
fcompl
push
imul
loopne
sbb
sub
test
mov
out
and
stc
xchg
test
xchg
cmp
sub
stc
lret
add
pop
xor
and
addb
inc
leave
mov
fisttps
in
xchg
xor
dec
pop
loop
pop
mov
mov
sbb
mov
mov
add
imull
scas
mov
and
add
in
cmp
mov
notl
adc
into
fbstp
inc
shrb
leave
inc
mov
scas
stos
lock
inc
pop
call
std
outsb
cmp
jg
xor
cmp
inc
cwtl
jge
or
enter
inc
push
add
scas
addr16
inc
bound
or
mov
add
xor
jle
or
xchg
roll
jne
das
bound
fisttpl
imul
and
call
xor
add
or
inc
jbe
add
and
filds
pop
pop
sbb
lahf
call
xacquire
and
jbe
adc
mov
and
sbb
push
cmp
sub
inc
out
call
cmp
imul
lret
addps
notb
js
out
subb
push
and
scas
fs
int3
mov
adc
mov
ficomps
mov
sbbl
fldl
andl
jge
add
lret
push
or
push
aas
cmp
outsl
pusha
scas
int3
push
ja
push
out
loope
sahf
aam
decl
push
jno
outsb
push
ljmp
sub
adc
inc
mov
xchg
popa
and
jno
sbb
mov
jns
sbb
cwtl
cld
jbe
lret
jmp
mov
push
dec
push
sub
clc
cmc
rol
xchg
pop
mov
mov
mov
in
mov
xchg
aad
jmp
push
movsb
cwtl
inc
and
dec
push
addb
or
add
mov
add
jge
pop
and
xor
jg
js
ljmp
pop
lock
es
cmc
scas
add
xchg
push
jb
jne
mov
mov
clc
lds
mov
adc
push
or
xchg
or
sbb
enter
test
test
jne
imul
or
imul
in
popa
lcall
push
mov
mov
in
push
xchg
or
cli
cmp
jno
mov
jmp
adc
or
pop
and
je
rol
mov
sbb
or
mov
sti
cmp
or
inc
dec
adc
mov
jne
xchg
push
sbb
or
mov
int3
pop
test
push
push
add
ret
iret
add
pop
dec
sbb
mov
or
adc
pop
test
sub
int3
fnstsw
mov
mov
mov
insl
push
cld
push
adcb
pop
pusha
adc
or
xor
mov
mov
sti
or
jmp
mov
stos
push
xlat
adc
xor
aad
lret
shll
and
adc
int
cmp
push
cwtl
insb
push
lret
call
push
roll
push
push
clc
and
cmp
add
and
cmp
js
aam
nop
iret
mov
add
ret
xor
sub
lock
adc
inc
sub
roll
ja
andl
mov
jl
sbb
add
mov
xorl
shr
scas
imul
mov
xor
mov
inc
push
mov
scas
mov
loopne
daa
and
stos
jecxz
js
hlt
lcall
out
mov
loopne
cwtl
dec
add
mov
sar
mov
pushl
inc
jg
repnz
cmp
out
inc
ds
out
jo
addr16
test
out
lret
dec
scas
scas
data16
and
or
leave
or
movw
push
outsb
xchg
mov
push
mov
scas
test
mov
test
pop
data16
pop
inc
mov
sbb
push
scas
loope
sub
add
and
rcrb
rorb
loope
test
and
icebp
js
inc
test
ret
xor
xor
roll
jno
add
or
stos
ret
jg
push
push
lcall
arpl
inc
lret
inc
pop
test
nop
push
rcll
and
mov
repnz
test
lret
pusha
jo
sbb
int
cld
mov
lds
aad
dec
add
mov
into
or
mov
sub
sub
in
ficompl
into
fwait
gs
or
jns
push
sbbb
cmp
aas
and
in
mov
scas
lret
inc
or
rcr
and
in
and
sbb
cmp
lods
or
js
add
adc
scas
push
hlt
adc
inc
adc
add
mov
push
outsb
adc
and
adc
mov
sub
lret
data16
mov
mov
outsl
lret
adc
jne
test
xor
cmp
ljmp
addr16
in
popa
sub
xor
and
adc
push
lods
data16
arpl
cmp
push
inc
lret
subl
ljmp
add
push
sub
or
inc
adc
loope
jnp
cmp
sub
ljmp
mov
out
or
test
lods
cmp
lock
mov
mov
aad
mov
jbe
lds
sbb
dec
sbb
or
cmc
lea
push
rorb
addb
jne
jo
mov
pop
movsb
ja
jo
xor
push
repnz
addb
xlat
jle
daa
pop
bound
negl
xchg
fstl
ret
aaa
and
cmp
int3
mov
jle
or
dec
lea
test
push
push
mov
and
orb
leave
mov
xor
idivb
inc
pop
adc
inc
add
addr16
lret
stos
cmp
mov
ds
push
mov
sub
or
pop
test
in
mov
add
ret
xor
scas
inc
dec
stc
leave
adc
loope
push
sbb
repz
sbb
popf
pop
loop
pusha
pop
xchg
mov
fiaddl
mov
add
mov
into
inc
jno
cmp
testb
and
push
adc
testb
jae
adc
repz
cmp
or
adc
sbb
mov
mov
test
jge
insl
sbb
mov
in
mov
out
dec
or
dec
js
in
pop
popf
mov
adc
icebp
mov
push
imul
addb
in
movsb
lods
push
dec
test
dec
jb
aad
cmpsb
pop
hlt
xchg
mov
stos
lods
push
mov
mov
xchg
mov
es
iret
inc
push
outsl
push
int3
mov
dec
test
imul
test
xor
sbb
loopne
shrl
fildll
xchg
dec
testb
push
or
sti
and
insl
sbb
cmpsb
mov
push
addr16
jmp
popf
pop
repnz
stos
adc
lds
mov
adc
cmp
mov
push
xchg
mov
and
mov
call
mov
ret
add
or
cmpsb
mov
scas
outsl
cli
mov
add
jo
inc
frstor
or
dec
mov
cmp
lods
adc
xchg
sbb
adc
pop
push
leave
cmp
ljmp
push
roll
or
aam
insb
cmpsb
mov
push
faddl
sbb
or
cmp
popa
dec
fiaddl
and
aas
stos
std
and
sbb
bound
push
sbb
pop
shlb
xor
into
sbb
int3
out
mov
stos
push
adc
shr
xchg
fsubrl
hlt
shrl
mov
mov
scas
into
les
jbe
bound
or
cs
jg
add
sub
ja
xor
insl
pushf
add
orl
xchg
jns
jno
xchg
mov
imul
sbb
push
mov
les
lods
mov
or
cli
add
mov
mov
mov
or
ljmp
mov
xchg
aas
inc
add
out
orb
sbb
jne
jle
adc
fs
mov
and
clc
add
xor
inc
out
jmp
in
mov
jb
jae
mov
lret
leave
mov
je
inc
in
jg
lahf
inc
xchg
movsb
lods
jo
jne
sbb
mov
sub
outsl
sbb
mov
sbb
aam
xor
xchg
addl
std
mov
mov
sbb
loope
pop
jmp
mov
sub
mov
add
mov
and
or
je
mov
dec
in
cmp
dec
js
lea
add
inc
icebp
or
loopne
mov
xchg
pop
xor
imul
cmp
push
inc
jecxz
or
pop
cltd
push
inc
pop
pop
stos
mov
ret
adc
test
xorb
and
add
fs
sbb
pushf
bound
ja
aad
jbe
mov
daa
scas
or
xor
push
sub
cmp
shl
mov
fsubl
orb
into
dec
out
std
push
jg
movsb
fs
scas
stos
sahf
aad
jns
cmpl
mov
or
shrb
adc
sub
sub
leave
xchg
stos
dec
inc
ljmp
sub
sbb
ljmp
adc
mov
aam
push
test
adc
mov
or
bound
testl
add
nop
mov
push
test
mov
test
clc
jmp
pop
inc
add
rol
inc
aam
add
or
dec
sbbb
nop
mov
inc
ljmp
dec
and
and
dec
add
or
push
add
xchg
lea
xchg
lea
adc
cmp
cmp
pop
push
pusha
cmp
adc
dec
sbb
leave
test
sbb
push
or
mov
dec
ret
mov
and
lea
loop
cmp
bound
enter
out
and
cmp
fisubrl
call
sbb
es
pushaw
mov
xlat
xor
add
pop
adc
leave
add
test
outsl
mov
xor
rorb
inc
shrl
mov
adc
movsl
pop
loopne
xchg
call
mov
sub
jmp
xor
jns
addr16
mov
xchg
jno
stos
and
add
xor
mov
xchg
jecxz
cli
adc
jmp
inc
test
clc
cs
adc
cmp
and
cmpsb
leave
jg
mov
push
loopne
adc
call
popf
xor
aas
xor
mov
xor
dec
in
int3
push
jmp
test
push
dec
and
out
jle
xor
scas
or
xchg
xor
jb
or
loope
test
push
pop
push
mov
sbb
mov
add
mov
xor
mov
mov
xchg
icebp
mov
imul
xchg
fiaddl
sbb
rclb
pop
inc
dec
dec
xor
out
lahf
aas
adc
aam
dec
xor
sub
bound
fs
shll
mov
sub
adc
fdivs
in
mov
xor
cs
push
adc
lret
or
sbb
leave
frstor
aaa
in
and
inc
mov
inc
xor
inc
addr16
mov
xlat
popa
jo
aas
pop
xchg
cs
out
lea
xchg
xor
mov
jg
or
out
cmovbe
orl
add
decb
rol
shr
iret
pusha
xor
jmp
jno
ret
jo
ljmp
adc
iret
xor
orb
roll
add
mov
dec
mov
jp
xlat
aam
jns
sbbl
mov
mov
or
imul
push
or
sbb
xchg
sub
pabsb
addr16
fs
movsl
add
xor
push
adc
mov
push
out
jnp
in
imul
adc
rorb
xchg
arpl
inc
ret
adc
popa
sbb
or
cmp
leave
adc
fdivrs
or
xlat
adc
cmpsl
rorb
sub
rcl
insl
mov
lea
call
subb
dec
push
pop
stos
data16
ja
xchg
shll
repnz
or
fidivrs
add
cmp
or
push
sub
incl
mov
call
mov
inc
inc
mov
push
pop
sbb
and
pusha
cmp
call
fldenv
inc
addr16
xchg
add
cli
outsl
pop
mov
aad
sbb
fstl
in
mov
scas
mov
mov
popf
pop
fimull
pop
dec
pushl
pop
pusha
cs
stc
fmull
xchg
call
aaa
mov
mov
adc
jp
sti
push
loope
inc
std
rol
xor
sbb
dec
scas
pop
incb
fadds
mov
sub
and
jns
mov
movb
jle
into
xor
cmp
adc
dec
sbb
sbb
sbb
or
leave
mov
cmp
jnp
fwait
bound
sbb
xchg
inc
xchg
mov
push
or
sub
mov
push
inc
rcll
cmpb
data16
leave
test
jecxz
jge
rcrl
mov
inc
dec
add
iret
out
js
xor
imul
pop
bound
and
add
jo
mov
pop
sbb
mov
and
add
sub
and
stos
push
push
jns
scas
repz
cltd
or
push
sbb
dec
add
pop
or
inc
js
pusha
repnz
add
mov
and
dec
es
inc
or
call
and
sub
xor
push
push
pop
test
pop
and
add
pop
jno
scas
aam
repz
enter
mov
mov
notl
jno
les
push
gs
or
addr16
mov
cltd
adc
pop
out
test
addr16
pop
into
xor
pop
push
mul
mov
cmp
dec
test
outsl
sub
gs
and
add
xchg
ljmp
inc
ficomps
push
pusha
cmp
das
nop
ss
xor
dec
mov
xchg
mov
sub
stos
adc
ljmp
lds
xchg
pop
scas
xchg
nop
pop
dec
hlt
adc
mov
add
push
loopne
inc
and
and
and
ds
pop
xor
dec
mov
mov
outsb
ljmp
daa
iret
fs
repnz
mov
iret
daa
dec
xor
orl
adc
and
push
xchg
push
sti
sub
stos
cmp
sbbb
fisubrs
pop
scas
mov
pop
adcl
pop
cmp
cltd
mov
stc
mov
fisubl
xor
andb
xor
xchg
shl
mov
andb
dec
sbb
sbb
sbb
jae
or
andl
inc
aad
xor
add
jnp
jb
xor
out
sbb
mov
xor
inc
push
stos
enter
pop
mov
and
fldt
dec
mov
gs
pop
add
mov
jp
shrb
pop
xor
or
orl
sbb
adc
fdivrs
adcl
xchg
lahf
shll
push
rolb
test
inc
xchg
xorl
dec
dec
or
aad
xchg
dec
jg
test
or
add
or
sub
scas
sti
in
test
dec
xchg
and
and
push
jb
add
ret
scas
jnp
inc
xchg
cmpsl
clc
inc
xchg
add
leave
shlb
popa
test
mov
sbb
pop
add
inc
mov
and
dec
fsubs
lret
test
or
pusha
and
or
and
push
mov
std
cwtl
dec
pop
mov
mov
stos
pop
lods
jb
inc
imul
je
popa
mov
pop
mov
cli
inc
insl
inc
sub
sub
icebp
and
lds
jae
pop
push
cmp
inc
jl
loope
gs
or
sub
push
loope
fldcw
gs
sub
int
ss
arpl
adc
xchg
or
add
mov
or
adc
rorb
stos
dec
mov
lcall
mov
mov
cmpsb
add
gs
ret
xor
push
lahf
pusha
sub
push
cmpsl
jo
aas
inc
iret
mov
adcl
stos
push
or
icebp
aaa
pop
movsl
test
mov
repnz
add
movsl
ficoml
sub
cld
xor
xchg
insl
push
cwtl
stos
test
xor
nop
stc
test
testl
mov
adc
psllq
add
sub
pop
mov
in
or
ret
inc
aaa
test
stos
fdiv
jmp
out
sbb
add
inc
arpl
inc
adc
and
inc
add
add
scas
mov
ljmp
std
mov
aad
loope
pop
data16
popa
mov
icebp
test
adc
add
jo
inc
xor
and
mov
pop
jo
sbb
or
or
call
cld
movsl
dec
ljmp
mov
inc
repnz
addb
test
sub
dec
andl
enter
inc
call
lahf
fdivr
test
sbb
cld
jge
arpl
fs
stos
xchg
mov
test
add
lods
xorl
cmp
out
loop
mov
movsb
mov
movsl
jecxz
mov
mov
mov
cmpl
mov
and
add
xor
fimuls
pop
aas
jecxz
add
jno
jmp
outsl
pop
jp
test
push
movsb
mov
xchg
in
and
xor
lahf
rcrb
mov
mov
jb
cmp
mov
sub
aaa
add
dec
dec
pop
jo
imul
movsl
ljmp
fadds
jecxz
sbb
out
js
ljmp
cmp
lret
cmc
sub
imul
or
mov
fisttps
repnz
jp
xchg
xchg
jb
jmp
cmp
fs
in
inc
sub
mov
sahf
add
sbb
pop
dec
scas
jle
ds
pusha
pusha
mov
stos
push
fists
call
xor
lds
es
xchg
inc
xchg
les
xchg
cmp
push
sub
or
xor
fstp
imul
lret
cltd
ljmp
xlat
inc
add
pop
test
mov
mov
mov
insb
in
out
stos
sub
lds
js
xchg
and
into
jae
jno
andb
pop
imul
lcall
in
jae
mov
lea
xchg
push
cmp
scas
stos
xchg
in
mov
or
ficoms
add
hlt
mov
xchg
inc
cmp
dec
sub
enter
xor
rorl
sti
fdivl
stc
movsb
pop
push
push
mov
test
mov
jb
and
mov
cmp
dec
stos
in
cmp
push
and
add
add
mov
dec
or
push
mov
stos
mov
xor
fbld
sarb
fistps
xchg
mov
scas
and
addl
jge
mov
std
and
adc
addr16
mov
ret
addr16
enter
inc
xchg
jg
inc
or
movsb
or
mov
lahf
clc
pop
insl
jg
pusha
sbb
xor
orb
xchg
leave
inc
mov
xchg
in
rorl
js
or
sbbb
mov
push
jp
dec
stos
scas
cmp
cwtl
or
pop
cmpsb
loopne
rolb
pop
lds
fwait
adc
jl
and
add
pushf
push
loope
sbb
outsb
andl
add
fiadds
dec
pop
push
push
rorb
hlt
sbb
and
mov
or
xor
sub
repz
mov
js
push
xchg
into
test
mov
jl
jl
pop
cmpb
push
or
addl
add
pusha
leave
scas
push
cmp
out
and
or
sbb
mov
cmp
cmp
cwtl
cmp
mov
ljmp
js
mov
sbb
mov
and
stos
stos
jecxz
lret
imul
adc
repz
mov
push
pop
or
sbb
out
outsb
mov
xor
popa
cmp
xchg
mov
loope
js
xchg
push
insb
jns
jle
inc
test
add
xchg
add
mov
inc
imul
or
mov
add
dec
data16
push
or
scas
mov
xor
adcb
push
hlt
sti
int
jmp
jb
xorb
scas
rolb
cmp
loopne
into
cmpl
mov
push
jbe
mov
adc
sub
subl
pop
cmpsb
pop
mov
loop
mov
inc
xchg
pop
push
fisubs
xchg
adc
jne
or
stos
movsb
sub
pop
sub
push
sub
or
sbb
fwait
into
adcb
xlat
movsb
cli
push
jp
clc
jne
scas
cwtl
nop
iret
lret
xchg
roll
scas
add
push
mov
add
and
sbb
in
and
fcmove
in
mov
addr16
dec
mov
mov
push
shlb
sub
xor
call
addr16
or
scas
dec
xchg
test
push
jo
push
repz
dec
sahf
jno
sbb
mov
mov
mov
mov
in
push
sub
call
sbb
sbb
data16
xor
xchg
loope
inc
and
test
les
adc
mov
push
sbb
sbb
and
jnp
xchg
mov
mov
mov
sbb
imul
mov
lret
dec
jmp
cmpsb
ss
aas
jmp
popf
scas
add
inc
std
lods
and
daa
lock
jb
jmp
add
sbb
fistpll
sbb
mov
daa
int
add
fimuls
mov
or
xor
mov
int
mov
push
pusha
dec
mov
int
rorb
xorb
andb
jno
mov
mov
enter
sub
pusha
xchg
and
inc
sbb
mov
and
sub
ljmp
dec
cmc
xchg
push
fstpt
cmpsb
push
orb
push
outsb
mov
pop
mov
pop
mov
les
xchg
sub
stos
es
insl
and
cmpl
test
dec
stos
cmp
xchg
jp
nop
mov
scas
into
dec
inc
outsb
jp
loop
dec
lods
adc
sub
cmp
jnp
ja
loopne
mov
ror
inc
dec
inc
mov
or
test
cmp
xor
adc
adc
mov
or
icebp
stos
or
movsb
mov
or
pushf
bound
or
ljmp
dec
fsub
add
lret
push
jb
mov
insb
pop
int3
in
xchg
sbb
cmp
scas
popf
dec
mov
push
cltd
and
nop
sbb
shl
jl
inc
pop
and
stos
loope
pop
dec
dec
inc
bound
mov
push
mov
mov
mov
lock
mov
adc
jbe
clc
test
mov
in
out
hlt
push
fucomip
push
xor
sbb
call
jecxz
dec
ret
xchg
cmp
cld
les
pop
push
push
mov
lods
xor
popa
push
test
mov
jle
inc
std
test
push
scas
inc
dec
pop
mov
jbe
inc
sbb
fisttpl
ljmp
ja
mov
mov
leave
xlat
out
push
test
cmp
mov
jge
xchg
ftst
add
pop
orl
dec
nop
pop
pop
dec
pop
decl
mov
mov
leave
sbbb
mov
and
push
or
push
jne
mov
xor
adc
push
testb
int
fs
mov
jo
mov
cmp
mov
mov
push
imul
rclb
adcl
add
stos
fistl
inc
push
in
or
jmp
adc
cmp
sete
inc
adc
lds
inc
pop
push
insl
imul
inc
pop
push
inc
sbb
mov
xchg
mov
ja
ljmp
fistl
cmp
mov
inc
ret
inc
inc
cmpsb
jmp
aas
dec
xchg
addl
and
andb
inc
es
mov
xchg
mov
or
cmpl
call
push
dec
pop
fldenv
or
es
imull
push
fmuls
lret
xchg
pop
mov
sub
lea
jmp
sub
dec
out
sub
in
lock
insb
movsb
frstor
mov
mov
sbb
orl
arpl
or
nop
bound
mov
inc
or
popa
dec
push
in
je
stos
shl
movl
mov
sub
imul
add
push
int
andb
sbb
adc
add
lahf
mov
pop
int3
mov
push
test
add
dec
aas
leave
push
dec
scas
inc
mov
mov
shll
sbb
cwtl
rcrl
jnp
pop
or
sbb
mov
dec
shl
adc
mov
or
idivb
sbb
stc
pop
or
fabs
leave
mov
repnz
xlat
and
and
loopne
jl
mov
or
or
mov
mov
sbb
mov
xor
pop
push
jl
in
add
mov
inc
sbb
mov
cmp
xchg
jmp
dec
add
mov
iret
imul
mov
jecxz
mov
xor
sbb
insl
sti
fcomp
mov
in
sub
sbb
cmp
hlt
cli
int3
sub
cs
movd
cmpsl
sbb
sbb
shll
sbb
push
push
sahf
scas
mov
mov
into
cltd
fcompl
xchg
adc
xchg
sbb
fmull
push
test
scas
inc
cmp
imul
cld
std
adc
lcall
lock
nop
xor
test
dec
mov
nop
rorl
sbb
adc
mov
push
out
push
imulb
shll
or
lock
jb
add
outsl
push
dec
inc
and
fmul
push
inc
mov
dec
push
js
sub
movsb
hlt
or
leave
sbb
addb
xchg
xchg
or
add
cmpsb
decb
or
insl
addr16
add
add
or
xchg
das
xor
cmpb
dec
data16
add
int3
loopne
lock
fdivl
xor
scas
call
mov
and
and
cmp
cmp
fs
sti
and
mov
int
jg
inc
cs
outsb
mov
bound
mov
dec
push
lahf
add
sbb
test
inc
inc
out
test
cmc
push
rcrb
xor
add
movsb
fadds
and
test
xchg
sbb
arpl
das
and
xchg
sbb
cwtl
dec
daa
xchg
dec
xor
adc
out
subb
dec
xchg
adc
nop
lock
sbb
jp
sbb
push
das
iret
les
push
dec
pusha
xor
bound
gs
push
push
lods
mov
adc
and
adc
imul
xchg
adc
lods
adc
and
loope
inc
std
adc
imul
inc
jmp
mov
adc
test
adc
mov
sahf
and
and
sbb
inc
xchg
stos
xor
rolb
cmpsl
fists
popa
pop
dec
scas
mov
mov
mov
pop
pop
and
daa
push
sbb
mov
mov
dec
nop
pop
and
icebp
roll
mov
adcl
dec
popf
pop
push
dec
add
push
lea
test
lock
addr16
in
int3
movb
pusha
pop
arpl
dec
aas
aas
out
sahf
andb
push
push
sub
xchg
mov
mov
mov
repnz
mov
repnz
popf
and
in
addl
mov
pop
push
and
in
sbb
pop
add
ljmp
mov
das
fwait
dec
cmp
testl
into
fadds
scas
add
sub
call
repnz
jmp
ret
adc
cmpsb
mov
out
dec
or
push
adc
adc
stos
fwait
dec
jg
mov
shrb
or
jge
roll
dec
lock
sbb
pop
into
mov
iret
test
mov
sbb
sbb
call
shll
scas
orps
das
add
cmpsb
add
dec
aam
das
aaa
mov
into
sbb
adc
call
cwtl
das
dec
dec
cltd
test
popf
inc
sbb
lcall
lcall
pop
inc
inc
shlb
sbb
js
ret
pop
ret
out
call
push
out
or
and
shrl
clc
cmp
sbb
sbb
in
or
je
inc
xor
cli
pop
loope
mov
stos
adc
jecxz
xorl
ss
add
or
scas
pusha
call
cwtl
adc
in
mov
xor
pop
pop
inc
test
lods
imul
add
cmp
dec
pop
fcompl
jecxz
aaa
add
cld
loopne
xchg
pop
and
subb
in
fcmovne
jne
xor
ret
rolb
cwtl
sub
lret
add
adc
or
mov
xchg
cld
rolb
or
jno
cmpsl
stos
outsb
push
push
inc
outsb
in
jmp
stc
dec
aad
dec
out
cs
sub
outsb
inc
popa
and
ret
dec
fdivrl
lods
jns
sbb
arpl
loope
inc
sbb
shlb
outsb
iret
push
add
subb
mov
jo
test
add
and
dec
add
in
test
std
pop
cs
imul
adc
pop
insb
cs
pop
ret
and
outsb
dec
adc
cmpsb
fs
pop
jge
mov
movsb
add
adc
clc
pusha
cltd
ja
jbe
pop
xor
repnz
lds
mov
add
lahf
xor
dec
xchg
dec
mov
cmpsl
inc
insb
jmp
mov
or
inc
sbb
out
jle
dec
cwtl
or
cmovs
into
pop
scas
cs
dec
cs
scas
push
movsb
mov
inc
cs
jbe
add
mov
xchg
push
sbb
in
ret
or
into
adc
or
insb
rcrb
add
xchg
add
add
inc
cmp
sbb
mov
fadds
lret
dec
push
ljmp
imul
gs
adc
mov
dec
aas
lcall
stos
inc
pusha
clc
cltd
addr16
xchg
rcll
inc
pushf
in
test
cmp
or
ljmp
scas
sbb
push
fcomps
bound
dec
push
jg
pop
addr16
loope
or
and
imul
pop
sbb
xor
or
stos
mov
in
inc
dec
out
dec
xchg
pop
inc
sbb
and
rorl
pop
jne
add
js
iret
xor
sub
inc
mov
loope
add
jg
push
fisttps
push
jmp
lret
mov
fistps
ljmp
sbb
rorb
and
pop
pop
inc
scas
mov
jecxz
xchg
dec
add
aad
cmpsl
scas
dec
mov
cmpsl
mov
mov
mov
mov
outsb
in
and
pushfw
in
xorb
mov
or
testl
or
and
repnz
jg
mov
pop
scas
xor
sbb
cmp
in
push
xchg
roll
mov
cli
ja
cmp
mov
mov
stos
push
add
or
movsb
and
mov
dec
test
std
push
add
lcall
xor
push
xor
or
addr16
leave
xlat
inc
nop
add
mov
fsubrs
hlt
add
cmpb
addr16
loop
js
xor
imul
out
add
inc
scas
jnp
test
add
mov
mov
jg
pusha
repz
icebp
into
inc
inc
test
fistps
and
std
data16
add
xor
jge
pop
jo
rolb
push
or
cmp
pushf
or
or
sahf
mov
push
inc
sbb
iret
in
sub
cmp
lahf
aaa
pop
outsb
push
and
inc
insl
pop
or
xor
cmp
add
and
or
add
xchg
sub
add
mov
mov
js
lods
int
orb
mov
leave
std
adc
cmp
cmp
addl
or
push
jle
adc
ret
push
push
dec
movsl
iret
or
adc
dec
ret
sub
jp
xor
dec
fcoms
aaa
push
sbb
push
and
insl
lock
push
mov
enter
nop
add
repnz
and
push
imul
std
shlb
int
cltd
aaa
mov
dec
and
push
sbbb
andl
ret
repnz
enter
xor
addr16
loopne
cmp
push
fs
and
push
add
and
or
cli
push
and
xor
jno
cmp
xchg
add
mov
push
popa
cmp
into
jg
pop
inc
incl
or
or
jecxz
mov
xorl
mov
pop
dec
adc
sbb
das
xchg
setge
aas
or
fcomps
push
add
xchg
arpl
pop
sub
inc
sahf
popa
pusha
scas
inc
cmp
pop
jle
sub
out
ss
or
jge
xor
lds
movsb
jmp
jno
in
push
movl
jge
shlb
and
fs
outsb
push
dec
push
js
bound
adc
pushf
adc
int
scas
add
dec
cmp
adc
cmp
mov
aad
xor
movb
loop
push
lea
clc
movsb
jo
push
push
sbb
sub
pop
gs
test
jno
push
xchg
ss
mov
or
pushf
pop
sub
jae
dec
sahf
jb
movsl
popf
dec
mov
dec
pop
push
dec
sub
sub
adc
adc
mov
loope
repz
insl
mov
repnz
aaa
add
fcoml
inc
scas
mov
inc
and
lock
mov
movsb
divl
inc
adc
mov
movl
add
xchg
fists
cmpsl
or
ss
jecxz
inc
pop
add
popf
xor
jecxz
inc
ret
push
add
adc
ret
lret
xlat
rcr
das
popf
inc
jmp
xor
test
xchg
jo
sub
mov
cmp
std
inc
mov
mov
cmp
insb
cmp
in
jle
mov
in
cld
sub
add
movsb
and
push
lock
push
push
ret
xlat
insl
mov
cwtl
or
sbb
scas
jnp
out
xor
cwtl
push
jmp
sub
std
mov
inc
nop
jne
call
sub
dec
jmp
mov
xor
popa
notl
scas
xor
push
iret
aas
xchg
sbb
out
repz
popa
scas
sahf
mov
jno
adc
push
add
call
fdivrl
pusha
into
mov
loope
pop
push
loope
mov
push
push
xor
in
sub
test
xor
push
sbb
xchg
js
sbb
int3
popl
push
mov
nop
jno
pop
push
cli
ss
or
inc
pop
jge
addr16
andb
inc
or
xor
cmpsl
sbb
scas
movsb
gs
cmp
aaa
outsl
cmp
sub
enter
orl
shll
call
leave
adc
clc
jo
and
push
add
adc
ds
andb
lahf
ror
pop
enter
scas
pushf
mov
xor
cmp
fnstcw
lcall
mov
sub
and
push
add
add
adc
or
shlb
pop
enter
test
jle
ljmp
xchg
pop
imul
pop
ret
js
fwait
lcall
into
pop
or
or
xor
stos
adc
fildll
cmp
adc
xor
clc
mov
mov
and
insl
subb
lods
mov
pop
jb
xor
outsl
push
push
xchg
test
and
les
mov
pop
mov
add
or
iret
scas
push
inc
xchg
into
or
cmp
xor
xchg
iret
inc
push
or
test
mov
sbb
inc
inc
and
xchg
mov
push
fcmovnu
mov
rorl
jnp
imul
addr16
outsb
icebp
sub
ja
dec
add
cmp
outsl
les
loop
jge
mov
cli
push
insl
inc
mov
addl
sub
ret
in
jns
int3
xchg
pop
aad
outsl
jp
xchg
mov
insb
andb
shlb
push
or
cmp
and
inc
jnp
cmpl
loopne
sti
fstpl
pop
mov
sbb
lcall
out
testb
pusha
inc
sbb
shrb
mov
pushf
into
cmp
add
movsb
cmp
hlt
popa
fisttps
xor
outsl
lahf
daa
mov
stos
addl
fsubrl
pushf
or
jbe
xor
jbe
dec
adc
imul
xor
and
sbb
xor
scas
add
std
dec
sbb
adc
mov
iret
or
xchg
cmpsb
xchg
push
sahf
popa
aas
mov
leave
fstpl
sqrtps
jb
push
mov
push
lds
inc
xchg
popa
adc
sbb
dec
jmp
adc
jge
or
dec
out
cmp
and
inc
sahf
inc
sbb
or
imul
push
pop
inc
and
cmpsb
mov
roll
rclb
push
dec
popa
jb
nop
add
cmp
rclb
mov
or
push
or
or
add
inc
test
or
gs
cmovnp
test
push
in
jb
je
add
xorb
xchg
xchg
in
or
xchg
dec
pop
adc
test
rolb
addl
add
mov
mov
fiaddl
shrb
jg
add
xchg
cmp
add
dec
pop
xrelease
pop
ljmp
sub
sbb
cmp
sub
and
fcompl
scas
mov
sti
or
fmuls
push
mov
loope
xor
stos
pop
in
filds
dec
outsb
subl
or
nop
xor
adc
pop
subl
adc
rclb
xchg
mov
inc
xchg
arpl
push
adc
xor
subb
inc
sub
adc
retw
inc
add
xor
test
xor
jae
push
andl
lret
add
push
stos
outsl
fildll
mov
mov
xor
lds
lret
clc
cld
inc
popa
xor
stos
and
pop
add
pop
inc
fstpl
mov
cmp
jo
aas
rorb
int
jno
add
pop
dec
mov
cmp
and
mov
in
or
sbb
cmp
mov
addr16
mov
xor
xor
sbb
fadd
inc
jb
nop
dec
xorb
sbb
sub
or
flds
stos
mov
mov
cmp
lea
lret
add
nop
push
ret
sbb
inc
cmp
add
test
flds
add
sbb
std
add
mov
bound
sbb
sbb
dec
loopne
subb
sbbl
ss
add
or
xor
mov
or
xor
dec
insl
xor
sbb
pop
xor
adc
cmp
xchg
cmp
std
lret
or
sbb
dec
out
leave
fisttpll
fsub
inc
add
test
inc
pusha
aas
sbb
subl
xchg
add
push
dec
mov
xchg
xor
out
or
push
cmp
fmull
lds
pop
sahf
push
lea
mov
rcrl
pop
add
and
add
sub
sub
mov
adc
bound
pop
gs
cmp
inc
mov
pop
outsb
add
push
sub
negb
inc
dec
push
mov
mov
and
fs
and
or
sbb
jmp
cmp
inc
sbb
arpl
sub
stos
int3
adc
mov
add
and
xchg
popf
xorb
mov
ljmp
mov
mov
push
ret
mov
add
fdivrp
sub
sbb
add
xor
rorl
mov
or
add
mov
sub
mov
and
test
cmpsl
test
test
mov
cmc
pop
jge
cmp
mov
adc
sbb
lods
scas
pusha
xor
fistl
ja
ljmp
out
pop
mov
fstl
jecxz
jg
xchg
or
dec
orb
dec
and
test
mov
roll
mov
adc
fs
xorl
add
mov
lods
clc
enter
or
xor
add
bnd
ret
adcl
fcomi
lock
fsubrs
lcall
in
andb
roll
cmpb
sbb
bound
inc
lret
dec
dec
sahf
rolb
mov
xor
sbb
jmp
ds
cmpsl
sbb
and
test
ljmp
popa
add
fdivl
pop
add
add
xchg
pop
jmp
mov
imul
inc
cmp
mov
movsl
imul
inc
adc
lret
movsb
cmp
daa
xchg
push
imul
or
and
adc
mov
in
mov
addr16
ja
ja
popf
lret
sbb
adc
jmp
inc
sub
pop
repnz
lods
pop
mov
fnstsw
push
repz
dec
or
or
inc
gs
jnp
clc
jb
faddl
sub
lods
ljmp
loop
mov
outsb
dec
shlb
add
fistps
or
mov
or
cmp
inc
incl
or
jge
cmp
xchg
mov
mov
ljmp
nop
pop
xchg
mov
mov
hlt
nop
add
pop
cmp
inc
test
stos
and
xchg
dec
fisubrs
xchg
and
add
inc
mov
pop
jae
nop
shlb
rolb
lds
daa
mov
repz
sub
and
into
ficompl
mov
add
adcl
cmp
jecxz
outsl
stc
xchg
test
and
sbb
lret
and
adc
scas
jmp
mov
push
or
call
test
cmp
addb
xor
xor
out
mov
shrb
sub
iret
push
out
mov
fmull
push
add
ljmp
jnp
roll
sbb
cmp
out
data16
sbb
mov
add
aaa
test
lock
push
shr
sub
mov
rcrl
inc
icebp
popa
ljmp
aad
xchg
enter
pop
cmp
push
mov
mulb
xlat
xor
and
xor
out
mov
negl
in
mov
and
push
insl
cmp
mov
xchg
mov
or
fsub
and
call
data16
sbb
and
jo
mov
into
push
jbe
add
lret
gs
cmp
lea
arpl
mov
sub
cmpsl
test
push
call
dec
lcall
in
iret
sahf
rclb
jge
into
jb
into
shll
xchg
sbb
bound
pop
and
call
nop
and
xchg
test
scas
in
adc
mov
out
sub
je
movsl
out
sbb
xor
aas
cmpsb
sub
adc
inc
push
fiadds
jno
pushf
inc
xor
fisubrs
cmpsb
dec
fldl
nop
stc
addr16
inc
sub
sbb
sbb
loopne
popa
push
fdivp
adc
dec
xor
mov
ret
pop
jmp
or
stos
pusha
pusha
sbb
scas
push
inc
mov
mov
test
js
clc
into
arpl
stos
or
mov
jmp
inc
aam
adc
clc
test
mov
rcrb
gs
push
pop
dec
daa
lret
jecxz
inc
fcoms
mov
adc
subl
push
popa
mov
and
dec
enter
cmp
or
jne
fs
xchg
and
xorl
stos
adc
sbb
adc
push
outsb
stos
fwait
jne
scas
pop
gs
jg
xor
xor
push
outsb
rcrb
jmp
sbb
scas
lds
xchg
mov
mov
outsl
addr16
and
sub
clc
or
pop
jmp
sbb
out
lea
or
mov
imul
add
sub
push
mov
insb
push
repnz
jle
addb
imul
pop
xchg
test
outsl
xor
push
and
or
mov
jp
mov
add
mov
scas
xchg
dec
test
cmp
pusha
cmp
or
xchg
orb
imul
xchg
popf
or
fcoml
movsb
leave
sbbl
scas
enter
dec
fiaddl
scas
lds
lret
push
xor
jmp
mov
and
mov
inc
repnz
or
add
mov
sub
mov
or
mov
or
mov
lret
iret
adc
cmp
pusha
jle
push
mov
push
enter
in
mov
sub
sbb
cmpl
lahf
shl
and
in
pop
arpl
dec
fmuls
loop
les
inc
sub
add
bound
sub
bound
mov
rcll
push
cmpb
push
mov
xchg
cmpsb
es
inc
fiadds
test
notl
in
mov
in
xchg
and
sbb
lret
mov
xor
lea
push
and
dec
in
lret
les
mov
subb
shlb
xor
movsl
ficoml
adc
mov
mov
sub
add
mov
pop
mov
mov
mov
inc
adc
imul
push
ljmp
test
loope
in
repz
leave
jg
inc
popa
or
cmp
xor
or
scas
movsl
dec
mov
scas
push
pop
add
sub
inc
test
leave
add
fcomip
movsl
pushf
add
scas
in
jl
push
xchg
cmpsb
sub
jp
push
push
adc
xchg
adc
dec
arpl
push
push
or
mov
mov
test
fnstsw
mov
rclb
add
inc
mov
pop
scas
xor
addb
cmp
sbb
mov
clc
cmp
and
in
lret
adc
mov
cmp
ss
enter
dec
pop
mov
test
jl
sbb
inc
and
aas
pop
imul
popa
out
inc
scas
xor
and
mov
rolb
or
mov
pop
mov
dec
add
xor
stc
nop
jo
lret
and
add
mov
inc
or
fistpll
cwtl
dec
pop
dec
add
inc
push
or
mov
xor
xchg
push
cmpsb
and
test
xor
movsb
ret
dec
sub
mov
xchg
or
jl
pusha
stos
enter
ficompl
int
iret
mov
sar
movsl
pop
lds
add
cwtl
test
movsb
push
testb
cwtl
xor
daa
into
push
aas
loopne
add
jo
mov
xchg
movsb
jno
hlt
faddl
cmp
inc
sbb
cld
push
add
inc
cmp
push
out
popa
shlb
push
nop
adc
sti
ss
or
imul
push
push
mov
pop
sub
sbb
adc
or
test
add
pop
test
mov
xor
call
cmp
lcall
lahf
sbb
pusha
out
dec
dec
adc
cltd
or
xor
pop
andb
movsb
scas
insl
lods
into
addr16
repnz
inc
fnstenv
cmpl
lds
pop
pop
dec
jmp
push
addr16
mov
xor
mov
add
sub
add
je
test
xchg
xchg
inc
inc
jmp
cmpsl
sbb
jl
out
cwtl
imul
inc
and
add
addr16
cltd
inc
dec
inc
mov
pop
jge
gs
jo
dec
nop
nop
inc
push
sbb
ss
and
or
pusha
sub
hlt
int3
mov
pop
rorb
outsb
divb
mov
loope
xor
imul
jno
and
jl
mov
jno
pop
ficoml
and
imul
lods
cmp
ss
addr16
jg
pop
movsl
stos
gs
imul
sub
bound
lods
jg
push
jmp
fsubrs
add
sbb
xchg
movl
imul
scas
arpl
mov
andl
inc
add
jmp
sbb
jmp
mov
in
pop
std
inc
jns
mov
mov
add
fnstenv
pop
xchg
mov
inc
pop
test
in
cli
je
stos
push
and
mov
xchg
fwait
mov
lahf
jl
dec
leave
mov
add
inc
ljmp
ret
je
in
pop
adc
push
xchg
push
dec
cltd
adc
loope
dec
push
jbe
lea
gs
fidivrl
mov
cli
mov
xchg
sti
in
dec
fisttpl
jo
xchg
inc
pop
cmp
std
inc
mov
inc
push
lds
mov
cmp
mov
jle
and
rcll
pop
cmp
ja
pop
or
and
mov
jg
nop
mov
cmpb
sbb
or
dec
subl
ljmp
insb
jcxz
cmp
mov
and
repnz
pop
xchg
pop
mov
cmp
push
jb
bound
sbb
pusha
cmp
into
aas
mov
or
les
orb
inc
mov
stos
fwait
cmc
xchg
insl
dec
mov
sti
lret
and
add
mov
mov
xor
dec
pop
orb
out
add
addr16
push
shll
fbld
mov
push
inc
pop
inc
nop
sub
clc
ljmp
inc
add
out
jg
test
push
jle
jns
scas
leave
loop
sub
pminsw
push
add
idivb
pop
adc
mov
addl
and
xchg
shlb
xchg
fnstenv
add
xor
xchg
loope
scas
pop
pop
add
pop
sbb
jmp
mov
mov
test
movsb
inc
cmp
xor
sub
into
mov
inc
or
push
gs
mov
inc
and
ret
sub
int3
int
sbb
push
mov
and
es
push
lret
orl
push
xchg
shrl
lods
adc
pop
and
sub
movsb
cmpl
ljmp
mov
inc
iret
cmp
mov
sti
cli
add
sti
jo
lock
movsb
pop
shld
in
xor
lods
hlt
fwait
insl
nop
sbb
repz
mov
mov
add
adc
add
sbb
inc
cmp
adc
cmp
mov
nop
sub
sti
push
je
sbb
xor
add
repnz
notb
test
fldcw
pop
fiaddl
mov
jnp
inc
call
lcall
mov
jg
push
andb
cwtl
or
sub
push
orl
jg
cmp
mov
adcl
enter
pushf
enter
pop
push
push
xchg
ja
jno
mov
test
test
ret
cmp
enter
add
cli
mov
or
in
xor
push
test
mov
int
jnp
push
scas
pushf
adc
ret
xor
orb
xchg
out
dec
pop
sub
mov
add
imul
addl
inc
iret
sbb
or
mulb
or
mull
mov
and
add
ja
push
lret
push
clc
lea
add
popa
or
xor
mov
or
jno
cmpsb
push
fiadds
mov
push
or
add
fidivs
mov
pop
stos
add
cmp
in
pop
adc
or
pop
addr16
sbb
ja
ret
out
or
int3
dec
or
push
dec
sub
sbb
scas
sbb
mov
scas
leave
dec
std
dec
mov
add
mov
mov
hlt
or
xchg
sbb
and
lods
fisttps
ret
stos
mov
in
mov
mov
adc
sbb
stos
sub
mov
clc
and
and
sbb
add
scas
mov
xchg
stos
inc
cmp
int3
push
aam
in
ljmp
es
cltd
cmpsb
cmp
mov
mov
add
pop
xchg
movsl
insl
sahf
and
fdivrl
xchg
fists
xorb
jno
inc
cmpsb
push
ljmp
in
push
pop
cmp
add
test
add
fsubr
lret
jne
popf
test
mov
adcb
jge
dec
adc
stos
mov
or
or
and
test
and
jecxz
mov
push
stos
cltd
sub
filds
jge
cmp
scas
subb
pusha
xor
inc
xchg
aam
mov
cwtl
subb
mov
mov
dec
add
test
mov
pop
or
sub
enter
and
add
adc
add
addl
lea
mov
add
push
in
jno
inc
add
and
js
mov
mov
cmp
sub
sub
subb
div
or
iret
jns
or
xchg
mov
sbbb
sti
sub
cltd
imul
lahf
mov
loop
jg
push
and
cwtl
xor
push
aas
sbb
daa
jmp
scas
mov
cmp
fcompl
call
cmp
scas
push
and
mov
and
inc
and
sahf
pop
ja
inc
jno
imul
mov
cmp
push
filds
mov
sbb
sbb
push
es
xchg
lret
sub
or
sbb
mov
adc
cld
sub
movl
xchg
jle
nop
push
mov
stos
pop
fidivl
mov
scas
inc
sub
and
mov
data16
data16
adc
dec
in
jmp
jl
stos
bound
test
add
addb
mov
add
shlb
in
ljmp
xchg
pop
sbb
and
add
mov
arpl
or
and
sbb
mov
xchg
aas
lahf
xor
nop
pop
lret
stos
xor
cmp
push
clc
sub
sub
jns
pop
pushf
or
pop
pop
and
sbb
push
jmp
cwtl
movsb
adc
pusha
adc
mov
push
out
sbb
push
bound
mov
sbb
sub
mov
addb
mov
gs
std
fs
rcll
mov
lret
lds
in
addl
mov
sbb
sbb
dec
outsl
jb
bound
fmuls
pop
inc
iret
dec
movsb
cmpsl
mov
add
xchg
aaa
orl
add
or
lcall
fmull
mov
adcl
xchg
jg
sub
and
cmp
inc
jo
pop
inc
loope
pop
cmc
dec
adc
test
mov
cmp
sbb
mov
push
aad
add
and
and
nop
and
ret
ret
and
icebp
nop
leave
dec
rorb
inc
dec
loopne
in
cs
and
push
adcb
dec
inc
test
jnp
scas
inc
jge
mov
cmc
mov
in
xor
ja
cld
adc
out
pop
movsl
xchg
sub
cmp
and
xor
xor
xor
and
jle
lds
cmp
sahf
imul
mov
or
in
sbb
push
and
mov
and
mov
inc
push
es
stc
daa
add
stc
imul
movb
or
xchg
scas
test
dec
inc
sbb
xchg
int
or
fcoml
out
loop
sub
ret
push
nop
int
es
cmp
pop
jo
subb
lds
mov
cmp
enter
sbb
in
xor
xchg
jmp
outsb
add
pop
pop
repnz
outsl
mov
pop
xchg
cmpl
push
lahf
and
add
push
adc
fstl
orb
enter
lret
ret
sub
lret
test
popf
lods
mov
mov
or
hlt
push
iret
inc
jb
xchg
testb
daa
es
popa
scas
lcallw
repnz
stos
fmuls
xor
aaa
pusha
aas
fldcw
push
movsl
ret
sub
add
fsubp
popl
jne
addr16
scas
imul
jp
or
lret
xchg
aad
adc
jb
mov
xchg
sub
movsb
addr16
add
arpl
aam
pop
ljmp
insl
dec
mov
cmp
call
out
push
mov
subl
pop
shlb
cmp
cmp
and
incb
push
nop
gs
cwtl
add
adcl
pusha
mov
in
in
push
pop
push
sbb
or
sbb
sbb
sbb
loope
leave
ljmp
lret
out
arpl
loope
pop
add
into
mov
and
cmc
jmp
shll
mov
pop
push
sti
inc
push
add
andl
into
push
pop
test
iret
push
or
dec
mov
fildl
sbb
imul
fs
push
imul
lods
mov
je
pop
mov
mov
addr16
dec
dec
pusha
sbb
push
movsl
jmp
xlat
xchg
out
xor
xchg
sub
fmul
mov
xchg
inc
mov
in
andl
lret
and
arpl
push
lret
mov
mov
lods
nop
adc
lret
sahf
ljmp
fwait
jmp
push
adc
subl
lea
mov
cmp
into
xchg
adc
jo
and
add
movb
adc
sub
ja
stc
in
mov
dec
iret
add
test
and
daa
test
dec
fsubrs
add
fisttpl
movsb
inc
mov
push
xchg
dec
add
add
mov
lret
mov
xchg
das
dec
lods
inc
xchg
xor
jo
notl
popf
jecxz
add
pop
lods
inc
adc
add
fs
ret
push
lret
scas
inc
push
sub
fildll
cmpl
mov
mov
pop
mov
pop
mov
xlat
ret
imul
mov
sub
fisttps
popfw
aad
les
mov
nop
test
pop
fstpt
sub
mov
cmpsb
dec
iret
ret
push
loope
cmpsb
test
push
cli
xchg
push
mov
xor
cld
repz
push
fwait
repz
push
jns
xchg
or
push
int
mov
cli
pop
sbb
lret
icebp
xlat
push
hlt
pop
add
mov
xor
ljmp
jl
or
mov
sub
fwait
push
rcll
bound
movsb
sbb
jp
add
dec
movsl
push
jp
or
in
or
cwtl
loop
or
jg
imul
stc
ret
xchg
push
test
pop
mov
mov
add
cmpsb
iret
stos
pop
dec
adc
out
dec
mov
pusha
mov
test
inc
mov
leave
shrb
pop
in
ds
push
push
imul
mov
inc
out
cwtl
push
sbb
aas
mov
je
mov
adc
mov
add
sub
and
js
and
xchg
in
jo
test
rcrb
stos
insl
xchg
dec
dec
xor
cmp
fld1
jecxz
test
fbld
mov
adc
cpuid
addl
or
pop
subb
pop
in
or
stos
push
in
push
sbb
popf
jns
js
outsl
xchg
lahf
stos
dec
lcall
outsb
dec
push
cmp
inc
add
pop
gs
jmp
out
cmp
and
and
es
or
fistpll
xor
jle
cmp
test
pop
pushf
pop
sub
dec
in
or
mov
jns
outsl
mov
addb
mov
mov
rcrb
cmp
add
push
and
inc
cltd
imul
into
add
call
clc
and
fld
bound
das
ret
out
xor
push
xor
and
lds
fistl
mov
das
pop
movsb
out
dec
mov
push
popf
js
cwtl
in
cmc
orb
dec
fwait
inc
repnz
or
in
sbb
roll
cltd
shlb
scas
mov
in
add
loope
call
jge
dec
xorb
incb
push
push
shl
mov
aaa
cmp
dec
data16
flds
add
jp
loopne
pop
nop
test
and
mov
adc
add
pushf
jne
sbb
mov
adcb
ljmp
sub
mov
nop
pop
xchg
rolb
out
push
test
daa
xchg
movsl
ja
lcall
pop
test
sbb
loop
xor
xor
sbb
pushf
mov
sbb
xchg
subb
sbb
inc
mov
sahf
pop
andb
pushf
orb
sbb
mov
xchg
orb
subl
adcb
dec
adc
pushf
pusha
mov
loope
lret
mov
dec
add
mov
inc
or
pop
popa
sbb
and
fistl
mov
and
xorb
loopne
or
inc
sbb
sbb
nop
or
mov
sbb
xchg
push
pushf
mov
pusha
sbb
daa
inc
sbb
xchg
cmp
cmp
data16
sub
cmp
test
mov
pop
fstl
cmpl
frstor
or
sbb
push
sbb
in
andl
adc
movsl
and
test
inc
xchg
xor
pop
movsl
inc
xor
xchg
add
xor
sbb
les
xor
repz
pushf
bound
xchg
xchg
sbb
popa
addb
jecxz
or
ret
sbb
mov
lock
push
bound
sbb
dec
and
xchg
iret
xor
fs
mov
rclb
lret
mov
movsl
add
stos
sbb
adc
push
push
and
fcoms
rcl
repnz
add
mov
gs
adc
add
or
dec
push
xor
into
sbb
add
inc
cmp
sub
mov
xchg
or
add
dec
dec
push
or
or
mov
pusha
test
add
push
lret
mov
add
push
dec
mov
add
push
lret
or
adc
leave
gs
adc
xchg
dec
add
inc
jbe
loopne
jno
sbb
and
or
push
lret
push
push
adc
xchg
movb
inc
inc
dec
mov
cmpsb
add
sbb
not
mov
jbe
cwtl
add
in
fwait
adc
sub
or
sub
or
sbbl
aad
lds
xchg
cmp
push
movsl
mov
sub
sbb
or
xchg
mov
leave
mov
add
andl
inc
jns
fwait
sub
or
mov
or
xlat
and
add
inc
aad
imul
jle
addr16
mov
push
mov
jo
divb
push
xchg
xor
add
dec
test
push
jae
in
les
pop
and
cmp
xorb
imul
add
dec
cmp
rclb
fwait
lock
jno
mov
mov
sbb
adc
adc
mov
jns
dec
pop
jmp
stos
scas
adc
or
les
push
or
adc
sti
sti
sbbb
ja
dec
mov
loop
lret
dec
scas
mov
jge
fcmovne
std
sub
movsb
xor
jne
xor
in
xchg
movsb
push
add
lahf
rol
sub
sbb
imul
dec
addr16
iret
jmp
cmpsb
xor
movsb
ljmp
movsb
aad
rclb
and
test
pmulhw
mov
adc
fmull
in
mov
add
jmp
addb
fs
jle
xchg
lret
mov
adc
mov
or
mov
lea
sub
jno
jne
and
into
gs
icebp
cmp
stc
cmp
mov
jge
cmc
adc
dec
mov
push
stos
ja
xlat
sbb
jo
andl
ds
mov
iret
jle
lds
mov
add
jg
in
xorb
adcl
mov
jne
pop
mov
leave
sbb
mov
push
and
lret
inc
xor
dec
pop
test
lea
sub
popa
xor
mov
push
loopne
jno
mov
cmpsl
and
push
sbb
push
or
int3
sbb
imul
mov
and
pop
les
jmp
jnp
ficomps
iret
mov
pusha
pop
enter
push
mov
sbb
sbb
mov
mov
fildll
ljmp
adc
mov
in
mov
lods
inc
shlb
aas
hlt
jnp
cltd
cmpsb
mov
sub
subb
incb
das
push
inc
insl
adc
fisttps
add
cmc
add
xor
outsl
mov
inc
pop
cmp
bound
pop
fstpt
push
aam
mov
pop
nop
cmp
mov
adc
addr16
loope
icebp
pop
lret
push
lods
or
dec
jle
sub
sbb
add
push
jns
dec
jge
pop
sbb
pop
push
scas
jb
mov
out
cmp
or
mov
out
and
adc
or
cmp
dec
test
adcb
xchg
push
iret
sub
push
mov
addr16
ret
add
pop
sbb
adcb
xchg
jge
cmc
cmp
inc
cmp
fldenv
call
sbb
mov
jle
fstl
mov
popa
enter
das
and
add
cmp
jmp
mov
out
push
leave
jecxz
icebp
iret
mov
add
mov
cmpsb
sub
into
jb
pop
pusha
sub
lds
test
loop
xchg
and
frstor
add
fs
aas
fsts
lea
jge
mov
lods
sbbb
sub
test
mov
adc
loopne
andl
nop
sbb
mov
xor
mov
add
orl
shlb
jnp
les
mov
adc
or
clc
jmp
jl
jmp
popaw
cmpb
cmp
push
xor
xor
lret
push
sub
jno
dec
and
out
ret
dec
inc
icebp
and
and
jno
pop
sbb
push
dec
sarl
lods
bound
cwtl
adc
add
mov
inc
mov
sub
add
ret
cmp
fidivrl
jno
inc
dec
in
pop
rolb
pop
push
inc
inc
and
addl
xor
inc
sub
loopne
push
dec
add
inc
mov
cmp
out
std
inc
xchg
xor
sbb
mov
and
pop
hlt
adc
add
cmp
adc
inc
cli
xchg
into
loop
lret
and
insl
pop
inc
jne
jae
icebp
fdivr
add
xchg
test
loopne
push
test
xchg
ljmp
out
leave
stos
pushl
mov
or
jge
in
pop
lret
mov
inc
iret
dec
mov
scas
movsb
ret
ljmp
mov
pop
inc
ret
nop
cmp
mov
lret
shll
inc
outsb
fcomp
add
out
scas
dec
sbb
inc
test
add
push
imul
test
inc
hlt
clc
subb
and
pop
xchg
lock
push
in
dec
ficompl
mov
adc
cmp
subl
repnz
scas
arpl
dec
sub
aaa
addl
jg
outsl
add
dec
scas
mov
dec
adcl
pusha
sub
push
adc
out
and
test
pop
ds
adc
mov
lret
mov
or
xorl
and
pop
dec
inc
leave
das
test
jp
mov
pop
addr16
divl
inc
shlb
subb
sbb
stos
out
inc
arpl
add
xlat
or
or
orl
cmpsb
movsl
lea
mov
xchg
dec
cmpsl
sahf
mov
lret
cwtl
rorb
jge
jnp
and
or
fisttps
mov
mov
lods
dec
inc
adc
cmp
sbb
xchg
xchg
or
fstps
lock
mov
sahf
mov
add
pop
adc
pop
lret
repnz
sbb
fs
inc
rolb
outsl
add
pushf
nop
into
inc
lds
mov
ret
mov
lret
cs
xor
jmp
insl
pushf
ss
xor
sbbl
test
cmc
or
pop
sbb
push
jl
cmp
cltd
inc
mov
or
ror
clc
enter
mov
push
mov
sub
inc
cmpsl
sbb
rclb
int3
js
scas
ret
mov
mov
push
iret
inc
lds
ss
mov
or
aas
dec
xchg
push
xor
push
in
or
cmp
ss
cld
ds
mov
leave
je
dec
test
jg
repz
pop
and
push
lcall
push
add
cld
inc
pop
addb
icebp
stos
clc
call
std
mov
cltd
pusha
mov
out
sub
fldt
add
jl
add
aaa
enter
sbb
mov
dec
inc
stos
lahf
or
jg
pop
sti
inc
stos
jle
iret
shlb
imul
or
cmp
add
sbb
outsb
je
ss
js
adc
das
xchg
mov
xchg
jo
mov
mov
fisubrs
orl
add
pop
loopne
test
inc
push
pop
and
inc
cmc
mov
mov
ficomps
test
sbb
lcall
in
push
ljmp
mov
imul
push
xor
jnp
or
imull
test
js
adc
pop
mov
lret
sbb
in
shrl
jbe
outsl
inc
mov
or
or
sarb
mov
cltd
sbb
lret
jge
lret
lock
push
adc
inc
push
addb
in
mov
jge
jnp
ljmp
add
dec
push
mov
dec
xor
jno
push
mov
jecxz
and
test
add
cmpb
dec
inc
mov
mov
gs
jb
add
push
and
jmp
jp
pop
pop
cmpsb
mov
sbb
sbb
or
push
adc
pop
lods
popl
pop
cwtl
cmp
mov
call
push
adc
and
scas
int3
insb
push
cltd
stos
mov
add
xor
or
and
sti
jnp
sbb
fmulp
orb
sbb
in
lea
add
xor
test
clc
sub
loop
xor
les
push
dec
addl
xor
scas
aas
lock
sbbl
ficomps
adc
mov
xchg
cmp
push
sbb
cmp
sub
sbb
and
sbb
xchg
inc
push
sub
shrl
dec
and
and
sub
int
sub
xchg
ljmp
gs
mov
cmp
sub
sub
lods
scas
add
lret
aas
add
inc
pusha
ret
ja
int3
or
stos
mov
or
lds
push
data16
sbb
cld
sub
mov
mov
add
outsl
sbb
jno
inc
leave
jo
les
ljmp
sub
out
add
xchg
sbb
mov
iret
pop
xchg
addr16
push
adc
adc
testl
rorb
xchg
inc
lds
loope
jg
jecxz
out
pop
ds
ss
sti
cwtl
out
pop
adc
adc
hlt
jns
add
call
sub
dec
pop
fs
les
inc
cmp
jmp
test
xor
cmp
sbb
dec
lcall
add
sbb
loop
shrl
fbstp
xor
mov
inc
jecxz
pusha
repnz
out
lahf
outsl
shlb
sbb
mov
bound
iret
in
arpl
gs
lret
mov
stc
scas
add
sbb
shrl
or
out
push
and
mov
sbb
ljmp
loop
cltd
out
or
jb
iret
imul
and
jb
mov
xchg
and
dec
aas
and
movsb
inc
js
scas
sub
cmp
mov
mov
fdivs
ss
inc
dec
mov
mov
adc
hlt
test
sbb
push
and
add
inc
test
pop
and
or
jge
xor
push
inc
out
sbb
mov
cwtl
and
adc
les
pop
xchg
jmp
negl
sbb
lret
or
jmp
and
fidivl
jne
test
lea
arpl
in
or
xor
xor
cmp
sbb
test
hlt
mov
add
cli
lahf
testb
add
scas
inc
xor
jge
out
adc
pop
xor
push
lea
cmp
cmp
jns
mov
jecxz
test
mov
cmpb
and
loopne
adcb
xor
xchg
dec
mov
mov
int3
je
fucompp
movsl
add
jo
mov
or
cmpsb
sbb
pop
push
or
in
push
out
or
lret
stos
dec
inc
lret
stos
jnp
sub
movsb
imul
add
add
sub
add
sbb
add
mov
jo
push
and
stos
dec
mov
dec
xchg
loopne
loop
or
mov
pop
dec
cli
jp
xchg
jb
and
xchg
lods
orb
dec
arpl
aas
jp
add
fcompl
je
sbb
xorb
xor
fwait
int
cmp
sbb
fld
ret
add
jle
popf
dec
and
movsb
ds
inc
out
call
xor
fmulp
in
inc
xor
push
out
or
cmp
push
sub
inc
pop
xor
addb
mov
ljmp
enter
cmp
adc
mov
push
cmp
and
mov
xchg
xor
stc
mov
mov
scas
mov
add
mov
add
mov
add
ret
out
xor
add
dec
xchg
imul
popf
lcall
xchg
or
andl
inc
sub
sahf
and
or
lret
dec
mov
xchg
subl
in
inc
sbb
lods
or
mov
push
mov
rol
add
push
lea
xchg
cs
sub
popa
inc
mov
mov
push
pop
in
addr16
pop
pop
popl
sbb
xorl
cwtl
mov
inc
adc
test
sub
push
or
inc
test
jne
push
dec
xor
push
clc
and
dec
sti
sub
sub
imul
xor
repz
add
lret
daa
xlat
test
ljmp
addr16
jp
loope
iret
pop
imul
js
dec
add
dec
orb
stos
xor
cmp
push
sub
imul
inc
ret
and
dec
popf
imul
cmp
jmp
sub
or
notl
rol
movsl
inc
adc
shl
adc
pop
loop
inc
repz
jge
add
inc
xor
add
or
push
adc
rorb
out
imul
or
pusha
cmp
pop
rclb
cmp
mov
dec
jns
push
test
arpl
stos
jae
or
xlat
mov
in
orl
popa
inc
out
gs
iret
andb
pop
sbb
pop
and
jbe
or
inc
mov
inc
pop
int3
dec
fs
inc
push
and
inc
jmp
xchg
jl
push
sbb
das
sub
cwtl
in
insb
ljmp
jmp
jecxz
dec
or
out
inc
push
cmpsl
mov
inc
lret
cmp
sub
mov
lret
aaa
cmp
andl
adc
int3
inc
or
or
inc
lret
js
pop
and
sub
xchg
mov
add
push
mov
or
inc
pop
xor
and
movl
in
push
and
lods
fidivrs
into
nop
sub
sbb
fisubl
xlat
jb
sbb
outsb
inc
pop
xchg
leave
mov
js
mov
and
cmpsb
aam
in
jae
jbe
jbe
les
lods
jo
add
rclb
jge
popa
addr16
inc
mov
inc
in
add
add
mov
cli
rolb
test
dec
adc
andb
cwtl
loop
sub
movb
dec
sbb
inc
xchg
nop
dec
dec
mov
cmpb
mov
and
pop
lcall
inc
popa
xchg
sub
sbb
pushl
mov
popf
lea
add
sub
mov
movsb
jns
nop
lods
adc
and
xor
sbb
icebp
pop
inc
pop
push
jbe
push
mov
stc
sbb
xchg
fimuls
mov
daa
or
add
pop
xor
mov
xor
and
sahf
lcall
pop
popf
les
pop
cld
adc
mov
pop
and
test
sub
jbe
sbb
cmp
out
out
and
popa
cmpsl
push
xor
jne
cltd
nop
loop
jnp
push
push
cmp
dec
inc
or
nop
and
jmp
repnz
mov
movsb
pop
sub
mov
xchg
ret
rorb
nop
mov
notl
in
xchg
xchg
mov
loopne
push
js
adc
mov
imul
pop
or
mov
addr16
pop
xchg
dec
gs
stc
xor
jno
pop
xor
mov
and
push
negb
add
inc
movsb
xor
outsb
mov
adc
xorl
lret
dec
push
test
sbb
cmp
popf
add
pop
fiadds
xor
cwtl
inc
lcall
mov
push
repnz
mov
mov
inc
loopne
xchg
dec
decl
inc
or
and
cmc
cwtl
subb
sar
adc
sbb
mov
adc
ljmp
inc
xchg
ss
jp
pop
mov
xchg
add
fidivl
inc
or
and
xorl
imul
popf
and
xchg
xchg
xor
push
ds
ds
sub
dec
out
mov
mov
mov
lea
pop
or
and
clc
shl
and
sub
fisttpl
xor
push
and
daa
sbb
dec
repnz
push
dec
cmp
dec
push
mov
or
xor
test
inc
and
sbb
adc
enter
bound
jge
inc
es
cmpsb
mov
gs
xlat
cltd
mov
sbb
mov
dec
imull
add
or
mov
loopne
and
cmc
mov
mov
mov
jle
lret
xchg
push
nop
or
mov
add
popa
push
dec
or
add
push
or
lret
or
add
xor
repz
call
sub
shrb
sbb
adc
arpl
nop
test
sbb
pop
popa
andb
shlb
mov
loopne
xchg
sub
pop
push
xadd
adc
adcl
fldl
pop
test
es
test
inc
sbb
cmp
sti
in
jae
cmp
gs
xor
mov
mov
cs
sbb
mov
or
sbb
out
mov
or
sub
or
push
mov
test
adc
and
fs
mov
push
or
push
mov
pop
jns
sbb
mov
adc
sbb
repnz
jmp
adc
clc
adcb
data16
addl
dec
mov
add
arpl
repz
roll
repz
xchg
loop
jne
sbb
scas
add
hlt
add
inc
or
adc
add
cwtl
dec
testb
cmc
add
imul
xor
sbb
push
je
xchg
fdivrs
scas
mov
or
bnd
enter
sbb
dec
add
mov
dec
movsb
mov
pop
inc
mov
lods
mov
filds
daa
gs
in
jmp
stc
sub
mov
loope
cmp
add
popf
and
xchg
or
cmp
ud0
scas
mov
loope
lret
xorb
test
enter
enter
pop
xchg
and
add
scas
imul
pop
gs
test
sub
ss
add
adc
mov
mov
jmp
pop
xor
xchg
imul
ret
mov
cltd
xchg
or
mov
lcall
xor
insl
inc
sub
js
mov
sbb
jae
cmc
cs
cmpsl
fwait
pusha
pop
ret
daa
fndisi(8087
fdivrl
dec
push
jmp
xor
xor
push
sbb
xchg
sub
sub
lcall
push
xor
mov
out
push
dec
push
imul
jg
in
push
mov
inc
movsl
fisubl
or
xchg
or
lds
pushw
mov
mov
xor
sbb
sbb
push
pop
xchg
mov
dec
or
push
xor
adc
and
dec
push
lahf
loope
jge
and
or
mov
xchg
dec
mov
push
pop
aaa
inc
mov
mov
cmp
sub
bound
cmp
and
cs
les
xor
xchg
xchg
jb
rorb
mov
movsb
cmp
xchg
dec
xor
loope
fistpll
adc
xchg
cld
or
adc
clc
push
ja
hlt
rcll
mov
stos
ljmp
or
enter
push
scas
xor
stos
cmp
aaa
imul
lahf
and
mov
xchg
lock
mov
test
dec
or
or
mov
push
inc
xor
xlat
sub
jg
push
xor
adc
mov
mov
and
or
mov
pop
aad
ljmp
pushf
dec
stos
in
xchg
rcll
add
pop
add
sub
mov
push
les
imul
lock
add
addl
mov
nop
mov
outsl
pop
leave
mov
inc
push
mov
lock
aas
pusha
cmp
pop
dec
daa
enter
push
jge
cmpsl
aam
hlt
es
or
fldl
mov
pop
ror
enter
add
add
xor
inc
xor
aas
insb
sub
scas
aas
popa
jno
inc
jno
cmpsl
dec
inc
xchg
test
inc
or
adc
jb
or
push
push
sbb
mov
adc
and
imul
xchg
dec
dec
enterw
fwait
jg
dec
lods
in
xchg
adc
mov
inc
repz
add
xchg
repnz
in
push
sbb
test
mov
fisttpl
test
push
push
inc
or
and
adc
push
jae
daa
push
in
ficoml
inc
ret
add
push
hlt
mov
mov
xchg
push
or
das
sbb
jg
inc
rorl
sbb
in
xor
aaa
sub
loope
sti
popa
in
cmp
mov
push
or
ret
stos
mov
repz
xor
and
cmp
imul
lea
lock
mov
pop
sub
popa
mov
xchg
xchg
pop
or
or
jae
or
hlt
out
jnp
ret
movsb
dec
add
sub
mov
push
xlat
sbb
xchg
stos
and
insl
and
mov
or
dec
cld
mov
dec
popf
xchg
clc
fucomip
roll
std
jecxz
lock
aas
cs
into
xchg
loop
inc
or
pop
lods
andb
sub
lods
and
ja
stos
xor
xchg
negl
pop
test
lret
hlt
xorb
inc
andl
in
pushf
js
fs
test
sbb
imul
pop
pop
sub
jge
pusha
pop
cmc
je
pusha
lea
scas
lret
adc
gs
rolb
incb
inc
loopne
mov
into
or
push
sub
xor
xchg
sarb
gs
sbb
je
imul
test
fistpl
push
or
stos
pop
out
jnp
push
pop
jnp
cmc
fwait
lahf
rolb
loope
stos
xor
push
loop
fimuls
mov
jmp
pop
sbb
repnz
popf
cmp
pop
ljmp
lret
mov
scas
push
dec
sub
add
nop
stos
test
or
add
pushf
lcall
sti
xchg
movsl
inc
aas
jnp
mov
mov
cmp
insl
xchg
push
pop
xlat
and
test
pop
push
sbb
push
lahf
cli
mov
daa
test
scas
add
sbb
nop
xchg
cmp
add
sbb
sub
out
cmp
aas
ret
xor
push
dec
push
sub
sbb
sub
shr
inc
xor
push
fadd
or
push
or
out
cmp
xor
bound
push
cltd
cmpsb
mov
dec
add
xchg
sti
lea
data16
loope
mov
sbb
jecxz
inc
mov
in
adc
push
inc
sub
mov
push
inc
cmp
push
je
movsb
adc
cli
mov
push
push
push
stc
dec
ds
dec
das
inc
ret
imul
stc
mov
stc
mov
add
sahf
push
add
jle
jge
push
push
adc
shrl
rcll
ret
mov
lea
inc
test
mov
sbb
dec
ret
mov
bound
or
int
into
fdivr
push
push
mov
insb
test
mov
repnz
pop
cmp
sub
movsb
mov
test
int3
mov
popf
pushf
and
es
or
lods
out
jmp
mov
nop
pop
mov
mov
divb
ds
lcall
and
shll
stos
iret
dec
mov
fnstsw
cmpsl
les
lcall
sahf
jg
push
mov
sahf
shrb
fcomp
xchg
es
mov
sbb
add
sbb
stc
sarl
fisttps
xor
push
pop
stos
imul
nop
or
movsb
xlat
sbb
adc
xor
xchg
push
xor
add
lock
xchg
jbe
incb
or
movb
jb
testl
push
hlt
inc
orb
ret
cmp
adc
push
mov
loop
lds
mov
push
test
jno
inc
cmp
mov
push
or
and
and
testl
push
test
addb
sbb
ds
addl
loope
xor
iret
xchg
in
add
clc
inc
scas
enter
cmpsb
sub
out
dec
xor
lcall
cltd
cmp
cmp
cmp
fbld
inc
gs
clc
subb
and
xor
push
shld
sbb
mov
and
dec
cmp
std
and
push
aas
lods
sub
sbb
stos
mov
in
out
test
jmp
lods
dec
into
repnz
xchg
andl
sbb
add
je
cmp
sbb
mov
iret
ret
movsl
mov
fldt
xchg
or
lcall
rol
jg
cld
in
sbb
add
psubq
or
ljmp
in
or
xor
xor
sbb
push
dec
mov
mov
pusha
int
gs
clc
xchg
pop
shll
or
sub
jno
mov
mov
mov
mov
xchg
loop
lcall
jno
sbb
cld
push
push
inc
dec
dec
movsl
scas
inc
fldenv
lret
sbb
pop
int3
mov
in
xchg
pop
movsb
arpl
dec
push
cmp
pop
out
sub
int3
or
dec
pop
inc
ss
es
cld
and
in
mov
dec
xchg
mov
sub
pusha
fidivl
cmp
sti
or
jp
sahf
jo
push
bound
jg
mov
jg
push
push
fstl
arpl
jo
sbb
sahf
out
std
sub
popl
arpl
jge
mov
push
repz
aad
xor
add
or
adcb
mov
fisubl
std
pop
loopne
add
push
mov
std
dec
pop
push
dec
aaa
sub
dec
add
adcb
fdiv
jo
stos
inc
xor
imull
in
xchg
mov
sbb
push
sub
addr16
loop
adc
out
push
fstps
aas
out
mov
shl
fwait
bound
push
xor
dec
lahf
jae
pop
ljmp
jno
adc
repnz
sti
push
adc
addr16
je
imul
dec
dec
movsb
out
into
repz
push
xor
or
mov
sub
pop
jnp
add
jns
mov
mov
push
and
scas
shl
pop
rcrb
pop
scas
ss
xchg
jae
jae
frstor
clc
lcall
movsb
orl
sub
mov
fstpl
cmp
cltd
lock
sbb
pop
cmp
int
aas
int
xchg
outsl
subl
cmp
jb
ficoml
sbb
sbb
std
les
add
enter
add
mov
pop
mov
test
cmpsb
add
cltd
addb
ret
and
sub
cs
into
cmc
clc
mov
mov
and
inc
and
xchg
imul
cltd
cmp
outsl
mov
push
mov
stos
sti
pop
rolb
movsl
pop
imul
frstor
js
popa
and
inc
addr16
sbb
or
add
scas
inc
sub
jge
jae
call
addb
popa
inc
push
add
lret
lahf
movsl
mov
stc
add
sti
adc
or
push
pop
arpl
jb
mov
jns
loop
push
and
add
leave
mov
mov
inc
xor
mov
and
mov
loopne
jnp
inc
movsb
xor
adc
jmp
pop
dec
mov
cmp
xchg
iret
sbbl
sarl
jnp
daa
add
subb
lret
in
movsb
inc
cmp
mov
enter
arpl
mov
daa
or
push
adc
rorb
cmp
subb
xorl
dec
jmp
cmc
cwtl
test
xchg
or
cmp
daa
int
mov
ret
push
jle
movsl
or
out
and
jle
aas
fcmovne
inc
dec
stos
and
shrb
cld
dec
insb
icebp
mov
mov
cltd
fildl
adc
mov
pop
roll
data16
in
add
xchg
or
jb
mov
lret
fistpl
fimuls
ret
dec
aas
fildll
jne
fildll
adc
or
in
jno
xchg
pop
aaa
pushl
imul
aad
or
add
pop
inc
mov
xor
xchg
xor
xchg
repnz
bound
movsb
xchg
fmulp
xor
and
or
gs
push
xorb
and
sub
jge
lea
adc
cmc
in
xchg
or
mov
cmc
andb
inc
inc
cmpb
and
jecxz
int
inc
test
bound
pop
nop
add
mov
and
movsl
and
push
shlb
xor
or
addr16
pop
scas
arpl
shll
jl
cmp
or
mov
mov
cmp
popa
insl
fistps
push
les
xor
jg
loopne
cmp
pushf
push
mov
hlt
addr16
test
xor
aaa
rorl
add
test
dec
mov
cmp
test
pop
mov
pushf
movsb
ret
jnp
dec
push
xor
subl
push
call
test
pop
ret
in
or
aad
lea
adc
xchg
ret
jge
lds
fsincos
cwtl
sbb
push
rcrb
push
push
iret
xorb
movsl
fistps
xor
fldt
xor
aam
pop
sub
or
sbb
jmp
in
and
inc
mov
mov
and
scas
les
fistl
subl
cli
fstpl
out
popa
cmp
inc
and
mov
popa
stos
add
aaa
mov
push
fidivs
push
mov
pop
sbbl
mov
or
sub
leave
lcall
sbb
loope
sti
xchg
mov
insb
iret
and
mov
add
sub
out
sbb
and
pop
sbb
jb
pushf
dec
fidivl
inc
pushl
inc
mov
xchg
ljmp
xor
or
jl
or
sbb
push
jmp
push
xchg
lcall
jmp
mov
lea
cs
sbb
inc
cmp
sti
push
shr
cltd
mov
sub
insb
dec
das
nop
repnz
iret
popf
cmpsb
mov
sbb
push
dec
push
adc
fs
mov
lock
iret
xchg
std
pop
add
mov
mov
add
adcl
xchg
mov
pop
cmp
dec
mov
xchg
jge
xchg
in
or
add
xor
shll
and
cmpsl
dec
nop
test
cld
dec
movsb
addr16
push
imul
mov
sub
lods
mov
rcrb
xchg
xchg
icebp
fiaddl
push
mov
sbb
adc
movsb
fmuls
sbb
or
sti
in
cwtl
jmp
xchg
popf
rcrb
inc
xchg
pop
sub
shlb
pop
sarl
rcll
sbb
lock
pop
orl
sub
lods
cmp
test
out
mov
push
or
mov
aam
lahf
icebp
gs
mov
inc
jne
and
sbb
outsb
cmpsb
adc
add
sbb
inc
mov
in
push
push
jmp
sbb
mov
jge
inc
push
or
mov
or
add
pop
sub
sbb
lea
mov
add
test
jl
gs
jb
pop
mov
inc
ljmp
popa
push
pop
ss
and
jp
mov
adc
ret
xor
nop
imul
sbb
enter
sti
xchg
push
seta
mov
dec
mov
jnp
mov
and
adc
jmp
dec
xchg
arpl
add
dec
popa
cmp
into
or
xchg
mov
adc
rclb
repnz
xchg
adc
data16
mov
sub
fidivl
ret
roll
push
lret
int
scas
pop
sub
or
mov
stc
adc
test
mov
test
iret
testb
dec
stc
dec
mov
call
push
jl
inc
pop
sbb
mov
inc
adcb
cmc
cmp
popa
movsl
add
clc
sbb
stc
adc
lock
add
pop
aaa
ss
es
cmp
and
cmp
pop
mov
push
add
mov
xor
and
inc
andb
movsl
adcb
add
sbb
xchg
or
rcl
or
subl
cmp
push
loop
aas
loopne
jmp
mov
inc
sbb
lret
dec
mov
mov
fwait
adc
fwait
xchg
movsb
mov
out
sub
sub
inc
mov
add
sub
inc
or
pop
mov
out
push
ficomps
cwtl
mov
faddp
add
test
xchg
lods
int
inc
add
lods
jg
and
add
test
or
enter
sbb
addb
push
add
rclb
inc
and
lea
push
out
popf
add
shlb
repz
repnz
xchg
mov
xor
popf
pop
stos
xchg
dec
pop
sub
movsl
push
dec
pop
sub
inc
mov
popf
mov
cmp
sbb
clc
pop
jmp
loopne
push
sbb
stos
mov
movsb
sbb
test
test
and
xchg
js
mov
lcall
mov
mov
fadds
or
cmp
jnp
shrb
pop
sbb
repnz
mov
fsubr
aam
add
mov
jo
inc
scas
and
lcall
scas
xchg
jns
in
test
sbb
cmovl
mov
repz
xchg
add
lret
je
add
pop
rorl
loope
cmpsb
js
gs
repz
dec
push
or
fldt
pop
outsl
push
bound
popa
leave
mov
cmp
in
popa
stc
add
push
stos
or
or
and
xor
loopne
push
lds
xor
ljmp
daa
or
add
inc
mov
xchg
rcll
mov
push
cmp
push
jo
fwait
and
add
inc
xchg
aaa
and
mov
in
adc
xchg
aam
stc
in
add
cmp
mov
pop
mov
mov
lds
ret
in
cmp
into
inc
adc
mov
fsubrp
in
inc
test
ja
int3
cmp
cld
push
flds
push
add
dec
dec
bound
pop
sub
or
or
xor
out
js
sbb
dec
dec
push
int3
jns
test
sbb
inc
sbb
sbb
push
jmp
push
rcr
enter
pop
and
scas
push
in
pusha
jp
dec
jge
ret
movsl
data16
mov
xchg
or
cmp
add
pusha
mov
sbb
imull
stos
jge
push
cmpsl
int3
fldcw
or
sub
mov
lods
cs
add
xchg
or
add
jo
adc
inc
test
int3
movsb
sahf
in
lcall
repz
aad
cltd
lods
add
in
push
or
fnsetpm(287
mov
imul
add
sbbb
divl
mov
test
push
test
into
insl
and
xchg
mov
sub
int
sbb
rolb
cmpsb
stos
xor
mov
sbb
add
andl
ret
sahf
inc
popa
rclb
xorl
inc
insb
ret
xor
and
andb
fstpt
and
mov
clc
inc
loop
std
xchg
mov
fisubrs
in
test
out
sub
les
mov
test
dec
sarl
movsb
addl
xor
xor
xor
dec
out
adc
push
cld
cmp
pop
pop
clc
xor
jbe
movsb
push
ret
xchg
jecxz
dec
push
cmp
in
add
jne
jns
imul
cmp
mov
xlat
test
add
push
mov
notl
push
pusha
xchg
mov
lret
xchg
add
pop
in
pop
sub
jb
repnz
mov
sbb
iret
mov
je
test
mov
adc
mov
fbld
loopne
dec
push
test
and
dec
ljmp
add
sbb
cmpsl
xor
xchg
sbb
and
and
or
mov
out
xor
mov
jmp
xchg
or
push
sbb
pop
inc
out
mov
jg
cmp
dec
outsb
popa
sbb
pop
orb
inc
add
stc
inc
rol
jbe
addl
xor
inc
mov
adc
jecxz
js
lea
popa
stc
mov
dec
xor
xor
adc
mov
mov
and
sub
pusha
sbb
mov
jle
pop
into
cmp
mov
xchg
testb
jns
loopne
or
jnp
es
mov
push
sahf
push
cmp
add
add
cmp
cmp
pop
fadds
push
or
inc
mov
cmp
and
stc
nop
mov
adc
add
push
mov
icebp
mov
pop
mov
out
aam
scas
imul
pop
shll
push
push
fisttps
add
in
jae
mov
sbb
fstpt
or
pop
and
das
test
mov
fldcw
adc
cmp
add
and
bound
hlt
xor
add
loop
pusha
clc
ss
dec
mov
out
mov
dec
dec
xchg
xchg
or
mov
push
push
mov
xor
mov
std
daa
dec
add
or
push
lahf
jge
ret
fbld
add
sbb
pop
mov
push
or
adc
imul
sub
out
aas
pop
hlt
inc
pop
sbb
lods
sbb
add
leave
popa
rcrl
aaa
inc
pop
mov
sbb
inc
push
and
cltd
test
mov
lcall
push
lahf
add
add
sbb
stc
add
mov
scas
adc
popa
jno
or
into
frstor
addr16
adcl
pop
popl
and
mov
dec
aad
mov
or
lret
in
sbb
std
insl
jae
or
and
popl
sbb
pop
sbb
out
jno
mov
push
or
adc
lret
dec
jmp
negb
pop
adc
ret
repz
test
sbb
test
jb
mov
lret
movsb
jecxz
adc
add
adc
bnd
mov
dec
aas
sbb
aam
xchg
out
jmp
repnz
jmp
push
add
mov
jecxz,pt
stos
out
js
sbb
lock
or
mov
out
idivl
or
icebp
push
inc
xor
shrb
movsb
lcall
push
mov
flds
leave
or
push
ljmp
lods
or
imul
or
push
add
adc
popf
insl
nop
aas
add
sub
dec
subl
cs
xchg
ljmp
or
or
sbb
jg
inc
mov
xchg
lret
pop
mov
add
or
movsb
xchg
popf
xor
lret
jp
jb
jno
ljmp
adcl
icebp
adc
mov
dec
jmp
xchg
fisttps
push
xchg
movl
and
test
cmpsb
cmpsb
inc
addr16
into
movsb
push
fwait
subl
pop
push
push
orl
fiadds
push
cmp
loop
jg
call
inc
mov
aaa
mov
add
sbb
pop
out
xchg
add
jmp
pop
xchg
xchg
add
inc
sub
addl
xor
fmuls
dec
sbbb
sub
and
or
in
cwtl
outsl
adc
xor
aad
jbe
pop
xchg
stc
fcmove
fbstp
push
sbb
arpl
push
xchg
and
push
adc
shl
scas
fisubrs
xchg
or
sti
sbb
sub
xor
faddl
mov
pop
add
sbb
cs
notl
add
and
xor
mov
and
inc
jg
push
and
sti
xor
sbb
mov
dec
adc
push
lods
jbe
mov
and
lret
cld
gs
sbb
pop
cmpsb
push
and
sub
mov
enter
lods
movsl
dec
xorb
dec
aas
jo
inc
jecxz
cltd
inc
test
add
dec
loopne
in
enter
jmp
js
cmpsl
in
cltd
repnz
jne
sbbb
sbb
xlat
ret
push
or
sbb
sbb
and
cmp
out
arpl
sbb
rolb
jo
mov
les
push
imul
adc
stc
test
pop
lods
clc
inc
or
fisubl
fistpl
aaa
sub
mov
fs
add
adc
and
call
dec
inc
scas
lock
cmp
lock
push
cmc
mov
fstpt
sbb
sbb
adc
in
es
mov
in
dec
lods
or
sbb
iret
cmpsb
pop
stos
cmp
inc
mov
mov
icebp
arpl
int3
mulb
pop
repz
mov
cmp
mov
addb
pop
stos
shr
imul
fwait
cmp
mov
outsb
jnp
add
ja
xchg
push
mov
repz
repz
push
mov
xor
jecxz
or
and
push
xor
sbb
push
sbb
movsb
icebp
popl
js
lds
subb
hlt
cwtl
push
xlat
or
aas
jb
xchg
sub
pop
sbb
push
cli
push
outsb
ja
fisubs
push
fsubrs
pop
and
xchg
jmp
dec
popf
dec
stc
add
xor
adc
orb
and
stc
and
pop
xchg
pushf
jge
mov
xchg
push
std
xor
sbb
pop
cmp
push
ja
push
adc
divl
mov
add
and
incb
stos
movsl
pop
add
lret
inc
or
inc
jb
xor
movsb
das
pop
and
stos
roll
adc
out
adc
out
test
enter
xor
xchg
pop
out
push
in
faddl
test
arpl
sub
bound
cmc
sahf
lret
push
xor
add
xor
sub
popa
leave
or
inc
enter
rorl
subb
pushf
rorb
mov
movsb
xor
adc
inc
popl
stos
xor
lret
push
pushf
adc
jns
sti
and
rorb
mov
pop
bound
divb
adc
dec
mov
xchg
dec
cmp
fbstp
in
sbb
lock
andl
pop
scas
dec
inc
adc
sub
mov
into
sub
or
sbb
inc
out
xor
add
jl
and
pop
call
fstl
xchg
lds
inc
inc
dec
sub
flds
mov
and
test
xor
xchg
mov
mov
or
imul
and
mov
ljmp
mov
or
xchg
sbb
mov
aas
popa
or
fimuls
repz
test
mov
mov
inc
push
add
adc
adcb
leave
loopne
cmp
push
and
in
stos
mov
fs
mov
inc
adc
lret
pop
xor
inc
testl
jmp
xchg
inc
shlb
push
cmp
cmp
xor
jbe
pusha
loop
and
xor
mov
ret
pop
or
mov
and
add
and
inc
out
je
pop
push
jp
cmp
mov
popf
and
pushf
lods
imul
dec
out
cmp
jge
inc
xor
push
or
adc
xchg
sub
inc
dec
push
xor
add
push
popa
icebp
orl
scas
scas
pop
idiv
dec
jecxz
pop
cmpsl
clc
lret
fistps
push
jge
push
xor
sbb
push
mov
mov
nop
pop
mov
sbb
int3
mov
mov
mov
cmpl
mov
in
lret
ret
bound
aad
dec
sub
aaa
xchg
sbb
cmp
ret
stos
test
cmp
or
mov
xchg
out
jg
mov
gs
xchg
xchg
ljmp
lds
sbb
xchg
sub
xor
aam
test
nop
jae
aad
dec
inc
or
jnp
loop
adc
cwtl
or
lret
mov
xor
push
xchg
dec
add
mov
jmp
xlat
push
mov
cwtl
cmp
cmpsb
fdivs
dec
lods
test
stos
repnz
and
inc
pop
cli
dec
adc
jmp
lahf
or
dec
ffreep
or
fbld
std
jb
dec
jmp
push
xor
enter
inc
idivl
mov
mov
lcall
push
popf
cmp
xchg
add
cwtl
dec
cmp
test
jbe
add
js
jge
dec
xchg
jnp
lret
js
xchg
jge
pop
or
or
rorb
push
fmull
and
pop
lea
ljmp
mov
jno
jg
mov
inc
std
bound
inc
jp
cmc
aaa
cmc
aaa
out
add
pop
pop
jo
xchg
pop
and
ljmp
fxsave
adc
adc
dec
inc
pop
sub
mov
cmpsb
mov
mov
loop
popa
je
js
mov
mov
and
je
or
cmp
pop
ljmp
pop
cmp
push
aam
jmp
push
cwtl
add
lcall
dec
nop
jmp
mov
mov
pop
dec
lret
std
lods
xor
jns
cli
imul
sbb
in
mul
xchg
addr16
cmp
lcall
sbb
das
or
add
leave
popf
mov
ss
and
dec
and
cmp
jmp
hlt
cs
xchg
int3
mov
addb
ja
addr16
sbb
les
nop
lret
pop
or
sbb
sti
mov
test
loope
popa
insb
sbb
les
pop
insl
cmpl
pop
lret
add
inc
lock
sbb
jp
and
xchg
outsl
mov
addr16
cmpps
push
orl
nop
fisttpl
sar
push
add
push
xor
and
or
adc
cwtl
cwtl
inc
mov
mov
xor
jmp
dec
xor
lea
mov
sub
push
add
push
mov
aam
and
push
pop
and
and
push
sub
and
cmpsb
pop
pop
lret
cwtl
js
sbb
sbb
fistpl
and
mov
sub
mov
mov
bound
cmp
xchg
mov
sub
jae
adc
jmp
pop
popa
mov
shlb
sbb
movsl
add
mov
push
jnp
mov
clc
jns
mov
pop
mov
test
in
psubusw
std
inc
and
xchg
push
jnp
test
imul
cmp
add
xchg
xchg
or
movsb
add
jle
in
ljmp
cld
pop
sbbb
aaa
fiaddl
mov
cmp
jno
ljmp
mov
divl
shl
jbe
daa
lock
imul
xchg
pop
push
adc
sub
in
pushf
ret
push
leave
xchg
movsb
or
ljmp
jbe
or
addl
dec
adc
jl
nop
mov
cmp
sbb
rclb
add
arpl
or
jle
icebp
add
std
pop
jle
insb
ret
pusha
mov
imul
repz
std
cltd
clc
xchg
jecxz
pop
dec
or
dec
inc
sub
dec
xchg
lea
leave
add
lcall
sbb
pop
inc
mov
mov
mov
in
test
or
push
int
xchg
fsubrs
or
add
test
xchg
lock
pop
int3
or
pop
adc
push
imul
bound
test
cmp
dec
mov
add
jbe
mov
sub
cmp
scas
cmp
rolb
popl
popf
pusha
sub
lahf
in
ljmp
pop
cmp
insl
mov
sbb
or
call
daa
mov
scas
int3
xchg
insl
cwtl
gs
push
cli
dec
mov
xorl
dec
int
sub
rcl
fdivr
shrb
mov
xor
inc
add
pop
jge
mov
jbe
push
push
inc
into
ret
dec
aam
stc
ret
adc
or
mov
jle
nop
jns
ret
jns
push
mov
inc
push
pop
lea
mov
scas
cld
mov
inc
push
pop
lret
call
adc
ds
inc
and
mov
jne
mov
scas
cmc
int3
stc
mov
xchg
dec
cld
sub
sbb
xor
ret
ret
mov
inc
popf
addb
push
into
sub
mov
movsb
inc
mov
xor
add
pop
in
jns
ds
popa
pop
ljmp
jae
daa
push
cltd
outsl
jge
sub
mov
xchg
sbb
and
mov
mov
arpl
sahf
mov
mov
cmc
xchg
pop
lret
xchg
sbb
add
cmp
adc
out
add
sbb
or
adc
lock
in
dec
mov
ljmp
jmp
pushl
pop
and
xchg
pop
adc
xor
scas
push
lock
jg
add
andl
dec
mov
addr16
mov
or
xchg
insl
and
adcl
aad
mov
in
jnp
cmpsl
xchg
stos
sub
sbb
dec
or
xchg
fwait
xlat
inc
jge
mov
les
add
nopl
test
movsl
in
sbb
cwtl
pusha
enter
notb
lahf
dec
mov
notl
xchg
sbb
pop
xchg
ret
aad
jmpw
and
mov
xor
jmp
arpl
jge
scas
mov
push
std
int3
xchg
and
xor
addr16
jo
xchg
push
in
ds
es
sub
add
popf
in
add
aad
cmp
repnz
jo
xor
or
mov
xor
pop
adc
jnp
nop
and
push
cld
xchg
sbb
add
mov
push
insb
inc
mov
rcr
stos
or
aad
rol
mov
mov
mov
popf
add
cwtl
lret
inc
ljmp
inc
pop
scas
setbe
adcb
sbb
inc
mov
inc
and
imul
enter
pop
pop
gs
cmp
dec
mov
mov
cmp
out
daa
idivl
sbb
jmp
lret
inc
xlat
xor
idivl
jbe
movsl
pop
mov
loopne
fs
imul
mov
push
cmp
cwtl
pop
iret
xchg
stc
and
cmp
nop
subb
clc
movsb
mov
inc
out
popa
in
add
stc
xorb
push
in
ja,pt
out
adc
dec
jl
mov
int3
mov
sti
mov
popa
daa
sbb
jl
cltd
xor
and
push
punpckldq
scas
ret
and
jle
out
stc
out
cltd
test
cmc
mov
mov
xchg
es
and
arpl
add
addl
inc
test
inc
syscall
and
data16
sub
pushf
push
add
or
xchg
int3
lea
push
out
push
jmp
dec
cli
lock
dec
adc
scas
and
pop
cmc
movsl
cli
test
jl
mov
inc
aad
sub
jae
jmp
inc
or
mov
fcom
push
ljmp
jnp
mov
dec
mov
jmp
hlt
jg
mov
andl
push
mov
mov
jb
or
cmc
dec
pop
xchg
es
int3
xor
add
enter
sbb
jge
push
mov
call
adc
jbe
movsl
sub
and
mov
std
or
pop
jge
jmp
mov
adc
mov
push
pushf
jl
test
jg
inc
loope,pt
es
js
mov
xchg
jmp
and
mov
insl
cld
xchg
add
add
popa
sbb
mov
lea
mov
subb
aad
mov
cmp
ljmp
mov
pop
pop
push
mov
cmpsl
adc
dec
pop
sub
push
add
ss
or
ljmp
out
xor
mov
cmp
test
inc
pop
arpl
fcmove
dec
stos
dec
pop
cmpsl
enter
mov
pop
dec
and
inc
inc
mov
pop
or
inc
or
add
or
sub
add
mov
dec
cmpl
das
or
mov
dec
or
out
xchg
sub
lret
es
dec
sub
sbb
jmp
jne
sbb
fucomp
hlt
jl
fildl
mov
jno
pop
imul
push
not
ret
es
fxch
adcl
mov
dec
dec
pop
jle
imul
cli
add
arpl
fs
pop
jle
and
movsb
ljmp
push
mov
test
lcall
push
xchg
enter
fwait
and
mov
pop
or
sbb
xchg
sbb
xor
mov
ss
out
xchg
dec
add
xchg
adc
fs
add
or
or
test
stos
xor
mov
int
and
aad
xchg
int3
sbb
lahf
imul
adc
jb
adc
cmp
cwtl
inc
js
sbb
enter
add
movsl
incb
fistps
jmp
jmp
cmp
fwait
jmp
cmpsb
bound
push
mov
mov
int3
lods
les
xor
iret
inc
jge
sbb
leave
jge
sub
sbb
cmp
add
inc
ja
rclb
lcall
loop
sbb
ljmp
pop
lods
lea
hlt
imul
add
mov
rolb
and
iret
orb
hlt
mov
cwtl
adc
or
mov
jg
bound
or
pop
mov
sbb
inc
or
lcall
inc
cli
shufps
stos
jb
jo
add
cmp
clc
dec
push
mov
stos
aad
ljmp
mov
fimuls
mov
inc
adc
aaa
pop
stos
cltd
ret
in
add
popf
mov
cmp
jne
add
mov
sub
inc
sbb
pop
dec
into
nop
jb
stos
lret
inc
sub
and
js
mov
mov
add
mov
jle
and
rclb
add
dec
in
mov
cmp
and
pop
push
mov
mov
jne
repz
mov
stos
adc
lret
idivb
loope
sbb
cltd
mov
dec
add
test
movsl
lahf
decl
or
xor
out
and
add
sbb
jb
jge
movsl
mov
repz
pop
jp
ja
cmp
bound
xchg
mov
paddsw
and
jg
fisubs
in
jle
inc
mov
pop
xor
pop
scas
out
push
adc
mov
ss
dec
mov
fidivrs
push
mov
scas
out
cmp
pusha
mov
add
test
loop
inc
mov
cmp
imul
nop
pop
xlat
das
xor
add
dec
sti
inc
dec
mov
mov
scas
es
inc
or
fimuls
sarb
lods
call
jmp
mov
mov
stos
inc
push
ficoml
sub
jle
cwtl
mov
in
xchg
cmpl
int3
jne
sbb
add
xchg
stc
fstps
ret
push
xor
xorl
aas
add
dec
sub
fmull
sahf
filds
mov
inc
scas
orb
inc
sahf
loop
mov
icebp
lds
mov
jge
ss
mov
scas
pop
push
sti
inc
cmp
sti
jge
ss
dec
leave
inc
nop
sub
jno
sbbl
dec
gs
je
inc
aad
neg
fcoms
adc
fdivrp
pop
sarb
insb
in
xor
add
test
mov
in
jne
pop
decb
popa
leave
add
add
dec
or
pop
rorb
sahf
loop
movsb
sbb
cmp
in
mov
dec
or
pop
dec
in
sbb
sub
pop
out
addr16
inc
imul
ja
fildl
xchg
popa
pop
xchg
fmull
test
fs
movsl
cmp
pop
dec
or
push
les
push
imul
mov
push
mov
sub
sub
fiaddl
cmp
aaa
pop
out
fcmovnu
adcb
fimuls
iret
inc
ljmp
add
stos
jo
adc
gs
pop
or
dec
fmulp
aas
andb
mov
and
sub
sbb
jmp
pop
jae
out
fidivl
stos
into
xchg
push
daa
xchg
int
fcom
pop
inc
popa
inc
pop
add
stos
testl
fcompl
dec
andb
sahf
fdivrs
or
les
xor
iret
lahf
and
add
sbb
add
rolb
fsubrl
stos
push
push
pop
push
mov
in
add
jge
lret
or
cs
push
cwtl
add
pop
movsl
fidivrl
cmp
hlt
fists
add
add
add
insl
iret
lret
dec
in
mov
xchg
repnz
lahf
cld
fldenv
add
jg
mov
popa
or
sub
push
fs
aam
pop
push
ror
add
dec
fsts
popf
push
aaa
aaa
aad
add
sub
subb
dec
es
iret
cmc
cmp
int3
add
jecxz
test
mov
out
addb
cltd
dec
popf
cmp
pop
hlt
and
gs
xchg
out
and
lret
popf
leave
inc
xchg
and
dec
sbb
mov
clc
xlat
mov
inc
daa
xchg
aam
mov
loop
inc
sbb
and
push
inc
jne
xchg
daa
xchg
or
cltd
mov
mov
sbbl
xchg
sbb
dec
inc
and
mov
push
jl
clc
mov
cs
out
aam
cwtl
and
xchg
fcompl
sub
adc
xor
inc
and
nop
fisubs
or
sub
mov
andl
lret
stos
add
scas
imul
xor
or
pop
and
movsl
test
pop
jns
mov
repnz
xorl
mov
andb
popa
sub
testl
mov
dec
jl
popa
xorl
stos
mov
inc
or
stos
xor
jb
push
inc
aaa
adc
sub
sub
mov
xor
sbb
fstl
loope
push
cmp
or
test
xchg
sub
andl
pop
rorb
negl
idivb
imul
in
add
sub
pop
or
sarl
mov
out
outsb
push
sub
dec
sahf
lahf
push
je
or
xor
add
test
dec
loopne
adc
xor
adc
xor
adc
mov
adc
adc
sbb
mov
ds
mov
cltd
iret
add
inc
or
clc
in
lcall
jno
das
xor
sub
cltd
add
sbb
jg
ds
arpl
jp
popa
or
addb
mov
mov
in
sub
xor
add
pop
dec
das
mov
adcl
and
incl
sahf
jle
jge
mov
push
call
cli
je
and
ret
add
ss
movsb
xor
pushf
ficoml
xchg
pop
ret
inc
sbb
pushf
enter
imulb
insb
out
dec
adc
xorl
mov
cltd
jmp
scas
and
or
sti
lret
cltd
insl
dec
pop
sub
loope
sbb
scas
int3
pop
sbb
pop
flds
xorl
lret
add
ret
pop
xchg
icebp
sub
test
sti
cwtl
or
xorb
dec
call
test
or
scas
xor
inc
pusha
sbb
pop
aad
mov
out
inc
dec
adc
iret
xorb
sti
inc
lcall
jle
mov
adc
loope
dec
sbb
addr16
mov
clc
fs
cmp
movsb
les
sub
xchg
into
push
or
sbb
sub
jns
sbbb
andb
roll
incl
cld
sub
sbb
cmp
stos
and
push
aad
dec
sbb
push
leave
inc
stos
subl
arpl
add
dec
fs
sbb
loopne
xor
mov
mov
mov
xchg
lods
nop
dec
ja
scas
fidivrl
and
inc
fs
loop
outsb
cmpsb
and
add
pop
jl
mov
adc
dec
ja
gs
scas
movsb
mov
bt
fildl
xor
push
push
mov
imul
xor
scas
lods
sub
push
xchg
sub
or
cmp
mov
or
xor
sarl
push
mov
cwtl
in
jmp
xor
lods
imul
dec
bound
movsl
inc
mov
roll
mov
mov
sbb
popa
jno
jmp
push
jae
xchg
test
jo
faddl
repz
aas
andl
xor
adc
scas
in
add
fdivrp
adc
into
popa
or
sarl
jle
addr16
pop
push
sbb
int3
ljmp
lahf
das
sbb
mov
inc
scas
sbb
mov
popf
or
loop
repnz
lds
imul
and
divl
call
dec
mov
inc
push
add
inc
push
xor
xchg
add
sub
push
inc
fwait
test
mov
stos
sub
cmp
pop
in
xchg
dec
dec
in
shll
jge
repz
push
dec
int
test
ja
jle
push
pop
pop
mov
es
mov
add
jl
sub
xchg
nop
add
addr16
clc
ficoms
and
imul
cld
js
ljmp
filds
repz
sbb
shll
pop
scas
cmp
mov
fidivs
mov
repz
sub
out
mov
jns
jmp
lret
inc
push
xor
aaa
push
out
imul
insb
mov
inc
jno
imul
cmovp
iret
lods
in
push
adcl
idivb
popa
loope
xorb
inc
insb
push
inc
push
jmp
lret
in
adc
push
fisubrs
push
mov
stos
sbb
mov
leave
aaa
das
add
addl
jle
mov
jno
push
jmp
std
sbbb
jge
inc
test
addr16
jb
push
fwait
mov
sbb
cmp
cmp
xlat
das
push
cmp
inc
push
xor
adcb
pop
adc
mov
clc
jl
add
xchg
out
sbb
maskmovq
cli
dec
mov
adc
inc
popf
xor
sub
pop
fcmovnbe
cmp
jle
jne
cltd
mov
inc
mov
xchg
push
xor
scas
sbb
popa
push
add
add
loope
or
sub
dec
xlat
jg
cmpsb
push
ret
fwait
push
mov
push
pop
xchg
pushf
and
or
mov
xchg
dec
repnz
clc
sti
dec
popf
pop
mov
popf
mov
push
sbb
cltd
pop
push
cmp
cmp
or
xchg
and
sub
fwait
xor
cs
or
and
inc
cwtl
jae
or
lahf
fistpll
icebp
jo
pusha
scas
inc
jmp
push
push
addb
fsubl
sub
dec
sbb
repz
out
add
sub
mov
test
es
and
loop
mov
xor
mov
mov
stc
lret
data16
and
dec
sub
push
push
adc
shrd
fisttps
into
mov
test
call
sub
cmp
mov
cwtl
movsl
xor
aaa
or
mov
mov
cmpb
addr16
flds
add
aaa
scas
mov
jno
es
sbb
push
inc
push
xchg
add
mov
dec
mov
jmp
cmp
pusha
jne
sub
inc
fs
cmp
and
sub
inc
jge
mov
imul
aas
or
and
add
aaa
adc
js
scas
pop
pop
push
mov
dec
or
rolb
inc
push
inc
cmp
add
fwait
dec
and
stos
cwtl
imul
rolb
jb
lret
idivb
and
inc
aam
inc
ljmp
shrl
cwtl
sbb
wbinvd
mov
xor
scas
rcrb
daa
pop
mov
fcoml
mov
les
jne
mov
pop
or
sbb
enter
aam
ficomps
cmp
gs
mov
jb
je
dec
pop
or
insl
addr16
xor
jne
inc
add
les
pusha
inc
pop
sub
scas
cltd
je
mov
or
mov
imul
pop
enter
and
jp
leave
sbb
insl
icebp
sbb
leave
rep
xor
fwait
or
pop
xor
add
lea
xor
enter
inc
push
sbb
and
scas
lea
lret
fwait
pop
mov
outsl
mov
rcrl
and
and
add
or
cmp
inc
popa
sub
or
pop
mov
sbb
xchg
dec
pop
jecxz
inc
mov
mov
imul
outsb
call
scas
sbb
scas
push
out
dec
aam
mov
jge
pop
sbb
sbb
mov
popa
xchg
push
xchg
mov
add
xchg
xchg
pop
sbb
dec
mov
inc
or
push
and
incb
ss
push
std
mov
dec
cmp
enter
in
fs
jmp
mov
aaa
inc
test
or
mov
xchg
hlt
add
sub
push
popl
mov
std
cli
adc
popf
daa
xor
pop
push
jo
xor
pushf
iret
sub
pop
add
inc
push
sbb
mov
out
mov
cmpsb
in
lret
mov
mov
mov
dec
jmp
mov
fisttpll
push
xor
xchg
push
sbb
mov
lret
dec
jno
and
add
push
xchg
add
adc
stc
mov
sub
rorl
jo
inc
and
mov
xchg
adc
add
scas
lahf
adc
rclb
adc
jno
or
mov
jmp
push
mov
ljmp
dec
repz
mov
add
or
lock
mov
aas
dec
push
fs
test
call
cmpsl
mov
xor
push
leave
xchg
add
test
dec
loope
xchg
jl
xchg
incb
in
jecxz
dec
add
mov
or
jo
sar
seta
sbb
sti
mov
sahf
fsubl
add
add
add
test
jmp
or
or
add
mov
fwait
stc
dec
mov
popa
or
mov
dec
test
aad
lret
pop
push
dec
ror
push
dec
mov
xchg
xor
stc
mov
dec
xchg
popf
mov
xchg
ret
push
and
aam
mov
sar
push
mov
or
ds
lret
sub
mov
or
pop
xchg
pop
mov
sub
or
inc
inc
xchg
enter
inc
adc
test
sub
xor
sbb
lret
xchg
in
add
cmp
adcl
sbb
repnz
dec
inc
cmc
imul
adc
push
adc
das
xchg
outsb
and
push
std
ljmp
adc
push
xor
or
dec
pop
xchg
cmc
jl
or
jmp
cltd
inc
scas
dec
pop
push
mov
inc
xor
roll
mov
mov
and
inc
xor
cmp
nop
jno
jle
pop
dec
or
loop
add
mov
lcall
mov
mov
and
push
sub
pop
adc
add
pop
xlat
dec
loopne
imul
xchg
mov
mov
mov
xor
fmuls
jmp
jmp
mov
fcmovnbe
sbb
mov
push
push
loop
mov
jp
incb
mov
push
rol
test
mov
fdivrl
and
loopne
lret
pop
or
inc
imul
nop
pop
cmp
into
jb
into
jae
mov
fsubp
loopne
cmp
mov
ds
cli
push
clc
or
test
sub
roll
jge
inc
push
clc
es
or
les
push
popf
shl
hlt
add
pop
sub
std
mov
cmpsb
xor
fisttps
bound
dec
mov
mov
push
ljmp
dec
mov
loope
push
sahf
jmp
jecxz
mov
xor
add
push
ret
or
roll
gs
imul
out
out
mov
nop
mov
std
push
mov
ret
movsb
mov
lods
dec
cmpsb
loop
sub
cld
lods
sub
or
jmp
jmp
sub
adc
sub
ret
mov
lret
inc
xchg
pop
inc
inc
sarl
sub
or
in
and
imul
push
mov
xchg
cltd
js
out
sbb
out
sub
js
lock
fildll
push
popa
xor
dec
lea
dec
adc
dec
jg
outsl
add
mov
out
bound
pusha
dec
and
outsl
imul
jno
test
sub
jle
and
mov
add
pop
divl
lret
jne
adc
mov
imul
add
movsb
popa
subb
adc
popa
mov
add
mov
xchg
adc
xchg
aam
lock
xor
or
cmp
mov
add
cmpb
xchg
addr16
add
rorl
lea
lods
lods
gs
push
test
or
enter
add
aas
sub
lods
mov
test
mov
sahf
imul
dec
mov
jno
inc
xor
int
hlt
inc
mov
xor
xchg
inc
sbb
cld
sub
insb
mov
shrb
bound
adc
add
sbb
xchg
cmp
iret
mov
mov
sbb
inc
enter
test
xchg
sub
jno
xchg
scas
sbb
xchg
sub
push
nop
ret
xchg
push
push
popa
add
push
ds
jbe
popa
fisttpl
dec
xor
ljmp
pusha
aas
enter
mov
cli
lcall
ret
fwait
and
cli
pop
sub
movsb
pusha
jbe
add
sub
sarl
add
mov
xor
pusha
and
out
cs
mov
stc
rcrb
push
jmpw
or
inc
scas
imul
push
xor
xchg
fcom
into
jle
jo
popf
or
shrb
sbb
fmuls
jecxz
xor
mov
mov
in
scas
mov
fwait
popf
add
mov
clc
les
stos
ljmp
mov
jmp
popa
insb
mov
add
pushf
pop
dec
sarl
andl
pusha
and
add
push
or
movsb
jb
and
scas
addb
test
jge
leave
sahf
xor
or
aas
mov
out
test
and
sub
loopne
roll
les
mov
sbb
data16
rol
add
icebp
int
xchg
mov
mov
loopne
xchg
sbb
icebp
call
inc
ret
fs
ret
popl
xor
test
movsb
inc
xchg
add
ret
daa
outsl
jo
cmp
loopne
ret
mov
xor
loope
pop
imul
mov
dec
mov
fwait
and
adc
cmp
xchg
push
cmp
push
mov
cmp
mov
inc
add
mov
jge
int
mov
mov
in
test
out
and
sub
in
xchg
cmpsb
add
popa
add
subb
add
mov
adc
sbb
out
add
mov
adc
movsl
pusha
jg
jle
mov
sub
in
ds
mov
cmp
mov
bound
adc
and
rcrl
push
loop
push
jbe
and
push
add
outsl
jae
jnp
jno
xchg
pop
dec
jne
cmp
add
lea
and
enter
mov
or
aad
sbbb
add
scas
fimull
inc
pop
bound
pop
js
cmp
rol
repz
add
test
push
shlb
lods
add
jns
sbb
jmp
cmp
inc
mov
inc
add
adc
inc
and
xor
in
lahf
dec
xor
bound
add
add
in
ljmp
adc
in
push
fnstsw
es
sub
test
xchg
pop
add
pop
xchg
or
mov
fidivrs
inc
mov
xchg
pop
in
xor
mov
pop
or
lcall
inc
adc
rolb
inc
jo
inc
and
mov
mov
jno
sbb
cmp
out
mov
fwait
cmp
push
adc
xchg
pop
push
xor
xchg
scas
rcll
pop
cmp
and
movsb
test
ds
repnz
jbe
cmp
cmp
cmc
pusha
subl
jl
mov
sarb
ret
outsb
fdivrp
adc
out
adc
subb
adc
repnz
inc
mov
mov
cwtl
scas
dec
andl
int3
out
push
stc
cmp
adc
gs
data16
pop
rclb
add
js
lcall
dec
test
jge
jmp
cmpsl
test
daa
xchg
jne
inc
gs
movsl
push
mov
and
jmp
int
mov
or
movsb
and
mov
stos
xchg
xor
push
adc
push
mov
and
and
test
mov
add
sbbb
pop
in
dec
or
cmc
lods
popa
push
sti
and
insb
add
pop
sbb
sub
es
mov
ss
cld
insb
jb
fildl
sbbl
sahf
aas
push
cltd
jne
pusha
or
loope
jmp
push
inc
pop
les
ljmp
dec
daa
pop
jg
fcomps
movsl
pop
add
push
push
add
repnz
jge
or
mov
xchg
stc
and
jmp
pushf
icebp
fdivrs
scas
dec
xchg
aaa
or
pop
jmp
aad
pusha
sub
dec
jecxz
jb
xchg
lcall
push
xchg
lret
scas
movsb
decl
fiaddl
or
rol
add
push
fdivrs
jp
jge
cmc
xchg
inc
sbb
xchg
je
and
cmp
das
mov
push
addr16
dec
adc
jge
push
ljmp
loope
mov
lret
cltd
das
fisubrl
mov
xchg
push
mov
xchg
push
out
cmc
add
scas
scas
insl
push
mov
inc
std
inc
mov
mov
bound
xchg
loope
inc
pop
clc
mov
imulb
dec
imul
add
lods
add
cld
inc
cli
nop
mov
adc
pop
popa
mov
aas
adc
mov
sub
add
adc
movsb
into
dec
mov
mov
xor
imul
out
push
mov
fstpl
lds
movsb
mov
out
stc
cs
add
ret
jge
js
ljmp
loop
pop
and
bound
inc
stos
sub
int3
shrl
sub
es
xor
jno
mov
loope
outsb
and
sbbb
xchg
push
push
outsb
lret
push
xorl
dec
leave
pop
adc
cmc
les
scas
mov
stos
inc
mov
sub
and
xchg
mov
add
or
push
xor
mov
in
lea
lar
inc
subb
sub
push
icebp
sbbb
xor
imul
pop
sbb
mov
out
stc
std
mov
rorl
add
fimuls
sbb
call
inc
orb
clc
pop
mov
inc
and
xchg
frstor
test
ja
gs
daa
out
sub
testb
or
cmpsb
add
jnp
popf
cmpsl
adc
add
jp
fsubrp
push
in
repnz
adc
fidivl
push
rorb
ss
loope
subb
fdivl
in
dec
outsl
sahf
cmc
sbb
scas
in
sbb
ret
pop
xor
call
xchg
int
add
mov
inc
mov
cmc
rolb
icebp
mov
adcb
or
test
push
push
nop
push
aas
push
cwtl
pop
ret
pop
sub
inc
pop
add
sbb
or
icebp
xor
imul
dec
jns
dec
stos
sbb
mov
push
mov
mov
aam
test
or
lods
cli
mov
and
leave
pop
jo
or
gs
inc
cmpb
sbb
push
xorb
int3
test
dec
adcb
inc
xchg
sbb
and
sub
jo
mov
iret
inc
dec
orl
pop
push
stc
std
pop
xor
xor
mov
add
loop
vmwrite
adc
sub
xorb
adc
je
and
mov
pop
pop
xor
xchg
mov
sbb
aad
pop
dec
test
inc
push
stos
ljmp
dec
jo
xchg
mov
and
gs
les
das
imul
sbb
call
mov
int3
scas
sbb
aad
mov
dec
cmc
adc
fmul
ficoms
mov
or
sub
es
dec
pop
sahf
inc
cs
neg
test
xchg
xor
mov
cmp
test
out
fs
add
sub
ja
and
push
add
cmp
aaa
cwtl
xchg
pop
or
stos
push
sub
ficoms
stos
aas
into
adc
mov
mov
push
cmpsl
ljmp
mov
nop
imul
lahf
jae
cmp
ret
add
sub
iret
mov
repz
movsl
into
or
push
inc
push
insl
ret
hlt
and
sbb
and
imul
xor
inc
fmulp
cltd
testb
loope
mov
shll
mov
aas
xchg
fisubl
hlt
jno
xor
mov
popa
gs
shlb
xchg
les
loope
mov
loope
js
cmp
insl
and
loop
repz
lret
mov
push
pushf
dec
adc
daa
mov
sar
jmp
pop
mov
inc
or
push
es
adc
cwtl
xlat
jge
std
mov
shlb
mov
pop
filds
outsb
shlb
add
adc
sub
popf
sbb
jbe
cmpl
insl
imul
jge
jno
add
mov
sbb
aad
sti
mov
dec
aad
pop
mov
fs
out
or
lahf
inc
imul
add
push
jo
pop
cmc
cmpsb
test
cmc
xlat
cli
lods
pop
push
scas
add
inc
out
pop
popf
dec
add
jo
mov
mov
cmc
insl
ret
dec
adc
sbb
push
xor
mov
mov
sub
push
jp
in
addr16
notb
es
lcall
decl
xchg
mov
dec
cwtl
addr16
scas
push
aam
xor
or
jmp
pop
data16
or
push
fdivrs
and
into
fsubs
fldcw
sub
xor
ljmp
xor
lods
pop
mov
push
mov
pushf
sti
and
xchg
push
ja
stos
ss
fisubs
xor
jns
mov
cmp
test
xchg
push
fstps
dec
sub
sarl
insb
mov
mov
ret
sbb
rorl
inc
sub
jbe
out
mov
xorb
and
rorb
in
mov
sub
inc
pop
shll
movb
ja
sub
scas
xor
jge
pop
mov
xchg
enter
fsubp
pop
mov
dec
test
sbb
lret
jmp
xorl
jbe
pop
out
int3
inc
push
hlt
ss
mov
testl
add
add
call
jecxz
lods
cmpsb
and
test
pop
ret
in
cmpsb
stos
or
add
and
cmp
subb
cmpsb
data16
movsl
adc
push
pushf
mov
dec
xchg
sbb
dec
pop
xchg
inc
mov
and
imul
ret
popa
adc
scas
push
mov
aam
mov
xchg
mov
aad
add
sub
sbb
and
ret
data16
scas
lret
push
push
push
inc
push
jp
sbb
sub
xorl
mov
fsubrs
fisubrs
scas
ret
ror
push
insb
xor
or
adc
jge
arpl
ss
addr16
testb
jbe
ja
adc
daa
dec
jmp
xchg
mov
call
or
sbb
and
add
daa
jmp
mov
push
jl
push
and
dec
jmp
bound
shlb
ret
mov
push
mov
ljmp
inc
jmp
ror
sbb
xorb
addr16
add
leave
push
iret
inc
cmp
push
jne
mov
or
xchg
push
xchg
cmp
inc
push
mov
inc
add
fldcw
jmp
sbb
int3
negl
inc
push
push
sbb
inc
or
xchg
aam
or
or
adc
divl
mov
jbe
bound
pop
and
or
imul
push
cmp
addr16
ds
and
test
outsl
or
cmp
out
xchg
xor
add
movsl
mov
jbe
sti
sub
imul
rcr
les
sbb
cmpsb
or
mov
push
dec
je
stos
int3
aam
add
jo
add
dec
xchg
inc
cmp
iret
pusha
sti
or
mov
xor
or
leave
mov
lods
daa
inc
adc
jns
adc
push
mov
outsl
xor
xchg
xchg
cmp
mov
ja
out
jecxz
es
fisttpll
push
scas
dec
addr16
movsb
dec
sbb
pop
loope
negl
nop
lods
cs
orb
stos
ja
lahf
mov
and
loop
cld
loopne
mov
mov
test
inc
cmp
and
mov
inc
mov
adc
inc
mov
in
push
jb
push
or
shl
test
xchg
inc
fldt
add
test
dec
dec
or
add
nop
and
or
int
sbb
pop
hlt
lds
lcall
cwtl
push
sub
xor
or
add
mov
incl
lcall
ret
sub
and
movsb
pop
test
or
sub
pop
stos
and
pop
jno
jmp
jo
xor
xchg
and
fsubs
sbb
and
or
adc
adc
aam
and
and
sbb
clc
xchg
sbb
xlat
out
std
or
dec
stos
popf
or
jge
add
lcall
stos
sarl
inc
and
sarl
jp
sub
enter
stos
add
push
inc
dec
inc
mov
pop
out
sub
sub
fadds
or
mov
mov
call
fwait
pop
or
rorb
pushf
lods
inc
push
ret
aam
xor
or
cwtl
push
pop
pop
jge
xor
add
in
cmpsl
orl
ret
leave
adc
scas
cld
xchg
pop
fimull
and
xor
adcl
mov
test
test
mov
rclb
pusha
fs
mov
pop
inc
add
inc
mov
test
xchg
sbb
jne
mov
add
in
enter
sub
sub
test
ljmp
and
inc
enter
sbb
jmp
popf
rcrb
xorb
mov
lahf
gs
adc
orl
stos
push
mov
fcoml
cld
rorb
jb
cmp
xor
sbb
xor
push
pop
lea
mov
inc
gs
cld
clc
add
lods
inc
add
mov
int3
cmp
cmp
xor
inc
or
mov
inc
ror
in
addl
cmc
mov
or
mov
bound
sbb
mov
sti
pop
stos
cmp
mov
mov
sbbb
cmp
xchg
and
inc
jl
jnp
add
call
daa
xor
add
popf
and
insb
pop
clc
inc
fcmovu
sbb
mov
lahf
and
adcl
hlt
cmp
insb
jle,pn
je
lret
sub
push
dec
mov
pop
stos
repnz
fstpt
jmp
pop
nop
or
jg
in
lods
leave
outsl
bound
jae
div
mov
scas
stc
add
stos
repnz
in
subl
pop
add
inc
mov
out
mov
popl
add
xor
dec
mov
mov
dec
nop
add
call
clc
push
add
jl
mov
loop
ds
xor
mov
shll
pop
add
mov
repz
sbb
push
adc
cld
imul
inc
push
mov
sub
test
push
int3
sbb
cld
jle
movsl
jg
add
and
cmp
xchg
mov
mov
sub
adc
mov
xchg
cmp
out
addb
add
mov
inc
bound
push
jne
xchg
mov
add
imul
add
dec
xor
mov
xchg
add
shl
ret
or
rsqrtps
sbb
jmp
mov
fs
sbb
fwait
xchg
add
and
sbb
imul
mov
jb
and
mov
nop
pop
in
into
mov
cmp
out
movsb
lret
cmpsb
adc
je
mov
ss
out
cwtl
sbb
push
dec
out
scas
xor
mov
cmp
addr16
insb
arpl
scas
sub
dec
int
dec
imul
push
scas
addr16
mov
mov
inc
mov
add
xchg
and
and
push
xor
scas
add
and
neg
daa
xlat
es
test
dec
jno
sub
js
bound
mov
test
ja
test
xor
test
add
pop
jg
add
mov
sub
bound
aad
testl
ret
xlat
mov
cmp
call
aam
dec
add
sbb
push
ja
out
sbb
mov
jne
sbb
sbb
xchg
mov
and
ficompl
jl
addr16
ret
testb
xchg
scas
jle
push
lcall
insl
adc
mov
and
in
imul
sub
test
dec
pop
cmp
or
or
push
lret
sarb
and
ret
push
or
test
ret
test
dec
les
sbb
loope
std
pop
sbb
inc
or
fcompl
cwtl
mov
std
mov
xchg
xchg
adc
lea
dec
iret
cli
push
jle
in
dec
test
or
xchg
xlat
jne
mov
dec
and
sub
inc
push
icebp
add
adc
clc
pop
or
addb
or
add
repnz
add
out
cwtl
add
in
pop
adc
mov
add
add
daa
and
ret
mov
loope
add
adc
loopne
push
or
andl
adc
mov
dec
roll
loope
hlt
sbb
add
icebp
dec
add
add
sbb
jmp
or
xchg
mov
mov
push
clc
cs
loope
adc
mov
add
shll
inc
loop
sub
rcll
add
sbb
jg
jge
sub
dec
pop
adc
mov
sbb
push
dec
ja
push
pop
xchg
lods
and
sahf
sub
pushl
lea
orb
and
mov
and
sub
in
and
add
and
pop
int3
enter
int3
and
sbb
enter
int3
and
and
int3
and
xchg
in
and
lea
bswap
fwait
lea
cmpsl
in
fdivr
push
in
pop
sbb
enter
int3
or
js
popf
or
sub
enter
xor
xchg
sub
xor
inc
movl
stos
orl
xchg
inc
push
daa
sbbl
adc
mov
inc
nop
mov
adc
add
cwtl
ds
push
xor
add
pusha
and
adc
out
leave
scas
test
std
sub
addr16
scas
xor
push
aas
add
inc
mov
xor
inc
outsb
push
adc
inc
out
sub
sbb
push
add
jmp
or
and
andl
sub
and
lret
and
cmp
loop
pop
add
mov
fs
test
pushl
andl
sbb
call
push
int
inc
dec
and
inc
add
sbb
cmp
pushl
insl
adc
pop
sbb
push
in
dec
add
lret
push
out
xlat
hlt
adc
lret
stos
pop
cmp
inc
pop
subl
or
cltd
jmp
out
pop
mov
ljmp
xchg
push
pop
inc
mov
jno
cmp
ret
lock
fdivs
push
jg
dec
ss
dec
pop
in
xor
push
xchg
pop
mov
cmp
mov
in
dec
das
rcrl
lds
into
test
push
lock
test
push
or
sbb
sbb
mov
push
mov
or
pop
mov
out
leave
add
xchg
outsl
call
mov
adc
add
jae
jmp
dec
mov
sti
pop
sbb
rcrl
jg
clc
cmp
mov
xor
push
loop
dec
rclb
push
inc
inc
mov
fdivl
push
jmp
jge
or
scas
fstl
mov
jns
fisubrs
arpl
sbb
dec
dec
xchg
pop
sbb
sbbb
adc
and
rcrb
out
fxch
jp
pop
jl
imul
pop
sub
dec
jecxz
inc
sbb
bndldx
movsb
jno
push
mov
lds
ljmp
sub
cmpsl
repnz
xchg
sbb
sbb
stos
enter
lret
pop
mov
pop
mov
stos
mov
aad
test
cmp
sub
lcall
add
xlat
movsb
clc
adc
mov
ja
xor
mov
mov
fisttps
push
lock
jge
pop
xchg
test
lret
cmp
rcr
pusha
testl
mov
fs
lret
mov
push
dec
popf
cmp
dec
cmp
test
and
xchg
aaa
jp
push
lahf
stos
mov
icebp
pushf
or
out
orl
ljmp
sbb
in
insl
dec
out
pop
xchg
and
and
stos
inc
icebp
fidivrl
daa
pop
loope
jne
or
pop
inc
sbb
add
sbb
inc
add
mov
push
mov
push
lahf
sbb
and
rsm
xor
or
sbb
xchg
add
push
mov
mov
pop
lcall
fcompl
xor
inc
inc
push
or
iret
jmp
scas
xchg
rorb
nop
xchg
cmp
sbb
pop
pop
jae
add
in
lcall
lret
push
orl
cld
jmp
xor
in
xchg
test
sar
pop
sbb
sub
fwait
inc
pop
or
sbb
xchg
xchg
ret
jmp
jp
popa
xchg
jg
clc
xchg
adc
xchg
xorb
sbb
rorb
dec
and
adc
xchg
icebp
push
mov
aad
sub
bound
xor
xor
push
xchg
push
mov
aam
iret
jno
xlat
adc
int3
mov
ret
or
sub
sub
jae
mov
bound
cmc
add
ljmp
or
mov
add
rcrb
addb
sub
mov
or
sbb
test
es
scas
mov
or
jbe
add
sub
outsl
sub
xchg
movsb
cwtl
aaa
xchg
fdecstp
xor
sub
sbbl
subl
add
aas
pusha
ss
inc
test
test
or
adc
push
sub
adc
je
dec
inc
or
popf
mov
jo
out
pop
lds
mov
inc
sti
xor
and
les
aaa
les
mov
adc
sbb
xchg
idiv
nop
pop
adc
xor
ljmp
or
por
add
mov
js
dec
gs
xor
nop
rcll
cmpsl
inc
mov
inc
rcrb
mov
scas
data16
mov
jg
and
dec
sub
sarb
mov
mov
or
pop
sbb
or
pop
and
imul
mov
nop
inc
stos
jge
iret
adc
inc
imul
addb
clc
xchg
in
mov
xchg
leave
or
scas
xchg
dec
call
mov
popl
call
lcall
push
popf
sbb
cwtl
xor
add
push
inc
push
mov
stc
push
mov
push
aam
sub
or
repnz
sub
call
xor
addb
push
imul
lret
inc
rorl
sbb
mov
int3
push
loop
dec
jns
ret
ljmp
dec
cwtl
imul
je
insl
lret
and
test
push
repnz
cli
xchg
test
push
imul
jecxz
sbb
mov
mov
or
and
dec
mov
movsl
mov
insb
sbb
or
or
dec
test
mov
out
push
inc
or
outsb
dec
shrb
add
ljmp
repz
xor
repz
inc
cmp
aas
pop
push
sub
leave
or
adc
jg
mov
dec
and
add
int
pop
pop
mov
or
repz
mov
iret
xchg
jnp
push
sbb
ret
mov
cwtl
fsub
fwait
mov
ja
repnz
fdivrl
addb
and
xor
xchg
loope
out
out
or
sbb
and
dec
clc
push
or
add
push
outsb
movsl
cli
pop
jecxz
xchg
stc
add
xor
dec
dec
mov
sbb
and
movsl
das
dec
sub
pop
push
mov
jge
inc
adc
adc
mov
insb
and
lret
icebp
inc
adc
mov
inc
mov
lret
mov
int
inc
cli
cmp
push
inc
shll
xchg
sub
xchg
add
or
mov
leave
push
lock
les
xor
or
lret
mov
lods
pop
popa
push
add
pop
mov
inc
cmp
in
adc
clc
repnz
xor
jb
shl
in
pcmpgtd
fbld
dec
jg
cmp
shrb
pop
pushf
aam
orb
mov
or
shrb
and
jge
outsl
adc
icebp
paddq
sbb
mov
orb
inc
rorl
jne
push
sbb
jge
and
ss
or
jnp
mov
add
lret
or
xchg
inc
pushf
popa
add
sbbl
call
lahf
mov
test
and
ss
dec
and
popf
inc
xor
sub
hlt
add
enter
xchg
dec
pop
outsl
xchg
cmp
js
push
push
mov
dec
andb
mov
testl
idivl
or
popf
or
xor
addb
into
mov
adc
js
mov
mov
or
or
mov
dec
inc
test
dec
pop
bound
sbb
jnp
out
ret
icebp
in
or
dec
jecxz
push
test
imul
xor
add
mov
add
add
das
cli
push
xlat
jecxz
mov
pusha
gs
movsb
into
inc
dec
mov
xor
pop
test
imul
xor
mov
mov
adc
into
and
push
jle
dec
or
pop
cmp
js
mov
lahf
test
imul
or
dec
xor
dec
cmp
notl
nop
mov
or
sub
stos
pop
adc
push
lret
rcl
cwtl
xchg
sbb
xchg
fists
mov
sbb
fwait
int3
and
sbb
pop
push
cmp
pushf
loopne
jge
jb
sahf
mov
loopne
std
add
sbb
aaa
sbb
inc
jp
or
stos
or
subb
popa
mov
xlat
add
in
dec
jnp
mov
out
sub
xchg
notb
xchg
pop
iret
add
mov
mov
repz
dec
or
inc
jnp
ret
cmp
push
sti
int3
adc
xor
xorl
enter
repnz
int3
mov
add
sbb
cmpsl
movsb
mov
push
bound
loopne
and
dec
imul
jae
ret
pop
inc
insl
cs
mov
and
cmpsb
xchg
dec
dec
call
mov
jp
popa
sbb
aad
jo
rcrl
je
and
rorb
test
and
sbb
jo
and
ret
push
and
xor
scas
mov
or
mov
adc
xchg
push
mov
add
add
sbb
std
push
mov
rclb
inc
rorb
xor
add
ficoml
or
in
sbb
std
lret
daa
mov
xchg
xor
sub
mov
xor
shrb
and
adc
sbb
lss
loope
xchg
mov
jno
adc
inc
add
cltd
rorb
add
mov
mov
ja
xchg
mov
pop
jge
lds
outsl
cmp
or
cltd
imul
call
adc
aaa
cmp
lret
pop
mov
dec
ja
xor
add
add
gs
jg
pop
out
dec
iret
push
fisubrl
je
inc
xchg
sbb
and
pop
shlb
add
orb
and
push
test
pop
lods
dec
xlat
imul
jns
scas
add
aad
push
push
bound
cmp
insl
sub
scas
or
add
sub
std
and
sbb
mov
or
mov
mull
test
and
sbb
je
inc
in
imulb
xchg
mov
xor
mov
lock
pop
push
push
pusha
pop
xor
daa
lds
xchg
out
mov
pusha
sbb
orl
les
dec
mov
xlat
jbe
inc
pop
xor
xchg
mov
and
ret
sbb
xchg
imul
xchg
aas
fs
movsl
mov
cmp
movsl
test
mov
mov
xor
cmc
inc
or
lahf
inc
test
fmull
xchg
fists
mov
inc
cltd
inc
mov
xlat
adc
xchg
repz
jno
iret
jle
bound
cmpsl
push
pop
xchg
fnstsw
fldl
movsl
and
or
inc
pop
sub
cmp
sub
aad
push
sub
add
nop
inc
mov
orl
mov
jno
cwtl
add
scas
andb
inc
inc
pop
scas
ficoms
sti
inc
fs
and
aaa
das
add
sbb
inc
push
add
mov
mov
enter
and
inc
sbb
fistpll
scas
cwtl
push
scas
lret
push
pop
sub
lret
sbb
aad
xchg
cli
xchg
ljmp
adc
add
test
dec
cwtl
ds
mov
sbb
fwait
push
in
imul
fimuls
adcb
orb
lahf
jnp
jge
cltd
lea
inc
out
adc
or
dec
lods
add
stos
sub
movsl
and
cmc
push
mov
sub
aaa
stos
dec
and
xor
and
push
mov
pop
popa
addr16
lret
mov
xor
fdivrl
xor
arpl
orb
cmp
sub
fwait
push
pop
pushf
daa
mov
push
inc
fs
popa
xor
inc
pop
inc
sub
add
dec
push
sahf
std
loopne
inc
sub
push
dec
pop
push
jo
mov
or
or
lods
or
adc
movsl
bound
inc
mov
fadds
adc
in
idivb
gs
inc
add
push
mov
push
xchg
push
adcl
hlt
fsts
xchg
or
lret
repz
adc
push
movsb
fcom
dec
in
je
lret
mov
shlb
ljmp
scas
fidivl
sub
jbe
lods
mov
testl
out
cmp
xchg
mov
imull
sbb
xor
inc
inc
adcb
pop
lcall
cld
pusha
push
out
cltd
xor
xchg
push
mov
dec
inc
xlat
add
test
push
cwtl
mov
cwtl
xor
mov
fcmovnb
or
jmp
mov
les
decb
jge
lret
mov
cmp
hlt
stos
fnstenv
jns
mov
xor
ds
mov
das
and
inc
pop
and
mov
push
push
push
and
ret
cltd
dec
cmpb
adc
nop
add
push
adc
jo
or
cmp
inc
rclb
lea
xchg
mov
mov
inc
jl
push
cmp
mov
xor
xchg
sub
dec
or
xchg
push
pop
and
dec
ljmp
test
pop
jns
mov
sbbl
arpl
inc
push
dec
scas
into
dec
inc
mov
cmp
xor
jbe
inc
hlt
pop
shlb
dec
push
shr
stos
imul
or
ficoms
outsl
fsts
cwtl
pop
sub
hlt
aam
xor
cmpsb
xchg
les
xor
leave
pop
dec
xlat
lret
fimuls
cmp
fimuls
aam
lret
enter
sar
cltd
sbb
out
incb
sbb
cmp
mov
dec
push
pushf
dec
xchg
dec
and
iret
cmp
xlat
xor
jg
ljmp
sub
int
jb
lret
sub
lock
xchg
jbe
add
adcl
iret
shufps
enter
xchg
push
mov
jge
stos
cmp
xchg
test
sbb
mov
push
cmp
test
scas
cmp
push
mov
lret
lahf
adc
xchg
or
and
int
idivl
cmpsl
adc
mov
daa
inc
jb
movsb
stos
jno
lods
and
or
movsb
mov
xchg
cmpsb
mov
call
data16
nop
add
add
xchg
dec
mov
aaa
mov
out
or
jo
fbld
adc
dec
nop
inc
outsl
psraw
mov
add
adcb
scas
or
fpatan
sbb
mov
inc
or
jno
add
pop
mov
push
shrb
add
scas
into
inc
mov
data16
push
pop
test
jo
mov
test
adc
stos
popa
pop
push
mov
inc
mov
out
jo
adc
sbb
dec
out
addr16
or
jno
pop
mov
std
lock
push
sub
ret
or
mov
fstp
mov
test
xchg
push
push
addr16
daa
push
add
jge
jo
jge
ret
or
pop
adc
jle
xor
sbb
ds
imul
in
mov
and
jbe
mov
add
daa
add
pop
outsl
lock
jb
dec
adc
push
mov
add
cmp
loopne
loope
xchg
repz
sub
jbe
jb
xor
adc
pop
repz
mov
xchg
cmpsl
mov
mov
adc
mov
popa
addr16
xorb
mov
loop
dec
sub
icebp
loopne
mov
and
andl
add
jno
or
loope
sahf
and
int3
push
mov
loope
xchg
test
movsl
dec
fists
mov
and
in
xor
and
jo
sbb
push
popa
out
lds
jecxz
sub
inc
xchg
adc
lret
test
pop
fsubs
dec
add
cmp
inc
inc
js
out
push
jmp
test
pop
adc
cmp
or
pusha
call
xor
fdivrs
cli
mov
test
fbld
and
jp
mov
dec
add
sbb
sbb
and
outsb
lock
mov
stos
dec
out
lret
aaa
sub
xor
enter
mov
add
jge
push
xorl
xchg
xor
loopne
leave
aas
nop
xchg
inc
add
push
adc
js
mov
jne
mov
fsts
mov
pusha
lret
and
xlat
call
lcall
xor
and
and
and
push
lret
xchg
rclb
test
mov
xorl
mov
ror
jcxz
dec
push
lret
cmp
fxch
or
ret
and
imul
or
fisttps
inc
dec
lods
inc
and
mov
negl
mov
jecxz
lret
scas
loop
inc
pop
mov
pop
push
mov
add
loope
adc
movsb
xor
push
stos
jne
loopne
int3
sub
rorb
clc
add
shll
jmp
pop
aaa
pop
or
mov
adc
sarl
jmp
adc
addb
orl
shlb
push
leave
sub
int3
cmc
xchg
sub
divl
cld
daa
rcll
rcll
xchg
test
movsl
sub
inc
mov
and
jge
sbb
mov
adc
out
pusha
cmp
xor
mov
imul
ffreep
sub
push
and
xchg
mov
mov
push
mov
mov
test
aas
add
or
xor
inc
or
push
sti
sub
xor
inc
sub
pop
rcrb
add
loop
pop
inc
adc
addl
fwait
pop
bound
cmp
and
xor
sub
roll
mov
jecxz
jmp
sub
mov
enter
rorl
lea
ret
cli
das
mov
orb
mov
pop
mov
shll
or
push
popl
cmp
push
lret
inc
and
bound
jns
jne
adc
cmp
or
imul
pop
cmp
cmp
sti
add
iret
mov
or
addr16
out
sahf
pop
dec
sub
adc
pop
adc
ljmp
jb
loope
cmp
addr16
bswap
inc
inc
gs
sub
pop
decl
popa
bound
add
add
dec
sub
xchg
inc
cld
cmp
aas
test
mov
sbb
out
mov
inc
inc
jns
mov
pop
xor
xor
cmp
jp
push
adc
fldt
jnp
scas
and
pop
add
cmp
add
call
cmp
outsl
lods
mov
das
and
jl
xlat
mov
faddp
pushf
addb
pop
fcomp
dec
push
sub
jge
ljmp
orb
xor
cmp
fidivrl
cmp
adc
dec
pop
jmp
mov
inc
lcall
pop
xchg
lods
add
jne
dec
dec
dec
cmp
xor
repnz
or
cmc
test
jb
addb
sub
bound
dec
add
xor
xchg
dec
int
int3
mov
in
and
sbb
lahf
lret
or
mov
in
cld
push
push
cmp
mov
sub
cmp
cmp
adc
cmp
mov
arpl
sub
sub
push
push
stos
dec
inc
les
std
mov
fs
adc
add
fs
xor
mov
lret
xor
pusha
pop
test
addl
and
jge
outsl
push
pop
inc
fstps
sbb
movsb
nop
pop
xchg
xchg
push
and
add
mov
sbb
xchg
sbb
dec
adc
pusha
sbb
sub
pop
sbb
clc
add
or
xor
or
add
ja
cmp
adc
fisubs
sub
mov
scas
enter
inc
mov
movsl
scas
cmp
jo
dec
inc
adc
push
out
rorb
stos
mov
les
and
aaa
xor
add
push
xchg
xor
adc
jge
in
cmp
sbb
test
mov
roll
pusha
cmp
lcall
adc
jmp
aam
fistps
test
inc
or
cli
adc
jb
or
mov
sub
mov
stos
leave
int3
mov
rorb
pusha
addr16
jo
pop
inc
or
cltd
mov
dec
jno
add
scas
mov
aas
and
das
mov
sahf
or
popa
cmp
shrl
and
xor
loop
add
sbb
ret
inc
sbb
xor
testl
dec
add
sbb
push
lret
and
int3
test
imul
movsb
adc
int3
test
popl
sarl
sbb
test
mov
sbb
mov
inc
enter
mov
inc
fisubrl
push
mov
call
in
addl
ljmp
cmp
ficoml
outsl
les
sbb
jae
add
mov
int
test
jmp
adc
push
mov
imul
sub
xchg
xchg
popl
int3
jecxz
fwait
jle
js
xchg
push
sub
into
sub
arpl
testl
iret
scas
lea
shll
test
addr16
cmp
mov
inc
add
sbb
movsb
pop
rolb
dec
movsl
cmp
mov
cmp
and
fmuls
mov
xchg
test
jns
jp
out
mov
add
and
movsl
dec
push
ret
mov
pushl
dec
adc
mov
mov
sub
push
xchg
sbb
jl
shlb
iret
ret
and
cli
inc
pop
xor
orb
test
std
lahf
ljmp
sub
pop
mov
sub
xlat
mov
jno
jmp
cwtl
adc
sbb
jno
and
lret
call
or
mov
xorb
sti
cs
movsl
popa
clc
lods
inc
loopne
dec
push
pop
jbe
imul
sbb
enter
xchg
or
mov
mov
xchg
dec
not
or
test
test
rcrb
cltd
outsl
push
movsb
jmp
shll
cmovp
loope
and
scas
inc
clc
sub
dec
push
mov
outsl
mov
fsubl
mov
scas
xor
popf
fwait
push
daa
xlat
lcall
loope
xor
mov
push
pop
stos
jp
mov
pop
cmp
inc
aam
ret
sbb
repnz
jne
mov
adc
cmp
or
mov
lahf
jge
mov
inc
lahf
sti
imul
push
fists
mov
ret
mov
cmc
es
mulb
clc
lahf
or
aad
sbb
dec
mov
pop
and
cmp
mov
fidivl
mov
fsub
pop
dec
pop
clc
dec
sub
sub
cmp
mov
cs
mov
js
imul
xchg
and
xor
xor
or
inc
ret
insl
test
cmc
inc
sub
ffree
icebp
push
sti
sub
clc
rclb
mov
sbb
arpl
or
mov
cmp
and
xchg
and
adc
cmp
orb
adc
andl
mov
dec
add
push
orb
xlat
mov
and
and
fsubrs
add
imul
daa
mov
or
jb
scas
add
fdivs
inc
shlb
test
or
dec
lea
inc
mov
adc
orl
and
stos
mov
sub
adc
pop
push
movsb
out
repz
dec
adc
or
sbb
adc
out
ret
adcl
mov
lahf
in
cmp
push
jge
insl
mov
adc
popf
or
ret
repnz
xor
add
test
pop
and
sbb
mov
pop
addb
es
hlt
pop
test
adc
adc
stos
je
lods
xchg
ret
aas
popa
adc
push
ljmp
xor
test
mov
repnz
add
mov
mov
mov
ljmp
and
sbb
mov
mov
mov
in
inc
popa
or
dec
pop
xorb
lret
mov
mov
jp
shll
xchg
add
lret
es
dec
cli
xor
les
jno
sbb
stos
or
push
or
adc
mov
lret
leave
pop
jg
mov
or
mov
sbb
adcl
dec
jno
mov
lods
push
adc
movsb
testl
jp
not
call
add
mov
and
sbb
ss
dec
call
popa
dec
movsl
inc
mov
scas
mov
push
adcb
scas
fisttpl
in
repnz
leave
loope
gs
and
sbb
or
cmp
cltd
mov
push
jno
rol
mov
out
cmp
or
push
mov
push
pextrw
sbbb
xchg
push
or
mov
mov
dec
inc
or
fstpl
push
jmp
push
and
pusha
cmp
les
jp
cmp
inc
andl
mov
int
jnp
xor
inc
inc
bound
ljmp
pushf
mov
mov
sbb
push
jne
imul
or
adc
xor
or
mov
push
mov
mov
sbb
xorl
pop
inc
scas
fidivs
add
adc
jmp
ret
bound
sbb
cmpsl
mov
cmp
mov
mov
cmp
mov
xor
dec
movsb
dec
push
push
stos
scas
jo,pt
sahf
jne
lcall
pop
repz
out
mov
lock
jne
pop
fwait
dec
dec
xchg
or
fs
ret
jmp
enter
push
sbb
std
add
pusha
sbb
rorl
inc
adc
rorl
xor
mov
mov
mov
sbb
insb
addl
aaa
lret
das
or
mov
push
insb
or
add
push
negl
scas
dec
push
mov
xchg
mov
sub
outsb
adc
bound
mov
fnstsw
push
adc
cmpsb
xor
cmpsb
push
push
inc
ljmp
fisubl
in
adc
outsl
iret
pop
inc
ret
imul
mov
cmpsb
rclb
inc
add
ret
popa
out
addb
xchg
cmpsb
adcl
sub
or
ljmp
fdivr
repnz
imull
dec
and
lret
cmc
mov
int
cmp
add
adc
gs
pop
fcomps
andl
sub
js
jo
mov
ljmp
xchg
ds
clc
and
idivl
sbb
bound
and
xor
int
jne
mov
pusha
sub
mov
mov
scas
sahf
dec
sbb
enter
and
inc
sub
dec
inc
cmp
add
fisttpl
imul
cmpl
push
cmc
fidivl
push
in
fstp
push
adc
xor
add
into
pop
dec
bound
pop
pop
dec
daa
repnz
xor
hlt
cmp
inc
in
pusha
inc
lret
test
inc
je
cmp
inc
pop
ja
dec
repnz
xor
pushaw
data16
push
add
adc
sbb
sti
push
mov
out
das
xchg
add
aas
arpl
cwtl
jge
mov
mov
scas
mov
in
fisubrs
and
mov
jmp
std
cmp
clc
ljmp
pop
inc
mov
inc
icebp
psrld
sbb
dec
mov
adc
cmp
hlt
mov
push
sub
in
jns
test
jnp
pop
xor
mov
test
out
mov
xchg
mov
xor
or
movsl
dec
fdivr
xor
and
aad
add
mov
js
add
mov
imul
dec
xchg
in
addb
jmp
mov
ret
jge
orl
lcall
or
push
stos
sbb
imul
dec
add
iret
lea
aam
push
es
push
pop
and
shl
test
mov
push
pop
pushf
imul
addr16
dec
inc
adc
add
clc
xlat
add
jb
cmpsl
cmp
cs
cmc
xchg
mov
adc
mov
mov
or
adc
pusha
sbb
xchg
fwait
arpl
sbb
sbb
add
dec
adc
aas
data16
mov
or
aas
xchg
mov
or
outsb
int
mov
mov
jecxz
mov
adc
or
sarb
scas
int3
add
or
or
js
fadd
rcr
mov
add
daa
enter
loop
inc
fstpl
push
push
xlat
pop
xlat
ficomps
adc
sbb
pop
clc
sub
mov
mov
mov
xchg
add
lcall
xchg
mov
jb
mov
jo
or
xor
sub
mov
and
in
mov
adc
es
jecxz
inc
jb
adc
clc
movsb
lcall
orb
xorw
mov
ljmp
jbe
add
imul
arpl
movsb
arpl
sbb
in
xor
arpl
jo
xchg
ret
inc
arpl
inc
nop
and
mov
cli
or
inc
and
add
sbb
push
mov
push
imul
or
mov
pop
sarb
and
sub
pushf
or
repz
xchg
push
mov
inc
inc
xchg
inc
inc
and
and
cmp
xchg
and
icebp
stos
pop
lahf
or
sub
ret
xor
and
xchg
pushf
xchg
or
pop
mov
pop
fs
loopne
popf
mov
mov
idiv
je
mov
mov
adc
xchg
add
clc
mov
mov
xchg
or
popf
pop
sbb
sbb
sbb
inc
sbb
out
adc
ljmp
pop
scas
shlb
add
test
popf
js
mov
add
mov
lcall
dec
sbb
fsubs
enter
sbb
xchg
pop
mov
mov
fs
push
add
add
loope
ljmp
lcall
xchg
in
enter
push
leave
scas
popf
adc
test
les
xchg
xor
fs
mov
add
and
cmpsl
xchg
push
cmpsb
loope
stos
inc
add
push
ficompl
sar
test
sbb
cwtl
inc
pop
out
push
negl
xlat
jle
bound
popa
pop
fs
inc
fists
add
or
insb
sub
adc
movsb
ljmp
jo
mov
push
mov
in
sub
or
or
loope
orl
or
push
sub
add
mov
stos
mov
pop
sbbb
test
pop
pusha
sub
fadds
mov
adc
sbb
mov
in
jno
sub
xchg
jl
add
bound
orb
pop
mov
nop
into
push
rclb
pop
dec
fadds
scas
cmp
sti
sub
mov
addl
lcall
lret
jge
xlat
mov
pop
mov
mov
push
push
add
mov
addb
and
rolb
sbbl
adc
iret
or
mov
loope
xor
jge
fsub
mov
imull
popa
xchg
dec
sti
xor
push
iret
pushf
mov
jnp
nop
aad
ret
mov
hlt
or
add
sbb
cmp
cmp
push
in
sti
xorb
in
mov
in
cmpb
xchg
into
stos
add
fcomip
dec
pop
adc
fdivs
or
dec
pushf
rolb
loopne
into
push
and
push
push
rcll
lods
push
cmpsl
movsl
in
xor
and
cmp
insl
lcall
and
mov
stos
push
orb
jo
adc
adc
mov
pushf
xor
ret
or
dec
jne
mov
imul
mov
andb
leavew
xchg
inc
inc
mov
fs
mov
push
push
push
pop
les
roll
sub
pusha
push
add
or
push
add
and
adc
pop
cmp
add
loope
or
shll
sbb
cli
jg
sub
xchg
mov
enter
repz
mov
pop
push
cli
sub
adc
sbb
mov
iret
loope
pop
mov
fcoms
lods
add
scas
cmpb
pop
lret
push
jl
pop
nop
cwtl
dec
mov
mov
imul
dec
push
push
xchg
cmp
push
inc
pop
sbb
xor
dec
nop
ret
or
pop
or
adc
mov
push
test
bound
mov
std
mov
xor
lret
loop
xor
and
push
xchg
xchg
inc
bound
xor
arpl
movsb
push
mov
dec
sub
outsb
inc
jle
push
scas
cmp
jo
add
jge
sbb
or
dec
jge
or
pop
sbb
sbb
cmpsl
adc
dec
sti
cwtl
inc
jmp
call
idivl
es
sbb
and
cmc
xor
push
xchg
ds
xchg
inc
sub
adc
pop
adc
lret
aam
andl
jmp
lret
and
jge
add
rcrb
movsb
divb
inc
loop
negl
inc
xlat
xor
xchg
sub
out
mov
inc
inc
stos
pushf
lahf
push
xchg
dec
mov
negl
stos
ds
insl
inc
addr16
loop
mov
mov
popf
nop
rcrb
subl
dec
mov
cltd
jmp
and
and
leave
jmp
fadd
jge
cmpsl
dec
cwtl
je
xor
mov
cwtl
and
push
jp
xlat
adc
mov
in
ret
jnp
insb
jne
mov
mov
mov
jle
xchg
mov
lahf
jmp
jg
arpl
lcall
jge
push
in
mov
sub
and
hlt
das
jmp
movsl
mov
dec
jmp
or
mov
out
fwait
clc
or
scas
inc
inc
and
pushf
add
add
sub
adc
aam
andb
addb
add
jmp
ret
aas
and
outsl
mov
cmp
pop
xchg
pop
shrb
out
jne
push
adc
testl
or
roll
movb
ja
fs
push
mov
dec
outsb
jo
and
das
pop
sub
or
ds
xchg
push
mov
cmpl
cs
andl
add
popa
cmpsl
adcl
std
aas
fistps
lret
sbbb
inc
pop
mov
dec
sub
js
test
scas
popf
xchg
bound
push
jno
or
xor
adc
lret
add
push
and
inc
xchg
cmp
and
or
and
loope
enter
mov
push
cld
inc
sbb
mov
fs
mov
inc
pop
fsts
fsubrl
mov
leave
aaa
into
inc
sbb
jp
adc
es
gs
dec
add
jns
inc
outsb
mov
pop
and
add
lret
adc
lds
lahf
lret
test
mov
push
mov
ds
jg
adc
mov
sub
shll
push
les
xchg
es
loope
test
bound
pop
sub
sub
add
movsb
and
sub
or
inc
lret
add
or
nop
shll
mov
or
cs
add
dec
ret
cmp
lret
jno
sbb
cmp
pusha
cmp
push
push
add
and
add
gs
cmpsl
mov
dec
loopne
sti
sbb
scas
pop
mov
addr16
jae
popa
pop
push
out
push
rcrb
jb
or
inc
push
push
and
nop
lret
xchg
scas
push
lret
scas
add
add
xorb
add
or
and
cli
pop
dec
scas
or
mov
mov
push
mov
add
sub
adc
inc
inc
cmp
fsubrs
inc
mov
and
or
cmpsl
ljmp
aad
addb
iret
mov
shlb
pop
mov
rcll
add
adc
dec
xchg
adc
lret
fists
test
xor
pusha
fcomp
or
test
cwtl
mov
adc
sub
lods
out
fimull
adc
addr16
outsb
xchg
test
orb
sbb
dec
and
mov
xor
les
sub
lahf
and
mov
negl
lret
push
push
adcl
cmp
ljmp
push
subl
test
dec
cmpl
adc
add
cmpsl
mov
fwait
mov
iret
shlb
add
add
xchg
ror
outsb
loop
ja
aam
sbbb
popa
or
mov
test
dec
jae
jle
mov
out
xchg
mov
aaa
lret
xlat
or
xlat
and
ljmp
sahf
lret
inc
frstor
xor
sarl
dec
pop
scas
fucomp
lret
ja
mov
sbb
enter
sub
enter
inc
push
lret
sub
adc
push
and
js
adc
and
lcall
movsb
inc
and
bound
dec
push
sbbl
add
shlb
mov
adc
add
mov
adc
and
dec
cwtl
loope
jo
into
sub
movsb
neg
sub
sub
mov
daa
or
stos
add
cmp
xor
leave
lahf
mov
loopne
addr16
and
jns
mov
cmpsl
in
or
daa
hlt
comiss
or
xor
insl
mov
jmp
add
add
cmpsb
adc
clc
sbb
fs
pushf
stc
lahf
std
imul
add
jnp
or
cmpsl
dec
cli
mov
fnstsw
movb
cmp
jns
mov
fsts
clc
sbb
sbbb
push
test
repz
sar
fs
dec
lahf
mov
adcl
jnp
add
cmp
cmp
push
xchg
and
popa
insb
pusha
dec
pop
fs
clc
call
test
enter
fnstenv
ret
xchg
inc
pusha
pop
xor
xchg
aas
mov
and
mov
jge
pusha
nop
pop
cmc
loope
mov
xor
sbb
push
pusha
jg
cmp
add
pop
mov
dec
cmp
fdiv
call
data16
dec
sarb
pop
push
add
add
push
adc
cwtl
xchg
xchg
cmp
mov
mov
icebp
dec
cmp
or
adc
push
shrl
sbb
loop
adc
adc
sar
loopne
pusha
int3
sub
and
ds
cmp
icebp
adc
andb
add
incl
js
dec
js
or
imul
inc
loope
and
shlb
xor
cli
mov
rcrb
cmp
enter
stc
rorw
dec
push
lret
mov
adc
and
cmp
jnp
cmp
jb
adc
mov
jg
fs
mov
and
aam
loope
and
mov
lods
dec
cmp
mov
mov
loopne
and
xchg
sub
pop
or
pop
mov
inc
mov
frstor
and
fisubs
inc
sbb
and
popa
les
push
mov
fs
pop
jge
mov
sbb
sub
sbb
ja
ds
mov
adc
sub
lret
les
inc
add
push
aaa
loopne
pop
ja
aas
xchg
jge
sbb
xor
mov
or
fcompl
cmp
push
jbe
adc
add
scas
fimull
js
xchg
movnti
ss
xor
push
and
bound
fs
or
cmp
mov
loop
and
xor
pusha
js
sarb
jns
inc
mov
xor
or
pop
mov
ret
sbb
jg
cld
mov
push
sub
mov
and
pop
jg,pt
sti
mov
scas
xchg
mov
and
out
jae
test
sub
or
add
or
loopne
js
or
and
mov
nop
in
inc
test
mov
and
add
rcll
adc
mov
sti
clc
xchg
cmp
add
ds
sub
sbb
cmp
dec
push
aam
mov
test
aam
or
call
int3
add
add
clc
push
pop
je
lahf
bound
xchg
xor
jg
nop
add
rcl
adc
cmp
in
in
loop
jp
inc
fs
aam
imul
inc
mov
xchg
xchg
into
sub
sub
and
data16
cmp
es
popa
dec
daa
pop
incl
xorl
pusha
sbb
mov
lock
aas
sub
add
popa
push
mov
je
jp
sbb
cmp
loop
sub
lods
nop
popf
mov
popa
test
adc
data16
xor
fcoml
xor
xor
sbb
lcall
jl
test
push
mov
adc
mov
or
push
out
pop
push
repz
sbb
imul
jl
mov
popf
mov
movsl
loope
or
ja
xchg
inc
pop
cld
loope
push
sarl
cmp
test
xlat
inc
xchg
loop
and
mov
data16
xor
pop
fmul
jae
gs
adc
pop
cmc
push
mov
sbb
inc
pop
in
xor
push
and
push
ret
sub
push
mov
push
std
lcall
mov
inc
pop
xchg
and
adc
bsr
loop
jns
loope
or
and
lcall
rcll
daa
loope
xor
loopne
xor
inc
mov
dec
jecxz
nop
orb
nopl
mov
out
or
lahf
or
xchg
test
adc
cwtl
sbb
jo
dec
jb
inc
sbb
dec
jmp
nop
inc
and
and
rolb
daa
or
cmp
incl
adc
and
inc
or
aad
test
xchg
retw
inc
hlt
fs
jne
mov
add
in
sub
jbe
mov
and
dec
cltd
stc
or
or
lods
dec
jge
movsb
adc
mov
test
lcall
test
or
dec
inc
inc
xchg
xor
mov
mov
xor
or
movsl
add
dec
loope
push
bound
cli
leave
incb
dec
orb
inc
jecxz
sub
add
divl
iret
adc
scas
add
jl
add
orb
xchg
cmpl
test
scas
sub
popf
push
push
movsb
stos
cwtl
fstpl
mov
je
or
leave
dec
popf
sarl
or
cmp
scas
push
ljmp
add
xor
negb
mov
or
xor
mov
scas
xchg
adc
add
inc
ja
cli
inc
xchg
movsb
lret
jge
ror
sub
add
push
loope
push
sbb
imul
jno
iret
or
dec
pop
bound
dec
inc
or
enter
xor
jmp
inc
fiadds
and
or
repnz
lahf
and
sbb
popa
jmp
ss
xchg
and
lock
dec
cmp
add
bndstx
jp
rcrl
sbb
xor
fnstsw
jno
ljmp
clc
inc
pop
xchg
sarb
dec
or
iret
mov
test
rorl
jne
mov
fwait
push
adc
or
rolb
movsl
pop
jmp
lcall
movsl
cmp
or
inc
dec
and
push
and
js
adc
jno
sub
add
and
dec
mov
addr16
lcall
adc
mov
add
iret
push
push
mov
mov
push
xchg
scas
pusha
pusha
jo
out
pop
sbb
mov
sbb
or
dec
sub
inc
int
add
cld
lret
fdivl
sub
dec
mov
imul
sbb
pusha
xor
adc
test
sbb
inc
xchg
out
imul
add
sbb
mov
inc
lahf
add
scas
jno
fwait
inc
jg
pop
testb
jl
insl
mov
sub
xor
jle
adc
test
lds
or
adc
mov
mov
and
sbb
stc
inc
outsb
mov
outsl
inc
sarb
or
rcrb
dec
sbbl
imul
in
orb
lret
lahf
push
mov
out
xor
addr16
sahf
and
sti
mov
jae
jbe
mov
mov
es
dec
loop
xchg
lcall
ficomps
int
das
loop
dec
in
add
in
mov
loop
add
int3
mov
popf
push
inc
sbb
imul
sbb
imul
mov
xbegin
adc
bound
xor
add
inc
or
dec
adc
iret
add
and
mov
dec
in
ss
sbb
mov
imul
cmc
or
and
push
jle
lahf
mov
cmc
mov
scas
or
scas
popf
les
inc
cmp
and
pop
out
aas
mov
lgs
sbb
addl
jbe
iret
es
mov
pop
inc
sti
adc
dec
out
jo
cmp
pusha
jg
mov
mov
inc
xchg
xor
ret
mov
xchg
inc
or
mov
rcrb
cmc
cmp
sub
test
and
or
nop
mov
dec
out
or
dec
jg
or
inc
xor
mov
lea
push
push
sub
adc
sub
inc
or
subb
mov
add
scas
sub
push
push
ljmp
cmp
push
sbb
shll
xchg
adc
xchg
and
movl
arpl
jle
roll
stos
fdivrl
int3
add
push
ret
pop
pop
xor
cmp
mov
or
or
jns
faddl
or
hlt
mov
inc
cwtl
shrl
stos
fnsave
stc
iret
in
shl
dec
sbb
movsb
pusha
sbb
add
in
sbb
dec
sbb
push
mov
xor
out
mov
mov
loopne
xchg
out
daa
out
jb,pn
inc
xorl
outsb
movsl
add
add
jg
sti
mov
sti
sahf
test
pusha
xor
adc
shrl
cltd
or
out
vmaxpd
pop
pop
and
or
cltd
pop
loop
jecxz
pop
cmc
inc
pop
outsb
push
add
jmp
out
sub
aas
add
fmull
jo
xchg
addr16
or
inc
lret
cmp
std
xchg
dec
xlat
xor
xchg
jp
cltd
popa
lea
adc
gs
cmp
adc
dec
outsb
mov
ja
sarl
xchg
jecxz
mov
jae
sahf
sbb
mov
rolb
pop
push
push
sbbl
or
adc
je
pop
jae
or
pop
test
sarl
mov
pop
movsb
iret
cltd
mul
xchg
adc
xchg
sbb
or
mov
test
or
sbb
sub
and
das
mov
adcl
sub
aas
dec
pop
test
mov
jp
xchg
or
test
xorb
add
inc
mov
push
inc
jno
mov
shlb
ja
jne
inc
sbb
movl
pushf
jne
add
sbb
xor
orl
test
andb
xchg
fwait
inc
test
cmpsl
sub
mov
mov
jg
sub
or
cmp
pop
dec
and
fdivrp
mov
fdivs
sbb
and
push
sbb
pop
mov
repnz
pusha
jo
add
pop
scas
ret
jo
insb
xor
mov
andb
lahf
sub
clc
sbb
push
sbb
les
jge
lods
or
xchg
cmp
pop
mov
sbb
pop
ljmp
mov
and
loope
cmp
inc
xchg
xor
or
dec
sub
test
aaa
sub
bound
fwait
pop
outsl
xchg
mov
aad
mov
push
addb
xorb
sbb
rcll
daa
mov
and
stc
xor
or
aad
sub
rolb
dec
jo
andl
jb
adcl
add
and
push
push
je
dec
or
pop
or
aas
mov
repz
sbb
sti
and
dec
cmpsl
pop
mov
push
mov
mov
sbb
ds
ficomps
or
mov
pop
int3
dec
fld
pop
dec
cmc
or
js
dec
nop
fs
sahf
pop
pop
mov
imul
mov
and
in
xchg
pushf
mov
sahf
lds
sub
cmp
js
mov
or
cmp
pop
imul
lock
pop
inc
add
pop
ret
fs
sub
lcall
dec
loopne
and
sbb
push
xchg
scas
aas
xchg
lret
lea
imul
ficoml
sbb
mov
push
js
mov
push
sub
xchg
out
sbb
sbb
sub
movsb
rcrb
dec
notb
stos
add
sbb
inc
mov
fsubs
add
lds
mov
ret
and
xchg
out
stos
es
and
cmc
mov
or
push
bound
test
dec
pusha
dec
cmp
jecxz
dec
stos
add
push
lods
inc
add
xchg
or
sub
sbb
mov
xor
push
sub
or
outsb
or
lret
icebp
or
addl
bound
pop
sar
ds
dec
scas
test
and
push
mov
sbb
dec
sbb
out
mov
icebp
xchg
shrb
fidivrl
bound
cmp
xchg
in
add
push
or
fcoms
mov
movsb
iret
inc
cltd
xchg
movsb
add
arpl
mov
mov
add
inc
cmp
fistpll
mov
repz
pusha
lods
insb
inc
adc
imul
or
pop
or
xor
mov
add
cmp
adc
aaa
sar
adc
movsb
mov
push
pop
hlt
mov
ljmp
adc
push
xchg
in
pop
rcrl
fdivs
push
cmp
aas
or
push
jo
popf
xor
cmc
mov
ds
imul
sbb
pop
lret
pop
xchg
adc
sbb
cmp
dec
pop
inc
xchg
testb
mov
jae
data16
cmp
mov
test
orl
test
adc
aam
shlb
push
pop
inc
push
pop
adc
adc
mov
int3
jae
into
jmp
push
pop
fisubl
cmp
push
cmp
addl
stos
bound
mov
push
lock
jns
adc
xchg
xchg
repnz
loope
xchg
pushf
outsl
pop
xchg
sbb
scas
mov
xchg
push
rcrb
push
cmc
jbe
or
push
fwait
daa
cmp
cmp
and
push
mov
jmp
fs
dec
adc
mov
lcall
inc
inc
sbb
sub
ret
xchg
cmp
iret
and
sbb
sub
adc
dec
ss
scas
pop
push
and
stos
sub
dec
inc
hlt
fiadds
out
sarl
and
push
mov
dec
sti
inc
lret
movsl
test
add
push
decb
dec
sbb
stos
int3
cwtl
test
dec
mov
and
leave
movsl
xchg
xor
push
fwait
push
scas
sbb
mov
mov
test
int3
xor
jbe
jo
add
mov
jo
mov
and
mov
pop
jp
adc
cltd
adc
stos
pop
inc
js
out
jp
movsb
imul
sub
fsubs
inc
mov
fimull
xchg
push
in
out
ficompl
imul
or
sub
and
mov
xor
sbb
jo
pusha
sbb
pop
jp
fwait
jns
js
iret
xor
leave
loop
mov
and
inc
sahf
enter
sbb
dec
mov
cli
enter
xchg
cwtl
popf
inc
push
adc
pop
repnz
ret
movb
repz
xor
sub
cmpsl
jge
cmp
and
ficomps
mov
insb
and
pop
lds
pop
iret
test
stos
sbb
mov
gs
adc
dec
fwait
jo
or
sub
fimuls
adc
adc
and
lcall
test
sbb
icebp
je
lahf
push
scas
int
lock
mov
pushf
repnz
outsb
dec
mov
dec
add
jge
in
ljmp
ficoml
xor
ds
cltd
je
jne
adc
popa
mov
and
rol
rcrl
inc
cwtl
or
pop
sub
dec
popf
push
jns
lahf
jle
xor
sbb
mov
jg
jge
outsb
or
push
addr16
es
lods
xchg
and
sbb
or
sbb
repnz
xor
push
add
frstor
xchg
cmc
mov
lds
insb
push
mov
es
in
push
sbb
dec
movsl
inc
sahf
repz
push
pop
cwtl
and
movd
add
push
push
mov
mov
iret
push
fisttps
les
mov
cmp
push
cmp
sub
or
addr16
scas
mov
mov
pop
push
sub
fstpl
mov
or
add
adc
fwait
mov
mov
push
adc
cmp
nop
inc
xchg
ret
enter
cmp
and
pop
push
cmovae
push
sbb
or
test
or
adc
and
loope
sub
or
and
movsb
adc
mov
pop
dec
push
or
sub
sbb
dec
add
inc
or
add
adc
mov
adc
fistps
scas
or
cli
push
dec
jns
popf
inc
push
pusha
scas
add
int
inc
adc
adc
or
mov
or
orl
add
add
xor
mov
pop
sbb
or
inc
imul
pop
dec
mov
out
sub
pop
mov
in
sbb
bound
push
xlat
xchg
ljmp
xor
mov
add
into
bound
pop
ficompl
sub
or
dec
xor
and
popf
inc
stos
aaa
into
xor
xor
sub
mov
repnz
jb
in
and
inc
mov
push
jae
xor
test
mov
dec
ss
xchg
push
scas
test
pop
sub
mov
in
subb
add
cmp
jmp
push
inc
pop
test
ret
and
cmpsl
mov
cwtl
fdivl
push
mov
dec
mov
outsl
fwait
rcll
sbb
sbb
xor
sbb
out
addr16
xchg
pop
sub
movsb
inc
or
sbb
xor
in
jb
stos
add
push
mov
addr16
or
or
mov
mov
lret
pop
sub
jo
inc
add
aam
lret
fs
dec
data16
cmp
into
ret
sbb
dec
xor
and
frstor
cltd
out
rcrb
std
jp
stc
push
pop
ljmp
xchg
lret
jl
inc
lret
push
clc
adc
leave
jmp
stos
test
addl
and
insb
rolb
jl
jno
xchg
sbb
mov
arpl
push
sbb
mov
add
sbb
or
movsl
aas
jge
mov
dec
or
shl
lock
cmp
imul
mov
movsl
dec
mov
aam
sub
test
xor
lret
pop
sub
int3
add
inc
push
jnp
lcall
pop
mov
xor
out
popa
in
test
cmpsl
pushl
dec
xor
or
dec
cwtl
loop
clc
testb
inc
push
and
dec
out
adc
xor
pop
mov
mov
mov
or
fisttps
popf
and
push
mov
inc
repnz
stc
pushf
xchg
in
cmp
cmc
inc
and
aaa
iret
mov
loopne
inc
pop
addb
fs
cmp
fisubl
mov
rorb
adc
nop
xchg
pop
dec
mov
cltd
and
sbb
jno
xor
lret
jl
add
nop
inc
test
gs
and
pop
pushl
mov
lcall
push
adcb
adcl
imul
data16
cmp
mov
es
push
cld
mov
faddl
sbb
jl
cmp
mov
push
lret
test
xor
sbb
nop
adc
sub
cltd
or
jl
scas
lods
xchg
sti
or
into
pop
mov
nop
and
jge
fsubrp
jb
cs
and
pop
cld
push
fldl2e
sub
dec
fcomip
sbb
movsb
loope
incb
inc
push
dec
ja
add
mov
sbb
jg
clc
ret
jge
inc
bound
out
sub
xorl
clc
enter
aaa
push
rorl
popa
xor
mov
cmp
mov
xchg
mov
dec
jae
push
mov
outsb
xor
ljmp
into
adc
jne
pop
in
push
in
lock
mov
lret
loope
cmp
das
push
movsb
pop
mov
dec
jmp
xor
push
jge
pop
popf
or
scas
push
sbb
stos
outsl
or
leave
mov
ds
enter
stos
fistpl
test
xchg
push
add
mov
int
lock
mov
bswap
pop
and
cmp
stos
inc
cmp
or
repz
push
mov
cmp
pop
sub
or
lea
imul
ja
stos
bound
inc
jg
cwtl
fstpl
fidivrl
aaa
cmp
add
xchg
nop
add
cmpsl
adc
enter
sbb
outsl
bound
inc
rcr
shl
mov
xchg
mov
or
sbb
in
push
sbb
xor
or
mov
cmp
fwait
pop
popa
mov
sbb
cmp
gs
lret
ja
sbb
in
adc
cs
push
xchg
outsb
cwtl
int
mov
stos
into
test
movsb
outsb
les
sarb
sbb
out
cmp
int3
test
movsl
pushf
xor
adc
decb
add
mov
xor
mov
out
sub
leave
aad
adc
push
cwtl
je
or
mov
lods
lea
fistl
adc
mov
xor
inc
rorb
cmp
iret
cli
adc
sbb
insl
and
loopne
in
inc
add
aad
push
loope
push
loopne
leave
jbe
enter
lret
fcom
and
push
imul
inc
fsub
push
cmp
mov
adc
nop
lret
ljmp
jbe
data16
mov
mov
into
rorl
xlat
sbb
cs
dec
sbb
and
loop
js
leave
and
pop
les
xor
inc
daa
inc
inc
ret
and
fidivl
and
stos
cmc
sbb
xlat
subb
inc
ja
push
sbb
sub
xchg
test
and
pushf
imul
aam
sbb
mov
inc
loop
ljmp
in
call
cmp
cmpsl
pop
stos
aaa
add
lds
fists
iret
arpl
mov
in
stos
call
das
inc
in
cld
xor
cmpsb
adc
leave
or
jmp
mov
lds
or
aas
sbbb
stos
or
gs
aam
mov
add
push
das
test
cmp
sbb
nop
fwait
ljmp
xor
mov
and
or
cmp
cmp
xchg
inc
ret
dec
and
lds
and
adc
cli
rolb
inc
xor
mov
add
mov
cmpsb
enter
stos
sub
dec
loopne
out
lret
out
cmp
jg
dec
shrl
cs
inc
imul
jnp
negb
sbb
pop
jo
dec
ret
loop
mov
shrb
lahf
pop
mov
jno
jno
lock
xchg
cmpsl
xlat
mov
inc
push
stos
cli
dec
pop
mov
test
mov
cmp
jnp
data16
jmp
fs
inc
xchg
push
nop
dec
lock
sbb
inc
stos
aaa
loope
pushf
dec
sbb
push
and
or
or
adc
shll
sub
mov
pusha
test
fcoms
sub
in
dec
inc
int
jle
mov
mov
adc
and
or
mov
xchg
clc
or
gs
fcmovu
mov
pop
mov
jp
ja
scas
mov
or
pusha
xchg
leave
in
or
xchg
jnp
mov
and
cmp
pop
stos
lret
popa
mov
dec
and
jnp
std
scas
xchg
ficoms
sub
addr16
add
cs
add
jno
or
pop
dec
bound
fs
add
jno
pop
xchg
sbb
cmp
fsts
cmpb
mov
and
inc
and
xchg
idivb
push
out
pushf
fmull
lock
and
mov
xchg
sub
hlt
pop
test
imulb
xchg
inc
prefetcht2
rcl
mov
fidivl
test
cmc
mov
cmp
and
or
dec
imul
xchg
pushaw
inc
sbb
xchg
inc
inc
faddl
sbbb
add
add
int3
inc
mov
sbb
lcall
imul
adc
xor
sbb
mov
jno
sbb
aam
xor
jecxz
add
andl
or
cmp
xor
mov
mov
inc
pop
xor
mov
sbb
inc
nop
sub
arpl
adc
push
sbb
ds
add
jp
addr16
mov
test
mov
iret
or
sbb
adc
leave
stos
push
nop
mov
xor
push
jp
mov
outsl
je
stc
pushf
or
dec
add
and
out
and
cli
dec
roll
arpl
cmc
hlt
dec
das
cmp
cmpsb
dec
push
sub
adc
or
lea
mov
stos
or
mov
sbb
rcrl
xchg
mov
or
dec
mov
mov
mov
xchg
insb
lahf
fcmovbe
enter
and
push
pop
inc
in
jg
inc
fs
sbb
cmp
jbe
movsb
enter
lea
jecxz
push
imul
jne
das
or
mov
add
or
ret
and
fimull
lea
jge
add
add
xor
jb
test
push
pop
jne
pop
pop
nop
cmp
inc
stc
enter
scas
mov
xchg
jno
and
call
pop
add
cmc
test
cmp
arpl
fildll
and
push
add
and
push
jle
inc
xchg
sub
lcall
enter
xor
mov
lahf
and
enter
lds
xor
or
test
dec
pusha
and
mov
mov
mov
cmpsl
test
shlb
push
repz
or
mov
pop
cli
in
or
outsl
fsubs
pop
xchg
pop
lds
dec
jl
and
imul
mov
fadd
push
and
arpl
int
lcall
shrl
arpl
or
dec
jno
xlat
pop
test
and
add
add
fnsetpm(287
or
out
pop
orl
jb
add
pop
push
insl
das
push
mov
cmp
in
mov
cmp
adcb
pop
add
pusha
and
jge
add
scas
iret
outsb
sbb
dec
cmp
out
andb
nop
pop
mov
mov
jecxz
ficomps
xchg
inc
hlt
sub
addr16
pop
cmpl
jge
sub
jno
out
in
xchg
ret
push
sbb
gs
out
sbb
jge
mov
push
loopne
xchg
and
je
add
dec
cmpb
or
lahf
pop
jo
sbb
mov
pop
dec
xchg
fildl
inc
ret
dec
lock
mov
fsubr
pop
dec
addr16
mov
test
jecxz
subb
add
push
mov
into
inc
mov
iret
nop
mov
call
pusha
pop
dec
pop
inc
cmp
sbb
mov
fiadds
sbb
sbb
pop
mov
fs
ret
rep
sub
mov
xchg
test
in
movsb
cmp
lret
adc
jmp
lahf
sahf
cltd
and
xchg
mov
icebp
mov
movsb
adc
pop
out
leave
sti
mov
cmp
aam
pushf
sbb
and
mov
setle
inc
fistps
stos
cmp
popa
enter
fidivrl
testl
rorl
ret
in
mov
adc
into
sbb
pushf
pop
push
out
in
push
cmp
mov
out
test
adc
xchg
popa
sub
nop
sbb
fsubl
sbb
scas
rcrb
stos
mov
dec
jle
push
mov
shl
mov
adcb
adc
add
repz
xchg
and
shlb
sahf
aam
movsb
xchg
jns
and
outsb
pop
gs
in
mov
add
dec
leave
dec
mov
leave
xor
dec
push
jmp
stc
and
or
imul
sbb
mov
mov
xchg
loop
dec
pop
mov
or
bound
andb
push
pop
pop
inc
ret
and
adc
das
and
xor
iret
mov
outsl
mov
or
int
jg
sbb
dec
jecxz
pop
jns
cli
adc
int
leave
and
inc
xchg
test
dec
mov
xchg
mov
push
lahf
sub
dec
mov
sbb
lret
xor
sub
push
dec
js
lret
lcall
mov
push
lds
xchg
pop
dec
xchg
fldenv
push
clc
loop
mov
mov
std
roll
loope
jmp
push
inc
mov
pop
add
subb
jle
dec
movsl
clc
enter
dec
shl
inc
insb
lret
mov
rorb
mov
add
sbb
jno
adc
mov
or
pushf
push
dec
inc
movsl
enter
rorl
jne
xchg
inc
out
pop
mov
loopne
mov
mov
push
or
and
add
cmp
xchg
inc
inc
mov
pop
pause
out
stc
dec
iret
or
insb
xorb
pop
out
cwtl
out
pusha
push
je
ror
aaa
xchg
adc
pop
cmp
popa
sub
into
sbb
or
sti
mov
mov
or
and
scas
jp
sub
das
add
push
pop
mov
xchg
mov
fbld
mov
inc
hlt
sub
movsb
push
add
loopne
int
mov
test
jg
ret
popf
sbb
and
test
sub
rcrb
pop
popa
aas
jns
adc
push
cmpb
dec
pop
sbb
jl
xor
daa
mov
and
cwtl
repz
cmp
out
mov
adc
jmp
xchg
mov
test
icebp
aas
fcmove
cmp
out
push
pop
out
fiadds
push
mov
sub
cltd
adc
notl
cmp
in
jne
cmp
and
hlt
repz
test
scas
adc
mov
inc
ret
jns
daa
push
and
adc
push
inc
mov
insl
jmp
pop
in
adc
test
int
pop
xlat
lods
movb
pop
imul
ret
aaa
add
movsb
stos
lea
or
xchg
inc
imul
inc
mov
jecxz
mov
fsubrl
add
sub
es
rcrb
or
or
push
ljmp
leave
push
dec
subl
cmc
mov
jmp
push
fwait
imul
pop
add
mov
in
repz
sub
mov
cmpsl
cwtl
in
mov
cmp
cli
dec
pop
mov
inc
mov
cmp
or
cwtl
out
xorl
sbb
push
les
or
rolb
insb
mov
fimull
sbb
neg
inc
or
cmp
iret
ror
xchg
and
dec
ljmp
outsl
in
rclb
mov
adc
in
bound
in
add
sbb
sti
cmpsl
dec
and
mov
mov
pop
nop
and
add
sub
cli
or
xor
movsb
inc
xchg
add
imul
shrl
add
popa
push
sub
jge
push
test
jmp
leave
ret
lea
jge
dec
pushf
and
add
adc
imul
push
inc
popf
flds
out
shr
jns
dec
sub
leave
ret
repz
cmc
mov
xor
jp
add
inc
scas
add
adc
sub
sbb
push
sbb
or
popa
shrl
insl
test
push
enter
out
dec
mov
and
or
data16
sbb
or
adc
jge
add
pop
pop
fists
pushf
add
outsl
dec
loope
into
add
imul
andb
mov
mov
adc
push
lret
stos
cmp
std
test
pop
lcall
sbb
movsb
mov
enter
lret
addr16
daa
mov
outsb
pop
mov
mov
pop
lcall
xchg
clc
mov
ljmp
scas
mov
cli
sbb
pop
sarb
cmc
cmp
ds
rcrb
add
into
and
subl
add
sbb
sbb
lds
sbb
nop
xchg
jmp
lea
or
rclb
inc
mov
mov
pop
fucomip
mov
sbbb
inc
inc
jmp
ret
dec
jmp
ret
inc
pop
and
in
ds
mov
popl
sub
scas
bound
js
pop
and
or
pusha
fsubr
scas
repz
lcall
xor
shrl
jno
mov
insl
add
loop
or
loopne
subb
in
adc
sbb
or
pop
inc
ret
dec
shll
jno
dec
pop
mov
mov
lods
scas
ret
or
pop
imul
mov
push
and
dec
sbb
mov
mov
sahf
xchg
pop
mov
rorl
and
sbb
jo
fisttps
sub
and
idivb
sub
or
jge
sbb
js
inc
sahf
add
scas
add
mov
xor
push
mov
insl
push
fcmovnu
pusha
push
scas
addr16
cmp
cmp
mov
jnp
lcall
xor
cmovno
or
in
ret
subb
inc
add
cmp
push
pop
mov
mov
shll
int3
add
jp
add
out
lahf
callw
std
sub
ret
mov
flds
nop
bndstx
mov
scas
or
insb
adc
nop
idivb
int3
sub
rclb
inc
push
aaa
or
enter
movsl
pushf
mov
cmpsl
enter
fcmove
lcall
cmpsb
and
adc
cwtl
insl
mov
fwait
dec
fcomp
popa
xor
dec
inc
stos
andb
inc
fs
jp
movsb
mov
adc
or
leave
pop
dec
add
dec
cmp
sahf
jo
mov
pusha
jge
or
icebp
leave
mov
sub
jl
clc
enter
ja
jnp
pop
loopne
nop
bound
iret
or
mov
sub
inc
push
notb
mov
mov
cmp
mov
mov
cltd
mov
mov
rorl
push
ljmp
pop
iret
inc
sbb
js
rclb
jmp
push
loop
int
push
sbb
call
je
pusha
sub
aas
add
mov
inc
inc
test
inc
test
mov
rclb
xor
mov
jmp
xchg
or
in
xorb
cmp
push
fs
fildll
pop
jmp
push
bound
jnp
push
int3
outsb
insl
fcompl
jo
sbb
mov
lret
dec
in
dec
push
sbb
into
sbb
movsl
fwait
outsb
mov
pop
pushl
out
xchg
es
in
or
jne
inc
or
push
and
jne
push
sbb
pop
scas
or
shrb
mov
pop
push
mov
jbe
pop
and
jae
or
xchg
in
das
fiaddl
sbb
inc
enter
shlb
fwait
inc
popf
mov
scas
add
add
popa
mov
mov
lret
fsubrs
inc
nop
jo
add
daa
dec
out
imul
cwtl
test
and
test
push
ds
mov
enter
gs
sbb
dec
bound
divl
push
jg
movsb
xor
fmull
cmp
loopne
mov
xlat
insl
ljmp
shll
rclb
add
cmp
adc
and
mov
mov
inc
sub
dec
jmp
mov
mull
sub
bound
hlt
push
nop
jae
pop
xor
ljmp
xchg
loop
imul
mov
xor
or
and
mov
mov
jg
xchg
bound
adc
sbb
pop
mov
jae
lods
push
jge
or
adc
cli
cltd
aam
xchg
into
mov
pop
dec
xchg
in
scas
xchg
icebp
inc
loop
or
enter
sub
jmp
aam
in
sub
roll
leave
adc
cmp
or
jg
cmp
addr16
push
dec
lea
int3
jnp
dec
cld
jl
imul
cmpsl
dec
dec
sbb
and
jne
stos
or
sub
jns
pop
and
cmp
iret
sub
sbb
ljmp
cwtl
icebp
in
add
add
cs
test
dec
jp
xchg
cmp
xor
sub
jmp
fadds
push
int3
or
xor
daa
mov
mov
nop
enter
addr16
scas
mov
add
xchg
imul
dec
add
add
js
stos
scas
scas
jl
test
test
add
push
popa
fisubrl
mov
inc
fisttps
inc
decl
and
lret
scas
and
into
or
daa
adc
lods
pop
ror
andl
cmp
mov
mov
movsl
mov
sub
lret
mov
push
lea
fwait
test
mov
push
leave
push
fsubrl
or
rclb
sub
lret
leave
or
xchg
imul
sub
orl
push
inc
jge
aas
in
dec
xchg
jnp
into
pop
sub
andl
jp
sbb
cli
lcall
cmp
sub
je
cmpsb
rorb
push
mov
push
dec
jl
or
add
dec
mov
test
or
dec
cmp
ljmp
ret
gs
je
pop
call
or
mov
sub
leave
loopne
and
mov
sbbl
into
mov
mov
inc
mov
push
xor
push
loop
sub
int
mov
mov
jle
das
cmpsl
cmp
cmp
sub
xchg
dec
fimuls
adc
dec
fldcw
loopne
dec
mov
in
mov
xchg
cmpsb
sbb
xor
test
sarb
push
jl
adc
lret
xor
loop
inc
mov
inc
pushf
cmp
jno
inc
fimuls
mov
dec
sub
stos
mov
add
inc
loopne
call
adc
add
inc
cmpb
sbb
sbb
imull
js
fwait
xchg
or
flds
adc
cmp
popa
cmp
orl
sbb
cltd
push
cmp
add
mov
xchg
add
inc
add
fadds
sbb
add
ja
inc
and
or
sbb
nop
xchg
or
sub
jno
sbb
fidivrl
mov
or
xchg
lea
sub
imul
push
mov
mov
mov
movsb
out
test
xchg
inc
mov
sbbb
xlat
inc
jp
out
mov
leave
mov
bound
mov
xor
mov
mov
stos
lods
das
clc
add
or
hlt
mov
add
sbb
xchg
lahf
imul
ret
call
jp
mov
or
fldenv
shll
jle
ja
push
cmp
ljmp
or
inc
testl
fidivl
push
sbb
fsts
nop
cs
inc
push
jno
add
adc
xor
and
xlat
mov
fists
hlt
jo
cmpsl
ret
xor
cmp
mov
lret
imul
pop
movsb
shll
loop
ret
dec
movsl
leave
cmp
lds
sbb
iret
mov
les
pop
pop
push
add
adcb
cwtl
addb
andb
jmp
rcll
rorl
push
push
testl
mov
out
and
adc
enter
push
add
sbb
ljmp
xor
xchg
mov
movsb
stc
jmp
sbb
ss
dec
jge
adc
inc
push
dec
mov
sbb
repnz
out
sub
push
pop
push
jno
in
push
dec
mov
add
xchg
and
xorb
xor
ljmp
xchg
or
insb
jno
inc
imul
cmp
inc
sub
arpl
sahf
cmp
out
mov
leave
jno
and
cld
fistpl
push
sub
ljmp
push
loope
btsl
push
pop
popa
xorl
cmp
test
sbbb
gs
pop
push
rolb
jecxz
loop
push
jbe
xor
mov
xlat
jmp
sbb
roll
sub
pusha
dec
roll
arpl
or
out
add
sub
repnz
testl
jecxz
pop
inc
jo
pop
inc
push
gs
sbb
in
lret
jge
jo
dec
xchg
inc
test
pop
mov
mov
mov
cmpsl
or
ret
push
xchg
mov
rcrb
fwait
dec
fisttps
add
addl
rolb
jle
int3
les
mov
or
xor
orb
and
adc
or
adc
loopnew
fxam
scas
inc
inc
or
cmp
mov
je
scas
popa
mov
outsb
addl
test
adc
add
and
or
out
mov
xchg
push
and
or
push
dec
clc
test
imul
sbb
push
repnz
rclb
les
iret
cvtps2pi
es
fs
in
stc
fwait
mov
jns
enter
mov
add
or
add
adc
sbbb
inc
imul
dec
xchg
jg
mov
add
adc
aaa
push
loope
and
jge
xchg
repnz
ror
mov
rorb
les
cltd
ja
or
inc
inc
jb
sbb
mov
movsb
sub
rol
in
dec
aam
clc
in
sbb
adc
jbe
and
jb
sub
xlat
fs
test
xchg
fldcw
mov
loope
mov
addr16
pop
and
shl
mov
loopne
jne
jns
aam
gs
mov
test
cwtl
clc
loopne
iret
int3
push
dec
cld
inc
scas
jb
mov
and
loope
mov
mov
mov
jno
out
insl
test
loope
mov
lods
sbb
sbb
loope
test
or
add
or
jbe
xchg
push
mov
and
lret
add
inc
roll
in
push
leave
ja
popa
in
ljmp
add
call
mov
or
or
cs
mov
xor
adc
sbb
push
pop
add
inc
or
addl
hlt
movsb
jmp
dec
add
sbb
sub
push
dec
lea
out
leave
cmpl
mov
out
test
cmp
loope
inc
lcall
cli
aad
pop
or
cmp
mov
andb
sahf
sub
jmp
jg
pop
cmpsl
or
iret
in
push
shll
inc
push
xor
popfw
sbb
mov
fdivs
fdivl
push
xlat
pop
sbb
cmp
inc
or
sbb
dec
loopne
andl
lea
pop
or
mov
and
jle
dec
sbb
fimuls
fs
lret
dec
lea
insl
and
push
cmp
cmp
push
pop
mov
clc
call
adc
push
mov
cld
push
lret
mov
add
std
add
xor
push
nop
pop
jbe
jno
push
cwtl
adc
pop
pop
add
pop
ret
ds
xchg
mov
add
pop
fwait
jnp
sbb
pushl
adc
or
adc
in
push
mov
mov
cmc
hlt
call
test
push
lcall
cmp
fdivl
sbb
push
pusha
fsub
test
pushf
addb
test
lret
shl
pop
add
addr16
out
popl
inc
adc
fsubrl
inc
or
iret
leave
fsts
inc
push
mov
xlat
hlt
mov
jp
fimuls
add
cmpl
subb
xorl
cmp
mov
push
jle
mov
cmp
inc
and
add
sub
cmpsb
in
leave
cmc
sbb
xchg
push
sub
xchg
lcall
dec
mov
sub
mov
ja
mov
or
dec
dec
or
mov
or
xchg
sub
xchg
subb
into
or
inc
add
pop
jl
sub
xchg
inc
jno
cmc
clc
push
pop
rorl
pop
rorb
xor
push
clc
cmpb
pop
push
inc
and
cmp
icebp
fistl
xchg
repz
pop
andl
gs
or
out
xor
mov
xor
ss
adc
stos
out
outsl
mov
and
loope
cli
fsubrs
cmpsl
iret
pop
add
mov
inc
sti
in
xchg
xor
cltd
mov
mov
mov
lret
pusha
mov
out
imul
add
or
mov
xchg
cmp
and
jg
add
dec
jle
pop
pop
fwait
imul
loope
imul
stos
inc
ret
jno
int3
inc
aaa
aaa
movl
fstl
pop
lods
popa
fsubrp
call
xchg
mov
jg
inc
filds
pop
jbe
jmp
std
and
push
and
fists
ret
dec
cmpl
fsubrs
fcmovnbe
insl
mov
add
add
jbe
push
or
adc
push
push
push
or
lcall
call
jg
add
decl
mov
scas
dec
dec
add
fnstcw
rcl
xchg
xor
xor
lret
js
jmp
adc
sub
arpl
sbb
js
adc
dec
xchg
pop
lret
pop
cwtl
sbb
sbb
ds
enter
mov
inc
cld
inc
cmp
imul
add
loope
hlt
out
lds
dec
data16
xchg
bound
addl
lret
cmp
lahf
movsb
stc
xchg
xchg
pop
popa
out
popa
dec
xor
test
add
nop
jmp
out
adc
loope
sbb
mov
add
jg
mov
mov
cmp
test
dec
fldt
jno
pmaxsw
addb
or
push
jmp
or
inc
leave
andl
leave
sahf
data16
popf
sub
push
add
call
xor
rorb
sub
pop
pop
rorl
pop
cvtpi2ps
pop
lcall
sbb
inc
jmp
sbb
jl
pop
fwait
clc
stos
loope
jno
aaa
sahf
js
rorl
loope
incl
sub
mov
outsl
push
scas
lret
xchg
scas
stos
adc
sub
push
xchg
sbb
cmc
test
lea
aam
in
jle
fistps
mov
scas
loopne
pop
lahf
inc
imul
fs
cli
add
enter
jo
loopne
cmp
or
mov
push
jo
add
rolb
mov
std
dec
scas
sbb
mov
push
lret
enter
mull
fwait
subb
sbbb
sub
mov
shlb
stos
les
pop
popa
or
cmp
mov
xchg
sub
test
faddl
dec
sbb
push
jp
addr16
ret
push
fisubrs
inc
xchg
jno
and
leave
push
loopne
cmpsl
incl
mov
jno
mov
mov
add
addr16
into
cs
sub
retw
std
xchg
aam
sbb
in
inc
cmp
stos
sbb
mov
cltd
stc
inc
xor
lret
and
sahf
shrb
push
dec
ret
pop
add
into
push
movsb
popa
push
addb
pop
xor
mov
or
or
test
sbb
rorl
jae
inc
xchg
orl
dec
add
adc
add
cwtl
sbb
lock
mov
mov
cmpsb
lret
add
pop
push
adc
dec
ficompl
repnz
lods
pop
out
inc
insl
addb
pop
bound
push
pop
xchg
push
mov
imul
and
pushf
push
movsl
jnp
out
jmp
leave
pusha
movsb
cmp
pop
push
mov
inc
xor
insl
iret
scas
fmull
outsb
out
add
leave
cmpsl
adc
cmpsb
sub
mov
or
cmp
mov
notl
andb
enter
and
sub
pop
bound
inc
or
sbbb
lods
add
nop
xor
xchg
or
test
mov
inc
pusha
inc
ja
sub
jge
mov
js
inc
inc
into
adc
idivl
push
push
push
int3
loope
mov
sbb
inc
or
add
jb
repnz
mov
xor
cmp
fs
pusha
sbb
push
mov
inc
jb
movsl
repz
fiadds
push
mov
mov
push
mov
push
jp
mov
lret
scas
pushf
dec
xchg
adc
cmpsl
and
inc
xor
iret
adc
push
int3
or
data16
es
add
jmp
or
adc
xor
addr16
jo
or
es
push
xor
dec
sub
loop
pop
adc
mov
lea
sub
dec
mov
popa
and
mov
inc
pop
add
sub
addr16
sub
ret
dec
and
dec
aas
and
lods
aas
xchg
inc
pop
stos
pop
mov
shrl
pop
int
in
cmpsl
adc
ficoml
push
or
lcall
or
push
je
mov
push
pop
pop
or
mov
add
dec
cmc
sub
fmuls
sbb
ret
lds
outsb
stos
lea
jmp
fstpl
add
fiaddl
mov
bound
pop
orl
jmp
xor
push
imul
pop
ljmp
mov
mov
daa
xlat
aaa
insl
popa
scas
lds
pop
lret
or
inc
sbbl
cltd
xor
sbb
inc
mov
dec
mov
mov
pushl
push
aas
mov
repnz
mov
push
loope
sbb
lock
shl
aaa
iret
inc
jo
add
pusha
nop
dec
orl
rclb
pop
or
mov
bound
add
pop
add
sub
sub
lahf
dec
sbb
sbb
add
ret
add
xchg
xor
dec
lahf
pop
adc
sub
add
xchg
mov
push
adc
ss
out
es
ret
popf
sahf
push
dec
orb
push
xor
in
ljmp
xchg
add
mov
add
lret
pop
imul
push
inc
or
xor
sub
and
and
lds
add
and
imul
loope
add
loope
and
add
inc
popa
andl
loope
or
andb
sub
xchg
mov
dec
cmc
add
push
mov
pop
lret
adc
addr16
fwait
xor
or
xor
subb
test
add
adc
shll
rol
jae
and
add
xchg
or
leave
inc
mov
hlt
out
stos
xor
lret
popa
xor
mov
aas
push
pop
imul
rolb
push
out
leave
out
xor
insb
dec
inc
cmp
or
aad
leave
pusha
sbb
and
or
mov
loope
mov
loop
push
inc
movd
aad
and
mov
push
cltd
ret
in
imul
sub
add
loop
pop
dec
in
cmp
sbb
jo
loope
mov
push
push
jb
ficomps
or
adcl
xor
inc
add
out
inc
or
rcr
mov
subb
imul
rolb
mov
sub
cmp
stos
cmp
inc
dec
movsl
add
es
loope
push
ret
xor
outsb
sbbb
mov
and
dec
sub
and
movsb
and
outsl
sbb
loope
pop
rorl
sub
lret
mov
and
add
popf
mov
cmp
mov
out
push
pop
adcl
and
lret
ja
xor
dec
pop
insl
push
sub
lcall
data16
addb
add
or
adcb
ss
int
pop
ljmp
test
shrl
stos
add
and
cmpsb
mov
jecxz
je
push
push
mov
push
shlb
scas
adc
decb
addr16
fmull
lret
mov
clc
adc
scas
dec
add
pop
jb
push
nop
sub
and
andl
dec
lret
sub
add
mov
mov
bound
xor
dec
mov
push
pop
mov
or
gs
cmp
ljmp
lret
sti
movsl
ficoml
clc
cmp
lret
call
or
pop
push
xor
in
xchg
mov
add
test
adc
loope
xor
pusha
cmp
lret
imul
jno
clc
or
orb
cmp
push
push
cmp
jl
roll
int
dec
js
cmp
push
adc
cmp
data16
add
push
adc
ret
add
mov
lahf
cmp
in
pop
and
aad
pop
or
shll
enter
dec
and
rcl
int3
pop
push
mov
mov
das
addr16
das
or
sub
inc
movsl
push
ret
rorb
jmp
push
icebp
inc
mov
ljmp
adc
and
push
jp
add
movsl
xchg
in
jmp
add
std
lahf
shll
jle
mov
incb
add
xchg
out
jg
pop
lret
xor
jno
inc
test
mov
jmp
in
test
and
push
jmp
imul
jmp
das
and
int
xchg
movsb
shll
ret
leave
test
or
repnz
mov
jge
jnp
push
or
lock
leave
sub
imul
test
add
adc
inc
or
and
and
adc
lock
cmp
mov
or
xor
jo
add
cwtl
jo
xchg
add
int
push
cmc
insb
adc
aam
xor
sahf
or
pop
inc
cmp
int
outsb
inc
dec
xlat
movsb
mov
sbb
pop
sarl
push
xlat
xor
fadds
stos
inc
imul
lahf
es
orl
add
cmp
xchg
sbb
dec
xchg
add
bound
adc
out
iret
popa
ficomps
add
mov
mov
divl
and
mov
inc
push
cwtl
and
andl
or
jle
mov
inc
add
in
xchg
in
jmp
outsl
xor
in
mov
xchg
or
adc
movsb
mov
jbe
sub
jmp
out
int3
inc
shll
adc
out
add
add
add
mov
mov
mov
add
mov
cmp
cmp
push
addl
and
movsl
inc
popl
inc
in
cmp
xchg
adc
ret
pop
loope
xchg
dec
adc
xor
mov
xchg
dec
and
dec
adc
leave
cmp
xchg
stos
cmp
icebp
or
das
cmp
push
sub
fdivl
in
sbb
pusha
sbb
inc
dec
xchg
mov
notl
sub
leave
enter
mov
adc
shrb
int3
inc
orl
push
dec
xor
pop
das
or
ja
or
jnp
adc
movsb
scas
fstp
int
pop
cmp
sbb
adc
or
or
mov
mov
sti
mov
inc
repz
mov
push
xchg
mov
sahf
enter
mov
mov
pop
dec
mov
dec
xchg
mov
push
or
negl
push
jno
dec
pop
ret
repz
repnz
scas
xor
add
out
and
mov
add
jge
jmp
inc
addl
mov
pushf
lahf
and
push
sub
dec
add
pop
shl
movsl
dec
out
or
jns
mov
sub
fstpl
jecxz
mov
adc
test
imul
xor
push
not
mov
popa
xor
jno
leave
orb
sbb
adc
sbb
cmpb
fadds
dec
push
arpl
repnz
cmp
or
cmp
sbb
sbb
dec
or
bound
adc
popf
andl
cmp
mov
adc
mov
enter
inc
loopne
add
add
push
bound
push
faddl
sbbl
mov
sub
or
mov
and
xchg
jmp
or
mov
out
sbb
xchg
leave
or
es
inc
out
xor
in
fsubl
mov
dec
sub
sub
xor
les
mov
xchg
scas
xchg
jno
sahf
inc
addl
sub
inc
or
pushf
cmp
sbb
mov
mov
stos
sbb
dec
insl
inc
pop
into
mov
push
test
aas
xor
jmp
dec
sub
fistps
mov
int3
int3
jnp
jmp
pushf
psrad
inc
ja
mov
pop
jns
pop
xor
clc
add
mov
cs
adc
pop
push
aas
mov
into
push
and
adc
fs
lcall
cld
xchg
ret
dec
pop
inc
push
fs
mov
pop
das
or
pushf
cltd
popf
pop
lods
xor
lcall
xor
push
add
xor
out
inc
xor
andb
add
cmc
fdiv
add
jl
cmpsl
shrl
lods
add
lret
push
mov
sbb
dec
and
sahf
xchg
mov
ds
data16
mov
xchg
cmp
mov
scas
loope
repz
sbb
push
mov
leave
jne
mov
push
cmpl
add
inc
in
mov
push
inc
jle
add
or
fcomps
pop
adc
sub
add
nop
and
mov
pop
sbb
mov
imul
addr16
andl
into
push
inc
dec
sahf
fsts
loope
sub
and
xlat
into
mov
shlb
pusha
fbstp
lret
and
dec
scas
fisubs
dec
jge
sub
pop
cmp
je
push
add
or
jmp
jge
mov
inc
xchg
test
in
add
loope
mov
scas
and
adc
lods
fbstp
daa
cmp
inc
mov
jns
push
fidivl
mov
add
or
inc
pushf
rorb
outsb
test
enter
mov
adc
mov
cmpsl
sub
fidivrs
outsb
jecxz
or
leave
bound
push
push
cmp
and
add
popa
or
mov
fiaddl
loopne
mov
mov
pusha
xor
lds
clc
add
lret
imul
loopne
loope
push
add
xor
fbstp
pop
in
mov
add
mov
ds
or
into
orl
leave
daa
xor
add
fwait
divl
mov
mov
aad
inc
push
aam
sbb
or
xchg
sub
add
imul
popa
add
jno
mov
leave
or
addl
into
test
imul
and
add
cmp
xor
adc
mov
cmp
push
xor
es
and
add
xor
push
xchg
mov
iret
popf
fs
adc
addr16
out
inc
out
lahf
stos
mov
aad
add
mov
dec
pop
add
icebp
xchg
ret
inc
enter
add
add
ljmp
inc
jb
call
cld
test
adc
add
mov
insl
das
stos
or
das
inc
jne
pop
xchg
dec
mov
push
or
iret
add
jg
or
dec
cltd
push
adcb
xchg
jmp
sub
sub
pusha
xor
sti
inc
sbb
push
rcrl
pop
xchg
cs
xchg
ret
adcb
xorl
dec
popf
xchg
data16
dec
rolb
scas
ljmp
sub
mulb
sbb
push
test
push
jbe
sub
addr16
repnz
or
mov
pop
jns
xor
jge
xchg
mov
loop
out
xchg
jl
add
cmpb
ss
and
gs
fucom
cmpb
iret
call
push
dec
insb
dec
rclb
repnz
lcall
mov
push
mov
mov
lods
rol
pop
test
leave
jge
inc
fsubrp
cmp
ficompl
dec
push
adc
sbb
cmp
lret
leave
sbb
mov
add
inc
jnp
int
data16
xor
jp
shlb
xor
or
adc
mov
imul
pop
jge
mov
sub
inc
jl
lret
pusha
pop
movsb
cld
jmp
roll
outsb
dec
fstl
jnp
sub
ja
decl
jl
rolb
aaa
into
xor
orb
cmp
jmp
push
ljmp
xchg
add
test
and
lea
mov
fiaddl
mov
jmp
mov
mov
sti
pusha
sbb
or
xchg
in
xchg
pusha
add
lods
arpl
push
in
xchg
or
adc
pop
cmp
jb
adc
jle
or
or
test
shrb
out
das
dec
js
or
sbb
enter
or
lret
pop
addr16
mov
sbb
lret
aas
push
jnp
sub
clc
sti
loopne
dec
xchg
xorb
mov
cmpsl
or
adc
add
icebp
adc
dec
adc
mov
test
in
cmpb
in
push
dec
add
aas
adc
in
repnz
ret
jecxz
push
push
mov
pop
aad
push
xor
mov
mov
inc
gs
or
or
inc
inc
jge
lea
inc
inc
inc
xchg
inc
dec
add
pop
sub
push
push
aaa
add
in
enter
nop
push
cwtl
cmp
out
cwtl
iret
imul
mov
scas
rcrl
arpl
pop
pushf
sub
jl
sti
in
arpl
movsb
inc
roll
pop
cmp
pusha
sbb
cmp
sub
or
or
mov
scas
cld
xor
or
jo
add
ljmp
mov
test
adc
or
nop
std
inc
shlb
push
nop
call
pop
push
pop
add
or
mov
xchg
pop
dec
mov
clc
daa
mov
sub
bound
icebp
add
lahf
out
rcrb
pusha
inc
aas
pop
or
pop
pop
push
loope
sub
or
push
sbbl
call
gs
add
dec
mov
inc
outsb
push
push
test
dec
test
push
lret
sbb
stos
mov
or
add
ret
test
into
das
add
inc
sub
dec
mov
stc
sub
push
cmpsb
daa
out
push
mov
addl
inc
les
and
push
add
das
test
daa
sub
lcall
test
add
repz
and
xor
loop
add
cmp
and
loopne
fiadds
ljmp
sub
lahf
fsubrs
sub
add
outsl
cmpl
xchg
shr
mov
daa
sbb
scas
and
xor
mov
lds
mov
out
and
xchg
xor
adc
jge
sbb
add
stc
inc
or
mov
pusha
sub
mov
jmp
in
sbb
xor
xchg
lds
orl
dec
add
jno
inc
lret
inc
sbb
jge
mov
movl
lea
mov
mov
je
insl
or
fstpt
dec
jge
out
inc
movb
loopne
nop
test
jge
jmp
add
sahf
aas
imul
or
enter
lea
push
dec
mov
or
div
movsl
sub
adc
fidivs
xorb
push
iret
dec
cld
out
mov
inc
xor
jnp
or
lret
adc
pop
sahf
dec
in
mov
pop
loopne
mov
xor
aas
mov
fnstenv
mov
or
orb
dec
sbb
mov
out
loope
rolb
arpl
jle
jne
addb
push
pop
and
mov
or
xlat
inc
stos
dec
mov
lea
inc
loope
jno
push
add
jle
and
sbb
adc
pop
test
pop
ret
inc
movsb
sbb
add
xchg
push
popa
lcall
popa
leave
popa
jns
cwtl
xor
rorl
sbb
and
add
jne
into
xor
push
inc
mov
xchg
jge
ret
rclb
gs
cmc
or
mov
or
sbb
ljmp
aas
jnp
and
inc
aam
sbb
stos
mov
int3
jge,pt
dec
andl
push
movsb
cmp
pop
pop
dec
sti
xchg
dec
call
jecxz
in
cmpb
test
sub
idivb
stc
ljmp
pop
imul
mov
mov
jge
jp
shrl
adc
cmpsb
imul
sub
dec
lcall
mov
js
movsb
add
push
lcall
mov
lea
pop
out
rcll
add
xchg
push
adc
xor
push
das
and
dec
mov
jns
pop
sub
cmp
mov
shl
imul
divl
clc
in
lcall
jb
sub
bound
add
jne
pop
loop
add
adc
or
lret
outsb
xor
pop
xor
pop
jmp
sub
and
add
inc
adc
sub
and
pusha
adc
rcrb
es
adc
and
dec
rol
les
lods
pop
cmp
jle
aas
sbb
and
mov
ljmp
adc
dec
mov
mov
gs
push
inc
call
cwtl
xlat
dec
add
in
andb
fistps
hlt
nop
cli
cmp
add
or
sub
aas
pop
aad
pop
sub
add
arpl
pop
testl
xchg
cmp
and
pop
xorl
fimull
or
xchg
mov
and
and
inc
mov
repz
popa
int3
repz
adc
pop
mov
popf
sub
xor
xchg
fisttps
push
sarl
inc
or
xchg
sub
add
mov
cmp
cmp
sub
add
and
sbb
and
or
add
test
mov
or
jmp
xor
add
jecxz
test
inc
sbb
add
ror
mov
mov
stos
and
loope
adc
pop
sub
xchg
push
dec
jge
sbb
mov
imul
test
dec
add
ja
adcl
incl
lods
arpl
add
dec
inc
leave
leave
mov
pop
pop
add
or
gs
test
push
adcl
inc
scas
test
jge
cmpsl
leave
ret
sbb
lea
push
xchg
pop
iret
cmc
call
jp
adc
mov
roll
xchg
test
jo
fsubs
inc
push
int
jno
scas
popf
xchg
sub
out
rolb
lret
xchg
movaps
mov
fsubs
aaa
dec
xor
push
sub
mov
mov
icebp
sahf
cmpsb
cmp
xchg
sbbb
loope
jge
shr
imul
add
fistl
pop
insl
cmp
sub
cmp
xchg
stos
nop
mov
add
cltd
bound
mov
orl
jmp
pop
fisttpll
mov
stos
push
lods
push
fwait
lahf
add
andl
stos
dec
mov
pop
mov
jge
adc
xor
nop
sub
out
dec
mov
mov
nop
popa
dec
test
das
orl
xor
mov
mov
sbb
aam
sub
push
movsb
or
inc
ret
pop
push
mov
andl
sbb
push
push
jnp
xchg
cli
nop
or
add
lret
xchg
xchg
cmp
adc
scas
and
sbb
lods
cmpsb
into
push
mov
movsb
or
sub
lods
inc
cmp
mov
mov
push
in
add
cmc
repnz
add
dec
bound
add
addr16
jns
inc
ret
xor
add
mov
loop
rcrl
and
add
xor
movsl
cwtl
mull
mulb
push
les
xchg
lock
add
jbe
imul
aaa
add
dec
mov
xchg
pop
sbb
shlb
fidivrl
push
int3
jle
adc
mov
push
pop
scas
add
jmp
lahf
xchg
push
mov
cli
aad
or
jl
loop
inc
add
mov
or
mov
stos
in
mov
push
addr16
test
jmp
sub
sub
popa
in
add
mov
dec
or
ljmp
imul
pop
pop
jecxz
jmp
pop
jge
ljmp
enter
out
and
add
mov
cld
or
xor
adc
pusha
out
popa
dec
adcb
dec
adc
dec
scas
mov
or
xchg
mov
jo
mov
push
popa
scas
cmp
mov
cltd
repnz
jb
sbbb
dec
sarb
jp
inc
sbb
jle
push
dec
leave
cmc
inc
shlb
test
add
loope
insl
push
push
cmpsl
push
mov
movsb
add
enter
sbb
iret
or
mov
xchg
xor
adc
pusha
imull
fmulp
movsl
subb
xor
push
in
xchg
test
sub
adc
vpsrlq
cmpb
dec
inc
add
imul
and
xor
imul
or
icebp
sub
add
popa
movsb
or
es
adcl
mov
dec
mov
xchg
xchg
add
and
push
sbb
mov
adc
clc
adc
pop
scas
imul
push
adc
jns
bound
pop
out
inc
push
xor
adc
and
outsb
neg
mov
addl
sub
add
sbb
adc
sub
sbb
roll
or
mov
negb
mov
sbb
adc
aam
pop
ja
sub
mov
pop
xchg
inc
imul
rolb
loope
aaa
movsl
inc
in
xorb
jnp
lock
xchg
out
cmp
test
dec
pop
movsl
lret
outsb
dec
add
lret
fimull
pop
movsb
scas
test
cld
jae
adcb
jb
jl
movsb
add
nop
test
xchg
add
andl
stc
push
dec
or
sub
bound
subl
push
fucomi
lret
out
add
imul
inc
sub
mov
or
test
mov
insb
push
iret
nop
cmpsb
xchg
jb
adc
fcompl
addr16
sub
int3
sub
je
test
and
mov
stos
sub
dec
in
incl
rcr
cmpsl
jmp
dec
push
cwtl
sub
test
in
sub
ja
lret
or
push
shlb
sahf
in
and
nop
out
pop
add
sub
push
cmp
jb
cmp
addb
dec
pushf
fbld
sub
in
das
sub
insl
outsb
inc
inc
xchg
loop
push
shl
jg
pop
mov
dec
pushf
in
repz
enter
adcb
adc
ret
lds
idiv
addb
ljmp
incb
and
inc
icebp
add
scas
sbb
popa
inc
jnp
out
inc
mov
push
iret
stos
pop
stos
sbb
add
and
mov
jo
mov
xlat
mov
cmp
push
adc
add
ss
repnz
stc
nop
sub
sbb
insl
mov
sbb
repz
add
sub
or
dec
lahf
test
inc
sbb
sub
jge
push
ficomps
cld
in
aaa
sub
push
push
xchg
repnz
and
inc
repnz
push
pop
sub
mov
pop
cmp
xlat
xor
mov
xor
mov
das
loop
jo
dec
push
dec
ljmp
sub
inc
mov
fcom
aas
pop
add
cmp
daa
aas
cmp
cmp
jp
xor
sub
ret
jo
call
test
jne
push
mov
ret
push
scas
int
add
test
rclb
dec
cmc
movsb
push
mov
out
and
movsb
push
push
orb
xchg
adcl
adc
add
dec
add
jne
and
cmpsl
xor
xor
adc
das
popl
mov
test
ret
mov
xlat
insb
outsl
dec
bound
push
push
jbe
jo
lods
xchg
daa
shll
fsubrl
mov
in
clc
aad
jno
out
inc
imul
insb
lret
jmp
and
aam
pop
pop
sbbb
dec
loope
fisttps
jge
sahf
adc
mov
adc
ds
cmp
cmp
cmp
jg
jp
xchg
insl
cmpsb
rcll
lods
sbb
gs
ljmp
cwtl
mov
leave
cmpl
xor
loop
dec
mov
jg
sbbl
mov
xchg
jno
and
imul
sbb
push
call
mov
arpl
ljmp
arpl
jmp
pop
popf
push
cli
sbb
xor
sahf
repz
pop
pop
in
and
js
push
adc
repz
add
or
scas
mov
jae
shld
dec
repz
mov
xor
jb
lock
jns
loope
or
adc
orb
and
jo
xor
sub
inc
xor
rcl
add
mov
loope
add
test
adc
jo
lret
mov
pop
jo
cmp
mov
or
aaa
mov
cmpsb
test
pop
adc
add
popf
dec
in
popf
dec
push
movsb
xchg
mov
lock
and
mov
sub
dec
insb
xor
xchg
mov
sti
or
les
lock
cmp
xchg
aas
adc
repnz
or
cmpsb
scas
sub
popf
addb
xchg
lods
icebp
inc
movsb
lcall
js
sbb
jmp
mov
ja
mov
push
dec
iret
push
cwtl
mov
mov
sub
dec
test
or
pop
rcll
mov
xchg
stc
test
push
insb
test
jecxz
mov
in
divb
call
addr16
outsb
nop
jae
push
inc
or
mov
sbb
scas
daa
push
and
jecxz
or
cld
sub
and
fisubs
add
jno,pt
rcrb
cmp
push
pop
stos
scas
and
xorb
gs
movsb
xchg
call
test
gs
xor
enter
xchg
add
mov
and
xlat
mov
cli
int3
mov
mov
ss
or
mov
sbb
mov
inc
lret
mov
mov
and
mov
or
inc
aad
fildll
inc
repnz
sbb
mov
inc
push
subb
and
adc
addr16
cmp
pop
jnp
push
mov
lahf
in
or
fsubs
insb
and
inc
pop
in
shlb
loope
inc
mov
add
add
data16
cmp
dec
leave
dec
orl
adc
sbb
push
jge
and
jg
and
xor
popf
sti
jp
cmc
dec
pop
or
outsb
and
loop
in
sub
pop
ret
movsb
mov
dec
testb
int
or
add
insb
sub
jns
xchg
cwtl
xchg
divb
mov
cmp
jecxz
and
pusha
pop
xor
add
mov
cwtl
in
jp
lcall
dec
jecxz
subl
pusha
xchg
sbb
test
int3
ljmp
add
jle
adc
sbb
xchg
sub
jb
es
sub
subl
mov
mov
inc
pop
inc
roll
xorl
gs
pop
test
xor
cs
push
or
loope
pop
andl
shll
adc
sbb
and
mov
jecxz
jo
out
test
imul
int
mov
fdivs
loopne
or
mov
xchg
pop
decb
push
inc
mov
loop
sub
or
testl
mov
dec
push
cli
mov
repnz
xchg
jno
adc
jecxz
repnz
inc
clc
pop
fdivrs
mov
pop
scas
ds
out
mov
xchg
movsb
nop
xlat
sbb
or
in
loope
aad
sub
jl
in
ljmp
cmp
mov
inc
or
clc
leave
jmp
xchg
sarb
pop
sub
test
je
inc
lock
aaa
int
repnz
fbld
jmp
lret
cs
lds
mov
pop
popf
andl
and
mov
push
arpl
mov
cmp
xchg
lret
pop
sbb
repz
sbb
faddl
fistps
out
test
pop
mov
cmp
push
mov
xchg
out
mov
mov
fsubs
dec
jo
ds
aaa
std
fcmove
sbb
push
or
adc
nop
pop
shl
pop
mov
or
inc
fisubrl
js
nop
or
add
orb
int3
in
sbb
sub
fisttpll
push
cmp
mov
aaa
mov
mov
or
xchg
cmp
push
ret
xchg
or
aad
or
and
and
mov
sub
aam
aas
pop
out
cltd
imul
stos
jl
sahf
std
xor
clc
lcall
mov
jge
in
gs
popf
cwtl
adc
loope
into
bound
jl
ja
cmp
add
push
nop
xor
xor
sbb
cmc
push
inc
movsb
out
and
lcall
inc
xor
xor
dec
leave
scas
addr16
xor
cwtl
push
daa
dec
add
adc
enter
imul
call
sub
xor
es
sub
xchg
loope
lret
mov
inc
sbb
push
adc
popf
or
jge
mov
and
jbe
sbb
jmp
outsl
dec
adcb
xchg
enter
dec
shlb
aad
dec
dec
sbb
mov
hlt
movsl
push
or
popa
jge
inc
xor
and
scas
sbb
add
jno
ljmp
les
fiadds
inc
and
inc
xor
mov
stos
sbb
test
xchg
pop
leave
xchg
int
add
mov
mov
sub
jmp
shrl
daa
push
jge
mov
xor
lods
lahf
rolb
push
jmp
pop
cmp
jle
outsl
fisttps
xchg
cli
pusha
aaa
mov
addr16
or
cmp
out
mov
loop
in
and
mov
mov
enter
mov
jo
jp
outsb
pop
mov
sub
mov
ds
cwtl
test
mov
mov
mov
and
mov
sub
xchg
dec
dec
loop
cli
add
out
mov
lods
push
mov
and
sub
sbb
cmpsl
aad
push
push
movl
lret
lahf
movsl
outsb
mov
js
adc
rolb
rolb
xor
pop
int3
mov
out
add
imul
adc
arpl
sub
mov
shll
addb
mov
lock
scas
divps
mov
fistps
mov
xlat
xchg
imul
push
repnz
xchg
in
mov
mov
stos
or
dec
cmpsb
cwtl
mov
les
push
adc
jg
lods
hlt
jg
pop
xchg
dec
add
xor
and
jge
clc
ret
adcl
add
scas
add
mov
test
popf
mov
mov
rcll
das
shl
push
jmp
mov
aam
lahf
fisubrs
rorb
js
pop
xchg
xor
jmp
xchg
xchg
pop
sbb
fsub
push
or
push
mov
and
loope
pushl
adc
lock
int3
cmp
dec
test
cmc
mov
mov
rorb
in
inc
bound
add
cltd
push
test
mov
mov
mov
stos
pop
mov
movsl
dec
fists
jg
push
add
sbb
push
add
aas
xchg
jb
mov
xor
scas
loopne
dec
loope
test
jp
out
icebp
or
test
test
loop
gs
push
pop
inc
pushf
jnp
jno
jge
lods
and
xor
push
push
mov
and
fstpt
mov
mov
or
mov
add
jo
leave
orl
jp
or
pop
dec
scas
ret
pop
mov
xorl
cmp
outsb
cmp
mov
push
dec
fs
cmpsb
and
add
dec
xchg
sub
outsb
int3
leave
inc
mov
inc
mov
mov
nop
mov
fistps
pop
push
and
jg
pop
mov
add
fsub
mov
test
cmpb
leave
jno
push
mov
mov
push
push
in
jecxz
add
loope
mov
mov
or
cmp
add
or
mov
and
pop
pop
sbb
add
push
lcall
scas
mov
test
fsubrl
dec
pop
imul
sub
shl
pop
cmpsl
or
imul
rol
pop
mov
xchg
or
ss
and
xchg
xchg
adc
popf
rcll
pop
test
addl
inc
jg
cmp
pop
dec
inc
imul
sub
insl
into
push
subl
inc
std
test
jge
cmp
std
cmp
xchg
pop
xabort
sub
fisttpl
imul
mov
mov
adcb
jno
ja
add
popa
pop
popf
jbe
and
add
icebp
jg
adc
pop
dec
add
adc
mov
orb
arpl
add
mov
imul
adc
fistps
stos
fwait
leave
cmc
or
sub
aaa
or
fwait
xor
iret
inc
insb
jle
jmp
fsubrl
dec
addl
pop
int3
xchg
dec
ljmp
xchg
js
pop
mov
push
or
dec
ss
jge
mov
inc
fldenv
out
mov
fcmove
dec
sahf
xlat
xchg
fcompl
adc
or
in
negb
push
add
out
andb
mov
dec
xor
mov
sub
dec
pop
dec
repnz
aas
xchg
or
popa
and
ret
dec
in
add
rcrl
rclb
mov
repz
loopne
ds
sbb
roll
push
adc
sbb
cmp
shlb
test
shrl
xchg
mov
adc
scas
ret
mov
and
jge
mov
adcb
adc
inc
sbb
test
cmp
jno
fildl
sbb
stos
mov
xchg
lods
test
xchg
fidivl
bound
mov
xchg
int3
push
fwait
scas
push
dec
test
sbb
pop
sarb
into
enter
xchg
push
mov
pop
orb
hlt
and
lock
or
lcall
and
xor
in
int
add
fldl
cmp
insl
lea
mov
jle
or
mov
xor
loop
pop
mov
xor
mov
fcoms
pop
mov
mov
mov
inc
inc
jno
sbb
nop
test
adc
mov
std
fstps
in
inc
mov
bound
dec
incl
xorl
in
jle
mov
ja
add
mov
out
movsb
jp
mov
inc
arpl
mov
pusha
xchg
mov
xor
push
test
dec
add
lcall
push
jbe
fmuls
xchg
cmp
in
adcb
push
xchg
jle
fldcw
dec
test
jg
mov
or
fs
adc
pushf
push
push
scas
in
xchg
sub
cmpl
lret
subb
cmp
mov
sub
addr16
cmpsl
insb
add
shrb
mov
pop
xor
sub
xchg
out
xor
xor
inc
push
mov
jne
xchg
mov
subb
jae
mov
pop
adc
mov
push
test
in
push
lcall
adc
int
stos
ror
inc
cwtl
dec
cmc
and
orl
ret
scas
push
fisttps
add
add
add
mov
jb
je
ret
outsb
dec
inc
add
movsl
add
ret
xchg
sub
insl
xor
inc
arpl
lret
out
or
in
daa
and
loope
out
and
dec
ds
and
ds
daa
pop
mov
and
stos
and
and
mov
cmp
jmp
fstpt
jg
dec
scas
push
bound
add
mov
or
xor
push
popa
and
or
xchg
sub
and
ror
add
jge
jo
loope
stos
out
mov
ret
adc
pop
xor
push
sbbb
imul
fisttpll
scas
les
inc
test
push
push
dec
clc
push
add
call
cli
adc
pop
leave
fs
pusha
pop
test
call
loop
sbbb
or
and
pop
hlt
or
jmp
adc
daa
pop
outsl
inc
lea
inc
push
fs
loope
sbb
inc
lods
shrb
call
add
push
xor
add
aas
inc
inc
add
test
incb
fbld
aad
bnd
inc
scas
mov
mov
add
xchg
vucomisd
scas
das
sub
sbb
orl
mov
push
and
cmc
inc
sub
pop
xchg
inc
and
nop
test
mov
mov
xchg
jne
loopne
repz
leave
pop
or
adcl
inc
adc
and
and
cmpsl
or
jecxz
test
add
sbb
popa
je
and
mov
fstpt
and
mov
or
subb
scas
jmp
lahf
test
cld
dec
xchg
pop
icebp
imul
and
mov
xchg
and
sub
or
cmpsb
push
negl
test
push
ret
mov
pusha
mov
lea
in
jae
mov
push
xlat
inc
js
test
mov
jne
pop
fdivs
pop
and
cs
or
ffree
jno
inc
cmp
mov
int3
mov
loope
mov
mov
dec
dec
ljmp
outsb
scas
and
shlb
and
mov
nop
pop
adc
and
xchg
cmc
mov
xorb
jge
and
test
ds
inc
ret
inc
test
mov
mov
call
ljmp
popf
or
and
rorb
jae
xlat
sbb
or
loopne
cmp
dec
pop
jge
inc
in
in
cmp
daa
add
imul
orl
sbb
lds
dec
out
push
fsincos
adc
hlt
test
fucom
les
iret
test
and
call
in
movsb
jmp
sub
dec
mov
push
stc
cmp
xor
lods
add
bound
lret
jne
jge
cmpl
mov
mov
clc
pop
das
mov
cmc
mov
imul
outsb
les
rolb
push
adc
outsl
sbb
cmp
or
push
add
les
or
mov
mov
scas
or
sbb
push
pop
add
iret
mov
push
dec
call
mov
xchg
dec
mov
jp
mov
cwtl
and
xorl
jno
test
xchg
mov
xchg
pop
push
inc
lahf
aad
inc
push
call
lret
scas
mov
jge
mov
xchg
sbbl
cmp
cmp
mov
add
mov
test
xchg
fnstcw
and
outsb
repz
mov
test
pop
rcrb
pushl
mov
sbb
inc
fsubr
stos
xor
hlt
push
jb
loope
xchg
cmc
in
xor
cli
pop
fcompl
and
mov
repnz
stos
xor
imul
loopne
lock
arpl
insl
push
and
add
pop
pop
xchg
addb
mov
insb
daa
xor
scas
nop
leave
andw
jge
div
xor
popf
add
aam
mov
push
pop
add
add
js
in
stos
sbb
bound
scas
inc
inc
sbb
inc
lahf
and
ret
clc
lods
xor
int3
pop
int3
ror
mov
jns
cmp
xlat
or
jns
cmp
pop
orl
sub
add
mov
outsb
or
jg
std
cmpsl
adc
sbb
cmp
jnp
push
mov
fidivrs
mov
sbb
filds
dec
test
xchg
rcll
sbb
dec
gs
xchg
cwtl
movsl
xchg
xchg
cmp
dec
cmp
into
sub
roll
push
xor
add
inc
dec
scas
std
cmp
sbb
adc
jmp
xor
mov
jo
dec
inc
and
orb
jno
orl
xlat
xchg
adc
loopne
adc
mulb
imul
lret
mov
call
mov
stos
repz
inc
cmp
pop
mov
roll
pop
out
and
or
xor
movsb
int3
shlb
dec
mov
sub
aaa
pop
out
lods
push
xchg
jo
pop
push
xchg
lock
mov
sub
iret
mov
andb
leave
add
in
inc
add
inc
arpl
sbb
mov
les
xchg
adc
les
int3
out
subl
sbb
push
sub
sar
push
dec
xorl
rclb
sbb
fldenv
xorl
fcmovu
add
ljmp
cmpsb
test
add
into
mov
pop
and
add
icebp
jns
pop
push
out
sub
out
dec
inc
leave
pop
fildll
arpl
cmp
notb
or
cli
inc
test
mov
movsb
scas
loopne
xor
loop
mov
roll
lret
dec
mov
out
call
add
and
push
nop
add
popa
cli
cli
insl
mov
push
into
in
xchg
lret
xor
dec
scas
push
cmpsl
movsb
adcb
in
out
mov
negl
insb
and
add
stos
dec
rcll
cmpb
jmp
mov
add
jbe
push
inc
ja
aad
push
pop
iret
adc
add
test
das
loope
test
repnz
xchg
pop
sarl
out
dec
jb
shr
adcl
aad
xor
push
shrl
es
aaa
add
jge
out
inc
cmc
movsl
ss
push
imul
cmp
adc
and
xorb
sbb
sbb
dec
adc
add
test
addr16
ds
daa
iret
mov
out
imul
add
fsubl
push
aad
ljmp
jmp
stos
mov
pop
push
test
adc
dec
xor
lea
sub
fsubrp
dec
dec
sbb
mov
scas
xorl
dec
cmpb
rcrl
loope
pop
loop
or
and
roll
scas
addb
call
ss
inc
sarb
imulb
je
mov
and
int3
bound
push
mov
jge
ret
push
pmaxsw
leave
scas
xor
orl
ret
push
es
push
dec
addb
cmp
adc
in
or
dec
stc
sbb
fsubrs
orb
lods
add
dec
mov
es
push
leave
dec
mov
mov
loope
hlt
dec
mov
das
sbb
push
or
fdivrp
pushf
dec
insb
sub
sub
js
or
push
lods
repz
xchg
in
int3
dec
shr
adc
add
dec
enter
outsb
orl
mov
sub
dec
repnz
cwtl
mov
jmp
fadds
sub
aam
movsl
lret
testb
adc
or
pop
stos
fdivrl
sbb
ds
leave
and
cwtl
ljmp
popa
ja
xor
push
mov
add
or
imul
mov
or
pop
inc
mov
cli
inc
and
pop
dec
adc
xor
js
jge
xchg
jecxz
push
ljmp
in
jp
adc
cmp
jo,pt
inc
inc
dec
sbbb
pop
mov
in
inc
cmp
jno
jbe
adc
sbb
repnz
mov
lahf
pop
lea
les
sbb
and
adc
pusha
frstor
subb
and
fcmovu
les
iret
push
xchg
stc
inc
stc
imul
or
lret
jp
nop
pop
fcmovnu
call
lcall
dec
ja
lea
iret
and
and
dec
sub
pop
dec
sarb
std
fdivs
call
inc
and
loop
cmpsb
pop
add
add
imul
jb
scas
adc
add
addb
stos
daa
push
jo
dec
push
sbb
addr16
add
jl
and
enter
ss
dec
jle
inc
insl
fstpt
arpl
stc
lret
ficompl
add
or
shlb
data16
or
xor
cwtl
dec
fidivrl
inc
in
add
call
lret
mov
sbb
pop
xor
test
sub
or
mov
idiv
insb
xchg
push
pop
sub
mov
push
std
nop
sbb
lret
mov
sbb
adc
and
ljmp
mov
inc
inc
cmp
fistps
inc
add
xchg
dec
mov
pop
jmp
pop
imul
inc
and
fwait
out
test
in
inc
sub
push
ss
aam
popa
adc
cmp
add
xchg
push
xchg
xchg
dec
call
cmp
dec
rol
xchg
xor
loope
sub
nop
xchg
pop
fildl
and
into
imul
sub
push
xor
xor
xchg
test
dec
scas
int
xchg
add
int3
sub
leave
pop
jae
inc
push
push
sbb
loop
and
call
or
add
adcl
xchg
mov
lock
jno
add
jge
mov
mov
imul
jecxz
js
or
mov
add
andb
adc
scas
inc
xchg
sahf
imul
clc
push
js
xchg
xchg
mov
and
lret
mov
ds
mov
sub
pop
aaa
sub
mov
inc
bound
sbbb
mov
xchg
mov
pop
cmp
lret
negb
xchg
movsl
cmpb
cmovge
sbb
cmpsb
pop
rclb
leave
test
or
and
mov
mov
aaa
and
inc
test
sub
arpl
imul
mov
mov
mov
lret
addr16
subb
out
xorb
push
test
mov
push
inc
sbb
cmp
scas
orl
lea
aad
push
inc
pop
inc
sub
push
add
lds
push
out
imul
outsb
in
and
dec
jo
jle
inc
xchg
ret
jge
lds
push
lds
and
iret
ret
aaa
mov
rorb
or
lea
and
pop
inc
ljmp
sbb
stos
inc
ror
frstor
dec
inc
sbb
cmp
lret
decb
fidivrl
push
arpl
out
fisttpll
not
push
adc
enter
mov
stos
aad
add
call
push
les
fadds
sub
cmc
mov
test
or
pop
cmp
aad
add
xor
int3
enter
push
add
clc
push
mov
add
add
subl
adc
mov
lcall
mov
mov
xchg
cwtl
push
pop
into
mov
sub
inc
insb
lcall
in
adc
fiadds
cltd
sub
and
xchg
jecxz
popf
adc
daa
xchg
fdiv
dec
adc
repnz
inc
ret
cmp
sbb
lret
addb
dec
dec
mov
push
imul
loope
mov
leave
mov
push
test
mov
jmp
sti
cmpsb
mov
stos
pusha
push
lods
adcl
xchg
push
mov
pop
jge
addr16
push
andb
sub
pop
loope
pop
pop
out
repz
mulb
mov
mov
xor
inc
loop
cli
cmp
ljmp
imul
cmpsb
ljmp
sub
loope
or
mov
xor
sub
cmp
jge
or
add
iret
push
sub
test
xlat
in
add
mov
and
rcll
adc
push
adc
sti
nop
and
lcall
push
fdivrl
scas
ficoml
insl
lcall
scas
leave
lea
adcb
add
pop
dec
es
inc
sbb
test
test
mov
orl
jmp
pop
push
adc
mov
sub
push
pop
nop
fldl
and
and
cmp
dec
roll
mov
es
enter
lret
faddp
mov
or
xchg
jo
or
pop
cli
ljmp
xor
xor
add
clc
xorb
mov
add
add
xchg
cmp
jge
fstl
je
test
pusha
pop
mov
or
jae
adc
cmp
or
mov
push
xchg
test
push
js
gs
dec
push
dec
arpl
dec
push
inc
sbb
div
addb
push
lods
test
cmp
sbb
sub
pop
jo
inc
mov
orl
or
xor
fwait
jbe
add
sbb
jmp
es
mov
adc
push
mov
out
pop
aas
and
add
andl
addb
jg
in
lcall
or
adc
test
xchg
adc
das
or
push
imul
mov
cld
push
stos
ss
dec
jae
mov
outsb
leave
add
inc
sub
hlt
int3
rorb
sub
test
push
push
addr16
outsb
mov
or
xchg
loop
pop
test
lds
mov
cld
push
xor
icebp
and
and
jge
in
cwtl
shr
mov
xchg
and
fldt
cli
xor
dec
mov
fdivrs
add
pusha
ljmp
xchg
ret
or
xlat
jo
mov
loop
popf
add
mov
shll
rcrb
mov
incl
xchg
or
inc
mov
mov
add
orb
add
mov
dec
cwtl
push
jge
es
pop
dec
sub
dec
push
adc
mov
fs
shll
add
pop
loope
je
int3
or
pop
popa
jne
pop
push
cmp
ret
mov
add
dec
jbe
push
popf
sarb
xchg
push
aas
aad
push
jb
les
jecxz
jno
push
add
pusha
popa
mov
sbb
adc
addr16
mov
vminss
ret
andl
mov
rorl
dec
out
mov
dec
mov
adc
adc
test
and
call
push
push
dec
push
mov
jne
mov
inc
arpl
xor
jb
xchg
xor
inc
adc
cwtl
dec
out
mov
mov
pop
bound
sti
mov
jo
mov
les
std
cmp
sbb
out
mov
das
ret
adc
or
or
fidivl
add
pushf
add
std
xor
mov
into
sbb
or
cs
mov
orb
fldenv
jecxz
stos
inc
call
movsb
aad
enter
test
jb
fcom
adc
repz
arpl
push
jb
inc
xlat
test
xchg
and
jne
jb
mov
push
pusha
mov
and
jp
dec
popa
inc
or
icebp
adc
pop
and
jmp
cltd
pusha
pop
movsl
int3
ret
inc
dec
loopne
sub
stos
movsb
pop
test
add
mov
loope
fisubrs
jge
pop
jns
loop
stos
or
cmpsl
xor
repnz
divb
push
mov
sub
sub
push
xor
adc
in
inc
push
in
cmp
xor
xor
mov
cmp
enter
cmpl
test
adc
fwait
ret
or
add
xor
add
inc
in
add
jo
testl
or
dec
popf
mov
dec
call
ret
leave
adc
xor
inc
or
and
andl
xlat
xchg
and
orb
add
cmp
cmpsl
popl
pusha
push
daa
xor
shr
push
loopne
xlat
cltd
push
or
ds
scas
jne
loope
mov
rorb
push
cmc
mov
fisttpll
mov
jg
dec
bound
shl
adc
or
xchg
leave
push
or
ljmp
loopne
mov
add
or
or
xchg
in
loop
jecxz
jp
jp
std
adc
imul
sbb
js
jnp
das
xchg
pop
daa
leave
jp
jl
push
pop
push
int
jbe
ss
test
mov
mov
cmp
fcom
xchg
jle
pop
negl
pop
mov
xchg
sbb
imul
mov
xchg
push
pop
aad
loopne
pop
mov
stos
fmull
test
popa
add
scas
cwtl
orl
jns
fcoml
dec
imul
adc
or
insb
mov
jne
push
or
enter
ficoms
or
pushf
scas
push
adc
out
inc
rorl
mov
rolb
pop
mov
enter
mov
push
xor
out
fistpll
shl
or
les
add
adc
mov
sub
addr16
imul
push
cmc
jmp
xchg
or
cs
jno
iret
dec
adc
sub
mov
into
out
inc
sub
sub
and
inc
cmp
rcrb
mull
test
jno
ror
lcall
loope
fiadds
sahf
mov
pop
out
xchg
xor
sbb
mov
movl
dec
pop
sub
add
mov
fisubs
out
pop
pusha
sub
push
and
loope
jae
roll
mov
inc
mov
ds
out
xor
jg
incb
into
mov
mov
push
testb
leave
push
movsl
enter
jge
subl
push
sbb
or
mov
push
adc
push
inc
outsb
jge
or
cmp
fistpll
adc
fstl
push
jl
push
leave
leave
cmp
sahf
scas
xor
and
andl
jg
xchg
xor
xchg
cmp
in
fs
push
xchg
outsl
adc
sbb
sub
mov
jno
mov
jl
cmp
jbe
fsubrl
mov
stc
subb
or
xor
insl
popf
adc
dec
mov
and
sub
test
mov
xchg
rcll
lcall
cmp
sbb
nop
push
outsb
jb
pop
xchg
xor
xorb
mov
xchg
test
out
fincstp
add
dec
cmp
fildl
in
inc
push
clc
and
add
add
xchg
iret
imul
sub
inc
test
je
pop
pop
inc
outsb
orl
out
lea
sbbl
mov
inc
shl
testb
adc
push
mov
mov
and
add
inc
sbb
mov
into
lea
stos
mov
adc
mov
and
adc
inc
or
mov
lds
jge
sub
inc
inc
dec
xchg
pop
addb
cmp
cmp
pop
loope
or
add
jecxz
or
lds
addr16
scas
lds
gs
addr16
fildl
pusha
jp
mov
sub
outsl
popa
outsl
filds
jge
adc
loope
fsubr
xlat
std
js
xchg
pusha
mov
mov
movsl
arpl
lds
out
fdivrs
xchg
sbb
addr16
fs
lods
jle
pop
xchg
jne
or
movsb
jge
push
mov
jge
mov
outsb
fsts
inc
jae
inc
xor
xchg
jbe
inc
pop
jns
in
jmp
and
xor
bnd
sti
outsl
ret
aad
stos
js
dec
jns
inc
xchg
fbld
push
insb
mov
test
sub
dec
add
inc
addr16
sbb
adc
cmpsb
jns
sub
icebp
test
jge
cs
add
inc
ljmp
jge
dec
mov
shl
popa
pop
inc
imul
subl
fmuls
inc
mov
push
addb
mov
movsl
fwait
pop
adc
ss
sub
nop
stos
mov
insl
out
adc
push
andl
xchg
sub
or
and
shl
jg
sbb
cltd
mov
in
inc
stos
les
test
in
add
loop
xor
pop
jmp
adc
jmp
push
in
add
inc
shrb
bound
out
mov
xchg
push
mov
in
sbb
arpl
sub
mov
call
addb
int
ficomps
mov
cmc
cmpsb
or
aaa
inc
or
jo
or
mov
lret
push
adc
cmp
jb
test
cwtl
xchg
push
out
hlt
rorb
out
adc
stos
push
xor
mov
dec
inc
test
pop
pop
push
in
mov
cmp
gs
lods
das
stos
inc
pop
enter
insb
dec
ja
jns
fbld
shll
cmpsb
sbb
xchg
movswl
xor
jo
or
lahf
jno
xor
add
ret
pop
scas
mov
mov
int
inc
shl
or
out
xor
iret
pop
scas
bound
mov
cmp
pop
xchg
mov
popa
push
xorb
adc
mov
mov
sub
movsb
pop
xor
mov
mov
mov
andb
out
or
inc
xor
lods
enter
addl
std
mov
or
nop
add
or
stc
mov
imul
pop
addr16
push
mov
lcall
mov
out
or
dec
mov
scas
movsl
mov
push
and
push
cmc
adc
rol
icebp
pop
int3
rclb
adc
test
mov
xor
popa
ret
or
pop
pop
mov
jmp
mov
push
mov
add
pop
xor
and
fildll
sub
cli
add
inc
xor
inc
arpl
sbbb
mov
sbb
inc
call
mov
add
inc
add
scas
inc
test
sbb
lea
pusha
cmp
inc
addr16
or
loope
into
fists
hlt
adc
add
push
jbe
movb
adc
adc
leave
inc
movsl
stos
and
mov
xor
les
adc
cmp
cmpsl
mov
push
lods
add
imul
loope
leave
mov
pop
jp
sub
pop
jecxz
ljmp
and
out
adcb
pop
sbb
stos
mov
enter
inc
lea
and
iret
lret
dec
in
push
cmp
adc
add
mov
loop
xor
dec
pop
mov
sti
xchg
outsb
dec
iret
push
adc
push
add
sub
pop
and
push
cmp
adc
movsb
or
lret
cmp
add
repnz
ja
sbb
loope
mov
cmp
add
icebp
insl
enter
adc
out
or
mov
or
mov
adc
out
cltd
push
lret
jp
mov
and
jo
pop
add
cwtl
fwait
jge
dec
sbb
imul
test
outsl
inc
test
or
jge
je
mov
lds
mov
pop
dec
cmp
xor
xor
lret
enter
inc
pusha
mov
push
ja
test
jo
out
jae
mov
cwtl
ret
stos
inc
inc
sub
sub
pop
test
and
fsubrl
add
rolb
jg
clc
dec
lock
dec
arpl
mov
out
add
mov
sub
jno
jmp
call
iret
pop
mov
negl
fsubrs
xor
ljmp
mov
pusha
addr16
das
pop
lahf
aas
je
cmp
add
mov
mov
xchg
fnsave
mov
popa
adc
addb
adc
movsb
inc
out
push
xor
repnz
push
xor
sbb
adc
cmp
ljmp
pusha
pop
inc
pop
out
sarl
scas
in
mov
or
lock
or
fdivs
pop
xchg
sbb
out
adc
or
mov
and
dec
enter
sbb
sub
arpl
ficoms
cli
scas
je
faddl
dec
push
mov
data16
mov
aas
int
pop
ficomps
pop
fstpl
fcmovnb
and
sbb
cmc
shl
pop
xchg
cmp
jle
mov
pop
push
popa
sahf
dec
cmp
lret
nop
movsl
cmp
out
movsl
xchg
movsb
out
cmpsl
mov
dec
and
sub
xchg
lcall
adc
pop
into
mov
test
subb
jle
push
dec
mov
sbb
ret
sbb
scas
xor
mov
mov
adcl
dec
shl
jle
lea
sub
pop
and
insl
or
repz
mov
nop
xchg
cmc
mov
sbb
out
inc
loopne
inc
push
insb
pop
std
rsqrtps
mov
iret
jo
fistl
lret
sahf
cmp
pop
addr16
rol
addl
mov
std
jb
lahf
xchg
cmp
sub
ret
sub
das
cmpl
pop
or
mov
into
out
dec
cld
sbb
addr16
mov
dec
pop
jb
cli
cmp
jo
loopne
inc
test
or
repz
jge
test
and
je
ret
lahf
lds
out
sub
xor
mov
shrb
inc
in
pushl
add
cmpsb
js
inc
sub
or
data16
sbb
jg
iret
push
clc
push
jnp
dec
nop
dec
push
bound
repnz
jnp
and
iret
jno
sub
sub
loop
jmp
push
das
or
and
inc
out
add
cs
imul
add
or
aas
jno
test
clc
and
orl
les
inc
decl
dec
xchg
sahf
and
insb
gs
sbb
lcall
and
addr16
dec
aam
cltd
ljmp
gs
aad
inc
push
out
imul
out
lods
and
test
mov
repnz
and
pop
mov
daa
les
fs
jge
pop
loope
icebp
into
xor
mov
scas
orl
mov
add
sub
orl
pop
xor
push
sub
aam
popa
fs
popa
scas
adc
xchg
outsb
cld
addb
mov
out
jb
jnp
nop
xor
mov
or
and
jg
inc
sti
push
inc
scas
mov
dec
dec
andb
inc
arpl
sub
jmp
repnz
xor
jmp
sbb
and
sub
sbb
or
and
cmp
movsb
push
mov
clc
xorl
mov
xchg
sbb
rcll
outsl
xor
or
and
sbb
in
inc
cwtl
pslld
inc
xlat
pusha
inc
aas
pop
pushf
pop
push
or
notl
mov
add
negb
or
push
or
invd
insl
lret
imul
std
cwtl
sahf
mov
sub
and
mov
or
sub
das
loope
dec
js
jno
dec
fcomp
inc
idivb
sti
daa
mov
imull
dec
pop
sbb
iret
dec
data16
lret
cmp
mov
adc
and
out
int3
movsl
mov
cmp
scas
push
jns
leave
ficomps
push
in
pusha
cmp
adc
sahf
repz
mov
xchg
fwait
cli
outsl
push
xor
out
adc
pushf
pop
inc
xor
jno
mov
fld
adc
sub
push
fs
pop
push
das
sub
out
daa
mov
jmp
mov
lahf
adc
xor
out
and
aas
or
aam
addb
js
and
leave
inc
cmp
sub
mov
scas
negl
sub
insb
fiadds
add
rclb
jle
dec
jge
mov
cmc
imul
xor
movsl
jo
and
sbb
inc
repnz
jle
loop
xchg
push
push
or
cmc
dec
cmp
out
in
ss
inc
adcl
mov
push
aam
or
fdivl
mov
leave
add
push
addl
rcrl
adc
pop
aas
js
push
add
jno
push
sti
push
jecxz
or
xor
mov
subl
jle
cmp
aam
jnp
fwait
incl
jmp
in
or
lds
sbb
mov
repz
xor
out
in
js
pop
sbb
lret
les
hlt
dec
dec
jno,pt
adcl
cmp
push
fwait
mov
imul
mov
xchg
mov
push
fnstsw
es
loop
add
sbb
or
push
mov
pop
dec
fidivrs
lods
ret
xor
leave
and
pop
push
frstor
mov
lcall
push
xor
xchg
xchg
and
daa
leave
cmpsl
dec
test
add
pop
cmp
cwtl
movsb
lret
sub
jmp
mov
roll
nop
sub
test
lret
fxch
out
aaa
mov
lea
push
les
inc
push
or
or
jmp
push
xor
psubsb
out
imul
je
pop
push
and
lahf
into
loop
lcall
mov
cli
popa
pushf
or
aas
dec
xor
mov
into
ret
mov
pop
xor
in
cmp
adc
adc
adc
or
iret
cs
fs
scas
cmp
repz
jb
sub
mov
mov
sbb
cltd
xlat
adc
sbb
stos
add
mov
jle
movsb
andl
xor
mov
inc
and
hlt
aas
add
mov
sbb
ljmp
js
cli
and
mov
mov
mov
sub
pop
popa
mov
lcall
inc
loopne
enter
push
jp
ficompl
ljmp
outsb
clc
mov
push
cmc
and
inc
movsl
testl
cmp
loope
sbb
xor
sbb
jg
pop
dec
push
add
rolb
and
cmp
push
mov
mov
dec
movsb
orb
jle
aas
lods
int
push
sub
cmp
mov
mov
xchg
in
js
dec
movsb
out
push
and
inc
adc
fistpll
test
jmp
mov
lea
push
scas
in
fdivrs
aam
les
fs
scas
repnz
mov
add
stc
push
add
loop
push
divl
or
mov
push
mov
jb
mov
gs
xor
pop
adc
repnz
pop
xor
pop
or
push
pslld
inc
sbb
jmp
adc
add
and
adc
xor
stos
int3
scas
cmpsb
xor
sti
sub
gs
inc
sub
add
sbb
mov
enter
shlb
cmpl
jle
gs
pop
cwtl
xlat
and
xchg
popa
fidivrs
add
xchg
xchg
imul
pop
adc
mov
and
mov
fsub
shlb
xchg
push
imulb
cli
pop
rolb
sbb
pusha
pop
pushf
fists
sti
sub
enter
ljmp
testb
pusha
pop
push
fcomp
and
inc
clc
es
adc
add
pusha
js
sub
inc
fsub
dec
les
scas
sbb
mov
and
add
or
xchg
mov
sub
inc
mov
mov
fldcw
add
xchg
jb
and
add
sub
cmp
sub
mov
push
cmp
pop
push
mov
mov
mov
mov
mov
cli
or
lret
mov
or
xchg
dec
pop
xchg
gs
mov
dec
xchg
cmp
shlb
aas
aam
dec
jb
fimuls
enter
dec
repz
inc
and
gs
fidivl
inc
test
ljmp
xorl
and
sub
cmp
dec
xor
les
xchg
stos
dec
inc
movsl
cmc
loope
rcrl
dec
cmp
inc
test
inc
out
jge
sbb
test
es
push
movq
mov
in
fidivrl
mov
movsb
add
lock
mov
shld
sub
sub
mov
cmp
push
xchg
fwait
insb
cwtl
ficomps
xor
js
mov
mov
imul
fucom
mov
call
add
mov
pop
pusha
xchg
aas
inc
fcomip
stc
imul
mov
scas
pop
test
in
inc
adc
xchg
add
mov
push
push
movl
pop
scas
imul
add
loope
push
popf
xchg
cmc
adc
sub
jb
mov
inc
mov
push
mov
in
sbb
in
sbb
lds
test
testl
adc
call
gs
mov
mov
insb
in
sbb
aam
ret
movsl
sub
mov
add
dec
or
mov
xchg
mov
scas
push
mov
repz
mov
decb
les
inc
push
loope
cmp
jmp
or
inc
leave
clc
pop
mov
inc
xor
popa
inc
stc
add
inc
sbb
negb
or
lret
xor
inc
push
orl
dec
sahf
loop
jno
push
sahf
outsl
lar
mov
and
and
and
dec
or
xchg
test
cmp
out
loope
popf
pop
jp
xchg
and
adc
or
in
pop
mov
xor
or
loope
dec
xor
mov
inc
sbb
cmp
lods
rcr
sbb
sub
ja
test
mov
in
and
pusha
gs
add
into
rclb
je
fildl
or
andl
outsb
sbb
mov
cmp
xabort
xchg
dec
cld
mov
roll
gs
adc
rclb
lret
test
add
data16
xchg
loopne
clc
dec
hlt
pop
adc
movsl
add
cwtl
es
xchg
jbe
jbe,pn
xchg
sbb
sub
push
push
shl
inc
mov
adc
cmpl
cmpb
ret
pusha
sti
mov
loope
pusha
rolb
jnp
push
jae
popf
jg
js
adc
int3
push
add
andl
or
jns
inc
sub
and
pusha
cmp
add
mov
pushf
inc
popa
inc
inc
loope
aas
add
sub
into
cmpsb
or
add
adc
sub
es
insb
mov
xchg
lahf
pop
sbb
jg
rolb
pop
mov
mov
add
cmp
pushf
mov
cwtl
pusha
mov
adc
aam
mov
mov
aaa
std
sbb
push
punpcklwd
out
jge
gs
and
sbb
mov
mov
loop
sub
xchg
xchg
xchg
mov
or
gs
push
mov
push
xchg
test
cmp
popa
xor
das
inc
out
push
mov
or
subb
bound
xchg
cmc
dec
scas
cmpb
clc
xchg
test
lock
roll
mov
push
ds
lds
andb
fst
sub
lret
addl
lahf
cli
sahf
jp
sub
ret
xchg
mov
or
mov
loopne
xor
pop
add
cmp
add
xor
addb
sbb
or
ret
push
or
push
mov
mov
jnp
lcall
or
jno
in
dec
and
cwtl
cmp
lds
cltd
jb
loop
lods
iret
and
sbb
xchg
test
xchg
and
cmp
xchg
xchg
adc
push
cmp
dec
imul
jae
dec
adc
jbe
popa
inc
sbb
jp
inc
fs
xlat
or
cltd
push
mov
jmp
inc
or
xor
in
xorb
mov
pop
and
push
andl
ret
adc
pop
andb
sub
mov
push
pop
addr16
xor
test
scas
jo
dec
stos
cld
test
mov
nop
pop
fildll
pop
dec
cld
cmp
mov
lock
stos
mov
movsb
pop
cwtl
add
xchg
rorb
and
inc
fsubl
popa
lds
jg
add
pop
in
mov
and
popf
push
test
xchg
sbb
push
sub
or
push
push
insl
sub
pop
or
jmp
xchg
loop
ds
es
push
inc
dec
gs
loope
arpl
and
add
nop
mov
test
jg
inc
dec
or
inc
add
rolb
add
sub
cmc
daa
push
test
movd
sub
pop
out
adc
rcrb
sbb
cmp
dec
cmp
into
and
fistpll
jno
or
add
xchg
aaa
jbe
inc
add
push
push
xor
out
mov
cli
jo
push
jle
rcl
rorb
sub
and
add
mov
mov
ret
sub
jmp
sub
add
adcl
xor
imul
mov
jle
sbb
sub
jmp
pop
push
dec
aad
aad
in
sbbb
fistps
roll
gs
inc
mov
mov
fadds
rcl
adc
pop
jg
push
arpl
pop
test
cmpsl
stos
mov
pusha
jp
out
repz
cmp
jl
shl
fiadds
dec
pop
lods
sti
xchg
pop
fldt
adc
add
sbb
xor
adc
adc
adc
xchg
test
cmp
jns
ljmp
inc
ljmp
add
dec
push
adc
addl
fst
stos
jecxz
xchg
in
cld
and
ja
mov
adc
xchg
adc
bnd
xchg
and
add
sub
andl
xor
aad
lea
xchg
jge
mov
sahf
pop
aas
dec
inc
inc
add
or
and
adc
lds
lea
pusha
xor
mov
add
gs
cld
pop
sbb
cmp
xlat
int
aam
test
lds
inc
cmp
aas
loope
jns
imul
imul
gs
xchg
push
cmpsb
inc
cmp
mov
dec
mov
std
jle
imul
cmp
xchg
in
rolb
cmp
xor
and
add
mov
sub
shrb
fisubs
add
into
ss
subb
jp
jb
jno
cli
jg
in
pop
xor
repnz
mov
adc
mov
adc
sbb
and
or
push
xlat
daa
and
jmp
sbb
addb
and
aas
leave
or
sub
andl
inc
andb
in
mov
rcll
push
jbe
sub
inc
inc
sahf
sbb
adc
bound
push
enter
and
pop
cld
or
push
ljmp
test
fisubl
add
lods
lret
lods
jb
rorb
add
inc
inc
or
sub
fisttpll
add
dec
inc
jp
jnp
movnti
and
daa
and
add
or
pop
adc
dec
sbb
cltd
into
inc
adc
nop
cmpsb
fadd
dec
add
and
mov
cmp
roll
xchg
pop
sbb
mov
push
sub
inc
pusha
sbb
pop
inc
and
bnd
jb
add
pop
rolb
and
daa
jl
sub
stos
push
mov
mov
sbbb
cmp
push
dec
or
add
das
testb
sub
push
and
lea
sbb
test
shrl
repnz
mov
and
sbbl
mov
lods
xor
inc
xor
inc
mov
mov
adc
mov
test
mov
add
addb
xchg
test
mov
adc
mov
mov
sub
pop
rcr
cwtl
rcrl
and
add
iret
dec
dec
adc
dec
sbb
adc
or
mov
push
jp
stos
add
add
xchg
mov
mov
ja
rol
fstps
lods
pop
cmp
scas
inc
jno
or
pusha
jne
fiaddl
rolb
pop
inc
xor
in
xchg
mov
xchg
or
stos
lahf
inc
test
pop
dec
xchg
sub
push
cmp
mov
dec
dec
mov
cmp
pushf
lret
into
pushf
lret
xor
sbb
xchg
sub
jmp
and
add
loop
mov
mov
loopne
sub
sbb
lock
add
hlt
rcrl
ljmp
lods
orb
inc
inc
sbb
movsl
inc
push
sbb
inc
mov
xlat
ljmp
xchg
in
and
dec
test
add
mov
fists
or
adc
fsts
repnz
inc
movsl
xchg
mov
mov
das
insb
stc
fwait
or
mov
mov
loop
dec
mov
orl
ficomps
loope
insl
cmc
out
inc
stos
or
out
xor
and
and
jl
arpl
add
bound
push
mov
sbb
pop
fistpl
jnp
sub
adc
cmc
loop
push
lret
xorl
sbb
and
xor
or
rcr
lods
mov
adcl
shrb
and
rolb
add
cmp
popa
inc
add
jl
or
mov
or
xchg
sbb
gs
scas
and
ds
push
neg
jno
cltd
fucomip
pop
into
push
pop
lock
cmpl
mov
loop
dec
add
fdivrs
cmp
dec
insb
cmp
mov
jo
sbb
dec
pop
pop
mov
mov
mov
shl
aam
scas
movb
scas
inc
clc
dec
lea
and
add
popf
dec
add
arpl
push
sub
movsb
daa
mov
rcrl
popa
sbbl
sub
bound
and
andl
add
jl
inc
mov
push
and
fsubs
pop
mov
test
add
sbb
push
or
cs
xchg
dec
pop
mov
mov
jg
les
sbb
sbb
sub
push
out
pop
xor
clc
xchg
mov
sbb
cwtl
mov
or
and
andb
push
andb
jmp
add
fnstsw
jo
ret
and
add
add
dec
and
sub
rcrl
lds
mov
adc
sub
jmp
scas
jns
add
inc
pop
pop
adc
adc
pop
cmp
test
sub
push
std
gs
sub
lret
movsb
and
test
mov
hlt
push
mov
push
hlt
or
push
pop
das
leave
test
xor
pop
adc
dec
andb
mov
and
rcrb
inc
loope
pop
ret
dec
and
push
pop
or
nop
shll
imul
fisubrl
mov
fs
je
lds
add
adc
and
adc
or
adc
mov
jo
lret
std
test
or
jo
shl
movsl
mov
add
inc
add
js
in
pop
or
call
daa
pushw
and
inc
das
fistps
cmp
rorl
mov
mov
cli
stos
xchg
and
pop
and
loopne
inc
sbb
or
lret
jecxz
xor
mov
push
mov
push
add
xlat
mov
in
bound
sarb
mov
add
sub
xchg
mov
jle
inc
push
add
and
inc
mov
and
mov
inc
ret
dec
sbb
test
loope
xchg
and
jge
std
ficomps
mov
mov
lods
rorb
mov
mov
cmp
sub
iret
fcomip
or
popa
js
fsubs
mov
xchg
lods
sar
les
popl
mov
lret
mov
pop
aas
push
push
add
xchg
inc
pop
scas
loope
xorl
je
mov
cmpl
in
rorl
fwait
pop
mov
imul
push
call
notb
imul
push
aas
push
add
cwtl
aaa
repnz
jae
pop
or
push
bound
xor
pop
xor
nop
pop
pusha
or
nop
and
jnp
and
inc
push
adc
mov
push
subb
jns
or
data16
mov
popa
jo
mov
sbb
or
mov
out
mov
or
mov
orl
or
xor
shrb
and
adc
xchg
mov
adcl
cwtl
mov
inc
cltd
and
sbbl
pushf
mov
sbbl
add
inc
add
addb
add
test
add
and
xchg
mov
and
adc
inc
or
mov
and
adc
inc
mov
adcl
adc
xchg
sbb
mov
adcl
adc
inc
pop
and
cwtl
and
adc
inc
sbb
fwait
sbbl
push
sahf
sbb
mov
andb
addl
orl
test
push
pop
sbb
mov
inc
mov
or
and
adc
mov
orl
nop
mov
inc
xchg
and
adcl
xchg
mov
adcl
cwtl
mov
inc
cltd
and
sbbl
sbb
and
lahf
push
dec
fsubl
adc
sbb
and
addl
push
mov
orl
shrb
and
adc
inc
or
mov
and
adc
inc
adc
nop
adcl
adc
xchg
sbb
mov
xchg
add
rorb
push
shrb
and
adc
sbb
and
mov
xchg
push
test
add
and
andb
sbbl
add
and
sbbl
pushf
mov
addl
add
sbbb
ja
sarb
mov
or
fwait
mov
inc
lcall
sbb
adc
sbb
and
adcl
addl
xchg
xor
inc
orl
or
mov
and
adc
inc
mov
adcl
adc
xchg
sbb
mov
adcl
adc
sbb
and
sbbl
lcall
or
adc
or
or
pop
hlt
dec
xchg
sbb
sbb
pop
into
dec
leave
ret
fmul
jmp
adcb
out
sub
push
lcall
sbb
sbb
adc
mov
mov
mov
movsl
sbb
jo
test
cmpsb
scas
xorb
lahf
rcr
add
rolb
sbb
push
mov
jg
jns
cmp
push
pop
xor
js
push
jle
push
mov
add
dec
dec
mov
das
mov
lret
add
mov
and
mov
push
out
scas
mov
sbb
or
mov
sbb
and
or
sbb
lcall
adc
cmp
inc
into
ftst
xorb
pop
out
adc
stc
mov
loope
clc
cli
fstpl
movsb
mov
andb
loope
jle
lret
pusha
enter
sbb
mov
sbb
mov
or
int
fsubp
pop
rorl
xchg
mov
add
push
sub
push
jne
jo
mov
xorl
cmp
cmp
leave
xchg
cmp
inc
rep
sbbl
scas
inc
cs
insb
fistpl
xor
cli
addr16
push
popf
mov
push
xlat
pop
xor
pop
imul
loopne
pop
sbb
add
mov
sbb
jnp
aas
adcl
stos
sbb
cmc
adcl
lahf
ds
test
or
add
adc
mov
inc
shll
test
sbb
ss
and
fcompp
push
loop
cmp
das
pop
adc
or
add
fsubr
sbb
sbb
sub
mov
and
cmp
pop
push
subl
inc
pusha
or
push
jp
imul
pminsw
in
data16
andb
sbb
sbb
pop
jo
bound
jb
dec
adcl
cs
push
scas
cmp
sbb
push
cs
and
sub
cmpb
pushf
cmp
popa
jnp
sahf
sub
xor
ret
fsubl
dec
shll
out
add
loopne
sub
and
jp
loopne
jmp
pop
jo
inc
imul
or
aam
incl
sbbl
andb
sbbb
mov
arpl
fsubrs
jmp
push
lods
inc
add
cmc
xor
inc
add
xchg
aad
in
ret
or
arpl
mulb
sbb
aaa
or
int
xor
aas
or
mov
add
shlb
sbb
js
out
jle
jecxz
sbb
inc
gs
or
or
sub
pop
filds
movsl
mov
add
sub
lahf
or
popa
or
mov
jnp
cwtl
add
pushf
or
mov
or
sbbl
aam
adc
scas
shlb
or
xor
pop
cmpsb
or
lock
mov
or
les
xor
xchg
pop
and
sbb
aad
movsb
push
xor
mov
shlb
inc
fwait
and
mov
addb
xor
mov
cmp
inc
mov
adc
or
adc
push
pop
or
dec
mov
dec
xor
add
pushf
mov
dec
dec
fdivr
inc
push
or
test
sbb
add
push
lahf
test
push
jo
cmp
cmp
mov
sbb
pusha
add
xchg
sbb
add
pop
sysenter
movsb
dec
popa
in
push
pushf
pop
pop
lret
lcall
inc
xor
jg
cmp
push
js
cwtl
mov
wbinvd
loope
inc
adc
push
aam
dec
nop
and
inc
pop
jg
push
or
or
adc
sbb
add
xchg
and
xchg
mov
xchg
push
add
or
add
loop
sbb
adc
push
adc
add
mov
mov
test
sbb
adc
inc
sbb
xchg
pop
add
and
pop
push
add
mov
pop
xchg
dec
sub
dec
pop
fwait
wbinvd
or
push
add
fwait
lds
xchg
out
mull
jb
fbld
in
mov
adc
cmp
xchg
sub
push
fbstp
xchg
ret
adc
cmp
adc
rorl
cmpsb
mul
subb
pop
pop
and
adc
add
cmp
or
xor
inc
orl
or
and
aad
ficomps
out
jge
inc
test
mov
orl
fwait
adc
xchg
movsl
adc
adc
add
push
xchg
addr16
sbb
xchg
add
cwtl
add
in
sbb
inc
cmpsl
inc
or
sbb
int
cmove
add
xor
adc
cld
ljmp
jle
cmovs
add
std
mov
cli
jp
inc
and
testl
nop
mov
inc
adc
movzwl
mov
cld
pop
cmp
push
adc
add
inc
push
jp
test
subb
iret
dec
inc
or
pop
mov
test
fisttps
adc
push
sbb
mov
add
add
inc
add
add
pop
xchg
sbb
xchg
add
add
or
push
xlat
test
adc
add
out
and
insb
adc
fnstcw
add
dec
xlat
or
fnstcw
dec
into
push
add
dec
sbb
insl
add
add
add
popa
sbb
jecxz
mov
add
or
cmc
daa
mov
lds
fiadds
sub
push
add
sbb
aam
mov
pop
or
movsb
cltd
push
inc
push
adc
add
cmp
mov
inc
add
popf
adc
nop
fisttpll
and
inc
and
and
mov
lret
xchg
dec
pop
and
mov
or
test
dec
adc
mov
push
and
pop
movsl
inc
rol
xor
push
inc
and
mov
inc
dec
aad
cwtl
test
dec
xchg
mov
inc
nop
orb
into
mov
inc
or
dec
mov
xchg
inc
mov
aad
fists
adc
inc
add
pop
push
xchg
aad
fldt
sbb
fsubs
inc
pop
stos
pop
sbb
repnz
or
or
inc
sbb
cltd
push
mov
inc
add
imulb
or
les
sbb
dec
fwait
and
mov
mov
inc
or
mov
sbb
sahf
dec
add
inc
mov
or
subl
pop
and
add
push
xchg
and
push
add
jge
out
ret
mov
mov
xchg
rorl
xchg
pop
test
rorl
and
inc
and
add
or
mov
nop
dec
lret
mov
add
adc
and
ror
repz
sbb
inc
xchg
add
pop
shll
xchg
xchg
pop
mov
sbb
adc
inc
dec
test
ret
popa
pop
negb
test
or
inc
call
fcoms
outsl
sahf
and
jo
adc
sbb
adc
andb
push
ret
gs
call
sbb
add
add
in
xlat
and
adcl
lock
push
adc
and
and
test
lea
int
or
xchg
add
pop
out
nop
and
sbb
sbb
jg
add
push
xchg
cmp
inc
push
loop
adc
mov
sbb
add
dec
add
inc
in
test
leave
sub
ja
pop
outsb
or
push
into
inc
dec
add
dec
enter
mov
das
adc
fwait
imul
repz
mov
lea
xchg
xchg
and
push
lds
adc
daa
arpl
and
cwtl
repz
repnz
icebp
cmpl
adc
push
mov
inc
dec
push
jl
fsubrl
adc
dec
mov
add
mov
add
popa
xchg
lock
xchg
or
bound
pop
mov
inc
mov
xchg
mov
sahf
adcb
fdivrl
call
dec
pop
cmp
cmp
xchg
adc
std
dec
sub
and
daa
add
adc
adc
stos
add
fsubr
mov
mov
ljmp
hlt
test
popf
cmpsl
or
aad
pop
pop
jo
push
or
int
dec
std
in
inc
or
add
lret
xor
lret
sub
mov
loop
shll
and
sbb
jbe
outsl
push
mov
out
cmp
pop
pushf
inc
pop
sbb
sbb
or
testb
or
mov
adc
or
sbb
inc
pop
aas
add
and
mov
add
push
ljmp
sub
dec
gs
lods
adc
dec
adc
push
xchg
adc
xchg
stos
push
add
sbb
and
add
adc
fnstsw
mov
add
fisubl
loop
pop
dec
ret
push
or
cmp
add
nop
movsb
dec
mov
pop
push
nop
dec
inc
push
mov
jb
add
inc
jno
inc
ficomps
inc
sbb
add
popf
loop
add
jl
sbb
sbb
cmp
nop
cmp
xor
or
std
rorl
dec
mov
dec
or
pop
and
fsubrl
or
leave
jo
pusha
mov
dec
pop
out
test
jl
inc
and
cwtl
popa
mov
or
adc
in
xchg
jno
popf
mov
adc
or
inc
popf
rcll
xchg
inc
xor
nop
and
jge
test
xor
pop
lret
enter
add
xchg
sbb
cmp
bound
or
and
nop
adc
mov
add
enter
push
cli
add
sub
call
in
xchg
lds
pop
mov
out
imul
pop
filds
jecxz
add
pop
incl
add
inc
subb
xchg
popa
and
mov
or
aam
push
popa
popf
cmp
sbb
ficomps
loope
dec
nop
nop
mov
rcl
pop
xchg
or
add
and
cmp
or
add
and
adc
adc
mov
mov
sub
daa
es
or
xchg
and
sbb
add
xor
dec
adc
imul
or
ret
inc
pop
testb
jecxz
fs
add
pop
add
inc
adc
add
push
xchg
sbb
or
or
pop
sbb
xlat
xor
push
add
cmp
add
in
cmp
inc
or
inc
loop
sub
sti
add
push
adc
pop
adc
add
jb
xchg
out
shrb
lods
or
out
add
sbb
addr16
mov
add
xchg
cmpsl
xchg
add
dec
add
push
sub
pop
dec
xorb
jne
pop
adc
mov
and
addb
pushf
push
sbb
or
push
xchg
add
leave
out
push
mov
dec
popa
pop
subl
cltd
rclb
add
and
cld
and
adcb
and
add
adc
or
add
mov
fwait
pop
add
and
sbb
dec
popa
or
sar
and
loopne
lcall
mov
add
inc
cld
loop
nop
sbb
or
sbb
sbb
and
push
sub
jle
push
mov
sub
xchg
and
fsubl
add
xor
cmovs
pushf
sti
mov
inc
fsubr
add
inc
pop
sbb
mov
sbb
es
lea
ret
cmp
adcl
mov
add
jae
adc
and
add
jae
push
add
add
adc
mov
lret
fwait
or
addb
and
or
sbb
cmp
xchg
jg
push
rolb
jg
hlt
rclb
xor
push
ret
mov
fstpt
repnz
leave
push
cwtl
or
jmp
sub
dec
mov
push
mov
and
add
adc
xor
and
mov
xchg
fistpl
sbb
idiv
nop
sbb
xor
imul
sbb
test
sbb
mov
adc
aad
and
add
rcrb
xor
sub
inc
popa
xor
roll
and
cmp
add
dec
adc
push
loope
cwtl
fisttps
or
popa
cmpb
adc
fstl
sbb
jl
sub
popa
and
and
jno
add
jnp
cmc
xchg
pop
cwtl
addr16
test
popa
add
sbb
cwtl
rcr
test
dec
mov
xor
stc
rorl
jbe
fwait
test
popa
cmpsl
lods
pop
stc
dec
push
idiv
push
ss
dec
mov
jp
test
popa
cmpsl
mov
inc
jl
inc
loopne
ss
push
add
cmp
out
sahf
pop
idivl
fildl
mov
stos
pop
or
repz
xor
add
mov
inc
push
or
add
imul
pop
pusha
in
sbb
mov
inc
shl
sbb
sbb
shll
pop
sti
jne
mov
mov
idivl
sbb
ss
and
loop
mov
mov
inc
adc
mov
ret
jecxz
cli
pop
dec
sahf
add
push
add
or
stos
sbb
push
adc
or
ret
inc
scas
push
or
pop
inc
add
inc
mov
inc
pop
push
add
sbb
hlt
movlps
jmp
dec
sbb
ss
or
or
push
xchg
inc
push
popa
cmpl
xchg
movsb
inc
xchg
roll
adc
ficoml
sbb
pop
pop
les
xchg
movsb
dec
inc
add
mov
inc
addl
cs
nop
mov
inc
sbb
and
adc
and
inc
mov
pop
adc
decl
fildll
into
push
xor
add
jae
xor
add
xor
add
imul
decl
test
cmpsl
pushf
cli
das
cmpsl
cmp
stc
test
imul
stc
push
mov
bound
push
xor
pop
or
sti
sub
push
roll
sub
nopl
fsubl
sbb
inc
add
push
mov
add
sub
lods
or
mov
dec
ret
mov
add
sbb
push
mov
add
cmp
and
cmovs
dec
ret
adc
rcrl
add
lsl
or
adc
jno
mov
sbb
in
mov
pop
inc
pop
and
dec
and
daa
or
push
bound
mov
scas
mov
push
push
adc
pop
cmp
push
or
xor
push
mov
mov
add
jne
dec
pop
lcall
push
nop
dec
dec
or
or
sbbl
cwtl
pop
jp
xchg
pop
or
or
inc
lock
push
sbb
mov
push
fistpl
cwtl
add
pop
push
pop
adc
popa
pop
fwait
mov
mov
xor
sbb
and
pop
and
xor
fwait
xor
sbb
pop
push
inc
dec
repnz
pop
cli
push
add
adc
test
or
or
test
dec
add
add
cmp
push
dec
les
and
adc
adc
mov
adc
pop
jnp
adc
cmp
mov
popa
fnstenv
rclb
das
pop
insb
fisubl
xor
and
stc
fidivrl
sub
add
mov
dec
mov
or
or
inc
ljmp
inc
and
adc
inc
jnp
push
outsl
jb
and
push
add
inc
arpl
sub
add
pop
pop
adcl
nop
lret
push
cmpsl
cmpsl
dec
adc
mov
inc
sbb
add
push
lret
or
sbb
test
ret
add
add
sbb
into
add
push
and
pop
xor
add
cld
cltd
push
push
loop
add
or
sub
inc
push
add
cmp
push
adc
ret
out
sbb
xchg
jmp
pop
xchg
mov
dec
in
jp
iret
sub
add
lcall
lcall
je
mov
xchg
ds
jl
dec
scas
jp
iret
jne
jecxz
je
push
cmp
pop
leave
pushl
xchg
inc
add
inc
push
sbb
push
pop
mov
or
sbb
xchg
repz
mov
pop
adc
ret
add
test
or
adc
sbb
jno
cwtl
leave
add
pop
cli
mov
lds
push
adc
adc
pop
jno
xchg
inc
push
cli
clc
push
dec
fstpt
push
repnz
inc
fwait
cmp
push
push
add
add
adc
pop
or
cwtl
or
add
test
adc
cmp
mov
outsb
mov
sub
fadds
add
push
adc
inc
push
sti
fcmovbe
testb
out
add
inc
add
pop
sbb
call
fstpl
fmuls
in
jne
sbb
sbb
pop
or
sbb
add
or
rcrl
sbb
mov
dec
fbstp
lock
add
xor
and
aad
pop
mov
dec
adc
pop
adc
push
mov
les
lods
mov
dec
sub
jle
add
mov
dec
mov
pop
pop
nop
imul
sbb
mov
add
add
dec
mov
mov
data16
scas
add
adc
jns
add
mull
cmc
inc
dec
repnz
xor
or
inc
or
inc
inc
sbb
sbbl
add
adcb
daa
and
lcall
pop
sbb
push
jns
push
popa
add
inc
fildll
incl
and
sub
adc
inc
or
mov
lcall
or
inc
dec
ret
add
adc
adc
sub
inc
lcall
inc
mov
cmp
incl
mov
fists
popa
in
jle
pop
cmp
xor
adc
daa
cmp
outsb
or
add
fs
jb
subl
push
mov
popf
mov
pop
mov
mov
dec
xchg
popa
push
adc
or
lret
mov
adcb
jno
cmpl
jecxz
inc
add
push
mov
or
or
push
add
inc
or
pop
jl
cwtl
pop
cmp
xchg
mov
out
inc
rcll
push
movsl
inc
adc
fdivrp
cmpsl
mov
sbb
jno
xchg
inc
lcall
orb
xchg
hlt
test
add
lret
xor
shlb
fstpt
pand
sti
je
int3
shll
inc
mov
push
sbb
xchg
test
sbb
mov
push
xor
push
popa
lcall
add
lret
rcrl
add
dec
sbb
mov
jo
inc
ljmp
fcomps
in
loopne
pop
adc
xchg
pop
push
and
add
sbb
pop
test
mov
or
test
push
mov
popf
clc
push
or
gs
inc
dec
add
or
mov
xchg
inc
stc
and
pop
mulb
scas
jg
add
scas
pushf
lea
jne
pusha
movzbw
setae
movb
movb
pushf
mov
pop
movzbw
lea
call
lea
jne
call
add
inc
gs
imul
outsl
arpl
push
add
movb
lea
jmp
stc
add
pushf
pusha
pusha
lea
jmp
clc
cmp
jmp
lea
je
xor
rcl
bsr
mov
shr
neg
shrd
rcl
add
pusha
dec
btr
btr
mov
clc
test
jmp
sete
mov
pusha
shr
jmp
add
inc
jb
popa
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
js
push
call
js
popa
xlat
ficomps
test
or
sub
xor
mov
mov
pushf
bswap
mov
pushf
pushf
pushf
movb
pushl
ret
push
call
mov
data16
mov
pusha
pusha
jmp
add
inc
gs
imul
dec
jb
inc
js
add
push
gs
popa
jb
outsb
je
jmp
add
stos
lret
xor
mov
push
fisubrs
pop
out
mov
mov
jae
sbb
sti
add
fs
xchg
scas
push
push
dec
addr16
jbe
repz
scas
pushf
lea
push
std
or
sarb
dec
add
dec
jae
arpl
jo
jns
add
pop
data16
insb
add
test
push
std
stc
not
add
not
sbb
mov
movsbw
sar
mov
or
rcr
shl
shr
mov
jmp
stc
cmp
pushf
clc
mov
jmp
jmp
mov
pusha
lea
jne
bsr
das
shr
bsf
xor
mov
call
lock
jecxz
out
pusha
popf
test
popf
add
adc
out
xchg
lods
rcrb
push
ds
aas
mov
sub
cmpsl
insb
testl
into
dec
movsb
outsb
fcomip
add
in
jl
rcrb
jmp
cmp
adc
imul
xor
jg
icebp
xchg
dec
into
in
jno
in
test
setg
jmp
pusha
sbb
or
neg
sbb
shlb
sub
inc
push
push
mov
mov
mov
xor
dec
xor
xor
hlt
and
dec
and
fisttpll
jb
dec
push
and
loope
mov
cmpsb
ficompl
pop
punpckhbw
mov
loopne
repz
in
fdivs
cmp
inc
pop
dec
daa
dec
and
and
test
mov
insb
jno
mov
lcall
inc
push
cmp
pop
mov
jb
mov
add
neg
jp
mov
imul
add
cwtl
clc
in
aam
aas
fucomip
sub
or
or
mov
mov
pop
sbb
repnz
hlt
cwtl
jae
mov
cmc
cwtl
negb
pop
sub
int3
mov
cwtl
in
jns
sbb
add
jb
arpl
add
in
adc
xchg
outsl
xchg
call
hlt
je
adc
dec
jp
mov
les
popa
lds
movsl
aam
and
sti
in
loope
outsl
loopne
cs
adc
dec
leave
mov
outsl
push
lcall
add
inc
aad
es
cmp
pusha
jg
pushl
lret
mov
inc
cli
roll
sub
jo
mov
mov
pop
sub
and
xor
mov
xor
mov
cmpsb
dec
mov
aaa
lret
int3
mov
mov
ss
dec
push
push
shlb
mov
fs
adc
pop
daa
lods
jge
lods
inc
and
and
and
sub
and
push
in
cmp
cmp
scas
and
xor
sub
jecxz
cltd
dec
add
ficoms
repz
cwtl
xchg
add
subl
sbb
sbb
loop
inc
or
aas
fsubs
pop
jae
xchg
ret
sbb
shrb
in
lock
popa
push
sbb
sti
inc
sbb
sub
mov
repz
dec
rcr
int
xor
repz
inc
xchg
push
loop
xchg
cwtl
mov
mov
or
mov
pop
cmpsl
fldenv
shll
ljmp
sbb
dec
mov
pop
cli
mov
mov
inc
aaa
fst
rorb
mov
aaa
fiaddl
add
push
imul
popa
bound
add
push
call
sbb
mov
inc
insb
insb
imul
jecxz
pusha
bt
cmc
and
pushf
pusha
movw
lea
jmp
add
pop
pop
jae
je
popa
jo
pop
je
jo
add
jmp
movsbw
movsbw
movsbw
lea
call
add
pop
pop
addr16
popa
imul
cmc
stc
jnp
push
add
test
call
inc
and
jne
addr16
push
gs
and
jne
and
outsb
outsb
imul
jns
jne
and
jae
gs
cs
jae
sub
jne
insb
outsl
popa
and
and
outsl
insl
and
insl
outsl
jb
and
and
jae
popa
jb
and
jne
and
outsl
addr16
insl
add
jmp
add
pop
popa
fs
jae
pop
imul
cltd
sub
fs
call
add
data16
add
add
fs
jne
jae
jb
add
test
sbb
andb
cwtl
bound
jae
sbb
jbe
in
out
xlat
or
lods
jns
sbb
jnp
xchg
cmpsl
sub
dec
and
dec
and
ret
popa
xlat
dec
shr
in
or
outsl
pop
adc
out
add
cli
cld
pushl
popl
cmc
cmc
cmp
jmp
pusha
cmpb
call
clc
mov
jae
push
hlt
or
jle
pop
jbe
jle
sub
inc
or
xchg
sbb
mov
cld
sub
sub
in
in
add
pop
pop
fs
insb
outsl
outsb
gs
je
call
cmp
bt
sub
stc
stc
test
cmp
jmp
add
push
jo
popa
je
push
imul
add
je
imul
jae
pusha
lea
jne
mov
setno
cmp
dec
xor
movzbl
lea
setae
mov
pusha
mov
push
lea
jmp
add
push
outsl
jae
push
jne
je
gs
popa
add
or
test
jne
call
or
ds
mov
ret
cmp
stc
stc
pop
and
and
pushf
add
xchg
mov
jbe
sbb
outsl
gs
daa
inc
dec
ss
mov
adc
adc
insl
daa
repnz
sub
sub
es
loop
cmp
insl
repnz
jne
pushf
lea
pushf
mov
pushf
mov
movl
call
add
push
arpl
insb
add
test
xchg
add
pusha
call
jmp
push
call
mov
add
push
pushf
xor
lea
pushf
cmp
pusha
lea
je
push
sub
mov
pushf
add
jl
pushf
test
add
pushf
jmp
dec
inc
inc
xor
cs
dec
dec
add
add
je
jb
arpl
jae
gs
jo
lea
call
pushf
adc
pushf
lea
jg
call
push
pusha
jmp
push
cmpsb
pop
mov
mov
es
pusha
cmc
ss
stos
stc
in
jecxz
in
cltd
dec
xor
aas
xor
int3
sub
mov
mov
jle
mov
cmp
mov
lret
aam
sahf
stc
lret
and
pop
pop
mov
cmpsl
ds
push
ret
push
mov
test
mov
insl
int
loop
cld
adc
loope
bound
fwait
nop
iret
ds
lock
sub
jl
push
leave
daa
ja
mov
inc
mov
cmp
sub
xor
outsl
adc
xchg
out
loopne
icebp
sbbb
lea
out
mov
dec
and
fsubrl
xchg
nop
sti
mov
push
pop
dec
mov
push
mov
mov
out
and
mov
mov
dec
xlat
pop
int3
and
cli
into
mov
adc
outsl
mov
out
daa
into
jecxz
in
pusha
sub
mov
loop
sbb
loopne
addr16
push
js
mov
in
add
jmp
data16
call
cmpsl
stos
lcall
and
mov
fisubs
push
divb
or
jo
mov
cmpsl
sub
call
cmp
jmp
add
push
gs
imul
outsb
add
add
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
jmp
test
pusha
pushl
mov
bt
clc
cmp
test
test
pushf
pushf
call
add
inc
jb
popa
je
push
push
add
xchg
imul
adc
adc
adc
adc
pop
mov
fs
fisttpll
dec
xchg
jg
xchg
mov
aas
sarb
add
cmp
clc
test
scas
jo
nop
jb
mov
pop
hlt
lea
push
fs
gs
mov
adc
xchg
and
or
out
xchg
push
in
jb
push
inc
lea
xchg
mov
popf
cmp
leave
inc
jno
adc
enter
jb
add
mov
adc
xchg
pop
cmc
jno
push
push
mov
xor
dec
add
lods
aas
das
int
xor
mov
mov
fmuls
out
jnp
jmp
and
movsl
sub
push
mov
push
pop
or
nop
adc
pop
inc
mov
xor
sub
or
jns
or
mov
aad
dec
mov
iret
mov
mov
push
je
ja
jmp
imul
xor
dec
cmp
jae
push
in
push
sbbl
fcomps
cmp
lea
call
bt
stc
stc
clc
sub
call
call
lea
jne
pushf
cmpb
pushf
lea
jne
movzbl
movzbw
jmp
pushf
pushf
lea
ja
jmp
add
movb
pushf
pushl
lea
jmp
add
pop
insl
bound
bound
jo
or
inc
mov
inc
cmp
scas
pop
stos
fs
push
xchg
pop
xor
gs
out
cmc
inc
nop
imul
sbb
out
dec
cmpb
push
stc
dec
pop
in
gs
popa
cmp
leave
add
pop
jecxz
ja
or
pop
push
sbb
mov
fs
adc
xchg
mov
jp
sub
pop
inc
inc
push
insb
push
mov
test
in
xchg
add
pop
jp
incb
jle
cld
push
jp
jns
mov
xchg
cmp
cli
sbb
iret
mov
into
out
pop
ret
dec
sarb
inc
lods
stos
pop
imul
mov
popa
mov
jle
jl
sbb
cmp
call
xor
xchg
outsl
adc
mov
jmp
enter
and
leave
add
add
push
jp
xchg
movsl
out
mov
gs
cs
aas
push
cmp
mov
loope
leave
andb
dec
fbstp
add
xlat
fimuls
enter
add
inc
js
inc
jb
insl
gs
popa
outsb
fs
gs
push
call
and
stc
sbbb
add
sahf
rcrb
jl
push
cmp
mov
xlat
pop
sbb
jo
insb
negb
negb
cmc
cltd
hlt
jp
data16
fs
mov
insb
dec
adc
or
add
jg
out
out
add
insl
insl
outsl
jbe
add
sub
pushf
jmp
add
dec
push
je
inc
push
add
shlb
call
dec
dec
pushf
add
dec
outsb
data16
popa
je
push
arpl
jmp
test
call
push
call
jecxz
push
push
inc
es
and
mov
fisubl
aaa
jnp
fiadds
loop
jp
gs
repz
pop
mov
push
pop
dec
ss
bnd
add
adc
cs
sub
inc
dec
sbb
out
mov
pop
push
addr16
xchg
jno
leave
inc
jmp
lea
jae
pushf
lea
jmp
add
insb
jae
jb
jo
inc
add
rcrb
or
jo
push
pushf
inc
pushf
sub
shrb
push
sub
push
sub
aam
and
push
fs
push
sub
shll
iret
fbld
dec
icebp
pop
js
scas
push
insb
and
mov
push
sub
lea
fcomps
mov
mov
jp
jecxz
adc
cmp
cmp
les
je
stos
lods
mov
adc
cmp
out
pusha
or
mov
push
pop
call
loop
aam
ret
jae
addr16
mov
repz
xchg
add
dec
gs
jo
jb
add
stc
and
cmpb
pushf
jmp
lea
je
push
pushl
mov
add
mov
mov
jmp
sub
loopne
loop
gs
arpl
mov
outsb
add
dec
mov
mov
cld
sbb
xorl
pop
cmp
jns
xor
xchg
xchg
repz
inc
ja
adc
add
sbb
in
loope
jecxz
addr16
push
pusha
movb
lea
jne
and
btc
adc
jmp
push
pusha
push
lea
je
movsbw
add
btc
bswap
shld
bsf
mov
xor
bswap
movsbw
mov
cmc
neg
mov
push
push
bt
test
test
pushf
pusha
lea
je
bts
add
btc
bt
mov
jmp
add
push
gs
popa
jo
jne
gs
dec
mov
sub
enter
lret
mov
xlat
cmp
dec
dec
js
jns
jae
rorb
push
fsubrp
repz
fildll
jno
test
pop
mov
adc
cwtl
jnp
and
mov
jo
inc
cmp
cmpsb
dec
inc
adc
dec
iret
pushf
lcall
push
nopl
jo
repz
call
fnstcw
das
push
shr
call
inc
repnz
or
hlt
mov
ja
rep
xchg
xor
and
jl
sbb
mov
ja
and
mov
dec
jmp
sarl
adc
rcrl
add
mov
fs
mov
adc
scas
aad
adc
rcr
aam
lret
cmc
insl
fmull
xchg
test
in
pop
xchg
std
pop
cld
icebp
add
sbb
sub
push
mov
push
inc
das
sbb
dec
mov
leave
jmp
jmp
add
push
jb
outsb
jae
popa
je
dec
gs
popa
addr16
and
fcmovb
inc
inc
mov
and
rcrl
scas
loope
out
sbb
and
cwtl
sub
lahf
mov
test
mov
dec
stc
loopne
fs
xor
js
int
test
dec
add
adcb
sbb
fnstsw
in
daa
pop
in
cmp
mov
sahf
mov
iret
ret
push
cmp
xor
dec
adc
test
jae
or
pop
xchg
inc
fnstenv
sub
add
addr16
insb
outsl
jae
dec
gs
add
inc
imul
add
test
std
call
add
shlb
stc
bt
mov
add
test
inc
test
ror
add
or
or
setbe
mov
test
clc
cmc
test
pushf
lea
ja
je
call
add
ja
jbe
dec
jne
push
jb
je
add
mov
call
xchg
nop
jo
jae
das
popa
xor
scas
adc
fidivl
arpl
xchg
push
insl
pop
imul
mov
icebp
cli
js
jnp
aaa
add
adc
fdivrp
call
lea
jb
popa
je
push
outsl
insb
imul
add
pop
popa
arpl
insb
outsb
add
dec
int3
adc
dec
stos
fnstcw
fs
jmp
sub
cwtd
out
in
jecxz
add
out
jnp
dec
mov
sbb
pop
outsb
mov
lret
aam
sbb
or
test
sbb
iret
and
test
jp
popa
jg
cmp
outsb
mov
lods
cmp
add
out
push
insb
out
mov
icebp
inc
mov
push
adc
loope
push
xor
loop
xor
lods
popa
sbb
jp
add
pop
or
sub
scas
sahf
ret
loope
out
jmp
adc
adc
sbb
loopne
push
call
xchg
jmp
xlat
fildl
sbb
add
add
insb
jae
jb
outsb
inc
add
jae
testl
out
out
add
cli
mov
jmp
std
rcrl
outsb
js
bound
call
in
mov
das
sbb
je
adc
push
sbb
into
rol
icebp
decl
enter
inc
loope
push
sbb
loope
push
jecxz
xor
sub
pop
dec
imul
mov
sub
jg
pop
into
sub
cmpsl
dec
mov
or
fs
lahf
leave
insb
inc
or
in
pop
mov
aaa
pop
add
ja
jo
imul
add
pusha
push
jmp
add
clc
bt
mov
and
movzbw
push
cmc
shr
or
cmc
mov
bsr
pushf
stc
mov
test
cmpsb
push
pushl
jmp
add
push
push
dec
outsl
je
data16
arpl
inc
add
mov
bt
push
cmc
cmp
test
pusha
lea
je
cmc
cmc
pusha
jmp
push
jbe
jne
testb
out
sbb
popa
sbb
or
sub
pop
push
inc
pop
xor
or
mov
insb
inc
shll
testl
mov
mov
inc
incl
jmp
add
inc
insb
outsl
bound
inc
jb
add
rcrb
call
push
dec
jne
pusha
movw
xchg
pushf
lea
lea
jnp
push
movl
pushf
mov
mov
mov
pushf
movb
pushf
pushl
ret
jae
ret
mov
cmp
lds
inc
cmp
sti
fs
jns
mov
xor
inc
cs
stos
inc
cs
stos
movsl
adc
fildll
imul
popa
in
nop
popl
ffreep
pushf
popa
popa
scas
imul
dec
cmp
lds
and
leave
or
imul
jns
pushl
or
jg
clc
jae
test
repz
mov
mov
jge
cmc
dec
fsubl
adc
loope
push
push
add
inc
gs
imul
rcr
rcr
btr
mov
bt
jmp
add
insl
imul
gs
jb
dec
gs
fs
xor
cmpb
push
jns
stc
addr16
jno
push
or
cmc
mov
pop
fistpl
stos
xlat
fsubr
fisttps
cmpsl
fcomip
dec
inc
stos
xlat
pushf
ja
sahf
pop
pop
or
inc
imul
pop
aaa
lods
inc
add
mov
push
fisttpl
movsb
jmp
inc
div
lods
xchg
inc
call
fwait
jne
cmc
lcall
imul
inc
insb
outsl
jae
add
add
bound
arpl
add
js
out
lea
je
movsbw
sar
cmp
add
movsbw
mov
test
cmp
test
push
lea
je
cmp
call
add
inc
gs
je
arpl
bound
arpl
popa
xlat
mov
call
or
xchg
outsb
pusha
pushl
pushl
lea
call
push
pushl
movb
adc
jmp
cmc
cmp
cmc
test
push
push
lea
je
push
add
jo
mov
pushf
jmp
add
adc
adc
xchg
mov
ljmp
addr16
adc
test
sub
push
in
add
add
dec
jp
cld
mov
or
je
push
pushf
xor
movsl
clc
or
cmp
mov
pop
mov
shll
in
and
pop
inc
xor
mov
mov
mov
mov
xor
aam
das
add
inc
outsl
jo
push
arpl
cmpb
add
sbbb
add
jae
mov
and
jae
mov
inc
cmpsb
dec
movsb
lret
test
sub
sub
push
cmp
mov
jb
mov
ljmp
fnstenv
inc
lods
ret
stos
shrb
call
loope
mov
bsr
mov
call
add
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
add
inc
gs
je
gs
push
outsl
fs
add
ja
outsl
arpl
push
arpl
add
je
bound
arpl
pusha
test
cmp
mov
mov
pusha
lea
je
call
add
inc
gs
jb
arpl
fs
jae
add
add
test
scas
shrb
push
sub
and
pop
jbe
mov
xchg
pop
in
loop
or
sub
test
out
out
ret
insl
js
or
sbb
ret
mov
push
mov
sub
xlat
sub
arpl
loope
in
in
ds
into
sub
xchg
popf
jmp
add
push
gs
arpl
jo
jns
scas
inc
cmp
mov
lds
and
and
push
cltd
dec
push
dec
or
xchg
mov
mov
aad
out
test
sub
pop
lods
xor
test
pop
xchg
cmpsl
inc
adc
jne
cmpl
das
popa
icebp
cwtl
mov
xchg
imul
dec
lret
mov
orl
ljmp
ret
enter
cmp
cmp
cmp
cmp
or
int
mov
cs
dec
in
popa
mov
test
ss
cmp
adc
xchg
lods
lock
in
jp
sbb
xchg
push
ss
inc
test
stos
ret
into
xchg
jl
lret
jbe
mov
jb
mov
inc
nop
jbe
dec
sahf
xchg
add
pushf
pushl
mov
pushf
pushf
pushl
ret
add
inc
gs
outsl
arpl
add
xchg
rorb
add
out
adc
adc
adc
push
lcall
add
daa
subl
cmc
and
outsl
mov
popa
mov
mov
inc
je
ret
test
test
inc
fadd
shl
cmovno
xor
ret
insb
mov
sub
pop
lods
jns
mov
stos
push
sbb
jne
inc
fwait
dec
cmpsl
jmp
add
push
jae
cmp
dec
mov
dec
mov
and
je
stc
cmp
pusha
jmp
aas
test
lret
xor
int3
cld
dec
push
cmc
in
mov
pop
dec
lock
sbb
sub
inc
or
cmc
loope
mov
fcmovne
insb
ds
test
call
mov
jmp
stc
cmp
sub
pushf
rep
not
movsbw
bswap
pushf
mov
pushf
mov
lea
jmp
lods
stc
cmc
add
ja
neg
call
add
inc
jb
ja
arpl
inc
js
add
inc
gs
jb
imul
imul
lea
je
pushf
adc
pusha
lea
jmp
push
call
lea
and
movsl
pop
and
inc
es
and
rcrb
jo
leave
out
out
ret
pop
pop
mov
nop
xchg
mov
test
scas
mov
push
ret
test
and
pop
mov
add
js
gs
pop
push
gs
add
mov
ss
mov
shll
jle
loope
lcall
sbb
dec
mov
out
jno
jno
mov
cmp
cli
xor
sub
push
pop
call
dec
push
push
insb
mov
cli
xor
repz
aad
xchg
je
insl
jo
lock
arpl
js
rclb
fmul
and
add
xlat
ljmp
rorl
add
push
inc
test
xchg
iret
and
inc
mov
ffree
movsb
pop
daa
mov
xor
and
loopne
and
mov
mov
add
testl
clc
loope
popa
mov
xor
mov
insl
insl
xchg
adc
test
addr16
or
and
test
pushl
arpl
divl
ds
mov
cwtl
stos
mov
mov
sub
shrl
mov
in
sarb
jne
outsl
push
sub
inc
xor
pop
ret
inc
adc
sbb
push
or
mov
dec
nop
sbb
pop
cltd
xchg
loop
loop
jecxz
cmp
and
pusha
ljmp
push
daa
ss
stos
inc
adc
sub
adc
mov
mov
pop
add
insl
adc
sub
add
pop
add
push
adc
push
jg
add
adc
push
in
add
push
adc
cmpl
add
adc
and
adc
fsubs
adc
shll
adc
call
xor
loop
adc
push
lods
adc
fs
adc
dec
cmp
add
add
pusha
adc
adc
add
ja
add
adc
mov
adc
pushl
add
adc
outsb
inc
adc
add
ja
add
adc
cld
pop
adc
add
add
or
adc
jp
adc
divl
adc
fldenv
pop
add
jb
add
adc
xchg
inc
adc
hlt
cmpsl
adc
mov
xchg
adc
jmp
adc
xchg
mov
adc
out
adc
xor
push
adcl
add
ja
add
pop
adc
mov
adc
aaa
mov
adc
push
sbb
adc
pop
pop
adc
jns
adc
mov
add
adc
pop
das
adc
xchg
add
push
adc
jb
adc
mov
adc
jmp
and
add
pop
adc
imulb
adc
dec
test
add
adc
out
adc
dec
jecxz
add
js
add
arpl
add
mov
adc
lds
add
adc
ret
movsl
adc
jmp
xor
pop
adcl
or
mov
adc
test
adc
in
push
adc
xor
adc
outsb
mov
adc
aas
jno
add
push
adc
push
inc
adc
push
xor
test
adc
mov
inc
adc
shlb
mov
add
inc
adc
add
add
adc
xchg
mov
add
cmp
and
add
cmp
add
je
add
adc
push
jae
add
dec
adc
add
add
jp
add
test
add
jne
add
mov
adc
inc
arpl
add
adc
mov
adcb
add
add
jo
adc
out
adc
add
adc
sarb
add
rclb
jp
add
pop
adc
andb
or
add
mov
push
add
cmp
push
adcl
add
imul
pop
cmpsl
adc
mov
adc
shll
add
pusha
adc
mov
push
adc
rclb
add
jb
add
adc
insl
adc
mov
jb
add
mov
adc
aaa
mov
adc
divl
add
sub
pop
stos
adc
jbe
adc
push
push
adc
sti
insb
adc
out
adc
les
mov
lods
adc
inc
pop
adc
push
jns
add
xchg
adc
jmp
push
adc
pop
adc
mov
adc
pop
nop
adc
and
add
inc
adc
xchg
push
adc
add
add
push
pusha
adc
dec
aas
adc
nop
mov
adc
jecxz
adc
sarb
adc
or
add
jns
add
movsb
adc
add
adc
shrb
pop
add
adc
fwait
and
add
pop
adc
xor
add
adcl
add
jb
add
adc
xchg
adc
add
add
mov
cmp
jmp
add
add
cmp
add
xlat
cmpsl
adc
aaa
movsl
adc
out
push
add
add
add
add
andb
add
lret
or
adcb
orb
add
xor
add
inc
add
addb
add
lods
add
or
add
popf
pop
add
das
or
adc
add
inc
sbb
adcb
add
adc
adcb
add
lahf
or
xorb
add
xor
add
sbb
add
movsb
pop
add
mov
adc
orb
add
mov
add
cmc
adc
orb
add
insb
push
add
icebp
push
add
or
push
add
icebp
pop
add
test
add
lcall
or
add
jecxz
add
xor
add
push
or
subb
add
sub
add
dec
or
adc
add
lahf
push
add
ret
orb
add
hlt
add
subb
add
lcall
adcb
cmpb
add
mov
add
pop
or
orb
addb
adcb
andb
adc
add
xchg
add
mov
add
mov
add
out
add
pop
add
xchg
adc
cmpb
sbb
add
xchg
adc
addb
add
loope
add
js
add
out
add
and
add
sbb
add
sub
push
add
fwait
or
sub
add
sub
add
test
add
pop
push
add
mov
sbb
addb
andb
orb
xorb
add
add
andb
add
and
add
pop
add
addb
add
xor
add
lret
adc
and
add
pop
add
sbb
add
jns
add
sub
add
outsb
or
cmp
add
push
or
andb
add
push
add
subb
add
arpl
add
stos
or
add
nop
add
andb
add
dec
add
and
add
dec
push
add
and
add
or
xor
add
test
add
testb
jp
add
sub
add
outsl
or
subb
xorb
add
icebp
or
sub
add
mov
add
inc
adc
add
popf
or
xorb
add
mov
push
add
mov
push
add
push
or
xorb
add
popf
push
add
out
sldt
aaa
adc
cmpb
adcb
subb
add
add
add
push
add
pop
adc
sbbb
addb
add
movsl
push
add
mov
adc
orb
add
cmpsb
or
orb
cmpb
add
mov
or
orb
add
testb
xor
add
pop
or
xor
add
dec
adc
xorb
add
fisttpl
add
sbb
add
cmc
or
add
xor
add
xor
add
xor
sbb
cmp
add
xchg
or
subb
add
repz
sbbb
add
xor
add
sbb
add
xchg
push
add
pushf
push
add
add
testb
xorb
cmp
add
imul
and
add
adc
add
decb
add
lcall
subb
add
fildll
adc
mov
sub
push
stos
adc
divl
push
add
test
adc
pop
ss
test
pusha
adc
jle
adc
fsubl
pop
add
das
adc
cmp
adc
lea
sub
adc
test
adc
stc
cs
jnp
adc
sub
adc
jl
adc
mov
adc
sbbl
sub
adc
xchg
add
xchg
adc
call
add
pop
adc
dec
and
add
jnp
add
adc
loopne
adc
cmp
add
das
adc
dec
sub
add
xor
add
jno
add
add
add
add
andb
adcb
add
add
add
je
add
or
add
fs
adc
xchg
adc
xchg
nop
adc
add
add
add
add
pushf
lea
je
cmc
jmp
add
push
gs
insb
imul
inc
popa
je
add
xlat
ss
call
shll
and
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
daa
fsubs
pop
and
fisubl
mov
cmc
hlt
rcr
mov
fwait
push
aad
lods
out
xor
les
mov
dec
sub
ss
jo
dec
mov
popa
xchg
cmp
sub
loope
xor
mov
nop
mov
or
dec
movsb
testb
call
xlat
lcall
xchg
out
out
jnp
pusha
mov
loop
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
outsl
adc
out
adc
adc
idivb
dec
xchg
pushaw
adc
ret
sbb
popa
or
popa
rcl
mov
rclb
pop
sbbl
jb
and
js
jae
push
sub
into
fidivs
fistl
sub
roll
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
and
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
mov
add
fs
insl
popa
addr16
add
jmp
dec
daa
fisubl
cmpsb
fbld
sub
adc
xchg
push
popf
iret
push
fsubr
imul
xchg
or
xorl
out
cmp
mov
leave
inc
pop
sbb
les
jbe
mov
dec
jnp
in
cmc
pushf
xchg
xchg
add
insb
jae
jb
popa
je
add
mov
fcomps
fldcw
push
stos
xlat
cs
fbstp
pop
mov
mov
dec
add
loope
lods
and
idivl
mov
xchg
xor
mov
test
fs
jae
bswap
add
mov
shrd
bts
dec
mov
not
adc
mov
test
sub
stc
cmc
repnz
call
push
call
jbe
push
and
lea
call
call
movw
xchg
pusha
pushf
dec
pushf
pushl
bt
test
shl
mov
jmp
add
inc
gs
gs
je
je
add
add
cltd
rolb
rcrb
jmp
call
pusha
push
lea
je
pusha
or
sets
add
and
rcl
mov
cmp
stc
add
bt
test
mov
cmc
bts
bsr
mov
pusha
stc
cmc
cmp
call
push
call
sbb
xor
pop
cmpsl
pop
daa
pop
inc
cmpsl
pop
mov
sub
and
mov
push
addr16
fdivl
sbbb
mov
stc
jecxz
add
pop
sahf
mov
and
push
pop
call
loop
pushf
push
mov
repz
or
xchg
out
leave
xchg
imul
add
add
dec
and
sub
push
cmp
cmp
add
popa
insb
imul
je
add
jmp
sbb
test
sub
sub
enter
hlt
and
pusha
sbb
or
pop
roll
ret
jecxz
mov
in
test
jl
lret
push
shll
push
mov
dec
test
jl
add
mov
out
inc
enter
aas
in
dec
int
add
imul
adc
ljmp
jo
sub
cmc
dec
pop
mov
insl
movsb
jno
test
xchg
jecxz
xchg
sub
push
cmp
mov
loope
sub
loopne
sbb
cwtl
out
callw
or
xchg
fadd
fisubs
sub
cmp
jge
dec
aaa
push
mov
fadd
push
lds
push
dec
and
repz
ret
lret
inc
push
cmp
ds
outsb
fcmovnbe
out
dec
pop
clc
popa
sbb
push
fsubrl
lock
aaa
cs
sub
scas
push
push
mov
mov
mov
xor
lret
pusha
fidivs
jns
sahf
add
insl
arpl
jb
pop
sti
cwtl
pop
sbb
insl
adc
push
push
loope
pusha
or
pop
sbb
das
shrl
push
scas
xor
cs
and
jnp
cld
fildl
dec
push
sahf
push
jp
and
inc
das
mov
mov
mov
and
xchg
xor
std
sti
mov
notb
nop
out
ret
sub
mov
shll
stos
and
dec
incl
js
add
hlt
adc
fsubl
loopne
adcl
sbb
stc
je
sbb
je
inc
jb
test
or
lock
subb
push
call
aam
inc
inc
sub
cmp
pop
cmp
mov
lds
push
push
imul
ja
xor
out
test
in
add
aam
mov
xchg
xor
fdivrs
loopne
sub
push
fisubs
mov
lods
mov
push
orl
mov
sub
add
push
or
sub
popl
pop
pusha
lea
mov
mov
movb
push
movl
pushf
call
cltd
out
jae
imul
call
and
fsubs
pop
and
mov
pop
fwait
mov
jg
pop
adc
adc
aam
pop
inc
das
mov
or
cmp
xchg
jle
stc
adc
mov
aaa
lret
xchg
pushf
pop
cmp
mov
sti
fcmove
mov
push
add
push
gs
ja
imul
call
add
pop
jae
je
insl
jo
add
lods
shrb
shrb
xlat
enter
dec
add
ror
aas
arpl
aam
dec
inc
adc
mov
lcall
push
inc
mov
cmpsb
test
insb
sub
jno
add
push
cmc
add
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
fsubs
std
lcall
and
fwait
testl
pushl
lea
jae
push
pusha
call
add
inc
gs
gs
arpl
popa
jo
add
add
gs
je
inc
outsl
insl
jo
je
bound
imul
push
gs
je
gs
push
outsl
fs
add
je
outsl
insb
jns
imul
lea
jb
test
test
cmp
pusha
movb
pusha
push
lea
jae
ror
push
cmc
rol
mov
pusha
dec
rcr
mov
not
movsbl
shld
mov
clc
pushf
xor
bt
repnz
call
push
call
inc
jae
ret
insl
push
call
push
dec
add
inc
gs
imul
outsb
addr16
add
scas
call
pushf
lret
int3
sub
lea
jmp
pushf
pushf
pushf
lea
je
pusha
cmp
cmp
cmp
pushf
movb
lea
je
pusha
push
lea
jmp
add
push
gs
outsb
jne
add
jae
jb
outsl
imul
sub
dec
mov
ss
dec
xlat
cmp
sbb
mov
jmp
cmp
stc
pop
stos
sbb
adc
into
scas
sub
sarl
aam
test
loope
movsl
adc
leave
insb
daa
iret
cmpsl
ficoml
pop
in
add
dec
stc
push
call
pushl
popl
stc
cmc
call
mov
adc
inc
mov
adc
imul
add
add
add
inc
adc
testl
add
jmp
dec
adc
fildl
add
add
add
aam
push
add
mov
add
lods
adc
insl
dec
adc
xor
add
add
add
add
pop
add
adc
inc
mov
add
jbe
add
mov
add
adc
pop
mov
add
ret
test
mov
add
adc
mov
lea
add
dec
adc
sub
add
add
add
dec
jns
add
adc
push
mov
add
add
mov
add
dec
adc
add
dec
outsl
popa
fs
imul
add
lea
jne
and
clc
bswap
mov
sub
pushf
pushf
sub
pusha
dec
lea
clc
test
call
call
push
call
sbb
mov
add
push
push
js
arpl
gs
add
add
jne
insb
push
arpl
add
jmp
lea
je
call
scas
push
fs
sbb
loopne
arpl
out
sub
xor
or
sbb
xlat
sub
dec
push
sub
fwait
scas
dec
sbb
xchg
js
jle
sub
mov
das
ret
negb
ret
ljmp
or
addr16
inc
addr16
scas
repz
dec
pop
aaa
jns
cmp
add
int
inc
mov
or
sti
nop
jg
cli
adc
jp
mov
xchg
in
add
dec
pop
out
pop
and
lahf
dec
and
mov
js
je
cs
xor
mov
into
xor
mov
push
sbb
jge
cld
xor
loop
loopne
adc
jg
in
data16
xor
cs
insb
add
jp
incb
leave
sahf
icebp
jge
or
lret
in
mov
orl
push
rclb
sub
negb
and
test
roll
xchg
xchg
popa
iret
loope
icebp
ja
pusha
push
mov
jo
icebp
pushf
negb
icebp
sti
stos
pusha
mov
push
leave
iret
mov
sub
or
or
and
out
add
pop
js
jns
das
sarb
les
cmp
pop
mov
dec
addb
fildl
ret
gs
test
or
inc
jle
mov
sbb
add
push
loope
mov
leave
insb
and
rcl
xor
lret
adc
fidivl
mov
mov
aaa
sub
sub
cmp
and
add
jae
push
mov
xchg
inc
stos
imul
in
sub
and
in
and
cmc
pop
mov
push
pusha
xchg
lds
add
cmp
fs
mov
or
jmp
sub
test
sbb
fisubs
out
add
rcl
bsf
shrd
bt
mov
cmp
jmp
push
call
sub
inc
gs
jb
jns
arpl
add
add
jae
gs
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
add
jb
je
add
add
gs
dec
bound
arpl
pushf
pushf
lea
je
pusha
jmp
push
loop
sbb
addr16
loopne
and
sub
push
sub
addr16
scas
fidivrl
pop
ss
ffree
sub
jns
cmp
ljmp
push
mov
pop
out
mov
ret
or
xchg
xchg
ja
lock
mov
or
gs
int
shrl
aad
push
sub
jle
into
test
cmp
es
xchg
pop
imul
mov
je
movsb
ret
sete
mov
iret
sarl
inc
sub
sub
in
adc
leave
and
push
cmp
cmp
add
push
je
jb
inc
outsl
arpl
repz
push
call
icebp
jg
pop
jmp
xchg
shld
lea
stc
bt
clc
mov
test
pushf
cmc
lea
jbe
push
call
add
inc
jb
popa
je
push
arpl
outsb
dec
outsb
imul
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
lret
clc
movsbw
lea
mov
test
jb
cmc
clc
cmpb
push
lea
jne
shld
dec
bts
dec
sub
stc
aas
shl
mov
ror
bt
ror
dec
add
not
adc
clc
inc
mov
pushf
test
pushf
jmp
add
ja
jbe
dec
jne
inc
insb
outsl
jae
add
add
je
jb
jb
je
arpl
push
arpl
outsb
add
mov
add
cwtl
pusha
mov
cmc
add
call
fsubs
test
pusha
clc
mov
push
dec
pop
mov
pop
fldlg2
loope
int3
or
inc
repz
cld
xorl
adc
pop
or
fisubrs
jne
xor
mov
fidivl
loopne
lret
jp
stos
push
pop
xor
out
xlat
xor
xchg
cli
sbb
in
dec
xchg
mov
xchg
xchg
out
add
mov
mov
push
or
mov
fmuls
cmp
in
xor
pop
mov
sbb
xor
or
and
adcb
pop
inc
mov
inc
shrl
pusha
inc
ficomps
sbb
pusha
and
xchg
cmp
xorl
and
xchg
xor
sbbb
jns
jae
mov
jecxz
xchg
xchg
stc
movsb
pop
add
fdivp
mov
cmp
in
test
or
or
test
aas
cmp
pusha
or
and
popf
arpl
cmp
mov
in
cltd
jo
popf
je
xchg
adc
add
mov
mov
fadds
lcall
and
pop
cmp
mov
outsl
adc
cld
sub
lret
xchg
dec
push
sarb
mov
in
out
xor
push
or
mov
int3
fidivrl
xchg
adc
imul
jae
or
int3
inc
fsubp
rolb
xchg
sahf
jno
mov
lds
mov
rorl
jb
pop
mov
test
jle
sbb
sbb
xchg
push
inc
add
cmp
and
inc
inc
daa
sahf
xor
xchg
mov
idivb
push
sbb
je
adc
sbb
nop
jnp
movsl
sub
pop
push
mov
xchg
mov
pop
fisubs
out
js
push
mov
add
aam
pushf
fcomp
sbb
add
mov
push
or
xor
and
mov
cmpb
mov
xchg
xor
mov
add
push
lahf
filds
sub
add
mov
pop
shl
pop
inc
addr16
xchg
aas
das
xor
es
xchg
pop
cmp
inc
movsb
xchg
cwtl
xor
loopne
ljmp
into
or
out
loope
or
mov
or
leave
divl
rcrl
sahf
or
mov
dec
stos
or
sub
mov
add
sub
adc
jno
adc
fistpll
xor
jmp
bound
or
int3
xor
add
in
mov
vminpd
cmp
loopne
popa
dec
push
rclb
cs
pusha
xchg
sub
fmull
pop
pusha
mov
cmc
adc
adc
jecxz
mov
sbb
and
sarb
mov
pop
inc
in
add
test
ret
sbb
data16
into
adc
inc
cmp
cmp
cmpsb
hlt
jb
rorb
xor
xchg
loope
jmp
pop
rorb
and
cmp
xchg
inc
mov
or
push
int3
cld
orl
enter
mov
addr16
jge
rorb
and
jle
leave
aad
test
in
and
or
testb
jl
xor
call
add
cmp
aas
sbb
push
push
mov
jae
pop
xor
andl
in
les
xchg
sub
inc
aaa
test
leave
adc
push
mov
pop
cmpl
mov
add
or
dec
push
shlb
mov
in
mov
lcall
adc
sbb
push
xlat
adc
cli
jge
xor
adc
xor
inc
loope
add
test
nop
sub
lds
jge
aas
xchg
xor
sbb
aad
pop
cmp
and
push
icebp
addb
or
jne
stos
sbb
fs
jnp
ja
sbbb
fstp
and
add
sbb
fadds
xchg
or
sub
cmp
mov
sub
sub
and
pop
dec
jae
neg
shr
and
sbb
mov
enter
add
popa
adc
cmp
xchg
ret
lock
inc
mov
stc
mov
inc
lods
ljmp
imul
or
ljmp
adc
sbb
dec
fs
dec
inc
xor
popf
fdivp
lods
jnp
sbb
adc
outsb
xchg
jne
cmp
sub
pop
add
inc
out
sbb
dec
nop
adc
jne
pop
movsl
jp
mov
ror
push
pop
loop
pop
es
cmp
lock
clc
bound
movsb
int3
jo
mov
jb
sub
dec
cli
orb
hlt
xchg
into
mov
js
mov
sub
mov
push
test
or
xchg
ffreep
sbb
mov
scas
mov
lds
jecxz
clc
sarb
fadds
dec
ljmp
inc
leave
mov
or
inc
push
rcrb
and
inc
movsl
int3
or
inc
xchg
scas
shrb
dec
adcb
mov
pop
and
mov
adc
scas
mov
xor
inc
std
and
clc
adc
xlat
cmp
adc
pusha
outsl
add
js
aas
pop
div
imul
es
xchg
pop
mov
out
cmp
xchg
scas
cltd
imul
out
cmp
and
or
pop
mov
xchg
pop
std
mov
mov
or
mov
sbb
xchg
xchg
jo
bound
or
adc
mov
adcl
pop
mov
js
jp
jo
add
xchg
lret
les
xor
xchg
xchg
add
scas
popf
xchg
sbb
ljmp
dec
or
out
pop
sbb
sub
xchg
in
sbb
add
aam
mov
jns
xchg
mov
addr16
pop
add
and
adc
rolb
test
add
ficompl
push
cmp
imul
adc
add
lea
cmp
xor
or
inc
mov
lret
das
test
aas
popa
cmpsl
mov
test
mov
push
or
out
ja
and
cmp
mov
loopne
cwtl
pushf
push
add
xchg
fmul
and
xor
js
sti
pusha
sub
sub
mov
int3
daa
cwtl
test
data16
fldl
arpl
mov
add
stos
sub
xor
into
adc
mov
inc
cwtl
pop
adc
adc
or
jl
add
inc
leave
mov
sbb
pop
adc
iret
mov
sbb
xor
sbb
cmpsb
inc
movsb
lret
push
adc
cmp
fldenv
cmp
push
and
xchg
jo
sbb
nop
push
pop
sub
movsb
addb
and
or
cmp
cmp
orl
das
push
xchg
push
addr16
mov
and
pop
cmp
jmp
test
sbb
lcall
mov
or
pop
push
cmp
test
xchg
adc
lret
adc
das
xchg
xchg
mov
icebp
xor
cmp
and
xor
xlat
or
fcomi
popa
mov
mov
adc
incb
test
mov
cmp
in
scas
or
sarb
xchg
jecxz
les
xor
popa
clc
testl
xor
fnstenv
jg
adc
xchg
push
mov
pushf
push
xchg
in
xchg
loop
sub
add
pop
sti
add
inc
add
mov
adc
xchg
add
add
add
add
mov
test
adc
notl
cld
aam
or
pop
xchg
mov
or
lahf
xor
and
add
add
xchg
or
or
add
adc
sbbb
xchg
add
pop
inc
or
orb
or
pop
xchg
push
adc
adc
nop
push
cli
mov
add
add
in
add
sbb
int3
sbb
or
sub
sub
and
cltd
mov
and
add
sub
add
bound
adc
loopne
and
pop
mov
ficoml
xchg
test
mov
enter
out
mov
and
sbb
adc
add
sbb
andb
push
daa
sbb
sbb
decl
test
aaa
xchg
mov
add
fs
or
mov
add
push
adc
push
push
push
inc
lea
nop
gs
add
add
mov
xor
jb
xor
and
les
sub
inc
cltd
mov
push
xchg
inc
adc
addb
push
dec
pushf
test
sbbb
sbbb
add
xor
mov
jbe
dec
adc
mov
xchg
xchg
push
add
cwtl
add
pop
inc
add
jb
add
and
lret
lahf
push
cmp
cmp
mov
rol
je
push
js
pusha
xchg
pop
and
fsubs
pop
jp
sbb
pop
jb
mov
das
jmp
dec
mov
xchg
add
shrb
jne
pop
xchg
sbb
xchg
sbb
dec
pop
shl
mull
mov
push
xchg
add
cmp
add
nop
pop
push
sbb
loopne
or
rclb
dec
out
inc
xchg
fimuls
enter
mov
cmp
jmp
popa
in
or
mov
push
or
push
adcl
add
xlat
ret
loop
mov
aam
add
cmp
adc
push
or
pop
das
fldenv
ficomps
fxch
add
inc
loope
test
pop
test
or
adc
cmp
test
xor
daa
aad
or
xor
adc
inc
push
cmp
cmp
sbb
xchg
imul
adc
add
mov
mov
sti
incb
int3
and
add
ljmp
and
sub
imul
pop
jae
cmp
pop
mov
mov
in
leave
xchg
xchg
in
aad
pop
or
xchg
sub
stos
sbb
xor
stos
add
pop
mov
aas
stos
mov
pop
enter
or
mov
mov
sbb
test
repz
or
inc
inc
repnz
adc
pop
inc
mov
jmp
or
and
ret
enter
inc
jmp
xchg
daa
out
adcl
mov
sbb
push
sbb
imul
or
movl
popf
lahf
pop
or
mov
js
or
xchg
jge
cwtl
cmp
scas
and
fs
aaa
mov
lahf
les
pop
cltd
dec
push
pop
cmp
push
test
mov
mov
sub
rorl
sbb
dec
adcl
and
int
xchg
mov
xor
stc
fidivrs
jb
mov
mov
cmp
mov
push
das
outsl
sub
aas
xor
adc
inc
sbb
addl
or
and
mov
aam
or
aaa
or
push
push
movsl
fdivs
xchg
or
inc
pop
xchg
jge
mov
xchg
ds
cwtl
daa
jge
lods
addb
cmpsb
mov
inc
shrb
int3
mov
addr16
movsb
cmp
or
mov
repnz
mov
std
stos
xchg
test
mov
pop
adc
and
mov
ljmp
adc
test
or
add
ds
lret
cltd
push
mov
cmpl
jg
shl
dec
aam
jmp
cmpsl
fildll
mov
pop
pusha
rcrl
cmp
ffreep
sbb
adc
cmp
xchg
ficomps
jl
add
or
cmp
lods
sbb
xchg
or
pop
loope
fidivrs
mov
test
mov
bound
xor
out
and
adc
mov
test
rclb
daa
cmpsl
inc
dec
mov
and
pushf
inc
or
cltd
ljmp
addb
shll
inc
or
movsl
test
or
lds
sbb
or
xor
and
icebp
dec
xchg
addb
adcb
inc
cwtl
imul
daa
mov
movsb
sarb
aas
xchg
cmp
fldl
lahf
sub
add
and
clc
pop
or
sbb
adc
xchg
icebp
ret
pop
and
push
shr
xchg
jnp
bound
dec
pop
inc
dec
jae
imul
or
xchg
mov
sbb
add
mov
sbb
fnsave
ret
add
cmp
xchg
or
lcall
jae
insb
cwtl
iret
nop
and
testb
imul
add
leave
out
xchg
js
mov
xchg
ljmp
cmp
in
js
leave
dec
mov
orb
dec
pop
js
in
add
mov
and
mov
or
jge
lock
xor
dec
xchg
push
jecxz
and
sbbl
and
pushf
xchg
or
rolb
out
sbb
nop
js
mov
mov
iret
in
mov
mov
mov
es
cmp
or
mov
jmp
xor
fcmove
movsb
push
je
xor
insb
mov
roll
sahf
andb
cltd
xor
jb
lret
sbb
sbb
cmp
arpl
sub
bnd
adcl
sbb
xchg
cltd
mov
pop
or
xchg
cmp
ljmp
mov
stos
cli
xchg
cmp
cmc
sbb
aas
out
out
clc
jg
or
and
fcomps
lods
in
cld
shlb
sbb
mov
fwait
ret
sbb
stos
dec
mov
dec
test
enter
icebp
adc
add
std
or
pop
scas
push
in
sahf
loop
mov
xor
sbb
push
pop
movsb
pop
fisubs
add
add
and
jecxz
mov
lret
and
mov
in
sbb
and
inc
cmpsl
addb
sbb
aas
push
cwtl
adc
pushf
or
sub
sbb
xchg
xchg
adc
inc
lcall
and
xlat
or
mov
push
pop
addr16
sub
jg
sbb
push
mov
pop
sbb
ror
mov
js
aad
mov
sbb
push
lea
or
dec
adc
adc
jno
sahf
push
fistl
jp
add
jne
push
or
into
outsl
aad
mov
ljmp
inc
lds
fcmovnb
scas
cmp
xor
add
sbb
pop
es
pop
jb
push
inc
mov
ds
adc
mov
xor
cmp
sub
mov
add
push
jno
and
cmp
mov
mov
bound
cmp
cltd
pop
sbb
cmp
lahf
add
pop
repz
jl
bound
icebp
sub
pusha
adc
inc
fs
xor
push
loope
cmp
sub
jns
arpl
xchg
push
mov
and
orb
sbb
xor
imul
test
adc
leave
or
int3
sbb
aaa
ss
test
fwait
int3
add
cmp
les
sbb
sub
cmpsl
fcomps
repz
sbb
adc
sbb
push
add
or
xchg
adc
or
insl
int
or
dec
mov
std
subl
jle
cmp
inc
lret
lret
xchg
pop
mov
adc
lahf
mov
sbb
loope
repz
nop
icebp
loope
imull
xchg
and
xor
cmp
add
subb
cmp
cmp
xchg
mov
lahf
mov
std
loopne
enter
push
dec
inc
aas
sbb
cmpb
add
lahf
test
loope
aad
imul
in
shll
loop
ja
into
aas
or
sbb
jle
sub
bound
stos
push
shl
movsl
adc
aam
add
in
inc
xor
rcrb
das
adc
int3
mov
ficoms
hlt
xor
add
push
lret
cmpsl
jno
and
push
jp
xor
and
jae
xchg
or
xchg
push
and
sbb
movsl
dec
cmpl
inc
mov
inc
cmp
or
xchg
inc
stos
std
xor
insl
jecxz
int3
insb
arpl
mov
bound
inc
push
jp
lock
test
test
lods
xor
mov
mov
dec
cmc
cmp
ret
inc
rcr
int3
inc
push
cmc
sub
rorb
lret
pushf
or
loope
flds
or
scas
xchg
repz
repz
imul
pop
jb
inc
aas
and
lds
scas
mov
popa
jo
or
pop
mov
push
fnstcw
daa
push
fbld
in
movsb
add
pop
sbb
add
mov
outsb
imul
movsb
out
cmpsb
xor
test
pop
sub
mov
in
sbb
add
xchg
movsl
cmp
mov
push
les
mov
jle
adc
or
xchg
loope
test
sbb
pop
or
or
xchg
push
imul
out
les
test
dec
push
data16
and
or
or
enter
mov
leave
sub
int3
pop
and
cmp
rcll
xchg
and
ret
or
and
adcb
ja
add
in
fwait
test
sub
add
in
test
cmp
pop
and
mov
das
mov
ss
addl
popf
add
adc
mov
sbb
lcall
andb
dec
cmp
mov
xorl
mov
fisubl
test
loop
sub
pop
pop
sbb
push
or
repz
adc
iret
cmp
out
and
cmp
or
add
fldenv
lds
sbb
dec
fs
ja
jb
pop
inc
iret
std
dec
sbb
insb
ss
jecxz
adc
cmp
lcall
cmpsb
lret
outsb
or
pop
inc
inc
xlat
push
data16
out
lret
fs
movsb
jae
aad
divl
add
cwtl
movsl
sbb
mov
test
incb
in
gs
adc
inc
sub
sbb
cmp
fistps
fimuls
sbb
adc
sub
mov
mov
stos
inc
xchg
jne
mov
pop
or
cmp
mov
jg
cld
das
jns
inc
sub
sbb
sbb
mov
push
push
xor
ficomps
pusha
ret
ret
sahf
push
sbb
stos
aas
mov
xor
pop
xor
call
out
dec
mov
inc
push
mov
enter
xchg
shl
add
popf
jl
lock
mov
mov
jl
dec
sbb
rorl
fcoms
lds
sbb
outsl
imul
add
shll
cmp
mov
pop
mov
and
inc
pop
mov
pop
cmpl
push
insl
out
jp
mov
dec
inc
in
and
mov
push
mov
push
jge
xor
icebp
pop
dec
xor
ja
jmp
jno
jecxz
push
adc
pop
or
lock
and
scas
push
or
fs
sbbl
mov
pop
xchg
icebp
adc
lret
sbb
pop
clc
repnz
push
aas
adc
mov
je
inc
jne
adc
pop
mov
arpl
pop
pop
sub
sub
scas
jo
fwait
loope
jecxz
pop
or
push
pushf
mov
mov
in
push
lret
sub
dec
push
cwtl
sbb
jno
mov
imul
movsb
fld
dec
popa
or
mov
mov
nop
fcoml
pop
mov
jle
in
push
in
scas
negl
or
fistps
loop
stos
mov
enter
insl
leave
cmp
lret
jne
xor
push
cmpsb
in
imul
sbb
outsb
shl
or
xor
dec
pop
ja
arpl
outsb
xchg
inc
cltd
mov
out
fs
xor
xchg
cmpsb
arpl
fs
mov
ljmp
ljmp
cwtl
adc
pop
jb
or
ds
xchg
jp
in
xchg
sbb
xchg
insb
or
jg
xchg
or
push
imul
mov
rorb
or
icebp
fcoml
test
or
mov
jg
add
ja
push
mov
rolb
add
dec
xchg
or
cmp
loope
mov
or
pop
idivb
sub
inc
mov
push
mov
jnp
or
movsl
cwtl
cmp
mov
into
and
lret
dec
mov
rol
mov
outsl
adc
sbb
fcmovnb
xchg
in
sub
mov
mov
push
cwtl
std
pop
es
fdiv
mov
xor
cmp
cmp
loope
test
push
pop
lahf
dec
mov
mov
cltd
ret
pushf
mov
pop
push
fucom
pop
js
sbb
pop
ficompl
mov
pop
jns
jns
mov
add
sbb
mov
out
push
sub
inc
test
repz
pop
aas
rcrb
cli
lret
mov
mov
icebp
inc
sub
inc
faddl
in
xor
adc
add
fidivrs
jbe
aas
add
fstp
pop
stc
xorl
push
pop
call
pop
inc
fidivs
or
iret
out
ret
sbb
cwtl
in
push
or
lock
xlat
pop
shrl
dec
pop
aam
pop
das
jns
xchg
fs
stc
xchg
int
inc
mov
inc
aad
pop
sub
cmp
bound
les
xchg
or
std
or
or
xor
ljmp
sahf
pop
data16
aam
jmp
xchg
mov
mov
sub
hlt
adc
in
xchg
int3
testb
rorl
or
ds
sbb
cwtl
push
add
cmp
mov
adcl
add
mov
jl
clc
sarl
cmpsl
cltd
rcl
and
xchg
inc
xor
jg
aas
faddp
mov
xchg
sub
jno
orb
in
sbb
fstps
nop
sbb
jecxz
cmp
notb
push
jnp
or
and
mov
jne
test
xchg
loope
pop
jnp
popa
sbb
adc
cmp
push
dec
test
cltd
push
add
dec
xchg
xor
stc
sahf
hlt
xor
pop
jg
in
sbbb
or
aaa
push
push
inc
fdivr
int3
xor
mov
in
test
sbb
sahf
push
dec
mov
mov
aas
jmp
add
xor
out
sbb
movsb
sbb
mov
xchg
push
mov
out
fsub
add
or
ljmp
leave
imul
mov
out
arpl
and
or
add
push
mov
and
les
add
mov
add
push
and
sub
sbb
movsb
and
in
in
jmp
inc
inc
dec
or
stos
fdiv
or
mov
leave
aad
sub
in
les
push
and
mov
inc
sbb
or
push
or
mov
sub
mov
or
int
jl
fsubs
rcll
jbe
inc
pop
mov
ret
cs
repnz
sub
add
xchg
lret
aad
mov
adc
add
or
enter
pushf
sbb
mov
cmp
fcoml
mov
out
push
or
fnstenv
cmp
cs
mov
jns
xor
sbb
jb
ljmp
add
or
repnz
lahf
lock
pop
pusha
or
lahf
dec
push
in
mov
mov
pushf
mov
push
lock
cmp
mov
inc
mov
jge
pop
test
stos
inc
and
dec
cmpsl
or
dec
aas
xchg
xchg
insl
lods
mov
or
xchg
stos
push
mov
mov
xchg
mov
push
xchg
mov
sbb
pop
nop
cwtl
mov
jmp
ja
cmp
and
inc
mov
push
and
test
loopne
stc
ss
outsl
sbb
lahf
test
and
cli
xchg
mov
addl
mov
inc
xlat
scas
jle
lock
outsb
es
adc
cmp
es
mov
sbb
aam
adc
ja
les
and
cs
fldcw
sub
inc
in
adc
lea
add
enter
sbb
fsubl
pop
sbb
cmpsl
add
fstpt
adc
add
xchg
test
add
aas
or
sbb
pop
cmpsl
pop
lahf
dec
and
movsl
inc
imul
icebp
mov
adc
mov
inc
sub
jns
out
in
rclb
test
mov
adc
sti
lods
insb
imul
mov
and
or
pop
lret
dec
sub
ljmp
adc
rcrb
test
sbb
xchg
mov
aas
sbb
push
fldln2
xchg
fdivrs
sbb
xchg
ret
cmpsb
cwtl
loope
cli
and
or
int3
inc
xor
cmp
int3
mov
cmp
insb
aas
pmulhw
pusha
mov
or
aaa
arpl
stos
inc
dec
test
lock
addr16
adc
mov
popa
popf
sub
jo
mulb
rolb
je
add
frstor
ja
push
sub
nop
cltd
movsb
es
sub
push
lahf
leave
sbb
adc
cmp
and
cwtl
lcall
push
add
jp
adc
ret
jecxz
movsb
dec
stos
mov
push
stos
xchg
sti
add
sbb
js
xor
lcall
dec
int3
ljmp
and
add
mov
add
mov
dec
test
mov
ds
pop
sub
mov
repz
int
and
adc
mov
cwtl
repz
shl
aaa
xchg
mov
es
loope
or
leave
push
ds
push
cwtl
dec
add
push
and
xchg
add
shlb
sbb
bnd
xor
add
mov
jae
lea
add
mov
insb
cwtl
addr16
inc
mov
dec
add
cmp
mov
icebp
sub
into
in
mov
adcl
cmp
pusha
adc
add
stos
cmp
sbb
cltd
rcr
adc
fistps
mov
jecxz
cmp
mov
xor
pop
mov
cmp
mov
mov
jg
sahf
es
cmp
or
xor
out
fisubrs
arpl
jae
pop
push
lods
pop
ret
xchg
add
add
sbb
fnsave
sub
cmpsb
jb
in
and
dec
pushf
sub
stos
cs
or
push
arpl
xor
cmp
jne
pop
leave
fwait
je
orb
aas
sub
ja
orb
dec
cli
popw
push
or
or
test
push
mov
cld
ficomps
repz
and
sub
leave
icebp
add
cmp
xchg
hlt
popa
xor
pop
jle
lods
xchg
sahf
shr
or
idivl
xor
dec
fildl
mov
cs
and
int
test
adc
adc
jns
rolb
cmp
cli
insl
mov
or
ljmp
bound
xchg
mov
jmp
xchg
jp
fdivl
dec
lret
jecxz
and
inc
orl
adc
cwtl
ja
pop
mov
xor
sbb
pop
push
gs
stc
fmulp
sub
pop
subl
mov
loop
push
jle
inc
shll
jge
cmp
pop
int3
add
insl
inc
inc
jle
xchg
dec
cmp
jno
mov
and
add
dec
xchg
fmul
inc
sbb
icebp
cmp
add
pop
insl
cmp
or
dec
xchg
and
popf
das
ja
test
xchg
dec
cs
mov
mov
loop
pop
mov
jmp
sarb
sarl
or
cmp
lahf
lock
in
clc
pop
rcrb
mov
dec
int3
push
fwait
mov
lcall
pop
test
sub
inc
xchg
or
fildl
fstpt
jno
add
js
dec
and
sbb
jae
xchg
into
xor
aas
mov
jmp
aas
xchg
sub
or
pop
jge
and
fbstp
sub
or
pop
mov
lods
cmp
ret
push
lahf
loop
or
mov
mov
lahf
lods
or
sbb
in
and
cltd
inc
sbb
mov
arpl
sub
or
outsl
out
sub
cmp
test
jnp
pop
and
popf
add
push
mov
pop
add
loop
jno
out
pop
aam
mov
imul
lods
jns
fimuls
or
mov
add
mov
xchg
into
out
xchg
sbb
popa
ljmp
leave
pop
loope
pop
ret
jmp
ret
insl
cmp
or
mov
adc
imul
pop
mov
adc
push
add
cltd
icebp
push
sbb
adc
sub
add
mov
and
adc
pop
xor
add
xchg
dec
stos
mov
in
mov
jne
mov
add
adc
loop
imul
inc
sub
rcl
jg
xchg
ret
sub
mov
rcrl
fs
inc
push
or
xlat
or
add
mov
insl
push
dec
or
in
push
cmpsl
iret
mov
jle
pop
popa
jne
inc
xchg
push
xor
insb
mov
mov
push
cmc
andb
bound
pop
and
push
mov
xchg
fwait
sbb
or
jle
push
out
ja
adc
adc
jg
mov
and
xchg
cmc
sahf
imul
rol
ds
bound
movaps
imul
add
aaa
bound
addb
stos
adc
aas
out
sub
scas
or
fisttps
bound
dec
clc
fwait
adcl
mov
fdivp
or
lods
test
jmp
adc
cmp
rclb
imul
sbb
movsb
mov
or
lret
push
push
test
aaa
stc
inc
insb
xor
nop
fbld
pop
dec
cltd
push
fidivs
sub
bound
xlat
push
aas
in
add
add
into
jg
sub
pop
mov
pop
test
std
xchg
loope
sbb
bound
jle
add
jmp
out
push
xor
fsubs
jle
cltd
imul
jl
sahf
xor
idiv
movsb
adc
cld
lahf
nop
or
out
jmp
and
push
aas
and
xor
adc
sub
das
bound
data16
pusha
jg
xchg
aas
xchg
out
movsb
out
adc
push
bound
xchg
pop
inc
loope
mov
lret
in
xor
jl
pusha
stos
sahf
mov
sub
push
pop
pop
mov
add
loopne
pop
inc
or
push
sar
jge
bound
mov
lods
cmp
pop
lret
cmp
inc
lock
push
push
jl
sub
insb
and
add
add
xchg
clc
dec
call
bound
aas
stc
xlat
loope
and
mov
add
outsl
dec
and
ffreep
add
mov
pushf
negl
mov
call
and
aad
test
cli
pusha
out
pusha
mov
mov
sub
sahf
test
bound
lea
xchg
out
lods
loope
cli
jg
and
mov
bound
inc
pushf
xchg
sub
sbb
jo
in
sahf
mov
or
mov
pop
shl
mov
pop
bnd
bound
mov
xor
aaa
lds
cmpl
push
push
bound
xor
shl
jmp
cwtl
sarl
outsl
sub
push
out
pop
es
mov
loop
lods
sbb
push
andl
daa
repnz
xor
and
imul
cmc
jg
adc
jo
pop
push
cmp
mov
arpl
stos
lahf
pop
sahf
add
or
addl
mov
mov
push
imul
adc
adc
sub
nop
push
outsl
add
mov
pop
and
cmp
decb
bound
ljmp
sub
add
add
or
jmp
popf
xor
and
xor
adc
xchg
adc
outsb
bound
loop
adc
mov
or
pop
pop
push
add
inc
mov
adc
or
sub
pop
jo
jle
jno
lea
bound
add
loopne,pt
jmp
push
adc
in
xor
sub
add
fsts
in
das
sti
or
bound
push
es
mov
sub
cltd
popf
xor
or
dec
add
adc
jmp
mov
add
jg
inc
sub
int3
jae
mov
dec
ret
and
add
mov
lods
jo
in
pusha
sti
ret
push
mov
push
cmpsl
sub
dec
roll
jp
lods
jg
js
jge
dec
fs
sub
movsb
ret
xor
xor
lcall
loope
inc
push
fcmovb
xchg
mov
pop
add
test
fs
xchg
xlat
sahf
push
loopne
jno
cwtl
rcll
and
mov
adc
jg
mov
mov
sbb
sarb
out
and
add
arpl
sub
testl
lret
jbe
cmp
or
or
add
mov
and
shr
fbld
aad
sbb
in
inc
rolb
in
out
inc
mov
leave
cmp
sbb
adc
mov
pop
loope
jb
mov
add
add
popa
inc
add
sbb
push
mov
out
push
aas
mov
add
insl
mov
pop
or
xchg
cli
arpl
jnp
jno
mov
mulb
mov
sahf
push
sbb
loopne
nop
push
lods
jle
push
cmpsb
out
xor
push
test
pusha
or
into
adc
and
sarl
jmp
jl
dec
jecxz
mov
push
lcall
add
xchg
pop
sar
push
sbb
add
out
mov
loope
push
loopne
fnstenv
mov
mov
mov
add
sbb
stos
roll
sbb
add
dec
mov
ret
pop
imul
mov
cli
ja
pop
add
das
pusha
iret
mov
lahf
push
out
nop
adc
adc
add
mov
in
loope
inc
outsb
orl
out
pop
add
cs
mov
add
or
mov
inc
lcall
aam
cmp
stos
daa
rorl
cmpsl
xchg
add
pop
xor
out
jns
push
loop
adc
mul
js
mov
add
xor
mov
mov
pusha
cld
push
mov
movsb
inc
add
sub
leave
push
jns
dec
xchg
adc
or
hlt
loope
dec
in
testl
xor
jne
repnz
adc
pop
test
and
sub
scas
cmp
out
add
outsl
mov
mov
jb
inc
int
jb
cmp
mov
stos
and
test
mov
cmc
adc
add
aad
mov
lods
outsl
sub
xchg
xchg
cmpsb
frstor
cwtl
jle
lcall
add
push
jecxz
add
and
decb
push
cltd
push
pop
inc
cld
and
inc
mov
shrl
int
dec
and
outsb
repz
pop
xchg
inc
stc
jbe
mov
add
or
sbb
lret
dec
add
addb
int3
push
icebp
fwait
push
push
or
sub
scas
add
jecxz
cltd
sub
cmp
add
popa
mov
and
je
xchg
insl
cmp
cmp
add
xor
fistpl
aam
jmp
xor
xchg
pusha
rorb
and
ds
xor
mov
pusha
inc
cmp
sbb
jle
add
inc
xchg
add
mov
sbb
icebp
xlat
pop
je
or
cmpsl
or
hlt
sti
loopne
pop
arpl
pusha
xchg
add
stos
loopne
repnz
sub
cs
sahf
daa
js
pop
dec
arpl
inc
mov
dec
add
sbb
ljmp
push
xchg
sarb
ficomps
and
sub
imul
xchg
add
fwait
jnp
mov
adc
stos
fimull
das
les
std
call
pushf
iret
sti
add
cmpsb
aaa
xchg
adc
cmp
add
sub
sarb
inc
and
out
pushf
dec
or
lock
shlb
dec
add
scas
jns
arpl
stc
pop
adc
jl
xchg
xchg
shll
shlb
push
arpl
and
mov
adc
xchg
jge
and
mov
mov
and
xor
jno
loop
pop
aas
xchg
mulb
cmp
lea
dec
loop
adcb
add
bound
xor
dec
add
push
adc
ret
enter
imul
outsl
xchg
mov
repz
dec
add
push
cmp
adcl
xor
insl
xchg
sub
add
call
mov
mov
rcrb
dec
lods
add
pusha
bound
dec
and
lret
shlb
fistpl
outsb
scas
mov
sbb
lret
sub
jp
aaa
mov
fmull
xlat
loope
dec
sbb
inc
addr16
xchg
dec
xor
or
test
jl
ja
imul
cmp
outsl
sbb
fs
add
sub
jmp
jnp
pop
and
loope
test
in
aam
in
pop
and
and
sbb
mov
outsb
jbe
push
test
imul
outsl
insl
cmp
fiaddl
mov
lcall
aaa
lds
cmc
out
in
inc
stc
testl
xchg
cltd
add
jnp
out
movsb
insl
lods
sub
jge
in
test
clc
aad
movsl
or
loopne
mov
add
mov
cs
xor
fdivrl
js
cwtl
loope
out
cltd
mov
push
jbe
sub
js
jnp
pop
outsb
movsb
add
mov
add
xchg
xor
or
je
ja
shlb
fs
aad
lret
rorl
std
fwait
add
pop
pop
and
insb
pop
adc
and
mov
mov
adc
jp
push
jbe
or
xchg
mov
sub
push
dec
mov
and
push
ds
pushf
sbb
hlt
fiadds
push
dec
cmpsl
and
rorl
jl
add
xchg
into
popa
mov
pop
icebp
pushf
loope
shrl
cmp
adc
and
dec
add
lcall
stc
cmpl
or
cwtl
push
sbb
das
add
add
mov
ret
out
hlt
and
std
xor
mov
fdivs
js
xlat
mov
dec
inc
fwait
negl
add
ja
pop
add
lret
out
sub
pusha
cli
jp
add
scas
add
mov
inc
aad
mov
cltd
inc
adc
icebp
mov
outsb
xchg
sbb
dec
adc
inc
rorl
jae
mov
loope
push
or
cmp
mov
or
xchg
aaa
add
leave
sub
stos
mov
and
fdivl
add
add
or
jne
xor
sbb
stos
ret
pop
fiaddl
or
subl
call
mov
or
insb
jle
jge
and
scas
loop
fstpl
fiadds
inc
fdivrs
mov
dec
out
xor
sahf
leave
vprotq
or
add
mov
popa
pusha
mov
adc
into
inc
jg
sbb
outsb
sbb
out
or
add
mov
loopne
stos
adc
rcrl
lret
mov
add
mov
xchg
bound
insb
adc
mov
pushaw
movb
test
cmpsb
or
mov
sbb
pop
jg
inc
jmp
jo
mov
and
ja
add
dec
sbb
decl
sub
add
int3
loop
and
fistps
out
mov
push
pusha
mov
in
loopne
inc
mov
cs
push
popf
loopne
pop
jb
sub
ret
pop
xchg
repnz
cltd
loopne
stos
aaa
push
cld
cmp
lcall
push
std
add
lahf
push
movsl
fld1
add
lea
into
addb
mov
sub
push
lahf
imul
pop
mov
add
pop
icebp
inc
add
movsb
fiadds
adc
cli
add
ja
daa
adc
jg
dec
mov
dec
inc
xor
in
lahf
inc
jecxz
sbb
loope
clc
addb
mov
fucom
cmp
sub
mov
adc
imul
pop
adc
daa
sbb
div
sbb
gs
inc
add
rcll
jge
rcrb
xor
call
sbb
mov
mov
iret
cltd
ss
je
loop
add
sarl
aad
sbb
xchg
daa
lods
dec
and
mov
add
push
pusha
sub
mov
mov
mov
rcl
gs
cmp
xchg
mov
mov
xor
inc
lret
pop
fisttpll
add
mov
jmp
shr
sub
and
push
movl
or
movsl
add
pop
into
adc
loope
nop
pop
xor
dec
ljmp
clc
jno
fs
mov
cmp
push
adc
mov
cmpsl
inc
dec
add
subl
out
dec
out
iret
mov
es
cwtl
push
pop
add
xor
add
dec
pop
dec
add
lcall
pusha
pop
inc
push
nop
add
lods
divb
push
jl
pushf
lret
add
sbb
mov
pop
and
cmc
inc
test
inc
popf
push
push
sbb
sbb
das
out
mov
js
jp
xor
loopne
dec
adcb
jp
fmull
cs
sub
fwait
or
add
les
sub
or
pop
out
movsl
jb
aas
add
push
fdivrs
add
push
inc
cwtl
enter
fiadds
sub
pop
mov
sbb
add
cs
loope
push
iret
mov
fsubp
cmpsb
out
inc
and
add
push
xchg
popf
push
add
cli
call
rcrb
push
or
rcll
sub
push
dec
lock
call
loope
loope
fidivs
push
insl
imul
push
dec
xchg
jbe
jmp
incl
add
mov
ds
adc
dec
or
pusha
push
ja
or
push
cs
sub
arpl
and
inc
lea
and
push
fldcw
repz
test
jae
and
lcall
mov
xchg
imul
inc
seta
out
pop
add
sbb
divl
scas
lock
add
scas
mov
sarl
pop
repz
cwtl
lea
cmpsl
out
xor
movsb
and
lcall
cld
and
xchg
mov
jecxz
cli
faddl
cmpsb
popa
call
lret
lahf
xchg
pop
in
mov
stos
add
lea
xchg
cmpsl
jle
pusha
add
adc
xor
rcrb
adc
mov
xchg
add
pop
popf
je
sub
jnp
clc
mov
mov
add
das
inc
and
lds
add
pop
data16
sbb
test
sbb
and
pusha
or
pop
or
popf
add
repz
add
jle
stos
sub
dec
sar
cmpsl
loope
xchg
lods
and
repnz
push
adc
pop
push
fmul
andl
jno
dec
jne
xor
and
fcomps
sbb
inc
test
daa
or
outsb
xchg
pop
add
mov
neg
lcall
call
das
in
inc
add
mov
mov
sbb
inc
jns
push
cmpsb
call
xchg
or
jae
xlat
pusha
popa
pop
loop
cmp
jecxz
enter
ljmp
rcrb
loope
popa
out
cmp
outsb
xchg
add
pusha
sar
pusha
shlb
adc
loopne
pop
push
popf
xor
cmp
mov
lcall
fstps
xchg
or
sub
divb
movsb
cltd
aam
loopne
or
push
mov
xlat
popf
incb
mov
or
filds
add
mov
cmp
ja
xlat
sbb
leave
and
stos
fcmovu
push
cltd
push
push
xchg
in
jmp
jge
enter
xlat
fs
adc
or
ss
add
pop
mov
pop
lcall
lea
pusha
sub
into
movsb
popa
adc
daa
jno
inc
cmpsb
add
lods
jmp
pushf
loopne
out
mov
add
in
imul
stos
aam
pop
add
clc
push
out
fdiv
es
mov
loopne
mov
mov
dec
repnz
jle
mov
jecxz
add
lods
and
pop
sarb
stos
rcl
add
sbb
jo
sub
bound
adc
std
add
xchg
into
mov
jecxz
sbb
cmpsb
nop
test
addl
inc
or
ja
fwait
mov
fbld
xchg
mov
sbb
pusha
xor
add
loopne
adc
push
and
cmp
scas
push
out
and
mov
sbb
int3
bound
cld
sbb
lods
lea
loope
adc
add
lds
lret
fs
aaa
pop
stos
mov
test
push
dec
or
or
clc
add
or
dec
cmp
out
sbb
add
out
aam
jle
out
mov
sti
test
fdivr
loopne
cwtl
fcompl
and
leavew
test
cmpsb
fsubl
add
jp
mov
ret
sbb
call
in
or
incb
es
mov
fldln2
add
jnp
sbb
mov
mov
cmp
add
shrl
cmp
xchg
pop
add
mov
js
insb
aad
sbb
and
test
sub
addb
add
lcall
mov
adc
xor
mov
cld
stos
cmpsl
cli
aam
add
mov
loope
popa
cmp
sbb
pop
rolb
test
or
xor
sbbl
pop
xchg
test
xor
nop
add
cmp
cmp
cltd
les
dec
arpl
add
cmp
cmpsl
and
icebp
adc
fnstsw
add
xchg
out
push
mov
pusha
mov
scas
adc
incb
and
in
test
xchg
add
and
add
push
pushf
mov
fcoms
cmpsl
add
push
pop
dec
cltd
rcrb
add
scas
or
cmpl
jmp
mov
repnz
repz
nop
cmp
cld
sahf
add
imul
mov
xchg
test
mov
scas
loop
dec
pop
xchg
pusha
sbb
aaa
or
cwtl
mov
mov
mov
push
inc
jmp
add
add
xchg
mov
mov
in
lock
and
add
cmp
fcoms
xchg
xchg
mov
inc
sbb
or
jmp
fsts
adc
dec
cmc
sub
mov
into
xlat
loope
xchg
xchg
fucomi
jns
dec
inc
test
insl
add
mov
and
inc
pusha
jg
ret
lods
jecxz
je
adc
add
mov
bound
ret
xor
sbb
or
scas
xor
pusha
adc
mov
rolb
cmp
xchg
xchg
arpl
pop
mov
lret
out
sbb
mov
dec
lcall
cmpsb
push
adc
add
mov
outsl
xor
data16
add
xor
sar
adc
sub
or
mov
data16
fnsave
int
mov
mov
xchg
pop
movsl
mov
lcall
mov
imul
stos
add
sub
pop
add
cltd
js
sahf
call
jmp
mov
sub
cltd
push
inc
add
pop
cmp
add
inc
add
addb
cmp
push
cwtl
aad
adc
xor
add
dec
clc
xor
rcrb
or
aas
out
jge
es
scas
loope
rclb
pusha
sbb
mov
push
rcll
inc
mov
mulb
mov
call
sbb
aas
sbb
adc
pop
xor
jge
insb
xchg
roll
adc
cmpsb
int3
repnz
and
negb
addl
sbb
negl
jne
jo
jle
in
mov
sub
inc
or
add
pop
push
push
push
add
jmp
xor
mov
lret
bound
add
pop
mov
ret
jmp
pop
insl
lock
nop
adc
inc
push
mov
loop
int
sbbl
sar
or
cmpsb
subb
scas
lds
mov
adc
push
aam
add
add
leave
mov
les
fimuls
cmc
lcall
movsl
push
inc
test
arpl
jmp
push
add
mov
bound
or
xor
cmpsb
add
call
dec
inc
decb
adc
rcrl
mov
test
scas
lret
pusha
ljmp
or
lock
movsb
sub
js
addr16
adc
pop
lds
or
cs
outsb
mov
push
xchg
cli
cld
add
in
outsl
int3
mov
out
iret
mov
mov
add
lret
rorl
dec
sbb
inc
cld
std
testb
push
fwait
rol
lcall
push
or
mov
leave
hlt
sbb
gs
loope
lds
jmp
mov
ret
adc
inc
cmp
adc
inc
xor
mov
or
sti
add
adc
jge
xchg
loopne
add
sbb
and
hlt
mov
inc
mov
je
pop
add
cmp
pop
xor
push
sbb
ljmp
frndint
aaa
add
inc
mov
int
aas
push
fs
or
incl
add
outsb
cmp
stos
jo
xlat
pop
sbb
add
dec
and
mov
pusha
popf
lock
fldcw
sbb
das
stc
inc
inc
push
add
in
movsb
loop
ret
arpl
jae
cmp
cltd
adc
jmp
adc
shlb
jnp
dec
mov
lds
mov
lret
lcall
loopne
dec
cltd
mov
add
cmc
outsb
add
push
lcall
les
add
aaa
mul
add
push
pop
dec
add
mov
daa
enter
sbb
push
xlat
sbb
lcall
push
or
sbb
sti
adc
jb
sahf
mov
out
and
cmpsl
or
jmp
jle
fwait
sbb
mov
dec
in
mov
mov
add
in
mov
test
lret
inc
mov
testb
imul
cmp
mov
dec
stos
add
test
mov
int3
jge
jno
loope
push
cmpsl
sbb
mov
adc
push
rcrb
jbe
fwait
in
mov
dec
and
clc
jmp
push
mov
mov
popf
add
mov
jl
cmpsb
and
pop
daa
mov
xlat
imul
imulb
add
stos
repnz
pop
xor
or
leave
jbe
aam
into
mov
imul
add
sbb
js
filds
popf
mov
pop
clc
add
push
je
bnd
pusha
push
sbb
fldl
outsl
popl
stos
repz
out
stos
add
cs
mov
add
push
or
rolb
add
aad
jne
pop
enter
inc
movsb
sbb
cltd
mov
and
leave
addr16
or
sti
cwtl
inc
test
adc
jns
imul
xchg
leave
push
pop
pusha
outsb
mov
cltd
mov
ffree
loopne
and
test
sub
pop
cmp
pop
notl
sub
or
jae
sti
and
std
xchg
push
add
ds
add
jo
arpl
xor
pop
mov
fadds
je
ret
out
sbb
ds
fcomp
add
ja
cmp
jmp
icebp
sub
jge
dec
pushf
or
xor
dec
testb
clc
out
lcall
std
mov
pop
adc
adc
movsl
lods
mov
jno
dec
adc
outsb
pusha
jmp
in
adc
rolb
sbb
dec
cmp
pop
fwait
xor
and
mov
add
mov
pop
add
out
add
mov
and
lahf
loop
dec
pusha
rorl
xorb
add
movb
dec
add
push
imul
gs
movsb
dec
pop
test
and
cmp
adc
lds
mov
inc
into
pop
subl
xchg
and
and
mov
lret
subl
dec
or
in
sbb
sbb
into
imul
dec
add
push
fsubs
add
cmp
or
inc
pusha
fsubs
outsb
sub
testb
pop
hlt
cs
pop
loope
sbb
outsl
and
jl
scas
ret
add
ljmp
add
xor
movl
movsb
sub
inc
pop
in
sbb
cmp
mov
or
inc
in
rolb
add
xchg
rcll
scas
nop
filds
int
xchg
lcall
jmp
aas
fsub
addb
xor
popf
pop
gs
or
pop
add
divb
test
rcrb
add
bound
add
std
ret
loop
jecxz
xor
add
sub
test
nop
xchg
lock
mov
int3
lods
sbbb
popl
ds
mov
sahf
xchg
and
out
or
jecxz
dec
xchg
jg
push
inc
sbb
mov
add
add
add
sbb
mov
add
sbb
stos
xchg
es
ljmp
cltd
out
add
cmp
adcb
andl
jmp
je,pt
pop
pusha
ret
push
mov
idivb
test
mov
mov
or
movsl
push
data16
les
pop
and
pop
add
xchg
xlat
dec
jp
mov
jmp
mov
insb
orl
jae
test
push
out
push
inc
pusha
pusha
sbb
mov
pop
out
mov
mov
pop
xlat
fcomps
lcall
jbe
xchg
cltd
xchg
mov
out
out
xor
shrb
enter
int
clc
stos
cmpsl
hlt
sub
outsb
js
cmp
or
movsl
pop
adc
fisubl
or
adc
mov
nop
loop
dec
inc
mov
cmc
jmp
inc
cwtl
jg
add
xchg
inc
scas
pop
pusha
push
mov
orl
das
push
std
in
scas
cmc
lahf
add
cmp
add
inc
sbb
orb
adc
leave
sub
pop
push
add
iret
jne
imul
sbb
jo
jo
cld
lock
jl
fbstp
addl
movsl
add
icebp
mov
idivl
dec
daa
sti
add
psrlq
pop
sbb
mov
cltd
imul
lods
popa
sbb
sbb
loopne
jle
jl
addr16
cmpsl
add
cmp
pop
jg
add
and
ret
out
shl
sahf
popa
pop
jno
or
xor
inc
imul
add
scas
jbe
lahf
loopne
repnz
pusha
add
es
in
das
sbb
int
jo
mov
xor
xchg
aas
shlb
rcll
and
loope
mov
and
pushf
add
sbb
sbb
ljmp
outsl
add
stos
dec
shlb
sub
add
addl
jb
mov
push
push
pop
mov
add
jmp
movl
mov
mov
sbb
sahf
ror
addb
pop
adc
or
imul
popa
outsl
jns
mov
adc
fcmovnbe
mov
mov
push
xor
push
cs
stos
adc
mov
jb
test
and
xchg
mov
jl
add
inc
hlt
test
jge
sub
pop
data16
pop
test
and
fcomip
jno
or
call
sub
add
pop
add
mov
daa
mov
add
outsb
movaps
mov
loopne
fadds
leave
pop
ret
test
idivb
ror
ljmp
repz
push
mov
mov
lock
jb
in
xor
mov
pusha
test
imul
push
adc
cmp
lds
bound
cmp
push
faddl
or
in
imul
ret
add
sub
je
sbb
jl
mov
andb
jp
fcomip
cmc
lahf
or
sub
or
jl
mov
add
inc
and
adc
imul
cmovns
mov
lock
rclb
js
adc
dec
xchg
push
push
test
push
xchg
pop
add
popa
inc
pop
inc
or
fcom
sbb
rcrl
mov
sbb
sub
popa
push
or
inc
pop
push
adc
and
sbb
sbb
jecxz
inc
outsb
add
dec
das
sub
aam
hlt
pusha
pop
fs
xchg
lret
inc
adc
jnp
add
mov
pusha
leave
adc
adc
push
jecxz
aas
das
lahf
mov
sbb
add
xchg
and
pop
mov
sub
fiaddl
nop
add
or
pop
ret
jne
rcll
loopne
or
test
push
in
shlb
and
mov
outsb
sahf
inc
jecxz
jmp
les
sbb
or
xchg
in
adc
xor
add
adc
cmpsb
pop
add
xor
mov
and
outsl
dec
popa
testl
dec
arpl
mov
jno
pop
add
fstps
faddp
add
jnp
or
in
fldl
mov
jae
movsb
ret
lea
jo
mov
push
dec
loopne
xchg
push
xchg
sub
add
xor
mov
sbb
add
and
sbb
fdivrs
adc
mov
lcall
shll
add
push
mov
xlat
add
pop
pop
shlb
fs
or
negb
push
into
xchg
add
jle
imul
dec
sar
push
cmp
adc
sbb
add
cmc
mov
and
push
inc
pop
in
mov
sbb
jmp
dec
or
fldt
push
shlb
subl
js
and
rcrb
push
int3
loope
cmpl
inc
rcrb
frstor
pop
popa
pusha
sbb
cmovo
nop
jge
push
loopne
int3
xchg
shlb
pop
jbe
and
sbb
adc
xor
jge
xor
mov
mov
movsl
push
pusha
outsb
mov
testl
mov
lea
rorl
js
push
and
outsb
xchg
ret
stos
push
add
fildll
popf
lret
pop
mov
je
add
xor
aas
rcll
mov
or
fisubl
lret
adc
mov
push
test
push
mov
sbb
dec
gs
dec
adc
mov
add
jae
inc
inc
nop
aas
jl
mov
cmc
ja
add
dec
cmc
pop
sbbl
out
mov
add
mov
iret
loop
xor
sahf
lahf
add
data16
mov
lcall
xor
in
mov
popa
mov
rcll
push
add
pop
sbb
add
test
lcall
pop
jge
arpl
pop
sbb
cmp
out
add
xchg
sbb
int
sub
jg
in
repz
pop
pop
xchg
push
xchg
imul
xor
movb
dec
xchg
xchg
xor
ja
xchg
sbb
ss
and
inc
sbb
lcall
and
cmc
xor
push
lahf
sbb
and
rcrl
popa
mov
outsl
loopne
lahf
rorb
aas
rclb
lock
sbbb
adc
pop
movsl
testb
xor
sub
add
push
xor
and
rolb
lods
adc
inc
aad
mov
and
xlat
mov
hlt
rorl
sbb
daa
sub
push
adc
mov
jno
pop
adc
sbb
and
pop
inc
sbbl
cmp
cmp
jne
mov
lock
leave
outsl
mov
jmp
in
arpl
cmc
enter
out
clc
add
mov
xorl
or
or
popf
adc
loopne
adc
icebp
loopne
flds
mov
fmull
sti
or
les
hlt
xchg
repnz
adc
dec
loopne
pop
jmp
leave
jp
sub
cmp
std
inc
inc
cmp
in
and
mov
out
repz
fstl
movsb
xor
stos
mov
xchg
dec
adc
and
pop
fs
add
mov
cs
sti
fldl
xlat
adc
push
inc
inc
sbb
adc
xchg
xor
ret
addb
outsb
clc
mov
gs
aad
mov
xchg
add
mov
jae
jecxz
mov
push
push
adc
sub
sarl
lock
add
cmp
push
mov
clc
add
movl
dec
inc
sbb
loopne
xchg
test
add
sarb
add
in
xchg
and
imul
sub
and
into
scas
sub
jne
mov
add
jno
pusha
sarb
push
jne
adc
inc
es
and
cmp
push
sub
repnz
push
push
xchg
out
or
inc
sub
jmp
sbb
and
mov
adc
dec
jo
sbb
shrl
ret
adc
mov
mov
xor
pop
ret
dec
jmp
and
sub
jge
sbb
dec
ds
ljmp
lcall
dec
in
aaa
jno
or
pushf
and
mov
pop
loopne
jo
add
dec
xchg
lods
adc
mov
stc
sbb
sub
sub
ret
sbb
jmp
int3
pop
cmp
or
mov
mov
mov
or
cmp
pop
mov
mov
push
adc
inc
loopne
xchg
dec
add
jo
sub
add
adc
mov
jo
jae
movsl
add
sbb
call
sbb
sbb
stos
cmpsl
jp
add
fidivrs
stc
repnz
shl
or
sbb
and
cwtl
psrld
mov
sub
cs
push
add
mov
in
scas
pusha
sbb
pop
hlt
iret
mov
inc
mov
pop
and
mov
mov
ret
repz
and
loopne
in
shll
or
addr16
cmpsl
push
sbb
inc
pop
xchg
cmp
sbb
push
xchg
and
ss
pusha
scas
pop
mov
lock
shrb
fmuls
add
imul
inc
adc
cli
sbb
and
mov
inc
int3
dec
xchg
aad
and
fdivrl
sbb
fwait
add
andl
add
loop
inc
mov
ss
sub
fdecstp
shlb
pop
or
push
sti
xchg
xorl
arpl
and
rclb
cld
and
jb
sbb
mov
insb
add
mov
xor
add
outsb
inc
add
fstpt
xor
out
adc
lret
pop
nop
adc
test
mov
sbb
add
pop
adc
sub
inc
inc
xor
jmp
mov
jp
mov
fs
mov
cld
adcl
loope
ret
in
arpl
and
ljmp
je
push
loop
int3
push
push
ret
ja
xor
cmp
stos
inc
inc
sub
fildl
adc
shrl
inc
stc
cmp
filds
inc
popa
jo
sti
mov
or
leave
sub
push
jnp
add
cmp
mov
sub
leave
rcll
cmp
lret
jl
xor
dec
add
push
mov
adc
inc
pushf
add
adc
xchg
rcrl
cmc
sarl
jecxz
andb
push
jmp
out
decl
add
rcll
loopne
jb
mov
int3
arpl
pushf
inc
xchg
xor
ret
lock
fistps
add
insl
sub
mov
scas
dec
call
loopne
pop
nop
jno
xchg
mov
pop
test
sub
cmpsb
xchg
test
dec
xor
mov
ficoml
add
test
fs
movsb
dec
adc
aam
daa
hlt
stos
idivb
sbb
imul
pop
add
cmc
sub
andb
rol
add
jmp
dec
jg
mull
loopne
xor
xchg
mov
mov
jl
cmp
sub
pop
mov
mov
inc
push
fiaddl
divl
call
push
roll
and
int3
and
push
sub
in
movsb
repz
add
jbe
stos
add
das
roll
loopne
mov
cmp
fiadds
lcall
fsubr
or
popa
mov
or
add
add
icebp
int3
std
jbe,pt
cwtl
dec
lcall
outsl
test
and
orl
mov
sbb
pop
jo
adc
mov
push
add
aas
inc
clc
imul
shll
call
cmp
inc
test
cld
pop
and
lcall
jo
into
and
push
sub
push
addl
xor
add
iret
dec
add
xchg
test
scas
enter
xchg
std
loope
sti
orl
hlt
sbb
hlt
mov
add
push
lret
test
mov
ljmp
xor
sti
rcrb
add
adc
outsb
dec
sbb
shr
lret
js
and
add
cmp
mov
mov
pop
in
test
mov
sub
or
faddl
push
leave
sbb
cmp
inc
xchg
out
xor
dec
std
adc
loop
leave
mov
sbb
mov
push
or
pop
lock
mov
notl
sahf
push
inc
les
loope
cmp
lds
lret
cmpsb
and
pop
sub
dec
mov
jecxz
dec
pop
add
inc
loopne
pop
sbb
cmp
add
fwait
lea
mov
pop
fbld
out
rorb
ja
shr
ficomps
lds
out
fmuls
sub
push
aam
repz
sbb
xor
pushf
bound
out
jmp
scas
mov
push
add
test
dec
jecxz
repz
into
add
mov
out
ret
add
cmp
cmp
aad
leave
sub
fistpl
fwait
movsb
or
jmp
xchg
hlt
add
and
aaa
sub
mov
pusha
push
cmp
add
mov
mov
pop
cld
dec
ds
mov
add
icebp
out
fwait
xchg
add
testl
repnz
xchg
mov
aam
push
shll
jle
or
mov
jp
mov
ja
in
add
xchg
aam
add
fistps
fadds
loopne
js
cmp
xchg
add
dec
imull
fnstenv
insl
fisubrs
add
movsl
je
xchg
xlat
out
add
mov
push
jno
sbb
fwait
mov
sbb
mov
in
enter
pusha
repz
cld
jge
mov
sbb
movsb
xchg
xor
or
std
cld
xlat
sbb
cmp
cmp
inc
push
adc
imul
in
xor
pop
jns
add
test
out
out
aam
out
push
add
std
lret
push
subl
lock
add
push
jo
arpl
or
mov
xchg
bound
fldcw
mov
notl
push
ja
or
clc
ljmp
dec
jne
out
sti
adc
cmc
xchg
ret
jle
mov
mov
xchg
lcall
push
push
xchg
shl
xchg
loop
in
scas
and
pusha
xchg
jmp
sbb
mov
jne
sbb
popa
mov
out
inc
into
fmull
adc
add
cmp
arpl
or
inc
push
mov
and
or
scas
add
inc
add
or
outsb
pop
and
shl
or
xlat
popf
push
popa
iret
les
jmp
in
add
daa
pop
pusha
or
lea
scas
arpl
lahf
sub
cld
push
lock
test
add
push
shll
clc
les
mov
ret
xchg
add
push
sbbb
push
inc
sub
jg
add
loop
mov
inc
xchg
adc
push
push
lret
sbb
mov
xlat
adcb
inc
push
jmp
frstpm(287
sbb
fadd
cmp
shr
cmp
push
popa
pushf
xchg
push
dec
adc
and
movl
mov
repz
lret
out
inc
add
in
cmp
pop
xchg
and
arpl
loop
mov
add
push
int
cmp
cmpsl
loop
add
popf
lret
mov
lea
repnz
dec
data16
in
lods
outsb
add
lahf
outsl
mov
hlt
loope
dec
push
arpl
push
shll
add
fldcw
jp
daa
adc
pop
dec
mov
nop
add
prefetch
sbb
fisubl
mov
xchg
mov
add
add
and
cmp
mov
or
sbb
mov
add
pop
jg
mov
sub
ret
adc
dec
push
out
dec
inc
mov
idiv
sub
push
push
xor
push
pop
cmpsb
jmp
add
add
inc
int3
cmpsl
adc
shlb
push
ss
adc
xchg
dec
cmp
mov
pop
and
mov
pop
push
pushf
test
cmpsl
loopne
pusha
insb
xchg
mov
addl
lahf
cmp
lods
popf
mov
or
scas
bndldx
lcall
fldl
xchg
test
add
cmp
mov
lods
jge
and
sbb
cli
out
rcll
adc
inc
repnz
sti
mov
mov
leave
bound
fcomps
je
jb
xlat
dec
cmp
or
or
ret
in
dec
in
pop
fistps
ret
addr16
movsl
sbb
or
loop
pop
nop
das
inc
lahf
mov
dec
loope
adc
lock
pop
mov
in
pusha
mov
xor
in
sub
insl
cmp
sbb
xor
pusha
outsb
data16
ret
pop
push
pop
and
daa
hlt
push
pusha
jno
xchg
je
sbb
and
jle
inc
add
add
jno
pop
mov
push
arpl
loopne
or
xchg
add
xor
dec
mov
mov
xchg
add
dec
adc
jb
imul
add
add
push
adc
jnp
roll
pusha
addb
mov
adc
add
xor
jno
repnz
push
int
push
test
add
mov
dec
fwait
loop
add
lahf
pop
mov
inc
mov
jno
or
inc
clc
mov
leave
outsl
sarb
ljmp
sbb
testl
add
out
add
dec
xchg
fiaddl
inc
cmp
or
add
fldcw
pop
adc
xchg
cmp
cwtl
adc
and
push
inc
jp
aam
sub
pop
lock
mov
adc
icebp
enter
int
jge
and
lcall
and
jmp
sbb
mov
dec
in
mov
lds
push
or
scas
push
jmp
add
sub
sti
add
inc
shrb
fcmove
jbe
push
bound
in
pushf
stos
inc
repz
mov
adc
add
mov
sub
test
fmul
sarl
adc
outsb
add
pop
push
lds
fst
inc
xchg
add
dec
jb
shll
leave
mov
push
sbb
out
aam
fisubs
aas
sub
add
xor
push
inc
xor
mov
push
rolb
inc
xlat
shll
int
loop
ret
xor
lods
outsl
stc
add
iret
xor
mov
mov
scas
in
jg
lods
pop
inc
add
push
pop
js
loopne
out
out
xchg
loope
in
inc
cmp
jl
pop
jp
jne
cli
adc
sub
mov
mov
jecxz
dec
or
stc
mov
lea
dec
xor
push
sub
fadds
adc
call
add
sub
cmpsl
sbb
int
or
mov
in
mov
hlt
push
add
pop
mov
pop
jo
mov
jae
int3
or
lret
or
sub
xchg
xlat
xchg
cli
inc
mov
and
adc
cmp
xchg
test
out
pop
xchg
gs
cmc
push
jle
ss
loope
or
pop
ljmp
and
sub
clc
sbbb
aaa
in
repz
adc
rclb
mov
pop
pop
lcall
mov
bound
sti
push
ja
mov
ret
jecxz
fldt
jg
hlt
push
lcall
lret
aaa
or
fdivr
cltd
push
test
das
add
jle
ds
mov
test
inc
sbb
adc
pop
popa
fisttpl
and
and
jns
xchg
jl
add
pop
add
mov
jne
adc
add
aam
imul
shrl
add
jg
sbb
jmp
jp
sbb
cli
rcr
xorb
ffreep
cld
call
sub
sbb
js
add
pop
imul
push
test
in
add
cmpsb
rolb
shlb
loopne
xchg
fdivrs
add
and
es
data16
repz
cld
push
jl
adc
jecxz
cmpsb
call
cmp
push
sbb
mov
ficoms
in
or
inc
add
iret
lea
push
push
insb
pushf
and
and
push
pusha
loope
aaa
call
add
test
add
enter
incl
mov
pop
loopne
add
add
inc
les
lock
ficompl
loope
or
loopne
imul
in
aad
adc
loop
outsl
lcall
inc
mov
dec
cmp
or
insl
mov
sub
aaa
and
pop
gs
fwait
pusha
imul
add
adc
jne
mov
lea
cmp
xchg
mov
cmp
cmp
sti
pop
loope
pop
loopne
cwtl
xchg
aad
out
daa
out
add
mov
mov
xor
push
fwait
or
test
add
insl
inc
in
stos
jb
add
mov
add
and
jmp
dec
roll
mov
andl
adc
add
leave
push
add
fs
pop
mov
push
and
arpl
lods
lock
dec
incl
inc
sbb
fstp
add
rol
jl
jmp
pushf
insl
jg
jns
test
shrl
jmp
fldt
or
and
push
adc
lret
mov
int3
shr
cmpsl
xor
and
cwtl
js
push
pop
mov
mov
add
clc
gs
xchg
xor
cmpb
sbb
sbb
int
and
and
xchg
sarl
cmc
icebp
test
add
fldt
or
mov
rcl
outsl
rclb
pusha
test
cmc
cli
ret
insl
adc
push
test
adc
imulb
add
xchg
mov
push
add
cmpb
in
and
mov
push
popf
add
dec
stos
loope
add
mov
mov
jno
xor
ljmp
xchg
cmp
test
lcall
mov
cs
add
out
ja
sub
and
filds
loope
pop
pop
test
mov
mov
or
xor
es
xchg
mov
cmp
sbbl
data16
cmpsb
add
dec
daa
addl
push
add
sbb
popa
pop
adc
dec
fneni(8087
sbb
and
add
addr16
cmp
and
or
stc
pusha
test
mov
cmp
call
add
ja
jbe
dec
jne
dec
jo
outsb
add
pusha
shr
jmp
call
push
call
jo
addl
and
je
pusha
clc
call
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
or
add
jmp
test
test
cmp
jmp
push
call
adc
popa
xlat
xor
or
int3
mov
inc
outsb
fs
popa
addr16
sbb
sahf
loope
add
push
add
bound
ljmp
in
jecxz
push
aaa
mov
adc
jnp
outsb
cmp
enter
inc
icebp
push
jge
mov
movsl
mov
mov
repnz
sbbb
in
std
add
movsb
dec
daa
dec
push
cmp
outsw
push
inc
aaa
jnp
aaa
jp
jns
mov
sbbl
rclb
call
mov
cmc
stc
bt
add
jmp
push
call
mov
jns
pushl
loope
data16
out
sbb
sub
adc
inc
adc
pop
cli
out
cmc
ret
dec
or
stos
mov
add
lcall
jo
arpl
mov
or
leave
imul
cltd
stos
cmpsl
xchg
in
negb
pusha
mov
jmp
call
add
push
gs
gs
jae
inc
inc
add
add
popa
jo
insb
insb
outsl
arpl
stc
not
jmp
push
call
mov
scas
add
inc
insb
outsl
bound
push
gs
insb
insb
outsl
arpl
pusha
stc
jmp
add
dec
jae
imul
jae
bound
add
pop
jae
jb
arpl
add
add
fs
popa
je
add
lock
lods
sahf
push
add
sub
idiv
lods
lret
or
add
rcl
clc
and
add
jmp
inc
bnd
cltd
lods
mov
add
es
in
push
pushf
lods
xchg
and
add
mov
mov
cltd
lods
imul
cld
sub
add
add
pushf
lods
or
add
inc
int3
dec
clc
int3
leave
pushf
lods
or
add
add
adc
add
cmc
testb
add
ljmp
or
add
add
cltd
lods
sbb
ds
sti
push
addl
dec
xor
repz
pushf
lods
movsl
push
add
mov
pushf
lods
or
add
andb
or
add
add
sti
adc
add
cwtl
sbb
lods
roll
add
test
or
add
inc
iret
and
lods
inc
add
add
scas
pushf
lods
incb
add
mov
xchg
mov
pusha
or
pushf
lods
icebp
add
add
imul
stc
lcall
add
leave
pushf
lods
or
add
push
push
nop
cli
rclb
add
das
pushf
lods
xlat
add
add
fadds
stos
add
add
xchg
adc
cltd
lods
fimuls
add
clc
cmpsl
stos
cld
cwtl
lret
or
add
addb
add
lods
and
add
cltd
das
test
cltd
lods
sub
add
fsubl
in
clc
imul
add
movsb
jne
std
jl
pushf
lods
or
add
add
pushf
lods
stc
pop
add
rolb
inc
sbb
add
jno
add
hlt
leave
pushf
lods
or
add
rcrb
pop
sti
mov
add
add
fcompl
lods
or
add
inc
or
lock
lods
add
add
add
ja
sub
adc
daa
in
push
ljmp
and
pop
jmp
pop
pop
mov
jmp
push
and
pop
and
mov
pop
inc
lods
daa
jbe
leave
lea
test
add
push
cmp
or
jge
lea
repnz
push
out
xchg
out
cmp
testb
and
testl
xchg
jp
std
jno
lea
clc
add
pusha
lea
jmp
stc
not
pushf
bt
pushf
rol
jmp
add
push
gs
insl
gs
push
add
add
je
outsl
jns
jne
jae
jb
cmpb
mov
pop
mov
cmp
cmpsl
testb
push
and
inc
sbb
xchg
jecxz
fs
cmp
leave
imul
jno
dec
jl
sbb
add
subl
call
popa
rorb
popa
cmp
inc
mov
add
add
lea
jne
mov
push
pushfw
popw
clc
mov
call
jmp
mov
das
shrl
shrl
ss
lods
ror
dec
cmp
in
or
jb
mov
aad
push
mov
repz
pusha
mov
cmp
mov
ss
fnstsw
call
pop
call
xchg
cli
and
and
push
test
jmp
add
dec
jae
imul
popa
rcrb
or
or
inc
cmp
sub
jge
cmp
sub
jmp
add
push
gs
outsl
arpl
add
mov
xor
xor
mov
mov
cmp
fwait
adc
jnp
xchg
push
jae
hlt
scas
repz
pushf
adc
mov
cmpsl
into
movsb
mov
pop
leave
test
repnz
jp
mov
push
sarl
push
cli
mov
cltd
and
jge
jno
std
lcall
sub
call
xchg
jg
cwtl
mov
cltd
push
sbb
pop
rclb
lret
insb
fldenv
sbb
popf
hlt
lahf
scas
pop
jecxz
and
in
bound
xchg
fsubrs
jnp
mov
lahf
sub
scas
in
aad
dec
inc
nop
nop
jo
stc
imul
cld
ja
cltd
jns
jge
jb
adc
cs
bound
mov
inc
jne
insb
add
in
out
jecxz
imul
xchg
lret
fsubrl
fnstenv
mov
mov
jecxz
out
mov
out
push
adc
pop
outsb
inc
imul
mov
cmpb
pushf
ja
sbb
push
pop
dec
cmpsl
dec
daa
dec
inc
rcr
mov
pop
inc
pop
xchg
mov
add
test
push
call
jo
mov
movzbw
jmp
push
push
inc
push
xor
cs
insb
add
add
imul
gs
xor
mov
inc
and
cmpsl
fldenv
fildl
loop
popf
dec
mov
cwtl
mov
bound
jae
sbb
bnd
jle
rcr
inc
sub
push
cmp
insb
cmpsl
jb
cmp
jne
cmp
jl
aad
cmp
pop
pextrw
xchg
inc
test
sub
call
setg
inc
not
inc
clc
clc
xchg
or
call
jge
or
push
insl
xchg
imul
xchg
out
push
insl
icebp
fwait
push
inc
lret
adc
or
ds
dec
jl
mov
mov
std
inc
sub
aas
mov
cltd
mov
enter
jecxz
jle
add
inc
lds
mov
into
and
mov
leave
cmpsl
cs
lea
call
pusha
jmp
add
pop
arpl
je
outsl
insb
data16
xchg
cltd
sbb
cmpl
add
clc
xchg
pop
lret
scas
stos
mov
and
out
inc
enter
dec
mov
nop
xchg
or
pop
imul
in
outsb
test
outsb
sub
call
inc
imul
fs
je
pushf
adc
mov
movw
pusha
lea
jmp
pusha
add
cmc
cmp
pushf
jmp
pop
pushf
push
call
sahf
daa
and
bswap
lea
pushl
popl
cwtl
push
lea
mov
pusha
jmp
stc
cmp
pushf
call
add
inc
outsl
arpl
outsb
je
jb
jo
jb
imul
shlb
call
add
call
add
push
popa
imul
insb
gs
bound
arpl
bt
test
xor
movb
pusha
cmp
shr
test
pusha
cmpl
pushl
movw
jmp
cmc
push
cmp
push
mov
call
add
lea
clc
movzbw
ror
xor
mov
pushf
stc
push
pusha
shr
test
cmc
cmp
jmp
adc
insb
or
mov
or
hlt
imul
lcall
adc
mov
data16
lret
cs
fcmovnb
into
fsubs
mov
push
ds
clc
push
add
mov
mov
movl
mov
lea
jmp
pushf
cmc
and
clc
cmp
cmp
add
sub
pusha
add
push
push
pushl
movb
dec
push
movb
lea
jne
pusha
pusha
pushf
pushl
lea
jmp
inc
btr
mov
cmp
call
push
mov
pushf
pushl
ret
stc
rol
lea
jl
cmp
cmc
shr
pusha
push
jmp
cmc
imul
jmp
jmp
dec
dec
inc
inc
push
push
xor
cs
insb
add
add
bound
je
add
rolb
or
std
mov
gs
sub
lods
mov
test
scas
push
stos
xlat
into
and
pop
xchg
inc
sub
stos
push
xor
inc
and
test
jbe
test
mov
mov
sub
and
dec
insb
pop
in
pop
add
sub
mov
jno
xchg
xchg
popa
jbe
push
mov
out
rclb
inc
xor
hlt
cmp
lods
outsl
iret
adc
popa
jmp
adc
xchg
sti
xchg
jns
std
mov
dec
cltd
xor
nop
popa
xor
dec
int3
sbb
pushf
lea
aaa
lret
xor
mov
int
cmp
and
ror
addb
popa
mov
outsl
gs
pusha
or
bound
das
pop
push
bound
adc
clc
adc
rorl
xchg
mov
div
pop
jnp
dec
push
pop
dec
mov
dec
and
pop
push
xor
nop
jecxz
sbb
mov
sbb
out
fcoml
les
aad
dec
pushf
xor
nop
loope
add
dec
int3
sbb
jbe
sahf
pop
jmp
outsb
xchg
jmp
hlt
adc
imul
test
jno
inc
add
aaa
fstl
daa
repz
xor
idivl
sahf
outsb
sbb
fldcw
jp
repz
shlb
repz
push
imul
push
pushl
lea
jmp
add
inc
jb
popa
je
push
popa
insb
gs
add
add
je
dec
inc
imul
jo
jns
insb
imul
add
add
je
imul
pop
pop
jo
pop
arpl
insl
outsl
fs
mov
cld
jmp
lea
call
pusha
mov
lea
jae
bt
cmc
xor
pusha
mov
lea
call
push
lea
jae
call
clc
add
stc
pushl
test
test
mov
clc
pushl
test
push
push
lea
je
push
add
cmc
test
mov
bsr
rcl
test
mov
pusha
bsr
pushf
bts
mov
call
movsl
dec
mov
mov
mov
push
xor
push
mov
dec
mov
fstpt
ret
dec
insb
pop
xchg
inc
pop
mov
es
sahf
and
mov
mov
mov
adc
sub
lds
shrb
addl
fdivrl
mov
jno
inc
xchg
fsubl
push
clc
mov
test
mov
loope
mov
lret
dec
pop
xor
or
dec
mov
jns
add
xor
sub
ja
rorb
xor
test
xor
pop
xor
das
rorl
cmpsb
cmp
add
roll
out
in
and
out
fld
leave
sti
dec
mov
mov
jns
jg
pop
mov
out
jl
cld
xchg
jp
mov
inc
and
stos
sbb
pop
jl
mov
shll
dec
mov
xor
aam
iret
lock
lock
and
add
imul
imul
ss
ds
jno
test
pop
mov
nop
and
out
add
mov
sub
dec
pop
xor
add
bound
arpl
add
add
outsl
jae
push
jb
outsb
je
jb
lea
je
jmp
add
push
je
outsb
push
arpl
cmp
cmp
mov
stc
pushl
test
call
push
call
mov
dec
pusha
rcr
mov
add
pushf
pusha
pusha
mov
or
cmc
mov
mov
push
sub
call
js
insb
adc
in
xchg
outsl
xchg
out
push
imul
jae
xor
jb
xorb
movsb
mov
mov
in
pushf
ficoms
jae
cwtl
mov
jb
xchg
mov
psubsw
xchg
push
adc
xchg
fucomp
mov
mov
sub
insl
jle
jmp
dec
cmpsb
test
fimuls
sbb
pushf
xchg
leave
imul
or
and
ds
clc
pusha
clc
jmp
sbb
das
push
dec
das
sub
lods
xor
pop
xchg
and
sbb
push
jae
sbb
inc
jne
dec
push
pop
in
out
out
scas
adc
push
daa
xchg
add
inc
clc
icebp
inc
movsb
or
loopne
in
mov
mov
std
xor
shl
jns
jae
push
fwait
add
out
testl
xbegin
test
sub
ret
scas
rol
push
xchg
sub
call
add
pushf
pushl
lea
jmp
adc
stc
roll
adc
and
sbb
sbb
jns
addb
inc
movb
xor
sbb
sbb
sahf
aas
cltd
pusha
xlat
data16
and
inc
and
iret
inc
push
test
xor
inc
pop
mov
push
xor
ret
xor
or
test
inc
fidivrl
xor
shll
shlb
xor
lret
xlat
js
and
add
les
xchg
and
adc
push
pop
and
and
and
inc
or
inc
adc
pop
xor
or
xor
adc
xchg
shlb
into
inc
dec
test
dec
xor
xchg
and
cmp
test
cltd
xor
push
mov
adc
xchg
pop
pop
jns
adcl
or
or
pop
or
inc
or
popa
jl
mov
inc
inc
and
xchg
and
add
loopne
mov
and
cwtl
and
add
adc
xor
xorl
inc
add
add
and
sub
adcb
and
shlb
xchg
xor
sub
sarl
adc
add
add
int3
xor
mov
xor
xor
and
xor
push
inc
and
pop
and
push
sub
inc
and
add
mov
dec
adc
xor
push
test
or
dec
and
aam
movsb
xor
pop
or
sub
int3
sahf
and
sub
ds
push
dec
inc
sub
int3
std
cmp
and
inc
mov
jmp
dec
daa
insb
sub
sbb
sahf
cld
or
push
adc
push
xor
arpl
data16
xchg
data16
iret
and
addb
sub
and
int3
cvttps2pi
daa
xor
pop
xor
and
data16
jae
sub
popa
inc
sub
add
int3
adc
jecxz
xor
adc
sahf
int3
andl
and
pusha
test
xor
mov
pop
xchg
shlw
push
data16
sbb
out
aaa
lahf
sub
and
das
data16
and
and
cltd
and
or
movsb
cltd
and
and
or
push
lods
sub
out
inc
jne
sub
adc
adc
jne
imul
mov
les
lods
das
mov
xlat
xor
fiadds
mov
sub
in
and
ret
adc
daa
jge
aaa
or
xchg
cltd
and
xor
and
imul
xchg
adc
loopne
and
out
cltd
and
and
xchg
xchg
xlat
cmp
and
dec
das
mov
cltd
cmp
adc
push
push
add
out
add
andb
gs
sub
inc
and
mov
and
xor
cltd
xor
cmp
cltd
xor
mov
mov
and
sahf
mov
cltd
data16
cs
xlat
inc
and
and
fidivs
and
push
xchg
xor
or
mov
jbe
sbb
andl
sub
xor
adc
imul
push
xchg
es
and
and
inc
and
xchg
mov
fwait
cmp
adc
sub
adc
hlt
sahf
xor
jae
aas
fisubl
and
inc
xor
and
mov
lods
data16
and
and
aaa
test
adc
cmp
daa
mov
insl
stc
aaa
cld
xor
inc
sub
test
or
adc
xchg
and
or
cltd
dec
or
dec
xor
mov
inc
push
mov
pop
adc
mov
cmp
popf
inc
fisttpl
inc
roll
inc
int
int3
dec
xor
inc
enter
push
xor
add
fbstp
cmp
test
or
xor
push
xchg
rclb
and
addb
sbb
sbb
rcrb
mov
shll
roll
test
xor
inc
xchg
inc
addb
pushf
or
xchg
inc
roll
inc
dec
mov
xor
add
add
inc
adc
mov
sbb
out
and
and
xor
inc
adc
xchg
nop
xor
dec
test
or
inc
inc
sbb
int3
ret
and
das
mov
or
xor
inc
mov
inc
xchg
test
or
add
cmp
inc
dec
test
or
cmove
aad
xor
fldl
add
test
dec
or
cwtl
mov
int3
inc
dec
test
shll
push
out
xor
dec
inc
xchg
xor
popf
dec
sbb
lahf
and
mov
andb
test
or
xor
arpl
daa
and
mov
mov
test
data16
leave
test
pushf
pushf
and
lods
inc
and
mov
mov
sbbb
cmp
push
test
popa
pop
lock
addb
push
popf
lahf
push
mov
xchg
inc
leave
js
les
push
inc
daa
add
lcall
xchg
xor
push
xor
inc
pop
test
lcall
pop
adc
xor
addb
pop
mov
dec
xor
mov
inc
push
mov
icebp
xor
or
xor
cmp
popf
xor
or
mov
aam
push
or
xor
inc
std
test
add
insl
lods
dec
outsb
int
lea
and
out
mov
lds
dec
ljmp
push
jle
enter
test
call
lret
out
jmp
jns
pop
test
hlt
lods
insb
dec
das
jo
std
clc
outsb
sbb
sub
mov
cmpsb
mov
insb
out
push
dec
das
test
je
jmp
jnp
jl
rcrl
pop
mov
int
lds
ja
push
loopne
out
stos
int
adc
push
insb
mov
lret
dec
shrb
ror
test
loope
mov
enter
inc
imul
xor
jo
scas
lods
mov
pusha
enter
inc
add
dec
icebp
mov
into
int3
fmul
lret
fmull
popf
out
dec
or
jo
hlt
stc
lret
test
das
int
push
rolb
mov
movsl
and
fldl
sub
nop
loopne
add
sub
addr16
and
ljmp
or
add
addb
sub
push
pusha
push
dec
popf
mov
xorl
adc
dec
mov
and
aas
mov
mov
repz
add
mov
daa
int3
inc
data16
cmpsb
cmp
sub
out
xchg
insb
out
lock
cmpsb
add
mov
jbe
push
jns
cwtl
mull
pop
test
add
sbb
jo
stos
shrb
sbb
pop
test
in
daa
rorl
mull
push
inc
stos
test
cli
add
aaa
aam
fwait
or
xchg
sbb
adc
add
lcall
and
jg
xchg
push
testl
int
in
lret
and
icebp
subb
popa
sbb
xchg
jle
sbb
andb
imul
mov
jge
and
or
adc
pop
xchg
dec
mov
and
or
xchg
xor
sub
or
es
and
aad
push
and
dec
or
cmp
lds
scas
adc
dec
movsl
inc
test
ret
cld
sbb
sub
mov
cmc
push
outsb
das
add
lods
lods
data16
inc
push
orl
daa
cmovp
andl
pop
roll
daa
add
mov
sbb
or
add
jecxz
and
mov
inc
adc
outsb
add
dec
sbb
sub
lods
pushf
scas
sti
fsubrp
dec
lods
jecxz
int
rorb
push
mov
gs
adc
mov
add
and
gs
inc
add
add
xor
inc
and
adc
adc
popa
add
inc
loope
push
inc
nop
xchg
repz
lods
add
and
mov
xchg
enter
rclb
mov
sbb
xchg
add
dec
adc
push
rolb
pop
push
push
add
mov
rorl
mov
enter
inc
add
dec
push
addl
sbb
lds
ljmp
or
outsb
orl
es
orl
xor
or
outsb
in
and
mov
and
fisttpll
in
js
nop
adc
add
cmp
cmp
pop
mov
pop
mov
pop
and
mov
or
jmp
adc
xor
orl
mov
or
xchg
mov
mov
adc
xchg
xorl
xchg
shr
adc
clc
fs
xor
sbb
daa
jae
lea
adc
dec
push
daa
mov
cmp
addl
incl
js
push
sbb
mov
sbb
dec
inc
mov
std
pop
cmp
sbb
sbb
test
imul
test
inc
xchg
mov
andb
push
xor
add
and
push
adc
mov
mov
pop
sbb
sbb
bound
scas
and
add
inc
inc
add
adc
inc
cld
in
fwait
mov
scas
add
push
jno
adc
jl
jo
cmpsl
xorb
cld
fcmovb
js
adc
mov
test
jns
jge
adc
add
inc
data16
sbb
mov
mov
dec
mov
ret
stos
mov
cmp
aas
subb
daa
sbb
sbb
out
cmpsl
and
daa
adc
sbb
sbb
out
add
cmp
xor
cmp
inc
xor
lret
daa
and
mov
sub
aas
inc
jge
sbb
jmp
adc
push
cmpsl
jge
mov
mov
push
pusha
nop
add
add
fucom
adc
scas
popa
push
and
andl
jno
xchg
push
or
in
mov
add
gs
pusha
pop
xchg
sbb
sbb
or
xor
xlat
out
mulb
push
in
in
or
data16
cltd
cs
dec
aad
data16
add
popa
push
bound
and
dec
enter
aaa
sub
add
jo
dec
inc
cmp
xor
push
popf
xorb
pop
aaa
icebp
pop
xchg
push
test
xor
scas
ret
or
test
rclb
mov
out
ret
or
sbb
cmpsl
fisttpl
jmp
out
cmp
or
jg
and
and
and
pop
pop
cmpsl
jle
insl
jns
adc
clc
adc
mov
int3
sbbl
ss
push
jmp
xchg
jnp
jae
movsl
test
push
dec
pop
fwait
aam
xor
fwait
hlt
jns
pop
or
add
mov
mov
mov
imul
aad
inc
adc
mov
pop
nop
mov
cwtl
mov
in
and
shrb
mov
pushf
enter
js
add
mov
xchg
and
sub
sub
jne
imul
cmp
sub
insb
mov
pop
jmp
imul
jnp
xchg
cmp
mov
jg
popa
insb
movsl
inc
subl
rclb
xorb
loopne
add
sub
adc
cmc
xor
jge
mov
shl
sbb
sbb
sarb
adc
mov
sub
inc
pop
int3
cmc
push
push
sub
ficomps
icebp
js
and
and
call
sbb
xchg
push
or
daa
jno
adc
pop
xor
add
cmp
or
adc
mov
mov
cmp
jl
sub
push
inc
dec
sub
loope
pusha
jo
sahf
es
mov
test
xor
and
xorb
mov
imul
inc
js
filds
rolb
push
xor
inc
les
sbb
sub
add
test
xchg
dec
shlb
jns
lock
pop
inc
rcrb
cmpsl
sub
adc
and
push
out
push
inc
subl
loop
orl
adc
or
sbb
addb
loopne
push
mov
sub
adc
and
and
adc
cmp
scas
pop
loope
xlat
sbb
push
pusha
les
aas
daa
mov
js
sub
lret
dec
cmp
sub
cmp
outsb
mov
and
bound
in
pop
fstpt
jno
add
or
sbb
add
nop
ds
cwtl
rolb
mov
mov
daa
add
pop
std
rorl
sahf
and
into
and
mov
call
aas
mov
or
jne
cwtl
loope
outsl
pop
cmpl
or
mov
pop
sahf
sbb
xchg
mov
push
or
jnp
fsub
pop
arpl
je
sbb
adc
mov
sbb
sarb
jno
add
call
pop
pop
add
jns
adc
sti
daa
add
imul
popf
and
adc
popa
sub
cmp
and
push
fiaddl
scas
push
lock
dec
push
add
outsb
and
inc
iret
sbb
cmp
popa
pop
and
clc
or
add
and
inc
inc
xor
or
jo
test
add
cmpsb
sbb
es
addb
inc
xor
xchg
push
add
testl
sbb
push
aas
orb
add
fstpt
adc
aad
addr16
mov
movsl
adcb
fnstcw
leave
pop
push
push
pop
xchg
xor
addr16
lods
loope
xchg
js
mov
je
cs
lcall
nop
push
jmp
les
dec
stc
mov
sarl
int3
out
mov
xor
sub
and
xchg
and
mov
cmpb
sbb
je
data16
sbb
cmp
dec
aas
adc
fsubs
push
xchg
adc
lock
and
jmp
pusha
in
cmp
add
add
out
popa
dec
pushf
or
imul
in
jo
testl
jo
adc
fildl
pop
into
xor
es
std
pop
pop
movsb
or
cli
or
scas
inc
jo
movl
push
test
inc
and
arpl
add
mov
sub
sub
jb
rolb
xchg
add
xacquire
scas
dec
loop
orb
shlb
lods
test
sbb
lret
mov
cmp
and
les
xor
cmp
lock
adc
cmp
sub
ja
add
sbb
xchg
rcr
add
and
dec
pusha
sbb
cmc
aad
jecxz
push
jnp
xchg
adc
fs
out
stos
inc
mov
push
repz
or
mov
or
bound
inc
mov
adc
sbb
test
jo
or
out
dec
int3
clc
movsb
mov
or
add
xor
pop
cmpsb
ja
sbb
dec
xchg
fidivl
adc
mov
and
imull
ja
adc
jmp
add
cmpsl
lahf
lods
and
sbb
pop
dec
iret
je
dec
xchg
add
push
bound
xor
in
mov
iret
or
lret
fs
fsubrl
pushf
pop
and
or
sbb
cmp
xlat
pusha
jno
lahf
fadds
add
xor
clc
mov
xor
jle
popl
sbb
xchg
fistpll
cmpsb
fidivs
nop
mov
lods
pusha
inc
sbb
orb
fs
cmp
sub
inc
cmp
cmp
add
and
sub
inc
cs
sarb
sbb
addb
and
sbb
fadds
jmp
out
in
fnstsw
and
inc
sbbl
xlat
jo
xchg
movsb
je
je
js
js
jl
jl
mov
loope
dec
rcrb
and
add
cmpl
inc
sbb
jb
lahf
pop
pop
mov
mov
pop
or
movb
inc
les
mov
pop
loopne
icebp
jle
jmp
xor
inc
mov
lds
pusha
mov
inc
cmp
inc
sbb
in
lock
mov
andb
sbbb
adc
and
inc
jge,pt
jl
or
mov
js
fwait
push
add
push
sub
mov
add
in
in
lahf
add
jmp
andb
and
inc
pop
sbb
pop
mov
inc
inc
adc
mov
mov
sub
inc
mov
and
push
inc
and
insb
add
addb
and
and
or
inc
dec
fists
or
imul
cmp
sub
mov
mov
inc
inc
addr16
es
sub
cmp
and
inc
imul
adc
imul
or
push
push
add
loope
mov
push
sub
inc
push
add
jge
jns
fcmovb
jno
les
test
adc
dec
mov
scas
and
inc
and
fmuls
push
lock
sbb
pop
subl
rcll
and
mov
push
dec
sbb
add
jl
test
daa
sub
mov
pop
insb
sub
jecxz
out
dec
pop
jge
bound
inc
ficompl
bound
and
loop
inc
enter
inc
mov
popf
or
subb
mov
mov
pop
sbb
mov
lahf
and
daa
sbb
addl
stos
ret
adcl
adcb
sbb
jo
gs
and
loop
enter
jmp
jb
scas
add
push
andb
lods
or
stos
jno
mov
aad
jl
inc
cmp
lea
adc
jo
or
lock
test
xchg
stos
shlb
add
out
inc
add
setns
jno
fidivl
lcall
loop
push
adc
popa
jo
adc
lods
pusha
and
lock
fcomps
inc
stos
sbb
jecxz
inc
jge
data16
lods
sbb
jae
cmp
addr16
pop
mov
cmp
shlb
add
mov
sbb
xor
push
movsb
mov
js
pop
lcall
pop
sbb
stc
xor
mov
out
sbb
stos
pushf
mov
push
shrb
lret
ja
out
mov
mov
sbb
outsb
adc
inc
lret
push
mov
popf
or
add
arpl
sbb
and
outsl
mov
and
xor
popa
adc
sub
rcrl
adc
scas
pop
and
lds
add
adc
loope
inc
call
push
jnp
fwait
test
mov
inc
pop
pop
aam
adc
rolb
scas
fdivrl
xor
popa
xchg
test
test
bound
cmpsl
int
aaa
adc
nop
sub
scas
in
pusha
test
adc
rcll
hlt
aaa
pop
pop
jg
cmpsb
and
push
add
bound
or
pop
push
mov
mov
shlb
out
je
and
push
push
arpl
addl
push
add
xchg
cmpl
movsb
mov
subl
fcomip
pop
inc
mov
or
icebp
cmp
clc
jle
sub
pop
cmp
rclb
push
xor
mov
scas
xchg
xchg
xor
scas
inc
add
ljmp
inc
xor
mov
mov
stos
sbb
lret
push
push
lahf
or
cmp
jge
stos
mov
or
fs
je
out
clc
mov
xchg
aad
scas
mov
adc
inc
or
sbb
pop
add
lcall
test
rclb
filds
inc
pop
dec
mov
sbb
mov
dec
andl
mov
in
push
mov
nop
add
mov
test
ljmp
test
dec
sub
xor
and
inc
es
outsl
jnp
pushf
jg
pop
dec
mov
lret
or
add
popf
pop
adcl
sub
arpl
push
mov
loopne
sbb
cmp
push
out
xor
xchg
pop
or
fs
xchg
sub
pop
fs
fidivrs
cmp
xor
cwtl
and
add
test
push
adc
lahf
adc
sahf
fs
xor
dec
sbb
fwait
sbbl
call
cltd
sbb
pushf
cwtl
out
pop
pushf
xchg
inc
push
cmp
mov
sub
das
filds
push
cmp
test
ds
and
sub
adc
jne
adc
movsb
test
or
ror
push
cwtl
sbb
mov
mov
jle
daa
fsub
andb
mov
and
sub
sbb
sysret
int3
sub
js
jl
out
mov
outsl
mov
add
sub
sub
imul
push
xor
fcoms
out
mov
mov
arpl
test
loope
mov
and
sub
mov
inc
dec
cs
inc
lahf
bound
cwtl
sbb
jb
dec
dec
xor
adc
jbe
mov
push
mov
jbe
jl
sbb
jmp
push
fwait
ret
sbbb
pushf
push
mov
addl
add
or
stos
push
mov
add
mov
mov
dec
dec
rolb
dec
loop
data16
mov
jae
mov
xor
bnd
fdivrs
jmp
sarb
adc
inc
rclb
test
pop
xchg
imul
rorl
and
mov
stos
mov
and
mov
mov
sbb
push
sub
outsb
dec
pop
push
add
cwtl
cmpsb
jo
bound
inc
test
shll
mov
popa
mov
and
and
inc
or
xchg
sbb
pop
test
sbb
mov
cmpsl
mov
jle
mov
sub
inc
clc
dec
jmp
nop
out
mov
les
sbbl
out
pop
test
or
or
inc
push
xor
push
aam
nop
arpl
pushf
jecxz
xor
data16
xchg
dec
adcl
test
add
adc
add
mov
or
mov
fnsave
jb
and
push
rcl
jo
mov
insb
pop
cwtl
cmp
and
add
push
orl
cwtl
mov
div
sbb
pushf
xor
add
loopne
movsl
push
or
lods
pop
push
cmp
add
test
in
push
mov
inc
das
in
lods
mov
xchg
fmuls
ljmp
cltd
cwtl
pop
or
and
push
bound
js
add
sbb
rcrl
add
ljmp
cwtl
test
inc
stos
pop
aad
push
or
sbb
out
js
leave
fsubrs
mov
leave
cmpsl
xchg
inc
add
jmp
test
jl
scas
mov
mov
jge
int
in
pop
or
into
cmpb
adcl
jno
adc
sbb
pushf
push
lret
test
sbb
call
insb
scas
sbbl
shl
jmp
cmp
addr16
scas
sbb
push
cmp
xchg
sahf
shlb
adc
or
pop
aad
jb
movsl
sbb
mov
adc
adc
and
shlb
cmp
pop
hlt
or
push
stos
xor
addr16
adc
sbb
or
sbb
mov
sbb
add
outsb
add
sbb
fldcw
ds
andb
or
mov
sbbl
and
and
inc
jge
add
inc
popa
mov
rorb
add
mov
mov
fcmovnu
fiadds
add
jp
pop
lahf
test
ret
nop
jnp
loopne
loop
test
roll
jp
xchg
clc
add
es
test
add
and
imul
add
mov
stc
pop
pop
pop
insl
pop
sbb
xor
jns
scas
mov
les
mov
jo
cmpb
addr16
pusha
mov
rol
cmp
jecxz
popf
cmp
sbb
lods
hlt
pop
xchg
rcrl
sbb
add
mov
stos
sub
adc
lret
xchg
in
bound
or
scas
xor
shlb
sbbb
imul
ret
dec
add
repz
jp
mov
or
xchg
scas
iret
test
outsl
add
inc
add
mov
cli
add
aaa
jae
pop
push
btr
jns
inc
outsl
push
pushf
xchg
inc
add
push
scas
leave
sbb
push
pushf
movsl
nop
and
pop
cwtl
xchg
or
cmp
bound
gs
xor
xor
xlat
add
mov
andb
cmp
pop
and
and
andb
insb
mov
testl
jno
int3
jp
xor
sbb
sti
loop
loopne
sbb
and
xor
and
stos
xchg
dec
adc
inc
jge
push
clc
frstor
loope
js
ffreep
addr16
out
clc
jle
ret
push
iret
roll
sbb
popf
dec
sbb
pop
or
sbb
arpl
add
leave
pop
dec
and
sbb
mov
popa
ljmp
test
fbld
ficomps
pop
adc
lcall
add
stos
fildll
mov
rorb
aas
xlat
pop
addr16
add
scas
dec
jge
test
shrb
stos
cwtl
mov
push
lret
fnstcw
data16
fsubrl
popa
xlat
dec
inc
or
mov
ljmp
subl
dec
je
scas
xchg
fidivs
jae
jge
cmp
inc
test
test
jp
enter
add
jae
xlat
mov
clc
jno
xor
mov
test
insb
xor
cmp
push
or
jnp
out
mov
ja
sub
or
iret
mov
xchg
mov
stos
lea
repnz
inc
and
addr16
mov
aas
add
sub
scas
fldl
fbstp
push
mov
sbb
or
adc
xchg
xorb
jo
ljmp
or
nop
push
fidivl
mov
adc
nop
push
jo
fadd
sub
xchg
out
inc
flds
push
popf
dec
jo
sbb
push
jmp
or
je
xor
pop
xor
leave
in
pop
pop
popf
cmp
sbb
or
add
andb
sbb
ds
sbb
stos
fnsave
test
ljmp
stos
mov
jnp
scas
pop
pop
ret
lea
subb
pop
jge
or
or
pusha
fisubrs
scas
je
mov
jo
inc
ret
dec
jmp
pusha
lcall
xchg
sub
orl
popf
add
adc
scas
daa
sbb
mov
loope
and
or
mov
fdivr
push
test
xorb
jo
xchg
cmp
jno
jnp
test
iret
dec
mov
cmp
sbb
jo
loopne
sbb
xchg
add
rolb
adc
arpl
or
adc
daa
lahf
stos
jge
in
out
xlat
test
adc
scas
push
scas
inc
adc
inc
inc
mov
mov
xchg
rclb
and
and
or
scas
insb
std
mov
jge
add
ret
and
push
cmp
out
or
fwait
or
test
das
lods
stos
xchg
pop
stos
mov
jo
pop
and
inc
and
and
and
xchg
cld
fdiv
dec
shll
add
aam
and
inc
mov
orl
cli
and
mov
cmp
shll
loop
rcrb
les
sbb
add
popl
orl
jge
loope
or
out
xchg
pop
sub
sarb
rolb
out
mov
sarl
inc
mov
ljmp
loope
cwtl
leave
ss
dec
push
push
ret
mov
pop
add
pop
inc
daa
adc
icebp
test
lds
jg
fnsave
mov
rolb
les
or
nop
or
cld
lds
inc
mov
nop
iretw
pusha
and
adc
scas
mov
imul
roll
negl
cmp
fistpll
dec
test
add
test
mov
cmpsb
mov
xchg
mov
pop
sbb
sub
push
rorl
in
fisubrs
xor
aas
and
imul
xor
and
jp
fwait
pusha
pop
mov
add
sbb
add
cmpsl
jg
or
out
cmpsl
je
xor
push
add
jnp
out
lcall
pop
mov
mov
xor
inc
test
std
dec
mov
loopne
mov
cld
outsb
movsl
mov
movsb
sbb
pop
cmp
mov
out
mov
push
pop
jge
xor
mov
pop
and
sbb
pop
fwait
jle
rol
clc
mov
and
xchg
addr16
xchg
nop
rolb
loopew
popa
shl
inc
xchg
fnsetpm(287
scas
sti
mov
push
jns
xor
or
std
add
js
push
xor
into
int
xchg
sub
dec
sub
push
filds
xchg
sub
xor
sbb
pushf
mov
add
test
popf
or
stc
repz
or
sbb
or
enter
dec
adc
pusha
xlat
pop
and
adc
xchg
cmpsb
or
cmp
inc
dec
loope
ret
and
inc
movsl
dec
orl
xchg
sahf
fbld
push
mov
sbb
push
dec
and
mov
and
xchg
add
adc
mov
or
and
or
popf
jg
inc
mov
or
loope
inc
fs
nop
mov
jnp
movsb
test
in
addb
push
inc
xor
push
or
mov
and
cwtl
inc
mov
insb
push
mov
cli
push
adc
adc
inc
xor
dec
adc
dec
test
out
add
fs
or
push
or
and
and
mov
add
push
mov
mov
insl
or
popa
sbb
mov
mov
incl
adc
call
cltd
enter
dec
daa
xorl
in
and
mov
popf
cmp
cmpl
xchg
add
daa
pop
pop
xchg
daa
add
fldt
pop
add
inc
sub
and
sub
and
lock
and
pushf
popf
inc
inc
ret
jnp
cmp
sbbb
pop
add
sbb
add
jle
xchg
mov
in
mov
movsb
shl
sahf
sbb
push
shr
movsl
jno
pop
cmpsl
mov
mov
pop
mov
push
adc
arpl
and
test
inc
pusha
jns
jnp
pop
pop
and
loope
scas
ficomps
out
test
loop
mov
rorb
sahf
ret
jno
pop
data16
inc
push
lock
pop
cs
pop
cmpsb
dec
popf
push
push
hlt
push
sti
sub
jae
push
mov
push
xor
xor
and
lahf
mov
sbb
ljmp
inc
lahf
push
pop
mov
pop
lcall
loop
adc
out
addl
loop
lds
sbb
inc
mov
and
or
inc
es
cwtl
or
jo
sahf
jmp
xchg
cli
or
stos
push
flds
movsl
sbb
jno
pusha
dec
sbb
ss
test
push
mov
xchg
call
scas
cmp
ljmp
mull
cmp
sbb
jo
cli
push
push
lods
enter
or
js
push
pop
pop
xorl
adc
mov
and
pop
mov
rolb
mov
movsb
xchg
sub
or
nop
sbb
mov
mov
aaa
leave
inc
aam
mov
aaa
dec
fcmovb
add
jnp
andl
int
fildll
add
movsb
dec
mov
call
clc
pop
xchg
push
mov
xchg
jge
push
lahf
icebp
adc
iret
cmp
sbb
loope
mov
mov
jno
jo
cmp
mov
shl
outsl
mov
push
add
pop
call
pop
cmc
mov
pop
roll
out
in
pop
fs
xchg
and
ja
shlb
jo
and
fldl
xchg
repz
mov
mov
adc
aas
cmp
pop
pop
insb
mov
jmp
or
arpl
inc
jge
adc
xor
dec
jno
adc
sbb
push
xor
lods
adc
loopne
enter
lret
out
or
lods
add
js
lcall
filds
xor
or
or
adc
push
push
fcoml
and
inc
sahf
imul
lahf
push
repnz
in
les
jmp
into
lods
inc
cmpsb
or
push
or
subb
into
mov
cmp
addr16
mov
sub
fcmovb
pop
repz
dec
fwait
xchg
or
adc
add
add
popa
and
es
mov
sub
jnp
ror
push
inc
out
popf
xchg
movsb
lahf
add
lea
xchg
addb
adc
xchg
daa
inc
mov
mov
or
fmull
insl
xchg
and
arpl
popa
and
inc
iret
or
orb
cltd
cmp
push
dec
loope
out
xor
ret
test
paddsb
cmp
scas
test
inc
inc
cmpsl
cwtl
pop
push
adc
cld
adc
nop
rcr
push
inc
jb
xor
add
sbb
sbb
push
inc
inc
aaa
push
nop
mov
xchg
pop
mov
xor
and
dec
rcrl
cmpsl
mov
push
dec
pop
push
cld
cwtl
xor
dec
or
test
addl
xchg
cs
pop
push
xchg
xor
push
xlat
push
test
inc
push
sbb
mov
enter
pop
cwtl
sbb
inc
push
and
pop
loopne
icebp
fucom
jnp
sub
xor
fidivrl
add
sbb
mov
sub
jl
inc
iret
test
or
jmp
into
inc
ret
call
pop
popf
enter
es
stos
sub
mov
and
push
inc
fiaddl
les
push
and
xchg
mov
inc
cmovp
shrb
test
sbb
rcrl
cli
stc
adc
inc
cmp
mov
jl
pushf
mov
adc
add
dec
out
jp
je
add
push
and
outsb
push
pusha
add
xchg
sbb
repz
add
leave
popf
add
and
test
bound
pop
loope
int3
mov
sbb
cmp
xchg
sbb
mov
and
out
cmp
ret
jg
das
xor
popa
cmp
jnp
mov
sbb
ror
les
adc
push
xor
test
call
decb
and
add
lahf
shll
pushf
leave
add
je,pn
or
icebp
mov
dec
lahf
mov
dec
mov
mov
sub
daa
mov
or
inc
fs
lds
mov
add
sub
pop
out
pop
xchg
fwait
repz
call
rorl
add
out
mov
mov
pop
in
mov
stos
jle
addr16
jne
push
dec
adc
ljmp
daa
pop
sbb
add
loopne
mov
and
shlb
xor
cmp
fnsave
inc
xchg
in
insb
stos
mov
add
add
jb
jae
push
sahf
stc
add
out
rolb
mov
shl
addr16
add
imul
adc
sbb
xor
xchg
popf
stos
adc
std
ss
mov
add
les
ret
xor
xor
mov
in
add
jo
mov
popa
lds
push
add
sub
dec
or
lea
sub
pop
adc
sub
in
sbb
je
adc
popa
std
int
pushf
addr16
bound
push
adc
jg
mov
and
cmc
daa
sub
adc
add
and
fstl
test
mov
scas
xlat
lret
loope
sbb
outsb
add
mov
xrelease
aam
sbb
dec
push
add
shr
dec
sti
add
arpl
cli
loopne
out
inc
inc
or
loope
lahf
sbb
sub
dec
push
outsl
arpl
xor
sbb
lcall
inc
or
jl
mov
add
rcrb
pop
jmp
or
or
add
and
in
and
mov
add
push
daa
ficomps
sub
push
jae
test
adc
lret
cmc
add
dec
data16
loopne
loope
jbe
lds
loope
adc
sbb
pop
jnp
jp
mov
das
stos
loopne
inc
or
fsubs
ficompl
dec
test
add
movsb
repz
cltd
je
jg
pop
cmp
inc
jnp
ret
xchg
ret
add
in
dec
mov
cmpsl
mov
fs
push
sti
add
ja
mov
rcll
in
pop
add
sub
dec
add
fadds
add
push
in
add
stos
je
add
and
pop
adc
jo
mov
imul
cmp
lods
add
rcrl
add
jg
pop
pop
mov
jns
sub
dec
sbb
pop
pop
add
and
ror
sbb
test
xor
add
shll
ret
insl
sbb
das
adc
clc
cmc
in
xchg
xchg
scas
adc
fdivp
mov
dec
pop
pop
pop
adc
sbbl
adc
mov
jmp
xor
stc
cmp
add
out
loop
xlat
filds
movsl
scas
pop
xor
inc
jno
add
in
mov
or
add
pop
xor
sbb
adc
bound
cmp
mov
pop
int3
push
jmp
mov
subb
iret
adc
and
add
test
shlb
mov
stc
cmpsb
mov
jg
cmc
mov
add
arpl
fisubrl
iret
ret
rcl
shll
sbb
add
pop
ljmp
aaa
and
mov
add
sti
sub
push
push
cmp
add
add
mov
jo
add
mov
or
and
leave
pop
movsl
call
pop
outsl
dec
subb
mov
ljmp
xchg
into
xchg
or
add
push
add
add
rcrb
cmpb
inc
xor
aaa
cld
lds
lret
stos
movsl
push
and
icebp
repz
dec
loopne
int
push
add
mov
test
cwtl
push
aam
mov
scas
sti
hlt
sub
or
xchg
add
push
mov
popf
pusha
jmp
push
sub
cmp
ss
mov
movb
and
add
adc
inc
add
lods
mov
imul
insl
hlt
adc
xor
xchg
add
mov
pop
add
push
rolb
mov
nop
fdivrs
cltd
ret
inc
out
add
movl
nop
cmpsb
out
or
add
xchg
mul
loopne
or
nop
add
fucomi
popf
mov
scas
rcll
pop
ret
pop
popa
inc
push
mov
jecxz
aad
jbe
inc
movl
mov
or
jo
mov
and
cmp
in
outsb
call
pusha
mov
inc
fwait
pop
add
xchg
mov
hlt
mov
sub
xor
loope
clc
sbb
sub
scas
xchg
add
mov
pop
add
ja
inc
es
add
add
lods
jmp
in
testl
repnz
push
lret
pushf
xchg
add
out
push
fildl
add
add
jno
fwait
cmpsl
jecxz
loopne
test
insl
push
fdivrl
inc
nop
repz
push
add
pop
add
xchg
scas
loope
cmp
pop
mov
add
insb
pop
js
cwtl
call
add
mov
push
test
test
cwtl
lods
inc
inc
add
inc
stos
leave
add
add
out
xchg
xor
add
jmp
lret
insl
clc
loope
cli
add
xchg
mov
sub
mov
jg
repnz
int
dec
ret
push
test
jl
ss
cmp
roll
dec
cmp
push
pop
shlb
and
fiaddl
lea
add
mov
add
add
pop
pop
add
xchg
inc
ret
hlt
leave
pop
cmpsl
add
and
mov
add
fs
inc
incb
int
mov
int3
jecxz
pop
add
sbb
add
out
ss
std
mov
xlat
mov
and
lods
inc
adc
loope
and
in
xor
imul
and
push
sub
and
popf
add
repz
adc
mov
jge
filds
push
add
mov
daa
push
push
mov
popa
shl
mov
xchg
rcrb
dec
or
mov
xchg
int
add
cmc
ret
jno
pop
push
add
adc
ja
dec
lods
inc
sbb
xchg
mov
pop
and
add
popa
mov
adc
lock
iret
lahf
mov
adc
adc
pop
add
movsl
jl
jmp
mov
or
roll
jecxz
clc
xor
fcmovnbe
add
push
or
mov
mov
inc
arpl
enter
add
mov
pushf
add
cmp
add
add
or
fadds
fildll
fnstsw
orb
jl
mov
adc
movl
pop
jne
je
shr
jnp
xor
dec
sahf
sbb
mov
ja
std
mov
and
add
shrl
ret
sbb
test
call
xor
stc
enter
adc
jo
lahf
je
clc
cmp
test
sub
call
add
imul
and
and
sbb
push
inc
fs
mov
adc
mov
mov
mov
push
push
dec
add
iret
jb
ds
jmp
fidivrl
inc
lea
out
add
hlt
pop
mov
or
inc
out
fsts
rorl
pop
and
cmpsb
repnz
pop
rolb
dec
fwait
pop
popa
adc
dec
mov
rcll
in
mov
ret
sarl
adc
das
pop
jmp
or
jl
and
cs
or
ljmp
mov
icebp
gs
mov
jecxz
or
or
xchg
add
loope
xchg
mov
out
lds
pop
xchg
or
test
stc
dec
insb
add
idiv
and
cmc
sub
push
sbb
daa
ret
enter
mov
add
or
jno
mov
cmc
xor
sahf
jae
in
int3
popf
and
mov
dec
lods
xchg
out
cmpb
shrb
daa
mov
movsb
pop
push
inc
pop
jne
add
push
rolb
cmp
fldcw
sbb
add
mov
in
and
xchg
mov
sbb
inc
ficompl
sbb
jmp
loope
xor
dec
inc
insl
or
aaa
mov
cmp
cli
daa
fnsave
inc
incb
pop
cmp
es
je
push
bnd
mov
pop
int
inc
push
cld
sub
leave
or
fptan
jbe
sbb
xchg
lret
in
or
inc
add
lock
add
xor
mov
sbb
or
xor
and
jnp
xor
dec
add
aas
movsb
es
iret
mov
and
push
mov
mov
add
cmp
out
ficomps
fnstsw
aas
loopne
jecxz
add
xchg
das
call
add
cmp
jae
mov
mov
movq
sbb
sti
arpl
xchg
inc
rcl
cmp
pusha
cmp
int3
cmc
mov
mov
fs
and
dec
popa
test
aaa
add
ffree
push
push
mov
mov
orl
add
xchg
divb
mov
mov
je
mov
sbb
in
add
jle
insb
add
inc
mov
lds
jne
add
inc
out
pop
sahf
or
addr16
adc
mov
adc
insl
int
add
test
lods
addr16
fwait
clc
mov
sbb
mov
mov
outsl
loopne
xchg
scas
jnp
sbb
xor
add
mov
ja
add
xchg
outsl
jge
fisubl
loopne
daa
out
sub
cltd
repnz
les
movsl
sbb
or
cltd
mov
lds
out
out
adc
sub
faddl
ja
rorb
jg
add
add
pop
mov
mov
cmpsl
cmp
pop
sub
ret
shlb
inc
int
popf
cmpl
leave
in
cmc
add
cmp
js
xor
adc
pusha
push
pop
outsl
test
jo
add
push
jecxz
fiadds
cltd
lahf
cli
insw
dec
add
jne
push
lock
adcl
lret
add
test
aad
mov
dec
enter
lds
div
sahf
or
push
mov
std
mov
pop
mov
lock
aas
int3
push
shll
stos
pop
scas
add
sub
jge
dec
nop
sti
mov
fstpl
jmp
shrl
int
push
ret
ljmp
mov
inc
add
cmp
popa
aaa
sbb
dec
adc
and
and
movsl
add
enterw
jecxz
loope
xchg
xlat
push
sbb
mov
sti
xchg
mov
popa
loope
shlb
jo
negb
ljmp
mov
and
pop
jo
add
cwtl
mov
adc
sbb
mov
sub
out
rol
or
mov
adc
add
sbb
mov
sbb
add
fsubl
insb
add
fs
mov
ret
push
jg
ja
xchg
adc
lahf
add
mov
mov
dec
addr16
test
jl
aaa
mov
sbb
inc
lahf
pop
sarl
stos
mov
mov
or
mov
test
pop
fsubrl
sbb
mov
xchg
cld
add
mov
lret
testl
xchg
inc
push
cli
inc
push
insb
push
rol
pop
shr
add
out
daa
jecxz
stc
mov
pop
jne
movsl
mov
push
mov
je
or
in
jp
jae
xor
mov
loopne
movsl
fisubrl
add
insl
arpl
pusha
and
ss
xchg
adc
dec
in
jne
ljmp
je
fcomps
pop
sub
scas
add
jnp
daa
out
or
push
xor
addb
xor
sub
std
insb
inc
fst
ficoms
add
sbb
lds
mov
sbb
push
out
sub
jo
dec
cmp
loope
fisubrl
sbb
push
les
hlt
shlb
stos
std
jp
in
clc
pop
decb
sub
add
out
mov
add
push
lock
and
add
cmp
sarl
negb
test
add
inc
inc
xchg
mov
and
fcmovb
stc
cmp
movsb
repz
pop
pop
mov
sub
dec
mov
adc
cs
and
sbb
call
mov
jp
sbb
and
inc
lds
xor
jmp
insb
or
add
xchg
lret
jp
jl
lods
mov
adc
push
mov
inc
sarl
push
ljmp
repnz
loopne
xor
arpl
jg
out
andb
fwait
mov
cmp
out
pushl
push
xchg
pusha
add
push
push
and
sub
pop
in
push
cltd
jne
push
scas
mov
loop
sbb
pop
dec
or
add
pop
adc
loopne
outsl
jg
or
inc
xlat
add
out
iret
jl
adc
js
push
or
faddl
bound
push
add
sub
and
push
jbe
sbb
lea
aad
add
pop
aas
loope
imul
or
out
and
add
xchg
insl
iret
dec
push
mov
inc
mov
movl
adc
ja
mov
inc
int3
mov
call
pushf
jae
adc
in
arpl
add
push
sahf
leave
fiadds
mov
rorl
cs
stos
scas
push
addl
or
cltd
pop
xchg
leave
dec
enter
nop
add
add
mov
repz
rolb
adc
fsts
out
sbb
imul
or
sub
out
cld
popa
gs
inc
ja
pusha
test
cmp
jecxz
adc
add
sub
cmp
fcoml
jecxz
iret
sbb
xchg
sarl
stc
sbb
xor
lock
inc
push
mov
lcall
sbb
inc
js
pusha
add
xor
es
mov
jmp
sub
sbb
mov
cmp
test
pop
lahf
faddl
shll
movsb
pop
xchg
jae
or
fldcw
mov
loope
lret
loopne
adc
dec
mov
pop
add
pusha
jns
pop
das
and
jnp
ret
sbb
inc
or
jp
sbb
xchg
ret
pop
xor
les
je
add
xlat
mov
js
repz
sti
or
add
mov
loopne
mov
das
dec
add
in
iret
mov
ret
test
nop
xor
ljmp
inc
aam
cmpsb
adc
cltd
lret
push
xchg
mov
jge
dec
repnz
pop
outsb
pop
add
push
dec
rcr
sbb
aaa
add
arpl
or
cs
loope
inc
add
inc
rcrb
add
mov
add
adc
ja
add
cmpsb
mov
bound
push
add
into
cmpb
into
or
or
mov
pop
push
mov
movsb
xchg
out
add
push
into
fxch
mov
or
out
leave
fistpll
sbb
aas
push
dec
iret
repz
and
dec
js
pop
cmp
add
sub
fisttpl
and
repz
add
sub
imulb
out
loopne
jl
icebp
ljmp
and
cmp
mov
addb
xchg
or
and
ss
test
or
xor
adc
inc
fiaddl
addb
push
add
dec
orl
inc
lcall
jb
add
pop
enter
dec
test
or
mov
push
push
dec
dec
adc
sbb
push
int
push
subl
ret
cvtps2pi
inc
stos
int
stos
leave
rol
jns
push
stos
in
enter
push
loope
dec
fbstp
out
lahf
add
lods
test
lret
rcll
movsb
mov
lret
scas
pop
rorl
push
mov
xchg
mov
cmpb
outsl
or
lods
ret
aaa
jg
sbb
push
inc
or
and
push
rcll
and
add
call
sub
aas
leave
dec
lods
jae
in
sbb
mov
das
outsb
stos
mov
std
mov
xchg
bound
mov
fimull
out
mov
inc
fmul
shrl
or
dec
add
mov
lods
insl
daa
or
call
enter
insl
add
mov
add
push
mov
push
lret
mov
ljmp
adc
mov
mov
dec
pop
push
or
icebp
and
lods
or
pusha
adcl
adc
and
mov
or
add
imul
ret
and
pop
adc
or
and
in
mov
sbb
push
sbb
add
and
and
push
mov
add
loopne
inc
add
loopne
mov
leave
pop
cmp
push
test
mov
mov
ret
jo
in
push
int
sahf
push
add
leave
cltd
mov
cmp
inc
lods
mov
jg
cmp
pop
mov
xrelease
xor
inc
adc
mov
pusha
outsl
pushl
sub
push
fistpll
in
mov
and
mov
les
lea
roll
xchg
lahf
arpl
jo
es
leave
add
leave
int3
xchg
sub
sub
repnz
fcmovbe
jmp
and
cld
push
dec
std
or
xchg
sarb
adc
js
lahf
rol
add
leave
mov
inc
stos
cmp
mov
js
test
lret
loopne
and
cmpsb
and
data16
shlb
cld
pushf
iret
or
and
inc
in
add
inc
or
mov
addr16
sbb
mov
fs
pop
movsb
stos
dec
xor
loopne
mov
in
jae
mov
imul
fwait
push
scas
arpl
insb
pop
outsl
add
or
sub
cld
jge
jle
sub
gs
in
ret
pusha
inc
jl
sub
cmp
sbb
mov
addb
mov
loop
cli
pop
add
xchg
shlb
cmp
sub
loopne
mov
push
addr16
xor
repnz
inc
arpl
lods
and
jno
icebp
push
jecxz
cmpsl
cs
insl
mov
cmp
push
cmc
jecxz
jae
sbb
aas
mov
cmp
jbe
ret
xor
adc
lods
adc
jbe
adc
stc
int
sub
sub
loope
insb
mov
or
or
shl
adc
fwait
sub
mov
cmp
mov
sbb
or
cmp
test
insb
cmp
mov
loopne
out
lods
mov
mov
xor
repnz
mov
fdivrp
inc
mov
popa
and
shll
inc
loope
adc
ss
sub
and
xchg
stos
movsb
gs
test
js
mul
pop
stos
sahf
jl
cmpsl
int
sbb
xlat
ret
subl
loop
stos
imul
add
sub
lds
into
cmpsl
xor
mov
ja
xorb
fld
js
mov
inc
adc
sbb
add
scas
movsl
push
push
sub
test
rorb
fiadds
lret
adc
jge
test
add
adc
in
or
mov
jg
stos
sbb
add
fistpl
sub
arpl
dec
imul
add
sbbb
lods
and
push
dec
adc
mov
imul
pop
push
loopne
add
sahf
mov
sbb
rcrb
push
std
mov
push
and
sub
add
cmp
or
mov
push
int
dec
push
xorl
push
loopne
addb
jne
sbb
in
adc
push
or
mov
popa
test
arpl
inc
and
inc
inc
in
mov
inc
sub
xor
xchg
fisubl
adcl
pop
fwait
jns
stos
clc
fidivs
mov
mov
push
and
lods
jbe
sub
leave
sub
sarb
lea
and
inc
cmp
outsl
lret
or
movsb
mov
cmpl
adc
sub
das
gs
xor
je
push
sbb
dec
adc
add
mov
push
loopne
mov
mov
pusha
shll
dec
jo
mov
cmpsl
nop
pop
mov
push
call
into
lcall
mov
push
loop
out
xor
insb
add
repz
push
jmp
mov
mov
pop
roll
adc
mov
adc
or
push
stos
les
test
outsb
ss
lods
and
and
inc
insb
cld
frstor
popa
addr16
out
sub
test
lods
jle
xor
bound
jge
xor
add
add
xor
xorb
mov
push
shl
mov
xchg
notl
xor
inc
and
fimuls
rorb
lahf
out
bound
cld
mov
sub
into
sbb
pop
push
leave
and
dec
or
jmp
inc
sub
sub
ret
lods
and
and
mov
movsb
xchg
lds
test
inc
jno
jne
mov
lret
ja
or
jno
add
mov
xchg
mov
and
shlb
sub
lret
fistps
push
sub
popf
cmp
push
fldln2
pop
jecxz
xor
or
push
add
scas
push
xchg
add
or
mov
shlb
mov
add
pop
dec
cwtl
push
sbb
fstl
daa
cld
out
movsb
mov
bound
add
adc
bound
test
int3
dec
arpl
xchg
and
sbb
movsb
test
sub
stos
aad
pop
pop
stc
dec
cmpsl
dec
insb
ljmp
mov
xchg
mov
inc
out
movsb
push
mov
dec
xchg
cmp
andl
xchg
and
adc
test
mov
xchg
pop
ja
cmp
pusha
sbb
dec
pop
xor
es
loop
xchg
push
xchg
mov
arpl
pop
add
mov
loopne
cmpsb
mov
push
jne
mov
or
insl
pusha
mov
mov
xor
jne
jo
pop
xchg
cmc
loope
jne
dec
push
dec
lds
add
or
test
adc
xchg
pop
cmc
lods
mov
lret
jbe
or
adc
ficoml
out
push
cli
xor
arpl
mov
pusha
xor
inc
and
push
loope
cmp
es
popa
out
dec
lahf
add
pop
inc
jecxz
inc
loope
pusha
loopne
or
adcb
mov
roll
mov
mov
sbb
imul
mov
lahf
divl
pand
fists
or
and
jo
std
fdivl
mov
ret
push
add
cmp
sbb
sbb
add
adc
mov
add
faddl
dec
jnp
inc
pusha
stc
sbb
and
pop
in
pushl
add
jae
or
cmp
jmp
fidivrs
sbb
dec
dec
xchg
loopne
and
adc
xchg
sahf
addb
loope
push
or
sub
cmp
xor
xor
or
add
sbb
adc
dec
xchg
push
add
stc
daa
imul
psrlq
push
add
sahf
mov
loopne
in
mov
xchg
into
sub
add
add
stos
add
lock
scas
test
outsl
add
rcrb
shl
repz
mov
dec
push
cmp
or
inc
aas
add
icebp
mov
fnsave
movsb
mov
jecxz
adc
lock
out
out
jg
js
pop
sub
hlt
leave
test
mov
add
std
lret
or
pop
add
aaa
mov
inc
mov
or
repz
into
lods
add
dec
gs
xchg
cwtl
jecxz
xor
ja
jnp
pop
inc
xor
add
mov
loope
add
inc
movsl
mov
popa
and
sub
jecxz
sub
mov
add
out
mov
add
hlt
adc
xchg
jl
pmulhuw
popa
out
inc
lods
and
arpl
add
sarb
dec
andl
scas
add
sbb
dec
and
cmp
mov
les
cmp
adcl
add
or
add
mov
fs
add
pop
mov
add
xchg
jb
cld
fmuls
add
hlt
jge
data16
loope
aaa
add
adc
push
pop
pusha
call
mov
ret
push
icebp
lcall
inc
dec
cmp
push
add
daa
iret
jae
adc
adc
add
lcall
in
adcl
das
fildll
ss
ret
dec
xchg
jecxz
aad
pop
inc
add
movsl
loopne
lea
fistpll
jp
sahf
pop
xor
cmp
xorl
sub
cld
xor
lea
inc
pop
fisttpll
iret
cmp
cmp
push
nop
mov
mov
add
addr16
mov
sbb
add
bound
mov
sti
cmpsl
sarl
loopne
test
jl
or
addl
stos
xlat
fcoml
sti
add
pop
jbe
mov
pop
sahf
push
jg
adc
rclb
add
stos
inc
test
call
idivb
ds
adc
lds
test
loop
loope
jmp
mov
jne
pop
dec
ss
push
mov
sbb
bound
add
xchg
loop
into
mov
add
mov
sbb
mov
les
xor
add
repnz
pop
add
add
fwait
test
stc
scas
inc
enter
xchg
inc
into
push
fnstcw
lds
and
mov
add
cmpsb
loope
lock
mov
or
movsb
add
fcoml
into
loopne
js
ret
adc
clc
mov
jp
pusha
insl
sub
push
sbb
push
jge
imul
pop
cld
xchg
xchg
lahf
mov
jle
sbb
negb
imul
cmc
lcall
int3
mov
fnstenv
in
loopne
fildll
mov
repnz
cltd
xchg
movsb
inc
inc
sbb
inc
add
out
into
mov
xchg
pop
and
adc
pop
jbe
ljmp
adc
inc
cmp
xchg
scas
inc
je
and
mov
sbb
add
or
add
test
mov
ffree
or
xlat
pusha
sub
sbb
fidivl
adc
fs
push
std
es
cmp
inc
inc
xchg
inc
push
lret
dec
and
cltd
mov
iret
cs
xchg
fdivr
add
and
cwtl
mov
and
rcll
fwait
int3
xchg
add
or
push
mov
add
mov
and
jo
stc
jmp
add
aaa
mov
xor
add
cmp
lea
ret
xchg
dec
sar
push
push
cmc
inc
inc
sub
xchg
int
es
icebp
mov
call
xor
cld
cmp
das
test
je
push
sub
test
add
pop
push
add
xor
imul
stc
adc
xchg
push
jnp
iret
rcll
pop
lahf
cmp
push
roll
xlat
icebp
mov
ficompl
pop
ja
pop
adc
mov
adc
adc
mov
adc
out
inc
add
popa
push
cmp
aam
sub
inc
test
and
test
xchg
jns
ucomiss
in
or
or
jl
add
or
lods
enter
add
sbb
repz
pusha
add
sub
dec
mov
dec
adc
jo
ja
xabort
movsb
std
or
push
mov
cmp
sbb
or
ds
setl
jae
and
xor
add
in
pop
mov
shl
add
cli
das
xor
jne
add
adc
add
and
jge
mov
inc
add
js
push
repnz
fsubrl
add
xor
mov
push
incl
mov
idivl
addl
inc
jl
jae
sbb
mov
add
in
stos
and
test
call
aad
scas
cmpsl
add
cmp
shlb
or
xchg
repnz
out
dec
mov
in
popa
adc
imul
xor
push
cmp
inc
add
movsl
mov
xor
adc
or
add
inc
lret
adc
mov
hlt
add
rolb
loop
mov
movsl
mov
jbe
sbb
mov
insb
outsl
pusha
testl
mov
adc
add
pop
test
bound
fists
mov
in
lret
sub
ficomps
lods
jno
insb
mov
add
mov
addr16
cli
in
jg
ja
pop
outsb
daa
loop
shlb
int
or
popf
xlat
mov
aaa
add
cmp
test
add
je
mov
sub
sub
mov
push
add
iret
push
inc
dec
jmp
add
shrb
js
cmp
lods
pushl
add
sub
orb
add
xchg
nop
pop
mov
cmp
add
ljmp
or
daa
aas
add
mov
mov
cmc
jbe
cltd
fnstsw
sbb
jle
mov
and
or
add
dec
add
shrb
add
adcb
in
fs
mov
xchg
in
dec
push
adc
mov
pusha
test
and
add
dec
int3
gs
decb
jle
push
sbb
neg
cmpsb
in
cmp
dec
xchg
inc
add
out
mov
sub
xor
adc
pop
jnp
daa
fsub
add
in
push
add
rorb
jl
sbb
repz
jmp
mov
lds
stos
outsl
xor
daa
in
lods
jg
xchg
mov
dec
faddl
xchg
sub
sbb
add
pushf
mov
cmp
and
and
bound
nop
sbb
mov
mov
mov
icebp
mov
das
add
ror
pop
sti
ljmp
or
hlt
cmpsl
mov
add
popf
call
lds
fldl
add
or
fs
int
lcall
push
fists
mov
dec
scas
jo
cmp
enter
stos
xor
nop
insl
add
sbb
pop
orl
add
pop
xchg
sbb
cs
ss
xchg
arpl
iret
xor
jp
inc
and
dec
or
mov
xchg
lret
add
lcall
dec
xchg
adcl
pop
inc
add
idiv
add
mov
push
add
mov
js
hlt
add
in
jnp
cli
imul
sbb
adc
jbe
xchg
in
mov
mov
jp
push
lea
cmp
fnstsw
mov
repnz
cmp
and
xchg
insl
mov
je
stos
std
fisubrs
mov
add
mov
mov
jb
push
add
iret
js
dec
in
jecxz
inc
popf
mov
test
jmp
inc
arpl
ret
jl
adc
pop
xchg
loopne
lret
jb
into
movsl
mov
dec
mov
xchg
cmp
jbe
cld
arpl
and
lds
adc
add
or
pop
xor
outsl
dec
sbb
sbb
xchg
cld
pusha
and
mov
or
and
into
mov
pop
jns
jno
fiadds
pop
scas
mov
push
add
jne
add
movsb
lret
cli
popa
xchg
incl
and
jl
and
add
adc
ljmp
or
add
cmp
dec
mov
pop
int
pop
jg
mov
add
sbb
out
pop
shl
cmpb
hlt
jo
ret
mov
pop
rcr
outsb
sbb
add
mov
icebp
push
cmpsb
andl
jno
or
add
dec
push
xor
pusha
rcrl
ljmp
inc
sub
jg
rorl
sub
out
lret
mov
sarb
add
cwtl
mov
inc
sbb
loope
jne
adc
das
sahf
pop
into
movsb
add
pop
nop
and
add
mov
int
xchg
fmull
sbb
cwtl
andl
push
icebp
and
sub
aaa
imul
loopne
sub
push
adc
cmp
xor
and
loopne
lock
sbb
imul
loop
fisttpl
shrl
add
and
loope
sbbl
les
sbb
orl
in
dec
mov
pop
subb
jo
sbb
mov
mov
push
data16
dec
xchg
add
xchg
pop
loop
or
mov
loopne
cmpsl
add
imul
ljmp
add
pop
mulb
mov
leave
std
add
dec
mov
pop
mov
js
sbb
add
push
mov
fisttpl
in
add
les
cmp
xor
push
bound
testl
mov
not
pusha
sahf
les
lods
scas
bound
add
inc
insb
xchg
hlt
mov
add
pop
stos
scas
nop
push
mov
sbb
push
add
jg
cwtl
ss
in
fldenv
jle
sub
and
jo
shr
roll
add
repz
add
idiv
push
add
jmp
xchg
jo
cmp
add
inc
in
into
push
pop
pop
testb
addl
ficoms
dec
adc
pusha
fildll
mov
shrl
inc
sub
mov
hlt
sub
insb
xor
add
insl
fiadds
mov
ffree
add
ss
inc
stc
or
add
sbb
and
dec
push
mov
add
dec
loopne
xchg
stos
sbb
jns
sahf
out
add
xchg
adc
or
adc
add
sub
clc
mov
mov
push
mov
and
out
sub
push
js
loopne
adc
lret
fldl
sahf
inc
call
fcmovbe
mov
xchg
add
les
int3
loope
repz
add
xor
dec
and
mov
lods
jp
push
sbb
pop
fiaddl
mov
inc
pusha
hlt
rol
cmp
je
imul
and
jg
mov
aad
add
push
loopne
out
out
xor
inc
cld
jg
and
cmc
push
add
out
ret
sbb
les
pop
lea
push
sbb
fldenv
and
mov
aad
and
add
xchg
inc
fsubl
dec
or
and
repnz
sbb
std
cmpsb
jmp
lods
ja
add
xor
cwtl
loopne
jb
dec
fucomp
fs
push
mov
js
fcmovnbe
xor
adc
rcll
jb
fdivp
and
mov
jo
or
fwait
add
xchg
jbe
sub
push
add
daa
jmp
scas
dec
popl
cmp
mov
add
icebp
mov
jne
add
inc
addr16
clc
adc
adc
add
lahf
dec
fmulp
rorb
xchg
inc
mov
lods
add
xchg
sub
mov
scas
bswap
add
add
add
mov
into
mov
mov
mov
movsb
movsl
add
cmp
mov
add
lcall
pusha
aaa
jns
int3
rclb
pop
pusha
xchg
loopne
mov
inc
lahf
adc
sbb
sub
stos
inc
rcrl
fsubr
mov
cltd
mov
cs
or
jns
dec
mov
adc
add
push
rcrl
sbb
xchg
in
add
jg
inc
push
xchg
icebp
xor
xor
lods
xchg
add
jbe
outsb
jmp
cmpsl
or
sub
bound
pop
pop
sbb
or
mov
pusha
adc
add
ret
cmpsb
je
out
fistps
or
xchg
shrb
sbb
fists
popa
lcall
out
out
jbe
or
jl
std
adc
and
ja
jb
cwtl
sbb
xchg
and
arpl
xlat
inc
clc
mov
push
repz
or
shl
add
popf
loop
lds
jge
add
and
scas
add
rorb
add
adc
pusha
mov
add
inc
mov
mov
test
adc
jnp
ds
popf
add
hlt
sbb
push
cwtl
inc
ret
add
sbb
or
mov
mov
ret
pusha
arpl
or
mov
mov
sbb
push
dec
push
mov
adc
inc
std
push
cmc
add
nop
das
and
scas
adcb
xor
sub
sti
dec
add
jb
jge
arpl
xchg
cmpsb
add
test
cmp
imul
or
jns
adc
and
add
fimuls
into
sub
adc
test
arpl
push
repnz
or
mov
adc
cmp
loop
sub
and
rcrb
subb
mov
pusha
dec
add
and
sub
out
mov
mov
scas
es
push
andl
xor
fwait
jecxz
add
push
xor
sbb
dec
adc
sub
lods
xchg
gs
fwait
shll
cwtl
xor
pusha
out
pop
lret
mov
les
xchg
mov
out
jns
lock
adc
mov
int
movsl
push
mov
loopne
fimuls
pop
sbb
mov
mov
or
xor
add
cmp
loopne
leave
dec
xchg
adc
lcall
dec
inc
xor
pop
sbb
jmp
fcompl
aas
sub
mov
imulb
out
add
mov
add
fcoml
add
or
pushf
pop
cld
xchg
cmp
or
pop
add
add
and
dec
mov
outsb
popf
repnz
xchg
std
xor
jg
push
das
sbb
les
jne
sbb
cmp
fisttpll
cmp
lock
adc
add
add
jo
xor
cmpl
xor
fs
inc
add
jecxz
push
sub
or
add
arpl
cmp
cmp
cs
fiadds
sbbl
test
add
gs
fsubs
jbe
lret
into
push
pop
jb
and
add
adc
cmp
aas
jmp
dec
inc
adc
test
sbb
sahf
add
ljmp
stos
and
loopne
neg
imul
or
or
and
outsb
sub
lret
inc
dec
sbb
push
nop
push
popa
pop
sti
sbb
mov
mov
push
mov
popf
fs
cmpsl
mov
das
pop
xchg
outsb
jge
xchg
mul
sub
push
and
daa
xor
pop
sbb
movsb
stc
aam
add
sub
lcall
xor
mov
mov
adc
fisubs
roll
xor
xor
or
add
push
test
mov
jecxz
pop
jecxz
xchg
adc
outsb
jbe
sbb
xchg
ret
or
stos
stos
roll
out
jae
add
adc
pop
je
ficompl
jmp
add
jo
aas
mov
out
in
add
addr16
icebp
sbb
lcall
mov
iret
pop
flds
rcrl
push
pop
loop
xor
and
push
test
jp
add
ds
add
cmc
jg
mov
add
inc
pop
rcrb
js
pop
pusha
out
cmpsb
dec
fldt
pop
fs
repz
sbb
mov
loope
cs
shrl
lahf
mov
dec
add
fiadds
adc
aaa
push
sub
je
sbb
add
ror
inc
pusha
icebp
test
add
popa
sbb
or
pop
xlat
mov
add
sahf
and
add
push
ret
add
jle
or
push
mov
add
xchg
ret
jno
dec
jbe
loope
adc
add
or
jae
pop
dec
les
add
das
cmp
xlat
addr16
inc
or
mov
and
or
inc
jecxz,pn
pop
ret
flds
rcr
add
xchg
fldcw
stc
mov
add
leave
hlt
push
pusha
out
lea
insb
negl
fildl
std
cmpsl
icebp
add
cltd
movsb
adcl
fsubrs
loopne,pt
push
cs
ds
xor
mov
adc
xchg
ss
fmul
pop
lea
popa
xchg
inc
adc
xor
lcall
jl
jne
mov
lds
int3
cmpsl
rclb
cmp
call
ror
lret
leave
inc
add
icebp
cmp
add
inc
addr16
inc
adc
mov
mov
fdivs
and
xorl
rcrb
cwtl
outsb
loope
sub
sbb
idivb
xchg
mov
repz
add
add
mov
imul
cmp
loopne
pop
sbb
adc
pusha
movsb
pop
sbb
pop
cmpsb
push
das
cs
pusha
mov
into
scas
inc
insl
popf
clc
into
add
cld
or
fwait
push
add
mov
stc
fimuls
outsl
orl
pop
movl
add
insb
xor
test
sbb
xor
jg
adc
add
sbb
xchg
clc
pop
add
std
inc
lcall
negl
cmp
add
push
mov
add
int
push
leave
enter
xor
jmp
fxsave
dec
lods
mov
xor
and
insl
pop
and
insb
mov
incl
std
xor
mov
fstl
jb
and
mov
mov
push
imul
inc
jne
add
les
loopne
mov
jl
add
subl
mov
and
pop
adc
hlt
std
sbb
outsl
daa
lcall
das
push
or
int3
or
adc
scas
ja
jno
prefetcht2
in
notl
je
add
push
sti
mov
ja
enter
jecxz
popa
push
ret
or
in
orb
mov
push
adc
and
add
cmp
and
jo
movlps
mov
dec
push
add
testl
add
movsl
icebp
aas
ss
and
add
cli
adc
addr16
add
aas
xor
pop
add
mov
lahf
test
jae
in
xor
jnp
inc
or
mul
cmp
fmuls
or
lret
jmp
xor
filds
scas
int3
aad
jmp
aam
test
imul
add
xor
cld
fldenv
imul
xchg
pushf
loopne
test
enter
aam
rorl
notb
cmp
pop
lret
ret
addl
add
xor
xchg
daa
mov
ja
movsb
ret
pop
popf
add
and
in
test
mov
cmp
je
ficoms
repnz
pusha
cli
mov
adc
arpl
mov
pop
shrb
adc
sahf
loope
mov
xor
inc
lock
or
jl
insb
add
imul
popa
adc
jb
push
sub
xchg
dec
fwait
loope
sar
sbb
out
or
add
xor
jns
rcrb
dec
leave
int3
adc
loope
and
mov
test
in
add
adc
out
pusha
cmp
mov
lahf
into
cli
adc
cli
shlb
in
adc
loopne
add
xabort
mov
sbb
pop
in
push
push
cltd
ret
shll
stc
insl
mov
push
andb
add
pushf
das
sbb
inc
add
add
leave
lods
add
rcll
xchg
sub
cmp
and
add
or
cmc
xlat
fsts
mov
iret
cwtl
out
cmpsl
sbb
repnz
sub
push
xchg
and
in
outsb
add
int3
add
mov
mov
jmp
orl
fwait
ret
pop
loope
hlt
xchg
or
bound
cs
add
in
add
pusha
xchg
test
dec
repnz
or
add
jg
sbb
mov
lret
cwtl
dec
fadds
icebp
cmp
xchg
out
jmp
sarl
or
adc
xchg
sti
loopne
jmp
or
stos
dec
add
ret
test
sbb
repnz
push
and
sbb
clc
push
mov
or
pop
add
popa
jecxz
mov
lea
add
push
ds
mov
lock
cmp
arpl
adc
push
add
adc
out
daa
xchg
bound
mov
movsb
pop
pusha
daa
push
cmc
fistl
inc
pusha
mov
rcrb
cmp
cmp
adc
push
mov
mov
repz
fiadds
fadd
or
dec
repnz
out
pop
or
daa
pop
loopne
das
fdivs
dec
sahf
add
mov
fsubrs
call
shll
jmp
sbb
adc
mov
and
xor
inc
test
mov
loope
xchg
popf
push
add
inc
xor
lods
add
add
and
test
cmp
movd
lcall
inc
or
call
add
lea
add
cmp
sti
adc
bound
les
cmp
mov
inc
out
push
xchg
cmp
jns
cwtl
or
add
sahf
xchg
movsl
aas
mov
push
xlat
insl
push
dec
pusha
add
sbb
mov
repnz
int
add
and
arpl
shrl
outsl
dec
lds
jle
mov
mov
add
aas
xor
into
decl
lds
pop
jg
call
add
push
push
lahf
shrl
andb
idiv
adc
mov
add
push
sub
inc
cmpsb
add
cmp
roll
or
cmp
rcl
add
movsb
push
fsubrl
sub
sbb
clc
outsb
mov
stos
add
aaa
pop
popf
and
or
repnz
adc
pop
mov
ret
inc
dec
das
xchg
gs
insb
test
fildl
xchg
dec
sbb
add
jne
jns
pop
pop
or
push
cmp
push
pop
pop
inc
iret
add
sbb
mov
xor
or
push
out
and
inc
sub
add
cmp
out
dec
outsb
imul
adc
push
fnstsw
and
and
xor
cmp
loopne
incl
mov
xor
dec
jnp
cltd
loopne
das
and
dec
or
movsb
pushf
push
out
cmc
push
lcall
inc
pop
add
pushf
mul
loope
test
scas
jo
inc
loopne
mov
rorl
aas
fiaddl
notl
mov
ds
cmp
cmpsl
add
ljmp
sbbb
fiaddl
inc
add
out
out
mov
cli
and
mov
sub
arpl
test
and
inc
add
cmp
popa
cwtl
aas
out
and
stos
and
fstpl
icebp
dec
inc
jae
call
sarl
hlt
rcl
jmp
fiadds
fnstenv
or
jnp
imul
and
xor
and
mov
adcb
cltd
add
add
pop
test
add
cs
add
inc
test
clc
pop
add
or
movsl
verr
mov
mov
push
xor
mov
adc
cmp
scas
adc
sbb
out
push
sbb
mov
dec
insl
mov
out
push
roll
enter
fadds
in
jge
sbb
cmovnp
push
mov
add
aam
dec
add
in
push
add
lock
jae
add
scas
inc
pop
repnz
xchg
mov
adc
add
mov
pop
sub
stos
pop
adc
test
into
sbb
cmp
sahf
adc
xor
pop
pop
mov
jbe
dec
jp
inc
pop
xchg
cmpsb
dec
sbb
cmp
hlt
mov
mov
add
pop
lock
test
push
bswap
pop
push
add
aad
push
add
xchg
or
arpl
jp
add
outsl
mov
repz
mov
add
xchg
stos
jmp
add
test
add
fcoms
xor
shlb
scas
popa
fidivrs
enter
and
inc
mov
sub
pushf
lds
push
nop
mov
imul
add
outsb
inc
lea
lret
xor
pop
sbb
pushf
xlat
ljmp
mov
pop
push
lret
test
mov
adc
in
add
test
test
ljmp
add
call
pop
pop
dec
sub
jne
and
add
lcall
xor
movsl
add
mov
lret
xor
insl
cltd
sbbl
push
xchg
push
inc
pop
sub
test
jb
loopne
mov
jo
sbb
jmp
in
add
ljmp
loope
inc
cwtl
daa
imul
add
adc
mov
sbb
xor
lahf
aam
xchg
add
in
aas
jbe
sbb
aaa
sahf
add
frstor
fdivr
movl
mov
inc
add
aam
loop
into
mov
jmp
fnstcw
movsl
enter
pop
data16
mov
daa
ret
inc
inc
test
div
std
lds
jbe
mov
inc
add
add
mov
data16
cli
xchg
add
into
pusha
jbe
lea
dec
scas
sbb
xchg
lods
cmp
js
adcl
sti
and
and
fnsave
add
movsl
aad
ljmp
add
pusha
iret
push
xchg
mov
arpl
scas
xchg
mov
push
inc
cmp
or
popa
std
dec
clc
jp
insb
rcrb
popf
jae
incl
je,pt
mov
push
cmp
add
xchg
hlt
out
sbb
adc
sub
call
aam
mov
sbb
cmp
jmp
lods
add
arpl
add
or
xchg
mov
and
sbb
push
add
sarl
pop
loope
add
push
sub
imul
mov
scas
add
xchg
lret
icebp
popf
sub
rcrb
pop
out
std
repz
mov
or
add
pop
imul
add
in
call
mov
loope
fsubs
add
push
add
enter
or
mov
xchg
push
jo
stc
add
filds
cmp
outsb
test
and
sbbl
es
and
add
push
xchg
into
dec
int
scas
daa
inc
xchg
icebp
adcl
mov
add
ds
loope
add
add
xchg
push
clc
xchg
add
pushf
and
into
in
jle
pusha
pop
add
repnz
js
dec
les
jno
and
dec
flds
mov
rcl
push
imul
mov
test
add
sub
jg
in
xor
cmpsb
loop
test
dec
and
push
jg
pop
inc
pop
es
repnz
or
add
mov
and
test
mov
push
xchg
or
das
test
sbb
fdivrl
inc
fsub
mov
cmp
sub
ret
dec
test
movsl
add
push
js
and
sbb
dec
add
out
imul
sbb
pop
inc
jbe
and
sbb
add
fdivrs
add
ja
adc
cmp
lods
ret
jle
mov
mov
add
push
test
sub
scas
fsub
popf
aaa
add
add
pushf
push
sbb
lods
add
push
adc
lods
push
movl
dec
add
pop
scas
repnz
imul
das
or
pop
popa
jecxz
add
xor
movsb
mov
scas
mov
mov
leave
test
mov
pop
adc
popf
mov
jle
loop
add
and
lds
adc
xchg
add
xchg
cmpsb
dec
add
jl
push
fistl
mov
xchg
sub
cld
in
push
hlt
shl
pop
sahf
sub
stos
sub
data16
push
movsb
xchg
scas
mov
jp
mov
add
inc
add
decb
movsl
add
jle
loopne
sub
mov
out
add
inc
lds
ljmp
bound
testl
bnd
int3
jecxz
fwait
jnp
movsl
push
cwtl
xor
and
fs
sbb
mov
xor
out
pop
adc
mov
cltd
lret
ds
xchg
pop
loopne
or
scas
leave
aas
add
fldcw
xchg
inc
and
in
bound
add
fcmovnu
stos
inc
rclb
divb
dec
ljmp
dec
dec
inc
pop
add
xchg
pop
dec
add
mov
rclb
pop
or
jmp
filds
add
mulb
adc
out
je
lea
scas
cmpsb
add
or
add
dec
adc
cmp
ret
xor
inc
mov
pushf
dec
inc
add
test
jle
mov
in
xor
inc
sub
add
dec
dec
mov
movsl
mov
loopne
jno
push
fiaddl
icebp
push
mov
lcall
dec
repz
push
xchg
mov
aaa
and
nop
inc
in
xchg
leave
and
jne
test
ret
out
inc
test
imul
xor
lea
push
sbb
or
imul
rorl
adc
repz
ljmp
adc
xlat
sub
add
mov
ret
xor
or
mov
mov
adc
push
mov
add
dec
ljmp
and
inc
int3
mov
push
add
popa
jnp
into
adc
add
call
fistps
cltd
xor
add
cmp
fimuls
pop
inc
js
mov
adc
in
adc
inc
loop
mov
add
jmp
add
ljmp
and
mov
jb
ljmp
mov
int
jle
lock
push
xchg
ja
test
mov
xchg
out
push
pushf
popa
and
push
pop
outsb
add
sub
push
xchg
and
fsubs
pop
add
jae
inc
loopne
xchg
loope
out
test
dec
and
stos
adc
add
mov
test
in
fnstenv
hlt
cmpb
or
cmp
loop
movups
out
lret
leave
xchg
ja
std
cmc
and
fimull
or
xlat
comiss
inc
mov
idivb
cwtl
rolb
cld
lcall
out
cmp
icebp
pop
xchg
loopne
mov
call
xchg
rcrb
cwtl
sar
mov
or
and
xchg
ret
jl
fistpl
fists
and
mov
ret
sbb
jle
outsb
int3
pop
add
repnz
pop
sahf
shrb
lock
arpl
cltd
mov
pop
or
mov
mov
in
or
sbb
int3
into
mov
dec
stos
testb
dec
str
push
cltd
movsb
mov
mov
mov
jmp
pop
jge
add
repnz
aad
inc
mov
cmpsl
push
scas
stos
add
pop
dec
outsl
add
and
mov
inc
rclb
adc
adc
loopne
mov
mov
inc
xchg
ss
cmpsb
lock
or
in
jb
int
pop
mov
add
jl
and
lds
pusha
das
std
sbb
lock
jo
cmpsl
sub
mov
or
into
std
sub
loopne
sub
outsb
nop
pop
test
cmp
mov
and
loopne
cmp
adc
and
mov
pop
mov
stc
arpl
dec
jns
mov
ss
and
cmp
scas
add
daa
stos
popa
or
faddl
aas
xchg
loopne
mov
lods
mov
ret
sub
insb
jecxz
jp
js
mov
push
cwtl
cwtl
pusha
dec
add
popf
jmp
loopne
adc
cmpsl
mov
roll
imul
cmp
push
subl
pop
call
iret
jecxz
mov
sbb
insb
test
add
fstps
add
mov
mov
push
insl
lahf
xor
push
add
pop
xchg
jns
pop
adc
shll
jo
push
push
sbb
xchg
push
xchg
bound
adc
jg
push
mov
push
packuswb
lods
lock
aas
loop
jbe
out
push
mov
pop
std
fiaddl
or
mov
pop
lahf
pushf
adc
das
xor
pop
lods
addr16
test
xor
dec
xlat
lret
rcrb
xchg
push
or
leave
xor
xor
out
push
repnz
cli
or
loopne
jle
add
xor
pop
xor
shll
mov
inc
icebp
arpl
sbb
adc
nop
aas
jnp
popa
sbb
cmp
or
pop
and
fstpl
jge
ret
scas
and
xor
pop
add
stos
and
movsl
lahf
mov
or
popa
or
popa
xor
sub
outsb
imul
add
popf
cmp
adc
add
xchg
rclb
pop
cmpsl
xchg
into
add
cmp
lcall
add
test
lret
add
jmp
mov
and
and
jl
or
cmp
add
push
add
dec
add
cmp
inc
loopne
fldenv
push
in
adcl
push
fmuls
pop
stos
add
fucompp
test
and
and
sbb
insl
push
aad
adc
jl
test
out
pop
mov
mov
loopne
lret
pop
push
fmuls
popl
insl
ja
jb
mov
xchg
adc
push
cmp
pop
adcb
and
std
bound
pop
xor
dec
add
dec
test
clc
sahf
mov
fbstp
ret
stc
sub
js
inc
add
mov
add
jno
or
out
dec
xchg
dec
add
mov
sbb
xor
sbb
or
pop
xchg
fdivrl
sti
cmpsb
or
add
sarl
inc
je
xchg
xorb
pop
jp
mov
mov
adc
sub
xchg
xor
cmpl
outsl
popf
xchg
inc
xchg
mov
sbb
pop
xchg
loopne
jp
sarl
cmc
adc
call
or
fimuls
sub
add
sbb
sbb
ljmp
int3
add
xor
hlt
cli
pop
into
loope
loop
cld
xor
or
fneni(8087
sub
push
cs
inc
pushf
xor
inc
add
fnstcw
addb
add
dec
and
les
add
ficomps
scas
xchg
test
sbb
repz
xchg
sbb
push
cmp
aam
jb
fwait
out
fimull
dec
jp
mov
add
sbb
dec
loope
jmp
repnz
xchg
lahf
xchg
add
cmpb
rolb
in
pop
js
add
push
rorl
pusha
dec
inc
jl
stc
cmpb
insb
sbb
scas
sbb
incb
fs
insb
jmp
pop
cltd
aam
mov
jo
lods
je
sarb
xor
add
add
add
xchg
sbb
mov
cmp
andb
and
leave
jb
adc
mov
push
aam
flds
dec
data16
dec
or
push
adc
pushf
pop
dec
adc
insl
cld
jecxz
inc
in
arpl
xchg
push
stc
cmpsl
jnp
adc
mov
jo
rolb
aam
fisttpl
mov
or
xchg
mov
pop
pop
mov
pop
mov
loopne
clc
or
cmp
negb
jne
add
mov
ret
add
lds
adc
mov
rcrl
mov
pop
pushf
push
xchg
add
ljmp
fcoml
inc
inc
and
or
xor
pop
aas
lret
xlat
pushf
dec
cmpsl
shll
sbb
or
sub
add
dec
insb
lock
lods
inc
lods
lret
movsb
adc
inc
arpl
sub
sti
mov
mov
iret
out
scas
scas
add
jns
ja
or
js
icebp
xor
lds
psubb
add
cmp
xchg
lret
mov
cmp
cwtl
nop
add
mull
movsb
pushf
pusha
imul
add
fidivs
add
or
dec
sbb
sbbl
js
out
and
loopne
push
cmpsl
stos
add
mov
je
fwait
add
xchg
imul
sbb
and
sahf
dec
jnp
fistps
les
or
iret
ret
add
enter
sbb
and
mov
or
xchg
dec
insl
sbb
add
add
aas
movsl
addb
fwait
add
stos
adc
and
sbb
ss
popl
ss
lahf
xor
mov
sbb
mov
mov
fidivl
dec
adc
into
mov
daa
jnp
xor
loop
add
push
testb
adc
add
jg
and
lods
movsl
mov
test
push
outsb
into
add
inc
bswap
add
xlat
movsl
stos
mov
adc
jg
mov
loopne
sbb
or
scas
adc
dec
pusha
push
mov
xchg
in
pusha
loopne
push
mov
flds
add
out
stos
pop
inc
inc
nop
mov
mov
bound
dec
popa
add
jae
bt
mov
lock
push
ja
dec
sahf
rcr
test
xor
popf
mov
add
xchg
fsubrs
lcall
les
out
ljmp
adc
shlb
or
inc
adc
mov
pop
add
repz
xchg
bound
push
xor
sbb
adc
gs
and
jnp
popf
pop
loope
add
dec
inc
mov
icebp
addb
cmp
add
enter
popa
or
or
rcrb
pop
add
jge
lret
into
scas
fcmovnu
add
pushf
inc
sbb
divb
sahf
incb
add
xlat
dec
in
mov
and
xchg
inc
jmp
pop
out
lahf
jno
inc
sub
and
mov
loopne
bound
or
inc
sbb
sahf
xchg
dec
add
cwtl
sub
dec
cltd
pop
clc
jle
xor
mov
push
adc
loopne
pop
or
je
cmp
mov
or
add
stos
insb
sub
fstl
add
jne
loopne
outsl
push
fiaddl
call
or
addr16
iret
xor
mov
mov
scas
insb
movsb
lcall
mov
cmp
fldenv
and
push
jl
aad
and
mov
jb
lcall
mov
adc
pop
add
lahf
cmpsl
enter
sti
add
sahf
retw
jnp
lret
xorb
ss
mov
cmc
aaa
loopne
mov
out
adc
paddd
testl
pop
mov
pop
and
xchg
mov
xor
fsubs
add
and
test
dec
dec
dec
sub
add
jns
add
jae
fistps
js
pushf
aaa
and
bound
inc
imul
addl
js
ret
mov
xor
stc
add
bound
lds
add
cmp
stos
leave
je
cltd
inc
add
fistpl
jbe
xchg
push
or
std
test
inc
nop
adc
imul
inc
pushf
push
add
leave
pop
push
mov
add
jmp
and
lock
or
jecxz
outsl
sbb
in
rcl
es
aam
test
sbb
add
shll
push
fs
jnp
or
adc
push
mov
cli
insb
andb
mov
adc
test
xor
xlat
in
sbb
sub
pop
out
aas
fs
pop
pusha
test
jle
sbb
addr16
or
lods
adc
icebp
cltd
dec
dec
in
loop
stc
mov
call
ljmp
dec
test
lods
sbb
add
out
in
add
rolb
push
out
cld
fsubp
pop
std
popa
jae
iret
mov
push
mov
xchg
les
add
decb
or
dec
add
popf
cmp
xor
pop
adc
or
loop
sbb
add
bound
std
add
les
and
movsl
inc
pop
adc
negb
arpl
mov
inc
add
outsl
add
loop
or
scas
pop
fnsave
push
mov
jmp
cmp
xchg
addr16
fisttpl
mov
adc
stos
push
aad
jns
sbb
setno
pop
outsb
roll
in
mov
cmp
fnstcw
lods
daa
out
add
mov
or
jno
roll
cwtl
outsl
push
push
inc
int3
add
sbb
lcall
lds
faddl
add
pusha
stos
inc
shlb
cmp
inc
push
pop
adc
jge
popa
dec
jnp
mov
add
ljmp
add
pop
xchg
mov
add
outsb
jl
call
xchg
push
adc
add
test
mov
sbb
shl
add
pop
dec
push
repz
sub
cmp
add
jle
pop
dec
mov
cwtl
cld
shll
pop
add
pushf
in
data16
std
push
dec
sti
test
stos
cmp
add
das
jno
popa
fnsave
mov
pop
mov
imul
lahf
addr16
fldl
pop
decl
mov
out
ret
pop
add
push
or
lret
push
add
into
leave
and
add
xchg
iret
cmp
sbb
out
aad
fs
push
cmp
add
pop
add
lcall
pop
pop
mov
cmp
repnz
sbb
sbb
inc
movsl
jmp
mov
inc
xchg
jmp
insb
sbb
dec
sti
dec
jb
cwtl
repnz
inc
cld
lcall
cmp
add
adc
sbb
fadds
in
lahf
add
dec
xchg
mov
outsl
add
xchg
daa
int
and
scas
les
mov
roll
mov
lcall
rolb
mov
and
xchg
add
xchg
lahf
shl
inc
in
add
hlt
adc
mov
jae
add
test
mull
fdivl
insl
adc
mov
xchg
sti
in
jns
jmp
fldenv
adc
or
inc
std
or
scas
jnp
or
mov
shrl
mov
jb
aas
addr16
mov
cltd
fnstcw
mov
cmp
addb
mov
xchg
scas
repnz
add
xchg
test
sub
fiadds
push
addb
add
ud1
lods
inc
aaa
loope
leave
push
push
add
lret
daa
adc
push
outsl
pushf
roll
mov
hlt
enter
inc
inc
xor
sbb
out
ljmp
and
dec
inc
add
mov
jge
push
xor
pop
lahf
add
push
sbb
sarb
fbld
gs
mov
push
adc
outsb
loope,pn
xor
mov
mov
pop
outsl
adc
nop
inc
mov
push
adcl
mov
out
adc
fistl
fwait
add
ret
js
add
stos
add
mov
or
pop
negl
and
sub
ds
ficomps
push
adc
imul
pop
fs
cmc
add
pop
ja
daa
sbb
shl
fisubrl
sub
jecxz
jmp
sbb
loope
loopne
ds
test
or
shll
push
mov
aas
cmc
or
jl
mov
rcrl
cltd
icebp
adc
sbb
mov
add
cmp
shll
pusha
xor
mov
xor
stc
add
xor
lods
test
out
pop
add
adc
xchg
imul
add
mov
int
add
sub
popa
jne
inc
add
test
mov
add
jbe
loop,pn
icebp
mov
lahf
xchg
add
jg
xor
pusha
cmpsb
push
mov
adc
and
sub
mov
popf
jp
inc
or
inc
or
add
and
ret
mov
lcall
loopne
cmc
jae
sbb
int3
lods
pusha
inc
and
xchg
mov
inc
xchg
scas
add
xchg
inc
gs
adc
arpl
cmp
imul
sub
aas
js
and
stc
and
adc
imul
adc
jns
pop
pop
add
sbb
inc
insb
mov
dec
or
inc
xor
adc
sbb
jbe
add
sbb
push
fmull
lds
cltd
cmp
add
cwtl
jge
add
fisttpl
mov
lcall
mov
add
push
and
add
inc
and
daa
jns,pt
or
jecxz
xchg
adc
add
mov
seto
jecxz
scas
stos
sbb
lock
inc
add
test
shll
and
movl
pop
js
inc
xchg
cltd
cmpsl
testb
jb
mov
test
sub
test
shr
add
sbb
test
xchg
sahf
add
inc
test
jno
push
imul
dec
xchg
movsl
data16
pop
pop
add
jnp
lret
add
js
ljmp
dec
push
cli
add
aas
mov
pushf
dec
pop
call
cmpsl
and
and
iret
fadd
mov
adc
xchg
es
mov
loopne
movsl
orl
mov
scas
sub
insb
inc
sub
lret
out
inc
test
cmpsl
aam
jbe
sub
pushf
cwtl
nop
inc
adc
pusha
icebp
inc
push
dec
add
sbb
in
cmp
jb
out
popf
and
inc
cltd
and
sbb
or
push
inc
hlt
and
test
fcompl
scas
bound
adc
pusha
add
cmpsb
fucompp
cmp
stc
jnp
hlt
pop
cmp
out
pop
fsubr
das
mov
mov
insl
es
in
cs
inc
pop
sbb
aas
add
push
mov
testb
fists
pusha
jno
sahf
cmpsl
test
roll
mov
sbb
add
sbb
mov
pop
cmp
sbb
push
xchg
inc
add
or
add
js
loop
mov
ja
call
pop
lea
fwait
divb
push
adc
add
lods
pop
xlat
jge
adc
add
sbb
cwtl
faddp
inc
jp
inc
add
test
mov
and
mov
mov
sub
jp
and
les
clc
push
stos
cmp
das
mov
imul
add
xchg
test
pop
add
ret
push
jae
test
jl
xorps
or
loope
mov
inc
jbe
lds
call
dec
filds
les
fnclex
lock
or
jne
jge
stos
mov
rcrb
add
pop
pop
in
mov
movsb
add
outsl
sub
xor
popf
hlt
or
sbb
xchg
dec
out
jecxz
pop
shlb
xlat
push
jb
pop
pop
xchg
add
imul
mov
loope
and
add
push
hlt
call
je
inc
push
fnstenv
outsl
loopne
add
loop
mov
add
lods
and
push
sub
in
dec
add
jns
cmc
sub
pop
or
cld
and
fcompl
or
js
aaa
fimull
pop
pop
dec
add
and
cmc
es
adc
repnz
inc
jne
sbb
add
mov
jns
fstps
aaa
rcll
cmp
test
xor
dec
add
pop
inc
outsl
jnp
out
lret
mov
sbb
loopne
push
popf
data16
aad
adc
sbb
loope
cli
ljmp
repz
sub
mov
and
addr16
adc
and
and
and
add
sub
pusha
lahf
mov
push
stc
jp
add
test
dec
out
insb
add
cmp
inc
cs
pushf
imul
add
push
hlt
adc
fldt
shlb
cmpsb
add
lock
fiadds
mov
ret
sub
jecxz
pushf
jb
adcl
and
adc
mov
movsb
push
nop
ds
mov
aad
add
push
and
inc
and
add
sbb
ljmp
add
outsl
shlb
loopne
sbb
sar
jg
movb
mov
mov
test
ss
sti
popf
pop
idiv
ljmp
nop
sub
jns
jl
push
aas
popf
push
cwtl
add
inc
sar
adc
daa
bound
adc
xor
cli
jecxz
lret
add
ljmp
test
add
popfw
dec
or
repz
mov
xor
add
sahf
in
add
xor
out
rcrb
aam
xchg
jno
jmp
lret
xchg
arpl
popa
mov
push
mov
xor
imul
dec
cwtl
jne
add
test
in
loopne
xchg
pop
adc
xchg
sbb
lret
xor
or
mov
mov
loop
aad
inc
jne
icebp
add
enter
and
adc
hlt
dec
mov
sbb
movsb
xor
rclb
xor
or
loopne
cld
add
push
mov
jge
adc
mov
mov
pop
out
loopne
add
aad
inc
imul
cmpsl
adc
js
cltd
xlat
sub
cmp
add
mull
test
popl
xorl
daa
ss
rolb
or
sbb
xor
mov
jecxz
aad
push
fimuls
hlt
dec
testb
lahf
std
testl
mov
jno
xor
test
jle
mov
jb
sbb
pop
add
scas
add
int
movsb
dec
lods
std
sbb
repnz
inc
add
fiaddl
sti
loopne
adc
ljmp
inc
push
xor
cld
pop
scas
loopne
and
repz
or
sbbb
sbb
push
out
fiadds
jl
push
insl
ja
movsl
add
out
dec
add
jnp
jecxz
jecxz
loope
cwtl
js
mov
fnstcw
movsb
add
and
fisttpl
lock
inc
fadds
mov
sub
pusha
cld
or
adc
test
add
loope
ror
mulb
push
lcall
mov
repz
add
or
push
or
cmpsl
add
sub
into
xchg
cmp
scas
dec
popa
or
xlat
or
loopne
cmp
insb
add
les
add
push
lea
add
sbb
loopne
pop
movsl
add
xor
mov
mov
cmp
out
jl
lods
movsb
das
xchg
in
loopne
rol
popa
fstl
adc
shll
add
push
pop
add
loopnew
dec
popa
mov
das
add
out
call
cs
xor
sub
add
or
cltd
lods
sub
enter
lahf
mov
in
aas
lcall
jmp
sbb
fisttps
push
mov
das
sbb
sbb
fwait
add
ds
add
xor
push
or
popf
xchg
cwtl
adc
push
jo
add
mov
adc
test
cmc
into
adc
dec
fwait
arpl
pop
sahf
mov
loope
das
jmp
inc
shrl
add
cwtl
aam
or
pushf
jecxz
xor
xchg
and
mov
add
imul
add
pop
xchg
cmc
jg
aad
pop
mov
cmpsb
mov
call
lods
add
jne
adc
shlb
push
add
pop
mov
bound
add
push
testb
inc
lock
jns
int3
stc
add
fxch
sbb
sub
pusha
mov
and
xchg
adc
ss
cld
push
lds
insb
inc
out
dec
lahf
cltd
into
and
aaa
fdivrs
fs
dec
lcall
cmc
clc
out
enter
xchg
and
adc
or
mov
inc
xor
mov
pop
xchg
pop
outsb
add
test
inc
and
out
push
mov
pop
es
lret
fdivr
add
jl
mov
popl
sub
in
mov
pop
dec
in
and
lret
loope
xor
insl
jle
cmp
xchg
incl
mov
call
outsl
mov
inc
dec
iret
fildl
repz
add
lods
das
icebp
add
jecxz
sub
in
push
leave
lods
adc
add
xchg
add
mov
cmp
add
mov
add
or
iret
add
pop
popl
dec
adc
aas
hlt
lock
push
xchg
scas
sub
sbb
leave
or
lahf
addl
outsb
in
push
lods
jb
incb
mov
test
xchg
fwait
cwtl
push
movsb
loopne
xchg
cs
inc
add
test
add
ds
daa
in
int
mov
mov
xor
cmp
add
pop
test
add
pop
std
in
dec
fisubs
int
pusha
mov
movsb
push
fld
jo
je
mov
xchg
push
mov
push
adc
mov
add
adc
add
xor
pop
mov
cmp
pushf
jg
add
mov
pusha
cmp
adc
jo
add
fsts
mov
jnp
push
imul
ljmp
xchg
push
sbb
or
mov
add
sbb
rorb
add
push
pop
sahf
add
std
movsl
xchg
scas
xor
mov
pusha
pop
cmpsl
dec
inc
cmp
aas
add
psrlw
xchg
repz
push
out
rcrb
xor
sbb
stos
cwtl
outsb
popa
cmp
sub
add
pop
aas
add
push
jge
ror
mov
adc
and
shll
jb
pop
add
xchg
popf
loop
and
dec
add
scas
movd
dec
mov
lret
imul
xorb
dec
inc
and
sbb
inc
add
shlb
and
into
loopne
fnsave
mov
roll
int
subb
add
mov
mov
test
cli
mov
jo
jb
xchg
and
xor
sbb
push
jns
out
sarl
add
pop
mov
push
pop
rolb
popa
sub
push
roll
mull
inc
shll
and
fwait
or
mov
loope
or
pop
mov
fwait
push
adc
jno
push
aaa
push
add
es
arpl
mov
xchg
test
repz
mov
sbb
addr16
stc
add
sub
ljmp
xlat
add
mov
mov
adcl
fdivrs
leave
add
add
push
faddl
cld
mov
testb
mov
bound
jo
inc
das
ljmp
fnstsw
icebp
and
adc
filds
add
cmp
roll
inc
repz
imul
pop
pushf
lahf
enter
dec
pop
mov
add
pop
decb
add
outsl
outsb
lock
sbb
int
adc
xchg
test
pop
add
lcall
jns
cmp
enter
loop
in
pop
insb
adc
and
xor
dec
ja
repz
mov
popa
cmpsb
pop
sub
fisubrl
add
cli
jge
cmp
shll
mov
cltd
jge
stc
cmp
adc
enter
pop
and
mov
sbb
mov
cmp
repz
adc
and
cld
scas
sub
push
xchg
mov
xchg
and
in
pop
push
cs
xchg
or
mov
inc
outsl
insb
sbb
mov
mov
dec
mov
cmp
pop
and
and
cltd
das
jge
bound
push
orl
push
push
add
cmc
out
mov
cwtl
negl
mov
in
aad
add
movb
cli
rorb
imul
cmp
shlb
pusha
nop
dec
xchg
or
decl
adc
gs
mov
scas
mov
mov
pusha
pushf
jmp
push
fcmovb
sbb
adc
pop
or
adc
dec
pop
mov
inc
mov
test
out
ljmp
cld
jae
xchg
push
add
xor
mov
mov
addr16
cmpsb
dec
adc
add
jmp
hlt
cmp
mov
lds
cmc
adc
push
and
and
mov
enter
bound
and
jno
ja
mov
loope
xchg
iret
aad
hlt
or
add
ret
xor
and
xchg
sub
push
mov
and
in
add
mov
ja
push
cmp
bswap
add
sbb
ds
mov
incl
js
add
in
or
add
jmp
cltd
or
push
push
sbb
test
add
inc
mov
aam
xchg
pop
and
das
ret
nop
xor
insl
sbb
inc
sahf
inc
add
je
out
sbb
and
shll
xor
mov
call
sbb
sbb
inc
or
iret
dec
fs
mov
sub
test
mov
and
int
lret
add
xchg
inc
dec
lods
ds
inc
push
mov
xor
ret
fwait
push
mov
dec
pop
lahf
jne
stos
sarl
mov
add
jecxz
push
fcom
lret
pop
incl
and
add
mov
leave
push
and
dec
mov
dec
sbb
push
pusha
ja
cli
mov
and
out
ret
xchg
add
jnp
xor
or
mov
int
scas
in
fs
shrl
cmpsl
les
cmp
loop,pt
jge
fstl
dec
cli
add
jmp
pusha
mov
pop
or
stos
or
inc
int
pop
add
sarb
add
cs
xlat
cwtl
les
pop
addr16
mov
push
adc
aam
push
xor
xorl
push
sbb
adc
int
out
lcall
adc
or
dec
mov
mov
adc
adc
out
add
inc
cltd
shrb
xchg
xchg
enter
mov
test
subl
mov
jle
mov
add
scas
nop
shr
xchg
std
in
dec
adc
test
add
mov
cld
loopne
imul
add
jo
mov
out
loopne
cli
pop
aaa
xor
adc
out
mov
stos
dec
adc
mov
push
and
xchg
aas
pop
cli
movsl
pop
notb
fldcw
lds
cmpsb
or
or
xor
repnz
mov
xchg
add
sbb
mov
push
push
stc
mov
sub
jno
dec
xor
pusha
mov
sahf
sbb
mov
pop
jecxz
out
xchg
inc
xchg
adc
mov
pop
jbe
jge
ret
mov
xchg
adc
xchg
cltd
jmp
xchg
add
add
adc
test
xchg
cltd
mov
outsb
andl
jne
dec
mov
out
mov
xchg
icebp
xchg
add
mov
dec
outsl
jecxz
js
jp
mov
subb
pop
mov
mov
stc
or
mov
pop
jl
push
fsub
mov
push
movsb
lret
stos
ret
loopne
lret
shlb
cmp
jg
out
std
add
inc
pop
dec
clc
or
test
mov
add
stc
mov
add
lods
jmp
cld
jge
ret
icebp
pop
in
xor
push
push
lods
jae
pushl
pop
insl
pop
test
in
jb
push
dec
cmp
mov
ret
pop
push
das
add
lret
adcl
lret
mov
xlat
xor
loope
arpl
xor
push
jle
push
or
jo
or
push
inc
roll
out
lea
mov
lds
mov
mul
les
js
push
or
pushf
popa
add
sbb
or
std
sbb
jns
mov
stc
ret
dec
in
add
rorb
lahf
and
je
sbb
outsb
addb
mov
cld
mov
pop
jp
push
in
push
add
push
jg
call
sbb
test
roll
xor
fildll
push
dec
mov
pop
lcall
jnp
pusha
out
jbe
inc
testl
lahf
sbb
jge
into
pusha
sahf
andl
jle
xchg
push
jmp
in
add
mov
int
pop
mov
xor
inc
add
xchg
mov
sub
sub
loopne
adc
in
outsb
sbb
xchg
rcrb
scas
test
pop
xchg
mov
add
push
inc
sub
lret
and
xor
pop
cmc
push
iret
pushf
stos
out
add
andb
xchg
lods
sbb
push
sbb
imul
xor
lret
js
mov
lock
test
lret
addr16
add
pop
arpl
incb
cmpsl
mov
fists
enter
in
js
je,pn
xor
mov
fidivs
out
bound
daa
subb
out
adc
stos
xchg
adcl
xchg
ss
and
fildl
mov
out
insl
test
add
scas
xor
mov
test
xchg
push
rcr
jno
test
jge
mulb
rclb
ficoml
dec
addl
or
outsb
and
mov
rorb
rorl
std
movsl
add
sbb
inc
aas
mov
in
divb
and
cmc
das
dec
inc
aas
mov
movsl
sbb
add
cli
or
or
test
xor
sbb
xorb
out
sub
repz
pop
push
mov
std
out
push
inc
dec
iret
insl
hlt
icebp
repnz
mov
or
push
and
jne
sbb
es
push
add
sub
mov
mov
pop
setb
aam
push
add
jg
inc
xor
add
mov
sbb
out
rolb
xchg
aas
addr16
add
std
xchg
push
fdivs
jg
cmpsl
aam
adc
mov
lahf
loope
xor
pusha
xorl
xchg
and
add
pop
insl
mov
cwtl
inc
push
cltd
imul
jle
xchg
inc
loope
xor
mov
cmpsl
add
add
addr16
aas
cmc
in
ret
dec
test
idiv
lahf
add
add
mov
je
ret
sub
sbb
lods
daa
andl
sub
hlt
cmp
movsb
lds
std
add
xchg
pop
loope
adc
repnz
pop
xor
cltd
add
jae
fwait
adc
test
adc
pushf
sub
enter
insb
scas
mov
test
mov
out
movsl
add
mov
outsb
in
loopne
pop
sbb
or
mov
push
add
ja
shll
mov
push
xchg
pop
mov
out
and
mov
or
fistpl
popf
repz
add
jecxz
and
loopne
fidivl
cld
adc
mov
or
sbb
dec
sbb
loopne
add
adc
scas
add
leave
xchg
sqrtps
sub
lock
pop
add
sub
jno
jne
mov
cli
pusha
loopne
fistpl
fstpl
jae
aam
cmp
push
cwtl
mov
movsb
add
rorl
and
push
pusha
dec
dec
out
mov
xchg
inc
addr16
jnp
dec
dec
rcr
push
mov
out
add
xchg
testb
loop
cmpb
aad
outsl
adc
cwtl
mov
sti
mov
adc
mov
out
sub
lcall
je
call
or
xor
adcb
scas
cmp
pusha
adc
push
bound
mov
mov
cltd
add
sti
inc
mov
add
xchg
sbb
add
sbb
add
jns
sahf
push
sbb
sbb
add
fcomip
add
sub
scas
les
call
stos
add
pop
bound
inc
xchg
loope
sub
shl
fiaddl
out
jmp
pop
outsl
jmp
roll
shl
or
movsb
daa
in
shlb
jnp
pop
push
sub
test
xor
test
loop
xor
inc
fcoms
cmp
mov
add
hlt
lahf
lock
and
or
push
scas
ds
mov
es
or
sbb
test
loopne
fiaddl
xor
or
jle
rorb
insb
add
adc
sbbb
push
mov
stc
sub
das
sbb
sti
add
add
xlat
das
mov
add
cwtl
jl
shl
and
jbe
inc
jecxz
cmp
pop
fisubrl
push
mov
xchg
mov
push
or
inc
mov
scas
mov
dec
daa
pop
add
adc
addr16
lods
dec
pusha
or
mov
xor
test
pop
loop
sbb
adc
subl
sbb
repz
dec
add
imul
cli
and
sbb
fistps
add
jl
inc
xor
push
add
jnp
sub
mov
xor
movsl
int3
pop
adc
mov
out
loopne
bound
mov
pop
fisttpll
and
dec
ljmp
pop
repnz
jl
dec
pushf
xlat
push
divl
outsl
sbbl
loope
out
adc
leave
inc
loop
jo
or
aaa
sbb
mov
mov
xor
add
add
je
and
cmpsb
add
ljmp
pop
mov
mov
ror
ret
add
inc
cli
in
cwtl
dec
pop
int3
sbb
jg
scas
or
jp
sahf
pushl
pusha
or
add
in
sbb
xor
cwtl
mov
xchg
and
push
rcrl
sub
movsl
inc
fcmove
pop
loopne
addr16
repnz
sbb
sahf
int
add
cwtl
xor
xor
xchg
push
xchg
push
pop
movl
adc
xchg
or
cmpsl
aad
dec
scas
int3
add
shll
cld
push
icebp
mov
mov
add
push
push
repnz
sbb
sub
pop
dec
xor
mov
mov
pop
aaa
call
add
stos
test
loopne
lret
or
fistl
pushf
add
mov
or
addr16
adc
pop
jp
je
add
pushf
lods
test
cli
fsubrs
push
fmull
add
add
mov
xchg
mov
add
xchg
cmp
mov
add
test
cwtl
push
les
add
mov
pop
sbb
hlt
cmp
adc
push
and
push
or
dec
out
mov
adc
subb
aas
sbb
das
icebp
mov
imul
sbb
cltd
and
popl
popf
hlt
add
mov
push
dec
dec
and
dec
fisttps
dec
add
out
in
pop
push
lret
es
scas
mov
mov
daa
and
dec
mov
mov
inc
or
add
push
bound
lds
dec
mov
lahf
jg
ljmp
mov
jb
call
pop
lahf
mov
popf
lret
outsl
outsb
adc
ja
add
add
adc
add
ret
add
push
pop
xchg
dec
add
lods
jg
mov
dec
fcompl
aam
lcall
jmp
mov
and
push
mov
loope
or
flds
imul
cwtl
and
pusha
cmpsl
mov
push
xor
andl
movsb
add
sub
data16
out
sbb
fs
jmp
cmp
mov
popf
inc
shlb
loop
fildl
movsl
jge
rorb
add
cmp
xchg
nop
pop
add
and
add
test
arpl
inc
add
cmpsl
mov
add
pop
dec
lods
add
incl
cmc
and
movsl
pop
mov
add
jle
out
stc
out
addr16
int
cmp
inc
cmc
add
icebp
int3
hlt
lock
add
jnp
mulb
and
or
sbb
sbb
enter
pop
xor
inc
aam
add
adcb
not
ljmp
sub
cld
mov
xor
test
and
mov
les
push
nop
outsb
add
mov
aaa
mov
shll
mov
dec
inc
add
jmp
fiadds
dec
xor
xchg
mov
inc
dec
push
cltd
add
into
lret
mov
shl
or
add
cs
sahf
xchg
inc
push
or
mov
dec
jns
add
jne
push
cmp
clc
mov
popa
aam
pushf
cmc
add
inc
push
das
and
ss
jbe
or
xchg
roll
mov
or
add
ljmp
add
dec
xor
dec
jne
in
or
decl
lahf
sbb
mov
jmp
xchg
push
jge
lret
jl
std
loopne
push
mulb
xchg
iret
loopne
movsl
rorb
insb
loope
mov
xchg
out
aam
and
and
add
enter
cmp
insl
lret
xor
stos
imul
pop
push
mov
add
xchg
pop
loopne
sub
je
xchg
out
add
fildl
sbb
mov
jl
test
pop
popa
rclb
pop
pop
mov
add
cmp
popa
xchg
push
add
clc
add
push
xlat
pop
xor
mov
pop
insb
mov
cltd
insl
mov
pusha
mov
or
arpl
add
loope
fwait
add
mov
xchg
out
add
test
jp
int
sbb
arpl
dec
outsb
pushf
mov
roll
add
cmp
ret
ret
mov
sbb
mov
xor
push
in
sub
shrl
and
popf
add
add
pusha
dec
and
mov
adc
je
add
sub
cmp
imul
xor
test
cmpsl
sub
fwait
add
pop
scas
sbb
xchg
sub
add
and
adc
inc
loop
sbb
adc
jge
movsb
scas
test
add
cmpsb
xchg
retw
pusha
mov
or
push
mov
test
mov
add
lock
fldt
leave
mov
mov
mov
push
pop
rorl
lcall
sbb
mov
test
add
dec
popf
icebp
movsl
fldcw
add
rol
pushf
sbb
cli
add
mov
pusha
cmp
mov
or
pop
ret
lods
or
inc
sbb
pop
addr16
sub
lock
or
push
out
add
xchg
dec
mov
push
outsb
add
fstps
push
xchg
test
mov
sbb
sbb
stc
jecxz
out
jecxz
or
xchg
push
jnp
aad
and
shrb
enter
pop
mov
inc
in
daa
xor
add
mov
leave
or
iret
subl
loopne
or
push
push
outsb
adc
fisttps
add
dec
aas
xlat
xor
fsub
sbb
lret
xchg
scas
testl
push
mov
leave
xchg
xor
pop
cmc
add
dec
push
push
int3
fldl
cwtl
fsub
jl
cmpsb
popf
pop
inc
shlb
sbb
hlt
push
fidivrs
cmp
lcall
add
int3
xor
add
push
imul
inc
mov
xchg
lock
jno
jmp
js
cltd
pop
mov
in
cli
call
jno
adc
clc
jns
push
fildl
fs
out
adc
sti
mov
mov
ja
sbb
xchg
mov
pop
cmp
ret
sbb
lea
test
sub
ret
jbe
pop
pop
cs
jne
sub
std
data16
loop
push
mov
mov
jmp
pop
inc
push
xor
lods
pop
jmp
dec
sahf
cmp
xchg
fistpll
add
leave
pop
stos
movl
add
or
mov
push
inc
dec
repnz
push
mov
inc
jns
fistps
in
pop
bound
lea
adc
ss
jl
xchg
pop
adc
imul
je
mov
sarl
ficoms
outsl
add
fsqrt
mov
aas
mov
xchg
add
pop
cwtl
fisubs
mov
pushf
test
mov
adc
in
mov
and
or
add
pop
rorl
add
fistpl
fisubrs
add
test
call
bound
inc
or
loop
cltd
jno
add
in
icebp
pusha
xor
mov
fcompl
mov
pop
push
and
sub
pusha
out
mov
movsb
in
std
fwait
das
jb
pop
xor
adc
add
aam
in
mov
push
or
ficoms
mov
adc
loopne
nop
adcb
or
add
push
push
cmpl
cmp
dec
jecxz
aad
shrl
add
mov
cmp
add
lret
and
mov
jge
xor
andl
clc
test
test
fsts
mov
popf
push
cmc
add
push
jbe
add
insb
mov
push
push
out
or
jo
loop
mov
adc
jp
movsl
inc
ret
pop
outsl
add
mov
test
cmpl
shrb
pop
adc
imul
mov
out
iret
adc
pusha
add
pop
cmc
mov
mov
inc
imul
xchg
add
aas
mov
pusha
or
adc
add
imul
sub
add
add
adc
cmp
mov
int
or
push
je
pop
jbe
mov
outsl
jle
jg
xor
fcom
mov
fldl
sub
or
cld
dec
andl
mov
fsubl
add
sbb
add
xor
out
enter
cmp
sarl
sbb
add
dec
sbb
add
aas
div
mov
jecxz
lcall
loop
stos
sbb
ss
addr16
aaa
sub
dec
cmp
stc
mov
xchg
ret
push
ficoml
pop
adc
jns
out
sub
imul
pop
sti
ljmp
add
addr16
ret
dec
push
hlt
rcr
in
sub
es
int3
push
sub
sbb
mov
jecxz
outsl
jne
pop
fdivrs
sub
jge
mov
inc
jnp
arpl
dec
pop
mov
mov
pop
repz
int3
mov
cs
jg
dec
add
daa
enter
and
pusha
push
xor
adc
stc
sbb
aas
out
pop
mov
loopne
push
popa
test
add
fldt
xchg
adc
dec
mov
pop
std
push
and
shrl
pop
outsb
and
add
pop
xor
iret
rol
arpl
sbb
push
add
jno
addr16
lea
mov
sub
xor
add
or
shrb
add
adc
lock
jne
js
push
pop
test
mov
sub
xor
pop
jle
xchg
add
inc
out
fisubrs
pop
mov
xchg
bound
dec
sahf
sbb
fstl
lahf
sbb
lea
and
in
cmp
jne
push
inc
in
addl
pop
push
lcall
adc
dec
pop
xchg
add
lods
pop
mov
pop
loopne
movsb
pop
dec
add
fptan
fldt
dec
adcb
push
sbb
add
fprem1
subb
and
sub
shll
ror
push
ja
xchg
sbb
jmp
and
pop
pop
add
mulb
out
inc
pusha
adcb
lock
mov
jmp
add
lds
test
int3
xor
push
cmpb
adc
arpl
add
mov
daa
loope
js
dec
pop
add
push
fsub
push
xorb
pop
inc
push
roll
cwtl
pop
clc
subl
lods
or
fimuls
dec
gs
xchg
sub
rcrb
test
ficomps
pop
in
add
and
and
mov
rorl
leave
shll
rep
ret
addr16
and
cwtl
nop
in
cs
inc
jecxz
aaa
adc
add
cmp
jo
int
mov
add
jnp
pop
mov
push
push
jno
adc
mov
movl
and
out
ds
pop
hlt
mov
into
sbb
dec
cmpsb
lock
push
cli
pop
in
fildll
scas
mov
loopne
jecxz
and
icebp
adc
xor
scas
and
loope
sub
nop
out
inc
cld
or
jp
adc
add
cmpsl
jmp
outsl
sbb
sub
or
mov
loopne
imul
mov
sub
or
and
mov
dec
add
popf
jbe
test
out
scas
in
imul
insl
pop
jae
ret
test
inc
icebp
mov
movsl
adc
cld
and
add
mov
add
mov
out
add
sbb
sahf
sbb
inc
loopne
sbb
xorb
cld
push
imul
stc
lret
jnp
daa
repz
jns
shll
lds
jp
add
sti
sub
jle
cmpsl
arpl
mov
roll
xchg
jge
mov
mov
jecxz
adc
xor
sbb
mov
mov
mov
leave
test
add
sbb
cwtl
jmp
cmp
scas
or
lea
inc
aaa
mov
pop
cmpsb
add
lret
das
xor
sub
lcall
mov
testl
pop
mov
or
xchg
or
and
sub
js
mov
push
or
into
setns
add
inc
mov
xor
pop
xchg
cmp
aaa
pop
jns
fcmovnu
icebp
aad
sbb
push
pop
fidivl
mov
out
jg
daa
xor
clc
add
cli
cmp
fsubl
inc
cmpb
and
ds
dec
sub
mov
sbb
and
int3
jo
mov
lret
add
ja
xchg
add
xor
pop
adc
add
repz
mov
pop
or
into
adc
insl
mov
sub
cmp
mov
stc
add
cs
cmp
lcall
pop
mov
popl
xor
pop
ret
psignw
dec
add
das
or
out
add
mov
mov
movsl
dec
out
push
adc
stc
ss
mov
add
gs
dec
aaa
es
add
leave
xchg
inc
mov
movsb
inc
add
testl
dec
test
sahf
bound
pop
stos
add
mov
add
dec
and
popa
inc
orl
cld
xor
sub
aaa
pusha
and
testl
add
and
cmpsl
popf
pusha
pusha
and
rorl
jbe
adc
cmp
or
xor
repnz
data16
xor
orb
add
loope
add
adc
inc
xor
mov
add
push
xchg
xor
jne
and
inc
cmpsb
dec
add
inc
jb
aad
fimuls
jns
scas
jns
add
push
and
into
push
mov
in
push
arpl
pop
jge
shll
add
sbb
scas
pop
mov
push
add
jae
add
data16
in
sbb
rolb
lods
mov
rcl
mov
sbb
add
cmp
cltd
bound
sbb
and
popf
jne
loope
pop
hlt
pop
or
add
xchg
sub
pusha
add
adc
dec
or
inc
add
mov
rolb
sbb
add
adc
push
add
repz
mov
jle
xchg
pushf
ljmp
js
dec
pusha
std
push
lds
push
negb
fidivl
insb
out
pop
rcr
and
mov
xchg
sbb
push
xchg
cmp
dec
lods
loop
adc
aas
mov
pop
xor
test
jnp
iret
add
out
dec
test
lahf
pop
add
cmc
inc
cwtl
push
sbb
add
mov
add
cmp
or
xlat
push
mov
gs
sbb
les
jmpw
adc
lds
sub
pusha
imul
popf
roll
cwtl
xchg
push
sub
fcomps
sbb
add
pusha
aaa
push
adc
or
push
in
stos
adc
xchg
addw
push
pop
jbe
enter
jp
sbb
push
imulb
pop
in
fildl
sbb
mov
leave
and
cld
or
jg
add
repnz
imul
xor
add
mov
sub
push
add
mull
cmp
mov
lcall
jno
add
mov
pusha
fistps
sbb
jp
pushw
fwait
adc
out
sbb
pop
adc
push
mov
cmp
or
xchg
es
mov
jae
mov
rolb
mov
stc
ret
adc
aas
shrl
mov
cmp
adc
mov
add
add
je
adc
and
bound
xor
inc
add
fldt
jge
lcall
mov
cmp
and
adc
dec
pop
in
push
jno
push
cs
adc
test
sarl
das
jg
in
std
cmpsb
sbb
and
aam
pop
mov
add
subl
adc
lods
sbb
adc
mov
arpl
loopne
sbbl
jns
add
loopne
or
cli
or
xchg
fs
or
sub
pop
popa
loopne
mov
fwait
dec
into
arpl
mov
push
or
mov
loope
and
dec
inc
rorb
lods
icebp
add
jns
jnp
fmuls
cli
and
mov
stos
mov
xor
cmp
sub
mov
jno
push
ljmp
cmp
in
add
inc
xor
insl
stos
mov
add
pusha
out
pop
add
add
sbb
jnp
xchg
shl
or
adc
inc
cli
stos
or
rcrl
or
aaa
mov
inc
push
pushf
arpl
pushf
scas
fucomip
and
out
pop
stos
popf
or
add
imul
xchg
mov
jg
ljmp
add
mov
push
add
faddl
mov
mov
lock
std
or
imul
add
stos
push
xor
mov
sar
pop
xor
scas
push
test
je
adc
aas
adc
out
fildl
dec
mov
xchg
jg
shlb
popf
clc
push
test
rorl
add
mov
fcomp
xchg
shll
inc
adc
mov
outsl
pusha
add
popa
cmp
push
ret
push
mov
mov
shrl
mov
cmp
arpl
sbb
xchg
jne
push
inc
xchg
pusha
jle
sbb
pop
add
xor
mov
jo
add
push
imul
jecxz
iret
xor
add
stc
sbb
mov
notb
call
sbb
das
cltd
rcll
mov
add
je
push
ret
daa
out
stos
lods
int3
xchg
and
mov
sub
xchg
aad
inc
loopne
cmp
sti
int3
add
popf
adc
dec
push
or
add
inc
xlat
cwtl
pop
xchg
fdivs
jbe
push
js
into
pop
add
lods
fstpt
xchg
lds
nop
pop
and
fists
divl
push
add
xchg
gs
add
jge
mov
dec
adc
add
add
inc
enter
in
push
pusha
stc
xlat
push
rcrb
notb
shlb
aaa
data16
push
jmp
movsl
daa
int3
cmp
ljmp
nop
mov
repz
add
cs
sub
jl
scas
mov
push
les
addb
mov
mov
loopne
jmp
je
jb
movsb
sbb
ja
mov
cmpsl
outsb
and
cmp
imul
out
subl
adc
add
aam
cwtl
mov
movsb
repz
mov
jb
and
arpl
xor
test
lcall
xchg
call
jmp
arpl
mov
jns
popa
xor
add
push
adc
gs
rclb
sbb
cli
out
adc
mov
xchg
data16
jmp
add
jae
jecxz
sub
popf
rorl
lret
cmp
push
or
jbe
aad
mov
ja
sti
adc
add
mov
movsb
ret
insb
add
insl
add
adcb
and
cwtl
stos
outsl
sbb
xlat
mov
and
std
sti
sbb
adc
mov
fdivs
loopne
inc
inc
or
add
cmp
add
sbb
mov
fwait
mov
loopne
add
loop
bound
mov
enter
jmp
xor
or
aam
lock
inc
fadds
dec
xchg
fistps
popf
stos
cld
and
adc
and
std
push
jle
cmpsb
lea
add
scas
mov
add
out
or
cmc
rorl
add
jecxz
dec
in
shrb
push
arpl
inc
xor
scas
xchg
pop
push
adc
xlat
or
pop
loopne
or
cli
and
andl
push
and
pop
sbb
add
jb
rolb
xor
sub
push
daa
ret
cmovo
pop
jl
adc
xchg
es
add
jnp
mov
pusha
inc
mov
xorl
and
shll
fwait
cmp
lds
cmp
lahf
ja
pop
xchg
imul
mov
addr16
and
dec
push
mov
hlt
pop
into
insb
fbld
loopne
inc
adc
add
mov
adc
mov
add
push
in
stos
rorl
out
shll
add
repnz
cld
fistl
cmp
mov
and
mov
mov
aas
cld
sbb
xchg
pop
out
pop
dec
push
stos
lcall
pop
push
adc
sarl
jp
in
xchg
add
lret
test
ja
jle
pop
jge
hlt
insb
xchg
decb
add
mov
pop
inc
inc
imul
orb
jecxz
and
sub
mov
sbb
add
sti
sub
and
jne
push
or
testb
cmpsl
lods
jbe
cmp
nop
outsb
mov
mov
add
add
xor
shrb
inc
xor
insb
mov
outsb
pop
sbb
dec
adc
ret
push
shll
in
lahf
mov
inc
movsb
sbb
popa
sub
fwait
lcall
loopne
add
arpl
mov
add
inc
xor
cwtl
jmp
push
add
cs
imul
stc
lahf
frstor
inc
in
jge
adc
dec
sbb
inc
add
into
stos
add
pop
repnz
int3
sub
daa
and
pop
out
jo
ja
cli
ss
je
xor
sbb
shr
mov
adc
adc
cmp
js
adc
mov
xchg
or
add
mov
aam
add
lods
pop
add
add
xor
xor
add
rcrl
and
sbb
inc
and
pop
add
xor
shlb
std
adc
icebp
subl
fwait
ss
and
jl
loopne
sahf
push
mov
jnp
cmpsb
imul
xor
and
mov
sub
cs
add
cltd
xor
pusha
das
jmp
sbb
cmc
repnz
pop
shll
xor
sahf
push
add
ljmp
pusha
mov
imul
fidivs
add
cmp
das
popa
inc
dec
inc
sbb
and
in
pop
jecxz
jno
arpl
push
shlb
sub
jb
pop
sarl
add
in
push
lcall
and
fadds
xor
mov
pop
pusha
mov
adc
dec
mov
ds
add
jne
loope
repnz
popa
int3
and
popf
clc
sbb
inc
push
xchg
add
cwtl
data16
stos
push
shlb
mov
cmpsb
stc
lock
adc
inc
and
mov
push
imul
adc
push
push
add
dec
lods
aaa
add
mov
adc
fld
scas
loope
fistpll
adc
stos
andl
adc
dec
add
and
lods
add
add
inc
pop
popf
sub
push
lods
sbb
ret
add
pop
xor
mov
flds
inc
inc
add
cmp
dec
or
and
sti
in
lret
sbb
test
mov
shr
mov
add
mov
xchg
cmp
lahf
pop
push
and
cmp
out
shrb
add
pop
sahf
insl
cmpsl
jbe
lods
add
sbbl
loope
testl
insb
push
mov
movsl
clc
mov
jge
pop
add
or
pop
scas
popa
aas
add
sbb
inc
dec
mov
sahf
fistps
popa
mov
xchg
addr16
jo
inc
push
in
sub
add
xchg
test
hlt
je
out
loopne
dec
mov
orb
adc
gs
cmp
dec
rcrb
sbb
jge
into
jecxz
stc
add
sbb
sbb
mov
lds
lea
bound
imul
mov
jb
int3
add
outsb
lea
adc
mov
loop
jmp
inc
outsb
pop
in
add
lret
sahf
pop
insl
push
popf
and
subb
xchg
push
jmp
popf
ltr
cmp
mov
or
mov
and
add
jne
xchg
or
jns
cld
pop
jno
scas
outsb
add
adc
loopne
push
int
inc
add
jl
mov
and
in
hlt
into
add
add
jle
sub
inc
add
jae,pt
xchg
sub
xchg
out
add
pop
mov
std
sahf
stos
jnp
lret
inc
jp
push
call
ds
lahf
aaa
xchg
and
sbb
push
add
ljmp
test
int
add
pop
leave
dec
cltd
or
adc
imul
out
hlt
add
insb
and
jno
mov
out
add
aas
mov
adc
das
or
dec
adc
out
lods
add
cmpsb
or
cmp
out
adc
in
pop
jle
shl
sbb
jp
mov
add
into
pop
xchg
fcompl
pop
out
and
push
nop
test
les
mov
inc
stc
mov
pop
sbb
push
pop
dec
add
dec
mov
lods
jno
jns
push
ljmp
lock
loope
xchg
ds
fcom
insl
cmp
sub
popa
fs
add
mov
xlat
jno
fwait
and
inc
or
cmpsb
push
add
lods
add
xor
pusha
dec
icebp
jmp
arpl
adc
push
add
mov
lods
jecxz
out
mov
adcl
dec
inc
pop
push
in
cwtl
clc
xorb
adc
pusha
xchg
jecxz
pop
popa
xchg
aad
test
sarb
mov
adc
call
inc
push
xor
jno
nop
cs
xor
shll
adc
aad
int3
add
xchg
add
pop
add
xlat
xchg
cld
out
aam
cs
xchg
movsl
jns
sbb
sub
adc
fwait
add
das
ljmp
arpl
sbb
cs
ret
lret
add
adc
add
cmp
sub
aaa
mov
mov
or
ja
push
clc
pusha
jne
cmp
cmp
and
pop
arpl
and
scas
loopne
jmp
dec
ja
sub
add
mov
xchg
pop
xor
loopne
das
add
pop
call
repz
mov
xchg
xchg
jecxz
sbb
lods
mov
into
add
or
jae
add
adc
aaa
loopne
lahf
xor
mov
xor
xchg
pop
jnp
pop
sbb
mov
sbb
std
scas
xchg
add
xchg
ss
pop
ds
loope
aaa
pop
adc
ret
outsb
fcoml
leave
les
out
inc
or
adc
into
imul
jns
jb
pop
test
add
push
mov
cs
cltd
fistps
jecxz
xchg
fcom
xor
mov
add
pop
lods
lret
add
xor
cli
mov
add
sbb
xchg
push
daa
imul
xchg
xchg
add
out
sti
and
mov
lock
mov
inc
dec
xlat
fwait
sbb
mov
rcll
in
xor
and
cmp
shl
add
aad
push
loope
aas
adc
jge
addr16
add
push
sarl
adc
inc
jnp
jecxz
add
add
lahf
call
xor
pushf
cmpsb
mov
or
mov
jae
lret
clc
int
xor
dec
sbb
test
fstps
fidivrl
sub
xchg
inc
jp
lret
pusha
mov
mov
pop
frstor
jmp
adc
dec
inc
add
das
imul
mov
popa
add
xchg
fstpt
dec
and
sbb
inc
or
pop
lods
add
in
push
pop
ja
add
sbb
and
adc
sbbb
sarb
xchg
mov
push
pop
jl
js
add
shll
jae
loopne
add
rcll
clc
enter
outsl
loop
sbb
pop
push
dec
fsubl
adcl
cld
and
enter
imul
out
add
add
push
sbb
rcrl
loopne
pop
add
cmp
mov
add
sbb
sub
xor
repz
mov
jp
into
out
sbb
xor
or
addr16
daa
sub
mov
xchg
pop
fs
out
or
xor
ror
aam
das
sub
shl
add
test
inc
add
xor
shrl
cmp
lods
push
cmpsl
mov
out
test
enter
loop
xchg
ljmp
dec
sahf
mov
push
lds
mov
test
fs
cmpsl
add
adc
xor
or
jne
add
movaps
push
xor
push
dec
hlt
mov
jnp
leave
je
rcrl
mov
enter
sub
mov
mov
lahf
sbb
orl
add
testb
rclb
sahf
or
fnstsw
mov
push
jle
inc
add
push
and
mov
movsl
repnz
movsb
in
fildll
xlat
mov
xchg
js
into
xchg
aad
dec
mov
ror
push
add
jmp
add
hlt
push
fisttpl
and
adc
cmp
add
mov
xlat
cmp
pushf
testb
fmull
cmp
flds
xchg
jae
adc
add
aam
das
pushl
nop
mov
inc
cmpsb
sbb
xchg
inc
out
adc
xorb
stos
mov
fwait
add
mov
xlat
dec
xchg
out
fucom
aas
scas
lock
sbb
fstps
je
push
sub
divl
mov
mov
push
mov
jne
je
lret
ret
jno
xor
cmpsl
cltd
in
xor
xor
cmp
stos
add
cwtl
sub
fsub
out
aas
addr16
push
dec
pop
push
addr16
mov
ljmp
push
xchg
ret
inc
pop
pop
xchg
and
mov
sbb
sub
sbb
iret
outsb
sbb
ret
cmp
sub
and
rclb
addr16
in
push
jmp
push
fbld
jle
ss
test
xor
or
mov
out
popl
inc
incl
pop
add
movsl
out
loopne
cmp
add
push
push
mov
bound
mov
iret
dec
sbb
gs
dec
jg
out
loope
loopne
pop
inc
int
jo
add
out
pusha
popa
inc
or
ret
and
aad
pop
lds
arpl
xor
cmp
sbb
jecxz
xchg
push
adc
es
pop
or
pusha
icebp
push
pop
pushf
xchg
fildl
outsl
stc
loop
test
mov
insl
mov
scas
add
or
mov
stos
add
mov
dec
test
adc
xchg
int3
and
outsl
imul
and
pop
xor
cld
xchg
add
scas
iret
add
cmpl
repz
aad
sub
pop
sub
xor
in
addl
fs
sbb
pop
mov
fmul
roll
add
mov
into
push
add
and
add
cwtl
inc
fidivrs
mov
enter
or
mov
stc
addr16
push
out
add
push
mov
sahf
inc
lea
lock
fadds
xchg
fisttpll
insb
add
pop
jnp
pop
int
sahf
rcll
imull
cld
js,pn
sbb
test
jbe
daa
add
fadd
mov
daa
mov
aam
cmpsb
add
pop
out
mov
or
pop
pop
add
fadds
lods
ljmp
aaa
push
cld
pop
add
call
xchg
fisttps
sbb
insl
nop
lahf
xchg
cmp
out
add
adc
les
add
sahf
stos
shl
mov
imul
rorl
push
add
lahf
mov
adc
jg
push
dec
notb
push
in
jl
clc
fildl
mov
mov
sub
fwait
inc
stc
scas
into
fucomip
add
ret
or
adc
repz
inc
sub
shl
add
mov
jb
test
xchg
pusha
shll
pop
call
stc
mov
sub
jbe
bound
stos
pusha
enter
adc
lcall
imul
mov
cmp
aas
test
daa
lock
je
sbb
and
mov
outsb
popf
add
add
inc
clc
push
adc
adc
gs
inc
lock
sti
sbbb
jle
aas
addr16
adc
clc
stos
and
pop
sbbb
mov
or
xchg
lret
pop
mov
push
push
insl
add
ret
cmp
incb
out
xor
jae
cmp
add
mov
jno
loop
add
pop
xor
imul
or
add
pop
cwtl
movsb
fwait
lcall
iret
xor
repnz
add
push
mov
add
add
mov
idivl
mov
mov
fimuls
push
adc
jae
lahf
dec
loop
lods
push
fsub
repz
js
xchg
jo
push
pop
or
cmpsl
stos
add
ljmp
jb
mov
subb
mov
jne
add
fmul
sub
jbe
aam
testb
pusha
adc
xor
sbb
mov
jecxz
cmp
sbb
ret
jmp
or
pop
lock
loopne
les
mov
mov
adc
pop
fidivs
dec
aam
add
cmovbe
pop
fmul
loopne
adc
test
lahf
out
add
shll
add
imul
cmp
xor
lahf
lods
mov
lods
cwtl
inc
xor
in
rolb
sbb
xchg
push
loope
imul
push
xchg
cmpsl
daa
iret
add
lods
nop
jns
jnp
xchg
cmp
jmp
ljmp
sbb
out
daa
push
add
mov
pusha
jle
cmp
pop
movsb
test
and
and
movsl
std
jne
sbb
mov
mov
xchg
clc
ljmp
hlt
sub
gs
add
jmp
mov
iret
add
cs
pusha
pop
dec
loopne
add
js
add
out
jno
xor
je
cwtl
add
mov
push
sbb
mov
push
add
mov
mov
sahf
xchg
or
sub
add
ror
dec
in
fisttps
add
or
mov
mov
mov
jnp
xor
jbe
ja
stos
pop
into
or
ret
sub
jecxz
cld
ror
or
test
insb
cmp
int
popf
out
xchg
repz
imul
mov
inc
aaa
insb
xor
jmp
or
cmp
fwait
pop
xor
pop
jnp
pushf
add
sub
pop
xor
lahf
ret
rolb
and
repnz
iret
lret
cld
int
mov
add
mov
jle
inc
jecxz
cmpsb
leave
call
push
xchg
sbb
mov
or
jno
ret
push
mov
lods
rorl
xchg
xchg
add
dec
xchg
jmp
mov
add
outsl
test
sub
push
jecxz
loop
fwait
lret
add
mov
xchg
dec
int
inc
dec
add
mov
inc
js
leave
xchg
and
push
sub
dec
ficomps
sti
pusha
xchg
mov
test
push
sbb
cmp
mov
add
push
xchg
dec
enter
adc
fidivrs
push
or
inc
add
xchg
dec
mov
fs
add
lahf
testb
outsb
mov
push
xchg
add
js
cwtl
xor
js
ja
cmp
sti
push
in
es
adc
add
push
pop
xchg
dec
ljmp
push
pusha
shll
sub
add
sbb
jecxz
rorb
pop
dec
leave
loope
in
pusha
push
fimuls
adc
int3
adc
add
ds
lret
lock
push
add
sbb
mov
sbb
pushf
cmp
dec
das
mov
adc
push
add
negl
xchg
inc
scas
dec
out
adc
and
out
mov
inc
add
jg
pop
insb
mov
cmpsl
dec
lret
inc
ljmp
aad
into
fxsave
lret
pop
incb
push
addr16
ds
cmp
lods
lock
sbb
mov
xchg
push
add
jmp
ss
sbb
insl
loope
push
or
add
aam
push
int3
add
adc
and
push
lcall
xchg
cmp
out
adc
add
addl
jae
xor
pop
and
sub
and
or
pusha
pop
fdivrl
sbb
inc
push
jo
cli
cwtl
push
xor
dec
add
or
jle
das
adc
loope
enter
call
jecxz
xchg
adc
xchg
les
divb
xor
add
inc
nop
sbb
and
int3
imul
jge
push
push
xlat
add
jecxz
mov
inc
fsub
and
aas
pop
or
loopne
push
jp
jmp
sahf
push
xchg
adc
and
push
or
mov
jecxz
lret
pop
rcrb
lods
add
mov
icebp
adc
mov
or
iret
inc
add
loope
call
movsb
add
cli
dec
out
and
lods
test
aas
jecxz
or
mov
flds
pop
cmp
out
fsubs
dec
xlat
and
add
int
ltr
in
and
std
filds
adc
imul
hlt
das
cmpsl
test
mov
jge
mov
and
outsl
add
loop
jo
inc
xor
add
jmp
add
lret
sarl
adc
add
pop
aam
xor
jmp
or
ss
and
jg
ja
repz
in
push
loopne
cmc
int3
ror
push
push
repz
and
xchg
test
ficomps
fnstenv
xchg
sbbl
fmul
push
out
sbb
cmp
je
scas
xchg
jg
inc
mov
inc
rcrl
push
xor
mov
xor
mov
pop
add
cmpsl
shlb
pop
and
cmp
test
out
cmp
push
push
lret
mov
cmpsl
frstor
iret
aad
mov
iret
push
pop
popa
xor
imul
lods
add
stc
clc
jecxz
mov
roll
mov
repz
scas
adc
mov
pushl
add
jno
dec
stc
lahf
dec
sahf
scas
movb
sbb
sub
and
and
inc
lock
clc
sbb
push
push
ficomps
jg
push
add
push
pop
or
xor
jbe
cltd
xor
jo
cli
idivl
dec
sub
add
adc
rclb
mov
cmp
jbe
bound
or
test
rorl
out
fcompl
sbb
add
xchg
arpl
push
into
add
je
mov
outsb
pop
scas
xor
sahf
icebp
xchg
push
add
mov
jecxz
and
or
inc
in
add
cmpsb
mov
jae
add
popl
xor
rcrb
mov
dec
pop
sub
scas
aaa
loop
push
add
test
add
xor
in
mov
xchg
or
incb
je
stos
mov
xchg
add
cs
or
in
dec
xchg
add
imul
adc
xlat
ret
mov
xchg
out
add
test
popa
fadds
jp
rcl
data16
insl
add
fimuls
popf
inc
scas
add
adc
lds
inc
add
in
rolb
dec
jae
pop
and
xor
roll
xchg
fdivs
aas
les
xchg
push
pop
inc
jb
dec
scas
popa
or
or
mov
add
or
mov
xchg
xchg
add
in
out
cmp
movsl
mov
add
enter
and
push
ss
outsl
stos
sbb
enter
xlat
xchg
add
mov
adc
or
mov
iret
negl
sub
xor
stc
push
push
mov
and
fld
out
add
sbb
aam
add
and
jmp
push
mov
adc
jmp
xchg
sub
sub
sbb
cmp
insl
add
or
mov
dec
fistpll
test
call
mov
outsb
in
out
fistl
pop
push
or
pop
xchg
add
cmove
ljmp
nop
mov
dec
and
mov
std
mov
xor
js
add
mov
sbb
sbb
dec
add
lods
jns
pusha
mov
aas
fcomps
addb
jmp
icebp
add
in
cli
cmp
push
and
lods
sbb
mov
add
test
addb
inc
jae
or
jecxz
mov
inc
les
push
mov
xchg
jb
aad
cmp
add
outsb
mov
xchg
inc
mov
lods
inc
icebp
inc
push
jb
jae
iret
pop
insb
out
add
cmpsb
cltd
add
dec
jne
inc
sbb
cmp
insb
dec
lds
test
jecxz
or
mov
xor
xor
pusha
outsb
dec
js
sbb
jmp
push
mov
enter
mov
pop
mov
push
mov
out
sahf
into
loopne
insl
cmp
sub
pop
sbb
mov
mov
add
sbb
gs
cli
enter
add
dec
xlat
je
sub
adc
cmp
or
stos
add
xchg
or
add
cmpsl
mov
add
and
jecxz
adc
repz
add
ja
je
pop
or
in
push
and
xchg
dec
push
addr16
jecxz
mov
push
sbb
lods
sbb
sbb
or
out
mov
scas
aaa
into
fs
rcr
push
in
adc
mov
popf
jl
mov
sbb
je
out
rorb
aad
inc
aaa
cmp
or
test
fsubrs
sarb
or
jne
mov
mov
fstpl
outsb
int3
adc
ret
loopne
mov
pop
add
into
rolb
xor
lahf
add
jg
sub
cmpsb
sahf
add
insb
addr16
pop
inc
cmpsl
add
xor
sub
or
mov
jne
add
sbb
es
repz
add
add
add
pop
fs
cmpsb
pop
lock
push
int
sub
das
mov
add
xchg
sub
jg
pushf
push
fstpt
xchg
das
adc
sbb
fcompl
shrl
lock
jp
add
push
rcrb
jb
dec
xchg
int
inc
lods
xchg
or
add
mov
aas
xor
add
mov
xchg
in
push
sub
out
out
mov
add
fists
and
inc
movsb
add
or
fisubs
and
add
rolb
or
add
sbb
mov
int
mov
xlat
add
loopne
jmp
imul
nop
mov
scas
adc
push
jo
mov
addb
pop
mov
cmp
add
xor
cmp
dec
pop
xchg
add
sti
test
mov
jo
sbb
aad
pusha
ljmp
cmp
aaa
xchg
push
xlat
jecxz
xor
cmp
mov
dec
addr16
mov
push
sbb
add
pmuludq
test
subb
in
lods
pop
jbe
add
adc
loopne
js
adc
sub
mov
sbb
push
lret
int3
popf
add
add
shrl
xchg
jno
fwait
mov
pop
pop
fiaddl
lret
in
out
jg
cwtl
add
repz
mov
add
push
xchg
xor
cmp
add
jbe
cltd
cmp
lods
fadds
int
iret
loopne
push
ljmp
sbb
ds
xchg
push
and
jne
movsl
mov
add
jg
jl
inc
clc
adc
lcall
and
sahf
fldenv
iret
mov
call
rcrb
adc
add
fildl
jo
mov
in
dec
mov
test
ret
jne
in
add
cli
pusha
fcomps
in
ds
xor
iret
push
test
pop
iret
bound
incb
jae
dec
outsl
add
jbe
sub
shl
out
and
add
sbb
rorl
aaa
add
lret
lods
add
xor
adc
jecxz
lods
popa
clc
test
mov
test
iret
add
dec
cld
rcr
mov
mov
lahf
cmp
lcall
test
push
out
jne
mov
scas
add
sar
add
dec
out
pop
lods
and
loopne
add
in
jae
inc
adc
repnz
loope
outsl
jecxz
js
mov
clc
pop
nop
arpl
xchg
stos
push
popf
fldl
rcl
pop
adcb
sbb
iret
mov
pop
mov
push
inc
mov
cmp
add
xor
dec
add
nop
out
in
inc
add
int3
mov
sbb
add
mov
add
add
in
testl
pop
xchg
xor
push
mov
add
push
and
ret
add
xlat
push
leave
orl
into
sbb
xchg
add
or
ss
ficompl
jne
pop
sti
add
push
inc
xor
mov
pushf
and
fcomps
fisttpl
mov
mov
loopne
xchg
inc
movsl
aad
lods
outsl
sbb
cmpsb
or
cli
dec
pushf
int3
add
push
or
inc
cmc
and
jbe
mov
lret
dec
jo
add
or
cmp
cmpl
inc
outsl
add
push
pop
xchg
je
pusha
cmp
pop
in
jno
fistpl
jae
loopne
mov
iret
add
push
or
out
lret
sub
cmp
add
cwtl
xchg
dec
js
sete
pop
mov
outsl
add
scas
push
adc
cmp
aad
popf
jecxz
mov
mov
cwtl
xor
add
pop
sub
cmp
pop
and
loope
adc
hlt
fistpll
xchg
cmpsb
daa
xchg
dec
js
add
lds
addr16
iret
dec
mov
popf
int
or
adc
push
outsb
psrlq
xchg
popa
jle
push
dec
mov
pop
or
fisubrl
xchg
adc
sbb
pushf
andl
popa
imul
or
movswl
pusha
mov
aas
mov
shl
add
imul
out
jne
sbb
daa
xchg
fbld
mov
cmp
mov
and
and
push
fcomps
enter
mov
mov
popf
add
gs
testb
push
rcll
sbb
ljmp
sbb
sbb
movl
mov
sbb
and
jne
lds
popf
xchg
loopne
loope
in
out
or
cmp
rclb
out
adc
and
ret
mov
mov
jmp
test
sbb
jae
mov
popf
add
test
lahf
hlt
test
mov
jns
push
data16
popa
add
int3
jnp
mov
movsl
mov
dec
xor
pop
out
cld
pop
mov
add
arpl
sub
sbb
pop
loope
std
jnp
cltd
js
xchg
push
add
fldl
sbb
xchg
mov
cmp
loopne
jno
xor
int
adc
inc
into
dec
adc
push
mov
dec
fsubl
sbb
lret
aaa
add
jnp
jns
add
or
xchg
jle
lea
xor
ljmp
lret
ja
xchg
test
xchg
mov
and
add
mov
shll
add
cmp
jb
mov
adc
inc
push
inc
push
test
mov
and
stos
cwtl
rcll
lods
adc
cmc
jb
pop
sub
jbe
dec
ss
loope
subl
int
or
jmp
popa
insb
std
mov
add
pop
ds
js
lcall
cmpsl
lds
jl
icebp
add
sub
add
and
mulb
xchg
sahf
or
pop
add
fldl
push
pusha
jp
das
mov
ss
push
cltd
loop
or
pusha
push
mov
rcl
push
fidivrs
sub
pop
sbb
sub
and
dec
push
shlb
sub
push
adc
in
nop
jp
mov
add
mov
daa
sbb
jge
rcrb
icebp
ffreep
es
scas
sbb
mov
fimull
sarb
add
mov
inc
pop
push
add
jb
jl
add
dec
adc
and
shrl
add
dec
and
sub
dec
jb
mov
mov
fsubrl
add
cld
mov
mov
or
outsb
xor
xchg
mov
int3
repnz
adc
push
xor
xchg
add
and
popf
aas
icebp
test
fimuls
in
add
mov
mov
adc
add
mov
aaa
call
into
add
push
pop
lcall
sbb
adc
mov
push
jne
xor
sbb
test
ret
les
aam
dec
sub
fdivs
sbb
jl
sub
cmp
sbb
jmp
addb
jne
add
push
xor
stc
pop
lret
add
loope
inc
inc
sbb
or
adc
add
sti
mov
arpl
jo
mov
mov
cmp
push
and
shlb
mov
pop
out
sub
push
mov
loope
adc
popa
mov
and
jbe
iret
mov
and
add
mov
ret
sbb
add
addr16
cmp
add
filds
pop
mov
adc
and
jb
inc
and
popa
arpl
inc
gs
sti
mov
add
jbe
nop
add
push
std
imul
sbb
arpl
xorl
das
jmp
add
lcall
out
scas
imul
repnz
stc
repz
out
lret
ficompl
xlat
push
add
stc
cmpsb
lds
mov
add
inc
push
inc
mov
int3
repz
hlt
cmpsb
and
cwtl
sbb
loop
sti
sbb
lods
add
repz
aaa
jbe
push
std
popf
add
inc
gs
ss
mov
add
icebp
aam
outsl
xchg
sub
add
movsb
add
lea
inc
cmp
push
add
stos
fildl
cld
adcl
cmp
outsb
jno
sbb
aad
sub
call
push
xchg
rclb
movsb
clc
add
je
or
jb
loopne
shll
mov
mov
inc
mov
cmp
dec
cwtl
sahf
pop
push
add
push
pop
push
add
in
loop
xor
add
lods
mov
adc
scas
data16
add
dec
das
mov
add
pushf
lcall
mov
push
pop
pop
adc
sub
add
cmp
sub
sub
enter
lea
in
adc
rcrb
mov
jg
pop
adc
sub
out
add
sub
add
inc
dec
scas
fstpt
mov
jae
test
test
gs
sbb
ret
push
push
or
adc
sbb
mov
loopne
sbb
sbb
fimuls
hlt
iret
in
lods
cmp
push
xchg
jmp
sub
adc
cmpsl
push
jns
add
add
js
jecxz
add
fadd
push
repnz
add
add
int
fistpll
xchg
movsl
add
pop
in
ret
mov
jns
lods
inc
sarl
adc
xchg
cmp
fsubrl
xorb
push
sbb
mov
out
cmc
mov
inc
sbbb
push
xchg
inc
subl
adc
xchg
xlat
cmp
and
xor
add
add
sbb
dec
xlat
cmpsb
addr16
pop
loope
test
or
test
loope
sub
push
xorl
test
test
sbb
mov
mov
sahf
add
mov
add
cmp
and
or
ss
sbb
mov
lods
jge
pop
lret
cwtl
mov
fisubs
enter
sbb
sub
cmp
fwait
leave
scas
rcll
aam
shl
add
inc
cwtl
xchg
scas
xchg
or
test
add
aas
pop
dec
and
cmpsb
in
ret
rcll
cltd
pop
out
out
stc
xchg
fisubrl
cmc
ja
pusha
ds
in
xchg
pushf
sbb
xchg
test
mov
sbb
repnz
das
lock
add
sub
les
mov
push
xchg
mov
cmpsb
andl
mov
xchg
mov
pop
add
test
inc
fisubl
mov
pop
xchg
xlat
inc
inc
jmp
stos
inc
ds
add
cmp
add
ret
in
hlt
pop
xor
shrl
push
icebp
adc
add
add
pop
mov
cmp
jge
sar
jb
mov
pop
mov
cmp
mov
cmp
jne
pusha
fwait
or
jecxz
bound
ljmp
mov
jnp
sbb
cmpsb
xchg
roll
mov
xchg
test
mov
inc
pusha
jbe
push
fistpl
pop
pop
in
and
imul
outsb
loopne
xor
sar
add
cmp
stos
add
jmp
outsb
add
or
or
adc
and
shrb
sbb
andb
das
cs
jmp
popl
mov
add
fucom
add
insl
mov
or
push
cltd
add
daa
arpl
sarb
fildl
adc
mov
jae
scas
add
jmp
pop
repnz
test
mul
lcall
pop
mov
add
jnp
aaa
mov
outsl
sbb
add
xchg
add
lahf
sbb
jo
mov
test
sbb
push
and
test
ret
push
jo
add
mov
cmp
sub
inc
fisubrs
add
jne
cmpl
test
mov
pusha
add
mov
push
aas
insl
fwait
and
add
or
bound
sub
loopne
mov
insb
pop
sub
pop
scas
and
add
sbb
mov
add
scas
stos
cmp
les
shll
pop
lock
sub
lret
out
add
add
subb
test
jno
js
cmpsl
stos
push
jno
cmp
loopne
shll
push
push
sbb
dec
add
je
xchg
or
out
jp
stc
dec
fldenv
pop
loope
xchg
xor
lock
ds
mov
imul
sub
test
sub
inc
inc
sbb
inc
loope
dec
cmp
pop
push
mov
js
imul
add
mov
mov
stos
mov
pop
jmp
arpl
xchg
add
push
mov
lahf
add
out
mov
add
sahf
orl
stos
aaa
add
setl
mov
nop
push
add
lea
imul
jno,pt
push
repz
arpl
add
test
add
inc
outsl
sbb
or
lods
js
xchg
mov
pop
jl
std
sbb
dec
mov
aas
les
sbb
gs
das
pusha
adc
sbb
ljmp
rcrl
sbb
dec
dec
push
int3
into
add
cmp
inc
add
or
fcmovnu
mov
mov
cld
dec
add
out
mov
in
adc
xchg
or
loopne
notl
push
or
call
fdivrp
and
mov
rcrb
jo
mov
xchg
sti
inc
jns
iret
lahf
xor
push
dec
fildll
mov
dec
mov
add
imul
add
jecxz
mov
cwtl
cmp
rorl
lret
mov
test
sub
into
das
mov
jp
add
mov
std
mov
pop
adc
dec
cwtl
add
stc
test
int
xor
rcrl
add
lret
lret
inc
sbb
xchg
loopne
jo
add
fisttpl
data16
mov
xchg
mov
add
add
enter
lcall
xchg
fwait
outsl
push
add
inc
int3
shlb
push
sbb
sarl
and
push
lea
xor
outsl
cld
fiaddl
loope
mov
pop
data16
add
imul
inc
jge
ljmp
fmull
dec
or
movsl
add
shlb
and
adc
outsb
aad
pop
jmp
sahf
or
push
add
pop
idivl
std
gs
add
jbe
or
int
add
test
loopne
add
into
sub
inc
xchg
xchg
lret
test
adc
jns
outsl
add
mov
ss
testb
cmc
mov
mov
cmp
sub
push
mov
and
call
imul
out
or
sub
jecxz
xchg
mov
cmp
add
add
in
mov
imul
bound
das
add
add
in
add
xchg
leave
and
lahf
add
xor
add
push
lea
add
fstpl
outsb
icebp
js
daa
leave
inc
pusha
aad
push
stos
xor
call
pop
clc
jns
mov
pop
pusha
into
mov
out
xchg
rol
push
ret
mov
cwtl
sbb
mov
mov
and
xor
push
pop
add
or
add
xor
sbb
dec
push
add
mov
add
fsubrs
iret
lret
xchg
sub
into
push
or
add
mov
inc
in
gs
sub
cmpsb
outsb
ja
jae
pop
xor
clc
or
adc
movsl
mov
ja
push
add
pop
dec
inc
mov
jne
push
xchg
cmpsl
addb
out
repnz
add
cmp
cli
add
testl
cmp
inc
pushf
out
rcll
add
lods
call
ss
cmpsl
adc
iret
in
mov
push
adc
mov
push
adc
mov
pop
subb
test
test
outsb
and
filds
sbb
jl
cmpsb
pushf
outsb
test
test
je
cli
pop
loope
dec
imull
jns
xor
ret
pop
add
int
in
push
dec
lods
sbb
add
test
jmp
pop
pop
mov
pusha
gs
lcall
stc
pusha
xor
pop
dec
jg
int3
out
add
cmp
xchg
add
jmp
inc
ss
push
mov
sub
or
test
cmp
mov
mov
hlt
pusha
mov
lods
pop
sahf
xor
mov
xchg
mov
out
scas
lock
sbb
mov
imul
cmp
fs
dec
inc
add
not
call
imul
or
test
add
push
add
mov
aaa
pusha
dec
ficoml
inc
xchg
and
xor
inc
adc
lock
or
inc
out
das
adc
cmp
and
pop
or
mov
mov
mov
movsb
shr
lcall
out
cmpsb
pop
imul
push
add
incl
call
daa
pop
sahf
add
mov
mov
jmp
data16
jns
mov
loopne
gs
stos
fs
mov
lcall
cld
add
sub
pushf
add
sbb
mov
pop
adc
add
xchg
std
xchg
sbb
into
addl
stos
movsl
mov
lret
fidivs
and
or
shlb
aas
or
sbb
cmp
cmp
loopne
xchg
loopne
xchg
cmp
mov
push
cmpsb
test
bswap
push
xor
pop
lds
add
add
jae
ss
add
int
jo
loopne
pop
and
leave
add
dec
and
mov
add
test
sti
jne
test
inc
pop
adc
sub
mov
and
fimull
adc
inc
imul
mov
mov
add
pushf
dec
sbbb
jmp
test
subl
pop
jg
in
mov
xchg
out
movsb
inc
inc
add
mov
loop
jge
jmp
rcll
stos
movsl
incl
pop
leave
mov
pusha
jbe
sarl
sbb
xchg
lds
scas
push
mov
add
mov
neg
xor
cmp
jle
mov
push
adc
pop
sbb
imul
out
cmpsl
insb
sahf
clc
bound
mov
data16
cmc
dec
aam
xchg
xor
dec
add
mov
jle
push
mov
div
mov
stos
sbb
fmull
and
out
jp
mov
rcl
xchg
les
and
test
lret
sbb
scas
jne
test
add
repz
int
scas
pop
cmp
mov
xchg
js
and
adc
or
daa
jne
fsubl
add
iret
dec
xchg
cs
jecxz
sbb
lret
sahf
jae
adc
mulb
stos
pop
or
push
push
sbb
add
clc
cmp
add
mov
sub
popa
add
in
jns
repnz
cli
fadd
mov
andb
cmc
adc
sbb
and
sbb
push
lds
inc
lret
sti
mov
jmp
rcr
inc
popa
ss
mov
cmp
inc
mov
rcr
scas
movsb
add
lret
push
pop
mov
push
sbb
bound
loope
xor
jbe
push
in
flds
cmc
xchg
shll
add
cmp
and
jae
and
and
shr
ja
aas
loope
bound
sbb
das
xor
or
sbb
sbb
mov
cmp
mov
add
clc
adc
add
push
sub
int
sbb
jecxz
stc
add
sti
mov
sbb
add
lret
cmpsl
cmpsb
in
fimull
popa
push
inc
add
loopne
in
inc
mov
in
jbe
cmp
inc
add
enter
or
dec
mov
loope
out
int3
cli
adc
pop
add
mov
push
icebp
add
das
jae
mov
call
dec
loopne
sahf
das
hlt
notb
arpl
dec
mov
and
add
mov
cmpsb
out
ds
add
fldcw
rol
pop
mov
cmpsl
idivl
jnp
add
aaa
lret
sti
clc
shll
imul
jp
add
popf
loope
dec
leave
stos
jecxz
repnz
or
mov
add
mov
push
cmp
add
inc
rolb
cmp
pop
cwtl
jecxz
or
inc
jbe
adc
sbb
add
aaa
or
pop
push
dec
out
test
xor
adc
fildl
sub
jg
test
insl
ljmp
scas
stos
pop
adc
and
pop
jne
and
ret
sub
mov
mov
cwtl
inc
mov
mov
push
pop
xor
test
mov
xor
addb
adc
and
xchg
fcomip
lcall
inc
fs
add
and
sub
dec
cmpsl
iret
loope
push
std
adc
stos
or
test
xor
and
pop
out
xchg
sbb
push
add
out
in
xor
adc
and
fldenv
xchg
jnp
mov
mov
adc
shrl
add
insb
out
inc
arpl
xor
enter
jne
repz
xor
mov
std
arpl
sbb
ret
sub
sbb
pop
aad
mov
sahf
adc
adc
jp
das
dec
xchg
test
push
inc
add
iret
stos
mov
jno
add
roll
out
shrb
adc
lods
out
cmc
out
and
cmpsl
sbb
out
movsl
lcall
out
add
adc
fldt
insb
sar
fidivl
lahf
xchg
sarl
add
adc
imul
cwtl
lret
out
jnp
inc
addl
ljmp
mov
fsubl
shlb
xor
sbb
push
testb
outsb
les
and
xchg
or
cld
pop
add
test
adc
ret
pusha
pop
test
or
sbb
sbb
aaa
ljmp
in
and
loope
testb
add
sbb
sbb
mov
pop
jmp
pop
adcb
and
push
repz
jmp
mov
pop
add
mov
int
fisubs
dec
sub
add
fidivrl
ss
xorl
sbb
repz
addr16
je
cwtl
icebp
xor
pop
imul
nop
pop
pop
mov
pop
das
adc
fsubr
add
test
inc
push
dec
add
xchg
mov
lahf
jp
loop
sbb
nop
add
pop
and
pop
push
cltd
lcall
mov
shrl
xchg
pop
add
sub
jnp
scas
or
pusha
repz
jbe
sbb
pinsrw
ds
sub
fnsave
add
inc
jns
iret
mov
jno
push
stos
sub
jmp
ljmp
aaa
popf
pop
pop
add
xor
xchg
add
imul
cltd
and
add
mov
add
rcrl
mov
mov
push
or
das
xchg
or
xor
lcall
add
jp
push
roll
and
mov
mov
std
pop
outsb
add
fisubrs
xchg
or
mov
movsl
je
add
cld
out
sub
sbb
repnz
stos
adc
test
mov
push
dec
xchg
fimuls
xchg
add
ror
fs
mov
loope
pushf
into
pop
adc
or
loope
sbbb
mov
hlt
jg
jbe
lds
pop
pusha
push
xor
loope
mov
inc
add
and
stos
sbb
and
imul
icebp
inc
roll
mov
rclb
daa
pop
cmp
pusha
dec
outsl
adcl
cmp
add
mov
xor
pushf
pusha
sub
pop
xor
js
sahf
cmc
pop
inc
shrb
lods
ffreep
pushf
sbb
lds
inc
adcb
push
add
cli
lcall
aam
shr
gs
ds
mov
ljmp
mov
shr
or
and
push
mov
adc
inc
add
loopne
repz
pusha
mov
in
adc
mov
mov
std
and
cmp
sbb
sub
gs
cmp
jnp
add
iret
outsb
aas
add
mov
add
xchg
mov
not
cmpsb
clc
cmp
push
addl
cmp
cmp
test
push
xchg
push
add
fs
pop
push
or
in
lret
cli
cwtl
pop
mov
test
cmpsl
jp
xchg
adc
sbb
jmp
add
cmpsb
iret
inc
xchg
sub
pop
xchg
lret
lcall
or
rorb
sbb
shrb
mov
or
hlt
mov
addr16
add
cmp
mov
add
pop
sub
roll
fmull
jecxz
adc
and
pop
push
or
push
add
mov
loopne
ss
std
aad
ja
fs
add
cltd
xor
pop
loopne
je
or
add
aad
push
add
mov
clc
shlb
push
arpl
dec
cmp
xor
iret
inc
adc
adc
add
xchg
rcr
into
ss
jl
sub
fdivl
jbe
cmp
loopne
sbb
cli
adc
clc
das
mov
ret
outsb
loop
xor
xchg
xor
icebp
fistpll
push
in
add
push
mov
out
loopne
push
movsl
xchg
xor
repz
xchg
push
sub
mov
nop
add
rcl
cmpsl
jl
adcb
jmp
mov
lods
pop
pop
leave
out
hlt
adc
add
add
sbb
daa
jno
cmp
nop
mov
or
sub
push
sbb
add
mov
sbb
inc
push
icebp
imul
cmc
or
fidivs
cld
jbe
mov
add
and
mov
in
inc
pusha
cmp
dec
add
decl
add
add
lock
push
adc
fidivs
mov
add
mov
in
inc
mov
push
lea
dec
mov
add
adc
pusha
push
es
xchg
faddl
sub
test
cmpsb
bswap
dec
add
xchg
roll
and
and
mov
adc
outsb
test
int
and
pop
jmp
or
sub
mov
sbb
lret
pusha
lock
add
xor
jo
inc
dec
enter
sahf
adc
mov
mov
imull
cmp
pop
fsubs
add
pop
sub
outsl
popa
sti
shlb
icebp
lods
sbb
movsb
in
das
scas
shll
rcrb
inc
push
mov
int3
das
movsb
xchg
dec
adc
dec
or
sbb
imul
les
mov
sbbb
and
cmp
fbstp
or
xchg
shlb
and
aaa
adc
or
test
sbb
xchg
jnp
mov
add
loop
out
es
mov
in
imul
les
add
stos
inc
aam
fbld
jge
out
sbb
xchg
cmp
mov
dec
test
lcall
inc
je
xor
xor
jmp
pushf
pusha
pop
pusha
repnz
jecxz
and
mov
cmp
jle
adc
sahf
xor
inc
sub
adc
add
cwtl
dec
adc
inc
mov
sub
mov
sbb
repz
outsb
sub
addr16
mov
add
bound
add
xchg
lea
inc
sbb
inc
pop
sub
aam
sbb
xchg
daa
pop
push
xorb
xor
push
popa
mov
jg
shlb
inc
rcll
and
loopne
andb
mov
lea
fmuls
mov
mov
inc
push
fistpl
jl
outsb
aas
sub
jmp
or
inc
cwtl
jbe
add
pushf
movsb
jnp
clc
add
and
cmp
decb
into
add
cmpsl
and
jle
adcb
in
inc
xchg
fstpl
add
jae
sbb
lea
cmpsb
imul
test
pop
or
add
arpl
repz
mov
dec
add
stos
or
add
mov
inc
out
stos
ljmp
mov
aad
dec
insl
hlt
add
dec
xchg
sti
add
insb
adc
sbb
add
sub
adc
cmp
in
cmp
mov
xchg
adc
loopne
add
fstpl
cltd
add
push
int3
pop
add
mov
aad
add
movsl
jecxz
lret
push
inc
jnp
inc
and
sbb
in
aaa
add
inc
dec
xlat
adc
sahf
ljmp
es
fisttpl
adc
pop
xor
jo
fwait
adc
add
jge
imul
push
mov
mov
inc
inc
mov
cld
sarl
pusha
je
mov
fwait
xlat
movsb
sub
sbb
popa
jno
jo
stos
push
ret
mov
test
xor
cmpsb
stos
mov
les
std
pusha
jg
inc
mov
adc
mov
xchg
test
add
sarb
add
les
loopne
repnz
pop
ljmp
add
out
cmp
xlat
sbb
shll
es
cli
jg
jne
xor
add
push
add
sti
mov
add
into
mov
push
rcr
add
push
notl
sbb
mov
sbb
mov
imul
insb
stos
inc
push
outsl
adc
sbb
add
sahf
cmp
dec
mov
xchg
add
lds
xor
out
sub
and
push
movsl
fsub
jecxz
inc
or
int3
xchg
cmp
push
dec
sti
out
mov
push
lahf
sub
mov
ret
sub
jb
in
and
lods
cmp
add
mov
add
lock
push
or
insl
jecxz
dec
cmp
mov
lock
xlat
hlt
dec
shl
pusha
lods
icebp
push
ss
adc
aas
imul
in
mov
sub
and
lea
add
cmp
add
jo
leave
test
push
add
jno
or
movsb
movsl
jecxz
inc
gs
pop
cmp
jl
cmpsb
rcr
or
push
add
fldt
ljmp
into
iret
lds
push
pop
push
call
push
mov
xor
jmp
bound
jmp
jne
js
pop
sub
clc
pop
and
adc
sbb
imul
jae
xor
pop
add
add
stos
jbe
push
add
leave
add
jne
outsb
add
mov
cmp
mov
stos
inc
push
mov
icebp
std
popa
jb
add
loope
sbb
or
aam
or
lock
mov
cmp
incl
add
jae
pop
cvtpi2ps
jecxz
jg
jne
or
sbbl
aam
lods
in
or
daa
aas
add
nop
adc
add
xor
push
outsb
add
sbb
mov
or
sbb
add
imul
mov
xchg
mov
scas
lret
aam
in
mov
fists
sbb
fisubs
inc
add
pop
popf
dec
add
mov
sub
jnp
flds
ret
js
pusha
faddl
scas
add
sub
mov
pop
lds
mov
jmp
or
test
cmpb
lahf
out
lods
pop
insl
adc
add
add
mov
inc
data16
lods
jmp
mov
jg
sbb
sbb
sbb
add
ret
pop
sbb
sti
nop
add
add
pop
cmp
test
mov
aas
xchg
mov
adc
mov
jo
inc
into
sti
aam
add
jae
push
ret
sbb
daa
das
jge
cwtl
dec
adc
dec
inc
mov
mov
lahf
sub
jmp
js
sbb
mov
jbe
jecxz
les
jb
mov
push
cmc
cmp
rcrl
pop
insl
sbb
adc
pop
cld
sbb
jne
mov
adc
jecxz
xor
or
movsb
add
inc
hlt
push
cmpsb
adcl
dec
fidivl
pop
ror
and
inc
sbb
les
sub
sahf
add
aas
xchg
aad
ljmp
push
enter
mov
adc
pop
sub
imul
or
loope
cld
movl
adc
mov
cmc
adc
dec
enter
dec
incl
mov
stc
mov
pop
and
push
les
cld
push
addr16
ljmp
pop
add
rorb
sbb
movsl
push
add
repnz
enter
inc
xor
cmc
inc
inc
out
sub
negl
add
and
inc
pop
inc
in
xlat
sbb
mov
xchg
lret
sub
xor
and
add
sbb
movsl
mov
sbbb
push
loopne
and
add
xor
jmp
lcall
ja
jae
mov
jecxz
pushf
mov
push
gs
out
cmpsl
and
fldt
jmp
inc
div
scas
add
mov
pop
jb
addr16
and
add
jmp
out
push
sbb
bound
mov
rclb
jb
fidivl
add
jmp
jae
insb
add
pop
pop
add
jnp
testb
mov
cmp
add
fcoms
add
mov
xchg
add
push
mov
mov
fldenv
leave
mov
xchg
fcompl
int
and
pop
mov
push
cmp
icebp
sub
jp
cmp
inc
xchg
or
test
pop
and
pop
es
cltd
xorl
add
xor
popa
inc
lcall
and
loope
std
test
mov
add
cld
or
cmc
js
xor
push
sbb
xchg
nop
outsl
jl
mov
dec
mov
pop
add
lcall
add
mov
subl
orl
jnp
outsl
pop
loope
dec
dec
data16
cmpsl
ss
sbb
pop
jl
loopne
sarb
inc
mov
cmp
jne
movsb
std
inc
pop
add
adcb
neg
mov
add
mov
in
dec
in
inc
popa
arpl
inc
pusha
push
cltd
jnp
add
or
jo
pop
ja
or
dec
sbb
sbb
test
sub
bound
push
dec
inc
loope
das
adc
mov
sub
and
lea
dec
adc
in
pop
or
andl
pusha
movsb
xchg
movsl
push
adc
bound
xchg
xchg
aaa
add
xchg
fiadds
sbb
out
and
mov
xor
xchg
jns
sbbl
and
push
movsb
cmp
lret
add
adc
das
mov
add
mov
pop
fabs
cmp
enter
inc
clc
or
faddl
cmc
pop
rolb
fwait
test
xorl
pop
inc
sub
repz
and
adc
js
cwtl
sub
add
outsl
push
dec
adc
ljmp
mov
mov
js
add
pop
shlb
and
imul
push
loope
add
mov
shrl
jp
into
icebp
stos
data16
mov
cmp
push
aas
test
in
adc
mov
fistps
add
es
arpl
fmull
sub
add
test
jo
add
mov
pop
pusha
add
cli
lock
jl
sbb
mov
dec
jmp
mov
add
test
stos
add
into
mov
fimull
mov
addr16
out
inc
ds
stc
add
mov
mov
mov
outsb
shl
sbb
repz
int3
inc
mov
addb
lods
or
outsb
xor
add
mov
andb
movsl
pop
and
and
outsb
sti
loopne
test
pop
mov
cwtl
test
push
fwait
add
and
mov
cmp
sub
mov
add
push
movsl
std
xchg
mul
icebp
in
mov
jmp
add
xchg
imul
pop
add
xor
sbb
test
dec
lret
add
cmpsl
dec
jne
sbb
cmp
xchg
leave
idivb
or
cs
cld
stos
inc
xchg
add
aaa
jo
pop
cli
add
in
dec
cmp
loopne
jp
sti
nop
and
sub
add
imul
pop
mov
sbb
dec
cld
jnp
cs
sbb
add
cmp
dec
icebp
mov
mov
adc
fsubl
movsl
mov
inc
rolb
stc
mov
mov
and
dec
add
push
mov
sbb
add
test
mov
inc
add
das
inc
ret
xor
push
loope
test
loopne
xchg
push
inc
cs
loopne
mov
adc
mov
jp
jl
out
jns
testb
jne
mov
imul
mov
inc
adc
mov
sub
add
out
sbb
sub
lahf
dec
add
mov
mov
cmpsl
add
jno
ret
sbb
pop
orb
sahf
inc
inc
or
add
xor
add
es
ret
rolb
jo
je
fildll
mov
jne
dec
jge
add
fisubs
add
xchg
add
stc
dec
xchg
add
fisubrs
call
add
jmp
jge
dec
mov
ret
mov
bound
xchg
movsl
test
mov
pop
or
fidivs
dec
inc
jp
insl
push
cli
push
mov
fsub
add
mov
adc
xor
ret
inc
mov
ds
ljmp
test
mov
loope
cmc
push
cld
or
mov
movsl
cmpsl
ret
jge
jno
shll
lods
daa
outsl
xlat
adc
unpckhps
add
scas
mov
add
push
push
xor
pop
mov
cmp
add
in
add
sbb
jg
out
add
fsubl
out
jo
jno
mov
adc
xor
lea
push
movsb
aam
sub
sub
sub
add
add
fistpl
lahf
fsts
add
shrl
xor
cwtl
cld
mov
popf
sub
pushf
inc
xchg
cmpsl
outsb
loope
mov
push
lock
jae
mov
add
mov
pop
xchg
and
cmc
push
mov
mov
cs
out
pusha
pop
outsb
push
mov
jo
add
push
jnp
cmp
inc
add
sbb
pop
ret
mov
ss
loopne
das
cli
jmp
sahf
lret
sbb
aaa
fcmovnbe
incb
fists
push
xchg
cmpsl
sbb
inc
or
or
in
pop
add
scas
fildll
xor
stos
popf
and
adc
fisubrl
stos
loop
xor
sub
mov
cmp
cmp
jecxz
jle
add
out
jns
mov
je
add
cli
stc
repz
hlt
push
rolb
mov
movl
mov
ret
loop
sbb
push
stos
add
rcl
jb
inc
mov
into
out
paddb
add
push
ljmp
or
mov
scas
rclb
xchg
add
stos
lret
mov
sub
lcall
daa
pusha
mov
add
jae
add
fiadds
mov
lock
xor
dec
add
pop
aas
lcall
sahf
sbb
scas
test
push
add
lret
clc
jne
sbb
imul
mov
add
testb
pushl
test
fnsave
adc
sbb
pop
sbb
orb
xlat
pusha
xchg
mov
inc
mov
add
cmp
add
mov
adc
cmpsl
xchg
and
inc
pop
insl
lods
or
push
mov
filds
pop
ficomps
xchg
dec
sub
dec
pop
je
adc
xor
into
inc
sbb
push
sbb
pop
stc
pusha
clc
push
push
xor
in
les
xor
dec
and
sub
ljmp
or
sbb
pushf
stos
add
push
int
add
arpl
mull
lret
std
loopne
pop
pushf
out
ret
add
into
add
push
cmpsl
pop
jno
jo
outsb
test
inc
cld
jmp
pusha
or
fimuls
inc
cmc
sarb
add
pop
fsubrs
jge
mov
sbb
dec
push
incb
in
ss
cmp
add
sbb
in
push
cmc
lret
stos
incl
hlt
jg
nop
pop
xor
xchg
in
dec
push
adcl
mov
rcrl
adc
add
pop
dec
in
xor
je
out
xchg
sbb
outsl
add
and
inc
je
fdivs
outsb
sbb
xchg
jbe
out
sub
inc
xor
push
add
call
or
fistpl
int
mov
jmp
dec
xchg
ret
ret
fadds
incl
out
imul
and
gs
mov
sbb
mov
pop
test
mov
fisubl
cltd
jne
test
gs
xor
dec
and
test
sbb
pop
rcrl
xchg
cmpl
mov
popa
add
addr16
xorb
pusha
aas
cmp
add
mov
fdivrp
add
aam
jnp
stos
out
add
add
out
adc
rol
into
int
and
and
jp
sbb
cmp
push
add
ror
push
sahf
xchg
mov
pop
jae
imul
pop
enter
dec
add
je
lods
lcall
sbb
pop
mov
add
jo
add
movsl
insl
xchg
and
test
lds
ret
jmp
test
sub
jae
pop
jecxz
fwait
das
fistl
cmp
int3
add
popf
sub
loopne
adc
add
sbb
push
add
jb
cmp
clc
sub
ljmp
popa
add
adcl
orl
cmp
push
out
mov
adc
sub
and
push
lret
in
popf
cld
inc
adc
rcl
jb
dec
in
xor
sbb
add
add
jge
loopne
jg
xchg
cmp
dec
mov
jo,pn
inc
adc
xchg
roll
fisubrs
insl
bound
test
mov
imul
mov
and
hlt
add
sahf
pop
sbbl
loop
shlb
adc
add
sbb
lahf
dec
xchg
icebp
sbb
fisubs
movsb
repz
je
mov
xlat
adc
and
test
pop
xor
les
loope
das
je
adc
jmp
lcall
add
sub
fs
inc
add
std
daa
incl
out
data16
test
add
adc
clc
rolb
sub
add
jb
jno
add
mov
xchg
add
shlb
add
iret
fisubl
mov
pop
sahf
push
enter
xchg
jns
push
int
jbe
hlt
xor
xchg
flds
mov
fdivl
jecxz
hlt
popa
add
or
mov
mov
or
cmp
push
add
mov
adc
add
sbb
or
cwtl
fisubs
dec
push
test
stos
inc
cmpb
dec
mov
popf
jo
sbb
and
add
imul
call
add
pop
mov
cmp
int3
sbb
sbbl
in
pop
xchg
mov
or
push
gs
add
and
mov
add
mov
cli
add
shlb
add
sub
and
cli
cmp
into
mov
jne
arpl
sbb
subl
sbb
sbb
lea
mov
test
jbe
add
pop
add
pop
scas
les
add
adc
cmp
push
add
or
xchg
sub
sbb
push
adc
fwait
aas
dec
add
inc
mov
outsl
scas
stc
xchg
mov
in
mov
mov
movsb
push
push
movl
pushf
cmp
mov
inc
clc
fcom
mov
mov
cmp
jmp
mov
and
jo
mov
loop
add
push
aad
sbb
test
mov
loop
or
fs
cmp
repnz
mov
add
stos
ret
add
les
cmp
add
xor
jb
pop
add
sub
pop
rcll
or
xor
arpl
pop
mov
js
jle
and
dec
pop
sbb
and
pop
outsb
adc
inc
jp
pop
add
push
push
jecxz
enter
jbe
lahf
mov
adc
ret
xlat
fnstcw
cmp
mov
pushf
add
pop
test
sbb
add
in
orb
push
push
aas
js
jbe
add
jb
push
mov
xor
pavgb
cmpsl
add
jle
sbb
scas
insl
mov
cmp
call
sub
or
hlt
rolb
cmp
pop
sub
movsb
test
gs
shll
jmp
mov
xchg
fstl
lods
push
lret
xor
push
sbb
add
loopne
mov
hlt
ja
fnstsw
pop
out
mov
add
push
pushf
and
and
jg
mov
pushw
into
push
and
dec
sbb
pop
jns
sbb
repz
cmc
fsts
push
push
aaa
add
push
mov
jne
cmpsl
and
or
dec
xchg
getsec
and
inc
subb
cltd
mov
and
add
sbb
or
or
mov
add
jns
xchg
cmp
sub
adc
in
jae
bound
add
int3
or
daa
movb
movsl
jmp
adc
mov
and
inc
add
xor
cmc
insl
dec
jo
verw
rcrl
jp
in
clc
cmovbe
dec
cltd
push
lods
sub
mov
ret
or
ja
fsubrl
out
mov
stos
stc
adc
lea
or
jp
jl,pn
fisttpl
mov
shrl
sbb
daa
rcrb
add
adc
dec
movups
lods
dec
lcall
insl
sbb
jne
add
jb
je
rcrl
out
sbb
mov
stos
and
jno
roll
sub
sbb
rcrb
arpl
sti
stos
add
je
pop
loop
flds
push
jmp
pop
dec
pop
sarb
push
outsl
pusha
adc
stos
sbb
cli
add
into
xchg
fbstp
incb
out
ja
add
sbb
sbb
aad
pop
sub
sbb
loopne
out
iret
fidivs
icebp
sbb
das
loop
int
pop
into
fbld
push
sub
push
fcoms
jae
test
jmp
xor
in
fisttpl
fwait
and
mov
push
imul
lds
daa
cwtl
push
jle
pop
mov
ljmp
inc
in
pop
lods
add
aas
jecxz
mov
arpl
adc
mov
rolb
xchg
add
dec
add
icebp
ja
roll
jbe
mov
mov
jb
cmpsl
testb
push
inc
xor
cld
cmp
or
push
cmpb
leave
shlb
add
lea
push
sahf
lcall
adc
ficoms
sub
in
and
daa
or
dec
bound
cmp
adc
cwtl
mov
add
mov
movsb
sbb
jecxz
sub
dec
add
xchg
pushf
rorl
add
cmpsb
mov
ja
cli
sbb
int3
nop
add
lahf
in
punpcklbw
push
inc
fmul
push
inc
xor
add
imul
repnz
pop
jecxz
je
sub
mov
into
daa
in
loope
and
push
adc
or
jnp
add
and
ret
fldenv
lret
stos
push
jo
mov
scas
or
lea
sbb
add
jb
dec
push
sbb
xor
add
dec
adc
pop
mov
outsl
in
dec
xchg
add
jae
xchg
sub
adc
sub
add
ret
fmull
rcrb
push
mov
outsl
mov
xchg
add
sbb
popa
in
and
cmp
add
jne
adcb
and
incb
cwtl
jmp
pop
pop
mov
sbb
cmpsb
inc
mov
and
cld
stos
mov
ror
dec
add
pop
and
lcall
cs
xchg
js
ss
lock
loope
jmp
jns
mov
mov
adc
pusha
or
or
into
add
test
fistpl
adc
dec
mov
mov
push
pop
inc
mov
fs
or
sbb
xchg
xor
adc
movsb
ss
negb
sbb
dec
push
sbb
int
sbb
ss
ljmp
mov
push
xor
jle
shrb
lock
mov
insb
cs
movl
add
mov
add
push
jbe
and
int3
xchg
add
inc
xor
out
bound
add
add
sti
or
add
scas
into
stc
in
in
cwtl
mov
fadds
and
push
scas
or
sahf
lods
add
or
cmp
add
repz
mov
insb
in
jbe
lret
ret
dec
rcl
aad
pushf
pop
negb
mov
add
mov
lods
inc
mov
cmpsl
add
call
mov
jo
xchg
lock
add
fimuls
cmc
outsb
add
xor
mov
arpl
push
add
and
fstps
shrb
and
imul
call
xchg
jno
loopne
push
lds
sbb
clc
add
daa
pop
xor
pop
mov
ja
push
or
lods
lds
xor
sbb
testb
fbld
ss
add
add
inc
push
jg
xchg
loopne
lds
add
sbbb
sbb
stos
jl
push
jle
adc
pop
test
and
and
pushf
in
add
add
ljmp
fadds
add
shlb
es
pusha
and
sub
sub
jb
icebp
inc
add
ljmp
mov
add
inc
xchg
jg
xchg
xchg
add
xor
inc
sub
loopne
sbb
push
sahf
mov
mov
mov
push
mov
or
popf
test
xchg
mov
or
pop
bound
mov
adc
ret
imul
mov
adcl
insl
test
add
push
inc
fnstsw
shll
adc
loop
add
push
xor
lock
aam
mov
xchg
es
cmp
test
cli
add
rorb
jle
aam
xor
fidivrs
sti
sahf
test
mov
loope
add
pushf
push
jnp
rclb
xchg
pop
dec
push
add
stc
xchg
or
pop
sbb
xchg
ljmp
std
adc
in
loopne
xchg
into
pop
push
mov
jae
outsl
xchg
lods
shr
lcall
add
ljmp
sub
mov
das
inc
add
addl
and
inc
mov
dec
vmptrld
lods
jo
xchg
ret
cmc
or
sbb
push
xchg
add
out
cmp
in
popf
add
push
jl
movsl
out
addl
fdivs
movsb
jbe
hlt
add
push
pop
pop
sbb
fsubr
add
mov
and
scas
hlt
sahf
jg
iret
lahf
sub
mov
fld
add
pop
push
sbbl
and
mov
inc
pop
daa
fidivs
push
jnp
das
icebp
loop
xor
in
mov
add
and
mov
fistpll
xor
add
sahf
xor
pop
mov
adc
enter
add
nop
xor
mov
cmp
push
inc
lods
jp
mov
loop
mov
fmul
sahf
add
jnp
jge
outsb
pop
push
scas
mov
and
fwait
inc
cmp
testl
adc
pop
movsb
add
mov
fldcw
aad
and
stc
leave
pop
add
enter
loope
add
outsb
sbb
push
lcall
mov
inc
and
add
cmp
pop
lahf
cmp
push
mov
loop
mov
cmp
call
add
aam
mov
loop
mov
xchg
inc
sbb
movsb
das
loop
add
mov
add
dec
divl
mov
stos
inc
pop
pushf
and
xchg
dec
shrl
add
das
das
add
xchg
lds
dec
and
push
sub
pusha
pop
jle
sub
jl
inc
push
pop
mov
sarl
outsb
add
dec
cmp
cld
popf
add
inc
jge
popa
push
loope
int
insl
and
pop
pusha
rorb
sbb
mov
push
dec
nop
je
sub
add
sbb
in
push
push
fwait
cwtl
sbb
imul
push
add
or
rcl
pop
adc
test
jno
and
inc
mov
aaa
pop
fbld
mov
daa
xchg
arpl
jo
pop
jno
sbb
push
jbe
iret
imul
cmp
pop
rolb
leave
out
in
fdiv
lods
and
mov
adc
movsb
add
sub
pop
test
adc
mov
lahf
xchg
xlat
mov
and
cmp
sahf
jns
inc
fildl
xchg
outsb
notl
js
outsl
xor
jmp
test
jge
ret
add
pop
add
sti
dec
ret
lret
repz
mov
push
xor
movq
bound
dec
aam
rorw
lea
repnz
xor
ret
jmp
ficoms
mov
dec
loopne
xchg
jmp
sub
mov
xor
push
or
rolb
test
pop
scas
pop
aad
leave
pusha
inc
dec
es
pop
fistpl
popf
sub
dec
fnstenv
aas
sbb
dec
das
les
loopne
or
flds
push
sahf
pusha
xchg
test
jmp
rorb
add
xchg
xchg
loopne
mov
sti
lds
jbe
and
add
jmp
in
add
scas
sbb
mov
push
sarb
imul
cmpsl
sub
mov
dec
add
jl
inc
cmp
xor
vpminub
sub
dec
add
cmp
xchg
imul
adcl
in
inc
and
cmc
or
jae
int3
lods
add
push
add
add
add
and
add
mov
jp
addb
mov
sahf
dec
add
push
add
lods
xor
jge
incb
push
outsl
pop
add
mov
jmp
mov
lahf
adc
loop
add
jecxz
test
push
jle
cmp
addr16
outsl
movsb
push
xchg
lcall
aam
mov
mov
push
roll
outsl
je
jmp
lea
imul
test
loope
leave
sub
mov
ficompl
mov
sub
and
insl
repz
mov
stos
inc
jne
mov
lahf
jmp
pop
outsb
leave
das
lock
inc
jge
fwait
add
pop
xchg
or
add
inc
jle
fists
imul
xor
cmpsl
sbb
insb
xor
sub
dec
std
adc
mov
and
andb
fdivr
movsb
xor
mov
cmc
inc
xor
inc
mov
add
into
mov
mov
int
das
and
loopne
inc
lahf
mov
mov
je
cltd
ret
add
sarl
sub
add
or
iret
xor
pop
rcll
repnz
pusha
test
push
push
int
pop
cmc
loopne
outsb
dec
addb
pusha
pop
loopnew
dec
or
je
in
sub
and
dec
daa
adc
fisttpll
push
xor
in
into
sarb
aad
movb
out
xchg
rcrb
jae
ds
fldenv
rcl
cmp
lahf
cwtl
dec
add
pushf
cltd
sbb
add
fcompl
add
sub
stc
mov
out
and
ret
add
push
push
cmp
scas
in
jne
inc
daa
xor
hlt
mov
dec
jl
add
int
iret
fists
es
std
psubb
sti
push
push
icebp
adc
or
jns
mov
cld
push
sbb
add
andl
mov
jmp
hlt
sbb
adc
push
cld
rcrl
repnz
repz
push
mov
add
pop
mov
mov
mov
mov
xchg
imul
pushf
lea
and
xor
add
adc
mov
addr16
add
cmp
insl
push
push
xchg
pop
sub
sbb
aad
scas
xchg
mov
ljmp
loopne
and
and
fwait
push
insl
jno
add
push
mov
inc
insb
mov
dec
cmpsl
xchg
call
dec
add
test
inc
pop
add
ret
push
scas
lds
icebp
movb
mov
and
dec
lret
out
dec
or
aaa
into
roll
and
pop
sbb
mov
mov
jns
jmp
stc
fsubrs
inc
add
cmp
sub
mov
sbb
rcr
add
xor
lods
add
in
mov
add
push
sub
push
cld
arpl
push
repnz
cmp
cltd
mov
xor
movsb
pusha
ret
stos
push
shlb
out
push
cwtl
ficoms
adc
xchg
test
stc
dec
clc
loopne
jb
daa
int3
ljmp
ret
sbb
xchg
adcl
pop
cmpsb
add
fisttpll
sbb
lahf
add
push
xchg
lds
mov
jg
jmp
add
aam
add
or
adcl
push
test
fcomps
pop
mov
jnp
adc
incb
scas
shll
adc
aad
int3
stos
lea
mov
dec
sahf
mov
sbb
sti
or
stos
adc
pop
ss
pop
add
movsl
cmpsb
lea
inc
dec
push
mov
push
jo
and
aaa
mov
int
cmc
sub
mov
stos
and
mov
mov
xchg
mov
add
mov
cmp
mov
xchg
imul
test
inc
adc
push
out
push
mov
scas
cld
lahf
adc
adc
adc
cmpl
sbb
inc
aaa
cmpsb
jp
add
pop
test
xor
scas
add
jno
mov
xchg
ret
stos
add
aas
and
mov
pusha
mov
setb
sbb
add
and
loopne
jbe
lods
cltd
add
cmc
inc
enter
xor
adc
jae
add
xor
or
cmpb
ret
adc
push
test
adc
mov
push
in
jl
mov
lahf
jge
fisubs
shl
int3
xchg
aad
dec
add
out
push
jb
rcrb
out
cmp
mov
mov
pushf
in
je
scas
xchg
sti
enter
jns
stos
add
ficomps
insb
out
mov
pop
cld
movsb
adc
push
pop
andl
in
jnp
pop
mov
pusha
mov
sub
mov
adc
pop
push
in
sub
loopne
rorl
push
or
jo
add
pop
test
push
popa
sbb
les
out
call
and
pusha
or
jnp
or
pop
add
mov
cmp
xor
fstl
add
pushf
stos
push
jl
mov
adc
sbb
shll
jbe
dec
fdiv
xor
lods
jb
push
cmp
roll
push
dec
and
add
xchg
jmp
loope
out
iret
lahf
inc
xlat
xchg
lea
dec
in
fldl
dec
adc
xor
test
push
daa
ficomps
iret
push
xor
dec
lds
mov
inc
mov
xor
lret
inc
push
xor
divb
stos
icebp
stos
mov
xchg
test
jle
xor
mov
inc
std
add
adc
fsubp
xchg
sbb
mov
pop
add
jl
fcoml
add
repz
cmpsl
mov
jecxz
cmp
adc
pop
add
shll
or
roll
lret
iret
sbb
notl
pushf
sbb
lods
inc
sti
pop
push
add
or
je
cli
jnp
jp
add
mov
xlat
arpl
mov
sahf
pop
mov
mov
mov
jmp
add
stos
lcall
orb
lods
stc
jecxz
or
shll
int
xchg
fdivp
add
cld
push
mov
jmp
jp
add
data16
call
int
gs
mov
and
and
insb
add
jmp
mov
and
repz
inc
adc
push
les
add
mov
inc
and
cmp
xor
in
dec
ret
push
xchg
mov
xor
lea
sub
add
adc
hlt
ret
mov
out
out
fs
and
xorl
lahf
xor
add
pop
jae
in
mov
jmp
ret
scas
cmp
loope
mov
adc
pusha
adc
sub
fs
cld
fildl
repnz
in
push
mov
jno
adc
add
negl
les
xor
movsb
dec
out
cmpsl
or
cmp
adc
push
xor
sbb
mov
aad
mov
cmp
loope
movsb
aas
adc
cmpsl
add
add
xchg
xor
outsl
pop
jo
out
loop
fcoml
push
mov
mov
cmp
mov
test
and
int
sbb
cltd
push
add
xlat
cmpsb
fiaddl
push
push
inc
mov
dec
aaa
add
ja
push
push
xlat
jae
add
imul
jo
cmp
sub
push
and
mov
xor
and
mov
fwait
rclb
add
xchg
ss
xor
aaa
pop
mov
and
fisttpll
sahf
adc
adc
sbb
dec
icebp
outsb
mov
mov
mov
out
pop
addl
repnz
and
inc
adc
xchg
test
add
fcmovnb
sub
add
pop
jg
and
push
adc
cmpsl
pop
das
mov
stos
adc
adc
std
mov
inc
xchg
add
outsl
in
and
push
jno
mov
or
xchg
lret
fucom
mov
ret
aad
and
lds
and
lods
or
stos
das
mov
add
jl
pusha
jg
cmp
add
mov
inc
add
and
add
and
scas
in
pop
adc
add
shrl
cmp
dec
adcl
popa
loope
jnp
mul
or
xlat
test
loopne
mov
pop
mov
and
inc
shll
cmp
imul
push
add
jmp
dec
out
ja
pop
dec
add
mov
fwait
add
ds
icebp
add
xchg
hlt
add
out
bound
std
xor
sbb
ret
xor
jp
mov
stos
push
cmp
fldln2
aam
jp
mov
std
pop
rol
pop
mov
popf
sub
scas
into
dec
add
insb
mov
andl
stc
lea
inc
push
mov
xor
xor
jmp
mov
cmp
sbb
adc
test
rorb
xor
loopne
cs
add
jle
push
add
or
mov
add
cmp
pop
add
movsl
inc
add
aas
test
xor
popf
stos
cwtl
insb
int
dec
or
shlb
in
pop
mov
jns
adc
mov
mov
mov
or
loopne
lock
cmpsl
jo
add
aas
pop
cmp
stos
ja
outsl
sbb
stos
clc
add
xor
aas
cmp
sarl
inc
mov
dec
js
pop
add
stos
add
cmp
fldl
sbb
lods
sahf
xchg
test
add
xchg
insl
test
mov
mov
dec
fnsave
sub
adc
pop
fsubs
cmpl
shll
pushf
hlt
lock
fdivr
or
daa
adc
adc
rol
adc
or
sahf
loope
int3
loop
enter
es
lcall
rcrb
out
and
hlt
pop
fisttps
mov
add
cmp
aam
push
lldt
adc
jns
push
repnz
ljmp
adc
xlat
mov
mov
xchg
mov
outsb
push
cmp
inc
mov
jl
pmullw
cmp
loope
fs
movsl
mov
mov
shl
and
dec
sti
loope
cmp
jae
not
inc
int3
xchg
pop
inc
pop
sub
lcall
test
hlt
push
mov
call
lahf
cmp
aas
out
sbb
push
fisubrs
loope
lods
inc
sub
xchg
sbb
mov
add
mov
push
outsl
jns
dec
push
adc
or
icebp
ret
push
add
movsb
fsubrl
or
cmp
and
ja
mov
push
adc
std
nop
cwtl
mov
add
push
adc
pop
das
dec
mov
mov
adc
sbb
and
sbb
or
loope
and
add
cmc
mov
and
lret
push
aas
int
popf
xor
loopne
movsb
jge
sbb
insl
cltd
add
sub
je
cmp
xorb
sbb
adc
ret
fbld
clc
lret
push
outsl
adc
fimuls
dec
jl
jp
xchg
add
add
cli
lea
inc
aad
loope
and
sbb
fcomps
add
cmp
cmpsb
jb
out
xor
mov
add
popa
movsl
cmp
jecxz
mov
sub
test
push
sbb
fdivl
pop
loopne
inc
dec
outsb
or
lods
aam
pusha
cmc
and
ss
push
aad
mov
fcoms
pop
leave
out
roll
cli
and
add
fldenv
inc
cmp
push
cmp
out
in
bound
sbbl
test
xor
jmp
loopne
mov
push
ss
jle
push
das
loope
pop
add
add
pop
je
ljmp
les
fidivrs
popl
inc
pop
in
lret
mov
sbb
xor
mov
and
push
mulb
movsb
lcall
sub
mov
imul
inc
out
testb
inc
sbb
jge
add
cwtl
and
loope
test
adc
push
cltd
push
pop
cld
outsl
adc
popa
push
mov
out
add
testl
push
mov
fucom
or
jns
sbb
jp
jl
cmpsb
ljmp
mov
cmpb
sbb
or
mov
movb
sbb
iret
int
fidivrs
or
gs
rcrl
int3
push
dec
jo
and
or
jns
add
and
popa
sub
cmp
jo
shlb
lds
jbe
and
sbb
fiadds
in
scas
mov
out
pusha
stc
add
sbb
nop
jns
test
in
stos
add
call
sbbb
sub
add
xor
inc
add
add
and
mov
arpl
lahf
pop
add
popl
and
outsb
pop
or
pushf
fnsave
mov
clc
jmp
test
cld
es
inc
lahf
mov
add
imul
xchg
fdecstp
mov
and
imul
xlat
mov
add
mov
int3
lds
sahf
add
and
add
mov
out
mov
mov
in
bnd
add
gs
pop
add
mov
mov
wrmsr
bound
add
inc
pushf
cs
fdivs
ljmp
adc
add
push
rcrl
mov
and
pop
mov
lahf
adc
js
push
call
mov
xchg
add
ljmp
add
lods
sub
dec
push
mov
sbb
push
inc
xchg
pop
pushf
clc
sti
loopne
in
jp
dec
push
les
cmp
or
or
pop
jne
and
ds
out
bound
xor
add
pushf
les
adc
and
insb
sbb
sti
loope
roll
into
dec
and
js
mov
jns
ror
xlat
jo
fcoms
les
aam
and
notb
lret
add
xor
sahf
pop
sar
shl
sbb
and
out
cmp
cmp
adc
push
into
loope
mov
sti
scas
ss
mov
cmp
xchg
fsubr
jae
or
nop
add
in
jns
add
mov
shll
cmp
or
inc
ss
mov
add
lahf
inc
or
adc
movsb
outsb
daa
pop
dec
adc
cmp
arpl
jns
sub
imulb
popa
add
or
sbb
add
or
int3
movsb
inc
jbe
sbb
xlat
push
add
jmp
push
push
cmp
mov
adc
lcallw
adc
push
aas
add
cmp
adc
xor
enter
stos
ds
sbb
sbb
jge
add
jo
dec
pop
outsl
sub
dec
enter
shl
sub
dec
out
hlt
inc
adc
jns
loope
popf
in
daa
jle
add
push
lret
jg
or
clc
imul
outsl
cmpsl
add
mov
mov
mov
test
pop
aad
fcmovnu
inc
and
mov
inc
mov
xchg
aas
das
ds
imul
adc
lret
xchg
cmc
mov
xchg
nop
adc
out
stos
jg
test
push
das
pusha
add
ja
nop
ds
cmpsl
lahf
ljmp
leave
shrb
push
pop
adc
add
or
sub
out
inc
adc
lea
cmp
jo
lret
mov
negl
imul
push
std
into
loope
xlat
sbb
sbb
outsl
push
imul
push
shll
inc
jmp
enter
sbb
xor
add
mov
pushf
add
pop
idivl
add
inc
aam
cmp
adc
push
xor
lods
add
sbb
outsl
mov
addr16
add
and
dec
jl
in
lods
orb
add
aam
stos
mov
jbe
cmp
hlt
add
sbb
outsb
inc
cmp
stos
lahf
xchg
push
add
push
outsl
pop
jne
add
xchg
fdivrs
jne
ret
xchg
ljmp
or
addr16
push
push
inc
je
dec
pop
lcall
sbb
adc
xchg
adc
inc
inc
push
mov
pop
add
mov
add
jg
cs
mov
mov
push
mov
xchg
adc
sub
sbb
lahf
mov
sahf
in
mov
shll
cmp
mov
mulb
or
xchg
push
hlt
das
add
in
clc
mov
dec
das
cmp
scas
sbb
incl
sbb
test
mov
lods
pusha
call
and
testl
pop
or
push
xor
scas
cmpsb
add
pop
jp
popa
pop
mov
fistl
int
stc
stos
pushf
cmpsl
sbb
push
and
xor
or
aad
pop
add
xchg
rorb
xchg
test
lock
cli
ja
js
in
mov
mov
inc
xchg
vdivpd
loop
sbb
popa
dec
sbb
ds
sbb
cmc
add
sti
jmp
xchg
hlt
sbb
mov
cltd
pop
pop
add
and
adc
inc
add
mov
pop
fisubl
test
xor
push
repz
jb
je
push
add
sahf
jp
rdmsr
pusha
ljmp
push
cmpsb
push
movsb
jle
pop
imul
dec
mov
add
or
xchg
and
imul
cwtl
inc
pop
add
mov
mov
sub
push
popa
push
js
add
addl
lret
jne
clc
enter
xchg
pop
sub
mov
push
inc
fdivs
xchg
sarl
ljmp
into
sbb
xor
mov
mov
add
in
pop
push
aam
pusha
scas
add
cltd
pop
imul
jg
in
jp
in
add
mov
jecxz
mov
loopne
pop
pop
shrl
inc
divb
add
mov
inc
enter
ja
sub
add
fdivl
loopne
and
pop
and
xchg
ret
push
and
add
sbb
addb
vphaddwq
add
jg
cmpsb
lret
push
xchg
sbb
push
cmp
mov
mov
sub
nop
stc
popa
push
add
aas
jecxz
jl
mov
sbbb
lret
add
sub
out
jl
lcall
aas
xlat
les
hlt
add
mov
mov
aaa
adc
or
ret
or
scas
mov
jbe
push
add
fs
add
in
jl
cmpsl
shl
and
fwait
pop
test
out
sub
pusha
in
or
pop
lret
add
pop
rcr
test
xchg
incb
lods
xchg
ret
xor
loopne
insl
mov
and
pop
dec
call
dec
and
loopne
xlat
sbbb
pop
ret
mov
and
mov
jnp
xchg
stc
mov
push
push
pop
pop
incl
test
push
ds
jns
dec
add
cmp
movsb
pop
add
mov
pop
jecxz
push
mov
mov
lea
sbb
std
and
adc
dec
add
lahf
and
sti
fld
out
mov
adc
out
jecxz
fldl
push
push
dec
cmc
xchg
call
add
test
stos
xchg
bound
lahf
adc
adc
sub
mov
inc
sbbl
xor
ret
and
lods
mov
rorl
sub
sub
or
add
leave
pusha
stc
dec
add
mov
mov
int3
arpl
lods
cmc
pop
xor
sub
jp
dec
lea
adc
mov
push
jno
shr
jb
mov
sub
lods
push
and
loop
ljmp
daa
add
lds
dec
jae
add
cmpsb
nop
mov
mov
add
fcmove
shrb
sbb
pusha
dec
push
lret
addr16
fcoms
dec
xchg
out
fsubp
iret
add
xor
add
scas
mov
add
fnstcw
pop
dec
add
inc
ret
sbb
push
push
iret
xchg
inc
div
and
into
sub
movsb
bound
call
and
or
add
cmp
test
add
push
jno
jge
mov
mov
add
cmp
pop
jg
pushf
cld
and
xchg
lret
and
dec
sbb
into
adc
fcomp
ds
xchg
lret
clc
movsb
adc
bnd
push
hlt
ss
loop
add
dec
lret
and
xor
scas
imul
lods
pop
sub
aas
daa
cld
and
aad
push
add
lret
sub
jle
ja
or
ljmp
push
loopne
sub
mov
inc
sbb
jo
mov
sub
sbb
xchg
or
mov
add
movsl
add
or
rcrl
rorb
xor
and
jns
outsb
mov
fcomps
bound
sbb
mov
stos
pop
scas
push
incl
dec
test
ss
iret
push
add
int3
mov
add
dec
adc
xorb
xchg
les
pusha
and
fdivrl
loopne
in
cmp
jno
mov
mov
or
sub
pop
sbb
inc
mov
dec
inc
repz
sbb
lods
pop
add
jae
mov
adc
mov
sub
pop
cmp
les
je
in
sbbb
push
lahf
add
add
daa
ljmp
outsl
add
jge
inc
and
mov
sbb
movsb
mov
stos
mov
xchg
or
cmp
mov
and
and
lds
add
xor
jb
or
sbb
jno
movsl
add
iret
mov
add
xor
pushf
push
sub
and
push
leave
mov
mov
dec
xorb
lahf
push
mov
pushf
xchg
popf
mov
ja
mov
add
pmulhuw
es
out
and
push
cmp
into
sbb
sub
mov
adc
push
jp
mov
mov
or
mov
add
mov
xchg
outsb
je
js
ljmp
gs
inc
fwait
and
jno
rolb
sahf
push
les
jno
add
lds
sbb
fisttpll
in
cmp
or
mov
je
outsb
add
mov
sbb
jbe
sub
add
and
push
or
in
stos
xor
adc
and
pop
lock
and
xor
cmpsb
daa
xchg
add
sarl
xchg
mov
mov
out
dec
mov
loopne
mov
sbb
mov
nop
adc
and
adc
mov
inc
add
inc
pusha
add
and
add
movsb
xchg
sub
call
cvttps2pi
out
addr16
imul
fiadds
das
mov
jbe
cmpsl
ret
aam
popf
pop
and
fsubs
add
test
jle
in
add
ret
jo
add
test
outsb
mov
scas
add
push
jno
pop
test
cmc
mov
rcl
fmuls
sbb
mov
pop
adc
xlat
add
cmpsl
dec
sub
push
incl
jae
lret
jg
mov
cmp
dec
pop
inc
cmp
xchg
in
adc
push
xor
or
push
bound
add
xor
loop
int3
mov
add
inc
cld
or
mov
pop
add
test
cmpsb
push
mov
mov
push
adc
cli
jo
fsubs
or
push
adc
cmc
inc
insl
add
or
inc
aad
stos
test
inc
out
jae
das
mov
add
lcall
sub
movsb
add
push
lahf
add
sbb
into
jp
push
dec
xchg
test
mov
add
rorb
imul
sub
pop
lods
aas
das
sbb
addb
cmp
pop
mov
mov
in
sbb
cltd
push
mov
lret
sub
xor
cltd
add
add
nop
mov
rcll
in
jmp
or
add
xor
andb
fwait
add
mov
data16
jmp
add
cmpl
jno
sahf
ja
xchg
mov
xlat
or
mov
and
fwait
xchg
fstps
push
mov
sbbl
xchg
test
cld
outsb
add
xor
ss
mov
outsl
stc
lock
add
arpl
xchg
or
jae
push
mov
mov
loopne
fcompl
nop
rcrl
pop
pusha
mov
bound
inc
and
fs
adc
cwtl
jb
add
das
or
mov
jge
stos
and
and
jp
jno
repnz
fmul
jecxz
xor
sahf
dec
mov
sahf
std
movsb
xchg
inc
adc
sub
dec
dec
adc
adc
outsl
clc
push
mov
cwtl
xor
fs
jl
pop
mov
dec
sbb
movb
and
fsubl
sbb
dec
test
shrl
inc
fwait
rclb
loope
adc
mov
insl
sahf
movsl
xor
pusha
xchg
adc
mov
add
inc
lds
test
lock
add
imul
and
mov
dec
in
rcrl
in
dec
mov
movb
sbb
pop
je
push
aas
sbb
add
jne
xlat
add
mov
dec
pusha
daa
dec
stos
and
mov
pop
push
lahf
xor
and
sbb
stos
xchg
mov
pusha
xchg
sub
jp
pop
or
xor
stos
pop
test
push
pop
arpl
fnstenv
xor
mov
or
mov
xchg
inc
xchg
add
arpl
cmp
push
outsb
and
cltd
dec
or
pop
fbld
adc
add
cmp
stos
lock
adc
inc
cmp
daa
cmp
jo
cli
adc
cwtl
negl
notl
sub
pop
jmp
inc
enter
mov
lret
add
push
jle
or
dec
add
cld
repnz
int
test
testl
sub
jne
ret
scas
insb
dec
pop
pusha
shrb
jl
mov
push
push
sbb
inc
decl
in
fldl
dec
adc
arpl
pushf
pop
jge
add
xor
pop
adc
pusha
imul
lea
add
faddl
xchg
pop
xor
and
jno
inc
and
mov
push
stc
rorb
lea
jle
ret
ja
jns,pt
mov
sub
ret
mov
xchg
into
sbb
push
dec
add
xchg
inc
xchg
and
aaa
add
cmp
cld
ds
lods
add
test
ss
cmp
movsl
add
test
frstor
xor
sub
inc
les
enter
xor
inc
ret
faddp
pop
add
inc
sarl
imul
aaa
add
test
sub
lcall
fimuls
out
pop
inc
testl
insl
mov
pushf
or
into
add
mov
jns
lds
lret
mov
dec
std
add
popf
cld
cmpsl
pusha
sbb
inc
test
faddl
addr16
imul
cmpsb
stc
inc
cmp
mov
ja
jnp
es
popa
mov
inc
fwait
dec
sbb
lds
xchg
lods
mov
insl
sbb
pop
jmp
sbb
iret
add
dec
into
mov
loopne
add
jno
inc
inc
in
fisttps
rolb
adc
mov
lcall
adc
mov
push
and
and
sbb
or
inc
rcll
lret
adc
push
pop
scas
inc
push
mov
aam
mov
lods
xchg
add
loop
add
mov
notl
jns
icebp
or
es
xchg
pop
fidivrs
jnp
push
sti
push
cmp
add
aam
xchg
xchg
mov
nop
notl
ja
fs
adc
cmpl
lahf
mov
xor
out
sbb
movsb
cmp
pop
pop
and
add
adc
pop
hlt
dec
nop
add
mov
cwtl
dec
lret
add
ds
xchg
add
xor
pop
adc
sbb
add
addr16
mov
jecxz
xchg
out
adc
pop
xchg
add
idivl
mov
ds
mov
mov
loope
or
push
lds
scas
add
pop
nop
dec
add
inc
lea
out
popa
or
rcl
bound
lods
add
sbb
jp
cli
fldt
push
loop
sti
pop
push
add
xchg
push
in
mov
sbb
lods
ret
add
adc
scas
adc
or
shll
sbbb
inc
push
leave
adc
push
stc
lret
push
loopne
cmp
pop
dec
add
rolb
out
jno
sub
stos
inc
fisubs
lcall
clc
mov
sbbb
add
adc
pusha
xor
adc
hlt
mov
adcb
fsubrp
pop
add
subl
lods
rcrl
fnsave
cmp
into
push
jnp
mov
pop
and
inc
jo
popf
mov
sub
and
add
add
sbb
jl
sub
lods
mov
lcall
sbb
sbb
cs
fcmovnb
sbb
ficomps
or
in
das
add
inc
xchg
or
sbb
pop
incb
adc
ret
pop
sub
iret
xor
sbb
loop
outsb
add
inc
add
enter
sub
add
and
xchg
cltd
arpl
loopne
sub
push
push
inc
dec
scas
or
push
or
pop
fbld
and
push
xchg
daa
lods
sbb
out
and
xor
cmp
mov
movsb
fistpl
orl
andb
decl
sbb
stos
xor
imul
outsl
sub
sub
pop
inc
add
test
leave
mov
mov
les
or
cli
xchg
andl
inc
loop
or
pusha
jnp
mov
frstor
sbb
jno
add
insl
mov
or
nop
adc
cmp
inc
jno
mov
push
inc
or
cmp
add
ljmp
negl
jnp
iret
mov
add
stos
movl
repnz
pop
push
cltd
add
cmp
loopne
and
loopne
add
test
push
test
scas
push
push
adc
inc
jl
add
outsb
mov
imul
les
call
adcl
hlt
pusha
add
mov
or
int
in
test
fiadds
xchg
sub
lock
pusha
add
and
xor
pop
aas
xor
inc
fisttpll
idivl
out
mov
push
aas
jle
sbb
mov
roll
xchg
lret
sub
xor
in
test
data16
out
add
inc
inc
add
xor
imul
shll
mov
ja
mov
or
add
mov
add
jbe
add
iret
jae
pusha
push
inc
out
aad
clc
adc
sti
mov
push
cmpl
add
orl
les
add
std
cmpsb
mov
jo
add
lret
gs
dec
push
sbb
mov
adc
and
jge
cwtl
dec
adc
adc
pop
jns
add
dec
sbb
loop
inc
xchg
leave
pop
xor
jmp
and
sbb
repz
out
dec
and
mov
xor
int
loopne
shrb
pop
push
dec
fistpl
mov
inc
cmp
aad
scas
test
cmc
add
ds
les
mov
add
arpl
jl
xchg
push
pop
in
add
push
cmc
xlat
lods
inc
clc
sahf
jp
xchg
cmp
mov
mov
sub
jne
adc
ds
and
pusha
imul
lock
sub
add
mov
rolb
sbb
inc
mov
dec
adc
in
mov
loopne
addl
inc
out
adc
mov
jmp
mov
mov
test
and
mov
stc
insl
scas
cmp
add
mov
aam
outsb
mov
lock
xchg
cmp
insl
test
subl
rcrl
arpl
loope
mov
pop
adc
mov
out
pop
push
ret
data16
and
std
or
sbbb
cmpsl
and
xor
dec
sahf
push
add
add
mov
test
push
cmpsb
repz
jp
cmp
in
ds
mov
add
mov
leave
add
jl
imul
pusha
push
cli
add
dec
fidivs
add
imul
aaa
addr16
cmp
int3
or
push
rcll
xor
fisttpl
push
fistps
adc
inc
jns
and
in
out
sbb
xorb
pop
xchg
cmc
lock
mov
loopne
test
bound
dec
push
ds
idiv
rcrl
push
mov
in
xchg
rcll
ljmp
stos
int
cmp
imul
fwait
cmp
add
xchg
add
fldt
addl
xorl
in
add
movsb
or
sbb
push
out
push
sbb
mov
scas
jl
stc
stos
or
dec
cmp
out
ds
push
pop
or
pusha
add
gs
mov
adc
push
sbb
cmp
adc
enter
cmpsl
loope
lcall
push
jo
es
roll
cmp
push
pop
data16
xchg
add
out
cmp
sub
add
pop
or
or
mov
and
jne
push
mov
rol
jnp
or
repnz
pop
int
xor
sti
adc
out
fsubrp
add
shl
clc
movsl
push
loope
dec
loop
xchg
fisubrs
jl
out
ljmp
push
add
js
push
jae
inc
repz
jecxz
cld
xchg
mov
test
hlt
dec
adc
fs
push
sub
stos
mov
add
and
scas
sahf
add
rcrb
fcomip
push
mov
add
sbb
insl
lods
add
cld
dec
inc
shrb
repz
lods
and
sarl
sbb
sbb
mov
push
add
dec
in
pop
mov
pop
sbb
ret
clc
push
add
sbb
movsb
test
in
jl
scas
push
int
shrb
into
xor
frstor
xchg
and
daa
add
sbb
cmc
pop
or
sahf
mov
mov
adc
sub
iret
loopne
jbe
data16
movsb
cs
ret
jmp
xor
add
add
or
inc
sub
and
or
pop
or
sarb
jbe
aas
jmp
jb
das
xor
add
jl
cld
add
rcrb
ret
jg
fimuls
adc
stos
add
test
adc
push
add
mov
add
mov
mov
pusha
adc
sbb
rcll
ljmpw
shlb
add
lds
adc
and
movsb
pop
mov
roll
push
sbb
test
sub
mov
cmp
test
sbbl
jge
das
or
pop
push
push
stos
and
add
mov
lcall
add
xor
aad
ret
adc
push
adc
sbb
loopne
cmp
mov
sub
xchg
fwait
std
adc
cmovp
xlat
mov
data16
pusha
or
stos
aas
dec
adc
cmp
xor
add
jo
xor
cs
sub
scas
add
arpl
mov
pop
cmp
mov
out
arpl
sub
adc
cmpsb
call
fwait
pop
sub
xor
fcompl
push
cld
or
add
pop
pop
dec
daa
add
push
in
icebp
jmp
xchg
ror
loop
jle
push
test
je
add
inc
lret
push
loopne
hlt
mov
mov
std
xchg
test
fstpl
or
outsl
es
insb
roll
jns
or
dec
fbld
inc
in
in
je
add
outsb
xchg
rcl
jb
dec
stc
cltd
addr16
cmp
loope
and
sbb
add
insb
divb
push
dec
cmp
sbb
add
fiadds
loope
into
push
sbb
jmp
jp
push
fildl
int3
cmp
je
jmp
test
outsl
inc
adc
jno
push
sbb
fldl
fldenv
inc
test
inc
adc
arpl
lds
out
repz
cmpsl
sbb
daa
push
jns
mov
add
dec
mov
pop
mov
sbb
jnp
sti
ds
pop
outsb
in
mov
dec
xchg
movsl
add
sahf
mov
jp
clc
lods
push
test
imul
xchg
pop
inc
scas
insb
xor
movsb
pop
sub
pushf
fiaddl
inc
stos
popl
jg
lock
add
fcomi
outsb
add
inc
xor
test
push
movsb
add
jp
jmp
popf
repz
mov
push
jg
cmp
add
add
push
rcrl
sub
jns
jecxz
push
test
mov
jmp
ljmp
cltd
in
mov
pop
sbb
addb
inc
jmp
mov
test
mov
cs
insb
enter
adc
add
cld
fcomip
pop
add
xchg
packsswb
jecxz
add
dec
shl
repnz
inc
test
movsl
and
adc
cli
push
push
add
cmp
in
jns
lea
ljmp
mov
add
mov
add
sbb
push
add
mov
sub
jnp
frstor
arpl
nop
loop
repnz
add
jge
sbbl
stos
jmp
and
jo
add
ret
ret
jge
mov
repz
mov
les
add
inc
cmpsl
mov
lret
adc
in
add
and
mov
adc
imul
jl
adc
jp
cmp
addr16
or
xchg
adc
ret
push
add
jle
sbbb
mov
scas
add
or
cmp
ret
mov
push
add
test
shrl
test
and
clc
sbb
add
in
push
cmc
mov
popa
xlat
add
cltd
xchg
lea
fiaddl
sub
add
mov
into
jmp
mov
mov
or
sbb
sbb
mov
icebp
cwtd
xor
popf
movsl
loope
loopne
pusha
push
sbb
add
push
dec
push
in
test
mov
add
rcl
xor
lahf
hlt
les
add
or
roll
rclb
inc
mov
cmp
xchg
fs
pop
out
jne
mov
jae
outsl
cs
mov
xchg
cli
and
add
sub
cmp
js
std
aad
pushf
repnz
lahf
in
rorl
icebp
or
push
jb
outsb
and
imull
addr16
sbb
jne
cmp
rorl
mov
clc
nop
mov
icebp
add
lea
inc
pop
insl
addr16
sub
mov
and
mov
test
mov
add
inc
xchg
add
inc
dec
push
add
ret
cmpb
jmp
cld
pop
jns
test
cmp
out
outsl
add
dec
mov
jbe
sub
popa
popf
lcall
sti
loopne
xor
mov
arpl
xchg
xor
verr
aad
or
xor
and
test
stc
mov
jno
sub
add
lret
jecxz
or
cmpsl
sarl
xchg
add
lret
mov
mov
mov
jae
cmp
jg
sbb
xchg
jo
sub
add
loope
push
add
mov
ja
mov
jbe
pop
js
add
std
mov
or
inc
add
test
cs
ja
mov
adc
in
add
mov
inc
cltd
xchg
push
pop
mov
sbb
sub
add
dec
cmp
add
shll
cltd
cmc
cs
or
loop
fcompl
cmp
insb
mov
int
add
lods
and
cli
out
lea
shlb
aam
bound
sbb
xor
add
pop
xchg
lret
mov
sbbl
adc
lods
out
das
or
orl
daa
shlb
adc
scas
push
push
cmp
push
sub
jmp
add
outsb
adc
and
int
or
fiaddl
adcb
add
lcall
sub
sub
add
sub
add
add
and
sbb
add
enter
sbb
cmp
repnz
and
pop
add
lea
and
wbinvd
mov
xor
pop
push
push
addl
std
mov
dec
mov
or
or
or
icebp
loopne
fimuls
sbbl
test
inc
shrb
add
mov
jb
xchg
lret
outsb
out
sub
test
leave
ret
hlt
enter
cmp
pop
inc
xchg
add
jno
repnz
insl
push
add
adc
roll
add
xchg
pop
fbld
pushf
js
jb
aaa
mov
les
imul
cmc
add
mov
pop
xchg
add
inc
insb
fs
loopne
gs
jecxz
bound
mov
rcll
lcall
push
jmp
add
mov
pusha
cmpsb
cmp
imul
push
sbb
jl
and
loope
data16
aad
add
mov
loopne
or
pop
adc
ret
sbb
loope
jmp
jge
adc
add
sub
add
not
add
fdivl
and
mov
jp
xor
inc
or
pop
push
cmpsb
fs
add
loopne
fisubrl
test
sub
popa
xor
push
stc
mov
or
dec
scas
dec
sbb
aam
mov
jno
popa
iret
xchg
loope
mov
jne
dec
int3
cmp
xchg
and
rclb
imulb
sub
or
adc
push
sub
orb
pusha
mov
out
push
cli
and
aas
mov
clc
sbb
add
loopne
mov
cmp
ret
xchg
aad
push
negl
ret
mov
cmp
add
cmp
ja
add
aam
loope
and
sarb
cmpsl
sbb
cmpsb
dec
jl
lcall
pop
jle
test
xor
jp
push
adc
out
in
jbe
add
mov
lcall
test
xchg
sbb
xor
outsb
les
jecxz
and
imul
lcall
and
adc
dec
sbb
sbb
cmp
cmpsb
add
pop
das
xor
popf
pusha
fstpl
and
loopne
inc
mov
loopne
push
repnz
arpl
addps
sub
mov
fadd
data16
outsb
xchg
dec
cmp
dec
in
cwtl
lods
cmp
sti
add
cmp
jecxz
sub
js
sbb
in
cwtl
inc
movsl
shlb
ret
mov
mov
iret
fcmovbe
sbbb
shlb
mov
pop
jl
cmp
adc
lcall
push
xchg
xlat
add
sub
mov
sub
xchg
ret
pushf
cmp
add
pop
in
mov
daa
inc
push
lock
shrb
jle
push
add
out
loopne
mov
leave
into
adc
movsb
repnz
sbb
adc
rolb
imul
and
bound
in
inc
push
dec
xchg
test
pushf
mov
add
aas
mov
jp
jbe
rcrb
jmp
cmpsl
bound
xor
fwait
add
lcall
loopne
cmp
rolb
jnp
mov
add
or
sbb
cld
push
rolb
fiaddl
lds
mov
dec
mov
add
adc
add
adc
sti
mov
cmpsb
jg
xchg
cwtl
gs
clc
xchg
leave
add
movsl
cmpsb
mov
jp
call
ret
pop
push
and
xlat
test
int3
popf
add
jae
dec
add
push
cmpsl
ret
out
add
adc
shr
add
scas
pop
stc
add
cmp
pop
push
les
repz
iret
insl
adcl
lods
ret
int
fildl
lock
imul
add
add
mov
or
mov
and
sub
fsubp
dec
fs
push
in
out
xor
stos
js
notl
arpl
lahf
fiaddl
sbb
jne
je
jns
das
movl
fisttpll
shll
mov
in
cmp
jo
dec
dec
loope
sbb
xchg
adc
push
push
pop
pop
mov
pop
adc
xchg
loopne
int
fmull
and
push
dec
add
daa
in
addr16
adc
inc
scas
pop
mov
or
out
cltd
dec
daa
lock
add
pop
repz
or
pop
lcall
lret
cwtl
pop
mov
movsb
mov
fisubrs
push
xchg
fistpll
jae
pop
push
iret
dec
loop
jmp
dec
push
movsl
lret
add
pop
ret
insb
lods
aam
roll
mov
jae
or
fldl
cmpsl
addb
divl
add
loop
out
loopne
pop
sahf
js
pusha
add
adc
push
mov
fdivs
lock
push
adc
out
repnz
cmpsl
sub
fs
or
dec
mov
push
pop
repz
pop
add
popa
jecxz
mov
add
adc
loope
fnstenv
stos
sbb
scas
mov
xchg
lds
mov
andb
and
mov
cltd
pop
xchg
and
clc
jae
jp
adc
aad
ljmp
ret
or
push
movsl
fidivs
mov
cmp
add
out
fnstenv
sbb
leave
dec
shll
pusha
test
cmp
out
xchg
loopne
xchg
sbb
cmc
or
ljmp
cmp
out
push
andb
imul
les
pop
pop
sbb
cld
and
mov
repz
mov
outsl
add
push
shl
cli
add
lcall
xchg
pusha
loope
or
push
xchg
pop
add
leave
dec
mov
add
cmp
mov
jns
in
mov
mov
add
pusha
pop
pop
pop
jg
add
dec
cmp
adcl
imul
sarl
es
insl
mov
mov
orb
pop
movsl
add
outsl
push
cmp
xchg
jp
add
mov
cmp
mul
mov
dec
and
ret
mov
sub
add
ror
push
je
add
call
cli
add
popf
pop
and
pop
add
dec
sarb
leave
cmp
add
jne
loop
add
jg
imul
cmp
lahf
ja
sub
add
jb
ret
subl
dec
mov
jg
xlat
add
sti
fs
cli
add
out
jbe
mov
and
lcall
enter
sbb
cmc
dec
add
push
push
out
divl
mov
cld
ror
mov
add
les
mov
mov
add
outsb
sbb
cmp
xchg
pop
inc
add
enter
aad
mov
add
lcall
add
jl
aad
je
cmp
lds
mov
imul
and
adc
cmp
xor
add
mov
add
mov
pushf
rcrb
cs
mov
push
dec
cli
dec
outsl
inc
add
cmp
xor
cmpsb
sahf
mov
adc
dec
and
push
adcl
mov
fdiv
add
xor
add
inc
push
mov
fwait
mov
xchg
addb
xchg
cmp
xchg
aas
call
ret
mov
rcrl
pop
hlt
out
loopne
notl
dec
adc
stc
sub
lret
xchg
xor
stos
add
jecxz
jo
iret
add
popf
int
call
inc
mov
add
mov
mov
mov
arpl
cs
add
cwtl
and
xor
ja
lods
or
ljmp
add
xor
cli
add
ud1
jg
adc
dec
lahf
add
aas
lods
mov
lea
sub
dec
mov
mov
hlt
into
mov
testb
popa
xlat
pop
cli
xchg
ret
incl
out
rcrl
clc
pop
loopne
adc
outsl
aad
xor
push
sti
add
stc
inc
add
lods
push
jno
jmp
cltd
imul
mov
movb
icebp
rcl
loopne
int3
ds
in
fnstsw
add
add
add
sbb
inc
mov
mov
add
mov
push
fsubrp
into
test
jle
adc
sub
imul
lds
add
lods
std
fsubrs
jg
mov
out
or
sub
daa
aam
add
int
adc
popf
add
stc
call
add
aaa
push
mov
push
jecxz
xchg
roll
inc
mov
pop
inc
mov
testb
pop
pop
mov
jecxz
test
mov
or
push
cmp
push
mov
xchg
stc
add
imul
ret
adc
test
mov
pusha
ds
sbb
jle
rorb
fcmovnu
add
repnz
inc
sub
and
fadd
fs
sbb
in
outsb
stos
mov
mov
and
push
movsl
push
aam
test
push
jmp
in
movl
movsl
dec
cld
jl
out
lods
pop
stc
pop
ret
sub
test
mov
inc
cmovo
fnstenv
xlat
rolb
fildl
or
call
inc
rcrl
pushf
testl
loope
bound
or
sub
add
daa
fwait
add
jo
iret
lock
add
jecxz
gs
fmull
cmp
sub
testl
push
rcrl
adc
xlat
cwtl
adc
push
ret
fs
loope
or
pop
add
cmp
lods
push
xor
popa
add
sbb
stos
dec
xor
subps
add
dec
push
fucomi
loop
and
orl
cmp
aam
jg
lds
xchg
icebp
add
and
data16
add
cmp
sbb
adc
daa
xchg
pushf
add
pop
sub
pop
mov
icebp
shrl
sub
xchg
mov
and
std
sub
push
adc
subb
nop
push
cltd
or
mov
fcomi
adc
and
xlat
add
push
jnp
shlb
in
push
mov
add
call
mov
cmp
add
mov
fdivrl
popa
sub
and
mov
push
and
pusha
push
push
test
push
cmp
or
scas
out
pop
cmpsb
mull
pop
or
inc
push
adc
fists
pop
add
pop
add
push
add
cmp
loop
xchg
js
and
cmp
dec
jg
popf
mov
sbb
inc
xchg
cmpsl
call
pusha
lret
mov
shl
repnz
sbb
outsb
scas
xlat
mov
jmp
loope
scas
data16
push
jecxz
push
out
rclb
pop
in
sub
jecxz
cmpsl
and
mov
fiaddl
mov
sarl
push
jg
stos
pop
addl
or
test
push
test
in
sarl
insl
sbb
pop
loopne
mov
and
adc
adc
jae
sbb
xchg
cmpsb
push
loope
mov
testl
and
xchg
movsb
ljmp
in
fadd
sub
imul
sbb
pop
into
adc
and
mov
out
and
add
mov
add
sbb
loop
clc
sbb
add
shll
add
push
add
pop
inc
xchg
add
mov
rol
repz
inc
mov
dec
icebp
sbb
sarb
hlt
rorb
add
add
cmpsb
daa
add
push
clc
rcrb
pop
cmp
arpl
in
ja
sub
fsubrl
stos
fmull
jo
cltd
adc
negl
fisubl
and
mov
jb
push
sub
push
xor
inc
push
add
aam
pop
add
pop
push
insl
xor
mov
ja
cwtl
cmp
sbb
lret
dec
xor
imul
mov
add
loope
fistps
sbb
rcrl
push
add
shrl
push
cs
lcall
cmpsl
xchg
mov
sub
jg
rcll
scas
xor
dec
outsl
sbb
dec
jp
sbb
lock
in
mov
frstor
pop
mov
and
ss
pop
inc
push
out
sbb
outsb
sbb
movsl
clc
add
aas
and
loopne
cmp
or
fldenv
sbb
inc
pop
inc
pusha
push
icebp
in
cmp
divb
add
xor
pop
loopne
lea
lods
add
push
sub
data16
imul
insb
add
ret
fimuls
add
xchg
scas
and
adc
dec
in
cwtl
jl
loopne
mov
jb
push
cwtl
push
ljmp
xchg
pusha
sahf
inc
jmp
jge
bound
push
hlt
mov
das
in
jns
mov
inc
add
jge
fcmovnbe
ret
add
cli
mov
jne
inc
mov
xchg
xchg
adc
stos
push
mov
or
xlat
lods
leave
add
bound
add
cmpsl
mov
filds
or
xchg
mov
xchg
ljmp
mov
mov
cmp
rcr
sti
xor
xor
cmpsl
cmp
sbb
add
outsl
mov
aaa
mov
gs
cmp
rcl
add
fadds
inc
stc
test
add
fwait
dec
sub
cmp
push
add
push
das
adc
add
mov
xlat
add
cmc
je
movl
and
cld
dec
fdivs
sbbb
pop
popa
repz
repnz
mov
pop
jecxz
jnp
or
push
rcrl
mov
ficompl
ds
push
mov
jp
imul
add
xlat
inc
mov
iret
jl
mov
std
sub
jne
dec
add
mov
mov
sbb
or
imul
inc
jbe
mov
mov
add
pop
mov
xchg
loop
add
stos
push
fadds
repz
pop
sub
shl
pop
fwait
cmc
sbb
add
mov
jp
xor
inc
mov
mov
stos
sbb
out
add
pop
jb
mov
cmp
das
clc
mov
call
adc
lahf
inc
mov
pop
into
daa
sub
add
cmp
fcomps
or
fwait
stos
orb
aam
cld
scas
sti
mov
jae
add
in
mov
addr16
dec
add
repnz
sub
data16
pop
and
arpl
out
xlat
sbb
add
fcom
lods
fnstsw
add
cmpsb
or
mov
dec
jbe
and
outsb
inc
sbb
shll
inc
or
push
adc
add
enter
jecxz
lods
loopne
and
adc
loop
sub
push
roll
cli
lock
adc
cmp
mov
sbb
and
add
bound
cmp
mov
xchg
push
icebp
fsts
repnz
sbb
mov
sahf
dec
add
cs
outsl
push
pusha
fistps
pop
jns
das
and
xchg
lret
sub
mov
jno
fimuls
add
xchg
movsb
stc
xlat
call
sub
pushf
test
add
push
cmp
loope
sbb
add
out
or
xcrypt-cfb
cmpsl
loop
add
and
clc
and
xchg
outsb
or
into
push
adc
negl
cmp
sbb
pop
icebp
add
jbe
push
add
ret
add
daa
adc
into
jo
stc
xor
fsubl
clc
loopne
mov
sbb
mov
sbb
cmp
jbe
xor
jns
out
inc
mov
cmp
sbb
fnstsw
or
dec
lret
and
rcl
dec
or
addr16
stos
cmpsl
cmp
xchg
in
nop
mov
lahf
outsb
repnz
pop
or
imul
xlat
sbb
lret
sub
nop
addr16
mov
push
movsl
pop
mov
push
add
mov
jb
pop
mov
loopne
fildl
xchg
pop
ret
cmp
cs
mov
dec
mov
adc
loopne
sub
jg
addb
out
or
movb
jnp
sub
xchg
add
lahf
stos
lds
inc
add
mov
gs
inc
dec
xlat
fsubl
add
xchg
adc
xchg
sub
iret
aam
shll
int3
sub
pop
sub
je
and
mov
add
cmc
es
in
lea
sahf
arpl
dec
mov
cltd
jp
ja
add
mov
add
fs
add
or
xchg
jae
jbe
repnz
stos
sbb
jne
cmpsb
pusha
xchg
jnp
sbb
cld
xor
in
sbb
xchg
mov
or
scas
add
ret
mov
mov
jecxz
inc
or
sbb
mov
shrb
icebp
mov
movd
pop
clc
adc
imul
adc
xor
xor
nop
mov
add
loopne
aas
cltd
and
shll
add
dec
adc
push
sbb
inc
pop
out
adc
add
jp
add
xchg
mov
std
cmp
jecxz
xor
out
shl
or
add
pop
ret
xor
ret
roll
add
rcrl
icebp
cmp
push
adc
inc
lods
add
sub
out
or
pop
loop
jle
pusha
mov
fwait
adc
mov
subl
out
mov
imull
xor
push
and
nop
and
sbb
in
pop
mov
add
ljmp
mov
inc
sbb
mov
adc
inc
adc
cld
dec
shrb
add
or
xchg
add
in
push
sbb
loope
xor
sbb
add
into
lcall
gs
ret
sbb
dec
movsb
jbe
add
notb
adc
aaa
push
add
arpl
fmul
sbb
xchg
pusha
icebp
cltd
xor
scas
movsl
adc
outsl
pop
dec
call
add
cli
out
mov
xchg
adc
negl
cmp
add
cli
push
add
stc
or
pop
repz
add
std
test
pop
mov
movsb
sbb
xchg
lods
popf
cld
add
pushf
jbe
out
mov
mulb
add
jl
iret
add
into
lea
push
mov
call
inc
push
neg
add
dec
and
fmulp
adc
pop
lods
hlt
add
pop
mov
jecxz
stc
adc
adc
sbb
and
add
push
dec
xchg
outsb
test
rcr
push
adcl
pop
mov
hlt
xchg
jnp
mov
and
shll
cmp
shll
xchg
push
inc
push
add
push
adc
pusha
inc
cmp
aas
mov
stc
call
push
in
dec
scas
mov
ja
aas
add
mov
pop
dec
test
lret
sar
pop
pop
mov
or
cmpsl
pminsw
inc
mov
popl
jl
cmc
cli
add
sbb
js
or
fadds
lret
sbb
add
jecxz
cmp
loopne
lock
mov
aam
adc
mov
inc
stos
mov
pop
fiaddl
mov
insb
xchg
mulb
mov
std
xchg
int3
cltd
adc
cmp
xchg
add
sub
mov
into
arpl
and
or
scas
push
mov
testl
or
out
sbb
push
pop
add
adc
and
cmp
push
push
pop
fstps
shr
out
add
mov
add
add
inc
dec
rcrb
inc
or
cli
jb
mov
pusha
adc
das
cmp
mov
sbb
into
jo
add
in
out
pop
jmp
testb
dec
dec
xor
aam
add
sub
mov
pushf
and
ficompl
sub
add
cmp
rorb
add
loope
and
dec
add
sahf
push
mov
ja
inc
fwait
xchg
xor
je
add
or
mov
fildl
bound
js
iret
movl
addr16
aaa
pop
pop
mov
test
mov
push
sub
jbe
add
clc
mov
mov
mov
sub
rcrb
adc
je
add
add
outsb
sbb
mov
enter
cld
add
dec
or
add
andl
loopne
stos
push
leave
in
push
fimull
xchg
jo
pop
mul
mov
test
lock
leave
adc
or
or
sbb
movsl
scas
adc
add
add
mov
jb
ret
cmp
sbb
test
dec
loopew
dec
xchg
sbb
and
add
sbb
in
adc
jnp
cld
daa
mov
cmp
add
and
lock
mov
adcl
jb
dec
dec
mov
insb
test
mov
xchg
int
lret
mov
push
dec
mov
loopne
xor
dec
push
inc
xchg
inc
lock
sbb
push
add
lods
fsts
ds
loope
lock
add
dec
imul
out
sahf
aam
or
rorl
repnz
mov
loop
aad
sbb
pop
fcomi
or
mov
mov
into
and
add
pop
add
lcall
add
les
insl
aaa
inc
jle
lret
in
andb
in
xchg
add
push
cmp
movsb
inc
add
ret
ja
orb
pop
jle
loope
or
mov
std
scas
adc
push
cs
jecxz
mov
jmp
push
cwtl
mov
push
lods
mov
sti
jge
sbb
lcall
vpmaxsw
and
adc
mov
add
xchg
sbb
add
cmp
ltr
dec
jo
cmp
push
add
int
push
push
mov
data16
push
aad
sbb
jbe
addr16
dec
cmp
insb
shrl
cmpsb
je
pop
jb
mov
sahf
js
pop
ss
fsubs
sub
push
gs
scas
jmp
imul
test
pushf
inc
cmc
pusha
push
dec
cltd
lock
adc
fildl
dec
neg
adc
push
js
cmp
decb
xchg
test
sbb
int
loope
shrb
dec
add
mov
push
fisubl
rclb
jae
enter
cmpb
repnz
pusha
dec
mov
adc
faddl
aad
sub
jae
pop
cs
cmp
add
cmp
pop
mov
add
pop
adc
jb
inc
inc
pop
add
ljmp
dec
adcb
adc
add
popf
out
fxch
pop
push
add
out
dec
mov
jbe
pop
and
xor
inc
xlat
pusha
sarb
in
push
adc
sub
sahf
add
orl
jb
mov
fdivrl
dec
inc
idiv
xchg
add
jb
add
cwtl
movsl
add
shl
add
xlat
pop
jno
push
mov
negb
mov
ds
imul
outsb
inc
push
or
sbb
sbb
and
stos
push
loope
ret
pop
fwait
lret
sbb
sub
xchg
jno
shrl
jae
addb
aad
dec
bound
jo
out
cld
add
fbld
cmpb
daa
mov
pop
jae
and
imul
rcrl
jg
pop
pushf
push
xchg
add
daa
aaa
xchg
dec
int
outsb
jmp
leave
xchg
addr16
adc
inc
test
pop
out
lahf
mov
jmp
cmpsb
add
cld
sbb
add
mov
jle
xchg
add
or
xchg
jo
adc
sti
and
mov
and
sbbb
rorl
ds
sbb
enter
mov
cltd
pop
loopne
mov
inc
push
add
or
mov
ja
lret
pop
add
outsl
mov
popa
mov
sahf
in
mov
jp
sub
xchg
popa
adc
push
ss
gs
and
fsubs
mov
fdiv
add
mov
dec
sub
mov
push
xchg
sub
into
mov
imul
arpl
or
sbb
loopne
das
pop
jp
push
in
mov
outsb
and
pop
inc
sarb
mov
rorl
pop
jmp
push
mov
inc
inc
xchg
pushf
dec
jecxz
ret
jle
sahf
shrb
out
adc
inc
aaa
cmpsb
add
xor
ret
dec
mov
sub
jo
jno
mov
in
mov
cltd
sti
mov
out
xchg
inc
cwtl
mov
pop
dec
jo
mov
sub
inc
in
xchg
loope
mov
insl
imul
mov
add
sbb
or
and
repnz
inc
or
xchg
mov
add
mov
add
jle
jno
cli
add
lds
fists
pop
pusha
push
ljmp
add
jo
add
scas
fisubl
adc
dec
fdivl
mov
inc
or
and
mov
sbb
xor
jnp
fnsave
xor
xchg
add
je
repz
push
out
sbb
lret
mov
adc
movsb
mov
loope
inc
stos
in
les
test
js
lds
imull
add
loop
lret
add
mov
and
hlt
jg
add
cltd
and
sbb
mov
mov
add
out
aam
mov
mov
add
and
pusha
dec
daa
leave
jb
cwtl
cs
add
into
xchg
add
cld
mov
xchg
mov
jmp
nop
cmp
or
sbb
push
mov
and
dec
xchg
adc
add
add
divl
sbb
test
outsl
sbb
icebp
scas
test
or
clc
cld
insl
iret
test
popl
hlt
dec
add
pop
add
add
gs
or
push
cld
andb
add
test
sub
xchg
nop
stos
sbb
mov
retw
pop
fcoms
lods
jbe
lock
jg
push
sti
outsl
or
push
jne
out
inc
jl
fld
aaa
push
jmp
dec
popa
sub
sub
lcall
inc
out
push
dec
inc
inc
sub
adc
dec
ds
sbb
add
inc
stos
sub
jb
add
mov
add
add
dec
fsubs
or
fisttpll
call
pop
cmpsb
int3
ja
orl
subb
in
mov
inc
mov
xor
lcall
cmpsl
ror
and
lods
mov
and
push
and
int3
cs
push
cmpsl
add
sub
dec
cmp
dec
or
lods
push
test
scas
sbb
add
and
adcl
mov
add
jo
mov
pushf
pop
and
scas
and
enter
sub
iret
sbb
stc
sub
rcrb
jl
ficoms
add
and
add
pusha
fstl
popf
int3
pop
add
loopne
std
dec
mov
add
shlb
subb
or
out
push
add
jae
loope
mov
add
or
test
xchg
iret
xor
jp
cmp
es
scas
dec
pop
add
and
mov
enter
push
popf
fnstcw
ss
mov
lds
test
sub
inc
push
cs
dec
repz
sbb
fmull
movaps
mov
mov
je
push
aad
xchg
add
sbb
iret
shr
add
cmp
popa
nop
loopne
xchg
sub
adc
sub
mov
mov
adc
shrl
mov
add
pusha
lahf
cmp
shll
jns
xchg
cld
adc
test
fs
je
movsb
pop
xor
popf
adc
lock
iret
jae
add
push
sbb
roll
ret
cmpsl
cs
add
inc
push
roll
sbbb
add
pop
xchg
jmp
cmpsb
sahf
mov
inc
add
lock
in
push
sub
cmp
adc
and
jecxz
add
cld
mov
jno
add
cs
adc
call
mov
inc
dec
loop
xchg
sbb
cmp
jno
add
fiaddl
outsb
mov
add
es
lods
jnp
fstpt
ret
adc
mov
inc
and
adc
add
sbb
add
push
daa
rcrb
pop
add
popf
sti
ret
add
aaa
push
jnp
push
jo
add
in
or
and
cmp
scas
add
je
es
inc
sbb
aas
xlat
jl
int
and
popl
push
cmpsl
and
add
loope
rcl
test
cmp
inc
pop
enter
lods
and
sbb
mov
jne
or
dec
pop
lea
les
fwait
loop
xchg
pop
jbe
and
movsl
sbb
pop
sahf
add
or
loopne
adc
test
push
clc
int3
add
call
xor
adc
push
lea
aam
jo
pop
mov
inc
cmp
mov
gs
repnz
add
out
roll
and
push
or
mov
push
mov
cmc
fisttpl
leave
pop
push
mov
adc
dec
cmp
push
and
in
jno
loop
or
xchg
lock
pop
xor
lds
add
pop
cli
pop
add
mov
and
loopne
imul
call
rol
xchg
push
dec
nop
add
cmp
f2xm1
mov
jbe
es
push
lods
daa
pushf
loopne
pusha
je
push
sbb
fistpll
outsb
xor
sub
or
jb
lahf
test
sbb
ret
mov
aaa
mov
jmp
cmp
das
jno
inc
pop
mov
ret
iret
adc
leave
scas
jae
fdivrl
add
ss
sbb
loopne
in
mov
int
aaa
movb
cmp
jbe
fisubl
cmc
mov
mov
pop
or
stos
sub
xor
mov
out
adc
addr16
mov
scas
outsb
and
cltd
or
xor
add
sarb
fmuls
mov
jae
adc
pop
push
jo
add
add
mov
add
push
rorb
sub
and
out
pop
insl
hlt
add
pop
jl
dec
stos
jle
lahf
aam
lock
aas
jmp
sbb
ja
adc
add
in
shlb
pushf
add
cmp
dec
pop
jnp
add
sahf
aad
int3
notb
add
gs
add
aas
mov
xchg
out
in
add
mov
icebp
mov
jle
test
cld
xor
add
adc
pop
xor
lods
or
iret
lahf
adc
repz
push
pop
in
add
mov
pushf
add
inc
loopne
ret
rolb
bound
std
stos
sbb
sbb
lods
jp
fnsave
and
jmp
mov
jecxz
push
scas
aas
loopne
fs
bound
test
jbe
mov
inc
repz
jo
imulb
jmp
in
fdivs
and
or
movsl
jo
dec
sbb
pop
ljmp
add
push
loopne
sub
adc
lods
stos
adc
dec
or
adc
inc
lock
cmp
inc
add
addb
inc
cmp
mov
add
mov
sbb
or
js
ret
popa
loopne
mov
sbb
push
dec
pop
push
dec
add
sbb
sbb
adcb
addr16
fsubrp
push
sbb
ss
pop
jo
fcomps
push
lret
mov
add
adc
pop
jecxz
add
xor
sti
add
pop
lcall
add
jns
sbb
hlt
inc
add
adc
dec
sahf
in
data16
dec
and
sub
lea
lret
xor
xchg
stos
icebp
xchg
out
cmpl
adc
pop
inc
outsb
nop
adc
pop
cmp
clc
in
add
add
cmp
jg
std
push
mov
sub
or
imul
sub
mov
int3
add
pop
adc
sbb
std
rcrl
mov
gs
add
add
aaa
mov
into
add
repz
ja
xchg
jmp
mov
stos
cs
lods
xchg
mov
adc
scas
cmp
sahf
push
pop
sub
sbb
insl
fisubs
dec
popf
movsb
add
movsl
data16
add
lods
testl
stc
test
mov
cmp
mov
jp
flds
xchg
mov
mov
mov
sbb
jnp
sbb
loopne
add
and
loop
pusha
test
out
es
add
mov
shlb
bound
leave
add
dec
jbe
cld
outsb
repz
xlat
push
push
pop
fildl
scas
mov
out
adc
or
mov
bound
lea
mov
pusha
inc
mov
or
jle
mov
test
cmp
and
out
loopne
jne
arpl
daa
out
and
push
add
xorb
add
lea
mov
pop
into
testb
add
ret
lea
xor
bound
pop
jbe
inc
pop
loope
push
inc
cmp
mov
stos
sahf
push
ljmp
movl
fucomp
mov
je
pop
jmp
call
add
enter
or
adc
scas
push
fcmovnb
jnp
xchg
add
jg
and
xor
daa
jecxz
mov
mov
mov
ret
mov
pop
ffreep
pushf
mov
push
rolb
xor
push
inc
cs
and
scas
pop
leave
mov
pop
push
add
push
in
cmp
jnp
pusha
lret
mov
negl
inc
sbb
push
jecxz
inc
js
cwtl
out
nop
and
insb
dec
and
ss
xchg
dec
add
add
ljmp
push
lret
mov
inc
cmp
bound
lods
out
or
sub
fwait
mov
xchg
add
lret
add
cmp
lock
in
add
mov
filds
jl
mov
test
push
mov
mov
daa
or
inc
cmpsl
adc
dec
add
movsl
into
stc
add
shlb
mov
xchg
out
nop
inc
sbb
arpl
pop
push
dec
es
jg
xchg
adc
push
fwait
js
add
adc
testb
push
lock
jp
into
and
xchg
push
sbb
adc
repz
cmc
inc
in
pop
jecxz
lret
cmpb
mov
inc
jecxz
jo
aam
jle
add
mov
xchg
sub
add
idivb
sub
outsb
das
add
inc
jecxz
ljmp
or
dec
and
daa
lea
loopne
and
fnstsw
xor
or
and
loop
or
loopne
cmc
insb
pop
jne
mov
loope
ret
inc
ret
jge
sbb
add
inc
data16
mov
enter
aas
and
add
or
mov
dec
mov
aas
sub
inc
cwtl
movsl
inc
mov
sub
push
sbb
ret
lods
and
xchg
mov
jae
fwait
mov
and
mov
adc
jp
aam
inc
fmuls
jmp
fwait
test
scas
inc
popf
gs
mov
cmpsb
cltd
imul
lret
mov
std
sbb
sbb
cltd
sbb
je
sbb
loopne
movsb
jnp
add
sub
nop
mov
shll
mov
and
sbb
je
or
fistpll
mov
ds
push
pop
ss
xchg
add
in
leave
xchg
in
mov
ret
sbb
test
das
or
sub
and
add
add
cmpb
mov
pop
xor
add
mov
jp
fildll
push
add
rolb
pushf
cmp
xor
push
out
pop
pop
ja
adc
mov
pushf
test
gs
rorl
push
addr16
daa
pusha
xchg
xor
push
xor
add
fdivs
pop
add
pop
movsb
andb
mov
das
iret
imull
addr16
popa
fwait
push
je
sub
mov
jp
testl
sahf
loopne,pn
loop
add
fnstenv
jmp
mov
jne
orl
and
clc
sbb
mov
xor
cli
sub
nop
add
xchg
sahf
xor
and
cltd
aas
cmp
fcoml
add
push
add
into
mov
pusha
mov
cmp
pop
add
mov
mov
jl
aam
lock
adc
dec
jns
and
xchg
ret
movsb
rorw
insb
push
pushf
push
sbb
cwtl
mov
pop
sbb
pop
cmp
cmc
jb
outsl
clc
sbb
stc
pop
je
cltd
enter
jo
sti
sbb
push
xchg
sub
jmp
nop
les
popf
cwtl
inc
daa
xor
cmpb
add
shl
sbb
movsl
adc
ret
xchg
push
or
cmpsl
pop
dec
inc
jb
xlat
sbb
jns
cwtl
inc
test
pop
stos
sbb
xor
sahf
xor
cmpsb
jg
out
inc
outsb
inc
aam
sub
jmp
or
mov
adc
pusha
cmc
pop
adcb
xchg
mov
sub
in
jge
mov
inc
sbb
cmpsl
xchg
mov
stos
xchg
lds
pushl
mov
loope
xchg
push
stos
sbb
inc
mov
and
inc
sub
push
jmp
add
jmp
loopne
add
and
push
pusha
shrb
adc
aam
dec
faddl
add
aaa
push
ljmp
sub
fnsave
lods
imulb
arpl
lock
push
mov
scas
xchg
negl
cmp
sbb
xchg
rolb
imul
add
int
das
add
popf
adc
fsubr
jb
jnp
arpl
es
mov
mov
mov
dec
je
add
pop
or
push
pusha
test
xor
insl
adc
cld
sub
fnstenv
pushf
sahf
adc
sbb
mov
gs
pop
test
mov
mov
pop
cmp
sti
sbb
sbbl
and
push
ficoml
mov
xchg
fs
movl
enter
pusha
std
adc
sub
mov
mov
and
pushf
sahf
fimull
cmp
cmp
fsts
ret
push
dec
popa
push
std
loope
adc
add
rcrb
xlat
add
addr16
call
fistpl
out
ret
sbb
jbe
setno
sbb
inc
xor
add
or
mov
imul
add
je
std
enter
or
outsb
add
add
lret
add
jns
mov
insl
push
xchg
add
push
jb
dec
or
cmp
jae
pop
rol
add
and
cmp
xorl
loop
hlt
pop
int3
ret
fneni(8087
rcrl
es
inc
xchg
add
insb
mov
push
sbb
mov
pop
sub
add
rcll
and
int
nop
loopne
mov
jg
lods
je
xlat
test
mov
mov
cmp
into
shll
gs
sbb
jnp
xchg
push
movsl
cmp
xchg
add
rcrl
sub
dec
fists
jl
mov
mov
ret
sbb
jo
xchg
jno
xchg
or
jle
pop
and
pop
imul
lahf
insl
dec
int3
sbb
cli
add
nop
arpl
or
pop
aaa
loope
ror
negl
std
jnp
test
dec
sub
dec
or
inc
xchg
lock
add
adc
pop
stc
xor
iret
xchg
and
mov
cli
in
mov
cltd
or
cmc
dec
popa
xor
imul
and
loop
in
jmp
sahf
inc
sub
cmp
mov
sti
and
jge
dec
dec
outsl
mov
addl
add
paddsw
dec
fadds
popa
push
je
push
and
cmp
mov
jge
inc
stc
add
jne
les
movsl
repz
js
rcrb
cs
out
push
xor
xchg
cmp
in
add
movsb
pop
lahf
xchg
xchg
mov
nop
add
add
xlat
lock
hlt
test
or
adc
das
fcoml
add
mov
or
pop
mov
test
pop
test
sbbl
sbb
dec
add
cmp
lods
fimuls
faddl
add
mov
sbb
xor
sbb
lret
das
sbb
cmpsl
jp
shrb
cmp
and
aaa
enter
incl
mov
dec
and
add
sbb
jmp
pop
mov
mov
jle
xchg
xor
pop
push
out
jmp
sub
and
jno
test
cmp
nop
aaa
loopnew
data16
loope
mov
sbb
push
sarl
andb
cmp
int
xor
popf
and
das
ljmp
int
aas
push
out
mov
pop
jmp
adc
out
mov
add
insl
or
xchg
mov
shll
add
icebp
mov
imul
add
in
adc
ds
sub
jmp
pop
call
movsl
add
out
in
mov
add
push
sub
loop
sub
dec
ret
ljmp
dec
adc
jp
dec
arpl
aam
xor
add
push
sar
jno
mov
jae
xchg
xor
call
mov
jne
into
sub
add
pop
ljmp
js
add
dec
fcompl
pop
scas
adcl
adc
lahf
loope
ret
xor
lea
sarb
adcl
dec
ja
jbe
add
and
arpl
add
lea
cmpsl
loop
adc
jl
pop
sbb
push
cmp
daa
unpckhps
sub
sbb
inc
mov
sub
cmp
and
lds
scas
add
cmp
xchg
lret
push
pusha
adc
adc
add
out
xchg
adc
popa
sub
fsubl
or
aas
push
add
test
repz
cli
push
and
subb
popa
add
fs
cmp
add
mov
dec
pop
add
lcall
js
shll
nop
xor
push
mov
cmp
pop
cld
sbb
mov
adc
add
stos
dec
bound
adc
dec
sbb
aas
pop
push
enter
push
add
jb
ret
fwait
pmulhw
inc
repz
andl
lods
or
test
sbb
add
lret
xchg
js
jp
add
movsl
and
adc
cwtl
sub
cmpsb
or
add
xor
icebp
mov
jp
enter
into
dec
add
and
nop
lods
jne
ds
mov
sbb
add
test
add
push
mov
pop
mov
popf
mov
push
push
inc
out
out
les
push
push
repz
or
jl
xchg
cmp
shl
push
adc
push
jo
out
dec
sbb
sbb
imul
popf
adc
add
lods
cwtl
js
push
jl
aam
adc
mov
add
push
mov
pop
test
cltd
clc
inc
jo
add
insb
jne
sbb
insl
in
flds
cmp
pushf
xor
and
add
push
jg
xlat
imul
mov
mov
sbb
pop
cmpsl
add
mov
and
lods
and
xchg
in
sbb
cltd
sarl
lret
sbb
cli
add
lret
add
cmp
int3
rcrb
mov
leave
sarl
out
cmpsb
adc
add
les
adc
int3
lock
sbb
test
mov
andl
shrl
xchg
xchg
pusha
dec
cli
lods
bound
pop
add
mov
stc
mov
mov
lods
xor
add
daa
jne
in
ret
dec
push
lods
not
add
sbb
stos
scas
cmp
adc
jg
out
int
push
lock
add
mov
push
cmpsb
adc
into
mov
dec
xchg
xor
ljmp
lods
das
arpl
fidivs
sub
add
and
xor
and
cmp
add
cld
push
mov
clc
mov
mov
sbb
pushf
outsb
add
repnz
dec
jecxz
add
adc
add
arpl
add
dec
inc
or
inc
in
inc
pop
xor
dec
add
sahf
dec
mov
add
or
sbb
and
xor
rcl
fldt
in
fimuls
je
pop
push
add
popa
fcmovnb
sub
mov
xchg
nop
and
push
sahf
mov
mov
imull
add
das
iret
insl
out
jp
mov
xchg
mov
jge
daa
push
gs
push
jp
filds
add
aam
str
push
add
out
add
jp
outsl
pop
imul
jne
data16
shl
pop
mov
adc
cmp
adc
lock
jno
add
xchg
xchg
mov
xor
mov
mov
stc
aaa
ret
push
rolb
adc
in
or
push
sbb
mov
mov
test
mov
popa
mov
jg
xor
jnp
mov
addr16
push
ret
scas
out
lea
arpl
jne
add
xchg
gs
mov
jae
setl
stos
jb
ret
call
inc
call
add
mov
push
adc
lret
cmpsl
push
cmp
inc
cs
bound
ds
mov
add
xor
add
xchg
js
and
sahf
sbb
dec
and
repnz
sbb
xor
loopne
mov
cs
push
mov
movsb
sbb
ja
call
pop
ljmp
push
clc
push
cli
je
lods
mov
or
pushf
pop
repz
and
add
or
jmp
add
das
scas
inc
add
mov
dec
lahf
or
rolb
test
and
xor
nop
inc
cwtl
andl
test
pop
mov
aam
filds
shlb
cmpsb
lea
imulb
push
xchg
add
loopne
xchg
cmp
xchg
add
xor
jl
fs
sbb
mov
inc
and
pop
sbb
xchg
adc
out
or
inc
std
mov
xor
aaa
dec
dec
out
add
jno
xchg
cmp
loopne
add
sbb
xchg
bound
or
outsl
jbe
mov
loopne
lea
arpl
push
in
mov
xor
addr16
popf
and
and
in
or
or
add
mov
imul
push
xchg
call
sbb
xor
repz
pop
test
aas
xchg
add
inc
addr16
xlat
outsb
stc
add
dec
movsl
mov
push
mov
sbb
outsb
mov
mov
iret
push
add
cmp
mov
lea
xchg
inc
xchg
add
push
leave
jno
cmp
push
dec
add
mov
mov
xor
pop
mov
loope
add
cwtl
jle
cmpl
add
lods
add
xchg
add
aaa
mov
fwait
add
in
dec
mov
repnz
lretw
pop
mov
xchg
stos
movsb
scas
add
movsl
fnsave
loopne
test
inc
jp
outsb
add
mov
fs
add
fsubs
inc
pop
hlt
stos
inc
inc
xorb
push
add
mov
mov
shrb
add
dec
cmp
jle
test
or
das
loope
jl
ss
in
faddl
pop
mov
bound
mov
jmp
add
xchg
in
add
gs
add
jbe
mov
inc
out
fcompl
add
jns
nop
mov
cltd
add
test
aaa
adc
popa
loope
movsb
shlb
jecxz
lahf
les
lods
outsb
cld
add
lock
add
push
mov
test
cmpsb
rcll
outsb
dec
imul
push
sub
adc
pop
shll
sbb
add
jb
mov
pop
or
xchg
dec
and
test
push
xchg
mov
xor
lods
insb
mov
sub
clc
inc
shlb
add
jl
mov
add
shufps
and
dec
ficompl
cli
cld
es
ret
sbb
sub
mov
xor
nop
push
inc
jne
add
test
jno
icebp
or
add
mov
je
scas
cwtl
fidivs
fcompl
inc
adc
cmp
clc
fnstsw
push
dec
nop
popf
and
repz
push
dec
daa
push
or
push
test
dec
xor
fcmovb
push
and
mov
in
dec
fdivs
inc
jae
mov
or
sub
outsl
cwtl
inc
int
std
loopne
add
sbb
fnstcw
popf
xchg
int3
push
scas
add
dec
cmc
and
pusha
jecxz
sub
negl
push
nop
add
mov
fmull
sbb
adc
xchg
add
add
xchg
movsb
push
xor
cmp
mov
cmpsl
pop
jno
lcallw
decl
dec
add
psllq
or
add
clc
xchg
roll
nop
data16
outsb
and
enter
or
add
mov
mov
je
inc
sbb
pop
loopne
movsb
xchg
push
push
add
sbb
add
mov
add
outsb
sub
rcl
jg
sbb
out
shr
aaa
sahf
or
shr
jl
fwait
clc
and
and
add
push
mov
std
adc
mov
repz
mov
xchg
pushf
inc
pop
xor
dec
cmp
bound
ljmp
push
mov
xchg
imul
sbb
xchg
lods
pushf
fsubs
clc
jge
xchg
das
pop
jmp
inc
and
sti
push
push
push
shlb
xor
mov
jne
and
repnz
or
lret
jl
push
mov
mov
addr16
test
scas
out
or
daa
pop
sbb
nop
lods
or
adc
cmp
test
add
mov
add
gs
shl
fimuls
ja
mov
inc
les
dec
test
lds
shrl
subb
adc
divl
inc
push
add
jb
enter
xchg
pop
jae
pop
fstps
dec
xchg
loope
cmp
adcb
dec
testb
pop
add
and
rorb
cltd
pop
jmp
add
mov
dec
inc
popf
dec
add
xchg
pop
fisubrs
dec
ret
inc
jo
data16
pop
inc
sbb
sti
adc
ja
push
scas
cli
xchg
pop
loopne
sbb
sbb
mov
es
aas
sub
add
or
push
pushf
or
sub
stc
mov
xor
adc
fisttpll
mov
adc
inc
scas
jl
push
into
loopne
adc
pop
flds
mov
lahf
out
test
cs
or
add
call
fcmovu
mov
add
and
add
dec
mov
mov
cmp
rcr
add
inc
cmp
jne
out
add
pop
int
mov
or
cld
inc
pop
sbb
add
adc
add
xor
bound
popa
stos
mov
cmp
ljmp
xchg
xchg
std
inc
pop
add
jmp
shll
xchg
test
popa
loop
add
adc
add
movl
shlb
ret
add
or
scas
xor
pop
lods
scas
cmpsb
dec
mov
mov
loop
or
iret
add
or
les
add
add
jno
jo
lods
mov
sbb
fcmovnb
loope
push
mov
ja
add
js
sbb
or
dec
inc
xchg
cwtl
lahf
xor
pop
stc
xor
push
pop
add
loope
mov
sbb
jmp
add
hlt
or
ret
sbb
out
addb
outsb
hlt
push
push
xor
push
add
fstpl
sbb
mov
fisttps
pop
icebp
pop
cmp
and
push
addr16
push
outsl
mov
pop
add
stos
push
mov
int
iret
pusha
aad
add
cmpsl
push
inc
lds
and
mov
in
push
clc
lods
xchg
sahf
test
xor
stc
xor
add
loope
paddusb
push
add
lock
add
or
xor
sub
add
jns
mov
add
loopne
sub
pop
mov
sub
fnsave
pusha
fstpt
adc
cmp
cmpb
mov
dec
or
clc
outsb
pcmpeqb
xchg
std
push
push
bound
dec
or
popf
dec
lret
sbb
jns
fldt
jbe
call
xchg
int3
stos
addl
ja
addl
sahf
rorb
jecxz
and
xlat
into
add
test
xor
mov
and
andb
test
test
mov
and
insl
adc
add
imul
shll
mov
clc
vandnps
mov
add
pop
add
je
mov
aas
push
xor
out
mov
pop
add
sub
cld
icebp
ja
mov
xchg
sbb
mov
add
movsl
mov
andb
sub
sub
shl
shll
imul
hlt
push
fildl
dec
stos
popf
and
mov
add
loopne
sti
or
cmp
add
andl
add
scas
sub
mov
aas
jns
add
add
pop
pcmpgtw
add
movsb
icebp
dec
pop
lea
filds
popa
mov
mov
add
jno
gs
and
mov
rorb
cmpsb
mov
movsb
shlb
fdivrs
jl
and
je
push
jge
dec
push
adc
sbb
addb
xor
lock
rcrb
add
cwtl
daa
dec
test
lods
les
mov
pusha
push
adc
mov
adc
mov
in
in
xchg
loopne
adc
xlat
push
ss
add
fstpt
mov
mov
sub
push
adcl
sbb
xor
cli
sbb
and
notb
les
sbb
jl
lock
pop
mov
cs
sbb
les
imul
push
scas
call
jle
sbb
cmp
fiadds
inc
dec
mov
lea
test
fs
clc
or
mov
ret
std
hlt
or
les
lret
pop
add
into
scas
leave
and
push
ljmp
sbb
jg
mov
mov
loop
add
cmpb
cmpsb
xchg
pop
out
pop
adcl
or
xor
adc
push
dec
addb
mov
xchg
decl
sbb
mov
pop
sub
xchg
enter
sbb
pop
push
shrl
stos
dec
je
cmp
and
pusha
inc
mov
mov
stos
and
cmpsb
sub
add
cli
mov
push
aam
inc
dec
sbb
stos
pop
add
jle
sub
scas
push
cs
cmp
jp
roll
into
sbb
clc
push
jo
add
jg
rolb
loopne
test
dec
cltd
addb
push
ficoml
add
dec
add
test
pop
jecxz
jbe
sahf
push
mov
ss
fidivl
jne
and
jns
rcrb
in
std
push
ja
loopne
ss
das
adc
cmp
or
push
into
dec
add
and
cmpsb
add
and
lods
mov
cmp
sbbl
roll
cmp
pop
add
mov
rolb
fimull
pop
mov
das
add
movsb
and
inc
psubusb
js
mov
add
cmp
sbb
jbe
cltd
incl
lds
divl
das
enter
xor
pop
data16
adc
mov
mov
and
jl
arpl
movl
pusha
sub
add
xor
flds
ficomps
or
js
jle
sbbl
inc
cmp
inc
inc
pusha
sbb
jb
xor
sub
mov
or
jne
repnz
inc
xchg
test
cltd
adc
jmp
or
adc
je
cli
dec
add
jge
ljmp
popf
aaa
and
icebp
aas
rclb
xchg
or
inc
push
mov
jecxz
dec
iret
dec
add
add
xchg
or
push
sbb
out
cmc
out
fwait
or
popf
call
dec
aam
inc
sahf
loop
add
or
in
add
inc
push
imul
xchg
jns
cmp
or
xor
movsl
cs
add
adc
lods
inc
inc
loopne
cmp
or
pop
ds
inc
inc
add
fsubr
mov
xor
outsl
test
xchg
roll
cmp
mov
mov
fs
aaa
daa
subb
push
out
add
xor
test
pusha
test
add
sti
sbb
stos
lahf
xor
packuswb
repz
inc
pusha
add
sub
incb
or
sbb
cli
insb
mov
js
sub
push
adc
cmpsl
add
push
pusha
xlat
lds
mov
and
mov
je
add
xor
add
lret
xchg
push
ret
out
movsl
or
dec
inc
jo
xchg
inc
push
aad
ja
cld
pop
adc
in
pop
fstp
sub
add
mov
fwait
mov
outsb
add
test
and
xchg
fcmove
and
sub
pop
inc
xchg
out
or
sar
cmp
add
dec
pop
sti
scas
add
mov
roll
push
in
iret
jge
mov
add
add
pop
add
insl
add
into
mov
mov
pusha
xor
sbb
cmc
roll
out
sahf
xchg
or
mov
inc
lds
arpl
dec
cmpsb
mov
push
add
cmp
outsl
loope
and
or
addl
or
jno
mov
cli
add
cmpsb
inc
movb
enter
std
and
and
arpl
add
es
jmp
outsb
add
or
and
nop
sub
xor
sub
adc
scas
add
pop
psllq
pop
insb
add
into
cld
stos
loope
mov
fidivrl
ss
loopne
mov
repnz
push
shrb
shr
fadd
pusha
cmp
adc
ret
adc
xor
cwtl
lock
xor
jle
push
sbb
add
adc
inc
jecxz
adc
lret
sub
loopne
loope
push
pop
push
insl
push
add
cltd
js
or
push
mov
xor
iret
sti
mov
arpl
loopne
pusha
pushf
ret
dec
and
jnp
lds
mov
pop
inc
out
sbb
add
jle
iret
fisttps
xchg
mov
dec
test
xchg
xor
stos
mov
add
imull
sbb
lahf
mov
cmpsl
add
push
xlat
adc
rcrl
inc
push
cmp
sub
inc
adc
mov
lock
adc
add
mov
mov
popa
and
pop
add
pop
jbe
divl
inc
push
ljmp
push
dec
es
fs
mov
sbbb
roll
xchg
lea
sbb
push
adc
fstl
push
pop
sti
add
push
je,pn
push
movl
fisubs
mov
test
push
push
test
dec
pop
dec
xchg
mov
js
sbb
out
mov
add
xchg
int
jb
loope
lock
sbb
test
dec
dec
and
stos
popf
push
add
into
and
add
sbb
pop
cmpsb
lret
cmp
or
mov
or
add
lock
cmp
in
add
sub
daa
dec
mov
hlt
add
xor
test
out
mov
add
mov
xchg
cmp
loope
mov
sub
inc
int
loope
xlat
mov
push
add
dec
adc
and
sub
xchg
imul
mov
add
xchg
roll
mov
loopne
or
add
adc
add
push
pop
or
push
loopne
mov
scas
addl
add
xor
aas
xor
das
sub
lods
mov
lret
fucom
add
rcll
mov
into
add
arpl
pop
scas
mov
mov
xor
ljmp
sti
sbb
adc
fcoml
cmpsl
out
add
or
push
mov
cmpsl
nop
cmp
mov
xchg
jecxz
add
inc
call
mov
sbb
arpl
or
inc
add
fmuls
inc
dec
lahf
cmp
xor
insl
add
adc
idivb
pop
arpl
and
shlb
push
in
or
sbb
and
pop
icebp
cltd
cmpsl
lea
shll
xor
dec
inc
cmp
mov
lahf
ljmp
cmpsb
inc
mov
push
das
inc
cwtl
in
mov
call
sahf
dec
adc
pop
adc
inc
lcall
sub
and
adc
sbb
pushf
rolb
and
mov
jl
sti
mov
add
xor
sbb
mov
mov
dec
or
jmp
dec
cmp
or
push
mov
out
mov
or
sbb
jle
cld
js
xor
sbbl
jmp
cmp
jbe
fadds
lea
dec
pop
scas
add
mov
dec
or
fwait
outsl
add
sub
stos
pusha
jecxz
jno
and
push
lds
mov
rcll
xchg
jecxz
mov
int
add
daa
inc
sub
aam
mov
mov
add
add
inc
adc
add
xor
jp
test
mov
jmp
icebp
scas
out
xchg
inc
mov
gs
adc
dec
mov
push
fiaddl
aaa
cmp
stos
nop
add
aas
mov
xchg
fbstp
hlt
incb
testb
cld
and
push
sarl
rcrl
mov
adc
out
mov
daa
push
push
xor
xor
push
push
cmp
sub
jae
sub
fs
lods
ljmp
xor
xchg
lds
out
lret
add
xor
or
or
and
push
add
push
mov
scas
add
minps
xor
push
pusha
mov
mov
lock
fcompl
mov
loopne
sbb
mov
and
dec
cld
push
and
xor
sbb
adc
test
sbb
test
pop
add
cmc
ret
mov
enter
test
add
inc
add
push
dec
adc
es
adc
mov
rolb
ja,pt
mov
and
outsl
or
jb
xor
xor
cmpb
push
testb
shrl
or
movsl
loope
pop
fnstcw
mov
xchg
or
iret
sub
cmc
testl
pusha
inc
lret
arpl
pop
xchg
xchg
adc
jno
cmpsl
mov
fisubrl
mov
in
add
xor
cmp
jp
jmp
dec
ret
adc
pop
das
add
pusha
ret
mov
dec
adc
push
out
ret
fildl
sbb
daa
add
cld
mov
in
out
or
mov
fucomp
loopne
aaa
mov
mov
mov
mov
sahf
add
pop
xor
test
movsb
mov
dec
jp
testb
loope
mov
inc
enter
inc
adc
js
jle
outsl
xchg
mov
mov
cmp
loopne
in
sbb
and
xlat
adc
jmp
imul
mov
dec
ds
hlt
jl
add
ss
cmp
push
dec
adcl
shll
pop
add
outsl
sub
jns
jl
stc
add
dec
sar
xor
in
sbb
hlt
pop
inc
sbb
out
std
loope
push
gs
je
mov
xor
add
adc
jge
outsl
inc
add
dec
jae
mov
popl
ficoms
fwait
sub
in
sarl
test
inc
leave
and
ljmp
pop
cmpsl
fisttpll
dec
lds
lahf
cltd
popa
stos
jb
sbb
and
mov
outsb
lea
std
xchg
mov
push
mov
mov
add
insl
loop
and
push
test
faddl
in
aaa
rorb
mov
sbb
xor
ljmp
addb
cmp
mov
arpl
imul
cmc
xchg
add
lods
add
mov
sbb
add
rcll
popl
mov
in
and
pusha
ffree
xchg
xchg
inc
sbb
fiaddl
orl
or
jbe
and
divl
sub
and
jle
push
adc
sbb
shl
or
movl
mov
jge
mov
shlb
stos
out
loopne
or
sahf
pop
add
cmpsl
out
js
test
and
dec
test
mov
sub
nop
dec
inc
stos
gs
fisubrs
ret
push
int3
or
xor
add
mov
mov
stos
cmp
adc
cmp
jmp
rorl
movsb
inc
and
stc
jl
inc
xor
sbb
rcrl
fcomi
sbb
fstl
test
xor
inc
add
xor
fsubl
outsb
and
xor
in
adc
ret
ljmp
data16
addl
jl
ds
sahf
std
inc
cmp
add
sub
sti
jne
in
in
ja
hlt
sar
out
lcall
and
dec
lods
lret
nop
xchg
sti
xchg
mov
or
lcall
popa
xchg
andb
xlat
out
and
xchg
sub
jp
push
push
cmp
mov
pop
pop
or
pop
add
cmpsb
iret
test
or
add
jo
test
nop
in
jl
sbb
ficomps
hlt
or
add
add
aas
inc
aaa
mov
stc
cs
in
cmp
inc
pop
cltd
sbb
mov
mov
pop
add
and
pop
faddl
adc
sbb
sbb
add
les
sbb
dec
scas
and
add
jnp
mov
cmp
jecxz
out
push
push
cmc
sub
or
add
sbb
shlb
and
repz
cld
std
jo
add
ljmp
add
push
pushf
add
or
or
testl
arpl
ficomps
fldl
les
mov
fistpll
sahf
into
frstor
or
xlat
rcrl
add
lods
xchg
add
cmpsl
out
or
imul
pushf
inc
and
scas
push
push
add
sbb
cmp
or
add
adcl
mov
pop
adc
and
roll
stos
lret
add
pop
les
adc
add
pusha
or
pop
or
add
or
jnp
pop
inc
and
mov
gs
stos
aaa
inc
loope
inc
add
pop
sbb
into
loopne
sub
cmp
add
stos
fisubs
pop
outsl
add
and
mov
test
lret
add
xor
pusha
inc
roll
subl
xlat
addb
jns
sbb
push
add
xchg
out
jno
pop
rorl
add
jl
dec
mov
inc
inc
add
xchg
ret
mov
test
pusha
hlt
mov
push
ficoml
jg
jp
cs
imul
add
mov
inc
inc
push
xchg
mov
in
and
mov
lret
adc
dec
sub
fs
outsb
xlat
inc
je
sbb
outsl
cmp
adc
fmul
adc
rorl
mov
dec
dec
push
cmp
ss
cmp
adc
idivl
push
xor
mov
jp
fadds
fwait
add
sahf
sbb
test
or
lret
dec
mov
add
out
das
enter
sbb
aam
ss
inc
pop
add
aas
gs
rcll
and
dec
addl
xor
add
mov
stos
outsl
loope
or
mov
add
daa
loopne
movsl
pop
mov
pop
in
xchg
test
fisubl
loop
cld
fcompl
lods
dec
mov
pop
out
inc
mov
sti
sbb
imul
adc
mov
mov
mov
test
or
sbb
add
repnz
out
sbb
mov
aas
jns
push
in
add
xor
push
xor
aad
pop
ds
push
adc
add
add
dec
test
jmp
rorl
sahf
daa
push
shrl
fs
push
in
pop
lahf
jnp
add
hlt
xchg
jo
sbb
loopne
lock
adc
jb
fistpll
pusha
repz
loop
xchg
stc
les
pop
mov
lods
mov
icebp
adc
jno
ss
iret
mov
pop
pop
add
pop
les
daa
loope
mov
dec
or
push
mov
cltd
mov
cmpsb
sbb
test
popa
sub
jmp
movsb
shr
push
or
les
sbb
xchg
out
pop
mov
sti
xor
dec
repnz
rcrl
notl
mov
je
cwtl
adc
rcr
jns
xor
add
daa
mov
jg
ljmp
pusha
dec
xchg
mov
cmp
sti
shll
lds
inc
and
jg
add
out
repnz
push
aad
out
in
inc
pushf
mov
mov
insl
push
or
fiaddl
in
dec
int3
stc
mov
sub
xchg
pop
stos
add
mov
xchg
iret
add
mov
jmp
push
lods
loopne
lcall
sbb
adc
xchg
sub
sti
lods
jecxz
xor
sub
and
stc
decl
sarb
fisubrl
ja
cmp
and
sub
add
xor
jns
jb
jne
inc
les
mov
add
ds
add
mov
gs
lods
addr16
sbb
add
mov
inc
add
clc
cmp
out
inc
enter
sbb
pusha
fistps
push
js
adc
pop
int
orb
sub
jp
icebp
out
and
adc
sbb
cmp
in
xchg
cmp
rol
loope
push
nop
add
pop
push
icebp
cmp
mov
ret
and
fadds
dec
les
fneni(8087
int
mov
movl
cmpsb
xor
es
xchg
inc
negb
cmc
jns
xor
and
add
shll
mov
clc
inc
pop
pop
sbb
mov
add
in
jb
and
pop
mov
orl
repz
hlt
pop
lods
mov
dec
add
fcoml
repnz
aad
cmc
push
add
jp
or
and
sub
mov
inc
xchg
dec
mov
test
add
les
or
lock
loopne
insl
bound
mov
xor
nop
sub
imul
fistps
sub
xchg
dec
les
lock
aam
out
pop
shl
add
xchg
shrb
add
push
arpl
imul
adc
enter
pusha
ja
subb
jns
dec
add
ds
rolb
cwtl
test
pop
in
xor
or
dec
mov
or
add
mov
adc
call
push
push
mov
inc
sahf
mov
loopne
mov
add
loope
pop
dec
add
notb
in
in
adc
lea
aad
lods
jbe
test
add
lret
mov
jp
push
add
or
movsl
pusha
mov
cmp
add
imul
incb
adc
adc
xchg
or
inc
daa
jne
inc
cmpsl
pushf
fsubl
test
adc
jg
mov
cmp
in
mov
jae
push
nop
add
sbb
ja
hlt
add
mov
in
jl
gs
daa
push
lcall
pop
aaa
mov
mov
sahf
mov
fdivr
mov
adc
jmp
sbb
xor
fsubl
movsb
inc
pop
and
pushf
sti
push
push
fists
push
xchg
cmpsb
pusha
jno
xchg
jge
test
and
dec
adc
xlat
jg
stos
repnz
testl
fsubl
lret
add
and
push
insb
cmp
push
inc
sbb
call
inc
push
adc
add
mov
jae
xor
cmp
test
lahf
jl
cmp
cmp
mov
imul
add
jle
mov
ja,pt
test
lods
and
push
sub
cmpsb
scas
mov
adc
inc
inc
adc
test
insb
mov
das
lea
add
les
mov
hlt
outsb
xor
lock
sbb
pop
xor
pop
int3
push
xchg
repz
add
sbbl
mov
pusha
xchg
out
push
xchg
adcb
push
add
scas
loope
mov
cmc
jg
negw
add
outsb
adc
pop
insb
call
jae
or
mov
dec
add
dec
subb
mov
add
test
leave
xchg
mov
shl
dec
sub
jnp
jnp
adc
add
cmpsb
push
pusha
and
adc
leave
sbb
mov
in
pop
add
sbb
bound
jg
and
jl
inc
push
ljmp
pop
rorl
dec
dec
sbb
and
xchg
sub
scas
in
adc
cwtl
add
les
sub
or
repnz
jecxz
jne
and
adc
xchg
mov
sahf
lret
sbb
movsb
add
gs
mov
sbb
popf
sub
jbe
hlt
push
mov
das
adc
pop
gs
mov
xchg
xorb
add
mov
lret
mov
pop
jbe
xchg
adc
into
sbb
pop
push
push
dec
add
mov
mov
shl
adc
movsb
dec
scas
mov
xlat
xchg
adc
inc
loop
loopne
xorb
stc
and
cmp
and
sbb
lret
xchg
scas
push
out
add
ret
mov
add
pop
cli
add
shrl
fisubs
out
inc
adc
insb
mov
popa
jle
outsb
fidivl
pshufw
pop
insl
add
sbb
push
xchg
add
jmp
out
add
lcall
incl
test
jne
cmp
std
popl
add
push
scas
xchg
add
sub
push
int
mov
icebp
and
stos
add
and
jg
cs
aas
into
testb
loopne
loopne
inc
sub
js
push
add
mov
xchg
or
cs
movsb
stc
add
orb
dec
mov
aas
enter
add
aad
inc
loopne
dec
push
mov
cmp
inc
push
xchg
sbb
mov
sahf
add
pop
sub
cwtl
add
dec
mov
orb
xchg
shr
imul
add
adc
lods
hlt
mov
sbb
scas
sbb
mov
js
sub
push
mull
pop
lds
mov
fsubp
add
fsubrs
add
push
das
dec
inc
fidivl
lea
xchg
xor
jne
shll
mov
dec
popa
ds
and
mov
imul
mov
adc
mov
arpl
js
add
ret
add
pop
je
sub
adc
xlat
insl
pop
add
add
pop
mov
leave
add
dec
ljmp
push
mov
fildl
sti
adc
imul
add
movsb
aad
and
pop
fsubp
mov
je
test
stos
add
jno
pop
out
or
xorl
xchg
sub
and
xchg
dec
mov
add
das
jle
aas
xchg
call
mov
adc
xchg
das
lret
add
lods
inc
pop
adc
mov
stc
add
xor
ds
int3
add
or
hlt
add
cmp
cmp
lea
push
movsl
test
ficoml
fsubrl
fs
shlb
in
jae
sbb
lds
push
jno
push
xchg
mov
cld
inc
add
arpl
inc
jnp
dec
add
sar
mov
aad
lcall
jg
lret
adc
sbb
add
loop
ret
mov
jns
sbb
push
clc
pop
test
add
ret
xor
cmp
pop
call
push
clc
pop
push
pusha
filds
pop
xchg
adc
or
add
xchg
lea
jecxz
mov
jge
cmp
fadds
call
mov
rcll
xchg
cmp
dec
das
cmp
push
mov
add
shlb
scas
sub
out
adc
dec
roll
add
dec
and
scas
push
gs
je
push
sti
fiadds
add
shlb
arpl
add
loop
ret
add
inc
fmul
sbb
filds
add
nop
xlat
xor
mov
add
movsb
cmc
push
hlt
daa
imul
out
rcrl
jle
dec
popf
jmp
jo
mov
xchg
scas
es
imul
add
xchg
loope
stc
inc
or
sbb
popl
popa
jne
fdivl
sub
sub
arpl
adcb
adc
add
in
mov
push
pop
jp
jecxz
cmp
adc
stos
or
aad
dec
xchg
int
stos
cmc
imul
inc
imull
push
pop
cmc
loopne
add
mov
jge
inc
or
add
add
inc
loopne
add
rcrl
xchg
aad
scas
pop
xor
sbb
fiadds
xchg
cmp
xchg
jo
cld
and
add
rclb
addr16
add
mov
mov
inc
cmpsl
cmp
sub
sub
jecxz
in
sbb
sub
in
mov
add
sub
ja
das
icebp
xchg
mov
lret
add
ljmp
add
std
sbb
loope
sti
rcl
fadds
jbe
stc
cmp
or
pop
adc
xor
fscale
sub
add
es
add
jp
daa
inc
adc
jae
xchg
lret
add
push
fwait
push
add
movsl
sahf
lea
daa
sub
mov
add
mov
repnz
mov
fwait
mov
mov
rorb
or
mov
lds
leave
push
mov
add
or
jb
loopne
xor
and
repnz
fimuls
adc
xor
xchg
scas
adc
xacquire
leave
mov
imul
pop
lock
adc
shlb
das
repz
mov
mov
popf
xchg
gs
mov
imul
in
xor
ljmp
movsl
xchg
sub
sbb
stos
xor
loopne
test
sub
cli
sbb
adc
mov
enter
or
inc
fs
nop
jmp
scas
add
mov
xchg
ret
rclb
jp
mov
cmp
push
push
jge
cmc
add
cmp
mov
mov
sbb
scas
sbb
dec
into
sub
lcall
das
add
xor
cmp
leave
ss
push
loope
add
lcall
add
mov
adc
ljmp
enter
xchg
pop
jno
mov
mov
data16
out
inc
add
adc
cwtl
add
js
andb
xchg
and
jle
cmpsb
adc
sbb
adc
mov
push
pop
daa
jbe
inc
mov
xor
addr16
mov
and
mov
sbb
inc
mov
mov
mov
das
mov
add
pop
fadd
dec
imul
mov
and
not
jp
rcrb
in
loope
sarl
push
cld
pop
dec
add
jp
pop
push
mov
sub
adc
fcmovnu
outsl
int3
mov
cmpsl
pop
sub
adc
xor
mov
inc
js
sbb
scas
xchg
daa
sbb
lock
nop
ret
outsb
add
mov
add
mov
push
inc
pop
push
lret
add
pop
stc
stos
and
mov
into
adc
add
sub
mov
push
aas
push
lds
sti
xor
imul
and
popa
dec
xchg
xchg
rcrl
ret
scas
and
divps
fwait
push
push
add
xchg
jne
js
jecxz
je
rcrb
fstp
pop
or
loopne
popf
adc
mov
and
adc
imulb
lock
or
add
cmc
push
add
mov
sbb
aas
sbb
inc
mov
fsubrl
push
add
cmp
rclb
ss
mov
pop
add
or
add
dec
shl
jge
sti
cld
add
call
stc
test
inc
rol
pop
mov
jo
decl
mov
mov
roll
out
hlt
mov
pop
insl
loopne
test
cltd
mov
out
leave
sub
and
dec
jno
adc
add
test
add
inc
repnz
js
lods
lds
adc
loopne
add
dec
dec
sbb
lods
popf
and
or
rcrb
mov
addb
inc
lock
sub
std
add
jle
lods
jne
mov
and
sub
iret
ret
rcl
mov
inc
leave
fsubp
pop
cmpsb
test
testb
pop
and
cltd
mov
sbb
xchg
add
jnp
push
mov
add
push
cmp
push
leave
lcall
ja
adc
adc
les
mov
subl
or
cmp
xor
cltd
sub
fnstenv
clc
popf
mov
lds
jbe
add
hlt
imul
ret
push
sbb
pop
je
inc
aaa
imul
xlat
mov
cltd
inc
mov
jg
push
add
ret
sub
ret
sub
fisubrs
loope
les
add
mov
movsl
mov
fwait
xchg
add
or
dec
cmp
lahf
shlb
fiadds
ljmp
mov
add
addr16
push
aad
mov
pop
mov
or
test
cltd
adc
and
jle
repz
scas
pop
adc
roll
aam
lret
pop
and
sub
push
sub
sbb
push
lahf
dec
filds
jb
imul
jmp
adc
xchg
cwtl
andl
cmp
ljmp
add
xchg
fbstp
loope
add
in
mov
ret
insl
fsubrl
lahf
mov
ljmp
movb
push
mov
incb
and
push
sbb
push
lds
sti
sbb
mov
xchg
and
fcoml
add
dec
rol
out
mov
loope
xchg
in
add
fadd
arpl
adc
les
mov
jle
xchg
dec
xchg
add
bound
mov
sbb
js
add
shl
push
pop
mov
add
cld
addb
in
iret
ds
dec
xchg
xchg
bound
std
daa
outsl
icebp
add
push
inc
mov
pop
dec
add
test
pushf
fidivrs
add
and
or
sahf
add
test
pop
scas
xor
pushf
test
add
inc
ror
jno
jmp
add
and
mov
add
int
fs
xchg
push
aad
adc
add
out
mov
or
sub
inc
cmp
xchg
mov
add
mov
test
ret
xchg
adc
cmp
mov
pop
add
sub
mov
sbb
sbb
loope
and
rorb
mov
jb
aaa
xor
ret
popa
in
sub
dec
roll
add
fisubl
out
mov
dec
xor
mov
aam
sarb
cwtl
repnz
lahf
add
insb
arpl
sbb
push
push
incb
inc
mov
push
repnz
test
es
pop
outsb
popf
sbb
ror
out
mov
das
in
add
orl
sub
add
les
xchg
lahf
xchg
ret
add
cmpsl
jecxz
add
sub
xor
xlat
ret
iret
popl
repz
adc
shll
enter
cmp
ret
loopne
cld
nop
ss
add
sbb
sbb
into
mov
andl
ja
mov
mov
out
fildll
cmp
jo
inc
sbb
xor
jb
xchg
repnz
sbb
cs
mov
add
xchg
pop
mov
insl
add
mov
insl
push
push
cmp
ret
lahf
fistps
sbb
add
sahf
cld
pop
and
out
push
add
fmul
add
fisubrl
rcrl
idivb
xor
lcall
jp
xchg
lods
insl
fists
in
add
cmp
call
dec
mov
inc
fwait
add
fbstp
inc
cltd
frstor
jl
add
iret
out
fmuls
or
pop
mov
or
out
xorps
adc
test
inc
fmul
cmp
pop
push
dec
add
cmp
fldl
ss
jae
enter
add
inc
lcall
jmp
push
into
pop
sbb
push
imul
lcall
push
jmp
sahf
add
push
lret
xchg
dec
mov
icebp
lock
andl
clc
adc
push
mov
ret
dec
sbb
push
sbb
xor
movsl
sbb
mov
ret
push
adc
sub
xchg
pop
sbb
and
dec
outsl
and
jecxz
out
lea
mov
pop
jns
push
pop
test
mov
push
subb
add
dec
subb
bnd
jecxz
and
call
inc
sub
add
add
shll
dec
inc
iret
dec
push
jnp
icebp
inc
pop
push
sbb
shl
pusha
sub
push
adc
inc
lcall
mov
add
dec
cli
aaa
es
daa
add
xchg
fcoms
push
mov
loopne
ja
inc
mov
outsb
loopne
popl
add
xor
aaa
mov
sbb
js
add
outsb
xchg
sub
lahf
iret
cli
add
dec
and
xchg
push
mov
fldt
inc
pushf
mov
data16
divb
adc
xor
scas
cmc
add
int
jle
cmpb
or
add
mov
and
loopne
sub
jbe
shlb
out
int
stos
dec
jecxz
je
pusha
or
mov
push
xor
loope
aad
mov
jg
add
and
cbtw
xchg
roll
adc
mov
popf
cmpsl
add
push
mov
sub
jno
fisubrs
adc
rcrl
xor
mov
repz
cwtl
jecxz
sbbl
dec
rcrb
add
inc
mov
ret
test
mov
idivl
mov
dec
inc
add
arpl
inc
dec
xor
pop
push
pop
cmpsl
add
xchg
or
lcall
pop
jecxz
ljmp
sbb
pop
lahf
sbb
roll
scas
mov
addr16
mov
inc
stc
cld
cltd
add
sbb
and
mov
pusha
outsb
imul
adc
nop
call
push
mov
sbb
loopne
outsl
lea
repnz
or
out
sub
mov
add
push
xor
dec
ret
mov
xor
call
stc
ljmp
sub
mov
pop
adc
rorl
orl
mov
lock
or
insb
out
jecxz
shlb
push
roll
jge
jnp
and
test
adc
mov
sbb
mov
gs
xor
jns
mov
and
cmp
stc
rorl
sbb
lea
dec
lock
jns
add
push
jl
pop
xchg
ja
mov
loopne
mov
sub
data16
xor
push
jge
cmc
in
out
ffreep
xchg
inc
add
dec
lods
pop
imul
aaa
loopne
cli
push
lds
notl
push
sahf
arpl
shll
pop
nop
or
add
sub
cld
add
push
mov
cmpsl
jno
adc
cmc
add
cltd
add
jo
and
add
xchg
mov
cmp
mov
sub
cmpb
push
add
and
fisubrs
jo
and
jl
jge
or
sahf
dec
jb
jbe
movsb
loope
inc
ret
inc
add
daa
and
sub
push
mov
in
sbb
stos
icebp
push
jo
and
fmull
add
inc
dec
pusha
or
mov
js
push
pop
push
and
add
jbe
xor
xchg
add
sbb
push
and
cmp
aaa
add
popf
inc
stos
iret
mov
push
adc
add
cli
cmp
jne
test
mov
fisubrs
fmull
std
xor
aam
flds
out
jge
lods
xor
add
push
ss
bound
push
mov
aaa
test
fcom
es
jb
mov
jecxz
mov
inc
fucomip
sbb
sub
push
aas
add
mov
xor
jmp
dec
sbb
pop
add
imul
outsb
mov
sbb
xchg
jo
xchg
fs
mov
add
jle
xchg
adc
test
mov
cmp
jae
jecxz
jo
insl
sbb
inc
insb
and
fwait
imul
subl
jecxz
push
push
iret
mov
daa
jno
xor
enter
jo
cmpsb
insb
ja
fsubl
out
cmp
lcall
js
inc
movsb
lfs
aam
jno
mov
ret
cmp
xchg
sbb
scas
add
inc
je
pop
cmc
mov
add
mov
push
int3
sar
in
xor
push
fisttpl
pop
xchg
add
add
jno
ffree
out
adcb
push
scas
sub
mov
lahf
test
xor
shr
mov
cli
push
dec
fildll
clc
sub
or
sahf
xchg
imul
and
testb
cld
ss
arpl
add
sti
push
or
inc
xchg
mov
lret
sahf
ret
adc
sbb
loopne
fsubrs
cmpsl
mov
pop
add
inc
dec
add
repnz
add
push
daa
enter
loopne
jo
mov
push
out
xchg
int3
add
jae
add
pop
dec
dec
sbb
mov
mov
pop
std
or
lods
add
fcmove
in
in
popa
ret
mov
or
fisttpll
test
add
cmp
jae
hlt
mov
dec
adc
adcl
mov
mov
dec
xor
push
mov
jecxz
add
adc
out
mov
fwait
push
push
data16
loopne
stc
addl
aam
add
push
dec
sub
add
cli
lods
or
mov
mov
add
cmp
loop
pop
jno
jecxz
dec
mov
fists
sub
call
ja
pop
jg
mov
sub
testl
adc
pop
add
int
dec
xor
inc
add
jns
add
add
jno
mov
inc
inc
jecxz
jnp
mov
add
dec
scas
push
add
jle
aaa
loopne
push
xchg
lock
rorb
imulb
insb
push
mov
dec
mov
popf
and
or
insl
fwait
jo
or
jecxz
int
xchg
test
sbb
sub
cmc
pop
add
cwtl
rclb
lahf
fcmovnb
sub
mov
add
xor
or
xlat
adc
and
and
stc
push
xor
dec
sbb
js
fadd
add
mov
cmp
adc
mov
pop
cmc
je
add
jns
mov
inc
xor
add
adc
int
ret
insb
cmp
push
in
add
ss
sbb
out
in
and
jp
rcl
push
add
test
jnp
ficoms
fxtract
rsqrtps
sub
repz
or
cli
into
inc
out
sbb
jne
or
push
pop
mov
sub
rclb
adc
data16
test
adc
lock
pop
and
cmp
cld
das
std
inc
popa
ja
pop
mov
dec
out
das
clc
fstpl
aad
stos
xchg
or
mov
enter
add
imul
or
out
inc
outsb
cltd
std
add
repz
push
sub
add
fcomip
pop
add
pop
push
fildl
in
push
cmp
and
fwait
das
sti
cmp
cmp
mov
ljmp
popf
jle
lds
lock
push
adc
add
xor
fidivrs
jnp
loope
sub
dec
or
ja
ret
out
inc
inc
add
xor
fs
mov
mov
sub
nop
and
daa
xchg
movsl
cltd
jb
dec
insl
stc
and
test
mov
add
sbb
lahf
xor
cmc
add
xchg
je
adc
loope
loop
shrl
sub
xchg
xchg
xor
add
dec
pop
ljmp
mov
push
test
dec
pop
pusha
add
idivb
fwait
add
and
roll
inc
push
je
mov
nop
dec
in
adc
and
andl
add
fcmovbe
filds
out
fcmovnbe
adc
push
xchg
popf
add
sbb
mov
xchg
ljmp
iret
jo
add
in
ds
sti
add
pushf
lods
js
lods
mov
sub
pop
loopne
pop
xchg
imul
movsl
popf
sbb
add
fdivl
xchg
loop
out
add
mov
mov
mov
pop
mov
test
add
jno
and
lea
lds
jns
pop
add
ret
add
sahf
mov
shld
push
inc
mov
filds
ret
adc
jb
dec
cmc
xor
mov
jmp
cmp
fdivp
inc
push
push
jns
pop
inc
mov
fldl
ret
jle
sub
cmp
clc
jecxz
je
dec
add
inc
out
sti
jle
and
dec
leave
out
mov
mov
pop
push
fs
sub
popa
xor
mov
push
cltd
popf
or
cs
mov
mov
sbb
push
add
scas
dec
push
insb
xor
add
cmc
or
mov
call
or
xchg
sbb
rcl
aad
cmp
stos
or
ret
xor
test
and
xor
add
push
and
pop
ljmp
scas
adcb
jbe
xor
sar
icebp
stos
push
out
add
mov
and
lods
movsb
out
cltd
adc
mov
add
push
xchg
dec
xchg
inc
iret
add
fwait
repz
arpl
add
out
xor
cmpsb
addl
sub
fisubl
jnp
push
mov
jmp
js
std
gs
pop
xchg
add
mov
add
cmp
cmpb
in
and
adc
dec
scas
mov
add
cmp
sbb
jnp
cs
mov
and
jbe
inc
add
ret
push
sbb
fldenv
js
push
push
push
sbb
addb
lods
jno
pop
inc
inc
testl
pop
gs
xor
add
icebp
mov
or
sar
hlt
into
add
and
fisttpl
lret
out
and
insl
cwtl
testl
and
adc
jmp
and
pop
xchg
add
insb
cmp
add
mov
lret
pop
add
mov
insl
and
scas
std
shlb
lcall
add
and
jecxz
stos
adc
lods
notl
in
imul
add
xor
mov
test
inc
incl
shl
and
dec
mov
sbb
adc
sub
ds
push
iret
std
add
pusha
xchg
adc
fcmovnu
mov
adcl
lcall
or
mov
int
add
nop
insl
pop
push
jo
test
pop
in
jl
test
add
push
pop
inc
in
lods
jmp
fcompl
testl
call
ds
sub
aam
sbb
or
ret
loope
pop
js
push
cltd
xor
mov
jo
or
popf
mov
mov
mov
jne
pop
es
leave
repnz
in
and
dec
int3
or
jbe
pop
mov
mov
leave
jmp
iret
add
push
cmp
or
inc
add
bound
les
add
push
or
out
sahf
enter
pop
and
adc
add
call
jne
push
movsl
and
lds
cmp
shl
dec
fsubs
cmc
fnstcw
and
dec
mov
sarl
add
xor
xor
pusha
cmp
lea
out
ds
mov
lret
jo
adc
add
xor
popa
fsubs
loopne
mov
mov
inc
adc
daa
lcall
in
mov
outsb
xor
in
enter
xlat
mov
and
mov
jle
mov
and
cmp
xor
gs
shrb
mov
mov
mov
lahf
loopne
and
sbb
adc
xchg
or
cwtl
adcb
add
sbb
pop
repz
pop
jne
fstl
cmpsl
sub
push
xchg
dec
mov
orb
and
sbb
add
and
add
iret
in
lret
cld
rcrl
jecxz
cmpb
adc
push
add
stos
xchg
dec
push
das
out
pusha
pushf
popf
arpl
pusha
cmpsb
pop
pop
dec
aaa
add
aad
cmp
sub
rcl
add
jns
add
mov
push
lods
jmp
add
outsb
int3
stos
scas
jle
jno
pop
adc
jne
mov
loopne
pop
cmpsb
cmp
or
roll
push
xor
leave
mov
or
add
jmp
shlb
mov
leave
lea
icebp
or
add
fndisi(8087
mov
xchg
adc
add
push
jl
add
ja
mov
test
mov
shll
sahf
fistpll
and
outsb
sbb
lret
pusha
add
lds
push
out
lea
sbb
pop
outsb
jnp
push
mov
imul
mov
je
aaa
mov
add
dec
pop
dec
or
add
push
out
xchg
xchg
arpl
or
sub
mov
popa
adc
mov
push
clc
inc
test
mov
xchg
mov
shlb
iret
add
xor
push
fmul
xlat
or
add
fidivrs
cmpsb
cld
inc
pusha
loope
andb
push
ret
call
or
imul
mov
sbb
loopne
shl
movsl
addr16
jns
das
add
pop
pop
testl
inc
fstpl
fwait
je
sub
adc
sbb
aam
das
add
dec
pushf
mov
and
push
cmpsl
fwait
add
addr16
mov
pop
sub
mov
xchg
add
adc
ss
add
aaa
les
add
movsb
jge
in
addb
ljmp
add
sbb
mov
pop
push
push
sti
pusha
pop
cmp
std
cmpsb
test
adc
xchg
add
pusha
add
aas
fildll
mov
subb
and
aam
xlat
dec
and
scas
and
fstpt
or
dec
insl
jle
jecxz
jp
add
stos
and
sub
fdivrl
cmp
pop
loopne
stos
decl
inc
push
xor
add
xor
je
jae
lret
outsl
std
xchg
add
xchg
dec
mov
cmp
xor
sub
int
out
rcr
add
hlt
pop
pusha
insl
imul
xchg
pop
xchg
daa
sub
sbb
mov
into
fisttpl
daa
mov
pop
mov
aas
push
dec
pop
data16
push
add
dec
mov
jle
inc
dec
in
fisubl
inc
clc
decl
add
loope
iret
icebp
add
or
jns
pop
xor
and
fisttps
jg
adc
test
mov
xor
int3
jne
lock
mov
fwait
xchg
sub
into
inc
insl
sbb
sbb
loope
fs
andl
adc
jns
mov
sub
push
inc
in
and
mov
push
add
xchg
inc
shrl
cmpsb
js
sub
sub
lret
aam
push
les
mov
pop
insb
add
iret
gs
into
mov
nop
xor
cli
sub
je
mov
lcall
jl
pop
shl
int
dec
mov
add
and
mov
sbb
mov
xor
or
add
xchg
add
push
cmp
in
sub
add
adc
push
loopne
sub
mov
xchg
mov
outsb
std
inc
push
out
cs
loope
dec
jno
adc
lods
sbb
sahf
mov
lcall
sbb
mov
sahf
mov
mov
out
mov
push
rep
jo
and
jp
cltd
and
test
sbb
xor
cmc
add
jmp
dec
lods
add
and
pop
jle
and
nop
cmc
ds
aam
ret
add
sbb
int
lods
ret
xor
out
pop
push
add
cs
scas
pop
add
pop
mov
jne
or
add
xor
jl
icebp
or
mov
xchg
push
popa
out
pop
jmp
and
sbb
popf
mov
add
mov
inc
sub
dec
call
loope
dec
add
adc
add
movl
add
add
xor
or
cmp
lock
pop
fldl
add
sbb
pop
push
rcrb
mov
cwtl
pop
add
xor
in
sti
inc
mov
addl
imul
add
jo
push
hlt
push
sbb
add
xchg
add
iret
rorb
sbbl
stos
imull
adc
imul
mov
addr16
int
inc
cmp
cwtl
inc
adc
sbb
ss
lret
and
shll
jmp
fst
mov
sbb
test
mov
stos
mov
add
inc
mov
add
jge
not
sbb
clc
add
push
cmc
push
cmpsl
add
cmpb
in
pop
pop
or
jo
push
jecxz
stc
incb
add
pop
sbb
clc
mov
and
cmp
pushf
push
sbb
sarb
lea
and
and
add
xchg
add
ja
add
loopne
cmc
xchg
mov
dec
xchg
dec
or
dec
fwait
ja
dec
insb
rcrl
insl
mov
cmpsb
aam
ret
loopne
sbb
roll
imul
or
rorb
add
mov
xchg
mov
xchg
add
int3
mov
pop
test
jbe
mov
add
rcll
add
add
out
into
jl
stos
icebp
cld
std
incl
ss
cmp
popa
xchg
jecxz
in
ret
inc
mov
add
aaa
rclb
sarl
add
push
pop
stos
insl
jnp
add
shlb
mov
add
test
fistpll
fsubrs
in
cmp
mov
inc
out
shlb
js
fucomi
adc
fwait
addr16
es
add
cmp
stos
sahf
add
inc
add
lret
add
pusha
imul
xorl
and
or
jp
lock
sub
cmp
stc
or
fsub
xor
es
pop
sub
cli
lcall
add
enter
test
add
rclb
add
outsb
sbb
add
cs
inc
in
fsubp
pusha
mov
and
stos
mul
add
or
aad
pop
pusha
addr16
stc
sbb
inc
imul
mov
dec
repz
add
mov
stc
inc
push
mov
fwait
mov
nop
add
push
xor
ljmp
jp
cmp
movb
xchg
scas
or
add
lock
ret
or
push
mov
add
xchg
xchg
orb
add
mov
or
push
sbb
xchg
lea
popf
inc
adc
out
cmp
mov
jmp
and
lds
mov
adc
sbb
fstps
add
add
cmp
roll
out
or
add
pop
or
dec
jne
loopne
mov
cmp
xor
add
xor
jge
add
add
js
push
inc
aas
sahf
and
inc
aad
add
cltd
mov
and
hlt
jne
mov
ret
sbb
or
bound
pusha
mov
cmp
lahf
sbb
add
je
or
add
adc
sbb
add
ja
jnp
adc
lds
mov
or
add
pop
adc
mov
push
mov
sbb
dec
mov
sbb
push
add
imul
test
in
or
cmp
cmpsl
rclb
in
sbb
add
xchg
sub
sub
mov
sbb
fildl
or
pop
cmpsl
mov
scas
adc
clc
jle
adc
in
cmp
cmpl
pop
add
cli
lret
mov
leave
pusha
fcmovb
aad
in
add
xor
in
inc
outsl
add
inc
pop
daa
push
ficoml
insl
lea
inc
push
out
lcall
xchg
mov
jle
fs
loope
cld
rorl
int
mov
nop
repz
dec
stc
add
mov
cmc
add
subb
mov
add
pop
loop
add
inc
ror
sar
aam
add
mov
ss
loop
inc
or
mov
xor
mov
and
scas
sub
sarl
aad
jno
loop
loopne
loope
jmp
dec
mov
insl
enter
add
xor
adc
pop
push
or
daa
bound
jmp
orl
or
mov
and
jns
add
addr16
out
into
jge
fnsave
fsts
mov
jns
pop
mov
into
sub
fwait
stos
insb
aas
scas
add
inc
push
adc
add
cmp
jle
aam
add
gs
fcomip
js
sahf
pusha
mov
fnstenv
pop
es
or
add
out
mov
enter
jmp
or
cmpsb
or
xor
lods
mov
cmp
mov
dec
scas
imul
sbb
adc
mov
into
sti
push
sbbb
inc
inc
rcrl
and
outsb
xchg
push
leave
jno
popf
int
lahf
fsubrs
int3
and
jnp
or
mov
add
aaa
icebp
out
or
add
add
loope
subl
add
and
pop
loope
mov
ja
push
loope,pn
xor
jb
xchg
cmpl
or
lock
rcrb
and
xchg
sbb
int
sbb
icebp
add
xor
add
test
into
push
lods
or
add
fcmovnb
mov
imul
cmp
dec
push
sbb
add
fcomip
mov
mov
ret
mov
scas
ds
xchg
jo
daa
add
imul
ret
outsb
mov
cmp
dec
into
rcr
push
push
add
adc
push
add
mov
orl
mov
or
filds
fisttpl
aas
push
inc
add
or
ljmp
adc
rolb
add
loopne
mov
fs
add
cld
movsb
or
mov
sbb
jno
sub
js
add
mov
lods
sub
cmpsl
stc
ret
xor
arpl
xchg
pop
sbb
addb
out
mov
movsl
shl
add
add
adc
and
push
or
sarl
mov
pop
fimuls
adc
in
cli
cmc
ja
sbb
scas
cltd
jecxz
mov
cmpsl
out
pop
loope
sbb
jmp
or
popa
sbb
mov
or
rcrl
movsb
scas
jo
fcmovbe
ror
cmp
addr16
clc
xlat
mov
jmp
add
add
pop
test
pop
fidivrs
out
ljmp
addr16
data16
sub
pusha
add
sbb
fildll
cmp
push
into
imul
fwait
jo
adc
cmpsl
cmp
adc
pop
xor
int3
mov
scas
and
adc
push
popf
in
cltd
repnz
es
or
loopne
nop
inc
inc
push
or
popa
push
flds
test
adc
lcall
fnsave
push
call
pushf
mov
sbb
jb
out
rolb
in
mov
sbb
push
add
icebp
movsl
dec
add
jae
adc
add
jbe
push
ret
pop
and
loope
adc
outsb
mov
jno
dec
lcall
iret
cmp
ficoms
lret
mov
jg
adc
inc
das
popa
mov
rcrb
fdivrl
loopne
int3
dec
sub
hlt
cs
add
add
jb
fstpt
pusha
shrl
sbb
lds
pop
or
sarb
inc
outsl
jmp
repz
push
test
jge
add
mov
and
pop
subl
add
loopne
cs
orb
jb
in
mov
dec
push
mov
jg
jbe
add
insl
mov
loope
cmp
dec
imul
jne
xor
add
mov
popf
dec
xchg
pop
ret
and
call
into
cmp
add
andb
loope
hlt
fdiv
mov
push
mov
adc
mov
sbb
and
repz
adcb
cs
sbb
dec
loopne
cmpsb
enter
mov
inc
aam
mov
xor
add
xchg
inc
lahf
jmp
lret
jle
jne
push
xor
stc
lahf
push
mov
adc
pop
mov
ss
mov
rcrl
and
adcb
js
popa
cli
stos
pushf
nop
xor
dec
test
pop
xchg
aas
xchg
push
lahf
stos
mov
adcl
push
adc
cmc
add
jge
je
sbbl
add
movsl
pop
enter
popa
dec
and
mov
fcoms
nop
inc
test
incb
or
add
push
stc
xor
arpl
out
and
stos
dec
xlat
sub
sbb
mov
add
rcr
push
sbbl
fcmovb
std
je
lret
cmp
jl
push
add
mov
inc
or
or
push
repnz
push
adc
test
pusha
jne
mov
xlat
mov
add
cmp
arpl
pushf
lods
pop
and
push
inc
xor
lea
loop
sarl
add
pop
cs
mov
test
adc
cmp
add
lods
jae
jg
cli
cmpsl
push
mov
xchg
out
sub
sbb
ljmp
mov
inc
push
arpl
dec
rep
loope
roll
xchg
gs
clc
mov
rolb
sub
cmpsl
lea
into
push
ljmp
add
push
and
shlb
cmp
push
xchg
mov
bound
shlb
xchg
add
cli
add
jno
mov
xchg
inc
addb
jmp
xor
add
addl
jge
xor
adc
add
lea
mov
testb
add
movsb
jle
sbbl
lods
lds
mov
sbb
fst
add
xor
imul
add
call
mov
xor
sti
aaa
mov
adc
rcr
jnp
or
loope
aas
xchg
dec
sbb
jl
or
lret
mov
cmp
iret
pop
daa
ja
push
fcomps
dec
mov
add
ljmp
adc
rorb
add
mov
jae
pop
xchg
ret
cmp
mov
mov
sbbl
xor
repnz
lcall
call
pop
add
aas
sbb
aaa
push
or
and
inc
sub
push
mov
add
pop
dec
push
movsb
dec
iret
test
into
and
pusha
repz
inc
test
sbb
dec
mov
es
jp
add
inc
shrb
je
aas
and
cmc
dec
push
add
push
add
outsb
add
inc
mov
add
sbb
hlt
or
sbb
popf
xchg
mov
test
cmp
inc
mov
lods
test
rorb
xchg
sbb
mov
in
jmp
or
or
out
lods
push
inc
lock
inc
fisttpll
or
jns
pop
add
jae
jbe
test
jnp
inc
sti
xchg
and
fsubr
mov
sub
loopne
inc
mov
xor
add
mov
xchg
mov
dec
sbb
mov
repz
negb
adc
lret
and
add
mov
pushf
cmpsl
stos
inc
adc
pop
inc
or
int
or
loopne
cs
inc
dec
fstpl
in
movsl
xchg
pop
fldenv
add
inc
sarb
data16
jmp
aaa
mov
add
cltd
inc
inc
inc
cmpsb
pop
xor
mov
and
pop
out
in
mov
out
mov
lahf
adc
popa
rcr
mov
jecxz
cwtl
jnp
dec
jecxz
fcmovbe
jmp
or
bound
aam
sub
adc
outsb
xchg
adc
push
ret
jmp
test
in
inc
fbld
add
pop
push
ja
add
adc
stc
insb
mov
mov
mov
sbb
pop
xchg
cwtl
jno
mov
repnz
std
sbb
pop
scas
add
int
sub
iret
outsb
test
movsl
xor
fs
and
and
shlb
push
mov
add
and
rcr
jg
cmp
aam
xor
pop
popf
sub
data16
aas
push
sbb
aam
cmpsb
jmp
xchg
lods
cwtl
icebp
sbb
pop
add
dec
push
ja
pop
gs
call
aas
scas
pushf
or
lcall
add
das
shl
inc
xor
add
pop
add
xorl
stc
add
pop
repz
mov
add
es
stos
jb
mov
cmp
lret
sbb
leave
aam
nop
add
lcall
push
subb
xor
add
lds
outsb
mov
push
mov
popf
lock
daa
lret
sub
mov
push
pop
add
mov
leave
add
or
fucomip
adc
iret
addl
xchg
icebp
cmpb
daa
add
leave
pusha
js
inc
cwtl
and
add
mov
xchg
pop
jecxz
loope
pusha
push
mov
xor
jmp
pusha
iret
pop
xor
xor
add
mov
and
ds
pusha
or
sub
push
mov
inc
test
sbb
jnp
inc
mov
arpl
add
pusha
imul
inc
sbb
decl
push
add
adc
or
add
addl
add
test
add
ljmp
pop
add
stos
mov
mov
cltd
mov
and
in
and
sbb
add
loope
pop
mov
test
add
inc
jnp
fsubrl
pop
std
fs
xchg
nop
ja
adc
in
cmp
xor
jo
xchg
out
add
pop
out
mov
cwtl
or
outsl
rcr
das
jle
and
sahf
xchg
xor
arpl
add
lock
mov
push
pop
adc
mov
sahf
stc
add
pop
cmp
dec
shrl
pop
adc
sub
add
ret
mov
xor
pop
inc
pop
shll
fdivr
movsl
xchg
dec
data16
adc
mov
xchg
out
bound
adc
xchg
shlb
cmc
movsb
pusha
loop
push
aam
mov
add
fadds
sub
add
ja
xor
cmpsb
scas
sub
insb
add
jo
or
mov
aam
add
ret
xchg
repnz
stos
sarl
loope
ljmp
mov
adcl
lret
fisubl
popf
lcall
sbb
push
adc
add
push
ficompl
dec
fwait
pop
aam
fldenv
dec
ret
jp
cwtl
cmc
pop
fdivs
sub
sbb
inc
das
push
add
inc
mov
push
xor
adc
add
cli
lcall
xchg
adc
out
popa
jns
mov
mov
repz
add
mov
pushf
xlat
mov
add
adc
or
jp
add
cmp
inc
pusha
push
cmp
mov
sub
mov
mov
add
test
pop
arpl
add
outsb
bound
and
pushf
les
negl
push
call
mov
adc
into
add
xchg
mov
pusha
je
push
outsl
adc
insl
bound
imul
ja
movsb
daa
hlt
inc
lahf
popa
add
cmp
add
xor
test
mov
jmp
jg
dec
jmp
test
outsb
clc
sahf
mov
dec
xchg
aad
repz
cmp
insb
fistpll
add
sub
sub
jo
fsubs
aad
inc
push
fwait
push
popf
mov
and
sarb
scas
roll
push
pop
jecxz
add
and
sahf
add
cmp
flds
testb
or
loopne
and
lock
adc
jl
call
xchg
add
lds
lret
and
pushf
add
push
das
into
add
mov
and
dec
nop
add
xor
ret
pop
in
incb
imul
or
cmpsl
add
mov
sarl
int
dec
idivl
cmpsb
out
cmc
adc
aas
outsb
xchg
in
add
push
cmp
ss
adc
add
aas
and
xlat
fists
testl
mov
jp
aas
pop
mov
add
xchg
enter
jle
and
xchg
outsl
sti
jmp
sbb
out
clc
rcll
inc
popa
mov
aas
out
pop
lods
add
iret
sub
cmpsb
add
icebp
add
mov
dec
mov
dec
out
cmp
mov
cmp
orb
fbld
comiss
xchg
add
cwtl
jb
lret
cmp
mov
lds
jl
mov
add
sub
orb
and
in
loope
add
pop
fdivs
jg
mul
addr16
rorl
pusha
jae
sub
sub
and
mov
cmp
jp
xor
data16
xchg
or
and
or
lds
push
push
dec
aam
dec
jecxz
xor
rcrb
fs
or
mov
jge
cltd
jmp
lods
scas
jnp
and
add
xchg
mov
cltd
das
jbe
scas
adc
test
ja
add
sbb
or
mov
add
daa
and
out
xchg
push
ret
sbb
das
iret
sub
mov
std
mov
sub
cmp
pop
add
cld
call
stos
add
mov
cmc
sub
sub
mov
sarb
adc
cmp
aad
addr16
sbb
shr
ret
pop
scas
int3
and
fistpl
jns
mov
mov
cli
pop
cmpsl
add
xlat
jmp
cmp
rorl
shl
sbb
jge
mov
iret
out
lahf
movb
cmp
lods
jecxz
pop
or
sub
jg
mov
bound
cld
addb
or
pop
shll
mov
xlat
int3
sbb
out
inc
test
shrl
and
sub
cltd
mov
add
jnp
sub
aaa
cs
enter
cmp
mov
jge
mov
push
jno
and
xor
jns
or
adc
push
ret
xor
cmp
pop
and
subb
jl
and
lahf
dec
pop
add
mov
sub
cs
xlat
mov
cmp
jae
imul
cmp
xor
rcrl
adc
roll
les
lcall
cmpsl
ud1
pop
inc
inc
insl
notl
pop
in
adc
sahf
enter
push
sub
mov
add
aas
pusha
dec
mov
add
mov
add
call
fildll
ret
add
mov
sbb
add
incl
jns
or
add
das
cmp
lock
test
fbstp
dec
rcr
add
xchg
mov
mov
inc
push
aas
pusha
dec
loop
xchg
push
mov
dec
or
repz
add
and
repnz
jecxz
test
add
stc
xor
and
mov
sbb
test
mov
mov
lahf
iret
rclb
inc
xor
push
mov
mov
mov
sub
dec
sahf
add
hlt
daa
inc
adc
xchg
sarl
f2xm1
leave
mov
shrl
cmpsl
int3
xchg
add
test
je
pop
cmp
dec
cwtl
or
and
out
adc
push
jne
inc
pop
inc
add
mov
fwait
jbe
and
mov
out
sti
sub
add
aaa
add
lcall
sbb
pop
add
sbb
movsl
or
jmp
popf
in
movsb
inc
sbb
imul
test
testl
and
sbb
mov
cmp
xchg
xchg
testb
repz
pushf
push
loopne
adc
mov
scas
or
jae
add
lret
cmp
out
testb
push
mov
sub
add
add
cld
mov
icebp
incl
fcompl
pusha
adc
scas
pop
push
adc
repz
jmp
add
inc
xchg
loope
add
in
hlt
or
jecxz
mov
adc
xchg
lahf
inc
shrl
dec
dec
or
test
jne
fists
inc
stos
loope
add
inc
adc
nop
faddp
and
pop
push
popf
movsb
in
inc
cmc
mov
or
jl
das
mov
or
pop
mov
xchg
and
add
ret
add
rep
pushf
lea
fsubrl
out
push
sarb
dec
loop
arpl
test
test
cltd
and
sbb
xor
adc
push
add
mov
stos
in
test
lods
and
ret
add
in
pusha
pop
movsb
add
lahf
rcll
fwait
cmp
pop
add
in
lea
pusha
cmp
add
gs
jbe
stc
scas
ret
inc
pop
or
xchg
stos
ds
daa
movsl
mov
data16
xor
or
xchg
pop
push
add
fimuls
and
push
out
rol
repz
loopne
popf
sbbb
pop
sbb
xlat
inc
xchg
cli
jnp
pop
adc
push
pop
ret
xchg
gs
add
aad
iret
add
int3
jno
cmpsl
sbb
jne
stos
cli
adc
pop
ret
cmpb
data16
push
les
call
icebp
out
sub
sbb
leave
movsb
jae
cli
add
or
xor
imul
outsl
sbb
test
les
test
lahf
loopne
cltd
or
pusha
add
mov
scas
loopne
mov
ja
mov
xchg
pushf
insb
jge
rolb
mov
or
mov
mov
or
roll
xor
rcl
scas
mov
mov
add
pop
inc
push
inc
loop
push
add
faddp
icebp
mov
add
cmp
push
jae
pop
lods
shlb
xchg
jp
adc
loop
add
push
jae
fwait
push
es
out
and
add
xor
add
je
xor
jne
push
and
inc
rolb
xor
cwtl
mov
xor
out
or
mov
dec
sbb
or
cmc
dec
mov
xchg
pusha
out
jno
jbe
adc
and
adc
sbb
fs
jb
movsb
ret
fcoms
mov
pushf
in
pop
jecxz
jmp
inc
pop
pop
push
add
cmpsl
jl
ficoms
or
jmp
nop
xor
and
add
sbb
enter
loopne
andl
inc
aad
or
aam
or
xchg
add
sub
adc
repz
and
jp
push
pop
adcl
pusha
jmp
inc
jb
lods
xlat
add
adc
mov
loop
inc
je
push
sbb
add
or
sub
sbb
pusha
or
pop
add
and
adc
cld
and
or
data16
push
pop
mov
fs
or
test
into
pop
pusha
cmpl
js
into
sbb
add
xchg
out
mov
mov
sbb
push
sbb
cmpl
shr
cwtl
insl
and
adc
or
sahf
xchg
and
aaa
in
mov
cmp
pushf
inc
add
mov
lods
or
ljmp
push
popa
add
sbb
and
loopne
cmp
jle
push
filds
add
imul
aad
push
fldenv
insb
fimull
cmp
mov
fmull
notl
adc
sub
pop
loope
lcall
scas
les
shrb
add
add
in
fs
mov
mov
sbb
js
xor
xor
push
aas
cwtl
and
mov
add
mov
es
shlb
movsb
and
jb
inc
fistps
mov
xor
jmp
popl
push
add
or
push
add
xchg
in
arpl
lock
inc
cmp
lods
add
dec
xchg
sbb
mov
flds
push
lcall
ret
pushf
int3
or
xor
mov
jbe
mov
cmp
xchg
pusha
mov
loop
movsl
daa
lea
mov
frndint
scas
push
xchg
ficomps
adc
loop
sub
out
mov
adc
pop
add
lahf
pop
mov
repz
aam
stos
push
push
add
ret
sub
mov
cltd
sbb
lea
fnstcw
and
inc
pop
into
ret
jo
mov
adc
dec
xchg
add
cltd
rcll
pusha
add
jo
int3
shlb
add
cmp
sbb
jne
cs
add
pop
inc
loope
mov
mov
out
test
pop
out
daa
pop
sbb
test
mov
fwait
mov
jno
push
pop
xchg
add
es
loope
xlat
sahf
sbb
mov
add
lret
ja
fldl
imul
aas
add
movsl
lock
aad
ds
or
iret
mov
xchg
div
jp
scas
or
jmp
lahf
and
popa
add
inc
mov
sub
inc
adc
outsb
xor
mov
add
sub
in
push
outsl
cld
shrl
add
add
or
mov
cmpsl
xchg
roll
sbb
nop
cmp
xor
jmp
and
repnz
mov
mov
repz
js
inc
mov
pop
or
mov
pop
adc
mov
cmp
and
and
pop
mov
jbe
rorl
popa
outsl
loopne
mov
cli
mov
sub
mov
jmp
outsl
movsb
or
dec
shlb
test
sbb
out
pop
add
mov
test
sub
addr16
mov
adcl
insl
xchg
scas
out
inc
xor
xchg
mov
add
adcb
imul
pop
pop
enter
lahf
dec
push
flds
fiadds
add
pop
or
add
ret
xchg
lcall
out
fmuls
add
in
add
in
sbb
ljmp
scas
mov
pop
mov
inc
add
cmpsl
and
fs
mov
dec
fnstenv
mov
loopne
data16
or
inc
loopne
add
test
lea
jb
nop
add
sub
cmp
sbb
xlat
cwtl
push
insl
sahf
fwait
push
pusha
add
jle
push
pusha
daa
cmp
cltd
out
inc
push
sub
xchg
clc
mov
cmpsb
pop
into
add
jo
xchg
adc
push
pop
push
fs
xor
sub
pop
ret
inc
loopne
sub
mov
inc
repz
scas
fdivr
lds
sub
xchg
fidivrl
push
or
call
or
push
add
ret
pop
cs
push
js
rcrb
adc
in
or
mov
xor
and
dec
mov
nop
add
cmpsl
fstpt
sahf
imul
ja
adc
pop
lods
mov
fadds
shrb
push
je
xchg
jle
mov
outsl
sub
cmpsl
xchg
add
ret
inc
gs
mov
orl
adc
cld
loopne
repnz
cwtl
jne
mov
leave
and
mov
add
lea
add
mov
shrb
test
loopne
loop
push
add
dec
sbb
mov
icebp
js
mov
sbb
not
out
ds
into
cmp
cmpsl
add
adc
xchg
mov
roll
scas
in
leave
dec
push
mov
mov
mov
icebp
add
jbe
xor
ss
mov
call
inc
popa
or
and
push
cltd
jbe
xor
add
outsb
insl
xchg
sar
sub
add
or
push
call
inc
mov
xor
movsl
lcall
ret
out
pusha
cmp
sbb
dec
adc
xor
sub
fs
rcrl
es
and
jecxz
add
ljmp
scas
xchg
dec
add
add
xor
mov
add
mov
test
xchg
mov
out
ja
les
mov
add
jmp
cld
inc
addr16
xchg
sbb
in
add
add
pop
arpl
add
out
mov
mov
sbb
insb
pop
add
dec
mov
loopne
loope
and
sbb
mov
loopne
cld
add
outsb
jp
loopne
xchg
dec
fists
test
aaa
fsubp
jmp
ret
sarl
adc
stos
push
mov
add
iret
inc
push
mov
dec
mov
xor
fcomp
add
push
lcall
rorl
mov
or
loopne
scas
loope
adc
aas
addl
aad
pushf
dec
call
roll
mov
add
xchg
cltd
push
cmpsl
cwtl
outsb
xor
and
or
dec
push
jno
mov
ljmp
pusha
xor
adc
add
jno
ja
add
lock
gs
imul
insl
or
stos
mov
bnd
push
mov
mov
in
mov
jp
mov
ds
loope
sbb
iret
adc
cmp
or
inc
lods
cmpb
fiaddl
and
sub
sub
lret
add
cld
stos
sub
adcl
addb
push
cmp
xor
lret
pop
pop
daa
scas
lods
push
mov
xor
aaa
inc
out
jae
sar
ja
rolb
push
push
or
pop
mov
adc
aaa
pop
cs
in
jl
dec
push
mov
aad
pusha
push
ds
or
xorl
in
ja
or
add
mov
add
addl
ljmp
imul
bound
pop
cmpsb
add
jmp
and
jl
sbb
sahf
sub
pop
sbb
stos
sbb
add
and
push
or
add
clc
loope
sbb
pop
add
loope
lods
fadd
fwait
push
or
push
add
int
sbb
sti
add
hlt
pop
push
add
jae
fwait
dec
mov
sbb
xchg
aas
add
jp
pop
pop
lods
pslld
pop
lock
mov
pusha
mov
sub
fstps
out
inc
adc
fsub
lds
gs
sahf
push
btc
scas
cmpsl
mov
outsl
in
add
mov
xor
dec
fnsave
movsb
push
addb
sbb
jb
out
notl
scas
test
xor
cmpsl
test
daa
pop
mov
and
ss
adc
into
add
je
push
test
mov
jns
push
add
jp
icebp
insb
inc
movsb
inc
xchg
in
mov
stc
lcall
pushf
mov
cmp
adc
mov
add
inc
sbb
push
pop
and
out
cltd
testl
add
xor
adc
mov
mov
pop
xchg
add
inc
lret
das
outsb
dec
mov
add
mov
std
push
cmp
jmp
out
in
add
inc
jp
jge
aaa
mov
xchg
mov
dec
incb
sbb
test
xchg
psraw
xor
mov
cmp
fisubrl
add
lea
add
test
popf
sbb
or
add
lock
insb
aaa
stc
pusha
mov
push
cltd
add
jne
addr16
dec
push
add
add
jmp
add
imul
fnstenv
xor
test
sub
dec
or
in
mov
arpl
leave
fs
sahf
hlt
out
jo
mov
pop
jb
push
add
ret
dec
xor
xchg
add
sbb
mov
add
stc
and
xchg
popf
adc
icebp
push
clc
adc
cmp
jmp
and
movsb
pusha
add
sub
mov
pusha
mov
nop
aad
xchg
fmull
fistpll
push
cmp
xlat
stc
add
jns
and
dec
pop
pop
sbb
addr16
sbb
subl
mov
popf
or
out
pushf
cmp
test
adc
add
fstpl
pop
sub
sbbl
and
insb
jl
testl
sbb
jnp
dec
jg
jp
mov
pop
and
dec
adc
mov
imul
int3
cld
pop
add
jne
or
clc
out
push
leave
push
and
test
mov
call
fsubl
loope
push
inc
xchg
loope
or
sub
out
lcall
ret
outsl
loop
jg
sub
or
jbe
xchg
je
mov
jne
adc
imul
sbb
push
flds
popa
sbb
dec
cmpb
les
imul
jle
in
sub
loopne
cmp
loop
orb
pusha
adc
pop
cmpb
shr
pusha
inc
iret
dec
add
ficomps
jmp
jae
add
leave
test
fdivl
add
ficompl
sahf
sub
dec
push
adc
sbb
or
dec
mov
jmp
leave
sub
jo,pt
jmp
pop
bound
hlt
add
sbb
movsl
add
jp
dec
add
pop
sbb
test
shll
mov
push
dec
sub
pushf
add
mov
cs
xor
cmc
inc
push
add
shll
mov
mov
lods
jo
inc
stc
jmp
test
rolb
mov
loopne
mov
inc
jp
push
and
sbb
xchg
push
jmp
sbb
cs
hlt
and
jb
mov
lcall
aaa
lods
lret
sub
inc
xor
enter
scas
dec
cwtl
outsb
xor
inc
mov
ret
mov
fisttpll
add
mov
adc
inc
jns
adcb
loopne
inc
cmp
add
scas
repnz
cmp
jns
dec
push
ja
jle
test
fldt
add
xor
addl
test
adc
pusha
sbb
adc
xchg
adc
test
add
pop
dec
xchg
jo
jle
loopne
push
inc
inc
add
test
xchg
dec
out
fsubrp
jne
xlat
insb
mov
scas
push
sbb
or
loope
test
bound
inc
jb
and
jbe
icebp
lcall
imul
shl
rcrl
mov
xlat
nop
or
mov
scas
sbb
mov
xor
xor
inc
dec
lds
outsb
lea
outsb
cs
cli
inc
dec
mov
rorb
js
movsb
xor
shlb
sbb
mov
push
std
mov
cmp
stc
pop
mov
push
add
lods
gs
std
xchg
push
sbb
data16
sbb
mov
mov
add
test
stc
pop
sbb
adcl
lret
adc
push
push
int
add
pop
inc
sbb
out
add
cld
push
jo
xor
roll
xchg
add
add
pop
fs
sbb
shrl
cld
mov
aam
out
xor
in
inc
push
lahf
jge
cmpsl
xor
push
flds
call
hlt
push
jp
mov
sbb
xchg
or
movsb
and
xchg
mov
and
push
mov
str
jb
ja
cli
sub
xor
inc
push
ljmp
ja
jle
or
out
nop
and
and
push
shll
insb
adc
cmc
cmp
loop
bound
push
filds
jg
push
fwait
stos
ljmp
sarl
inc
push
into
add
rcrl
jb
xor
icebp
or
adc
sahf
mov
int
add
xchg
mov
jg
or
dec
push
cmp
movsb
mov
sub
add
or
ret
popl
outsb
mov
jmp
jmp
dec
pop
xchg
insl
adc
add
enter
mov
je
iret
das
inc
ret
mov
sbb
in
xor
xorl
ret
inc
inc
push
pushf
add
push
movsl
adc
in
lods
subb
mov
xchg
addr16
sub
pop
std
fiadds
test
cmc
dec
push
add
dec
lods
jbe
fdivrl
pop
out
add
cmpsl
sub
adc
add
movsb
cwtl
pop
mov
rdpkru
lret
fildl
fidivl
fadds
mov
xchg
pop
aaa
adc
arpl
das
sbbl
lods
xchg
push
add
mov
jle
daa
xor
in
add
hlt
sbb
inc
cmp
aad
and
sbb
imul
push
push
rcll
add
fstl
sbb
stc
add
sub
mov
mov
iret
lods
mov
push
jecxz
hlt
fldenv
dec
jge
and
call
inc
loope
int
pushf
xchg
add
shr
add
dec
fimull
shlb
cli
leave
and
inc
pop
int3
xchg
pushf
add
and
xchg
pop
jnp
or
das
outsl
out
sbb
cmp
jecxz
push
jl
aam
or
mov
lds
addl
dec
ficoms
lcall
adc
add
pop
lock
in
mov
adc
and
sarl
xor
cmp
mov
jo
dec
pop
push
and
lock
sti
scas
jb
jmp
daa
pop
adc
lock
dec
sbb
neg
push
xchg
popf
mov
out
mov
sbb
jle
icebp
sti
add
pop
fmul
loopne
mov
mov
and
add
test
fwait
loope
cmp
rcr
add
cwtl
mov
add
mov
pusha
add
outsb
mov
or
sub
or
repnz
xor
add
and
inc
add
inc
lods
hlt
or
shlb
push
lcall
popf
pop
rcrl
ret
ja
sbb
js
adc
fisubl
aaa
push
push
dec
jae
cltd
or
push
jmp
xchg
leave
loop
lods
inc
add
inc
js
or
adc
add
cmp
sbb
mov
add
test
xor
test
add
push
je
add
add
ret
sbb
subl
mov
pop
jne
fildll
mov
repnz
mov
pusha
pop
push
add
js
ret
sbb
mov
fiaddl
sbb
pop
cld
xchg
imul
outsl
aad
pop
out
adc
stos
jmp
inc
inc
mov
inc
xor
mov
cmp
cmp
mov
movsl
dec
xchg
and
mov
cmp
mov
cmp
adc
add
gs
test
add
mov
cmp
mov
cmp
aad
add
cmpsl
add
and
pop
dec
rolb
pminub
mov
hlt
lods
and
out
ds
or
sbb
mov
decl
mov
stos
mov
adc
or
lods
pusha
fwait
jg
adc
out
popl
stos
pop
pushf
inc
dec
sub
jo
pop
fwait
dec
push
adc
pop
ja
xchg
sar
rep
adc
jno
xlat
fsubr
or
and
adc
pop
cmpsl
cltd
xor
xchg
popf
xchg
mov
jecxz
and
in
sub
adc
fs
add
jo
cmp
xor
cmpb
xchg
push
dec
add
sahf
rorb
loope,pn
je
add
mov
lods
pop
cli
xchg
xchg
mov
movsb
pushf
shlb
cmp
nop
or
addr16
mov
addl
adc
inc
and
sub
dec
add
jb
loope
push
jae
add
into
push
add
int
adc
mov
pop
adc
sbb
jno
pop
sub
stos
add
imull
or
lret
add
sbb
mov
pusha
xorl
les
scas
add
mov
xchg
ss
or
cli
add
mov
je
stos
das
aaa
add
mov
sbb
fmul
push
sub
add
adc
add
imul
xor
add
fs
loopne
mov
fisttpl
sbb
and
add
bound
xchg
cmpl
clc
pop
mov
in
pusha
push
inc
sarl
dec
inc
das
scas
test
mov
fnsave
add
test
or
shll
jge
pop
add
jae
pop
add
jle,pt
sub
imul
dec
gs
dec
add
or
insb
mov
sbb
add
push
popa
dec
outsl
ljmp
and
jne
jmp
adc
xchg
daa
mov
js
popa
xchg
inc
lret
mov
xor
adc
cmp
sar
jecxz
xor
mov
mov
movsb
pop
aaa
xor
rcrb
lea
int
inc
cltd
push
adc
imul
add
stos
fdivs
movd
adcb
ljmp
pop
jne
in
xchg
inc
clc
xor
xchg
and
out
mov
shl
rcr
pop
loopne
mov
out
push
stos
add
lock
or
jnp
pop
jle
in
or
movsl
clc
mov
std
adc
xchg
fdivrs
sub
shlb
jp
test
in
je
daa
inc
xchg
xor
sbb
cltd
mov
shrb
add
in
push
movsl
add
cld
insb
cmp
jbe
xor
inc
mov
std
dec
xchg
ror
add
sub
repz
push
and
inc
pop
and
imul
loopnew,pt
push
lahf
orl
sub
and
and
insl
xchg
adcl
in
inc
add
stos
add
inc
dec
jno
pop
add
loopne
xor
scas
aaa
add
cli
adc
add
adc
inc
jge
fnstsw
fs
adc
mov
ret
push
ds
mov
icebp
fistpll
push
push
rol
into
jg
in
lahf
adc
mov
add
hlt
data16
add
in
call
fildl
rcrl
add
in
mov
mov
or
add
idivb
adc
outsl
dec
cmp
out
jae
adc
mov
clc
pop
adc
lcall
lret
js
pop
insb
lods
loopne
mov
dec
adc
mov
cs
cmc
add
cmp
cmp
scas
mov
sbb
dec
imul
arpl
jbe
repz
add
sbb
push
xchg
mov
sub
imul
loop
stos
adc
push
add
andb
imul
push
xchg
jp
insl
xchg
add
inc
je
fmull
inc
pop
data16
cmp
pop
mov
adc
aaa
add
xchg
mov
add
out
mov
add
jbe
addb
push
ljmp
mov
push
add
mov
les
lahf
lods
adc
dec
add
pop
cmc
push
xchg
add
scas
add
lea
cmpb
sbb
and
out
push
push
mov
cmp
xor
pop
add
subl
int
pusha
jb
lahf
jp
cmp
arpl
out
xchg
lods
aas
add
jg
fildl
mov
lock
hlt
add
xor
and
xorb
xor
pop
cwtl
add
add
sub
xchg
lock
and
lock
push
icebp
sahf
add
lds
int3
dec
mov
push
mov
lods
sbb
push
adc
movb
subl
andl
add
adc
inc
jecxz
and
loopne
imul
test
repnz
data16
bound
jae
pop
ss
add
add
dec
out
sub
jbe
sbb
jecxz
push
pop
add
mov
or
popa
mov
scas
add
sbb
inc
repnz
and
scas
negb
add
or
push
pusha
mov
shrl
fisubs
add
cmp
adc
out
daa
inc
in
inc
adc
jge
pop
cmpsl
adc
aad
popl
jg
jbe
push
push
out
lret
push
sub
mov
xor
mov
lcall
add
mov
xchg
add
loope
cld
cmpsb
ret
fistpll
cmp
loop
cmpb
pop
sbb
add
rclb
lock
or
nop
lret
fwait
sub
not
and
and
les
mov
mov
pop
inc
add
jmp
in
add
addl
add
or
xor
sub
cmp
pop
out
adc
les
or
jmp
add
call
into
cmp
dec
cld
mov
inc
mov
adc
pop
loop
jae
or
add
lock
addl
ret
jb
jns
mov
sub
fisubl
and
bound
push
loopne
cwtl
sbb
sub
or
test
pop
mov
pusha
adc
pusha
ss
and
mov
pop
and
sbb
mov
out
cwtl
sub
push
add
jp
les
mov
mov
push
add
icebp
filds
pushl
xor
insl
lret
cmp
je
lods
test
dec
enter
add
testb
scas
movsl
in
les
data16
sbb
add
out
insb
scas
xor
mov
cwtl
or
js
in
cli
add
and
cmpsl
push
inc
dec
call
inc
push
cltd
in
add
test
jo
ss
mov
and
imul
lret
fstpl
mov
fwait
in
add
pop
push
ds
js
dec
shll
sti
mov
push
lock
push
mov
jbe
icebp
xor
test
push
mov
add
sbb
mov
int
sbb
scas
mov
lret
gs
sti
loope
dec
jmp
sbb
enter
add
scas
fcompp
cmp
pop
add
in
adc
mov
lret
dec
xchg
test
pop
fldl
call
pushfw
jge
jle
mov
int
movsl
jecxz
rorl
ret
repnz
add
jecxz
xchg
shl
jae
push
xorl
pusha
in
repz
dec
and
clc
lea
cltd
cmp
xor
jne
and
cmp
fwait
lahf
or
add
pushf
subl
add
mov
push
je,pt
jns
cld
sbb
add
or
pop
add
daa
inc
loop
mov
add
dec
mov
add
mov
mov
loopne
jg
mov
adc
mov
or
pop
pushf
lahf
sub
add
fldl
add
std
mov
aam
inc
sbb
add
mov
add
pop
adc
cmc
fdiv
add
movsb
popf
inc
loope
cltd
data16
call
es
shrl
das
gs
loop
inc
aas
push
xor
pushf
add
outsb
dec
pop
arpl
ljmp
and
dec
orl
popa
inc
inc
add
sbb
add
xor
sbb
stos
ret
xchg
mov
test
fimuls
xchg
jmp
mov
add
mov
and
fyl2x
sbb
imul
test
imul
ss
and
pop
clc
xchg
add
add
div
loopne
ds
mov
nop
adc
add
xchg
xor
mov
push
inc
dec
mov
or
jg
add
leave
ss
add
cmp
addb
mov
add
jnp
mov
add
test
mov
xchg
rcll
add
fadd
adc
loopne
mov
or
inc
xchg
or
mov
jo
lret
and
insb
and
in
pusha
pushf
insl
mov
pop
repz
inc
ja
iret
lock
xchg
scas
sub
in
xor
clc
push
ja
add
and
push
cmp
out
sub
in
clc
cmp
aaa
clc
push
pusha
cmpsl
adc
daa
dec
mov
inc
aam
adc
or
add
shl
mov
dec
scas
cmp
aad
jle
in
sbb
dec
dec
ret
js
adc
sbb
out
jns
shlb
sbb
push
add
dec
ret
cli
dec
cmp
jb
hlt
pop
das
add
data16
add
and
divb
dec
daa
xor
loopne
incb
lret
push
jle
cmpsb
add
mov
popf
sbb
mov
ret
cs
pop
sbb
movl
add
mov
pop
loopne
inc
sbb
mov
pop
cltd
fwait
push
add
data16
xor
mov
adc
pop
add
imul
or
or
repz
aaa
add
roll
ficomps
fcmovb
in
and
aas
addr16
push
add
rcrb
jbe
ds
and
out
mov
push
sbb
mov
add
fwait
mov
jne
cli
popa
rcrl
pop
andl
or
add
jmp
ret
dec
call
pop
xor
inc
add
or
cmp
adc
lea
pop
out
add
mov
mov
add
jne
mov
jnp
jge
out
arpl
movsb
dec
lods
subl
cmpsl
add
mov
jbe
pusha
fistl
adc
mov
adc
testl
mov
dec
jno
add
stc
aas
enter
mov
into
loop
sbb
adc
sahf
sub
add
xchg
jp
mov
sub
add
frstor
add
ret
xlat
sub
flds
jae
aad
ret
mov
adc
xor
ss
add
imul
jbe
sbb
jnp
add
aaa
fiaddl
add
inc
mov
and
mov
fldl
aas
sub
dec
dec
mov
vmulsd
add
push
sub
lahf
jo
add
daa
ss
jne
xchg
add
mov
cli
pusha
pop
stc
movsb
int3
ficoml
insl
ljmp
adcl
add
leave
je
adc
add
sub
sbb
orb
xorl
ja
shrb
adc
sbb
mov
scas
push
adc
xor
jne
mov
fcmovb
stos
popf
fcoml
or
pop
pusha
sub
sbb
das
dec
fwait
push
mov
or
and
lahf
xchg
add
jmp
pusha
lods
mov
shll
push
icebp
fnsave
repnz
xchg
push
pusha
mov
rcrb
in
iret
mov
enter
cltd
and
adc
push
mov
adc
gs
mov
aaa
add
inc
dec
iret
flds
add
pop
scas
shrl
mov
rcl
add
dec
dec
sti
dec
arpl
shl
lods
std
adc
out
icebp
iret
test
sbb
xor
sbb
arpl
orl
loopne
cmp
sbb
in
add
inc
pushf
mov
incb
jns
das
sbb
cmp
jg
pop
je
loopne
aaa
arpl
or
xchg
sbb
and
andl
rorb
loope
mov
mov
jns
orl
xchg
cmpsl
add
cwtl
xchg
or
mov
add
xor
xchg
icebp
mov
mov
mov
push
mov
and
movsb
add
xchg
add
inc
inc
int
or
mov
arpl
mov
shl
add
xchg
add
pop
cld
cmpl
dec
adc
dec
jmp
in
mov
inc
popf
inc
inc
add
shl
push
inc
push
adc
int
xchg
xchg
xor
scas
push
cli
iret
adc
mov
mov
bound
sbb
add
ret
xchg
pop
fnsave
xor
hlt
imul
add
mov
sahf
ret
add
adc
pop
add
scas
pop
cltd
and
mov
scas
mov
test
mov
daa
ret
faddl
icebp
addr16
scas
out
sbb
pop
filds
sub
adc
sbb
push
imul
popf
push
mov
lods
mov
adc
mov
test
add
add
xor
adc
scas
insb
mov
pop
shrl
adc
inc
scas
imul
jge
sbb
div
add
mov
fcmovne
xchg
outsl
int
sub
sahf
lods
cmp
pop
js
jno
dec
mov
pop
push
sub
add
and
lea
std
inc
lret
push
cmp
loope
adc
push
or
and
lds
add
nop
ss
ret
fwait
addr16
test
jb
dec
aam
and
or
popa
add
lock
aas
add
mov
adc
push
loopne
or
movsl
into
cmp
sub
packssdw
inc
enter
push
cwtl
and
iret
xor
pop
push
add
adc
movsb
sub
mov
into
in
push
xorl
cmp
popa
ret
push
shlb
cli
push
orb
std
lock
mov
push
and
cmp
dec
mov
sub
adc
and
dec
out
cltd
xchg
mov
jmp
add
mov
push
mov
das
mov
in
xor
sbb
jp
add
inc
dec
xchg
push
out
mov
cmpsl
lods
rcrb
outsb
add
lods
jnp
pusha
ss
mov
test
lahf
call
pusha
hlt
xchg
fists
push
into
cld
test
jge
add
or
inc
and
sub
jg
pop
push
inc
mov
push
or
inc
lods
or
add
aas
es
xchg
inc
scas
sbb
ficoml
adc
and
fistps
mov
sti
xorb
mov
daa
jl
xor
and
daa
add
pushf
inc
add
xor
jnp
inc
pusha
loopne
jmp
sbb
loopne
mov
mov
pop
test
jo
add
cwtl
lahf
or
adc
inc
adc
push
jo
movups
mov
aas
dec
pop
mov
sbb
mov
out
pop
roll
pusha
loope
jmp
inc
jle
aam
jp
sbb
fstps
rcll
mul
adc
fs
das
pop
movsl
shlb
sub
jmp
push
mov
add
jle
mov
and
dec
shll
lahf
add
and
and
mov
not
enter
inc
fsubrl
jl
or
inc
xchg
lcall
push
sbb
xor
jnp
pop
xchg
add
stc
outsb
fdivrp
les
fisttpll
mov
int3
shr
xlat
add
ss
and
add
jecxz
ja
scas
out
cmp
adc
out
mov
pop
loope
jbe
jmp
aam
imul
bswap
mov
loopne
pop
fstl
add
insl
push
mov
mov
inc
mov
mov
movsl
add
dec
dec
dec
add
rolb
stos
loop
aaa
outsl
and
inc
add
aad
and
icebp
jbe
iret
lea
add
cmp
jp
add
scas
xor
insb
and
std
xchg
ja
adc
add
aaa
pop
cli
fs
shl
mov
adc
movsb
pop
pop
out
add
lretw
inc
adc
dec
loopne
cmp
inc
dec
sbb
push
add
psubsw
add
mov
xor
push
stos
test
adc
push
imul
je
sbb
add
add
shlb
push
add
sub
popw
sbb
xchg
mov
push
jg
dec
out
jne
out
sbb
add
sbb
cmp
in
testl
mov
lods
into
pop
and
ljmp
jmp
cmpb
xchg
push
fldl
pop
cmc
or
mov
mov
call
xor
fsubl
add
fidivrl
dec
add
mov
sbb
add
push
add
push
jecxz
nop
js
ret
add
sahf
loop
ret
call
sub
jns
clc
aas
add
dec
mov
xchg
out
pop
dec
or
adc
mov
jge
fistpl
and
loopne
adc
ret
adc
fsubr
dec
popl
mov
ret
adc
outsl
or
jo
inc
mov
sbb
dec
incl
mov
mov
jl
fistl
add
pop
add
sub
add
mov
fwait
and
rolb
stc
pop
sbb
mov
ss
nop
add
or
mov
or
shrl
adcl
mov
and
lds
jmp
add
test
loope
adc
cmp
dec
or
sbb
push
mov
pop
add
jp
loopne
rcrl
insl
add
lock
push
rorl
push
xorb
clc
add
inc
mov
jno
movl
jmp
mov
mov
stc
in
imul
cmpsb
pusha
jo
pusha
loopne
add
adc
and
sti
clc
out
and
in
es
inc
or
mov
or
fs
out
cwtl
and
inc
int3
lret
xchg
test
jg
mov
lcall
adcl
mov
inc
rolb
in
adc
loop
sti
dec
add
scas
fnop
pop
cld
test
add
fidivl
ret
mov
incb
add
or
incl
xchg
call
add
test
mov
scas
mov
gs
dec
repnz
testb
pop
rcll
push
pusha
pop
mov
sbb
mov
mov
and
loope
dec
lahf
daa
in
sbb
lahf
mov
iret
push
leave
cmp
repnz
push
pop
push
add
loope
nop
inc
and
jnp
push
aam
push
fldcw
jbe
aam
push
bound
movswl
ror
jnp
fisttps
outsl
mov
inc
add
xor
add
std
sbb
xor
xchg
das
mov
inc
jnp
dec
shl
jbe
scas
cmp
ficoml
lahf
movsl
pusha
add
or
daa
std
pop
push
xor
inc
in
fs
lret
je
add
jecxz
into
push
testl
and
sub
loope
dec
adc
and
fs
mov
inc
fidivl
push
dec
push
mov
outsb
or
and
push
test
pushf
sub
cmovno
mov
mov
cmp
hlt
loope
insb
xor
pop
and
inc
into
cmp
add
xchg
and
shl
mov
jae
flds
sub
aas
enter
jecxz
lret
sub
adc
adc
int
test
add
pushf
dec
lods
add
sub
out
lret
add
push
cmpsl
rol
sub
cmp
lcall
mov
lods
mov
mov
in
add
out
inc
xchg
add
mov
adc
sub
mov
jecxz
add
xchg
inc
jle
push
cltd
je
or
push
loopne
ret
xchg
add
pusha
cs
sahf
and
mov
mov
dec
mov
mov
push
in
cld
cmp
add
mov
pop
adcb
icebp
inc
push
bound
add
add
or
pushf
in
mov
loopne
in
mov
ja
das
insb
inc
int3
imul
add
jmp
repz
lods
ret
inc
pop
stc
cmp
mov
adc
mov
mov
lds
jecxz
int
testl
add
insl
inc
ss
inc
jmp
xor
outsb
add
test
addr16
jne
cmp
sahf
xlat
add
mov
add
pop
cld
or
cmp
enter
clc
jae
out
cld
stc
push
mov
pusha
cmc
decb
sbb
dec
test
fs
movsl
xor
rorl
daa
push
dec
jmp
jae
adc
jg
xchg
fisubrs
in
aam
inc
adc
adc
call
and
and
jo
inc
xchg
adc
or
out
movl
cmp
pop
push
add
ds
loope
dec
or
shlb
cmp
push
add
sbb
movsl
scas
adc
and
xor
adc
and
mov
push
pop
bound
dec
add
inc
orb
loopne
mov
cmp
call
jo
add
mov
rol
and
pop
pop
idivl
lcall
sub
push
jae
sbb
shrl
cmp
clc
push
pop
loopne
xchg
mov
arpl
push
xlat
lods
pop
and
and
cmp
movl
adc
aad
cmp
popf
jo
dec
mov
mov
test
mov
or
pop
scas
scas
pop
add
js
cmp
mov
dec
aam
inc
xchg
loopne
push
aad
sbb
jg
add
sub
dec
in
mov
xor
popl
je
sbb
mov
mov
scas
mov
ja
ds
out
xchg
inc
iret
fiaddl
xlat
xchg
cltd
xor
lret
nop
add
pusha
mov
loopne
out
jne
adc
push
fcompl
stos
into
add
hlt
adc
mov
jae
jmp
jne
out
js
sbb
sbb
add
sub
popf
and
pop
adc
jb
aad
faddl
lahf
dec
adc
aam
pop
xchg
mov
popf
jb
xor
push
movsl
clc
and
mov
icebp
xchg
outsl
mov
sub
js
nop
xchg
movsb
add
rol
add
lcall
mov
mov
jne
insb
jle
mov
push
add
test
cld
add
enter
fsub
and
sar
test
scas
jne
icebp
jl
sbb
roll
incl
clc
ret
orl
add
jecxz
xchg
dec
bound
pusha
popa
dec
push
repnz
sub
scas
xor
xchg
inc
ds
jo
aad
ljmp
lods
push
xchg
sarl
inc
sahf
cmp
in
add
and
fildll
inc
shll
xor
sahf
inc
popw
out
add
inc
sbb
hlt
into
xchg
add
fdivrp
test
and
in
pusha
cmp
popf
jecxz
les
adc
xor
ret
scas
addr16
cmp
push
mov
rcrl
aaa
mov
insb
cmpsb
xchg
sub
popf
mov
adc
xor
stos
stos
cmpsb
sarb
int3
cmpb
and
popa
push
cmp
dec
cmc
in
add
mov
mov
add
sbb
outsb
aad
lret
add
xor
push
mov
loopne
inc
lds
dec
popa
xor
sahf
aaa
lock
push
or
or
sbb
add
ds
sti
add
or
repnz
adc
or
test
int
adc
sbb
in
inc
add
outsl
out
jg
mov
add
sbb
inc
sub
add
inc
stos
loopne
iret
lock
daa
test
or
cmp
xor
std
movsl
lcall
mov
jg
and
pop
add
clc
xchg
or
xchg
nop
adc
mov
push
add
or
call
dec
sahf
cltd
dec
hlt
pusha
aad
add
or
inc
dec
add
enter
aas
iret
popf
pop
pop
loopne
arpl
jmp
dec
jecxz
cmc
les
inc
sti
add
loop
lcall
jecxz
sarl
cld
add
addb
outsl
movsb
cs
add
ds
pop
repz
sbb
push
dec
or
lods
pusha
sbb
push
xor
and
add
xlat
subl
loope
rep
adc
mov
mov
inc
add
inc
pop
shrl
mov
repnz
sahf
push
jns
cltd
lds
mov
aas
jnp
mov
lods
add
adc
popa
xchg
xchg
xor
jo
push
pop
sbb
adc
sbb
xor
and
in
fsubs
mov
jmp
je
lods
cltd
push
test
cmp
xchg
mov
shlb
pop
mov
lret
call
xchg
mov
std
cltd
clts
jnp
pop
adc
and
push
in
cmpsb
enter
mov
mov
mov
lea
stos
sbb
scas
pop
dec
push
adc
into
ret
or
mov
outsb
mov
js
push
mov
sbb
insb
out
add
pop
je
mov
pop
mov
daa
pop
stos
imul
test
cwtl
jbe
in
das
lahf
cmp
jnp
jge
jmp
dec
and
adc
jo
mov
in
pop
cmpsl
add
enter
clc
cmp
inc
pop
lahf
sbb
sub
ss
je
dec
cmp
fstps
push
les
add
jl
mov
add
mov
pcmpeqd
adc
lds
in
xorl
insb
jbe
push
mov
pop
jle
push
xchg
mov
mov
subl
cwtl
loope
roll
pop
in
adc
dec
mov
mov
mov
cmp
jns
addr16
xor
push
pop
js
imul
fwait
mov
addr16
sbb
add
data16
movl
mov
mov
in
outsb
loope
gs
xchg
iret
mov
mov
shlb
insl
cmpsl
loope
pusha
inc
sbbb
sbb
sub
add
jmp
and
in
mov
add
and
repz
sahf
scas
inc
mov
mov
outsb
add
push
xor
jecxz
xchg
add
inc
sub
sbbl
mov
sbb
test
push
aam
fs
or
test
fimuls
xchg
add
mov
out
pop
pushf
or
cmp
and
les
shll
pop
arpl
dec
sti
fistpll
add
cmc
cs
mov
add
sbb
lea
cmp
pop
data16
repz
pop
add
aas
rclb
nop
mov
test
mov
add
mov
cmpsl
inc
and
test
xchg
aaa
arpl
pusha
and
ret
lea
add
repnz
xor
mov
sub
mov
pop
icebp
add
pause
mov
mov
jge
cli
push
push
jno
add
and
sti
subl
scas
sub
or
add
imul
add
je
sbb
ds
adc
sete
xchg
xchg
adc
jne
adc
pop
into
jbe
fiadds
mov
loope
jb
imul
jne
inc
int
or
inc
pop
add
dec
add
mov
repz
loopne
ljmp
add
mov
xchg
fwait
push
add
jnp
cli
pop
cmp
inc
and
sub
dec
adc
xchg
loop
mov
cmp
or
mov
rorl
test
bound
fwait
mov
mov
popa
mov
rcrl
pop
adc
and
mov
sub
mov
mov
xchg
and
xchg
or
insb
jnp
add
cmpsb
xor
orb
jae
and
fiadds
adcb
mov
scas
adc
movsl
loopne
cwtl
pop
enter
pop
leave
push
or
pushf
movsl
dec
out
stos
xchg
mov
add
sub
xchg
lods
dec
lea
mov
pop
loope
mov
sbb
or
std
es
out
in
add
jl
xchg
in
inc
mov
andb
jmp
push
ret
das
sbb
and
cmc
xchg
jl
xor
pushf
pop
loope
adc
mov
add
sbb
or
fs
bound
sub
popf
adc
int3
out
in
add
push
inc
xor
adc
add
arpl
cld
add
iret
pop
push
inc
xchg
fisubrl
dec
add
mov
fdivp
jecxz
mov
shrl
sbb
add
pop
add
mov
mov
mov
adc
pop
rcll
pop
cli
sbb
inc
mov
mull
pop
bound
lock
lds
jne
mov
or
jbe
outsb
or
or
and
sbb
inc
lods
add
and
pushf
jecxz
mov
lock
cmc
mov
bound
scas
sbb
in
ja
verr
addl
jg
or
and
xchg
outsb
push
jle
add
ret
dec
pop
add
adc
shll
sub
fcoml
lds
add
test
add
push
xchg
loop
stos
aad
loope
inc
adc
cld
out
dec
jmp
addr16
and
cmc
add
sub
and
add
das
rcr
lods
jo
cld
inc
xor
or
jmp
decb
aam
jb
and
or
jbe
repnz
lret
ja
mov
ret
bound
add
jb
add
movsb
pusha
xor
pop
or
adc
les
mov
add
stos
or
loopne
jg
xor
int3
stc
aad
sbb
jg
and
dec
lret
daa
ljmp
int
mov
mov
cmp
pop
shl
jnp
add
push
push
mov
dec
jb
add
insb
push
in
mov
inc
shll
mov
xchg
push
xchg
sbb
dec
mov
stos
daa
sbb
fcomps
xchg
loopne
sub
push
lcall
mov
ficoml
xor
pop
sarl
loope
pop
pop
push
cmp
xor
leave
add
jno
stc
outsb
cwtl
mov
sub
in
mov
jo
bound
cmp
inc
xchg
pop
sbb
add
out
jno
leave
dec
int3
lahf
and
inc
adc
dec
es
mov
lods
push
pop
aas
dec
jnp
push
in
enter
pop
add
rcrl
jecxz
pop
jo
aam
mov
cmp
inc
mov
lcall
cmpsl
adc
push
cmp
aam
mov
es
dec
xchg
jecxz
add
mov
int3
adc
push
mov
push
sub
jecxz
adc
out
add
sub
loopne
adc
mov
jge
scas
and
sbb
sub
xchg
call
mov
adc
shrb
pminsw
repnz
adc
adc
cltd
test
sahf
inc
add
rcll
push
adc
cmp
ss
pop
jecxz
rolb
sub
sub
hlt
add
bound
inc
loopne
xchg
jmp
ljmp
push
nop
roll
push
xor
rclb
xor
imul
add
mov
and
sbb
rcrb
clc
movsl
pop
insb
sub
add
mov
inc
add
sub
dec
int3
sbb
xchg
cmp
outsb
jne
rcll
adc
das
popa
add
imul
add
out
dec
or
push
out
push
std
jp
inc
and
rcrl
adc
or
les
test
pop
inc
lods
pop
shll
push
in
mov
sub
js
xchg
rcrl
movsb
fisubrs
iret
cmp
jno
aaa
daa
fcoms
lds
xor
imulb
add
out
mov
repz
movsb
nop
add
shl
ss
dec
in
cmp
jl
push
lcall
sub
mov
dec
add
push
jns
fcmovb
xchg
or
adc
pop
cmp
inc
cltd
add
mov
inc
fcmovnu
test
add
jecxz
xor
rclb
mov
add
pop
outsl
cmpsb
mov
pop
and
sub
iret
das
jl
dec
lods
dec
mov
dec
add
jnp,pt
add
fcmove
mov
fisttps
call
cmp
mov
loopne
or
pop
push
scas
in
mov
movsb
data16
dec
sub
add
adc
sbb
pusha
jae
add
ljmp
and
jb
test
pusha
popa
dec
out
add
mov
test
jnp
mov
pusha
mov
rcrl
xor
je
pushf
faddp
add
xor
and
and
loop
test
push
sahf
xor
loope
cmpsl
xor
or
pusha
cltd
dec
ret
outsb
incb
pop
stc
mov
aas
xchg
fs
in
or
push
loopne
out
cmc
imull
add
clc
or
rol
mov
pop
incl
out
sub
dec
pushf
mov
sub
add
in
loope
enter
cmp
paddb
loope
add
add
testb
out
inc
clc
add
ret
mov
shlb
arpl
and
dec
lret
aam
out
add
sbb
and
scas
add
daa
das
jns
lahf
inc
lret
mov
cli
movsl
dec
push
cmpsl
adcl
sbb
xchg
add
jle
cmpsb
pusha
jge
dec
ror
into
push
jecxz
add
arpl
and
cwtl
adc
std
jno
sbb
add
and
lret
hlt
xchg
push
aas
insb
and
aaa
aam
or
cmp
pop
mov
callw
fs
ss
in
add
mov
push
pushf
xchg
out
cmpsl
inc
mov
jecxz
lods
adc
in
rcr
aam
repz
jecxz
imul
pop
adc
sub
push
jbe
push
and
fs
pushf
push
pop
loop
int3
add
dec
pop
adc
or
lods
loopne
fistps
sbb
mov
xor
jnp
and
inc
and
sub
aas
enter
in
sub
add
test
mov
sub
mov
icebp
popf
and
aad
xchg
lret
fnsave
lahf
pusha
mov
push
dec
rorb
dec
in
cli
mov
out
ret
popf
fidivl
jecxz
and
pushl
adcl
xlat
cmpsl
insl
sub
movsb
or
sbb
add
cld
rcr
sub
imul
leave
cmp
add
hlt
mov
ljmp
in
cmpsb
mov
rcr
sbbb
jmp
cmpsl
test
or
add
jne
xchg
repz
insb
mov
pop
popa
outsb
dec
mov
and
mov
fldl
push
pop
add
lahf
movsl
xor
mov
std
and
mov
jmp
rcrb
jbe
movsb
stos
loope
dec
push
jne
mul
loopne
ret
sub
add
inc
pop
pop
scas
add
add
add
jle
fiadds
and
ret
out
push
sub
push
popf
test
in
repnz
inc
sti
or
lock
sbb
or
add
inc
fs
out
sbb
jecxz
inc
mov
test
dec
popa
inc
psrad
nop
push
aas
jmp
add
mov
sbb
data16
mov
jge
cmc
and
je
lds
adc
xor
adc
lock
xchg
push
les
shll
imul
cs
sahf
add
shlb
sub
sub
out
enter
mov
sbb
loopne
cmpsb
cmp
mov
xor
loope
dec
mov
xlat
push
add
dec
add
mov
fsts
movsb
pop
lret
xor
andl
sub
lret
int
pusha
lods
dec
mov
sbbb
addl
cmp
sbb
cmp
movsb
push
add
and
cltd
pusha
pop
icebp
je
xor
mov
mov
ror
sub
in
movsb
mov
add
cvtps2pd
sub
cmp
add
xchg
scas
add
dec
adc
insl
ds
push
cwtl
ret
mov
aam
outsl
sbb
mov
scas
gs
jbe
add
sub
sarl
xchg
push
arpl
lcall
lods
add
mov
mul
add
fcompl
pop
dec
inc
push
mov
mov
adc
push
hlt
in
xlat
sbb
push
daa
jns
mov
aam
add
sbb
and
scas
add
mov
inc
call
add
push
xor
jnp
test
inc
in
cmp
push
mov
cld
cmp
xor
fdivrs
icebp
sbb
sbb
add
inc
push
in
lea
insb
outsb
sbb
add
mov
jle
mov
into
lcall
stc
fwait
out
sbb
pop
add
ds
rcrb
out
cli
push
mov
rorb
movsb
mov
push
fldcw
jne
add
imul
adc
push
frstor
div
repz
and
pusha
add
hlt
inc
out
adc
test
add
into
pop
leave
test
xchg
push
arpl
push
faddl
and
movsl
out
pusha
dec
stos
out
test
pop
jae
das
cmc
jno
jbe
popf
ds
dec
mull
sbb
loope
lods
test
inc
loopne
add
pop
in
xor
outsb
hlt
psllq
dec
cmp
mov
outsl
rolb
incb
sbb
xlat
cwtl
test
add
sbbb
xlat
xor
add
or
mov
add
adc
xor
mov
imul
cmp
ds
lahf
or
pop
add
xor
mov
or
outsb
sahf
test
dec
or
and
mov
push
sbb
mov
pop
add
adc
mov
ljmp
fildll
mov
mov
xchg
and
data16
mov
roll
loope
scas
push
add
das
mov
add
pop
add
clc
jb
cmp
es
rorl
jg
mov
into
push
ljmp
mov
xchg
cmpl
sbb
jae
add
cmp
push
pop
xchg
add
lods
add
fmuls
jp
adc
popa
insb
dec
push
sarl
ret
lahf
add
mov
mov
leave
jno
outsl
hlt
jnp
or
mov
loopne
mov
and
push
aaa
push
lret
mov
and
les
dec
inc
xchg
mov
cld
popf
add
push
cmp
mov
inc
or
add
fadd
filds
mov
aas
pushf
pop
aam
negb
test
adc
xor
daa
mov
adc
sub
push
lds
repz
pop
push
idivl
or
movsb
xchg
add
arpl
sub
mov
cwtl
mov
add
lret
adc
push
loop
add
jecxz
dec
loopne
js
daa
mov
pop
adc
add
shll
aas
sbb
cmpsb
loopne
xchg
inc
roll
dec
in
add
roll
sbbb
mov
repz
popf
popl
fldt
shll
pop
ret
cmpsl
lcall
clc
jg
js
out
push
lock
in
sub
test
mov
ja
test
cmpsl
mov
xchg
jp
cmp
dec
mov
dec
and
mov
sbb
sub
sbb
xchg
insb
rcrl
addl
add
adc
cltd
sbb
orl
ret
jp
add
jae
xchg
add
sbb
mov
fisubl
add
pop
and
sub
add
enter
push
jle
pop
xchg
cmpsl
and
repnz
sbb
mov
and
jp
xchg
add
int
pinsrw
mov
inc
push
mov
pushf
adc
sub
in
adc
push
inc
cltd
rorl
mov
inc
cmp
inc
stos
adc
add
or
pop
push
jmp
sbb
jb
mov
enter
pop
pop
repz
insl
inc
cmc
xor
inc
cmp
add
inc
sub
cmp
jl
pop
fdivr
incl
or
sub
or
jmp
push
outsl
mov
xchg
insl
dec
adc
test
fstpl
loop
stos
nop
and
pop
push
pop
movsb
stc
pop
cld
shr
popa
std
rorl
cmpsl
add
fs
ficomps
mov
jbe
sbb
pop
inc
add
pop
inc
jmp
add
dec
mov
or
add
call
xor
aam
and
mov
xlat
clc
mov
fldt
cwtl
stos
push
rclb
jbe
enter
outsb
sbb
scas
or
lcall
fwait
xor
mov
pop
xor
mov
loop
and
xor
lahf
inc
inc
pop
cmpsb
pusha
js
cmp
ret
mov
jmp
cmp
enter
mov
jns
shll
xchg
cmpsl
push
int3
loope
outsb
and
push
pop
aaa
mov
shlb
pop
test
fwait
stc
pusha
and
in
push
pop
adc
add
lret
mov
lock
push
and
cwtl
pushf
xor
push
push
loope
je
adc
sbb
add
pop
sbb
lcall
add
int3
loopne
adc
xchg
imul
add
push
ret
or
mov
mov
xchg
mov
xchg
mov
add
sbb
ret
in
scas
xor
sbb
pusha
inc
mov
sub
xchg
sbb
mov
shr
and
inc
push
dec
mov
flds
pop
inc
add
xchg
rclb
hlt
xchg
cmpsl
push
xchg
add
outsl
pop
add
dec
lds
add
imul
mov
add
fists
or
sub
jecxz
das
arpl
push
aam
pushl
stos
sbb
pop
cmpsb
xor
xor
xchg
jbe
add
push
mov
add
jge
jne
push
and
rorl
mov
mov
sarb
icebp
pusha
push
jne
enter
rcr
imul
push
rcrl
rclb
das
dec
or
or
dec
add
out
adc
push
sbb
shll
mov
addb
mov
inc
frstor
mov
shlb
sbb
or
dec
outsl
mov
out
push
mov
push
add
mov
cmp
subl
fsubr
xchg
lcall
fbstp
dec
popa
push
add
pop
xor
add
xchg
cmp
dec
repz
adc
out
popl
in
dec
je
arpl
pusha
ret
lods
rcrb
shll
add
ljmp
call
sbb
mov
lahf
add
jo
pop
and
hlt
adcl
xor
cmc
pop
leave
daa
aad
pusha
decl
sbb
adc
mov
rclb
xchg
popf
cmp
popf
inc
pusha
ljmp
and
fsubrl
adc
add
xchg
arpl
add
xor
popa
out
faddl
push
ficoms
inc
nop
test
aam
and
sbb
pop
pop
mov
in
addb
jae
cmp
dec
lds
push
add
cwtl
push
cltd
jle
inc
xor
push
jg
loope
push
or
aaa
jbe
shrl
xchg
fisubs
mov
push
lret
out
aaa
fnstenv
add
jns
pop
rcr
jecxz
dec
jmp
shrl
clc
movsb
add
jp
aaa
add
dec
mov
loope
cld
gs
add
adc
push
lods
inc
fimuls
loopne
out
cmp
jge
add
and
cltd
mov
movsl
test
pushf
negb
add
dec
scas
jno
stos
aaa
add
mov
jnp
add
mov
xchg
cmp
daa
lcall
mov
sub
add
scas
movsl
xlat
gs
or
pop
xchg
sbb
add
push
out
add
popf
test
loopne
test
xchg
jns
or
or
call
lods
xchg
jmp
and
push
shrb
ret
lds
cs
add
fsubrl
adc
add
adc
dec
mov
insb
add
scas
push
cltd
int
mov
sub
pop
add
xchg
mov
add
out
jo
xor
dec
pusha
in
mov
adc
mov
fildll
js
int
add
sub
in
fbld
or
fucomi
xor
cmpps
pusha
ret
hlt
pop
and
add
pop
mov
out
push
and
add
cmp
mov
jmp
dec
push
add
mov
lods
and
and
cmp
mov
scas
inc
add
sar
xor
inc
fs
mov
aaa
rclb
outsl
or
mov
fimull
mov
cld
mov
mov
ror
fwait
add
cmp
add
scas
mov
fcmovnbe
cmovge
inc
loop
ds
inc
gs
add
or
lea
push
and
lahf
loopne
jne
sbb
push
sahf
cmp
and
inc
aas
andb
sbb
add
test
add
adc
push
sbb
add
inc
mov
iret
fucomip
ss
push
xchg
or
popl
add
inc
mov
shll
adc
and
loopne
push
push
push
sbbl
fsubl
add
cmpsb
in
setb
inc
add
int3
fsubs
dec
adcb
aaa
add
hlt
push
scas
testb
push
test
cmp
cmp
inc
adc
add
nop
loop
dec
gs
leave
add
jl
inc
es
mov
dec
pop
xchg
movsl
pop
mov
pop
in
adc
cmc
add
xlat
mov
std
stos
mov
imul
popf
xchg
xchg
push
loopne
addr16
sbb
pop
and
and
scas
push
add
je
xchg
sarl
jp
imul
cmp
mov
bound
orl
push
add
inc
push
int3
pop
inc
add
fwait
push
loopne
mov
cmpsl
xor
jmp
jbe
gs
mov
xor
out
add
pop
or
je
or
repnz
push
cs
dec
fiaddl
add
sbb
pusha
adc
cmpsb
aas
xor
pusha
mov
adc
daa
and
adc
jecxz
mov
cmpsl
add
jle
dec
dec
push
add
imul
pusha
test
add
and
add
xchg
adc
mov
push
jg
pusha
aaa
mov
adc
shll
adc
cltd
out
les
repz
ljmp
roll
dec
and
faddl
sub
jno
xorb
cmpsb
cmp
xchg
pusha
sbb
pushf
mov
loopne
outsl
sbb
adc
das
mov
push
fwait
lret
subl
push
sub
clc
dec
leave
sbb
inc
inc
sub
cld
xor
xor
sbb
mov
push
jg
cmp
outsb
cmp
jle
cmpsb
add
test
xor
mov
cld
cvtps2pd
xor
push
ja
push
xchg
gs
cmp
jno
xor
sub
lea
add
add
movsl
or
fildll
xchg
jo
sub
clc
ds
stc
add
push
cmp
gs
icebp
insl
add
mov
adc
jg
fldl
es
mov
add
cmpsl
adc
lahf
add
jmp
push
add
adc
cli
or
sahf
pusha
cmp
mov
test
pop
ret
xor
test
push
shl
add
ret
push
cmp
int
js
mov
pop
add
adc
add
adc
or
pop
jmp
mov
mov
sarl
movsb
add
dec
mov
roll
push
sub
mov
or
and
ja
xor
stos
add
adc
jo
cmp
test
clc
add
mov
out
dec
inc
add
ret
jo
jmp
jecxz
xor
push
jo
mov
sub
pop
mov
in
adc
mov
mov
sub
sbb
or
add
mov
xor
jno
int3
mov
xchg
repz
add
push
or
insb
popa
sbb
push
jle
xor
inc
dec
sbb
inc
push
jge
aaa
or
bound
sub
stc
into
jb
loop
cmpsb
loopne
inc
push
loope
and
cmp
incl
cmp
sub
cmovb
mov
les
mov
outsb
cmp
stos
xchg
push
insb
cs
sub
add
orb
add
push
add
aad
ja
sub
loopne
mov
push
add
cmpl
stos
and
and
je
mov
mov
add
in
inc
sbb
mov
or
aad
push
sbb
repnz
mov
cmpsl
mov
test
loope
icebp
inc
rorl
in
sub
add
lcall
add
mull
mov
push
sbb
sub
pop
je
pop
mov
push
adc
add
add
int3
mov
and
mulb
inc
add
adc
dec
jae
and
mov
lahf
pop
scas
inc
xchg
mov
lock
js
dec
dec
out
fmuls
push
or
cmp
subb
pop
loop
add
inc
jmp
sbb
inc
inc
add
jl
ljmp
sub
mov
fildll
mov
sbb
mov
adc
mov
repz
fsubrl
sub
push
jns
adc
popa
mov
or
xor
fwait
scas
lcall
outsl
enter
popf
add
aad
and
mov
popl
loope
ror
push
repnz
daa
loope
sub
in
dec
cmp
aad
loope
loopne
dec
adc
sbbb
jmp
xchg
lds
dec
mov
popa
mov
add
xlat
mov
or
dec
sub
and
sub
pop
cmpsb
aaa
das
adc
cs
or
jl
std
and
or
add
in
pop
loop
fnsave
rcrl
je
pop
outsl
add
mov
fdivr
daa
rcll
test
sbb
add
mov
adc
lret
add
icebp
inc
push
add
ds
ss
cmpsl
add
and
xor
pushf
inc
mov
push
push
ds
jl
pop
test
add
mov
insl
and
cmpsb
and
lods
rcrb
adc
push
out
mov
xor
je
cs
in
enter
adc
mov
and
mov
mov
sbb
pusha
mov
jno
fisttpll
ljmp
mov
lock
into
or
imul
jmp
ret
jo
pop
roll
mov
jle
and
popl
sub
lahf
cmpsb
cmp
pop
loope
mov
loopne
xchg
xor
push
add
sub
repz
inc
lret
add
pop
out
insb
push
xchg
add
pop
mov
adc
lcall
xchg
push
decl
jl
add
pushf
in
inc
hlt
std
loop
push
xor
add
in
pop
xchg
jne,pn
outsl
xor
pusha
mov
mov
loopne
sub
adc
notl
mov
lods
aam
mov
lods
mov
cmp
enter
add
mov
iret
xchg
pusha
cmpsl
sub
pop
adc
cmpsb
cmp
cltd
dec
das
xor
nop
xchg
mov
enter
mov
std
sbb
cmp
loope
cltd
out
adc
inc
shll
xchg
test
inc
aas
add
call
out
and
xchg
jne
insb
mov
mov
cmp
jle
xchg
push
mov
hlt
mov
stos
or
cwtl
or
dec
outsl
pushf
xor
repnz
xchg
imul
and
inc
cld
push
bound
cmpsb
fwait
sar
mov
inc
add
pop
xchg
push
push
int3
add
not
mov
loopne
jns
push
cmp
pop
aaa
cmp
add
lcall
add
out
int3
fdiv
sub
jnp
aad
scas
push
push
add
add
cmp
dec
push
adc
lret
sub
cltd
testl
and
dec
je
dec
pushf
sub
inc
inc
push
fisttpl
sbb
and
cli
jmp
in
pop
adc
pop
repnz
push
loope
add
mov
enter
push
xor
push
mov
test
cmpsb
push
xchg
rolb
into
mov
leave
mov
mov
mov
adc
dec
jae
pop
or
add
mov
aaa
scas
out
and
lcall
adc
out
add
pop
mov
sub
mov
fwait
js
ja
int
sub
scas
mov
inc
loopne
xlat
xchg
jae,pt
sarb
test
loop
push
add
shrl
insl
mov
cwtl
imul
jo
push
in
inc
into
shrl
adc
mov
mov
int
xlat
push
or
adc
push
xchg
add
dec
push
xor
mov
mov
adc
pushf
sahf
fildl
mov
mov
or
pop
stos
lds
or
lcall
roll
xchg
add
dec
cmp
std
add
cmp
je
loope
shlb
jo
mov
xor
and
jge
pop
out
movsl
imul
imull
into
pop
add
je
cltd
rorl
sub
loopne
ss
add
cmp
sbb
add
xchg
xchg
dec
pop
fwait
mov
add
inc
std
mov
cmp
jp
sub
pop
popa
fs
add
test
pushf
je
cmpsb
and
aad
adc
icebp
orb
sub
test
add
es
stos
arpl
cs
stc
bound
iret
test
jmp
loop
push
sbb
pop
nop
and
mov
add
data16
in
mov
pusha
mov
fwait
adc
and
mov
aas
add
mov
xchg
xor
push
inc
dec
int3
cmpsl
inc
test
push
inc
add
and
mov
loopne
jae
push
sbb
pop
cmp
push
repnz
cli
push
fdivrs
out
lcall
pop
clc
add
leave
in
jp
jmp
frstor
icebp
add
cmp
movl
push
clc
sub
pop
sbb
jb
add
pop
out
jbe
xchg
sbb
sbb
or
dec
cmp
push
lock
iret
repnz
push
repz
imul
and
mov
mov
in
sub
mov
lret
adc
mov
xor
sbb
mov
outsl
push
and
add
add
mov
in
mov
out
and
mov
add
loope
test
popa
xor
ud0
or
outsb
cwtl
xor
pop
pop
mov
rcrb
add
jg
mov
add
fs
out
jge
daa
push
mov
aad
sbb
pushl
mov
adcl
pusha
add
je
xchg
pop
lcall
aas
xor
push
xor
mov
js
and
adc
lods
ret
scas
hlt
ds
std
xorb
in
jo
xchg
xchg
add
cmc
enter
fldl
pop
rorb
and
push
mov
bound
or
das
imul
sbb
add
mov
lds
pop
out
rcll
add
out
ds
xor
pushf
outsl
shr
fidivrl
cmpsl
out
add
arpl
add
insl
add
icebp
mov
jmp
out
roll
fiadds
dec
xor
add
xchg
push
xor
xchg
push
cwtl
inc
pop
xchg
dec
add
pop
add
aas
push
sub
js
push
adc
mov
iret
and
xchg
add
xor
aas
pop
pop
pop
add
cwtl
jns
fbld
mov
mov
or
add
scas
or
sbb
mov
aam
sbb
insl
lds
ds
cmp
scas
fs
repz
mov
es
dec
xor
mov
scas
sbbl
add
aaa
loopne
push
sbb
ja
sti
outsl
mov
cmp
inc
jmp
inc
js
adc
pop
mov
frstor
aas
fisubl
inc
and
addr16
stos
mov
inc
fistpll
add
sbb
iret
lahf
imul
mov
stos
cld
loope
or
out
sbb
lahf
pop
idivb
and
dec
lea
clc
push
out
fwait
test
add
int3
inc
into
loope
and
out
test
pop
add
mov
add
fidivl
adc
lea
adc
dec
scas
out
repnz
cmp
in
xor
std
scas
jnp
cmp
push
sti
jmp
lcall
adc
xchg
jecxz
sub
das
sbb
add
inc
faddl
pop
pop
push
dec
add
shlb
lcall
adc
test
inc
out
mov
test
xor
mov
mov
inc
pop
jmp
sub
icebp
add
outsl
mov
jns
dec
sbb
andl
fstl
in
jmp
push
mov
sub
xchg
and
add
outsl
pushf
adc
popf
pop
or
test
xor
sbb
nop
adc
sbb
fstpt
movsb
loop
into
or
xchg
lods
xchg
inc
xchg
push
stos
pop
or
adc
push
movb
add
lret
rcll
xlat
add
jecxz
mov
fsubr
push
add
mov
add
dec
sbb
enter
je
jle
xor
or
int3
iret
push
push
test
bound
add
ficoml
inc
aad
sbb
inc
iret
inc
nop
xchg
lock
or
ret
into
adc
add
fstp
jbe
dec
mov
fwait
lahf
je
mov
out
inc
ja
add
cmc
stc
movsl
lret
add
es
imul
sub
out
jo
daa
mov
xor
cmp
xor
and
add
adc
push
inc
jnp
out
mov
add
lret
add
lock
iret
loopne
rcrb
leave
es
ret
imul
xchg
add
pop
inc
jecxz
test
mov
pop
cwtl
add
in
pop
pushf
mov
insl
andl
in
sbb
cld
push
add
faddl
lods
test
stos
dec
lds
std
xor
lea
jmp
push
sbb
mov
fsubp
addb
mov
add
mov
loopne
inc
enter
xlat
adc
cltd
dec
jne
xchg
lods
jle
lcall
xor
push
inc
cmpsb
lahf
adc
mov
cmp
mov
push
xor
lods
lahf
test
mov
adcb
ficomps
rcr
roll
cli
and
push
clc
sbb
add
push
mov
inc
sub
mov
or
mov
adc
mov
cmp
cld
push
lahf
sbb
popf
test
jb
or
xchg
lahf
or
mov
push
sub
fsubr
stos
fistps
add
lret
xor
add
sti
stos
jno
jg
add
sub
sbb
repnz
loop
popa
sbb
lahf
xchg
pop
cs
aam
dec
in
les
loope
sub
push
std
lahf
adc
inc
add
popa
ja
ljmp
roll
lea
in
es
add
add
dec
in
aas
push
loope
call
pop
int
sbb
inc
int3
test
in
addr16
jo
add
mov
mov
pop
add
mov
loopne
inc
lods
fisubl
and
popf
aas
in
and
popa
dec
das
in
xchg
add
test
push
fcmovnbe
arpl
inc
rorb
add
add
xor
stc
dec
dec
jne
lods
pushf
cmp
sti
sub
aam
mov
cmp
fwait
mov
push
xchg
hlt
repz
xchg
sub
dec
sbb
add
inc
inc
jle
mov
mov
int
cmp
addl
loope
aaa
shll
mov
mov
push
sbb
repnz
adc
add
aad
lea
loop
sbb
pop
fadds
push
ret
or
and
movb
fldl
cmp
or
aas
xchg
xor
pusha
lods
dec
sub
and
adc
out
loopne
push
add
push
lea
xchg
xor
dec
mov
jo
or
lahf
in
addl
es
mov
dec
sub
inc
ja
add
movd
adc
mov
dec
mov
bound
dec
xchg
pushf
pop
push
add
sub
subb
loopne
dec
add
clc
std
xchg
ret
enter
rclb
and
and
jns
xchg
mov
xchg
fstpl
sahf
adc
add
mov
or
or
push
orb
mov
mov
push
mov
imul
jb
cmp
sub
out
insl
pushf
sarl
lahf
cmp
jecxz
add
fsubs
sbb
rclb
fimull
movlps
xchg
aam
sbb
insb
jecxz
or
stos
leave
lods
jl
sti
les
cmc
adc
push
loopne
lods
data16
call
pop
and
or
push
cmp
add
sbb
jmp
sbb
pop
shlb
cwtl
repnz
xchg
faddl
int
in
sub
loope
adc
pusha
iret
fiaddl
insl
add
adc
push
loopne
push
sub
xor
lret
xchg
xor
push
das
add
scas
ret
jae
into
shrl
mov
adcl
xchg
repnz
insl
or
sub
in
jbe
mov
sbb
push
lahf
xchg
test
ror
or
mov
loopne
sbb
xor
add
sub
sahf
das
xlat
add
or
push
ljmp
pop
test
movl
inc
push
mov
dec
in
fiadds
rorl
and
or
pusha
push
push
mov
fistl
sbb
xlat
icebp
outsb
sbb
mov
ljmp
or
cmc
mov
push
cwtl
enter
jb
lods
fwait
add
pop
insb
mov
shrl
loop
sbb
popf
shll
or
cmp
movb
fistpll
pop
outsb
push
add
xchg
mov
sbb
add
add
dec
stc
data16
adc
sbb
xor
js
push
test
push
rcrb
loope
or
clc
mov
lods
test
jle
adc
iret
xchg
cs
sti
xchg
adc
sub
sbb
add
aas
mov
jge
sarl
xor
sub
pop
mov
fsubrs
push
and
inc
mov
adc
add
pop
and
xchg
movsl
pop
out
mov
lods
or
mov
inc
add
clc
sub
sbbb
out
add
add
sbb
mov
ja
clc
sbb
outsb
pop
leave
out
lds
and
std
lds
push
mov
push
int
cmp
outsb
fimuls
into
or
hlt
mov
dec
test
mov
inc
loope
andb
mov
inc
scas
jmp
push
sbb
daa
rcll
jb
jge
mov
imul
pusha
xchg
pop
bound
xor
push
adcl
sbb
push
mov
inc
add
or
daa
push
sarl
cld
add
lret
sbb
add
fs
test
int
cmp
push
leave
xchg
lock
pop
push
or
loopne
lahf
out
or
arpl
or
mov
lahf
pop
into
lods
inc
ret
repz
leave
dec
lret
js
pusha
nopl
sbb
sahf
inc
and
jg
into
inc
inc
and
or
mov
movsl
push
sbb
and
cmp
xchg
mov
pop
pop
add
dec
xor
into
mov
xchg
dec
add
pop
jnp
push
mov
insb
add
jge
mov
lahf
xchg
pop
rcrl
inc
clc
and
sub
dec
push
dec
cwtl
into
pop
mov
ficomps
add
xor
xchg
add
inc
lods
pop
mov
ret
das
ss
mov
or
cmp
mov
cwtl
icebp
mov
jecxz
add
arpl
ret
scas
icebp
jae
add
imul
ret
add
inc
subb
xor
adc
or
sbb
das
jle
out
dec
andl
push
in
sub
imul
jb
cs
pop
adc
lret
add
xor
or
xchg
std
xchg
int3
faddl
and
in
sub
mov
xchg
aaa
sub
pop
repz
rorb
jbe
xchg
jge
fsubrp
and
lcall
pusha
adcl
xor
push
lods
dec
adc
push
mov
xor
loope
pop
sub
ret
adc
inc
les
arpl
mov
iret
dec
sbb
notl
dec
adc
adc
xor
push
loope
idiv
pop
or
adc
add
mov
add
loopne
pop
mov
mov
add
dec
jl
rol
xor
out
sub
ljmp
test
in
or
sbb
cli
and
ss
jb
pop
mov
push
adc
pop
mov
and
sub
add
sbb
mov
pop
mov
stc
add
lods
inc
adc
mov
in
scas
xchg
mov
or
cmpsl
mov
data16
out
stc
pusha
aas
and
jp
lahf
mov
and
inc
scas
pusha
lcall
xchg
out
adc
iret
push
es
mov
sar
pop
lods
loopne
mov
aam
loop
mov
test
fcmovbe
add
in
xor
sub
or
and
mov
mov
gs
daa
xor
mov
lcall
pop
xchg
add
enter
mov
out
pop
push
sbb
mov
or
or
adc
in
push
lret
loope
enter
rolb
adc
add
cmp
cmp
aad
add
ss
sub
pushf
in
test
dec
jnp
add
icebp
inc
or
add
mov
out
adc
pop
jae
xchg
dec
add
icebp
jle
and
dec
mov
sbb
sbb
pushf
add
scas
push
add
mov
stc
iret
sahf
repz
nop
std
neg
hlt
jp
pop
cmpsl
xchg
push
enter
inc
sbb
and
push
lods
or
xchg
imul
and
fisttps
fwait
add
popf
bound
fwait
push
adc
mov
std
sbb
xor
sub
shll
addb
rcll
add
push
jmp
iret
addl
ljmp
xor
push
and
cld
adc
mov
dec
and
sub
adc
insb
sbb
add
adc
mov
movaps
dec
add
xor
ds
push
addr16
shlb
ja
push
mulb
les
mov
pusha
dec
out
cld
dec
aad
scas
or
add
xchg
mov
push
cwtl
xchg
add
push
and
sti
insb
add
call
aas
pop
subl
xchg
add
icebp
pusha
fwait
insb
aam
cmpsl
popf
loop
call
nop
sbb
mov
sbbl
je
jge
add
repnz
scas
mov
mov
lods
jl
mov
cmpsb
call
stos
pop
add
pushf
pop
outsb
cld
pop
mov
fdivrp
mov
add
cltd
mov
add
push
ss
jmp
les
sbb
add
xchg
clc
push
lea
subl
add
stc
xchg
fadds
xchg
or
xchg
or
outsl
fimuls
loopne
stc
add
cmpsb
xchg
fchs
into
arpl
sbb
mov
popf
mov
icebp
mov
dec
cmpsl
sbb
enter
movsl
in
and
push
dec
subb
adc
fbld
cmp
inc
xchg
add
add
test
mov
sbb
push
add
dec
daa
push
inc
lahf
jg
out
into
loope
pop
out
sbb
jno
fwait
xchg
add
in
mov
xchg
jecxz
xchg
sbb
in
test
add
add
xchg
insb
mov
mov
xchg
sbb
test
mov
stos
outsl
fldenvs
mov
or
aaa
in
pop
add
test
jp
mov
add
ficoms
add
aam
bound
sti
add
push
ljmp
cmp
mov
xlat
adc
fucomip
inc
loopne
sbb
mov
mov
push
sti
js
and
imul
xor
push
das
pop
loop
pop
add
outsl
std
pop
insl
mov
out
dec
mov
popl
sbb
jge
inc
repnz
clc
ret
hlt
xor
mov
push
jnp
push
push
push
pushf
add
inc
sub
mov
jb
jg
add
or
sbb
or
lds
repz
iret
dec
inc
pusha
jb
sbb
test
enter
mov
imul
ja
cmpb
mov
ficomps
add
mov
adc
das
push
push
test
mov
out
jg
sbb
and
jno
sub
adc
ret
mov
mov
push
jp
push
mov
pop
test
repz
adc
adc
sbb
in
idivb
jmp
or
add
gs
mov
add
mov
add
mov
add
imul
push
sub
std
jmp
mov
adc
ja
add
jne
lcall
les
xchg
adc
fiadds
mull
repz
sub
pop
gs
add
imul
fstpt
push
xchg
mov
rcr
dec
test
xor
sbb
push
divl
lock
repnz
adc
add
int
sarb
and
in
mov
jbe
jp
xor
or
add
jb
outsl
clc
pop
mov
jmp
hlt
das
loopne
push
sbb
in
clc
pushf
add
cmp
stos
push
lea
test
testl
or
add
mov
push
mov
xchg
jno
add
or
scas
add
les
ss
jb
mov
outsl
push
mov
aam
sub
add
mov
mov
int3
and
shrl
add
nopl
lret
clc
xor
bound
adc
movsb
jno
lea
inc
xchg
xor
cmp
fwait
mov
add
imul
subb
loope
lds
inc
jbe
sahf
or
or
mov
xor
xchg
aam
add
jl
mov
inc
and
fwait
ljmp
add
pop
jp
int
sub
pop
sbb
mov
push
sbb
test
add
fisubl
inc
lahf
sbb
jg
add
mov
cmp
fildl
roll
andb
push
add
dec
mov
xchg
loope
mov
repz
add
mov
and
add
test
fldt
imul
and
div
inc
pusha
and
jae
pusha
adc
in
test
inc
mov
pop
add
inc
into
rclb
clc
sarl
adc
hlt
outsl
and
xorb
add
xchg
mov
push
orl
push
fsts
or
cmc
xor
addr16
daa
fmull
popa
cmpb
mov
xchg
add
inc
mov
stc
sbb
and
and
or
cs
dec
punpcklwd
pop
ret
lock
push
jmp
push
clc
jae
sbb
pop
aas
add
xchg
mov
and
jp
insl
loop
add
mov
or
test
add
xchg
push
fnstsw
insb
test
sub
jp
add
push
xor
jb
xor
arpl
inc
jbe
cmpsl
aaa
jg
add
push
inc
or
pop
inc
inc
in
xchg
or
and
out
adc
xchg
xor
add
repnz
pop
cmp
add
or
cmpsb
loope,pn
pop
out
pop
dec
xlat
push
filds
pop
mov
inc
dec
lods
adc
fisttpll
outsl
aad
sub
mov
pop
mov
add
adc
push
into
incb
loope
mov
roll
popf
int3
aaa
xlat
or
adc
or
sbb
add
dec
pop
mov
jecxz
add
sbb
lea
clc
inc
jnp
imul
sbbl
mov
es
mov
insl
add
sbb
roll
hlt
xor
xor
sub
out
cmpsb
repz
add
cwtl
xchg
mov
xchg
imul
push
push
filds
push
and
pop
or
jno
add
xchg
fdivrl
push
add
cmp
sub
es
pop
repz
adc
mov
ror
jecxz
or
in
icebp
add
jp
sbb
aas
cs
mov
pop
les
inc
pop
lret
add
pusha
xor
ljmp
lds
je
into
dec
leave
lea
mov
lods
cmpsb
add
imul
popa
cli
jp
add
adc
add
or
add
mov
sahf
mov
imul
test
pusha
std
cld
pop
pushw
mov
test
add
xor
mov
mov
xchg
out
cmp
movsl
xor
bound
loope
sarl
or
cmp
adc
stos
sub
arpl
and
cmpb
or
dec
push
pop
repz
add
int3
or
out
fsubs
fwait
enter
jne
mov
mov
dec
sub
movsb
sti
inc
int3
movsl
mov
sahf
cmc
fistps
xor
pusha
lea
push
ss
fsubl
mov
outsb
nop
lods
fwait
popa
jecxz
jle
adc
lods
aad
add
dec
push
popf
pop
mov
pop
mov
pop
add
adc
push
loopne
leave
adc
ret
pop
scas
mov
adc
sbb
jmp
add
in
scas
lods
and
jbe
pop
cmc
sbb
add
xchg
loopne
xchg
mov
adc
cmpsl
mov
rolb
xchg
leave
mov
sbb
nop
inc
sub
adc
xor
jecxz
cmpsl
loopne
shrb
mov
lods
add
mov
sbb
fs
and
inc
xchg
adc
or
in
and
loopne
sbb
sbb
imul
cli
fadds
loopne
out
mov
add
or
inc
shrl
and
jecxz
sbb
ljmp
add
xor
in
mov
adcb
sbb
fisubl
cwtl
ljmp
lods
clc
add
movsl
loopne
pop
mov
hlt
cli
mov
outsb
cmc
xor
push
or
inc
jnp
jno
add
addr16
popa
sub
mov
lcall
push
imul
mov
daa
loopne
sti
mov
lcall
icebp
pop
push
call
out
add
ficompl
or
loop
mov
add
sahf
dec
xor
dec
pop
loopne
shll
cmp
push
nop
add
pushf
popf
sbb
push
rcll
and
pop
nop
sbb
jnp
dec
jno
cmp
or
inc
xchg
es
add
popf
fidivs
jae
sbb
xchg
add
fprem1
lea
mov
mov
adc
xor
idivl
popa
add
push
xchg
inc
mov
xor
add
es
add
add
push
bound
push
popl
mull
das
xchg
loopne
push
and
add
add
loope
pop
iret
mov
mov
or
std
imul
add
pop
mov
cmc
clc
pop
xchg
fstl
inc
mov
sub
jno
scas
lea
loope
jno
test
btr
add
int
daa
push
or
or
add
sbb
lods
leave
dec
pop
mov
fldcw
inc
add
in
pop
push
mov
xor
mov
push
popf
les
xor
lret
add
test
mov
movsl
stos
filds
xor
cwtl
mov
or
push
cmp
sahf
mov
xor
shl
and
je
pop
pop
stos
push
fldl
in
mov
jmp
icebp
push
cltd
sub
xchg
pop
aaa
jns
add
lea
jmp
xchg
adc
and
imul
mov
movsb
cltd
push
xchg
aaa
lcall
xor
sbb
and
call
sbb
outsb
mov
cmp
or
aaa
jbe
and
sub
add
sahf
cwtl
mov
pop
test
jb
dec
add
cmp
addb
out
mov
mov
add
jae
and
lahf
pushf
push
add
sahf
add
stos
popa
stc
add
adc
fisubs
xchg
xlat
mov
ficoml
mov
cld
sub
adc
xchg
fwait
popf
scas
fisttpl
add
into
xor
inc
iret
ljmp
loopne
aaa
std
add
fdiv
bound
test
sub
insb
test
add
cs
add
jle
js
mov
data16
lcall
repnz
add
arpl
mov
bound
sbb
flds
push
ret
scas
pusha
outsl
jl
test
xchg
or
mov
mov
sub
stos
loope
lock
das
stos
cltd
or
je
cld
sets
mov
xlat
lods
insl
add
adc
push
movsb
sbbl
lret
xor
add
sbb
jne
sbb
jecxz
aam
cmp
ja
push
clc
into
sub
jbe
or
call
popf
push
cld
mov
adc
push
push
cli
add
out
push
mov
out
add
dec
xchg
sbb
hlt
stos
daa
ret
shlb
jmp
xchg
add
jg
testb
lea
cmp
es
pushf
scas
je
sahf
add
outsl
mov
mov
test
inc
push
push
data16
adc
pop
fcomps
xchg
and
aas
mov
mov
sub
xlat
sbb
push
jmp
cs
popf
xchg
add
aam
xchg
add
jg
xchg
int
int3
dec
add
out
cmp
xorl
lret
sbb
add
mov
pop
std
mov
xor
xchg
jg
cmpl
sub
add
cmp
inc
mulb
mov
push
shrb
sbb
jno
pop
add
xlat
lods
sbb
push
and
cs
repnz
cmpsl
adc
pusha
or
push
sbb
cmp
xor
and
fwait
jo
cmp
xor
scas
mov
lock
fstp
mov
pop
sahf
sbb
gs
xor
mov
xor
sahf
repz
mov
icebp
sbb
dec
in
add
in
je
wrmsr
xchg
mov
or
stos
cmpsl
dec
mov
loopne
lret
roll
mov
adc
into
sarb
jmp
push
adc
push
pop
arpl
push
adc
or
add
inc
lcall
cs
roll
div
std
jecxz
ss
cmp
and
mov
or
divl
fisttps
stos
jbe
mov
push
inc
arpl
imul
nop
shll
cmp
mov
pop
jbe
imul
or
add
fcompl
sti
adc
lcall
fwait
xchg
cwtl
add
jo
add
ret
and
data16
add
js
fistpll
xor
mov
test
xchg
cmp
jno
sbb
mov
and
mov
sbb
jne
cmp
iret
pop
icebp
dec
out
inc
or
cmpsb
leave
dec
cmpl
sbb
lea
clc
xchg
add
inc
xchg
pusha
adc
sbb
std
js
shll
ror
ja
add
lea
insl
and
cs
inc
insb
clc
add
bound
adc
repnz
push
fstpl
mov
mov
adc
mov
or
das
mov
jnp
addl
add
out
pusha
ret
in
ficoms
push
ret
mov
xchg
jle
jbe
add
mov
lods
pusha
jmp
cmp
xchg
mov
and
jg
cmpsl
les
mov
sahf
xchg
gs
jmp
enter
add
inc
lock
rcll
adc
cltd
xor
xchg
adc
sub
jne
movsl
loopne
add
arpl
aaa
inc
mov
pop
fidivs
jb
inc
or
insl
jg
cmpsb
add
pusha
push
daa
mov
shr
adc
sub
jg
jp
xor
call
cltd
mov
and
add
insl
das
pop
add
pushf
add
fcompl
arpl
add
push
mov
pusha
pop
movb
movsb
push
mov
iret
fdivl
ficoms
inc
cwtl
sub
pop
cmpsl
cmpsl
xchg
iret
mov
dec
sti
mov
mov
push
shl
sbb
arpl
dec
pop
jae
clc
or
pop
inc
jns
roll
push
xor
loope
stos
pop
adc
cli
in
arpl
add
pop
sbbl
and
sub
sbb
popf
addr16
mov
loop
or
push
jmp
popa
sbb
or
pushf
lds
adc
fisubs
mov
mov
jns
in
jbe
add
rorb
into
adc
daa
add
pusha
pop
loopne
adc
insl
add
mov
xchg
mov
add
mov
xor
fcom
repz
push
add
nop
stc
adc
push
jno
mov
pop
pushf
lret
add
xchg
pop
mov
adc
subl
gs
lahf
jmp
arpl
aam
imul
dec
ret
push
mov
pop
xchg
cmpsl
adc
add
push
aam
test
sti
push
cmp
jno
cltd
add
repnz
or
mov
inc
pop
add
fdiv
cmp
add
mov
scas
movb
std
push
lret
jno
pop
cmpsb
add
out
sbb
test
nop
xor
movsl
and
push
mov
test
or
and
add
xchg
hlt
inc
inc
cld
jb
adc
push
dec
add
xor
es
and
add
sbb
inc
daa
add
int
adc
inc
dec
jecxz
add
nop
or
test
adc
int3
jbe
jecxz
add
ficoms
sbb
push
lcall
insb
jnp
aas
in
or
cld
es
notb
and
daa
es
loopne
inc
fiadds
sbb
out
xchg
add
and
ds
mov
adc
daa
mov
add
dec
leave
jg
pop
daa
out
fwait
add
adc
testb
fsubs
ret
int
jo
xchg
add
addl
add
mov
sub
loop
out
mov
in
pop
xchg
das
adc
mov
mov
shl
add
xor
adc
idivl
sub
in
mov
add
pop
pop
cmp
dec
mov
fsubr
jecxz
lcall
inc
lea
pop
popa
push
add
iret
mov
bound
and
leave
or
add
and
ret
movq
adc
add
sub
movsb
outsb
add
dec
sbb
jae
cltd
or
outsl
push
xor
add
sbb
push
mov
or
dec
pop
add
jnp
int3
pop
jge
pop
add
repz
into
add
fwait
sbb
adc
mov
movsl
fisubs
jns
call
and
add
xor
loopne
sbb
push
or
jne
cmp
insl
iret
inc
ljmp
add
xchg
into
lds
aad
adc
add
xchg
cld
loop
sub
lods
jae
xchg
lea
rcr
jo
adc
je
fistpl
pusha
rorl
lahf
add
push
or
lock
sbb
add
inc
arpl
or
sbb
shll
popf
adc
out
movb
mov
sbb
dec
aad
scas
mov
adc
inc
and
sahf
mov
dec
pusha
adc
mov
arpl
xor
jnp
ss
add
pushf
add
arpl
imul
jb
aaa
pushf
mov
add
pusha
mov
add
mov
xchg
lahf
add
ja
mov
dec
test
or
das
jl
int3
out
and
loopne
sub
loop
jg
outsl
mov
sub
sbb
jne
push
rcll
sbb
outsl
xchg
lods
repnz
dec
mov
andb
lahf
jge
mov
in
lret
andb
dec
and
pushf
cs
lahf
int
pop
cmpsl
xlat
fiadds
scas
sub
ds
sbb
movsl
adc
in
adc
add
adc
dec
inc
dec
and
xor
out
dec
or
push
cwtl
sub
push
mov
inc
popa
cmp
push
out
es
and
add
fs
shr
fsubl
add
sti
xchg
add
add
cli
pop
pop
and
add
push
ja
or
add
jg
inc
sbb
js
mov
push
cmpsl
pusha
test
ret
and
fcoml
pop
dec
jl
ret
sbb
mov
mov
lcall
xchg
adc
sub
add
mull
ret
cmpsl
add
mov
mov
popa
fisttpl
imul
jbe
cmp
loopne
lock
xchg
cld
push
sbb
stc
sbb
add
jmp
push
mov
jecxz
add
sti
dec
add
cmpsl
inc
imul
shr
and
ljmp
pop
inc
cld
insl
dec
rclb
mov
sbb
inc
out
jo
arpl
cmpsb
adc
ss
loopne
out
in
ret
add
mov
pusha
adc
push
inc
loopne
scas
mov
andb
add
and
test
cmp
sbb
inc
lahf
sub
mov
mov
shlb
xchg
loope
jns
mov
and
testl
add
dec
test
pop
add
xor
inc
aad
mov
cltd
adc
fildl
xor
inc
aad
jbe
add
je
sahf
add
stos
scas
insl
cmpsl
das
and
scas
lcall
cltd
sub
add
xor
and
stos
lock
js
sbbl
lret
add
les
push
xchg
jl
negl
inc
sbb
sub
mov
movsb
subl
push
aas
adc
scas
loopew
ljmp
loope
add
jl
cmp
cltd
movsb
pop
inc
sbb
rclb
mov
test
sub
or
shrl
sub
add
stc
sbb
dec
fidivs
and
adc
sbb
pop
std
and
mov
cmp
jle
cmc
fwait
test
add
push
mov
inc
mov
mov
adc
add
test
jl
add
loop
cmp
dec
sbb
lds
add
aaa
ss
inc
or
pusha
jno
movsl
mov
adc
cmpsl
inc
mov
dec
inc
outsl
mov
stos
es
xor
mov
data16
arpl
test
pushf
adc
adc
pop
jecxz
xor
rolb
jle
adcb
adc
pusha
jmp
jecxz
cmp
adc
mov
pushf
push
xor
iret
in
mov
loop
xchg
stc
lret
ret
shl
pop
sbb
leave
sbb
add
mov
dec
orb
sub
xor
cs
mov
jnp
sub
nop
lret
fldcw
mov
adc
add
adc
mov
int
and
xchg
sbb
daa
daa
jb
xchg
add
push
addr16
outsb
imul
fldt
movaps
lock
lods
jle
int
cmpsb
push
xchg
loopne
shll
fdivl
in
clc
cmp
push
adc
pop
xorl
aas
or
lods
movsb
insl
pop
sbb
mov
testl
repz
dec
jle
sbb
pop
inc
add
pop
push
cmp
fisubl
adc
shl
jp
dec
jne
or
sbb
lret
push
add
into
xchg
jae
testb
sbb
add
es
xchg
fildl
loopne
lcall
sub
pop
cmp
mov
jle
mov
add
not
jg
icebp
inc
cmp
jbe
adc
xchg
mov
pop
sbb
jp
and
popa
pop
mov
aad
or
mov
or
sub
add
pushf
adc
add
dec
pop
add
push
out
dec
xorb
or
int
or
add
repz
popl
xchg
push
jo
std
aad
add
fsubrs
cmc
jecxz
bound
dec
adc
add
out
inc
mov
dec
sbb
sbb
pusha
xor
cmpsl
mov
out
cmp
outsb
add
fstl
loope
mov
push
hlt
sbb
xchg
mov
shll
rcrb
push
imul
in
cld
int3
cmp
loop
push
push
jle
leave
dec
inc
xchg
add
test
or
sahf
add
js
add
mov
mov
data16
lret
dec
clc
add
cld
mov
add
ljmp
xor
or
cmp
sbb
push
inc
inc
test
in
adc
push
xor
subl
in
inc
arpl
fistps
jb
xchg
loope
mov
in
dec
loopne
inc
les
push
dec
addr16
jo
lods
sub
add
int
stc
add
pop
mov
lahf
xor
add
rcrl
jns
mov
icebp
adc
push
fwait
sbbb
pop
cld
inc
jns
mov
rcrl
add
scas
sti
popa
loop
add
and
leave
push
add
outsb
cmpsb
pop
jnp
mov
adc
sarl
add
lds
ret
pusha
mov
aad
xchg
push
faddl
mov
cmpsl
std
or
movsb
mov
add
adc
add
popa
int
dec
shll
js
out
fisttpll
pop
lds
adc
mov
scas
xchg
rcll
jno
mov
sbb
jns
es
push
loope
cmpsb
sahf
mov
jge
adc
jne
leave
insl
loope
jg
sbb
ret
push
gs
shll
call
repnz
dec
mov
das
test
pusha
cltd
cmpl
jp
adc
inc
and
add
call
pop
add
add
push
jo
aam
jmp
scas
std
cli
sbb
stc
shll
das
pop
mov
pusha
pop
dec
xor
repnz
push
mov
leave
loopne
aam
and
push
sbb
add
push
mov
mov
shlb
inc
inc
pop
push
ss
ds
fdivs
sbb
jnp
rcl
fwait
add
pop
leave
popf
jno
xchg
add
test
mov
mov
std
call
cmp
jge
and
pop
or
pop
xchg
push
daa
cmp
mov
repnz
add
adcb
push
add
cmp
fisttpl
fcoml
or
outsl
add
mov
int
cmp
sbb
push
adc
push
or
fcoms
out
and
jno
movsb
call
pop
fstpl
subps
sub
push
aaa
or
sbb
adc
xchg
iret
jo
into
sbb
add
or
add
adc
mov
jbe
test
sbb
ret
add
test
rol
loope
xor
xchg
call
out
mov
sbb
clc
cmp
pop
mov
sub
cwtl
add
xor
in
cmp
pop
jecxz
test
popf
cli
aad
add
mov
sbb
adc
push
popa
add
adc
imul
add
das
lock
add
js
mov
add
lds
insb
inc
in
ss
add
jo
xchg
mov
pushw
lds
aas
adc
lods
pushf
and
adc
add
daa
js
mov
imulb
cwtl
out
call
xor
and
sub
dec
add
xchg
or
scas
push
ret
mov
and
pop
push
lahf
pop
mov
loopne
addr16
sbb
add
iret
dec
xor
inc
mov
loope
jp
mov
aad
jb
add
aas
push
icebp
inc
lret
add
jmp
lea
pushf
mov
add
cmp
add
mulb
icebp
jmp
loopne
dec
iret
cmpsl
gs
mov
xchg
loopne
sbb
xchg
add
pop
or
add
add
sti
push
dec
es
cmpsb
and
add
sbb
packssdw
pop
mov
xchg
mov
fiadds
dec
xchg
outsl
add
mov
mov
jns
in
test
add
sti
cmp
shll
pop
adc
int
inc
or
cmp
push
jecxz
out
call
pop
dec
rclb
push
and
stos
adc
fcoms
test
xchg
cmp
and
int
add
jae
outsb
dec
pop
pop
lea
inc
arpl
dec
mov
pushf
sub
mov
add
mov
gs
adc
push
loop
andb
and
movsl
fldenv
pop
out
push
lods
jnp
dec
add
xor
mov
adc
popa
mov
inc
pop
pop
loop
insl
xor
push
fwait
sahf
je
loop
mov
add
cltd
add
test
adc
arpl
xor
xchg
adc
add
add
cld
xchg
dec
negl
mov
mov
add
mov
pop
ja
sub
inc
ljmp
ret
in
stc
loope
pop
pusha
inc
mov
xor
lds
and
mov
inc
xchg
add
stos
in
jo
sbb
jno
xchg
adc
cld
adc
lods
or
pop
mov
jp
inc
pop
xchg
out
sbb
cmp
dec
lods
cmp
sub
enter
and
stos
and
outsb
lret
and
inc
push
sbb
sbb
faddl
pusha
sub
jb
decb
ficompl
mov
add
xorb
pusha
mov
cs
pop
sbb
add
ljmp
mov
adc
xor
cld
add
and
and
scas
in
adc
mov
push
fcmovne
add
jb
lahf
jle
imul
add
xor
add
sub
push
das
fdivl
scas
pop
ljmp
add
shr
xor
pop
jbe
sbb
lret
push
cmp
loope
pop
pop
adc
fsubrs
popa
jmp
cmp
lock
mov
aas
cmp
or
into
rorl
add
inc
enter
and
jno
jge
lret
xchg
jmp
cs
cmp
lods
push
add
cmp
loope
into
mov
aaa
icebp
cmc
js
sub
add
pop
mov
add
push
shll
inc
mov
mov
mov
popf
je
add
xor
adc
sahf
cld
add
ja
popa
sahf
inc
outsb
stos
add
push
push
pop
push
mov
icebp
out
xcrypt-ecb
cmpsl
or
dec
lea
lock
xchg
or
pop
js
xchg
subl
or
push
pop
cwtl
mov
and
mov
rol
sub
inc
xor
sub
add
xchg
lock
out
mov
mov
mov
add
cwtl
sarl
ljmp
mov
xor
pop
cmpsb
adc
jno
loope
lret
mov
add
test
push
pop
and
cs
cwtl
or
sbb
in
cli
push
jp
add
and
dec
and
xor
sbb
movb
pusha
fnsave
rcr
dec
add
popf
xchg
mov
pusha
mov
out
add
data16
pop
mov
in
jae
pop
mov
or
add
jge
popf
repnz
les
jle
jmp
sti
xchg
jecxz
mov
in
sbb
sbb
add
jmp
mov
dec
and
push
mov
sbb
and
inc
add
mov
stos
test
jb
sub
stos
mov
into
sbb
fmul
xchg
add
sti
lds
mov
fistl
adc
or
pop
push
fisubl
lds
push
and
cmp
or
jbe
lds
fs
jge
movsb
ret
adc
xchg
xorb
pusha
push
jno
fcomp
imul
in
mov
sbb
dec
mov
add
xor
sbb
fsubrs
add
add
dec
addr16
mov
inc
add
mov
roll
jns
push
sti
imul
pop
sub
add
pop
icebp
sbb
aad
loopne
xchg
in
test
jl
aam
jbe
das
test
push
mov
mov
stos
adc
xchg
push
add
xchg
filds
fmull
lock
sub
bound
mov
mov
out
leave
fs
add
mov
mov
xchg
outsl
movsb
add
push
lods
sarb
jp
add
and
loopne
mov
aaa
mov
mov
pop
ljmp
lea
add
in
popa
ljmp
jo
mov
insl
mov
push
out
das
fadds
inc
daa
repz
fstpt
mov
and
sub
xorb
sub
rcl
add
cltd
imul
cmc
or
xor
push
and
cmpsb
mov
in
add
and
mov
in
dec
addr16
outsl
mov
jecxz
push
push
fs
add
inc
or
add
mov
es
outsl
sbb
in
add
inc
out
sub
ds
iret
and
sbbb
ror
aas
std
or
mov
add
movsl
push
sub
pop
inc
cwtl
fmull
mov
add
ljmp
pop
mov
mov
push
mov
inc
lods
test
aaa
roll
sahf
ret
sbb
cli
mov
xchg
pop
mov
add
add
fsubrp
js
into
xor
xchg
sbb
mov
test
add
lcall
sti
outsl
mov
aas
xlat
loopne
adc
adc
bound
lahf
dec
std
pop
add
lods
mov
xor
mov
ljmp
cltd
das
in
stos
add
jle
decb
pusha
cli
fwait
cmp
cwtl
insb
push
push
and
add
push
or
aaa
xchg
in
add
dec
push
in
out
sbb
xor
add
lds
cwtl
pop
push
testl
add
movsl
add
jl
mov
in
mov
je
rcll
jno
fwait
and
adc
sbb
loope
and
add
pop
jae
dec
mov
rcrl
mov
inc
lahf
pusha
add
movsl
orb
add
add
inc
and
add
test
mov
or
push
and
or
sbb
repnz
mov
adc
or
sbb
repz
add
pop
add
fsubrl
daa
addr16
xor
clc
test
cmp
inc
jns
push
pop
sbb
or
call
push
jns
fcoml
jb
jo
jmp
addr16
daa
push
push
push
and
mov
and
pop
push
push
or
sbb
add
cmovp
mov
rcrl
jne
lahf
sub
jg
mov
lcall
clc
lock
add
jge
sbb
shrl
xor
enter
fimull
fbld
xlat
loop
mov
enter
jne
sbb
cmpsb
pop
inc
add
imull
je
adc
mov
sti
sub
jne
scas
sub
aas
mov
xchg
adc
add
sti
repnz
pop
pop
dec
pop
sbb
std
pop
mov
dec
jecxz
aad
mov
loopne
outsb
sub
lahf
mov
sahf
in
pusha
jge
add
jle
push
inc
dec
cmpsb
pusha
push
and
movsl
dec
adc
or
test
adcl
aas
lea
cltd
cmc
sub
fmulp
sub
imul
sbb
insl
add
push
and
adc
movsl
or
cmp
mov
pop
cwtl
addl
sbb
sbb
fisubl
mov
call
loopne
pop
jbe
insl
add
inc
es
fisttpl
fstps
sti
push
push
lret
jns
iret
loopne
jae
adc
cmp
xor
add
add
adc
push
addl
out
movsl
daa
leave
scas
sahf
faddl
int3
shl
loopne
sub
cli
add
adc
filds
push
inc
jo
dec
movsl
cmp
out
mov
push
pop
sub
mov
adc
punpcklbw
ss
and
push
sub
aaa
pop
jae
jp
mov
lea
into
fldl
mov
sub
fdivl
nop
lahf
push
ds
and
push
or
pop
jno
sbb
leave
add
mov
sahf
push
imul
sub
pusha
jbe
enter
mov
add
fs
add
nop
mov
add
repnz
in
pop
cmp
or
lcall
fldenv
or
sbb
pop
into
jnp
inc
into
pop
push
add
cmp
xor
scas
popa
test
loope
adc
jb
int
pop
cmpsb
movl
ss
in
popf
add
mov
jbe
and
test
sub
inc
das
sbb
and
movl
or
cmpsl
ret
cmp
xchg
add
adc
jb
into
or
dec
add
jns
cmp
mov
xlat
jno
stos
mov
shlb
loopne
and
cmpsl
sbb
mov
bound
test
jle
imul
xor
mov
adc
sti
mov
imul
ret
inc
add
test
loop
imul
dec
imul
adc
add
mov
mov
inc
jle
out
inc
cmp
in
in
dec
sub
jle
or
mov
jl
pusha
in
ljmp
adc
ficoms
dec
and
xchg
pushw
mov
add
addb
mov
jmp
cmp
rcrb
sbb
mov
mov
iret
mov
dec
jecxz
pop
shll
js
test
sbb
test
add
iret
and
inc
mov
loope
add
xchg
dec
xor
jo
loopne
fcomps
and
mov
sub
pop
lahf
inc
sti
jmp
cld
or
xchg
roll
cmp
jns
ljmp
nop
sti
push
shlb
and
loope
fists
lcall
dec
and
lret
sar
stc
cmpl
add
or
ljmp
add
adc
ja
mov
xor
pop
jo
xor
or
movsl
inc
xor
add
adc
popa
or
push
insb
push
xor
or
loopne
iret
or
xor
sbb
test
jmp
jb
rolb
fidivl
or
xchg
mov
mov
mov
pop
popa
lahf
mov
add
xchg
sbb
cltd
pop
inc
push
push
loope
xchg
add
rcr
dec
or
mov
frstor
xchg
lret
roll
jne
mov
sub
add
inc
call
sub
or
mov
fs
jns
in
faddl
xor
sahf
movsb
les
roll
xchg
adc
pop
rclb
loopne
xor
cli
hlt
inc
lock
xchg
test
outsb
sub
inc
jns
aad
in
in
out
je
jle
xchg
stos
loopne
mov
adc
fcompl
loopne
imul
cmp
gs
les
mov
insl
xchg
add
lods
xchg
inc
add
and
fdivr
xor
sub
adc
xchg
jae
push
out
popf
pop
pop
inc
xor
dec
rol
hlt
push
loope
jae
and
mov
xor
arpl
xorb
add
rol
int
movsl
add
movsb
ja
jno
enter
andb
into
pusha
icebp
rol
std
and
jp
cltd
mov
dec
sub
pop
or
sbb
or
sub
mov
dec
and
push
stc
int
push
fwait
movsl
jge
inc
clc
xchg
fisttpll
and
adc
cmpsb
xor
mov
add
xorb
ljmp
shrl
dec
lahf
jnp
lcall
dec
int
imul
jle
das
cs
fsubl
jp
cmp
nop
mov
add
int3
lock
mov
mov
lahf
ljmp
or
call
repz
and
arpl
pop
add
pusha
jge
fst
xor
inc
add
test
mov
loopne
mov
add
mov
xchg
bts
xchg
and
jle
push
mov
pop
mov
jno
adc
adc
sbb
dec
int
xlat
pop
stos
add
hlt
adc
test
loopne
js
xchg
lret
push
pop
jl
or
loop
cmc
and
pusha
dec
xchg
inc
jo
fistl
in
pop
into
jno
add
pop
movsb
pop
andl
aas
jg
adc
sub
sbb
add
push
movsb
stos
aad
push
leave
daa
mov
popa
dec
add
mov
add
aaa
int
cmp
push
add
or
sbb
xor
sub
pop
fsubr
adc
pushfw
fwait
dec
testl
add
xchg
stc
mov
inc
mov
sbb
push
and
pop
add
fdivrs
dec
mov
mov
psraw
add
fwait
push
jle
fs
and
iret
pop
and
roll
ljmp
fwait
add
xor
inc
cmp
push
mov
ljmp
cld
mov
or
fsubl
sbb
add
mov
add
test
add
mov
jo
push
call
jle
mov
mov
loop
incb
mov
inc
mov
stos
ret
test
popf
push
inc
inc
adc
addl
cmp
and
loop
push
jbe
sti
stos
push
testb
dec
jl
movzwl
aam
es
test
add
icebp
sub
arpl
jnp
jle
mov
and
fldenv
lret
test
cmpsl
call
mov
adc
lret
lds
scas
roll
test
in
lret
test
and
es
push
sbb
push
pop
stos
add
fstl
cmpsl
add
pop
ret
sub
push
adc
add
mov
sbbl
scas
aaa
xchg
sbb
xchg
xchg
mov
ret
add
lea
add
mov
ja
inc
add
pop
aaa
jp
jno
popf
fidivrs
mov
es
shlb
daa
bound
ror
fiadds
mov
out
jle
aas
arpl
push
inc
repnz
lock
sbb
ljmp
add
into
gs
dec
add
and
add
aaa
lds
adc
push
sbb
daa
jge
call
psrld
adc
mov
jp
incl
inc
imulb
mov
aas
xor
add
dec
jmp
cli
add
and
dec
test
pushf
popf
andl
add
rolb
adc
mov
aad
xlat
add
pusha
or
xor
cmp
lahf
jnp
push
jg
sub
loope
add
lods
dec
dec
fnstsw
sbb
out
dec
aas
loopne
push
push
pop
sbb
sub
loopne
and
sarb
jl
iret
rcrb
mov
and
jns
rcl
add
fstps
inc
pop
sub
pop
cmp
mov
mov
and
ss
iret
movsl
not
mov
add
inc
mov
ret
imul
daa
sbb
mov
aaa
jbe
sub
inc
pusha
add
xchg
int3
add
jo
jbe
int3
add
add
dec
roll
pusha
add
dec
lret
and
out
mov
cmp
movsb
mov
daa
fwait
outsl
adc
mov
in
pop
pop
scas
mov
dec
cmc
and
mov
add
shl
cli
fmuls
fiadds
imul
mov
pop
push
add
sbb
jno
dec
test
and
sub
xor
xchg
es
add
push
jecxz
push
and
test
xchg
mov
fidivrl
xchg
xor
push
mov
lret
icebp
push
sti
jl
daa
gs
cmpsb
adc
push
sub
sbb
pop
stos
jnp
fwait
add
cmpsb
lcall
call
clc
lcall
and
cmp
and
add
ja
movsl
add
pop
repnz
orl
movsb
cmpsl
adc
fbstp
add
mov
shl
mov
lods
and
add
xchg
add
adc
inc
mov
cmp
add
xlat
into
inc
mov
shl
or
popf
push
and
push
out
xor
sbb
and
add
aaa
out
cmp
adc
mov
push
fdivr
and
xor
mov
dec
test
xor
test
fstps
mov
hlt
push
sahf
mov
sldt
shlb
xor
lret
push
negl
sbb
xchg
jmp
lret
xor
stos
imul
mov
mov
xchg
push
cwtl
jg
mov
jge
jnp
sbb
int3
pop
aad
mov
sbb
out
add
and
pop
cmpsl
xchg
cmp
int3
sbb
adc
xchg
xchg
push
icebp
pop
sbb
in
fldenv
lock
sbb
add
xor
fnsave
adc
dec
ret
jp
add
xor
sbb
cwtl
and
ror
jnp
jmp
add
and
mov
add
jb
addb
add
ljmp
pusha
lods
and
mov
cld
add
adc
repnz
ss
sub
pop
imul
xchg
outsl
sarl
push
pop
or
or
mov
sarb
cmp
mov
scas
add
pop
cmp
add
bound
out
cmp
ret
push
dec
mov
sub
jae
loope
cmc
push
mov
mov
loopne
fimuls
and
adc
mov
sahf
inc
jecxz
mov
fisubs
dec
fucomp
pusha
test
mov
mov
push
push
jno
cmpsl
adc
add
cmp
adc
dec
mov
js
lods
shll
pusha
push
sub
addl
ret
sub
sbb
aam
outsb
push
add
dec
fs
ret
inc
and
arpl
push
fstpl
in
mov
adc
xor
sbb
fisttpll
xchg
add
sbb
and
cmp
sbb
pop
add
sbb
xlat
sbb
loopne
cltd
mov
stos
push
xor
aad
outsb
mov
pop
sahf
outsl
inc
mov
ljmp
shlb
jae
xchg
adc
test
mov
pop
add
cmpsl
xor
or
xlat
add
xor
mov
push
push
roll
int3
les
rcll
jns
adc
leave
fcom
pop
lret
add
adc
mov
xchg
push
push
fisubs
inc
adc
sbb
sub
outsl
jno
fwait
and
cmp
icebp
xchg
xor
movb
add
cltd
clc
xlat
subl
call
add
mov
sub
clc
lea
add
pop
dec
jle
mov
xor
aad
or
xchg
movb
mov
sub
pop
lock
mov
or
ret
cld
loopne
pop
jmp
sbb
cmpsl
mov
pop
jb
dec
lock
hlt
out
in
sub
pop
pop
mov
cmp
add
push
jb
sahf
cmc
or
out
daa
cmp
push
outsl
sub
and
cmp
add
bound
lds
mov
sbb
pop
inc
dec
xchg
or
aam
sbb
pop
mov
ret
push
movb
mov
ja
pusha
inc
xlat
arpl
stos
mov
shll
outsl
nop
mov
mov
cs
popf
sahf
and
in
pop
xor
jnp
loope
sbb
pop
push
or
pusha
mov
xchg
in
mov
add
or
add
mov
movsb
and
push
and
push
inc
inc
xchg
inc
or
daa
sbb
adc
std
adc
xchg
add
xchg
mov
inc
dec
xor
fnstsw
and
xor
sbb
xchg
add
stos
das
inc
dec
mov
adc
lret
fisttpll
jge
sbb
ficompl
imul
adc
dec
jbe
test
add
pop
adc
push
nop
pop
addb
add
mov
cmp
dec
cwtl
jo
xchg
movsl
ljmp
lret
mov
addl
add
movsb
into
add
push
jmp
or
mov
dec
mov
add
addr16
cmp
rol
mov
aaa
mov
imul
xchg
scas
mov
stc
ret
leave
loope
xchg
mov
shrb
ret
add
sbb
std
mov
ds
sub
sbb
mov
xlat
inc
xor
outsl
adc
cmp
aad
mov
add
test
iret
scas
pushf
enter
add
icebp
mov
xchg
adc
xlat
popl
xor
add
mov
aam
add
mov
push
ficomps
mov
dec
pop
dec
test
insb
bound
rorb
pop
xchg
dec
dec
cmc
shlb
mov
mov
int
add
jp
xchg
dec
adc
imul
cmp
hlt
adc
js
push
cmp
or
add
sti
cld
loopne
stc
and
pop
or
rorb
pusha
add
xchg
push
adc
stos
pop
jge
xor
add
pop
jp
mov
into
mov
aam
sub
out
sub
aas
cli
icebp
insl
and
push
sbb
lcall
sti
mov
sbb
loopne
imul
sbb
inc
and
adc
cwtl
hlt
add
rol
mov
sarb
incb
mov
push
outsl
ja
lods
dec
sbb
test
sbb
xchg
repz
mov
cwtl
mov
sbb
cs
je
les
mov
xor
mov
fwait
inc
cmp
xor
incl
mov
stc
mov
inc
scas
incb
bound
add
or
or
icebp
xor
or
mov
mov
int3
scas
xchg
popa
rcr
leave
add
pusha
add
lods
cmpsb
cli
mov
inc
sbb
and
repz
or
mov
inc
add
pop
push
xlat
mov
add
cmpsl
add
push
lock
outsb
adc
out
repz
add
cmp
into
dec
add
rcl
andl
mov
add
xor
dec
jnp
and
test
rcrb
xor
or
sub
movsl
shlb
dec
lods
inc
lea
daa
add
push
pop
sub
pusha
addb
mov
or
or
les
mov
sub
add
add
mov
outsl
add
test
aad
stc
push
lds
mov
or
adc
data16
add
add
and
mov
ret
dec
sub
add
inc
jnp
pop
xchg
add
inc
js
sbb
out
pop
rorl
cmp
xor
pop
addr16
pusha
dec
rorl
lret
sbb
sbb
push
pusha
xor
mov
into
push
testb
sbb
cmp
repz
mov
das
or
jg
xchg
fisttpll
lret
mov
mov
popf
fildll
nop
sub
or
push
sarl
loop
lea
dec
and
mov
jecxz
add
xor
push
and
pop
inc
jmp
les
sub
inc
dec
into
daa
jb
add
pop
mov
imul
scas
insl
lcall
xor
mov
mov
sub
add
push
push
adcl
sbb
roll
jnp
inc
mov
add
roll
push
dec
shrb
dec
add
push
xor
filds
add
sub
push
push
mov
adc
xor
subb
pop
push
fwait
mov
out
cmp
cmp
scas
pop
icebp
or
stos
ret
jecxz
arpl
fildl
lock
pusha
hlt
adc
xor
aas
or
add
or
pop
mov
and
fbld
andb
and
faddl
or
jge
pop
cmpsl
mov
stc
sub
pop
in
mov
sub
or
aas
ret
popl
or
test
scas
loopne
jno
xchg
xchg
inc
cwtl
test
ds
ljmp
into
addr16
sahf
add
cwtl
pop
fisttps
or
add
fdivl
mov
fcmovne
pop
das
pop
add
leave
pusha
mov
loopne
mov
xor
pop
jecxz
mov
cli
jnp
add
bound
sbb
ficoms
add
insl
inc
sub
xchg
sbb
inc
add
popa
sarb
hlt
pop
shll
or
adc
in
lods
mov
cmp
add
mov
imul
rolb
dec
mov
imul
jbe
and
sub
inc
popf
mov
sbb
out
xor
cmp
jb
add
mov
gs
cmp
test
add
and
dec
mov
jmp
scas
xchg
pusha
adc
mov
mov
inc
pop
mov
dec
adc
out
push
add
shll
ds
faddl
sarb
out
add
jge
sub
mov
arpl
sbb
add
cmpsb
sbb
cwtl
addl
in
mov
push
mov
and
cmp
adc
dec
and
pusha
leave
push
pop
stos
lcall
cmp
dec
rol
push
inc
sbb
aaa
lret
jecxz
les
jns
pop
push
jnp
add
cwtl
sub
and
mov
add
mov
ret
mov
push
mov
xlat
mov
mov
dec
mov
cmc
fwait
or
xchg
add
ds
push
movsb
or
hlt
out
ret
pop
and
adc
loope
xor
jg
xchg
lods
int3
jnp
repnz
push
add
cmp
and
std
add
cmp
mov
mov
add
mov
adc
push
jnp
cmp
roll
pop
pop
add
mov
add
ret
out
inc
std
add
rolb
mov
out
cmp
sbb
xor
mov
pop
xchg
dec
mov
xchg
pop
cmp
adc
or
and
cmpsb
jne
in
adc
lock
dec
xchg
pusha
xchg
inc
mov
in
movsb
shll
mov
push
xorb
cld
repz
js
push
add
push
jbe
xchg
das
call
or
ja
and
jecxz
sbb
push
pop
jbe
sbb
xchg
jg
es
fwait
aam
mov
pop
daa
jb
sub
rclb
das
and
movsb
sbb
pop
pushf
repz
sbb
fistl
fwait
mov
push
pop
adc
dec
int3
push
pop
push
add
adc
pusha
sub
sbb
dec
fistpll
fcoms
add
jle
arpl
adc
je
pop
pusha
sub
rorl
sbb
sbb
add
xor
and
dec
popa
andb
cs
jo
mov
lret
fsubp
add
in
mov
lret
hlt
push
pop
inc
add
clc
mov
add
loop
mov
add
and
mov
pop
nopl
sbb
add
jb
cmp
sub
ret
movsb
or
loopne
incb
dec
push
or
outsl
test
cmpsb
xchg
subl
repnz
pop
inc
clc
add
loopne
or
add
jle
sbbb
or
lret
add
sub
movb
cmp
cli
xor
out
xor
cmp
sub
mov
or
adc
add
inc
ficoms
pusha
ss
adc
sub
push
mov
ds
imul
sub
add
inc
or
data16
cltd
and
pop
stc
xchg
sbb
enter
mov
push
loope
dec
and
orb
push
add
pop
sub
push
mov
jp
sbb
add
sbb
inc
add
xchg
xor
jecxz
inc
jge
push
cld
pop
je
roll
cmpb
out
ret
std
add
jo
inc
xchg
pop
jae
add
jns
iret
sbb
popf
in
inc
pop
stc
or
inc
sbbl
adc
mov
pop
add
jo
sbb
dec
into
push
out
adc
and
push
out
mov
cmc
adc
pop
xchg
jbe
cmp
add
sti
sbb
xchg
sub
jge
movsl
sbb
stos
mov
fists
daa
in
iret
rorb
xlat
ljmp
add
movl
mov
ja
movsl
pop
icebp
and
test
mov
jg
jge
inc
daa
add
out
icebp
inc
pop
sub
sub
aas
jl
adc
add
sub
pushf
xchg
icebp
or
pop
or
ror
add
mov
movsb
add
and
mov
les
jnp
outsb
and
dec
mov
and
push
call
lahf
mov
mov
pop
push
cmpsb
or
lods
xchg
setbe
xlat
dec
cld
jge
sbb
in
pop
addl
sub
mov
inc
mov
mov
pop
inc
mov
sbbl
fucomi
pop
add
or
aad
jnp
lret
pusha
repz
lret
scas
add
out
cltd
adc
rol
sub
xchg
jbe
addb
mov
mov
add
dec
lock
rcrl
mull
loopne
insb
jo
int
push
sub
pop
cmpsl
gs
cmp
adc
xchg
out
and
sub
inc
fwait
add
aad
fimull
clc
test
dec
cmp
outsl
push
adc
dec
das
in
inc
pusha
cmpsb
pop
add
pop
pusha
std
mov
xchg
fwait
jnp
add
add
addl
cmp
dec
add
aas
mov
add
out
sub
scas
loop
sbb
sbb
add
mov
add
lea
outsb
adc
push
adc
and
addb
cmp
inc
pop
jmp
jo
xlat
lcall
add
inc
inc
xchg
add
sar
mov
add
sbb
cmc
xlat
outsl
pop
add
in
xchg
jge
xor
pusha
cmpsl
mov
adc
test
loopne
or
jno
jbe
cmp
clc
sti
movsl
add
das
inc
scas
inc
data16
popf
icebp
in
inc
xlat
add
loopne
cli
outsl
xor
sahf
add
add
jmp
lcall
push
mov
pusha
out
jge
or
xchg
mov
ss
sarb
cs
xor
out
cmp
sarl
add
shrl
cmp
repnz
inc
jnp
pop
je
sbb
std
mov
aam
and
xor
sbb
lret
arpl
adc
je
add
lock
test
idivb
sbb
icebp
push
add
xchg
ret
mov
and
jbe
and
mov
sbb
pop
nop
sti
add
jae
test
std
mov
xchg
add
popa
mov
xchg
adc
test
add
dec
xchg
loope
add
mov
push
adc
and
les
das
mov
xchg
jmp
stos
dec
mov
sti
repnz
mov
sarl
push
or
popf
dec
sub
cli
cmpsb
sti
hlt
pop
fstpt
ss
jne
add
push
enter
xchg
jb
cmpsb
or
cmp
dec
adc
inc
jns
pushl
daa
das
or
aam
pop
xlat
adc
loopne
into
mov
in
add
leave
mov
add
insb
jle
push
mov
popf
lea
ljmp
fucom
add
cmp
add
jmp
and
fldl
mov
data16
add
sub
fsubl
sbbl
daa
xor
mov
mov
mov
sub
add
in
pop
add
and
sbb
nop
add
ret
xor
add
add
cmc
sarl
repnz
mov
cmp
cmpsl
rcrl
jg
xor
pop
xchg
dec
mov
fsubl
xor
push
pop
jno
cli
dec
sbb
or
ljmp
add
pop
and
lods
add
in
mov
add
daa
hlt
jae
xorl
ficoms
xchg
aam
lea
mov
shll
aad
lock
jge
sub
adc
inc
mov
and
sahf
inc
xchg
add
jge
pop
add
loop
cmc
bound
das
add
cli
mov
lods
addb
outsb
enter
push
jge
dec
in
add
jl
dec
sarb
adc
pop
jg
loopne
xor
arpl
filds
into
mov
xchg
mov
cmp
push
add
ret
xor
pushf
cmc
xchg
add
jecxz
mov
add
sbb
int
sahf
or
lods
or
unpcklps
mov
fadds
jb
aam
gs
cmpsb
test
rcll
add
push
push
sbb
xchg
adcl
jmp
mov
enter
or
mov
sbb
cmp
lret
add
pushf
faddl
pop
jno
xor
mov
dec
ss
mov
add
mov
push
xchg
add
mov
sbb
adc
arpl
fcompl
test
cld
xchg
adc
push
xchg
jl
jnp
sbb
xor
roll
rcl
pop
and
sub
bswap
or
sbb
and
sti
push
xor
add
hlt
sub
loope
dec
add
sbb
xchg
add
jle
js
lret
add
mov
push
cwtl
add
xchg
nop
add
sahf
loopne
addl
xor
pop
lret
inc
and
fistl
lea
daa
div
insb
imul
js
add
mov
mov
loopne
sbbb
adc
loop
imul
fldl
mov
push
sub
cli
imul
pop
into
incl
xor
ficomps
mov
das
shll
mov
or
sbb
fists
out
xchg
ret
je
add
push
bound
mov
add
out
sbb
add
lret
loopne
ss
lcall
cmp
mov
into
xchg
mov
test
xchg
sti
imul
pop
add
test
inc
ja
or
and
orl
jge
add
push
insb
mov
cmp
cmp
add
mov
or
jnp
imul
rcrb
jns
add
and
fwait
add
int
sbb
scas
das
pop
dec
fcomps
repz
and
xor
js
and
addr16
add
mov
popa
push
xchg
xchg
pop
add
sbb
sub
mov
add
stc
mov
stos
bnd
add
dec
push
out
inc
pop
mov
test
dec
icebp
or
add
mov
lock
sbb
sbbb
mov
dec
in
add
test
add
xor
add
call
rorl
sbb
xchg
inc
add
aam
push
add
pop
jg
cld
lret
add
adc
sub
add
hlt
out
pushf
or
dec
inc
lcall
addl
movsl
pop
cwtl
pop
ret
test
mov
int
pop
xchg
orb
and
or
lahf
cmp
mov
dec
pop
das
test
ja
lcall
std
inc
cwtl
add
test
lahf
testb
sarb
popf
repnz
lods
imul
pop
inc
xchg
push
pushf
mov
adc
jmp
popf
int3
adc
mov
cmpsb
add
jo
lods
xor
inc
adc
stos
cmp
xchg
popa
mov
jb
and
push
xchg
gs
ljmp
or
mov
pop
sub
sbb
mov
dec
sbb
lea
sbb
adc
fwait
inc
cmp
loopne
and
aaa
xchg
hlt
add
pop
enter
fldenv
pop
fildll
inc
jp
jl
add
icebp
cltd
iret
add
mov
add
add
pop
jle
mov
inc
and
shl
or
and
aas
pop
js
xchg
dec
sahf
out
mov
pop
nop
inc
push
mov
stos
and
jge
lret
push
cmp
mov
mov
or
cmpsb
in
sbb
fs
jecxz
pusha
cli
and
xor
test
dec
ret
sbb
scas
jo
jecxz
pushf
xchg
push
filds
pop
xchg
or
push
sub
add
sbb
mov
fildl
pop
cltd
add
pop
pusha
sub
push
jmp
push
push
lret
add
loope
fbld
cmp
sbb
pop
jge
xchg
jo
in
mov
adc
fucomp
orb
jbe
jno
repz
mov
push
jns
in
push
roll
scas
xlat
xchg
iret
and
mov
sbb
into
pop
adc
and
push
add
insb
cmp
dec
and
cmpsl
pop
cli
fistl
clc
test
adc
mov
mov
ltr
pop
cmpsl
sbb
add
dec
bound
lock
add
in
mov
leave
cmp
movl
cwtl
add
add
mov
mov
sbb
mov
sbb
mov
mov
mov
dec
sbb
mov
sahf
add
push
iret
inc
dec
and
dec
add
out
adc
inc
and
movl
mov
mov
and
fsubl
fsub
scas
dec
lret
sub
shrl
adc
mov
mov
dec
repnz
lock
andl
call
or
insl
xor
xchg
out
sbb
xchg
js
push
int3
or
sbb
add
mov
sub
fnstenv
adc
add
jne
into
inc
adc
add
fwait
daa
add
pop
cmp
out
pop
push
add
xchg
jb
xchg
mov
dec
sub
xchg
imul
jae
fidivrs
jle
mov
cmpsl
out
cmpsb
add
adc
lods
xor
push
mov
jo
mov
push
add
rcl
adc
ja
out
add
es
add
adc
lcall
push
inc
or
xor
fdiv
add
cli
push
movsl
aaa
add
stos
sub
mov
lods
xlat
aas
adc
add
les
imul
dec
bound
sub
lahf
sbb
jl
cmp
and
testl
or
pop
add
ja
adc
stos
arpl
lds
mov
xchg
inc
mov
fcoml
pop
adc
nop
pusha
jmp
mov
and
jle
sbb
mov
xor
and
and
fldl
push
inc
mov
sub
cmp
aam
xor
mov
imul
ret
add
inc
add
jo
adc
cmpsb
xchg
pushf
loopne
icebp
pop
mov
push
fwait
jge
data16
outsb
imul
fisubrl
iret
jmp
dec
push
sbb
fsubr
addr16
pop
dec
adc
rorb
jmp
xor
add
or
and
jle
pushf
pop
clc
add
imull
je
fstpl
lahf
add
addr16
out
dec
std
icebp
testl
pusha
jmp
dec
call
add
sbb
popf
data16
jmp
out
aad
lods
add
pushf
adc
sub
adc
jno
fistpl
out
jo
outsl
int3
loopne
xchg
mov
dec
add
adc
and
jnp
fldcw
or
sub
lods
data16
mov
fbld
ss
add
fs
add
js
loopne
push
cmp
sahf
and
push
dec
xor
lea
push
sub
add
jp
enter
daa
dec
push
cltd
test
mov
pop
addl
add
fsubr
push
jle
or
dec
xchg
and
ja
cmp
test
test
push
add
stos
xchg
lock
and
cmp
addl
cmpsl
sbb
lods
dec
jnp
lahf
sbb
adcb
out
fiaddl
cmp
jmp
jecxz
push
inc
or
sub
xchg
rcr
push
aam
xorl
xchg
mov
push
hlt
add
jl
xchg
movsl
arpl
sbbl
adc
pop
add
cmp
add
and
or
scas
sub
sahf
lret
int3
add
adc
lds
insl
add
xorb
enter
sbb
adcl
xorb
mov
int3
loope
fadd
int
stos
add
clc
sbb
test
dec
rclb
popa
movsb
sub
xchg
or
add
jne
roll
xor
add
lret
pop
mov
dec
test
ret
cmp
popa
mov
mov
adc
xlat
loope
pop
xchg
adc
bound
push
dec
push
jl
clc
jb
fwait
shlb
xchg
mov
xchg
repz
lret
add
in
sbb
pusha
idivl
dec
adc
add
jbe
sbb
popa
test
inc
mov
scas
xor
in
mov
inc
and
inc
dec
cmpsl
or
push
stc
add
mov
into
add
cli
adc
jne
cmp
add
cmp
pop
add
jne
push
fisubrs
sbb
mov
sub
cld
movsb
in
inc
mov
add
push
insb
inc
add
mov
xor
jno
xchg
pusha
dec
mov
add
sbb
jns
or
cmp
mov
mov
add
test
xor
push
add
or
xchg
xchg
jae
ret
xor
pop
cmpb
add
sbb
add
test
mov
pop
in
mov
add
push
mov
popa
or
push
je
lcall
add
shlb
jle
loope
andl
jb
les
add
leave
add
add
cld
sub
pusha
adc
fwait
and
cmp
jne
adc
mov
push
jge
pop
pusha
shll
jle
or
ja
jb
out
test
jg
add
add
sub
xchg
inc
mov
sbb
inc
mov
es
jecxz
loope
out
cld
adc
and
je
mov
pop
ljmp
sti
mov
and
xor
dec
aaa
and
push
jbe
das
test
sbb
in
sbb
mov
adcb
push
adc
pusha
add
out
inc
mov
inc
or
add
sti
test
ret
jae
push
add
mov
cmpsl
jg
dec
or
mov
jns
inc
or
add
mov
sahf
aad
fisubl
leave
adc
mov
pusha
dec
xor
inc
jno
add
fwait
clc
dec
aad
add
add
inc
cmpsl
mov
cld
pusha
mov
out
shll
pop
add
aad
xor
jmp
cwtl
push
repnz
xchg
mov
pop
fmull
jmp
out
xor
xor
into
insl
cmp
mov
mov
add
xchg
push
mov
add
cltd
das
adc
push
pushf
insl
and
add
jmp
fiadds
sbb
push
jo
add
xor
add
pop
insb
dec
push
add
push
xorb
push
pop
inc
mov
mov
movsl
loopne
push
push
xchg
xchg
push
add
push
cmp
dec
mov
add
and
add
outsl
nop
sbb
add
mov
jecxz
push
loopne
bound
push
cmp
sub
dec
sub
mov
add
jge
push
rcll
push
adc
or
or
xchg
pop
shll
pushf
out
insl
mov
clc
mov
nop
outsl
daa
and
mov
flds
mov
fisttpl
jecxz
jg
orb
jmp
mov
shll
or
push
pushf
mov
sbb
cmp
push
lret
leave
adc
popf
nop
xchg
add
sub
add
sub
add
mov
sbb
sti
into
add
aam
sbb
adc
xchg
std
push
xlat
sbb
icebp
imul
sub
mov
mov
std
push
test
jnp
aad
data16
dec
cmp
add
mulb
rclb
fcoml
adc
sti
repnz
mov
xchg
movsb
popf
mov
jge
cmp
add
in
mov
rol
sbb
loopne
repnz
stos
icebp
sbb
clc
and
mov
jecxz
dec
pop
push
repnz
add
cltd
test
js
lret
mov
jg
out
mov
cmpsb
jo
add
rcrl
add
movsb
test
out
push
into
loope
add
or
andl
sub
add
fwait
cmpsb
rclb
sbb
jbe
inc
pop
aam
sbb
add
loopne
cmpsl
lock
add
sub
cli
mov
inc
out
sahf
xor
and
stc
and
add
add
dec
add
jns
xchg
pop
push
popf
add
iret
enter
dec
bt
or
idivl
jecxz
je
add
mov
add
add
pop
in
test
cli
in
pop
push
int3
xchg
in
inc
adc
add
int
pusha
daa
les
xchg
dec
rcll
and
push
test
decb
or
in
mov
pop
loopne
add
or
je
sub
pusha
mov
cli
mov
xchg
jnp
into
cmp
add
loop
sbb
cs
pop
je
lcall
int3
cmp
sub
cmp
sub
add
shlb
dec
jecxz
lcall
int
ja
dec
out
dec
inc
ret
scas
push
jae
sarb
sub
inc
dec
pop
leave
aad
inc
or
shlb
in
jns
push
fldcw
dec
pop
add
sbb
bsr
pushf
adc
in
and
add
pop
mov
pop
jle
dec
bound
and
cs
testl
and
sub
mov
sti
push
sbb
into
add
cwtl
lret
pushf
and
pusha
outsl
scas
aas
imul
sarl
incb
shr
add
ja
rorb
loope
cmp
call
in
cld
out
aam
add
xchg
sbb
xlat
and
push
js
jp
movsb
inc
loopne
pop
cwtl
lock
add
pushf
and
add
xchg
lods
lahf
in
push
scas
fldl
xor
jle
add
pushf
lods
loope
lods
xor
dec
shll
jbe
mov
dec
add
mov
shll
add
jle
call
mov
das
inc
push
add
cmp
lahf
or
and
int
pusha
sti
mov
pop
adc
pop
push
add
mov
sbb
add
mov
or
mov
push
gs
cmp
cmp
insl
jno
xchg
sti
sbb
and
jle
loop
sub
xchg
jg
adc
js
mov
loopne
insb
adc
dec
lret
xchg
repz
cld
cmp
xor
and
in
sub
dec
imul
into
adc
insl
sub
jecxz
push
lods
add
cmpsb
dec
cmp
lcall
stc
sarb
pop
sub
adc
test
movsl
dec
mov
fs
add
mov
add
repz
or
pusha
dec
pop
sub
or
add
sbb
mov
cmp
sahf
pop
jae
imul
les
loope
pop
xorb
add
enter
imulb
mov
out
inc
mov
add
sub
sbb
sahf
inc
rcrb
int3
inc
xor
imul
loope
xor
jg
jp
add
jnp
jno
add
jns
mov
or
add
xchg
sbb
pop
and
leave
and
dec
sub
jecxz
or
nop
dec
decl
fdiv
shrl
sub
pop
ret
ficoml
add
cmp
add
add
pop
fstpt
gs
loope
roll
mov
lahf
xor
xor
inc
mov
xchg
adc
js
fnstsw
push
stos
test
pop
push
out
or
pop
nop
xor
pusha
out
outsb
or
xchg
add
xlat
mov
addl
inc
lods
int3
js
hlt
jae
xor
leave
or
pop
dec
cmc
cmpsb
xchg
jno
inc
inc
sub
iret
loopne
jmp
ficoms
stos
dec
sbb
pop
sbb
loopne
lea
jnp
push
aaa
adc
mov
mov
flds
in
mov
je
mov
sbb
or
cmpsb
xchg
fidivrs
push
pop
test
add
lret
mov
add
in
adc
insb
movb
xor
ja
test
push
je
ror
sbb
and
stos
test
jne
add
lahf
and
mov
inc
sub
sbb
or
testb
fldl
or
lahf
repnz
sti
and
orl
and
arpl
nop
cmp
cmpl
pusha
cwtl
cmpsl
adc
xor
pop
add
dec
xor
push
add
scas
arpl
push
mov
mov
mov
adc
add
xor
fisttpll
stos
movl
fsubrl
mov
or
xor
sub
cmp
sahf
pop
add
addr16
mov
popf
push
fldl
inc
pop
bound
pop
add
jo
add
cmpl
das
enter
fistpl
and
cmp
xchg
cmpsl
call
js
pop
and
cmc
test
inc
add
addb
push
cltd
add
ljmp
push
and
pop
rorl
hlt
sub
sbb
inc
test
or
cmpsb
add
cmpl
push
andb
xor
sysenter
jle
pop
mov
add
push
and
sbb
outsb
and
lahf
cmp
cmp
imulb
insl
mov
mov
xchg
in
xorl
popf
icebp
xor
lds
add
add
in
test
xor
xchg
test
fisubrl
sbb
add
jl
or
push
push
mov
add
scas
add
es
jnp
mov
lods
add
loope
gs
fadds
sbb
sub
pusha
pop
mov
mov
and
out
fcmovnbe
push
gs
jecxz
add
in
and
adc
shl
inc
das
lds
adc
push
or
or
pop
test
sbb
mov
mov
lret
mov
ret
xchg
in
xchg
add
test
cmp
imul
mov
add
cltd
mov
add
xchg
popa
mov
les
test
and
inc
xchg
sub
add
cwtl
shll
jo
lods
sbb
das
add
push
fists
loopne
jp
sub
push
scas
hlt
dec
fnstsw
bound
loopne
stc
fcmovne
adcb
dec
in
add
cmp
lahf
insl
jle
mov
mov
das
outsl
outsl
rcrl
pusha
pusha
out
push
add
add
sbb
aad
out
dec
add
add
jno
add
in
pop
loope
jns
sub
ret
add
ljmp
orb
popa
mov
jl
adc
add
rorb
int
xchg
xor
add
cltd
lret
sahf
clc
test
add
daa
jnp
addl
sbb
and
sbb
mov
pop
repnz
inc
cmp
add
popf
outsb
in
xor
cmp
jns
mov
pop
out
add
leave
frstor
push
inc
add
pop
sbbl
movl
insb
test
popa
mov
pop
jb
arpl
out
cmp
sbb
inc
out
sbb
sbb
scas
jg
add
sti
and
std
mov
add
xchg
fld1
add
loop
out
xor
xchg
lds
add
jl
pop
push
adc
mov
or
add
out
test
xor
adc
fs
push
sub
ret
into
dec
aaa
adc
mov
fwait
and
sbb
icebp
jecxz
push
cli
sti
inc
loopne
gs
or
mov
or
loopne
jle
out
push
add
aad
idiv
bound
add
enter
xchg
xor
pop
adc
inc
int3
sti
ror
push
pop
enter
rep
int
stos
nop
iret
pop
add
sbb
and
and
add
ret
inc
add
add
push
push
or
std
incl
add
cmpsl
cmp
lock
mov
jge
add
out
add
add
xchg
xchg
inc
into
out
inc
push
push
pop
sub
fstpl
cmp
xor
lock
inc
inc
dec
mov
mov
popf
push
add
nop
inc
push
sub
jle
fwait
out
adc
add
sub
add
add
cltd
jle
into
pusha
repz
mov
sahf
iret
or
sbb
jmp
and
mov
sbb
add
jp
mov
rorl
adc
mov
or
inc
ffree
push
xchg
out
aaa
pusha
movsl
leave
idiv
inc
je
repnz
add
xor
mov
lds
sbb
cli
mov
mov
hlt
flds
subb
xor
pop
push
mov
das
dec
cltd
sub
adc
add
add
sahf
add
out
cmovo
in
sbb
lods
fwait
add
add
add
daa
stc
mov
int
aad
mov
imul
aam
out
mov
daa
adc
sub
fadd
mov
jo
out
lret
mov
pop
adc
pop
jmp
add
aad
loop,pt
outsb
lods
out
pusha
add
sbb
sub
add
dec
or
loope
pop
fwait
sub
jge
ficomps
and
lods
dec
in
lods
popaw
or
sub
adc
mov
les
adc
insl
fidivrs
add
xor
xchg
ret
add
sbb
sarl
shll
lock
int
mov
fcmovnu
scas
hlt
fsubs
and
iret
add
imul
test
push
adc
sbb
cmp
sahf
outsb
ljmp
imull
std
loope
or
andb
addr16
inc
hlt
jns
inc
adc
dec
std
add
inc
adc
xlat
jae
add
mov
mov
sub
mov
sub
adc
xchg
sub
int
dec
lret
pop
inc
or
fimull
sub
rcl
push
pop
or
rcll
pop
inc
arpl
mov
xchg
lahf
adc
pop
cwtl
sub
les
imul
imul
ret
xchg
mov
adc
addr16
andb
cmp
mov
cmc
pop
adc
sub
fwait
and
or
andb
pop
sbb
out
or
push
jmp
les
dec
aam
nop
lods
popf
repnz
pop
jmp
f2xm1
push
jo
inc
add
mov
cmp
out
push
data16
xchg
push
push
pop
andl
dec
cwtl
dec
mov
daa
loopne
push
cmpsl
and
pushf
sbbb
icebp
iret
or
sub
ss
xchg
scas
pop
out
add
jmp
dec
inc
add
sub
bound
jbe
adc
call
pushf
sub
in
xchg
popf
add
inc
sbb
aam
sbbb
pop
shll
inc
add
dec
cmp
loop
add
adc
push
in
add
or
mov
imul
sbbb
out
sub
sbb
add
push
mov
dec
or
inc
xor
sbb
ror
sbb
sarl
out
aaa
add
pop
roll
adc
jne
sbb
add
out
add
mov
mov
jbe
insb
add
mul
sbb
or
aas
xor
xor
adc
pusha
jg
pop
sti
std
rclb
movsl
loope
test
mov
mov
pop
push
mov
sbb
add
inc
ds
mov
and
out
shlb
mov
lahf
or
ret
lret
outsl
in
scas
add
jmp
mov
or
adc
mov
cmpl
repnz
add
adc
jbe
mov
sahf
pop
loope
xor
push
add
mov
scas
or
std
out
add
in
shrl
mov
sbb
jo
nop
lret
outsl
adc
imul
add
pop
and
cmp
and
push
scas
sub
inc
fs
in
add
ljmp
push
inc
adc
pop
or
xor
sti
add
xlat
roll
movsb
sbb
xchg
and
sub
jge
das
pop
jne
adc
dec
mov
and
in
sub
add
popf
movl
jno
lcall
dec
sbb
aas
jae
in
insb
loopne
and
into
sbb
mov
in
push
push
fldl
jae
mov
xlat
sahf
add
ret
fcmovnbe
incb
outsl
push
mov
jnp
inc
roll
out
lods
lds
pusha
pop
orb
sub
add
in
in
clc
inc
aas
test
jnp
andb
bound
add
jno
jl
push
jae
mov
mov
cmp
mov
pop
add
jle
in
mov
cltd
data16
pop
call
fs
mov
sub
fwait
adc
mov
outsb
repnz
sub
push
dec
xor
xor
add
add
add
mov
and
mov
enter
xor
or
lds
push
adc
popa
les
and
add
cmpsb
add
add
lods
and
jle
jne
aad
pop
scas
cld
add
add
cmp
scas
mov
dec
leave
and
andl
lds
movsb
xor
mov
xchg
cmp
sub
adc
cmp
push
mov
repnz
in
lods
pop
pop
cmp
movsb
jl
mov
lcall
mov
sbb
and
data16
or
movsb
or
sbb
inc
mov
mov
inc
pop
cmp
dec
pop
adcl
jo
xor
enter
jns
dec
or
cltd
rcrl
mov
pop
leave
mov
out
and
adc
push
mov
cmp
dec
xchg
mov
add
and
bound
movsl
mov
or
pop
fwait
outsb
loopne
push
mov
data16
scas
sub
sti
add
adc
jl
add
mov
in
mov
lods
mov
push
pop
push
xchg
adc
ljmp
js
repz
add
test
loope
sbb
and
out
push
lret
popa
mov
push
in
rcll
inc
sub
push
loop
les
shr
std
das
xor
faddl
mov
fisttpll
push
add
popf
cwtl
in
sbb
add
daa
mov
rolb
stos
jl
xor
and
in
sbb
out
lock
mov
pop
add
cmpsb
aas
movl
stos
data16
add
jnp
imul
es
daa
cmp
dec
adc
mov
add
cli
lret
jle
not
out
add
pop
pop
cmpsb
xor
add
in
ret
out
lods
aaa
arpl
add
lea
dec
xor
cmp
jmp
ja
int
out
stos
and
out
fmuls
cmpsl
push
movl
cmpsl
cs
out
xchg
dec
call
and
push
mov
sub
pop
jmp
out
jecxz
pop
or
jns
and
movsl
cli
add
pushf
add
add
adcl
arpl
mov
pop
add
into
xor
and
xchg
xor
add
adc
dec
mov
addb
jbe
jge
push
addb
nop
dec
push
sub
mov
jmp
cmp
mov
add
pop
stos
jo
cld
or
fistps
mov
mov
push
ja
fwait
aad
movsw
cs
pusha
mov
call
pusha
cs
icebp
pop
push
sub
pop
lcall
xchg
mov
xchg
push
int
lsl
aad
jp
push
lahf
movsb
push
add
sub
push
loopne
sub
adc
test
mov
cwtl
inc
rcl
cld
ret
add
lds
in
pop
stc
inc
xchg
or
sbb
jb
add
insb
ret
enter
mov
movsb
or
mov
xchg
sbb
and
jl
jb
stc
cmp
add
in
jp
add
popf
cmpsl
jno
adc
jl
das
lods
and
adcb
dec
repz
push
xchg
mov
andl
xchg
jg
lea
push
inc
fimull
ja
cmp
rol
mov
sub
push
loope
xchg
mov
and
sarl
sbb
rcll
roll
or
xor
jmp
push
lahf
cmpsb
add
lcall
punpcklbw
sahf
xor
add
in
xchg
addl
jmp
and
lcall
stos
pop
nop
push
mov
push
pop
add
lock
dec
mov
repz
idivl
and
pop
fidivrs
inc
cmp
inc
call
loopne
ss
sbb
add
loop
mov
or
mov
mov
aas
pop
add
fimull
into
mov
ja
rcll
mov
divl
lcall
ficompl
mov
add
call
pop
arpl
out
unpckhps
mov
ret
xchg
and
adc
inc
cmp
out
push
sbb
ret
inc
je
lock
and
mov
rclb
xorl
fimull
cltd
in
mov
xchg
jbe
and
inc
mov
add
cli
mov
add
inc
mov
gs
adc
popf
maxps
xor
mov
mov
xlat
ret
mov
mov
nop
movd
lods
fstl
dec
xchg
jp
pop
enter
mov
ret
fldl
out
stos
sub
idivl
jb
adc
mov
add
pop
ficoms
arpl
sti
add
std
sbb
add
and
or
mov
sahf
sarb
inc
mov
xchg
rcll
cltd
or
add
mov
dec
stos
pusha
popf
in
cmp
sbbl
out
subl
sbb
popf
test
cmp
xchg
add
int3
lods
shll
pop
add
and
pushf
push
fildl
call
pop
jbe
inc
fcoms
mov
adc
pop
aaa
movsb
gs
push
icebp
mov
aam
das
shl
scas
or
cmp
inc
fmulp
jecxz
imul
dec
daa
add
ljmp
into
aaa
fiaddl
arpl
inc
adc
shrl
adc
pusha
xchg
ret
mov
adc
loop
adc
or
push
movsl
jecxz
gs
inc
inc
jp
int
stos
and
in
jnp
sbb
adc
add
dec
push
movaps
dec
lahf
daa
cmp
mov
mov
push
inc
int
leave
add
mov
jp
and
and
push
or
loop
scas
fsubrl
sbb
mov
data16
inc
push
jl
cmpsl
adc
add
jg
push
mov
sbb
jecxz
push
xchg
leave
push
inc
shrl
jne
hlt
adc
test
mov
shrb
test
shll
and
jge
cmp
mov
mov
add
and
jecxz
push
jne
out
mov
adc
cmp
mov
clc
inc
push
fmull
cmp
or
mov
add
in
lahf
outsl
mov
xor
fmuls
pop
push
push
add
insl
pop
dec
sbb
adc
pusha
jecxz
add
cmp
dec
mov
xor
push
rolb
lea
sbb
pop
mov
or
in
pop
push
rorb
xor
test
jmp
add
or
or
je
scas
pop
inc
cli
adc
stc
ret
add
out
inc
add
std
sub
les
bound
xlat
xor
pusha
stc
loope
mov
xor
mov
mov
xchg
mov
and
cwtl
nop
mov
sub
xor
pusha
pop
aam
add
sbb
ss
in
and
adc
hlt
sub
add
in
dec
add
sub
pop
and
test
adc
aam
cld
xchg
scas
jle
push
adc
xor
mull
add
mov
sub
loopne
out
data16
jp
das
fldl
or
jae
inc
ret
xchg
loopne
ljmp
rorb
lahf
add
or
mov
inc
mov
pop
divl
ds
arpl
push
mov
jbe
hlt
inc
add
xor
dec
in
push
enter
add
push
jo
add
adc
repz
jl
mov
push
cmc
xchg
and
add
cmp
aam
add
dec
add
enter
scas
lahf
inc
rorl
pop
pop
add
mov
movb
out
in
int3
dec
in
xor
addr16
sub
outsb
mov
rcll
pop
loope
outsl
pop
adcb
mov
mov
add
or
cmp
and
mov
fistps
jmp
pop
rorl
loope
adc
add
out
xchg
mov
cmp
sbb
fbstp
push
add
aaa
shr
cmc
xchg
or
and
add
lods
adc
add
aas
mov
sbb
ret
pop
inc
lock
sbb
fsubrs
add
popf
add
loopew
aas
lahf
lds
add
in
and
cltd
fcmovu
icebp
adc
dec
add
push
sub
sbb
in
loopne
je
push
dec
sbb
mov
xor
test
inc
mov
out
add
xor
dec
outsl
xor
push
mov
sbb
add
push
fcompl
cmp
mov
mov
sbb
insb
mov
leave
lcall
pushf
pop
and
aam
in
into
pusha
leave
jbe
das
push
and
scas
aas
out
mov
inc
adc
adc
xchg
inc
xorb
xchg
jne
dec
mov
add
aas
outsl
add
das
jae
in
and
fwait
or
ret
negl
sbbl
addr16
mov
xchg
add
mov
or
out
push
sub
mov
es
adc
xchg
mov
pop
xor
jle
sbb
xor
dec
xor
mov
add
xor
out
mov
inc
inc
ret
outsb
stos
stos
mov
xor
js
cmpsb
mov
in
cmp
add
in
es
jnp
mov
add
or
mov
pusha
push
out
mov
xchg
sub
or
sub
add
add
fcmovnbe
inc
pop
jmp
cmpsl
xchg
cmc
add
out
pusha
inc
mov
adc
pop
test
jl
inc
cmp
imul
int
push
xchg
push
sbbl
aam
pop
out
add
sub
jge
fwait
adc
pop
aaa
faddl
add
cltd
insl
push
filds
imul
or
mov
popa
xchg
gs
mov
mov
fdivl
cvtdq2ps
int
dec
pop
and
add
pop
push
fwait
add
dec
xchg
add
aaa
ret
shlb
lahf
or
out
sbb
ds
lcall
insb
xor
test
sub
add
xlat
sbb
addr16
push
xchg
mov
add
cli
adc
and
fimull
jecxz
push
sbb
aaa
mov
sbb
iret
pusha
jl
movl
scas
add
jbe
cmc
push
loope
scas
andb
mov
pop
mov
sbb
or
mov
jno
rcrb
or
push
test
mov
add
add
ret
inc
fs
add
and
adc
push
pop
cmp
fimuls
pop
enter
cmpl
ret
bound
cmp
int
pop
std
in
adcb
sbb
fs
loopne
sub
add
daa
mov
push
cmp
pop
sbb
add
lahf
mov
mov
lods
sbb
push
insb
adc
lds
lret
push
or
xchg
scas
por
sub
repz
pop
adc
in
pop
jnp
push
add
jle
push
xor
bound
cmp
push
jbe
push
cmpsl
test
out
adc
jb
insl
sti
fiaddl
cmp
add
push
and
jmp
je
dec
test
cmp
cmp
lods
ficompl
push
repnz
adc
add
in
addb
gs
imul
std
add
sbb
sub
mov
loope
loope
cmp
or
or
ds
ret
sbbl
jp
mov
add
mov
xchg
push
repnz
mov
clc
test
nop
xchg
scas
push
add
dec
dec
jmp
and
cmpsb
add
push
call
mov
dec
cld
int
or
scas
pop
or
push
add
sub
iret
push
icebp
aaa
outsl
dec
adc
jne
inc
xor
in
es
lcall
cltd
sbb
into
sbb
mov
or
mov
inc
add
and
add
sub
aad
pop
addl
adc
and
xor
test
outsl
sti
push
hlt
rcrl
ret
mov
jmp
insl
stos
mov
lods
push
movsl
xchg
in
sbb
loop
or
add
mov
mov
ss
push
or
add
push
adc
sub
test
rcrb
pop
mov
push
xor
jmp
jmp
fwait
rcrb
add
mov
jecxz
and
pop
mov
or
add
lret
fcoml
mov
ret
es
pop
add
or
stos
mov
push
add
mov
add
dec
nop
xchg
add
call
repnz
ss
int
lods
mov
orl
popa
stos
jnp
in
lds
mov
pop
sbb
popf
shrl
add
sub
adc
add
jb
cli
sarb
jbe
or
fcmovu
jns
inc
push
mov
push
and
add
aas
mov
rolb
orl
mov
sub
or
mov
xchg
jae
add
pushf
and
add
icebp
mov
fimuls
daa
inc
sub
cld
or
push
or
imul
out
mov
repnz
add
pop
ds
mov
adc
or
jg
lahf
ss
mov
or
loope
scas
fwait
loopne
lret
fimuls
inc
xor
pusha
xchg
mov
mov
imul
out
outsb
and
sub
add
jb
adc
and
das
sbb
cwtl
add
add
dec
add
pusha
or
lret
loopne
notb
cmp
jns
test
shll
repnz
stos
loopne
pop
fnstsw
sbb
inc
notb
aas
cld
add
sbb
xchg
dec
shll
pusha
xor
in
sub
lahf
scas
in
outsb
pusha
shlb
repz
lahf
jb
add
into
jle
cmp
int3
add
jbe
das
mov
push
or
adc
add
sti
popa
lahf
dec
sbb
test
fadd
inc
jnp
and
add
fwait
psubd
into
insb
xchg
lods
pusha
adc
xor
push
sbb
imul
push
test
xorl
lret
add
arpl
ret
push
lahf
push
add
in
add
or
pusha
bswap
push
clc
dec
dec
adc
faddl
sarb
xor
repnz
xor
xchg
adc
mov
add
int
add
outsl
pop
out
lahf
mov
scas
xor
cmpsl
fildl
and
outsl
cmp
add
mov
or
xchg
sti
test
sbb
xor
lret
fwait
loope
lret
or
add
int
jg
mov
adc
inc
lock
push
leave
add
dec
stc
repz
mov
and
pop
in
fisubl
add
sub
mov
mov
cmpb
ljmp
das
scas
pop
cmpsl
daa
push
add
das
sbb
inc
push
pushf
add
dec
lock
sbb
sahf
loope
pop
nop
jg
ret
adc
sub
adc
add
inc
mov
or
add
add
push
mov
jno
add
mov
js
fiaddl
push
add
test
mov
or
rcll
out
or
adc
movb
pop
push
inc
xchg
mov
daa
dec
inc
aam
dec
adc
roll
xchg
outsl
add
xchg
test
adc
fimuls
insl
adc
mov
push
add
sarl
add
lret
add
xorl
insl
mov
mov
dec
fnstenv
lret
and
and
mov
stos
sbb
gs
lods
add
jo
mov
lcall
mov
lods
mov
pusha
cmc
int
pop
out
pop
icebp
aaa
push
inc
cltd
sbb
lods
aam
xchg
xchg
dec
add
loopne
mov
add
adc
pop
pop
jns
xchg
outsb
fcoms
lret
aaa
cmpsl
xor
mov
cs
sarl
add
fnstcw
test
sbb
aam
add
in
cltd
push
mov
ret
dec
add
mov
adc
in
lods
jnp
fs
xor
pushf
cmp
pop
sub
mov
xchg
and
mov
or
and
je
lods
insl
fpatan
pushf
adc
sbb
fwait
ret
mov
add
mov
shrl
add
cmpsl
jecxz
scas
dec
pushf
push
sbb
push
xchg
pop
mov
cmp
and
pop
pop
shlb
add
loope
jle
add
mulb
aas
add
xchg
mov
mov
adc
int
daa
les
dec
popa
pop
testb
sbb
mov
and
ret
iret
xchg
add
pop
inc
push
fldcw
cmp
push
sbb
mov
dec
mov
in
loopne
hlt
out
inc
loope
mov
jo
ret
sbb
repnz
lods
mov
add
fwait
pop
cltd
fisubrs
add
enter
add
sbb
cmp
add
cmp
sti
leave
sub
ror
std
ret
dec
jp
adc
ficompl
add
test
cmp
hlt
mov
arpl
jmp
orb
fldt
mov
mov
leave
sbbl
mov
push
push
add
mov
ss
add
sub
and
jge
cmpb
cltd
loope
loop
mov
testb
ljmp
shlb
repz
jo
inc
add
adcl
idivb
xchg
mov
mov
and
movsl
mov
jnp
and
scas
or
insl
fiaddl
roll
mov
push
in
adc
sbb
xor
stos
fnstcw
sbb
pop
pop
mov
gs
xchg
pop
mov
mov
sbb
lea
pop
add
mov
pusha
scas
fidivrl
adc
out
xchg
pop
imul
sti
add
jns
aaa
insl
rol
adc
std
leave
pop
aas
add
clc
cwtl
mov
adc
dec
sbb
adc
cwtl
gs
popf
cmpsb
and
clc
jmp
or
jae
movl
pop
mov
adc
rorb
lea
fwait
loopne
data16
int
push
lds
pop
lods
and
pop
loope
or
fnstsw
gs
add
mov
clc
test
push
push
xor
xor
jmp
mov
scas
add
addr16
jp
cmp
xchg
sbbl
cmp
push
inc
dec
mov
jne
imul
stos
xchg
mov
rcll
jbe
push
enter
xor
addb
dec
nop
ret
add
push
stc
jp
inc
mov
imul
loopne
into
js
stos
adc
xchg
add
mov
aam
pop
aas
add
cmp
push
sub
repz
cmpsb
insb
sub
xchg
lock
inc
adc
add
sti
das
aad
push
mov
push
movsw
fdivl
dec
das
and
pop
movsb
adc
cmpsb
scas
push
cmp
add
and
out
jle
add
fidivrl
les
rorb
fucomi
lock
sub
std
mov
adc
push
adc
add
jmp
aad
or
dec
mov
out
rcrl
arpl
inc
lds
lods
and
mov
cmp
adc
xor
daa
xchg
pusha
inc
out
loop
mov
add
push
insl
int3
movsl
sbb
mov
xchg
out
jnp
lret
test
push
sub
icebp
cmpsb
cs
in
ret
test
stc
or
and
mov
mov
sbb
mov
push
add
cmpb
adcl
sahf
icebp
add
aad
call
dec
push
xchg
cmpsb
cmp
ss
xchg
xor
cmp
push
add
aad
mov
loope
loopne
adc
push
sub
pop
xchg
loopne
dec
shll
jp
sub
inc
addr16
cmp
gs
std
add
xor
pop
pop
insb
add
repnz
in
sbb
inc
mov
add
push
leave
mov
sub
aaa
cmp
and
xor
insb
pop
pop
or
jl
add
sub
daa
aam
in
add
ficoms
sbb
roll
scas
fwait
jns
pop
loopne
mov
inc
sbb
adc
rcll
mov
ret
xor
test
add
dec
gs
push
mov
xchg
sbb
xchg
xchg
push
stc
loopne
add
pushf
incb
iret
sbb
adc
fwait
in
pop
mov
fnstenv
add
adc
dec
xor
popa
imul
popa
adc
mov
ret
cmpxchg
bound
adc
inc
aad
jo
ficompl
nop
xor
push
pusha
sub
add
mov
test
add
jecxz
inc
add
sarl
mov
scas
jge,pt
adc
add
jg
imul
or
mov
jge
adc
nop
ret
dec
dec
pop
sbb
mov
or
mov
insb
mov
mov
stos
popa
out
fistl
inc
shlb
mov
sub
push
sbb
adc
sub
jecxz
fildl
addl
push
icebp
adc
outsl
mov
out
pop
pusha
inc
xchg
and
popf
sbb
fdivl
xchg
sahf
fidivrl
mov
inc
push
outsb
cmp
aam
ret
imul
sbb
sub
aad
pop
lods
loope
js
add
stos
xor
push
inc
outsl
xchg
or
hlt
adc
faddl
push
flds
add
cmpsl
insb
leave
je
dec
pop
jle
popa
mov
push
cmp
lcall
dec
sub
lcall
cmp
cwtl
cld
xor
fidivs
lods
rcll
and
mov
pop
or
mov
test
pop
lret
outsb
add
xor
jmp
push
sbb
pushf
jge
sbb
mov
push
push
xor
and
and
addr16
pop
cmpsl
inc
call
lds
jbe
addl
pushf
iret
jnp
pop
popf
lret
jae
push
fsqrt
sbb
jne
inc
pop
xchg
mov
pop
jnp
repz
jnp
addl
jne
lods
ss
push
ret
pusha
dec
dec
jbe
mov
jle
and
xor
xchg
add
jns
add
push
add
adc
sub
xchg
popaw
and
movsb
add
jno
test
mov
flds
rcl
das
rolb
fstpl
mov
mov
pushf
sub
add
jo
xlat
mov
mov
mov
in
into
enter
inc
loop
adc
add
lret
sbb
xchg
push
ror
insb
icebp
adc
sub
pop
add
mov
push
loopne
scas
push
mov
pusha
add
sub
jbe
aam
inc
jge
push
inc
sbb
test
fstps
and
lods
jmp
fucomip
es
mov
pop
mov
mov
aas
add
js
add
sub
pop
fstl
add
sbb
call
xor
sbb
repz
out
loope
out
add
mov
je
inc
inc
pusha
outsl
leave
das
in
sbb
pop
mov
divl
xor
in
movd
int
popa
out
sbb
dec
cld
pusha
cmp
loopne
pop
icebp
adc
popf
push
adc
in
push
add
movsb
dec
jp
jo
rcll
adc
int3
nop
dec
mov
imulb
popa
lret
loopne
fistl
pop
outsb
push
or
and
loopne
push
out
insb
and
out
fwait
cld
loopne
dec
and
push
mov
cltd
inc
test
fucomp
cmp
in
adc
cwtl
mov
ret
xchg
js
add
rorb
divl
pushf
mov
jge
adc
jmp
inc
int
cs
mov
pop
sbb
fisttpl
add
mov
rolb
insl
test
loopne
iret
cmpsb
mov
je
adc
sub
mov
add
sub
jg
or
lcall
fildll
cmc
sub
pop
lods
int
xor
adc
and
cmp
clc
shr
push
mov
add
fucomip
in
sahf
enter
jl
and
xchg
xor
cmp
adc
and
lret
les
stos
jb
mov
add
mov
mov
push
outsb
add
lds
stos
add
mov
pop
adc
mov
hlt
mov
lds
sub
scas
adc
xchg
inc
xchg
mov
or
pop
pop
les
xor
nop
mov
out
push
adc
xchg
mull
pop
xor
sbb
and
jge
push
inc
cmp
mov
add
arpl
jg
std
add
xchg
adcb
sub
flds
mov
or
cs
ja
adc
lret
xchg
sub
push
aas
adc
xor
loop
lods
call
add
shlb
pop
out
adc
fstps
jno
fdivl
cmpsl
xlat
call
xor
rolb
leave
jle
outsb
movsb
add
mov
push
add
ds
inc
xchg
je
fiaddl
pop
rolb
mov
mov
jp
sub
add
mov
sub
adc
insb
sub
sbb
add
loop
rcll
aas
push
and
fldcw
pop
sbb
mov
pop
imull
add
cmp
jb
cmpsl
sbb
add
nop
cmpsb
xchg
jg
shll
cmp
das
adc
mov
loopne
cmp
leave
in
push
inc
adc
or
jp
stos
aam
lods
sahf
stos
sldt
push
inc
mov
enter
push
movsb
push
rclb
mov
lods
fwait
mov
cmp
and
out
mov
inc
repnz
sbb
add
pushf
jb
pop
xchg
aad
add
mov
imul
or
or
or
jne
jle
mov
inc
push
adc
push
out
push
out
popa
ficoms
popf
divl
xor
pop
rcll
loopne
add
and
add
mov
adcb
testl
int
xchg
adc
in
jp
inc
push
popl
rcrl
sub
clc
into
mov
fimuls
incb
pop
mov
ret
orb
lods
pop
or
add
sbb
pushf
push
lea
clc
push
jl
inc
add
mov
sub
push
mov
imul
sub
pop
jl
cmp
sbb
push
push
add
popf
sahf
push
pop
mov
adc
mov
or
nop
movsb
loope
adc
gs
sysenter
ss
jb
sahf
dec
int
scas
inc
mov
or
sbb
sbbb
dec
pop
out
add
outsb
sti
incl
push
sbb
cmp
mov
gs
mov
mov
xchg
sahf
pop
insl
jge
add
mov
xchg
sbbb
push
adc
test
stos
add
cmc
sti
repnz
sbb
popa
enter
add
mov
pushf
das
test
or
pop
test
xlat
idiv
lcall
sub
sbb
int3
bound
adc
and
xchg
lret
ss
xchg
dec
xor
jl
cmp
xchg
sbb
fistps
or
cmc
mov
std
add
xchg
lock
push
pop
loope
test
push
mov
add
fiaddl
add
jnp
pushf
rclb
jecxz
xlat
fistl
stc
outsl
sbb
cltd
clc
pop
cld
or
cmp
jmp
cs
rorl
push
sbb
pop
loopne
int3
clc
pop
sbb
push
test
or
add
ret
dec
cmp
scas
stos
loope
loop
and
mov
je
sahf
inc
aaa
mov
jmp
lods
shll
fmul
adc
jecxz
movsl
lret
mov
cs
push
faddp
outsl
cmp
jle
out
fwait
daa
mov
movl
mov
and
ret
out
mull
popa
push
addr16
push
rorb
test
cmp
mov
leave
inc
add
jnp
gs
ud2
xchg
mov
dec
mov
sbb
xor
inc
pop
mov
sub
popf
add
cmp
test
xor
adc
lahf
mov
dec
into
or
add
lock
pop
dec
je
test
sbb
shlb
aam
xor
add
and
fsubl
loope
pop
fnstsw
clc
mov
mov
imul
popf
add
or
add
cld
and
sbb
xor
jae
inc
bound
icebp
test
push
addr16
fsubr
sub
shr
ljmp
rolb
xor
mov
add
negb
adc
in
mov
push
push
adc
cld
pop
pop
add
gs
jecxz
add
lret
mov
add
jle
cmp
adc
enter
push
add
iret
inc
mov
loopne
add
xor
and
add
sub
pop
loopne
sbb
jno
std
sbb
jne
scas
push
dec
adc
lret
shll
pop
dec
stos
cli
popf
pop
stos
add
in
push
add
enter
add
leave
pop
addb
pushf
add
cmpsl
jne
test
imul
dec
cmp
add
ficomps
and
aas
pop
xor
push
mov
cmp
fnsave
int3
rolb
pusha
pop
dec
or
pop
pop
push
adc
loop
jo
add
loope
inc
add
stos
outsb
push
pop
jle
sbb
add
cmpsb
xor
lods
test
fstpl
push
jns
jp
stos
push
adc
inc
jne
push
sub
movsb
test
add
mov
dec
sbb
stos
add
pop
sub
sbb
adc
inc
push
movsb
test
mulb
sbbb
pop
jg
cmp
add
std
sbb
mov
mov
cmpsl
sbb
cli
rclb
test
mov
call
add
ljmp
fbstp
jge
loopne
ret
sbb
out
cmp
icebp
push
dec
outsl
popl
adc
and
mov
cld
xchg
ret
repnz
cwtl
bound
inc
fs
push
adc
jne
cltd
cli
inc
mov
adc
jb
insl
push
int3
adc
adc
test
stc
push
jge
jl
and
add
mov
mov
and
or
and
xchg
loop
andb
xlat
mov
fs
bound
mov
outsl
cmp
add
sbb
ret
out
mov
add
mov
loop
adc
js
fwait
pusha
adc
or
int
adc
push
lret
or
dec
mov
jno
add
mov
cmp
add
daa
or
popl
out
dec
and
test
fimull
mov
or
pop
add
das
fnstenv
pop
mov
pop
hlt
ficoml
dec
fildl
ds
shrl
js
int
mov
sahf
mov
mov
aad
mov
shr
daa
adc
and
sti
dec
mov
iret
mov
in
add
cltd
sahf
sub
test
mov
lea
inc
pminsw
fistpl
testl
in
je
jg
add
into
bound
add
jmp
stos
stos
add
lods
loopne
fstpl
add
pop
fldcw
iret
adc
andb
add
mov
ja
sti
repz
adc
mov
lahf
lds
jmp
test
jae
jne
call
inc
cltd
roll
xchg
add
ss
push
inc
shll
sbb
mov
xchg
add
mov
pop
push
dec
fdivrl
add
sub
movsb
jg
js
inc
xchg
pand
cmovs
jb
out
push
les
and
push
dec
int3
loopne
sub
test
cwtl
sub
sub
ds
push
or
add
mov
sub
add
and
out
or
add
cld
push
ret
add
add
adcl
add
push
pop
xor
es
mov
lods
add
jno
lea
pop
push
xor
jne
or
popl
add
push
dec
test
add
out
sbbl
sbb
push
pop
cmp
pushf
mov
aad
faddl
stos
jne
adc
pop
mov
aas
jmp
mov
sub
test
lea
neg
test
loope
shr
dec
adc
jle
repz
sub
adc
mov
test
and
rolb
mov
addr16
add
sbb
sbb
roll
daa
add
xchg
sbb
and
out
je
pop
inc
jns
push
stos
in
pushf
add
loopne
shll
dec
into
push
fwait
sub
pop
jecxz
loop
jmp
jle
fadd
pusha
aad
test
in
pop
xor
inc
bound
and
lds
push
notb
aas
jnp
xor
fcmovne
sar
gs
adc
in
cli
pusha
punpcklbw
aas
lock
stos
fdivl
mov
xor
ss
add
add
sub
push
mov
in
test
in
add
cwtl
add
mov
inc
jmp
ret
fnsave
je
in
outsb
stos
or
lock
add
xchg
push
in
sub
jnp
cld
mov
scas
ret
add
fidivs
xor
pop
pop
pop
pusha
add
popf
lahf
loopne
scas
sbb
or
fs
mov
pushf
xlat
fnstsw
sahf
rcr
loopne
incb
data16
cmp
add
outsl
aaa
mov
add
clc
insb
sbb
mov
xchg
sbb
call
das
sbb
popl
test
cli
sbb
int
add
cmpsb
adc
jmp
aad
arpl
jl
xchg
pop
add
test
sbbb
sub
cmp
jae
fmull
out
add
pop
lods
inc
fldenv
inc
clc
pushf
sbb
sub
insl
loop
add
add
cmpsl
and
int3
retw
and
adc
push
pusha
insl
loope
fldcw
mov
add
adc
leave
add
xchg
outsb
add
out
aaa
test
pusha
mov
cltd
cmp
insl
cli
dec
jno
mov
aam
xchg
dec
xchg
sub
std
pop
hlt
fstpl
add
dec
mov
or
pusha
fcmovne
test
rolb
pop
xor
push
add
xlat
insb
pop
js
pusha
pop
push
nop
mov
sbb
xor
pop
push
lock
xor
and
add
fcomi
sbb
call
cs
cltd
xor
xchg
jmp
inc
add
insb
bound
cs
dec
popf
pop
add
cmc
aas
loopne
cmp
cwtl
subl
sar
jg
or
mov
pop
lldt
aaa
jl
push
pop
mov
rcll
arpl
mov
mov
loopne
push
sub
cltd
mov
cmp
xor
sti
jp
push
test
mov
icebp
add
add
cmp
adc
adc
inc
pop
xlat
cmp
idivb
adc
mov
sbb
sub
ret
addr16
xor
sahf
jbe
mov
insb
add
lret
mov
jl
xchg
add
gs
lock
jo
dec
outsb
ret
sahf
mov
mov
mov
pop
push
sbb
or
push
cwtl
dec
mov
lock
xor
in
cmp
jo
adc
jmp
dec
adcl
or
ret
mov
jp
clc
add
xor
pop
add
pmulhuw
add
gs
ds
scas
scas
je
lock
es
fildl
inc
nop
or
inc
sub
jo
sub
in
aas
xor
pop
inc
and
repnz
add
dec
or
dec
mov
movsb
adc
stos
in
push
mov
push
push
shr
xor
cltd
add
add
mov
push
addr16
test
inc
jb
cltd
aaa
mov
ljmp
or
or
pop
scas
inc
mov
test
mov
int3
and
pop
imulb
add
jg
mov
cs
faddp
xorl
pop
ret
xchg
inc
mov
enter
repz
lcall
inc
jp
pop
mov
loopne
cmc
push
adc
pop
mov
pop
insl
sub
pop
mov
or
or
and
cli
cmp
mull
and
icebp
mov
mov
imul
cltd
in
push
and
mov
scas
xchg
loope
idivb
std
std
add
sbb
out
pusha
mov
and
cmpsb
jns
sbb
hlt
ret
data16
gs
mov
mov
mov
test
lds
sub
setns
nop
sti
pop
scas
pushf
push
out
loopne
mov
xor
add
insb
call
cmp
cwtl
add
mov
cmp
fildl
add
dec
shl
mov
ja
faddl
mov
lock
cmp
jae
inc
cmp
mov
adc
inc
dec
xchg
xor
loopne
mov
dec
js
or
test
test
mov
mov
add
les
sub
fnstsw
xor
sbb
dec
pop
clc
repnz
insb
lea
mov
or
and
xchg
jecxz
lcall
sarl
inc
inc
or
fmuls
popf
test
jb
loope
int3
pop
out
es
add
sbb
mov
or
xchg
adc
push
sub
add
enter
mov
mov
arpl
cmp
jno
mov
sub
xor
shll
hlt
push
and
cld
sbb
stc
adc
js
xchg
shlb
pavgb
push
es
xlat
mov
mov
mov
add
cltd
aaa
es
js
jecxz
cli
and
aad
push
sbb
lret
lahf
shll
add
loop
lock
ja
and
jb
or
mov
jmp
add
mov
pop
add
into
dec
js
lahf
leave
sub
adc
sub
aas
add
add
or
add
pop
mov
mov
mov
push
cmp
pusha
add
pop
icebp
test
xor
enter
sub
and
jecxz
out
in
filds
sub
mov
sub
lds
nop
cmpsl
or
xchg
sub
loope
sub
pop
or
popf
xchg
or
ja
rcll
add
adc
mov
add
mov
adc
pop
mov
hlt
add
adc
dec
es
arpl
xlat
popa
test
adc
shlb
aaa
mov
add
jle
inc
shll
add
ret
or
jp
jecxz
popa
xchg
add
jae
out
push
add
inc
push
insb
cmp
and
adc
mov
loop
sbb
mov
mov
adc
out
add
mov
int
add
pop
mov
rcr
fs
mov
pop
sbb
mov
mov
cli
pop
adc
mov
sahf
lds
mov
inc
add
sub
jg
adc
loopne
ljmp
mov
cltd
imul
shrl
dec
xchg
mov
add
push
or
jle
fwait
int3
or
sahf
mov
in
add
gs
repnz
push
push
aaa
mov
aaa
push
mov
sbb
pop
dec
out
mov
mov
sbb
cwtl
and
call
xor
and
in
pusha
pop
rorb
sub
add
push
iret
scas
test
xor
add
pop
neg
push
push
les
cmc
out
add
add
and
jp
push
mov
push
sbb
sbb
xchg
mov
daa
xor
roll
lods
jbe
rorl
dec
or
push
mov
or
push
sbb
jle
jno
cmp
addr16
cltd
lret
mov
fsubp
mov
dec
ret
aad
mov
sbb
add
mov
adc
inc
and
mov
adc
in
push
sbb
cmp
cld
loope
shrl
or
lahf
push
ljmp
xchg
addl
jbe
cmp
adc
sti
cmp
aam
sub
sbb
str
stos
and
ret
pop
int
rcll
scas
insb
xchg
incl
cmp
add
sub
xor
pusha
xchg
pushf
xor
les
ficompl
das
pop
sbb
loope
aas
push
add
inc
idivb
mov
pop
ret
ljmp
mov
aad
mov
push
adc
jg
jl
jae
jmp
sbb
dec
loopne
xor
repnz
es
and
push
pop
dec
add
jl
in
jg
roll
pop
jmp
push
data16
xchg
sbb
repnz
std
jne
ret
and
xor
cltd
stos
mov
push
adc
pusha
out
dec
loopne
pop
call
std
scas
xor
loopne
cmpsb
or
xor
pusha
in
pop
pop
nop
loopne
in
lcall
loopne
sbb
and
mov
sbb
adc
outsb
dec
fstps
adc
sbb
push
mov
testl
jp
pop
cmp
lret
adc
jno
cmpsb
fsubr
add
fimuls
add
fstp
push
test
insl
add
ss
jge
dec
sbb
sar
push
fs
cld
scas
jecxz
dec
loopne
ss
mov
out
pop
push
xchg
cltd
cmp
add
adc
xorl
call
push
dec
add
pop
and
jbe
xchg
and
dec
xchg
dec
xor
scas
sbb
adc
add
sarb
pushf
cmpsl
les
rclb
and
sbb
cli
lcall
loope
subl
add
cmp
stos
pop
pusha
sub
inc
jae
push
mov
xchg
out
adc
jmp
dec
mov
or
xchg
sbb
pop
sub
jle
or
incl
cmp
and
push
lods
adc
add
in
fistpl
add
dec
aad
bound
addr16
mov
xchg
mov
cmpsl
add
push
or
das
dec
mov
test
add
sub
icebp
lods
mov
adc
mov
adc
sbb
and
outsb
sahf
add
cs
inc
adc
mov
lea
push
push
or
sbb
add
test
pop
adc
cmp
xchg
xchg
inc
popf
loopne
dec
jle
push
pop
loopne
jns
cmc
ds
jb
aas
loop
jbe
add
test
add
mov
dec
rcr
jno
inc
mov
add
stos
xchg
jl
cmp
shrb
hlt
ret
mov
sub
xorl
pop
mov
sub
add
es
add
into
xchg
pmaddwd
adc
rcr
jle
sub
push
fs
repz
adc
nop
cli
sbb
dec
das
fistl
mov
sbb
repz
inc
mov
enter
sub
fisubrs
test
sub
push
loopne
xor
jl
stc
or
shrb
lret
addr16
notl
inc
mov
pop
add
imul
jae
pcmpgtb
in
adc
or
add
ret
pop
aas
ret
mov
mov
mov
in
dec
in
loopne
add
notl
mov
lea
test
jb
pop
in
push
mov
push
enter
adc
testb
xor
jecxz
jmp
cmp
sub
push
rol
pop
cld
lret
pop
push
mov
stc
add
push
sti
pop
sbb
mul
xorb
mov
and
adc
push
or
clc
lods
add
sbb
cmp
cmc
xchg
ret
arpl
loopne
inc
imull
xchg
push
mov
dec
xorb
out
lock
sub
xchg
cmp
xchg
dec
outsl
dec
and
or
or
sub
adc
cmp
sub
rorl
mov
jne
mov
mov
sub
lcall
push
sbb
out
pusha
nop
imul
les
iret
jae
add
bound
push
push
dec
add
into
inc
add
addr16
repnz
mov
add
ja
xchg
movsb
jo
adc
cmpsb
mov
or
les
roll
mov
cmp
in
je
iret
lahf
out
movsl
and
leave
add
lcall
pop
inc
rcrb
add
loopne
sbb
sub
int
out
adc
ljmp
aad
sbb
mov
and
popf
idivl
inc
loope
and
sbb
xor
fisubl
add
lods
add
sub
repz
gs
or
push
add
dec
aaa
out
xchg
mov
lahf
add
lock
mov
aad
dec
pusha
push
loopne
xor
mov
mov
and
pop
pop
pushf
loopne
ret
xor
loop
mov
xor
push
push
fisttpll
add
dec
testl
jmp
or
movl
bound
mov
enter
or
add
pusha
fiaddl
lcall
je
inc
dec
cmc
cmpsb
add
adc
movsl
in
int3
outsl
mov
mov
movsb
aam
or
cmp
xor
or
ds
stc
xlat
call
adc
dec
lods
sti
mov
scas
push
out
out
cmp
aaa
data16
add
imul
mov
inc
popf
imul
xchg
cs
inc
add
or
xchg
roll
cmp
sti
repz
mov
dec
add
sub
outsb
add
adc
in
add
cwtl
in
nop
jmp
out
sbb
je
xor
lret
push
das
mov
loope
andl
add
push
push
pop
add
jmp
pop
mov
scas
push
add
cvtps2pd
outsb
js
addr16
sbb
out
xchg
xchg
pusha
pop
xchg
mov
in
pop
push
and
and
jl
lcall
outsl
lock
dec
cmp
aad
add
sub
push
loopne
pop
mov
sbb
movsl
loope
jp
xchg
mov
sbb
inc
add
outsl
test
jmp
dec
aam
mov
leave
jecxz
mov
sub
cmpsl
push
mov
sub
fldl
jns
mov
lcall
xor
icebp
pushf
rcrb
push
loopne
add
faddl
add
xchg
pusha
xchg
xchg
and
push
inc
jecxz
add
mov
fidivl
out
lea
jecxz
sbb
mov
fildl
lcall
mov
pop
xor
adc
adc
pop
jge
mov
sub
pop
xchg
ret
jge
add
bound
mov
add
sbb
imul
pusha
add
test
or
xor
aad
jl
ret
mov
sub
stos
addr16
or
dec
or
xchg
pusha
pop
inc
lods
stos
mov
adc
loope
or
es
rcrl
shrl
sbb
add
test
outsb
notb
cmc
inc
mov
or
mov
sarb
stos
pop
or
inc
mov
dec
sbb
push
fyl2x
add
je
add
pop
xlat
add
adc
add
pop
mov
out
adc
fsubl
testb
lock
or
add
xor
mov
jmp
push
sub
xchg
lods
push
sbb
mov
inc
std
jae
lock
jp
push
mov
push
in
inc
jl
adc
and
sbbb
pop
mov
jg
xchg
cmc
adc
mov
cmp
add
lea
out
pushf
cs
imul
jnp
iret
push
in
dec
cltd
push
call
add
or
outsl
ficoms
cltd
pusha
pop
outsb
or
dec
push
add
ja
xchg
cmp
lods
leave
loopne
and
add
xchg
lret
push
outsb
add
fwait
adc
into
loopne
push
rol
mov
inc
es
and
add
adc
imul
inc
and
sub
mov
jl
and
cli
popa
shl
stos
sti
adc
inc
cmc
roll
imul
or
addr16
jmp
inc
sbb
mov
loopne
jl
add
pop
cltd
cs
dec
iret
addr16
adc
jne
mov
rol
and
xchg
add
cmp
das
pop
add
adc
mov
mov
add
loopne
inc
jmp
mov
dec
cmp
enter
loopne
jae
cmpl
mov
adc
test
adcl
cmp
mov
push
mov
or
popa
inc
gs
mov
or
scas
or
sbb
sbb
jle
mov
cmpsl
rcrl
xchg
pop
or
push
jge
loope
push
andb
xor
jne
xchg
push
subl
cmc
or
outsb
or
mov
or
mov
into
ret
cs
and
lcall
xchg
add
rorb
xchg
fisttpl
sub
int
pop
jg
pop
lcall
popf
jle
mov
push
add
xchg
pop
popa
incb
movsb
mov
jmp
fidivs
pop
jecxz
jecxz
adc
into
push
movsl
jb
loope
sub
insl
or
shlb
je
into
out
adc
cmpsb
mov
mov
mov
les
sub
sbb
imull
test
and
testb
mov
add
ljmp
push
jg,pt
out
fdivs
mov
mov
mov
add
int3
negl
leave
and
pop
shll
aam
mov
push
fs
and
add
imul
adc
pop
popa
addr16
add
aam
pop
cmc
verw
pop
in
and
out
cmp
adc
jnp
test
push
xor
loop
sub
lahf
jne
roll
xor
inc
pusha
xor
loopne
xchg
cwtl
inc
and
pop
sbb
sbb
pushf
roll
loopne
dec
jge
mov
test
shll
ja
scas
daa
aas
je
sub
fists
jae
push
mov
sub
xor
test
xchg
push
inc
add
and
ljmp
mov
fstpl
add
fstps
add
add
pop
inc
xchg
mov
inc
and
or
mov
mov
in
and
rol
std
pop
mov
jecxz
adc
sbb
into
add
stc
pop
ds
pop
push
dec
and
inc
sbb
aam
push
push
outsl
or
cs
pop
movsl
sbb
mov
xor
push
jns
push
bound
lock
mov
xchg
and
lret
rolb
test
outsl
xor
enter
es
xchg
add
xor
jg
add
outsl
add
mov
lds
jg
js
push
ffreep
sbb
add
xor
fildl
repz
fiadds
mov
mov
add
sub
adc
add
ficompl
outsl
mov
and
mov
pause
ret
jnp
loope
or
cmp
cmp
jo
add
scas
jb
shlb
cmc
pusha
sbbb
ljmp
xchg
sahf
icebp
pop
or
pop
faddl
out
in
inc
adc
dec
addr16
rcll
add
sar
mov
jecxz
push
mov
imul
nop
fstpl
fsubs
leave
xor
pop
add
int3
sub
lock
and
xchg
mov
add
aad
js
mov
lds
into
add
ja
scas
out
arpl
lods
loop
lods
mov
lds
daa
sahf
nop
add
popf
ret
jmp
mov
mov
jle
lcall
test
loop
or
add
pop
andl
lahf
xor
add
jg
ss
dec
fisttpll
pmullw
jg
inc
in
add
mov
push
nop
xchg
inc
dec
hlt
aad
xorl
mov
int3
sbb
jl
xor
lret
and
add
inc
sar
add
cmc
dec
pushf
in
lret
imul
sub
xlat
pop
lds
add
jbe
and
cmp
jge
pop
push
das
push
adc
in
sbb
lock
rolb
rolb
pop
xchg
fiaddl
dec
mov
sbb
decl
idivl
mov
cmc
enter
fwait
addb
inc
pusha
and
push
add
aad
mov
and
mov
das
faddl
pop
sbb
or
mov
add
out
mov
filds
mov
fs
add
add
testl
pop
andb
xor
push
pusha
sbb
inc
sbb
pop
lds
out
push
push
ss
dec
dec
add
push
test
pop
jb
or
jae
fsubs
aad
sbb
loope
sbb
and
xchg
imul
mov
arpl
out
sub
adc
cmpsl
push
fwait
rcrl
mov
add
or
jno
jnp
lock
cmpsb
mov
repz
push
addl
mov
cmp
outsl
or
lods
sub
xchg
shl
cs
lods
sbb
dec
and
dec
icebp
loop
sbb
sahf
cmp
mov
shrl
rcrb
jp
fdivrp
loope
mov
cmp
sbb
xchg
pusha
test
popf
shl
add
ljmp
and
fwait
jno
or
jb
add
inc
add
and
mov
les
or
in
pushf
xchg
cs
dec
xor
jnp
mov
mov
fldt
fwait
jge
loopne
mov
out
stc
mov
movb
test
cltd
xor
mov
xor
shlb
inc
sbb
cmp
adc
test
arpl
mov
mov
or
sbb
add
adc
mov
push
imul
dec
orl
mov
notb
into
aam
inc
std
loope
aas
rorb
push
adc
adc
addb
jb
pusha
gs
mov
jno
push
pop
jge
es
xchg
and
leave
imul
test
add
daa
mov
mov
xor
into
add
sbb
add
pusha
mov
lcall
inc
push
xor
inc
es
sub
out
into
daa
sbb
lret
mov
cltd
mov
jb
xlat
inc
add
lahf
and
or
sub
mov
add
pop
jmp
add
gs
in
push
bsr
jbe
dec
test
fwait
lcall
adc
movsl
add
add
pushf
inc
andb
scas
or
jo
jns
add
addl
arpl
add
inc
xchg
cmp
rolb
loopne
dec
daa
popa
test
test
aaa
int3
push
scas
adc
incb
jmp
add
xchg
lock
popa
inc
shll
inc
test
test
int3
mov
add
pop
add
lds
xor
push
aam
in
shll
add
jae
mov
mulb
mov
or
cltd
cmpl
in
add
imul
clc
test
rorl
mov
dec
fwait
xchg
xchg
daa
cmpsl
out
xor
add
adc
add
orl
enter
mov
ficomps
adc
shll
jge
arpl
push
and
jnp
pop
dec
popf
scas
addr16
add
jno
stc
fimull
pop
aad
cmc
pop
mov
fmul
es
verr
jno
inc
das
add
inc
ljmp
std
or
pop
adc
add
pop
test
jle
mov
push
adc
jae
leave
out
push
jmp
add
aaa
dec
iret
stc
inc
mov
pop
jp
ds
mov
mov
jae
inc
adc
add
sbb
or
add
jl
mov
add
xchg
mov
mov
push
ljmp
push
mov
fdiv
sbb
mov
sub
ficomps
dec
sti
fwait
add
fdivrl
push
shrl
push
sub
add
cmp
push
push
popa
movl
cmpsb
imul
stos
add
sti
xchg
and
jecxz
jp
mov
sub
add
rcll
cmpsl
pop
jg
iret
adc
push
loop
sbb
sub
add
pop
push
inc
divb
xchg
dec
rcl
add
xchg
jno
mov
xor
pop
scas
sti
pop
jle
mov
loopne
scas
or
jp
shl
pop
add
out
or
sbb
scas
clc
mov
adc
scas
jle
cli
add
jecxz
in
or
test
mov
call
xchg
cld
add
inc
repz
shl
sarl
fs
mulb
push
inc
sbb
push
add
inc
adc
ret
addr16
loope
push
add
push
mov
aad
ret
xchg
mov
cmp
in
ret
sub
loop
add
cmp
pop
dec
loopne
cmpsb
icebp
sbb
notb
lret
inc
jge
dec
roll
out
xchg
insl
sbb
add
adc
jb
xchg
dec
add
jmp
sub
cmp
jmp
add
push
cmpsl
mov
add
pop
adc
mov
bound
cmp
dec
mov
lahf
aaa
js
data16
int
popa
xchg
sbb
stc
mov
push
pop
ror
cltd
pop
out
cld
loopne
push
push
in
sbb
and
sbb
add
shll
sar
pusha
insb
dec
jecxz
bound
gs
shlb
shlb
jecxz
out
add
sbb
fcompl
jnp
pop
lahf
or
add
push
icebp
mov
xor
shrl
lock
jno
loopne
in
push
pcmpeqb
mov
mov
inc
inc
nopl
xorb
xor
add
imul
lcall
xchg
clc
pushf
or
sarl
pop
sbb
fs
out
jbe
scas
addb
ja
out
jl
lahf
ljmp
and
outsl
dec
inc
or
adc
pshufw
sbb
xchg
push
add
sbb
mov
or
adc
mov
stos
push
sub
add
repnz
pop
dec
shlb
add
xchg
add
xor
mov
inc
notl
das
jl
and
enter
mov
or
ss
stc
push
push
scas
into
scas
xchg
aam
push
out
inc
xor
enter
or
mov
push
add
aam
pop
add
lea
in
outsb
add
in
test
hlt
cmp
add
sti
sub
pusha
ja
or
scas
lds
or
addb
hlt
inc
dec
iret
in
out
mov
or
cld
cmp
loope
loopne
add
add
jmp
cmp
adc
mov
flds
aas
mov
lcall
mov
clc
js
fcompl
mov
sbb
cmpsb
xor
maxps
popf
xchg
sub
push
enter
xlat
ljmp
in
lds
add
test
sub
xchg
add
xchg
insb
sbb
inc
fwait
add
push
jge
add
sub
mov
andb
mov
sbb
sub
mov
int3
push
xchg
negl
mov
cmp
add
dec
mov
mov
es
xor
jo
adc
sahf
mov
loopne
shl
add
shlb
loopne
adc
loopne
or
jbe
in
aaa
cmpsb
sbb
or
icebp
les
scas
and
inc
inc
add
jnp
mov
pop
dec
jecxz
fwait
rcrb
jbe
xchg
inc
push
aam
pop
jg
mov
push
test
push
push
pop
sbb
les
mov
inc
push
testl
dec
add
testl
inc
movsb
add
cmpsb
add
jg
add
xchg
ljmp
outsb
sar
roll
lcall
jle
inc
jae
ja
xor
hlt
dec
and
jge
cmp
lds
jo
sti
adc
mov
outsl
mov
pop
cmp
xor
or
fbld
nop
lret
adc
inc
cmpsl
repz
jno
test
xchg
push
mov
add
movsl
jp
lret
movsb
sub
jb
sbb
fxch
es
jnp
jmp
out
adc
ret
repz
adc
fsub
add
pusha
push
leave
jns
mov
adc
test
mov
sbb
adc
pop
les
subl
imul
inc
fstpt
add
fwait
push
xchg
sub
mov
fdivs
enter
cmc
aad
add
lods
mov
mov
push
sbb
inc
insl
or
lods
sti
incb
out
jle
cmp
pushf
loope
and
fs
pushf
dec
and
fwait
cmpsl
xor
dec
xor
sbb
mov
loope
push
addr16
add
mov
xchg
xchg
add
lret
cmpsb
cmc
push
sub
jno
jmp
sbb
pop
add
pop
outsb
popa
aam
loopne
scas
lahf
add
ja
fmuls
in
add
dec
cwtl
mov
add
rorb
mov
xor
pushf
mov
xor
loope
cwtl
inc
add
mov
idivb
ret
lds
mov
lods
cs
pop
or
add
js
sub
xchg
xor
adc
das
mov
fucom
dec
pop
inc
pop
xchg
sbb
clc
test
mov
sbb
add
add
inc
and
mov
cmp
aam
stos
add
mov
cmp
data16
test
push
incl
repnz
add
inc
roll
add
out
add
test
mov
or
mov
cmpl
cli
mov
jle
cld
pop
je
stc
add
fadds
test
mov
ja
clc
add
inc
shl
add
adc
inc
add
or
mov
imul
xlat
dec
pop
mov
aas
and
cld
pusha
dec
add
fcomps
icebp
loopne
lea
ret
fistl
sub
test
or
in
adc
jge
mov
or
dec
adc
setg
and
inc
and
cmp
push
cmpsl
mov
popa
inc
mov
sub
mov
cwtl
jp
add
and
inc
cmpsb
xchg
cmpsl
sbb
ret
dec
scas
add
loop
cmp
pop
sbb
push
mov
outsl
add
mull
add
in
es
loop
bnd
fldcw
sbb
add
lret
cmp
arpl
ss
jle
mov
aad
or
out
pop
dec
lcall
imul
mov
stc
add
fwait
pusha
cmp
ds
add
lret
bound
or
or
cmp
pushf
add
mov
out
xchg
add
les
or
add
lahf
push
xchg
ss
add
dec
cmp
clc
insl
push
add
scas
xlat
test
or
add
inc
push
xchg
and
inc
dec
hlt
roll
mov
and
adcb
lock
xor
cmp
push
xchg
cwtl
add
inc
mov
sub
push
sub
adc
mov
add
pop
xor
movsb
stos
and
repz
imul
imul
lods
mov
xchg
or
loope
sarb
or
popf
inc
daa
rclb
adc
mov
repz
mov
lea
adcb
mov
out
aas
popf
push
add
adc
lods
add
xchg
jle
shrl
loop
and
sub
rcrl
sahf
and
mov
pushf
cmp
pop
addb
jnp,pn
popf
bound
xor
psllq
pop
xor
or
and
add
inc
sub
or
shrl
stos
cmc
inc
and
loop
loope
jae
mov
inc
pop
add
push
cmp
pop
pop
std
addr16
xor
fcmovb
out
cmp
sbb
movsb
add
xor
add
jbe
jl
and
cmc
fnstcw
call
add
aaa
lret
sti
fisubrl
add
ror
clc
in
inc
add
lods
and
sbbl
pushf
add
xchg
add
rcrb
adc
sub
jmp
js
push
les
cld
sbb
push
mov
push
push
jecxz
and
out
add
xchg
sub
add
push
and
test
es
push
or
js
aas
mov
cmp
xchg
outsl
adc
ffreep
repz
call
icebp
call
adc
insb
sbb
ret
and
mov
adc
pop
and
dec
add
mov
addb
sub
orl
movsb
pusha
jg
stos
dec
out
or
addr16
or
cmp
gs
adcl
cwtl
sbb
ret
xchg
mov
and
and
push
pop
inc
loope
adc
stc
mov
aas
push
mov
xlat
inc
push
add
mov
add
cmpsb
ret
mov
jl
insb
add
mov
jne
mov
xchg
jnp
add
cmp
test
xchg
dec
add
pushf
add
into
rclb
sub
xor
call
aas
sbb
dec
xchg
pop
fisubrl
leave
bound
or
sbb
stos
and
xchg
outsl
lcall
jp
les
add
mov
je
sbb
jmp
or
loop
inc
flds
mov
jecxz
xchg
js
mov
into
jnp
push
pop
xchg
sbb
jmp
add
enterw
ds
add
push
dec
std
push
push
add
and
jb
add
or
add
imull
add
inc
adc
mov
and
aad
add
sbb
out
add
jp
test
and
mov
mul
sub
cld
push
xchg
and
cs
outsb
sti
cmp
fwait
xchg
mov
insb
xchg
pop
add
lret
lahf
add
jno
nop
loopne
iret
lret
inc
adc
cmp
popa
sub
fdivrs
push
xor
jae
mov
paddusb
add
adc
inc
repz
pop
cwtl
add
xchg
movsl
xor
xor
imul
or
sarb
movl
das
icebp
jnp
sbb
add
ss
inc
pop
or
push
mov
dec
cmp
addl
adc
aaa
or
push
pop
mov
and
out
mov
sub
sub
mov
sub
fidivs
rcrl
and
sbb
xor
pop
sbb
add
iret
movsl
sbb
data16
or
jle
add
jae
add
xchg
xor
out
push
mov
outsl
add
sbb
inc
adc
add
ds
and
gs
aas
and
cli
cmpsl
sbb
dec
in
sbb
mov
shl
add
lds
add
xchg
mov
xor
add
mov
add
dec
add
push
popf
jne
js
iret
pop
mov
mov
lret
enter
inc
cmp
mov
int
add
int3
out
rol
add
mov
daa
xchg
push
add
or
dec
add
iret
mov
inc
popa
jnp
mov
fnsave
push
cmpsl
jg
adc
jns
mov
xor
push
sub
jl
sbb
dec
pop
push
adc
and
mov
lret
add
lahf
dec
adc
cmp
pop
loope
insl
jnp
popa
cld
pop
lods
loopne
push
adc
shr
dec
add
ljmp
rorl
fdivrs
add
pop
stc
adc
jae
ds
popa
push
int3
or
pusha
and
sub
out
mov
test
sub
loope
jmp
xchg
jns
jecxz
pop
mov
addr16
jmp
dec
sarb
lret
xor
inc
add
pop
hlt
mov
xchg
ret
add
clc
cwtl
dec
push
sbbl
mov
movsb
adc
xor
sub
sar
popf
add
mov
jbe
dec
jecxz
test
sarl
or
test
leave
movsl
xchg
out
pushf
add
inc
push
inc
add
cld
or
andb
mov
add
add
and
sub
sahf
jl
adc
rclb
add
out
outsl
ss
roll
mov
push
mov
fcmove
sbb
jge
or
pop
in
sbb
repnz
xor
or
insb
add
mov
test
enter
test
sub
push
jno
loopne
pop
sti
push
loop
pop
or
pop
jbe
clc
mov
sti
adc
or
or
std
xor
jmp
mov
add
in
sbb
movsl
jno
or
nop
and
fldcw
pop
cmp
popa
inc
jecxz
loop
or
inc
les
sahf
xchg
ficoms
outsl
icebp
in
inc
adc
idivb
pop
or
pusha
xchg
jp
push
and
loope
push
sar
cli
and
mov
inc
sbb
mov
fnsave
pop
fwait
mov
shll
mov
mov
je
or
fmul
add
int
mov
filds
rcll
in
inc
cmp
loopne
bnd
gs
push
sti
repz
add
shrb
sub
loopne
xchg
mov
mov
push
add
lcall
std
lsl
out
ljmp
ret
in
fstl
pushl
add
fimull
add
add
outsb
and
inc
pop
sbb
and
dec
or
sbb
xchg
add
add
int
fs
sub
aas
jmp
popf
adc
mov
sbb
test
add
dec
cmp
add
dec
inc
pop
mov
pusha
cmp
push
ja
lea
push
mov
test
scas
fwait
cwtl
add
push
sub
inc
lret
scas
cmpsl
in
adc
sbb
sahf
mov
fs
push
cmp
or
mov
test
lcall
xor
add
and
mov
sub
pop
xor
push
ret
jecxz
xchg
add
add
xor
add
cmpsb
jmp
add
mov
xchg
movsb
add
push
or
mov
ret
daa
push
adc
add
mov
out
add
je
or
shl
mov
aaa
sti
xor
add
mov
add
pusha
push
and
pop
adc
sbb
pop
pop
sbb
sbb
or
inc
test
pop
stos
xchg
mov
xchg
sub
adc
jns
cmp
inc
popf
scas
jecxz
pusha
jo
sarb
pushf
pop
flds
sbb
sub
mov
cmp
das
in
mov
nop
pop
movsl
mov
dec
add
sbb
lcall
test
cmp
pop
jbe
mov
fsub
in
mov
pop
or
pop
fsubrp
and
cwtl
hlt
lcall
in
inc
orl
add
jbe
push
cli
repnz
add
push
sahf
pop
cmp
mov
ficompl
inc
pop
or
iret
loopne
enter
mov
add
rcrb
mov
pop
pushf
or
push
jae
cli
and
call
push
repnz
push
pusha
lock
jns
or
adc
sub
push
cmp
jo
adc
sub
jno
mov
adc
popa
sbb
xor
pusha
jns
movsb
adc
dec
mov
daa
out
loop
jle
inc
cli
cmp
imul
add
sbb
cld
stos
xchg
mov
cbtw
cmp
mov
cmc
push
pop
pop
pop
fwait
add
subl
xorl
push
push
add
mov
fcoml
mov
rcrl
lods
add
clc
push
add
add
sti
jecxz
push
inc
xchg
mov
xchg
push
clc
mov
cmpsl
aad
out
add
xlat
add
cmp
add
add
ss
test
cmpsl
add
ret
inc
or
stc
dec
xlat
mov
mov
shlb
add
jmp
sbb
cmc
jecxz
ret
dec
pop
xchg
adc
xchg
lds
adc
add
push
sbb
cli
push
add
cmc
cmpl
xchg
cld
push
mov
and
clc
adc
mov
pop
inc
sarb
inc
sahf
cli
add
ret
sbb
inc
sub
loope
adc
jp
and
and
es
add
cwtl
mov
loopne
jge
xor
sbb
fisubrs
xor
xchg
pop
or
or
xor
pop
mov
mov
push
mov
dec
sub
xor
fsub
adc
push
mov
add
cld
push
sub
sbb
dec
push
fmull
cmp
iret
pop
and
mov
pop
push
xor
dec
test
inc
add
pop
sbb
add
xchg
cld
pop
lds
mov
and
jno
add
adc
and
aam
adc
adc
cltd
fiadds
ljmp
mov
push
loopne
jge
cli
push
aas
into
and
ds
lahf
fistps
jp
bnd
jecxz
or
int3
pusha
test
repnz
rol
add
dec
xchg
icebp
and
sub
lcall
xchg
lods
sub
pusha
loop
sub
aam
loope
or
shll
adc
add
xor
imul
test
jo
xchg
ja
pop
adc
sub
jmp
sahf
push
mov
pop
adc
stos
push
add
jno
mov
ljmp
pop
add
ficoml
cld
add
mov
in
int3
and
int3
add
lea
les
add
iret
push
dec
pop
pop
adc
push
xchg
pop
js
push
pop
pusha
int
test
rcll
in
test
clc
or
jmp
movsb
imul
and
int3
insb
aad
add
jg
hlt
test
push
loop
xchg
lods
loopne
dec
lcall
ret
mov
xor
xor
imul
jecxz
and
lahf
mov
lret
call
cmc
pop
add
xchg
push
mov
in
gs
push
sbb
lea
in
std
pop
and
pushf
fnstenv
mov
push
out
and
add
lahf
add
mov
arpl
pop
or
add
push
adc
jp
pop
add
mov
mov
mov
shr
sbb
jne
jg
xor
sub
push
loop
test
inc
and
add
out
repz
int3
cld
pop
shufps
add
cmpsl
xchg
sbb
cmp
jnp
push
movsb
add
int
jne
xchg
jns
add
sub
mov
add
cmp
shll
inc
mov
imul
mov
inc
mov
pop
lock
in
insb
clc
cmp
testb
sahf
add
and
fsubs
inc
rcll
cmp
sbb
or
and
jns
icebp
outsb
ficoms
jno
add
rclb
sub
ret
or
pop
adc
addr16
loope
push
lock
js
into
adc
bound
mov
imul
mov
fwait
push
push
jmp
xchg
sub
add
jl
cmp
add
mov
push
cmp
in
imul
mov
iret
push
nop
out
or
sbb
movsb
repnz
mov
mov
cmpl
outsb
inc
movsl
sar
and
add
cmp
add
arpl
cwtl
jp
add
fld
pop
inc
and
inc
add
or
bound
sbbb
imul
sub
imul
jo
scas
and
fisttps
sbb
or
xor
inc
sbb
sti
and
pop
and
sbb
adc
inc
in
push
add
lahf
jnp
and
mov
cmp
add
add
jb
nop
lahf
sub
jl
inc
push
mov
push
pop
xchg
and
adc
add
push
enter
repz
ret
ret
daa
bound
xlat
push
popa
cmp
ss
ds
xchg
addr16
add
iret
jge
cmp
pop
mov
lret
pusha
hlt
pop
sub
push
and
adc
cmp
andl
dec
inc
mov
shll
aaa
cmpsb
out
add
add
push
leave
into
pop
sub
add
loopne
mov
pusha
dec
shlb
das
stc
sbb
dec
pop
add
cli
and
and
mov
mov
mov
jnp
outsl
nopl
in
in
xlat
dec
push
test
lods
xor
fcoms
cmpl
outsb
sahf
add
pop
push
xchg
and
xor
push
mov
push
shlb
mov
jbe
and
inc
jp
pop
pushf
sbb
fimuls
jecxz
adc
xor
loopne
pop
push
js
je
stc
jne
mov
adc
sub
push
pop
inc
pushf
leave
mov
mov
sub
insb
mov
push
adc
add
inc
adc
loope
sbb
add
das
fcomi
add
es
adc
fwait
fs
notl
shll
jmp
scas
int
mov
popf
outsb
pop
add
fmull
sbb
cmp
int
or
ss
loope
add
mov
xor
pop
icebp
pop
lock
cld
sbb
mov
sbb
incb
and
add
push
jbe
leave
ljmp
sbb
xor
out
jg
cmpsb
add
ja
jae
hlt
xlat
add
mov
mov
cwtl
cld
jo
adc
or
nop
add
push
mov
add
sti
hlt
and
dec
xor
mov
or
inc
xchg
jo
movsb
jg
movl
pop
ja
in
loopne
ret
fldcw
mov
or
sbb
repz
sub
pusha
add
xorb
dec
cmp
stc
frstor
sbb
jb
sbb
xchg
gs
or
mov
je
add
pop
rcrb
cwtl
rolb
xchg
cld
leave
add
mov
int
add
cmc
dec
icebp
inc
pop
push
pop
repnz
pop
pop
sbb
leave
outsl
add
dec
mov
sub
test
pop
sub
stos
lret
fiaddl
cmp
sub
pusha
out
js
loope
adc
cmp
add
add
add
loop
lret
mov
cmp
jnp
or
pop
bound
mov
aad
arpl
jge
loope
xor
hlt
mov
mov
fistl
jbe
add
pop
in
lods
mov
fcoms
xor
jbe
add
push
stos
mov
sbb
loopne
mov
xchg
or
and
lahf
add
addb
jecxz
mov
or
leave
dec
xchg
out
test
daa
lcall
fdivl
mov
inc
jns
sbb
jg
inc
and
jo
sub
mov
xchg
mov
push
mov
inc
dec
hlt
test
jbe
sbb
xchg
neg
inc
add
aaa
and
loope
mov
and
adc
xchg
ficomps
add
or
inc
xchg
movsb
call
mov
out
cli
adc
jmp
add
and
pop
sub
add
out
fdivrs
cmp
adc
adc
pusha
add
ret
stos
es
add
daa
dec
add
sahf
jae
orb
push
adc
and
add
dec
loopne
push
test
xchg
fs
cli
arpl
int
add
xor
out
push
mov
sahf
in
fxch
dec
xchg
je
add
adc
std
jnp
fadds
pop
pusha
and
outsl
xor
xlat
es
mov
aad
jo
inc
push
rclb
subb
sub
add
loopne
inc
nop
gs
pop
push
mov
push
cmpsb
jne
insl
add
add
movsl
mov
xchg
mul
adc
stos
outsb
add
daa
add
shll
cld
cmp
mov
mov
shrl
jmp
cmpsb
lods
ret
xor
mov
sbb
mov
orb
pop
mov
and
adc
movsb
lods
gs
and
popf
push
rcpps
cltd
scas
push
test
stos
sbb
loop
bound
xchg
add
mov
dec
movl
sub
cmpsb
adc
rcrb
popa
loopne
and
imul
xchg
add
dec
sahf
fs
jmp
fmul
loopne
sub
pop
stos
add
ss
stos
int3
jl
add
push
mov
movb
jmp
add
repz
add
jno
int
stos
dec
adc
jg
push
cmp
pop
jecxz
xor
test
adc
sbb
loope
cmp
or
jl
pop
subl
das
xchg
bswap
mov
aaa
sahf
add
sub
pop
ds
sub
addl
rcrl
movsb
imul
jno
add
dec
into
push
add
fsubs
imul
stos
smsw
shrl
cmc
add
xchg
addr16
bound
add
inc
add
mov
mov
or
mov
int3
and
pop
cmc
aaa
pusha
mov
sub
mov
push
and
pusha
xchg
lods
in
add
sub
jge
sbb
ret
mov
mov
mov
flds
and
and
mov
push
sub
movsb
pop
repz
pusha
cmc
addr16
fcoml
outsl
ds
test
out
push
and
add
sub
enter
push
cmp
cmpsl
pusha
inc
mov
dec
ror
add
mov
pop
inc
pushf
push
add
or
mov
add
adc
xlat
aad
jl
sbb
pop
add
pop
popf
mov
notb
xchg
addr16
je
fbstp
and
aam
cli
jge
pop
pop
fidivl
jo
bound
cltd
add
xchg
aam
fwait
adc
popa
push
sbb
or
dec
push
cmpsb
and
mov
xchg
pop
in
ret
test
jo
inc
popa
clc
and
push
push
add
addl
push
dec
rcrl
cmp
je
mov
add
cmp
xchg
cmpb
mov
sahf
push
cmp
insb
push
jp
add
pop
imul
scas
pop
push
addr16
addl
lea
jmp
xor
add
push
clc
pusha
scas
sbb
pop
dec
sbb
adc
push
push
cmp
aam
movsl
scas
add
ret
in
enter
mov
add
add
shl
ret
add
inc
cmp
add
stos
pop
mov
pop
dec
cltd
push
adc
and
mov
inc
pop
movsl
sub
adc
sbb
inc
leave
and
mov
cmp
jno
in
call
cmp
ss
lcall
pop
int3
bound
int
sub
sub
sahf
ret
push
popf
jge
adc
cmpsb
inc
mov
dec
add
xchg
ss
pop
or
arpl
in
sbbl
dec
or
add
cmp
add
pop
pushw
mov
ret
jle
fbld
jmp
push
add
fidivrl
shlb
pop
imul
incl
movsb
arpl
clc
add
test
push
xchg
add
or
lods
in
fdivs
repnz
scas
push
mov
mov
stc
adc
ds
or
into
fwait
dec
mov
add
push
add
fdivrl
insb
arpl
mov
xor
iret
sub
scas
jbe
push
sarb
adc
add
push
lcall
and
popf
mov
add
add
nop
adc
sti
jecxz
add
fdivl
adc
jmp
pop
add
in
mov
push
lods
bound
pusha
adcl
inc
mov
add
dec
inc
or
pop
add
fwait
sahf
jbe
loopne
mov
movsl
mov
inc
popa
neg
inc
fistl
loope
cli
and
adc
cmp
jb,pt
jecxz
test
inc
lock
jne
inc
xchg
imul
ss
push
cmp
fistps
gs
adc
jl
movsb
jno
add
inc
pop
lret
xor
fs
in
test
jmp
movsl
mov
dec
push
ficoml
dec
mov
cwtl
push
outsl
add
and
cld
stc
fdiv
insl
add
orl
fs
repnz
add
pop
lea
fcompl
pusha
xchg
mov
adc
inc
mov
int
cs
data16
adc
dec
jecxz
mov
sbb
and
jecxz
dec
inc
pusha
push
xorl
push
adc
xor
and
lahf
stos
pop
movlps
pop
dec
xchg
cmp
jmp
inc
aad
sbb
cmp
mov
movsl
sar
jp
dec
roll
or
insl
inc
out
jno
ds
into
add
mull
aaa
mov
idivb
inc
cld
js
mov
fs
xchg
out
call
push
adc
lds
mov
sbb
outsb
in
push
fildll
out
add
jo
ret
popf
flds
and
mov
dec
inc
mov
lods
add
fldl
into
cmp
push
inc
add
nop
dec
sbb
xchg
mov
or
lahf
adc
sub
push
and
sbb
push
rolb
movsb
sub
jo
jl
and
dec
imul
jmp
mov
outsb
sbb
add
or
xor
add
mov
jg
inc
sbb
out
pop
daa
push
ss
and
xchg
int
add
in
imul
sub
xchg
rcll
jle
xchg
mov
dec
xchg
fdiv
mov
shrl
ret
mov
dec
repz
xchg
sbb
mov
imul
adc
imul
xor
jae
mov
loopne
jns
push
push
sbb
mov
mov
test
test
cmpsb
and
mov
les
and
push
push
adc
into
or
in
or
xchg
int
mov
dec
or
pop
mov
adc
add
sarl
dec
fldenv
mov
int3
sub
sti
or
shlb
sbb
cltd
sbb
subl
fdivr
sub
dec
data16
outsb
add
sub
loop
stc
pop
stos
mov
pop
add
test
cltd
ret
mov
pop
xchg
or
cmpb
jb
sbb
repnz
inc
shr
inc
pop
adc
xchg
xor
or
jb
fs
aam
sbbl
mov
cs
test
mov
add
dec
add
rcll
stc
or
add
xchg
jb
add
mov
sti
adc
push
daa
adc
or
stos
mov
std
xor
movsl
sbb
xor
in
cmp
sbb
mov
adc
add
pop
pusha
fistl
mov
xchg
sbb
xlat
ret
cld
mov
push
mov
iret
jp
mov
ds
aaa
inc
mov
mov
sbb
jle
push
movsb
add
out
xor
add
insb
mov
lret
xchg
jl
stos
std
outsl
xlat
sar
push
pusha
mov
outsb
xor
sbb
pusha
shrb
ja
ror
cli
ret
ds
add
fwait
mov
test
dec
loopne
out
sub
out
cmp
lahf
and
cmp
iret
lds
jno
adc
add
inc
xchg
dec
sub
popf
add
sbb
sbb
push
mov
call
dec
mov
xor
push
jmp
mov
push
ficomps
movb
jge
or
in
stos
add
testl
loop
inc
das
cmp
push
outsb
call
repz
sub
sbb
adc
dec
cli
push
add
in
mov
cmp
std
test
adc
mov
add
and
test
pop
cmp
jbe
repz
add
loope
and
out
dec
add
push
testl
aam
or
add
mov
and
out
insb
in
or
and
add
dec
jmp
cmpl
adc
data16
add
push
jb
add
dec
sub
movsl
push
push
add
or
pop
fldl
jl
inc
lcall
cmpsb
fneni(8087
adc
loope
or
fcomip
push
cmpb
pop
add
cmp
pop
dec
bound
fdivs
fistps
xor
xlat
lock
push
or
mov
fildll
mov
push
xchg
jecxz
sub
insb
jle
scas
sub
add
pop
add
sbb
lea
mov
mov
cmpsb
loopne
or
or
cmp
adc
xchg
test
and
jmp
cmpsl
and
cmp
stc
pop
enter
push
sub
fists
add
inc
jmp
outsl
push
and
add
in
ret
jge
lret
or
imul
lds
jo
mov
push
or
mov
sbb
scas
mov
dec
adc
add
add
inc
push
mov
add
dec
into
mov
mov
mov
mov
enter
add
mov
xchg
fisttps
or
xor
cmp
pop
js
mov
jae
int3
pop
aad
add
push
xchg
jecxz
sub
loope
mov
in
add
sub
inc
pop
add
jg
and
and
mov
and
xchg
arpl
loop
andl
add
dec
jmp
adc
mov
es
testl
mov
inc
je
icebp
movsl
in
call
scas
loopne
jnp
sub
sbb
cmp
jle
and
push
fs
subb
add
xchg
fsubp
xlat
push
and
add
movsl
add
daa
jae
xor
add
cmp
sahf
inc
les
sbb
add
adc
negl
dec
and
test
add
mov
sti
in
and
jbe
adc
or
jns
shr
pop
pop
fiaddl
pop
addr16
mov
add
lret
inc
jae
repz
insb
and
daa
cmp
shlb
pop
loope
leave
inc
pop
sbb
lock
mov
fwait
inc
cmp
in
add
fidivs
shll
je
out
sbb
or
test
jecxz
add
mov
lods
add
arpl
movsb
add
xchg
adc
imul
add
jp
aas
leave
add
dec
mov
lds
or
add
adc
out
xor
mov
lods
add
daa
push
jl
and
cmp
shll
enter
sbb
xchg
dec
or
sbb
mov
in
adc
roll
lret
xor
xchg
inc
xlat
les
add
pop
stos
inc
dec
sbb
add
sbb
ficompl
cwtl
sbb
mov
dec
out
enter
inc
leave
sub
mov
jg
push
add
push
test
add
or
xchg
fldt
push
fdivrs
mov
push
push
sbb
and
cwtl
test
xor
mov
fisttps
xchg
push
je
push
add
xor
or
add
test
clc
mov
movsb
add
out
outsl
dec
sub
push
inc
adcl
add
pop
mov
rcll
mov
sbb
and
jge
repz
and
nop
adc
in
shlb
ret
mov
or
adc
sbb
or
fcompl
push
mov
xchg
repnz
or
add
ja
fbld
fadd
lock
add
adc
and
hlt
add
ja
push
arpl
int3
mov
shlb
popf
mov
js
cs
jbe
xchg
adc
dec
movl
repz
in
add
mov
sahf
rolb
sub
and
std
xor
jae
push
cltd
push
and
out
push
pop
test
mov
dec
push
fldl
add
pop
shl
or
div
or
cmp
lea
jno
pop
add
out
mov
adc
jp
add
xor
adc
sahf
add
stc
test
jecxz
ret
shlb
xchg
pop
lock
cltd
rcrl
or
outsl
insb
xchg
sbb
and
addl
js
adc
out
mov
or
push
es
orb
jo
sbb
clc
push
jle
add
xchg
ret
or
jne
aad
fs
push
stc
adc
mov
loopne
lcall
jae
loopne
sbb
sbb
and
imul
dec
pusha
add
sub
xor
test
jg
fldcw
loop
cmpsl
movl
and
out
and
inc
cli
cltd
add
push
ljmp
icebp
add
dec
arpl
clc
xlat
cmc
pcmpeqd
mov
jecxz
push
push
imull
add
and
jne
mov
fsts
pop
mov
bound
cld
pop
mov
sub
stos
in
cltd
add
cld
xor
pop
sub
sarl
pmulhw
mov
lock
pop
out
shlb
int3
sub
cmpsb
sbb
pusha
xchg
aaa
inc
push
xchg
mov
pop
leave
addl
inc
add
lods
sbb
add
ret
pusha
fisttps
mov
add
push
cmpsb
add
cmp
in
sbbb
or
lods
sti
add
add
adc
std
fisubl
movsl
mov
cld
ret
loop
or
jle
stos
cwtl
pop
test
punpckhwd
xor
cli
adc
push
mov
xchg
adc
push
push
stos
fndisi(8087
add
xchg
and
test
xor
xchg
sub
adc
and
arpl
dec
mov
loopne
das
jns
in
or
mov
inc
cmp
test
hlt
xlat
add
ss
test
imul
icebp
rclb
xor
or
ret
pop
subb
inc
pop
or
mov
inc
loope
dec
xchg
clc
loope
sbb
popa
hlt
jns
pushf
ret
aaa
xor
sub
pusha
in
mov
je
mov
test
sarl
leave
shll
dec
test
cmp
fnstcw
add
int3
lret
stos
sub
mov
ret
sbb
jno
add
mov
mov
add
lcall
fsubp
movsl
mov
pop
outsl
and
push
cmc
xchg
cs
mov
sbb
adc
or
lahf
push
mov
mov
and
rorl
pop
cli
mov
and
int
ja
cmp
pop
mov
add
mov
mov
jo
ds
out
pop
dec
shll
fwait
cmc
add
pop
fcoms
sahf
push
imul
fiaddl
xchg
jo
or
mov
arpl
sbb
sbb
add
fstps
jmp
mov
adc
jg
fiaddl
aam
loope
daa
add
sbb
xor
inc
aad
cmp
mov
inc
out
add
ffree
jno
or
mov
idivb
sub
add
popf
jl
inc
push
rolb
mov
jle
jno
push
fstps
popa
cwtl
push
lock
mov
into
inc
add
aaa
sbb
add
jp
lods
pusha
xchg
pop
jge
add
test
insb
and
sti
adc
add
gs
insl
xchg
nop
and
les
in
add
mov
ret
adc
aaa
adc
cmp
loope
xor
dec
or
fstpl
and
movsb
enter
cwtl
mov
xlat
add
ds
clc
adc
pusha
rol
push
call
jle
cmpsl
jae
add
sub
roll
or
pop
cmp
outsb
jnp
aad
or
popl
jle
fildl
int3
adc
sub
and
andb
add
in
and
mov
cld
push
sti
pusha
inc
mov
sbb
jge
dec
fs
sbb
or
in
lods
repz
int3
add
mov
rcrl
mov
pop
mov
mov
gs
jb
aam
daa
shrd
dec
ret
cmp
add
je
and
sbb
std
iret
or
stos
loope
inc
push
lcall
and
add
inc
loope
scas
xor
sbb
xlat
push
ficompl
add
mov
cmp
lret
xchg
pop
repnz
add
cwtl
mov
add
mov
scas
sub
pop
incl
xchg
daa
ret
mov
adc
jnp
mov
cmpsl
arpl
inc
inc
adc
cmc
push
daa
jb
insb
cltd
jp
and
add
ss
loope
push
daa
aad
lcall
xlat
adc
pop
inc
hlt
push
mov
add
nop
adc
xor
dec
sahf
jno
inc
mov
popf
test
dec
sbb
cmp
das
cs
push
add
icebp
add
xchg
stos
mov
leave
addb
mov
jg
add
mov
imulb
into
jmp
pop
sub
push
test
mov
jl
mov
nop
add
inc
cld
mov
hlt
and
jnp
std
jle
fwait
pop
dec
add
in
sbb
or
mov
pushf
push
pusha
je
movsb
add
mov
cmpsb
add
or
ret
adc
jp
cmp
mov
pop
add
lods
mov
mov
daa
rolb
add
xchg
xor
add
jo
lds
sarl
adc
mov
add
lods
fiaddl
lods
jle
imul
add
aam
leave
into
mov
sbb
and
dec
insl
ja
push
dec
lcall
pop
fsubs
mov
sub
das
adc
mov
jg
adc
push
add
inc
aad
scas
cltd
sub
test
add
repnz
xchg
aaa
lcall
inc
or
in
inc
pop
xor
add
sub
adc
add
loop
xor
mov
sub
dec
or
xor
sub
add
xchg
or
out
mov
adc
pop
sub
inc
into
pop
test
or
or
aas
xchg
test
shlb
aaa
in
es
mov
sar
jne
inc
add
dec
fisubrl
xor
mov
lcall
aas
pop
fldl
dec
jo
lahf
push
shlb
cltd
add
shll
into
cmp
jp
mov
push
out
mov
push
jmp
pusha
mov
jle
push
push
add
dec
jae
cld
lahf
jmp
fdivl
stos
cmp
push
sbb
sbb
rorl
sbb
jecxz
push
or
insb
aas
push
mov
pop
push
sti
inc
mov
pusha
sub
daa
shll
mov
pop
aam
mov
cmp
add
pop
mov
dec
sbb
xchg
test
rorl
std
ljmp
dec
enter
mov
and
jmp
test
cmp
pop
dec
adc
xor
es
popf
adc
shlb
add
cmp
push
in
addb
dec
dec
hlt
jnp
add
mov
call
mov
inc
cli
mov
faddl
into
jo
adc
imul
add
sbb
jno
faddl
stos
mov
into
push
add
adc
add
xchg
xchg
notl
jg
cmp
hlt
je
dec
add
lods
push
mov
outsl
xchg
add
jmp
cwtl
inc
sbb
jmp
jno
fsubl
mov
push
cmpsb
cs
cmp
add
ds
jbe
dec
std
mov
inc
pop
add
inc
add
test
aas
addb
jbe
shlb
lret
xlat
add
pop
push
push
fsub
add
mov
push
das
add
mov
je
push
pop
mov
adc
push
push
add
push
or
imul
cmc
ljmp
and
mov
add
repz
sahf
in
pusha
pop
out
mov
xchg
sbb
jnp
into
xchg
mov
push
cmp
add
push
mov
flds
mov
cs
lods
xor
loopne
mov
push
or
pop
movsb
jno
mov
addr16
and
or
sbb
add
int3
dec
inc
ljmp
mov
fistl
add
pop
lock
imul
out
cmc
or
ja
inc
add
sbb
lods
pusha
imul
pop
mov
in
cmpsl
sub
sarb
add
repz
cmp
movsb
adc
jae
insl
and
adc
dec
out
add
iret
fmul
shlb
mov
mov
pop
shrb
roll
jle
or
inc
das
and
mov
pop
or
add
push
je
clc
inc
and
push
cwtl
out
loope
or
insl
mov
adc
pop
adc
push
mov
in
push
add
enter
jne
mov
adc
std
jl
test
push
fimuls
and
into
cmp
jecxz
fnsave
data16
popf
loopne
ds
sbb
cs
idivb
add
cli
push
divl
jbe
dec
add
ret
and
lcall
in
fldcw
dec
push
cmpsl
iret
add
cmp
add
sbb
jne
add
xchg
push
je
cmp
xchg
cmp
xor
les
jecxz
out
mov
jmp
mov
inc
mov
mov
es
and
adc
dec
popf
insb
js
sbb
arpl
mov
imul
jmp
outsb
push
clc
adc
aaa
sbbb
sti
es
cmp
pop
fisubs
into
jb
pop
sbb
and
ja
pushf
mov
and
mov
lahf
cwtl
outsb
add
sti
adc
mov
lea
inc
rcr
add
adc
cmp
pusha
xchg
cmc
popf
int
inc
sbb
xchg
data16
icebp
mov
mov
pusha
imul
cwtl
inc
or
fstpt
rclb
add
mov
and
test
loopne
pop
sbb
outsb
imulb
or
mov
jae
or
push
lret
std
mov
fldl
shll
pushf
pop
mov
pop
xlat
ljmp
dec
and
dec
sbb
in
rcll
popa
pop
add
add
mov
mov
test
add
mov
neg
je
mov
add
pop
in
xlat
repz
pop
add
in
jo
rcrl
pop
push
pop
ja
dec
push
popa
xor
scas
sbb
add
sti
cmp
and
int
add
lods
add
inc
shlb
movsb
loopne
sbb
sti
adc
std
sbb
loopne
insl
dec
xchg
fcoms
pop
mov
add
popa
sub
and
fwait
testb
aas
add
xchg
pop
dec
add
imul
and
xor
sarl
lods
adc
mov
add
popa
clc
sbb
into
cmpsb
imul
jnp
mov
add
or
ret
jmp
jnp
sahf
jl
cmp
sbb
mov
movswl
xor
mov
fs
cltd
aaa
ss
mov
add
dec
movsb
les
insl
add
add
add
sbb
and
js
xchg
mov
add
hlt
sbb
lea
add
sbb
inc
in
iret
mov
sarb
pop
add
push
sbb
jle
sbb
stos
xchg
bound
xchg
call
mov
fwait
out
ret
movsl
add
inc
push
xchg
enter
fildl
aas
and
out
xor
add
jo
repz
cmpb
aam
inc
das
pop
ret
and
icebp
testb
enter
fidivs
sbb
cmc
cmpsb
and
add
ja
inc
xchg
shl
mov
mov
in
cmp
cld
or
out
or
jns
cmpsl
pop
push
xlat
lahf
icebp
jp
leave
add
aas
in
jbe
adc
push
and
jl
shl
xlat
xchg
pop
pusha
sbb
add
cmp
stos
daa
sbb
enter
jecxz
push
test
outsl
subb
fildll
clc
shl
xchg
mov
or
adc
fdivl
add
xor
aad
pop
call
mov
lods
add
in
inc
fs
arpl
clc
and
adc
idiv
add
add
cmp
xchg
cmp
dec
ret
adc
jg
jecxz
out
adc
push
add
imul
xchg
aaa
andl
push
adc
mov
pusha
mov
xor
sbb
push
movsb
pop
ljmp
add
clc
gs
pop
sbb
cwtl
fbld
push
mov
add
sbb
add
fsub
inc
mov
xor
xchg
popf
pushf
test
add
add
lods
cmpsb
mov
sti
pop
roll
adc
cmpsl
testb
jo
xchg
xlat
add
xchg
sti
icebp
shll
xchg
push
call
enter
mov
mov
movsb
hlt
xor
mov
pusha
stos
ss
popf
xchg
into
inc
imul
nop
xor
loope
out
add
or
repnz
pop
add
mov
and
mov
and
repz
mov
faddl
sbb
push
inc
dec
adc
add
push
mov
add
mov
mov
cmc
daa
inc
push
xor
stos
sbb
xor
jl
xchg
outsl
dec
imul
adc
pushf
inc
and
lcall
imul
sub
pop
out
stos
cs
xchg
daa
cli
fcoms
dec
xchg
gs
push
adcb
cmc
fisttpl
lret
adc
ret
stos
in
pop
xchg
movl
push
imul
xchg
shrb
jb
push
daa
and
xor
cs
xor
dec
add
sub
fsubs
xchg
icebp
add
jmp
jge
popf
push
or
pusha
ss
jne
sbb
mov
stc
mov
sbb
aas
sahf
ret
add
mov
mov
fisttps
and
pop
stc
pop
cmc
add
sti
xor
mov
lret
sbb
jecxz
sub
cwtl
and
pop
and
add
cmp
sbb
xchg
mov
mov
stos
jg
loopne
outsb
jae
push
or
cmpl
andb
add
in
push
lock
xor
loop
push
mov
insb
pop
pusha
or
cmpsl
fcomps
add
das
fidivrl
pusha
jecxz
adcl
sbb
stc
sub
ret
xchg
test
mov
int3
sub
mov
je,pt
sub
inc
add
popf
cmp
cs
pusha
jbe
fnstcw
aas
adc
mov
xchg
stos
filds
ja
cmp
jl
leave
das
or
push
pop
jecxz
jo
and
mov
fistl
lahf
mov
hlt
xor
inc
mov
mov
add
out
push
pop
lock
stc
add
or
xor
add
push
incl
jg
outsb
int3
lods
add
cmc
mov
and
mov
adc
xorl
popf
or
push
nop
stc
and
mov
xchg
sbb
pop
dec
ret
mov
jl
adc
loopne
xlat
imul
mov
fadd
add
and
adc
push
add
test
stos
dec
jmp
mov
fistl
popa
les
filds
lds
jnp
jmp
cmpsb
and
xchg
int3
mov
loopne
idiv
inc
int
pop
and
mov
push
imul
insl
add
ljmp
mov
mov
xchg
mov
add
cmp
add
and
fnstenv
xchg
push
fnstsw
js
in
or
add
or
stc
sub
xchg
rorl
rolb
cmp
in
mov
push
or
jecxz
aad
inc
jge
adc
or
lods
push
rclb
int3
push
repnz
sub
adc
sbb
scas
jno
mov
mov
mov
pop
in
sbb
ds
and
and
mov
adc
sbb
nop
mov
mov
inc
into
inc
add
jae
xor
push
outsl
rorb
ds
ret
sbb
inc
addr16
add
mov
cmp
add
mov
ja
cli
mov
mov
push
ds
test
add
inc
mov
cli
int3
ret
loope
pop
scas
xchg
add
push
push
add
jnp
lcall
or
out
imul
aaa
movsb
daa
cli
outsl
cltd
sahf
push
add
sbb
incl
test
cmpsb
or
add
and
ja
or
movsl
in
inc
sbb
int
dec
into
sarl
add
popf
jno
out
outsl
add
lea
add
inc
xor
push
loopne
loop
pop
xchg
adc
xchg
jnp
mov
aaa
in
shlb
in
or
icebp
outsb
add
mov
imul
add
push
sti
test
rolb
gs
inc
int
bound
fildl
add
loope
mov
popf
mov
idivb
xchg
pop
or
int3
cmp
sbb
iret
add
adc
lcall
add
cld
mov
pop
lock
out
xchg
add
xor
add
shll
cmp
iret
test
xlat
inc
add
orl
aaa
je
sbb
dec
add
out
add
mov
pop
dec
aad
xchg
fucomp
pop
push
inc
stos
cmp
or
sbb
xchg
imul
add
sbb
jmp
andb
mov
inc
jp
xchg
xor
popf
mov
mov
clc
jno
add
mov
das
cmp
add
and
push
mov
in
sahf
mov
mov
dec
jns
mov
jbe
mov
lret
cmpsl
cmpsb
add
jno
ja
inc
push
sti
rcrl
xor
lret
push
stos
and
pop
adc
ss
adc
fsts
loopne
inc
pop
loope
mov
roll
jns
adc
sub
insb
xchg
add
cmp
imul
and
enter
pop
loopne
inc
jle
sbb
iret
sbb
repz
aaa
or
out
sub
jg
adc
pop
dec
mov
inc
add
shr
insb
mov
mov
push
shll
inc
inc
daa
mov
lret
lods
arpl
jle
xchg
fsubs
jge
shrl
out
cld
add
inc
and
fildll
add
ja
jg
xlat
cmp
add
mov
mov
sbb
sbb
jmp
pop
push
add
iret
clc
push
popf
testb
mov
incl
add
hlt
ffreep
add
push
sbb
xor
add
jne
inc
push
outsb
fs
rcr
aaa
xchg
add
mov
adc
mov
scas
pop
pop
pop
movsb
or
popa
dec
push
je
pusha
dec
mov
ss
sahf
xor
movsl
popa
lock
jecxz
aad
and
jge
fs
sahf
push
dec
add
mov
inc
and
or
add
or
test
add
jmp
xchg
call
test
shll
loop
out
cld
add
add
or
or
fsubr
imul
rcll
repz
lods
add
pop
cli
lret
shll
daa
add
sti
jbe
stos
test
add
lahf
jecxz
push
dec
push
or
pop
test
in
int3
sbb
mov
mov
fadds
sbb
add
cwtl
mov
push
mov
std
adc
add
fstpl
xchg
sbb
and
jg
pushf
sahf
data16
out
lret
pusha
loopne
or
int3
push
add
xchg
inc
addl
jp
jmp
add
into
lods
mov
and
and
nop
push
in
mov
fwait
mov
das
aas
shlb
inc
pop
fiaddl
shlb
pop
adcb
outsb
adc
fimuls
daa
cmpsl
add
jbe
mov
add
sub
dec
jp
mov
and
xor
mov
int3
jg
in
decb
push
lods
add
cmp
mov
push
movb
sub
dec
clc
test
push
add
mov
ja
xlat
push
movsb
popa
sbb
add
lock
xchg
add
pop
inc
add
sbb
aaa
add
mov
sbb
adc
cli
lahf
push
push
xchg
inc
push
mov
add
jns
adc
xlat
sub
nop
popf
repz
inc
cli
test
ret
loopne
cmp
or
add
push
dec
aam
in
addr16
sub
imul
lcall
call
and
insl
loope
push
push
aas
add
shl
sbb
or
mov
xchg
adc
mov
inc
sbb
fidivs
call
cmp
imul
lahf
fidivrl
loopne
pusha
mov
xchg
clc
xor
in
ret
inc
out
test
pop
std
lods
push
push
js
inc
sbb
das
jecxz
sahf
movsl
or
adc
mov
add
fdivr
roll
addb
dec
inc
movl
outsl
jecxz
cwtl
push
out
leave
pop
inc
bound
adc
mov
cmp
hlt
lock
vpxor
ret
pop
filds
scas
xchg
pushf
in
cmpsl
shll
aas
subl
mov
jecxz
xchg
pusha
clc
stos
sub
std
jae
add
ret
mov
mov
mov
add
inc
xor
aas
push
xchg
stos
and
xchg
jnp
bnd
add
mov
or
cwtl
jmp
add
push
je
cmc
pop
fmuls
and
and
ljmp
and
repz
sbb
adc
push
lods
cmpsl
and
clc
add
xor
mov
lods
and
popa
add
mov
add
jbe
jecxz
sbb
jmp
fildl
inc
push
or
test
dec
clc
fstps
cmpsl
pushl
push
test
xor
push
or
cmp
pop
aaa
add
insl
and
cwtl
push
jmp
jl
aas
add
in
pop
shll
dec
lahf
je
loopne
jnp
and
adc
fdivr
add
push
xchg
pushf
rorb
mov
add
mov
ret
lods
push
xchg
sbb
cmovp
sub
cli
fists
xor
push
or
cld
popf
xchg
test
fsubs
loop
out
test
ja
mov
adc
js
imul
andl
icebp
call
ljmp
push
and
xor
mov
add
icebp
xchg
aam
je
cmp
fldln2
cwtl
in
mov
add
ja
pop
inc
push
add
add
adc
fildll
sbb
add
xor
add
hlt
mov
loop
repnz
ficompl
add
add
adc
push
test
outsl
addr16
lea
dec
adc
push
jecxz
pop
and
dec
xchg
dec
stos
adc
xor
sub
mov
out
lret
add
jns
cmp
xchg
test
mov
aas
popf
jl
bound
scas
jle
pop
and
popa
xor
add
mov
push
lret
lea
idivl
loopne
lahf
addr16
outsb
xchg
dec
add
in
or
pop
call
jae
sbb
sbb
or
add
lret
push
xchg
xor
ret
int
popf
add
aaa
pop
jp
add
sahf
cs
add
adc
xlat
dec
addl
pop
sbb
xor
lods
aaa
cli
repnz
cmp
pusha
ret
add
hlt
or
or
and
pop
push
shll
inc
pop
sbb
and
mov
lds
adc
push
aam
clc
add
add
add
adcl
shll
jge
push
inc
cmc
fcomip
repz
bound
push
outsb
mov
pop
loop
pusha
sahf
add
push
mov
add
sbb
mov
mov
fwait
outsb
inc
dec
or
add
mov
pushl
adc
sbb
stos
and
arpl
sbb
xchg
or
add
push
stc
xlat
sbb
mov
inc
lods
sub
divl
pop
add
dec
ljmp
in
stos
rorl
movsb
or
add
outsl
add
push
idivb
mov
and
xchg
divl
lahf
js
pusha
subl
clc
mov
sub
or
add
js
data16
xchg
add
xor
mov
mov
shll
mov
daa
ljmp
mov
or
jl
cld
mov
sahf
jnp
mov
add
jo
cmpsb
sar
shr
mov
and
push
pop
popf
orl
lods
xchg
sarl
ss
sbb
or
cmpsl
push
mov
mov
shll
pop
daa
inc
push
dec
in
sbb
add
jno
sub
inc
and
popf
xchg
movsb
cmp
ret
dec
xor
or
loopne
jae
xor
mov
push
mov
es
cs
daa
jl
pop
test
push
mov
add
mov
repz
repnz
addr16
inc
jl
add
mov
xchg
jg
repz
mov
and
stc
mov
dec
in
add
sub
dec
sahf
add
pop
add
sbb
lret
pop
add
das
cmpsb
cmp
jo
add
mov
cmc
add
mov
dec
push
pop
pavgb
lock
lods
push
sbb
adc
cld
sub
cwtl
int
xchg
test
loope
sahf
xor
decb
repz
xchg
lcall
mov
lahf
out
add
xor
imul
add
jne
cmp
pop
xchg
jae
jb
mov
loope
in
sub
adc
inc
mov
inc
shll
sbb
int3
xor
pop
scas
sub
ds
jns
cmpsl
pop
clc
adc
cmp
push
or
mov
into
fisubrs
leave
sbb
jg
pusha
lret
mov
pusha
xchg
popf
aas
jnp
adc
je
add
pop
mov
lahf
loop
sbb
mov
jmp
lea
and
lahf
sti
pop
loopne
loop
out
adc
in
daa
add
lock
fadds
cmc
sbb
mov
stos
pop
pop
jg
xchg
add
loopne
lcall
and
mov
xor
mov
jle
jns
insl
xchg
jae
jmp
jno
fisttpll
add
mov
ret
fstpt
lahf
lods
push
add
lea
add
out
subb
sbb
and
rclb
sbb
fcoms
pushf
inc
mov
aaa
or
dec
xor
out
adc
dec
fwait
mov
add
mov
or
xchg
ljmp
mov
fldt
or
or
imul
ret
sbb
into
inc
sbbb
fsubl
add
nop
aaa
aas
add
orb
lea
out
clc
mov
pop
movsb
inc
fsubl
add
xchg
test
sahf
xchg
push
add
out
push
mov
add
or
movl
out
cld
mov
add
cs
add
mov
cmp
xchg
loopne
stc
sub
repnz
sbbb
adc
xlat
dec
add
insl
gs
xchg
add
xor
push
add
in
jl
fstl
sub
cltd
hlt
ja
add
push
xor
loopne
xor
loope
imul
nop
lcall
sbb
sbb
mov
divl
dec
orb
aad
add
cmpsl
cmp
popf
pushf
repnz
add
sub
dec
jge
add
scas
test
test
test
loope
les
pop
iret
clc
sbb
sub
jmp
lahf
sbb
cmp
mov
movsb
pop
pop
rol
add
roll
add
push
lods
enter
into
ds
test
or
aad
testb
add
dec
jnp
ret
setb
add
add
into
push
cmp
or
ret
fists
cmp
sbb
leave
arpl
adc
dec
jo
add
jae
xchg
add
mov
inc
rcl
mov
lods
jae
xchg
xchg
adc
dec
incb
add
out
pop
aad
sub
jmp
push
adc
mov
sbb
jnp
mov
test
ds
dec
add
xor
insl
shll
icebp
mov
lds
pop
adc
xchg
data16
pop
ds
int
test
leave
in
sub
add
daa
mov
loopne
mov
pushf
loopne
test
jl
add
jno
imul
int3
cld
add
xor
push
push
pop
aaa
in
aad
inc
xchg
imul
ljmp
adc
sub
add
inc
fwait
das
shrl
int
dec
ljmp
sbb
dec
scas
sbb
xor
xor
sbb
loope
shr
adc
adc
mov
push
pushf
add
mov
xchg
aaa
pusha
jo
xchg
add
or
or
adc
out
and
inc
adc
pushl
inc
inc
dec
lret
lock
push
sbb
or
add
pop
add
jmp
into
dec
fidivrl
mov
pop
add
jmp
mov
add
les
sub
sbb
jp
dec
jne
mov
sbb
push
xchg
dec
in
jecxz
pop
and
lea
pop
cmp
cmp
out
and
lahf
jae
inc
cmpsl
insl
add
roll
jg
test
mov
outsb
loope
lods
add
arpl
push
add
roll
cmp
mov
std
mov
imul
cmpsb
sar
mov
orb
dec
mov
or
outsb
cwtl
push
pop
dec
xlat
in
push
flds
fsubl
cs
add
inc
stos
mov
mov
pop
push
arpl
add
add
cmp
xor
push
das
sbb
mov
je
dec
shrl
lock
fstpl
loopne
pop
test
add
repnz
add
lods
fucomip
inc
pop
adc
fs
inc
jge
mov
and
jno
ror
addr16
add
je
jns
cmpsl
pushf
nop
jecxz
loope
xor
idivl
pusha
pop
out
pop
or
enter
inc
fwait
movsb
xor
sub
push
add
mov
sub
jmp
xchg
daa
add
xlat
adc
fwait
xchg
dec
outsb
test
jne
scas
rcrl
pushf
shll
mov
jl
loopne
add
bound
dec
adcl
or
and
push
and
lcall
xchg
add
outsl
mov
adc
pop
xchg
inc
mov
lods
leave
xor
adc
in
jg
add
mov
or
ljmp
mov
and
add
test
push
push
call
or
jbe
cmp
cmp
push
mov
mov
loopne
cmp
adc
pop
dec
scas
ret
dec
push
or
dec
pop
insl
lcall
and
cli
int3
popf
in
adc
pop
insb
in
scas
add
lret
add
xor
adc
les
popa
jge
into
xchg
test
push
inc
xor
fabs
mov
jo
cmc
aad
add
movsl
jne
das
popa
push
xor
pushf
daa
insb
cmpsl
mov
inc
scas
adc
sbb
mov
lcall
pop
pop
adc
xchg
cmp
int
jp
and
sbb
cld
push
cmp
jae
mov
daa
pop
lds
mov
xchg
repnz
pop
dec
add
cld
jecxz
add
adc
fiaddl
out
iret
dec
add
outsb
stos
rcrl
add
push
adc
fiaddl
loope
lods
call
inc
add
add
push
lcall
pop
rcl
xor
add
das
out
pushf
sbb
addb
pop
insl
sbbl
and
js
jns
mov
sbb
loopne
subl
int3
cmp
add
xor
add
xchg
jne
pop
fsubs
rclb
pop
add
cmpsl
fcomi
jae
mov
out
jp
out
imul
push
xchg
fcomps
pop
ja
add
or
jl
mov
mov
add
cmp
leave
add
rolb
loopne
cmp
and
out
loop
add
rcrl
and
mov
jp
mov
push
jl
jae
cmp
loopne
andb
or
hlt
leave
push
pop
fbstp
dec
inc
dec
fisubrl
sti
add
push
mov
out
addr16
or
and
push
sub
mov
cs
pop
ss
mov
loope
push
inc
daa
sbb
mov
js
popa
fdivr
dec
inc
adc
popf
lds
dec
cmp
scas
sbb
sub
add
fdivrs
fisubrl
mov
jnp
inc
in
test
push
je
add
das
xor
add
jne
jae
cmp
add
shlb
mov
add
cmp
lods
scas
mov
clc
inc
mul
jecxz
add
flds
addb
outsb
imul
sbb
pop
or
add
and
inc
ficompl
add
lods
and
out
fsubs
add
aam
out
insb
pop
sub
push
sbb
and
cmp
fwait
in
adc
mov
sub
sub
xor
ret
mov
adc
inc
ds
jp
xorl
inc
arpl
and
xor
loope
jno
lcall
mov
popl
idiv
insb
and
mov
jbe
negl
mov
aam
out
mov
push
push
sarl
cmp
or
dec
push
and
mov
rorb
mov
outsb
adc
push
dec
add
stos
xor
mov
subl
sub
imulb
test
add
mov
std
jbe
jge
nop
mov
sbb
ror
call
daa
mov
add
mov
outsl
jns
mov
cmp
xchg
lock
jmp
ljmp
negb
ret
loope
adc
out
xor
js
adc
mov
fdivr
inc
push
cmp
pop
mov
mov
mov
rcrb
pusha
mov
in
add
outsb
jno
and
ret
stc
push
add
cli
sbb
fdivrs
push
test
sbb
out
and
mov
add
jp
jbe
inc
jae
test
sbb
pop
inc
and
lret
mov
bound
addb
stos
add
repnz
ljmp
loope
cmp
sbb
loope
sub
jno
pop
push
test
inc
std
and
mov
js
popf
mov
mov
shrb
ja
aam
cmp
repz
mov
aad
adc
dec
pop
lods
add
add
add
insl
xor
and
test
jp
stos
rorb
or
jmp
cmpsb
into
xor
pop
mov
inc
xchg
add
add
and
jno
push
jecxz
sbb
hlt
lahf
dec
adc
adc
push
es
sbb
jecxz
and
std
sbbb
adc
add
dec
push
add
movsl
and
sahf
pop
jne
movsb
mov
add
test
sbb
add
addr16
jne,pn
pusha
incl
mov
mov
and
add
jmp
mov
lret
lock
cltd
xor
jge
daa
xor
inc
sbb
hlt
or
adc
scas
pop
testb
mov
pop
and
cli
sarl
cltd
ss
not
sub
adc
std
mov
adc
or
pop
pop
sbb
pusha
inc
fs
adc
outsl
xchg
arpl
les
pop
aas
add
loopne
mov
popf
push
pop
xor
sti
cmpsl
add
les
inc
loopne
mov
inc
sbb
jp
mov
out
aaa
fimull
and
ret
sub
clc
bound
add
jb
addr16
or
ds
push
cld
in
mov
mov
mov
inc
int3
add
mov
push
mov
add
pop
add
push
popa
add
mov
cltd
mov
int3
imul
add
add
jo
adc
cmpsl
stos
shlb
aaa
mov
test
addr16
inc
lock
inc
cmp
fiadds
mov
adc
add
dec
into
pop
mov
and
clc
orb
add
fisttps
and
inc
jmp
mov
mov
sahf
inc
push
push
arpl
into
insb
pop
push
mov
xchg
enter
icebp
xor
add
dec
adc
pop
jne
jno
xchg
dec
xchg
xor
add
push
add
jo
push
add
fimull
add
scas
fisttps
fidivs
jnp
insb
stos
out
push
pop
mov
out
loopne
push
xchg
loopne
xchg
pop
cmpb
insl
xchg
cld
sbb
and
jl
push
xor
outsb
mov
mov
mov
sub
movsl
pop
cld
cmp
and
in
lods
cmp
xchg
lahf
push
add
ret
das
and
rcrb
icebp
mov
add
or
fidivs
add
mov
mov
add
push
and
jmp
pop
mov
adc
cmpsl
add
loopne
in
das
std
mov
pusha
lea
fldl
je
lods
add
jae
ja
icebp
mov
das
int3
ret
lcall
out
mov
mull
xor
dec
pop
outsl
sbb
sti
movsl
cmp
lret
mov
adc
jge
or
pusha
jnp
fidivs
jne
jecxz
sub
inc
mov
addb
shll
andps
or
add
fs
push
cmp
sbb
dec
js
popa
nop
inc
stos
dec
add
inc
push
adc
mov
mov
mov
repz
mov
add
xchg
xor
cmc
cmpsl
jne
add
test
xchg
addl
xchg
lcall
add
test
dec
push
add
das
and
cmp
cwtl
mov
add
jecxz
stos
pop
mov
loope
aas
xor
std
hlt
or
push
and
lcall
inc
add
push
sub
add
sub
js
fldl
lea
sbb
add
xor
push
shr
mov
ret
add
push
push
scas
js
cld
sub
xorb
or
inc
sahf
ret
stos
arpl
js
pop
add
jns
imul
aas
loop
ds
pop
dec
test
aad
shrb
mov
add
sub
jo
sbb
scas
push
cli
test
xorb
cld
dec
or
int3
jg
add
test
ret
adc
das
in
xor
mov
jns
jl
adc
mov
mov
lcall
fs
stc
pusha
and
xor
sbb
leave
stos
loope
sti
push
xchg
lret
cmc
or
jbe
jge
mov
inc
int
sub
popa
pop
fstps
jo
push
stos
loopne
mov
add
pop
icebp
jecxz
jmp
adc
add
aam
jb
jno
div
add
shll
fwait
add
aaa
cltd
inc
xor
sub
add
cmp
loopne
jo
inc
stos
data16
mov
cmp
add
rorl
int
gs
xchg
jbe
sahf
xchg
mov
subl
into
add
clc
out
sahf
ficompl
aaa
pop
lret
filds
stos
dec
daa
pop
in
sbb
pusha
inc
call
adc
movsl
enter
ret
jl
shl
shrb
pop
jecxz
or
cmpb
mov
dec
inc
pusha
scas
xchg
adc
mov
add
push
add
push
xchg
xchg
add
cmp
xchg
add
mov
shll
sub
jno
cld
adc
mov
xchg
rorb
loopne
fcmove
adc
add
scas
popa
push
add
test
or
loopne
outsl
xor
subb
mov
xchg
shrb
jb
inc
dec
loope
lcall
test
mov
es
inc
add
fs
xor
or
out
shrl
js
test
mov
sub
pushl
sub
in
add
je
mov
ret
out
mov
cmc
add
shl
mov
push
fimull
faddp
pop
hlt
cmp
mov
add
out
fs
inc
and
loopne
shl
sbb
sub
cmpsl
cmp
jo
push
test
xor
dec
and
mov
loopne,pt
rcr
int
or
call
in
pop
add
pop
cmpsl
das
push
add
cs
inc
repz
push
or
cmp
mov
ret
outsb
jne
or
xchg
mov
scas
mov
add
jmp
pop
add
out
icebp
fs
sbb
cs
cmp
int3
sbb
cmpsl
je
test
push
and
inc
xor
add
dec
push
addl
adc
mov
push
insl
add
xchg
scas
xchg
bound
jg
pushf
pusha
adcl
dec
mov
pusha
push
mov
outsl
sbb
loop
push
push
nop
sbb
and
xlat
fs
sub
sti
or
into
adc
xchg
iret
xchg
xchg
push
lret
pop
xchg
sbb
add
cli
mov
imul
inc
jecxz
mov
cmpsl
and
popa
mov
ja
add
pop
int
xor
and
add
jo
jno
jbe
add
nop
add
add
ss
fadds
call
dec
jmp
add
inc
jo
jg
cmp
sbb
subl
inc
and
sub
movsb
negb
jns
add
xor
in
stc
enter
in
mov
mov
cmp
scas
mov
sbb
add
mov
add
and
mov
jno
jns
adc
inc
pop
sub
out
sarb
les
inc
sbb
lcall
lock
dec
or
mov
imulb
adc
popf
sbb
add
lods
or
adc
add
jmp
jo
fidivs
dec
jge
pop
cmp
cwtl
clc
cmp
sti
addb
and
in
add
jg
daa
add
sub
xorl
jle
mov
leave
cltd
add
inc
ror
pusha
aad
sti
icebp
inc
mov
das
outsl
mov
jp
rcrb
inc
pusha
and
sbb
adc
add
and
loopne
out
mov
leave
dec
add
pop
bnd
cli
sbb
jnp
out
stos
xlat
addr16
mov
movsb
push
test
sbb
call
mov
loopne
add
out
out
and
xor
outsb
jmp
xor
loop
inc
fidivl
add
xor
jno
lods
sbb
add
pushl
inc
ss
push
test
xor
and
mov
out
mov
inc
sbb
add
mov
adc
xchg
jbe
inc
mov
call
add
dec
adc
mov
xchg
pusha
jp
cmpsl
pop
pushf
adc
scas
std
add
shrb
orl
loope
jecxz
or
mov
xchg
pop
mov
mov
cmc
and
cmp
add
dec
call
adc
dec
mov
push
and
push
sbb
mov
push
add
and
data16
mov
add
mov
rcll
or
lds
add
jb
cwtl
xchg
test
dec
push
cmp
dec
mov
jae
clc
add
add
push
xor
inc
add
faddl
iret
cmp
lahf
idivl
add
add
sub
stos
add
add
shll
lahf
inc
xchg
pop
movsb
mov
push
add
pushf
ret
lock
adc
add
je
mov
adc
push
nop
mov
fidivs
jp
aad
dec
mov
adc
mov
ja
add
adc
pop
or
ljmp
out
std
inc
jmp
lods
cmpsl
dec
outsb
push
add
cmp
dec
jnp
rolb
in
mov
loopne
sahf
dec
push
filds
daa
lds
roll
cwtl
sbb
pop
add
fs
adc
cmpsb
les
addr16
mov
sub
repz
adc
sub
outsb
push
add
jg
add
sahf
jnp
add
popa
inc
scas
cld
mov
jle
insb
mov
sbb
push
psrlq
sbb
jns
push
mov
and
clc
js
loopne
sbbb
das
popf
add
pusha
nop
sub
inc
fcmovb
adc
loopne
in
or
sbb
mov
into
roll
sub
daa
dec
in
push
add
ja
fs
adc
add
push
gs
xor
ret
jo
sti
pop
mov
and
or
loopne
loopne
xchg
cmp
aas
stos
out
outsb
and
test
mov
adc
cs
pop
mov
jnp
push
daa
add
mov
xlat
mov
jbe
and
xor
pushf
repz
add
fs
xchg
int3
pop
imul
lods
adc
add
test
jl
scas
out
push
pop
insl
xchg
xchg
add
jo
jge
and
shll
jecxz
popa
popf
cmp
add
cmp
pop
lret
xchg
add
clc
arpl
test
xchg
imul
inc
add
adc
inc
cmpsl
cmp
lcall
jge
movsb
js
insl
in
pop
mov
push
push
dec
sub
and
xchg
pop
daa
ds
xor
or
leave
mov
push
aaa
pop
jge
or
adc
cmp
test
hlt
mov
cmp
roll
inc
fucomp
mov
sub
aam
add
xchg
insb
jo
add
push
push
adc
cmp
mov
out
icebp
loopne
mov
fmuls
fisubrl
add
les
add
xchg
arpl
cmp
adc
add
in
cmp
adc
jg
clc
add
sbb
jmp
lret
in
add
add
push
mov
les
popa
adc
stos
imul
inc
repnz
sahf
les
jae
mov
and
fcoml
fidivs
mov
sbb
jp
jge
sbb
fucomp
test
sub
adc
dec
sbb
inc
mov
pop
jle
push
inc
leave
fsubrl
xor
mov
mov
es
scas
add
ja
mov
add
pop
std
es
hlt
jmp
cs
cmc
stc
lahf
mov
addb
imul
jecxz
and
shrl
in
push
incl
xor
push
and
test
inc
shll
sbb
test
loop
add
sbb
add
mov
dec
aas
out
adc
mov
in
adcb
scas
fsubrs
cwtl
add
xor
push
jns
shlb
aam
aas
imul
add
loopne
cld
sbb
dec
out
fdivrs
mov
add
cmp
mov
out
add
fstl
or
mov
push
insl
jmp
cld
ret
adc
cmc
lret
dec
pop
push
loopne
inc
repnz
test
adc
xchg
cmp
sub
push
stos
arpl
pop
imul
mov
shr
iret
int3
out
pusha
jnp
rorl
call
push
push
mov
cmp
ja
into
js
lahf
cmp
outsl
jl
dec
inc
insl
shl
call
mov
fwait
rcll
cmp
popf
mov
adc
inc
loopne
adc
je
or
negb
out
ret
push
jmp
fisttpll
add
jo
and
cs
lea
add
sub
jp
pop
xor
sub
clc
lods
mov
inc
pop
movsb
add
fsubrl
dec
xchg
adc
mov
adc
dec
add
test
add
and
add
aaa
das
fwait
mov
or
add
ficoml
xchg
mov
cmpsl
push
call
xchg
pop
pop
or
into
adc
inc
jno
cmp
adc
pop
nop
xor
lahf
push
add
add
xchg
mov
add
or
out
popf
fwait
xchg
add
negb
pushf
pop
jae
in
mov
jecxz
pop
push
shlb
pushf
mov
sbb
adc
sbb
daa
adc
xor
hlt
add
stos
xor
add
bnd
sbb
pop
addl
rclb
jecxz
add
outsl
jl
arpl
jmp
add
addr16
testb
add
test
sbb
mov
and
daa
push
pusha
jae
and
out
jl
cmp
jo
add
das
adc
shl
nop
xor
xchg
loopne
loop
push
and
int3
jp
aad
xchg
sub
mov
xchg
mov
cmp
loopne
cltd
stos
or
pusha
cmc
rcr
mov
test
faddl
outsb
out
push
std
insl
adc
xor
fdivrp
and
adc
xchg
fsubrl
add
fwait
jle
std
pop
out
cmpsl
adc
add
bound
test
das
stos
mov
xor
test
xor
mov
add
fwait
pusha
or
rcrb
sbb
lds
xor
pop
add
inc
pop
test
adc
add
adc
dec
adc
add
aaa
arpl
xchg
mov
jecxz
jmp
add
push
sub
xor
mov
xchg
dec
fcomp
and
stos
and
xchg
bound
insl
mov
mov
push
lods
pusha
das
iret
gs
push
sar
or
pushf
xor
push
jne
outsb
add
inc
mov
adc
add
in
mov
push
pusha
mov
xchg
push
and
movsl
add
insl
fistps
pop
fsubrl
lea
fwait
cltd
add
iret
and
mov
mov
test
add
add
iret
sub
pop
add
outsl
popa
sbb
shr
je
add
leave
movsb
add
add
and
push
add
jle
vpaddb
push
push
push
cmpsl
pusha
getsec
and
inc
or
xor
xor
add
adc
xchg
add
and
mov
in
cli
cmp
test
push
dec
icebp
mov
fstps
adc
pop
dec
movsl
xchg
sub
sub
xchg
add
test
das
in
daa
dec
cli
add
or
idivl
and
mov
mov
inc
outsb
push
dec
fsubs
push
inc
test
pop
jl
cmp
xchg
loop
cld
and
loope
loop
std
out
push
icebp
shl
loop
inc
cltd
out
xchg
xchg
movsl
add
daa
lock
xor
cld
nopl
data16
sub
enter
jne
incb
cmpsl
into
les
push
je
outsl
pop
aam
add
mov
or
sub
jmp
jnp
add
push
test
outsb
push
popa
rcrl
xlat
jg
or
jp
sbb
add
mov
fwait
xor
pop
add
lcall
add
xchg
repz
dec
adc
lcall
loopne
or
jno
push
mov
pusha
cwtl
add
cmp
adc
add
lds
add
inc
dec
push
add
mov
pop
sbb
adc
sbb
inc
imul
cmpl
or
test
xor
in
cltd
mov
adc
or
es
inc
xchg
iret
pop
mov
add
jge
mov
adc
aam
ds
incb
lea
jmp
dec
sbb
pop
sahf
add
add
push
add
into
inc
cmp
out
and
ja
mov
sbb
cmpsb
sub
xchg
fucomi
and
aad
sbb
cli
push
adc
cmp
jns
cwtl
xlat
les
and
jp
and
pop
sahf
add
scas
cmp
comiss
or
stos
or
repnz
add
pavgw
add
push
lods
std
xchg
loopne
pop
stos
mov
daa
jne
incb
push
push
cmc
pop
add
cmp
sbb
inc
int
add
test
add
xor
add
ds
outsb
stos
xchg
sbb
sub
cmpsl
add
sahf
test
mov
xor
sub
or
adc
daa
adc
ja
cmpsl
outsb
test
movsl
fldt
pop
sub
enter
addl
sbb
add
in
fdivs
inc
or
sbb
mov
or
movsb
mov
or
cmpsl
push
mov
jnp
push
aam
sbb
cld
pusha
hlt
das
mov
cli
into
push
sar
inc
fiaddl
pop
fs
dec
stos
sub
fdivrp
arpl
mov
cmc
loope
out
repnz
adc
fnstsw
adc
sbb
pushf
jne
lods
cmp
cmp
pop
inc
fldl
jb
xor
xchg
sbb
dec
scas
jne
dec
or
fildl
inc
xchg
out
cmp
sbb
mov
pop
je
or
imul
xchg
cwtl
pop
sbb
cmp
jno
js
add
sub
lcall
cmpb
out
push
mov
pop
sahf
add
sbb
add
push
add
cmp
add
cmp
add
out
ret
insb
lea
flds
push
jecxz
push
daa
leave
and
and
lds
test
add
inc
int
test
insl
clc
add
leave
pusha
fsts
sahf
loope
lcall
or
insb
sbb
adc
test
je
jb
pusha
jecxz
fs
pop
das
jns
add
mov
add
in
inc
je
gs
fiadds
dec
call
iret
lds
pusha
fidivrl
mov
cmp
pop
cmp
ret
push
jo
aas
pop
pushf
jge
add
fucomp
sub
jg
dec
adc
push
sbb
lods
test
rcll
movsl
in
test
add
xor
jns
in
pusha
rcrl
pop
push
dec
or
and
rcrb
int3
pop
daa
add
pop
cs
jle
push
pusha
enter
inc
test
mov
xchg
je
popa
add
mov
jg
ret
bound
push
int3
movsb
rolb
loopne
xchg
cmp
sbb
stos
pop
faddp
rcll
xor
sahf
pushf
loope
add
leave
push
pop
cmpsl
loop
cli
shrl
lods
sbb
jg
push
xchg
sti
add
cmpsl
sbb
imul
arpl
add
sbb
sbb
ret
inc
push
loop
add
inc
pop
jns
jae
pop
add
mov
mov
dec
aad
add
pop
jno
add
add
sbb
cpuid
xchg
mov
pop
daa
orl
xchg
loope
push
adc
lock
int3
pusha
xlat
test
sbb
cld
sub
leave
sub
push
mov
pop
loope
imul
add
pop
ldmxcsr
sar
push
mov
mov
movsb
mov
add
hlt
push
push
sub
xor
mov
add
xlat
clc
movsb
jae
cwtl
lahf
and
dec
addl
mov
js
xlat
mov
and
insb
bound
add
in
dec
addr16
or
add
jno
pushl
mov
iret
push
lret
pushf
jae
adc
test
xchg
aas
test
and
xchg
and
mov
jne
lahf
add
andb
xchg
add
stc
inc
sahf
push
adc
call
jecxz
pop
dec
or
or
lock
and
into
xor
add
stos
fmul
in
loopne
mov
notb
add
mov
dec
adc
lds
and
and
mov
int
sbb
mov
add
jl
out
dec
lds
adc
stos
ds
pop
cs
fwait
inc
popaw
outsl
mov
cmp
test
shlb
xchg
push
sbb
add
add
xor
sbb
mov
mov
sbb
dec
pop
test
jnp
add
dec
add
outsb
cmp
test
ljmp
add
sbb
sti
les
xor
into
mov
enter
fildll
cld
shrl
adcl
sbb
xchg
jmp
outsl
cmp
lods
sub
add
arpl
in
lahf
add
enter
and
mov
int
outsb
or
push
pop
mov
movsl
push
fdivrl
inc
cmp
loopne
cwtl
jge
or
cli
add
adc
or
pushf
pusha
fnstenv
sbb
sub
faddl
andl
out
pop
or
push
xchg
je
adc
incl
call
push
add
mov
xchg
outsl
in
scas
stos
pop
add
test
sbb
adc
fst
xchg
sbb
aas
add
fs
mov
jl
fdivl
adc
add
fisubrs
add
xor
jnp
push
lock
inc
scas
add
iret
jns
rcrl
sti
xchg
fnsave
out
add
push
inc
jl
mov
insb
fnsave
outsl
pushf
push
cltd
outsb
push
lea
fmuls
pop
out
int
inc
pusha
repz
push
andb
pusha
ret
jg
mov
fld
inc
mov
out
popf
adc
ja
add
cmpsl
add
int
and
and
or
xchg
dec
dec
sbb
bound
repz
pop
ret
sub
popa
push
fisubrs
mov
push
xor
add
dec
pop
add
cmp
and
stos
notb
shll
in
cmp
aaa
das
pop
adc
push
js
jo
popl
pop
mov
jp
xchg
das
pop
inc
fwait
mov
and
cmp
mov
push
cs
sahf
jecxz
ljmp
out
or
dec
mov
or
outsl
and
add
pop
mov
add
incb
add
pop
fs
cltd
js
and
push
mov
mov
mov
mov
cmp
aas
cmpsl
rcll
lea
inc
lret
xlat
sbb
dec
add
ss
mov
fdivrs
das
mov
in
sub
pop
dec
lds
hlt
jp
std
ss
mov
inc
jae
aad
mov
cmpsb
loopne
sub
cld
imul
shrb
sub
loop
mov
add
scas
shrd
mov
mov
aas
ret
add
out
jae
jmp
mov
mov
or
lret
rcrl
xor
outsb
cmp
or
pop
inc
lds
sbb
cmp
lock
adc
lahf
push
fiadds
cmp
cs
stos
add
xchg
adc
cwtl
push
fnstsw
into
xor
inc
xchg
sbb
imulb
or
fs
xor
mov
and
in
xchg
mov
loopne
and
shrl
daa
adc
pusha
xchg
add
mov
mov
lock
dec
xor
mov
int
or
in
inc
cwtl
testl
cmp
adc
gs
sub
outsl
fisubs
push
cmp
xor
xor
test
scas
shr
inc
add
fcompl
fidivrl
inc
aaa
xlat
movsl
inc
scas
add
jmp
cmpsl
das
and
insl
sbb
ret
aas
sbb
out
xchg
pushf
pop
leave
xor
lcall
xor
or
hlt
movsb
int3
and
dec
cli
daa
mov
repz
or
test
loopne
iret
sbb
mov
movsl
mov
cmp
add
adc
xchg
mov
dec
adcb
inc
xor
sahf
int
adc
clc
add
adc
or
cs
movsl
cmp
pop
adc
loopne
sahf
add
xchg
sbb
push
jb
xor
test
test
sbb
xor
lds
xchg
mov
push
ror
dec
mov
dec
popf
add
insb
insl
mov
add
mov
sbb
movsl
jne
lcall
jo
or
pop
lea
icebp
andb
out
out
adcl
mov
push
jl
out
adc
inc
ljmp
sub
xlat
mov
cmp
lea
loope
adc
sbb
lods
enter
jb
adc
gs
xchg
test
inc
lret
jb
mov
add
jo
or
pop
push
push
add
mov
stos
push
in
rcrl
imul
inc
cmp
and
xorb
dec
pop
lods
add
and
gs
fisttps
js
sahf
pop
inc
dec
and
push
test
add
sub
sti
push
sbb
dec
pop
test
xchg
shlb
ret
jno
sahf
jae
into
and
dec
push
lahf
and
mov
sbb
mov
rcll
adc
dec
aaa
cmp
add
jns
xchg
add
cmp
fstp
sbb
mov
add
fs
sub
mov
jl
movsb
rolb
loopne
push
lret
aas
pop
aad
pop
cmp
mov
les
mov
shlb
repnz
pop
loopne
add
mov
mov
add
adc
lods
jb
add
gs
sbb
es
inc
cmp
adc
sub
imul
push
pusha
lock
fimuls
inc
pop
fnsave
add
or
mov
pop
pop
push
add
mov
xor
dec
pop
cmp
pop
adc
jne
push
xor
add
inc
add
int3
xchg
cmpsl
rclb
loopne
stos
daa
scas
cmp
decl
add
mov
push
inc
inc
stos
ret
mov
pop
es
sbb
add
clc
mov
mov
push
add
inc
dec
inc
sti
out
popa
nop
clc
fs
mov
popa
paddsb
add
loope
mov
adc
push
add
loop
in
test
pop
ds
adc
lea
add
cmp
add
lock
push
mov
cld
icebp
sti
nop
or
mov
dec
fldl
inc
mov
outsl
xor
sbb
insl
xor
pop
jge
sub
add
cmp
and
lcall
iret
adc
pusha
inc
add
popa
cwtl
lcall
shr
test
and
add
push
rclb
and
mov
inc
lods
add
pushl
pop
push
stos
pop
and
xchg
mov
dec
jbe
imul
xchg
add
sbb
xchg
and
ds
adcb
mov
sub
sbb
fwait
mov
shl
pop
cmp
adc
pop
push
lret
and
dec
mov
push
loop
add
xchg
enter
das
jge
mov
pop
sbb
add
repz
rcrl
call
stos
adc
add
loopne
mov
fprem1
notl
jl
add
and
loopne
and
mov
add
popa
and
dec
or
cwtl
add
icebp
mov
add
imul
test
divl
movsb
insb
adc
mov
mov
adc
into
jb
jmp
xchg
setne
inc
or
cmp
mov
jb
mov
dec
pop
mov
js
test
add
adc
pop
cmp
sbb
jecxz
cmp
adc
imul
jne
xchg
fwait
push
xchg
roll
pusha
mov
cmp
outsb
int
and
ja
out
inc
std
jg
add
bnd
add
jl
movsl
cwtl
jmp
push
xor
testl
fisttpll
movsl
inc
add
nop
in
dec
fisubl
add
ret
je
lock
add
sbb
add
mov
xor
inc
mov
sahf
add
imulb
or
sbbb
push
mov
insl
xabort
popf
add
inc
jo
pop
jle
add
iret
or
sbb
int
adc
mov
mov
scas
add
arpl
bnd
repz
pop
add
dec
jl
jecxz
dec
mov
add
cld
pop
mov
mov
loopne
cmc
dec
xchg
das
sbb
or
xchg
daa
aam
enter
pop
jno
scas
jp
push
lods
add
or
fildl
mov
shll
mov
add
repnz
insb
xchg
aad
push
aam
icebp
daa
jo
loopne
xor
pushf
mov
and
lods
add
mov
adc
xor
pusha
in
out
neg
push
push
clc
jo
sub
and
add
int3
or
iret
dec
jnp
jo
adc
pop
cmp
cli
add
pop
mov
test
aad
add
dec
mov
add
test
sub
in
cmp
movsb
aaa
les
jecxz
mov
inc
loopne
xor
or
pop
out
inc
lret
icebp
jbe
add
jge
inc
mov
pop
shll
nop
test
sbb
or
mov
insl
ljmp
lods
xchg
add
adc
add
and
lret
push
pop
shlb
pop
sbb
dec
add
scas
out
out
les
mov
pusha
int3
jl
xchg
add
inc
pop
add
mov
xchg
aaa
add
add
push
enter
add
cmpsl
out
sahf
imul
add
mov
and
sbb
cmc
mov
test
or
adc
jp
ret
sbb
int3
fiadds
mov
popf
mov
out
and
adc
add
adcl
gs
jns
popa
int
add
aas
shrb
add
sbb
mov
out
cs
adc
adc
push
mov
ret
push
jbe
addb
add
cld
int3
sub
xchg
xchg
pusha
lods
jle
xlat
out
add
ret
mov
inc
ss
mov
adc
or
fs
push
jg
jbe
add
les
sbb
inc
xor
push
cmpsl
lahf
imul
adc
inc
mov
adc
xor
push
dec
dec
add
popa
mov
fimuls
cli
add
mov
stos
repz
cmp
pop
call
fisttpl
and
or
loopne
and
lods
pop
cli
xchg
sub
lea
add
pop
or
mov
adc
mov
add
dec
orb
add
add
xchg
push
push
pushf
mov
popl
int3
aaa
add
mov
mov
idivb
pop
push
or
sbb
mov
push
repz
addb
je
jo
sub
adc
adc
int3
sar
mov
imul
iret
add
xchg
sub
pusha
repnz
adc
add
push
add
iret
inc
cmp
aam
sub
imulb
jmp
jg
and
sub
dec
dec
sbb
ljmp
iret
add
and
sub
fdiv
jae
pop
mov
inc
or
jp
sub
push
mov
or
cmc
arpl
jmp
adc
push
js
sub
adc
out
pop
sbb
call
cmp
sub
pop
xchg
add
cmc
lcall
mov
fisubrs
adc
jae
cwtl
gs
clc
jecxz
loop
or
dec
aam
idivb
sbb
mov
imul
mov
push
pop
jmp
or
mov
add
cmpl
dec
mov
hlt
nop
xor
rcll
and
lret
dec
cmp
ja
sbb
sbb
mov
mov
add
xor
arpl
jae
roll
mov
xchg
inc
data16
das
ljmp
ds
jns
clc
xchg
mov
add
jbe
out
pavgb
pusha
addb
xor
sti
sub
mov
sahf
pop
aaa
jb
iret
jp
dec
lods
mov
movsb
stos
in
add
test
jecxz
jp
js
push
mov
mov
inc
mov
and
xchg
pop
add
xchg
or
out
xor
xlat
add
adc
pop
jae
jecxz
add
pop
aad
xchg
sahf
xchg
add
pop
sti
push
sbb
adc
cmpsl
scas
adc
out
cltd
adc
add
sbbb
negl
or
mov
loopne
mov
mov
xchg
inc
push
add
lret
or
leave
adc
cmp
loop
add
cmp
pop
pop
jecxz
adcb
lret
divb
je
inc
xor
inc
xor
add
popa
xor
inc
int3
mov
dec
or
jmp
lds
add
dec
notl
pop
mov
repnz
cmc
xchg
or
aad
fs
repz
in
adc
mov
adc
hlt
pop
loopne
clc
add
daa
cmp
lahf
pusha
and
sbb
sti
add
or
fldenv
adc
js
adc
loop
inc
jbe
and
mov
nop
mov
add
frstor
test
cmp
aad
pop
aaa
xchg
add
adc
and
mov
mov
sub
das
aas
add
mov
fsubs
add
inc
mov
lar
add
out
mov
lock
add
mov
test
add
mov
sub
pop
mov
imul
pusha
jo
push
mov
shll
orb
add
xchg
lret
shl
addr16
adc
push
push
clc
loopne
adc
and
xor
test
dec
fdivr
add
and
jge
stc
pusha
or
std
and
cmp
mov
sbb
push
mov
add
xor
xchg
rcr
pusha
test
jge
movq
aam
sub
shr
mov
aaa
jns
or
push
sub
sub
inc
inc
mov
es
cmp
pusha
into
sbbl
dec
cmp
mov
inc
adc
int
cmpsb
loope
movsl
jmp
add
outsb
xchg
mov
jbe
data16
pop
cs
cmp
or
adc
stos
js
pop
and
sbb
add
mov
repz
inc
popf
or
mov
jno
or
sbb
adc
call
pop
adc
mov
xchg
cmp
rol
xor
jl
add
inc
and
mov
mov
ret
addr16
push
inc
add
push
or
adc
add
xor
mov
add
sbb
jle
aas
push
popf
daa
mov
sar
adc
into
sbb
cmpsl
jns
pop
xchg
sub
ja
add
outsb
jne
loop
xchg
adc
and
adc
scas
or
cmp
jno
jle
or
das
adc
mov
fucomip
or
pusha
mov
mov
das
loop
or
add
sub
jae
jo
xchg
lcall
add
xor
cli
and
adc
push
jb
xchg
cli
mov
inc
push
lret
xor
fisttpll
ljmp
stos
add
xor
pop
aad
mov
add
loopne
sbb
cmp
mov
cmp
flds
mov
push
sub
sub
sbb
les
xchg
repz
cmp
sbb
adc
xor
sub
rorb
nop
sub
add
jle
sarb
dec
mov
in
xchg
mov
lods
mov
cmp
sub
stc
sarl
sub
out
or
sahf
sub
add
mov
gs
insl
mov
adc
jbe
or
int3
ret
sti
adc
jg
pushf
xchg
add
fsubl
adc
jmp
fldenv
add
sub
lods
add
add
sub
dec
cwtl
aam
push
jae
and
push
xchg
adc
pop
hlt
orl
aas
sub
or
stc
lahf
scas
or
adc
push
inc
sbb
xchg
out
or
add
inc
mov
dec
or
and
xor
lahf
mov
or
imul
sti
push
out
cs
mov
out
xor
and
sbb
iret
adc
aaa
pop
fldcw
loopne
mov
adc
rcr
and
add
cli
bound
push
shlb
pop
pop
lds
mov
sbb
scas
adc
push
pop
out
mov
lea
xorl
jge
push
fs
dec
cmp
push
rcrl
add
and
mov
inc
jge
fisttpll
and
mov
pop
inc
add
cmpsl
mov
enter
out
pop
xorl
sub
fcomps
maxps
add
dec
mov
fstl
rclb
dec
iret
cmp
add
icebp
pop
mov
loop
fildl
xchg
std
lcall
aas
or
adc
sbb
jb
push
mov
sbb
gs
movl
mov
sbb
and
add
aaa
pop
add
dec
rclb
jp
pusha
cmp
adc
divl
inc
dec
jg
mov
ret
sbb
pusha
cmp
push
add
loop
pop
push
aas
shll
pop
ficoms
mov
sub
out
addl
xchg
stc
insl
loope
ja
lret
shl
sub
add
add
dec
jne
ficoms
pop
mov
mov
aaa
es
test
loop
sub
inc
mov
in
push
movsb
adc
fimuls
andl
add
add
push
ja
lret
scas
and
sti
adc
stos
jecxz
push
jl
out
pushf
sbb
scas
loopne
scas
sub
push
adc
repnz
xchg
mov
jle
popf
pushf
sbb
movsb
jno
jnp
xor
pop
add
sbb
jbe
xchg
out
arpl
pusha
nop
rorl
xor
sbb
lret
add
test
or
inc
call
or
xchg
jecxz
lods
push
js
pop
and
clc
ret
push
add
sbb
scas
push
dec
dec
dec
lock
jmp
mov
imul
fdivp
adc
lods
ja
rcll
xlat
and
std
mov
inc
adc
mov
dec
imul
add
jne
fdivrl
loop
insb
mov
xchg
pop
xor
cmpl
push
aaa
mov
rcll
arpl
sbb
dec
mov
mov
mov
xchg
lahf
inc
and
ret
mov
add
adc
out
lret
repnz
push
add
add
cmp
out
cmp
in
and
jp
out
push
push
cmp
add
adc
xor
loopne
add
fstpl
mov
es
roll
pop
cmp
adc
std
sub
mov
push
cli
lods
sbb
scas
jb
rorb
and
imul
or
adc
aaa
add
and
lods
pop
mov
xor
repnz
ds
pop
pusha
leave
outsb
pop
decb
adc
cmp
loop
push
add
inc
or
xchg
sbb
mov
inc
lret
lock
dec
rorl
jne
sbb
in
stc
mov
in
int3
outsb
inc
scas
out
test
ljmp
sbb
mov
mov
sbb
dec
bound
mov
inc
insl
add
and
add
xor
add
xchg
cmpsl
mov
mov
sbb
fists
and
push
push
dec
mov
push
mov
icebp
jo
loopne
stos
inc
add
xchg
xchg
repnz
mov
xchg
push
pop
gs
xchg
cwtl
outsb
js
roll
or
data16
sbb
and
sub
jge
jb
mov
xchg
rolb
cmc
shrl
xor
mov
arpl
fisttpl
sbb
test
add
mov
jmp
sbb
pop
add
inc
std
into
and
sar
sbb
add
mov
mov
or
popa
sbb
xchg
iret
dec
jecxz
cmp
insb
pop
push
inc
sbb
pop
jbe
dec
jmp
andb
jle
xchg
shll
mov
sbb
sub
sbb
mov
xor
loope
pop
add
push
out
out
jg
test
fbld
mov
xchg
xchg
or
xor
adc
cmpeqps
ss
sbb
lock
lcall
pop
lahf
pop
mov
add
iret
idivb
outsl
popa
repnz
shrb
and
xlat
loopne
sub
inc
mov
cmpb
add
xchg
adc
into
lcall
sub
lods
push
out
scas
add
mov
int3
or
pop
aad
in
outsl
repz
pop
daa
add
fistl
sbb
add
loop
ljmp
mov
in
push
mov
mov
and
add
mov
lea
or
jle
pop
idivl
mov
arpl
cld
pusha
add
or
testb
into
enter
es
loope
xchg
mov
mov
mov
iret
out
add
lods
repz
enter
fcomps
int
push
add
cmp
mov
xor
fcoml
push
push
enter
dec
jmp
cs
sub
fwait
xchg
and
adc
nop
and
push
je
das
pushf
adc
dec
add
dec
add
add
push
fnsave
addb
dec
imul
mov
out
insb
into
xor
inc
icebp
cmp
es
inc
jge
aas
je
shrl
js
shl
sub
add
es
sbb
mov
loopne
pusha
xor
cmp
cmpsb
mov
mov
jp
mov
add
fmull
add
sub
sbb
popf
push
mov
sti
push
adc
sub
aad
sbb
insl
stos
insb
jb
add
add
pop
ljmp
mov
adc
inc
ja
xchg
fsubl
sub
add
test
sbb
outsb
iret
add
xor
add
pop
cmp
fidivl
popf
jo
ds
movsb
sbb
jmp
insl
imul
sbb
push
mov
mov
cwtl
adc
nop
mov
hlt
stos
jo
mov
rcll
outsl
push
or
sbb
bound
mov
lret
xchg
push
mov
stos
adc
inc
mov
outsl
add
les
ss
add
mov
push
ja
ljmp
sub
shr
daa
mov
lret
jecxz
jo
add
jno
pushf
xchg
add
call
outsb
inc
push
pop
sbb
lods
daa
loope
xor
in
call
mov
add
rol
jecxz
in
je
dec
jnp
dec
and
loopne
call
xlat
sbb
lret
adc
call
movsb
les
cli
push
xchg
add
jmp
jg
fs
cld
shll
push
xor
imul
loopne
jmp
pop
and
fdivr
xor
fldl
mov
cmpsl
in
out
dec
pusha
fisubrl
sbb
xchg
les
and
or
movsl
mov
push
jo
sahf
adc
pop
or
sti
in
filds
sbbb
stc
ror
lea
sbb
cmp
add
pop
add
mov
dec
pushf
add
enter
inc
jg
dec
shl
lods
mov
mov
adc
push
cmp
xor
pop
inc
add
dec
insb
into
add
lahf
xlat
sbb
pop
adc
pop
mov
mov
push
dec
sub
in
pop
add
repnz
jo
pop
jmp
sub
leave
scas
push
pusha
negb
add
outsb
xor
popa
jns
mov
adc
push
adc
loopne
cwtl
xor
sbb
bound
add
push
jno
cld
adc
cmp
inc
cs
flds
test
scas
inc
add
loope
in
fs
add
fnstenv
sti
dec
xor
push
jbe
std
ds
je
cmp
sub
adc
in
ficompl
adc
and
add
and
jmp
dec
inc
add
sub
add
sbb
loop
xor
push
loopne
aad
mov
mov
outsb
scas
inc
add
movb
add
clc
daa
nop
into
adc
pop
ffreep
mov
loope
ds
mov
pusha
adc
sbb
hlt
mov
mov
mov
mov
int3
ficoms
das
or
aas
insl
pop
lock
dec
jecxz
add
or
les
sub
call
addr16
add
aam
fstpt
leave
add
mov
and
fld
xor
mov
inc
mov
or
arpl
and
pusha
pop
sti
loopne
adc
pop
pop
int
add
orl
cwtl
push
adc
js
addr16
add
sbb
cmp
jne
sub
mov
loopne
cmpsb
dec
sub
jp
adcl
sbb
mov
sub
in
outsl
jo
mull
pop
or
mov
adc
mov
jecxz
rorl
mov
loop
jge
mov
rcr
outsl
in
inc
adc
leave
sbb
jns
les
loopne
or
and
xchg
incb
test
xchg
aad
add
je,pn
push
mov
add
inc
inc
fwait
inc
lret
xorl
ret
push
add
lret
dec
movb
add
push
dec
daa
dec
pop
add
add
jle
inc
out
add
lret
mov
mov
stos
leave
sbb
rcrl
mov
add
add
jo
sbb
jmp
add
sub
mov
jb
mov
scas
ret
arpl
sub
jnp
aad
mov
mov
and
sarl
pop
cmp
xchg
mov
or
nop
jl
cltd
sti
jnp
in
or
sahf
pop
add
jb
pop
push
push
dec
add
cmp
add
mov
ret
add
cmp
shll
roll
mov
in
loope
es
in
push
pusha
inc
or
ficoml
orb
cs
adc
enter
add
lock
jne
or
out
call
int3
push
outsl
lahf
jnp
mov
jp
mov
orl
pop
add
hlt
xchg
xor
arpl
mov
jg
fcmovu
pushf
xlat
pusha
jb
das
sub
adc
sub
mov
push
mov
loope
add
stos
sub
and
in
push
jne
inc
lods
push
cmp
sbb
movsb
sub
fcomps
in
into
insl
sub
add
add
fldt
outsl
lret
pop
add
es
mov
and
inc
je
lock
inc
sbb
dec
or
push
andl
hlt
rcl
inc
or
add
fcmovnu
adcl
add
call
jne
fbstp
shlb
shrl
mov
or
adc
cltd
mov
add
in
jmp
lret
add
cs
inc
rolb
enter
and
dec
fdivrl
push
cli
ret
pop
adc
dec
pop
or
mov
ret
aaa
pop
push
cli
adc
pop
divl
jno
ja
inc
pop
in
mov
inc
lahf
jle
jb
test
jecxz
sbb
add
lcall
aas
cmc
sub
sbb
inc
cmp
xchg
sbbl
jb
mov
mov
call
loop
adc
outsb
out
out
adc
lcall
lods
xor
loopne
pop
imul
clc
lret
push
pushaw
xchg
aam
movsl
ljmp
add
dec
jns
and
mov
popa
add
and
test
cmp
pusha
mov
mov
pop
add
ret
jecxz
fstps
fisubs
adc
add
xor
shl
incl
imul
pushf
addl
mov
push
pop
add
or
mov
popf
ljmp
inc
mov
addl
ret
or
add
sub
fmull
lcall
jl
pushf
add
ds
insl
pop
fnsave
mov
repnz
aas
or
stos
test
add
adc
cmp
and
outsl
jle
pop
shl
push
popa
and
stos
mov
in
mov
xchg
add
lock
aad
pop
inc
in
add
test
mov
movsb
ficoml
add
enter
loopne
and
add
pop
sbb
je
ljmp
mov
xchg
jmp
das
jg
mov
add
cld
mov
incb
repz
cmp
ljmp
pop
sbb
mov
jne
aam
into
add
call
lea
out
pushf
sbb
std
mov
testl
dec
aaa
jle
xchg
adc
inc
iret
jno
pop
mull
sbb
sbb
add
in
cltd
adc
adc
mov
sbb
idivb
push
add
jns
movsb
cmp
repnz
or
out
and
mov
imul
xor
iret
sarl
add
jo
push
sub
and
push
dec
in
ret
lods
jmp
push
popf
adc
lcall
or
sub
mov
icebp
jge
test
rclb
scas
push
pop
xlat
inc
loopne
or
lahf
out
sbb
fnstenv
roll
fisubrs
ficoml
xor
mov
loope
lock
dec
mov
stc
fstpl
mov
xor
add
adc
pop
nop
lods
add
mov
iret
das
ror
sub
add
pop
shll
dec
fwait
gs
rorl
lds
cmpsb
lahf
add
and
jp
add
add
push
or
test
jmp
ret
fsts
fistpl
and
xor
xchg
xlat
cld
lea
or
add
andl
adcb
jecxz
cmc
push
mov
cli
aam
mov
jle
sbbl
int
mov
ret
adc
stos
mov
inc
xchg
add
data16
pop
pop
mov
lret
mov
call
adc
jo
or
push
add
jp
int3
push
mov
popa
inc
or
mov
push
out
ret
daa
outsb
adc
pop
add
aad
lods
inc
aas
xor
or
adc
test
popa
sbb
es
and
sbb
sub
dec
decl
and
or
test
fwait
test
add
dec
rclb
sbb
in
push
push
push
xor
jbe
jnp
and
add
test
add
push
xor
mov
sbb
and
fldcw
mov
adc
sti
pop
notl
iret
arpl
and
add
insb
xchg
mov
jnp
cmp
dec
pop
test
add
add
aam
sub
or
add
stos
sarl
add
and
jecxz
sbb
mov
out
add
stos
addr16
mov
add
and
lds
nop
fcompl
mov
das
pop
add
fstpl
push
add
pop
cmp
cmp
ja
jl
test
mov
pop
ret
ficompl
mov
outsl
add
inc
mov
add
jle
insl
js,pt
xlat
add
cmp
mov
xchg
test
pushf
ret
push
push
cmp
ljmp
jae
or
push
jo
jbe
mov
cwtl
push
jae
dec
mov
cmp
stos
icebp
ss
les
jbe
leave
or
pop
cmp
jnp
lret
mov
and
mov
lret
nop
add
inc
fldl
add
sub
cmp
test
mov
jl
lods
out
cmpsb
hlt
or
bound
add
jnp
pop
mov
cmp
adc
cmp
pop
jg
add
mov
jae
and
out
je
stos
add
loopne
add
bound
or
cmpsl
or
ret
stos
push
insb
push
dec
data16
out
add
sbb
and
cmpsb
and
mov
loope
cld
pop
jne
fwait
pushf
bound
je
repnz
add
fwait
call
loope
cld
loop
add
cs
add
popl
test
dec
push
fildl
mov
jl
cs
xchg
fcoml
sub
repz
inc
pushf
mov
sub
aam
leave
stc
add
and
inc
cwtl
jecxz
add
adc
cmpsb
popf
ret
ljmp
sub
and
popf
scas
add
xchg
cmp
iret
xchg
call
imul
rorb
pop
xorb
stos
add
out
adc
cmc
dec
mov
int
adc
add
sti
hlt
jg
mov
lea
lcall
xor
test
mov
add
mov
sbb
add
testl
iret
xchg
and
adc
andl
or
add
push
mov
aam
cmpb
loopne
xor
jb
sbb
add
adc
in
fstl
mov
lcall
sub
lret
add
inc
arpl
cmp
add
and
add
xor
cmc
push
xchg
test
mov
outsb
movsb
dec
sahf
shll
adc
mov
arpl
cmpsb
pop
xchg
cmp
xchg
je
imul
jg
mov
inc
push
or
pushl
pop
mov
inc
arpl
sbb
out
xchg
inc
and
int3
push
movsl
pop
or
sbb
inc
incl
xchg
pop
mov
mov
inc
jbe
mov
jp
addl
sbbl
push
fcmovb
and
enter
cmp
dec
ret
sbb
xchg
and
sub
jno
sarl
hlt
mov
adc
add
clc
xor
sahf
mov
xchg
push
das
ret
shrl
push
roll
cwtl
mov
stos
pop
es
add
push
sub
movsb
jno
add
in
es
inc
int
jl
pop
movl
xor
add
mov
inc
pop
add
pusha
pop
mov
add
or
or
add
gs
pusha
je
cmp
lds
lcall
mov
scas
rcr
cld
movsl
inc
dec
adc
pop
adc
push
push
mov
lahf
fmuls
scas
pop
xlat
ja
add
fisubrl
cmp
aad
popf
mov
sub
adc
adc
mov
popl
arpl
ss
daa
mov
loop
add
stos
leave
jne
xor
inc
add
jnp
lcall
movl
das
mov
jp
or
cld
pop
and
lock
push
or
sbb
or
mov
jg
testb
out
lds
push
pop
mov
int
jecxz
inc
and
sbb
xchg
stos
sub
test
aad
loopne
loopne
mov
adc
and
mov
and
pop
mov
add
gs
adc
pop
add
jl
lcall
mov
pop
add
pop
pop
sar
mov
pshufw
pop
cmp
add
rcrb
cltd
cmp
sbb
inc
add
andl
mov
add
loopne
jae
mov
fdiv
icebp
ja
in
cmpsb
dec
and
push
daa
dec
sbb
scas
sbb
lret
js
fidivrs
cs
mov
or
fisttpll
testb
aad
ltr
fadd
cmp
fwait
jne
mov
mov
ja
mov
cmpsb
enter
ret
push
test
xchg
mov
loope
add
jae
sub
xchg
jg
dec
add
push
push
incl
pusha
mov
enter
push
pop
xor
or
das
enterw
ret
jle
or
in
out
mov
insl
sub
mov
scas
clc
test
dec
out
pop
outsb
loop
xchg
mov
lods
mov
add
out
in
and
test
mov
mov
je
inc
mov
inc
mov
subl
mov
lea
rolb
hlt
fdivrs
add
cwtl
push
add
xor
fs
daa
pop
add
cltd
insl
adc
pop
xor
nop
pusha
out
into
pushf
push
orl
inc
fisttpll
movsl
les
sarl
mov
sbb
imul
out
ljmp
daa
scas
push
ds
inc
dec
sub
stos
jmp
sbb
xor
pushf
sub
fiaddl
add
and
mov
sub
cs
add
mov
push
xor
cmp
out
mov
add
and
fstps
cli
dec
loopne
inc
add
subl
fs
sbb
and
push
shlb
pushf
fldcw
aaa
addb
inc
in
xchg
out
xchg
add
popa
test
adc
loope
or
dec
inc
rolb
test
sbb
rorl
and
loop
inc
cmp
push
push
inc
loope
cltd
icebp
in
sbb
xor
or
xchg
add
jnp
mov
loope
push
iret
aad
sar
pop
xchg
mov
mov
push
out
mov
cmp
push
mov
add
sub
xchg
mov
mov
xstore-rng
cmpsl
add
dec
mov
jmp
mov
cmp
push
add
cwtl
inc
les
and
mov
push
aaa
stos
mov
aad
inc
mov
pop
jecxz
dec
ljmp
sub
ret
cmpsl
xlat
mov
add
mov
pushf
nop
cmp
daa
push
mov
mov
nop
add
ret
leave
mov
or
jb
mov
jecxz
out
mov
inc
aam
push
push
in
lds
pusha
pop
sbb
sbb
adc
aaa
sahf
jle
loop
add
mov
xchg
and
xlat
fsubrl
pop
xor
ficomps
add
in
pop
ret
pop
int3
add
and
insb
movsl
cmc
test
push
loopne
bound
aaa
mov
rcrb
sub
add
sbb
adcb
das
sub
fisubrs
sbb
inc
iret
pop
mov
popf
add
xor
out
mov
jl
mov
mov
jbe
xor
mov
pop
std
add
shlb
test
scas
push
add
sbbb
add
inc
add
data16
mov
or
sbb
inc
adc
push
shrl
cmp
cmp
inc
pop
push
add
xchg
add
data16
push
and
rclb
sbb
cmp
pusha
in
addb
adc
xorb
mov
pop
fs
loopne
fcmovnu
dec
mov
es
mov
mov
xchg
loope
fimuls
repnz
push
and
mov
inc
jb
ret
mov
or
dec
add
fs
add
js
add
stc
or
add
xchg
jns
ds
into
lds
lds
mov
test
add
mov
stc
mov
add
or
ret
cmp
pop
jmp
cmpb
pop
int3
fsubl
inc
add
leave
call
sarb
pushf
xor
lock
ret
popf
imul
jl
push
push
sub
pop
jecxz
rclb
ljmp
scas
les
jg
push
inc
push
repz
dec
add
andb
mov
or
jbe
mov
pusha
lea
lods
pop
movb
pop
jo,pt
dec
gs
cmpsl
ret
mov
mov
cmp
jae
das
pop
pushl
outsl
add
mov
add
xchg
add
in
xor
mov
and
cmc
sub
mov
push
les
xor
mov
add
jg
mov
gs
ja
in
cmp
lcall
sahf
cmpsb
sub
jo
mov
xlat
mov
jl
lret
subl
inc
mov
add
jbe
cs
enter
cmp
jnp
outsb
dec
in
push
std
in
adc
out
shll
fs
add
aas
adc
aad
shll
inc
popf
jo
push
jnp
add
fldt
dec
pushl
les
dec
std
data16
sbb
repz
in
stos
sub
jo
xchg
adc
sbb
sub
call
pop
push
xchg
sbb
cld
icebp
pop
ljmp
jle
add
repz
dec
pushf
outsb
mov
sahf
daa
add
jmp
xor
cli
cltd
mov
jg
add
out
fwait
mov
sub
mov
xchg
add
ljmp
sti
or
paddusb
add
add
push
mov
cltd
addr16
filds
sub
rcl
xchg
shlb
stc
data16
jp
sbb
inc
inc
pop
inc
mov
int3
push
sbb
pop
movsb
adc
in
test
js
stc
pop
xchg
call
pslld
scas
rolb
ret
xchg
pop
cmp
add
enter
inc
leave
mov
pop
and
pop
mov
lods
int
shll
mov
loopne
xchg
or
pop
add
iret
int
mov
imul
movsl
push
or
add
nop
push
test
rorl
add
add
arpl
xor
add
mov
and
or
fistps
sbb
cli
loopne
jne
out
push
leave
scas
jecxz
loopne
int3
imul
pop
outsb
mov
lcall
sbb
and
mov
mov
push
in
ljmp
rclb
add
popf
out
or
add
mov
and
jnp
out
xchg
ficompl
xor
fwait
pop
jb
cmp
call
insl
add
std
jns
mov
imul
out
jno
xchg
push
sub
in
shl
pop
add
cmc
loopne
inc
rcl
cmp
push
mov
jbe
sbb
xchg
je
lock
std
cmp
xchg
jge
cwtl
dec
add
aas
rcl
rclb
jle
add
push
or
add
or
dec
aam
int3
js
sub
add
into
scas
sub
adc
xchg
mov
pop
fldl
cmp
or
pop
add
imull
mov
cld
pop
pop
add
mov
xchg
icebp
mov
add
cmp
xchg
push
cmpl
adc
dec
mov
xchg
mov
cli
cmp
and
into
ret
pusha
shlb
fdiv
popf
add
xchg
pop
add
mov
mov
add
mov
mov
ds
jno
inc
ja
jmp
inc
icebp
mov
fisubs
add
lret
call
push
dec
lock
pusha
mov
bound
and
lret
fildl
sub
int
push
repz
mov
mov
loope
stc
sbb
movsb
cltd
vmovshdup
inc
or
mov
popf
ja
addb
mov
cld
imul
mov
add
loopne
out
sbb
add
icebp
mov
nop
mov
fcom
inc
enter
push
out
cmp
adc
in
push
inc
fists
sub
popa
pop
adcl
sub
adc
push
add
xchg
xor
jg
and
push
das
aad
jns
insb
imul
add
pop
inc
ljmp
sbb
dec
mov
mov
or
loop
mov
jge
lahf
sbb
aas
test
movsb
push
shl
pop
add
mov
into
sbb
pop
mov
adc
shl
xchg
test
or
pop
in
subl
inc
shr
stc
dec
into
add
mov
lahf
fidivrl
shl
popf
sbb
sub
adc
nop
sub
pop
add
mov
dec
mov
cmpsl
cltd
jo
add
jg
push
add
fs
sub
mov
imul
push
pop
cmp
popf
das
sub
push
cmp
test
cmp
add
js
in
adc
add
push
out
and
loope
mov
mov
fildll
jecxz
cld
inc
jecxz
adc
rorb
ret
add
repnz
je
shlb
xor
mov
or
xchg
pushf
data16
lret
xor
sub
xor
mov
dec
mov
mov
stos
jae
gs
cmp
movsb
sbb
pusha
xor
dec
test
mov
add
sub
and
push
push
sahf
dec
cwtl
pop
push
sub
and
int3
add
mov
add
mov
push
mov
pushf
inc
adc
test
sbb
mov
out
pop
xor
testb
and
data16
xor
dec
xchg
cmpsb
sbb
fiadds
sub
in
xchg
push
add
lods
fisubrl
aaa
jns
sbb
out
fucomp
rcrb
add
xor
out
daa
test
incb
pop
imulb
loope
mov
push
aas
ret
and
gs
xchg
xor
str
fldl
add
ds
mov
lahf
push
ret
add
push
pop
fistpll
les
jecxz
test
fwait
push
add
ss
stc
jp
or
add
lret
and
add
and
cmp
jne
add
add
aad
int
add
jmp
imul
inc
mov
arpl
add
push
nop
jae
xchg
es
into
mov
cmp
inc
pop
mov
mov
mov
xor
les
inc
push
jle
xor
sub
sbb
mov
mov
pop
aad
daa
stc
mov
pcmpeqd
add
pop
fdivs
out
add
inc
mov
dec
jb
les
ja
pop
jae
aas
aam
dec
bound
mov
add
fs
in
jns
aas
add
adc
shl
add
mov
push
push
lahf
jns
lods
dec
xchg
pusha
test
jnp
mov
int3
arpl
xchg
or
dec
out
inc
sub
sbb
add
popa
add
pusha
ljmp
lods
add
aaa
mov
xchg
dec
xor
sub
cmp
popf
sub
push
lds
push
jle
add
ljmp
inc
mov
inc
add
outsb
or
mov
ss
xor
pmaxub
or
cld
repnz
out
push
lret
sub
push
sbb
mov
add
sub
loopne
into
cmpl
add
fdivrl
ja
push
push
icebp
add
dec
mov
cmpsl
ljmp
test
sub
push
rcrb
add
enter
mov
mov
ret
add
add
into
add
shll
loop
stc
std
add
adc
jecxz
add
mov
mov
sti
popa
stc
add
outsl
jmp
add
loop
in
mov
aas
mov
push
test
jns
inc
das
push
sysenter
test
pop
add
adc
xchg
sub
cmp
cld
inc
scas
sbb
xor
mov
movsl
hlt
sbb
loop
pop
mov
push
add
xor
les
or
inc
flds
test
add
mov
and
jno,pn
bound
addr16
add
movsl
lock
and
mov
sahf
sub
fwait
data16
mov
add
mov
jle
push
loopne
jo
jne
or
dec
add
jmp
std
mov
cmp
cmp
push
rcrb
aaa
in
mov
addb
dec
push
pop
mov
pop
icebp
in
ret
std
ss
cltd
stos
xchg
sarb
cli
dec
str
lcall
iret
out
sbb
dec
pop
roll
lret
jo
in
mov
adc
test
pmulhuw
or
sbb
jae
hlt
xchg
pop
add
mov
fidivrs
arpl
test
test
cmp
mov
or
es
pop
arpl
mov
and
xchg
sbb
lock
dec
ds
aas
sbb
fwait
sbb
outsl
adc
jl
dec
leave
lds
out
lock
mov
rorb
push
ficoms
mov
imul
add
stc
adc
shrd
rorl
cmp
movsl
insl
jmp
push
push
lods
xchg
outsb
add
out
mov
pop
push
ret
inc
xor
sbb
repz
or
cmpsb
loope
mov
push
rcll
fwait
push
dec
sub
add
add
and
push
add
ja
mov
add
push
dec
inc
jo
add
das
fiaddl
movsb
fildl
pop
adc
xchg
add
push
fldcw
adc
outsl
sbb
add
aaa
aas
push
push
push
cmp
sbbb
imul
cld
sub
and
mov
push
lock
dec
into
jns
jb
dec
aaa
add
mov
cwtl
add
inc
fistps
out
cmp
mov
int3
gs
int
cli
and
add
mov
adc
adc
jecxz
cwtl
adc
dec
xlat
dec
pusha
loope
test
or
add
imul
push
xor
dec
sbb
cltd
pop
incl
push
xchg
cwtl
out
mov
mov
sbb
mov
insb
loop
ljmp
adc
daa
xchg
mov
fs
je
cli
sbb
pop
and
outsb
stos
sbb
mov
pusha
jge
adc
adc
mov
je
add
scas
jge
int
stos
bound
inc
pop
jns
dec
rcl
aad
mov
add
or
cmp
inc
dec
jbe
in
sub
pop
rolb
data16
add
cmpsl
adc
cmc
sbb
lods
icebp
outsb
sarl
lods
fadds
sbb
lcall
push
cmp
das
add
mov
leave
stos
out
xchg
test
jns
sbb
sbb
loopne
iret
and
xor
xchg
or
or
push
xor
cmp
fadd
fwait
out
pop
stos
add
add
or
xor
sbb
jmp
loopne
lret
movsb
lds
sub
loope
nop
jmp
adc
popa
dec
test
adc
iret
cmp
mov
inc
je
lret
jecxz
add
fsubrl
mov
adc
addl
idivl
call
lock
and
test
sbb
inc
adc
into
xchg
iret
adc
test
sub
and
adc
add
mov
movsl
scas
faddl
subb
mov
sub
inc
ss
add
xor
cmp
mov
jmp
loopne
jo
add
add
call
sbb
mov
inc
add
sub
out
aam
scas
add
rorb
pop
xlat
add
shl
add
fs
repnz
pusha
pop
jbe
ret
push
xchg
add
cmpsb
bound
test
ror
in
dec
movl
inc
sbb
out
add
stos
xchg
inc
jl
mov
icebp
adc
add
pop
or
inc
lahf
cwtl
rcr
out
hlt
xchg
push
sbb
popa
add
add
mov
add
mov
and
ret
push
add
mov
sbb
dec
jmp
fsts
mov
add
xor
into
aad
add
aaa
push
les
bound
insb
std
or
mov
push
enter
mov
mov
cmp
lock
movsl
jbe
add
push
add
sbb
xor
rclb
mov
xchg
sbb
and
mov
or
lods
sbb
pop
subb
lret
pop
add
adc
xchg
cmp
add
mov
jae
sub
or
xchg
inc
or
add
loop
cli
cmp
adc
mov
fwait
cltd
add
pushf
andb
pop
loope
fcomps
adc
test
add
mov
jmp
ret
push
add
mov
add
or
cmp
popf
faddl
add
test
imul
add
lcall
fsubrl
and
xor
or
and
jo
lock
pop
mov
push
sub
lea
iret
adc
lds
in
popa
rcl
es
cs
lmsw
xchg
jns
js
sbb
jg
and
jecxz
ret
repnz
and
pop
call
dec
pop
cmp
add
or
stc
jnp
add
or
sbb
sbb
mov
jle
mov
jo
arpl
les
push
push
dec
repz
inc
or
loopne
cmp
lret
push
inc
push
enter
lds
push
out
pop
jecxz,pn
adc
ret
push
das
inc
xor
sub
mov
ret
mov
jbe
loope
lcall
mov
out
inc
ds
imul
in
cwtl
into
jo
iret
sahf
pop
bound
test
inc
or
mov
sarl
sbb
loopne
pop
and
add
pop
into
push
add
push
test
dec
add
sbb
mov
lods
xchg
sub
daa
pop
sub
sbb
ds
cltd
adc
xchg
add
cmp
fistpll
mov
movsl
push
movd
jns
mov
mov
add
adc
sbb
out
push
add
add
repnz
je
mov
js
and
xlat
cmp
xor
mov
enter
iret
mov
cmp
int3
mov
std
push
mov
fnstsw
xchg
dec
sbb
xchg
mov
adc
push
loopne
imul
movsl
dec
adc
push
add
mov
add
mov
loope
popf
in
pushf
dec
xchg
outsl
std
and
mov
sbb
push
xor
fs
sbb
gs
pop
adc
add
push
fdivrl
add
xor
add
test
cmp
lds
xchg
mov
inc
sbb
fisubs
cmp
push
jp
pop
xchg
push
cmp
imul
and
loope
add
adc
pop
mov
addl
scas
mov
aas
rorl
adcb
outsl
loop
jp
stos
cld
sbb
roll
pop
xchg
ret
add
push
in
ja
fdivrl
add
and
pop
sub
sbb
or
cs
ja
jl
out
and
adc
or
jnp
nop
leave
test
cmp
add
dec
jno
add
xchg
mov
loop
cltd
jl
aas
lds
pop
scas
push
js
filds
jno
les
jle
pushf
cmp
pusha
or
jbe
test
add
loop
jl
xchg
iret
jo
lcall
cmpsl
sub
ja
stc
fisttpll
push
int
jne
jns
add
and
or
cmc
dec
add
mov
pushfw
loopne
xchg
shll
arpl
out
or
sbb
adcb
mov
clc
jb
mov
test
movsb
add
incb
adc
sub
jo
xor
or
push
adc
repz
adc
mov
xchg
sbbl
jmp
mov
add
xchg
imul
sahf
aas
lods
data16
stos
sbb
fwait
jno
cmp
ficomps
push
adc
xor
sub
dec
call
imul
pop
jge
inc
adc
mov
sbb
add
insl
xorl
adc
jecxz
hlt
outsb
and
cld
mov
cwtl
push
ret
out
sub
mov
or
add
mov
jmp
in
out
add
mov
cltd
popa
cli
pop
add
fs
add
setae
add
pop
sub
adc
std
iret
lods
add
or
out
adc
hlt
and
sbb
and
or
inc
scas
or
cmpl
xchg
lcall
dec
mov
mov
fnstsw
or
sub
fwait
scas
jae
and
rcll
or
inc
add
cmpsb
push
mov
sub
adc
xchg
aas
and
lret
xchg
leave
dec
dec
repnz
pop
ret
scas
shl
repz
push
adc
jbe
aam
add
jl
add
adc
inc
and
icebp
pushf
jg
adc
inc
add
aad
dec
popa
addr16
ret
adcb
jae
mov
test
test
jmp
dec
pop
xchg
or
nop
add
subb
push
pop
je
adc
sub
ret
and
mov
xor
aaa
arpl
subb
clc
push
insb
aad
addl
jns
es
loopne
cs
cli
xchg
or
mov
repnz
fs
cwtl
push
rcll
sahf
add
out
imul
loop
jno
xchg
popa
push
jle
loope
jae
pop
add
test
hlt
xchg
pusha
mov
fs
adc
loopne
mov
cmp
roll
sbb
add
mov
testb
stos
out
push
jns
fldl
lea
jne
or
jb
inc
scas
and
or
sbb
lret
aam
addl
jae
sti
sbb
and
shlb
mov
push
pusha
fldt
pop
imul
cld
outsb
inc
and
jg
push
sub
in
xchg
jge
inc
add
cmpsb
rcrl
pusha
mov
push
or
fisubs
jl
or
sbb
or
loopne
push
and
mov
lock
sbb
push
pop
pop
imul
rolb
call
cmp
fidivrs
mov
popa
data16
mov
insb
sbb
sbb
dec
cld
ds
fnsave
aam
icebp
mov
out
mov
hlt
addr16
popa
dec
sub
sub
pusha
fidivrs
jmp
pop
sbb
bound
or
push
out
ja
mov
loopne
xchg
out
negb
imul
jbe
clc
jmp
pop
test
mov
sbb
aas
add
push
inc
pop
lods
subl
pop
fisttps
adc
lahf
ficompl
jo
inc
or
jmp
loope
inc
push
mov
sbb
repz
call
adc
out
cmp
cld
inc
add
pop
jl
pop
push
xorb
lret
cmp
and
xchg
popf
lods
cltd
add
cmp
xor
and
dec
lahf
ret
sbb
out
cld
or
add
push
mov
pop
pushf
mov
push
xchg
add
mov
bound
pop
mov
inc
and
push
mov
mov
sbb
lds
adc
movsb
ret
jge
xchg
push
pop
add
and
adc
add
and
ret
or
roll
sbb
arpl
loop
mov
sti
push
or
inc
push
cmp
aas
loopne
fwait
xchg
xchg
ljmp
pop
icebp
push
xor
adc
ficoml
and
add
xor
fiaddl
int3
out
pop
outsb
dec
addl
and
test
mov
icebp
lcall
pop
sbb
dec
div
xchg
js
pop
add
inc
loop
inc
or
mov
loopne
inc
mov
add
dec
into
js
rcrl
or
mov
xchg
fcoml
ret
push
fldcw
lds
rcrb
pop
mov
subps
rcr
inc
xchg
nop
loopne
mov
and
mov
dec
lret
add
push
out
ret
push
sub
insb
daa
and
rcrl
push
jo
pop
add
dec
imul
loope
mov
lock
ljmp
sbb
es
cmp
cmp
or
add
movsl
jg
mov
mov
insl
sbb
outsb
movb
hlt
out
fisttpll
loop
add
xor
add
aaa
movsl
les
adc
in
xchg
add
or
add
in
std
dec
in
jo
mov
stc
out
mov
add
adc
jmp
push
sub
lcall
roll
push
add
mov
jbe
and
add
ret
pop
add
ret
push
cltd
addr16
xchg
lahf
mov
loopne
dec
cmc
xor
or
stos
jb
daa
push
push
fwait
ja
dec
test
imul
xchg
pusha
rorl
sbb
sub
mov
std
adc
xchg
cmpsl
mov
sbb
mov
push
xor
and
in
fcompl
add
mov
jno
lds
push
repnz
adc
mov
je
sbb
mov
in
add
aad
lcall
dec
push
imull
xlat
cmp
addl
popl
mov
outsb
std
sbb
sbbb
scas
add
movsl
sbb
imul
sbb
jecxz
enter
mov
cmp
into
and
insl
jns
aas
xchg
iret
add
cmpsb
gs
push
lret
mov
and
adc
les
jmp
cmpsb
stc
adc
leave
ret
push
out
fs
sub
add
inc
inc
stc
sarl
lret
sbb
adc
mov
neg
push
push
push
add
fcomps
out
outsl
xor
pop
sbb
add
mov
in
hlt
dec
aam
adc
jo
int
pop
and
or
shll
mov
add
loop
sub
ficoml
sub
movsl
sub
push
int
sbb
test
add
adc
cli
add
stos
sub
ss
xchg
loopne
mov
popf
add
mov
lea
add
mov
ja
jno
fcomi
jbe
fxch
add
es
scas
jecxz
mov
sub
enter
lret
xlat
iret
xchg
pop
loop
rolb
adc
adc
mov
fwait
neg
push
gs
and
add
mov
mov
jg
push
mov
popa
imul
insb
outsb
and
xor
mov
adc
flds
jle
mov
push
jo
dec
inc
sbb
cmp
and
pop
push
jns
add
mov
jmp
test
test
xchg
mov
pop
add
xchg
push
jp
rorb
and
add
jo
add
in
dec
incl
dec
ja
mov
add
jp,pn
scas
sbb
add
aaa
leave
mov
out
cmp
js
and
lods
mov
or
nop
add
insb
jne
icebp
test
sub
lahf
jmp
jbe
push
mov
push
add
mov
aaa
bound
mov
rclb
mov
stc
imulb
add
clc
lock
and
sub
repnz
popa
sar
inc
xchg
ret
icebp
or
xorb
shlb
mov
fiadds
push
test
fldt
arpl
mov
aam
sahf
and
add
subl
mov
inc
and
add
popf
cmp
jbe
mov
lret
sbb
push
pusha
mov
loope
xchg
out
lcall
lods
pop
test
push
xchg
mov
add
in
out
lock
imul
inc
push
add
sbb
xchg
cmp
ret
cmp
or
dec
or
idivb
adc
fsub
int
sub
or
mov
dec
mov
cmp
pop
add
icebp
lock
leave
mov
loopne
dec
pop
dec
nop
xlat
mov
rorl
inc
lds
or
pop
mov
les
test
jp
push
cmp
add
sub
idivl
xchg
add
xor
push
add
shrl
xchg
fs
xchg
push
sub
das
aam
pop
add
outsb
lret
cmp
aas
and
jg
fdivr
inc
pop
stos
pop
mov
pusha
fidivrl
mov
repnz
stos
pop
lret
cltd
jo
lahf
repz
or
cmp
sbb
push
or
adc
pop
inc
push
daa
in
loop
loopne
mov
adc
push
fmul
cmc
data16
lret
enter
test
pushf
in
pop
push
and
clc
inc
pop
sbb
inc
lahf
mov
outsb
cmc
mov
add
call
push
idivb
mov
sbb
xchg
jnp
lods
ffreep
test
jle
add
adc
push
cltd
pusha
sbb
push
xlat
add
push
mov
pop
pop
repz
adc
adc
test
and
or
xchg
pop
cmp
inc
fs
icebp
addl
push
sbb
xor
inc
aas
jge
mov
inc
int
add
cmp
cmp
push
test
fs
test
jle
dec
shlb
int
in
out
scas
xor
jg
pop
lahf
rcrl
out
and
xchg
lcall
jmp
loopne
xchg
out
cmp
xchg
dec
ret
out
pop
mov
das
fyl2xp1
sbb
les
adc
push
xchg
pop
add
int3
inc
mov
add
sub
cmp
loopne
cs
rclb
push
ret
push
inc
add
mov
jmp
in
sbb
mov
xchg
out
xor
mov
jp
mov
daa
inc
add
cld
push
pushf
add
mov
jno
test
aas
es
repnz
rcr
adc
ret
mov
fwait
xchg
nop
add
notb
xor
std
cmc
add
sbb
or
popa
sub
mov
jmp
add
das
loop
and
add
lcall
cmpsl
stos
pop
add
fcoms
jge
add
or
pop
xor
inc
mov
jns
movsl
inc
add
rcr
lock
roll
mov
xchg
and
lahf
icebp
shr
jb
adc
add
sub
sbb
add
loopne
loopne
movsb
cwtl
pop
add
cmp
hlt
adc
jns
incl
aas
orb
pop
inc
xor
inc
addr16
adc
sbb
cmpsl
add
das
out
dec
ljmp
xchg
pop
xlat
pop
cs
add
dec
sbb
fsubrl
daa
inc
mov
cmpsl
test
lret
aaa
mov
xor
xchg
adc
rcll
sub
movsl
lcall
mov
cmp
sahf
fiadds
dec
outsb
popf
and
pop
or
mov
test
jle
bound
dec
add
dec
mov
add
cwtl
xchg
enterw
add
mov
cmp
lods
sahf
popl
cmp
cmp
add
inc
fnstenv
mov
sar
jecxz
repz
and
cwtl
sbb
mov
sbb
cmpsb
lahf
mov
sbbl
rorb
cltd
mov
jle
inc
adc
cmc
mov
adc
mov
fsubr
faddp
call
push
mov
loopne
inc
pop
xchg
mov
sub
ud2
jno
dec
add
outsl
sub
pop
aad
addb
xchg
add
xchg
mov
add
stos
jne
shll
add
in
add
push
xchg
in
lea
loopne
cwtl
outsb
push
or
adc
inc
jnp
mov
mov
add
test
imul
add
js
mov
jo
outsb
shlb
mov
in
cmpsl
add
cltd
mov
in
push
inc
or
push
add
inc
cmp
pusha
and
adc
ljmp
lret
jl
cmpsb
inc
cltd
adc
fstpt
add
stc
jbe
mov
adc
daa
inc
and
cltd
popf
and
je
int3
testb
dec
pop
bound
insl
dec
popl
call
sbb
daa
push
mov
and
adc
dec
mov
add
outsw
loop
xlat
int3
add
pop
xchg
cmpsl
push
add
or
sub
inc
divl
dec
std
push
xchg
inc
loopne
xchg
jne
inc
hlt
pusha
xor
add
fxch
and
nop
fbstp
in
iret
mov
movsl
pop
push
fistps
movsb
std
jno
shrl
je
mov
sub
push
mov
adc
or
cld
pop
add
pop
inc
into
fwait
int3
les
jb
lods
dec
ds
mov
mov
jmp
xchg
dec
mov
adc
sub
andb
xchg
or
add
lods
outsl
sbb
ret
and
add
fbstp
add
and
add
shl
mov
mov
xchg
adc
sbb
lock
add
lods
mov
aad
mov
ret
xorl
jmp
cltd
data16
pop
rcll
and
icebp
leave
cld
or
or
add
sbb
ret
mov
add
call
jp
add
and
dec
test
inc
or
inc
push
adc
or
dec
and
jno
arpl
push
push
adc
adc
mov
cmp
js
aam
movsl
push
testb
stos
loope
sub
dec
or
sbb
inc
mov
roll
or
in
mov
pop
popf
mov
ficoml
mov
leave
add
into
inc
push
outsb
mov
add
pop
add
add
pushf
iret
dec
add
mov
and
pop
adc
jge
push
pusha
scas
pop
jne
jmp
xchg
add
out
cmc
mov
xchg
xchg
and
adc
das
iret
adc
and
add
adc
out
jmp
jl
cmp
lret
mov
inc
push
lods
jae
rolb
cmp
cmc
mov
add
push
test
and
push
xor
je
jae
popa
movb
fstps
loop
push
dec
mov
or
sbb
inc
xlat
popf
sub
cmpl
movsb
fistpll
sub
and
sti
scas
push
hlt
jns
inc
add
fisubrs
cwtl
popa
mov
inc
sbb
inc
ret
int
out
mov
mov
mov
mov
test
push
add
xchg
imul
push
cwtl
rcr
jnp
aam
out
loop
mov
pop
add
orl
aad
hlt
dec
push
inc
out
adc
rorl
jecxz
pop
add
jle
str
rcrb
mov
adc
adc
sbb
hlt
cmpl
adc
ret
and
nop
in
inc
xor
pop
outsl
add
js
pop
loop
addl
or
repnz
test
sbb
femms
add
push
sarl
mov
rolb
fistpll
aaa
idivl
dec
add
addr16
pop
add
sub
jbe
mov
lock
mov
imul
xchg
mov
sar
sbb
xor
sub
sbb
xchg
mov
and
mov
pop
xor
mov
add
xchg
in
dec
loope
fadds
aam
jne
les
fistps
pushf
sbb
je
cs
add
js
add
sbb
rol
push
adc
xchg
sub
data16
jns
add
aad
or
jb
movsl
or
pop
dec
pop
add
add
sub
add
push
or
ret
add
mov
int
std
sti
fsub
add
mov
dec
fisttps
and
dec
cmp
add
push
adc
popf
and
ja
addr16
cmp
pop
in
xchg
pop
les
mov
mov
adc
fiaddl
nop
loopne
imul
cs
add
jle
cmpsl
add
loope
xlat
add
jmp
int3
bound
and
sti
add
push
lret
andl
mov
mov
dec
subl
call
inc
add
and
xchg
sbbb
cmc
loopne
xchg
cmp
clc
inc
stos
inc
mov
test
sbb
loope
int3
jne
add
mov
xchg
and
adc
cmp
lea
fiadds
fidivl
add
add
in
add
pop
mov
adc
test
cli
inc
enter
adc
jne
mov
sub
mov
xchg
or
push
test
movsl
add
mov
xor
push
and
xor
ret
or
mov
scas
insb
add
mov
lret
rcll
daa
jmp
mov
icebp
mov
sbb
add
into
out
loopne
mov
sbb
pop
jns
inc
pusha
cwtl
test
jne
outsb
adc
andb
arpl
mov
pop
inc
test
mov
jae
jle
push
add
and
cwtl
dec
sbb
add
loope
negl
arpl
xchg
jno
push
sub
mov
data16
cmp
adc
or
inc
sbb
mov
add
ja
scas
pusha
icebp
adc
xor
lods
sbb
add
mov
add
pop
cwtl
fildl
and
ds
jnp
push
cwtl
pop
add
shl
out
or
mov
jbe
mov
dec
sub
rcr
imul
xchg
cld
pop
jg
aad
cltd
fcomps
or
xor
add
add
jae
repnz
in
cmp
jo
stos
adc
dec
push
jle
jnp
jne
inc
pop
inc
xchg
add
rorl
jnp
scas
inc
lods
rcll
into
ljmp
popf
pop
push
adc
add
movsb
push
fadds
add
cmp
push
fs
jns
sahf
dec
add
andl
daa
mov
mov
ret
arpl
adc
add
push
mov
mov
fidivrs
fldl
ss
or
add
jmp
popa
dec
cmc
push
sbb
jnp
add
jmp
fdivs
xor
idivb
loop
mov
decl
popa
sub
outsb
sub
mov
in
jmp
cmp
xor
add
in
add
adc
jne
cli
mov
fisttpll
pop
pop
sbb
shrb
sarb
dec
mov
jo
jmp
inc
out
inc
inc
xchg
inc
ljmp
fs
mov
lcall
add
or
mov
xor
and
pusha
dec
adc
adc
cli
in
or
fldln2
das
cmp
add
inc
mov
pop
imul
adc
in
test
fs
dec
xchg
inc
enter
sub
ja
mov
insl
mov
add
lahf
pop
stos
test
fprem
xchg
setge
inc
call
mov
adc
add
in
and
outsl
dec
push
push
jp
jg
lahf
add
lret
movb
cmp
jo
mov
add
cs
add
dec
xchg
pop
aaa
outsl
or
aas
push
push
test
xor
adc
pop
sbb
sub
add
adc
and
add
call
jnp
mov
inc
rorb
out
add
add
mov
fucomip
mov
testb
or
xor
fldcw
orl
mov
adc
add
and
dec
jb
sbb
lahf
push
add
or
popf
data16
test
mov
sbb
xor
pop
add
call
cmp
push
push
sbb
loopne
loopne
mov
dec
cwtl
pop
ljmp
ljmp
add
lret
cmp
loopne
add
cmpsl
or
add
pop
xchg
add
sbb
lods
movsl
mov
add
pop
out
ret
mov
sbb
inc
pop
or
roll
fcomp
sbb
in
or
ss
nop
in
sbb
xlat
lahf
xchg
cltd
cmc
adc
hlt
push
xchg
adc
add
shlb
add
jo
pop
mov
lds
lret
add
outsl
outsb
stc
add
mov
lret
pop
add
call
out
jnp
dec
sbb
sub
adc
xchg
int3
int
sbb
cmpb
dec
and
cmp
cltd
push
mov
push
dec
add
scas
jmp
add
jle
xor
add
jno
add
jmp
outsl
jp
xchg
pop
add
scas
push
sbb
mov
add
test
ss
es
and
xlat
jmp
mov
outsb
cmc
imul
daa
shl
ds
xchg
loopne
push
xchg
incl
mov
out
xchg
add
bound
mov
mov
out
add
and
jmp
fdivr
jle
mov
pusha
dec
xor
cmpsl
cmpsb
mov
mov
cli
xchg
pop
out
data16
xorl
lret
adc
and
bound
sahf
ficoms
pop
repnz
cmc
stc
lea
psadbw
int3
out
jge
sub
add
loopne
jmp
roll
sub
inc
insb
jae
adc
mov
lock
std
clc
repz
inc
fwait
icebp
sbb
setg
add
mov
add
push
mov
jo
loope
or
aam
mov
adc
mov
xchg
lahf
add
fpatan
aad
add
cli
add
leave
outsb
jns
test
inc
mov
cmpsb
lahf
std
xchg
iret
roll
test
adc
add
and
sub
xchg
ss
adc
mov
dec
xor
adc
inc
inc
mov
fistpll
or
int3
outsl
shrb
loope
xchg
push
push
sbb
icebp
add
fidivrl
sahf
xchg
jl
fdivl
adc
jg
rclb
xchg
iret
adc
ja
adc
loope
shrl
push
or
xchg
pusha
xor
ljmp
inc
xchg
adc
add
xchg
cltd
fs
fistpl
and
shrb
xchg
pop
push
leave
mov
inc
rcll
dec
sbb
jo
mov
les
hlt
push
add
lds
sbb
dec
push
popa
js
dec
call
scas
out
xor
adc
out
ror
xchg
jns
adc
jecxz
xor
and
xlat
add
int3
rclb
cli
sti
mov
jmp
js
mov
add
cmp
add
or
lods
mov
or
mov
xchg
mov
mov
add
inc
inc
aam
push
into
add
xorb
jne
loopne
dec
ficoml
stos
and
mov
sbb
fldl
fsubs
decb
sub
jo
adc
push
in
add
sub
notb
imul
mov
outsl
je
testl
adc
lock
add
pop
add
dec
mov
rorl
iret
insb
xchg
jl
adcl
repnz
mov
lock
add
or
std
push
cmc
js
push
bound
out
fldenv
test
adc
outsl
fwait
cmovbe
xor
mov
loopne
push
mov
or
add
cmpsl
out
mov
shll
mov
adc
popl
pop
push
push
icebp
push
mov
jb
ret
scas
add
xor
divl
add
ljmp
jno
pop
inc
in
sub
mov
pop
add
sti
out
or
dec
jecxz
cmp
jg
push
dec
mov
inc
push
mov
movsl
mov
or
stc
gs
adc
xchg
addl
fsts
fidivs
sub
insl
sbb
aam
mov
imul
push
adc
sbb
push
inc
add
loop
fldl
dec
lcall
add
sub
pop
inc
out
outsb
add
mov
dec
loopne
sub
pop
push
enter
ljmp
insl
pushf
imul
xchg
add
daa
mov
dec
add
repz
and
cwtl
ja
inc
outsb
push
and
out
arpl
add
xchg
push
in
push
add
out
xor
mov
jne
jle
push
loope
stc
or
add
sahf
jge
dec
in
mov
jnp
push
stc
lahf
add
jne
leave
push
sub
test
lret
mov
fcmovnbe
test
add
cwtl
lods
pusha
test
fs
aad
xor
inc
mov
push
rclb
mov
add
aam
sub
sub
sub
dec
push
incl
mov
arpl
add
aaa
movsl
add
div
xor
movb
cmpsb
sarb
ss
clc
add
cmp
add
loope
enter
js
adc
dec
arpl
addr16
jno
jle
stos
add
dec
imul
dec
lods
sbb
cmpsb
aas
sub
imul
add
inc
xchg
in
add
test
icebp
out
fidivs
js
cltd
cwtl
cmpsl
xor
sub
and
out
pop
push
popl
xor
pop
andb
and
push
sub
in
adc
dec
dec
cmpsb
sbb
push
mov
add
and
mov
add
wrmsr
mov
add
je
push
gs
cwtl
mov
mov
adc
pushf
mov
shlb
lret
cmpsl
push
add
mov
jecxz
inc
sub
mov
pop
pop
cmpb
xchg
in
jns
lock
lret
inc
pusha
data16
shll
adc
sub
ret
mov
je
sarb
add
dec
or
xlat
ret
cmpsl
add
mov
and
xor
sub
adc
jle
addr16
pop
je
xchg
jno
pop
inc
pop
sub
jecxz
or
sbb
std
scas
add
scas
or
fdiv
dec
adc
xchg
mov
lcall
inc
sbb
xchg
daa
jae
mov
pop
icebp
push
stos
inc
fsts
mov
mov
jo
mov
jecxz
daa
loope
scas
cmc
pop
std
push
xchg
adc
lods
add
daa
das
fimull
pop
mov
jmp
adc
loopne
test
pop
or
jecxz
out
add
cmp
loopne
mov
into
adc
add
and
mov
fwait
daa
mov
imul
addr16
repnz
lock
ret
mov
sahf
jb
adcb
loopne
iret
cltd
stos
pop
push
rclb
aaa
xorl
or
or
movsb
jns
add
adc
or
leave
mov
add
jno
inc
xor
loope
gs
add
xchg
sbb
test
mull
or
push
dec
imul
lds
in
scas
js
popf
add
fnstenv
add
adcb
das
mov
add
inc
stos
in
and
add
jmp
cmpsl
addl
jecxz
or
push
into
jge
sbb
ret
push
rolb
pop
test
inc
jmp
mov
adc
pop
aad
fwait
inc
mov
jno
pop
xchg
add
pop
out
daa
jb
adc
in
or
cmp
xchg
nopl
jmp
out
adc
mov
std
movb
jg
jbe
mov
xor
xchg
rorb
sbb
cld
jle
or
add
addb
sub
sahf
ret
dec
test
inc
jbe
dec
add
scas
ljmp
jno
add
in
popa
cmpsl
insl
mov
xchg
cmp
loopne
xchg
lret
or
cmc
mov
add
pop
pop
and
add
scas
lods
adc
inc
jl
and
shlb
add
add
push
mov
iret
hlt
rcll
and
movsl
test
js
adc
arpl
cmpb
sbb
cmp
jmp
sub
in
leave
mov
pop
add
cmpsb
stos
adc
add
add
jne
lahf
jp
popa
arpl
jge
jno
or
imul
push
add
inc
out
data16
inc
and
sub
cwtl
ds
add
sbb
out
and
mov
mov
add
mov
inc
movsl
in
add
and
ds
jae
or
pusha
adc
out
mov
or
lahf
mov
push
js
out
add
jmp
daa
push
and
adc
xchg
ret
movb
cwtl
daa
ja
loopne
sbb
in
push
xor
add
pop
cwtl
dec
lahf
jge
adc
aaa
push
fldl
push
incl
sub
adc
add
jmp
into
paddusb
out
repnz
push
lock
xchg
xor
lahf
cmpl
pop
push
inc
ret
sti
or
pusha
adc
jbe
add
adc
pop
add
roll
mov
and
inc
sbb
call
add
fsubrp
in
jb
cmp
or
adc
loope
mov
mov
add
push
divl
jp
subl
data16
iret
fwait
jbe
add
mov
dec
dec
orb
cltd
std
out
sub
pushf
sbb
jnp
data16
jo
ror
adc
in
ljmp
push
addr16
mov
gs
jl
popa
and
jo
test
adc
adc
sbb
pop
jp
add
ficoms
cmp
push
and
push
fmul
mov
dec
sub
in
push
repz
pusha
aam
xor
dec
out
dec
loopne
xchg
mov
in
sbb
lods
jmp
and
shl
add
mov
clc
sarl
dec
pushf
pop
sbb
movsb
add
xor
cli
jb
cld
outsl
xor
sub
setae
shl
add
and
daa
push
das
mov
call
or
mov
mov
mov
nop
add
or
mulb
cmp
and
orl
mov
push
push
arpl
jg
add
in
loop
add
lcall
jns
mov
leave
mov
cmp
add
stc
sub
aam
je
adc
mov
in
rcrl
add
sbb
icebp
dec
mov
mov
mov
sub
insb
fwait
mov
add
and
and
sub
or
sbb
add
or
test
repnz
dec
mov
or
pop
push
mov
stos
dec
fnsave
hlt
sbb
jl
adc
xchg
ss
jae
vmwrite
add
push
es
xchg
mov
fsubs
orl
out
pop
add
xchg
sbb
mov
cld
lock
add
inc
dec
js
imul
mov
mov
add
adc
loop
xchg
pop
in
add
fdiv
or
pop
aam
filds
and
loope
or
or
push
mov
test
fimull
rorl
scas
sub
sar
sub
aad
out
or
xor
cwtl
aas
test
aam
add
out
outsl
jmp
sbb
cmp
leave
roll
xchg
mov
pop
sti
adc
je
ror
mov
mov
inc
pop
or
aaa
lock
xchg
loope
mov
mov
add
dec
adc
add
mov
data16
lahf
xchg
popf
add
arpl
filds
push
and
fistpl
ret
add
jge
and
sub
loopne
mov
lret
or
push
shl
hlt
loope
cmp
jle
jmp
push
les
sbb
xchg
push
xor
or
inc
cmp
fdivs
xor
mov
add
add
cld
sahf
loopne
inc
fildll
rcr
cmp
pop
sub
pop
lret
hlt
pop
pop
cmp
aam
mov
mov
mov
fwait
rolb
arpl
xlat
sub
incb
mov
sub
pushl
jle
enter
jg
dec
sbb
outsl
inc
outsb
fstps
add
xor
cld
cs
rolb
add
rcl
jb
add
movsl
lock
decb
data16
jle
sub
out
cmpsb
mov
cs
les
pushf
addl
stos
xchg
pop
add
pop
sbb
dec
inc
or
hlt
mov
push
add
lock
lds
or
ljmp
lods
pusha
pusha
divl
xchg
sub
add
adc
add
or
dec
js
cltd
cwtl
jb
jmp
add
enter
xlat
mov
pop
mov
adc
popl
push
idivb
lds
sbb
add
xor
xchg
mov
push
dec
push
or
bound
mov
aaa
add
les
add
call
sbb
xchg
dec
push
insl
dec
cmp
add
sbb
pop
add
xchg
repz
mov
daa
test
adc
loope
mov
xchg
shrl
mov
pusha
add
or
add
call
cmp
sub
pop
shl
xchg
call
ljmp
sar
lea
add
mov
jmp
push
mov
pusha
mov
fwait
jge
inc
sub
push
add
pop
je
ficompl
and
sbbb
in
inc
data16
lea
dec
xlat
inc
mov
push
add
cli
add
fnstcw
daa
mov
pusha
bound
mov
xchg
adc
jae
adc
and
repz
sub
mov
sbb
add
pop
add
cmpsl
clc
or
out
jno
xorl
sarb
fisttpll
cmp
add
shll
mov
mov
dec
and
inc
fistps
pop
jmp
dec
fs
pushf
std
add
jg
xchg
lock
or
mov
xchg
je
adc
out
test
pinsrw
dec
sbb
faddl
dec
into
mov
xchg
add
jmp
call
clc
call
cmp
in
add
add
popf
lea
add
dec
mov
add
and
loop
dec
adc
cmc
xchg
subb
scas
rcl
add
test
aas
mov
pop
jmp
addr16
je
or
xor
loop
icebp
dec
jnp
jae
int
dec
xchg
add
mov
mov
and
dec
add
push
bound
and
sbb
movsb
sub
jge
in
les
and
movsb
andl
or
sbb
push
fsubp
add
or
test
add
ret
adc
add
pop
les
bound
add
in
mov
iret
je
mov
mov
fwait
sub
cwtl
add
cmp
add
leave
shrl
sbb
or
pop
adc
cmp
ss
and
rcrb
sahf
setge
lock
pop
jmp
mov
mov
incb
std
clc
jae
dec
je
pusha
sbb
daa
xor
sub
dec
xchg
mov
cli
lret
add
lea
inc
and
add
shl
pop
pusha
inc
cs
int3
out
adc
mov
inc
scas
rolb
dec
mov
jl
cmpsl
fisttps
jp
gs
iret
mov
xchg
fildll
xchg
mov
sbb
xorl
stc
or
xchg
jb
push
mov
testb
xchg
or
stc
dec
aaa
ror
inc
pusha
sbb
inc
int3
add
pop
push
insl
mov
ja
roll
daa
bound
insb
imul
dec
add
cwtl
ljmp
hlt
xor
xlat
ss
addr16
push
stos
std
nop
sbb
mov
roll
mov
pop
ret
fildll
fcomp
sbb
sarl
adc
push
add
jmp
iret
push
sbb
addr16
dec
aas
add
loop
bound
adc
sbb
adc
mov
out
lcall
add
inc
mov
fadds
sub
pusha
jno
xchg
iret
fists
divl
push
cmp
js
jg
sbb
mov
or
and
add
fwait
scas
movsl
rclb
pop
add
sbb
add
aas
mov
fisubs
cmp
add
inc
push
ret
fwait
inc
mov
outsb
jae
arpl
lods
cmp
xchg
addr16
das
push
fmull
cmp
imul
or
pop
pushf
aad
pusha
jo
push
mov
xchg
enter
in
xchg
popa
mov
mov
mov
add
jmp
mov
xchg
adc
adc
adc
divl
aam
and
out
jnp
fiadds
mov
stos
sbb
hlt
add
push
pop
mov
fadds
add
loopne
adc
scas
ljmp
and
add
daa
pop
dec
inc
lret
and
cli
mov
insb
push
pop
cmp
xor
aad
pop
mov
cmp
loopne
add
pushl
sub
repnz
jae
cmpsl
pop
mov
loope
out
inc
push
mov
sbb
loopne
je
push
fists
pop
add
dec
adc
daa
push
xchg
inc
cmp
test
ret
mov
outsb
push
pop
ret
popf
and
add
lock
jmp
inc
int
ss
movsb
jg
out
adc
adc
cmp
mov
loopne
jo
push
aaa
push
sbb
jecxz
inc
dec
das
push
lock
cmp
popa
add
push
xor
mov
push
lods
addl
push
xor
add
mov
push
fcomps
xor
out
rcr
xor
das
aaa
adc
xchg
fnstsw
add
mov
mov
xchg
sbb
add
lcall
loopne
xchg
mov
inc
adc
repz
inc
and
or
or
jno
push
mov
adc
add
fwait
jns
adc
popf
test
add
pop
add
mov
xor
inc
and
inc
sbb
pop
scas
xchg
add
xchg
or
push
add
test
loopne
outsb
and
xor
bound
stc
addr16
xor
fcmovu
cmp
add
jp
inc
push
inc
mov
sub
mov
push
cmp
das
cmpsl
loopne
fucomi
pop
sbb
jne
lret
pusha
mov
fsts
pop
incl
xor
nop
add
add
push
adc
mov
push
mov
cltd
popa
popa
mov
fs
xor
add
inc
inc
dec
cmp
jmp
mov
add
xlat
pop
out
jg
add
mov
cmc
add
clc
cmp
int3
or
outsl
xor
mov
movsl
in
out
dec
mov
push
js
pop
icebp
scas
adc
nop
add
out
add
pusha
movsb
or
jp
push
adc
mov
dec
imulb
sbb
xchg
push
jp
fimull
adc
jecxz
sbb
xlat
sbb
fdivp
sbb
xor
mov
mov
xlat
sub
pop
jne
mov
sbb
add
xchg
loop
fwait
add
mov
loope
mov
stos
push
cmpsl
loope
xchg
sub
sbb
pop
adcl
cmc
insl
sahf
jo
sbbl
push
fstp
xacquire
add
push
jecxz
repz
ja
sub
pop
or
jp
gs
in
in
leave
clc
push
adc
daa
pop
xor
dec
cli
inc
popa
mov
add
sub
lods
add
xor
jne
cmpsb
popa
push
add
dec
mov
push
jg
xchg
add
notl
js
int3
orl
cwtl
mov
add
fxch
repz
push
ds
fiadds
js
sti
in
adc
or
add
mov
aad
inc
xchg
pop
cwtl
mov
jae
cmp
dec
test
lret
adc
subl
pop
shll
cmpl
out
mov
jg
daa
adc
sub
aam
inc
cmpsb
stc
or
jo
ret
add
out
push
mov
dec
loopne
lock
add
js
mov
add
fdivs
push
push
adc
pop
sub
pop
adc
jae
decl
jb
rcl
in
mov
pop
xor
push
add
push
popf
pop
xchg
ljmp
or
jecxz
xor
pusha
std
push
mov
setl
adcl
pop
push
andb
xchg
add
or
cmpsl
xchg
cltd
out
sub
cmp
lods
xchg
mov
stc
int3
mov
or
dec
sub
lret
sbb
push
add
pop
or
xchg
pop
sub
fmuls
ss
xor
and
pop
push
inc
loopne
push
fbld
cmp
outsb
jmpw
hlt
and
add
jp
jno
inc
lcall
add
adc
test
cmp
inc
jbe
xor
sti
push
add
es
sbb
into
jmp
sbb
loopne
cmp
loope
cli
dec
or
in
sbb
add
dec
push
pushf
cwtl
xchg
ljmp
pusha
notb
jp
add
dec
push
add
std
ds
fdivrl
adc
sbb
test
sbb
out
leave
jecxz
int
or
fmull
movsl
std
xchg
adc
mov
out
pusha
mov
sub
ret
outsl
int3
loopne
lret
push
aad
adc
add
xchg
ffreep
inc
enter
inc
aam
pop
sub
pop
arpl
or
jg
pusha
add
int3
dec
sub
loop
popf
xchg
pusha
mov
fldcw
sbb
orb
and
mov
scas
lret
or
push
shrb
arpl
lahf
mov
into
mov
movsb
adc
add
add
mov
pusha
filds
push
pop
mov
dec
xor
add
pop
push
add
jecxz,pt
mov
outsl
in
and
pcmpeqw
repz
sbb
xor
mov
fstl
adc
adc
testb
or
add
inc
xchg
xchg
xor
jo
out
cmp
push
add
es
mov
insb
dec
les
mov
sti
shlb
outsl
call
add
inc
sub
xchg
cld
add
sbb
mov
test
hlt
in
and
sti
add
sbb
bound
jbe
ret
pop
dec
and
lcall
add
dec
dec
int3
ss
sahf
sti
dec
js
imul
lock
mov
mov
add
loope
mov
jae
pusha
mov
cmp
jge
mov
xchg
sbb
fcoml
add
stos
pop
orb
add
out
and
imul
xchg
popa
insb
xor
or
ret
inc
inc
xor
movsb
push
add
add
sbb
scas
fcoml
cli
pusha
out
mov
cmp
mov
ret
lcall
dec
idivl
test
mov
testb
lret
add
test
cld
scas
and
aas
xor
imul
sub
jbe
jg
xchg
add
push
mov
xlat
ds
and
popf
jle
sti
sbb
ja
jnp
aam
sahf
mov
sbb
dec
pusha
mov
cltd
pop
sbb
xchg
add
movsl
call
scas
jb
dec
aad
dec
out
push
pop
add
xchg
sbbl
into
xchg
ficompl
mov
inc
into
jmp
jns
push
in
cmp
cwtl
cs
and
das
add
out
inc
add
dec
fisubrs
mov
xorb
cmp
rorl
icebp
sbbl
sub
mov
dec
cmpsb
enter
add
xor
adc
lahf
cmp
arpl
add
push
ret
je
dec
xor
mov
xor
or
cli
aaa
inc
movsb
dec
data16
loope
xchg
imul
mov
jecxz
xor
bnd
push
mov
add
setge
xor
sbb
idiv
sahf
add
imul
addb
jns
adc
das
sbbl
dec
add
or
push
add
pop
add
mov
addr16
ljmp
aas
add
imul
jo
in
sub
aas
pushf
jmp
and
or
test
outsb
mov
pushl
jp
subl
aad
pusha
cwtl
loopne
push
mov
lock
mov
and
hlt
adc
insb
xchg
push
mov
mov
or
outsl
rorb
aad
sbb
ds
jae
lret
pop
fadds
add
jne
pop
call
gs
in
inc
or
mov
add
jp
lret
lods
out
add
sub
dec
or
aad
mov
lret
dec
cwtl
sbb
mov
punpcklbw
cmpsl
xchg
adc
sbb
scas
jecxz
pop
jmp
cmp
dec
push
xchg
in
cmpsl
out
add
xchg
fistpll
mov
pop
xchg
lds
insl
cmp
add
lret
add
mov
mov
sahf
sub
popl
push
mov
pusha
loop
testl
into
iret
pop
loope
add
aaa
shl
movsb
mov
pop
pusha
jnp
cmp
jl
sbb
sbb
dec
xor
mov
outsb
icebp
push
and
sub
int3
sub
jbe
into
add
sub
mov
shlb
loope
ficomps
lock
add
loop
repnz
sbb
xchg
gs
test
loope
mov
popa
fcoml
vmread
add
pop
test
jp
sbb
mov
add
push
add
mov
out
in
dec
addr16
push
xchg
iret
add
shrl
pop
inc
cltd
cld
loope
jae
out
clc
xchg
insl
call
lods
pusha
aam
mov
mov
push
mov
add
pop
cli
dec
dec
shrl
mov
xchg
in
das
sbb
lahf
xchg
jle
cmp
push
push
in
ror
or
lods
add
add
xor
inc
ja
xchg
adc
jecxz
add
xchg
jle
add
enter
ss
xchg
and
repz
sbb
mov
dec
into
add
fstpl
insb
ss
int3
out
mov
mov
in
stc
push
scas
aad
lods
push
ljmp
fwait
mov
iret
call
and
xchg
and
scas
clc
inc
sti
pop
jge
sbb
mov
mov
stc
xchg
rolb
pop
call
lahf
dec
mov
mov
mov
sbb
mov
xchg
fcoml
insl
xchg
add
int
sub
pop
int3
out
fwait
inc
faddl
xor
sbb
and
jne
push
xor
add
aad
sub
mov
inc
lea
or
xorl
sarb
inc
in
sbb
cltd
jmp
mov
fs
into
sub
je
push
pop
mov
and
xor
clc
cmpsb
pushf
insb
mov
cmp
rcrl
and
jae
adc
or
or
into
push
jns
push
roll
pop
lret
mov
ja
popa
pop
mov
mov
and
loope
cwtl
aam
neg
popa
and
inc
in
sarb
cld
adc
xchg
cmp
pop
rorl
gs
sbb
lcall
adc
cli
push
add
lcall
mov
aad
rorb
lea
rolb
les
ret
lcall
add
into
xor
sbb
push
mov
and
stos
lcall
add
dec
adc
jp
icebp
dec
js
inc
repnz
mov
inc
xchg
pop
add
inc
xchg
test
and
adc
lds
pop
xchg
pusha
mov
push
les
adc
out
jns
adc
add
pop
test
stc
imul
les
faddl
mull
clc
roll
pop
ret
incb
mov
mov
jo
and
and
jecxz
leave
or
adc
jne
stc
fcmovbe
daa
jge
add
lds
mov
aam
add
pop
cltd
adc
lcall
adc
movsl
inc
popa
mov
sub
pusha
inc
xor
loopne
sbb
add
sti
pushf
pop
push
add
pop
xchg
jns
scas
testb
and
push
push
outsb
pop
or
xlat
add
shl
fwait
mov
pop
and
roll
inc
add
daa
push
mov
mov
fldl
pop
pop
push
mov
add
lods
mov
enter
add
mov
leave
push
add
stos
jbe
pop
pop
gs
mov
call
mov
bound
push
hlt
add
fisttpll
add
sub
xor
lret
xor
ljmp
push
sbb
das
xchg
add
dec
fadds
dec
cwtl
or
mov
addb
insl
add
testl
movsl
ret
fadd
jne
fs
jae
jl
add
int
inc
sub
lcall
xor
push
repz
dec
jle
lcall
imul
in
ja
add
test
jg
or
add
bound
add
dec
and
loope
mov
insl
or
add
and
jle
pushf
xchg
rorl
mov
data16
push
cmpsl
or
cmc
loope
and
stos
or
mov
insb
xchg
cmpsl
jo
add
jb
sbbl
shll
jmp
mov
hlt
stos
repz
cmp
add
inc
scas
mov
ret
mov
xchg
jno
cmpsb
mov
movsb
add
mov
push
rol
sahf
xor
fadds
xchg
imul
add
xor
es
bound
xor
add
pusha
inc
out
sub
ret
xlat
sbb
xor
in
jg
sbb
jae
inc
clc
adc
cmp
inc
add
jge
adc
add
mov
xorb
cmp
lret
pusha
xchg
sbb
sbb
fadd
cltd
inc
add
flds
sahf
ret
das
mov
cmpsl
sar
xor
or
inc
aaa
outsb
add
push
rcr
mov
adc
lahf
cs
test
mov
add
es
in
mov
adc
clc
enter
out
lock
mov
jp
cmp
in
xor
sarl
data16
test
jmp
stos
cmp
mov
add
push
js
stos
scas
imul
add
jbe
jecxz
jo
daa
add
lods
inc
mov
dec
add
pop
sub
and
cmpsl
aas
fistl
out
jbe
loopew
mov
adc
xor
jb
jnp
enter
movsl
flds
add
lods
push
js
stos
lret
inc
dec
push
arpl
sub
pop
adc
sub
mov
mov
xor
mov
outsb
movsb
add
fstps
mov
push
add
in
push
inc
loop
icebp
inc
add
pusha
loopne
cmp
pop
imul
add
jb
push
in
scas
shr
cmpsb
and
mov
xlat
leave
add
mov
scas
sub
insl
xchg
loop
push
add
ret
mov
and
mov
or
add
lcall
add
lods
leave
nop
and
lock
pop
pop
add
in
aam
jne
adc
jb
imul
stos
arpl
dec
subl
mov
aas
lods
cmp
xor
add
cmpsl
mov
and
push
mov
hlt
sbb
orb
pop
sbb
in
int
add
mov
push
mov
js
mov
stos
pop
dec
dec
mov
dec
repnz
push
push
into
or
scas
inc
sahf
mov
insl
pusha
cmpsl
sbb
sbb
inc
pop
repz
jno
adc
out
and
add
sub
lods
add
stos
mov
inc
jo
hlt
pop
push
mov
outsl
sbb
mov
adc
sub
fcomps
push
lds
lcall
dec
arpl
jnp
push
add
jg
push
mov
mov
cmp
addr16
push
dec
push
add
jnp
sbb
mov
jg
mov
jne
add
and
aas
push
andb
add
xchg
ja
push
add
mov
mov
les
fs
add
mov
or
cmp
adc
outsb
pop
or
adc
xor
popf
roll
sub
scas
loop
push
xchg
xchg
jecxz
cmp
rolb
add
push
xchg
mov
add
mov
aas
add
mov
sub
push
rolb
sbb
and
push
xchg
push
adc
in
adcl
mov
clc
add
out
enter
pop
add
test
sbb
pop
flds
adc
push
sbb
insl
bound
les
insb
sub
cli
sbb
lea
dec
out
adc
sub
sub
pop
call
fs
adc
imul
mov
inc
push
push
rorl
fwait
in
adc
dec
mov
lcall
add
inc
mov
aad
push
lahf
scas
cmp
popw
popf
lods
and
pop
add
sub
pushf
in
stos
xchg
sbb
jmp
add
lret
insl
sub
in
movsb
sbb
or
sbb
loope
sub
in
mov
dec
test
loopne
jb
cld
fmuls
xlat
or
sub
ja
add
cmp
fstl
insb
inc
int3
push
add
mov
mov
popf
hlt
js
das
mov
add
repnz
outsl
stc
inc
aad
lods
popf
sub
cmc
ret
fadds
sbb
pop
or
and
sbb
aaa
jne
cltd
push
add
add
mov
shlb
mov
adcl
add
and
data16
mov
or
test
push
and
sbb
push
orl
test
sub
push
bound
mov
xor
clc
add
mov
cmc
pop
adc
lods
dec
fwait
sub
mov
shrd
test
add
lcall
fisubl
xor
adc
sbbl
jnp
inc
inc
sub
add
aaa
cmp
pop
xor
pop
jno
lea
jge
add
adc
mov
pop
fdivl
rcll
imul
sbb
je
sbb
mov
cli
pop
sbb
add
adc
jmp
push
rclb
jb
les
addb
mov
pop
roll
jmp
push
add
push
scas
outsl
xor
sub
mov
mov
and
dec
fildl
add
mov
dec
rorl
sbb
add
push
inc
jno
je
jo
jmp
aad
jg
call
int3
lahf
sahf
jb
add
push
and
sub
lcall
add
test
out
shl
dec
and
or
dec
shll
add
sti
add
int3
fwait
loope
add
adc
mov
dec
fadds
mov
lods
mov
test
pop
and
cmp
cmpsb
cmpsl
pusha
add
sub
and
sbb
jnp
int
loope
fcomps
call
push
lcall
mov
cld
add
dec
aas
sahf
add
mov
push
cmp
xchg
nop
int
or
ja
je
adc
fsubs
push
dec
cmp
pop
das
pushf
add
js
roll
xchg
fistps
inc
cmp
add
mov
push
lea
xor
nop
fcomps
insb
dec
pop
int
dec
inc
stc
mov
jae
dec
or
cmp
inc
stos
push
mov
aam
cmp
xchg
cltd
or
fbld
adc
xor
fbld
out
mov
lods
cwtl
scas
xchg
nop
insb
jge
push
pop
popf
pushf
xor
scas
sbb
add
xor
movsl
add
gs
bound
test
pusha
fs
pop
dec
add
mov
pop
les
int
ja
sbb
push
daa
add
sub
repz
xchg
add
add
add
sub
pop
mov
jb
add
loope
dec
or
add
sbb
inc
push
roll
sub
iret
push
or
jmp
add
stos
mov
loop
mov
push
pop
ficompl
lds
add
mov
cmp
push
popf
sub
mov
popa
push
push
mov
jb
mov
adc
and
add
mov
push
in
dec
add
outsl
push
add
ja
xchg
ret
cld
fcmovnbe
xor
js
iret
mov
adc
jae
and
ja
add
push
cmp
add
loopne
push
mov
pop
xchg
mov
stos
xlat
sbb
add
mov
lock
add
gs
stc
add
insb
or
mov
lods
in
mov
test
jno
insb
test
cmpsb
aas
mov
aaa
adc
xor
inc
sbb
insb
pushf
loopne
pusha
into
stos
inc
pop
shl
add
lcall
and
mov
add
inc
incb
sahf
imul
xchg
mov
jecxz
adc
or
mov
mov
sahf
add
mov
pop
mov
mov
repz
add
add
pop
inc
mov
not
into
pop
push
pop
dec
sahf
inc
cs
or
xchg
add
xchg
sbb
sbb
outsl
sub
outsb
bound
xlat
jne
rcrl
repnz
fsub
sbb
pop
mov
outsl
add
rorb
pusha
outsb
push
pop
mov
pop
xor
mov
test
or
inc
or
insl
addr16
mov
sub
cmpsl
test
add
xor
pushf
adc
and
call
jle
adc
add
and
add
adc
shl
repnz
nop
jl
scas
add
or
call
outsl
xor
cmpsl
xchg
mov
add
pop
adc
loopne
inc
pop
and
sbb
fldcw
xor
lret
lahf
outsl
and
fnstsw
add
pusha
orl
call
sub
sub
add
sbb
dec
sub
jp
cmp
pop
cmp
inc
mov
rcll
xor
out
mov
addr16
pop
cs
inc
add
add
lahf
popf
pop
and
pop
or
sbb
mov
daa
cltd
add
cli
std
xor
test
mov
push
das
adc
movl
fidivl
and
repnz
sti
stos
test
loop
ja
jp
rclb
push
push
mov
jae
fsubrl
in
add
or
popf
add
mov
je
jle
add
jg
shlb
std
sbbl
test
pop
and
jo
dec
addr16
test
rcll
sti
or
and
jo
cltd
js
pop
lahf
add
mov
outsl
add
xor
xchg
jmp
call
rep
xchg
fldcw
pop
loopne
push
test
mov
lahf
test
inc
loope
adc
mov
add
fiaddl
xor
mov
add
pusha
pushf
xchg
dec
jl
and
xchg
pop
addb
mov
sbb
movsb
sub
out
jmp
lods
stos
mov
lret
inc
dec
and
add
push
cmp
jns
add
fadds
mov
pop
and
mov
adc
imul
ljmp
and
dec
lret
jb
dec
lea
les
cmc
daa
push
cltd
loopne
pop
mov
jmp
pop
aas
add
xchg
cltd
shrl
popf
inc
das
pusha
adc
jno
sbb
testl
cmp
in
sub
ja
lock
and
filds
xchg
nop
out
clc
mov
or
jg
mov
mov
inc
add
jns
adc
gs
xchg
cmp
sbb
mov
sbb
xor
add
add
and
lret
rcr
cmpsl
add
mov
add
inc
ret
scas
mov
adc
adc
out
stos
cwtl
fisubrl
jg
leave
dec
stc
sbb
mov
call
xchg
ja
add
mov
mov
insl
popa
jo
js
test
inc
sbb
mov
mov
and
jns
add
cmc
popa
jno
ficomps
sub
clc
and
cld
add
push
cmp
dec
aas
add
daa
mov
pop
js
push
lahf
mov
addr16
out
jp
add
out
shl
mov
sbb
pop
stos
fstl
pop
dec
pop
add
loopne
lock
jo
cmc
sbb
add
imul
mov
repnz
repz
and
xor
mov
add
jp
loop
outsb
cmp
adc
andb
aad
add
ret
lret
add
jns
jne
sbb
sbb
dec
xchg
adc
cli
add
and
or
adc
pushf
filds
cld
push
notl
testb
loopne
sahf
dec
mov
or
push
fiadds
add
cld
cmpsl
xlat
scas
dec
add
push
outsl
mov
jne
pop
add
out
jmp
into
push
call
fadd
leave
or
or
cmpsb
pusha
lcall
cld
mov
add
jp
jmp
jne
ret
add
in
popf
movsb
pusha
cli
and
out
jmp
jne
sub
fisubrl
jecxz
addr16
adc
stc
sub
push
test
mov
rcll
cs
out
iret
repz
sbb
rclb
jg
inc
roll
pop
xor
testl
cwtl
pushf
shrl
std
orb
adc
jmp
adc
mov
jno
insl
sahf
cli
cltd
add
pop
les
jns
xchg
loopne
cmp
xorl
sbb
cmp
loope
sbb
in
lahf
xchg
cmp
add
mov
mov
or
stc
pop
xchg
into
add
push
inc
aaa
add
xchg
pop
mov
xlat
in
das
jle
into
repz
out
pusha
aam
xor
mov
lods
loopne
or
xchg
fcmovne
popf
repnz
add
jne
lea
cld
add
jge
js
daa
jg
pusha
test
int3
jo
inc
push
shlb
and
sbb
mov
pusha
aaa
adc
pop
add
movsb
sbb
in
insl
inc
and
mov
loopne
xchg
add
pop
fdivl
add
mov
xchg
loope
xor
jb
fucomp
cmp
or
xor
loopne
imul
and
add
sbb
jae
roll
pusha
mov
cmp
xchg
pusha
jne
test
pop
xchg
add
xchg
lods
add
js
test
gs
adc
jo
rcrb
mov
push
cld
adc
les
pop
addr16
jle
sbb
add
mov
nop
mov
push
or
cmp
movb
test
cs
cltd
add
jl
and
sahf
pop
push
int
test
sub
add
sbb
fidivl
add
enter
aam
cmpsb
add
sub
les
push
arpl
scas
push
hlt
add
iret
insb
mov
cltd
popf
jecxz
xchg
cld
pusha
orb
push
outsl
push
pop
sar
pop
mov
cs
and
jno
mov
push
push
sbb
addr16
or
pop
test
rol
ljmp
insl
add
scas
push
enter
mov
je
jecxz
notl
mov
or
sbb
lret
sbb
out
push
sub
xchg
lahf
loopne
xchg
pushf
or
shrl
mov
and
inc
xor
jnp
les
cwtl
enter
hlt
pop
jp
push
leave
sub
incb
lret
loopne
fsubrp
aas
add
inc
and
loope
imul
int3
sbb
add
xor
push
add
and
pop
movsl
add
test
leave
fmuls
popa
addb
enter
hlt
xor
stc
loop
loope
or
daa
jle
add
dec
pop
xor
sub
icebp
inc
scas
xchg
lock
pop
mov
dec
and
je
sbb
hlt
add
aas
mov
push
pop
add
ja
sbb
lea
sub
loopne
xchg
and
add
arpl
aad
and
lret
push
push
ficoms
xor
and
es
fldl
cmp
add
and
out
jbe
scas
add
outsl
xor
movsb
ret
jno
adc
in
and
shrb
inc
cmp
jecxz
lcall
rcrb
inc
les
push
pop
add
loopne
dec
out
mov
js
lret
and
testl
xchg
inc
popa
add
jno
push
xor
add
clc
fdivrl
adc
scas
inc
dec
popa
imul
ja
scas
jns
mov
loopne
dec
inc
cmpsl
pusha
jbe
and
xchg
jae
fs
fnsave
pusha
jle
and
mov
mov
sbb
xchg
sbb
cli
test
in
hlt
jb
pop
pop
jp
mov
add
aad
pop
or
mov
dec
jle
shlb
pop
arpl
inc
cwtl
jb
cmp
popa
or
jnp
cli
sahf
enter
and
push
pusha
jge
mov
testb
out
push
popf
jge
adc
jg
inc
and
in
jne
lock
xor
outsb
xchg
push
mov
pusha
add
ds
mov
pop
xorb
inc
add
mov
insb
loope
pop
xchg
xchg
xor
sbb
add
or
add
pop
dec
xor
ljmp
add
pop
test
add
pop
sub
jno
adc
dec
lahf
add
cmpsl
shll
mov
aaa
push
fldl
or
mov
sub
xchg
cld
fiadds
fs
push
push
dec
jmp
cmpsl
adc
adc
rcl
mov
out
add
sub
ss
lods
pop
push
pushf
jecxz
stos
outsb
int3
fisubrs
fldl
mov
movsl
xorl
into
fldl
enter
mov
add
adc
sbb
mov
mov
cmp
or
cmp
mov
add
fisubs
adc
outsl
mov
cmp
repz
fidivl
ljmp
add
xor
dec
fildll
outsb
insl
add
or
mov
push
notb
add
je
mov
in
std
out
icebp
rorb
cmc
mov
jnp
xlat
loopne
andb
adc
adc
pop
adc
leave
push
pop
stc
movsb
das
loope
into
push
pop
xor
ds
lcall
incl
iret
es
add
pop
divb
testl
add
popf
pop
mov
dec
add
pop
sbb
aas
fcomps
jle
jecxz
ds
les
shl
adc
pop
or
xchg
sub
or
ret
cwtl
dec
mov
pop
add
mov
fisubrl
ja
add
repnz
adc
ret
shrl
xchg
out
add
hlt
xchg
das
xchg
jecxz
and
add
or
iret
sbb
jl
mov
or
xor
xchg
dec
sbb
cmp
pop
testb
fidivrs
hlt
inc
adc
aas
mov
adc
call
stos
and
repz
jns
sub
in
hlt
add
or
int
pfsubr
xor
and
aam
xchg
fistps
or
dec
subb
xor
sbb
sub
mov
sbb
cwtl
js
add
enter
fidivl
dec
addb
rorl
sbb
sub
sbb
scas
add
xchg
stos
int3
mov
inc
mov
adc
addl
cwtl
int
push
test
bound
add
clc
je
xchg
pop
fmul
inc
and
jmp
and
add
mov
das
mov
sbb
mov
pusha
and
mov
add
lret
dec
ret
cld
add
mov
shrb
cmc
jge
sbb
imul
cmp
fs
jl
add
pop
das
les
xchg
stos
mov
into
adc
faddl
fisubl
mov
pop
cmp
std
cmp
insb
and
add
aad
lahf
ss
pop
pusha
je
stc
fsub
ljmp
add
cli
es
fsubl
sbb
jg
pop
jnp
sbb
aam
rcr
out
js
sbb
mov
add
sahf
push
iret
sbb
std
push
imul
out
insl
adc
jmp
sarl
jecxz
test
mov
mov
pop
add
ret
cmp
test
mov
dec
aaa
aam
xchg
test
les
push
inc
fisttpll
bound
fdivl
adc
jg
mov
add
xchg
push
mov
mov
adc
inc
mov
repnz
jle
pop
fcmovnbe
daa
add
mov
jge
ret
xor
and
mov
cltd
or
xor
and
mov
jmp
add
push
dec
jecxz
xchg
xor
cmp
pop
scas
adc
aam
mov
pop
add
test
sub
lahf
sub
jp
jle
add
mov
sbb
dec
push
jbe
std
sbb
pushl
int3
pop
jno
sti
pop
push
add
sti
push
mov
xlat
pop
int3
sahf
scas
pop
cmp
jge
pop
adc
loopne
inc
mov
mov
fisubrs
sbbl
or
dec
cmp
add
ror
add
mov
shrl
push
imul
js
cs
sub
pop
or
mov
dec
ss
lods
pop
adc
add
adc
mov
push
rorb
ja
mov
inc
lock
xor
mov
add
and
mov
jge
out
test
movsb
cmc
add
int
clc
and
push
add
or
xchg
aas
movsb
jmp
call
roll
cmp
rcrl
je
sbb
dec
jp
movb
push
adc
aam
dec
push
and
sub
mov
xor
add
int
fmuls
sbb
add
mov
movsl
push
popa
sbb
mov
aad
daa
lock
popa
sub
mov
std
cmp
fwait
das
and
imul
leave
stc
adc
add
lret
test
jne
nop
sbb
adc
out
aad
jnp
inc
cmpsl
stc
pop
mov
aam
xchg
sbb
and
mov
lahf
hlt
in
rcrb
jle
test
loopne
bound
cmpsb
into
sbb
lahf
test
ret
pop
rcrl
repz
dec
loope
cmpsb
ljmp
push
xor
mov
and
xchg
enter
outsl
adc
mov
les
add
jb
add
dec
sub
add
mov
es
push
cltd
jo
daa
outsb
and
xchg
loope
lret
and
and
cs
xor
add
and
scas
or
pushf
sbb
std
dec
fldenv
jecxz
jno,pt
mov
bound
and
jmp
sbb
jge
call
stos
push
sbb
push
dec
adc
adc
jo,pt
lea
push
jge
sbb
jge
jg
xor
mov
mov
negl
mov
inc
lods
or
ret
xchg
mov
mov
ja
xor
je
adc
add
aaa
mov
jbe
xlat
orl
add
es
fidivrl
fisttpll
sbb
stos
mov
jecxz
aaa
adc
pop
int
sbb
add
jnp
push
sbb
jg
in
push
and
add
movsb
mov
out
jmp
cltd
lret
add
ja
jae
pushf
add
or
sbb
ds
jg
and
inc
add
int
inc
mov
add
repz
cmpsl
mov
pmaxub
test
mulb
out
cmp
pusha
pop
add
dec
test
pusha
pop
lds
mov
clc
pop
sahf
mov
dec
mov
add
test
add
push
insb
mov
stos
mov
push
and
jmp
jne
mov
scas
test
repnz
xchg
lret
jae
aaa
into
and
loope
movsl
mov
push
pop
outsl
cmpsl
cmp
mov
mov
lcall
sarl
mov
in
orb
ja
xor
add
stc
int
cmp
imul
test
ret
lea
out
fsubs
movsb
ret
jae
out
or
or
iret
xor
add
adc
cmp
lds
adc
arpl
notb
mov
xor
jecxz
mov
sbb
sbb
mov
add
inc
xlat
cld
lds
adc
xchg
sub
add
or
mull
push
xchg
sarb
pusha
jle
jl
fistpl
dec
pushf
pusha
add
sub
xchg
cmp
jp
aad
and
pop
jns
fs
popa
popl
jbe
adc
cwtl
xor
in
mov
pop
push
addb
pushf
pop
pusha
push
xor
sbb
mov
pop
cmpsb
pusha
push
sbbb
fisubrl
test
mov
arpl
sbb
pop
add
add
or
mov
out
mov
popf
lret
ljmp
mov
mov
inc
adc
rcll
add
cltd
cmpsl
cmpsb
sti
adc
pop
jnp
shrb
mov
mov
lods
daa
das
push
inc
push
adc
into
push
adc
and
loope
hlt
xchg
sbb
jle
jbe
bound
enter
adc
sti
outsb
scas
or
sbb
cmp
mov
add
or
repnz
adc
flds
jb
jo
lahf
sbb
fstpt
ficoml
push
inc
movsl
jno
sbb
insb
pop
jecxz
jmp
xchg
or
pop
xchg
stos
mov
das
lock
fstpl
xchg
les
les
mov
adc
aad
pop
dec
mov
call
outsb
add
push
loopne
sti
add
mov
pushf
sbb
test
shll
jno
push
xor
dec
clc
sbb
jecxz
sub
int3
add
scas
and
fsubl
inc
xchg
pusha
push
loope
dec
adc
or
rorb
dec
xchg
fstl
add
aaa
xor
mov
inc
mov
pop
push
rcl
mov
lahf
addr16
movsb
adc
repz
cmpsb
cmp
cmp
sahf
pop
lock
inc
inc
mov
enter
dec
sbbb
mov
jecxz
jb
add
xor
outsb
push
and
add
scas
sub
cmp
lret
cmpsl
add
out
ss
mov
mov
adc
out
sbb
jp
inc
or
add
push
jae
fimuls
int3
arpl
add
and
xchg
add
cmpsb
cld
sbb
and
xor
jnp
add
movsl
rcr
and
int3
lcall
loopne
test
pop
sbb
pop
stos
or
or
dec
nop
insl
imul
and
push
xchg
or
lock
mov
mov
push
popf
push
inc
cltd
jmp
frstor
xchg
jns
incb
in
and
pop
adc
and
jae
pusha
adc
xchg
cli
xchg
adc
in
test
xchg
scas
push
mov
mov
adc
and
out
cs
pop
xchg
leave
loope
stos
outsl
jge
sbb
dec
dec
daa
add
fmull
ret
aam
cmp
test
push
outsl
pusha
pusha
icebp
repz
in
jecxz
mov
cmp
aas
daa
pop
testl
xor
loope
outsl
out
xor
loopne
mov
pop
mov
repz
sub
in
nop
add
aaa
popf
adc
mov
push
fnstcw
inc
adc
add
cmc
adc
nop
jle
rolb
aad
pop
xor
add
shll
add
sbb
xor
xor
cmp
and
jmp
pop
push
lock
cmpsb
jge
mov
sbb
inc
mov
repnz
icebp
out
inc
mov
push
jmp
clc
shll
jge
sbb
and
out
inc
test
xor
cwtl
mov
repz
stos
add
pop
and
and
cltd
lea
js
jbe
ror
dec
add
sub
insb
xor
lahf
xchg
add
das
and
xor
movsl
negb
call
sbb
sbb
and
sub
xchg
cmpsb
mov
loopne
loopne
imul
filds
dec
jno
ja
popf
daa
and
sub
out
mov
dec
addr16
xchg
xor
int3
das
in
push
mov
pop
in
lock
incb
stos
or
mov
inc
stos
sub
inc
sbb
and
ficoms
fsubrl
test
test
cld
out
xor
lods
imul
mov
rcrl
dec
dec
xor
inc
imul
stos
hlt
test
mov
inc
loopne
sbb
mov
push
sub
imul
xchg
lret
jns
push
push
dec
or
loope
or
or
std
movb
andl
jge
aaa
flds
mov
lret
pop
stos
mov
out
add
imul
and
push
add
sbb
xor
addr16
mov
pavgb
push
mov
test
pop
pop
cmp
xlat
ret
xchg
mov
call
add
sub
js
jge
insb
jae
movsl
add
loopne
or
and
mov
cmc
shll
je
jbe
mov
adc
out
cmp
repnz
outsb
adc
int3
mov
xor
sub
cmp
add
xchg
pop
add
fwait
and
dec
dec
cmpsl
xor
add
mov
aaa
push
pusha
push
xor
lahf
repz
arpl
push
or
jp
xchg
dec
jmp
out
add
fdivrl
and
loope
push
and
test
ret
mov
int3
repnz
jmp
repz
pop
cld
dec
out
push
fstpl
lret
xor
and
mov
lods
mov
add
jmp
mov
mov
xchg
push
arpl
jecxz,pn
pop
daa
add
add
fcoms
ljmp
loopne
jmp
dec
inc
pop
in
jbe
fcoms
aaa
bound
fisubl
fists
ja
jo,pt
outsl
add
icebp
cmp
sbb
sbb
pop
negl
and
ja
mov
jl
sub
nop
mov
mov
js
pop
push
out
cmp
mov
sbb
jecxz
sahf
icebp
popa
outsl
scas
filds
dec
push
sbb
xor
jo
and
and
ds
mov
sbb
xchg
push
mov
mov
jg
push
shrl
and
fwait
pop
aam
mov
aaa
sti
pop
xor
pusha
jae
dec
lret
add
lods
mov
and
rcrl
sbb
addr16
andb
loope
or
cmp
ds
mov
scas
mov
sbb
push
test
cmpsb
lahf
pop
add
mov
aam
push
dec
lcall
mov
jmp
stos
mov
mov
stc
in
add
pusha
dec
pop
sub
or
push
loopne
call
mov
pop
je
sbb
cmp
cli
or
pushf
pop
sub
ja
int
jne
adc
cwtl
in
xchg
push
xor
add
or
and
push
add
fs
fwait
cs
add
xor
inc
add
mov
hlt
aam
dec
out
fists
sbb
cmp
dec
loopne
into
dec
fnsave
add
and
pop
lcall
xchg
xchg
add
int
lea
test
push
sbb
aaa
add
jle
push
mov
lock
fstps
scas
test
add
lods
inc
ror
pop
mov
pop
pop
lock
adc
fiadds
int3
cmp
sbb
mov
subb
adc
js
mov
lahf
arpl
add
fwait
pushf
mov
inc
in
insl
out
mull
xchg
sbb
loopne
cmp
adc
jge
push
xchg
add
add
mov
push
add
jle
jecxz
das
lret
aam
pop
roll
cli
fistl
daa
or
sub
imul
andl
pop
add
stos
inc
cmp
out
mov
dec
icebp
mov
inc
ds
adc
cmpsl
loope
pusha
xchg
mov
sbb
cmp
scas
popl
jp
sbb
mov
jecxz
and
add
ja
in
adc
das
inc
jge
xor
xchg
sbb
fbstp
les
ret
shrl
sbb
push
add
imul
shl
sarl
out
lahf
outsb
fcompl
sahf
sub
loopne
notl
shl
pop
pop
pusha
pop
add
syscall
or
out
in
or
out
dec
call
pop
jl
inc
sub
xor
sub
lock
mov
adc
jbe
hlt
xchg
dec
mov
inc
aam
neg
pop
out
imul
sub
cmp
loop
rorl
add
jno
mov
add
push
pop
push
into
add
mov
add
jecxz
cmp
popf
xchg
xchg
mov
push
das
lcall
mov
add
in
js
sub
testb
loope
arpl
fimull
mov
enter
mov
gs
cmp
loopne
test
sbb
inc
mov
clc
jb
scas
stc
jp
lds
fildl
in
incb
sbb
sbb
add
push
or
dec
sahf
insb
out
enter
movsl
cmp
int
or
sbb
and
das
orb
pop
and
loope
mov
inc
or
pop
in
lahf
je
ss
add
sub
cwtl
pop
mov
pop
scas
test
jp
iret
lret
xchg
pusha
and
adc
push
sbb
loope
icebp
fldl
pop
test
add
loop
dec
pop
add
popf
into
sbb
add
lahf
or
xorb
sahf
add
cmpsb
lock
or
xor
arpl
stos
lds
mov
jle
cmpsb
jecxz
add
push
cltd
enter
push
lock
cmp
add
aad
movsb
mov
add
adc
pusha
add
pop
repnz
adc
mov
cmp
push
mov
push
test
leave
fbld
and
xor
ret
adc
sahf
add
sub
std
xchg
iret
popa
add
sar
test
pusha
out
out
add
jnp
in
xchg
add
test
push
dec
mov
cli
cmp
cmpsl
pusha
andl
xchg
fwait
inc
sbb
movnti
or
sarb
and
daa
xchg
inc
sbb
mov
push
cld
ljmp
shrb
add
mov
adc
inc
mov
cmp
test
pop
mov
jmp
es
in
fwait
pop
jp
inc
pop
push
add
test
mov
and
cmp
push
mov
or
movsl
push
cmp
loopne
jecxz
mov
add
pop
cli
ss
hlt
stos
cmpsb
lock
sbb
dec
pop
xchg
add
test
ffree
lods
adc
orb
clc
sbb
imul
mov
dec
pop
xor
cmp
dec
loop
sub
loopne
and
test
or
testl
sbb
jb
loopne
jp
pop
test
push
xchg
dec
add
int
pop
add
incb
call
inc
jl
hlt
jmp
cli
dec
inc
jle
loopne
lret
push
add
ret
outsb
xor
not
nop
or
cltd
stos
fisubl
jne
xor
in
dec
inc
and
add
adc
popl
gs
in
sub
mov
push
lods
sbb
xor
mov
sar
test
mov
aaa
mov
mov
mov
in
fmull
add
xchg
daa
shrl
mov
int3
adc
inc
push
sbb
dec
cld
add
in
imul
jle
push
mov
sub
inc
or
or
bound
ljmp
lods
mov
pop
loopne
rcll
dec
inc
fldcw
pusha
sbb
mov
pop
push
cmp
cmp
pop
shrl
filds
daa
in
hlt
jno
adc
out
jmp
loopne
cld
and
ret
mov
pop
xor
mov
jecxz
imul
mov
mov
ret
lahf
push
add
mov
dec
add
pop
es
mov
push
stos
add
pop
push
cmpsl
sbb
add
pop
mov
dec
fs
push
pusha
aam
and
dec
mov
jl
adc
or
sarl
das
repnz
mov
and
loop
pop
cs
test
pop
fs
insl
int
fsubrs
adc
mov
sbb
add
jge
das
adc
sbbb
xlat
push
jecxz
sub
sub
mov
add
sbb
std
test
incl
fs
push
movsl
mov
andl
add
jae
add
pop
lahf
test
and
dec
pop
lcall
jl
and
in
jmp
cs
mov
popf
add
push
mov
mov
add
frstor
divl
mov
scas
sbb
sbb
adc
xlat
mov
adc
xchg
loopne
pop
xor
push
xor
dec
and
xor
mov
popa
add
sbb
test
push
int3
inc
mov
ror
xor
fsubp
cmp
xor
pusha
xor
data16
sub
push
gs
jnp
jae
addr16
add
adc
insb
out
dec
push
cmp
mov
jae
add
xor
xchg
sbb
cmp
pop
xor
fiadds
rorl
add
add
sbb
push
xor
add
test
jae
pop
add
push
push
mov
out
loopne
push
xchg
pop
sub
sbbb
add
mov
jae
mov
lcall
pop
cmp
test
push
add
faddl
jg
cmp
lcall
popf
shrb
add
in
add
add
cmpsl
lds
and
xchg
aam
sbb
xchg
pop
in
out
movsl
inc
cli
js
lret
and
or
add
xchg
mov
lret
mov
add
push
lahf
icebp
fs
lock
xchg
movsb
add
cmp
addr16
mov
xor
adc
nop
cld
add
jl
orl
jle
dec
sub
mov
aas
shlb
pop
cmpb
jno
aaa
addr16
add
and
or
jne
sbb
test
mov
nop
insb
mov
test
bound
sbb
in
or
add
aaa
std
jge
and
mov
inc
andl
sbb
fiadds
js
andb
dec
adc
cmp
xchg
add
sbb
add
mov
imul
outsb
out
sbb
call
add
mov
add
xor
imul
scas
add
lods
jb
mov
push
je
jp
dec
add
adc
mov
inc
dec
mov
sbb
add
xchg
and
clc
pop
add
loope
mov
pop
stc
dec
lea
xchg
push
add
jae
add
dec
hlt
xchg
mov
fwait
sbb
add
jmp
cmc
add
shl
jnp
or
and
inc
dec
in
jae
or
jo
pop
hlt
push
mov
call
add
dec
lcall
mov
fsubl
aaa
xchg
call
or
pop
push
adc
pop
int
inc
mov
popf
sbb
bound
cmpsl
or
daa
in
add
je
mull
sub
push
sbb
rolb
lods
inc
cmp
mov
nop
add
into
jno
jbe
and
hlt
cmp
sar
movzbl
js
std
pusha
lea
adc
popf
roll
mov
rol
add
mov
add
jne
lds
jbe
jno
test
mov
shl
and
sbb
fisubrs
sbb
xchg
mov
repz
push
inc
loope
jl
add
es
jno
rolb
jo
lods
leave
jecxz
push
sub
add
repnz
out
or
push
sub
push
sbb
xchg
test
add
push
dec
xor
fldl
inc
test
cmc
cmpsb
loope
mov
jge
mov
mov
clc
rorb
jl
push
adc
add
mov
inc
mov
leave
loopne
outsl
ja
pop
or
pop
add
mov
ret
lret
mov
xchg
in
repz
rcl
clc
test
push
and
cmp
cmp
push
rcrl
sbb
sub
pop
add
xor
add
push
jnp
cmp
fs
lret
add
pop
inc
loope
sub
jg
in
add
mov
or
test
add
out
pusha
js
jnp
iret
xor
sbb
pop
xchg
and
add
cld
pop
pop
add
push
mov
adc
sub
push
xchg
jl
inc
stos
pop
xor
nop
and
sub
add
mov
test
sub
sahf
movsl
add
or
jae
jle
adc
das
inc
xchg
inc
negl
shll
movsb
add
lods
xchg
inc
mov
mov
aam
mov
sub
cmpsb
add
iret
mov
sub
xor
cwtl
orb
push
repnz
pop
add
inc
push
push
xor
test
add
enter
pop
pop
test
dec
addl
insb
push
sbb
fucompp
pusha
sbb
pop
xor
into
push
add
pushf
add
sbb
and
fstpt
fnstsw
ret
add
pop
loope
adcb
add
addr16
xchg
subl
jo
xchg
adc
rorl
mov
mulb
and
test
mov
cmp
or
fs
mov
xchg
inc
add
lea
xchg
mov
pop
pushf
push
sahf
add
daa
movsl
shll
sbbb
jl
cmp
add
enter
dec
or
mov
mov
pop
rcrl
lret
stos
inc
push
ret
jle
push
lods
sbb
in
cmp
insl
js,pn
cmpsb
pop
add
mov
inc
xlat
sahf
xchg
add
push
jae
in
sub
add
mov
inc
cwtl
jge
loope,pn
arpl
popf
adc
push
lock
add
or
movl
add
adc
pushf
lock
iret
push
pop
fstpl
mov
add
jecxz
int
cmpsl
imul
add
adc
es
xor
cmc
ljmp
dec
lea
push
stc
adc
dec
sbb
dec
add
cpuid
arpl
test
adcl
or
adc
sub
adc
popa
nop
shll
add
repz
jmp
mov
or
add
aam
fwait
jne
testb
das
pop
sarb
or
adc
pusha
xor
ret
sbb
add
in
jnp
push
push
pop
add
out
mov
fimuls
sbb
pop
push
ret
inc
mov
mov
dec
add
inc
sub
aam
ret
jmp
jbe
lock
in
inc
fcompl
xor
and
mulb
add
mov
push
sub
add
mov
mov
lcall
sbb
dec
add
fdivp
rcll
jp
xchg
int
dec
xlat
mov
adc
inc
mov
std
xchg
add
sbb
add
pop
leave
mov
test
adc
or
xchg
adc
pusha
jg
fisubrs
shll
pop
popf
orb
fxam
mov
insl
adc
mov
xor
ss
fstps
call
mov
loopne
sbb
popa
sbb
pop
pop
lods
and
fwait
add
sbb
pop
dec
jecxz
movl
and
dec
cmp
or
iret
hlt
mov
pop
and
jns
jg
movsb
jae
movsl
add
into
jo
add
out
dec
lds
sldt
arpl
sub
add
dec
xor
jmp
icebp
push
mov
jmp
fdivrs
loopne
pop
pop
mov
sbb
mov
add
add
loopne
shll
outsb
rolb
mov
int3
js
test
push
xor
pop
mov
push
push
cmp
sbb
pop
ds
adc
jp
sbb
and
push
xor
add
pop
sti
xor
jbe
loope
mov
repnz
imul
adc
rorl
in
mov
in
clc
inc
add
and
push
fptan
add
loopne
and
jecxz
dec
sbb
dec
loope
jmp
add
es
in
jne
inc
ja
adc
or
sbb
sahf
add
dec
dec
cmp
repnz
aad
sti
mov
adc
add
arpl
xchg
je
mov
mov
cld
pusha
lret
cmc
outsl
mov
mov
add
sub
adc
or
in
adc
pushaw
xchg
and
jg
stos
scas
rcrl
pushl
int3
cltd
adc
in
dec
pushf
insl
call
jnp
loopne
daa
adc
pop
pop
mov
scas
add
sbb
in
das
stos
add
loop
repz
mov
adc
push
in
mov
insb
sub
loopne
pop
cmp
in
movsl
sub
idiv
add
test
push
mov
lds
cmp
sbbb
in
mov
inc
dec
out
test
outsb
add
popa
add
sahf
movsb
call
cld
lock
and
or
fs
and
add
or
sub
sbb
xchg
cmp
add
insl
lods
push
adc
ret
jge
or
xlat
xchg
hlt
add
clc
repz
sbb
pop
and
push
aaa
mov
push
fwait
addr16
fdivrl
scas
dec
subb
dec
cwtl
adc
andb
pop
sbb
out
sub
pusha
dec
repz
sub
out
inc
lock
rorb
jl
jp
add
mov
or
pop
add
mov
imul
push
xchg
cmp
add
cmpsl
jnp
rcl
jg
cmpsb
push
mov
add
mov
xchg
xor
loop
scas
sbb
stc
add
roll
add
fs
push
arpl
movsl
clc
sbb
mov
push
push
add
jp
or
add
pop
es
fyl2xp1
sbb
cmpsb
xchg
inc
cmp
fadds
pop
adc
cld
push
add
lea
jmp
rcrb
pusha
xchg
push
xlat
add
cmp
cs
in
add
push
lods
stos
add
hlt
outsb
mov
roll
leave
daa
jg
movsl
add
imull
shll
and
std
pop
fisttps
xor
les
adc
scas
mov
in
sbb
add
mov
shlb
add
or
lea
sub
and
sbb
aad
scas
xor
ss
pop
mov
loopne
mov
or
and
inc
adc
das
lcall
mov
inc
push
xor
sbb
mov
and
stc
mov
data16
sahf
or
lret
shl
dec
rcrl
imul
test
sub
add
push
xchg
out
add
js
xchg
lods
jbe
add
inc
outsb
pop
stos
int
dec
add
jo
in
push
push
add
sbb
add
cli
iret
movups
or
inc
add
gs
je
repnz
test
in
xchg
add
push
jge
nop
fs
pop
pop
xor
or
out
sti
stos
insb
add
shll
incl
or
lret
repnz
mov
adc
add
jo
inc
sub
xor
jp
push
fiadds
idivw
push
iret
mov
test
add
pop
ret
dec
je
push
lds
dec
mov
clc
xor
addr16
aas
insb
outsl
in
mov
or
push
adc
cld
movsb
lods
add
pop
scas
pop
add
repnz
mov
dec
loopne
xchg
out
add
test
lret
sub
loopne
lahf
add
fs
push
pusha
lahf
stos
dec
xchg
pushf
mov
aam
and
mov
fwait
push
xor
add
dec
jle
mov
andl
std
push
sub
fs
mov
lock
inc
repz
sbb
jmp
inc
pop
add
jbe
mov
cs
sub
pop
add
lret
adc
adc
dec
and
fdivl
mov
mov
jo
add
jbe
roll
pop
enter
xchg
lcall
pop
and
sub
adc
lahf
jp
pop
sub
pop
and
pusha
call
xchg
sub
js
in
mov
pop
sbb
fdiv
stos
ret
aaa
test
call
mov
adc
cmc
xchg
or
inc
push
mov
sbb
fs
inc
dec
dec
pop
add
les
popa
add
sub
adc
repz
add
lods
cmp
add
mov
add
pusha
adc
jp
mov
lods
inc
jecxz
aaa
xchg
add
push
add
je
cmp
lds
adc
or
hlt
cmpsl
adc
stos
stos
add
out
add
pop
mov
mov
jnp
mov
jo
in
loope
push
and
dec
dec
addb
adc
les
in
stc
add
std
pop
pop
add
imulb
add
punpckhwd
ret
lock
cli
sbb
add
repz
jo
dec
mov
push
aas
inc
xchg
js
ret
mov
or
mov
dec
icebp
push
mov
add
adc
je
push
xor
pusha
dec
sbb
dec
clc
sub
fucomp
sbbl
lods
mov
fwait
daa
cmp
sbb
mov
inc
repnz
fiaddl
jmp
pushf
in
jbe
adc
jnp
fs
or
mov
xor
sub
xchg
mov
pop
pop
frstor
push
or
jno
adc
pushf
and
xor
fwait
test
lahf
and
dec
or
inc
push
add
push
mov
addb
ljmp
and
out
jp
int
inc
scas
push
repnz
pop
filds
lret
xlat
dec
icebp
test
test
add
or
insb
loope
stos
dec
and
push
outsb
jnp
pop
adc
out
hlt
pusha
rolb
shll
cmp
sbb
mov
pop
addl
hlt
and
lods
sbb
aaa
adc
out
daa
mull
loopne
lcall
push
hlt
shll
jae
xchg
jmp
and
scas
iret
jl
push
sbb
dec
add
jecxz
inc
mov
stos
enter
icebp
or
pop
leave
subl
add
je
scas
xchg
xor
int
cltd
push
pop
fcomps
mov
test
add
fistl
movsb
push
out
lock
pop
fsts
call
ds
js
lret
fistpl
cmc
push
pop
mov
and
push
sbb
add
stc
mov
fsubp
push
cld
je
icebp
ds
mov
lcall
push
cmp
lahf
test
loop
pop
ds
mov
fs
cwtl
rcll
and
lcall
std
mov
add
xor
out
mov
mov
xor
loopne
push
adc
sub
adc
mov
cwtl
cltd
lret
or
daa
add
stc
add
push
iret
and
rclb
cwtl
lret
mov
cmp
pop
leave
add
xchg
cmp
filds
sub
addr16
add
mov
pushf
pop
and
cs
cltd
sete
mov
cmp
shrl
mov
push
test
daa
jecxz
push
pop
mov
fimuls
push
push
test
add
out
xchg
pop
dec
jmp
adcl
sbb
and
stos
pop
mov
mov
mov
sbb
cmp
loop
mov
bound
inc
xor
push
dec
adc
sub
fadds
dec
outsb
mov
pop
aas
push
sub
adc
popf
jmp
jnp
xor
pop
out
sbb
je
mov
insb
outsl
pusha
pusha
notb
inc
sbb
std
lahf
add
mov
add
jns
sahf
mov
inc
push
leave
and
jmp
mov
push
pushf
lret
sub
add
jecxz
icebp
aad
sub
fisttpll
lock
xor
fiaddl
cmp
leave
lret
pop
add
loopne
mov
bound
mov
out
outsl
in
jge
mov
push
xor
and
mov
outsl
std
pop
pop
out
add
jmp
cld
cltd
add
test
and
dec
sub
mov
stc
mov
adc
cmp
fdivrp
int
add
and
loop
sbb
cmpsl
adc
add
mov
jecxz
sbb
add
cmc
movsl
mov
pop
into
imul
mov
mov
ud0
add
mov
lds
fwait
loopne
or
call
pusha
inc
or
inc
and
jnp
cmp
lock
add
mov
mov
lret
lods
stc
sti
pop
roll
or
adc
dec
mov
test
mov
jne
jp
xor
cmp
data16
and
sbb
dec
in
pushf
and
divb
ror
mov
add
rclb
jle
movsl
jb
mov
cltd
xchg
lret
loopne
fcmovnb
in
mov
cs
ret
sbb
in
fsub
out
push
aas
les
test
add
push
pandn
xlat
sbb
pop
push
add
or
cmc
popa
cmpl
test
in
mov
loopne
push
and
stos
sbb
rcll
add
pop
dec
and
jo
dec
sar
ss
cld
mov
jno
scas
addr16
and
lret
sbb
add
jo
jp
cmp
jae
inc
push
sbb
mov
dec
mov
jl
cmp
adc
add
rorb
stos
leave
xor
call
xchg
aad
in
lods
cmp
inc
pop
adc
test
or
add
test
mov
inc
subl
int3
mov
into
sbb
dec
cwtl
scas
xorb
addr16
jno
dec
adc
inc
push
push
pop
add
push
mov
pusha
or
jns
push
adc
dec
fcoml
testb
testb
jmp
movsl
mov
sub
xor
cwtl
cli
stc
add
and
push
push
sbb
lea
jg
push
dec
dec
popa
std
sbb
or
push
inc
mov
cmpsl
iret
adc
sbb
push
lods
add
movsb
pop
jmp
add
cmp
aaa
add
jns
test
lds
jg
loope
jl
test
repz
loope
stos
add
pop
mov
jg
mov
push
and
insl
call
pop
jmp
out
jp
add
push
xorl
lods
jae
jnp
sbb
inc
out
and
ret
adc
xor
mov
add
ljmp
sbb
push
mov
and
xchg
jae
xor
push
pop
cmpb
leave
add
sbb
lret
imul
cmp
add
push
xor
movsb
out
add
and
and
insl
shrb
adc
xor
test
xchg
add
dec
xchg
hlt
test
mov
repnz
sbb
sub
subl
rolb
push
adc
push
in
addr16
pop
jle
icebp
adc
adc
out
adc
lret
mov
add
push
xor
js
push
add
cmp
inc
adc
mov
pop
mov
ja
repnz
pop
mov
xchg
sbb
lret
out
cwtl
js
in
fisttpl
jno,pt
cmc
dec
pop
jnp
xchg
inc
inc
int3
mov
xor
out
push
mov
adc
pop
adc
cmp
add
push
sbb
test
mov
inc
adc
pop
add
stos
lods
sub
nop
add
data16
push
pop
xor
sbb
add
sbb
loopne
imul
or
add
and
inc
test
mov
aaa
ja
sub
aam
out
sti
in
add
push
rolb
imul
adc
add
add
or
jmp
add
xor
stc
jecxz
mov
mov
cmp
popl
and
sbb
inc
or
ss
cmp
adc
sub
dec
subl
cld
enter
mov
xchg
cmp
sbb
ret
leave
add
xchg
xchg
inc
mov
push
sbb
push
out
mov
mov
dec
aas
mov
pop
mov
movsb
es
flds
imul
into
mov
data16
xchg
or
bound
add
dec
lahf
add
inc
fcoms
out
pusha
mov
push
popa
mov
cmp
rclb
push
add
fcompl
or
or
mov
enter
jmp
push
add
das
mov
add
ja
insl
add
push
insb
sub
js
call
pop
push
test
arpl
outsb
test
pop
iret
daa
mov
inc
hlt
fistpl
dec
fadd
xor
push
add
lock
mov
adc
loope
add
sbb
lret
cmpsl
jo
jg
pop
mov
jge
sbb
or
xor
mov
mov
cmp
jns
jno
out
add
shll
call
cld
movsb
add
mov
push
jns
fldl
mov
or
in
pop
adc
out
sub
xchg
add
addr16
repz
bound
and
inc
imul
insb
push
jb
xor
sbb
add
mov
jbe
bound
mov
mov
adc
imul
test
xchg
flds
jp
mov
sbb
adc
dec
pop
pop
iret
jle
ror
outsl
sub
jb
jns
or
or
shr
jno
xor
push
jg
xchg
outsl
icebp
ret
sub
inc
dec
cmpsl
push
push
ja
dec
inc
cmpsb
add
mov
add
jmp
andb
aas
push
insb
or
jl
call
xlat
lret
mov
adc
inc
jmp
add
dec
jecxz
rcll
inc
add
sub
pop
cmp
cmp
in
das
add
xlat
lcall
push
dec
orb
dec
shl
pop
fldl
popf
ret
push
xor
hlt
pop
imul
aaa
mov
push
pop
adcb
push
xor
aam
xchg
xchg
add
xchg
push
loopne
gs
cmpsl
add
xchg
loopne
ret
sahf
leave
sbb
aam
mov
cli
pop
add
hlt
add
add
pop
out
xor
xchg
sti
data16
decb
fildl
inc
jbe
out
outsl
lods
arpl
add
aad
jg
frstor
push
clc
inc
jne
cli
pop
fwait
loope
add
das
xchg
inc
mov
jae
icebp
xchg
clc
les
dec
loope
and
out
in
test
xchg
mov
add
pop
dec
hlt
adc
fidivs
outsb
ljmp
aam
cltd
dec
xchg
loopne
inc
or
fmuls
pop
and
mov
shll
jae
inc
sbb
out
pop
add
cmc
push
and
pop
adc
ltr
ret
sub
into
inc
icebp
aas
orl
inc
shlb
fstl
fisttpl
dec
add
rcl
in
mov
mov
stc
or
xchg
add
test
push
cmp
push
bound
fs
jne
mov
and
sarb
mov
add
xchg
pop
jae
or
add
dec
adc
lea
sbb
inc
adc
add
dec
in
mov
xor
mov
mov
mov
sub
sbb
add
loopne
and
mov
add
jo
ja
popf
test
sbb
add
js
outsb
add
push
sbb
mov
stos
cld
add
sbb
inc
push
push
adc
je
dec
mov
int
orl
xchg
jbe
lret
and
mov
pop
cmpsl
xor
xor
push
xchg
fcompl
add
mov
sbb
jnp
sbb
add
shlb
adc
outsb
out
fisubl
rcrl
lods
aaa
push
inc
mov
test
jno
decl
addr16
adc
sub
mov
push
add
ret
mov
int
repz
inc
repnz
loopne
adc
cmp
vmread
xchg
sub
pop
jle
and
outsl
pop
jbe
into
lods
sbb
sub
add
add
enter
cmp
in
negb
rcll
pusha
outsl
sbb
lods
jne
out
add
inc
adcb
roll
cltd
pop
or
imul
mov
dec
sub
inc
roll
xchg
sub
jbe
outsb
cld
pusha
rcll
test
xor
xchg
push
stc
mov
les
addr16
lahf
add
cmp
stos
lods
mov
xchg
cmp
mov
ret
test
add
push
or
jnp
ljmp
mov
pop
fldl
and
aad
sbb
xchg
fwait
adc
lret
movl
test
fdiv
lock
movsl
hlt
adc
push
es
mov
xbegin
xchg
xchg
adc
and
sbb
lods
push
movsb
and
push
je
das
cmp
in
mov
mov
mov
sti
add
mov
add
sub
inc
movsb
cmp
stc
iret
and
push
jmp
add
adc
add
inc
inc
add
mov
cmp
dec
sub
popf
add
and
add
scas
and
and
fimull
icebp
shrl
or
lea
jecxz
add
push
popf
dec
push
inc
xor
lret
jbe
mov
stc
into
xchg
add
pushf
push
mov
dec
mov
adc
insb
es
out
pop
into
aaa
shlb
sub
jns
hlt
cmp
repnz
add
sar
pop
inc
add
hlt
pop
push
add
cmp
xor
fstps
add
pop
mov
stos
pushf
push
iret
mov
mov
or
push
push
add
jg
adc
push
sub
ja
add
adc
mov
gs
xchg
je
cwtl
rolb
ret
popa
add
push
add
mov
adc
aaa
push
call
add
sbb
fwait
out
jbe
xchg
pop
mov
and
aad
jge
mov
add
insl
mov
loope
add
jl
imull
pop
mov
les
mov
dec
pushf
bound
add
loopne
or
add
gs
test
bound
into
lods
jmp
sbb
aad
adc
je
or
hlt
mov
icebp
in
add
and
jp
daa
iret
pushf
add
inc
mov
ret
xchg
mov
add
xchg
int3
push
pop
imul
ja
xchg
pop
xchg
lock
adc
test
fcoms
pop
push
imul
repnz
cmpsb
xchg
and
shrl
test
pop
xor
dec
and
daa
popf
leave
cmpsl
dec
addl
and
mov
pop
sarb
pop
sahf
add
dec
call
cmpsb
jb
cmp
adc
movl
cld
add
aaa
push
mov
mov
test
lret
cmp
pop
popa
push
scas
mov
xchg
add
ljmp
add
xor
mov
stos
inc
xchg
mov
fiadds
setno
negb
lock
mov
pop
pusha
ss
xor
pop
sbb
and
jo
inc
jp
pop
add
inc
dec
add
cmp
xor
sbb
push
sbb
movsl
mov
sbb
push
loopne
jmp
stc
add
mov
cltd
shl
js
repz
and
les
sbb
loopne
addr16
or
mov
xor
ss
pop
push
mov
mov
inc
xor
lcall
pusha
cmpsl
mov
ss
stos
sub
lret
jge
ss
xchg
inc
and
add
add
test
sub
hlt
mov
inc
icebp
roll
xchg
jne
adc
mull
inc
test
or
push
shr
roll
dec
mov
fsub
jp
stc
mov
sbb
jno
and
scas
ret
jecxz
pushf
sbb
mov
jb
out
fs
das
les
in
and
mov
sbb
sti
xor
jmp
dec
loop
push
jle
add
sub
pusha
repnz
xorb
adc
icebp
lds
movsb
sub
jo
and
adc
mov
add
add
lds
add
sbbl
lret
sbb
fstl
jecxz
popf
adc
and
cmp
fistps
and
mov
pushaw
rcl
push
mov
icebp
sbb
insb
cmp
xchg
cmpsb
int3
adc
sbb
sbb
inc
mov
and
sbb
inc
xchg
stos
insb
push
out
sbb
addr16
sbb
jmp
mov
aam
xor
stos
dec
and
sti
stc
xchg
sarb
leave
pop
lcall
cmp
add
push
jmp
popf
pusha
cmpsl
lea
mov
sbb
add
jnp
fdiv
pushf
fstps
sbb
cmp
in
loope
lods
dec
enter
mov
mov
push
icebp
out
sbb
mov
sbb
add
sarl
das
hlt
call
out
and
sbbb
ja
outsb
adc
out
add
fidivs
adc
add
jbe
bound
leave
adc
push
sbb
into
xor
cmp
xor
xor
stos
jno
add
shlb
inc
out
xchg
add
pop
jne
pop
inc
scas
loope
cltd
bound
sahf
dec
and
leave
fmull
fwait
int
rolb
imul
add
ret
pushf
lock
das
daa
adc
ficoml
rorb
pushf
inc
add
and
pop
stos
arpl
add
sub
jno
cmpsl
xchg
mov
scas
lods
sbb
add
sbb
out
mov
push
sarb
cmp
mov
ja
es
ss
xor
add
push
ds
movsb
mov
iret
add
jae
andb
fsub
mov
int
sub
and
push
inc
adc
jge
ret
jns
dec
rolb
lahf
inc
cmp
xchg
stc
pop
dec
or
xchg
push
test
rorl
ret
mov
ret
xor
scas
push
pop
rcl
dec
adc
cmp
test
enter
cs
mov
repnz
std
push
inc
pusha
sbb
pop
addb
shrl
inc
pushf
add
xchg
aas
jp
add
lret
cltd
aam
clc
fnsave
jo
add
fisttpl
popa
add
inc
jno
in
in
jnp
js
test
testb
sbb
sub
xchg
cltd
fisttps
dec
add
jecxz
out
pop
inc
add
push
jmp
rol
mov
push
or
or
ret
and
popl
fadd
daa
loopne
inc
outsl
cmp
sahf
iret
inc
test
push
add
push
push
or
add
imul
add
mov
push
scas
loope
xor
adc
xchg
lret
nop
js
jo
out
dec
push
add
xchg
ljmp
cli
or
mov
pusha
insb
aaa
inc
jae
aam
add
sti
fldl
loop
out
test
inc
in
mov
jno
xlat
insb
add
pop
cmp
jne
xor
dec
lcall
popf
insb
fistl
scas
cmp
sub
addl
push
xchg
cmovne
sbb
loope
adc
sbb
jmp
rcl
jecxz
or
loopne
xchg
mov
sbb
jbe
sub
push
stos
inc
push
andb
imul
sahf
mov
leave
add
ret
inc
fisubrl
pop
loope
push
lahf
pop
adc
out
mov
in
leave
je
mov
out
add
add
add
fdivrs
jge
xorb
aad
call
sbb
outsb
jne
das
imul
sbb
out
out
adc
mov
into
loope
pop
pop
xchg
ds
pop
jg
or
add
push
inc
ja
out
push
xchg
pop
mov
jmp
cmp
and
test
cmp
cmpsb
and
adc
add
push
movsb
pusha
js
xchg
or
mov
mov
sub
add
add
lahf
mov
scas
mov
jbe
sbb
sbb
es
pop
das
jmp
jp
lret
inc
lahf
or
ret
fldl
outsl
popa
jno
jbe
add
and
xchg
ror
push
loopne
inc
jecxz
cmpsb
or
or
pop
add
aad
mov
mov
inc
gs
xor
and
sbb
inc
mov
add
and
iret
dec
mov
sbb
lahf
add
movsl
icebp
add
cmp
aaa
mov
push
add
lds
add
pop
inc
loop
cltd
mov
pop
dec
jmp
adc
and
stos
mov
movl
cltd
or
daa
les
add
xor
or
cs
jb
mov
xchg
add
imul
xchg
pop
add
sarl
imul
addr16
fldenv
aad
or
call
dec
add
xor
or
mov
sub
popa
sbb
jp
daa
out
scas
pop
sbb
push
add
xchg
int3
add
sub
push
add
add
loope
sbb
lods
add
xchg
test
add
lea
iret
std
test
ss
jnp
stos
jne
lahf
rorb
js
or
pop
movsb
rorb
add
pop
jne
jp
fadds
popf
mov
lahf
sub
add
stc
jecxz
push
jne
add
pop
adc
imul
mov
nop
loop
ja
and
mov
in
add
and
push
aad
testl
rcll
add
mov
icebp
pop
or
push
ret
and
mov
add
push
add
stos
or
pusha
loope
loope
push
daa
in
jnp
inc
or
aas
ss
add
dec
cmp
add
inc
add
push
daa
xchg
xor
fdivrp
add
mov
lods
pop
addl
test
sub
and
pushf
les
sbb
pop
cs
repnz
mov
lock
xchg
pop
gs
mov
add
push
lcall
xor
ss
add
adcb
daa
xchg
inc
inc
rorl
push
or
mov
call
gs
es
dec
mov
adc
rcll
dec
addb
cltd
sbb
mov
mov
add
loop
push
mov
sub
lods
std
mov
das
cmpsb
out
sbb
cmp
add
sarb
pop
inc
sbb
dec
pop
sbb
push
jne
lods
cli
and
test
mov
add
dec
or
mov
add
xlat
and
scas
aad
add
mov
das
rcrl
pop
test
xchg
loop
stc
add
add
add
adc
jmp
loopne
lock
mov
dec
xor
add
pop
imul
outsl
and
aaa
cmpsb
or
cltd
pop
or
sub
mov
jge
mov
mov
daa
mov
jl
inc
imul
push
cmp
cwtl
or
pop
sbb
sbb
fmull
xchg
push
add
mov
dec
iret
rorl
insb
fs
stc
movl
movsb
decl
add
fidivrs
jle
frstor
aam
and
js
mov
stos
inc
lds
add
fsin
jg
mov
mov
and
pop
add
pop
stos
lds
mov
out
loop
adc
mov
inc
adc
pop
imul
adc
sbb
add
inc
sub
push
mov
jecxz
mov
cmpsb
jmp
rcrl
sti
scas
loope
popf
xchg
mov
mov
scas
cmp
pop
sbb
adc
jl
push
dec
and
sub
xchg
sbb
insl
add
lods
aas
pop
xchg
repz
rcrb
cmp
add
inc
add
push
int
aam
mov
les
sbb
adc
in
inc
sbb
popa
add
ljmp
push
add
fwait
mov
sti
add
insb
or
adc
xor
subb
in
mov
push
sub
xor
dec
mov
inc
lds
xchg
decb
jmp
lcall
ja
sub
or
es
mov
lahf
xchg
add
std
cltd
sti
mov
imul
enter
dec
outsb
mov
and
inc
xor
pop
subps
lods
add
ret
pop
insl
add
pop
and
mov
out
xchg
std
rolb
in
enter
add
jmp
push
pop
and
or
or
sahf
add
inc
adc
xor
or
mov
xor
sub
or
in
and
pop
stc
sbbb
outsl
es
add
imulb
ljmp
fnstenv
cmp
add
sbb
sbb
in
mov
sub
cmpsb
daa
out
and
dec
mov
add
add
outsb
lods
mov
xchg
add
cld
xor
add
hlt
iret
test
fmull
int3
xor
push
les
scas
gs
inc
lea
jae
out
push
add
je
mov
xor
data16
test
ret
test
outsb
shr
push
add
jle
hlt
out
or
jb
inc
dec
sti
ja
lret
arpl
ss
add
add
inc
icebp
mov
cs
add
fisttpll
adc
loopne
mov
or
jmp
mov
add
pop
mov
jp
nop
add
xor
jnp
loopne
cmp
inc
in
mov
or
or
inc
and
fstpl
out
pusha
or
sbb
push
scas
push
and
add
dec
adc
or
mov
scas
popf
mov
xchg
inc
add
jl
xchg
xor
add
mov
je
add
dec
roll
insb
sub
adc
push
add
insl
pop
std
sar
inc
add
test
mov
mov
mov
jge
les
pop
pop
mov
xlat
mov
xor
dec
push
loope
xor
or
fdiv
adc
and
loope
icebp
pop
pop
pusha
xor
mov
xor
movsb
cltd
pop
xor
ss
inc
in
loope
pop
mov
pop
and
mov
mov
mov
add
adc
mov
cld
out
add
je
rol
insl
dec
add
and
mov
lret
lods
lock
adc
in
pop
loope
dec
push
test
mov
add
or
data16
sahf
or
pop
cmp
aam
lcall
aad
data16
and
add
std
mov
add
mov
jno
addr16
add
fcoml
rcrl
rcrl
in
ret
jb
jg
and
add
cli
addr16
add
adc
push
cltd
mov
pop
lock
cli
xchg
hlt
xorl
pop
pop
shrb
shll
and
sbb
adc
out
js
sbbl
inc
cli
push
jns
add
repz
push
in
xchg
filds
scas
jne
jle
icebp
inc
add
insb
or
push
mov
bound
cmpsl
mov
lahf
loopne
sub
sub
add
rcrb
add
cmc
nop
mov
out
add
pop
insl
sub
dec
push
pop
pop
add
icebp
mov
add
mov
int
pop
dec
fsubs
adc
add
popa
mov
insb
and
sbb
mov
rol
shl
or
out
dec
ret
in
push
andnps
aam
and
lods
mov
mov
sbb
in
xor
adc
push
sarb
sahf
mov
out
mov
shlb
in
adc
cmp
repnz
fsubrl
or
aam
add
mov
cmpsl
pop
mov
lret
dec
imul
pop
push
lret
add
pop
clc
jle
ss
add
jne
xor
rolb
jp
xchg
jecxz
lret
adc
pop
movsl
imul
sbb
mov
pusha
and
jle
add
lcall
push
sbb
sub
mov
pop
jae
outsl
xchg
ret
dec
xchg
mov
iret
pop
movsl
xor
mov
loopne
fxch
push
into
cmc
pushf
add
jb
pusha
in
add
inc
push
sarl
stos
out
filds
fwait
call
add
cmp
xchg
and
mov
mov
xchg
sbb
lods
push
sub
repz
add
push
pushf
dec
in
rolb
cmpsl
add
mov
push
jp
xchg
sbbl
jge
or
and
into
mov
pop
int
add
movsl
push
aam
adc
pop
push
pusha
subb
das
pop
add
pop
mov
add
mov
add
mov
sub
xchg
sub
mov
pop
cmpsb
jl
push
add
jmp
and
pop
out
push
int
mov
xchg
push
cmp
stos
and
out
push
add
jns
xor
adc
xchg
loopne
mull
sub
mov
adc
incl
and
mov
add
jb
pop
xchg
ret
add
push
lods
ret
sbb
stc
mov
femms
lcall
mov
inc
dec
add
push
hlt
les
xlat
lahf
sbb
ds
and
sub
inc
or
in
pop
lea
fisubrs
mov
mov
movsb
mov
xchg
lock
int
je
jmp
xlat
add
xchg
add
sub
mov
sub
out
jp
out
filds
ud0
push
out
popa
add
cmp
dec
sbb
into
xlat
call
add
scas
sub
neg
add
sbb
xchg
inc
mov
pop
and
enter
ja
dec
shll
out
inc
testl
dec
decb
mov
stos
adc
add
mov
mov
iret
cmp
mov
in
lret
int
add
shll
xor
sub
jmp
sub
decb
aaa
adc
cltd
stos
sub
pop
ret
cmpsb
rorl
and
ljmp
mulb
enter
add
sarb
add
insb
add
dec
pop
dec
incb
jecxz
lock
sbb
sbb
mov
xchg
sti
xchg
lahf
push
mov
rcll
sbb
int
imul
test
cld
mov
pop
loope
stos
scas
mov
shll
nop
xchg
add
lods
mov
cwtl
add
xchg
add
loope
test
xor
add
pushfw
in
add
lock
in
out
mov
cmpsl
cli
mov
gs
or
push
add
test
add
lods
push
mov
add
ret
mov
stos
sti
inc
les
mov
sub
push
subl
dec
dec
adc
dec
popfw
sbb
xchg
repnz
testb
add
imul
movl
sbb
sub
pusha
or
sbb
dec
inc
shrb
push
and
aas
sbb
out
pop
add
jnp
push
shl
lock
mov
adc
mov
push
je
fnstsw
sbb
sarb
test
adc
popa
popf
mov
popf
sub
fistps
sub
pop
push
jge
sbb
jle
mov
rorl
test
ret
pop
out
jmp
push
nop
jo
test
insb
loopne
lret
jbe
mov
adc
lock
loope
inc
pusha
sub
scas
aas
repz
adc
add
cmp
orb
leave
mov
lahf
jmp
add
mov
add
inc
addl
sub
mov
fnstsw
pop
pushf
call
xor
mov
pop
pop
inc
pushf
dec
loop
or
lds
sub
jns
push
xor
add
loop
test
sbb
data16
das
jae
mov
fnop
xchg
jo
subb
enter
out
mov
lret
fcomp
stc
add
movsl
les
add
mov
lret
ret
mov
fists
mov
mov
pusha
cli
pop
je
push
dec
sahf
stc
mov
jo
lahf
jne
mov
lret
into
daa
add
push
sub
pusha
pushl
sbb
push
and
lahf
test
jo
cmpl
jae
mov
pop
dec
pop
test
and
repnz
mov
and
add
mov
add
or
dec
out
test
pop
add
push
idivb
ds
xchg
xlat
or
pusha
ss
fs
push
movsb
jne
cmp
sub
jl
push
mov
jne
jbe
xor
into
out
loope
mov
mov
or
add
sub
push
xor
inc
mov
pop
jl
aad
mov
iret
push
jle
cmpsl
nop
mov
nop
add
ljmp
mov
inc
push
add
add
add
andl
dec
push
leave
cmp
movd
add
push
mov
pop
fdivr
inc
add
aam
enter
mov
shll
movsl
sbb
ret
mov
push
push
mov
push
and
jle
pop
sub
or
jbe
je
mov
add
mov
hlt
cwtl
fs
mov
jl
mov
add
popf
adcb
mov
xchg
adc
testb
pop
mov
test
add
add
inc
outsl
popf
sub
rcrl
jne
pop
inc
xor
xchg
shrb
add
pop
stc
loopne
mov
ficoml
add
fwait
cmp
cltd
cmp
icebp
fcomp
pop
dec
jbe
dec
out
or
scas
and
rclb
add
pusha
fs
xor
inc
sub
stc
pop
add
test
dec
insb
enter
aaa
xchg
add
cmp
jp
or
enter
pop
cmpl
or
or
cmc
inc
loope
or
pushf
sbb
je
fldl
shlb
jae
cltd
mov
xorb
lret
cmp
adc
jmp
sub
rorl
mov
dec
adc
and
mov
add
addl
lret
mov
xchg
repz
loope
and
sbb
push
mov
dec
data16
je
inc
in
jle
test
mov
add
lret
adc
xchg
inc
jecxz
adc
cmp
mov
add
cmpb
imul
adc
cmp
cli
dec
loope
push
repnz
xchg
int
and
fwait
ss
xchg
es
add
out
pusha
pushf
pop
xor
outsb
shrl
dec
mov
lcall
popa
push
aaa
mov
push
mov
lahf
hlt
lea
jne
daa
push
push
es
mov
js
fsts
jmp
add
mov
aas
add
lea
ljmp
push
mov
add
std
push
xchg
jmp
in
loope
sar
adc
xorb
inc
add
jmp
push
push
cli
mov
and
jecxz
adc
mov
out
mov
xor
cs
fwait
or
add
pop
lods
jns,pn
xor
add
in
outsb
insl
adc
jge
cmpsl
add
lcall
inc
sub
push
push
leave
movlps
push
sub
xchg
lahf
adc
inc
pusha
jnp
aaa
pusha
jge
sbb
pop
add
in
leave
icebp
push
pop
loope
movsl
out
inc
std
pushf
or
mov
push
jnp,pt
pop
ss
fdivl
jb
int
sub
jl
outsl
sub
outsb
stc
andb
pop
push
int3
mov
lret
pop
pop
add
jne
or
cmp
outsl
add
mov
int
punpcklwd
dec
and
lret
push
out
loopne
cmp
lods
cmpsb
adc
imul
xchg
push
pop
add
inc
xor
add
lcall
mov
int
adc
les
rcll
stc
inc
adc
add
dec
out
clc
stos
pop
dec
add
orb
call
adc
sbb
imul
shll
pop
cld
in
jno
repnz
add
add
mov
mov
cltd
push
dec
mov
jbe
sub
dec
into
inc
addl
aam
shll
xchg
and
mov
out
inc
inc
sbb
incl
cld
adc
repz
movsb
mov
fmul
pop
or
inc
adc
in
and
clc
mov
sete
in
mov
jo
jmp
jb
ret
and
xor
imul
sub
rolb
into
and
mov
sbb
pusha
popf
add
jp
inc
adcb
jl
or
mov
aas
stos
add
jmp
dec
xor
xchg
cmc
sbb
lods
pushf
and
test
gs
push
lock
add
out
xchg
pusha
dec
subb
pop
push
lcall
outsb
and
add
gs
pop
jle
pop
add
jp
sbb
mov
add
into
mov
sub
sahf
sbb
jb
mov
sub
je
shll
and
insb
xor
jge
adc
in
loopne
scas
gs
fimuls
add
rorl
xchg
repnz
jl
pop
lahf
hlt
lret
out
xor
add
adc
rorl
cld
test
dec
mull
mov
mov
push
jle
inc
jns
add
push
ja
add
ret
jne
out
lret
lcallw
ljmp
or
sbb
add
jo
cmc
adc
inc
cli
add
mov
xlat
and
push
mov
dec
cli
adc
shll
add
imul
pop
sarl
in
bound
dec
add
jg
jnp
xor
loopne
adc
es
test
out
nop
add
inc
sbb
add
outsl
insb
mov
test
add
or
cwtl
jl
add
jle
add
pop
pop
dec
imul
add
sbbl
das
dec
mov
rcrb
add
les
push
dec
aaa
inc
jno
jp
shl
jmp
adc
mov
mov
jb
jae
rorl
dec
inc
jo
and
push
mov
push
dec
cwtl
insl
xchg
jne
add
shrb
rorl
out
cmpsb
add
mov
push
add
xchg
push
mov
fwait
cmpb
or
pop
cld
add
leave
movss
add
mov
add
dec
ret
cmp
repz
sbb
mov
out
js
adc
add
not
sub
or
pop
jge
pop
stos
lock
out
lcall
inc
mov
or
push
cmp
ret
push
and
add
cmp
add
jle
xchg
dec
adc
roll
arpl
pop
add
mov
fs
mov
jns
sbb
xchg
xor
adc
adc
xchg
lret
mov
mov
shlb
xor
push
repz
or
jle
loope
sti
xorb
int
add
adc
dec
dec
repnz
cwtl
aam
loopne
imul
and
ret
or
or
into
push
in
jmp
mov
jmp
test
add
mov
adc
fmuls
in
push
leave
mov
sti
imul
movsb
sbb
sub
fs
popf
outsb
add
cmp
pop
sahf
add
mov
mov
scas
fcmovne
dec
sbb
add
push
push
es
pop
ja
pop
xchg
fstpl
imul
jle
lods
inc
add
aas
outsl
std
dec
and
pushf
mov
aaa
shlb
fldenv
dec
cmp
lahf
sahf
pusha
ret
mov
push
mov
sbb
add
aam
ljmp
xchg
or
add
ret
imul
fisubs
es
test
mov
jnp
outsb
push
popa
icebp
loopne
add
mov
daa
sbb
out
scas
jno
push
jp
fadds
out
pop
mov
cmp
mov
add
mov
mov
jbe
loop
out
fwait
add
sub
pop
mov
mov
movsb
mov
cmp
xchg
subb
out
add
xchg
pop
add
or
in
xor
mov
and
aaa
or
ret
mov
sbb
add
mov
nop
pop
mov
jo
cmp
add
sarl
add
clc
test
dec
adc
loope
sub
add
aas
cld
loopne
lret
add
add
jns
mov
inc
fwait
adc
out
daa
scas
mov
into
adc
add
and
adc
aas
cmpsl
inc
out
mov
lret
add
mov
pop
add
cmp
lcall
xor
inc
jmp
fistl
lea
in
imul
pusha
mov
cmp
and
adc
mov
add
mov
xchg
dec
loopne
adc
xor
add
xchg
mov
mov
pop
and
push
and
jo
loope
push
cwtl
loopne
mov
xor
fcompl
dec
push
inc
mov
jg
push
or
rcl
int
test
bswap
es
repnz
adc
imul
xor
lods
xchg
add
dec
sbb
and
push
fisttps
in
les
fmuls
add
mov
fiadds
mov
lock
out
mov
outsl
add
fisubrl
mov
out
pushf
add
pop
xor
lods
xchg
add
aaa
push
movsb
movsl
dec
fwait
es
scas
inc
ret
and
add
push
push
mov
inc
add
test
push
xchg
test
mov
add
loopne
fmuls
xchg
idivb
and
cmp
ficoms
push
imul
push
dec
in
sbb
push
inc
mov
jbe
mov
xor
push
mov
ss
mov
add
xchg
call
xchg
lds
pop
xor
out
pop
aaa
mov
add
push
mov
mov
adc
push
sbb
loopne
pop
add
out
mov
icebp
outsl
pop
add
add
ds
mov
sbb
or
xchg
addr16
adc
mov
add
add
and
pop
gs
call
lahf
add
cs
shlb
inc
pop
xchg
add
scas
loopne
push
in
out
shll
and
jle
adc
dec
inc
fcoms
and
lods
fsts
aam
rcll
hlt
xchg
dec
les
insb
in
jbe
mov
aas
ja
std
adc
dec
fisttpl
pop
popa
cli
dec
in
push
add
sub
jb
pop
int3
add
mov
popa
stc
sub
shlb
xor
add
dec
inc
fmul
ret
or
ds
mov
push
xor
cmp
popa
imul
mov
xor
iret
or
add
pop
movsb
pop
ljmp
sub
cwtl
sbb
xor
and
and
jne
add
gs
dec
add
into
push
in
jns
adc
push
xorb
out
negb
je
in
mov
shrb
daa
inc
mov
mov
pop
push
test
adc
es
push
fisttpll
test
mov
push
aas
insl
mov
inc
cltd
rcll
std
jl
mov
sub
fmulp
push
push
sti
xchg
testl
dec
dec
cmp
psadbw
mov
sub
test
aad
add
add
mov
xor
fs
mov
gs
jle
dec
lret
dec
lea
lods
arpl
sbb
push
jae
or
and
bound
daa
push
inc
xchg
and
sbb
add
outsb
test
pop
mov
add
das
pop
movsb
inc
mov
sbb
sub
into
push
mov
popa
and
fistl
cwtl
inc
add
pop
push
push
mov
loope
mov
rclb
mov
loop
add
dec
and
or
ja
jg
mov
sbb
sbb
sbb
add
sub
or
scas
notl
push
pop
jmp
add
test
adc
loopne
lock
in
adc
sahf
sub
mov
inc
add
xchg
cmc
xor
push
jo
add
shrl
ficoms
nop
leave
pop
call
into
mov
mov
mov
jg,pt
mul
stos
add
mov
fcomps
inc
pushf
shr
pusha
ds
int3
dec
jecxz
mov
insb
or
ret
push
add
cmp
setge
mov
mov
push
out
mov
pop
data16
add
into
pop
pushf
xchg
add
lea
cmp
xor
or
std
sub
imul
jnp
jmp
xchg
inc
sbb
sub
pop
mov
jmp
pop
sub
mov
push
pop
mov
cmp
and
jb
cld
sub
fwait
jmp
int
popf
ljmp
test
jno
js
lret
cli
adc
dec
or
hlt
cmp
jecxz
or
pop
add
mov
mov
cwtl
push
into
outsb
add
sub
incb
dec
adc
and
add
sbbl
cli
xchg
scas
scas
add
into
adc
stos
sbb
push
jo
dec
cmp
and
add
out
test
sub
mov
shl
pop
pop
add
jg
add
adc
or
or
add
mov
repnz
sbb
cmp
mov
pusha
push
jle
popa
adc
fmul
push
mov
mov
push
inc
jl
dec
and
xchg
add
add
clc
cmp
std
xlat
cltd
xorb
jmp
adc
mov
out
repz
fnstenv
popa
sbb
scas
dec
pop
ret
mov
mov
test
jno
adc
ret
cld
xlat
out
jo
push
push
push
daa
and
add
in
xchg
ljmp
and
dec
pop
sbb
call
sbb
movsl
repz
out
jle,pt
outsb
test
sbb
loopne
iret
imul
out
nop
loopne
retw
pop
add
push
sub
daa
pop
add
out
dec
mov
fsubrl
outsl
sub
adc
test
jne
bound
pop
int
sub
push
repz
adc
xchg
test
int3
adc
gs
ret
mov
sarb
sbb
add
xor
stc
add
push
sub
cmovl
daa
out
mov
cmpsl
mov
rdpmc
add
test
mov
lcall
xor
mov
cmpsl
dec
clc
addb
xor
add
fs
jbe
sbb
shrb
lock
cs
andb
sub
mov
cmp
sub
bound
or
ficompl
cmp
xchg
add
leave
inc
adc
push
fwait
add
fstps
fcomi
lahf
mov
pop
jb
hlt
sub
adc
push
dec
add
mov
add
xor
add
mov
sbb
push
push
rcrl
xlat
or
mov
dec
nop
mov
aam
arpl
lret
adc
pop
lods
into
pop
push
fwait
add
lcall
test
mov
xor
loope
lahf
adc
jmp
sbb
outsl
xor
mov
mov
mov
cmpsb
adc
fstl
inc
xchg
popf
add
and
xor
add
pop
pop
jae
sub
dec
clc
test
adc
ficoms
scas
int
dec
sti
and
daa
mov
pop
mov
or
pop
xchg
dec
addb
mov
movsl
xor
lods
das
sahf
dec
adcl
add
mov
xchg
aaa
mov
push
cmpsl
jbe
scas
ds
pusha
and
addb
mov
adc
lret
adc
xchg
sbb
push
push
push
loopne
jne
push
jns
ljmp
ret
xchg
aad
lock
test
repz
add
inc
pop
dec
iret
push
fldl
cli
mov
and
fstps
pop
jl
imul
or
sbb
inc
in
sbb
ficompl
push
icebp
les
dec
cmpb
imul
int3
mull
enter
fisubs
dec
sbb
movsb
push
or
frstor
std
imul
lret
sbb
jecxz
sub
cmp
add
cmpsl
pushf
test
adc
inc
dec
loopne
ror
ja
push
mov
add
jbe
roll
enter
sub
clc
inc
add
add
sbb
sbb
mov
bound
ds
ss
daa
pop
lea
add
test
xchg
shl
in
and
or
imul
shrl
mov
adc
insl
into
dec
iret
push
aam
lahf
stos
out
inc
pop
xchg
add
ja
add
add
add
fcompl
add
xchg
lret
stc
cmp
cmp
push
rol
sbb
test
or
xlat
and
test
add
xchg
je
add
and
addr16
fcoml
inc
jmp
adc
xchg
mov
loope
cmp
lea
enter
fstl
leave
lret
add
dec
inc
dec
lods
sbb
cli
arpl
sbb
and
jno
lds
sbb
add
add
dec
mov
testb
xchg
sbb
cmp
mov
ret
cmp
adc
not
inc
stos
rep
add
insl
sbb
adc
fwait
xor
into
int
push
cmp
lret
mov
in
dec
lea
outsb
adcl
scas
ret
jmp
xor
repnz
lahf
flds
test
stos
mov
add
andl
mov
and
repnz
das
jl
dec
es
inc
clc
imul
adc
push
mov
lret
stos
shrl
xor
repz
push
adc
and
cmp
xor
call
add
push
aas
adc
push
stos
add
xchg
jge
add
mov
xchg
inc
or
fisubrl
xor
icebp
dec
imul
inc
add
out
cmp
orb
add
arpl
and
push
pop
inc
pusha
xor
mov
fisubs
adc
push
push
mov
adc
shrl
out
add
fndisi(8087
pusha
jns
shl
add
mov
sbb
outsl
notb
add
xchg
add
inc
push
mov
jo
add
lock
sbb
or
addr16
cld
icebp
push
cmp
sbb
test
loope
xchg
notl
out
and
sbb
xchg
push
xchg
gs
rcrb
in
add
pop
or
int
sbb
cmpsl
jae
add
cmp
pusha
in
leave
rcrl
add
or
jge
adc
pop
xchg
inc
repz
repnz
movsl
roll
xor
hlt
jno
in
inc
adc
sbb
jns
fnstenv
popl
movsb
or
push
out
add
cs
and
rorb
fsubl
ficoml
dec
aad
arpl
rcrl
mov
add
test
add
aas
or
sub
add
add
loope
lock
xchg
jg
dec
add
mov
inc
cli
fildll
sarl
loop
rcl
lahf
dec
add
pop
fwait
pop
jnp
dec
out
mov
pop
loope
pusha
jb
mov
into
and
and
insl
add
xchg
testl
and
es
insb
loopne
xor
adc
mov
xchg
mov
add
popf
andb
mov
jmp
shl
adc
add
insb
lock
stos
in
push
jecxz
lret
sbb
xchg
mov
fdivr
mov
mov
sub
ja
mov
add
test
xor
pop
mov
popa
mov
shr
insl
cmp
cltd
fsubl
cwtl
movl
jno
jbe
adc
and
pop
add
loopne
lods
xor
je
test
sbb
add
mov
mov
add
in
std
ds
das
inc
mov
or
xchg
stc
loope
xchg
jne
mov
add
rcr
or
cld
dec
add
ror
push
sti
cmp
test
xchg
ficompl
and
jo
and
jbe
push
add
push
jecxz
mov
das
sbb
adc
push
add
aaa
push
jg
xchg
aad
repnz
sbb
jbe
popa
sti
jae
mov
lret
idivb
inc
add
add
mov
fs
out
adc
jns
outsb
jmp
pop
mov
mov
sbb
xchg
popa
int3
add
xor
pop
jmp
mov
mov
mov
lea
add
and
cmp
adc
sub
ror
rdmsr
lods
icebp
mov
xchg
push
add
xchg
mov
mov
popf
add
push
dec
arpl
out
inc
add
jnp
xor
aas
mov
icebp
add
inc
mov
test
push
add
imul
xor
out
ljmp
popf
add
sarl
jne
shrl
jecxz
mov
add
push
hlt
out
ret
pushf
xchg
mov
push
mov
or
push
dec
jo
lock
mov
adc
cld
lret
outsl
shlb
dec
pusha
pop
sbb
rcll
lret
out
mov
and
bnd
mov
cmp
cmp
out
in
pushf
in
fs
mov
dec
in
jmp
add
leave
xchg
add
push
inc
and
mov
loope
xchg
inc
jg
daa
test
addl
dec
test
mov
push
sub
in
add
andl
loope
jle
pop
cmp
pop
mov
cmp
xor
add
out
in
push
cmp
imul
add
pushf
fwait
call
loopne
lahf
mov
stos
out
and
push
adc
ljmp
nop
mov
repnz
imul
add
pop
jecxz
mov
jl
les
xchg
lret
sahf
test
in
ret
stc
in
or
adc
add
xor
sbb
adc
sbb
dec
adc
add
pop
sub
add
xor
int
jns
or
dec
imull
lcall
xchg
ljmp
xchg
cmp
mov
pop
sysenter
add
ljmp
and
xchg
cmpsb
adc
sub
test
out
mov
and
shr
sub
adc
sub
sbb
loop
and
outsl
stos
loopne
jp
add
leave
leave
add
loopne
int3
or
rorb
sahf
shll
add
or
add
scas
mov
adc
pop
mov
call
sarb
out
add
ret
add
push
adc
sahf
ret
sub
dec
push
cmp
and
scas
loopnew
lcall
mov
ds
add
mov
daa
mov
test
ret
and
mov
leave
xor
jnp
xor
or
sbb
jns
mov
rclb
cmp
dec
paddq
add
jne
inc
add
clc
imul
xlat
push
adc
pop
aas
jmp
dec
sub
xor
pop
lret
or
aas
sbb
mov
jno
add
jo
out
shlb
ficoms
or
out
ja
mov
mov
lret
addl
dec
xor
xchg
pop
sub
ficoml
mov
lds
adc
rolb
je
mov
mov
xor
inc
adc
gs
imul
dec
jle
jecxz
xchg
cmpb
scas
inc
dec
addr16
cmp
lods
dec
jae
adc
xchg
and
pop
mov
fmuls
subl
mov
sub
fwait
xchg
into
in
pop
mov
adc
loope
je
sti
in
mov
push
push
inc
fstps
sbb
and
ljmp
mov
outsl
xchg
out
lret
mov
mov
and
cli
mov
arpl
outsl
add
inc
sub
imul
cmc
inc
pop
jp
sbb
or
mov
inc
fdiv
sbb
and
shlb
add
xchg
adc
cli
pop
push
and
pushf
jae
add
adc
lds
cli
mov
in
and
rcll
mov
and
rcrb
xor
loope
fmuls
mov
sarb
sub
or
stos
jne
sub
insb
xor
and
jmp
sbb
das
inc
push
pushf
add
js
lods
mov
roll
pusha
sub
je
and
shll
cltd
xor
das
cwtl
add
scas
bound
rep
test
test
and
mov
cmc
hlt
insb
test
lret
xchg
push
mov
add
iret
daa
xchg
adc
movsb
pop
test
cmp
and
mov
adcl
cs
push
cmpb
dec
add
push
stos
sbb
jle
or
mov
dec
adc
pop
addr16
ret
pop
dec
out
or
rcrb
mov
xchg
pop
or
sub
enter
mov
cmp
shrl
in
cmpsl
pop
cwtl
pusha
pop
sub
pushf
xchg
fwait
js
and
in
daa
mov
jbe
xor
add
jne
js
iret
cltd
add
aaa
out
cmp
mov
xlat
orl
push
add
leave
xchg
add
mov
mov
jecxz
xchg
jecxz
jg,pn
jnp
xchg
out
iret
add
push
repz
fidivrs
and
mov
pop
test
push
add
push
and
cmpsl
ret
xchg
and
adc
add
inc
cltd
sbb
repz
lret
adc
pop
nop
les
mov
push
fs
aam
in
adc
insb
push
loop
rclb
sti
push
mov
pushf
sub
lret
add
push
inc
sahf
loopne
out
mov
adc
sbb
sub
add
mov
mov
push
pusha
adc
pop
jbe
push
movsl
ret
ss
or
loopne
mov
mov
insb
pusha
add
rcl
cmp
loope
adc
jns
mov
xor
cmp
movsb
mov
push
add
and
mov
jle
fldt
fcmovbe
dec
fwait
sbb
jne
add
mov
or
lds
push
xor
mov
jle
fs
xor
mov
jne
sbb
adc
inc
fnstsw
push
stos
movsl
mov
mov
push
in
add
push
mov
fcom
mov
and
dec
scas
inc
push
sahf
jo
push
jp
jb
inc
cs
add
pmaddwd
add
add
mulb
cli
jg
stc
cmpsl
jg
sbb
lahf
or
mov
aad
enter
push
jno
jne
les
cmp
push
jae
sbb
arpl
mov
jb
mov
in
loope
jbe
leave
popf
insb
sbb
scas
adc
push
sahf
test
push
sub
sub
icebp
cmp
stos
hlt
xchg
xor
add
je
adc
test
sbb
xchg
in
add
lods
sbb
sbb
adc
stos
add
scas
sub
add
inc
mov
ss
add
pop
fsubs
cmpsb
test
in
add
mov
aaa
cltd
hlt
pusha
sbb
sub
popf
or
add
ret
add
inc
inc
ljmp
sub
cmc
xor
loope
test
sbb
pop
sarb
add
or
into
ds
inc
pusha
loop
dec
adc
in
enter
inc
popf
testb
cld
aas
pop
xchg
fsubrl
daa
xchg
scas
xchg
push
lods
imul
xlat
inc
add
cmp
pop
xchg
add
in
mov
add
lret
mov
daa
inc
add
aam
movsl
adc
jns
out
mov
sbb
push
or
stos
dec
test
dec
loop
mov
xchg
in
add
sbb
jbe
loope
int3
add
aaa
mov
pop
jnp
mov
out
adc
int
mov
inc
fs
cli
cmp
sbb
repnz
mov
daa
inc
std
cld
lahf
sbb
adc
in
ret
dec
push
adc
sbb
add
cwtl
add
fnstcw
jg
lds
jmp
jle
test
fbstp
sub
cmpsl
stos
inc
bound
pop
loopne
neg
xor
jbe
add
test
xor
call
clc
add
inc
in
popa
cmc
mov
fildl
sbb
incl
push
inc
aaa
divb
roll
shll
nop
jno
mov
pop
hlt
addr16
mov
xor
sbb
out
out
or
aaa
sti
adc
add
push
dec
mov
cmpb
inc
jecxz
shrb
jbe
dec
addr16
loope
xchg
add
frstor
lea
shll
into
jp
call
aam
sub
add
icebp
and
mov
dec
nop
into
into
cmc
add
pop
pop
mov
aas
xchg
adc
in
dec
add
fidivrs
ret
fs
mov
mov
scas
push
fisubl
add
lahf
or
shrl
mov
adc
fmull
iret
and
or
xchg
out
in
sbb
cmpsb
int
jp
pop
cmpsl
sbb
sbb
mov
in
pushf
lahf
cmp
jmp
push
xchg
roll
ffree
fisubrl
pop
movsb
push
sahf
add
aaa
repnz
jns
xchg
insl
add
cmp
imul
push
add
mov
loop
out
int
insl
add
call
fcoms
pop
add
and
cwtl
pop
popa
pop
pusha
mov
int
sbb
mov
and
pop
ja
fisttps
push
add
add
pop
mov
add
pushf
and
mov
popf
jno
and
test
add
jae
pop
sbb
fbstp
fsubrs
push
cmp
popl
dec
add
jnp
dec
in
fsubr
xchg
push
mov
add
fisttps
lcall
rolb
sbb
fs
scas
inc
in
sti
out
xchg
aad
jb
cmc
loope
push
mov
adc
sub
or
pop
test
mov
aaa
cld
push
fsubrl
int3
andb
jmp
sbb
mov
mov
nop
rcll
add
std
shlb
pushf
add
ret
pop
dec
jmp
pop
pavgb
or
push
jecxz
lods
inc
test
ror
add
and
adc
ret
sbb
insb
roll
faddl
xor
cmp
adc
js
inc
cwtl
repz
or
jg
test
nop
add
idivb
clc
add
pop
ljmp
lcall
inc
add
dec
pushl
sbb
add
mov
inc
add
xor
add
adc
gs
pop
orl
xor
dec
jo
push
mov
mov
add
test
in
leave
in
add
adc
pop
scas
xor
mov
xchg
inc
outsl
sbb
sub
and
push
cmc
adc
push
aas
inc
adc
jmp
iret
popa
cwtl
leave
lods
xor
movsb
jl
mov
add
ret
dec
orl
cmpsl
jecxz
mov
fs
add
fadds
xchg
ljmp
add
imul
cmpsl
pop
aad
dec
movsb
std
mov
adc
pop
adc
shll
jl
and
xchg
xchg
dec
jge
cmc
add
mov
hlt
xchg
push
out
mov
mov
lret
aas
popf
inc
insl
add
fcoml
sbb
mull
sbb
out
add
dec
pushf
sub
add
or
fcomi
jno
add
stos
lods
aam
xchg
pop
push
add
mov
roll
stos
aaa
test
cld
push
mov
push
or
jno
add
aam
addb
push
outsb
ret
push
mov
lret
stos
xlat
jle
test
mov
push
or
cmp
or
ret
sbb
jns
xchg
ljmp
movsb
stos
add
jno
or
test
das
mov
aaa
lock
sub
add
jecxz
xchg
loope
fisubrl
jmp
loopne
data16
cwtl
add
push
dec
loop
mov
cld
lahf
mov
mov
push
jb
notl
shl
xchg
jnp
and
jl
push
lahf
daa
fcomp
add
sbb
loope
sbb
xchg
pop
notb
push
ret
rorl
add
cmp
fwait
loope
pop
in
outsb
aas
adcb
pop
sbbl
mov
inc
sub
adc
cmp
sub
loopne
push
cld
sbb
push
sbb
add
jae
jmp
add
hlt
adc
sti
fwait
and
jge
popf
fildll
add
hlt
push
xor
mov
jno
or
lret
xor
pop
add
add
mov
cmpsb
cs
add
int
int3
mov
jbe
sbb
in
pop
add
insl
jge
xlat
cmp
pusha
mov
pop
gs
fstpl
push
add
or
dec
clc
add
out
jo
movsl
mov
aad
mov
jle
in
dec
test
push
scas
inc
sbb
pop
jo
add
insl
push
adc
bound
add
call
aad
inc
jl
jmp
hlt
mov
dec
adc
sbb
orb
loope
roll
sbb
cmp
pop
adc
inc
imul
fcomps
test
mov
mov
adc
pop
out
ljmp
int3
add
pop
mov
repz
xor
or
jnp
dec
sub
inc
popf
push
adc
out
push
mov
in
xor
xchg
mov
fwait
inc
and
push
imul
subb
pushf
sarl
and
cmpsb
ja
xchg
sahf
rcrl
add
cli
inc
rcrb
mov
mov
std
xchg
addl
fstps
fisubs
xlat
popa
add
mov
or
dec
pop
test
sbb
out
xor
push
cmpsl
outsb
adc
cmp
xor
add
push
push
roll
out
sbb
add
cmp
sub
add
sbb
out
add
leave
lods
loope
jle
aas
ret
or
stos
add
jnp
stos
lret
inc
jbe
add
stc
rolb
fsubrs
jg
vmwrite
imul
add
movsl
lock
push
lcall
fwait
ja
xchg
incb
rol
mov
push
xlat
jmp
push
sbb
add
jnp
aad
mov
sbb
add
loope
add
inc
out
add
pusha
bound
push
xchg
add
lcall
jg
popa
xor
xchg
popa
pop
hlt
cmove
shrl
iret
mov
loopne
icebp
mov
scas
incb
and
das
mov
ret
mov
cltd
or
movb
ja
sub
or
mov
dec
es
aam
loopne
hlt
test
dec
sbb
xlat
mov
mov
test
jp
ds
pop
add
push
out
pop
jmp
or
mov
jge
rol
cmp
jnp
jbe
dec
jae
mov
mov
cmpsl
mov
inc
sub
mov
mov
call
stos
push
aaa
add
add
cmpsb
lds
adc
pop
jmp
movsb
xchg
sub
add
pop
xchg
shll
loope
xor
mov
jno
jl
jle
pop
inc
xor
loop
outsb
add
xchg
out
lea
in
insl
sbb
sbb
jns
fdivs
pop
push
inc
add
ljmp
sbb
cs
in
pop
lcall
sbb
idiv
ficoms
xchg
iret
jp
and
loopne
andb
je
dec
push
cli
push
add
shll
xor
data16
sbb
add
push
xchg
lock
iret
inc
mov
inc
std
out
and
add
lods
loope
add
jp
mov
data16
popa
call
adc
add
mov
mov
mov
cwtl
add
std
data16
adc
movsb
sbbl
cli
adc
incb
push
arpl
mov
in
inc
inc
sub
and
cltd
call
add
inc
dec
cs
jno
lret
aaa
inc
out
adc
pop
iret
push
pop
fbld
sub
adc
push
mov
aad
mov
inc
cmpsl
je
ret
xlat
add
popa
push
test
movsl
cmp
xchg
jp
mov
or
jno
pop
pop
sub
xchg
pop
and
and
ficompl
pusha
lret
pop
leave
aam
mov
add
mulb
xor
fstl
int
dec
cld
mov
aam
add
sbb
in
aaa
pop
jbe
dec
and
pop
ret
add
orb
add
outsb
int3
mov
sbb
clc
xchg
or
cmc
fwait
mov
pop
js
sub
ja
sbb
cs
daa
push
and
std
push
fbld
or
ret
pop
hlt
mov
pop
lods
jo
adcl
call
cmp
xlat
aam
sbb
or
push
fdivl
inc
bound
loope
mov
int3
loopne
negb
xlat
in
jmp
add
push
ret
dec
xchg
pop
ret
xchg
out
mov
push
pop
cmpsl
loop
push
add
push
pop
loopne
aaa
out
lea
jne
std
add
enter
xchg
roll
or
inc
add
repz
popf
add
jl
faddp
loopne
inc
hlt
mov
add
sti
adc
repnz
pop
or
test
xor
inc
das
enter
pop
aaa
das
in
cwtl
sub
pop
add
sbb
add
xlat
or
add
jg
mov
and
pop
popf
out
mov
sbb
pop
clc
add
push
scas
fadds
fwait
nop
mov
lahf
divl
add
add
add
pop
mov
out
out
jg
mov
lcall
sbb
sbb
cmp
push
movsb
and
add
or
or
xchg
in
sub
xor
jbe
jg
lods
jmp
mov
add
push
subb
lcall
inc
clc
jg
add
pusha
mov
mov
or
cmpl
movsb
mov
adc
add
popf
std
add
cld
insl
add
mov
cmc
inc
pusha
movsb
and
rclb
or
sbb
cmp
xor
aam
cs
push
mov
push
adc
mov
into
aam
mov
mov
push
add
sbb
mov
add
mov
dec
inc
gs
add
lret
loope
rcrl
and
aad
jle
xchg
and
out
cmpsl
adc
nop
or
lret
hlt
stc
in
jmp
adc
add
xor
xchg
pop
cmpsb
lret
rolb
xor
jnp
mov
nop
bound
shlb
movsl
mov
or
lods
daa
fldl
sub
clc
idivb
cmp
push
xor
jne
xchg
gs
sub
and
loopne
scas
cmpsl
lcall
push
jbe
dec
and
pop
jne
sbb
cwtl
inc
sbb
mov
add
into
test
mov
xchg
fstpt
pop
push
sub
out
push
and
adc
imul
movsl
jne
std
bound
es
mov
fucomip
push
outsb
push
and
pop
das
jmp
push
in
or
mov
adc
mov
push
add
xlat
add
xor
loop
jl
sbb
mov
add
xchg
sub
adc
mov
jge
xchg
dec
jo
sbb
fwait
rcll
mov
sbb
add
mov
dec
sbb
mov
cld
aaa
jb
add
mov
add
or
test
push
and
in
shrl
xchg
in
add
cmp
mov
mov
sbb
dec
incb
sbb
xor
and
or
stos
and
test
push
pop
rcrb
lock
inc
insb
and
xchg
shl
shld
push
popa
loop
ret
dec
xchg
inc
sbb
or
mov
filds
or
data16
faddl
dec
lock
add
out
adc
fnstsw
jbe
orps
mov
add
pusha
mov
add
jb
adc
push
add
xor
addb
adc
pop
pop
fnstcw
fwait
dec
movd
jge
cmpsl
sbb
les
bound
and
and
insl
or
inc
mov
mov
jno
shrl
add
push
adc
mov
std
idiv
and
adc
sbb
repz
jns
mov
push
add
aam
loope
pop
daa
adc
mov
cmpsb
add
push
lock
pop
imul
add
call
add
pop
jge
add
adc
fsubl
jbe
out
add
or
add
lods
lods
jecxz
pushf
scas
adc
mov
inc
add
ja
stos
test
pop
clc
add
lock
bound
fmull
aaa
shr
mov
sahf
in
nop
ret
daa
insl
loope
fidivrs
and
sub
mov
or
dec
pop
adc
cmpsb
sbbl
push
adc
es
mov
sbb
or
add
loop
adc
ss
add
push
pushf
push
xor
in
sbb
mov
dec
add
sub
xor
push
js
in
sbb
jp
jg
mov
mov
add
and
and
negl
lret
fimuls
shll
jp
or
test
jne
cld
add
loop
pusha
xor
fwait
inc
stc
xchg
mov
aam
inc
push
jno
mov
cltd
cltd
xchg
add
pop
mov
and
inc
mov
xor
roll
sbb
std
push
subl
movsl
stc
mov
cmp
add
add
adc
add
in
push
jo
pusha
adc
and
xchg
adc
add
sarl
xchg
ja
jns
sbb
or
pop
adc
cs
sub
movsb
add
sub
fcomps
or
mov
fs
ds
fwait
jge
add
popa
lock
cmpsl
loope
sbb
xchg
or
sbb
jmp
mov
ss
inc
pop
and
add
in
loopne
fdivr
push
sbb
sarl
add
andb
adc
ds
cmpsb
pop
push
pusha
in
pop
sub
sub
pop
mov
insb
xor
fsubs
sub
dec
rorl
leave
data16
and
lods
jge
mulb
out
es
inc
movb
test
arpl
add
gs
pop
xchg
dec
sti
lret
inc
stos
cmc
xor
nop
mov
xor
popa
test
xchg
inc
add
mov
aaa
or
pop
adc
std
add
pop
adc
sarl
sub
ficoms
out
add
loop
push
ror
stc
xchg
add
sti
mov
es
jno
add
loopne
mov
jg
sbb
inc
loopne
data16
sub
mov
mov
pop
xor
test
add
sbb
adc
fdivl
sub
cmpl
sbb
pusha
add
mov
pop
popf
out
cs
lret
add
bound
jmp
stc
push
lea
in
pushf
movsl
testl
fildll
xchg
popa
sub
addl
sub
xlat
dec
int
subb
out
mov
mov
sbb
pop
jp
out
mov
push
sub
rcrl
xchg
mov
mov
adc
xchg
adc
and
and
add
xor
fstl
pop
jo
addr16
mov
add
jns
inc
mov
cld
or
mov
js
inc
push
mov
add
mov
sub
ja
cwtl
jmp
add
push
xchg
fisttpl
repz
cwtl
push
pusha
test
in
jecxz
pusha
lret
hlt
mov
dec
popa
push
add
adc
fstpt
inc
add
or
adc
ja
das
mov
xchg
aaa
mov
inc
pop
cmp
mov
jbe
aaa
add
movsl
ss
adc
sub
inc
cmc
insl
jle
aaa
xlat
jecxz
cli
sbb
push
lods
xchg
inc
fs
mov
dec
sahf
sbb
imul
lcall
les
or
loope
mov
xor
popa
loopne
sbb
mov
xor
push
popa
shll
cmpsl
orl
cmp
xchg
shrl
mov
pop
mov
add
mov
xchg
add
jo
push
popf
mov
clc
lcall
add
dec
dec
insl
flds
adcl
push
mov
adc
cwtl
pop
ret
fnstsw
test
fldcw
mov
adcl
xchg
test
xchg
jbe
in
popa
add
xchg
sub
loopne
clc
mov
sbb
fimuls
test
inc
push
inc
pop
add
xor
aad
push
leave
adc
inc
add
ror
inc
idiv
add
or
aas
or
shrl
clc
loopne
sbb
adc
and
mov
and
push
jne
add
cwtl
sbb
jo
cmp
jp
mov
fs
iret
fistpl
push
xlat
test
jle
repnz
inc
push
call
insb
push
add
dec
ljmp
pop
addr16
sub
add
push
add
add
lahf
fcomps
push
add
sub
mov
and
cmpsb
adc
dec
add
cld
sbb
xchg
jb
rol
fld
pop
adc
push
fisttpl
add
xchg
int
inc
add
call
pop
mov
dec
hlt
xor
dec
scas
lods
jl
fcoml
inc
pop
jle
sub
orb
add
jno
add
push
inc
add
xchg
lock
sti
add
addr16
xorb
or
add
and
dec
add
pop
xchg
call
xchg
mov
outsb
nop
add
movsl
sbb
les
jg
sahf
dec
mov
jb
cwtl
jnp
xor
sbb
jns
aam
adc
pushf
add
mov
pop
mov
pop
dec
mov
jecxz
or
jl
mov
gs
scas
add
das
sbb
loop
pop
jecxz
dec
jg
add
shr
mov
add
add
lahf
add
shll
rol
mov
sbb
dec
sti
aaa
enter
cmp
inc
and
add
inc
repz
daa
pop
loope
add
les
movsl
and
mov
mov
jne
ret
nop
pusha
pusha
je
mov
jecxz
jge
adc
mov
mov
push
ret
hlt
mov
push
add
jbe
dec
rclb
test
jns
pusha
pop
adc
fmuls
lret
and
sub
xchg
and
adc
movsb
sub
pop
test
clc
add
test
and
jae
add
es
iret
add
jno
sbb
fstpl
add
mov
pop
nop
ljmp
mov
dec
add
in
mov
rcrl
push
or
aaa
and
or
fwait
inc
mov
in
mov
hlt
cmp
jl
adc
sbb
sub
str
int3
cltd
mov
mov
add
fdivl
push
dec
add
sbb
cmp
ja
or
and
push
sub
cmpb
dec
pop
pusha
mov
dec
adc
lret
cmp
int3
mov
scas
adc
int
pop
xor
scas
jno
push
xchg
mov
movsb
jle
pop
push
jno
or
decb
xchg
shlb
arpl
add
ljmp
shlb
pop
shlb
lock
popf
insl
add
push
and
stos
pop
and
push
popf
mov
outsb
dec
call
xchg
iret
jae
dec
lcall
add
ficoms
add
push
int3
inc
cmpsl
cmp
repnz
add
popf
lret
add
dec
dec
xor
add
jae
mov
sbb
je
sub
xchg
add
xor
repnz
sub
gs
bound
cmpsb
or
sti
negl
pop
sub
loope
push
xchg
mov
xor
cmpb
and
into
mov
sbb
jecxz
lods
loopne
dec
adc
jecxz
scas
js
icebp
gs
xor
leave
push
jmp
js
in
add
add
pop
les
adcb
cltd
out
mov
mov
or
push
mov
mov
shll
dec
push
jno
cmpl
mov
pop
fimull
test
mov
and
std
lock
dec
fisubs
pop
cmpsb
test
mov
push
push
outsb
jo
or
addr16
insb
sbb
and
pop
inc
add
inc
rorb
in
loopne
sub
out
sbb
dec
or
repz
jecxz
nop
rol
cmp
adcl
fadds
xor
jne
rcl
les
and
iret
test
outsb
arpl
cmp
sbb
pop
mov
insb
mov
sub
cmpsl
popf
sbb
mov
and
clc
mov
and
mov
or
test
andb
inc
ficoms
adcl
cld
add
mov
ret
add
dec
inc
clc
push
je
hlt
add
call
mov
dec
sub
test
lods
add
push
sub
imul
push
push
inc
mov
cmp
fbstp
stos
loop
mov
inc
push
add
pop
mov
mov
dec
inc
pusha
add
sbb
add
movsb
sbb
dec
ds
cmp
add
cmpsl
fistpl
and
sbb
jmp
fldcw
push
out
add
ljmp
mov
dec
imul
push
sub
mov
xchg
add
mov
push
add
aad
add
jmp
movsl
mov
testb
add
clc
add
movsb
inc
inc
test
in
add
test
cmp
add
pop
jle
les
pop
fcomps
clc
lds
mov
outsl
xchg
divb
sbb
lods
cmp
scas
cltd
jno
mov
push
jo
mov
add
fwait
pop
mov
jmp
mov
inc
push
lds
mov
xchg
sub
popa
ja
jae
xor
add
xor
mov
pop
cld
add
imul
fmul
add
lock
shll
daa
or
jmp
cli
pusha
adc
sbb
loope
adc
mov
add
mov
mov
add
mov
mov
xchg
add
mov
pusha
js
cmpsb
lods
dec
out
jmp
or
xor
sbb
xor
inc
adc
jge
sbb
mov
dec
cmpl
sbb
je
imul
stc
adc
inc
dec
push
push
out
adc
cs
sbb
push
fbld
inc
and
xor
pop
pop
add
jp
and
add
testl
fmuls
xor
out
std
out
mov
dec
adc
popf
xor
pusha
in
and
std
decb
inc
push
xor
inc
movl
mov
push
sahf
imul
movsl
pop
mov
loopne
fiaddl
push
adc
push
popf
xor
xchg
shl
add
push
aad
shll
ss
or
lock
fisubrl
incb
pusha
stos
push
rcrl
jmp
and
xchg
add
jb
fadds
sub
aam
mov
mov
mov
in
cmc
iret
jno
pop
add
jae
test
test
or
addb
sub
jnp
pop
sub
dec
stc
add
push
pusha
loopne
push
mov
or
add
je
pop
mov
adc
fs
cmp
or
xchg
das
add
aas
iret
ja
out
fcoms
outsb
pop
nop
add
daa
ljmp
mov
sub
mov
loope
or
cmovs
add
pop
jmp
loopne
push
jb
adc
ja
stc
inc
sub
push
dec
or
xchg
leave
sahf
sub
cmp
rorl
xor
ficompl
jb
or
push
pop
add
data16
cmpl
faddl
add
sbb
adc
aaa
inc
popa
faddl
popf
cli
ljmp
add
dec
and
add
mul
lock
and
sub
pushf
popa
mov
mov
divl
insl
xchg
push
xor
into
jle
lret
cmpsl
fsubl
popa
xchg
add
daa
cli
push
loope
push
aam
adc
add
movsl
gs
mov
jmp
int
loope
iret
adc
loopne
and
add
mov
pushf
jno
leave
adc
mov
scas
cltd
mov
pop
je
in
inc
pop
cmc
pop
push
sbb
push
add
pop
mov
shrl
popf
push
sqrtps
adc
dec
jecxz
or
push
fnsave
mov
sbb
mov
loope
test
dec
push
jns
cmp
xchg
cmc
pop
in
xor
xor
cltd
cmp
xchg
loopne
inc
pusha
inc
xchg
or
shrl
enter
ret
cmpsl
inc
sub
pusha
pop
xchg
scas
mov
add
push
stos
mov
push
add
jno
insb
fcompl
pusha
fdivs
adc
insl
popl
into
hlt
scas
and
aaa
cmc
jp
push
dec
xchg
mov
loope
lea
shrl
jbe
into
pop
push
xor
sbb
push
aaa
stos
push
ja
add
imul
sbb
xchg
sbb
mov
out
adc
cmpsl
pusha
cs
add
and
test
call
mov
les
mov
or
mov
arpl
testl
push
push
push
xchg
pusha
cmpl
adc
mov
leave
mov
aaa
adc
in
pop
cld
adc
faddl
xchg
imul
das
fimuls
mov
inc
aaa
pop
fsubr
add
sub
popf
cwtl
pop
js
fiadds
jmp
mov
mov
in
push
es
sarl
ret
adc
jmp
add
dec
sahf
push
shll
add
push
add
cs
and
dec
sti
enter
add
jo
cmc
ja
adc
in
add
aas
push
add
and
pop
jmp
unpckhps
push
or
jl
or
pop
add
iret
sub
mov
dec
out
into
sub
inc
push
popa
std
ficoms
add
fistpll
ret
xor
lods
add
loope
call
test
sub
add
mov
lahf
ds
push
test
add
xor
lret
sbb
xchg
sbb
jle
stos
out
inc
pushf
popa
in
sbb
xor
filds
push
xchg
mov
jp
pop
shll
pop
push
dec
dec
jne
lds
lock
in
mov
cmp
adc
add
int
in
xor
je
push
jb
sub
incb
daa
out
cs
pop
add
lods
imul
inc
xchg
testl
mov
ror
pop
ret
add
cmpl
push
stc
cmp
call
test
pop
loopne
push
out
popf
add
cmpsl
push
jmp
or
add
dec
xor
hlt
push
and
nop
lea
std
popa
into
out
dec
ret
adc
dec
sbb
inc
add
dec
out
add
mov
repz
pop
sub
mov
aaa
arpl
xor
xchg
adc
inc
jae
add
movsl
lock
add
ret
imul
xor
repnz
insl
pop
pop
rcr
cmp
frstor
add
add
lcall
push
mov
clc
lret
lods
xor
out
movsb
mov
xchg
adc
jo
cwtl
fiaddl
sub
jne
movsb
ffreep
lret
jl
add
std
sahf
sbb
add
cltd
inc
pop
and
sub
loop
dec
add
pop
test
icebp
lret
nop
sbb
leave
call
add
pop
ds
stos
inc
xor
enter
movl
out
loopne
mov
jbe
push
test
bound
mov
inc
and
add
push
fnstenv
or
jo
in
xchg
inc
stos
and
adc
jmp
add
dec
insl
pop
jecxz
jp
test
cmp
inc
addr16
stos
mov
dec
push
adcl
roll
subb
dec
sbb
dec
dec
mov
adc
fldcw
sub
popa
mov
call
sbb
push
xorl
add
rolb
mov
xlat
lods
pusha
das
dec
fwait
jmp
je
lds
push
arpl
lahf
fnstenv
push
repnz
adc
xor
movsb
mov
cmp
test
fiaddl
lods
lret
or
int
stos
add
mov
xchg
test
mov
cwtl
push
idivl
add
mov
push
pop
pop
int3
add
in
sub
cmp
movsb
loopne
pop
cmp
stos
adc
call
push
outsl
cmp
add
jno
popa
loop
out
leave
or
mov
dec
jo
push
add
fdivs
cmpb
add
bound
mov
lahf
loope
or
pop
add
and
mov
xor
mov
jmp
cmpsb
nop
cmp
arpl
push
dec
inc
add
lahf
push
cmpsl
xchg
add
out
or
xchg
enter
nop
sub
fldenv
sahf
sub
in
add
mov
lret
cmpsl
dec
out
xor
inc
dec
ror
cmp
inc
inc
sbb
out
add
push
jg
mov
or
cld
jnp
cltd
outsb
jo
xor
out
js
ss
mov
mov
add
pop
pop
sub
inc
into
pusha
rcl
dec
dec
add
push
cmpsl
divb
rolb
or
jp
pop
adc
adcl
loopne
mov
out
shrb
das
testl
jecxz
jne
adc
add
xor
dec
sbb
and
icebp
ja
jb
cmpsl
fwait
out
jns
dec
cld
mov
push
cmc
add
xor
ja
xor
push
pop
jg
testl
outsb
push
add
add
add
mov
rolb
add
pop
pop
and
jo
daa
cmpsl
ret
dec
jmp
dec
data16
aaa
add
adc
hlt
test
sub
push
inc
push
insl
mov
hlt
ds
aaa
lds
push
pop
pop
call
jb
test
in
inc
sub
xchg
sahf
jae
ret
cwtl
test
cld
and
add
stc
mov
sbb
dec
hlt
out
arpl
cmp
adc
mov
push
dec
into
cltd
add
insb
mov
mov
iret
xor
inc
out
jb
ss
mov
add
scas
pop
les
lds
ret
popl
stos
push
and
fnstsw
popa
insb
test
xor
sbb
xor
repnz
add
in
mov
xchg
scas
add
cmc
pop
jmp
jl
lock
faddp
add
xchg
stc
pop
dec
lods
jge
add
in
push
pop
stos
sbb
fldcw
and
pop
lahf
inc
leave
fstpl
fistl
mov
add
xorl
add
std
loopne
in
dec
xchg
cmp
xor
dec
xchg
pop
cli
imull
sbb
jbe
sub
roll
mov
adc
add
mov
movl
gs
xchg
dec
cmc
shlb
inc
add
cmp
add
and
jg
lahf
inc
outsb
mov
pushf
hlt
add
movsb
jle
lret
add
outsb
xchg
inc
shrl
pusha
in
mov
mov
mov
gs
data16
sbb
mov
jl
ljmp
add
dec
mov
inc
in
loopne
imulb
xorb
insb
xchg
add
sbb
adc
and
mov
xor
icebp
test
mov
aam
xchg
pusha
jg
pusha
mov
test
and
aad
pop
js
pop
cwtl
mov
add
fildl
lea
mov
mov
adc
dec
cmp
int3
lds
jecxz
popa
add
and
loope
mov
out
repz
adc
inc
insl
sbb
jg
pop
pop
xchg
ja
pop
shll
ljmp
lahf
or
lock
bound
mov
pop
dec
push
jae
jmp
sbb
cld
sbb
into
rcll
iret
icebp
int
outsl
jmp
inc
adc
push
pop
inc
add
inc
imul
and
sbb
outsl
in
sahf
scas
pusha
repz
xchg
in
adc
xchg
addb
add
ds
lahf
out
mov
xchg
lods
and
arpl
mov
imul
sbb
mov
xchg
xchg
fisttpl
add
ja
adc
hlt
lods
test
fwait
cltd
xlat
add
pop
and
inc
mov
push
fstpl
aas
or
xor
jns
pop
or
sbb
pop
add
jne
rcrb
push
mov
lahf
xchg
sarb
add
das
out
sub
pop
iret
add
ror
and
pop
adc
xchg
mov
or
sbb
inc
jmp
inc
cld
lret
dec
add
mov
hlt
push
mov
add
cmp
inc
pop
push
pop
sbb
add
xchg
adc
loope
aaa
ljmp
aad
and
mov
fsts
inc
xor
js
sub
add
gs
mov
xor
xchg
sbb
or
lea
add
xor
aaa
gs
in
cs
stos
push
rcll
or
and
movl
add
pusha
cmpsb
sbb
shrl
int3
add
xor
aad
jbe
push
or
in
add
jg
xchg
add
out
repnz
mov
fucomi
fdivrl
xchg
das
fiaddl
leave
sti
std
add
sahf
sbb
dec
mov
mov
clc
adc
xor
jle
add
mov
mov
cmpl
adc
lret
ss
inc
stos
mov
sbb
jns,pn
mov
cmp
pusha
adc
pop
sbb
lret
ret
cli
int
jbe
push
lods
loope
ds
xor
repnz
sbb
aaa
push
mov
add
dec
xor
adcb
stc
fscale
data16
xchg
popf
mov
clc
jne
repnz
add
push
rolb
adc
into
dec
cmpsb
fldl
xchg
bound
fs
and
add
mov
sbbb
aaa
ret
stc
lcall
pop
push
aas
pop
mov
outsb
sbb
jmp
shll
push
mov
or
lcall
mov
in
push
ficompl
in
mov
negl
loopne
outsl
adc
xchg
cmp
ds
push
xchg
inc
xorl
out
out
jne
mov
jns
push
sub
rolb
lahf
test
cmp
addr16
adc
add
adc
push
test
mov
add
cmc
mov
loope
dec
test
lds
out
xor
mov
xorl
mov
cmp
mov
cmp
sbb
fneni(8087
cmp
pop
aad
mov
scas
jge
mov
xor
mov
dec
sub
addb
das
adc
mov
daa
les
pop
mov
sahf
loope
nop
dec
aam
pop
dec
or
pop
ret
ltr
mov
add
daa
inc
les
jno
sbb
add
aam
sub
mov
inc
mov
into
std
mov
lea
out
rcll
mov
or
movswl
loope
fmuls
jmp
xchg
loop
jo
out
imul
sahf
xchg
adc
aaa
mov
repnz
add
xchg
fdivrs
inc
or
lods
ljmp
and
mov
imul
aas
and
cmp
out
rcrl
insl
mov
cmp
mov
xchg
into
push
push
mov
cmpsb
mov
inc
or
cmpsl
push
add
pop
inc
push
or
cmp
or
dec
inc
repz
jns
int3
adc
loop
add
pop
movsl
push
leave
popa
dec
and
mov
pop
xchg
stos
testb
dec
movsb
aam
fsts
add
xchg
out
loopne
xchg
addr16
push
sarl
and
dec
addb
aad
jmp
mov
jge
dec
mov
adcb
jb
sti
add
js
scas
lret
mov
inc
popf
lcall
in
testb
jp
popa
cwtl
mov
lret
or
cmp
nop
bound
xchg
iret
mov
jmp
or
mov
push
scas
pop
repnz
in
pusha
dec
push
cmc
adc
iret
xor
lret
je
cmpsb
mov
aaa
into
mov
push
add
xchg
push
mov
hlt
sahf
add
mov
or
push
fcoml
inc
jge
add
popa
mov
in
loope
leave
test
imul
inc
test
inc
dec
pop
leave
cmp
or
cmpsb
xchg
pop
pop
sub
decb
imul
mov
test
sbb
cltd
add
mov
inc
push
xchg
test
inc
fsubr
outsb
mov
adc
sbb
pop
adc
or
lock
add
loop
scas
movl
out
andl
sbb
lds
xor
push
daa
inc
ljmp
stos
rolb
mov
mov
xchg
add
out
mov
jle
leave
fldl
sub
iret
sbb
and
jns
push
add
pusha
outsl
lea
in
adc
fidivrl
in
movsl
adc
loopne
pushf
jp
stos
jb
sub
mov
xchg
aaa
add
imul
scas
pop
add
ret
and
hlt
lods
push
add
repnz
add
fstl
daa
add
sbb
call
sbb
adc
inc
add
dec
test
loopne
jle
repz
lock
sbb
aaa
xor
sbb
xchg
pop
xor
dec
mov
adc
test
add
xor
add
xor
adc
push
xchg
dec
xchg
scas
std
mov
addr16
adc
jecxz
popa
sub
test
lret
data16
xor
jb
stos
xchg
jge
das
std
jmp
pop
outsb
inc
jecxz
lahf
push
lahf
add
and
add
sti
sbb
push
inc
or
call
or
add
xchg
out
int
bound
pop
add
rcr
adc
xchg
mov
pop
mov
or
adc
jae
aam
into
mov
movb
jo
adc
mov
jecxz
rcrb
adc
movsb
pop
test
call
mov
or
test
add
clc
mov
icebp
test
pop
mov
or
aaa
dec
pop
cs
lret
mov
sub
xchg
addr16
jecxz
daa
ret
roll
xor
add
sti
xchg
add
xchg
adc
sbb
lret
fadds
sub
out
add
xor
push
or
stos
jb
jecxz
sbb
lock
and
cmpsb
pop
pop
outsl
dec
mov
mov
insb
cmp
add
pop
or
stos
movsb
popf
out
xlat
dec
sarb
mov
push
and
push
and
pop
test
repz
or
call
xlat
fsubrs
nop
ja
push
lret
jg
mov
dec
xor
cmp
cli
sbb
cmpsb
sub
ret
int
loop
pop
mov
xchg
dec
aaa
ljmp
ret
sub
rorb
popa
test
dec
pop
test
adc
jo
stos
jno
mov
mov
in
fwait
inc
mov
es
add
cmp
add
das
inc
and
push
test
out
int
cmp
movsl
or
pusha
in
fcmovb
lret
lahf
mov
ds
cli
sbb
add
inc
daa
push
add
mov
sti
or
sbb
add
add
hlt
loope
cmp
adc
xchg
add
sub
lock
pop
push
bound
add
ds
mov
sbb
sbb
sar
cmc
xchg
add
lret
dec
sbb
mov
inc
mov
roll
pusha
add
xchg
int
pop
sub
xchg
out
mov
bound
out
xchg
mov
aas
or
add
push
sbb
scas
and
jns
push
pop
push
add
add
push
xor
lds
mov
cmpsl
mov
adc
fbld
add
mov
xchg
rolb
mov
cmpsl
sbbl
mov
or
mov
lret
adc
cmp
adc
je
jl
out
pop
pusha
jae
sub
cs
add
loope
ficoms
pop
push
add
into
icebp
or
sbb
and
out
adc
adc
or
dec
jb
jg
les
ret
add
in
mov
add
push
dec
in
scas
jnp
add
and
push
mov
outsl
xor
dec
push
xlat
rolb
and
cs
popa
lds
es
mov
loope
test
jnp
sti
fisubs
mov
jecxz
rol
and
and
inc
pop
mov
sub
rcrb
xlat
add
push
loop
add
mov
daa
adc
lock
cmp
pop
jge
int3
jno
movsb
pop
rol
rcrb
subl
bound
jg
mov
daa
dec
mov
mov
stc
cmp
xor
outsb
shl
xchg
lods
push
xor
lds
sbb
fdivl
mov
popf
orl
add
or
adc
xor
mov
mov
mov
std
dec
cltd
add
movsl
jb
out
sub
dec
sbb
out
cmp
fdivs
daa
adc
jbe
mov
inc
lret
fistl
aad
or
mov
and
out
int3
add
jmp
movl
ret
icebp
sbb
mov
notl
sub
dec
add
cmp
sti
out
ss
add
pop
mov
mov
into
fucomi
sbb
lret
add
mov
pop
test
push
test
imul
pushf
std
loopne
neg
sbb
inc
cmp
adc
aad
repz
adc
sub
adc
pushf
adc
add
jno
add
push
jne
lods
mov
add
stos
cli
jge
addr16
dec
add
mov
push
xchg
fistl
cmpsb
xchg
mov
daa
stos
mov
ret
stc
push
mov
fists
xor
cmpsb
in
mov
loope
cld
sbb
inc
fs
jb
mov
out
imul
jno
adc
add
ret
mov
stos
or
repz
shll
xor
mov
mov
ret
enter
add
leave
stos
inc
inc
jbe
lahf
idivl
lods
sub
pop
cmpsl
call
cli
mov
out
add
mov
xchg
jo
add
cmc
xchg
cltd
lods
aad
mov
adc
pusha
add
loopne
nop
mov
add
xor
ret
lods
mov
push
bound
unpcklps
or
cld
or
hlt
sbbl
cli
inc
out
addr16
jecxz
jle
cmp
dec
ret
xchg
cmp
add
sub
negb
add
mov
lods
cmp
adc
shrb
mov
mov
scas
and
mov
stos
es
xor
lods
mov
xchg
inc
mov
adc
push
add
into
insb
cmp
add
xchg
xor
inc
jo
jge
jb
mov
inc
pop
jp
test
add
scas
add
jl
adc
out
push
sub
ret
in
mov
cmpsl
int
add
mull
fldt
dec
jmp
mov
jb
add
aad
push
cltd
jge
stc
daa
scas
or
and
in
mov
sahf
jae
xor
dec
fs
mov
jmp
mov
mov
xlat
push
add
jg
dec
popa
outsb
popf
mov
adcb
mov
inc
out
nop
add
or
fnstsw
pop
pusha
xor
inc
push
push
mov
push
fldcw
iret
dec
sub
shll
sub
out
add
inc
mov
sbb
xchg
pushf
push
std
fldl
scas
jg
add
jp
movsl
jno
orl
repz
fnsave
nop
aaa
sti
std
cmp
cld
adc
daa
je
dec
flds
or
nop
pushf
jne
pop
add
js
sub
icebp
jecxz
sbb
or
inc
lods
mov
sub
pop
add
mov
mov
push
push
fmull
inc
push
roll
cltd
adc
xchg
rolb
pop
shrl
vphsubbw
push
mov
out
imul
pop
inc
jo
call
pop
mov
lods
add
adc
rcr
jbe
jnp
sbb
xchg
sub
sub
ret
cmp
cmp
filds
movsb
adc
jnp
pusha
loope
mov
dec
xchg
ret
mov
mov
mov
jl
add
scas
cwtl
fisubl
cli
loope
jp
sbb
jle
fnstsw
or
mov
adc
clc
sysenter
repz
ds
pop
mov
lcall
ret
clc
jle
or
sarb
pop
add
iret
into
add
mov
mov
pop
arpl
fstl
inc
mov
xchg
jnp
lock
push
push
add
stos
fwait
push
cli
cld
xchg
sub
mov
les
xorb
stc
fildl
xchg
fidivl
cmp
repnz
and
mov
jns
fstl
cmp
test
pushl
add
mov
pop
add
and
rol
ljmp
cmp
xchg
jo
push
mov
addr16
jb
fwait
les
pusha
or
rorb
sahf
jo
adc
push
cmp
mov
mov
xchg
fwait
add
ja
and
mov
sub
cmp
imul
ja
arpl
pop
push
add
dec
sbbb
mov
and
sbb
int
mov
cs
add
test
cwtl
add
dec
sbb
enter
insb
sbb
int
mov
rcrb
jnp
andl
iret
pop
ss
mov
and
enter
add
aas
test
inc
ljmp
shll
adc
mov
shlb
inc
inc
add
jle
js
adc
or
pop
mov
xor
sbb
ja
and
into
fimull
push
cmpsb
outsl
out
pusha
push
clc
iret
lea
cld
add
addr16
add
ret
cmp
fdivs
movb
dec
ljmp
repnz
add
xchg
pop
add
mov
stos
lds
jns
movsb
and
es
sbb
xchg
ds
lahf
leave
sub
adc
sti
movsl
popf
stos
mov
adcb
jl
cmp
mov
add
arpl
push
ret
add
enter
mov
jno
pop
add
es
mov
std
fcomps
dec
pusha
add
mov
mov
dec
ret
push
sbb
cmc
pop
outsb
test
mov
int
clc
call
les
mov
cmpsl
add
mov
add
lret
cs
push
and
xchg
addr16
mov
jle
lock
movb
add
add
pushf
push
enter
add
mov
add
aas
sar
sub
push
sti
add
jb
pop
ss
add
in
push
pop
outsb
cmp
and
imul
xchg
sub
xchg
pusha
dec
jne
aam
test
adc
into
ljmp
push
push
add
cmp
dec
dec
or
or
rol
clc
add
loop
out
inc
add
es
daa
in
add
dec
mov
and
iret
hlt
loopne
dec
sbb
fmull
or
adc
push
daa
xor
sub
scas
push
inc
stos
out
stos
add
jg
dec
add
mov
jno
xchg
cmp
jo
insl
xor
add
ret
mov
add
les
inc
xchg
mov
push
fdivrl
adc
xchg
xor
das
call
stos
cli
add
in
imul
shll
filds
adc
inc
clc
xorl
loope
aam
add
inc
insb
arpl
fucomi
outsb
call
repz
mov
aam
subl
sbb
mov
repz
sbb
loop
jno
test
inc
add
jmp
ret
dec
pop
add
lds
repnz
pop
mov
pop
jl,pn
adc
mov
and
add
and
std
adc
stos
mov
fiaddl
jnp
loopne
adc
xor
sbb
mov
sbb
jb
jo
mov
loope
in
add
mov
mov
loope
dec
dec
orb
xchg
repz
xor
and
addl
add
stos
nop
daa
and
add
or
inc
dec
pop
incb
xchg
mov
ja
adc
add
push
push
mov
cmpsb
push
out
and
pop
jp
cmp
daa
mov
std
push
shll
sbb
push
jecxz
pop
mov
inc
sbb
jbe
or
inc
out
mov
push
jge
inc
loope
repnz
add
int3
xchg
jp
neg
inc
shlb
mov
into
add
es
add
jg
cli
hlt
and
into
cmp
push
ret
xchg
lahf
add
subl
pop
xlat
icebp
cmp
jp
mov
inc
ja
sub
jb
add
xlat
add
push
sti
add
ret
cmp
cmpsl
lds
mov
pop
hlt
mov
sub
sbb
in
enter
mov
sub
repnz
jbe
add
inc
and
sbb
out
leave
notl
add
inc
popf
popa
in
inc
in
add
mov
mov
fisubrs
mov
push
add
mov
leave
dec
sahf
fdivr
loope
push
test
adc
adc
pusha
pusha
aam
dec
push
ret
sbb
lahf
gs
jbe
lock
jnp
inc
fwait
jne
add
je,pt
loopne
push
add
mov
mov
loopne
sub
mov
cld
add
add
push
rolb
clc
adc
push
mov
push
iret
dec
loopne
call
mov
push
jbe
sub
pop
icebp
and
pop
adc
add
mov
mov
jg
sahf
outsl
out
jl
add
add
jb
inc
imull
dec
loop
jnp
clc
scas
aad
rcrb
sbb
add
sbb
frstor
ss
mov
in
push
add
call
and
fwait
stos
sti
cmp
cli
adc
ljmp
mov
movsl
and
shl
xchg
mov
fbld
aaa
mov
call
cmp
push
add
jns
xor
jnp
add
in
lods
pop
fiaddl
imul
movsl
fadd
mov
inc
js
mov
sub
sub
inc
jns
fnstenv
mov
ja
add
pop
fsubr
int3
insb
jmp
das
add
add
mov
rorl
adc
rcll
mov
or
roll
popl
sbb
pop
or
xchg
call
jmp
icebp
fstl
xchg
pusha
stos
outsb
fisttpl
out
jbe
js
cmpsb
test
mov
mov
and
jae
jb
push
add
fbld
pop
test
mov
mov
lock
shll
rorl
pop
fmull
subl
push
std
lret
scas
cs
fcmovnb
xchg
adc
pop
mov
in
cmpsl
iret
mov
push
jp
add
out
js
mov
aaa
sahf
cld
mov
add
mov
loopne
dec
pop
rolb
lahf
jno
xchg
jmp
andl
jge
pop
addl
mov
stos
lcall
out
sub
dec
push
stos
sub
ret
adc
xchg
lds
mov
push
or
xor
adc
push
cltd
xchg
adc
jge
hlt
sub
inc
adc
inc
sbb
rcrl
loope
fildll
or
imul
mov
jg
movsb
icebp
cmpsb
add
sbb
pop
add
xchg
add
idivl
enter
add
cltd
ljmp
pushf
add
jl
mov
rol
add
mov
out
jecxz
or
mov
in
lret
jmp
xor
daa
notb
cmpsl
inc
and
lret
add
ret
add
pop
mov
loopne
leave
jle
cmp
loope
sbb
enter
add
dec
or
inc
daa
leave
jmp
and
ret
sbb
xchg
pushf
dec
jne
add
cmpsb
flds
xchg
adc
pop
sbb
pusha
add
shlb
push
out
clc
shll
mov
stc
add
push
aad
fld
jne
cmpb
scas
push
and
rorl
jge
xchg
push
mov
add
orl
mov
and
cmp
repnz
inc
mov
shll
mov
fs
xorb
fisttps
lods
ficomps
cmp
mov
cmp
addb
cli
add
sti
mov
inc
cmp
adc
leave
mov
mov
ja
cli
jg
inc
cs
push
sahf
push
ficomps
sbb
sbb
iret
adc
test
sub
inc
in
xchg
xlat
cltd
ja
xchg
sarb
and
push
mov
pushf
pop
mov
aam
cmpsb
adc
xchg
nop
jns
mov
in
orl
and
mov
addb
inc
jmp
mov
fidivl
es
sbb
xchg
dec
subb
cmp
fwait
int3
dec
mov
mov
imul
loop
lcall
jbe
adc
mov
mulb
pop
scas
inc
add
shl
dec
inc
xlat
xor
dec
dec
sbb
add
scas
jg
jb
ds
add
pop
sahf
dec
and
ss
and
adc
push
inc
test
add
cwtl
pop
pop
decl
int3
stos
repz
popa
inc
add
mov
jbe
cmp
dec
jl
inc
push
sbb
push
scas
push
hlt
pop
sub
jb
adc
adc
fdivp
add
pop
into
xor
shl
movsb
xlat
call
out
addr16
cmpsl
adcb
scas
and
pop
in
imul
testb
mov
dec
in
repz
lret
push
push
cli
mov
test
inc
lcall
xchg
pushw
shlb
fdivs
push
ret
push
mov
inc
cmp
sbb
push
and
add
in
mov
add
and
sub
mov
add
jmp
icebp
pop
add
push
ret
pop
jp
out
push
adc
add
inc
mov
sub
push
sbb
mov
out
adc
cld
push
leave
sbb
jp
cmp
std
mov
ja
xchg
push
stos
addl
loop
sbb
cwtl
repz
add
adc
push
scas
inc
dec
add
xchg
push
xor
loopne
call
sub
dec
pusha
int
mov
sar
pop
imul
inc
mov
mov
sbb
xlat
inc
fdivrs
dec
or
lahf
dec
push
add
mov
or
push
inc
jnp
and
mov
sahf
icebp
cmpsl
pop
mov
out
data16
hlt
push
dec
add
out
mov
xchg
mov
aaa
sub
pusha
rorb
dec
fmulp
sbb
xor
add
inc
or
mov
scas
rorb
add
push
xchg
pop
xchg
add
and
pop
xlat
mov
xor
scas
mov
add
imul
dec
movb
xor
mov
repnz
mov
stos
inc
pusha
sarl
jns
dec
sbb
mov
add
iret
inc
in
pop
mov
adc
stos
jmp
mov
add
movsl
sbb
rolb
aaa
inc
bound
jl
fldl
add
ja
mov
inc
cwtl
push
ljmp
add
test
cmp
mov
xchg
or
push
lahf
add
jl
popf
sbb
mov
icebp
inc
cmp
add
mov
add
or
add
testb
jbe
xor
push
fwait
xor
jnp
cmp
add
push
dec
push
pop
lcall
mov
int
inc
addl
popf
cwtl
inc
loop
add
xchg
clc
cld
cmp
sbb
push
popf
iret
outsl
add
test
dec
inc
add
inc
push
mov
insb
gs
add
mov
add
lds
add
or
scas
push
add
sub
xchg
or
test
mov
add
mov
ret
shl
mov
rcr
roll
mov
aad
test
push
add
sti
add
testl
in
lock
test
pop
jne
arpl
pop
add
es
mov
sti
dec
lea
jbe
or
or
popa
mov
jecxz
aas
or
xchg
sub
and
loop
cmp
add
or
imul
subb
sbb
add
cmp
add
push
jno
loopne
dec
xlat
sbb
setns
adc
inc
in
icebp
pop
pop
fldl
jbe
xchg
xlat
add
aad
lods
dec
and
cs
shlb
in
cwtl
repnz
in
dec
mov
adc
add
adc
lock
or
icebp
sub
adc
mov
sbb
ret
pop
mov
jge
or
cmp
push
rolb
stos
and
addl
iret
jnp
ret
add
lods
test
rcll
jg
insl
ficoml
icebp
add
nop
les
mov
outsb
mov
add
inc
sub
insb
sub
add
data16
call
pop
mov
cmp
lock
rcrb
inc
int
add
mov
je
outsl
out
imul
mov
in
pop
mov
add
push
fdivrl
jp
test
leave
push
push
dec
addl
push
lods
stos
or
dec
add
xor
leave
mov
dec
sarb
cmpsl
enter
xchg
adc
mov
adc
mov
dec
les
ja
push
add
jl
std
iret
pop
add
mov
mov
mov
add
mov
push
mov
adcl
fs
jecxz
cltd
cmpsl
cmp
and
jmp
out
cmpsb
rcrb
ja
xchg
dec
mov
pushf
fiaddl
nop
sbb
test
dec
outsb
push
jecxz
push
jae
xchg
loope
pop
sbb
sub
jp
movsb
adc
dec
and
pop
push
add
xchg
push
ja
mov
aad
inc
fucomi
xor
jg
out
andb
pop
xor
add
lcall
loop
out
add
pusha
test
mov
lahf
push
js
pop
jbe
dec
push
into
mov
leave
lret
add
ja
out
add
push
push
and
inc
pop
xchg
jo
mov
adc
rclb
add
hlt
fcompl
pop
ds
add
cmp
sti
jo
fidivs
fistpll
push
pushf
add
mov
cmc
pop
popa
add
adc
and
jno
mov
mov
add
xchg
punpcklwd
mov
shl
inc
into
lock
mov
mov
pushf
xor
fmull
or
sbb
or
add
push
xor
fucomp
mov
incb
add
sub
add
mov
push
js
data16
outsl
inc
add
rol
dec
push
or
adc
jb
sbb
add
xchg
cmp
mov
lahf
arpl
shrl
jno
and
rol
bound
ja
icebp
imul
cltd
ret
push
test
mov
push
add
add
popa
aas
mov
sbbl
ljmp
adc
xor
loopne
add
idiv
pop
jl
xchg
add
cmp
push
xchg
stc
movss
cltd
push
adc
iret
andb
arpl
jge
fcmove
inc
add
icebp
dec
sar
jl
or
fidivs
mov
xchg
add
icebp
jnp
dec
and
je
sbb
mov
jmp
pop
sbb
hlt
stos
inc
mov
inc
sbb
gs
pop
leave
fldl
push
test
xor
add
inc
or
rcrb
mov
sbbb
fbld
and
stos
sbb
push
xchg
pop
sub
push
dec
mov
jl
loope
aam
in
add
and
adc
mov
sbb
sub
xchg
lcall
lahf
or
fs
int
cld
rcrb
xchg
inc
out
cmp
jnp
lods
les
add
outsb
idiv
gs
adc
data16
cmpsb
cltd
add
xchg
push
rol
addl
rcrb
sub
mov
add
add
add
push
rcrb
inc
sub
add
js
jns
ret
mov
mov
adc
lock
fcomps
ret
pop
and
pop
fwait
dec
pop
ljmp
push
mov
adc
push
ficoml
test
mov
and
mov
cmc
push
movsl
xchg
xor
or
cs
lds
inc
aam
shll
jg
cmp
add
dec
jle
dec
sbb
xor
push
mov
or
xor
cmp
adc
iret
and
mov
subb
sbb
and
movl
out
xchg
or
add
pop
addr16
gs
jg
add
repz
dec
pusha
enter
std
inc
icebp
push
sub
and
decb
adc
sbb
sahf
adc
orl
out
push
pop
push
fsubrs
lds
jbe
add
imul
adc
adc
dec
push
cwtl
pop
and
or
and
or
in
ret
pusha
cmp
stc
cmpsb
mov
movb
push
cmc
hlt
mov
repz
adc
cltd
dec
pushw
stos
insl
out
sub
cs
dec
adc
sti
clc
xchg
aaa
dec
stos
and
cmp
ret
cmp
and
mov
mov
negb
push
sbb
pop
push
stc
scas
xor
jmp
test
xchg
sbb
add
sub
xor
push
push
scas
dec
arpl
cwtl
in
repz
pop
mov
pop
adc
pop
out
mov
sbb
ds
add
push
mov
add
dec
in
fidivrl
lret
leave
in
adc
cmpsl
xchg
mov
lds
enter
add
sub
push
and
inc
sub
fwait
shll
xlat
xchg
les
push
loop
out
data16
cmp
rclb
cmpsl
incb
adc
mov
sub
add
in
outsb
or
nop
jecxz
cmp
outsl
test
inc
add
in
xchg
add
ret
cld
dec
add
jge
dec
fsub
inc
jnp
test
icebp
out
ss
cli
pop
pushf
ja
xchg
xchg
sub
and
push
outsl
dec
xor
lahf
add
xor
add
sbb
repnz
rcrl
aad
adc
mov
xor
xchg
imul
pop
inc
hlt
sub
mov
adc
add
pop
insl
xchg
leave
loop
aaa
add
or
mov
add
xchg
xchg
dec
add
jne
xchg
lret
add
push
callw
shlb
imul
mov
enter
es
xchg
loopne
pusha
jns
cmp
int
ds
fmuls
jmp
mov
ret
or
add
data16
shl
mov
pusha
pop
and
dec
jecxz
xchg
call
shr
ljmp
add
addr16
popf
imul
push
jle
lock
ss
cmpsb
or
sbb
mov
stc
cs
inc
pop
loop
fmul
or
dec
sbb
pop
gs
roll
insb
mov
add
bound
movsb
aaa
fistpl
sbb
dec
add
mov
xchg
xor
adc
lods
stos
add
subl
cmpsl
jae
xlat
sbbb
or
fistpl
sahf
pop
and
add
mov
push
imul
add
lock
jg
xor
pop
xchg
add
test
test
jns
adc
sbb
outsl
lahf
mov
inc
aad
mov
add
sbb
sub
shll
roll
ficoms
mov
xor
inc
xchg
sbb
inc
in
std
add
add
ret
pop
data16
add
and
sub
insl
pop
cwtl
mov
push
in
sub
pop
sbb
push
add
mov
adc
xchg
loope
pop
push
jl
jo
cmovle
pop
dec
add
mov
rorl
inc
cmp
cld
cmp
sbb
push
sub
testb
fisubrl
ret
push
imul
out
lret
flds
call
mov
test
xchg
xchg
punpcklwd
jg
lods
in
mov
jl
sbb
daa
into
mov
jne
or
push
rclb
loope
xchg
mov
call
inc
pusha
fnsave
mov
or
iret
pop
les
push
push
xlat
pop
mov
scas
mov
aas
loopne
ljmp
imul
mov
ljmp
add
or
aad
inc
cmc
pushf
push
add
daa
push
pushf
lea
dec
and
xchg
or
sbb
push
add
daa
hlt
adc
repnz
and
inc
xchg
or
dec
mov
add
imul
adc
arpl
test
pop
pushf
mov
jno
xor
push
shrl
mov
rclb
enter
push
std
jns
xor
add
addr16
mov
aad
inc
mov
fisttps
fldcw
mov
cmp
rclb
popf
mov
push
cli
mov
push
xchg
or
add
aas
das
cs
mov
adc
and
fwait
jmp
sbb
add
icebp
test
mov
inc
pop
jecxz
pop
add
std
mov
dec
add
into
push
mov
pop
add
test
mov
add
mov
scas
and
roll
ret
and
xchg
add
mov
fistpll
loopne
icebp
jae
aad
loopne
mov
adc
add
and
push
sub
pop
out
mov
fnstsw
mov
sub
sahf
pusha
push
push
adc
popa
mov
shlb
out
xchg
adc
je
in
mov
int
filds
sbb
outsb
and
mov
scas
rolb
or
jmp
xchg
subl
test
xchg
push
cld
add
sbb
mov
clc
lods
or
add
mov
push
sub
pop
add
call
jnp
mov
push
adc
shll
xor
inc
out
fldl
xor
out
int3
loop
incb
adc
stos
stc
pop
push
inc
fwait
add
mov
xchg
out
pop
and
sub
lret
shll
push
popf
clc
imul
es
cmp
push
add
fisubrs
rorl
arpl
test
xor
iret
cltd
add
mov
test
add
xor
sbb
int3
push
je
sub
cmp
dec
aas
popf
aas
and
dec
loope
cmp
adc
rcll
push
push
into
ds
jle
add
int3
fisubrs
dec
mov
sub
xchg
leave
je
repz
lods
js
xorb
pop
add
mov
loopne
xbegin
mov
add
daa
subb
lea
jo
jbe
imul
jecxz
lret
outsb
add
lahf
popa
cld
xchg
add
mov
fwait
and
push
sbb
fnstcw
fistpll
pop
add
xchg
test
loope
mov
inc
push
xchg
sbb
sub
testl
dec
jmp
push
outsl
es
filds
fwait
ja
mov
mov
sahf
add
add
imul
mov
add
xor
push
sti
cmp
les
mov
xor
adc
mov
ja
inc
ss
dec
out
insb
sti
jle
scas
adc
push
cli
repz
add
add
lahf
iret
and
in
add
pop
cmp
push
loopne
add
es
adc
jne
pusha
daa
scas
nop
adc
or
js
add
push
inc
jo
aas
in
andb
in
mov
cmp
shlb
xchg
jl
add
dec
cs
notl
pop
adc
pop
xor
stos
sbb
xor
pop
int
test
jl
mov
sbb
xchg
icebp
fsubp
dec
pop
inc
add
out
das
mov
or
adcl
fsts
adc
std
add
xor
dec
jo
sub
arpl
es
sub
ja
add
xlat
dec
dec
add
add
lods
or
mov
enter
mov
sahf
push
repz
addl
bound
xor
inc
cmp
movb
add
and
mov
cli
repnz
add
pop
ljmp
adc
insb
inc
sub
and
bound
xor
and
leave
fwait
push
xchg
stos
xor
cmpsb
loope
sbb
in
shlb
xchg
popf
jmp
sub
mov
xchg
add
movsl
sbb
sbbl
sub
xchg
sbb
nop
mov
std
ss
daa
cltd
jbe
cmpb
xor
inc
jb
out
iret
outsb
inc
adc
push
jnp
clc
xchg
sub
test
dec
add
icebp
dec
test
fwait
dec
pop
fcompl
or
pusha
lods
push
pusha
mov
pop
jg
xor
mov
clc
adc
outsl
int
inc
add
add
sbb
js
and
mov
xor
add
jno
stos
loopne
inc
dec
add
daa
inc
repz
aas
add
lods
negl
ljmp
xor
push
stc
int
sub
sbb
cmpsb
adc
hlt
xor
cwtl
jno
popa
push
mov
jo
cltd
add
mov
dec
pop
je
push
sahf
stc
outsl
sub
lods
push
inc
sbbb
stc
add
test
inc
add
nop
push
ds
icebp
fistl
xor
inc
jne
add
sub
pop
sbb
inc
pusha
cmp
lods
insl
jmp
add
and
sub
adc
dec
inc
mov
sbb
dec
mov
add
shlb
pop
std
movl
xchg
cmp
ret
lcall
stc
gs
jns
xchg
movsb
sbb
jmp
sbb
mov
fcompl
fwait
sahf
loope
ja
stos
add
jp
cmp
mov
adc
into
fisubl
loope
sbb
mov
add
jae
data16
add
push
xor
dec
mov
je
and
fisttpll
in
inc
sbb
dec
fwait
loopne
iret
mov
xchg
pop
jl
ljmp
insl
cmovg
lahf
icebp
add
adc
fstp
lcall
xchg
clc
xor
vpmullw
fwait
scas
inc
cmp
mov
lods
lahf
push
pop
jg
loopne
dec
mov
xchg
in
iret
push
cmp
or
add
adc
call
pop
mov
ficoms
xchg
inc
pusha
add
adc
lods
inc
cmp
mov
jae
lret
outsb
add
pop
xchg
in
add
cmp
sarb
xchg
adc
dec
dec
add
sub
jecxz
stos
xchg
inc
xchg
sbb
sbb
imul
xor
pop
xchg
sbbb
xor
pushf
push
mov
adc
in
es
adc
xor
loope
divb
testl
and
loopne
sbb
fcomps
sub
stos
and
jnp
push
dec
add
xchg
push
jne
mov
movb
sub
stc
sbb
cmp
mov
int3
add
mull
in
xor
dec
push
xor
lods
loope
mov
jns
out
and
mov
add
out
std
dec
or
xor
mov
lahf
xor
sbb
mov
loopne
imul
clc
or
ljmp
cmp
test
ljmp
fisttps
es
jne
adc
insl
notl
add
or
add
aaa
cwtl
xchg
pop
out
jecxz
jne
xchg
imul
std
je
and
jle
sbb
rol
stc
add
bound
andl
movl
push
into
test
pop
xor
inc
scas
add
jmp
pop
add
fcomps
push
incb
ret
test
cmp
out
movsl
sub
adc
fmull
add
mov
xchg
add
adc
pop
pop
mov
add
xor
mov
out
fucom
sti
rcll
and
rcrb
xor
add
add
push
mov
push
test
andb
and
imul
aaa
adcb
adc
inc
sbb
inc
std
or
pop
dec
and
xchg
mov
dec
sbb
mov
adc
sbb
popf
sub
test
lods
add
das
xchg
xor
jbe
sbb
pusha
fistl
in
cmp
inc
movsb
adcb
sbb
pop
aaa
in
add
dec
add
insl
mov
rcll
sub
adc
xchg
pop
inc
mov
push
divl
mov
add
mov
cmp
ss
arpl
cmp
nop
fwait
xor
xchg
mov
xchg
fwait
mov
dec
jns
sbb
outsl
lcall
int
push
mov
pop
xor
mov
daa
dec
movsl
bound
bound
ljmp
adc
stc
mov
sbb
inc
add
cmpsb
dec
push
dec
fnstsw
add
bnd
int3
roll
out
push
adc
in
xchg
repz
xlat
addr16
in
add
adc
lods
rorb
fs
xchg
inc
sbb
mov
xchg
xlat
cmp
outsb
js
bound
out
inc
fidivs
loop
int
scas
dec
cmpsl
scas
ljmp
stos
push
cmp
jno
mov
dec
or
adc
js
pop
mov
daa
inc
popf
add
daa
ja
clc
repnz
pop
repz
sbb
enter
xchg
cltd
lds
cmpsb
ja
mov
arpl
pop
add
push
xchg
iret
dec
insb
adc
mov
mov
jne
xor
jmp
adc
sbb
pusha
xor
or
loopne
arpl
popa
dec
or
mov
inc
fsqrt
clc
js
andl
adc
cltd
jecxz
in
add
inc
rcll
loope
stos
out
add
mov
mov
cmpsb
popf
ljmp
imul
add
dec
repnz
add
push
sub
jmp
sbb
or
or
enter
xchg
push
jp
lcall
or
sbb
xchg
cmp
mov
jle
adc
inc
mov
repz
or
and
mov
add
jb
cmc
loopne
mov
add
arpl
add
dec
mulb
test
mov
cld
iret
xor
jp
out
jmp
xchg
jo
lock
mov
sub
insl
cmp
faddl
fnstcw
sbb
mov
add
insl
jb
fdiv
loopne
enter
jle
add
filds
popf
add
inc
js
and
sub
add
cmpsl
dec
xchg
mov
xchg
aaa
popf
pop
ss
sti
inc
inc
mov
ret
pop
test
mov
pop
add
xor
lea
add
cmp
sub
in
jge
les
push
inc
mov
xor
cmpsl
adc
mov
sbb
cltd
btr
mov
sub
aad
push
dec
push
pop
adc
xchg
and
add
cwtl
imul
iret
cmpsl
jecxz
sti
pop
push
stos
add
adc
in
bound
adc
xor
dec
mov
cs
sbb
je
add
addl
jle
cmp
pop
jmp
leave
xor
add
packuswb
loope
out
mov
fmull
push
aas
add
lret
xchg
push
add
inc
sahf
sub
xchg
out
add
je
imul
lret
pop
push
loop
xchg
movsb
lods
mov
xor
xorl
ss
and
scas
mov
loope
add
cmp
mov
xchg
ljmp
push
push
add
fdivs
mov
sti
lea
and
icebp
imul
pop
cwtl
in
add
cld
mov
das
dec
add
mov
outsb
add
pop
shrl
and
cld
cmp
cmp
sbb
pop
stos
xchg
mov
insb
ret
inc
add
sub
or
or
add
mov
mov
xchg
adc
add
sbb
andb
jb
push
mov
cli
sub
mov
jg
ss
and
test
cs
stos
add
mov
int3
fists
addr16
add
stos
mov
dec
mov
loopne
jg,pt
out
adc
and
int3
notb
stc
inc
popf
push
mov
jbe
and
add
outsb
add
sub
mov
mov
test
add
xchg
add
ds
outsb
xchg
push
lea
mov
mov
pop
pusha
pusha
stos
pop
adc
sbb
sbb
xchg
xchg
repnz
pop
xchg
fldt
loopw
int
aaa
pop
mov
xor
pop
mov
roll
aas
insb
jp
jmp
mov
fldcw
mov
sbb
mov
xchg
mov
sahf
dec
nop
sub
shr
mov
mov
imul
int
add
iret
jno
cmc
xor
sbb
xor
mov
and
out
sar
sub
pop
in
sub
mov
add
dec
outsb
pop
add
mov
aam
ret
jb
clc
in
mov
aas
outsb
cs
add
movb
add
jl
dec
inc
add
std
xchg
mov
ret
call
mov
cmp
push
decl
popf
orl
movsb
sub
dec
mov
lcall
stos
in
test
popa
add
inc
rolb
and
adc
adc
or
add
dec
lods
or
push
xlat
add
mov
daa
pusha
add
sbb
push
subb
lea
mov
dec
popa
das
in
dec
loopne
pop
mov
mov
icebp
loopne
push
cmpsl
and
insb
hlt
loope
inc
divb
inc
test
mov
insb
imul
add
inc
sbb
in
xchg
into
popf
sub
mov
std
les
add
bound
xchg
pop
adc
add
inc
or
les
stc
repnz
mov
in
push
jp
jge
call
lods
loopne
das
jle
push
pushf
aam
inc
pop
ds
flds
mov
mov
sti
add
mov
and
inc
pusha
daa
jl
xchg
pusha
loop
movsb
in
ljmp
mov
sub
jnp
add
xchg
xchg
ljmp
ds
mov
mov
sbb
ficoms
xlat
xor
add
aad
aam
adc
pusha
or
adc
mov
xchg
add
inc
add
test
pop
inc
mov
add
icebp
test
js
jne
stc
scas
jo
shlb
jae
mov
lock
or
out
sbb
fbld
icebp
dec
rcrb
xor
sbbb
adc
addr16
sbb
negl
cli
add
mov
mov
jnp
add
cltd
sub
add
push
and
inc
js
aad
jle
sbb
add
fucomp
pop
pusha
lea
push
pop
sub
movsb
addl
out
add
imul
popa
icebp
pop
and
push
xchg
dec
scas
call
add
add
mulb
sahf
xor
mov
jmp
lret
pop
sbb
add
aam
mov
inc
jl
mov
inc
fcompl
sbb
xor
ja
imul
fstpt
xchg
lret
lods
inc
loope
scas
aam
cltd
in
es
jne
add
ss
or
mov
scas
add
pop
mov
mov
stos
add
adc
add
hlt
clc
mov
cmpsb
and
xor
jecxz
sahf
int3
std
add
data16
sub
shl
mov
or
push
int3
rcll
rcr
shl
add
shll
cmc
test
out
bound
nop
mov
mov
push
imul
mov
loopne
adc
sbb
add
mov
xlat
fdivl
std
stc
push
mov
adc
repnz
inc
lock
jnp
cmp
pop
add
es
ljmp
add
ss
mov
add
mov
shrl
push
addb
nop
add
cmp
std
sahf
scas
sbb
dec
cs
int
pop
push
in
mov
xor
cmpb
out
xchg
add
adc
ror
dec
adc
or
sub
inc
ss
std
jmp
les
fisubrs
or
mov
push
add
mov
cli
and
inc
cmp
outsl
add
cmp
add
mov
adc
xor
add
push
test
mov
clc
push
pop
das
dec
add
mov
call
jg
or
add
loop
int
aam
add
call
mov
pop
add
mov
add
addr16
int
xchg
movsl
mov
test
adc
adc
pop
ja
jge
shlb
add
out
push
push
outsl
shll
loope
inc
dec
mull
flds
mov
mov
xchg
sub
cmc
sbb
adc
add
lods
jecxz
push
add
push
add
loopne
xchg
es
adc
std
clc
scas
rcl
pop
push
add
in
sub
add
int3
dec
mov
cmc
push
dec
mov
nop
outsb
iret
stos
cltd
jbe
add
mov
mov
add
xor
and
flds
dec
inc
xor
add
or
daa
or
insb
inc
cmpsb
fst
stos
ficompl
repnz
add
or
jmp
enter
fcos
mov
shlb
sbb
add
orb
int
or
lock
sbb
or
movsl
inc
jno
add
sub
and
iret
inc
pop
cld
cmpsl
cwtl
fnstsw
cmpb
mov
or
push
and
fidivs
cltd
movsl
cmp
mov
std
fimuls
add
popf
test
xor
cmp
dec
xor
popa
pusha
outsb
dec
pusha
adc
sub
adc
push
mov
jp
rorl
dec
inc
std
mov
xchg
jo
insb
fadds
mov
fs
lods
add
loope
jmp
lds
add
add
adc
cmp
mov
sbb
inc
fisubl
or
add
pop
inc
std
and
frstor
mov
test
add
mov
jnp
push
add
mov
fmulp
cltd
sub
xchg
adc
jns
pop
hlt
cmp
and
inc
add
insb
inc
in
xchg
mov
into
add
xchg
jbe
push
or
adc
inc
jmp
test
clc
xchg
inc
jl
xchg
add
dec
push
imul
cmp
out
repnz
ret
cmpsb
and
adc
inc
jg
cmp
outsb
inc
rcrl
lret
mov
ja
mov
insb
stos
jo
push
bswap
add
aaa
sub
out
mov
divb
pushf
jae
pop
add
popf
rol
ja
dec
in
xlat
cmp
mov
add
cld
movsl
in
ret
scas
movsb
jb
dec
sbb
jg
or
fsubs
pop
clc
js
jno
mov
sub
xchg
into
lcall
dec
movsb
xor
inc
push
or
add
in
fdivrp
and
stos
add
fsubrl
xlat
mov
test
jae
push
jmp
sub
roll
fisubrs
loop
ds
add
cmp
ja
push
scas
add
call
cmp
add
daa
add
rorb
push
add
lds
lcall
jmp
mov
add
ror
arpl
loopne
add
and
jmp
sub
add
mov
mov
mov
lcall
out
mov
lock
add
push
cmc
mov
xor
cmp
jae
xlat
jbe
mov
add
adc
adc
sbb
psadbw
movsb
pushf
fcompl
lahf
outsl
push
xchg
lods
aad
mov
test
fcmovne
orl
push
scas
xchg
pop
adc
push
ja
outsb
fiaddl
xlat
lds
dec
mov
jmp
into
loopne,pn
in
xchg
add
pop
push
push
adcl
ljmp
adc
jb
roll
and
test
push
mov
or
dec
decl
jl
movsb
add
push
insb
mov
dec
xor
mov
push
dec
out
add
mov
daa
pop
mov
xor
mov
jbe
sbb
shl
popf
xchg
and
xchg
or
jnp
xchg
sub
add
stos
addr16
adc
jne
jp
scas
cmp
mov
addb
mov
pop
add
int3
enter
cmp
cmp
pop
arpl
jge
ret
icebp
xor
add
jbe
jl
imul
shll
and
pop
lcall
loope
jp
sub
adc
and
adc
pusha
mov
fcoml
pop
subb
and
pop
scas
call
xchg
js
or
roll
lods
adc
add
xchg
scas
pop
out
add
loop
ret
loope
inc
pop
fstpl
and
add
push
out
add
xchg
mov
data16
testl
cmpl
jns
cld
xchg
and
dec
cmp
adc
add
jae
rorb
inc
repz
movsl
dec
xor
adc
jo
add
cltd
pop
pop
xor
mov
lea
les
adc
movsb
or
add
cs
xor
ljmp
int3
test
xchg
add
push
and
and
aam
add
mov
hlt
ss
dec
adc
fyl2x
xchg
pop
out
addr16
or
push
add
mov
cmpl
aad
or
hlt
aas
pop
imul
lock
adc
sbb
jp
es
xchg
cmp
stc
push
hlt
push
sub
push
add
nop
aad
pop
and
inc
arpl
sub
dec
pushf
in
add
pop
sti
std
add
aas
dec
test
fs
mov
lret
ret
xchg
inc
imul
push
xchg
add
sbb
cs
jl
xor
out
dec
popf
fiaddl
das
dec
adc
cmp
loope
mov
call
popa
xor
testl
or
jae
stc
sbb
mov
add
push
sub
jle
jnp
pop
pop
adc
ret
add
mov
mov
push
sub
add
pop
mov
ret
mov
inc
jge
mov
adc
lods
int
xchg
pop
xchg
sbb
sbb
orb
fnstsw
call
mov
or
stos
scas
inc
fiaddl
mulb
cmp
add
fs
mov
push
in
mov
into
mov
aad
fstpt
cs
add
enter
arpl
or
aaa
add
and
iret
inc
mov
dec
ror
je
lods
mov
testl
dec
out
jno
out
iret
das
lods
cmp
push
add
push
pop
daa
shrl
repz
js
add
adc
cmpsl
mov
adc
push
push
leave
sbb
les
subb
adc
push
add
cmp
stos
out
add
and
push
int3
cmp
mov
test
and
adc
lahf
cwtl
jnp
enter
lods
push
xorl
mov
in
pop
or
push
push
adc
jbe
push
or
push
xor
add
or
and
dec
pop
and
add
jne
imul
xor
js
cmp
stos
mov
or
sbb
dec
mov
negb
rorl
xor
jo
in
adc
add
loope
daa
lods
popa
jg
add
pop
imul
or
orl
xchg
aas
adc
loope
or
cmp
and
mov
shl
lds
je
andl
sti
pop
xchg
lahf
sub
xor
add
cli
mov
sub
jg
mov
out
add
inc
mov
fildl
out
push
test
or
movb
adc
mov
jl
test
add
mov
pop
movsl
addr16
push
mov
push
xor
add
mov
add
jge
push
imul
inc
in
xor
subb
xchg
test
nop
cmp
sbb
scas
mov
or
jns
imul
out
dec
andl
cmpsb
scas
mov
jno
std
mov
hlt
mov
add
mov
in
push
sub
in
fnstsw
and
sbb
inc
xorb
rcrb
ja
cmpsl
add
mov
lea
mov
pop
add
sub
jnp
adc
pop
push
leave
and
add
xchg
pop
cli
sbbl
pushf
mov
fwait
aam
ret
xchg
in
inc
test
incb
add
negb
jge
jbe
es
dec
loope
cli
dec
inc
cmp
jl
add
mov
add
mov
pusha
stos
rolb
adc
pushf
aaa
add
imul
outsl
pslld
add
adc
sub
loop
loopne
sub
rorl
add
lea
lcall
xor
outsb
adc
jno
push
pusha
out
fimull
clc
std
in
add
xchg
pop
add
icebp
shrb
or
add
inc
sti
jge
and
add
popa
es
rcrb
xlat
sbb
jb
add
adc
or
scas
js
insl
pop
cwtl
push
sbb
aam
lret
add
test
add
out
inc
inc
pop
push
or
or
mov
jge
adc
pop
in
push
iret
adc
rolb
insb
dec
cmp
in
add
pusha
faddl
data16
mov
adc
or
lock
cmp
add
cwtl
fisttpll
add
sti
adc
and
mov
mov
into
sub
jne
loope
push
sbb
clc
push
jle
ja
xchg
xor
push
sbbl
jmp
mov
lret
gs
xor
push
add
test
mov
cmpsb
aas
lock
cmp
push
jno
mov
mov
push
popa
adc
xor
lock
fdiv
add
out
add
dec
xchg
shll
mov
and
and
inc
xchg
xor
lods
jl
mov
mov
out
mov
jnp
leave
enter
pushf
call
cmp
jl
dec
push
divl
roll
pop
lret
mov
fs
add
and
ds
xchg
test
add
lds
add
dec
sub
shll
rcl
stos
popl
mov
iret
sub
add
fisubrl
lods
fsubp
or
push
adc
dec
xor
jl
rclb
cmc
in
cmp
mov
sbb
pop
hlt
jge
adc
lds
in
xor
cmp
cmp
mov
add
ja
xor
dec
push
add
sbb
repz
and
jns
mov
testb
jne
sub
cltd
push
shrb
cli
and
jbe
jecxz
ljmp
push
idivl
jp
stos
add
aam
insb
mov
mov
in
sti
repnz
add
and
sbb
jo
daa
jmp
xor
rcll
addl
lock
dec
add
aaa
fcomi
add
call
xor
nop
pusha
xor
xchg
add
push
pusha
sub
jns
jg
shrb
enter
popf
pop
das
mov
mov
and
sbb
pop
mov
lods
enter
f2xm1
fsubrl
mov
scas
test
mov
rolb
pop
sar
out
loope
repnz
test
cmp
pop
pop
xor
in
xor
mov
adc
std
push
pop
dec
jnp
add
and
fs
sub
inc
pop
and
and
cmp
mov
dec
outsl
push
lret
mov
inc
mov
scas
xor
pop
jae
test
ffreep
cmp
xor
fidivrl
sub
cmp
jae
xor
movsb
adc
xor
xor
and
addb
sub
push
cmp
imul
xchg
lret
scas
mov
push
cwtl
lds
jp
loope
xchg
test
jo
cmp
adc
and
adc
jecxz
inc
movl
xor
jno
movsl
orl
jecxz
mov
cltd
sbb
fimuls
add
cmp
mov
in
mov
sub
add
dec
mov
or
mov
loopne
das
iret
lret
in
fistps
cwtl
test
mov
sub
cmp
mov
mov
cltd
gs
pusha
mov
negl
xchg
add
xor
test
jbe
push
adc
add
jnp
rorl
add
add
cmpsb
add
js
cmp
test
pusha
inc
mov
mov
shll
sbb
test
push
sub
push
sbbb
ja
rcrb
das
mov
xchg
inc
or
xor
add
mov
adc
in
int3
jno
dec
leave
add
mov
repz
rorb
orl
mov
sub
add
pop
add
imul
push
fcomp
dec
cmp
mov
je
ds
xchg
ret
rcrl
sti
sbb
adc
gs
mov
mov
lcall
mov
xor
movsb
push
cmp
ljmp
fadds
mov
dec
test
loopne
xor
or
mov
add
lret
add
add
shll
loopne
in
aaa
push
insl
or
mov
call
movsl
out
mov
jge
mov
bound
jne
test
jns
je
jmp
imul
and
cmpsl
out
add
in
xchg
movl
dec
push
push
sbb
repnz
xor
add
cwtl
shll
cmpsl
lret
and
lods
nop
out
cmp
fcomip
xor
rorb
mov
sbb
cmc
push
repnz
mov
adc
mov
subl
jmp
push
ss
push
and
iret
sbb
pop
loopne
cs
sbb
loop
pusha
adc
ret
enter
xor
pop
inc
loopne
pop
push
cmp
scas
enter
sbb
sub
inc
mov
pop
addb
mov
stos
add
ud1
add
outsl
push
xor
pop
add
cmp
jae
addr16
add
push
shl
adc
jecxz
cmp
sub
daa
sub
add
outsb
cmp
or
add
cmp
xchg
jbe
ja
push
rorl
push
push
and
sub
and
sub
cltd
addr16
sti
mov
and
ret
loope
out
mov
sbb
imul
test
sbb
inc
sti
mov
out
cmp
jno
loope
scas
sbb
imul
test
inc
out
mov
lret
scas
filds
loopne
leave
push
outsl
cwtl
cli
mov
mov
das
mov
add
mov
in
push
data16
sbb
and
mov
insl
add
idivb
mov
test
cmp
jl
cmp
push
mov
adc
inc
push
test
dec
outsb
out
xchg
out
jbe
add
scas
pusha
jns
icebp
pop
sbb
add
jp
add
cwtl
push
add
mov
push
add
aaa
dec
jg
dec
imul
daa
pop
jmp
inc
mov
sbb
push
sub
nop
shll
or
jno
pop
mov
jne
sub
dec
adc
add
dec
cmp
cmp
lods
ds
adc
ja
repnz
int3
or
mov
je
lcall
mov
xor
xlat
or
add
push
adc
rcrl
xchg
and
arpl
pop
push
push
add
cltd
add
repnz
add
lods
outsl
or
pop
xor
xor
or
cli
jmp
add
xchg
push
and
in
ljmp
cld
cmp
sbb
ss
inc
adc
pop
cltd
cmc
pushf
add
lods
mov
add
jg
add
lods
mov
jns
and
mov
loop
xchg
mov
mov
in
cmp
ds
rclb
mov
popa
je
pop
int3
sbb
push
xor
lock
mov
xchg
add
add
cmp
shrl
out
popf
pop
and
push
jo
nop
stos
adc
fwait
sbb
divb
inc
repz
out
aas
adc
std
xchg
gs
mov
outsl
fs
sbb
adcb
cmp
jns
mov
adc
scas
sbb
push
jp
add
inc
icebp
mov
jb
shlb
xchg
and
mov
mov
inc
je
nop
cmp
ror
stos
loopne
xchg
cltd
push
and
lret
adc
scas
loopne
outsl
xchg
fistps
jno
mov
sbb
mov
loop
fisttpll
or
add
test
cs
loopne
or
outsl
xchg
push
adc
outsb
pop
push
sub
loope
lea
mov
or
jl
jle
gs
rcrl
mov
lahf
les
jno
mov
pop
fbld
push
sbb
incl
call
ret
test
shll
jg
cmp
inc
jno
adc
push
pusha
pusha
inc
add
jge
add
dec
nop
aam
pop
leave
or
sarl
push
add
adc
dec
aas
or
iret
in
add
mov
inc
call
repz
and
add
and
jbe
push
push
inc
push
cmp
jns
xor
repz
cs
insl
lods
pusha
out
mov
push
or
jb
sahf
add
test
mov
cli
dec
insl
loopne
sbb
mov
jae
dec
enter
or
sub
mov
mov
cmp
and
es
push
push
and
ret
les
xor
inc
test
pop
push
xchg
ss
push
outsb
lds
xchg
jle
inc
add
gs
cwtl
push
insl
push
nop
pushf
or
inc
add
cmpb
out
add
adc
sbb
aas
mov
mov
lret
cmpsl
xor
add
cmp
aad
jo
stos
stc
loop
add
xchg
pusha
jae
lahf
jecxz
push
in
pop
adc
mov
add
repnz
jae
jle
or
xchg
fs
outsb
mov
push
mov
jbe
add
nop
push
mov
inc
fdivs
sbb
lahf
rcr
add
inc
lret
ret
inc
mov
adc
shll
das
add
jbe
stos
sub
mov
add
dec
fs
lahf
addl
mov
jl
adc
movl
xlat
out
push
add
xchg
insb
ret
loop
add
out
fildl
sbb
mov
mov
loope
or
imulb
ret
mov
aad
inc
hlt
adc
andb
cs
jnp
xchg
adc
mov
push
leave
add
sub
add
es
cmc
test
lahf
adc
lods
mov
das
popf
push
incb
int
xor
dec
fbstp
insb
cmp
mov
mov
out
or
int3
mov
pop
out
in
add
and
pop
sbb
frstor
adc
cmp
filds
nop
or
adc
jg
repz
or
jecxz
sbb
adc
jp
pusha
push
xchg
dec
sbb
mov
add
add
lea
jae
addr16
cmp
pusha
cmp
aas
pop
add
cmpsl
mov
and
in
and
jmp
push
and
push
shrl
sahf
jecxz
mov
lock
adc
add
adc
xchg
data16
jb
xchg
jbe
add
xchg
dec
pop
add
movsl
jmp
rclb
add
cwtl
rorl
addr16
cmp
dec
cmc
aam
cli
push
ret
insb
testl
adc
loopne
rclb
gs
add
fwait
in
mov
add
sub
inc
add
sbb
add
add
dec
add
cmp
mov
mov
cld
hlt
out
mov
xchg
add
shr
adcb
pop
movsb
jmp
popa
add
mov
fcoms
fsubp
xor
jmp
insl
xchg
fld
jge
sbb
mov
call
jb
out
dec
lods
ss
in
fdivrl
ljmp
movsb
push
cmp
pop
aas
loope
cmp
xchg
pop
repz
jl
sub
stos
idivl
add
pop
test
loop
imul
jle
cld
inc
jne
orb
add
cmp
mov
stos
xchg
aas
popa
mov
addb
lods
cmp
push
or
jmp
inc
add
loopne
add
xor
sbb
add
scas
add
lahf
movsb
mov
popf
std
inc
out
fcomps
lds
fcomi
sub
pop
dec
push
sbb
cltd
add
xor
shrl
and
adc
loop
and
add
xchg
scas
rclb
pop
inc
outsb
das
inc
fsubrs
sbb
inc
stc
loopne
jp
dec
or
sarb
outsb
push
pop
test
add
add
int3
or
inc
daa
xchg
adc
bnd
cmp
cmpsb
push
mov
cli
xor
movsb
cmpsl
adc
xor
or
out
jg
sti
and
mov
xchg
and
add
faddl
int3
adc
jae
push
push
cld
std
inc
xchg
cli
jle
mov
add
outsb
push
pop
mov
ds
adc
imul
ror
mov
jge
push
loopne
arpl
sbb
jle
lods
pusha
scas
pop
push
popf
loop
mov
add
sub
jle
sbb
pop
out
shlb
pop
fidivl
test
pop
jns
in
sbb
jl
mov
ficoms
xlat
loopne
scas
lods
pop
leave
sbb
sub
int
adc
jo
rcr
push
jle
adc
out
testb
sbb
and
lahf
and
ss
roll
mov
movsb
sbb
sub
mov
jno
adc
push
jge
and
cltd
jns
cmp
add
cmpsl
adc
insb
or
addb
sub
xchg
dec
pusha
rcr
stc
pop
ja
adc
dec
push
sub
pushf
scas
push
add
ljmp
add
clc
addr16
in
sti
add
movsl
add
adc
xchg
xchg
test
inc
outsl
fadd
jno
jne
push
negl
movsb
mov
lret
scas
fldl
push
in
out
popa
popf
cmp
mov
js
sub
in
push
pop
sahf
sub
add
sti
into
sub
jns
aam
pop
test
add
jne
mov
out
sbb
jge
and
inc
insb
outsb
inc
out
or
stc
inc
add
fwait
cmc
inc
jecxz
cld
je
in
and
and
pop
out
out
cmp
and
filds
add
cmp
add
sbbb
pop
xor
js
and
add
jl
add
adc
fildl
test
jg
or
mov
cmp
mov
cmc
jp
subb
scas
sahf
add
mov
ret
push
int
add
dec
xorb
add
inc
pusha
addr16
push
add
mov
xor
js
pop
or
add
mov
push
add
mov
lcall
inc
fadds
push
lret
inc
leave
out
iret
int
insl
add
es
std
pop
orl
data16
or
add
loope
lret
adc
add
jmp
loopnew
sti
test
test
add
cmp
inc
jmp
adc
sbb
dec
mov
mov
push
enter
ljmp
add
xchg
mov
push
mov
les
ljmp
push
mov
jne
ficomps
mov
and
rorl
xchg
mov
ficompl
pusha
scas
mov
out
sbb
outsl
mov
addl
or
ret
add
pusha
mov
adc
push
push
pop
iret
add
push
mov
or
cmp
lds
aaa
movb
mov
mov
xor
cmp
rcl
or
sub
ror
fld1
ret
sbb
or
test
and
cmp
push
fisubrs
sbb
ja
sti
stos
mov
push
jne
add
jbe
daa
dec
test
scas
sbb
cmpsl
pusha
add
adc
push
scas
add
sbb
jb
hlt
shl
fcmovne
sbb
mov
insb
je
push
jg
xchg
or
mov
mov
add
mov
shrl
inc
sbb
push
loopne
dec
or
adc
or
shrl
shll
add
ret
mov
das
push
loopne
out
aam
lcall
and
arpl
icebp
push
add
mov
insb
pop
adc
aaa
sub
subb
xchg
das
fcmovb
sub
jae
mov
movsl
mov
push
cmpsl
xor
add
push
lds
or
xor
movb
xchg
inc
test
add
mov
ror
cltd
lret
scas
add
test
jmp
mov
adc
rclb
dec
roll
in
pop
mov
add
cmpsl
pop
int
jp
lock
mov
push
sbb
je
dec
test
sub
clc
das
mov
pop
add
test
outsb
mov
add
pop
mov
psadbw
mov
add
js
sub
xchg
xchg
pop
dec
push
bound
lret
scas
addb
jne
mov
add
repnz
mulb
cwtl
into
aaa
mov
add
add
fiaddl
test
sahf
insb
iret
imul
and
xor
das
imul
xchg
add
jne
js
add
ja
mov
movsl
jbe
cltd
testl
mov
in
add
push
mov
add
test
mov
test
popa
xchg
dec
xor
mov
mov
cld
out
imul
daa
ja
into
inc
add
les
dec
sub
icebp
sbb
pop
xchg
pusha
rcll
cld
jnp
loopne
ja
dec
fimull
repnz
push
add
and
ret
inc
add
inc
jne
pusha
dec
xchg
jle
scas
lcall
cmp
mov
mov
cmp
adc
paddusb
movsb
lea
mov
add
icebp
movb
lds
inc
sbb
sbb
movb
dec
sub
add
cmpsb
sbb
jnp
xchg
mov
jecxz
cmp
aam
hlt
cmp
xchg
cmp
in
fwait
mov
add
movsl
pusha
xchg
outsl
test
sahf
int
into
bound
fisubl
imul
pop
pop
inc
mov
movl
inc
addr16
pop
loopne
or
jo
mov
stc
and
add
fsubp
pop
adc
outsb
filds
add
sub
lds
and
jmp
lcall
mov
cmp
daa
add
xor
out
popf
mul
jle
jo
jne
xchg
test
sbb
xor
adc
jno
push
inc
jnp
in
xchg
js
push
xchg
xor
lret
pop
scas
sbb
xchg
ss
mov
sub
xchg
outsb
xor
cwtl
jge
test
fildl
loop
sub
xchg
in
mov
lock
js
sbb
mov
pop
inc
test
arpl
cltd
mov
add
popf
movsl
into
pop
loope
add
mov
hlt
mov
outsl
add
lods
popa
mov
sbb
xorl
and
jg
scas
popf
inc
sub
mov
mov
fadds
adc
mov
jg
add
test
ja
mov
fildl
mov
add
cmpsl
loope
sbb
ss
sbb
jmp
dec
jo
sbb
mov
movsb
mov
and
jnp
mov
insl
int3
jmp
xchg
addb
mov
test
or
fcompl
pop
cmp
cmpsb
lock
xchg
dec
cwtl
test
adc
outsb
sbb
mov
mov
xor
ds
inc
and
jae
add
jno
push
enter
add
rcll
aas
lods
pop
out
sbb
cmp
loopne
sti
mov
mov
jmp
sbb
jnp
mov
inc
add
add
sub
insl
loopne
mov
dec
fucomip
push
add
cmp
add
pusha
push
pop
cmpsl
test
add
in
std
adc
pusha
xchg
lock
mov
movsl
lahf
popf
lds
sub
xchg
std
add
xchg
pop
sub
popf
fcmovne
xchg
into
add
jno
add
sbb
xor
cmc
cmp
push
test
cmp
jnp
inc
sub
and
dec
add
jle
cmpsb
mov
pop
push
cwtl
sbb
xor
pushf
xchg
les
out
add
insb
push
mov
into
mov
and
push
add
mov
test
cmpsb
sub
add
or
iret
mov
mov
adc
int3
stc
xchg
jge
push
sbbb
add
sbbl
xchg
mov
push
outsl
bound
cmc
push
faddl
cltd
or
cmp
and
sub
lcall
icebp
dec
and
lods
daa
and
test
cli
dec
std
mov
rol
and
or
cs
mov
repz
fadds
add
xor
mov
dec
in
je
add
aaa
fwait
mov
adc
adc
sbb
pop
hlt
fmull
mov
stos
out
xor
pop
push
jl
pop
out
fidivrs
sbb
jle
fsubl
lds
push
nop
loop
dec
xor
or
and
fsub
into
xor
je
pop
les
lock
cmp
int3
inc
mov
rolb
or
cmp
sbb
fdivrs
pusha
aad
mov
pop
divb
into
cmp
mov
mov
add
mov
sub
cmp
ljmp
sub
mov
add
xchg
xorb
aad
jno
clc
pop
dec
leave
xchg
into
pop
pusha
sub
or
andl
bound
xchg
sahf
push
rcl
mov
add
out
cmp
mov
loope
cmovbe
nop
adc
test
mov
hlt
pushl
add
xor
shll
dec
adc
hlt
add
push
xorl
or
jge
cmp
into
add
jns
push
orl
or
xor
xchg
mov
xchg
les
in
sub
or
add
adc
les
push
push
add
out
jg
sub
incb
cli
add
push
push
scas
jne
pushf
xor
sub
mov
and
lret
sub
xlat
cmp
data16
cmp
fucom
loopne
pusha
jae
mov
mov
or
push
sahf
add
push
loop
imul
dec
sub
cwtl
pavgw
test
pop
lea
in
push
fiadds
push
mov
and
and
sub
mov
adc
cwtl
push
sub
jle
jo
aam
push
or
cld
inc
lcall
xor
inc
dec
add
sti
xchg
add
adc
filds
inc
adc
push
mov
and
add
push
dec
xchg
cmp
icebp
cmp
dec
mov
fldt
in
add
or
or
xor
pop
mov
cli
add
js
out
in
ss
add
mov
repz
xorb
add
push
mov
lods
cmp
add
popf
jl
cld
popa
scas
js
clc
out
add
fistps
add
cmp
sub
imul
test
sbb
xlat
loopne
push
and
add
in
pop
fldcw
adc
out
fs
xchg
push
adc
inc
cltd
scas
mov
pop
push
mov
aas
fildll
xor
jno
fldt
ljmp
adc
mov
pop
cwtl
sbb
addr16
adc
and
mov
add
lds
xor
scas
jne
stos
push
in
fcmove
or
pop
and
movsl
pop
call
mov
pop
mov
iret
incb
shlb
test
push
int3
clc
and
outsb
sbb
outsl
into
popf
mov
lcall
insb
leave
cwtl
fstpl
xchg
push
or
dec
frstor
push
testb
dec
js
lods
shrl
inc
xor
mov
and
inc
inc
lods
jmp
add
and
adc
xor
ds
loope
mov
inc
test
push
sub
and
push
jb
pop
mov
mulb
lcall
popf
dec
jp
jo
xor
nop
inc
lcall
sti
iret
ret
adc
cmp
data16
add
jb
sbb
les
sbb
rcll
cwtl
in
jnp
add
or
outsb
pop
xor
cmp
push
call
pop
inc
adc
shrl
add
xchg
add
and
sbb
fimuls
mov
xchg
incb
cld
sarb
adc
push
insb
xor
sti
dec
inc
sbb
xchg
arpl
xor
leave
sbb
adc
popa
add
pop
dec
push
or
mov
pop
pop
add
loope
movsb
xchg
aas
scas
insb
loope
rol
popa
add
nop
jmp
push
sbb
das
add
add
inc
insl
adc
push
add
fcmovnu
mov
movsl
push
sub
popa
add
insb
adc
add
dec
jae
fwait
repnz
mov
sub
cmp
mov
js
daa
jge
adc
cmpsl
mov
xchg
mov
pushf
pop
and
mov
lahf
jl
pusha
aaa
bound
push
dec
sbb
les
das
add
inc
cmp
adc
loopne
xrelease
adc
add
dec
mov
sub
or
jno
jmp
out
pop
add
lret
jae
in
pusha
fwait
mov
add
sub
adc
sbb
xor
xlat
lods
sub
dec
push
clc
popa
arpl
adc
sti
cmpsl
xchg
xor
xchg
dec
hlt
push
cs
add
and
cmp
adc
mov
cwtl
xchg
pop
fs
add
push
addr16
add
xor
jp
test
pop
xchg
jl
cmpsb
test
daa
xor
mov
scas
add
das
mov
jno
pop
add
adc
bound
add
mov
and
sub
add
rclb
sbb
and
cs
add
in
cmp
add
mov
rorl
add
shrl
fsub
popa
sbb
ja
rolb
dec
xor
out
scas
add
pop
push
inc
and
add
jecxz
cli
add
dec
dec
scas
mul
cmpsb
pop
pop
add
push
xchg
popf
sub
add
push
or
gs
mov
fs
pop
stos
jle
or
pushf
xor
inc
cmp
sub
sbb
cmp
add
lret
xchg
sbb
cmp
mov
and
js
loopne
inc
and
xor
jnp
pop
dec
push
adc
loope
add
push
subb
std
out
in
xor
js
bnd
das
inc
mov
dec
loop
mov
test
add
jns
pop
std
test
scas
dec
pop
or
shl
mov
fldcw
leave
mov
movsb
xchg
movl
imul
add
addl
adc
ss
inc
sub
filds
xchg
mov
out
push
and
clc
adc
sub
inc
add
loope
xchg
add
mov
inc
mov
jns
jl
sbb
fstl
iret
addr16
adc
lds
add
notb
and
push
and
popf
pop
sahf
add
pop
push
pop
add
lcall
add
jns
scas
add
daa
push
inc
sarb
jne
jle
jae
add
mov
mov
ret
ficomps
pop
ret
cmp
pop
cwtl
loope
and
jnp
xchg
add
pushf
addr16
xor
jg
sbb
xchg
imul
ja
mov
mov
cltd
lds
add
lahf
hlt
fisttpll
lods
lods
pusha
fwait
lret
xlat
inc
cmp
push
and
add
jecxz
mov
ret
xchg
cmc
sbb
icebp
push
push
cmpsl
fld
adc
lret
out
sahf
aaa
add
cmp
and
pop
dec
add
loop
cmp
rorb
sbb
lods
rcr
shrl
addr16
dec
jl
call
jecxz
mov
lahf
pop
mov
add
jno
add
lret
aas
scas
addr16
test
dec
pop
fucom
iret
cmp
cltd
adc
or
into
pusha
inc
out
adc
pop
cmp
inc
pop
ret
or
add
mov
loopne
pop
fstpl
add
rolb
mov
cli
mov
pop
mov
inc
sub
or
mov
scas
add
insb
add
push
add
dec
rcrl
filds
xchg
adc
add
test
lahf
push
addr16
mov
jae
bound
add
lret
add
scas
cmpsb
mov
xchg
inc
stos
lds
xchg
subl
out
cmp
pop
icebp
dec
cli
sbb
mov
es
sahf
imull
test
cmp
inc
sbb
aaa
in
add
aas
call
and
pop
jnp
pop
jae
pop
sbbl
jns
cmpsb
ds
icebp
lock
jecxz
xor
dec
xchg
out
repz
outsl
push
or
add
lret
and
lahf
loopne
inc
pop
shl
sbb
dec
adc
add
mov
insb
jmp
lods
add
call
addr16
iret
or
add
loopne
and
in
loope
mov
xchg
stos
adc
xchg
or
jb
jo
xor
mov
add
fwait
sub
mov
pusha
mov
mov
mov
jne
inc
in
adc
pusha
not
sti
popa
jno
sbb
mov
dec
xchg
xor
gs
jb
jnp
lock
add
cmp
inc
add
push
and
lahf
rcrl
xchg
and
add
cs
addr16
pop
jecxz
jno
bound
mov
in
test
arpl
dec
pusha
clc
mov
mov
in
add
add
inc
push
jae
xlat
cmpsb
inc
sub
les
pusha
bnd
dec
mov
inc
insb
push
push
add
cmpsl
add
xchg
dec
mov
xor
push
push
jne
add
pop
mov
into
add
xlat
test
mov
sub
push
negb
cmp
cld
mov
iret
daa
add
adc
inc
scas
shll
and
sub
int3
roll
ds
inc
sub
mov
sub
std
pop
push
cmp
je
xchg
sti
dec
jmp
iret
add
inc
xor
movsb
add
push
xor
scas
jno
test
add
sbb
rorb
sbb
push
fcoml
idivb
add
frstor
add
adc
lahf
sahf
ss
mov
dec
data16
les
and
jne
add
sbb
add
fcmovbe
mov
out
jle
dec
add
add
add
daa
jno
fucom
xchg
add
pop
sti
push
cmpsl
hlt
ret
mov
insl
bound
scas
mov
jb
movsb
mov
rorl
add
jbe
xchg
testb
xor
ret
mov
xchg
inc
jle
into
rcrl
ss
adc
movsl
cmp
lock
jnp
ljmp
leave
ficompl
inc
test
fwait
ret
mov
mov
mov
stos
pop
inc
add
mov
js
nop
pop
add
mov
gs
or
cli
adc
jecxz
aad
addr16
andl
push
and
push
shrl
mov
adc
jmp
das
pusha
inc
sbb
in
sbb
in
leave
loopne
or
xchg
adc
mov
call
adc
fs
shr
jg
add
xor
iret
xor
push
or
xchg
adc
out
pop
cmp
sbb
mov
and
ss
add
ret
outsl
mov
insb
leave
jg
movsb
mov
addl
inc
jnp
xor
xchg
mov
lret
xchg
push
leave
pusha
mov
arpl
in
call
add
fwait
aaa
std
stos
stc
inc
jg
push
hlt
shrb
xchg
inc
int3
adc
aam
sbb
pop
scas
or
add
sahf
sub
mov
jmp
mov
int3
aas
push
sbb
loopne
sbbl
sbb
dec
and
std
xor
pop
test
dec
out
xor
loope
add
fstps
pcmpeqd
lret
loopne
push
xchg
cs
in
lahf
xor
or
popa
mov
loope
shrb
sub
sbb
and
sbb
pusha
xchg
mov
mov
clc
sti
test
leave
push
faddl
arpl
dec
movsb
rcll
iret
int3
sahf
xor
fs
and
sub
dec
in
jl
add
aam
add
push
jbe
sti
mov
subb
mov
xor
or
fxch
loope
lock
test
test
out
jnp
out
mov
addl
adc
in
push
jecxz
xchg
mov
fimuls
sti
push
jle
cltd
pop
adc
aaa
mov
stc
add
push
or
xor
add
xor
mov
xchg
jnp
je
and
enter
outsb
xor
movl
cmp
pop
mov
or
test
add
loop
jo
pop
stc
inc
daa
xlat
lock
stc
push
fisttpl
and
xchg
add
test
mov
loope
jns
arpl
mov
or
pop
add
xchg
push
ljmp
add
jne
sub
in
shl
mov
daa
fldpi
add
jae
add
addr16
xor
push
jne
cmp
jno
inc
dec
add
fisubrl
aam
push
cld
adcl
xor
xchg
xchg
sti
rcrb
addl
sub
jae
data16
dec
daa
loop
loop
add
adc
lea
shll
fcompl
sbb
add
nop
lods
cwtl
add
cmpsl
adc
cmp
les
out
outsb
inc
ds
movsl
sub
lcall
sbb
add
dec
xor
push
add
in
jp
sarl
stc
sub
ret
xor
roll
mov
enter
lret
fcoml
addr16
add
ficompl
jno
and
in
stc
jmp
add
popl
mov
xor
xchg
add
push
cmpsl
lret
push
sbb
add
adc
das
js
push
bound
in
into
sbb
mov
cmp
hlt
mov
out
cmc
ret
add
push
cmpsb
jnp
cmp
cmpsl
dec
adc
popf
loope
push
int3
sbb
and
pop
mov
adc
in
add
imul
inc
add
xchg
lock
or
int
in
cld
pop
mov
pusha
inc
cmp
pusha
shl
and
mov
sarl
sub
sub
sbb
out
xorl
jns
repz
hlt
jle
add
adc
test
cmc
mov
jne
popa
into
popf
add
lret
rorb
daa
mov
jnp
push
lea
iret
add
xor
fisubs
mov
jge
mov
scas
lock
or
push
add
sub
xor
xchg
jmp
in
lret
xor
or
inc
cmpl
cli
add
cmc
cmp
ljmp
xlat
fwait
adc
add
push
dec
sbbl
or
movsl
aad
add
add
mov
xchg
add
and
fwait
push
sub
adc
test
pusha
stc
in
nop
jecxz
aam
int
lea
jg
out
xchg
movl
cwtl
xor
jo
lock
mov
mov
in
push
inc
add
cwtl
add
mov
and
add
dec
insb
and
sbb
jno
cmp
fstpt
call
icebp
jns
dec
inc
add
add
scas
pop
add
push
add
push
push
js
push
sub
push
in
sbb
jb
adcl
lret
andb
mov
addl
adc
into
cmp
mov
lods
and
add
dec
add
sbb
js
loop
sub
enter
pop
add
cmp
clc
add
mov
loop
mov
faddl
push
mov
or
loopew
add
aad
es
fldl
loop
mov
xor
jecxz
ja
adc
mov
sbb
fsubp
test
lcall
cmp
and
nop
add
testl
add
fistpll
add
push
dec
mov
loopne
call
int
sbb
push
add
adc
mov
test
jmp
sahf
sub
les
sbb
flds
and
jns
pop
in
inc
sub
mov
pop
adc
int3
sbb
pop
loopne
mov
add
or
and
or
daa
jmp
insb
sub
add
and
lock
in
sbb
je
xchg
adc
pop
xchg
test
and
rcrl
sbb
bound
nop
add
lahf
test
test
add
orl
add
out
inc
jns
scas
jecxz
cmp
test
dec
ret
cmp
sbb
imul
fidivl
insl
cli
pop
push
xchg
adc
sub
sbb
push
xor
repnz
outsb
sbb
ficomps
mov
clc
arpl
cld
mov
icebp
loop
pop
rolb
mov
cmp
mov
ja
add
pop
out
imul
enter
sti
sbb
inc
push
scas
loop
add
jo
mov
stc
adc
add
arpl
test
repnz
sub
loopne
popa
or
xchg
into
call
sbb
ss
jae
add
mov
sbb
mov
in
add
mov
add
test
imul
cmp
aad
jo
push
fidivl
mov
test
push
sbb
loop
je
dec
and
nop
loopne
add
add
sbb
jmp
jmp
xchg
int3
push
dec
loope
and
xchg
mov
sub
dec
pop
pop
gs
mov
sti
loopne
inc
sbb
lcall
int
iret
andl
and
push
fiaddl
cmc
pop
fisttpll
add
xchg
sbb
insb
add
and
sub
dec
pop
jp
jnp
rolb
sbb
cmp
push
fsubr
pusha
mov
cmp
daa
sbb
aam
jecxz
sbb
dec
and
jb
lds
adc
out
or
lcall
add
les
mov
test
add
andb
mov
add
xchg
sub
push
fdivp
mov
pop
jl
push
loopne
dec
sbb
les
mov
outsb
bound
mov
xchg
cmp
fidivs
jnp
je
nop
xor
jns
pusha
jl
sbb
mov
jo
inc
xchg
roll
dec
and
or
sbb
and
fwait
cmp
enter
jae
add
push
xor
pusha
jbe
xor
inc
push
sbb
fists
inc
cltd
repnz
jmp
cmp
cltd
add
scas
pop
lods
fildl
jge
dec
std
cli
jecxz
rorb
js
out
add
inc
lea
mov
lds
dec
rcll
pop
addl
scas
mov
xchg
ss
add
sbb
xchg
je
into
push
mov
or
jnp
push
adc
adc
add
xchg
popa
add
bound
addl
std
sti
insb
dec
add
out
xchg
pop
cmc
sub
mov
sub
iret
pop
cli
inc
cld
add
add
and
sbb
lods
das
cltd
xchg
mov
pop
add
rcrb
xor
mov
mov
mov
xor
lea
cwtl
testb
push
inc
dec
sub
hlt
cmp
add
loop
ss
fsubrp
lret
das
subl
leave
js
pop
sub
sbb
add
daa
xor
subl
popf
addr16
cmc
lds
shl
and
and
fsubl
pop
sub
xchg
sub
out
mov
sub
fstpl
mov
mov
push
and
loopne
enter
push
mov
aam
cmpsb
add
dec
inc
cs
ret
xor
inc
nop
and
cltd
mov
push
and
aam
call
stos
xchg
add
arpl
test
add
es
add
mov
out
jo
sbb
xor
add
les
loope
dec
inc
push
cmp
jmp
ljmp
push
add
das
mov
add
cmp
add
sub
sub
mov
flds
stos
sbb
mov
pop
add
pop
cmp
outsb
sub
pop
or
mov
sub
mov
dec
dec
add
cmp
push
xor
add
inc
mov
push
popf
icebp
add
xchg
and
jge
inc
lret
pusha
push
dec
stc
ja
sbbb
cmpb
jg
xlat
push
mov
push
fsts
ljmp
add
shl
jl
inc
mov
or
push
pop
shlb
popf
sub
add
mov
adc
pop
shll
les
jo
add
fwait
mov
add
in
pusha
adc
cwtl
push
push
mov
jno
pop
sti
aaa
add
in
sub
xchg
in
sbb
mov
lods
int
cltd
addb
out
cmp
xor
push
add
js
nop
cmp
adc
adc
and
testl
int3
jne
jecxz
push
mov
in
xor
fiaddl
adc
sbb
push
push
pop
out
scas
pusha
add
int3
aaa
les
add
into
scas
iret
mov
fisubs
cmp
lods
mov
inc
add
mov
xlat
out
add
rolb
fbld
xchg
call
lcall
bound
jae
in
insb
xchg
mov
adc
sub
or
lret
sahf
std
test
hlt
mov
xor
ret
add
push
mov
sahf
es
movl
ss
cmc
cltd
mov
push
sub
xchg
rorl
ret
aam
inc
sbb
dec
pop
mov
lods
dec
addr16
cmpsl
push
shll
add
push
and
arpl
in
sbb
in
mov
aad
inc
inc
bound
jo
mov
mov
das
and
stos
out
outsb
xor
in
cmp
dec
add
pusha
icebp
pop
adc
cmc
xchg
sbb
xor
movsl
add
cmp
ss
repnz
jge
not
add
sbb
dec
add
xchg
je
jl
js
add
call
mov
add
sub
add
fiadds
mov
mov
xorb
lret
fimuls
add
push
push
in
std
jo
add
popf
mov
fwait
cli
je
out
int
jb
rcrl
fidivrl
sub
mov
rol
add
jmp
into
add
gs
les
mov
add
and
add
sub
add
inc
add
notl
jg
jle
mov
imul
popa
in
add
inc
xchg
add
or
push
test
shlb
icebp
fiaddl
dec
loop
pop
mov
sarb
mov
mov
lods
mov
xor
adc
push
jae
test
sbb
mov
dec
pop
les
sti
adc
sbb
mov
mov
mov
add
in
fldcw
loop
xor
mov
pusha
add
icebp
aam
daa
and
ljmp
dec
hlt
add
pop
pop
out
popa
add
sahf
cmp
or
cld
or
leave
psubusw
clc
repnz
lock
xchg
pop
mov
cmp
in
jb
add
imul
rolb
add
arpl
and
and
jmp
jno
shll
lds
adc
or
divb
cmp
add
or
xor
stos
rcr
pop
movsb
sbb
pushf
ds
xor
cwtl
add
inc
adc
jmp
repz
dec
dec
std
sbb
fcmovb
mov
in
or
aas
push
push
pop
add
add
lods
adc
and
inc
jnp
cmp
aad
stos
cmp
adc
inc
add
ss
add
pop
mov
and
mov
lods
fidivrs
fcoml
add
ds
sbb
adc
add
test
sarb
or
add
cld
xor
lcall
fisttps
add
push
lods
or
in
xchg
and
daa
pop
enter
cmp
mov
lret
in
add
test
inc
xchg
cmp
cmc
or
into
add
fimuls
add
leave
push
les
jno
xchg
adc
loopne
mov
pop
inc
add
out
cmpsb
sbb
ret
jl
adc
std
mov
add
push
mov
dec
add
jo
fst
gs
inc
push
iret
lret
add
jbe
push
sarl
sbb
sub
sti
pop
dec
dec
sbb
jns
cld
sbb
cmp
add
jmp
mov
mov
xor
push
pushf
aad
mov
pop
cmc
or
push
pusha
shll
dec
cmp
push
cmp
mov
rolb
adc
sub
add
cltd
cli
cmpsb
cld
pop
sub
into
jbe
lar
xor
jnp
pop
loopne
mov
add
lds
dec
and
add
mov
inc
push
leave
cmpsl
inc
adc
movsb
or
aas
repz
xchg
mov
xchg
cmp
add
pop
movsl
pop
inc
pop
scas
add
push
shlb
and
jnp
js
fnstcw
push
and
or
sbb
stc
addl
xor
call
dec
mov
sbb
or
cmp
xchg
lahf
lods
mov
fcomps
ljmp
cmp
adc
sub
insl
add
and
push
and
fsts
xchg
fstp
aam
subb
sbb
sbb
add
pop
mov
add
jne
xchg
inc
enter
mov
sub
or
jge
xchg
and
out
clc
ljmp
sub
inc
pop
add
jno
cmpsb
xor
loopne
inc
scas
and
mov
xchg
pop
inc
testb
push
add
mov
sub
sub
lahf
das
pop
adc
xchg
or
jno
aas
cmp
fists
and
in
add
jmp
add
daa
mov
idivl
mov
sbb
xor
das
je
mov
and
sahf
xor
or
scas
mov
jbe
cmp
sub
add
mov
mov
jg
or
test
push
sbb
mov
pop
add
xor
jmp
and
add
ret
and
daa
loopne
pop
sar
adc
addr16
sbb
mov
nop
sbb
stos
sbb
out
std
int3
aam
daa
lds
mov
jo
push
and
pop
rcrb
add
mov
mov
adc
js
dec
std
inc
mov
dec
gs
addb
xchg
rorl
adc
or
les
lret
inc
mov
dec
sub
faddl
and
cltd
xchg
shl
adc
xor
add
fldenv
add
inc
xchg
cld
or
pop
pusha
add
test
and
sbb
inc
xchg
hlt
fsub
pop
inc
in
iret
push
pop
pusha
push
push
pop
pop
mov
push
lret
out
mov
ljmp
jmp
xor
lret
pushf
sar
jnp
xor
daa
out
push
mov
or
jo
andl
inc
sbb
add
fsts
and
add
dec
stc
push
jle
add
lcall
inc
cmpsb
lret
aas
mov
test
sub
neg
adc
testb
lods
fs
sbb
mov
fdivs
pop
mov
add
push
mov
adcl
jge
out
mov
sub
cmp
fildl
inc
xchg
aam
test
fcmovu
loopne
lret
daa
pop
dec
add
jne
imul
pop
aam
adc
mov
test
pop
cmp
loop
xchg
cmp
sar
inc
mov
and
and
in
push
inc
lcall
out
sbb
jle
push
popa
inc
aaa
pop
adc
adc
js
add
mov
enter
mov
inc
shll
insb
into
jle
das
xorb
sahf
repnz
jle
in
fldenv
adc
ficomps
mov
push
fists
leave
cltd
add
mov
mov
adc
push
icebp
lret
inc
xor
xorb
jl
xor
cmpsb
mov
das
inc
fiaddl
add
out
loop
or
fisttpll
add
rolb
and
add
or
jg
loopne
cwtl
add
rcrl
mov
sub
mov
mov
mul
xchg
jo
xlat
mov
xor
adc
enter
leave
lods
in
add
jbe
aam
mov
inc
inc
int
movsb
lahf
add
lock
imul
fisubl
xchg
add
xchg
insl
ljmp
std
add
js
cmp
or
movsl
lds
dec
xchg
sub
push
je
adc
out
cltd
add
inc
dec
jmp
jae
push
inc
sarl
xchg
add
js
out
ficomps
add
mov
lock
aam
roll
movsb
adc
add
inc
or
add
mov
xchg
jmp
push
insl
sbb
cmp
push
or
ljmp
aam
dec
out
stos
push
add
and
sub
dec
ret
pop
fcom
lods
xstore-rng
cmpsl
add
push
dec
sbb
jbe
fisubl
mov
pextrw
and
lret
cmovg
adc
add
rolb
lds
jle
push
jns
xor
out
rcr
iret
sub
and
add
jle
xchg
pop
mov
add
mov
add
xor
xchg
gs
jno
push
dec
or
sub
mov
push
ss
cltd
adc
mov
jb
add
push
mov
enter
ficomps
add
pop
cmp
ds
push
mov
or
ja
add
shld
das
movb
xlat
push
cmp
dec
addr16
add
nop
fiaddl
pop
and
or
cmp
or
sbb
push
ljmp
add
stos
cmpsb
ja
pop
xchg
cli
add
cs
fildll
dec
loopne
xchg
sbb
push
mov
pushf
push
dec
pop
pop
add
sbb
pop
lods
test
push
push
pop
bound
or
mov
test
shlb
or
dec
add
adc
in
add
mov
loope
popf
push
int3
add
dec
frstor
jne
inc
pop
into
mov
add
pop
push
add
and
out
mov
and
jge
sbb
add
cwtl
sar
cmp
pop
mov
sbb
ret
in
adc
cltd
lahf
roll
mov
or
pop
fs
add
dec
sarb
add
adc
in
add
adc
adc
pusha
mov
xchg
dec
into
adc
fcmovne
aam
or
mov
mov
mov
jne
adc
cltd
push
add
aas
je
jns
insl
data16
stc
fsts
jg
xchg
xchg
ljmp
add
inc
jmp
xchg
cs
add
ss
nop
mov
aaa
fdivl
int
add
adc
add
mov
cmp
add
inc
sbb
push
pusha
fdivrl
dec
mov
dec
jmp
add
mov
bound
add
sahf
jecxz
stos
jne
xchg
and
push
jge
add
scas
push
fwait
sub
outsl
add
insb
stos
out
push
aam
fwait
add
std
adc
dec
loop
add
mov
inc
mov
xor
addr16
xor
cli
roll
data16
jp
dec
or
mov
call
add
loope
lds
bound
fwait
add
xchg
push
fs
inc
inc
add
gs
push
add
mov
movsl
xchg
out
shlb
jecxz
jmp
jg
and
scas
test
xor
mov
cmpsl
and
xor
jo
add
mov
movsl
cmp
mov
je
out
mov
scas
pop
jns
loopne
sbb
add
adc
jae
mov
fsubrl
lahf
cmp
out
xlat
pushf
lods
adc
test
add
mov
movl
stc
sahf
cmp
pop
xchg
add
lock
mov
cmovno
mov
ds
push
adc
outsl
add
xchg
xchg
and
mov
ljmp
addb
add
push
divl
push
or
and
fiaddl
xor
push
push
filds
pop
mov
rolb
test
lds
cmovle
jne
pusha
inc
jo
jnp
dec
cmp
mov
jl
pop
add
call
movsl
verw
sbb
mov
ret
out
or
popf
pop
xchg
outsb
lret
mov
fists
repnz
lods
add
push
enter
adcl
aam
les
popa
stc
loopne
ljmp
movsb
jns
add
mov
test
mov
add
pmaddwd
dec
repz
xor
jl
xor
pop
lods
xchg
faddl
dec
in
lret
cmp
sub
push
jmp
ss
orl
rcll
sub
test
mov
jo
mov
fnstenv
mov
add
and
add
pop
push
mov
fstl
jae
pop
test
test
mov
inc
insb
mov
mov
loopne,pt
sahf
pop
je
adc
inc
cmp
sarl
push
mov
test
jecxz
push
pop
iret
add
lret
inc
xor
and
cmp
cmp
imul
out
xchg
push
daa
dec
fiaddl
mov
popf
mov
dec
sbb
adc
stos
out
std
loopne
jnp
arpl
gs
inc
rcll
loope
sbb
sbb
fdivrl
ficoms
jl
out
adc
bswap
loope
mov
out
and
xlat
popf
adc
and
aaa
cmp
mov
or
or
add
js
notl
mov
and
xor
sub
mov
mov
loopne
add
jnp,pt
sbb
adcb
jmp
adc
fxch
add
push
mov
add
xchg
xor
push
cld
pop
or
pop
and
int3
cli
loopne
and
mov
outsb
lcall
pop
test
add
es
cmp
add
pop
fiaddl
pop
add
iret
mov
out
into
cmp
std
lds
insb
xor
fildl
in
ret
test
outsb
stos
es
lock
arpl
adc
ficoms
cld
add
inc
and
mov
dec
js
and
xlat
incl
insb
pop
clc
cwtl
ror
xor
add
inc
xchg
dec
scas
jmp
mov
push
scas
add
add
mov
xchg
mov
push
add
arpl
mov
insb
fildll
mov
test
sbbb
add
inc
test
out
mov
xor
inc
mov
adc
dec
pop
mov
dec
add
sbb
jmp
inc
mov
pop
mov
std
inc
jnp
mov
loope
mov
pop
and
xchg
sbb
into
rolb
pusha
mov
popa
cwtl
add
pushf
fiaddl
insl
and
sub
mov
je
dec
cmp
cld
sbb
lea
jo
dec
push
mov
or
fiaddl
cmp
neg
ja
andl
adc
mov
lods
loope
cmpsb
or
push
ret
dec
push
cmpsl
push
test
shlb
and
cmp
inc
rolb
or
add
lock
add
aaa
aad
nop
fcmovbe
iret
add
pop
es
insb
data16
js
sub
sbb
cmp
in
fcoms
lcall
jge,pt
and
push
shrb
cmc
addb
test
and
jg
mov
xchg
sub
pop
mov
or
enter
xchg
sbb
data16
mov
sub
scas
loope
ljmp
inc
adc
nop
or
out
pusha
and
sbb
pop
add
popf
mov
mov
insl
and
fs
push
xchg
inc
loopne
stos
ret
jne
push
sbb
mov
sub
lret
mov
inc
jnp
loop
ficoms
sbb
xor
int
or
loopne
in
das
or
add
adc
repz
mov
bound
push
xlat
mov
les
push
add
sbb
stc
mov
ja
and
mov
sti
add
js
mov
sub
add
ja
push
add
ret
stc
push
pop
pop
sahf
add
sarl
mov
mull
subl
lock
ficoml
add
cmp
xor
pushf
xor
sbb
lock
in
lods
cmpsl
shrd
jg
dec
repz
aam
add
xchg
call
sti
push
or
xor
fcmovb
in
aad
daa
lret
push
inc
insl
adc
fs
je
sub
rorb
push
fcomps
add
frstors
mov
inc
mov
push
scas
repz
stos
push
cmp
lds
xor
dec
add
and
add
mov
out
sbb
push
mov
cmp
cltd
xlat
push
add
cwtl
mov
pusha
xor
xor
and
loop
adc
xchg
ret
jp
les
movsl
jmp
pop
push
add
fbld
inc
loop
icebp
add
adc
inc
xor
lea
lahf
or
fisubl
fs
aaa
inc
pusha
xchg
and
mov
cltd
mov
inc
test
int3
lock
shll
mov
inc
lods
pop
sub
pop
rolb
ja
bound
js
add
sub
jno
into
ss
and
mov
add
jge
dec
adc
aas
or
loope
dec
clc
jno
aam
jecxz
mov
and
jmp
or
vxorpd
repnz
dec
push
adc
pop
testl
shll
jg
cs
imul
or
mov
je
out
popf
lret
fldl
add
jae
ja
scas
fldcw
push
mov
sub
stos
ffreep
or
into
lret
sbbb
jl
data16
push
add
insb
mov
add
pushf
dec
out
loope
popa
push
mov
bt
xchg
cmc
xchg
cli
cmpsb
pop
adc
out
and
rol
andb
call
pop
ljmp
fldt
movsl
pop
add
add
cmp
aas
sbb
xchg
mov
mov
inc
cli
pusha
or
lds
out
fsubs
push
jl
je
cmp
std
or
pop
add
sti
repnz
and
call
add
push
mov
imul
lahf
mov
lret
das
mov
hlt
sbb
fisttps
imul
push
adc
or
xorl
nop
scas
add
int
lret
mov
adc
and
add
add
xor
xchg
sub
pmaxsw
pop
xor
fiadds
mov
fldcw
filds
xchg
fsubrs
shl
jbe
in
iret
sub
shl
pop
inc
outsl
arpl
cmpsb
sbb
loopne
adc
sahf
xchg
xor
xchg
sbbl
add
cmpsl
call
push
xor
or
mov
or
popa
mov
cmp
lret
adc
add
scas
or
jle
cld
add
ret
mov
cmp
cld
cmp
jb
lahf
test
add
jmp
sets
jg
lock
cli
and
stos
add
jmp
xchg
add
out
xor
add
ret
mov
mov
jl
adc
shr
aam
test
push
jle
adc
jo
xor
int3
dec
cld
xlat
decl
inc
mov
popf
ljmp
dec
sbb
pushf
pushf
testl
fldt
and
pusha
in
aas
push
xchg
fiadds
inc
or
cmp
mov
fldl
push
add
pop
ljmp
in
pop
in
fistpl
stc
clc
add
xor
adc
roll
adc
std
add
stc
in
out
cmp
rcrb
dec
adc
add
xchg
or
cmp
dec
add
icebp
push
mov
pop
adc
scas
mov
les
cmp
mov
adc
scas
xchg
push
xor
cmc
addr16
adc
inc
jge
loopne
mov
lahf
pop
popa
or
call
or
loope
jge
xor
in
cmpsl
sbb
cli
cld
daa
jg
loop
imul
mov
mov
nop
cltd
mov
push
adc
daa
dec
loope
adc
ret
cmp
push
xor
sbb
sbb
add
xchg
xchg
imul
jo
addb
pop
repnz
arpl
add
pop
movsl
and
mov
cmp
cmp
js
sbb
arpl
mov
push
fsts
test
lock
xchg
and
fs
arpl
outsb
imul
add
xchg
add
cmp
push
rclb
sub
dec
sub
mov
iret
js
mov
jle
add
leave
and
add
push
pop
add
mov
mov
mov
pop
cld
loope
add
or
js
mov
adc
mov
popf
or
sbb
sbbb
xchg
repnz
add
lods
subl
les
add
jno
xchg
pusha
mov
hlt
jne
mov
mov
nop
xchg
mov
in
or
jle
sub
xchg
adc
call
jecxz
xchg
ficomps
in
flds
rcll
pop
pop
popa
cmp
jns
test
bound
add
adc
and
mov
pop
and
outsb
add
jg
flds
cli
and
cmc
xchg
test
ret
jmp
imul
xchg
call
aam
pop
push
std
ss
sbb
mov
xchg
lds
pop
roll
ficoms
jne
mov
cltd
inc
call
add
and
adc
jnp
add
xchg
add
stc
mov
scas
add
shll
dec
ds
iret
lods
xchg
add
cmp
repz
aad
add
inc
lea
pop
rcrb
ljmp
loopne
in
filds
jb
cmpsl
push
add
push
xor
mov
mov
jmp
push
mov
leave
scas
jae
mov
aaa
xchg
ss
add
cwtl
cmc
sub
or
push
ret
test
mov
pop
sbb
mov
cmpsl
movb
adc
jge
lret
call
or
push
sbb
add
clc
lds
cmp
pop
and
pop
sub
das
mov
xorl
outsb
popf
bound
adc
ficompl
loop
xchg
rcrl
arpl
mov
int3
test
push
push
sub
lods
flds
sub
dec
add
in
pushf
nop
inc
mov
add
dec
int
cli
mul
sub
outsb
clc
jecxz
inc
push
and
pop
mov
loopne
and
inc
cli
cmp
lcall
imull
sbb
xchg
leave
ret
jno
or
mov
popf
fisubrs
push
nop
cmp
and
in
jge
mov
add
xchg
jb
jl
test
add
lcall
mov
mov
outsl
stc
in
mov
sbb
js
adc
sub
cli
cmp
mov
cwtl
sbb
add
cmp
pop
fcoms
xor
mov
sbb
cld
jae
out
hlt
sbb
mov
add
outsl
sub
aad
mov
pop
pusha
adc
enter
scas
add
add
jecxz
roll
pop
fidivs
sub
mov
mov
addr16
cmp
imul
stc
mov
out
out
lods
push
sbb
mov
jecxz
pushf
scas
mov
and
push
sbb
pusha
add
dec
mov
aaa
sbb
add
into
add
movsb
mov
jecxz
xchg
das
lock
xchg
pop
push
aam
sarb
cltd
nop
rcrb
dec
movsb
cmc
loopne
xor
jp
je
or
jno
mov
and
aad
add
jae
iret
insl
ds
mov
mov
and
jge
or
out
jo
cmp
fs
adc
mov
fstpl
ljmp
nop
add
into
int
xor
fisubs
sub
testb
sbb
loop
out
add
cmp
and
jmp
sbb
lcall
push
add
push
xor
inc
in
ret
andl
add
repnz
call
jl
daa
cmp
or
into
ss
xor
and
and
xlat
cmp
add
add
arpl
fstps
dec
lds
clc
rol
pop
sti
or
xor
dec
jp
push
or
std
js
add
jle
jp
pop
mov
dec
adc
ret
lock
xchg
fs
ss
jnp
insb
and
pushf
mov
pushf
dec
push
add
xor
mov
add
testl
and
pusha
popf
jp
push
hlt
adc
stc
xchg
sbbl
rcl
mov
das
add
out
popf
or
icebp
rol
pop
jl
add
adc
push
nop
xchg
cmpsb
jne
stos
pop
mov
adc
push
fnstsw
and
ljmp
in
fwait
in
outsl
xor
adc
loop
hlt
and
addr16
push
mov
das
add
dec
add
pop
jmp
out
add
inc
pop
sbb
std
mov
xchg
inc
push
pop
adc
cmp
inc
arpl
enter
ret
fcoml
sbb
add
shrb
mov
pop
add
scas
xchg
pop
mov
jo
dec
lds
xor
jge
add
fldl
pop
test
popf
add
shl
bound
sbb
ret
pop
add
mov
dec
and
clc
cmpb
shll
inc
pop
divb
pop
shl
mov
repz
insl
and
or
dec
sbb
mov
add
out
mov
pop
in
sbb
mov
cli
ja
rcrl
jmp
dec
dec
inc
cmp
fldt
xor
fildll
inc
fldl
mov
adcb
dec
mov
ret
xchg
push
sarb
and
popa
mov
mov
add
jo
cwtl
and
dec
pop
lcall
inc
inc
push
fistpl
push
xchg
sub
and
fucom
add
jecxz
fiadds
jg
aaa
cmp
movsb
pop
mov
rolb
mov
push
cmpsb
and
outsl
into
xchg
push
sbb
fwait
xor
or
or
and
movsl
dec
add
and
adc
lods
push
aad
ss
scas
popa
sbb
call
clc
add
xchg
pop
int3
loopne
ret
jg
test
mov
mov
icebp
ds
inc
jecxz
lret
lods
mov
jecxz
jo
xchg
mov
mov
clc
cmp
test
add
fisttpll
adc
popa
push
loope
push
jp
cmp
hlt
fnstenv
es
orb
mov
insl
in
lods
adc
push
inc
in
adc
fisttpl
mov
xor
cmc
jl
or
jb
cmp
cmp
xchg
push
loope
xlat
jns
sbb
mov
out
mulb
push
cli
add
daa
dec
xlat
jnp
das
add
add
repz
add
push
mov
add
mov
faddl
and
fwait
add
imul
stc
xor
xchg
add
outsl
imul
xchg
sbb
repnz
movsb
clc
out
mov
mov
dec
push
repz
mov
mov
xchg
ja
jmp
add
xor
ret
jbe
pop
loopne
jb
and
or
xchg
mov
cmp
push
in
ja
mov
sbb
shll
jmp
int
add
pop
inc
js
mov
or
sub
stos
push
lds
sbb
popf
stc
arpl
js
ret
rorb
rol
cwtl
xchg
pushf
loop
dec
sbb
lods
xorb
sbb
cmp
les
jmp
es
icebp
sbb
aam
cmp
adc
fisubl
fists
sbb
sti
cmp
push
loopne
lods
loopne
and
nop
dec
sbb
push
shll
xchg
add
push
fmull
pusha
loope
pop
xorl
add
inc
mov
xchg
shll
mov
pop
dec
jge
lds
cs
cmp
arpl
mov
add
xlat
push
call
push
fists
add
aaa
outsb
in
adc
fnstcw
lahf
loope
enter
xchg
add
cmp
shrb
add
jae
pop
mov
out
sub
dec
sbb
xchg
das
loopne
jnp
pop
cmp
loope
fwait
stos
or
insl
shlb
test
mov
popa
pop
push
xor
int3
pop
inc
data16
mov
xor
xchg
push
add
or
cmp
pop
add
add
xchg
xor
scas
roll
outsb
dec
or
sbb
fs
pop
aaa
repnz
mov
es
adc
mov
pusha
iret
int
lahf
and
jno
sbb
add
addr16
mov
lds
sbb
movsb
mov
fs
in
dec
dec
push
add
fcomip
lea
push
add
add
sbb
mov
mov
adc
out
lods
add
push
jb
sbb
and
sbb
mov
repz
pop
sbb
add
xlat
pusha
or
xor
push
add
rclb
xchg
mov
push
sub
in
sbb
adc
pop
pop
and
add
idiv
cmpl
aaa
out
jmp
xchg
shl
and
das
jg
fsubrs
iret
movsb
add
dec
adc
fndisi(8087
test
loopne
repz
clc
cmp
pushf
add
lods
cmpsb
sub
repnz
cmc
or
test
rcll
mov
testl
jne
fisttps
pop
dec
adcl
push
inc
add
fldl
cli
pop
or
in
int
stos
pop
lcall
add
jmp
js
je
jg
fwait
int
add
pop
cld
outsb
jl
add
cmp
insb
or
loopne
pop
push
push
inc
mov
pusha
add
add
cmpl
xchg
cmc
adc
inc
mov
mov
stc
pusha
add
mov
mov
outsl
inc
add
sbb
cmp
add
cmp
sahf
daa
mov
cld
jge
inc
enter
cmp
inc
jo
in
push
in
loopne
xchg
add
or
jne
adc
rclb
mov
mov
loopne
and
and
add
lahf
fildl
and
rcl
add
inc
mov
gs
sti
loope
or
inc
jo
scas
ss
ljmp
xor
or
pop
pusha
test
push
add
mov
lcallw
loope
inc
mov
add
subb
push
outsb
add
jp
sbb
add
mov
push
gs
pop
adc
xor
sub
dec
mov
lret
add
lods
xchg
mov
sub
jno
mov
enter
mov
mov
inc
cmp
add
xchg
cmp
add
mov
add
rolb
add
jnp
outsb
repz
arpl
in
outsl
lds
addb
or
stos
pusha
push
mov
loopne
push
adc
hlt
or
inc
testb
imul
int
in
sbb
add
jge
mov
mov
cmp
xchg
push
or
or
add
mov
adc
loopne
adc
sahf
inc
mov
lods
push
push
mov
ret
cmp
or
lahf
dec
or
adc
jnp,pt
loopne
push
xor
stos
mov
ret
int
sub
aas
sbb
pop
data16
dec
sbb
movsb
rcll
or
xchg
into
testb
data16
jae
cmp
filds
dec
leave
je
repz
fs
jge
add
jecxz
out
xchg
add
fs
inc
and
add
or
push
sbb
imul
adc
inc
pop
fmuls
stc
mov
cmp
mov
loop
and
inc
cmp
mov
in
int
push
add
xlat
rcr
xor
pop
jno
fcoms
or
adc
das
add
stos
push
ja
sub
add
mov
add
pop
scas
xor
out
aad
pop
adc
pop
loop
ret
or
adc
fs
add
mov
jge
fisubrl
mov
int3
push
inc
fidivrs
xchg
mov
icebp
add
adc
and
test
jb
sbb
stos
pop
jecxz
sbb
add
dec
push
pop
imul
lea
pusha
mov
add
mov
adc
pop
pop
pop
mov
mov
pop
popa
stc
jmp
adc
jg
les
daa
cld
rcrb
add
add
or
add
jne
push
xor
iret
xchg
rcrl
dec
dec
ret
fnstenv
sbb
mulb
jo
mov
lret
adc
sub
add
inc
cmp
add
sbb
jg
push
add
dec
nop
push
cmpsl
out
mov
int3
sbb
icebp
fdivs
add
pop
xchg
sahf
scas
subl
rorb
jmp
add
ljmp
dec
mov
ljmp
mov
jge
and
add
int3
xor
add
sbb
and
popf
mov
ret
fimuls
adc
inc
loop
add
dec
mov
iret
movsb
into
sbb
jbe
and
cmp
pop
shlb
sarb
imul
jbe
mov
pusha
mov
dec
dec
mov
push
or
xor
xor
push
add
sbb
adc
rolb
lret
orl
dec
jp
add
push
aas
lahf
roll
jg
stos
xor
mul
add
ja
push
inc
xorb
movsb
mov
into
pop
dec
mov
sbb
out
mov
roll
push
mov
dec
lea
or
in
jp
mov
add
pop
xchg
subl
ret
in
scas
cmp
push
push
push
adc
sbb
ret
test
imul
add
pop
jb
mov
in
add
push
in
and
jbe
cld
dec
lods
sbb
add
mov
popf
add
ret
aaa
push
ret
xor
jg
ljmp
adc
or
dec
xchg
insb
cmc
pop
sbb
and
add
fcomp
sbb
enter
cmp
push
fucomi
hlt
fadd
ror
ret
pop
call
push
jecxz
add
mov
xchg
pop
loopne
sub
and
pusha
lods
cmpsl
add
rorb
pop
sub
xchg
mov
xorl
movb
push
leave
aaa
add
xor
insl
lea
rcl
inc
jmp
pop
sbb
dec
and
adc
lret
mov
jmp
shll
pop
mov
xchg
mov
sub
or
shr
jo
add
mov
andb
ficompl
les
and
add
pop
sub
add
es
loopne
lret
das
sbb
loop
add
hlt
add
lcall
inc
das
movsl
xor
repnz
int3
gs
loopne
inc
jns
or
jl
dec
xlat
call
cmp
add
add
inc
jae
add
and
mov
ret
adc
mov
mov
push
add
cmp
fists
push
nop
aas
dec
pop
addb
out
stc
sbb
xchg
je
xchg
xlat
xchg
cmp
popa
shlb
std
adc
mulb
sbb
clc
jmp
je
lret
sbb
pushf
mov
push
or
call
loopne
or
ljmp
sbb
mov
pop
mov
int
xchg
aaa
pop
mov
lods
insb
inc
pcmpeqd
imulb
popf
xchg
add
cmpsb
dec
push
add
add
das
cmpb
adc
sub
push
fstps
insb
faddl
bound
cmpsb
push
test
ret
lds
jo
adc
and
dec
jo
rclb
mov
mov
and
add
lods
pusha
mov
cltd
mov
jge
mov
mov
cmpsb
push
icebp
and
pop
sub
stos
sar
push
mov
xchg
pop
loop
jmp
and
and
bound
pop
add
cltd
lock
rcll
cs
cmp
popf
and
dec
dec
pop
add
pushf
dec
add
dec
inc
cmp
cmp
xchg
inc
pop
jb
mov
movsl
pusha
ljmp
aas
pop
jnp
jmp
push
leave
imul
outsl
sbb
dec
dec
inc
std
xor
pop
in
imul
and
xchg
cmpb
frstor
dec
enter
add
and
fimull
add
addl
cmp
ljmp
loop
loopne
test
push
cmpsb
aaa
adc
add
lcall
and
sbb
add
or
pop
in
pop
sub
sub
add
mov
add
iret
mov
sbb
addl
sbb
xchg
neg
shll
push
cmc
fisubrs
add
ret
jle
and
mov
lock
mov
push
xlat
sbb
lcall
and
sbb
popl
lret
xchg
inc
sbb
rcll
mov
pop
push
add
lcall
rclb
cs
rcrl
loope
add
aas
jnp
mov
or
inc
ljmp
rol
xor
jl
cmc
fwait
pop
push
cli
or
push
xchg
lds
mov
pop
cmp
lods
outsl
cmpsb
pusha
inc
xchg
fwait
sbb
test
sub
scas
outsb
into
mov
test
cmp
jl
stos
add
cmpsl
out
pop
xchg
shrl
dec
icebp
das
gs
lret
lock
enter
jb
fisubrl
dec
shll
add
jl
adc
pop
adc
fadds
add
mov
lock
ds
int3
adc
mov
sub
sub
movl
je
fbld
jno
movsl
cmpsb
ss
aaa
ja
rolb
xchg
sbb
jb
xor
inc
add
jle
xchg
sbb
xchg
cwtl
adc
xchg
ret
add
pop
adc
jge
add
xor
orl
jnp
outsb
enter
jge
or
pop
int3
faddl
pusha
shlb
pop
ljmp
insb
std
jns
sbb
iret
inc
subb
xlat
pand
xor
popa
in
mov
or
mov
out
nop
inc
add
dec
mov
push
fdivl
ret
adc
roll
test
inc
pop
or
sbb
inc
jno
add
fcmove
add
mov
inc
add
cwtl
sbb
sbb
iret
xor
movsb
fld
popf
pop
pusha
lret
es
mov
filds
insb
imul
add
dec
inc
mov
loope
std
insb
iret
mov
sbb
and
mov
adc
popf
cmp
mov
in
adc
nop
sbb
pusha
enter
xchg
sahf
lock
stc
add
push
pop
xor
inc
xor
sbb
mov
inc
pop
add
jg
add
jp
adc
and
sub
lahf
clc
xor
sub
lock
test
mov
popa
pop
lods
sub
pop
movsb
subl
outsb
bound
add
scas
je
pop
push
pushf
shrb
fnsave
outsl
add
cmp
sub
and
cmp
ror
outsl
shrl
lods
imul
mov
xchg
loopne
mov
sbb
add
aad
mov
out
xor
dec
ja
mov
pop
push
ret
outsl
adc
add
rcr
sub
jo
cld
cltd
sbb
add
cmp
ret
mov
in
fldcw
imul
mov
push
ret
push
cmpsb
xor
cmp
nop
daa
add
jle
cmc
and
sub
imul
enter
add
scas
push
add
sbb
scas
or
sbb
test
ds
add
push
jecxz
ja
int
adc
adc
pop
pushf
lods
loopne
fdivrs
inc
test
movsb
or
add
std
pop
mov
pusha
mov
das
adc
out
fildl
xchg
or
xor
xor
or
xlat
loopne
adc
mov
cmp
add
cwtl
jg
and
and
xor
sub
lock
add
jmp
mov
pusha
jge
jp
mov
loopne
aas
shr
sbb
sbb
jmp
lock
loopne
push
data16
mov
pop
sub
mov
add
sub
and
cmp
les
test
js
sar
loop
hlt
push
nop
loop
push
add
jo
cmc
add
int
xor
mov
aaa
lcall
add
loop
xchg
push
add
sbb
scas
dec
lods
mov
dec
push
aas
pop
movsl
add
lods
adc
sahf
scas
imul
adc
in
xchg
and
scas
mov
xlat
mov
push
lret
or
mov
jnp
test
inc
xchg
fs
jge
adc
inc
cli
ja
call
lods
mov
loop
sbb
push
insl
add
divb
xchg
sbbl
aam
int
in
in
sub
xchg
shll
add
mov
jle
add
sbb
mov
stos
outsl
loope
and
lret
push
popa
xor
clc
adcl
pop
push
sbb
loop
xchg
rorl
add
cmp
cltd
movsb
in
push
nop
pushf
or
add
mov
mov
jae
test
add
enter
sar
lea
xchg
jp
add
dec
xchg
xchg
mov
fidivs
add
andl
lahf
movsl
cltd
mov
ds
or
pop
mov
push
rcrl
jno
js
subb
mov
out
adc
xchg
hlt
xchg
ficompl
and
into
mov
or
ja
call
add
inc
dec
push
xchg
mov
and
int
pop
subb
push
push
std
loopne
repnz
add
lcall
aaa
add
fadd
mov
dec
xchg
into
loope,pn
pop
idivl
nop
ljmp
inc
xchg
sbb
adc
inc
add
xlat
adc
call
sbb
fdivrl
add
pop
into
add
cld
mov
push
add
lea
jmp
inc
mov
mov
notl
add
test
mov
sarl
std
fstpl
sti
push
fmuls
add
mov
aad
xchg
inc
pusha
pop
and
push
sbb
jbe
dec
loopne
push
dec
adc
jns
add
mov
stos
fmuls
fnsave
pop
cmp
scas
mov
fldt
push
inc
add
repz
or
aaa
and
jo
add
xchg
rorl
fcomps
mov
out
push
jecxz
pop
int3
adc
adc
sub
mov
aam
ljmp
orb
sbb
xchg
rorl
xchg
push
insb
icebp
sub
into
clc
int3
in
jnp
std
add
sbb
cli
add
mov
mov
add
or
arpl
sub
mov
add
add
and
mov
cmp
add
movsl
inc
push
add
dec
pop
mov
repnz
mov
sub
add
cmpsl
loopne
out
shlb
inc
xor
pop
inc
ss
adc
mov
iret
icebp
shl
fisubl
les
sbb
push
add
cltd
mov
pop
add
xchg
sub
ret
adc
iret
adc
repnz
push
popf
add
addr16
loope
loopne
std
ss
ficoms
pop
pop
fldl
or
iret
add
and
push
movsl
or
mov
shrb
lcall
add
xchg
push
mov
cmc
fiadds
test
sahf
in
add
das
in
inc
adc
dec
movsb
subl
or
xor
out
adc
xor
xor
or
inc
add
fisttpll
inc
pusha
mov
jl
adc
pop
mov
push
mov
adc
call
pop
ficompl
es
and
add
into
popa
ss
xchg
cmp
movsb
cld
or
mov
dec
mov
icebp
clc
add
push
push
and
and
xchg
xor
addl
and
nop
or
and
mov
dec
cltd
pop
ret
xchg
adcl
lds
pop
clc
inc
add
fwait
pushl
add
mov
pop
push
faddl
sbbl
xor
or
add
jns
mov
dec
mov
roll
xor
mov
xor
nop
lods
sub
jae
outsl
add
mov
repz
adc
mov
gs
mov
popf
push
ret
add
mov
fnstcw
and
in
insb
out
cmp
push
test
test
shrb
xchg
add
stos
mov
mov
xor
dec
add
cwtl
sbb
les
jb
jl
js
insb
popf
xor
mov
idiv
cmp
inc
inc
aam
jge
pop
popa
cli
outsb
add
dec
pop
flds
jle
int
sub
jmp
add
test
fs
iret
dec
xchg
dec
pop
cwtl
das
mov
cltd
mov
push
addl
mov
cli
sub
pop
add
iret
push
add
in
push
inc
xor
fidivl
or
dec
outsl
dec
loopne
cmpsb
rcl
push
mov
lock
shrl
add
push
stc
jg
adc
cs
enter
lods
cmp
sbb
rolb
cmp
ja
jmp
call
mov
mov
or
add
cmc
sub
subl
add
cmp
pop
adc
dec
enter
xchg
into
adc
out
sub
dec
imul
pushl
movsl
sub
adc
and
adc
push
lds
add
mov
lar
xor
in
jp
pushf
lods
add
inc
js
xchg
test
add
mov
mov
idiv
add
lods
jb
jge
sub
sbb
add
scas
mov
or
mov
jns
dec
xchg
fdivr
mov
mov
sub
call
cmc
inc
jp
in
or
or
push
in
mov
jle
pop
in
lods
or
ja
dec
enter
std
pop
ffree
xor
mov
addb
pop
repz
push
dec
lds
popa
push
loopne
orb
lods
in
push
inc
mov
add
stc
inc
sub
mov
lods
push
mov
pop
jne
lahf
fabs
cs
mov
cltd
jns
inc
sbbl
shrb
and
movsb
sahf
hlt
push
push
mov
mov
or
insl
cmpsl
inc
pop
pop
add
xchg
repz
dec
add
inc
lods
xor
xchg
add
inc
inc
jo
dec
ficomps
or
popf
adc
add
pop
add
les
jno
fisttps
mov
orb
push
cmp
push
loopne
psubusw
xchg
lcall
xlat
add
imulb
aam
add
mov
mov
imul
jb
pop
pop
or
sbb
adc
out
iret
out
fbld
in
add
pop
enter
mov
jnp
xor
push
and
mov
hlt
rcll
sub
xor
or
inc
lcall
push
mov
cli
inc
popf
leave
ss
mov
xor
pop
add
push
nop
push
xchg
push
xor
mov
add
lods
mov
jecxz
rorl
out
popa
int3
cltd
sahf
outsb
mov
aad
xor
data16
repz
insb
add
faddl
ja
dec
loopne
cli
pushf
pop
bound
popa
into
mov
jo
dec
xor
out
jg
mov
adc
sbb
jo
inc
stc
insl
add
scas
jmp
mov
movsl
ret
mov
add
xchg
pop
inc
outsb
add
clc
rcrl
inc
fldl
sub
test
add
fstpt
add
jnp
fidivl
cmp
sbbb
and
jo
sbb
imul
xor
aas
mov
xor
mov
sub
add
jmp
mov
adc
dec
outsl
dec
adc
hlt
lods
popf
lcall
mov
out
mov
rcrb
in
push
test
push
cmp
pop
xor
ret
loope
inc
aaa
movsl
adc
out
imul
scas
add
adc
lret
or
inc
add
in
push
xchg
pop
loopne
adc
repz
mov
arpl
lcall
push
cli
jns
inc
lds
sbb
insl
daa
push
lods
jle
shll
cmpsb
inc
icebp
sbb
hlt
pop
sbb
push
sbb
and
daa
mov
test
jecxz
mov
and
cli
xchg
pop
jb
xorl
rcrl
jmp
loop
outsl
inc
mov
hlt
leave
or
dec
pop
or
shll
push
mov
insb
into
push
rorl
lret
push
or
adc
movsl
loop
push
cmp
adc
sti
les
lods
in
mov
add
xor
icebp
cwtl
or
mov
adc
jge
xor
fs
jb
pop
pushw
cwtl
mul
arpl
mov
test
mov
add
cmpsl
dec
filds
sub
stos
sti
mov
pop
and
stc
push
xchg
repz
sbb
cltd
incl
ret
lock
push
xor
mov
add
lods
xlat
add
loope
pop
pop
lock
xor
addr16
punpcklbw
test
push
adc
fwait
imul
es
fs
das
popf
add
push
jl
xchg
adc
fimuls
mov
inc
push
add
popf
cmpsl
les
push
cmp
xchg
lahf
ljmp
cmp
or
daa
lock
dec
ficoms
lret
sub
xor
sar
cmc
adc
pop
icebp
pop
add
mov
and
xchg
push
out
icebp
jp
aam
mov
shl
push
adc
sbb
pusha
xchg
mov
sub
jb
lcall
in
movsl
cmp
lahf
mov
push
bound
negl
inc
push
lods
add
in
pushf
loope
lcall
or
cmc
insl
aam
js
test
inc
out
mov
pop
bound
imull
inc
jmp
roll
aaa
sbb
pop
adc
mov
xor
fsubs
inc
ja
nop
stos
jg
adc
push
mov
in
fldl
and
inc
fucomip
xor
add
inc
repnz
pop
push
divl
and
mov
or
mov
int3
add
fdivl
sarb
adc
into
repz
push
inc
stos
lea
lret
jp
out
fs
add
out
pop
cmpsb
mov
test
mov
add
sti
and
out
jecxz
dec
rol
add
pop
push
adc
jmp
je
mov
notb
lods
mov
out
pop
or
xchg
add
bound
sub
cltd
pop
inc
add
shll
outsb
pusha
add
xchg
dec
mov
cmp
outsl
aam
test
xchg
mov
scas
cltd
loopne
push
fnstsw
jo
cli
sar
jl
add
add
cwtl
add
mov
in
addr16
popf
mov
and
and
lahf
sub
sbb
push
add
lock
push
data16
fwait
mov
add
and
daa
inc
das
add
add
mov
rcpps
out
add
dec
cmc
inc
mov
stos
out
mov
or
subb
rcrl
ja
jo
iret
repnz
test
xor
sti
ss
push
push
mov
into
jge
add
sbb
pop
add
cli
test
pusha
test
inc
jmp
add
lea
call
sbb
std
mov
leave
lret
lea
shr
dec
int
cld
inc
mov
xor
sub
fdivrs
out
imul
cmp
xchg
add
or
mov
add
cmp
sbb
and
mov
out
inc
add
jle
pop
mov
add
xchg
sub
inc
xchg
push
mov
aaa
aam
fcmovnu
jecxz
sbb
movsb
add
fistps
mull
dec
add
lds
popf
and
aas
push
jl
jae
cmp
cmpsb
xor
lcall
add
mov
add
sub
pop
xchg
cld
lock
mov
repz
lea
mov
cmp
pop
xchg
sbb
push
pop
and
inc
imul
mov
mov
lahf
rol
out
xor
in
cmp
jne
arpl
or
sbb
add
ret
sti
rclb
add
orl
mov
jp
loope
incl
stos
jno
into
push
or
mov
aas
cld
in
cmp
xchg
sbb
add
bound
popl
jl
push
mov
adc
cmpsl
push
add
int3
cmpsb
adc
dec
in
jae
add
pushl
sbbl
sbb
mov
adc
pusha
jbe
xor
pop
repnz
sti
adc
das
mov
inc
ds
loopne
mov
sti
dec
add
pop
jmp
or
nop
add
add
push
xor
add
jb
jg
mov
and
fs
jnp
pop
out
mov
incl
aad
ficomps
add
mov
rcl
decl
pop
rolb
xor
jl
xchg
adc
cwtl
das
lcall
loopne
mov
lods
jmp
popa
psubusb
mov
iret
xor
and
add
sbb
mov
cs
add
arpl
fmulp
sub
enter
and
xor
adc
push
pop
lahf
push
add
jl
outsl
push
dec
mov
add
pushf
es
rorl
outsb
adc
mov
xchg
popa
cmp
or
mov
js
xchg
xacquire
incl
xorb
mov
push
dec
pushw
scas
and
dec
fdivl
ja
push
xchg
xor
add
jo
cmp
arpl
jle
stos
pushf
jae
push
and
jmp
jmp
inc
inc
shll
loopne
sbb
addb
jle
je
adc
roll
sub
call
mov
push
repz
inc
mov
loopne
ja
jmp
cltd
loopne
or
daa
pushf
or
pusha
hlt
stc
lea
mov
cs
das
and
movb
and
out
imul
and
mov
or
aam
cmp
inc
xor
sbb
bound
ret
fidivrl
jmp
cmp
add
push
pop
loopne
jmp
xor
xchg
pop
popf
pushf
hlt
inc
add
pop
xor
insl
jp
mov
stos
outsb
inc
icebp
aad
shll
push
jle
cmc
sub
jno
mov
add
ret
push
std
sbb
or
push
into
add
cld
popf
lods
and
pop
adc
push
mov
filds
loope
inc
fwait
enter
mov
rclb
lock
loop
mov
lea
lahf
cmpsb
out
xor
in
push
xor
pop
or
adc
cld
cltd
sub
mov
mov
out
add
out
lods
fucompp
add
clc
cs
and
add
aam
add
cld
mov
movsb
pushf
ljmp
movsl
xchg
add
out
lret
push
add
mov
bound
mov
jno
daa
cli
xchg
outsb
mov
mov
popa
fidivl
pop
xor
inc
popf
mov
mov
push
sbb
aad
jo
mov
cmpl
pop
not
orb
add
jnp
aad
cmp
mov
cltd
sub
call
adc
adc
scas
out
xchg
push
sbb
pushf
and
cmp
cmp
or
mov
mov
lods
mov
add
bound
jmp
sbb
mov
pop
repnz
fldenv
add
lods
dec
test
xchg
rcl
call
mov
das
pop
cmp
aad
jge
pop
mov
int3
pop
add
ds
gs
int
fimull
cmc
fsubl
scas
pushf
ja
sbb
or
sub
mov
cmp
jo
push
lahf
mov
xchg
push
jg
pop
out
lret
xor
sub
cmp
and
push
addl
add
aam
insl
add
jp
ss
outsl
aas
mov
fnsave
mov
xlat
adc
call
mov
or
sbb
std
sbbb
mov
cmc
pop
lcall
loop
negl
mov
fcoml
cmp
pop
cltd
data16
pushf
popf
inc
inc
xchg
and
sbb
or
xor
jo
jne
adc
adc
adcl
add
push
or
pushf
adc
xor
push
add
enter
mov
in
dec
sbbl
add
sub
fsubl
popf
add
arpl
addl
and
cmp
pusha
ret
cmp
jmp
add
call
add
subb
add
mov
add
shll
add
cmp
xchg
std
pushf
push
mov
add
pop
nop
sub
cwtl
movsb
add
imul
sti
adc
cltd
cwtl
xor
cmp
xor
loope
mov
les
jae
popa
mov
add
dec
shrb
sub
int3
ret
dec
add
aam
int
out
mov
stos
ss
lret
das
rolb
repnz
filds
in
jp
add
int3
mov
add
and
cmp
push
jae
sub
adc
mov
adc
lds
popf
jg
sbb
or
nop
rcrl
mov
xor
and
push
sti
sbb
movsl
fimull
lock
jns
cmp
pop
add
lods
ljmp
add
jg
ret
je
add
jno
ljmp
movsb
lods
adc
add
out
bound
and
std
cltd
mov
test
fstpt
clc
pop
cli
pop
insb
popf
jmp
cmpsb
xor
add
aad
add
or
in
add
xor
xchg
sbb
shr
test
xor
add
pop
jg
jl
pop
int
adc
icebp
mov
adc
jne
shlb
add
sbb
hlt
insb
add
mov
and
adc
pop
pop
push
testl
mov
adc
ficoml
insb
rolb
loopne
cltd
lcall
lock
add
push
mov
out
aad
inc
add
fsubrp
pop
jp
add
and
pusha
hlt
pcmpgtw
imul
addr16
cltd
rorl
stos
les
cmp
add
xor
dec
divb
xchg
xor
cmp
iret
roll
stos
adc
add
push
aam
dec
es
add
addr16
lods
adc
push
pusha
icebp
in
lcall
and
inc
cmp
sbb
cmp
orb
mov
out
adc
mov
sbb
lods
iret
xor
dec
mov
lcall
add
push
xchg
add
pop
and
add
jl
icebp
mov
sub
jno
mov
jne
loopne
shlb
into
add
out
sahf
lock
mov
xchg
and
cs
popl
shrl
cmpb
aas
and
mov
into
repnz
push
pusha
test
aaa
xchg
push
inc
add
sti
test
jnp
adc
or
mov
aad
mov
add
mov
add
cmp
int3
sub
rorl
out
outsl
pop
push
inc
mov
dec
mov
add
and
fdivp
jno
xchg
dec
scas
pusha
lock
repnz
jge
dec
sbb
dec
je,pn
out
and
sub
sbb
mov
cwtl
mov
das
sbb
push
in
mov
shrb
mov
xchg
and
rclb
or
lahf
mov
rol
inc
mov
add
inc
repz
xchg
loope
and
push
filds
outsb
xlat
sbb
jg
sti
jo
push
jno
adc
jns
aad
sbbl
adc
les
cmpsl
add
mov
les
add
push
into
rcrb
and
popa
sbb
les
adc
cld
fs
lods
ja
add
hlt
add
andl
fwait
shl
adc
or
inc
mov
movsl
push
lods
testl
xor
pop
sbb
nop
popf
pusha
xor
or
cmpsl
enter
mov
xchg
adc
sub
add
loope
jbe
in
mov
inc
jae
test
sbb
cwtl
scas
adc
mov
add
pop
and
adc
or
mov
xchg
jl
xor
or
loope
loop
ja
fistps
cmp
clc
push
mov
inc
lods
mov
push
pop
push
and
push
int
xchg
jae
mov
pop
mov
jecxz
cmp
in
sub
loopne
fucomp
jg
push
xor
cmp
idivl
jecxz
pusha
or
add
testb
outsl
mov
hlt
xchg
cmp
rcrl
dec
cmp
mov
push
pop
and
cmp
or
into
mov
xorl
jne
addl
xor
xchg
test
jbe
sbb
bound
js
dec
wrmsr
mov
sbb
ss
push
adc
ret
gs
add
in
xchg
clc
aas
jmp
xor
out
repnz
int
mov
mov
push
popa
inc
pop
nop
adc
lock
fisubrl
add
dec
pop
das
adc
popf
aaa
adc
fs
popa
pop
add
fcomps
ljmp
out
loopne
add
and
rcrb
add
and
push
pop
sub
iret
cmp
pop
adc
popa
inc
fisttps
xchg
lock
sub
cmp
repnz
sbb
loop
clc
mov
leave
jle
adc
loope
cmpsl
cltd
ljmp
inc
push
mov
xchg
and
imulb
cmp
and
scas
mov
pusha
ja
sbb
pop
fcomps
pusha
mov
cli
nop
movsl
mov
push
test
add
stos
push
loopne
xor
xrelease
rcrl
adc
add
mov
push
out
sbb
xchg
mov
bound
pop
pop
in
add
mov
iret
fisubs
pop
or
and
mov
or
add
mov
ret
lods
int
add
mov
and
xlat
int3
call
outsl
add
aaa
mov
clc
cmp
xlat
pushf
cmc
sub
repz
movsl
push
or
imul
xchg
add
movsb
rorb
mov
cmc
sbb
jecxz
ds
add
adc
cltd
rcr
xchg
jo
test
loopne
jmp
adc
test
mov
out
imul
mov
mov
add
mov
push
add
popa
add
cmpsb
clc
xor
jns
js
sbb
loopne
xor
outsl
sbb
pop
pop
add
ret
incl
roll
add
repz
pop
and
push
ficompl
add
inc
push
add
repnz
cmp
pop
or
or
and
lret
insb
jno
aad
and
rorl
cltd
mov
lahf
jbe
lahf
test
pop
lds
je
cmp
cs
add
cmp
and
cmpsl
add
xor
lds
pop
add
adc
jb
call
adc
xor
xchg
sahf
int3
fwait
xor
nop
pop
mov
mov
dec
push
data16
sahf
call
shll
mov
push
xor
dec
in
testl
jp
test
insb
pop
mov
add
dec
aad
out
ss
sub
xchg
pop
add
cmp
jl
sbb
and
rcrb
lods
cmp
xchg
add
lea
push
adc
mov
sub
push
sub
mov
adc
dec
mov
push
dec
add
mov
mov
out
adc
in
stc
mov
or
fwait
add
jl
cmp
lods
das
test
add
mov
jo
fstl
inc
sbb
fistl
sub
and
pop
popa
jecxz
js
add
aam
data16
sbb
cmc
fwait
subl
dec
xchg
lods
or
scas
les
xor
add
add
roll
mov
int
add
sbb
stos
inc
mov
in
cwtl
or
std
pop
and
pop
ja
sti
adc
insb
xor
dec
daa
and
les
mov
std
cs
loope
xlat
sarl
ja
push
inc
mov
add
push
iret
push
add
into
hlt
jmp
sarb
fwait
je
jne
inc
dec
and
cmp
lahf
test
push
mov
stc
sti
adc
pop
adc
in
pop
sbbl
xchg
mov
mov
or
xchg
std
add
push
mov
nop
enter
pop
cs
jb
mov
inc
jecxz
mov
mov
das
in
xchg
aaa
inc
cli
movl
mov
add
jno
pop
mov
sti
cmc
inc
or
push
jmp
xchg
add
jo,pt
loope
fsincos
test
cmp
inc
adc
jae
sub
xchg
into
and
cmp
sbb
push
pop
pop
dec
stos
test
mov
cmpsl
aas
hlt
xor
sbb
add
lcall
in
push
add
sub
pop
mov
mov
int3
pop
add
lahf
arpl
sahf
push
inc
add
add
cs
mov
inc
xchg
sbb
loope
setne
add
lea
add
mov
jmp
cld
inc
add
jnp
and
outsb
push
in
mov
xchg
nop
push
pop
jle
pusha
out
ret
dec
out
aam
push
imul
pop
xor
fbstp
outsb
jge
ret
xor
pop
adc
mov
jnp
out
mov
repnz
aas
fldenv
test
lods
sbb
inc
outsl
lock
shrl
sbb
clc
add
xor
test
sbb
addb
adc
or
lock
push
add
mov
add
jmp
jb
pusha
sbbl
add
mov
sbbb
add
testl
and
es
xchg
and
pushf
or
add
movsl
call
pop
scas
mov
mov
mov
push
push
arpl
ljmp
adc
xchg
add
push
add
stos
and
loope
add
shll
push
addb
jecxz
inc
out
cli
sub
ds
movsb
cmp
pop
jnp
pushf
inc
add
add
and
adc
xchg
and
add
sub
pop
lock
mov
ret
fildl
std
ja
leave
mov
in
in
cmpsb
daa
gs
sbb
sub
loope
mov
sbb
bound
jae
mov
outsb
incb
adc
iret
mov
cmp
das
out
aad
or
and
inc
add
xchg
push
add
sti
loopne
rcrb
mov
dec
pop
nop
push
jmp
xchg
mov
add
negl
out
adc
push
repz
add
or
jno
or
add
insl
shrl
cwtl
out
sbb
lds
inc
into
mov
add
dec
xlat
mov
std
loop
add
xor
add
fisubs
out
adc
xor
loope
xor
jle
and
push
sbb
imul
mov
dec
add
fdivs
insb
add
cmp
addb
mov
jbe
add
enter
cmp
imul
xor
int
add
sbb
andl
js
dec
push
inc
sbb
into
scas
push
sti
add
js
mov
add
dec
negl
push
outsb
adc
icebp
jp
add
xchg
ficoms
test
inc
push
testb
lds
add
dec
mov
xlat
and
out
push
hlt
repz
mov
xchg
add
insl
imul
ljmp
into
jp
inc
shr
aam
jne
sub
add
and
push
mull
mov
xchg
iret
rorb
movsb
add
fimuls
je
jmp
mov
rclb
cs
add
cld
test
add
stc
xchg
sbb
push
fildl
xchg
hlt
push
outsl
xor
push
sub
in
add
lret
pop
sub
mov
jl
mov
out
movsb
adcl
out
sub
mov
dec
out
add
loope
shl
dec
mov
lds
inc
add
add
or
push
in
cmp
int3
jle
add
test
push
jnp
cmp
test
ds
pop
insb
scas
shlb
rcr
or
aam
push
pop
cmc
loopne
pop
mov
xor
cmpsl
mov
and
pop
inc
xchg
addb
mov
push
pop
sub
aas
cmp
adcb
inc
jbe
arpl
pushf
cmp
jo
sbb
lea
in
sbb
add
popa
jb
das
fs
jge
dec
outsb
pop
mov
das
push
sbb
xor
aad
rcll
cmpsl
xlat
jecxz
js
adc
jo
jecxz
add
loopne,pn
jb
push
testb
or
jg
fildll
mov
lods
mov
adc
out
fwait
in
pop
pop
scas
test
mov
int3
dec
cwtl
sarl
test
inc
fcomps
call
pop
test
dec
adc
cmp
in
lcall
adc
mov
add
pop
push
popa
sub
jmp
add
lock
jge
mov
fiadds
clc
mov
mov
je
mov
das
mov
jbe
or
jp
add
int
out
pop
in
orb
or
or
sbb
mov
scas
adc
mov
loope
push
loope
orb
jg
aas
rol
imul
inc
gs
pusha
or
sbb
movaps
popa
das
adcb
mov
gs
or
or
test
add
mov
sbb
cltd
negl
out
sub
bound
push
add
test
pop
mov
arpl
andb
dec
add
out
repz
shrb
lret
mov
jecxz
dec
add
jp
hlt
mov
cld
out
int3
or
ds
scas
shr
sbb
pop
out
cmp
imul
ja
xchg
mov
mov
test
inc
subl
cli
jecxz
lods
lahf
sbb
xchg
mov
loop
add
test
jnp
mov
or
jl
pop
xchg
xchg
inc
dec
dec
test
jnp
xlat
fisubrs
mov
sbb
inc
jno
out
mov
insl
push
xchg
or
pusha
cmp
jno
jp
mov
jb
scas
mov
loope
xchg
scas
adc
sbb
mov
adc
stos
cmp
fcmovnbe
outsl
mov
mov
leave
dec
dec
cmpsb
out
mul
add
outsb
jns
jmp
dec
adc
and
sbbl
loopne
in
test
cld
mov
add
mov
test
out
add
push
pop
cld
mov
popa
in
outsl
jecxz
add
push
out
add
dec
aas
mov
pop
cmp
iret
xchg
movsb
adc
pop
cwtl
xchg
jecxz
dec
pushf
cmp
pop
jg
aas
cmp
mov
mov
dec
out
cmc
push
jnp
aam
cmpsb
inc
inc
push
sbb
add
push
rorb
clc
cmp
mov
jnp
push
and
icebp
mov
adc
add
adc
xchg
or
lahf
jle
je
sbb
sbb
shrl
movsb
add
mov
xchg
popa
cmp
andb
aad
dec
imul
push
fsub
add
jns
push
xor
push
adc
addr16
mov
xor
scas
fisubrs
test
jns
test
mov
lock
outsb
mov
and
push
cli
sahf
scas
cmp
push
mov
gs
stos
add
cltd
arpl
adc
mov
mov
loope
jmp
fisttpll
sub
mov
pop
mov
xchg
add
sbb
movsl
jb
dec
or
test
loope
movsb
mov
rcl
mov
push
add
fcompl
mov
xor
addr16
mov
pop
in
xchg
shl
inc
mov
imul
cld
stos
cmpsb
sub
inc
stc
insl
xor
pop
xchg
push
add
int3
mov
add
jns
inc
jp
xor
add
ja
cmp
scas
in
test
cltd
pop
sbb
xorl
adc
lods
xor
lret
pop
mov
push
lcall
sub
sbb
adc
out
cmp
add
in
hlt
aas
sti
xor
and
shr
nop
mov
cmp
mov
mov
stc
fsubs
shrl
push
add
clc
inc
loopne
arpl
mov
cmp
jno
inc
jns
add
loope
and
wrmsr
je
xchg
repnz
loopne
dec
push
lcall
iret
jmp
pop
inc
add
push
aas
inc
jb
das
and
push
js
daa
mov
add
cmp
add
bound
test
fcompl
xchg
lds
loopne
aaa
pushf
cli
adc
xor
add
addl
cmpl
addr16
adc
pusha
pop
lea
cli
sarl
push
mov
pusha
dec
aaa
xlat
jbe
mov
loopne
faddl
pop
frstor
pop
jl
inc
pop
repnz
xor
push
int
add
dec
js
pop
cs
sbb
jbe
add
iret
test
jb
repz
cmp
mov
cmpsb
inc
add
lcall
jnp
pusha
xchg
or
add
leave
lods
in
xchg
fdivrs
inc
ljmp
xor
imul
loop
mov
test
mov
mov
adc
sbb
jl
fidivrs
loopne
popa
add
adc
adc
in
sbb
add
cltd
or
and
mov
push
cmp
add
repz
mov
mov
dec
daa
add
jbe
inc
add
inc
stos
aas
xor
mov
int3
xor
out
mov
enter
in
push
add
cld
mov
fiaddl
mov
imul
mov
fcmovnu
imul
jns
dec
or
lahf
xchg
out
je
clc
ja
das
into
cld
sbb
jae
sahf
xor
mov
mov
lds
sbb
and
or
into
pop
stos
jl
fs
movsb
out
stc
add
sar
sarl
or
pop
std
add
lea
add
jbe
adc
xor
add
fsubrl
ficomps
in
add
mov
cwtl
mov
add
mov
insl
mov
shlb
jl
addr16
fadds
repnz
imul
sbb
in
pop
jle
and
xchg
out
cmc
lock
testb
add
pushl
mov
xor
jae
lock
add
mov
testb
dec
das
insb
mov
lret
and
inc
jae
pop
mov
add
dec
cmp
mov
adc
movsl
sbb
sbb
cmc
add
lock
add
lahf
add
call
or
fistpll
data16
push
cmp
lcall
dec
js
sbb
add
mov
xchg
pusha
aaa
cmp
fcomps
adc
jno
push
push
aam
push
mov
and
dec
push
jmp
loopne
andl
xor
jbe
js
push
add
mov
loopne
mov
add
setle
bound
dec
scas
cwtl
fcoms
xor
in
out
ds
ret
xor
sbb
add
mov
in
xor
fs
sarb
sbb
jmp
push
jne
fsubs
push
add
cli
mov
mov
dec
adc
mov
cmovo
cmpsb
bound
add
add
mov
lret
inc
adc
sbb
mov
daa
clc
jo
cmc
push
pop
and
add
cmovbe
stc
xchg
mov
lds
mov
xchg
hlt
in
or
pop
mov
push
mov
rolb
insl
orl
dec
xlat
test
add
xchg
in
es
adc
stos
fisubrl
test
clc
add
lcall
pusha
or
mov
sbb
lret
cmp
jecxz
into
cmpsb
adc
sub
adc
jne
loope
cltd
fisubrl
push
pusha
lods
or
xchg
push
sbb
pop
adc
xor
pusha
mov
call
ret
divl
add
xor
add
or
loope
sub
idiv
faddl
adc
pop
aam
addb
addr16
push
jo
incl
in
les
out
testb
loop
lods
outsl
add
dec
jnp
push
fiaddl
in
push
pop
dec
and
loopne
fsubrs
cs
and
xchg
imul
imul
jmp
pop
xor
pusha
dec
dec
add
jno
pop
gs
decl
addl
jb
dec
roll
adc
push
pop
repnz
push
jno
dec
lcall
push
int3
sbb
add
xor
push
xor
xor
vmwrite
xor
adc
lcall
xor
dec
pop
in
dec
and
mov
in
fsubl
jne
jmp
aad
jo
add
jg
add
adc
rcrl
pop
sub
or
add
pusha
repz
mov
mov
add
out
add
push
loopne
cmp
sbb
ret
test
adc
adc
mov
icebp
add
pop
push
cld
jo
pop
popf
jge
adc
insl
fwait
add
je
sub
dec
repnz
and
aam
imul
ret
pop
outsb
in
mov
mov
sub
mov
fwait
sub
repz
add
mov
faddl
and
nop
dec
jle
stos
pusha
add
shrl
in
int3
loopne
and
or
push
loope
sbb
adc
stos
fcompl
xlat
push
lds
loope
scas
cmc
or
mov
lock
xchg
inc
cmp
mov
add
and
gs
lods
orl
rolb
bound
cmp
inc
pop
inc
sbb
hlt
add
mov
dec
xchg
or
cmc
out
push
add
mov
js
inc
dec
xchg
roll
add
adc
add
cmovs
shrb
mov
jne
ret
push
add
jb
or
xchg
and
cmc
add
lea
adc
sarb
add
ljmp
add
sub
addl
shrb
push
push
stc
add
mov
pop
cs
fsubrs
adc
pop
adc
add
arpl
dec
out
xchg
add
pop
jg
push
dec
inc
cmp
daa
clc
out
in
aam
incb
and
sti
push
jmp
add
bound
inc
enter
xchg
ret
fisubl
je
push
inc
cmpsb
andl
xchg
js
iret
pop
or
mov
cmp
add
jbe
add
mov
sbb
inc
ja
mov
sarl
or
dec
insl
sti
hlt
add
sub
mov
pop
xchg
jl
jp
push
insl
rcll
xchg
sbb
fildl
fcoms
sahf
jo
sarb
stos
add
in
cmovp
inc
jecxz
mov
sbb
test
cmp
jmp
adc
mov
add
in
mov
mov
xorb
jo
sub
lahf
add
jge
sbb
inc
addr16
adc
sahf
aas
xchg
and
addl
add
sub
fcomp
sahf
addr16
pop
adc
jb
movsl
push
sbb
add
std
pop
or
mov
mov
jecxz
mov
sbb
in
adc
and
push
sbb
jbe
dec
sbb
xchg
lcall
das
adc
or
jnp
je
pushf
jge
pop
adcb
fldl
and
pop
and
out
in
adc
xchg
mov
push
fidivs
mov
or
out
cmc
xchg
push
xlat
push
fcmovne
arpl
mov
loope
pop
cli
mov
push
mov
test
ret
rcr
pop
mov
js
cmp
iret
push
dec
sbb
lock
mov
rorw
repz
lret
push
add
pop
frstor
aad
add
adc
loopne
lea
add
mov
stos
mov
aam
xchg
sbb
ffreep
lahf
or
test
or
stos
add
sar
ja
das
pop
loopne
nop
and
scas
sbb
xchg
arpl
jg
mov
mov
and
repz
adc
jb
pop
popw
das
add
stc
adc
add
mov
enter
add
test
push
xlat
mov
mov
push
es
fadds
and
ficompl
dec
cwtl
sbbb
and
icebp
repz
mov
jo
enter
pop
lds
pop
hlt
mov
mov
pop
sub
dec
out
pusha
mov
aam
adc
in
and
xchg
dec
lods
pop
aas
pushf
jg
add
sbb
sbb
popf
in
push
ss
pop
popa
xchg
stos
and
adc
xor
add
and
daa
inc
out
insb
pop
and
mov
sahf
push
mov
and
gs
add
imul
push
jle
adc
sti
push
int
lahf
push
dec
inc
jae
xor
adc
into
aam
lods
mov
test
data16
mov
xchg
jne
adc
stos
enter
adc
test
shlb
leave
add
xor
lcall
jmp
jb
add
scas
daa
fs
mov
lea
pop
loop
xor
mov
pusha
lret
insb
adc
sbb
addl
adc
push
stos
inc
cmp
push
cmp
and
roll
sub
xchg
push
out
jne
in
es
mov
roll
mov
mov
and
fmul
mov
or
jo
sbb
pop
movsb
test
cmc
mov
out
xor
mov
addb
jo
aam
cmp
adc
or
dec
out
cld
sbb
cli
fsub
mov
popa
sub
loopne
decl
or
mov
test
and
sbb
push
sub
or
adc
xchg
add
aam
xor
fnstsw
adc
ja
sbb
fmull
mov
inc
lds
fldcw
jle
jb
movsl
inc
cmpsl
dec
lock
sahf
add
cmp
pop
mov
testb
jae
xchg
inc
jge
arpl
add
sahf
inc
pop
out
popa
ja
jne
popf
push
cwtl
outsb
lret
pusha
shrb
addr16
push
adc
in
pop
loope
add
js
xchg
lcall
or
xchg
inc
jecxz
jo
ljmp
outsb
imul
mov
pop
in
push
in
mov
sbb
mov
lock
adc
imul
cs
mov
cmpb
ret
adc
jo
inc
inc
fnstenv
jg
divb
inc
inc
std
add
adc
and
pop
and
stc
sbb
add
in
loop
jo
fstl
lret
sbb
add
mov
xchg
imul
stc
daa
mov
xor
shrb
add
mov
inc
xchg
loope
aam
les
jmp
imul
mov
add
sbb
jg
cwtl
sbb
add
inc
push
movsb
lcall
add
cmp
jg
cmp
add
ret
inc
into
testl
or
ja
add
fmull
stc
pop
into
iret
add
dec
mov
loope
pop
push
pop
enter
fnsave
lea
xchg
test
add
in
aam
mov
add
add
pop
pop
inc
and
movsl
xchg
aaa
add
das
dec
sbb
pop
push
and
lahf
cs
mov
in
outsb
aaa
cmp
jae
push
into
incb
stos
outsl
scas
cmc
add
fwait
inc
idivl
jbe
ja
jmp
jbe
pop
push
test
test
cmp
fistps
mov
sahf
lds
andb
cmp
adc
push
jp
and
fdivl
xchg
push
fs
mov
sarl
pushf
js
cmp
mov
hlt
andl
push
adc
mov
jae
dec
add
pusha
sbb
lret
andb
in
jmp
xlat
pushf
xor
scas
push
sbb
sub
out
cmp
adc
insl
add
add
lret
movsl
cs
jp
or
in
inc
call
add
rcrl
dec
pop
fwait
addb
stc
adc
inc
xlat
out
and
and
shll
es
add
sldt
in
jge
sbbl
jo
fwait
push
jbe
jle
sbb
push
inc
xchg
imul
xchg
loopne
pop
pop
inc
out
add
popf
dec
add
and
xor
add
movsb
arpl
sub
and
je
fisubrl
mov
sbb
mov
dec
dec
add
out
cmp
sub
and
jno
ror
repz
std
inc
dec
das
fsubp
or
dec
ja
cs
cmp
inc
stos
and
sub
add
xchg
loope
aaa
mov
sbb
xchg
test
repz
add
sub
fisttpl
inc
aas
mov
and
inc
mov
out
pop
push
icebp
add
xchg
adc
loope
sbb
lock
mov
sbb
into
sbb
scas
pop
or
aas
push
ds
or
fimuls
add
js
rolw
xchg
add
out
inc
push
mov
test
nop
sbb
or
repz
in
or
fiadds
test
jbe
rcrb
add
mov
mov
outsb
sbb
sbbb
stc
fs
mov
add
adcb
test
aas
add
sti
jb
mov
loope
sbb
dec
mov
jns
rcrl
lock
adc
cmc
outsl
fmull
fcoms
jo
push
lret
les
pop
adcb
jg
xor
sbb
pop
decl
mov
jo
push
sahf
nop
inc
xchg
xchg
mov
sbb
push
repnz
add
cld
inc
and
sub
or
dec
and
lret
daa
rolb
mov
mov
sbbl
outsl
adc
mov
xlat
addr16
inc
push
sub
fcomip
add
mov
loop
loopne
arpl
into
sbb
ret
mov
and
adc
mov
jbe
int3
cmpsb
fs
dec
ficoms
xchg
xchg
repz
sbb
adc
add
hlt
jo
popa
int
out
adc
jae
ret
pushf
jg
fs
push
sub
iret
mov
rolb
adcl
push
shl
and
pop
outsb
add
cs
fwait
nop
and
sub
jnp
push
sub
dec
loopne
ljmp
xchg
push
sub
faddl
sti
fadd
das
push
mov
add
decb
add
stos
pop
ljmp
mov
push
adc
adc
sbb
rolb
dec
faddp
mov
pop
jmp
inc
mov
adc
testl
data16
popf
and
call
addr16
add
fmull
mov
sbb
jo
adcb
add
js
arpl
loope
mov
ss
cmp
int3
push
xor
fwait
lret
mov
cmp
or
inc
rolb
and
xor
inc
pop
or
dec
lods
mov
xchg
mov
sti
jl
notb
add
test
add
mov
movb
fldt
out
popf
adc
subl
fwait
mov
sbb
iret
pop
add
cmp
jmp
out
mov
xchg
pusha
pop
add
mov
cmp
add
and
ljmp
mov
sub
adc
pop
sub
sub
jmp
xchg
inc
notl
adc
shr
add
dec
ljmp
lret
or
pop
add
adc
les
pop
mov
jae
xor
sbb
repnz
adc
sub
test
loopne
mov
sahf
fisttps
inc
mov
std
insl
fnsave
jecxz
mov
add
push
in
mov
sbb
xor
mov
inc
and
cmp
and
jno
sahf
pop
adc
sbb
out
inc
pop
mov
icebp
fsubrs
add
imul
dec
or
and
call
pusha
mov
or
mov
lds
jno
push
scas
xchg
cmp
out
push
push
add
sahf
addb
adc
xchg
movsl
roll
sbb
push
add
bound
xchg
pop
cmp
inc
jg
mov
add
sbb
jp
inc
mov
cli
add
imul
or
add
or
xor
push
mov
and
test
repz
pop
int
add
inc
adc
add
stc
sbb
xchg
add
xor
mov
xchg
add
test
inc
fistl
add
jmp
mov
add
pop
std
jmp
add
or
pop
xor
add
mov
jnp
push
push
mov
hlt
mov
ret
xlat
cld
pusha
lahf
mov
lock
jb
and
add
movsl
fmulp
in
gs
dec
add
test
xor
mov
lcall
mov
pop
sbb
out
popa
pop
cmp
jne
jmp
pusha
adc
or
dec
fldenv
sbb
sti
xor
xor
sbb
push
shrl
iret
adc
or
cmc
addr16
push
sub
fistps
loop
leave
clc
cwtl
fiadds
jg
insb
into
jb
aaa
or
mov
popf
pushfw
popa
sar
or
mov
push
rolb
mov
push
dec
cld
pop
stos
shll
icebp
cltd
scas
pop
gs
push
push
push
cli
jno
loope
add
out
inc
in
add
pop
adc
filds
lret
cwtl
fwait
add
sub
pop
int
in
ss
outsl
and
mov
shl
dec
movsb
clc
push
sub
int3
movsl
mov
dec
test
cmc
mov
xor
adc
add
stos
cld
sub
insb
cmc
mov
mov
mov
fiaddl
outsb
jno
push
mov
daa
add
addr16
loopne
push
outsl
dec
pushf
sub
xchg
or
mov
fwait
push
std
in
pusha
cld
and
push
mov
pusha
push
insb
and
je
in
sbb
xchg
repnz
xlat
sbb
rorl
push
cmp
inc
pop
add
mov
aaa
subb
mov
sub
adc
test
gs
inc
pop
mov
cmp
add
ret
jecxz
or
xchg
inc
out
adcb
adc
shlb
pop
cs
aad
mov
loopne
out
adc
push
xchg
sbb
fcomip
addb
ret
cmp
add
xor
mov
pop
test
mov
sbb
adc
stc
mov
mov
movsl
cli
add
dec
iret
pop
and
inc
adc
jle
lcall
jge
and
mov
add
push
xchg
inc
call
sbb
in
loop
cmp
add
test
stos
add
xchg
jb
mov
add
dec
out
jp
sub
add
stos
mov
lods
or
add
push
jo
rolb
scas
pushf
dec
insb
add
fimuls
test
movzbl
lret
ss
jne
add
imul
imul
add
cmc
add
jge
andl
xor
pop
add
mov
sbb
jecxz
cmp
mov
dec
jbe
inc
xchg
scas
scas
shr
imul
sbb
pusha
cmp
pop
sbb
or
add
xchg
addr16
outsl
inc
pop
lret
cmp
pop
push
test
getsec
ret
in
jnp
fadd
dec
jae
add
inc
and
mov
sbb
xchg
scas
add
sub
lret
and
or
outsb
and
jbe
movswl
fimuls
mov
cmp
push
es
cmc
jno
or
mov
pusha
divl
mov
insl
adc
inc
flds
jne
int3
pop
sub
jle
enter
xchg
insb
push
add
jnp
pop
inc
xor
in
pusha
out
hlt
lcall
add
push
xor
add
or
push
out
mov
das
sbb
jecxz
pusha
lods
movsb
fstpt
or
xchg
inc
mov
push
adc
dec
pop
inc
ret
cmp
mov
or
mov
add
jge
push
cmc
and
mov
out
sbb
xor
out
inc
mov
cli
pop
sbb
sbb
dec
add
push
and
dec
jnp
orl
or
mov
into
add
iret
mov
rcrb
cmp
or
jns
mov
add
lret
ror
fldcw
pusha
popa
inc
lea
xchg
jecxz
test
mov
nop
add
out
xchg
daa
inc
and
iret
test
dec
sbb
or
and
add
lea
and
xchg
sbb
lock
add
jb
adc
shll
add
loopne
js
movb
push
lret
add
into
push
imul
popf
add
sub
add
or
sbb
mov
sbb
movsl
dec
adc
cld
outsb
fstp
iret
mov
roll
ret
inc
or
aam
xchg
jbe
jl
int3
jle
fldcw
mov
add
cs
lahf
mov
xchg
adc
push
popa
add
sub
mov
inc
add
cli
xchg
add
mulb
xchg
adc
jb
outsl
adc
push
xchg
cmpsl
pushf
ret
in
push
add
adc
and
sahf
jbe
rclb
pop
push
enter
incb
psubusb
mov
cmp
sub
xchg
pop
das
push
adc
arpl
jl
daa
add
mov
mov
insb
and
inc
sub
xchg
xor
scas
faddl
push
pop
clc
ret
loopne
daa
test
or
mov
or
xlat
mov
adc
push
lea
repnz
popl
enter
inc
cmc
xchg
out
adc
fcmovnbe
mov
mov
add
das
jl
mov
jmp
sahf
int
inc
repz
add
dec
dec
sub
xchg
mov
push
pop
xchg
sub
cmp
pop
ret
and
adc
pop
xchg
push
repz
or
adc
or
popa
cmp
push
dec
mov
out
and
iret
stos
add
sub
pop
add
jb
add
imul
mov
mov
xchg
mov
inc
pop
fists
dec
arpl
je
inc
fs
cs
lock
mov
test
lds
sub
fs
pop
test
xchg
adc
xor
pop
jecxz
add
dec
pop
lea
xor
push
mov
popa
add
and
addb
jae
push
fisttpl
imul
add
inc
cmp
mov
and
lahf
loope
sub
pop
leave
mov
push
push
pop
mov
in
loop
sub
out
adcl
popa
xchg
jb
popf
out
push
loope
dec
les
shll
push
fisttps
bound
push
jle
cli
adc
adc
xor
call
neg
push
inc
and
data16
fucomip
xor
xlat
cmp
aas
sub
js
pop
cld
fisubl
subl
pop
add
pop
xor
or
mov
cmp
add
fsubs
divl
fbstp
out
or
pop
lock
mov
scas
and
add
sub
inc
scas
mov
or
outsb
pop
cwtl
repz
cmp
jb
shlb
cmp
sub
mov
mov
push
inc
mov
cmp
xor
adc
adc
addr16
mov
cs
pop
or
cs
add
popf
xchg
dec
aas
xchg
mov
and
loop
add
sbb
aam
das
jecxz
loopne
push
negl
or
lea
sub
xchg
xor
add
in
xor
inc
je
bound
inc
add
mov
hlt
js
sub
push
dec
sub
pop
lret
add
adc
and
cmpsl
mov
jne
sub
add
and
insl
inc
jg
adc
js
lret
jne
push
movsb
sub
addl
fsubs
jbe
cs
add
cwtl
pusha
and
mov
pop
adc
xor
add
jbe
addr16
aas
call
in
lret
mov
adc
mov
icebp
mov
mov
inc
cwtl
movsl
leave
add
mov
push
add
sbb
les
pop
pusha
cmp
aas
and
ljmp
iret
mov
mov
cmp
mov
addr16
scas
xchg
xor
imul
mov
mov
repnz
or
push
xor
lea
ss
fcomip
lahf
sbb
repz
sbb
add
test
push
mov
cmp
lods
jno
push
and
scas
pop
pop
sbb
add
neg
loopne
or
sarl
lea
repz
sbb
inc
mov
rcrl
jne
in
or
add
lcall
cwtl
jb
cmp
adc
xchg
iret
ret
notl
lods
adc
mov
push
add
in
or
jns
pop
push
or
lods
push
inc
cmp
xor
lret
mov
dec
jecxz
lods
das
clc
pop
inc
xor
fwait
pushf
jge
add
pop
dec
imul
push
decl
push
fwait
repz
xchg
dec
mov
adc
ds
inc
icebp
loopne
aad
cmpl
rorb
add
je
enter
add
mov
cmp
adc
into
mov
nop
adc
inc
cwtl
das
and
aad
vandnps
add
int
stos
fistpll
sahf
repnz
pop
dec
cmp
pop
rol
mov
adc
add
ficomps
mov
xor
cmp
sti
jns
rolb
push
jecxz
add
in
dec
cmpsl
fildll
mov
push
ja
in
aaa
and
cli
push
pusha
cmp
repz
loop
es
mov
loope
cwtl
bound
test
scas
loopne
leave
std
in
adc
fbld
scas
mov
jecxz
int
mov
add
in
xlat
push
jno
loope
push
movsb
xchg
inc
leave
cmpsl
jp
inc
push
je
mull
and
add
call
les
pusha
jae
fdiv
ret
inc
lock
mov
or
js
pusha
repnz
mov
mov
add
shrb
mov
idivb
push
or
jb
mov
pushf
mov
icebp
lds
jns
insb
faddl
repz
push
call
pop
inc
xchg
bound
mov
enter
call
mov
scas
jp
insb
mov
fisttps
adc
pop
sub
xor
dec
cmc
movb
or
int3
test
cld
mov
sub
and
hlt
ret
add
loop
out
add
jecxz
mov
scas
sbb
xchg
fstpt
add
add
add
adcb
xor
or
add
mov
inc
inc
aas
xchg
aaa
cs
nop
add
pop
arpl
adc
xchg
adc
mov
fsubr
sbb
popf
sahf
xor
ljmp
xchg
sub
dec
pushf
flds
pop
in
ret
cmp
out
in
fnsave
and
sbb
dec
addl
sbb
cmp
adc
lods
ja
inc
jmp
mov
dec
dec
loopne
pop
lcall
cmp
pop
add
lods
xchg
data16
mov
inc
mov
pop
and
add
sar
movsb
jae
and
iret
push
outsb
and
cltd
dec
inc
rcrl
sbb
stc
push
test
push
pushf
and
scas
push
pop
pop
sbb
scas
cmp
add
fst
or
stos
ds
add
test
dec
loope
clc
lahf
or
mov
loopne
mov
jne
fcmove
pop
push
adc
divb
psubsw
xor
dec
xchg
les
stos
xlat
add
inc
pop
jg
dec
xchg
scas
mov
sub
pusha
outsb
aas
adc
jne
leave
aaa
add
cmp
in
pushf
adc
shlb
movb
popa
dec
hlt
mov
push
fildll
and
popa
or
aam
inc
fstp
and
lods
mov
pop
pop
or
add
lret
or
xor
inc
add
mov
add
xor
jecxz
sti
scas
inc
ret
sbb
push
shrb
inc
daa
sub
xchg
sbb
mov
jmp
pop
push
cmp
xor
lds
pop
fwait
jne
lock
aad
push
repz
adc
mov
inc
mov
rolb
push
mov
out
popa
fnstenv
cwtl
xchg
jecxz
push
std
adc
xlat
add
lea
popl
add
mov
pop
aas
push
and
adc
int
add
mov
fiadds
aad
xchg
hlt
sbb
sti
fildl
aaa
sahf
pop
js
repnz
sbb
jp
popf
add
pusha
mov
test
mov
mov
push
fadds
aam
inc
cmc
inc
testl
repnz
jecxz
std
mov
pop
movsb
add
daa
jne
enter
add
or
add
faddl
push
xchg
shlb
or
or
jns
mov
movsb
xlat
cli
dec
pusha
fmul
popa
andl
lahf
mov
cltd
and
mov
pop
xor
call
test
jnp
sbb
add
xchg
mov
pop
cmpsb
and
negl
out
ficompl
je
push
xor
test
sub
sbb
cmpb
std
inc
outsl
sub
mov
fisttpll
movsl
test
andl
mov
jmp
push
std
push
add
pop
push
shrl
mov
jecxz
jmp
mov
inc
adc
jecxz
fildl
push
xchg
enter
in
mov
icebp
adc
sbb
add
adc
cltd
dec
filds
mov
mov
mov
xchg
negb
and
inc
sti
aam
jmp
pusha
mov
mov
cmp
adc
iret
add
mov
fldt
int
cld
pop
push
outsb
add
les
sub
insl
adc
cmp
mov
cmp
mov
and
sub
aaa
add
aad
xchg
jle
loope
lods
cmc
mov
clc
xor
xor
mov
adc
jg
or
cmp
adc
adc
loope
jle
xchg
les
inc
inc
into
mov
push
dec
jecxz
pop
fisttps
sbbl
pusha
mov
mov
movsb
cmpsb
add
pop
add
sub
xchg
add
out
push
jg
push
add
sbbb
cmp
and
xlat
xchg
adc
add
test
icebp
jecxz
sti
sub
movl
xchg
loopne
and
sbb
jae
ds
js,pn
push
imul
jmp
call
enter
mov
into
lahf
pop
dec
mov
dec
add
push
loopne
femms
addb
stos
lods
xchg
les
jg
xchg
xchg
inc
sbb
fldt
cmp
int3
cmp
xlat
fwait
pop
lods
inc
ret
adcl
aad
push
dec
add
sarl
stos
bound
repz
pop
addb
test
sbb
int3
add
sub
xchg
dec
push
and
pop
dec
mov
in
add
pop
aam
add
sbb
call
mov
pop
mov
adc
and
test
ret
fisubrl
jle
movl
xorb
add
fiaddl
cmp
mov
out
test
lock
sbb
out
fwait
adc
pop
jnp
insl
inc
in
mov
xlat
inc
pusha
and
sbb
fsubs
add
mov
jle
mov
out
pop
cmp
movsb
loopne
mov
lock
fs
add
push
enter
lcall
js
add
call
xchg
push
daa
das
call
xchg
dec
stc
lfs
sahf
mov
loopne
repnz
cwtl
xlat
pusha
insb
ljmp
pop
or
jmp
outsb
push
add
cmc
or
js
in
test
xor
sbbb
jne
xchg
lret
ficoms
add
cwtl
movsl
pushf
into
or
mov
jl
pusha
xor
cmpsb
out
out
push
mov
mov
add
xor
add
movsb
fucom
push
test
mov
adcl
cmc
mov
imul
push
or
xor
add
push
gs
cltd
rorb
loopne
pop
fnstcw
pusha
fcomi
jbe
sti
ja
pop
das
scas
addr16
mov
mov
call
inc
pop
pop
movsl
stos
xor
and
aaa
sub
movsb
adc
lret
sbb
add
and
inc
cld
loop
repnz
out
jle
test
movsl
dec
jae
inc
test
add
imul
push
mov
mov
or
sbb
clc
out
aas
outsl
popa
jl
adc
add
roll
dec
cld
popa
or
lret
mov
cwtl
mov
mov
jne
sub
shll
aas
sbb
sbb
jge
jb
les
scas
and
loope
test
addr16
mov
add
in
add
jb
pop
js
cmp
sub
and
add
out
jno
pop
inc
add
pusha
push
pop
adc
sbb
jns
push
loopne
insb
cs
xor
xchg
popf
aas
dec
add
ds
test
in
pushf
pop
das
add
nop
add
xchg
jo
xchg
jns
push
pop
adc
stos
popf
fcmove
mov
mov
jecxz
lcall
repnz
add
inc
mov
loopne
dec
pop
pop
push
dec
xlat
dec
add
iret
push
test
inc
xor
xchg
adc
mulb
in
jmp
in
pop
es
enter
addr16
js
push
jno
add
into
dec
sbb
ret
shrl
xor
cmp
mov
mov
mov
incl
sbb
and
loop
mov
jge
xor
negl
cmp
dec
add
dec
stc
sbb
push
lea
or
loopne
sahf
add
xor
add
push
pop
add
jo
jge
faddl
cld
arpl
imul
push
sub
cltd
pop
and
jae
add
xlat
pop
pop
add
mov
inc
and
aad
fdivr
adc
hlt
and
ret
dec
out
mov
lods
insl
test
int
data16
mov
and
mov
hlt
imul
into
jp
sbb
cmpsb
js
pop
pop
dec
xchg
pusha
xchg
adc
ja
shlb
xor
mov
push
inc
adc
shrl
fnstcw
sarl
testb
call
sub
cmp
in
cmpsl
stos
shll
je
dec
shl
or
lods
stc
jmp
jge
add
faddp
inc
or
inc
push
pusha
add
or
pop
dec
add
insb
lret
aad
fnstcw
lret
shrl
cld
jne
mov
xchg
lahf
mov
push
aad
add
popl
outsb
xchg
insb
adc
pop
xor
or
pop
mov
inc
add
adc
aas
mov
pusha
int
gs
repnz
in
movsl
push
fsubl
add
push
test
add
aas
mov
js
outsl
and
pop
fisttpll
les
xchg
orl
cmpsb
add
test
and
rcrb
insl
dec
jb
test
dec
push
inc
cmp
mov
sbb
out
add
rcrb
inc
add
xchg
inc
add
add
cwtl
ret
shll
movsl
add
ficomps
fwait
xor
ret
and
dec
std
fiaddl
mov
xchg
xor
filds
adc
andb
add
sub
ret
stc
rclb
adc
mov
dec
mov
dec
fildll
push
lret
adc
inc
pusha
add
mov
test
add
pop
out
pop
cwtl
dec
push
add
pop
inc
loopne
and
out
iret
in
movsb
loope
add
xchg
pop
stc
add
mov
adc
xlat
add
fnsave
and
push
stos
push
fwait
mov
mov
add
xchg
sub
add
cmc
movsb
add
sbb
jp
sub
inc
push
add
xor
pop
popf
aas
daa
pushf
cmp
jae
dec
adc
add
mov
test
daa
dec
xchg
lock
jne
pop
pop
add
arpl
ret
cld
scas
std
adc
adc
cmp
mov
faddl
add
fistps
adc
sub
fucomi
pop
dec
add
das
xchg
sbb
push
insl
loopne
pop
into
addr16
sbb
loop
call
mov
dec
nop
or
adc
shrb
pop
xor
add
adc
and
in
adc
or
and
scas
sbbb
icebp
loope
xor
or
test
jne
and
loop
fstpl
roll
mov
jecxz
cmp
loopne
adc
push
iret
daa
cmp
add
xor
inc
into
xor
lret
jnp
cmp
or
or
lret
into
test
add
rorb
les
dec
fs
js
pushf
sub
xchg
cmpsl
arpl
loopne
dec
adc
sbb
jg
pop
loopne
outsl
jne
loop
and
and
inc
mov
xchg
lahf
add
fistpll
add
icebp
ror
jb
mov
add
and
add
and
push
add
shrl
dec
push
lcall
push
mov
lea
add
inc
ljmp
test
push
add
test
cmc
std
mov
int
mov
pop
orl
out
inc
idivl
add
mov
ret
shrb
sbb
int
xor
sub
cld
add
enter
xchg
das
clc
fwait
pop
stos
push
xor
std
or
jns
sbb
mov
dec
jle
xor
bound
incl
roll
jno
inc
outsb
pop
dec
or
mov
ret
cmp
xchg
cld
xor
imulb
pop
pop
xchg
push
pop
and
mov
pusha
das
sti
inc
xchg
fistps
add
dec
jnp
xorb
sbb
outsl
cltd
lock
xchg
fucomp
pop
mov
addb
mov
pusha
daa
add
ds
pop
roll
add
popf
pop
loopne
adc
jo
bound
mov
xor
clc
xor
out
inc
aas
push
add
push
scas
rep
sub
mov
add
jecxz
das
xor
in
neg
and
add
cmp
xchg
mov
add
lea
cmp
mov
daa
int3
cltd
sarl
rcrl
jae
test
mull
adc
lret
add
dec
or
cmp
sub
test
enter
loopne
add
mov
jmp
mov
sbb
pop
mov
into
add
dec
mov
pop
jbe
loopne
or
fcmove
cmpsb
loope
pusha
sti
xchg
fistpl
sbb
pusha
adc
push
jbe
push
iret
testb
push
xor
mov
mov
pop
cmpsl
stos
pusha
pop
sbb
aaa
movsb
xlat
loope
ja
cmpsb
add
cmp
out
sbbb
xor
sbb
js
out
mov
sub
fisttps
mov
add
dec
adc
loopne
daa
insb
adc
xchg
lock
add
cld
cmpsl
or
sub
fiaddl
xor
vandps
or
cwtl
js
cmpb
imul
hlt
add
imul
push
push
pusha
shl
clc
push
mov
sbb
cmp
popf
test
push
push
adc
jecxz
insl
icebp
out
mov
test
test
adc
incl
clc
push
xchg
jle
sub
add
mov
out
andl
push
js
jo
add
xchg
add
in
mov
ret
shr
sbb
lock
adc
imul
repz
dec
cmc
jle
insb
jo
pop
or
xor
out
add
mul
data16
push
ror
addr16
insb
out
and
or
lcall
std
dec
mov
ret
mov
or
sbb
lds
es
iret
dec
pop
cmp
insb
push
cmp
mov
cmpsl
rclb
or
and
lock
rcll
loop
adc
add
cmp
push
leave
cmp
add
or
or
shr
adc
cmp
pusha
push
inc
push
mov
pop
das
cmp
cwtl
aam
or
js
pusha
int
cmp
es
push
mov
pcmpeqw
repz
adc
movsb
xor
inc
add
sub
jmp
out
or
imul
loope
fdiv
pop
popa
add
add
mov
test
roll
mov
jg
or
icebp
pop
push
inc
sbb
prefetcht2
add
adc
sub
ret
testl
out
fcmovb
jecxz
sti
icebp
sbb
sahf
loopne
or
fldcw
add
sub
pop
repz
in
cmc
das
add
and
sti
shlb
add
aas
sub
push
push
adcl
dec
ret
pop
jecxz
xlat
adc
out
pop
inc
push
mov
test
sub
sbbl
mov
jne
mov
pusha
out
mov
add
jmp
sub
mov
les
push
add
mov
aas
into
testl
lcall
and
xchg
cmp
pusha
push
cmp
loopne
inc
lods
cmp
add
mov
sub
mov
sbb
outsl
inc
mov
aam
push
fadds
stos
sarb
add
cmp
movsb
jno
out
sub
rorb
add
adc
xchg
jbe
sbb
scas
aam
call
fwait
add
and
adc
mov
lea
sbb
imull
add
lahf
aas
test
adc
cmpl
shlb
in
stos
les
xchg
icebp
xor
pop
mov
add
movsb
or
gs
flds
out
mov
or
icebp
loopne
push
and
push
pop
pop
sub
adc
outsb
cwtl
pop
hlt
push
jno
or
data16
movsb
aam
add
sbb
mov
add
cwtl
cmp
mov
push
aam
into
add
je
dec
sub
adc
stc
pop
inc
aaa
mov
loopne
daa
sbb
rcll
pop
cmp
hlt
sub
mov
jnp
jb
shrb
cmp
mov
mov
cltd
sbb
push
add
push
xchg
out
ficoms
xor
push
stos
aam
dec
loopne
cmp
je
sti
pop
add
lods
push
cs
testl
pop
loopne
adc
pushf
jne
loopne
jo
xchg
jecxz,pt
xor
cmpsb
mov
xor
lret
ret
jmp
mov
and
mov
add
add
mov
dec
or
pop
movsb
dec
cmpsb
out
add
or
adc
clc
gs
cltd
dec
sti
sbb
push
mov
inc
pop
in
ds
repz
aas
add
mov
aad
pop
xor
enter
popa
inc
into
rcll
lcall
mov
clc
cmp
in
lods
sub
movsl
add
mov
addr16
out
pop
add
stos
pop
jnp
shll
dec
bound
xor
ja
sar
pop
or
pop
mov
add
inc
mov
sbb
or
pop
jno
add
push
rcl
pop
adc
jb
mov
mov
ljmp
cmp
xor
cmp
adc
and
insb
shll
nop
enter
scas
add
sbb
push
push
and
push
shr
and
aas
mov
mov
std
mov
rcrl
leave
in
inc
adcl
loop
pop
add
adc
dec
lods
inc
fmull
cmc
sub
enter
or
push
xlat
or
cwtl
add
push
and
stos
mov
cmp
jno
mov
popa
pop
adc
stc
aaa
mov
mov
or
setb
adcl
leave
icebp
pop
or
fs
aaa
imul
pop
in
add
mov
insl
jno
pusha
fnstsw
xlat
push
sti
or
testl
popa
or
mov
aad
adc
push
mov
or
lahf
cmp
and
ficomps
cmp
mov
add
mov
cwtl
test
jns
rolb
aad
pusha
repz
sbb
add
sub
push
pusha
pushf
in
mov
jo
and
in
insl
jmp
add
jno
xchg
outsb
stc
ret
int
rcll
scas
test
add
test
adc
testl
or
sub
sub
std
out
pop
xchg
adc
jnp
sar
xor
lock
je
repnz
shl
push
add
jbe
cmp
sbb
mov
rolb
mov
imul
dec
xchg
add
jg
aaa
fcomi
add
movsl
repz
cld
pusha
jne
lock
mov
adc
add
andl
out
fs
addl
jmp
inc
mov
xchg
es
outsb
jg
pop
inc
push
dec
adc
lea
xorb
xchg
xor
push
inc
sbb
dec
in
jp
mov
xchg
repnz
mov
js
xor
inc
add
lret
jns
or
insb
xor
push
and
sahf
xor
lret
call
test
pop
pop
xchg
lahf
add
dec
adc
mov
rolb
xchg
ja
jae
xor
stc
pop
aad
loop
jb
pop
or
lds
cmc
aam
sbb
push
jbe
pushf
fimull
push
add
mov
xor
lcall
mov
add
subl
add
jle
mov
subb
nop
mov
mov
jmp
cmc
mov
popa
inc
or
cli
add
mov
jle
lds
xchg
add
sbb
sbb
jge
pop
shll
or
std
pop
xor
je
pop
jp
dec
pop
lea
out
ret
adc
adc
popw
cwtl
add
jne
mov
mov
js
out
daa
push
jmp
pop
shl
add
mov
inc
pop
pop
add
mov
add
sbb
ss
aas
or
push
xor
inc
adc
xchg
ja
lods
data16
inc
pop
sub
mov
jl
pop
dec
mov
add
jnp
fiadds
jb
neg
mov
sti
push
ret
adc
pop
dec
and
mov
jae
mov
xchg
or
push
add
cwtl
popa
inc
js
xchg
pop
addl
mov
push
or
add
out
lcall
in
lret
into
pop
cmp
out
in
pop
sarl
mov
mov
mov
into
add
pop
mov
imul
dec
add
shlb
adc
jnp
inc
cmp
ficoms
aas
sub
iret
add
in
or
xchg
ss
adc
ret
pop
cmpb
add
push
sbb
add
imul
out
pop
adc
inc
pop
lahf
mov
leave
neg
into
mov
cli
shrl
add
push
inc
loope
nop
movsb
or
jbe
in
add
scas
js
cmpsb
sbb
add
sub
add
mov
cmpsb
mov
pop
scas
xor
xor
hlt
mov
iret
xor
mov
sub
cli
mov
std
ret
add
mov
lock
xor
fisubl
ss
inc
fdivrp
sub
mov
jp
xchg
jmp
push
jle
mov
add
add
mov
jmp
add
xlat
adc
roll
out
push
loop
in
push
mov
pop
or
loopne
mov
outsl
or
adc
jo
fnsave
mov
test
cmc
sub
out
jge
lahf
mov
push
mov
jno
in
stos
movsb
add
pusha
dec
or
push
or
add
es
out
pushf
xor
mov
and
push
stos
test
jne
stc
out
pop
dec
aaa
dec
lret
outsl
xchg
add
lods
pop
or
imul
ret
mulb
popa
adc
cwtl
add
mov
push
add
mov
jo
or
leave
cwtl
jmp
lcall
call
push
sbb
lods
popa
fsubl
dec
add
addr16
sbb
in
cmp
into
push
add
rcrl
dec
ja
cmpsb
jecxz
jns
repz
pop
mov
add
fsts
sub
and
insb
jecxz
add
jae
and
in
add
sub
cs
fucom
add
popf
mov
mov
movsb
pusha
adc
jl
je
sbb
add
iret
jecxz
push
shll
mov
lods
jnp
mov
push
xor
jne
inc
xchg
pusha
out
fs
aas
xlat
cmp
add
jle
sbb
sbb
jbe
mov
push
loope
lahf
movsb
xchg
adc
push
xchg
popl
cld
adcl
mov
add
mov
stc
add
rcrl
inc
cmp
xchg
sbb
outsb
cmc
jmp
cmp
push
stos
into
jnp
mov
jle
xchg
dec
inc
jne
imull
in
dec
jns
roll
loop
sub
pop
jmp
add
scas
dec
stos
pop
adc
pop
mov
and
clc
mov
or
sbb
push
sbb
add
iret
loopne
cmpsl
scas
int3
jecxz
sti
mov
sbb
push
mov
add
jnp
xlat
mov
sbb
adc
mov
fs
test
pop
adc
inc
loope
add
int3
stos
mov
cld
cmpsb
add
aam
and
adc
sbb
js
rcll
in
jns
cli
mov
push
sarb
clc
xchg
pop
popf
push
pop
jp
xchg
add
mov
inc
and
adc
pop
or
dec
add
xchg
adc
pop
inc
sub
xorl
mov
xor
je
add
ret
movsb
repnz
test
dec
add
testb
sbb
jno
ret
fisubl
addr16
pop
test
stos
add
adc
bound
add
cmpsb
clc
movsb
scas
mov
leave
add
jle
cmp
or
sub
sbb
inc
lods
mov
add
negw
inc
inc
test
cmp
pop
arpl
add
not
in
loopne
aas
dec
cmp
jbe
add
leave
cmpsb
xchg
lock
mov
ljmp
or
dec
testb
mov
cli
insb
pop
push
mov
add
sbb
in
add
cmp
loopne
stc
test
nop
sbb
push
pop
testb
adcb
call
and
xchg
sbb
xchg
test
outsl
and
inc
ret
cltd
clc
jl
push
pop
hlt
add
adc
icebp
loope
mov
lcall
mov
loop
sbb
psrld
add
push
lcall
out
scas
pop
inc
xchg
add
dec
ljmp
sub
dec
sub
inc
add
xor
scas
pop
add
add
mov
setno
sbb
in
enter
add
iret
jb
xorb
jmp
mov
aad
mov
mov
dec
popa
cmp
mov
leave
popa
pop
push
pop
mov
out
adc
inc
loope
repz
xor
mov
mov
flds
cmpsb
cmp
xchg
inc
fildll
add
aas
mov
mov
test
dec
call
xchg
cmpsl
or
mov
sub
mov
mov
call
cmpsl
adc
fcmovnu
int
lods
and
cmp
test
add
or
cmpl
outsl
loopne
inc
scas
lea
and
mov
imul
cmp
xchg
loopne
cmpsl
adc
push
sbb
stc
sbb
arpl
loope
add
loopne
mov
stc
imul
xchg
ss
mov
sub
and
add
ljmp
cmpsl
lods
add
fisttpl
call
add
mov
sub
mov
add
push
imul
inc
push
xchg
in
pop
jns
add
mov
xor
int
in
jae
ds
jmp
cmp
sbb
je
mov
lahf
pusha
mov
test
gs
int3
jbe
push
push
outsb
adc
in
sbb
mov
add
jp
xchg
out
repz
add
pop
pop
sti
xor
in
sbbl
movsb
xorl
imulb
add
imul
add
xchg
mov
outsl
pop
xlat
add
xchg
xor
je
pop
mov
sbb
or
into
dec
jbe
popf
and
rolb
nop
xchg
sti
out
loopne
into
or
gs
jae
xor
mov
dec
mov
icebp
add
jmp
mov
push
ficompl
add
aaa
cwtl
pop
outsl
and
test
orb
dec
push
add
cltd
and
into
imul
cwtl
push
sbb
push
out
mov
jg
aas
sbb
test
test
movsl
jns
mov
xchg
sbb
inc
movsb
add
mov
push
test
test
xchg
jns
pushf
out
adc
cmpsb
sub
xor
add
dec
mov
add
jae
sar
xor
cmp
dec
movsb
fisubrs
loope
dec
xchg
outsb
fwait
mov
fldl
lret
mov
xor
adc
xchg
ret
adc
jmp
add
js
or
dec
jns
data16
adc
in
or
add
aaa
adc
inc
xchg
add
lock
sbb
fucomi
adc
sbb
xchg
pop
cmp
or
add
into
lahf
adc
sub
pushf
lods
xor
adc
xchg
out
sbb
xchg
adc
dec
orb
in
dec
sar
jge
add
outsb
adcl
pop
dec
clc
pop
dec
mov
add
mov
cmp
or
cmpsl
subb
inc
xchg
insb
mov
pop
mov
xor
lods
test
loope
adc
xchg
outsb
xor
cmpsb
jbe
inc
push
ljmp
rorb
push
popf
orb
push
outsl
idivl
jae
xor
movsb
pushf
movsl
out
loop
pop
ret
std
popf
sub
cmc
mov
add
std
dec
lds
add
fdivrl
dec
xor
pushf
scas
push
push
pusha
xlat
sbb
sub
test
fs
push
jecxz
lret
jg
jl
dec
mov
jb
push
cmp
mov
test
cmp
inc
mov
dec
hlt
sti
pusha
fldl
outsl
roll
mov
jg
sub
ja
popf
fimuls
ljmp
sub
adc
shlb
adc
in
popa
adc
add
sub
sbb
lahf
std
sbb
xor
push
cmpsb
loope
jns
repz
fadds
add
adc
jge
and
push
std
add
add
add
add
adc
cs
pop
sti
push
xchg
test
rcrl
xchg
xorl
or
xchg
aas
ror
jecxz
test
add
sbb
and
cmc
push
mov
jae
repz
add
int
add
pop
imul
push
leave
sub
mov
pusha
lods
inc
push
loope
sbb
add
mov
sbb
add
test
sub
push
cmpb
repnz
loopne
inc
repz
push
mov
push
std
add
pop
les
rcr
dec
or
add
out
pop
jmp
out
fs
add
insb
sti
stos
xchg
mov
xchg
push
pop
test
sahf
sub
mov
add
pop
negl
add
and
push
out
add
incl
data16
ss
repz
or
adc
add
xchg
cmp
or
pop
iret
pop
movsb
loope
loope
inc
sbb
loopne
cwtl
add
jge
pop
faddp
add
ja
mov
push
xchg
inc
popa
sbb
test
dec
fists
ja
mov
inc
lods
ljmp
dec
add
dec
xchg
lock
add
inc
mov
fimuls
xchg
pop
mov
lods
jl
loopne
outsl
adc
xor
add
sub
adc
fadds
mov
in
mov
std
ljmp
inc
sbb
clc
add
mov
fiaddl
or
addb
cwtl
ret
sbb
imul
pop
push
out
xor
push
mov
add
inc
pop
push
xor
and
outsb
ja
push
sub
imul
jle
loope
xor
sbb
pop
in
dec
mov
mov
or
aad
lahf
bound
dec
and
jge
fwait
popf
vpmacswd
in
pop
mov
sti
add
push
bound
mov
push
shr
scas
xlat
aas
cmp
inc
pop
out
scas
mov
add
and
ss
sar
cmpsb
sbb
dec
cwtl
addr16
xchg
add
outsb
mov
add
xchg
int3
rcrl
xor
out
dec
add
adc
xchg
outsb
test
cmp
add
in
ffree
mov
xchg
push
xchg
lret
stos
jne
add
scas
add
das
fwait
js
addl
icebp
outsb
mov
leave
mull
cs
xor
fldenv
inc
call
dec
das
add
enter
add
pop
inc
imul
incl
mov
sarb
push
loop
dec
pop
test
sti
push
insb
dec
je
mov
loop
movsb
push
lock
loope
cmpsl
sbb
cld
push
or
andb
mov
cmpsl
shrb
dec
packuswb
mov
inc
arpl
lret
imul
pop
popf
sub
add
xchg
stos
push
mov
aad
or
push
mov
addr16
xchg
nop
movsl
adc
mov
cmp
push
outsl
pop
sbb
add
and
jb
ret
jne
push
add
rcrl
aad
fbld
or
jne
xchg
xchg
in
push
xor
sbb
lcall
add
push
push
jb
lods
popa
roll
push
xchg
adc
mov
shlb
jne
fisubrs
sti
xchg
add
jae
rcl
int3
sbb
loopne
mov
adc
ds
mov
cwtl
loope
mov
or
add
pop
cmc
pop
lret
add
adcb
sbb
fiaddl
addb
test
je
test
xchg
push
loope
out
pop
add
jle
loope
or
pop
push
int
das
jg
nop
addr16
adc
mov
inc
xor
add
pop
fwait
and
ss
testl
xor
or
in
out
xchg
cwtl
push
push
mov
sahf
sub
imul
push
cld
fwait
dec
dec
jecxz
mov
mov
cmp
push
rorb
xor
lret
push
cwtl
clc
mov
pop
add
mov
add
stc
pop
xor
aaa
cmp
ss
mov
dec
imul
add
mov
add
pop
xchg
test
mov
jb
push
sti
iret
or
cli
pop
pop
addps
pop
and
into
aad
jle
mov
jo
mov
add
dec
cltd
add
repz
out
xchg
pop
ret
addr16
and
pop
daa
lock
mov
imul
mov
std
and
pop
push
or
hlt
push
sbb
jg
push
jb
mov
xor
dec
inc
popf
pop
jae
cmp
nop
lods
jnp
push
sbb
mov
inc
add
mov
mov
mov
fcompp
enter
pop
jmp
jecxz
mov
mov
add
jns
out
sbb
fcmovnb
mov
push
insl
loope
add
push
in
push
daa
pop
add
add
sbb
add
sub
adc
ret
into
mov
sahf
and
lcall
sbb
add
mov
fiadds
sbbb
cltd
add
sub
sub
dec
js
lcall
bound
lods
out
orl
mov
mulb
add
pop
cld
dec
sbb
xchg
push
or
adc
xchg
lret
jno
jmp
orl
mov
subb
add
xlat
in
inc
pusha
jno
daa
fcomp
push
mov
iret
adc
sbb
or
cmpsb
mov
loopne
loopne
lods
cmpsl
pop
and
jae
scas
out
mov
push
dec
in
sbb
add
out
add
andl
mov
sti
adc
iret
inc
add
mov
mov
jle
dec
or
inc
push
add
cli
push
adc
push
sbb
test
inc
cwtl
add
adc
pushf
lahf
imulb
shll
loope
mov
xchg
imul
xchg
pop
jg
inc
mov
xor
add
cmp
lock
xor
sarl
adcb
add
adcl
fidivs
dec
and
push
aas
push
mov
ret
jle
mov
add
or
xor
pusha
aaa
in
pause
pop
sbb
push
test
and
pop
into
inc
stc
mov
es
jns
push
cmp
jnp
orb
orl
lcall
mov
pop
addr16
gs
jae
and
int
das
inc
push
shl
dec
mov
mov
mov
cmpsb
pop
xor
stc
add
mov
adc
cmp
sbb
xchg
jp
bound
loopne
adc
inc
inc
add
pop
inc
pop
push
aam
inc
mov
rcrb
or
and
mov
cltd
aaa
add
call
pop
cs
shrb
addr16
sbb
dec
adc
in
add
loopne
repz
push
push
or
push
ljmp
add
ror
mov
imul
push
sub
xlat
xor
adc
pusha
sbb
int
fstps
test
pop
push
repnz
sbb
cmp
gs
imul
sbb
add
xchg
push
ds
add
andl
loopne
fistpl
inc
jns
inc
rcll
lea
into
std
movl
jp
cmpsb
cmp
cli
aas
sub
mov
pop
add
mov
lahf
mov
lcall
xchg
imul
loope
fldcw
cmp
outsl
arpl
jae
jbe
sbb
mov
mov
cs
cld
push
pop
popa
mov
ja
add
sub
negl
and
sbb
jecxz
pop
lret
shrl
cwtl
sbb
sub
aaa
mov
xor
loop
sbb
mov
jae
mov
inc
or
or
dec
ja
fstpt
enter
imul
mov
sbb
cmpsb
stos
and
pop
push
push
jbe
and
ret
dec
das
mov
sub
pusha
or
and
mov
inc
sbb
xor
cmpsl
and
hlt
xchg
lock
mov
mov
adc
dec
pusha
pop
fdivrl
cwtl
pop
pop
or
and
fbld
in
mov
ficoml
xor
fs
inc
pop
add
mov
les
jecxz
inc
lcall
jno
les
pusha
mov
stc
sbb
adc
inc
push
pusha
loopne
sub
add
add
mov
mov
cld
mov
jp
push
jb
ret
mov
stos
icebp
repnz
adc
mov
pusha
jno
pop
sbb
addr16
xor
jo
loope,pn
push
mov
in
mov
loope
jmp
mov
fwait
pop
mov
xor
jle
enter
push
dec
cli
mov
pop
xchg
lcall
mov
inc
push
and
sti
cmp
aaa
sbb
xchg
adc
mov
sarl
mov
dec
insb
sbb
pop
xchg
repnz
pop
mov
mov
or
adc
mov
adc
movsb
jmp
adc
int
in
push
icebp
call
and
mov
or
pop
aaa
push
xor
into
jne
sti
subb
lock
or
add
add
dec
jge
mov
popl
lock
sub
cwtl
mov
call
push
sbb
sbb
stc
cmpb
and
repnz
cld
mov
fwait
xchg
rcrb
loopne
jb
es
mov
sub
cmp
jmp
pop
ja
movsb
add
rcrb
inc
and
dec
dec
lahf
jns
sbbl
sarb
icebp
xchg
daa
lcall
into
jg
add
jge
pop
or
roll
cmp
adc
jo
test
and
mov
loope,pn
add
movsb
xchg
sbb
and
testb
xchg
leave
pop
inc
lea
lret
mov
mov
rolb
in
push
push
adcl
cli
add
inc
dec
or
ds
psrlw
dec
into
sub
mov
jg
cli
sbb
xchg
add
daa
aas
push
pop
addr16
inc
mov
movsb
iret
js
repnz
add
adc
dec
outsl
fiaddl
inc
xor
adc
jle
lret
mov
loope
push
jo
sbb
je
outsb
mov
add
adc
add
inc
call
outsb
js
jnp
adc
cmpsb
loopne
mov
fidivs
lds
fdivs
cmp
push
mov
out
jo
cmp
fwait
cwtl
scas
add
es
jmp
pop
rolb
inc
push
mov
xlat
xor
mov
xchg
mov
mov
and
and
mov
sti
lret
pop
add
cmc
add
punpckhbw
test
xor
cmpsb
shlb
scas
mov
stos
lds
ds
inc
mov
rcrl
adc
add
arpl
mov
popa
mov
fbstp
cmpsl
pusha
cmp
stos
test
cld
mov
sub
int
inc
cs
add
cmp
loopne
scas
and
xchg
lahf
cmp
add
data16
mov
push
pop
shl
xor
lods
out
pmullw
or
sti
push
test
add
jae
and
insl
incb
push
outsb
loop
mov
sbb
or
inc
jmp
mov
xor
out
mulb
or
add
popa
sub
std
andb
or
rcrl
xchg
or
push
addr16
pop
je
ss
push
iret
push
jecxz
cmp
adc
mov
and
pop
mov
mov
xchg
add
sahf
out
add
and
push
test
sbb
add
mov
xor
sub
loope
aaa
or
lahf
adc
daa
shlb
push
inc
xchg
repz
cmpsl
add
ret
sbb
fldl
mulb
or
pop
sbb
icebp
sbb
popa
out
and
stc
lcall
pushf
out
mov
out
dec
mov
and
push
lcall
sub
mov
cltd
loopne
push
add
dec
xchg
fwait
clc
roll
sahf
jae
movsb
push
js
int
jl
add
jmp
insl
push
fisttpll
xchg
add
push
lret
es
pushf
leave
mov
lret
ss
aas
adc
mov
or
mov
add
loope
leave
push
mov
sbb
loope
xor
add
aad
mov
lock
scas
inc
out
and
stos
cmp
sub
mov
repz
clc
scas
and
push
cmpsl
sbb
xor
mov
mov
mov
scas
subl
pop
icebp
xchg
add
xchg
rolb
add
or
sti
enter
cs
cmp
xor
add
inc
aaa
adc
orl
jns
popf
add
inc
repnz
sqrtps
subb
lock
ss
cld
and
scas
bnd
inc
adc
sbb
es
nop
and
cld
sub
add
and
and
pusha
cmp
push
cld
dec
in
dec
shrb
rcrl
sub
insb
dec
xchg
push
add
out
inc
ror
xor
insb
sbb
cltd
pusha
mov
ss
popa
jb
or
rcr
add
popf
andl
xchg
push
xchg
lock
push
push
add
and
cmpsl
mov
jae
mov
dec
sbb
sbb
cs
cltd
testl
ret
cmp
add
fldt
pop
cmp
arpl
ret
inc
add
out
add
lcall
add
test
or
fwait
add
pop
xlat
inc
xor
faddl
shll
dec
popa
xor
add
adc
add
jmp
mov
add
mov
jecxz
aad
push
add
jnp
ret
xchg
addb
xchg
sahf
or
je
test
test
xchg
hlt
popf
shrb
push
cmp
and
sti
sarl
jmp
aam
push
mov
add
add
rolb
or
add
sahf
pop
inc
dec
iret
mov
in
inc
fsubp
popf
scas
add
mov
or
cs
repz
inc
mul
mov
stos
lret
test
add
mov
jl
mulb
daa
cmp
loopne
and
or
jo
add
cmp
mov
aam
inc
mov
imul
mov
xor
loopne
cmp
jecxz
push
inc
lcall
lods
or
xor
ret
popf
cli
jle
add
ljmp
xchg
or
fldl
nop
aad
stos
rclb
mov
rorl
and
add
repz
in
mov
adc
sbb
sub
clc
xchg
dec
pop
push
out
mov
sti
add
inc
lods
loopne
sbbb
repz
rcrl
jge
add
mov
mov
mov
xor
out
push
pop
add
rorl
push
loop
test
cli
mov
xor
ret
adc
cmp
mov
xchg
lds
mov
sub
or
adc
mov
lods
arpl
int3
add
loope
sub
sarb
add
outsb
push
test
jo
pop
xor
je
inc
pusha
popl
jne
adc
mov
add
add
push
pop
add
loope
rcrl
adc
lcall
mov
das
fwait
adc
cld
push
mov
pop
cmpsb
outsb
mov
push
aad
js
mov
or
add
push
les
add
mov
js
mov
loop
pop
cs
pop
add
push
jecxz
roll
push
pop
adc
add
fwait
and
sub
and
std
push
fists
dec
xor
es
inc
lahf
std
mov
in
fsub
push
and
or
notl
add
inc
xchg
sbb
cmpsl
dec
and
sub
testb
js
cmp
inc
add
push
sub
cld
cmp
lea
or
popa
mov
out
icebp
adc
mov
ret
mov
bound
push
in
mov
pop
rcr
add
lret
popf
sbb
sbb
mov
or
outsl
add
and
xchg
shl
add
xchg
or
leave
pushf
dec
xchg
jg
pusha
fbld
cmp
and
xchg
movsb
and
add
xchg
mov
fdiv
adc
xor
add
mov
and
es
add
jp
mov
add
fcmovu
cmovl
pop
rorl
sbb
flds
pushf
jmp
std
repnz
loopne
loop
mov
push
xchg
lea
inc
and
adc
mov
or
sbb
cmp
mov
int
push
add
xchg
mov
jp
and
stos
xchg
lret
bound
lods
sbb
push
add
xor
xor
std
aad
add
ds
cli
stc
addl
mov
aad
cmpsb
ss
and
popa
stos
scas
imul
jb
adc
sub
sub
mov
push
jo
lret
out
cmpb
out
xchg
xchg
in
jb
or
cmp
add
sub
push
or
aaa
mov
imul
add
leave
xor
add
add
dec
pop
ret
pop
dec
fists
in
pop
loop
xchg
xor
movsb
mov
mov
inc
fcoml
mov
and
scas
pop
jne
pop
add
sti
jle
lret
dec
repnz
push
mov
cwtl
mov
into
and
dec
into
gs
xor
aad
sbb
and
dec
add
or
movsl
flds
aam
cmc
cmpsl
xchg
cmp
sub
ret
add
pop
adc
insb
and
xchg
add
jbe
imul
add
push
sbb
inc
adc
cmpsb
and
ffreep
mov
cmc
adc
sub
adc
add
outsb
call
loopw
add
movsb
push
mov
or
sub
ret
cmpsb
jbe
or
and
ret
add
mov
fbld
and
scas
in
and
aas
mov
sbb
xlat
xchg
cli
or
add
mov
aas
push
ret
dec
shl
dec
push
jae
xor
jb
ret
pop
inc
jnp
jne
insl
xor
cmp
xchg
pusha
aaa
or
aam
pop
sbbb
xchg
pushf
adc
nop
jl
ss
outsl
sbb
adc
cmpsb
mov
and
jl
psraw
jl
inc
fdiv
adc
fnstenv
scas
mov
lret
mov
aam
and
bound
repz
add
pop
lods
test
pop
mov
addr16
outsb
ficoml
lret
add
loopne
jl
iret
and
mov
pop
inc
out
ret
adc
xchg
pop
xor
jp
cmp
mov
and
sahf
xor
jle
add
jns
ljmp
sbb
add
sbb
sub
mov
and
add
sbbb
mov
mov
enter
out
pushf
loope
notb
jno
sbb
xchg
inc
lret
adc
daa
pop
out
jbe
adc
cli
loope
mov
xchg
xchg
adc
scas
xor
dec
inc
les
enter
in
jp
or
or
stc
sub
cmpsl
jns
adc
xorb
movsb
mov
fldenv
pop
push
arpl
dec
xlat
add
push
pop
ret
jbe
push
xchg
add
iret
cs
in
and
aad
mov
add
jge
mov
loopne
das
add
aad
sub
fdivr
add
enter
adc
ret
inc
pushf
adc
inc
add
scas
lahf
pop
dec
shlb
push
icebp
xchg
add
arpl
into
lahf
add
mov
or
or
stc
add
mov
mov
int
ljmp
dec
aaa
jne
xor
mov
cltd
in
cs
stos
and
mov
jge
sub
jbe
je
pop
pop
sbb
stos
dec
lcall
mov
in
add
pop
sub
fdivs
cmc
or
sbb
and
fnsave
mov
pusha
adc
mov
mov
das
and
xor
push
mov
not
add
sti
je
ficoml
arpl
cmp
rolb
popl
in
jg
xor
add
sbb
and
call
xor
int
sbb
into
and
test
popf
popf
jmp
adc
or
sub
scas
lret
add
aas
mov
sbb
out
add
add
outsl
jbe
jge
xchg
insl
movl
xor
sub
push
pop
sbb
roll
cs
and
and
jmp
mov
out
pop
lock
nop
mov
dec
test
xchg
pusha
and
add
inc
add
xchg
sub
setg
push
jecxz
rorl
mov
mov
mov
ret
push
cmp
or
addl
inc
rolb
add
adc
fildll
xor
aaa
cld
ds
mov
leave
stos
and
pop
jno
loopne
cmp
jb
and
pop
and
cmc
jo
scas
scas
pop
loope
and
ljmp
push
jbe
mov
dec
xor
ljmp
add
dec
or
fmuls
fwait
add
lahf
das
sub
sub
popa
pop
lods
loop
jl
push
int
lea
dec
mov
xchg
mov
outsb
jae
pusha
sti
xor
loopne
or
fisttpl
hlt
add
add
loope
xor
xor
sbbl
sbb
add
std
test
fnstcw
jne
add
lock
add
jns
jmp
push
pop
add
lods
sti
loope
xor
jnp
mov
inc
arpl
adc
cmp
loope
inc
fs
or
js
push
add
sub
sahf
data16
and
adcb
das
add
cmp
sub
mov
jle
pop
jae
xor
mov
out
lods
mov
add
sbb
add
test
mov
pop
or
and
push
shll
mov
imul
xor
mov
sub
movsb
dec
inc
sarl
outsl
stos
cmp
pusha
push
insb
dec
mov
call
daa
cmp
test
sbbl
mov
fdivrp
in
and
sbb
push
lahf
insb
xchg
add
mov
push
cld
orb
push
mov
adc
shlb
repz
mulb
mov
test
add
imul
adc
add
cmp
xchg
loopne
inc
inc
push
push
add
ret
add
cld
inc
dec
fstps
and
jb
push
mov
add
jl
icebp
jge
outsl
loop
jg
shr
shrl
loopne
inc
cs
cmpsb
sbb
adc
inc
sub
and
fcomip
fists
dec
and
mov
popa
cld
les
push
mov
out
add
bound
add
inc
sub
jmp
jbe
ja
ror
outsl
cmpsl
and
rcrb
shlb
negb
fwait
mov
popa
sarb
lds
ljmp
add
enter
cmp
xchg
pusha
sub
in
jns
das
imul
push
fnstcw
jge
add
dec
add
mov
inc
movsl
clc
mov
mov
sub
xorl
push
add
movsb
scas
mov
sbb
xchg
and
push
xor
inc
push
or
out
dec
das
add
rcll
sti
inc
fimull
loope
scas
mov
lahf
sbb
popf
sub
add
inc
test
mov
or
adc
add
data16
iret
and
add
jp
mov
clc
sbb
jb
add
cmp
push
add
ds
nop
imull
popf
and
xor
clc
inc
add
cmp
sbb
sbb
jle
add
xor
fs
xchg
ljmp
and
das
cmp
test
inc
popf
mov
cmpsb
loopne
lods
lea
adc
sahf
lret
add
xor
repz
sub
int3
sarl
into
pusha
dec
push
xor
jl
jbe
push
movsl
mov
lods
stos
stos
pop
mov
or
add
loop
mov
xchg
repz
aam
sbb
jae
jo
addb
mov
push
add
push
jnp
cs
push
add
adc
xchg
mov
or
enter
ja
cmp
pop
add
xor
movsl
and
sub
add
je
int3
xchg
call
cmpsb
push
cmpl
cwtl
scas
xchg
mov
movsb
or
cmpl
mov
fnsave
add
adc
rcrb
andb
adc
and
cld
call
cmpb
leave
cmp
mov
jae
lock
jb
call
cmovne
sub
and
mov
dec
shll
out
inc
pop
add
fists
loopne
add
or
sarb
and
sbb
sbb
push
add
sub
add
cmpsb
test
pop
jno
add
xchg
add
cmpsl
mov
outsb
sbb
add
scas
jp
inc
loopne
cmc
and
dec
inc
sbb
xor
mov
adc
enter
scas
dec
inc
mov
cmp
nop
push
push
roll
pop
or
out
sti
in
cmpb
mov
jle
std
cltd
mov
mov
mov
adc
push
mov
inc
fnstsw
sahf
mov
push
popf
incl
out
and
out
sub
scas
pop
mov
js
sub
adc
sub
adc
dec
mov
or
xor
jg
xchg
call
add
fmul
add
out
fs
hlt
fwait
push
stos
sbb
and
sub
sub
ret
add
or
add
aad
mov
rol
pop
xchg
or
sub
pop
dec
loopne
mov
jns
cltd
cmp
mov
fbstp
add
rcrl
and
popa
xor
psllw
jo
iret
insl
adc
xchg
jnp
in
shr
cltd
loope
and
push
sbb
out
jle
nop
pop
stos
rcll
adc
jno
jle
test
in
mov
sbb
push
dec
add
pop
xchg
mov
mov
inc
js
push
add
pusha
jne
out
xor
sbb
ret
fildl
lcall
nop
loope
adc
aam
call
jnp
mov
dec
stc
inc
or
popa
pop
jg
or
and
jecxz
in
loope
fcmovb
or
imul
dec
clc
inc
jmp
pop
push
repnz
insb
dec
push
fiaddl
sbb
mov
xor
push
xchg
add
scas
jno
cltd
xchg
and
sbb
jg
push
push
add
pusha
push
mov
pop
inc
in
add
aam
sbb
or
add
mov
daa
incl
scas
jbe
cli
dec
data16
and
xchg
xchg
aaa
add
sbb
lods
adc
dec
call
pushf
add
add
mov
js
pusha
adc
mov
cwtl
dec
in
add
imul
in
jmp
sbb
clc
mov
push
and
fcmovnu
je
pop
jl
lods
daa
add
add
push
mov
rclb
mov
jbe
addl
scas
les
and
dec
mov
aad
fmull
test
dec
or
push
les
or
rorl
mov
push
push
mov
pusha
mov
xchg
push
xchg
add
add
push
loopne
sub
out
int
fcoml
adc
add
lods
icebp
rcrb
leave
mov
es
popa
dec
mov
mov
add
or
push
adc
into
das
outsb
mov
dec
fucom
sbbb
aam
jecxz
or
enter
mov
repnz
xchg
movsb
cmp
xor
fs
cltd
jnp
aas
notl
and
pusha
push
or
adc
std
add
iret
pop
sbb
hlt
mov
pop
lcall
test
shl
sbb
adc
add
jge
mov
adc
mov
or
dec
dec
push
xchg
and
out
cmpsl
xor
add
push
xor
das
or
cli
in
cltd
fmuls
std
xchg
add
lcall
pop
add
push
pushf
popf
jo
icebp
enter
nop
xchg
or
cmpb
inc
xchg
movsb
mov
outsb
mov
lret
cmc
ret
cmp
popa
inc
add
sub
add
mov
repz
test
insb
scas
cmc
and
popf
xchg
pop
leave
into
ljmp
xchg
jnp
lcall
push
sbb
mov
sbbl
inc
adc
jge
iret
sub
push
and
das
dec
sti
out
xchg
add
ja
jnp
mov
sti
test
mov
and
and
inc
pop
call
js
mov
or
mov
add
mov
add
dec
rcrb
add
icebp
cmp
xchg
orb
add
adc
add
arpl
hlt
fiadds
or
lock
cmc
mov
sbb
add
xchg
mov
mov
add
or
mov
shrb
add
dec
xor
cmpsl
push
aas
add
repz
pushf
xor
push
sbb
js
ljmpw
mov
mov
pop
xchg
xor
aaa
stos
nop
hlt
jle
add
sbb
pop
and
and
gs
cltd
push
out
popw
faddl
mov
movsl
fsubrs
push
add
hlt
xchg
mov
negl
xchg
add
adc
add
ficoms
repz
cmp
subl
push
and
add
add
sub
lock
daa
inc
outsb
mov
addr16
mov
add
sub
mov
fadds
rolb
pop
lret
push
adc
pop
adc
pusha
sbb
dec
sbb
mov
add
push
mov
mov
in
cmp
mov
add
call
inc
push
jne
xor
mov
mov
roll
push
dec
scas
sbb
pop
and
jbe
xor
ret
sbb
pusha
add
sbb
add
in
mov
in
sbb
pusha
mov
jae
inc
pop
adc
fmull
daa
sbb
add
test
pop
cmp
loope
sbb
push
and
cmpsb
mov
mov
pop
loopne
or
inc
aas
in
add
ret
add
lea
or
push
ficoml
inc
cmp
mov
movsl
testl
and
add
sti
xor
fldt
addb
iret
mov
and
lock
push
add
add
pop
into
cmp
add
push
movsl
xor
adc
in
imul
ret
lcall
inc
loope
lods
data16
sbb
sub
cmp
add
iret
pop
dec
add
int
add
add
lret
daa
cmp
adc
fwait
xchg
aam
icebp
add
jne
push
cli
fistl
popf
inc
add
rolb
and
and
stos
cmp
cwtl
pop
push
stc
gs
add
rcrl
andb
jo
adc
xor
out
add
test
jae
call
mov
rolb
mov
dec
or
jp
imull
scas
scas
shrb
add
ficoms
pop
add
push
or
popa
mov
or
and
ret
jne
rcll
sbb
dec
shlb
insl
push
fldl
dec
xchg
gs
jno
ret
nop
pop
mov
je
test
xchg
dec
out
in
inc
inc
fwait
outsl
movsb
xchg
add
jl
mov
dec
mov
fdivrl
scas
jo
or
adc
pusha
mov
lock
hlt
add
dec
inc
and
pop
ja
mov
push
fnsave
fildl
leave
pop
pusha
cwtl
mov
cmpsl
mov
add
ror
shrb
jp
dec
mov
add
lock
cmpsw
out
inc
adc
adc
scas
cld
jnp
push
cmp
ret
xchg
gs
jo
jne
mov
les
mov
add
adc
add
movsl
xchg
icebp
mov
loopne
sbb
or
dec
stos
lldt
jmp
inc
sbb
push
mov
add
arpl
ljmp
rcrb
dec
cwtl
sub
sti
and
jns
loope
jo
cmpsl
jmp
loopne
test
push
cmp
xchg
fyl2x
pop
sub
mov
add
daa
push
int3
jb
xchg
sub
inc
pop
das
xor
nop
int3
jl
ret
and
lret
push
jne
dec
pop
pusha
cs
mov
mov
loope
sub
js
dec
xchg
jns
fcmovnbe
add
imul
mov
sub
lods
mov
call
mov
mov
scas
in
add
lea
sub
adc
and
push
sub
pop
push
cmp
push
popa
rolb
xor
shll
and
cmp
adc
jle
mov
add
ffree
insb
jecxz
push
xchg
jg
imul
bnd
repz
jge
outsb
adc
fsubr
mov
stos
mov
mov
fs
dec
push
aam
out
loopne
jnp
repnz
add
mov
rolb
sbbb
add
mov
icebp
xchg
or
mov
dec
int
inc
mov
ret
or
jb
add
xorl
movsb
repz
adc
xor
ret
jns
mov
xchg
test
add
xchg
add
dec
cltd
cmpsl
mov
aaa
add
or
xchg
paddusb
dec
daa
or
pop
cmp
sub
jp
movsb
pushf
pop
ret
movsb
mov
mov
adc
in
mov
scas
sbb
loope
xor
cmp
jmp
clc
pop
out
sahf
lahf
mov
jp
xor
rcrl
shrl
mov
mov
add
out
xchg
and
ljmp
xor
pusha
jo
rol
add
test
add
mov
add
jae
loop
xchg
jo
aas
lcall
push
and
sbb
andl
mov
fcoms
sbb
pop
and
push
mov
mov
adc
xor
mov
sbb
ret
arpl
xchg
cmp
xor
sbb
lock
inc
in
xchg
pop
and
dec
scas
cmpsb
inc
adc
clc
fwait
push
lahf
mov
sbb
notl
hlt
es
daa
add
add
push
insl
add
pop
or
notl
or
dec
pop
adc
les
inc
add
icebp
ja
cmp
add
cmc
push
je
xchg
mov
scas
adc
daa
add
cmp
add
cmpsl
dec
pusha
jmp
cmp
push
inc
pop
mov
cli
cmpsl
cmpsb
mov
dec
sub
xchg
add
mov
repz
gs
add
out
add
fistpl
loop
das
pop
add
sbb
add
ja
icebp
test
loope
inc
sbb
xchg
sub
cmp
nop
add
xor
sbb
std
pop
outsl
loopne
fbstp
push
scas
pop
add
shll
fs
xor
sbb
push
sbb
mov
xchg
inc
or
push
lahf
shrb
outsb
mov
jp
jb
aam
mov
lcall
fdivs
testb
cmp
roll
daa
shrl
mov
popa
sbb
or
pop
adc
testb
popf
mov
jae
or
pusha
cwtl
fdivs
pop
sbb
and
pop
xchg
movsl
pop
pop
rol
or
adc
and
sbb
sbb
pop
popf
popa
aam
cli
and
movsb
add
add
mov
push
out
dec
outsl
or
adc
lock
xor
jle
lods
ds
lret
sbb
shll
or
loopne
shrd
cmpb
sbb
inc
ljmp
pop
dec
in
sbb
push
push
rolb
in
adc
push
inc
pop
repz
loop,pn
add
mov
add
adc
and
stos
pop
leave
add
lods
adc
dec
cmpsl
fcomip
add
xchg
iret
add
mov
negb
icebp
mov
pop
sarl
ret
stos
add
inc
or
lahf
jl
js
and
mov
mov
std
pop
fs
dec
jle
add
and
mov
push
int3
push
movsb
testb
adc
push
jae
add
js
cld
imul
scas
filds
or
adc
popf
dec
movsl
cmpsl
inc
es
and
mov
jb
xor
aad
xor
sbb
push
add
sub
add
pop
inc
aam
and
add
out
and
sbb
pop
add
adc
xor
mov
cmp
and
lret
scas
stos
ljmp
pop
mov
loop
mov
add
jnp
jecxz
jae
pop
dec
and
movsb
xor
sahf
jbe
lds
loopne
push
lret
pop
mov
or
nop
subb
aaa
jo
xchg
lea
xor
popf
cld
xor
add
ret
push
xchg
lahf
shl
xchg
fdivs
mov
mov
loop
fcoml
or
sbb
add
sarl
xchg
rorl
mov
add
aas
es
add
mov
fimuls
add
add
sub
xchg
adc
xor
pop
mov
fwait
bnd
fwait
ret
mov
inc
adc
ret
and
or
and
dec
or
sbbl
insb
mov
ja
rclb
add
mov
add
ror
add
mov
outsl
cmp
mov
adc
and
in
mov
adc
or
lea
push
push
leave
iret
icebp
mov
popf
outsl
dec
mov
jno
add
dec
sub
fstps
insl
pusha
push
cmp
data16
popf
sbb
jmp
imul
xlat
mov
add
adc
std
lcall
jb
ljmp
dec
and
in
jb
xchg
in
sbb
jno
jne
adc
mov
add
into
push
pop
inc
and
cltd
out
add
gs
add
and
out
loopne
push
addl
and
lcall
mov
sbb
mov
mov
lock
loop
mov
pop
jbe
call
add
int3
sub
inc
jle
pop
sti
shrb
mov
bound
fwait
nop
incb
insl
mov
test
mov
cltd
push
and
push
xor
sub
xchg
aad
xor
inc
hlt
xchg
shrl
push
xor
into
aaa
pusha
push
fsubs
sub
or
imul
jbe
gs
push
cmove
jecxz
xor
and
test
or
stos
loopne
xchg
sub
pop
add
add
sbb
mov
dec
shll
rol
ja
jo
mov
dec
and
outsb
mov
scas
add
sub
cmpsl
mov
aaa
xor
jp
sti
xchg
jo
pop
dec
fsubs
cwtl
jl
jle
sbb
fs
lcall
push
inc
and
lods
rolb
dec
add
jle
add
sbb
rcr
call
mov
out
dec
outsb
aas
out
sub
sub
bound
jb
popa
lea
jecxz
stos
ss
adc
testl
arpl
sub
cwtl
pop
jnp
bound
and
stos
pop
fs
test
mov
add
mov
loopne
loope
mov
inc
in
mov
add
filds
mov
mov
out
ret
jle
test
push
cmp
movsb
pushf
aas
add
cmp
loope
scas
or
cld
cmp
fldl
jmp
cmp
fdivrs
sbb
mov
add
subl
jl
sbb
and
add
dec
lods
imul
lods
add
sbb
jecxz
pusha
lahf
cmp
leave
inc
cltd
push
insl
push
sbb
test
sbb
leave
out
add
pop
mov
jns
imul
push
ret
sub
or
mov
jnp
add
bound
mov
pop
lds
mov
gs
lret
jno
xlat
xor
ja
push
mov
xchg
std
loopne
popf
sub
push
pop
pushf
rolb
sub
dec
add
lds
xor
mov
mov
mov
push
popf
or
xlat
add
add
cltd
std
xchg
loope
stc
mov
xchg
imul
add
mov
mov
dec
and
in
sbb
add
or
scas
aaa
loop
das
jne
add
js
out
mov
add
loop
add
icebp
clc
jmp
mov
inc
add
mov
ret
adc
add
out
mov
dec
fcomp
jecxz
int
add
data16
mov
fists
push
mov
mov
cmp
movl
adc
out
popa
mov
lahf
inc
add
enter
mov
sbb
or
addl
push
jecxz
xor
outsl
jp
adc
jnp
stos
scas
loopne
test
sub
and
pop
push
add
daa
add
fldln2
bound
imul
and
es
lahf
xor
cld
into
dec
or
add
stos
dec
sbb
test
add
scas
addr16
xor
jb
pop
mov
lock
sahf
add
fsub
mov
loope
std
jle
or
jae
xor
add
into
xchg
mov
ficomps
pop
sbb
imul
push
je
cmpb
add
push
push
repz
mov
or
aas
jl
addb
mov
adc
mov
xchg
ljmp
adc
push
add
es
gs
les
sbb
popa
or
mov
add
xor
adc
sti
cld
js
dec
mov
lret
push
mov
loope
cwtl
dec
sti
add
outsb
pop
test
out
lahf
jp
outsl
fimull
and
fsubr
add
repnz
stos
dec
dec
add
mov
cmpsb
sbb
add
or
jl
scas
int3
push
add
sti
push
adc
lock
lcall
bnd
xchg
or
ljmp
in
jl
push
pusha
adc
inc
add
jno
xlat
std
addl
cltd
sbb
jne
shrl
mov
or
xchg
sub
mov
aaa
idiv
pusha
or
adc
mov
test
add
cmp
cs
aas
xor
test
aaa
popf
pushl
push
mov
xchg
es
push
pusha
ficomps
adc
data16
pop
imul
mov
add
xlat
mov
sub
call
stc
and
adc
push
mov
xor
lcall
fbstp
xor
jb
jmp
or
mov
sbb
xor
xor
mov
xacquire
lods
pop
push
add
sub
out
and
out
adc
cli
mov
insl
in
push
add
jns
test
pop
or
and
jl
push
iret
sbb
inc
pusha
add
notl
repnz
roll
add
popa
lret
fwait
adc
sbb
divb
mov
pop
mov
daa
outsb
pop
repnz
aad
stos
dec
inc
nop
cmpsl
xor
cmpsl
mov
mov
pop
mov
sbb
bound
andb
adc
test
sahf
dec
mov
mov
cmp
xchg
push
out
test
ss
mov
xor
ret
or
outsb
mov
cmp
xor
mov
pop
add
adc
dec
cli
xor
negl
mov
sbb
add
imul
xor
mov
pop
pop
add
and
cltd
inc
mov
cltd
cmp
ret
cmpsb
sbb
or
or
add
out
ss
jecxz
cmpsb
add
rolb
jo
sub
es
sbb
adcl
aaa
test
add
mov
adc
pop
xchg
addr16
cmpl
cmp
sbb
xor
imul
pop
jbe
fwait
add
mov
testl
ja
iret
push
cs
add
mov
in
loope
adc
dec
stos
hlt
arpl
mov
or
adc
loope
add
and
or
push
sbb
mov
or
mov
mov
and
icebp
pop
insl
and
inc
popa
xor
in
inc
sbb
xchg
adc
and
call
add
outsb
decb
lcall
stos
std
add
xchg
mov
cld
jb
cmp
fs
mov
decb
cmp
mov
shrb
sahf
cmp
loope
xchg
xchg
or
test
ret
mov
mov
movsl
sub
jb
xor
mov
jle
jbe
ffree
pcmpgtd
sahf
or
cltd
movsb
sarl
or
in
aaa
mov
add
aas
dec
xchg
loope
subb
mov
iret
rcrl
and
or
scas
stc
and
or
or
add
repz
inc
loopne
xchg
mov
fsave
js
repnz
cmc
add
stc
lods
mov
incb
inc
mov
jecxz
mov
inc
sbb
je
sahf
mov
stos
in
icebp
call
sbb
or
nop
lret
pusha
fadds
inc
mov
add
push
scas
andb
inc
add
dec
xchg
push
dec
inc
sub
dec
sti
jns
icebp
push
inc
ret
adc
add
loope
push
aad
jle
out
add
aaa
out
cmc
push
hlt
pop
out
jge
daa
shr
mov
pop
pop
or
leave
pop
mov
inc
mov
aad
xchg
js
aas
pop
mov
sbb
movb
test
out
xchg
adc
mov
add
std
jo
outsb
cmpsl
cmp
ror
pop
clc
insb
hlt
adc
adc
push
add
loope
mov
lods
ds
sahf
or
push
dec
cmp
lea
pop
adc
mov
inc
icebp
lock
and
iret
or
or
stos
xor
add
mov
sub
imul
add
push
in
lods
rclb
rol
mov
ret
adc
lds
adc
int
mov
push
loop
enter
add
pop
sub
jno
adc
mov
ljmp
cmpsl
daa
xchg
cltd
call
xor
sbb
add
adc
fwait
and
lcallw
les
dec
ljmp
sub
sbb
add
test
cmp
int3
lds
mov
mov
push
add
cmpsl
lahf
dec
fmuls
xchg
push
jecxz
mov
out
dec
lret
out
xchg
sub
or
test
fmull
cltd
dec
add
xor
cmp
scas
scas
insl
add
mov
gs
or
add
cmp
push
add
adc
add
push
popf
jno
push
xlat
lret
test
xchg
pusha
rcll
jg
adc
xchg
mov
rcl
lds
movsb
aam
jge
sbb
loopne
fisttpl
lods
pop
dec
add
xor
in
jo
es
sub
mov
add
rcrl
pushf
add
xor
jb
fidivrl
addr16
pop
sbb
add
jae
push
add
je
sub
xor
sbb
push
jns
lcall
cmp
jecxz
pushf
add
cmp
gs
mov
jg
or
dec
jb
jo
loop
sbb
add
cs
dec
pop
adc
out
mov
inc
jecxz
imul
fwait
add
adc
mov
mov
dec
jbe
add
mov
std
gs
movsl
xor
cltd
and
pushf
pop
popa
stc
push
ret
ficoml
aad
dec
xor
add
imul
cmp
and
push
add
stos
push
cmpsl
xor
push
add
js
and
outsl
cmp
roll
aaa
add
push
xor
in
dec
jmp
insb
pop
adc
lock
or
cmp
mov
mov
xchg
mov
and
adc
sahf
cmpb
jge
incl
cmc
push
arpl
add
xchg
call
clc
add
or
inc
data16
mov
jb
bound
xchg
ljmp
aaa
mov
sbb
sbb
cmp
sahf
sbb
and
mov
xor
mov
inc
mov
insb
scas
sub
into
sub
outsb
pusha
push
lods
xchg
mov
xor
sub
clc
stos
cwtl
and
movsb
add
test
jg
mov
sub
mov
hlt
cmp
shll
dec
mov
movsl
add
cmp
add
insl
shlb
dec
pop
imul
cmpsb
add
test
jg
sti
mov
fwait
mov
test
lahf
add
sbb
ret
mov
mov
mov
adc
jle
jb
push
cmp
add
outsl
xchg
aad
sbb
movsl
mov
pushf
das
test
cld
push
jmp
aam
mov
outsb
cmp
mov
lods
xchg
xor
add
negb
add
sahf
movsl
fisubs
inc
push
inc
push
ds
out
dec
add
and
out
add
pop
testb
xchg
fcomi
jl
pop
add
lds
sar
sub
mov
adcb
sbb
mov
mov
jg
push
adc
scas
int
aas
jl
ret
cmp
pop
jmp
mov
into
lea
sahf
dec
xchg
adcb
push
loopne
sub
cltd
inc
dec
mov
and
cmp
sub
std
cwtl
rcll
sub
int3
mov
mov
or
add
jno
sub
xchg
and
add
insb
lea
std
pop
into
mov
push
push
mov
dec
add
adcl
imul
pop
pushf
and
ljmp
inc
mov
addl
add
sti
jge
pop
mov
mov
fstps
repz
pop
ror
scas
mov
sbb
lret
aam
add
dec
push
std
add
outsb
leave
jl
test
clc
adc
xchg
in
int
add
push
fmulp
aaa
jmp
sub
lds
mov
fs
mov
add
or
jne
add
ja
pop
repnz
xchg
cmpsb
lret
shll
jae
add
sub
daa
xchg
inc
or
loopne
icebp
xchg
fstpl
rcll
in
test
add
adc
in
push
jle
shrl
sbb
addl
push
les
mov
inc
pop
je
testb
mov
aam
insl
xchg
push
out
sbb
std
pop
cmp
xorb
jmp
movsl
insl
dec
icebp
adc
jmp
xchg
jae
cmp
jns
push
inc
sbb
pop
std
rcrl
push
stos
add
xchg
loop
out
add
in
inc
loope
mov
and
sub
out
pop
cmp
adc
push
sbb
mov
jge
inc
mov
adc
leave
xor
es
test
in
add
mov
pusha
or
add
mov
test
stos
mov
loope
sub
jo
pop
jno
pusha
pop
jle
jns
test
mov
adc
jae
loopne
mov
xor
mov
dec
leave
cmp
add
in
fnstsw
loope
bound
loopne
aaa
shl
dec
in
push
fistl
xchg
and
filds
cmpsl
pop
sbb
hlt
popa
or
adc
mov
aam
push
call
daa
mov
mov
sub
or
gs
pop
scas
and
push
dec
jae
cltd
loope
cmp
insb
sbb
mov
test
xchg
add
push
pop
push
add
fs
pop
jno
sbbb
xor
or
or
imul
push
sysret
lret
or
or
xchg
ret
add
mov
adc
dec
mov
das
imul
imulb
pop
sbb
cs
xor
popf
jge
aad
bound
cmpsl
sbb
dec
pop
loopne
sub
das
xor
add
mov
dec
add
shlb
fcomip
repz
orb
test
pop
sbb
sub
inc
cmp
inc
and
fistpll
adc
add
rorb
and
pushf
sbb
xchg
fs
std
or
loope
fsubs
sbbb
sbb
flds
inc
xor
mov
add
aaa
jmp
das
out
mov
test
jo
pop
aaa
lds
pop
data16
sbb
or
lret
les
mov
pop
scas
pop
int
add
mov
pusha
pushf
pop
push
out
push
push
repz
rol
mov
hlt
pop
adc
or
in
add
and
xor
or
push
repz
jae
add
int3
shrb
sbb
push
lahf
cmp
loopne
add
daa
nop
cmp
add
into
cwtl
in
das
sbb
test
add
rcll
scas
pushl
decb
sub
add
call
out
sahf
loope
icebp
mov
or
cli
add
imul
clc
sbb
xor
and
mov
add
repnz
push
nop
dec
imul
lods
xchg
lock
cs
add
xchg
jnp
pop
dec
cmpl
mov
les
stos
repnz
mov
dec
das
arpl
aas
clc
pop
jle
xchg
lcall
cli
mov
jmp
jno
adc
fists
sti
add
sbb
imul
sahf
stos
jnp
rep
icebp
pusha
sub
push
cmp
sbb
pop
inc
mov
mov
outsb
les
mov
scas
xor
cltd
repz
dec
push
add
in
gs
adc
cmp
add
mov
xchg
aas
add
ja
or
shrl
jge
jo
xchg
adc
sbb
fbstp
es
pusha
sti
stos
popa
je
gs
sahf
and
imul
xor
push
mov
adc
jne
repz
sub
or
cltd
jnp
sbb
imul
into
mov
add
jno
pop
cmp
inc
dec
popa
or
sub
or
lret
push
mov
fiaddl
fcomps
mov
xchg
adc
mov
outsl
aas
xor
jecxz
pushf
sbb
mov
mov
and
cmpsb
stos
cmp
xor
pop
add
mov
adc
xor
sub
cwtl
cli
xchg
jg
lea
xchg
adc
jmp
insb
dec
aam
loopne
popf
jo
mov
xchg
clc
mov
mov
in
mov
jecxz
dec
inc
rep
stc
loopne
jle
xchg
jmp
sbb
loope
xor
jecxz
pop
sbb
cld
xchg
sbb
xchg
les
jle
mov
pop
jns
sub
xor
ljmp
xor
loopne
push
mov
mov
sub
xchg
push
inc
xor
push
jno
lods
aaa
xchg
mov
loope
sbb
andl
xor
inc
aam
std
insl
call
inc
push
popf
orb
iret
mov
add
flds
les
mov
repz
bts
sub
pop
adc
add
insl
dec
sbb
shll
sbb
pop
call
in
pop
fadds
or
jmp
inc
adc
adc
test
movb
xchg
and
push
fists
in
xchg
mov
pusha
add
mov
loopne
adc
adc
ss
add
mov
inc
jo
mov
cmp
ds
pop
push
repz
aad
cmc
sub
add
pushf
and
rolb
rorl
lret
icebp
and
ja
loopne
in
scas
xchg
sahf
add
fs
subb
inc
inc
push
bound
inc
sbb
out
stc
popa
rcr
out
add
mov
inc
xchg
xchg
mov
mov
mov
jo
scas
movsl
mov
sbb
jle
sbb
adc
mov
in
nop
ficomps
xchg
xchg
xchg
inc
and
insb
push
jg
and
xor
lcall
xchg
pop
dec
sbb
cmp
push
add
outsb
iret
rcll
icebp
cmc
add
lret
fdivs
ret
xlat
mov
and
push
test
and
and
mov
inc
gs
pop
loopne
pop
test
fwait
sbb
mov
add
popf
fnstenv
sbb
into
jp
pop
cmp
call
enter
repnz
lea
icebp
xchg
push
out
add
shlb
int3
out
xchg
mov
add
push
push
iret
mov
mov
push
add
xchg
and
inc
add
rol
or
add
std
cs
and
inc
lret
cmpsb
add
pop
and
jns
sub
shrb
pusha
sahf
test
cmp
ds
je
sbb
add
jg
rorl
add
iret
cmp
stc
loope
outsb
pop
xchg
add
mov
mulb
invd
fnsave
cmp
enter
jb
stos
sbb
sbb
mov
fstpt
loope
dec
sbb
imul
pop
jecxz
add
jbe
and
dec
push
push
lock
stos
ds
out
mov
cmp
sar
push
add
dec
daa
jge
loopne
or
pop
lds
fistpll
mov
sbb
sub
add
xor
mov
push
inc
aad
jo
adc
add
outsl
cmp
or
sti
js
push
add
pop
jbe
sub
incl
lods
nop
adc
test
ret
sub
es
cmp
orb
movsl
adc
and
outsb
add
repz
out
dec
mov
adc
shr
ljmp
inc
push
sbb
pop
add
mov
fs
sbb
sbb
add
out
aad
sbbl
cli
pop
push
pusha
or
test
adc
sbb
fldenv
add
pop
jns
call
xorl
out
icebp
dec
mov
or
mulps
sbb
pop
push
sbb
sub
sub
add
cmp
mov
push
inc
sub
mov
sar
shr
nop
out
sbb
xchg
test
xor
ss
movsl
ficoms
inc
adc
sbb
lods
or
andl
pop
ja
in
pusha
inc
mov
cmp
mov
add
push
dec
shr
sub
add
jl
fisttpl
sub
adc
sbbb
sub
outsl
mov
push
sbb
out
aas
xor
es
sbb
imul
cmp
clc
xchg
addl
jecxz
mov
iret
aad
add
pop
int
or
add
test
out
mov
aaa
jge
jl
pusha
lods
cmp
jbe
mov
fldt
add
pusha
pop
add
xor
cli
xchg
movsl
mov
cld
imul
sub
pop
sbb
es
mov
daa
test
mov
dec
add
pusha
sbb
add
ss
jbe
add
cmp
mov
pusha
add
divl
adc
sbb
add
mov
add
insb
xor
dec
cmp
and
outsl
and
or
mov
jp
popa
cmp
add
xor
imul
movsb
inc
xchg
push
push
lock
adc
roll
lea
loopne
cmp
pop
or
cmc
dec
mul
jge
add
mov
pop
push
test
sarl
fdiv
adc
add
jge
push
popl
cli
push
dec
inc
add
daa
jbe
lock
test
cmpsl
ss
loopne
adc
or
mov
loopne
push
cmc
iret
jg
or
or
sbb
add
in
add
xchg
dec
dec
mov
adc
jae
add
daa
into
push
loopne
ret
push
sbb
cld
ret
xor
xor
push
rcll
jne
jg
sub
mov
or
xlat
mov
sub
gs
das
std
movl
or
lret
add
xlat
imul
add
sbb
add
divb
sahf
add
jo
push
push
loope
add
sarb
out
in
mov
xlat
xchg
pusha
dec
test
inc
out
jne
sbb
mov
or
add
jmp
mov
jbe
inc
adc
or
cmp
pusha
adc
addl
stos
push
pusha
mov
in
les
mov
fs
adc
push
pop
loope
mov
sbb
jg
add
cltd
fcmovb
orb
xchg
sbb
inc
jl
xlat
adc
cmp
sub
test
sar
into
and
push
pop
es
in
pop
add
jae
xchg
add
pop
aaa
rcr
jno
adc
xor
ljmp
in
add
imul
dec
xchg
pop
bnd
roll
and
idivb
mov
dec
cmc
ljmp
fldenv
in
outsl
cwtl
sbbl
pop
repnz
add
xchg
imul
dec
dec
rcrl
mov
xor
std
push
pop
add
sbb
pop
sub
xchg
rolb
test
pushf
lods
insl
dec
cli
cld
inc
or
pop
dec
push
inc
sub
test
adc
and
mov
arpl
inc
popf
loope
mov
add
xlat
dec
les
pop
lret
and
adc
mov
add
mov
in
fstl
add
fnop
jl
popa
push
add
fcmove
push
roll
cmpsb
xchg
pop
add
add
clc
jp
add
mulb
out
das
mov
lods
mov
outsl
push
out
shl
sbb
scas
sbb
loopne
movsb
arpl
hlt
frstpm(287
fwait
add
push
mov
mov
lods
adc
cmpsl
sub
ret
xchg
and
cmp
loopne
and
push
stc
int
add
inc
mov
sub
imul
leave
xchg
ret
jno
jl
ror
test
fmull
adc
rorl
sub
add
mov
ljmp
gs
xchg
dec
dec
mov
testl
and
pop
and
pop
dec
das
mov
inc
scas
add
cli
loope
lods
adc
hlt
add
jb
test
or
lahf
lret
loope
pop
xchg
pushf
pop
decl
pop
mov
push
add
int3
rcll
lret
out
sbb
mov
stc
clc
xchg
cmpb
jecxz
test
jne
pop
inc
or
add
lds
sbb
push
pusha
add
push
int3
daa
mov
sbb
pushf
out
jmp
in
jle
cmp
inc
push
cli
loopne
repz
push
lret
mov
xchg
add
sub
add
mov
lods
inc
imul
fldl
mov
mov
adc
xchg
mov
loope
or
mov
add
dec
outsl
into
punpckhbw
pop
lahf
cld
xor
xor
add
push
jnp
and
dec
outsb
mov
fistps
in
add
sub
js
jl
pop
add
pushf
out
loope
xchg
fidivl
or
aaa
sub
sub
jmp
push
pusha
add
xchg
xchg
inc
cwtl
cmpsl
adc
mov
notl
cwtl
adc
sub
add
xchg
cwtl
sbb
mov
repnz
mov
sbb
inc
out
stos
pop
pusha
fs
jp
in
dec
mov
push
and
mov
add
mov
cmp
and
add
dec
cmpsl
dec
mov
flds
data16
xchg
mov
sbb
loope
sti
pop
push
lock
popa
inc
and
dec
addr16
mov
adc
movsl
sub
andb
test
in
xor
cmc
movb
inc
dec
fsubl
add
loope
not
sbb
and
add
shrb
shll
stos
add
cmp
and
fs
fisubl
sbb
mov
subl
adc
inc
add
mov
leave
ja
sbb
push
push
iret
inc
push
mov
insb
in
outsl
xchg
push
sub
jbe
and
push
int
fimuls
jg
add
push
mov
pusha
mov
jnp
add
hlt
cmpsl
imul
pop
ja
shr
or
mov
out
add
fcoml
ljmp
fisttps
mov
inc
adc
jb
rclb
dec
and
movl
and
push
and
add
mov
mov
clc
pop
add
fs
cwtl
and
jo
jo
sbb
je
pop
orl
mov
pop
out
negb
jbe
out
mov
movlps
sbb
ljmp
fs
pusha
pop
lods
out
add
sub
mov
data16
xorb
stos
lcall
add
xchg
jmp
add
loop
cmp
ret
inc
adc
mov
add
add
pop
cld
jb
push
hlt
add
aad
inc
pop
insl
mov
ficomps
sub
add
jmp
hlt
es
and
pop
data16
adc
add
stc
icebp
mov
inc
in
fs
enter
mov
cmpsl
mov
outsl
cmp
addr16
add
and
add
insl
add
call
adc
daa
adc
adc
cltd
loop
iret
imul
xchg
out
mov
adc
add
xchg
jns
sub
in
jmp
in
push
ss
iret
pop
mov
imul
cmp
sub
push
jg
adc
sbbb
adc
loop
add
ret
call
xchg
cmpsb
test
xchg
xor
aas
mov
cmp
and
xor
js
mov
popf
inc
inc
add
mov
or
iret
jne
js
scas
fildl
pop
cmpsl
jl
shl
ret
test
imul
jp
add
nop
sub
adc
xchg
inc
jl
add
pop
add
inc
loop
incb
sbb
xor
stc
dec
mov
lcall
push
adc
sbb
lret
xor
fstpt
dec
add
adc
xchg
sbb
and
sti
mov
arpl
push
mov
mov
mov
rolb
cmp
push
clc
pop
sbb
daa
add
aad
mov
in
repnz
dec
pop
add
push
and
adc
mov
sarb
lahf
fidivs
and
push
out
popf
movsl
add
sbb
ficoms
add
jg
xchg
cmpsl
mov
flds
addr16
shll
popf
and
add
jno
push
ljmp
adc
enter
sbb
add
cld
bound
fadds
pop
xor
adc
repnz
idivb
dec
add
and
popa
xchg
lds
mov
shrb
add
xchg
add
cltd
adc
add
movsl
and
mov
dec
lock
jae
sub
mov
push
outsb
insl
inc
pushf
pop
nop
push
movsb
inc
sbb
inc
popl
xor
cmpsb
je
cmpsl
lds
sub
out
lret
and
cwtl
mov
movsb
or
mov
add
mov
rol
add
and
add
cmp
mov
bound
leave
ljmp
aas
adc
sbb
sbb
push
stos
or
sub
pop
popf
pushf
cs
fiaddl
call
fstl
dec
sub
inc
push
sbb
std
or
fldenv
bnd
push
test
push
and
xchg
cmpsl
push
outsl
fmul
pop
out
scas
in
add
idivb
jbe
rorl
cmp
aam
jecxz
add
leave
xchg
and
nop
ret
jbe
sub
lds
pop
cmc
adc
xor
fsubrs
xchg
add
outsl
adcb
push
icebp
sbb
aad
jne
cmp
and
scas
sub
sahf
shl
pop
pop
xchg
mov
movsb
cmp
inc
cmp
inc
shrb
mov
xor
add
rcll
sbb
shrl
loopne
mov
add
imul
dec
add
push
test
and
repnz
or
pop
clc
or
and
sub
mov
insb
cltd
popa
loopne
or
sti
push
js
fsub
add
adc
add
test
inc
mov
sbb
xor
adc
add
mov
push
loope
pop
jnp
das
push
add
mov
sub
inc
std
mov
xchg
fwait
les
aas
mov
xor
or
adc
pop
push
add
xchg
int3
addr16
jecxz
sbb
push
sbb
out
add
xor
sub
dec
adc
in
mov
pop
cmp
sbb
mov
gs
rcrl
fcompl
push
lock
pop
push
shll
mov
cmp
cmpsl
loopne
out
sub
cmp
pop
jp
add
pusha
add
add
cmp
adc
fstps
jg
sarl
test
inc
insl
mov
fs
or
les
add
and
mov
and
push
dec
test
sbb
insl
fwait
fisttpl
adc
imul
scas
push
pop
sub
fmul
mov
loopne
std
imul
xor
loopne
pop
fadds
mov
sub
mov
cli
push
jge
xlat
inc
add
into
or
add
ret
andb
shll
jl
xchg
lock
cltd
fistpl
add
xor
mov
add
inc
fdivrs
adc
jb
xchg
aad
int3
jg
inc
les
sub
popf
aam
mov
jle
sahf
add
cmp
jmp
adc
outsl
ffreep
xchg
adcb
push
call
loope
push
jne
mov
xor
add
repz
aaa
push
push
jns
mov
adc
test
add
mov
jle
cmpsl
lahf
popf
movsb
enter
out
shl
mov
loope
ljmp
es
xchg
into
xlat
inc
int
jns
test
push
xor
orl
mov
sub
movsb
cmp
pop
add
xchg
in
push
int3
cs
cmp
push
sbbl
ret
inc
testl
fadds
int3
ss
cmp
mov
sbb
bnd
cmp
xlat
pusha
push
jecxz
clc
sbb
sbb
stos
mov
arpl
inc
sbb
sub
mov
notl
insb
push
inc
xor
cmpsb
popa
sarb
or
out
repz
das
xchg
sbb
xchg
cmp
out
gs
dec
add
sbb
fptan
add
stc
push
aad
lds
rorl
and
pop
out
emms
lahf
in
call
cs
shll
das
dec
es
or
dec
je
or
test
cs
adc
in
and
cmpsl
jbe
adc
pop
stc
cli
lret
frstor
ja
adc
sbb
ret
out
jbe
cli
add
fstl
incb
out
je
mov
mov
cld
and
lret
mov
sbb
sahf
mov
adc
js
jmp
pop
aaa
add
loopne
sbb
push
ret
sbb
sub
flds
xchg
push
mov
rcrl
or
out
add
sub
repnz
into
sub
push
mov
push
sub
shr
xor
push
inc
mov
es
jae
cmp
rol
and
xor
ret
xchg
push
pop
imul
mov
jmp
jbe
jl
or
or
pop
mull
push
sbb
loope
pop
inc
outsl
add
push
mov
je
adcb
sbb
add
repz
push
fisttpll
add
dec
lods
data16
inc
ljmp
push
xchg
or
call
jmp
adc
pop
std
test
or
jl
pusha
mov
in
pop
addl
xchg
push
cmp
add
adc
sbb
call
decb
das
sbb
aad
movsb
and
sub
lods
out
repnz
scas
scas
int
xchg
data16
and
into
xchg
dec
cli
pop
adc
mov
add
popf
out
inc
loope
and
jecxz
push
push
or
mov
loopne
cmpl
jo
ljmp
mov
dec
inc
or
subl
pop
shl
aad
stc
movsb
je
push
and
rolb
orl
jne
push
pusha
dec
sbb
or
lahf
mov
sub
aad
js
sub
add
jp
push
nop
and
loopne
xchg
fxch
sub
add
mov
ljmp
mov
iret
lahf
out
fisubrs
out
lock
sub
add
leave
in
rcrl
mov
xchg
adc
pop
sub
out
add
and
push
xor
xchg
fiaddl
stos
add
sub
lods
pop
dec
add
hlt
in
cwtl
fdivr
push
test
out
push
xchg
push
sbb
add
stc
xor
cmpsb
int
in
mov
fwait
and
pusha
jno
mov
or
popf
and
and
push
enter
icebp
adc
xchg
in
dec
outsl
sbb
mov
push
sub
jno
mov
add
outsl
loopne
mov
out
stos
je
add
xchg
mov
rcll
cltd
add
add
fdivrs
insb
xorl
cwtl
ljmp
jecxz
xor
push
sub
inc
add
and
xor
dec
daa
popf
lret
in
iretw
cmp
xor
fistpll
add
pop
mov
sarb
js
hlt
lods
loope
mov
add
jg
jge
fldt
add
lea
inc
add
cwtl
xchg
mov
sbb
xchg
dec
add
mov
out
push
jmp
sub
jl
xor
andl
or
push
xchg
loopne
sub
imul
sub
add
sahf
jle
or
rorl
jmp
lods
dec
test
or
or
xchg
sub
ret
and
mov
cmp
das
xor
mov
orl
sbb
add
jge
adc
and
sahf
xor
aaa
sub
sbb
add
aam
mov
fwait
pusha
and
repz
inc
xchg
add
sub
dec
and
add
les
jle
enter
pusha
jg
sbb
mov
pop
insb
pop
notl
sbb
jbe
jns
jb
dec
mov
mov
xchg
cmpsl
jecxz
repnz
xor
jbe
pop
jle
or
loopew
mov
xchg
xchg
sarl
rcrb
loopne
xchg
mov
pop
outsb
adc
push
mov
mov
inc
sub
in
aam
pop
or
inc
jecxz
mov
jne
lahf
xchg
add
inc
je
inc
inc
cli
push
sbbl
mov
mov
out
stos
mov
popa
loop
mov
daa
xchg
cmp
and
cltd
or
cwtl
jl
add
in
mov
push
push
xchg
mull
mov
inc
cmp
mov
fcom
fs
lock
jbe
sub
negl
jge
repnz
fiadds
or
and
das
addr16
repnz
in
mov
aad
mov
js
and
enter
shrl
cli
insl
sbbl
ret
dec
sahf
cmc
add
pop
filds
or
call
ficoms
mov
xchg
pop
popa
test
adc
pusha
cmpb
sbb
scas
test
popf
cmp
pop
mov
sub
xor
pushf
out
mov
sub
call
mov
dec
mov
dec
inc
adc
or
test
aas
mov
cmp
es
adc
sbb
xchg
js
shlb
and
lds
int
or
ficompl
xlat
adc
add
jne
mov
incl
inc
test
in
mov
cmp
dec
js
fistps
dec
add
mov
and
jne
inc
jmp
add
inc
outsb
xchg
sub
xchg
negl
cltd
mov
test
mov
jbe
push
sahf
pusha
add
push
pop
mov
xor
dec
scas
mov
leave
iret
out
mov
add
and
sbb
mov
sbb
pop
xor
nop
sub
add
jmp
sub
out
cmp
nop
xor
add
subb
mov
or
pushf
js
or
mov
or
insl
mov
pusha
imul
shrl
sti
scas
aaa
test
push
inc
shl
and
pop
adc
or
mov
lods
imul
or
push
push
add
cmp
das
and
xchg
jo
pandn
jmp
sub
push
add
sbb
mov
and
daa
xchg
addr16
test
push
or
and
pop
sbb
jo
pop
jae
add
xchg
ficomps
or
mov
cwtl
aas
in
mov
lret
cmp
adc
in
roll
pop
adc
in
mov
movsl
dec
adc
push
pop
add
pusha
or
cmp
fcomi
aad
repnz
cmp
in
adc
movsl
and
sti
push
mov
cmp
sub
jo
add
mov
cmpsb
dec
add
pop
cmp
push
mov
add
mov
nop
add
add
push
mov
mov
inc
movsl
lock
fcoms
dec
enter
sbb
dec
adc
jne
and
mov
lds
sbb
mov
add
xchg
fsts
add
clc
cmpsb
jo
scas
add
sti
mov
flds
sbb
icebp
addl
outsl
fbld
xor
mov
push
mov
ficoms
ja
xor
jns
jp
fwait
in
add
mov
mov
add
repnz
xlat
das
sbb
adc
pop
fcmovnbe
add
push
iret
aas
jl
imul
pop
dec
sub
test
pusha
sbb
daa
into
xchg
xchg
adc
sti
mov
lock
sbb
or
add
divl
push
mov
dec
dec
punpckhwd
int
mov
cli
sbb
cs
and
arpl
int3
je
outsl
cmp
js
int
mov
or
add
mull
pop
pusha
les
stc
add
stos
sbbl
sbb
jg
shll
add
lea
aaa
and
push
rcrb
adc
loopne
icebp
inc
call
adc
inc
inc
add
out
dec
xchg
stc
and
and
inc
xor
pop
xlat
test
dec
sbb
bound
add
adc
sarb
mov
stos
mov
push
and
xchg
ficoml
rorl
fsubl
add
mov
add
mov
add
pusha
or
shlb
adc
and
inc
or
cld
mov
outsb
xor
aas
sub
fiaddl
pop
jo
mov
out
cltd
add
pusha
dec
loope
push
mov
in
xor
out
clc
stos
jno
add
add
je
xor
and
xchg
pop
fidivl
int
push
mov
add
mov
lea
pop
imul
push
addr16
add
in
jno
push
out
out
or
mov
movsb
out
cmp
lds
loopne
pop
cmp
sbb
and
rolb
jbe
sub
out
popf
popl
push
add
scas
ja
push
lcall
popa
mov
imul
xor
mov
dec
sub
inc
ds
mov
mov
xor
ret
addb
mov
jmp
and
mov
mov
xchg
adc
add
adc
push
mov
sarl
pop
xchg
negl
mov
push
and
xchg
and
mov
out
add
sbb
jb
stc
push
call
daa
aad
movsl
cmp
and
pop
sahf
mov
and
mov
pop
jg
popf
stc
test
mov
xor
aas
sbb
nop
inc
cmp
test
sti
cmpsb
jl
xor
add
pop
or
dec
sbb
fscale
and
data16
pop
enter
lods
add
xchg
xorb
dec
pusha
sbb
lock
mov
cld
stos
roll
add
sbb
mov
aad
repz
mov
test
cmc
xlat
fstpl
sbb
cmpsl
lahf
jae
mov
inc
mov
out
xlat
xor
adc
jo
pop
adc
xor
add
scas
lds
xchg
add
jo
loope
xor
push
and
mov
sbb
pop
pop
dec
lods
lcall
jns
addr16
popf
add
xchg
into
arpl
mov
xor
xor
aaa
or
iret
and
cmpsb
and
add
inc
xlat
fstps
test
jmp
addr16
cmp
push
jle
jne
repnz
aad
lret
test
pop
sahf
loope
push
add
push
cmc
adc
adc
and
dec
lea
stos
lret
popf
xor
xchg
pusha
sarl
adc
es
rcl
pop
repz
mov
jp
xor
mov
adc
add
in
add
in
xchg
add
fistpl
insb
pushf
mov
cmp
ja
push
fiaddl
mov
insl
mov
mov
dec
xlat
inc
lret
ss
bound
aaa
and
popf
mov
xor
mov
adc
add
and
xchg
jp
je
jno
loop
adcb
dec
dec
and
push
push
aas
stos
add
inc
xchg
shll
xor
push
mov
mov
or
jge
jb
outsl
into
lret
loopne
sbb
je
push
pusha
arpl
test
adc
pusha
and
sub
jnp
lea
lcall
or
sbbl
add
movsb
add
shr
push
push
xchg
daa
mov
addr16
in
sbb
icebp
js
sub
orb
mov
stc
adc
add
lods
outsb
pop
insb
adc
inc
mov
repnz
jmp
jmp
adc
repz
cmp
jecxz
add
adc
push
sarl
mov
dec
mov
sahf
bound
ret
int
adc
adc
jg
cwtl
dec
or
movsl
jmp
add
pop
rolb
adc
add
ud2
push
ret
popl
rcrb
lock
xchg
sub
bound
and
add
pop
ljmp
repnz
xchg
adc
out
cmp
jle
andb
dec
out
jns
xor
add
dec
dec
loope
cmpsl
inc
push
add
popa
shlb
and
cmp
xchg
pusha
data16
gs
insb
sbb
lcall
aam
or
fcoms
sbb
rcrl
das
add
jecxz
jo
inc
flds
cli
loopne
outsl
into
push
out
adc
adcl
mov
popf
clc
daa
jecxz
add
xchg
sub
fwait
loope
mov
aaa
fildl
rclb
inc
mov
call
push
jl,pn
insb
add
push
test
adc
push
shrl
add
sbb
cwtl
xor
dec
add
sub
fistpl
sbb
std
adc
test
ljmp
imul
xor
pop
jbe
cmp
inc
cmp
mov
fbld
pop
lods
xorl
lret
adc
fs
dec
loopne
mov
out
dec
pop
loopne
adc
repz
xor
roll
ffree
mov
lcall
pop
xor
mov
sbb
imul
push
faddl
inc
out
clc
lahf
add
cwtl
cmc
push
sbb
adc
cmp
or
inc
mov
add
divl
xor
jle
cmpsb
lea
lock
test
jmp
add
cmp
add
out
dec
adc
pop
jmp
or
jb
scas
faddl
shlb
cmp
mov
add
clc
pop
ret
dec
into
adc
inc
fisttpl
push
inc
cmp
xlat
sbb
mov
fiadds
xchg
adc
call
adc
sbb
loope
icebp
outsl
out
adc
add
cmp
incl
adc
pmulhw
insb
cld
add
iret
mov
add
push
xor
xor
add
pop
enter
rorl
ret
js
push
pop
sbb
push
testl
mov
cwtl
mov
mov
loope
push
stos
mov
jp
bound
mov
adc
loopne
sahf
iret
mov
sbb
cmp
mov
pop
repnz
outsl
pop
sbb
popa
sbb
mov
mov
add
push
adc
sbb
mov
icebp
in
push
dec
sbb
dec
sahf
add
ljmp
leave
fadds
sub
add
sub
add
into
daa
xchg
das
mov
lcall
xchg
sbb
jge
or
nop
popa
sub
idivl
xor
es
or
adc
shlb
sbb
cmp
mov
imul
js
cs
sbb
mov
jae
fs
xchg
mov
and
mov
push
dec
pusha
cmp
or
sbb
fildll
loopne
les
add
ret
pop
push
push
sub
cmpsl
iret
mov
mov
mov
sbb
cmp
inc
int
pushf
add
out
pop
mov
xor
lahf
notl
incb
jle
pushl
add
pop
in
repz
xchg
ret
dec
cs
daa
mov
jns
xlat
cwtl
sbb
fisubs
test
ja
cmp
imul
jge
lcall
sahf
xor
xor
decb
rep
and
jbe
mov
push
stc
add
movsb
lods
test
add
mov
lcall
sbb
rcll
cmp
cmc
add
lods
pop
ret
mov
add
dec
cmpsl
or
cmpsl
iret
adc
outsb
cwtl
cltd
sub
out
fldt
xchg
pop
jo
add
sub
cltd
or
jecxz
sbb
sbb
push
popf
or
mov
fldl
loope
jge
test
mov
add
imul
fmuls
scas
nop
outsb
mov
lods
mov
mov
add
test
dec
pusha
sbb
negl
out
cmp
movsb
add
subb
mov
fldl
add
mov
shl
imul
jns
sub
jl
aad
push
roll
loope
mov
dec
adc
pushf
pop
in
out
pusha
add
dec
adc
xchg
lcall
gs
outsl
rcll
or
fimull
mov
mov
xchg
add
ret
xchg
nop
ret
sbb
mov
mov
add
mov
or
enter
mov
mov
out
add
outsb
jg
add
inc
loopne
and
addb
in
jp
add
push
bound
adc
add
repz
lock
jge
pop
lret
xchg
push
xor
or
ret
fwait
add
ror
pop
popf
ret
push
adc
aad
repz
in
roll
xor
movl
mov
mov
adc
loopne
fists
es
cld
add
sbb
orb
pop
lret
inc
jne
pop
lds
outsl
inc
mov
cmp
ret
int3
clc
ljmp
incb
xor
jnp
sbb
fiaddl
add
cmp
inc
loopne
fnsave
imull
out
mov
sbbb
imul
add
push
cli
int
subl
dec
dec
sub
inc
inc
out
icebp
adc
lahf
cwtl
ror
and
jb
roll
pusha
loopne
in
pop
xorl
push
sarb
push
add
push
sbb
incb
dec
test
push
xchg
int
out
xchg
and
pushf
sahf
mov
ljmp
repnz
sbb
pop
inc
mov
out
shrb
pushf
add
mov
shlb
pop
lea
inc
and
sbb
adc
adc
cmp
fisubrs
mov
add
loopne
pop
and
adcl
iret
add
pop
push
sub
sub
cwtl
cmp
fs
push
fwait
push
or
sbb
xchg
addb
xchg
enter
imul
rcll
aam
pop
add
dec
vmread
fisubl
add
sti
lret
jae
cmp
ret
and
and
add
mov
mov
movsl
divl
jb
mov
dec
shlb
push
pusha
lcall
sarb
fsubp
or
xor
sarl
pushf
cmp
outsb
mov
je
jo
loopne
int3
add
test
xchg
stos
add
ret
add
ja
int
les
loop
pop
jmp
inc
jne
in
dec
ds
jle
into
pop
and
ss
sbb
jbe
out
int
mov
repz
popa
in
jne
xchg
and
mov
in
loopne
loopne
shll
into
sbbl
inc
out
xchg
push
rclb
add
jecxz
ret
aas
and
push
push
aam
daa
addr16
add
sahf
in
mov
and
scas
lret
sbb
cmp
mov
adc
mov
pop
jle
mov
add
popf
ret
jb
in
cmp
xchg
outsb
in
test
inc
add
mov
mov
nop
mov
iret
mov
add
ja
stos
loope
fld
cmp
add
add
cmc
pushf
fmul
fnstsw
outsb
xlat
pop
das
add
cwtl
loopne
xchg
sub
add
pshufw
sbb
and
xchg
les
icebp
mov
sar
ret
repz
scas
js
sbb
mov
xchg
loopne
push
mov
push
test
js
sbb
ret
mov
lea
sbb
loope
cmp
stos
notb
imul
mov
add
fistl
fdivs
xor
stos
in
add
mov
cmp
test
add
enter
shlb
mov
pusha
dec
xchg
lcall
push
add
sub
xor
fiadds
cs
mov
out
pop
sub
out
or
jno
in
xorb
or
dec
fwait
addr16
aam
sbb
hlt
out
loopne
jnp
dec
jmp
loopne
daa
fdivp
sub
sub
lahf
xor
add
cmp
adc
rcrl
or
jl
bound
idivb
add
lock
and
scas
adc
inc
scas
push
dec
push
fs
sbb
int3
mov
add
sub
inc
jmp
xchg
testl
roll
pop
cmpsl
sub
repz
mov
inc
push
fsubl
add
mov
mov
add
stos
jmp
mov
and
lahf
xchg
rcrl
sub
xor
negl
incb
pop
jno
and
add
mov
lods
lahf
js
mov
add
add
push
jns
mov
sbb
mov
nop
pusha
xorl
mov
in
push
and
mov
add
addl
lock
or
loop
pop
or
cmp
popf
scas
addb
test
adc
mov
ret
insl
push
cmp
lahf
push
mov
mov
movsb
dec
mov
std
inc
push
pop
icebp
nop
sbb
xor
push
decb
jae
test
inc
test
lret
sbb
daa
dec
iret
adc
xchg
push
loopne
xor
movsb
jno
fsubrp
and
add
ret
push
pushf
mov
lods
dec
add
jle
add
xor
roll
inc
add
push
shlb
lods
adc
lods
push
mov
jmp
roll
push
jnp
adc
inc
mov
lods
sbb
xchg
push
mov
mov
add
add
test
scas
and
inc
jbe
aaa
or
je
pusha
in
adc
or
inc
cmpsl
jg
cmc
in
fstl
add
rorl
std
clc
test
test
and
sub
add
mov
dec
pop
inc
lds
mov
fs
lods
insl
dec
out
push
mov
mov
movsb
mov
dec
fidivrs
pop
fidivrl
movsb
enter
dec
sub
pop
add
inc
jno
mov
test
add
push
pop
jecxz
mov
inc
inc
mov
add
outsb
mov
push
fnstenv
bound
es
les
out
pop
pop
add
mov
sbb
adc
mov
daa
repz
mov
rolb
rolb
gs
add
in
fbld
xor
shr
clc
jae
pop
aad
dec
xor
jb
dec
stc
add
ret
or
add
pusha
mov
mov
mov
sbb
mov
sub
in
cmpsb
enter
mov
cmp
cmp
pushf
repnz
and
pusha
mov
addr16
mov
testb
mov
pop
ss
push
add
jnp
int
inc
adc
in
ret
fstpl
or
push
sahf
sbb
clc
jp
cli
jns
pushf
cmpsl
add
lods
or
test
shrb
in
mov
sbb
loopne
add
cmp
add
jbe
pop
xchg
xchg
add
cmc
xchg
push
add
imul
xorl
push
xchg
mov
add
xchg
daa
add
mov
lods
stos
scas
aad
hlt
push
mov
fwait
aaa
jo
popa
sub
or
loop
or
jnp
js
xchg
dec
shl
mov
in
decb
addb
outsb
imul
push
adc
or
jg
mov
dec
or
fists
push
jno
leave
add
dec
lds
gs
mov
jbe
jb
lods
adc
leave
dec
inc
addl
add
and
sbb
or
aam
popa
repz
inc
sub
lret
sbb
aas
sbb
mov
jb
les
daa
add
insl
cld
pop
jecxz
call
sub
aam
inc
loop
add
add
add
and
stos
sbb
add
cmp
es
testl
add
dec
das
or
mov
mov
add
mov
pop
add
mov
fwait
xchg
aaa
add
loope
push
inc
fsts
mov
pop
jmp
ljmp
cwtl
sar
sahf
jno
shrl
popf
mov
pop
sbb
nop
add
stos
outsb
jns
push
jnp
in
or
dec
or
sbb
leave
lods
pop
rorl
pop
sbb
push
xchg
ret
mov
dec
adc
bndstx
popa
pop
mov
jo
out
xchg
jns
add
add
pop
cli
pop
add
stos
xor
test
imul
inc
mov
add
pop
sti
inc
or
aam
sbb
jbe
rol
mov
loop
inc
ret
mov
aam
lock
fisttpl
insb
add
mov
movsb
inc
push
inc
mov
add
loopne
pop
dec
pusha
scas
add
daa
out
pop
in
xor
stos
sub
loopne
aaa
repnz
jl
inc
sbb
gs
add
fldenv
pop
aaa
mov
mov
fcoml
pop
xor
sahf
addr16
and
push
dec
xchg
cmp
add
aas
dec
add
bound
std
mov
add
pop
xlat
icebp
sbb
adc
mov
nop
pop
xchg
push
pop
add
xchg
int3
sbb
lods
dec
inc
and
jae
jge
mov
mov
add
mov
dec
iret
faddl
ds
fwait
stos
testl
mov
popa
shll
nopl
jp
push
sti
sub
in
jl
cs
out
add
lret
and
and
sub
ljmp
pop
add
pop
es
mov
adc
push
mov
add
sarb
stos
cmp
jg
jle
or
sbb
jmp
xlat
js
mov
sbb
add
addr16
aam
jae
jge
inc
cmp
xchg
lods
addb
add
icebp
stos
jecxz
mov
jmp
adc
test
in
cmp
ljmp
sbb
inc
ret
pop
add
sbb
push
pop
dec
fiadds
add
pushf
jnp
je
pop
mov
loopne
inc
outsl
ds
mov
jne
sbb
gs
data16
xchg
roll
cli
and
add
mov
add
cmp
test
aad
aam
aaa
rorl
add
inc
lock
das
out
pusha
out
loop
jnp
jne
push
mulb
push
stos
cmp
scas
push
xchg
jbe
fstl
mov
test
adc
add
and
test
mov
dec
mov
cmp
cs
loope
int
adc
nop
out
pop
pop
sbb
xchg
xor
pop
pusha
loop
push
jp
cli
pop
call
test
das
popa
xchg
ret
sbb
ret
mov
add
or
cmp
or
push
std
rcl
mov
xor
pop
or
xchg
inc
fildl
or
adc
add
shlb
pusha
mov
pop
fsubrs
aaa
fcompl
xor
add
mov
pop
push
and
cmp
sahf
or
mov
sbbl
addr16
add
shrl
sbb
lock
sbb
mov
test
out
adc
cvtps2pi
add
mov
popa
in
sarb
insl
roll
cmc
dec
or
add
movsb
test
stos
adc
push
cs
pop
pop
add
or
jb
leave
inc
xor
mov
jbe
sahf
add
and
std
or
lahf
add
in
push
pusha
je
cmp
push
mov
pop
sti
sbb
pusha
sbb
stos
jle
loop
dec
jl
cmp
or
add
jne
sbb
and
mov
add
cli
les
sar
stc
sbb
scas
push
adc
and
jp
add
push
mov
add
clc
xor
addr16
jl
out
mov
or
jne
aad
and
add
dec
push
push
pop
or
sbb
fcmovne
ficompl
cmp
dec
pusha
adc
or
bound
jo
popf
adc
inc
xor
mov
cmp
xchg
jo
cmp
cmp
in
mov
test
xor
add
jae
push
xor
pusha
dec
and
jns
pop
pop
in
add
jae
imul
rorb
mov
pop
push
sbb
pop
sub
insl
daa
mov
pop
rcl
arpl
sbb
cltd
enter
movb
and
inc
pushf
out
out
inc
and
jne
push
adc
loopne
add
sub
mov
in
sbb
lcall
dec
and
in
hlt
gs
sub
lcall
jns
nop
sahf
mov
mov
dec
mov
jmp
in
pusha
pop
add
mov
dec
cmovge
cmp
inc
add
fwait
mov
out
loopne
fldl
xor
sub
fs
lcall
pop
aaa
repz
or
add
cmp
call
push
add
insb
push
out
scas
ljmp
aad
div
push
and
sbb
fwait
loope
pop
jl
add
mov
rcrl
fwait
add
fstps
add
mov
stos
or
cld
mov
cmc
add
dec
jp
adc
mov
repz
je
lcall
mov
xchg
sbb
push
in
add
add
adc
jmp
add
push
int3
imul
loopne
ja
cmp
sbb
sbb
pop
sbb
dec
mov
lcall
xor
inc
adc
orb
add
in
aaa
cmp
add
dec
or
sub
mov
push
push
test
int3
sar
repnz
cmp
add
mov
fisubrs
hlt
pop
jb
pop
mov
in
insl
cmpb
scas
mov
sti
sbb
push
push
lret
add
dec
push
lea
add
sbb
xor
call
loopne
stos
mov
inc
ret
aam
outsb
add
negl
add
jbe
mov
and
scas
or
mov
adcl
push
or
cmp
sbb
test
sti
add
int
jno
lahf
push
jg
xor
mov
stc
daa
adc
mov
or
sub
loope
cmp
xor
or
adc
nop
add
mov
sub
push
loop
in
mov
mov
sbb
lahf
add
push
test
mov
out
push
push
sbb
jecxz
stc
or
add
aad
sahf
call
mov
push
xor
jo
add
jne
popa
add
insb
fsubp
mov
push
cmp
jp
add
xlat
decb
es
rcrb
xchg
and
or
int3
jmp
push
lods
cmp
sbb
test
mov
sbb
or
mov
add
add
push
pop
jb
leave
data16
js
and
push
arpl
sub
cli
jo
movsl
push
mov
es
sub
mov
cltd
or
dec
out
pop
xchg
add
icebp
shlb
popa
popf
sbb
scas
cmpsb
sbb
xchg
sti
add
jge
mov
or
jmp
sarb
or
aam
inc
xchg
popa
xlat
push
jno
mull
cli
mov
add
mov
cmpsl
xor
pop
add
lea
out
ret
shrl
std
inc
pop
sbb
aad
push
outsb
insl
push
subl
and
mov
pop
push
popf
lret
mov
push
add
xchg
and
mov
cmp
mov
add
scas
mov
adc
pop
xchg
sbb
inc
xchg
add
addr16
adc
sti
rorb
dec
aas
aad
mov
add
in
test
imul
aad
xchg
pop
jmp
sbb
adc
adc
fbld
loopne
in
push
add
fmull
add
ja
ljmp
lods
add
nop
inc
add
loopne
movsb
adc
lahf
incb
xor
mov
add
mov
add
loope
int3
add
xchg
imul
clc
mov
xchg
fxch
add
mov
std
add
aaa
loope
cmp
add
adc
xchg
pop
push
fbld
daa
pop
lretw
sbb
add
push
inc
pop
xlat
add
dec
cli
and
mov
mov
mov
push
sub
or
adc
dec
add
jne
fdivl
stos
aam
or
vmwrite
add
mov
ss
bound
decb
mov
incl
mov
movsl
aas
mov
roll
call
add
ja
mov
adc
fs
push
notl
cltd
mov
add
aam
repz
sbb
mov
add
pop
inc
push
mov
cs
mov
xchg
or
rcrb
or
add
and
mov
mov
and
jg
jle
pop
popa
outsl
jp
insl
mov
mov
jg
add
jbe
hlt
sbb
add
cmc
pushf
push
fidivrl
clc
ret
sub
jecxz
lea
ficompl
aas
push
jo
xor
es
and
xchg
add
inc
push
icebp
or
jg
or
shlb
loopne
adc
cmpb
pop
and
stos
into
or
es
sbbb
fwait
movsb
and
fdivrl
je
outsl
push
ja
sbb
rclb
jbe
out
pop
fildl
cs
mulb
or
pusha
fs
imul
test
fisubs
aad
sub
pusha
cmpsl
dec
jge
fcoms
lods
push
mov
push
cmp
jns
xor
pop
and
sbb
fwait
xchg
stos
pusha
addb
cmp
jbe
sub
popa
add
inc
push
gs
mov
fbld
or
mov
loop
inc
les
popf
stc
imul
cmp
add
repz
pop
ret
imul
xchg
mov
insl
je
iret
repz
inc
pop
push
pop
ret
add
mov
ds
xchg
jecxz
ss
mov
pop
ljmp
xor
into
incb
push
loopne
mov
jl
push
mov
and
dec
lea
sbb
sbb
add
cmp
inc
mov
mov
mov
sti
frstor
sub
sub
rcr
mov
mov
sbb
ret
popl
lds
scas
lock
stc
sub
jno
mov
mov
out
cmpsl
jbe
int3
jecxz
cld
push
sub
outsl
mov
leave
xchg
add
stc
cld
ja
aaa
movsb
add
xor
pop
and
pop
lahf
inc
fildll
dec
jno
or
nop
ret
add
fmuls
inc
add
dec
mov
cwtl
or
mov
sbb
test
std
dec
sbb
and
push
and
mov
adc
int3
adc
xor
insb
std
pop
sar
xor
stos
adc
mov
cwtl
push
add
jne
inc
test
andl
sbb
and
jbe,pt
arpl
std
and
cmp
pop
and
fs
fiadds
push
loopne
add
adc
pop
mov
jge
cmp
inc
leave
pop
and
out
scas
jl
xchg
movsl
lea
test
fsub
add
aaa
loopne
cmp
dec
or
add
mov
sbb
icebp
subl
fisttpl
push
out
and
leave
and
gs
lahf
add
enter
mov
fwait
inc
cltd
sti
setg
loope
adc
scas
pop
shlb
aaa
adc
add
aad
ja
adc
in
cltd
gs
ret
mov
fidivs
pusha
inc
dec
lds
js
add
movsl
jle
daa
add
xchg
push
inc
add
lcall
push
sbbl
jle
jge
fs
loop
sub
adc
je
in
mov
bound
pop
xchg
loope
jge
pop
fstpt
fsub
ljmp
int
mov
pop
pushl
cmp
popf
roll
out
add
fcompl
sbbl
mov
add
addr16
push
inc
adc
mov
std
mov
mov
sub
add
cmp
ret
in
mov
cltd
xlat
jo
leave
sbb
stos
movb
iret
sbb
or
popf
add
add
xchg
add
adc
sub
shl
ret
cmpsw
inc
or
jl
sub
loope
sarb
mov
clc
incl
dec
add
cmpsb
out
lahf
je
test
add
adc
add
inc
sub
jae
cmp
mov
sub
js,pn
jmp
mov
fwait
jp
pop
adc
cltd
inc
sbb
dec
adcb
adc
lods
lahf
add
or
ret
or
das
cmpsb
mov
mov
push
or
push
add
cmp
mov
sub
decb
mov
idiv
ljmp
add
fcmovne
sub
fstps
xchg
std
sbbb
mov
cmc
loopne
dec
repnz
push
loope
pop
das
test
and
mov
pop
xor
out
mov
add
fiadds
loope
mov
mov
gs
or
out
insb
add
and
add
imul
out
int
loopne
movsl
sub
mov
xlat
test
and
jno
lods
cmc
pusha
test
dec
xchg
xchg
add
popl
mov
lret
lods
or
jmp
dec
test
pop
xchg
in
pusha
dec
adc
lock
repnz
sahf
cs
add
jae
add
rdmsr
std
dec
xor
ret
shrl
mov
stos
addr16
mov
mov
sbb
mov
inc
cmp
jmp
fnstenv
addr16
fdivrp
sbb
adc
mov
sarl
add
cli
xchg
xchg
sub
xor
pop
ljmp
mov
add
add
add
pop
push
in
fcomps
add
adc
inc
popf
pop
add
mov
fcom
data16
iret
and
cwtl
je
push
xchg
lret
fiaddl
call
mov
pop
add
add
xor
add
adc
loop
xchg
xor
push
lods
test
xor
sub
popf
test
xor
jmp
out
add
repnz
mov
imul
sbb
mov
add
and
sub
cmp
cltd
scas
das
loopne
ss
inc
push
ret
sbb
or
xchg
test
add
xchg
imull
adc
sbb
cmp
sub
and
daa
outsb
adc
dec
sbb
jmp
mov
rorb
add
fnsave
sbb
leave
inc
pop
sub
sbb
in
add
mov
clc
lds
push
push
mov
pusha
add
test
xchg
out
mov
daa
xor
push
push
loopne
lock
xchg
sbb
sbb
rcrl
push
add
lods
adc
jmp
add
mov
xchg
cmp
add
scas
icebp
ds
pop
xchg
sub
jae
les
cmpsb
adc
flds
xor
insl
cmp
movsb
or
repnz
jo
pop
std
imul
mov
shll
movsl
add
pop
shrb
pop
stos
popf
and
add
jno
popf
add
nop
pop
std
add
aad
lods
fwait
shll
lahf
sbb
das
lcall
add
mov
ljmp
add
or
mov
inc
add
push
dec
jns
pusha
das
pop
dec
testb
add
push
dec
or
add
xchg
dec
push
jns
pop
rolb
in
xchg
cmp
das
stc
es
loop
int
mov
mull
popf
scas
lret
add
leave
adc
adc
jge
cs
sub
mov
or
adc
in
pop
add
sbb
xchg
cmp
mov
lea
cltd
mov
xchg
add
aaa
imul
sbb
ss
in
es
movsb
shrl
push
mov
js
insb
arpl
je
out
data16
fsubs
pusha
fstl
scas
outsl
add
inc
aam
inc
aaa
daa
scas
insb
add
test
stos
add
ss
add
outsl
or
mov
push
dec
sahf
pop
add
xor
jge
fstpt
roll
stos
lcall
add
pop
cmc
out
add
imul
pop
jl
shll
add
push
or
mov
jge
jo
out
mov
dec
lcall
jbe
rcll
pop
jmp
inc
clc
dec
mov
add
in
xor
add
mov
mov
xchg
iret
lock
cmp
leave
in
sbb
and
sbb
jae
test
xorl
xor
mov
sub
jp
insb
lret
mov
mov
jge
mov
adc
into
movsl
mov
xchg
inc
inc
xor
pop
xchg
pop
sub
pop
lea
insb
movsl
jecxz
dec
cs
ja
das
sub
adc
sbb
lea
jl
pusha
loop
in
loope
or
xchg
mov
sub
or
push
test
or
test
pop
outsb
lea
add
sbb
lahf
add
in
mov
das
add
xor
fsts
inc
dec
add
iret
scas
je
std
lods
add
arpl
out
sbb
add
add
sub
pusha
mov
inc
add
add
bound
lea
xlat
pop
sub
fnstenv
jge
shrl
add
inc
daa
inc
les
stos
stc
push
mov
add
cmp
pop
cli
nop
cmc
cs
testl
mov
xchg
das
movl
adc
pop
ret
dec
inc
mov
int
sbb
das
adc
mov
mov
fs
mov
add
add
andl
cmp
inc
nop
dec
push
push
into
loop
movlps
pusha
out
adc
fidivrl
mov
xor
mov
pop
mov
call
inc
jae
xor
dec
add
ffree
fistps
push
mov
es
fwait
add
cmpsl
push
aas
push
and
pop
sub
or
imul
test
jo
xor
jg
push
leave
dec
sbb
iret
fldl
xchg
adc
add
sub
ljmp
sahf
fcmove
mov
mov
in
push
jbe
xchg
jb
decl
ror
add
les
xor
inc
dec
ret
mov
loope
sub
sbb
insb
test
mov
arpl
adc
aam
dec
nop
fstps
add
pop
mov
sbb
lea
add
shl
rclb
or
jne
dec
and
sub
mov
adc
clc
jnp
jle
lea
xlat
xor
inc
insb
push
dec
sub
outsb
jne
arpl
lret
aam
cmp
push
stos
add
and
pop
flds
add
dec
dec
xchg
ret
lea
stc
add
out
pushf
fnstsw
bound
repz
inc
add
push
test
add
push
and
add
loope
or
mov
add
push
rclb
imul
arpl
cli
and
nop
hlt
fidivrs
or
mov
sahf
mov
loope
xor
iret
adc
adc
add
mov
shlb
pop
cmp
pusha
dec
xor
xchg
push
adc
popa
scas
sbb
mov
cmpsl
pop
add
adc
mov
xor
jmp
push
pop
fdivrl
add
nop
inc
lock
stos
fmuls
inc
sbb
push
movb
fs
pop
and
dec
xor
enter
imul
mov
inc
sub
fidivrs
add
push
xchg
and
cmp
add
add
mov
pop
aaa
addr16
xor
jb
loopne
push
hlt
and
test
pop
jle
adc
test
add
add
test
in
aad
mov
pop
pop
stc
and
push
inc
icebp
dec
rclb
ud0
out
mov
add
mov
add
jl
sub
inc
dec
outsb
pop
add
divb
mov
add
xchg
popa
arpl
fdivl
pop
add
cmpsb
loope
jl
sub
fcom
mov
dec
xor
dec
add
mov
mov
loope
mov
mov
data16
inc
lods
jle
pop
add
lret
inc
pop
mov
lret
sub
rcll
inc
aaa
test
decb
add
xchg
inc
insl
jno
mov
add
loope
shl
or
inc
add
icebp
xor
add
test
and
lock
pop
aad
xlat
cmp
enter
cmpsb
inc
out
push
add
xchg
insb
test
pusha
push
adc
sbb
call
inc
scas
pop
pop
pusha
cmp
rclb
dec
ret
lret
daa
cmp
inc
and
mov
inc
ja
shlb
loopne
lret
adc
mov
push
cli
shl
jb
popf
add
test
cmpsb
add
add
scas
xor
add
dec
add
jo
pusha
fldl
adc
mov
loope
mov
hlt
add
mov
and
inc
ss
notb
mov
test
stc
stos
xor
adc
add
cmp
mov
test
mov
pop
add
dec
xchg
adc
pop
les
and
sbb
inc
fimuls
add
sub
add
pop
cwtl
push
sbbb
bound
leave
test
pop
hlt
cld
adc
cmc
sbb
add
popf
adc
jle
sub
hlt
push
xchg
add
in
lret
xchg
add
scas
sub
bound
sahf
mov
pop
jle
popf
shrl
dec
jae
aaa
shlb
xchg
xchg
fnstcw
fcomps
and
sub
sbb
pop
and
mov
push
push
fadds
fs
mov
cld
add
mov
test
cmp
ljmp
scas
mov
adc
rcrl
test
lcall
or
add
jmp
subl
adc
nop
adc
test
in
ja
push
scas
ffreep
add
testb
addr16
test
jle
xchg
mov
loope
cmp
sub
imul
add
push
stc
jo
leave
pop
jecxz
out
xchg
inc
add
lcall
in
push
mov
iret
jae
mov
bound
mov
xlat
jge
hlt
mov
lods
in
mov
mov
dec
out
popl
movsb
dec
add
jo
std
add
jmp
movb
sti
dec
and
xor
cs
ror
aad
mov
call
rcll
jg
imulb
sbb
dec
mov
jmp
push
adc
scas
stos
loopne
stc
int
mov
insl
and
or
sahf
testl
mov
push
sbb
xchg
aam
aaa
mov
loope
xor
test
jmp
or
mov
or
shrl
pushf
adc
jp
add
es
and
ret
push
jmp
daa
xlat
mov
add
mov
add
cmp
stos
add
testl
add
shll
fwait
mov
add
add
loopew
data16
mov
dec
fbld
add
test
daa
mov
pop
and
lahf
in
or
pop
jle
sbb
xchg
sbb
outsb
adc
std
push
loop
or
xor
out
jge
into
cmp
sub
addr16
pop
add
lea
push
sbb
pop
sbb
sub
push
mov
iret
movsl
add
mov
std
and
add
inc
add
pop
cmpsb
add
test
add
push
movsl
aam
rclb
aas
jmp
add
stos
int
in
mov
sub
bound
cmpsl
mov
cmp
jo
test
or
dec
adc
dec
addl
lods
cltd
gs
out
adc
ror
mov
inc
and
shrl
jne
add
sbb
sub
dec
push
or
pusha
add
jbe
dec
pop
cmpsb
or
or
sub
inc
inc
push
pop
stc
stos
test
jns
xchg
loop
lahf
mov
fsubrs
out
loope
inc
xor
adc
in
add
mov
shl
adc
push
add
or
add
es
jo
sbb
xorb
ja
test
push
in
scas
jge
jne
lahf
inc
jecxz
sti
add
dec
leave
in
inc
out
movsb
adc
push
bound
cmp
cs
xchg
xor
push
mov
sub
loop
aad
add
in
lahf
add
sahf
mov
add
hlt
enter
inc
sbb
pushf
xchg
jne
inc
mov
sbb
inc
dec
xchg
test
fwait
data16
adcb
sub
add
enter
sbb
in
sbb
adc
add
ljmp
add
sub
xor
add
pop
outsb
cmp
insl
adc
shl
lock
and
pop
pushf
sub
test
jge
out
sub
add
cmpsl
dec
jnp
lods
add
std
sbbl
jle
imul
mov
jbe
add
add
daa
inc
mov
outsb
imul
jmp
jg
lods
xchg
test
notl
pop
add
inc
lcall
xchg
xor
and
sub
adc
movsb
or
push
xor
push
cmp
pop
scas
mov
cmp
mov
stos
lods
rolb
adc
push
test
enter
js
dec
lods
adc
fs
out
ficomps
add
pushf
inc
andb
adc
sub
roll
and
ss
js
push
add
cmpb
xchg
mov
ret
add
adc
fimuls
xchg
int
jecxz
xor
loop
imul
insb
add
sub
inc
ret
loopne
mov
jo
jno
pop
add
xchg
inc
sub
popf
add
mov
rorb
out
frstor
inc
testb
push
les
fabs
xor
adc
pop
mov
pop
or
out
lahf
outsl
xchg
lock
out
fwait
jbe
cmp
clc
push
inc
xchg
dec
pusha
aad
add
jno
xlat
pop
sbb
mov
xor
bswap
cld
pop
mov
out
pop
or
adc
add
pop
lock
add
out
aas
mov
push
pop
add
ja
daa
imul
repz
movaps
test
loopne
push
ljmp
jb
push
sub
test
rolb
add
insb
push
lret
lds
add
jo
sbb
mov
mov
add
mov
and
inc
cmp
pop
imul
xchg
add
and
int3
popf
pushf
pusha
pop
aad
or
and
mov
aam
cmc
mov
fstps
cld
lcall
psrld
lock
outsb
inc
sub
xchg
jecxz
repnz
adc
sbb
je
xchg
or
add
cs
shll
dec
scas
or
int
add
mov
push
outsl
shlb
data16
out
add
pusha
add
xor
lahf
dec
lods
cmp
sbb
jecxz
lock
lahf
sbb
xchg
iret
xlat
xor
sahf
icebp
dec
ss
add
dec
xchg
in
sti
jns
in
enter
inc
xchg
sbb
out
or
pop
or
xor
push
push
add
inc
add
fwait
in
nop
adc
lcall
mov
repz
pushf
mov
inc
inc
xchg
rclb
fsubl
add
add
dec
scas
insl
lahf
out
sub
jle
dec
lcall
pusha
rorl
xchg
pop
orl
jnp
outsl
popf
lahf
mov
or
in
push
inc
adc
push
cmp
daa
jmp
cld
clc
add
imul
inc
jl
push
mov
cli
dec
add
xor
cmc
push
dec
outsb
pop
add
sub
mov
lahf
nop
insb
adc
add
pop
in
mov
sub
add
cmpsl
or
mov
fdivrl
sub
inc
stos
mov
dec
pop
mov
testl
push
in
enter
dec
pop
mov
and
test
xchg
pop
sbb
or
inc
enter
sahf
fldl
xchg
mov
addb
xlat
enter
mov
xchg
xor
roll
push
xor
add
std
shrb
mov
in
pop
scas
mov
stos
pop
pusha
mov
cmpsb
adc
cmp
lret
push
mov
dec
sahf
fwait
inc
jo
add
mov
adc
mov
popa
and
lret
stos
pop
sbb
jmp
fidivs
jbe
jns
mov
into
cmpsl
xchg
pop
add
test
mov
pop
add
mov
js
push
add
xchg
xchg
dec
adc
xchg
jo,pn
test
jb
leave
xchg
jns
nop
in
lea
jp
nop
jo
pushf
outsb
into
add
add
imul
xchg
mov
mov
fbld
adc
dec
enter
dec
add
and
add
pop
notb
and
stos
stos
imul
add
jnp
adc
and
in
popa
sub
mov
aas
jns
inc
repnz
fs
outsb
daa
add
imul
sbb
fstp
icebp
pusha
ret
cmp
rsqrtps
xchg
xchg
lahf
add
lock
jle
fsubl
add
xor
cmp
jae
aad
push
push
testl
inc
shlb
pushf
jle
cwtl
sub
or
out
lret
in
loopne
mov
imul
add
aam
scas
adc
sub
add
or
add
ss
pusha
lahf
mov
mov
enter
pop
cwtl
icebp
push
mov
cmp
jae
mov
pusha
sarl
cli
sbb
pop
or
outsb
cmp
stos
lahf
popa
add
call
test
repnz
add
push
pusha
jns
push
adc
pop
loope
mov
dec
or
mov
sahf
ret
sar
sbb
xchg
pusha
dec
inc
jnp
aaa
xchg
je
push
out
mov
inc
ret
mov
mov
push
xor
or
mov
or
popa
fsubs
xchg
mov
jg
add
push
imul
add
push
and
imul
sub
jbe
xor
cs
dec
std
mov
add
aam
dec
inc
xlat
xchg
inc
outsb
or
icebp
lods
pop
add
push
adc
add
dec
push
dec
loop
nop
aaa
or
cmp
and
xlat
andl
fists
fadds
dec
pop
dec
lods
pusha
mov
cmp
ss
stos
insb
add
sub
ret
sub
sbb
cld
and
mov
js
mov
loope
add
sbb
ss
fiadds
arpl
scas
xor
popa
mov
das
shll
ds
pop
lahf
pusha
ja
pusha
sub
jo
in
stc
adc
add
mov
add
rorl
hlt
jmp
outsl
scas
rcl
xchg
repz
loop
jb
mov
rcr
and
outsb
clc
add
inc
adc
adc
imul
or
ja
movups
fdivl
outsl
add
and
sub
xchg
ja
pop
xlat
shrl
xor
xor
loopne
stos
inc
aad
add
je
loope
cmp
dec
sub
dec
mov
jecxz
dec
xchg
mov
sbb
shlb
add
jnp
xchg
xchg
push
inc
outsb
add
cmp
out
xor
add
add
jge
cld
sarb
stos
popf
int
test
dec
es
jg
mov
lret
xchg
clc
xchg
arpl
jecxz
push
lds
sub
lret
push
fimuls
sbb
push
mov
dec
add
pop
repnz
add
out
xor
iret
popa
dec
and
pop
dec
jbe
rcrb
add
xor
mov
mov
out
cmp
pop
xor
sub
int
fwait
jns
dec
out
mov
les
xchg
add
lea
pop
mov
push
and
mov
adc
inc
loope
xor
add
cltd
add
rcrl
rep
inc
mov
mov
cmpsl
cli
add
repz
int
hlt
lods
imul
lahf
or
rcll
pushf
fnstcw
leave
cmpsl
mov
sarl
add
std
push
jne
add
xor
cmp
ljmp
mov
test
icebp
cmp
pop
loopne
and
adc
push
repz
lahf
fwait
adc
xor
shll
movsb
pushf
fisubs
orb
adcb
hlt
push
jl
sbb
sarb
adc
inc
scas
repnz
icebp
inc
in
es
and
cltd
in
rolb
add
cmp
lar
outsl
mov
lods
stos
lret
cmp
cmpsl
add
jnp
pop
and
outsl
mov
mov
add
dec
cld
cmp
popf
andl
clc
mov
add
std
dec
add
adc
lret
jge
or
cmp
in
data16
cmp
add
mov
cmc
sarl
repnz
jle
inc
and
js
sbb
cld
mov
adc
add
leave
daa
mov
arpl
test
addl
add
popf
pop
mov
inc
int3
cli
ss
mov
sbb
xchg
cltd
jnp
hlt
mov
mov
dec
jmp
outsl
mov
inc
jnp
mov
add
loopne
fstpt
xchg
imul
dec
and
inc
lret
iret
pusha
je
pusha
mov
lock
pop
pop
push
xchg
adc
adc
lcall
loope
loopne
cmp
nop
or
gs
add
mov
call
into
xor
bound
lret
stos
inc
mov
pusha
dec
enter
pop
lock
cmc
loopne
int3
xor
ds
in
jbe
push
pop
test
sarl
dec
add
stc
push
add
pop
or
cmpsb
sbb
add
adc
sub
add
add
xorl
cmp
xor
fmul
sub
adc
clc
arpl
cmp
mov
int
pop
js
sbb
shl
jo
add
pop
push
pop
mov
dec
dec
pushf
movsb
sbb
adc
jb
loope
add
addr16
inc
mov
pusha
xchg
divl
repnz
add
adc
pusha
xchg
out
imul
sti
adc
addl
bound
stc
mov
inc
mov
adc
xlat
popa
add
mov
dec
lock
push
cmpsb
add
pusha
movsl
mov
sub
in
add
ss
push
and
push
add
shrb
sti
and
aad
arpl
test
repnz
mov
ds
or
shl
push
fnstsw
add
fimull
xchg
inc
mov
add
pop
lods
loopne
lea
fisttpl
xor
adc
addl
pop
xor
fiaddl
sbb
mov
mov
dec
insl
mov
cli
or
addl
insb
xchg
inc
mov
add
sbb
xchg
adc
mov
add
aaa
adc
pushf
or
jg
mov
mov
lcall
fucomip
lcall
iret
dec
lds
push
mov
xchg
cs
inc
lock
xor
sbbl
jnp
adc
les
ret
add
ret
leave
jo
movsb
add
push
mov
loopne
push
xor
repnz
sahf
roll
sub
fnstcw
lock
or
mov
arpl
add
into
stos
push
pusha
cmp
and
dec
inc
adcl
inc
mov
insb
adc
sub
sbb
xchg
mov
in
jo
in
jl
cli
add
lods
sub
aad
jo
pusha
mov
mov
sahf
dec
add
int3
sub
add
mov
aad
fildll
outsb
push
adc
mov
arpl
fcmovb
outsl
fnstenv
aad
sbb
pop
mov
int3
xorb
pusha
in
fsts
dec
aaa
adc
add
sub
xor
inc
lret
daa
aas
add
xor
out
pop
cwtl
add
les
pop
loopne
addr16
push
jns
mov
sbb
int3
cmpsl
test
mov
loope
add
inc
cmp
add
mov
stos
mov
nopl
add
add
jg
add
add
inc
pop
popa
imul
push
sarb
fsubr
rcrb
outsl
ja
push
sbb
jnp
adc
dec
into
mov
sub
stc
xchg
test
xor
mov
cmpsb
test
lret
jne
loopne
push
or
inc
pop
add
shll
add
callw
jmp
sbb
mov
add
cmpsb
les
rorl
rcll
jne
int
push
push
sub
push
fmull
add
popa
adc
mov
push
jp
insb
nop
neg
mov
jne
cmp
sbb
test
cwtl
xlat
dec
ljmp
pop
pushf
out
pop
je
add
jmp
mov
mov
bound
pop
movsl
int3
jno
adc
add
and
xor
push
cwtl
les
out
mov
pop
test
add
inc
and
rorb
pop
gs
lods
push
jo
jae
inc
add
push
inc
sbb
mov
test
lret
loope
shrl
sahf
icebp
push
xor
mov
add
cltd
lds
jb
std
add
pop
pop
insb
mov
pop
mov
mov
push
or
es
daa
cld
push
sbb
dec
mov
or
loop
inc
add
stos
mov
sbb
push
repz
lret
fists
insb
std
adc
daa
ja
mov
lds
sahf
jecxz
fucom
fisubs
fldl
dec
inc
add
sub
loopne
stos
adc
xchg
add
out
cmp
cmp
jecxz
add
jb
insb
inc
inc
and
mov
push
stos
in
loop
cltd
notb
rorb
dec
mov
fs
int
adc
cmp
cli
movb
aaa
push
jle
mov
xchg
cmpb
inc
push
or
xchg
out
sarb
ds
movb
jbe
lds
pop
jmp
enter
adcb
aam
popf
in
xor
pop
pusha
iret
mov
popl
pop
in
hlt
mov
xchg
testl
jbe
ja
pop
aas
call
cli
lock
cmc
lods
mov
loopne
xchg
dec
jl
add
negl
mov
add
icebp
shll
and
mov
in
fildl
loope
pop
adc
movsl
lods
popa
rolb
scas
add
nop
fildl
push
add
gs
push
popf
mov
and
xchg
push
lahf
lcall
or
add
or
xchg
pop
add
xchg
ds
fwait
jecxz
das
jne
adc
and
popa
shlb
out
jo
ss
fs
movsb
lret
mov
lods
and
cld
add
jmp
add
add
pop
lcall
and
cld
lahf
push
daa
in
les
bswap
fs
and
mov
ss
rcr
add
lods
int
push
add
shlb
push
pop
add
inc
loop
mov
add
aaa
icebp
and
or
lret
mov
push
sub
mov
fildll
insl
movsb
xlat
mov
sarl
fwait
adc
jl
add
in
inc
add
push
xchg
mov
add
mov
movsl
and
pop
lock
jl
addb
popa
push
gs
fbld
jecxz
jbe
incb
fstps
push
xchg
sarb
outsl
and
das
fisubs
scas
and
mov
add
xchg
or
mov
and
pop
push
rsm
add
in
rolb
ret
jecxz
cmp
ret
flds
sti
inc
negb
or
scas
pop
ret
sbb
out
add
adc
dec
cmp
xchg
addr16
sbb
ds
pop
add
fwait
xor
push
nop
jns
js
loop
out
lret
push
notl
push
push
clc
cmp
cmpsb
cmp
lea
fdivl
popa
aad
sahf
gs
add
xor
out
lods
ja
movsl
sbb
ret
xchg
add
lret
add
scas
sbb
shrb
inc
imul
xor
mov
adc
incl
jnp
cmp
mov
mov
popf
in
add
push
aas
add
mov
ljmp
sbb
or
cmp
pop
jle,pt
imul
adc
stc
ret
ret
push
imul
js
xchg
mov
sbb
repz
add
cmc
pop
push
and
daa
or
outsb
int
push
and
dec
pop
inc
jns
pop
sbb
shl
rclb
push
push
dec
ret
add
sub
mov
outsl
sub
hlt
in
jne
sbb
daa
inc
cmp
push
js
add
mov
int3
dec
inc
inc
sub
hlt
dec
out
roll
jmp
add
push
xchg
xor
dec
inc
add
into
sbb
hlt
mov
pop
ss
cs
add
sbb
cli
add
jno
add
fistpll
push
mov
cmp
cld
or
jmp
xchg
aaa
jle
push
sub
ficompl
mov
sub
inc
sbb
add
push
cmpsl
testb
mov
mov
sti
inc
je
xchg
data16
mov
sbb
pop
mov
add
mov
push
shlb
mov
fs
js
push
xor
testl
stos
add
stos
out
mov
lods
jns
icebp
push
jg
popf
or
fnstenv
and
adc
notl
adc
in
clc
out
lahf
popf
outsb
add
mov
inc
repz
dec
jmp
sub
cltd
enter
pop
and
cld
cmp
repz
movsl
add
mov
popf
lods
and
out
pop
add
jne
add
popa
cmp
add
and
and
shrl
push
xor
insb
cmp
into
inc
fildl
loopne
lahf
push
mov
adc
pop
add
fidivrl
cwtl
test
xchg
push
and
imul
setg
cli
push
add
scas
test
les
clc
int3
mov
movsl
mov
add
jle
cmp
push
sbb
pop
sbb
lods
pusha
in
adc
outsl
sub
movsb
enter
aaa
cmpsl
adc
stos
ret
jae
pushf
or
iret
mov
or
xor
fbstp
adc
test
loope
mull
adc
dec
jne
jge
mov
and
sahf
cs
ds
or
ja
cmp
xlat
xchg
add
addb
arpl
lods
jmp
add
popa
or
aam
pop
fs
mov
sub
mov
jnp
or
mov
inc
or
push
adc
xor
fnstcw
dec
lcall
add
pushf
dec
push
mov
fmuls
inc
inc
jp
je
mov
adc
insb
fiaddl
push
mov
cmp
sbb
mov
sahf
scas
add
cmc
mov
sahf
sbb
add
mov
loope
inc
cwtl
mov
or
sub
daa
mulb
in
inc
repnz
pop
scas
icebp
pusha
sbb
mov
inc
loopne
sti
lods
lret
jmp
or
mov
cmc
repz
es
and
mov
xchg
adc
ds
mov
add
xchg
popf
add
mov
test
cmpsb
mov
xchg
int3
fmull
popf
test
mov
xchg
loopne
or
pop
sbb
add
mov
test
mov
sbb
mov
clc
mov
pusha
aad
push
xchg
std
adc
mov
loop
insl
or
push
imul
outsb
pushf
adc
pop
push
stc
subl
jns
cli
out
adc
stos
xor
mov
pop
inc
sbb
and
addr16
loop
push
jno
and
xor
scas
add
push
mov
enter
bound
sub
rdpmc
mov
sub
in
mull
popf
sbb
add
or
adc
sub
jl
push
dec
add
out
inc
and
cld
jecxz
stc
cmpsl
add
jno
js
add
nop
sub
hlt
cmp
mov
mov
dec
scas
movsl
add
mov
and
sbb
pop
adc
dec
mov
dec
sub
ror
push
cld
inc
sub
in
sbb
mov
pop
and
aad
add
ss
adc
icebp
sahf
xchg
into
and
cmp
mov
add
gs
add
cmp
mov
jnp
push
lahf
into
push
ret
movaps
ret
and
pop
int3
jle
inc
hlt
adc
inc
mov
cmpsb
sbb
loop
add
outsb
shl
sti
sbb
imul
insl
das
mov
push
shll
pop
dec
xor
push
loopne
mov
xor
lds
outsl
push
mov
jmp
xorb
or
lahf
adc
sbb
call
popa
or
xchg
pop
sbb
or
inc
movsl
gs
adc
das
add
mov
xchg
ror
arpl
dec
imul
pop
mov
imul
push
sbb
and
mov
inc
loope
les
mov
push
insl
add
jecxz
out
push
xchg
or
lock
xorl
cmpsl
pop
call
scas
ljmp
jno
stc
sub
popf
adc
es
scas
ret
add
clc
sbb
inc
mov
mov
scas
or
or
add
in
add
xor
into
sub
or
adc
add
stos
xchg
mov
pusha
das
outsl
mov
scas
cli
push
mov
je
fwait
pop
inc
mov
test
repnz
add
sub
or
movsb
cmp
and
rclb
inc
sbb
and
pop
sbb
stc
out
adc
ret
sarl
push
add
push
lea
sub
add
xor
loopne
cltd
adc
inc
add
pop
xchg
sti
push
into
mov
das
rolb
cmp
stos
xchg
add
sahf
push
je
xor
and
pop
fbld
jl
repz
pop
or
out
jecxz
in
pusha
adc
testl
lods
pop
stc
lahf
sbb
and
mov
aaa
push
adc
cltd
cmp
mov
in
jno
fwait
dec
inc
xorl
mov
xchg
fcmovnbe
xor
xchg
sarb
xor
mov
mov
mov
pop
pop
inc
lds
repnz
stos
xchg
cmp
jo
xor
push
imul
pop
and
ljmp
data16
scas
pop
dec
cld
shr
adc
rcr
or
mov
adc
inc
mov
xchg
or
add
pop
jp
lahf
fadds
into
mov
lds
and
inc
lret
jmp
or
rolb
sbb
clc
pop
cmpsl
jae
jp
in
and
rolb
add
in
clc
jnp
mov
xorb
pop
adc
das
movsl
add
push
in
pop
xchg
daa
loopne
mov
adc
adc
push
sub
in
cmp
xchg
out
mov
lods
sbb
loope
ret
or
xchg
test
out
xchg
and
add
out
jno
xchg
cwtl
push
les
cld
jbe
dec
fnstenv
jecxz
mov
pop
lahf
add
mov
jb
mov
cmpsb
add
sahf
add
inc
xchg
loopne
loop
inc
pop
add
fnstsw
js
ja
dec
jl
xchg
add
jo
inc
iret
loopne
cmc
add
in
into
sbb
or
arpl
push
fildll
adc
rolb
jbe
sub
cmpsl
push
addr16
hlt
ljmp
outsb
pop
loope
xchg
leave
push
lcall
lret
insb
add
jns
push
add
subl
loop
jo
sbb
or
rorl
lods
enter
xchg
and
dec
cwtl
add
inc
dec
push
je
mov
mov
jae
test
inc
pop
fchs
cmp
push
fiaddl
fs
pusha
add
std
imul
les
mov
sti
cli
add
imul
repz
xchg
lret
or
sbb
xor
push
push
xor
and
cmp
cld
outsb
cs
dec
inc
ja
mov
sub
loopne
lret
mov
cld
sbb
jbe
in
cmp
xchg
mov
inc
ds
cltd
pop
jmp
lret
jge
mov
pop
push
cmc
add
fld
mov
daa
fistps
pop
lahf
adc
aam
pop
adc
cld
or
fsubrl
jb
add
push
in
cmpxchg
xor
insl
add
push
add
rorl
adc
dec
sbb
add
aad
jns
xchg
pop
add
mov
test
aam
sub
cs
add
add
jbe
add
mov
test
movsb
or
and
sti
in
pusha
adc
lret
clc
sbb
fdivrl
pop
scas
ljmp
mov
mov
xchg
test
adc
mov
hlt
sbb
mov
into
iret
inc
scas
mov
sbb
mov
mov
push
js
jp
sbb
cli
add
adc
in
mov
out
mov
das
mov
std
lods
lcall
stos
mov
inc
popa
out
arpl
pop
xchg
lea
fstl
loope
ja
sbb
mov
and
and
cmpsb
sub
adc
loopne
divb
add
in
adc
sahf
mov
dec
je
sbb
jne
and
or
das
add
test
xchg
jmp
roll
dec
mov
rolb
shrl
add
mov
add
push
push
stos
fwait
xlat
jae
lea
adc
cli
std
insl
sarl
jecxz
add
dec
ret
outsl
jnp
testl
mov
insb
push
mov
test
pop
add
dec
add
fmull
inc
lret
pop
push
mov
xchg
lea
mov
ret
enter
mov
pusha
aad
push
cmp
and
movsb
mov
cmp
and
test
je
push
fiaddl
dec
xor
imul
sbb
das
stos
in
xchg
dec
add
xor
mov
mov
cs
mov
test
mov
pop
jno
js
pop
or
pop
pop
add
xchg
xchg
mov
push
mov
add
out
mov
enter
fsubs
add
lds
mov
hlt
mov
int3
nop
inc
aam
cmp
cs
or
fwait
sub
in
jg
or
xlat
ljmp
xchg
mov
mov
and
lock
xchg
test
sbb
jle
pop
inc
inc
movsl
pop
subb
fisttpl
mov
mov
popa
lds
popf
fnsave
loopne
push
outsb
sbb
out
and
aas
xchg
push
and
and
xor
lods
or
xlat
insb
inc
popa
mov
js
add
pop
add
xchg
cmp
jmp
add
lret
out
int
mov
jne
leave
add
sbb
arpl
faddp
out
xchg
pop
add
bound
add
in
inc
enter
fmuls
xchg
xchg
das
xchg
push
and
pop
lea
add
fcoml
mov
jmp
lea
dec
cmpsl
fdivrp
mov
jo
or
jp
aam
scas
pop
sbb
stc
push
xor
xlat
test
push
iret
mov
sub
in
mov
sbb
cmp
jb
lods
xor
pop
adc
cmp
aaa
jnp
pop
push
pusha
xchg
push
aad
or
adc
clc
add
sbbb
test
pushf
dec
mov
js
cld
and
dec
sti
cmpb
add
mov
adc
pushf
or
add
jge
xlat
push
sbb
mov
pop
fndisi(8087
inc
fcomps
sbb
cltd
int3
jle
mov
inc
out
aaa
add
fisubrl
add
clc
push
dec
hlt
add
notb
cmp
pop
xchg
pop
add
outsb
jb
ja
or
std
daa
mov
mov
nop
push
jecxz
in
pop
jl
pop
xor
in
dec
inc
push
int
mov
push
nop
cmp
xchg
add
enter
xchg
insb
add
lock
popa
xchg
repnz
inc
loopne
ljmp
lea
aaa
fs
loope
push
xchg
sub
inc
pop
in
add
sbb
jecxz
cmpsl
popa
shrb
cmp
fadds
lds
add
add
adc
push
loope
adc
ret
jle
arpl
pop
scas
call
inc
mov
movsl
outsl
and
and
ret
iret
or
pop
jl
pop
adc
cmc
les
and
cmp
inc
jnp
jge
sarl
nop
sbb
sbb
and
cmp
loope
flds
in
mov
lea
add
xchg
je
sbb
jmp
int
xchg
icebp
fcoml
adc
dec
pop
push
mov
int3
xor
mov
cmpb
out
jmp
sub
jnp
mov
add
adc
xor
push
mov
cs
add
inc
mov
xchg
faddl
xchg
push
pop
not
adc
mov
xchg
mov
aam
cltd
add
ret
xlat
pop
shlb
add
fisttpl
xor
add
roll
out
in
dec
scas
sub
sub
mov
movsl
or
lods
lock
xchg
aad
jns
xchg
mov
loope
ret
adc
or
mov
loopne
mov
lods
add
pop
push
and
push
xor
xchg
nop
and
movb
and
lret
les
ret
sub
lret
mov
pop
mov
int3
stos
out
icebp
fstpl
idivl
test
adc
cmp
outsl
xor
mov
pusha
sbb
je
std
inc
sbb
mov
pusha
fs
add
aaa
lock
je
push
sti
das
xor
xchg
rcrl
repnz
mov
scas
jg
movsl
push
pop
dec
xorl
adc
test
push
add
pushl
dec
adc
and
ret
fistpl
lcall
mov
mov
pop
sub
hlt
inc
jmp
mov
add
ret
mov
add
insb
fninit
mov
inc
jge
xchg
mov
adc
adc
mov
or
popl
inc
or
adc
adc
in
clc
cmp
inc
mov
insb
sbb
mov
sbb
pop
add
fnstsw
add
mov
cltd
cmp
and
cmc
fsubs
leave
in
ds
pop
popf
xorb
test
rclb
mov
add
lds
decb
fbstp
xchg
repz
adc
mov
ss
sahf
cmc
adc
jle
xor
cmpsl
mul
adc
mov
add
cwtl
test
adc
xchg
lea
mov
xor
lcall
dec
add
rorl
and
loop
andl
lock
lahf
adc
fcoml
cld
loopne
cmp
and
jp
pop
icebp
adc
lea
pop
scas
pushf
loopne
ret
rcrb
std
sti
jnp
add
xchg
stc
adc
mov
or
mov
adc
cli
add
aaa
jge
mov
pop
and
imul
or
aas
push
outsb
push
jno
insb
push
and
sbb
dec
xor
fisttps
loopne
xor
shl
sbb
out
ljmp
sbb
add
bound
or
fnsave
add
mov
popf
add
cmc
pop
lea
je
add
or
sti
insl
fnstsw
jae
xchg
jmp
lds
jne
pusha
insl
cmp
sarl
adc
and
mov
icebp
or
jns
inc
add
ror
inc
loop
testb
idivl
les
out
icebp
sbb
or
ljmp
loope
aaa
push
add
adc
or
xor
pusha
les
das
jno
sub
test
mov
xor
loop
or
gs
jne
sbb
pop
add
cmpb
xchg
push
mov
xchg
or
sbb
pop
dec
mov
or
add
imul
add
aam
and
xor
addl
dec
cmp
aad
int3
add
stc
cmpsb
test
mov
aam
fldenv
sbb
xchg
ret
pop
dec
and
add
iret
dec
fsubrs
cmp
mov
add
ljmp
and
cs
and
pop
inc
add
shrb
cltd
inc
clc
push
mov
add
mov
lock
dec
push
jecxz
jb
outsl
pop
xor
das
adc
inc
in
adc
mov
inc
movl
mov
or
inc
es
sbb
sub
adc
aam
mov
add
movsb
jge
or
xchg
push
or
mov
pop
icebp
jle
mov
ljmp
pop
and
xor
clc
test
ljmp
pop
xchg
aaa
or
loope
pusha
sbb
test
loope
push
add
pusha
shr
arpl
push
outsl
in
pop
xor
sbb
jo
add
or
fs
mov
lret
loope
lock
add
test
and
test
adc
cmp
cwtl
add
fldl
cld
leave
mov
filds
or
mov
aam
inc
les
mov
jae
mov
xchg
add
mov
sbbb
fldcw
push
add
iret
test
mov
das
sub
adc
rorl
mov
push
add
xchg
call
lods
popf
sahf
add
dec
cmp
cmc
loop
pop
inc
inc
pop
icebp
faddp
hlt
lds
sbb
push
repnz
add
or
pusha
sbb
and
outsl
ret
jnp
pusha
mov
pop
adc
jmp
push
out
or
enter
cltd
pop
dec
cmp
testl
adc
inc
rolb
inc
push
mov
push
cmpsb
popa
xor
adc
add
jge
lock
cmp
fiadds
fs
xchg
pop
inc
jl
lahf
flds
pop
sbb
push
mov
xlat
pop
jg
mov
xchg
sub
out
push
orb
repnz
push
xchg
add
je
cli
push
and
mov
jbe
pop
add
mov
mov
negl
rolb
enter
add
and
aad
mov
mov
and
fwait
pusha
jecxz
repz
pop
sbb
iret
gs
ja
jmpw
shlb
mov
lahf
loope
clc
adc
ficoms
add
adc
test
ss
sub
dec
jp
mov
mov
lock
push
adc
mov
adc
dec
xor
xchg
test
nop
lahf
add
jle
fists
aad
or
adcb
mov
push
or
add
movsb
jl
sbb
lea
mov
mov
add
push
outsl
fsubrl
cli
adc
shl
mov
jmp
loopne
sbb
mov
add
xchg
mov
add
cmp
jle
lahf
out
stos
repz
add
inc
add
mov
stc
cmp
push
pop
insl
add
frstor
in
test
fdivr
jecxz
cmp
adc
out
sbb
ja
pop
cld
addr16
add
adc
ror
add
call
jno
loopne
enter
sbb
or
mov
sahf
or
call
adc
jno
pop
loopne
leave
push
in
cmpb
add
inc
sbb
add
dec
push
or
gs
pop
add
cmp
lods
cwtl
add
push
adc
jecxz
enter
jg
add
idiv
cmpsb
inc
in
dec
dec
cwtl
test
lcall
mov
sub
rclb
add
ds
add
or
xorl
jo
push
push
push
adc
repnz
and
outsb
stc
gs
cmc
mov
imul
mov
js
dec
cmp
adc
pop
fsubrl
in
fwait
jns
adc
pop
xchg
andl
lret
inc
push
and
aad
push
add
lret
in
movsl
adc
add
pop
mov
add
leave
or
bound
push
inc
inc
scas
mov
loopne
or
mov
adc
daa
pushf
sbb
mov
xor
and
mov
add
rclb
or
add
lret
sbb
mov
loopne
fdivrs
xchg
pop
js
rclb
xor
adc
add
lds
andl
test
in
add
mov
pusha
mov
lock
adc
sbb
and
loopne
add
jmp
pop
out
cmpsl
mov
adc
push
push
xor
jg
mov
add
clc
inc
ja
xor
xchg
sbb
dec
ss
fucomi
sbb
scas
jl
inc
inc
adc
mov
repnz
mov
sbb
dec
mov
in
mov
pushf
sbb
mov
out
mov
movsb
lea
imul
push
mov
lret
adc
mov
mov
ds
in
cmp
loope
loope
xor
adc
sbb
add
pop
xchg
mulb
xchg
inc
cli
ret
mov
add
leave
lds
xor
fneni(8087
ret
das
repnz
jmp
faddl
pop
pop
mov
je
ret
js
lds
add
movsl
loopne
xchg
outsb
pop
decb
fisubs
insb
push
inc
xor
fmull
push
out
mov
sub
scas
add
push
pop
cmpsl
stos
ret
jno
or
pusha
scas
loope
mov
xchg
sbb
outsb
add
jg
sub
mov
rclb
and
popf
jge
roll
in
cmp
rcrl
sbb
sti
sbb
ret
add
adc
adc
mov
int3
aaa
and
pop
mov
addr16
jmp
fidivl
ljmp
fsubs
dec
sub
or
add
and
inc
cmp
inc
mov
mov
add
addr16
jo
rcrb
daa
inc
push
rcrl
jns
or
cmpsb
nop
popa
sub
rcll
popa
mov
fwait
mov
mov
loope
andb
jecxz
lret
in
xor
add
sub
roll
mov
fisubrl
xchg
adc
xchg
ret
xchg
push
loopne
pop
lret
insb
pop
je
add
out
insl
add
and
fwait
pop
dec
out
adc
cmp
jnp
mov
addl
dec
add
arpl
loope
xor
add
cld
xchg
testl
pop
pushf
test
sahf
mov
add
adc
mov
adc
sub
cmc
or
movsl
inc
imul
mov
pusha
pop
shrl
add
mov
push
and
je
pop
pop
jmp
xlat
sahf
add
sti
arpl
outsl
mov
lock
rol
add
add
mov
repnz
pop
mov
imul
adc
adc
addr16
lret
out
cmpsb
mov
xchg
subl
adc
je
testb
loopne
jo
inc
cmc
ds
rcrb
sub
cmpsl
xchg
cmp
lret
in
loope
sbb
addr16
cmp
cmp
mov
aas
jecxz
shl
cmp
ljmp
xchg
add
pop
mov
cmp
out
pop
inc
std
sbb
push
inc
test
popl
dec
mov
add
adc
ljmp
inc
pop
and
cmp
fcompl
jp
pop
adc
push
jns
mov
add
cmp
insb
jecxz
repz
mov
dec
lahf
mov
or
nop
sbb
fisubs
dec
mov
push
fdivs
loopne
in
cmc
fstl
sbb
pop
in
leave
sbb
and
and
movl
inc
das
lahf
and
mov
sub
scas
sbb
sbb
flds
test
dec
pop
loop
xor
es
push
sub
push
add
jb
or
sub
cmp
jl
fs
jmp
mov
adc
inc
repnz
in
push
enter
and
push
bound
sahf
mov
add
push
and
jl
int
rorl
test
pusha
sub
das
push
mov
add
pusha
adc
add
int
clc
bnd
pop
dec
add
daa
fiaddl
mov
mov
cmpsl
mov
dec
add
jge
fdivs
sbb
mov
push
adc
pop
xchg
cmp
jb
aam
add
inc
xchg
xchg
leave
cwtl
add
pop
sbb
fisubl
mov
outsb
add
lock
add
in
mov
and
mov
cli
test
or
mov
mov
les
sbb
mov
rcll
jecxz
dec
push
add
aad
leave
add
pop
test
shll
or
ljmp
aam
adc
ficomps
loopne
bound
pusha
ljmp
mov
adc
push
in
in
sbb
adc
push
mov
adc
clc
inc
cwtl
sbbl
negl
jae
xchg
or
mov
loop
adc
ljmp
push
sub
add
pop
das
popf
sub
ljmp
arpl
dec
lcall
add
add
dec
mov
outsb
and
add
jmp
fwait
lret
fmull
push
add
fwait
out
sbbl
and
filds
mov
lea
in
into
jb
sub
test
xchg
ljmp
bound
out
mov
cmp
in
ljmp
ja
jbe
outsl
pusha
jns
jb
adc
cmp
cwtl
lcall
mov
add
vpmaxsd
in
add
mov
je
add
andb
xchg
mov
cmpb
dec
dec
adc
insl
add
push
outsl
mov
jb
xchg
jp
or
lock
xchg
push
xor
cmp
fwait
outsb
jp
rolb
repnz
xchg
mov
and
pusha
addl
jbe
jle
ja
cs
mov
out
bound
adc
out
pop
push
add
or
cmp
mov
push
jecxz
cs
shl
sbb
test
scas
mov
imulb
add
push
add
imul
loopne
jecxz
out
pop
lods
iret
lock
cli
pop
mov
call
push
xor
das
mov
xchg
inc
xor
add
push
ds
outsb
leave
push
and
cmc
out
test
cmpsl
fwait
jmp
jbe
dec
xchg
adc
mov
std
mov
loope
sub
pop
fisubl
mov
xchg
cmc
inc
cmp
add
mov
jg
adc
insl
ret
test
xchg
add
mov
add
shll
fmuls
in
popa
clc
mov
adc
xchg
gs
dec
push
movsb
inc
push
xorl
or
xchg
mov
xlat
mov
mov
push
pop
jmp
and
pxor
popa
mov
bound
add
pusha
inc
ss
cmp
mov
and
sbb
mov
xchg
bound
add
fsub
addb
xor
sbb
hlt
add
add
or
adc
loope
sahf
aam
add
in
lods
cli
out
add
mov
test
mov
xchg
roll
cs
data16
pop
imul
lret
jle
push
les
add
xor
sub
popa
into
fstl
loope
test
movsb
xor
xchg
and
xchg
popf
adcb
leave
xchg
addr16
lock
out
icebp
adc
test
mov
and
mov
jb
loop
push
push
mov
cmp
pushf
inc
sahf
out
mov
sbb
cs
rclb
sbb
push
in
add
mov
es
mov
or
and
lcall
pop
insl
add
mov
loopne
imul
test
push
mov
fiaddl
stc
jecxz
xchg
lods
jp
jns
hlt
mov
aas
stc
bound
out
addps
mov
add
idivl
movsb
add
dec
add
popa
bound
mov
push
mov
test
pusha
dec
sbb
push
pop
aad
adc
push
xchg
add
inc
inc
fisubrs
mov
and
dec
xor
sarb
shrl
add
mov
lds
fdivrs
pusha
push
cld
mov
pop
movsl
jp
cli
mov
adc
add
shrb
movsb
add
lods
lret
icebp
aaa
daa
cmc
add
cmp
adc
add
xchg
insl
popf
loope
adc
out
in
or
xchg
adc
out
push
sub
add
jl
adc
js
fstps
pusha
mov
addr16
xor
notl
cmpsl
mov
mov
andb
pop
mul
int
cmp
sbb
inc
pusha
mov
outsl
mov
and
xchg
ja
js
xchg
xor
add
outsl
mov
add
shr
cwtl
or
dec
mulb
into
leave
ret
jo
insb
jnp
add
int3
lret
mov
mov
mov
push
stc
add
js
pop
roll
test
sbbl
mov
loopne
sbb
add
add
test
loope
push
dec
int3
or
xor
push
lahf
nop
add
aas
icebp
sbb
mov
add
data16
pop
in
dec
mov
call
pop
sbbl
add
add
sub
hlt
dec
adc
adc
push
or
repnz
mov
add
rcrl
imul
loop
mov
scas
push
add
idiv
push
daa
xor
repz
push
ds
daa
adc
decl
and
int
cmp
cmp
add
aaa
arpl
cmpsb
jne
jle
dec
dec
mov
and
subl
push
jl
or
loope
add
ficompl
sub
sahf
ret
mov
xchg
add
jnp
inc
loop
dec
arpl
aas
mov
jl
jecxz
repz
mov
lret
outsl
sahf
add
and
out
jne
cmp
jp
cmc
daa
adc
call
repz
add
cs
pop
sbb
data16
je
mov
outsb
scas
loopne
mov
sbb
mov
adc
jmp
add
in
lods
fiadds
sub
cs
mov
outsl
mov
sbb
scas
mov
pop
frstor
dec
aaa
in
xor
sub
xor
ds
fsub
movb
jno
pop
test
add
fcmovne
cmp
push
xor
sub
add
push
xorl
adc
in
or
pop
lcall
scas
mov
std
mov
add
hlt
add
movsl
fldl
add
cmp
out
mov
and
xchg
fadds
add
sbb
lret
outsl
jl
add
jecxz
sti
sahf
mov
enter
icebp
sub
add
les
imul
adc
mov
push
push
jnp
push
rcrl
popa
iret
movsl
or
jns
or
cwtl
mov
dec
pop
adcl
cld
mov
or
cmp
rclb
fildl
fcoml
xor
mov
jp
xlat
fimuls
sbb
mov
add
out
mov
add
adc
add
jecxz
dec
iret
add
or
adc
test
sub
aaa
inc
and
xor
push
sub
mov
insl
or
loop
adc
int
bound
adc
jp
mov
mov
negb
testb
loope
push
ds
sbb
sahf
aaa
add
dec
mov
fldl
fsub
add
test
fildl
xlat
inc
repnz
in
pop
mov
lahf
lods
inc
and
imul
mov
adc
daa
outsb
cld
pushf
inc
add
xchg
loopne
push
sbb
lret
cld
out
jb
les
mov
pop
pop
out
and
inc
call
fwait
pop
mov
leave
sbb
xchg
pop
sub
add
dec
ja
mov
hlt
adc
xchg
mov
add
jns
pop
fsubr
pushf
add
dec
addb
and
mov
push
cwtl
adc
add
fmull
jns
rcl
scas
test
and
fistpll
je
and
and
sub
add
push
push
ret
nop
scas
mov
mov
outsb
push
jae
mov
fnstenv
in
mov
aaa
cmpsb
ljmp
add
push
out
lahf
mov
fcmovnb
lds
call
arpl
add
cltd
inc
adc
jns
pusha
and
and
add
gs
sti
lret
nop
jecxz
shrl
inc
add
lds
shlb
add
dec
insl
push
dec
mov
sti
add
sbb
xchg
pop
sbb
sbb
xor
push
cmp
inc
add
hlt
pop
rcrb
out
fidivl
xchg
movsl
inc
mov
scas
pop
jle
xchg
add
and
or
mov
mov
test
mov
repnz
or
and
pop
push
xchg
xchg
outsl
cmpsl
popf
add
cmp
addl
sub
data16
popf
ret
divl
add
je
pusha
fs
push
or
ja
and
mov
ret
movsb
scas
rclb
xor
fldl
inc
inc
cmp
or
loopne
jne
pop
cli
or
in
push
insb
add
and
add
cs
lahf
dec
push
fcmovne
add
sahf
or
cmpsl
cltd
shlb
adc
imul
sbb
outsl
lods
pop
mov
jbe
inc
addl
cmp
insl
add
sub
mov
sbb
fld
or
xchg
and
scas
rorb
cmp
add
jb
jle
pop
movsl
sbb
sub
cmpsb
clc
les
in
push
mov
jbe
fiadds
mov
xor
mov
inc
and
loopne
popa
mov
and
xchg
gs
pop
add
test
inc
add
fisubrl
xorl
loope
sti
cmp
lahf
pop
ret
les
xchg
xchg
rol
mov
in
mov
dec
out
ss
push
cmpsb
push
sbb
aas
add
sub
daa
add
inc
hlt
add
insb
dec
mov
cmp
mov
loopne
pop
xor
push
mull
add
lcall
add
rcl
jmp
adcb
in
inc
add
mov
add
add
pop
add
test
rcrb
ss
push
cmpps
jge
daa
xor
das
andl
fadds
rorl
cmpsb
incb
mov
cltd
lcall
pop
stc
insl
loop
push
movsl
add
push
leave
enter
add
pop
orb
adc
fs
jp
mov
push
or
jecxz
mov
pop
sbb
pop
jae
icebp
aam
or
inc
mov
dec
es
adc
xchg
add
cmc
jle
push
pop
mov
adc
fnsave
add
push
xchg
roll
push
stos
dec
invd
inc
ss
cmp
pushl
cmp
pop
jmp
xchg
add
adc
rorb
rorl
cwtl
gs
and
jecxz
in
jmp
xchg
lock
push
inc
pusha
or
movsb
push
adc
push
xor
in
mov
ret
sbb
jb
out
lock
adc
loopne
mov
xchg
loopne
and
adc
dec
add
sbbl
dec
pop
mov
and
movsb
popf
jbe
cli
clc
clc
or
inc
mov
push
xor
mov
test
icebp
cmp
in
cmp
scas
adc
or
sbb
lods
lahf
in
fucomip
add
fisubrs
mov
call
pop
ficoml
and
in
xor
pop
add
mov
repz
inc
jle
roll
cld
jge
add
xchg
mov
add
aaa
divl
mov
fstpl
jl
add
out
mov
hlt
pop
lds
mov
test
sbb
mov
test
xor
add
adc
sub
xchg
cmp
mov
incb
rolb
push
jne
xchg
inc
push
mov
out
mov
inc
cmpsb
arpl
shl
es
mov
add
mov
das
mov
adc
popl
cmp
mov
or
popa
add
push
lahf
ror
add
in
dec
pop
faddl
pop
sbb
enter
add
nop
movq
push
mov
sahf
add
adc
dec
in
aas
out
push
xchg
sbb
xlat
sub
jnp
out
push
add
shrb
mov
test
push
aaa
add
xor
out
rclb
stos
xor
add
shlb
popa
mov
push
adc
lahf
jb
into
push
dec
cld
mov
loope
data16
xorb
je
adc
add
jbe
std
fwait
and
inc
int3
aaa
enter
jge
add
sub
pushf
add
add
add
pop
push
mov
into
lds
xchg
sub
in
jl
frstor
ljmp
popf
xlat
lds
sub
mov
cmp
loopne
push
call
enter
jg
sub
ljmp
rcrb
mov
add
push
or
mov
cmp
add
pop
and
std
jne
xor
hlt
fisttpll
jmp
aaa
stc
ret
and
mov
adc
mov
xor
cmp
sub
xchg
cltd
push
inc
or
lods
clc
sub
jns
and
add
test
sbb
xor
xchg
cltd
mov
adc
lahf
nop
pop
xorb
or
add
or
xor
ret
lret
les
inc
mov
add
out
cmp
adc
push
loope
xor
add
jnp
add
insb
jo
mov
or
out
in
sbb
jb
pop
ret
sti
xchg
or
pusha
and
inc
stc
cmpl
dec
fcomps
incb
fwait
xchg
fstpt
pusha
push
fistps
push
mov
pop
pop
cmc
xchg
push
jecxz
push
aas
or
cmp
cs
aaa
mov
out
mov
add
out
mov
popa
or
add
stos
mov
mov
mov
jmp
cs
pop
or
imul
ljmp
jg
jg
insb
outsb
push
and
rcr
push
fwait
sbb
cli
add
repnz
inc
fwait
and
add
jae
inc
ss
mov
ret
push
std
mov
adc
cltd
sbb
movsb
add
loopne
and
cmp
insb
sub
les
jl
add
mov
add
xor
push
lcallw
sbb
sbb
sub
loopne
mov
scas
sbb
add
dec
pop
xor
lret
aaa
inc
in
dec
sti
insb
outsl
add
icebp
and
xchg
sub
add
into
adc
xor
push
imul
pop
mov
dec
cltd
add
call
dec
mov
add
out
loop
icebp
iret
hlt
add
xchg
cmp
mov
xor
pop
jne
ret
loopne
or
cmp
mov
add
xchg
cmc
or
cs
stos
cwtl
in
jp
add
fnsave
mov
or
adc
and
test
stc
add
sub
sub
sbb
or
jae
lea
xor
imul
enter
rorb
testl
sbb
adc
add
icebp
jmp
add
cmpsl
mov
ret
jge
outsl
add
repnz
inc
xchg
das
leave
and
jecxz
in
cwtl
adc
push
dec
xor
and
movsl
bound
xchg
pusha
adc
lret
daa
loope
add
cmpsl
int3
xchg
push
xchg
ret
pushf
jo,pn
fsubs
in
mov
or
enter
ret
dec
out
xor
add
aad
push
add
jg
push
jb
lahf
add
imul
mov
pop
dec
jl
add
inc
and
out
mov
pop
adc
jno
pusha
mov
out
out
dec
stos
add
scas
cmp
push
sahf
pop
cs
xchg
jb
popf
imul
test
das
mov
fwait
sbb
mov
or
repnz
shll
aam
add
adc
das
or
dec
loope
xor
and
add
pop
fcmovne
outsl
das
sbb
pop
add
xchg
inc
out
pop
ret
loopne
les
pop
sbb
rcrb
mov
adc
scas
xor
pusha
dec
xchg
mov
add
cmp
sbb
pop
pop
xor
leave
pop
add
ja
jbe
cmp
mov
xor
add
push
cmpsb
call
mov
jne
dec
add
mov
lret
decb
add
sbb
push
adc
push
add
and
ret
lret
inc
sbb
pop
mov
or
out
inc
xor
push
cwtl
cli
cmc
or
mov
dec
mov
sbb
jecxz
je
pop
xor
jae
mov
js
clc
loope
jne
clc
scas
dec
or
dec
sub
addl
push
repnz
loope
inc
hlt
or
jb
test
jnp
mov
jne
popf
aam
sbb
xor
je
loope
cmpsl
outsl
or
mov
mov
pop
fnsave
dec
cmpl
add
pop
popa
add
or
add
mov
fdivl
mov
or
loop
add
ret
lods
cmpsb
or
inc
add
daa
sbb
and
nop
cmp
aas
cmp
mov
or
or
cmp
xchg
adc
mov
jg
sti
aam
jecxz
inc
inc
mov
aaa
andl
jae
inc
adc
mov
mov
jg
loope
pusha
cmp
mov
loopne
sub
jno
push
adc
push
loop
jnp
add
cli
inc
test
push
lock
jge
lret
lods
sbb
shl
orb
stos
add
inc
pop
sub
in
xor
test
mov
push
ret
test
ret
jno
jbe
pop
cli
cmpl
inc
movsl
mov
push
and
std
pusha
mov
shl
and
cwtl
mov
sbb
arpl
shlb
push
stos
xchg
je
push
mov
loope
imul
mov
xchg
outsb
aas
add
dec
dec
les
fcmovb
aaa
data16
mov
sub
insb
mov
add
ds
movl
pop
int3
shll
cmp
cmpsl
adc
movsb
add
cmp
lds
test
mov
sbb
mov
add
mov
pop
roll
xor
pop
cwtl
add
cld
fidivrl
add
scas
je
addr16
lret
and
inc
xorb
jns
out
das
imulb
xor
add
lock
clc
jo
dec
int
xchg
add
mov
and
in
sub
ret
add
test
sub
jle
in
loopne
test
ja
pop
loopne
sub
jp
ficompl
add
iret
incl
outsb
mov
daa
jo
jne
xchg
mov
aas
sbb
fwait
push
pop
addr16
rolb
adc
jecxz
scas
add
cmpb
insb
popa
pusha
cmpl
fs
inc
adc
aas
cwtl
out
rclb
lods
mov
ret
add
and
add
mov
or
out
pop
ja
inc
jg
add
std
push
iret
enter
shrl
adc
pushf
fiaddl
frstor
nop
scas
jecxz
rorl
sub
add
je
jg
add
fimull
add
jecxz
mov
and
xchg
lcall
inc
or
pop
add
dec
jg
out
fldt
add
dec
inc
mov
mov
push
xchg
add
outsb
adc
jg
mov
jmp
loop
movsb
xlat
dec
dec
add
iret
push
add
lods
mov
add
push
xchg
movsb
or
das
bnd
pop
jecxz
shrb
scas
jo
dec
mov
call
fsubs
push
mov
push
add
icebp
aam
push
je
mov
aad
mov
loopne
and
jne
xchg
add
jmp
iret
xchg
std
sahf
inc
out
sub
jne
dec
mov
add
mov
or
pushf
xchg
stos
mov
mov
ficoms
in
daa
jecxz
adcl
xchg
out
arpl
sub
fdivs
scas
dec
sbb
filds
pop
and
and
test
mov
dec
sbb
jle
adc
lods
jl
ss
fwait
scas
inc
xchg
test
shlb
cli
dec
roll
cmp
xor
jmp
out
add
lds
jl
ret
mov
jne
fcomip
and
flds
loop
push
int3
add
imul
test
fidivrl
and
add
jns
popa
xchg
sub
add
loope
add
inc
pop
cli
hlt
inc
dec
add
data16
fistl
das
or
or
ret
adc
repnz
popf
into
out
sbb
mov
std
jp
adc
int
nop
pusha
sub
add
mov
cld
jnp
daa
popa
loopne
inc
add
mov
dec
std
adc
in
cmpsb
bound
add
or
xchg
jge
ret
cld
mov
and
push
pop
xlat
lret
sub
lahf
cwtl
call
in
out
adc
ss
scas
jp
dec
cmp
or
jb
icebp
cmc
dec
int3
iret
sbb
cltd
push
nop
fstpl
mov
jl
xor
mov
icebp
lahf
add
sub
repnz
adc
cmp
por
and
shll
andb
sbb
add
addr16
push
int3
add
adc
cmp
or
mov
daa
add
and
out
inc
adc
add
cli
in
push
int
sub
iret
and
ret
outsl
testl
mov
add
sub
fs
lret
mov
scas
cmc
lahf
and
call
ljmp
mov
jnp
add
xor
dec
mov
in
rolb
roll
pusha
mov
popa
nop
push
fiaddl
stos
or
imul
das
jo
mov
cmp
add
and
sub
cli
sub
or
cmp
mov
and
adc
stos
mov
sub
xor
pop
pop
cld
jb
mov
mov
mov
dec
adc
pop
frstor
loop
clc
out
mov
push
call
pop
cmpsb
xchg
add
xchg
ss
sub
pop
add
pushf
pop
add
push
movsb
pop
add
adc
shl
lds
mov
sub
sub
add
pop
or
xchg
sbb
sub
sub
add
bound
shll
sbb
mov
sub
lahf
xor
aam
inc
push
imul
add
and
push
outsb
lods
js
addl
sti
std
mov
or
pop
test
mov
lret
sub
pop
mov
call
data16
add
fisttpl
mov
xchg
adc
lea
and
mov
subps
mov
repz
js
mov
int3
sbbl
lcall
ds
and
scas
and
jp
add
mov
loop
jne,pn
jg
pop
repnz
mov
cs
dec
push
add
jg
xor
out
pushf
jae
adc
aaa
jno
dec
mov
mov
shll
icebp
xor
hlt
cli
add
mov
adc
mov
in
add
cs
push
lds
mov
ds
dec
cmp
or
add
sub
mov
xchg
or
gs
xchg
mov
scas
mov
push
pop
lock
push
jb
lahf
mov
adc
testb
scas
in
popa
pushf
sbb
outsb
in
das
hlt
dec
mov
in
stc
and
push
jge
push
pusha
add
sbb
cmp
add
jle
push
test
jb
popf
stc
stos
add
cmpb
jp
push
in
insl
jo
rcl
sub
sbb
shll
ret
pop
mov
insl
add
or
xchg
and
add
pop
sub
adc
adc
out
filds
aad
pop
icebp
dec
mov
sbb
out
xor
icebp
add
adc
sub
aaa
scas
fldl
test
mov
ror
jbe
pusha
mov
arpl
dec
jp
push
mov
push
push
pop
cmp
repnz
ss
jmp
sbb
leave
lods
add
lret
mov
cmpsl
adc
add
jecxz
cmp
pop
imul
cltd
and
add
pop
imul
insb
push
outsl
roll
out
push
mov
pop
inc
popa
mov
pushf
ret
xchg
pop
mov
loope
movsl
dec
test
push
sti
inc
mov
inc
daa
add
fwait
mov
add
pop
mov
sub
repz
add
rcll
add
mov
or
shr
enter
adc
mov
bound
loopne
subb
cmp
mov
stc
inc
cltd
sbb
jb
daa
pop
or
mov
mov
jo
add
dec
xchg
cs
xor
xchg
rorl
jg
sbb
imul
adc
cli
out
cs
sub
lahf
lods
mov
mov
cmp
dec
rolb
jle
or
loop
mov
pushf
dec
push
xchg
add
cmpsb
xchg
add
jae
adc
fisubrs
xor
xchg
out
fneni(8087
mov
sbb
xor
idivl
and
fsubs
loope
cmp
or
stc
add
inc
add
int
sbb
popl
pop
dec
lods
out
outsb
loop
or
and
stos
mov
out
add
sbb
lods
push
cmp
aam
fnsave
lcall
inc
arpl
ret
mov
cs
adc
rclb
dec
out
lods
or
xor
mov
mov
inc
add
inc
xor
loopne
lcall
test
mov
inc
mov
adc
out
or
dec
test
fwait
mov
outsb
push
xor
inc
cmpsl
daa
sub
xchg
mov
inc
loop
incl
ret
add
pop
xor
loope
sbb
lock
jns
xchg
lea
and
scas
loopne,pt
das
lds
push
fadds
xlat
adc
mov
shr
gs
and
cmpsl
pop
hlt
add
adc
lea
in
rolb
aaa
stos
inc
push
mov
sti
cmpsl
or
add
pusha
xchg
call
pop
mov
add
pop
loop
or
fisubrs
pop
mov
roll
sbb
mov
cmp
add
jl
pop
adc
loope
into
mov
cmp
int
jle
out
addb
pop
sub
mov
or
outsb
push
ror
add
cmp
test
test
jae
andl
add
std
xor
enter
rolb
jbe
mov
mov
sbb
pop
pop
xor
rcr
sahf
and
pop
cmc
enter
fmuls
cmp
loope
or
xchg
add
sub
mov
push
sub
sbb
jo
shlb
add
xor
idivb
addr16
lret
sub
ret
push
mov
iret
jo
mov
adc
call
push
add
and
fnstcw
sbb
inc
push
mov
outsl
test
loope
sub
add
dec
jl
jns
push
arpl
xlat
je
or
push
push
bound
xchg
inc
fsubl
add
insl
loope
add
call
and
add
add
stos
jno
inc
mov
fnstcw
and
push
inc
icebp
jb
lcall
push
fs
xchg
test
jg
add
or
pop
add
sub
sbb
mov
dec
mov
add
mov
enter
cmp
js
into
fdivl
pop
push
sub
push
jns
xor
loopne
pop
in
loop
nop
movsl
insl
imul
xor
std
and
sbb
jbe
int
std
adc
int3
loope
rorb
lea
out
scas
jg
out
xchg
dec
or
or
mov
scas
mov
int3
gs
pop
das
pop
adc
sbb
aad
mov
out
push
add
mov
lods
inc
and
adc
shrl
sbb
ss
push
add
arpl
mov
mov
enter
fstpt
xchg
jns
push
xor
dec
pop
cmpb
dec
jae
dec
add
shlb
add
hlt
into
cmp
sub
fiaddl
adc
xorl
mov
mov
inc
pop
push
movsl
mov
insl
pop
mov
push
jg
or
add
das
jb
mov
nop
sub
sahf
data16
sbb
and
sbb
pop
fiadds
sbb
cmc
das
push
push
and
ljmp
or
sbb
paddw
jge
add
aas
mov
ret
pop
add
insl
adcb
lods
xchg
dec
cmp
fstp
sbbl
loop
xchg
pop
shl
sbb
or
cmp
push
fistpll
xchg
add
sbb
mov
insb
subb
sub
popa
loop
mov
push
pop
mov
in
mov
or
mov
dec
sbb
lahf
jbe
cmp
mov
jmp
data16
xor
adc
and
loopne
dec
repz
and
cltd
sbb
rorl
dec
add
dec
sub
movsl
outsl
pushf
mov
push
cmp
icebp
xchg
loope
scas
add
outsb
cld
enter
movsb
outsl
loopne
shll
push
cmp
jns
imul
dec
push
add
movsl
mov
add
jl
cs
push
adc
xchg
out
ss
inc
hlt
rcrb
loopne
dec
fmuls
adc
cmpsb
lods
mov
push
vpsraq
cmpsl
and
inc
clc
add
pushfw
pop
mov
push
xor
out
aaa
sbb
add
pop
pop
push
or
add
daa
aas
inc
sub
jbe
rclb
push
inc
fwait
mov
roll
loop
imul
popf
data16
fidivrs
pushf
inc
dec
int
shrl
int3
sahf
xchg
outsl
fs
xor
sbb
or
pusha
loopne
mov
in
call
test
push
jmp
mov
lds
and
jne
add
and
scas
adc
add
stos
ja
inc
mov
fwait
out
pop
out
and
add
cmp
pop
xchg
les
mov
clc
adc
sahf
adc
test
rorb
std
lods
test
repnz
popa
les
xorl
mov
out
sbb
cmp
cltd
add
popa
xor
jp
add
jo
sbb
cmp
loope
jnp
ret
add
leave
xchg
mov
push
enter
nop
jecxz
push
negb
repz
loopne
hlt
dec
dec
ja
test
sbb
in
xor
jae
loope
out
adc
adc
sub
and
fbstp
sub
push
mov
or
icebp
add
stos
les
sub
jns
pop
dec
cltd
jp
cmp
outsl
mov
lock
add
pop
and
dec
lea
fimull
add
xchg
sbb
push
les
cmp
jp
pop
decb
add
cmpsb
test
cmpl
loope
bound
pop
fwait
or
mov
imul
xor
sub
cmpsl
adc
and
lahf
leave
mov
pop
push
sbbb
sub
push
push
fnsave
add
out
pop
mov
mov
pop
and
sarb
cmpsb
das
xlat
ficompl
add
repnz
xor
jo
mov
add
and
adc
and
or
push
loope
add
out
and
pop
add
cmp
aad
pop
cmp
mov
mov
repnz
jg
jp
add
adc
add
icebp
add
test
outsb
pop
jmp
pushf
pop
pop
jae
xor
movsl
pop
add
push
inc
add
into
mov
pop
sbb
cld
mov
adc
das
gs
and
sub
insb
sar
xlat
pop
lods
xchg
loopne
loope
jg
adc
in
mov
lcall
add
mov
xlat
pop
test
mov
in
sbb
daa
sub
imulb
mov
add
mov
and
and
push
push
add
push
cmpsl
mov
in
jae
daa
stc
or
lods
add
fistl
enter
push
mov
mov
push
xchg
inc
pushf
aas
or
cmpsl
cmp
aad
jg
mov
mov
sub
adc
xchg
mov
inc
add
sub
jmp
add
xor
inc
add
nop
inc
inc
add
cli
xor
cmp
cmc
dec
push
scas
movb
test
ja
jecxz
xchg
mov
in
dec
mov
mov
add
dec
inc
cmp
cmc
ja
and
or
pop
sbb
jmp
jge
xor
add
aaa
mov
inc
imul
add
repnz
and
pop
in
lock
push
bound
leave
push
cmpsb
daa
fcoms
jno
dec
ret
mov
or
movl
js
icebp
cwtl
add
aaa
rcll
xor
pop
mov
xchg
push
in
xchg
add
movsb
mov
and
add
lret
enter
ficoms
fisttpll
adc
divl
or
pop
add
cmpl
adc
push
jge
pusha
pop
add
jp
popf
loopne
iret
or
xchg
push
enter
mov
in
or
lods
pop
pop
add
aam
mov
push
gs
scas
add
movsb
addl
mov
lret
and
jo
dec
cmp
xlat
mov
xor
push
ja
test
pusha
das
bnd
add
or
add
or
stos
daa
bound
js
jne
out
adc
pop
ljmp
outsb
pop
aad
pxor
add
inc
push
mov
dec
dec
sahf
add
aam
sub
dec
push
or
add
cwtl
repz
sbb
popa
add
mov
or
stc
inc
inc
cmp
mov
add
ds
nop
add
add
jb
pop
or
repnz
mov
lret
cmpsl
in
ffreep
pop
loopne
and
push
movsl
sbb
pop
jb
fsubrl
stos
xor
or
inc
loope
bound
or
js
stos
or
movsl
out
or
mov
loope
movsb
sub
add
addl
cmp
ret
add
dec
mov
xchg
loopne
ljmp
cltd
cmp
nop
fists
sub
mov
sub
add
call
push
xchg
dec
lret
xor
pop
inc
movsl
add
les
fildll
pushf
pop
push
pop
and
adc
test
mov
int3
add
lret
adc
jnp
xlat
les
mov
sbb
xchg
sub
push
mov
dec
stos
das
int
outsb
or
cmp
mov
js
in
mov
pop
popa
jb
pop
mov
pop
stc
xchg
xchg
loopne
push
push
out
les
add
pop
lods
adc
mov
in
mov
cmp
mov
test
xchg
loopne
nop
dec
andl
mov
push
xchg
pop
mov
pop
mov
add
outsl
push
add
fnsave
pusha
or
inc
das
sbb
sbb
shl
lcall
pop
push
movsb
dec
cmp
popf
push
ss
fsubs
incl
in
popf
mov
int3
test
js
cmp
imull
and
mov
fdivrp
sub
mov
dec
in
mov
shll
stc
jnp
data16
push
push
sub
outsb
cmp
pop
xor
push
mov
add
js
ret
adc
and
sarl
push
xor
sti
data16
and
mov
push
mov
xchg
or
stc
mov
dec
push
int
mov
popf
loope
outsl
test
pop
pop
adc
cmpsl
and
filds
cmp
movsb
pop
insb
xor
add
aam
je
adc
and
testl
loop
orl
add
mov
xor
fwait
mov
stos
dec
mov
mov
mov
inc
pushf
jmp
mov
pop
fsub
adc
add
inc
in
lret
or
xchg
add
sub
jae
mov
jmp
loopne
add
sub
push
inc
adc
xlat
cmp
stos
push
cli
sbb
nop
rcrl
or
jp
dec
adc
adc
rcrb
scas
aaa
lcall
mov
test
inc
cld
cmp
fisttps
add
std
add
mov
jg
add
dec
stos
add
daa
cmc
sub
jge
jmp
ret
mov
jnp
cmp
mov
leave
inc
push
add
shll
add
jnp
cli
bound
add
push
or
imul
sbb
inc
mov
adc
dec
loopne
mov
add
shrl
add
stos
mov
jl
mov
adc
shl
loop
add
clc
mov
adc
pop
shll
mov
sbb
adc
mov
add
pop
mov
fcmove
fiadds
js
mov
push
in
shrb
jne
push
loopne
and
mov
cld
push
dec
iret
shr
cmp
mov
pop
faddp
ret
stos
inc
pusha
je
xchg
sahf
pop
adc
aas
faddl
mov
es
hlt
jns
out
and
je
or
popa
loope
popf
sub
insl
push
sbb
mov
inc
xor
dec
or
insb
aas
mov
add
adc
mov
js
addr16
hlt
add
rorb
lret
cmp
adc
jns
add
sbb
std
push
and
aas
cmp
call
pop
test
xchg
stos
jo
pusha
xor
pushf
or
sbb
mov
add
mov
hlt
rcrl
jle
mov
and
pop
add
sbb
and
loopne
jb
push
aaa
push
mov
lods
push
int3
pop
jg
aas
xchg
ds
jmp
or
and
lret
notl
fstp
add
les
sahf
iret
add
mov
add
jmp
xchg
and
add
jbe
inc
mov
add
pop
dec
shll
sbb
cmp
lret
sub
int
xchg
pushf
ret
leave
and
xor
and
mov
cli
adc
btr
clc
add
add
cwtl
test
pop
mov
aad
mov
shlb
sbb
scas
push
jne
and
jbe
cwtl
pop
jnp
pop
mov
sub
dec
dec
mov
mov
adc
imul
push
ljmp
stos
loop,pn
arpl
mov
cmp
fisubl
mov
cmp
leave
add
mov
aam
je
test
mov
loopne
sbb
cld
mov
ss
jmp
inc
into
add
add
xor
in
cmp
xorb
ret
or
or
xchg
add
aad
mov
or
xchg
pop
lret
lea
sbb
ficoml
and
loope
sarl
hlt
sub
data16
push
repnz
add
aas
shlb
jne
enter
subb
dec
call
icebp
loope
and
sbb
jl
push
sub
xchg
dec
cmp
notb
add
inc
mov
movsl
add
mov
pushf
push
sub
add
std
test
and
add
fwait
ds
pusha
adc
mov
fistpll
mov
pop
dec
ja
add
sbb
inc
adc
mov
lds
lods
es
add
jns
pop
testl
orl
push
dec
xor
xor
inc
push
es
jo
je
jge
icebp
add
xchg
pcmpeqb
ljmp
dec
pusha
gs
pop
add
adc
popf
mov
imul
xor
xchg
rcrl
inc
add
fsts
sbb
icebp
cmpl
push
addr16
jae
test
test
inc
add
imul
sbb
outsl
add
xor
cmovb
je
inc
popa
and
shlb
sub
lcall
str
sub
mov
imul
aaa
popa
dec
dec
addl
pop
clc
addr16
pop
add
and
xchg
add
and
inc
or
aas
pop
jns
out
mov
and
movsl
sub
inc
sbb
adc
add
movsb
mov
add
mov
pop
jns
cmp
pop
and
test
nop
in
ficoms
ret
leave
xor
add
mov
lock
add
pop
movsl
repz
add
add
mov
jl
lock
addb
stc
pop
push
ljmp
cmp
je
clc
add
dec
jge
lods
pop
bound
push
xchg
xor
scas
sub
sbb
ds
cmpsb
add
rolb
inc
aaa
add
adc
gs
dec
mov
push
jno
adcb
push
ret
lock
push
push
add
cwtl
sub
add
push
jne
add
adc
out
adcl
xchg
addl
xchg
popf
rcll
inc
jne
or
testb
add
iret
mov
push
inc
sub
add
rolb
dec
mov
cmpl
test
or
daa
add
add
lcall
cs
adc
outsb
and
inc
pusha
inc
ljmp
loopne
jbe
xchg
xchg
adc
xchg
and
dec
jp
sar
sbb
add
push
ret
and
mov
fwait
pop
andl
mov
inc
pop
stos
into
sbb
mov
push
or
ds
pop
movsb
and
inc
inc
pusha
loopne
daa
into
jnp
loope
roll
popa
add
imul
pop
loop
ret
aas
xor
adc
add
stos
repnz
test
lea
movsb
xor
pusha
jmp
push
sarb
call
call
mov
std
add
bound
add
in
stc
cmp
xor
repz
sbb
or
fwait
and
jge
cmp
add
lods
movsb
insb
jae
sarb
dec
and
add
jl
ss
sbb
ret
loopne
int
inc
jae
das
and
jle
add
inc
add
xchg
pop
cli
popf
out
add
stc
or
test
pop
jae
je
add
jbe
testb
push
outsl
or
pop
addb
add
add
fs
cmp
pop
ljmp
jle
arpl
mov
adc
inc
inc
mov
cmp
fbld
popf
shlb
add
and
and
xchg
push
dec
ja
and
int
add
cmp
add
stos
dec
fs
push
lcall
pop
sbb
orl
lds
repz
mov
cltd
fimuls
shll
adc
add
cmp
sbb
rolb
add
mov
cs
add
push
add
or
add
ja
aaa
add
xchg
mov
add
dec
xor
stc
sbb
shl
sub
xchg
cltd
scas
add
jl
outsl
ljmp
hlt
repnz
loopne
add
fdivrs
push
cwtl
loopne
push
push
cmp
jecxz
fisubs
xchg
in
adc
out
pop
add
mov
add
into
mov
pop
lock
dec
cld
pop
mov
mov
fcomi
in
ret
inc
or
jo
jge
inc
sbb
stc
cmp
fdivl
je
out
sahf
cld
add
shlb
mov
addr16
negl
add
or
outsl
dec
sbb
jp
adc
js
inc
fisubs
add
mov
push
loopne,pn
pop
and
mov
out
fsubs
test
cmp
int
dec
xchg
sti
push
add
jbe
add
lret
pop
lea
jnp
xor
add
test
jecxz
jp
or
jl
popa
sahf
inc
inc
jb
pop
add
mov
mov
dec
push
and
adc
sub
sub
jae
add
out
pop
lret
in
subl
push
xor
js
jae
popf
push
add
sbb
push
sbb
pop
loop
in
add
mov
pop
inc
and
xchg
lock
insb
sbb
push
cmpsb
in
rcl
cmpsl
fimuls
cmc
jb
adc
aam
sbb
add
fldl
add
xchg
cmpl
cmp
push
roll
adc
xor
pop
add
sbb
test
pusha
add
xor
jno
add
shll
lock
repnz
dec
ret
or
jnp
inc
mov
dec
repnz
cmp
add
xchg
add
pop
scas
in
insb
popf
pusha
dec
push
dec
in
pop
mov
add
cltd
jb
sub
enter
arpl
add
push
out
jecxz
sbbb
lds
mov
jl
push
xchg
push
jo
movsb
jl
fucom
loope
pop
add
int
popf
mov
dec
or
mov
pop
cmpsb
bound
dec
lds
or
pusha
les
add
cltd
add
adc
and
outsl
or
add
add
pop
xchg
mov
scas
rolb
pop
imul
aad
add
out
ret
scas
incl
pop
inc
cmc
mov
add
jle
ljmp
jmp
or
test
add
out
aad
jle
ja
add
mov
arpl
add
add
mov
insl
add
dec
popa
dec
jl
sub
and
cld
addl
mov
pop
jo
or
or
xlat
test
in
loope
jle
fdivrs
gs
lahf
push
jmp
jmp
push
inc
inc
or
add
std
rol
cmpsb
xchg
mov
push
add
sub
bound
shlb
scas
sahf
dec
dec
xchg
lea
and
stos
add
int
add
mov
cmp
mov
adc
cs
incb
sub
lahf
mov
mov
add
mov
and
ficoms
push
xchg
ret
popf
mov
add
pop
scas
leave
jns
movsl
add
or
rclb
mov
cmp
lds
adc
sti
mov
stc
loopne
and
cmp
pop
add
aam
imul
jb
ret
push
lods
test
arpl
push
dec
add
push
inc
mov
add
add
repz
pop
add
lcall
fwait
mov
or
decl
into
push
faddl
movsl
scas
push
sub
loopne
clc
addl
mov
inc
jge
adc
movsb
push
in
jbe
sub
filds
enter
cmp
call
adc
fs
pusha
pop
push
popf
rol
adc
fisttpl
inc
into
fwait
xor
ret
mov
cmp
add
hlt
jmp
bound
ss
or
in
pusha
test
sub
std
and
jbe
arpl
lea
stc
jno
add
popf
cmp
dec
jle
or
sub
loope,pt
aaa
imul
out
push
nop
cmp
call
hlt
xchg
movsl
adc
imull
sbb
add
in
neg
fisubl
mov
insl
sub
loopne
dec
aas
in
orb
fldenv
dec
pushf
enter
cmp
fs
sub
pop
xchg
pop
add
stc
pop
jge
repz
push
add
imul
lods
faddl
pop
cmpb
pop
fisttpll
mov
add
filds
cmp
push
incb
push
imul
sub
jle
dec
ret
iret
faddl
daa
fucomip
pop
test
sbb
rorb
fnstenv
sbb
adc
pop
adc
add
mov
add
jl
dec
loope,pn
add
pop
fdivrl
add
insl
arpl
mov
loopne
cli
mov
sub
push
pop
das
add
add
test
dec
outsl
cmp
loope
push
pusha
push
leave
ja
xorb
repz
lods
add
mov
ljmp
cmp
stos
fstpt
push
ss
add
xchg
jge
sar
cmp
jl
mov
add
orl
add
aaa
icebp
sub
loop
orb
fwait
xchg
sbb
out
cmp
loopne
push
sbb
std
jns
inc
fsubrl
dec
add
sbb
sbb
lds
ds
outsb
push
mov
stos
push
and
clc
mov
sbb
out
pop
mov
or
jnp
test
sub
test
mov
test
shl
sub
jno
and
lcall
push
repnz
push
pop
out
ret
clc
adc
test
and
jne
cmp
add
cmp
pusha
add
jno
imul
rol
jge
sbb
pop
repnz
test
sbb
jbe
adc
add
scas
jb
jne
add
stc
dec
movsl
lock
cli
add
cwtl
pop
ret
add
popf
lds
cmp
add
fcoms
dec
xor
jge
mov
dec
push
cmp
mov
nop
cmp
and
in
xchg
and
scas
fistpl
add
sti
xchg
pop
je
cmp
lods
pushf
sbb
add
addr16
test
les
imul
inc
dec
ficomps
movsl
pop
iret
pushf
inc
sbbl
adc
aad
pop
outsb
add
mov
push
xchg
imulb
push
add
lahf
out
ja
jno
pop
ret
sahf
jmp
call
push
adc
dec
mov
aas
insl
sbb
cltd
add
lret
cmp
aad
or
xor
shlb
dec
inc
movsb
sbb
mov
cmp
fstl
loopne
roll
pop
inc
jbe
les
mov
mov
out
daa
mov
xchg
scas
xlat
pop
push
xchg
inc
popa
push
mov
cwtl
dec
mov
push
orb
or
loopne
or
popa
cmpsb
arpl
repz
pusha
addl
rcrl
dec
push
leave
sub
popf
pop
jbe
sbb
pop
negl
mov
cmp
lea
push
outsl
dec
xor
add
pop
out
inc
movsl
dec
push
jecxz
into
xchg
add
pop
add
aas
cmc
push
lret
sarl
jle
jp
pusha
dec
push
adc
push
add
out
pop
push
jmp
stos
fcomps
xor
mov
dec
jg
insl
push
add
sahf
gs
mov
xchg
repnz
adc
sbb
add
fnsave
xor
adc
fsts
xchg
add
push
loopne
shlb
mov
jo
imul
in
nop
push
pushf
mov
daa
cmp
adc
add
adc
pop
add
dec
push
ret
adc
stc
add
cmc
pop
int3
loop
outsl
mov
jb
jp
xchg
scas
pop
outsb
adc
jae
cli
bts
xchg
push
pop
scas
roll
add
or
std
add
push
lods
add
xchg
mov
inc
sti
les
pop
mov
pop
or
add
cli
jmp
add
xor
pop
fadd
inc
fwait
mov
or
popa
idiv
mov
movsb
xor
add
cmp
dec
add
loopne
das
aaa
enter
xor
push
test
mov
adc
and
add
push
or
or
xor
or
add
xlat
inc
xor
insb
imul
in
fwait
add
lcall
push
xchg
andl
loope
dec
mov
inc
sub
sbbb
cmpsl
nop
pusha
roll
mov
mov
sahf
pop
pusha
cmc
scas
xor
lahf
sbb
push
je
mov
add
std
sbb
jg
int3
add
leave
les
imul
xor
xor
popf
cmp
inc
jge
insl
cmpl
sbb
xchg
shll
and
leave
add
xlat
xchg
test
pop
push
js
cmp
loopne
int3
or
add
daa
fst
popa
outsl
mov
mov
lret
add
add
mov
jb
add
add
xlat
fadd
add
xor
mov
out
pop
sbb
or
lahf
movsb
inc
and
sbb
sbb
ficoms
add
xchg
dec
pusha
jns
fildl
mov
leave
dec
cmp
or
scas
or
mov
jg
pop
fimull
add
cmp
sub
popa
sbb
repz
sti
and
loopne
es
gs
pop
lret
aad
ret
dec
scas
in
pusha
add
push
push
sub
inc
jns
aaa
out
add
sub
push
mov
xor
das
sbb
pop
ja
xor
jmp
cwtl
inc
jl
mov
idivl
mov
xor
cltd
cli
or
xlat
test
mov
pop
in
jecxz
add
jl
adc
test
pop
add
jmp
pop
inc
out
insl
xchg
jbe
add
pop
or
xor
out
cmp
inc
sbb
jno
cs
add
outsl
test
dec
sarl
push
cmc
inc
or
add
dec
xor
cmp
movsb
movsl
adc
jns
sbb
lods
cmp
jo
stos
jp
xor
and
in
sbbl
aad
stos
jmp
add
pop
fisttps
pop
and
insb
push
pop
xchg
mov
aas
enter
fisubrs
incl
add
aad
insl
mov
cmpsb
hlt
rorb
and
shl
mov
insl
clc
cmp
ret
xlat
xor
outsb
adc
outsl
push
frstor
add
clc
in
stos
jle
fiadds
leave
nop
je
or
pop
jg
scas
sbb
out
ljmp
sti
test
xor
xchg
or
push
lods
add
sbb
sub
outsl
xor
jbe
repz
or
xchg
out
cli
sahf
mov
shl
ficompl
iret
bound
mov
push
imul
fistl
loop
add
sbb
add
jne
add
sahf
dec
add
push
inc
in
lods
pusha
sub
lea
cmpsl
add
mov
add
test
and
pop
fcmovu
test
mov
xor
cmc
cmp
inc
inc
xor
lods
push
push
fsubs
xchg
imul
add
mov
mov
sti
shlb
in
lods
out
adc
cmp
fstps
cmp
popf
fwait
insl
leave
add
and
add
pop
movsl
mov
cmp
dec
mov
inc
stc
bound
sbb
xor
pop
js
push
or
sbb
jb
pusha
icebp
int3
sbb
outsb
push
jg
pop
add
adc
cmp
push
add
jnp
push
mov
je
inc
in
outsb
out
add
mov
push
dec
and
sbb
mov
inc
xchg
dec
pop
cmp
jle
mov
xchg
and
adc
pop
xor
jmp
mov
add
in
sbb
push
insb
dec
cs
jae
rolb
jns
cmp
mov
xor
cld
pusha
jo
sahf
jns
call
sub
scas
and
inc
pop
dec
por
imul
sbb
int
repnz
xlat
insb
sbb
jb
add
lds
sbb
cmpsb
xor
push
nop
sub
mov
cmp
in
stos
test
push
add
mov
add
pop
push
jns
lock
inc
bound
inc
repz
sarl
ljmp
imul
mov
mov
stos
sbb
add
rcr
mov
dec
rcrb
loop
push
notl
pushf
adcl
lods
mov
add
jne
ret
and
mov
in
push
movlps
pop
das
rolb
std
in
jae
mov
add
adc
rcrb
adc
nop
shlb
cmp
cmp
sub
mov
test
mov
inc
movsb
add
fs
test
sub
push
mov
imul
sub
lret
loopne
xchg
push
mov
hlt
mov
insl
add
inc
xchg
pop
loopne
xor
sahf
sbb
leave
or
sub
xchg
dec
mov
fs
and
sub
iret
ljmp
sbb
stc
add
mov
fsubs
aas
pop
mov
add
add
shrb
mov
lret
jmp
nop
dec
and
stc
ss
cmc
sub
push
mov
js
out
and
jle
in
sbb
fisttpll
add
jl
sahf
cmc
mov
mov
adc
mov
pop
pop
add
cld
dec
add
and
and
hlt
mov
pcmpeqd
lret
add
and
lock
or
dec
in
inc
pop
enter
mov
lcall
mov
push
adc
add
or
dec
out
push
out
pop
add
inc
adc
loop
inc
adc
jl
daa
push
pop
add
xchg
jp
jnp
mov
or
fistps
xchg
mov
test
test
adc
cli
add
sti
and
xchg
sbb
pop
sbb
mov
mov
xor
or
push
loope
stc
ja
add
xchg
xchg
ljmp
jno
stos
xchg
loopne
adc
roll
lahf
iret
inc
and
push
aad
cmp
add
xor
xor
or
loope
cs
add
jno
jbe
adc
add
jo
mov
out
dec
sbb
add
or
xor
sahf
int
jno
adc
int
int3
popf
aas
shrl
testl
add
cmp
cmp
lea
loopne
xchg
or
daa
outsb
xchg
andl
push
or
lahf
jge
push
add
xor
jno
cmpsl
pop
imul
adc
bound
inc
jbe
pop
cmp
les
sub
add
sbb
dec
jl
add
push
sub
mov
push
add
ror
or
or
fidivl
add
jmp
scas
jae
shrl
jno
repz
or
mov
popf
loop
pop
mov
dec
jnp
and
adc
xchg
loop
pop
fwait
mov
and
xchg
sub
mov
sahf
add
pop
stc
cmp
popf
lahf
loop
lret
cmpsb
cli
push
fiadds
repnz
add
add
insl
add
dec
jge
dec
lock
inc
sbb
mov
adc
pop
sub
or
add
sbb
stos
push
subb
add
dec
fldl
sub
sarl
addl
push
scas
sub
jae
pop
or
stos
adc
lods
jl
inc
or
sub
add
fwait
pop
pop
sbb
syscall
lret
add
mov
lods
mov
cmp
es
push
pusha
pop
call
add
fldt
sbb
sbb
sti
fiaddl
mov
add
xchg
push
inc
pop
add
outsb
push
flds
lds
inc
dec
rcr
push
mov
out
dec
dec
xor
pop
imul
jo
es
adc
sub
adc
mov
inc
cmp
mov
inc
xchg
inc
add
in
cs
add
xor
das
fists
or
in
mov
loopne
sub
test
cs
add
add
mov
xor
jbe
jnp
loopne
mov
xchg
jne
ffreep
pop
jo
adc
pushf
aad
pop
add
das
pop
test
pop
shll
xchg
and
cld
push
fdivs
stos
push
addl
cmp
cmpsb
pop
mov
add
mov
xor
xlat
add
inc
xchg
inc
shll
cmpsb
pandn
ret
pop
add
jg
sbb
mov
rcrl
notl
add
test
sub
ds
lock
fisubrs
cmc
enter
add
sub
mov
std
jl
add
and
dec
jp
add
scas
push
scas
test
or
mov
push
mov
std
push
pop
mov
mov
rcl
push
push
mov
roll
jo
stos
popa
lcall
sub
out
push
cmp
dec
mov
ja
je
jae
stos
popf
insb
pop
add
lret
xchg
scas
and
jl
fwait
es
inc
int
push
xchg
add
popa
cmp
add
lods
pop
mov
cmpsl
mov
xchg
mov
inc
repnz
pusha
jns
mov
adc
add
sub
gs
nop
loop
dec
lock
cmp
xchg
std
aam
sbb
aad
js
pop
or
lcall
fsub
push
out
push
fisubrs
adc
sub
and
in
pop
push
pushf
int
stos
pop
es
add
push
aam
aaa
dec
add
and
lock
shl
pop
rorl
cltd
in
add
jnp
loope
xchg
push
add
adcb
xchg
iret
mov
roll
fs
pop
dec
mov
divb
test
lahf
cmp
add
mov
xor
xchg
add
xor
nop
sub
cmp
jp
add
push
push
sub
sbb
imul
hlt
mov
xchg
sbb
mov
repnz
and
add
stos
rclb
add
jle
mov
ljmp
insb
mov
add
mov
out
add
mov
outsb
les
outsb
mov
mov
es
xor
push
lret
inc
rcll
fdivp
loope
leave
daa
adc
xor
push
mov
xchg
in
cld
pusha
insb
lods
pop
push
xor
xchg
cmp
cmp
push
cmpsl
add
sbb
inc
add
scas
fmull
dec
push
push
cmpsb
out
inc
pop
jbe
cmpsl
sbbl
add
xlat
mov
xor
loopne
push
in
cs
lcall
cmp
lods
icebp
push
cs
xor
jae
orb
addb
loopne
or
cmpsl
push
insl
mov
rep
cmp
lea
and
leave
push
fwait
sub
add
adc
add
or
sarb
movb
and
inc
mov
add
xor
sarb
inc
js
or
ret
hlt
xor
jp
popa
loop
stc
cmp
and
jmp
lcall
pop
repz
sbb
mov
adc
jecxz
add
jae
mov
or
inc
lahf
scas
push
lods
add
arpl
inc
jmp
push
leave
ja
out
adc
mov
outsl
sbb
sbb
shl
in
scas
mov
or
fcoms
sahf
loope
int
aad
jge
add
jge
dec
out
loopne
mull
xor
stos
in
incl
aaa
adc
outsl
clc
mov
inc
adc
insb
jns
rolb
add
pop
cmp
icebp
add
or
push
popf
mov
out
repnz
xor
sar
or
sbb
jge
mov
xor
nop
xlat
stos
lcall
add
push
adc
fistps
pop
and
and
xor
cmp
push
mov
mov
fwait
pusha
xchg
out
adc
sbb
cltd
xlat
int3
add
incb
add
sub
or
insl
jmp
adc
fcoms
mov
jb
mov
and
loopne
mov
insb
jb
imul
xor
mov
shl
add
or
popa
add
mov
pop
xor
idivl
xchg
ja
xchg
dec
push
push
pop
loopne
aas
cmpsb
sbb
dec
cld
stos
push
push
mov
in
cmpsb
and
gs
clc
out
inc
enter
filds
jp
mov
scas
sti
push
das
add
xor
andl
add
lahf
cmp
inc
cmpsb
fnstcw
enter
add
fdivrs
lret
push
add
xchg
out
sub
repz
add
sahf
and
jnp
cs
mov
push
mov
add
pop
mov
xchg
mov
outsl
mov
pop
cltd
shr
add
mov
shrb
add
push
test
lods
and
rcrb
jge
aaa
add
sbb
lea
loopne
stc
xor
xor
cmp
cmp
andl
pusha
mov
jl
stos
or
push
push
inc
pusha
sub
fstps
and
add
dec
addl
push
mov
and
sarb
in
adc
add
jg
lock
inc
cmpsl
or
pop
sub
push
mov
shll
aas
jbe
add
xchg
sbb
adc
fidivl
push
mov
fmul
mov
outsl
into
sub
out
pop
popf
sbb
sbbl
mov
xchg
sbb
cmp
out
cmp
ljmp
addr16
add
mov
outsb
das
and
jmp
sbb
and
in
arpl
aam
cmp
aaa
add
stos
aad
add
int3
and
outsl
xchg
ret
cwtl
cmpsl
or
adc
fisubrs
add
aaa
fsts
lds
in
in
add
rcrl
dec
mov
dec
loop
adc
cltd
int3
mov
inc
adc
pop
inc
ds
cmp
xor
jp
mov
sbb
xchg
out
das
fs
xlat
mov
mov
ret
and
jle
cmp
stos
movsl
sub
dec
leave
add
jno
popa
test
mov
add
sbb
movsl
loopne
inc
pusha
mov
push
sub
movsb
jle
and
aam
cltd
and
call
push
mov
arpl
orb
loop
inc
add
and
adc
call
inc
mov
push
add
into
pop
popa
rcrl
mov
roll
cmp
add
faddl
outsl
andl
scas
lods
in
add
loope
int3
cmp
out
shl
mov
xchg
push
movb
stc
sub
ror
cmpl
clc
mov
push
fisttpl
add
lds
nop
add
dec
pmovmskb
mov
add
jne
lret
test
and
daa
testb
std
adc
pusha
sbb
jb
jbe
jne
hlt
loopne
sti
jae
loope
mov
cs
rolb
adc
idivl
out
jecxz
push
fstl
sarb
pusha
fidivrs
sbb
sbb
pusha
test
mov
movhps
pop
add
sub
fstp
rorl
jbe
mov
shll
js
mov
ret
xchg
faddl
push
lahf
sti
jge
or
mov
stc
sub
and
movsb
ficompl
lret
icebp
xchg
mov
mov
cli
push
sbb
daa
add
mov
jns
dec
aas
push
add
lock
sbb
push
dec
loope
insb
push
jp
fstpl
mov
fiadds
popf
jecxz
mov
push
add
fstl
sbb
loope
xorl
sbb
adc
and
add
jno
outsl
fstps
push
pop
mov
scas
and
aaa
test
cmc
orb
stos
scas
lahf
inc
cmp
add
jo
adc
fiadds
ss
add
xchg
lods
cmpsl
shrl
cli
hlt
mov
mov
ret
add
lods
jmp
sbb
push
daa
and
inc
pop
lods
xor
push
inc
inc
adc
loop
push
mov
mov
popf
lods
fiaddl
cmp
rolb
popa
add
adc
mov
add
out
xorb
pop
xor
lret
push
pop
add
mov
ret
and
int
clc
add
adc
insl
shl
mov
imul
pusha
cwtl
pop
mov
adc
ljmp
ljmp
or
and
add
xchg
inc
ljmp
push
cli
and
mov
and
mov
xchg
pushf
rcrl
jne
jg
rol
je
jbe
pop
dec
fwait
cwtl
dec
sbb
xor
fisubs
pop
stc
pop
add
enter
jb
push
xor
or
add
hlt
sbb
shld
fisubs
xchg
test
pop
lea
or
mov
ret
mov
cmpsl
cmp
fiadds
ja
clc
pop
dec
cmc
push
addl
in
adc
pop
jae
sbb
or
add
aad
rolb
pop
and
push
loop
popf
pusha
clc
push
scas
andb
xchg
pop
roll
inc
hlt
adc
sbbl
adc
xor
fimull
xor
mov
pusha
ss
and
xchg
sbb
loop
fwait
rclb
inc
stos
daa
push
and
insl
aas
cmp
out
movsl
mov
adc
pop
push
add
cmpsb
rorb
adc
cmp
loop
cld
xchg
cmp
mov
into
adc
shlb
xchg
mov
loope
pop
cli
mov
sbb
add
pop
xor
and
loop
scas
jmp
push
sbb
push
into
pop
add
sub
add
arpl
aad
adc
mov
xchg
xchg
push
and
sub
rcl
mov
clc
in
jge
cmpsl
sbb
loopne
and
sbb
push
outsl
jl
inc
push
and
and
push
arpl
and
adc
rorl
lcall
and
aaa
fcomps
sub
int3
insl
or
cmp
jno
test
loopne
sbb
cmc
jbe
test
cltd
imul
call
xor
jmp
mov
adc
lret
sub
aas
bound
lret
cld
loope
js
cmp
mov
popf
xchg
mov
or
pop
iret
mov
pusha
jae
inc
dec
lret
push
add
jne
roll
mov
jo
sub
push
jecxz
shll
ret
cmc
je
das
orb
sarb
adc
in
idivb
mov
mov
fsubl
lret
mov
imul
add
and
rorl
mov
ret
add
xor
adc
std
xchg
jns
out
add
lea
repz
hlt
andb
int3
lcall
sbb
sti
loope,pt
or
add
inc
push
cmp
add
jb
loopne
pop
notl
push
sub
or
mov
lods
pop
movsl
push
xchg
loopne
movb
sbb
mov
jmp
cmc
add
or
cmp
cmpsl
jo
push
inc
dec
add
stc
xchg
xchg
rolb
fistpll
mov
push
ja
das
inc
movsb
pop
sbb
and
mov
aas
lret
add
decl
mov
outsb
std
add
fisttps
pop
and
push
push
mov
and
xchg
add
push
and
iret
loope
pop
sbb
add
mov
icebp
mov
adc
xor
jae
adc
mov
jge
xchg
xlat
xorb
and
and
fdivrl
add
jae
incl
stos
rcll
add
mov
int
add
adc
lds
jge
adc
push
mov
mov
sbb
add
cmc
or
mov
mov
xor
mov
mov
rcll
notb
fistl
and
lret
adc
push
push
rorl
pop
testb
sbb
push
cmc
jle
jl
ja
push
add
dec
adcl
lock
inc
sbb
or
cmp
ret
repz
orb
daa
and
inc
mov
outsb
adc
pusha
mov
pop
mov
jbe
adc
shl
add
lock
push
popa
push
xchg
mov
mov
addb
cwtl
in
jne
fmull
add
mov
dec
xchg
add
xchg
sti
out
daa
sbb
push
adc
test
das
jns
notb
inc
std
insb
pop
and
pusha
and
xchg
add
lea
push
pop
addr16
punpcklbw
adc
jae
mov
call
push
popf
pop
adc
js
ljmp
or
inc
mov
std
repz
dec
xor
sbb
addr16
mov
cmp
adc
xchg
lods
mov
fimuls
movsb
sbb
xchg
add
push
dec
add
mov
jle
sub
mov
cmc
scas
mov
xlat
push
sbb
nop
cld
pusha
inc
add
sub
enter
f2xm1
adc
mov
pop
sarb
mov
pop
das
pop
sarl
push
mov
push
stc
jg
push
sub
dec
add
push
add
loopne
add
insb
cmp
out
jl
stos
add
shll
mulb
add
je
dec
cld
pop
push
add
xor
jl
mov
add
push
loopne
pop
cltd
add
and
add
bound
xor
dec
out
cmp
xor
xchg
push
pop
cmp
movsb
sbb
aaa
nop
mov
fistl
dec
sahf
xchg
sub
add
fwait
inc
pop
add
mov
xor
hlt
loopne
in
in
adc
adc
add
test
cmp
add
dec
dec
xchg
bound
insl
mov
xchg
mov
push
flds
dec
add
popf
lds
mov
lret
and
daa
cmp
fstl
or
mov
push
adc
mov
pop
xor
add
nop
lock
inc
ss
push
add
addl
fmul
lds
inc
push
fchs
sub
shll
mov
loopne
cmp
inc
les
jl
xchg
out
mov
shll
mov
in
ret
shlb
or
arpl
pop
jecxz
sahf
add
lock
add
adc
fstps
insb
int3
and
cmc
rcll
dec
pop
add
std
cmp
cmp
mov
pusha
ds
sub
add
inc
icebp
push
and
mov
pop
add
push
pop
outsl
mov
ss
xchg
popf
cli
data16
addr16
insb
loope
xchg
mov
jb
nop
adc
mov
fwait
and
xlat
push
outsw
lahf
xor
lds
sub
test
stos
lret
fdivrs
ret
stc
inc
jbe
add
cmp
or
adc
sbb
pop
mov
add
add
adc
adc
mov
mov
mov
pop
fadds
adc
sub
xor
adc
cmp
or
jge
add
cmpsl
mulb
int3
and
out
movsl
addr16
or
aad
cs
xchg
aas
add
sbb
nop
fdivp
add
jbe
add
mov
mov
fisttpll
iret
in
pop
pop
add
mov
cmp
or
add
xor
add
mov
xor
add
int3
mov
adcb
fnstcw
sub
jnp
in
jmp
jo
or
cmc
and
scas
add
xor
bound
cli
lcall
lret
call
xor
sbb
pop
sub
add
iret
cltd
cwtl
insb
fwait
repnz
mov
roll
sti
rolb
inc
sbb
mov
rorl
ret
addl
jge
test
cmc
sbb
lods
cmp
test
pop
mov
clc
adc
repz
hlt
aaa
fldcw
ret
shrl
adc
adc
js
cmpl
or
dec
enter
push
add
pushl
cmpsl
add
jecxz
sbb
dec
dec
add
add
ljmp
sub
fcoml
lahf
nop
sub
idivl
in
push
add
roll
adc
add
xchg
inc
jo
sub
sbb
push
scas
pushf
mov
add
and
out
dec
and
cltd
xchg
in
adc
add
mov
sub
add
adc
subl
dec
adc
roll
lahf
or
mov
add
jb
lods
add
adc
jp
add
insl
cmpsl
add
mov
jne
add
push
mov
filds
cmp
jnp
lcall
repnz
mov
add
push
inc
pop
jmp
lods
jbe
mov
ss
jle
or
shl
xchg
mov
or
repz
cltd
adc
lcall
scas
cmp
loope
icebp
pushf
filds
push
ss
lcall
mov
xchg
popf
pop
int3
add
fisttpll
enterw
inc
mov
repnz
lahf
fimuls
add
out
xchg
insb
sub
stos
sbb
jns
outsb
out
mov
add
ss
pop
test
scas
out
push
cmp
push
dec
mov
push
pop
mov
or
repz
mov
cmp
pop
scas
sti
inc
inc
into
ss
or
out
cmc
sar
out
sbb
lret
mov
in
shrl
push
cli
adc
cmp
pop
add
xor
sbb
add
insl
mov
ret
popa
sahf
std
adc
add
jge
lahf
push
and
cs
sbb
adc
in
enter
and
es
in
xchg
outsb
ret
subb
into
pushf
adcl
inc
jae
adc
mov
add
jnp
mov
xchg
mov
or
dec
add
mov
les
movsl
lea
jae
push
lret
leave
add
jns
push
shrl
ret
push
rorb
mov
add
stos
or
xor
lahf
mov
push
inc
inc
add
enter
sti
sbb
scas
aad
loope
aas
test
int3
push
add
and
add
sahf
mov
mov
xchg
movb
pop
js
jne
stc
lock
roll
push
out
stos
inc
inc
and
add
mov
xchg
jo
insl
dec
jns
adc
or
cmp
mov
repnz
mov
out
scas
rorl
add
icebp
ss
pop
cwtl
sbb
hlt
or
ret
add
and
aam
add
scas
das
pop
push
mov
or
mov
adc
sub
bound
icebp
cwtl
and
mov
pop
sbb
les
test
std
and
lock
adc
mov
add
inc
pop
fsubs
and
mov
sbb
stos
add
or
add
pop
mov
test
jne
repnz
jmp
jp
jmp
add
loopne
mov
add
and
sub
cwtl
adc
cmc
mov
int3
mov
lods
loopne
test
xbegin
into
jecxz
xlat
fimull
test
xchg
dec
jmp
add
int
adc
push
add
cli
mov
cmp
xchg
stos
imul
sub
loop
fiadds
lahf
add
call
pop
xchg
pop
loop
movsb
les
jp
lds
loopne
adc
lods
xor
aam
inc
je
ret
repz
push
xor
testb
in
and
add
jns
sbb
add
xchg
mov
mov
fs
sti
fisttpl
cli
push
loopne
lods
inc
push
add
lea
jb
cmp
xchg
test
push
lcall
fdivrp
mov
add
push
dec
fisubrl
jne
fwait
lret
cmpsb
out
mov
iret
pop
or
lods
repnz
shlb
bt
push
xchg
xor
add
movsb
xchg
popa
cli
mov
add
adc
ret
stos
in
add
pop
mov
push
add
out
fs
jb
add
stos
mov
sbb
pop
pushf
xchg
add
roll
ret
dec
add
sbb
mov
nop
push
sti
adc
sub
jmp
addl
and
int3
andb
xchg
pop
cltd
cmpsl
pop
lret
in
mov
jp
mov
ja
data16
ficomps
lds
mov
mov
jno
xchg
outsl
popf
xchg
leave
daa
add
aad
fadds
sbb
sub
dec
pop
test
loope
jg
pusha
pop
aas
out
inc
dec
cmc
add
dec
add
and
gs
xchg
mov
das
sub
jecxz
add
xchg
and
nop
data16
add
inc
adc
mov
movsl
mov
dec
push
repnz
icebp
push
jno
cs
add
mov
test
inc
test
push
clc
add
cmpsl
inc
pop
pop
out
pop
add
nop
xchg
leave
rcrb
push
loop
sbb
mov
mov
sti
cmp
rcrl
clc
rorl
ss
pop
push
je
pop
or
ret
daa
jecxz
sbb
adc
in
adc
add
cmc
or
scas
popa
pop
pop
add
pop
fsub
loopew
or
lea
pop
add
add
dec
cmc
mov
mov
int3
mov
rcrb
add
push
ret
xor
adc
loope
lcall
sbb
add
xchg
stc
pop
rcrb
lea
call
mov
sub
mov
pop
dec
movsl
push
push
aad
cwtl
in
and
loopne
jmp
push
cmp
mov
jg
push
jo
cmp
add
cmp
jbe
adcb
sbb
adc
scas
shl
cmp
sbb
mov
xlat
into
or
and
aad
sub
loope
out
in
cwtl
inc
insb
cli
add
or
add
in
push
mov
pop
sbb
adc
mov
lahf
aam
xchg
pop
mov
sbb
test
sbb
cli
and
pop
push
xor
in
push
sub
or
dec
stos
inc
loope
scas
jnp
cmp
lret
dec
adc
add
addr16
push
test
dec
mov
ret
gs
call
aam
sarb
or
lea
inc
mov
pushf
add
cmp
jo
xchg
loope
loopne
or
faddp
out
add
sub
mov
test
scas
in
repz
pop
adc
shll
push
adc
sbb
cmp
push
icebp
mov
ror
xchg
into
push
mov
and
dec
jmp
jno
pushf
scas
inc
mov
xchg
nop
loope
enter
in
push
fwait
dec
sbb
inc
stos
aaa
pop
stc
and
jo
xchg
movsb
lcall
mov
pop
fstpt
ds
adc
mov
popf
into
dec
shl
pop
ret
popl
imul
cmp
inc
into
push
jge
or
sti
jle
loope
inc
int
sbb
std
xchg
in
add
notb
sbb
cld
mov
push
dec
scas
ret
repnz
std
xchg
movsb
jecxz
mov
dec
pop
dec
jge
mov
stos
and
ficoml
mov
jns
cmp
aam
xorb
pop
adc
imul
inc
xor
add
inc
mov
and
hlt
insb
mov
inc
xor
pop
fs
cmp
nop
dec
in
hlt
add
sub
dec
ja
insb
jnp
lcall
repnz
std
add
xchg
orb
pop
out
jne
cmpsb
jecxz
rclb
or
jnp
sahf
add
shlb
cs
xorl
and
subl
stos
dec
add
add
inc
adc
add
lea
inc
cmp
movsl
pop
mov
into
jne
ljmp
outsl
mov
xchg
sbb
adc
fsubrl
add
inc
fs
push
data16
and
fnstenv
dec
dec
cmp
sub
lahf
daa
pop
repz
fmul
lock
stc
inc
mov
xchg
jne
add
sti
xchg
cmp
add
cmp
shrl
add
stos
movsb
sbb
lret
push
pop
sbb
add
pop
pop
enter
stos
xchg
push
adc
inc
mov
dec
cmp
insb
add
push
or
adc
adcb
nop
pusha
int
add
dec
mov
dec
cmp
add
lock
insl
enter
add
arpl
jbe
add
push
or
xor
adc
sub
orb
and
cmp
dec
pop
mov
loopne
jecxz
sbb
push
mov
subl
or
add
pop
mov
dec
stos
std
or
jno
push
push
test
add
das
push
mov
add
jmp
adc
and
lret
mov
xchg
jnp
sub
bound
sbb
mov
imul
test
jg
or
test
cmp
scas
or
out
scas
add
ja
aaa
xchg
or
sbb
mov
lret
mov
xor
pop
mov
dec
addb
insl
ds
add
addb
lds
cmp
or
add
add
andb
int
fsubrl
sub
rcrb
js
add
outsb
divl
cld
lret
add
sub
add
aad
xlat
imul
ds
cld
adc
push
or
out
js
sub
add
xchg
cld
jp
mov
mov
cmp
push
or
mov
fcoml
test
shl
in
shll
push
stos
and
add
add
gs
push
add
xchg
pop
cmp
repnz
neg
sahf
shll
jge
sbb
fcmovu
test
inc
mov
loope
xlat
jo
cs
add
js
cld
push
scas
ljmp
mov
ret
sbb
enter
mov
pop
jg
mov
ret
add
or
imul
push
dec
stc
and
jns
fwait
jae
add
mov
xor
push
cmp
xchg
add
popa
xchg
jecxz
dec
stc
andl
add
inc
push
fdivl
jl
cmp
repnz
adc
sub
adc
jg
sti
imul
pusha
cmp
cltd
neg
jo
pop
inc
add
popa
sbb
push
fwait
add
add
ret
jmp
loope
cmp
sbb
jbe
outsb
mov
testb
mov
into
mov
add
add
test
cmc
adc
mov
mov
xor
sahf
data16
pop
repz
int3
push
jae
addb
xor
pop
insb
adc
add
cli
test
lea
inc
inc
add
and
mov
cmp
mov
pusha
mov
test
arpl
add
jmp
xor
mov
ljmp
adc
add
push
cmp
in
xlat
outsb
inc
jno
sbb
xor
shll
add
popf
cmc
not
mov
add
pop
loopne
stc
test
cmp
sbb
mov
fdivs
nop
pop
jo
negb
xchg
fisubrl
lahf
out
popa
push
insb
inc
clc
add
and
jbe
add
push
adc
add
adc
xorb
lea
mov
or
cmp
bound
scas
jmp
inc
es
mov
cltd
mov
data16
and
add
add
cmp
loopne
nop
idivb
add
cmpsl
fs
sbb
es
fstps
pop
add
loop
add
js
or
jno
add
cmpsb
leave
loope
mov
pusha
movsb
lret
and
add
cmpsl
test
cmp
or
cltd
add
xchg
jbe
and
in
add
rclb
add
dec
pop
sbb
ret
dec
inc
push
and
add
jl
ja
hlt
testb
sbb
mov
in
or
outsl
cltd
add
inc
aam
dec
xor
outsb
in
add
andb
add
and
mov
ret
cmp
rclb
loope
or
repnz
sti
icebp
into
mulb
scas
push
daa
jecxz
pop
and
cmp
fsubrs
int
cmpsl
rcl
push
jle
add
jl
dec
pop
mov
movups
insb
outsl
or
in
mov
and
push
xchg
cmp
mov
xor
leave
dec
cld
lcall
add
cs
add
int3
sbb
andl
pop
pop
addr16
add
daa
and
mov
add
fists
pop
out
fadd
add
iret
test
add
jge
push
and
jecxz
add
cld
out
mov
lret
cli
xchg
shll
popf
add
cmpsl
int
mov
jl
push
scas
sbb
mov
mov
add
push
pop
mov
and
orb
push
inc
pop
cmpl
loope
dec
mov
out
stc
or
int
out
mov
mov
ret
ljmp
dec
add
and
pop
fs
test
xchg
cmc
movsb
daa
stos
mov
xor
lock
or
sbb
adc
mov
pusha
dec
out
or
lret
adc
rolb
jg
jmp
bound
je
jno
mov
add
xchg
jne
add
fst
lahf
pop
xor
add
fcmovbe
mov
mov
imul
jp
xchg
cmpsl
loope
add
pop
stos
ja
test
jae
rorl
xor
xchg
pop
adc
or
add
pushl
xor
fisubrs
xlat
mov
cmpsl
pushf
push
jecxz
dec
inc
js
arpl
sbb
mov
mov
stos
push
ss
xchg
mov
hlt
add
enter
insl
add
push
testl
loopne
dec
mov
xor
sti
adc
repnz
cmpb
xor
sbb
adc
cmpsb
jg
shlb
sbb
mov
cmp
dec
pop
sbb
es
mov
loop
sbb
rorb
xchg
imul
push
cld
pop
add
mov
pop
mov
jecxz
or
push
sub
xchg
jl
lods
rcll
shlb
xchg
push
add
cmc
fnstenv
add
shlb
jbe
add
mov
mov
xor
add
arpl
imul
stc
gs
aad
fldl
cmp
jno
ljmp
and
push
mov
cli
cmc
sub
pop
adc
test
sub
xlat
loopne
push
call
rol
loopne
inc
fnstenv
sbb
add
movsb
enter
popf
lahf
add
loopne
and
bound
add
cmpsb
xchg
mov
int3
push
add
dec
test
cltd
jmp
add
xchg
jae
lods
add
xchg
repz
inc
sub
xor
into
xor
outsb
ss
or
add
lcall
mov
test
ljmp
jge
sbb
push
les
stos
dec
push
lret
ljmp
adc
add
adc
shll
je
ljmp
jmp
add
cli
add
lret
and
push
test
jg
or
pop
xchg
xchg
push
fisubrl
and
mov
out
inc
rcl
lods
push
push
addb
icebp
repz
xchg
hlt
cmpsb
and
mov
add
paddusb
adc
stos
and
and
sbb
add
inc
cmpb
bound
xor
pusha
mov
or
add
cmp
shrl
push
xorb
xor
xor
ret
sbb
movsl
add
cli
dec
loopne
sahf
xor
cmp
mov
fwait
ja
mov
mov
xchg
popa
loopne
cmc
adc
shlb
add
mov
add
fsub
add
xor
push
syscall
add
push
mov
push
add
or
rcll
add
sub
testl
pop
test
rcll
scas
inc
cmc
add
mov
pop
push
adc
inc
dec
ret
adc
stos
imul
pop
sbb
popf
pop
imul
or
insb
nop
repz
sahf
pushf
fucom
dec
iret
push
xor
cmp
outsb
xlat
test
das
outsl
add
jnp
mov
add
mov
loope
loope
lret
std
or
adc
sub
add
cld
icebp
testl
sbb
shrb
cmpsb
push
movsb
dec
pop
jae
add
clc
test
fldl
sbb
cld
jae
and
dec
inc
fsubl
pop
test
mov
mov
shlb
fnstenv
pop
fsubs
sarl
inc
jg
pusha
sbb
mov
jle
nop
add
mov
jno
outsl
popf
cmpsl
mov
dec
cmp
dec
xor
and
pushf
add
ds
loopne
push
addr16
mov
xor
cmp
bound
call
add
add
sbb
add
pop
jmp
inc
mov
add
cli
in
xchg
xor
push
mov
adc
rcl
lods
lret
fldl
arpl
add
fisttps
push
loope
inc
scas
xor
roll
push
and
mov
outsl
xchg
push
jl
jecxz
mov
jmp
jno
push
or
pop
sbb
mov
outsl
jb
adc
add
jmp
call
int
fsubrs
and
lret
in
sub
pop
daa
mov
xchg
add
mov
mov
ljmp
outsb
add
je
mov
jb
add
jg
pop
repnz
pushf
and
test
dec
mov
add
pushf
and
flds
ret
nop
int
es
push
add
imulb
leave
add
fisubl
or
out
adc
lahf
mov
loop
dec
cmp
adc
rolb
sti
push
aaa
sub
shrl
pop
push
lods
shll
cmpsl
arpl
je
pop
es
lods
jge
out
mov
stos
test
out
mov
push
ret
add
je
mov
inc
iret
out
rolb
xchg
frstor
repz
in
hlt
in
sub
add
outsb
mov
add
dec
adcb
adc
ror
pop
and
addr16
or
jno
push
push
push
mov
mov
or
xchg
sbb
sbb
jl
and
insb
inc
add
into
lret
jl
jae
hlt
cmp
or
mov
rol
add
xchg
out
hlt
jns
mov
movsb
mov
call
fistps
sahf
push
add
pop
xlat
dec
call
inc
cmpsl
mov
es
pushl
xchg
mov
add
lea
jecxz
sub
jmp
cs
jae
repnz
cmp
add
adc
push
in
jmp
add
inc
or
outsb
xchg
stos
adc
or
push
fsub
aad
push
mov
mov
aaa
pop
data16
push
lret
add
sub
sub
mov
adc
or
out
xchg
add
add
xchg
push
jbe
push
xor
shrl
pop
fidivrl
xchg
cld
add
mov
adc
sub
mov
add
dec
adc
sahf
mov
into
fistl
cmp
add
das
shll
push
sbb
jno
je
add
lahf
mov
out
in
inc
roll
cmp
movsb
mov
adc
pop
pop
int
inc
das
jp
adc
add
push
xchg
fistl
lret
jns
adc
fldl
ljmp
lds
xchg
ds
sbb
cltd
add
or
cmp
mov
mov
out
add
dec
cmp
mov
mov
test
push
add
and
xchg
out
or
insb
and
cld
andl
push
mov
push
loopne
pop
inc
lret
fcoms
jle
and
fwait
iret
icebp
or
or
add
daa
push
test
jmp
sub
enter
add
dec
pushf
xchg
icebp
cmp
fldt
stos
movsb
insb
cli
xchg
adc
mov
add
outsb
in
into
or
test
cltd
and
hlt
and
sbb
inc
js
dec
dec
xchg
sbb
lcall
xor
adc
aaa
sub
je
aad
cmpsl
lahf
shll
jl
cmp
jmp
add
jns
sar
aas
sti
xorb
cmc
or
cmpsl
filds
es
push
jbe
imull
lret
dec
xchg
pop
xchg
out
pop
out
insb
iret
add
stc
out
and
aam
addl
pop
movsl
popf
and
cmp
sub
add
mov
pop
cmp
add
jno
dec
imul
push
adc
fsubl
out
mov
shl
out
fnsave
icebp
xchg
ret
mov
testb
jnp
fadd
lret
add
fistpll
push
or
mov
add
mov
inc
add
pop
aam
cmpsb
and
mov
mov
and
xchg
jp
aas
lret
or
inc
and
popa
cmpsl
xchg
leave
imul
jb
sahf
shl
xchg
xchg
sbb
inc
push
push
leave
add
fsubs
out
roll
in
sbb
push
into
stos
test
add
loope
add
popf
daa
add
jecxz
or
cmc
loopne
nop
test
out
add
adc
pslld
add
ret
add
push
pop
loop
repz
sub
inc
in
xchg
iret
jmp
shll
add
loopne
push
sahf
je
or
ja
xchg
sbb
imul
xchg
dec
orps
fcompl
inc
jp
fdivs
inc
lret
adc
std
add
lock
lret
enter
jne
sbb
inc
call
sub
pop
cmp
inc
add
test
loope,pn
mov
pop
inc
add
in
mov
add
sbb
jns
add
jbe
test
popf
clc
repnz
pop
lea
ret
aad
test
push
adc
cmp
push
andb
lret
xor
mov
dec
clc
and
push
inc
cmc
les
jle
mov
loop
out
adc
sbb
add
jns
add
pushf
ficomps
push
aaa
or
pop
add
xchg
mov
add
push
inc
xor
pusha
xchg
insl
adc
ss
mov
dec
add
xlat
arpl
bound
lret
hlt
add
mov
jl
pushf
out
incl
dec
mov
jne
add
xchg
add
xchg
roll
pop
lcall
add
mov
data16
test
xchg
add
pop
mov
jns
jae
cmpsl
pop
xchg
test
xorl
push
clc
add
adc
jbe
mov
fdivp
loop
add
mov
push
mov
add
out
push
or
adc
and
mov
pop
xchg
add
clc
insb
add
call
mov
pusha
mov
dec
ds
sbb
imul
mov
add
sub
fisttpll
stc
push
or
push
fsts
add
aas
inc
adc
imul
shll
cmpsb
push
push
loopne
mov
iret
je
movsb
and
xor
fimull
or
or
roll
sahf
adc
ficompl
sbb
aam
add
inc
push
hlt
int3
movsl
cmpl
call
shll
adc
jecxz
xor
add
icebp
jg
test
adc
mov
adc
sub
add
pop
ret
adc
push
andb
add
xor
mov
add
sub
mov
int3
inc
fwait
movl
ss
fadds
inc
dec
stos
adc
cmpsl
fstp
sti
add
sbb
xchg
outsb
jbe
pusha
roll
lret
xchg
mov
rorb
push
jno
mov
pop
cmpsb
pop
enter
push
movsl
stos
jmp
les
bound
loope
in
push
xchg
out
push
pop
test
mov
xchg
addr16
mov
loope
testl
add
push
jmp
fldt
push
lods
pop
lahf
dec
jbe
stc
add
scas
repnz
rcrb
xor
dec
pushf
and
add
jne
dec
movsb
add
or
or
dec
pop
js
xchg
adcb
mov
fisttpl
xlat
outsl
aaa
add
jge
mov
dec
sbbl
adc
bound
xor
mov
mov
dec
mov
adc
ljmp
add
add
inc
nop
mov
lods
enter
push
lock
repz
or
sarb
sub
and
push
sbb
pop
lret
add
sarb
cmpsb
popa
push
add
and
push
xor
mov
clc
stc
das
arpl
jno
shl
cs
in
or
and
and
pop
ja
lods
mov
sbb
jae
mov
jg
jge
xchg
sub
cmp
fstl
or
out
add
xor
add
fisttpll
mov
inc
aad
and
lods
add
stos
and
dec
lds
test
mov
imul
movsl
inc
shll
mov
loopne
rorb
pop
push
add
cmp
bound
mov
jno
jb
lcall
add
dec
loopne
ss
iret
enter
outsl
mov
sub
add
loopne
nop
fsubs
push
test
sarl
lret
push
faddl
add
rcrb
out
popf
jns
sub
lea
test
mov
pop
lcall
pop
inc
mov
pop
pop
jbe
add
rcrb
in
or
inc
xchg
dec
iret
js
fs
dec
push
add
dec
arpl
movsl
icebp
adc
fs
or
pushaw
mov
stos
jne
mov
ds
pop
aam
add
xchg
add
shlb
inc
mov
add
pop
jle
scas
and
add
jp
cltd
jmp
xchg
sti
dec
scas
pop
xchg
in
sub
mov
addr16
test
xchg
sub
jo
ret
dec
popf
shl
add
xchg
clc
out
out
hlt
add
scas
js
rolb
fcoms
or
popa
jne
pop
mov
sub
cs
mov
push
push
lahf
and
inc
jmp
sbb
mov
xlat
or
jecxz
pop
jmp
lods
rcl
sbb
add
push
and
mov
insb
pop
testl
pop
push
lret
int3
add
cmp
and
daa
rorb
daa
rcl
lock
popa
or
or
jle
adc
idivl
or
jns
cmpb
add
fiaddl
insl
pushf
xor
lahf
scas
add
xchg
sub
outsl
push
inc
nop
aaa
adc
add
loopne
pop
xchg
push
push
add
xchg
js
das
into
add
out
push
dec
xchg
sahf
mov
jge
dec
and
dec
orb
fwait
push
cmpsl
pop
mov
stos
jp
xchg
lea
cwtl
push
popa
sub
cmpb
mov
mov
and
sahf
or
in
mov
cmpsb
pop
inc
inc
jmp
sub
push
pop
jno
scas
pusha
xchg
adc
pop
pop
imul
sbb
sub
add
insl
outsb
pop
ret
cld
add
xchg
cmpsl
pushf
data16
stc
mov
ffreep
or
test
jnp
je
push
xor
sub
adc
adc
sahf
mov
dec
push
js
mov
xor
aam
jmp
sahf
jmp
sti
testb
repz
jb
lret
add
hlt
in
adc
lods
aad
sahf
jmp
xchg
jne
dec
xlat
into
in
fmuls
mov
mov
mov
pusha
mov
out
loop
and
or
mov
mov
add
xchg
or
ljmp
addb
jmp
arpl
and
inc
add
icebp
es
enter
dec
sub
mov
ds
out
jmp
and
dec
cltd
fwait
mov
add
stos
cmp
mov
xlat
or
aaa
mov
xor
call
ret
add
jle
rol
add
outsb
test
addb
repnz
lds
xor
mov
adc
xor
mov
xchg
sub
mov
inc
idivl
xchg
mov
sub
mov
les
add
cltd
pop
jl
shl
add
jns
addr16
dec
loop
pop
lret
loope
mov
lret
rcl
add
sahf
or
bound
push
outsl
fcompl
dec
sbb
adc
dec
test
les
sub
cmc
gs
pushf
lea
cmp
leave
push
bound
mov
shll
ltr
test
cmp
shll
dec
cmp
rorl
in
stos
loopne
negl
fwait
jb
js
icebp
add
out
fcmovu
jnp
sbb
or
dec
es
inc
inc
sub
sbb
jle
pop
mov
add
fwait
push
mov
test
mov
lcall
add
jle
cmp
das
out
add
repz
mov
adc
pop
dec
roll
addb
jp
fdivs
jmp
add
mov
in
mov
ret
mov
les
lret
call
jno
out
jo
movsl
or
movsb
xor
lods
das
out
cwtl
cld
daa
push
xchg
into
cmp
rorl
js
outsb
push
iret
add
loope
or
fidivs
mov
hlt
jp
push
sub
repnz
mov
shr
mov
cli
iret
add
pusha
leave
dec
ds
in
jns
imul
outsb
dec
mov
aaa
sbb
dec
aam
cmp
sti
cwtl
jae
in
ret
adc
nop
adcl
push
mov
fcoml
outsl
add
inc
xchg
mov
cmp
test
cmp
cmp
add
mov
and
cmp
cs
cmp
rcll
or
sub
test
push
cmp
jnp
push
lret
lcall
out
push
mov
mov
stos
pusha
sub
mov
add
cmc
ljmp
push
add
cld
xor
lods
in
jg
xor
jno
inc
stc
mov
cli
pusha
jecxz
push
xchg
and
jnp
pop
adc
adc
lret
in
adc
inc
jno
add
roll
lret
or
push
movsl
add
inc
and
add
loope
in
in
rcl
add
mov
fsubl
pop
leave
push
bound
clc
fiaddl
out
jnp
fdiv
push
repz
add
jno
sub
or
mov
push
cmp
negb
incl
sbb
leave
sub
cltd
add
adcb
add
xor
pop
lods
add
hlt
mov
mov
add
movsl
add
inc
repnz
loope
xchg
mov
icebp
add
add
cmp
add
jnp
stos
inc
pop
mov
add
pop
push
or
aam
dec
add
cmpsl
pop
sbb
xchg
cli
add
adc
lret
std
push
sub
fnstenv
adc
xchg
xchg
daa
adc
sahf
test
push
out
fnstsw
jb
pop
sbb
jl
xchg
es
xor
cli
jno
iret
stc
pusha
test
sub
pop
mov
and
les
adc
add
imul
add
ret
add
mov
lcall
out
adc
xchg
imul
adc
cmpsb
mov
mov
mov
or
sbb
adc
or
jo
and
pop
xchg
jns
adc
cmp
push
loope
fadds
push
pop
ftst
fisttpl
and
movsb
fidivrl
xor
xlat
sub
pusha
scas
aam
sbb
loopne
adc
test
mov
sub
lds
mov
js
xchg
add
and
fucom
fs
outsb
pop
add
cmp
mov
ret
jge
xor
bound
mov
nop
dec
fiaddl
aad
in
cmpsl
sbb
movsb
orl
pop
or
insb
cmpl
cmc
fnsave
shlb
int
repz
divps
add
psubw
ret
xor
out
push
mov
cmpsl
addb
push
in
fistpl
lock
lea
imul
in
lret
iret
add
test
pop
and
lcall
jge
cmp
aaa
add
mov
mov
add
lock
sub
mov
xor
dec
or
push
popa
hlt
repz
lcall
add
sbb
and
mov
pusha
or
xor
iret
mov
add
out
ret
inc
mov
sbb
int3
mov
pop
sub
push
popa
scas
cmpsb
test
mov
int
sub
adc
aam
pop
ret
push
push
hlt
sbbb
popf
cmp
pop
push
iret
mov
pop
push
sub
xchg
sbb
inc
jg
scas
sub
push
fs
pop
sbb
jnp
or
push
adc
sahf
xchg
dec
movsl
sub
out
jo
test
sbb
aam
aaa
add
xor
inc
jge
pop
out
or
in
pop
lahf
jle
daa
and
aad
dec
rcrb
cmpsl
outsl
add
in
inc
and
fcomps
cmpsb
add
lahf
call
adc
pop
jle
lea
xchg
fwait
enter
jae
add
xcrypt-ecb
cmpsl
lret
loope
je
adc
xor
sbb
add
jle
in
xchg
pextrw
jne
dec
leave
loopne
and
jp
adc
mov
cmp
xchg
add
test
xor
push
fdivl
cmp
iret
or
push
jle
add
enter
xor
mov
mov
fs
inc
das
inc
adc
cmc
pop
loopne
jp
stc
movsb
sbb
pop
test
pusha
add
pop
movsb
push
add
enter
movsl
mov
das
mov
loopne
pop
pop
jo
mov
jle
mov
sbb
and
add
pop
ss
add
xchg
ret
mov
or
lds
je
loopne
aad
adc
mov
push
in
out
sahf
add
iret
testb
bound
inc
imul
dec
jmp
add
repz
inc
add
popl
add
mov
add
pop
fsubl
jmp
sub
cmp
add
adc
mov
das
fsubrl
xchg
add
jge
sbb
xchg
jle
adc
std
outsl
add
cltd
ret
int
or
xor
sti
or
dec
arpl
adc
divb
add
rcr
cmpsb
sbb
out
loopne
mov
inc
into
cmp
and
jnp
ret
outsb
lret
pop
pop
loope
rorl
adc
push
test
pop
stos
aaa
xchg
gs
jl
jmp
std
lods
arpl
add
jae
dec
add
or
outsb
pop
add
pop
mov
add
daa
inc
pop
shll
add
lret
test
add
mov
lret
jp
daa
aad
rcrl
dec
sub
xor
add
dec
subl
add
dec
cmp
fwait
xchg
mov
push
push
sbb
jp
lret
cmp
or
lahf
push
loope
lea
xchg
add
nop
mov
xchg
add
icebp
mov
scas
pusha
fiadds
mov
jae
in
ficompl
inc
sbb
jns
dec
es
dec
push
add
pop
arpl
shlb
adc
test
cs
fisubrs
fsub
or
cli
dec
pop
cmpsb
add
mov
mov
jns
and
cmp
int
mov
and
movsb
dec
aas
or
push
out
push
add
ja
repz
cmpsl
dec
add
mov
sub
add
sbb
push
jg
mov
push
testb
add
push
sbb
lret
dec
adc
add
fsubp
pop
cli
aaa
add
in
outsb
mov
inc
mov
push
dec
stos
mov
and
push
xor
lds
jne
xor
ja
and
arpl
add
aaa
je
mov
sub
xor
adc
dec
pop
add
outsl
shr
add
or
dec
test
pop
jnp
lahf
mov
mov
lds
fwait
push
daa
movsb
add
cmc
jg
or
test
das
sbb
movsl
push
loope
movsb
fimuls
push
in
ret
ljmp
aas
rorb
lahf
or
fldl
fwait
scas
xor
pushf
shll
push
add
je
mov
aaa
and
mov
inc
push
out
pushf
rolb
fs
scas
sti
rolb
aaa
add
outsb
movsl
xor
js
jg
pop
xchg
sbb
outsb
xchg
add
sbb
in
sbb
add
jo
negb
mov
aam
dec
jecxz
outsl
or
ret
daa
mov
ss
in
sub
clc
or
incl
jae
mov
stc
loopne
add
ret
mov
pushf
adc
dec
sub
lret
ret
push
inc
repnz
lea
pop
lods
xor
dec
dec
sub
sub
mov
in
out
or
jecxz
lahf
jns
xchg
cmpsb
dec
xlat
and
pusha
jo
cltd
mov
loope
add
mov
lret
dec
or
nop
xchg
jnp
testl
in
push
std
mov
lret
repz
ret
jecxz
insl
adc
jle
mov
iret
rcr
dec
push
outsl
roll
fs
sub
sti
scas
in
ret
xor
js
dec
insb
ljmp
or
out
jmp
sbb
mov
dec
pop
shll
fs
test
push
incl
jbe
add
cmp
pop
nop
das
pusha
xchg
enter
and
or
ficompl
ret
jp
jno
imul
in
mov
sti
xchg
loope
or
sbb
mov
stos
xchg
add
bound
ljmp
xlat
sbb
lods
or
add
bound
mov
mov
daa
jae
out
add
fstpt
dec
pusha
orl
adc
scas
xchg
pop
add
cmp
mov
sub
mov
pushf
xchg
aas
push
mov
add
or
and
popa
cs
jl
xchg
outsb
incb
jnp
aam
mov
test
mov
sbb
subl
dec
call
fidivs
mov
popa
inc
sbb
mov
adc
push
or
roll
adc
loop
movsl
pop
add
inc
gs
test
out
jns
sbb
fwait
jbe
out
xlat
and
sbb
pop
push
lcall
hlt
or
mov
jle
add
sbb
shrb
mov
sub
xchg
add
mov
cmpsl
loopne
sti
dec
call
mov
xchg
add
call
push
mov
jno
test
jns
add
aam
pop
or
fimull
mov
repnz
test
loopne
sbb
bndldx
adc
adc
inc
jge
adc
js
add
leave
inc
xchg
add
in
add
fcoml
lds
rolb
std
and
iret
xlat
fildl
mov
out
stos
jl
dec
insl
addr16
dec
ja
inc
cli
add
lea
jnp
pop
pop
or
mov
mov
push
sbb
add
int3
dec
jb
pusha
add
sbb
data16
cs
add
dec
inc
shr
push
ds
jbe
mov
or
in
push
out
or
mov
decb
fnsave
fiadds
insl
add
loop
mov
inc
and
dec
das
cwtl
iret
arpl
xor
sbb
push
adc
inc
ret
mov
pop
loopne
inc
xchg
shrl
cwtl
sub
jp
push
fisttps
and
js
mov
fnstcw
cld
pop
dec
xchg
or
push
mov
inc
push
pop
in
loope
pop
or
cmp
mov
dec
loopne
repnz
clc
lods
adc
mov
les
cmc
cmp
nop
add
je
xchg
popf
cmp
rcrb
jbe
inc
mov
in
or
and
add
cmp
aas
emms
out
loopne
or
mov
adc
inc
sub
add
mov
push
and
inc
scas
or
inc
add
push
jne
xchg
jno
mov
filds
adc
nop
lock
inc
movb
jb
xchg
aam
or
add
cmp
pop
or
add
arpl
imul
add
hlt
sbb
xor
jg
lret
mov
in
test
ljmp
outsl
or
imul
pop
lret
xchg
push
add
sub
mov
ret
sub
lcall
or
xchg
mov
cmpsb
roll
xchg
outsb
iret
into
pusha
jp
inc
mov
cld
adc
push
inc
scas
pop
loopne
enter
push
push
cltd
sub
popf
outsb
pop
repnz
dec
sti
lods
cmp
test
rcrl
and
lea
pushf
in
mov
popf
xchg
add
xor
mov
and
jp
repnz
sbb
imul
enter
dec
sbb
outsl
xchg
and
out
xor
cltd
sbb
inc
fnstenv
push
loope
sbb
add
fdivs
mov
pushf
pop
sub
stc
popf
in
add
xchg
push
pop
pusha
inc
mov
xor
add
pop
push
sbb
ja
inc
stos
sub
pushf
das
and
test
std
loop
out
adc
push
mov
or
aaa
jae
push
sub
inc
xchg
pop
add
adc
jecxz
xor
mov
sahf
roll
mull
dec
sub
fwait
nop
jmp
mov
movsl
stc
mov
test
jecxz
icebp
adc
jecxz
pop
pop
ret
inc
add
adc
rclb
popf
cmpb
or
sbb
aad
add
mov
push
hlt
insl
mov
sahf
add
sbb
xor
out
rcrl
sbb
mov
es
or
repnz
ret
or
add
jns
ljmp
dec
ss
inc
dec
add
cmp
xchg
scas
jg
stos
mov
xor
addr16
daa
outsl
add
aad
jb
loop
pop
pop
add
push
outsb
push
sbb
or
iret
pop
mov
add
xor
ret
pop
mov
ss
arpl
push
adc
add
push
xchg
leave
push
sub
cmp
push
les
outsb
and
es
mov
xor
adc
sbb
cltd
test
push
jecxz
jmp
or
xchg
pop
outsl
add
push
jle
push
aam
sub
fbstp
sbb
negl
sub
lcall
daa
fstps
sahf
das
rcll
aad
movsl
lcall
cmp
mov
popf
icebp
cli
xchg
cmp
xor
mov
lret
lock
add
mov
ljmp
sbbl
add
in
inc
add
xchg
aaa
sub
jl
pop
add
mov
repnz
ds
mov
and
int
cmp
in
sbb
js
setno
or
icebp
jge
push
mov
sbb
cmp
adc
inc
or
sbb
lock
fcomps
mov
xor
fimuls
notl
mov
mov
sbb
outsb
add
mov
push
push
and
adcb
cld
imul
sub
jae
add
dec
xor
mov
sub
enter
stos
and
mov
jp
ja
add
jno
daa
iret
push
loopne
xor
popf
pusha
pop
adc
dec
popf
clc
sbb
pop
jmp
adc
pop
add
insl
enter
push
shrl
adc
imul
lret
add
mov
mov
dec
cmp
adc
pop
movsb
inc
icebp
push
jne
add
mov
pop
inc
sarl
add
jns
adc
mov
hlt
add
pop
ffreep
out
fstps
sub
cmp
push
sub
pop
std
mov
ss
push
inc
add
mov
imul
mov
pop
add
jbe
inc
xchg
push
call
jns
sbb
ss
or
and
jbe
iret
adc
movl
sub
fmull
add
cltd
pop
pop
add
mov
dec
mov
pop
cmp
ficompl
pop
rorl
or
fwait
stos
popa
std
loopne
inc
lcall
insb
cmp
stos
dec
inc
dec
and
jbe
les
ret
movsl
and
jp
rcrl
add
lods
add
push
fs
lea
lcall
fcmove
ficoms
jecxz
cmp
cmc
stos
or
cltd
test
pop
xchg
add
adc
jae
pop
and
out
jecxz
cmpsb
lds
aas
lock
popf
xor
sub
sti
and
bound
scas
cmpsl
js
out
xchg
aas
inc
xchg
cmp
mov
mov
push
dec
add
adc
lock
les
ss
xorl
xor
out
sbb
or
ja
ret
add
cld
cmp
ss
insb
add
stc
pop
add
mov
sarl
sub
xor
cmp
inc
add
mov
pop
or
xchg
mov
les
in
sub
jp
pop
xchg
add
xor
ss
rolb
push
pop
mov
push
pop
jg
ror
jo
test
jp
into
and
loope
sbb
rorb
nop
mov
mov
mov
movsb
add
sbb
xor
bound
roll
es
repnz
into
add
addl
cmp
sahf
mov
pop
and
lock
cmp
and
xlat
inc
add
lock
popl
roll
sbb
jo
jnp
out
add
jmp
push
icebp
pop
xor
cmp
add
or
stc
pusha
pushw
sbb
cmp
cmpsl
aaa
popf
add
out
lds
cltd
cwtl
or
inc
push
add
mov
pop
inc
add
sub
loopne
mov
das
outsl
sbb
sub
add
insb
out
add
pushf
sbb
mov
cmp
cmp
sbb
push
ret
arpl
ja
cwtl
mov
or
mov
push
pop
push
add
movsb
lds
mov
into
adc
mov
hlt
mov
push
leave
xor
add
in
insl
loopne
jb
push
test
out
rcll
mov
add
adc
clc
add
dec
rolb
jnp
and
add
lea
scas
add
cs
dec
subb
jno
add
inc
mov
dec
enter
fldl
push
dec
jae
xchg
jmp
sub
les
test
lret
fsubrl
adc
daa
stos
flds
push
pop
insl
mov
push
push
mov
adc
sbb
inc
jo
movsl
mov
mov
add
out
and
cmpl
fwait
jmp
xchg
pop
les
mov
add
in
or
inc
cmc
into
fadds
gs
mov
out
in
mov
xor
pushl
adc
mov
outsb
cmp
or
xchg
addr16
es
xor
mov
bound
mov
jle
add
xor
cmc
push
push
mov
pusha
out
call
adc
push
js
mov
fmul
lahf
add
fstps
pushf
fmuls
add
mov
imul
bound
cs
imull
cmp
push
add
push
sub
mov
pop
sub
hlt
sarl
repnz
and
loope
cmp
test
loopne
adc
movsb
lock
xchg
mov
incl
mov
sub
pop
add
ja
dec
leave
add
or
icebp
push
imul
in
cmp
fs
inc
lret
scas
movsl
xlat
outsl
add
shll
sub
inc
cmova
add
lea
mov
dec
lods
add
ja
add
mov
xor
insb
add
sub
das
adc
add
inc
movsb
stc
lods
lahf
jg
add
ror
test
jecxz
or
sahf
mov
mov
adc
ja
das
adc
xor
adc
cmp
sarb
inc
jno
xchg
jmp
push
adc
push
stos
push
pop
mov
daa
push
jo
sub
loopne
lret
sarl
sbb
pop
loope
pop
ret
rcr
jae
hlt
inc
repz
loopne
pop
stc
xor
jecxz
ss
add
sarb
scas
jg
sbb
ja
push
dec
xchg
add
sbb
cwtl
popa
adc
lahf
loope
icebp
sbb
pop
into
pop
cmc
sub
fwait
ds
test
and
and
xchg
scas
icebp
ja
pop
mov
lea
adc
add
ret
add
lret
ret
cli
loopne
add
mov
add
ljmp
mov
ja
sti
push
nop
add
out
mov
pop
mov
arpl
mov
outsl
and
add
add
movsl
dec
loopne
hlt
daa
ss
xlat
jnp
mov
adc
adc
jmp
iret
mov
add
test
out
dec
add
cld
cs
jne
mov
pop
or
dec
sub
fnclex
inc
mov
lahf
push
adcb
sbb
inc
clc
mov
and
jecxz
or
das
sti
mov
inc
ret
loopne
add
xor
mov
sbb
loope
add
and
or
inc
js
popa
pop
in
jae
adc
pusha
mov
inc
pop
push
sbb
dec
inc
add
add
jecxz
mov
adc
push
addr16
adc
jge
shrd
push
fidivl
mov
adc
in
cmp
add
mov
repnz
mov
jno
cmc
or
outsb
mov
push
loop
inc
pop
add
mov
dec
fiaddl
push
jge
sbb
test
fisubrs
adc
dec
jnp
fdiv
mov
dec
cs
daa
xchg
and
jmp
dec
mov
pusha
xor
divl
jl
sbb
fwait
lds
enter
push
add
jae
inc
push
leave
das
popa
stos
dec
ret
adc
movsl
cmp
cmp
aaa
cmpsb
outsb
or
in
nop
gs
scas
stos
sub
inc
adc
or
add
pusha
adc
mov
mov
pop
out
les
dec
pop
adc
arpl
cmp
dec
popa
add
pop
stc
add
cli
xchg
lods
in
sub
add
push
inc
push
and
sbb
lcall
adc
int
dec
adc
adc
sub
movl
aad
andl
popa
xor
xlat
xchg
scas
xchg
xor
pop
insl
in
xchg
mov
andl
adc
outsl
fdivs
insl
add
xor
mov
cmp
adc
mov
push
adc
add
jp
xor
push
inc
jne
psubw
inc
ret
add
testb
out
je
adc
enter
shlb
and
scas
push
stos
pop
add
pusha
inc
sub
xchg
mov
fsubl
arpl
pusha
enter
int3
jge
jecxz
jmp
rcr
sbb
push
call
sbb
int3
aas
out
jl
loopne
leave
inc
dec
fldl
sbbb
sbb
testb
pop
pushf
push
sub
jmp
add
xor
add
jge
popf
wbinvd
push
cmp
in
shlb
or
mov
add
and
xor
test
cmp
or
in
mov
hlt
or
arpl
int
mov
leave
in
packssdw
cmp
jbe
fsubrl
adc
repnz
push
aaa
lret
fwait
add
rcrl
ret
mov
push
jbe
ficompl
aam
dec
into
mov
jge
mov
lods
cli
out
test
outsb
repz
jecxz
sub
popf
mov
push
cmp
mov
cmp
add
gs
insb
loopne
adc
push
cmpsl
add
xchg
popf
and
seto
rcrl
shll
or
cmp
loopne
dec
insl
push
rorb
push
push
add
mov
add
pop
pop
cs
pusha
dec
out
fnstsw
pop
xor
adcb
pushf
push
arpl
mov
or
loope
push
insl
or
add
mov
call
lret
xor
jle
fnstenv
into
je
dec
push
jmp
jo
adc
rorb
ret
and
aaa
xorl
inc
lds
cmpsl
xchg
adc
mov
jns
adc
pop
das
jecxz
adc
je
sbb
lds
push
dec
push
out
lcall
fists
test
add
dec
ret
inc
add
std
pop
mov
add
cmp
cmpsl
or
add
mov
rcrl
or
fldenv
fwait
sub
cmp
add
lods
mov
ror
scas
or
test
xchg
ret
adc
adc
shrb
popf
mov
add
jns
jl
clc
xor
jbe
sub
mov
stos
jnp
sbb
fucomi
push
iret
enter
mov
fistpll
addb
push
dec
mov
adc
inc
sbb
pushf
push
pop
lahf
aaa
adc
ret
scas
sbbb
loopne
mov
add
stc
lret
cmp
adc
bound
in
push
daa
lea
xchg
mov
out
data16
inc
lret
in
pop
pop
push
and
fwait
sbb
sbb
xor
adc
je
add
sub
inc
out
and
mov
pop
cmp
mov
or
inc
rcrl
mov
xor
jmp
fisubl
jo
jecxz
daa
invd
cli
add
fldl
cmc
loopne
mov
cmpsl
xchg
cmpsb
out
add
imul
imul
mov
adc
mov
sti
xchg
xchg
add
daa
dec
mov
dec
mov
cmpsl
out
lret
cltd
call
add
xchg
loop
dec
mov
inc
mov
fsub
in
jg
dec
push
mov
or
movsl
xchg
js
fldl
fwait
cmp
pop
add
push
adc
xor
ret
adc
testb
jbe
ss
add
cwtl
lods
test
pop
stos
add
negl
add
andb
lods
js
and
xor
jae
incl
sahf
adc
pop
pop
fbstp
lods
daa
mov
cli
add
pusha
sti
pop
sahf
data16
pop
aam
jge
jns
les
mov
xlat
mov
add
cwtl
sti
mov
aam
dec
or
sbb
icebp
loope
fwait
arpl
psllq
cmpsb
or
or
popa
and
xor
push
or
add
test
or
shlb
test
or
jnp
jo
or
xlat
lcall
ret
pop
rolb
sbb
mov
dec
add
xchg
adc
rcrl
and
loop
notl
jns
mul
add
mov
inc
repz
in
loope
ret
sbb
fistps
jge
add
sub
in
sub
xchg
jg
mov
loopne
mov
outsl
lret
adc
mov
aaa
jbe
hlt
movhps
sbb
pop
jle
lret
out
add
lds
fistps
mov
lea
push
mov
sbb
fbld
sbb
pop
cltd
add
xlat
jns
iret
jo
pop
push
stc
pop
add
add
fldt
js
add
frstor
xchg
add
dec
jmp
pop
mov
sbb
push
sbbl
xchg
push
cmp
add
push
ret
sbb
pop
inc
ljmp
subw
mov
addr16
sub
xor
fdivrl
add
imul
mov
std
push
jo
ret
repz
lea
mov
lock
loop
cld
movsb
sbb
jle
jecxz,pt
scas
mov
loopne,pn
das
test
dec
lret
mov
adc
adc
repnz
in
sub
mov
mov
sbb
roll
add
cmp
and
adc
mov
lods
sbb
dec
jb
and
add
hlt
jecxz
mov
out
xlat
pusha
shrb
fbld
notl
and
dec
jl
dec
rcrl
sbb
sbb
rorl
icebp
popa
movsl
mov
add
inc
add
adc
fdivrs
xorl
stos
dec
add
sub
mov
cld
mov
pop
call
add
sbb
and
arpl
adc
inc
stos
lret
push
mov
loopne
or
cld
adc
push
pop
mov
or
add
mov
outsb
cs
mov
test
inc
outsb
mov
dec
sti
adc
xor
nop
adc
pop
cmc
pop
int
rolb
add
push
sub
mov
cld
data16
call
or
shll
dec
push
or
lds
mov
pushf
or
pop
ret
or
add
adc
adc
negb
mov
loope
mov
imul
out
mov
inc
lds
fstpl
adc
xchg
ljmp
testl
add
mov
push
lcall
stc
push
xchg
dec
adc
adc
movsb
in
inc
loope
add
xchg
add
dec
sub
roll
test
push
fwait
jne
pusha
add
sbb
mov
lods
mov
cmp
add
pop
add
mov
fsub
pop
iret
in
out
xor
rcrb
add
xor
rcrb
lret
popf
add
mov
pushf
test
add
add
dec
xor
mov
or
frstor
test
inc
mov
and
add
daa
mov
sbb
jp
repz
scas
cmp
mov
in
push
add
cwtl
popa
mov
enter
push
pop
add
cltd
pop
dec
mov
jp
jbe
stos
addl
add
iret
adc
es
fildll
and
roll
imul
and
xchg
ud1
addr16
adc
mov
stc
pop
rolb
lods
dec
fwait
dec
mov
popa
dec
cmp
jmp
sbb
mov
or
int3
push
rcll
repnz
push
pop
add
iret
jns
jl
int3
popa
ret
pusha
mov
hlt
sbb
cmp
mov
and
into
add
push
push
mov
add
sub
pop
add
mov
pop
push
pop
call
mov
jmp
xor
xor
lcall
enter
movsl
mov
andl
dec
cmp
mov
sub
out
stos
jecxz
and
dec
push
inc
out
or
lods
jo
enter
push
test
loope
push
mov
pop
pusha
lret
sbb
repz
adc
ret
mov
pusha
jns
inc
sti
or
or
mov
outsb
aam
add
in
push
sti
test
cld
rcrl
push
scas
insb
sbb
sbb
jae
mov
loope
xchg
mov
cs
loope
scas
pop
fists
jns
pusha
push
enter
cltd
dec
mov
adc
inc
add
leave
mov
cmp
dec
add
imul
mov
lods
adc
xchg
call
cltd
inc
push
lods
sti
in
inc
add
pop
add
mov
sbb
loopne
sbb
and
or
dec
data16
and
push
pop
cmp
sub
push
rorl
sub
and
jmp
or
push
gs
push
iret
or
add
fdivr
imul
loopne
xor
adc
movsl
add
bound
aam
clc
jmp
into
inc
out
add
or
lds
xchg
or
test
cli
jb
push
sub
mov
jp
xor
sbb
add
sub
fwait
shll
adc
mov
sub
xchg
in
insb
pop
sbb
add
mov
mov
inc
pushf
jge
add
jnp
mov
call
pushf
add
mov
sbb
cs
sub
std
loope
das
dec
add
outsl
adc
pop
jno
fbstp
out
pusha
loop
pop
pushf
jle
add
add
xchg
aaa
out
repnz
add
pop
mov
pusha
pop
les
sub
and
movsl
inc
lock
mov
lcall
inc
add
cwtl
mov
cmp
or
cmp
loopne
aad
jp
xchg
fsts
xor
jg
push
cltd
loope
push
das
in
mov
add
sub
pusha
mov
pop
mov
jl
int3
loopne
popf
fcomps
stos
aas
xor
and
in
fcompl
jecxz
out
popa
sarl
icebp
adc
add
fbstp
mov
pop
sub
xchg
or
icebp
cmc
cmp
sbb
push
bnd
pusha
inc
xor
push
pop
jae
lahf
in
sbb
or
jge
inc
mov
or
add
jb
dec
icebp
dec
scas
loopne
fbld
rcrb
mov
sub
cmp
jge
imul
outsb
rcll
sub
fmuls
loopne
jo
out
push
xor
sbb
mov
mov
mov
adc
rcr
push
xor
cli
add
cmpsb
clc
sub
pop
cmp
xchg
or
shrb
sbb
xchg
xor
add
jae
adc
cmp
fcompl
cli
mov
shlb
popf
adc
inc
jmp
push
out
jo
mov
aad
and
pop
xor
sbb
into
jp
jne
outsb
scas
test
mulb
mov
sbb
add
mov
jb
pop
mov
and
inc
inc
jns
xchg
dec
pop
incb
fldcw
or
shll
cmc
add
sbb
and
cvtdq2ps
sar
rcrb
add
xor
add
addr16
faddl
rcrb
push
inc
add
loopne
imul
dec
add
test
or
xor
push
mov
and
and
ret
jo
popa
mov
or
jle
aas
add
jmp
cld
pop
pop
cmp
stos
sub
scas
adc
add
sbb
and
ret
add
push
bound
sub
add
xchg
pop
add
or
mov
inc
xchg
addr16
add
add
lods
adc
ljmp
sti
and
mov
xchg
call
loopne
push
out
inc
test
shlb
mov
sti
sbb
iret
push
pop
popa
and
call
cs
imul
dec
inc
insb
sbb
add
shrl
or
sbb
repnz
jo
clc
nop
pop
inc
jo
add
cmc
and
add
andl
inc
xor
xchg
daa
add
or
sti
fnsave
inc
and
cltd
inc
lret
pop
dec
mov
sbb
push
and
push
pop
test
icebp
in
ret
addb
fdivs
mov
lea
and
daa
dec
lods
popf
in
and
mov
push
sub
mov
pop
test
jmp
cmp
dec
ficomps
add
sub
dec
lock
pusha
sub
add
lods
inc
iret
adc
out
fiadds
repz
test
lock
mov
adc
jno
lahf
out
das
scas
inc
ret
lea
mov
sbb
cltd
jecxz
int3
scas
popf
inc
or
jl
add
push
faddl
sub
add
lret
in
or
dec
fsub
out
add
cli
popa
and
lahf
pushf
add
test
add
mov
add
adc
mov
pop
xor
ja
pushf
xchg
pop
lods
jo
iret
push
insb
sbb
pop
mov
add
pushf
pop
sbb
add
sub
and
outsb
sub
adc
cltd
addr16
stos
lea
dec
inc
pushf
and
add
xchg
push
outsb
imul
aaa
mov
lds
enter
pop
movsl
pop
sub
sahf
inc
pop
es
js
xlat
sbb
adc
fnsave
add
pop
push
add
addl
call
cmp
xchg
test
sbb
fisubs
add
cmpsb
jg
mov
push
lock
fnstenv
call
in
cwtl
add
sbb
test
fistl
or
add
push
dec
loopne
cwtl
mov
sar
adc
add
dec
sbb
rcll
loope
mov
xor
clc
jl
jmp
add
popa
fcoml
int
push
jcxz
inc
in
loope
sub
dec
pop
lahf
repnz
add
rol
mov
fisubs
scas
bound
icebp
test
add
inc
pop
mov
jne
fcomip
loopne
adc
sbb
int3
sbb
add
icebp
jno
js
leave
pop
inc
test
cmpsl
sbb
and
stos
aaa
adc
or
fs
mov
mov
test
testl
and
or
sub
and
cmp
sbb
stc
call
insl
xchg
scas
sbb
fwait
and
out
add
test
sub
div
add
aam
aas
loop
cmp
pop
cltd
sbb
faddp
and
sbb
insl
inc
xchg
pop
xchg
sti
lret
sub
cltd
sbbl
sbb
shlb
sbb
cmp
aas
sub
fcoml
cmp
inc
nop
out
test
ret
sbb
fisttpl
sahf
sti
cmp
mov
add
sub
daa
xor
insb
daa
cwtl
mov
pop
gs
les
dec
push
popa
jecxz
mov
push
call
test
sbb
icebp
or
lret
cmp
mov
add
inc
and
cltd
add
push
lea
ds
mov
fcompl
jecxz
into
adc
dec
pop
loope
popf
mov
sbb
test
dec
or
push
and
mov
add
mov
sbb
mov
sbb
sub
add
std
mov
add
int
cmp
pop
mov
loope
sahf
pop
sub
jo
add
mov
fisttps
add
cmp
out
mov
lcall
aad
push
cmp
pop
xchg
pushf
xchg
adc
nop
divb
cmp
lcall
fiaddl
insl
test
add
jp
jne
mov
in
add
fldt
sti
push
add
inc
jmp
mov
out
add
push
pop
xchg
dec
push
sub
test
jle
ficoml
inc
pop
js
stos
pop
bound
repz
mov
push
rorl
mov
das
cmp
add
push
fistl
repz
fnstsw
ret
rolb
mov
rcll
cmp
add
adc
sarl
cmc
pop
sub
inc
daa
test
loope
xchg
les
loopne
adc
add
movsl
xor
pop
sbb
sbb
ror
fs
jl
inc
out
sbb
popf
lods
add
ret
jne
lds
jecxz
hlt
dec
and
inc
rorb
addr16
sarl
inc
or
xchg
iret
int3
inc
jge
stos
sub
add
cmp
ret
xchg
rol
jg
sbb
les
xorl
inc
add
xchg
push
enter
mov
je
pusha
inc
mov
xor
mov
ret
mov
fnstsw
mov
sub
stos
adc
fiaddl
pushf
push
inc
arpl
mov
adc
add
mov
push
mov
repz
pushf
sahf
xchg
sbb
adc
pusha
cmp
push
lret
std
aaa
clc
sbb
push
lods
stos
add
out
jne
adc
dec
mov
in
adc
hlt
push
xlat
fidivs
call
stos
mov
stc
daa
push
cmpsl
add
dec
inc
add
jns
lock
lcall
xor
xchg
cltd
outsb
in
push
push
xchg
inc
loopne
stos
popa
aaa
mov
lods
add
jl
andb
cmc
adc
jg
add
aad
nop
loop
popf
lret
test
add
push
aam
jno
adc
add
ret
sub
icebp
mov
imul
push
repnz
popa
cmpsb
je
int
or
mov
add
adc
mov
cld
and
lahf
mov
pusha
rorl
push
adc
jle
pop
mulb
stc
adc
push
test
jp
xor
ljmp
jl
jbe
jg
pushf
mov
add
sub
fdiv
inc
add
sub
dec
popf
sub
ljmp
xor
jnp
gs
in
lret
clc
and
aas
adc
dec
add
xchg
push
pusha
cltd
jmp
mov
out
daa
pop
jo
cs
push
sahf
cld
bndldx
in
mov
in
jg
and
popf
test
push
xor
inc
pusha
sub
negb
ror
out
add
adc
cmp
add
lahf
out
push
inc
pop
scas
in
ret
and
nop
push
mov
aad
adc
jp
add
fiadds
inc
xor
push
xor
pusha
dec
loopne
scas
push
mov
daa
mov
aaa
hlt
inc
dec
or
push
push
jno
add
sbb
add
decl
add
xchg
pop
sub
xor
daa
push
pop
push
push
sub
outsl
ror
mov
jg
xor
fcoms
jp
cltd
roll
jmp
call
loop
incl
outsl
scas
sub
xlat
int3
add
xor
sbb
jg
mov
sbb
imul
cltd
inc
push
jne
imul
cmp
or
ljmp
adc
call
cld
mov
fsubrl
aas
dec
mov
add
sbb
out
add
mov
data16
xchg
adc
notb
sbb
sbb
popf
mov
adc
ljmp
popa
add
push
jns
xchg
adc
sub
cmp
add
sub
sbb
inc
sbbb
pop
std
inc
imul
inc
pop
movsb
jmp
int3
je
pop
mov
clc
and
jecxz
adc
and
aad
and
adc
out
pop
lock
repz
sbb
roll
xchg
mov
andl
mov
sbb
rcrb
or
xorl
and
xlat
test
int3
movsl
mov
lahf
or
jp
dec
ss
xlat
inc
daa
mov
sub
mov
loopne
outsl
movsl
adc
push
cs
adc
int
and
pusha
outsb
inc
test
insb
out
pop
mov
aad
arpl
sahf
jge
sbb
in
inc
pusha
or
popa
jp
pop
adc
dec
popa
xchg
ss
push
mov
shl
mov
int3
in
test
mov
and
fyl2xp1
mov
adc
xchg
ret
mov
imul
test
arpl
ret
pop
loop
pop
mov
xchg
lret
add
movl
jg
lods
clc
pusha
or
sbb
subl
fidivrs
mov
dec
add
xchg
aam
push
ja
add
repz
out
mov
dec
loope
call
add
mov
mov
outsb
lahf
xchg
ret
add
or
mov
add
mov
loop
add
into
xor
mov
pop
aad
data16
add
iret
movsl
adc
dec
aas
stos
mov
dec
dec
ret
add
jp
xchg
mov
mov
shr
repnz
jo
aam
loop
mov
popw
cmp
ljmp
adc
andb
xor
xchg
add
add
sbb
and
mov
adc
lahf
out
and
pand
and
test
cmp
cmpsb
loopne
fisubrl
push
push
pop
pop
int
mov
outsl
add
mov
add
fsub
popl
repnz
sbbb
les
jecxz
xchg
call
outsl
iret
sbb
out
lea
and
rol
stos
xchg
adc
sahf
mov
add
xor
shlb
and
pop
es
xor
scas
dec
cmpsb
repnz
cmp
adc
loope
pop
xchg
pop
adc
pop
pop
lret
inc
in
or
mov
or
lahf
aad
insl
or
and
sbb
shrb
or
and
cld
ss
add
add
mov
xchg
push
js
ret
pushl
push
aad
sar
and
orb
mov
cmpsb
jge
fistps
rcr
or
in
cld
ret
clc
sbb
fcompl
es
or
pop
xchg
mov
jmp
sub
std
and
fistps
mov
mov
call
inc
fisttps
mov
xor
les
enter
imul
add
or
outsb
cmpsl
in
adc
push
and
jp
and
push
push
mov
mov
or
int
sarl
frndint
movsb
add
sbb
in
sbb
imul
ret
and
dec
les
mov
and
sub
mov
add
imull
xchg
add
lods
mov
icebp
ljmp
push
and
aam
negl
adc
xchg
jbe
jae
dec
push
add
je
movsb
nop
mov
mul
jne
pusha
jp
ss
stos
push
sub
add
movsl
and
xchg
xor
lcall
adc
cs
jno
aam
outsl
sbb
xor
mov
ja
in
outsb
cmc
nop
cmp
data16
or
add
xor
icebp
jnp
in
push
inc
sbb
call
jecxz
add
notl
jo
add
pop
sbb
enter
negl
imul
out
mov
shlb
aam
and
inc
add
and
ljmp
push
adc
insb
mov
incb
call
jle
mov
push
je
or
mov
mov
xchg
push
ficoml
pusha
dec
out
mov
xor
add
mov
leave
adc
int3
scas
xor
outsb
loope
into
adc
xchg
push
adc
mov
stos
push
stos
and
fldl
mov
mov
movsb
ja
push
inc
sbb
xor
cmp
stc
pop
mov
add
pop
inc
jmp
inc
ja
sbb
xor
insb
cmp
add
sbb
add
xorb
scas
xchg
cwtl
loopne
jne
sbb
jl
loop
outsl
daa
mov
mov
shll
xchg
pushf
xchg
and
mov
mov
dec
dec
popf
sub
push
xor
and
push
sbb
adc
inc
stc
sub
mov
pop
add
fld
scas
add
in
pop
int3
insl
mov
cli
lods
mov
clc
jp
inc
das
mov
pop
and
repz
sbb
mov
push
daa
push
add
sub
mov
mov
mov
push
pushf
call
jnp
push
das
mov
mov
mov
lock
xchg
int3
adc
call
imul
lcall
int3
add
cltd
mov
push
mov
pop
add
mov
cmp
add
xchg
mov
jno
mov
das
sbb
mov
add
mov
lret
loope
cwtl
dec
sbb
push
das
sbb
or
adc
jg
mov
mov
sarb
test
and
sub
pop
adc
leave
mov
sub
gs
das
pop
or
pop
jl
imul
xchg
adc
push
mov
lods
insb
mov
rcll
cmp
loopne
pop
pop
or
pusha
cmp
add
jns
rorb
pop
dec
lods
adc
rol
add
cmp
push
fiadds
push
jns
cmp
xlat
into
add
in
pusha
in
popa
ja
add
jmp
dec
sbb
adc
dec
pop
js
mov
ss
add
add
icebp
test
lret
add
jmp
mov
mov
rol
lock
or
sbb
mov
xor
xchg
mov
inc
xchg
push
scas
sbb
mov
outsl
int3
xchg
stos
add
or
dec
add
jnp,pt
in
lds
xchg
hlt
cmp
sbb
add
or
lahf
popa
outsl
addb
rcll
and
mov
aam
faddl
pusha
je
xchg
mov
iret
aas
fistpll
or
adc
sub
loopne
rorl
rolb
jecxz
cmpsl
jo
sbbl
fsubp
lds
das
mov
mov
scas
dec
addb
jle
xor
pop
and
test
je
add
cmp
aas
jecxz
sub
cmp
dec
inc
hlt
pop
outsb
or
cmpsl
int3
add
sbb
push
out
cmpsb
jns
and
cmp
idiv
pop
add
int
push
rcl
xor
and
jge
push
xchg
sbb
add
mov
mov
mov
lock
add
lods
push
pop
add
sbb
mov
pushf
xor
mov
xchg
pusha
add
and
mov
dec
adc
lods
dec
iret
jnp
add
in
aam
xchg
push
pop
inc
ss
or
stos
pop
into
dec
fcompl
adc
and
add
rolb
mov
cld
adc
int
and
and
or
lea
sub
adc
mov
lahf
inc
add
and
jge
mov
add
mov
push
add
outsl
lock
jle
pop
scas
push
add
mov
adc
pusha
sbb
jns
les
jae
add
in
adc
xchg
inc
nop
popf
das
mov
cmp
lods
pusha
les
jg
fwait
adc
dec
mov
add
ss
imul
lret
mov
mulb
aam
cmpsb
sbb
xchg
add
mov
jne
adc
cmp
ret
das
loop
sbb
lret
je
mov
fldcw
add
jnp
mov
or
add
jg
movsb
add
aad
mov
fisubrl
mov
es
lahf
out
lods
add
aaa
jle
xchg
mov
sti
pop
xor
popa
pop
fmull
adc
sti
repnz
and
inc
xchg
dec
fstpt
xor
add
xor
adc
ds
sarb
lahf
add
push
jecxz
and
push
xchg
jae
add
and
sti
sbb
add
mov
iret
or
pop
lret
sub
and
mov
push
adc
lods
adc
lret
push
fidivrs
loopne
fistpl
loope
push
dec
je
xchg
popa
push
jno
add
add
cmp
mov
push
xchg
mov
adc
pop
js
adc
in
add
adc
inc
jae
xchg
movsb
ffree
sahf
fs
adc
dec
inc
lods
je
sbb
cmp
fbld
push
push
out
sub
mov
bound
cmp
ret
inc
sub
lcall
sbb
test
icebp
ljmp
addb
add
incb
sti
out
dec
pop
sbb
pop
pushf
cmp
mov
mov
push
adc
and
loopne
inc
xchg
std
rcrl
jl
in
bound
out
sarl
dec
jbe
int
mov
xchg
mov
dec
lea
jb
sarb
int3
xor
or
pop
fldenv
push
cs
sbb
es
mov
pop
adc
or
clc
add
adc
mov
test
mov
sbb
test
add
adc
push
xor
xchg
clc
jno
adc
mov
add
fcom
popa
and
in
rcr
xchg
push
sub
repnz
and
cltd
mov
loopne
sbbb
add
xchg
insb
cmp
jl
fs
push
add
in
daa
fwait
push
mov
sub
nop
mov
xor
or
sarb
xchg
mov
out
mov
sbb
cmc
cwtl
add
add
cmovs
outsl
addr16
shll
xor
xchg
rcr
dec
test
insb
add
jns
pop
xchg
cmp
add
dec
and
or
shrl
cwtl
hlt
mov
fisttpll
stos
push
lcall
jo
mov
lret
loope
or
sbb
xchg
repnz
leave
popf
or
cld
inc
sub
test
sbb
or
inc
adc
add
pop
pop
into
fs
xchg
add
cmpsl
adc
shlb
lds
ret
push
push
cld
pusha
into
mov
movl
or
jne,pt
shlb
daa
inc
jle
pusha
loopne
aaa
or
mov
dec
aam
and
adc
pop
pop
cmp
and
mov
fildl
sbb
scas
or
xchg
jo
mov
aaa
and
push
sahf
loopne
add
inc
xchg
int
stos
sub
dec
mov
jno
insb
sbb
scas
xor
fimuls
addr16
and
mulb
jecxz
or
or
sbb
dec
into
xchg
shl
pushf
add
call
cmp
cld
jns
sarl
cmc
arpl
push
xor
add
lods
mov
call
push
ficompl
pop
mov
int
push
nop
fcmovnb
dec
jl
pop
mov
xchg
sbb
cs
mov
dec
in
mov
sub
insb
rcrb
push
xchg
adc
loopne
dec
pop
lret
into
arpl
add
xchg
stc
jmp
fstp
add
cmpb
inc
outsb
enter
fldenv
sub
cmpsl
pop
mov
rolb
jle
arpl
pop
ret
mov
cmc
lods
push
xor
mov
jmp
mov
aaa
insb
out
test
add
or
add
cwtl
aas
jge
pusha
outsb
add
pop
sub
fdivl
inc
sti
imul
ficoms
dec
mov
fisubrl
xor
cli
xor
movsl
aam
cmp
lock
mov
out
ret
mov
add
lods
pop
icebp
sar
xchg
adc
std
jns
push
pop
and
push
xor
dec
addr16
jl
in
push
test
jecxz
aad
add
stos
add
push
out
sbb
add
ret
fisubrl
pop
pop
mov
shrl
xchg
add
lods
jne
pop
ja
xchg
out
xlat
iret
test
or
gs
jmp
jecxz
cmp
fnstsw
mov
fidivl
push
cld
add
decb
cmpl
adc
fstpl
add
push
xchg
fisubs
add
cmp
mov
inc
dec
push
jmp
addb
or
mov
cmc
leave
out
ss
loopne
out
das
add
push
addl
dec
jecxz
rorl
xor
sub
cmc
sahf
ds
push
jbe
pop
mov
xchg
and
lods
jle
insb
add
sbb
add
sbb
fwait
movsb
mov
loopne
jbe
mov
lods
jp
push
in
sbb
add
bnd
add
mov
sbb
mov
pop
inc
imul
jecxz
outsb
pop
add
cmp
mov
cwtl
call
fsubr
jae
mov
add
adc
rcll
xchg
add
cmc
lret
loop
adc
bound
jp
ds
sbb
push
ss
push
sbb
pop
jge
add
into
pop
mov
push
dec
mov
add
xchg
dec
pop
sub
in
cmp
mov
push
jbe
pusha
movsb
pop
inc
ret
and
sbb
mov
sahf
aas
jns
pop
rolb
aam
xor
dec
call
lds
fisttpl
gs
pusha
push
and
and
cs
jne
pop
mov
and
nop
inc
popf
sbb
mov
dec
lcall
aaa
outsl
into
out
mov
xor
cmpsb
xlat
push
mov
mov
sbb
inc
jnp
mov
add
mov
je
add
fisttpl
sbb
pop
sbb
leave
add
mov
pop
sub
or
and
mov
mov
adc
and
xor
leave
pop
mov
dec
inc
add
cmpsb
lock
or
or
add
cmpsb
movsb
aaa
add
imul
add
mov
mov
pusha
dec
inc
loopne
jae
adc
sbb
or
fcmovnb
add
push
jecxz
xor
and
or
jb
mov
enter
iret
add
pop
ret
popa
sahf
in
loopne
jecxz
les
leave
outsl
jae
xlat
mov
adc
mov
lea
scas
add
xor
cwtl
stos
dec
sahf
test
test
aas
adc
fisttpll
push
push
add
stc
jg
fstpt
adc
sahf
insb
inc
out
adc
xor
add
dec
not
add
das
icebp
cmp
out
push
mov
mov
stc
add
jl
sub
mov
ret
sbb
xchg
and
mov
mov
imul
div
in
cmp
mov
jmp
adc
mov
dec
xor
sbb
stos
xchg
lds
jg,pn
mov
add
dec
and
lods
movsl
ljmp
leave
inc
sbb
ret
push
lahf
mov
adc
sbb
loopne
push
fldl
sbb
das
dec
pop
add
pop
ds
test
int3
nop
cmp
test
mov
push
in
jmp
inc
inc
mov
push
or
mov
leave
sbbl
xchg
add
decl
adc
cmpsl
jae
nop
adc
mov
sbb
je
aaa
sbb
mov
add
push
mov
mov
mov
loop
adc
les
out
jnp
sub
pop
ds
sub
mov
loope
dec
enter
mov
loopne
or
push
and
mov
sub
out
pop
pusha
gs
mov
loope
mov
or
or
add
push
and
sbb
test
add
mov
hlt
add
jbe
sbb
sub
les
cmp
sub
fistps
pop
add
inc
scas
adcl
ja
add
add
pop
fwait
out
aad
les
and
push
or
xchg
outsb
xor
and
add
push
imul
out
mov
cld
fimuls
cmp
push
adc
mov
xor
addb
or
std
add
icebp
jns
adc
pop
mov
cs
loopne
outsl
push
xlat
outsb
adc
dec
sub
push
enter
inc
fimuls
xor
mov
jno
push
cmp
out
sbb
lock
fwait
cmp
mov
push
out
push
push
pop
outsl
insl
cld
add
xor
add
bound
pusha
inc
mov
push
shrb
jecxz
outsb
fcoml
aad
dec
and
ret
mov
in
mov
add
add
mov
pop
and
xor
fsts
loope
jge
xchg
cmp
add
gs
or
push
push
aas
add
mov
loopne
cmp
test
xchg
add
mov
add
sub
add
stos
pop
fwait
shll
add
push
mov
add
lods
push
addr16
add
mov
and
es
pop
and
mov
fcompl
push
sti
sub
pushf
add
mov
stc
cs
subl
push
dec
popf
ja
lret
inc
sahf
or
out
push
gs
lock
cmp
sti
mov
popa
lods
mov
adc
lret
jl
mov
out
push
cmp
cmp
adc
aas
cli
and
js
subb
pop
sbb
lahf
pop
fldl
stos
jge
fisubs
aam
add
int3
fxam
aas
movsl
mov
sahf
dec
mov
or
out
lret
adc
popa
aaa
sarb
shlb
xchg
xor
loope
movl
pop
sbb
cmpsl
add
push
jnp
out
in
rorl
inc
fs
inc
icebp
add
in
rcrb
adc
mov
sub
out
pop
inc
sbb
xor
filds
addr16
add
mov
sbb
mov
into
scas
imul
lret
xor
sbb
add
in
mov
pop
stos
cmpsl
cmp
and
cltd
push
lea
inc
and
sbb
or
mov
das
adc
jmp
adc
stos
sbbl
add
into
pop
inc
mov
cmp
or
rolb
push
sti
shlb
add
xchg
sbb
add
xchg
dec
int3
adc
inc
or
sub
add
and
ficomps
xchg
xchg
out
cmp
outsb
fimuls
fldcw
enter
add
cmp
push
roll
cmp
movsl
fdivs
aad
testb
shlb
push
shrb
add
pushf
cs
pop
add
jne
cmc
sbb
mov
mov
outsb
repnz
adc
or
ss
mov
call
pop
sti
fsubrs
sbb
shrl
lret
outsl
add
cli
inc
jecxz
push
pop
daa
mov
adc
mul
pusha
lahf
xchg
jae
mov
add
pop
mov
push
out
ja
add
dec
lea
xlat
ret
push
pusha
push
fisubrl
jge
insl
jae
and
cwtl
jmp
add
xchg
pop
pop
aam
adc
imul
add
or
and
ja
add
fdiv
mov
add
packsswb
hlt
add
mov
mov
clc
lcall
cmp
adc
jne
cld
js
out
sub
pop
lahf
jl
aaa
add
cmp
lods
sub
sub
outsb
cli
jle
imul
mov
xor
mov
out
mov
ret
pushf
test
jnp
add
add
divb
mov
sub
adc
out
popf
js
push
fdivs
push
cltd
ficoms
xchg
and
cmp
adc
dec
cmp
add
aas
jp
cli
jns
adc
xchg
dec
shr
add
sbb
jne
sbb
jbe
sbb
addl
into
xor
or
jecxz
add
aaa
pop
je
adc
mov
notl
jp
imul
add
iret
loope
add
push
sarb
cmp
add
push
in
shlb
adc
sbb
xor
movsl
repz
fldcw
ret
and
mov
pusha
in
data16
jle
add
ror
inc
lds
add
aaa
stos
mov
ret
push
sbb
cltd
rcrl
mov
iret
xchg
loop
insb
dec
and
inc
cmp
les
pusha
and
lcall
imul
lods
sti
add
add
js
mov
and
stc
sbb
fmull
push
repz
jb
movsl
mov
fwait
lahf
nop
test
cmp
dec
cmpsb
leave
stos
jecxz
push
ss
loope
lods
mov
mov
push
mov
loopne
bound
push
data16
loop
adc
faddl
orl
lds
push
add
and
testb
mov
dec
fsin
mov
jns
xorb
inc
clc
enter
ljmp
mov
mov
add
push
ret
cwtl
sbb
pop
lahf
fisttpll
and
inc
push
rorl
dec
mov
filds
pop
ds
jl
out
sbb
add
mov
lods
and
cmp
pop
imul
stos
and
sbbl
jae
sbb
mov
divl
fisubrl
in
out
stos
les
sbb
xor
and
push
movsl
out
sbb
lock
sbb
sbb
cmp
iret
sub
pushf
imul
push
cmp
je
mov
jnp
lret
mov
iret
cmpsl
mov
sbb
push
scas
mov
inc
add
jl
roll
lock
sti
fcompl
inc
rorl
movsb
fldl
jno
addr16
add
mov
add
stos
mov
xchg
arpl
bound
jecxz
add
xor
sbb
mov
mov
les
shll
sahf
ret
aad
add
ljmp
movsb
add
subb
and
je
adc
mov
add
jo
and
addl
add
sbb
add
ret
add
mov
fcmovu
inc
scas
mov
lcall
push
or
rolb
push
pop
and
stc
stos
outsl
pop
lods
out
push
adc
outsb
push
adc
xlat
sub
xchg
ja
sbb
inc
cmp
dec
call
xchg
and
mov
push
jp
and
mov
lahf
add
sub
mov
dec
aaa
fsubrs
add
fbld
cmpsl
xchg
in
push
je
cmp
or
push
and
jecxz
insb
or
testb
pusha
nop
iret
fs
sub
cmpsb
shll
cmpsl
mov
icebp
fisttpl
sub
loope
das
std
dec
out
or
iret
add
push
sbb
cmp
pop
test
add
xor
xchg
sub
lahf
add
add
mov
add
pop
dec
sbb
pop
xchg
add
js
ss
jne
and
jl
push
jmp
or
loope
mov
rcll
push
hlt
or
stos
dec
addl
adc
mov
inc
pop
out
xor
and
pushl
insl
test
inc
xchg
movsb
stc
jnp
push
adc
mov
adc
mov
push
pushf
or
mov
sahf
sub
or
pop
add
fsubrs
add
shll
cwtl
add
xor
ret
mov
data16
fsubrl
push
loopne
mov
pop
pusha
sub
sbb
push
mov
out
add
icebp
scas
sbb
xchg
lahf
loope
dec
jae
push
ljmp
movsl
inc
xor
jecxz
mov
jmp
jbe
xor
and
xchg
push
pop
or
dec
aad
ror
xchg
jne
push
jo
inc
lds
ret
inc
mov
or
fnop
mov
add
mov
pop
add
out
pop
int3
xchg
or
movsb
insl
dec
sbb
iret
mov
ret
sbb
ficomps
shll
pop
pop
sbb
imul
rcrb
and
rolb
pop
adc
mov
mov
dec
sahf
fcompl
sbb
jmp
pop
rolb
in
fisubrs
push
inc
aaa
movsb
add
xchg
jae
sub
sbb
mov
int3
push
jg
pop
adc
mov
es
popa
loopne
idivb
test
adc
jge
sahf
cmpsl
xchg
add
arpl
movsl
push
fildl
and
lea
push
cld
push
repnz
cmp
mov
fwait
xor
dec
mov
das
pop
cmc
pop
leave
sub
pop
ret
inc
xchg
push
dec
push
leave
loop
pop
add
or
push
inc
lock
arpl
je
add
mov
sub
pop
mov
sub
cmp
pop
or
jl
sub
inc
imul
mov
nop
sbb
lods
add
leave
insb
inc
pop
addl
sub
dec
ret
jns
inc
adc
pusha
aas
cmp
subl
push
adc
xchg
mov
or
dec
dec
mov
lret
cs
jge
jmp
lock
ret
sbb
sub
test
imul
mov
fildl
lds
cmp
aad
inc
loope
lahf
mov
scas
call
add
loopne
add
icebp
fwait
add
sub
push
add
mov
mov
and
stos
add
cmpsl
mov
inc
inc
add
fmuls
mov
lret
sub
aam
stc
and
hlt
add
push
jle
pop
outsb
sbb
xor
shrl
sbb
push
leave
cmpsl
jg
adc
xchg
out
in
and
or
or
fidivs
out
lret
roll
adc
scas
mov
std
mov
dec
filds
add
cmp
mov
leave
add
xor
shr
add
add
scas
bound
movsb
mov
cmp
add
mov
lods
pop
push
lcall
out
aad
int3
sub
testl
and
jne
dec
and
jno
mov
add
push
fdivs
pop
jbe
stos
pop
ret
add
mov
add
cmp
std
add
mov
bound
enter
and
sbbl
push
call
push
add
cwtl
cmp
loop
in
pop
add
popa
stc
mov
xchg
leave
adc
mov
inc
rolb
test
test
mov
jo
fwait
out
mov
add
notb
in
pop
data16
mov
ja
ffree
cmp
or
add
fmull
jno
movsb
in
fwait
sti
arpl
add
jge
imul
ja
les
imul
add
filds
insl
sbb
addl
ficoml
add
and
test
lea
xor
cwtl
in
sbb
mov
stos
add
jg
lret
popf
jmp
inc
xchg
daa
int3
dec
inc
mov
adc
inc
jns
inc
popl
leave
cmc
cmpsb
mov
jmp
adc
jae
je
jo
adc
adc
test
push
into
and
push
add
in
loopne
dec
pop
pusha
sti
push
lret
add
or
pop
pop
pop
scas
and
in
lret
add
iret
loope
pop
int
add
ja
daa
filds
fs
pop
ret
push
jp
fdivs
outsb
popa
pop
int
push
and
lea
sbb
fs
add
lret
or
add
inc
add
adcb
fisubl
pop
mov
jns
cmp
add
push
lock
add
sub
jb
push
cmp
test
sbb
sbbl
ret
mov
aam
inc
mov
mov
xorb
in
adc
xchg
inc
add
inc
pop
lock
jecxz
in
testl
add
or
and
outsl
int
mov
pop
push
ret
adc
mov
bound
das
push
add
mov
and
mov
jle
rep
lahf
mov
loopne
xchg
cmp
add
mov
test
pop
mov
sbbb
mov
adc
add
adc
jle
popa
rcll
xor
sbb
jl
or
dec
loop
add
stos
loopne
or
arpl
popa
pop
out
lahf
jne
data16
sbb
iret
jmp
jecxz
in
andb
jo
xchg
ss
mov
add
insb
sub
or
jl
add
xor
out
les
in
push
add
lds
add
add
jne
gs
in
add
xor
roll
dec
jns
leave
or
add
push
adc
and
add
into
das
xor
aas
sbb
jl
cmc
out
std
aaa
add
jo
add
in
jmp
daa
adc
add
push
xlat
and
insb
dec
xchg
cmpsb
cmp
jne
repz
ficomps
add
sahf
in
loope
adc
lods
add
cmp
pop
add
sbb
pop
jecxz
aam
add
and
cltd
sbb
lea
jo
xchg
fwait
adc
mov
aam
and
test
mov
push
cs
stc
jo
inc
loopne
lock
push
pop
sbb
dec
fistpll
adc
sbb
lret
fistl
in
cmp
out
sbb
ds
ret
lea
jge
adc
aaa
lret
add
fcoms
inc
popa
add
clc
xor
rcl
push
mov
mov
and
adc
jns
stos
jo
lret
aad
adc
and
mov
loope
mov
aaa
mov
cmp
push
add
sbb
mov
jbe
inc
pop
rorb
mov
lahf
fiadds
adc
jp
or
loope
inc
add
mov
and
test
mov
add
fwait
gs
loope
pop
sbbl
add
sti
mov
inc
jmp
mov
inc
add
pop
insb
pop
xor
into
push
negb
ss
lcall
mov
or
dec
lods
aam
jne
or
add
and
sbb
mov
dec
dec
sar
shlb
or
jmp
add
lods
mov
add
dec
lahf
daa
shll
dec
xlat
add
roll
inc
cmp
sbb
add
inc
cmp
pop
add
shlb
xorl
push
pop
stc
add
jae
faddl
pop
cmpsb
add
popf
lock
in
icebp
fcos
jne
adc
pop
pop
or
jl
pusha
pop
and
sbb
cmpsl
cmp
push
js
mov
pushf
jge
xchg
xor
add
leave
xchg
and
cmp
out
loopne
test
inc
out
sbb
pushfw
or
lcall
loope,pn
je
sbb
xor
sub
mov
shll
sbb
xchg
mov
add
and
lods
sub
mov
arpl
pop
adc
es
div
sub
xchg
ss
xchg
add
xor
add
fcoms
popf
out
and
mov
xchg
int
xchg
arpl
mov
pop
cltd
add
repnz
aas
dec
inc
aad
add
mov
or
pop
lds
mov
xor
add
stc
ss
push
lret
add
rorb
std
sbb
mov
xor
add
mov
ret
xchg
cmp
jo
lods
hlt
daa
div
shll
mov
pop
test
xchg
jge
sub
jno
push
xchg
jnp
push
adc
pop
enter
xor
dec
pop
mov
std
mov
xchg
rcll
inc
loopne
into
ds
inc
lcall
js
sbb
adc
add
xor
aaa
inc
mov
out
int
jmp
lahf
push
pop
jl
ljmp
scas
xor
rcll
ja
in
in
add
add
adc
std
jg
add
daa
pop
ja
notl
int3
sub
cmc
xor
sar
mov
cmp
cmp
and
sahf
mov
mov
outsb
pop
movsl
pusha
xor
ljmp
fiadds
xor
dec
icebp
dec
cmp
push
push
pop
fwait
add
imul
adc
xor
xor
icebp
add
pop
inc
add
or
loope
jns
dec
lock
test
dec
cmp
adc
js
jmp
xchg
fimuls
dec
test
cmp
inc
punpcklbw
sbb
inc
imul
xor
mov
add
push
mov
insb
mov
mov
vmread
and
daa
xor
and
cmp
sbb
dec
outsb
sub
lret
add
stos
pop
jl
xchg
ss
idivb
iret
popf
fldl
in
push
and
add
cmp
push
pushf
adc
xor
clc
and
add
hlt
add
cwtl
or
aaa
jmp
and
pusha
subb
rorl
stos
lea
add
sbbl
sub
or
sbb
aad
test
pushf
add
xchg
adcl
fists
movsl
add
add
ds
inc
cli
addr16
les
ljmp
lcall
mov
push
adc
mov
xchg
and
iret
nop
inc
pop
das
pop
loop
sub
mov
add
dec
scas
loop
rclb
sbb
es
aad
js
das
mov
loopne
and
movsl
push
push
sub
xchg
imul
add
adc
in
dec
aam
pop
daa
mov
push
arpl
lds
mov
imul
or
and
mov
mov
addl
scas
add
fcom
adc
jmp
mov
mov
jle
inc
mov
add
pusha
dec
add
dec
sub
adc
add
andb
adc
sbb
and
int
loop
add
sbb
aas
hlt
push
sub
shll
outsb
inc
das
nop
cs
and
add
lret
icebp
rolb
cltd
mov
pop
scas
and
add
test
inc
add
shlb
out
inc
outsb
push
iret
inc
jge
sbb
jg
add
mov
xchg
or
mov
pop
add
pusha
outsb
fwait
inc
addl
subb
addr16
outsl
add
pop
ja
fisttps
iret
add
sti
js
outsb
out
mov
push
jb
add
cmp
inc
pop
aas
cmpsb
loopne
call
add
xchg
and
sub
dec
lahf
dec
fsubp
add
outsb
pop
push
jp
push
add
ljmp
push
scas
aad
jae
cmc
add
cmp
roll
or
lcall
inc
add
stc
adc
cmpsl
xlat
insb
and
lret
xchg
andb
jbe
jo
pop
repz
je
les
rclb
out
lods
adc
aaa
outsl
push
lret
cmpsl
ret
cltd
pusha
xchg
mov
nop
daa
xchg
jp
inc
adc
shrl
mov
stos
pushf
xchg
mov
jg
add
fidivl
push
cwtl
adc
mov
fldt
dec
dec
add
mov
and
adc
sbb
lahf
fmul
fsubp
cmc
adc
jg
xchg
push
push
inc
inc
fldl
sahf
and
or
shll
mov
lods
in
sti
jecxz
sbb
scas
cmc
add
inc
mov
jl
sti
xor
xchg
push
mov
mov
leave
ljmp
subl
mov
mov
add
lds
and
fbstp
cmpsb
inc
ds
adc
add
sub
pop
shl
lods
jle
loopne
subb
add
int3
mov
outsb
aad
adc
inc
sahf
pusha
add
rcll
add
pop
repnz
xor
shll
xor
stos
in
pop
push
cmp
iret
mov
xor
jae
cmc
add
aaa
lods
push
adc
ljmp
int
sbb
adc
and
jb
xchg
or
ds
mov
loop
inc
add
insb
rol
xchg
mov
sti
lods
pop
gs
loope
sub
sub
pop
in
xor
dec
lods
or
xchg
add
push
sub
cmpsl
jne
fildl
pop
xor
loop
clc
daa
jle
scas
mov
sub
mov
pop
xchg
clc
fs
outsl
into
out
jg
lahf
popf
mov
sbb
hlt
and
xchg
cmp
mov
sbb
sub
pop
or
add
sub
mov
sahf
mov
inc
into
nop
outsl
xor
push
pop
inc
loope
push
pop
jbe
in
roll
jo
mov
adc
and
xor
push
bound
rcrl
inc
test
es
mov
sahf
jne
fwait
ja
scas
mov
push
int
bound
inc
push
insb
inc
sub
add
cmpsb
lret
sub
fsubr
out
shlb
sbb
add
xchg
pop
repz
mov
andb
mov
iret
mov
int3
fcompl
adc
std
push
aas
mov
pop
fsts
push
mov
inc
clc
daa
stos
mov
pusha
lock
sbb
pop
and
cs
push
jbe
adc
data16
push
outsb
cltd
cmp
insl
mov
inc
push
push
cmpsl
fdivrl
pusha
outsl
mov
icebp
jge
xchg
mov
std
add
sbb
insb
lea
push
out
mov
mov
fs
and
mov
je
repz
insl
popa
xchg
sub
pop
iret
movsl
mov
pusha
leave
cltd
pop
mov
fidivs
aad
and
in
xchg
loopne
add
cmp
push
add
push
mov
jge
js
jo
test
andl
mov
hlt
adc
xor
xchg
inc
pop
mov
mov
ret
mov
mov
insl
pop
mov
ljmp
mov
fwait
add
or
movsb
push
inc
sbb
add
pushf
daa
cmp
in
inc
xorl
jle
or
clts
cmc
int
sbb
add
mov
das
lods
bound
or
push
or
mov
inc
rcrl
sbb
mov
xor
ret
jb
adc
sbbl
ficompl
xorb
jnp
ja
outsl
dec
xchg
movsl
mov
add
dec
aam
jb
test
roll
or
pop
xor
add
cwtl
jne
add
jbe
test
shl
stc
fdivrl
inc
leave
hlt
jecxz
sub
jmp
add
cmpsb
push
pop
adcb
gs
mul
xchg
lea
imul
dec
lahf
dec
or
and
push
mov
cmc
xor
mov
add
xchg
bound
mov
push
add
mov
and
and
xadd
add
loope
pop
cmp
adc
daa
gs
sub
outsl
fcmovb
sub
add
mov
sub
movsl
mov
mov
pop
push
lock
push
push
mov
jge
cwtl
jle
xchg
test
insb
pop
add
adc
adcb
and
mov
sbb
fisubrl
jnp
sbb
xchg
mov
cmpsb
push
jp
add
jbe
fstpl
je
out
scas
rcrl
sub
jmp
pusha
xchg
push
mov
testb
cmp
jl
lret
mov
dec
or
sbb
cld
add
xchg
inc
sahf
mov
pop
jno
mov
fsubrs
out
fcoml
data16
xchg
add
mov
adc
es
iret
ja
lock
mov
add
mov
xor
add
ss
mov
scas
inc
add
dec
je
mov
inc
mov
int3
test
nop
imul
das
pop
mov
and
mov
cld
in
dec
or
jle
adc
mov
dec
imul
jge
sbb
or
pusha
sti
int
sub
xor
cld
test
push
fildll
add
and
jb
test
mov
stos
ja
add
sbb
repz
add
pop
or
mov
fcomp
sub
mov
xor
adc
push
xlat
or
pop
fs
cmpsb
add
cmp
sub
sub
rorl
insb
lahf
lret
stos
lahf
add
orb
jo
mov
or
dec
pop
mov
pusha
push
jae
es
adc
add
mov
xchg
jns
imul
push
add
nop
xchg
mov
mov
sahf
cmp
loope
roll
xchg
xor
icebp
add
add
adcl
add
dec
mov
fucomip
lea
scas
add
fdiv
jnp
sbb
push
mov
mov
ret
popl
push
sbb
adc
dec
or
std
dec
jecxz
pusha
cltd
push
xor
cmp
sbb
mov
add
pop
cmp
jo
ret
ljmp
dec
and
pusha
fdivrl
sbb
pusha
dec
xchg
shr
das
dec
mov
repz
lock
or
mov
xchg
imul
jp
movsl
push
cmp
xchg
addl
push
pop
cs
sub
add
add
daa
inc
int
sbb
add
aad
scas
ret
sub
xchg
fistl
and
add
pushf
sarl
pop
mov
pop
inc
dec
daa
in
xchg
mov
int
cmpl
xchg
jmp
ja
xchg
shrb
pushf
add
mov
jo
loopne
dec
scas
or
adc
jne
fadds
cld
insb
cmp
sbbl
pop
and
mov
mov
cmp
roll
push
lds
cltd
push
xchg
stc
add
arpl
das
in
nop
and
ror
movsb
rorl
sbb
or
xchg
arpl
bound
pop
jns
and
add
lock
and
mov
inc
mov
leave
add
scas
push
cmpsb
add
fdiv
sbb
adc
sbb
mov
arpl
mov
xchg
stos
fcompl
mov
loopne
adc
mov
out
or
push
dec
fdivr
add
xor
mov
fwait
mov
add
mov
movsb
dec
add
cwtl
scas
mov
and
sub
adc
mov
inc
mov
or
sbb
lock
rclb
push
cs
in
add
test
jge
sbb
add
into
cmpsl
negb
shll
mov
std
shrb
add
cmp
negb
lret
fnstcw
mov
iret
pushf
add
inc
inc
jp
push
xor
scas
mov
mov
add
fbstp
jge
jl
mov
sbb
or
adc
sbbb
sub
mov
pop
jmp
mov
pop
inc
jbe
dec
adc
or
loope
mov
rorl
dec
pop
add
shl
adc
add
jg
int3
mov
jp
jp
lar
dec
sbb
loop
int
adc
add
pop
shl
push
cltd
add
test
outsl
cmp
icebp
sarb
add
gs
outsl
jo
jg
ret
xor
adc
add
sbb
and
pusha
pop
in
push
loope
push
mov
jp
jecxz
push
mov
mov
hlt
shll
add
mov
ret
lahf
cwtl
inc
pop
test
out
addr16
or
cli
mov
insb
roll
mov
cs
add
cmpsb
or
xor
pop
dec
insb
mov
movb
xchg
pop
xor
shrb
cmpsb
sti
std
loop
push
jne
outsl
add
push
pop
inc
cmpsl
arpl
sub
bound
add
imul
lea
mov
aad
sub
dec
and
and
enter
add
push
or
or
and
iret
jge
sbb
mov
aas
add
movsb
lock
imul
mov
mov
cld
mov
jecxz
cmpsb
fs
push
movb
sbb
data16
cs
adc
ja
fcmove
cmp
movsb
add
pop
add
imul
add
sbb
and
lahf
pop
pushf
xchg
mov
sbb
jecxz
push
add
dec
pop
xor
es
add
adc
add
test
add
dec
jmp
lea
incl
sbbl
lret
mov
stos
inc
imul
fsubs
adc
and
mov
add
pop
and
loopne
in
orb
popl
lock
test
push
adc
dec
and
loopne
mov
pusha
inc
sbb
out
in
add
jecxz
adc
inc
daa
sub
movb
addr16
fldl
jae
std
sbb
fcomi
add
lahf
xchg
add
cmpb
cmp
std
test
nop
cld
rcll
inc
mov
cmp
ss
out
mov
add
push
or
in
sub
sahf
jmp
test
mov
and
hlt
fdivrp
inc
fs
mov
dec
mov
inc
lret
cs
add
nop
mov
adc
ret
fistl
cmp
scas
in
sbb
sbb
dec
test
mov
clc
mov
stos
mov
cltd
js
mov
sbb
cs
out
scas
incl
lret
fstp
add
cmp
and
sub
int3
sbb
pushf
out
fs
lock
scas
jns
mov
jno
imul
dec
jmp
clc
inc
loopne
fsub
std
cmpsl
and
js
je
out
ret
sbb
pop
jl
pop
mov
pop
bound
test
testl
fisttpl
add
or
add
mov
sti
or
inc
stos
dec
mov
jmp
adc
lret
hlt
jb
xchg
or
pusha
jo
or
sti
sbb
sbb
mov
sub
inc
stos
rcrl
orb
xor
adc
dec
dec
rcl
sbb
iret
pushf
loope
ret
adc
push
lahf
leave
insb
add
and
andb
orb
mov
ficoms
mov
push
mov
add
sbb
pusha
xor
add
cld
lret
jmp
add
sub
or
add
mov
sbb
out
jne
xchg
adc
fwait
out
inc
fwait
pop
wrmsr
cmp
cmpsl
cltd
pop
add
imull
add
in
enter
add
adc
add
sbb
and
sarb
aam
inc
push
loopne
cmp
in
or
insl
fnstcw
repnz
dec
movl
xchg
add
jg
je
int3
mov
jb
sarl
pop
add
sub
sbb
add
popa
mov
decl
mov
aam
mov
orb
aas
xchg
pop
popa
fcomps
jmp
dec
cmp
cmpsb
sbb
lahf
lds
sbb
pop
cmpsl
popa
daa
xchg
adc
int3
mov
jne
std
add
sbb
movsl
shr
inc
pop
adc
in
cmp
clc
mov
shl
cmp
cwtl
mov
int3
out
das
cmp
rcll
xor
fcomi
jle
push
cmpl
inc
into
mov
add
add
ret
test
into
xchg
movsb
cs
adc
les
clc
and
xor
add
movsb
push
xchg
cmpsb
dec
lea
js
sub
jnp
lret
sbb
xor
aad
in
and
mov
mov
sub
fadds
push
out
cwtl
fldt
gs
fnstsw
add
add
jmp
add
push
pop
add
rol
sahf
rcrl
mov
fmull
fnstcw
jb
pusha
mov
xchg
adc
lcall
nop
imul
mov
or
sbb
js
fwait
lahf
adcb
cmp
popf
into
add
mov
aad
jns
xor
repnz
add
sub
popf
mov
add
push
push
add
add
repnz
inc
and
bound
mov
jns
icebp
rcrl
xlat
adc
mov
mov
pop
mov
adc
daa
inc
jge
rorb
sub
addl
push
cmp
add
bound
xchg
sahf
ficomps
jg
call
rolb
xchg
add
pop
mov
adc
imul
repz
mov
cmpsb
aas
add
cmp
add
in
and
jmp
cmp
push
cld
cli
loopne
inc
mov
rol
fiadds
add
mov
sti
cmp
add
push
loopne
sbbl
sbb
mov
mov
shll
cmp
pop
sbb
negb
stos
mov
jmp
hlt
adc
stc
jmp
xchg
add
jecxz
and
imul
jge
mov
xor
loope
out
and
jecxz
bnd
add
fstpl
inc
xor
pop
jae
jmp
pop
inc
mov
ja
test
pusha
fcmovnb
cld
out
mov
mov
jno
push
mov
dec
loopne
loop
add
mov
pop
iret
mov
roll
jns
dec
sub
or
js
ds
or
call
imul
loope
das
adc
xor
addr16
xlat
insl
inc
xor
ja
int
aad
pop
xchg
add
fidivs
es
xchg
loopne
addb
sbb
sub
lcall
and
test
ffree
and
adc
lds
ljmp
and
addr16
or
push
sbb
sbb
in
xchg
bound
ds
flds
fbstp
xor
add
add
sbb
repz
rol
mov
ss
xor
push
mov
add
xchg
add
sbb
daa
adc
add
rcrl
sub
lret
sub
mov
add
rcll
arpl
jle
add
inc
sbb
insl
adc
jmp
out
mov
movsl
jmp
enter
mov
fnstsw
mov
add
into
scas
xlat
dec
jle
add
sub
lcall
daa
push
pop
add
insl
int
bound
jb
add
inc
add
es
pusha
or
cltd
fisttpll
and
mov
scas
adc
push
add
iret
xor
add
adc
push
or
lcall
pop
mov
jbe
push
cwtl
cmp
rorl
adc
clc
add
gs
int3
jge
testl
hlt
imul
popa
xchg
xor
mov
add
pop
test
imul
mov
inc
add
out
ret
sbb
mov
pop
push
add
scas
mov
push
out
add
push
mov
mov
add
in
pop
jnp
in
out
inc
jne
xchg
cmpl
push
pop
add
and
add
popf
xchg
add
jb
data16
add
ds
lcall
xor
xor
imulb
scas
loope
inc
jnp
lds
fmuls
mov
xor
gs
sbb
xchg
mov
stos
sub
add
test
xor
push
lahf
jmp
ret
cld
sbb
loopne
add
fisubl
loop
fldcw
stc
test
mov
pop
pop
outsl
imul
sbb
movsl
mov
add
mov
scas
xor
stos
adc
and
inc
jecxz
or
jp
jge
add
les
insb
shlb
inc
sbb
mov
mov
mov
and
or
add
jno
sub
cltd
loopne
outsl
cmc
push
inc
rorl
cmp
mov
jno
ret
dec
and
dec
xchg
std
add
pop
daa
movsb
rolb
lret
dec
mov
daa
pusha
sbb
and
push
sbb
test
mov
pop
ret
mov
mov
aaa
mov
adc
xor
cltd
add
outsb
faddl
add
js
popa
jecxz
mov
nop
insb
aad
loopne
mov
sub
mov
loop
loopne
lods
jo
clc
add
sub
loope
inc
les
adc
sbb
push
negb
or
push
inc
inc
or
enter
imul
movb
loopne
sbb
gs
dec
mov
stc
pop
fisubrs
adc
les
rcll
fnstenv
or
imul
mov
mov
dec
dec
mov
insl
test
aas
dec
push
addl
addr16
loop
pop
mov
sub
lods
jo
sub
inc
add
pop
pop
add
mov
leave
add
aaa
shlb
cmp
jle
push
lock
pop
enter
add
das
mov
data16
sbb
mov
lea
fadd
and
sbb
and
xchg
mov
cmp
push
data16
into
inc
insl
mov
cmp
push
movsb
fdivr
ret
add
in
push
daa
dec
add
jo
fsubrl
mov
in
dec
pop
out
add
xchg
loop
mov
addb
lcall
inc
xor
jl
andl
jp
push
lock
dec
or
pop
call
mov
push
in
dec
out
inc
mov
add
orb
jmp
sbb
aas
pushf
sub
je
aad
push
pusha
xchg
mov
pop
fldz
and
or
jae
cmp
lcall
mov
cmp
inc
lea
add
rcrl
loope
mov
repz
add
lret
xchg
mov
ret
lahf
mov
push
addl
dec
pop
movswl
jp
push
and
enter
or
mov
fadds
add
sbb
popf
add
lcall
jbe
sbbb
fs
adc
lret
add
pop
and
add
enter
cmp
imul
mov
lret
or
div
fstl
adcb
push
sub
out
fisubs
pop
sar
lods
fadds
in
jmp
inc
pusha
test
xor
adc
add
xchg
add
lods
gs
jecxz
mov
mov
add
and
pop
pushf
lods
xor
lods
leave
repz
fadd
mov
out
aad
cltd
cmpsb
add
and
fwait
jnp
dec
push
repz
testl
pop
cmp
ds
ret
xor
jge
mov
mov
fcmovb
sbb
xor
in
enter
dec
divb
push
jbe
loope
in
pop
jno
push
rcrb
xchg
push
add
das
sahf
jp
mul
pop
scas
jecxz
add
orl
lea
mov
cmp
movsb
cmpsl
jb
mov
aam
cmp
inc
adc
mov
cmpsb
xor
ja
or
lods
in
mov
clc
mov
xor
repz
lret
sbb
adc
adc
and
jb
add
ficoml
shr
push
sub
add
sbb
and
pop
mov
sahf
out
pushf
lcall
sub
cmp
dec
jle
mov
add
movsl
mov
dec
push
add
ja
out
std
sahf
ljmp
data16
mov
mov
sbb
loope
jnp
add
fcoml
std
roll
mov
adc
push
add
sbb
xchg
pop
les
call
imul
cld
mov
sbb
push
and
xchg
out
jmp
add
cmc
mov
jno
xor
mov
pop
lcall
rclb
adc
cmp
add
inc
adc
fcoml
jns
push
xchg
cmp
outsb
fimull
add
xorb
cmp
das
ret
mov
or
add
repnz
push
fwait
imul
cld
xchg
sub
mov
gs
sbb
and
add
mov
rcl
test
inc
leave
add
adc
inc
roll
sub
push
xor
pushf
pop
clc
fiaddl
jae
test
add
xchg
test
or
cld
mov
push
add
js
insl
mov
repz
int3
or
jns
mov
icebp
inc
stc
mov
bound
loope
addr16
in
and
push
xorb
add
in
sbb
and
jb
and
sbb
add
stos
sbb
loopne
xor
mov
add
flds
xchg
adc
dec
js
xchg
in
invd
sbb
push
mov
add
stos
inc
popa
imul
mov
cmpsb
test
pop
xchg
inc
adc
aas
pushf
add
ret
jmp
sub
jl
push
cmp
sbb
add
and
add
ss
dec
orb
add
mov
add
rcll
xchg
jb
clc
repz
cwtl
mov
cmp
loope
sub
das
cld
push
dec
push
adc
ss
popf
dec
sub
add
pusha
cmc
loopne
inc
addr16
push
sti
cmp
pop
mov
shrl
out
add
es
rorb
std
movl
lret
mov
adc
add
inc
mov
out
pusha
and
pop
pop
movsb
mov
popa
sbb
add
out
pop
std
sbb
in
inc
push
fwait
mulb
mov
lret
add
add
mov
jmp
sbb
lea
mov
rcr
mov
and
sub
pop
jo
sbb
add
mov
cmp
sub
cmpsl
ss
rclb
add
push
or
add
lds
inc
push
leave
cli
into
add
or
aad
jg
cmp
push
dec
sbb
rorl
and
subb
push
dec
aas
push
imul
mov
mov
xor
push
lea
or
mov
add
xor
dec
clc
push
in
xchg
add
pop
call
aaa
inc
cmp
loop
loop
add
ljmp
add
ds
daa
add
mov
popl
mov
loope
out
mov
jb
sbb
pop
test
cli
adc
add
or
mov
sbbl
sub
add
or
inc
loope
dec
ret
inc
idivl
aam
fisttpl
aaa
xor
jb
mov
insb
cmp
inc
ret
sub
sbb
add
jnp
test
fwait
popf
and
pushl
jbe
inc
cmp
addl
add
aad
js
pop
jmp
pop
xor
shll
movb
cmp
dec
lret
add
mov
rorl
push
ss
cmp
loopne
push
xor
adc
loopne
ljmp
inc
addl
jge
repz
jg
sbb
or
add
enter
jl
repz
jae
mov
add
mov
add
out
fisubl
loop
push
sahf
pop
dec
adc
int
add
pop
and
mov
mov
sti
insl
xor
andb
arpl
clc
fidivrl
sbb
mov
add
add
and
aam
filds
in
jg
adc
pop
jp
dec
ret
les
fwait
movsl
add
jne
pop
mov
cmp
loope
ret
sbb
xchg
inc
dec
adc
pop
ljmp
add
pusha
ret
push
add
jns
xchg
push
cltd
mov
add
shlb
jecxz
add
and
mov
jnp
psubw
loope
fstpt
pop
popf
inc
jmp
loopne
movsl
xor
push
in
cmp
adc
xchg
shrb
fs
dec
aaa
out
xchg
add
pop
or
add
flds
pop
out
int
adc
mov
xor
inc
xor
cmp
stc
and
jl
popf
pop
lea
in
xchg
lahf
call
int3
loope
jl
test
pop
std
fwait
data16
dec
cmc
pop
fdivrs
add
incl
pop
push
lahf
dec
out
lret
mov
adc
jne
add
sbb
in
mov
inc
pop
or
lods
repz
add
rorl
test
incl
jne
jge
loopne
jbe
add
pop
jl
push
das
lret
fwait
and
inc
add
fcmovnu
push
outsl
daa
pop
dec
add
ds
das
aaa
push
adc
pop
pop
add
testl
jg
int
lahf
out
sub
stos
push
call
pop
or
int3
xor
fwait
jecxz
nop
push
push
jbe
rcrl
mov
stos
and
mov
cmp
adc
adc
into
aaa
lods
xor
popa
nop
or
addb
sbb
add
scas
adc
jl
mov
sbbb
icebp
or
add
scas
xor
mov
add
cmp
into
popa
add
scas
xchg
add
addr16
es
mov
sbb
mull
pop
mov
mov
loopne
inc
cwtl
pop
mov
pushw
cli
jnp
cld
add
push
lods
xor
mov
and
daa
aad
mov
cmpsb
add
pushf
loope
bound
loopne
or
sbb
mov
push
cld
mov
xchg
iret
jne
push
rcrl
inc
imul
inc
cld
cmp
loope
gs
push
adc
push
sub
sti
pop
xchg
push
lret
add
mov
xchg
mov
rolb
sbb
lahf
add
pop
mov
add
xchg
and
fsts
pop
insl
dec
and
lea
stos
clc
mov
orl
rolb
in
dec
sub
jno
cwtl
insb
or
ret
mov
aaa
cmp
into
mov
pop
orl
loopne
add
ficoml
or
test
mov
add
addr16
pop
les
and
outsl
push
or
stc
add
xchg
adcb
lds
lsl
push
out
jnp
loopne
test
sub
add
int
mov
scas
incb
xor
mov
pusha
les
mov
mov
push
inc
inc
sbb
popa
cs
sub
push
add
xchg
add
mov
ret
jae
jg
adc
add
hlt
mov
add
pop
xor
xchg
jno
pop
cmp
mov
daa
adcb
xor
jnp
in
inc
cmp
aad
shll
mov
scas
fstpl
sbb
add
add
add
adc
pop
ret
cwtl
adc
push
mov
out
fsubs
movsb
dec
add
xor
mov
jp
out
ret
fildll
adc
lds
sbb
into
mov
and
js
jbe
sbb
or
or
hlt
pop
in
xor
adc
mov
add
loop
loop
sub
scas
sbb
lds
popa
adcb
je,pn
and
addr16
js
add
push
push
and
cmp
fiaddl
dec
addr16
dec
pusha
pushf
and
push
jae
das
inc
sbb
pusha
dec
enter
jb
pop
sbb
cld
sbb
cwtl
fiaddl
pop
ret
lahf
rorl
iret
or
jl
sbb
mov
cmp
loopne
cmp
shl
pop
pusha
outsl
arpl
pop
iret
mov
loope
jp
xor
incl
arpl
cmp
add
call
cmp
add
pop
cmp
add
cmpsb
mov
mov
mov
push
adc
mov
sbb
pusha
and
xchg
mov
push
adc
xlat
add
sbb
adc
xor
je
xchg
jnp
jp
xchg
mov
add
sti
cmc
mov
mov
vpcomub
fnstcw
inc
sbb
test
cmc
pop
add
xor
sbb
mov
add
xlat
xor
ss
adc
push
pop
or
fsubl
sbbl
add
inc
pop
outsb
fadds
loop
in
ds
stc
sub
in
not
popf
add
xlat
movsb
pinsrw
xlat
add
in
add
popf
loope
and
rcrb
and
add
fildll
ds
mov
sti
loope
add
aaa
mov
movsb
movsl
leave
jbe
stos
ljmp
add
je
imul
out
int
jp
movsb
cmp
push
add
cltd
inc
movsl
mov
pop
add
or
addb
sub
sbb
and
and
mov
movsl
cmp
xchg
xchg
in
cmc
cmp
fdivr
int
sbb
or
clc
jns
mov
jno
mov
mov
cmpsl
sub
les
test
xchg
je
cmpsl
mov
jle
or
sti
mov
add
pop
loope
ret
dec
or
incl
ficoms
aas
push
xor
pop
xor
add
add
loop
iret
push
insb
push
xchg
stos
cmpsb
fs
push
push
in
mov
into
cmp
xchg
ret
out
cmp
cld
xor
in
es
js
mov
adc
jns
ror
pop
inc
add
fcoml
in
mov
inc
imul
sahf
imul
fimull
pop
rcl
mov
sahf
lock
pop
add
and
outsl
xchg
arpl
inc
mov
add
and
push
rcrl
mov
in
add
inc
inc
add
dec
mov
int
out
jecxz
aad
shr
push
mov
xchg
das
les
jb
cli
cmc
and
add
add
popa
push
push
and
test
icebp
and
out
inc
xlat
clc
pop
push
dec
arpl
add
movsl
and
leave
pop
fdivrs
push
mov
mov
ja
or
add
lret
inc
and
call
pop
or
add
insb
repnz
adc
dec
mov
repz
jmp
sbb
inc
cmp
repnz
lret
mov
fcmovbe
loopne
stos
mov
rol
das
xchg
pusha
addr16
les
push
lcall
adc
pop
add
sarb
add
stc
sub
inc
add
adc
hlt
shlb
add
add
jbe
pushf
push
push
xchg
mov
push
add
cmp
xor
cwtl
add
stc
insb
call
and
popf
test
fstps
sbb
icebp
pusha
aas
push
pop
sub
adc
rcrl
daa
and
push
adc
data16
xor
jmp
cmp
mov
xchg
fldl
add
mov
xchg
loopne
insl
xorb
xchg
bound
push
pop
mov
jmp
loopne
out
dec
mov
or
rcll
fisttpl
xchg
inc
les
pop
mov
mov
jbe
add
fs
js
push
add
push
sub
test
subb
jne
popf
cld
and
lcall
mov
test
outsb
pushf
and
add
std
lods
fs
add
add
push
cltd
jno
das
mov
out
pop
scas
flds
lret
add
shlb
pop
dec
add
shlb
cwtl
fldt
hlt
push
sbb
pop
icebp
and
gs
in
sub
adc
push
cltd
pop
mov
add
addr16
aad
push
je
sar
dec
int
add
out
fsubl
push
jmp
les
shrb
pusha
ljmp
inc
mov
daa
add
out
lods
pop
lcall
sbb
inc
sti
mov
add
inc
xor
ss
loope
adc
cwtl
inc
mov
shl
adc
sbb
add
jecxz
popa
lcall
popf
ja
xor
loope
pop
pop
lea
imul
dec
repz
add
mov
test
mov
pop
ret
inc
pop
inc
push
bswap
sbb
pop
jo
xorb
xchg
add
and
inc
adc
imul
push
popa
add
push
xchg
mov
cmp
add
add
mov
add
mov
cmp
xchg
out
les
sbb
fadds
lahf
mov
dec
jp
ja
roll
pop
enter
adc
lock
arpl
cltd
scas
xor
loope
xor
mov
add
sub
and
incl
cmc
call
fnstenv
imul
dec
cmpsl
pop
testl
roll
mov
pop
rol
push
sub
icebp
adc
cld
sti
icebp
aaa
add
push
popf
pop
xchg
or
jns
dec
jle
into
aam
or
repnz
loopne
out
add
sbb
and
adc
scas
push
inc
incb
pop
sub
mov
testb
mov
mov
scas
add
sbb
popl
aas
push
adc
adc
xchg
cmp
add
sub
es
std
xchg
lds
pusha
or
mov
push
fldl
add
pushf
add
push
sti
or
lods
jae
mov
inc
cmp
mov
loop
add
imul
xchg
mov
out
lds
pop
jno
andl
pushf
dec
scas
insl
cltd
mov
push
dec
je
add
dec
xor
add
lret
add
push
mov
pusha
lea
adc
out
xchg
fwait
add
jle
push
iret
fbstp
or
andl
jecxz
lods
lahf
cld
in
xchg
add
adc
add
mov
add
mov
stc
pop
dec
and
ljmp
test
dec
lret
ret
lds
test
xchg
lock
sbb
dec
enter
xchg
push
in
orl
xchg
pop
add
rcrl
add
sarb
outsb
call
add
insl
push
and
out
inc
jmp
xorb
mov
ret
mov
push
notl
add
pop
lods
xor
inc
or
add
call
cli
cltd
add
outsb
outsl
jo
xor
add
int3
test
push
mov
push
push
push
mov
add
nop
inc
xchg
into
decl
aas
fnsave
in
push
and
jle
push
xchg
das
and
sbb
out
adc
push
add
adc
pop
gs
sbb
add
nop
fs
packuswb
lcall
rol
add
pop
scas
pop
add
subb
jo
lock
mov
xchg
cmpsb
or
addr16
sahf
cwtl
test
add
testl
sbb
pop
jo
das
data16
sub
movsl
and
loopne
ret
jnp
cmp
sbb
jo
bound
and
pop
ret
inc
es
adcb
jno
popf
push
hlt
mov
or
arpl
jnp
push
add
clc
adc
fnstenv
ret
mov
insl
bound
aas
push
xchg
incb
outsl
ja
mov
hlt
add
push
sbb
sbb
ss
out
xor
lcall
add
inc
adc
sarl
mov
cmp
int
xor
outsl
iret
add
sbb
hlt
popl
xor
and
sub
outsb
add
sbb
add
xchg
fucomi
jbe
mov
cld
mov
enter
add
mov
cmpsl
add
test
cmp
movsb
outsl
imul
add
xchg
jl
and
push
mov
mov
scas
dec
add
fimuls
sub
loopne
call
xor
mov
add
jae
lods
pop
and
sti
gs
fisttps
inc
xor
xchg
push
int
jb
cmp
pop
add
sbb
push
mov
sarl
cltd
out
add
sahf
jno
add
sub
add
je
and
dec
jmp
sbb
fs
cs
add
xor
xor
mov
add
gs
jbe
sbb
int3
in
sbb
out
rcrb
ret
xchg
mov
jno
popf
sbb
scas
jo
faddl
xor
sub
pusha
int3
lret
cmp
cmp
scas
ss
cwtl
add
dec
pusha
inc
pop
adcl
leave
cmpsl
pop
cltd
out
cmc
scas
aad
int3
nop
adc
outsb
add
daa
incl
scas
mov
icebp
add
sub
xor
popa
sbb
sbb
push
popa
flds
inc
fists
outsl
add
fdiv
sti
out
mov
pop
scas
push
aas
loop
mov
ds
mov
leave
pusha
jb
add
mov
sbb
int3
rclb
xchg
sbb
mov
sub
jo
in
popf
adc
and
int
add
movsb
fistps
cltd
outsl
ret
adc
add
sbb
leave
sahf
add
aas
ja
or
adc
lret
cmpsl
mov
jne
cmp
es
xlat
sub
xchg
loope
or
mov
add
fistps
sub
add
test
std
xchg
fldl
jne
je
sbb
or
sar
das
testl
mov
cbtw
es
inc
xchg
jne
rorl
lret
add
fimull
mov
daa
aas
jg
jno
jb
jl
and
or
aad
add
sub
dec
adc
pop
xor
push
push
mov
nop
clc
shrl
adc
or
mov
sbb
into
loopne
push
xor
push
addr16
int3
sub
add
xchg
jo
add
adc
mov
fsubl
dec
dec
in
xor
or
sub
dec
mov
inc
dec
push
push
xor
cmpb
ja
mov
cwtl
rorl
pop
xor
insb
and
mov
rcll
faddp
add
push
cmp
sub
aad
dec
add
sbb
pusha
std
repz
pushf
cltd
sbb
fcomp
jecxz
jns
pusha
stos
mov
xor
pop
mov
pop
fldl
lcall
pusha
test
jb
loopne
jge
shrb
filds
fcoml
pop
add
adc
add
mov
pop
add
push
mov
dec
mov
sbb
jo
mov
xchg
add
fdivrs
add
mov
out
add
cmpsl
mov
mov
sbb
and
in
jne
popf
pop
xchg
add
stos
jle
mov
pusha
xchg
lcall
ss
rorl
xor
adc
cs
push
test
xor
imul
mov
call
xchg
mov
icebp
adc
verr
xchg
ret
cmpsb
xchg
aas
mov
popa
jno
adc
stos
cltd
inc
push
sub
arpl
fisttps
xor
pusha
mov
shlb
sub
test
xchg
add
inc
out
push
push
testb
push
aas
mov
sbb
cmp
lret
rcll
ljmp
push
jmp
jno
mov
in
or
jmp
cmpsl
add
mov
dec
pop
outsb
pushf
and
stc
sub
inc
xchg
lcall
jnp
pcmpeqb
test
xchg
fwait
jo
mov
xchg
sub
mov
lret
adc
icebp
in
add
mov
mov
add
inc
add
leave
aas
pop
loopne
sbb
loop
push
inc
pop
add
or
in
add
ss
xchg
adc
pop
jbe
lods
arpl
xchg
jne
pop
fisttpll
mov
or
shrb
xorl
jae
pop
add
add
aam
rcrb
outsl
add
or
add
lret
mov
test
mov
pusha
loope
fidivl
jge
out
xor
lahf
dec
add
sub
add
dec
push
rolb
mov
jo
in
or
add
inc
fnstsw
icebp
cmp
inc
fldt
jmp
sub
fidivl
orb
sbb
addb
mov
jns
pop
mov
adc
mov
push
scas
mov
imul
notb
ljmp
or
cwtl
adc
std
fstl
xor
das
adc
add
ror
test
mov
daa
cmp
cli
mov
jl
pop
add
insl
adc
repz
rcrl
lret
ficoml
fisubs
pop
test
aad
leave
inc
add
into
sahf
popa
or
and
xchg
or
jg
arpl
int3
add
pop
fcoms
push
xorl
test
add
add
in
xor
stos
xchg
dec
adc
adc
addb
mov
in
fldt
loope
push
jp
dec
ret
adc
pop
xchg
inc
mov
push
enter
sub
dec
jge
mov
push
lahf
aam
inc
sarb
xlat
aad
roll
fbld
fs
pusha
cmpsb
pusha
sbb
xor
pop
adc
adcb
aam
inc
add
push
call
add
movsb
aas
aaa
mov
lods
out
iret
mov
cwtl
jecxz
jl
icebp
popa
mov
insb
repz
out
cmp
pop
sbb
push
xor
add
mov
lods
add
lods
jmp
add
dec
movb
pop
shl
dec
pop
inc
repnz
ror
adc
popa
insb
pusha
fsubs
adc
rcll
lock
sarl
movsb
dec
and
inc
push
pushf
lahf
push
insb
lods
les
push
cmp
aaa
push
popf
idivb
mov
sbb
shlb
adc
mov
inc
sub
cmp
sub
mov
decb
add
push
idivb
jnp
add
insb
hlt
iret
imul
pop
in
jae
and
ret
rcr
add
cmc
push
cmp
sbb
push
daa
push
or
dec
leave
fadds
mov
aad
sahf
lcall
lods
and
adc
repz
lret
xchg
pop
xorb
dec
out
or
xor
loope
and
sbb
shr
loopne
andl
dec
popf
xchg
ds
push
cmp
add
jns
insb
add
adc
pop
pusha
aas
xchg
fdiv
mov
jecxz
dec
loop
xor
mov
inc
in
push
mov
mov
stos
ja
shlb
add
add
vpperm
out
in
or
out
into
push
add
imul
sbb
adc
xchg
repnz
jg
movsb
adc
pop
cmp
and
push
ret
ret
popf
sbb
push
and
imul
xchg
enter
addr16
into
pop
jp
outsl
mov
out
loopne
mulb
addb
pop
cmpsb
lret
add
icebp
call
add
push
repz
jne
add
xor
mov
sub
out
jle
pop
idiv
insb
mov
neg
aaa
lret
push
push
sbb
popf
add
mov
cmp
mov
mov
dec
mov
iret
mov
jg
testb
scas
ret
test
iret
dec
loopne
inc
fs
test
stos
es
pop
arpl
popa
aad
cli
movsb
out
adc
and
jp
add
mov
fsubrl
out
jo
add
sub
xchg
ret
jmp
xchg
mov
inc
test
mov
push
jmp
adc
cltd
test
xor
ja
shrb
pop
xchg
lds
in
push
pop
fwait
stc
cmpsl
xchg
outsl
popa
add
es
xchg
sub
dec
ljmp
push
xchg
mov
stos
xor
ljmp
rcrl
and
pop
adc
add
ljmp
add
jnp
mov
scas
pusha
pop
imul
xor
cld
fmuls
adc
jp
xchg
inc
insl
add
lahf
popa
pop
add
sub
in
addr16
loop
pusha
xchg
push
gs
xchg
mov
arpl
cmp
add
sub
jns
mov
mov
inc
mov
xor
adc
in
cmc
add
add
jl
cmp
notb
mov
add
push
cli
lea
aam
xchg
xchg
pop
cmpsl
les
pop
lldt
add
or
pop
out
add
nop
dec
add
jmp
cs
mov
fwait
sbb
jbe
movsb
jge
sti
add
mov
hlt
idivl
test
sbb
loopne
cmc
xor
push
ret
mov
pop
pop
push
insl
ss
add
cmp
fadds
dec
sbb
shl
lret
jp
and
xchg
jecxz
xor
adc
xchg
push
sbb
add
mov
mov
cmp
mov
flds
addr16
or
pop
fmull
mov
les
and
and
sbb
mov
leave
movsl
dec
jb
inc
pop
jp
pop
jl
dec
sahf
mov
ret
jae
shrl
into
add
arpl
or
mov
aas
mov
lahf
or
loopne
lods
sbb
pop
shlb
cmc
xor
xor
or
and
js
add
xchg
add
push
hlt
or
pop
pop
jg
test
sbb
cmp
jo
in
jl
mov
pop
inc
mov
daa
add
movsb
jne
push
mov
pop
repnz
push
mov
or
add
nop
or
aas
int
aam
dec
fnstenv
bound
leave
pop
mov
add
cmp
mov
jmp
pop
mov
add
mov
scas
loope
mov
adc
pop
mov
add
inc
mov
enter
mov
cmc
add
dec
sbb
dec
push
testl
sub
rclb
inc
mov
imul
pop
dec
adc
into
lods
or
push
pusha
in
cmc
inc
add
adc
enter
ret
pop
lods
mov
ror
add
jne
xor
cmp
jns
jge
shl
int3
sbb
imul
cmp
test
mov
loopne
movsb
loopne
mov
cmp
adc
dec
fisubl
imull
sbb
and
stos
repz
or
mov
sub
add
and
xor
das
add
in
push
sbb
or
pop
dec
sub
outsl
mov
fwait
and
mov
add
mov
stos
fdivrl
aad
jo
mov
rorl
dec
sbb
loope
sbbb
int3
sub
xor
and
test
rolb
sbb
inc
add
xchg
fldenv
test
add
mov
adc
enter
nop
xchg
jge
stos
rol
add
dec
xchg
testb
sbb
add
ljmp
fistl
push
test
repz
outsl
push
sbb
out
in
mov
cli
push
cs
xlat
loopne
lods
sbbb
push
fs
add
mov
aad
add
cmp
cmpsl
fdivs
add
mov
addr16
data16
xor
dec
xchg
cwtl
fwait
adc
mov
jo
or
dec
cwtl
jbe
pop
adc
addr16
adc
sub
cmpsl
pop
movsl
add
lock
cli
or
jns
add
out
ficomps
xchg
ss
or
jle
cmp
dec
add
loopne
sahf
stc
xchg
sub
or
mov
pusha
jl
pop
and
pop
xor
das
jb
lret
jbe
add
subb
inc
mov
incb
fiaddl
add
cwtl
push
out
add
pop
jbe
add
jecxz
fiaddl
into
fnsave
push
andb
cmp
add
sti
inc
aas
jge
mov
add
xor
imul
or
adc
jo
roll
in
loop
lea
cmp
out
pop
and
adc
enter
pusha
jecxz
pop
nop
xor
add
inc
xchg
ss
out
add
in
mov
pusha
pusha
adc
imul
lds
ds
stc
je
fs
shll
mov
add
test
test
int3
clc
pusha
scas
insb
in
popf
xor
or
jne
and
int
movsb
bswap
add
cli
in
std
pop
into
loopne
stos
pusha
add
pop
jns
or
add
add
out
add
test
arpl
add
mov
add
pop
cmc
jo
mov
test
loop
out
pop
faddl
mov
call
push
add
push
xor
add
mov
mov
push
add
das
jecxz
add
xor
push
add
or
mov
cmp
sahf
add
aad
icebp
dec
or
adc
loop
mov
adc
stos
xor
push
push
adc
cmp
dec
aad
add
hlt
outsl
mov
xchg
ja
jecxz
cmp
jge
push
outsb
inc
xor
add
mov
inc
clc
scas
push
scas
adc
iret
xor
xchg
lret
fdivl
mov
jns
xchg
mov
cwtl
mov
fdivrl
mov
and
sub
push
imul
cmp
add
cli
push
jae
fisubs
push
push
and
mov
jnp
push
or
cltd
push
adc
aas
jnp
sub
jg
ss
dec
lods
add
lahf
sbb
les
add
mov
mov
or
sub
stc
push
rcrl
je
pop
dec
mov
jne
jmp
cmpl
pop
test
sbb
jnp
roll
jo
push
sbb
fwait
dec
pop
cmp
push
adc
ffreep
mov
arpl
and
not
shrl
inc
mov
or
cmpsb
rclb
push
outsl
xor
xchg
lcall
cmp
ret
mov
add
jle
ficoml
sbb
adc
pop
xchg
and
shl
inc
mov
mov
mov
xor
pop
cwtl
sti
push
add
push
or
imul
shrl
sbb
add
add
cli
repz
add
addr16
adc
mov
dec
insl
iret
js
dec
add
or
fwait
mov
negl
dec
in
jne
add
or
adc
adc
xor
mov
out
add
sbb
sub
sub
inc
int
and
sub
mov
and
sbb
icebp
rorl
in
add
dec
stc
movsl
or
loop
movsb
mov
mov
push
inc
mov
pop
inc
xor
loopne
lods
sbb
adc
mov
loope
test
aam
rcrl
sub
inc
cmpxchg
and
cli
pop
add
shr
sbb
add
cld
call
inc
loopne
pop
adc
test
jne
pop
andl
call
inc
ret
add
jo
mov
rorb
cmp
mov
inc
out
add
xchg
mov
call
add
mov
jo
or
les
add
cmpsl
movsl
add
cmp
orl
adc
jge
mov
and
loope
insl
dec
xor
pop
outsb
pop
loope
cmp
mov
add
push
add
das
push
xchg
scas
fwait
outsb
adc
sub
loope
imul
insb
arpl
add
enter
gs
les
cmp
imul
add
jns
xchg
mov
jmp
sahf
mov
mov
push
and
addl
lret
pop
scas
pusha
ret
mov
fistpl
rorl
cmp
jb
push
pop
call
xor
cmp
xor
xchg
xor
jecxz
mov
lods
mov
jb
std
adc
lret
scas
mov
imul
dec
mov
mov
or
imul
xlat
loope
adc
dec
xchg
dec
jae
lea
mov
xchg
jne
push
mov
jle
push
addr16
cmp
sub
jp
dec
cmp
movsl
popa
ss
and
in
add
ret
xchg
dec
push
adc
out
and
outsb
mov
push
adc
rclb
repz
add
xchg
xlat
add
cs
add
add
xchg
xor
mov
es
paddq
in
mov
jno
add
sahf
mov
loope
loop
sub
shll
push
aad
push
movsl
cli
add
addr16
xor
mov
jnp
jne
and
xchg
push
pop
orl
add
xorb
mov
fcompl
lret
xchg
shll
xor
xor
mov
and
or
add
lods
push
pop
cmp
add
das
jne
push
icebp
inc
decb
jecxz
xor
dec
jecxz
add
mov
adc
add
sub
dec
mov
pusha
xor
push
pop
cwtl
add
mov
or
mov
add
clc
fsubrl
and
mov
leave
or
add
stc
sbb
mov
add
sub
jns
mov
mov
lcall
rcl
negl
and
test
sbb
sbbl
add
sub
sbb
and
daa
sbb
addl
adc
cmc
push
mov
and
cmpsb
movsb
fwait
jmp
push
jl
mov
mov
ja
mov
rcll
mov
dec
xchg
jo
icebp
jecxz
cmp
xor
stos
push
loope
add
out
mov
cld
sbb
mov
ljmp
cmp
es
cmpsl
cs
lret
adc
test
daa
lea
ltr
ret
mov
jo
out
test
popf
lds
pop
leave
sahf
jg
adc
jnp
sbb
pop
in
and
push
add
push
out
pop
sub
in
fisttpl
or
push
or
and
mov
call
sub
and
es
pusha
call
int3
jmp
shrl
mov
fdivl
rol
mov
cmp
call
mov
jge
xchg
push
add
ret
pop
imul
leave
pop
test
add
push
add
fbld
sbb
xchg
mov
movsb
loopne
inc
popa
hlt
mov
push
cmpsb
xchg
xchg
faddp
push
out
jbe
popf
lods
add
push
test
dec
ss
and
outsl
cmp
push
ljmp
adc
add
cmp
mov
jno
test
or
mov
mov
mov
nop
addr16
into
or
mov
test
ret
bound
add
cmpsl
mov
popf
rcrb
add
out
mov
outsl
ss
jle
mov
in
inc
and
ljmp
in
fcmovne
add
mov
add
pop
mov
fisubrs
repz
lahf
cltd
add
jg
pusha
pop
enter
add
out
mov
hlt
scas
cmpsb
movsl
xchg
adc
out
insl
roll
les
in
arpl
fsub
cs
cmp
rolb
push
xor
add
out
jb
add
popf
cld
sbb
fiadds
clc
mov
fstpl
cmp
inc
mov
incb
fsubrl
mov
bound
or
pushf
jmp
mov
cwtl
in
xor
fidivl
xchg
push
sbb
mov
or
inc
add
mov
movsl
bnd
stos
add
mov
mov
mov
sahf
insb
add
pop
jecxz
les
or
xchg
test
add
dec
stos
jne
sub
pop
inc
ss
jp
ds
jnp
and
adc
test
push
test
add
sbb
ds
pop
mov
sbb
or
lds
mov
add
xor
mov
mov
add
imul
inc
loopne
sbb
mov
fwait
lcall
lea
push
add
xchg
pmaxsw
pop
in
jo
fistps
add
push
jno
addl
or
dec
push
xchg
mov
jbe
add
dec
fcoml
pop
mov
pop
sti
pusha
or
mov
sbb
adc
cmp
and
aam
aad
pop
add
jge
lock
scas
fcmovnb
stos
popa
jae
in
sub
jo
add
mov
add
inc
sub
in
xchg
cmp
mov
pop
mov
xchg
int
into
outsb
sub
fisttps
inc
hlt
sbb
push
sub
sbb
int
adc
clc
push
sub
cltd
mov
add
ret
imul
add
sbb
xchg
sub
push
sbb
add
push
fwait
cmpsl
inc
sarl
push
cmp
add
pop
bound
push
popa
aad
and
adc
leave
jge
adc
inc
dec
xchg
jnp
sbb
loop
mov
call
fwait
repnz
mov
cli
ret
inc
sbb
bound
pop
sbb
or
sbbb
xor
in
lds
rcrl
mov
xor
aam
jns
sar
cmp
dec
daa
loope
ret
add
ds
add
int3
mov
shl
mov
mov
push
push
adc
enter
aad
sti
cmc
dec
pusha
mov
mov
inc
call
das
mov
inc
jae
add
dec
loop
into
jne
mov
lock
in
sub
add
or
repz
mov
pop
andl
lcall
inc
notl
test
sub
add
leave
sbb
mov
loopne
or
mull
xor
test
mov
dec
aam
in
sub
cmpsl
mov
inc
movsl
mov
sbb
sbb
add
xchg
cmpsl
js
je
inc
add
mov
jnp
ltr
rclb
scas
adc
popa
inc
sbb
int3
roll
in
add
cli
sarl
sub
add
mov
je
add
mov
stc
pop
mov
add
bound
mov
jl
pusha
or
fisubl
aad
sbb
clc
and
push
add
jle
mov
movsb
pop
add
ficoml
push
out
add
fildll
xchg
or
add
xchg
jp
aas
push
jo
inc
aam
adc
sbb
mov
ret
mov
pop
mov
iret
jle
dec
movsl
lea
mov
mov
insb
scas
sub
and
mov
fwait
cmp
or
movsl
add
ficompl
sub
sub
sub
pop
push
and
test
test
dec
ss
mov
out
or
fucom
mov
aad
push
roll
jl
adc
lcall
fstl
testb
pop
imul
mov
sub
int
pop
sub
loop
enter
shll
pushf
movntq
gs
scas
xor
out
xor
or
cmp
int3
subb
cmp
scas
lea
je
push
mov
pop
or
imul
add
xchg
pop
sarl
mov
rorb
aaa
pop
pop
and
xchg
adc
mov
add
lock
add
mov
or
rcrb
pushf
and
inc
movsl
sbb
jbe
push
mov
add
mov
cld
sub
jp
jo
mov
ss
cmp
pusha
dec
clc
pop
fdiv
add
mov
xor
inc
add
lahf
xchg
sbb
sub
dec
repz
sbb
pop
xor
outsb
add
cmp
add
popf
mov
mov
add
cmp
cwtl
add
dec
inc
out
rol
loope
or
dec
int
fsubs
testl
or
mov
loope
xchg
sbb
shll
cmc
mov
and
inc
cwtl
stos
fs
dec
ljmp
lret
jae
cwtl
add
sub
add
inc
mov
arpl
or
test
dec
movaps
movsb
adc
add
and
jmp
pop
in
and
mov
lahf
jge
popf
pop
pop
add
sub
repz
dec
mov
js
dec
cwtl
popa
add
sbb
icebp
add
stc
dec
lret
push
xchg
add
add
and
push
int3
loope
mov
call
add
xchg
inc
add
inc
push
pusha
and
pop
mov
cmp
adc
add
xor
and
adc
add
jns
arpl
mov
mov
out
aaa
cld
xor
movsb
mov
jo
mov
mov
lods
fistpll
iret
pop
lahf
add
push
mov
add
sbb
or
jmp
outsb
push
pop
inc
cmp
das
push
add
add
mov
mov
idiv
adc
jo
lods
stc
shl
mov
add
xchg
lods
sbb
mov
add
add
addb
or
js
mov
mov
ret
add
dec
test
add
jno
call
add
pop
and
outsb
or
test
xchg
and
cwtl
repz
and
add
mov
lock
add
or
jae
in
loopne
sub
add
xchg
mov
outsb
in
jb
adc
xchg
bnd
and
pop
pop
je
push
add
pop
push
pop
add
pop
int3
gs
mov
fimuls
jmp
and
cmp
cltd
dec
sbb
push
add
xchg
rcrl
roll
or
insl
pop
mov
add
mov
push
xor
mov
les
rolb
dec
push
das
push
dec
or
pop
rep
popa
or
mov
in
adc
scas
pop
mov
xor
push
add
fcomi
push
add
push
push
xchg
insb
in
stc
add
js
add
push
pusha
aaa
es
mov
movzbl
jp
push
fistl
shlb
sub
push
or
imul
shlb
dec
nop
and
sbb
cmp
cmpb
mov
pop
ret
outsb
aad
leave
mov
cmc
add
loopne
sub
xor
and
cmp
push
scas
pop
fwait
lea
push
jge
sbb
mov
mov
ds
ss
adc
add
add
dec
cmp
lds
jns
enter
sbb
cltd
ret
mov
fistpl
mov
insl
lahf
adc
pop
jbe
daa
std
ret
lock
sbb
test
add
adc
push
sbb
pop
addb
aaa
arpl
jae
or
mov
in
add
mov
fimuls
pop
and
sbb
enter
add
hlt
aam
add
and
in
pop
int
clc
les
daa
dec
sub
xchg
cmp
in
stc
fmuls
dec
add
mov
adc
add
aam
and
dec
lret
adc
mulb
repz
xchg
lock
adc
push
mov
inc
add
sbb
and
jecxz
dec
jns
bnd
add
cmc
jg
and
jb
add
sub
mov
xor
mov
ss
aas
cld
popl
ds
repz
mov
mov
sbb
cwtl
adc
xchg
lret
jp
push
add
add
in
rorb
out
dec
xor
add
cmp
sub
daa
xchg
add
add
dec
dec
out
mov
add
outsb
add
fistpl
fdiv
jp
rol
add
inc
lahf
mov
jg
push
rcrl
jmp
xchg
jle
and
mov
add
lds
and
movsl
jae
out
mov
in
adc
gs
lea
fiaddl
sub
adc
add
sbb
je
mov
lcall
mov
fwait
into
mov
out
add
mov
sub
add
hlt
xchg
scas
je
sar
mov
sahf
sbb
test
repz
lea
sti
adcb
lock
imul
and
mov
dec
push
sub
and
pop
scas
or
and
outsl
lret
pop
flds
pop
add
aad
adc
pop
jg
popf
add
or
adc
push
inc
in
and
pop
sbb
fstpl
mov
push
pusha
dec
jno
data16
shl
loope
hlt
jg
call
mov
add
jns
lods
lret
fsubrp
add
popf
lea
cld
sub
lock
inc
ror
or
jb
adc
mov
dec
pop
or
ja
sbb
rcl
loopne
mov
mov
sbbb
mov
cmp
push
test
pop
add
pop
jecxz
jo
add
mov
sub
test
or
shl
sbb
aad
cmp
xchg
mov
leave
cwtl
push
xchg
add
pusha
inc
mov
add
stos
jne
ret
repz
les
xchg
xor
adc
xchg
cs
xlat
dec
lds
adc
jne
pushf
test
sbb
add
lret
enter
add
sub
jp
jg
and
push
imul
push
adc
push
filds
xchg
sahf
gs
hlt
cmp
or
xor
mov
dec
adc
pop
xlat
sarl
cs
sbb
mov
fstpl
add
addb
mov
aad
sub
mov
mov
add
sbb
call
mov
clc
sub
seto
sbb
pop
js
push
adc
idivl
lahf
cmpsb
or
cli
inc
and
mov
cs
add
repnz
add
adc
push
adc
sub
dec
in
mov
sub
xor
out
cmpsl
out
adc
and
or
mov
add
fcoms
jge
jle
add
sbb
clc
or
fs
aam
dec
mov
sbb
add
add
push
xchg
dec
inc
xlat
ljmp
sub
dec
leave
xor
rcrl
add
dec
fidivrs
stos
inc
lock
mov
adc
cmp
adc
sbb
shrl
add
stos
inc
xchg
hlt
nop
and
test
cmpsb
add
push
mov
add
add
outsl
imul
sbb
sub
fisubl
pop
bound
pusha
sub
sbb
enter
xchg
scas
add
stos
loopne
out
enter
and
add
cltd
aam
ficompl
add
and
sub
mov
adc
fisubrs
xor
and
xchg
loopne
cmp
sub
sbb
sub
add
sbb
test
xchg
ret
cli
add
imul
or
and
push
lcall
pop
sub
test
push
pop
movsl
sub
pmuludq
xchg
adcl
sti
popf
mov
sbb
sub
add
leave
push
daa
les
add
jg
cld
pusha
pop
stos
sarl
add
xor
mov
jg
sub
andl
mov
and
mov
into
lret
push
roll
cmpsl
lahf
push
mov
mull
outsl
push
inc
aad
pop
pushf
sbb
xbegin
xchg
fidivl
push
popa
fstps
jge
aas
cmp
adc
xor
jecxz
sbb
movsb
pop
add
cwtl
push
sti
test
pushf
loop
test
cmp
ret
add
sbb
xor
clc
jae
pop
and
out
cwtl
popl
test
cmc
xor
pusha
cltd
cmp
push
notb
xor
sbb
xlat
pop
sbb
pushf
jno
inc
lea
lock
cmpb
idivl
xor
andb
sub
sbb
sbb
or
arpl
lret
add
mov
outsl
cmp
pop
mov
or
adc
dec
lret
mov
add
pop
push
cmp
addr16
loopne
cmpsl
mov
shrl
jmp
loopne
dec
daa
jge
or
icebp
adc
cmpsl
in
adc
and
mov
push
scas
pop
jne
test
or
add
add
push
or
leave
mov
loopne
inc
xor
dec
pcmpgtw
lahf
add
xchg
pop
xchg
push
mov
sub
imul
add
add
and
add
iret
mov
add
cmp
add
push
rcll
iret
ret
mov
and
add
outsl
jmp
mov
add
and
pop
cmpsb
mov
dec
pusha
mov
loopne
mov
pushf
add
mov
lahf
add
fsubs
pop
sbb
add
out
aaa
nop
or
pop
inc
cmpsb
xor
pusha
stos
out
xchg
and
arpl
or
mov
or
jmp
push
std
call
push
pushf
push
jle
mov
mov
xor
enter
jl
or
dec
mov
sbb
sub
push
add
pop
jecxz
ret
addr16
adc
int
pop
xlat
sub
aaa
add
cmp
and
scas
sub
add
test
inc
add
data16
cmpsl
fsubrs
clc
xor
jmp
add
and
lret
idivb
sub
pusha
xor
xor
pop
cli
add
roll
in
in
ret
xlat
hlt
or
popf
pop
and
inc
pop
xor
pop
ljmp
out
aaa
mov
mov
test
add
push
mov
sub
push
es
lea
aaa
dec
outsb
add
pop
lahf
out
inc
enter
loop
call
mov
mov
add
push
xor
sbb
push
faddl
into
jl
or
push
lret
pop
push
out
xor
lea
inc
sti
add
js
mul
repz
push
mov
sub
mov
les
arpl
out
rorl
jp
add
inc
stc
shll
jge
jno
jae
adc
xorl
xchg
sahf
jo
pop
adc
adc
arpl
add
sbb
xlat
jbe
movsb
inc
inc
mov
mov
jb
shrl
add
inc
fnsave
add
rolb
add
mov
add
int3
add
jbe
mov
pop
arpl
add
mov
pop
jns
int
dec
ficoms
ficompl
ljmp
stc
pop
adcl
xor
icebp
fisubl
push
jne
add
enter
in
add
ds
jo
jno
repnz
test
lahf
adc
arpl
adc
cmp
in
mov
cmp
sti
add
xchg
sbb
mov
pop
mov
adc
add
xor
fwait
sbb
aad
cmpl
jne
mov
xchg
add
ds
cmp
add
cmc
jmp
pop
xlat
sub
pop
add
add
popa
sub
add
jnp
in
push
cmpsl
mov
jae
add
ja
mov
adc
sahf
fsubs
xchg
mov
sbbb
shlb
cs
add
pop
cli
cmp
xlat
stc
ja
push
add
or
test
and
cmp
sub
pop
add
movsl
mov
popf
data16
adc
pop
lcall
mov
loope
ljmp
mov
inc
in
je
leave
and
incl
push
adc
cmc
fsincos
inc
pop
and
xor
sbb
inc
movsb
add
adc
rolb
cmp
in
cmc
add
out
lret
cmp
add
call
mov
push
repz
mov
cmp
test
lret
add
outsl
pop
loope
and
jnp
rol
sbb
mov
data16
sub
cmp
popa
out
gs
cld
inc
add
clc
add
fcomps
loope
mul
loopne
pushf
loop
inc
cltd
add
ret
fdivrs
mov
jmp
mov
cwtl
ss
pop
sahf
mov
and
jb
pop
lret
add
mov
jo
mov
ljmp
pop
and
jae
or
and
test
lea
dec
jmp
ror
xchg
jp
in
in
test
dec
js
adc
lret
test
ret
cmpsl
add
ret
jns
loope
adcl
sbb
xorb
jbe
push
lahf
add
sarl
fnstsw
and
imul
adc
es
sahf
iret
ret
pusha
pop
cli
cmp
mov
add
pop
les
sub
cltd
mov
stos
sub
sbb
push
sahf
xchg
xchg
pusha
cwtl
mov
int3
ret
int
pop
push
movsb
imul
fisttpll
push
sbb
dec
mov
lds
clc
xchg
sarb
mov
mov
enter
lahf
sahf
add
jp
movsl
add
inc
sub
jns
stos
mov
stos
pop
sbb
dec
xor
xchg
cmp
lods
test
pop
add
pop
imul
inc
mov
cmp
dec
sub
add
mov
cmpsl
mov
sar
daa
fnsave
xchg
adc
rol
pop
sub
dec
incb
and
daa
lods
push
shl
mov
mov
push
push
cld
mov
aaa
adc
add
fmull
bound
mov
lea
and
iret
add
hlt
cmp
fsubs
jmp
or
adc
add
jmp
inc
into
inc
dec
push
mov
add
fsubrs
mov
push
xabort
mov
add
and
and
xchg
je
sbb
dec
add
test
lahf
dec
scas
xchg
pusha
jg
inc
xorb
pusha
inc
adc
fcoms
cmpsb
rol
pop
jg
sub
sarb
inc
lcall
dec
rorb
add
imul
clc
jl
cmp
mov
roll
pop
popf
insw
adc
adc
add
repz
add
mov
mov
add
xchg
mov
add
cmpsb
pop
jne
ret
test
and
adc
cwtl
repz
cld
pop
xchg
mov
xchg
sbb
adc
and
mov
sbb
adc
jno
out
push
jecxz
sbb
ja
xor
xor
jg
mov
aas
in
out
push
lock
mov
jmp
xorb
mov
in
pusha
stc
mov
add
bound
or
jmp
popf
push
add
add
pusha
mov
sbb
pop
das
pop
outsb
xchg
repnz
add
mov
arpl
pop
sub
push
enter
xchg
ds
fdivp
stos
lcall
gs
xlat
adc
jbe
cmc
pop
or
pushf
sahf
and
pusha
dec
in
insl
lahf
mov
cmp
call
and
icebp
push
popf
dec
mov
jmp
lds
jnp
inc
popa
lcall
cmpsb
add
sbb
mov
dec
flds
adc
outsb
inc
add
push
cmp
hlt
stos
sub
mov
inc
pusha
push
xorb
or
orl
mov
adc
add
jle
adc
mov
push
cs
push
adc
mov
add
adc
cmpsl
push
pop
loopne
pusha
mov
data16
adc
sbb
or
ja
add
addr16
fs
sbb
leave
and
out
outsl
jp
sbb
or
pop
popa
arpl
mov
mov
cmp
xor
imul
jmp
jecxz
scas
sub
mov
sub
add
jo
xchg
iret
mov
addl
loopne
xchg
push
lock
into
in
cmp
adc
or
push
leave
and
shrl
add
repz
jb
pop
fsubrp
das
shlb
int3
dec
add
iret
sar
add
gs
cmpsl
fldl
sahf
add
xchg
xchg
mov
ss
ljmp
push
mov
and
ret
xor
mov
add
or
daa
sbb
shl
repz
push
jg
cmpsl
mov
push
pop
orb
inc
fildll
sub
mov
mov
mov
cld
dec
add
stos
pop
mov
test
iret
push
xchg
add
push
add
repnz
and
outsb
fcoml
or
stos
stos
addr16
add
mov
jnp
and
loope
and
add
fistps
pop
sbb
nop
addr16
add
fwait
pop
sub
sahf
and
les
addl
loopne
shl
add
sub
pop
pop
dec
arpl
lds
fstpl
mov
and
push
xchg
push
inc
int3
sahf
gs
outsb
mov
andb
cmp
movsl
mov
jns
loopne
dec
nop
mov
adcl
add
or
and
sbb
lock
sarb
cwtl
cltd
imul
jmp
insb
and
sbb
stc
push
rcll
xor
mov
add
push
pushf
jge
movb
dec
push
adc
sbb
outsb
sub
repnz
pop
adc
popf
fildll
add
or
sar
fldcw
rcrl
mov
xchg
add
decb
cs
stos
fistps
push
push
cmp
fmull
dec
nop
sahf
add
fisubs
std
inc
xchg
insb
test
shl
xor
les
cltd
add
pop
loopne
lahf
leave
push
add
add
mov
cs
fidivrl
push
sbb
jecxz
push
adc
data16
fsubrp
add
mov
xorl
xchg
sbb
fistpll
loope
out
adc
test
xchg
xchg
or
subl
cmc
push
pop
mov
daa
mov
mov
test
leave
sbb
cmp
cwtl
scas
ficomps
idiv
sub
movsl
cmp
jns
add
stos
push
loop
mov
sbb
enter
and
iret
fcoms
sub
int
cmp
fldcw
add
xor
add
enter
jnp
mov
inc
imul
adc
push
loopne
mov
and
adc
neg
lcall
add
and
out
push
add
insb
addr16
aaa
mov
cwtl
test
and
dec
fistps
add
add
sub
imul
and
add
push
daa
movsb
push
adc
ja
cmp
shll
mull
mov
mov
adc
and
jns
mov
jle
stc
sbb
fdivrs
repz
add
dec
arpl
aas
pop
int3
test
scas
pop
add
insb
add
jg
mov
jle
adc
cmp
add
sbb
loope
adc
insl
scas
sbb
sub
mov
into
sbb
aad
dec
inc
mov
lock
jbe
sbb
jge
and
inc
hlt
xor
add
sbb
pop
add
lods
and
xchg
adc
sbb
icebp
fcoms
jnp
inc
movsl
add
mov
add
fstps
stc
add
cmpsl
push
cmp
pop
cmp
sbb
sbb
inc
mov
sahf
popf
daa
insl
add
das
xchg
add
push
movl
xchg
dec
test
repnz
add
popl
fiaddl
out
lds
inc
xchg
pusha
pusha
xchg
add
popa
xor
or
and
aam
add
loopne
roll
test
repz
push
dec
and
jecxz
je
add
imul
loopne
push
jg
sub
aaa
std
jae
sbb
mov
insl
les
xchg
rolb
add
xor
add
test
adc
aaa
jns
dec
add
add
push
loope
push
leave
movups
in
jne
or
pushf
add
jb
add
dec
inc
add
pop
test
pusha
add
xor
sub
mov
mov
add
call
movsb
add
sub
ss
or
add
xchg
mov
lea
mov
push
out
and
bound
or
cwtl
add
leave
lods
jne
cltd
sbb
out
mov
sbb
popl
add
pop
mov
mov
aas
jb
std
sub
push
mov
lahf
add
ret
out
inc
ja
pop
add
fildl
cltd
mov
movsl
sbb
xor
inc
enter
repz
lock
add
mov
mov
or
push
test
fs
inc
in
lahf
and
aaa
lea
push
sub
add
ljmp
scas
imul
ja
std
or
or
mov
popa
je
stos
inc
inc
mov
mov
dec
pusha
sub
pop
add
es
add
cmp
rclb
add
movsb
jae
sbb
scas
daa
adc
cmp
add
andb
push
mov
or
out
pop
test
loope
dec
das
dec
add
inc
xor
add
pop
mov
add
xor
add
fdiv
enter
mov
xchg
add
pushf
popa
in
add
popl
mov
ja
mov
sbb
sbb
imul
dec
cmpsl
insl
or
adc
hlt
lods
sub
xor
or
das
lcall
inc
cmp
or
or
or
fbld
popa
add
mov
hlt
pop
add
dec
mov
add
fwait
and
pop
sub
adcl
adc
push
lods
or
pop
jno
lock
addl
add
cmc
imul
add
adc
ficompl
jl
sub
pusha
add
ja
fs
add
out
xchg
dec
pop
add
popf
jecxz
pusha
dec
pop
das
mov
and
cltd
pushf
sub
or
push
xor
xchg
fmuls
pop
cmp
pusha
fwait
add
pop
inc
sbb
adc
jo
push
add
lods
clc
push
adcb
imul
scas
add
xchg
inc
mov
popf
mov
add
sbb
iret
imul
xchg
and
mov
ret
rol
sbb
sti
and
mov
jns
pop
xor
and
mov
jb
jle
sbb
add
fisubl
cmpsb
lahf
xor
xor
or
repnz
test
ljmp
adc
xor
inc
push
loopne
repnz
pop
test
cmc
popf
sahf
popa
or
pop
mov
add
dec
or
cmp
add
hlt
jl
add
in
cmpsl
mov
fsubrl
dec
xor
ljmp
out
add
pop
stc
mov
cwtl
mov
mov
push
lret
xlat
pop
mov
mov
lock
andb
lret
sti
loope
xchg
mov
mov
add
ret
call
xor
xchg
dec
leave
mov
and
sti
dec
inc
in
push
add
rol
icebp
add
dec
xchg
push
xor
das
mov
xor
pop
pop
out
xchg
sbb
loope
insl
mov
push
adc
xchg
cmp
loope
and
bound
aaa
mov
mov
push
mov
nop
data16
jg
mov
in
scas
outsb
out
pop
ja
dec
add
push
adc
popf
icebp
dec
adc
adc
add
loopne
push
pusha
mov
xchg
adc
mov
jg
out
jl
jbe
sahf
add
jno
fildl
inc
adc
lods
fsubrp
fwait
jae
pushf
push
add
mov
jp
add
mov
mov
out
or
roll
pop
fwait
jbe
das
outsb
add
jno
ja
mov
cmpsl
ret
je
xchg
sbb
pop
aad
adc
popl
mov
lock
fldenv
inc
adc
scas
fucomp
out
pop
add
jge
std
cwtl
dec
out
jae
loope
add
add
int3
out
mov
sub
add
mov
jge
push
sbb
ds
pop
addr16
push
dec
inc
data16
pusha
mov
add
in
aaa
movsb
fisttpl
mov
sub
pop
sti
add
imul
add
arpl
popa
add
cmp
cmp
out
add
push
int
mov
leave
add
emms
loope
lea
cmp
inc
cld
fstpl
and
cmp
divb
jb
aam
jmp
mov
fadds
lcall
add
lret
mov
add
sbb
sub
mov
das
incb
in
scas
jo
or
xchg
lret
push
dec
int
add
in
jo
xor
push
pusha
xchg
movsl
divb
push
mov
loop
lds
xchg
add
clc
mov
add
cld
jecxz
add
call
xchg
cmpsl
push
pop
cmpsl
mov
mov
fsubp
ffree
add
push
adc
add
pop
leave
add
pop
sbb
xor
aad
arpl
cmp
and
repnz
add
sub
jg
test
or
nop
fwait
mov
mov
loop
and
rcrb
daa
jmp
lahf
or
add
inc
cmpsb
loop
rcr
hlt
pop
out
cmp
add
inc
and
cmp
iret
repnz
orb
das
jmp
jecxz
cmp
mov
jb
push
rorb
jecxz
sbb
jns
pop
adc
pushf
push
jp
repnz
adc
mov
jo
lock
or
adc
loop
jl
mov
cmp
add
jmp
add
push
or
outsl
idivb
pop
jecxz
lahf
xchg
fdivrl
lcall
mov
or
aam
cwtl
sub
dec
hlt
dec
mov
pop
mov
cmp
clc
add
mov
into
jl
lcall
in
frstor
jns
inc
js
add
cmpsl
xchg
test
jl
lahf
sbb
or
or
ret
dec
and
loopne
rclb
pop
push
cltd
pop
sbbb
pop
sarl
cmp
pushf
jae
jnp
add
add
bound
add
mov
jp
add
and
aad
add
outsb
cltd
mov
lret
xchg
push
xor
cmp
aaa
rolb
add
and
loop
fnstsw
add
je
inc
inc
testb
cmpb
push
pop
push
fwait
sbb
repnz
cli
or
push
sarb
dec
hlt
inc
mov
pop
pop
add
jae
xorb
push
mov
jp
mov
cmpsb
sub
mov
adc
and
cwtl
xchg
push
je
xchg
lcall
inc
mov
sbb
dec
mov
std
add
xor
sub
and
jge
push
mov
lock
test
fwait
xlat
dec
pusha
pop
iret
lahf
test
or
cwtl
push
pop
pop
or
repnz
sbb
gs
popl
sar
sbb
or
push
idiv
adc
icebp
clc
and
mov
out
lahf
mov
xor
sub
add
add
pop
mov
daa
mov
fwait
sbb
stc
add
sub
or
in
xchg
sbb
mov
insl
add
add
cmpsl
cld
je
mov
enter
pop
mov
adc
and
paddq
scas
incl
sub
inc
add
aaa
inc
dec
sbbb
add
nop
adc
add
fdiv
in
or
adc
push
lcall
stos
shrl
and
and
cmpsb
lldt
movsb
dec
stos
jno
mov
inc
pop
shlb
fstsw
adc
or
sbb
add
mov
call
cld
or
mov
outsl
mov
add
imul
sub
dec
cmpsl
mov
cmp
inc
jle
adc
jge
or
add
xchg
xchg
cmpsb
dec
push
mov
xchg
mov
ja
movsb
sbb
pusha
mov
jbe
aas
jge
les
cli
add
jne
push
push
ss
jl
dec
adc
mov
cmp
inc
out
lcall
test
sub
xchg
repnz
fdivl
popa
sbb
add
sbb
add
scas
fisubl
add
lea
jp
pop
sbb
iret
mov
add
sub
cli
cmp
lcall
xchg
mov
sbb
lods
arpl
lea
out
fcoms
jno
pop
decb
repz
pop
shll
fs
mov
add
jge
cmp
jae
sbb
mov
add
add
scas
add
rcrb
xor
dec
sbb
cs
pop
lds
adc
outsl
fsubp
ja
push
fbld
test
sti
imul
add
cmp
in
sub
push
add
in
xchg
outsl
sbbl
cmp
add
xor
cmp
mov
imull
rcrl
push
in
mov
adc
sbb
add
inc
and
mov
mov
or
add
or
and
sahf
dec
jbe
add
leavew
xor
jb
cli
pusha
push
clc
jo
mov
add
push
sti
rolb
shl
sub
add
and
lods
outsl
jp
daa
or
fistpl
mov
add
addb
xlat
leave
jecxz
nop
es
mov
aad
add
clc
scas
sbb
dec
out
inc
xchg
jge
outsl
push
sbb
adc
int3
test
test
add
fnstenv
stc
ds
movb
mov
cmp
mov
test
add
jle
fs
adc
rol
and
mov
jmp
dec
add
andl
mov
jl
mov
sbb
cmp
sbb
mov
fisubl
push
cld
push
adc
addr16
cli
ja
or
nop
dec
aas
subl
mov
loope
fwait
or
stc
dec
cmp
or
jg
adc
cwtl
icebp
lea
inc
out
stos
fstp
in
add
mov
sub
push
sarl
daa
mov
add
sub
fldl
leave
filds
cli
into
scas
cmpsl
jle
add
outsb
mov
jp
sbb
gs
pop
sbb
ret
pop
imul
jb
add
mov
pusha
repz
dec
loopne
mov
jns
and
xchg
pop
or
cld
shl
ret
inc
mov
xchg
pop
aas
xor
int3
jle
gs
jmp
icebp
add
inc
mov
mov
push
push
add
cmp
imul
fxch
cltd
add
push
popa
jl
and
lahf
outsl
xor
or
xorb
jl
mov
cmpsb
inc
pop
ret
shlb
js
jno
mov
std
jae
hlt
add
adc
ret
sbb
push
mov
inc
mov
dec
inc
or
jg
push
jge
ret
or
cmpsb
sbb
leave
hlt
mov
gs
stos
mov
inc
add
inc
mov
inc
dec
imul
jnp
outsl
shlb
subb
sbb
or
dec
sbb
fldt
cmp
or
dec
lods
js
fcoms
and
stos
jno
pop
test
and
mov
xchg
and
in
mull
or
movsl
fwait
outsl
xchg
ret
inc
test
mov
cs
fnsave
push
push
dec
add
mov
xchg
imul
mov
add
repz
xchg
or
fldenv
and
xor
adc
add
loop
cwtl
add
lock
mov
lret
idivb
into
arpl
pop
mov
sbb
jp
pop
jge
out
and
mov
dec
and
sub
add
hlt
mov
popl
sub
cli
and
push
f2xm1
pop
cwtl
int
sbb
scas
and
sbb
sub
and
mov
sbb
add
lret
mov
iret
mov
out
adc
in
cld
jno
jbe
xchg
into
lahf
lds
adc
mul
cmp
int
roll
sub
mov
mov
jmp
cmp
daa
push
xlat
add
push
lock
add
nop
cs
mov
mov
and
mov
nop
or
popf
fnstcw
push
decb
aaa
adc
pop
add
push
xor
add
std
pushf
call
and
andl
pusha
andb
in
and
adc
daa
out
sbbb
dec
ret
or
sbb
cmp
adc
iret
insb
mov
cld
adc
pop
xor
adc
jns
call
push
and
test
cwtl
and
xor
jl
jns
cmpb
inc
data16
add
sar
in
cs
jg
pushf
sbb
cmp
add
je
mov
into
push
add
sbb
imul
aam
addl
adc
sub
add
fwait
and
xchg
xor
aad
int3
mov
ret
incb
push
add
cmp
adc
sub
andl
insb
add
fldcw
fiadds
bound
and
jbe
sbb
testl
aam
sbb
jae
cwtl
xchg
out
xor
data16
add
test
dec
fildll
les
sbb
popf
pop
inc
mulb
ds
orl
dec
push
push
ds
add
push
movsb
cmp
push
and
mov
push
mov
dec
ds
mov
in
in
cmpsb
arpl
and
xchg
mov
mov
gs
rcll
fsubl
lea
mov
negb
gs
cmp
lahf
call
push
adc
xchg
cli
jl
inc
loope
mov
rorl
push
mov
stos
jae
cwtl
mov
out
in
loop
aad
add
fidivrs
sub
add
cmpsb
sbbb
popa
add
sbb
sbb
jmp
adcb
pusha
ljmp
inc
and
sbb
mov
mov
out
mov
add
jle,pt
add
xor
daa
insb
adc
mov
or
or
in
outsl
addb
call
sub
pop
sbb
int
adc
add
andb
add
rorl
loopne
push
pop
add
data16
fsubrl
adc
cmp
dec
pop
add
ljmp
and
dec
aam
pop
into
scas
cwtl
outsb
pop
add
mov
or
add
jns
lods
mov
adc
leave
jmp
sub
add
cltd
pop
icebp
call
mov
leave
das
xchg
loope
inc
mov
mov
add
lods
jle
and
in
add
les
and
clc
inc
outsl
mov
adc
mov
add
and
negl
and
push
dec
jb
adc
push
cltd
xchg
mov
jbe
push
inc
lcall
nop
mov
push
cmpb
or
movb
xor
cmc
pop
fcmovne
mov
and
xchg
stc
cmovbe
aas
push
ja
rorl
cmpsb
adc
fwait
jno
pop
int
lock
xor
add
or
sbb
inc
iret
leave
inc
fstl
or
fwait
mov
nop
add
push
push
dec
push
sarb
jae
mov
fisttpl
inc
test
jge
pop
loopne
and
add
push
add
popa
sub
add
sbb
jecxz
push
add
pop
pop
cli
negl
push
mov
add
sbb
ja
pusha
push
addr16
in
push
push
clc
mov
rcll
fs
sbb
sbb
int
add
inc
sub
cmp
or
pop
mov
jmp
inc
jae
andl
push
add
mov
loopne
in
inc
adc
lahf
jnp
sbb
lcall
leave
add
mov
movsl
add
sub
jge
andl
mov
add
adc
or
add
repnz
cld
and
adc
es
mov
ficoms
xlat
pop
lcall
push
sub
daa
push
clc
loopne
addr16
sbb
cmp
add
cmp
mov
push
and
orl
sbb
lods
cwtl
inc
add
ljmp
popa
imul
mov
nop
add
mov
dec
enter
add
pop
pop
imul
xchg
and
mov
push
out
mov
xchg
xchg
add
movsl
adc
outsl
pushf
pusha
bound
dec
sarl
adc
xor
int3
mov
clc
jbe
pusha
adcl
sbb
cmpsb
xor
sub
pop
shl
andb
mov
pop
lods
es
rcr
cmpsb
testl
add
aaa
cmp
cmp
add
sbb
mov
pushl
xor
movsl
imul
sbb
mov
popa
add
adc
add
mov
add
push
cmp
adc
add
or
jle
add
sbb
push
xchg
dec
popf
mov
in
xchg
mov
hlt
fs
mov
add
sub
mov
pusha
dec
nop
pusha
push
mov
sarl
adc
fdivr
add
sbb
outsb
scas
pop
cltd
mov
aas
sub
lods
sub
sbb
arpl
clc
iret
test
push
mov
test
xlat
fbld
or
push
sbb
xchg
add
xor
pusha
into
ss
cs
cmp
add
rclb
add
test
pusha
dec
dec
jg
cmp
push
pop
fidivrl
mov
cmp
inc
push
scas
add
pop
and
jb
mov
add
hlt
popf
bound
xor
out
add
stc
and
test
add
jns
pop
push
xor
xchg
bound
gs
dec
mov
push
add
pusha
dec
vpaddusw
sbb
ret
data16
cmpsl
sbb
xchg
scas
add
loop
aam
jno
sub
lock
test
adc
clc
pop
xchg
insb
push
and
lock
jae
or
addr16
xor
pop
imul
and
add
or
push
jecxz
fwait
ds
adc
cmp
inc
les
or
cmc
dec
pop
xchg
aas
scas
mov
sbb
int3
aam
xor
cltd
xor
dec
sbb
and
std
leave
push
sub
ljmp
add
movl
test
and
mov
sti
sbb
push
sub
pop
inc
stos
and
sarb
arpl
enter
dec
popf
add
jnp
push
iret
jg
fiaddl
in
ja
add
data16
add
outsl
hlt
imul
lock
or
dec
xchg
sbbl
adc
lea
jge
push
or
push
add
icebp
adcb
and
pop
push
ljmp
xchg
sti
xchg
mov
mov
add
add
xchg
adc
aaa
pusha
les
mov
inc
mov
push
add
fs
dec
jp
adc
sbb
mov
lds
mov
out
aaa
inc
sti
roll
push
xor
jb
inc
push
add
addr16
push
add
outsb
les
inc
cmp
lock
sub
push
rcll
jnp
sbb
and
cmp
sbb
dec
mov
push
scas
push
adc
add
in
inc
test
mov
movl
mov
cmp
popa
inc
xor
js
push
mov
sbb
add
mov
add
sbb
xor
add
int
lret
adc
subb
add
jmp
sbb
pop
xor
cmpsb
pop
ds
dec
and
stos
shll
add
cwtl
adc
adc
cmp
aas
rorb
mov
mov
sbb
cmpsb
xor
cmp
mov
or
sarb
scas
test
fisubl
fldl
sbb
iret
dec
pop
fdivrp
or
sbb
push
xchg
cmp
pop
add
xchg
int3
push
push
jl
push
mov
loope
mov
jg
jo
push
adc
popf
addl
cwtl
push
repnz
dec
pop
ds
xor
pop
xor
and
sbb
cmpsl
cmpsl
rcll
insl
push
cmc
cmp
imulb
add
cmp
fs
cmpsb
sub
mov
testl
xor
hlt
movsb
and
xchg
ds
mov
jecxz
aaa
fadd
mov
jp
adc
roll
push
aad
pop
lcall
fbstp
mov
push
std
dec
lds
inc
push
fildll
test
mov
add
sbb
loopne
mov
add
mov
test
mov
add
adc
xor
jae
xchg
add
fwait
inc
xor
hlt
sbb
cmp
or
test
or
jecxz
add
movsl
shll
dec
iret
add
in
or
rorl
jno
jg
arpl
add
cmp
add
push
pop
jns
add
add
adc
popf
adc
adc
sbb
mov
scas
rolb
ja
sub
add
mov
stc
mov
aaa
cmp
dec
adc
pusha
xchg
push
sbb
add
xchg
cmp
cmp
xor
jno
cmpsl
and
add
iret
loope
rolb
xor
int
mov
add
movsl
out
lods
and
add
mov
jae
insb
cli
rcll
xchg
sbb
dec
or
add
daa
dec
test
dec
insb
mov
inc
add
stos
inc
dec
dec
add
fildll
stc
test
inc
or
out
shll
jae
shrl
das
cli
cmp
ret
push
out
sub
sbb
imul
fldl
pop
inc
adc
xlat
sbb
cmpsb
mov
and
cmp
pop
popa
pusha
or
jns
andl
imul
lret
dec
or
jns
mov
testl
sbb
pop
mov
pop
add
out
pop
lret
push
xchg
add
lods
ss
outsl
xor
pushf
outsb
push
loopne
in
xchg
push
adc
mov
sub
mov
inc
mov
lahf
inc
or
pop
adc
movsl
jne
sub
mov
movsb
repz
imul
jle
add
push
movsl
pop
and
shl
add
jp
cmpsb
arpl
xchg
jo
jg
or
xchg
pop
dec
or
or
fisubrs
sbb
or
sahf
xchg
lret
int3
add
clc
xchg
adc
xchg
add
fwait
mov
add
and
iret
add
rcr
pop
mov
push
mov
ds
xchg
rcl
out
loope
xor
add
dec
add
scas
dec
addb
int3
rorl
mov
or
add
dec
movsb
cs
fists
lret
enter
mov
jo
fadds
xor
cmp
dec
jge
add
addl
shrl
cs
push
ds
dec
daa
lahf
xor
decb
cwtl
int
les
out
jnp
cltd
xchg
and
in
ret
fsub
mov
mov
mov
out
add
movsl
cmp
rolb
out
xor
arpl
mov
push
mov
cmp
shll
pop
testb
shll
jecxz
and
lret
movl
sbb
dec
mov
loopne
fldl
je
pop
lds
loope
outsl
sbb
add
mov
stos
orl
xchg
add
jns
push
je
gs
adc
adc
sarl
rcrl
or
add
mov
inc
mov
rcr
mov
push
iret
mov
insb
add
nop
mov
test
cmp
add
or
loop
sub
cmpsl
inc
jle
sahf
or
pusha
xchg
push
dec
jmp
add
rcll
push
or
mov
lcall
pop
les
sbb
add
test
dec
insl
pop
dec
xor
in
sub
mov
mov
ljmp
inc
mov
negl
push
je
pop
hlt
mov
push
adc
es
push
sub
push
arpl
testl
cmpsl
inc
loop
adc
sbb
rol
shrb
lcall
jb
mov
push
das
cltd
test
inc
add
cmpsl
stc
jl
cs
roll
test
add
ret
dec
sbbb
adc
jecxz
loop
cwtl
add
repnz
mov
add
dec
lea
cmc
mov
imul
sbb
sbb
sub
imull
push
add
lea
and
and
adc
push
add
cmpsl
push
inc
jne
add
push
loopne
insb
loope
cwtl
add
stos
or
add
test
sti
pop
xchg
and
xor
fwait
shl
sbb
faddl
jno
test
imul
sti
sbb
pop
add
dec
push
stos
enter
inc
mov
out
dec
ja
jno
std
lcall
movsl
mov
add
dec
and
cmpsb
frstor
add
pop
aad
popf
sub
dec
sub
xor
pop
mov
js
loopne
in
ljmp
ja
jp
shlb
cwtl
sbb
cld
rcrb
out
pop
add
out
fwait
xor
shr
mov
adc
data16
sub
in
stos
sub
mov
jb
jns
inc
fucomp
mov
std
ljmp
pop
fnstenv
add
fistpl
add
add
ljmp
xchg
pop
cmpsl
bound
add
in
leave
data16
add
testb
out
clc
pushf
add
sbb
pop
add
leave
arpl
jno
imul
mov
out
push
testl
mov
pop
js
jnp
or
lds
jecxz
add
push
out
rcr
sbb
jg
cmpsl
adc
or
js
xor
inc
test
testb
hlt
scas
mov
xchg
mov
jne
lret
xor
adc
add
movsb
movsl
fsubs
cmp
add
lret
mov
js
ret
xlat
stos
mov
and
cmp
add
pop
jmp
mov
cld
test
or
pop
inc
add
daa
mov
aas
cmp
dec
loope
pop
mov
pop
sub
cmpsb
and
dec
decl
adc
xlat
xor
les
mov
pop
xchg
sub
call
mov
cmp
ret
jmp
scas
sbb
or
les
add
lret
aad
jbe
out
fidivrs
sahf
insb
jp
jns
add
fildl
mov
xchg
test
cld
add
mov
or
insb
sahf
es
ret
mov
cmc
add
inc
sbb
inc
lcall
mov
jle
mov
mov
xor
sub
popf
hlt
enter
mov
and
jmp
fwait
leave
mov
pop
cwtl
pop
imul
pushf
bound
movsl
stos
nop
xchg
mov
in
add
data16
xchg
mov
add
pusha
hlt
mov
cmc
shrb
inc
test
or
dec
add
xchg
lods
and
repz
cmpl
push
stos
sbb
sbb
add
jnp
xchg
aam
push
loopne
stos
lods
cmc
popa
ljmp
pusha
mov
dec
mov
adc
push
adc
fcomps
rcll
adc
jecxz
sldt
or
jne
mov
sub
jl
roll
and
testl
mov
push
out
add
inc
dec
movsb
stc
aas
call
push
inc
xchg
adc
jmp
mov
sub
jb
out
add
movl
or
pop
ljmp
cmpsb
adc
dec
jge
add
cmp
push
inc
loope
stos
cli
jle
mov
push
pop
std
pop
sbb
test
in
das
adc
icebp
sbb
nop
mov
add
add
adc
push
std
xchg
repnz
fists
inc
fs
shll
jl
sbb
mov
fcoms
popf
gs
sahf
push
sbb
pushf
shr
ja
xor
repnz
pop
add
xchg
xor
mov
adc
jg
gs
add
xlat
int3
mov
lcall
shll
sbb
adcb
test
jo
push
pop
insl
or
test
inc
in
cmp
xor
mov
imull
push
inc
inc
push
and
mov
jbe
push
les
movsl
roll
lahf
sbb
sub
xor
les
repz
xchg
aas
ret
add
movl
pop
xor
dec
jp
mov
stos
out
add
inc
insb
or
cmp
push
pop
int3
and
sub
sahf
fmulp
add
adc
loopne
dec
imul
adc
add
fcmove
xchg
xchg
push
clc
cs
add
dec
sbb
rorl
das
lods
in
add
sub
setbe
add
jmp
xchg
out
sbb
test
adc
in
js
bound
adc
loope
mov
testb
jmp
lods
add
dec
inc
pop
aaa
add
jecxz
push
addr16
xchg
ss
and
flds
fwait
adc
aam
mov
ret
add
sahf
dec
imul
pusha
jge,pn
add
dec
stos
lahf
inc
push
pop
inc
sbb
jbe
add
out
cmp
add
orb
mov
clc
xchg
or
pusha
into
xchg
lods
add
cmpsl
adc
loop
add
test
xchg
jecxz
mov
add
data16
inc
dec
sbb
add
push
sbb
outsl
add
adc
rcrb
ret
adc
imulb
data16
daa
sahf
pop
cmpsb
xchg
out
mov
les
test
popf
fwait
addr16
shll
push
out
adc
ljmp
mov
adc
ss
std
adc
adc
mov
mov
lcall
and
dec
aad
pop
adc
push
sub
jp
and
and
dec
xchg
inc
xlat
ret
adc
in
xchg
insl
inc
mov
cmpsl
ror
int3
adc
xchg
fwait
test
mov
inc
arpl
xor
xchg
and
pop
add
xchg
add
pop
sbb
rcll
inc
jnp
push
dec
sahf
mov
jle
ficomps
outsl
js
and
data16
mov
mov
arpl
es
mov
enter
dec
pop
xor
inc
add
jo
fnstsw
pusha
icebp
add
imulb
lds
dec
cmpsb
xchg
sbb
popa
adc
clc
sbb
test
or
jb
das
add
dec
push
xchg
mov
sbb
jns
and
cmc
cli
sbb
xchg
add
nop
xchg
cmp
scas
cld
sahf
jae
adc
xor
jp
add
rcrl
rorb
adc
cmpl
jo
fwait
add
loope
je
dec
lods
cmp
mov
mov
sub
push
xchg
or
scas
sbb
inc
mov
xlat
je
stos
movsl
mov
sub
rolb
mov
int
pop
and
pusha
rolb
mov
sti
sbb
subl
sbb
jg
xlat
cld
fadds
or
jb
push
lea
sarb
mov
arpl
fnstcw
push
out
notb
xchg
orb
adc
dec
mov
xor
cmpsb
aas
sbb
ss
in
mov
es
cmc
add
mov
loop
gs
add
ljmp
int
fistps
lcall
cmp
cmp
out
xor
mov
loopne
cmp
mov
repz
call
loopne
xchg
sub
rorb
dec
out
and
outsb
addb
call
sub
or
dec
xchg
adcl
xor
add
pop
mov
mov
cs
add
in
lds
xor
xchg
push
pop
lods
out
inc
pusha
inc
push
mov
negl
rorl
add
dec
fs
or
jnp
inc
add
xchg
jl
cmp
cwtl
xchg
mov
fisubrl
mov
iret
int
mov
push
jae
lret
jp
add
add
mov
or
add
outsw
sbb
cli
xchg
mov
lcall
lea
jge
add
sub
mov
movsl
loopne
jae
push
push
adc
nop
sar
mov
out
cmp
xchg
mov
test
pop
sbb
lret
mov
adc
add
popf
jo
jae
push
adc
xor
mov
push
xor
or
hlt
test
lods
cld
adcl
cmp
flds
test
mov
dec
mov
inc
pop
aaa
arpl
ss
add
mov
std
add
insb
call
testl
in
rcrb
and
sbb
add
lea
lcall
aas
test
push
push
and
mov
add
pop
inc
loope
dec
ret
xchg
add
adc
add
mov
in
inc
or
add
push
pop
cmc
mov
sar
leave
int3
andb
adc
sbb
sub
push
std
or
pusha
mov
lock
shlb
push
mul
jbe
or
xor
push
cmp
mov
or
xchg
mov
movsl
jb
mov
ja
test
and
inc
cli
xlat
mov
cwtl
rorl
jb
push
lds
xchg
jmp
ret
push
and
cmp
jnp
je
aad
shll
jns
push
or
push
cmpsb
sbb
add
xchg
xlat
and
iret
cs
fdiv
pusha
push
xchg
gs
sbb
mov
push
loopne
js
stos
sub
xor
popa
or
in
mov
mov
sbb
aas
adc
sub
xchg
pop
lods
jecxz
sbb
xor
ficomps
and
std
mov
sbb
repnz
mov
loope
push
xchg
sbb
es
clc
jae
add
pushf
lret
lods
test
test
xchg
loope
imul
inc
inc
scas
stos
test
add
sbb
jbe
fimull
add
arpl
popf
add
xchg
aaa
and
or
cmp
test
lods
push
sub
sub
fildll
fiadds
je
jno
nop
adc
sti
ss
pop
int3
add
mov
xor
adc
lret
aas
xchg
add
jae
jmp
scas
loopne
fiadds
outsb
adc
and
xlat
add
mov
jo
xor
add
pop
cmc
or
call
sbb
jp
rolb
mov
push
outsl
push
jecxz
rcrl
sbb
dec
adc
xchg
adc
xor
push
enter
jmp
loopne
ljmp
xchg
add
fadds
in
xlat
cmp
add
adc
pop
sbb
jb
add
jmp
cmp
pop
or
inc
ret
inc
pop
int
arpl
sbb
jl
xor
xchg
xchg
fmuls
and
fnstenv
or
add
icebp
movsb
lock
push
int3
cs
inc
mulb
push
push
add
adcl
ds
iret
mov
fld
notb
arpl
sub
cmpsb
pop
rcr
push
mov
push
cmp
cmpsl
add
adc
sbb
out
add
sti
insl
sbb
lods
bound
jg
fisttps
enter
mov
sbb
repz
popf
mov
add
hlt
adc
inc
push
mov
rolb
movsl
jge
enter
shll
xchg
and
icebp
fs
divb
test
mov
mov
xor
int3
loopne
gs
mov
pop
movsb
into
pop
pop
loop
add
xchg
xchg
aad
add
sbb
xchg
add
cmp
out
fwait
dec
add
ret
int3
shrl
sbb
pop
add
jnp
cmp
sub
adc
in
out
sti
and
mov
sbb
xchg
and
dec
or
popf
or
add
mov
and
mov
imul
sahf
call
aaa
add
push
mov
pop
out
xor
sbb
aaa
leave
loope
imul
jae
je
fcmovnu
sbb
sub
or
pusha
loopne
dec
jo
pop
sbb
mov
add
pop
pop
scas
test
imul
fidivl
mov
ss
lods
andb
pop
push
or
push
std
add
sbbb
shl
lock
push
ja
push
add
nop
loope
add
and
fimull
sub
cltd
enter
jae
jecxz
fnsave
cmpsb
mov
adc
rcll
jo
sbb
sub
cwtl
jnp
mov
je
pop
imul
popf
insl
jmp
jg
adc
lock
bound
dec
jno
fiaddl
sub
xor
insb
pusha
adc
xor
aas
add
cmc
lcall
inc
push
lcall
fnstenv
fcomps
lods
cmp
sub
pop
mov
sahf
lret
cmp
mov
cmpsb
add
lahf
mov
adc
mov
mov
adc
ret
sub
sbb
jo
and
loope
push
xchg
mov
enter
loopne
add
mov
repz
test
push
stos
ret
rorl
addb
les
insl
inc
adc
mov
aad
jmp
mov
add
addb
scas
imul
jle
or
in
add
test
loopne
xchg
xor
add
orb
xcrypt-cbc
cmpsl
aam
aad
mov
add
gs
lods
mov
add
clc
mov
sub
in
or
mov
es
add
mov
pop
cld
outsl
inc
jecxz
sbb
jnp
rorb
in
lds
sub
pop
pop
outsl
faddl
pop
jbe
mov
flds
fmuls
push
fnstsw
add
std
mov
xor
push
mov
mov
push
and
stc
daa
xchg
add
fidivrs
mov
mov
and
mov
repz
jl
fistl
cmp
push
add
outsb
sub
add
jmp
addr16
add
pop
call
mov
pop
jmp
xchg
dec
subl
mov
lods
pushf
int3
cmpsl
mov
dec
cltd
sbb
aas
add
jge
rcrl
jbe
pop
loopne
sub
lahf
sbb
and
mov
iret
out
inc
lea
mov
jl
imul
aad
cltd
pop
fisubs
shlb
push
fstpl
stos
add
and
sub
cmpsl
scas
adc
in
mov
adc
into
insb
xchg
faddl
mov
xor
and
cmp
lret
add
cltd
mov
in
add
test
out
lahf
mov
adc
into
mov
add
ds
neg
xor
mov
adc
or
mov
cmpsb
sbbl
leave
loopne
fwait
pop
sbb
push
add
xchg
jecxz
bound
imul
add
adc
adc
add
bswap
sbb
cmpsb
jecxz
jle
sbb
lahf
popa
ret
add
scas
xor
hlt
and
pop
gs
cmp
inc
xor
cmp
cmp
sub
adc
inc
or
inc
mov
jecxz
repnz
sub
add
mov
imul
push
sbb
add
jnp
clc
int
les
push
or
aad
cmp
fiadds
stos
jns
jne
cli
test
testl
adc
xchg
ret
or
push
stos
pop
jp
jecxz
add
cli
ret
add
mov
pusha
mov
out
add
fisubl
test
out
or
aad
jbe
clc
inc
adc
ret
mov
lods
and
mov
add
push
in
fidivs
ds
call
sar
cmp
popf
inc
mov
mov
cmc
xor
cwtl
rcrl
loop
sahf
jno
popa
xor
test
push
push
repz
popf
arpl
mov
iret
xchg
push
popl
imul
jecxz
mov
inc
es
push
push
mov
push
add
cmp
cmp
les
orb
bound
jnp
sub
sbb
sahf
roll
gs
filds
dec
and
lock
xchg
cmp
xor
loopne
int
loopne
das
loop
sbb
bound
add
pop
and
mov
push
arpl
stos
dec
add
aad
iret
lods
mov
sub
add
scas
add
jmp
jg
cmc
xor
add
jp
mov
int3
add
notl
mov
pop
jg
sub
add
add
aad
and
jne
gs
or
push
insb
test
add
ret
xchg
sub
jle
in
add
dec
pushf
push
inc
nop
xchg
add
imul
pop
push
data16
sub
pushf
add
stc
fbld
inc
cmp
pop
enter
frstor
inc
add
rcll
add
insl
cmc
mov
add
outsb
xchg
js
mov
shl
jno
lcall
sub
test
hlt
mov
mov
ret
shll
arpl
push
loope
std
jg
adc
into
jecxz
out
and
cmpsb
xchg
aas
add
cmp
test
or
adc
lret
push
sbb
sub
mov
es
sbb
bound
cmpsl
fs
or
ficompl
ret
ret
xor
push
xor
pop
push
shl
add
into
fwait
stos
sub
filds
pop
and
or
add
pop
test
pop
stos
or
adc
popf
push
daa
push
out
shl
stc
mov
dec
pop
pusha
mov
je
int
pop
pushf
movl
jno
xchg
cmp
rep
loopne
push
enter
xchg
cmpb
jecxz
roll
push
rcrb
jbe
fidivrl
mov
test
adc
movl
inc
add
les
loopne
pop
xor
push
mov
mov
shrl
dec
aaa
cli
xor
lea
stc
sahf
and
frstor
cmp
push
and
jae
push
add
iret
cltd
or
jle
jmp
outsb
add
push
lds
jecxz
pushf
hlt
add
inc
push
mov
sbb
mov
jmp
aas
aaa
add
fs
mov
loope
push
or
sub
cltd
sbb
aad
loopne
pop
or
outsb
or
sti
test
fimull
popa
push
jnp
xchg
sbb
dec
jle
sub
inc
mov
dec
arpl
adc
pushf
into
jb
pop
add
dec
ss
xor
xchg
push
or
jns
jg
and
add
mov
in
outsl
cmp
mov
test
cli
jae
jecxz
and
lret
add
xchg
add
imul
cmpsl
sub
sbb
icebp
xchg
mov
push
ja
stos
cli
or
sub
push
leave
and
xchg
pop
adc
addr16
popf
mov
pop
mov
push
sbb
fadds
mull
daa
sub
iret
push
add
in
sub
out
stc
sub
add
imul
das
xchg
xchg
mov
movl
add
aaa
mov
pavgb
jbe
mov
out
ret
arpl
aaa
test
dec
pusha
scas
in
cltd
cmpsl
ds
sub
jb
or
lods
sub
cmp
push
add
jmp
adc
data16
xor
dec
mov
cld
add
push
out
sub
cli
cmp
inc
xlat
adc
xchg
cmpsl
shrl
test
ltr
lods
inc
push
pop
dec
loope
outsb
or
sbb
sbb
pop
add
cs
in
push
adc
cltd
add
pop
mov
jne
cmpsl
push
add
inc
out
cli
mov
xchg
add
push
pop
je
ja
sbb
lret
fwait
mov
pop
lea
xchg
add
dec
sub
enter
dec
test
add
push
gs
addl
dec
cmp
enter
out
add
fbstp
cmpsl
or
loope
sub
mov
ret
mov
adc
test
mov
sbb
movsl
fsts
push
add
mov
add
adc
scas
mov
ret
pusha
jno
add
js
mov
repnz
jae
lods
jbe
jge
jge
push
xchg
cmpsb
into
add
dec
ret
cs
jp
xor
push
test
inc
lea
cltd
dec
scas
in
fisttps
ljmp
test
pop
adc
mov
out
sti
add
jle
lea
aad
push
adc
shll
sub
pop
pop
in
xchg
divb
mov
xchg
bt
loopne
mov
js
rorb
mov
add
hlt
jg
mov
jge
mov
sbb
into
inc
mov
add
fnstcw
sbb
xor
sbb
mov
cmp
push
add
sti
cmp
pop
add
popa
insl
stc
cmp
sub
jl
inc
mov
and
push
lcall
cmp
ja
inc
loopne
mov
testl
notb
ljmp
lea
mov
xchg
sti
and
cwtl
mov
add
jp
lcall
mov
mov
add
and
adc
add
sub
adc
cmp
mov
dec
movsb
mov
sbb
cmp
adc
cmp
xor
add
cli
ljmp
pusha
fcomp
fisubrs
bswap
jecxz
or
lods
repnz
loop
sbb
pop
test
sbb
pop
adc
in
cmpsb
add
clc
cli
bound
and
daa
push
arpl
cmpsl
xchg
in
insb
mov
xor
addr16
xchg
push
mov
loopne
jnp
add
add
andb
jmp
insb
pop
testl
lea
shl
push
inc
inc
adc
add
ljmp
add
jno
adc
sub
add
sbb
or
dec
dec
scas
and
add
xor
int3
sbb
outsl
js
aaa
fcmovb
push
xchg
pusha
add
das
push
sbb
ss
add
fdivrl
insl
pop
push
adc
std
mov
mov
mov
add
aas
leave
xchg
inc
cmc
es
add
ds
test
add
or
add
or
pop
adc
xchg
xor
mov
or
add
roll
xchg
sti
ljmp
std
xlat
lcall
rcrl
sbb
sub
lret
dec
addl
shrb
mov
sub
adc
out
cwtl
pop
mov
jmp
cmp
pushf
mov
mov
iret
data16
out
push
add
mov
or
outsl
add
or
clc
nop
dec
add
add
xlat
xor
pop
add
fnstcw
push
adc
lods
outsb
loop
and
daa
cmp
ficompl
sub
out
add
negl
push
add
mov
or
sbb
jb
js
and
sbb
mov
repz
pusha
xchg
dec
lock
pop
fwait
add
add
jbe
loop
push
loopne
pop
ret
jcxz
dec
mov
pop
ljmp
pusha
mov
sahf
jmp
fistps
movsl
jae
loopne
lahf
bound
sub
push
xchg
popf
les
sub
cld
mov
and
int
roll
lret
add
lods
sbbl
lcall
mov
or
xchg
dec
roll
push
insb
cmp
add
add
add
mov
rol
addb
xor
sbb
pusha
jne
clc
sub
xchg
out
lods
pusha
stos
movsb
int
repnz
dec
in
add
and
cmp
add
xchg
sbbl
sbb
and
outsb
xlat
add
in
cli
dec
pop
adc
add
adc
arpl
xor
sahf
scas
add
je
cli
or
dec
mov
jne
add
ljmp
leave
inc
outsl
adc
inc
add
ror
ja
mov
add
sti
dec
inc
or
sbb
mov
cmp
mov
sbb
cmpsl
daa
pusha
xor
mov
cmp
les
sbb
cmp
cmpsl
fcomps
in
cwtl
shr
cmpsl
push
adc
xor
xorl
lods
dec
inc
cli
add
mov
add
into
add
push
lods
out
sbb
sbb
mov
fucomip
inc
adc
loopne
insl
sbb
cmp
lret
xor
or
push
int3
jmp
sahf
pusha
dec
sub
mov
inc
push
das
jb
dec
or
hlt
mov
xchg
mov
in
push
mov
sbb
cmpsl
add
xor
mov
and
add
sub
repz
stos
cltd
and
adc
fcoml
inc
xchg
rorl
test
jle
xor
movl
js
mov
lahf
add
lret
dec
add
sub
mov
icebp
add
or
xor
divl
bswap
cld
dec
add
sti
adc
test
repnz
ret
stc
pop
mov
cwtl
mov
and
outsb
insb
add
inc
in
pop
push
scas
inc
add
dec
xor
xchg
push
cwtl
je
xlat
shll
fsub
cltd
dec
adc
and
out
les
idiv
arpl
out
fstl
push
add
push
shr
add
pusha
adc
addb
xor
out
dec
aam
and
cmpsl
scas
hlt
daa
lcall
jmp
and
and
cmp
js
jnp
gs
lahf
push
push
mov
test
xchg
add
push
add
and
dec
cmp
mov
add
sub
insl
xchg
cwtl
data16
fstl
jae
pop
in
jp
arpl
insb
or
and
js
push
sti
dec
shlb
imul
stc
or
and
and
nop
lea
xchg
push
fwait
push
scas
loopne
jg
dec
mov
add
cltd
add
and
cmp
adc
cmp
add
mov
cs
adc
inc
popa
and
loope
rcl
aam
gs
jnp
and
cmp
inc
call
pop
add
pop
rclb
je
roll
pop
jle
mov
std
mov
test
packsswb
adc
mov
mov
cmp
in
mov
addl
mov
jno
xchg
repnz
push
out
stc
iret
fsubp
into
pop
je
out
mov
cld
mov
inc
fst
xchg
add
pop
jg
sahf
or
js
mov
pushf
adc
cld
push
hlt
ss
mov
sti
add
sub
mulb
lahf
out
dec
add
test
push
loopne
pop
dec
add
adc
icebp
rcrb
adc
sbb
dec
fstpl
push
icebp
add
mov
push
xor
fiaddl
scas
xor
stos
into
test
add
inc
inc
mov
jmp
inc
add
outsb
pop
add
sub
cmp
or
add
mov
in
sbb
addl
cs
adc
loope
and
fisttps
add
subb
in
mov
sbbl
das
add
add
lea
mov
popa
jp
icebp
add
cli
xor
pusha
add
in
push
sahf
and
mov
jp
mov
aam
xchg
add
jg
inc
or
dec
out
icebp
sub
jmp
push
stos
jb
or
pop
mov
xchg
das
push
mov
sahf
xchg
add
and
add
fsubr
xchg
mov
jne
enter
fwait
jle
das
push
xlat
xchg
gs
mov
shlb
mov
or
and
push
mov
pushf
mov
add
sahf
jns
aam
bound
lods
shlb
imul
add
lods
xchg
sbb
imulb
cld
xlat
and
call
ss
cmp
dec
popa
ljmp
inc
aam
mov
mov
xor
mov
xchg
pusha
lret
pusha
clc
pushf
mov
mov
xchg
cmp
leave
add
lea
mov
cltd
loop
fistps
add
or
inc
jle
cld
jo
cmc
test
adc
and
ret
jae
add
iret
pusha
ds
nop
pop
jnp
adc
in
or
inc
cli
popf
add
andl
leave
fwait
jne
mov
movb
in
sub
inc
and
pusha
sub
lret
xchg
push
lea
enter
fs
xchg
leave
add
lahf
pop
xor
arpl
push
gs
and
mov
xchg
sub
mov
call
lret
dec
sbb
ss
in
mov
xchg
stos
sbb
push
adc
pop
add
pop
cli
add
push
rcrb
add
or
adc
xchg
push
adcl
mov
inc
add
js
mov
gs
out
addl
xchg
mov
shl
aad
shl
pop
xorb
or
mov
cmp
ljmp
xchg
dec
das
enter
or
add
push
sub
dec
add
cmp
and
loope
or
push
cmp
std
mov
cmp
add
jl
jne
divl
push
into
cld
loopne
pop
subl
dec
add
pop
shlb
ret
rcl
das
add
sbb
stos
add
pop
testb
leave
add
sub
xchg
out
fsubrp
add
mov
xchg
jae
add
inc
mov
and
stc
inc
add
mov
adc
pop
lods
outsl
sub
loopne
and
lods
int
ja
adc
jns
stos
cmp
add
shrb
lods
dec
push
cltd
pop
addb
pop
cs
js
fiadds
data16
std
dec
cltd
push
jno
shll
push
adc
hlt
inc
adc
add
jl
push
pushf
cmc
adc
and
mov
jp
orl
pop
ret
sahf
fs
mov
adc
and
push
cmp
test
stos
jne
je
ljmp
leave
add
xor
cmp
test
adc
sbb
add
je
lret
pop
add
cld
pop
add
cwtl
mov
rclb
add
sti
fcomps
push
popf
ret
lods
daa
aam
jle
mov
cld
push
xchg
or
dec
loopne
xor
stos
cmpsb
and
jl
test
push
mov
mull
mov
sar
push
sbb
ljmp
add
out
jno
add
jb
insl
dec
andl
cmc
and
stos
add
rorb
jmp
repz
lock
mov
cmp
mov
jle
clc
add
les
pop
push
mov
nop
add
test
movsb
xor
inc
mov
push
inc
mov
add
fisttps
loopne
inc
push
sbb
xchg
xchg
sti
out
in
add
and
aas
pop
xor
add
add
mov
out
jmp
addl
dec
cmpsb
sbb
movsl
aad
lods
mov
mov
push
xchg
movl
sti
clc
dec
or
jecxz
add
pusha
leave
mov
cs
adcb
adc
adc
outsl
inc
les
xor
sbb
add
push
pop
jo
xor
mov
js
repz
add
test
and
inc
sbb
dec
add
lret
xlat
cld
jmp
shl
jno
sub
fiadds
sarl
arpl
aam
ljmp
mov
ret
pop
mov
or
and
add
and
add
loop
loopne
sub
add
mov
enter
inc
mov
fidivrl
sub
divb
imul
add
cld
xchg
add
dec
add
mov
push
add
xor
aam
lods
mov
test
cmpsl
fildl
dec
lcall
les
pop
scas
aad
orl
inc
dec
adc
ds
jge
daa
sbb
stos
dec
xor
insl
xchg
adc
and
jle
hlt
xchg
inc
int
xor
stos
push
mov
insl
cmpsb
jo
sbb
in
jmp
fsubrl
and
xor
rorb
add
xor
int3
cmp
push
lock
out
adc
scas
ds
sbb
out
fadds
lcall
scas
add
test
inc
add
cmc
cmp
adc
xor
imul
mov
adc
push
jbe
test
into
fisttpl
push
add
pop
fadds
mov
xor
sbb
sbb
add
push
cmp
mov
push
adc
inc
jae
movsb
enter
sbb
shl
dec
das
dec
push
mov
cmp
in
lret
bound
add
sub
adc
sub
test
add
outsb
cli
enter
or
jp
push
cmp
push
add
cltd
in
xchg
xchg
adc
push
std
add
pushf
xchg
mov
add
jno
loop
add
jnp
mov
cmp
push
insl
sbb
cwtl
xchg
cmp
imul
out
or
xlat
mov
outsl
jb
xor
pop
loope
add
jmp
clc
push
fsubrl
add
icebp
pop
mov
nop
rcr
add
out
movsl
xor
mov
add
mov
ret
test
rorb
and
in
das
insl
and
test
cmc
daa
xchg
sub
pavgb
add
das
pop
add
out
loope
into
out
add
test
xchg
aas
lock
mov
inc
jne
popf
pusha
inc
stos
xor
add
pusha
jg
mov
popf
pop
add
dec
mov
push
aam
imul
popf
int
sbb
dec
add
inc
in
sahf
xor
lret
add
xchg
mov
fcompl
jge
inc
clc
xchg
jo
xchg
pusha
mov
mov
push
jecxz
push
mov
add
in
clc
mov
stc
mov
ljmp
mov
test
rcrl
loop
cmp
mul
mov
out
aam
add
mov
mov
cmp
jmp
inc
call
jecxz
pop
inc
pusha
mov
cli
icebp
pop
cli
mov
mov
jnp
xchg
int3
dec
sbb
scas
add
sbb
in
add
es
or
dec
mov
rorl
lret
push
push
aad
xor
jns
fldl
pop
or
insb
sbb
test
cmp
fsts
pop
xlat
int3
xor
out
pusha
pusha
imul
psubb
adc
sub
jle
adc
xor
mov
sub
lret
mov
and
push
dec
sbb
ds
jp
mov
add
jmp
icebp
nop
push
and
inc
add
and
in
cwtl
fs
and
outsl
cmp
mov
adc
cmp
cwtl
pushf
pop
add
mov
ret
add
inc
jae
rcll
add
loope
cmp
add
mov
and
cltd
and
pop
sub
fisubrs
jne
cmp
mov
add
out
call
sahf
cmp
push
dec
loopne
cs
shll
andl
aas
aad
add
out
fdivrl
loope
lcall
xchg
cmpsl
stc
add
jns
pop
add
std
fildll
fisubl
das
pop
sbb
add
nop
xor
cmpsb
imul
add
loope
and
push
test
jmp
jns
jne
mov
or
add
xor
add
jle
fisttpl
inc
push
call
and
insb
jecxz
cmpsb
xchg
jne
pop
pop
jle
jg
les
or
cmpl
add
cmp
mov
add
fsts
enter
dec
mov
ljmp
jae
mov
xlat
adcb
cmc
jl
inc
bound
cmp
mov
sahf
and
sub
inc
lret
mov
daa
out
rolb
pop
mov
out
push
sbb
jnp
fimull
repnz
test
adc
mov
jge
stos
xchg
pusha
push
jnp
xchg
scas
sub
xchg
call
repnz
loopne
inc
adc
mov
arpl
push
add
filds
movsb
sub
in
add
xlat
jno
aas
loopne
enter
cmp
pop
pop
add
les
jo
pop
add
lcall
push
xlat
dec
xchg
popa
lret
push
add
inc
fldt
adc
movsl
mov
mov
lcallw
and
pusha
cmp
adc
jg
out
cwtl
pusha
out
xchg
addl
fistl
fs
jle
push
insl
mov
xchg
sbb
xchg
inc
push
add
incb
mov
outsl
pusha
cli
cmp
xchg
pop
fmull
push
test
xor
popf
popf
mov
adc
dec
adc
and
pop
stc
adc
and
sbb
ss
mov
cmpsl
fstl
shl
lea
push
test
dec
and
sahf
mov
add
mov
incl
push
out
lock
sbb
pop
cld
jno
imul
pop
das
adc
leave
mov
dec
add
fbld
jo
cmpsl
push
add
jmp
sub
add
sub
std
adc
mov
jae
sub
add
sub
push
popf
add
mov
call
sub
and
xlat
pop
daa
and
mulb
push
arpl
out
pop
faddl
stc
add
decl
jnp
cmpsl
repnz
fwait
pusha
in
imul
aaa
adc
loop
stos
repz
fstpl
pop
sbb
adc
mov
imul
test
adc
stc
add
add
add
and
or
add
movsb
lret
xor
xlat
in
in
jnp
addr16
and
scas
push
sbb
dec
adc
lea
arpl
mov
fnsave
imul
aam
imul
add
fwait
out
or
and
inc
mov
aad
ds
pushf
lods
fdiv
shlb
xchg
push
aad
inc
cs
jo
dec
pusha
and
and
adc
sbb
out
fiadds
loope
inc
push
and
into
das
aas
and
push
cmp
dec
jecxz
sub
out
cmp
imul
mov
test
adcl
push
mov
je
js
repz
jno
xor
pusha
movsl
mov
xchg
jecxz
adc
out
mov
popa
and
and
pop
mov
jnp
jg
inc
dec
out
pop
adc
xor
inc
pop
pusha
ficoml
ficomps
xorb
xor
mov
ret
adc
dec
adc
outsb
pop
std
cmc
sbb
mov
sub
dec
mov
test
out
add
sub
cmp
inc
scas
insl
mov
mov
rorb
cmp
jl
inc
repz
leave
mov
aad
push
lahf
rorb
popf
inc
ret
add
insl
add
mov
repnz
push
mov
in
jge
mov
out
push
push
add
ds
cmp
push
sbb
les
lcall
add
fwait
xor
pop
loopne
shlb
mov
add
mov
push
loop
mov
insl
add
xor
fstps
push
loope
adc
fadd
adc
xchg
mov
sbb
add
bnd
shlb
pusha
fwait
or
adc
push
sub
inc
and
loope
vmovsd
or
jb
dec
stos
fimuls
out
xchg
add
arpl
outsl
jo
pop
add
fprem1
inc
stos
bound
fdivs
xlat
add
adc
add
jbe
xor
add
dec
negl
fildll
add
jno
add
jmp
lds
test
aad
mov
cmp
add
sub
sub
or
fdivrs
lods
push
add
and
insb
add
sbb
pop
add
cmp
outsl
push
add
inc
subb
mov
inc
jno
and
xchg
in
std
lods
shr
test
sub
aas
sbb
sub
sbb
add
push
pop
xor
rdmsr
adc
pop
adc
push
clc
cltd
out
insb
orb
and
shll
andl
je
add
add
loope
pop
sbb
jno
flds
sub
push
clc
jne
sbb
je
push
mov
mov
adc
inc
scas
and
cmp
popl
popf
push
and
push
btr
arpl
adc
out
mov
stc
in
popf
cmp
dec
shrl
ret
adc
add
pushf
or
inc
lods
xchg
loopne
adc
xchg
add
arpl
pusha
and
pop
les
pop
popfw
push
mov
int
pop
mov
sbb
mov
stc
std
xchg
in
adc
pop
ret
mov
mov
adc
or
mov
sbb
push
mov
cmp
out
idiv
xor
ret
mov
and
pop
je
fldt
or
pop
add
pop
sub
add
push
bt
movsb
jg
cmp
insl
push
aam
les
xchg
sarb
inc
popa
test
addr16
mov
jne
sbb
adc
jle
cmp
lods
cmp
and
push
in
aas
scas
pop
test
jg
rcr
fistps
aaa
inc
cmpsl
popf
add
mov
mov
loope
fldcw
sbb
xor
jnp
pop
jne
add
or
dec
push
mov
xchg
cmpsl
lret
xchg
sub
lds
ficoml
and
mov
inc
adc
jle
add
jb
add
sahf
cmp
add
daa
sbb
adc
andb
add
mov
mov
pop
jecxz
xor
sub
or
aam
inc
inc
jp
adc
ret
repnz
fisttpl
dec
mov
mov
ror
test
lcall
dec
sbb
js
stos
pusha
push
sub
shl
incb
pop
add
lret
dec
ret
call
adc
or
xchg
in
out
jecxz
aam
add
add
leave
data16
pop
insb
dec
add
insl
fs
mov
pop
lea
aaa
dec
or
stos
push
push
lahf
xchg
test
jo
xchg
or
loopne
out
and
push
pop
jmp
cmp
nop
gs
cmp
mov
lret
mov
lcall
ret
push
cwtl
ds
or
push
add
push
movsb
adc
popf
cwtl
mov
jg
xchg
push
mov
leave
rcll
jne
jl
addr16
cltd
push
loope
jno
and
xor
inc
mov
mov
mov
add
sahf
xor
pop
adc
sbb
pop
xchg
lcall
xor
int3
cmp
push
mov
mov
loopne
imul
push
nop
loop
or
popa
clc
inc
adc
push
lea
and
popa
loopne
inc
ljmp
out
movsb
imull
in
add
xlat
xor
add
out
addr16
pusha
lods
pop
sub
sbb
xchg
add
push
push
rorb
push
add
pop
mov
movb
vpmuludq
das
addl
cmpsb
out
add
cmpsl
or
dec
and
or
aaa
int
pop
out
add
and
lods
xor
pop
test
add
cli
notb
loop
xor
adc
les
arpl
decl
mov
add
fisubrl
and
aad
mov
add
in
mov
xlat
out
cmpsb
push
cmp
ret
test
add
je
das
loopne
sub
cli
icebp
and
nop
insl
push
or
cmp
pusha
add
popf
xchg
add
and
jecxz
xchg
mov
int3
or
inc
xor
sbb
loope
adc
mov
in
mov
mov
jle
push
or
cmp
test
imul
nop
fwait
in
cmp
dec
sbb
cmp
jecxz
pop
movsl
add
push
and
mov
stos
add
mov
cmp
loopne
lods
inc
dec
jb
ret
jl
mov
and
mov
insl
cmp
dec
xchg
add
aad
jmp
test
ss
sbb
mov
shll
xorl
cmc
aad
cmp
xor
loope
xor
xchg
hlt
hlt
fadds
dec
ret
cmpsb
call
push
ljmp
adc
mov
inc
loop
movsl
jno
aam
or
sbb
pop
loope
lret
or
pop
cli
push
or
fwait
sbbl
test
inc
into
xchg
lcall
fidivrs
sub
in
jecxz
xchg
add
addl
aas
fidivrs
push
xor
sahf
andb
adc
ja
mov
insl
hlt
xchg
jle
add
sbb
loop
and
xor
push
les
mov
lcall
add
sahf
push
test
cmp
popa
push
insl
movsl
jmp
and
loopne
loop
rdmsr
or
mov
add
orl
and
aas
in
sub
adc
pushf
inc
jnp
inc
sbb
out
call
push
mov
add
jmp
jecxz
outsl
sub
or
mov
add
shl
test
repnz
sub
sbb
push
pusha
enter
mov
mov
in
dec
sbb
enter
aaa
pop
mov
sbb
add
lcall
fsubl
or
or
pop
sub
mov
pusha
xlat
ror
and
jl
enter
or
ficoms
pop
fwait
mov
add
fstpt
cli
pop
clc
mov
add
xchg
outsl
nop
add
xchg
lcall
shrb
xor
push
movsb
cmp
mov
iret
jecxz
cmc
xor
invd
std
push
add
cmp
pop
sar
inc
fmull
add
sbb
sub
jmp
loopne
int3
sub
and
mov
es
sub
inc
sbb
mov
scas
mov
lods
pushf
add
out
push
mov
add
mov
sub
orb
and
mov
pop
nop
add
pop
je
add
cwtl
inc
mov
subl
push
jnp
sbb
sbb
add
popa
push
loop
mov
ret
bound
rclb
flds
lahf
lcall
add
iret
sub
add
rclb
add
sahf
pop
imul
sti
pop
sub
inc
int
fbld
push
mov
rolb
in
push
pushf
sbb
xorb
push
int
xlat
cltd
scas
mov
and
outsb
aam
cmp
add
mov
pusha
data16
les
or
dec
je
dec
xchg
loopne
mov
sbb
or
addb
cmp
pop
and
popl
test
lcall
into
adc
adc
adc
add
ds
dec
xor
add
and
mov
pop
adc
cmpsl
aaa
sahf
pop
dec
add
inc
cmpsb
stos
dec
dec
adc
fisttps
push
sbb
dec
cmp
add
sbb
add
cmpsl
pop
icebp
mov
xchg
out
sbb
push
jmp
mov
xor
jp
xchg
stos
in
mov
sti
in
xchg
mov
sbb
loop
and
xorl
add
inc
sbb
ljmp
inc
mov
into
push
in
mov
cwtl
mov
sbb
lds
xor
lahf
inc
mov
pusha
or
xchg
add
pop
add
push
jmp
or
pop
adc
test
das
push
mov
add
gs
shrl
jae
add
outsb
jnp
decb
jl
add
and
mov
cld
pop
push
add
out
cmp
inc
xchg
lods
xchg
cld
gs
sub
sbb
fwait
inc
add
bound
mov
pop
cmp
leave
add
insb
pop
loopne
enter
sbb
stos
cmp
fldenv
add
hlt
xchg
xor
imul
test
dec
jle
lea
mov
add
popf
push
sbb
jns
loop
sarb
add
rcr
repnz
movsl
adc
mov
mov
sub
scas
adc
add
jbe
std
cli
cs
and
dec
push
addr16
jmp
cmp
inc
fwait
pop
add
mov
push
addr16
addl
out
in
add
pusha
lret
xchg
push
cmp
sahf
fwait
jle
xchg
mov
jne
xchg
hlt
out
add
jmp
mov
out
ret
push
mov
pop
rcll
sub
or
out
push
adc
iret
add
adc
out
lea
add
imul
ret
xchg
andb
jge
xchg
mov
cmp
dec
icebp
scas
pop
jno
xor
loope
adc
cli
jno
andb
insb
mov
jbe
sub
push
pop
inc
mov
lods
cltd
bound
es
add
mov
std
roll
ret
adc
arpl
add
ja
mov
stos
cmp
cmpsb
mov
sti
js
sub
shrl
push
push
xor
sbb
movl
test
in
filds
adc
pop
cmp
push
movsl
inc
mov
pop
sbb
pop
movl
push
fnstenv
mov
adc
std
inc
adc
add
cmpsb
leave
pop
rolb
mov
loop
add
sbbl
push
cmp
cltd
add
mov
jno
pop
push
je
inc
add
dec
out
sub
add
mov
jle
pop
cmp
repnz
add
das
lret
or
iret
add
pusha
inc
sub
arpl
dec
setns
loopne
sbb
adc
pusha
mov
add
add
lret
jecxz
in
pop
lock
jle
sbb
xor
insb
pop
push
sub
adc
pushf
popf
jbe
push
es
loop
sbb
xchg
out
add
inc
fs
shll
sub
or
pop
nop
mov
add
fldcw
add
adc
mov
pop
push
add
sub
mov
cmp
xchg
sbb
fs
arpl
fmuls
out
repz
pop
add
test
xchg
idivb
out
data16
dec
fdivl
xchg
pop
add
hlt
or
loopne
test
mov
pop
mov
sbb
xor
adc
add
mov
jp
mov
aaa
xor
mov
and
xor
adc
add
ret
outsl
shlb
sahf
push
mov
sub
cmp
call
add
adc
add
pop
or
mov
jge
xchg
mov
add
popa
dec
repnz
mov
imul
sbb
setge
outsl
push
and
cmpsb
add
cmp
push
and
movsl
js
pop
mov
mov
pop
ret
insb
int
xchg
and
add
scas
pop
and
dec
out
clc
loop
mov
ljmp
push
xchg
xchg
dec
fisubrs
sbb
add
mov
sbb
ds
inc
cmp
xor
adcl
mov
adc
cmpxchg
mov
ret
and
mov
jp
popf
pop
lds
mov
imul
add
mov
push
add
xchg
pop
das
xchg
add
push
scas
loopne
and
dec
add
sbb
adc
arpl
adc
dec
jnp
dec
jb
lahf
sarl
rolb
cmp
dec
in
dec
ret
add
xor
xchg
add
cwtl
add
jmp
pushf
inc
add
adc
add
jne
push
add
pop
pop
or
lret
pop
push
loope
out
adc
or
rorb
inc
in
lods
into
add
lahf
jp
add
imul
add
into
xor
xchg
add
xchg
aaa
or
pop
jns
adc
jne
test
outsb
adc
das
shll
ret
or
movsl
stos
add
push
lods
iret
faddl
fwait
push
mov
xlat
add
cltd
int
icebp
and
ja
divb
pusha
mov
mov
and
sbb
inc
aad
fiadds
add
mov
insl
stc
or
outsb
andl
lea
jmp
add
add
xor
inc
mov
ficoml
sahf
test
sub
test
nop
push
add
stos
xor
mov
ficomps
push
pop
push
mov
fists
popa
add
into
cmp
cmpsl
cld
mov
inc
sbb
popf
add
pop
push
test
push
add
loopne
fadds
cwtl
push
add
lods
pop
pop
aam
test
nop
pop
xchg
out
outsb
out
stc
loopne
icebp
inc
push
push
mov
pop
filds
pushf
add
pop
pop
add
mov
push
cmp
out
add
adc
fdivp
xchg
dec
jo
adc
sbb
add
dec
addr16
test
push
addr16
mov
mov
jl
loope
fcoml
test
sub
test
xchg
adc
inc
dec
iret
lcall
ds
add
add
or
mov
cmp
cmp
dec
into
js
movl
in
loopne
stos
jno
pop
add
pop
pop
dec
add
jmp
xchg
and
add
jo
fcompl
xchg
cmpsl
adc
movsl
or
sub
or
push
adc
call
mov
pop
add
ret
sub
test
add
mov
scas
jbe
out
test
xchg
je
dec
mov
add
testl
cmpsb
dec
dec
sarl
nop
dec
jns
add
sbb
inc
rol
and
sub
add
cltd
data16
fidivrl
xchg
fadds
sbb
sbb
add
jno
cmc
inc
stos
fbstp
add
cli
mov
push
dec
test
jno
mov
add
xchg
incb
or
dec
sti
add
dec
or
xlat
jnp
cmp
push
inc
test
lret
test
xchg
add
inc
dec
stos
mov
or
sub
mov
test
out
dec
add
loope
enter
leave
out
or
sbb
ret
scas
inc
add
loop
sahf
lods
fcoms
add
dec
ficoms
add
mov
add
mov
add
add
mov
es
popa
push
xchg
adc
add
inc
insb
xor
or
push
mov
outsl
loop
rclb
add
jbe
repz
out
or
mov
push
jp
outsb
es
add
xor
xchg
loope
ffreep
xchg
adc
xchg
or
and
jge
pop
daa
sub
mov
dec
push
xchg
add
and
mov
push
scas
mov
adc
xchg
xlat
stos
add
scas
aad
aaa
inc
loop
add
adc
stos
sahf
mov
dec
jne
arpl
add
dec
inc
dec
imul
inc
jg
xlat
stc
loope
add
mov
pop
cmpsl
into
jnp
add
xor
cld
add
or
outsl
enter
loop
shlb
or
adc
cmc
jecxz
mov
repnz
xchg
ja
aad
rolb
cmp
cmc
jg
add
test
xor
inc
jbe
and
aaa
adc
inc
cmp
outsl
loope
sbb
cmp
mov
loop
rorl
and
loopne
lahf
in
jno
sub
jns
add
enter
call
fsts
and
mov
adcb
or
into
out
and
gs
test
sbb
aaa
pusha
jg
dec
es
fs
rclb
sbb
aam
and
add
outsl
clc
scas
testb
rcrl
outsb
int3
shll
rolb
jmp
and
bnd
push
or
mov
add
xchg
pusha
fcmovb
mov
xchg
repnz
push
aam
aas
enter
outsl
mov
ret
pushf
cmp
loopne
pop
aaa
jmp
aam
testl
in
popa
mov
add
xor
mov
test
xchg
add
stc
jg
add
pusha
mov
shll
add
sub
and
inc
jae
add
jl
in
add
rcr
adc
lcall
mov
mov
push
fdivl
mov
add
fdivp
fiaddl
insl
leave
mov
mov
and
xor
mov
pushf
insl
nop
test
pop
test
mov
dec
loopne
mov
call
sbb
cmp
xchg
mov
xchg
sarb
loop
xor
pusha
int3
hlt
and
xchg
test
pop
mov
dec
repz
mov
add
adc
mov
les
push
mov
call
or
scas
xchg
xchg
loope
or
ficoms
add
fsubrs
mov
mov
lret
pop
or
popa
mov
loop
pop
fnstsw
or
shlb
orl
adc
in
add
pop
xchg
mov
or
lods
sbb
gs
cs
scas
add
shrb
nop
ret
add
inc
jl
mov
jecxz
aaa
pop
adc
loop
clc
std
fcmovne
mov
mov
jmp
lods
pusha
iret
or
mov
je
cmpsl
mov
rcrl
shr
fs
push
xchg
add
xchg
movsl
mov
aam
sub
add
push
popa
cmp
cmpsb
add
dec
push
add
scas
std
xor
cmpl
inc
inc
rcrl
mov
int3
mov
add
mov
loopne
in
push
mov
js
sbb
xor
pop
xor
sbb
in
nop
add
mov
mov
std
lcall
hlt
adc
movsb
add
pop
dec
pop
or
les
lcall
je
jmp
mov
mov
push
stc
fisubrs
lods
pusha
in
clc
sbb
cmp
andl
cld
jp
adc
xchg
mov
xchg
mov
out
mov
push
inc
in
push
lock
and
popf
xor
adc
cli
dec
jmp
pop
or
lock
inc
daa
mov
rcrb
jp
insl
rcll
add
dec
jne
pop
sbb
add
lock
imul
dec
add
mov
mov
popf
cli
in
mov
sti
mov
out
cmpsb
cmp
xchg
outsl
cmp
popf
in
add
adc
add
pushf
adc
add
and
jmp
in
xchg
xor
and
add
aas
push
mov
stc
cmp
mov
mov
cs
fsubl
add
mov
cmp
inc
mov
cli
call
jbe
js
rcrl
xlat
pop
cwtl
fisttps
jp
imul
push
lahf
cmp
scas
mov
sbb
jo
cmpsl
mov
outsb
addb
add
xchg
pop
das
rorb
jge
cld
xchg
mov
add
mov
leave
inc
add
jmp
dec
sbb
add
jp
insb
pusha
aaa
push
or
fstl
add
outsl
cmp
xor
xchg
call
cs
lock
pop
adc
push
mov
ss
adcb
mov
pop
ret
stc
add
sbb
lds
pop
frstor
adc
add
lret
mov
stos
loopne
or
sub
dec
iret
sbb
and
or
outsl
jecxz
add
mov
test
adc
push
add
iret
enter
dec
stc
and
lret
icebp
ret
pusha
sub
pushf
add
add
push
jnp
add
and
fwait
add
push
xlat
jne
mov
xchg
pop
adc
shlb
add
les
adc
mov
jnp
ljmp
ffreep
test
add
inc
cmp
lahf
in
add
or
pop
inc
insl
movsb
cmpsl
cmpl
sbb
push
clc
fistl
mov
aam
fbstp
mov
add
push
js
add
out
cmpsl
cmp
inc
ss
fcmovnu
pop
inc
cmp
add
cmp
subl
cmp
into
xlat
js
or
test
lea
out
lcall
ss
fwait
stc
leave
add
dec
pop
add
sub
mov
addr16
xchg
jns
cmp
cmpsl
cmp
loopne
jl
mov
outsb
add
rolb
dec
pop
roll
adc
jo
inc
lcall
ret
push
sti
or
inc
ret
popa
shll
inc
push
sbb
addr16
add
lcall
add
lods
mov
scas
aam
sub
and
loopne
mov
lret
gs
add
mov
xchg
and
scas
push
add
enter
andb
adc
xor
sbb
xchg
sub
mov
cmp
icebp
inc
add
push
push
adc
sbb
and
pop
test
repnz
add
cltd
sub
add
mov
popa
add
ficoms
push
and
enter
mov
push
scas
loope
ja
pop
add
xchg
sbb
or
sbb
mov
add
pusha
cld
roll
push
out
subl
lret
mov
insl
int
insb
and
lcall
shl
sbb
ficoms
arpl
inc
xchg
bound
shl
imul
scas
call
inc
cmp
push
or
cs
aaa
test
xchg
xchg
sbb
cltd
lcall
jns
xchg
sysret
sub
std
faddl
pop
enter
adc
ror
loopne
adc
add
mov
sbb
sbb
call
pop
xchg
pop
adc
mov
outsb
adc
xlat
push
pusha
test
and
ret
or
xor
stos
popa
xchg
mov
and
jo
xorl
xchg
in
jecxz
das
adc
push
sbb
cs
call
push
adc
dec
dec
mov
inc
fists
fisubrs
int3
mov
add
sahf
jl
sub
push
dec
test
in
push
cs
loope
dec
sub
sbb
outsb
pop
mov
adc
and
or
push
hlt
js
dec
icebp
pop
rclb
out
frstor
pop
test
cld
add
add
mov
cs
pop
lds
pop
leave
mov
lods
adc
add
inc
mov
stc
xchg
lret
scas
or
lret
cli
imul
cwtl
add
shlb
push
mov
loope
hlt
sbb
xchg
cltd
adc
ret
popl
inc
shll
xor
pop
and
inc
test
arpl
imul
add
pop
popa
dec
jnp
nop
daa
add
mov
aad
setae
add
pop
cmp
add
pop
jle
mov
sub
scas
shrb
add
rcl
or
popf
dec
add
dec
mov
inc
rcrb
add
cmp
pop
out
test
ret
mov
in
pusha
pop
leave
lret
mov
add
mov
lods
ret
inc
push
rorb
notb
cmp
stos
or
xchg
sbb
jbe
jae
pop
add
pop
xchg
sti
dec
xor
filds
hlt
mov
stos
fildl
sarl
push
xchg
push
rolb
mov
cld
std
gs
daa
mov
dec
pushf
sbb
and
gs
inc
loop
xchg
add
lcall
loopne
add
cmp
scas
jp
mov
add
xor
jb
dec
loop
mov
es
in
ds
dec
or
fwait
push
add
and
push
sarl
cmpsb
jae
or
cld
fcoms
add
mov
stos
add
sub
xchg
inc
and
mov
sahf
cld
fcompl
out
mov
xchg
push
into
js
jmp
mov
add
mov
in
jp
rcl
or
mov
sbb
add
add
call
aad
xchg
imul
push
add
or
ja
push
cmpb
lods
fsubl
mov
fcmovnb
xchg
and
add
sahf
stos
lahf
mov
and
cmp
mov
cmp
jmp
push
mov
mov
fdivrs
jl
mov
pushf
addb
add
add
push
nop
jg
out
call
mov
add
int
xor
add
add
and
add
adc
jmp
mov
popa
add
dec
jmp
movsb
jmp
sbb
loop
sbb
pusha
or
pop
mov
andl
fwait
loopne
or
mov
add
or
mov
test
pop
in
inc
sbbb
imul
es
mov
xchg
and
push
test
sub
jl
lcall
cmp
mov
in
jo
dec
or
in
cmpb
push
outsb
xchg
inc
sbb
sub
fcmovnb
lock
roll
stos
pop
inc
js
test
out
push
xchg
lret
inc
fisubs
subb
sbb
pop
and
dec
and
es
mov
out
xchg
repnz
mov
addb
data16
test
out
adc
mov
add
or
jmp
adc
mov
loopne
testl
inc
test
mov
mov
in
mov
add
dec
lods
cltd
aad
loope
inc
es
jle
pop
jo
pop
ret
inc
aad
pop
mov
push
negl
mov
test
xor
das
cmpsl
test
add
popa
scas
inc
push
inc
ljmp
orb
push
pop
lcall
insb
sbb
cld
mov
xor
or
jo
int
mov
addr16
dec
stc
cld
xor
xchg
push
xchg
xlat
pusha
loop
add
pop
adc
test
outsb
pop
out
pop
adc
mov
movups
hlt
add
mov
stos
gs
pop
pop
orl
sbb
sbb
ljmp
mov
int
insl
add
xchg
push
add
sbb
sub
mov
or
or
pop
imul
mov
loope
jmp
mov
inc
adc
in
xchg
rol
mov
adc
outsl
cmc
call
daa
cmp
pusha
pop
and
clc
rolb
cmc
dec
and
adc
pop
hlt
jnp
xlat
les
add
xor
mov
movsl
out
frstor
sub
sub
pop
out
fiaddl
js
and
xor
aad
and
xor
lret
and
sarb
or
inc
pusha
dec
push
lods
shl
cmpb
stos
adc
cmpl
and
ret
dec
fldt
cmc
push
das
mov
mov
adc
inc
xor
or
mov
sbb
in
pusha
mov
lods
push
lahf
mov
lret
mov
mov
out
xchg
mov
adc
add
int
test
xor
dec
pop
enter
push
add
rcrl
jge
xlat
aad
mov
repnz
into
dec
sbb
push
lcall
outsb
addr16
add
sbb
jo
shll
loopne
sbb
jb
scas
push
and
xor
xlat
lret
hlt
push
add
aaa
bound
mov
pusha
sti
test
sbb
lock
push
scas
fcoml
ljmp
test
sbb
outsl
loopne
dec
in
xchg
loope
sbb
cmp
sub
test
aad
test
aam
xchg
pop
outsl
loop
les
shr
xor
out
dec
add
lret
add
adc
push
stc
outsl
lret
rcl
cmc
add
pop
ss
cwtl
sub
out
in
add
add
notl
add
pop
xor
pusha
jl
mov
js
cmc
repnz
dec
add
mov
repz
push
add
sti
sar
out
add
xor
add
ss
cmp
cltd
mov
pop
leave
bnd
add
ja
sub
cmp
push
inc
pusha
testl
sbb
sarb
adc
add
xchg
adc
repnz
ljmp
add
mov
insw
icebp
mov
lods
push
popf
adc
or
cmp
mov
add
mov
mov
scas
push
fidivrs
sbb
imul
adc
or
test
ficoms
push
mov
loopne
pop
mov
daa
dec
adc
loope
loop
iret
sbb
je
loope
jp
mul
mov
sbb
sti
dec
fsubrl
out
mov
cmpl
insl
jle
movl
push
xchg
inc
mov
into
mov
imul
subb
lret
sahf
pop
outsl
xor
sub
and
add
or
dec
enter
add
and
sti
loope
jmp
sbb
lods
add
xchg
xchg
jbe
push
ret
mov
mov
dec
add
pushf
stos
adc
fisubl
icebp
pusha
adc
leave
cwtl
dec
inc
daa
ret
pushf
xor
jp
push
adc
cmc
into
hlt
nop
dec
sub
gs
clc
add
out
popa
add
sub
mov
pop
xchg
sahf
jb
add
lds
shl
lret
or
adc
jecxz
pushf
mov
clc
pop
lret
add
outsb
incb
adc
rolb
lret
push
sub
loop
and
pop
mov
sbb
adc
add
mov
scas
fldcw
cwtl
outsl
sbb
loope
out
aam
sbb
mov
push
mov
das
dec
push
popa
mov
sti
add
adc
or
cmpsl
daa
and
aaa
loope
inc
push
cwtl
adc
ds
xchg
in
mov
sbb
pop
mov
ljmp
or
add
or
xchg
lret
xchg
sub
push
movsb
sti
add
mov
dec
or
mov
movsl
shl
je
adc
idivb
insl
add
ss
xchg
arpl
cld
icebp
loope
outsb
dec
xor
jnp
push
repz
loopne
mov
and
add
mov
mov
add
mov
dec
cs
pop
ret
jl
xchg
add
outsb
push
xor
adc
shlb
push
mov
scas
movsl
push
insl
fneni(8087
stos
inc
cwtl
in
push
sub
enter
filds
mov
les
gs
add
sub
xor
adc
adc
dec
add
inc
xchg
lods
add
out
outsl
sub
dec
out
add
mov
loopne
add
xchg
pop
inc
or
repz
lahf
setae
stos
mov
dec
xor
sbb
jmp
stc
cs
cmpl
cmp
jo
shll
scas
outsb
jecxz
add
sbb
adc
lahf
mov
mov
jb
aam
inc
iret
inc
lret
loopne
sbb
repnz
aad
ds
mov
add
test
jno
les
xor
pop
pusha
insl
fstpl
jmp
out
mov
pop
push
rclb
mov
or
arpl
or
into
pop
mov
pushf
inc
ljmp
sub
push
imulb
and
sbb
sbb
fiaddl
lret
adc
add
mov
xchg
cmpsl
lods
sub
push
adc
xchg
jmp
pop
loope
add
xchg
clc
sbb
add
psubw
fidivs
jmp
rol
into
inc
loop
add
insl
xchg
mov
and
cmp
leave
aam
push
pop
pusha
stos
push
mov
cmp
cmp
inc
mov
xchg
pop
add
insl
xchg
mov
jmp
and
pop
fdiv
repz
jns
cmp
mov
cmp
lods
adc
scas
adc
outsl
sub
adc
xchg
sbb
loope
or
call
xchg
push
sub
xor
add
xchg
ljmp
add
add
cli
adc
add
fiaddl
loopne
loopne
in
push
adc
aaa
xor
xor
xor
repz
lcall
insb
std
sti
push
ret
sbb
movsb
add
cmp
cmp
or
cld
es
and
mov
fs
push
shlb
neg
lds
inc
xor
popa
fcoms
pop
add
pusha
sbb
rol
loopne
cmc
cmp
add
xchg
mov
sbb
jmp
in
jl
add
push
in
lahf
cli
in
push
stos
pusha
xchg
or
roll
push
xor
push
xchg
dec
lcall
fsub
push
popa
jmp
or
dec
inc
stos
fcmovnu
pusha
popa
push
push
stos
add
jbe
in
add
dec
pusha
aaa
mov
jne
add
or
add
xchg
pop
lea
and
decb
xor
add
or
pusha
dec
push
and
sbb
sub
xor
in
pop
cmp
xchg
test
xchg
mov
imul
cmp
pop
jmp
cwtl
lret
add
in
jbe
mov
mov
sub
aaa
xor
in
out
adc
les
sbb
adc
cmp
add
insl
mov
das
test
mov
add
push
in
add
cmp
in
lcall
idivl
lret
cmp
inc
fninit
fldenv
cwtl
roll
adc
xchg
jb
dec
cmovl
and
adcb
addr16
xlat
adc
mov
mov
add
cmp
test
scas
cwtl
add
cmpsl
movsl
enter
rcr
clc
push
adc
mov
and
mov
push
push
cmpsb
js
sbb
add
stos
loopne
and
pop
push
addl
flds
pop
sub
das
sbb
add
andb
leave
fistpll
mov
push
or
mov
xchg
inc
lret
pop
lock
push
dec
ret
or
push
push
addr16
xlat
pop
dec
and
jae
arpl
add
adc
cmpsl
push
or
add
jo
dec
push
repnz
cmp
call
test
lret
cmpsb
lds
daa
cld
loope
es
jns
cmp
cmp
mov
cmp
pop
filds
mov
sti
jl
popl
in
dec
add
pop
and
sub
push
or
sub
mov
add
push
fmuls
stos
xlat
les
inc
push
lahf
lret
xor
adcl
inc
shll
pop
enter
add
ljmp
dec
and
filds
push
mov
cmp
aad
outsl
or
xor
sub
loopne
add
jns
add
dec
popf
in
or
add
pop
in
lret
mov
add
jo
pop
xchg
push
jg
pusha
rcr
ja
mov
sti
sbb
xchg
jo
xchg
add
mov
inc
repnz
add
mov
sub
inc
pop
data16
pop
mov
push
adc
mov
inc
push
and
jbe
out
adc
mov
jno
icebp
addr16
aam
fscale
es
xchg
lea
dec
and
dec
sbb
je
pop
daa
int3
cmp
ds
outsl
pusha
nop
call
push
or
add
xor
pop
jae
add
and
js
ret
push
outsl
mov
imul
add
dec
pushf
xchg
add
adc
add
cmpsb
mov
sub
push
sbb
mov
lods
jg
push
sbb
lds
daa
pop
cltd
pop
ds
lahf
out
cmp
lock
test
cmpsl
clc
ds
ljmp
dec
mov
iret
insl
inc
mov
or
sbb
fsubrl
and
xor
and
adc
add
mov
and
stc
movsb
addr16
sbb
mov
push
inc
mov
faddl
add
jns
sub
jbe
out
add
std
cmp
lret
fsubrs
dec
or
jb
add
repz
push
cwtl
rcl
jg
sbb
xchg
push
pop
ljmp
add
mov
sbb
jne
mov
xor
outsb
add
sbbl
lret
cmpsl
mov
inc
fucom
xchg
sub
movsb
lock
adc
fcoms
and
mov
xchg
aaa
or
cld
adc
jecxz
mov
loopne
jnp
ss
mov
icebp
or
ret
adc
ret
cltd
jge
cli
test
add
sbb
xchg
sub
loopne
adc
or
negl
rcrl
cltd
pop
or
les
dec
lret
popa
push
clc
fstps
add
push
sbb
mov
je
xor
roll
cld
hlt
loopne
sbb
xor
clc
add
push
inc
add
mov
jae
add
js
inc
xor
cli
mov
lcall
icebp
or
push
and
test
adc
test
into
cs
adc
mov
ret
xor
xchg
fldcw
xor
cwtl
pop
out
cltd
aam
add
or
mov
test
loope
mov
scas
jmp
push
jl
cld
clc
add
inc
sub
sbb
fcompl
push
xchg
or
scas
inc
jnp
or
add
xchg
dec
add
sub
inc
and
pop
jo
aad
popf
pop
fadds
pop
push
test
push
pop
xchg
loopne
loop
test
aam
and
stos
scas
movsb
pushf
inc
sbb
adc
fcomps
push
dec
and
push
pushf
push
or
shlb
add
push
addl
aas
mov
clc
add
pop
int
iret
adc
dec
mov
pop
out
xchg
loopne
inc
fsubl
push
hlt
add
xchg
shll
xor
mov
adc
push
rorb
mov
mov
push
enter
popa
inc
dec
xchg
add
mov
sub
sbb
jo
sub
cmp
popf
adc
push
andb
xor
mov
or
movsb
lcall
cwtl
mov
add
inc
jns
adc
push
mov
cld
fisttpll
repz
xor
push
sub
and
inc
push
lods
adc
jnp
and
outsl
sub
hlt
aad
pop
fsubrs
scas
add
mov
mov
ficomps
mov
shlb
pop
sbb
icebp
xor
lods
pop
ljmp
cld
add
sub
stc
mov
dec
sbb
jle
pop
adc
and
or
mov
mov
dec
inc
imul
sub
push
xor
je
sbb
out
jno
xor
mov
mov
jecxz
and
enter
rcrb
mov
shrb
sub
sbb
xchg
add
mov
sbb
rorl
lahf
push
imul
mov
mov
aad
paddsw
xor
shll
mov
push
cmp
outsl
sbb
aad
movsl
add
adc
and
rcrl
das
pop
sbb
sahf
pusha
pusha
test
adc
jb
out
in
pusha
pop
lds
aas
rcr
add
dec
add
cltd
jno
mov
push
add
shll
add
hlt
xor
cmp
je
lret
add
imul
mov
mov
add
mov
inc
clc
roll
cs
add
xor
push
lahf
push
lcall
pop
add
pop
inc
cmpsl
arpl
sub
mov
push
add
roll
test
pop
cmpsb
dec
call
cmp
test
and
pop
addl
mov
jae
push
cmp
adc
mov
add
fdivl
pusha
aas
lahf
movsl
ret
mov
roll
sub
iret
dec
mov
pop
mov
aad
pop
add
into
xchg
inc
out
clc
xchg
cld
popf
jns
add
and
mov
and
cvtdq2ps
lock
stos
loopne
mov
pop
push
sbb
das
lret
xor
jo
and
in
add
xchg
es
cld
cmp
lods
call
lods
aad
lea
pusha
push
aaa
mov
mov
mov
jmp
sbb
stos
add
int
jp
sub
inc
ja
pusha
out
ret
and
js
scas
cmpsb
jns
dec
pop
add
mov
insb
add
insl
loope
roll
ss
fists
sbb
mov
add
enter
ds
add
rorl
pop
xchg
add
es
xchg
push
inc
push
add
imul
add
jbe
mov
ret
lea
or
mov
mov
add
test
rolb
lds
lea
or
rclb
sbb
jno
add
insb
imul
pop
pusha
xor
adc
sbb
xlat
add
inc
out
xchg
xchg
fistpl
scas
stc
and
scas
js
inc
jmp
sbb
jecxz
test
cmp
push
pop
or
mov
jnp
xor
dec
iret
inc
cmp
or
sahf
scas
add
das
test
xchg
jnp
out
into
and
dec
or
pop
faddl
int3
xor
push
jbe
dec
push
dec
test
pop
scas
jmp
sti
dec
movsl
sub
call
fcomps
outsl
fstp
orb
rol
xor
fiaddl
inc
enter
add
hlt
jns
add
pop
ret
pop
xchg
loopne
sahf
add
adc
xor
sti
sub
je
jnp
push
cmpsl
scas
sbb
jno
cmp
push
inc
sub
dec
fldenv
jmp
or
mov
paddq
add
fildll
xchg
sbb
jecxz
fwait
push
test
push
add
cs
hlt
pop
push
rclb
xor
add
test
rclb
sbb
ret
push
je
sti
popa
fldt
add
adc
nop
dec
cmp
inc
cmp
sub
popa
pop
arpl
pop
mov
add
popf
jmp
cmp
inc
xchg
int
ss
mov
cwtl
and
mov
jmp
out
test
sub
adc
fs
add
mov
jb
pusha
dec
or
sbb
ret
xchg
add
aad
xor
add
cltd
jmp
inc
or
pop
push
js
sbb
push
add
cmp
add
or
data16
xchg
xorl
lods
mov
xchg
nop
add
jmp
add
add
add
lcall
imul
addl
add
jge
push
xchg
into
xchg
rcll
sti
cld
pop
inc
push
je
sbb
add
sbb
stos
inc
insl
mov
inc
add
mov
xchg
cli
inc
sbb
mov
fcoml
jae
mov
inc
jl
sti
add
cmpsb
jge
xor
add
iret
xchg
das
mov
xor
arpl
adc
sub
jae
fwait
dec
jne
arpl
mov
hlt
sbb
in
jg
in
enter
adc
jmp
call
mov
stos
mov
add
pop
jbe
adc
xchg
subb
loope
push
jns
cmp
test
xor
sub
add
push
fadd
push
out
fwait
daa
push
jle
mov
lahf
ret
loopne
adc
adc
movsb
insb
repnz
fnstsw
jg
iret
mov
ficompl
sar
cs
or
dec
cmp
shlb
mov
add
sub
cmc
add
rorl
adc
pushf
pop
in
xchg
mov
add
lds
ss
mov
stos
xchg
jo
push
loope
mov
push
insb
sahf
add
data16
adc
pop
lahf
add
mov
repz
xchg
jns
sub
add
jae
in
std
or
sub
pop
pusha
insl
adc
lods
inc
add
push
push
xchg
cltd
jnp
and
mov
fwait
jmp
add
sbb
cli
add
pop
lea
cmp
jecxz
cmp
jbe
clc
pop
pop
xchg
cmp
shl
into
fsubrs
pop
or
mov
sbb
jl
mov
and
int3
push
adc
push
add
divb
add
das
adc
xchg
les
add
sti
popf
jle
cmp
push
add
jmp
lcall
rclb
cmc
loop
add
sub
add
leave
xor
jle
xchg
sbb
out
outsl
cld
cmp
dec
or
add
or
cmc
add
mov
push
loop
test
test
sbb
sti
and
and
or
fbld
mov
xchg
fstpl
add
fucomp
test
add
mov
pop
lcall
sbb
adc
pop
in
gs
shll
aas
out
addb
addr16
mov
popw
add
cmp
push
fldl
hlt
aad
fsubr
dec
mov
iret
push
and
adc
push
popa
cltd
pop
mov
scas
pop
inc
andl
add
dec
adc
push
inc
cmpsl
dec
pop
adc
jnp
je
xchg
and
fldcw
push
jne
jp
imul
add
filds
sub
ljmp
imul
jle
xchg
sbb
pop
out
loop
addr16
scas
stos
loopne
ltr
mov
les
ja
daa
mov
mov
scas
push
repnz
inc
push
cmp
scas
and
push
and
and
xchg
add
push
loopne
aas
mov
jo
imul
ja
adc
or
and
lahf
inc
test
inc
add
hlt
dec
fs
add
mov
pop
lods
aaa
add
push
cmc
icebp
addr16
or
negl
stos
in
mov
add
mov
sbbb
arpl
into
inc
or
adc
ffree
add
ljmp
neg
cli
lock
pop
insl
xchg
add
test
test
insb
mov
mov
add
jle
jmp
cmp
push
add
es
xchg
jne
xchg
pop
add
sar
xchg
test
jecxz
enter
lock
and
cmc
pop
jbe
adc
jno
andl
pop
push
fcomp
and
hlt
dec
push
fnstcw
lcall
xchg
or
movsb
lahf
push
popa
xchg
pop
xor
pusha
sub
push
adc
inc
stc
loope
mov
mov
roll
xor
sbb
inc
call
jmp
and
mov
in
add
mov
pop
add
mov
add
in
adc
add
push
shrl
xor
popa
mov
lea
bnd
add
fimull
sbb
out
addb
mov
inc
fbld
in
xorl
adc
lcall
xor
inc
mov
add
sub
popa
scas
mov
rol
neg
adc
aam
push
add
je
dec
push
jmp
add
gs
das
cmp
rolb
push
cmpsl
sub
push
mov
div
xor
add
hlt
add
jle
mov
sbb
je
adc
push
adc
inc
add
push
call
mov
pop
lcall
cld
mov
mov
push
mov
adc
scas
jae
data16
ja
cmp
sub
in
pop
fisttpll
pushf
and
or
pusha
adc
adc
movsb
jp
mov
cltd
pop
dec
push
add
add
cmp
loope
mov
mov
pushf
outsl
dec
cmp
jnp
nop
push
mov
fstpt
jo
gs
dec
xor
es
xchg
out
add
push
sub
jp
dec
pop
sbb
add
pop
lds
xchg
rcrb
mov
scas
pop
inc
or
cmpsb
inc
or
in
mov
gs
adc
insl
cltd
imul
loope
rorb
inc
adc
pop
subl
stos
dec
mov
mov
jecxz
jbe
add
cli
xor
ficoms
mov
add
aam
push
mov
and
sbbl
or
cld
mov
add
shlb
insb
iret
and
fstpl
rcll
div
stos
sbb
push
je
and
out
inc
sahf
cmpsl
ret
dec
cmp
out
cmp
sub
lods
mov
or
push
add
sbb
adc
lahf
addl
and
fs
add
call
pop
add
out
pop
add
jge
mov
rorl
enter
jo
add
xchg
dec
cmp
vphadduwd
xchg
push
shlb
fs
and
adc
add
adc
pusha
out
add
jg
rolb
jmp
cld
js
push
or
addr16
iret
jns
adc
daa
jge
add
cld
sub
push
loope
push
or
in
add
jae
dec
mov
xor
lcall
sbb
add
orl
add
decb
push
int3
adc
xchg
pusha
and
ljmp
and
fwait
sub
sbb
icebp
add
push
test
pusha
inc
sub
loope
inc
ss
int3
aaa
xchg
or
or
push
sbb
inc
push
xlat
cmpl
sub
shlb
testb
push
cltd
jno
mov
lahf
add
cwtl
das
sbb
lcall
ret
cmp
test
add
popf
mov
outsb
fildl
pusha
icebp
push
in
and
and
jle
daa
and
push
push
push
add
xor
jp
or
mov
roll
xchg
sar
aas
repnz
out
pop
aam
bound
out
sbb
daa
insl
in
loopne
sbb
jo
arpl
int3
mov
add
lds
inc
adc
pop
or
cltd
dec
adc
test
add
jg
movsl
es
clc
test
bound
mov
gs
loop
out
or
rclb
jp
xchg
popf
mov
cmp
jae
jo
and
sbb
loope
push
test
xchg
mov
pusha
and
sbb
ljmp
pop
sub
mov
mulb
or
mov
mov
xlat
in
mov
adc
add
loop
mov
cmp
sub
jp
insb
popl
xor
sbbb
fs
and
das
ljmp
mov
xor
dec
add
add
push
pop
sbb
add
idivb
cmpsb
mov
mov
push
sbb
in
daa
inc
data16
icebp
pop
mov
or
pop
mov
sub
adc
mov
cmp
pop
insb
inc
cmp
add
adc
add
fmuls
dec
mov
sbb
enter
fstl
jmp
xchg
xchg
and
loop
insl
push
mov
mov
jne
adc
fiadds
mov
pop
out
sbb
jmp
nop
add
in
jb
mov
and
pop
jae
loopne
inc
mov
add
mov
outsl
mov
sbb
push
aam
jg
mov
mov
int3
mov
idivb
loopne
jae
add
fisubl
mov
adc
sahf
jmp
push
add
pop
sub
sbb
bound
ret
lret
das
testl
fbld
inc
or
fs
add
cmp
sbb
xchg
inc
sarl
dec
add
aaa
sub
mov
cmpsl
mov
mov
fmuls
fidivrl
push
repz
in
push
xor
inc
stos
jg
out
mov
cli
nop
add
pop
into
pop
add
pop
iret
mov
push
dec
stos
shl
mov
inc
pop
mov
lds
fists
scas
rorl
pop
cmp
fcomps
mov
out
lods
test
push
push
or
mov
pop
jne
into
add
cmc
mov
or
test
scas
adc
pop
in
shl
outsl
in
xchg
js
iret
pusha
adc
or
adc
das
inc
add
dec
cmpsl
in
add
fiadds
or
lds
and
cmpsl
sti
add
cmp
pop
or
lahf
or
add
and
popa
hlt
dec
and
ja
jmp
add
jbe
addl
faddl
mov
add
mov
repz
push
xor
mov
imul
dec
xchg
mov
cmc
sbb
xchg
out
test
sub
xchg
push
jb
inc
outsl
sub
dec
mov
sbbl
inc
addr16
mov
imul
push
pusha
movzwl
sbb
mulb
daa
push
sbb
add
scas
dec
or
adc
mov
orl
and
sub
inc
fwait
jb
add
mov
jge
xor
pusha
mov
pop
popa
pop
gs
and
add
jbe
dec
int3
mov
add
fdivp
repnz
sarb
mov
aas
jnp
lcall
mov
bound
sbb
mov
adc
stc
dec
or
loope
fcompl
aas
sbb
out
cmc
mov
add
mov
pop
negb
je
xchg
inc
mov
in
add
add
mov
shlb
or
mov
arpl
dec
push
lahf
insl
and
popf
xchg
mov
sbb
xor
in
pop
jae
mov
jb
pusha
aam
mov
jbe
sub
or
inc
lock
pusha
stc
mov
push
pop
pop
cmc
popa
daa
and
popa
pusha
ljmp
pusha
mov
xchg
push
cmp
add
jecxz
xor
jnp
fcmovnbe
pop
and
mov
mov
sub
add
sarb
or
shlb
insl
mov
jg
jb
add
dec
xchg
dec
lea
outsl
push
into
adc
cmp
xor
enter
pusha
dec
pusha
lret
xchg
jns
adc
lcall
rcrl
add
sub
adc
add
icebp
pop
xchg
mov
in
mov
hlt
add
pop
xchg
jge
mov
push
cli
adc
adc
jmp
mov
popa
insb
sbb
adc
imulb
push
or
jns
adc
fsub
push
sub
mulb
push
lds
cltd
or
and
jge
or
les
stc
leave
call
add
inc
mov
movsb
pop
movsl
adc
add
fwait
aad
inc
lret
add
pushf
mov
fisubl
jb
or
loop
xchg
add
jns
and
push
add
sti
icebp
pop
mov
push
lea
xor
sbb
scas
mov
adc
push
aaa
mov
dec
out
mov
and
add
rol
adc
fildl
adc
idivl
mov
add
sbb
add
mov
sbb
push
and
mov
ljmp
mov
repnz
mov
add
pop
sbbb
push
adc
testl
cmp
sarl
sarb
insb
iret
shll
sbb
push
imul
push
cwtl
lcall
cmpsl
push
mov
mov
scas
xchg
cs
add
gs
shl
sbb
pop
or
inc
sbbl
and
add
and
mov
cli
push
push
push
mov
and
jge
jns
mov
rorb
or
int
cltd
pusha
xlat
aas
jno
fucomip
jge
sbb
mov
sbb
add
mov
ret
mov
pop
cmp
cmp
cld
loope
fldcw
and
out
add
adc
mov
add
and
cmp
pop
fs
shll
cld
and
sarl
xchg
fldt
fidivl
fimuls
inc
icebp
add
or
sub
repz
daa
sbb
xchg
add
adc
cmpsb
dec
jnp
add
insb
into
xor
dec
lods
cmp
mov
roll
adc
in
jno
fiaddl
adc
ds
add
icebp
loopne
ret
xor
push
or
xor
inc
dec
xchg
repnz
sbb
outsb
add
mov
daa
add
jp
mov
add
cmp
push
sbb
mov
sbb
cmp
test
sbb
popa
mov
jae
gs
movsl
repz
add
out
sub
cltd
pusha
push
test
adc
pop
addr16
add
pop
and
daa
fsub
add
mov
sub
adc
push
pop
cltd
stc
pop
add
pop
ljmp
lds
fidivrl
std
sbb
and
jp
into
mov
push
push
xchg
scas
fmul
testl
mov
les
inc
ljmp
adc
repz
imul
mov
out
xchg
sbb
test
out
jo
stos
aad
inc
idivl
fucomip
cmp
xor
nop
cmp
mov
push
cmc
insb
xchg
decb
int3
jg
xor
loopne
scas
insl
ss
imul
movsb
js
adc
xchg
testl
xchg
xlat
loopne
xchg
stos
fcos
test
pop
cwtl
into
inc
fcmovnb
and
out
stc
add
add
stos
imul
inc
cli
cmpsl
mov
sbb
and
out
add
cmp
jno
das
push
xchg
xor
imul
cmpsl
orl
pushf
inc
add
in
and
add
cmc
js
add
andb
cmp
addr16
add
scas
push
dec
add
add
sub
mov
xchg
mov
inc
sti
sbb
fs
sbb
sbb
scas
add
mov
or
or
xchg
xchg
cmp
pusha
loope
xchg
push
stc
testb
adc
aad
dec
popf
add
mov
pop
add
dec
fs
and
inc
add
sbb
add
in
int
adc
insl
ficoms
rcrb
inc
out
add
add
test
leave
data16
mov
lcall
sub
xor
add
mov
pop
sar
add
loopew
int3
movsl
imul
out
or
adc
loope
jge
dec
add
add
sbb
cli
sub
jns
jle
mov
pusha
and
sbb
cmp
push
out
xchg
add
push
enter
dec
loope
push
scas
pop
or
xor
scas
out
loop
out
test
push
cld
movsl
fs
cmp
mov
dec
xchg
pop
fistpll
add
shr
and
lret
enter
sbb
push
and
sbb
xchg
sti
or
std
ss
add
xchg
lret
mov
arpl
fistps
push
jl
or
jno
lret
xor
hlt
je
sahf
xchg
xor
fs
jg
ret
rolb
dec
and
mov
psraw
mov
pop
imul
add
push
stos
les
ds
lods
daa
jo
out
push
adcb
dec
scas
xlat
add
test
cmpb
jmp
add
popf
scas
cltd
add
push
popa
fldl
mov
into
adc
dec
sbb
adc
orb
jecxz
loope
push
xor
insl
mov
pop
fbld
roll
adc
add
fstpl
jp
push
adc
lock
dec
in
pop
sarl
leave
fwait
or
repz
imul
in
insl
push
ret
adc
pop
sbb
inc
pop
out
les
or
rcrb
test
adc
cmp
xchg
mov
in
inc
adc
or
xor
fsubs
movsb
sbb
xchg
add
leave
mov
add
jmp
out
insb
add
add
pop
icebp
test
cs
mov
pop
addb
or
flds
inc
cmpsb
sti
into
inc
jmp
repz
xchg
adc
adc
ja
arpl
add
jg
pushf
mov
iret
xchg
add
sub
ret
movsl
test
or
adc
shrl
iret
mov
test
aas
xor
add
sbb
pop
jg
mov
mov
and
gs
cmp
fsubrs
sbb
lods
inc
dec
xchg
shl
inc
pop
jbe
jge
lret
mov
pop
add
movb
sbb
jl
pushf
add
mov
pop
xor
shll
sbbb
xchg
mov
push
cli
pop
jbe
leave
jns
add
and
cld
pop
addr16
fbstp
dec
add
in
jnp
lahf
std
mov
fwait
divl
ret
sti
lcall
rcrb
cmpsl
jl
cmp
and
xor
cmp
lods
leave
jmp
push
mov
decb
mov
adc
xchg
repz
ss
out
sbb
es
popf
inc
fadds
xchg
mov
push
cwtl
push
mov
xor
sbb
out
roll
out
pop
add
jnp
pusha
push
push
adc
sbb
mov
or
add
dec
daa
dec
pusha
in
in
fwait
push
adc
dec
xchg
ret
mov
pop
mov
mov
std
int3
les
sub
pusha
jae
jno
repz
ret
jnp
jg
repnz
xchg
enter
cmpsl
scas
and
xor
ret
sub
add
lock
add
int
inc
and
jo
jnp
add
sbb
add
fwait
mov
dec
test
aas
mov
bound
adc
loop
xlat
and
loope
fwait
xchg
add
out
add
insb
add
es
jbe
xor
push
test
icebp
sub
ret
lds
mov
jne
jb
xor
pop
xchg
add
ret
xor
fcompl
inc
add
ljmp
pusha
mov
jne
lods
cmpsl
adc
and
push
inc
imull
add
roll
ret
sub
add
aad
adc
push
into
pop
int3
mov
add
idivb
and
test
daa
pushf
loopne
fnstsw
add
dec
mov
pop
push
sahf
pop
cld
sbb
add
jl
es
inc
and
add
pop
push
xchg
lret
mov
repnz
xchg
outsb
xor
test
mov
lcall
mov
and
out
push
cmc
shrl
jns
adc
cmc
lds
mov
sub
xchg
in
repz
xchg
popa
add
sarl
loope
add
add
in
je
and
push
jle
loopne
mov
in
push
or
bound
adc
push
inc
lock
xchg
add
aam
fiaddl
cmp
ficomps
or
pop
mov
lds
push
fadds
xor
inc
daa
mov
jg
out
mov
push
mov
add
daa
div
mov
lock
and
mov
out
add
pop
dec
stos
mov
jle
mov
cmc
dec
cwtl
rcl
pop
popa
mov
ret
loop
xor
pushf
in
add
leave
xchg
sbb
pop
das
pop
add
je
add
loopne
cmp
push
loop
js
lods
add
popf
adc
add
stc
test
dec
insb
or
add
sub
mov
shrl
pop
xor
adc
jecxz
cmp
out
jge
sahf
mov
lret
fcoml
sbb
inc
out
aaa
add
out
cmp
fldcw
xchg
rorl
and
mov
mov
sub
scas
test
inc
out
aad
data16
ret
call
jmp
jb
ljmp
push
jp
ret
mov
das
notl
push
ja
jne
xchg
sbb
mov
push
scas
adc
rcrb
sub
push
insl
sbb
jmp
sbb
sbb
lds
test
ret
mov
sub
aaa
push
pusha
mov
mov
mov
orps
push
sahf
fndisi(8087
jp
mov
add
enter
mov
dec
add
jne
and
xchg
movsl
outsl
xor
flds
nop
add
cmp
dec
mov
inc
mov
add
scas
loope
cld
or
push
sahf
pop
add
mov
sub
sbb
add
ds
leave
and
push
add
decl
loopne
adc
cmp
popf
xchg
add
dec
hlt
imul
les
int
cmpl
add
jmp
incl
test
and
ret
dec
sbb
mov
add
mov
outsb
add
dec
pop
fstpt
cli
or
mov
mov
insl
add
mov
ljmp
js
imul
mov
add
dec
int3
lods
pop
ja
push
in
out
sub
cmp
add
ffreep
pop
sbb
mov
and
je
push
addl
repz
sbb
jne
fisubs
rclb
pop
adc
add
nop
adc
add
or
jnp
or
add
scas
and
add
inc
lds
mov
sbb
ret
push
enter
rsqrtps
add
insl
fwait
xor
pusha
dec
cmp
xor
adc
add
ret
jo
insl
out
cld
and
mov
push
sbb
xchg
adc
add
xor
mulb
insb
mov
pop
xchg
insb
push
add
sahf
mov
pop
jbe
pusha
jecxz
mov
scas
loop
mov
pop
and
loope
jo
sti
ljmp
les
xor
sbb
or
add
jg
rcll
lcall
xchg
pop
pop
aad
lock
stc
out
sahf
push
mov
stos
sbb
add
lods
or
adc
std
stos
out
sbb
movd
fmul
negb
or
aam
cmpb
xor
testb
das
add
adc
les
sub
std
ficompl
sub
cmp
mov
or
sub
imul
jge
sbb
cmpsb
dec
lds
sbb
add
fiadds
lret
cmp
add
dec
mov
ljmp
cmp
pusha
and
xor
inc
scas
lods
ret
add
xor
roll
mov
andl
add
sub
out
das
pop
dec
add
xor
pop
mov
andl
pushf
lods
mov
xchg
adc
mov
and
addr16
lock
ficoms
sub
outsl
loopne
mov
sbb
push
movsl
lret
ja
adc
xor
std
pop
int3
sahf
adc
adc
shrb
or
or
add
pop
jo
repnz
decb
xchg
mov
jge
sti
pushf
out
daa
mov
adc
jp
ljmp
mov
sahf
ja
pop
bound
and
cld
aam
jb
int
mov
add
popa
std
adc
fidivl
les
cmp
es
repnz
ljmp
add
jle
dec
loope
or
dec
sbb
pop
xchg
push
add
jecxz
xlat
push
popl
repnz
outsb
xchg
add
dec
jne
icebp
mov
add
and
xchg
ret
push
mov
fisubl
stos
inc
icebp
movsl
lock
sbb
add
pop
xchg
call
leave
add
fst
jne
les
mov
test
mov
loopne
int3
add
inc
dec
loop
add
mov
add
push
test
sub
movsl
pop
scas
lret
jmp
mov
push
jae
xchg
mov
movsl
sub
cmp
dec
cwtl
jecxz
daa
jp
xchg
ss
repz
or
icebp
sahf
or
or
fwait
orl
aaa
scas
ljmp
mov
adc
xchg
imul
rclb
mov
add
pop
xchg
fcoms
sbb
pop
mov
std
jmp
loope
sub
sbb
mov
push
inc
lods
dec
aas
add
push
push
sub
jae
add
pop
cmc
cs
imul
add
add
decb
or
fs
sub
push
pop
mov
mov
add
imul
cltd
mov
add
ret
sbb
popf
pusha
cmp
dec
mov
js
sbb
dec
enter
xchg
aad
dec
incb
int
add
mov
ja
add
out
mov
pop
das
pop
push
add
xor
cmp
cmp
pop
mov
add
push
mov
shll
sub
lret
nop
dec
add
clc
and
out
xchg
ljmp
in
lods
shrl
adc
sbb
imul
daa
pop
scas
cltd
add
push
test
push
js
xchg
add
pop
xchg
add
sbb
pop
mov
adc
jae
inc
pop
inc
outsl
jo
mov
stc
fiaddl
test
pusha
mov
jae
xchg
das
sbb
mov
sbb
sahf
outsb
inc
ret
pop
add
or
mov
inc
or
sti
aad
adc
push
pushf
jnp
inc
fwait
lret
in
mov
adc
inc
dec
mov
gs
orb
xor
xor
fists
mov
dec
es
pop
push
sarl
pop
push
push
sti
sbb
pop
mov
mov
mov
arpl
insb
xchg
mov
or
mov
inc
push
and
test
inc
int
jb
xchg
add
negb
add
dec
subb
roll
mov
and
sbb
pop
inc
adc
and
sbb
jno
add
popf
cmpsb
push
pop
movsb
dec
sub
or
xorb
jmp
rcl
and
call
sbb
sub
in
aad
imul
dec
sbb
mov
xchg
sbb
xchg
sub
push
cmp
in
mov
push
jg
lcall
pavgb
aad
mov
pop
add
cmp
ret
imul
add
sbb
xchg
lret
mov
mov
mov
adc
imul
sub
add
sbb
cmpl
out
jmp
jle
add
sbb
cmp
pop
cwtl
cwtl
and
mull
lret
outsb
in
jecxz
mov
lcall
add
xchg
repz
pop
add
jg
fs
sbb
and
bound
push
aam
dec
cmc
mov
into
and
in
dec
insb
loopne
or
pop
add
scas
inc
push
mov
add
sti
mov
mov
iret
xchg
add
lock
xchg
add
inc
cwtl
sbb
jne
cmp
test
lahf
mov
mov
adc
push
push
dec
loopne
push
or
stos
or
xchg
mov
lcall
fcoms
loopne
xchg
and
mov
xchg
mov
xchg
or
dec
fimull
clc
scas
mov
xchg
mov
aas
or
insb
add
aad
xor
dec
add
jbe
pop
ret
test
outsb
pusha
in
test
push
sbb
clc
loop
and
shl
add
mov
in
adc
mov
out
cli
dec
inc
xchg
inc
add
jmp
fldt
xor
add
lret
mov
and
shll
jp
mov
mov
out
mov
lds
div
gs
xchg
nop
dec
jle
pushf
pop
mov
add
ljmp
sbb
add
out
mov
dec
add
stos
cltd
repnz
mov
gs
adc
lahf
dec
push
pusha
and
sbb
xorl
lods
xchg
int
mov
xor
pop
push
daa
aaa
sbb
add
cmp
pop
xor
repz
xor
cld
jg
dec
mov
adc
pusha
mov
inc
je
adc
pusha
xor
cmp
pop
jle
int
adc
andnps
push
and
out
or
test
xchg
or
loop
pop
mov
xor
arpl
or
pop
pusha
sbb
add
test
popl
xor
jne
xor
je
lret
iret
dec
adc
int3
mov
add
pop
out
pop
fdivs
cmp
popf
mov
push
in
mov
adc
xor
mov
adc
out
cmpsl
jae
mov
outsb
xor
bound
ret
rcrl
jb
adc
xor
mov
scas
mov
dec
in
test
add
mov
aaa
add
leave
cld
lahf
mov
inc
insb
notb
outsb
pusha
xchg
pop
hlt
mov
sbb
add
fs
bound
xchg
or
mov
addr16
je
xchg
mov
pop
loopne
icebp
lock
add
push
pcmpeqb
loop
cmp
js
jle
mov
lret
add
into
movsl
mov
sub
add
pop
xor
jb
mov
hlt
popa
stc
sub
add
adc
int3
shll
jle
sbb
xchg
sbb
xchg
jecxz
loopne
jno
fs
dec
jl
jae
into
or
push
xchg
js
mov
sti
add
std
movl
or
cmp
mov
adc
mov
jecxz
addr16
add
das
cwtl
out
movsb
iret
push
sbb
sti
add
daa
cli
adc
popf
add
icebp
jbe
sbb
jb
aas
pop
mov
iret
xchg
test
lds
jle
ja
das
in
push
out
mov
loope
xchg
fistpl
xor
mov
pusha
add
negl
pop
add
jo
xor
fistpll
mov
ret
add
testb
outsl
mov
adc
out
out
imul
push
mov
and
dec
aad
lahf
pop
add
push
sti
add
adc
sbb
add
les
cltd
sbb
adc
scas
mull
push
loopne
mov
push
push
add
or
pusha
inc
jbe
cmp
sbb
mov
xchg
jo
cmp
xor
and
daa
mov
add
cli
or
mov
xor
es
std
add
adc
hlt
ret
adc
xchg
push
push
int
push
add
and
fimuls
data16
or
sub
pop
movl
jl
xchg
add
inc
cwtl
insl
mov
adc
movsb
push
fsubl
jl
pushf
xchg
add
pusha
push
jo
inc
aas
test
xchg
sub
add
pop
push
mov
aad
mov
pop
jae
aas
mov
fstpt
sub
jb
add
dec
movl
jno
lret
cmp
pop
or
add
cmp
imul
mov
adc
sbbb
sbb
add
loopne
rcll
scas
add
out
mov
sahf
add
jg
inc
into
in
mov
dec
fldenv
sub
xor
jle
js
int
lock
into
jo
orb
mov
repnz
or
and
out
test
daa
icebp
fstps
mov
add
and
mov
loop
xor
insl
xchg
add
push
stos
add
inc
repz
and
fstps
adc
inc
loopne
je
or
push
cmpsb
mov
aad
scas
add
mov
mov
bound
mov
cmp
pusha
sarb
sbb
sbb
add
cmp
insl
ds
xor
xor
sub
add
push
pop
std
sbb
addb
loop
mov
dec
cmpsb
dec
loopne
pop
lods
outsl
sub
lds
jb
add
ss
jns
inc
mov
loope
add
lea
add
repnz
mov
inc
mov
or
fdivl
addr16
cmpsl
iret
mov
ficompl
xchg
sub
cmpsb
icebp
out
lahf
shrl
call
mov
flds
es
mov
inc
out
scas
shl
sub
cwtl
xor
lock
into
add
push
insl
popf
mov
xchg
add
insb
sbb
jo
xchg
jp
pop
mov
rclb
test
push
mov
popf
leave
testl
data16
pop
xchg
dec
mov
push
cmpsb
outsl
andl
pusha
out
adc
jo
mov
and
pop
cmp
movsl
pop
and
push
pushf
and
lods
in
in
push
xor
inc
lret
add
push
push
or
sbb
pop
repz
sahf
ret
popa
adcb
adc
nop
mov
fnsave
sub
stos
ficomps
dec
and
es
rorb
cmp
mov
mov
adc
js
push
aad
xchg
sbb
aam
dec
xor
rcl
and
pop
movb
jle
fidivs
pop
repnz
add
das
or
loopne
ljmp
inc
pop
add
call
les
sbb
das
xor
lock
lret
fimuls
test
fbstp
jge
out
inc
sub
aam
xchg
jg
mov
mov
add
enter
or
popf
orl
xchg
hlt
add
int
pop
add
sub
xor
fldt
add
mov
ja
loop
dec
lock
sbb
mov
mull
imul
pop
add
dec
lahf
mov
enter
sub
mov
das
mov
hlt
cld
add
pop
inc
xor
loopne
test
sub
or
push
xlat
cwtl
dec
adc
xchg
push
add
sbbb
les
nop
push
loop
je
adc
out
xchg
push
mov
fadds
aad
cmc
mov
in
jnp
or
es
pop
sahf
lret
sub
jmp
test
test
xor
ljmp
add
insb
add
jl
or
jp
incl
nop
add
pop
inc
mov
js
in
andb
xchg
lret
cmp
loope
or
xorl
cmp
inc
loope
pusha
add
sbb
dec
push
popa
rorb
push
xor
add
pop
xor
mov
cli
out
icebp
out
inc
fistl
xchg
cmpsb
jmp
and
pop
jl
sahf
push
std
add
or
push
adc
xor
or
std
andb
add
push
lahf
sbb
xorl
cli
mov
fwait
cmp
repz
repnz
cmp
fwait
in
int3
shrl
movb
sbb
cmp
repz
pusha
mov
movsb
inc
lahf
fldcw
mov
js
imul
mov
int
repnz
or
xchg
mov
jmp
dec
aam
dec
add
jge
popa
push
cmp
jmp
add
push
cwtl
rcl
into
in
pop
or
dec
movsb
das
push
xchg
push
adc
daa
movsl
mov
jnp
and
pop
or
sbb
xor
and
add
push
add
xchg
mov
fidivl
int
clc
loop
add
repz
add
mov
loopne
mov
aad
adc
push
dec
jp
xchg
fcmovnbe
sahf
adc
jle
push
xor
shl
fwait
outsl
out
xchg
inc
mov
mov
scas
adcl
pop
adc
xor
dec
xlat
and
movsl
xor
mov
fdivrs
or
mov
mov
sub
sbb
lea
pop
push
jecxz
loopne
mov
push
pop
loop
inc
push
es
sbb
stc
xor
add
loope
jb
pushf
sbb
cli
or
iret
pusha
mov
shrl
mov
sbb
icebp
outsb
std
pushf
pop
addb
and
push
in
sbb
cmp
add
sbb
lret
jg
cltd
das
adc
sbb
lock
loop
or
enter
sub
mov
loope
push
pusha
add
out
lock
or
and
mov
or
sub
push
xchg
sbb
cltd
add
or
fldl
fs
aas
es
in
ja
pop
loopne
push
cltd
lea
and
or
rclb
cmp
hlt
arpl
mov
sbb
roll
out
test
sbb
sbb
add
pushf
mov
sub
xor
ret
jg
out
or
mov
cmp
xchg
sbb
dec
adc
xchg
dec
test
add
inc
out
add
cwtl
pop
and
shll
inc
outsl
jo
test
fs
sbb
mov
sbb
lods
loopne
insl
int3
mov
sub
pop
add
loop
ss
cli
hlt
sub
mov
stos
adcl
xor
in
fldenv
out
jg
daa
jo
sbb
sbb
popa
mov
stc
out
adc
pop
push
adc
gs
mov
add
movsl
imul
std
push
xor
adc
insb
or
mov
dec
shlb
faddl
outsb
add
sbb
js
xor
insb
add
or
pop
add
push
mov
add
mov
outsb
imul
xor
dec
xor
and
and
sbb
inc
out
mov
arpl
iret
shrl
mov
sbb
aaa
adc
in
fnsave
or
movl
mov
add
lea
mov
xchg
incl
push
setbe
jge
cmp
mov
ja
ret
pop
sbb
push
inc
add
add
jecxz
adc
mov
js
mov
cmpsb
add
sub
lcall
cld
xor
xor
movsl
inc
aas
dec
xor
mov
add
mov
and
dec
add
lret
in
sub
loopne
cltd
fisubs
inc
shr
mov
sub
jne
in
adc
add
aas
dec
xor
out
push
xor
int
adc
mov
sbb
add
stos
repnz
adcl
or
add
cmpsl
rolb
mov
jno
mov
lock
sbb
pop
scas
xor
mov
push
loopne
mov
sahf
pop
dec
add
in
mov
jecxz
fldenv
icebp
xor
add
mov
adc
pusha
popa
mov
sbb
adc
add
outsl
loope
aad
pop
std
hlt
sub
and
dec
add
pop
adc
jae
mov
cld
inc
or
lret
push
sar
sbb
add
mov
add
mov
add
mov
mov
push
xor
add
add
cmp
push
cmp
ret
adc
xor
xchg
adc
pop
ljmp
sbb
in
jnp
pop
lahf
xchg
sub
test
xor
movsb
sub
mov
sti
inc
add
lods
push
jnp
xor
adc
xor
pop
adc
gs
add
leave
mov
inc
test
pop
dec
pop
dec
inc
push
pop
or
and
sbb
lret
xlat
insl
lock
hlt
mov
mov
add
mov
shl
test
mov
or
ret
jmp
fstpl
cmpsl
push
out
jns
push
add
sub
shl
insl
loop
loopne
push
inc
pop
push
cltd
dec
int
inc
adc
sti
test
stos
daa
sbbl
in
cmp
cmpsl
test
cmp
jb
jne
sbb
cwtl
add
jp
dec
enter
and
out
xlat
popf
pop
iret
or
bound
fildll
adc
push
ds
mov
aad
ret
in
xchg
pop
lea
divb
cmpsb
jmp
add
mov
dec
push
mov
pusha
flds
inc
orl
mov
add
aaa
ljmp
mov
popa
outsl
dec
pop
mov
inc
sbb
add
xor
xchg
enter
add
or
inc
jecxz
imul
mov
lcall
clc
jns
adc
push
cmp
xchg
mov
icebp
addb
mov
ss
hlt
out
add
inc
jns
jecxz
es
dec
inc
mov
push
cmp
push
in
out
iret
cld
add
sbb
inc
scas
out
roll
mov
movsl
and
add
out
mov
add
pusha
sahf
ja
in
sbb
fcmovb
lds
rcrb
cmp
dec
cmp
inc
push
mov
cmp
out
lds
sbb
lldt
loope
stos
mov
pop
add
push
scas
pop
adc
pushf
or
in
outsl
lahf
icebp
loope
push
fwait
add
mov
shl
test
add
cld
jle
bound
mov
push
mov
jmp
lock
outsb
cmp
or
add
push
movsl
arpl
adc
mov
in
pop
sbb
push
sub
roll
add
outsw
inc
into
mov
mov
and
out
aaa
pop
shrb
jmp
popa
xor
jp
add
sbb
addr16
push
and
or
insb
mov
jnp
jo
adc
push
push
lock
adc
insl
push
cmpsb
rolb
xchg
pop
xor
data16
dec
push
jo
lds
loopne
add
push
lahf
out
in
jecxz
xor
pop
push
and
in
addr16
frstor
cs
pop
jbe
inc
pop
dec
scas
add
rcrl
pop
push
add
sub
cmp
inc
popl
or
fadd
xor
enter
inc
xor
mov
push
sub
mov
lret
sti
imul
faddl
add
icebp
adc
xchg
xor
add
insb
or
xchg
jnp
notb
stos
add
mov
xor
sbb
or
add
aas
cltd
icebp
and
jl
pop
add
fsubl
sbb
movsb
out
mov
pop
or
xchg
or
pushf
xchg
add
push
sbb
mov
mov
mov
add
and
jnp
cmp
sub
cs
shll
scas
pop
cmc
cmp
or
cmp
add
sub
jp
cmpsl
mov
lcall
addb
pop
cli
jae
adc
test
add
ficomps
push
jmp
loopne
add
pop
push
out
enter
push
dec
adc
arpl
aad
push
into
cs
cmp
filds
repz
pop
cmp
and
mov
in
std
xchg
pusha
adc
push
into
add
jbe
ds
xlat
inc
add
mov
loope
or
cmp
js
cs
pop
add
cmc
add
or
sbb
cmp
fwait
test
iret
or
sbb
fiadds
popa
jbe
mov
add
mov
and
and
shrl
add
push
fiadds
sub
test
test
adc
js
push
add
add
ds
push
push
jno
add
test
cmp
add
pop
xchg
push
outsb
jp
loope
add
pop
push
or
call
adc
icebp
xor
leave
dec
subl
lock
mov
in
add
mov
std
leave
sahf
or
mov
inc
dec
sub
inc
xchg
dec
stc
ret
or
add
sbb
sub
and
daa
mov
loop
adc
fidivrl
add
arpl
xchg
cli
sub
daa
mov
add
add
pop
stos
hlt
xor
sahf
pushf
lahf
nop
add
dec
and
out
pop
jo
cmp
sbb
sub
xlat
push
jmp
or
fdivrl
popf
push
pmaxub
and
or
push
push
loop
cmc
lods
inc
lcall
or
ja
xchg
cmpb
cs
pusha
pop
pushf
lds
mov
stc
insb
daa
loopne
popa
rolb
push
add
gs
test
lods
out
addr16
add
repz
pop
sbb
or
add
mov
fcoms
sub
pop
add
xchg
movsb
jno
popf
aas
into
jg
mov
pushf
jle
add
pop
cmc
fxtract
mov
lcall
out
sbb
add
mov
popa
popf
adc
aad
dec
push
adc
xchg
cld
dec
adc
pop
lock
cmp
pop
xlat
in
pop
cwtl
adc
mov
mov
jne
jle
movb
scas
sbb
pop
loopne
add
enter
and
mov
cmp
mov
add
mov
add
adc
push
and
das
dec
dec
add
push
bound
dec
subb
jbe
mov
mov
sbbb
aaa
cwtl
addl
pop
xor
jns
mov
xchg
jg
dec
adc
fildll
and
inc
mov
adc
inc
lds
cmpb
push
add
loope
xlat
cs
add
loope
cmp
ret
loopne
js
pop
popf
inc
es
inc
aam
add
fcomi
outsb
add
sub
test
gs
xor
mov
addr16
push
stos
xor
gs
add
movsl
subl
cmc
lret
mov
mov
pop
inc
in
lea
in
push
cmp
shrb
fwait
lea
fs
sbb
mov
idivb
cli
pop
inc
push
cwtl
shl
dec
cmpsl
lea
fistl
addr16
iret
xchg
jecxz
inc
push
add
jge
dec
out
js
leave
pop
add
xor
push
pop
movsb
push
adc
push
mov
add
mov
jg
cmp
out
into
adc
int
pop
pop
add
pop
inc
mov
aam
add
aad
push
pop
leave
add
mov
inc
fadd
in
cwtl
sub
pop
icebp
clc
adc
add
xlat
dec
dec
incb
fbstp
cmp
fsubr
adc
xorb
aam
push
mov
adc
addr16
add
or
cmc
mov
fidivrs
lock
add
outsl
test
out
movsb
decl
fiadds
pop
jne
pop
stc
jae
out
leave
loope
mov
scas
fdivr
and
or
sbb
xchg
dec
loopne
repnz
jne
push
cli
xchg
add
arpl
dec
push
out
in
add
dec
mov
insl
and
mov
movsb
adc
rclb
sub
loop
mov
pop
das
and
jmp
inc
xlat
pop
dec
sbb
jecxz
jb
mov
popa
lock
sub
sub
add
pop
jle
adc
mov
mov
xlat
les
add
ds
push
out
subb
mov
mov
mov
push
inc
add
sti
inc
mov
sbb
pusha
mov
rcll
lret
add
test
inc
jecxz
adc
xchg
out
pop
in
lret
sub
loopne
andl
scas
pop
add
aad
mov
push
loope
mov
adc
in
ss
inc
mov
fcmovnbe
cmp
jp
dec
push
enter
or
lret
sub
cmpsb
cld
popa
or
xor
adc
or
and
pop
sbb
push
push
sbb
aam
fstpl
xchg
xchg
pop
nop
xchg
adc
dec
xlat
jge
mov
fimull
add
pop
add
loop
jecxz
jo
adc
mov
fcompl
xor
out
add
div
sti
loopne
mov
in
lahf
test
jecxz
sbb
sbb
push
out
cmp
loope
imul
jl
jge
aam
push
repnz
inc
test
add
insb
pop
adc
or
mov
lcall
or
out
pop
adc
pushf
rorl
loop
fisubs
dec
sbb
pop
les
std
sbb
sub
out
and
and
add
out
es
jno
aaa
loopne
cld
imul
xor
add
cmp
sub
mov
add
out
ljmp
mov
fwait
mov
mov
incb
add
rcll
mov
add
cmpsl
shrl
add
sbb
push
loopne
rcrb
add
or
inc
jno
lret
aas
xchg
push
notl
les
mov
fsubrp
in
adc
add
cmpb
and
shrl
push
jae
xchg
mov
cmp
add
aam
das
push
sahf
push
add
dec
fnstsw
dec
test
pop
inc
mov
dec
lods
aaa
add
add
ret
cltd
popa
mov
jo
pop
inc
push
pushf
pop
bound
xchg
daa
jno
xor
sbb
lock
or
rorl
cmp
add
loop
and
jno
jmp
sub
aam
mov
insb
nop
push
mov
cmc
icebp
lods
jns
push
repz
std
push
lds
popa
xchg
add
ror
stos
add
mov
lock
cltd
jmp
scas
add
test
xchg
mov
jl
sbb
xchg
bound
push
xchg
sbb
mov
jne
sbb
outsb
ret
in
mov
ret
sub
add
call
jno
jge
push
gs
xor
loope
adc
adc
add
and
ja
shl
fsubl
push
scas
out
in
sbb
xchg
mov
nop
mov
mov
ja
pusha
jp
jge
sbb
push
aam
jne
repnz
add
sarl
add
cmp
lcall
dec
pop
xchg
add
bound
mov
faddl
loop
ss
test
mov
loopne
les
pop
xchg
pop
pusha
in
jo
sbb
xor
popa
jmp
xchg
add
push
pop
sbb
add
std
mov
sbb
iret
and
xchg
or
sbb
aas
jns
cwtl
cmpsb
pop
in
adc
leave
call
mov
pop
and
jl
add
xor
push
popa
push
mov
loopne
aad
lods
jb
data16
add
out
fs
and
add
sarl
sbb
push
aas
inc
and
mov
out
pushf
aad
lahf
fisubl
bound
lret
outsb
pop
cmpsl
add
xchg
xchg
arpl
mov
add
fadds
std
adc
cli
int3
push
add
cmc
sub
mov
icebp
pop
mov
pop
imul
and
pop
adc
mov
jo
clc
fstps
mov
add
test
test
pop
pop
add
out
lea
add
mov
nop
lds
cmp
daa
dec
mov
adc
mov
mov
daa
or
xchg
or
xor
clc
sub
sbb
out
cmp
push
mov
mov
add
ss
in
adc
jg
icebp
pop
popa
mov
test
iret
add
inc
gs
out
or
sbb
outsl
ret
jecxz
enter
sub
mov
movsl
pusha
jae
adc
cmp
add
test
jnp
xchg
mov
mov
clc
xor
std
add
xlat
cmpsl
lret
dec
ja
in
nop
push
loope
daa
mov
filds
lret
test
xor
push
aas
insl
push
fcoms
push
pop
jmp
lcall
pushf
cmpsl
push
popf
outsl
or
push
insb
xchg
testl
push
mov
loop
push
jmp
xchg
dec
cli
sbb
mov
jo
mov
ret
pop
mov
xor
or
pop
mov
adc
js
jae
loope
add
fwait
mov
add
insl
out
push
iret
stos
adc
ret
xlat
pop
inc
pop
add
in
cmp
dec
add
dec
push
push
mov
mov
cmp
push
mov
push
push
add
ja
xor
mov
add
nop
adc
jne
stc
lcall
or
jp
ret
push
mov
add
adc
cmpsl
sbb
and
sbb
add
rcrw
loop
bound
lock
cli
jecxz
jge
or
add
loopne
push
sti
mov
sbb
add
mov
or
cmp
push
cmp
adc
xchg
decb
inc
mov
mov
dec
add
mull
es
daa
in
and
in
adc
rcl
add
ret
scas
push
pop
fstps
loop
ds
pop
cmp
jmp
sbb
or
lds
inc
mov
xchg
or
imul
fs
add
das
jnp
fadd
dec
out
add
mov
xor
pop
add
xlat
mov
push
or
jo
push
mov
addl
sub
pop
sbb
mov
js
push
je
adc
mov
ljmp
fldenv
pop
sbb
out
inc
jb
loop
xor
pusha
testb
mov
sub
ret
insl
and
daa
mov
jle
xchg
cwtl
das
rolb
repnz
add
mov
sbb
add
dec
pop
adc
into
fisubrs
add
and
pop
dec
mov
out
jle
xlat
jmp
sub
push
aad
fwait
cmpl
cs
pop
jo
fs
adc
and
cmp
push
push
enter
push
xchg
into
pushf
cmp
sbb
into
mov
out
inc
pop
notl
lret
add
inc
mov
bound
popf
push
add
mov
int
adc
adcb
mov
lcall
test
add
add
xchg
jecxz
andl
push
xor
roll
dec
stos
ficompl
jnp
inc
jne
pushf
pusha
xchg
sub
xchg
cli
push
sub
sub
cmp
shrb
pop
or
xchg
leave
dec
adc
push
decb
xchg
ret
adc
mov
cmc
cli
cld
or
adc
lods
push
push
lcall
cwtl
add
push
add
push
xor
popl
and
push
rcl
insl
int3
add
out
sbb
ficoms
add
js
xor
push
mov
add
test
mov
add
jmp
jb
and
aam
cltd
mov
icebp
lds
mov
jecxz
add
sub
xchg
xor
loopne
insb
jnp
or
jge
pop
into
cmpsl
rep
adc
dec
mov
add
shll
mov
adc
movsl
jbe
pop
jo
ret
scas
adc
into
mov
add
push
jecxz
das
fidivl
adc
inc
add
mov
sbb
pop
fidivl
sub
xor
lahf
mov
jns
cmpsb
sub
lcall
repnz
add
das
adc
cs
cmp
ja
scas
add
scas
and
out
push
add
mov
and
dec
push
rcll
adcb
sti
stos
mov
mov
lcallw
add
ja
int
and
add
sub
in
in
lods
xchg
xor
and
cwtl
daa
incb
not
dec
xchg
inc
pop
add
std
pop
pushf
mov
jae
adc
add
xlat
enter
mov
sbb
adc
das
dec
and
add
adc
in
ret
cmp
add
cld
push
pop
push
lds
mov
lcall
ljmp
adc
icebp
scas
rcrl
mov
sbb
sbb
add
lcall
add
add
dec
addr16
jmp
lahf
das
lahf
sub
mov
stos
loope
outsl
inc
inc
jle
jnp
jne
sub
mov
into
sbb
popa
push
push
inc
add
clc
loope
pusha
lret
mov
jp
cld
inc
sbb
push
adc
rorl
mov
js
sbb
mov
pop
add
repz
adc
and
push
add
repnz
push
fbld
add
mov
mov
mov
and
daa
nop
jns
add
sub
and
cmp
mov
iret
out
xor
ret
out
ds
repz
jmp
xor
cmpsl
push
gs
ss
adc
or
enter
in
and
xor
lock
and
sbb
sbb
or
add
mov
fldl
sbb
fldcw
icebp
lcall
pop
dec
add
jle
lcall
ds
fistpl
std
adc
adc
inc
js
movsl
add
hlt
gs
mov
lods
pop
mov
das
or
adc
in
mov
adc
je
loope
xchg
push
dec
or
add
xor
imul
inc
jbe
mov
ss
push
xchg
leave
mov
pushf
loopne
add
daa
call
les
mull
xor
add
lds
in
add
std
cmpxchg
add
sub
addl
fxch
lds
fs
iret
pop
jae
sarb
xchg
das
test
popf
add
mov
adc
add
dec
rol
cmp
hlt
fisubs
cld
xor
jl
in
shr
rcll
mov
xchg
ret
sbb
pop
loop
dec
pusha
sbbl
push
jg
cwtl
filds
adc
outsb
xorl
cmc
sub
sbb
jns
jnp
jecxz
or
mov
pop
mov
inc
and
ret
add
sbb
lods
sbb
xchg
je
and
mov
pop
cltd
adc
mov
pop
sbb
inc
sarb
ss
dec
pop
out
pop
add
push
mov
fld
jae
jo
add
mov
adc
add
jge
rcrl
pop
scas
out
lds
and
outsl
pop
insl
sbb
mov
mov
jae
popa
lock
pusha
scas
push
cmp
sbb
cmc
cmpsl
sbb
pop
and
cmp
jb
mov
shll
bnd
mov
mov
dec
mov
and
inc
jbe
add
mov
scas
cs
and
sub
push
les
test
jne
dec
dec
jge
sbb
xchg
jl
xor
cli
xor
inc
jmp
sahf
outsb
push
mov
cmp
dec
addl
and
notl
push
aas
or
adc
dec
and
add
xchg
sub
add
mov
mov
jge
and
push
push
sahf
repz
push
add
xor
incb
push
add
lock
fldt
mov
xchg
pop
sahf
cmc
adc
xor
aam
push
xchg
add
loopne
push
scas
mov
jae
inc
loope
cmc
push
and
sbb
fmul
aas
add
jl
jmp
imul
imul
std
push
pop
pop
push
add
xchg
mov
add
mov
xchg
test
es
test
add
dec
cld
in
insl
pop
add
pop
xor
insb
sub
add
xchg
or
cmp
cli
loope
mov
add
sub
test
mov
jmp
aad
sbb
pop
fimuls
fst
or
push
aaa
jno
scas
add
scas
ret
add
mov
shll
outsb
sub
or
cmp
add
jg
xor
in
pop
and
pop
lahf
sbb
or
fisubs
loopne
and
push
loope
popl
dec
sub
lret
xorl
xchg
add
in
cld
sbb
iret
jmp
mov
add
outsb
add
jb
addl
popf
push
pop
adc
mov
clc
xchg
add
jecxz
testl
adc
std
test
pop
jae
ljmp
cs
stos
icebp
add
adc
xor
add
mov
fwait
movsl
into
cmp
nop
mov
mov
repz
fcomps
sbbl
xchg
lds
xchg
mov
dec
rcll
xor
and
inc
mov
inc
sbb
jp
add
cmc
shll
out
inc
scas
add
mov
adc
add
pop
outsl
or
jo
xchg
lds
dec
add
fisubrs
lock
mov
ret
faddl
fwait
push
mov
sub
imul
shl
cld
daa
add
mov
xchg
dec
in
cmc
stos
jne
mov
dec
add
nop
mov
hlt
jmp
cld
lds
in
sub
rolb
mov
push
dec
ds
clc
cmp
in
incl
pop
cs
pop
ret
push
and
cltd
in
cmpsb
add
out
jo
ss
dec
ret
int
aam
cmp
or
xchg
rolb
xor
mov
cmp
loope
shrb
insl
push
and
imul
dec
nop
in
mov
daa
pusha
mov
or
hlt
or
add
mov
ja
rolb
push
pop
lods
inc
xor
cs
ret
lock
lret
mov
pusha
xor
mov
add
cmp
rcr
les
fildl
insb
or
add
and
mov
add
stc
call
out
inc
and
and
cltd
mov
mov
mov
xor
mov
in
outsb
or
mov
pop
out
mov
xchg
mov
fidivrs
pop
mov
test
ret
add
cwtl
ror
sub
lahf
gs
ja
popa
mov
rclb
xor
outsl
add
test
xor
push
or
cli
push
push
cwtl
repnz
les
mov
sub
shl
add
ja
push
inc
out
jbe
adc
aas
add
adc
in
es
leave
jecxz
mov
sbb
xchg
cmp
icebp
adc
inc
mov
lahf
mov
pop
jecxz
fnsave
jp
add
decl
mov
std
jae
lahf
mov
xlat
push
xor
xor
adc
cli
inc
and
add
test
icebp
les
ret
sbb
and
fnstsw
das
add
mov
aad
cmp
push
inc
scas
xorl
and
scas
or
sahf
sahf
cld
pusha
add
sub
adc
int
add
stos
xchg
das
xor
sub
and
inc
stos
sub
cwtl
push
mov
insl
add
jmp
mov
fstl
in
xchg
aaa
iret
daa
shll
adc
jns
incb
mov
mov
in
jbe
pop
pop
mov
ret
loop
and
add
call
imul
adc
test
add
fadds
add
icebp
call
add
push
fiaddl
ror
pop
pop
and
fwait
movsb
outsb
lods
ljmp
das
xor
jo
adc
mov
adc
or
std
pop
add
lods
push
xchg
into
xchg
add
mov
cmp
mov
xlat
faddl
sahf
dec
lods
outsb
mov
push
add
scas
add
movsb
jo
cli
add
test
cld
dec
push
pop
and
inc
sub
test
idivb
mov
arpl
loope
adc
cmp
jle
pop
outsl
mov
add
mov
jns
notb
xchg
dec
push
and
mov
leave
sbbl
sub
out
cmpl
xchg
add
jge
aam
loopne
push
sarl
inc
je
push
add
imul
faddl
lcall
fiadds
cmp
imul
inc
hlt
dec
xor
les
xchg
lahf
lret
daa
ret
mov
lds
int
lcall
imul
fwait
adc
add
mov
loope
inc
add
lahf
xchg
mov
add
fists
das
loopne
lcall
add
les
add
dec
popf
insb
test
ret
pop
or
mov
mov
add
icebp
and
jnp
sbb
xchg
add
and
test
andl
add
roll
mov
repz
jbe
dec
push
xchg
pushw
cmp
mov
xchg
loope
sbb
jl
xor
lcall
inc
clc
push
fcompl
aam
xchg
xor
out
push
ret
rcrb
loopne
sub
sbb
inc
xor
out
out
lret
mov
in
add
lcall
daa
sub
adc
sbb
xchg
fisubrl
dec
mov
lods
add
in
push
add
fwait
lea
mov
ljmp
lret
cmpsl
jle
adc
inc
mov
and
out
pop
fcmovnb
dec
add
lret
lea
decl
test
out
loope
movsb
das
mov
pusha
add
fstp
outsl
or
push
sub
loopne
push
add
fs
rorb
add
cmp
ficomps
out
adcl
pusha
sub
mov
or
js
scas
xor
or
xchg
mov
addb
movsb
mov
or
or
mov
pop
adc
sbb
imul
out
lock
int
or
out
notl
out
add
ret
pusha
adc
inc
sbb
cli
push
loopne
data16
add
aam
dec
sbb
inc
cmp
cltd
in
ficoms
fadds
into
jg
shll
add
mov
fldz
addb
add
or
push
icebp
mov
inc
or
mov
xor
pop
add
mov
cmp
xchg
pop
add
push
mov
pop
and
or
pusha
add
mov
or
aad
movsb
and
mov
adc
and
push
bound
js
adc
adc
addr16
and
leave
pop
ret
mov
push
arpl
push
inc
add
cld
pextrw
scas
aaa
loopne
pop
push
xor
push
repz
ja
cmp
stc
insb
push
movsl
add
xchg
push
cli
popf
inc
mov
sbb
sti
jge
les
xor
xchg
push
add
cmpsb
std
and
outsb
add
pop
cmpsl
sbb
inc
fsubr
into
shrb
mov
ss
movsb
adc
nop
jb
fs
ds
push
fwait
cld
inc
dec
arpl
lahf
add
imul
push
loop
or
dec
cwtl
cmp
mov
add
dec
out
or
loopne
icebp
sti
mov
xorl
cwtl
mov
cmp
popf
addr16
push
lock
outsl
icebp
mov
scas
pusha
inc
xor
dec
fstps
add
sbb
and
dec
data16
inc
ljmp
enter
test
push
nop
scas
fdivr
add
add
mov
in
aad
push
stc
mov
ss
fldl
loope
inc
xchg
rolb
dec
leave
add
and
call
add
cmp
inc
lods
xor
ret
insl
cmc
cli
sbb
shll
mov
popa
scas
int
pop
out
xor
out
shll
xchg
inc
dec
test
add
xchg
dec
insb
repnz
sbb
push
movsl
add
enter
dec
loop
mov
push
and
sbb
out
add
xchg
repnz
rol
or
sub
lods
pop
xlat
pop
push
ret
jb
dec
xorb
sbb
iret
icebp
push
data16
cmp
mov
fbstp
and
dec
adc
or
std
and
les
scas
push
adc
sbb
test
mov
ret
dec
push
cs
pop
or
insb
arpl
das
loopne
xchg
inc
pop
rcll
jns
and
add
mov
cs
inc
dec
xchg
xchg
add
xchg
pop
dec
das
insl
data16
lods
arpl
jne
popa
add
sbb
mov
jae
and
dec
or
popf
add
xor
pop
outsl
adc
jle
fdivl
pop
dec
shl
lods
sub
std
adc
lahf
out
push
in
push
pop
jmp
pushf
je
mov
popl
cmpb
sbb
and
jbe
in
shrl
jae
dec
cwtl
jp
pop
imul
test
loopne
xor
mov
adc
xorb
add
inc
mov
jmp
loope
push
jp
sbb
mov
fistpll
cmp
or
in
pop
dec
xchg
loope
dec
push
filds
lods
stos
mov
inc
rorl
mov
pop
inc
loopne
out
dec
test
lret
pop
in
xor
aam
daa
sbb
sub
mov
icebp
and
dec
bound
sbb
pop
inc
mov
insl
push
mov
popf
add
movsb
cmp
imul
cmpb
sbb
imul
jmp
mov
dec
repz
add
test
add
jg
call
adc
ljmp
pop
sbb
fwait
jl
add
icebp
clc
or
cmp
adc
push
add
add
stos
xor
pop
or
cmc
fldcw
inc
xchg
mov
scas
mov
sbb
dec
add
shll
dec
addl
or
aad
xorb
xor
jne
adc
out
xchg
jbe
push
mov
shrb
add
icebp
inc
movsl
lahf
shl
rcrl
pop
and
xchg
mov
shll
cmp
pop
pusha
mov
test
add
mov
pop
aam
dec
pop
incb
icebp
pop
and
fistps
ret
nop
xor
or
push
ds
xchg
mov
in
jno
into
mov
mov
mov
dec
aas
or
mov
add
data16
sub
add
fcompl
or
ret
push
cmp
mov
fs
scas
cs
pop
sbb
inc
enter
and
jae
pushf
sahf
fiaddl
jbe
push
sbb
xchg
push
in
icebp
ret
out
jne
add
and
push
jb
or
cli
mov
push
push
sub
int3
add
cwtl
adc
add
cld
inc
push
add
pop
cli
and
les
inc
mov
sbb
sarl
ljmp
push
ret
sbb
xchg
cmp
out
mov
push
pushf
jecxz
mov
lock
pop
add
mov
xchg
add
insb
dec
sub
push
loope
or
ljmp
inc
cmp
ret
mov
iret
sub
pop
add
movsb
lcall
out
ret
add
sbb
jmp
popa
mov
adc
pushf
pop
filds
mov
notb
mov
push
or
cmp
fs
call
sahf
scas
xor
and
arpl
aam
sub
mov
sub
ljmp
mov
pop
mov
outsl
dec
dec
mov
sub
add
mov
je
mov
xor
lods
push
cmp
inc
sbb
rclb
add
je
daa
pop
mov
inc
data16
dec
mov
pop
imul
std
add
mov
inc
xor
add
jle
cmp
testl
push
lock
mov
inc
in
rolb
dec
xchg
ja
fisttps
scas
iret
add
pop
dec
test
push
adc
shrl
lret
sbb
xchg
cmc
mov
add
inc
mov
add
jl
rolb
insb
inc
hlt
out
jae
xor
das
daa
out
push
dec
cltd
pop
loope
scas
adc
or
addr16
int
flds
and
and
pop
bswap
mov
repz
adc
outsl
jnp
dec
bound
add
xchg
mov
test
sbb
icebp
sub
pop
push
adcl
outsl
adc
pop
dec
jb
cmp
jmp
incb
push
or
call
insl
add
pop
adc
add
jo
out
add
mov
jl
mov
add
pop
jg
pusha
seto
add
lea
add
sub
scas
lds
sar
cmp
add
mov
mov
xchg
rorb
mov
cmp
add
pop
pop
sbb
inc
call
insb
sbb
pop
fstp
add
clc
xor
pusha
and
inc
loopnew,pn
icebp
xor
jo
outsb
movsl
leave
ret
add
sbb
addr16
stc
adc
aaa
adc
call
mov
scas
cwtl
ds
add
mov
add
shrl
in
js
out
test
add
ljmp
xchg
les
pop
add
add
cmpsl
pop
in
mov
lock
inc
adc
or
pushf
popl
dec
xchg
aam
out
test
jno
movsb
incb
sbb
and
data16
sbb
cmp
add
addb
pop
mov
xchg
xchg
mov
nop
push
add
xchg
sbb
pop
subb
hlt
pusha
mov
lods
add
jmp
pop
mov
push
and
out
fwait
cmpsb
add
jbe
or
mov
or
popf
loope
test
add
jae
cwtl
int3
fldcw
or
inc
mov
cld
inc
jecxz
jp
sbb
stos
lock
pop
or
jnp
adc
add
xchg
mov
xlat
dec
gs
test
lds
ret
dec
xchg
lret
daa
dec
or
and
sub
pop
dec
outsl
and
push
jle
xor
insb
dec
lods
pop
xlat
mov
add
xchg
adc
es
mov
jecxz
mov
sbb
imul
pushf
add
int3
push
push
cwtl
and
add
loop
out
icebp
lds
into
std
push
pop
or
xorb
sbb
sbb
fadds
cmp
mov
add
mov
pop
not
inc
das
outsl
sbb
mov
xchg
xor
pop
and
leave
mov
cli
mov
sub
mov
loopne
jbe
imul
jecxz
xchg
and
fldcw
inc
or
add
pop
push
ss
lahf
addl
or
into
incl
jae
mov
mov
dec
scas
push
inc
test
jno
or
addr16
xchg
rcrb
add
fiaddl
movsl
insl
mov
fsub
testb
int3
cmpsb
push
jo
inc
std
add
les
or
and
and
outsb
test
and
dec
sbb
push
or
ret
and
xchg
rol
popa
xor
add
rorb
scas
xchg
loope
pop
jg
dec
and
add
sbb
imul
test
add
pop
mov
mov
sbb
inc
xchg
mov
mov
out
dec
pushf
push
add
and
sbb
rcll
ret
out
sub
add
repnz
js
sbb
loope
loope
cmp
or
clc
imul
or
popf
sbb
stc
test
jo
push
adc
dec
hlt
add
cmp
das
mov
mov
or
lods
add
mov
repz
mov
add
xchg
adc
ds
push
push
add
pop
cltd
lock
dec
add
mov
stos
add
hlt
adc
or
mov
and
test
or
fwait
add
dec
mov
add
push
movsb
sub
mov
std
lods
fcoml
insl
and
test
test
icebp
das
or
leave
bound
add
mov
pop
cmp
fs
test
repnz
shlb
mov
push
xor
das
sub
movb
xchg
outsb
cli
add
loope
pushf
or
movsl
movups
inc
jmp
adc
jo
mov
mov
repz
mov
out
int
rol
xchg
mov
mov
jbe
pusha
jecxz
test
sbb
xchg
or
ret
sbb
inc
xor
sbb
add
sahf
repz
mov
cmpsl
push
mov
push
stc
push
in
sub
add
out
cld
xchg
jmp
stos
and
daa
ds
push
lds
or
shrb
and
cld
add
sub
fwait
add
lret
adc
shll
jo
sbbb
jmp
lods
inc
add
stc
in
in
aaa
mov
cmpsl
add
mov
push
fisubrs
push
cmp
loop
mulb
push
mov
push
test
and
outsl
dec
add
aad
movsb
pop
scas
xchg
fwait
adc
mul
add
cmp
adc
push
cmp
aad
outsb
mov
add
xchg
mov
and
dec
push
pushf
push
and
adc
fst
cmp
sub
sbb
aaa
aas
inc
add
cmp
jno
cld
ret
mov
sub
cltd
int
inc
pushf
pop
cwtl
outsb
stos
loopne
iret
inc
jle
outsb
mov
dec
push
mov
xchg
sbb
movsb
xchg
add
xchg
jmp
push
add
in
les
ret
push
sbb
out
loope
xor
sbb
shl
dec
fisubl
mov
pop
std
sbb
cmpsl
add
daa
sub
add
repz
pop
push
dec
inc
add
xor
imulb
loopne
jge
add
sbb
xchg
fs
adc
clc
out
pop
lea
add
xor
adc
nop
mov
outsb
sbb
mov
add
lds
addr16
and
movsb
sahf
in
test
test
stos
sbb
loop
call
jae
pop
dec
and
dec
dec
inc
mov
je
shl
mov
push
test
or
sbb
cmpsl
mov
adc
jb
xchg
or
pop
bound
ffree
scas
fdivrp
jae
int
xchg
sbb
add
cmc
mov
inc
jp
dec
mov
inc
idivb
xor
add
mov
inc
cld
jecxz
add
and
sbb
in
or
in
fs
pop
mov
adc
adc
hlt
mov
dec
in
shl
pop
sbb
add
pushf
lods
popa
lds
xchg
xchg
adc
les
push
xchg
and
scas
clc
push
aaa
add
lret
rcrl
push
addb
add
add
loop
cmpsl
push
push
cmp
xor
lds
add
addl
add
jle
xchg
adcb
xchg
enter
icebp
adc
sub
xor
lret
jno
iret
aad
sbb
shlb
testl
in
scas
add
mov
filds
push
sbb
push
cld
dec
pushf
add
xchg
pop
inc
sub
add
pop
add
cli
jae
rcr
enter
mov
cs
lds
test
and
fbstp
std
sbb
lcall
sbb
jl
out
add
jae
in
call
add
mov
pop
add
pop
inc
and
fsubr
shlb
pop
int
pop
mov
inc
xor
pop
pop
lret
push
add
xor
mov
push
adc
cltd
sub
add
ljmp
jne
test
push
push
roll
xchg
nop
cli
dec
addr16
sub
xor
js
push
je
or
mov
adc
gs
cmpsl
lcall
pinsrw
push
add
cmpsb
mov
push
pop
icebp
test
xchg
pop
xchg
add
lds
les
mov
inc
jo
rcll
call
and
push
imul
dec
arpl
popf
cli
fstpl
xchg
sahf
mov
push
cmpsb
insb
sti
xor
inc
push
cmc
sbbl
std
mov
add
aas
testl
add
cmpsb
mov
pusha
dec
cmp
add
insb
jnp
adc
sub
add
inc
popa
adc
mov
pop
lea
repz
xor
push
jae
add
mov
jmp
adc
jp
sahf
pop
incb
aad
subl
mov
pop
shll
outsb
popl
mov
add
cmp
data16
leave
or
add
movsl
test
add
mov
dec
adc
jge
adc
out
and
into
bnd
stc
and
mov
pop
pop
in
daa
dec
adc
adc
in
jg
jmp
pop
insb
or
add
sbb
or
sbb
std
es
add
into
inc
add
rol
cmp
xchg
pop
fistpl
mov
or
sub
push
jo
lods
pop
push
push
std
or
movsl
xchg
cld
add
push
pop
imul
cld
or
xorb
add
mov
fsubs
pop
ret
arpl
add
inc
pop
sub
add
xchg
adc
and
addr16
jp
stos
cmp
add
dec
sub
push
addl
hlt
gs
cmp
mov
pushl
adc
pop
stc
push
xor
lds
psllq
push
add
push
leave
jb
daa
js
out
inc
add
pusha
fidivs
and
mov
dec
ret
pop
arpl
stos
push
pop
mov
fisttps
add
add
loope
decl
cmp
cmpsb
das
rcrl
mov
push
push
add
mov
cmp
and
jle
bnd
add
and
repz
scas
or
sub
mov
add
clc
rol
pcmpeqw
dec
inc
lea
in
adc
cmpsl
and
add
lods
add
loopne
outsb
sub
mov
and
sub
enter
xor
add
call
dec
fs
dec
int3
and
cmpsb
rclb
loope
out
adc
insb
jg
cmp
insl
mov
pusha
xchg
aad
mov
push
scas
filds
push
fbld
xchg
xor
add
std
popa
in
mov
mov
fs
add
int3
xor
out
add
cmp
cs
mov
adc
loope
jmp
insl
hlt
test
sub
push
add
int3
inc
mov
xchg
mov
xchg
dec
jne
xor
sub
jno
shrl
sub
xor
pop
std
fcmovnb
cwtl
pushf
lahf
pusha
outsl
sbb
push
pop
outsb
adc
lea
add
jbe
inc
sbb
loop
xor
jno
int
test
mov
ljmp
sahf
pusha
add
vmulss
mov
aas
mov
adc
jp
and
add
xchg
popa
xchg
lahf
cmp
or
pop
fucomip
int3
call
xchg
dec
jl
hlt
std
sbb
decb
jns
fnstenv
or
enter
ljmp
jle
sbb
adc
jnp
push
mov
mov
stos
fsubl
or
mov
add
adc
add
sub
hlt
and
push
cwtl
cmpsb
adc
fwait
dec
incl
mov
loope
or
sbb
xor
or
push
add
out
add
adc
xchg
adc
mov
push
pushf
and
ret
add
mov
mov
int3
rcrb
sbb
xchg
push
pop
or
addb
mov
cs
and
repnz
jg
push
fwait
lds
pop
add
mov
bound
add
fcmovnbe
fimull
xlat
add
stc
dec
mov
add
mov
data16
push
mov
mov
and
dec
sbb
adc
repz
xchg
outsb
add
pop
xchg
movsb
cmpsb
mov
idivl
and
pop
push
dec
mov
mov
push
mov
insb
ljmp
dec
call
loope
push
imul
pop
sbb
or
add
push
movb
ljmp
cmpsb
push
and
orl
inc
je
loopne
sub
push
jnp
test
adcb
lret
or
rclb
enter
add
movsb
ret
fwait
scas
in
inc
and
shll
add
mov
sub
bound
sub
jge
sbb
mov
popf
sbb
or
add
add
xor
add
imulb
packsswb
adc
push
add
lds
jl
sbb
add
testb
into
inc
fadds
sbb
pushf
adc
add
xchg
dec
add
aam
xor
popf
imul
jbe
test
lods
xchg
test
filds
jo
mov
push
mov
push
popl
adc
pusha
dec
inc
mov
adc
push
out
add
sbb
xor
push
add
insb
adc
mov
cmp
rol
inc
fcomps
pop
out
sbb
out
addb
imul
push
and
pusha
push
push
dec
xor
adc
aad
incl
sub
mov
mov
insb
mov
and
pop
adc
das
mov
jns
scas
pop
inc
iret
call
lret
fwait
outsb
sbb
xchg
roll
nop
pop
mov
add
scas
rcr
pop
and
inc
lock
add
mov
sbb
int
xchg
mov
xor
loopne
adcb
add
fistps
test
and
int3
das
push
sbb
or
lds
mov
or
adc
adc
push
roll
sub
adc
dec
daa
push
jns
fwait
add
iret
je
jge
add
cmp
jmp
dec
cwtl
and
xchg
test
pop
add
dec
sbb
mov
ljmp
mov
and
push
push
cmp
mov
inc
pop
jb
mov
pushf
xor
and
fs
inc
add
hlt
mov
out
loopne
out
jmp
xlat
in
out
in
stc
add
lock
lods
arpl
das
pop
and
jne
mov
adc
es
push
inc
cli
add
pop
loop
xor
mov
pushf
rorl
out
push
add
mov
xor
roll
xchg
push
xlat
ficomps
popf
pusha
add
lahf
xchg
mov
add
gs
lret
inc
pop
xchg
daa
stos
adc
pop
jmp
ret
fildll
mov
pop
push
adc
les
adc
popa
xor
xchg
mov
mov
pop
fisubrs
rcrl
hlt
mov
flds
je
sbb
pop
mov
add
inc
mov
lock
mov
shlb
xlat
add
pop
sub
mov
add
dec
dec
fiaddl
leave
push
in
sbb
and
inc
mov
jae
mov
sti
dec
rorl
insl
xor
inc
add
sub
repnz
roll
fimull
nop
popa
sbb
add
xlat
rcrb
lret
adc
pusha
push
push
lahf
adc
push
fldt
out
addr16
lahf
push
pop
and
mov
fstpl
stos
adc
test
inc
repnz
lret
shll
cmp
lret
addb
sub
fmul
add
adc
sbbb
repnz
mov
pop
test
fstpt
ret
sbb
jae
in
repnz
je
jbe
or
loope
rcll
in
mov
rcl
add
pop
jle
mov
jae
add
shll
aaa
ds
js
inc
inc
xor
in
lods
out
stos
fidivrs
xchg
jno
add
rorb
add
inc
pusha
lods
orl
mov
shlb
add
xchg
in
inc
cs
std
add
pop
pop
xchg
ficomps
int
or
add
ret
xchg
stc
or
addr16
or
mov
ja
mov
adc
pop
mov
sub
sbb
mul
pop
mov
add
scas
mov
mov
mov
inc
incb
dec
and
adc
cmpsb
mov
les
fwait
cmp
xchg
add
inc
insl
or
sub
xchg
aas
sub
push
pop
fcomps
mov
jb
pop
loope
jg
mov
jmp
add
lock
inc
add
shll
xor
and
icebp
inc
sbb
cwtl
mov
bound
push
sub
cmp
popf
sahf
add
and
sbb
and
ds
adc
cmp
push
xchg
enter
jo
push
ret
pusha
sbb
mov
daa
jg
add
pop
xchg
cli
xor
add
mov
into
jne
mov
pop
sub
push
rcll
add
pop
dec
ja
pop
gs
mov
and
push
scas
adc
sub
loope
lods
add
add
fmulp
repnz
xor
test
ljmp
ret
sbb
mov
add
or
adc
pop
in
jle
loop
testb
dec
pop
add
mov
xlat
add
fwait
arpl
inc
add
movsb
xchg
sub
lahf
sbbb
add
xor
jo
and
xor
cmp
mov
inc
push
adc
pusha
aaa
es
cltd
or
add
and
push
push
pop
add
mov
add
mov
fcoml
jnp
adc
adc
sbb
out
push
lret
das
add
adc
inc
mov
add
mov
fwait
xlat
ds
add
sahf
aaa
pushw
fisubl
dec
cmpsb
xor
lds
add
lret
bound
pop
mov
dec
enter
or
fs
sub
mov
or
scas
pushf
pop
ja
jle
cld
push
outsl
adc
outsb
mov
sub
les
or
xor
aas
test
mov
loopne
mov
fdiv
filds
push
outsb
pop
mov
or
jns
add
xlat
mov
add
cwtl
cmp
leave
adc
add
or
add
insb
subb
sti
pop
xchg
imul
addb
out
jl
jns
aas
rep
outsl
bound
sbb
into
add
arpl
add
sbb
mov
je
cmc
mov
subb
add
dec
and
rcrl
mov
lods
js
xlat
adc
add
mov
roll
jle
sub
outsb
add
stc
insb
jo
pop
pushf
mov
rclb
jae
loopne
pop
in
mov
adc
out
lret
imul
sub
sub
aas
pop
add
mov
stos
mov
cmp
out
cmp
lahf
pop
pusha
fmull
or
rcll
call
push
mov
xchg
cmpsl
pushf
sub
mov
stos
pop
lcall
daa
addb
or
or
fldt
fs
push
pusha
xchg
inc
pop
xchg
mov
sti
add
add
sbb
fmul
add
movsb
shlb
sbb
add
ja
lret
mov
mov
rorl
or
add
arpl
pusha
idivl
fdivs
push
add
lret
adc
insb
cld
inc
cwtl
add
mov
je
xchg
aam
sub
scas
cmp
add
add
add
mov
inc
add
cwtl
in
mov
repz
push
pop
xchg
mov
movsl
cld
arpl
sub
mov
xor
aam
add
testb
outsb
or
adc
and
xor
pop
sti
adc
mov
pop
jnp
lds
ss
push
sub
mov
pop
add
sarb
push
cld
inc
push
inc
or
xchg
xchg
orb
add
out
inc
iret
cmp
add
ficoml
lds
and
pop
roll
loop
adc
in
add
fcmovne
or
add
inc
pop
test
add
jp
add
fs
cltd
rolb
dec
pop
out
in
hlt
or
sub
pop
pop
jnp
mov
popa
pop
aas
xchg
add
pop
mov
inc
and
sbb
dec
pop
jns
addb
rcrb
push
add
lret
inc
aaa
shrb
pusha
mov
movsb
stos
xchg
jne
inc
fsts
notl
and
rcll
xor
pop
or
in
and
and
arpl
push
fiadds
clc
sbb
inc
or
add
add
add
out
add
mov
mov
inc
add
lret
cmp
scas
ret
lcall
imul
cld
add
xchg
lcall
mov
lahf
sbb
pop
or
addr16
mov
popl
out
inc
dec
xor
in
dec
loope
push
lcall
xor
mov
inc
and
add
nop
scas
fsubs
inc
cmpsb
scas
inc
add
xchg
sub
in
imul
fwait
add
push
lret
fcompl
pop
ret
xchg
addr16
inc
jg
movsl
cmp
jo
ljmp
add
aaa
fwait
mov
and
add
lret
jmp
pop
stc
mov
lods
pop
sbb
pusha
fstl
jo
pop
sbb
fcomps
dec
add
push
cmp
xorl
scas
and
movsl
mov
std
pop
ficomps
mov
push
add
mov
sbb
add
mov
mov
and
jp
jge
or
stos
ljmp
js
in
push
popf
adc
add
add
fcomp
pop
shrl
mov
inc
adc
shlb
sti
loope
xchg
dec
xor
add
stc
push
dec
mov
negl
and
dec
sub
aad
add
das
mov
bound
ja
lock
add
mov
or
jecxz
adcb
das
sbb
mov
rclb
pop
movsl
sbbl
clc
or
mov
mov
jmp
jne
lahf
adc
outsb
outsl
adc
jo
jno
les
aad
adc
in
movsw
frstor
lods
push
pop
shl
xchg
sahf
in
rolb
aad
lret
pusha
adc
add
leave
fs
mov
sub
add
jp
mov
sbb
push
or
rcrl
sbb
jmp
inc
cs
jl
ret
cmp
and
pusha
bound
dec
shlb
add
ss
lods
leave
and
decl
out
adc
movsl
cmc
jo
jns
std
or
and
loope
add
pop
fiadds
dec
in
push
sbb
notl
push
mov
xor
je
jmp
movsl
loop
cltd
lods
outsl
add
pop
scas
iret
or
add
xor
addl
mov
ds
add
add
xchg
into
loope
add
inc
jle
add
cmp
pop
jo
adc
es
test
mov
fs
jle
adcl
ljmp
movsb
add
icebp
sub
adc
faddl
nop
je
test
adc
add
or
mov
pop
daa
inc
sub
popf
in
aam
jmp
loopne
or
arpl
dec
push
and
dec
repz
insl
pop
leave
add
push
pop
add
ret
call
imul
push
shlb
mov
ss
mov
lret
mov
mov
add
jns
xor
xor
roll
adc
out
mov
outsl
sub
icebp
sbb
push
mov
sub
and
stc
out
cmp
add
arpl
jbe
jnp
jl
mov
or
xor
cmp
ret
xor
mov
inc
cmp
add
push
add
out
push
or
es
loope
xlat
shlb
in
or
scas
mov
xchg
mov
lea
rcll
clc
push
imul
arpl
bound
lret
or
add
loope
pop
sahf
mov
add
push
fisubrl
cwtl
std
jge
fcom
hlt
mov
add
iret
jl
out
pop
sbb
adc
jb
dec
adcb
xchg
mov
fstl
add
or
sbbb
stos
je
lock
sbb
into
in
ss
data16
add
push
sub
test
cli
outsb
add
push
xchg
jo
sub
jmp
rolb
cmp
add
jno
pop
mov
mov
into
jle
cmp
mov
add
mov
lcall
stc
sbb
mov
mov
sub
mov
sbb
subb
movl
pop
div
cmc
add
mov
jne
mov
movsb
pop
dec
add
sbb
inc
ret
jo
mov
and
add
push
mov
clc
adc
mov
add
and
ds
add
xchg
mov
cli
pushf
add
les
jnp
mov
inc
add
adc
push
xor
dec
push
imul
int
lods
xor
xchg
dec
add
mov
outsb
add
cmp
mov
cmp
adc
pop
xlat
sbb
in
mov
scas
pop
xorl
sbb
pop
add
mov
sbb
fs
push
xchg
jnp
push
fistpll
in
jp
add
roll
adc
in
dec
adc
sarl
cli
jg
mov
xor
add
addr16
pop
jns
add
pop
ljmp
add
jb
out
add
push
add
dec
or
mov
imul
into
test
cmpsb
xchg
loopne
hlt
mov
push
push
mov
enter
adc
pop
xor
cmpsl
or
xor
fcmove
mov
dec
ret
adc
jne
lcall
add
adc
cld
test
cmp
xchg
int
pop
adc
fiaddl
and
ljmp
std
lret
fists
add
mov
orb
repz
loope
dec
ret
add
pop
dec
or
xchg
pop
push
jecxz
mov
adc
filds
loopne
dec
adc
cmp
fldt
adc
std
dec
or
fs
scas
push
js
mov
inc
jne
aas
mov
pop
shl
lret
add
mov
sbb
out
add
and
loope
push
adc
adc
add
mov
in
repz
sbb
subl
add
rcrl
sub
sarb
xor
add
mov
and
hlt
shl
mov
adc
ret
pop
cmp
leave
dec
cmpsb
test
cltd
call
in
and
jmp
jle
lods
mov
jp
sub
xor
dec
aam
inc
pop
cli
xor
lods
sbb
add
add
jecxz
or
outsb
push
cmp
mov
iret
dec
add
pop
add
ds
add
repnz
and
add
ja
sbb
std
add
and
and
imul
fildl
aaa
outsb
cmpsb
mov
clc
icebp
ds
out
pop
mov
pop
outsl
pop
sub
adc
and
hlt
sbb
fistl
jle
repz
movsl
sahf
sbb
enter
add
pusha
sbb
outsb
jle
in
jecxz
and
sbb
adc
add
scas
and
inc
mov
loopne
adc
push
iret
mov
push
adc
xchg
ljmp
bound
or
adc
andl
mov
inc
inc
mov
int
mov
pushf
push
adc
ret
dec
call
mov
dec
addl
cmpsb
dec
sub
icebp
inc
ljmp
int3
jbe
enter
mov
push
daa
stos
outsb
push
sbb
loopne
in
ret
xor
cmpsl
pop
mov
jp
add
inc
imul
cmp
lret
add
push
add
mov
pop
incb
fisttpll
fwait
cmpsb
or
lcall
lods
pushf
inc
add
scas
xor
aam
jle
cli
add
dec
fiadds
jecxz
enter
nop
jbe
sub
adc
rsm
and
enter
or
jmp
loopne
xlat
add
sbb
stos
add
test
in
cld
insl
into
add
or
push
fsubrp
adc
mov
add
adc
sbb
das
sahf
js
int
cmp
jae
and
sub
add
outsb
xchg
push
divb
repnz
pusha
xor
cmpsl
lcall
and
shlb
xor
add
lock
imul
sahf
andb
js
xchg
adc
sbb
pop
cltd
jp
or
outsl
inc
bound
lea
insb
xor
call
loopne
adc
jle
testb
pushf
add
cmp
incb
popf
lret
jl
ret
das
loopne
sub
mov
mov
fcoml
mov
call
add
sub
mov
lahf
lret
std
pusha
mov
test
outsl
xorl
xchg
inc
pop
in
mov
les
mov
add
adc
jg
movsb
xchg
cmp
test
pusha
xor
push
je
jp
mov
aad
add
cli
add
movsl
adc
add
sub
in
cmp
cmpsl
xor
icebp
jp
popf
ror
add
add
jb
adc
fcoms
push
je
push
dec
xchg
add
out
pop
add
mov
dec
ret
xchg
arpl
add
cmpsb
jne,pn
inc
sahf
mov
test
push
lcall
daa
aas
fld
add
cmp
mov
bound
dec
add
fldenv
or
jo
push
dec
cltd
fildl
add
test
mov
push
xor
test
add
aas
mov
je
xchg
in
pop
add
and
and
add
jmp
call
icebp
dec
add
idivb
sub
xor
pop
xchg
inc
lock
push
loopne
aam
sub
jl
test
fstpl
shrl
add
movsl
mov
mov
sbb
fisttps
fcomi
xor
ja
mov
mov
movsb
outsl
mov
test
lret
pop
sysexit
add
or
lret
daa
push
push
fiaddl
sbb
mov
je
repz
add
jo
inc
and
jns
and
sub
add
aaa
lock
push
cmpsb
or
add
roll
mov
test
mov
movsl
cmp
add
int
fistl
cmpsb
pop
js
dec
and
lods
pop
sbb
mov
mov
add
jnp
add
mov
loopne
sub
filds
scas
adc
fmull
mov
xchg
or
pop
dec
adc
call
sti
fimull
pop
mov
or
arpl
adc
outsl
adc
dec
xlat
in
in
jge
lcall
outsb
jl
add
pop
or
or
testb
sti
lcall
stos
push
xor
in
add
push
cmpsl
add
fcmovb
lea
cmp
test
dec
dec
enter
dec
add
and
add
cmp
fsubr
pop
daa
out
rcr
add
insl
popf
adc
pop
jb
mov
add
das
inc
mov
dec
mov
or
decb
push
or
pop
sbb
xor
add
hlt
data16
into
ret
pop
add
in
add
inc
dec
in
xchg
daa
ja
fiaddl
subl
add
xchg
xchg
in
adc
cmpsl
push
adc
out
and
and
adcl
sbb
add
xor
addr16
push
add
mov
dec
or
andb
add
xlat
fdivl
jecxz
jbe
adc
mull
aaa
ret
pop
addr16
testb
pusha
mov
mov
in
jns
mov
add
sbb
add
iret
nop
xor
std
cld
ret
out
js
sbb
test
xor
es
adc
jb
or
push
in
sub
dec
add
ftst
lock
repz
shl
sub
add
mov
ret
add
jbe
mov
mov
divl
test
insb
sbb
dec
fiaddl
xchg
pop
movsb
in
mov
inc
rorl
pop
je
or
sub
jle
add
pop
imul
xor
xor
into
add
out
xchg
and
jmp
cmp
mov
jmp
les
add
mov
mov
mov
mov
nop
sub
adc
mov
adc
push
loopne
and
dec
cmovne
push
orb
sbb
pslld
and
stos
cmpsl
fsts
jbe
xchg
pop
popa
add
addr16
add
mov
and
inc
push
and
jae
push
call
sbb
cmp
jle
pop
pop
xlat
or
pushf
data16
lahf
adc
add
rolb
fisttpl
mov
cmpsl
push
and
sbb
orb
out
jle
clc
aad
mov
push
adc
cltd
cmp
xchg
sahf
hlt
jg
or
pusha
mov
cwtl
pop
cmp
inc
sub
adcl
stos
adc
jmp
cmp
std
ret
mov
ds
mov
mov
mov
pop
iret
loop
std
and
leave
int
andl
clc
inc
sub
fildl
mov
shrl
sti
push
push
add
pop
xchg
ret
mov
add
add
mov
push
jb
sti
xchg
dec
add
pop
js
cmpsl
mov
jp
stos
xchg
mov
mov
mov
add
jle
adc
ja
mov
push
or
or
pop
jp
cmp
fsubr
add
pop
jg
cmp
xor
cmp
mov
and
sub
mov
push
nop
mov
out
test
je
lcall
add
dec
push
pop
mov
pop
xor
pop
jnp
imul
and
dec
loope
fisttpl
inc
int
out
adc
leave
fimuls
xchg
punpckhwd
lcall
xlat
sbb
sbb
mov
pop
mov
scas
and
js
lods
or
push
mov
out
imul
pop
lcall
add
shrl
loop
rorb
add
mov
scas
pop
add
push
or
add
lds
lret
out
push
xchg
xchg
pop
fdivp
in
mov
push
sub
add
sahf
pop
int
dec
aad
push
sti
testl
movsl
push
lret
sbb
stc
adc
out
stos
inc
add
cs
jecxz
rcrl
mov
sti
aad
add
rol
adc
stos
lock
push
jge
cmc
loopne
lds
sbb
loop
les
jmp
mov
add
xlat
insb
xchg
push
not
orb
jb
push
and
add
test
les
fsubp
test
pusha
cltd
sti
into
popf
test
add
filds
sahf
sub
inc
mov
add
les
les
adc
dec
pusha
and
push
es
js
pop
arpl
shrd
xchg
idivb
push
sbb
andl
in
rcrl
add
cmc
mov
pop
sbb
mov
out
loop
sub
dec
jl
shll
push
shrl
pop
in
jmp
adcl
or
popa
jbe
hlt
sub
addl
push
loopne
jns
pusha
mov
rcrb
or
add
dec
mov
and
cmp
sbb
xor
ds
add
or
xor
mov
dec
dec
add
sub
adc
mov
add
sbb
xchg
ss
add
lds
subb
movl
mov
inc
xchg
in
shrl
outsb
cmp
push
fmulp
adc
addl
pop
ljmp
pop
movsl
cmpsl
jnp
lret
jle
mov
xlat
fistpl
inc
sarb
daa
sub
inc
popa
mov
mov
and
mov
push
push
insl
jl
outsb
mov
or
xor
adc
inc
sbb
add
bound
push
out
mov
jnp
loopne
add
sub
ret
xchg
pop
add
xchg
out
dec
mov
or
dec
add
push
cmp
xor
add
push
jl
add
cli
aaa
into
lahf
imul
and
inc
xchg
sbb
out
ja
add
dec
push
outsb
arpl
jb
add
pop
loopne
push
lcall
ret
add
test
xor
lahf
pop
insb
dec
leave
mov
cmc
test
mov
lds
fisubl
dec
jl
sub
add
cli
ret
scas
mov
cmpsb
add
aaa
pop
test
movsb
fisttpll
pop
stos
cwtl
add
add
push
add
insb
adc
cmpsl
dec
dec
imul
mov
shll
push
bound
xor
pop
sub
aad
ljmp
cwtl
sbb
addl
mov
shll
add
pop
xor
inc
pop
jp
adc
xchg
cltd
add
mov
shrb
mov
inc
loop
dec
out
and
adc
nop
xchg
loopne
icebp
mov
jno
jbe
les
add
or
inc
fwait
punpcklwd
imul
popf
mov
outsb
add
pop
dec
fildl
aam
fiadds
mov
jl
xchg
rcrb
cwtl
xchg
add
inc
aam
cmpsl
adc
repz
mov
shlb
lea
add
shll
mov
mov
add
ljmp
into
das
lcall
cmp
fsub
out
pop
pop
mov
cmp
mov
je
xchg
mov
mov
jg
push
rorb
pusha
shrd
das
add
cmp
insb
pushf
dec
ret
pop
movsl
mov
xchg
mov
adc
jns
out
imul
in
cmp
lret
clc
cmpsl
add
add
lret
das
test
sub
jecxz
enter
add
fistps
or
shll
pop
arpl
add
fldl
pop
cld
sub
add
iret
or
add
mov
xchg
add
in
jmp
jbe
bound
inc
test
sbb
aam
in
adc
xor
adc
mov
and
add
pop
add
mov
cmpsl
fldl
inc
insl
movb
jmp
pusha
push
jmp
sti
push
mov
shlb
and
out
cli
mov
sbb
add
xchg
xor
imul
lahf
and
pushf
mov
dec
loopne
test
pop
fisttps
fiaddl
loopne
push
lcall
mov
add
mov
inc
pusha
sbb
and
push
xor
and
fs
shll
adc
add
lahf
imul
ficoms
and
push
stos
inc
scas
or
mov
dec
push
push
mov
add
fmul
xor
adc
loope
js
lahf
mov
pop
xacquire
and
xchg
cmp
push
data16
iret
shlb
push
xor
lods
adc
pop
mov
mov
xor
adc
and
clc
inc
call
adc
rcrb
inc
adc
cltd
int3
add
test
cmp
adc
popa
pop
mov
add
aad
inc
add
mov
pop
mov
sbb
rolb
jae
inc
adc
mov
push
mov
cmpsl
cmp
add
mov
outsl
pop
bound
lret
rcrb
sbb
and
add
or
inc
sbb
pop
sub
xchg
mov
insl
xor
push
push
adc
cmpsl
test
sbb
subl
andl
add
xchg
repnz
mov
adc
mov
or
cmpl
fwait
mov
mov
jl
adc
jbe
push
add
ret
add
scas
out
inc
mov
add
sbb
rolb
repnz
add
pushf
add
mov
out
mov
sarl
mov
nop
fisubs
cli
mov
sub
sti
pusha
add
add
stos
cmp
add
pop
mov
shrl
mov
cli
loopne
or
sbb
adc
in
fisttpl
xchg
mov
ret
add
cmp
inc
mov
cmp
dec
xor
inc
into
xchg
push
mov
repz
adc
nop
dec
dec
pusha
add
ja
insl
push
scas
dec
pop
push
ret
jp
jle
inc
ljmp
cli
jne
mov
add
pop
test
push
add
imul
je
and
sub
mov
rcrb
push
push
call
in
adc
mov
es
mov
jge
sbb
lods
add
mov
mov
add
pop
jae
shlb
cwtl
sbb
dec
add
cmc
or
fidivl
loopne
or
and
das
iret
cmp
lods
outsb
mov
popf
ret
or
pop
imul
and
aad
ror
insb
cwtl
add
cltd
add
jnp
mov
cmp
in
pop
and
mulb
pop
cmp
ret
adc
mov
push
inc
xchg
jecxz
test
jg
adc
sbb
push
adc
mov
mov
and
jb
nop
push
aam
jl
jae
dec
mov
push
sbb
xlat
repz
add
cmpsb
ljmp
pusha
and
mov
je
push
mov
add
adc
arpl
adc
jo
jne
mov
pop
xor
outsl
out
fwait
xlat
cmp
mov
xchg
loop
inc
add
add
lods
adc
mov
mov
xchg
jmp
ds
mov
lahf
sbb
add
inc
add
pop
int
sub
outsb
or
sbb
xchg
push
insl
sub
xor
sbb
inc
pop
inc
mov
mov
sbb
in
or
ds
lret
add
maxps
mov
dec
cmc
cwtl
or
mov
jmp
or
add
xchg
outsl
xchg
fdivs
dec
mov
jl
lock
mov
adc
add
loopne
dec
add
sbb
and
addr16
fcom
test
in
lcall
adc
movsb
inc
mov
adc
bound
into
add
add
or
test
addb
xor
sarl
jecxz
mov
xorl
nop
dec
xchg
xchg
stos
mov
dec
test
and
ss
fistps
pushf
aaa
xchg
pop
add
mov
and
add
pop
jne
push
pop
jge
add
push
and
add
iret
sbb
xchg
add
pop
pop
jnp
fildll
add
xor
xchg
xor
das
add
mov
sub
iret
jno
add
add
add
data16
dec
dec
insb
mov
cmc
fucomip
mov
mov
add
xor
lods
loopne
xchg
xlat
xbegin
xchg
aaa
inc
mov
stc
in
dec
out
sbb
outsb
mov
adc
stos
scas
mov
add
fdiv
push
popf
cmpsb
add
ds
bound
enter
or
dec
imul
jne
adc
dec
inc
adc
dec
inc
es
aas
popf
sbb
pop
es
rcll
sbb
mov
cmp
sub
mov
or
add
mov
inc
out
cwtl
add
xor
ret
out
add
int3
xchg
cmp
sbb
lret
push
aas
mov
cmpsb
xchg
sub
push
into
add
push
pusha
addl
jge
loope
leave
inc
hlt
push
in
dec
lock
fs
pop
pop
mov
push
repz
mov
arpl
add
adc
mov
push
mov
lahf
or
inc
push
frstor
sub
jl
adc
add
dec
loope
fcmovu
dec
push
popa
adc
stos
imul
adc
and
dec
push
xorl
inc
push
cmp
xor
das
mov
jle
lock
in
fdivrs
xchg
in
or
push
inc
pop
push
cltd
and
cli
jnp
inc
mov
mov
mov
sbb
test
push
sbb
cmc
hlt
xchg
and
enter
popf
jle
add
inc
sub
mov
add
repz
test
int
mov
xchg
sbb
cmpsl
mov
pop
add
mov
push
fwait
les
dec
pusha
pop
or
stos
incl
add
sub
cld
add
pop
shrl
inc
adc
int
inc
jl
pop
fwait
jns
inc
jp
push
cmp
add
mov
add
sbb
out
sbb
cmpsb
add
loopew
fstps
add
or
and
jmp
jle
add
xchg
xchg
pop
jne
xchg
ret
addb
ja
icebp
cmp
inc
subl
xor
add
les
js
xchg
rorl
inc
jns
scas
in
mov
mov
sub
xchg
push
inc
scas
mov
arpl
jle
pop
adc
stos
adc
push
mov
mov
icebp
add
popf
cmpsl
xchg
sbb
bound
lahf
dec
pop
sbb
shr
out
das
popa
in
or
pop
pop
mov
push
cmp
adc
add
and
jle
jecxz
daa
jns
xchg
pushf
iret
push
cmc
ret
movsl
movsb
sbb
call
sub
das
mov
ds
xchg
lahf
in
mov
add
mov
pop
loopne
nop
rcll
clc
loopne
sub
jno
mov
sub
inc
adc
push
rcrl
and
aad
sub
movsl
sub
dec
loop
jb
das
in
jnp
int3
dec
test
iret
mov
pop
mov
and
add
inc
dec
jecxz
pop
and
pop
xchg
pop
dec
shlb
daa
es
mov
punpcklwd
jmp
mov
fwait
add
cmp
lods
in
fisubl
sarb
cmp
addl
inc
sbb
pop
jo
sub
xchg
add
clc
jnp
nop
pop
mov
dec
jmp
or
fstl
and
mov
jg
xchg
xor
scas
pop
lahf
call
add
jecxz
dec
hlt
push
popf
dec
jae,pn
pushf
addr16
imul
and
adc
fstpl
xor
or
ja
cmp
orl
out
in
add
push
popf
int3
hlt
xchg
and
sub
cmp
lahf
mov
shlb
inc
leave
dec
sbb
shr
cltd
stc
mov
mov
cld
add
jg
jo
fadd
das
jle
adc
mov
pshufw
sbb
xchg
pop
add
mov
sbb
pop
add
xchg
push
ret
jns
movsl
mov
outsl
push
pop
cmp
mov
cs
sub
push
or
fwait
sarl
andb
pop
push
add
stos
jae
sbb
insb
das
ficompl
mov
pop
push
call
pusha
xlat
cmp
adc
add
mov
jne
out
sbb
pushf
add
sahf
cmp
push
jecxz
jnp
push
ret
cmp
push
pop
aas
add
cmpl
outsb
inc
pop
mov
and
lods
cmc
fcoml
push
movsl
test
push
pop
and
fmull
pop
mov
subl
lds
int3
cmp
imul
stos
xchg
inc
and
out
sub
push
insb
mov
push
mov
pusha
pop
xor
popa
jmp
xor
or
add
adc
loopew
sti
repz
pop
test
sbb
rcll
lahf
jecxz
jg
fdivs
outsb
cwtl
fistps
or
add
sahf
mov
fcmovb
aaa
insl
add
add
ds
pop
iret
add
xchg
imul
or
lret
dec
mov
adc
inc
lcall
xchg
or
cs
ret
cmp
jbe
mov
inc
arpl
mov
push
jle
push
jg
cmp
adc
or
jp
pop
inc
mov
inc
jo
add
int3
jg
jns
adc
les
jb
push
cld
inc
repz
push
out
push
mov
movsl
add
cmp
mov
int3
jae
pop
cmp
inc
cwtl
loope
stc
add
fdivs
add
xchg
movsb
push
mov
jge
test
cmp
test
xchg
mov
sub
xchg
add
test
incl
sub
xchg
bound
repz
popfw
push
rdpmc
add
into
push
push
add
imul
mov
roll
addr16
pop
jo
and
dec
xchg
or
addr16
cmpsl
popl
call
fildll
fnstsw
add
dec
call
xchg
jbe
or
add
pop
pop
xor
lods
cwtl
inc
orl
sbb
addr16
sbb
call
push
fiaddl
idivb
or
out
jne
ret
in
int3
push
xor
lret
cwtl
pusha
xor
dec
inc
js
adc
jns
ret
test
mov
adc
xchg
gs
inc
mov
mov
mov
xchg
push
fwait
add
repz
and
mov
popf
sbb
stos
add
fwait
adc
add
jp
repz
dec
test
mov
dec
in
adc
mov
loopne
imulb
add
test
xlat
outsb
pop
cli
cmp
add
mov
xchg
add
mov
jle
xor
push
sbb
xor
or
inc
fadds
pop
stc
ljmp
push
dec
cmpsl
or
lea
dec
test
add
jno
sub
fsts
add
and
sbb
add
cmpsb
roll
sahf
sub
add
jae
fwait
adc
sub
cmp
xchg
cmpsl
inc
push
out
jg
sbb
cmp
cmpsb
pushf
and
push
mov
pop
push
outsb
stos
push
xchg
insl
add
sub
and
fisubs
pushf
movsl
sbb
jb
sarl
add
fdivrp
add
inc
inc
push
add
mov
xchg
xor
adc
push
jge
in
xchg
or
cmpsb
adc
loopne
mov
cltd
addb
push
or
ds
loopne
sub
inc
adc
jno
loop
movsl
pushf
xchg
outsb
jecxz
add
mov
dec
mov
xchg
adc
in
jno
andl
adc
nop
pop
cmp
loopne
hlt
mov
sbb
shrb
push
cmp
and
repz
add
push
loopne
jge
jecxz
inc
mov
mov
cmpsl
shll
hlt
sbbb
mov
xlat
pop
orb
icebp
adc
insl
jp
sbb
mov
lret
and
sbb
movsl
pop
add
push
add
lret
add
add
mov
and
and
lods
pop
inc
pusha
popl
sbb
inc
fstl
test
and
ret
add
xchg
rcll
addr16
out
or
rorb
leave
das
out
test
dec
adc
push
dec
adc
sahf
int
dec
mov
pop
jnp
jle
test
mov
sbb
cwtl
repnz
pop
lahf
xor
mov
dec
into
pop
add
sbb
push
add
sbb
inc
xchg
fstl
pop
fnstenv
mov
aam
pop
mov
test
inc
repz
addr16
xchg
cmpsl
add
or
xlat
push
sub
scas
add
cmp
adc
mov
jns
cmp
testb
movsb
js
inc
add
add
push
leave
les
sbb
mov
jle
ja
or
rclb
std
nop
popa
jne
or
cmpsb
add
sbb
sbb
pusha
pop
gs
les
imul
xor
fisubs
not
or
mov
clc
push
out
jp
fs
mov
insb
add
mov
sbb
push
xor
sub
xchg
rorb
pop
nop
add
add
ret
shll
xlat
inc
loopne
push
add
movsl
std
xchg
gs
add
cmp
aaa
or
add
fiaddl
sub
push
jmp
pop
mov
mov
push
out
xor
jno
int
pop
mov
mov
mov
xorb
mov
jo
test
cmpsb
sbb
add
dec
aaa
orps
xor
or
lods
cmc
jae
jne
push
mov
sbb
push
in
pusha
xor
in
cmpsb
ja
dec
sbb
add
mov
xchg
add
icebp
inc
sub
loope
sbb
movups
jns
xor
imul
mov
add
xor
xor
cmp
xchg
out
add
mov
subb
jle
popa
adc
addr16
pop
insb
add
dec
iret
push
aaa
cmp
push
adc
jns
pop
add
test
mov
sarb
cmp
repnz
cs
scas
sbb
xor
push
dec
pop
add
add
mov
inc
clc
add
cmpsl
ss
push
ljmp
add
jl
mov
xor
dec
test
inc
or
cltd
idivb
pushf
add
pop
mov
mov
and
in
cs
dec
out
mov
pop
xor
dec
or
jg
std
xchg
fldl
test
in
cmp
gs
add
sbb
mov
loop
lds
inc
mov
push
mov
add
xor
loopne
sahf
pop
stc
add
or
sub
sub
popa
fcomps
cmc
pushf
mov
and
daa
roll
sbb
into
movsl
and
in
loop
xchg
ja
mov
mov
add
add
and
scas
adc
xor
cmpsl
movl
jno
sbb
adcl
jl
or
fisttpll
test
lock
add
and
xchg
mov
add
sub
mov
ja
mov
insl
push
pop
cmp
pop
outsl
add
mov
aam
xlat
mov
add
xchg
adc
adc
xor
lret
mov
loope
mov
adc
pop
incl
clc
mov
sbb
popf
xchg
jns
adc
xor
mov
add
mov
sub
and
fs
dec
inc
mov
mov
addb
movsl
cmp
xchg
push
push
add
int
add
ret
test
mov
fldcw
mov
add
push
pop
or
pop
popf
into
icebp
add
sub
imul
jg
testl
cltd
test
sbb
dec
std
adc
add
jne
outsl
rclb
fwait
movsl
adc
test
add
popf
sub
or
mov
fdivrp
jecxz
xchg
movsl
or
cmp
repnz
loopne
pop
mov
cltd
jo
add
xchg
repz
fs
test
adc
add
lahf
pushf
dec
sub
movsb
das
ficoms
add
push
add
cmp
lods
test
lds
and
daa
adc
sbb
add
loope
dec
jecxz
push
add
roll
mov
cmp
mov
xor
lret
cmovg
add
cmp
mov
pop
lret
roll
mov
sti
imul
mov
in
add
outsl
loop
sahf
cmp
and
jg
fstpl
stc
pop
add
jmp
lods
in
pop
jecxz
cmpsl
mov
sti
pushf
das
adc
addb
ret
cwtl
dec
outsb
push
popa
lret
lcall
movl
filds
xor
std
cli
fdiv
dec
lahf
mov
pop
add
cltd
fidivl
pop
mov
xor
popa
inc
or
cwtl
jge
inc
rcll
ja
push
jl
sti
out
je
cmp
call
lret
popf
jp
insb
das
pop
mov
stc
sub
add
push
xor
or
call
testb
adc
xchg
lahf
add
push
ljmp
popf
and
clc
mov
mov
inc
xchg
xchg
jb
dec
loopne
sub
ffreep
adc
ljmp
int
jge
daa
mov
pop
movsb
add
out
fcompl
lret
loopne
divl
pop
sbb
adc
fisttps
sbb
and
das
jge
sub
into
add
dec
add
fists
xor
jmp
fxch
pop
cwtl
and
cwtl
adc
xor
push
out
push
stos
cld
xchg
add
bound
mov
mov
sbb
stc
mov
arpl
mov
mov
add
push
pop
dec
sbb
mov
mov
jb
lods
adc
xor
loope
pop
jnp
sbb
mov
cmp
mov
push
jb
add
push
ror
xor
mov
dec
shrl
xlat
xchg
into
testl
rolb
std
scas
rol
or
xchg
out
and
ss
inc
xchg
mov
and
mov
xchg
cmp
add
fdivr
jecxz
xchg
ficomps
cs
mov
cwtl
inc
lahf
mov
pusha
sbb
iret
mov
test
jl
das
jns
inc
mov
les
pop
call
loopne
mov
push
insl
pusha
mov
add
mov
dec
loopne
unpcklps
xchg
mov
adc
add
inc
repnz
divb
in
cmpsb
ret
pop
push
push
add
les
mov
xchg
sub
lcall
jno
push
hlt
decb
mov
adcl
dec
into
fistpll
lock
sub
loopne
std
add
fdivl
jg
cmp
sbb
int3
add
leave
cmp
lret
or
push
push
mov
cmc
inc
sbb
xchg
add
cltd
mov
addb
enter
pop
lcall
and
jge
push
ret
dec
fdivrs
cld
aad
sub
pop
lods
movsl
mov
mov
adc
je
sbb
add
movsb
jbe
iret
rcrb
sbb
add
pop
xor
frstor
dec
iret
hlt
mov
push
xlat
fwait
jno
ret
mov
jg
fdivrp
lahf
add
pop
daa
dec
jmp
psubusb
lcall
in
and
xchg
mov
inc
xlat
xchg
ret
cmp
into
add
test
test
sbb
test
or
add
jl
sub
pop
xchg
test
dec
or
loop
lods
mov
dec
push
add
lret
pop
arpl
xor
inc
pusha
and
adc
xorb
xchg
pusha
push
arpl
fldl
lcall
sbb
or
popf
pop
add
pop
sub
loopne
xchg
shlb
push
fwait
leave
lds
dec
push
loopne
fs
push
adc
notl
inc
xor
nop
jb
lods
add
add
or
dec
pop
xor
cmpsl
push
push
inc
sbb
cli
lods
and
jge
movsl
jb
mov
enter
in
or
xchg
mov
out
xchg
add
test
and
and
pop
iret
push
push
in
sarb
xor
dec
repz
iret
sbb
jo
adc
mov
rolb
mov
in
and
ret
pop
scas
dec
cld
jbe
loopne
mov
lret
xor
cli
pop
loopne
aad
das
inc
adc
push
int
add
inc
out
fsubs
sbb
and
mov
inc
sbb
add
dec
cmp
jne
jo
push
add
shlb
fldcw
xchg
and
aaa
dec
das
and
push
and
cwtl
jmp
add
add
int3
add
ljmp
scas
xchg
out
cmp
fcmovb
in
ret
jno
fwait
sbb
js
inc
movsb
loopne
outsb
movsl
inc
dec
loope
fisubs
repnz
fildll
stc
mov
mov
ss
add
loopne
call
pop
mov
jg
pop
push
fcomps
add
jns
push
loop
scas
adc
cwtl
ret
pusha
cmp
adc
add
movsl
xchg
mov
insl
add
or
cmpsl
mov
repz
pop
imul
cmc
or
enter
jo
sahf
nop
fmuls
add
xor
xchg
add
bound
add
pop
stos
jbe
mov
sbb
das
daa
shr
cmpsl
fmull
sahf
jecxz
push
jg
orb
das
sub
and
pop
sbb
sbb
xchg
ret
or
ret
daa
add
test
loopne
push
iret
jnp
add
or
fsubp
pop
dec
and
cld
cmove
jns
or
lahf
dec
adc
sbb
lock
stos
cmp
or
adc
mov
sub
int
push
mov
mov
xor
jmp
inc
stc
pop
ss
xchg
loope
cltd
nop
mov
sbb
sbb
repnz
add
std
add
inc
test
mov
fucomi
add
test
ds
pop
and
fsubr
add
jnp
jne
xchg
sub
adc
add
add
sar
add
or
enter
movsb
dec
lcall
pop
add
add
ja
mov
jnp
ret
add
insb
pusha
mov
scas
aaa
add
mov
shll
fisttpll
and
pushf
cmp
jo
les
fmul
add
pop
daa
int3
sbb
ret
dec
sbb
sub
cld
aas
or
lds
mov
mov
lahf
cs
add
xchg
mov
ret
out
add
andb
add
popa
sub
cli
jns
add
adc
inc
lret
stos
add
sbb
sbb
mov
xor
dec
shlb
cltd
and
jno
lcall
iret
stos
pop
negl
add
mov
inc
addl
mov
std
icebp
shll
mov
inc
adc
jg
ret
lods
faddl
loop
and
mov
loope
lea
aam
inc
movsb
jnp
pop
push
inc
in
scas
fs
sbb
lcall
mov
in
jge
mov
popf
int
add
in
shll
in
shlb
shrb
add
cmpsl
sbb
repz
in
push
or
aas
dec
lret
enter
cwtl
imul
in
xor
cmp
add
and
xchg
call
fidivl
shrl
pusha
or
inc
inc
ficomps
aam
ds
sub
sbb
mov
inc
fildll
add
jb
xor
popa
jno
pusha
add
out
loope
jecxz
pop
add
daa
xchg
push
filds
dec
jo
and
mov
loop
inc
dec
mov
sti
iret
push
adc
add
fsubs
jecxz
rorl
mov
mov
daa
inc
cmp
pop
bound
add
negb
enter
daa
add
mov
cmp
add
popf
add
xlat
adc
and
sbb
or
cmp
idivl
add
sub
cmp
lods
mov
adc
inc
and
jl
mov
icebp
pop
popl
imul
iret
sbb
sub
mov
push
loope
fldt
sbb
jge
cmp
jmp
test
xor
add
gs
and
xor
mov
pop
fidivl
arpl
dec
sub
mov
add
dec
lods
inc
das
push
or
add
addr16
jge
fldenv
sub
ja
sub
incb
jo
fstpl
mov
sbb
scas
out
sbb
adc
cmp
je
or
xchg
xor
mov
pop
inc
jg
mov
and
loopne
and
cltd
jge
add
int
lock
lcall
testb
shl
and
stos
push
sbb
xor
push
leave
dec
cltd
push
push
add
fistpll
add
lea
enter
and
or
pop
mov
push
cmp
cmp
out
jle
sbb
std
push
add
aas
mov
adc
sbb
add
cmp
sti
roll
imul
lret
pop
and
fcomps
push
sub
das
lods
pop
lock
fistpl
mov
sbb
sbb
cwtl
sbb
js
sbb
sbbl
pusha
add
mov
lahf
leave
adc
jae
cmc
add
out
add
cld
push
add
adc
mov
add
cmp
lcall
outsl
repnz
push
adc
mov
jnp
cmpb
dec
and
adc
fsub
dec
xchg
dec
loopne
mov
xchg
sbb
lds
adc
sbb
aad
notl
imul
sti
push
xor
add
inc
jg
test
pop
ret
lock
cmp
loopne
xlat
or
out
outsl
outsb
es
xchg
dec
add
cld
int3
nop
test
ljmp
pop
arpl
xchg
pop
cmp
loope
stos
push
and
cmp
aas
sub
adc
add
xor
ret
insb
xchg
add
sahf
filds
enter
jg
xchg
add
and
stc
les
test
add
mov
lea
sbb
xchg
and
xchg
data16
pop
mov
adc
mov
popa
clc
hlt
add
in
test
cmp
mov
mov
imul
ss
sub
loop
adc
add
icebp
ret
inc
pop
fildll
push
and
or
add
mov
pop
test
add
add
add
test
add
sbb
push
scas
ds
inc
dec
mov
push
jb
mov
and
cmc
adc
insb
cmpb
roll
outsb
cld
ret
and
sbb
movsb
add
cmp
loopne
or
jmp
sbb
lods
xchg
or
or
and
pop
fscale
inc
into
pusha
sub
lret
and
ss
scas
mov
add
test
add
mov
mov
xor
in
sub
mov
adc
push
ret
ja
popa
leave
je
pop
flds
fdivrp
rorl
push
add
lret
aad
add
ja
negb
xchg
rol
mov
imul
test
add
clc
or
ss
mov
xchg
inc
or
subb
addr16
mov
aas
lcall
xor
cld
js,pt
test
pushf
mov
jo
mov
ja
jno
hlt
mulb
pop
sbb
dec
inc
mov
fsubl
mov
loopne
lret
mov
fs
arpl
lahf
test
jno
popf
add
or
aam
jns
mov
dec
xor
ret
inc
or
out
clc
rclb
add
out
cmp
roll
dec
loope
or
ljmp
scas
jb
inc
add
lea
push
push
inc
call
testb
dec
and
add
pop
jbe
inc
adc
push
inc
movb
add
rol
sub
inc
pushf
jle
divb
cmp
scas
push
jns
add
sub
adc
pop
lods
lock
add
addr16
int3
loope
mov
adc
mov
xchg
mov
adc
inc
xor
dec
add
pop
aad
dec
add
dec
xor
add
add
out
bound
in
nop
or
pushf
mov
out
outsl
lods
repz
hlt
lods
inc
and
xchg
xchg
pushf
loope
and
push
push
unpckhps
add
inc
les
mov
adc
pop
in
pusha
movsb
cwtl
pushl
stos
adc
aad
add
xor
hlt
adc
add
lret
lahf
and
pusha
and
jbe
cmc
bound
xchg
insb
xchg
mov
pop
lds
mov
cmp
or
aas
xor
loop
pushf
lcall
or
cmp
mov
add
sub
jmp
fstp
mov
bound
xor
arpl
in
loop
push
dec
mov
lret
adc
or
jae
and
jl
clc
test
ficomps
lock
in
sbb
enter
sbb
or
sub
xlat
xor
push
add
es
call
rcrl
das
in
movsb
add
mov
mov
adc
es
loop
pop
push
stos
adc
mov
ja
pop
push
pop
mov
js
inc
cmc
add
lcall
loopne
shr
fadds
mov
adcb
and
xor
divb
aam
cwtl
lods
aaa
add
sahf
iret
adc
loope
pushf
ret
addr16
xchg
add
jne
xchg
fsubrl
ret
jmp
or
cmp
aas
lds
fimull
add
mov
movsb
xchg
scas
cld
add
cmpsb
push
mov
repz
ret
adc
or
add
mov
mov
add
sub
adc
les
in
dec
add
testl
add
loope
in
jecxz
in
fcmovne
call
add
sub
out
repnz
notl
adc
jnp
inc
add
fcmovnu
pop
xchg
pop
pop
incb
test
adc
and
bnd
sbb
les
cmc
cltd
jne
mov
inc
mov
roll
mov
sub
mov
iret
pop
bound
pusha
cmp
xchg
das
adc
push
in
test
icebp
inc
sub
mov
cmp
jns
xchg
incl
jecxz
dec
fstpl
int3
inc
stc
push
fwait
lock
sub
pop
scas
notl
xchg
adc
fcmovnb
enter
inc
or
pop
mov
test
pop
pop
push
push
sbb
add
stc
aam
shll
lret
leave
mov
dec
mov
add
movzwl
cmpsb
pop
rcll
add
sbb
and
cmc
dec
dec
mov
fwait
int3
push
sbb
jae
xlat
xchg
gs
fbld
fmull
mov
stos
add
jmp
xchg
arpl
xlat
pop
inc
or
add
and
pusha
ss
sbb
adc
sbbl
lods
cmpsl
sub
add
into
pop
jb
mov
push
fbld
add
xchg
xchg
or
inc
add
shrb
xor
adc
mov
jecxz
sbb
lock
in
add
aas
pop
mov
loopne
daa
push
rcrl
stos
pop
ss
sar
sti
adc
aas
mov
adc
icebp
iret
data16
jp
fsubrs
sbb
xor
pop
xor
add
std
or
sub
push
add
sbb
rcrl
and
dec
or
add
jbe
xor
adc
dec
out
fdivs
inc
cmc
add
ja
mov
add
push
jno
xor
add
add
popf
lahf
hlt
dec
pusha
lret
addl
push
jmp
repz
fsubs
je
loope
es
decl
inc
push
xchg
inc
add
jge
pushf
mov
sub
mov
and
cli
mov
push
push
and
sti
rcrb
mov
sbb
add
sbb
imull
jnp
adc
repnz
jl
push
lret
mov
add
test
and
adc
mov
mov
sbb
inc
inc
xchg
jl
mov
sbb
pop
xlat
add
cmpsb
sbb
dec
cmp
or
dec
sti
in
push
xor
mov
leave
xchg
adc
dec
cmp
loop
iret
lahf
cwtl
xchg
cmpsl
in
cli
aad
add
mov
je
clc
dec
sub
pop
pusha
fsubrs
adc
dec
add
out
clc
ss
in
pop
jo
cmp
xchg
add
jecxz
sub
pop
movsb
add
or
fmull
add
cwtl
in
pop
out
push
loopne
sahf
pusha
rolb
dec
mov
add
fdivs
aad
dec
cltd
add
xchg
adc
jbe
mov
in
lods
in
xor
mov
xchg
adc
add
jmp
add
ljmp
jnp
cmp
sbb
cmp
add
inc
lds
icebp
mov
cmp
inc
adc
fwait
loopne
cmpsb
sub
fsts
add
pop
aad
adc
jbe
decl
in
add
or
sarl
shlb
repnz
lock
ret
xchg
add
addr16
out
scas
and
fisttpll
and
cmp
frstor
ficomps
iret
das
dec
loope
inc
jl
cmpsl
add
and
xor
in
xchg
lds
inc
push
add
enter
lods
fdivrl
or
adc
or
pusha
adc
xchg
ss
into
add
jmp
movsb
xlat
loopne
pmuludq
lahf
xchg
inc
xor
call
or
clc
xor
sbb
jb
pusha
aas
dec
xchg
cmp
repz
inc
aad
adc
sbbb
add
mov
jne
scas
add
addb
das
std
imul
cltd
sahf
cmpsb
jns
arpl
inc
clc
add
insl
inc
sbb
add
sbb
es
xchg
xchg
add
pop
and
xchg
test
in
cmc
pop
mov
adc
je
outsl
xor
outsl
loop
or
outsb
ficoml
pusha
insl
movsl
test
jecxz
add
adc
xor
jmp
and
mov
int
xorl
in
xchg
jnp
add
dec
add
xor
dec
add
and
fs
sub
mov
xchg
inc
add
dec
cmp
xchg
adc
mov
shll
mov
rcrb
mov
jnp
cmp
aaa
inc
leave
push
jecxz
dec
and
dec
pushf
in
dec
insw
and
les
mov
scas
add
sub
add
lea
pop
add
xchg
dec
lahf
mov
mov
sbb
mov
add
mov
outsb
mov
xchg
inc
adc
dec
or
sbb
ja
sbb
aad
mov
mov
testl
add
add
loope
xchg
pusha
inc
inc
jp
fucom
test
jmp
jmp
fwait
mov
dec
push
or
movsb
adc
xor
out
mov
jne
push
add
int
lcall
sub
orl
mov
cmp
mov
pop
or
mov
shl
push
xor
ficoms
and
in
and
fnstenv
ret
xor
and
iret
lcall
ja
xchg
sbb
pop
je
in
mov
push
mov
push
outsl
sub
pop
mov
in
das
loopne
repz
inc
stos
add
rcll
and
test
fwait
jnp
lds
xor
add
adc
mov
jo
lock
or
cmp
dec
daa
aas
fwait
add
pop
call
add
add
popf
jp
mov
cli
sub
movsl
add
jo
mov
adc
push
fcoms
sti
pop
inc
pop
out
add
xor
mov
and
in
cmpsl
out
cmp
les
outsl
mov
orl
enter
push
mov
pop
std
add
in
nop
push
imul
push
pop
or
sbb
dec
cmpsl
sbb
icebp
xchg
pop
add
std
inc
jno
push
hlt
push
lods
loopne
mov
lret
clc
cmc
mov
lcall
mov
dec
sbb
jl
testb
sti
adc
mov
adc
insb
fiadds
out
add
je
gs
ljmp
fisttps
stos
loopne
and
div
rolb
push
sbb
stos
or
sub
std
push
mov
outsb
adc
xor
es
pop
xchg
sahf
sbb
add
lock
add
lret
cmp
std
cmpsl
add
and
jmp
push
sbb
add
ljmp
out
push
jp
xor
movsl
inc
push
shrb
lock
add
fdivrs
lahf
and
popf
mov
sub
xor
cltd
call
sbb
fistps
push
fs
push
add
mov
adc
fisubrl
shl
xchg
add
lcall
mov
xchg
add
mov
mov
outsb
xlat
add
dec
dec
cli
rcrl
loopne
ss
nop
adc
cmp
inc
and
je
jmp
inc
loop
add
daa
mov
push
aas
dec
and
lods
cltd
xorb
add
cld
imul
push
dec
cmpsl
stos
popa
int3
out
inc
adc
jmp
xchg
pop
xchg
adc
sti
add
test
pop
add
pop
sbb
insl
loopne
dec
sub
nop
scas
sahf
mov
jge
add
rdmsr
rolb
shlb
push
repnz
icebp
and
out
or
xor
sbb
xchg
insb
add
ss
out
ret
pop
add
adc
or
cmp
int3
lret
add
ds
pop
iret
cmpb
loopne
cld
or
xchg
jl
jecxz
ljmp
lds
addr16
ror
call
lods
jl
xorl
lds
iret
add
inc
mov
rcll
outsb
add
mov
gs
xchg
pusha
loope
sub
pusha
add
hlt
push
in
inc
mov
out
xchg
push
jb
je
pop
ret
push
fs
call
dec
jmp
xchg
pop
inc
mov
out
loope
sub
adc
xor
add
cld
push
adc
cli
addb
push
xchg
insb
inc
push
cltd
loopne
cmp
aad
sub
pusha
outsl
call
sbb
sbb
mov
mov
mov
pop
lret
fldl
leave
sub
pop
test
nop
loopne
push
fildll
xchg
data16
and
lret
mov
js
dec
mov
enter
mov
pop
movsb
pusha
movsl
cmpsb
repnz
pop
or
inc
add
in
rcl
dec
in
add
push
cmpsl
inc
xchg
sbb
dec
mov
enter
aas
jl
jbe
jecxz
dec
imul
ljmp
add
dec
loope
ja
add
shll
cmp
dec
jl
cmp
andl
aaa
pop
shll
cmpsb
sbb
fiaddl
sub
mov
jmp
pop
xor
lods
icebp
xlat
pop
add
inc
mov
mov
xchg
sbb
cmp
stos
inc
add
push
push
push
sti
adc
mov
push
lea
pusha
imul
add
jno
fcompl
sbb
jb
mov
mov
cmp
subb
pop
js
or
add
add
lock
pop
lods
add
add
xchg
mov
fwait
cmp
add
jecxz
shrb
cltd
pusha
stc
outsl
movsl
mov
jnp
or
cmp
in
dec
int3
push
adcb
dec
dec
ficoml
addl
aam
insb
out
jnp
in
adc
add
ja
or
pushw
add
or
pusha
lods
sahf
pop
push
xchg
jbe
jo
test
mov
scas
pushf
push
add
mov
stc
adc
adc
jnp
xor
test
push
imul
sbb
push
add
popa
iret
mov
sub
sub
sbb
sbb
add
imul
loope
sbb
nop
sbb
ret
aaa
adc
or
inc
scas
mov
addl
ds
ret
cmpsl
mov
add
shl
sbb
mul
adc
push
xor
xor
adc
mov
pop
ret
clc
jns
mov
adc
bound
push
loope
jecxz
hlt
xor
add
clc
sbb
push
js
inc
sbb
sbb
and
repnz
loop
jo
inc
cmp
nop
data16
cmp
repz
es
adc
lock
cmp
add
pusha
clc
hlt
dec
mov
inc
and
add
push
add
pop
lret
mov
cli
ret
sub
pop
and
add
mov
and
shrl
pop
push
movb
in
aad
dec
ja
decl
dec
xchg
in
push
aas
mov
movsb
sti
aam
fimuls
incb
xchg
and
mov
cmpsl
dec
out
and
add
scas
enter
scas
cwtl
mov
addb
add
add
cld
gs
jge
out
adcl
and
add
ja
mov
pop
xchg
xlat
movsb
cld
lahf
out
addl
test
out
sbb
mov
ja
adc
test
sbb
adc
xchg
pushf
roll
and
flds
aam
repnz
jne
ret
add
test
mov
negl
je
lea
add
outsb
jo
int3
enter
jle
aaa
cmp
shrl
jmp
std
js
jnp
adc
dec
xor
sti
js
push
lret
add
outsl
sbb
lock
adcb
pop
ja
mov
rcrl
rorb
adc
fs
lahf
scas
lahf
sti
add
xchg
lret
push
inc
ljmp
aam
add
mov
lds
fistl
clc
cmp
sbb
gs
repz
pusha
push
imul
lcall
or
ret
addl
inc
loop
add
jmp
mov
add
add
movsb
pop
test
pop
add
mov
xorb
cmp
cmp
or
jae
add
sub
push
adc
aaa
movsb
in
shlb
test
arpl
xor
fnsave
or
mov
imul
adc
xor
stos
test
shl
fiaddl
addr16
add
outsl
jl
lcall
arpl
and
sbb
cmc
and
hlt
adc
pop
mov
insl
fnstsw
mov
dec
and
lods
sub
ret
cmp
incl
dec
xchg
mov
popf
add
rcll
and
sbb
movsl
fistl
inc
iret
fstp
divb
add
mov
and
add
pop
jg
loope
jmp
cmp
mov
mov
icebp
int
out
push
popa
mov
push
std
pusha
pop
or
insb
enter
sub
loopne
xor
mov
adc
aas
loope
add
inc
and
adcl
cltd
rolb
and
dec
inc
dec
mov
dec
fwait
jl
add
dec
xchg
bound
adc
mov
fstl
dec
out
xlat
mov
je
xchg
stos
xor
out
xchg
incb
and
cs
add
push
mov
add
xor
and
loop
js
xchg
mov
test
int3
add
push
mov
jg
cmp
ljmp
scas
pop
adc
cld
in
inc
ret
inc
pop
popa
test
adc
add
mov
jg
movsl
push
xchg
xchg
jnp
pop
sbb
mov
dec
xor
aad
adc
leave
aam
repz
push
sub
and
dec
push
popf
mov
es
or
pop
cmp
xchg
adc
inc
nop
add
xchg
popa
pushf
xchg
and
ficomps
or
add
movsl
stos
inc
out
jne
xor
and
add
mov
inc
jecxz
addl
jo
cmp
std
pusha
add
outsb
cmp
xchg
jle
add
mov
nop
ror
test
xchg
pusha
pop
cmp
adc
push
add
xchg
decb
lock
icebp
nop
push
out
sahf
xchg
add
sub
and
cmp
cs
or
pop
mov
mov
mov
xchg
and
add
jae
add
sahf
fs
pop
dec
push
add
stc
inc
fisttpll
jmp
mov
pop
add
int3
mov
push
add
jnp
js
push
ret
xchg
xchg
xor
arpl
mov
repnz
dec
je
cmpsb
movsb
pusha
mov
int3
shrd
mov
cltd
dec
cli
or
sbb
test
add
dec
xchg
pop
add
sti
movsb
and
dec
push
sar
clc
cwtl
js
adc
add
sub
mov
roll
sahf
sbb
outsb
sbb
lock
call
jb
bound
cmp
add
shl
jbe
mov
aas
push
sbb
popa
mov
fmul
loope
sub
cltd
add
xor
mov
xor
repnz
xor
daa
test
nop
mov
adc
out
jp
inc
in
loop
cld
mov
sbb
sub
sahf
or
add
inc
adc
mov
add
pop
or
test
mov
cmp
mov
sub
xchg
xor
aaa
mov
mov
pop
mov
or
in
rorl
add
add
repz
and
dec
mov
mov
jmp
inc
roll
mov
out
push
cmp
rorl
add
jle
dec
fdivr
adc
rol
push
mov
mov
movsl
jae
pop
mov
jno
sahf
or
pop
in
icebp
xor
arpl
into
push
out
jbe
fstpt
mov
push
jmp
je
add
ljmp
adc
loop
xchg
std
leave
jno
aad
fwait
xor
cld
lock
add
pop
cmp
cltd
pop
sbb
iret
mov
xchg
and
fwait
bound
pop
adc
loopne
scas
mov
mov
movsb
aaa
arpl
ret
nop
cmpsl
daa
mov
enter
cli
into
add
lds
cld
notl
pusha
or
cmpsl
aad
unpcklps
push
data16
adc
or
rcrl
hlt
inc
or
scas
or
imul
sbb
into
add
mov
push
or
add
out
and
daa
sbb
pushf
and
push
push
lret
cmp
push
hlt
xor
sbb
add
aad
call
add
int
imul
lods
adcl
xor
add
adc
jne
lcall
orl
andl
xor
cld
sahf
jne
mov
jmp
add
mov
ret
lcall
in
pop
pushf
mov
je
jae
stos
inc
data16
add
movsl
ja
inc
and
and
inc
xorb
test
lret
lea
adc
or
xchg
xor
shll
subl
lret
add
or
lcall
sbb
xchg
ljmp
cs
inc
push
pop
and
dec
mov
loopne
mov
std
aaa
dec
adc
push
push
out
add
imul
jne
iret
add
js
xchg
cwtl
add
mov
arpl
shll
push
icebp
xor
outsl
mov
jle
addr16
mov
dec
add
or
mov
add
insl
or
jmp
add
xlat
clc
inc
jecxz
pusha
aaa
in
inc
addr16
cmpsb
sti
or
repz
nop
sbb
pop
push
and
dec
mov
stc
cmpsl
loopne
outsb
add
or
les
rolb
outsl
lahf
cltd
dec
loope
inc
xchg
sbb
mov
repz
cs
mov
in
rolb
sub
xlat
fbld
or
std
shlb
add
stos
mov
jg
es
outsl
xchg
push
xor
xchg
inc
call
pop
lahf
push
add
jge
popl
iret
add
cmpsb
mov
das
addr16
push
and
mov
pusha
addb
push
rcrb
cmpsl
roll
adc
or
rol
pop
lret
adc
test
push
adc
sbb
leave
add
xlat
sub
lds
stc
adc
in
adc
aad
rcll
imul
add
mov
out
add
cmpsl
or
pop
imul
movsb
fs
add
lds
pop
jle
out
iret
dec
mov
ret
mov
add
mov
test
push
adc
int
inc
ret
add
cmp
mov
in
test
cs
add
cmp
add
jecxz
aam
mov
loopne
pop
adc
and
inc
lcall
mov
sbb
pop
push
and
out
loopne
jle
mov
inc
adc
movsl
jne
fwait
cwtl
es
push
pop
or
add
pop
adc
leave
push
les
mov
je
sbb
stos
filds
test
mov
pusha
inc
and
nop
addb
cwtl
add
mov
mov
ds
dec
sbb
cmp
sbb
push
mov
lret
ss
add
sbb
lahf
movsb
add
sti
adc
int3
or
push
xchg
testb
mov
dec
inc
jp
fstp
cmp
fiadds
cmp
add
xchg
xor
push
or
dec
imul
dec
sub
add
aad
dec
cmp
or
pop
add
rcll
push
loop
mov
dec
sub
sbb
and
push
aaa
add
push
or
lods
add
test
add
sub
popa
mov
mov
add
pop
sbb
jbe
test
aam
in
data16
push
xor
std
mov
ss
fs
jbe
test
rcll
mov
push
add
and
nop
into
jo
add
inc
mov
add
sbb
mov
pop
push
add
fs
ret
mov
and
and
sarb
dec
add
mov
and
and
push
scas
orb
pop
jns
loopne
test
mov
cmpsl
dec
stc
jl
add
adcb
mov
loope
xchg
or
cld
rorl
add
xchg
mov
jb
mov
and
xor
add
fbld
xchg
add
pop
mov
add
loope
sbb
mov
mov
fnstsw
or
dec
sbb
clc
and
lret
sbb
ds
push
hlt
or
push
add
test
inc
out
jnp
in
xchg
sahf
jbe
push
jbe
loope
add
sub
xchg
loop
iret
int3
jge
sub
xchg
lcall
fldt
fldl
aam
enter
sub
dec
pop
jns
jmp
adc
aaa
lock
jne
rclb
cmc
iret
adc
enter
clc
cmp
loopne
xor
add
hlt
fnsave
pushf
jnp
sbb
mov
loopne
cld
dec
sub
push
and
and
into
mov
adc
add
mov
push
rcl
adc
and
faddl
arpl
repnz
aam
and
in
scas
adc
mov
add
mov
sbb
mov
add
xlat
mov
mov
sbb
hlt
adc
lods
add
adc
rcll
cmp
xchg
cmp
push
pushf
cld
add
mov
daa
dec
scas
roll
ljmp
push
add
add
repz
fdivl
cmp
mov
out
mov
and
cmpsl
sub
sbb
push
dec
add
cld
test
sub
loopne
sbb
mov
xlat
inc
roll
cmpb
rcll
xchg
lret
fiadds
ljmp
xor
mov
aam
add
icebp
ret
mov
xchg
mov
loopne
xlat
lret
push
lods
outsl
and
xor
dec
mov
pop
rol
cmp
mov
pop
sub
adc
cmp
mov
sbb
jb
mov
stos
sbb
aas
sub
pop
add
scas
add
sub
push
mov
xor
adc
flds
das
sbb
jl
mov
push
mov
or
arpl
mov
ret
add
sahf
out
inc
lret
add
mov
add
js
xchg
pop
cwtl
mov
add
notb
add
xchg
mov
inc
imul
lcall
sahf
jmp
jge
addb
test
pop
mov
mov
adc
mov
int
adc
mov
dec
pop
push
lcall
shll
movsl
ret
les
add
pop
push
dec
jno
add
fs
push
out
xchg
add
addl
add
aad
pop
mov
out
cmp
and
mov
cli
adc
pop
add
sub
hlt
push
inc
in
add
int
stos
fstpl
cltd
repz
pop
add
ss
or
jmp
shll
mov
adc
xchg
add
in
xchg
lods
and
cmpsb
lahf
mov
adc
add
out
fbld
mov
adc
stos
loop
jmp
inc
mov
aad
mov
push
xchg
or
dec
and
xchg
das
push
push
fsubs
sub
add
push
cmpsl
ret
push
les
xchg
cmp
fwait
pop
pop
pop
add
popf
aaa
inc
add
fisubl
loope
lods
mov
xchg
add
push
movsl
fbld
push
mov
push
push
adc
xor
cmc
movsb
add
xorb
cmp
add
cmp
punpckhdq
add
sahf
popf
dec
push
fstpl
lods
andl
lahf
js
sub
dec
push
and
leave
sahf
jbe
add
popf
sbb
int
and
arpl
dec
or
sldt
cs
jo
xchg
mov
mov
add
imul
pusha
imul
adc
fistps
and
push
jns
push
fiaddl
ret
lock
sbb
cmp
and
lret
sahf
and
jecxz
sbb
mov
loopne
repnz
mov
out
inc
enter
and
dec
js
xor
xchg
add
lahf
out
add
test
xor
mov
jle
test
xlat
adc
pushf
repnz
mov
adc
testl
or
sbb
repnz
add
adc
mov
mov
lret
add
pop
push
or
jecxz
cmp
or
cmpl
sarb
scas
mov
jb
pop
push
mov
mov
pop
fwait
pop
stc
pop
sarb
scas
std
aad
leave
stos
je
pop
adc
iret
loopne
pushf
in
or
mov
sahf
push
lock
pop
fcmovb
fwait
push
adc
lahf
fs
repz
mov
pop
or
xchg
and
fstps
fwait
and
js
pop
pop
cmp
cmpsb
add
nop
adc
inc
call
movsb
dec
mov
xor
mov
push
add
fistl
cmp
daa
jmp
push
ja
arpl
pop
xor
cmp
adc
and
loope
icebp
popf
frstor
aam
mov
mov
add
enter
ret
add
xchg
dec
aam
sldt
out
adc
add
loope
and
cmp
repz
dec
inc
add
pop
add
push
dec
loopne
inc
add
dec
and
inc
outsl
mov
adc
sbb
xlat
sbb
fbstp
gs
enter
lock
repnz
add
add
stos
aaa
sub
loope
pop
movsw
adc
pop
ss
xchg
out
mov
movsb
inc
jp
add
cmpsb
dec
rorb
jl
je
pop
mov
add
lods
inc
mov
outsl
aas
movsb
pushf
bound
xorl
xchg
or
rcrl
or
dec
xor
adc
pop
aad
pop
mov
push
scas
ds
xchg
lahf
inc
test
sahf
jecxz
sbb
int
mov
popf
sbb
mov
pop
xchg
fnstcw
adc
std
add
mov
testb
int3
cmp
ficoms
xchg
lock
dec
add
cmpsb
pop
or
fiaddl
xor
movsl
dec
subb
imul
sub
cmp
xor
push
out
mov
hlt
xchg
add
cmp
or
andl
daa
pop
add
add
inc
clc
out
mov
add
dec
add
add
imull
cwtl
or
xor
cmp
emms
add
xchg
outsb
and
addr16
fdivrs
into
lahf
flds
or
xchg
stos
sarl
cwtl
fwait
stc
push
movb
adc
stc
pop
icebp
push
jne
leave
insb
add
sub
sbb
mov
orl
test
data16
loop
test
sub
ret
push
and
cmp
cmp
cmp
test
inc
adc
scas
out
or
add
loopne
imul
jecxz
bound
push
fldt
add
cmp
adc
shl
mov
cmp
int3
outsb
jecxz
sbb
dec
or
and
loope
add
mov
or
ret
add
ljmp
mov
or
sbb
cmp
pop
cmpb
ljmp
or
push
fucom
or
gs
cmp
jne
jecxz
lods
sub
mov
jle
add
ja
xchg
push
add
and
out
imul
sub
stos
sbbl
inc
sub
or
adc
mov
pusha
mov
dec
inc
insb
jle
sub
push
sbb
test
out
cmp
dec
jle
dec
pushf
enter
nop
sbb
or
pop
jmp
out
push
sbbb
out
shr
mov
lahf
inc
rcl
push
pushf
iretw
add
shl
imul
add
popa
push
add
sbbb
leave
or
jmp
mov
cld
or
pusha
add
xchg
pusha
sub
js
sbb
push
pop
aad
inc
xlat
xor
mov
arpl
push
push
rorl
stos
mov
movsb
dec
dec
mov
fwait
jle
mov
cmp
ja
jge
xchg
pusha
lds
pop
pop
mov
test
xchg
sub
xor
fildl
or
add
dec
iret
lret
sbb
pusha
mov
add
add
imul
pop
addl
icebp
out
dec
int3
push
orb
ss
daa
inc
add
mov
mov
btc
imul
mov
mov
daa
pop
out
add
cmp
mov
or
movsb
adc
sub
mov
lock
mov
add
xchg
xor
lcall
mov
push
movl
pop
cld
and
mov
imul
andl
cwtl
clc
adc
shrb
dec
arpl
jns
add
fists
dec
sub
mov
and
mov
scas
hlt
push
and
xor
jo
repnz
or
outsb
inc
ds
in
and
pusha
cwtl
loop
or
xor
add
sbb
cli
mov
incb
jmp
sbb
push
inc
push
xchg
pop
out
int3
lcall
enter
add
cltd
imul
mov
push
movsl
lret
scas
xchg
add
inc
sbb
dec
into
mov
mov
pop
insb
jg
push
rcll
sarb
sbb
mov
repnz
fs
in
repz
pop
add
push
aad
mov
in
add
cmc
subl
mov
fstps
mov
ljmp
mov
mov
mov
les
popa
insb
or
outsl
add
ds
jge
and
or
loopne
mov
pushf
movsb
ds
lods
push
jmp
or
cwtl
popf
dec
in
add
jne
stos
push
xchg
inc
mov
jno
sbb
push
pop
add
sub
add
mov
add
and
add
mov
mov
or
push
add
icebp
push
sbb
jecxz
add
cmp
mov
or
mov
mov
jge
mov
sbb
popf
mov
das
sub
les
cld
add
arpl
fdiv
push
inc
leave
xor
mov
mov
jo
inc
sar
push
imul
into
jbe
xor
stos
in
sbb
adc
sub
jl
sbb
je
sbb
fistpll
mov
sarl
xchg
and
dec
pop
sub
popa
or
sahf
or
lcall
xchg
push
add
or
loopne
mov
mov
iret
xchg
outsl
mov
pusha
or
adc
mov
add
mov
iret
movsb
add
stos
fs
add
les
inc
sbb
add
out
aam
ret
mov
iret
mov
or
lods
cwtl
add
sbb
lods
add
and
and
pop
loopne
or
mov
pushf
add
push
sbb
ret
add
pop
fs
stos
cmp
push
push
rorb
or
adc
call
add
ljmp
ret
popa
sub
add
cltd
pop
mov
add
les
add
loop
or
pop
sub
and
sbb
or
mov
dec
xchg
stos
add
mov
or
les
nop
push
sahf
loopne
fsubl
xlat
dec
adc
lock
cmp
dec
outsl
add
inc
les
adc
mov
jp
loopne
into
insl
out
xor
addr16
sbb
lods
outsl
pusha
cwtl
xorb
xchg
adc
aaa
rolb
adc
pop
sub
ret
nopl
xchg
out
adc
pop
lods
outsb
sbb
push
nop
inc
add
addl
stos
popa
in
xor
lea
aas
add
adc
mov
stos
adc
xchg
mov
dec
in
pop
movsl
popa
mov
mov
adc
insb
xor
sbbl
cltd
xchg
pop
xor
cmp
nop
in
sbb
shll
iret
in
jecxz
xor
jecxz
iret
out
pusha
stos
imul
push
adc
add
imul
cmpl
mov
adc
mov
int
add
fistps
loope
test
cwtd
jl
adc
jb
movsl
stc
mov
or
pop
and
jne
lcall
and
adc
jbe
add
cmpb
fcoms
push
imul
std
add
cmp
es
add
daa
push
stc
insb
int3
inc
jo
adc
mov
jno
push
push
sti
adc
mov
xchg
cmp
xor
orl
dec
stos
xor
add
cwtl
dec
inc
and
push
pop
bound
cmpsb
scas
mov
ja
xor
outsl
push
rol
inc
pusha
nop
enter
sbb
out
inc
add
inc
lock
rcl
rol
adc
icebp
jns
and
sbb
clc
push
and
cli
pop
dec
scas
mov
sbb
sahf
adc
into
aad
add
inc
pusha
cmpsl
mov
push
mov
mov
cltd
jno
pop
mov
xchg
add
or
add
dec
jge
ss
test
add
mov
movsl
xchg
adc
inc
lods
add
pop
fstps
arpl
decl
sub
push
sbb
pushf
and
inc
and
fbld
dec
pop
cltd
pop
jmp
mov
inc
xchg
movsl
pop
mov
jbe
sub
lods
pop
or
dec
push
aaa
cmp
jo
sbb
xlat
dec
add
adc
ja
loop
sbb
xchg
pushf
jp
xchg
inc
hlt
nop
adc
add
and
out
loope
push
fld
dec
mov
imulb
fcmovu
sub
jecxz
test
ret
add
adc
push
rcl
jmp
sub
int
into
xor
jns
cmpsl
or
push
and
ja
das
and
xor
adc
imul
incb
pop
push
sbb
cmp
inc
pop
je
loope
mov
aaa
arpl
faddl
sti
wrmsr
mov
scas
pusha
pushf
pop
jmp
or
and
xchg
cmp
fnsave
sbb
mov
mov
xchg
or
add
xor
mov
inc
add
movb
xchg
xchg
pop
daa
in
mov
loopne
out
and
xor
cs
and
sub
sbb
ret
dec
or
cwtl
xchg
pusha
xlat
push
outsb
dec
lods
or
std
sub
mov
mov
fldenv
js
cmc
pop
adc
cmp
mov
pop
push
add
loope
jo
cmp
cwtl
pusha
sub
pop
add
adc
les
jecxz
adc
iret
out
icebp
in
pop
cmp
pop
push
adc
shll
vrsqrtss
add
cmc
mov
loope
dec
add
sub
pop
mov
adcl
add
in
mov
daa
pop
mov
hlt
sub
rolb
cmpb
pop
int3
add
mov
and
int
dec
push
adc
dec
clc
xor
loope
sbb
add
sub
inc
pusha
add
jle
loope
jge
inc
sbb
xor
cmp
jne
add
movsb
pop
dec
adc
push
jno
gs
pop
subl
mov
divl
dec
and
dec
aaa
and
sbb
and
cmpsb
out
pop
pusha
scas
shr
cmp
pop
add
imul
les
push
dec
mov
mov
mov
inc
sti
addr16
add
daa
sub
ret
nop
cmc
xlat
add
cmpsl
push
pop
mov
cmpl
ret
and
xor
ror
cmpsl
sbb
add
and
movsl
cltd
xor
or
pushf
ds
outsb
aam
mov
outsl
out
mov
or
loope
mov
dec
add
jg
or
repnz
hlt
outsl
pop
add
fs
pop
push
repz
bound
jno
aaa
push
ficoml
jecxz
mov
xchg
dec
mulb
xor
sbb
aas
ss
addr16
sub
call
adc
aas
push
sti
jnp
faddl
pop
mov
sbb
mov
push
push
dec
fsubrl
push
push
push
adc
cmp
rcrb
dec
cltd
sti
jg
fcomip
mov
dec
inc
cmc
cmp
inc
and
les
mov
cld
adc
loop
enter
nop
sbb
mov
test
or
xor
pshufw
imull
inc
mov
out
fistps
fmuls
add
adc
dec
pop
add
inc
fwait
add
sub
lock
mov
pop
nop
lahf
es
sbb
out
add
pxor
adc
and
pop
adc
pusha
xor
loopne
add
iret
testb
jl
add
add
jecxz
loopne
pop
sbb
sahf
jnp
add
jecxz
sbb
mov
cltd
fldt
dec
pop
add
and
xor
int
aam
pusha
sbb
scas
adc
popa
out
sahf
push
pop
push
xchg
sbb
flds
inc
sahf
pop
adc
push
and
add
cmp
daa
push
fistl
inc
adc
add
jle
bound
inc
dec
push
rorl
add
adc
jecxz,pt
movsb
movsl
or
jg
les
addr16
ret
aaa
adc
push
pop
adc
loope
push
in
xor
sub
add
or
sub
test
sbb
ret
pop
xchg
lds
movsb
xchg
push
or
sbb
mov
cs
jmp
daa
into
pop
add
ljmp
add
ret
aas
pop
in
xor
inc
cmp
hlt
out
jg
nop
shlb
nop
jbe
out
test
loop
or
js
lods
pusha
pop
frstor
shll
int
stc
ret
inc
out
add
xchg
icebp
in
lret
cmp
adc
mov
cmp
mov
in
xor
int3
ljmp
jecxz
add
xor
leave
orl
sbb
sbb
and
or
mov
add
mov
lods
push
add
addl
pop
scas
verw
mov
jnp
jo
outsl
add
shrb
push
bound
mov
push
fsubr
add
add
or
loopne
fdivl
cmpsb
mov
add
into
push
inc
ljmp
es
in
dec
fnstenv
sub
pushl
or
mov
fs
fisubs
aas
cwtl
lret
add
imul
inc
sub
sub
loopne
aaa
fldl2e
pop
sbb
and
or
mov
push
mov
test
xor
sub
je
ret
sbb
nop
in
bound
add
or
nop
int3
and
call
sbb
icebp
cmp
scas
imul
stc
add
fisttpll
sbb
jb
jnp
jge
add
inc
push
sub
xlat
rcrl
scas
cmc
push
sbb
insb
jnp
and
jmp
mov
dec
sarb
sbb
das
cld
fsubl
inc
cmpsl
adc
lahf
xor
lret
push
xchg
mov
cmp
jecxz
sarl
out
ret
mov
aaa
xor
fistps
lea
pop
test
das
cmp
movsb
andl
fs
sbb
jg
inc
xorb
loopne
sbb
test
sub
jbe,pn
repz
push
add
rorb
lock
add
pop
cmpsb
es
sub
ljmp
sbb
inc
out
repnz
cmp
in
in
jl
dec
push
ja
imul
sub
mov
je
dec
pop
loop
add
lret
fwait
add
jne
inc
add
dec
and
jecxz
decl
sbb
pop
repnz
add
inc
ror
add
sarl
stc
pop
bound
lahf
shr
outsb
rcrb
inc
pusha
cltd
fldcw
push
sbb
jp
lret
and
jmp
orl
xchg
xchg
cmpsl
cld
into
lock
inc
scas
jb
popl
adc
popf
xor
xchg
sub
repz
sbb
mov
js
inc
add
out
adc
or
addr16
aaa
xchg
repnz
outsb
pop
add
pop
popa
sub
iret
adc
fs
icebp
push
stos
jbe
arpl
fisubrl
nop
daa
xor
ja
fsub
cs
shll
add
xor
lods
sbb
scas
out
and
or
xchg
sbb
or
jb
lret
rolb
or
insb
xchg
mov
add
fldt
cltd
xchg
inc
mov
xchg
bound
outsl
sbb
inc
jmp
lret
dec
scas
add
pop
lock
subb
mov
cmc
sub
push
jmp
add
aad
lds
mov
das
fstps
mov
adc
ret
and
pop
or
pusha
mov
fcos
mov
xor
cmpb
add
xlat
adc
push
xor
lock
mov
mov
les
dec
cmpsl
sub
add
sbb
lds
add
mov
pop
add
mov
outsl
cltd
mov
fsub
ret
cmc
add
imul
add
jmp
jns
add
subl
mov
scas
fsub
mov
loope
test
sub
call
add
outsb
in
push
add
std
dec
push
or
filds
cltd
lock
jg
rclw
xchg
aad
adc
xor
xchg
mov
mov
sbb
fwait
js
mov
jl
loop
pop
add
stos
test
jp
push
loope
push
or
jl
out
mov
jge
add
jo
mov
nop
and
gs
and
icebp
incb
and
outsb
cmp
jmp
fisubrs
or
arpl
push
sub
and
arpl
adc
sub
icebp
pop
sbb
pushf
sbb
push
or
incb
xor
loop
mov
out
mov
cmp
scas
and
add
mov
sbb
daa
push
sbb
mov
out
push
mov
divb
and
jbe
jmp
and
sbb
lods
aaa
pusha
dec
and
inc
dec
mov
add
mov
nopl
call
popf
adc
popa
fisubrl
sub
push
test
and
fwait
pop
jb
cmp
pop
movsl
mov
pop
cwtl
adc
sbb
jl
pop
cmp
les
rcrb
loopne
sahf
out
pop
and
ljmp
andb
dec
adcl
hlt
jle
ret
push
ret
or
pop
test
lcall
add
sbb
mov
add
dec
icebp
data16
adc
mov
mov
cmpsl
xchg
fdivrs
pop
cmp
std
stos
adc
xor
daa
jbe
and
enter
sbb
test
imul
insb
jecxz
xchg
and
movsl
ret
mov
add
stos
add
jno
popa
add
and
mov
mov
repz
add
mov
add
nop
ret
jns
push
lock
xchg
mov
sub
shlb
arpl
pop
push
enter
cmp
loopne
pop
push
dec
mov
cmp
je
pop
push
jo
out
pop
sbb
jg
lahf
push
rorl
cmp
add
and
fidivrs
push
pop
subb
pop
mov
dec
cld
sti
lret
cmp
add
out
adc
dec
pop
lea
xchg
jnp
loopne
mov
fs
adc
xor
cmp
or
pop
sbb
xlat
je
mov
fdivrl
lds
inc
xorb
mov
repnz
sub
ja
std
jns
ret
test
dec
mov
inc
pushf
cs
or
xor
ds
xchg
out
fadds
sbb
cwtl
stos
add
jg
in
lcall
mov
out
pop
test
push
loopne
stc
adc
push
xchg
fwait
mov
mov
or
stos
or
inc
pop
jl
lcall
lods
or
sarb
cmp
cmp
in
out
add
out
inc
xchg
rol
lds
test
dec
inc
loopne
sbb
push
jno
shlb
and
adc
sahf
mov
add
insb
out
daa
cmpsl
ret
xor
loop
pop
imul
add
cmpsl
mov
lcall
cmp
cmpsl
jb
fadds
pop
push
add
adc
xor
pop
and
mov
add
loopne
jo
lea
mov
lret
dec
jns
cmp
mov
sbb
scas
inc
mov
imul
fiaddl
fabs
rorl
pushf
pop
sbb
and
pop
fsubrp
sahf
std
movl
dec
ja
testl
lods
xor
sub
repz
or
jb
add
push
push
hlt
dec
roll
aad
push
pop
add
bound
jp
jnp
sub
enter
daa
lcall
loopne
xor
popf
cmpsl
lds
mov
pop
xor
xchg
fwait
push
push
sub
and
lahf
rcrb
mov
cmp
shlb
lahf
sub
std
sbb
add
or
inc
mov
or
xchg
lret
add
mov
mov
loopne
inc
shll
stc
adc
pop
pop
add
mov
in
lret
pop
popa
xchg
add
loopne
push
or
push
loopne
rol
fs
mov
movb
addl
negl
mov
and
lret
clc
daa
add
arpl
test
pop
push
adc
ret
mov
xchg
inc
lret
xchg
pop
mov
nop
jmp
and
cmc
andl
pop
xor
ja
gs
sbb
jle
ret
sub
ljmp
sti
pushf
add
cmp
push
verr
pop
jg
push
dec
cli
add
jne
sub
stos
popf
mov
inc
add
cmp
add
adc
in
insl
mov
pushf
mov
mov
mov
inc
mov
or
mov
bound
loop
mov
mov
jno
inc
push
mov
jb
xchg
xchg
adc
dec
and
inc
and
cwtl
out
sar
add
mov
xlat
fldcw
add
adc
inc
jle
dec
dec
add
add
add
jg
xor
dec
xchg
add
sub
lods
push
pusha
ror
es
add
mov
sbb
cmpb
adc
in
aad
adc
mov
sbb
or
jno
leave
fsubl
sub
mov
xor
addr16
add
rorb
int3
cltd
scas
and
lcall
or
repz
stos
scas
je
pop
push
adc
add
mov
dec
loop
out
xchg
adc
negl
or
sub
scas
test
mov
out
enter
push
fstpl
in
or
sbb
rolb
sti
loope
fwait
mov
rol
mov
mov
lds
add
mov
int
in
fcoml
add
xchg
add
xchg
ror
mov
sub
inc
mov
or
fistps
imul
and
adc
aas
call
iret
mov
std
js
cmpsb
jp
adc
add
inc
scas
add
mov
add
jns
aad
into
add
int
xchg
adc
add
add
lret
lods
or
arpl
scas
std
add
lret
clc
adc
add
mov
popa
jge
out
adc
add
sbb
leave
scas
sbb
dec
push
push
sub
or
push
loop
lahf
xor
inc
in
int3
mov
push
cs
add
ds
scas
pop
int3
add
les
add
data16
dec
loop
push
jmp
xchg
test
push
pushf
daa
mov
repz
repnz
or
mov
cmpsb
xchg
and
cmp
jno
addl
outsl
ficompl
fstl
rcll
aas
add
mov
outsb
and
lret
sbb
je
xor
fcompl
xchg
lcall
add
cmc
mov
cltd
adc
mov
adc
mov
adc
add
cmc
cmpsb
aaa
cmp
scas
lods
add
out
jecxz
std
push
pushf
add
xchg
sub
insl
fsubrs
cmp
js
add
outsb
scas
lods
fwait
imul
das
shll
mov
fnstsw
test
mov
shlb
cmp
call
pusha
out
lods
mov
ds
out
mov
sub
xor
adc
lret
or
add
sub
jns
fildl
jmp
dec
pop
test
xor
mov
pop
loopne
cltd
adc
rorb
pop
push
add
lods
jecxz
xor
push
mov
add
sbb
cmp
ret
mov
add
inc
and
lds
push
lcall
pusha
xchg
xorl
mov
add
popa
stos
rcrb
adc
or
xchg
popf
push
add
in
mov
add
popl
push
test
ss
mov
faddp
add
lret
inc
jl
lcall
out
push
sbb
add
gs
icebp
cmpsl
fimull
inc
shll
sbb
incb
fcmovne
sub
ret
addb
adc
les
mov
inc
cmp
xlat
int3
in
jecxz
and
cs
adc
jne
adc
test
xor
mov
jg
pop
add
movsl
sub
sub
sbb
shll
xor
add
mov
lods
cld
lods
dec
testl
jno
mov
popf
and
adc
add
mov
aaa
mov
mov
in
add
icebp
xor
popa
ljmp
fwait
add
mov
sbb
jmp
scas
add
sbb
xor
das
mov
insb
mov
imul
js
add
clc
or
xor
mov
data16
add
or
popa
inc
xchg
and
mov
mov
or
sub
mov
rolb
dec
popf
and
loopne
mov
fdivrp
push
inc
push
pusha
arpl
ffree
aad
aas
cld
xchg
dec
mov
cmpsl
pusha
stos
push
jle
std
xchg
push
aaa
and
ljmp
mov
add
test
jp
fbld
lret
lahf
and
in
into
sbb
add
enter
and
mov
mov
lods
orl
add
fnstsw
or
xchg
jge
ret
mov
ficompl
mov
scas
mov
int
adc
ret
add
iret
pop
and
cmp
lcall
and
cmpsl
add
aad
add
jle
ret
ljmp
and
fstps
add
jg
push
add
and
adc
or
jge
push
lods
arpl
movsb
or
jae
and
arpl
add
ret
push
stos
mov
push
jb
or
movb
pop
pop
add
cmpl
or
lret
and
dec
ret
dec
stc
sbb
test
mov
inc
bound
cmp
out
bnd
or
add
sbb
mov
dec
shl
outsl
test
or
in
stc
loopne
pop
dec
addr16
dec
lcall
xchg
hlt
adc
xor
jne
pushf
jecxz
roll
aaa
add
loop
sbb
loopne
jbe
sbb
cmpl
dec
test
push
lods
daa
loopne
sub
add
imul
add
fmuls
push
mov
adc
insl
cmp
push
cwtl
dec
and
pusha
sbb
mov
ret
add
sub
dec
add
jne
pop
subl
mov
pop
ret
in
xor
mull
pusha
dec
sarb
sbb
mov
inc
push
popf
push
jo
pop
movsl
push
ret
add
in
push
sub
lods
add
xchg
in
aaa
loopne
ja
push
xor
sbb
xchg
inc
stos
repnz
ret
call
mov
pop
mov
sbb
push
mov
add
add
jmp
fisttpll
popf
mov
cmpsl
add
adc
xlat
add
shrl
sbb
dec
movsb
xchg
and
aas
or
out
push
dec
cmp
adc
fwait
icebp
inc
rol
sbb
ss
int
adc
dec
dec
push
and
sbb
or
pop
dec
out
mov
pop
add
jecxz
aas
fcomps
int
add
push
cld
mov
jb
add
jbe
dec
shrb
xor
lock
adc
xor
add
sub
jmp
cwtl
shll
push
clc
push
and
mov
mov
addr16
into
jmp
cmc
add
bound
data16
and
lea
adc
loopne
mov
mov
ja
pop
add
fildll
xchg
inc
inc
sbb
or
ja
rorl
shrl
pusha
cltd
adc
mov
out
je
xorb
movsl
loopne
mov
or
pop
mov
loop
cmc
and
sbb
add
fwait
pop
scas
xchg
push
inc
add
xchg
and
shl
inc
out
jnp
clc
sub
adc
cltd
shll
ss
mov
inc
jbe
sbb
outsb
sub
push
jecxz
sti
ficomps
or
pop
cmc
flds
jno
imul
mov
lock
xor
loopne
pop
pop
add
loope
cmpsl
inc
add
jae
or
jl
loope
pop
sub
mov
inc
jmp
push
push
mov
bound
mov
lea
out
daa
jo
jns
xor
popf
js
pusha
jbe
mov
jmp
pop
rcrl
add
aaa
std
movb
in
shrl
jmp
dec
lock
lcall
adc
sbbl
add
mov
shr
aad
dec
ret
inc
stos
dec
jo
popa
dec
push
sbb
cmp
js
add
and
fnsave
pusha
sbb
mov
fs
pop
orb
xchg
sbb
movl
jb
push
or
ret
jno
bound
and
cs
and
test
push
repnz
dec
mov
dec
add
sbb
pop
add
cmpsl
scas
cmp
in
cltd
lea
add
sbb
add
push
out
fisubrs
dec
cmp
fisttpl
fdivl
idivb
and
add
cli
add
bound
loopne
push
arpl
add
mov
pop
add
xchg
testl
xchg
dec
out
mov
ret
dec
mov
in
scas
and
inc
stc
jae
jb
or
movsl
push
into
sub
xchg
fimull
xor
repnz
iret
add
lcall
add
jo
cli
add
ss
pop
sbb
add
jb
js
xchg
fildl
mov
das
xchg
mov
or
insb
push
jmp
push
cmp
nop
adc
aaa
loopne
xchg
push
adc
jo
mov
adc
inc
sahf
jle
scas
add
popf
shlb
fsubrl
push
outsl
ljmp
add
mov
mov
dec
add
cmp
sbb
pushf
mov
pop
xor
mov
or
insb
push
xor
xchg
add
mov
add
sbb
inc
and
pop
in
push
shrl
push
incl
repnz
stos
sbb
xchg
push
add
xor
add
shlb
mov
adc
test
icebp
pusha
adc
sbb
sarl
test
bound
lds
or
jae
js
adc
pop
mov
cltd
loopne
jb
bound
add
pop
xchg
push
cmp
ds
data16
mov
sub
call
add
push
mov
out
int
push
mov
out
icebp
add
or
pop
pop
insb
xchg
jnp
cmp
lock
xchg
lods
js
xor
cwtl
mov
ucomiss
ret
xchg
lahf
inc
pop
add
repz
sub
xchg
push
push
xchg
out
add
insb
xchg
jl
jge
loopne
add
push
add
lods
adc
add
psllw
or
or
add
sub
inc
and
out
mov
inc
jo
sbb
cmpsl
sbb
add
xorb
add
pop
and
in
testb
loope
sbb
sub
add
push
sub
jecxz
add
ret
add
jle
lock
stc
fisubs
jo
jl
testb
bound
add
push
add
orl
xchg
and
fcoms
ss
loope
or
or
leave
insb
adc
popf
ret
adc
mov
xor
divb
pusha
jecxz
imul
movsl
xor
add
cltd
add
adc
add
jno
lods
and
sub
dec
pop
sbb
add
dec
out
iret
test
and
std
in
mov
or
pop
out
lret
pop
add
cmp
jg
ja
or
push
daa
add
sub
fcoml
incb
pop
add
stc
adc
mov
sbb
sbb
out
sub
rcrl
push
xchg
notb
das
out
adc
shll
sub
imul
add
bound
jmp
add
lds
xor
fneni(8087
mov
gs
popa
push
clc
insb
das
movl
leave
jns
or
mov
push
mov
jp
pop
adc
leave
add
aad
mov
add
inc
mov
sbb
xchg
cmpsl
adc
push
cmp
cli
add
or
rolb
enter
inc
and
xor
jl
bound
arpl
add
mov
cli
lock
adc
adc
mov
fisubrl
addr16
mov
std
rcrl
imul
scas
dec
or
xchg
ds
pusha
and
or
pop
or
mov
xchg
rol
out
mov
outsl
jg
pop
aas
in
dec
mov
jns
insb
sbbl
fwait
push
stos
or
xor
popl
pop
or
add
mov
icebp
and
sub
jmp
out
jecxz
enter
or
or
rorl
into
out
push
xchg
dec
mov
adc
pop
add
pop
inc
sub
cmpb
push
or
mov
sub
aas
add
mov
aam
insl
push
add
fildl
push
popa
inc
inc
mov
loop
aad
inc
stc
sti
stc
xor
inc
sub
cli
addr16
push
call
mov
add
and
add
aad
mov
negb
stos
dec
ret
int
add
pusha
sbb
xchg
adc
mov
pusha
flds
adcl
add
dec
xchg
pop
mov
mov
cwtl
jno
std
lahf
push
dec
add
pop
sub
add
loop
aad
push
inc
mov
das
push
popf
in
add
add
xchg
jae
sub
insb
add
lods
repnz
ret
icebp
mov
mov
fucomp
dec
daa
je
adc
popa
add
sbb
fmull
sbb
xor
fildl
push
loopne
shlb
in
cmc
loopne
out
arpl
add
xchg
movsb
mov
inc
mulb
rol
or
in
add
add
mov
cmpl
jnp
and
mov
lret
arpl
or
out
dec
int
sbb
xchg
sbb
adc
popa
hlt
inc
test
rorb
add
icebp
popf
sbb
mov
pop
aam
imul
insl
leave
add
daa
shl
popa
mov
cmp
or
loopne
dec
lcall
mov
add
xchg
icebp
cld
addr16
mov
xchg
and
test
or
xchg
loopne
js
pop
xor
sbb
add
stos
add
jno
mov
sbbl
negl
mov
push
push
insb
add
repz
dec
add
gs
std
add
lds
add
sahf
xchg
jne
sbbb
mov
lods
das
fiadds
jbe
sbb
adc
xchg
in
movsl
int3
fs
add
jne
mov
dec
clc
mov
and
ljmp
loop
fsubp
mov
sbb
jmp
icebp
rcll
dec
pop
xchg
inc
mov
lret
sbb
push
push
aas
add
mov
add
stc
jecxz
sub
cld
inc
xchg
dec
dec
rcrb
jbe
outsl
movsl
std
jg
sbb
xor
icebp
lods
mov
subl
push
fucomip
add
les
add
xorl
add
ss
add
es
add
mov
aas
add
aaa
mov
sub
and
push
mov
push
std
jae
ljmp
shlb
adc
sbb
jne
in
xchg
gs
daa
push
mov
adc
adc
lret
and
lods
add
pusha
xchg
das
cmp
add
sahf
rclb
repz
lahf
inc
sbb
fs
add
js
add
loop
movsb
loopne
imul
bound
jns
cmpsb
mov
cmc
mov
idivb
push
mov
mov
cwtl
adc
jb
add
or
lahf
cmp
sahf
rolb
bound
mov
add
xor
sbb
or
mov
xchg
add
test
pusha
mov
jmp
imul
sbb
dec
jl
add
jb
mov
add
iret
pop
test
in
add
xchg
lods
rcll
ljmp
xchg
pop
adc
movl
jo
lea
xchg
or
mov
pop
cmpsb
pusha
xor
sub
add
xchg
loope
adc
lds
add
pushf
and
fisubs
push
shl
add
mov
pop
push
icebp
loop
add
pushf
push
sub
add
pop
dec
fwait
xchg
lock
in
insl
cs
test
and
adc
or
pop
rcrl
cmp
daa
ret
add
cmc
cwtl
fchs
inc
addr16
adc
xor
xor
add
sbb
and
rorb
push
jmp
outsb
shll
aad
push
push
push
jle
aaa
leave
scas
adc
pop
or
add
subb
add
loop
test
mov
lock
push
lret
adc
add
cltd
and
mov
add
out
jle
cld
sahf
fistps
add
int
in
daa
add
pop
dec
mov
add
mov
cld
loope
neg
push
mov
lcall
jge
jp
andb
ljmp
and
jge
push
ret
pop
add
dec
insl
jp
add
jae
stos
jb
sbb
out
add
add
xor
inc
add
add
pop
jl
mov
jno
xor
cmpsb
mov
clc
jns
mov
clc
cmp
push
inc
loop
test
add
je
add
icebp
and
sti
sub
in
rcrb
push
rolb
mov
dec
inc
idivl
push
jne
rcl
fiadds
fdivrs
mov
data16
pushf
test
jp
inc
mov
rcr
cmpsl
jo
push
pusha
xor
lahf
push
inc
add
icebp
sbb
je
mov
sub
test
sub
cld
or
stos
sub
and
push
shll
cwtl
sahf
mov
dec
add
jne
push
lahf
cld
xorb
mov
outsb
aaa
loopew
adc
les
add
xor
in
movlps
sbbb
vaddpd
sub
cmpb
push
rol
add
fs
xchg
jmp
lcall
fcomip
add
js
cmpl
xor
imul
lods
cmp
sbb
lds
test
dec
lcall
jo
pop
add
mov
cmp
sbb
jne
clc
pop
mov
popl
in
aam
mov
cmp
jnp
mov
sub
lock
lret
aaa
sbb
mov
shrb
lods
jns
mov
adc
int
add
cmp
push
daa
pop
iret
add
mov
cmpsl
sbb
cmpsl
jge
and
add
ror
mov
loope
dec
add
sub
testb
adc
out
sbb
fstpt
ret
add
adc
push
lret
cltd
out
or
add
lods
lea
pusha
jmp
repnz
add
push
test
xor
inc
roll
add
jae
sub
clc
popf
mov
xor
outsl
mov
dec
jmp
sarl
pop
pop
iret
xchg
lds
cmp
les
pusha
sti
add
xor
and
sbb
jl
mov
push
add
xchg
fnstsw
add
popa
rcrl
testl
or
mov
rorl
add
dec
or
lods
or
mov
add
mov
test
popa
add
orl
loopne
loope
ret
ljmp
xchg
call
inc
mov
fsubl
movsl
sbb
not
add
loope
arpl
pusha
cwtl
das
xor
xchg
lods
cwtl
cmpsl
stos
push
rolb
mov
pop
jno
out
inc
add
dec
sar
jp
ss
cmc
or
outsb
xlat
jae
divb
fisubs
push
int3
add
xor
lea
jge
sbb
mov
cli
mov
aad
ret
inc
pop
add
or
fwait
shr
idivb
push
mov
inc
mov
mov
jl
adc
xchg
add
imul
fsub
rcl
or
rorl
and
sbb
out
add
push
adc
and
cld
cmpsb
xor
and
mov
ret
pusha
adc
add
lock
xor
dec
aaa
add
sub
add
sbb
pop
cmp
dec
add
repnz
inc
inc
fs
in
adc
push
sub
jg
push
or
mov
popa
cmp
mov
repnz
leave
xor
xchg
jo
loope
outsl
pushf
adc
loope
and
cmp
add
lret
inc
dec
hlt
sub
sbb
icebp
jle
jmp
add
arpl
test
lret
add
mov
adc
out
in
ds
test
pop
int
lock
cmp
test
imul
add
test
ret
aaa
in
sub
repz
lcall
jo
push
loope
inc
shlb
int3
packsswb
es
inc
mov
pop
add
mov
lahf
xor
pop
cld
fwait
or
mov
xchg
push
push
xchg
jle
pop
add
push
mov
and
lock
rclb
mov
unpckhps
mov
cmpsl
adc
add
lock
inc
and
push
jno
mov
and
cli
adc
fistl
shlb
stos
sbb
ret
cmp
cmp
addl
add
fidivs
pop
insl
add
test
fadds
mov
pop
pop
ss
daa
jl
sub
or
add
test
sbbl
fdivl
cwtl
add
jo
rcl
pop
add
outsb
pop
and
sbb
add
test
imul
or
inc
out
push
add
loopne
mov
pop
adc
sbb
iret
fcmovbe
xchg
add
mov
jmp
xor
adc
mov
jbe
cmp
mov
push
test
fldt
push
add
xlat
loopne
fwait
jae
stos
and
out
int
jle
add
and
dec
scas
mov
mov
cmp
xor
pop
xlat
and
ss
inc
pushf
and
xchg
fisubl
or
pop
xor
mov
out
sahf
loopne
imul
in
outsb
add
mov
dec
scas
nop
cwtl
inc
add
sahf
leave
enter
lret
ss
addb
jae
mov
cmp
add
adc
jl
cwtl
push
rorl
mov
ss
add
out
xchg
lds
movsl
stos
dec
pop
into
adc
shrl
dec
insb
test
setl
push
add
lea
popf
pop
jbe
lahf
ret
loopne
ds
out
and
call
fldt
out
aam
or
cmc
std
dec
test
add
or
add
inc
fnstcw
adcl
nop
inc
lods
mov
xor
popa
add
lea
out
inc
or
sbb
rcll
push
ljmp
mov
jbe
mov
sarb
mov
or
push
xchg
stc
lret
or
sbb
push
push
pop
outsl
std
xor
fisttps
and
jmp
adc
fldcw
add
cmpl
testb
test
insl
pop
loope
outsb
add
push
lea
loopne
pop
jbe
adc
and
push
adc
ret
mov
orb
fiadds
in
xchg
fs
es
sbb
or
pop
add
jle
dec
in
dec
cltd
jl
xor
test
pushf
mov
bound
ret
and
sbb
outsb
cli
pop
xor
add
andl
mov
mov
pavgb
inc
js
je
sarb
xor
call
and
dec
sbb
fbld
add
in
push
lds
insl
out
rorl
scas
jne
dec
leave
xlat
pop
pop
fistpl
and
fsts
add
jmp
or
pop
sti
jp
push
xor
mov
sub
cli
mov
xor
xor
or
imul
cmp
and
roll
repz
stos
pop
fwait
add
out
sub
sub
xor
mov
and
add
daa
in
inc
cmp
pop
test
push
aad
lret
add
cs
mov
xchg
add
pop
ret
int3
push
push
add
xchg
jnp
mov
push
dec
imul
and
sbb
ds
sbb
inc
pusha
movl
jno
mov
and
test
cmc
divl
mov
js
ret
adc
dec
pop
add
xor
cmp
mov
sbb
cmc
sbb
fbld
repnz
jle
add
and
push
pop
push
int3
mov
xchg
add
add
add
cmpsl
shrl
es
pusha
ljmp
adc
out
scas
mov
sti
js
push
add
and
pop
mov
neg
xor
cwtl
add
sub
js
iret
xchg
cmp
aaa
std
xor
jl
adc
xorl
add
cltd
les
fmul
outsl
add
sbb
lock
push
mov
dec
jecxz
xchg
sub
outsb
add
pop
mov
mov
cli
rcr
in
push
in
add
adc
add
mov
jb
fiaddl
js
add
scas
and
mov
add
rcrl
push
rolb
pop
cltd
int3
mov
in
aam
adc
scas
mov
ljmp
sti
ret
ret
mov
mov
mov
std
or
insl
loope
add
mov
test
add
xchg
pop
fwait
add
jg
iret
jnp
cli
add
cmp
imul
sub
and
lds
shl
test
cmp
dec
sub
pop
mov
fdivrp
iret
mov
lret
push
cwtl
das
jb
add
bound
pop
cli
subl
jns
rcr
pusha
scas
push
nop
leave
push
mov
add
loopne
mov
mov
xchg
dec
int
xchg
popf
das
js
ja
out
mov
sub
shl
roll
das
ds
iret
dec
sub
fs
or
jb
inc
jmp
decb
fistps
and
movsb
cmp
mull
pop
add
or
and
aaa
mov
pop
faddl
lods
dec
aad
sbb
jne
jbe
test
sbb
or
popl
decl
add
aas
in
js
cmc
int3
add
push
jo
push
ljmp
push
test
call
pop
in
dec
sbb
test
mov
cmp
ret
push
sub
inc
and
mov
mov
xor
cltd
loopne
pop
jb
repz
and
incb
stc
add
or
xchg
mov
fbstp
ss
int
add
popl
aam
xor
add
ltr
cwtl
xor
pop
leave
iret
bound
pusha
mov
xor
add
mov
jmp
decb
sbb
loopne
xor
pop
in
push
add
inc
sbb
out
rolb
daa
adc
add
pop
pushf
push
rorb
subb
lods
test
mov
iret
loopne
inc
cld
sbb
dec
push
jbe
or
adc
pushf
push
loop
pop
and
mov
bound
sbb
pop
mov
imul
dec
mov
std
data16
ja
mov
add
out
mov
cmp
cmp
adc
loop
cmp
sbb
and
push
xchg
mov
test
loopne
sarl
outsb
adc
xor
jno
add
ret
adc
test
push
mov
mov
jns
add
insl
and
jle
test
pop
shll
xchg
push
add
inc
xor
xor
cmp
add
aas
mov
sbb
jnp
xor
outsl
sbb
jg
or
imul
mov
xor
jae
mov
add
ret
mov
es
std
pop
lcall
divb
scas
add
mov
out
jp
iret
mov
jb
push
and
adc
xchg
sub
mov
cli
es
clc
sub
cmpsl
popa
push
std
imul
stc
mov
rolb
cmp
test
mov
push
adc
fidivrl
movsl
sbb
andb
fmul
mov
push
or
push
mov
mov
outsb
mov
test
mov
fdiv
or
xchg
ljmp
js
sub
dec
push
jecxz
add
dec
mov
stos
or
ret
sbb
ds
aam
add
jge
push
ss
add
stos
mov
adc
and
xchg
mov
add
outsl
daa
in
add
adc
cmpl
add
and
jmp
out
pop
pusha
loope
mov
sub
pushf
push
add
or
xchg
clc
scas
xchg
add
adcl
jns
add
and
cmp
mov
sbb
add
mov
cmc
lock
imul
loope
repnz
cli
sbb
sbb
out
loopne
add
rcrb
cld
mov
mov
or
add
popf
mov
orb
movl
repz
xor
notb
inc
sub
fsubrs
rorb
loop
lock
out
cmp
sbb
mov
sub
sub
pop
mov
jns
add
push
add
or
jno
jmp
jae
clc
or
pop
sti
push
jne
cmpsb
inc
adc
add
out
mov
mov
add
push
pop
or
and
out
popf
in
cs
or
mov
dec
sub
mov
pusha
fsubrl
lods
fldenv
hlt
mov
adc
add
ret
test
fwait
clc
jl
out
add
shrb
repnz
xchg
mov
jno
add
das
mov
loopne
jae
popa
gs
in
lcall
pop
jo
lock
xchg
test
aad
inc
movsb
push
cmpsl
sub
add
imul
std
pushf
push
call
ss
testb
sbb
mov
add
xor
adc
sub
bound
out
sbb
mov
add
ss
movsb
cmc
faddl
sub
pop
mov
add
pop
ret
filds
pop
add
jnp
pusha
popa
and
in
adc
xor
sbb
shlb
sbb
and
pusha
dec
in
pop
and
mov
adc
lcall
sarl
lcall
xor
sbb
scas
mov
add
push
mov
mov
and
in
clc
jp
repz
aad
fsubs
setae
test
imul
pusha
mov
insl
pop
dec
pop
pushf
popa
push
sbb
adc
sbb
push
jbe
aam
and
loope
in
add
shr
mov
add
ret
mov
adc
cmpsb
pop
loop
hlt
inc
add
lds
es
outsb
lods
pop
mov
clc
sbb
jo
add
std
shl
int3
leave
fdivs
addl
sbb
lock
xchg
push
mov
or
xor
xchg
push
add
or
inc
inc
fstp
and
mov
cld
lcall
sbb
add
mov
xchg
mov
fiaddl
adc
cmp
leave
and
and
ret
pop
pop
xchg
add
sbb
stos
sbb
add
adc
and
stos
xchg
das
aas
push
sbb
inc
add
inc
js
movsl
iret
jl
mov
or
imul
inc
sbb
inc
jb
shl
xchg
xor
push
pushf
add
pop
mov
and
add
dec
cmp
inc
or
rorl
leave
pop
les
lahf
add
xchg
and
xchg
mov
adc
das
jae
sub
adc
lods
dec
add
fadd
and
aam
loope
mov
jae
bound
add
fwait
into
movsb
ds
jne
loop
push
cmpsb
and
arpl
les
clc
xchg
or
cwtl
stos
xor
adc
xlat
fcmovnb
repnz
adc
data16
xrelease
xlat
sbb
cmp
push
add
mov
shl
mov
mov
mov
cmp
jge
dec
les
fbstp
fwait
sbb
mov
add
push
dec
sbb
ret
xor
in
push
xor
xchg
add
repz
sub
out
data16
pop
push
mov
inc
add
jle
xor
imul
cld
sahf
dec
test
hlt
mov
jnp
movsb
mov
ret
pop
stos
push
shrb
adc
push
aas
rcrl
cs
inc
sahf
into
lock
jle
add
cmp
outsl
mov
vandps
or
aad
pop
ja
data16
mov
lods
mov
add
jne
clc
xchg
push
cmp
add
ret
addr16
sti
cs
hlt
add
repnz
jge
data16
mov
sarb
mov
mov
insl
stos
notb
and
sub
pop
mov
adc
jl
cli
and
std
add
jb
or
xor
inc
mov
shr
sbb
and
pop
push
ret
ret
ret
mov
sbb
clc
in
mov
xor
mov
pop
adc
add
or
lret
add
push
mov
fadds
dec
sti
lods
and
outsl
dec
xlat
js
fcoml
pop
imul
sub
iret
mov
xchg
testl
mov
add
dec
push
sub
and
pop
hlt
sbb
cli
xor
sbb
nop
repz
out
adc
push
dec
add
xor
into
jl
popa
test
sbb
inc
icebp
add
ds
stos
add
pop
inc
sahf
ret
mov
out
outsl
mov
add
out
scas
out
cli
fcompp
add
jb
fwait
add
sbb
pushl
rclb
loope
loope
and
in
test
lods
add
faddl
rcrl
jp
jbe
cmpsb
shrl
push
or
mov
ljmp
js
inc
popf
xchg
gs
mov
or
arpl
pop
xor
cs
xor
pusha
loop
xchg
iret
sub
data16
mov
xor
inc
pop
inc
fsub
add
cmp
fbld
inc
mov
data16
scas
jecxz
jp
jmp
adc
pop
das
loopne
daa
pusha
cmpsb
ja
sbb
fcompl
mov
xor
jne
pop
mov
xor
inc
xchg
cmpsl
pop
mov
loop
pop
lock
in
jg
inc
jge
and
cs
or
push
cmp
sub
mov
jbe
add
pushf
xchg
pop
add
js
icebp
cmpsl
mov
adc
fbld
les
into
and
adc
test
add
xlat
sar
add
or
add
mov
leave
aad
pop
ret
roll
inc
mov
xchg
or
pop
loopne
mov
push
xchg
stc
pusha
push
pop
inc
cmp
test
bound
mov
xchg
dec
lds
mov
adc
adc
sub
aas
xor
out
or
fmuls
pop
push
das
ds
cmpsl
add
inc
push
mov
mov
or
mov
pusha
adc
cmp
jp
movsl
sub
sbbl
xor
mov
add
gs
data16
push
dec
mov
negl
scas
inc
add
or
jmp
xlat
add
aad
repz
pop
dec
and
xchg
or
enter
bound
loop
cwtl
loope
lret
aam
sbb
shrl
add
inc
and
and
fwait
and
fcoms
mov
mov
add
shl
inc
add
lea
add
testb
shlb
pop
push
or
ja
or
and
adc
adc
pop
das
xchg
andb
std
xchg
popf
hlt
imul
adc
adc
push
scas
adc
add
andb
scas
out
pop
and
add
mov
lahf
sbb
add
or
inc
inc
mov
popa
push
inc
ret
shlb
and
daa
sub
aaa
fwait
cmp
pushf
jecxz
add
stos
and
inc
mov
push
int
push
movl
push
stos
rcr
or
or
jae
add
pop
xor
iret
sbb
sub
mov
fistpll
and
cmpsl
push
pop
push
dec
cmp
flds
ds
movsb
add
loope
test
pusha
lock
sbb
into
dec
out
shl
sti
jae
sub
adc
xchg
xchg
dec
fwait
add
inc
test
loopne
rcr
mov
in
les
leave
adc
imul
push
das
or
jl
cld
scas
in
pusha
dec
add
sbb
cmp
mov
add
jp
rorl
inc
cmpsl
ret
sahf
push
dec
ret
dec
pushf
push
ret
and
adc
dec
sub
adc
jb
mov
xchg
cmpl
sbb
cmpsb
pop
dec
faddl
jmp
push
lret
fs
cmpsl
add
js
xor
xchg
push
or
jno
mov
cmc
add
dec
cmp
popf
mov
loopne
pushf
xchg
lahf
movb
add
popa
cmc
mov
and
inc
cmp
and
loopne
mov
adc
out
jge
xchg
xchg
mov
filds
cwtl
xlat
jns
loop
leave
sbb
or
dec
jne
fwait
jp
add
jmp
mov
and
es
push
outsb
test
fadds
sub
aaa
jl
add
pop
adc
mov
and
adcl
add
lahf
jnp
sbb
add
xor
fyl2x
mov
inc
pop
sub
hlt
and
insb
int
jno
adc
inc
sub
cld
daa
add
mov
mov
jl
imul
mov
sbb
aas
in
push
dec
add
scas
ret
popa
xchg
iret
xor
inc
sub
mov
loopne
aas
add
sub
xor
or
dec
imul
add
xchg
sbb
es
out
sti
or
push
pusha
or
imul
mov
imul
jl
loope
push
sbb
or
mov
movb
hlt
dec
add
aam
cmp
add
sbb
scas
push
stos
and
inc
adc
dec
lods
dec
popl
pop
mov
or
pop
xor
int3
roll
mov
sbb
call
clc
adc
mov
inc
addb
add
enter
out
cmp
lret
add
sub
lahf
mov
das
rol
sbb
iret
and
pusha
sbb
add
pop
adc
adc
add
enter
mov
jns
and
test
sti
insl
inc
cmpsl
pop
divl
cmc
insb
popf
jp
outsl
cltd
lahf
mov
or
ret
sbb
repz
lret
pop
lds
scas
loop
add
jp
cmp
fwait
add
adc
adc
es
xchg
out
loopne
jb
xchg
push
cltd
cld
ss
inc
add
pop
or
idivb
pop
fsts
inc
dec
add
mov
leave
add
dec
jecxz
test
ret
inc
imul
inc
popf
jmp
adc
add
adc
mov
and
xor
or
shll
or
popa
clc
insb
in
sbb
mov
add
roll
jb
jle
dec
add
adc
ss
in
jne
add
sbb
add
inc
push
pushf
xor
popl
sbb
pop
sub
sbb
incl
cmc
jb
arpl
add
add
add
lret
shrb
ret
andb
addr16
adc
stos
icebp
in
or
out
test
dec
icebp
adc
dec
stos
addr16
lahf
add
cmp
rcl
cmp
mov
frstor
inc
or
loop
fistps
shl
xchg
mov
add
lret
insl
fwait
dec
aaa
add
or
sub
xor
and
aam
mov
sbb
add
and
stc
jnp
cmp
mov
mov
pop
mov
repz
pusha
fs
test
lcall
pop
rclb
loope
cvttps2pi
loop
cs
lret
fbld
sub
push
enter
sub
add
cmpsb
cmpsl
xor
std
stos
mov
rolb
add
lret
and
outsl
inc
sbb
sub
loopne
lds
mov
je
sub
mov
dec
or
in
cmp
cli
add
test
jmp
xor
imul
int
mov
into
fists
stc
dec
push
add
xor
jl
mul
xorl
les
pop
push
fadd
test
mov
or
stos
mov
ret
dec
add
cmc
jo
das
stc
add
mov
dec
xchg
cmpsl
lods
sbb
fldcw
rcll
fcmovb
mov
adc
and
cmpsb
jmp
mov
mov
cmp
lcall
push
inc
mov
or
loop
add
jge
add
sbb
sub
or
xchg
add
std
push
addb
in
add
leave
dec
mov
pop
mov
cmc
jbe
outsl
dec
sbb
std
add
gs
add
jle
push
pop
popa
jo
popf
sub
add
je
insb
sub
mov
popa
mov
test
jle
dec
repz
add
push
xor
loopne
cmc
add
ja
aad
popf
dec
add
and
int
inc
jle
jne
out
insb
iret
imul
add
arpl
sbb
adc
adc
sar
lea
shll
sub
adc
jne
add
rorl
loopne
sbb
dec
push
int
mov
pop
adc
test
mov
dec
shll
add
jge
mov
movsl
adc
or
inc
add
push
mov
push
das
stos
push
add
inc
aaa
lea
add
and
add
push
aas
stos
mov
inc
clc
lahf
add
mov
loop
add
sub
xchg
fisubs
loope
in
cmp
mov
mov
shlb
mov
add
jb
mov
popf
sahf
std
add
add
addr16
into
js
mov
nop
dec
and
xlat
mov
pop
pop
test
stos
and
cmpl
dec
sub
mov
fs
inc
pushf
rolb
imul
ss
add
xor
mov
and
dec
xchg
push
or
pusha
pop
cmpsl
pop
and
adc
and
dec
push
mov
fldl
stc
ljmp
add
xchg
aaa
xlat
add
jmp
in
add
lods
dec
test
jle
add
loopne
imul
jp
ljmp
jbe
push
and
rcrl
push
add
inc
es
jne
push
adc
out
adc
jg
sub
xchg
leave
dec
popa
loope
imul
sti
jmp
fiaddl
imul
pusha
mov
dec
arpl
push
popa
jecxz
add
push
sub
popf
pop
add
rclb
cmpsl
and
outsb
pop
test
movsl
inc
dec
sbb
xor
es
or
xchg
cltd
adc
mov
pop
stos
ret
add
das
sbb
insb
pop
dec
pop
mov
jns
mov
icebp
and
dec
xor
imul
outsl
int
pop
adc
xchg
mov
inc
mov
test
hlt
pop
dec
das
mov
ljmp
sbb
push
or
cmp
adc
and
lods
jg
push
cmpsb
inc
jo
add
sti
xchg
rcpps
pop
inc
pop
mov
out
je
add
mov
stos
pusha
lods
outsb
pop
roll
and
pop
das
sbb
std
das
add
in
inc
push
fbld
or
lods
jmp
lcall
mov
mov
outsb
push
add
lahf
sbb
int3
mov
lcall
mov
push
mov
out
dec
loopne
lret
test
js
aaa
sbb
cmpsb
xor
fbstp
je
int3
lock
test
push
adc
ds
adc
xor
ret
out
in
xor
xchg
jg
or
and
sti
sub
ret
lock
adc
inc
add
pushf
scas
jle
dec
sbb
add
aas
notb
jg
xchg
rcl
sbb
mov
add
add
push
test
dec
mov
mov
arpl
cli
dec
jo
pop
add
loope
pop
loopne
fists
push
add
inc
je
loopne
sti
loope
push
or
xor
lret
inc
pop
pushf
add
xor
jno
or
ret
lahf
lret
outsb
ljmp
gs
dec
mov
popa
add
stos
sbb
ljmp
test
mul
push
lea
shlb
jno
sbb
mov
xchg
cmp
filds
xchg
push
xchg
dec
sub
addr16
sbb
xchg
cmp
mov
je
xor
xchg
push
scas
xchg
add
sbb
aaa
add
lea
rolb
stos
cli
and
add
push
xchg
and
push
insl
jo
push
push
int
stc
add
cmp
pop
imul
sub
adc
out
pop
lahf
loopne
xorl
adc
push
xlat
pop
add
icebp
inc
out
out
enter
inc
gs
cmp
std
sbb
loop
jl
or
pop
outsl
add
xchg
mov
aam
out
cld
push
sub
pop
add
xchg
mov
aas
mov
and
pop
int
push
cmp
jno
inc
enter
dec
cmp
inc
add
xchg
pushl
and
arpl
test
in
xchg
loope
cmp
push
mov
add
jne
pop
push
cli
add
bound
es
lahf
cmpsb
or
mov
inc
add
test
aam
add
add
or
xor
andb
jmp
popf
sbb
in
in
int3
enter
xchg
into
add
push
inc
out
add
mov
jg
mov
popa
loopne
xchg
lds
mov
cmp
xchg
sbbl
add
add
mov
jecxz
push
jno
xchg
in
and
jp
ret
xchg
mov
dec
and
or
rcll
xchg
mov
stc
imul
out
nop
xchg
inc
mov
rolb
cs
leave
repz
pusha
and
or
pushf
loopne
xchg
jle
ss
cmp
cli
cmp
jno
inc
add
rcrl
push
loop
push
and
adc
loope
lods
xchg
sbb
pop
pop
jp
cmp
xchg
insb
sub
add
nop
addl
popa
push
push
gs
ficompl
push
fistpll
data16
popf
jle
sarb
add
int3
inc
hlt
pop
jg
lea
leave
rcrb
sti
xor
call
insl
inc
mov
or
adc
add
das
add
adc
pop
push
pusha
cmpsl
sub
jns
pop
lods
pop
add
cmpl
mov
cmc
xor
outsl
sahf
stos
filds
push
test
in
push
pop
mov
push
or
push
inc
sbb
lods
xor
xor
inc
fdivl
inc
add
fnstenv
push
fcom
roll
fwait
and
add
sahf
jbe
fistpl
add
loopne
mov
dec
and
arpl
fwait
add
pop
scas
mov
jne
bound
jae
mov
mov
mov
movl
adc
sahf
add
mov
add
mov
push
insb
and
pop
sbb
adcl
sarb
and
outsl
or
jnp
jecxz
inc
pop
xorl
or
test
inc
add
pushf
loopne
push
and
dec
and
add
pop
inc
inc
cli
adc
cmpl
rolb
xchg
enter
inc
push
mov
cmp
dec
stc
ja
lock
dec
add
push
aas
and
shll
xor
loope
arpl
push
cld
popa
add
stos
adc
pop
jbe
stos
dec
push
jecxz
add
mov
jge
popa
jl
imul
add
add
adc
jb
outsl
fwait
cmpsb
push
xchg
fstl
add
sbb
add
mov
shll
adc
jmp
sub
inc
or
push
push
lds
mov
sbb
addr16
fisubrs
loopne
mov
outsb
sbb
pop
add
std
xor
mov
test
pop
mov
leave
adc
sbb
aam
pop
mov
pop
adcl
mov
lahf
mov
add
imul
das
pop
mov
in
jg
mov
push
enter
call
andl
push
add
lods
and
jns
cmp
sbb
arpl
rcl
or
repz
adc
test
fisubl
movb
xor
lahf
sbb
xor
lcall
in
add
shll
push
loope
cmp
daa
loopne
leave
fisttpl
pop
mov
scas
mov
orl
data16
cwtl
les
sub
mul
enter
mov
sub
fildll
sbb
mov
outsb
or
mov
add
ficoml
into
sub
outsl
into
js
hlt
jle
addr16
add
push
dec
pop
jae
in
cs
cmp
xchg
sbb
adc
sub
stos
movsl
mov
jae
inc
add
sbb
fneni(8087
out
loopne
movsb
or
lods
add
lcall
loopne
mov
xchg
loopne
movsl
adc
sti
insl
test
push
mov
mov
pop
and
outsl
mov
cmp
inc
push
je
iret
add
push
sbb
add
push
mov
jge
push
out
sub
add
sbbb
sbb
adc
addl
fsubrs
pop
dec
adc
adc
xchg
add
mov
xchg
scas
scas
jle
lret
out
roll
jne
or
pop
sbb
enter
dec
aad
inc
add
bound
insb
add
or
dec
mov
xor
sub
jo
lea
add
cmp
add
leave
mov
sahf
mov
cwtl
jb
push
daa
ljmp
adc
cmp
mov
je
popa
scas
sbb
mov
scas
loopne
push
add
jns
out
dec
pop
mov
fidivrl
popf
or
pusha
inc
jae
xchg
dec
stos
jo
adc
lock
inc
or
ret
add
mov
cld
stc
mov
push
inc
adc
xor
lock
adc
add
leave
mov
cmpl
inc
fsub
add
jno
inc
jnp
aam
add
and
repnz
adc
xchg
pop
add
dec
and
jne
mov
rcll
loop
mov
adcl
add
mov
mov
in
sub
mov
nop
inc
data16
push
add
jmp
inc
cmovnp
mov
dec
jl
add
addr16
mov
stos
add
mov
imul
dec
push
rcr
adc
std
iret
pop
add
xorl
mov
inc
je
xchg
test
or
nop
and
stc
cli
cwtl
neg
and
xor
test
into
or
add
bnd
add
cmp
pop
sbb
outsl
ja
fidivrl
test
inc
shrl
jp
adc
leave
call
mull
arpl
inc
sbb
sub
punpcklbw
jns
push
adc
ret
adc
cmp
jb
push
push
xor
roll
inc
xor
jno
movl
icebp
fldenv
add
les
int3
add
jb
cli
hlt
pop
mov
add
mov
inc
xor
sbb
jno
jae
inc
xor
add
or
int3
push
jnp
push
rcll
push
mov
jmp
adc
and
add
std
shrl
add
test
lds
dec
stos
cltd
sub
icebp
sub
add
push
loope
popa
inc
cmpsl
lret
cs
popf
iret
rcrb
repnz
arpl
clc
stos
jae
lret
add
je
out
xchg
sbb
cld
pop
cmp
mov
sbb
add
enter
push
push
popf
ret
clc
jg
in
cmp
repz
fistpl
mov
loope
out
cld
xor
mov
add
pop
loope
xchg
hlt
xchg
addl
lret
jo
sub
enter
push
andl
lcall
mov
les
add
pop
mov
pop
stc
add
push
mov
fildl
add
negb
call
adc
out
scas
or
xor
es
mov
cmp
and
stos
insl
loope
ss
jecxz
mov
adc
dec
pop
out
sbb
sbb
and
stos
and
lds
clc
cwtl
push
je
fildll
add
imul
test
loopne
push
in
pop
jp
adc
fistl
xlat
xchg
ret
sbb
subb
cmc
insb
int3
xchg
sahf
repnz
mov
jl
orl
movsb
pop
and
imul
imul
in
mov
sbb
xchg
jo
std
sbb
inc
call
adc
cltd
add
cmpsb
cmc
pop
sbb
add
cmp
jp
inc
test
dec
push
adc
and
mov
inc
sbbb
adc
js
call
mov
add
push
push
ss
cmp
xor
mov
daa
cmp
and
cltd
cmpsb
jmp
mov
dec
add
scas
sti
cmpsl
mov
jmp
xor
sub
repnz
rcr
xorl
push
out
dec
aaa
inc
mov
adc
xlat
add
mov
xchg
push
pusha
add
sbb
cld
xor
stc
not
sub
add
add
add
and
shll
jbe
test
lcall
add
push
add
mov
push
add
test
cmpl
outsb
add
mov
adc
sub
mov
ret
pop
and
fs
push
mov
btc
xchg
loope
add
xor
add
cmc
sti
and
call
and
mov
pusha
push
int3
and
ffree
loope
add
mov
xor
lock
popa
pop
mov
aaa
pop
loopne
sbb
ret
adc
test
pop
mov
lock
xor
fsubl
adcl
and
cmovno
out
adc
ret
xchg
cmpsl
adc
imul
fdivl
movsb
sub
out
xchg
adc
xor
or
dec
inc
lods
push
sub
mov
mov
xchg
fnsave
jmp
pop
push
push
outsl
inc
cmpsb
mov
add
sbb
daa
pop
out
jbe
std
mov
fmuls
int
add
inc
out
jno
and
add
mov
loop
jns
push
add
jl
push
jne
adcl
add
ss
jo
adc
in
pop
mov
hlt
clc
add
and
in
movsb
push
mov
stos
mov
mov
add
ds
loope
or
das
add
and
mov
add
ret
push
jecxz
out
fldl
or
dec
out
repz
fsubrp
loop
hlt
fs
out
ret
mov
imul
add
aaa
xchg
test
out
dec
popa
lret
add
test
sub
or
inc
push
cmp
data16
stc
xor
fnstsw
outsb
add
test
pop
and
fiaddl
addl
stc
mov
sbb
lods
int
sub
mov
xchg
mov
ljmp
or
mov
jp
jecxz
mov
adc
shr
inc
leave
adc
movsl
dec
in
dec
add
insb
outsb
les
stc
push
jbe
xchg
cmp
and
sahf
push
clc
mov
fbld
in
ss
cld
push
pop
fdivr
push
add
jne
mov
mov
push
leave
int
es
mov
loopne
adc
rclb
add
fwait
jno
into
sub
sbb
int
in
scas
mov
jmp
call
lcall
xor
stos
mov
mov
data16
mov
xchg
cmp
xchg
mov
cmp
adc
jp
sub
mov
add
andl
mov
jmp
int
pop
imul
into
pop
jbe,pt
and
add
movsb
cltd
add
sub
dec
cmpsl
adc
fwait
or
ret
test
loop
mov
mov
pop
mull
xchg
inc
dec
sub
xchg
ret
add
fs
mov
inc
jo
test
dec
and
mov
mov
mov
dec
push
push
lds
fildl
movl
inc
sbb
or
es
add
das
and
mov
ja
movsl
pushf
dec
ljmp
xor
in
iret
popa
fsts
pop
dec
pop
pop
nop
roll
push
lahf
sahf
add
arpl
fcmovne
sbb
scas
orl
bnd
inc
fimuls
or
mov
rcl
mov
fisubl
aam
mov
enter
or
popf
cld
into
push
loope
dec
cmpsl
xchg
jl
and
jl
js,pt
push
inc
inc
add
cld
fmuls
out
incb
jg
es
pop
popf
mov
sub
test
dec
neg
pop
mov
loopne
repnz
xor
test
xor
mov
or
add
out
in
add
push
mov
pop
mov
ds
pop
imul
push
and
jo
inc
shlb
add
inc
sub
and
jo
lahf
dec
andl
add
pop
lret
mov
add
dec
sahf
insb
mov
daa
cmp
rorl
mov
mov
and
scas
andb
mov
inc
dec
loope
mov
lock
mov
popf
pop
add
out
in
push
shr
ret
add
pusha
xchg
add
adc
add
push
mov
sub
add
push
es
and
jnp
pop
paddw
sbb
or
jo
bound
fwait
xor
rcl
cwtl
test
outsb
cmp
mov
push
dec
push
repz
dec
cmpb
add
sbb
add
push
call
push
cmp
mov
nop
inc
add
ss
dec
jecxz
or
icebp
fiadds
test
adc
das
mov
add
push
loope
dec
inc
andl
cmp
in
pusha
imul
sti
adc
in
add
sub
xadd
jecxz
loop
xlat
mov
push
xor
add
add
inc
push
sbb
jl
add
mov
nop
add
sub
pusha
mov
adc
xchg
imul
add
push
pop
push
or
fdivrl
push
jmp
pop
mov
mov
mov
test
test
add
sub
sub
xchg
xor
enter
adc
or
hlt
and
out
test
or
sbb
fwait
mov
nop
add
faddl
add
push
repz
xchg
pop
xchg
ja
xor
or
adc
inc
add
lcall
cltd
sahf
mov
cld
or
adc
scas
push
loopne
addr16
scas
sub
cmp
pusha
mov
mov
jmp
outsb
adc
inc
cld
and
rorb
add
loope
jmp
ret
xchg
cmp
add
dec
sti
inc
push
xchg
jmp
push
fcomps
xchg
outsl
pop
mov
insl
inc
fwait
pushf
push
adc
add
es
mov
jno
lds
ljmp
daa
cmp
scas
int
dec
fildl
dec
cs
push
daa
sbb
xchg
add
jae
aad
mov
xchg
or
mov
fwait
pusha
cs
aad
repnz
call
dec
jmp
repz
addr16
jns
xchg
cmp
push
stos
enter
adc
fistps
ret
xchg
mov
xor
aaa
mov
add
jmp
cmp
sub
add
loope
pop
xchg
or
mov
movsl
push
push
pop
push
cmp
adcb
fcmovnu
popl
adc
push
inc
pushf
sub
hlt
xchg
pop
bound
lds
movsb
mov
xor
not
add
loope
adc
popa
adc
nop
mov
add
and
lods
jo
nop
cwtl
dec
lock
mov
mov
jae
mov
je
add
lods
pop
sub
inc
pop
pop
add
xchg
sbbb
shr
sbb
ja
add
fildll
cltd
lods
jmp
roll
lds
fsubrl
and
scas
push
lock
mov
in
mov
fcmovnb
addb
push
sub
push
jnp
icebp
out
sub
mov
add
dec
push
dec
inc
mov
push
add
cmp
aas
xor
hlt
loopne
xchg
mov
out
loopne
push
aam
inc
es
fmul
lahf
mov
add
lods
dec
dec
call
ja
iret
stos
psubusb
pop
jecxz
scas
loope
rolb
xchg
fwait
std
cltd
loop
inc
cmpsb
fs
ret
xor
or
cmp
push
xor
scas
shll
das
or
dec
and
je
sbb
or
or
sbb
cs
pusha
push
ret
loop
sub
fwait
add
xor
mov
das
ret
mov
stos
cmp
or
enter
std
add
outsb
lret
aas
aaa
push
add
rcrl
add
push
push
rorb
shl
pop
push
dec
jns
adc
inc
pushf
dec
enter
mov
imul
testl
mov
ret
push
inc
aam
pop
add
cmp
sub
xor
sar
dec
sub
bound
sbbl
insb
aad
dec
sbb
push
dec
shlb
je
push
loopne
inc
mov
or
decb
addb
lods
add
cmpsb
sub
xchg
fs
clc
adc
scas
jnp
into
xor
inc
dec
ljmp
outsl
pop
orb
cmpl
fs
adc
jae
and
loop
xchg
pmaxub
repnz
pmulhuw
out
push
test
xchg
adc
lea
adc
xorl
jp
shll
and
sbb
into
or
add
sarb
cmpsl
adc
xchg
sti
xor
add
in
data16
xor
xorb
jge
lret
and
mov
inc
popa
data16
push
add
filds
mov
cli
movb
mov
lahf
cmpsb
mov
mov
jne
xor
loop
test
sbb
push
je
mov
leave
lcall
pop
loopne
pop
fisttpl
sub
adc
out
jbe
movsb
movlps
jmp
or
or
mov
dec
add
pop
mov
popf
and
push
cmc
jae
adc
and
sarl
adc
xor
jge
mov
inc
fsub
jp
mov
mov
inc
pop
in
xchg
push
push
add
xor
mov
pop
and
add
lret
sarb
or
fidivs
mov
add
jo
sti
pop
add
add
or
scas
mov
mov
xorl
daa
loope
imul
dec
sub
pshufb
dec
mov
cltd
int3
repz
jns
mov
xchg
add
fwait
inc
out
xchg
data16
negl
mov
adc
aad
fnstenv
or
dec
loop
add
inc
pushf
cmp
add
push
jne
sbb
jb
arpl
ficompl
sbb
add
sub
inc
add
nop
repz
mov
xchg
int3
rcrl
fisttps
mov
in
xorl
sub
add
sub
aas
lret
idiv
push
add
jp
add
jns
add
rcll
aam
sahf
out
push
add
ljmpw
pushf
pusha
mov
xchg
iret
and
ret
call
stos
ds
outsl
add
inc
push
pop
add
icebp
inc
mov
add
stos
jp
and
ret
or
add
xor
int3
roll
jae
pop
dec
addr16
xchg
mov
xchg
fnstsw
add
stos
adc
std
bound
mov
push
in
cmp
add
addr16
ds
fildl
pop
nop
call
enter
lahf
mov
int
in
out
mov
loopne
push
lret
add
jmp
stos
jns
pusha
mov
sub
sbb
cmp
add
in
sbb
xchg
mov
cltd
xlat
or
jecxz
inc
int
mov
xor
add
inc
stc
cltd
add
adc
sbb
adc
cmp
add
test
aaa
and
fldcw
lds
add
or
sbbl
add
cmpsb
outsb
mov
lock
cmp
imul
addb
sbb
sub
add
mov
sub
mov
scas
cli
add
adc
arpl
pop
add
cmc
int
pmuludq
jns
sbb
scas
xchg
xorl
lret
ljmp
pop
inc
add
js
mov
into
flds
fs
pop
repz
mov
ljmp
xlat
or
jmp
call
loop
out
add
das
mov
add
clc
icebp
or
push
mov
and
xchg
mov
stos
inc
loope
adc
xor
add
stos
cmp
inc
adc
shlb
inc
into
adc
jecxz
and
call
scas
adc
data16
add
out
inc
dec
shll
aas
nop
jno
sub
adc
jbe
hlt
or
mov
test
ja,pt
push
jo
mulb
loope
nop
and
mov
ljmp
scas
lahf
into
inc
cmp
sbb
inc
rcrw
sbb
jbe
repnz
jno
add
loope
push
or
ja
fdivrl
repnz
xor
xor
imul
xchg
cmp
jnp
fbstp
inc
pop
fidivl
mov
xchg
cltd
fnstcw
sub
jecxz
xchg
pop
rcr
xchg
add
in
rcll
add
pop
jnp
scas
lods
test
sbb
pushf
testl
xchg
fs
add
imul
pop
jbe
lods
std
out
add
mov
outsb
lahf
jecxz
loope
int
adc
add
fcomip
adc
js
sbb
pop
sbb
pop
loope
add
ret
ss
add
mov
mov
jnp
xchg
add
xor
add
xchg
and
adc
add
pop
jnp
add
into
lret
mov
inc
daa
mov
pop
cmp
sbb
pusha
fiaddl
ljmp
lea
lret
int3
add
movb
andl
sbb
in
int3
adc
sar
sahf
inc
loopne
cs
cmp
or
fisttpll
mov
es
add
loopne
icebp
js
imul
sub
ja
mov
out
xor
mov
jl
faddl
add
leave
iret
adcl
ficoml
imul
enter
push
sbb
arpl
add
pop
out
add
jecxz
ja
mov
adc
or
pusha
les
insb
sar
loopne
add
repnz
add
loop
add
or
or
sahf
in
add
lock
adc
jg
cmpb
mov
push
inc
lods
or
popa
dec
dec
aad
and
add
inc
out
add
adc
jmp
inc
push
stos
stos
mov
mov
dec
in
aaa
cmpsl
fwait
nop
adc
mov
and
jp
dec
das
loope
fistl
sbb
push
pop
cmp
rcrl
sbbl
pop
testb
xchg
and
xchg
sahf
dec
cmpsl
add
cld
aad
dec
add
add
cmpsl
dec
lods
adc
dec
cmp
adc
mov
loop
jmp
cmp
inc
movsl
orb
xchg
in
add
in
xchg
scas
dec
add
mov
pop
or
lcall
or
xchg
xchg
notl
cwtl
add
pop
sbb
and
sbb
inc
movsb
jle
inc
addr16
xchg
es
add
int
cltd
or
rcrb
imul
mov
call
jne
cmp
xchg
insb
or
add
test
ljmp
xor
daa
enter
sub
sbb
inc
sub
xchg
adc
xor
test
cld
das
outsb
test
mov
aas
mov
js
inc
and
out
dec
jg
add
movsl
xor
imul
jecxz
outsb
int3
dec
add
mov
xchg
loopne
pop
sub
sbb
xchg
in
add
sub
orb
int
icebp
mov
cli
pop
lret
imul
roll
shlb
inc
jo
mov
iret
and
and
push
add
fwait
ret
sti
imulb
adc
add
sbbb
inc
repnz
out
movl
jg
push
mov
sub
out
ret
stos
sbb
mov
cwtl
add
out
movsl
or
xlat
add
cltd
pop
insb
rcr
addr16
pushf
and
add
push
adc
int
add
stos
popf
lret
arpl
jecxz
add
pop
sub
sbb
mov
mov
xor
push
inc
jns
or
lea
std
xchg
shlb
xor
add
mov
sbb
jge
out
or
fdiv
and
add
or
add
inc
and
inc
test
add
loope
mov
add
pusha
scas
std
jp
lahf
pop
xor
enter
push
inc
out
sbbb
fldl
xchg
add
mov
sub
mov
add
add
sti
jmp
leave
scas
fbld
cwtl
jbe
add
lds
jno
sbb
jg
ds
sbb
push
add
loop
mov
int3
lret
mov
xchg
enter
inc
xor
push
lock
mov
sbb
add
das
fiadds
ja
jmp
add
adc
fdivrs
and
movsl
xchg
fmull
aaa
or
adc
repnz
aam
jns
add
mov
jecxz
stos
add
loope
pop
push
jne
xlat
add
das
cmp
arpl
repz
mov
jl
dec
in
pusha
out
xor
pop
or
rorl
add
insl
aad
lcall
aas
sbb
repz
ja
leave
push
xchg
add
fisubrl
aam
sub
pop
loopne
fisttps
shll
pushl
jg
insl
inc
aam
lcall
inc
ds
lods
push
and
mov
sbb
cmp
pop
fdivrs
sub
test
iret
leave
les
adc
adc
xchg
inc
push
cltd
xor
jo
ror
out
sbb
mov
dec
faddl
outsl
pusha
mov
mov
dec
sbb
push
push
mov
adc
mov
test
ret
stos
sbb
inc
sub
flds
jbe
pusha
fdivl
adc
jp
sbb
mov
add
pop
out
mov
testl
xor
loope
pusha
mov
xor
ret
aaa
adc
and
aad
and
xor
lret
jmp
dec
pop
addl
addl
test
jb
dec
inc
shl
pop
lcall
pop
pop
ret
jns
add
gs
js
ss
xchg
test
pop
jle
cmp
outsl
test
add
inc
shlb
push
ljmp
sbb
inc
jno
lea
push
lds
in
cmc
xchg
popa
pop
adc
add
insl
push
loopne,pn
das
imull
ja
add
add
lahf
xchg
mov
xor
cltd
cltd
addb
je
cmp
fsin
ds
mov
dec
out
scas
add
addr16
jae
lods
xor
ret
int3
js
je
lds
and
xchg
into
dec
cwtl
push
adc
cmc
add
popf
cs
sub
xchg
cmp
jno
test
sbb
in
jne
push
dec
pusha
jg
xchg
bound
leave
sbb
push
pop
mov
jge
repz
imul
pop
adc
nop
add
mov
test
add
inc
add
adcb
sbb
into
test
add
jnp
addl
push
cs
jno
and
call
ja
adc
adc
cmp
int
mov
cli
push
adc
in
stos
aam
mov
jge
cmp
pop
fidivrl
inc
push
adcb
adc
jb
fimuls
pusha
je
sbb
inc
cli
inc
xor
push
lahf
add
jne
shlb
add
inc
mov
out
stos
aas
push
mov
xor
stc
and
call
lds
or
sub
or
fwait
add
hlt
and
adc
add
ret
arpl
xchg
adcl
daa
cmp
pushf
fwait
inc
add
insb
ret
mov
jge
inc
loopne
adc
iret
repnz
and
mov
dec
inc
addr16
movsl
jecxz
aas
repnz
add
out
stos
inc
outsb
xchg
add
fcmovbe
xchg
inc
jo
push
stc
add
movsl
xlat
mov
movsb
fiaddl
push
das
mov
cli
or
inc
mov
push
inc
sbb
sbb
test
mov
jecxz
ss
mov
lds
shll
adc
lock
lahf
dec
jge
imul
movsl
xchg
addl
push
add
loop
add
pop
cmp
xchg
mov
divb
jo
sarl
cmc
add
in
sub
push
xchg
sub
mov
add
xchg
push
rorl
pop
push
dec
test
in
lret
int3
jecxz
xchg
mov
test
out
dec
clc
sbb
cmp
cli
cld
push
mov
sbb
jmp
push
push
jae,pn
in
adc
stc
push
in
leave
or
add
not
sub
and
and
pop
push
aam
jmp
cld
cmp
rol
das
xor
xor
rclb
ljmp
mov
pushf
or
pop
scas
push
dec
adc
add
std
mov
add
fwait
xor
jne
test
mov
adc
loope
aam
mov
sub
mov
sbb
and
add
test
xchg
lcall
arpl
mov
cmp
add
jns
mov
cmp
aas
dec
adc
add
add
loope
lds
ret
pop
dec
mov
and
movsb
ja
adc
insb
push
add
sbb
or
pusha
sbb
sbbb
jbe
aad
repnz
mov
popa
adc
aas
insb
add
add
sbb
push
adc
add
jo
mov
sbb
add
rcr
popa
and
sti
add
sbb
lods
scas
xor
stos
icebp
pop
and
add
fisttpl
mov
jmp
push
add
xchg
cmp
add
jl
in
addr16
sbb
movb
adc
cmp
loope
or
add
mov
fidivrs
leave
add
ljmp
icebp
insl
in
cwtl
ss
mov
cmc
xor
outsl
lods
dec
in
add
popf
shll
test
xchg
or
or
cli
lcall
rcl
lret
in
xchg
xchg
pop
fdivrs
add
std
inc
dec
adc
add
into
inc
sub
movsl
fs
and
add
shrb
add
dec
lahf
sub
xor
sarb
mov
push
repz
or
add
aaa
inc
adc
rcrl
dec
xor
fisttpl
test
lock
out
pop
push
add
jb
stos
dec
pop
jg
add
pusha
out
push
xor
xchg
add
sbb
mov
or
into
and
inc
pushf
popf
add
mov
xor
das
testb
and
rolb
jg
add
scas
pop
dec
sub
scas
movsl
add
outsb
and
mov
cli
mov
into
mov
inc
sub
or
or
jne
enter
xchg
push
inc
xchg
cmpsl
in
mov
and
mov
dec
ds
or
inc
bound
movsb
and
and
sbb
clc
js
pop
mov
add
sub
addl
arpl
jmp
cmp
sarl
inc
mov
mov
scas
xchg
lds
add
mov
inc
add
cmp
dec
add
fiadds
les
imul
jge
jae
add
imul
bts
add
aam
rol
mov
pop
jo
in
ret
and
sub
or
sbb
fwait
loope
aad
and
sahf
pop
dec
and
jb
nop
ror
loop
sbb
pop
icebp
add
andl
fxch
cs
adc
addl
xor
and
fs
js
mov
jge
add
shrw
xchg
fsubrp
inc
xor
jmp
add
enter
out
jecxz
pop
shll
add
mov
imul
dec
add
mov
loopne
inc
add
jnp
adc
sbb
inc
and
dec
fildll
add
inc
jns
insb
push
mov
test
or
xor
inc
in
push
mov
das
dec
xchg
and
add
cmp
lock
push
lret
test
pushl
mov
lahf
and
mov
or
sbb
test
aad
sub
out
les
ret
pushf
das
cmc
adc
adc
les
fimuls
cmpsl
jl
add
mov
push
and
push
add
sub
cwtl
or
add
fstpl
add
pop
dec
out
and
fidivrl
xlat
add
cmp
outsb
into
fsts
xor
add
mov
add
repnz
sbbb
xchg
push
add
mov
jnp
add
aam
test
bound
sbb
or
pusha
mov
dec
aam
lods
xor
add
mov
jns
add
add
cmpsl
sub
aam
add
xchg
inc
ret
popl
xchg
cmpsb
pop
xor
fdivrl
lea
das
mov
jl
add
leave
adc
push
pop
cmpsb
add
push
insb
arpl
movsb
xchg
hlt
sahf
lea
inc
icebp
push
mov
xlat
pusha
movsl
mov
adc
and
fsts
test
dec
add
inc
ret
cmp
jecxz
sbb
push
jg
stos
and
leave
ljmp
mov
sbb
int3
mov
call
pop
mov
loope
fimull
jno
mov
pop
fildl
push
mov
mov
jmpw
dec
fiaddl
mov
cltd
pop
icebp
aaa
sub
addr16
jge
cmpsl
cs
hlt
add
call
in
rclb
cld
fisubrl
or
adc
outsb
mov
fwait
inc
sub
iret
fidivrl
or
fcomps
insb
push
hlt
add
out
jae
push
ja
or
mov
mov
pop
and
cs
add
push
sub
repz
pop
mov
adc
dec
addb
mov
pop
loope
imul
scas
inc
call
mov
stos
dec
lds
xlat
add
insb
or
mov
and
aas
push
fs
loope
cmc
mov
jecxz
push
xchg
inc
xor
push
inc
js
arpl
cmpsb
adc
cs
or
inc
fmuls
mulb
test
adc
mov
mov
test
dec
faddp
pusha
xor
xchg
adc
push
stos
aaa
jecxz
sbb
add
std
stc
rorb
mov
or
add
sub
push
lea
mov
cli
add
iret
imul
mov
pushf
sbb
jg
add
push
fs
mov
pusha
add
fistps
lods
adc
mov
jecxz
sbb
add
ss
mov
in
push
pop
into
sub
and
xchg
scas
push
jmp
xchg
mov
inc
fwait
adc
adc
or
lea
cmp
movsl
popa
inc
addr16
inc
adc
lods
mov
dec
mov
sbb
mov
loop
push
outsl
cmc
mov
add
insl
shrb
add
rclb
loope
push
cli
push
dec
call
fisttpll
shlb
test
add
push
xchg
sti
inc
aam
cmpsl
dec
js
sbb
pop
cmpps
pop
fsts
ss
sbb
inc
bound
shrl
adc
sarb
cmp
or
in
xchg
xor
adc
sub
cmp
mov
add
xchg
push
aad
add
fstl
je
insb
add
add
bound
test
xchg
mov
stos
aam
inc
and
aaa
pushf
sbb
add
adc
lsl
sbb
add
jno
and
dec
xchg
add
repz
mov
add
addb
pop
xor
lock
pop
movsb
sbb
and
jl
mov
lods
sbb
dec
aam
mov
icebp
add
faddl
adc
movsb
in
cmp
loope
fisubrs
adc
test
mov
add
add
andb
xor
outsl
loopne
add
push
xchg
adc
cmp
pop
add
sbb
cmc
add
cs
dec
in
mov
out
mov
sub
pop
cmp
inc
imul
add
insb
mov
cmp
xchg
addr16
imul
add
jb
rolb
dec
add
shrb
or
loopne
stc
scas
mov
in
push
sbb
pusha
adc
int
pop
and
add
mov
pushf
rcrl
mov
fimuls
lret
push
cltd
inc
mov
and
test
mov
mov
inc
or
sub
outsb
xchg
repz
or
xor
sub
push
mov
aam
fldt
cmc
fdivs
sti
mov
add
push
cwtl
fldl
add
adc
mov
add
arpl
rcll
cmp
and
outsl
inc
cltd
and
pop
jle
mov
popf
cmp
int
dec
xor
push
mov
std
cltd
iret
icebp
jae
sbb
fidivs
add
and
pop
sub
add
mov
mov
push
add
mov
push
and
xor
aas
into
pop
push
dec
sbbb
add
addr16
cwtl
out
xchg
data16
addl
repz
in
or
xchg
xlat
mov
rcrb
mov
mov
mov
xchg
inc
aam
scas
int3
data16
imul
adc
add
mov
fisttps
add
or
je
pushf
lcall
xchg
adc
add
pop
jg
jecxz
push
std
or
jbe
int3
ficoml
and
mov
add
inc
add
cmc
add
sub
rolb
inc
sbb
jl
mov
sbb
sbb
test
adc
js
pop
imul
jmp
and
inc
sbb
dec
mov
dec
add
ss
fidivrl
inc
add
insl
paddsw
int3
notb
adc
stos
pop
dec
add
add
out
inc
roll
in
mov
adc
or
and
xlat
jae
lahf
pop
cld
add
movsb
mov
jne
push
cwtl
jno
fstpl
hlt
test
pop
and
out
jns
das
xchg
push
loope
or
and
icebp
add
or
add
lods
loopne
fiadds
adcb
jge
jmp
inc
and
loope
lock
jecxz
cmp
mov
call
mov
js
incb
xor
pop
add
in
xchg
xchg
lods
stos
rcrb
mov
and
sub
js
repz
sbbb
ss
cmp
jno
xchg
nop
add
xor
scas
test
inc
or
xchg
pop
pop
iret
pusha
push
je
push
sbb
sahf
out
inc
loope
add
icebp
mov
push
mov
loope
test
in
cmp
mov
and
inc
push
add
mov
cmp
push
add
mov
popf
ljmp
add
orb
pop
fs
xor
scas
sub
xchg
sub
ret
add
add
xlat
popa
mov
add
rcr
std
rol
add
push
verr
sub
dec
shl
ds
xchg
mov
sub
cmpsl
dec
xchg
adc
sbb
add
imul
mov
pop
je
aas
addr16
pop
xchg
add
pop
xchg
jno
and
push
sti
loopne
les
mov
outsl
add
ret
or
jge
lds
xchg
popf
inc
add
mov
repnz
add
push
cmc
sub
mov
je
jmp
pop
fwait
and
es
inc
add
ja
test
jecxz
fnstenv
add
mov
sbb
add
jns
mov
out
sub
out
sbb
add
add
lock
mov
pusha
outsl
xor
adc
cwtl
incl
adcb
movsl
mov
mov
cmp
je
shrb
push
dec
add
je
loopne
and
mov
mov
repnz
adc
xor
push
add
arpl
mov
mov
add
shll
jecxz
jb
sub
sti
test
jmp
fimuls
bts
inc
sbb
jmp
aam
out
cmp
add
cmp
rolb
sbb
test
out
jge
inc
cmpsl
adc
mov
add
mov
loopne
dec
test
iret
or
xor
in
pusha
push
shll
out
push
pop
in
aad
mov
inc
in
adc
mov
jle
scas
icebp
adc
pusha
mov
loopne
popa
cmc
xchg
loopne
or
rcl
pop
cs
popa
out
dec
mov
mov
mov
adc
pusha
pop
xchg
xor
aas
push
repnz
jb
lock
jecxz
insl
rcrb
mov
cli
rcll
mov
arpl
and
in
jp
xchg
mov
inc
mov
shlb
add
dec
xor
mov
aaa
cmp
inc
mov
cld
push
sbb
roll
cmp
ss
iret
push
popf
movsb
jno
jl
dec
lret
inc
fstp
add
popf
add
add
pushf
and
mov
xchg
cmp
or
mov
jns
iret
push
and
bound
loopne
aaa
pop
cwtl
adc
jbe
add
inc
sub
int
test
pop
loopne
and
mov
jb
pop
lock
add
fbld
add
adcb
rolb
cmpsl
pop
mov
dec
xchg
cltd
enter
mov
or
and
mov
and
add
test
add
dec
xchg
mov
pusha
push
cmovno
mov
stos
jmp
cmpsb
imul
stc
or
ss
adc
cli
insb
dec
imul
add
mov
xchg
xchg
xchg
xor
or
sbb
je
sbb
add
aad
dec
insb
in
sbb
and
mov
fisttpll
idivl
sbb
pop
cmpl
add
jl
pop
aaa
in
outsb
ret
and
fcomps
push
aam
imul
xorl
pop
lcall
mov
xor
push
fnsave
adc
mov
add
adc
mov
and
jae
pop
in
xchg
daa
imul
adc
dec
or
fisubl
pop
jge
cli
bound
jb
loopne
std
aas
xor
add
mov
cwtl
mov
loopne
mov
mov
sbb
jmp
pop
add
ret
test
jmp
xchg
loope
add
adc
and
in
scas
adc
adc
stos
repz
lods
push
mov
test
push
sti
mov
xor
rcrb
dec
add
sub
test
test
and
sbb
and
rcl
loope
xchg
adc
add
xor
add
ss
lcall
add
add
mov
or
iret
add
cmp
stos
out
push
hlt
pop
lcall
dec
xchg
and
or
fsubr
xor
jb
add
mov
inc
pop
pop
xchg
rcll
je
movsb
add
test
inc
imul
hlt
pop
or
aad
dec
lds
mov
sbb
sbb
lret
cmp
cld
dec
push
push
jl
mov
dec
test
test
inc
sub
leave
jae
cmp
cmp
test
stos
pop
aas
add
cmp
jne
xchg
cs
iret
inc
sarl
push
mov
cltd
pusha
or
sbb
icebp
push
pop
psrad
sbb
ret
jmp
or
lods
loop
lods
stc
movsb
loopne
addl
push
test
jb
cmp
xchg
mov
xor
cmp
mov
add
sub
pop
xchg
mov
pcmpgtb
les
jne
add
or
cwtl
outsl
push
movsl
in
test
lcall
sbb
pop
xlat
add
insl
les
xor
into
call
add
int3
push
pop
or
popl
sbb
push
pop
push
add
push
loope
popa
add
sbb
imul
mov
jae
xor
loopne
icebp
mov
fiaddl
add
daa
mov
add
andb
add
lcall
or
out
cld
jg
and
jno
test
mov
out
bound
mov
es
add
and
mov
ljmp
ja
fbld
pusha
dec
movsl
mov
mov
aad
mov
xor
in
fadds
cld
fdivrl
pop
add
and
or
out
jns
inc
leave
ja
sbb
mov
pop
dec
mov
mov
cmp
inc
mov
adcb
das
sbb
add
inc
mov
addb
adc
cmp
loopne
pop
das
mov
cli
ja,pt
add
jmp
or
mov
add
mov
inc
cld
ficomps
mov
add
push
cld
add
cmpsb
sbb
add
xchg
mov
sbb
jns
dec
cmp
add
xor
int3
jo
outsb
stos
inc
imull
push
add
sbb
add
inc
jns
jecxz
pop
and
adc
jge
mov
pop
add
dec
mov
push
cmc
xchg
add
std
loopne
xchg
push
xor
div
frstor
gs
cld
in
daa
sbb
mov
xchg
inc
lock
insl
jo
and
out
jns
lret
xchg
add
inc
inc
das
outsb
sar
cmp
xchg
loope
add
outsl
push
int
sub
loope
sbb
out
mov
lea
jl
add
jne
rcrb
popa
in
pushf
add
mov
sbb
les
and
cmp
push
fisubl
shll
sbb
pop
or
or
fucomp
dec
dec
sbb
xor
nop
mov
repnz
mov
dec
test
add
pop
mov
mov
sub
es
icebp
sbb
mov
cmpsl
addr16
gs
inc
pop
add
aas
mov
push
test
imul
or
imul
out
mov
and
push
outsb
lock
sahf
mov
jb
repnz
inc
mov
pop
add
sbb
mov
pop
dec
add
mov
xor
xor
loop
in
xchg
dec
cmp
or
xchg
adc
scas
out
aad
xchg
in
arpl
lahf
or
je
adc
mov
bound
sbb
cmc
mov
leave
pop
addr16
adc
inc
fstpt
aad
shll
lock
add
add
jae
imul
adc
repnz
sub
dec
add
jbe
cmc
out
out
jne
fstl
push
add
and
sbb
xorl
lret
inc
dec
push
and
sub
stos
add
inc
add
outsl
imul
ficoml
sarl
clc
add
dec
mov
inc
mov
lea
add
cwtl
adc
pusha
loope
flds
lods
cli
ror
repnz
and
add
int3
adc
cmp
jecxz
movsl
xchg
cltd
xchg
clc
aaa
lret
ret
add
int
sbb
cld
xor
xchg
xor
icebp
dec
cmp
std
incb
gs
xor
mov
sub
shrb
mov
add
pop
addr16
add
nop
xchg
or
outsb
cmp
push
sub
add
xor
mov
movsl
dec
pop
pop
mov
arpl
loopne
push
and
lahf
push
das
in
inc
rcrb
mov
push
mov
sbbl
and
jecxz
dec
mov
imul
jnp
add
pop
jo
insl
or
out
rcrl
lds
jbe
xor
shl
dec
jp
and
add
pop
mov
fbld
push
je
and
fstpl
test
mov
push
cmp
or
add
divb
cmp
out
or
mov
jnp
add
sub
sub
pop
add
fimull
mov
adc
mov
or
out
inc
loopnew
sub
mov
mov
mov
and
out
push
sar
popa
dec
add
push
and
ljmp
loope
jmp
pop
add
aas
push
add
push
lahf
mov
cmp
add
add
rcrb
dec
cli
add
mov
outsb
hlt
cmpsl
nop
mov
inc
lods
scas
xor
str
and
or
xor
cmpl
stos
xor
ja
aas
push
ljmp
add
mulb
lret
fstl
ljmp
lds
xor
inc
mov
lret
pop
sub
cs
rolb
outsb
ja
or
xor
mov
aam
mov
jmp
loop
lret
dec
in
cs
faddl
stos
xchg
js
mov
movsb
cmpsl
sub
and
lret
mov
add
and
add
adc
fcmovne
xor
pop
movsb
in
out
pusha
bt
mov
lcall
inc
fs
lds
lret
sahf
mov
sbb
xor
and
fidivs
cmp
push
mov
or
aaa
roll
pop
sbb
xchg
cld
int
and
or
and
test
dec
out
movsl
pop
out
push
add
jne
xor
mov
mov
and
cmp
push
and
rorb
mov
stos
xchg
adc
dec
ror
adc
mov
inc
mull
out
cmpb
jp
sbb
ljmp
dec
fcoml
insl
loopne
cli
jg
in
sbb
test
int
loope
test
add
mov
movsl
test
lods
jns
addl
sbb
cmp
loopne
ret
mov
mov
rcrb
mov
pushf
stos
add
dec
cld
in
jne
jecxz
push
call
test
adc
notl
imul
rcr
test
mov
sbb
inc
sub
push
call
cmp
mov
jge
or
leave
mov
iret
cld
hlt
add
mov
dec
or
out
clc
stos
add
mov
mov
lcall
jmp
and
sbbb
push
cmpsl
jnp
icebp
inc
in
adc
xor
test
lock
xor
test
jl
rorl
test
mov
sahf
int3
add
movsb
xchg
aad
add
or
mov
out
mov
loope
insb
inc
in
jle
add
push
mov
push
int
or
lret
lahf
jns
mov
scas
inc
sub
or
inc
test
cwtl
push
mov
push
adc
loopne
xor
cmp
ret
cs
hlt
xchg
insb
inc
and
or
mov
add
into
test
inc
lock
fucomip
cmp
xor
adcb
add
mov
popf
movsb
mov
push
in
repz
add
sub
jae
xchg
push
jnp
add
xor
mov
mov
nop
cmpsl
jecxz
pop
sub
mov
mov
das
mov
mov
xor
cwtl
pop
fstl
add
sahf
mov
push
dec
cmpsl
add
push
aaa
xlat
sahf
mov
dec
loop
js
dec
lea
sub
sub
cmp
adc
lods
adc
and
jp
ja
pop
mov
cmpsl
leave
adc
int3
dec
pop
xor
cld
push
sub
fwait
andl
loope
jbe
sub
lea
inc
call
xchg
mov
loopne
adc
dec
cmp
mov
mov
adc
and
xchg
cmp
int3
enter
cltd
sbb
cmp
mov
push
cmp
dec
sbb
in
xchg
cli
das
adc
inc
jbe
xor
push
or
fadds
mov
pushf
jp
popf
xlat
jecxz
ret
insb
sbb
dec
clc
mov
sbb
and
inc
mov
add
or
pop
jecxz
add
pop
ret
loopne
inc
insb
sbb
lret
sbb
lcall
mov
ret
and
call
das
xor
loopne
lds
rorb
fstps
push
fisttpll
mov
and
push
data16
xorl
inc
xchg
int
movb
or
call
sbb
xor
sub
in
sarl
mov
xchg
add
sub
or
push
sbb
das
adcb
jle
push
out
in
fwait
inc
out
popa
negl
ret
aaa
xchg
sahf
jne
add
mov
out
scas
pop
add
cmc
and
rcr
aaa
pop
add
into
xchg
mov
add
data16
mov
inc
xor
lcall
ret
adc
dec
xor
or
xor
sbb
push
jo
stos
cmc
push
or
push
daa
mov
mov
orb
aad
pop
add
mov
outsb
jp
jmp
movsb
bound
add
ret
mov
repnz
add
mov
sub
divb
fstl
inc
loop
test
popa
mov
pusha
clc
jl
or
sbb
add
insb
stos
pop
and
lea
inc
mov
pop
clc
pop
mov
push
iret
inc
clc
cmp
fldl
add
icebp
bound
in
adc
test
repz
sub
adc
sub
inc
arpl
push
lahf
mov
sbb
push
or
es
add
and
or
fisubs
add
mov
sub
sub
icebp
mov
fdivrl
pop
repnz
fs
lock
jns
add
jge
stos
pusha
cld
jo
dec
add
sbb
add
pusha
jmp
mov
xorl
inc
pop
xchg
xor
dec
adcl
cmpsl
scas
jl
and
xchg
idivb
cwtl
popf
xor
inc
aas
ror
jmp
test
pusha
inc
adc
cmp
add
dec
clc
loopne
js
mov
adc
pusha
mov
sub
add
adc
push
xor
push
je
jae
lock
rcrl
mov
dec
inc
pop
push
pop
add
or
mov
add
xor
clc
mov
rclb
sbb
rep
add
jb
sbb
insl
adc
mov
jecxz
enter
lret
cld
test
push
xor
cltd
push
or
pop
mov
add
xor
enter
jns
adc
jb
xchg
adc
inc
add
in
mov
pusha
psubd
jp
imul
or
int3
sti
lret
add
andb
jae
add
push
out
cwtl
rcl
out
test
xor
sbb
xchg
addr16
pop
icebp
stos
mov
add
jne
jb
lods
sub
in
hlt
mov
inc
sub
add
push
es
add
js
pop
sbb
add
or
add
int
test
push
push
nop
dec
das
or
dec
les
adcl
ja
pusha
bound
sbb
je
adc
iret
aam
mov
into
loopne
movsl
mov
loopne
push
cwtl
jecxz
outsl
ds
lea
repnz
push
ret
cmp
mov
mov
jge
scas
leave
mov
faddl
push
jnp
pop
push
dec
push
xchg
mov
or
insl
cmp
and
sarb
push
cmp
ret
les
inc
push
xor
dec
aas
jecxz
add
fdivrl
dec
shl
aam
or
xchg
movsb
out
push
inc
popa
js
repnz
pop
push
or
sahf
stos
cwtl
add
pop
lods
int3
stos
xchg
scas
mov
je
add
data16
lahf
lret
shl
mov
push
and
int3
or
adc
sbb
sar
cmp
fisttpl
push
arpl
adcl
cmp
sahf
loope
jne
fmuls
shlb
test
loop
jb
sti
add
in
pop
popf
inc
pusha
add
lcall
ret
mov
dec
dec
xor
out
add
sbb
ret
sbb
insb
dec
pop
mov
xor
add
insb
sub
test
fs
decb
lcall
adc
ret
inc
mov
mov
insl
test
add
pop
pop
and
add
jno
pushf
xchg
mov
add
and
and
movsb
cld
xchg
xchg
int
mov
rcll
inc
mov
jae
or
jne
add
test
mov
jg
add
mov
lret
pusha
scas
cmp
push
and
add
clc
pop
mov
pusha
cmp
into
stos
add
sub
pop
add
dec
int
icebp
cmp
and
testb
add
or
xchg
jg
cmc
stc
pusha
out
test
lea
fdivr
dec
std
iret
daa
add
pop
mov
adc
jnp
sahf
ja
aaa
repnz
dec
aas
sbb
cmpsl
and
or
out
sar
jo
adc
mov
bound
jl
push
sbb
aaa
add
enter
mov
mov
mov
mov
mov
addb
cmp
std
mov
push
add
add
ja
imul
js
sub
out
mov
jae
push
or
add
inc
cs
enter
add
ljmp
sarl
lods
add
insb
add
icebp
or
addl
pop
addl
adc
or
loope
lea
sbb
test
xchg
fs
push
adc
jno
push
das
adc
outsl
add
sbb
xchg
icebp
jae
jmp
ret
and
sti
hlt
lock
push
not
fiadds
movlps
call
sbb
and
rclb
roll
add
mov
and
bound
pop
xchg
sbb
and
clc
or
sub
stc
lret
jnp
mov
repz
popf
push
adc
sti
loopne
adc
xchg
stos
in
add
push
mov
add
lret
imul
in
add
stc
xor
mov
dec
icebp
shl
stos
adc
movaps
xchg
aaa
and
adc
add
or
add
rclb
mov
in
imul
ljmp
iret
push
mov
je
and
xor
xlat
adc
jns
mov
xor
jge
push
push
push
aas
pop
sbb
cmc
ret
loope
in
jge
adc
cmpsb
mov
ret
or
cmpsl
sbb
stos
sbbl
dec
dec
push
outsb
clc
rcl
test
add
dec
pop
adc
or
mov
std
scas
adc
ds
orl
in
jns
xchg
stos
push
add
insl
icebp
adc
aas
or
loopne
adc
and
mov
fimull
hlt
mov
pop
testb
lret
jecxz
mov
fnstsw
stos
add
ja
out
dec
add
add
lahf
xor
daa
enter
or
add
fcomps
add
ret
pusha
out
insl
les
xchg
ljmp
add
movsb
cmpsl
imul
out
pop
scas
stc
add
xchg
cmc
jb
in
sarb
orb
add
fs
xchg
mov
adc
dec
adc
cld
imul
shl
xchg
and
push
pop
mov
jg
add
or
in
inc
lcall
push
push
inc
add
fists
addb
popf
shlb
pop
mov
cld
add
aas
push
es
xor
or
inc
mov
cld
dec
cmp
cli
xchg
pusha
pop
repz
add
add
cs
lahf
add
or
cmp
xlat
add
push
test
xor
jmp
int3
inc
inc
mov
xchg
add
nop
push
xlat
fstl
push
outsb
xchg
cmp
add
cmp
push
adc
sub
lahf
add
ja
mov
add
lret
mov
lea
adc
mov
mov
add
cmp
sub
xor
ss
stc
xchg
cmc
push
adc
push
push
pop
mov
pop
std
and
fstcw
mov
xchg
into
scas
fcomps
adc
inc
dec
pop
nop
jae
popf
ret
mov
data16
sbb
cmp
and
sbb
arpl
adc
mov
popf
pop
and
mov
sub
fucomip
pop
inc
loop
sbb
ljmp
jl
fdivr
fbld
dec
add
jmp
orb
lret
popl
divb
mov
add
shll
xlat
ds
add
ja,pn
pop
lcall
inc
add
das
and
push
sbb
cmp
mov
cmp
add
dec
les
sub
dec
or
jno
loope
ja
mov
sti
xchg
or
sarl
add
ret
out
sub
ljmp
add
lahf
pop
stos
cli
mov
shlb
ret
shll
add
mov
test
or
cmp
pop
inc
out
fsubs
aad
mov
pop
and
arpl
in
mov
pop
std
lds
push
ds
inc
and
xlat
jg
xchg
cmpsl
imul
sbb
inc
add
jecxz
sti
test
or
xlat
leave
fstl
sbb
cli
pop
jecxz
pop
adc
nop
into
daa
or
inc
movsb
adc
adc
push
xchg
bound
clc
loopne
adc
cmp
sahf
xor
or
add
xor
std
and
inc
or
xchg
pop
mov
cmpsb
pushf
and
nop
in
adc
jge
popf
arpl
cld
subb
mov
jae
push
add
dec
inc
push
sbb
sbb
test
add
xor
sar
lret
dec
in
mov
mov
scas
sbb
daa
add
mov
jl
sbb
ljmp
mov
pop
push
sahf
fidivs
mov
orl
out
loop
mov
adc
pop
push
cli
repnz
mov
mov
ss
dec
add
sub
mov
loope
das
insb
in
adc
xor
std
push
fldcw
fst
inc
push
rcr
cmc
loopne
adc
cltd
sub
rclb
or
scas
inc
insb
pop
sub
ret
xchg
jge
dec
inc
subb
testl
dec
jno
sub
subl
leave
stos
daa
mov
or
outsl
add
push
repnz
xor
pusha
shl
push
mov
loope
sbb
loopne
xor
dec
add
repnz
in
mov
jbe
cs
sub
arpl
jg
or
dec
mov
mov
push
pusha
cmpsl
arpl
loop
test
mov
add
inc
movsl
repz
mov
aaa
pop
lea
loopne
cltd
add
mov
cmc
lds
movsb
xchg
sbb
mov
std
orb
cmp
das
outsb
incb
cli
lods
mov
data16
push
cmpb
mov
lret
add
fst
pusha
push
or
push
push
sbb
imul
fcmovnbe
jmp
sbb
cmp
js
in
push
push
pop
lods
and
sub
mov
pusha
mov
outsb
sbb
loope
add
cltd
pushf
loopne
stc
sbb
roll
xor
adc
or
sahf
jl
clc
out
push
cs
ljmp
popl
mov
jg
cmp
cltd
adc
jns
or
jmp
push
cli
jbe
fwait
adc
pop
jae
or
adc
inc
jnp
cmp
sbb
adc
dec
add
xor
int
negl
add
mov
rolb
sahf
sub
scas
adc
or
popa
ja
stos
sub
pop
pushl
addr16
outsb
out
add
fld
in
test
dec
fiadds
ret
and
lea
add
data16
jb
cs
add
mov
push
shlb
or
sbb
pusha
inc
ja
jne
int
add
jge
or
arpl
mov
add
pop
movsb
adc
and
add
add
add
dec
mov
add
mov
ret
sbb
dec
push
outsb
jbe
add
or
add
pop
mov
pop
mov
or
inc
push
rorl
mov
jmp
idivl
jmp
mov
adc
mov
push
add
pusha
pop
jno
xor
xchg
lods
add
add
out
push
xor
lods
add
jmp
push
pop
cld
jecxz
inc
pop
mov
roll
lahf
mov
aas
sahf
loopne
push
std
in
sbb
dec
and
add
mov
or
add
lcall
add
addr16
fwait
pop
cli
mov
mov
or
add
adc
in
flds
int
pop
fildl
dec
into
mov
and
mov
in
sbb
add
jb
xlat
and
or
add
add
add
jae
push
add
sti
stc
sbb
test
jo
inc
and
fbld
pop
mov
and
push
dec
pop
cli
in
add
xlat
sub
orb
add
or
jmp
add
in
and
dec
adc
push
mov
mov
hlt
aad
daa
js
lret
das
jo
push
mov
dec
add
filds
fcoms
sbb
dec
sbb
add
scas
mov
insl
mul
rorl
scas
rcrl
mov
iret
movsb
insb
mov
add
xor
sbb
in
jle
fwait
add
pop
inc
cmp
ds
loopne
aaa
repz
inc
adc
leave
mov
sub
test
xorb
lods
adc
or
popl
adc
test
mov
push
xor
jmp
inc
add
xchg
push
xchg
add
repz
sub
mov
mov
push
and
fnstcw
cmpsl
sbb
or
bound
add
fdivr
lret
mov
jns
das
adc
repz
outsb
add
inc
out
in
pushf
enter
popa
stos
icebp
cmp
add
add
out
mov
je
pop
pop
sti
mov
push
mov
mov
lcall
and
sub
xlat
add
mov
iret
mov
or
xchg
mov
fldt
jp
xchg
pop
and
cmp
test
cmp
leave
dec
push
adc
mov
cld
sti
jno
lret
xorl
xchg
push
lods
jg
xor
loope
arpl
loope,pn
xor
sub
push
mov
inc
inc
add
fwait
add
dec
clc
mov
fs
adc
aad
sub
je
lods
jecxz
fmuls
cltd
in
out
ljmp
cmp
add
lds
pop
lods
mov
push
filds
sub
add
addr16
or
pusha
push
icebp
lock
jne
or
adc
ret
leave
ret
mov
jecxz
idivb
mov
hlt
inc
outsl
mov
sub
jnp
cmc
mov
rcrl
and
loope
hlt
loop
out
xchg
push
pop
ret
scas
int3
mov
xchg
sbb
mov
and
test
add
rcrl
bound
push
push
adc
notb
jae
dec
es
cld
hlt
sbbb
jle
push
xor
iret
clc
sahf
lods
mov
js
pop
sub
mov
aas
add
pop
jns
adc
xchg
push
cmp
cwtl
jb
inc
xor
cmp
cmpsl
mov
sbbb
pop
or
lods
ds
loopne
clc
sub
adc
jns
testb
test
add
add
je
dec
push
lods
rcrl
in
jnp
in
mov
dec
xchg
add
cmp
add
jbe
test
xchg
add
adcl
adc
sub
fs
mov
add
or
loope
into
lock
mov
sbb
push
mov
mov
xor
test
and
dec
mov
out
and
add
scas
pushf
movsb
mov
lods
mov
out
push
sub
ret
insb
push
add
mov
outsb
xchg
insl
jmp
shlb
std
dec
push
popf
or
cs
fdivs
and
mov
or
add
or
xchg
sbb
xchg
add
rclb
mov
cli
add
mov
out
js
es
ljmp
rcl
arpl
or
imul
cmp
pop
sbb
loope
stc
xchg
repnz
call
test
inc
cli
mov
cld
movsb
or
imul
xor
sahf
adc
negl
dec
loopnew
je
cmp
std
enter
cmc
call
jge
and
xchg
movsb
lahf
xor
mov
ja
add
pusha
inc
mov
sarb
jg
mov
mov
jns
enter
bound
fisubl
lock
imul
in
pop
mov
and
je
add
loopne
xchg
xchg
pop
fidivrl
xor
cmp
mov
js
test
inc
mov
sub
aas
sbb
cmp
arpl
inc
jg
xor
sub
jno
and
neg
add
pop
push
int
in
pushf
cld
xchg
cmpsl
popf
das
adc
fldcw
pop
sub
inc
sub
mov
dec
and
aas
lods
add
outsb
add
pop
jle
ret
call
mov
xchg
bound
push
imulb
add
je
or
inc
xchg
repnz
out
sbb
mov
pusha
insl
sbb
pusha
dec
xchg
adc
call
mov
jns
push
scas
out
push
imul
push
push
inc
pusha
pusha
ret
pop
imul
add
push
inc
outsl
jne
shlb
dec
xor
inc
inc
lds
push
sbb
ret
lock
gs
and
sub
add
xchg
sbb
mov
out
ljmp
in
jge
pop
movsl
sub
mov
fisttpll
sbb
lcall
add
or
je
cmp
inc
ss
xchg
lret
nop
cld
fisubs
bound
inc
arpl
mov
mov
imul
mov
out
inc
stc
xor
add
gs
cld
pop
loope
cs
std
sbb
xor
imul
mov
dec
int
add
nop
push
dec
add
adc
enter
cmp
xchg
dec
pop
call
mov
xchg
push
add
iret
test
cld
jle
fldcw
icebp
mov
add
in
nop
mov
inc
dec
test
inc
leave
add
cmp
pop
lcall
or
pushf
xlat
adc
add
pop
push
test
adc
add
ret
mov
add
bound
imul
mov
subl
ret
mov
jb
or
rolb
test
sub
fimuls
stc
adc
inc
cmp
pushf
mov
pop
add
int3
scas
mov
faddl
lret
adc
add
sarl
mov
cmc
adc
or
jae
add
call
mov
add
xchg
repz
add
or
adc
fwait
add
int
pop
cmp
xchg
or
bound
add
sahf
push
stos
cltd
sbb
in
dec
gs
std
or
add
loop
bound
and
add
je
xlat
dec
and
rolb
add
push
aad
jle
mov
dec
rclb
add
sbb
loopne
push
push
jle
adc
mov
adc
jmp
outsl
pop
add
ja
pop
lahf
mov
loopne
push
add
les
mov
movl
js
jle
inc
cmp
inc
sub
cli
add
adc
or
xor
jecxz,pn
push
jecxz
repnz
sbb
push
mov
in
data16
jmp
sbb
add
ljmp
inc
xor
repnz
stos
bound
mov
cmc
cwtl
aaa
add
cs
out
sub
les
aad
enter
pop
aas
pop
jecxz
xor
sbb
in
jne
add
sbbl
add
scas
fistpll
add
scas
ret
loop
int
cwtl
add
xchg
out
sbb
or
rol
leave
jecxz
shrb
fcomps
dec
outsl
pushf
pop
add
pop
in
shl
add
sbb
or
cmp
adc
jb
iret
cwtl
inc
loopne
rcrl
test
push
bound
push
bndldx
push
bound
js
out
insb
pop
jb
pop
add
rcll
scas
fwait
shll
add
inc
lcall
mull
push
jle
icebp
mov
roll
push
add
xor
loopne
and
enter
push
fwait
rcl
push
or
mov
adc
adc
sbb
and
inc
fistpll
lahf
in
pushf
js
stc
adc
or
cmp
or
jb
or
cs
xor
mov
imull
and
adc
sahf
scas
pop
add
ds
mov
add
add
jge
dec
add
inc
jl
test
pop
mov
mov
add
push
enter
lret
jp
xlat
jnp
xor
out
add
mov
push
add
push
fdivs
cmc
cmp
test
adc
and
cld
adc
addr16
mov
dec
inc
jno
lcall
test
xchg
jns
add
xchg
fsts
xorl
insl
dec
inc
pusha
stos
mov
sub
insb
jno
adc
movsb
ja
xor
sti
add
test
or
stc
out
adc
pop
int
mov
mov
push
and
pushf
rcll
mov
sub
fmulp
mov
rolb
push
arpl
mov
cmp
inc
push
das
fidivrs
cmpsl
adc
addr16
sbb
rcll
sti
xor
or
rcrl
jmp
mov
sub
orl
outsl
dec
adc
ljmp
or
iret
and
mov
dec
lret
add
jecxz
stos
arpl
push
pushf
fsubl
fldl
xchg
cmp
cmpsb
pusha
mov
mov
jnp
pop
cs
sbb
jmp
insb
add
popa
add
push
lret
iret
pop
adc
push
das
cld
clc
add
pop
push
lret
sahf
repz
mov
push
loop
stos
int
cpuid
mov
jnp
adc
add
mov
dec
cmpsl
fidivrs
lods
or
mov
cmp
sahf
push
hlt
or
sub
repnz
ret
jne
mov
shrl
adc
sbb
pusha
jns
and
rcrb
loopne
inc
add
sbb
cmpl
pop
sub
push
jle
pushf
or
push
jns
aas
cmpb
stos
out
push
add
push
aaa
out
bound
movsl
into
sbb
jbe
adc
mov
mov
pop
jecxz
inc
lcall
or
sub
incl
add
mov
jle
fisttpl
icebp
invlpg
outsb
add
xor
add
aaa
bound
sbb
popl
xchg
dec
jle
into
loopne
and
test
pop
add
mov
and
cltd
sar
mov
jnp
add
and
pop
lcall
in
mov
mov
dec
and
roll
xor
add
mov
pop
clc
add
mov
lahf
leave
or
and
addb
sbb
jb
cmp
popa
int3
daa
sbb
sti
mov
mov
xor
out
scas
inc
cmpsb
mov
addr16
adc
dec
push
xchg
stc
movsl
mov
mov
jno
arpl
or
xor
add
xor
fisubs
inc
in
jl
outsb
add
ljmp
insl
icebp
fildl
sbb
jle
mov
adc
or
cmpl
in
jmp
cs
push
push
popa
mov
pop
jge
and
push
xchg
push
push
pop
pop
xlat
cmc
or
fisubs
bound
sbb
sbb
std
add
js
pusha
movsl
or
in
cmp
add
sub
add
xchg
xchg
and
mov
lds
mov
pop
and
inc
or
inc
jg
add
and
fstpt
aas
inc
inc
pop
mov
rclb
jl
out
daa
jmp
ja
loopne
bnd
stc
push
lcall
add
outsb
push
rol
inc
cmp
std
and
cwtl
pusha
pop
mov
negb
in
rcll
mov
xor
adc
mov
mov
sbb
sub
lahf
mov
add
push
cmc
pop
dec
mov
sub
xchg
dec
push
roll
lods
dec
lcall
mov
lea
out
sbb
daa
push
lock
cwtl
shlb
and
sbb
inc
and
pop
lock
mov
jbe
xchg
mov
fwait
pop
sbb
je
movb
sbb
outsb
sub
jecxz
bound
imul
add
ss
scas
aam
jg
dec
data16
sbb
clc
inc
pop
sbb
cmpsl
xchg
add
push
push
mov
inc
dec
cmp
mov
imul
mov
stos
stc
popf
add
adc
pop
add
cmp
mov
cltd
push
add
sub
sbb
fisubs
std
inc
add
in
mov
push
xor
cwtl
int
xor
rcll
add
test
sbb
std
pop
test
negl
pop
cmc
or
lret
data16
jb
andl
pop
adc
add
dec
arpl
add
mov
ret
mov
scas
pop
jne
int3
and
jl
xchg
andl
push
mov
cmp
jge
notb
loopne
push
hlt
jb
cmp
leave
cwtl
cmp
movsl
lds
cmp
push
adc
int
mov
adc
sbb
movsl
test
cwtl
sub
jo
mov
scas
fiaddl
add
sub
xor
adc
xor
jne
ret
push
add
call
aas
mov
pushf
mov
mov
xchg
jp
and
xchg
and
jnp
fcoml
mov
jg
lods
jle
add
insb
pusha
pusha
inc
mov
test
pusha
mov
adc
icebp
adc
loopne
sbb
fwait
negb
popf
and
add
pop
xor
insl
rclb
int3
xchg
popl
inc
xor
call
dec
push
push
xor
xorl
cmp
lret
fcomps
out
cld
inc
add
imul
push
add
cmp
in
add
ljmp
cmp
fldt
data16
pop
stc
js
jbe
cltd
jecxz
cld
cwtl
adc
call
and
addr16
mov
fbstp
dec
push
cs
xor
bound
inc
test
sub
sbb
add
jbe
push
push
cmp
pop
lock
out
or
rcrb
pushf
push
pop
arpl
das
loope
rcrl
loopne,pt
addl
adc
test
into
jl
mov
or
inc
dec
or
filds
add
divps
inc
loopne
out
dec
and
in
pop
sarl
testb
enter
mov
and
adc
int
fwait
push
mov
pusha
add
jg
jmp
xor
insb
push
std
add
inc
pop
lods
sbb
cmpsl
push
popa
in
add
dec
add
enter
jg
adc
pop
pop
stc
gs
add
jns
stos
dec
lahf
je
add
cwtl
mov
enter
jbe
fwait
ds
loopne
aaa
scas
pop
and
fiadds
shrb
mov
adc
push
rcll
dec
add
push
dec
cmp
stos
fmulp
aad
test
push
jle
jb
pusha
add
or
push
add
sbb
mov
fisubs
int3
js
push
inc
andl
cmp
inc
and
ret
push
xchg
add
inc
lahf
mov
fsubs
push
ret
call
sbbl
sbb
cmp
iret
sub
and
jbe
in
push
fadd
lcall
adc
mov
add
jne
push
rol
push
inc
jge
add
repz
lds
jns
sub
lods
icebp
into
lea
or
rcl
or
xchg
add
sub
roll
scas
popf
mov
adc
add
dec
push
adc
add
lahf
mov
fiaddl
mov
or
cmpsb
mov
ja
xor
mov
loopne
loop
cmc
sub
push
pop
and
sbb
sbb
ss
push
ljmp
lcall
add
leave
jno
addr16
push
imul
ficomps
in
inc
xchg
add
insb
and
or
icebp
pushf
xlat
xor
jl
mov
cmp
loopne
and
sahf
add
and
add
jecxz
push
mov
rclb
mov
clc
push
dec
jae
push
imul
jb
cmp
leave
sub
or
stos
and
sub
xchg
iret
neg
outsl
insb
ljmp
sar
pop
sahf
cld
mov
addb
and
dec
cmp
stc
mov
or
movsb
popf
jno
sub
sbb
add
jb
shl
cmp
sub
cmpb
mov
pop
xchg
cli
adc
jns
push
push
pop
mov
sub
cld
testb
pop
mov
nop
js
ds
out
sbb
incb
jno
je
mov
add
or
jp
aad
mov
bound
adc
pop
add
leave
jp
pop
and
mov
ret
ds
push
pop
mov
adc
movsl
sbb
add
push
jecxz
stc
and
inc
or
jnp
mov
arpl
pop
sbb
sarl
adc
xchg
imul
xlat
add
add
or
dec
add
pop
jle
pop
push
das
loop
lds
inc
push
cmc
push
shr
mov
loopne
lea
mov
mov
mov
cmp
iret
push
and
sahf
icebp
adc
iret
and
int3
lock
cmpl
add
out
ret
xor
mov
xchg
or
and
jecxz
pop
rclb
or
int
movhps
filds
mov
pusha
loop
xor
cltd
mov
add
into
pop
sbb
ret
add
and
push
jns
and
xchg
dec
push
mov
sbb
rorl
pop
mov
add
inc
pop
call
inc
or
ret
mov
push
mov
or
add
loope
cmc
add
pop
xor
push
xchg
mov
jp
bound
and
imul
xlat
jecxz
or
pop
fwait
lods
pushf
xchg
rolb
sbb
pop
mov
pop
out
sub
add
jecxz
inc
cmp
pop
imul
push
scas
pop
push
fsts
subps
inc
loop
cmc
add
adc
push
aad
sbb
aas
and
cli
cmp
xor
adc
popa
lods
sub
xor
lea
shr
jbe
push
sub
testl
push
xchg
add
and
xor
lret
xor
fmuls
xlat
push
sbb
dec
push
add
xchg
cmpsl
add
nop
loopne
add
adc
add
ficoms
and
xchg
das
lds
sub
add
lcall
jne
dec
and
xor
clc
les
adcb
test
sub
pushf
stos
sub
jne
xor
and
ds
adc
mov
add
cmp
jno
rorb
loope
test
fucom
push
data16
sbb
mov
mov
add
jg
loopne
push
div
jb
test
add
call
shl
pusha
lret
and
add
das
mov
mov
outsl
loopne
icebp
movsb
arpl
push
dec
xlat
mov
dec
mov
out
mov
jmp
xor
sarl
push
test
lret
mov
ret
nop
cmc
add
cmp
notl
hlt
outsb
out
adc
int3
mov
push
push
shll
call
outsl
in
scas
mov
rolb
sub
pop
sbb
out
popf
add
cmpsl
mov
sahf
repz
add
or
loopne
outsl
push
repnz
pop
stos
loopne
sbb
xchg
cmc
popl
or
add
mov
aaa
add
adc
pusha
cmp
rclb
mov
add
lret
nop
xchg
das
stc
add
sub
lock
jbe
outsl
inc
xchg
std
sub
sahf
inc
jl
sbb
mov
dec
pusha
sbb
inc
movsl
mov
add
fincstp
test
push
icebp
int
sub
sbbb
jle
sbb
add
popa
jge
add
ja
lahf
pusha
mov
dec
loop
into
xor
fwait
add
ss
int
adc
loopne
xchg
outsl
sti
mov
je
cli
ss
mov
push
add
inc
or
add
test
insl
lock
add
sbbl
adc
outsb
loope
das
and
pop
inc
adc
jecxz
aam
xor
enter
add
addb
jns
fnstenv
xor
add
sahf
jle
das
and
ret
pop
add
xchg
jecxz
repnz
sbb
mov
add
in
jbe,pn
xor
add
dec
xlat
push
and
rcrl
add
mov
lret
out
shl
mov
add
adc
mov
xlat
rcrl
dec
lret
xor
sbb
repnz
test
fldt
ss
insl
cmpsl
push
mov
dec
xchg
add
in
daa
imul
nop
jmp
in
xlat
fsubr
inc
add
stc
pop
pop
lods
out
push
testl
fcmovne
mov
shr
lret
push
lock
fs
add
les
add
mov
imul
data16
add
jo
repz
fimull
adc
push
pop
pop
cld
add
popf
sbb
ret
and
cltd
pop
add
lret
push
xor
cmp
push
mov
je
loopne
push
jge
pop
push
dec
mov
gs
push
add
adc
cmp
xchg
pop
jb
nop
sbb
stos
loopne
sarb
orb
jl
cmp
jecxz
and
lahf
dec
inc
add
mov
popf
out
push
arpl
mov
xchg
sbbb
push
dec
sub
lret
js
rep
dec
and
cmove
sbb
add
lds
mov
add
jbe
aad
sub
negl
jns
dec
add
or
cwtl
jnp
push
add
lea
add
push
xor
sbb
xchg
add
addr16
adc
setb
test
sti
out
imul
aaa
add
pop
ret
sub
cmp
and
mov
cmp
pop
loope
lods
sbb
sbb
jge
mov
xchg
add
and
mov
arpl
adc
add
cmp
and
cmpl
dec
add
mov
lods
add
fucom
cltd
fsubl
add
lret
test
add
sahf
pop
nop
jnp
in
or
mov
pop
mov
push
aam
add
inc
ret
cmpsb
loopne
push
popfw
lds
inc
cmp
dec
add
pop
icebp
cmpsl
pop
fiaddl
jle
ficomps
popf
dec
add
divl
sub
mov
pop
jb
popf
cmp
and
aaa
push
and
out
pop
stc
loopne
dec
sbb
clc
dec
jl
mov
shll
aam
scas
outsl
sbb
data16
clc
test
pop
or
loopne
movsb
inc
inc
adc
push
aaa
pop
popf
mov
or
inc
mov
or
vpmovzxbw
jmp
lods
mov
push
add
movsl
xor
stos
std
loop
sti
adc
test
in
cmpsl
add
insl
bnd
fcomps
iret
int3
add
lods
pop
aas
outsb
xchg
mov
add
jbe
mov
sbb
testl
sbbl
das
faddl
adc
cmpsb
pushaw
dec
xchg
repnz
out
setnp
and
mov
sbb
icebp
add
arpl
add
out
push
rorb
inc
loop
push
sub
jb
and
mov
aaa
shll
pusha
aas
and
mov
push
and
incl
sub
lds
add
xchg
add
push
dec
scas
or
or
lret
xchg
mov
inc
push
repz
pop
pop
inc
or
add
sub
adc
out
fs
xchg
sbb
ljmp
idivb
and
xor
add
shlb
add
rclb
jge
je
out
jae
mov
adc
and
add
fmull
mov
movsl
out
jno
jne
ret
testb
sbb
pusha
or
movsl
mov
lock
fisttps
xor
add
mov
inc
lret
leave
sub
jecxz
pop
scas
shlb
aaa
hlt
push
jmp
and
fwait
movsb
inc
addr16
cmp
dec
daa
mov
sarl
cli
daa
adc
mov
in
scas
dec
pop
loope
test
jmp
xor
fwait
mov
loope
iret
in
sbb
push
test
clc
add
jle
scas
cwtl
cmpsb
mov
sbb
inc
sbb
add
pop
dec
stos
in
xor
or
aas
into
test
xchg
out
mov
add
data16
or
test
out
in
scas
stc
add
je
leave
loope
jne
shll
xor
push
outsl
std
xor
jae
clc
mov
xchg
or
dec
lods
out
test
xor
sbb
out
add
pop
stos
inc
push
test
push
or
add
fldl
pop
cmpsb
shll
mov
out
outsb
add
repz
popf
pop
ret
aam
inc
and
fldcw
xor
mov
testb
inc
sub
std
dec
ljmp
add
lcall
rclb
adc
mov
push
mov
dec
add
movsb
popf
cmp
sub
test
daa
adc
fs
add
mov
mov
jmp
cmc
movsl
outsl
sbbl
inc
push
fdivs
dec
shrl
and
add
mov
and
mov
xlat
pop
cmpsl
jg
fsubl
fcomp
adc
sub
pop
sub
add
das
push
addr16
xchg
xchg
adcb
lahf
jp
mov
adc
ja
mov
scas
cmpsl
lret
dec
add
fistpll
jg
daa
mov
adc
lret
add
aam
cmpsl
andl
pusha
pop
dec
mov
and
jg
int
aad
outsb
sub
rorl
stos
push
mov
pusha
mov
xor
int3
cwtl
mov
lods
pop
repz
lds
mov
push
adc
adc
or
loop
push
fcoms
jns
ss
xchg
sar
sbb
das
jae
or
repz
mov
mov
inc
mov
mov
loopne
cmc
xchg
cmpsl
stos
adc
cltd
xchg
pslld
and
arpl
cmpsb
or
or
call
loop
loope
push
int
ljmp
in
add
pop
add
xchg
mov
int
mov
inc
xchg
adc
notl
add
lods
test
pusha
inc
ret
or
popa
sbb
mov
add
movsl
ja
and
loopne
popl
push
mov
cltd
leave
or
add
add
push
fistl
mov
add
inc
mov
cld
and
pop
mov
leave
inc
add
arpl
xchg
adc
faddl
cmpsl
mov
les
cltd
dec
mov
daa
into
push
and
fninit
cmp
or
pop
sbb
jge
loope
nop
push
aas
jo
stos
dec
push
jbe
cmpsb
add
rcr
jl
sub
add
jg
test
push
sbb
jbe
cld
add
jge
or
jnp
and
lds
sbb
sbb
scas
or
jmp
add
test
and
idivb
aad
hlt
test
mov
out
sub
notb
cmpl
popl
sbb
push
out
and
bound
fiaddl
cmp
ljmp
mov
inc
fwait
loope
xlat
xor
xchg
lret
inc
popa
jns
push
enter
mov
test
add
cmp
insb
add
dec
movsl
sbb
mov
pop
sbb
jns
add
scas
mov
es
icebp
rclb
dec
add
pop
adc
aam
add
add
pop
loop
or
stc
add
push
pusha
fst
push
mov
je
mov
lret
adc
push
cmp
addl
mov
pop
mov
pushf
sahf
adc
loope
sub
cmp
push
dec
mov
stos
xchg
fldl
mov
cmpsb
cmp
push
add
bswap
xchg
stos
dec
aas
pop
xorl
push
push
sub
bndstx
xor
dec
jmp
les
jecxz
leave
loop
push
incb
call
pop
push
jnp
lahf
add
leave
mov
and
and
add
add
or
and
adc
push
scas
pusha
stos
repnz
cmpsb
adc
add
add
pushf
mov
jbe
pop
loope
or
adc
cmp
push
std
loopne
cmpsl
into
cmp
xchg
mov
or
jbe
mov
psllw
mov
inc
lcall
in
iret
sti
repz
xor
or
and
pusha
inc
mov
sbb
fs
dec
or
cs
in
adc
das
jle
filds
in
pop
enter
pop
js
je
add
ret
adc
aas
sbb
sub
jl
add
sarb
and
lret
jo
loopne
test
shrb
inc
ja
cmp
out
iret
pop
loopne
inc
jl
mov
jnp
in
add
outsb
sbb
push
dec
loopne
or
pusha
mov
xchg
mov
sbb
addl
fs
aaa
sbb
loopne
and
sub
add
fs
sub
mov
adc
xchg
test
mov
adc
popa
mov
mov
cmp
in
adc
jle
push
add
dec
add
data16
mov
sub
in
add
outsb
xor
add
test
or
setge
lods
aas
mov
adc
push
call
sub
mov
jmp
data16
adc
and
and
add
pop
ljmp
xor
lock
fstps
sub
lods
add
jae
sbb
sbb
add
aaa
inc
cmp
mov
scas
fmulp
add
fcoml
jl
decb
xchg
cmp
add
pop
clc
leave
popf
jns
pop
xchg
and
test
lea
or
imul
out
mov
popf
jmp
inc
mov
iret
or
in
and
push
cwtl
shrl
ja
xchg
mov
movl
pusha
push
adc
sbb
mov
loopne
sub
adc
lods
xor
dec
aad
jmp
addr16
xor
adc
adc
out
test
out
xor
lcall
and
lods
pop
out
sbb
mov
push
pop
xchg
or
lahf
mov
add
aaa
jg
xchg
and
je
sets
mov
les
add
sub
add
jg
stos
fst
mov
sub
test
jo
lods
shll
push
fiadds
pop
popf
or
aad
js
push
hlt
gs
add
mov
cmpsl
popa
leave
movsb
cltd
add
sub
and
dec
jns
loope
lods
cmp
add
call
lds
xchg
xor
popf
add
push
lea
test
scas
cli
xchg
rorl
and
dec
adc
fadd
fists
scas
push
xor
dec
outsb
mov
int
ret
jbe
mov
lods
mov
xchg
pushf
mov
jmp
test
mov
mov
lret
jmp
jbe
lahf
ret
add
fwait
or
fsubrl
add
jge
flds
imul
pop
cli
pop
das
add
xor
xchg
mov
xchg
bound
inc
or
scas
aaa
pop
add
dec
inc
sar
push
lret
outsb
pushf
adc
mov
mov
cmpsl
out
pop
mov
scas
lret
xor
pusha
mov
pop
stos
sub
adc
xchg
inc
add
cltd
repz
adc
add
je
mov
jg
rolb
mov
and
repz
je
or
ss
add
xlat
push
fiaddl
mov
mov
pop
add
arpl
aad
jb
xor
sbb
loope
lcall
xor
or
loop
mov
and
outsl
jne
add
jecxz
fistpll
cli
incl
loope
bound
ss
fsub
sub
jae
addr16
cmp
icebp
sahf
retw
push
jno
or
cmp
sub
outsl
out
adc
std
push
pop
adc
loopne
xchg
es
push
hlt
cmpsl
out
add
jnp
fs
pop
adc
mov
xchg
imul
pop
or
rol
or
mov
fists
mov
in
insb
addb
cmp
inc
xchg
ret
daa
sahf
fwait
loopne
pop
je
iret
push
popa
fstpl
inc
mov
fidivl
adc
mov
roll
lods
idivl
mov
insl
fdivrl
ljmp
in
push
add
dec
adc
and
movsl
lahf
mov
inc
pusha
test
jge
xor
sbbl
cmpsb
adc
movb
enter
int3
aas
mov
cmpsb
fstps
fcoml
inc
popa
cmp
push
fmuls
sbb
pop
je
add
sub
scas
jns
daa
jmp
push
call
inc
add
cmpsl
pop
das
sahf
inc
push
xor
shll
push
mov
cli
sub
inc
dec
jecxz
sub
dec
and
dec
testb
jge
cmpsb
cmc
xchg
add
bound
roll
insl
repnz
int3
mov
mov
lods
or
in
dec
mov
mul
and
fdivrl
rcrl
loop
leave
call
adc
fcomip
in
adc
call
lock
movsl
cmp
push
pop
fists
fnstsw
out
add
das
push
add
sub
xchg
push
add
add
clc
add
jle
mov
inc
and
int
cmpsl
sub
adc
add
movsb
imul
cmp
lods
or
xor
add
ja
sub
add
lods
mov
int3
dec
mov
jb
inc
xchg
jge
mov
dec
aam
and
fidivrs
mov
xchg
mov
dec
pop
loope
and
es
rcll
or
pop
inc
mov
add
scas
in
xchg
dec
xor
shrb
lahf
xchg
pavgw
add
addr16
add
xlat
sub
subl
fists
mov
inc
jge
mov
adc
rcll
cmp
aas
mov
add
in
cmp
adc
pop
fiaddl
mov
loopne
pop
mov
clc
pop
testb
and
mov
je
cwtl
pusha
xchg
loope
ljmp
mov
sbb
add
shlb
jne
add
push
lods
pop
icebp
mov
xlat
pop
mov
pop
mov
out
lods
loopne
sbb
push
push
stc
pop
fiadds
aam
scas
sub
mov
xlat
jmp
xchg
mov
jno
ss
sbb
dec
loopne
testl
sub
mov
pop
adc
dec
icebp
fcmovnb
cs
pop
jmp
movsb
ljmp
push
pop
adc
jg
cltd
fwait
jae
inc
in
leave
push
int3
repnz
ljmp
lds
cli
sbb
add
sbb
cmp
aaa
fdivrs
mov
pop
sbb
add
fwait
sub
push
cs
xor
push
mov
icebp
push
fcmove
push
pop
std
imul
dec
scas
mov
loopne
mov
add
dec
adc
ficompl
mov
adc
ljmp
ja
jnp
sbb
into
inc
loope
push
ret
add
cmp
inc
gs
fsubr
in
add
cmp
push
popf
das
and
inc
sub
pop
add
out
mov
push
cli
and
les
into
jmp
insb
jmp
jp
xchg
int
aaa
ljmp
push
mov
push
ret
dec
ficomps
arpl
popa
xchg
flds
sub
sub
add
push
mov
sub
dec
xorl
xor
push
push
add
nop
add
mov
cltd
and
lea
add
jns
mov
mov
lods
in
or
loope
mov
test
gs
sub
mov
add
lods
adc
mov
fidivrs
insl
or
insb
add
adc
jp
loopne
sub
mulps
mov
xchg
add
sub
dec
lahf
stc
mov
inc
and
cld
outsb
adc
movsl
mov
push
add
inc
mov
orl
es
leave
fsubs
jbe
mov
mov
add
mov
add
in
mov
mov
mov
xchg
sub
orl
shlb
in
sti
popf
pop
or
sarl
mov
pop
ds
pop
xchg
push
lret
adc
dec
inc
jne
and
dec
rcrl
loop
stos
jl
cld
push
sbb
dec
shll
int
test
scas
fistpl
rcrb
stc
add
mov
nop
dec
add
mov
mov
xchg
inc
push
and
fildll
pop
insl
dec
pushf
cmp
js
cwtl
pop
mov
xchg
jg
mov
pop
sub
add
pusha
es
push
outsb
lret
aaa
sub
pop
cmpsl
mov
adc
mov
sub
mov
lods
xor
popa
add
push
ss
cmp
fldenv
xchg
lret
jge
jbe
jmp
lds
int3
fiadds
push
xor
in
pop
std
ret
mov
xchg
movsb
pop
andl
add
mov
in
pusha
or
das
mov
jp
add
daa
xchg
adc
loopne
mov
or
pop
mov
add
jge
ds
jg
aaa
mov
add
out
push
dec
mov
sbb
xor
mov
scas
pusha
push
mov
repnz
jno
push
loope
cmp
lea
add
dec
insl
shl
jge
sbb
push
mov
inc
push
push
adc
enter
cld
cs
mov
repnz
add
xchg
jb
fsubs
out
xor
outsl
push
imul
inc
sbb
lea
dec
xlat
pop
dec
xor
sub
or
in
ret
adc
push
add
dec
pusha
jp
add
and
in
pop
cmp
jecxz
jmp
sub
jne
mov
popa
stos
insl
adcl
jo
test
mov
push
jae
fwait
push
test
push
dec
out
imul
add
out
adc
dec
imul
sahf
lret
cmp
test
jecxz
push
in
pop
inc
imul
sub
test
inc
icebp
xorb
aas
loop
jne
add
mov
rcrb
or
add
and
sub
in
xchg
jbe
je
dec
add
fcomi
int
repz
popa
add
adc
pop
gs
adc
mov
lods
add
xchg
popf
aad
int
je
inc
lahf
rcr
les
cltd
daa
jmp
add
int3
das
add
repz
in
cmpb
mov
push
lods
int
int3
arpl
add
pushf
cmp
jl
xchg
leave
fldl
mov
fldcw
daa
out
es
aas
out
rolb
sbb
pushf
mov
xchg
xchg
jle
adc
adc
iret
mov
push
pop
insl
test
xor
mov
push
add
inc
xlat
movsl
mov
cmp
dec
rcrl
push
js
add
push
shll
loopne
or
mov
pop
mov
add
dec
jge
popf
pop
loope
xor
sub
adc
add
incl
cmp
lcall
and
imul
sahf
je
push
adc
pusha
mov
sbb
into
andl
dec
aad
inc
shl
movsb
leave
add
or
jb
adc
je
xor
xchg
add
dec
cmp
add
fwait
addb
sti
mov
sub
jmp
mov
loopne
sub
jle
shll
into
sbb
gs
les
mov
jg
sbb
push
and
xor
add
jg
add
sub
in
outsb
push
inc
mov
mov
inc
lcall
imul
fucomp
add
pop
fs
add
mov
mov
fldl
mov
xor
add
repnz
pop
enter
test
nop
jl
es
xchg
rcll
das
and
pop
or
loope,pn
outsb
sbb
sarl
mov
imul
mov
add
shlb
loopne
fists
repz
push
adc
pop
popf
ljmp
popa
lret
sbb
icebp
pusha
mov
adc
sahf
into
add
push
popf
test
mov
out
sub
rclb
mov
xor
scas
mov
sahf
sub
add
movsl
lock
mov
loope
shrb
sub
sub
pop
dec
push
add
add
les
sti
mov
rcr
push
jne
add
adc
jo
sbb
and
ja
push
lcall
xchg
inc
mov
fistps
xor
aaa
push
aam
out
add
xor
cmp
add
inc
xchg
inc
imul
enter
mov
xchg
mov
js
pop
rorl
add
or
cli
add
xor
out
mov
add
movsl
scas
outsb
add
jmp
fistpll
lahf
mov
push
fsubl
outsl
roll
iret
add
lcall
fiadds
or
lret
dec
add
cli
fimull
xchg
add
inc
pusha
lods
in
insb
add
cmp
cmp
add
mov
out
int
jb
xlat
mov
dec
xchg
mov
fisttpl
ss
add
mov
add
inc
loopne
pop
aaa
and
or
jns
jbe
insl
int3
pusha
in
inc
loope
sub
iret
in
pop
mov
and
mov
scas
and
add
outsb
cmp
lahf
shl
add
scas
mov
insb
jecxz
call
inc
mov
pusha
adc
inc
loopne
aam
mov
data16
or
jge
cmp
ss
cli
or
add
mov
add
int
ds
mov
xor
shl
mov
sbb
and
and
fldt
loopne
fcompl
test
pop
arpl
sub
daa
fsub
das
movsl
adc
mov
add
fs
xchg
sub
sbb
inc
lret
into
push
add
dec
lods
loope
push
out
inc
inc
add
outsb
lods
inc
mov
cwtl
scas
inc
addr16
into
filds
dec
xchg
cmp
lea
cmp
and
xchg
add
pop
int3
repnz
add
xorl
xor
xchg
andb
xchg
mov
pop
sahf
cmp
loopne
cmp
jmp
push
iret
mov
add
xchg
addl
jecxz
imul
add
loopne
arpl
xchg
cs
mov
cmp
outsl
lock
add
clc
pusha
and
pop
sub
movsl
loopne
or
bound
add
ficompl
pusha
xor
cs
mov
and
lret
add
xchg
and
popa
sub
in
or
fwait
in
aaa
sbb
xor
add
pop
jae
pop
mov
jns
sbb
push
out
andl
adc
orl
jmp
sbb
dec
jns
add
push
jnp
subl
lea
add
andb
xchg
push
xlat
pop
lods
xchg
sbb
fildll
xchg
pop
in
sub
mov
scas
mov
out
out
sub
lahf
cwtl
insb
aas
loopne
fucomp
add
or
lods
mov
stos
imul
pusha
adc
pop
pop
add
iret
inc
inc
cwtl
movsl
add
mov
popa
jne
int
add
cld
jo
pop
jbe
inc
loopne
jg
push
add
fsubrs
in
rcrl
cmpsl
std
iret
adc
push
push
push
lods
jb
insl
sahf
jecxz
inc
lret
mov
jno
jle
fistpll
cmp
clc
jecxz
lock
jg
pop
loopne
fimuls
mov
inc
inc
in
mulb
add
mov
sub
repz
into
push
sub
xchg
sbb
add
pop
mov
filds
test
sbb
adc
adc
rcr
leave
mov
push
jp
add
das
jle
rep
mov
pop
pusha
icebp
lcall
out
pushf
mov
xor
js
jo
popf
mov
add
jmp
inc
or
xchg
add
sbb
adc
fistl
adc
adc
sbb
mov
adc
add
inc
aad
outsb
mov
hlt
add
imul
push
jns
adc
mov
sbb
mov
xlat
mov
int3
imul
sbb
movsl
es
fsubrl
push
xchg
add
mov
ds
xchg
sbb
or
fcmovne
pusha
andl
push
mov
adc
adc
dec
add
outsl
mov
loopne
pushf
add
sbb
lret
imul
ret
int
and
filds
jae
loop
or
xchg
mull
iret
fnsave
sbb
mov
fdiv
test
add
sub
pushf
outsl
loopne
or
pop
jno
inc
add
adc
dec
jbe
bound
cmp
je
sbb
xchg
cmp
mov
not
push
sub
xchg
xchg
jle
cltd
dec
xor
and
jb
pushf
inc
dec
lahf
fldl
cld
jmp
mov
dec
std
lods
add
sub
dec
add
jg
pop
xor
mov
mov
and
ds
xchg
arpl
push
cmp
sub
mov
inc
cli
inc
aad
into
pop
add
mov
sub
add
pop
cmp
cld
push
sbbl
popa
shl
add
mov
bound
add
fcoms
movsb
mov
add
clc
xchg
inc
xchg
test
add
push
cmp
jns
xchg
movsb
mov
add
sarl
cld
sub
add
incl
cltd
add
and
je
sub
xchg
pop
xchg
push
pop
fdivp
add
inc
jge
mov
pop
daa
loope
insb
mov
mov
loopne
in
lret
stc
add
iret
mov
les
mov
int
movsl
lods
aad
std
rdpmc
dec
xor
or
mov
rcr
or
and
cmpsl
outsl
aam
cld
sbb
push
xchg
lret
jns
scas
in
add
sbb
pop
add
sahf
push
mov
and
orl
pop
mov
ret
dec
outsl
inc
sbb
ret
add
aad
mov
or
add
cli
jl
jge
movl
roll
mov
enter
cmp
popa
cmp
add
mov
xchg
dec
push
icebp
inc
mov
shlb
ljmp
mov
loop
xchg
jbe
add
dec
hlt
cli
addr16
dec
add
adc
lds
inc
adc
mov
std
cwtl
rcrb
sahf
sub
add
bound
popa
push
ljmp
xlat
cmpsl
sbb
stc
push
in
add
insw
loopne
sti
add
pop
xor
flds
imul
mov
and
sbb
leave
sti
iret
mov
xchg
cmp
xor
inc
inc
stos
divl
xchg
stos
mov
dec
int
loopne
and
sbb
mov
mov
pop
cmp
dec
mov
add
push
sarl
add
push
cmc
outsl
add
incb
repz
sbb
add
mov
les
push
mov
repnz
adc
mov
add
jb
movsb
add
sbb
ds
xchg
mov
fcomps
xor
mov
add
outsl
in
xchg
int
push
and
dec
fmull
add
repnz
mov
add
add
or
loopne
or
cli
outsl
lea
scas
subb
inc
ret
ret
pusha
aam
call
sbb
adc
jmp
in
or
neg
add
arpl
pushl
jo
shrl
mov
addl
fildl
dec
shrb
dec
pushf
insb
push
push
xor
jno,pt
arpl
xchg
sub
jae
in
pushf
imul
jp
int3
push
add
pop
inc
mov
insb
and
jae
popf
or
mov
mov
lds
imul
pop
pusha
minps
jbe
add
pop
clc
out
rcr
add
lods
dec
test
sahf
into
adc
add
add
add
dec
sub
lahf
inc
pop
mov
xchg
cmp
cwtl
mov
cmp
mov
js
xor
push
subps
push
aad
in
or
addb
ljmp
add
lcall
xchg
sbb
iret
cmp
push
inc
icebp
xor
fildl
add
ljmp
popf
fdivp
sbb
loop
push
pop
add
add
and
lret
sbb
sbb
xor
cmpl
icebp
jecxz
sub
loopne
ljmp
or
in
jle
clc
add
ret
xchg
xchg
jmp
and
pop
popa
fldenv
inc
inc
cmp
mov
adc
add
mov
ficoml
leave
shll
rorl
bound
add
add
xchg
icebp
push
stos
lods
pop
add
mov
sbb
dec
ja
inc
xchg
fmuls
sub
jne
mov
pusha
sub
mov
add
jbe
fucomp
arpl
cmpsl
add
mov
add
lods
sbb
mov
and
popl
iret
ljmp
loopne
mov
pushf
cld
or
xchg
iret
rolb
hlt
lret
or
mov
jmp
lds
fcomps
loopne
cltd
loope
mov
arpl
sti
lea
xchg
aad
sbb
mov
add
cs
pop
push
cld
lds
hlt
add
pop
add
mov
dec
add
sub
add
xlat
shl
movb
hlt
into
mov
mov
cmp
add
int
ds
cmp
loope
lcall
mov
dec
pop
add
mov
push
and
aas
popa
add
cmp
pop
xchg
adc
jge
dec
imul
mov
sub
add
adc
add
imul
add
es
jmp
pop
xchg
pop
cmp
iret
lret
push
loopne
adc
xchg
inc
push
sbb
fstps
test
mov
sub
sbb
sarb
or
or
pop
push
outsb
dec
ja
adc
push
mov
sbb
in
adc
loope
sahf
dec
inc
outsb
mov
push
dec
add
sub
mov
jmp
ret
fiadds
adc
scas
sub
cwtl
xchg
xor
xor
clc
push
dec
mov
inc
pusha
call
lock
lret
ds
add
xor
rcrb
and
add
test
add
inc
sar
jecxz,pn
and
sbb
aas
or
cmpb
mov
and
imul
ret
or
push
and
cmp
jecxz
call
pop
add
adc
rolb
push
xor
lea
cmpsb
mov
into
fnstsw
push
fistpll
push
stc
mov
jecxz
add
mov
pop
add
aas
sbb
ss
add
inc
jne
and
in
sub
addb
or
mov
pop
sbb
add
mov
inc
fsubr
jg
iret
cld
add
mov
test
aas
adc
lea
cli
inc
mov
inc
add
inc
fnstcw
push
xor
add
dec
pop
mov
bnd
mov
loopne
enter
sub
cltd
aas
mov
imul
cmp
popf
fstpt
adc
mov
lret
sbb
push
or
fmuls
loope
xor
arpl
inc
mov
popf
xchg
fistpl
aad
add
subl
out
or
add
mov
std
sbb
sub
or
fiaddl
push
loop
or
mov
xor
sub
nop
cwtl
mov
loopne
xor
sub
imul
mov
cmp
sbbb
jmp
rorb
sbb
xchg
cs
add
cmp
lods
mov
cmpsb
add
and
push
add
pop
daa
jl
mov
jo
push
mov
pop
push
xchg
scas
jns
or
test
icebp
xchg
mov
jo
lock
mov
repnz
push
pop
sti
popa
daa
or
aas
lret
sub
movl
sub
pop
mov
lahf
dec
add
jo
adc
mov
jmp
outsb
jl
mov
loope
decl
xorl
sti
add
fsubl
pop
mov
mov
icebp
adc
fistpl
ret
cmc
ss
jb
add
sub
nop
lds
loope
jp
mov
es
stos
add
pop
test
mov
ja
je
nop
stos
xor
and
js
pushf
lret
pop
or
pop
movsb
pusha
addl
add
mov
or
jmp
push
add
aas
sahf
mov
cwtl
roll
lret
cmp
adc
sub
pop
cmpsl
xchg
add
rclb
inc
mov
dec
lods
sbb
mov
sahf
lret
push
stc
fdiv
add
xchg
pop
mov
dec
cwtl
inc
sbb
push
cld
rorb
testb
pusha
sub
sahf
test
sub
gs
cmp
adc
addr16
bound
enter
push
test
push
jge
pop
push
sbb
add
ret
loopne
add
out
or
xor
imul
out
fildl
add
mov
push
sub
test
inc
aad
call
mov
xor
jnp
jmp
outsb
add
xlat
arpl
cmc
and
sbb
add
ficompl
inc
in
test
cmp
scas
fsubs
xchg
sub
lahf
add
cltd
shlb
sub
lea
stos
xchg
insb
add
cmc
sbb
movsb
call
fcoml
loope
in
pop
pop
add
mov
sti
dec
loopne
sbb
push
hlt
int3
insb
loope
std
adc
jle
push
add
stos
into
lods
mov
mov
pop
dec
shll
test
xchg
sub
mov
addl
cmp
add
mov
loopne
xlat
scas
sahf
inc
mov
stc
jge
sahf
sub
cmp
push
or
or
mov
test
loop
ss
inc
mov
push
testb
mov
jp
adcb
xor
sub
ret
insl
out
xorb
add
in
jle
lods
cmp
sub
fdiv
xlat
cltd
jb
dec
xchg
inc
mov
add
sbb
xor
dec
neg
push
into
inc
sub
mov
dec
gs
jnp
stos
dec
add
lret
adc
jl
pop
fldcw
fsubp
in
mov
adc
dec
sub
mov
and
lahf
and
ds
mov
loopne
in
xor
popa
call
and
push
lcall
and
fsubl
jp
dec
jmp
push
bound
or
push
int3
adc
jecxz
or
jnp
dec
dec
pop
xor
jecxz
or
addb
addr16
push
jae
add
popa
xlat
cld
mov
mov
add
pop
lods
testb
pop
out
aas
call
add
outsl
lea
add
pop
movsl
xchg
loope
mov
pop
mov
repnz
roll
clc
jno
jbe
jne
loope
xlat
mov
mov
rclb
fiadds
das
cmpsb
into
inc
dec
ss
jns
mov
dec
push
push
sbb
lret
pop
fcoml
shlb
loopne
inc
and
leave
add
fcmovu
popl
insb
fildll
pop
loopne
imul
in
add
repz
addr16
add
es
xlat
or
sbb
mov
dec
rcrb
mov
pusha
jne
js
ljmp
push
sbb
mov
add
int
je
and
shrb
inc
iret
loope
push
jbe
inc
pusha
ret
or
adc
movsl
fcmovb
adc
dec
jge
popf
mov
out
ds
aas
je
and
rcl
loopne
cs
movsb
push
mov
inc
orl
inc
add
leave
xor
nop
dec
incb
loop
pop
mov
mov
dec
inc
addr16
js
mov
lcall
sub
mov
es
pushf
leave
pusha
mov
sub
pop
add
stc
lds
in
sahf
add
dec
push
xor
or
add
pop
mov
pushf
pop
and
or
ja
and
add
mov
out
or
xlat
dec
imul
jne
jmp
push
loope
sbb
push
pop
add
mov
fwait
add
dec
fcmovnbe
loopne
lret
stos
test
mov
hlt
add
movsb
push
mov
mov
fs
lret
add
movsl
pusha
fwait
mov
adc
jmp
in
or
add
sbb
ffree
add
and
fisttpll
jns
cltd
imul
rolb
pop
sbb
xlat
or
pop
xor
shlb
mov
xchg
or
stos
cs
addl
shr
mov
lock
push
ret
push
add
sub
or
and
nop
lock
std
in
sub
sbb
jle
enter
sub
or
add
popa
push
add
adc
cmp
mov
xchg
mov
loope
lock
xchg
lahf
push
cwtl
add
addb
and
sub
daa
cmpsl
sub
ljmp
xchg
sub
fwait
test
lods
adc
add
dec
xor
cltd
push
inc
pusha
lret
repz
sbb
mov
sbb
mov
movsb
inc
test
loope
mov
dec
jo
shll
xchg
pop
pop
in
sub
cmc
lcall
leave
popa
rclb
and
dec
shlb
add
adc
roll
data16
cmp
mov
jl
popl
ds
adc
add
jecxz
mov
lods
int
add
dec
lods
mov
js
jl
fsubs
cwtl
out
arpl
sub
jb
loope
ja
movsl
sbb
cmp
push
popl
mov
mov
mov
xor
sbbb
add
sbb
sub
add
cs
pushf
push
push
add
adc
add
adc
mov
fisttps
ret
cmp
pusha
cmp
inc
pop
mov
sbb
xchg
in
xchg
cmp
add
and
pop
sbbl
mov
jae
mov
xchg
lods
sbb
push
adc
add
js
ss
shrl
outsl
sbb
fstpl
mov
jno
mov
les
jne
popf
sub
or
push
fbstp
inc
rolb
in
cmpsb
push
xchg
pop
adc
xor
lea
nop
jle
scas
pop
sub
add
lahf
mov
sbb
cwtl
cmpsl
mov
in
adc
inc
roll
add
cmp
jp
mov
sbb
inc
add
jmpw
jmp
push
add
int
xor
loope
add
adc
out
dec
sub
pusha
out
notl
xchg
mov
pxor
dec
mov
cmpsl
cmp
std
sarb
xor
pop
roll
stos
in
cmc
mov
pop
js
lock
adc
push
cmpsl
add
mov
shlb
dec
and
testl
test
sbb
pop
jecxz
adc
xchg
add
jo
adc
ss
outsb
dec
adc
dec
mov
in
shr
cmp
in
sahf
insl
dec
bound
xchg
xchg
inc
mov
ljmp
fildl
les
sbb
fdivs
loopne
push
jnp
mov
xchg
hlt
cmc
inc
push
dec
mov
stc
push
addl
shlb
fwait
das
mov
ret
xchg
push
sahf
icebp
mov
fistpl
ljmp
in
sbb
jbe
nop
mov
add
lahf
xchg
push
sar
and
imul
or
sbb
insb
arpl
add
inc
or
popa
xchg
add
outsl
sti
inc
std
int3
mov
insb
test
cmp
xor
mov
testl
pusha
adc
comiss
out
sarl
sub
sbb
or
jns
jnp
movsb
or
add
js
adc
lods
add
jl
aam
out
mov
stos
adc
ss
ret
movl
sbb
mov
loop
mov
std
mov
jle
call
iret
adc
sbb
leave
adc
mov
and
ret
adc
jmp
outsb
fisttps
add
jge
pop
enter
xor
and
add
xor
pop
add
loopne
mov
shlb
cmp
xor
mov
or
jno
mov
or
push
sti
das
pusha
sub
push
mov
pushf
add
add
xor
fists
in
orl
fsubp
pop
scas
popf
aad
sar
sub
add
scas
jb
add
or
add
add
sbb
inc
stos
cltd
ss
add
cmp
sarl
mov
popf
jle
outsb
dec
jecxz,pn
stos
jnp
add
insl
enter
sahf
or
fs
and
nopl
cmp
and
sbb
jg
xchg
inc
sti
cmc
add
pop
cli
stc
cmp
or
mov
inc
or
push
and
shrb
add
sbb
xchg
add
jecxz
sub
into
cmp
inc
push
mov
jns
iret
bound
mov
sti
and
add
and
lret
fiaddl
fbld
dec
push
sti
mov
sub
sbb
and
lods
rsqrtps
mov
adc
repz
add
mov
or
xlat
sbb
add
adc
cmp
jmp
add
mov
sbb
stos
pop
jo
jmp
add
rolb
mov
addr16
pusha
dec
sub
jge
out
pop
jbe
int3
add
pushf
filds
icebp
cmp
jmp
mov
lods
inc
push
movl
pop
call
push
enter
and
jnp
mov
not
lahf
cmp
add
and
add
test
or
mov
add
adc
pop
pop
dec
pusha
int
inc
lds
push
inc
jae
loopne
adc
test
pop
add
negl
xor
xchg
add
test
jmp
popa
and
and
add
cli
inc
inc
shll
xor
jmp
sub
and
jge
pop
push
gs
xlat
lcall
cmp
sub
add
adc
daa
pop
cmp
add
push
cmp
or
jge
lds
insb
in
mov
or
lea
or
stc
pop
jp
lock
sbb
in
or
mov
cwtl
adc
xchg
int
inc
and
loopne
push
or
add
int3
cld
add
andl
aaa
movhps
cli
or
andb
jno
add
sub
ja
xchg
mov
pop
jecxz
pop
popf
jg
lahf
inc
sbb
mov
mov
and
dec
push
cmp
xor
aas
add
scas
inc
jb
xor
add
mov
sbb
jmp
sub
add
sbb
scas
add
aas
add
xor
sbb
dec
jmp
inc
lahf
enter
add
adc
push
push
lahf
stos
add
xchg
mov
ret
sbb
sbb
add
mov
mov
add
xor
dec
push
scas
dec
stos
push
rcr
cmp
xor
shl
inc
mov
sbb
cmp
out
loopne
cmp
add
and
mov
and
les
sub
or
jns
xchg
nop
jecxz
bound
and
pusha
outsl
jae
pop
mov
xchg
mov
and
or
jge
scas
fildl
addr16
je
cmc
add
mov
adc
adc
or
stc
orl
negb
test
nop
dec
cmp
add
int3
or
sub
mov
into
add
or
xlat
inc
sub
cmp
xchg
outsl
dec
addl
xchg
cmp
call
and
out
pushf
dec
addr16
xor
jp
and
add
stos
cmpps
pop
add
sahf
iret
cmpsb
mov
aam
shll
nop
pop
sbb
cmp
push
pop
cmp
int
or
mov
xor
add
jmp
fldz
inc
add
dec
push
xchg
cmp
dec
faddl
push
mov
inc
add
lock
dec
pop
out
fildl
add
sbb
and
je
sbb
loopne
or
and
dec
sti
pop
std
scas
mov
hlt
xchg
fisubs
cmp
or
or
cmp
xchg
push
jo
pop
aas
push
pop
cltd
cmc
in
add
ret
das
rcrl
push
and
arpl
mov
in
mov
push
imul
lods
gs
sbb
jns
add
or
pop
push
mov
xor
sbb
nop
mov
sub
push
add
cli
or
fisubl
ret
movb
cmp
xor
add
sbb
dec
add
jmp
scas
add
scas
add
sarl
nop
and
int3
jb
lea
lock
add
push
or
nop
cmpsl
add
inc
inc
jl
xchg
add
dec
aam
test
fcoms
shlb
push
sub
sti
dec
mov
insb
jecxz
and
add
pop
mov
dec
pop
xchg
xchg
orb
repnz
fists
lret
mov
push
add
xchg
shl
shlb
inc
outsb
cmp
and
add
cmp
lret
push
push
lcall
imul
in
int
addr16
outsb
and
outsl
mov
jmp
xchg
add
push
fiadds
mov
inc
stos
lods
in
sub
out
and
sbb
das
mov
enter
dec
lret
lods
mov
add
repz
dec
rorl
and
sbb
popa
cwtl
push
add
rcr
out
lods
inc
test
popf
mov
jmp
add
cmp
cwtl
pop
hlt
jp
mov
add
and
cmp
and
jg
jge
lretw
iret
add
pop
sub
mov
out
jne
sub
movsb
and
sub
icebp
add
outsb
loop
lahf
sbb
jmp
pop
add
mov
mov
das
adc
test
popl
push
xor
clc
bound
loopne
rcrb
add
sbbb
adc
fldl
test
xor
jecxz
mov
mov
pop
mov
out
pop
add
add
jbe
bound
push
push
jmp
or
mov
scas
sbb
cmova
add
les
pop
scas
and
add
movsl
push
add
cmpsb
sbb
add
cli
xchg
xchg
cmp
fidivs
lds
sbb
xchg
loope
fcom
in
or
and
jns
cltd
outsb
pusha
add
push
adc
test
pop
add
in
fdivrs
jge
pop
mov
fdivrl
into
out
jns
js
push
mov
mov
addl
jo
pushf
sldt
stos
or
add
jns
add
xor
add
mov
or
arpl
push
jno
pusha
repz
add
pop
mov
xchg
cmc
psraw
nop
jne
loope
sbb
sbb
mov
adc
lods
lds
jae
in
stos
jg
pop
aaa
xor
dec
repnz
add
jg
dec
cltd
pop
loopne
rolb
lock
movsb
aam
js
cmp
add
fidivl
inc
sub
ds
les
movsb
iret
or
mov
ret
test
add
pop
lret
pop
popa
aad
stos
and
loopne
xor
mov
leave
or
mov
add
negl
stc
incb
popa
ret
loop
dec
add
push
add
and
mov
sti
or
pop
sub
mov
cmp
mov
mov
push
add
jle
pusha
mov
xchg
adcb
or
jmp
cltd
adc
pop
lods
pavgb
cli
mov
loopne
add
popa
repnz
mov
pop
imul
or
adc
shrb
arpl
lret
xchg
loop
sbb
cmp
xor
rorb
push
iret
adcl
pop
aas
out
loopne
jnp
adc
push
mov
add
imul
rcll
mov
cltd
cmpsl
or
sbb
mov
pop
add
aas
aaa
mov
gs
and
popl
in
lcall
sub
repnz
or
jbe
mov
lods
test
jb
or
test
dec
fcompl
ret
fwait
add
pop
imul
jo
adc
test
mov
jmp
pop
sub
sarl
in
mov
xchg
lea
insl
push
andb
test
pop
cmpsb
xchg
adc
pop
in
or
add
movsb
sbb
dec
mov
push
push
lds
popf
and
adc
inc
je
xlat
sbb
sar
jle
xchg
mov
test
int
rolb
movsb
xlat
xchg
fsts
stc
stos
mov
adc
cwtl
and
test
shrl
push
movsl
and
stos
sbb
cmpb
adc
cmc
mov
or
loop
mov
inc
shrl
sbb
push
push
add
inc
daa
mov
pop
adcl
out
fs
js
sbb
pushf
ret
testl
icebp
add
pop
fwait
sbb
mov
push
and
or
imul
loopne
test
dec
out
push
xor
or
aad
add
pop
andb
sbb
fwait
add
arpl
shrl
das
adc
jle
in
test
pushf
inc
in
ja
movsb
sub
lcall
dec
outsb
les
xor
cwtl
cmpsl
scas
insl
pop
ret
pop
lret
ss
aad
cmp
daa
test
push
push
cs
and
mov
jae
add
add
sti
inc
lods
push
add
add
inc
cli
je
jmp
add
jp
cmc
jle
push
loope
add
rorl
add
out
adc
add
lods
cmp
jmp
in
arpl
inc
fs
mov
ret
sub
insl
les
int3
loopne
out
fldcw
xor
stos
mov
xchg
sbb
sbb
add
fs
jecxz
mull
outsl
das
mov
sbb
out
xchg
xor
add
out
push
add
xchg
push
lea
pop
and
add
mov
hlt
leave
sbb
shrl
stos
push
sbb
xchg
sbb
popf
adc
adc
jo
or
lock
mov
pop
push
repnz
lods
std
cmp
jp
or
iret
and
sbb
pop
sbbb
movsb
push
in
sbb
mov
cmp
fmul
js
cli
sub
add
inc
ficomps
cltd
adc
cmpsb
xor
mov
lahf
roll
pop
ljmp
pushf
mov
ja
jbe
loope
sbb
loopne
lock
xor
xor
lret
mov
sbb
lret
insl
add
sarl
pop
nop
clc
push
ss
insb
loopne
cmpsl
jmp
cmp
popf
std
jb
call
jns
xchg
loop
or
shrl
adc
add
in
push
push
shlb
mov
cmp
into
loopne
insb
stos
rcrb
add
jle
test
adc
or
mov
mov
push
add
xor
add
push
jp
mov
sti
mov
add
cmpsl
push
adc
add
jne
ja
cmp
arpl
outsb
push
mov
adc
nop
loope
cmpsb
loop
call
scas
popf
popa
add
pop
cmp
daa
push
sub
dec
fldln2
and
stos
add
int
and
movb
lea
add
jl
in
sub
adc
dec
jecxz
mov
pxor
and
leave
or
push
test
movsb
lret
cli
data16
in
mov
ret
dec
cwtl
movsl
shlb
cmpsb
mov
out
dec
daa
lahf
arpl
push
push
pop
or
xchg
jb
stos
incl
sarl
mov
cmpl
dec
test
adc
mov
inc
in
je
push
test
punpcklwd
ss
xor
scas
lret
add
push
pop
or
xlat
bnd
fcmovnu
push
lahf
push
std
pop
adc
push
scas
int3
jo
adc
in
jns
mov
xor
adc
cmp
mov
jg
xor
sbb
mov
std
add
fidivrl
nop
jae
adc
lcall
outsb
mov
nop
dec
pop
push
xchg
add
pusha
jecxz
out
sbb
negl
cmp
cltd
adc
mov
inc
test
lods
inc
mov
ret
add
cltd
les
sbb
cmp
ret
ljmp
mov
imul
int
lret
rolb
push
adc
xor
das
mov
add
inc
ret
mov
popa
and
mov
xor
push
add
mov
popf
cld
cmpsl
fs
pusha
lret
pop
ss
adc
xchg
jmp
sub
insl
test
loopne
mov
jb
sub
add
lcall
mov
cs
clc
xchg
shll
sarb
mov
pop
add
lds
gs
outsl
lret
dec
das
loope
in
mov
dec
sub
add
flds
sub
push
inc
inc
arpl
roll
pop
ja
push
outsb
cmp
scas
hlt
adc
add
mov
ss
or
dec
pop
jg
sbb
push
gs
fnsave
jl
sahf
add
test
mov
clc
leave
or
push
sbb
lods
jo
xchg
ljmp
pop
rcrb
roll
pop
push
test
mov
arpl
dec
andb
push
xchg
sbb
xlat
pop
or
rcrb
sbb
pop
jle
addr16
push
sahf
sub
stos
sahf
js
add
pop
mov
cltd
mov
mov
cmp
lods
stos
sub
add
lock
repnz
xchg
mov
jnp
inc
add
pop
out
and
aas
jmp
dec
ja
push
fldt
divb
cltd
pop
add
mov
iret
jp
mov
loope
shll
push
sbb
ja
jae
jb
add
das
and
adc
sub
out
lahf
mov
push
and
or
sbb
pop
mov
add
subb
mov
add
cmp
mov
adc
inc
mov
jl
cltd
xor
dec
add
mov
rcl
cli
andb
gs
lds
ljmp
push
xchg
repnz
lcall
cld
or
out
sbb
and
dec
inc
out
sbb
std
sarl
sbb
add
fistl
push
pop
sub
cmc
and
and
mov
roll
movsl
sahf
lret
add
movsb
xchg
adc
jmp
dec
adc
movsl
sbb
pushf
add
cmp
pop
into
pop
mov
pusha
ret
cmp
aas
add
mov
push
add
add
mov
roll
arpl
add
outsl
stc
xchg
repnz
mov
pop
xchg
sub
lahf
lock
stc
inc
das
sbb
jae
dec
xchg
jmp
repz
xchg
aad
jne
fcompl
cmp
and
movsb
inc
pop
shl
jmp
hlt
scas
push
add
xchg
inc
add
cltd
inc
xchg
xor
dec
xor
bound
pop
sahf
add
pushf
lods
hlt
lahf
pop
or
mov
arpl
cwtl
scas
dec
add
push
jb
push
fstl
or
loopne
daa
mov
bound
cmc
sub
popf
add
push
mull
inc
fucomi
loope
pop
dec
aad
bound
loopne
adc
and
test
das
push
pop
divl
inc
stc
add
inc
sbb
sbb
mov
out
jmp
cmp
mov
sbb
or
jl
out
cmpsl
mov
push
mov
dec
jmp
mov
xor
cmpsb
ds
and
cmpsl
add
add
in
lret
mov
xorb
xor
jno
dec
jb
xchg
mov
push
ret
mov
aas
fdivp
add
sub
adc
push
jns
add
cwtl
popf
cmp
les
sub
repz
sarl
mov
pop
cmpsl
int
lock
pop
sti
add
ja
and
inc
add
cmp
fwait
sub
idivb
jecxz
sbb
test
cmp
mov
fisttps
sbb
clc
adc
push
push
add
mov
cli
sbb
mov
sbb
call
xlat
mov
cwtl
add
dec
jmp
into
or
ds
add
call
dec
in
fsubrs
aam
loope
adc
addl
xor
jmp
and
fbstp
mov
pop
sbb
sbb
and
push
add
pop
in
add
inc
lcall
inc
in
dec
jmp
xor
fisubs
xchg
mov
cld
pop
stos
test
mov
stos
cltd
jmp
outsb
daa
and
outsb
pop
lea
xchg
addb
aaa
cmp
fistps
xchg
scas
jge
clc
or
pop
mov
lea
jmp
adc
pop
adc
loopne
insl
imul
adc
jns
fidivs
add
xchg
in
sti
inc
cmp
adc
lock
jge
mov
mov
lret
adc
in
je
in
push
imul
sub
arpl
dec
dec
add
jge
sbb
add
cmp
jae
incb
sub
xlat
call
call
iret
lret
xor
dec
cmpl
adc
js
add
or
repz
dec
rcrl
mov
dec
inc
sbb
dec
sbb
add
mov
pop
mov
pusha
dec
popa
repz
ja
or
ret
lahf
je
push
es
dec
jmp
sub
xchg
pusha
arpl
dec
mov
xor
inc
or
testl
fsubs
mov
add
adc
cltd
xchg
add
add
fnstsw
adc
sbb
pop
out
aad
imul
mov
cwtl
and
add
or
add
jno
mov
fbld
popf
out
movsl
jb
mov
add
pop
push
mov
test
dec
lds
add
cmp
mov
xchg
clc
or
repz
jp
add
pop
mov
sub
les
hlt
add
les
ss
gs
sub
mov
push
in
xchg
sub
dec
mov
addr16
cld
xor
negb
pusha
add
jb
test
mov
loop
xor
cwtl
stc
insb
roll
ret
cs
or
movl
push
fs
pop
cli
sub
add
and
sbb
add
push
sbbl
dec
fstpt
js
cmp
xchg
lcall
sub
sub
notb
outsb
ret
push
sti
add
mov
fiadds
pop
or
and
out
nop
cmpsl
add
mov
pop
loope
add
xchg
lock
fcmovu
add
pusha
adc
and
icebp
lret
mov
cmpsb
add
sub
pop
add
ss
and
aam
sub
add
mov
cmp
lea
lock
movd
sbb
pop
push
mov
adc
adc
fmuls
mov
insl
adcb
sti
add
pusha
xchg
push
je
out
pushf
and
scas
push
fstl
sub
jno
mov
mov
add
xor
aaa
add
dec
cmpsl
pop
pop
out
aam
cmp
jg
call
in
mov
jl
push
mov
add
clc
mov
loope
std
ds
mov
test
jl
addr16
call
repnz
sbb
adc
pop
ret
dec
movsl
cwtl
ja
jp
jecxz
es
sbb
sbb
mov
push
mov
sbb
inc
mov
fildl
push
sbb
adcb
insl
in
decl
in
mov
add
in
mov
int3
sti
roll
mov
jecxz
popa
jge
push
nop
jno
stos
or
enter
mov
mov
jecxz
pop
sahf
out
cltd
pusha
inc
imul
xor
adc
jae
add
pop
and
sub
clc
rol
lret
mov
lock
mov
jbe
adc
jmp
adc
je
dec
mov
add
rorb
loope
popf
add
push
stos
sub
xchg
aaa
fs
imul
les
sbb
add
fbld
mov
jo
jns
mov
shrb
shl
adc
clc
and
sub
shlb
xchg
lds
jecxz
or
xchg
add
cmpsb
jge
push
cmp
mov
testl
mov
enter
fcomps
addb
aam
mov
loope
mov
pushf
sbb
scas
xchg
loop
pop
mov
jbe
or
add
jp
mov
or
out
mov
xor
cltd
out
cmpsl
fidivs
cmpsb
fidivrl
cmp
stos
ret
fcmovne
in
inc
dec
push
ret
jnp
adc
push
insb
stos
fnstcw
pop
lds
mov
sub
pop
or
push
arpl
or
sub
add
and
mov
addr16
adc
sbb
das
mov
add
jl
push
inc
mov
mov
aam
push
add
add
enter
bound
jno
pop
add
scas
mov
mov
jmp
aaa
inc
cmc
jae
and
xchg
xor
add
mov
inc
lahf
pop
add
fisttpl
fwait
add
outsb
sbb
add
nop
xchg
popf
push
sti
mov
add
pop
lods
xlat
xor
insb
loopne
fimuls
cmp
or
add
sbb
iret
fstps
stc
jno
or
add
movsb
sub
fsubr
mov
insb
inc
ret
pop
inc
fdivrs
daa
add
cwtl
loop
scas
push
pusha
jns
call
adc
add
xor
jb
insl
xchg
sbb
pop
add
mov
jno
add
sbb
stos
je
and
rorb
loope
lahf
addb
pop
adc
faddp
jecxz
fmul
adc
add
cs
aad
popf
pusha
cmp
out
mov
fwait
hlt
movb
test
mov
add
cmp
mov
shlb
add
xor
hlt
mov
in
mov
sbb
adc
jne
add
adc
dec
xchg
popa
arpl
sahf
or
mov
js
sbb
mov
sbb
testb
mov
subps
xor
push
inc
nop
mov
push
insb
push
or
repz
pusha
and
jg
add
test
add
xlat
and
cmp
test
mov
xor
pop
adc
sub
cmp
xor
xlat
mov
movsl
call
sub
jno
ss
fwait
mov
xchg
andl
cltd
mov
loope
and
nop
add
movsb
arpl
jge
jecxz
stos
and
in
xorl
fildll
shrl
pusha
pop
lods
pop
push
add
dec
sbb
arpl
rcr
pop
pop
repz
inc
outsb
dec
mov
fidivs
lock
adc
jae
daa
or
adc
adc
push
xor
fmul
push
xchg
js
sub
fs
dec
test
add
fisttps
lods
aaa
cmp
and
pop
jb
xor
lock
movsb
jo
cmp
dec
jnp
mov
lret
pop
pop
lds
xor
xor
sbb
sub
lcall
add
push
jno
mov
push
insl
and
data16
cmp
dec
repnz
jnp
loopne
loopne
pushf
mov
cmpb
daa
lret
add
push
xchg
add
psraw
scas
xchg
push
loope
xor
push
fisttpll
add
pop
jmp
fwait
mov
mov
gs
dec
loope
inc
push
ret
clc
push
fucomi
mov
ds
insb
push
dec
and
adc
add
sbb
jnp
jp
jns
xchg
cltd
imul
sbb
cmp
and
stos
mov
mov
sahf
daa
cmc
dec
add
mov
mov
jecxz
ja
mov
movsl
xchg
insb
fsts
pop
shll
mov
add
xor
jnp
sbbl
je
mov
mov
and
test
add
rolb
mov
mov
inc
dec
xchg
pusha
sbb
xchg
icebp
adcl
inc
mov
in
cld
mov
cmc
repz
mov
xor
pop
adc
leave
mov
or
lret
loop
mov
add
dec
pop
pop
or
adc
adc
xor
cmp
mov
adc
mov
enter
mov
dec
push
cs
loope
movb
cwtl
cmp
xor
iret
xchg
testb
inc
pusha
jns
insb
sub
mov
inc
and
mov
or
xchg
pusha
sub
fldt
adc
xor
scas
add
movsb
mov
pop
and
es
pop
mov
data16
jmp
adc
popl
lcall
mov
push
xor
fldcw
cmpsb
loop
inc
das
add
inc
je
arpl
nop
adc
les
sbb
ficoml
mov
add
or
push
pusha
int3
sbb
xor
sbbl
outsb
repz
xlat
mov
mov
mov
pop
xlat
lods
sub
mov
out
jg
push
out
mov
inc
loopne
and
hlt
mov
mov
sbbb
jl
push
loopne
cwtl
loope
stc
in
add
add
mov
pop
jp
testl
jb
shll
mov
adc
clc
or
jecxz
or
xchg
pop
roll
pop
xchg
and
jns
and
mov
cmpsl
push
adc
testb
pusha
add
lock
pusha
cmpsl
rcll
sbb
aad
cmp
mov
or
aas
das
pop
dec
mov
or
ss
nop
and
sbb
mov
out
pop
ret
jmp
data16
or
mov
jle
int
jmp
mov
adc
sbbb
outsl
xchg
or
cs
xorl
pop
pop
sub
inc
pop
dec
add
imul
rorl
lcall
jbe
add
bound
dec
sar
lret
add
mov
xchg
push
or
addb
dec
jo
inc
lock
les
jl
adcb
iret
or
add
mov
add
fistpl
pop
dec
xchg
cmpsl
loopne
daa
andl
push
and
rcrb
insb
mov
lods
out
outsb
scas
mov
xchg
ss
roll
enter
add
repnz
add
jp
add
sub
push
outsl
scas
xor
mov
shll
icebp
jbe
or
add
mov
xchg
subl
adc
and
jbe
add
js
jmp
lret
fstpl
shrb
out
sar
je
rcr
mov
adc
pop
nop
ja
push
dec
pusha
in
stos
lcall
add
and
xor
inc
nop
stc
movsb
les
add
sub
inc
cmp
pop
mov
mov
mov
movsl
xor
add
mov
dec
adc
outsl
or
rorb
dec
jecxz
outsb
add
add
inc
mov
add
repnz
daa
enter
pop
xor
sbb
movsb
dec
adc
pop
mov
or
clc
cld
or
mov
inc
mov
scas
push
mov
notl
les
fsubr
fbld
lods
sub
aaa
jge
xchg
fucom
aad
push
add
bound
ja
int
adc
les
ds
mov
inc
test
mov
add
aam
dec
cld
or
bswap
divl
cltd
pop
test
jecxz
sbb
fstpl
mov
add
fdivl
fiaddl
dec
mov
lods
arpl
jnp
addl
adcl
inc
cmpb
adc
fdivrl
popa
addr16
jecxz
or
xor
shll
mov
jge
imul
xor
inc
das
clc
and
pusha
lock
add
sbb
in
ret
daa
shll
pop
xor
sub
add
pop
clc
adc
insl
jge
mov
and
rcrl
pop
inc
nop
cli
arpl
add
xchg
add
and
out
mov
pop
into
mov
or
lahf
push
and
rcll
faddl
mov
and
enter
dec
inc
in
xor
fwait
add
movsl
outsb
mov
cld
rcll
clc
loopne
and
mov
and
and
xor
sar
xor
popf
lcall
cmp
pop
add
bound
or
fldcw
sub
mov
int3
gs
xor
mov
and
aad
xor
or
and
or
mov
sbb
mov
or
add
idivl
and
add
mov
aaa
add
xor
mov
int3
inc
andl
arpl
mov
fisubrl
or
ret
mul
enter
orb
testb
mov
sub
mov
and
int
mov
push
movl
inc
push
aas
jbe
add
add
in
dec
cmp
add
jmp
ret
add
test
inc
out
or
adc
jne
push
push
or
cmpsb
sub
out
sub
sbb
add
sbb
aam
iret
add
sbb
cmp
sahf
shll
mov
cmpsl
pop
add
inc
in
movsl
rcrl
js
adc
scas
xorl
jp
mov
inc
adc
gs
loope
adc
push
add
cmp
and
subl
mov
invd
adc
jp
mov
nop
jnp
adc
mov
pusha
imul
add
icebp
leave
repz
adc
cltd
jne
pusha
lods
test
ljmp
popa
jl
es
add
jae
mov
push
push
jge
dec
in
add
enter
dec
fstl
mov
jg
add
pop
lret
fldenv
adc
push
or
inc
add
adc
lods
sti
clc
daa
pusha
loope
mov
aas
cld
push
mov
pop
mov
adc
and
inc
xchg
add
mov
fdiv
mov
mov
dec
xor
lret
sahf
mov
pop
and
ljmp
add
loop
fnsave
cmpsb
sub
fildl
sub
push
pop
add
sub
sub
pop
mov
jbe
iret
push
add
jg
add
faddp
scas
mov
dec
xchg
cmp
pop
push
fwait
lea
bound
add
hlt
call
jge
mov
cmpsl
pop
add
inc
jno
filds
sbb
mov
and
adc
popa
adc
pushf
in
popf
gs
test
cmp
icebp
push
adc
ret
adc
push
push
jne
xor
jl
mov
pop
in
xchg
repz
inc
pop
inc
add
ljmp
and
jecxz
pusha
fmul
or
loop
test
xchg
test
call
push
sub
and
sub
jecxz
add
subl
adc
sbb
shll
jle
leave
cmp
iret
and
push
and
lcall
addl
add
inc
imul
add
jge
cmp
inc
and
pop
push
mov
add
andb
sub
popf
bound
jmp
cmp
nop
adc
push
je
cmp
out
sbb
add
push
sub
xlat
or
adc
mov
rcrl
jbe
call
or
mov
sbb
xchg
sub
sbb
les
add
xchg
pusha
ficomps
js
sub
movsb
add
and
pop
dec
and
xor
add
hlt
xor
lods
jmp
mov
cmp
push
insl
xchg
mov
sbb
lods
adc
push
ret
add
pop
movsl
jae
mov
jnp
xor
xchg
and
xor
inc
sbb
cltd
cmc
or
pop
xchg
mov
rclb
sbb
cltd
and
movsl
push
adc
xor
subl
cwtl
xchg
int3
flds
push
jg
ja
call
loopne
ss
popa
imull
xchg
jno
add
imul
nop
sbb
loopne
fnstenv
cwtl
adc
int3
mov
add
mov
shrb
inc
add
in
test
das
push
fldenv
mov
add
movl
ror
mov
and
xor
cmpsb
movsl
sbb
aam
push
sub
add
inc
and
out
xor
pusha
test
dec
mov
fwait
repnz
cmp
or
jbe
cmp
test
jge
jmp
and
cmp
xor
loope
jo
test
dec
and
adc
cs
repz
icebp
rcrb
mov
jae
xchg
mov
mov
call
pop
pushf
dec
jns
popa
mov
call
pop
or
jo
andl
mov
add
aad
jb
mov
cmpsb
sbb
jae
cmp
pusha
cs
pop
mov
fistpl
mov
fabs
cmpsb
mov
sbb
hlt
mov
gs
adcb
and
xchg
add
out
in
sub
out
mov
jb
test
cwtl
inc
js
sbb
mov
add
sbb
out
pop
fiadds
push
fcomip
inc
and
ret
sub
add
push
popa
push
out
popl
lock
stos
pop
pusha
pop
dec
inc
repz
loop
or
fstpt
mov
lock
out
jns
movsl
jo
add
add
daa
in
mov
nop
es
xor
fldenv
mov
adc
scas
movsb
loopne
sub
hlt
sub
lods
pushf
mov
inc
fs
pop
data16
pop
jl
add
in
int
pop
jo
adcl
aaa
sbb
fstl
jg
in
add
lock
inc
add
cmp
sahf
adc
pop
sub
jo
mov
aad
cs
or
sbb
adc
lods
pop
inc
adc
leave
dec
mov
dec
imul
xchg
sub
sbb
adc
add
xlat
lret
fneni(8087
add
pop
out
xchg
leave
dec
add
sbb
icebp
add
jl
pop
jnp
fidivrl
and
jbe
test
clc
cmp
popf
fadds
outsb
cmp
xor
leave
dec
xchg
rolb
sub
icebp
pop
fwait
dec
aad
jecxz
pushf
aam
mov
add
cmp
inc
cmpsl
sbb
cmp
inc
dec
fneni(8087
in
dec
in
and
mov
add
adc
inc
add
or
cmp
out
stos
cmc
mov
or
xchg
sbb
dec
flds
rcr
imul
or
fcomps
add
inc
cmc
xchg
sti
lock
outsb
add
stos
ds
daa
int
jmp
mov
jmp
mov
add
mov
mov
add
sbb
jne
xchg
insb
add
mov
add
arpl
daa
cltd
rcll
inc
rcrl
addr16
fst
xchg
cmp
out
sbb
mov
loope
mov
lahf
add
fisubl
xchg
add
mov
or
sub
add
jnp
dec
outsb
stos
js
add
adc
xchg
add
ret
sbb
add
dec
sbb
ret
adc
mov
add
insl
lods
cmp
xor
in
or
pop
ret
xchg
out
jmp
inc
cmpsl
add
dec
dec
loope
adc
pop
sbb
lods
mov
and
fwait
adc
jae
scas
xchg
add
push
xorb
loop
mov
das
add
ret
or
or
movsl
sbb
shll
adc
popf
add
mov
mov
int
lahf
clc
in
pop
and
xchg
ret
adc
pop
dec
add
lds
add
push
and
stos
adc
fldt
mov
sbb
scas
inc
add
orb
and
loope
dec
popf
inc
in
adc
and
xor
ficoms
push
adc
testb
in
ja
fldenv
mov
js
fcomps
loopne
sbb
pop
lahf
add
jae
out
mov
pop
add
mov
sbbb
enter
icebp
push
sub
add
or
jmp
jb
adc
mov
mov
add
dec
jecxz
jne
add
pop
stc
inc
and
movsl
add
sub
arpl
loope
pop
jo
mov
in
push
pusha
nop
bound
xchg
mov
add
dec
push
test
decb
adc
inc
mov
or
dec
and
cmc
mov
add
inc
int
xchg
add
mov
and
and
sbb
rcrb
inc
das
jbe
jg
rcll
jge
xor
enter
or
cmp
sub
mov
pop
cmp
xchg
pop
aam
leave
push
in
add
pop
ss
js
jne
add
add
pop
dec
lods
add
adc
rcr
adc
inc
sbb
fs
fisttpl
shll
cmpsl
nop
or
dec
mov
addb
add
pop
insb
adc
sub
inc
sbb
in
add
fwait
shlb
aaa
add
pop
inc
jge
insb
xchg
mov
or
shll
and
sbb
scas
into
cmp
int3
push
pusha
sarl
out
cld
dec
sbb
add
fst
and
xchg
bound
pop
sbb
rol
das
mov
stos
aaa
jge
loopne
ds
fcompl
out
jecxz
in
fistps
push
nop
xor
std
test
call
push
inc
fildl
adc
fstl
xor
sar
inc
add
in
leave
dec
mov
mov
ss
and
pop
int3
leave
xor
hlt
imul
int
mov
cmp
mov
rcll
add
jecxz
xchg
test
lods
mov
add
mov
fldenv
xchg
enter
add
subb
adc
popa
into
push
dec
push
and
xor
ret
push
sbb
addr16
or
lret
dec
cltd
add
mov
sbb
or
pop
jge
outsl
sbbb
or
adc
xor
aad
add
ds
mov
add
mov
mov
xlat
mov
xchg
pop
mov
push
in
scas
push
jp
js
pop
aam
inc
sbb
mov
orb
repz
sahf
adc
inc
movsl
hlt
sub
or
jae
pop
pushf
inc
jp
push
rcrb
add
xlat
repz
xchg
inc
daa
pop
scas
sbb
movsl
adc
adc
shl
lret
add
mov
add
pop
cli
rclb
loope
and
push
mov
pusha
ljmp
aas
push
dec
pop
xchg
add
dec
jbe
push
jg
cmc
pop
ljmp
pop
sbbb
fsts
jnp
sub
add
mov
mov
dec
imul
jl
movsb
add
mov
sarb
shll
enter
mov
sbb
loopne
dec
test
hlt
pop
xchg
fdivr
adc
pushw
sub
movl
add
push
sbb
stc
inc
shll
push
lea
pop
pop
mov
push
and
or
cmc
testb
cmpsl
add
jge
add
add
pop
loop
sbb
js
and
mov
aaa
rolb
inc
lock
movsl
jne
adc
cmp
jp
and
mov
jl
push
ljmp
add
jae
and
xchg
push
fmull
add
inc
lods
add
fdivs
sub
andb
fs
test
out
pop
add
pop
pop
add
out
cmpsb
loop
or
pop
shrl
or
jo
cwtl
or
add
imul
fcoml
clc
add
in
es
xchg
cs
mov
insb
bound
jg
add
sbb
jb
lea
div
cld
or
cvtdq2ps
insl
push
inc
sbb
insb
clc
loope
sub
outsb
mov
int
sbb
popf
movsl
and
cld
cmp
loope
jg
pusha
rorl
pushf
lds
add
scas
inc
incb
or
xorb
push
fwait
sbb
aad
stos
or
adc
insb
fistpll
lds
mov
rclb
popf
repz
rcrl
in
repnz
addb
and
loop
test
pop
cmp
out
jg
mov
dec
aas
lahf
sub
pop
insl
or
mov
add
shrb
pop
aaa
add
pop
dec
rcrb
sbb
pusha
sub
jbe
dec
es
or
push
adc
jmp
jle
mov
ret
loope
and
ret
mov
in
dec
fidivrs
fisttpl
xor
mov
or
sub
dec
out
inc
cmp
mov
fs
sub
insl
dec
lcall
repnz
out
ret
sub
shl
pop
aam
mov
sarl
stc
or
leave
jmp
pop
loop
lahf
ja
outsl
ud1
out
shl
and
add
mov
inc
testl
jmp
dec
cmpsl
das
mov
lahf
shl
out
add
mov
lret
jne
push
xor
sbb
push
fldt
mov
loopne
sbb
mov
inc
testb
pop
test
flds
dec
pop
mov
sbb
pop
push
push
fmull
jecxz
bound
out
cmp
xchg
mov
aas
inc
pusha
les
and
jbe
add
jnp
pop
insb
mov
lock
roll
jo
imulb
inc
out
arpl
or
dec
or
pop
fwait
stc
fs
sar
or
jl
mov
sbb
orl
add
or
jns
stc
or
sub
arpl
adc
das
ds
xor
mov
jmp
xor
loopne
adc
sti
adc
mov
jp
add
push
mov
mov
shll
add
addb
push
mov
push
int
push
movl
loope
fcmovbe
push
test
das
push
push
fwait
sub
add
testl
inc
or
pop
daa
ja
mov
pop
add
lods
push
xlat
rorl
pop
testb
adc
imul
mov
inc
push
lahf
xchg
inc
cmpsl
and
pop
lods
push
fstpl
add
push
fbld
js
fisttpl
loopne
xchg
ret
mov
pop
fmulp
and
push
sbb
xor
subl
jns
leave
adc
mov
data16
mov
and
mov
xchg
jge
or
pop
out
mov
into
icebp
rcl
mov
mov
mov
test
dec
push
stc
xor
add
fdivs
push
add
ljmp
add
or
pop
mov
and
jge
dec
outsl
mov
fldcw
xchg
nop
pop
rcrl
push
sarl
mov
jmp
in
pop
add
hlt
inc
xor
nop
cmc
sarb
iret
fdivrp
jecxz
jp
mov
mov
inc
add
add
gs
popa
scas
and
popf
loope
mov
loopne
sti
dec
sub
or
inc
mov
enter
sub
lahf
xchg
pop
add
push
add
das
dec
je
idivl
push
lahf
fstl
sub
loopne
jno
cmp
lret
push
stc
fidivs
rcl
jne
jecxz
inc
inc
mov
or
and
rcrl
les
adc
cmp
test
add
in
xor
adc
hlt
mov
std
push
sub
mov
mov
mov
jne
stc
cwtl
dec
jnp
mov
rorl
sbb
sub
in
add
mov
push
clc
dec
cmp
out
adc
and
sub
cmp
push
iret
mov
jno
lcall
icebp
cmp
popa
pusha
test
jo
sub
xchg
stc
addr16
cmpb
out
jne
or
jmp
mov
adc
push
fadd
push
in
insl
add
lods
pop
inc
xchg
popa
adc
mov
mov
push
mov
lret
idivb
unpckhps
xchg
js
in
push
xchg
inc
inc
stos
fcom
jbe
loope
cmpsb
mov
xor
adc
push
mov
cmp
cmp
stos
push
sbb
sub
add
cmp
xor
jo
sahf
pop
xchg
push
repz
popa
icebp
fldl
xlat
pop
jae
push
out
adc
mov
add
or
push
iret
add
sbb
subb
imul
dec
pop
mov
adc
movsl
or
xlat
and
gs
jbe
sahf
mov
add
or
xchg
outsb
xor
inc
xchg
jl
mov
and
ret
hlt
test
adc
inc
xor
roll
mov
jno
or
outsb
cltd
sub
mov
enter
mov
lahf
xor
jl
inc
jp
add
xchg
loopne
cmc
lea
sbb
or
add
sbbb
mov
sbb
je
cli
add
mov
mov
add
and
cmp
out
ror
arpl
push
push
inc
push
fistpl
and
add
out
or
dec
cwtl
add
sub
cmp
movsb
cmp
repnz
lahf
sbbl
push
cmp
and
aas
loope
push
push
push
add
mov
bound
jns
and
cs
scas
cli
sbb
add
mov
aad
loopne
jae
movsb
in
insl
in
mov
xchg
aad
xchg
int
add
int3
add
data16
nop
add
sub
inc
fistpll
movsb
cld
in
pop
test
jae
outsl
ja
aam
jp
lahf
jo
call
xor
movsl
add
cmp
xorw
push
xor
ror
sbb
and
xor
mov
cmpsb
adc
sbbl
add
int
inc
sarl
add
test
pop
add
ja
or
test
scas
ficoms
xchg
and
and
lea
sbb
aas
scas
cmp
push
mov
imul
sbb
sbb
loopne
add
push
cmp
int3
lds
and
cld
shll
int
jmp
push
test
jo
out
mov
stos
mov
jb
adc
or
or
mov
outsb
shrl
cmp
inc
jne
into
xchg
leave
cmp
imul
pop
jae
out
sbb
pop
adc
cltd
or
stc
and
sub
icebp
or
addl
adc
push
sub
lds
add
mov
pop
jl
add
in
pop
ret
jnp
or
dec
sarb
jge
cmp
xor
or
cmp
add
ljmp
cmc
xchg
xchg
jo
das
adc
aaa
lods
adc
adc
add
sahf
xor
fsubrs
push
add
xorl
lahf
add
add
or
add
sbb
or
push
add
push
xor
add
in
adc
lea
lret
xchg
jg
test
fisttps
push
jle
mov
pop
sarl
add
add
in
pusha
jns
xor
pop
icebp
jl
xor
imul
andb
or
fwait
popl
out
shld
push
addb
mov
push
pushf
xor
or
roll
add
mov
andl
push
mov
inc
pop
add
in
sahf
cwtl
or
filds
xchg
lret
rolb
add
sub
sub
dec
jmp
mov
add
sbb
roll
lcall
add
popf
or
and
rolb
cmpsl
enter
lahf
test
leave
push
add
rolb
arpl
cmp
sbb
andl
inc
out
add
es
lret
sti
inc
sub
mov
mov
fwait
jb
adc
sbb
ror
mov
or
dec
xor
xchg
and
pop
xrelease
das
add
ss
inc
popa
or
pop
cmp
add
call
out
or
mul
mov
icebp
push
add
popf
out
sub
mov
lods
enter
sti
add
add
adc
xchg
add
mov
pushf
pop
push
loopne
sbb
cs
sbb
and
adc
popa
ficoml
data16
jae
nop
imul
xor
into
mov
jmp
leave
or
test
add
sti
loop
sbb
movl
cmc
les
lahf
mov
lcall
cmpsl
push
push
cltd
cs
add
cmc
sbb
inc
or
aad
pusha
xor
rcr
hlt
out
cltd
or
pop
pop
loopne
pop
in
sahf
sbb
mov
enter
outsb
pop
xor
add
dec
cli
imul
lret
repnz
fstpl
decl
bound
inc
aad
add
mov
lcall
std
inc
or
or
mov
add
add
adc
and
and
push
add
testl
adcb
add
jo
adc
pop
out
aas
or
mov
inc
imul
add
movb
scas
or
add
adc
test
add
push
cmp
lret
xor
inc
inc
xchg
push
lods
pusha
adc
mov
cld
cmp
add
adc
iret
fcmovu
add
push
popf
push
sbb
repz
arpl
dec
je
or
pop
jge
dec
in
lahf
sbb
cmpsb
push
inc
andb
add
adc
in
adc
pop
add
mov
sbb
mov
mov
pop
cmp
mov
add
xchg
das
roll
loopne
add
test
gs
mov
adc
popf
or
cmpsl
movsb
lahf
stos
xchg
dec
add
cwtl
mov
or
sbb
xor
inc
push
sub
aas
add
aas
dec
pop
add
mov
push
aad
jp
ret
xorb
in
rcrl
mulb
xchg
mov
adc
movsb
push
lret
add
lods
pop
xchg
mov
push
push
fmuls
scas
mov
sub
add
clc
or
adc
cmp
fadds
and
sub
movsl
roll
mov
js
out
test
movsb
inc
insb
js
fstpl
mov
loope
test
mov
xor
xor
inc
leave
xchg
loopne
pop
inc
loope
adc
mov
in
push
jl
cmp
ja
push
lods
inc
mov
data16
push
lcall
shll
jo
lea
sbb
inc
add
cmp
add
and
das
add
sbb
out
stos
add
rolb
lcall
or
add
cmp
mov
loope
lods
scas
mov
rdtsc
test
data16
das
jle
xchg
xor
jnp
cmp
mov
popf
dec
clc
je
adc
mov
imul
sub
dec
mov
int3
dec
add
insb
fadds
push
dec
mov
inc
add
insb
sbb
pusha
xor
fs
loope
js
sbb
lods
imul
or
iret
adc
cmp
roll
dec
jbe
out
xor
pusha
jmp
jge
push
sbb
or
addl
out
push
enter
sbb
cltd
mov
jge
outsb
ja
sbb
addr16
sub
mov
add
rorb
sub
aam
add
out
push
push
nop
in
dec
daa
mov
fistl
adc
xor
sbbl
add
punpckhdq
outsl
adc
add
mov
pop
iret
inc
cmp
lods
xchg
mov
mov
aad
sahf
notl
cmc
data16
cmpb
xor
and
mov
cwtl
in
test
cmp
outsl
or
dec
loope
fsubp
out
mov
and
mov
mov
add
pop
rcrl
outsb
add
pop
pop
mov
push
bnd
out
jmp
lock
pop
add
xchg
dec
inc
cld
ljmp
and
das
mov
dec
insb
repz
add
add
xchg
add
dec
xor
or
rcll
aam
pop
cli
xor
test
pop
or
ljmp
sbb
cmc
pushf
out
sub
jl
adc
sub
shll
jae
popf
inc
mov
mov
sbb
jg
mov
inc
fwait
push
in
mov
pop
mov
push
fdivp
adc
ja
outsb
flds
push
sub
push
mov
inc
stos
xor
cmpsl
pusha
das
inc
fwait
dec
sbb
ret
movsb
push
add
imul
aaa
gs
inc
push
fcomi
loopne
outsb
jle
out
sbb
jnp
into
add
dec
mov
mov
inc
loope
mov
notb
or
adc
xor
dec
add
mov
inc
mov
add
repz
inc
das
jae
add
xchg
xchg
pushf
mov
mov
add
push
ficompl
out
insb
fnstcw
mov
cmp
pop
xchg
clc
in
loopne
loop
stos
lods
imul
mov
or
mov
lahf
test
stc
add
adc
xor
dec
movsb
sbb
bnd
ret
or
jp
shrl
or
mov
popf
add
ds
shlb
enter
xchg
ss
cvtdq2ps
ficoml
lds
lret
imul
je
xor
popa
add
adc
pop
and
xchg
fdivs
ja
aaa
xor
pop
ds
movsb
push
test
mov
sbb
lret
lea
andb
test
aad
imul
push
dec
fwait
cmp
xor
xor
jno
mov
push
loope
rolb
sbb
lods
ljmp
mov
lods
sbb
movl
mov
and
jnp
fistps
in
xor
test
mov
xor
add
fcomp
adc
jecxz
pop
xchg
loopne
insb
cltd
or
int
incl
test
sub
inc
lock
lds
scas
pusha
jno
jbe
adc
ret
loopne
sti
push
pop
push
push
das
call
pop
lret
popf
and
xor
cltd
icebp
xchg
or
adc
add
xor
lds
and
addl
dec
cmp
mov
popf
add
inc
cmpsl
dec
out
add
push
inc
xchg
inc
jge
out
add
lret
and
cli
adc
loopne
stos
jns
pop
scas
or
mov
xlat
insb
adc
and
in
sbb
push
sbb
out
loopnew
cmp
mov
mov
push
mov
mov
dec
inc
scas
dec
add
repnz
xchg
shrb
and
popa
jns
data16
or
bound
decl
aam
add
dec
cmpsl
lods
push
into
pop
add
je
sbb
jl
and
mov
mov
add
xchg
jp
push
add
into
outsl
cmp
mov
add
mov
adc
cmpsl
lahf
int3
test
mov
add
out
mov
pusha
add
xchg
and
adc
jmp
sarb
fisttpll
pop
outsl
fcmovnbe
mov
sbb
ljmp
push
push
ficoms
call
add
fcmovnb
cli
mov
loope
push
out
adc
inc
pop
mov
sbb
test
fcoms
pop
ljmp
popf
sti
add
addr16
sbb
mov
push
xor
hlt
rcrb
loopne
sti
jp
dec
leave
or
mov
enter
int3
sub
push
jae
mov
jl
mov
loopne
mov
imul
or
ljmp
lahf
sbb
sub
push
lea
add
inc
push
daa
cmpsl
scas
pop
xchg
loopne
jae
or
mov
out
push
mov
push
add
aam
pusha
or
xlat
cmp
push
and
test
adc
popa
sbb
test
and
in
insb
sbb
repnz
aam
add
negl
arpl
add
bound
test
push
adc
cmp
add
imul
add
or
add
dec
pop
xorl
dec
pop
imul
cwtl
test
jle
add
sub
and
add
je
sbb
adc
xlat
rcrb
lds
adc
pushf
das
repz
adc
xchg
add
jno
mov
cli
test
in
orl
dec
xchg
into
add
add
lret
dec
std
aaa
out
les
sbb
cmp
cmpsl
add
push
cmp
mov
rolb
repnz
and
aaa
and
int3
dec
insl
add
or
aam
pop
add
xchg
sbb
in
push
out
sbb
xchg
inc
push
jle
add
cmp
loope
sbb
sar
sub
add
adc
add
dec
pop
pop
push
add
xor
call
adc
adc
loopne
pop
add
inc
test
push
inc
push
pop
sbbl
mov
and
and
loop
inc
inc
adc
adc
dec
lret
dec
daa
add
jno
addl
cli
data16
pop
lret
rcrl
jnp
pop
dec
push
jecxz
lock
fisubl
test
in
add
ret
xor
mov
cmp
fisubrs
out
push
xor
mov
add
stos
into
dec
add
jne
imul
add
pop
jbe
jecxz
aad
icebp
jg
cmp
lea
add
dec
in
loop
adc
add
fmul
push
ret
sub
icebp
adc
jne
loopne
add
call
lret
dec
add
cmp
mov
dec
jb
popa
cmp
imul
rcr
push
add
mov
test
cli
and
sub
dec
mov
sub
in
add
jae
fdivrs
cmp
scas
push
or
add
divb
loope
stc
xor
or
pop
testl
fdivrs
mov
sub
xchg
xor
lods
les
pop
int
pusha
pusha
das
mov
xchg
js
imul
test
movsb
pop
rclb
xchg
jcxz
scas
push
jmp
adcl
fbstp
jnp
or
jl,pt
hlt
mov
inc
and
inc
add
xchg
mov
lods
dec
fs
pop
jecxz
notb
jmp
sbb
aad
xor
mov
ss
xor
aas
dec
cmp
or
pop
add
fidivs
xor
lret
enter
lods
arpl
sbb
cld
xor
daa
lahf
sbb
inc
ret
jmp
lds
pop
insl
mov
add
mov
ja
jno
fstpl
fldl
push
arpl
mov
or
jae
jns
in
mov
jmp
xchg
insb
sahf
imul
inc
add
dec
add
sub
adc
cmp
add
mov
neg
addr16
je
test
add
or
mov
add
pop
add
insb
repz
ret
data16
dec
pushf
roll
sbb
mov
push
xlat
loopne
repz
jns
pusha
mov
mov
cmc
inc
add
mov
mov
adc
addr16
adc
rorl
jg
mov
xchg
add
push
lret
pop
pusha
push
hlt
lcall
cmp
mov
fs
sbb
cmp
rcrb
xchg
add
ljmp
sbb
addl
in
add
pop
mov
adc
int
sub
and
add
xchg
fisubrl
mov
add
orpd
pop
mov
outsb
cld
scas
or
fstpt
jge
add
mov
sub
bound
movsl
mov
shlb
sbb
test
inc
dec
jge
lcall
addb
or
jmp
adc
into
movl
lcall
push
outsb
fmull
insb
mov
sahf
mov
test
jb
mul
sbbb
jge
adc
add
and
imul
add
sub
sub
adc
jg
das
movb
xchg
xchg
inc
dec
popf
add
push
push
jb
les
idiv
sbb
jo
add
mov
sbb
push
sti
push
pop
imul
push
lahf
or
addl
inc
fwait
fs
sbbl
icebp
rorb
and
pop
mov
dec
add
xor
mov
adc
cmpsl
xchg
push
fdivrp
adc
imull
add
push
popf
cltd
cmpl
data16
in
push
lret
xchg
sub
mov
addl
or
stos
pop
leave
iret
add
int3
ja
jg
roll
mov
sbb
fimuls
add
insb
adcl
jp
fnstenv
jo
sbb
jle
addl
or
dec
mov
jecxz
xchg
push
dec
push
roll
inc
mov
ret
jnp
or
aad
fstpl
test
add
pop
enter
mov
add
scas
dec
sbb
push
stos
out
mov
xor
dec
ret
mov
out
adc
jnp
shrl
add
mov
dec
popf
add
mov
rolb
out
pop
adc
cmp
lahf
pop
mov
adc
outsb
lods
push
mul
orb
in
lahf
jl
xor
pop
into
pop
jp
or
dec
dec
add
jle
movq
push
push
and
sub
xchg
adc
xchg
lea
in
mov
fsub
add
xchg
sub
out
cmp
add
dec
push
fwait
xchg
or
add
adcb
ss
xor
sbb
add
mov
cmp
xor
xchg
mov
jg
andb
dec
nop
ds
jnp
sahf
fimuls
aaa
add
sbb
aam
xor
add
imul
add
les
add
xor
sub
mov
mov
add
js,pn
sbb
adc
add
push
jmp
addl
dec
dec
mov
mov
fwait
repnz
add
rcr
xchg
push
fistpll
aaa
pusha
jno
scas
int3
aad
pop
loope
jecxz
pop
xchg
dec
adc
or
cltd
and
test
fdivrl
mov
inc
add
aad
ljmp
add
rolb
lods
in
add
or
xchg
cmp
pop
xor
pushl
popa
jmp
xorb
xchg
js
xor
repz
fiadds
stc
loopne
in
push
pop
iret
or
daa
sti
shll
xor
cmp
aaa
lock
xchg
sbb
lret
xchg
sbb
sub
adc
inc
sbb
scas
leave
lods
add
out
mov
pop
cmp
and
mov
mov
std
and
or
int3
adc
xor
stos
mov
sahf
jo
adc
xchg
jne
lahf
fiadds
push
cmp
notb
and
rcrb
xor
fildl
mov
sbb
sub
jns
add
jecxz
push
xor
shll
adc
and
jne
outsl
icebp
add
jnp
add
or
ret
xchg
testl
fucom
add
cmpsl
and
push
repz
add
orl
inc
in
adc
icebp
push
stos
lret
add
add
cltd
roll
xchg
jno
mov
inc
add
push
lods
add
sbb
jne
sti
jecxz
pushf
ret
xor
mov
cli
btc
rorb
xchg
cmpsb
fmull
mov
aad
add
xchg
popf
push
pop
pop
loop
imul
daa
mov
pop
push
dec
sbb
inc
and
jg
jne
sub
inc
xchg
test
call
add
sub
fistpll
sbb
sbb
gs
xchg
cld
out
fistl
mov
inc
decb
and
mov
or
dec
and
rcrl
sbb
scas
add
stc
push
lock
or
pop
roll
mov
adc
cmp
xchg
jge
dec
cmp
or
mov
push
or
mov
rcrl
xor
notl
imul
int3
cmp
cmp
std
aad
push
sbb
cmp
push
push
xchg
mov
mov
add
fnstcw
cwtl
out
inc
push
push
jae
and
loopne
add
jp
mov
hlt
mov
loope
outsb
jb
in
adc
stos
add
mov
cld
inc
add
jl
xor
and
ret
insl
cmp
jb
xchg
sub
fsts
pop
mov
add
aas
scas
sub
cmp
test
xor
xor
and
push
and
sub
cmp
movsb
sbb
cmp
out
inc
pusha
cmp
cmp
cs
arpl
push
cli
dec
push
sub
popf
fnstsw
fdivl
pushl
sahf
cmpsb
mov
in
aas
popa
add
mov
fiaddl
stos
and
inc
push
fnstcw
bound
clc
add
popl
mov
adc
int3
and
mov
sbb
push
in
dec
insb
repz
sbb
sbb
and
pop
cmp
lock
fsub
add
mov
or
loope
push
sbb
cmp
int
push
mov
mov
push
pop
out
adc
hlt
and
fwait
dec
filds
lods
loopne
test
pop
and
out
jecxz
or
mov
dec
popf
lea
sub
in
dec
push
call
adc
pop
dec
add
dec
mov
xchg
mov
stc
jecxz
sub
sub
aam
stos
push
xchg
sub
pop
push
lahf
loope
lods
jo
cmpsb
mov
inc
rcr
or
scas
add
cmpsl
out
lea
add
push
cwtl
test
add
stos
ljmp
pushf
cld
test
fcoml
push
adc
cli
icebp
xchg
add
frstor
mov
mov
repz
adc
or
testl
inc
pusha
push
cmp
sbb
adc
mov
stos
jno
jge
pusha
sub
mov
inc
sub
pop
and
in
popf
bound
sbb
add
jp
fdivl
or
inc
push
icebp
bnd
cwtl
or
cmp
shrl
fwait
adc
push
les
xchg
add
adc
lds
pop
aad
insb
dec
pop
fnstsw
aas
and
cwtl
shll
insl
loopne
pop
dec
xchg
push
shr
mov
adc
les
je
push
mov
mov
outsl
mov
add
fidivl
inc
xor
insb
push
fidivrs
das
idiv
xlat
push
mov
dec
pop
jecxz
addl
inc
add
imul
mov
and
push
aas
xor
add
inc
mov
das
repz
mov
clc
dec
mov
xchg
xor
cld
addl
add
add
xlat
insb
jns
sbb
cwtl
add
cmp
xchg
out
pop
sti
add
jnp
adc
dec
pop
fsubrl
add
add
out
rolb
and
xor
je
rcll
mov
movsbl
loop
add
movsb
ja
lahf
ficoml
fimuls
pusha
popf
hlt
out
mov
in
pusha
mov
xchg
jb
xchg
adc
dec
popa
add
ret
ror
lds
sahf
sbbb
inc
pop
lret
add
loope
fdivrp
mov
loopne
sub
inc
iret
push
xor
add
pop
outsb
cli
adc
add
cltd
xchg
in
stos
add
pop
enter
in
pusha
pop
lret
fldenv
inc
push
xor
add
lods
rcrl
add
dec
inc
mov
jae
inc
add
dec
fnsave
push
adc
hlt
imul
xchg
enter
xchg
pop
inc
dec
stos
or
shrl
insb
add
mov
pop
add
xchg
and
test
and
negl
mov
add
test
push
data16
lock
or
cmp
xchg
sub
das
loope
pop
or
mov
or
outsb
shl
imul
rorl
mov
adc
ss
jae
mov
adc
lods
mov
ret
sti
add
in
xchg
loope
lret
shrl
lock
je
std
sbb
push
push
les
sub
mov
add
js
pop
loope
push
add
jbe
sub
xor
rclb
ret
pusha
sbbb
sarb
out
ret
adc
sbb
add
jl
aas
cmpsb
cli
sbb
aam
and
gs
or
test
pop
ja
add
stos
loopne
mov
jb
idiv
cld
and
xor
loope
mov
mov
inc
bound
je
out
cltd
mov
popa
xchg
xor
int
cmp
add
pop
fwait
and
cmp
push
dec
cmp
adc
std
int3
cmp
mov
inc
sbb
add
stos
mov
loop
xchg
and
movsb
and
cmp
aas
out
push
jp
pop
mov
sbb
xor
adc
xchg
add
js
popa
mov
stos
insl
insb
test
inc
mov
iret
mov
stos
add
repnz
push
insl
pop
add
loope
imul
loopne
nop
ds
je
xchg
fwait
pusha
mov
pop
jl
inc
add
test
adc
pop
cmp
insb
and
addl
pop
sub
xor
jge
jle
xchg
cltd
fmuls
loopne
xor
icebp
mov
sub
test
push
fistpl
push
add
adc
or
fadds
mov
add
mov
xchg
clc
mov
stos
xchg
dec
xchg
xchg
lret
or
and
lock
pop
inc
dec
mov
and
mov
loope
jbe
add
cli
ficoms
cmp
sbb
in
fwait
outsb
inc
stc
mov
pop
rol
fidivs
adc
and
lods
cld
add
loopne
lcall
xchg
fbstp
mov
iret
aam
outsb
rolb
imul
cwtl
add
add
sbb
inc
lea
mov
std
call
cmp
or
add
fnstenv
in
pop
pusha
lods
or
shll
sbb
movhps
loope
bound
push
lahf
add
aam
pusha
add
lods
pop
gs
repnz
add
mov
adc
xor
lret
pop
or
aas
rolb
movb
pop
mov
mov
jle
je
pop
jae
mov
sbb
mov
push
insl
cltd
sarl
addl
adc
cld
iret
add
mov
in
xchg
loopnew
lahf
add
ds
pop
test
mov
xor
sbb
mov
lret
roll
loopne
arpl
push
imull
dec
and
adc
sbb
sbb
push
xor
es
cmp
sbb
cmc
or
int3
adcb
out
add
mov
aaa
das
push
loope
mov
and
xor
movl
mov
in
fiaddl
outsb
mov
bound
scas
mov
dec
jecxz
jne
jno
addb
add
xorb
mov
xchg
sub
andb
out
rcll
popf
insl
mov
js,pt
sbb
jbe
cli
stos
data16
pop
fprem1
std
sub
les
dec
add
xor
add
mov
mov
cmc
ds
add
lods
push
or
into
addb
cmp
sarb
loop
test
and
jnp
js
fists
xor
add
scas
pop
and
inc
add
clc
insl
jno
shlb
add
out
pop
and
mov
jns
inc
xor
lods
add
jle
push
push
mov
add
add
int
pop
mov
adc
leave
jae
push
cmpsb
sbb
jle
daa
pop
xor
push
ss
aaa
add
cmpsl
pushf
int3
hlt
ret
push
push
lods
adc
and
sbb
add
in
and
arpl
ljmp
bound
ret
into
and
scas
adc
ret
pusha
out
aam
lods
into
add
mov
bound
icebp
sub
cwtl
cs
pusha
arpl
cmpsl
aad
add
push
sbbb
mov
add
testl
lahf
movsl
add
add
repz
or
sbb
adc
add
xor
cmc
cli
in
add
mov
mov
xor
aam
and
loopne
in
fdivr
add
in
inc
pusha
dec
mov
adc
mov
add
fcomps
arpl
fiadds
imul
or
and
ja
dec
jb
xchg
roll
sbb
adc
add
fiaddl
gs
add
fs
mov
mov
sbb
fwait
sub
ret
popf
add
adc
jecxz
iret
jo
sub
and
les
mov
aaa
and
xchg
or
inc
pop
out
mov
fsubrs
sbb
mov
test
je
das
cmpsb
add
test
or
inc
nop
add
fdivrl
pop
add
daa
mov
jg
aaa
jne
inc
dec
lahf
out
add
xor
pop
nop
cld
out
add
sbb
add
dec
add
inc
mov
in
cli
repnz
sbb
mov
stc
addl
or
lods
push
xchg
scas
add
test
add
loop
push
and
cmpsb
add
rolb
loopne
add
addr16
fistpll
jp
ss
adc
dec
push
mov
add
jnp
push
add
orl
and
mov
lds
pop
fstps
adc
push
clc
dec
rcrb
sbb
test
pusha
sti
fcomps
stc
add
popf
pop
out
lock
sub
inc
fmuls
xchg
dec
outsb
adc
ficomps
gs
in
popf
xchg
add
cwtl
inc
jp
inc
scas
and
cmc
or
dec
mull
daa
movsb
and
adc
mov
andl
nop
mov
add
mov
outsb
test
sbb
aam
xchg
stos
cmp
adc
loopne
js
sbb
test
loop
add
lret
outsb
xor
fildl
jmp
loop
sbb
sub
add
mov
das
sbb
xchg
inc
je
ret
inc
sbb
in
pushf
and
xchg
arpl
lret
je
xor
adc
addb
cmp
test
xorb
jb
lret
imul
pop
lcall
jne
mov
sbb
xchg
add
popa
inc
push
add
les
jle
aam
fsubp
pop
sbb
sbb
mov
out
iret
cld
add
bound
add
sub
mov
add
push
pop
popa
add
add
sahf
push
adc
jle
and
xchg
fiadds
or
inc
adc
sbbb
test
add
gs
jmp
insb
sbb
movsb
pop
xchg
pop
call
mov
lea
lcall
add
test
hlt
cmpsl
addb
rcr
xor
mov
pop
push
mov
pushf
pusha
add
lods
ret
pop
cmp
pop
add
push
lds
shl
jnp
jle
faddl
lods
xor
and
mov
psraw
add
sbb
enter
lea
mov
test
bound
sub
pop
popa
or
pushf
leave
sahf
ret
ret
cs
dec
dec
add
sbb
mov
iret
xchg
insb
jne
clc
add
mov
loopne
jns
loop
or
xchg
dec
push
sahf
lds
mov
inc
shrl
mov
int
adc
stos
cmpsl
test
add
push
push
cmp
in
sub
mov
loope
out
add
sar
dec
add
jle
or
in
add
adc
or
movb
sahf
ror
scas
imul
in
outsb
push
mov
sbb
sub
or
cmp
decb
mov
jnp
fadds
mov
mov
clc
push
mov
sbb
push
sub
imul
pop
hlt
mov
cmp
add
lock
stc
iret
xor
adc
inc
push
adc
push
sbb
sub
test
cmp
xchg
push
fs
out
add
inc
add
sbb
aaa
and
pusha
in
pop
in
xor
xor
sar
and
adc
das
and
cmp
xor
addr16
js
arpl
mov
dec
adc
jecxz
mov
jp
or
enter
mov
insl
inc
ret
xor
repz
xchg
into
xchg
jmp
mov
inc
test
xchg
add
mov
ja
repnz
and
je
pop
cmpb
mov
xor
push
dec
loopne
aam
inc
sahf
mov
or
frstor
subb
test
lock
cmp
pop
add
imul
pop
jbe
or
push
jecxz
popa
imul
test
sub
xchg
lods
cmp
mov
sbbb
push
or
data16
pop
mov
aam
xor
test
xchg
leave
mov
cmpsb
pop
lahf
inc
std
pop
scas
popa
sub
add
mov
sub
add
daa
fldenv
imul
mov
adc
orl
mov
mov
or
sub
jle
inc
inc
jae
cmp
mov
add
mov
testb
inc
jne
jb
fwait
mov
xor
pusha
add
xchg
inc
fiadds
in
pop
loope
push
lods
and
sub
inc
add
imul
rcl
fildll
insb
xchg
std
nop
sub
pop
mov
jecxz
xchg
push
jmp
ret
mov
add
xchg
dec
push
push
adc
jae
neg
scas
andl
popf
adc
dec
lcall
test
ja
cmp
lahf
aas
in
leave
inc
loope
stc
pop
xor
jb
or
add
adc
out
add
push
push
and
pop
mov
push
jge
jns
push
outsb
mov
and
js
add
pop
jmp
out
lock
mov
daa
jg
fiaddl
add
xchg
pop
sbb
jo
loopne
adc
stos
xchg
cli
test
add
xlat
jo
js
dec
mov
adcl
add
mov
icebp
sbb
aas
scas
sbb
or
and
addb
test
jb
mov
xor
push
movsl
mov
idivl
jno
add
leavew
pop
and
movsl
mov
xor
cmp
scas
aas
mov
or
shll
in
mov
dec
cmp
push
inc
sub
add
mov
pop
mov
xlat
xchg
mov
add
fsubrs
add
lret
fistpl
mov
test
ret
inc
stos
cmpsl
add
or
add
jb
fnsave
mov
mov
pop
pop
adc
repnz
mov
cmc
and
inc
js
add
jne
inc
jae
pop
daa
xchg
pop
add
or
arpl
cmpsl
or
movsl
fnsave
add
scas
lahf
add
fistl
into
add
mov
cli
fldl
mov
or
mov
add
mov
orl
loop
add
push
daa
pop
mov
push
inc
nop
xor
mov
push
inc
add
push
mov
outsb
pop
add
push
das
sub
insl
dec
mov
mov
add
icebp
dec
clc
add
enter
jl
inc
add
stc
mov
cmc
out
add
lods
movl
add
xchg
mov
nopl
repnz
inc
pop
ffreep
pushf
add
pop
aad
arpl
push
data16
enter
lcall
outsl
cmp
add
mov
shlb
jo
sti
mov
addl
in
pop
ret
cli
cmp
ss
les
or
jns
add
dec
lods
dec
sub
pop
lock
add
mov
or
xor
sbb
pusha
cmpsl
cmp
je
ljmp
arpl
pop
ret
pop
fwait
mov
clc
sub
leave
nop
push
sbb
hlt
xor
add
mov
out
mov
faddl
inc
push
jmp
jge
mov
popa
mov
test
fst
add
sbb
test
cmp
jns
lahf
int
add
fisttpll
adc
and
out
add
test
out
xor
pop
add
xchg
mov
addl
and
out
pop
add
xchg
das
jle
adc
lds
add
mov
add
inc
mov
mov
mov
cmp
lret
jb
xchg
or
test
adcb
pop
and
sbb
ljmp
mov
cmp
clc
push
lahf
lods
add
xchg
fisubrs
inc
aas
cmp
mov
gs
cmp
out
leave
xor
add
pop
aaa
enter
mov
adc
iret
inc
add
and
movb
mull
sbb
sbb
xor
test
and
or
ror
push
rcrl
add
add
add
dec
sub
jns
ret
mov
push
xor
push
add
nop
inc
dec
mov
mov
test
in
push
add
sbb
outsl
or
int3
loope
mov
imul
pushf
into
add
arpl
stc
add
dec
mov
nop
add
out
ret
lds
std
inc
pop
adc
push
ds
add
and
rcr
adc
inc
cmp
je
add
dec
mov
push
xchg
and
or
add
popa
and
add
loopne
fistps
loopne
sbbb
or
outsb
push
mov
mov
xor
test
add
div
pop
rol
loopne
in
ja
and
mov
iret
lea
cmpsl
cmp
mov
sbb
cmp
das
out
dec
mov
xchg
sbb
jge
lock
fstpt
lods
add
xchg
mov
sub
inc
add
jge
add
mov
out
cmpsl
add
push
and
xlat
lret
vmaxsd
or
fcomip
add
lcall
inc
jne
sbb
mov
ds
pop
popf
cltd
pusha
cwtl
cmc
ljmp
scas
enter
call
xlat
add
ds
add
push
mov
sub
push
out
hlt
adc
pop
das
add
ret
and
cmp
ret
add
ss
sbb
mov
data16
loopne
push
cmpsl
pusha
sbb
fwait
add
testb
ja
xchg
push
fildll
jl
push
mov
sbb
dec
push
loop
repnz
add
push
inc
hlt
lret
add
pop
push
jne
popf
pop
cltd
and
mov
mov
adc
cmp
test
adc
loope
scas
xchg
rolb
add
xchg
fwait
push
dec
pop
add
jb
insl
dec
gs
inc
mov
inc
sbb
adc
or
add
and
adc
add
je
pop
pusha
iret
test
add
movsl
inc
xor
mov
lds
loope
lret
in
adc
roll
mov
sub
std
fwait
lods
mov
loope
ret
xorl
stos
mov
cld
fld
cmp
out
sub
into
call
and
rep
lcall
jmp
sahf
push
push
add
cwtl
and
add
insb
int
pop
mov
fstpl
out
dec
shr
mov
inc
fs
add
cmovo
fmul
dec
jge
das
cs
sbb
pop
stc
add
dec
adc
adc
xor
add
faddl
pop
push
fxch
mov
pop
add
xor
mov
adc
outsb
les
loopne
out
jg
mov
add
pusha
mov
fdivp
enter
out
popa
les
cmpsl
fchs
mov
decb
aas
bound
xor
pop
sbb
sarl
jl
sub
mov
into
sbb
mov
int
adc
enter
add
popa
xlat
add
push
out
mov
cwtl
ficoml
add
clts
cmp
add
xor
or
ret
add
or
cltd
mov
sub
xor
xchg
xchg
in
mov
or
cmp
ds
pusha
ljmp
aad
jno
dec
cmp
push
jne
data16
imul
dec
or
repz
aas
pop
jecxz
adc
loopne
andl
iret
jmp
mov
add
ffreep
pop
loopne
loope
fwait
insb
and
in
mov
nop
rorb
adc
lock
notl
adc
and
fadds
roll
fwait
cs
push
ret
sbb
aam
push
add
or
and
rcr
pop
push
adc
push
jb
fsubrs
outsl
imul
cmp
adc
mov
bound
loopne
pop
jnp
imul
or
insb
imul
adc
jp
ljmp
xchg
mov
sbb
in
jecxz
repnz
pushf
adc
mov
rorl
fwait
iret
push
add
fistps
loopne
cmc
push
loope
adc
rorb
xor
enter
jo
pusha
inc
jnp
cmpl
xchg
xor
sbb
shlb
pop
lret
ds
jmp
xchg
dec
loopne
out
sti
xor
xor
xlat
jmp
and
shrl
cmp
call
leave
sub
sbb
add
int
mov
divb
jge
popf
xchg
add
mov
or
mov
les
add
outsb
imul
ret
adc
adc
push
inc
test
sub
mov
scas
push
int3
push
ljmp
and
adc
xor
add
out
inc
ds
jae
test
out
adc
xchg
pop
xor
popf
outsb
jge
sbb
scas
sub
add
daa
sub
add
inc
adc
pop
aam
fwait
aaa
shrl
push
rol
rcrb
dec
xchg
cmp
push
pop
xchg
loopne
add
cmp
adc
mov
fsts
inc
jle
scas
inc
testl
sub
xor
push
add
scas
sbb
or
add
std
orl
testb
mov
sub
push
pushf
sub
jp
or
ja
iret
sub
lea
test
mov
je
flds
xchg
and
cmp
outsb
movsl
test
add
or
cltd
or
mov
add
xlat
add
xchg
das
int
icebp
push
add
add
mov
loopne
add
sbb
jae
push
je
insb
out
pop
cmp
adc
or
das
lock
or
cld
push
call
les
shr
jo
add
in
roll
int
mov
push
sub
add
push
add
int3
ss
jmp
fistpl
sub
ret
or
icebp
jne
sti
pusha
dec
xor
mov
addr16
stc
inc
sbb
adc
mov
add
xor
cmpsb
mov
int3
popa
je
add
xchg
inc
mov
inc
lock
pop
js
sub
daa
dec
add
xor
push
movsl
add
xchg
xchg
repz
sub
test
mov
stc
add
iret
popf
int3
pop
sbb
xchg
jl
xchg
inc
add
aaa
dec
rcrl
cmpsl
jp
les
out
xor
jns
pop
push
cmpsb
xchg
test
cmp
shll
pop
jmp
imul
push
xor
sbb
jns
test
loop
sbb
rcll
enter
mov
je
xchg
aad
adc
ljmp
pop
and
clc
rcl
hlt
out
sbb
int
mov
lret
mov
xchg
push
and
and
jns
leave
mov
add
or
repz
add
out
or
test
stos
jae
rolb
cmp
xor
lock
mov
cmp
cmpsl
hlt
xchg
adc
insb
gs
fnstsw
xor
and
pop
int3
or
xlat
subl
pop
jp
out
add
and
hlt
mov
clc
leave
iret
std
ret
adc
jle
pop
gs
push
add
xor
add
push
lret
mov
jnp
mov
ja
pusha
mov
add
or
mov
out
adc
add
push
test
add
sub
push
icebp
add
ss
fsubrs
orb
xchg
jg
and
dec
lea
jle
icebp
jg
push
jmp
bound
add
inc
fadd
mov
test
adc
sbb
jecxz
jp
mov
mov
jge
loop
les
movsb
mov
mov
or
test
add
inc
mov
addl
test
adc
scas
out
mov
lock
das
add
adc
dec
and
xlat
mov
shrl
jnp
sub
mov
ficoms
jge
lea
aad
popf
sbb
add
pusha
mov
rcrl
xor
or
xchg
ret
out
add
push
jecxz
ljmp
add
pop
xchg
add
mov
add
add
bound
xor
leave
mov
clc
inc
cmp
mov
js
cld
test
sbb
jno
and
mov
pushf
cmp
add
scas
pop
add
lods
andb
mov
pusha
and
sbb
repz
shl
jge
jne
xor
aad
mov
inc
push
xchg
mov
rcrl
mov
sub
jnp
stos
add
sub
pop
leave
xor
add
add
in
add
popf
pusha
inc
cmp
add
pushf
mov
shll
movb
jle
add
sti
pop
ret
lret
pusha
mov
fwait
roll
fstps
lahf
pop
pusha
add
xor
in
xchg
or
xchg
sub
or
sarl
mov
jge
pop
imul
add
nop
lcall
jnp
icebp
repz
cltd
imul
stos
sbb
mov
dec
or
leave
mov
daa
push
adc
pop
mov
pusha
add
cmp
xchg
adc
inc
xchg
das
pop
cmpsb
outsl
adcb
mov
pop
push
adc
pusha
push
add
jg
inc
movsl
iret
cmp
das
push
xchg
loope
push
dec
mov
rcll
push
push
adc
adcl
jl
shlb
push
icebp
mov
cmc
xlat
pushf
js
jne
mov
aas
add
jnp
loop
push
push
aaa
jecxz
and
out
adc
sbb
sti
popa
add
mov
data16
jno
or
hlt
add
lea
lret
in
pusha
dec
ret
mov
adc
cmp
sbb
aas
jge
add
lds
mov
cli
jnp
fadds
add
push
xor
rolb
cli
cmp
outsb
out
add
push
pop
movsb
aaa
or
es
ret
iret
jnp
sbb
loopne
sub
inc
rclb
lret
das
add
icebp
aaa
in
pusha
popa
imul
or
outsb
adc
cmp
sbb
cli
add
ret
pop
push
dec
test
add
out
lods
xchg
xchg
add
mov
and
xor
ljmp
adc
je
in
loope
sub
shll
mov
add
loope
push
hlt
es
push
sti
mov
fimull
dec
pop
jge
adc
jecxz
sbb
stos
lock
lds
subl
and
jmp
inc
inc
cmpsb
add
pop
adc
out
add
cmp
or
outsb
cmpsl
idivl
or
sbb
xchg
add
push
add
add
fisubrl
add
add
mov
scas
arpl
sbb
stos
or
mov
rcl
xlat
into
mov
add
icebp
jbe
pop
add
hlt
inc
cmpsb
dec
push
pop
pusha
leave
mov
sbb
lock
pop
stc
mov
cmp
outsl
movsl
aam
pop
pop
loopne
fdivr
aas
add
add
mov
cwtl
add
gs
xchg
sub
xchg
push
mov
pop
mov
or
rcll
jmp
mov
dec
addb
ljmp
or
cmp
or
roll
jns
les
push
int3
lret
jne
add
and
call
inc
repz
pusha
fwait
out
lahf
mov
add
out
pop
dec
and
shl
and
jbe
dec
aam
inc
dec
orl
adc
mov
hlt
adc
mov
out
test
mov
hlt
fs
add
bound
push
pop
mov
mov
jp
lcall
jo
inc
shll
add
sub
bound
mov
xor
jns
insb
mov
add
and
dec
scas
out
nop
jns
push
mov
xor
outsb
inc
test
mov
add
inc
mov
jb
cli
dec
inc
es
mov
push
dec
mov
cmp
push
add
notl
inc
dec
cli
push
push
mov
int
outsl
sar
xchg
jg
push
mov
loop
cmp
adc
sbb
loopne
pop
cs
xchg
mov
in
add
jo
pop
push
pop
cmp
pop
jbe
pop
repnz
add
cmpsb
or
xchg
mov
clc
aaa
ja
and
and
imul
popa
arpl
jnp
mov
pushf
xchg
cmp
outsb
sahf
int
mov
xchg
inc
inc
int3
lcall
add
mov
movsb
sbb
push
adc
pop
jle
add
push
aaa
repnz
lods
push
in
fistpll
or
cmp
ret
pop
js
sti
in
sbb
scas
icebp
out
cld
add
adc
sub
ret
dec
sbb
xor
mov
push
mov
pushf
add
repz
bt
sti
pusha
mov
xchg
push
adc
cld
add
fmull
xchg
push
add
rcr
sub
add
jp
ja
repz
lret
mov
sub
mov
push
add
pop
imul
mov
aaa
sbb
outsl
mov
in
xchg
push
cmp
add
ret
add
or
popf
ds
cmp
sbb
jmp
adc
lods
mov
add
cmp
rcrl
add
mov
dec
ret
cmp
add
dec
push
mov
test
jge
cwtl
jp
push
addl
mov
mov
mov
lods
in
faddl
add
add
xchg
pop
popf
sub
inc
inc
add
push
cltd
dec
add
aaa
sbb
add
repnz
add
lret
bound
add
lea
xor
outsl
push
dec
add
lods
fwait
cmp
xchg
sbb
iret
inc
in
push
addr16
or
dec
xor
mov
ljmp
lea
je
pop
inc
add
gs
enter
jg
js
sti
repz
push
aaa
mov
mov
push
add
fdivs
add
add
inc
aam
pushf
loope
cwtl
mov
mov
dec
mov
cmpsb
mov
loope
xor
sbb
mov
loopne
fwait
das
adc
ficompl
pop
inc
dec
out
adc
add
in
sbb
cmp
js
pop
add
stc
dec
push
mov
adc
mov
xor
mov
cltd
dec
cli
pusha
jno
xchg
cmc
xorl
add
mov
imul
loopne
jmp
insl
push
or
std
pop
adc
out
cmpl
pop
mov
adc
mov
in
push
dec
and
mov
gs
cli
mov
inc
int3
sbb
and
add
imul
outsb
pop
lret
xlat
add
test
loop
add
movsl
mov
out
mov
adc
add
push
jb
outsl
add
cwtl
add
sub
sub
sub
fisubs
and
dec
sbb
sbb
mov
add
push
xor
loopne,pt
cli
movsb
mov
or
roll
nop
jb
jo
xchg
pop
push
add
int
sahf
loopne
dec
ret
or
sbb
adc
js
inc
adc
sbb
repnz
test
lret
push
in
and
loopne
pop
cmpsl
pusha
add
cmpsb
daa
add
imul
sbb
add
sbb
ret
cmp
loopne
ljmp
inc
loopne
mov
addr16
or
in
pusha
dec
movsb
andb
sbb
xor
scas
mov
inc
push
add
cld
faddl
das
adc
push
lods
dec
push
cmp
fnsave
gs
loopne
xor
lods
pop
jne
add
int3
pop
jecxz
pop
or
mov
out
pushf
shll
mov
fmuls
cmp
aas
pop
ret
bound
mov
out
cmp
pop
insl
repnz
xchg
cs
in
pop
loope
push
mov
jmp
mov
ss
xor
sub
push
adc
jl
popa
xchg
cwtl
adc
dec
and
add
xchg
dec
cwtl
pop
cmp
jge
inc
fninit
insl
mov
xor
pusha
mov
test
rcll
inc
aaa
add
cmp
lret
add
xor
add
and
in
adc
into
aad
pusha
cmpsb
data16
int
inc
sub
and
stos
loope
pop
pop
jp
push
jecxz
jge
out
mov
jle
sub
and
repz
fcmovb
imul
push
adc
sub
xor
xchg
and
add
test
mov
add
lret
push
xor
sahf
and
outsl
jns
fsubs
cs
sahf
lret
popf
mov
push
arpl
add
cld
and
and
mov
mull
jae
dec
rorb
hlt
jo
sbbb
inc
mov
decb
clc
lretw
loope
cmp
and
mov
cli
lds
mov
orl
arpl
mov
sbb
inc
fisttpll
and
push
into
out
add
stos
mov
adc
pop
sub
add
cmp
lret
out
add
mov
adc
mov
sbb
sbb
mov
out
mov
lcall
outsl
add
cmp
jo
insb
inc
daa
cld
mov
lds
movb
popa
lods
sbbl
push
movsl
es
stos
dec
dec
add
fistl
push
adc
cmp
iret
push
add
aaa
js
shll
mov
mov
mov
push
inc
sbb
add
ja
mov
add
or
mov
cmp
pop
js
incb
pop
in
into
add
xor
out
lcall
push
aam
sti
push
add
loop
adc
das
in
add
push
sub
push
mov
add
sbb
data16
mov
push
add
hlt
dec
ljmp
add
cmpsb
xchg
jbe
xor
mov
dec
loopne
sbb
icebp
add
xor
mov
add
jbe
adc
div
add
lods
add
or
mov
mov
in
cmpsb
mov
add
or
or
ret
imul
inc
mov
sbb
xchg
add
cmp
xorl
pop
shll
jnp
hlt
and
testl
test
pushf
or
mov
fistpl
mov
testl
xchg
out
aaa
es
loope
xor
dec
daa
dec
and
add
repz
jo
es
out
add
nop
lods
xor
stos
clc
insb
in
shl
xor
addr16
aad
adc
pop
mov
testl
and
enter
shrb
inc
cmpsl
or
cmc
cmp
mov
ret
add
add
fldl
mov
lahf
cmpsb
jno
out
xor
add
sbb
in
dec
cmp
pusha
mov
scas
js
jae
sbb
fadds
inc
es
in
fnstenv
xor
cli
nop
xchg
daa
sbb
add
add
aam
jnp
in
add
into
fdivrl
sub
mov
mov
sub
loopne
push
cmp
mov
cld
jns
sar
rol
xchg
mov
push
sbb
leave
in
mov
mov
push
addl
mov
and
loop
sbb
xlat
add
jl
stc
sarb
pop
sbb
add
hlt
aaa
flds
sub
dec
add
add
mov
and
add
and
cmpsb
ss
popf
adc
cmp
int3
mov
adc
jo
xchg
add
push
hlt
test
mov
addr16
movsl
mov
and
xchg
jb
xchg
jecxz
shl
or
pop
cmpl
out
sbb
xchg
hlt
sub
loopne
jns
push
std
pop
test
or
bnd
popf
addb
or
jl
jg
push
mov
mov
dec
push
pusha
sbb
shrb
inc
adc
ret
or
sbb
add
cltd
enter
add
popa
addr16
cmpsl
jo
outsl
shlb
add
dec
arpl
sbb
mov
repnz
sahf
cwtl
pop
add
in
lods
and
xor
call
repnz
lret
dec
push
adc
shll
aas
add
add
and
add
ret
daa
and
adc
cmp
repz
stos
popf
xchg
mov
loope
rclb
adc
lds
ds
inc
xor
loopne
dec
enter
xchg
jp
sti
push
in
inc
mov
and
lcall
fldl
jmp
ror
adc
addl
sub
add
jp
jmp
aam
add
mov
sub
push
lods
sub
aam
cwtl
fwait
into
inc
push
in
mov
add
out
jo
cmp
pop
cmp
insl
pop
add
pop
and
jecxz
loop
adc
iret
fwait
cmc
adc
push
jp
pop
adc
std
lock
add
mov
cmp
hlt
stc
dec
xor
mov
shl
ret
stos
andb
test
push
sub
add
mov
sbb
jb
inc
xor
mov
ret
add
inc
or
mov
pop
mov
sub
cld
jb
add
mov
jp
add
push
adc
adc
or
push
pusha
jg
pop
push
xchg
fcoml
add
lret
out
or
ss
push
adc
in
mov
mov
sti
mov
push
cmc
ljmp
addl
mov
dec
gs
mov
push
ljmp
outsb
pop
and
push
xorb
mov
outsl
das
sbb
jbe
fs
faddp
iret
jnp
dec
sub
push
or
popa
ja
add
lret
sti
stos
sahf
sub
aaa
xchg
xorb
sbb
mov
roll
mov
aam
into
popa
ret
adc
mov
add
jo
mov
add
and
xor
add
aam
aas
mov
lret
cs
xchg
jecxz
test
mov
dec
scas
les
xor
sti
ds
push
mov
rorl
rolb
pop
and
and
enter
push
out
dec
rolb
inc
jo
jno
in
and
cli
js
push
push
dec
add
cmp
xchg
int3
fbstp
inc
xor
scas
cmp
sbb
lds
add
es
adc
xor
addr16
add
loopne
xchg
sub
lcall
arpl
daa
add
adcb
or
inc
cmp
push
xchg
add
test
lea
adc
scas
in
loop
or
pushf
pusha
jecxz
sahf
fdivs
pop
cs
cmc
test
pop
and
shr
pop
lea
add
inc
sbb
mov
cmp
jmp
inc
shll
sbb
out
arpl
push
add
orl
bound
jg
popf
mov
add
push
or
call
add
movsl
mov
cld
add
int
repz
mov
jno
loopne
push
add
idivb
mov
pushf
inc
jmp
dec
or
dec
aaa
mov
out
sbb
adc
push
add
add
jg
repnz
push
aad
sub
mov
lret
add
push
cmp
add
std
adc
or
insb
js
push
jnp
add
cwtl
jae
sub
xchg
out
mov
and
inc
mov
mov
dec
aaa
mov
adc
icebp
data16
mov
adc
and
mov
or
sub
push
jo
mov
mov
push
xchg
mov
rorl
shll
xor
and
imul
lea
loopnew
adc
sub
jmp
ret
in
add
and
cmpsl
lods
fiadds
xlat
adc
mov
mov
ret
bound
sbb
in
add
out
push
movsb
out
or
stos
mov
movsl
mov
pop
jp
mov
mov
in
shll
push
sub
fidivs
pusha
push
inc
mov
lock
jp
add
sbbl
ret
mov
enter
hlt
loope
lret
hlt
inc
sbb
ret
rcll
jmp
xor
push
xor
scas
aas
aad
movsl
pop
in
mov
jmp
push
addr16
mov
lea
sub
add
ljmp
pop
sub
push
fnstsw
push
pusha
add
mov
inc
lret
xchg
adc
arpl
dec
mov
sysenter
and
mov
jecxz
xchg
std
test
aad
loopne
xor
int3
xchg
icebp
daa
pop
mov
add
dec
orl
add
xor
out
xor
repnz
add
or
adc
sbb
dec
aas
out
pop
or
movsb
mov
mov
adc
enter
lods
sti
mov
rclb
add
adc
add
cmc
inc
and
incb
pushf
ljmp
jp
jb
mov
cmpsl
dec
idivb
pop
popa
cmpsl
xchg
push
adc
or
xor
xor
ret
mov
xor
faddp
shlb
pop
push
mov
fiaddl
sti
lcall
or
cmove
xor
inc
add
notb
add
dec
out
int
frstor
add
sub
add
and
cs
and
std
pop
mov
gs
add
mov
mov
push
mov
mov
and
mov
sub
add
insb
popa
mov
sbb
pop
and
lret
add
shl
aas
movsl
xchg
dec
mov
pop
pop
and
loopne
test
scas
xor
xchg
aam
movsl
aaa
jge
mov
and
addl
lods
add
pop
jle
lock
outsl
out
cwtl
push
roll
nop
push
fcomi
loope
add
inc
insb
ds
cmp
les
fsub
dec
stos
inc
jo
imul
fs
rcl
xchg
in
movups
push
fstpl
mov
adc
mov
loope
daa
scas
fsubs
divl
add
subb
mov
test
jns
add
cs
int
je
or
adc
mov
cwtl
cmpsb
add
push
call
add
push
adc
xlat
movw
jp
mov
mov
lret
add
je
gs
xchg
add
clc
jp
adc
pop
cmpsb
and
scas
and
sahf
pushf
jo
push
aaa
xchg
pop
loope
xchg
repz
jne
inc
or
rcrb
cmp
rolb
shrl
int
ret
or
mov
rorb
mov
jecxz
add
pop
add
cmovg
inc
sahf
push
loopne
sub
movsb
das
dec
cld
jnp
ljmp
adc
and
and
jne
add
lea
adc
jle
mov
push
or
xor
jo
pop
dec
mov
jns
std
jae
loopne
pop
ret
mov
fsubl
cmp
adc
cmp
xchg
mov
add
into
adc
mov
dec
sbb
mov
mov
add
xchg
sub
lods
lcall
fisubrs
popw
pop
mov
icebp
popa
xchg
aam
popa
test
cs
shrb
into
call
add
mov
sarb
pop
test
std
cli
add
dec
stc
add
xor
mov
pusha
mov
aas
and
mov
mov
aaa
mov
pop
lock
add
lret
add
lret
pop
in
arpl
inc
popf
jl
loope
add
fs
lcall
add
call
xchg
rclb
or
outsl
push
add
das
lret
jb
ja
rorl
pavgb
movzwl
sbb
push
add
jno
mov
add
dec
and
mov
mov
enter
jno
xchg
pop
fstpl
jp
pop
and
or
arpl
inc
daa
mov
adcl
xor
or
pop
aad
in
push
mov
shlb
cmpsl
and
add
pop
mov
add
pop
ljmp
cwtl
xorb
andl
cs
inc
mov
push
fsubr
sbb
scas
mov
stos
add
rcll
scas
and
pusha
test
inc
mov
rcrb
inc
in
push
sbb
jle
xchg
push
popf
sbb
add
cmc
jp
iret
jae
and
into
aas
cwtl
dec
cltd
rcrl
jnp
loope
sar
lahf
cmp
and
mov
in
pop
arpl
sub
out
dec
add
xor
mov
je
xchg
mov
add
lock
push
sbbl
add
jl
iret
lret
call
sarb
fwait
xchg
xchg
in
mov
insb
xor
inc
ret
loop
cwtl
arpl
xchg
jo
adc
repz
xchg
ffree
jl
repnz
sbb
add
push
pop
cmpsl
outsl
mov
jbe
mov
das
xchg
add
inc
hlt
sub
pusha
adc
and
popf
ud2
add
mov
inc
aas
push
dec
popa
xor
lods
loope
movb
jle
test
js
jmp
mov
and
adc
mov
adc
adc
jp
out
jge
jmp
dec
sbb
inc
mov
push
push
adc
add
sbb
xchg
cmp
dec
add
inc
gs
dec
int3
and
test
add
test
ret
add
jae
iret
add
adc
and
and
icebp
mov
jecxz
fwait
xchg
adc
add
sub
xchg
cltd
cmpsl
pop
mov
mov
mov
add
out
test
and
pop
mov
xchg
or
push
mov
adc
mov
cltd
xchg
rcr
fiaddl
dec
jne
adc
or
push
out
rorl
dec
add
xchg
adc
dec
ret
or
jp
add
mov
dec
mov
pop
pop
ret
daa
push
cmp
in
mov
cmpsb
cmpl
dec
or
enter
mov
fildll
outsl
add
imull
stc
data16
jle
jne
out
sub
hlt
adc
repnz
pop
and
mov
xor
pop
clc
leave
push
lods
mov
cld
rcrl
ret
pop
inc
mov
fsubl
dec
dec
nop
sbb
into
add
repz
je
scas
mov
mov
clc
icebp
cwtl
sub
adc
ljmp
or
clc
and
adc
sub
jns
out
js
imul
cmp
repz
testb
mov
fildll
in
nopl
and
sbb
mov
adc
mov
popf
xor
pop
xchg
add
dec
stos
xor
mov
mov
add
push
mov
stc
adc
pop
fiaddl
aaa
or
mov
push
cs
push
pusha
negl
and
int3
ja
sbb
out
iret
in
or
add
sbb
cmpsb
jecxz
fwait
inc
loopne
data16
sbb
mov
imul
test
in
bound
jl
leave
js
incl
add
loop
cmp
adc
or
pushl
inc
pop
or
mov
add
fnstcw
loope
loop
mov
push
pop
out
mov
add
adc
test
add
push
adc
bound
sbb
add
std
ret
pop
adc
test
xor
lods
mov
popf
add
lcall
shrl
jp
pop
sti
fcomi
cmp
push
popf
push
sbb
push
add
inc
mov
or
push
cmc
loope
add
jbe
popf
in
jmp
add
or
jge
lea
add
loopne
movsb
cmp
mov
jno
dec
adc
in
aaa
mov
je
or
add
in
add
or
inc
dec
inc
add
cmp
pop
adc
add
dec
sub
mov
in
imul
cli
in
jmp
into
int
or
loopne
ljmp
inc
add
cmp
pop
mov
jecxz
dec
lret
pushf
mov
fucom
sahf
pusha
addb
adc
adc
dec
cwtl
jo
loop
sub
mov
dec
adc
mov
jns
movsb
repz
and
dec
and
pop
mov
addb
xchg
aam
filds
xor
sbb
lock
pop
add
divb
pushf
inc
and
and
mov
or
cmpsl
adc
lret
mov
xchg
adcb
cli
add
pop
inc
xor
imul
adc
int3
push
add
mov
add
xchg
push
xchg
push
inc
outsb
add
loopne
repnz
mov
add
iret
incl
addr16
and
add
enter
std
or
xor
add
lcall
add
scas
mov
pop
pop
mov
jle
jne
cmp
add
push
fnstsw
sbb
icebp
aam
andb
fcmovnbe
cwtl
insb
clc
adc
xchg
pusha
out
in
pop
inc
mov
add
lcall
loopne
sahf
sub
lock
or
leave
addb
mov
arpl
dec
mov
popa
adc
test
xor
fistpll
jecxz
dec
cmp
mov
out
pop
repz
cmp
lds
add
add
sbb
inc
sub
and
stos
jns
mov
popf
inc
xlat
loop
sub
add
shll
imul
cmp
pop
dec
or
xchg
es
push
pop
test
dec
sub
adc
pop
add
mov
or
add
pusha
dec
out
xchg
icebp
jo
fisubs
sar
add
jge
jl
lods
jmp
popa
sti
dec
loopne
mov
mov
push
add
aam
or
add
ljmp
mov
pushf
adc
add
cmpsl
dec
add
mov
rcrl
jnp
inc
arpl
and
fldl
insl
dec
sub
clc
loope
lcall
je
stc
insl
clc
adc
push
ret
insb
xchg
in
cmpsl
and
imul
pusha
inc
xor
mov
adc
push
test
das
add
push
sbb
addr16
add
mov
pushf
ret
and
sub
add
pop
imul
fisttpll
xchg
xchg
and
xor
adc
loopne
hlt
sbb
jo
inc
mov
xchg
inc
or
pop
imul
adc
bnd
jno
int
mov
pop
sub
lock
mov
scas
lods
dec
pop
mov
cmpsb
out
add
cmp
xchg
insb
out
rorl
add
sbb
adc
sbb
or
push
iret
jg
sti
adcb
sub
scas
repz
add
jbe
mov
sub
add
sbbl
pop
push
repnz
sub
adc
adc
cmp
sahf
aas
dec
ss
mov
and
es
cli
xchg
push
ret
mov
mov
shlb
rolb
das
dec
mov
stos
add
jmp
cmpsb
pop
push
ja
jl
das
jno
xor
mov
gs
ret
in
mov
dec
adc
rolb
add
hlt
sahf
das
outsb
pxor
add
jecxz
push
test
add
inc
push
jp
sbb
fstpt
lods
gs
pop
nop
addr16
pusha
inc
sbb
cwtl
pop
and
jg
push
add
xchg
scas
push
or
aad
mov
rcrb
add
test
iret
and
int3
jmp
add
xor
lods
xor
scas
shl
es
sbb
sub
pop
std
inc
push
mov
sbb
add
stos
sarl
push
daa
mov
or
dec
add
test
adc
mov
leave
add
or
es
hlt
orl
jne
das
inc
sbb
aas
and
mov
insl
mov
mov
xchg
xchg
fsubrs
pop
mov
inc
or
adc
out
jae
inc
add
dec
sti
jbe
into
mov
movsl
mov
push
cmpsl
add
dec
jno
pop
test
xchg
and
out
insl
sub
add
push
sbb
and
push
adc
pop
mov
popa
notl
imul
lret
addl
jae
pop
add
insb
orb
loopne
add
je
add
pop
mov
js
lods
push
insb
sub
xchg
sub
repz
xor
cmp
stc
fisttpll
push
stos
dec
loopne
adc
push
pop
mov
add
sahf
cmp
rolb
inc
jns
rcrl
mov
pop
push
das
add
pop
pop
jl
push
xchg
xchg
mov
inc
loopne
jge
adc
js
jno
mov
xor
add
xchg
mov
add
jge
popf
imul
fcomps
sbb
hlt
add
push
mov
xchg
outsb
pusha
push
dec
repz
and
add
sub
inc
sbb
jg
jmp
or
jae
nop
or
loope
mov
int
xchg
add
fiadds
pop
test
sub
and
sbb
int3
and
or
pop
cld
sbb
jmp
js
in
mov
xor
push
xorl
invd
bound
scas
push
lcall
add
rcrl
push
out
pop
add
jge
stos
daa
mov
scas
fidivl
loop
cmp
add
inc
adcl
mov
sbb
mov
aad
and
test
or
adc
add
jl
clc
push
das
outsl
mov
cmpsl
xchg
fs
xchg
ret
pop
pushf
pop
sahf
and
ljmp
pop
jecxz
mov
notb
pushf
dec
cld
jns
xchg
roll
push
add
push
outsl
enter
dec
mov
inc
mov
lret
sarl
adc
add
gs
pop
lahf
pop
add
or
lock
lea
adc
std
xchg
call
xchg
das
and
mov
loope
push
pop
sbb
add
mov
add
sbb
sarl
xor
jo
pusha
popa
cmp
or
jge
gs
xchg
adc
ljmp
outsb
push
mov
insb
xor
adc
add
mov
sbb
scas
jne
orb
xchg
lret
add
jge
pop
pop
cmp
add
or
sahf
add
data16
add
jb
add
in
pop
add
mov
ljmp
ljmp
mov
icebp
mov
sbb
fdiv
ret
rolb
pusha
loope
stos
inc
pop
ss
jbe
sub
loop
loopne
shll
loope
adc
mov
lahf
ret
clc
sub
dec
jb
jmp
add
mov
movsl
jecxz
sbb
out
add
fnstcw
int3
pop
xchg
add
ljmp
std
repz
or
add
test
dec
insl
mov
pushf
ret
sbb
mov
lret
push
nop
add
fdivrl
add
xchg
mov
movsb
cld
shrb
and
rol
add
sti
push
fistps
jmp
std
daa
enter
mov
int
inc
loop
out
jecxz
mov
jmp
ror
pop
test
jnp
push
gs
dec
dec
fnsave
xchg
fwait
aaa
ret
push
addr16
ja
jp
cmp
dec
das
stos
subl
mulb
out
add
jb
sti
es
mov
sub
add
add
adc
dec
leave
mov
mov
mov
adc
popa
pusha
ja
test
mov
jl
or
xchg
popa
pop
fcmovu
add
cmp
aas
mov
dec
inc
sbb
add
jb
pop
movsl
in
add
pop
mov
stos
add
jmp
pop
inc
jecxz
imul
sbb
leave
lret
sub
mov
xchg
and
add
dec
push
movsb
repnz
mov
and
mov
pop
push
iret
cli
add
shll
popw
dec
out
cmp
cmp
push
pop
or
arpl
imul
jno
sahf
pop
mov
into
pop
add
dec
sbb
add
mov
filds
jbe
inc
js
ljmp
popa
mov
insl
nop
jne
xor
loopne
ljmp
pop
or
push
loopne
sub
xchg
data16
add
sub
cmp
sub
and
test
adc
xchg
add
scas
and
jecxz
int
add
pop
inc
or
sub
lahf
add
lods
dec
mov
leave
adc
pop
lock
data16
xor
adc
push
add
fs
push
mov
xchg
jne
or
lret
add
ljmp
fidivl
cmp
icebp
outsb
pop
jecxz
mov
add
test
shrl
ds
inc
adc
push
add
in
cs
popl
das
cs
xor
icebp
int
popf
jmp
pop
cmc
add
pop
ret
inc
sub
test
loopne
ljmp
push
adc
popa
add
pop
stos
addr16
test
sub
vmwrite
jge
xchg
add
pop
inc
arpl
adc
and
sbb
inc
pop
inc
pusha
cltd
jns
add
or
ret
addb
pop
sbb
mov
or
pop
lds
cmp
adc
pop
jge
aaa
push
push
pop
mov
dec
outsl
sahf
cmp
test
lcall
add
push
mov
jno
jp
inc
mov
add
pop
and
int
lcall
cmp
and
sbb
arpl
in
jb
stos
dec
xchg
adc
adc
or
add
xchg
lret
add
xor
shll
jmp
lods
lahf
adc
mov
outsb
sub
pushf
fwait
mov
pop
fcomi
add
hlt
pop
inc
pop
stos
pusha
or
cmp
xor
icebp
inc
in
std
mov
setge
mov
and
adc
ret
add
xor
addr16
pop
sbb
jae
aam
cwtl
add
scas
add
sbb
stos
and
mov
or
xchg
jb
ja
add
inc
lret
sarl
out
imul
mov
fcoml
shrb
add
pop
push
xor
fldt
sub
lahf
add
into
cmp
mov
cmpsl
repz
lret
fildll
cmpsl
dec
xchg
adc
test
dec
pmuludq
add
and
xlat
add
inc
xchg
mov
into
in
and
adc
popf
or
pop
jmp
movsl
or
or
add
and
or
jl
mov
cli
rcrb
add
addr16
aas
jns
push
pop
cmp
adc
mov
popa
add
or
xor
adc
xchg
lods
xchg
and
das
sub
int
and
adc
mov
add
sbbl
xchg
cs
sub
dec
repnz
fimuls
sbb
add
pop
das
stos
ds
in
popa
lret
in
mov
or
das
cltd
js
pushf
jnp
lret
sub
test
ja
inc
add
mov
flds
add
xchg
mov
cwtl
sti
xor
inc
push
cs
mov
pop
ret
and
imul
lcall
pop
lahf
mov
or
inc
jecxz
push
repnz
pop
ljmp
xchg
movb
idiv
sub
jns
or
push
aam
mov
daa
mov
pop
testl
and
cmp
xchg
xor
mov
add
xlat
fstp
data16
int
ss
popf
out
sbb
inc
loope
and
mov
ficoml
stc
sbb
or
mov
cld
pusha
inc
jns
ret
mov
add
aaa
jge
cs
adc
bound
cmp
adc
or
xchg
loop
pop
punpcklbw
jno
push
dec
jb
add
mov
push
pushf
in
mov
testl
push
pop
dec
mov
add
addr16
fmulp
loopne
mov
jle
sbb
add
cmp
out
ljmp
fiadds
test
repnz
das
dec
adc
out
pop
pop
mov
mov
insb
cmp
pusha
scas
mov
sbb
mov
sbb
mov
ret
je
xchg
or
fildl
dec
add
and
clc
add
inc
pop
cmp
cmp
int3
js
movsl
sbb
mov
hlt
pop
adc
lock
and
xlat
add
arpl
adc
rolb
xor
mov
add
jbe
xchg
pop
cld
mov
jns
aam
aaa
mov
clc
loopne
movsb
dec
cmpsl
negb
adcb
sahf
pop
or
movsb
setp
jg
inc
push
out
je
xchg
call
inc
jno
push
add
rclb
stos
add
sub
xor
add
fstps
lcall
mov
and
test
ret
sub
cmc
sti
in
aaa
inc
cmpsl
add
ret
int3
add
add
and
cs
in
adc
add
or
add
pop
call
lcall
push
jno
test
add
xchg
xchg
dec
inc
add
movsl
and
das
dec
rorl
cmpsl
lods
stos
add
add
jne
mov
adc
fs
rorl
add
jmp
mov
pop
cwtd
push
add
enter
popf
mov
pusha
xlat
add
sub
sahf
sar
adc
leave
fnstenv
adc
sbb
mov
aad
and
outsb
sbb
jns
xchg
mov
or
adc
add
outsb
movsl
add
dec
adc
mov
test
mov
shrl
lcall
fmuls
push
aad
adc
add
loop
das
cmpsl
xchg
rclb
sbb
loope
mov
and
dec
cmp
push
push
sbb
adc
mov
add
sti
insl
mov
stos
aad
xor
test
test
or
das
lods
add
xlat
movsl
aad
in
push
add
icebp
and
jbe
fwait
stc
clc
fnstsw
or
mov
mov
pop
push
add
sub
rorb
push
adc
xor
add
cmp
sub
xor
add
jnp
jmp
shll
and
mov
add
sub
les
push
push
sbb
and
or
sar
add
mov
es
popf
adc
push
insb
jmp
aad
leave
cmp
push
or
xor
sbb
and
mov
and
xchg
jb
cltd
mov
dec
push
incl
lret
and
cli
addl
or
xor
mov
int
inc
jns
popa
and
sahf
adc
add
or
add
and
mov
xchg
adc
rorb
xchg
and
xchg
jbe
cld
push
xor
mov
mov
out
inc
xchg
inc
rcr
or
add
fstpl
push
push
out
or
popa
jle
test
mov
imul
and
out
add
pop
mov
aas
pop
push
roll
loop
mov
imul
insb
lds
repnz
mov
jnp
jno
loop
sbb
lock
xchg
mov
iret
add
lds
insb
add
dec
loopne
cltd
mov
sub
sahf
cmpb
cs
or
push
pop
sbb
xchg
mov
mov
mov
insb
add
mov
je
add
jne
stc
and
sbb
dec
sbb
sub
repz
push
jge
adc
bound
dec
icebp
mov
addr16
add
adc
push
adc
mov
jge
push
push
xchg
fcompl
in
mov
add
pop
mov
cltd
lcall
and
lret
stc
jnp
lea
dec
mov
dec
adc
mov
pusha
jb
pop
call
cmpsb
add
test
adc
add
mov
iret
stc
add
xchg
sub
push
sub
out
push
and
cmpsl
std
inc
xchg
call
cmc
mov
mov
addl
and
movl
enter
out
and
add
push
addr16
xchg
sub
xor
movsb
xor
repz
into
cmp
adc
mov
xchg
or
cs
imul
sahf
add
test
or
mov
mov
cltd
add
mov
xchg
add
f2xm1
jae
push
mov
jmp
dec
add
add
add
stc
stos
sub
pcmpgtw
adc
mov
xchg
loopne
sahf
movsb
out
push
neg
or
add
out
iret
lds
xchg
xchg
cltd
out
cs
add
xor
test
loopne
mov
shlb
inc
add
icebp
dec
mov
push
push
adc
or
mov
arpl
leave
mov
jo
and
push
loopne
aaa
cmp
sbb
testl
mov
and
pop
dec
jo
xor
inc
mov
sbb
imul
push
and
mov
fwait
sub
mov
popa
xchg
lods
add
dec
es
mov
sbb
inc
xchg
add
scas
and
mov
popf
sbb
cmp
js
mov
add
outsb
loop
dec
das
or
rcrl
icebp
daa
jno
loopne
jmp
add
popf
sub
add
jb
cmovbe
push
xor
rcrl
cmp
mov
or
jb
mov
insb
dec
fwait
xor
loopne
imul
and
daa
adc
push
popf
adc
pop
jle
lret
loopne
add
xchg
cmpsl
and
push
shl
xor
push
lahf
leave
enter
aas
loope
fadds
cmpsl
dec
ss
sbb
add
xor
cli
sarl
and
test
aas
push
loop
and
and
cs
decl
push
mov
dec
push
sbb
rcll
rcrb
jno
cmp
jmp
dec
mov
sbb
dec
xor
int
xor
jnp
lods
imul
push
loope
mov
bound
add
mov
cmpsl
aaa
sub
lret
add
jnp
test
popf
pop
pusha
mov
cmp
add
imul
mov
add
adc
lret
pop
daa
fcomp
add
sbb
xchg
add
cmp
adcb
pusha
mov
xchg
aad
outsl
adc
xor
jne
dec
ret
mov
hlt
adc
mov
into
and
add
shlb
ja
add
aam
mov
add
mov
mov
je
daa
pusha
push
loop
fwait
test
adc
cmpsl
jge
mov
daa
mov
inc
adc
stc
xlat
add
aaa
add
push
inc
pop
jl
jo
sbb
xchg
repz
ret
in
jne
notl
push
xchg
cmp
in
sahf
pusha
je
imul
int
fcmovnbe
pop
mov
or
fcompl
aam
mov
xor
sub
fbstp
repnz
add
std
cli
mov
cmp
add
pop
pusha
add
inc
cs
shl
es
hlt
adc
push
cmp
lret
ja
or
dec
cmp
jno
aas
jl
sbb
mov
mov
jg
es
add
movb
ja
push
sbb
pop
mov
ss
add
inc
pop
dec
sub
push
jecxz
cwtl
inc
jns
imul
or
push
mov
add
loopne
adc
xchg
xchg
sbb
movsbl
and
inc
or
jge
aad
xor
out
ror
icebp
mov
add
dec
cwtl
jg
mov
and
mov
fistpll
inc
add
or
add
rcrl
sbb
adc
add
loope
xor
fdivs
add
sbb
adc
push
lret
push
scas
cs
jae
or
adc
addr16
mov
mov
ret
ds
sti
or
push
loope
addr16
lret
clc
test
out
in
xchg
pop
psubb
dec
add
sarl
cmp
mov
scas
xorb
cli
xchg
push
int3
test
and
xchg
mov
add
xor
leave
mov
jmp
xor
scas
add
pop
imul
sub
mov
xchg
mov
mov
in
xchg
add
lahf
sti
es
and
cmp
shrl
xchg
insl
mov
add
lods
ret
add
lret
movsl
in
loopne
cwtl
mov
jl
sbb
jp
shlb
add
ffreep
movb
in
std
mov
ss
and
or
clc
arpl
jb
inc
jnp
repz
add
lock
mov
adc
aaa
push
xchg
out
mov
add
ret
inc
aam
rol
lahf
lcall
roll
or
or
sbb
dec
cs
imul
sbb
shll
mov
mov
dec
jnp
aas
adc
lahf
pop
ret
insl
rorb
dec
dec
add
or
inc
jbe
mov
imul
sub
add
mov
cmpsl
mov
sub
push
jb
sub
add
xorl
dec
aad
cmc
in
add
xchg
add
mov
cmp
rol
movsb
orb
loopne
sbb
out
cmp
xchg
int3
mov
add
sub
jl
andb
dec
lcall
int3
ficomps
rclb
pop
mov
pop
mov
push
ljmp
scas
push
add
jge
ret
add
in
cld
pop
and
push
add
nop
cmp
lods
leave
add
int
xchg
inc
mov
mov
mov
mov
add
pusha
mov
icebp
jnp
out
mov
add
pop
and
fwait
cmp
pop
fistpll
out
add
loop
ret
xor
or
sbb
mov
jo
inc
mov
push
add
cmp
aaa
xchg
mov
bound
rorl
loopne
mov
es
shlb
mov
or
inc
xchg
out
outsl
aaa
and
xchg
and
lods
inc
xor
dec
adc
inc
jno
or
sub
aas
and
fists
push
cld
dec
add
icebp
inc
pop
iret
jl
adcl
hlt
jmp
inc
add
fwait
lods
cmp
push
loopne
sbb
push
xchg
addr16
adc
sbb
mov
loopne
leave
imul
jbe
sbb
ljmp
lods
mov
jl
popf
mov
add
fstps
outsb
ljmp
cmpsb
movsl
leave
xchg
push
and
sbb
popa
xor
xchg
jae
mov
and
jecxz
and
dec
fildl
scas
aas
add
shrb
movsl
adc
call
out
xor
fwait
mov
lock
and
jo
repnz
clc
sbb
cmpb
std
loopne
mov
inc
xor
lds
popf
jecxz
add
push
and
add
imul
roll
outsb
xchg
decl
lret
shrl
and
sbb
jo
addl
mov
clc
std
inc
and
adc
and
leave
call
mov
add
or
lock
and
call
or
cld
or
mov
dec
cld
dec
cld
dec
cld
push
cld
push
cld
push
cld
push
cld
push
cld
push
cld
push
cld
push
cld
pop
cld
pop
cld
pop
cld
pop
cld
pop
cld
pop
cld
pop
cld
pop
cmp
add
and
inc
cmp
sub
lret
aas
icebp
aas
adc
aas
cld
aas
sahf
pop
addb
data16
and
cmc
cmpsb
rol
inc
mov
or
or
push
iret
iret
cld
addl
pop
shll
loopne
pop
gs
call
fxtract
mov
cmp
daa
cmpb
cmp
cmp
cmp
cld
enter
mov
int3
cld
mov
push
cld
repnz
aaa
cld
pop
cld
sbb
push
cmp
inc
inc
cmp
sub
int3
sbb
cmpl
mov
inc
mov
mov
aad
arpl
push
add
cmp
daa
inc
outsb
inc
out
lock
cmpsl
rol
je
out
out
out
out
rol
push
leave
shrl
mov
jmp
push
stc
repz
xchg
stc
jne
push
stc
xchg
stc
jp
sti
stc
popf
stc
fistpll
xchg
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
push
arpl
enter
lods
pop
ljmp
cli
xchg
andl
fldlg2
push
mov
jmp
stc
mov
lcall
pop
out
out
out
out
out
out
out
out
out
out
mov
out
out
out
out
out
out
out
out
roll
add
adc
stc
and
jmp
test
push
stc
xchg
pop
stc
xchg
or
mov
or
mov
or
mov
cmpsl
leave
jb
je
jbe
js
jp
jl
push
loopne
bound
push
out
mov
sub
push
lahf
stc
lahf
sbb
js
subb
pop
movsb
fldcw
inc
je
jbe
js
jp
jl
jnp
jge
jg
jbe
js
jp
jl
jle
jle
push
and
pushf
and
push
fistl
sub
cmp
cmp
ds
aas
lock
adc
je
push
aas
jns
mov
mov
shrd
ror
mov
xchg
iret
fwait
iret
mov
andl
mov
mov
dec
repz
jecxz
repz
mov
jae
adc
repz
repz
cmp
fdiv
pop
lock
loop
aad
stc
mov
sub
dec
icebp
insl
cmp
xor
cld
cwtl
cld
mov
cld
fnstsw
pop
inc
cmp
cmp
cmp
scas
aas
sarb
xor
push
aas
jne
xchg
xchg
sbb
add
and
mov
push
jmp
stc
in
stc
cmp
in
repz
aam
mov
mov
clc
jle
jle
pop
pop
dec
push
shll
rorb
sbb
sbb
and
dec
pushf
in
sbb
push
sahf
adc
xchg
lahf
js
ficompl
push
push
pop
iret
pop
iret
lahf
sbb
dec
orb
adc
popl
iret
or
iret
test
add
iret
pop
iret
test
dec
iret
sub
iret
push
test
out
out
out
shll
leave
and
jg
pop
psllq
jecxz
repz
jmp
stc
adc
sar
xor
stc
jns
sbb
inc
or
cmp
add
test
add
sub
pop
in
push
out
int3
data16
ss
push
or
add
js
out
stos
mov
inc
test
or
orb
icebp
mov
or
xchg
push
pop
cmp
sbb
inc
push
add
or
add
push
lods
push
or
les
xchg
leave
mov
dec
addb
pop
push
sub
lods
dec
int
repnz
mov
mov
cmp
test
test
lret
out
jmp
dec
mov
test
lods
popf
dec
sub
adc
jl
sbb
sub
in
mov
jl
sub
dec
mov
mov
in
inc
shrl
push
call
xchg
in
aad
fyl2x
emms
adc
ret
push
stos
int
or
mov
rolb
aam
add
ljmp
movb
sub
loopne
scas
lods
push
subb
stos
push
add
jmp
mov
test
into
adc
or
int3
out
sub
dec
inc
xor
push
dec
pop
push
sub
repnz
outsl
test
dec
add
pop
lock
xor
pop
and
push
les
jb
call
orb
xchg
inc
insb
xchg
loopne
and
add
lret
push
pushl
enter
sbbl
sub
xor
movsb
jb
pop
addb
add
adc
add
push
jb
push
adc
das
cmpl
sub
sbb
movq
aaa
jnp
inc
lods
xor
jge
pop
and
bound
xorb
sub
js
ficompl
sti
jl
jno
je
xor
pop
mull
or
scas
xchg
sbb
loop
nop
mov
ss
add
mov
les
push
mov
xchg
mov
call
jnp
mov
fldenv
push
cmp
and
or
and
sub
imul
dec
iret
fidivs
push
inc
cmc
mov
pop
dec
pop
negb
dec
orl
jne
pop
xor
lds
jmp
inc
sbb
test
pop
xor
fildll
and
mov
aaa
xchg
add
dec
sub
lret
jmp
add
cltd
or
fldenv
mov
or
js
test
adc
fadds
aad
dec
xor
lea
xchg
cltd
adc
stc
paddusb
sarl
xchg
sar
inc
sarl
sbbb
jecxz
xor
subl
pushf
xchg
mov
roll
mov
int3
in
jne
cltd
insl
cwtl
loope
jo
cmp
sbb
jne
clc
js
xlat
sbb
aad
ljmp
cli
sub
push
xor
xchg
sbb
mov
xchg
add
cld
and
out
pop
inc
pushf
inc
push
cwtl
xor
clc
pop
push
cwtl
fwait
xchg
das
mov
jo
sbb
xor
mov
les
adc
les
push
nop
or
mull
dec
mov
inc
cs
mov
scas
inc
cmp
int
add
cwtl
mov
push
adc
mov
andb
lods
inc
inc
ret
dec
push
inc
jecxz
dec
add
int
pushf
xor
testl
lret
sub
test
outsb
cltd
loopne
jo
lock
ljmp
dec
lods
mov
cltd
jnp
notb
adc
push
test
cltd
push
and
lock
dec
sbb
fadd
mov
or
icebp
pop
addb
cli
int3
outsb
ljmp
jmp
or
call
xchg
lock
mov
add
or
loope
insl
xor
subb
or
push
out
mov
cmp
rorb
adc
enter
mov
lock
loop
clc
push
loop
sbb
sub
iret
pop
cmp
cwtl
fstpt
cs
pop
int3
cs
sbb
sti
dec
xor
test
jbe
dec
lods
insl
and
mov
stos
jo
sub
push
jmp
xchg
out
rcr
push
repz
cmp
pop
mov
adc
cltd
cs
mov
addb
xchg
pop
mov
jecxz
sub
popa
mov
jno
sbb
mov
xchg
andb
pop
mov
or
shll
mov
cmc
inc
sbb
adc
call
or
out
or
sbb
popf
adc
mov
dec
or
sub
sahf
out
repz
je
inc
adc
cmp
sub
out
push
aam
xor
mov
cmpl
fwait
pushf
or
xchg
daa
push
cwtl
mov
mov
ja
mov
add
adc
mov
ds
cwtl
pop
fisubl
insb
lods
pop
ljmpw
popf
or
dec
or
nop
jb
repnz
xchg
adc
mov
ljmp
add
sbb
adc
clc
lods
and
mov
pushf
pop
fidivs
cltd
in
sbb
and
subl
adc
mov
pop
addl
dec
mov
xchg
or
adc
fidivrl
xlat
fildl
mov
cltd
pop
add
mov
push
sbb
sub
inc
roll
push
xor
and
gs
and
pop
scas
pop
lods
les
aaa
addl
dec
orb
aad
push
mov
xchg
jno
xchg
lock
sub
in
jo
nop
ljmp
test
nop
les
pop
xlat
jb
mov
cli
pop
rolb
jb
cltd
pop
loope
cli
and
sbb
xchg
cltd
sahf
subb
pop
push
xchg
insb
pop
xor
jecxz
sbb
sahf
jecxz
dec
cmp
loope
popf
or
and
sbb
cmp
and
cltd
leave
inc
mov
inc
jno
sub
push
test
mov
mov
sbbb
adcb
dec
scas
adcb
mov
xchg
lahf
mov
sbb
sub
nop
fmull
sub
pop
adcb
mov
out
dec
cltd
pop
lds
adc
mov
adc
sbb
lahf
adc
add
adc
ljmp
xchg
rcr
gs
lret
jbe,pn
test
sbb
rclb
cli
or
pop
repz
sahf
add
pop
popa
xchg
pop
inc
mov
xor
stos
sarl
mov
pop
lret
js
sahf
mov
mov
mov
stc
cmpsl
addl
sbbb
out
or
or
sub
cs
pop
fmuls
adc
test
and
and
xor
in
daa
push
in
dec
or
cmp
push
divb
dec
lock
or
or
insl
or
popf
xchg
stos
pop
subl
jle
push
mov
test
nop
or
mov
pop
fisubrl
mov
pop
aad
sti
dec
sbb
xor
and
cli
push
or
push
into
xchg
pop
lods
push
jne
in
movsb
pop
loope
ljmp
out
in
or
test
add
mov
push
aad
push
or
jecxz
nop
cmp
push
xchg
out
stc
adc
ret
jl
popf
notb
add
cmp
pop
xor
sbb
mov
xchg
add
outsb
test
xor
add
and
jp
adc
stos
pop
xor
mov
dec
loopne
push
adc
cmpsl
xor
les
push
mov
or
or
mov
lret
sbb
xlat
pop
jecxz
call
xchg
dec
cs
out
inc
mov
push
les
jb
add
sbb
movsb
test
jo
mov
orb
aam
xchg
mov
push
sbbb
jp
push
lret
pop
lds
jecxz
xorl
fisubl
mov
mov
inc
push
add
jo
cmp
test
pop
pop
add
sbb
xchg
call
je
adc
pop
or
mov
and
push
pop
frstor
repnz
xchg
popf
or
sbb
mov
add
push
sahf
dec
or
sbb
insb
lea
rcrl
cltd
adc
cmp
sbb
jecxz
pop
sub
mov
adc
lret
push
xchg
mov
lret
stc
mov
xor
xor
xchg
push
popf
or
push
sarl
int3
pextrw
mov
cwtl
rcll
mov
add
mov
fsubr
sbb
xchg
js
fwait
in
pop
std
push
mov
cmpb
xchg
scas
pop
add
cmp
adc
push
mov
int3
js
cli
sub
add
xchg
add
mov
into
scas
mov
add
adc
dec
pop
adc
xchg
jmp
pop
adc
data16
pop
cmp
ret
push
or
xchg
sbb
gs
sbb
icebp
push
in
push
xchg
addb
xor
or
jno
adc
jmp
andb
pusha
punpcklwd
pop
mov
into
inc
push
jle
xchg
xchg
insb
sbb
jl
xchg
fimuls
lcall
roll
movl
add
dec
lods
sbb
adc
imul
and
fucomi
push
pusha
sbb
pop
repz
xor
pop
ja
adc
mov
sarl
mov
nop
or
sub
pop
ja
xchg
cmpsw
push
mov
xchg
mov
test
mov
pop
mov
in
lock
lcall
rcrl
dec
lds
xor
pop
shll
add
or
pop
int3
dec
hlt
xrelease
loopne
pop
sbbb
hlt
sbb
cmp
inc
sbb
xchg
inc
pop
xor
xchg
cmp
cmp
and
xor
out
mov
lods
or
icebp
and
ret
xchg
cwtl
mov
sub
pop
adc
push
cmpsb
out
mov
nop
jne
mov
wbinvd
orb
pop
int
inc
push
sbb
fs
cmp
loop
clc
or
push
xor
les
mov
pop
int3
outsb
ret
emms
cs
cmp
cli
imul
out
inc
push
int3
arpl
xchg
add
aaa
adc
mov
jmp
and
sbb
inc
xor
nop
sbb
inc
sbbl
push
pop
addr16
xchg
xchg
mov
je
jno
jl
adc
pop
int3
rclb
pop
xchg
xchg
cmp
sub
out
pop
cmp
pop
mov
add
in
out
adc
or
sahf
repz
sbb
adc
adc
aam
add
test
clc
add
cmp
inc
lcall
or
mov
dec
mov
pop
fcmovu
jb
sahf
ret
lahf
xchg
cltd
cltd
outsl
sbb
mov
sbb
icebp
addr16
or
jle
push
add
add
fwait
test
dec
jle
pop
or
add
aam
add
fmuls
je
cwtl
add
sarb
cmpps
mov
sti
pop
out
dec
sbb
cmpl
ljmp
adcl
ljmp
pop
xlat
pop
data16
sbb
adc
leave
pop
mov
sbb
ss
xchg
pop
inc
sbb
iret
rorb
or
cs
sahf
inc
or
sbb
ss
mov
dec
ds
add
mov
mov
push
inc
cwtl
out
sbb
mov
test
sbb
lret
jmp
int3
js
pop
pop
nopl
fmuls
cmp
iret
sbb
inc
sbb
imul
dec
iret
mov
lods
add
mov
mov
sahf
add
inc
xchg
add
mov
xchg
mov
adc
aam
inc
notb
or
cmpsl
pop
nop
inc
mov
divl
sub
dec
mov
pop
and
fdivrs
test
sbb
sbb
imul
pop
outsb
test
or
push
pushf
mov
enter
pop
add
sbb
and
stos
cltd
addr16
add
pop
adc
push
push
mov
test
mov
cwtl
mov
pop
or
xchg
xlat
pop
inc
popa
popf
faddl
repnz
mov
sbb
bound
stos
mov
add
in
jb
xchg
mov
add
pop
cmp
and
inc
mov
lret
dec
and
push
out
das
pop
sub
in
xchg
int3
das
mov
add
cmp
mov
test
add
cmp
andb
flds
pop
rclb
lahf
adc
and
push
adc
mov
cmp
mov
stos
imul
sbb
inc
sbb
sbb
push
or
fisubrl
rcrl
movsl
sti
push
cwtl
pop
cmp
add
or
mov
inc
loop
pop
adc
sbb
xchg
ds
xchg
sbb
jp
adc
push
rcll
aaa
lret
adc
in
inc
mov
icebp
adc
pop
data16
nop
jp
pop
or
xor
and
adc
mov
hlt
and
jb
xor
adc
subb
push
pop
cs
dec
aas
push
sbb
test
pop
test
pop
sbb
popa
das
icebp
cmp
xchg
mov
adc
nop
or
xor
add
js
fidivrl
mov
pusha
xchg
adc
add
dec
shl
dec
lock
test
push
idivb
xchg
sub
push
std
jns
sub
xchg
rcll
dec
cs
shrb
or
xor
fisubl
fistpl
pop
add
test
xor
jne
mov
je
push
pop
stos
movsb
lods
cmp
rorl
fimull
into
subl
mov
out
fwait
cmpsl
dec
push
cwtl
or
test
add
or
jle
fiaddl
jl
rcrl
cs
pop
popf
cs
cs
jmp
fs
sub
int3
push
je
addl
jecxz
bound
nop
add
dec
or
xchg
pop
inc
ja
popf
cmp
or
fwait
or
push
mov
sbb
mov
mov
nop
rorl
adc
add
mov
loopne
data16
fwait
sub
jge
add
cmp
cmp
leave
cmpl
lods
call
jo
dec
xchg
xor
xor
push
and
adc
in
xor
sub
mov
or
in
mov
push
cwtl
or
and
adc
cmove
jae
xchg
sbb
stos
mov
aad
popf
add
sbb
sbb
sbb
add
popf
pop
xchg
sbb
mov
adc
adc
je
mov
repz
xor
dec
push
push
push
enter
add
in
cwtl
ret
loop
pop
xchg
push
add
sbb
mov
xchg
aam
add
mov
inc
ret
insb
xor
jecxz
jl
je
and
loope
in
shrb
and
clc
lcall
add
addr16
inc
filds
push
push
push
jno
mov
mov
sub
or
pusha
sbbb
loopne
push
mov
in
sbbb
dec
loope
xor
pop
add
add
and
out
fs
sub
xchg
pop
mov
mov
sbb
add
fnsave
clc
inc
pop
inc
movb
mov
je
insb
in
sub
sahf
stos
or
sbb
push
int3
mov
lret
add
add
or
dec
and
sub
adc
push
and
mov
clc
xor
and
and
and
sub
or
push
jl
nopl
leave
sbb
lds
adc
xchg
xchg
jae
mov
dec
xchg
orl
inc
dec
pop
cmp
into
and
ret
inc
add
sbb
add
roll
xor
add
call
or
test
mov
cmpsb
andl
add
das
pushf
and
adc
mov
adc
add
mov
jo
movsb
adc
outsb
and
es
dec
push
add
and
cs
dec
adc
je
and
push
femms
mov
push
or
add
cmp
add
addb
enter
push
dec
push
scas
and
add
adc
or
push
daa
icebp
and
push
jb
movsl
pushf
add
add
xor
pop
addb
andb
mov
hlt
add
cmpsb
and
cmp
adc
push
out
loope
push
sub
mov
push
adc
adc
es
pop
add
adc
adcb
adc
cmp
loope
adc
sbb
cmovns
addr16
loop
xchg
movl
std
cmp
pop
and
mov
adc
add
xor
dec
add
push
je
sbb
mov
sbb
cmp
shl
nop
add
popa
inc
loop
mov
adc
out
sbb
hlt
add
push
repnz
pop
push
repnz
adc
or
inc
or
pop
push
adc
inc
push
jae
adc
call
mov
push
push
mov
jecxz
adc
popl
xor
dec
add
pop
sbb
add
xchg
add
or
rcll
lods
and
add
adc
push
pusha
lret
jle
mov
nop
mov
push
addr16
lds
inc
adc
add
mov
add
iret
add
xchg
sbb
mov
mov
jecxz
pop
push
fs
pop
or
add
cmpsl
les
mov
aam
push
xor
popf
jo
pop
cwtl
aam
add
cmp
inc
icebp
and
inc
or
mov
adc
add
popl
pop
push
or
ds
or
mov
and
inc
and
sbb
ss
jle
aad
adc
sbb
pop
push
mov
xor
out
or
push
push
sbb
jg
or
xchg
push
sbb
push
push
clc
adc
aad
inc
sbb
adc
lahf
sbb
pop
sbb
adc
ss
push
ss
cld
jmp
jle
ss
or
add
push
sbb
add
mov
pop
sbb
movl
xchg
lock
adc
mov
sbb
push
jecxz
add
dec
adc
and
mov
and
out
add
aaa
pop
and
aaa
push
adc
lock
push
aaa
jecxz
or
sbb
pop
adc
negb
adc
adc
sbb
sbb
or
dec
pusha
push
ss
mull
jnp
mov
add
push
mov
clc
inc
and
cmp
and
sbb
mov
mov
add
movsl
push
fisubl
fwait
lods
or
or
fmull
daa
movsb
add
fimull
sbb
inc
sbb
adc
out
inc
add
jecxz
popa
sbb
jecxz
add
add
sbb
push
push
cmp
fwait
add
enter
mov
sbb
pop
in
add
daa
adc
jnp
pop
adc
jnp
lahf
pop
lock
sti
add
call
fcomi
pop
add
jmp
jecxz
adc
mov
dec
call
or
enter
inc
add
mov
and
test
mov
sti
mov
or
push
sti
sbb
or
sahf
or
sub
pop
push
jns
cld
mov
sub
pushf
test
je
add
or
and
mov
push
mov
icebp
and
pop
mov
insb
daa
adc
pushf
lea
insb
mov
inc
mov
push
or
mov
or
sbb
fisttpll
andb
jl
add
and
or
push
rorl
jae
xor
pushf
lea
xor
xchg
and
xor
push
inc
push
mov
and
and
inc
adc
data16
adc
adc
adc
add
lahf
push
shlb
inc
and
nop
iret
xor
inc
dec
test
inc
dec
mov
xchg
lret
mov
cmp
stos
sub
or
mov
xor
inc
dec
in
inc
mov
inc
xor
or
adcl
add
inc
lahf
push
sbb
push
xor
pushf
test
adc
pop
and
or
sbb
add
and
test
fld
and
pop
frstor
dec
dec
jns
test
add
push
loop
icebp
and
add
push
mov
xchg
or
adc
adc
add
inc
pusha
add
xor
add
or
add
push
push
sahf
pop
lret
ret
sub
adc
mov
sub
cmp
adc
into
push
rorb
orb
test
popf
sub
lock
ret
xor
sbb
fsubs
dec
and
jl
xor
insl
push
add
sub
into
mov
pop
clc
add
outsl
sub
mov
push
mov
or
or
or
pop
pushf
jp
mov
pop
or
adc
push
add
adc
test
add
adc
in
xchg
fisttpll
or
add
or
add
push
cltd
movsl
sbb
adc
adc
in
add
push
add
add
dec
sub
in
clc
pop
js
sub
inc
loop
sbb
sbb
add
stc
adc
sub
mov
fldt
pop
or
sbb
fcmovne
or
mov
push
push
mov
mov
pop
or
pop
mov
test
push
lret
sbb
aam
mov
mov
sbb
push
fstl
push
adc
cmp
nop
adc
fiadds
or
pushf
nop
push
aam
and
inc
or
sub
sbb
std
inc
add
mov
fsubrl
sbb
push
cld
sbb
pop
dec
xchg
add
lds
add
es
mov
inc
fadds
add
ficoml
aam
repnz
unpcklps
psrad
add
or
leave
lret
nop
es
insl
dec
outsl
cltd
fcomps
movsb
push
pop
ret
les
push
aas
mov
push
sbb
cld
add
adc
adc
ljmp
or
movsb
sub
mov
pop
cwtl
add
and
jmp
or
das
popa
cwtl
or
or
push
enter
or
push
cltd
and
and
pushf
nop
das
dec
or
pop
in
aas
push
dec
add
jecxz
loop
dec
jbe
xor
push
mov
test
cmp
cli
dec
ud2
cmp
or
add
or
cmp
push
inc
xchg
or
fistpl
adc
sti
in
or
or
enter
orb
sbb
push
cwtl
inc
mov
xor
inc
adc
or
push
add
ljmp
inc
sbb
push
mov
loop
xchg
shld
jge
pop
in
les
mov
orl
add
or
add
adc
push
adc
lret
push
dec
pop
sub
adc
sbb
roll
push
sbb
add
jmp
test
pop
loop
stos
mov
xor
test
xchg
adcb
call
pop
or
xor
adc
dec
loop
pushf
sbb
pop
mov
and
mov
push
call
stos
adc
pop
dec
lds
sbb
das
or
or
sbb
add
out
pop
cmp
sub
enter
mov
adc
out
adc
xchg
ds
bound
pop
or
aam
push
xchg
jmp
xchg
aas
mov
fcom
and
in
mov
push
in
or
sub
popa
push
ljmp
stos
push
push
mov
adc
sbb
lea
pop
out
push
ds
sbbb
das
push
sbb
iret
add
add
sbb
mov
or
or
cmp
out
mov
loop
sbb
popa
sbb
cmpsb
xchg
into
xor
mov
sbb
bswap
add
adc
push
mov
das
pop
sbb
nop
ja
dec
lret
xchg
adc
xchg
icebp
adc
adc
xchg
outsl
sbb
clc
sbb
fcoml
xchg
sbb
sbb
sbb
in
cmp
add
push
xor
ret
aaa
rolb
pop
jne
ret
rcr
add
lret
int3
dec
subl
pop
into
xchg
sarl
out
jp
in
sbb
mov
lret
xchg
mov
hlt
fsubrs
out
dec
add
pop
inc
cwtl
ss
negl
xchg
out
adc
add
xor
sbb
pop
out
pusha
dec
push
insb
fs
sbb
aad
call
jbe
cwtl
sbb
adc
outsb
add
aaa
inc
movsl
add
pop
sbb
add
pop
mov
xor
xchg
adc
pop
push
rolb
test
pop
xorb
add
inc
xchg
add
dec
or
pop
inc
orb
loop
pushf
push
dec
notb
mov
dec
test
xchg
push
or
or
in
add
add
push
sbb
add
xlat
imul
push
push
jl
sahf
and
add
dec
icebp
sbb
sbb
in
add
add
dec
and
adc
sub
addr16
cltd
push
and
lds
sbb
push
and
jns
and
cltd
push
adc
add
sbb
in
in
dec
addr16
cli
pop
add
pop
into
and
pop
push
sbb
lock
push
cmp
pop
js
fisubl
cwtl
mov
cld
andb
jns
nop
sbb
ret
cmp
add
adc
push
cmp
outsb
pop
mov
cmc
pop
insl
cs
dec
jmp
sahf
cmp
adc
fiadds
cwtl
in
leave
mov
push
sbb
lock
adc
sbb
add
dec
cs
cmp
or
pop
push
stos
push
ret
adc
add
outsb
in
push
add
add
es
inc
daa
add
and
test
mov
call
mov
and
repnz
shlb
notb
cwtl
adc
inc
sbb
inc
inc
test
loope
xchg
mov
and
inc
mov
xor
movsl
and
popf
xchg
xor
inc
in
out
xor
inc
mov
or
add
or
pushl
pusha
mov
test
cmp
xor
and
inc
lahf
mov
push
xor
sbb
or
dec
imul
inc
adc
sbbl
push
iret
add
cmp
mov
jbe
mov
ss
or
adc
and
push
add
movb
add
out
sbb
add
add
xor
shll
mov
xchg
lods
push
add
jno
sti
cmpb
std
sub
or
pmaxub
pop
in
test
sbb
and
std
dec
sbb
add
addr16
sbb
sub
add
outsl
dec
sub
cmp
stos
jne
fldt
push
push
add
js
jle
loope
adc
adc
push
push
xchg
mov
xchg
jo
jbe
icebp
jmp
sbb
sbb
fs
jp
std
add
sti
adc
adc
xchg
lea
xchg
hlt
add
cmc
in
repz
add
pop
pop
sbbb
addr16
clc
out
add
or
seto
imul
add
pushf
sbbb
in
loop
add
mov
jae
hlt
in
repnz
fld
filds
and
es
push
dec
push
dec
ror
xlat
iret
add
sub
cs
mov
add
pop
fildl
and
and
movsl
mov
dec
push
dec
aad
ror
add
xor
mov
mov
add
inc
pop
rcr
fiadds
and
daa
aas
mov
push
dec
push
dec
ror
into
add
sub
das
mov
mov
add
inc
pop
fadd
fiaddl
and
mov
dec
push
dec
aam
ror
add
lods
mov
push
and
add
scas
cmpsl
in
lret
jo
popf
jecxz
xorb
loopne
enter
ss
push
popa
inc
add
xchg
xor
mov
add
xor
pop
outsl
push
ja
push
xorl
sbb
xlat
mov
scas
iret
add
or
into
leave
adc
lock
subb
out
addl
pop
add
dec
or
mov
or
adc
jle
inc
cmp
and
lods
addb
xor
sbb
pop
and
xchg
xchg
addb
jb
test
or
cld
test
mov
push
out
push
sbb
pop
icebp
adc
test
inc
adc
adc
sub
sbb
orb
pop
push
sbb
aad
push
cmpsl
and
push
pop
pop
out
pop
popf
and
and
add
push
sbb
int3
jnp
roll
enter
daa
pop
or
push
fisubl
push
in
and
pop
add
loop
or
and
pushf
or
adc
and
pushf
pop
in
fs
xor
sbb
sbb
or
dec
mov
addb
add
mov
aad
pop
mov
xor
xchg
push
rorl
add
and
sbb
xor
sub
mov
mov
loopne
scas
add
adc
adcb
push
or
xor
sbb
xor
xchg
push
aad
test
and
mov
rcll
test
xor
or
test
adc
sbb
sub
push
or
sub
or
adc
adc
mov
pop
aad
dec
sbb
sbb
fisttpl
add
ss
mov
sbb
and
sub
movl
mov
scas
adc
into
dec
adc
xchg
mov
push
cmpsl
sbb
iret
imul
adc
or
add
xor
add
or
daa
jnp
push
inc
xor
arpl
push
pushf
pop
mov
cmp
add
add
xchg
add
sbb
add
ret
pop
and
call
push
cwtl
or
add
out
ljmp
aad
push
add
in
and
nop
adc
inc
sbb
add
jmp
or
mov
sbb
aad
test
inc
mov
rcll
enter
jbe
pop
arpl
or
and
sbb
sbb
pushf
pop
or
icebp
mov
add
orb
rolb
add
inc
inc
test
inc
orl
or
adc
and
inc
add
inc
xchg
inc
or
inc
lea
inc
adc
inc
xchg
test
push
xor
fnstenv
ret
inc
fwait
test
or
or
push
out
mov
sbb
dec
push
pop
test
or
add
push
cwtl
adc
int3
add
add
ds
add
add
ds
add
test
insb
adc
cwtl
insb
sbbl
cwtl
insb
enter
cwtl
insb
dec
cwtl
insb
push
cwtl
insb
iret
cwtl
insb
xchg
cwtl
insb
push
cwtl
insb
adc
icebp
cwtl
es
pop
and
sbb
icebp
frstor
icebp
lahf
and
add
test
dec
lds
or
mov
or
es
pop
sub
adcb
notb
add
pusha
adc
imul
sbb
add
or
nop
movsl
xchg
push
fwait
dec
adc
inc
jns
xchg
add
nop
cmp
pop
lea
push
adc
pop
adc
mov
adc
sbb
or
divb
shrl
add
or
sbb
and
mov
adc
pop
adc
pushf
push
sbb
sbb
rdpmc
add
or
mov
push
mov
or
ds
call
fwait
call
rclb
adc
xchg
stos
add
aad
icebp
inc
dec
adc
adc
addr16
ja
ret
enter
fs
sub
test
fdivrs
sub
popa
or
or
sti
jno
add
es
mov
mov
add
xchg
gs
or
inc
xchg
pop
fs
sbb
int
test
add
lock
adc
ret
jno
add
rclb
clc
xor
clc
xchg
xor
or
pop
mov
xor
sbb
fmull
daa
fiadds
dec
and
or
adcb
xchg
pmulhw
adc
adc
orb
sbb
push
sbbb
adc
jo
psrlw
lods
xchg
inc
add
xchg
pop
mov
sbb
add
mov
xor
push
lret
xchg
lret
enter
and
add
inc
or
inc
int3
test
or
xchg
add
adc
sbb
mov
daa
adc
push
mov
sbb
add
xchg
xchg
test
pusha
and
loop
push
in
punpckhbw
and
movsb
ret
or
push
syscall
add
xor
addl
or
jbe
xor
xchg
push
mov
xor
xchg
sbb
xchg
and
push
rcrl
lret
add
shll
or
mov
add
or
mov
add
aam
mov
inc
xor
push
adc
sbb
pand
sbb
sbb
lock
xchg
add
mov
mov
or
sbb
imul
sbb
or
push
sqrtps
test
and
pop
or
imul
sbb
clc
jae
mov
test
add
adc
popl
sub
push
pop
sub
popa
jnp
sub
push
xchg
xlat
jbe
mov
cld
cmp
add
popf
cld
jno
adc
push
add
xchg
lsl
lds
mov
or
mov
in
adc
cwtl
adc
sbbl
adc
push
or
icebp
out
sbb
xorb
adc
sbb
icebp
and
add
or
pop
xchg
or
mov
mov
push
dec
adc
ret
add
cs
gs
add
xor
and
psllw
xchg
sbb
inc
adc
pop
or
in
xchg
or
add
notb
xchg
push
or
pop
aam
cmp
test
inc
and
add
xor
add
push
das
or
adc
add
pop
mov
dec
cmpsb
or
adc
adc
sbb
pop
push
add
cwtl
sbb
pop
xor
xchg
push
aad
push
add
pusha
pop
adc
pushf
and
add
or
push
pop
data16
cwtl
lds
or
and
push
ficoms
sub
ret
movsl
add
addr16
lds
and
imul
dec
jb
xor
inc
shll
xchg
adc
dec
adc
and
movsl
adc
mov
pop
or
add
sbb
pop
add
or
push
daa
pop
loope
inc
mov
cwtl
xlat
fwait
call
adc
adc
mov
add
fildl
dec
cmpsb
add
gs
mov
ret
or
add
loop
add
or
mov
rcrb
pop
lret
sbb
xor
js
push
fs
loope
and
rclb
push
push
addb
push
push
and
insl
pop
addb
icebp
and
push
push
or
add
mov
pop
arpl
or
pop
repnz
xor
xchg
cwtl
ljmp
or
adc
bound
je,pn
xchg
or
or
aas
adc
lret
add
dec
or
adc
or
cwtl
out
adc
and
fs
imul
inc
mov
data16
cwtl
insb
fs
insb
lds
and
xchg
enter
xchg
xchg
outsl
enter
xchg
enter
xchg
enter
xchg
xchg
sbb
fdivrl
add
add
fadds
enter
and
or
inc
mov
test
mov
test
or
xor
in
scas
add
test
inc
xor
inc
mov
test
or
xor
in
mov
test
push
inc
sbb
aam
pop
clc
lret
sbb
and
fs
call
cmpsl
fs
imul
ret
scas
fs
jo
ret
xor
fs
mov
ret
ja
ret
cmp
fs
mov
add
sbb
loope
clc
mov
clc
daa
adc
call
pop
push
mov
sbb
cwtl
insb
xor
repnz
fwait
dec
push
add
sbb
or
call
adc
add
outsl
in
sbb
clc
les
test
mov
pop
xchg
or
punpckhwd
adc
sbb
adc
xchg
fwait
push
adc
adc
or
add
mull
iret
sbb
mov
add
fs
pop
and
in
sbbb
sbb
add
add
cli
enter
xchg
and
icebp
shll
and
icebp
test
icebp
in
icebp
inc
and
test
push
or
lods
imul
xor
addb
adc
xchg
rsqrtps
adc
adc
xchg
pop
xchg
sbb
cmp
add
roll
and
adc
mov
lar
jbe
cwtl
dec
add
add
push
pop
or
lods
add
inc
inc
or
or
setl
adc
inc
adc
push
xchg
sub
push
adc
sbb
pushf
sbb
inc
add
and
sbb
add
test
cltd
sbb
addl
inc
adc
hlt
sbb
femms
xchg
or
push
push
add
add
cmpsb
or
adc
fisubrl
or
sbb
dec
add
and
adc
or
push
mov
sbb
sbb
fistpl
xchg
lmsw
jbe
cwtl
mov
add
add
or
add
or
lock
sub
mov
gs
mov
sbb
push
xor
pop
add
mov
xor
add
mov
fldenv
nop
add
add
or
mov
adc
sub
sbb
or
or
inc
and
call
adc
fs
inc
sbb
mov
push
sahf
orl
xchg
pop
xor
adc
and
add
or
or
stos
jmp
adc
push
and
push
sbbl
lds
or
adc
and
inc
or
pop
xor
and
pop
stc
mov
add
adc
add
pop
mov
add
scas
add
pop
pop
mov
mov
dec
divps
mov
push
add
push
push
popf
inc
loope
adc
lret
call
adc
addb
unpckhps
xchg
aam
or
popa
adc
ljmp
sbbb
les
or
pop
sbb
lret
xor
pop
adcb
dec
inc
add
stos
sbb
and
pop
mov
add
sbb
and
add
fwait
inc
in
in
adc
jmp
add
dec
sbb
pop
inc
test
in
test
adc
jnp
or
or
xor
sbb
das
sbb
sbb
add
mov
push
sbb
pop
pop
cltd
punpckhbw
or
sub
ss
pop
cmp
shrl
pop
ds
xor
and
repnz
ds
pcmpeqd
sarl
in
adc
pop
ds
mov
ret
aas
fs
cmp
mov
fs
es
out
ret
test
ret
sub
sbb
mov
cmp
cmp
adc
xchg
pushf
insl
push
fs
xor
add
xchg
pushf
insl
pop
and
in
push
push
push
push
xlat
or
or
pusha
xor
arpl
adc
call
mov
sbb
inc
sbb
add
in
add
jp
or
push
fimull
add
or
adc
aaa
adc
dec
prefetch
sbb
push
call
mov
add
mov
adc
aad
call
or
xor
adc
lcall
add
popf
add
push
inc
push
shrw
loopne
sbb
leave
iret
es
mov
pop
adc
negb
jno
lcall
aaa
adc
pop
clc
add
adc
add
andl
arpl
sbb
or
xor
cmc
inc
shlb
add
push
add
mov
call
push
jg
xchg
or
inc
push
pop
push
adc
pop
movsl
sbb
adc
stos
cmc
lock
sbb
mov
add
lds
add
adc
adc
out
add
jno
xchg
mov
testb
adc
ret
xor
xchg
sbb
or
xor
jg
adc
rcr
add
pop
ss
or
add
push
pop
or
test
xor
add
add
in
and
sbb
fs
sbb
push
push
xchg
sbb
or
or
ds
push
adc
add
add
mov
or
clc
sbb
aam
test
test
ror
in
add
addr16
and
xchg
pop
sbb
or
sbb
fistpl
popf
mov
sbb
add
ds
sbb
or
push
imul
push
loope
add
adc
sbb
adc
call
mov
jae
mov
mov
mov
pop
popa
nop
adc
or
push
push
push
sub
rcrl
adc
mov
in
inc
mov
dec
push
cltd
stc
mov
negb
jbe
rorb
pop
push
scas
push
pop
push
mov
jmp
or
test
addr16
icebp
mov
or
jecxz
mov
loope
aas
call
out
test
stos
testl
neg
jne
add
cmp
lea
aas
out
add
adc
sahf
pusha
add
std
and
cmp
pushf
dec
mov
jl
pop
arpl
push
mov
pop
cltd
loopne
stos
cmp
stc
push
mov
xlat
psrad
js,pt
push
add
es
add
lret
adc
mov
sub
add
dec
cmc
lods
push
sbb
inc
jns
adc
loopne
lcall
sub
jge
imul
push
pop
add
hlt
mov
in
loopne
push
scas
pushl
cld
loope
in
sbb
lock
lds
test
sbb
mov
xchg
add
insl
lods
pop
imul
push
rorl
out
sbb
pop
add
mov
sbb
jns
addb
or
inc
push
test
xchg
xor
inc
push
mov
sbb
sbb
cltd
and
xor
xor
and
or
xor
push
mov
fildl
mov
xchg
test
inc
xchg
mov
xor
loop
cmp
sbb
shlb
add
into
shll
aam
jle
xlat
js
cwtl
and
add
xor
xchg
and
add
push
pop
inc
mov
lea
lret
test
or
inc
iret
xor
pop
pop
inc
popf
test
inc
push
mov
xor
inc
into
test
dec
xor
dec
mov
addb
cltd
inc
push
mov
adc
push
bound
cmp
inc
pop
sub
and
add
inc
add
add
andl
mov
inc
and
xchg
and
xorb
xor
adc
and
xor
filds
xor
andl
and
and
and
sub
addb
and
shlb
xchg
sub
inc
sub
mov
adc
or
push
or
int3
cltd
xor
outsb
and
inc
xor
ds
xor
and
pop
inc
and
sub
add
cmpb
xor
adc
sbb
faddp
test
int3
or
dec
and
cmp
xor
sub
or
inc
mov
sahf
and
cltd
sub
ds
xchg
lods
dec
sub
sbb
cmp
cltd
and
mov
cltd
aaa
dec
daa
insb
cltd
sub
and
sahf
adc
add
and
sub
xor
fsubs
int3
xchg
sub
int3
iret
and
add
or
int3
jle
dec
and
and
sub
cltd
es
and
cltd
xor
mov
subl
inc
and
or
dec
jae
frstor
sub
mov
adc
jecxz
adc
sub
loopne
ds
adc
sbb
andl
and
test
adc
inc
xor
pop
aam
shll
int3
push
cmp
sbb
sarb
and
es
das
sub
and
inc
and
es
cs
or
movsb
and
mov
xor
and
daa
gs
inc
sub
mov
jne
cwtl
jp
es
adc
jne
imul
mov
xchg
xchg
cltd
and
jle
xor
adc
add
fiadds
mov
and
in
and
ret
adc
xor
jge
or
ss
and
xor
dec
and
daa
imul
sub
and
and
pop
and
jae
cmp
and
sub
dec
das
cmpsb
mov
mov
and
adc
sub
and
das
andb
xor
and
inc
sub
and
xchg
mov
or
cltd
sub
xor
mov
xor
ja
and
or
xlat
and
adc
fidivs
mov
and
mov
and
xor
or
sbb
mov
xor
xor
mov
imul
xchg
inc
add
and
and
mov
decl
shrb
jne
xor
and
xor
jae
fisubl
xor
bound
xor
andl
sub
xchg
data16
loope
aaa
test
mov
cmp
mov
subl
cmp
sub
mov
or
push
aaa
xchg
xchg
and
pop
dec
or
dec
or
and
inc
mov
inc
push
test
or
adc
mov
cmp
popf
inc
fildl
inc
rorl
inc
int
int3
or
or
inc
push
xor
or
xor
cmp
pop
mov
cltd
xor
enter
adc
push
jo
je
and
fldl
xlat
adc
sbb
sbb
and
int3
clc
add
and
inc
popl
inc
xchg
inc
addb
pushf
or
xchg
inc
roll
inc
dec
mov
xor
add
add
inc
adc
mov
sbb
out
and
and
xor
inc
adc
xchg
nop
xor
dec
test
or
inc
inc
sbb
int3
ret
and
das
mov
or
xor
inc
mov
inc
xchg
test
or
add
cmp
inc
dec
test
or
cmove
aad
xor
fldl
add
test
dec
or
cwtl
mov
int3
inc
dec
test
shll
push
out
xor
dec
inc
xchg
xor
popf
dec
sbb
lahf
and
in
or
mov
sbb
test
movb
inc
stc
daa
and
and
inc
aad
pop
or
pop
pusha
bound
out
mov
leave
and
add
inc
and
and
inc
lods
and
test
inc
mov
shlb
cmp
and
cs
mov
jge
mov
sbb
push
pop
pop
sbb
sub
add
adc
int3
imul
mov
push
ret
xchg
mov
add
adc
add
shl
outsb
dec
sbb
or
scas
outsl
scas
mov
jb
add
pusha
xlat
add
xor
inc
flds
das
flds
outsb
mov
in
cmpb
mov
add
insl
inc
adc
and
out
es
sbb
and
shl
mov
add
cmpl
ljmp
jae
xchg
push
mov
sbb
push
ds
aam
stos
clc
std
lods
nop
call
testl
lea
lods
mov
pop
cmp
add
mov
cld
sbb
jo
push
mov
push
shll
or
add
outsl
mov
das
xchg
cld
and
fidivl
sahf
add
js
popf
pop
sahf
rcrb
inc
mov
or
or
int3
add
cmp
je
sub
sbb
and
divl
mov
inc
or
and
mov
dec
mov
push
dec
js
test
repz
pop
mov
sbb
outsl
movsb
add
pop
xchg
dec
jecxz
and
push
stos
adc
mov
outsl
pop
leave
call
popa
imul
push
pop
xchg
mov
mov
movsl
jbe
inc
jne
iret
adc
repz
mov
loopne
mov
fcmovnb
jecxz
add
push
addb
push
out
xchg
mov
xor
mov
xor
push
push
lret
and
or
sub
mov
xor
pushf
push
push
pop
iret
addl
data16
xchg
jp
or
mov
orl
nop
bound
mov
mov
push
cmpsl
fisttps
add
addb
test
cli
mov
adc
enter
aad
xchg
flds
sbb
pop
loope
add
cmpsb
jmp
or
add
xor
incl
popl
icebp
sub
dec
cmp
and
sbb
cmpsl
stc
adcl
mov
push
pop
or
stos
push
jp
add
add
test
and
inc
loope
mov
xor
js
fwait
loope
and
xor
rclb
xor
xchg
addb
add
dec
or
negb
cmc
sub
mov
pop
jb
push
push
subb
xlat
add
fwait
mov
inc
jecxz
add
insl
shll
ljmp
add
xchg
xor
lea
movsb
cmpsb
les
mov
push
or
mov
test
push
lods
push
adc
mov
add
in
cmp
pushf
mov
push
add
cmp
mov
das
call
repz
push
sbb
push
jle
aad
ret
shl
in
add
adc
fcoml
shl
push
cmp
jmp
pop
sbb
add
jle
adc
shr
in
mov
loopne
pop
lods
cmp
aas
mov
addl
add
dec
inc
add
lahf
mov
pop
inc
scas
add
mov
push
xchg
mov
leave
push
addr16
dec
inc
xchg
in
stos
rcll
rcrl
scas
sar
das
xor
jmp
add
sub
sub
mov
jnp
fadd
rorl
dec
pop
ds
and
fdivrs
faddl
int3
call
sbb
push
jg
dec
dec
imul
push
sbb
mov
ss
or
sbb
ret
add
jno
inc
or
push
aad
data16
fincstp
sub
loopne
add
lcall
add
jp
ret
scas
mov
mov
pop
ja
or
push
cmp
movsb
insl
push
push
push
add
addr16
push
in
out
sbb
add
in
loopne
xchg
rorb
mov
js
pop
sbb
sbb
mov
xchg
shl
push
xorl
jle
sbb
pop
pop
loope
add
xor
or
sub
hlt
scas
add
cmpsl
jae
add
sub
stos
sub
and
sbbl
movl
aas
inc
and
pop
sub
adc
test
ds
enter
ret
mov
call
add
lret
jne
xor
stc
or
lock
fmuls
mov
sbb
mov
fidivs
imul
inc
adc
bound
or
sub
push
or
push
add
xor
int3
jno
es
push
jne
add
pop
repnz
jg
and
dec
jmp
inc
mov
adc
sub
fchs
inc
and
pop
int
sti
dec
les
or
daa
xor
scas
add
mov
sbb
sbb
out
push
loop
add
dec
test
sbb
inc
and
jp
cli
in
sbb
push
sbb
push
xor
add
test
cmp
fwait
lcall
aaa
or
jg
ljmp
inc
loope
xchg
push
fwait
das
test
dec
cmpsl
pusha
loopne
xor
jo
push
mov
int
adc
dec
jo
and
pop
cmp
mov
pop
shlb
add
pop
je
fldt
fisubrl
sbb
lods
les
pop
push
rcrl
ljmp
mov
jae
xor
in
loop
push
ret
or
fildl
cmp
out
push
adc
cmp
xchg
xchg
cli
and
pop
adc
xchg
mov
add
ret
add
xchg
and
dec
inc
push
mov
cs
xchg
pop
adc
mov
jmp
xchg
movsl
lea
inc
add
or
dec
sbb
push
adc
pop
mov
stos
pop
loope
adc
push
jns
outsb
pop
cmpsb
sbbl
cli
gs
mov
sub
idivb
jp
add
or
mov
lcall
push
sub
push
pop
lahf
loop
ret
testb
loop
xor
add
pop
inc
push
jo
or
or
mov
ss
mov
pop
aaa
dec
push
xchg
sub
dec
je
out
fiaddl
fs
xchg
inc
loope
imul
sbb
lea
daa
add
bound
jo
adc
sbb
push
arpl
frstor
mov
call
lock
testl
fadds
lea
in
out
addl
pop
xchg
iret
inc
pop
aam
mov
jle
add
sti
aaa
rcrb
or
push
sbb
cli
sbb
adc
lahf
add
push
adc
daa
repz
lret
ret
orl
add
mov
mov
adcl
sbb
das
add
sti
pop
dec
leave
dec
add
pop
jne
popf
sbb
and
dec
mov
out
or
test
fildl
addl
vcvtss2si
add
add
iret
icebp
insl
aaa
cmp
sbb
xor
or
stc
inc
scas
into
pusha
pop
fnstcw
mov
mov
push
aam
inc
or
xor
inc
mov
stos
add
testl
mov
add
push
stc
add
out
mov
loopne
hlt
push
pmullw
lods
shrb
scas
push
sub
add
in
mov
mov
add
cs
or
push
sbb
addr16
js
shlb
adc
loopne
add
shll
in
jmp
push
incl
push
cwtl
std
sub
mov
push
ret
push
or
fdivr
daa
cmp
add
vpinsrw
fdivl
lods
sub
mov
push
cmp
into
pop
inc
fiadds
adc
test
jecxz
mov
adc
sbb
jp
and
iret
inc
add
pop
sub
xchg
dec
cmpl
loope
pushf
cmp
mov
rorl
inc
loop
cmp
mov
loope
mov
in
adc
mov
dec
pushf
pop
loope
add
addr16
xlat
daa
add
mull
or
jp
nop
stos
ret
clc
mov
data16
jb
mov
lahf
aad
scas
adc
xchg
dec
add
sub
lahf
out
add
jp
cld
aas
mov
lds
incl
mulb
xor
rorl
fs
int
mov
jmp
rclb
test
test
sbb
into
ffree
lds
lea
int3
sbb
incl
add
nop
add
jecxz
out
dec
out
shlb
roll
sub
jnp
fisttpll
or
or
push
sbb
add
dec
sbb
setb
lods
sbb
loopne
sarl
movsb
adc
fidivrl
and
sahf
or
js
sbb
dec
push
cmpsb
sbb
aaa
inc
inc
inc
and
fcompl
rcll
mov
jbe
mov
imul
xor
lds
roll
jbe
sbb
jo
jae
xchg
sbb
add
fstl
mov
insl
ficompl
jae
lds
add
fwait
shlb
int
sbb
jb
mov
mov
xchg
mov
loopne
rorl
lahf
add
pop
out
or
add
add
jae
loop
dec
cmpsl
test
jle
jg
push
mov
mov
test
dec
add
and
outsl
push
test
bswap
lea
rcrb
inc
pop
in
cmp
mov
push
testb
in
cwtl
das
pop
xlat
in
arpl
pop
adc
enter
mov
lods
and
cwtl
and
fndisi(8087
cmpl
js
push
pop
mov
jb
test
into
sub
ds
add
and
dec
dec
aaa
lahf
fisttpll
ljmp
sub
notb
mov
shll
sbb
pop
iret
dec
add
out
call
dec
push
jecxz
js
arpl
pop
aaa
inc
shl
add
jg
xchg
shr
rcrl
sbb
mov
pop
sbb
addl
and
in
cltd
inc
push
mov
xor
cmpl
insl
es
mov
sub
or
inc
in
ljmp
jns
pushf
test
xchg
add
and
or
std
dec
filds
imul
dec
andb
cmp
add
jnp
ss
jecxz
cltd
xor
xchg
icebp
int
mov
call
ret
andb
incb
das
mov
sbb
pop
nop
mov
stos
and
sbb
dec
push
fcompl
inc
add
xchg
gs
stc
orl
push
adc
loop
adc
or
pop
leave
ficoml
jmp
cltd
jge
pop
sbb
push
add
ja
push
sbb
loope
shll
mov
jl
pop
and
les
add
adc
mov
jbe
pop
inc
add
jmp
movsb
add
je
and
adc
adc
repz
pop
sbb
ror
adc
add
movsb
mov
and
mov
mov
sbb
shlb
sahf
shlb
xchg
jecxz
lods
adc
rcl
add
or
call
cmpsl
jge
arpl
add
rcr
ss
cld
fwait
dec
outsl
cmp
dec
xchg
add
adc
add
sbb
ds
ss
cmp
sti
sahf
push
pop
inc
outsl
jp
xchg
pusha
push
lcall
in
les
lock
inc
cmpl
ffree
mov
jge
pop
push
lods
add
pop
fidivl
addb
add
inc
jnp
hlt
add
adc
sbb
pop
mov
push
loopne
fnsave
sbb
push
addb
imul
test
das
testl
mov
add
and
xor
cmc
test
mov
push
ret
mov
or
add
fistps
adc
sbb
mov
fisubl
pop
xor
jnp
and
hlt
into
test
add
aaa
adcb
mov
jp
xor
add
inc
push
int3
and
fisttpl
popa
push
xchg
xlat
fcoml
imull
aad
loopne
ja
add
mov
mov
out
ret
sbb
jecxz
sbb
jp
xor
inc
shrb
cmp
frstor
inc
inc
mov
push
jecxz
pusha
and
fistps
out
inc
pop
and
clc
add
lahf
dec
jb
sar
xchg
jle
test
mov
cmp
sti
shrl
aam
js
cmp
popf
cltd
add
adc
inc
addb
add
mov
adc
cmp
add
jne
xchg
dec
pushl
repnz
add
in
xorb
outsb
js
inc
sbb
sub
xchg
add
stos
aaa
test
xlat
add
jmp
mov
shl
pop
fadds
mov
divb
add
pusha
mov
je
loope
sub
push
loopne
lods
cltd
jmp
add
int3
add
in
test
pop
lcall
frstor
in
cld
idiv
xlat
add
mov
add
mov
sbb
add
add
lock
and
aam
lods
add
pop
cmp
dec
cltd
add
push
ja
nop
mov
lea
mov
xchg
imul
add
les
cli
clc
inc
ret
cwtl
jge
fsubr
xchg
cmc
cmpsb
sarl
dec
or
sub
xor
and
xchg
or
addr16
sahf
aam
popa
add
fmulp
jmp
pop
jne
ret
push
add
add
rclb
and
out
mov
sub
or
inc
mov
leave
mov
xchg
pusha
push
daa
add
dec
cltd
push
sti
pop
cwtl
xorl
or
add
inc
pop
inc
loop
sbb
push
add
loopne
add
pusha
movsb
sub
mul
add
jnp
mov
push
stos
add
add
pop
imul
lret
aaa
cltd
jns
cli
add
mov
jle
mov
and
jg
add
jmp
rcrb
pop
lret
inc
cs
insb
fistpl
lahf
adc
jae
lds
push
test
mov
pusha
xchg
mov
ret
sbbb
mov
and
sti
ror
testb
mov
loope
adc
push
mov
shufps
or
adc
cli
out
lret
mov
ret
incl
sbb
adc
mov
sar
sahf
mov
add
push
xchg
inc
and
pop
mov
push
jae
jge
mov
ljmp
iret
adc
and
cmpb
mov
mov
aad
add
test
jle
movsl
push
and
jge
adc
mov
push
add
and
push
cli
and
and
insb
outsl
or
cmpsl
rcr
fnsave
and
fwait
sbbl
jmp
or
push
jle
xorb
mov
add
pushf
jmp
or
mov
dec
adc
push
roll
stos
sbb
in
and
fistl
mov
cmpsb
aad
add
push
cwtl
add
sarb
or
xor
sbb
adc
xchg
lcall
jmp
out
inc
and
lret
dec
popf
fimull
mov
pop
cli
or
adc
jmp
dec
push
movb
fisubs
and
xchg
mov
and
scas
lret
icebp
or
lock
xor
sahf
ja
shll
add
lahf
dec
pop
out
push
add
aaa
sbb
fwait
mov
sub
inc
movsl
gs
in
jne
jae
cmpsl
sbb
insl
scas
mov
dec
ljmp
ja
xchg
mov
arpl
sbb
pop
cmp
push
sbb
into
jo
dec
mov
cld
inc
and
stc
pusha
test
push
call
movl
pusha
pushf
mov
pushf
pushl
ret
push
call
xchg
test
pop
mov
ret
mov
push
stos
gs
xlat
mov
mov
hlt
inc
pusha
rorl
fbstp
xchg
test
add
sub
rorl
negl
or
and
jg
cbtw
jle
das
test
jp
fdivs
cmpsb
lods
mov
jnp
repnz
dec
imul
mov
push
fistpll
cmp
pop
shl
sub
aas
push
jo
dec
es
daa
dec
and
pushl
movb
lea
call
pusha
push
push
lea
jmp
lea
je
push
pushf
sub
clc
cmc
cmp
movl
push
lea
ja
stc
clc
clc
imul
call
push
call
sub
jnp
add
outsl
data16
dec
dec
dec
cs
insb
add
mov
or
mov
or
mov
es
and
lds
xor
in
add
outsb
jno
push
dec
xchg
movsl
mov
stos
mov
xchg
out
fbstp
repz
add
loope
fists
lea
cs
and
stos
mov
adc
or
cmc
cltd
jae
repz
test
inc
and
jbe
cmc
test
jmp
add
inc
gs
popa
jb
outsb
je
pushf
mov
lea
jb
jns
cmp
jmp
add
inc
jb
popa
je
inc
outsl
outsb
je
outsb
imul
call
add
pushl
bt
call
push
call
xor
push
call
movsb
jecxz
pushw
add
inc
jb
popa
je
inc
inc
inc
add
lret
bt
not
push
bt
jmp
lods
inc
mov
inc
mov
inc
pop
aam
cmc
mov
jmp
jns
xchg
mov
push
push
jp
data16
mov
mov
sbb
inc
cmp
daa
into
jmp
jg
gs
adc
adc
imul
xchg
call
neg
mov
call
jmp
mov
call
add
inc
insb
outsl
bound
push
imul
rorl
leave
cmpb
jmp
ror
inc
cmc
btc
push
jmp
call
push
call
pushf
lea
jb
pushf
push
pushl
push
pushl
ret
jae
inc
pushf
jmp
add
push
imul
imul
inc
outsl
jb
popa
je
add
and
push
pushl
ret
movsbw
pop
movzbw
push
mov
pusha
pushl
lea
jne
pushf
movzwl
btc
neg
sar
bsr
mov
clc
clc
pushf
call
add
push
hlt
mov
in
lock
or
cmp
mov
jae
push
add
xor
adc
or
push
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
rol
cs
leave
mov
xor
das
popa
sub
adc
lcall
and
roll
jmp
or
xor
or
xor
xchg
or
xchg
or
aaa
sbb
subb
popa
sbb
xchg
jle
sbb
and
fidivs
xchg
mov
jge
push
cmp
mov
fwait
add
jne
cmp
imul
xchg
add
lods
lahf
xchg
xchg
push
jge
add
and
repnz
jge
xchg
pop
add
and
mov
mov
xchg
daa
andb
movsb
adc
pop
incb
add
cwtl
push
and
xchg
sbb
sbb
icebp
mov
mov
mov
gs
jmp
aas
push
setle
mov
or
incb
pop
fisubs
xchg
push
scas
dec
add
lahf
mov
adc
or
addb
cmpsl
add
aad
sti
jne
sahf
cmc
add
add
mov
sbbl
mov
mov
sbbb
sbb
jge
out
push
adc
cmp
xlat
and
adc
dec
mov
pusha
popf
testb
or
aas
aas
imul
mov
adc
add
loop
imul
cmpb
cmp
adc
xchg
mov
lahf
mov
lret
decb
aas
inc
in
ficoml
fisubs
sub
cld
lcall
icebp
push
push
imul
mov
adc
pushf
stos
and
fwait
rorl
xchg
mov
push
jge
orb
add
insl
pusha
cmp
lret
cmc
or
xchg
div
popf
outsl
imul
pop
lret
push
pop
add
movsb
mov
and
adc
and
sbb
mov
or
jb
mov
lea
gs
xchg
mov
andb
inc
incl
sti
add
mov
mov
fnstsw
lcall
imul
add
xor
lcall
add
add
mov
pop
mov
shrl
shr
out
add
sti
mov
cltd
push
xor
pushw
inc
aas
popa
pop
popl
pop
pop
ds
jl
clc
pop
icebp
pop
jecxz
mov
movsl
mov
mov
inc
add
push
mov
xchg
xchg
mov
add
xchg
xor
imull
enter
adc
loope
out
mov
shll
jg
shl
xchg
xor
in
out
adc
dec
cmp
cmp
sub
cmp
divb
add
bound
cld
ret
sub
sti
push
mov
addl
sarb
xor
dec
pop
jg
adc
add
subb
pop
push
add
xchg
mov
fwait
imulb
andb
or
add
mov
adc
mov
mov
ljmp
add
cltd
out
mov
inc
inc
xlat
lret
xor
jge
cmp
and
jl
and
imul
std
imul
std
nop
dec
jecxz
lahf
adc
dec
mov
lcall
mov
movsb
outsl
mov
mov
mov
mov
ret
cmpb
mov
dec
pmuludq
and
xor
leave
aam
negl
lret
sub
fdivp
adc
out
out
sahf
roll
push
lds
sub
mov
jge
push
pop
cmpsl
sbbb
mov
out
push
sub
xor
mov
sbb
sbb
adc
and
and
adc
and
outsl
js
push
inc
and
add
lods
lea
sbbl
add
pop
into
outsl
sub
sub
outsb
lods
dec
xchg
ror
mov
and
int
popl
mov
add
or
lret
verw
mov
sub
ljmp
lds
push
mov
xor
es
inc
outsb
inc
adc
mov
lods
addr16
ror
mov
sub
push
lds
add
lea
cltd
jmp
mov
mov
in
inc
test
call
adc
int
std
push
dec
sub
enter
mov
outsb
jb
js
mov
das
stos
int
test
push
into
add
inc
mov
test
sub
test
aas
lods
fwait
mov
or
lea
das
testl
xchg
xchg
pop
mov
sbb
xor
xor
or
dec
and
orb
push
xacquire
and
jge
cli
sbb
adcb
lret
icebp
subb
imul
or
pop
mov
jmp
and
cmp
and
iret
cmp
mov
inc
inc
pop
stos
cli
add
leave
add
push
dec
inc
stos
mov
pop
jno
dec
in
and
dec
lock
xor
out
push
test
inc
mov
shlb
and
fisubrl
add
sub
add
fadds
leave
add
addb
sbbl
addl
cmpsb
shlb
inc
mov
dec
sub
xchg
andb
or
inc
sbb
mov
fwait
cltd
sub
or
add
ljmp
xorl
inc
mov
test
es
das
mov
test
out
adcb
push
test
in
scas
je
roll
gs
or
and
nop
xchg
rolb
sbb
test
dec
fwait
sbb
int3
les
pop
sahf
rcrb
add
jnp
xchg
and
xchg
popf
adc
xor
push
add
inc
outsb
sbb
rolb
add
or
lret
adc
xchg
push
adc
add
sub
test
and
mov
add
test
xchg
lahf
icebp
inc
inc
pop
or
stos
sub
nop
jnp
xor
testb
xchg
rcl
push
in
out
into
cmp
test
xlat
in
mov
push
fwait
add
cmp
or
push
ret
push
mov
xchg
cmpsb
nop
xchg
or
push
mov
les
sub
sub
jae
sub
add
int3
inc
shlb
test
test
sbb
push
add
push
dec
push
test
orb
add
test
icebp
inc
add
orb
add
or
orb
popf
loope
adc
dec
fsubrs
adc
sub
dec
lods
stos
fcmovnb
mov
add
ljmp
orl
and
test
adc
xor
and
jl
addl
xor
sahf
lds
pusha
inc
and
mov
xor
adc
inc
push
mov
loope
xchg
and
minps
push
in
adc
sub
pop
ss
jae
addb
fiaddl
jge
add
add
mov
jle
jb
inc
mov
mov
pusha
xor
or
mov
loopne
xchg
inc
add
inc
inc
mov
addl
loope
xchg
inc
add
inc
inc
mov
bound
nop
inc
addb
ret
loop
mov
test
or
xor
arpl
inc
mov
or
test
inc
and
mov
inc
test
inc
movsb
mov
in
add
and
test
inc
test
inc
lds
inc
push
mov
add
lahf
in
andb
xor
push
xor
inc
popf
test
or
insb
mov
lahf
or
lea
add
scas
into
out
comiss
pop
addb
add
popa
rolb
add
and
loop
ret
int
insb
inc
lods
data16
in
mov
jnp
outsb
imul
test
movb
add
lds
loopne
les
out
push
data16
and
add
dec
dec
int3
add
in
lods
add
inc
arpl
andl
fs
movsb
dec
fdivp
inc
adc
add
xor
sbbl
add
and
and
into
mov
inc
add
add
xor
pop
adc
mov
add
adc
mov
add
mov
mov
jecxz
and
loop
popa
sbb
test
inc
mov
dec
inc
sbb
in
es
dec
in
inc
mov
sub
add
int
xorl
inc
inc
adc
add
add
bound
add
adc
mov
adc
les
add
and
add
mov
sub
mov
lods
ret
andb
loop
and
mov
test
dec
inc
and
popf
mov
test
add
add
test
xor
movsb
inc
out
inc
repz
adc
add
test
inc
and
mov
cmpsb
or
cmp
out
inc
sbb
arpl
addb
add
iret
push
movsl
xchg
xchg
in
add
mov
lock
addl
xor
cmp
adc
inc
jbe
mov
inc
inc
xchg
add
gs
inc
inc
cmpsb
xchg
xchg
inc
lods
movb
inc
lds
adc
inc
inc
xchg
mov
add
mov
shll
mov
ds
aas
out
or
test
sub
shlb
mov
sbb
mov
adc
and
inc
and
test
mov
push
adc
pop
enter
add
call
or
inc
stos
inc
sub
and
arpl
adc
add
mov
add
add
test
and
add
xor
adc
or
rol
dec
xchg
and
test
hlt
mov
popl
inc
xchg
inc
cmpsb
pop
rorl
arpl
inc
stos
loope
adc
add
adcl
and
and
xor
or
inc
and
add
jecxz
inc
and
and
out
mov
xchg
lret
inc
shlb
orb
push
inc
push
test
xor
adcl
xchg
mov
cmpsb
cmc
inc
add
or
int3
movsl
mov
lds
orb
inc
and
subb
test
inc
xor
adc
add
movsb
out
pop
dec
inc
push
in
adc
add
ss
adc
add
push
dec
cltd
mov
scas
pop
rol
ljmp
shr
into
punpckhdq
ret
es
aad
dec
or
sbb
das
les
mov
fsubrs
mov
inc
mov
lock
scas
adc
mov
inc
inc
inc
fsubr
and
sub
mov
repz
popl
stos
jo
cmp
add
adc
jmp
fs
push
pop
jecxz
insb
and
and
mov
popa
fs
pushf
movsl
or
xor
inc
or
pop
andb
jno
xchg
inc
inc
xchg
arpl
mov
inc
mov
xor
push
addl
and
push
xor
add
cmp
inc
jb
andl
data16
test
movsb
into
enter
adc
aaa
inc
rcrl
fimuls
jl
gs
add
out
cmp
adc
pop
xchg
add
push
inc
xor
adc
jae
push
and
inc
and
enter
inc
inc
roll
repz
add
addl
adc
inc
inc
je
movl
xchg
or
mov
add
aam
inc
hlt
xor
cmp
adc
gs
inc
mov
es
jle
pop
inc
add
xor
jne
xchg
enter
mov
out
inc
adc
aad
cmc
mov
ss
lret
push
addl
add
enter
add
jecxz
and
test
inc
sub
add
in
jle
pop
in
call
testb
pop
cmp
mov
pop
pushf
cmpsb
inc
call
mov
or
adc
xchg
push
xchg
xchg
and
add
xor
and
loope
mov
dec
addl
add
int
or
inc
xchg
inc
sbb
cmp
mov
loopne
adc
cmp
fdivrs
xabort
and
sbb
cmp
inc
jns
adc
inc
test
mov
fnstenv
rcrl
lods
movsb
add
mov
dec
adc
clc
in
fcompl
es
orb
in
sbb
xor
ds
push
nop
dec
inc
pop
inc
mov
push
sub
pop
ss
cmp
add
inc
inc
rorl
sbb
lret
mov
lahf
add
out
xor
movsl
adc
pop
adc
arpl
jnp
mov
add
fs
pop
jp
jecxz
and
sbb
addl
inc
pusha
sti
into
add
or
or
mov
jecxz
dec
jl
roll
dec
and
pushf
adc
inc
add
cld
mov
inc
aad
pop
add
mov
or
mov
std
xchg
add
and
mov
movsl
pushf
inc
insb
ds
mov
psllw
addb
out
mov
dec
inc
movsl
mov
enter
or
enter
adc
mov
inc
pop
inc
mov
add
aas
add
orl
pop
adc
out
and
mov
push
pop
mov
xor
in
in
add
out
inc
inc
enter
adc
mov
mov
loop
roll
arpl
leave
xorl
and
pop
roll
add
inc
ljmp
gs
and
add
and
out
in
rolb
inc
xlat
and
pop
shl
add
and
add
and
popaw
adc
inc
and
test
shll
inc
push
movsb
cmpsl
inc
loope
cmpl
pop
inc
xchg
add
inc
mov
test
xorb
cmp
popa
sbb
mov
les
out
mov
inc
inc
and
gs
and
enter
inc
inc
xchg
or
push
inc
arpl
sbb
xorl
add
xor
mov
in
jecxz
lcall
inc
sbb
enter
leave
inc
sbb
ljmp
ljmp
dec
out
fs
adc
movsb
pop
mov
les
ret
sub
jp
addb
add
mov
and
mov
rorb
andl
xor
mov
jle
pop
and
movsl
sbbl
dec
and
xchg
push
mov
mov
adc
inc
xchg
xor
popf
xorl
xchg
lea
icebp
pushf
and
arpl
out
cmp
test
sti
mov
mov
pop
inc
cmp
ret
mov
xor
add
inc
andb
test
out
movsl
aad
mov
xchg
and
sub
dec
mov
push
inc
mov
xor
mov
test
pop
aaa
inc
inc
inc
movsl
daa
inc
inc
cmpsb
and
xchg
mov
push
aad
loopne
out
loop
andl
mov
call
sbb
push
add
in
and
push
dec
and
sbb
jl
es
or
lar
dec
push
mov
addr16
push
orb
push
xchg
ds
or
arpl
js
mov
lcall
movsl
arpl
in
mov
fnstsw
mov
rorw
add
in
lea
test
jecxz
rclb
loope
cmp
nop
pop
pop
faddp
xchg
jb
push
cmpsb
mov
test
into
adc
xchg
and
arpl
adc
add
rolb
add
jmp
test
pop
js
mov
sbb
and
or
inc
mov
loopne
inc
and
jmp
sbb
es
cmpsb
inc
pop
adc
jo
test
xchg
or
xlat
and
inc
mov
insb
bound
push
or
sub
inc
roll
movsl
push
out
add
push
adc
pusha
add
and
popa
inc
mov
pushf
cmp
sahf
in
adc
sub
shl
and
mov
add
inc
enter
mov
sub
roll
add
and
mov
arpl
xchg
rcrl
sbb
movsl
mov
mov
popf
addb
adc
add
rolb
test
aam
cmpsb
or
inc
bsr
or
es
xchg
fwait
inc
in
inc
dec
sub
or
or
inc
movsl
push
test
add
fcomps
add
or
and
push
test
sub
lret
xlat
loop
in
and
inc
movsl
dec
loopne
mov
push
aad
or
mov
inc
sbb
inc
pop
dec
adc
in
invd
or
arpl
add
sbbl
leave
loope
lds
adc
adc
or
loopne
pusha
mov
lret
insl
or
nop
test
aaa
dec
sbb
xor
push
and
pushf
cmp
or
inc
adc
jecxz
in
push
mov
add
mov
push
test
jecxz
test
jb
and
add
add
arpl
or
or
mov
aad
fisubs
dec
ret
orb
add
ret
mov
jo
fadds
or
cmpsb
lea
jno
push
or
add
addb
mov
push
pop
dec
rorl
adc
movl
xor
inc
add
in
pop
nop
jo
inc
or
dec
fneni(8087
jmp
or
sub
inc
cmp
mov
dec
or
gs
or
and
add
add
adc
adcb
xchg
xor
arpl
mov
les
adc
adc
adc
add
in
push
clc
push
inc
loope
sbb
mov
mov
lcall
and
adc
rcr
mov
add
test
lods
dec
nop
adcb
push
push
dec
sbb
or
pop
ficoms
andl
xor
and
inc
out
std
xor
add
orb
xor
les
pusha
fsubl
xchg
sbb
mov
sbbb
pop
out
add
xor
mov
inc
ficoml
or
or
lcall
sub
inc
jo
or
sbbb
mov
adc
cld
rol
ret
and
or
xor
jmp
mov
jecxz
mov
or
int
xor
imul
bound
lds
bound
test
push
arpl
xor
sarl
adc
test
or
xchg
addr16
xchg
and
dec
inc
fld
pop
stos
pop
xchg
inc
add
and
and
mov
mov
faddl
pop
lcall
cvtdq2ps
bound
inc
sbb
mov
andb
or
fs
push
sbb
aad
xor
lds
mov
cmp
data16
test
add
xchg
mov
lcall
push
xchg
cmp
xor
lds
or
and
and
jb,pt
popa
and
push
adc
aam
je
pop
fs
shlb
and
out
add
andb
subb
mov
rolb
xor
imul
and
sbb
mov
xchg
push
push
push
adc
adc
loope
pop
xchg
xor
lret
add
xor
nop
xor
add
dec
iret
mov
aad
mov
inc
ret
sub
cli
or
push
into
out
xchg
inc
xchg
xor
and
inc
sbb
cmp
push
or
inc
aas
lods
ret
add
jo
iret
add
and
imul
shrb
mov
dec
xor
adcb
popa
sbb
dec
dec
xchg
push
inc
shlb
mov
cltd
shlb
lock
and
ds
push
inc
add
je
mov
pushf
or
int3
addl
pop
cmpb
mov
and
inc
inc
sbb
adc
or
pop
adc
andb
xchg
nop
iret
int3
inc
add
push
dec
xchg
or
sub
dec
nop
inc
dec
shrl
xchg
pushw
nop
loopne
add
xchg
inc
pusha
jecxz
xchg
pop
test
movsb
add
mov
cli
dec
rcrl
enter
dec
adc
push
xchg
add
add
stos
arpl
add
and
adc
mov
test
lret
cwtl
or
mov
push
into
mov
sahf
test
and
push
xor
dec
push
sbb
stc
xchg
add
inc
mov
add
movsb
xor
test
mov
xchg
sub
and
loopne
addl
orb
push
pop
dec
push
push
add
loope
xor
mulb
xchg
in
pop
adc
xchg
mov
and
cwtl
push
xchg
push
push
push
mov
pop
push
dec
push
xchg
sbb
push
mov
cmovns
nop
rclb
adc
mov
nop
push
pop
lds
push
adc
and
inc
sbb
push
mov
xor
or
movsb
or
xchg
mov
or
test
xor
adc
sub
mov
mov
aam
adc
adc
test
mov
or
fisttpll
mov
add
jo
negb
add
fwait
cmp
push
lods
rorl
imul
test
push
add
adcb
rorb
aad
add
sub
adc
push
iret
adcb
pop
or
rolb
inc
test
inc
push
inc
cwtl
repnz
test
pop
mov
xchg
or
xchg
pop
mov
insl
xchg
cwtl
push
nop
aad
test
aad
xor
aam
xor
cltd
inc
mov
repnz
aam
movsl
adc
xor
jne
inc
or
push
loopne
xchg
sbbl
or
aad
mov
dec
add
xchg
mov
add
in
sbb
loope
and
xor
add
adc
push
adc
adc
mov
adc
leave
loope
xchg
and
rorb
xchg
push
mov
pop
in
mov
xchg
push
xchg
test
xchg
sub
add
xchg
pushf
xor
and
es
adcb
dec
and
rol
inc
adcl
inc
dec
sbb
in
push
xchg
push
or
add
adc
push
adc
daa
pop
arpl
or
iret
js
into
lods
push
sub
dec
xchg
or
and
repnz
inc
jge
dec
and
lea
addb
js
movsb
add
xchg
test
adc
push
xchg
sbb
pushf
lods
adc
dec
orb
push
or
mov
push
adc
adc
loopne
cmpsb
add
add
push
adc
lret
shrl
or
repnz
xchg
insb
sbb
lea
push
iret
adc
sbb
sub
push
seta
pop
push
sub
sub
mov
xchg
adc
imul
xchg
xchg
test
inc
rolb
and
arpl
add
addb
push
xor
pop
lahf
inc
mov
cwtl
sbbl
xor
add
int
pop
pop
dec
mov
mov
cwtl
xorb
mov
nop
mov
test
push
xchg
dec
rcll
xchg
int3
push
popa
jmp
jecxz
pop
inc
js
clc
jl
xor
adc
xor
inc
movsl
and
inc
sub
loopne
and
int3
lock
push
xchg
sub
test
int3
adc
xor
aam
hlt
xchg
or
add
dec
fsubrl
adc
mov
cmp
xor
rcrb
and
xlat
int
add
inc
push
popa
xchg
cltd
cmpsl
mov
pop
rorl
andb
mov
cmpsb
roll
add
aad
and
xchg
test
push
in
xor
push
mov
int3
pushf
xchg
adc
add
adc
test
out
in
xchg
mov
pop
je
lcall
adc
sbb
adcb
or
test
xor
add
push
mov
push
pop
mov
subb
nop
and
shlb
dec
es
mov
daa
inc
pusha
inc
add
andl
push
test
push
jb
jecxz
hlt
xor
js
hlt
xor
and
icebp
rol
or
and
inc
mov
pusha
pop
push
or
mov
into
mov
push
nop
fld
mov
jns
pop
adc
add
xor
xchg
and
cmp
inc
enter
dec
push
enter
dec
shlb
sub
push
pop
cmp
push
jne
aad
xchg
mov
test
pop
and
mov
jge
mov
jo
inc
push
add
lcall
movsl
xor
push
cmpsb
mov
mov
inc
int
or
xchg
xchg
aad
arpl
and
mov
cwtl
mov
pusha
jecxz
dec
bound
insl
adc
xchg
fadd
mov
faddl
lahf
dec
sub
test
add
xor
cmpb
sarb
gs
jbe
mov
test
or
and
iret
xchg
cmpsb
mov
adc
ficoml
lahf
and
enter
ret
jmp
mov
test
mov
pop
ret
rolb
inc
aad
sbb
ds
fsubl
pushf
xchg
jp
clc
dec
and
adc
pusha
sub
test
enter
int
jecxz
pop
xor
sbb
inc
jl
insb
pop
adc
movsl
in
rclb
pop
in
sbbb
push
repz
test
lea
xchg
addl
pop
loop
ja
inc
subb
xchg
or
add
dec
adcl
mov
push
bound
or
test
push
push
xor
sbb
popa
push
push
testl
sbb
pop
insb
add
popf
dec
jg
and
int3
add
in
add
xchg
inc
pop
and
or
mov
mov
or
push
inc
push
mov
out
mov
nop
cmpb
cwtl
inc
xchg
lds
int3
lods
mov
movsb
rolb
pop
sub
rcrb
adc
and
mov
inc
or
mov
cmpsb
and
pop
nop
les
aam
add
adc
pusha
or
aas
adc
cltd
mov
mov
shl
fisubs
xchg
adc
mov
pop
inc
and
pusha
imul
fiaddl
xchg
js
xchg
ret
rorb
enter
sbbb
mov
cmp
aad
sub
xor
loope
add
gs
xchg
xlat
popa
out
jno
gs
pop
or
xchg
jecxz
adc
test
popa
inc
out
inc
cli
mov
xchg
orl
push
inc
frstor
sub
pop
and
les
pop
add
inc
dec
or
or
pop
cs
or
mov
shrl
adc
cmp
pop
inc
mov
or
mov
inc
add
bound
xor
adc
add
imul
mov
sub
jp
xchg
cmp
loope
lds
lods
add
mov
ret
stos
roll
aad
xchg
pop
insl
aad
mov
or
mov
iret
andl
adc
cmp
shll
mov
add
pop
or
in
add
push
negb
movsb
test
or
xchg
pop
mov
lcall
xchg
ss
pop
cwtl
or
xchg
fs
out
leave
bound
test
inc
push
popa
or
pusha
dec
test
add
dec
jbe
add
cmpsl
shll
xor
push
xchg
push
add
xlat
mov
lea
test
test
mov
les
add
mov
loop
mov
rolb
push
adc
pushf
inc
mov
fiadds
cmp
mov
xchg
sub
gs
daa
xor
xchg
stos
jg
inc
or
mov
bound
xchg
adc
loope
mov
pop
and
push
lcall
dec
and
add
leave
bound
pop
cmp
movsl
jmp
and
add
lcall
cmp
mov
fidivl
lcall
pop
xchg
add
mov
xorl
or
inc
ret
mov
push
sbb
cmp
inc
xchg
test
aam
fmulp
and
cmpsb
sbb
inc
dec
or
repnz
or
or
add
dec
inc
cmpsb
orb
lcall
and
inc
pop
lds
xchg
jo
movsl
andl
jmp
or
mov
rorl
adc
pusha
push
pop
aam
add
test
inc
movsl
ret
ret
aaa
or
lods
mov
push
nop
xchg
pushf
adc
pop
aad
cmpsb
lea
test
add
lds
adc
push
movlps
popf
popa
or
loope
mov
ret
push
adc
popf
repnz
shlb
sub
adc
add
cltd
movsl
xor
sbb
stos
adcb
ret
rolb
fildl
xchg
mov
sbb
push
xor
xchg
fadds
cmp
inc
jnp
sbb
lcall
pushf
mov
rclb
adc
lahf
movsb
pop
xchg
push
xchg
inc
pop
mov
sub
lds
mov
mov
inc
pop
or
movsb
adcl
mov
sbb
jo
fs
rol
pop
sbb
cmp
andl
in
adc
mov
inc
xchg
xchg
aam
andb
xchg
or
inc
mov
dec
popa
into
popa
or
xchg
push
pop
mov
pop
and
gs
test
lret
or
and
and
popf
cmp
xchg
leave
dec
inc
cwtl
arpl
cltd
mov
pop
dec
movsb
or
and
xor
sbbl
rolb
pop
inc
sbb
fcmovnb
fwait
xor
test
test
mov
mov
or
add
leave
pop
or
sbb
or
push
mov
stos
mov
jecxz
lea
sub
andl
rolb
test
inc
or
push
inc
xor
andb
loope
lret
lcall
fsub
xchg
adc
mov
leave
ret
pop
xchg
dec
mov
xchg
xchg
inc
xchg
push
pop
pop
bound
aaa
push
test
xlat
iret
cli
sbb
rol
les
inc
or
pusha
xchg
dec
orb
fs
adc
mov
fcmovbe
in
andl
rclb
add
inc
cmpsb
sbb
sbb
int
dec
dec
popf
add
xchg
sub
imul
repz
imul
inc
push
adc
dec
push
xchg
sbb
test
mov
adc
inc
imul
cmpsb
or
mov
or
movsl
sbb
and
or
adc
pusha
adc
xchg
bound
push
mov
xchg
popa
xor
movsl
sub
mov
pop
xor
cmp
in
mov
arpl
and
sbbl
mov
inc
jae
test
add
shrb
sarb
dec
cmp
rclb
movsb
jecxz
dec
add
xor
sar
and
adc
cmpl
and
fiadds
pop
loop
fistpl
rclb
mov
adc
xor
mov
nop
divb
xor
cmp
mov
lods
ds
popa
cmpl
mov
movsb
fs
xor
add
fsubrl
mov
pop
fwait
inc
test
push
sar
pushf
out
xchg
or
int3
jmp
addl
sub
adcl
es
push
loop
es
daa
mov
and
in
mov
andb
int
push
mov
inc
loope
rcrl
push
fcomp
test
andl
push
movsb
cmpb
xor
push
add
mov
cmpl
dec
push
inc
arpl
mov
jl
add
mov
mov
inc
mov
rolb
mov
or
shlb
and
inc
mov
imul
push
and
rcrb
int
xchg
mov
nop
and
out
leave
push
and
xor
mov
inc
imul
sub
mov
cwtl
add
rclb
adc
jno
add
aam
xchg
mov
add
push
orl
sbb
mov
mov
add
aas
loop
xchg
jb
xlat
adcl
push
mov
cmp
mov
ret
orl
pop
adc
lds
push
add
ljmp
xchg
xchg
adc
rclb
mov
sbb
movsb
orl
add
repz
in
add
je
sahf
test
adc
js
leave
mov
add
shl
stos
rolb
add
mov
add
lods
adc
popa
sbb
stc
and
mov
inc
or
mov
scas
rcrb
es
orl
out
mov
push
lcall
shlb
in
xor
cmpsl
stos
add
iret
push
lret
insb
mov
add
adc
repz
es
push
mov
mov
and
or
xchg
jo
jp
cwtl
mov
rolb
inc
xor
push
xchg
and
andb
add
and
dec
in
cmpb
mov
push
or
out
mov
hlt
pop
ret
andb
adc
mov
stc
addl
iret
cmpsb
jns
and
inc
pop
mov
jno
pop
pushf
xchg
bnd
mov
sbb
sarb
into
mov
mov
cwtl
enter
and
xchg
andl
lods
push
xor
sub
jnp
xor
rcll
test
test
rol
add
loope
jmp
ret
in
pop
lahf
xchg
addb
into
xchg
pop
sub
and
es
pop
fs
pushf
lret
xchg
xchg
xor
pusha
rolb
cmc
push
popf
pop
mov
test
imul
sarl
push
aad
popf
and
add
cmpsb
lds
adcb
inc
add
xchg
adc
and
sbb
mov
xchg
ds
ret
mov
nop
cld
jmp
pop
inc
xor
bound
xchg
xchg
xchg
xor
nop
arpl
push
sub
popa
test
mov
pop
insl
sbbl
adc
test
jp
mov
rolb
adc
xchg
adc
rorl
orl
or
xchg
aad
loopne
dec
push
loope
push
movsl
push
push
lcall
loopne
in
xor
xlat
bound
rorb
sbb
push
movsb
outsl
add
inc
xadd
inc
and
bound
mov
inc
lds
pop
xlat
dec
inc
mov
pop
mov
nop
dec
push
shl
push
sete
pop
sbb
and
mov
stos
and
ret
cmp
or
lret
dec
inc
addb
sub
loop
mov
push
mov
cltd
or
dec
add
jecxz
add
jmp
push
push
cltd
in
xor
sub
pop
mov
add
pop
jno
test
addl
mov
and
jecxz
and
dec
addb
push
push
mov
shrl
lea
test
sub
jecxz
aam
dec
imul
push
sbb
xchg
int
movsl
xchg
and
nop
psubsw
nop
adc
and
add
and
mov
xchg
xchg
push
lea
add
aad
xor
loop
inc
inc
cmc
mov
addl
inc
or
pop
adcb
xchg
test
lods
cmpsb
testb
xchg
mov
xchg
dec
add
roll
cwtl
ret
lods
das
xchg
jns
xor
dec
fmul
mov
sbb
mov
dec
inc
nop
dec
nop
pop
push
lds
dec
and
daa
add
add
ret
imul
in
les
nop
mov
insl
and
sub
stos
or
cmc
cmpsl
jno
cmp
into
and
in
jae
and
lods
or
pop
int
in
in
sub
dec
inc
fucomip
cmp
adc
inc
add
cmc
inc
jnp
xor
xor
scas
data16
orb
das
xor
outsb
inc
insb
mov
xor
inc
test
or
lea
and
xor
lods
xor
inc
dec
les
mov
leave
adc
xchg
clc
ss
fdivr
ficompl
pop
xchg
daa
clc
pop
mov
hlt
push
fwait
loopne
add
vmovntdq
mov
addl
xlat
jbe
decl
aam
dec
aas
pop
mov
xchg
add
enter
test
mov
jmp
sbb
xor
sbb
sbb
xor
inc
push
test
inc
adc
inc
push
test
inc
or
inc
push
test
inc
orb
add
add
sahf
push
xor
or
xor
inc
sbb
inc
adc
xor
inc
xor
inc
mov
inc
orl
cmp
and
or
mov
mov
inc
test
sub
dec
or
mov
enter
inc
sub
inc
test
or
test
push
mov
lret
or
movsb
dec
xchg
shrl
jbe
shrb
xlat
scas
fst
sub
fnstsw
daa
fildll
sub
dec
test
mov
scas
inc
into
mov
rdtsc
das
inc
dec
test
jno
lret
inc
aas
loop
xlat
test
in
jno
jmp
aas
inc
add
jmp
aas
loop
xlat
test
in
jno
sub
push
and
xchg
sub
or
gs
or
enter
add
add
push
ret
pop
daa
call
jecxz
pushf
cmpsb
popl
inc
test
loope
push
hlt
notb
push
fwait
and
incb
outsl
mov
je
shl
cmp
jae
hlt
repnz
push
fwait
and
icebp
xor
in
push
pop
push
subl
fs
xor
sbb
pushf
cmpsb
dec
xchg
addw
aad
sub
sub
fildl
test
test
test
in
cmp
sub
or
ljmp
subl
dec
sub
or
jmp
daa
mov
sub
or
call
daa
mov
sub
je
inc
les
adc
aas
jp
mov
fstps
inc
lds
or
orl
enter
shlb
jecxz
adc
dec
ror
rol
mov
loop
jno
das
xchg
ret
test
loopne
les
pop
nop
pop
xor
pop
jle
mov
lds
sub
dec
je
test
inc
cmpsb
mov
push
out
sti
inc
sbb
into
sub
mov
lahf
push
repz
inc
inc
adc
rclb
and
inc
adc
or
mov
mov
sti
inc
or
and
scas
push
xchg
jns
fstps
call
cs
outsb
dec
orb
mov
clc
rolb
jbe
xchg
loopne
jmp
data16
push
mov
addb
push
outsl
inc
aas
mov
xor
inc
incb
inc
mov
mov
test
mov
std
test
fstl
adc
adc
inc
push
test
or
cmp
sbb
das
cld
xor
inc
faddl
inc
pushf
mov
jl
lea
test
inc
sbb
add
adc
lcall
inc
xchg
mov
xor
mov
inc
test
and
cltd
or
mov
cmp
inc
stc
mov
mov
xor
into
mov
xor
inc
pop
test
or
fmuls
xor
or
mov
xor
inc
test
push
xor
and
sbb
xchg
xor
push
xor
pop
xor
xor
inc
mov
pop
mov
jbe
xor
xchg
test
or
push
int
sbb
mov
js
pop
jge
sbb
xlat
cmp
fistl
aas
idiv
pop
pop
roll
ss
sbb
or
xlat
mov
jnp
adc
xchg
cltd
cmp
xor
add
cmp
adc
mov
test
fadd
pop
rclb
fsub
cmp
sbb
jge
pusha
jbe
sbb
ja
fwait
xchg
sbb
push
pop
xchg
xorl
cltd
lret
mov
jmp
std
popf
mov
mov
imul
or
add
in
lret
aaa
push
stc
pop
or
adc
fs
fidivl
ret
cmp
xchg
cli
xchg
push
cmpb
cltd
idivl
shlb
clc
loope
jns
pop
push
add
sar
call
mov
adc
adc
mov
add
push
mov
mov
lret
or
adc
lret
enter
adc
js
dec
repnz
mov
test
sub
addb
xor
orl
pop
shll
stos
or
sub
shlb
repz
jmp
push
and
xchg
fcompl
and
ficompl
scas
je
and
pop
hlt
sbb
mov
cmp
test
inc
push
inc
sbb
pop
ficoms
xchg
dec
adc
cld
sbb
push
rcr
sbb
nop
cli
jl
pop
push
add
mov
jp
xchg
les
or
ret
xchg
xor
dec
test
push
pop
adcb
xchg
jp
jge
pop
nop
ljmp
subb
addb
xor
xor
neg
dec
add
seta
push
sub
push
or
and
sbb
pop
test
pushf
mov
xor
or
mov
xchg
or
pop
xor
pushf
and
or
mov
cltd
jne
sbb
adc
or
fldcw
enter
inc
or
push
adc
mov
bound
add
jno
inc
dec
xchg
push
cmpb
and
xchg
and
mov
add
mov
test
adc
addl
fs
mov
sbb
xchg
int3
cmc
inc
mov
or
or
xorl
xchg
adc
push
xor
leave
and
add
or
push
js
add
push
push
testb
sbb
rcrl
push
ss
aam
mov
adc
je
fcomps
xor
sub
test
sbb
fldcw
add
pop
pop
sti
ss
sbb
in
cmp
cmp
out
jbe
mov
rcll
mov
mov
enter
jbe
sbb
add
addl
add
pushf
shlb
and
daa
inc
xchg
sbb
pop
add
movb
push
ret
fcompl
lahf
push
inc
js
daa
stos
push
or
std
pop
jb
sub
pop
mov
lahf
xorl
popf
dec
test
add
push
pop
cmp
mov
jp
push
addl
sbb
ja
mov
lcall
nop
aaa
xchg
cli
sub
xorl
mov
add
lret
add
add
pop
not
decl
test
dec
adcb
lret
or
cmp
mov
push
clc
jbe
aaa
lods
mov
leave
sti
add
or
inc
and
dec
int
mov
add
pushf
jbe
scas
xor
and
ds
sbb
mov
xchg
mov
cwtl
orl
mov
jp
pop
pop
pop
jne
std
paddsw
xor
xchg
or
push
negl
mov
adc
fcomp
adc
shll
pusha
mov
cmp
addb
add
xor
pop
jbe
enter
lds
in
lea
addb
lods
sub
mov
sbb
bound
js
lds
xor
ja
stc
add
int3
lods
add
ljmp
cs
sbbb
leave
push
mov
mov
add
out
rorb
and
pop
cltd
push
push
test
out
sbb
mov
ss
xchg
or
sub
inc
add
add
mov
pop
faddl
inc
ss
xor
andb
and
jmp
or
sub
dec
adc
adc
xor
mov
inc
xchg
pop
dec
add
sbb
sti
xchg
add
adc
cltd
sbb
xchg
test
inc
push
dec
dec
inc
add
or
or
subl
adc
inc
xchg
adc
add
inc
push
add
sbb
add
fwait
inc
mov
or
or
add
leave
push
and
out
inc
add
add
add
add
pop
inc
add
and
pop
xor
shl
and
aas
push
sbb
loop
and
adc
inc
pushf
add
test
xor
adc
sbb
adc
inc
adc
push
add
adc
rolb
or
adc
xor
adc
fnsave
add
add
cltd
xchg
add
ja
or
sbb
nop
mov
add
add
stc
pop
mov
pop
loope
push
mov
sbbb
or
pop
ficoml
bound
dec
or
adcb
push
andl
or
leave
pop
testb
addl
nop
add
rolb
enter
jbe
push
fwait
inc
or
adc
sbb
sbb
or
jne
dec
add
push
pop
xchg
or
in
in
scas
mov
ljmp
mov
fwait
or
clc
jge
pushf
sbb
pop
cli
push
or
add
and
jmp
or
test
test
xchg
or
test
and
test
or
sbb
adcl
xchg
pushf
sbb
out
xor
push
cmp
mov
cmp
cmpsb
adc
out
in
loop
dec
sub
cmp
pop
or
mov
jmp
loopne
mov
mov
es
jmp
and
mov
add
sub
xchg
jb
popf
cmpsb
and
add
insb
inc
imul
popa
bound
imul
shrb
push
mov
movb
pushf
lea
jmp
pop
mov
xor
dec
push
xor
aaa
dec
mov
ret
or
scas
inc
pop
rorl
mov
inc
cmp
out
sarl
xchg
std
jnp
mov
mov
sub
mov
pop
lds
mov
call
cmp
les
and
scas
mov
push
adc
insb
push
inc
add
jge
xor
gs
jns
sbb
xchg
js
aaa
fadds
and
mov
cmpsl
fld
scas
xlat
sbb
out
xchg
adc
and
inc
or
fildll
jecxz
arpl
js
iret
sbbb
fcoml
jecxz
inc
lahf
and
jne
and
lods
loop
xchg
add
pop
rorb
mov
pop
out
out
add
ret
mov
ror
xchg
cmpsl
fcomps
xacquire
push
xchg
aaa
testl
sarl
repz
adc
cli
push
cmp
add
adc
repz
mov
pop
jns
cld
cmp
jnp
sub
aad
inc
xor
jge
adc
xor
mov
inc
mov
test
test
out
test
and
adc
mov
push
inc
cmp
test
shll
shlb
dec
ss
out
or
rorl
jl
add
pop
movsl
cmp
pop
shrl
sub
inc
dec
pop
mov
adc
add
inc
fstl
js
cwtl
pop
xor
into
sbb
jnp
pushf
cmp
push
test
bsf
neg
mov
cmp
cmp
push
cmc
test
push
pushf
push
or
movw
lea
je
bt
mov
not
bswap
dec
jo
mov
call
add
insl
imul
jo
gs
jb
dec
gs
fs
cmp
cmp
call
mov
lea
push
mov
movsbw
mov
pushf
pushl
ret
nop
out
loope
jecxz
cld
pushf
out
fs
mov
int
and
jbe
and
sarl
stos
mov
adc
dec
scas
xchg
mov
orb
pop
scas
outsl
jle
pushf
not
call
add
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
call
jg
and
mov
cmp
pop
mov
mov
xor
cmp
es
dec
add
cmp
sub
push
mov
fwait
jmp
cli
dec
xlat
cmp
push
inc
push
dec
xor
cs
insb
add
sarb
call
adc
popf
cmc
pushf
test
pushf
push
pushl
jmp
jmp
push
call
mov
sti
mov
sbb
incl
add
jbe
call
add
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
lret
bswap
mov
pop
call
enter
daa
frstor
fldenv
lret
inc
jae
mov
and
add
lods
fmull
mov
mov
mov
cmp
add
outsb
test
in
out
stc
int3
push
fmull
leave
mov
mov
mov
add
negl
jb
pop
and
pusha
call
add
inc
gs
gs
popa
addr16
outsl
jae
add
inc
gs
jb
jns
outsb
jne
add
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
xchg
cmc
pushl
ds
fdivrs
ds
pop
mov
push
push
icebp
mov
fildll
jnp
imul
fwait
sbb
movsb
aas
mov
mov
pop
sub
lea
xchg
xor
jmp
push
lock
pusha
mov
push
mov
scas
jecxz
add
adcb
dec
movsl
leave
cmpsb
imul
and
cmpsl
push
shll
pop
sub
es
cmpsl
add
ja
jbe
dec
jne
inc
gs
jne
inc
gs
add
xor
cmp
call
jmp
adc
aam
xor
pushf
mov
shl
shr
xor
add
clc
call
add
pop
outsl
outsb
gs
je
call
pushf
mov
pusha
mov
movb
mov
movsbw
jmp
call
push
call
xchg
add
je
imul
arpl
sbb
pushf
arpl
sbb
mov
pop
add
pop
push
cmp
lea
ret
jle
jp
and
insl
sub
out
mov
mov
xchg
xchg
pusha
push
or
aaa
dec
and
hlt
push
inc
dec
ss
xor
and
sarl
push
jmp
jno
and
fimuls
fadd
in
ror
popa
pop
or
nop
pop
cs
cmp
sub
jo
movb
pushf
call
add
inc
jb
popa
je
dec
outsb
jne
add
push
gs
jo
outsb
dec
gs
js
add
mov
xor
dec
xor
mov
es
mov
cmp
sbb
scas
xchg
pop
les
aam
out
jecxz
data16
nop
mov
lds
pop
mov
xor
inc
mov
movsb
mov
or
push
mov
sub
loope
fisubrl
cltd
adc
mov
or
push
adc
lods
shrb
push
das
mov
stos
push
lret
ret
dec
jnp
push
ss
mov
mov
jbe
push
jnp
pop
sbb
or
xchg
fisubrl
in
sub
sub
adc
icebp
ret
lods
loopne
pop
dec
sbb
stc
stos
mov
lret
daa
int
ds
push
cmc
or
xchg
jb
testb
jg
in
push
push
arpl
or
into
mov
mov
nop
pop
out
out
pusha
pop
scas
mov
mov
xor
jmp
lds
stc
fs
das
pop
mov
in
fwait
cltd
push
xchg
pop
mov
push
xchg
fadds
mov
inc
insb
xchg
out
pushf
inc
call
stos
add
imul
sbb
hlt
push
xchg
rorb
sbb
fucomip
cmpsb
jae
adc
xchg
jge
mov
outsb
adc
xchg
call
push
cmc
test
xchg
pop
fldt
adc
stos
lcall
pop
jge
aaa
mov
pop
lods
shll
inc
rdmsr
rorl
lcall
pop
leave
movsb
lret
in
push
adc
ret
pop
mov
mov
into
roll
mov
push
cmc
in
lret
xor
xor
aaa
ficoms
fidivs
adc
xchg
sti
xchg
pop
out
popf
arpl
push
loopne
orl
push
aas
mov
dec
and
add
mov
leave
popa
pop
cmc
sarl
fdivl
je
adc
imul
je
add
xor
mov
mov
pushl
mov
bswap
push
mov
mov
mov
mov
movsbl
movl
movzbw
mov
mov
bswap
pushf
pushf
movb
movb
dec
movb
xor
movb
pushf
lea
jmp
movzbl
clc
bts
setnp
bt
mov
stc
jmp
dec
xadd
shld
xor
lea
cmp
bswap
dec
lea
neg
and
stc
mov
sar
adc
sub
btc
movsbw
mov
clc
dec
clc
mov
jns
rcr
add
inc
mov
ror
rcl
btc
and
xor
push
lea
js
stc
xor
sub
movzbw
push
add
neg
movzbw
cmc
not
shrd
pushl
rcr
sub
cmc
xor
cmc
call
call
bsr
bsr
bswap
mov
jmp
movb
call
movl
call
bt
lahf
shl
mov
sub
pop
test
clc
shl
pop
bts
xor
pop
shrd
pop
ror
pop
rol
and
popf
movzbl
pusha
pushf
movsbl
mov
pop
movsbw
pushl
pushf
mov
lea
bswap
mov
push
mov
mov
movl
pushf
pushl
ret
call
mov
call
jmp
pushf
popl
jmp
pushf
pusha
call
call
neg
ror
movzbl
pushf
jmp
jno
push
push
pushf
mov
call
movsbw
mov
push
push
pushf
popl
bsf
movsbw
mov
setg
xchg
jmp
pushf
mov
movb
mov
call
pusha
jmp
stc
not
cmc
add
push
call
push
push
mov
push
jmp
pushf
popl
mov
call
and
inc
add
mov
shrd
shrd
xor
jmp
pushf
jmp
movw
mov
mov
pop
movzbw
movzbl
lea
mov
bsr
not
mov
lea
movzbw
mov
movl
bswap
bsr
movzbw
bsf
mov
jmp
xor
push
push
lea
jmp
call
mov
pushf
pushf
push
jmp
push
movb
bswap
pushf
mov
jmp
mov
call
call
rol
bt
mov
test
sub
bt
movb
stc
clc
ror
stc
test
cmp
add
pushf
add
bt
sub
bt
pusha
push
mov
clc
add
movl
push
pushf
lea
jmp
mov
pushf
pushf
mov
push
lea
jmp
mov
dec
mov
bsf
push
movzbw
inc
mov
call
pusha
call
pusha
xor
rcl
sets
movw
setns
xor
pushf
dec
pop
mov
lea
jp
push
pushf
inc
pushf
pusha
decl
movb
movb
lea
jne
pusha
mov
push
push
lea
jmp
call
movl
pushl
pop
inc
not
mov
mov
call
pushf
call
xor
pushf
pushf
pushf
lea
jmp
jmp
bswap
mov
jmp
pushf
mov
pushl
mov
mov
lea
jmp
pusha
pusha
pushf
pushf
mov
jmp
rcl
neg
bts
not
clc
rcl
push
lea
jle
rol
bswap
not
inc
bsr
shrd
sar
and
bswap
pusha
neg
jmp
pushf
jmp
pusha
mov
pushl
movl
mov
jmp
jmp
pusha
jmp
mov
pusha
mov
call
pushf
mov
pushl
lea
jmp
xor
call
bswap
call
call
push
pushf
mov
push
lea
jmp
lea
jb
pusha
mov
movw
push
pushf
lea
jmp
call
call
mov
movsbl
movl
not
mov
pushf
push
bswap
jmp
pusha
jmp
pushf
push
jmp
movzbw
sub
bsf
mov
cmp
and
movb
call
mov
pusha
mov
pushf
pusha
movb
pushf
mov
pushf
jmp
mov
movl
mov
mov
pushf
call
mov
pushl
pushl
lea
jmp
test
jl
cmc
pushl
push
add
std
stc
movb
pushl
popf
pushf
pusha
pushf
pushf
lea
jmp
clc
cmp
cwtl
push
bt
jmp
pushf
mov
push
pushf
pushl
pushf
lea
jmp
das
mov
setb
rcr
stc
pusha
mov
push
sub
test
test
pushf
clc
shr
pushf
mov
jmp
pushf
pusha
call
bswap
movw
movb
dec
stc
push
xor
pushl
push
push
movl
lea
jmp
bt
neg
sub
mov
rol
add
setb
mov
test
pushf
push
cmc
sub
cmp
pushf
shr
call
lea
je
bt
push
xchg
push
mov
call
pushf
sub
movw
mov
push
movb
movb
movw
lea
jmp
pushf
pushl
popl
pushf
pushl
pushf
pushl
lea
jmp
cmc
xor
pushf
jmp
call
mov
pusha
push
push
pushf
lea
jmp
pushf
mov
bswap
jmp
call
call
pushl
mov
mov
xchg
lea
call
xor
movzbl
jmp
pushf
popl
pushf
call
shr
pushl
push
call
test
add
movb
push
mov
pushl
push
pushf
movw
lea
jmp
xchg
movsbw
push
sets
bswap
inc
pushf
mov
call
pushf
pushl
mov
call
jmp
mov
pushf
mov
mov
jmp
push
jmp
cwtl
pusha
mov
call
lea
mov
test
cmc
pushf
cmc
add
pusha
movb
mov
pushf
popl
pushf
jmp
xor
push
lea
jmp
clc
rol
stc
mov
jmp
pusha
mov
mov
call
movw
bsr
bsr
mov
jmp
xor
movw
mov
movb
mov
lea
jmp
cmp
shl
or
mov
movl
stc
cmp
sub
movl
clc
pushf
shl
pusha
call
pushf
popl
pusha
pushl
pushl
popl
pushl
mov
lea
jmp
add
push
clc
cmc
test
xor
push
mov
push
dec
stc
pushf
rol
lea
jae
push
pusha
inc
movb
pushf
mov
xor
stc
stc
cmp
bt
add
mov
add
jnp
stc
bt
sub
call
pusha
pushf
movw
bswap
movw
pushf
push
dec
clc
push
push
xor
push
push
lea
jmp
pushf
pushf
mov
pushf
jmp
pusha
shl
push
pushf
mov
lea
je
mov
jmp
pushl
mov
call
jmp
jmp
movb
mov
pushf
push
lea
jmp
mov
call
bsr
bswap
movzbw
mov
jmp
pushl
popl
push
pushf
pushf
lea
jmp
call
mov
pushf
push
lea
jmp
call
pushf
pusha
pushf
mov
push
mov
movb
push
movb
jmp
pusha
pusha
mov
pushl
jmp
dec
cmc
cmp
xor
push
mov
lea
jmp
movb
add
pushf
call
sub
jmp
cmp
clc
xor
push
mov
movl
lea
jmp
mov
mov
push
pusha
movw
pushf
popl
mov
pushl
popl
push
pushf
lea
jmp
dec
test
call
cmc
clc
stc
xor
call
dec
mov
bt
sub
mov
bt
clc
cmc
add
pusha
pushf
popl
jmp
mov
jmp
shrd
call
push
pushf
mov
pushf
movb
push
lea
jmp
mov
jmp
mov
pushf
push
push
push
pushf
popl
jmp
pushf
mov
lea
pushl
jmp
sub
jmp
mov
not
bsr
dec
bsf
mov
movsbl
call
pushf
push
push
jmp
pushf
popl
pusha
pushl
popl
pushf
mov
pushf
lea
jmp
cwtl
pushf
mov
pusha
mov
call
cwtl
mov
pushf
sub
call
mov
jmp
dec
movb
pushf
clc
bswap
jmp
movb
lea
jbe
bswap
pusha
pushl
dec
cmp
pushf
xor
mov
pushf
pushf
lea
jmp
call
movb
mov
push
pushf
pushf
pushf
lea
jmp
iret
pop
pop
pop
iret
pop
sbb
into
pop
dec
xchg
iret
pop
mov
into
pop
push
mov
pop
and
into
pop
sub
into
pop
js
into
pop
shrb
pop
pop
ror
pop
dec
sub
pop
in
into
pop
and
into
pop
or
into
pop
nop
sahf
into
pop
jo
into
pop
or
iret
pop
mov
into
pop
sub
into
pop
nop
sahf
into
pop
jo
into
pop
test
into
pop
inc
lahf
into
pop
push
mov
pop
and
into
pop
rorb
pop
js
into
pop
or
iret
pop
push
sbb
pop
clc
xor
pop
js
into
pop
sub
into
pop
inc
outsb
into
pop
or
into
pop
push
cmp
pop
and
into
pop
or
into
pop
les
into
pop
dec
sub
pop
sub
into
pop
sub
into
pop
mov
adc
pop
inc
outsb
into
pop
test
into
pop
mov
xchg
into
pop
sub
into
pop
dec
sub
pop
push
sbb
pop
jo
into
pop
nop
cmp
pop
add
into
pop
inc
outsb
iret
pop
jo
into
pop
lock
pop
mov
into
pop
xor
iret
pop
and
into
pop
add
iret
pop
push
sbb
pop
les
into
pop
lock
pop
and
into
pop
shrb
pop
js
into
pop
lock
pop
js
iret
pop
and
into
pop
lock
pop
lods
ret
test
into
pop
inc
lahf
into
pop
xor
into
pop
in
mov
into
pop
sub
into
pop
and
pusha
insl
into
pop
test
into
pop
inc
outsb
into
pop
and
into
pop
rorb
pop
and
les
into
pop
nop
cmp
pop
push
mov
into
pop
nop
cmp
pop
mov
ja
pop
or
into
pop
jo
iret
pop
loopne
into
pop
lods
ret
and
into
pop
and
into
pop
and
into
pop
and
into
pop
and
into
pop
and
into
pop
and
into
pop
and
into
pop
je
into
pop
lods
ret
test
into
pop
lock
pop
hlt
jo
pop
sbb
into
pop
sub
into
pop
or
iret
pop
pop
pop
iret
pop
pop
pop
iret
pop
pop
pop
iret
pop
pop
pop
iret
pop
pop
pop
iret
pop
pop
pop
iret
pop
pop
pop
iret
pop
pop
pop
into
pop
or
into
pop
js
into
pop
in
into
pop
and
into
pop
sub
into
pop
dec
sub
pop
sub
into
pop
push
mov
pop
in
mov
into
pop
pop
ror
pop
and
into
pop
or
into
pop
test
into
pop
and
into
pop
and
into
pop
clc
xor
pop
dec
xor
pop
clc
xor
pop
sbb
into
pop
and
into
pop
add
into
pop
js
into
pop
push
xchg
into
pop
and
into
pop
push
mov
pop
in
mov
into
pop
mov
ror
inc
lahf
into
pop
nop
sahf
iret
pop
push
sbb
pop
inc
outsb
into
pop
pusha
insl
into
pop
and
into
pop
pusha
insl
into
pop
adc
into
pop
adc
iret
pop
jo
into
pop
push
mov
pop
and
and
iret
pop
loopne
iret
pop
je
into
pop
jo
into
pop
js
into
pop
sub
into
pop
je
into
pop
inc
outsb
into
pop
pop
ror
pop
in
into
pop
lock
pop
sub
into
pop
push
mov
pop
sub
into
pop
shrb
pop
jo
into
pop
add
into
pop
adc
into
pop
push
mov
pop
lock
pop
mov
iret
pop
je
iret
pop
push
sbb
pop
pushf
sbb
pop
dec
sub
pop
sub
into
pop
adc
into
pop
and
into
pop
nop
sahf
iret
pop
and
into
pop
push
mov
pop
and
into
pop
test
into
pop
clc
xor
pop
lods
ret
mov
into
pop
or
into
pop
and
into
pop
adc
iret
pop
mov
into
pop
xor
into
pop
in
mov
iret
pop
pushf
sbb
pop
les
into
pop
test
iret
pop
and
into
pop
les
into
pop
sub
into
pop
dec
sub
pop
test
into
pop
push
mov
pop
test
into
pop
hlt
jo
pop
les
into
pop
and
into
pop
and
into
pop
and
into
pop
and
into
pop
and
into
pop
and
into
pop
and
into
pop
and
into
pop
shrb
pop
inc
outsb
into
pop
in
into
pop
sub
into
pop
sub
iret
pop
mov
into
pop
push
mov
pop
pop
pop
iret
pop
pop
pop
iret
pop
pop
pop
iret
pop
pop
pop
iret
pop
pop
pop
iret
pop
pop
pop
iret
pop
pop
pop
jmp
dec
shld
bt
xor
shrd
add
shl
mov
call
clc
stc
bswap
clc
call
mov
pushf
pusha
call
push
test
sub
push
call
mov
pushf
movzbw
call
pushl
popf
pushf
push
mov
lea
jmp
movb
test
xor
cmp
cmc
jmp
xchg
bswap
bswap
mov
movw
bsf
mov
inc
lea
not
movl
call
mov
mov
call
dec
cmc
test
sub
jmp
mov
mov
pushf
pushf
lea
jmp
movzbw
movzbw
movsbw
inc
btc
pushf
ror
ror
mov
stc
not
stc
mov
ror
ror
sub
call
mov
movb
mov
pushf
lea
jmp
mov
mov
pushl
movb
pushl
ret
call
jmp
dec
jmp
pop
bsr
mov
not
bsf
call
add
call
cmc
pusha
mov
cmp
btc
add
or
mov
pushf
jmp
pushl
mov
pushl
mov
lea
jmp
mov
movw
pusha
mov
lea
jmp
dec
cmp
bt
xor
movl
mov
movb
mov
lea
jmp
jmp
pusha
mov
call
push
pushf
pushf
mov
pushf
mov
mov
movl
pushl
ret
pushl
popl
cmc
cmc
add
call
bt
mov
call
call
btc
push
movzbw
push
not
jmp
dec
call
mov
mov
call
pushl
pushf
pushf
popl
movb
mov
call
bt
not
movzbl
pushf
cmc
call
bsf
mov
call
clc
mov
test
inc
add
rcl
add
not
pusha
sete
mov
pusha
call
add
call
jmp
ror
mov
rcl
add
mov
rcr
mov
test
add
push
pushf
jmp
push
call
mov
pushl
popl
push
pushf
pushf
mov
lea
jmp
pushf
pusha
mov
jmp
xchg
test
sete
xor
xor
neg
sbb
rcr
lea
pop
xor
bt
sub
shl
pushf
call
call
push
push
mov
pushf
pusha
lea
jmp
push
push
movl
bswap
jmp
mov
push
xchg
bswap
bsr
bsf
inc
mov
mov
bsf
mov
mov
inc
dec
inc
movl
movw
pusha
mov
jmp
pushf
pushf
popl
lea
xchg
movsbw
pop
pushf
xchg
not
not
bswap
mov
bsf
mov
bsf
not
movl
bswap
inc
mov
lea
bswap
push
dec
call
movb
pushf
mov
jmp
stc
push
xor
pushl
pushf
pushl
lea
jmp
dec
pop
jmp
lahf
and
mov
jmp
dec
pushf
xor
bt
cbtw
jmp
xor
cmc
cmc
pusha
pushf
neg
mov
pushl
push
jmp
mov
call
mov
rol
neg
xor
pop
lea
shld
sub
add
or
sub
pushl
neg
btc
shl
stc
not
test
sub
bts
and
cmp
shld
xor
pusha
not
movzbl
pushf
not
pop
mov
call
movb
push
pushf
popl
mov
push
jmp
divl
mov
mov
push
pushf
mov
push
mov
pushf
popl
movb
pushl
popl
pushf
pushf
movb
pushf
lea
jmp
cmp
sub
cmc
cmp
xor
cmp
cmp
push
cmp
mov
test
pushf
bt
pusha
sub
push
mov
mov
pushf
pushl
lea
jmp
jmp
pusha
pushf
popl
movb
pushl
popl
mov
pushf
pushl
movb
lea
jmp
pushl
push
mov
pushf
mov
jmp
push
mov
pushf
pushf
jmp
add
mov
test
btc
bswap
or
add
jmp
mov
mov
movb
pushf
push
lea
jmp
push
pushf
pushf
popl
jmp
pusha
mov
jmp
pusha
pushf
push
mov
jmp
bswap
pushf
dec
stc
xor
mov
mov
mov
push
lea
jmp
dec
cmc
xor
pusha
movl
pushf
lea
jmp
call
popl
push
lea
jmp
push
pusha
mov
push
mov
push
call
push
add
call
ror
stc
lea
mov
push
add
pusha
mov
call
jmp
jmp
mov
jmp
movl
movsbw
bsr
mov
jmp
sub
neg
sar
and
xor
rcr
rcl
movzbl
not
mov
movl
stc
jmp
pushf
push
pushf
mov
movb
jmp
push
pushf
popl
call
sub
jmp
mov
jmp
pusha
mov
mov
pusha
call
ror
sub
ror
rol
movzbl
clc
push
pushf
shl
call
pushf
pusha
mov
pushf
pushf
lea
jmp
add
pushf
stc
test
sub
call
add
pusha
cmc
call
call
inc
bt
bt
jmp
jmp
pushf
movl
pushf
popl
push
movw
pushl
popl
mov
movl
pushf
lea
jmp
call
jmp
not
mov
jmp
xor
shl
mov
jmp
jmp
pushf
mov
pushf
jmp
mov
pusha
call
pushf
mov
pushf
jmp
rcr
stc
test
mov
ror
mov
test
pushf
jmp
pushf
call
bswap
pushf
dec
pushl
xor
push
mov
push
movb
lea
jmp
neg
push
mov
movl
call
mov
pushl
mov
call
jle
push
cwtl
movsbw
mov
pusha
mov
call
dec
cmp
xor
mov
push
lea
jmp
stc
push
call
jmp
pushf
popl
mov
call
pushl
popl
pusha
pushf
lea
jmp
jmp
movb
mov
movl
jmp
pushf
cmp
or
add
sub
mov
bswap
shld
btc
xor
pusha
sub
shl
bsf
sub
xor
neg
bsr
or
not
lea
call
clc
not
shrd
and
sub
mov
cmc
sub
pushf
call
call
jmp
movb
mov
pushf
lea
jmp
pushl
popl
pushf
lea
jmp
call
pushf
popl
pushf
lea
je
pushf
mov
push
pushf
jmp
mov
pushf
pushf
popl
movw
call
pushf
pushf
movw
mov
jmp
call
movw
mov
mov
mov
pushl
ret
mov
pushf
pushf
call
call
pusha
mov
jmp
rcr
sbb
mov
inc
mov
stc
pushf
jmp
movl
call
xor
call
pushl
mov
mov
jmp
stc
bswap
pushf
bt
not
stc
pushf
add
mov
movb
pushl
mov
pushf
pushl
ret
bt
ror
push
test
sub
cmp
push
bswap
jmp
test
xor
jmp
call
jmp
pushf
pushf
popl
lea
jno
push
pushf
call
pushf
decl
push
pushf
push
lea
jne
push
jmp
sub
das
mov
stc
rcl
inc
mov
cmc
sub
clc
cmp
shl
jg
mov
pusha
pushf
pusha
pushf
popl
movb
mov
jmp
stc
pusha
movsbw
mov
setb
setp
adc
mov
test
cmp
lea
jne
add
call
call
dec
test
test
bt
test
xor
mov
movb
movb
lea
jmp
cmc
ror
call
mov
movw
pushf
push
pushf
lea
jmp
bsr
aas
mov
rcl
mov
cmc
cmp
add
pusha
pusha
call
ror
mov
pusha
not
push
push
pushf
movb
dec
stc
ror
lea
ja
sub
pushf
mov
pusha
call
push
pushf
xchg
movzbw
pop
mov
call
jmp
mov
jmp
pushf
pop
pusha
mov
pushf
bswap
movw
push
mov
call
jmp
pushf
ror
mov
bt
sub
stc
test
bswap
jmp
mov
pushf
mov
mov
call
bts
clc
lea
rol
sar
call
movb
push
pushf
popl
movb
push
jmp
pushf
pushl
popl
pushf
movw
lea
jmp
not
test
clc
cmc
call
mov
pusha
movb
pushf
movw
mov
push
jmp
call
clc
xor
pushf
pushf
pushf
movb
lea
jmp
mov
pusha
pushl
mov
mov
mov
call
mov
call
clc
xor
push
pushf
pushf
movw
lea
jmp
pushl
popl
pushl
pushf
movb
lea
jmp
pusha
sub
mov
stc
bswap
stc
xor
push
push
dec
call
pushf
popl
movb
jmp
jmp
pushf
or
not
sbb
lea
bt
cmp
test
pushf
cmp
jmp
btr
das
and
sub
notl
sar
daa
mov
jmp
pushl
pushl
popl
push
movb
push
movb
lea
jmp
jmp
mov
movw
jmp
mov
movb
dec
cmc
test
cmc
bt
xor
mov
lea
jmp
movb
dec
cmp
bswap
stc
push
cmc
pushf
not
mov
mov
test
add
jmp
sub
bt
stc
mov
bt
shr
call
pusha
mov
pushf
push
mov
mov
push
pushf
mov
jmp
pusha
mov
pushf
push
lea
jmp
shld
pusha
mov
jmp
pushf
popl
jmp
pushl
call
mov
pushf
mov
pushl
sub
test
pushf
jmp
push
jmp
push
mov
push
mov
mov
movw
pushf
movzbw
mov
pop
movzbl
movl
not
mov
pushf
bsf
push
lea
movl
inc
not
not
mov
pushl
call
dec
call
pushf
test
cmp
neg
push
dec
pushf
pushf
pusha
dec
pushl
movb
cmp
cmc
xor
pushf
add
jl
stc
clc
sub
jmp
movb
mov
call
pushf
call
bswap
jmp
pushf
mov
call
movb
movb
call
test
movl
bt
mov
push
stc
pushf
cmc
sub
push
mov
push
movb
pushl
lea
jmp
pusha
mov
pushl
push
lea
jmp
movb
pushf
mov
call
xchg
movzbw
movzbl
lea
setb
mov
pushf
movw
movzbl
xchg
call
call
movb
mov
jmp
stc
pushf
bt
not
jmp
and
call
mov
call
inc
shld
movsbl
shrd
neg
pusha
not
rcl
bt
stc
bt
rol
shrd
cmc
not
shr
lea
and
not
mov
bt
add
pushf
jmp
mov
push
pusha
lea
jmp
jmp
call
jmp
dec
call
test
clc
call
push
inc
cmc
call
mov
call
neg
sar
and
sub
call
call
ror
btr
clc
sar
mov
mov
rcl
call
sub
ja
push
add
call
sub
bt
and
call
movw
xor
pusha
bt
call
movl
mov
lea
mov
pushf
push
push
bswap
push
dec
test
pushf
stc
xor
pushf
pushl
lea
jmp
dec
mov
pushl
mov
mov
movl
mov
movl
mov
pushl
bswap
pushf
mov
dec
jmp
jmp
bts
jns
clc
mov
stc
mov
test
call
mov
mov
push
mov
movb
call
call
pusha
mov
pusha
pushf
call
call
mov
jmp
jmp
mov
call
xor
push
cmc
pushf
mov
stc
sub
pushf
pushf
pushf
jmp
test
cmp
add
pusha
jmp
mov
pushl
popl
pushf
pushf
push
pushf
lea
jmp
pushf
popl
movb
movl
mov
lea
jg
push
pusha
mov
dec
mov
movzbw
bsr
bswap
inc
mov
not
inc
movl
not
bswap
mov
pushf
movb
bswap
mov
pushf
jmp
jmp
mov
pusha
pushf
lea
jmp
mov
jmp
pushf
movw
mov
push
mov
pusha
movb
pushf
popl
push
pushf
pushf
push
pushl
popl
pushl
push
pushl
lea
jmp
mov
pushf
pusha
lea
jmp
movl
call
neg
xor
test
mov
push
mov
dec
shl
mov
mov
pushf
pushf
test
add
call
jmp
setns
bts
movw
rol
test
bt
xor
dec
shr
clc
neg
inc
rcl
rcr
and
sub
adc
test
clc
shr
mov
clc
bt
jmp
aas
btr
movzww
bt
test
clc
stc
xchg
stc
clc
clc
add
push
bt
cmc
sub
movb
pusha
rol
pushf
call
call
clc
btr
stc
rol
dec
xor
neg
btc
shl
neg
or
cmc
btr
sub
bsr
bsf
test
mov
cmc
test
jmp
mov
pusha
xchg
bsf
movsbw
not
bsf
mov
movzbl
mov
bsr
pushl
movl
call
mov
pusha
call
pushf
mov
pushf
jmp
pushl
pushf
popl
movb
jmp
call
mov
mov
pushf
lea
jmp
mov
jmp
push
jmp
pushf
mov
jmp
jmp
mov
pushf
push
dec
call
pusha
pushl
pusha
pushl
popl
pushl
movb
pushf
lea
jmp
mov
pushl
mov
pusha
movsbl
movsbw
bswap
mov
dec
inc
bswap
mov
movl
movzbw
mov
push
call
bt
not
bt
not
cmp
bt
pushf
pushf
sub
jmp
stc
bt
clc
add
pusha
mov
push
call
movl
mov
call
mov
jmp
mov
pushf
movb
mov
pusha
push
push
mov
lea
jmp
stc
cmp
pusha
sub
lea
jo
clc
stc
not
call
push
bsr
bswap
jmp
call
mov
cmp
bt
xor
mov
movw
movw
lea
jmp
push
mov
call
mov
pushf
mov
pusha
push
mov
jmp
add
mov
pushf
pushf
mov
mov
movl
lea
jmp
mov
pushf
call
mov
jmp
pusha
push
mov
pushf
pushf
push
mov
push
movb
lea
jmp
cld
pushl
popf
pushf
pushf
lea
jmp
rcr
add
bsr
inc
movzbl
stc
sub
inc
mov
pusha
pushl
dec
jmp
jmp
cmp
bswap
btr
mov
call
pusha
mov
movb
mov
pushf
movb
lea
jmp
push
setns
cmc
rol
mov
mov
mov
test
shr
add
push
mov
push
jmp
test
add
pusha
push
push
mov
push
lea
jmp
xchg
inc
bsr
mov
pushf
mov
pop
movzbw
bswap
movl
pop
lea
inc
pushf
mov
pushl
push
bswap
pushl
pushl
call
call
bt
add
bt
push
pusha
sub
push
call
push
cmc
clc
rol
test
xor
pushf
neg
pusha
movl
pushl
dec
stc
pushl
sub
movl
mov
push
movb
sub
jmp
pushf
movw
dec
movw
cmc
movb
jmp
jmp
mov
pushf
mov
call
mov
mov
lea
jge
pusha
pusha
push
pushf
popl
jmp
jmp
jmp
mov
pushf
cmp
jmp
pushf
mov
pusha
lea
ja
bsf
aad
mov
test
lea
xor
bts
cmc
sub
shrd
lea
dec
mov
and
stc
sub
bswap
not
pushf
not
mov
bswap
movsbw
movzbl
not
pushf
std
push
not
movsbw
xchg
mov
movsbl
call
mov
call
mov
pushl
xchg
call
bsr
mov
movsbw
inc
mov
movsbw
movsbw
pop
movsbw
movl
dec
mov
pushf
movl
push
bswap
call
bsr
mov
cmc
xchg
cmp
clc
call
pushf
mov
call
mov
xor
add
jmp
sub
inc
pushf
mov
pop
mov
pushf
stc
pusha
not
test
pushf
not
pushf
pushf
and
pushf
mov
push
pushl
lea
jg
pushf
pushf
popl
jmp
pushl
mov
lea
movl
bswap
pusha
call
adc
test
jmp
push
pushl
push
bswap
call
pushl
mov
pusha
pushf
pushl
push
lea
jmp
xor
mov
mov
movb
mov
lea
jmp
mov
movb
mov
call
jmp
pushf
jmp
jmp
jmp
pushf
popl
lea
jno
pushf
pusha
pushl
popl
movb
push
lea
jmp
mov
jmp
add
jmp
mov
not
push
pushf
mov
push
mov
bswap
movl
lea
mov
mov
pushf
call
pushf
bsf
movl
mov
call
js
sets
mov
call
lea
je
push
movb
bswap
movw
dec
call
cmc
not
jmp
seta
aam
mov
btr
rcr
or
mov
jmp
call
pushf
mov
push
pushf
pushl
call
bsf
cltd
sets
rcl
rdtsc
test
clc
bt
pushf
sub
pushf
mov
pusha
jmp
mov
movsbw
push
not
mov
pusha
jmp
mov
xchg
lea
mov
not
mov
bsr
movw
movl
jmp
pushf
pusha
sub
pushl
call
pushl
popl
pushf
lea
jmp
xchg
bsr
bsr
mov
pop
not
mov
pushf
bsr
dec
movl
not
call
pushf
bswap
call
movb
dec
call
rcr
lea
jbe
not
not
call
neg
shl
bswap
lea
not
pusha
pushl
sub
rcr
sbb
cmp
pushl
xor
rcr
movzbl
rcl
mov
pushf
cmc
clc
ror
stc
jmp
mov
push
lea
jmp
mov
call
ror
xchg
xor
rcr
mov
ror
dec
rcr
rol
mov
clc
cmc
stc
add
jmp
mov
push
pushf
popl
pushf
call
movb
call
pushl
jmp
bswap
push
movb
mov
pushl
dec
stc
movb
test
lea
jbe
xor
push
lea
jmp
sub
cmc
pushf
cmp
clc
shl
call
pushf
mov
mov
push
lea
jmp
jmp
pusha
mov
pushl
pushf
pushf
push
lea
jmp
pushf
bswap
pushf
mov
lea
ja
dec
bt
push
xor
mov
mov
lea
jmp
push
mov
call
pusha
bswap
mov
push
push
dec
call
cmp
stc
clc
not
pushf
stc
test
cmc
add
push
call
mov
call
clc
jmp
jmp
bt
cmp
xor
call
push
pusha
mov
jmp
jmp
pushf
mov
jmp
pushf
mov
mov
lea
jmp
pusha
call
pushf
push
mov
pushl
pusha
movb
mov
lea
jmp
call
jmp
pusha
cld
push
movl
push
rep
btc
bswap
shl
mov
pop
pop
or
shl
mov
cmp
jmp
call
mov
mov
pushf
mov
lea
jmp
ror
test
movb
add
pushf
add
cmc
bt
add
cmc
cwtl
pushf
sub
call
jmp
add
call
stc
call
call
mov
movb
call
pushf
pushf
pusha
mov
jmp
clc
mov
clc
cmc
add
pusha
lea
jmp
mov
call
pusha
pushf
pushl
jmp
aad
call
pusha
push
mov
movw
movb
lea
jmp
jmp
pusha
push
inc
jmp
lea
xchg
setle
jmp
push
pushf
popl
pushl
call
cld
xchg
not
mov
call
stc
add
mov
jmp
mov
aam
and
mov
shld
mov
push
movl
add
call
cmc
mov
cmp
test
push
bswap
call
mov
pushf
popl
mov
call
mov
stc
pusha
sub
jmp
pushl
popl
pushf
movb
lea
jmp
pushf
popl
pushf
jmp
ror
mov
inc
mov
call
mov
bsf
bswap
mov
pushf
mov
pusha
mov
movzbl
push
movl
jmp
cmc
adc
or
movzbl
cmc
push
xor
call
daa
bts
mov
push
clc
sub
clc
pushf
jmp
pushf
mov
mov
pushf
popl
call
movw
movsbw
mov
call
jmp
mov
pushl
pushf
jmp
call
mov
call
jmp
pushf
xchg
movzbw
bsr
mov
push
pushl
call
bsr
pushf
aas
mov
bt
pushf
sub
push
jmp
