dec
inc
add
add
mov
sbb
das
jbe
in
test
ret
mov
test
fdivrs
shll
movsb
popf
mov
pop
daa
add
gs
pushl
dec
and
daa
orb
lds
paddd
mov
popa
add
andl
das
push
pusha
mov
adc
les
push
test
rolb
js
adc
sahf
sahf
add
add
adc
cwtl
test
adcl
je
pop
mov
xor
lcall
and
xchg
jne
or
loopne
lds
les
pop
xor
mov
je
rorl
add
mov
cs
das
mov
movl
rcl
adc
ds
inc
mov
data16
lock
add
lds
cs
std
addb
test
adc
pop
mov
mov
fildl
add
xchg
sub
jg
jecxz
jb
pop
jp
jecxz
das
mov
fucomp
adc
xchg
sarl
in
pop
stc
movsb
out
scas
xchg
add
cmc
xlat
cwtl
je
addl
loop
rolb
cmp
jecxz
jecxz
lret
cld
or
decl
add
icebp
and
push
inc
mov
push
xor
loope
shl
dec
adc
sub
loop
outsb
test
pop
nop
cmp
fmull
fdivrs
les
pop
pop
aas
sar
jp
imulb
outsb
leave
add
adc
mov
inc
daa
mov
shlb
xor
add
push
clc
je
out
popf
pop
mov
icebp
int3
in
or
cmc
daa
fistpll
ds
loope
jne
stc
es
mov
jl
les
adc
inc
pop
push
xor
ret
sbb
dec
cmp
insb
cs
movsl
push
or
shlb
icebp
add
popf
and
pop
imul
add
addl
repnz
loopne
les
cmc
or
cmc
rolb
inc
inc
mov
dec
lock
pushf
jae
jmp
pop
or
jmp
push
cmc
shlb
arpl
mov
inc
lock
mov
shlb
or
pusha
shlb
int3
movsb
iret
push
ja
add
bswap
dec
adcb
roll
loopne
mov
inc
in
push
movsl
mov
das
rcl
xor
popa
jnp
loope
adc
stos
stos
push
mov
ret
mov
add
add
aam
les
jp
adc
dec
push
and
loope
jge
outsl
shll
or
nop
jg
test
add
inc
dec
cmp
test
push
mov
xchg
push
hlt
js
fiaddl
inc
mov
adc
addr16
das
outsl
adc
jb
sub
loop
push
fmull
xor
xor
dec
mov
sub
into
sub
mov
mov
pop
cmp
push
mov
push
mov
mov
pop
inc
mov
xor
in
das
lret
insb
dec
lds
bound
adc
sbb
stos
addl
les
fmull
mov
sahf
push
push
add
mov
les
jb
add
icebp
out
jg
sbb
out
inc
sub
pushf
push
fwait
add
xchg
jnp
jae
lds
mov
dec
call
inc
cli
jne
andb
mov
negl
adc
push
rorl
or
mov
xchg
loop
add
bound
outsb
push
push
mov
or
ficoml
imul
or
roll
adc
popf
xor
movsl
call
xor
cli
cmp
test
popa
mov
push
int3
dec
test
jp
out
insb
mov
fldt
add
cmp
add
sbb
sbb
mov
sub
jg
aaa
sub
sbb
cld
inc
push
sbb
lods
cli
in
sbb
bound
shl
and
clc
pusha
jmp
jo
mov
fisubl
push
jecxz
iret
lahf
insb
xchg
jno
rolb
cmp
sub
push
iret
ror
or
call
mov
dec
sbb
dec
mov
adc
movd
hlt
je
adc
push
adc
jle
push
add
test
mov
sbb
aas
jno
jecxz
cld
inc
inc
inc
adc
rol
lahf
sbbl
adc
aad
mov
lods
orb
xchg
lret
popa
imul
inc
movsl
xchg
add
add
or
pop
add
std
jp
hlt
les
sahf
xchg
push
imul
mov
data16
jle
mov
outsb
push
fisubs
cmp
cmp
jmp
sub
or
pop
or
xor
cmp
setne
mov
jo
pop
pop
sbb
cmpsb
jno
int3
jns
adc
adc
dec
int3
sub
jecxz
imul
lret
or
adcb
mov
lea
cmp
cmpsl
pop
imul
adc
inc
daa
cmpsb
add
dec
std
out
loopne
lea
pop
or
inc
jg
inc
dec
mov
mov
or
jno
test
xor
cmpsb
and
addr16
scas
xchg
insb
xchg
in
aas
daa
out
adc
mov
test
jo
rcll
dec
stc
mov
int
push
and
ret
sbb
cmp
in
jmp
cwtl
loopne
bound
pusha
and
les
sbb
fdiv
jmp
inc
mov
push
sbb
cmp
pop
and
add
fdivrs
or
mov
rcr
mov
add
push
ss
sub
mov
or
mov
add
bound
out
dec
or
xorb
xor
inc
sar
xchg
pop
inc
cmpsb
pop
sbb
stos
and
sbb
leave
stos
adc
and
hlt
repz
lock
inc
push
push
outsb
sbb
in
mov
mov
test
sub
adc
mov
mov
add
xchg
adc
mov
push
fildll
and
mov
mov
pop
xchg
fwait
rdpmc
and
xchg
add
fwait
cltd
les
xchg
dec
cmp
movsl
in
fwait
or
sarl
roll
push
or
sti
mov
inc
jp,pt
mov
shll
xchg
xchg
pop
push
sub
cmp
lcall
popa
or
in
lods
xchg
iret
inc
adc
fdivs
adcb
pushf
lock
mov
pop
sub
dec
cmovl
sbb
ret
mov
adc
mov
leave
push
cs
jns
mov
push
test
sbb
adc
loopne
and
mov
cwtl
cmpsb
lcall
sub
adc
inc
sbb
ja
push
insb
dec
xchg
xorb
and
or
movsl
xor
dec
fwait
inc
clc
lds
adc
adc
mov
daa
fmull
or
les
add
xchg
jl
add
mov
sub
adc
mov
orl
inc
adc
rcrl
pop
push
aas
xchg
xorb
movsb
or
mov
xchg
xlat
xchg
loopne
rorl
push
les
clc
in
add
add
movsb
test
or
das
jp
inc
test
cltd
shlb
xor
ror
push
loopne
or
add
in
hlt
xchg
dec
popa
add
jge
in
roll
push
stc
mov
jno
jmp
add
jno
push
cmp
xchg
jo
movsl
add
mov
test
arpl
bound
lret
sbb
jae
inc
sahf
jg
nop
jbe
xchg
dec
and
cmpsb
and
push
add
cld
pop
call
inc
int3
and
jp
movsb
xor
mov
cmpsb
stos
jmp
xor
jle
cmp
jo
and
jle
mov
mov
push
mov
inc
sub
lcall
cmp
pushf
jge
hlt
mov
mov
leave
ds
sbb
shrl
cmpb
dec
aam
sub
sbb
pop
dec
and
and
dec
xchg
cmp
or
inc
push
enter
loope
jl
xor
mov
xor
bound
fstpl
xor
mov
rorl
jge
lea
nop
scas
sbb
lds
adc
add
fdivs
stc
dec
or
or
aas
push
push
out
js
add
aaa
sbb
add
jns
jmp
inc
fcoms
das
xchg
js
pop
das
mov
add
add
lret
inc
push
xchg
loop
xor
data16
xor
pop
xor
outsl
in
lock
movsb
popa
pop
sub
ds
int3
add
aas
inc
decb
cmp
pop
decb
and
stos
mov
adc
mov
adc
out
test
hlt
or
sbb
add
push
inc
pop
dec
sub
adc
outsb
xchg
aam
test
mov
aas
icebp
rcrb
movsl
loopne
push
xchg
jp
mov
pop
xchg
lds
push
jns
iret
sub
xor
js
mov
xchg
aam
sbb
mov
shrb
mov
inc
cwtl
mov
jae
pop
xor
mov
xor
out
in
sbb
mov
data16
bnd
lcall
push
inc
xlat
je
fdivl
lcall
mov
push
in
jnp
fildl
cmp
jo
lea
xor
fcoml
lods
and
neg
cltd
mov
or
rolb
ret
push
inc
sti
into
or
jo
ss
mov
cmc
pusha
mov
cs
and
out
jne
mov
or
repz
in
dec
dec
add
stos
sub
mov
sbb
ret
dec
aam
jg
add
outsb
nop
or
movsb
pop
sti
adc
push
push
xchg
push
xor
das
sbb
mov
inc
xchg
push
sub
hlt
inc
shl
clc
push
jecxz
nop
outsl
xor
fwait
dec
cwtl
aam
jne
jb
add
and
ret
jnp
gs
ficoms
jnp
orl
add
mov
sbbl
add
orb
mov
jnp
inc
or
ds
cld
fisttps
sub
arpl
call
lret
push
mov
add
aas
popf
sbb
outsb
add
orb
pop
cmp
sub
test
dec
shll
ljmp
jb
inc
pop
pop
add
loopne
pop
test
fmull
xor
or
les
fs
push
movsl
lds
xor
ds
sub
pop
in
pop
dec
xor
mov
roll
xor
mov
cmp
and
aas
repnz
stos
add
mov
inc
xor
mov
push
lods
push
ret
outsb
and
dec
mov
dec
movsb
clc
push
adc
dec
cmp
sub
sbb
cmp
xchg
stos
cmc
adc
test
sbb
loopne
sub
inc
or
jno
push
nop
scas
daa
leave
xor
jnp
lock
jecxz
rcr
mov
cld
adcl
dec
mov
jae
lds
cmp
insb
movsb
rorb
sub
addl
xchg
cmc
mov
and
adc
lret
loope
mov
mov
out
mov
lock
add
jns
or
mov
in
push
mov
andl
inc
shlb
iret
pop
in
inc
imul
stos
add
aad
adc
jp
and
mov
pop
xchg
cltd
fnstsw
xlat
sub
rcrb
push
jne
aam
mov
jge
ret
or
and
mov
inc
adc
mov
dec
cltd
dec
add
xchg
cmp
jmp
fisubrl
push
lods
xor
gs
mov
inc
jl
cmpsl
xchg
sbb
test
inc
push
ljmp
mov
jo
mov
test
inc
mov
push
adc
inc
dec
mov
fcmovnu
jle
mov
adc
inc
in
mov
clc
and
cmp
and
mov
or
andb
mov
xor
adc
dec
or
push
mov
mov
sbb
xor
mov
in
sarb
aam
and
rolb
or
cmpsb
push
jae
scas
xchg
jno
notb
mov
bswap
ljmp
xchg
inc
xor
mov
add
test
xor
cld
push
mov
in
xchg
pop
das
test
sti
sub
stos
sar
loopne
and
bound
loop
loop
mov
repz
jne
jns
arpl
jae
sub
hlt
ds
dec
and
stos
or
mov
mov
int
ljmp
adcb
ds
sbb
test
sahf
rolb
mov
imul
in
repnz
push
sahf
fsubrs
loope
rcll
dec
push
mov
push
add
cmp
inc
adc
xchg
test
mov
out
push
mov
out
dec
aam
mov
aad
jecxz
repz
dec
mov
and
daa
jp
xorl
shl
adc
inc
dec
adc
push
dec
mov
push
sbb
push
jecxz
cltd
mov
stc
fisubrs
cwtl
cmpsb
adc
pop
je
inc
idivl
lds
aam
sbb
cmp
push
add
cmpsl
jne
push
cmpsb
stos
or
cwtl
mov
push
adc
xchg
cmp
xchg
jnp
ds
bound
push
pop
hlt
xchg
adc
xchg
xorl
add
arpl
gs
dec
outsb
xlat
cmp
shlb
das
add
add
add
add
add
add
pushf
sbb
adc
add
add
adc
add
inc
sbb
adc
add
add
adc
adc
lret
int3
enter
enter
fmul
loopne
jecxz
in
lea
inc
sbb
adc
add
pusha
sbb
adc
incl
add
add
add
dec
pop
add
pusha
pop
add
je
add
test
add
cwtl
pop
add
lods
pop
add
les
add
fcompl
add
in
pop
add
aam
add
fs
add
rclb
add
add
call
push
add
outsb
push
add
int3
push
add
loop
add
clc
push
add
push
push
add
adc
add
add
ss
add
inc
push
add
push
push
add
pusha
push
add
je
add
mov
add
push
add
mov
add
mov
add
add
push
add
add
add
notb
add
push
add
sbb
add
push
add
cmp
add
add
pop
push
add
add
add
js
add
add
add
insl
lods
dec
int
lea
lds
add
lods
mov
dec
dec
lods
int
mov
sub
cvtps2pi
lods
outsb
outsb
add
add
lea
mov
add
dec
sub
outsb
lods
test
insb
lods
push
mov
add
call
lods
lods
sub
mov
add
add
mov
sub
scas
lods
add
add
mov
sub
scas
lods
add
add
sub
add
add
lods
mov
lods
or
add
add
call
mov
lea
add
add
enter
mov
das
add
add
lods
sub
enter
add
add
or
lea
add
lods
sub
sub
add
call
in
insb
lods
outsb
outsb
or
outsb
lods
dec
inc
lds
add
sub
leave
lods
jle
dec
int
lea
lds
add
dec
lods
in
int3
dec
lods
outsb
in
scas
dec
insb
lods
add
add
mov
insb
insl
dec
lods
outsb
in
scas
dec
insb
lods
add
add
mov
sub
dec
lods
outsb
in
scas
dec
insb
lods
add
add
call
in
insb
sub
add
add
call
mov
int
lea
enter
dec
lods
outsb
in
scas
dec
insb
lods
add
add
enter
dec
lods
outsb
in
scas
dec
insb
lods
sub
int
mov
lea
add
dec
mov
lods
push
dec
lods
outsb
outsb
dec
scas
int3
int3
lods
dec
add
adc
add
pusha
xor
adc
jo
adc
add
add
add
add
or
add
sbb
add
add
add
add
add
add
add
mov
add
cmpb
or
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
cwtl
add
add
add
add
add
add
add
test
add
in
add
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
cltd
jle
rcl
or
bound
cs
jbe
cmp
aaa
popa
inc
test
add
inc
cmc
incb
hlt
jbe
mov
ffree
or
inc
aam
cmp
ficoms
in
cmc
jecxz
sbb
in
enter
in
stos
mov
pop
xor
add
push
lods
dec
pop
jbe
test
movsb
das
push
push
adc
test
mov
lds
out
push
loope
jno
loope
mov
std
dec
adc
mov
dec
mov
in
jle
int
iret
inc
inc
nop
pop
and
loope
leave
ds
shlb
fildl
pop
outsb
adc
sub
daa
push
and
mov
daa
dec
jmp
mov
sti
xchg
popa
cmpl
push
sbb
lcall
sti
in
pop
or
shl
cmc
add
pop
push
xlat
fidivs
loopne
push
mov
ss
jecxz
pop
jnp
inc
mov
sub
sub
sti
int
push
jno
aad
sub
je
inc
lea
std
mov
xor
add
ror
or
push
pop
push
stos
mov
shll
enter
xor
jns
pop
fwait
push
test
mov
lock
je
aad
das
sbb
inc
or
pop
xor
xlat
gs
xor
sbb
add
dec
cmp
push
jle
ljmp
push
pop
stc
in
popa
outsb
cmc
shlb
mov
in
cmpsl
arpl
outsl
pop
inc
pop
nop
arpl
push
mov
jbe,pn
dec
push
push
mov
scas
les
jo
pop
fwait
mov
add
adcl
shl
dec
push
xchg
xor
pop
repz
ror
js
cmpsl
pop
xchg
test
pusha
repz
push
add
insb
inc
xchg
cmpsb
mov
repz
ss
imul
insl
push
push
cmp
movsl
std
jno
lahf
les
dec
push
movsl
jbe
sbb
shlb
mov
sbb
sub
xchg
clc
adc
sub
in
inc
pop
icebp
pop
jne
cwtl
test
popf
outsb
movsb
ds
lods
pop
pop
jle
pop
mov
pop
nop
outsb
xor
mov
xchg
repz
shrb
push
iret
xchg
pop
aaa
les
lods
add
data16
mov
pushf
mov
out
adc
dec
xchg
inc
dec
test
cmp
pop
dec
test
outsb
mov
scas
cmp
pop
jl
rol
jmp
jne
cmp
xorb
cmp
scas
cmp
stos
xor
nop
pushf
add
pushf
push
mov
lods
adc
push
jne
pop
mov
cmp
movsl
shrl
mov
mov
ja
or
cmp
clc
lahf
leave
fstp
lret
mov
ret
and
jg
mov
mov
test
jne
sbb
adc
dec
test
jb
in
mov
jo
mov
pusha
gs
in
in
push
gs
push
je
sub
icebp
fisubrl
ss
pusha
scas
cs
mov
call
mov
or
xrelease
call
outsl
pop
jns
mov
mov
stc
sbb
loopne
push
pusha
inc
sub
repnz
repz
test
cltd
std
sahf
push
dec
ds
mov
stos
push
sbb
xchg
in
outsl
mov
out
mov
movsl
loop
popf
out
cmp
sub
pop
xchg
mov
pushf
and
dec
andl
and
mov
jne
gs
mov
jl
stos
cmp
xor
cmp
test
mul
gs
pop
cwtl
in
stos
rclb
lods
jnp
das
cmc
fnsave
scas
push
adc
sar
mov
pop
in
jno
sub
outsb
pop
push
pushf
mov
push
push
inc
out
pop
popa
test
imul
daa
outsb
mov
sbb
fcompl
out
into
popa
sub
jge
mov
leave
mov
je
mov
xchg
push
insl
adc
jg
cmp
sahf
push
inc
add
pop
mov
mov
mov
and
dec
pop
and
mov
xchg
cwtl
adc
xor
add
int
adc
cmpsl
xor
inc
xchg
xor
dec
testl
mov
cmp
and
mov
cmpsl
imul
data16
or
and
cltd
inc
pop
jnp
sbb
addb
jnp
push
in
je
xchg
cmpsb
inc
fimuls
call
sti
or
lahf
les
movl
loope
cmpsb
jns
cmc
int
mov
inc
or
loopne
in
out
mov
aaa
inc
fistpl
pop
inc
clc
jge
sub
pusha
arpl
inc
inc
js
xchg
lcall
inc
imul
jecxz
mov
les
inc
das
or
push
or
xchg
imul
outsb
jp
xchg
xor
adcb
pop
sbb
mov
fists
faddl
in
pusha
inc
dec
movsl
cmpps
movsb
mov
or
packssdw
scas
mov
in
sarb
dec
aad
and
push
or
popa
push
mov
push
jns
enter
jge
aad
jmp
int3
sub
push
cmpsb
movsl
shlb
pop
rclb
sbb
rolb
pop
and
ret
jns
jmp
call
out
push
or
mov
jns
dec
cmpsl
pop
xchg
fcoms
mov
loope
push
mov
and
jg
lahf
ljmp
repz
test
aam
cmp
clc
scas
cli
adc
sub
outsb
jle
aam
or
jno
push
xor
add
mov
ds
and
shlb
cwtl
or
cmp
leave
outsl
push
inc
mov
jl
or
jb
pop
add
stos
mov
dec
and
cwtl
dec
inc
cmp
add
push
pushf
pop
clc
test
int3
std
out
jecxz
jnp
xor
sub
jb
xchg
inc
inc
jge
push
nop
and
mov
in
in
dec
add
jl
mov
inc
push
sub
mov
inc
stos
xor
or
out
mov
pop
les
sub
push
xchg
scas
test
add
ret
pop
jae
enter
sub
push
out
xor
inc
bound
adc
mov
fwait
pop
icebp
out
jae
orb
cli
lea
xor
popa
adc
xchg
lods
sub
cmpb
jecxz
pop
lods
stc
push
sub
pop
sbbl
xchg
in
dec
call
fbstp
mov
imul
es
jle
add
sub
shl
jo
repnz
mov
negl
push
mov
sarb
and
mov
out
lock
sbb
sahf
cmp
call
dec
adc
xchg
jmp
ret
loopne
xor
sbbb
sbb
in
dec
cmp
leave
scas
iret
fldt
bound
dec
jmp
out
push
xor
lret
and
push
sbbl
xchg
sbb
push
call
add
cmpsb
jp
pop
pusha
icebp
rol
imul
repnz
loope
fdivrs
inc
inc
mov
cmpsl
ss
repnz
and
and
int
sbb
arpl
xorl
repz
xor
adc
sahf
xchg
dec
movl
loop
rolb
mov
xchg
xchg
jmp
or
push
jae
cmp
into
in
adc
mov
mov
xchg
inc
ja
imul
ficoml
push
mov
in
je
cmp
lahf
enter
or
lods
sbb
dec
push
jae
das
jg
adc
cmp
adc
pop
jno
filds
fcompl
ljmp
ljmp
dec
jle
push
add
add
inc
fidivrl
add
jge
jl
cmp
xor
daa
mov
leave
push
sahf
jmp
insl
cmp
fisubrl
xor
jp
xorl
insl
adc
mov
sbb
and
push
fnstenv
cmc
fidivl
push
jecxz
mov
lret
les
add
add
or
push
testl
jle
push
push
je
mov
push
inc
loopne
gs
out
addr16
xchg
pop
stc
sub
sub
add
sarl
lret
in
cltd
fucomi
cs
add
dec
sbb
jecxz
sarl
push
hlt
inc
mov
into
mov
inc
fmul
adc
insb
test
lret
cmpsb
sbb
jge
sahf
jecxz
addr16
lret
test
rcl
jmp
jle
mov
or
fdivrl
push
push
rcl
push
enter
and
inc
sbb
aad
pop
push
loop
or
in
inc
jmp
sahf
out
or
pop
push
jge
mov
jle
ret
outsb
mov
fmull
xchg
outsb
movsb
mov
mov
adc
andb
sub
cmpsl
mov
ret
inc
inc
mov
dec
lods
sub
xor
std
sbb
std
repz
fwait
xchg
lock
ja
test
sub
ljmp
and
pop
or
lock
aaa
out
inc
xor
xor
sbb
out
movaps
or
mov
or
sub
sub
pusha
adc
outsb
addb
std
xor
and
std
test
cmp
imull
lcall
dec
adc
adc
xor
lret
xor
sub
je
mov
std
rcrl
in
xchg
ret
lds
popf
ss
jecxz
fs
jae
arpl
sbb
movsl
add
and
push
xchg
imul
scas
cmp
in
lret
ret
adc
dec
rol
push
jg
scas
dec
popf
enter
sbb
arpl
jp
lods
sub
loope
popa
inc
sbb
cli
pop
jmp
dec
mov
sub
or
push
repz
xchg
leave
mov
jmp
pop
adc
fcmovu
inc
inc
repnz
fs
or
pop
icebp
jbe
notl
push
insb
iret
jge
int
and
movsb
lods
mov
xchg
outsl
vprotq
push
cwtl
negb
fdivrs
xor
bnd
push
dec
adc
lcall
das
rcrb
out
pop
add
ret
aaa
mov
iret
fildl
push
stc
pop
and
notb
or
xchg
dec
test
push
mov
inc
jne
das
ljmp
fsubl
cmc
std
inc
outsl
lret
prefetch
adc
test
xchg
das
faddl
in
dec
cs
ret
cmp
out
icebp
scas
or
ret
scas
andl
pop
or
lock
mov
mov
and
cmpb
mov
push
mov
mov
add
sti
addr16
in
test
mov
xchg
adc
inc
pop
pusha
in
mov
xchg
nop
sbb
xchg
int
jecxz
push
mov
mov
int
mov
sub
fildll
sub
jno
and
mov
push
jb
jb
jecxz,pt
out
xchg
cmp
push
or
popa
push
cmpsl
fisubs
icebp
push
cwtl
inc
dec
sbb
inc
xchg
and
subl
inc
inc
mov
add
jns
cs
xor
outsb
lds
jg
cltd
testb
sbb
cmp
jecxz
adcl
lea
out
lcall
movsb
ljmp
sbb
push
push
sbbl
rclb
insl
push
dec
dec
adc
pop
stc
cli
jns
jbe
scas
dec
push
push
loope
or
push
jp
fwait
lcall
add
fbstp
xor
leave
stc
fs
shll
outsb
and
xor
pop
sbb
xchg
fwait
mov
call
enter
jne
insl
andb
xor
mov
sbb
push
xor
jo
cltd
sbb
dec
or
adc
aaa
in
or
jns
dec
in
fcomp
ljmp
lds
dec
outsb
lods
inc
mov
sub
jg
sbb
xor
lock
popf
jle
xchg
mov
jp
xor
push
mov
add
xor
cld
popw
cmpsb
mov
in
leave
cwtl
scas
pavgw
xchg
sbb
lahf
testb
call
sub
hlt
mov
stos
xchg
js
sub
xor
cs
cmp
in
push
cmp
jl
xor
push
ret
gs
pop
sbb
cld
lea
rclb
sub
sub
mov
lahf
sahf
sub
jbe
fdivr
cs
fisttpll
xor
jnp
daa
lcall
fimuls
movsb
pushf
pop
arpl
mov
or
loop
ja
jbe
scas
loopne
push
movsb
sub
dec
lods
fwait
mov
xchg
cmp
std
mov
xor
sub
loop
add
mov
push
stos
mov
adc
orl
dec
lods
mov
and
add
dec
sbb
stos
lcall
loop
test
out
xchg
dec
pop
ret
aas
stos
inc
dec
int3
sub
clc
and
and
add
jp
adc
icebp
inc
repz
add
add
out
mov
add
cwtl
or
jmp
jge
ret
into
and
jmp
scas
sub
insb
cli
scas
xchg
xchg
lcall
mov
sbb
mov
je
test
xor
push
insb
jno
push
mov
xchg
pop
add
push
cli
rcr
sub
push
push
shlb
adc
mov
jle
std
call
arpl
daa
ret
inc
rorl
mov
mov
push
ss
call
and
mov
mov
ds
jp
adc
int3
jns
push
jg
arpl
dec
dec
in
xor
std
stc
stos
iret
or
xchg
and
jge
lds
popf
mov
xchg
cmp
jg
movsl
cmp
mov
ja
fs
popl
mov
pushf
mov
sbbb
adc
outsb
adc
sbb
popa
cld
les
adc
mov
je
test
cmp
scas
push
je
lret
ret
testb
push
rsqrtps
mov
inc
scas
data16
xorl
daa
sub
cmpsb
jae
cld
ljmp
rcr
and
jle
arpl
out
pop
jno
xchg
mov
out
daa
xchg
push
in
jb
cmp
out
frstor
add
dec
das
xchg
hlt
push
clc
adc
movsl
movsb
inc
ljmp
shrl
aad
dec
out
push
subl
out
adc
sub
or
movsb
cltd
add
pop
or
dec
lahf
fcmovnb
xchg
les
push
add
jbe
pop
mov
mov
or
or
or
xchg
mov
in
negl
repz
fs
dec
es
mov
inc
inc
pop
rcl
out
ret
cmc
dec
outsl
nop
xchg
sbb
mov
mov
push
and
loope
outsb
lds
loope
jp
push
jns
push
mov
push
dec
pop
lret
rcrb
push
loopne
and
inc
lea
into
add
mov
dec
rorb
lcall
popf
or
mov
pushf
test
jnp
xchg
fucomp
aam
push
in
add
adc
jp
arpl
cmpsb
pop
out
fs
pop
xorl
shll
lea
fcmovu
sbb
sub
cld
mov
ja
mov
and
adc
sub
arpl
in
in
rcrb
outsb
test
push
fisttpll
mov
aas
jbe
mov
xchg
fbld
rol
pop
imul
mov
lods
les
test
int
dec
jnp
jp
xor
sbb
or
cmpsl
mov
xor
mov
xor
mov
jno
imull
and
outsb
ret
mov
push
mov
imul
mov
ret
jo
les
incl
sbb
ja
icebp
ljmp
jno
mov
aas
fisubs
lea
jbe
mov
mov
xchg
xchg
mov
rclb
cmpl
stc
mov
or
test
inc
mov
mov
sbb
cwtl
or
mov
cli
and
or
loop
jl
int
jmp
ss
inc
lds
push
jnp
jle
xor
ficomps
sbb
hlt
repnz
outsl
mov
mov
sub
cmpsl
pop
adc
xchg
xchg
jnp
jle
leave
push
dec
outsb
mov
mov
dec
push
xor
cmp
sbb
jno
sbb
fdivrs
push
xchg
clc
or
sbb
insb
lea
lock
cld
dec
pop
adc
jmp
push
sub
sub
mov
cmpl
pop
int3
mov
inc
lods
mov
sbb
and
xchg
sub
xchg
xor
push
cmp
or
pop
ds
cmp
and
adc
mov
xor
xor
jmp
jne
insl
movsb
ds
inc
lcall
lcall
pcmpeqd
xchg
sub
push
lret
pop
ret
sub
ds
mov
out
mov
xchg
add
fcmovnb
in
xor
push
idivl
jge
adc
xor
bound
dec
sbb
call
inc
popf
jbe
icebp
stc
adc
mov
xchg
popf
mov
and
dec
xor
int3
aaa
jge
or
ljmp
push
loopne
sub
push
mov
sub
push
sbb
mov
sbb
fstpl
scas
mov
cmc
mov
int
int3
pop
in
adc
mov
pop
mov
mov
imul
sbb
xor
push
xchg
js
test
scas
or
lret
shll
jo
push
xor
test
test
mov
cmp
xor
inc
add
cwtl
sub
xor
or
pushf
add
cltd
jbe
mov
outsl
and
rorb
stos
lret
mov
push
je
xchg
in
or
arpl
jo
and
enter
add
and
xchg
xor
stos
mov
das
push
fistpll
andl
mov
scas
popa
aas
popa
pop
push
and
enter
mov
inc
subb
paddw
sub
loope
mov
mov
pop
out
adc
push
xchg
imul
inc
or
lret
dec
mov
sbb
jb
xor
or
jmp
cmp
jl
repnz
dec
out
mov
mov
and
js
jnp
or
sahf
dec
mov
jo
inc
sbb
out
testl
pushf
out
xor
in
out
xor
dec
mov
clc
out
pop
nop
inc
aas
hlt
and
or
std
addb
lcall
test
mov
jge
and
out
push
clc
cmp
xor
add
fnstsw
out
das
xor
mov
sub
pop
dec
mov
out
idiv
pop
shlb
repz
loope
inc
mov
add
aam
push
mov
mov
ficoml
mov
mov
xchg
ret
mov
dec
dec
sbb
xchg
pop
mov
enter
pop
jge
inc
vmwrite
lods
ss
dec
xlat
stos
push
sbb
add
les
scas
jbe
xchg
mov
mov
push
jle
addr16
lods
out
mov
dec
sbb
imul
cmp
jno,pt
das
dec
mull
cmp
fsub
aad
sub
cmp
out
inc
lret
scas
cmp
jmp
push
shl
fcoml
xor
fisubs
aad
in
aaa
ret
xchg
sbbb
fidivrl
aad
faddl
fists
sub
jno
dec
rcll
out
push
cli
sbb
xchg
add
push
stos
fbstp
lock
mov
in
jns
cmp
rorb
jecxz
cmp
mov
ret
xchg
cmp
sbb
sub
ja
inc
ljmp
iret
test
pop
psubsb
push
lods
mov
adc
test
mov
mov
mov
out
add
xor
xchg
inc
ret
aas
aam
out
jge
pop
or
xor
sbb
mov
imul
fcos
sbb
mov
xchg
and
mov
inc
imul
mov
push
in
rcl
adc
sub
fxch
mov
xchg
xor
sub
xchg
pop
jg
out
xorb
xchg
cli
pusha
jg
sti
nop
sarb
push
sub
sbb
adc
test
iret
lret
xchg
mov
sbb
mov
stos
xchg
mov
sub
movsl
dec
rcrl
xor
mov
cmp
je
jl
cltd
loop
mov
push
cs
xor
stos
push
push
aas
popf
sub
popa
pop
dec
call
je
popa
dec
pop
push
adc
push
mov
sbb
pop
adc
xchg
mov
movsl
jne
lret
nop
shl
cmp
push
fsubl
inc
mov
cmpb
mov
jns
scas
inc
cmc
push
jbe
jo
push
stos
mov
aam
std
mov
in
mov
add
mov
stos
pop
ljmpw
lret
sbb
test
and
rorl
cli
push
jl
xchg
mov
clc
movsb
and
cmc
or
loop
and
mov
lods
lret
mov
add
mov
xchg
sbb
sti
pusha
cs
mov
jle
mov
push
adc
inc
ss
aas
xchg
lods
inc
jne
sti
mov
xor
shl
jno
clc
dec
mov
xchg
dec
dec
dec
mov
pop
lret
popa
ljmp
adc
bnd
jle
inc
mov
push
sbb
in
mov
add
dec
mov
repz
movsl
out
jbe
push
mov
iret
loopne
test
cmpsl
push
jle
and
pop
in
xor
mov
mov
jno
mov
mov
pop
or
dec
and
daa
je
jg
dec
xor
add
lock
aam
cmp
aam
or
pop
or
xchg
xchg
push
daa
mov
inc
mov
ret
insb
fadds
imul
shll
mov
popa
adc
sub
dec
lahf
lret
incb
mov
imul
jmp
lret
or
clc
xchg
push
add
lea
std
mov
cltd
lcall
mov
out
inc
sub
dec
imulb
jo
subl
xchg
xor
inc
mov
mov
pop
shll
push
cmc
scas
and
jmp
fisubs
jecxz
fnsave
lock
and
mov
jo
leave
cmc
fs
mov
rorl
call
push
sbb
and
imul
fisttps
jns
shrl
movsl
dec
icebp
clc
mov
add
mov
mov
and
shld
push
icebp
jg
popf
outsb
sbb
push
sub
or
xor
leave
dec
aas
in
ja
loopne
jg
lock
pop
aaa
aaa
add
mov
push
push
out
inc
inc
jae
dec
push
xchg
pusha
sbb
xchg
fst
jg
ret
push
dec
loop
aas
xlat
out
pop
xchg
sbb
xor
pusha
mov
cltd
jp
sub
jns
js
movsb
and
ret
lret
enter
enter
cld
jae
arpl
add
jecxz
adc
push
mov
dec
dec
lds
and
lret
add
rolb
ss
cmp
jnp
push
inc
cmp
lret
cmp
pusha
xchg
cmp
pop
sbbb
xchg
das
std
and
lret
jns
push
out
add
test
cmc
xchg
and
jmp
xchg
mov
sbb
jae
jo
adc
fisttpll
jbe
aad
sbb
pop
int
xchg
sub
in
scas
push
sub
ficomps
mov
out
mov
adc
mov
sahf
cmp
out
xchg
pop
adc
mov
movsl
sbb
adc
test
inc
mov
aas
and
sbbb
test
mov
jp
mov
xchg
cmp
inc
les
mov
stc
inc
out
mov
les
fs
or
stos
jne
sub
jne
xlat
adc
int
popf
or
cmp
push
in
mov
cltd
cld
stos
mov
fcoml
and
cmp
call
sub
inc
mov
testb
outsb
dec
xchg
jnp
es
shll
int3
lcall
adc
les
mov
inc
ja
sbb
mov
mov
jg
dec
test
jbe
arpl
xor
bound
aaa
aaa
mov
and
push
cmpb
mov
sbb
mov
lock
fsubrl
push
inc
cmpsb
out
loop
mov
cmp
frstor
mov
dec
lahf
cmp
cmovge
push
xchg
xchg
add
and
mov
dec
mov
fcmovnb
xor
xor
xchg
sti
or
pop
sarb
add
mov
sbb
cld
std
cmpsb
test
test
jo
ss
in
xchg
xchg
cmp
ja
test
pop
cmpsl
xor
bound
das
jne
cmpsb
out
sbb
mov
add
lret
test
inc
pop
cmpb
out
idivb
shr
jmp
jmp
pop
iret
inc
adc
clc
pop
mov
sub
mov
hlt
into
inc
and
cmp
mov
mov
push
mov
jg
or
push
clc
out
lds
mov
mov
aaa
lcall
add
dec
mov
es
mov
negb
lods
lock
icebp
push
and
xchg
icebp
jmp
clc
pop
xchg
xchg
ljmp
mull
in
mov
imul
negb
xorb
pop
pop
ret
mov
or
leave
lcall
xchg
lret
loopne
pop
call
xchg
lea
jne
mov
mov
into
mov
clc
pop
test
jno
mov
xor
inc
stc
and
out
insl
std
sahf
adc
mov
aam
jno
dec
lods
mov
fbld
add
or
mov
push
lcall
sub
les
xchg
and
xchg
cwtl
adc
xchg
mov
pop
insl
es
dec
lcall
mulb
jbe
or
inc
enter
clc
ffreep
outsb
xchg
or
mov
inc
mov
and
pop
lret
je
imul
pop
ja
mov
add
insl
pop
xchg
jns
das
push
jecxz
mov
mov
cmpsb
xchg
test
popf
das
mov
mov
sti
sar
lods
js
enter
sbb
inc
sub
xchg
add
jmp
fdivr
xchg
pop
sbb
insb
ja
movsl
lock
sbb
popa
sahf
mov
jge
mov
pop
mov
sub
dec
notl
fcmovb
jl
add
movsb
jl
pop
add
mov
arpl
test
jl
fisubs
fsubrs
cli
jnp
or
lret
jg
adcl
in
inc
sbb
mov
adc
xorb
or
pop
inc
pop
fidivs
sbb
cltd
cmc
leave
lods
fadds
jp
jecxz
sub
push
cmp
sbbb
mov
or
ror
or
pop
out
jp
sub
jns
mov
repnz
mov
adc
pop
cltd
or
rcrb
loop
hlt
aas
or
popa
shrb
movsb
mov
mov
pop
aad
push
lea
inc
pop
and
dec
inc
sub
push
pop
das
addb
ljmp
and
mov
fwait
and
lds
cmc
data16
enter
mov
add
add
stc
sbb
mov
pop
mov
js
dec
pop
icebp
cmpsb
cmp
stc
sub
psrlq
jae
jp
aas
adc
loope
pcmpgtd
mov
sub
jns
xor
scas
xchg
popf
call
in
testl
sti
and
xchg
fs
cltd
sub
mov
mov
mov
lret
sti
xchg
push
adc
aad
rolb
or
mov
mov
xor
xchg
repz
cmpsl
ljmp
or
and
jns
hlt
add
mov
iret
mov
cmp
lret
dec
sbb
je
sub
pushf
in
int
jge
mov
dec
stos
add
jp
xchg
mov
stc
aad
lret
fsubrp
pop
cmp
sbb
lea
lret
mov
cwtl
jo
jle
iret
dec
cmp
cwtl
or
cmpsb
mov
insl
mov
inc
fidivrl
popf
into
xchg
ret
test
jo
cs
leave
sbb
cld
bt
clc
lea
mov
sbb
test
sub
jbe
push
sub
mov
mov
mov
adc
rcrl
ja
ljmp
jae
fldenv
cmpsl
or
dec
pusha
pop
jg
xor
mov
mov
notb
sbb
sbb
inc
jnp
sbb
dec
pop
fildll
mov
int3
cmp
lahf
sti
xchg
xchg
adc
rol
lahf
sbb
loop
ja
sbb
shlb
mov
jmp
cwtl
jo
ljmp
push
cmc
nop
movsl
shrl
xchg
mov
cmovp
sti
dec
pop
or
inc
or
and
push
lea
cmp
je
popa
ljmp
xchg
mov
int
push
clc
lods
aaa
sbb
jl
cwtl
dec
push
xchg
sub
pop
and
xchg
xchg
mov
jbe
dec
movsl
out
cmp
cld
jle
xor
int
pop
outsb
fcmovnbe
notb
jp
loopne
adc
aad
test
es
mov
cltd
out
imul
add
push
lcall
jmp
imul
bound
bound
dec
test
rcll
in
ret
and
push
push
mov
xchg
insb
mov
pop
inc
cmp
loopne
ljmp
pop
sub
repnz
mov
push
mov
iret
popa
sub
add
sub
ficoml
hlt
je
aam
sub
aas
jns
cli
int3
pop
xor
test
jle
es
mov
fwait
ret
outsl
mov
cli
iret
dec
add
xchg
sub
test
inc
lds
loopne
js
rol
movsl
bound
decl
mov
sbb
popa
sbb
mov
mov
test
push
in
insb
test
pop
lahf
decb
stc
mov
in
pop
sub
pop
stc
inc
out
das
out
rcrl
daa
push
scas
sahf
fldenv
aas
mov
xor
jg
sbb
fdivrp
add
iret
xchg
cmovnp
insl
test
mov
dec
int
xchg
push
or
stos
adc
xor
jno
dec
sub
cmc
xor
cwtl
xchg
xor
push
dec
xor
cmp
aas
and
dec
ret
lods
or
xor
popa
push
jbe
push
inc
adc
add
jecxz
and
pop
xor
xchg
aam
insb
xor
inc
dec
pop
pop
lret
add
mov
pop
cmp
cld
add
iret
inc
out
and
repz
jae
shll
pop
adc
andl
scas
hlt
xor
int3
push
pop
enter
dec
mov
mov
fwait
dec
scas
mov
pusha
test
in
push
pop
mov
ja
mov
aad
push
inc
leave
inc
scas
mov
pop
sbb
mov
or
push
aad
imul
test
loop
nop
divl
xor
movsb
test
adc
dec
add
dec
jbe
repz
stos
ds
icebp
cmp
dec
mov
pop
inc
jge
insl
dec
jge
sbb
imul
cs
sbb
paddb
jae
push
fcmovb
pop
mov
je
fdivrs
and
jl
mov
aas
out
ror
lcall
mov
jns
pop
add
inc
mov
imul
push
repz
movsl
xor
cmp
and
stos
enter
mov
pop
add
daa
sub
insl
mov
cmpsl
dec
push
pop
mov
jp
ja
nop
std
rcr
inc
mov
and
xchg
mov
mov
fisubrl
loopne
sbb
inc
outsl
jmp
pop
and
cli
lods
jle
cmpb
jmp
push
mov
mov
cli
fistl
jbe
ljmp
nop
cmp
xchg
sub
mov
and
shl
sub
xchg
pop
into
sarl
jno
ror
in
adc
push
and
dec
mov
addl
fisubrl
dec
js
cmp
jmp
addr16
push
xchg
imul
push
lds
push
push
js
push
cmp
rcrl
adc
outsl
adc
sbb
lret
mov
xor
rcl
cwtl
jno
ret
or
and
dec
dec
dec
push
dec
pop
add
aaa
rorl
cmp
ret
sbb
or
in
add
lods
xlat
and
lahf
mov
sbb
pop
fldl
adc
dec
push
int
ret
cmp
mov
dec
test
xor
loopne
ja
call
into
repz
inc
xor
xor
mov
lcall
ret
ljmp
dec
hlt
subl
les
bnd
popf
shll
jle
mov
xchg
movsl
mov
xor
xchg
ret
mov
movsb
adc
mov
pusha
jb
mov
cmp
or
pushf
add
clc
add
inc
adc
dec
mov
pop
out
mov
stos
aas
out
add
lds
push
add
jmp
jbe
cltd
or
sahf
enter
cmp
jnp
stos
dec
push
cltd
cmp
mov
xchg
xor
xchg
dec
lods
dec
mov
xlat
inc
ret
mov
pop
not
jbe
shrb
push
push
arpl
stc
or
add
pop
cmp
addl
pop
sbb
ljmp
frstor
shl
lods
in
sub
mov
or
push
popa
jp
outsb
sarl
xchg
addb
lods
dec
cmc
inc
and
add
test
or
mov
ret
rorl
faddl
jbe
mov
sbb
stc
and
cmp
and
add
bound
and
mov
cmovae
sub
sub
xor
adc
lock
add
push
sub
mov
andl
pop
adc
test
daa
mov
mov
in
rcll
push
enter
jb
mov
jmp
adc
and
inc
imul
nop
aam
cli
mov
jb
int3
subb
out
outsb
jb,pn
pop
in
dec
jle
sbb
call
jmp
sti
mov
mov
xchg
pop
lahf
sahf
dec
shrl
xchg
jge
or
mov
stc
adc
imul
lock
xchg
mov
push
jmp
stos
inc
mov
loope
sbb
push
jo
inc
xchg
in
ds
push
sahf
dec
dec
stos
sbb
loop
gs
leave
cmp
test
sbb
adc
ret
movsl
pop
add
sbb
std
pop
aad
adc
cmp
repz
inc
popa
pop
cmp
add
xchg
lret
pop
xor
gs
andb
cli
insb
push
push
jno
repnz
notl
lahf
mull
ret
sbb
mov
shr
fdivrl
stc
cmp
mov
out
pop
sahf
cli
sbb
fisttpl
push
aas
cmp
fildll
inc
adc
mov
push
shlb
dec
scas
aas
fldl
arpl
dec
rorb
loope
adc
jle
iret
xchg
fimull
rcrl
mul
sbb
jae
mov
push
fildl
mov
ja
andb
mov
lock
jne
scas
ret
jmp
mov
mov
xchg
push
mov
cld
mov
es
jns
xchg
inc
mov
jo
movsl
inc
bswap
lods
mov
xor
insb
pop
pop
lock
xor
in
in
js
fs
mov
lcall
int
icebp
sbb
mov
jae
dec
pushf
sbb
stc
mov
jae
sbb
jne
out
xchg
inc
push
scas
orl
movsl
in
mov
shll
jno
pop
or
subb
fndisi(8087
cmpsb
mov
xchg
sub
or
inc
daa
fists
xor
mov
pop
dec
cmp
in
jb
dec
sbb
or
cltd
cmp
sub
mov
in
dec
shlb
nop
and
outsb
stc
cmpsb
cld
mov
pushf
cmp
dec
sbb
dec
push
mov
arpl
inc
out
imul
and
cld
daa
add
xchg
icebp
dec
and
mov
aad
or
out
hlt
sbb
loope
in
stc
inc
mov
mov
ror
jb
add
int
or
adc
mov
mov
hlt
addb
pushf
std
pop
mov
adc
mov
flds
pop
mov
sub
and
sbb
dec
sbb
cmp
add
cmpsb
pop
out
jb
lret
stos
cmp
inc
mov
stc
sbb
pop
call
cmpsl
mov
pop
jns
cld
mov
lret
push
mov
push
add
pop
pop
pop
mov
les
mov
imul
repz
push
out
add
ss
bound
pop
mov
call
pop
and
pop
enter
mov
bound
rcll
cmc
jp
inc
mov
mov
loopne
and
mov
dec
jl
push
mov
mov
add
mov
xor
add
sbb
flds
repnz
adc
aad
adc
pusha
movsb
pop
fstpt
das
dec
js
xchg
rolb
mov
or
insb
imul
std
popa
add
fcoml
or
lock
insb
cld
into
test
and
jnp
pop
push
pop
mov
push
hlt
sbb
out
fadds
pop
inc
push
and
lock
or
lods
dec
xchg
jge
pop
push
and
stc
xchg
lcall
sarl
pop
mov
call
sbb
rolb
xchg
test
jmp
pop
mul
xchg
cmpsl
divl
int
icebp
xchg
test
in
xor
mov
repz
mov
addb
ret
lea
jae
lea
lret
sbb
call
lret
arpl
and
sbb
enter
dec
ss
ljmp
das
lcall
rcr
xchg
pop
push
cmc
lahf
icebp
push
fisttpl
jno
mulb
jecxz
shll
mov
mov
pop
imul
and
or
inc
fiadds
xchg
enter
jno
pop
in
lods
mov
test
popf
xchg
ss
shl
dec
inc
or
js
std
rcll
sub
jmp
lds
push
cltd
ret
mov
or
push
xor
dec
inc
sub
ss
and
call
and
sub
add
dec
xchg
and
inc
lret
sbb
popf
xchg
movsb
mov
jo
push
stc
xlat
in
divb
idivl
mov
mov
sub
mov
fwait
cwtl
std
sahf
push
inc
dec
sub
mov
popf
lea
xchg
test
push
pop
and
mov
inc
or
mov
pop
pop
sbb
sbb
cwtl
popf
xor
lods
pop
push
adc
sar
and
test
inc
xchg
insl
out
push
dec
cmpsb
xlat
xchg
add
outsl
jmp
dec
shrb
sar
ljmp
movsl
hlt
mov
sarl
mov
fidivl
rolb
rclb
imul
sub
xchg
in
inc
xchg
shll
cli
loope
pop
fs
shlb
xor
cwtl
add
mov
nop
or
pop
andl
vstmxcsr
add
pop
lcall
inc
add
inc
out
dec
loopne
into
out
mov
lds
mov
mov
jbe
cli
add
cmp
hlt
or
test
or
sbb
cs
enter
or
test
leave
int3
dec
ja
repz
incl
cs
or
insl
push
cli
jb
movsl
cmpsb
add
hlt
js
mov
jbe
ss
ud0
jae
cmp
out
mov
pop
int
cli
xchg
xchg
aas
mov
rcrl
cs
jecxz
popa
add
inc
loopne
cmp
xchg
imul
pusha
data16
and
iret
xchg
cltd
and
mov
js
or
pop
mov
inc
jle
jmp
imul
enter
pop
out
aas
das
inc
shl
ljmp
test
adc
mov
add
xor
sub
mov
stc
mov
sbb
stc
fnstsw
xchg
jp
call
jb
out
pop
push
mov
xchg
repz
imul
jmp
stos
out
xlat
imul
mov
inc
mov
dec
jae
add
and
test
sti
addr16
gs
and
ss
jge
add
add
sti
leave
cmp
push
enter
adc
imul
push
lods
scas
cmp
movsb
or
cmp
cmp
xor
adc
cmp
out
cld
sbb
pop
ja
ficoms
inc
loop
int
xchg
push
sbb
movsl
jmp
xchg
mov
lods
cli
and
mov
mov
jp
lods
stos
in
cmpb
pop
mov
cmp
addr16
ret
adc
cmp
loop
test
ljmp
add
cmp
enter
jmp
sarl
movsl
in
sbb
and
jg
sarl
jmp
xlat
sub
insl
inc
pop
push
or
and
lds
jecxz
movsb
xlat
xor
push
loopne
shlb
xorl
push
mov
and
je
jae
cmpsb
mov
adc
mov
movsb
cld
xlat
jne
pop
ffree
and
shrl
adcl
outsb
fs
pop
loopne
cli
je
fsubl
xchg
sbbl
jl
lds
sbb
andl
xchg
or
push
insb
ret
ffree
adc
jae
xor
fs
xchg
pop
popf
add
mov
movsb
insl
pop
pop
lahf
bound
add
mov
pop
mov
or
hlt
addr16
scas
xor
addr16
in
fsubl
shll
pusha
in
inc
mov
les
cmp
xor
xchg
push
jnp
cmpl
aas
adc
or
xchg
push
xor
mov
out
push
repnz
outsb
ficoml
andl
int3
popa
in
cmpb
shr
ret
or
dec
out
and
lea
imul
cmp
outsl
jl
sahf
enter
bnd
bound
rcl
hlt
dec
pop
cmp
mov
sub
data16
lea
jmp
stos
xor
ja
sub
rclb
aam
mov
out
rorl
xchg
dec
fs
shlb
pop
es
scas
and
inc
stos
aaa
nop
insl
adc
in
je
sbb
jg
jae
mov
dec
xor
arpl
setge
fs
push
xchg
or
jge
dec
mov
adc
push
test
jb
cltd
or
lret
insl
xchg
test
cmp
dec
pop
adcl
push
iret
daa
adc
adc
insb
adc
js
cmp
xchg
push
faddp
add
xchg
mov
push
in
cmp
bound
ret
xchg
lcall
adc
mov
outsl
subl
negb
sbb
mov
or
mulb
jnp
loopne
lds
pop
in
mov
dec
adcl
andl
lret
in
jbe,pn
mov
push
inc
mov
jg
cmpsb
movsb
jae
aad
inc
or
fiaddl
imul
pop
lret
int
push
mov
adc
dec
dec
shrl
lods
inc
adc
xchg
inc
add
xor
aaa
push
imul
sub
push
bound
popf
push
mov
scas
inc
push
mov
and
or
mov
and
jl
mov
sub
cmpsl
sbb
lods
data16
inc
mov
enter
inc
scas
sarb
adc
adcw
enter
sub
dec
fs
push
adc
addl
pop
dec
adc
inc
cmp
outsl
sub
pop
or
xchg
in
out
test
lods
cmp
add
imul
negl
mov
jae
loopne
addr16
pop
ds
andl
mov
mov
sub
mov
mov
jae
pop
pop
inc
test
movsl
jl
movhps
rorb
les
in
add
jp
sbb
or
pop
mov
out
lret
inc
mov
lods
cmp
xchg
adc
xchg
gs
cmc
sub
xchg
dec
xchg
int
mov
mov
jge
sarb
xchg
divl
in
jmp
inc
outsl
xchg
aas
pop
mov
les
cmp
sub
ljmp
jno
xchg
aas
dec
inc
xor
popf
clc
sub
sub
cmp
sbb
xorb
pop
mov
ja
jbe
rclb
adc
push
fnsave
push
push
sub
sbb
in
dec
xchg
clc
enter
jg
add
das
push
out
push
dec
in
jae
mov
pop
int
or
fwait
cmp
and
pop
push
hlt
pop
arpl
dec
jno
and
mov
cwtl
mov
enter
or
mov
cmp
jb
jns
clc
dec
xor
jns
push
pop
cmc
outsl
inc
int
sub
mov
cmpsb
pushf
add
addr16
jmp
cli
out
xlat
xchg
sub
in
shrb
mov
test
xchg
xchg
aas
mov
push
add
mov
jecxz
or
push
je
mov
in
xchg
mov
pushf
lahf
lods
or
pop
in
imul
loope
test
xor
and
sbb
inc
out
adc
inc
xor
xor
add
xchg
pop
fsts
or
packuswb
roll
jo
mov
push
faddl
loope
nop
outsb
xchg
mov
pop
jecxz
pop
mov
std
sub
cmp
hlt
pop
cli
dec
mov
mov
jns
xchg
and
xor
stc
mov
or
cmpsl
lds
test
pop
xor
mov
out
and
addl
mov
sub
dec
fsubs
jbe,pt
sbb
lds
sub
sahf
push
or
daa
jne
or
cltd
lods
cmpsb
les
fsubs
daa
int3
adc
scas
xchg
dec
into
push
les
out
rorl
jle
mov
add
roll
adc
cmp
rcl
add
lods
jns
fcmovnbe
fistpll
cmp
in
icebp
mov
mov
pop
mov
inc
jle
fcomip
fidivs
pop
fidivrl
push
adc
sub
jp
or
jo
adcl
sarl
and
enter
fiadds
ds
adc
add
inc
adc
cltd
push
pop
das
ss
jg
mov
xlat
lock
scas
inc
icebp
sti
cwtl
lret
adc
pop
xchg
test
idivb
cmp
sbb
int3
jle
xchg
sarb
pop
cmpsl
adc
lret
das
popf
setne
inc
fbstp
sti
insl
xchg
ja
test
ret
pop
or
jmp
fdivs
mov
inc
cmp
cmp
pop
xchg
lock
rorl
out
std
xchg
add
mov
stc
mov
int3
loop
push
xchg
subl
fdivrs
call
je
adc
xchg
ds
push
mov
sbb
repnz
fcom
and
cmc
adc
and
push
dec
mov
or
movsb
fidivrl
shrl
stos
jmp
loop,pn
sub
out
sbb
xchg
pop
test
icebp
xchg
or
pop
in
pop
push
sbb
mov
fistpl
pop
cmp
je
popa
push
popa
or
jo
sub
std
xor
iret
cmpsb
mov
mov
add
pop
loope
data16
mov
xor
rcr
xchg
xor
outsb
sbb
mov
out
push
test
lcall
popa
rcll
sahf
rcrl
mov
ret
popf
mov
mov
push
fbld
fbld
pop
cmpsb
imul
inc
xchg
fistps
mov
ror
pushl
inc
sbb
incb
test
test
mov
pop
lahf
mov
sub
jp
pop
inc
cmp
pop
pop
or
movsl
mov
xlat
or
xchg
dec
ljmp
into
mov
inc
jg
pop
mov
out
ror
cmp
xor
or
jp
sub
push
das
dec
neg
inc
mov
cmp
nop
loop
cmp
fistpll
jmpw
mov
roll
rcrb
adc
adc
inc
shll
iret
sub
stos
fstps
adc
xchg
movsb
sbb
dec
xchg
sub
sbb
rcrl
push
xchg
outsl
jno
jmp
test
loope
mov
jbe
adc
mov
push
mov
inc
mov
mov
mov
shl
imul
repnz
mov
mov
sahf
dec
pop
sbb
stos
cld
adc
mov
push
lcall
es
mov
mov
iret
xchg
xchg
mov
sbb
gs
inc
mov
and
clc
in
or
adc
push
push
and
imul
jbe
mov
lcall
pop
mov
pusha
jno
sub
jbe
stc
subl
and
std
jns
gs
clc
mov
andb
ja
or
inc
or
jl
orl
adc
adc
or
ret
mov
sarb
and
lods
pop
inc
ficoml
test
inc
iret
loopne
adc
push
sbb
sbb
test
jae
add
push
iret
xchg
test
fmul
iret
ljmp
ret
cmp
inc
shlb
push
pushf
push
roll
aad
sub
xchg
mov
hlt
cltd
mov
shl
or
hlt
mov
test
mov
inc
mov
das
sahf
dec
movsb
leave
or
into
sub
mov
mov
lcall
test
das
adc
fs
jno
mov
lcall
add
lds
dec
repnz
sbb
jmp
sbb
sub
pop
xchg
lea
xchg
in
mov
sbb
int
add
pop
hlt
pop
xor
cmp
inc
or
jae
cmc
imul
xchg
addr16
sub
test
or
pop
fcompl
xor
insb
add
stos
mov
mov
fldpi
loop
pop
jnp
gs
cld
stos
xor
mov
and
and
sbb
mov
cwtl
push
div
pop
cmpsb
mov
mov
data16
sahf
cmp
adc
xchg
addr16
cmp
mov
inc
iret
addr16
lcall
pop
xor
imul
ret
mov
mov
in
aaa
pop
inc
repz
mov
adc
cmp
enter
adc
inc
inc
outsl
loop
je
push
imul
insl
xchg
and
cmp
xor
inc
mov
lret
test
pusha
in
sbb
mov
test
xchg
push
mov
jecxz
popf
fisubs
mov
daa
adc
je
xchg
outsb
jne
push
call
cltd
adc
dec
stos
cli
dec
sbb
lret
sbb
xchg
clc
stc
pop
and
cmp
push
pop
test
int3
dec
imul
xchg
sub
inc
dec
mov
jle
stc
jae
insl
cltd
scas
lods
pop
lcall
aad
or
mov
ds
mov
scas
cmp
pusha
jne
cmp
lret
pushf
xor
push
dec
pop
dec
xchg
push
subb
dec
rcrl
pop
push
jle
xchg
inc
cmp
push
and
sbb
push
fwait
push
mov
lods
int3
shrl
insl
adc
mov
push
push
mov
xor
mov
bound
add
ret
lods
mov
pop
jne
add
into
pop
data16
out
loopne
movsb
lock
shlb
cld
das
shr
lods
aaa
loopne
jb
mov
jb
dec
cmp
rclb
cmp
fdivrs
cmp
lret
lock
and
pop
dec
cwtl
lret
or
or
mov
adc
or
mov
add
test
dec
leave
into
lcall
fsubrl
int3
cmpb
mov
xor
xchg
xchg
mov
cmpsb
insl
jge
inc
push
mov
pop
xor
int3
cmp
mov
inc
mov
cmpsl
mov
in
push
cs
adc
mov
cmp
inc
pop
lods
ja
cmp
lahf
cmc
in
int
cmp
je
jb
fldl
movb
or
test
xor
in
int3
imul
or
jae
sarl
aaa
mov
pop
fbstp
fs
inc
iret
jl
repz
jae
pop
inc
and
ja
mov
inc
pcmpeqb
orb
pop
push
lret
push
out
daa
jnp
and
add
inc
sbb
int
and
dec
pop
dec
jle
mov
cmpsb
ss
jns
gs
and
clc
inc
das
adc
fcoml
popf
mov
mov
jle
sti
out
cli
inc
xor
xchg
mov
pop
sbb
test
and
or
scas
rcll
cmp
xchg
outsl
arpl
movsl
out
jbe
out
ljmp
xchg
xor
add
mov
mov
cmp
je
movl
stc
inc
outsb
add
pop
fwait
xchg
out
push
pop
loope
mov
iret
cltd
insl
nop
push
sbb
cmpsb
or
test
cmpsl
add
popa
mov
sub
mov
cmc
push
insl
adc
std
dec
mov
fisttpll
pusha
and
add
fwait
jnp
pop
movsb
pop
push
movsl
lcall
das
push
in
mov
inc
pop
mov
imul
rcl
or
leave
js
daa
jnp
cmp
mov
jb
insl
and
enter
xchg
mov
sbb
sub
jno
insb
add
or
repz
enter
push
sbb
repz
cltd
pop
jbe
pop
hlt
scas
int
cs
mov
popa
push
sarl
lret
jno
cli
arpl
rclb
into
mov
or
dec
mov
push
fnstcw
in
cmp
push
ret
jae
pop
cmpsl
fldt
mov
sub
into
adc
pop
cld
shrl
fucomip
jo
mov
mov
cmp
inc
cmpsb
mov
fimuls
add
adc
add
jl
sub
sub
rorl
jecxz
ret
mov
pop
and
rolb
push
xchg
mov
sbb
add
xchg
and
fsts
fisubrl
stos
xchg
aas
adc
jmp
jb
sbb
or
cmc
ret
jmp
aad
pop
and
sahf
push
jne
push
shlb
pop
pop
and
in
jp
mov
mov
adc
adc
inc
jbe
and
push
sbb
pusha
cmp
sbb
sbb
cld
lods
std
out
inc
pop
sub
ret
xor
inc
mov
xor
or
jmp
out
pushf
add
push
psubw
testl
in
inc
cmc
pop
gs
cmp
mov
iret
pop
pop
sub
sbb
imul
push
std
xor
mov
inc
mov
jmp
mov
mov
add
shrl
mov
pop
ds
inc
dec
addr16
sub
movsl
ds
sbb
call
repz
add
aam
cltd
sbb
rcll
ljmp
jmp
push
sbb
jns
outsl
test
inc
js
jnp
ret
lcall
pushf
mov
in
jb
cmp
fisttpl
sub
dec
adc
sbbl
fdivl
push
dec
dec
jo
and
push
cmp
inc
mov
fsubrs
in
adc
les
outsb
mov
pop
mov
jno
mov
outsl
inc
inc
xchg
enter
cmp
pop
pop
stos
les
rorl
repz
adc
cltd
lret
jnp
jl
lret
adc
xchg
adc
fistl
mov
fwait
stc
movhps
mov
mov
movsb
gs
push
sbb
mov
jmp
pop
inc
insb
sub
xorb
jl
loopne
xor
jl
lea
jnp
mov
ret
mov
inc
pop
xchg
inc
mov
cmp
icebp
sahf
mov
aas
push
pop
dec
jo
ds
mov
mov
js
pop
movsb
mov
jne
mov
adc
stos
jg
negb
pop
lcall
push
push
ror
pop
insl
mov
xchg
pop
or
and
sub
scas
lods
push
mov
cli
out
lfs
ds
xchg
xor
push
ret
cmc
xchg
dec
cmp
push
sub
jmp
stc
leave
pushl
dec
pop
cs
insl
cwtl
cwtl
pop
xor
test
movsb
jle
fisttpl
nop
xchg
fimull
inc
outsb
repz
ss
mov
test
and
cmp
out
outsl
adc
sbb
in
pop
mov
test
je
cmp
adc
cld
sub
mov
data16
rclb
test
call
jge
mov
mov
dec
lret
xchg
push
or
and
iret
mov
or
push
and
xchg
mov
sub
sub
leave
push
xor
pop
clc
outsl
incl
fs
adc
xchg
movsb
pop
roll
test
pushf
mov
cmp
out
pushf
fwait
movl
vmovaps
shrl
out
mov
dec
leave
adc
popa
aam
sub
xor
sti
cld
movl
lret
push
xor
lret
xor
daa
jl
push
inc
mov
cmp
jns
jno
or
sub
int3
add
add
pop
add
add
fs
push
push
inc
add
push
push
jns
gs
add
push
jns
je
insl
add
adcl
je
add
inc
xor
add
jb
je
outsl
insl
jo
gs
add
push
imul
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
pusha
jl
jge
jae
add
test
stc
ja
dec
call
jmp
ret
rcr
call
ja
add
push
ret
dec
call
js
add
push
ret
mov
call
jno
add
push
ret
jns
mov
call
jno
les
std
call
jg
add
push
ret
adc
jmp
jno
shl
call
jg
add
push
ret
dec
jmp
jae
mov
add
add
lcall
push
call
jno
les
jo
rcl
call
jns
les
add
jmp
jno
call
js
add
push
ret
stc
jmp
jl
lea
add
add
add
add
jmp
add
push
ret
inc
jb
jae
jno
add
add
shr
popl
mov
call
jle
add
push
ret
jnp
mov
adcl
push
cld
pop
call
jmp
les
push
mov
pop
jmp
ljmp
call
jmp
je
ror
sub
call
jno
les
or
add
jl
mov
sar
rol
call
jnp
add
push
ret
cld
ror
sub
add
sub
push
call
call
jmp
xchg
mov
js
jns
jp
add
add
clc
mov
add
push
call
jbe
les
jmp
jp
sub
add
jmp
jae
push
add
add
orb
add
add
test
push
popl
add
jne
call
ljmp
out
call
jle
les
mov
loop
adc
add
jmp
jae
xor
mov
mov
add
jmp
call
add
mov
jmp
call
mov
call
lcall
add
add
stc
xor
call
jmp
addb
add
xchg
rol
call
jne
add
push
ret
xchg
sub
call
jbe
les
add
add
sar
mov
jmp
call
rcl
xor
call
jbe
add
push
ret
stc
sub
push
call
jno
les
xchg
andl
sub
jne
call
js
add
push
ret
rcl
popa
push
popl
pusha
call
jle
les
out
negl
sbbl
push
rol
pop
call
jbe
les
add
mov
cmp
or
sub
push
call
jnp
les
jmp
dec
addl
mov
rcl
add
jmp
jmp
sbb
add
add
jae
les
xor
push
call
jbe
les
stc
or
ror
jmp
jle
add
add
sub
push
call
je
les
or
mov
call
jne
add
push
ret
jmp
xchg
dec
sub
call
jno
add
push
ret
jmp
inc
jns
mov
xorl
sub
call
jae
add
push
ret
jmp
mov
adcl
add
jne
call
je
les
subl
popa
push
popl
pusha
jmp
jge
add
mov
push
call
js
les
test
mov
jbe
ja
ja
add
add
shl
mov
jb
jae
ja
sbb
mov
jmp
lcall
lea
clc
push
call
jne
les
jne
stc
shl
rol
push
call
ja
les
jmp
dec
sub
sub
sub
jle
jg
ljmp
fprem
mov
jmp
jns
add
push
popl
xor
jmp
call
add
add
jmp
jl
add
add
add
test
call
add
add
js
les
xchg
jmp
jnp
fldcw
in
adc
loope
pop
jmp
jmp
sldt
add
mov
add
add
jge
test
push
popl
push
or
pop
jmp
jl
mov
cmp
push
dec
add
push
call
js
les
jmp
jl
mov
rcr
push
popl
mov
call
ljmp
add
add
dec
add
jp
jnp
jl
rol
call
jl
add
push
ret
xchg
add
push
call
ja
les
stc
mov
call
jmp
add
push
ret
shl
xor
call
jp
add
push
ret
jmp
sub
jae
dec
sub
call
jno
les
shl
add
jne
jmp
jp
clc
jp
jnp
jmp
cld
orl
mov
jmp
je
add
add
rcl
mov
ja
mov
sub
jb
jae
js
mov
mov
mov
call
ljmp
add
add
mov
mov
call
jb
add
push
ret
cld
add
jb
jae
jae
add
rclb
add
add
jg
add
push
ret
jmp
jae
and
add
xor
sub
call
ja
les
add
xor
jl
jge
jb
or
add
jnp
mov
sub
sub
call
jg
les
add
add
cld
add
call
ja
add
push
ret
jno
adc
add
jne
call
jb
add
push
ret
rcl
dec
jl
jge
jae
add
mov
add
cld
pop
jmp
jnp
mov
push
mov
sbb
xor
call
ja
add
push
ret
mov
mov
dec
add
jmp
jge
pop
add
add
movl
adc
inc
push
mov
jp
jnp
jne
fldt
shr
xor
call
jae
add
push
ret
jb
dec
clc
ror
push
call
jno
les
jmp
cld
test
addl
sub
call
call
add
jbe
ror
mov
jbe
ja
jle
mov
xor
call
je
les
add
add
mov
sub
push
call
ja
les
jmp
xor
sub
jne
call
jns
les
mov
jge
jge
test
add
add
add
sub
pop
jmp
jmp
or
add
ja
sbb
jp
xchg
push
jl
and
pop
jbe
ja
jp
rcl
sarl
ja
rcl
add
jle
jg
jmp
or
rol
jl
mov
mov
call
jp
les
push
add
add
mov
xor
call
jmp
push
add
add
mov
ror
call
ljmp
cld
xor
jmp
jge
add
add
dec
mov
je
jne
ljmp
int
or
add
jp
jb
inc
add
je
jne
jnp
add
add
stc
adcl
sub
jne
jmp
js
sbb
call
ja
add
push
ret
jmp
sbb
mov
call
je
les
add
xchg
jg
or
shr
sub
call
ljmp
add
js
rcr
mov
rcr
sub
call
jno
les
and
orl
mov
push
call
ja
les
xchg
xor
push
call
jb
les
jbe
dec
or
ror
call
jb
les
addb
add
add
xchg
add
jmp
jp
pop
add
add
test
add
add
pop
call
jge
les
xchg
xor
call
jno
add
push
ret
jmp
clc
and
add
push
call
jmp
ror
mov
sub
jne
push
call
js
les
sbb
jo
dec
push
call
jp
les
test
jo
shl
mov
jle
jg
jmp
add
cld
jnp
cld
mov
mov
add
call
js
les
push
jl
sub
pop
push
call
ljmp
add
add
add
add
jno
inc
andl
add
call
jge
les
mov
add
add
lds
jmp
jbe
add
add
clc
stc
adcl
add
call
jg
add
push
ret
stc
test
mov
call
jmp
add
push
ret
jne
or
stc
xor
push
call
jge
les
test
push
popl
add
jmp
jge
repz
jne
push
call
jb
les
jae
xchg
dec
jl
jge
lcall
adc
shrb
add
ljmp
add
add
clc
push
dec
pop
je
jne
js
out
fsubrp
hlt
push
ror
pop
jbe
ja
lcall
add
add
add
jne
add
push
ret
cld
xor
call
jle
add
push
ret
sub
dec
rol
jmp
call
add
addr16
rcl
sub
call
jge
add
push
ret
sbb
mov
call
jmp
ret
test
cld
add
call
jp
les
add
call
je
add
push
ret
jl
mov
sbbl
add
jne
call
jb
add
push
ret
jmp
xchg
jmp
add
icebp
inc
incb
incl
add
add
jo
jb
and
jb
jb
dec
insl
jo
jb
and
and
imul
add
add
out
mov
pop
ret
jp
pushaw
call
jg
les
rcl
jp
jnp
jne
jmp
js
fld1
add
add
jmp
les
add
add
add
shl
call
ja
les
call
js
add
push
ret
adc
call
jmp
sub
add
add
jnp
les
dec
jmp
jb
add
add
add
les
jmp
jae
mov
call
jb
les
or
add
add
lds
inc
sbb
inc
sbb
jns
jge
sub
and
add
xchg
pop
call
jl
add
push
ret
mov
mov
mov
clc
xor
jmp
je
lret
js
dec
mov
xchg
sub
push
call
jne
les
jae
stc
je
test
mov
call
lcall
add
mov
sub
xor
push
call
ljmp
add
add
decl
in
add
adc
cs
jb
jae
jno
add
add
call
call
xchg
sub
sbbl
mov
jmp
jg
sbb
sbbl
add
call
lcall
rolb
add
add
add
jg
add
push
ret
adc
add
dec
jne
jmp
ljmp
jp
ret
pop
cmpsl
stos
sub
jecxz
pop
scas
and
xor
fadds
out
adc
push
or
and
adc
lahf
clc
test
out
pop
test
adc
sarb
and
mov
orb
pop
push
push
fwait
dec
dec
addr16
out
sti
dec
cmp
add
sub
outsl
fs
mov
mov
gs
or
cmc
mov
push
xor
push
jno
inc
fdivl
mov
add
xor
in
push
push
das
xchg
fistpll
xchg
fcompl
jno
dec
mov
es
jmp
mov
pusha
call
pop
sub
mov
sub
mov
shr
sub
cmp
jl
mov
mov
add
rol
xor
sub
mov
dec
jmp
popa
popa
ret
or
add
sbb
add
and
add
sbb
add
add
loop
add
adc
and
add
add
jmp
add
add
mov
imul
imul
test
mov
jecxz
and
loopne
add
and
add
imul
shll
sarl
cmp
movsl
adc
movsb
imul
hlt
ret
jecxz
imul
imul
adc
or
mov
imul
and
and
add
jo
jb
and
inc
push
dec
pop
push
inc
inc
dec
push
pop
pop
inc
inc
pusha
call
jg
les
rcl
jp
jnp
jne
jmp
js
fld1
add
add
jmp
les
add
add
add
shl
call
ja
les
call
js
add
push
ret
adc
call
jmp
sub
add
add
jnp
les
dec
jmp
jb
add
add
add
les
jmp
jae
mov
call
jb
les
or
add
add
lds
inc
sbb
inc
sbb
jns
jge
sub
and
add
xchg
pop
call
jl
add
push
ret
mov
mov
mov
clc
xor
jmp
je
lret
js
dec
mov
xchg
sub
push
call
jne
les
jae
stc
je
test
mov
call
lcall
add
mov
sub
xor
push
call
ljmp
add
add
decl
in
add
adc
cs
jb
jae
jno
add
add
call
call
xchg
sub
sbbl
mov
jmp
jg
sbb
sbbl
add
call
lcall
rolb
add
add
add
jg
add
push
ret
adc
add
dec
jne
jmp
ljmp
fisubs
stos
xchg
inc
fildll
movsl
das
and
enter
fcomi
push
lea
test
sbb
push
pop
inc
inc
inc
ficoml
xchg
cs
dec
push
jg
xchg
shll
cmp
call
adc
mov
in
inc
es
pop
movsb
popf
pop
mov
mov
addr16
cmpsl
iret
in
inc
jmp
mov
pusha
call
pop
sub
mov
sub
mov
shr
sub
cmp
jl
mov
mov
add
rol
xor
sub
mov
dec
jmp
popa
popa
ret
inc
gs
popa
arpl
outsb
gs
inc
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
jns
fs
je
jo
jb
insb
gs
fs
insb
add
jp
pop
fs
jo
add
add
adc
add
push
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
outsl
bound
inc
insb
insb
outsl
arpl
inc
insb
outsl
bound
inc
jb
add
je
jne
jb
outsb
je
jb
arpl
jae
add
gs
je
push
outsl
outsl
insb
push
xor
popa
jo
push
jb
arpl
jae
xor
jb
je
push
jb
arpl
jae
xor
js
add
outsl
jae
dec
popa
outsb
fs
add
gs
je
inc
imul
insl
imul
outsl
arpl
jae
dec
jae
bound
addr16
jb
jae
outsb
je
dec
jo
outsb
push
jb
arpl
jae
push
gs
fs
imul
gs
imul
dec
imul
inc
gs
gs
jo
popa
je
inc
add
push
gs
js
gs
imul
gs
inc
gs
push
inc
outsl
outsb
je
js
add
je
push
inc
outsl
outsb
je
js
add
je
jne
jb
outsb
je
push
add
inc
push
xor
cs
dec
dec
add
jne
push
imul
inc
gs
imul
js
inc
add
je
insb
popa
jae
dec
popa
insl
gs
add
jae
dec
gs
popa
addr16
add
push
push
dec
push
inc
push
dec
pop
inc
inc
add
push
gs
imul
gs
add
add
ja
jo
imul
add
add
imul
je
gs
add
add
inc
gs
outsl
fs
gs
imul
add
add
add
je
imul
mov
mov
add
mov
incl
sub
je
nop
nop
nop
nop
incl
push
xor
push
mov
sub
stos
stos
stos
stos
pop
pop
dec
jne
nop
nop
nop
nop
sub
ret
pusha
call
jg
les
rcl
jp
jnp
jne
jmp
js
fld1
add
add
jmp
les
add
add
add
shl
call
ja
les
call
js
add
push
ret
adc
call
jmp
sub
add
add
jnp
les
dec
jmp
jb
add
add
add
les
jmp
jae
mov
call
jb
les
or
add
add
lds
inc
sbb
inc
sbb
jns
jge
sub
and
add
xchg
pop
call
jl
add
push
ret
mov
mov
mov
clc
xor
jmp
je
lret
js
dec
mov
xchg
sub
push
call
jne
les
jae
stc
je
test
mov
call
lcall
add
mov
sub
xor
push
call
ljmp
add
add
decl
in
add
adc
cs
jb
jae
jno
add
add
call
call
xchg
sub
sbbl
mov
jmp
jg
sbb
sbbl
add
call
lcall
rolb
add
add
add
jg
add
push
ret
adc
add
dec
jne
jmp
ljmp
fidivs
mov
jb
test
out
lods
scas
sti
sbb
jae
jg
mov
mov
lret
and
bound
fwait
pop
xor
adcb
mov
jle
dec
icebp
push
inc
imul
push
cmp
xchg
insl
cltd
test
add
jb
sub
xor
adc
mull
and
shlb
push
les
popf
xchg
xor
mov
sub
out
mov
mov
aaa
into
jecxz
lahf
les
popa
add
adc
out
xchg
sti
imul
out
jg
adc
or
lods
xchg
or
cmp
aam
mov
and
xchg
test
xor
stos
fiadds
fldl2e
jecxz
fsubl
and
les
loopne
fsubr
jbe
arpl
and
nop
nop
nop
pusha
call
pop
sub
mov
sub
mov
shr
sub
cmp
jl
mov
mov
add
rol
xor
sub
mov
dec
jmp
popa
popa
cmpl
je
nop
nop
nop
nop
jmp
ret
pusha
sar
rcl
dec
mov
call
jno
add
push
ret
xchg
push
call
jb
les
stc
call
jae
les
add
add
jbe
ja
jp
add
add
add
add
push
ret
jb
shr
push
call
jmp
les
je
inc
jle
jg
jmp
ret
call
jns
les
rcr
jle
jg
je
sar
jmp
jg
sar
call
pop
mov
cmp
jl
add
mov
call
call
pop
add
add
ror
aad
push
popl
push
mov
pop
push
call
jnp
les
jmp
xchg
mov
xchg
sub
jmp
jge
add
cmp
xor
mov
test
xor
jmp
jnp
push
sub
adc
jae
xor
xor
jl
jge
je
adc
add
jnp
xchg
js
sub
rol
call
jbe
add
push
ret
jl
inc
add
push
call
jbe
les
jmp
mov
mov
call
jl
les
loopne
xor
call
jae
add
push
ret
rcr
adc
add
push
call
jg
les
mov
xor
sub
jne
push
call
jno
les
inc
xor
pop
ss
cmp
popa
xchg
lret
xchg
leave
mov
scas
cmp
mov
pop
jo
mov
inc
pcmpeqb
xchg
hlt
aaa
jecxz
mov
xchg
pushf
fnstenv
inc
mov
push
mov
mov
int
mov
inc
add
xchg
add
add
pop
sub
mov
sub
mov
shr
sub
cmp
jl
mov
mov
sub
ror
xor
xor
mov
dec
jmp
popa
popa
ret
pusha
sar
rcl
dec
mov
call
jno
add
push
ret
xchg
push
call
jb
les
stc
call
jae
les
add
add
jbe
ja
jp
add
add
add
add
push
ret
jb
shr
push
call
jmp
les
je
inc
jle
jg
jmp
ret
call
jns
les
rcr
jle
jg
je
sar
jmp
jg
sar
call
pop
mov
cmp
jl
add
mov
call
call
pop
add
add
ror
aad
push
popl
push
mov
pop
push
call
jnp
les
jmp
xchg
mov
xchg
sub
jmp
jge
add
cmp
xor
mov
test
xor
jmp
jnp
push
sub
adc
jae
xor
xor
jl
jge
je
adc
add
jnp
xchg
js
sub
rol
call
jbe
add
push
ret
jl
inc
add
push
call
jbe
les
jmp
mov
mov
call
jl
les
loopne
xor
call
jae
add
push
ret
rcr
adc
add
push
call
jg
les
mov
xor
sub
jne
push
call
jno
les
inc
xor
mov
pop
mov
xchg
cmc
mov
jae
adc
faddl
ret
inc
mov
xchg
mov
shlb
or
imul
push
xor
push
and
add
dec
lea
push
mov
stos
mov
xchg
rep
pusha
call
pop
sub
mov
sub
mov
shr
sub
cmp
jl
mov
mov
sub
ror
xor
xor
mov
dec
jmp
popa
popa
ret
pusha
sar
rcl
dec
mov
call
jno
add
push
ret
xchg
push
call
jb
les
stc
call
jae
les
add
add
jbe
ja
jp
add
add
add
add
push
ret
jb
shr
push
call
jmp
les
je
inc
jle
jg
jmp
ret
call
jns
les
rcr
jle
jg
je
sar
jmp
jg
sar
call
pop
mov
cmp
jl
add
mov
call
call
pop
add
add
ror
aad
push
popl
push
mov
pop
push
call
jnp
les
jmp
xchg
mov
xchg
sub
jmp
jge
add
cmp
xor
mov
test
xor
jmp
jnp
push
sub
adc
jae
xor
xor
jl
jge
je
adc
add
jnp
xchg
js
sub
rol
call
jbe
add
push
ret
jl
inc
add
push
call
jbe
les
jmp
mov
mov
call
jl
les
loopne
xor
call
jae
add
push
ret
rcr
adc
add
push
call
jg
les
mov
xor
sub
jne
push
call
jno
les
inc
xor
arpl
scas
dec
xor
loop
repz
push
xchg
jns
xchg
addb
clc
fsubrs
sub
ret
pop
dec
test
addl
mov
push
push
jnp
rcrb
shll
daa
sti
incb
add
xor
add
call
pop
sub
mov
sub
mov
shr
sub
cmp
jl
mov
mov
sub
ror
xor
xor
mov
dec
jmp
popa
popa
ret
popa
arpl
popa
jo
int3
jmp
int3
jmp
int3
jmp
int3
jmp
int3
jmp
int3
jmp
int3
jmp
int3
jmp
int3
jmp
int3
jmp
int3
jmp
int3
jmp
int3
jmp
int3
jmp
int3
jmp
int3
jmp
int3
jmp
int3
jmp
int3
jmp
int3
jmp
int3
jmp
int3
jmp
int3
jmp
int3
jmp
int3
jmp
int3
jmp
int3
jmp
int3
jmp
push
push
mov
push
call
pop
div
xchg
pop
pop
ret
push
rdtsc
rcl
add
adc
xor
xor
add
rcl
pop
ret
push
gs
fs
sar
rcl
dec
mov
call
jno
add
push
ret
xchg
push
call
jb
les
stc
call
jae
les
add
add
jbe
ja
jp
add
add
add
add
push
ret
jb
shr
push
call
jmp
les
je
inc
jle
jg
jmp
ret
call
jns
les
rcr
jle
jg
je
sar
jmp
jg
sar
call
pop
mov
cmp
jl
add
mov
call
call
pop
add
add
ror
aad
push
popl
push
mov
pop
push
call
jnp
les
jmp
xchg
mov
xchg
sub
jmp
jge
add
cmp
xor
mov
test
xor
jmp
jnp
push
sub
adc
jae
xor
xor
jl
jge
je
adc
add
jnp
xchg
js
sub
rol
call
jbe
add
push
ret
jl
inc
add
push
call
jbe
les
jmp
mov
mov
call
jl
les
loopne
xor
call
jae
add
push
ret
rcr
adc
add
push
call
jg
les
mov
xor
sub
jne
push
call
jno
les
inc
xor
fsubrp
dec
js
push
lods
mov
mov
insl
cmc
push
lock
gs
add
vmread
cmpsb
jge
pusha
insl
int3
pop
push
inc
cmpsl
insb
push
ret
jl
stc
pop
dec
xchg
cmpsl
imul
xor
sub
mov
frstor
lcall
inc
loope
adc
adc
push
imul
fadd
cmp
cmp
push
imul
push
jne
dec
sub
mov
pop
mov
aaa
lea
rcr
cltd
cltd
push
orps
sti
inc
jbe
hlt
fsub
jbe
es
into
ret
jb
pop
lea
fldl2e
inc
loop
pusha
call
pop
sub
mov
sub
mov
shr
sub
cmp
jl
mov
mov
sub
ror
xor
xor
mov
dec
jmp
popa
popa
ret
call
pop
sub
ret
push
push
lods
or
je
nop
nop
nop
nop
cmp
jb
cmp
ja
sub
mov
jmp
pop
pop
ret
push
push
push
add
push
push
push
mov
movzbl
sub
cmp
je
nop
nop
nop
nop
pop
call
jmp
nop
nop
nop
mov
call
lea
add
stos
pop
pop
mov
pop
pop
ret
enter
push
mov
add
pusha
push
call
mov
pop
push
push
mov
add
push
pushl
push
mov
movzbl
sub
cmp
je
nop
nop
nop
nop
pop
call
jmp
nop
nop
nop
mov
call
lea
add
stos
pop
pop
or
je
push
push
mov
add
push
pushl
push
mov
movzbl
sub
cmp
je
nop
nop
nop
nop
pop
call
jmp
nop
nop
nop
mov
call
lea
add
stos
pop
pop
or
je
nop
nop
nop
nop
mov
add
mov
mov
add
mov
or
je
nop
nop
nop
nop
or
je
nop
nop
nop
nop
inc
jmp
inc
mov
call
cmp
je
nop
nop
nop
nop
jmp
call
lea
stos
popa
mov
leave
ret
call
push
mov
mov
or
je
nop
nop
nop
nop
mov
or
je
nop
nop
nop
nop
cmp
jne
nop
nop
nop
nop
mov
or
je
nop
nop
nop
nop
mov
or
je
nop
nop
nop
nop
cmp
jne
nop
nop
nop
nop
inc
inc
jmp
mov
mov
pop
ret
add
inc
push
push
pop
add
push
cmp
dec
dec
dec
add
dec
inc
and
dec
dec
push
dec
push
add
inc
dec
dec
dec
inc
pop
add
dec
inc
dec
push
and
inc
inc
push
dec
push
inc
add
push
inc
push
dec
inc
push
add
push
push
push
pop
add
push
inc
dec
inc
inc
inc
and
inc
dec
push
push
push
pop
and
inc
inc
push
add
inc
push
dec
inc
push
add
dec
push
push
pop
add
dec
dec
push
pop
and
push
dec
push
add
dec
inc
inc
push
dec
push
xor
add
dec
dec
push
pop
and
dec
push
dec
push
add
dec
inc
push
dec
inc
inc
add
push
and
dec
push
push
inc
inc
push
dec
push
add
dec
dec
push
pop
and
push
inc
push
add
dec
dec
push
pop
dec
dec
dec
dec
push
dec
push
add
dec
inc
inc
inc
and
inc
push
dec
inc
inc
and
inc
inc
push
add
push
dec
inc
push
and
xor
dec
add
dec
inc
and
inc
inc
dec
dec
dec
inc
and
dec
push
push
cmp
insb
jns
bound
push
push
push
xor
xor
add
pusha
sar
rcl
dec
mov
call
jno
add
push
ret
xchg
push
call
jb
les
stc
call
jae
les
add
add
jbe
ja
jp
add
add
add
add
push
ret
jb
shr
push
call
jmp
les
je
inc
jle
jg
jmp
ret
call
jns
les
rcr
jle
jg
je
sar
jmp
jg
sar
call
pop
mov
cmp
jl
add
mov
call
call
pop
add
add
ror
aad
push
popl
push
mov
pop
push
call
jnp
les
jmp
xchg
mov
xchg
sub
jmp
jge
add
cmp
xor
mov
test
xor
jmp
jnp
push
sub
adc
jae
xor
xor
jl
jge
je
adc
add
jnp
xchg
js
sub
rol
call
jbe
add
push
ret
jl
inc
add
push
call
jbe
les
jmp
mov
mov
call
jl
les
loopne
xor
call
jae
add
push
ret
rcr
adc
add
push
call
jg
les
mov
xor
sub
jne
push
call
jno
les
inc
xor
icebp
test
mulb
mov
push
add
or
mov
scas
xchg
push
cld
clc
inc
sbb
cmp
into
repz
imul
jns
mov
js
and
dec
xchg
inc
mov
lds
insl
push
fisttps
inc
sti
mov
fdivr
stc
push
out
imul
fildll
fmuls
push
dec
fdivl
mov
insb
vminss
dec
mov
xlat
int
xor
push
cmp
cmpsl
inc
arpl
jb
jae
push
lds
cmc
gs
repz
or
dec
aam
cmp
scas
xchg
aad
xchg
movsl
sti
jg
cmc
iret
out
andl
aaa
jb
inc
cli
inc
arpl
pop
cli
cltd
imul
jg
rcr
call
mov
outsb
dec
ds
pop
dec
xor
or
push
push
loopne
stos
add
lahf
lods
mov
push
out
dec
jne
jne
adc
mov
xor
lahf
and
fs
iret
xor
jno
sbb
bsf
fsubl
movsb
ja
nop
add
dec
dec
in
enter
mov
stos
mov
jecxz
filds
test
shrl
movsb
sub
mov
out
loop
ret
scas
bt
push
ret
pusha
mov
sahf
mov
stos
ficoml
lods
rclb
cwtl
dec
rclb
mov
std
mov
daa
inc
jo
pop
fnsave
adcb
pop
jmp
xchg
cmp
sub
mov
and
mov
adcl
xchg
jp
sbb
pop
lret
scas
mov
cwtl
xlat
jne
pop
cmpsl
jnp
and
xor
sarb
aaa
loope
dec
rorl
mov
jecxz
lahf
or
movsb
jp
inc
xchg
xchg
pop
xchg
xchg
fsubrl
lahf
mov
mov
testl
jle
lods
aad
pop
ret
push
cltd
push
xchg
les
xchg
mov
shrl
push
sub
cmp
outsb
inc
jo
ret
mov
stc
push
ljmp
iret
mov
xchg
fnstcw
daa
scas
lods
add
jb
cwtl
add
mov
xchg
mov
fnstenv
fisubl
jl
or
add
jno
add
pop
leave
jg
jae
js
int
dec
paddsw
push
push
cmp
fistps
mov
mulb
xchg
hlt
adc
in
inc
mov
test
cmp
mov
mov
jge
push
add
jmp
std
push
cmpsl
insb
outsl
pop
aad
mov
mov
test
pop
stos
scas
rcrb
mov
call
and
inc
sub
out
dec
push
xor
mov
jg
dec
out
jnp
and
xor
btsl
or
mov
das
jecxz
shr
xchg
lret
out
inc
je
sbb
aam
sub
push
mov
pop
daa
or
adc
or
mov
jbe
iret
test
pop
pop
xchg
testl
or
insl
mov
cmp
insb
ja
fs
or
adc
jge
jmp
das
mov
inc
in
lds
nop
std
movsl
insb
repz
push
repnz
daa
cmp
adc
or
into
loope
push
mov
add
stos
pop
pusha
call
pop
sub
mov
sub
mov
shr
sub
cmp
jl
mov
mov
sub
ror
xor
xor
mov
dec
jmp
popa
popa
ret
pusha
xchg
call
jbe
les
add
fisttpl
jmp
add
add
jb
add
push
ret
xchg
jmp
jns
call
jge
les
sub
add
add
jno
les
xchg
jl
jge
jb
add
shr
add
add
jp
les
add
jmp
add
call
jb
les
shr
call
jl
les
add
lds
inc
and
inc
and
add
add
lcall
add
add
push
jo
cld
pop
push
call
jmp
les
ja
rol
mov
call
jno
add
push
ret
jmp
and
xor
mov
call
jnp
add
push
ret
shr
dec
mov
call
jl
add
push
ret
jp
and
jl
mov
sub
call
jno
add
push
ret
or
ror
js
jns
jno
add
ror
add
add
add
add
call
jns
les
or
add
jnp
dec
rcl
mov
call
jnp
les
or
add
xchg
jb
shl
add
call
js
add
push
ret
and
sub
call
call
ret
jmp
jne
test
sub
jne
push
call
jnp
les
shr
int3
cmpsl
adc
jp
lret
dec
fldl
loopne
js
and
mov
or
imul
cs
and
mov
out
pop
jo
mov
xchg
add
int
or
lods
xchg
sahf
mov
push
int3
add
popa
sbb
xlat
imul
dec
push
clc
outsl
sub
mov
inc
mov
sbb
jno
xchg
sub
mov
push
nop
jmp
xchg
mov
xchg
sahf
adc
stos
inc
jge
pop
jle
dec
in
iret
xchg
xor
xor
in
in
jae
out
jnp
jo
call
and
pop
cmp
xchg
add
inc
add
add
add
pop
sub
mov
sub
mov
shr
sub
cmp
jl
mov
mov
sub
rol
add
sub
mov
dec
jmp
popa
popa
ret
xor
lea
push
pushl
mov
call
sub
popl
pop
ret
add
add
add
fsubrp
add
add
jbe
les
add
fisttpl
jmp
add
add
jb
add
push
ret
xchg
jmp
jns
call
jge
les
sub
add
add
jno
les
xchg
jl
jge
jb
add
shr
add
add
jp
les
add
jmp
add
call
jb
les
shr
call
jl
les
add
lds
inc
and
inc
and
add
add
lcall
add
add
push
jo
cld
pop
push
call
jmp
les
ja
rol
mov
call
jno
add
push
ret
jmp
and
xor
mov
call
jnp
add
push
ret
shr
dec
mov
call
jl
add
push
ret
jp
and
jl
mov
sub
call
jno
add
push
ret
or
ror
js
jns
jno
add
ror
add
add
add
add
call
jns
les
or
add
jnp
dec
rcl
mov
call
jnp
les
or
add
xchg
jb
shl
add
call
js
add
push
ret
and
sub
call
call
ret
jmp
jne
test
sub
jne
push
call
jnp
les
shr
pop
into
lret
mov
lcall
hlt
bound
sbb
iret
jmp
jae
jmp
lcall
and
loopne
cmp
insl
cmp
jne
xchg
inc
push
ret
add
adc
movsb
negb
int3
popf
inc
xor
jnp
lret
fists
mov
loope
stc
repnz
imul
adc
outsb
mov
dec
xor
loopne
push
lret
divl
outsb
std
das
leave
mov
in
pop
ss
fadd
test
in
xor
std
add
clc
mov
fidivrl
dec
shll
fists
or
adc
bound
or
jae
xchg
ds
dec
lret
and
adc
cmpsl
xor
xor
aam
jecxz
jb
repnz
adc
fcomps
pop
adc
pushf
sub
mov
mov
xor
mov
or
test
rclb
xlat
subb
xlat
sbb
jae
mov
xchg
ljmp
pop
and
sub
pop
pop
call
xor
inc
pusha
fistps
lock
mov
pop
fadd
sub
imul
into
xor
or
xchg
stos
inc
or
xchg
jmp
call
mov
jg
inc
aaa
xor
aam
mov
mov
push
ljmp
dec
sub
fdivrp
xchg
inc
push
inc
add
pusha
call
pop
sub
mov
sub
mov
shr
sub
cmp
jl
mov
mov
sub
rol
add
sub
mov
dec
jmp
popa
popa
ret
add
add
add
fsubrp
add
add
jbe
les
add
fisttpl
jmp
add
add
jb
add
push
ret
xchg
jmp
jns
call
jge
les
sub
add
add
jno
les
xchg
jl
jge
jb
add
shr
add
add
jp
les
add
jmp
add
call
jb
les
shr
call
jl
les
add
lds
inc
and
inc
and
add
add
lcall
add
add
push
jo
cld
pop
push
call
jmp
les
ja
rol
mov
call
jno
add
push
ret
jmp
and
xor
mov
call
jnp
add
push
ret
shr
dec
mov
call
jl
add
push
ret
jp
and
jl
mov
sub
call
jno
add
push
ret
or
ror
js
jns
jno
add
ror
add
add
add
add
call
jns
les
or
add
jnp
dec
rcl
mov
call
jnp
les
or
add
xchg
jb
shl
add
call
js
add
push
ret
and
sub
call
call
ret
jmp
jne
test
sub
jne
push
call
jnp
les
shr
push
xchg
nop
pop
clc
sbb
cmp
mov
outsb
push
mov
in
or
lret
fwait
jmp
lahf
rcll
ss
lahf
dec
jbe
inc
repz
cwtl
subl
adc
movb
pusha
call
pop
sub
mov
sub
mov
shr
sub
cmp
jl
mov
mov
sub
rol
add
sub
mov
dec
jmp
popa
popa
ret
add
add
add
pusha
call
call
or
jne
movb
mov
add
call
jmp
mov
test
jne
push
push
call
mov
push
push
push
push
call
outsb
je
insb
insb
cs
insb
add
add
add
imul
add
add
add
xchg
pop
loop
add
sbb
add
dec
je
jne
jb
push
jns
je
insl
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
xchg
push
loop
add
rorb
add
xor
mov
mov
cmp
je
nop
nop
nop
nop
loop
add
jmp
mov
call
lea
add
stos
pushl
call
jmp
nop
nop
nop
push
sidtl
pop
add
mov
mov
lea
mov
ror
mov
push
push
int3
pop
pop
mov
ror
mov
ret
popa
ret
add
add
add
fsubrp
add
add
jbe
les
add
fisttpl
jmp
add
add
jb
add
push
ret
xchg
jmp
jns
call
jge
les
sub
add
add
jno
les
xchg
jl
jge
jb
add
shr
add
add
jp
les
add
jmp
add
call
jb
les
shr
call
jl
les
add
lds
inc
and
inc
and
add
add
lcall
add
add
push
jo
cld
pop
push
call
jmp
les
ja
rol
mov
call
jno
add
push
ret
jmp
and
xor
mov
call
jnp
add
push
ret
shr
dec
mov
call
jl
add
push
ret
jp
and
jl
mov
sub
call
jno
add
push
ret
or
ror
js
jns
jno
add
ror
add
add
add
add
call
jns
les
or
add
jnp
dec
rcl
mov
call
jnp
les
or
add
xchg
jb
shl
add
call
js
add
push
ret
and
sub
call
call
ret
jmp
jne
test
sub
jne
push
call
jnp
les
shr
lods
iret
cmpsl
adc
xlat
orl
inc
add
stc
insb
shrl
enter
cli
clc
mov
push
pop
pop
in
pop
adc
mov
dec
out
enter
cmpsl
test
stos
ret
pusha
call
pop
sub
mov
sub
mov
shr
sub
cmp
jl
mov
mov
sub
rol
add
sub
mov
dec
jmp
popa
popa
ret
add
add
add
jp
mov
test
jmp
jne
and
add
add
add
or
push
call
jno
les
jl
xchg
call
jg
add
push
ret
rcr
call
jns
add
push
ret
jno
inc
call
call
add
jb
jae
jb
and
add
add
add
push
ret
cld
jmp
je
call
jbe
add
push
ret
cld
call
je
les
adc
mov
call
pop
mov
cmp
jl
add
mov
call
jbe
add
push
ret
jmp
xor
push
dec
pop
call
ljmp
add
sbb
mov
mov
call
jmp
add
push
ret
jmp
dec
test
mov
dec
add
jmp
jg
test
add
add
sub
add
add
jns
add
push
ret
jmp
xchg
xor
add
jmp
jmp
ror
push
call
ljmp
add
add
fisubrs
add
add
call
jno
les
or
add
shl
je
inc
mov
jmp
jp
or
add
jge
and
add
jmp
jb
add
add
test
dec
add
call
ja
les
add
add
jne
call
jbe
add
push
ret
test
jnp
shr
int3
mov
int3
jns
sysenter
cmp
jo
arpl
aaa
push
in
popf
jp
jbe
mov
cld
add
xor
ja
xor
aam
pop
lods
jae
es
sbb
pop
ret
fstpl
rcrb
push
mov
insb
push
pop
add
std
or
popl
pop
pusha
call
pop
sub
mov
sub
mov
shr
sub
cmp
jl
mov
mov
sub
rol
sub
sub
mov
dec
jmp
popa
popa
ret
add
add
add
jp
mov
test
jmp
jne
and
add
add
add
or
push
call
jno
les
jl
xchg
call
jg
add
push
ret
rcr
call
jns
add
push
ret
jno
inc
call
call
add
jb
jae
jb
and
add
add
add
push
ret
cld
jmp
je
call
jbe
add
push
ret
cld
call
je
les
adc
mov
call
pop
mov
cmp
jl
add
mov
call
jbe
add
push
ret
jmp
xor
push
dec
pop
call
ljmp
add
sbb
mov
mov
call
jmp
add
push
ret
jmp
dec
test
mov
dec
add
jmp
jg
test
add
add
sub
add
add
jns
add
push
ret
jmp
xchg
xor
add
jmp
jmp
ror
push
call
ljmp
add
add
fisubrs
add
add
call
jno
les
or
add
shl
je
inc
mov
jmp
jp
or
add
jge
and
add
jmp
jb
add
add
test
dec
add
call
ja
les
add
add
jne
call
jbe
add
push
ret
test
jnp
shr
jns
pop
fimull
aad
sbb
in
xchg
mov
lea
fnstcw
add
lds
push
mov
cmp
cs
outsb
pop
mov
sbb
mov
adc
into
pop
mov
dec
out
inc
mov
fistpll
dec
in
inc
popl
add
add
pusha
call
pop
sub
mov
sub
mov
shr
sub
cmp
jl
mov
mov
sub
rol
sub
sub
mov
dec
jmp
popa
popa
ret
add
add
add
jp
mov
test
jmp
jne
and
add
add
add
or
push
call
jno
les
jl
xchg
call
jg
add
push
ret
rcr
call
jns
add
push
ret
jno
inc
call
call
add
jb
jae
jb
and
add
add
add
push
ret
cld
jmp
je
call
jbe
add
push
ret
cld
call
je
les
adc
mov
call
pop
mov
cmp
jl
add
mov
call
jbe
add
push
ret
jmp
xor
push
dec
pop
call
ljmp
add
sbb
mov
mov
call
jmp
add
push
ret
jmp
dec
test
mov
dec
add
jmp
jg
test
add
add
sub
add
add
jns
add
push
ret
jmp
xchg
xor
add
jmp
jmp
ror
push
call
ljmp
add
add
fisubrs
add
add
call
jno
les
or
add
shl
je
inc
mov
jmp
jp
or
add
jge
and
add
jmp
jb
add
add
test
dec
add
call
ja
les
add
add
jne
call
jbe
add
push
ret
test
jnp
shr
xchg
in
mov
and
jl
fldcw
mov
cmp
adc
testl
stos
repnz
cli
orl
xchg
mov
adcb
xor
das
clc
xlat
cmp
rcr
add
mov
lock
mov
add
rep
pusha
call
pop
sub
mov
sub
mov
shr
sub
cmp
jl
mov
mov
sub
rol
sub
sub
mov
dec
jmp
popa
popa
ret
add
add
add
jp
mov
test
jmp
jne
and
add
add
add
or
push
call
jno
les
jl
xchg
call
jg
add
push
ret
rcr
call
jns
add
push
ret
jno
inc
call
call
add
jb
jae
jb
and
add
add
add
push
ret
cld
jmp
je
call
jbe
add
push
ret
cld
call
je
les
adc
mov
call
pop
mov
cmp
jl
add
mov
call
jbe
add
push
ret
jmp
xor
push
dec
pop
call
ljmp
add
sbb
mov
mov
call
jmp
add
push
ret
jmp
dec
test
mov
dec
add
jmp
jg
test
add
add
sub
add
add
jns
add
push
ret
jmp
xchg
xor
add
jmp
jmp
ror
push
call
ljmp
add
add
fisubrs
add
add
call
jno
les
or
add
shl
je
inc
mov
jmp
jp
or
add
jge
and
add
jmp
jb
add
add
test
dec
add
call
ja
les
add
add
jne
call
jbe
add
push
ret
test
jnp
shr
in
test
ljmp
mov
fld
fcoml
push
mov
dec
push
adcl
push
mull
subb
add
inc
insl
push
push
jp
sub
mov
mov
pusha
call
pop
sub
mov
sub
mov
shr
sub
cmp
jl
mov
mov
sub
rol
sub
sub
mov
dec
jmp
popa
popa
ret
add
add
add
jp
mov
test
jmp
jne
and
add
add
add
or
push
call
jno
les
jl
xchg
call
jg
add
push
ret
rcr
call
jns
add
push
ret
jno
inc
call
call
add
jb
jae
jb
and
add
add
add
push
ret
cld
jmp
je
call
jbe
add
push
ret
cld
call
je
les
adc
mov
call
pop
mov
cmp
jl
add
mov
call
jbe
add
push
ret
jmp
xor
push
dec
pop
call
ljmp
add
sbb
mov
mov
call
jmp
add
push
ret
jmp
dec
test
mov
dec
add
jmp
jg
test
add
add
sub
add
add
jns
add
push
ret
jmp
xchg
xor
add
jmp
jmp
ror
push
call
ljmp
add
add
fisubrs
add
add
call
jno
les
or
add
shl
je
inc
mov
jmp
jp
or
add
jge
and
add
jmp
jb
add
add
test
dec
add
call
ja
les
add
add
jne
call
jbe
add
push
ret
test
jnp
shr
mov
insb
aad
fadds
cwtl
pop
jo
push
sti
mov
in
mov
add
inc
insb
xor
pop
mov
push
inc
adc
dec
pop
jae
iret
mov
push
pop
sbb
mov
pop
out
pop
sub
cli
pop
mov
jb
xor
mov
popf
pop
aas
mov
and
adc
imul
stos
pop
pusha
call
pop
sub
mov
sub
mov
shr
sub
cmp
jl
mov
mov
sub
rol
sub
sub
mov
dec
jmp
popa
popa
ret
int
aas
add
add
mov
call
ret
add
add
pusha
inc
xchg
jmp
jne
ret
ret
call
jnp
les
mov
push
call
jns
les
clc
call
jge
les
sarl
jg
jge
rclb
int3
cmp
add
addl
ret
jno
test
push
call
jno
les
jge
dec
js
jns
jae
jp
jnp
jne
push
add
call
jnp
add
push
ret
ror
push
call
jne
les
js
test
call
jl
add
push
ret
ja
and
call
pop
mov
cmp
jl
add
mov
jp
jnp
jne
add
add
clc
and
mov
call
call
ret
shl
xorl
push
rol
pop
push
call
jno
les
inc
mov
push
mov
pop
push
call
lcall
add
add
repnz
add
add
or
xchg
xor
jmp
js
addl
add
xchg
jns
dec
ror
jmp
js
add
repnz
add
add
jmp
js
cmp
lea
mov
call
jge
les
add
add
inc
inc
sub
call
je
add
push
ret
jmp
shr
add
jmp
jge
roll
mov
jmp
jbe
push
add
add
mov
adc
add
loop
hlt
xchg
mov
add
and
pop
pop
pop
mov
sub
roll
add
jb
mov
lea
jnp
movsl
cmp
in
in
daa
inc
test
in
jb
add
and
fistps
loop
fstpt
stos
mov
pop
xlat
test
xor
sbb
cwtl
mov
xor
hlt
sub
cmp
inc
aas
push
insb
jp
xchg
pop
cli
adc
daa
dec
scas
mov
xchg
pop
movsl
inc
dec
std
jo
lret
clc
mov
hlt
prefetch
das
in
mov
xchg
rorb
sti
lock
popa
js
es
push
out
out
mov
jge
adc
leave
add
mov
pop
pop
test
add
pop
pusha
call
pop
sub
mov
sub
mov
shr
sub
cmp
jl
mov
mov
sub
rol
xor
add
mov
dec
jmp
popa
popa
ret
pusha
inc
xchg
jmp
jne
ret
ret
call
jnp
les
mov
push
call
jns
les
clc
call
jge
les
sarl
jg
jge
rclb
int3
cmp
add
addl
ret
jno
test
push
call
jno
les
jge
dec
js
jns
jae
jp
jnp
jne
push
add
call
jnp
add
push
ret
ror
push
call
jne
les
js
test
call
jl
add
push
ret
ja
and
call
pop
mov
cmp
jl
add
mov
jp
jnp
jne
add
add
clc
and
mov
call
call
ret
shl
xorl
push
rol
pop
push
call
jno
les
inc
mov
push
mov
pop
push
call
lcall
add
add
repnz
add
add
or
xchg
xor
jmp
js
addl
add
xchg
jns
dec
ror
jmp
js
add
repnz
add
add
jmp
js
cmp
lea
mov
call
jge
les
add
add
inc
inc
sub
call
je
add
push
ret
jmp
shr
add
jmp
jge
roll
mov
jmp
jbe
push
add
add
mov
adc
cmc
popl
in
push
cmp
add
rclb
call
or
and
jne
dec
mov
inc
mov
andb
in
ret
addr16
sbb
test
pop
aaa
xchg
dec
push
xor
lods
sti
rcr
js
push
out
pop
das
jae
pop
into
pop
pop
inc
fwait
aam
lods
push
pop
and
int3
mov
inc
imul
push
cmp
jb
and
inc
add
add
add
pop
sub
mov
sub
mov
shr
sub
cmp
jl
mov
mov
sub
rol
xor
add
mov
dec
jmp
popa
popa
call
ret
call
lea
mov
push
push
mov
movzbl
sub
cmp
je
nop
nop
nop
nop
pop
call
jmp
nop
nop
nop
mov
call
lea
add
stos
pop
or
jne
nop
nop
nop
nop
push
push
mov
movzbl
sub
cmp
je
nop
nop
nop
nop
pop
call
jmp
nop
nop
nop
mov
call
lea
add
stos
pop
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
lea
mov
push
push
mov
movzbl
sub
cmp
je
nop
nop
nop
nop
pop
call
jmp
nop
nop
nop
mov
call
lea
add
stos
pop
or
jne
nop
nop
nop
nop
push
push
mov
movzbl
sub
cmp
je
nop
nop
nop
nop
pop
call
jmp
nop
nop
nop
mov
call
lea
add
stos
pop
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
lea
lea
sub
xor
rep
ret
pusha
inc
xchg
jmp
jne
ret
ret
call
jnp
les
mov
push
call
jns
les
clc
call
jge
les
sarl
jg
jge
rclb
int3
cmp
add
addl
ret
jno
test
push
call
jno
les
jge
dec
js
jns
jae
jp
jnp
jne
push
add
call
jnp
add
push
ret
ror
push
call
jne
les
js
test
call
jl
add
push
ret
ja
and
call
pop
mov
cmp
jl
add
mov
jp
jnp
jne
add
add
clc
and
mov
call
call
ret
shl
xorl
push
rol
pop
push
call
jno
les
inc
mov
push
mov
pop
push
call
lcall
add
add
repnz
add
add
or
xchg
xor
jmp
js
addl
add
xchg
jns
dec
ror
jmp
js
add
repnz
add
add
jmp
js
cmp
lea
mov
call
jge
les
add
add
inc
inc
sub
call
je
add
push
ret
jmp
shr
add
jmp
jge
roll
mov
jmp
jbe
push
add
add
mov
adc
fisubs
mov
out
xor
shrl
out
xchg
cmp
pop
enter
jmp
pop
sbb
mov
test
out
std
setno
dec
pop
mov
xor
or
je
mov
pop
cmpsl
jno
or
fildll
jo
daa
mov
nop
std
fidivl
sub
cmp
push
and
jp
arpl
add
cmp
push
roll
push
xor
lods
js
xor
popa
enter
cmp
xor
push
push
and
cs
inc
lock
push
repnz
add
out
mov
inc
addr16
pop
pop
outsb
mov
adc
movsl
hlt
pushf
shl
leave
sbb
out
mov
pop
imul
or
jecxz
inc
out
in
into
cmc
out
cld
jmp
fsts
inc
mov
outsl
and
clc
sbb
ret
loope
pop
mov
mov
pop
dec
push
das
std
aam
mov
xor
adc
pushaw
push
mov
sbb
push
icebp
xor
hlt
xor
leave
dec
adc
in
shll
inc
popf
sub
add
fwait
out
and
sbb
pop
pop
push
pop
cmp
mov
fsubrl
or
dec
jg
cltd
into
lret
faddl
adc
pop
xchg
cmpsl
mov
sub
outsb
lcall
out
cld
inc
mov
and
shl
mov
cmp
jne
idivl
mov
and
xchg
jb
loope
mov
jbe
xchg
arpl
imull
out
dec
ror
sbb
or
je
jns
mov
cltd
sbb
cmp
mov
push
pop
mov
push
cmc
cmpsl
std
cmpsl
in
addr16
inc
push
xor
jmp
pop
cmc
cmpsb
jle
jnp
adc
dec
pop
pop
repz
out
lret
rcl
adc
mulb
dec
sahf
je
addr16
aas
rcrb
dec
call
sti
in
sbb
in
cmp
jg
insl
ret
mov
push
sub
ss
sub
sbb
dec
cltd
fisubrl
push
jbe
shll
dec
shll
sarb
movsb
jnp
icebp
clc
mov
ret
sti
daa
bound
fxch
sub
pusha
call
pop
sub
mov
sub
mov
shr
sub
cmp
jl
mov
mov
sub
rol
xor
add
mov
dec
jmp
popa
popa
ret
add
add
add
xchg
jmp
jne
ret
ret
call
jnp
les
mov
push
call
jns
les
clc
call
jge
les
sarl
jg
jge
rclb
int3
cmp
add
addl
ret
jno
test
push
call
jno
les
jge
dec
js
jns
jae
jp
jnp
jne
push
add
call
jnp
add
push
ret
ror
push
call
jne
les
js
test
call
jl
add
push
ret
ja
and
call
pop
mov
cmp
jl
add
mov
jp
jnp
jne
add
add
clc
and
mov
call
call
ret
shl
xorl
push
rol
pop
push
call
jno
les
inc
mov
push
mov
pop
push
call
lcall
add
add
repnz
add
add
or
xchg
xor
jmp
js
addl
add
xchg
jns
dec
ror
jmp
js
add
repnz
add
add
jmp
js
cmp
lea
mov
call
jge
les
add
add
inc
inc
sub
call
je
add
push
ret
jmp
shr
add
jmp
jge
roll
mov
jmp
jbe
push
add
add
mov
adc
xor
jbe
add
adc
push
int3
mov
fbstp
push
xor
movsl
aas
push
push
dec
inc
frstor
pusha
push
xor
or
ret
gs
ljmp
pop
in
dec
rcr
jbe
mov
movsb
jle
push
jo
out
jecxz
adc
iret
add
inc
hlt
inc
es
jbe
leave
pushf
ss
scas
stos
popf
inc
push
or
mov
push
into
xor
mov
adc
les
mov
pushf
and
and
pusha
shlb
jl
test
push
movsb
push
fnstcw
ror
cmpsb
cmpsb
insb
loope
mov
loope
rorl
lret
push
mov
out
fstl
lock
cmp
sbb
ret
outsl
mov
das
push
pop
fs
cli
push
mov
xchg
fsts
mov
out
jb
pusha
ljmp
and
jl
ss
jo
rolb
lods
mov
rolb
or
aaa
mov
orl
cmp
stc
adc
jmp
out
pop
sub
adc
xor
mov
and
push
lea
inc
pushf
mov
subl
subl
inc
mov
mov
pushf
jg
nop
inc
cli
outsb
cmp
push
pop
nop
aad
add
xchg
insl
popa
mov
pop
mov
jp
sub
mov
out
sbbb
pop
fbld
shlb
or
and
push
jno
jo
pop
sub
mov
mov
xor
hlt
cmpsb
pushf
or
jmp
cld
inc
mov
cmp
cmpb
stos
and
xor
sub
sti
adc
mov
incb
and
mov
popa
sub
push
jge
jbe
inc
in
nop
call
pusha
call
pop
sub
mov
sub
mov
shr
sub
cmp
jl
mov
mov
sub
rol
xor
add
mov
dec
jmp
popa
inc
xchg
jmp
jne
ret
ret
call
jnp
les
mov
push
call
jns
les
clc
call
jge
les
sarl
jg
jge
rclb
int3
cmp
add
addl
ret
jno
test
push
call
jno
les
jge
dec
js
jns
jae
jp
jnp
jne
push
add
call
jnp
add
push
ret
ror
push
call
jne
les
js
test
call
jl
add
push
ret
ja
and
call
pop
mov
cmp
jl
add
mov
jp
jnp
jne
add
add
clc
and
mov
call
call
ret
shl
xorl
push
rol
pop
push
call
jno
les
inc
mov
push
mov
pop
push
call
lcall
add
add
repnz
add
add
or
xchg
xor
jmp
js
addl
add
xchg
jns
dec
ror
jmp
js
add
repnz
add
add
jmp
js
cmp
lea
mov
call
jge
les
add
add
inc
inc
sub
call
je
add
push
ret
jmp
shr
add
jmp
jge
roll
mov
jmp
jbe
push
add
add
mov
adc
inc
dec
gs
push
sarl
xchg
pop
push
sarl
adc
stos
outsl
add
shll
in
out
or
mov
int3
fisubs
lret
add
repz
aas
data16
jb
and
ss
daa
mov
mov
ja
cld
and
lods
lahf
lahf
lahf
lahf
mov
int
pushl
pushfw
lahf
xor
xchg
inc
mov
test
popf
mov
and
incl
add
push
jge
sbb
xchg
cmp
dec
lods
inc
mov
jmp
hlt
cmp
loop
cmp
adc
sub
push
loop
inc
stos
jb
add
test
dec
test
lods
stos
sti
cmp
dec
mov
movsb
and
imul
jnp
mov
outsl
sbb
cwtl
jecxz
mov
ror
sub
enter
insl
xchg
sbb
popa
bound
dec
mov
test
scas
testl
stos
gs
push
inc
ret
out
cmp
bound
out
insb
xor
fcompl
push
and
pusha
add
xor
scas
mov
enter
fbld
inc
lret
jb
js
xchg
cmp
cmc
js
or
stos
cmp
jo
jl
sub
sub
cmpsb
dec
push
repz
daa
push
aam
popl
sbb
lock
inc
fwait
or
scas
and
adc
sbb
adc
xor
xchg
pushf
fidivrl
and
pop
cmp
add
sub
iret
test
xchg
test
and
mov
mov
cld
pop
fucomi
shr
xchg
or
les
ret
cld
jb
lcall
inc
inc
add
pusha
call
pop
sub
mov
sub
mov
shr
sub
cmp
jl
mov
mov
sub
rol
xor
add
mov
dec
jmp
popa
popa
call
ret
pusha
inc
xchg
jmp
jne
ret
ret
call
jnp
les
mov
push
call
jns
les
clc
call
jge
les
sarl
jg
jge
rclb
int3
cmp
add
addl
ret
jno
test
push
call
jno
les
jge
dec
js
jns
jae
jp
jnp
jne
push
add
call
jnp
add
push
ret
ror
push
call
jne
les
js
test
call
jl
add
push
ret
ja
and
call
pop
mov
cmp
jl
add
mov
jp
jnp
jne
add
add
clc
and
mov
call
call
ret
shl
xorl
push
rol
pop
push
call
jno
les
inc
mov
push
mov
pop
push
call
lcall
add
add
repnz
add
add
or
xchg
xor
jmp
js
addl
add
xchg
jns
dec
ror
jmp
js
add
repnz
add
add
jmp
js
cmp
lea
mov
call
jge
les
add
add
inc
inc
sub
call
je
add
push
ret
jmp
shr
add
jmp
jge
roll
mov
jmp
jbe
push
add
add
mov
adc
xchg
idiv
leave
inc
mov
test
and
idivb
jecxz
mov
outsl
jl
call
sub
xchg
pusha
or
enter
or
and
ds
icebp
pop
sbb
sar
push
jbe
lea
xor
mov
or
pop
dec
loopne
ret
cmp
int
push
popf
jl
ja
sub
mov
iret
scas
inc
mov
push
push
sub
fistpl
pop
fmuls
out
test
sbbl
testl
sub
ret
decb
or
icebp
fidivs
loopne
cld
sub
and
dec
mov
cmpsb
cwtl
mov
sbb
les
je
or
xchg
pop
insb
mov
in
add
or
push
mov
mov
fwait
loopne
inc
out
sub
xchg
push
ror
mov
popa
push
jg
cmp
sti
cltd
jno
sub
jecxz
and
loope
lods
rclb
push
ret
hlt
ja
sub
sti
jne
pop
jle
jg
aam
xor
add
popa
mov
add
stos
sbb
mov
jge,pn
adc
push
pusha
pusha
call
pop
sub
mov
sub
mov
shr
sub
cmp
jl
mov
mov
sub
rol
xor
add
mov
dec
jmp
popa
popa
pop
ret
add
add
add
add
add
jmp
add
jmp
add
les
sar
call
jl
add
push
ret
mov
call
lcall
jg
jle
out
in
push
call
jmp
les
mov
push
call
je
les
sar
je
jne
jne
mov
jnp
jns
add
call
jmp
ret
mov
call
ja
add
push
ret
dec
jmp
ljmp
add
add
pop
dec
call
js
add
push
ret
sar
call
js
les
jmp
jb
call
pop
mov
cmp
jl
add
mov
call
js
les
add
add
clc
push
cld
pop
call
jns
les
add
add
add
mov
dec
sub
call
jb
add
push
ret
inc
rcr
mov
jp
stc
xor
jp
jnp
ja
mov
jmp
lcall
mov
add
call
call
push
add
add
out
add
ror
push
call
lcall
pop
add
add
jmp
add
mov
call
jmp
testl
add
add
les
inc
inc
sub
call
call
add
jne
push
call
jnp
les
or
jnp
rol
and
jbe
in
out
xchg
iret
lret
push
add
adc
cmpsb
loope
stos
sbb
jle
leave
scas
movsb
inc
nop
nop
call
pusha
call
pop
sub
mov
sub
mov
shr
sub
cmp
jl
mov
mov
add
rol
sub
xor
mov
dec
jmp
popa
popa
ret
pusha
jmp
nop
nop
nop
add
add
add
jmp
add
jmp
add
les
sar
call
jl
add
push
ret
mov
call
lcall
jg
jle
out
in
push
call
jmp
les
mov
push
call
je
les
sar
je
jne
jne
mov
jnp
jns
add
call
jmp
ret
mov
call
ja
add
push
ret
dec
jmp
ljmp
add
add
pop
dec
call
js
add
push
ret
sar
call
js
les
jmp
jb
call
pop
mov
cmp
jl
add
mov
call
js
les
add
add
clc
push
cld
pop
call
jns
les
add
add
add
mov
dec
sub
call
jb
add
push
ret
inc
rcr
mov
jp
stc
xor
jp
jnp
ja
mov
jmp
lcall
mov
add
call
call
push
add
add
out
add
ror
push
call
lcall
pop
add
add
jmp
add
mov
call
jmp
testl
add
add
les
inc
inc
sub
call
call
add
jne
push
call
jnp
les
or
jnp
rol
mov
dec
add
stos
fst
push
rcrl
xchg
ret
and
jnp
sub
icebp
es
bndldx
pop
sub
stos
push
pusha
leave
fucomi
jne
cmpsl
aam
xchg
pop
or
and
cmp
das
lahf
call
dec
jbe
ds
mulb
mov
lahf
xor
cmp
sti
mov
push
mov
repz
test
pop
adc
cli
fs
mov
jge
or
lds
insl
rcll
mov
inc
xchg
fstpt
xor
addr16
stos
cli
ljmp
testl
mov
aas
ret
dec
jp
repnz
push
test
and
int3
ret
mov
lods
cs
sbb
pop
es
adc
push
jl
mov
cltd
out
lea
int
dec
popl
lods
xor
mov
jb
jmp
jmp
jae
dec
jns
sahf
mov
dec
push
mov
out
aad
pop
jecxz
clc
jno
jnp
cld
lods
inc
jb
subl
mov
fucomip
and
mov
jns
jne
dec
mov
cs
xor
cmp
xorb
dec
test
mov
mov
or
xchg
hlt
sahf
sub
push
in
ds
or
pusha
enter
std
xlat
dec
rcll
incb
cld
cmp
mov
adc
sbb
repnz
test
insl
test
arpl
mov
pushf
and
adc
jl
dec
sub
or
cmpsl
sbb
jecxz
cld
out
pop
insb
mov
sub
arpl
inc
lret
jae
pop
ss
outsb
lock
cmpsl
xchg
jno
enter
add
dec
mov
sbb
cmp
sbbl
gs
mov
nop
popa
repz
test
pop
test
dec
fldt
or
out
lcall
sub
cmpsl
bound
out
pop
out
push
adc
shlb
jecxz
cmpsb
mov
adc
xchg
lcall
jns
cmp
popa
sbb
xor
fs
mov
sbb
pop
or
mov
adcb
fnstsw
mov
leave
mov
inc
push
sub
push
push
aas
add
les
push
shlb
mov
lcall
cmp
push
into
test
xchg
adc
push
popa
out
mov
sub
enter
xchg
xchg
test
hlt
bound
add
adcl
push
xchg
fadds
lcall
jg
bound
fstps
lcall
push
cld
push
inc
in
aas
sub
sbb
fcoml
inc
pop
sub
jmp
cli
inc
lods
setne
rorb
aam
ljmp
jg
push
lds
add
or
mov
test
jne
inc
push
mov
inc
inc
es
pop
es
sbb
fsubs
mov
test
adc
test
jle
sub
mov
mov
xchg
arpl
jo
jp
add
jns
jecxz
pmullw
mov
aad
loopne
mov
div
repz
jl
xchg
aas
cltd
in
sub
xchg
popa
nop
sub
and
xor
std
inc
and
dec
and
clc
stos
pop
pusha
call
pop
sub
mov
sub
mov
shr
sub
cmp
jl
mov
mov
add
rol
sub
xor
mov
dec
jmp
popa
call
jmp
add
jmp
add
les
sar
call
jl
add
push
ret
mov
call
lcall
jg
jle
out
in
push
call
jmp
les
mov
push
call
je
les
sar
je
jne
jne
mov
jnp
jns
add
call
jmp
ret
mov
call
ja
add
push
ret
dec
jmp
ljmp
add
add
pop
dec
call
js
add
push
ret
sar
call
js
les
jmp
jb
call
pop
mov
cmp
jl
add
mov
call
js
les
add
add
clc
push
cld
pop
call
jns
les
add
add
add
mov
dec
sub
call
jb
add
push
ret
inc
rcr
mov
jp
stc
xor
jp
jnp
ja
mov
jmp
lcall
mov
add
call
call
push
add
add
out
add
ror
push
call
lcall
pop
add
add
jmp
add
mov
call
jmp
testl
add
add
les
inc
inc
sub
call
call
add
jne
push
call
jnp
les
or
jnp
rol
add
stc
aam
pop
xchg
xor
repnz
aad
movsb
xchg
in
sbb
aad
ret
les
inc
add
dec
or
fists
dec
cmc
jbe
negl
mov
cld
sub
in
ja
mov
fldcw
mov
addr16
adcl
je
xor
bound
xchg
push
jo
shll
mov
cltd
js
mov
and
or
stos
mov
stos
les
stos
rcrb
push
mov
pop
je
pop
clc
cmp
and
pop
lret
pop
loopne
or
sahf
pop
mov
push
inc
add
clc
stos
pop
pusha
call
pop
sub
mov
sub
mov
shr
sub
cmp
jl
mov
mov
add
rol
sub
xor
mov
dec
jmp
popa
popa
ret
add
add
add
add
add
jmp
add
jmp
add
les
sar
call
jl
add
push
ret
mov
call
lcall
jg
jle
out
in
push
call
jmp
les
mov
push
call
je
les
sar
je
jne
jne
mov
jnp
jns
add
call
jmp
ret
mov
call
ja
add
push
ret
dec
jmp
ljmp
add
add
pop
dec
call
js
add
push
ret
sar
call
js
les
jmp
jb
call
pop
mov
cmp
jl
add
mov
call
js
les
add
add
clc
push
cld
pop
call
jns
les
add
add
add
mov
dec
sub
call
jb
add
push
ret
inc
rcr
mov
jp
stc
xor
jp
jnp
ja
mov
jmp
lcall
mov
add
call
call
push
add
add
out
add
ror
push
call
lcall
pop
add
add
jmp
add
mov
call
jmp
testl
add
add
les
inc
inc
sub
call
call
add
jne
push
call
jnp
les
or
jnp
rol
inc
hlt
out
mov
outsb
or
jne
pop
jle
push
test
sbb
push
push
test
dec
fdiv
pop
inc
xor
mov
sub
sahf
roll
inc
es
add
push
xchg
mov
lea
out
gs
mov
adc
jns
mov
int
inc
xorb
pushf
enter
dec
sub
lock
pop
sbb
and
fistl
lock
cmpsb
sbb
test
arpl
pop
sub
mov
test
in
or
xor
xor
icebp
jne
xor
in
push
mov
jae
jo
nop
or
jnp
roll
inc
rorb
scas
sub
sub
andb
xchg
pop
rcr
xor
and
jnp
leave
aam
popf
ss
sub
lahf
mov
inc
xor
xor
mov
rcrb
test
jne
push
shll
cmpsb
clc
or
fdecstp
insb
fsubr
mov
rcrb
mov
aaa
stos
or
vandnpd
popa
test
jno
pop
push
mov
inc
in
mov
les
test
xor
aad
mov
jb
idivb
insb
cli
leave
fistpll
pop
add
mov
push
push
js
push
lret
inc
xor
push
push
xor
ljmp
sbb
push
or
das
shr
or
mov
xchg
fimull
rclb
sbb
or
fisubrl
adc
lretw
push
add
sub
nop
fstpl
adc
pop
adcb
loopne
fidivrl
add
mov
push
xchg
adc
rol
or
iret
xchg
sbb
or
aam
xchg
movsl
fwait
repz
repz
fwait
stos
adc
call
stc
dec
loope
xlat
and
push
pop
repz
and
jne
in
divl
inc
inc
aam
jne
dec
popa
and
scas
cli
mov
shrb
dec
outsl
add
sbb
sbb
clc
call
mov
cwtl
imul
cmp
xor
cmp
push
pop
and
jmp
add
rep
pusha
call
pop
sub
mov
sub
mov
shr
sub
cmp
jl
mov
mov
add
rol
sub
xor
mov
dec
jmp
popa
popa
call
ret
push
inc
dec
dec
inc
inc
inc
push
pusha
call
movl
mov
lea
lea
movl
call
mov
lea
lea
movl
call
mov
lea
lea
movl
call
jmp
nop
nop
nop
cmp
je
nop
nop
nop
nop
mov
mov
or
je
nop
nop
nop
nop
inc
add
cmp
ja
cmp
jb
cmpl
je
nop
nop
nop
nop
cmp
jb
mov
jmp
ret
popa
ret
pusha
jmp
nop
nop
nop
cs
inc
dec
dec
inc
call
mov
sub
call
pushl
popl
mov
or
je
mov
mov
add
add
lods
mov
sub
mov
or
je
mov
add
mov
add
mov
sub
cmp
jge
mov
mov
lods
add
lods
add
sub
shr
mov
lods
or
je
nop
nop
nop
nop
movzwl
and
call
cmpl
jne
nop
nop
nop
nop
shr
dec
or
jne
nop
nop
nop
nop
push
mov
add
pop
loop
dec
or
jne
nop
nop
nop
nop
push
mov
add
pop
loop
dec
or
jne
nop
nop
nop
nop
push
mov
add
pop
loop
mov
jmp
popa
ret
push
lea
sub
call
mov
sub
mov
pop
ret
pusha
call
jmp
add
jmp
add
les
sar
call
jl
add
push
ret
mov
call
lcall
jg
jle
out
in
push
call
jmp
les
mov
push
call
je
les
sar
je
jne
jne
mov
jnp
jns
add
call
jmp
ret
mov
call
ja
add
push
ret
dec
jmp
ljmp
add
add
pop
dec
call
js
add
push
ret
sar
call
js
les
jmp
jb
call
pop
mov
cmp
jl
add
mov
call
js
les
add
add
clc
push
cld
pop
call
jns
les
add
add
add
mov
dec
sub
call
jb
add
push
ret
inc
rcr
mov
jp
stc
xor
jp
jnp
ja
mov
jmp
lcall
mov
add
call
call
push
add
add
out
add
ror
push
call
lcall
pop
add
add
jmp
add
mov
call
jmp
testl
add
add
les
inc
inc
sub
call
call
add
jne
push
call
jnp
les
or
jnp
rol
ret
cmp
jg
pop
push
cli
mov
inc
dec
sbbl
xor
add
stos
pusha
call
pop
sub
mov
sub
mov
shr
sub
cmp
jl
mov
mov
add
rol
sub
xor
mov
dec
jmp
popa
popa
ret
pusha
clc
test
rcl
xchg
clc
je
jne
jge
call
lcall
jp
jnp
ja
loope
jmp
lcall
jmp
jmp
add
rol
call
jnp
les
call
je
les
call
je
add
push
ret
test
je
jne
je
out
call
js
add
push
ret
jne
stc
call
jb
add
push
ret
inc
call
pop
mov
cmp
jl
add
mov
call
jb
les
ror
mov
jmp
jmp
add
rcl
push
popl
mov
jnp
add
sub
push
call
jbe
les
dec
ror
orl
mov
rcl
add
push
call
jl
les
cld
mov
call
ja
add
push
ret
jmp
shr
xor
push
call
lcall
subl
rol
push
call
jle
les
jmp
stc
jge
xchg
xor
jmp
jns
add
add
clc
mov
jmp
jb
adc
pop
add
add
add
ja
stc
add
add
call
jle
add
push
ret
jmp
rol
sub
jne
call
jbe
les
xor
jae
test
mov
dec
mov
mov
inc
or
sti
mov
mov
pop
mov
insl
dec
stos
add
loop
pusha
call
pop
sub
mov
sub
mov
shr
sub
cmp
jl
mov
mov
xor
ror
xor
sub
mov
dec
jmp
popa
popa
ret
pusha
call
xor
mov
or
je
nop
nop
nop
nop
add
mov
pusha
push
push
push
call
pop
mov
popa
mov
rep
inc
jmp
popa
ret
pusha
clc
test
rcl
xchg
clc
je
jne
jge
call
lcall
jp
jnp
ja
loope
jmp
lcall
jmp
jmp
add
rol
call
jnp
les
call
je
les
call
je
add
push
ret
test
je
jne
je
out
call
js
add
push
ret
jne
stc
call
jb
add
push
ret
inc
call
pop
mov
cmp
jl
add
mov
call
jb
les
ror
mov
jmp
jmp
add
rcl
push
popl
mov
jnp
add
sub
push
call
jbe
les
dec
ror
orl
mov
rcl
add
push
call
jl
les
cld
mov
call
ja
add
push
ret
jmp
shr
xor
push
call
lcall
subl
rol
push
call
jle
les
jmp
stc
jge
xchg
xor
jmp
jns
add
add
clc
mov
jmp
jb
adc
pop
add
add
add
ja
stc
add
add
call
jle
add
push
ret
jmp
rol
sub
jne
call
jbe
les
xor
jae
test
pop
lock
pop
out
hlt
pop
cmp
dec
inc
ret
push
mov
and
xor
repnz
popf
fadds
push
and
add
add
add
pop
sub
mov
sub
mov
shr
sub
cmp
jl
mov
mov
xor
ror
xor
sub
mov
dec
jmp
popa
popa
ret
call
call
pop
sub
sub
mov
call
call
call
mov
call
movb
call
call
call
call
call
stc
stc
xor
clc
sub
inc
xchg
jmp
jne
mov
jge
jge
add
mov
jbe
call
jne
les
xor
add
add
add
push
ret
sub
push
call
js
les
jl
sar
call
jbe
add
push
ret
cld
jb
jae
jl
or
add
mov
jae
inc
mov
jmp
jp
addb
add
xchg
mov
jo
test
sub
call
lcall
add
rcr
mov
mov
push
call
jb
les
jmp
ror
mov
jmp
jmp
add
lret
lret
push
call
jl
les
adc
ror
push
call
jne
les
jmp
dec
xchg
sub
xor
add
jmp
jge
add
add
xchg
mov
push
call
jae
les
and
xor
jmp
ja
add
add
inc
cld
add
push
call
jmp
jmp
inc
dec
jne
call
jmp
les
add
add
xchg
or
jb
test
enter
out
and
jae
add
rcr
dec
dec
call
push
pop
pop
bound
pop
push
push
jnp
mov
xlat
mov
pop
and
daa
cmpsl
call
jns
push
arpl
rcll
dec
bound
mov
sub
mov
movsb
mov
push
xchg
or
xchg
dec
insb
repz
imul
mov
test
push
fists
stos
push
das
mov
mov
mov
xchg
ja
inc
je
loope
dec
movsb
inc
cmp
cmpsl
loop
dec
sbb
cmp
sbb
repz
pop
mov
sbbb
pop
cltd
mov
fistl
or
dec
xor
push
data16
pop
dec
jo
icebp
cli
test
sub
out
jge
mov
mov
lahf
xchg
push
mov
dec
call
call
push
and
rorl
dec
femms
adc
outsl
jnp
push
mov
mov
add
sti
hlt
repnz
add
bound
add
pop
icebp
or
add
outsb
mull
sub
sbb
sub
mov
fistps
ja
push
movsb
aam
pop
sbb
js
pop
or
mov
jne
enter
inc
jne
mov
sub
inc
out
dec
push
imul
lods
adc
mov
rorb
mov
mov
test
in
repz
mov
jecxz
data16
push
aad
pop
fnstenv
xchg
out
pop
xor
xchg
or
sbb
mov
cmp
cli
inc
jmp
scas
and
jecxz
push
jb
adc
xor
or
xor
lds
jmp
jl
mov
jmp
lock
add
lds
adc
push
repz
xor
mov
scas
stos
out
imul
in
xor
add
pop
push
loop
popa
push
stos
mov
scas
aaa
int3
dec
cmp
xchg
pop
iret
or
sub
and
pop
mov
pop
jg
and
mov
movsb
test
dec
or
pop
or
dec
adcb
mov
in
iretw
popf
dec
mov
and
ret
lods
pop
jge
loopne
mov
pop
xchg
pop
pop
push
dec
loop
cmp
jbe
hlt
ljmp
scas
xchg
mov
data16
sub
pop
ja
sub
dec
lea
sbbl
cmp
xchg
and
movsb
and
xchg
pop
les
leave
lods
push
ficompl
push
xorl
mov
out
popa
pushf
push
xchg
movsl
pop
mov
sbb
xchg
inc
adc
test
push
sub
push
sbb
push
in
xor
sub
rorl
mov
xor
cmp
cmc
and
fs
push
cmpsl
imul
dec
add
cmpsl
jle
sub
std
xor
shll
xchg
mov
enter
mov
xchg
add
fildl
sub
bound
inc
test
push
mov
in
aas
jmp
iret
push
dec
into
or
clc
or
jp
pusha
imul
inc
sbb
fdivl
out
sub
dec
cltd
sub
imul
test
push
iret
xlat
add
ss
cld
xlat
adc
xchg
sti
ja
loop
mov
mov
mov
arpl
pop
mov
shrl
ror
pop
lods
addr16
adc
jl
dec
ljmp
pop
jnp
and
loope
and
enter
outsl
add
lcall
cmp
pop
imul
scas
xor
mov
clc
ret
fs
cmp
sub
add
cmc
aaa
outsb
jne
ss
jecxz
mov
adc
sahf
mov
pop
xchg
jnp
fiaddl
jecxz
iret
ljmp
xchg
xchg
inc
inc
pop
in
adc
loop
jp
jmp
sbb
in
jnp
les
push
test
hlt
push
pop
jg
sbb
imul
stos
cmp
lock
sarb
adc
cli
mov
mov
test
jle
ljmp
into
push
stos
aaa
arpl
adc
xchg
aas
cmc
fcmovnu
loop
add
testl
add
push
mov
add
nop
inc
int
mov
mov
pop
cld
xor
push
out
push
push
cmp
add
loop
mov
mov
mov
adc
clc
push
or
cmp
aad
mov
insb
and
jmp
and
push
xor
insl
or
xchg
jo
out
jnp
cltd
mov
and
or
in
aas
jecxz
pop
xchg
fwait
jp
push
fwait
mov
les
jecxz
leave
mov
or
or
pop
mov
fs
fisubl
mov
test
sub
xchg
pop
pop
adc
jo
in
in
stos
mov
push
into
mov
pop
dec
push
mov
mov
lea
sub
xchg
and
les
sahf
stos
adc
pop
fistpll
xchg
sbb
and
fistps
cltd
in
push
pop
out
pop
stos
jns
cli
push
jmp
cmpb
sub
gs
jle
insb
mov
cmp
jae
xor
pop
outsb
adc
sub
adc
sub
mov
dec
ret
adc
pop
cmp
cltd
fstpl
dec
mov
arpl
in
les
add
out
mov
cltd
xchg
es
mov
outsb
les
cmpsb
cmpsb
add
xchg
xchg
push
lods
mov
add
sub
jne
cmp
nop
mov
sbb
sbb
ss
in
add
cmpsl
es
das
sub
dec
push
mov
sahf
loope,pt
int3
jo
cli
je
lock
xchg
fwait
pop
out
dec
push
loope
ljmp
inc
mov
sbb
icebp
jle
inc
sbb
insl
jmp
jns
mov
dec
out
sti
xchg
push
cwtl
add
idivl
movsb
jge
pushf
jmp
jmp
dec
or
arpl
inc
stos
cmc
mov
cmpsb
adc
cli
cmp
clc
jbe
inc
mov
sub
and
inc
scas
int
inc
in
data16
dec
push
dec
jne
fucomip
sbb
insb
sub
mov
xchg
lock
and
mov
movsb
pop
imul
into
inc
aaa
pop
mov
sbb
mov
popfw
movsb
loope
int3
add
rolb
stc
sub
mov
in
in
push
add
popf
shll
cmp
jno
das
ja
push
inc
les
xchg
xchg
cmp
add
pop
loope
in
ds
testl
cs
cmp
data16
leave
mov
in
out
sbb
test
pop
les
sbb
push
jns
nop
lods
mov
lret
sub
test
lret
stos
enter
in
stos
aam
out
dec
mov
push
xchg
pop
dec
sub
cmp
cwtl
xorl
add
rcrb
mov
jbe
loopne
inc
adc
push
adc
push
jae
xor
mov
test
or
push
sbb
jle
add
addr16
cld
or
cmp
fldl2e
adc
fs
dec
inc
popf
jnp
movsl
or
pop
mov
mov
ljmp
insb
addr16
ja
or
enter
pushf
lret
adc
icebp
mov
insb
jnp
add
icebp
cld
shl
jns
pop
lahf
shrb
fcom
aam
xor
adc
repz
mov
aaa
mov
lea
pop
inc
pop
mov
cli
ljmp
sub
mov
mov
cmp
clc
mov
movd
mov
jo
jo
mov
ret
and
fs
pop
mov
lret
lea
in
pusha
or
daa
ljmp
out
lea
leave
push
add
jle
mov
xchg
sbb
push
lods
add
leave
sub
mov
mov
pop
jge
fistpll
cwtl
sti
push
adc
into
lea
addr16
lds
ljmp
jne
or
sbb
nop
fcmovu
outsb
cltd
mov
mov
sub
es
sti
ljmp
aad
int
out
je
sub
mov
xor
push
test
es
popf
cmp
or
js
push
sti
idivl
add
pop
xor
cltd
mov
push
movsl
dec
sti
ret
loop
out
aad
push
fcompl
jne
sti
push
dec
int3
fisubl
dec
lcall
dec
nop
adc
ret
xchg
clc
sub
xor
das
sub
adc
leave
mov
inc
sti
into
mov
cwtl
stos
mov
xchg
mov
ja
mov
or
fstpl
ret
sub
fidivl
jnp
dec
mov
cltd
mov
or
jbe
mov
dec
jg
sbb
ds
fcmovb
negb
pop
and
lods
out
hlt
ljmp
shll
xchg
lods
mov
out
sbb
push
push
mov
clc
xchg
loop
mov
cmpsb
mov
jl
mov
sbb
mov
test
xchg
xchg
rorl
jmp
std
out
jecxz
shlb
daa
xor
aaa
outsb
jns
xor
and
mov
insl
inc
xlat
loopne
lahf
out
repnz
add
push
ret
sub
js
aad
negb
lock
ficoms
jne
push
jl
in
int
sub
ds
sub
movsb
shr
outsl
xor
sbb
int3
pop
std
popf
sbb
mov
and
sbbl
insl
mov
jge
jno
jge
ljmp
dec
sub
inc
adc
aad
movb
pop
imull
movsl
jge
pop
mov
and
out
mov
jge
jmp
adc
mov
lock
in
sbb
xor
cmp
stos
pushf
mov
mov
repnz
std
push
mov
and
stos
sub
fidivl
or
sub
sti
pop
lods
sub
cmp
insl
add
repnz
sub
lock
add
add
xor
aad
test
jo
adc
or
arpl
dec
add
pusha
pop
mov
sbb
into
je
leave
xchg
pop
mov
pop
les
pop
push
inc
cmc
shlb
xchg
jne
jp
shlb
xor
push
jno
push
mov
scas
mov
mov
xor
dec
sbb
out
in
adc
add
xor
aam
push
addb
lods
lret
repz
out
imul
mov
cmp
mov
and
stos
push
jg
sub
out
jl
jge,pt
sub
mov
shlb
enter
data16
outsl
sbb
push
cmpsl
insb
mov
test
mov
pop
lea
in
inc
fs
jbe
xchg
mov
mov
cwtl
pop
call
jp
push
cmp
cmp
aas
adcb
jne
fmull
int
mov
mov
js
adc
xor
jecxz
test
movsb
das
fs
notb
push
or
inc
loopne
push
or
mov
pop
fstl
push
aas
adc
pushf
cmp
mov
mov
stc
pop
das
sbb
jge
arpl
jo
push
sub
pmulhw
test
shr
imul
test
mov
fcomps
jbe
xlat
xor
jmp
jae
xchg
cmp
rclb
icebp
jb
fistpll
cwtl
leave
and
dec
mov
mov
xchg
sbb
and
or
fadd
jmp
add
pop
xor
fldcw
fiaddl
hlt
cmpl
mov
xor
mov
insl
sub
inc
xchg
insb
pusha
repnz
mov
xchg
mov
xchg
sbb
pop
mov
pop
jge
mov
mov
inc
xchg
sub
leave
sub
or
cwtl
pop
test
lcall
xchg
jp
leave
mov
lods
adc
pushf
rcll
mov
sub
pop
push
push
pusha
lret
inc
sbb
sub
lret
xor
stos
js
lret
add
jle
fsubl
test
fistpl
test
add
push
dec
mov
int
and
or
out
out
jae
add
in
lret
jecxz
sub
jnp
and
push
and
insl
dec
jge
adc
incl
sbb
imulb
adc
inc
xchg
fistps
enter
jmp
mov
jp
nop
ret
mov
lret
push
fsubl
mov
shll
popf
mov
cmp
cld
xchg
iret
aaa
jno
lret
xchg
jae
gs
dec
sub
outsl
scas
mov
ror
pushl
xor
add
mov
lds
jp
into
add
pop
scas
test
sbb
ljmp
bnd
push
pushf
xor
scas
xchg
pop
add
les
sbb
push
jle
inc
xchg
mov
mov
pop
mov
out
add
xor
cmp
cmp
notb
mov
call
imul
and
push
cmp
les
outsl
or
stc
test
in
in
xor
dec
mov
xlat
inc
jbe
fiadds
xchg
add
mov
pop
mov
mov
pop
popa
sarl
pop
and
stos
js
xor
loopne
stc
sub
sub
or
cmp
pop
out
popa
push
xchg
push
out
inc
xchg
stos
cltd
cs
cltd
mov
pop
add
mov
notb
call
mov
mov
cmpsl
fidivrl
into
js
fldl
inc
mov
jno
imulb
jge
aas
scas
ficompl
xchg
sub
mov
sahf
xor
ret
sahf
and
scas
arpl
test
js
and
fldt
jge
jg
cmpsb
or
jmp
es
fisubrl
je
int3
mov
pop
cwtl
movsl
mull
inc
mov
or
push
ss
mov
fcompl
scas
add
xlat
mov
pusha
push
push
and
sahf
push
mov
fbld
mov
xor
leave
jo
cmp
test
mov
mov
push
outsl
ds
xchg
cmp
mov
clc
fprem1
mov
add
sub
or
mov
push
jae
mov
outsb
gs
pop
test
jb
xor
out
add
cs
test
cmp
push
cmpb
cmp
and
mov
sbb
stos
movsl
pop
ret
xchg
dec
pop
xor
fwait
rorl
js
sbb
mov
mov
lock
sbb
popf
jbe
scas
lret
add
mov
xchg
mov
cltd
adc
addr16
or
inc
enter
mov
pushl
in
mov
scas
lods
or
pop
or
and
outsl
adc
fwait
or
in
aas
lds
xor
stos
xor
std
cmp
stos
or
cmpsb
shlb
subl
test
cmp
jbe
js
shll
imul
outsb
add
arpl
push
cmp
pop
xor
jb
sbbl
adc
jo
stos
aam
inc
push
repz
decl
sarb
mov
sbb
jbe
mov
ja
adc
jge
lcall
shlb
nop
push
out
fwait
rcrb
xchg
rorb
mov
rcll
inc
xchg
out
cmpsb
jg
int3
lods
push
mov
insl
mov
cmpsb
cmp
xchg
cli
inc
jl
jne
cmp
jmp
adc
pop
or
lret
fisttpll
cmp
mov
xchg
mov
notl
hlt
or
lret
jnp
add
add
jno
rcl
sbb
xorb
ja
mov
stos
outsl
std
shl
hlt
mov
cmp
add
sub
imul
xchg
xchg
daa
and
int3
dec
sub
mov
lods
int3
inc
jle
pop
adc
inc
les
mov
sub
cli
push
mov
dec
xor
lcall
mov
movsb
push
cwtl
inc
and
sub
adc
addr16
aaa
add
xchg
push
cmc
fdivl
shrl
cli
mov
push
push
stos
cmp
cmpsl
pop
rcl
in
in
repz
xor
into
out
or
push
sbb
xor
ret
shrl
pop
cmp
pop
cmp
pop
add
bound
fsubrl
push
shlb
jecxz
push
test
sahf
loop
sub
push
leave
add
movsb
mov
and
pop
lret
jmp
add
shlb
repnz
sbb
push
rcll
jbe
dec
add
push
sti
xorb
cmp
rorl
lea
sub
push
jbe
aas
pop
cmpsl
clc
jno
xor
test
xchg
sub
add
adc
push
fisubrs
jmp
mov
jmp
ljmp
jl
ja
movsl
lock
add
in
push
out
mov
jbe
das
xchg
call
sbb
pop
xor
ds
pop
and
into
pop
fadd
push
test
rorb
fwait
mov
xchg
inc
stc
es
jecxz
cmp
fistps
rorb
rol
lcall
add
fwait
lret
jae
jg
jae
push
andb
lds
les
fsubr
aad
out
int3
test
fidivrs
cmp
int3
gs
xor
cmp
mov
push
mov
or
cli
mov
pop
sbb
into
lock
jae
add
sub
jne
sub
pop
mov
mov
mov
movsb
fdivs
jmp
jge
sbb
cmc
int
pop
fcmovnb
mov
out
add
or
dec
jb
cmp
add
outsb
negl
ljmp
pop
pop
popa
push
jb
loope
or
xchg
notl
lods
inc
pop
out
push
out
ficompl
das
daa
mov
mov
push
repz
xor
lock
and
adc
jp
cmp
sbb
mov
clc
aaa
mov
ljmp
stc
inc
es
dec
and
xchg
adc
test
cmp
mov
lret
fwait
aaa
ret
push
push
mov
mov
mov
sub
sarb
pop
jae
push
in
push
dec
in
shlb
inc
sub
inc
mov
scas
or
or
cli
mov
adc
iret
int
aam
lock
fadd
xor
test
movsl
adc
mov
xchg
out
xchg
push
test
aas
cmp
mov
or
xor
adc
loope
jne
inc
pop
mulb
xor
ss
repz
fsubs
sub
mov
mov
jns
shrl
rcrb
loopne
nop
mov
lods
inc
inc
popl
in
and
addr16
inc
lcall
mov
sbb
fadd
or
jo
or
es
xchg
mov
push
ficompl
ljmp
xchg
es
clc
pop
enter
push
insb
dec
aam
sahf
negb
push
lods
out
jmp
fisubrl
adc
test
inc
aam
pop
out
inc
rorl
sub
or
cld
sbb
mov
ja
popa
cwtl
fisubl
addr16
inc
shll
mov
inc
dec
and
loopne
jae
outsb
mov
lods
and
pop
hlt
push
fcoms
in
push
movsb
arpl
pop
and
cmp
repz
ret
pop
or
push
out
dec
jp
adc
pop
sbb
aam
lds
test
cwtl
add
cmpl
movq
pusha
xlat
outsl
aam
dec
push
jno
data16
pushf
lods
inc
xchg
jno
sub
or
popl
jecxz
cmpsl
xor
push
movsb
mov
nop
stos
icebp
inc
push
mov
aam
loopne
out
test
mov
test
xchg
out
mov
push
stc
ret
test
fcomp
sti
sbb
xor
pop
pusha
mov
add
sahf
ror
test
ret
mov
push
cld
mov
sbb
jo
and
ret
adc
jg
iret
or
and
mov
lods
pop
adc
pop
aas
sar
aad
sub
cmc
xchg
aaa
mov
aas
lahf
adc
push
enter
js
sbb
dec
add
gs
xor
inc
push
in
or
cltd
xor
and
add
push
pop
ja
stos
mov
pop
mov
xorl
jg
orb
in
test
push
test
cmc
inc
fadds
lods
adc
pop
xchg
addl
rolb
cmpl
popa
imul
jp
repnz
push
lods
stc
daa
mov
jle
ret
mov
pusha
push
pop
sbb
insl
ficoml
inc
adc
stc
push
aam
adc
nop
mov
xchg
lea
popa
or
outsb
jecxz
cmp
push
mov
cld
jl
xchg
jecxz
arpl
nop
fisubrl
sbb
or
cmp
xchg
cmp
and
lds
lret
push
lock
out
and
mov
pushf
shrl
push
inc
mov
mov
sbb
sub
jle
mov
mov
cs
data16
stos
shll
repnz
adc
aaa
add
mov
sbb
in
mov
imull
mov
rcrb
fs
inc
scas
lret
push
daa
fwait
dec
xchg
nop
daa
dec
mulb
dec
inc
mov
sbb
or
mov
adcb
cwtl
gs
or
dec
popf
push
in
scas
sub
out
sbb
mov
ret
insb
scas
idivl
pop
fwait
test
fcomps
xor
jmp
pop
shrb
or
dec
mov
add
sub
xchg
mov
imul
es
lods
cmp
aam
aam
pop
add
cmp
sbb
lds
fisttpl
ds
js
stos
mov
call
xor
push
stos
push
and
xchg
or
jg
xchg
nop
mov
repz
pusha
sahf
or
mov
jecxz
stos
sub
scas
fdivrl
leave
test
js
aad
insb
inc
push
popf
mov
cmc
add
shll
adc
add
int3
add
call
stos
rcl
icebp
test
mov
repnz
jo
jecxz
and
roll
pop
pop
cmp
fsubrl
rcrb
ja
shr
inc
sbb
xchg
sbb
jae
mov
xor
pop
mov
in
mov
dec
mov
pushf
lea
mov
subl
xchg
imul
add
ds
inc
jmp
dec
stos
test
inc
mov
cli
lret
adc
movsb
mov
mov
neg
subl
mov
rcrb
movsl
ret
repz
mov
sahf
sbb
rcl
mov
ljmp
mov
inc
int
out
and
mov
add
jp
cli
mov
lods
mov
xor
inc
fsubl
xor
mov
cmp
jg
xchg
ret
test
mov
int3
mov
xor
outsb
nop
shll
add
popa
push
je
adc
aaa
xchg
jae
enter
inc
dec
mov
inc
fadd
or
ror
or
or
push
xor
xchg
into
fstpt
ret
int3
and
push
adc
mov
cltd
push
and
loop
add
push
ljmp
sub
push
add
mov
xor
data16
test
gs
in
pop
dec
mov
imul
dec
sti
dec
shrl
xor
pop
xor
arpl
fiaddl
les
jg
add
sbb
lock
sbb
cmp
leave
into
popf
pushl
or
aam
aam
rcll
sbb
leave
lods
arpl
mov
ss
test
sub
cld
sti
es
sbb
lods
add
jns
cmp
pop
ds
mov
jle
in
iret
in
xor
es
outsl
cmp
loop
mov
jnp
outsb
loop
and
sub
xchg
lock
dec
sahf
xor
mov
inc
xor
push
jmp
ret
pop
xor
cs
or
aaa
dec
dec
add
fsubr
push
adc
mov
sbb
lea
ljmp
or
and
sub
xor
ret
mov
xchg
hlt
fisubrl
repnz
sub
jmp
lahf
push
dec
mov
iret
aas
cmpsb
fisubl
add
stos
test
mov
dec
mov
inc
add
decl
pop
dec
jae
fmuls
or
lahf
xchg
ret
out
dec
js
ja
inc
add
add
shll
stos
stos
push
imul
pop
jge
call
jo
movsb
mov
out
inc
icebp
pop
fimuls
lock
push
push
rclb
adc
ljmp
les
jnp
and
movsb
or
lock
in
fs
push
pop
mov
mov
cld
int
xchg
jne
sbb
adc
pusha
pop
push
call
jmp
dec
xor
sub
fstpt
sti
mov
fwait
cmpsb
pop
leave
insb
test
inc
sub
jp
dec
popf
js
sbb
fwait
movsb
fs
ds
push
pop
push
adc
rcrl
mov
gs
push
aad
les
add
fildl
mov
mov
push
xor
fwait
cmp
test
dec
sbb
mov
jne
les
aas
xorl
adc
sbb
in
dec
sbb
shlb
mov
or
fistps
cmp
sti
sarl
les
push
adc
daa
adc
dec
jmp
rorb
push
std
mov
cwtl
add
scas
sbbb
lret
sahf
or
lret
mov
orb
or
xchg
lods
daa
sahf
jnp
fcmovne
inc
and
and
cmp
and
lret
mov
fs
push
mov
fidivrs
push
mov
shrl
mov
into
mov
sub
dec
push
jnp
xlat
jge
mov
or
inc
jecxz
ret
in
stos
jg
push
nop
ret
ds
jle
lock
ss
mov
xchg
lock
popa
shll
xchg
into
inc
fisubrl
das
cltd
and
and
mov
adc
mov
pop
cmp
in
jno
jmp
xor
add
int
ljmp
mov
ret
cmp
mov
and
cmp
or
das
and
xor
mov
roll
mov
mov
pushf
sub
jne
inc
pop
inc
repnz
call
push
adc
loopne
inc
mov
pop
pop
xor
pop
popf
sbb
test
or
out
mov
fldcw
sub
sbb
testl
adc
cs
and
push
pop
mov
cmp
mov
adc
jmp
orl
popf
fwait
mov
push
jno
icebp
push
adc
js
jns
inc
std
mov
add
mov
mov
dec
add
and
or
sti
gs
lahf
popf
fisubs
push
fdivrs
hlt
jp
adc
mov
inc
hlt
xchg
push
xlat
xchg
cwtl
insb
and
fs
ljmp
out
enter
xchg
mov
xchg
mov
xchg
into
push
jmp
pop
rclb
pop
outsl
rorb
mov
xchg
add
idivl
lret
jnp
mov
in
aaa
cmp
xor
stos
dec
enter
in
orb
pop
jns
xchg
loopne
mov
push
jae
loope
dec
dec
sahf
imul
sub
adc
sti
mov
xchg
and
sar
rorl
fstpl
inc
pop
xor
insl
mov
xor
int
sub
jb
mov
cmc
into
aam
push
add
shlb
enter
push
outsl
and
xchg
cmpl
daa
addr16
push
and
mov
jmp
rcr
mov
ds
sahf
pushf
mov
add
sbb
adc
sub
imul
pop
lock
mov
mov
push
sahf
xor
jnp
int3
jl
scas
jmp
repnz
add
or
fbstp
jae
push
mov
divb
fadd
clc
sub
mov
aaa
cmp
push
and
in
icebp
idivl
push
mov
pop
mov
mov
cld
pop
mov
imul
jecxz
mov
pop
mov
cmpsb
movsl
and
lods
dec
mov
adc
xor
or
sub
sub
mov
jmp
jo
scas
hlt
sbb
jl
je
or
lret
sbb
std
mov
addr16
mov
ljmp
xlat
popaw
leave
mov
dec
es
clc
fildl
loop
mov
mov
xor
push
shll
std
fsubl
shlb
xor
push
movsl
add
ljmp
rorl
sahf
sbb
push
mov
in
and
hlt
sub
mov
aad
movsl
sti
inc
add
xchg
lcall
or
add
add
mov
std
shll
mov
cli
les
mov
out
sub
sub
push
fs
repz
push
sarl
rcll
push
cmp
popa
mov
int3
add
jns,pt
notl
cwtl
into
out
fwait
push
mov
pop
push
lcall
in
inc
or
mov
jbe
ja
jae
lcall
call
xor
sar
sub
cmp
popf
in
add
scas
aas
pop
je
rcrl
adc
mov
jg
pop
xor
xchg
int
stos
add
cmp
add
aad
inc
mov
rdpmc
in
sbb
mov
jecxz
jge
icebp
bound
xchg
sarl
out
in
mov
scas
std
jg
shr
cmpsb
xor
je
in
mov
mov
std
ljmp
dec
dec
nop
mov
stos
cmp
mov
mov
xchg
scas
add
arpl
mov
ss
inc
ret
or
pop
xor
lahf
in
call
add
sbb
sti
dec
sub
fcmovne
mov
fisubrs
psrad
out
insl
cmc
stos
pusha
test
push
pop
mov
xchg
add
enter
sub
xlat
and
sti
xor
mov
xor
test
jg
outsb
push
mov
imul
test
outsl
jnp
add
ljmp
orl
into
aaa
pusha
call
lock
mov
addr16
and
rcr
xchg
lret
xchg
or
call
cltd
clc
mov
mov
rcrl
pop
cmpsb
mov
repnz
mov
fstpt
mov
xchg
jl
mov
decb
je
xor
enter
repnz
mov
scas
scas
leave
or
jl
adc
push
lea
lds
pop
jno
iret
jns
mov
xchg
adc
je
and
mov
ja
shlb
cmpsl
xchg
ja
xchg
loopne
int3
nop
andb
in
cli
imul
imul
sbb
inc
or
outsb
scas
lods
jge
adc
int
or
xor
shrb
mov
mov
and
inc
leave
dec
mov
nop
or
xor
ffree
stos
mov
sbb
mov
std
push
leave
lea
mov
adc
or
dec
fs
push
sbb
sub
out
jne
push
dec
jg
int3
jnp
sarb
pop
in
fs
repnz
mov
mov
lret
fs
cli
cwtl
sbb
jl
sbb
lods
mov
sahf
in
or
push
jb
cmp
fstpl
and
mov
or
inc
scas
sbb
daa
mov
or
sbb
lahf
mov
rclb
xor
xchg
fsubs
fistpll
jp
cld
repnz
es
cld
dec
inc
into
out
repz
inc
push
pushl
xchg
xchg
pop
xchg
mov
sarl
ss
dec
in
aaa
movsl
ret
arpl
and
imull
repnz
dec
and
lea
sbb
notl
mov
add
sbb
les
adc
pushf
fsubrl
jle
push
pushf
add
lock
or
cmpsl
xchg
mov
fisubs
rcrl
push
jecxz
jp
hlt
hlt
xor
data16
int
pop
pop
mov
push
aaa
test
xchg
je
jmp
mov
push
out
inc
cld
cld
stc
cwtl
aas
fs
insl
sub
cmp
push
jno
mov
pop
lret
xor
loop
ficoml
stos
cmpsl
jmp
jl
aad
and
aad
loopne
xchg
fwait
jmp
sub
scas
aam
jge
lock
addb
js
out
fbld
and
mov
stos
or
pop
jle
pushf
xor
in
fcoms
xor
add
mov
test
xor
loopne
xorl
pusha
push
cmp
push
out
lcall
repz
mov
lret
fs
fldt
filds
insb
imul
popf
lcall
lock
pusha
add
adc
dec
sbb
cld
sbb
addr16
cmp
iret
sbb
xchg
adc
or
insb
jae
aam
sbb
sbb
sti
icebp
test
out
dec
pop
add
pop
les
and
loopne
mov
shll
mov
dec
imul
mov
adc
test
outsl
mov
mov
jle
jo
jmp
ja
pop
cwtl
mov
pop
pusha
sahf
mov
pushf
pop
repz
daa
ss
mov
mov
sub
movsl
das
pushl
jno
movsb
shrb
xor
pop
sub
push
cli
push
shrl
jecxz
es
and
push
push
mov
xchg
adc
sbb
lods
adc
rcl
jmp
add
mov
pop
out
inc
rcrb
mov
bnd
and
or
push
xlat
movsb
jmp
cmp
lods
jg
pusha
ret
mov
inc
mov
mov
jg
js
imul
cmpb
adc
jbe
leave
or
ljmp
rol
roll
ret
out
mov
mov
fidivl
ret
repz
inc
xchg
popf
mov
push
fidivrs
inc
dec
popa
and
sbbb
sub
jl
out
cmpsb
mov
mov
pop
sub
push
ss
mov
aaa
sbb
jmp
or
pop
aam
or
cmp
sbb
data16
push
lock
lcall
mov
jno
mov
or
xchg
out
frstor
and
pop
adc
int
rcrl
mov
les
out
xor
mov
rcrl
aaa
mov
cli
pop
loopne
inc
popa
push
and
dec
sbb
lret
sbb
mov
sub
add
icebp
in
inc
or
call
push
and
cmpl
fcoml
sbbl
inc
push
insb
and
call
pop
add
jb
sbb
pusha
std
adc
stos
and
xor
pop
mov
mov
call
dec
push
mov
mov
mov
mov
dec
orl
aas
push
mov
dec
jae
sub
repnz
sbb
sbb
fucompp
arpl
push
daa
insl
shlb
add
or
ficompl
out
js
int3
lret
je
fsubs
test
mov
adc
mov
cmp
jne
mov
ja
ja
push
pop
xchg
pop
jmp
jae
hlt
arpl
pop
adc
mov
imul
cltd
jmp
out
mov
leave
ds
sub
rcrb
pop
imul
mov
add
nop
lock
call
loope
popf
cs
push
insl
jb
je
pusha
cmpsl
sbb
dec
mov
mov
push
push
or
jmp
imul
cwtl
inc
sub
or
mov
enter
lret
out
mov
fnstenv
stos
xor
push
xchg
cltd
lods
outsb
push
mov
jecxz
pushf
int3
pushf
std
loopne
lock
fisttpl
adc
xlat
roll
loopne
lods
mov
xor
mov
push
mov
cmp
bound
cmpsl
testb
ss
and
shrb
mov
in
sub
cmp
sbb
pop
loop
mov
stos
pop
aad
mov
push
mov
lods
xchg
rolb
nop
mov
iret
dec
jmp
add
mov
mov
sahf
adcl
push
jmp
pop
and
loopne
imul
xor
mov
dec
pop
pop
jl
inc
push
jns
dec
incl
push
mov
gs
mov
xchg
xor
adc
inc
mov
adc
ljmp
sub
xchg
cmp
dec
jecxz
in
xchg
and
repz
stos
sbb
call
add
dec
rclb
mov
cs
gs
fists
cli
xor
adc
push
aad
cld
push
imul
xor
dec
add
imul
adc
sbb
lods
pop
addr16
loopne
scas
push
icebp
in
into
mov
cmp
sub
sub
jle
add
pop
or
setge
cwtl
dec
lock
and
shrl
xchg
bnd
pusha
orb
push
jbe
jno
nop
ds
cmp
push
fs
jbe
mov
cmpsl
outsb
mov
les
mov
inc
ljmp
xor
je
lahf
xor
les
pop
sub
mov
data16
mov
mov
mov
mov
arpl
jp
insl
xor
dec
iret
mov
sub
lret
push
xchg
mov
or
add
pop
xchg
insl
hlt
dec
loop
fcoml
sbb
imul
mov
bound
and
or
enter
sbb
icebp
sbb
mov
fs
test
clc
shll
dec
repnz
push
jnp
daa
in
cmp
inc
arpl
inc
rorl
pusha
das
jbe
arpl
add
push
pusha
add
push
cltd
in
leave
xor
arpl
pop
jnp
sbb
pushf
add
addr16
push
pop
mov
adc
out
push
mov
or
fldenv
adc
js
push
sub
lea
cmp
or
test
pop
test
mov
mov
mov
shrb
stos
inc
out
add
aaa
cmp
rol
push
pushf
and
xor
xchg
mov
xchg
das
mov
sbb
push
add
hlt
add
enter
inc
loopne
insl
sub
mov
adc
test
jg
subl
mov
arpl
stos
pop
es
imul
clc
cmp
cltd
sub
cmp
mov
mov
call
mov
pop
loope
out
and
clc
fwait
rclb
adc
pusha
pushf
or
aad
mov
aad
push
inc
fdivs
xor
mov
pop
iret
inc
pop
js
sub
int
mov
popa
pushf
push
shrl
int
imul
jg
cmc
xor
scas
cltd
jmp
push
mov
in
pop
cmpsb
push
push
xor
divl
rcrb
insl
pop
test
lds
mov
sub
std
imul
hlt
xor
addr16
push
cmpsb
cmp
rcll
pop
filds
cld
es
add
mov
clc
and
push
stos
outsb
inc
mov
mov
notl
inc
mov
inc
and
fwait
inc
or
stos
fldt
mov
cmp
dec
lods
ficomps
pushf
mov
jecxz
xor
jle
dec
jns
loopne
mull
xchg
add
mov
cmp
idivb
lds
sahf
push
jle
lds
xchg
sarl
into
mov
or
xchg
ds
inc
push
scas
xchg
push
dec
mov
xorb
inc
into
jb
jo
xchg
sub
push
test
jmp
stc
dec
pushl
je
dec
jp
fsubl
subl
lahf
push
std
lds
scas
sub
loop
mov
push
cwtl
add
imul
and
add
adc
cmp
iret
mov
fdivr
xor
std
jl
sbb
stos
scas
loopne
push
dec
rolb
xor
mov
es
outsl
movsl
add
incb
les
fistpll
in
std
imul
scas
out
mov
fldl
mov
loop
and
cmc
lods
jl
pop
gs
sti
push
repnz
xchg
popf
stos
aaa
xchg
fbstp
jl
or
lea
xor
mov
push
cli
pop
pop
adc
loop
scas
and
jmp
jp
out
pop
and
and
icebp
lea
dec
mov
pop
aaa
xor
or
mov
loopne
mov
pop
sub
push
fs
mov
mov
jl
aam
cmc
dec
rclb
popa
test
xor
test
cmp
push
popf
or
cmp
imul
es
in
adc
sbb
mov
lds
push
ficompl
adc
dec
adcb
add
pusha
sti
nop
add
add
out
inc
adc
mov
popf
pop
cmp
repnz
lahf
stc
mov
repnz
fisttps
lret
enter
xlat
push
lret
xor
xchg
pop
or
adc
lds
inc
in
xor
lret
pop
incb
icebp
out
pop
testb
lds
push
sbbb
test
dec
stos
sub
lock
aad
xlat
cmp
aad
pop
add
js
popf
ds
add
out
push
jmp
vmaxsd
inc
aaa
cltd
xchg
jp
sub
xchg
bound
jecxz
test
pop
xchg
and
mov
cwtl
jge
pop
insl
dec
xchg
sub
mov
out
cmc
sub
lds
push
mov
cmc
jno
outsl
mov
mov
pop
iret
clc
mov
test
sbb
insl
adc
shrl
push
adc
jo
mov
add
jge
inc
mov
jmp
scas
call
outsb
or
jle
and
cmpsb
das
xor
dec
xor
iret
xchg
xor
dec
inc
pop
adc
lret
insl
dec
or
aas
adc
loope
mov
jbe
xchg
mov
dec
mov
pop
pop
in
mov
push
dec
jb
jbe
sbb
fldt
inc
jp
pop
mov
in
mov
js
ret
dec
pusha
mov
mov
test
loop
inc
lds
cwtl
repnz
xchg
scas
jb,pt
iret
and
push
stos
movsb
popa
cmpsl
call
jmp
fs
call
pop
sub
xor
stc
in
push
xchg
push
into
or
sub
jle
mov
pop
xchg
mov
fnsave
or
push
dec
xchg
test
push
movsb
jae
or
push
sbb
dec
arpl
pop
out
dec
pop
mov
lret
add
std
das
jns
out
lahf
adc
fmull
bound
dec
dec
sbb
lcall
inc
push
push
ret
and
lea
lds
jp
xchg
mov
out
repz
and
mov
dec
cld
or
popf
add
sbb
dec
sub
leave
leave
rcll
das
push
pop
sub
push
shrl
jns
cmpsb
push
pop
mov
pop
xor
or
cmp
mov
sub
clc
push
mov
mov
and
mov
sahf
sbb
xchg
fidivrl
sbb
xor
mov
popa
imul
hlt
rcll
inc
aam
jmpw
jmp
pop
pop
daa
adcb
jmp
pop
pop
sbb
bound
mov
sub
cli
xlat
pushf
je
push
pop
idivb
out
cmpsb
mov
inc
stos
sbb
mov
and
push
enter
sbb
mov
or
dec
or
mov
out
sbb
jmp
test
orb
lea
pslld
jb
rclb
sub
mov
ljmp
in
inc
mov
pop
inc
inc
je
dec
pop
cmp
test
mov
sub
insl
movsb
sar
lcall
or
ss
pop
shr
cmp
mov
inc
repnz
pushf
cmc
xchg
mov
fnsave
es
pop
adc
jge
repnz
push
mov
loopne
iret
xlat
bnd
jo
jg
pop
mov
cmp
mov
add
das
add
int3
jmp
daa
fistpl
push
sbb
cmp
cmp
dec
inc
mov
out
test
push
in
mov
outsl
mov
push
mov
fistps
movsl
data16
lret
clc
push
sbb
das
rcll
addr16
xchg
ss
testl
sti
jle
jb
shll
add
enter
mov
decl
mov
ljmp
fprem
int3
jne
xor
cltd
sbb
pop
cmp
sahf
xchg
push
pop
cs
fdivrs
inc
rorb
xchg
enter
pop
pop
push
xor
mov
fs
lock
nop
shrl
lret
cmpsb
enter
cs
mov
sbb
jecxz
test
aas
std
cld
roll
outsb
push
push
cmp
imul
enter
fnstcw
jbe
lret
and
mov
cmp
mov
bound
or
sbb
mov
out
faddl
sbb
nop
in
icebp
cmp
mov
mov
ss
ss
sahf
jp
cmp
iret
mov
dec
leave
and
outsb
test
mov
cmp
stos
and
leave
sbb
push
testb
sahf
lods
add
stos
xchg
mov
fisttpl
mov
ror
cmp
add
mov
pop
pop
inc
and
mov
or
imul
je
call
mov
pop
fdivr
and
aas
mov
jg
addr16
and
push
inc
clflush
push
dec
pop
mov
aad
mov
jmp
xor
jbe
cmpsb
mov
inc
mov
rcll
xchg
lods
lock
popa
sub
and
lret
imul
repz
mov
and
and
mov
rorl
daa
negl
lcall
push
outsb
dec
orl
lcall
pop
xchg
sub
test
shlb
hlt
daa
inc
fs
aas
ffreep
jo
push
mov
jne
push
call
or
jae
fsubl
clc
lods
or
pop
push
movsl
push
push
jecxz
testb
loope
pop
mov
shr
clc
lret
cmpsb
aam
sbb
jno
bound
add
add
jb
xchg
adc
rcll
shll
sbb
rorl
outsb
jne
fcoms
jecxz
movsl
aaa
dec
dec
cmc
cmpsl
or
les
call
test
andb
pushf
movsl
outsl
loopne
cs
and
hlt
int
mov
std
lds
sbb
inc
pop
aas
dec
mov
xchg
das
dec
mov
mov
mov
inc
xor
push
aas
dec
int
cli
xchg
stc
pop
cmpsl
dec
mov
into
adc
cli
add
xchg
push
sti
inc
ss
repnz
mov
mov
sub
int
jae
call
cs
out
das
fisubl
data16
push
xor
sbb
dec
xor
test
test
rcll
dec
insb
push
popf
xchg
push
cmp
scas
mov
popf
push
jae
stos
pop
pop
out
mov
jmp
xchg
mov
xchg
es
dec
sbb
out
imul
jl
jge
je
test
ljmp
adcb
adc
jno
adc
ja
add
fdiv
push
std
stos
insb
and
push
dec
lcall
dec
pop
bound
mov
xchg
mov
imul
jl
xchg
ret
adc
inc
pop
mov
loope
fcomip
ljmp
and
cwtl
pop
mov
imull
mov
mov
cmpsb
notb
mov
jb
hlt
xchg
push
outsb
jb
lds
enter
js
xor
icebp
xchg
xor
mov
outsl
nop
ja
cmp
jbe
call
cmpsl
adcb
add
fbstp
jg
sub
repnz
lcall
aaa
stc
mov
movsb
cmpsb
jmp
idiv
int3
jmp
adc
notl
and
sbb
cmp
mov
call
mov
sbb
inc
sub
push
xchg
js
jl
lock
std
jmp
call
and
mov
ror
aas
jb
imul
add
mov
xor
jge
test
sub
pop
cmp
imul
lods
cmp
test
ja
sub
nop
xor
jns
dec
js
mov
ljmp
addr16
xchg
xor
push
movsb
pusha
mov
adcb
aas
clc
lahf
jmp
lret
loop
inc
je
add
movsl
stc
push
xlat
in
adc
pop
dec
push
push
dec
outsl
cmc
xchg
xchg
cmp
mov
cmpsl
pop
js
cmp
jp
pop
out
xchg
lcall
rcr
std
push
call
xchg
inc
and
xlat
loop
fdivr
jne
rcr
imul
add
dec
jae
shl
jg
iret
icebp
and
jnp
push
mov
sbb
icebp
cs
fs
stos
test
mov
lahf
and
xchg
std
pop
roll
fwait
xchg
mov
cwtl
lret
clc
imul
loope
out
fwait
push
lret
rorb
popa
in
rep
xchg
xorl
pop
dec
test
cmp
rolb
loopne
lods
and
cmp
jp
adc
inc
or
ljmp
movsl
cmp
mov
push
mov
or
cwtl
or
cmpsl
add
add
mov
and
inc
jbe
sub
scas
cmp
loope
sbb
inc
xor
dec
rcl
repz
cmc
lods
orb
mov
subl
jg
sbb
xor
repz
and
lahf
sbb
pop
sbb
popf
pop
lock
xor
or
leave
imul
and
mov
popa
sbb
push
shll
std
inc
rolb
lret
popa
xchg
xchg
xor
fstps
sbb
stos
imul
ficompl
mov
add
mov
sahf
pop
dec
aas
dec
push
mov
dec
ret
xor
cld
sbb
cltd
addl
jge
add
jb
scas
aad
xchg
jns
ficompl
pop
mov
or
test
and
inc
js
mov
mull
dec
arpl
out
mov
mov
pop
cltd
mov
cld
ja
mov
jno
rolb
cmp
fsubl
jae
and
lods
rol
jbe
mov
inc
test
ret
pcmpeqd
add
push
ret
rclb
push
hlt
cli
insl
std
xchg
mov
scas
or
enter
div
mov
je
jmp
sti
std
adc
mov
cmc
adc
jl
cmp
push
loopne
in
in
pop
mov
xchg
mov
dec
xchg
aas
into
movsl
inc
xlat
push
cmpsb
mov
fcomps
adc
ds
dec
jl
ja
into
pop
mov
mov
std
loope
loopne
cmpsb
mov
jmp
in
jl
adc
xor
cmc
pop
mov
sbbl
notb
movsl
pop
ljmp
push
mov
shr
inc
ljmp
add
and
dec
inc
imul
jle,pt
push
inc
std
out
dec
mov
jno
xchg
decb
int3
bound
out
adc
icebp
push
fs
or
loop
adc
cmp
sub
movsb
lods
mov
scas
divl
pslld
arpl
xor
push
out
adc
inc
mov
and
or
jno
ficomps
dec
pushf
fs
ds
pop
sbb
scas
imul
ja
hlt
xor
sub
sar
sti
movsb
jb
rclb
sar
add
in
and
xchg
jne
add
mov
repnz
or
sbb
cmp
fnsave
cwtl
cmp
xchg
test
shll
nop
pop
in
scas
js
cmp
leave
mov
in
ret
insb
daa
popa
pop
and
les
call
lret
imul
dec
fisubs
xchg
mov
mov
jae
loopne
mov
sbb
fistpll
jle
gs
pop
lret
adc
sbb
lcall
pusha
xchg
jmp
xchg
mov
dec
insl
pusha
or
sbb
call
or
rcr
xchg
bound
out
fiadds
out
stos
lret
cld
jnp
jmp
notb
dec
pop
xor
xchg
jno
pop
aam
jmp
ss
leave
sbb
nop
dec
sub
mov
rcr
insl
enter
jle
loopne
pushl
ja
jns
pop
or
mov
inc
mov
aaa
sbb
faddl
add
mov
sbbl
sbb
imul
pop
outsl
loope
gs
xchg
adc
xor
xlat
jno
bound
imul
and
cmp
mov
jns
aas
js
in
lds
movsl
add
or
push
call
xor
les
imul
decl
mov
xor
xchg
and
mov
bound
dec
insl
jne
loope
mov
push
test
push
fwait
and
jecxz
add
mov
adcl
adc
mov
outsb
and
stc
and
pop
in
add
repnz
orb
mov
inc
push
mov
add
mov
aaa
test
add
test
jae,pn
les
mov
or
push
aad
xchg
pop
fisubrs
mov
nop
sub
rolb
inc
or
push
lods
aas
push
rcrb
pop
cmpb
push
pop
pop
icebp
push
xchg
mov
inc
adc
push
jl
push
inc
jmp
add
cltd
std
or
jnp
in
xchg
imul
cmp
out
cmc
dec
xor
jne
fs
ficoms
mov
jle
pop
fsubrl
dec
adc
int
mov
stos
sti
movsl
adc
and
je
mov
test
mull
andb
jge
incb
add
add
mov
outsl
dec
mov
fs
xchg
aad
mov
jp
add
xor
adc
in
in
hlt
jo
mov
adc
add
test
mov
push
push
ss
fcoms
fmull
or
lock
cmp
xchg
out
std
sub
and
lea
mov
sub
cld
inc
xchg
jae
and
cmpl
xor
inc
sbb
sub
addr16
push
and
sbb
mov
stos
loope
inc
adc
pushf
out
jmp
jno
loope
or
enter
inc
cltd
loope
inc
addr16
dec
sub
lahf
mov
xor
mov
adc
push
jae
mov
adc
or
popa
pop
lret
ret
xchg
inc
inc
xor
pop
mov
or
mov
lea
push
push
pop
cltd
and
and
test
ror
cmp
push
mov
loope
xor
ss
jnp
incb
add
jb
sar
das
not
add
daa
std
insl
loope
popf
cmp
rcrb
dec
jno
and
mov
dec
sub
cmpsb
sbb
scas
stos
xor
sbbb
cmp
push
lea
sahf
push
and
lcall
aas
or
dec
mov
sub
mov
loope
cmp
int
fcmovnu
lods
mov
cs
notl
test
pop
mov
idivb
sub
rorl
movsl
shll
movups
and
sbb
int
aaa
inc
mov
out
cmc
sbb
js
ljmp
push
cmp
rclb
cmp
dec
movsl
out
mov
clc
jnp
imul
cmp
inc
jl
and
sti
lods
ret
xchg
xor
shll
push
xchg
and
lea
xchg
test
cmp
mov
cltd
lahf
mov
lock
stc
and
mov
lahf
bound
xchg
inc
mov
and
arpl
dec
lahf
add
sub
jae
sbb
mov
xchg
lcall
cmp
rcrl
in
cmc
stc
mov
mov
sub
ja,pn
push
inc
lods
aas
cmp
xor
add
imul
es
push
adc
push
fs
jecxz
fwait
insb
cmp
mov
lock
popl
inc
push
mov
dec
es
out
fwait
out
lahf
ljmp
fdivl
sbb
inc
xchg
add
adcl
cmp
mov
mov
mov
mov
push
and
sbb
loop
dec
insl
inc
ret
xchg
pop
icebp
cld
clc
sub
movsb
addr16
push
mov
sahf
in
fcoms
fdivs
mov
mov
xor
mov
xchg
addr16
fiaddl
pop
jbe
out
add
inc
adc
and
dec
mov
out
fnstsw
add
mov
push
sti
and
mov
ret
sbb
int3
pop
inc
int
mov
cmpsb
mov
jae
cmpsl
mov
inc
popa
sahf
add
sub
push
adc
incl
iret
mov
mov
imul
bnd
mov
out
lahf
shll
decb
sub
outsl
xchg
cmpsl
or
push
or
mov
dec
sub
sbb
xor
int
push
repz
movsb
mov
hlt
dec
loope
ret
aam
dec
addr16
xorb
xor
pop
js
add
aad
jle
mov
aam
pop
sub
dec
push
inc
sbb
cld
sahf
cmc
bound
xor
mov
fcmovb
stc
sub
push
out
xchg
dec
lods
adc
int3
pop
std
pop
lret
add
add
add
jmp
push
pop
pop
or
and
lret
mull
aad
xchg
xchg
icebp
pushf
mov
aaa
lds
loope
pusha
loop
or
jne
or
outsl
pop
push
lret
mov
mov
push
ljmp
mov
movsl
movb
sbb
adc
clc
cmpsb
pop
xchg
lret
dec
cmp
push
leave
call
jb
and
xorb
add
sub
movsl
jbe
aad
jno
pop
push
lret
rol
sub
xchg
and
clc
sbb
mov
mov
mov
and
in
ljmp
push
jb
bnd
out
mov
sti
push
notl
movsb
dec
out
sub
xor
adc
in
mov
add
inc
and
push
test
add
lds
jne
shlb
mov
ret
mov
jle
push
push
and
in
jl
push
add
rolb
shr
rol
popf
and
push
test
xlat
into
clc
outsl
mov
mov
das
loopne
stos
daa
test
cmp
ret
cmp
icebp
xor
and
jae
cmp
stos
mov
gs
into
or
cld
orl
out
or
cmpsb
ljmp
movsb
push
push
out
add
outsb
adc
pop
dec
add
xor
addr16
js
or
mov
call
pop
cmpsb
pop
mov
or
std
sub
xchg
das
ret
fisubrs
dec
adc
arpl
xor
hlt
cmp
dec
cwtl
mov
out
mov
xor
or
testl
out
pop
cmp
inc
lods
or
xchg
fnsave
outsl
xor
inc
fstl
jg
jne
and
fwait
stos
pusha
cmp
dec
xor
mov
mov
xor
loop
cli
jmp
popa
cmpsb
pop
icebp
xor
push
dec
xchg
or
int3
gs
or
fimuls
sbb
xor
shll
scas
loop
jb
xor
dec
cltd
xchg
cmp
jge
inc
mov
out
popf
ficompl
cmp
jmp
stc
push
push
cmp
rcrl
aad
leave
lds
xchg
mov
adc
pop
xchg
cltd
pop
pop
and
mov
jg
sub
pop
mov
or
cmpsb
shlb
mov
lds
insl
or
xchg
jbe
sbbb
ficompl
in
movsb
pusha
dec
adc
pop
into
dec
adc
adc
cmpsb
cmp
jno
xchg
xorb
and
bound
xor
ret
lret
adc
mov
push
add
add
mov
lods
or
push
dec
cmpsb
es
jge
cs
mov
test
sub
inc
popa
mov
add
lahf
clc
cmp
xlat
lahf
mov
pop
ret
adc
lret
lret
mov
xchg
push
xor
adc
add
or
push
stos
xchg
sbb
decb
lock
xchg
popa
into
dec
js
insb
and
popa
add
xor
js
clc
jmp
js
cmp
adc
xor
xor
cwtl
mulb
daa
jmp
out
sbb
pop
xchg
std
rcll
xor
add
fstps
movsb
ss
xchg
cs
clc
imul
and
mov
in
pop
into
fildl
test
add
fcomip
cmp
adc
ret
xorl
adc
cltd
rcl
mov
shr
setle
popa
cmp
cmp
sbbb
into
mov
pop
adc
in
pop
inc
pop
cmp
sbb
lods
jno
xchg
not
jge
imul
push
into
incl
jp
and
fucomi
mov
movsl
negl
xchg
dec
mov
push
adc
sarl
mov
sbb
movsl
cwtl
adc
imul
sub
adc
mov
sbb
mov
enter
sbb
inc
pop
flds
pop
es
aad
and
js
daa
push
outsb
inc
pusha
or
fmul
out
scas
adc
xchg
js
sub
fs
push
add
in
dec
cmp
or
fwait
lds
push
adc
insb
sbb
icebp
cmc
fstl
dec
aad
xchg
stc
and
hlt
sarb
adc
inc
jnp
in
repnz
mov
sub
and
dec
lock
sub
ficoml
aaa
out
stos
mov
cmp
pop
std
repz
or
push
lahf
lods
nop
adc
add
adc
and
sahf
gs
cmpsl
fsubs
out
dec
hlt
sahf
sti
aas
sbb
push
cli
lods
into
insb
or
pop
je
sti
cltd
mov
das
or
jb
cmp
mov
push
dec
inc
dec
xor
loop
sub
lods
insb
rol
into
stc
inc
movsb
jge
mov
outsb
not
int
or
dec
sbb
in
dec
mov
jne
cmp
into
dec
lret
or
pfrsqrt
test
loop
roll
pop
fwait
mov
pop
les
dec
inc
test
dec
adc
in
xchg
imul
pushf
push
or
cmpsb
xor
pusha
outsb
int
inc
ret
cmp
iret
adc
fwait
test
or
pop
add
pop
push
orb
adc
repz
add
fdivr
insb
add
mov
jbe
scas
movsb
clc
jmp
mov
data16
aaa
mov
dec
mov
leave
xor
mov
xor
cli
lea
fcom
jo
insl
fisubrs
add
jo
push
lahf
dec
jmp
jg
cmp
test
js
mov
testb
xchg
movsb
lret
pop
or
nop
imul
adc
adc
cmp
aad
jg
dec
sbb
out
daa
pop
mulb
test
insl
cmp
lods
adc
cmpsl
sub
jne
insb
lods
rcl
or
fisubrl
xlat
insl
xchg
push
xchg
insl
cmpsl
xchg
cltd
adc
and
and
push
push
sub
xor
dec
in
jge
jo
pop
push
daa
mov
dec
cmpsl
and
mov
sbb
movsb
test
lret
mov
or
data16
sub
jne
push
add
outsl
push
push
scas
mov
xchg
xor
outsl
mov
inc
fs
push
les
mov
push
xor
repnz
call
test
mov
add
dec
outsl
int
pop
add
fcomps
add
push
xor
jp
mov
jge
adc
mov
jg
mov
test
xchg
mov
leave
mov
push
insl
mov
mov
repz
jecxz
add
jae
dec
cwtl
xchg
mov
ret
mov
xchg
mov
cwtl
lret
pusha
sbb
aad
sub
add
call
lods
xrelease
jmp
aaa
outsl
add
mov
adc
sbbb
sbb
and
movsl
sti
repz
jns
icebp
insb
cmp
or
sti
push
dec
leave
mov
and
adc
sbb
xchg
push
and
test
cmp
dec
cmc
pop
rorb
cmpsl
aad
cld
int
jmp
sub
inc
addr16
mov
call
notl
insb
xchg
mov
rolb
xor
sbb
popl
jge
out
mov
shr
popa
pop
xor
insb
push
insl
sti
fmulp
pop
mov
mov
out
sbb
cwtl
mov
sbb
mov
push
fwait
xchg
mov
cli
popa
jg
mov
mov
ds
cli
or
push
xchg
xchg
aam
test
ljmp
add
xchg
push
xor
fstl
mov
call
out
pop
inc
insl
insl
cmp
mov
out
sarb
je
lods
mov
fstps
xchg
sub
mull
and
daa
cmpsb
mov
je
sub
lods
xor
or
cmpsb
add
add
lods
popf
out
out
dec
pop
pop
mov
cmpsb
pop
mov
je
push
mov
mov
cli
jne
sub
insl
pop
jae
cmc
jmp
cli
je
sbb
inc
and
orb
jbe
insl
jnp
mov
jns
mov
xchg
inc
jns
mov
adc
imul
and
insl
xor
mov
xorb
push
dec
nop
sbb
push
fsubl
mov
je
clc
ret
sub
int
clc
mov
imulb
dec
pop
inc
pop
scas
setle
add
mov
ror
pop
addr16
pop
jg
ss
jecxz
add
or
pop
repnz
lret
xor
in
dec
ja
cmp
or
jecxz
and
mov
mov
lods
push
bound
mov
sbb
jecxz
idivl
cmp
or
jnp
clc
aam
or
pushf
mov
test
push
das
icebp
shr
inc
pop
push
test
xor
jp
sbb
fisubrl
jnp
lods
or
into
jne
ss
mov
sahf
mov
or
jae
inc
clc
nop
jp
rcl
inc
mov
cltd
hlt
int
outsl
cmpsl
mov
shll
xchg
test
pop
pop
cmp
or
or
jecxz
lods
loop
inc
and
or
cmp
ss
xchg
dec
lock
scas
adc
pop
push
mov
mov
hlt
insl
sbb
std
in
es
lahf
lret
testl
xor
push
nop
sub
shrb
inc
je
mov
mov
sti
lods
in
jge
jns
insl
fbstp
inc
jb
push
out
arpl
lock
in
jbe
push
iret
pop
jnp
lods
pop
push
sbb
insb
xor
ljmp
loopne
mov
push
mov
inc
rorl
mov
push
jp
test
mov
mov
cmp
in
sbb
aas
sub
aam
int
push
xchg
cltd
pop
lcall
xor
icebp
iret
mov
jnp
xor
pop
ret
jb
stc
frstor
vcomisd
in
ljmp
in
lods
das
mov
fcmove
push
dec
xor
xchg
leave
sbb
mov
out
mov
mov
inc
stos
not
cmp
xor
xlat
pop
cld
ficomps
faddl
subl
and
insb
stc
pop
add
adc
dec
add
dec
rcll
addr16
jns
repnz
xlat
cld
pop
ffree
test
mov
jbe
roll
mov
loop
stc
jmp
adc
loopne
aaa
inc
xchg
movsb
inc
rolb
mov
lods
pushf
les
insl
mov
dec
dec
jno
xor
gs
and
loope
dec
sbb
loop
pop
in
int3
sub
sti
in
dec
shrl
dec
sbb
or
fdivrs
xor
cmp
jns
test
jb
push
dec
push
xchg
xchg
popf
inc
shr
mov
cli
or
cmp
scas
cmc
and
inc
cmp
xchg
jp
testl
hlt
mov
mov
pusha
cmp
add
dec
mov
inc
stos
loop
add
jno
inc
jne
jne
cs
sbb
repnz
pop
mov
add
mov
or
out
nop
xchg
fldcw
inc
xlat
scas
xchg
in
icebp
jmp
push
test
in
jne
jns
add
imul
repz
adc
jbe
popl
xlat
test
dec
dec
push
pop
mov
or
sarb
cmp
lea
cmpsl
inc
aas
vsqrtps
call
jle
addr16
cmp
fldenv
ds
cmpsb
inc
jns
insl
xor
dec
push
push
test
cltd
xchg
xchg
jmp
xchg
dec
sti
lods
jns
les
mov
ja
jno
ficoml
cmp
cmp
xchg
loopne
or
daa
adcb
xchg
xor
loop
push
es
mov
std
mov
lock
in
insb
xor
mov
inc
push
data16
adc
adc
loopne
jo
add
xor
stc
into
mov
jg
andb
sub
lock
sub
adcl
mov
xor
ret
inc
lds
jmp
jg
cltd
sbb
ret
push
add
das
leave
inc
fs
call
dec
lret
mov
lea
nop
sub
sbb
outsl
add
cmp
pop
out
gs
push
rorl
xchg
xchg
shlb
in
ret
rcr
jns
sub
lahf
sub
ficompl
sbb
rolb
mov
push
les
cld
test
add
xchg
xor
sub
add
cmp
mov
fdiv
adc
loope
lret
push
mov
add
loop
xchg
rcl
lods
adc
jge
mov
xchg
cmp
push
popf
mov
mov
fstp
ror
jne
daa
ret
sub
dec
cmp
scas
lfs
pop
cli
jae
mov
jae
icebp
ficomps
subb
stc
lret
mov
sub
insl
shrb
imul
sub
jg
dec
and
mov
popa
pop
loop
fisubrl
and
pop
in
outsb
pop
negb
and
loopne
loopne
cli
cs
flds
aam
das
push
adc
sub
rorl
cmpsb
das
mov
aas
je
push
dec
adc
lahf
cmp
xchg
pushf
xor
sub
sbb
push
test
lods
stos
aad
std
sbb
enter
push
pop
js
push
or
nop
or
cld
xor
mov
fiadds
mov
fldt
xchg
add
mov
cmp
test
scas
and
std
xlat
sti
fcoml
int3
in
fistpll
mov
jne
sub
push
test
pop
les
sbb
mov
bound
gs
or
push
mov
dec
jno
sub
ja
xor
iret
xor
aam
fstl
jb
cs
mov
mov
mov
aaa
cmp
pushf
cli
je
je
fcomip
inc
xchg
mov
dec
sub
add
push
int3
mov
mov
dec
pop
ss
pop
mov
in
inc
dec
in
shlb
add
jecxz
in
testl
xor
add
xchg
cmpsb
popf
inc
jp
pop
clc
xchg
fsub
push
mov
stos
mov
enter
int
int3
shr
std
cs
fldl
dec
dec
popf
jmp
call
sub
cmpsl
push
mov
test
stos
insl
jg
je
cmp
push
imul
pop
xchg
repnz
pop
loop
mov
mov
ja
repz
sub
mov
popa
or
nop
imul
inc
dec
or
push
aaa
cld
mov
pop
and
lea
pop
lcall
cmp
xor
cmp
xchg
mov
jmp
push
cmpsl
dec
mov
lahf
push
jge
fwait
inc
ds
mov
sar
pusha
or
mov
in
clc
cmp
fisubs
in
sub
into
test
jns
aas
jb
pop
sub
aam
fiadds
jno
sub
ja
and
xchg
xor
addr16
add
mov
jne
fistpll
jmp
lret
enter
addb
mov
mov
sub
dec
cli
sti
sub
fstpt
int3
xchg
pop
outsb
push
xchg
ret
cs
outsb
loopne
out
mov
cwtl
imul
mov
scas
jae
or
ret
bswap
pop
das
insl
adc
sti
cltd
jmp
icebp
mov
mov
insl
and
jmp
or
stos
out
pop
mov
mov
or
mov
inc
testb
ret
out
xor
dec
pop
enter
jbe
and
adc
test
imul
loopne
xchg
popf
test
pop
sbb
dec
add
std
sbb
mov
mov
jmp
stc
xor
ljmp
sti
mov
cmc
loop
fldl
cmpsl
mov
loope
mov
je
jl
subl
sub
sub
out
and
imul
mov
jns
cli
nop
out
sbb
jnp
add
jnp
test
push
out
mov
fdivr
mov
jno
jmp
sbb
pop
dec
mov
sbb
cmp
in
mov
jecxz
fdiv
daa
aas
mov
or
das
out
lods
push
mulb
adc
push
adcb
xchg
push
mov
ret
jp
mov
mov
lock
jae
mov
mov
mov
push
mov
add
xchg
stc
lods
xor
rolb
push
sbb
cmc
test
pop
sti
or
xchg
test
outsl
mov
stos
aad
xchg
mov
into
pop
xchg
push
ret
pop
pop
sub
pop
into
cmc
or
sti
cld
jae
inc
mov
jb
inc
mov
subb
jmp
lcall
cmp
dec
jl
outsl
or
pop
lock
popa
xchg
push
mov
sar
outsl
jl,pt
nop
inc
cs
xor
jb
pop
pop
sub
scas
lcall
dec
das
cmp
repnz
xor
test
mov
cmpb
xor
test
xchg
jb
jns
test
xchg
adc
scas
scas
jl
xor
lret
xchg
shl
lahf
adc
xor
insb
add
stc
aas
mov
jnp
or
jge
lods
sbb
mov
push
add
adc
imul
loope
sub
ja
mov
mov
cmp
popa
aad
int3
sub
insl
mov
loope
jbe
pop
cmp
lock
in
or
movl
cmpb
pop
xor
lock
mov
movsl
js
ds
push
dec
leave
jo
shlb
mov
negl
mov
adc
xchg
les
les
stc
adc
mov
repnz
es
dec
jp
xchg
xchg
adc
mov
xchg
jmp
dec
lds
fldcw
xorl
push
inc
and
int3
leave
in
out
ret
hlt
mov
loop
int
pop
je
lret
add
ret
test
pushf
cs
leave
cmp
lea
gs
hlt
sub
cmp
dec
adc
test
ror
cld
xor
scas
fimull
in
push
call
outsb
xchg
pop
fidivrl
cli
add
push
loopne
int
ljmp
in
loop
daa
mov
jmp
xor
dec
fucomi
jl
jns
mov
pop
xchg
ret
jl
and
mov
aas
fisubl
xchg
jmp
add
fsubl
fldenv
adc
addb
mov
push
lret
push
dec
sbb
and
adc
insl
sbb
add
pop
mov
out
mov
in
push
cltd
pushw
push
mull
cmp
cmp
scas
and
movl
mov
mov
xchg
sti
lods
ljmp
xchg
cmp
int
push
lods
mov
shrl
pushf
rcll
jg
mov
cmp
movsl
pop
leave
xchg
lock
jo
dec
dec
cmpl
mov
popf
add
pop
cmpsb
fsubrl
shrl
gs
cwtl
out
sub
adc
jns
sbb
push
sarb
aas
int3
inc
aam
scas
ja
inc
push
xor
jbe
popf
xchg
cmp
in
shlb
xor
cmc
jmp
jne
sbb
out
lret
stos
inc
in
push
insb
xlat
in
pushl
inc
push
jp
mov
push
mov
push
cmp
add
adc
fdivrs
stos
leave
imul
xor
pusha
fdivr
and
mov
stos
jmp
idiv
cwtl
adc
lahf
sti
shrl
shll
and
push
jnp
shl
loope
jno
mov
lea
cmp
xchg
pop
pop
fbld
fimuls
lds
fnsetpm(287
push
adc
mov
iret
jae
xchg
xor
sub
fsubrp
cmpsb
jle
jo
adc
xor
mov
enter
inc
push
jne
pop
cmp
lea
imul
dec
cmp
add
rcll
inc
mov
or
and
adc
push
sbb
mov
xor
out
mov
add
mov
xchg
add
aam
mov
or
aad
sub
jmp
icebp
rcrb
sub
scas
ss
xor
test
sbb
imul
push
jb
mov
mov
andb
fwait
ja
shll
jmp
dec
inc
dec
inc
inc
mov
inc
scas
mov
xchg
push
ret
sbb
adc
add
cmp
dec
add
fidivl
mov
mov
pop
mov
out
jge
add
cmp
cmpsb
xor
cmp
lret
jecxz
ds
out
dec
dec
insb
push
and
sbb
ljmp
mov
xchg
fdivp
inc
jnp
loop
mov
test
mov
cmpl
cmp
pop
fcmovnu
dec
mov
dec
pop
and
fisubrs
icebp
mov
cmp
jno
insl
add
add
test
mov
sbb
outsl
pop
lea
mov
pop
or
adc
in
and
xor
xor
sbb
ds
loop
dec
loopne
fidivrs
pop
fidivrs
jp
aaa
and
push
addr16
loop
pop
mov
pusha
mov
div
andl
sbbb
lret
pusha
int3
stc
sbb
mov
ds
add
add
sbb
push
fsub
shrl
ljmp
repz
cmpsl
mov
hlt
sub
inc
scas
out
mov
push
and
dec
outsb
xor
pop
scas
adc
sahf
xchg
repnz
or
ljmp
in
mov
loop
and
mov
bound
xchg
jae
repz
lea
out
dec
cld
or
pusha
pop
xchg
xor
mov
js
add
das
lret
scas
push
adc
into
xor
stos
mov
and
lcall
and
jne
sub
in
ds
inc
xchg
lcall
push
lds
fidivrs
cmp
sar
mov
adcb
jbe
iret
pop
xchg
in
cs
xchg
negl
add
ja
daa
sarb
cmpsb
push
pop
pushf
pop
pop
jne
scas
cmc
xor
cmp
sbb
repnz
fimull
mov
add
loope
or
mov
sar
ja
mov
loop
cli
or
or
and
outsl
xor
mov
lahf
lret
loope
inc
scas
fneni(8087
lret
jb
mov
test
mov
ret
pop
inc
mov
repnz
ja
add
add
test
cs
ror
xchg
subl
mov
mov
mov
inc
mov
mov
cmp
cmp
sub
imul
or
or
fwait
cmpsb
push
xchg
xlat
repz
inc
fnstsw
jmp
fcompl
mov
xchg
stos
cld
xchg
cltd
out
cs
in
or
cli
insl
addr16
pop
testl
adc
int
out
imul
lcall
lods
aaa
inc
jae
dec
cmc
bound
push
mov
and
mov
cmc
push
push
mov
sbb
xchg
cld
repz
jbe
xchg
inc
jl
enter
or
sarl
push
rcll
pop
cwtl
sahf
pop
rcll
mov
rcrl
push
aam
pop
mov
or
out
jp
cltd
imul
sbb
jge
cmp
and
xor
in
mov
cmp
inc
test
sub
aad
pop
lret
mov
mov
jg
inc
in
mov
lcall
add
gs
sub
enter
sbb
inc
out
jb
pusha
pop
cmp
mov
mov
cmp
cmc
pavgb
push
or
stc
pusha
insb
addr16
adc
sub
push
and
ret
jo
lods
getsec
push
sbb
push
and
sahf
mov
inc
sbb
jmp
xchg
sahf
pop
mov
fbld
dec
addr16
popf
addr16
pusha
inc
adc
hlt
scas
aas
xor
xor
sbb
fimuls
fs
push
dec
or
add
push
xchg
inc
mov
scas
nop
jle
movsb
push
mov
mov
push
lret
je
push
stos
int
vphaddudq
jp
shll
xchg
push
jle
icebp
or
and
data16
sarb
wbinvd
lds
sub
adc
cmp
jmp
and
sbb
xchg
cmp
mov
push
mov
mov
inc
into
mov
dec
bound
cmpsl
imul
sub
repz
repz
cmpsb
ror
andl
dec
outsb
or
imul
repz
aas
and
arpl
add
mov
and
add
adc
sti
into
cmp
add
add
sub
leave
repz
sbb
jp
adcl
inc
and
cmp
imul
or
mov
addr16
jns
adc
push
pop
out
jl
inc
inc
xchg
xor
dec
mov
int3
mov
mov
cwtl
repnz
adc
cmp
add
aad
out
cmp
mov
fidivs
mov
xor
push
push
and
add
shr
repnz
sbb
out
cmpsb
pop
movsb
cs
jg
in
pop
mov
lret
add
adc
sbb
mov
in
sbb
dec
mov
pop
lret
gs
jecxz
xchg
and
scas
lea
xlat
outsb
daa
cmp
dec
aad
into
out
inc
ljmp
adc
or
push
sbb
movsb
daa
testb
movb
mov
cmc
inc
inc
icebp
sub
stos
insl
mov
cli
inc
daa
cmp
push
mov
push
nop
push
mov
int
add
jp
cmpsl
xchg
nop
jbe
divl
xor
enter
jle
push
mov
aas
idivb
movsl
pop
lea
push
push
aam
data16
or
xchg
or
iret
jmp
sub
push
arpl
mov
xchg
repz
xor
cmpsb
mov
lods
sahf
pop
inc
sar
inc
decb
adc
popa
and
push
push
add
dec
add
and
or
pop
pop
dec
mov
push
mov
roll
int3
lea
xor
jns
rclb
insb
ds
cltd
cmc
mov
addl
mov
leave
and
gs
imull
mov
ja
dec
rcrb
pop
outsb
xor
push
loopne
es
mov
cmp
sti
xchg
push
imul
mov
mov
jmp
nop
out
out
pop
jp
sbb
push
out
or
sbb
xchg
iret
jge
xchg
popa
test
in
lret
cmp
adc
jmp
mov
xor
pop
xchg
xchg
fwait
movlps
ss
mov
sub
mov
mov
and
and
adc
and
shll
push
inc
xor
pop
sbb
loop
mov
dec
stos
loope
inc
daa
ljmp
inc
icebp
arpl
jo
xor
sub
data16
in
cmp
cmpsb
ja
jl
fwait
jne
jmp
call
fcomps
sbb
xchg
cmp
gs
mov
in
jl
dec
in
mov
add
outsb
inc
outsb
xchg
jae
pop
pop
inc
test
mov
sbb
call
sub
out
out
mov
and
aaa
cmpsb
cmp
mov
lods
push
adc
xor
fdecstp
mov
outsb
sbb
in
add
repnz
andl
cmp
mov
in
pusha
mov
int
sub
int3
adc
xchg
jecxz
inc
outsl
fwait
pop
sbb
imul
mov
pop
push
cmpsb
mov
adcl
stc
loop
cs
sub
adc
jl
jge
push
mov
loope
lods
add
sahf
cmp
test
test
loope
xchg
mov
pop
sti
movsl
inc
cwtl
sub
ret
leave
enter
push
xchg
dec
jne
xlat
fwait
sub
mov
icebp
clc
daa
shlb
rorb
imul
xchg
mov
fimull
hlt
xor
call
mov
push
data16
into
dec
and
xchg
push
push
lock
aad
push
gs
aam
je
jnp
imul
pop
push
adcb
mov
add
xchg
push
add
inc
cmpsl
mov
fildl
arpl
notl
notl
add
test
cwtl
rorl
cwtl
sarl
pushf
scas
mov
ret
add
cltd
jae
cltd
repnz
xlat
sbb
hlt
inc
dec
outsl
pop
or
fs
insb
or
fmulp
jle
imul
popa
movsb
nop
jno
pop
push
inc
cmpsl
push
out
iret
fdivp
stos
sub
gs
repz
add
mov
fdiv
fisubl
xchg
cld
leave
iret
mov
cwtl
sub
xor
cmp
push
inc
imul
mov
out
mov
xor
cs
dec
cli
ds
cmc
adc
push
xchg
andl
mov
lcall
sti
shlb
jb
sub
xchg
testb
pop
jecxz
stos
cmp
mov
cwtl
popf
scas
nop
mov
push
lahf
dec
mov
pop
addl
adc
scas
ds
das
xchg
test
mov
sub
sub
add
movsl
jb
mov
int
cld
outsb
cltd
lretw
lahf
sti
lds
mov
test
mov
insb
cmp
add
out
xchg
jne
int3
cmp
pop
cmc
jnp
repz
add
add
loope
mov
adc
enter
data16
scas
sbb
in
mov
push
jmp
inc
xor
xor
cmp
mov
fstpt
sbb
imul
mov
ss
sub
lods
jg
pop
adc
cmp
stos
add
dec
mov
xchg
pop
mov
jl
repz
push
sub
push
cld
rorb
addr16
pop
fcmove
mov
sahf
jnp
sahf
add
cmpsl
aad
sbb
or
loopne
fidivs
lods
icebp
nop
shll
cmc
xor
lods
gs
jns
or
out
lret
pop
scas
inc
mov
inc
xchg
stos
jae
xchg
movsb
mov
outsl
insb
sbb
shrb
cmp
add
mov
xchg
insl
mov
fcmovnu
insl
pop
lds
ret
cwtl
inc
xor
inc
cmp
jne
rcll
arpl
ret
add
mov
out
pmulhuw
dec
fnsave
testb
fwait
jnp
shll
or
jl
jge
out
jg
jmp
push
clc
and
cmpsb
cmp
imul
ljmp
fmulp
push
jp
imul
hlt
adc
dec
enter
push
inc
dec
pop
or
in
push
mov
jmp
insl
shlb
iret
test
lods
sbb
or
les
pop
popa
repz
cltd
mov
gs
push
pop
lcall
sti
mov
aaa
aaa
sub
and
mov
push
mov
hlt
loop
aam
jne
addr16
dec
sub
dec
arpl
pop
int
push
shlb
sub
data16
mov
adc
cmp
ds
repz
rcr
add
sbb
wbinvd
imul
jno
fs
int
insl
pop
mov
add
cmp
add
add
xchg
add
pop
stos
adc
mov
add
adc
sahf
sti
repnz
mov
sub
pop
pop
adc
cld
mov
ret
lds
dec
test
movb
shl
lcall
pop
or
xchg
pusha
jp
or
jae
adc
pop
jle
push
mov
cmp
les
nop
push
xchg
movb
ret
cld
xlat
push
add
icebp
mov
aas
dec
das
add
aam
or
jp
fists
mov
outsl
ret
cli
arpl
outsb
int
sub
pop
mov
sub
sahf
push
jge
pushf
lret
pop
adcb
ja
xor
push
sbb
das
sub
cmpsl
imul
mov
test
cmp
cltd
mov
inc
mov
push
ret
aam
out
mov
mov
jne
pop
repnz
mov
addb
sbb
loope
hlt
rolb
and
data16
out
sbb
push
or
push
adc
fwait
jecxz
add
inc
jns
mov
pop
mov
ret
add
sbb
mov
fbstp
repz
loopne
add
stos
into
cld
xchg
stos
mov
lret
pop
push
inc
scas
sahf
and
cmc
adc
inc
sub
xorl
clc
sbb
pushf
push
aaa
lock
cmp
jbe
push
jns
mov
daa
push
pop
stos
or
jbe
sub
inc
cltd
and
adc
push
subb
stc
push
cmp
mov
mov
nop
je
aaa
flds
movsb
or
pop
xor
sbb
outsl
xor
mov
int
mov
jmp
mov
test
push
xor
cmp
mov
pop
or
in
xchg
add
pop
xchg
ret
scas
fwait
cmpsb
lret
je
movsl
cmp
inc
hlt
daa
mov
lods
lods
pushf
decl
push
enter
outsl
dec
xchg
mov
lock
int
xchg
loop
sbb
sahf
out
pop
jns
insl
in
mov
fldt
es
je
push
mov
dec
xchg
test
jo
push
lea
repz
loop
dec
push
divl
add
inc
sub
jno
fisttpll
ret
lds
xorb
xchg
fwait
dec
mov
filds
popa
cmpsb
shl
jl
int
cmp
popa
imul
mov
mov
imul
mov
and
push
jnp
aas
movsl
xchg
jl
xchg
lret
in
xor
lcall
mov
in
dec
loop
mov
mov
icebp
cltd
cwtl
shrb
push
and
xor
sbb
jl
inc
mov
inc
add
fnstsw
pop
insb
loopne
mov
xchg
pushf
stos
sti
mov
xorl
lea
inc
je
dec
jne
xor
iret
daa
aad
and
repz
lcall
xchg
xchg
psubq
movl
sub
mov
movsl
icebp
push
sub
inc
inc
push
je
in
cli
cmp
cmpsb
lea
xor
loope
sub
adc
ret
mov
ret
in
jmp
shll
cmc
inc
popa
into
fldcw
fnsetpm(287
jnp
ljmp
cs
sbb
mov
and
sub
fldl
push
xchg
shlb
mov
xor
int3
dec
inc
das
out
add
xor
shrb
stc
jns
int3
push
lahf
loop
lock
add
sub
stos
scas
out
scas
rcrb
das
dec
mov
mov
sahf
add
out
mov
or
fs
xchg
dec
adc
cmp
xor
or
imul
ds
scas
sbb
xor
pop
fidivrs
or
or
cmp
int
cmp
push
pop
adcl
mov
out
push
ret
xor
xchg
pop
sub
lcall
dec
repz
insl
mov
cmp
push
das
and
rcll
rclb
sbb
pop
mov
inc
ret
out
mov
jge
mov
lea
pop
lcall
aam
addb
and
or
inc
stc
shl
cli
push
add
pop
or
orps
adc
imulb
insb
dec
out
cmp
pop
or
adc
xor
mov
inc
clc
cli
xchg
rcrb
lds
arpl
jno,pn
dec
mov
test
es
shrl
sbbl
cmp
movsb
stos
pop
loopne
push
out
pop
jnp
xor
repz
add
fsubl
pushf
mov
push
cwtl
adc
mov
mov
inc
mov
xchg
xchg
adc
and
jmp
xchg
pop
xor
outsl
enter
mov
xor
fwait
out
or
mov
cmp
bnd
xchg
repnz
mov
push
adc
repz
push
mov
or
dec
mov
push
addr16
and
bndstx
adc
dec
aam
mov
fildll
cmp
inc
pop
out
stos
cmp
stc
out
dec
mov
pushf
call
push
or
andl
mov
pop
pop
inc
lcall
mov
add
cmpsb
dec
sahf
arpl
aam
scas
jg
imul
xlat
pop
mov
mov
xor
push
dec
sub
ds
lret
or
sti
enter
call
daa
scas
sbb
cmp
xchg
adc
jbe
xchg
pop
sbb
sub
test
jb
pop
mov
sub
lock
outsb
in
xchg
or
jb
pop
rcl
das
aam
hlt
jnp
test
inc
mov
ficompl
push
nop
ds
cmpsb
mov
data16
in
outsb
and
andl
dec
xchg
lahf
lods
cmp
mov
jecxz
into
ret
ljmp
cmp
push
cli
inc
mov
daa
pusha
std
jp
daa
pop
imul
insl
test
test
inc
dec
outsl
jno
xor
mov
or
push
pop
movsb
popf
lret
xor
jo
or
pop
stos
sub
jecxz
cmpsl
jno
and
iret
aaa
mov
insl
xchg
jnp
rcrb
dec
popf
mov
push
imul
sub
in
ds
xchg
cwtl
je
dec
lods
mov
pop
mov
cltd
or
sarl
add
inc
sub
mov
jecxz
mov
movsl
std
xchg
ljmp
jb
dec
push
sbb
rolb
ja
mov
fsubrs
shrl
iret
in
pushf
mov
push
cmp
inc
test
jo
lret
fnstcw
sub
xchg
mov
imul
xor
sbbb
and
shrb
iret
ss
int
movsb
dec
xchg
lea
sahf
xor
out
xchg
mov
mov
je
push
and
decb
test
jge
cmp
sbb
pop
add
add
jb
pop
push
repnz
xchg
mov
push
enter
cmp
push
xor
imul
jge
jg
xchg
pop
lret
xor
jmp
jno
dec
lcall
orb
loope
mov
ja
aad
mov
addr16
js
inc
enter
insb
cmpsl
pusha
aaa
xor
inc
iret
daa
bound
mov
mov
jmp
in
adc
fwait
inc
xchg
jbe
mov
dec
sub
cmp
jnp
arpl
decb
mov
loopne
shrb
out
test
sub
icebp
jb
cmp
push
repz
fs
mov
stos
mov
mov
dec
jo
push
jb
mov
fwait
and
ds
mov
out
xor
testl
xchg
mov
xchg
sbb
in
mov
sbb
ja
jl
push
imul
pushf
test
ss
or
inc
mov
lods
js
arpl
sbb
dec
mov
scas
sub
insl
pop
xchg
fwait
test
dec
cld
shl
test
sysexit
idivl
out
movd
push
mov
pop
out
ficoml
or
mov
xchg
adc
pusha
adc
and
and
add
pop
pop
pop
cld
scas
add
test
cld
dec
mov
dec
pop
cmpl
pop
stc
clc
mov
push
rolb
and
out
xchg
push
inc
rolb
push
jns
adc
dec
push
inc
xor
cmpl
pop
jle
push
nop
push
add
cs
jo
or
dec
xor
mov
pop
nop
lret
adc
push
dec
adc
rcpps
std
outsl
push
or
cmp
add
mov
xchg
pop
ror
pop
mov
inc
test
and
sub
insl
inc
fwait
jge
push
xchg
cld
sbb
fstp
jmp
fwait
lea
mov
mov
mov
pop
jnp
mov
pop
test
movsl
push
fdivrs
jb
jae
jno
clc
pop
fdivs
repz
push
and
insb
fsubr
xor
mov
mov
or
xchg
cmp
in
xor
inc
repnz
pop
inc
insl
mov
int3
sar
xchg
ss
jnp
popf
or
or
mov
xor
mov
fbld
add
cmp
jmp
sti
mov
add
and
orb
lods
cmp
push
in
sti
mov
scas
jbe
les
scas
ret
jmp
mov
adcl
lds
mov
fcoml
pop
test
sub
mov
jp
rcrb
lds
js
subl
loop
daa
icebp
shll
divb
lret
loope
pop
lcall
pop
adc
dec
mov
mov
idivl
jo
test
aas
scas
lahf
push
out
add
sub
add
scas
hlt
addr16
xor
inc
push
ret
lahf
pusha
sub
dec
push
into
pop
sti
aaa
inc
sbb
test
pusha
shll
adcl
popa
pop
dec
fstps
dec
dec
jns
pop
mov
js
ds
mov
mov
add
mov
mov
add
jns,pn
cltd
pop
cli
mov
adc
outsl
lds
adc
movsl
pop
add
test
dec
inc
cmp
inc
xor
movsb
mov
add
push
loopne
mov
mov
inc
xchg
pop
dec
pavgw
outsl
pop
xor
mov
shrb
push
dec
jge
scas
mov
popf
mov
lcall
pop
or
mov
sbb
movsl
pop
dec
xorl
rorb
push
dec
cmp
ret
or
add
fwait
fwait
mov
out
xchg
cwtl
dec
and
xchg
lock
addr16
pop
pop
add
test
addr16
mov
push
jbe
xchg
dec
jecxz
nop
movq
ficompl
lods
clc
mov
inc
out
les
imul
mov
xchg
fsubrs
mov
insb
mov
loop
ds
in
lahf
add
jg
mov
ja
sub
mov
mov
mov
xchg
dec
out
jg
pop
and
xor
mov
or
adc
and
or
imul
pusha
scas
mov
cpuid
mov
sbb
imul
or
push
std
rol
or
ds
fsubrl
mov
in
xchg
fs
sti
inc
fsubr
cmp
add
hlt
dec
inc
outsl
ret
fiaddl
sahf
dec
lods
cli
inc
xchg
sub
loopne
dec
dec
xor
sar
and
or
mov
aad
sti
inc
inc
js
push
sahf
xrelease
lods
ss
leave
sub
fidivl
mov
add
cmp
jno
outsb
or
lods
in
mov
in
push
xorb
sti
pop
fs
clc
fldl
push
xchg
sbb
cmpl
push
shrl
xor
lea
jbe
popf
push
and
adc
hlt
sub
dec
cwtl
dec
test
iret
cli
pop
mov
arpl
pop
jle
sub
lea
jp
add
addr16
lahf
sar
call
and
pop
xchg
cmp
je
aaa
jmp
pushf
outsl
xchg
push
sar
fwait
loope
sbb
adc
jbe
rorl
or
xor
xor
add
lret
pushf
loope
dec
mov
sar
pop
sub
mov
or
or
xor
test
mov
mov
out
pop
pop
cwtl
and
inc
mov
inc
sets
inc
jge
sub
movsl
add
mov
out
ja
movb
or
push
jle
out
or
sbb
push
lahf
pop
jbe
pop
lock
cmpsb
sbb
insb
inc
add
movsl
lret
xor
divb
scas
popf
adc
outsb
pop
loopne
cwtl
add
push
mov
test
adc
mov
mov
jb
addr16
push
jno
mov
std
in
dec
fistl
nop
inc
push
inc
cli
lea
xor
sbb
cmc
adc
and
xchg
mov
scas
adc
push
sbb
sub
fcmove
sbb
iret
fadds
popa
pop
call
call
push
outsl
imul
or
je
cmpsb
push
int
ljmp
pushf
divb
aam
jnp
push
xchg
shlb
cli
jnp
leave
mov
push
psllq
leave
sub
xorb
fstpt
and
movsb
adc
and
adc
dec
movsl
aad
xchg
cmp
and
sbb
and
jmp
mov
push
and
dec
sti
into
loopne
pop
push
cmp
sub
insl
xchg
icebp
dec
mov
cmp
out
mull
clc
mov
mov
pushf
out
jae
mov
jmp
popa
pusha
add
inc
inc
add
add
push
popa
outsb
imul
add
add
add
js
adc
cli
mov
rcl
test
xlat
add
add
add
add
add
add
stos
mov
icebp
ret
shll
add
je
nop
nop
nop
nop
cmpw
jne
nop
nop
nop
nop
mov
leave
ret
xor
leave
ret
enter
cld
push
push
push
mov
mov
cmpw
jne
add
xor
mov
movl
inc
add
jne
nop
nop
nop
nop
mov
add
stc
adc
jae
nop
nop
nop
nop
mov
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
add
mov
inc
jmp
add
jne
nop
nop
nop
nop
mov
add
stc
adc
jb
add
jne
nop
nop
nop
nop
mov
add
stc
adc
jae
mov
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
dec
je
jns
add
jne
nop
nop
nop
nop
mov
add
stc
adc
jae
nop
nop
nop
nop
mov
mov
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
mov
inc
dec
jne
add
jne
nop
nop
nop
nop
mov
add
stc
adc
jb
jmp
mov
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
add
mov
movb
cmp
je
mov
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
mov
jmp
mov
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
mov
mov
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
mov
mov
add
test
je
nop
nop
nop
nop
mov
jmp
cmp
je
inc
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
mov
jmp
mov
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
add
jne
nop
nop
nop
nop
mov
add
stc
adc
jb
dec
dec
jne
nop
nop
nop
nop
mov
mov
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
add
jne
nop
nop
nop
nop
mov
add
stc
adc
jb
jmp
dec
mov
mov
mov
xor
shl
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
or
mov
mov
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
add
jne
nop
nop
nop
nop
mov
add
stc
adc
jb
cmp
jae
nop
nop
nop
nop
cmp
jae
nop
nop
nop
nop
cmp
jae
nop
nop
nop
nop
cmp
ja
nop
nop
nop
nop
inc
inc
inc
inc
mov
mov
sub
rep
mov
jmp
mov
sub
lea
pop
pop
pop
leave
ret
xchg
nop
sub
add
add
add
add
mov
add
add
add
add
fs
add
push
dec
inc
dec
xor
cs
dec
dec
add
add
add
nop
mov
add
add
add
inc
push
xor
cs
dec
dec
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
add
imul
jae
add
dec
gs
popa
addr16
outsl
js
add
dec
insl
jo
jb
pop
inc
outsb
fs
add
mov
adc
mov
adc
mov
adc
add
and
inc
push
jo
outsb
outsl
je
inc
push
jns
push
inc
jne
inc
xor
dec
dec
jo
insl
arpl
push
xor
xor
adc
pop
hlt
adc
mul
shll
mov
adc
push
pop
inc
add
test
add
cmp
add
cmc
adc
cmpsb
and
add
out
add
add
add
hlt
adc
add
add
xor
adc
ja
inc
add
hlt
adc
adc
add
fs
xchg
inc
add
dec
add
dec
add
notl
add
add
aam
jb,pn
jb
add
add
add
add
add
add
add
pusha
add
lock
add
cmp
add
aam
push
add
add
inc
add
add
add
dec
pop
