xchg
out
add
add
add
add
add
push
xchg
loope
je
mov
and
mov
jns
push
mov
mov
fcom
cld
cmpsb
outsl
aaa
adc
pop
bound
push
sub
fisubrl
and
mov
cmp
xor
dec
fiadds
cmp
mov
mov
or
jecxz
icebp
addr16
inc
and
lret
dec
dec
out
adc
sub
aam
clc
xchg
gs
dec
inc
repnz
sbb
pop
xchg
xchg
or
add
jns
sti
xchg
pop
dec
inc
mov
dec
dec
sbb
mov
jno
push
cmpsb
stos
push
stos
mov
add
dec
sub
shrb
add
add
test
into
mov
add
push
add
fnstsw
addr16
and
pop
adc
push
sbb
push
mov
mov
fwait
adc
pop
out
imul
jp
cmc
pop
adc
adc
pop
inc
mov
cmp
rcll
xor
cmp
stc
es
mov
add
fildll
cli
clc
or
xchg
jae
sub
push
mov
pushf
sub
sbb
outsl
xorl
arpl
test
add
xchg
sets
add
popf
inc
add
cld
cltd
push
xor
adc
adc
mov
pop
mov
add
jmp
pop
or
sbb
lock
jb
jb
mov
xor
adc
or
xchg
icebp
mov
hlt
or
cld
jns
aas
pop
xor
aad
xchg
in
push
stos
mov
mov
out
fbstp
mov
xchg
lret
loop
cmp
test
addb
xchg
sahf
jmp
dec
jecxz
mov
test
add
cmc
hlt
cmpsb
add
push
push
mov
adc
loop
jl
gs
mov
adc
sti
inc
inc
call
push
or
inc
inc
lock
sub
sub
lcall
mov
mov
test
jmp
mov
or
cld
out
and
sub
dec
mov
sbb
je
out
js
imul
xchg
in
push
rorl
lds
pop
jp
mov
test
imul
or
pop
sub
aas
aaa
cmp
cmp
sbb
fs
mov
jl
adc
out
das
pop
cltd
dec
jecxz
jns
gs
test
mov
or
lcall
lret
out
clc
addr16
jmp
push
xor
push
clc
push
mov
lahf
nop
mov
insb
lcall
mov
mov
data16
mov
aad
jo
xor
aas
or
fcompp
mov
lods
pop
stos
popa
xor
mov
jmp
lcall
xor
or
mov
into
xor
aas
ret
mov
xor
and
shrb
ret
sub
insb
rcrb
add
gs
or
jo
clc
test
dec
fstps
ud0
mov
shll
loop
enter
ljmp
sahf
push
stos
adc
adc
add
mov
inc
call
js
cs
add
mov
mov
pop
cmpsb
pop
dec
mov
cwtl
aam
push
mov
ds
nop
mov
ds
mov
stos
ficoml
out
das
lock
movsb
clc
add
sub
or
in
sahf
mov
stc
lret
cmp
push
idivb
dec
xchg
push
cwtl
or
out
mov
pop
and
push
hlt
ljmp
xchg
cmp
push
cmpsl
mov
xchg
pushf
push
push
adc
ret
std
scas
lret
arpl
jb
dec
or
aam
mov
cmp
xchg
mov
push
loop
out
je
je
sub
rorl
je
daa
push
aaa
lds
sub
fadds
fsubl
clc
mull
cmp
mov
inc
mov
dec
dec
clc
data16
fists
jmp
sub
or
fldcw
out
push
stos
pop
es
inc
dec
mov
fwait
or
cli
xor
int
and
gs
in
push
fsts
dec
mov
adc
jg
cmp
add
inc
rolb
lcall
xchg
jge
call
cmp
xchg
cmpsl
scas
shl
xchg
adc
fistps
add
les
lret
pop
lods
mov
repz
mov
into
and
into
sub
mov
jecxz
xor
dec
psubsb
pusha
fsubrl
xor
ret
jne
cmc
icebp
inc
cmp
mov
cli
dec
loop
fimuls
push
push
dec
in
arpl
inc
jae,pt
add
inc
scas
push
mov
pop
mov
adc
lock
shll
mov
aam
orb
mov
pusha
lock
mov
dec
mov
jg
or
loope
rolb
sbb
test
out
dec
mov
jmp
xchg
icebp
lock
push
mov
int3
les
pop
test
mov
cmp
jnp
jne
pop
aam
dec
pop
loope
ret
fidivs
push
or
lds
push
aam
cmpsl
lods
sub
in
ss
or
mov
cwtl
repnz
ss
addb
and
loop
fistpll
incb
ret
jno
and
clc
mov
inc
std
insl
xor
cmp
sub
cld
sti
xor
clc
add
mov
jle
jmp
mov
mov
movsb
push
adc
pop
push
sahf
sub
push
mov
push
sbb
bound
rolb
mov
xchg
data16
and
dec
stos
enter
movsl
lea
fisubrl
es
cs
xchg
insl
shlb
les
sbb
arpl
imul
adc
in
sbb
rol
or
pop
fwait
push
xchg
or
jmp
mov
hlt
add
lcall
sub
es
sahf
and
repnz
cli
push
pop
add
loope
jb
fcoml
dec
in
cmp
popf
dec
cld
or
mov
push
inc
popa
or
lods
push
jne
mov
mov
jo
incb
es
cld
pop
xchg
leave
fnstcw
xchg
add
xlat
pop
xor
cmp
outsl
cmc
mov
leave
push
mov
sbb
leave
lea
cmc
push
iret
mov
vphaddbd
xchg
push
adc
sub
cmp
roll
dec
mov
xchg
push
add
inc
das
aad
xchg
adcb
inc
das
int
sbb
mov
add
pop
sbb
fdivs
cld
mov
fsubrs
and
jge
cmp
xor
in
xchg
mov
popa
cmp
cwtd
rcll
xor
jae
inc
fwait
mov
stc
pop
nop
in
mov
testl
test
sub
push
out
pop
ror
xor
pop
repnz
data16
cmc
int3
or
stos
testb
imull
xorb
outsl
fdivl
jbe
cmp
jne
les
test
xor
jl
aad
sub
ds
mov
push
mov
mov
sti
jl
loope
stc
push
mov
icebp
push
lcall
mov
es
mov
or
dec
je
lock
or
mov
pop
inc
repz
aad
pop
scas
repnz
cmp
pushf
adc
jo
push
loopne
adc
in
inc
or
mov
add
loope
movsb
jge
in
mov
xor
cmp
enter
inc
fimuls
and
or
lods
imul
into
and
jne
dec
xor
pop
pop
push
test
sub
test
sahf
mov
push
and
pusha
jmp
js
mov
test
cmp
mov
mov
fdivrp
add
mov
insl
lods
cwtl
cmp
ficoml
scas
pop
stc
jb
bound
mov
inc
jmp
pop
jl
aad
push
add
adc
dec
mov
popf
and
data16
popa
inc
sbb
fs
or
cmpsl
pop
aam
js
sbb
addr16
xor
ja
out
inc
popa
fcmovnb
cmpsb
mov
inc
dec
add
mov
mov
pop
movsb
cmc
mov
xchg
cmc
shll
lods
mov
pop
leave
cwtl
movsl
jp
cli
push
xchg
insb
jecxz
lods
xor
enter
fisubrs
pop
or
add
sub
fnstcw
lcall
mov
dec
in
mov
xor
rclb
repz
mov
adc
loop
mov
test
jno
clc
sbb
int3
push
mov
shlb
push
xchg
dec
int3
and
dec
cmp
lea
shrb
ja
mov
pop
ret
push
out
pextrw
push
push
xlat
push
popa
mov
lods
mov
mov
mov
push
sti
sbb
repz
hlt
daa
sub
js
fincstp
xor
test
push
xchg
fmull
xchg
in
jb
add
ja
pop
rcrl
adc
xor
add
ljmp
popl
push
and
mov
test
jecxz
jnp
pop
pusha
dec
jmp
push
or
pop
add
xor
push
mov
filds
jnp
mov
mov
jno
das
out
sub
sbb
in
adc
and
sub
lahf
adc
das
mov
xchg
out
push
nop
cld
fs
movsl
pop
das
mov
in
or
inc
mov
movsl
dec
dec
popa
pop
es
in
sti
loope
outsb
mov
sbb
push
add
shll
sahf
pop
movsb
sbb
sub
push
mov
mov
cmp
scas
mov
or
jg
lods
xchg
loope
mov
mov
or
cmpb
inc
inc
outsl
mov
xor
ret
pop
test
jno
jnp
lds
cmpsl
rorl
iret
subl
jge
jo
or
push
inc
orl
mov
and
jmp
sahf
iret
jae
adc
dec
jle
ret
leave
push
out
adc
rcr
and
iret
sub
mov
pop
push
in
jge
les
and
push
mov
jne
jle
mov
mov
enter
and
je
pushf
gs
lcall
or
and
inc
popf
pop
dec
adc
mov
xchg
mov
adc
dec
jecxz
pop
inc
roll
icebp
out
add
imul
jmp
fwait
add
xchg
push
fstps
push
pusha
or
cwtl
mov
ja
orl
fwait
mov
sub
test
out
mov
repz
pop
stc
xchg
mov
iret
test
xchg
aad
adcb
rolb
loope
lret
mov
push
pop
mov
adc
out
pop
and
sub
and
outsl
xchg
or
sbb
popaw
push
push
mov
adc
or
xor
jp
mov
cmp
in
xchg
jbe
pop
ret
ror
cmp
mov
lds
repnz
inc
jbe
and
fnsave
pop
aad
dec
inc
mov
cmp
pop
lock
add
add
push
jmp
jmp
sbb
add
mov
mov
cmc
pop
jecxz
push
jmp
dec
loopne
das
xor
int3
pop
pop
cs
cwtl
pop
adc
in
int3
ss
sub
into
int3
jns
sbb
xchg
clc
cmp
fiadds
int
add
push
push
push
jecxz
je
idiv
sub
call
mov
in
cli
sahf
adc
movsl
jecxz
push
push
jl
xor
stos
mov
lahf
lods
ds
adc
aam
jne
dec
push
xor
mov
jecxz
and
cmpl
leave
pushf
cmp
sbbl
mov
cmp
mov
sbb
orb
out
cltd
fmulp
fstpl
int3
jecxz
push
in
mov
call
adc
stos
sub
roll
mov
xchg
leave
notb
mov
repnz
or
inc
add
sti
push
sub
out
or
mov
pop
int3
add
push
mov
gs
inc
xchg
sub
jg
outsb
push
inc
stos
ss
pusha
ds
insl
dec
push
je
in
fsubl
rorl
in
hlt
test
xchg
lods
xchg
nop
repz
lea
add
int
ljmp
jbe
jno
imul
out
or
imul
xor
inc
rclb
test
jno
xchg
pop
ficoml
mov
enter
jno
xor
addr16
sbb
jl
push
jnp
das
xchg
insb
mov
dec
add
cwtl
or
add
pop
popf
cs
jp
mov
repz
loopne
stos
mov
test
test
ficomps
mov
xchg
xor
dec
jg
mov
push
jbe
dec
push
mov
pop
shlb
mov
cmp
jo
fwait
xchg
inc
push
push
or
push
out
hlt
cmp
lret
popa
lods
inc
mov
lret
cmp
scas
mov
jne
testl
mov
je
nop
loopne
test
push
mov
mov
pop
inc
ret
bound
xlat
inc
sub
shll
push
mov
add
push
pop
mov
data16
daa
mov
clc
push
negb
mov
mov
jp
cmp
sahf
xchg
inc
insl
or
sub
pop
adc
hlt
iret
mov
dec
nop
xchg
fbstp
push
push
inc
jnp
movsl
out
xor
jno
leave
sbb
or
push
or
gs
adc
loop
sti
mov
test
inc
xchg
ret
cmpsl
outsl
lret
sarb
inc
add
add
sbb
mov
hlt
sbb
add
inc
out
mov
inc
ss
out
lods
testb
mov
int
loop
mov
pop
nop
test
push
mov
cwtl
aaa
movsb
repz
cmp
push
pushf
mov
sti
ss
lahf
xchg
mov
in
xor
int3
pop
or
xchg
xor
ljmp
das
add
fdivs
movsl
lret
mov
aas
jecxz
push
sub
mov
lahf
inc
js
stc
in
push
outsl
fcoms
bound
pop
fcmovbe
jae
out
xchg
mov
std
lds
and
mov
cmc
repnz
mov
mov
fstpl
or
xchg
push
push
into
rorl
xlat
movaps
dec
xor
sub
mov
push
and
mov
lds
inc
jecxz
cli
xor
xor
fmulp
sub
jbe
add
mov
mov
push
mov
add
sbb
xchg
aas
dec
loop
mov
scas
loopne
mov
pop
outsb
mov
call
into
lret
pop
lods
outsb
testl
pop
sahf
mov
cmpb
lock
sbb
ror
rcll
insb
int3
test
sbb
jne
and
mov
int
push
and
inc
xor
dec
cmp
in
into
cmp
cs
mov
aad
inc
push
sbb
sub
stos
mov
lods
loope
in
aam
push
xor
std
sbbb
lds
das
push
ja
aas
xchg
es
int3
in
xchg
fdivl
cmc
push
ret
into
xor
or
pmulhuw
rolb
pop
sbb
clc
inc
jb
mov
xor
and
test
insl
xor
add
jb
in
mov
sub
add
out
scas
mov
sbb
ret
pusha
outsb
repnz
js
lock
xor
sarl
jge
incb
int3
hlt
dec
loope
jo
sub
cmpsl
dec
push
push
lock
mov
jl
mov
divb
and
or
push
clc
or
mov
adc
pusha
leave
mov
shlb
loop
fwait
xchg
movsl
and
push
dec
push
loop
subl
cli
shrl
add
or
push
fwait
jge
cmp
or
adc
inc
mov
xchg
in
lcall
sahf
dec
add
add
mov
mov
sub
out
nop
cmpsb
push
outsl
cli
aam
and
pop
xchg
cmpsl
cld
xor
mov
ss
xchg
add
pop
sbb
nop
jecxz
push
movsb
pushf
mov
fisttpl
inc
pop
mov
imul
cmp
push
stc
loope
filds
add
jp
test
and
mov
push
push
add
mov
inc
pop
add
add
mov
mov
push
push
popa
es
mov
lds
inc
test
fwait
cmp
lret
dec
daa
lock
add
lret
addr16
aam
dec
stc
nopl
loop
and
add
xchg
outsb
lea
and
addb
loop
cmp
ljmp
arpl
jns
out
push
rcrl
pop
pop
roll
stc
inc
lock
jp
mov
sahf
fcomps
adc
pop
rcr
pop
cmp
add
xor
andps
stos
sbb
cmp
orps
jge
lea
jmp
mov
enter
inc
pop
out
dec
dec
jbe
push
push
mov
gs
test
xor
pushf
xchg
adc
inc
and
cmpsl
pop
js
xor
rorb
xchg
pop
pop
push
je
into
stos
insl
push
add
movsb
jb
into
jae
jnp,pt
or
or
test
sahf
sbb
or
popf
lret
push
fs
push
enter
xor
add
cld
fsubrl
stos
xor
imul
sub
rorb
ja
xchg
aas
sub
inc
and
mov
aas
mov
xor
mov
clc
pusha
cmp
test
je
xchg
stos
sub
lahf
iret
test
aaa
and
or
push
addl
les
movhps
daa
xchg
paddb
xor
pop
cmp
subb
xchg
xor
cmpsl
je
cmc
and
add
sub
and
or
lret
xchg
mov
or
test
mov
add
mov
imul
andb
hlt
lcall
mov
adc
lock
jne
out
adc
jle
sarl
stos
mov
je
jecxz
sarl
daa
dec
mov
cli
dec
cli
shlb
inc
mov
push
jge
pop
rcrl
jne
stos
jo
std
mov
in
xor
jge
jae
mov
mov
rorl
mov
pop
xor
pusha
add
cmp
test
not
pop
mov
xchg
mov
bound
sub
imul
push
rol
pop
sbb
lret
pop
loopne
data16
push
clc
mov
inc
sbb
iret
dec
movl
xchg
add
push
jb
mov
jle
sarl
adc
daa
jno
mov
imul
or
jge
sar
dec
test
iret
sub
or
adc
ret
movsb
lret
std
inc
in
stos
jp
add
pop
push
pushl
jns
dec
sbb
xor
xchg
shll
push
push
pop
add
xor
insb
mov
xor
div
mov
shrb
cmp
adc
repz
lret
xor
divb
fcoms
mov
stos
lret
dec
hlt
jae
mov
adc
pop
out
scas
push
xchg
into
int3
fcoms
xchg
gs
adc
pop
mov
mov
adc
fldl
xor
sub
jp
mov
lahf
movd
sub
ret
sub
popf
ror
mov
in
shlb
xchg
dec
fcomi
imull
fwait
push
int3
popa
or
push
popa
mov
ret
imul
or
lahf
adc
jle
sub
pop
push
orl
xchg
cmpsb
add
stos
dec
mulb
rorl
ret
pop
ja
test
scas
mov
mov
aam
mov
hlt
and
aam
lret
mov
andb
fldenv
pop
ret
cmp
loope
fidivl
loopne
cmp
les
popf
int
ss
out
into
gs
arpl
push
scas
loop
enter
push
int
mov
std
xchg
aad
scas
push
jl
push
inc
movsl
rcl
adc
inc
sbb
pop
cmpsb
or
jl
cmp
xchg
sti
ja
xchg
adc
push
mov
dec
jecxz
arpl
inc
inc
dec
cs
and
sbb
pop
test
mov
or
dec
std
push
enter
mov
xchg
das
jle
fidivrl
divl
push
dec
xor
jns
sbb
adc
es
cmc
xchg
jns
test
out
prefetchw
or
add
sbb
fdivrl
sbb
ljmp
mov
repnz
stos
out
hlt
scas
je
xchg
les
aad
push
xchg
leave
dec
adc
mov
cld
aaa
es
lcall
lcall
xchg
cli
cmp
lock
and
xchg
addl
cmc
xor
mov
add
cmp
je
sub
repz
jno
mov
jnp
mov
add
push
das
sub
xchg
scas
lret
std
popa
int
xchg
push
cmpsb
adc
sub
mov
mov
sub
gs
mov
out
sub
inc
fldl
pop
popa
mov
sbb
mov
fisttpl
mov
push
xchg
sahf
push
pushf
push
mov
xor
data16
mov
cld
mov
nop
push
pusha
inc
lods
add
jmp
repz
out
sub
xchg
repnz
add
mov
push
leave
mov
mov
imul
icebp
inc
mov
jg
xor
sub
lds
push
int3
adc
xor
push
xlat
inc
out
dec
pop
dec
loop
lea
jne
jne
push
fcomi
mov
test
leave
xchg
lahf
iret
mov
xor
mov
ja
mov
or
jmp
ffree
orb
cmp
leave
sahf
test
jg
dec
lret
push
sbb
iret
mov
lods
mov
data16
bound
or
xor
jbe
fwait
mov
xchg
inc
leave
fldenv
xchg
mov
push
dec
out
jge
testb
and
xor
outsl
jb
pop
fldenv
test
push
xor
cld
cmp
lret
outsl
sbb
xor
jle
add
xor
in
add
xor
mov
mov
int
sbb
mov
fistpl
je
xchg
mov
pop
dec
popa
fcoml
mov
add
outsb
xor
shr
sahf
jns
mov
sbb
rclb
fstps
orb
inc
ss
push
lea
adc
cmc
pop
lcall
repnz
jmp
dec
in
mov
inc
es
cmp
and
insb
dec
cli
dec
ss
jne
or
ljmp
mov
add
out
mov
cltd
clc
or
inc
mov
out
loope
xor
push
movsb
add
stos
jno
cltd
push
sub
cmpsl
and
adc
mov
lret
inc
sbb
cmpsb
or
shl
cmp
mov
sub
bound
lret
adc
push
jo
pop
sbbb
lock
mov
cmp
lock
pop
aaa
gs
cmp
push
xchg
pop
xor
arpl
outsl
mov
dec
loopne
stc
cvttps2pi
in
mov
movsb
in
pop
jmp
lret
jl
jno
ret
insl
scas
xor
jae
rcll
push
cmp
sub
or
fistps
ret
inc
xor
xchg
stos
aam
stos
sarl
fidivl
mov
movhps
or
incb
in
xchg
xchg
jnp
imul
fildl
cmc
into
cwtl
pop
mov
notb
dec
stos
inc
inc
adcb
push
fdivrl
cmpsl
cwtl
push
pop
pop
clc
sub
or
push
dec
jecxz
sbb
lahf
ss
into
push
pop
push
lock
add
push
out
pop
stos
mov
push
jo
adc
shl
scas
xchg
inc
ret
jp
add
jmp
sbb
mov
shl
or
inc
mov
add
xor
stc
int3
jns
enter
scas
clc
mov
les
add
sahf
sbbl
das
xchg
icebp
pop
cmovl
inc
xchg
in
jns
repnz
cmp
push
imul
bound
outsb
pushf
outsb
hlt
inc
push
or
inc
xchg
lods
ja
push
xor
scas
sub
fadd
out
outsb
fadds
xchg
sarb
ja
jbe
sbb
cmp
popa
pop
arpl
pop
cmp
add
addr16
cmp
arpl
lcall
sbb
outsl
out
lcall
insb
jmp
adc
mov
and
cli
xor
push
shrl
pop
mov
ljmp
xor
aas
xor
fsubr
push
xchg
insb
loop
push
adc
fadd
scas
cmpsb
dec
xlat
aas
sub
test
push
ds
testl
ja
movsl
add
jge
xchg
cwtl
cwtl
in
mov
in
mov
add
pop
jne
cmp
inc
jecxz
mov
mov
sbb
outsl
daa
int
or
mov
xor
bound
cmp
sbb
mov
data16
popf
lds
sahf
pop
ljmp
psraw
ja
sub
in
icebp
out
cmp
ss
xchg
gs
xor
fs
push
mov
cmpsb
insl
xchg
cmp
jb
loop
mov
add
outsb
aaa
inc
mov
mov
mov
in
add
dec
or
int
fs
mov
scas
pop
daa
mov
icebp
sub
adc
into
ret
xchg
aas
imulb
gs
lcall
inc
sbb
add
jnp
cwtl
xor
test
add
hlt
cmc
ret
insb
adc
mov
push
pop
xchg
scas
jecxz
les
xorb
stos
jl
jbe
xor
xchg
jbe
inc
nop
lret
es
es
mov
mov
pop
int
and
inc
shll
andl
outsl
or
aad
idiv
add
addr16
pop
pop
sahf
pop
cmp
jo
fwait
sbbl
cmpsb
sub
jmp
fidivrl
mov
nop
inc
xchg
pushl
jb
mov
pop
pop
imul
pop
push
lock
xchg
jb
aam
add
pushf
pushf
jmp
cli
fidivrs
rcll
adc
lret
cmp
xor
orb
stc
cld
pop
lret
xor
jno
mov
pusha
inc
vmwrite
pop
sbb
sbb
mov
out
xorb
xor
add
mov
fisubl
jge
jg
adcl
and
out
push
or
mov
lea
mov
dec
and
loope
loop,pn
adc
xor
mov
mov
bound
and
mov
inc
idiv
jns
mov
fnstenv
xchg
std
fidivrl
mov
data16
mov
push
pop
enter
mov
aam
pop
jns
jo
push
xchg
mov
mov
jg
push
cltd
incl
test
popf
mov
clc
out
lds
dec
cmp
xor
mov
bound
and
cmc
sarl
sub
sbb
mov
push
xchg
cltd
add
push
adc
loope
out
loop
xchg
sub
repnz
aad
enter
xchg
popf
xchg
or
notl
or
inc
sub
les
outsb
mov
xchg
push
lcall
cmc
sbb
pop
mov
sub
idiv
subb
lea
popf
in
jb
sbb
jno
jg
add
xor
sbb
test
cmp
sub
lods
aas
push
add
lahf
xchg
and
add
xlat
xchg
jne
scas
and
dec
adc
adc
cli
mov
mov
or
sub
jno
sarb
jg
mov
push
xor
data16
cmp
jae
jno
and
jne
pop
and
outsl
gs
xchg
jl
cmp
into
adc
and
enter
ja
push
or
outsl
sbb
jo
fdivrs
int3
leave
lods
lds
iret
cld
push
lret
cli
ret
adc
pop
xor
mov
das
pop
ss
fcompl
out
cmp
xor
adcl
es
push
jecxz
inc
jae
jle
lret
mov
jp
pop
repz
scas
push
adc
push
push
or
push
mov
mov
mov
mov
in
jnp
dec
sub
leave
push
mov
cmp
and
ret
and
or
jbe
mov
ficompl
es
int
lock
leave
hlt
mov
and
mov
push
adc
dec
scas
rcrb
add
data16
outsl
add
data16
test
iret
addl
bound
int3
push
mov
decl
adc
pop
push
push
fistl
cmp
shl
mov
mov
mov
ds
cli
loopne
xchg
mov
push
xlat
mov
adc
test
or
test
pop
inc
jge
xor
ret
loope
and
inc
fmull
rclb
jmp
sub
mov
jnp
pop
pop
add
idivb
push
sbb
inc
mov
mov
pop
jl
cmpsb
hlt
or
mov
std
cld
mov
xor
cwtl
xchg
xchg
lahf
stos
jb
and
pop
mov
pop
leave
mov
popa
mov
cmp
imul
outsb
stos
test
in
in
cmp
adc
sub
xor
pusha
or
mov
cmpsl
jb
ss
sarb
pop
das
popa
sub
std
sar
push
mov
arpl
push
dec
bound
push
pushl
cmp
mov
pop
sub
loop
pop
pop
mov
pop
test
insl
jge
in
mov
xor
nop
add
scas
add
sti
in
fiadds
scas
imul
and
push
ret
scas
stos
ret
out
lcall
mov
lods
jg
push
xor
scas
xchg
add
repz
cmp
add
mov
scas
ja
adc
ljmp
pop
push
in
lcall
jbe
fmuls
popf
lcall
xlat
mov
adc
mov
inc
mov
out
out
push
and
jno
adc
inc
les
iret
xchg
mov
pop
rcll
arpl
aad
sub
ret
dec
add
mov
xchg
xor
pop
in
mov
sub
adc
xchg
pop
bound
mov
ret
je
aaa
fldl
or
cmp
xor
aad
jns
dec
xchg
pusha
arpl
iret
addr16
test
adc
push
pusha
mov
cs
mov
jecxz
mov
aaa
mov
stc
push
fidivs
shlb
jbe
mov
pop
dec
adc
shll
xor
or
push
mov
and
in
test
ret
popa
cmpsb
sbb
xchg
icebp
pop
and
mov
addr16
fs
in
mov
sbb
xor
sub
jle
and
mov
int
mov
ja
jge
xor
gs
dec
pop
pop
rclb
mov
sub
adc
insl
mov
push
movsl
add
inc
mov
es
pop
sti
shll
jbe
add
ss
mov
ljmp
pop
xchg
mov
add
sub
punpckhdq
cltd
jnp
jg
enter
ret
andl
lods
push
in
xor
pop
sbb
and
jno
hlt
hlt
inc
xor
popa
jle
add
and
pop
mov
out
in
cmc
jne,pn
mov
lods
push
mov
stos
xchg
out
xor
cs
xchg
dec
addr16
pop
pop
pop
int
cmc
movsl
inc
fistpll
mov
fdivrs
lret
jecxz
jge
repnz
cltd
and
inc
cmp
push
test
ss
outsb
or
jg
push
xor
mov
je
sbb
pop
fnstcw
jnp
pop
mov
push
dec
cmpsb
std
mov
fs
dec
mov
gs
dec
add
xchg
loope
and
or
in
dec
sub
lret
test
dec
push
fidivl
ret
push
movsb
xchg
sbb
imul
clc
shrl
adc
aas
rcl
mov
xchg
pop
subl
lahf
inc
lods
dec
pop
arpl
test
xchg
xor
or
leave
pop
mov
push
adc
cmp
in
mov
xchg
lds
shlb
int3
repz
aam
sti
push
xorl
sahf
mov
stos
add
xor
xor
cmp
add
fdivl
inc
push
movsl
into
sbb
jae
outsb
push
leave
subl
scas
call
pop
add
shlb
shll
mov
imull
mov
mov
fucomip
ds
mov
mov
push
push
scas
xchg
pop
pop
fnstsw
sbb
es
sbb
lods
ds
pop
les
sbb
add
xchg
ljmp
mov
sub
outsl
insb
jbe
inc
mov
or
add
and
or
idivl
lcall
push
ret
lahf
add
bound
xor
ss
repz
test
lods
adc
andb
out
clc
addr16
pop
jne
pop
push
or
sub
rcr
adc
shll
mov
add
test
xor
and
mov
cmc
pop
dec
push
out
sub
or
aaa
insl
and
rcrb
jne
lret
hlt
lock
ds
dec
dec
or
cmc
jae
mov
pop
in
mov
or
mov
scas
pop
movsl
and
int
xchg
enter
xor
jnp
jmp
xchg
jnp
or
jp
dec
xchg
shlb
xorl
aad
dec
xchg
xchg
jnp
jns
jne
into
or
cwtl
testl
sarb
jae
pop
add
mov
dec
push
inc
xor
movsl
repz
and
stos
jno
arpl
fbstp
mov
push
xor
mov
pop
popf
leave
jmp
bound
adc
mov
and
xchg
and
fdivrl
call
mov
fs
jne
adc
lea
mov
mov
call
stos
aas
imul
xchg
popa
or
and
in
sbb
cmc
mov
jle
nop
in
push
xchg
xor
push
sub
in
push
lahf
add
sbb
mov
pusha
jae
jno
test
sbb
gs
insb
xor
inc
dec
jle
aam
arpl
jo
mov
mov
jmp
dec
andl
lock
add
jp
mov
inc
in
arpl
mov
mov
xchg
imulb
daa
mov
cmpsl
into
loopne
mov
sahf
adc
in
negl
push
addb
mov
jmp
and
cmp
dec
repz
aam
push
push
jbe,pt
mov
xlat
dec
push
xchg
fwait
shll
or
ret
addr16
xlat
and
popa
outsl
pop
into
pop
xor
clc
ds
aad
mov
sti
mov
or
ret
pop
lods
jp
mov
pop
xchg
lock
jo
ror
fst
cwtl
in
cmp
inc
sub
jge
push
push
inc
rorl
jns
in
sti
push
inc
shrb
xor
mov
arpl
xor
mov
mov
lcall
fs
ja
xor
movsl
cmp
mov
iret
int
test
sarb
mov
adc
fcomp
push
popf
push
jle
test
clc
les
pop
dec
fbld
lods
dec
jo
cmp
pop
int
inc
push
pop
out
inc
pop
cmp
mov
vmread
xlat
inc
cmp
inc
pushf
xchg
roll
cmpl
mov
lret
xor
lods
push
pop
mov
int
insb
xchg
call
sub
xchg
dec
push
add
int3
test
ja
dec
sahf
imul
jb
jecxz
bt
sub
out
sub
sub
cmpsl
add
cmp
xorb
pop
lods
jl
xchg
negl
stc
sub
mov
bound
mov
mov
cmp
xor
push
pop
lods
cmpsb
rcrb
sbb
aas
in
enter
push
or
add
mov
add
pop
mov
push
or
mov
mov
enter
push
mov
or
notb
addr16
into
or
mov
inc
adc
cld
mov
nop
mov
xchg
loopne
stc
fwait
out
mov
xchg
test
fdivs
push
mov
fcoml
into
in
push
pop
adc
sbb
jne
movsl
lock
rcrl
jle
mull
sub
add
cmp
out
mov
imul
dec
dec
sbb
sbb
push
pop
mov
cmc
or
mov
sub
jg
insb
and
popa
jno
adc
cmc
inc
call
ret
xchg
push
fadds
hlt
inc
pop
ret
ret
adcb
push
xchg
push
inc
ljmp
jnp
fucomp
mov
nop
push
lds
mov
lcallw
aaa
clc
sub
inc
mov
lret
lods
packuswb
mov
push
je
push
mov
pop
add
jae
pop
lds
jmp
jge
jle
sub
in
dec
mov
mov
and
scas
shlb
into
mov
add
leave
roll
pusha
rcr
xor
ror
or
js
scas
push
jo
lock
cmp
fdiv
pop
bound
push
or
cmp
push
lods
shlb
mov
cmp
pop
mov
inc
fcoml
movsl
lret
aad
pop
dec
fistps
sub
lds
mov
or
add
pop
cmp
arpl
outsl
mov
mov
aam
cld
test
push
cmp
adc
sub
repz
sub
cld
sbb
lahf
daa
push
test
jge
adc
in
popf
cld
sub
je
enter
cwtl
mov
cmpl
scas
dec
aad
subb
jb
repz
sbb
push
mov
xor
leave
js
lea
xchg
pop
stc
xor
jge,pt
aam
imul
clc
aam
cmpb
push
mov
jns
sbb
add
jge
or
mov
adc
inc
push
push
xchg
in
ret
fadds
je
sub
inc
push
xchg
stc
rep
jle
jo
fsubp
push
sub
mov
push
rcrl
or
mov
push
sub
movb
in
add
mov
push
sbb
and
push
das
je
inc
mov
fs
nop
mov
mov
test
jno
fcoml
clc
push
test
nop
lds
push
dec
test
fs
ret
dec
and
sarb
xor
cmp
dec
inc
cs
mov
mov
mov
sub
movsl
push
and
mov
sbb
jno
dec
lds
xchg
addb
xchg
and
cltd
adc
or
push
int3
pop
scas
sub
mov
cmp
adc
je
jae
mov
clc
sub
das
shll
shll
push
shrb
mov
and
lods
ljmp
fsts
or
mov
sbb
negl
negb
adc
jecxz
aad
fistpl
adc
testb
mov
repz
mov
pop
xchg
mov
aam
xchg
mov
jne
popa
cmpsl
dec
sub
mov
push
pop
nop
jbe
xor
inc
jo
pop
dec
push
push
pop
add
mov
mov
and
and
cli
and
ficoms
fnstenv
leave
sahf
xchg
sarl
stos
sub
popf
jecxz
out
out
or
sar
pop
cli
add
sub
pop
push
fwait
and
push
cmp
test
lea
idivb
jecxz
pop
ss
inc
mov
mov
push
push
xor
mov
cmp
int3
sub
cmp
fimuls
add
xchg
pushf
lcall
or
and
mov
jecxz
lods
popaw
gs
jne
cmc
cmp
inc
cmp
das
loop
lcall
xchg
fdivrl
fs
lcall
enter
test
pop
stc
rcr
lea
out
cltd
pusha
imull
lcall
data16
filds
cld
xchg
mov
mov
jae
inc
push
cmp
sbb
lcall
pop
sti
test
jp
nop
mov
sub
sub
or
orb
pop
mov
data16
push
xchg
xor
stc
stos
out
push
fcmove
push
sub
cwtl
xchg
mov
cld
push
pop
pop
xchg
dec
imul
adc
fs
cmp
mov
int3
sbb
pop
shlb
fs
xor
jmp
clc
stc
insb
jp
lcall
cli
mov
aaa
gs
out
mov
adc
mov
mov
add
lea
jns
xor
jbe
xor
add
in
xor
xchg
jle
inc
adc
popa
jno
inc
cmp
mov
jge
xchg
xor
adc
mov
jne
adc
xchg
lret
jecxz
arpl
inc
jbe
cmp
inc
mov
sbb
jns
mov
mov
adc
scas
aas
das
xchg
jns
lock
jno
pop
popf
cmp
sbb
adc
pop
push
add
mov
out
fidivl
sbbl
dec
sbb
ljmp
inc
mov
loopne
or
fdivrl
inc
dec
pop
pop
push
nop
dec
enter
int
adc
sub
push
int
sbb
push
mov
lods
jl
sti
into
cmpb
imul
push
ret
sbb
mov
mov
mov
jge
and
adc
sub
mov
adc
out
and
xlat
push
or
mov
inc
and
jnp
outsl
jo
popl
ret
add
insl
pop
sub
out
mov
inc
out
mov
stos
call
aam
mov
out
xor
sbb
mov
loopne
inc
push
jecxz
idiv
nop
push
mov
inc
add
pop
imul
jmp
fldenv
imulb
jmp
nop
div
ljmp
mov
cmp
mov
cmc
scas
mov
jno
jg
aam
mov
jp
lods
cmp
jp
sti
clc
bound
inc
dec
xchg
push
icebp
testb
mov
fcmovnu
sbb
pop
add
push
icebp
jecxz
jnp
jno
cs
mov
dec
xor
ss
in
xchg
mov
inc
pop
push
gs
aas
sbb
movsb
xchg
hlt
fcmovnu
add
negb
cmpl
icebp
inc
mov
movsb
int3
mov
or
push
cmp
or
sub
stos
dec
popa
push
hlt
dec
and
mov
js
lahf
mov
lea
aas
ja
mov
sbb
xchg
mov
pop
dec
aaa
adc
idivb
sbb
pop
mov
add
xchg
mov
mov
fld
or
push
lret
call
pop
push
loope
xor
je
out
js
mov
jo
inc
xor
mov
cli
rcrl
cli
in
dec
push
sub
sub
arpl
fisttpll
jp
fildll
pmuludq
repnz
push
adc
mov
mov
mov
das
enter
sbb
popa
dec
pop
xchg
and
scas
cli
gs
sarb
or
out
bound
cmp
ja
loope
jg
pusha
ja
ret
push
xor
pushw
fwait
push
testl
js
jae
movb
mov
pop
sbb
xor
gs
pop
add
popf
and
outsb
lods
cwtl
fbstp
jb
push
mov
int
jle
in
pop
loop
popf
std
mov
adc
and
out
sar
push
test
in
xchg
ss
shlb
outsb
leave
add
int
mov
sub
in
jbe
cld
mov
mov
loopne
out
push
push
ret
jne
ror
or
loop
push
addr16
sub
mov
lret
ljmp
mov
xor
call
xor
mov
mov
pop
aam
roll
leave
dec
fisttps
jno
pop
mov
gs
sub
pop
out
mov
dec
lret
and
mov
and
rclb
fsub
clc
push
lds
and
or
in
test
fsubrs
outsl
cmpl
add
js
mov
in
outsb
sub
stc
enter
mov
ret
int
fdiv
incb
in
mov
test
xchg
mov
clc
add
insw
xor
cwtl
mov
or
mov
cmp
cmp
jge
xchg
push
daa
movsb
fcompl
nop
or
cli
cmp
adc
mov
cli
jecxz
or
popf
xor
and
cmp
aad
ret
mov
pop
jo
repnz
iret
insb
mov
dec
mov
inc
xchg
shrl
xchg
sbb
mov
mov
lcall
or
inc
push
xchg
loope
rcrl
jecxz
lea
pop
daa
int
pop
cmc
jmp
inc
mov
xor
mov
or
leave
in
mov
xchg
mov
aas
xor
adc
xchg
add
sub
inc
cmp
rclb
cld
sbb
in
sahf
cld
mov
dec
pop
jp
dec
xchg
cmp
xlat
les
push
mov
pop
cmp
sub
sub
adc
push
adc
mov
dec
stos
push
cmp
rcll
xchg
sbb
or
and
cs
push
fstl
jl
mov
pop
jge
adc
pop
inc
enter
arpl
repz
xor
xchg
xchg
xchg
mov
mov
lret
movsb
lcall
xchg
and
xchg
test
and
fbstp
cmp
cmpsb
mov
ljmp
sahf
and
shrl
loope
mov
mov
push
scas
je
xor
repz
mov
push
jns
and
ret
pop
and
mov
int
or
test
pop
subl
repnz
inc
dec
mov
in
adc
mov
and
and
jg
jge
mov
in
jle
lret
cli
push
mov
xor
imul
jmp
mov
xchg
pusha
test
enter
push
push
in
jmp
sbb
out
orb
ljmp
mov
inc
inc
lds
push
lret
jnp
jnp
xor
dec
ja
call
cmp
add
jns
jmp
fwait
dec
pop
rolb
xor
pop
pop
xlat
push
das
pushl
pop
sub
push
iret
pop
sub
add
neg
ds
mov
shlb
stos
xchg
mov
adc
in
mov
repnz
stos
sbb
xchg
lcall
sub
testb
std
mov
inc
test
cltd
jle
mov
jl
das
dec
das
push
push
shlb
movsb
sbb
addr16
out
test
push
inc
sahf
dec
sub
dec
mov
push
test
mov
fistps
ret
jmp
push
or
ds
xor
repz
faddl
or
movl
jno
aad
and
jb
or
out
xlat
fcomp
pop
int
hlt
aaa
adc
ret
pop
dec
out
js
pop
repnz
icebp
mov
inc
pop
add
xor
ret
jle
and
lock
ret
into
add
dec
lock
scas
in
xor
mov
mov
sbb
fsubs
movsb
cld
xchg
lret
xchg
jmp
and
stos
xchg
mov
pusha
dec
adc
mov
mov
ja
cwtl
cmp
dec
dec
das
add
iret
adc
xor
pop
mov
jns
movsl
rorl
mov
push
imull
add
ljmp
outsl
int
out
jno
cmp
dec
movsl
les
scas
xor
iret
push
dec
mov
test
xor
jo
dec
push
push
mov
mov
test
into
dec
adc
mov
xchg
pop
icebp
push
add
sarl
in
pop
ja
cwtl
lea
cmc
jno
stc
ja
inc
mov
mov
or
ja
add
in
out
push
shrb
adc
test
and
das
jno
sub
data16
dec
jmp
and
repz
fistpl
adc
xchg
lock
rclb
out
test
mov
ja
lahf
xor
pop
imul
jle
fdivrl
push
insl
fistps
and
sbb
ficompl
sbb
adc
test
pusha
lret
jecxz
stos
sbb
clc
push
mov
cs
bound
or
out
int3
jnp
insl
pop
icebp
or
ss
jg
in
jne
movlps
xor
mov
push
out
xor
dec
lcall
rolb
imul
pop
inc
mov
and
mov
xor
adc
mov
aad
jge
and
mov
add
aaa
imul
insl
cmp
push
ret
pop
adc
cmp
fsts
or
or
pop
cltd
jbe
cli
imull
dec
ret
lods
xor
popa
ret
sti
xor
mov
imul
pop
pop
sbb
mov
sub
cld
call
adc
pop
sub
xchg
add
mov
fbstp
sbb
bound
xchg
jno
mov
add
pop
into
inc
mov
sbb
sbb
scas
push
stos
or
ds
cmc
out
or
in
lret
jae
mov
mov
aaa
in
shlb
ja
pop
arpl
pop
dec
adc
pop
shlb
push
out
xchg
dec
jle
repz
imul
dec
dec
xor
cs
data16
cld
xor
pop
imul
cmp
je
inc
out
mov
xchg
lock
push
in
in
sar
adc
push
push
sbbb
mov
push
pop
inc
jo
mov
loop
ljmp
int3
or
movsb
inc
sub
ljmp
test
sarb
xchg
dec
and
sub
inc
mov
push
pop
mov
dec
ds
mov
movl
shlb
pop
xchg
xor
or
sbb
pop
lock
stc
mov
add
int
mov
cmp
insb
addr16
xchg
xor
jns
scas
shrl
mov
incl
mov
jp
lds
and
xchg
dec
dec
adc
dec
sub
mov
jp
jno
mov
cmp
fdivl
fsubrl
fcmovb
mov
and
clc
ja
popa
sbbb
jbe
mov
xchg
jo
daa
add
repz
pop
fistpll
cmp
fbld
mov
and
shl
pop
mov
scas
xchg
leave
mov
cwtl
or
xlat
js
std
sbb
pop
cwtl
fstpt
add
movsl
mov
pop
push
and
mov
push
cmc
aam
aas
push
loope
xor
sub
mov
mov
adc
jecxz
xor
xor
js
in
dec
pusha
xorb
sbb
ja
sarl
notb
and
sbbl
pop
ss
xor
fs
xor
mov
aas
adc
lret
pop
ljmp
adc
sbb
sbb
xlat
dec
movsl
mov
cwtl
rclb
into
push
or
outsl
add
dec
es
pshufw
xchg
in
jl
pop
lods
shll
mov
xor
scas
enter
cld
les
xor
or
mov
fs
push
mov
dec
jp
pop
mov
les
jmp
and
dec
mov
insb
outsl
sub
shr
in
xlat
inc
and
or
insb
std
cs
out
add
daa
inc
pop
xor
add
fcmove
and
mov
mov
addr16
sahf
dec
and
push
gs
adc
sahf
sbb
ret
adc
push
imul
xchg
jb
or
orb
scas
fists
fimull
fists
sbb
push
aas
and
inc
push
jmp
enter
cmp
stos
sub
scas
pop
imulb
in
lcall
aad
xorb
jge
ja
movsl
shll
in
adc
inc
cmp
mov
push
shl
inc
xor
push
or
lock
adcb
xchg
stos
inc
addr16
ret
testl
iret
mov
xor
mov
fwait
in
repnz
mov
xchg
xchg
mov
stos
cli
stos
xchg
clc
das
jae
lret
mov
test
cs
mov
scas
aas
fadd
and
dec
fsubrl
and
std
mov
repnz
jno
lcall
push
mov
or
std
loope
push
mulb
pusha
outsb
out
sub
sub
push
enter
fadd
lea
int
call
out
jg
mov
xchg
and
mov
out
sbb
ret
gs
cld
movsl
inc
xchg
enter
jp
sbb
cmp
movsb
dec
int
pop
cmc
mov
out
adc
cmp
lret
pop
and
jmp
cmp
or
fistl
and
lea
pusha
pop
aad
or
cwtl
mov
and
push
imul
into
aas
inc
iret
sbb
test
dec
jbe
stc
or
adc
push
pop
sbb
in
jecxz
mov
mov
das
fucomi
push
xor
in
mov
xchg
lods
cld
sub
sbb
and
sub
push
jno
and
xor
jns
clc
xchg
jecxz
pop
sbb
push
jl
mov
and
jle
jae
jmp
dec
jns
pop
cmpsb
xor
mov
dec
xchg
bound
xchg
pop
push
mov
adc
adc
rcrl
push
cmp
ljmp
lahf
jp
xor
clc
mov
mov
shl
pop
lret
pop
cmc
xchg
inc
loopne
insb
mov
shrl
xchg
add
lods
inc
enter
lods
mov
sub
pushf
in
pop
pop
lret
jb
or
push
mov
dec
cld
int3
fdivl
aaa
pop
cmpsb
or
sbb
jo
dec
ret
mov
mov
lcall
adc
repz
test
fcomi
pop
jmp
pop
inc
daa
aaa
notb
aas
mov
popa
jecxz
mov
dec
addr16
xor
imul
mov
out
ljmp
or
ds
push
ret
pop
sbbb
xor
and
lods
repnz
pushf
popa
xor
push
into
pop
jecxz
in
mov
and
cmp
mov
rcrb
clc
xchg
mov
sbb
sub
sub
hlt
push
ja
fwait
int
adc
je
push
sbb
nop
push
jle
push
and
xchg
cmp
filds
xchg
mov
sub
in
cwtl
and
pop
jp
or
jge
cmp
in
xor
cmpsb
sbb
jmp
push
loope
xchg
adc
push
sbb
out
out
andb
mov
xor
xchg
xchg
shrb
daa
mov
mov
cmp
push
sub
or
ret
sub
xchg
orl
sub
mov
add
sahf
inc
div
mov
ljmp
cmp
shrl
in
test
fimuls
popa
int3
idivb
nop
fdivl
pop
inc
shrl
mov
ds
cmp
popa
mov
jae
jl
outsb
cld
sbb
lret
fs
fisubrs
push
sbb
jnp
addl
push
shlb
mov
sub
xor
imul
xchg
mov
mov
cs
cmp
mov
inc
push
jl
push
mov
or
mov
call
lahf
sbb
mov
inc
shrl
in
pop
sbb
or
mov
dec
out
or
xchg
cmpsl
push
lret
hlt
mov
aas
nop
cs
xchg
test
pop
push
cmpsb
bound
scas
mov
les
sub
fadd
decb
xchg
sub
pop
xchg
ja
jmp
push
push
mov
icebp
xchg
cltd
test
mov
xor
sub
sub
movsl
imul
cli
push
scas
je
inc
push
shl
jl
shrb
mov
mov
sub
and
sbb
xchg
pop
sub
inc
in
pop
or
dec
insl
pop
add
in
ss
outsb
or
adc
int3
test
pop
loope
add
mov
xchg
int3
ds
daa
imul
ljmp
popa
cmp
sbb
jl
les
nop
pop
int
cli
sub
mov
sub
or
dec
and
jmp
fcmovu
data16
or
es
ss
mov
sahf
aaa
lahf
daa
dec
mov
push
mov
add
cmp
and
test
lea
mov
insl
push
sbb
stos
or
sbb
je
inc
mov
cmp
fisttps
rcr
fs
mov
mov
std
sub
cmpsb
mov
add
insl
adc
add
pop
out
cmp
ja
enter
pushf
jnp
fisttpl
in
mov
ljmp
in
xchg
push
fwait
jmp
fimull
add
xchg
and
mov
mov
nop
cmpsb
dec
pop
lock
dec
call
arpl
xor
xchg
fwait
mov
lret
mov
andb
jnp
sahf
jge
inc
das
jle
mov
cmovs
pop
fisttpl
lcall
jmp
cli
subl
ret
jmp
inc
bound
sti
loopne
jae
lret
push
daa
push
imul
call
cmp
jae
lret
inc
xor
in
cmp
in
mov
sbbb
pop
das
mov
in
and
cltd
shr
adc
sahf
jae
mov
test
cwtl
scas
cs
and
pushf
inc
push
rcrb
mov
fimuls
ror
addr16
mov
mov
push
jns
cmc
or
stc
icebp
dec
inc
aas
inc
mov
cmpsl
xchg
jle
and
sti
shll
sbb
dec
mov
push
loopne
mov
shll
mov
xchg
mov
add
jns
incb
dec
or
aas
xorb
xor
insl
pushf
jb
and
mov
mov
ljmp
pop
mov
pop
les
jle
fildll
adc
or
lret
rclb
push
jo
xchg
inc
imul
ja
aas
pop
mov
mov
xor
das
les
xlat
aam
jbe
cmp
xlat
push
int3
loopne
and
pushfw
cwtl
repz
repnz
fs
sbb
add
or
stos
test
mov
insl
add
jge
cltd
xchg
sub
mov
mov
push
frstor
mov
enter
data16
aad
mov
lods
sub
insb
xchg
xchg
jl
jle
test
loope
les
lret
or
adc
adc
lahf
stos
aam
ficoms
pop
movsb
xor
daa
clc
lds
cmp
sub
sub
mov
mov
das
mov
or
mov
xchg
sbb
cwtl
leave
pop
xchg
repnz
cmp
xchg
and
push
pop
cmp
data16
aam
outsb
not
sti
outsl
adc
add
cs
fstp
mov
shl
cli
loopne
inc
stc
mov
lahf
or
mov
mov
inc
adc
adc
je
push
xor
cmpsl
sbbb
xchg
push
shll
xchg
lds
xlat
ret
xchg
xor
pop
insb
xchg
int
scas
psrld
inc
ljmp
stos
pop
sahf
repnz
add
lock
shl
mov
sub
mov
insb
pop
test
sbb
stc
mov
and
xor
daa
es
nop
cli
leave
inc
das
testl
outsb
jmp
cmp
mov
push
pop
mov
in
inc
xor
pop
test
sub
stc
loopne
mov
mov
ret
cmpsb
aad
xor
outsl
xor
mov
icebp
mov
in
dec
pop
out
js
jno
rcl
test
js
jg
add
aam
sbb
lcall
aaa
mov
jnp
pop
mov
pop
mov
lea
aad
push
cwtl
daa
call
pop
jmp
pop
loopne
hlt
xchg
cmpsb
cwtl
mov
test
inc
les
or
lods
imul
insb
scas
mov
cmp
hlt
mov
mov
cmpsb
fbld
mov
addr16
enter
ret
out
pop
xor
xchg
bound
pop
jb
imul
mov
stc
and
mov
push
repnz
js
dec
shl
jl
sti
add
nop
or
lds
roll
fnstsw
push
and
push
sahf
mov
leave
lret
iret
popl
mov
and
int3
xor
pop
lods
rol
mov
mov
and
imulb
movsl
adc
or
push
xchg
xor
call
leave
add
daa
shlb
out
jge
int
mov
mov
dec
push
sub
and
push
sub
pop
cltd
mov
pusha
jg
mov
or
fwait
mov
andb
jb
add
test
pop
sti
xchg
stc
shll
call
aad
push
cmp
lret
loope
test
mov
imul
pop
and
jo
out
pusha
je
mov
pushf
dec
popf
push
jns
xchg
inc
mov
and
stc
jae
popa
jp
sbb
adc
cmpb
xchg
icebp
into
nop
fmull
cmpsb
or
ret
test
mov
mov
je
jmp
pop
mov
lods
jmp
jno
sbb
pop
fdivrs
push
cmp
inc
in
into
mov
jae
or
jg
xor
in
repz
sub
sub
andb
dec
pushf
inc
arpl
orb
repnz
out
int3
std
push
pop
cmpsl
dec
mov
loopne
sbb
shlb
clc
push
ret
imul
lret
sub
xor
roll
and
xor
std
fbstp
es
sbb
fwait
repnz
sub
and
or
das
mov
adc
les
and
cmc
int3
or
aam
pop
test
popf
repnz
outsb
pop
jp
cmp
aas
inc
daa
scas
leave
sbb
push
lods
sbb
sub
add
out
jbe
mul
cmp
inc
dec
adc
sbb
push
push
out
aas
lahf
sbb
push
repz
insb
addr16
pop
or
dec
es
out
xchg
sub
movsl
movsl
stc
lcall
in
xchg
movntps
inc
xor
jno
arpl
adcl
mov
inc
idivl
push
outsl
mov
add
jp
daa
in
mov
jl
mov
ljmp
pop
dec
flds
les
fnsave
jns
mov
icebp
and
cmpsl
leave
arpl
sbb
mov
or
aaa
dec
imul
xchg
lds
pop
roll
aam
push
dec
stos
mov
sub
jecxz
inc
loopne
ret
addr16
pop
cmpb
lcall
cmpsl
daa
test
sub
push
inc
push
push
int
mov
xor
movsl
adcl
dec
adc
cmc
negl
mull
xor
sti
movsb
sbb
std
cmp
bound
push
addr16
fwait
bound
addl
jb
xorb
fst
pop
sbb
fidivrl
mov
test
orb
ret
or
mov
int
aaa
push
rolb
cli
sarb
mov
in
cli
cmp
or
out
or
mov
fs
xchg
clc
cld
mov
in
fldl
jbe
test
dec
sbb
dec
filds
inc
and
inc
nop
xor
ret
pusha
mov
xchg
mov
movsb
cmp
xor
cmp
test
dec
mov
mov
ja
lcall
rclb
arpl
and
xchg
sti
mov
aad
cmp
pushf
cwtl
sbb
push
test
jnp
loope
xchg
jne
and
out
xorl
scas
out
push
jmp
jbe
fsubrl
and
add
jo
icebp
stos
in
sub
cld
test
insl
nop
and
out
dec
ds
xor
inc
mov
mov
int
stos
imul
lea
xchg
fcompl
jmp
or
and
cli
push
out
ret
aad
iret
adc
push
sub
fs
loopne
rolb
and
inc
mov
dec
imul
js
mov
ds
into
inc
mov
xor
popa
cli
cwtl
mov
in
sub
adc
stos
inc
in
imul
incb
dec
pop
mov
and
xlat
push
mov
sub
inc
xor
dec
jge
arpl
insb
pop
push
lret
sub
cmpsb
enter
mov
lds
mov
xor
repz
lret
aam
mov
dec
in
test
jnp
sub
scas
jg
std
in
cmpl
sbb
sub
sbb
or
jecxz
jae
fstps
jp
dec
shrl
adc
lcall
in
mov
mov
out
movsl
pop
imul
cli
jl
mov
push
adc
xorb
int3
mov
insb
lret
push
mov
cmpsl
mov
adc
jmp
and
and
test
stc
mov
or
pop
inc
ret
cmp
mov
sub
mov
fwait
roll
jecxz
and
lret
pusha
adc
std
icebp
cmp
pop
clc
push
add
mov
or
loop
push
movhps
aam
dec
mov
mov
lods
jns
xor
fcmovnu
test
int
add
xor
out
xor
imul
adc
and
inc
daa
lds
and
dec
inc
clc
push
notb
lret
xchg
subl
sub
push
scas
pusha
push
sarb
sub
gs
jne
lahf
sbb
mov
jbe
movsl
sub
ljmp
adc
and
loop
faddp
sbb
inc
in
movsl
jne
imul
mov
ds
iret
loopne
pop
rcll
hlt
es
xchg
loop
leave
lahf
xchg
xor
ficoml
mov
lods
jno
leave
insl
mov
pop
jg
cmpl
add
lcall
les
mov
pusha
or
out
mov
outsl
inc
xchg
out
mov
aas
mov
adc
loope
xchg
sub
shrl
add
movsb
or
lods
mov
jns
imul
loope
mov
std
lret
sbb
inc
je
aas
push
cmp
les
mov
call
imul
jmp
enter
pop
mov
les
xchg
xchg
cmp
jl
mov
cmp
hlt
insl
in
ss
sbb
pop
mov
rclb
fsubrl
shrl
dec
mov
cmpsl
inc
inc
inc
cmp
mov
mov
mov
testl
mov
or
push
or
insl
out
sub
xor
inc
mov
test
out
cmp
shlb
movsl
sub
mov
push
lret
inc
mov
fcomi
movsl
test
cmp
vmwrite
mov
cltd
je
arpl
shr
inc
sbb
cwtl
je
mul
lret
pop
cld
lret
sub
call
inc
shrl
cs
mov
fbstp
mov
popa
rcrl
sti
daa
std
xor
lock
mov
gs
xor
mul
repz
sbb
mov
mov
negb
sbb
pop
hlt
inc
pop
ja
test
arpl
mov
sub
mov
sbb
ljmp
out
mov
fiadds
lret
mov
xor
jge
pusha
mov
mov
mov
mov
orl
xlat
mov
sbb
out
cmp
shrl
lret
mov
dec
aad
xor
adc
xor
mov
or
ja
push
aam
push
jnp
cmp
ljmp
test
push
outsb
pop
and
push
inc
xor
mov
mov
xchg
sub
roll
imul
jecxz
nop
and
jae
mov
call
sti
sahf
ret
movsl
hlt
push
jle
loopne
rcll
leave
iret
pop
xchg
cmp
adc
lahf
xor
xor
xlat
orl
push
xor
push
imul
mov
push
adc
jecxz
dec
rorb
xchg
ja
mov
xchg
outsb
int
fsubrs
adc
mov
or
inc
fcoml
cmc
jnp
lcall
sub
popf
mov
push
jp
fdivrp
testb
cmp
xchg
push
test
cs
outsl
movsb
cmp
in
pop
ss
push
inc
scas
sub
cmp
adc
out
xor
stos
aad
xchg
out
cmp
adc
xchg
xlat
jns
in
pop
push
jmp
adcb
icebp
mov
roll
push
cmp
jns
pop
imul
ja
mov
jle
add
fs
neg
lea
jge
jp
imul
ret
arpl
inc
hlt
jno
sar
das
jnp
test
les
popf
add
add
mov
push
movsb
jae
fucomp
pop
pop
loopne
cli
test
jp
inc
inc
nop
xor
fdivrs
add
aam
shl
inc
test
dec
push
insb
mov
cmpsl
out
jnp
xchg
cli
add
dec
hlt
mov
pop
sub
into
sub
add
or
insl
cmp
gs
lret
std
incb
lret
cmp
push
test
and
insb
xlat
cld
dec
xchg
mov
stos
jbe
out
andb
add
mov
sti
sbb
out
mov
mov
int
sbb
ss
orl
test
cmp
loopne
mov
mov
xorb
imul
jno
inc
loope
cmp
push
imul
push
imull
aad
jmp
jo
dec
pushf
enter
insb
ret
gs
imul
pop
movsl
cltd
adc
lock
adc
rep
pop
dec
imul
adc
xchg
xor
xchg
mov
fildl
sub
popf
movsb
pop
sub
lcall
rol
mov
cld
imul
cmp
xchg
sbb
mov
mov
dec
mov
jb
repz
sub
sub
jl
movsb
cs
in
xor
aaa
mov
hlt
dec
movsb
mov
aam
stos
xchg
fsubs
xor
out
xor
fdivrl
xor
or
inc
cmovne
inc
cmp
dec
push
add
addr16
ret
fs
stc
pop
push
inc
in
sahf
pop
bound
jge
bound
aas
je
pop
inc
ljmp
shr
lret
mov
xchg
iret
or
sub
test
fs
adc
adc
inc
je,pt
inc
out
push
sbb
sbbb
or
mov
sahf
aad
xchg
push
in
decl
xor
jge
shlb
rorl
adc
loope
xchg
outsb
and
hlt
jecxz
clc
jecxz
inc
rolb
pop
sbb
in
xchg
jl
mov
cli
push
aas
fsubrs
inc
in
or
sub
out
mov
jl
adc
mov
fwait
xor
ss
dec
enter
add
inc
insb
mov
mov
sbb
dec
dec
mov
les
jnp
sub
lods
icebp
push
imul
pop
outsl
inc
scas
cs
out
aaa
pop
stos
dec
xlat
xor
dec
in
mov
roll
movsb
dec
xlat
popa
bound
lret
pop
add
adc
mov
xor
and
jno
aas
cmp
ljmp
rcrl
out
add
xor
in
inc
and
mov
outsb
mov
mov
and
push
cmp
orl
jno
pop
pop
and
bound
pop
pop
adc
dec
popa
fdivr
or
cmpsb
pop
xor
pop
insb
ret
inc
daa
xchg
or
in
fwait
add
or
push
jo
inc
jge
cmp
mov
lock
mov
mov
cmp
bound
dec
inc
clc
jge
int
mov
or
cmp
push
mov
movsl
daa
xlat
xchg
in
scas
loop
mov
ret
mov
fwait
sbbl
nop
mov
jne
push
fsubr
cmp
jecxz
ret
call
mov
lcall
test
mov
push
mov
inc
out
pop
icebp
jge
shll
adc
xchg
add
inc
xor
test
cmp
jae
add
mov
xchg
sbb
xor
dec
into
jg
sbb
xchg
jle
daa
dec
and
lcall
mov
in
mov
pop
lock
xchg
sub
lcall
sbb
pop
push
push
xchg
push
ret
mov
push
lcall
ror
xchg
mov
push
imul
dec
cmp
out
negl
mov
sub
std
aas
cmpsl
loopne
push
fcompl
and
je
cmp
shrl
lods
test
inc
jb
add
lds
icebp
inc
ds
sbb
cmp
test
add
repnz
add
pusha
shll
test
andb
inc
jg
push
or
lods
lahf
jb
lahf
mov
movsb
sti
loopne
out
pushf
xchg
pop
cmp
imull
push
adcb
pop
push
jg
push
jecxz
push
arpl
push
mov
pop
pop
xlat
insb
into
push
out
shrb
add
pusha
sahf
int
mov
les
ficompl
and
jae
pop
mov
mull
add
movsb
mov
and
adc
leave
je
mov
mov
test
lods
xor
mov
popa
jl
push
iret
lods
and
sbb
lret
mov
fcmovnbe
jno
jle
mov
pop
mov
push
lods
or
jp
xor
adc
inc
push
stc
mov
push
dec
pop
xchg
rolb
xchg
sub
ljmp
jmp
out
es
dec
mov
adc
fnsave
ja
leave
mov
and
mov
fildll
xlat
int3
dec
mov
mov
inc
sti
loope
incb
pop
adc
jle
cmp
ficoms
or
imul
mov
mov
xor
or
pop
xchg
mov
fisttpl
sahf
xchg
cmpsb
xchg
mov
cmc
or
je
dec
mov
mov
cld
or
mov
xchg
or
push
jae
cwtl
clc
repz
push
cltd
pop
mov
sub
fistps
adc
cmp
pusha
inc
lcall
cmpsl
in
mov
add
int
xor
adc
sbb
int3
loope
mov
push
cs
adc
or
in
fisubs
lcall
aam
xchg
repnz
psrlw
out
incl
pusha
fsub
push
jno
pop
mov
psadbw
cmp
inc
aaa
sahf
out
push
adc
xor
out
xchg
push
xchg
xchg
mov
inc
orl
loope
xor
ljmp
movb
push
inc
fsubrs
sbb
data16
int
xchg
fstpt
orl
jns
dec
icebp
std
cmp
sbb
adc
icebp
iret
mov
adc
inc
fiaddl
add
push
dec
movsb
pop
mov
or
rcll
cmp
movsb
rcrl
lret
mov
fstl
add
int3
xchg
jbe
pop
insb
lahf
inc
icebp
cmp
push
push
sarl
xor
mov
mov
or
sbb
stos
adcl
and
sub
aam
ljmp
jae
or
jns
dec
cmpsb
inc
adc
inc
jg
push
push
ss
mov
leave
add
sbb
xor
sub
adc
ds
cld
test
repnz
imul
pop
fnstcw
add
pop
call
lods
bound
adc
insb
add
push
push
js
xchg
out
xchg
sub
les
cmp
outsb
stos
mov
jbe
sub
cmpb
out
insl
jae
outsl
sub
mov
adc
test
push
jp
cmpsl
dec
lods
sub
loop
lea
sbb
xchg
sub
les
out
push
outsl
xchg
das
mov
mov
pop
dec
xor
jo
popf
pop
and
sti
mov
pop
and
popa
outsb
cmp
mov
je
leave
scas
push
mov
jo
call
jns
ret
mov
test
pop
pop
inc
push
mov
lds
adc
mov
mov
scas
stos
stos
xchg
pop
or
loope
in
cmp
insl
or
inc
add
in
or
repnz
xchg
xor
inc
inc
popa
dec
popf
mov
and
xchg
and
pop
mov
not
sbb
aas
ds
outsl
jo
test
mov
loopne
fs
xchg
out
cmpsl
iret
pusha
mov
sarl
leave
std
inc
push
adc
fisttpll
mov
xor
lea
loop
and
mov
push
dec
ja
fwait
xchg
insb
mov
leave
cmp
sbb
xchg
stc
mov
pop
and
das
add
push
icebp
mov
adc
inc
push
push
ret
das
sbb
mov
into
sbb
or
leave
arpl
lods
jne
mov
push
pop
mov
and
dec
cs
mov
pop
test
aaa
add
mov
inc
xor
je
popa
fwait
jo
or
pop
shr
pop
mull
mov
mov
mov
xchg
icebp
jnp
xorb
sbb
cmp
xor
adc
jl
testl
vpsrlq
decb
shr
fists
movsb
sub
imul
lods
and
jns
inc
xchg
or
add
add
rcll
xlat
aam
gs
mov
lcall
lcall
mov
ficoms
fisubrl
add
lcall
inc
mov
xchg
pop
push
inc
gs
inc
jno
mov
divl
popa
mov
pop
dec
fadds
hlt
lret
xlat
adc
mov
gs
dec
push
movsl
daa
sub
push
mov
clc
add
add
lret
or
shlb
fucomi
sub
pusha
inc
testl
and
das
mov
jge
sti
scas
mov
fnstsw
mov
dec
out
or
outsb
adcl
fstps
fstp
push
or
mov
sbb
pop
lcall
mov
pop
mov
pop
mov
mov
mov
inc
mov
inc
xor
jecxz
nop
lods
add
inc
inc
in
or
jl
fcoml
push
sub
into
xor
cmpsb
sarl
not
mov
dec
dec
loop
int
jo
fisttpll
nop
pop
mov
clc
mov
pop
cmp
ja
fsubr
mov
xchg
test
mov
sbb
sahf
popa
lret
pop
pop
jno
jnp
mov
aas
push
out
push
jmp
out
pop
mov
mov
test
fcomi
xchg
frstor
mov
scas
jbe
int3
jae
inc
scas
xor
decl
xchg
pop
add
pop
fdivrp
xchg
stc
sbb
loop
dec
addl
mov
mov
cmpl
test
out
inc
push
mov
pop
insb
addl
and
jb
shlb
pop
aam
jle
fnstcw
jle
jo
icebp
push
stos
inc
dec
jg
mov
xchg
pop
add
or
dec
mov
inc
out
lcall
out
xchg
cmp
call
mov
fsubr
int3
test
jmp
lods
adcl
out
imul
cmp
pop
push
int3
movsb
out
mov
fisubrl
xchg
int3
shlb
mov
mov
pop
adc
pop
mov
jns
in
sub
adc
sub
test
add
xchg
cmp
dec
push
cmp
mov
and
cmc
cmpsl
mov
aad
cli
insb
pop
or
pop
mov
cmp
out
repz
dec
scas
lcall
push
cmc
xor
jg
lret
pop
pop
dec
test
dec
mov
sbb
sbb
xor
add
or
iret
sub
fsubrl
mov
sub
scas
mov
mov
stos
test
mov
ds
jb
dec
xchg
data16
jge
xchg
inc
dec
ja
jbe
cmp
enter
jl
add
std
cmpsl
data16
pmaxub
aas
clc
popf
daa
rorl
adc
inc
pop
mov
mov
aaa
mov
xor
outsl
loope
stc
pop
lcall
or
fsubs
rol
pushl
int
sub
mov
iret
or
sbb
sti
rcll
push
pop
fucomp
cltd
mov
lret
pop
pusha
das
cmc
and
xor
lcall
sbb
fstpl
and
cltd
sub
into
ja
xor
jmp
nop
inc
cmpsb
push
inc
adc
push
call
lock
adc
addb
jno
stos
dec
gs
push
xchg
mov
cmp
push
mov
cli
mov
and
cmp
mov
xor
ret
aad
dec
inc
xchg
jno
into
test
jmp
fcoms
outsl
xor
pop
and
loope
ret
lahf
fldcw
rcr
icebp
inc
sbb
jno
addr16
lcall
pop
dec
xor
sub
xor
stc
sub
mov
cwtl
notl
ret
test
mov
andb
and
or
loopne
loopne
pushf
jns
out
mov
fxch
jno
or
jae
cs
or
std
inc
add
jns
leave
add
jae
ficomps
out
push
mov
insb
in
fwait
inc
xor
movsb
jecxz
movsl
mov
insb
xchg
xchg
shll
in
outsl
insl
sbb
pop
int3
jge
ret
sbb
push
mov
or
sub
dec
push
xor
out
loopne
jnp
mov
lahf
enter
nop
movsb
fdivp
jecxz
sub
jae
and
call
adc
out
jo
and
fimull
mov
loopne
dec
mov
mov
cltd
hlt
push
js
fs
sub
push
adc
or
mov
mov
mov
adc
imul
push
std
in
xor
repnz
lcall
scas
sbb
mov
push
in
and
and
idiv
loopne
sub
stos
inc
jmp
scas
adc
mov
mov
push
fists
xor
pop
notb
cs
xchg
sbbb
clc
pop
insb
dec
in
dec
call
aas
pushf
push
mov
fidivrl
push
pop
pop
and
dec
fnstcw
int3
or
rorb
xor
push
test
push
inc
decl
mov
sarb
push
aas
pop
fidivl
stos
mov
loope
or
outsb
mov
into
ljmp
inc
xchg
ficomps
sub
mov
sbb
and
mov
repz
aam
aas
jle
or
push
cmp
sub
cmp
mov
out
addb
sbb
cli
mov
into
push
push
lahf
cmpsl
jnp
loopne
rclb
xor
cmp
dec
outsb
dec
add
push
sbb
sub
mov
mov
in
cld
rcrb
pop
jae
test
push
jnp
xor
insl
jo
lahf
mov
sub
in
jae
xchg
pop
jmp
lock
dec
movsl
int
and
test
lcall
cs
adc
sahf
sbbb
ljmp
add
fldt
mov
xchg
xchg
mov
mov
sub
lret
push
push
outsl
xor
add
cwtl
aad
inc
mov
loopne
testl
arpl
sbb
test
shll
aas
pop
ljmp
jns
adc
jne
sub
aad
inc
mov
add
out
inc
fildll
fisubrs
and
pop
add
loope
mov
mov
movsb
in
add
adc
repnz
fwait
xchg
mov
sbbb
jle
pop
lahf
das
and
jb
jb
je
sub
xchg
sub
xlat
mov
daa
cmpsl
jle
in
push
dec
neg
sbb
xor
cltd
push
mov
push
lahf
or
mov
ss
mov
push
mov
cmp
xchg
cmovg
into
lea
rol
push
lcall
in
ret
or
mov
mov
sub
or
inc
lods
loop
shll
enter
in
mov
testb
call
loope
mov
cmp
aad
xor
fisubrs
rol
pop
jns
pop
leave
das
lret
shr
mov
lahf
loope
ja
pop
incb
into
sbb
leave
fcomps
lcall
rcrl
and
rcrb
cli
mov
cwtl
xor
fsubr
and
punpcklbw
scas
push
inc
jbe
sub
ljmp
dec
ficomps
cmpsb
push
iret
push
mov
xor
xchg
push
nop
movsb
xor
movsl
or
push
andl
and
sub
in
into
test
push
addr16
mov
daa
fsubrs
or
xor
dec
jbe
xor
adc
add
jb
xor
inc
insb
std
push
jae
shrl
jne
outsl
jno
dec
sbb
xchg
mov
push
adc
popf
cmpsb
adc
dec
pop
mov
in
stc
cmp
stos
into
fldl
adc
test
maskmovq
loopne
scas
mov
out
or
and
mov
cmpsb
adc
loope
ret
mov
pushf
mov
les
insl
daa
sti
add
repz
mov
arpl
test
sub
mov
in
jmp
movsb
test
or
or
push
mov
xchg
add
shll
cmp
mov
and
xor
imul
mov
imul
xchg
mov
or
icebp
stc
pop
xchg
andl
stos
xor
in
xchg
jge
lret
repnz
rcrl
mov
and
add
clc
mov
dec
and
cmp
dec
shll
cli
mov
or
test
clc
inc
aaa
adc
loope
adc
fdivr
xor
or
adc
pushf
out
mov
pushf
std
jmp
mov
mov
mov
arpl
scas
cmp
mov
sub
cltd
add
int
jno
out
push
jne
sub
xchg
hlt
xor
dec
movsl
dec
aad
jl
push
shr
sarb
scas
add
lds
jnp
in
push
cmp
cmp
popa
cmpsb
xchg
lahf
ja
dec
pop
sbb
ud1
xchg
out
dec
push
or
into
pop
int3
shlb
lds
shlb
or
in
sbb
xor
adc
cwtl
jg
sub
pop
loopne
test
add
fisubrl
lcall
mulb
push
mov
jns
or
cmp
arpl
or
xchg
lret
mov
mov
loopne
rsm
or
fwait
pop
jge
xchg
ud2
push
and
mov
in
or
addr16
mov
xchg
or
movb
test
enter
cld
mov
inc
push
divb
mov
adc
or
int3
not
jp
std
jnp
jp
and
push
push
sbb
call
xor
mov
push
mov
lahf
enter
pop
xchg
push
push
fwait
int3
cmpsl
cmp
mov
lahf
jne
outsl
dec
pop
dec
cmp
stc
inc
test
leave
ds
mov
adc
and
sahf
ret
dec
lcall
dec
jnp
jmp
mov
pop
xchg
jne
fisubrs
imul
inc
sbb
dec
inc
xchg
repnz
test
pushf
repnz
and
jnp
dec
call
lahf
pop
pop
add
add
mov
dec
in
or
inc
in
add
pop
or
pushf
cmc
xchg
mov
push
and
cltd
cmc
xchg
push
pop
and
aam
mov
fs
xor
cs
pop
adc
and
xor
jb
dec
stc
cmp
daa
jg
dec
sbb
mov
mov
and
add
add
push
push
sarl
pop
and
inc
movsl
mov
int3
push
jmp
sbb
mov
or
icebp
and
in
xor
into
loopne
jbe
jp
insb
ret
pop
ja
shll
sbb
ret
cs
lcall
sarl
sbb
arpl
pushf
shrb
gs
jb
jo
xor
and
out
pop
jae
rclb
xchg
inc
lods
pushf
mov
loopne
stos
lods
aaa
cmp
out
mov
xchg
repnz
adc
les
test
mov
leave
outsl
cld
xor
std
mov
loop
jecxz
sub
insb
test
mov
ret
dec
xchg
push
movsb
test
out
dec
sbb
rcr
jge
or
int
mov
dec
dec
or
pushf
icebp
and
jbe
incb
sub
test
enter
mov
ljmp
mov
aad
sub
data16
xchg
sbb
je
pop
pextrw
aas
mov
rolb
dec
cmc
outsl
push
enter
add
lcall
add
iret
lods
mov
inc
sarl
ljmp
std
adc
push
fcmovu
push
xlat
ds
decl
sahf
jg
fisubrs
ja
push
scas
repz
arpl
mov
arpl
mov
bnd
fidivrl
mov
sahf
xor
stc
mov
push
push
cmp
fnsave
inc
cmp
dec
std
mov
bound
ror
jne
inc
shll
std
pop
or
clc
jecxz
jmp
lock
cmp
cmp
enter
cltd
aam
icebp
ds
outsb
mov
ret
sub
pop
idivl
and
add
or
lods
cli
inc
jno
stos
cmp
add
mov
push
decl
dec
sbb
mov
cld
jle
ja
call
jmp
addr16
shlb
ja
pop
cltd
sbb
jmp
mov
xchg
cmp
mov
sahf
clc
xchg
popf
gs
dec
adc
mov
repz
inc
fisttpl
in
stos
into
fsts
les
aad
inc
inc
fiadds
mov
hlt
sub
jnp
jae
cmp
dec
add
decb
call
mov
or
mov
jae
xor
insl
jb
sub
inc
repz
push
inc
rolb
adc
xchg
ret
call
jp
inc
popa
std
sbb
insb
lcall
add
leave
dec
je
into
scas
sub
mov
addr16
xor
ss
gs
mov
sbbl
repnz
push
jge
jo
sub
sub
xchg
mov
sbb
out
test
xchg
nop
leave
scas
mov
adc
rol
or
cs
movsl
add
add
rolb
push
pop
fcomip
sub
shlb
cwtl
mov
dec
xor
mov
ret
int3
repnz
mov
hlt
xlat
mov
mov
push
cmc
mov
lock
cs
cli
or
jmp
lret
lods
or
and
or
jnp
mov
sahf
outsb
lods
sbb
test
stos
js
lods
or
mov
xchg
and
scas
cmp
pop
xor
sbb
scas
cmp
fsub
xchg
mov
xchg
sbb
pop
xchg
call
fistpll
cmp
aad
push
dec
stos
jl
sahf
xchg
in
cli
jge
jnp
jmp
cmp
add
popa
mov
pop
cmp
add
inc
cwtl
dec
pop
mov
push
call
adc
lcall
sbb
mov
adc
jge
pop
rol
rclb
rclb
ljmp
or
nop
mov
push
rolb
fnstenv
adc
jb
mov
in
inc
inc
sti
popa
subl
or
add
testb
cmpsl
add
xchg
lods
mov
adc
xchg
sarl
inc
or
xchg
and
jl
pavgb
inc
push
es
pop
ljmp
and
adc
sbb
mov
ja
call
aaa
test
sarb
adc
ljmp
andl
pop
or
fnstsw
shrb
adc
mov
daa
jnp
lods
sbb
mov
in
push
outsl
xlat
insb
cltd
sahf
nop
lods
outsb
dec
jo
out
xchg
sti
add
push
imul
jg
cmpsb
lea
mov
push
daa
mov
rcll
mov
in
leave
in
push
dec
notb
mov
xchg
cld
xchg
jo
rolb
mov
dec
outsl
fs
ret
fstpl
and
xchg
mov
xor
pop
or
lret
ss
lea
xchg
mov
sbb
ss
test
daa
mov
lcall
mov
ret
jle
mov
lcall
jg
ss
xchg
insl
jp
insb
pop
or
cltd
or
arpl
in
cmp
inc
and
dec
mov
lods
lea
jg
rorl
mov
outsb
pop
mov
imulb
cmpb
xor
sbb
subl
jne
dec
pop
pusha
adc
inc
pop
adcb
in
mov
xchg
push
pusha
aaa
mov
stos
das
and
lods
inc
push
testl
jg
adc
je
movsb
ffree
in
call
enter
jecxz
xchg
xor
mov
jl
nop
dec
xlat
insw
dec
pop
xchg
idivb
imulb
mov
lods
push
mov
imul
movsl
lret
out
cmp
outsb
int3
into
add
imul
mov
int3
cmp
xchg
inc
les
and
inc
fs
mov
fbld
movswl
jb
jge
fcomi
mov
dec
cmp
mov
pop
sbb
out
jmp
mov
xchg
jbe
mov
mov
in
mov
test
roll
xchg
jbe
mov
clc
jae
jo
push
dec
adc
or
push
pop
testl
push
mov
push
negb
das
mov
in
stos
out
jns
es
into
push
ljmp
mov
sbb
out
stos
fldt
xchg
xorb
int
and
loop
daa
push
xor
mov
lahf
aas
pusha
mov
pop
pop
or
dec
and
dec
mov
mov
clc
testl
adc
or
add
aas
jns
fldl2e
les
mov
mov
dec
dec
ret
push
into
cmpsb
mov
mov
imul
sub
mov
adc
mov
js
dec
and
mov
adcb
add
dec
mov
jae
ldmxcsr
push
push
adc
not
inc
push
lea
sbb
and
jle
cmp
dec
lahf
mov
mov
test
mov
iret
sub
push
stos
mov
and
inc
out
mov
mov
movsl
add
je
pop
adc
xchg
push
mov
sub
pop
and
aas
pop
or
out
dec
in
or
mov
arpl
xchg
mov
push
rorl
subl
push
data16
push
jmp
push
cs
les
test
or
das
jp
xor
jne
jb
xchg
fwait
push
mov
sub
sti
sub
mov
adc
pop
test
push
data16
and
cmp
jno
sbbb
das
pop
xchg
cmp
out
xchg
inc
fcomps
imul
aaa
sarb
xor
lds
fnsave
out
lret
enter
adc
sbb
xor
loopnew
rcrb
aam
and
lds
icebp
popf
mov
add
pushf
lods
subb
dec
jl
or
cs
mov
fcomps
sub
dec
mov
loopne
sbb
cmp
or
scas
into
dec
mov
mov
aaa
and
daa
pop
aaa
fidivs
sbb
cs
jne
and
jp
das
sbb
stos
bound
pop
pusha
cmp
mov
iret
mov
mov
dec
ficoml
jmp
mov
mov
decb
dec
push
sbb
repz
push
insl
aas
mov
bound
pop
and
dec
xlat
mov
lcall
jo
or
ljmp
jnp
lods
push
ret
daa
fdivs
insl
pop
or
fmul
fcom
xor
fisubrl
jge
fwait
lods
jb
sbb
scas
int
pop
push
mov
lock
pushf
xchg
adcb
add
js
addr16
rol
mov
shlb
lods
xchg
lcall
sub
mov
cmpsl
mov
leave
jge
popa
push
adc
lahf
xlat
push
jnp
notb
shlb
ljmp
jb
mov
jg
popf
xchg
push
nop
push
dec
loopne
stos
mov
adc
cmp
loop
pop
sahf
and
sub
and
jl
js
cmp
push
and
imul
pop
andl
mov
xor
pusha
sub
pop
adc
jp
cmp
fdivr
adc
add
rcll
call
nop
and
call
push
and
mov
bound
and
cmp
test
push
clc
pop
xor
adc
and
mov
gs
das
ljmp
add
sar
push
js
fwait
mov
push
sub
test
and
out
ja
aaa
and
ss
cltd
hlt
ss
xor
push
lretw
mov
and
cmp
out
xor
or
fidivs
lea
jle
stos
or
mov
mov
in
sbb
lahf
mov
cmp
pop
movsb
adc
hlt
inc
mov
push
push
data16
repnz
sub
jge
in
pop
dec
mov
add
and
mov
xor
cwtl
outsb
cmp
cld
push
dec
mov
add
mov
adc
inc
mov
inc
jle
adc
jecxz
cmp
daa
ja
lods
daa
mov
inc
mov
mov
push
loopne
imul
in
jge
pop
out
or
mov
dec
add
or
sbb
jg
dec
in
popa
bound
add
daa
test
fwait
jne
arpl
push
fwait
jne
out
xchg
jecxz
pop
daa
inc
mov
dec
cmp
bound
xchg
stos
outsb
ficompl
mov
daa
sti
pop
mov
push
jl
sarl
jg
outsl
xor
enter
es
xchg
xorb
in
fidivrs
jl
pop
add
clc
cmpsl
sub
sti
cmpsb
sbb
subb
jno
pop
and
in
dec
ja
into
rcr
ret
shr
andb
popf
sahf
loope
mov
out
mov
aad
jecxz
xor
icebp
push
mov
sbb
aaa
out
sti
sbb
xor
iret
shl
sbb
lock
fmull
popf
sbbl
int3
jno
fsts
lret
push
arpl
jp
aaa
xchg
xchg
push
test
ret
dec
daa
sbb
push
sub
pop
xchg
push
aam
add
das
jmp
mov
mov
mov
jl
and
push
sbb
mov
xor
pop
add
lret
movsl
cmp
rcrb
out
loope
loope
lock
pop
sub
aam
lods
shrb
jo
inc
sub
loop
cmc
roll
xor
stos
mov
mov
cmp
push
dec
adc
enter
in
adcl
imul
pop
insb
pop
ljmp
fadds
in
imul
ret
mov
sbb
push
cmp
pushw
adc
mov
ret
jmp
stos
mov
push
lods
jmp
mov
loope
dec
popf
lods
out
cmp
jb
mov
fwait
pop
jne
or
pop
jne
pop
out
mov
or
mov
and
push
push
xor
fs
cld
sbb
repz
jnp
dec
mov
push
inc
mov
insb
fldcw
test
test
xchg
jp
repnz
mov
aad
jns
ret
jle
and
out
xchg
push
cltd
fidivl
or
xor
pusha
int
icebp
add
addl
mov
lock
js
sbb
cmp
fwait
andl
outsb
into
pop
push
mov
xor
popf
and
setge
loop
stc
iret
mov
adc
out
ret
js
cltd
mov
in
dec
int
xchg
cld
pop
loopne
add
xchg
js
adc
rcrb
mov
jne
push
push
mov
std
fildl
dec
adc
jmp
cmp
and
rorb
and
shrb
outsb
pop
sub
aam
add
mov
mov
pop
jae
into
aam
outsb
shll
push
cmc
outsb
rcr
sahf
repz
and
mov
in
jbe
adc
test
out
xor
cmp
adc
ficomps
leave
ficomps
inc
cmpl
loop
fcomps
and
mov
xor
mov
ficompl
inc
out
add
int3
adc
test
addr16
aam
pop
shlb
mov
test
jg
fsubrs
lods
in
cmpsb
mov
cmpsl
sbb
xor
and
add
lret
sub
imul
jb
xchg
testb
lods
fisubrs
cmpsb
sbb
stc
fwait
push
jnp
stos
and
popa
mov
rcrb
lods
mov
jmp
mov
fsubs
pusha
cltd
shlb
mov
jbe
int
cmp
lods
imul
xchg
roll
jae
or
mov
push
pop
pop
shrb
enter
cli
movsl
xor
dec
push
sbb
std
mov
fwait
dec
push
and
mov
sbb
jp
push
lea
in
fwait
movb
lcall
je
lret
mov
mov
mov
or
addb
lcall
movsl
gs
fisttpl
and
out
cmc
test
cmp
pop
xor
or
insb
and
mov
add
sti
es
rclb
js
in
pop
lea
pop
mov
ret
push
sbb
scas
fcmovne
sarb
ds
xchg
xor
in
out
aam
in
jno
xchg
cmp
lds
push
adc
mov
push
insb
hlt
lods
mov
hlt
rcrb
jb
inc
test
pusha
cmp
and
and
mov
mov
popa
mov
inc
cmc
ror
sub
test
pop
xor
mov
aas
sub
xor
dec
cli
mov
mov
int3
fdecstp
mov
sub
loopne
xchg
lret
push
cltd
mov
push
sub
loope
sbb
stc
add
or
mov
popf
adc
push
stos
add
or
push
aam
loope
dec
sbb
mov
jb
lret
xor
pop
popf
cmp
aas
xor
cs
loop
neg
loope
dec
push
ret
popf
mov
and
jae
mov
pop
push
cld
faddp
ja
in
sub
cltd
cmp
push
pop
xchg
jb
cmpsl
pusha
movsl
mov
and
insb
mov
push
fucomi
push
xor
pop
arpl
fimull
push
rolb
or
int3
out
mov
cmc
mov
mov
push
mov
xor
add
jmp
mov
icebp
adc
push
push
cmp
movsl
ficomps
mov
inc
xchg
mov
out
xor
and
cmp
dec
aam
mov
aaa
into
pop
aaa
jp
xchg
sarb
sbb
js
cmpsb
sbb
pop
add
cmp
sub
xor
mov
sub
cmp
loope
call
add
mov
add
mov
inc
xor
rorb
jbe
addb
insb
cmpsl
das
xor
sbb
int3
std
adc
push
jle
add
gs
into
or
cld
or
mov
repnz
out
sbb
pop
sub
or
gs
mov
lahf
jecxz
je
or
add
mov
leave
and
sbb
shl
push
xor
xor
test
out
or
insl
ljmp
int
jmp
sub
xor
psrlq
std
aad
and
add
jmp
cmpb
mov
xchg
jg
rcrb
in
adc
movsb
ljmp
dec
jmp
mov
inc
in
test
js
scas
add
sar
out
jno
in
mov
inc
mov
out
push
pop
movsb
mov
fstl
mov
rclb
cmp
pop
fstps
pop
mov
dec
pop
or
sub
pop
sub
sbb
add
out
or
pop
lea
sbb
or
out
cmpsl
cmpsb
fwait
jp
loope
push
nop
nop
inc
pop
es
mov
mov
or
popf
cmp
and
xchg
push
fistpl
outsl
pop
pop
push
int3
cld
push
adc
sub
mov
and
add
sbb
stc
push
mov
push
xor
jbe
xchg
testb
mov
sbb
fstpt
mov
leave
dec
bound
ret
mov
add
mov
add
mov
push
in
out
and
call
jp
push
lock
mov
loope
call
out
pushf
popf
cmp
push
mov
add
inc
lret
mov
loop
sbb
inc
stos
adc
rcrb
adc
mov
adc
mov
gs
sbb
mov
cmp
xor
loop
shlb
jns
mov
pop
lods
lods
jno
mov
pushf
mov
pop
and
sub
jns
pop
and
sbb
pop
aaa
pop
call
sbb
dec
or
push
ret
cmp
sbbl
xchg
cmp
pop
sbb
popf
cmp
xor
lret
ret
stc
or
shlb
stc
mov
adc
mov
push
pop
pop
xchg
test
sub
mov
sub
add
shlb
fcmovnbe
call
fisubs
mov
test
inc
or
pusha
fchs
outsl
sahf
adc
xchg
notl
jecxz
fs
and
inc
in
jl
xchg
cmp
pop
push
outsb
or
pop
or
rol
add
dec
add
mov
push
in
cmc
fcmovu
enter
dec
outsl
jle
mov
cmpsb
je
add
stos
pop
hlt
stos
fdivs
scas
or
sbb
dec
sub
clc
sub
and
inc
popa
dec
scas
inc
je
shll
inc
fwait
enter
pop
into
pop
rorb
push
imul
xchg
cld
shr
sbb
sahf
sar
pushf
test
jns
inc
adcl
insb
push
pop
mov
sub
push
fucomi
sbb
sahf
dec
dec
inc
jns
sbb
hlt
mov
dec
pop
mov
adc
dec
pusha
subps
out
and
popa
push
adc
mov
add
in
inc
enter
push
and
fs
mov
xchg
pop
mov
sbb
pop
inc
pop
movsb
call
popf
fnstenv
ja
test
lahf
ret
push
mov
gs
icebp
pop
and
pop
jb
jae
pop
jne
mov
adc
fnsave
je
popa
inc
mov
push
aad
cmp
in
decl
fs
aas
mov
cmp
je
xchg
dec
scas
adc
inc
aas
aaa
mov
sarl
mov
lcall
xlat
inc
lock
cld
add
ret
cmp
jmp
inc
jg
daa
test
outsl
mov
cltd
sbb
inc
lcall
ja
inc
in
movl
push
sub
cmc
ja
cmp
lea
jnp
xchg
pop
daa
aam
cmpb
pop
hlt
and
jns
inc
je
push
insb
movsl
bound
xchg
or
pop
sti
jb
lcall
add
nop
pop
ret
or
pop
das
pop
sbb
std
add
or
in
and
mov
mov
lret
rcrw
dec
dec
jns
pop
xchg
push
or
mov
leave
rorb
cld
push
test
cmp
jge
mov
jg
mov
sbb
pop
jne
es
and
mov
push
cmc
lds
aaa
mov
xchg
sub
rclb
sbb
mov
push
and
icebp
sub
pop
test
lods
cmp
or
dec
and
mov
lret
test
arpl
pop
ja
ret
inc
jecxz
mov
sbb
jnp
mov
test
fisttpl
push
pushf
dec
or
gs
pop
ficomps
adcb
ss
in
stos
enter
push
in
push
or
add
andb
cmp
in
cltd
push
aas
push
jge
push
inc
mov
mov
pop
pop
jmp
js
jns
or
rorb
jecxz
jmp
sar
mov
mov
mov
ss
mov
ds
xor
sub
sbb
mov
dec
inc
orb
je
dec
mov
inc
pop
adc
or
cltd
jo
insb
xchg
cmp
mov
jbe
es
cs
inc
mov
repz
sti
mov
inc
hlt
push
pop
xchg
and
inc
and
pop
push
test
pusha
in
inc
stos
push
jns
adc
cmp
mov
sub
xorl
repz
lods
mov
mov
xor
mov
ret
xor
xchg
adc
stos
test
mulb
pushf
add
dec
movb
pop
inc
test
leave
mov
dec
xchg
repz
loop
inc
and
cmpsb
js
sbb
inc
fdivp
icebp
pop
pop
lds
pop
lcall
dec
fs
faddl
mov
add
ror
mov
stos
movsb
xor
push
enter
push
data16
cld
add
mov
and
jbe
leave
sub
or
out
icebp
stos
sub
insl
jns
mov
js
stos
sub
ljmp
sbb
insb
lret
xchg
mov
pop
or
popa
mov
les
aaa
sbb
mov
movsl
adc
mov
lcall
inc
nop
pusha
insl
scas
add
fcmovbe
push
and
int3
stos
jnp
push
pop
je
cs
inc
int
enter
dec
fistpll
std
pop
mov
loop
mov
inc
into
hlt
hlt
test
aam
sbb
adc
pop
in
mov
dec
rol
int
xchg
cltd
stos
pop
and
sahf
fidivs
stc
push
cs
or
add
mov
xor
fiadds
int3
push
scas
push
js
xchg
movsl
out
pop
mov
sub
mov
cmp
sub
icebp
popa
lock
mov
ret
jbe
fcmovbe
scas
sub
addl
out
xchg
ret
push
xchg
xchg
scas
in
pop
ljmp
fnstcw
cmp
mov
jg
or
cmpsl
jl
inc
in
adc
pushf
jb
lret
push
shl
dec
in
imul
cmpl
mov
sahf
add
and
jb
dec
push
push
push
mov
pop
lahf
or
ja
mov
jb
dec
hlt
imul
aas
mov
call
fstpl
sbb
in
push
sti
pop
jmp
fldl
and
jbe
xchg
cmp
jecxz
in
cs
pop
es
xchg
dec
ret
add
lret
lds
les
adc
pop
xchg
mov
ja
xchg
push
lea
inc
cmp
or
xor
pushf
add
stos
outsl
lret
dec
add
rorl
push
push
jl
adc
dec
nop
mov
jecxz
repnz
pusha
or
jp
xor
clc
shll
sub
xchg
aas
fimuls
fdivr
xlat
cld
jle
adc
jbe
icebp
std
dec
cwtl
pop
fdivrl
and
pushf
cmpsb
ljmp
jno
ja
clc
stos
icebp
jl
ja
add
jg
test
or
in
stos
push
xchg
cmpsb
adc
cltd
add
xor
push
addr16
sar
inc
push
lret
addr16
gs
jp
ret
inc
lods
je
in
pop
xchg
lds
stos
popf
or
xchg
push
int
jns
mov
sbb
sub
xor
subb
cmp
stc
int3
xchg
jae
outsb
sahf
jno
xchg
mov
and
mov
lret
fcmovne
xor
adc
jns
pop
outsb
loopne
mov
jae
fsubr
jns
pop
mov
imul
adc
daa
add
or
test
paddsw
scas
imul
in
arpl
mov
or
and
xchg
jae
mov
mov
mov
mov
pop
xor
jmp
sub
aaa
inc
cmovnp
or
xor
in
cwtl
cmpl
stos
push
or
mov
aaa
xor
shll
pop
cmc
xor
bound
sbb
inc
xorl
jae
sbb
push
xor
repz
dec
arpl
out
rcll
out
test
sti
seto
jp
mov
dec
mov
fbld
inc
aaa
pop
cmp
cmpsl
or
cmp
pop
lea
ljmp
stc
fldcw
pop
insb
mov
in
adcl
negl
enter
xlat
mov
fs
xchg
test
xlat
mov
in
ja
ficoms
pusha
fwait
hlt
inc
sub
icebp
add
add
adc
out
rorb
call
out
sbb
scas
add
rcrl
fidivrs
lret
push
push
mov
jle
dec
ljmp
aas
repnz
adc
or
mov
mov
ficoms
pop
outsb
into
aam
in
xchg
imul
push
adc
jmp
out
xchg
mov
icebp
push
inc
mov
pop
jno
push
mov
push
prefetch
or
pushf
cmp
in
cltd
fmul
lea
and
cmpsl
ljmp
push
add
in
dec
ljmp
sub
push
iret
pop
pop
sbb
push
mov
neg
mov
leave
rorl
out
leave
in
jl
xor
jns
fldt
adc
mov
mov
cmp
dec
scas
pop
fs
out
inc
imul
loope
in
sbb
add
mov
xchg
mov
push
lods
cmp
xchg
testb
shll
ffree
cltd
sub
movsb
lcall
xchg
sub
push
cmp
mov
imul
push
push
push
cmp
xor
fwait
popa
cmp
mov
pushf
pop
push
xor
push
pop
icebp
and
aas
insb
ret
dec
in
inc
test
cwtl
fcmovnu
dec
or
pop
jbe
mov
popf
mov
jnp
mov
lock
or
pop
popf
outsl
je
cltd
adc
jle
sub
xchg
stos
dec
out
fcompl
pop
jnp
aas
push
in
repnz
fisubrs
add
mov
push
dec
xchg
les
xchg
mov
push
fmulp
jo
push
jecxz
jg
cmp
mov
rclb
pop
jnp
stos
lcall
mov
mov
ret
xchg
es
idivl
sub
mov
repnz
mov
movsl
adc
xor
mov
cmc
jmp
mov
mov
jge
dec
pop
test
pop
xchg
xchg
pop
mov
outsl
aaa
inc
js
and
pop
jle
cwtl
sbb
push
andb
pop
mov
adc
out
jg
cmpsl
or
jle
jmp
aam
dec
jno
in
out
jae
adc
sbb
or
clc
aaa
std
movsb
and
icebp
sarb
sbb
jle
jl
or
jb
mov
xchg
pusha
and
movsb
dec
stos
jecxz
pop
cmp
dec
sub
add
and
dec
fucomi
loop
pop
lods
push
mov
xor
lea
push
hlt
out
dec
sti
sti
rep
jl
dec
push
lods
mov
out
xchg
jne
sbb
aaa
in
ss
in
adc
xor
and
shll
fcomi
jnp
mov
or
adc
or
fsubl
xor
mov
icebp
cli
inc
mov
ret
xchg
js
lret
pop
incl
cmp
xchg
adc
adc
add
xchg
jne
ret
lahf
push
shr
hlt
enter
jmp
cs
pop
jno
repnz
mov
xor
mov
pop
pop
push
mov
ret
mov
xchg
cmp
loop
jbe
xchg
loopne
sti
aad
mov
pop
je
aad
lret
repnz
movsl
xor
mov
inc
xor
cld
mov
and
in
clc
addr16
push
pop
daa
adc
mov
out
jge
ds
cmc
xchg
fstpt
cmp
dec
mov
mov
lret
push
rcll
stos
pop
jmp
adc
andl
imulb
push
jnp
jne
push
jle
mov
lods
das
movsl
sbb
test
in
mov
scas
sbb
and
mov
test
pop
jne
push
out
add
cmp
sti
movl
mov
aam
cmc
cmpsl
stos
mov
xchg
nop
push
loope
cmp
xor
cltd
adc
pop
xchg
sbb
cwtl
test
and
mov
test
fucomp
xor
and
xchg
push
pop
addr16
add
mov
std
mov
add
push
mov
into
adc
ja
pop
and
sbb
out
pop
movsb
mov
stc
sar
out
mov
jmp
icebp
jmp
gs
or
addr16
push
ja
inc
mov
enter
and
adc
mov
sbb
aam
dec
aaa
mov
pop
inc
mov
icebp
xchg
sbb
iret
stos
roll
dec
pop
fisttps
jle
mov
ret
xchg
adc
push
fists
and
or
lahf
in
push
imul
inc
popa
mov
outsb
push
mov
mov
enter
lea
jmp
jecxz
adc
imul
inc
stos
cmp
add
jge
lret
sbb
pop
mov
cmc
fnsave
jmp
mov
in
cs
rorl
lret
push
daa
adc
fdivrs
dec
insl
mov
push
mov
sbb
insl
sub
and
pop
es
mull
xorb
lahf
push
dec
adc
sbb
mov
sarb
je
loop
fwait
sbb
mov
into
jnp
jae
mov
adc
outsl
pop
dec
inc
repz
test
push
and
push
mov
mov
js
push
sbb
push
int
mov
imull
mov
lds
mov
or
mov
dec
jnp
out
int3
lcall
test
pushf
insl
dec
add
iret
mov
ss
xor
or
mov
xchg
out
push
bound
pushf
or
addr16
xchg
adc
fcmovb
les
or
repz
testb
mov
jmp
shl
shlb
sbb
shll
push
ja
daa
push
cwtl
mov
je
mov
or
or
sti
ss
stc
daa
cmp
mov
testl
sub
arpl
and
inc
push
fmull
push
movsl
mov
aaa
fwait
sub
loope
xor
and
les
or
sub
pop
fmul
push
mov
or
enter
push
xchg
pushf
or
call
subb
jp
or
aas
push
adc
loop
xchg
xor
mov
dec
jno
out
xor
mov
hlt
in
lret
scas
xor
aas
lret
shl
cltd
inc
in
sbb
xor
test
push
sub
dec
inc
mov
xlat
test
fwait
and
push
xlat
leave
xchg
or
or
inc
inc
dec
sub
cmp
push
sub
xorl
leave
outsl
loope
xchg
add
inc
or
shll
ss
lcall
xchg
pop
mov
cmp
cli
add
es
out
fistl
xchg
out
iret
sbb
xor
mov
std
inc
es
pop
inc
scas
ss
mov
ficoms
sbb
sbb
sbb
mov
or
clc
mov
mov
pop
jge
les
push
or
pusha
scas
or
sbb
and
lods
fsubrl
or
loopne
pop
test
test
dec
mov
pop
or
inc
aad
es
adc
insl
rolb
push
adc
jno
scas
jbe
sbbl
fldlg2
or
addr16
test
aad
test
push
mov
dec
dec
loopne
in
fdivs
xor
cmp
xor
adc
sbb
push
mov
shlb
sub
aas
test
mov
das
hlt
fdivrl
push
rcll
cmp
push
stos
push
je
inc
push
clc
cmpsb
push
jg
je
repnz
or
cmpsl
or
sbb
movsl
mov
int3
push
sub
xchg
dec
iret
insl
int
mov
adc
test
cmp
ds
fs
pop
dec
cmp
xchg
ss
cmp
cltd
fnstenv
jge
jge
push
jp
push
mov
int3
xchg
sti
adc
mov
mov
insl
out
mov
sahf
test
pop
sbb
or
roll
sub
jb
jns
xor
sbb
xor
cmp
bound
cmpl
nop
cltd
mov
scas
mov
in
pushf
inc
push
xor
bnd
insl
in
push
in
mov
mov
push
sbb
dec
dec
and
leave
adc
jmp
stos
mov
lods
mov
jg
imul
in
bswap
fstcw
and
mov
popf
xor
inc
and
popa
inc
out
and
cwtl
pop
adc
gs
lods
adc
fcoms
xlat
aaa
in
imulb
push
sti
pop
add
add
lds
or
push
test
in
xchg
aam
and
ror
dec
cmp
mov
mov
inc
sbb
cmpl
into
popa
test
sub
xorl
int3
scas
sub
xor
sbb
pop
cld
dec
cltd
mov
adc
and
sub
cmpl
sbb
je
pop
shrl
cmp
ja
push
pop
jae
sub
sub
scas
adc
push
mov
cmp
imul
inc
cli
movsl
mov
arpl
and
push
ss
fbld
and
sbb
arpl
push
inc
ret
inc
fs
insb
xor
dec
dec
lea
push
mov
dec
lods
push
movl
call
out
fdiv
pop
add
pop
pop
loope
cmpsl
lods
cmp
push
ret
sub
jno
add
shl
add
or
popa
icebp
or
lahf
mov
andb
aad
push
mov
das
mov
mov
dec
or
push
hlt
mov
mov
and
addb
mov
dec
pop
pop
mov
orb
daa
mov
outsl
inc
inc
mov
mov
adc
in
test
call
inc
mov
jecxz
mov
push
mov
repz
fildl
jb
mov
insb
cmp
mov
xor
mov
cld
pusha
bound
imul
and
jns
cmpsb
lret
jae
xorb
insb
out
xor
ds
out
stc
push
mov
jnp
movsl
and
jns
jecxz
jecxz
mov
mov
cwtl
repz
pause
mov
xchg
xchg
add
hlt
test
lds
xchg
dec
sti
cmp
sub
imul
loopne
or
ret
push
pushf
fsubrl
jecxz
dec
pop
cmp
fistps
mov
lds
xchg
adc
rorb
scas
jmp
dec
out
inc
shll
loope
dec
pop
rol
xlat
test
sbb
xor
rorb
outsl
and
inc
add
pusha
jle
psrld
dec
cmpsb
aas
pop
sbb
insb
inc
add
mov
inc
btcl
ljmp
sub
mov
cmpsb
push
mov
jo
orl
add
xor
and
pop
pop
mov
frstor
dec
push
push
xor
add
or
pop
lock
ljmp
test
sub
stos
and
pop
jb
ret
cmp
jnp
or
pop
outsl
test
inc
jb
fwait
push
fiadds
push
iret
sbb
mov
call
hlt
mov
fs
sbb
cmpsb
cmp
jecxz
insb
pop
imul
jo
adc
ret
xor
mov
cli
xor
pushf
pop
or
push
shll
outsb
sub
pushf
xchg
lret
cmc
insl
cltd
je
lahf
pop
dec
mov
shr
das
lods
fcoml
lock
pop
fwait
jle
dec
negl
fcmove
stos
cmp
add
inc
lret
stos
mov
movsl
ja
cltd
mov
loop,pn
add
or
movsb
fcmovne
stc
mov
dec
ds
inc
outsl
ja
xchg
cmp
xchg
adc
repz
mov
inc
mov
icebp
pop
test
ret
cld
push
jo
cmc
mov
mov
mov
stos
loopne
test
mov
xor
xchg
adc
xorl
fidivl
jns
mov
dec
mov
mov
mov
jbe
and
mov
xor
mov
mov
dec
lahf
decb
lahf
jg
adc
dec
mov
addr16
nop
sub
cmpsl
stos
push
bound
xchg
mov
lea
roll
bound
inc
bound
xchg
xor
push
mov
std
adc
loopne
cmp
pop
pop
add
mov
rcrb
jecxz
lds
ffreep
jp
mov
mov
jle
cmpsl
xchg
jecxz
mov
cmp
aad
enter
push
fnsave
mov
fwait
gs
rcrl
lret
pop
jg
and
push
adc
mov
nop
sub
movsb
push
jg
les
pushf
movsb
xchg
fimuls
inc
test
sbb
xor
push
cmp
jecxz
lcall
mov
adc
js
orb
pop
and
mov
aas
cmp
inc
push
xchg
xor
adc
in
sub
cmp
and
fwait
loopne
cltd
ds
mov
push
lods
jb
lcall
add
fidivrs
in
daa
sar
inc
out
insl
lcall
mov
add
lahf
ret
mov
es
xor
paddusb
mov
mov
aaa
and
call
dec
xor
jmp
test
movb
jbe
lret
aad
lret
cli
jge
lahf
jno
dec
mov
mov
stos
cmp
sahf
cmp
movsb
fsts
jb
outsl
jecxz
outsl
and
jns
push
sub
mov
ja
leave
out
addr16
adc
cmpl
cmp
sub
mov
jge
xchg
scas
adc
repnz
fistl
popf
push
clc
jl
sub
frstor
cmp
dec
mov
rcrb
jb
stos
sub
xor
pop
jne
push
mov
or
xor
jg
mov
or
pop
mov
mov
das
cmp
ret
loopne
jp
fldl
pop
icebp
and
ror
fwait
mov
clc
vcvtsd2si
inc
repz
test
mov
mov
adc
imull
fisubl
push
stos
sbb
push
push
xchg
sbb
push
xchg
mov
and
ja
mov
enter
xor
and
inc
cs
lret
loope
xchg
mov
push
out
scas
jbe
das
into
je
pop
jns
daa
xor
call
xchg
push
stos
shrl
sbb
push
push
out
fisttps
xchg
shl
loop
xor
fxch
lcall
dec
jb
cwtl
mov
and
aaa
jne
ret
pop
cwtl
jmp
outsb
repz
cmp
nop
jl
inc
addb
pushf
out
test
repnz
mov
sbb
outsb
icebp
add
cmc
cli
push
inc
rorb
mov
ret
dec
nop
mov
dec
adc
adc
mov
insl
movsb
cld
mov
jne
in
dec
dec
jns
mov
inc
hlt
pop
mov
stos
cwtl
icebp
ds
inc
ja
lcall
xor
and
xchg
shlb
lret
es
push
pop
int3
cmpl
out
mov
iret
sbb
fisubrs
mov
cmp
pop
das
and
clc
stos
inc
aam
sbb
sub
fisubrs
xor
test
shlb
inc
sbb
jns
cmp
je
shll
mov
or
nop
fmulp
xchg
xlat
outsb
mov
in
outsb
adc
mov
inc
and
inc
and
sarl
stos
xor
push
jbe
jp
mov
mov
js
pop
mov
xor
or
mov
xchg
shll
or
jno
mov
mov
or
ja
fs
test
sbb
imul
stos
dec
and
mov
adc
push
jp
std
mov
aad
cmp
cld
pushf
loope
je
xor
xchg
or
push
fs
gs
loope
sub
mov
xor
jno
hlt
mov
push
fwait
jb
hlt
jecxz
sub
fiaddl
add
pop
stc
lcall
pop
repz
test
movl
pop
lcall
pop
outsl
push
adc
xlat
jbe
pop
mov
xchg
fldcw
xor
adc
lret
xchg
or
fs
popf
xor
test
xor
fcmovnb
add
and
sub
sarl
test
inc
inc
inc
and
push
popa
xlat
jl
mov
cmp
jmp
sub
cs
push
dec
or
or
mov
test
and
imul
scas
adc
loope
and
cmp
into
les
or
add
into
or
push
jecxz
jne
call
mov
daa
mov
pop
push
enter
dec
mov
sbb
cmp
mov
loop
js
mov
insb
pushf
test
inc
mov
and
test
lods
mov
pop
adc
out
out
dec
or
push
leave
lock
sahf
adc
orl
loopne
repz
in
adc
and
into
aaa
mov
jecxz
aad
pop
lods
dec
cwtl
jge
loopne
mov
mov
dec
cs
inc
fists
or
lock
or
test
test
mov
sub
and
mov
inc
push
xor
test
adc
nop
jmp
dec
inc
jae
aaa
in
fbstp
xorl
mov
mov
subl
lea
xchg
jge
xlat
pop
and
xchg
push
add
popf
mov
cmp
mov
xchg
sbbl
adc
mov
mov
push
pop
mov
jbe
popf
test
or
dec
xchg
sahf
cmp
push
mov
sbb
mov
mov
sub
sub
loope
daa
cmpsl
js
jno
xchg
cld
daa
mov
push
mov
lock
sub
imul
cmp
push
sbb
xlat
stos
movsb
jge
imul
or
sub
or
push
les
in
dec
arpl
and
jbe
cmpl
ret
dec
rolb
jle
out
mov
into
stos
xchg
ficomps
jno
mov
stos
pop
sahf
sbb
add
popa
repz
sarl
mov
ficompl
xchg
lea
out
jmp
mov
push
jmp
jne
jmp
add
add
add
inc
es
mov
lods
or
push
xor
out
push
cmpl
mov
fistps
fcom
jg
mov
daa
movsl
loopne
xor
fbld
mov
mov
shlb
push
inc
call
adc
cmp
push
mov
hlt
or
inc
sbb
xchg
adc
jo
shr
xor
or
pop
clc
inc
mov
add
fildl
jl
popa
les
sbb
sarb
or
jmp
mov
int
push
jge
loope
inc
or
sahf
imul
repnz
mov
adc
fidivl
jo
daa
scas
repnz
sub
scas
or
push
bswap
jle
in
orb
into
aaa
neg
xor
push
mov
and
addr16
jmp
mov
mov
cld
sub
pop
mov
mov
adc
mov
jns
mov
mov
mov
jbe
int3
out
sbb
jae
xchg
scas
stc
and
jne
push
fucomp
outsb
stc
rorl
jl
sbb
int
or
xlat
shll
lret
fsubl
fldenv
pop
addr16
cmp
cmpsl
ljmp
mov
repz
loope
and
sub
push
add
mov
movsb
mov
hlt
aaa
lret
lret
sbb
clc
insb
fs
xor
loope
rcr
mov
dec
dec
dec
test
mov
fmulp
cltd
xor
mov
sbb
je
mov
nop
xorl
add
push
dec
cmp
jae
mov
mov
pop
cmc
pop
das
movsl
and
je
addr16
repz
popa
add
push
mov
ret
jle
in
das
bound
clc
pop
popa
xchg
mov
lods
add
sub
pop
faddl
int3
call
lret
cmc
sub
shl
stc
cmp
sub
add
jo
movsb
dec
icebp
sub
movsl
jl
add
lcall
lds
ljmp
inc
pop
jp
aas
pop
insb
negl
mov
sub
pop
pushf
pop
mov
fstpl
mov
mov
cmc
fldl
xor
adc
dec
sub
subl
push
xchg
jl
adc
cld
mov
xchg
mov
jbe
cmp
jecxz
out
lcall
mov
je
sub
mov
fists
mov
fs
mov
sub
in
add
jg
cmpsb
fld
pop
mov
loopne
dec
negb
sbb
call
xchg
xchg
into
lcall
mov
gs
sti
xchg
and
xor
inc
add
fisubl
int3
rcrl
out
mov
cwtl
cli
shr
pushf
jmp
lret
adc
test
xchg
cmp
loop
cmp
cmpsl
cmp
stos
andb
movsl
push
mov
pop
push
sar
or
lods
mov
sar
shll
lret
or
pop
fcompl
mov
add
dec
sbb
push
out
loope
popa
jg
mov
jl
sub
xchg
xchg
sbb
mull
pop
xchg
pop
mul
push
insb
out
shrl
jno
mov
addl
mov
inc
pop
xor
fst
push
insl
and
cmp
sahf
jb
xchg
mov
adc
addr16
add
adc
js
adc
push
aam
sbb
add
decb
faddp
loop
and
loopne
jge
jge
jne
pop
shrl
out
cmpb
jo
dec
int
push
repnz
ret
ds
sub
movsl
dec
call
ret
push
in
ljmp
ficoms
cmp
jecxz
inc
xchg
mov
jo
cmpsl
cmpsl
or
ds
les
pmaxsw
cmp
mov
jp
sub
mov
jnp
xor
testb
xchg
cmpb
cwtl
and
gs
mov
jecxz
inc
push
push
push
mov
mov
ret
sti
lock
fstps
mov
ds
cmpsl
sub
xor
in
nop
cmp
sbb
adc
scas
rcr
loopne
cs
mov
cmp
inc
sub
mov
gs
add
add
movb
push
sub
repz
sub
ds
xlat
fnstenv
ret
sbb
ss
ss
dec
pop
or
outsl
ret
je
int
dec
scas
insl
push
cmpsl
movsb
push
addb
push
es
loope
jle
dec
loope
outsb
xorb
pop
dec
jmp
pop
lahf
mov
mov
addr16
adc
daa
aaa
scas
pop
lea
jae
adc
scas
int3
int
loop
sub
sub
popa
rcrb
pop
xor
inc
mov
push
fcoms
mov
cmp
push
mov
dec
cld
jmp
int3
add
sbb
rol
int
lds
shll
adc
mov
push
push
sub
scas
or
gs
mov
arpl
addb
sub
shrl
lea
fdivrl
sub
xor
adc
movsl
aam
or
pop
mov
jnp
dec
andl
hlt
movsl
popf
outsb
dec
pop
adc
cli
cmp
push
cmpsl
aad
xchg
or
clc
and
push
cmp
cmc
sbb
jp
movups
outsl
jb
cmp
push
jmp
sbb
xorl
or
dec
int3
xchg
clc
add
ja
dec
pop
dec
cld
ja
fisubl
mov
dec
sub
cmp
in
adc
pop
sub
xlat
adc
ret
or
sub
push
icebp
add
imul
cwtl
adc
in
adc
push
sbb
push
mov
mov
sbb
xlat
fisubs
push
stc
jne
inc
ds
lcall
lock
push
inc
test
jb
push
rcr
adc
imul
pop
lcall
xchg
mov
pop
repz
gs
mov
repnz
mov
orl
cmpsl
lahf
mov
push
cmc
ja
pusha
sub
mov
mov
fisubs
dec
decl
ss
std
adc
pop
popa
jno
mov
xor
popf
pop
mov
int3
mov
inc
js
outsl
inc
lods
mov
test
push
fbld
cmpsl
ffreep
jno
mov
inc
add
xlat
pushf
cmpsb
cmc
adc
mov
out
add
jg
aas
mov
xor
insl
xor
sub
push
or
iret
mov
mov
out
adc
cmp
iret
or
dec
inc
in
aaa
cmp
xor
xchg
rcrl
xor
pop
iret
mov
in
sti
mov
push
es
mov
mov
add
mov
cmp
out
push
xlat
push
outsl
dec
push
bound
inc
lods
shlb
rorb
iret
fidivrs
test
insb
sub
mov
push
sarb
pop
xor
xor
arpl
ljmp
in
arpl
iret
push
les
aas
subb
fstpt
lods
stos
xchg
dec
out
movsb
sbbl
push
les
pop
cmc
repz
pop
movsb
jbe
das
sbb
lods
push
mov
add
mov
lds
mov
cmp
int
cmp
dec
imul
pop
into
ds
cltd
xor
add
repz
lret
inc
out
adc
xchg
pop
test
push
push
fistl
hlt
adc
inc
dec
jno
sub
inc
icebp
icebp
shl
das
outsb
dec
shlb
shlb
scas
cwtl
cmp
xor
dec
dec
aas
mov
sbb
rorb
push
push
xchg
sub
sub
cmp
repnz
subb
mov
ret
testb
adc
stos
mov
call
out
and
sbb
test
push
mov
loope
and
es
xchg
dec
outsb
jnp
inc
sub
dec
bound
repz
js,pt
test
loopne
push
inc
pop
in
add
fisubl
xchg
xor
cmp
lret
inc
rcrb
out
lea
add
xor
jns
stc
jl
mov
in
sub
pop
pushf
push
xor
cli
adc
stos
call
fdivr
mov
mov
stos
in
test
repnz
inc
add
xchg
clc
lods
loopne
jnp
into
ja
hlt
or
out
dec
xchg
lds
iret
pop
cld
pusha
loop
add
or
lods
pop
cld
dec
ror
lods
ja
push
jbe
push
fwait
pusha
hlt
mov
jnp
xchg
sarl
pop
lret
push
adc
xor
xchg
mov
or
xchg
pop
push
outsb
lcall
das
cltd
xchg
and
int3
mov
sub
stos
les
push
lods
aas
xchg
push
cltd
sar
fbstp
jo
push
and
or
adc
lret
lret
ja
test
aaa
sub
sbbb
test
or
data16
repz
and
jle
sub
mov
and
fisttps
cmpsl
dec
push
negb
mov
add
pop
cs
sahf
xor
call
add
mov
mov
mov
jb
add
mov
push
mov
ret
xchg
out
cmp
in
les
pop
int
scas
push
rolb
cmpsl
mov
mov
mov
call
cs
cmp
jg
pop
pop
add
scas
sub
negb
or
dec
out
xor
jbe,pt
push
repnz
fstl
pop
dec
jp
and
mov
sbb
xor
mov
xor
mov
sti
or
push
push
and
dec
negl
lods
out
arpl
adcl
inc
shlb
jbe
mov
test
inc
xchg
sahf
adc
out
jne
xchg
jecxz
xor
cmp
add
fwait
arpl
ficomps
push
roll
adc
xchg
mov
arpl
cmpsl
push
jle
mov
out
pushf
pop
pop
sbb
push
test
mov
lods
popf
adc
mov
out
icebp
mov
fcompl
rcll
lahf
mov
jp
popa
fistl
mov
lcall
fsubrs
mov
cmp
pop
dec
ss
mov
out
cli
rclb
outsb
js
cli
jmp
cs
jne
aaa
sub
or
dec
insl
cltd
cmp
mov
pop
push
fdivs
sbb
dec
shll
sbb
inc
inc
leave
in
rclb
cmpsb
push
sub
mov
jmp
psubusw
xor
in
push
push
loopne
pop
sahf
inc
adc
pop
andb
jne
and
push
xchg
shlb
xor
mov
test
sbb
outsb
sti
and
and
cmp
fimuls
mov
movl
in
out
sbbb
add
xchg
mov
in
sub
test
pusha
pushf
scas
pop
add
add
sbb
pusha
stos
mov
push
loope
add
pop
cmp
aam
hlt
bound
fcompl
clc
test
mov
lds
in
enter
cmpb
mov
jmp
jb
stos
and
ret
add
fcmove
cmpsb
dec
add
xlat
pusha
inc
mov
movsb
xchg
ficoms
sbb
jo
xor
mov
inc
fsubp
jns
test
pop
jbe
add
add
in
inc
shll
mov
jae
aad
imul
mov
pop
lds
fisubs
sub
lahf
and
inc
jns
sbb
movsl
xor
addb
jno
push
ret
lods
lret
jnp
mov
in
test
iret
cmc
inc
mov
aad
fwait
repnz
in
mov
push
das
xchg
xlat
ret
test
insb
fildll
adc
pop
jg
fdivl
push
jb
cltd
jl
push
jmp
mov
jbe
xchg
cmp
imul
shlb
mov
and
loopne
xlat
ja
arpl
sbb
jbe
push
jg
mov
dec
pop
cmp
insb
xchg
hlt
adcl
cmpsl
mov
aad
add
inc
mov
sub
aaa
jl
std
hlt
nopl
xchg
sbb
push
pusha
jle
movsl
dec
scas
inc
lods
mov
dec
add
sar
push
hlt
mov
add
aam
fimull
das
addr16
sub
lret
cmc
into
fwait
or
jno
in
daa
outsl
fisubrs
sub
cmp
notb
daa
xor
pop
popf
pop
pop
lock
mov
addr16
push
pusha
jmp
sub
popf
ljmp
jne
mov
mov
or
sbb
aas
sub
sub
in
sti
mov
in
cmp
ljmp
je
mov
xchg
mov
out
sub
lcall
loope
sti
mov
jb
pop
mov
inc
cmp
sub
dec
pop
and
fsubr
xchg
pop
and
xchg
xor
js
adc
adc
mov
pusha
inc
dec
xchg
fildl
add
dec
out
jl
out
add
mov
push
jle
mov
adc
leave
adc
clc
mov
rclb
adc
out
cmc
sub
das
loop
mov
jae
ficomps
jo
or
test
lea
loop
arpl
pop
mov
dec
shl
adc
mov
mov
mov
stos
push
rcr
xchg
push
mov
repz
bound
ss
cmp
xchg
bound
jmp
sub
sti
cmc
cmpsb
popf
rol
xorl
popf
fsubs
test
jg
add
jmp
pop
push
inc
stos
mov
mov
into
ja
or
sub
pop
fs
or
adc
in
pop
aas
std
testb
cmpsl
hlt
into
je
fmul
dec
sub
xchg
push
rcl
jmp
jmp
fidivl
push
pop
sahf
inc
jge
cmp
repnz
mov
sub
aad
jmp
loope,pt
fstpt
add
pusha
cmpsl
pop
popf
in
loopne
or
dec
add
in
xor
shrl
mov
icebp
data16
jae
sbb
in
mov
dec
sti
push
cli
and
js
imul
dec
fiaddl
mov
mov
dec
in
lcall
add
gs
jne
mov
sub
cmp
adcl
shlb
xor
mov
shl
mov
inc
and
andl
pop
and
ss
add
test
inc
xor
ret
add
cmp
xchg
mov
mov
mov
loop
mov
inc
imul
push
dec
push
sti
jne
subb
es
push
adc
sbb
add
xchg
jle
inc
adc
out
sbb
fsubp
data16
aad
scas
jg
adc
pop
int
inc
mov
scas
xchg
loope
lea
aad
stos
push
into
mov
xchg
fstps
add
bound
stos
sub
adc
dec
ljmp
gs
popa
and
or
pop
mov
pushf
shll
xlat
push
sub
and
push
mov
test
adc
mov
jae
subb
mov
cmp
and
xor
push
mov
je
cltd
popa
dec
mov
mov
sbb
push
sub
das
cmp
hlt
sub
add
into
push
push
mov
shr
xor
mov
push
push
cmp
movsb
ret
out
pop
sarb
sub
out
cltd
aaa
ljmp
sbb
ja
call
mov
daa
mov
lods
jge
mov
jnp
enter
stc
test
lret
repz
jg
dec
cmc
rcll
ljmp
add
lods
outsl
adcl
pop
mov
into
cmp
lret
sub
aad
xor
es
fistpl
pop
stos
fisubl
js
or
packssdw
adc
lret
test
adc
hlt
pop
or
out
aaa
jno
aam
mov
dec
pop
add
test
daa
sbb
push
shll
popl
adc
iret
fiaddl
test
xor
dec
mov
in
popf
lock
sbb
adc
or
divl
rcrb
or
imul
and
mov
je
out
mov
aam
xchg
sub
push
cmpl
stc
push
inc
insb
mov
lods
stos
or
pop
imul
in
xor
call
ljmp
es
shll
outsl
lcall
scas
inc
sub
aaa
mov
test
push
iret
sub
addl
sbb
add
out
adcl
pop
pop
mov
mov
aad
sbb
aas
and
adc
pushf
xchg
jno
dec
daa
xchg
mov
dec
mov
mov
mov
dec
mov
sub
rcr
ret
or
loope
movsb
or
pop
lds
cmpsb
mov
jle
pop
inc
jmp
inc
cltd
dec
and
and
pop
dec
ljmp
testb
ja
mov
mov
xchg
daa
xorl
aaa
outsl
mov
push
mov
rclb
es
or
outsl
inc
ret
jp
sti
fidivl
push
nop
lret
sbb
insl
and
sbb
pushf
out
test
pushf
fcmovbe
and
xchg
and
dec
insl
mov
lds
aad
in
ret
pop
inc
dec
ljmp
fs
js
inc
xor
lret
xor
xor
dec
ss
aam
cld
dec
dec
xor
aad
divl
inc
insb
orb
sub
int
pusha
pop
fnstenv
sbb
sarb
sub
inc
add
fs
in
xchg
int3
jnp
jb
pushf
inc
mov
mov
enter
ret
ss
or
out
and
clc
and
dec
xchg
mul
cld
mov
jl
mov
mov
out
add
les
out
xlat
bnd
inc
inc
pop
fs
enter
addr16
pusha
bound
lock
mov
and
jns
and
test
mov
movhps
inc
lahf
in
adc
push
or
xor
lret
sbb
aam
xor
adc
loopne
and
ljmp
sbb
test
push
sub
shrl
clc
mov
les
mov
std
xchg
and
xor
and
xchg
push
faddl
in
push
pop
push
fxch
or
sbb
dec
fsubs
ffree
jo
hlt
or
scas
cmpsb
notl
inc
outsb
leave
test
sub
ficoms
ja
jns
xor
sub
mov
popa
push
mov
fcomps
cmpsb
push
pop
insl
jae
push
je
push
aam
lods
push
icebp
ja
outsl
jge
sub
push
scas
jl
cld
jmp
int
stos
cmp
ljmp
insl
mov
adc
jmp
mov
loop
push
mov
add
in
aas
sub
out
test
jl
inc
insl
mov
mov
mov
and
cmc
xchg
adc
aaa
into
call
xor
sbb
xchg
adc
test
dec
das
imul
mov
je
loopne
test
push
mov
pop
call
test
fsubrl
fcomip
es
xchg
sub
sarb
dec
mov
fdivrl
insl
cmpb
adc
mov
inc
dec
repnz
outsl
das
arpl
and
test
pushf
inc
mull
loop
iret
rclb
mov
sbb
aaa
adc
xchg
mov
.byte
add
add
dec
popf
lahf
cmp
add
add
add
orb
orb
add
mov
add
add
add
orb
add
cwtl
add
adcb
add
lock
sbbb
add
xor
add
add
add
mov
add
add
add
add
add
js
add
add
add
jno
add
add
add
add
xor
xor
xor
xor
add
add
add
jo
add
mov
add
cwtl
add
andb
add
dec
add
addb
add
add
add
call
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
sub
add
add
add
pusha
add
add
add
addb
add
add
dec
add
add
add
push
add
add
add
add
add
push
add
inc
add
pop
add
add
add
push
add
inc
add
inc
add
add
push
add
add
add
xor
add
rolb
add
add
add
add
add
call
roll
add
add
add
lahf
cmp
add
add
add
add
add
js
add
add
add
dec
popf
lahf
cmp
add
add
add
add
add
add
add
add
mov
add
add
add
lahf
cmp
add
add
add
add
add
add
add
add
add
push
add
add
dec
add
dec
add
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
add
fadds
add
add
add
add
add
enter
dec
faddl
add
add
or
dec
add
dec
add
dec
add
dec
add
add
dec
popf
lahf
cmp
add
add
add
add
add
add
add
addb
add
dec
popf
lahf
cmp
add
add
add
add
add
add
add
add
add
push
add
add
lahf
cmp
add
add
add
add
add
add
add
dec
popf
lahf
cmp
add
add
add
add
add
add
add
mov
add
loop
add
or
inc
add
inc
add
inc
add
inc
add
add
add
add
or
push
add
push
add
add
inc
add
add
add
add
sub
add
and
add
inc
add
add
add
add
adc
add
daa
push
add
or
inc
and
add
add
adc
add
sbb
dec
and
push
sub
add
and
add
xor
pop
inc
das
add
xor
and
xor
add
cmp
xor
pop
add
xor
add
inc
add
inc
arpl
sub
jo
xor
add
push
add
inc
add
add
data16
sbb
fnstenv
add
jp
add
pop
pop
add
popa
pop
add
data16
add
jae
add
data16
cmpsl
js
add
jp
add
popl
add
xchg
add
test
add
cmpb
test
xchg
dec
add
xchg
inc
add
mov
inc
add
mov
add
mov
add
xchg
rorb
push
rcrb
add
xchg
jp
fisubs
js
loop
outsl
add
mov
jb
ljmp
add
add
add
addb
adc
test
add
xor
add
push
cwtl
add
xchg
xor
add
pusha
mov
xor
add
jo
add
push
addl
jl
xchg
inc
ja
add
movsl
add
xor
roll
sbb
inc
rolb
and
add
outsb
aam
and
add
push
out
sub
icebp
add
pusha
in
xor
add
je
add
repnz
insl
cld
add
jae
add
lock
jne
add
jg
add
addl
outsl
xorl
cmp
sti
add
or
pop
add
push
mov
add
fildl
imul
add
roll
bound
roll
imul
add
aad
dec
xchg
out
push
xchg
loop
inc
mov
add
add
clc
add
incb
xchg
std
add
ljmp
test
add
std
add
out
jno
jecxz
push
jmp
add
sti
add
add
add
incl
jnp
jmp
add
add
incb
jns
stc
add
incl
pushf
mov
add
xchg
mov
cmpsb
adcb
movsl
xchg
xchg
add
cmpsb
add
mov
add
mov
add
cwtl
mov
xchg
mov
mov
add
fwait
addl
xchg
mov
ret
xchg
xchg
add
pushf
xchg
add
pushf
pushf
add
stos
xchg
fsubrs
xchg
add
movsl
cwtl
add
mov
add
mov
add
lods
mov
in
mov
jmp
nop
add
mov
movsb
add
mov
add
mov
add
mov
test
in
mov
add
mov
add
mov
jmp
sahf
add
xchg
add
fcoms
add
ret
cmpsl
add
lret
movsl
add
shrb
add
int
add
lret
ljmp
add
in
add
fwait
rolb
test
add
mov
fadds
nop
mov
out
adc
add
add
repnz
stos
loop
add
leave
lret
add
aad
add
lret
out
ret
ret
add
fst
add
add
loop
add
cmc
ret
in
add
jmp
sti
add
out
add
in
jmp
add
jmp
add
repnz
add
cld
cli
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
add
mov
rol
mov
mov
mov
pop
add
add
add
add
lret
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
sarl
add
add
add
div
div
hlt
hlt
hlt
hlt
fstp
fstp
fstp
fstp
fnstsw
add
add
add
div
div
div
hlt
hlt
hlt
fstp
fstp
fstp
fstp
mov
add
add
add
cli
div
div
div
hlt
hlt
hlt
fstp
fstp
fstp
fstp
fnstsw
add
add
add
cli
imul
mov
sub
loop
mov
mov
add
add
add
sti
idivl
test
mov
mov
fstp
mov
add
add
add
sti
sti
mov
test
lods
mov
movsb
movsb
out
mov
aas
fstp
mov
add
add
add
sti
sti
mov
lods
sub
je
lods
loope
out
movsb
out
movsl
aas
fstp
mov
add
add
add
sti
sti
mov
lods
jae
sub
ljmp
mov
add
add
add
sti
sti
loopne
jnp
sbb
pop
test
out
scas
cmp
fnstsw
add
add
add
sti
loope
test
addl
lcall
pop
add
add
add
add
aad
jecxz
xchg
adc
addb
xchg
pop
add
add
add
add
aad
decb
pop
mov
xchg
mov
pop
add
add
add
add
aad
xchg
mov
push
mov
mov
movsl
hlt
fnstsw
add
add
add
push
dec
dec
adc
popa
popa
fs
hlt
fnstsw
add
add
add
push
dec
push
push
dec
push
push
pusha
popa
imul
hlt
fnstsw
add
add
add
decb
jge
insl
insl
mov
fs
fnstsw
add
add
add
decb
jge
xchg
xchg
mov
xchg
xchg
scas
neg
mov
add
add
add
decb
jge
xchg
xchg
xchg
mov
xchg
scas
neg
mov
add
add
add
xchg
jno
jno
jno
nop
xchg
xchg
mov
nop
scas
neg
mov
add
add
add
cld
xchg
xchg
fwait
fwait
popf
mov
loope
neg
mov
add
add
add
sti
sti
sti
sti
imul
fcmovnu
fnstsw
add
add
add
sti
sti
sti
sti
repz
mov
add
add
add
add
sti
sti
sti
sti
cmp
xor
pop
add
add
add
add
icebp
sti
sti
rorb
xor
add
add
add
add
sti
sti
sarl
inc
pop
add
add
add
add
add
hlt
sti
fcmovbe
inc
pop
add
add
add
add
add
add
fidivrl
add
add
add
add
add
fstp
fstp
fstp
fcmovbe
into
into
lret
test
add
add
add
add
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
lock
aas
lock
jg
add
push
add
incl
add
add
add
and
add
add
add
add
add
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
sbb
add
add
add
add
scas
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
mov
add
add
xor
xor
xor
cmp
xor
xor
bound
xor
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
push
add
popa
add
push
add
add
add
and
inc
add
bound
dec
add
add
or
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
popa
add
push
add
add
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
add
insl
add
imul
add
inc
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
push
add
popa
add
push
add
add
add
and
inc
add
bound
dec
add
add
or
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
add
insl
add
imul
add
inc
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
popa
add
push
add
add
add
add
js
add
and
add
imul
je
add
jne
imul
add
push
add
popa
add
push
add
add
add
and
push
add
insl
add
je
add
add
outsl
add
je
jb
outsl
add
add
jo
jo
insb
add
arpl
popa
add
add
outsb
add
add
or
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
popa
add
push
add
add
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
popa
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
and
insb
outsb
jae
popa
jae
jbe
cmp
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
insl
push
imul
js
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
and
jne
and
arpl
jo
imul
gs
fs
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jae
jbe
cmp
jo
imul
ds
popa
jae
jbe
cmp
outsb
outsl
ja
push
gs
imul
insb
outsb
jae
and
je
cmp
das
jae
push
cs
imul
je
arpl
das
push
dec
dec
das
xor
xor
outsl
ja
push
gs
imul
or
or
cmp
jo
inc
ja
jb
je,pt
jne
cmp
fs
inc
ja
jb
ds
das
popa
jae
jbe
cmp
outsb
outsl
ja
push
gs
imul
or
popa
jae
jbe
cmp
jo
imul
ds
popa
jae
gs
bound
add
js
add
mov
add
pushf
jecxz
add
add
enter
add
add
in
jecxz
add
add
add
in
add
add
add
in
add
add
add
add
add
add
add
add
ljmp
add
mov
loop
add
add
add
mov
loop
add
add
fsub
add
mov
loop
add
add
add
incl
in
add
loop
add
loop
add
add
add
jmp
add
int3
loop
add
loop
add
add
add
incl
add
loop
add
push
dec
inc
dec
xor
cs
dec
dec
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
inc
push
xor
cs
dec
dec
add
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
push
inc
push
dec
xor
cs
dec
dec
add
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
dec
dec
inc
inc
push
push
xor
cs
dec
dec
add
add
add
push
jns
inc
jb
gs
je
imul
add
inc
dec
dec
xor
cs
dec
dec
add
add
gs
insb
inc
js
arpl
gs
add
add
add
inc
inc
inc
dec
dec
push
cs
dec
dec
add
add
add
dec
popa
imul
jb
inc
imul
jns
popa
je
inc
js
jae
jae
add
test
les
popa
cmp
outsb
dec
xor
cmc
loopne
out
inc
add
or
dec
add
xor
pop
or
in
jb
jne
cmp
or
dec
stc
cmp
addr16
add
rolb
pop
push
mov
push
inc
fcmovbe
jecxz
xor
jge
cli
add
mov
add
mov
loopne
dec
dec
push
jne
add
inc
or
pop
pop
ror
jge
push
call
sbb
xor
mov
push
jecxz
rep
aaa
mov
push
test
pop
enter
jne
pusha
push
or
mov
add
loop
or
pushl
sub
lock
cmp
sbb
xor
pop
pop
pop
leave
ret
jb
and
adcb
loope
add
or
xchg
jae
and
orb
xor
or
loopne
xchg
ds
out
or
or
cmpl
jo
test
sub
xor
sub
cltd
subl
dec
aam
jmp
inc
fmull
add
inc
add
imul
add
pop
lea
lods
or
insb
lahf
in
inc
lock
push
call
or
sub
hlt
shll
nop
push
push
jne
and
addr16
mov
and
xchg
cmpsb
inc
pop
jne
sbb
inc
out
mov
or
repz
fadds
decl
int
xchg
adc
mov
fmuls
adc
je,pt
sub
jae
sbb
jmp
jo
and
xchg
test
jne
ss
into
adc
sub
lock
pushf
outsb
sub
xor
lock
adc
in
and
add
mov
cmp
cmpsb
or
inc
jmp
xor
pop
insl
sti
add
mov
cmp
push
mov
rol
ljmp
push
cmpsb
iret
lea
xchg
mov
lods
incb
mov
xor
pop
push
xor
or
wrmsr
dec
js
xor
mov
push
nop
xchg
jmp
sub
inc
mov
ror
shr
repz
fcmovnu
or
push
push
lea
push
push
rol
adc
subl
mov
clc
xor
lcall
cmpsb
push
ret
mov
movsb
mov
mov
push
inc
push
jae
inc
push
mov
jmp
loopne
xchg
push
aas
inc
push
adc
jnp
leave
movsb
hlt
add
popf
rorl
mov
pop
or
mov
lea
or
jmp
cwtl
sub
popf
jno
sub
jo
lods
adc
repnz
adcb
jmp
adc
xor
dec
jp
in
nop
mov
xchg
pop
repnz
dec
out
jne
out
pushl
push
add
sbb
push
loope
sti
and
sbb
adc
fcmovb
outsb
and
repnz
pop
jecxz
and
insl
add
or
jmp
lods
and
add
adc
adc
popa
adc
mov
les
sub
jmp
in
test
leave
or
es
shl
int
push
sti
fcoms
and
add
idivl
andb
sbb
xor
xchg
jmp
repz
mov
insb
movsb
cs
mov
sbb
add
cli
xchg
ljmp
out
incb
mov
and
outsl
addr16
sbb
out
insl
add
jb
js
std
sub
cmp
push
adc
outsb
dec
xchg
mov
mov
and
shlb
mov
jne
sub
out
nop
jo
fimull
mov
shl
lret
stc
es
adc
add
ret
jge
pop
sti
popa
add
mov
adc
add
call
jno
push
sub
jne
lea
mov
and
or
jge
dec
test
adc
dec
adcl
mov
adc
jb
inc
aad
dec
data16
or
jl
add
sahf
push
and
inc
mov
es
adc
clc
push
push
jno
hlt
add
fidivs
and
sub
add
mov
pop
dec
hlt
mov
inc
xchg
mov
inc
sahf
mov
push
sbb
mov
sbb
subb
xor
inc
ret
lcall
out
jne
mov
inc
add
cltd
push
pop
divl
cmp
pop
jl
push
mov
push
xchg
cltd
mul
jge
mov
in
movsb
daa
or
xchg
add
add
push
call
xchg
push
mov
cld
lea
ds
ror
xorl
or
call
addb
or
pop
mov
cmp
push
dec
rcll
add
push
add
imul
test
xor
movsb
or
xchg
call
xor
xor
in
and
inc
int3
imul
or
test
cmp
rclb
sbb
nop
lret
mov
push
mov
sub
mov
cmovs
fsubl
push
cs
push
movsb
and
push
pop
sub
lea
add
add
sub
mov
fidivs
xor
lea
mov
stos
nop
add
add
jae
test
out
push
xor
and
aam
repz
out
pop
sbb
add
outsl
add
popa
repz
or
call
xor
mov
sbb
push
and
xchg
popa
aaa
and
push
call
and
pand
or
sti
xchg
nop
add
lcall
mov
inc
and
shrb
mov
lea
mov
test
push
push
and
sbb
mov
aas
das
mov
sbb
cmp
inc
mov
aas
shrb
or
stos
sbb
shrb
or
jmp
or
aaa
fiadds
jne
mov
cs
inc
push
add
test
sarl
dec
mov
push
and
jecxz
pop
push
lea
sbb
nop
mov
cmp
or
pop
pop
pop
pop
ret
mov
or
cld
daa
mov
sub
loopne
push
add
lret
push
call
inc
mov
ret
shll
add
std
xlat
jmp
sbb
add
in
pop
lods
sbb
jne
scas
leave
mov
pop
mov
sub
rcll
sahf
lods
nop
mov
mov
jmp
cltd
enter
push
fs
push
ds
leave
xor
sub
or
inc
incb
xchg
orb
sub
test
mov
dec
test
lods
insb
xchg
sbb
inc
pop
adc
add
jne
cmp
jge
in
inc
mov
push
cld
sub
je
dec
or
xlat
jne
sub
jbe
pop
or
xor
adc
push
add
scas
pusha
inc
jmp
pop
pop
xchg
mov
xor
mov
inc
notl
sub
std
push
pop
pop
push
mov
sbbl
add
jbe
push
rcl
incb
pop
push
mov
or
push
test
mov
in
and
sti
not
daa
fcoml
mov
mov
fs
loopne
ret
pop
jge
sub
dec
clc
shll
add
movsl
pusha
sub
ljmp
jnp
push
addr16
movsb
push
mov
nopl
pop
pop
jnp
cmp
cmp
ret
xorb
mov
pushf
inc
lcall
push
push
xchg
xchg
mov
test
push
mov
sbb
outsb
orl
ret
mov
pop
das
and
pop
sub
hlt
pop
push
dec
or
das
aaa
push
push
in
push
in
in
sar
enter
leave
mov
inc
ljmp
std
mov
popa
jmp
pop
xor
cmp
jne
adc
jmp
fidivrl
inc
loopne
add
push
adc
loopne
sub
pop
jns
fcmove
or
xchg
sub
roll
scas
in
fwait
pop
adc
cmpb
pop
mov
xchg
je
add
out
inc
xor
jp
lcall
and
push
or
push
call
sbb
mov
adc
lds
aad
mov
mov
adc
mov
ret
mov
std
cmp
test
push
and
jmp
or
cmpl
push
adc
rorb
scas
int3
testb
mov
idivb
jg
test
and
jmp
shl
add
sahf
data16
push
inc
gs
cmp
adc
push
xchg
lods
jmp
lods
popf
sbb
stos
pusha
loopne
xor
ss
mov
call
cmp
inc
push
inc
jmp
repz
pop
cld
cmp
or
sbb
lock
sub
mov
jl
sbb
add
test
shr
push
loope
push
lea
add
sti
add
add
call
sbb
xchg
and
jbe
push
dec
imul
enter
dec
and
scas
and
xor
in
add
sub
xor
mov
cmpsb
jp
cmp
push
add
jbe
jmp
inc
jo
insb
push
imul
and
jecxz
popf
cmp
jg
imulb
loopne
ds
arpl
fs
mov
and
insb
jns
outsb
jge
inc
jmp
popa
fbstp
fldt
mov
call
fs
sub
insb
and
dec
xor
sub
xor
pop
dec
outsl
popa
addr16
inc
outsl
js
shll
notb
data16
adc
cmp
or
je
nop
dec
dec
roll
push
fs
rorb
loop
sbb
je
cmc
inc
mov
fwait
sbb
jl
imul
hlt
jp
popf
xor
mov
scas
int3
and
adc
pop
cmp
or
mov
imul
pop
lea
movsl
inc
sbb
fwait
mov
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
or
add
add
loop
add
add
xor
loop
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
xor
add
cmp
add
sub
add
xor
add
or
jge
and
ja
jbe
jg
jo
cmp
ror
push
and
pop
or
push
push
pop
pop
test
push
dec
pop
or
sub
rol
test
push
add
test
push
je
or
pop
add
dec
inc
and
jl
push
add
push
push
pop
pop
shl
push
or
pop
add
push
rol
pop
push
push
push
add
pop
pop
je
ja
sub
shr
nop
clc
cmc
jl
jg
add
push
inc
dec
pop
stc
test
push
and
pop
jl
or
nop
push
xor
pop
rol
neg
neg
add
jp
push
jae
shl
pop
nop
jno
nop
cmp
and
push
dec
pop
js
push
sub
pop
push
je
jp
sub
pop
push
mov
pop
xchg
xchg
and
push
mov
pop
rol
push
ror
pop
rol
or
cld
cld
stc
je
push
cmp
pop
push
jae
push
add
pop
pop
test
jne
push
neg
neg
pop
push
jb
push
shr
pop
pop
nop
push
push
ror
pop
pop
jge
jnp
add
push
jne
ja
jno
and
pop
test
ror
jno
push
cmp
pop
shl
ror
cmc
push
jp
and
pop
push
add
pop
push
push
mov
pop
pop
rol
clc
push
sub
pop
stc
sub
and
mov
cmp
mov
push
jp
sub
pop
and
cmp
rol
and
push
push
push
push
dec
pop
pop
pop
pop
jle
push
ja
cmc
pop
rol
cmp
or
push
and
pop
push
add
pop
push
inc
pop
add
jge
push
test
pop
push
xor
pop
jle
jp
push
push
pop
pop
mov
test
sub
sub
cmp
push
add
or
push
cltd
pop
push
push
push
push
pop
pop
pop
pop
mov
jo
push
jbe
inc
dec
pop
push
add
pop
push
jo
push
shl
pop
pop
push
ja
push
sub
pop
pop
push
push
push
shl
pop
pop
pop
push
test
pop
jl
cld
or
cmc
cmc
jl
jo
sub
push
jge
cmp
pop
jo
add
push
push
mov
pop
pop
push
mov
pop
push
add
pop
js
push
cmp
pop
push
inc
pop
or
push
inc
pop
push
sub
pop
push
test
pop
nop
jge
push
xor
pop
cmc
and
je
cmpl
jne
call
pop
add
push
jl
push
push
pop
pop
pop
push
push
add
pop
pop
cmc
push
jne
add
pop
inc
dec
js
or
cmp
push
push
add
pop
stc
sub
cmp
and
push
push
sub
pop
pop
dec
inc
call
pop
add
mov
push
push
push
push
ja
test
pop
dec
inc
and
jg
cmp
nop
shr
test
push
add
pop
dec
inc
jns
and
jge
je
add
push
push
xor
pop
pop
cmc
push
ja
and
pop
test
push
xchg
xchg
pop
cld
sub
jo
jne
push
test
pop
stc
push
jle
jb
test
pop
push
test
pop
cmp
push
push
push
call
pop
sub
add
movl
mov
call
mov
xor
pop
pop
pop
call
pop
pop
pop
sub
xor
pop
les
iret
notb
push
jo
lds
mov
clc
out
shlb
outsb
scas
jns
xchg
ja
dec
loopne
inc
inc
cld
repnz
leave
push
imul
xor
loope
ds
mov
and
adc
mov
jae
cmp
lcall
sti
lods
shlb
jo
sbb
mov
pop
add
dec
mov
xor
xchg
ja
cmp
aaa
xchg
cmp
test
shrl
sub
cmp
and
pop
shll
incb
mov
fs
mov
lock
into
loop
imul
icebp
scas
xor
cmp
adc
enter
into
fucom
mov
mov
iret
inc
jmp
in
xor
push
pop
jecxz
rolb
jmp
cmp
test
jg
and
xor
leave
lds
hlt
dec
cmpsb
fidivrl
ss
fcompl
neg
dec
je
out
fidivl
dec
out
es
jo
in
mov
mov
and
aad
aad
mov
xchg
clc
outsl
mov
cmp
sarb
push
mov
out
xchg
out
repnz
out
setb
sbb
ss
icebp
and
js
inc
push
or
sub
inc
in
outsb
cmp
test
loop
sbb
faddl
xor
das
xchg
sbb
or
popa
jg
or
sahf
leave
mov
or
inc
orb
pop
jmp
and
xor
jb
icebp
fisubl
jns
mov
sub
xchg
jl
pop
adc
mov
cmp
popa
adc
mov
and
mov
jle
push
add
and
test
xchg
sbb
mov
mov
enter
daa
aas
pusha
clc
inc
rcrl
xlat
sub
inc
out
ret
sub
test
mov
pop
fildl
addr16
cmp
xor
mov
and
test
scas
inc
addb
and
je
pusha
js
pop
jnp
repz
xor
and
insb
lret
mov
dec
je
jae
lahf
sar
cmp
jg
mov
rol
add
mov
in
movsb
xor
int3
movsb
out
pop
ret
xor
mov
mov
xor
popa
lret
mov
repz
es
cmpsl
jp
add
movsb
add
sub
movsb
std
js
out
es
pop
popa
fistl
arpl
or
sub
subl
ja
insl
xor
addr16
cmp
insb
sub
and
adc
es
jge
mov
push
imul
lret
dec
mov
push
mov
xchg
push
xchg
scas
jmp
lcall
pop
shufps
push
sahf
inc
sub
fidivl
and
mov
add
mov
xchg
inc
push
or
sub
inc
loope
xchg
lds
popf
sbb
sahf
jae
aad
fsub
xor
mov
jbe
jge
sub
mov
or
push
push
and
cmp
inc
and
fwait
cs
in
test
in
mov
pop
or
test
seto
out
fwait
sub
imul
cmc
mov
ss
pop
inc
mov
rcll
cli
and
ljmp
cmpsl
pop
jb
cmpsl
dec
mov
mov
ret
adc
jmp
push
pop
mov
roll
push
insl
xorl
icebp
sbb
xchg
push
add
sub
pop
sub
test
lret
inc
lcall
jbe
loop
sbb
jp
sbb
cwtl
hlt
jnp
cli
push
and
insl
testb
pop
xchg
flds
inc
pop
in
negl
xor
jns
sub
push
in
sbb
sub
xor
and
aam
cmp
fwait
cmp
sbb
in
mov
mov
fs
xchg
jle
jo
fnstenv
xor
out
xchg
ljmp
pop
pusha
mov
cmp
ljmp
lds
mov
stos
scas
stos
xor
dec
pusha
enter
push
or
xor
mull
push
xor
dec
pop
cld
xchg
sbbl
sub
fidivrl
jp
mov
movsb
sub
add
test
pop
sarl
mov
test
gs
jmp
adc
dec
push
mov
jne
mov
loopnew
sub
es
mov
mov
mov
pop
test
push
jo
loope
push
jo
sar
incl
sub
subl
mov
adc
sbb
sub
outsl
pop
xor
call
std
mull
mov
mov
cs
jmp
mov
outsb
and
stos
cmp
mov
and
inc
inc
inc
pop
out
or
cld
jp
pop
mov
in
add
jl
data16
test
pop
fiadds
pusha
mov
sahf
lods
xchg
imul
lahf
xor
dec
addl
sti
ja
int3
test
sbbb
xchg
dec
scas
popa
and
pop
cmp
popf
adc
fistps
loopne
mov
dec
and
fnsave
sub
mov
jl
addr16
aaa
outsl
aas
dec
outsb
clc
fstp
sbb
adc
aad
lock
je
xchg
sub
imul
incl
lcall
outsb
ja
aam
idivl
call
out
hlt
push
or
jns
mov
adc
xchg
idivl
dec
adc
leave
xchg
aas
mov
push
jae
jnp
sbb
int
add
mov
call
jp
push
mov
mov
les
xchg
int
gs
ja
repz
mov
mov
push
mov
or
cmp
push
addl
lcall
outsl
sub
inc
je
mov
pop
pop
jge
jge
stc
and
inc
cli
enter
sbb
adcb
mov
popa
mov
push
and
inc
inc
jmp
push
inc
flds
into
sbb
inc
inc
sbb
xor
dec
addr16
lea
xchg
ss
pop
dec
jb
cmpsb
nop
adc
js
ja
cmp
gs
cmpsb
hlt
sbb
cmc
sbb
dec
or
fadd
adc
scas
mov
mov
add
pop
shll
or
rcrl
mov
jb
mov
mov
negl
push
daa
pop
dec
je
orl
xor
and
sti
leave
mov
xchg
add
inc
mov
push
inc
aas
sub
push
outsb
sti
mov
andl
dec
enter
pop
push
in
adc
outsl
into
xchg
sahf
inc
jmp
mov
mov
add
lea
imul
dec
adc
lods
adc
sub
inc
popa
aaa
lock
jecxz
mov
lock
cltd
fcmovne
cmpsb
arpl
in
sbb
cmpsb
fildll
jae
sub
out
or
inc
pop
test
sahf
cli
orb
cmpsl
push
or
pop
jecxz
divl
mov
dec
es
inc
insl
jns
jl
lret
lds
lods
xor
bound
out
out
lcall
push
xchg
adc
or
jne
in
mov
and
jl
data16
mov
pop
ljmp
or
adc
out
icebp
cmp
and
rorl
out
roll
xorl
movsb
or
out
inc
add
in
gs
mov
aam
addr16
rclb
out
aam
je
mov
jge
jae
and
and
in
aad
or
jb
inc
pop
out
int3
cmpsl
jecxz
push
push
sub
std
cld
aad
or
cmpsb
xchg
adc
adc
das
jae
fs
cmp
pop
sahf
cmp
int
out
mov
data16
outsb
ljmp
aas
sub
sub
stos
mov
jb
xor
xchg
enter
in
lcall
arpl
inc
fldl
mov
or
xchg
les
mov
push
repz
mov
fsubp
aam
imul
xchg
jns
mov
or
popa
out
sub
orb
jae
subl
mov
lods
aam
jle
cmpsb
std
and
outsb
jns
xlat
stc
cltd
adc
inc
in
clc
or
iret
js
out
or
loope
fcmovb
pop
cmp
add
aas
and
out
push
and
filds
out
xchg
vshufps
mov
and
xor
pop
xlat
lret
push
ret
jle
imul
repz
jno
dec
mov
test
or
arpl
pop
dec
jecxz
push
movsb
sub
push
ret
mov
into
popf
sbb
loop
popa
pop
cmp
es
inc
outsb
xchg
test
into
ja
or
sub
aam
push
addr16
mov
ret
push
repz
dec
dec
adc
out
sbb
inc
mov
xchg
xchg
lcall
test
cmp
outsb
lds
arpl
xor
push
xchg
scas
stos
xchg
outsb
mov
int3
testb
addr16
pop
push
je
inc
rcrb
mov
cltd
int
xchg
fs
icebp
add
sbb
pop
add
mov
bound
fimuls
out
mov
stc
xchg
mov
arpl
pop
dec
mov
xchg
insb
mov
mov
cmpb
jp
inc
dec
mov
pusha
stos
xor
test
push
mov
sub
out
jmp
or
lods
mov
push
enter
xchg
int
or
fisubl
push
mov
scas
mov
mov
ds
mov
ret
cmc
dec
loopne
sarb
stos
cwtd
or
cmp
jge
loopne
sbb
mov
stc
stos
adc
adc
adc
xchg
or
nop
cmpsl
idivl
jmp
pusha
add
loope
and
xchg
mov
jbe
bsf
imul
test
jecxz
sub
xor
movsl
jge
adc
xchg
test
add
mov
mov
js
pop
push
mov
push
imul
sub
sub
scas
mov
lret
xor
das
pusha
cmp
dec
sbb
loope
mov
call
cmp
and
adc
inc
dec
out
inc
push
inc
lods
pop
imul
xchg
lahf
scas
adc
aaa
cmp
addr16
adc
rclb
sahf
movsl
gs
push
push
push
add
scas
in
and
adc
mov
push
mov
insb
xchg
mov
in
or
sbb
lds
mov
xor
dec
dec
loope
push
jmp
add
subl
inc
subb
popa
in
pusha
movsl
adc
adc
jno
test
cmp
call
shll
jge
testb
call
js
pop
mov
xlat
sbb
dec
jge
inc
sahf
xchg
pusha
bound
cmp
adc
fnstcw
sbb
test
xchg
xor
cmp
out
adc
xchg
cli
sub
imulb
les
xor
scas
pushf
dec
jle
mov
int
mov
and
xchg
push
outsl
les
fisttpl
ret
jge
stos
xchg
fcoml
add
push
jne
insl
mov
test
andb
jge
pop
pop
lahf
pop
cld
insb
hlt
pop
cli
mov
push
js
roll
icebp
add
mov
shlb
mov
pop
ds
lds
jle
push
icebp
insb
inc
cmp
int3
loop
in
adc
ror
ret
cmp
cmp
cwtl
popa
push
popa
in
mov
aam
dec
sub
inc
movsb
jnp
sbb
pusha
xor
dec
inc
pop
in
hlt
xchg
pusha
orl
mov
push
xchg
in
dec
jp
jmp
cmp
mov
push
jne
popf
inc
or
pop
lcall
mov
add
or
mov
xchg
and
sub
or
mov
push
or
mov
jle
in
pop
lret
lods
jge
lret
mov
pusha
pop
lahf
pop
xor
loop
sbb
jbe
xchg
addr16
out
mov
cld
iret
lods
stos
add
jnp
mov
xor
hlt
mov
xor
int
sarl
fists
adc
xor
pop
xor
mov
push
mov
mov
cmp
sub
sbb
jp
nop
push
jge
cwtl
jne
fcoml
pop
jno
pop
cmc
hlt
add
cmp
inc
pop
movq
adc
pop
jbe
mov
xlat
xchg
jnp
xadd
push
scas
jo
mov
xchg
inc
and
and
xor
sti
imul
push
sub
mov
movsb
movsl
cwtl
stc
imul
in
pop
int
add
dec
pusha
add
pop
xor
xchg
sub
sti
addl
lret
adc
pop
lea
pop
xor
roll
mov
jl
inc
sbb
mov
sub
std
dec
loope
out
fwait
mov
adc
or
repz
inc
rorb
adc
dec
push
mov
ja
push
test
sub
sahf
and
push
mov
ljmp
lods
inc
mov
scas
fcompl
pushf
mov
jb
shl
loop
mov
inc
lahf
repnz
rolb
ds
stos
push
lods
jne
add
icebp
jmp
inc
insl
pop
inc
fdivrl
inc
mov
loope
loopne
addr16
cmp
lret
push
scas
loopne
lret
cmc
sti
xlat
adc
adc
outsl
and
inc
and
xor
loopne
push
jmp
sbb
test
and
adc
popa
lods
test
cwtl
add
push
fdivrs
outsb
jg
les
int3
xchg
lea
dec
adc
lock
sub
je
dec
xchg
sahf
fnstcw
out
inc
insl
adc
mov
fs
dec
inc
and
push
arpl
cmp
outsl
add
or
mov
enter
pop
pop
jnp
xchg
sub
jmp
lret
outsb
and
aaa
icebp
xchg
add
movsb
mov
scas
repz
push
add
cmpl
clc
lret
insb
mov
jns
mov
push
push
in
insb
ds
dec
das
jne
rclb
lahf
stos
jns
push
call
push
xchg
fstpt
fldenv
hlt
or
outsl
sbb
leave
shrb
mov
adc
movsl
xor
mov
shrl
xchg
daa
aas
push
in
mov
add
bswap
jecxz
add
xchg
and
push
negb
inc
mov
iret
leave
mov
aad
into
push
movsl
icebp
xchg
rcrl
aad
arpl
fcompl
mov
inc
adc
pop
cmpsl
jp
pop
push
dec
aaa
xor
loopne
mov
stos
jno
inc
or
test
push
mov
push
data16
xchg
mov
or
pop
je
mov
in
insl
mov
hlt
adc
lds
in
clc
mov
sti
out
sub
mov
ffreep
fdivrl
xor
and
inc
xor
ret
push
outsl
fdivrs
rorl
hlt
push
mov
inc
iret
imul
jb
inc
adc
pop
iret
mov
mov
lods
sub
fldcw
push
out
xor
xor
lcall
loope
imul
enter
cmpsl
cli
cltd
xor
sbb
lret
and
fbstp
sub
mov
jb
outsb
hlt
xor
add
adcl
xchg
out
adc
add
and
arpl
cmp
adcb
push
add
mov
loop
mulb
push
rcll
sbb
stc
push
inc
pop
push
rol
pop
stc
jp
jge
push
shl
pop
add
jno
xor
cmc
jg
test
jno
jl
cmp
js
ja
ror
mov
rol
jns
push
push
add
pop
std
cld
stc
push
push
add
pop
jno
jnp
ja
or
push
js
test
pop
jle
ja
add
jo
jp
xor
push
xor
pop
push
inc
pop
push
jae
test
pop
push
jo
push
add
pop
pop
push
jle
push
add
pop
cmc
push
push
push
mov
mov
shr
shl
shr
xor
jecxz
mov
add
cmp
jl
sub
add
cmp
jl
sub
inc
loop
pop
shl
add
mov
pop
pop
ret
push
push
push
rol
pop
pop
pop
sar
push
test
pop
js
push
sub
pop
sub
push
jle
push
add
pop
js
jge
add
fnop
jp
push
push
sub
pop
pop
je
push
jl
test
pop
xor
sub
dec
inc
clc
clc
and
cld
cmp
push
add
or
xor
je
push
push
mov
pop
pop
clc
shr
jecxz
call
add
loop
ret
sub
jg
jge
js
test
stc
lea
push
add
pop
push
xor
pop
and
push
mov
pop
push
and
pop
jno
push
push
rol
pop
pop
jne
test
push
shr
pop
rol
push
je
push
shl
pop
pop
jl
jne
jae
test
test
or
push
inc
pop
push
pop
jns
and
js
js
rol
cmp
test
cmc
jae
cmp
push
jae
jae
shl
pop
rol
jg
push
dec
pop
js
push
rol
pop
push
mov
pop
shr
test
je
push
xor
xor
pop
or
stc
push
push
add
pop
jl
xor
add
ja
jnp
dec
inc
jl
cmp
jbe
push
add
pop
test
xchg
or
stc
push
push
push
mov
mov
bswap
mov
mov
bswap
mov
mov
dec
inc
clc
push
push
sub
pop
pop
push
push
dec
pop
pop
jp
test
push
push
not
not
pop
pop
jle
or
sub
or
push
mov
pop
test
push
test
pop
push
jns
push
neg
neg
pop
pop
jp
push
jne
or
pop
and
jo
push
mov
pop
dec
inc
js
push
jb
test
pop
shr
push
xchg
xchg
pop
cmp
cmc
clc
clc
add
mov
mov
shl
sub
mov
xor
sub
mov
shr
xor
sub
sub
mov
shl
sub
mov
xor
sub
mov
shr
xor
sub
sub
sub
or
jns
sar
jbe
jo
jnp
dec
inc
push
mov
pop
inc
dec
push
add
ror
push
push
jo
jp
std
cld
pop
pop
inc
dec
sub
loop
pop
mov
bswap
mov
mov
bswap
mov
pop
pop
push
pop
push
jge
test
pop
or
cmp
jns
push
or
pop
clc
jne
jg
push
shl
pop
jnp
push
test
pop
jge
jnp
jno
push
mov
pop
test
push
jo
or
pop
push
push
je
test
pop
pop
push
push
mov
pop
pop
clc
jnp
push
add
pop
stc
ret
jno
push
add
pop
xor
push
push
push
pop
pop
pop
push
jnp
push
add
pop
neg
neg
test
push
test
pop
push
cmp
pop
sar
xor
dec
inc
push
cmp
pop
jb
cmp
clc
clc
add
or
sub
push
jnp
test
pop
stc
and
push
add
cmp
push
rol
pop
push
push
or
pop
pop
mov
jne
push
push
rol
pop
pop
xor
push
jge
cmp
pop
push
push
rol
pop
pop
jno
jns
push
ror
pop
xor
jge
push
ror
pop
push
or
pop
push
jne
cmp
pop
stc
push
pop
jns
cmp
push
mov
pop
push
push
pop
pop
rol
cmc
jg
je
ja
shr
push
jnp
push
add
pop
add
push
sub
pop
cmc
jg
jns
xor
jbe
test
push
je
test
pop
push
and
pop
jle
push
ror
pop
or
cld
jo
lea
push
push
or
pop
pop
jno
push
jne
push
dec
pop
pop
jne
jle
add
push
jns
cmp
pop
push
jno
rol
pop
xchg
xchg
jge
push
jg
sub
pop
jae
jae
xchg
push
push
add
pop
push
jno
cld
pop
push
pop
sub
push
or
pop
jns
jbe
test
dec
inc
and
cld
clc
push
jb
xor
pop
nop
push
ror
pop
test
jg
jne
cld
js
jnp
add
push
push
add
pop
test
neg
neg
or
stc
jg
push
push
ror
pop
pop
sar
mov
push
js
lea
pop
push
shl
pop
sub
stc
push
jno
push
add
pop
test
jge
sub
push
sub
pop
jbe
push
shl
pop
jo
rol
test
push
not
not
pop
cld
cltd
jns
pop
mov
and
mov
mov
.byte
